
979f1a0ef688c1dddd5a0efe3a52aaecb7719a7581c242d55af7c3bd9368cbcb.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	les    eax,FWORD PTR [eax-0x1f]
  411003:	cld    
  411004:	(bad)  
  411006:	push   0xffffff9a
  411008:	xchg   ebx,eax
  411009:	stos   DWORD PTR es:[edi],eax
  41100a:	cmp    cl,bl
  41100c:	dec    ebx
  41100d:	inc    esp
  41100e:	cmp    BYTE PTR [edi-0x3c5a203d],bh
  411014:	shl    BYTE PTR [ecx+0x78726bf9],0x33
  41101b:	js     0x41100e
  41101d:	or     cl,BYTE PTR [edx]
  41101f:	pop    ss
  411020:	and    eax,0xd955708c
  411025:	inc    edx
  411026:	repz jp 0x410fe3
  411029:	mov    eax,ds:0x4271bb87
  41102e:	mov    ebp,0x35d40cb7
  411033:	mov    edi,0x59c941c9
  411038:	push   edx
  411039:	add    esi,ebx
  41103b:	xor    edx,ebp
  41103d:	std    
  41103e:	jnp    0x411058
  411040:	xchg   dl,bh
  411042:	sub    eax,0x9fa39ed5
  411047:	(bad)  [ebx+0x52]
  41104a:	jne    0x410fed
  41104c:	in     al,dx
  41104d:	ficomp WORD PTR ds:0xaa503cb1
  411053:	jp     0x41100d
  411055:	js     0x41101e
  411057:	mov    edi,0x37b1f7f0
  41105c:	inc    edx
  41105d:	ss retf 0x489a
  411061:	rcl    DWORD PTR [ecx],1
  411063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411064:	fwait
  411065:	jle    0x4110dd
  411067:	pop    esp
  411068:	mov    esi,0xccc3bb4b
  41106d:	adc    eax,0x3932a82e
  411072:	fwait
  411073:	jne    0x411030
  411075:	daa    
  411076:	push   ds
  411077:	push   0xbe3a1187
  41107c:	sar    DWORD PTR [edx+0x75],cl
  41107f:	mov    eax,ds:0xefe84fd7
  411084:	add    al,0xe9
  411086:	mov    ds:0xdace993c,al
  41108b:	aad    0xa9
  41108d:	cmp    BYTE PTR [edx],bl
  41108f:	icebp  
  411090:	lds    ebx,FWORD PTR ss:[eax-0x2f859a33]
  411097:	push   edx
  411098:	sub    ebp,esp
  41109a:	cmp    ch,ah
  41109c:	xchg   edx,eax
  41109d:	retf   0x5b68
  4110a0:	add    edx,esp
  4110a2:	jbe    0x4110a5
  4110a4:	inc    esp
  4110a5:	xor    eax,0xb8282990
  4110aa:	xchg   edi,ebx
  4110ac:	fidivr DWORD PTR [ebx+0x3f5c1aa1]
  4110b2:	outs   dx,DWORD PTR ds:[esi]
  4110b3:	sbb    al,0x62
  4110b5:	js     0x4110cf
  4110b7:	pusha  
  4110b8:	inc    ebp
  4110b9:	xchg   DWORD PTR [eax+0x2334132d],edi
  4110bf:	leave  
  4110c0:	mov    DWORD PTR [ebp+0xf895685],ebx
  4110c6:	and    al,0xe6
  4110c8:	mov    BYTE PTR [ecx+0x6f],bh
  4110cb:	addr16 sysret 
  4110ce:	aas    
  4110cf:	out    dx,al
  4110d0:	std    
  4110d1:	jp     0x4110a0
  4110d3:	(bad)  
  4110d4:	and    eax,0x3dbfc52
  4110d9:	(bad)  
  4110da:	aaa    
  4110db:	retf   
  4110dc:	fld    TBYTE PTR [ebx-0x1a0f8e06]
  4110e2:	sbb    edx,DWORD PTR [ebx+0x4d]
  4110e5:	outs   dx,BYTE PTR ds:[esi]
  4110e6:	daa    
  4110e7:	xchg   ebx,eax
  4110e8:	inc    ebp
  4110e9:	mov    esp,0x90f7db14
  4110ee:	inc    edi
  4110ef:	repz push ss
  4110f1:	xchg   ebx,eax
  4110f2:	lahf   
  4110f3:	adc    BYTE PTR [esi-0x68cb42f1],al
  4110f9:	dec    esi
  4110fa:	out    0x11,al
  4110fc:	dec    ecx
  4110fd:	or     eax,0x60925aed
  411102:	stos   DWORD PTR es:[edi],eax
  411103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411104:	cli    
  411105:	xor    eax,0xa40b1757
  41110a:	outs   dx,BYTE PTR ds:[esi]
  41110b:	push   esp
  41110c:	dec    edi
  41110d:	aas    
  41110e:	call   0xd90123e1
  411113:	xchg   DWORD PTR [eax+ebp*8+0xa8fe584],esi
  41111a:	push   eax
  41111b:	popf   
  41111c:	mov    cl,0xdd
  41111e:	xchg   ebp,eax
  41111f:	inc    edi
  411120:	ja     0x411164
  411122:	or     al,BYTE PTR [edi]
  411124:	out    dx,eax
  411125:	dec    ebp
  411126:	iret   
  411127:	jmp    0x411144
  411129:	cmp    eax,ebx
  41112b:	hlt    
  41112c:	xor    ebp,DWORD PTR [edx+0x49]
  41112f:	cdq    
  411130:	inc    edi
  411131:	mov    dh,BYTE PTR [ebp+0x50]
  411134:	mov    edx,ds
  411136:	adc    DWORD PTR [ebp+0x45],esi
  411139:	rol    DWORD PTR ds:0x4cdeb392,0x4c
  411140:	dec    edx
  411141:	cmp    bh,cl
  411143:	mov    ds:0xd95cff66,eax
  411148:	retf   0xe0a3
  41114b:	and    ebp,esi
  41114d:	jle    0x4111a2
  41114f:	dec    esi
  411150:	lea    edi,[ecx+0x694efa1a]
  411156:	sti    
  411157:	(bad)  
  411158:	test   BYTE PTR [edx],0xa6
  41115b:	lods   eax,DWORD PTR ds:[esi]
  41115c:	repz cmp eax,0x3937a187
  411162:	and    al,0x3f
  411164:	shl    BYTE PTR [ecx],cl
  411166:	push   es
  411167:	fs sub cl,dl
  41116a:	pusha  
  41116b:	jl     0x41119e
  41116d:	ds je  0x4111d2
  411170:	cld    
  411171:	add    eax,0xa4f0b964
  411176:	inc    esp
  411177:	ret    
  411178:	inc    ecx
  411179:	cwde   
  41117a:	xchg   edi,eax
  41117b:	out    0xd5,eax
  41117d:	jne    0x41114e
  41117f:	jmp    0x411189
  411181:	addr16 in eax,dx
  411183:	jo     0x411186
  411185:	into   
  411186:	(bad)  
  411187:	xor    edx,DWORD PTR [ebp+0x6c04b0da]
  41118d:	sub    eax,0x8dd7452c
  411192:	retf   0x27e6
  411195:	cmp    eax,0x6582aa63
  41119a:	cmc    
  41119b:	rcr    BYTE PTR [ecx],cl
  41119d:	adc    al,0x7f
  41119f:	mov    edx,0xafd480aa
  4111a4:	sub    ch,BYTE PTR [edi]
  4111a6:	addr16 jg 0x4111d5
  4111a9:	imul   esi,esi,0xffffffc4
  4111ac:	popf   
  4111ad:	jecxz  0x41117f
  4111af:	retf   
  4111b0:	outs   dx,DWORD PTR ds:[esi]
  4111b1:	sbb    edx,esi
  4111b3:	add    BYTE PTR [edi],dh
  4111b5:	(bad)  
  4111b6:	ret    0x288e
  4111b9:	sub    al,0x26
  4111bb:	lods   al,BYTE PTR ds:[esi]
  4111bc:	jecxz  0x4111ce
  4111be:	pop    edx
  4111bf:	cmp    al,0x64
  4111c1:	push   eax
  4111c2:	mov    al,0x57
  4111c4:	ins    DWORD PTR es:[edi],dx
  4111c5:	push   0x8
  4111c7:	cwde   
  4111c8:	mov    eax,0x12777ac
  4111cd:	jecxz  0x41118f
  4111cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111d0:	xlat   BYTE PTR ds:[ebx]
  4111d1:	cli    
  4111d2:	sti    
  4111d3:	inc    edi
  4111d4:	ret    
  4111d5:	jl     0x4111b9
  4111d7:	push   esp
  4111d8:	jp     0x4111e2
  4111da:	xchg   DWORD PTR [edi+0x1f],esp
  4111dd:	cmp    esi,eax
  4111df:	ror    BYTE PTR [esp+esi*1-0x69e7968a],cl
  4111e6:	dec    esi
  4111e7:	into   
  4111e8:	das    
  4111e9:	cmp    ebx,eax
  4111eb:	or     BYTE PTR [eax+0x2eaa0cac],dh
  4111f1:	sti    
  4111f2:	mov    eax,ds:0x6056b486
  4111f7:	jno    0x4111ba
  4111f9:	pop    edi
  4111fa:	xor    eax,0xe13e4c73
  4111ff:	stos   BYTE PTR es:[edi],al
  411200:	bound  ecx,QWORD PTR [edi]
  411202:	pop    ebp
  411203:	mov    ah,0x90
  411205:	jbe    0x4111f9
  411207:	lea    ebx,[edi+ebp*1]
  41120a:	jmp    0x4111b0
  41120c:	inc    edx
  41120d:	hlt    
  41120e:	push   esi
  41120f:	(bad)  
  411210:	aas    
  411211:	dec    edx
  411212:	sbb    eax,0x93d0789c
  411217:	dec    esp
  411218:	add    eax,0x3046e5ef
  41121d:	push   edi
  41121e:	xchg   esp,eax
  41121f:	xchg   esi,eax
  411220:	rcr    DWORD PTR [ebx-0x29],cl
  411223:	out    dx,eax
  411224:	adc    al,0xfc
  411226:	xor    ah,BYTE PTR [ebx+0x37103cf6]
  41122c:	adc    BYTE PTR [eax],0x50
  41122f:	ins    BYTE PTR es:[edi],dx
  411230:	scas   al,BYTE PTR es:[edi]
  411231:	mov    BYTE PTR [edx+0x7beeb679],bl
  411237:	cs cmp edx,0xffffffa7
  41123b:	retf   
  41123c:	scas   eax,DWORD PTR es:[edi]
  41123d:	cmc    
  41123e:	mov    WORD PTR [eax-0x5d5372f5],es
  411244:	push   edi
  411245:	out    0x8f,al
  411247:	lds    edx,FWORD PTR [edi+0x352fe81b]
  41124d:	jno    0x411279
  41124f:	sahf   
  411250:	xor    esp,ebx
  411252:	mov    cl,0x3e
  411254:	daa    
  411255:	jae    0x41126a
  411257:	fadd   st,st(5)
  411259:	xchg   esp,eax
  41125a:	adc    ebx,DWORD PTR [ebp+0x15d69809]
  411260:	mov    WORD PTR [ebp-0x17],ss
  411263:	mov    esp,DWORD PTR [edi-0x15]
  411266:	add    eax,0x6e80773a
  41126b:	xchg   ebx,eax
  41126c:	aam    0x41
  41126e:	pop    esi
  41126f:	or     edi,DWORD PTR [ecx+0x3fa927ea]
  411275:	add    ecx,0x0
  411278:	not    esp
  41127a:	mov    dl,0xf5
  41127c:	jmp    0xce47:0x23da4d7f
  411283:	pusha  
  411284:	(bad)  
  411285:	cmp    al,0xfc
  411287:	leave  
  411288:	push   0x2260af40
  41128d:	mov    eax,0x3ac26d7b
  411292:	dec    edi
  411293:	sub    BYTE PTR [ebp-0x5012836],dl
  411299:	mov    bh,0xf1
  41129b:	adc    al,0x6b
  41129d:	ja     0x411263
  41129f:	call   0x4a5c08ff
  4112a4:	push   es
  4112a5:	push   ss
  4112a6:	pop    edi
  4112a7:	fiadd  DWORD PTR [ebp+0x4ddbc314]
  4112ad:	arpl   WORD PTR [edx+0x2ae60a85],ax
  4112b3:	test   BYTE PTR [edx],ah
  4112b5:	ret    0x3ecd
  4112b8:	lods   eax,DWORD PTR ds:[esi]
  4112b9:	inc    edx
  4112ba:	mov    ecx,DWORD PTR ds:0xedc5e13c
  4112c0:	retf   
  4112c1:	mov    edi,0xabbc11e3
  4112c6:	mov    es,ebx
  4112c8:	stos   DWORD PTR es:[edi],eax
  4112c9:	mov    ds:0x7832f2a2,al
  4112ce:	jae    0x4112e0
  4112d0:	cdq    
  4112d1:	inc    ecx
  4112d2:	push   0x5ef9fe6f
  4112d7:	mov    dl,0x17
  4112d9:	add    dh,ch
  4112db:	das    
  4112dc:	sub    ebx,DWORD PTR [ebp+0xca72c4d]
  4112e2:	push   0x14
  4112e4:	and    al,0xc0
  4112e6:	push   edx
  4112e7:	loopne 0x4112fa
  4112e9:	push   edx
  4112ea:	sbb    esi,DWORD PTR [edi-0x74f91a38]
  4112f0:	std    
  4112f1:	fcom   st(2)
  4112f3:	jmp    0xd4d7f9c
  4112f8:	sbb    ebp,ebx
  4112fa:	pop    eax
  4112fb:	push   es
  4112fc:	xor    BYTE PTR [edi+0x3b8baad2],bh
  411302:	add    DWORD PTR [edx-0x58],ebx
  411305:	outs   dx,BYTE PTR ds:[esi]
  411306:	dec    edi
  411307:	(bad)  
  411308:	call   0xef59:0xdf4b15fc
  41130f:	mov    cs,WORD PTR [esi]
  411311:	dec    eax
  411312:	stos   BYTE PTR es:[edi],al
  411313:	pop    edx
  411314:	fldln2 
  411316:	stos   DWORD PTR es:[edi],eax
  411317:	pop    edi
  411318:	ja     0x4112a5
  41131a:	xor    eax,DWORD PTR [edx-0x46]
  41131d:	ja     0x4112e9
  41131f:	add    edi,ebx
  411321:	dec    esp
  411322:	xchg   DWORD PTR [esi],edx
  411324:	sar    DWORD PTR [eax-0x3a],cl
  411327:	lock lea ebp,[ecx]
  41132a:	jp     0x41139d
  41132c:	je     0x41132e
  41132e:	mov    ebx,0x86f76eb3
  411333:	addr16 (bad) 
  411335:	sub    al,BYTE PTR [esi-0x7f]
  411338:	dec    ebp
  411339:	dec    ebx
  41133a:	je     0x4112bf
  41133c:	ins    DWORD PTR es:[edi],dx
  41133d:	aam    0x1f
  41133f:	mov    al,ds:0x8a275b5c
  411344:	jmp    0xc90:0xd0dced8
  41134b:	and    DWORD PTR [ebx+0x2a],ecx
  41134e:	cwde   
  41134f:	jle    0x4113ad
  411351:	std    
  411352:	push   0x18f90faa
  411357:	jb     0x41136c
  411359:	pop    ecx
  41135a:	adc    al,BYTE PTR [edx]
  41135c:	fs cmp eax,0x9a1e040b
  411362:	pop    esp
  411363:	cmp    eax,0x2f1cecde
  411368:	or     ch,BYTE PTR [edi]
  41136a:	(bad)  
  41136b:	xchg   edi,eax
  41136c:	xlat   BYTE PTR ds:[ebx]
  41136d:	mov    al,ds:0xe20610f7
  411372:	push   esp
  411373:	cmp    edi,esi
  411375:	inc    esi
  411376:	in     eax,0x98
  411378:	jge    0x41139e
  41137a:	sub    dl,bh
  41137c:	cli    
  41137d:	std    
  41137e:	int3   
  41137f:	shl    cl,cl
  411381:	test   DWORD PTR [edi-0x368e8a81],0x4a52673d
  41138b:	cmc    
  41138c:	data16 fimul WORD PTR [esi+0x12]
  411390:	leave  
  411391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411392:	add    edi,0xffffffba
  411395:	dec    edi
  411396:	test   al,0x8c
  411398:	ds jp  0x411380
  41139b:	xchg   ecx,eax
  41139c:	xchg   ebp,eax
  41139d:	vsubps ymm5,ymm0,YMMWORD PTR [ecx+eax*1]
  4113a2:	push   eax
  4113a3:	or     BYTE PTR [edx-0x76],al
  4113a6:	adc    ax,WORD PTR [edx+0x447f3e9f]
  4113ad:	adc    ah,bl
  4113af:	cwde   
  4113b0:	xlat   BYTE PTR ds:[ebx]
  4113b1:	mov    ah,0xe1
  4113b3:	push   edx
  4113b4:	ret    
  4113b5:	dec    esi
  4113b6:	mov    dh,BYTE PTR [esi-0x22]
  4113b9:	aam    0x79
  4113bb:	fwait
  4113bc:	ret    
  4113bd:	jle    0x411413
  4113bf:	out    0xeb,al
  4113c1:	pop    ebp
  4113c2:	dec    edi
  4113c3:	jle    0x411399
  4113c5:	js     0x4113ba
  4113c7:	js     0x4113f6
  4113c9:	dec    edx
  4113ca:	mov    ds:0xbda1e5ea,eax
  4113cf:	pusha  
  4113d0:	outs   dx,BYTE PTR ds:[esi]
  4113d1:	jmp    0x959:0x2a1c66fa
  4113d8:	cmp    BYTE PTR ds:0x6a4422c,al
  4113de:	shr    DWORD PTR [edi+eiz*2-0x5a14133e],cl
  4113e5:	sahf   
  4113e6:	(bad)  
  4113e7:	pop    ds
  4113e8:	mov    ds:0xb2206a8c,al
  4113ed:	sar    bl,0xbb
  4113f0:	lock mov edi,0x7f3220b8
  4113f6:	pop    ebp
  4113f7:	scas   eax,DWORD PTR es:[edi]
  4113f8:	push   edx
  4113f9:	cmp    edx,eax
  4113fb:	loope  0x411452
  4113fd:	xchg   edi,eax
  4113fe:	test   DWORD PTR [ecx+0x54bd74bc],edx
  411404:	mov    al,0x4d
  411406:	stc    
  411407:	shr    BYTE PTR [ecx+0x457c70c8],0xe0
  41140e:	lea    esi,[eax]
  411410:	jmp    0x5d7e205a
  411415:	sub    DWORD PTR [esi],eax
  411417:	or     al,0xa0
  411419:	inc    esp
  41141a:	sar    DWORD PTR [edx+ecx*1-0x69899754],1
  411421:	pop    ss
  411422:	mov    DWORD PTR [edx-0x4f857137],ecx
  411428:	mov    eax,ds:0x5ea0d4e4
  41142d:	or     esi,edx
  41142f:	lds    edx,FWORD PTR [eax-0x33176f91]
  411435:	jne    0x4113e8
  411437:	in     eax,dx
  411438:	xchg   ecx,eax
  411439:	push   ebp
  41143a:	cld    
  41143b:	mov    es,WORD PTR [ebx+ebp*4+0x74dc7559]
  411442:	mov    ah,0xf1
  411444:	mov    gs,WORD PTR [edx+0xb]
  411447:	xor    BYTE PTR [esi+0x7c59f29c],bl
  41144d:	stos   DWORD PTR es:[edi],eax
  41144e:	inc    ebx
  41144f:	mov    cl,0xfd
  411451:	dec    ecx
  411452:	mov    ah,0x25
  411454:	in     eax,0x6c
  411456:	cmp    eax,0xa969a42a
  41145b:	sbb    edx,DWORD PTR [ebp+0x33]
  41145e:	gs push 0x8dd348c1
  411464:	xchg   esp,eax
  411465:	mov    esp,0xf55341b4
  41146a:	fmul   DWORD PTR [esi-0x3a]
  41146d:	push   eax
  41146e:	and    ah,BYTE PTR [edi+0x6]
  411471:	push   ebp
  411472:	clc    
  411473:	not    BYTE PTR [ebx]
  411475:	aad    0xd3
  411477:	pop    DWORD PTR [ecx]
  411479:	cmp    BYTE PTR [ebp+0x61],bh
  41147c:	aaa    
  41147d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41147e:	mov    bh,0x70
  411480:	jne    0x4114db
  411482:	xchg   ebx,ebx
  411484:	dec    edi
  411485:	inc    esi
  411486:	call   0x4048:0xe1a5386a
  41148d:	pop    ebp
  41148e:	nop
  41148f:	gs mov ebp,0xfaf39485
  411495:	retw   
  411497:	fimul  DWORD PTR [esi]
  411499:	push   edx
  41149a:	lods   eax,DWORD PTR ds:[esi]
  41149b:	test   BYTE PTR [edx+ebx*8+0x4],al
  41149f:	mov    esi,0x8e452aa4
  4114a4:	inc    eax
  4114a5:	cli    
  4114a6:	mov    al,ds:0x3b65306a
  4114ab:	sbb    eax,0xe0c5a916
  4114b0:	in     al,0xae
  4114b2:	jb     0x41144f
  4114b4:	ja     0x41145f
  4114b6:	daa    
  4114b7:	aas    
  4114b8:	jae    0x411509
  4114ba:	mov    eax,0xd7ce95eb
  4114bf:	fadd   st,st(3)
  4114c1:	sbb    esi,0xc937c9ab
  4114c7:	mov    ebp,0x4cc60c8
  4114cc:	push   es
  4114cd:	push   eax
  4114ce:	adc    bh,BYTE PTR [esp+edx*8]
  4114d1:	fimul  WORD PTR [ecx-0x241b4270]
  4114d7:	cmc    
  4114d8:	push   edi
  4114d9:	inc    ebp
  4114da:	(bad)  
  4114dc:	jno    0x4114d5
  4114de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114df:	pushf  
  4114e0:	int    0x78
  4114e2:	add    eax,0x5acbd9ff
  4114e7:	aas    
  4114e8:	int    0xf0
  4114ea:	adc    DWORD PTR ds:0x2b303452,ebx
  4114f0:	inc    ecx
  4114f1:	sbb    esp,ecx
  4114f3:	call   0xc79e:0x4fb0119d
  4114fa:	mov    ds:0xf6385aa9,al
  4114ff:	clc    
  411500:	pop    ebx
  411501:	mov    dl,0x71
  411503:	ja     0x411533
  411505:	data16 jne 0x4114d7
  411508:	xchg   edx,eax
  411509:	aad    0xb4
  41150b:	scas   al,BYTE PTR es:[edi]
  41150c:	pushf  
  41150d:	dec    edi
  41150e:	add    bh,BYTE PTR [ebp+0x1be0813]
  411514:	in     eax,0x55
  411516:	inc    esi
  411517:	dec    ebp
  411518:	dec    ebx
  411519:	xchg   ebp,eax
  41151a:	cld    
  41151b:	mov    BYTE PTR [edi],al
  41151d:	mov    edx,0x60252679
  411522:	nop
  411523:	nop
  411524:	leave  
  411525:	xor    ebx,DWORD PTR [ebx+0x72c43fda]
  41152b:	xchg   BYTE PTR [ebx+0x3a877e88],al
  411531:	add    BYTE PTR ds:0x99b7f337,al
  411537:	sbb    DWORD PTR [ecx],ebx
  411539:	nop
  41153a:	aad    0x72
  41153c:	mov    ?,esp
  41153e:	lea    edx,ds:0xe96c7c6c
  411544:	xlat   BYTE PTR ds:[ebx]
  411545:	cmp    BYTE PTR [ebx+eiz*8+0x3336ea84],0x40
  41154d:	clc    
  41154e:	arpl   WORD PTR [edx],dx
  411550:	xchg   BYTE PTR [ecx],ch
  411552:	mov    edi,0xaca19b59
  411557:	and    DWORD PTR [ecx+0x6013663a],ecx
  41155d:	adc    dh,BYTE PTR [esi+0x54]
  411560:	xchg   edi,eax
  411561:	sub    ebp,DWORD PTR [esi+0x1f]
  411564:	pop    edx
  411565:	mov    ebp,0xf75bb592
  41156a:	jecxz  0x4115b7
  41156c:	fxch   st(3)
  41156e:	sub    eax,0xa5f7bc76
  411573:	cmp    DWORD PTR [ecx-0x6d],esi
  411576:	jmp    0x35ad:0xdd297732
  41157d:	pop    ds
  41157e:	and    cx,WORD PTR [ebp+0x1]
  411582:	stos   BYTE PTR es:[edi],al
  411583:	push   0x813930e0
  411588:	mov    es,WORD PTR [edi-0x1d]
  41158b:	mov    ah,0xbc
  41158d:	and    al,0xac
  41158f:	push   ebp
  411590:	loopne 0x41155e
  411592:	mov    dl,0xee
  411594:	sbb    BYTE PTR [edx+0x89a05d7],dh
  41159a:	and    eax,0xe22ac03c
  41159f:	scas   al,BYTE PTR es:[edi]
  4115a0:	inc    edx
  4115a1:	jmp    0x3b5b:0x20bfbef3
  4115a8:	jmp    ebx
  4115aa:	retf   
  4115ab:	xchg   esp,eax
  4115ac:	(bad)  
  4115ad:	in     eax,dx
  4115ae:	leave  
  4115af:	ret    
  4115b0:	imul   ebp,DWORD PTR [edi+0x7057d8fe],0xf0d9ba01
  4115ba:	mov    bh,0x55
  4115bc:	xlat   BYTE PTR ds:[ebx]
  4115bd:	and    eax,0x157eda02
  4115c2:	(bad)  
  4115c4:	int    0xdc
  4115c6:	(bad)  
  4115c7:	or     al,0xe5
  4115c9:	(bad)  
  4115cb:	mov    ds:0x54c796f6,eax
  4115d0:	sub    al,0xb5
  4115d2:	and    al,0xc8
  4115d4:	xor    esp,DWORD PTR [ebx]
  4115d6:	xor    ebx,DWORD PTR [esi+ebx*4+0x64]
  4115da:	cld    
  4115db:	js     0x411628
  4115dd:	stos   DWORD PTR es:[edi],eax
  4115de:	mov    al,0x52
  4115e0:	rol    dl,0xef
  4115e3:	cli    
  4115e4:	inc    esp
  4115e5:	mov    ch,0xe4
  4115e7:	sbb    BYTE PTR [esi-0x578473a7],dh
  4115ed:	shl    DWORD PTR [esi],0x91
  4115f0:	and    bl,bh
  4115f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115f3:	pop    ds
  4115f4:	xchg   edi,eax
  4115f5:	xor    DWORD PTR ds:0x6ced169,eax
  4115fb:	xchg   esp,eax
  4115fc:	sbb    al,0xce
  4115fe:	xchg   edi,eax
  4115ff:	loop   0x4115f4
  411601:	(bad)  [edi]
  411603:	and    al,0x8
  411605:	jbe    0x411592
  411607:	cs xchg edx,eax
  411609:	xchg   ebp,eax
  41160a:	add    ecx,ebx
  41160c:	call   0x30cb:0xe18c3ef1
  411613:	inc    ecx
  411614:	xchg   ecx,eax
  411615:	popa   
  411616:	std    
  411617:	popa   
  411618:	retf   
  411619:	cmp    BYTE PTR ds:0xf25ab03b,bh
  41161f:	dec    ebx
  411620:	test   eax,0x9b9167d7
  411625:	mov    eax,0xdb2fabeb
  41162a:	push   eax
  41162b:	pmulhuw mm4,mm5
  41162e:	add    eax,0xf0f02fcb
  411633:	lods   al,BYTE PTR ds:[esi]
  411634:	push   esi
  411635:	pop    esp
  411636:	xor    edx,DWORD PTR [ebp-0x699f3fee]
  41163c:	lds    esp,FWORD PTR [eax-0x6f]
  41163f:	or     DWORD PTR [eax-0x2acc6c20],0x3760b386
  411649:	pop    ebx
  41164a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41164b:	ins    DWORD PTR es:[edi],dx
  41164c:	int    0x96
  41164e:	lahf   
  41164f:	cmp    ebx,DWORD PTR [ecx-0x2b]
  411652:	sbb    bl,BYTE PTR [esi+0x723bd473]
  411658:	lahf   
  411659:	into   
  41165a:	test   al,0x37
  41165c:	mov    ebp,0x4ca48597
  411661:	loope  0x4116cf
  411663:	mov    esi,0x44d82a7f
  411668:	adc    eax,0x21804b15
  41166d:	jge    0x411650
  41166f:	scas   eax,DWORD PTR es:[edi]
  411670:	dec    edi
  411671:	mov    eax,0xb09f1285
  411676:	pusha  
  411677:	cmp    ebx,DWORD PTR [ebx-0x7bbd1a8a]
  41167d:	jle    0x411694
  41167f:	pop    esp
  411680:	arpl   bp,bx
  411682:	clc    
  411683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411684:	nop
  411685:	loop   0x4116a7
  411687:	sahf   
  411688:	in     al,0x64
  41168a:	call   0xf36a:0x443d954f
  411691:	and    al,0x35
  411693:	xchg   esp,eax
  411694:	cmc    
  411695:	push   eax
  411696:	sbb    bh,BYTE PTR [ecx-0x4584018b]
  41169c:	rol    DWORD PTR [ebx+0x72],1
  41169f:	fs inc esp
  4116a1:	in     al,0x47
  4116a3:	rcr    BYTE PTR [eax+0x76],0x58
  4116a7:	pusha  
  4116a8:	sar    BYTE PTR [esi+0x34],0x26
  4116ac:	mov    DWORD PTR [ecx+0x40fac521],esp
  4116b2:	add    al,0x71
  4116b4:	std    
  4116b5:	cmc    
  4116b6:	mov    eax,0xd9a50845
  4116bb:	shr    BYTE PTR [ecx-0xefb2b14],cl
  4116c1:	sub    DWORD PTR [esi+0x55c9005a],ebp
  4116c7:	adc    eax,0x18e21437
  4116cc:	dec    edi
  4116cd:	jecxz  0x41166e
  4116cf:	ffree  st(1)
  4116d1:	rol    DWORD PTR [esi],0x1a
  4116d4:	ss cmp ch,0xc3
  4116d8:	or     edi,DWORD PTR [edx]
  4116da:	inc    edx
  4116db:	in     eax,dx
  4116dc:	in     al,dx
  4116dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116de:	nop
  4116df:	call   0xbf22:0x3cb6c663
  4116e6:	and    eax,0xb4aa3d52
  4116eb:	jne    0x411766
  4116ed:	cmp    eax,DWORD PTR [edi]
  4116ef:	fs clc 
  4116f1:	xor    ebx,DWORD PTR [edi-0x778edfad]
  4116f7:	mov    esp,0xc376e404
  4116fc:	imul   ebp,DWORD PTR ds:[edi*1+0x1cf55646],0x0
  411705:	test   DWORD PTR [ebx],eax
  411707:	and    al,0xf4
  411709:	mov    bl,0xcd
  41170b:	dec    ebx
  41170c:	xchg   ecx,eax
  41170d:	cmp    BYTE PTR [edi],dh
  41170f:	dec    esi
  411710:	daa    
  411711:	je     0x411713
  411713:	adc    eax,0x167a77bd
  411718:	xor    eax,0xbca2f2a4
  41171d:	int    0x44
  41171f:	out    dx,eax
  411720:	xor    esi,eax
  411722:	scas   eax,DWORD PTR es:[edi]
  411723:	inc    esi
  411724:	addr16 pushf 
  411726:	in     eax,dx
  411727:	mov    edi,ecx
  411729:	or     DWORD PTR [esi+0x235c19fb],0xc7af6bb9
  411733:	arpl   WORD PTR [esi],bx
  411735:	div    BYTE PTR [esi-0x4b45067]
  41173b:	dec    ebx
  41173c:	dec    ebp
  41173d:	repz xor cl,BYTE PTR [eax-0x1a15fc58]
  411744:	sub    ebp,DWORD PTR [esi+0x33]
  411747:	lods   eax,DWORD PTR ds:[esi]
  411748:	mov    eax,ds:0x6b5eaaac
  41174d:	or     ch,BYTE PTR [edx-0x2d6bcde6]
  411753:	adc    esp,eax
  411755:	sbb    eax,0xe57b2973
  41175a:	dec    edx
  41175b:	(bad)  
  41175c:	pop    ebp
  41175d:	(bad)  
  41175f:	out    0x2a,al
  411761:	retf   
  411762:	and    edi,esi
  411764:	int3   
  411765:	mov    ?,WORD PTR ds:0x5ec8279d
  41176b:	inc    esi
  41176c:	iret   
  41176d:	scas   al,BYTE PTR es:[edi]
  41176e:	jb     0x4117e4
  411770:	mov    eax,ds:0xb30728ec
  411775:	push   ebp
  411776:	lods   al,BYTE PTR ds:[esi]
  411777:	and    al,0xe4
  411779:	and    al,0x7a
  41177b:	icebp  
  41177c:	int3   
  41177d:	xor    dl,BYTE PTR [edi]
  41177f:	data16 hlt 
  411781:	cmp    DWORD PTR [eax+0x58c28d2c],eax
  411787:	sbb    DWORD PTR [edi-0x214160c1],edx
  41178d:	dec    edx
  41178e:	pop    edx
  41178f:	xchg   edx,eax
  411790:	cmp    esp,ebp
  411792:	out    dx,eax
  411793:	cli    
  411794:	mov    fs,WORD PTR [ebx-0x1833ae9f]
  41179a:	lock (bad) 
  41179d:	test   DWORD PTR [ecx],0xbb57a61d
  4117a3:	sub    eax,0xa9efeb8c
  4117a8:	das    
  4117a9:	push   edi
  4117aa:	(bad)  
  4117ab:	sbb    bl,BYTE PTR [ebx+eax*8+0x492c40bb]
  4117b2:	(bad)  
  4117b3:	or     ah,BYTE PTR [eax+esi*2-0x982adf7]
  4117ba:	mov    eax,ds:0x860f6c05
  4117bf:	push   edx
  4117c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117c2:	call   0x18a525c
  4117c7:	std    
  4117c8:	aas    
  4117c9:	sahf   
  4117ca:	(bad)  
  4117cb:	outs   dx,DWORD PTR ds:[esi]
  4117cc:	push   ss
  4117cd:	xchg   ecx,eax
  4117ce:	stos   BYTE PTR es:[edi],al
  4117cf:	mov    edi,0x577b3f03
  4117d4:	mov    al,0xc6
  4117d7:	(bad)  
  4117d8:	popa   
  4117d9:	xor    bp,WORD PTR [eax]
  4117dc:	(bad)  
  4117dd:	aas    
  4117de:	out    dx,eax
  4117df:	cmp    ah,ch
  4117e1:	arpl   WORD PTR [ecx-0x3c],sp
  4117e4:	jbe    0x41185c
  4117e6:	pop    edx
  4117e7:	stos   WORD PTR es:[edi],ax
  4117e9:	jno    0x411793
  4117eb:	cmp    esp,DWORD PTR [ebx]
  4117ed:	out    dx,eax
  4117ee:	add    DWORD PTR [eax-0x17],edx
  4117f1:	and    eax,0x2685b145
  4117f6:	out    0x0,al
  4117f8:	out    dx,al
  4117f9:	push   edx
  4117fa:	je     0x4117d8
  4117fc:	enter  0x9394,0xb2
  411800:	fwait
  411801:	out    0x6a,eax
  411803:	xchg   BYTE PTR [eax+0x7d],al
  411806:	fbstp  TBYTE PTR [ebp+0x6d]
  411809:	cmp    BYTE PTR [ecx],dh
  41180b:	and    al,BYTE PTR ds:0x804b8c51
  411811:	stc    
  411812:	mov    ds:0xd8b3b62a,eax
  411817:	(bad)  
  411818:	hlt    
  411819:	(bad)  
  41181a:	fisubr WORD PTR [ebp+0x2b63eece]
  411820:	push   ebp
  411821:	push   ss
  411822:	push   ebx
  411823:	push   esp
  411824:	mov    cl,0xf3
  411826:	imul   esp,DWORD PTR [esp+eax*4-0x4f],0x9777421d
  41182e:	sbb    edx,DWORD PTR ds:0xbe24a5c5
  411834:	add    dh,dh
  411836:	jp     0x4117d2
  411838:	daa    
  411839:	(bad)  
  41183a:	mov    eax,ds:0x2e14a442
  41183f:	xchg   edi,eax
  411840:	fsub   QWORD PTR [ebp+0x76]
  411843:	lock inc edx
  411845:	ja     0x4117f9
  411847:	and    al,0xd4
  411849:	adc    bl,dl
  41184b:	mov    esp,0x5a1fac67
  411850:	push   cs
  411851:	push   ds
  411852:	mov    edx,0xf6cfa00c
  411857:	dec    esp
  411858:	imul   esp,DWORD PTR [eax+edx*8],0xffffffa2
  41185c:	lea    edi,[eax]
  41185e:	pop    ebx
  41185f:	push   edi
  411860:	dec    eax
  411861:	sahf   
  411862:	add    bl,BYTE PTR [ecx+0x2e]
  411865:	out    dx,al
  411866:	push   ds
  411867:	lds    edi,FWORD PTR [edi-0x77360026]
  41186d:	bound  ebp,QWORD PTR [eax-0x37a08ec4]
  411873:	mov    eax,ds:0xbd1d1651
  411878:	mov    esp,0x786da6e2
  41187d:	mov    ebx,0x530d7204
  411882:	ss push ecx
  411884:	in     al,dx
  411885:	aaa    
  411886:	loop   0x4118ea
  411888:	nop
  411889:	push   esp
  41188a:	iret   
  41188b:	fisttp WORD PTR [edx-0x1c]
  41188e:	jmp    0x6bd15f5c
  411893:	push   es
  411894:	and    ebp,esi
  411896:	sbb    DWORD PTR [edi+0x135d40b9],ebx
  41189c:	add    BYTE PTR [eax+eiz*4],bh
  41189f:	loopne 0x4118b5
  4118a1:	add    al,0x42
  4118a3:	ins    DWORD PTR es:[edi],dx
  4118a4:	ret    
  4118a5:	dec    edx
  4118a6:	cmp    BYTE PTR [eax],0x41
  4118a9:	xor    ecx,esi
  4118ab:	adc    eax,0xcc124b71
  4118b0:	adc    edx,DWORD PTR ds:0xb4534e12
  4118b6:	lock adc al,BYTE PTR [esi-0x72]
  4118ba:	mov    esi,0x44b9ff9e
  4118bf:	push   ebx
  4118c0:	ja     0x4118bc
  4118c2:	retf   
  4118c3:	aas    
  4118c4:	mov    cl,BYTE PTR [esi]
  4118c6:	mov    edi,0x58eea209
  4118cb:	cmp    al,0x8b
  4118cd:	dec    ebx
  4118ce:	jmp    0x11dd:0x31f7f938
  4118d5:	shl    BYTE PTR [eax+0x74bf732a],1
  4118db:	adc    ebp,ebp
  4118dd:	scas   al,BYTE PTR es:[edi]
  4118de:	js     0x4118c1
  4118e0:	mov    eax,0x780f544
  4118e5:	xchg   BYTE PTR [edx-0x77d7efad],bl
  4118eb:	jl     0x4118b9
  4118ed:	jnp    0x411912
  4118ef:	and    al,0xe9
  4118f1:	mov    ecx,DWORD PTR [eax-0x20]
  4118f4:	in     al,dx
  4118f5:	and    al,0xf9
  4118f7:	inc    eax
  4118f8:	sbb    al,0x89
  4118fa:	push   ds
  4118fb:	fst    QWORD PTR [edi]
  4118fd:	jle    0x411952
  4118ff:	pusha  
  411900:	rcl    DWORD PTR [ebx-0x780c194d],0xde
  411907:	adc    BYTE PTR [ebp-0x2b],0x9e
  41190b:	jle    0x41197c
  41190d:	ror    ah,cl
  41190f:	lds    ecx,FWORD PTR [esi-0x6a33ca72]
  411915:	pop    esi
  411916:	stc    
  411917:	pop    eax
  411918:	(bad)  
  411919:	stc    
  41191a:	and    cl,dh
  41191c:	mov    esp,DWORD PTR [ecx+0x7a]
  41191f:	jl     0x41193a
  411921:	and    eax,0xf17863be
  411926:	xor    edi,edi
  411928:	retf   
  411929:	jno    0x4118e2
  41192b:	arpl   WORD PTR [esi],di
  41192d:	div    DWORD PTR [eax]
  41192f:	aad    0xb4
  411931:	dec    ecx
  411932:	pushf  
  411933:	dec    ebp
  411934:	adc    dh,al
  411936:	iret   
  411937:	fist   DWORD PTR [eax+0x21]
  41193a:	inc    esi
  41193b:	outs   dx,BYTE PTR ds:[esi]
  41193c:	mov    dl,0x68
  41193e:	hlt    
  41193f:	jge    0x411943
  411941:	jl     0x4118cc
  411943:	mov    edi,0xc0e67c75
  411948:	cmp    ebp,DWORD PTR [esi-0xd]
  41194b:	leave  
  41194c:	dec    esi
  41194d:	mov    esp,0x82a5cb1c
  411952:	jmp    0x1e:0x776a950b
  411959:	mov    al,ds:0x871215a
  41195e:	add    ebx,DWORD PTR [ecx+0x18]
  411961:	idiv   DWORD PTR [ebx-0x57]
  411964:	je     0x411959
  411966:	jbe    0x4119a3
  411968:	add    DWORD PTR [esi],ebx
  41196a:	xor    eax,0x797b42e0
  41196f:	lock scas al,BYTE PTR es:[edi]
  411971:	pop    eax
  411972:	jb     0x411901
  411974:	mov    ebp,0x8c264cc3
  411979:	xchg   ecx,eax
  41197a:	adc    DWORD PTR [ebp+0x59],edx
  41197d:	ds xchg ebp,eax
  41197f:	jmp    0x4119bc
  411981:	sbb    esi,DWORD PTR [eax+0x5fcf6c91]
  411987:	nop
  411988:	(bad)  
  411989:	mov    bl,0x2a
  41198b:	sbb    ebp,0xe5804783
  411991:	dec    ebp
  411992:	repz scas eax,DWORD PTR es:[edi]
  411994:	mov    BYTE PTR [edx],al
  411996:	out    dx,al
  411997:	adc    al,0x2d
  411999:	imul   ecx,DWORD PTR [edx],0x7
  41199c:	leave  
  41199d:	in     al,0x7c
  41199f:	out    dx,eax
  4119a0:	jbe    0x4119ec
  4119a2:	jns    0x41193c
  4119a4:	pop    ecx
  4119a5:	mov    eax,?
  4119a7:	cmp    eax,0x39010157
  4119ac:	fst    st(5)
  4119ae:	inc    ecx
  4119af:	inc    ecx
  4119b1:	mov    dh,0xc1
  4119b3:	out    dx,eax
  4119b4:	scas   al,BYTE PTR es:[edi]
  4119b5:	push   ebx
  4119b6:	pusha  
  4119b7:	lahf   
  4119b8:	sbb    ebx,DWORD PTR [edx]
  4119ba:	ror    BYTE PTR [ecx-0x497d8c53],0xb1
  4119c1:	outs   dx,DWORD PTR ds:[esi]
  4119c2:	icebp  
  4119c3:	add    al,0xc8
  4119c5:	fnstcw WORD PTR [ebx]
  4119c7:	popf   
  4119c8:	mov    eax,ds:0xfbc70a19
  4119cd:	pop    edx
  4119ce:	loop   0x411987
  4119d0:	pop    ds
  4119d1:	push   ecx
  4119d2:	fcomp  DWORD PTR [edi+0x2549c168]
  4119d8:	daa    
  4119d9:	mov    esp,DWORD PTR [edi]
  4119db:	pushf  
  4119dc:	and    BYTE PTR [esi+0x26],dh
  4119df:	sti    
  4119e0:	je     0x411a2b
  4119e2:	cmp    DWORD PTR [esi-0xd],esp
  4119e5:	repnz sbb al,0xed
  4119e8:	rol    DWORD PTR [ecx-0x7f],cl
  4119eb:	mov    eax,ds:0x89548773
  4119f0:	(bad)  
  4119f2:	jb     0x41197a
  4119f4:	sbb    eax,DWORD PTR [si+0x5780]
  4119f9:	les    edx,FWORD PTR ds:0x5e34b2cf
  4119ff:	dec    esi
  411a00:	mov    esi,0xdb42c984
  411a05:	test   eax,0xa872c4ab
  411a0a:	rcr    dh,1
  411a0c:	jo     0x411a59
  411a0e:	dec    ebx
  411a10:	mov    dh,0x8
  411a12:	pop    esi
  411a13:	adc    BYTE PTR [edi+esi*1],ch
  411a16:	ss xchg edi,eax
  411a18:	jo     0x4119d5
  411a1a:	sbb    al,0xf8
  411a1c:	pop    ds
  411a1d:	adc    al,0x5
  411a1f:	push   ebp
  411a20:	aas    
  411a21:	and    bh,cl
  411a23:	and    DWORD PTR [eax],eax
  411a25:	(bad)  
  411a26:	adc    ch,al
  411a28:	xor    BYTE PTR [esi-0x45180557],bl
  411a2e:	and    DWORD PTR [ebx-0x7c5a2e72],ebp
  411a34:	and    ch,ch
  411a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a37:	loopne 0x411a9d
  411a39:	sbb    edi,ebp
  411a3b:	lds    edx,FWORD PTR [ebp+0x74]
  411a3e:	sub    DWORD PTR [esi],ebp
  411a40:	inc    edx
  411a41:	lea    edx,[ebx]
  411a43:	repz push edi
  411a45:	xor    dh,BYTE PTR [ecx+0x2d]
  411a48:	or     BYTE PTR gs:[ecx],bl
  411a4b:	retf   
  411a4c:	fwait
  411a4d:	xchg   ebx,eax
  411a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a4f:	test   BYTE PTR [ebx],cl
  411a51:	lea    edi,[ecx-0x56c98c94]
  411a57:	add    al,0x96
  411a59:	and    esp,edi
  411a5b:	in     eax,0x4a
  411a5d:	iret   
  411a5e:	push   esi
  411a5f:	aam    0x1d
  411a61:	jecxz  0x411aad
  411a63:	inc    ebx
  411a64:	out    dx,eax
  411a65:	sbb    esi,ebx
  411a67:	ds mov ecx,0xf1487f17
  411a6d:	xchg   edx,eax
  411a6e:	ja     0x411a9b
  411a70:	lahf   
  411a71:	js     0x411a2b
  411a73:	outs   dx,BYTE PTR ds:[esi]
  411a74:	pop    esp
  411a75:	pop    es
  411a76:	shr    ch,cl
  411a78:	repnz (bad) 
  411a7a:	rol    BYTE PTR [ecx+0x6e54d0c2],0xd6
  411a81:	ret    
  411a82:	push   edx
  411a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a84:	cmc    
  411a85:	cmp    ebp,DWORD PTR [edi]
  411a87:	sub    dl,BYTE PTR [ebx+edx*8+0x562fef10]
  411a8e:	pop    esp
  411a8f:	sub    bl,BYTE PTR [ebx+0xe35f9e5]
  411a95:	inc    ebp
  411a97:	cmp    edx,0x36
  411a9a:	lods   al,BYTE PTR ds:[esi]
  411a9b:	ins    BYTE PTR es:[edi],dx
  411a9c:	shr    DWORD PTR [ecx-0x9],1
  411a9f:	pop    eax
  411aa0:	sub    BYTE PTR [eax+edi*8],bl
  411aa3:	adc    BYTE PTR [edi],ah
  411aa5:	push   cs
  411aa6:	fst    DWORD PTR [esi]
  411aa8:	adc    DWORD PTR [edx+0x64],esi
  411aab:	xor    eax,0x501fa681
  411ab0:	sub    bh,ch
  411ab2:	inc    ebx
  411ab3:	or     eax,0x9893d917
  411ab8:	push   edi
  411ab9:	ins    BYTE PTR es:[edi],dx
  411aba:	inc    esp
  411abb:	pusha  
  411abc:	pop    ebp
  411abd:	test   ch,dh
  411abf:	fs (bad) 
  411ac1:	sti    
  411ac2:	fsub   DWORD PTR [esi-0x24008498]
  411ac8:	xchg   edi,eax
  411ac9:	cmp    BYTE PTR ds:[edi-0x10],bl
  411acd:	pop    ss
  411ace:	mov    ebp,0x806e5ad6
  411ad3:	push   0x2d
  411ad5:	shl    BYTE PTR [esi-0xa],cl
  411ad8:	test   al,0x2b
  411ada:	je     0x411ae6
  411adc:	ficom  DWORD PTR [ecx]
  411ade:	inc    ebx
  411adf:	aas    
  411ae0:	mov    esi,0x3afe289e
  411ae5:	inc    ebx
  411ae6:	or     eax,0x2d7a062c
  411aeb:	jle    0x411b23
  411aed:	xor    ebp,DWORD PTR [eax-0x5a]
  411af0:	aaa    
  411af1:	xchg   ecx,eax
  411af2:	test   al,0x72
  411af4:	fs jae 0x411ae0
  411af7:	xchg   edi,eax
  411af8:	pop    esp
  411af9:	inc    ebx
  411afa:	push   ebp
  411afb:	(bad)  
  411afc:	cmp    esi,DWORD PTR [edi-0x40]
  411aff:	adc    eax,ebp
  411b01:	inc    eax
  411b02:	mov    ecx,0xe7ba133d
  411b07:	push   ss
  411b08:	stos   BYTE PTR es:[edi],al
  411b09:	ins    DWORD PTR es:[edi],dx
  411b0a:	mov    esp,edx
  411b0c:	int    0x89
  411b0e:	push   eax
  411b0f:	(bad)  
  411b10:	pop    ecx
  411b11:	aas    
  411b12:	mov    esp,0xec5fd1f4
  411b17:	fcom   st(4)
  411b19:	mov    ecx,DWORD PTR [ebp+eax*8+0x9533495]
  411b20:	mov    dl,0x43
  411b22:	or     ch,BYTE PTR [ecx]
  411b24:	mov    ax,cs:0x7ecf4468
  411b2b:	outs   dx,DWORD PTR ds:[esi]
  411b2c:	dec    ebx
  411b2d:	pop    ds
  411b2e:	gs xchg edx,eax
  411b30:	dec    eax
  411b31:	jp     0x411af9
  411b33:	push   ds
  411b34:	scas   al,BYTE PTR es:[edi]
  411b35:	bound  ebx,QWORD PTR [ecx]
  411b37:	(bad)  
  411b38:	test   al,0xb3
  411b3a:	lock (bad) 
  411b3d:	lahf   
  411b3e:	dec    edx
  411b3f:	cdq    
  411b40:	in     al,0x5d
  411b42:	nop
  411b43:	jnp    0x411bc0
  411b45:	push   0x7d75c550
  411b4a:	mov    esp,0xbda0d9eb
  411b4f:	mov    bl,0x48
  411b51:	inc    BYTE PTR [eax-0x39b88348]
  411b57:	aaa    
  411b58:	in     eax,0x93
  411b5a:	dec    eax
  411b5b:	add    BYTE PTR [edi+0x6b8049c8],bh
  411b61:	xchg   esp,edi
  411b63:	sub    dh,al
  411b65:	mov    dh,0x5c
  411b67:	mov    edi,DWORD PTR [ebx+0x31]
  411b6a:	inc    ebx
  411b6b:	int3   
  411b6c:	pop    edi
  411b6d:	sub    esi,DWORD PTR [ebp-0x74]
  411b70:	lea    edx,[ecx+0x64]
  411b73:	and    al,0xfa
  411b75:	push   esi
  411b76:	das    
  411b77:	rcl    BYTE PTR [edx-0x6e],1
  411b7a:	fcmovne st,st(2)
  411b7c:	pop    ds
  411b7d:	shr    ebp,0x91
  411b80:	xor    eax,0x97c61f16
  411b85:	and    BYTE PTR [ebx+0x4db3334c],al
  411b8b:	sub    DWORD PTR [edx-0x37],ebp
  411b8e:	jmp    0x411bdc
  411b90:	adc    bl,BYTE PTR [esi+0x8584abc]
  411b96:	sub    cl,bl
  411b98:	jmp    0xaad6a8e
  411b9d:	mov    edx,0xfc9d3acc
  411ba2:	or     eax,0x24790e64
  411ba7:	leave  
  411ba8:	sahf   
  411ba9:	aad    0x51
  411bab:	(bad)  
  411bad:	add    DWORD PTR [ebp-0x2b],edi
  411bb0:	sub    bl,dh
  411bb2:	icebp  
  411bb3:	fcomp  DWORD PTR ds:0xc78f705d
  411bb9:	xor    BYTE PTR [eax-0x5d595299],dh
  411bbf:	mov    cl,0xc6
  411bc1:	fdivrp st(2),st
  411bc3:	adc    al,0x67
  411bc5:	dec    esi
  411bc6:	mov    dh,cl
  411bc8:	dec    ebx
  411bc9:	ins    BYTE PTR es:[edi],dx
  411bca:	in     al,0xf6
  411bcc:	sbb    al,0x84
  411bce:	popa   
  411bcf:	ror    BYTE PTR [ecx-0x35],1
  411bd2:	lds    ebp,FWORD PTR [eax]
  411bd4:	sub    al,0xda
  411bd6:	iret   
  411bd7:	cmc    
  411bd8:	mov    ebx,DWORD PTR [eax+0x78876354]
  411bde:	lods   eax,DWORD PTR ds:[esi]
  411bdf:	lahf   
  411be0:	mov    esp,0xda1efcbb
  411be5:	sbb    eax,0xc0fdcf76
  411bea:	fistp  WORD PTR [edx+0x32d8007b]
  411bf0:	sub    ebx,DWORD PTR [ecx]
  411bf2:	mov    ecx,0xc20001f7
  411bf7:	test   DWORD PTR [esi],ebp
  411bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bfa:	sti    
  411bfb:	xor    eax,ecx
  411bfd:	sbb    eax,0xd6bed259
  411c02:	lea    edx,[ebp-0x1136872d]
  411c08:	jae    0x411c2d
  411c0a:	ins    BYTE PTR es:[edi],dx
  411c0b:	imul   edx,edi,0xffffffde
  411c0e:	sti    
  411c0f:	stc    
  411c10:	test   eax,0x94bc5291
  411c15:	add    eax,0x5574d5ff
  411c1a:	repnz shl DWORD PTR [edi],cl
  411c1d:	pop    edi
  411c1e:	loopne 0x411bf6
  411c20:	bswap  esp
  411c22:	in     eax,dx
  411c23:	sbb    eax,0xf838dce5
  411c28:	mov    esi,0x630aadec
  411c2d:	mov    ecx,DWORD PTR [eax+0x335b8187]
  411c33:	jne    0x411c65
  411c35:	push   ecx
  411c36:	add    DWORD PTR [ebx],ecx
  411c38:	inc    ecx
  411c39:	or     eax,0x86a7849a
  411c3e:	add    DWORD PTR [edi],ebx
  411c40:	inc    esp
  411c41:	mov    ds:0x188b774d,al
  411c46:	cmp    BYTE PTR [edx-0x50],bh
  411c49:	add    al,0x37
  411c4b:	sti    
  411c4c:	or     bh,bl
  411c4e:	jl     0x411c60
  411c50:	cdq    
  411c51:	dec    esi
  411c52:	shl    DWORD PTR [ecx],cl
  411c54:	mov    bl,0x92
  411c56:	jge    0x411c3b
  411c58:	pop    edx
  411c59:	push   eax
  411c5a:	sub    edx,ecx
  411c5c:	or     DWORD PTR [ecx-0x46],esp
  411c5f:	stos   BYTE PTR es:[edi],al
  411c60:	pop    eax
  411c61:	push   es
  411c62:	cdq    
  411c63:	test   DWORD PTR [ebx-0x55516488],esp
  411c69:	into   
  411c6a:	sbb    DWORD PTR [ecx+0x58],esp
  411c6d:	fcom   st(6)
  411c6f:	add    bl,BYTE PTR [ebx]
  411c71:	mov    DWORD PTR ds:0x3a5ab38a,eax
  411c77:	repnz gs aas 
  411c7a:	cmp    esi,ebp
  411c7c:	loope  0x411ce0
  411c7e:	pop    esp
  411c7f:	inc    esi
  411c80:	lds    eax,FWORD PTR [edx+0x70]
  411c83:	mov    eax,0x41dd3c97
  411c88:	adc    bl,BYTE PTR [eax]
  411c8a:	int3   
  411c8b:	jle    0x411cc1
  411c8d:	retf   0x4c11
  411c90:	mov    cl,0x79
  411c92:	jecxz  0x411c3a
  411c94:	rcl    eax,0x75
  411c97:	dec    ebx
  411c98:	push   ds
  411c99:	sbb    ah,bl
  411c9b:	mov    BYTE PTR [ebp-0x726c75f5],0xef
  411ca2:	std    
  411ca3:	add    cl,ah
  411ca5:	xchg   DWORD PTR [ebx],ebx
  411ca7:	pop    edi
  411ca8:	das    
  411ca9:	jg     0x411c47
  411cab:	push   0x68
  411cad:	int3   
  411cae:	sub    esi,DWORD PTR [eax-0x4f]
  411cb1:	fnstsw WORD PTR [esi+0x6b]
  411cb4:	pop    ebx
  411cb5:	test   eax,0x1c08a945
  411cba:	pop    ecx
  411cbb:	push   ecx
  411cbc:	pop    esp
  411cbd:	cmp    DWORD PTR [esi+0x5fbf5eff],eax
  411cc3:	add    ebp,DWORD PTR [ecx+0x1c]
  411cc6:	inc    edi
  411cc7:	or     ah,BYTE PTR [eax-0x6f]
  411cca:	push   0xffffff8e
  411ccc:	in     eax,dx
  411ccd:	pusha  
  411cce:	test   eax,0x5154e8b
  411cd3:	push   ds
  411cd4:	ins    DWORD PTR es:[edi],dx
  411cd5:	sar    DWORD PTR [eax-0x25],cl
  411cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cd9:	pop    ebp
  411cda:	adc    BYTE PTR [eax-0x3e],0x60
  411cde:	push   edx
  411cdf:	pop    edx
  411ce0:	jo     0x411d0f
  411ce2:	xor    bh,BYTE PTR [edx+edx*2+0x481e63d4]
  411ce9:	xchg   ebp,eax
  411cea:	sub    eax,0x8e82ba45
  411cef:	xor    al,0xcc
  411cf1:	mov    ds:0xa48e03ed,al
  411cf6:	pop    es
  411cf7:	lods   al,BYTE PTR ds:[esi]
  411cf8:	jge    0x411d08
  411cfa:	xor    eax,0x8b51bb43
  411cff:	retf   
  411d00:	pushf  
  411d01:	fwait
  411d02:	outs   dx,DWORD PTR ds:[esi]
  411d03:	xchg   esp,eax
  411d04:	out    dx,eax
  411d05:	push   ss
  411d06:	bound  ebx,QWORD PTR [esi+0x6d33eb2]
  411d0c:	push   ebp
  411d0d:	in     al,0xb0
  411d0f:	mov    esi,0x10277ac0
  411d14:	sub    DWORD PTR [edi-0x70b0e10d],esi
  411d1a:	xor    esi,DWORD PTR [edx+0x61]
  411d1d:	repnz xor edx,DWORD PTR [ebx-0x51d45e84]
  411d24:	mov    esi,edx
  411d26:	neg    DWORD PTR [esi+eiz*2]
  411d29:	jg     0x411cdd
  411d2b:	fild   QWORD PTR [eax+0x7d]
  411d2e:	iret   
  411d2f:	or     ebp,ebx
  411d31:	nop
  411d32:	inc    esi
  411d33:	mov    dh,0xdb
  411d35:	nop
  411d36:	jbe    0x411d8e
  411d38:	sbb    BYTE PTR [edi-0x52b0b33],dh
  411d3e:	mov    edx,0xde39a26b
  411d43:	xor    al,0x8d
  411d45:	aam    0x88
  411d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d48:	sbb    dl,BYTE PTR [edi-0x216b5ac5]
  411d4e:	sbb    cl,dh
  411d50:	fwait
  411d51:	mov    esi,?
  411d53:	sbb    al,0x9f
  411d55:	xor    BYTE PTR [ebx],bh
  411d57:	out    dx,eax
  411d58:	test   eax,0xc5782d43
  411d5d:	mov    eax,ds:0x435695d6
  411d62:	xchg   esp,eax
  411d63:	dec    edx
  411d64:	imul   DWORD PTR [ecx+0x53]
  411d67:	mov    esp,0x46c94c06
  411d6c:	cmp    BYTE PTR [edx-0xf],al
  411d6f:	jge    0x411d7d
  411d71:	cs in  eax,dx
  411d73:	xchg   esi,eax
  411d74:	inc    esp
  411d75:	aad    0x3b
  411d77:	cmp    al,0xfe
  411d79:	or     edi,ebx
  411d7b:	pop    ebp
  411d7c:	int    0x26
  411d7e:	xchg   ebp,eax
  411d7f:	jp     0x411dfd
  411d81:	push   es
  411d82:	loop   0x411d91
  411d84:	add    DWORD PTR [eax-0x5],esp
  411d87:	shr    BYTE PTR ds:0x82a2c622,0x62
  411d8e:	call   0x45ec:0xa0229e2c
  411d95:	jae    0x411d86
  411d97:	js     0x411dbf
  411d99:	js     0x411dfc
  411d9b:	pop    ecx
  411d9c:	cdq    
  411d9d:	aam    0xe4
  411d9f:	mov    ch,0x4e
  411da1:	inc    esp
  411da2:	cmp    BYTE PTR [ebp+0x15],ah
  411da5:	pop    ebx
  411da6:	fcmovnb st,st(7)
  411da8:	jmp    0x4377:0x18202446
  411daf:	mov    eax,ds:0xba0696d6
  411db4:	cld    
  411db5:	xor    BYTE PTR [ecx-0x615b7cce],ch
  411dbb:	aaa    
  411dbc:	pop    esi
  411dbd:	cld    
  411dbe:	push   0xec5f517d
  411dc3:	xor    eax,DWORD PTR ds:0x17bffd09
  411dc9:	aas    
  411dca:	pop    ebp
  411dcb:	adc    dl,ch
  411dcd:	xor    BYTE PTR [ebx+0x3b26ab48],ch
  411dd3:	lock fs cdq 
  411dd6:	xlat   BYTE PTR ds:[ebx]
  411dd7:	sti    
  411dd8:	inc    esi
  411dd9:	repnz data16 and dh,dh
  411ddd:	out    0x22,al
  411ddf:	and    BYTE PTR [esi-0xa894956],0xd4
  411de6:	inc    esi
  411de7:	xor    eax,0x8ffaed0a
  411dec:	push   0x43a6832d
  411df1:	fiadd  WORD PTR [edi+0x4c]
  411df4:	and    DWORD PTR [eax],esp
  411df6:	cli    
  411df7:	sti    
  411df8:	aaa    
  411df9:	cmp    DWORD PTR [ebx-0x52949929],eax
  411dff:	rcr    DWORD PTR [edi+edx*4-0x1dcc1839],0x26
  411e07:	add    bl,BYTE PTR [edi+0x58]
  411e0a:	mov    esp,0x45224889
  411e0f:	mov    edx,0x77c81c72
  411e14:	push   ss
  411e15:	test   BYTE PTR [esi+ecx*8+0x40],0xfc
  411e1a:	clc    
  411e1b:	imul   ebx,DWORD PTR [ecx-0x4aded6d1],0xb5a07704
  411e25:	or     BYTE PTR [edi+0x1c],0x12
  411e29:	in     eax,dx
  411e2a:	inc    esp
  411e2b:	dec    eax
  411e2c:	lods   al,BYTE PTR ds:[esi]
  411e2d:	call   0xac663882
  411e32:	mov    eax,0xc9eec6d7
  411e37:	adc    esi,DWORD PTR [ebx+0x58]
  411e3a:	aaa    
  411e3b:	enter  0x9273,0xa0
  411e3f:	lea    esp,[esi+0x4a7027b4]
  411e45:	dec    ecx
  411e46:	push   eax
  411e47:	push   ds
  411e48:	test   DWORD PTR [ecx-0x71d51a01],edi
  411e4e:	cmp    eax,0xdfe918f8
  411e53:	es push ds
  411e55:	jo     0x411e49
  411e57:	rcl    DWORD PTR [edi-0x4a],cl
  411e5a:	and    al,BYTE PTR [bx-0x695a]
  411e5f:	mov    ebp,0x57d940c2
  411e64:	jge    0x411e38
  411e66:	sbb    edi,DWORD PTR [ebx+edi*4-0x77]
  411e6a:	outs   dx,BYTE PTR ds:[esi]
  411e6b:	dec    ebp
  411e6c:	sar    BYTE PTR [ecx-0x632bc5f8],0x23
  411e73:	inc    ebp
  411e74:	adc    eax,0x5ef22c80
  411e79:	sahf   
  411e7a:	sbb    BYTE PTR [edi+ebx*1+0x5e],ch
  411e7e:	fxch   st(1)
  411e80:	push   0x22
  411e82:	cwde   
  411e83:	addr16 retf 0x91b4
  411e87:	inc    ecx
  411e88:	inc    esp
  411e89:	call   0x89e1:0x5d5d32e8
  411e90:	addr16 repnz fs sbb al,0x6d
  411e95:	push   cs
  411e96:	sbb    al,0x83
  411e98:	jo     0x411e4e
  411e9a:	ret    
  411e9b:	pop    ss
  411e9c:	jbe    0x411e32
  411e9e:	sub    eax,0xa0cc51e6
  411ea3:	das    
  411ea4:	sbb    eax,0xacd7b265
  411ea9:	dec    ecx
  411eaa:	or     al,0x14
  411eac:	test   BYTE PTR [edx+eiz*1+0x13],bl
  411eb0:	push   edx
  411eb1:	stc    
  411eb2:	add    edx,ebp
  411eb4:	dec    edi
  411eb5:	sbb    DWORD PTR [ecx],ebp
  411eb7:	xchg   esi,eax
  411eb8:	clc    
  411eb9:	test   DWORD PTR [eax+eiz*4+0x1a],esi
  411ebd:	scas   al,BYTE PTR es:[edi]
  411ebe:	pop    esp
  411ebf:	test   DWORD PTR [edi-0x6],ebp
  411ec2:	ins    DWORD PTR es:[edi],dx
  411ec3:	cmp    eax,edx
  411ec5:	or     edi,DWORD PTR [esp+ecx*4-0x1d9d5c42]
  411ecc:	lock and dl,BYTE PTR [edx-0x50]
  411ed0:	iret   
  411ed1:	scas   eax,DWORD PTR es:[edi]
  411ed2:	inc    esi
  411ed3:	xchg   edx,eax
  411ed4:	retf   
  411ed5:	adc    edi,DWORD PTR [ecx-0x13]
  411ed8:	outs   dx,BYTE PTR ds:[esi]
  411ed9:	or     al,0xc5
  411edb:	and    bh,BYTE PTR [eax+0x13]
  411ede:	push   cs
  411edf:	fnstsw WORD PTR [ebx-0x19820005]
  411ee5:	leave  
  411ee6:	cli    
  411ee7:	adc    eax,0x1338f8ca
  411eec:	mov    cl,0xca
  411eee:	pop    ebp
  411eef:	pusha  
  411ef0:	sbb    al,0xa7
  411ef2:	int    0x97
  411ef4:	nop
  411ef5:	jns    0x411eb2
  411ef7:	and    ecx,DWORD PTR [edx-0x3]
  411efa:	mov    ecx,0x4271080c
  411eff:	cld    
  411f00:	sbb    BYTE PTR [edi-0x53],cl
  411f03:	xchg   DWORD PTR [eax],edi
  411f05:	shl    ebp,cl
  411f07:	retf   0x7239
  411f0a:	mov    esi,0x11a1e7e2
  411f0f:	aam    0x12
  411f11:	scas   al,BYTE PTR es:[edi]
  411f12:	or     al,0xc4
  411f14:	xchg   ebx,eax
  411f15:	test   eax,eax
  411f17:	dec    eax
  411f18:	adc    DWORD PTR [ecx+0x69],esp
  411f1b:	ds shr BYTE PTR es:[esi+0x4b],1
  411f20:	ja     0x411ebb
  411f22:	je     0x411f06
  411f24:	(bad)  
  411f26:	cmp    esp,DWORD PTR ds:0xfd545583
  411f2c:	inc    ebp
  411f2d:	imul   ecx,DWORD PTR [edx-0x64],0xffffffda
  411f31:	pop    esi
  411f32:	xor    bh,cl
  411f34:	stos   BYTE PTR es:[edi],al
  411f35:	mov    eax,0xcbd81a12
  411f3a:	fwait
  411f3b:	sub    ebx,esi
  411f3d:	mov    ecx,0xaee53251
  411f42:	xor    DWORD PTR [edx+ecx*1],esp
  411f45:	fs stc 
  411f47:	into   
  411f48:	out    dx,al
  411f49:	lods   al,BYTE PTR ds:[esi]
  411f4a:	sbb    ah,bh
  411f4c:	sub    ebp,eax
  411f4e:	or     al,0x18
  411f50:	test   BYTE PTR [esi],ch
  411f52:	push   ebp
  411f53:	test   al,0xc0
  411f55:	retf   0x4fd5
  411f58:	out    0xd9,al
  411f5a:	sbb    bh,BYTE PTR [ebp+ebp*4-0x3d4f7934]
  411f61:	js     0x411f53
  411f63:	mov    ah,0x90
  411f65:	and    al,0x69
  411f67:	shr    BYTE PTR [ecx],0x4
  411f6a:	ins    BYTE PTR es:[edi],dx
  411f6b:	add    eax,esi
  411f6d:	adc    eax,0xc97a9d03
  411f72:	mov    ebx,ebx
  411f74:	fwait
  411f75:	dec    edx
  411f76:	mov    ch,BYTE PTR [ebp+0x31]
  411f79:	ins    DWORD PTR es:[edi],dx
  411f7a:	das    
  411f7b:	pop    edi
  411f7c:	arpl   WORD PTR [edi],bx
  411f7e:	loopne 0x411f88
  411f80:	mov    dl,0x11
  411f82:	loopne 0x411f0b
  411f84:	and    ebp,DWORD PTR [ebp+0x8593302]
  411f8a:	add    BYTE PTR [esi],dl
  411f8c:	cs push ecx
  411f8e:	dec    eax
  411f8f:	clc    
  411f90:	inc    ebp
  411f91:	mov    ecx,0x2ddfdc1f
  411f96:	ds loopne 0x411fd3
  411f99:	aaa    
  411f9a:	pop    edi
  411f9b:	dec    edx
  411f9c:	add    bh,ah
  411f9e:	repnz (bad) 
  411fa0:	cmc    
  411fa1:	leave  
  411fa2:	mov    al,0x11
  411fa4:	jmp    0xa3be:0x2c431752
  411fab:	push   edi
  411fac:	add    BYTE PTR [esi],bl
  411fae:	mov    edi,0x673603e8
  411fb3:	push   ebx
  411fb4:	(bad)  
  411fb5:	mov    cs,WORD PTR [ebx+esi*2]
  411fb8:	fcom   DWORD PTR gs:[ecx]
  411fbb:	xchg   BYTE PTR [ecx],cl
  411fbd:	es ins BYTE PTR es:[edi],dx
  411fbf:	xor    bh,BYTE PTR [eax]
  411fc1:	(bad)  
  411fc2:	in     eax,dx
  411fc3:	or     BYTE PTR [ecx+edi*8-0x49],al
  411fc7:	sub    BYTE PTR [eax-0x69362ef],al
  411fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fce:	pop    es
  411fcf:	cwde   
  411fd0:	dec    esi
  411fd1:	inc    esp
  411fd2:	xor    ecx,DWORD PTR [edx+0x4d]
  411fd5:	jmp    0x412013
  411fd7:	jb     0x41200d
  411fd9:	pusha  
  411fda:	pushf  
  411fdb:	sar    BYTE PTR [eax+0x55],0xf6
  411fdf:	inc    edi
  411fe0:	fdiv   DWORD PTR [edi-0x1d]
  411fe3:	jo     0x411f6d
  411fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fe6:	inc    esp
  411fe7:	fisubr DWORD PTR [edi+0x5bffe7e3]
  411fed:	enter  0x2176,0x8a
  411ff1:	mov    ds:0x1ae7632b,al
  411ff6:	or     eax,0x2cc7ebb4
  411ffb:	ror    BYTE PTR [ebp+0x2],1
  411ffe:	jg     0x41207f
  412000:	dec    ecx
  412001:	cmc    
  412002:	jmp    0x6eaae657
  412007:	mov    eax,ds:0xbcc13154
  41200c:	mov    ds:0xcf46dbbf,eax
  412011:	inc    esp
  412012:	inc    ebx
  412013:	in     eax,0x72
  412015:	mov    WORD PTR [esp+esi*4-0x6588385d],ss
  41201c:	mov    edi,0xea259074
  412021:	xchg   esp,eax
  412022:	mov    BYTE PTR [ecx],dl
  412024:	or     DWORD PTR [ecx+0x7],ebx
  412027:	add    edi,DWORD PTR ss:[edx]
  41202a:	(bad)  
  41202b:	jne    0x412079
  41202d:	stos   DWORD PTR es:[edi],eax
  41202e:	jnp    0x412023
  412030:	lods   al,BYTE PTR ds:[esi]
  412031:	fcom   DWORD PTR [edi-0x4b]
  412034:	rcr    DWORD PTR [ebp+0xe],1
  412037:	fcmovnbe st,st(7)
  412039:	mov    ah,bh
  41203b:	ret    
  41203c:	clc    
  41203d:	pop    es
  41203e:	cmp    eax,0xe24dd181
  412043:	pop    edx
  412044:	or     al,0x3b
  412046:	outs   dx,BYTE PTR ds:[esi]
  412047:	cli    
  412048:	pop    edi
  412049:	xor    eax,0x32efe74b
  41204e:	jb     0x41209f
  412050:	cmp    BYTE PTR [esi-0x36],dl
  412053:	nop
  412054:	pop    esp
  412055:	sub    edi,edx
  412057:	mov    edx,0x39633584
  41205c:	mov    edx,0x4edfc152
  412061:	and    DWORD PTR [edx+eax*1],0xd0f466ef
  412068:	sub    eax,0x5fabc5f9
  41206d:	mov    dl,BYTE PTR [edx-0x5af6d038]
  412073:	mov    ds:0x6fa47bf,al
  412078:	fidivr WORD PTR [esi+ecx*8-0x73]
  41207c:	add    al,0xc7
  41207e:	jp     0x4120d1
  412080:	cmp    BYTE PTR [ebp-0x2e],ah
  412083:	dec    esi
  412084:	push   es
  412085:	mov    ebp,0x931ad5cd
  41208a:	repz push eax
  41208c:	mov    ecx,0x33f7d081
  412091:	adc    ebx,edi
  412093:	jne    0x41207d
  412095:	fimul  WORD PTR [esp+edx*2]
  412098:	inc    edx
  412099:	scas   al,BYTE PTR es:[edi]
  41209a:	push   ss
  41209b:	js     0x412040
  41209d:	xor    BYTE PTR ds:0x2e300bd9,al
  4120a3:	and    al,0xa8
  4120a5:	xchg   ebx,eax
  4120a6:	cmp    DWORD PTR [edx],ebp
  4120a8:	js     0x4120d7
  4120aa:	(bad)  
  4120ab:	lock xor bh,al
  4120ae:	or     eax,0xa61f2a93
  4120b3:	xchg   esp,eax
  4120b4:	push   ebx
  4120b5:	sub    ch,BYTE PTR [edi]
  4120b7:	leave  
  4120b8:	adc    BYTE PTR [eax-0x6d],bh
  4120bb:	sub    al,0x9b
  4120bd:	fs out 0xc,eax
  4120c0:	mov    ch,0xbc
  4120c2:	es push cs
  4120c4:	or     ecx,DWORD PTR [edi]
  4120c6:	mov    al,ds:0x8252e80b
  4120cb:	push   eax
  4120cc:	add    al,bl
  4120ce:	jb     0x41207e
  4120d0:	ds jb  0x41208f
  4120d3:	inc    esp
  4120d4:	sbb    bl,BYTE PTR [edx+edx*2-0x55]
  4120d8:	and    al,BYTE PTR [edi]
  4120da:	mov    cl,0x2f
  4120dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120dd:	iret   
  4120de:	lahf   
  4120df:	mov    dh,0xe4
  4120e1:	xor    edx,ebx
  4120e3:	push   esp
  4120e4:	xchg   ebx,eax
  4120e5:	pusha  
  4120e6:	adc    DWORD PTR [ebx],esp
  4120e8:	ss cld 
  4120ea:	or     ch,BYTE PTR ds:0x96b10b0c
  4120f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f1:	push   es
  4120f2:	(bad)  
  4120f3:	push   edx
  4120f4:	and    BYTE PTR [edx],dh
  4120f6:	out    0xfb,eax
  4120f8:	(bad)  
  4120f9:	jb     0x4120fe
  4120fb:	fwait
  4120fc:	aaa    
  4120fd:	sbb    edx,DWORD PTR [ebx-0x31]
  412100:	adc    ah,0x7
  412103:	sub    eax,DWORD PTR [eax-0x699ad654]
  412109:	or     esi,0x6033ceae
  41210f:	(bad)  
  412111:	out    dx,eax
  412112:	fld    QWORD PTR [ebp+esi*1-0x28]
  412116:	cmp    eax,0x5fc1ab9c
  41211b:	mov    edx,0x3cea79fc
  412120:	out    dx,eax
  412121:	jnp    0x412195
  412123:	cmp    DWORD PTR [ecx-0x5],0xffffffcd
  412127:	mov    dh,0x6a
  412129:	sub    bh,al
  41212b:	adc    BYTE PTR ds:[ebx],cl
  41212e:	push   edi
  41212f:	xchg   BYTE PTR [ebx+0x191b7cc0],bl
  412135:	mov    ah,0xca
  412137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412138:	(bad)  
  412139:	dec    edi
  41213a:	fnsave [ebx+ebx*8+0x64]
  41213e:	test   BYTE PTR [edx],0xb0
  412141:	mov    dl,0x1
  412143:	push   esi
  412144:	retf   0x448e
  412147:	mov    al,0x2d
  412149:	and    cl,BYTE PTR [edx+0x7c]
  41214c:	cmp    edx,ebx
  41214e:	popf   
  41214f:	les    eax,FWORD PTR [edx-0x4173bbc1]
  412155:	xbegin 0x70967518
  41215b:	(bad)  
  41215c:	dec    esi
  41215d:	adc    al,al
  41215f:	adc    DWORD PTR [ebp-0x23],esp
  412162:	mov    BYTE PTR [edx+0x1b],al
  412165:	inc    edx
  412166:	or     cl,BYTE PTR [ecx+esi*2+0x3705d63b]
  41216d:	popf   
  41216e:	fisttp QWORD PTR [ecx+0x1defb855]
  412174:	and    cl,bh
  412176:	xchg   esp,eax
  412177:	mov    BYTE PTR [edx+0x1c],0x27
  41217b:	push   ebx
  41217c:	mov    dh,0x74
  41217e:	sub    dh,BYTE PTR [eax]
  412180:	jb     0x4121d9
  412182:	inc    ecx
  412183:	cld    
  412184:	mov    ?,WORD PTR [ebp-0x58]
  412187:	add    bl,BYTE PTR [ecx+0x1732d36]
  41218d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41218e:	fnstcw WORD PTR [ebx+0x27]
  412191:	pop    ds
  412192:	sub    DWORD PTR [esi+0x4],edi
  412195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412196:	sbb    al,0x5b
  412198:	dec    edi
  412199:	pop    esp
  41219a:	push   ss
  41219b:	fcomp  QWORD PTR [eax+0x5d92e566]
  4121a1:	mov    bl,0x5d
  4121a3:	xor    al,0x68
  4121a5:	js     0x41218a
  4121a7:	(bad)  
  4121a8:	mov    dh,BYTE PTR [ebx-0x28cad427]
  4121ae:	data16 sahf 
  4121b0:	push   0x51e9b0ae
  4121b5:	mov    ch,0x4d
  4121b7:	adc    DWORD PTR [ecx-0x4b5c8f13],0x46bdcc9e
  4121c1:	xchg   BYTE PTR [esi+0x1fbd089a],ah
  4121c7:	scas   eax,DWORD PTR es:[edi]
  4121c8:	ins    BYTE PTR es:[edi],dx
  4121c9:	int    0x5c
  4121cb:	(bad)  
  4121cd:	lea    ebp,[edi]
  4121cf:	dec    edx
  4121d0:	lea    edi,[ebx]
  4121d2:	das    
  4121d3:	push   0x663e188d
  4121d8:	out    dx,eax
  4121d9:	pop    ss
  4121da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121db:	mov    eax,ds:0x88d18c3b
  4121e0:	call   0x4fe37c2d
  4121e5:	sub    esp,edi
  4121e7:	aas    
  4121e8:	sbb    al,0x43
  4121ea:	pop    ebp
  4121eb:	nop
  4121ec:	push   ebx
  4121ed:	icebp  
  4121ee:	fdiv   DWORD PTR [eax+0x63]
  4121f1:	ret    0x2a44
  4121f4:	jns    0x4121dd
  4121f6:	xor    ch,BYTE PTR [ebx-0x43e79358]
  4121fc:	scas   eax,DWORD PTR es:[edi]
  4121fd:	and    bh,BYTE PTR [ecx]
  4121ff:	xchg   edx,eax
  412200:	mov    dl,0x6a
  412202:	mov    ecx,0x5db54ad1
  412207:	xchg   ebp,eax
  412208:	xchg   DWORD PTR [edx-0x301ece00],ecx
  41220e:	inc    eax
  41220f:	xchg   edi,eax
  412210:	mov    dh,BYTE PTR [ebp-0x7]
  412213:	push   eax
  412214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412215:	lods   eax,DWORD PTR ds:[esi]
  412216:	mov    DWORD PTR [edx+0x51e51ecf],ebp
  41221c:	inc    ebx
  41221d:	pop    ecx
  41221e:	aas    
  41221f:	adc    al,0xeb
  412221:	outs   dx,BYTE PTR ds:[esi]
  412222:	ror    edi,cl
  412224:	sbb    ah,BYTE PTR [eax-0x4a]
  412227:	cmp    eax,0x25287ef1
  41222c:	and    BYTE PTR [esp+edx*4+0x49bfcb2f],ah
  412233:	shl    BYTE PTR [ecx+0x17],cl
  412236:	retf   0x847a
  412239:	test   eax,0x78d71287
  41223e:	int    0xfe
  412240:	outs   dx,DWORD PTR ds:[esi]
  412241:	push   0x1a
  412243:	popa   
  412244:	xchg   edx,eax
  412245:	cdq    
  412246:	xor    BYTE PTR [edi+0x5e14e35],0xc8
  41224d:	sbb    BYTE PTR [ebp-0x45],cl
  412250:	xlat   BYTE PTR ds:[ebx]
  412251:	xchg   DWORD PTR [ebx+0x588aead9],ebx
  412257:	rcr    esp,1
  412259:	shr    DWORD PTR [edi],1
  41225b:	or     DWORD PTR [eax+0xc],esp
  41225e:	add    ah,BYTE PTR [edi]
  412260:	lds    eax,FWORD PTR [esi-0x7e59979f]
  412266:	xor    DWORD PTR [edx+0x18],esp
  412269:	test   al,0xdc
  41226c:	fst    DWORD PTR [ecx+0x68]
  41226f:	mov    bh,0x3a
  412271:	out    0xef,al
  412273:	jae    0x41227c
  412275:	sbb    al,0x6e
  412277:	xchg   ecx,eax
  412278:	daa    
  412279:	aas    
  41227a:	pop    ds
  41227b:	inc    esp
  41227c:	pop    es
  41227d:	mov    eax,0x8c33efe6
  412282:	dec    edi
  412283:	dec    ebx
  412284:	neg    BYTE PTR [ecx]
  412286:	push   ebp
  412287:	and    eax,0xfaa48891
  41228c:	dec    esi
  41228d:	sbb    dh,BYTE PTR [edi-0x25406f7d]
  412293:	push   0xffffff81
  412295:	pop    eax
  412296:	pop    edi
  412297:	jnp    0x4122d5
  412299:	mov    ds:0xb7c2cf55,eax
  41229e:	lahf   
  41229f:	adc    BYTE PTR [edx],cl
  4122a1:	adc    bh,al
  4122a3:	jno    0x412299
  4122a5:	sub    al,cl
  4122a7:	push   edx
  4122a8:	mov    cl,0x75
  4122aa:	addr16 into 
  4122ac:	imul   ebx,DWORD PTR [edi+0x441a80af],0xcea47841
  4122b6:	pop    eax
  4122b7:	pop    edi
  4122b8:	imul   BYTE PTR [edx-0x17658fe2]
  4122be:	ret    0x8ace
  4122c1:	call   0x1a66:0x5f6da1
  4122c8:	pop    eax
  4122c9:	mov    edi,0xec640d7f
  4122ce:	mov    bl,dl
  4122d0:	xchg   edx,eax
  4122d1:	dec    esi
  4122d2:	jecxz  0x412269
  4122d4:	add    bl,BYTE PTR [edi+0x40]
  4122d7:	xchg   ecx,esp
  4122d9:	push   0x34
  4122db:	out    dx,al
  4122dc:	adc    eax,0xa6a5fa92
  4122e1:	scas   al,BYTE PTR es:[edi]
  4122e2:	sar    DWORD PTR [ecx-0x21],cl
  4122e5:	(bad)  
  4122e7:	(bad)  
  4122e8:	iret   
  4122e9:	mov    ah,0xe5
  4122eb:	popf   
  4122ec:	pop    ebx
  4122ed:	(bad)  
  4122ee:	in     eax,0xe5
  4122f0:	ds ja  0x412279
  4122f3:	mov    dh,0xbc
  4122f5:	mov    ds:0x96c64727,al
  4122fa:	je     0x412362
  4122fc:	jg     0x41235a
  4122fe:	jb     0x4122f6
  412300:	lahf   
  412301:	push   esi
  412302:	xor    DWORD PTR [ebx+0x5dfc15f],0x9f85bbc8
  41230c:	scas   eax,DWORD PTR es:[edi]
  41230d:	shr    BYTE PTR [eax-0x6c],0xad
  412311:	push   edx
  412312:	mov    dh,0x5a
  412314:	push   ebx
  412315:	inc    edi
  412316:	loopne 0x41238c
  412318:	push   ebx
  412319:	rcr    DWORD PTR [edi+0xab4a8b9],cl
  41231f:	fidiv  DWORD PTR [ecx-0x74]
  412322:	das    
  412323:	pop    ds
  412324:	adc    eax,0x8c83583b
  412329:	mov    WORD PTR [esi+0x42],ss
  41232c:	jb     0x4123a5
  41232e:	stos   DWORD PTR es:[edi],eax
  41232f:	xor    ebx,DWORD PTR [eax+0x16]
  412332:	cmp    al,0x21
  412334:	sub    edx,DWORD PTR [esi-0x54a5a43d]
  41233a:	pusha  
  41233b:	dec    ebp
  41233c:	test   al,0x27
  41233f:	(bad)  
  412340:	aad    0xa0
  412342:	adc    al,0xf2
  412344:	cmp    eax,0xe89f8ab7
  412349:	add    eax,0x109153ed
  41234e:	xchg   esi,eax
  41234f:	les    ebx,FWORD PTR [eax]
  412351:	in     eax,dx
  412352:	sbb    BYTE PTR es:[eax-0x9f0eec6],bl
  412359:	jbe    0x4123d1
  41235b:	imul   ebx,DWORD PTR [edi+0x40388be1],0xffffff95
  412362:	sub    BYTE PTR [edi+eiz*8+0x3c],cl
  412366:	mov    WORD PTR [ecx-0x3a],ss
  412369:	dec    ecx
  41236a:	int    0x26
  41236c:	rcl    eax,cl
  41236e:	js     0x41238b
  412370:	mov    al,0x8d
  412372:	sar    BYTE PTR [ebp+0x27],1
  412375:	mov    al,ds:0xa8962a46
  41237a:	fsubr  QWORD PTR [esp+ecx*2+0x15e02b7b]
  412381:	popa   
  412382:	xlat   BYTE PTR ds:[ebx]
  412383:	retf   0x4fd2
  412386:	stc    
  412387:	(bad)  
  412389:	call   0x382a:0x2cb730cc
  412390:	cmp    DWORD PTR [edi+0x87d6e2],esp
  412396:	dec    edx
  412397:	sbb    bl,BYTE PTR [ecx+0x76]
  41239a:	hlt    
  41239b:	push   eax
  41239c:	sub    bh,BYTE PTR [esp+edi*2+0x3a]
  4123a0:	mov    al,0xd3
  4123a2:	jb     0x4123fc
  4123a4:	test   eax,0xbfd770ef
  4123a9:	stc    
  4123aa:	add    al,0x2e
  4123ac:	loopne 0x4123ca
  4123ae:	or     ebx,DWORD PTR [eax-0x54]
  4123b1:	pop    ebp
  4123b2:	mov    cl,0x2b
  4123b4:	aad    0x21
  4123b6:	mov    al,BYTE PTR [edi-0x2c7e5e89]
  4123bc:	or     ebx,DWORD PTR [ecx+0x15]
  4123bf:	stc    
  4123c0:	les    edi,FWORD PTR [eax]
  4123c2:	push   0xffffffe9
  4123c4:	mov    ah,0x90
  4123c6:	inc    ebp
  4123c7:	fwait
  4123c8:	sbb    ebx,eax
  4123ca:	cmp    edx,ebp
  4123cc:	xchg   DWORD PTR [eax-0x76],ebx
  4123cf:	ja     0x4123fd
  4123d1:	retf   0x7dfa
  4123d4:	xchg   edx,eax
  4123d5:	popa   
  4123d6:	mov    esi,0xe01fbdc0
  4123db:	push   esi
  4123dc:	mov    ebx,0x5a4134dc
  4123e1:	inc    esp
  4123e2:	aaa    
  4123e3:	sbb    BYTE PTR ds:0xc255efd2,bh
  4123e9:	ins    DWORD PTR es:[edi],dx
  4123ea:	add    BYTE PTR [eax],cl
  4123ec:	sub    BYTE PTR [ebx-0x494f544b],bh
  4123f2:	jnp    0x4123b7
  4123f4:	fstp   TBYTE PTR [edi-0x2e3e0d33]
  4123fa:	popf   
  4123fb:	arpl   WORD PTR gs:[edi+0x5],ax
  4123ff:	xor    dl,ch
  412401:	scas   al,BYTE PTR es:[edi]
  412402:	add    al,0x67
  412404:	jo     0x412413
  412406:	cwde   
  412407:	pop    ss
  412408:	mov    cl,0xd1
  41240a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41240b:	sbb    bl,BYTE PTR [ebp-0x70a6c3d]
  412411:	pop    ds
  412412:	pop    es
  412413:	pop    edx
  412414:	push   ss
  412415:	xchg   esp,eax
  412416:	sub    al,0xee
  412418:	int    0xd9
  41241a:	inc    ebp
  41241b:	cmp    ecx,esp
  41241d:	mov    al,0x3b
  41241f:	fwait
  412420:	(bad)  
  412421:	(bad)  
  412422:	adc    eax,0x37a93111
  412427:	cmp    eax,0x4350b9ff
  41242c:	fistp  DWORD PTR [eax+0x20]
  41242f:	test   al,0x51
  412431:	idiv   bl
  412433:	cli    
  412434:	adc    DWORD PTR [ebp-0x16f1713e],esi
  41243a:	fstp   TBYTE PTR [ebx+0x59]
  41243d:	sbb    al,0x3e
  41243f:	push   cs
  412440:	(bad)  
  412441:	cli    
  412442:	dec    ebx
  412443:	or     cl,BYTE PTR [ebx]
  412445:	mov    eax,0x843f1e68
  41244a:	clc    
  41244b:	xchg   edx,eax
  41244c:	inc    edi
  41244d:	pop    ebx
  41244e:	popa   
  41244f:	std    
  412450:	loopne 0x41245f
  412452:	sub    eax,0x1f1afb9a
  412457:	dec    ebp
  412458:	mov    esp,0x897d8d7f
  41245d:	mov    cl,0x23
  41245f:	xor    DWORD PTR [ebx],esi
  412461:	sahf   
  412462:	icebp  
  412463:	retf   0xfc02
  412466:	and    BYTE PTR [ecx-0x35a88e1a],bh
  41246c:	ss in  eax,dx
  41246e:	cld    
  41246f:	mov    al,0x93
  412471:	stos   BYTE PTR es:[edi],al
  412472:	popa   
  412473:	ret    
  412474:	cmp    BYTE PTR [ebx+ebx*8+0x72587d86],cl
  41247b:	pop    ss
  41247c:	pop    ebp
  41247d:	jns    0x412421
  41247f:	inc    esp
  412480:	mov    dl,0xe9
  412482:	jno    0x41244b
  412484:	lds    edx,FWORD PTR [ebx]
  412486:	enter  0x61ab,0xa6
  41248a:	adc    bh,BYTE PTR [esi+ecx*8]
  41248d:	ins    DWORD PTR es:[edi],dx
  41248e:	inc    esp
  41248f:	sahf   
  412490:	xchg   edx,eax
  412491:	stc    
  412492:	add    ecx,edx
  412494:	imul   edx,DWORD PTR [ecx],0x69dfbe86
  41249a:	xor    BYTE PTR [eax],ch
  41249c:	and    dh,BYTE PTR [ebx-0x49ffc499]
  4124a2:	icebp  
  4124a3:	inc    esp
  4124a4:	jns    0x41251f
  4124a6:	sbb    ah,BYTE PTR [ebp+0x3e0a7eb8]
  4124ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124ad:	fdivr  QWORD PTR ds:0xd33c5ec3
  4124b3:	outs   dx,BYTE PTR ds:[esi]
  4124b4:	and    ebp,esi
  4124b6:	shl    DWORD PTR [edi],0xc1
  4124b9:	xor    BYTE PTR [edi-0x6ab5ca34],0xab
  4124c0:	scas   al,BYTE PTR es:[edi]
  4124c1:	fwait
  4124c2:	or     al,dl
  4124c4:	out    dx,eax
  4124c5:	mov    dl,0x57
  4124c7:	jmp    0xde5421ec
  4124cc:	add    DWORD PTR [ebx+0x16f9536f],esp
  4124d2:	icebp  
  4124d3:	loopne 0x41253d
  4124d5:	dec    esi
  4124d6:	(bad)  
  4124d7:	popf   
  4124d8:	jb     0x4124c4
  4124da:	rcl    DWORD PTR [ecx],0xd2
  4124dd:	or     cl,bh
  4124df:	inc    esp
  4124e0:	pop    edx
  4124e1:	push   esi
  4124e2:	enter  0xea87,0x72
  4124e6:	mov    esp,DWORD PTR [ecx-0x2c]
  4124e9:	jns    0x41254a
  4124eb:	shl    DWORD PTR [edx+0x4b],cl
  4124ee:	and    BYTE PTR [ecx],0x6d
  4124f1:	cmp    ebx,DWORD PTR [edi+0x237e1ea2]
  4124f7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124f9:	loope  0x412566
  4124fb:	mov    ah,0x70
  4124fd:	repnz adc ebp,DWORD PTR [esi+0x0]
  412501:	test   BYTE PTR [ebp-0x60],ah
  412504:	adc    cl,BYTE PTR [ebp-0x66b3a683]
  41250a:	loope  0x412491
  41250c:	pop    es
  41250d:	shl    DWORD PTR [eax-0x33],1
  412510:	shl    BYTE PTR [eax],cl
  412512:	ficom  WORD PTR [ebp-0x53]
  412515:	inc    ebp
  412516:	cmp    bh,BYTE PTR ds:0xc84df6cd
  41251c:	stos   DWORD PTR es:[edi],eax
  41251d:	push   esp
  41251e:	xor    al,0x86
  412520:	bound  eax,QWORD PTR [eax+0x9]
  412523:	or     DWORD PTR [ebp+0x2],esi
  412526:	or     DWORD PTR [edi-0x1d9c6d68],0x595c4c54
  412530:	mov    ebp,0xf118f151
  412535:	aam    0xbe
  412537:	sub    ebx,DWORD PTR [esi+0x53]
  41253a:	push   edx
  41253b:	add    bl,dh
  41253d:	shl    ebx,cl
  41253f:	and    bh,ch
  412541:	sbb    BYTE PTR [ebx+0x2dd34c70],al
  412547:	hlt    
  412548:	sbb    eax,0xa9e34c91
  41254d:	dec    eax
  41254e:	sbb    bl,ch
  412550:	pop    edx
  412551:	or     al,0x83
  412553:	mov    eax,0x57ef3325
  412558:	pop    edx
  412559:	fsubr  QWORD PTR [esi+0x49]
  41255c:	lahf   
  41255d:	test   al,0xe0
  41255f:	stc    
  412560:	int3   
  412561:	push   ebx
  412562:	adc    bh,bh
  412564:	push   eax
  412565:	gs ins BYTE PTR es:[edi],dx
  412567:	adc    eax,0x880ea15c
  41256c:	shl    DWORD PTR [esp+edx*2+0x60],cl
  412570:	push   ss
  412571:	lock loop 0x4125cd
  412574:	hlt    
  412575:	cli    
  412576:	int3   
  412577:	xor    al,0x70
  412579:	call   0x967acbaa
  41257e:	push   ss
  41257f:	jg     0x412556
  412581:	hlt    
  412582:	sub    DWORD PTR [ebp-0x7c],ebp
  412585:	xor    eax,0xe7d6fa9e
  41258a:	or     edx,DWORD PTR [edi]
  41258c:	call   0x489c:0x2c75e73c
  412593:	(bad)  
  412594:	enter  0x331d,0x14
  412598:	jg     0x4125cc
  41259a:	call   0x3e88:0xef1dea1d
  4125a1:	enter  0xa0fd,0xea
  4125a5:	in     al,0x6e
  4125a7:	and    al,0x84
  4125a9:	mov    bh,0x12
  4125ab:	add    BYTE PTR [eax+ebp*4+0x7d676cea],0xa3
  4125b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125b4:	push   ss
  4125b5:	and    DWORD PTR [bp+si],ebx
  4125b8:	push   edi
  4125b9:	in     al,dx
  4125ba:	mov    eax,ds:0xa37cbb43
  4125bf:	xchg   edx,eax
  4125c0:	out    dx,al
  4125c1:	or     ecx,DWORD PTR [edi-0x69258450]
  4125c7:	fsubr  DWORD PTR [ecx]
  4125c9:	lds    edx,FWORD PTR [eax+0x75196585]
  4125cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125d0:	push   cs
  4125d1:	dec    ecx
  4125d2:	fbstp  TBYTE PTR [ebx-0x75c454d0]
  4125d8:	cmp    eax,0x1645ee07
  4125dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125de:	popf   
  4125df:	mov    ah,0xa4
  4125e1:	jl     0x412564
  4125e3:	pop    ds
  4125e4:	fwait
  4125e5:	in     al,dx
  4125e6:	test   eax,0x13fbd17f
  4125eb:	leave  
  4125ec:	jnp    0x412582
  4125ee:	or     al,0xe
  4125f0:	pushf  
  4125f1:	cs inc edx
  4125f3:	sti    
  4125f4:	and    al,0x8e
  4125f6:	out    dx,al
  4125f7:	sub    eax,0xefe00b61
  4125fc:	retf   
  4125fd:	or     ch,dl
  4125ff:	mov    al,0x93
  412601:	sub    dl,BYTE PTR [esp+ecx*4-0x4345a095]
  412608:	das    
  412609:	lods   eax,DWORD PTR ds:[esi]
  41260a:	inc    ebp
  41260b:	pop    ebx
  41260c:	sub    BYTE PTR [esp+edi*1],ah
  41260f:	push   0xffffffd8
  412611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412612:	cmp    ch,BYTE PTR [ecx]
  412614:	cmp    cl,BYTE PTR [ebp+0x55]
  412617:	mov    bl,0x46
  412619:	imul   ecx,DWORD PTR [eax-0xae6b631],0xdbf90163
  412623:	xlat   BYTE PTR ds:[ebx]
  412624:	push   cs
  412625:	test   al,ch
  412627:	push   ebp
  412628:	mov    ds:0xf5b68b20,eax
  41262d:	and    esp,edx
  41262f:	es xchg ebp,eax
  412631:	adc    eax,0xc4f12353
  412636:	popf   
  412637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412638:	retf   
  412639:	into   
  41263a:	int    0x39
  41263c:	dec    eax
  41263d:	or     eax,0xab1ea291
  412642:	sbb    al,0x41
  412644:	(bad)  
  412645:	je     0x4126c6
  412647:	(bad)  
  412648:	cmp    edi,DWORD PTR [eax+0x4a]
  41264b:	ror    dh,cl
  41264d:	push   edi
  41264e:	sub    al,0xa7
  412650:	jo     0x412672
  412652:	or     eax,0xdec83a1c
  412657:	or     edx,edi
  412659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41265a:	out    dx,eax
  41265b:	cmp    BYTE PTR [esi+0x644eab3f],ah
  412661:	push   ecx
  412662:	in     eax,dx
  412663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412664:	or     ebp,ebx
  412666:	mov    eax,ds:0x36e5d2b5
  41266b:	mov    al,0x3
  41266d:	je     0x41268f
  41266f:	xchg   ecx,eax
  412670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412671:	ja     0x4125f6
  412673:	pop    ecx
  412674:	sbb    dl,BYTE PTR [eax]
  412676:	dec    esi
  412677:	cli    
  412678:	add    bl,al
  41267a:	hlt    
  41267b:	mov    esp,DWORD PTR [esi]
  41267d:	sub    eax,0xaa00ee26
  412682:	cmp    al,0x8b
  412684:	sets   al
  412687:	jno    0x41260b
  412689:	in     al,dx
  41268a:	dec    ecx
  41268b:	test   DWORD PTR [esp+ecx*2-0x48c9bc1d],edi
  412692:	jl     0x412618
  412694:	mov    edx,0x2c36768e
  412699:	(bad)  
  41269a:	add    BYTE PTR [ecx+0x4a],al
  41269d:	adc    ch,BYTE PTR [ebx]
  41269f:	jae    0x412713
  4126a1:	sub    BYTE PTR [ebx+0x74],cl
  4126a4:	test   DWORD PTR [edi+0x50481eed],esp
  4126aa:	int3   
  4126ab:	out    0xd4,eax
  4126ad:	and    bl,BYTE PTR [ecx-0x1a]
  4126b0:	jge    0x41263b
  4126b2:	mov    al,0x69
  4126b4:	cmp    edi,ecx
  4126b6:	pusha  
  4126b7:	rcr    ebx,0xed
  4126ba:	or     eax,0xf6f9008c
  4126bf:	aam    0x6d
  4126c1:	daa    
  4126c2:	(bad)  
  4126c3:	aas    
  4126c4:	into   
  4126c5:	dec    esp
  4126c6:	mov    ebp,0x9093f8ff
  4126cb:	movaps XMMWORD PTR [edi+0x4e0e1eb4],xmm1
  4126d2:	les    edx,FWORD PTR [ebx]
  4126d4:	dec    esp
  4126d5:	mov    al,0xbb
  4126d7:	push   ecx
  4126d8:	iret   
  4126d9:	adc    eax,DWORD PTR [eax+eax*8]
  4126dc:	push   0x7d
  4126de:	or     DWORD PTR [ebx+0x1268608e],edi
  4126e4:	jmp    0x4126e0
  4126e6:	cmp    BYTE PTR [esi-0x40413206],bh
  4126ec:	sbb    ch,BYTE PTR [ebp+0x78e8dd80]
  4126f2:	arpl   WORD PTR [edi+edi*2+0x31],si
  4126f6:	pop    edx
  4126f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126f8:	pop    eax
  4126f9:	call   0x3c62:0x1d45e552
  412700:	in     eax,0x60
  412702:	sub    edi,0x204b31d8
  412708:	ror    BYTE PTR [ebx+0x488ba773],1
  41270e:	jle    0x412710
  412710:	jbe    0x412754
  412712:	mov    bh,0x37
  412714:	adc    BYTE PTR [ebx+0x3d],bl
  412717:	push   ss
  412718:	add    BYTE PTR [edi-0x1ed9f9dd],bh
  41271e:	out    dx,eax
  41271f:	pop    esi
  412720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412721:	jp     0x4126ba
  412723:	or     ecx,DWORD PTR [esi+0x3d]
  412726:	cmp    al,0xd2
  412728:	jecxz  0x412717
  41272a:	xchg   esi,eax
  41272b:	and    ebx,DWORD PTR [ecx+0x45a89bd6]
  412731:	sbb    ecx,DWORD PTR [ebp+0x10f57305]
  412737:	or     eax,0x8d3d5edb
  41273c:	mov    esp,0x2796b7c7
  412741:	jbe    0x412708
  412743:	popa   
  412744:	or     eax,0x7daec71e
  412749:	out    0x78,al
  41274b:	sbb    DWORD PTR [esi],edx
  41274d:	push   edi
  41274e:	sbb    al,0x45
  412750:	aaa    
  412751:	clc    
  412752:	dec    edx
  412754:	iret   
  412755:	xchg   ecx,eax
  412756:	and    esp,DWORD PTR [ebp+0x21703378]
  41275c:	or     al,0x4a
  41275e:	pop    edi
  41275f:	pop    ebp
  412760:	mov    edi,0xd9bf8bf2
  412765:	lds    esi,FWORD PTR [edi+0x15]
  412768:	mov    ds:0x2041c91e,al
  41276d:	pop    edx
  41276e:	pop    ebp
  41276f:	cmc    
  412770:	jg     0x412708
  412772:	mov    dl,0x26
  412774:	por    mm3,QWORD PTR [ebp+0x5f99dd3e]
  41277b:	push   ebx
  41277c:	rol    DWORD PTR [edi+0x6d],1
  41277f:	out    0x40,eax
  412781:	int    0x29
  412783:	sar    bh,1
  412785:	sti    
  412786:	fstp   TBYTE PTR [ebx+0x53e96ade]
  41278c:	xor    BYTE PTR [eax+0x32],bl
  41278f:	add    eax,0x82ec21e8
  412794:	int3   
  412795:	or     DWORD PTR [ebp+0x4d],eax
  412798:	fs push ds
  41279a:	ret    0x56a2
  41279d:	outs   dx,BYTE PTR ds:[esi]
  41279e:	xor    eax,DWORD PTR [ebx-0x4d4cf2ee]
  4127a4:	xor    BYTE PTR [eax+ecx*2-0xe4a90c1],0xd4
  4127ac:	and    eax,0x1764b0d4
  4127b1:	test   eax,0xec108c1e
  4127b6:	out    0x89,al
  4127b8:	pop    es
  4127b9:	xor    BYTE PTR [esi+0xa],dh
  4127bc:	rcr    BYTE PTR [ebp-0x1943a305],cl
  4127c2:	dec    eax
  4127c3:	cld    
  4127c4:	and    eax,0x983b3896
  4127c9:	and    bh,BYTE PTR [eax-0x40]
  4127cc:	lds    ecx,FWORD PTR [esi-0x38]
  4127cf:	loop   0x412763
  4127d1:	stc    
  4127d2:	jnp    0x412791
  4127d4:	(bad)  cs:[edi]
  4127d7:	ss mov ah,0x27
  4127da:	mov    ebp,0xcf737546
  4127df:	test   al,0xeb
  4127e1:	and    eax,DWORD PTR [esi]
  4127e3:	mov    edx,gs
  4127e5:	cmp    eax,0xd00072fb
  4127ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127eb:	jnp    0x412775
  4127ed:	xchg   DWORD PTR [ebx+ecx*1-0x10],edx
  4127f1:	int    0x66
  4127f3:	push   0x51
  4127f5:	mov    eax,0xd5db5c6d
  4127fa:	retf   0x9c09
  4127fd:	jb     0x412829
  4127ff:	or     al,0x7
  412801:	aas    
  412802:	out    dx,eax
  412803:	push   ebx
  412804:	mov    cl,ch
  412806:	and    DWORD PTR [ebp+0xc1fb27e],0xffffffe7
  41280d:	stos   DWORD PTR es:[edi],eax
  41280e:	xchg   esi,eax
  41280f:	jbe    0x41283a
  412811:	adc    eax,DWORD PTR [edx*4+0x2a2f21fc]
  412818:	adc    eax,0x21c638d7
  41281d:	ins    BYTE PTR es:[edi],dx
  41281e:	cwde   
  41281f:	inc    esp
  412820:	jo     0x412852
  412822:	fs ins DWORD PTR es:[edi],dx
  412824:	imul   edx,DWORD PTR [ebp-0x34df899c],0x7d
  41282b:	adc    eax,0xc3f4535e
  412830:	or     BYTE PTR [ebx],bl
  412832:	psraw  mm6,QWORD PTR [esi-0x2f6f683e]
  412839:	adc    BYTE PTR [esi-0x186d2e92],dh
  41283f:	es cld 
  412841:	xor    dh,ah
  412843:	lds    eax,FWORD PTR [ecx+0x68]
  412846:	aas    
  412847:	mov    ds:0xb3f5c427,eax
  41284c:	pop    DWORD PTR [esi]
  41284e:	or     dh,cl
  412850:	test   DWORD PTR [edx-0x5],esi
  412853:	sbb    al,0xcf
  412855:	outs   dx,BYTE PTR ds:[esi]
  412856:	punpckhdq mm1,mm5
  412859:	pop    esp
  41285a:	push   esi
  41285b:	pop    eax
  41285c:	xchg   ebp,eax
  41285d:	lock adc DWORD PTR cs:[ebx],eax
  412861:	mov    ebx,0xd3e443e
  412866:	call   0xe72d:0x1354757d
  41286d:	push   ebp
  41286e:	adc    eax,0xb003221e
  412873:	scas   eax,DWORD PTR es:[edi]
  412874:	mov    bl,0xf
  412876:	sub    ah,BYTE PTR [bp+di]
  412879:	mov    al,ds:0x2df05f63
  41287e:	(bad)  
  41287f:	dec    edi
  412880:	rol    bh,cl
  412882:	test   DWORD PTR [edi+0x3a],ecx
  412885:	(bad)  
  412886:	or     eax,DWORD PTR [edi]
  412888:	lods   eax,DWORD PTR ds:[esi]
  412889:	bound  esp,QWORD PTR [ebp+0x1c2e05f]
  41288f:	mov    bl,0xe3
  412891:	add    eax,0x96140ff
  412896:	aas    
  412897:	shl    BYTE PTR [eax-0x30],1
  41289a:	pop    edi
  41289b:	push   ebx
  41289c:	sub    BYTE PTR [eax+0xb],bl
  41289f:	popf   
  4128a0:	jl     0x41282e
  4128a2:	mov    dl,0x24
  4128a4:	int3   
  4128a5:	ret    0x72fa
  4128a8:	jbe    0x41282e
  4128aa:	inc    eax
  4128ab:	out    dx,eax
  4128ac:	shr    esp,1
  4128ae:	inc    esi
  4128af:	mov    esi,0xf5b79165
  4128b4:	hlt    
  4128b5:	aaa    
  4128b6:	and    ch,BYTE PTR [esi+0x1ade8b70]
  4128bc:	mov    esp,0xfaf33446
  4128c1:	sub    bl,BYTE PTR [ecx+0x36]
  4128c4:	and    eax,0x8715a8f8
  4128c9:	pusha  
  4128ca:	fcom   DWORD PTR [ebx-0x2e]
  4128cd:	popa   
  4128ce:	ja     0x41292b
  4128d0:	jo     0x412853
  4128d2:	jmp    0x1702:0x2f68829e
  4128d9:	mov    eax,ds:0x8785841e
  4128de:	not    ebx
  4128e0:	loope  0x4128d5
  4128e2:	nop
  4128e3:	shr    ch,1
  4128e5:	mov    ebx,0x2f922285
  4128ea:	mov    edx,0xc940bc33
  4128ef:	inc    eax
  4128f0:	jp     0x4128de
  4128f2:	xor    eax,0x7607df49
  4128f7:	jp     0x4128f3
  4128f9:	xchg   esp,eax
  4128fa:	dec    ebp
  4128fb:	mov    edi,0xb420286d
  412900:	mov    al,0xea
  412902:	cmp    al,BYTE PTR [ebx]
  412904:	ret    
  412905:	sbb    ecx,esp
  412907:	popf   
  412908:	mov    edi,DWORD PTR [eax+0x245e3f64]
  41290e:	cmp    eax,0xae427793
  412913:	rcl    BYTE PTR [ecx+0x11],cl
  412916:	sbb    BYTE PTR [ebx-0x24e10031],ch
  41291c:	mov    edi,0x352cd200
  412921:	mov    eax,ds:0xa91cb99
  412926:	and    bh,BYTE PTR [esi]
  412928:	adc    bh,cl
  41292a:	cmp    eax,0xd26081be
  41292f:	rol    BYTE PTR [edx-0x7d],cl
  412932:	icebp  
  412933:	cmp    eax,0xbb8a5520
  412938:	mov    ch,0x54
  41293a:	retf   
  41293b:	inc    ebp
  41293c:	out    0x6e,al
  41293e:	push   edx
  41293f:	or     ah,BYTE PTR [ecx+ebx*2+0x56]
  412943:	mov    ebx,0x98380c04
  412948:	push   edi
  412949:	ds fwait
  41294b:	jl     0x412975
  41294d:	xchg   BYTE PTR [ebp-0x4d5e80c4],bl
  412953:	(bad)  
  412954:	jb     0x412924
  412956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412957:	repnz nop
  412959:	test   DWORD PTR [ebp+0x2a],ecx
  41295c:	popa   
  41295d:	nop
  41295e:	dec    edx
  41295f:	shr    BYTE PTR ds:0x3eba3876,0x37
  412966:	cmp    eax,ebx
  412968:	adc    edi,DWORD PTR [ebp-0x80]
  41296b:	mov    bh,0x6a
  41296d:	not    BYTE PTR [ebx]
  41296f:	out    0xa0,eax
  412971:	outs   dx,DWORD PTR ds:[esi]
  412972:	cmp    DWORD PTR [edx-0x20],eax
  412975:	ja     0x4128fe
  412977:	rcr    DWORD PTR [ebx-0x51],cl
  41297a:	push   ds
  41297b:	imul   ecx,DWORD PTR [ecx+0x2c],0x2888f309
  412982:	add    ecx,ecx
  412984:	pop    edx
  412985:	jbe    0x41297c
  412987:	mov    dh,BYTE PTR [eax+0x6b]
  41298a:	mov    ch,BYTE PTR [eax+0x72]
  41298d:	jbe    0x412a08
  41298f:	out    dx,eax
  412990:	push   cs
  412991:	clc    
  412992:	rol    dh,cl
  412994:	test   BYTE PTR [edi+0x14],cl
  412997:	pop    edx
  412998:	nop
  412999:	mov    ds:0x61e0e8d9,eax
  41299e:	loope  0x41294b
  4129a0:	xchg   ebx,eax
  4129a1:	sbb    bl,BYTE PTR [esi+0xa]
  4129a4:	call   0x4df7:0xfc3c2024
  4129ab:	test   al,0x76
  4129ad:	mov    ebx,edx
  4129af:	rcr    ch,cl
  4129b1:	je     0x4129b4
  4129b3:	das    
  4129b4:	inc    edi
  4129b5:	adc    eax,0x9c17a312
  4129ba:	and    BYTE PTR [edx-0x51],bl
  4129bd:	cmp    eax,0xc1009735
  4129c2:	xlat   BYTE PTR ds:[ebx]
  4129c3:	mul    esp
  4129c5:	mov    edi,0xeef9176e
  4129ca:	lea    ebx,[ecx]
  4129cc:	repnz inc esp
  4129ce:	out    0x84,eax
  4129d0:	in     al,0x7c
  4129d2:	lods   al,BYTE PTR ds:[esi]
  4129d3:	ret    
  4129d4:	add    ebp,DWORD PTR [eax+0x21]
  4129d7:	iret   
  4129d8:	fwait
  4129d9:	jg     0x41295f
  4129db:	out    0x74,al
  4129dd:	test   al,0x21
  4129df:	pop    es
  4129e0:	fs push eax
  4129e2:	test   BYTE PTR [ebp+0x3a],0x72
  4129e6:	cmp    ebp,DWORD PTR [ebx]
  4129e8:	mov    al,ds:0x2a6c7f86
  4129ed:	mov    ds:0xff33efca,eax
  4129f2:	inc    cl
  4129f4:	pop    edx
  4129f5:	jmp    0xf757:0xc0e92268
  4129fc:	push   esp
  4129fd:	push   0x7
  4129ff:	fdiv   DWORD PTR [esi+ebp*4]
  412a02:	sbb    al,0xdf
  412a04:	mov    esp,0x38562a0b
  412a09:	stos   BYTE PTR es:[edi],al
  412a0a:	(bad)  
  412a0b:	call   0xe7871d4e
  412a10:	xchg   ecx,eax
  412a11:	push   ebx
  412a12:	and    esi,DWORD PTR [ebx+0x70]
  412a15:	(bad)
  412a19:	shl    DWORD PTR [edi-0x5b],cl
  412a1c:	xor    BYTE PTR [edi],ah
  412a1e:	or     DWORD PTR [eax],ecx
  412a20:	outs   dx,DWORD PTR ds:[esi]
  412a21:	dec    ebx
  412a22:	jmp    0x51f939cb
  412a27:	sub    eax,DWORD PTR [ebx-0x76baabb]
  412a2d:	xchg   ecx,eax
  412a2e:	gs mov edx,0xde4bfe8
  412a34:	jle    0x4129c3
  412a36:	pop    edi
  412a37:	lds    esp,FWORD PTR [edi-0x3f4e5923]
  412a3d:	bound  ebp,QWORD PTR [ebp-0x41]
  412a40:	mov    esi,0x643df5b3
  412a45:	cmp    DWORD PTR [edx],ebx
  412a47:	aaa    
  412a48:	mov    al,0x12
  412a4a:	div    DWORD PTR [edx]
  412a4c:	mov    cl,BYTE PTR [edx-0x75d6a5d2]
  412a52:	and    edx,DWORD PTR [ebx]
  412a54:	push   0x7bfe0d22
  412a59:	aam    0x80
  412a5b:	popf   
  412a5c:	adc    eax,0xbb992498
  412a61:	push   ebx
  412a62:	jo     0x412a8e
  412a64:	ds inc ebp
  412a67:	mov    ss:0x8d20f544,al
  412a6d:	in     eax,0xd4
  412a6f:	jo     0x4129f6
  412a71:	arpl   WORD PTR [esi],cx
  412a73:	imul   ebx,DWORD PTR ds:0x3c468214,0xffffffa2
  412a7a:	push   ecx
  412a7b:	in     al,0x78
  412a7d:	push   ebp
  412a7e:	push   ebx
  412a7f:	jo     0x412a23
  412a81:	cmc    
  412a82:	cmp    BYTE PTR [ebp+0x52],0x3c
  412a86:	add    ecx,DWORD PTR [ebp+esi*1+0x4f]
  412a8a:	bnd call 0x8417cf3
  412a90:	add    eax,0xc9bb1657
  412a95:	fsub   QWORD PTR [esp+edx*8-0x46]
  412a99:	cmp    cl,BYTE PTR [eax+eax*2+0xa]
  412a9d:	mov    edi,0x48a7800b
  412aa2:	cmp    eax,0xc2aa2569
  412aa7:	mov    cl,0x87
  412aa9:	dec    edi
  412aaa:	(bad)  
  412aac:	add    eax,0xcfac111d
  412ab1:	mov    eax,ds:0x5f478c1e
  412ab6:	in     al,0xf5
  412ab8:	clc    
  412ab9:	popa   
  412aba:	and    edx,DWORD PTR [edi+0x70]
  412abd:	fs or  eax,0xb3b9f67c
  412ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ac4:	call   0xd2a30b6
  412ac9:	sub    DWORD PTR [edx-0x3e07ba92],ebx
  412acf:	sbb    BYTE PTR [edx-0x6f4382e4],dh
  412ad5:	and    al,BYTE PTR [eax+0x43fe27d8]
  412adb:	jecxz  0x412a9a
  412add:	dec    esi
  412ade:	test   al,0xfe
  412ae0:	iret   
  412ae1:	adc    eax,0xa660440b
  412ae7:	je     0x412ae8
  412ae9:	rcr    BYTE PTR [edx+0x16],0xe
  412aed:	lock nop
  412aef:	imul   esp,ebp,0xffffffe7
  412af2:	mov    ecx,0xbe9e4eda
  412af7:	mov    esi,0xb216eb0
  412afc:	cdq    
  412afd:	jmp    FWORD PTR [ebp-0x7c]
  412b00:	js     0x412a8d
  412b02:	add    eax,0x67577caf
  412b07:	lods   al,BYTE PTR ds:[esi]
  412b08:	pop    esi
  412b09:	loopne 0x412b7c
  412b0b:	jb     0x412b4a
  412b0d:	xchg   BYTE PTR fs:[eax-0x52d247c4],al
  412b14:	ror    BYTE PTR [ecx+0xa],0x70
  412b18:	xchg   edx,eax
  412b19:	add    dh,0xe
  412b1c:	fiadd  WORD PTR [ebx]
  412b1e:	push   esi
  412b1f:	test   eax,0x9ca05740
  412b24:	aaa    
  412b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b26:	or     eax,0x5833ab9c
  412b2b:	inc    eax
  412b2c:	and    BYTE PTR [eax],bh
  412b2e:	sub    ah,BYTE PTR [ebp-0x132c8414]
  412b34:	xor    DWORD PTR [edx+0x37],eax
  412b37:	shl    DWORD PTR [ecx-0x35af0e8e],cl
  412b3d:	sbb    esp,DWORD PTR [edi+esi*2]
  412b40:	mov    edx,0x666e3cde
  412b45:	ret    0x802a
  412b48:	enter  0x5a9b,0xce
  412b4c:	add    BYTE PTR [ebx+0x30],ah
  412b4f:	inc    ecx
  412b50:	retf   
  412b51:	jae    0x412b1a
  412b53:	jle    0x412aed
  412b55:	aaa    
  412b56:	mov    ah,0x60
  412b58:	and    BYTE PTR [ecx-0x52],bh
  412b5b:	xor    DWORD PTR [esi+ebx*1+0x4d2825a3],eax
  412b62:	cld    
  412b63:	cmc    
  412b64:	add    esp,DWORD PTR [ecx+0x69f4a7d1]
  412b6a:	cld    
  412b6b:	push   eax
  412b6c:	jbe    0x412bbd
  412b6e:	sub    eax,esp
  412b70:	mov    ebx,0x2866807c
  412b75:	test   BYTE PTR [ecx],dl
  412b77:	jbe    0x412bb9
  412b79:	cmp    ah,BYTE PTR [ebp+0x3282c319]
  412b7f:	fisub  DWORD PTR [edx-0x265cce44]
  412b85:	pop    ds
  412b86:	sub    edi,DWORD PTR [eax-0xae3eef5]
  412b8c:	and    BYTE PTR [ecx+0x54d18a1e],cl
  412b92:	arpl   WORD PTR [ebx+0x63],cx
  412b95:	mov    ds:0x73e474ec,eax
  412b9a:	mov    al,ds:0xe23e6ecd
  412b9f:	fdiv   st,st(2)
  412ba1:	push   cs
  412ba2:	xchg   ebp,eax
  412ba3:	pop    ss
  412ba4:	jns    0x412b8c
  412ba6:	inc    edi
  412ba7:	xchg   edx,eax
  412ba8:	adc    BYTE PTR [edi+0xb993942],bh
  412bae:	gs mov dh,0xa
  412bb1:	loope  0x412b88
  412bb3:	repz inc esi
  412bb5:	xchg   BYTE PTR [edx-0x788ac782],cl
  412bbb:	or     al,0x22
  412bbd:	bound  esp,QWORD PTR [ebx+0x7]
  412bc0:	add    BYTE PTR [edx],0xe9
  412bc3:	dec    ebx
  412bc4:	inc    edi
  412bc5:	and    cl,dh
  412bc7:	pop    ecx
  412bc8:	pop    ecx
  412bc9:	les    eax,FWORD PTR [esi-0x62432790]
  412bcf:	mov    eax,0xcdc1b554
  412bd4:	(bad)  
  412bd5:	(bad)  
  412bd6:	push   ds
  412bd7:	jo     0x412bac
  412bd9:	sub    ebp,edx
  412bdb:	sub    dh,ch
  412bdd:	ins    DWORD PTR es:[edi],dx
  412bde:	rol    BYTE PTR [esi+esi*2-0x31],0x11
  412be3:	es dec edx
  412be5:	mov    ebp,0x661c7911
  412bea:	push   0xffffffa9
  412bec:	stos   BYTE PTR es:[edi],al
  412bed:	out    0x0,al
  412bef:	and    ebp,ebx
  412bf1:	xchg   edi,eax
  412bf2:	test   BYTE PTR [ebx-0x703ce410],dh
  412bf8:	(bad)  
  412bf9:	xchg   esi,eax
  412bfa:	cmc    
  412bfb:	sub    al,al
  412bfd:	std    
  412bfe:	mov    bh,0xb1
  412c00:	(bad)  
  412c01:	call   0x32d8102c
  412c06:	iret   
  412c07:	jmp    0x2b38:0xdda5e396
  412c0e:	mov    cs,WORD PTR [ebp-0x5f]
  412c11:	jge    0x412c54
  412c13:	outs   dx,BYTE PTR ds:[esi]
  412c14:	sbb    DWORD PTR [edi],ecx
  412c16:	jecxz  0x412c77
  412c18:	jnp    0x412bfc
  412c1a:	hlt    
  412c1b:	jbe    0x412c37
  412c1d:	bound  edi,QWORD PTR [eax]
  412c1f:	or     eax,0x1e086683
  412c24:	dec    edx
  412c25:	or     eax,0x7f42fb67
  412c2a:	outs   dx,BYTE PTR ds:[esi]
  412c2b:	or     bl,cl
  412c2d:	pusha  
  412c2e:	stos   DWORD PTR es:[edi],eax
  412c2f:	(bad)  
  412c31:	pop    edx
  412c32:	pop    eax
  412c33:	pop    ebx
  412c34:	cmp    eax,0x7d30c4b5
  412c39:	sbb    eax,DWORD PTR [ebp+eiz*2-0xdeb6248]
  412c40:	imul   BYTE PTR [ebp+0x41]
  412c43:	push   es
  412c44:	push   ss
  412c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c46:	cmp    DWORD PTR [edi+0x13],ebx
  412c49:	mov    eax,DWORD PTR [ebx+0x46]
  412c4c:	jns    0x412c23
  412c4e:	scas   eax,DWORD PTR es:[edi]
  412c4f:	mov    dl,0x5a
  412c51:	xchg   ebx,eax
  412c52:	mov    bh,0x8f
  412c54:	pop    ebp
  412c55:	pop    ss
  412c56:	xchg   esp,eax
  412c57:	pop    esi
  412c58:	dec    esi
  412c59:	push   esi
  412c5a:	int3   
  412c5b:	out    dx,al
  412c5c:	pop    esp
  412c5d:	es scas al,BYTE PTR es:[edi]
  412c5f:	add    BYTE PTR [edi-0x11],dl
  412c62:	ficom  DWORD PTR [ebx]
  412c64:	loopne 0x412c60
  412c66:	fcmovnbe st,st(3)
  412c68:	mov    ?,WORD PTR [eax+eiz*4]
  412c6b:	ins    BYTE PTR es:[edi],dx
  412c6c:	(bad)  
  412c6d:	je     0x412c13
  412c6f:	jecxz  0x412c3c
  412c71:	or     eax,0x7fea5b3b
  412c76:	lods   eax,DWORD PTR ds:[esi]
  412c77:	in     al,0x0
  412c79:	add    DWORD PTR [ecx],0x11
  412c7c:	cmp    esi,DWORD PTR [edx-0x14]
  412c7f:	and    al,BYTE PTR [edi-0x2dc8eab1]
  412c85:	cmp    al,0x62
  412c87:	fcom   QWORD PTR ss:[edi+0x795faea6]
  412c8e:	sbb    BYTE PTR [edi-0x1d],dl
  412c91:	add    dl,BYTE PTR [eax+0x79]
  412c94:	mov    bh,0xc3
  412c96:	ja     0x412c94
  412c98:	jnp    0x412d00
  412c9a:	imul   ebx,edx,0xffffffbf
  412c9d:	hlt    
  412c9e:	and    DWORD PTR [edi-0xb84333],edx
  412ca4:	sub    DWORD PTR [esi+edx*2+0x64da4a23],esp
  412cab:	adc    eax,edi
  412cad:	out    0x4,eax
  412caf:	push   edx
  412cb0:	imul   edx,edx,0x46f1a17d
  412cb6:	pop    ds
  412cb7:	adc    ch,ch
  412cb9:	icebp  
  412cba:	daa    
  412cbb:	shr    DWORD PTR [ecx+ebx*4-0x221fa2cc],1
  412cc2:	pop    eax
  412cc3:	test   DWORD PTR [esi],0xcef7da75
  412cc9:	xor    dl,BYTE PTR [edi]
  412ccb:	loop   0x412ca6
  412ccd:	mov    dl,0x6f
  412ccf:	or     bh,BYTE PTR [ecx+esi*1-0x3a902516]
  412cd6:	scas   al,BYTE PTR es:[edi]
  412cd7:	pop    eax
  412cd8:	pop    eax
  412cd9:	xlat   BYTE PTR ds:[ebx]
  412cda:	and    al,0x39
  412cdc:	dec    eax
  412cdd:	or     eax,0x77e3abcd
  412ce2:	sbb    al,0x18
  412ce4:	mov    ?,ecx
  412ce6:	and    dl,BYTE PTR [esi+ecx*4-0x2]
  412cea:	scas   al,BYTE PTR es:[edi]
  412ceb:	ss mov esi,0x6cd8e7c2
  412cf1:	mov    gs,WORD PTR ds:0x5fee1c2d
  412cf7:	sbb    eax,0xde0dc73c
  412cfc:	sbb    al,0xb
  412cfe:	int3   
  412cff:	(bad)
  412d03:	pop    ecx
  412d04:	and    eax,0x9c937cf7
  412d09:	mov    ah,BYTE PTR [esi-0x541e5392]
  412d0f:	mov    dh,0x81
  412d11:	(bad)  
  412d12:	pop    edi
  412d13:	or     ebp,ebp
  412d15:	sub    al,BYTE PTR [ebp+0x326d755b]
  412d1b:	repnz mov esi,0xdd415590
  412d21:	mov    eax,ds:0x5b46b9d7
  412d26:	jl     0x412d76
  412d28:	clc    
  412d29:	cld    
  412d2a:	int    0x4c
  412d2c:	push   cs
  412d2d:	mov    dl,0x58
  412d2f:	sub    DWORD PTR [ebx+0x7143d253],eax
  412d35:	std    
  412d36:	ret    0xba45
  412d39:	ss addr16 in al,dx
  412d3c:	repnz mov ds:0x2aa586a4,eax
  412d42:	add    edi,esi
  412d44:	add    BYTE PTR [ecx+0x62],0x98
  412d48:	sub    ah,BYTE PTR [ebp+0x29]
  412d4b:	jl     0x412d11
  412d4d:	jl     0x412dc7
  412d4f:	aas    
  412d50:	cld    
  412d51:	popa   
  412d52:	out    0xa7,eax
  412d54:	pop    esp
  412d55:	call   0x80eb:0x23c935e3
  412d5c:	xchg   ecx,eax
  412d5d:	jmp    0xb227:0xf50ffb0d
  412d64:	add    bl,BYTE PTR [ebp+0x258270ae]
  412d6a:	cmp    edx,DWORD PTR [ebp+0x7738d2e8]
  412d70:	jmp    0xabcfcfb4
  412d75:	lods   eax,DWORD PTR ds:[esi]
  412d76:	push   esi
  412d77:	sbb    al,0x88
  412d79:	fwait
  412d7a:	pop    edi
  412d7b:	test   DWORD PTR [eax-0x42],ecx
  412d7e:	fcom   QWORD PTR [edx]
  412d80:	xor    eax,0x5e5dacfc
  412d85:	inc    ebp
  412d86:	fst    DWORD PTR [ecx-0x79]
  412d89:	and    eax,0x964addc
  412d8e:	xor    eax,0xf2e6d7a3
  412d93:	push   cs
  412d94:	sbb    esp,esp
  412d96:	sbb    ch,al
  412d98:	pop    ss
  412d99:	mov    edx,0x82396815
  412d9e:	dec    ecx
  412d9f:	mov    esp,0x3e1d9d70
  412da4:	xchg   esp,eax
  412da5:	fnstsw WORD PTR [eax]
  412da7:	dec    edi
  412da8:	fisttp QWORD PTR [eax+0x27]
  412dab:	mov    edx,0x58be251d
  412db0:	add    BYTE PTR [ebx+0x4],dh
  412db3:	bound  eax,QWORD PTR [edi+0xf]
  412db6:	mov    ebx,0x23a51160
  412dbb:	scas   al,BYTE PTR es:[edi]
  412dbc:	jne    0x412d5c
  412dbe:	mov    ebp,0x201ac755
  412dc3:	adc    eax,eax
  412dc5:	pop    ebp
  412dc6:	xchg   edi,eax
  412dc7:	sub    edi,DWORD PTR [eax+0x20]
  412dca:	inc    bp
  412dcc:	icebp  
  412dcd:	test   esi,edi
  412dcf:	xor    BYTE PTR [ebx-0x4c],ah
  412dd2:	rol    bl,0xfb
  412dd5:	sub    eax,0xbe72e959
  412dda:	rcl    DWORD PTR [eax],0xb3
  412ddd:	mov    dl,0xee
  412ddf:	inc    esi
  412de0:	fwait
  412de1:	enter  0xc822,0xee
  412de5:	push   ebx
  412de6:	xor    DWORD PTR [ebx-0x2],0x50
  412dea:	fs sbb al,0x7d
  412ded:	ret    
  412dee:	sti    
  412def:	(bad)  
  412df0:	call   0xaf8ee520
  412df5:	jg     0x412d88
  412df7:	adc    ebp,DWORD PTR [esp+eiz*2+0x48]
  412dfb:	mov    dl,0xab
  412dfd:	dec    ebx
  412dfe:	into   
  412dff:	add    esp,DWORD PTR [eax]
  412e01:	add    dl,ch
  412e03:	out    dx,al
  412e04:	inc    eax
  412e05:	rol    BYTE PTR [edi],1
  412e07:	js     0x412df6
  412e09:	dec    eax
  412e0a:	or     BYTE PTR [esp+ebx*1],dh
  412e0d:	icebp  
  412e0e:	sbb    cl,BYTE PTR [ecx]
  412e10:	ss jle 0x412e87
  412e13:	test   BYTE PTR [esi],bh
  412e15:	idiv   DWORD PTR [eax-0x72a2f82d]
  412e1b:	and    eax,0xe1182617
  412e20:	mov    ch,0xa0
  412e22:	imul   ebx,DWORD PTR [ebx-0x7ec6a77a],0x7db9a8f
  412e2c:	ret    0x819d
  412e2f:	test   al,0x54
  412e31:	cmp    DWORD PTR [edi],0x7d
  412e34:	jp     0x412e9f
  412e36:	jmp    0xd408:0x83c8639c
  412e3d:	out    dx,eax
  412e3e:	outs   dx,DWORD PTR ds:[esi]
  412e3f:	mov    edx,0x3d0d7401
  412e44:	inc    esp
  412e45:	data16 in al,dx
  412e47:	fiadd  DWORD PTR ds:0xeaad08a3
  412e4d:	in     eax,0x18
  412e4f:	xor    DWORD PTR [eax+0x3b0eef39],esi
  412e55:	aas    
  412e56:	mov    bl,0xc6
  412e58:	sar    DWORD PTR [ebp-0x40],0x3d
  412e5c:	mov    ebp,0x1f97898f
  412e61:	mov    ?,WORD PTR [ecx-0x2cac54]
  412e67:	rcr    DWORD PTR [edx+0x73d1a99d],0x24
  412e6e:	movnti DWORD PTR [edx+0x75],ebp
  412e72:	ror    BYTE PTR [ecx-0x40b3ab42],0x9a
  412e79:	xchg   ebp,eax
  412e7a:	mov    eax,ds:0x5eec70bd
  412e7f:	mov    BYTE PTR [ebx],bl
  412e81:	cmc    
  412e82:	js     0x412ec4
  412e84:	cmp    al,0x88
  412e86:	xchg   ebp,eax
  412e87:	stos   DWORD PTR es:[edi],eax
  412e88:	pop    ebx
  412e89:	dec    ebp
  412e8a:	pop    ebx
  412e8b:	inc    eax
  412e8c:	mov    eax,0xb398fe69
  412e91:	ffreep st(7)
  412e93:	xchg   edi,eax
  412e94:	in     al,0xc8
  412e96:	push   edx
  412e97:	mov    bh,BYTE PTR [edx]
  412e99:	mov    esp,0xf7ef7141
  412e9e:	add    dl,bh
  412ea0:	lods   eax,DWORD PTR ds:[esi]
  412ea1:	mov    al,ds:0xdfa6dfb4
  412ea6:	sub    edi,DWORD PTR [edx+0x432f4485]
  412eac:	(bad)  
  412ead:	push   ebx
  412eae:	pop    DWORD PTR [eax]
  412eb0:	inc    edx
  412eb1:	fwait
  412eb2:	test   BYTE PTR [ebx-0x54],ch
  412eb5:	leave  
  412eb6:	mov    eax,0xb18de571
  412ebb:	jo     0x412f34
  412ebd:	mov    edi,0x7abfd225
  412ec2:	jmp    0xd5c5:0xad26c266
  412ec9:	adc    al,0x1f
  412ecb:	jbe    0x412e6e
  412ecd:	shl    DWORD PTR [esi],1
  412ecf:	pop    esi
  412ed0:	push   ecx
  412ed1:	xchg   BYTE PTR cs:[edi+0x14],bl
  412ed5:	jmp    0xaa6d5329
  412eda:	(bad)  
  412edb:	in     al,dx
  412edc:	mov    gs,WORD PTR [eax]
  412ede:	cmp    al,dl
  412ee0:	into   
  412ee1:	cmc    
  412ee2:	cmp    eax,0x82d296bf
  412ee7:	xchg   cl,bh
  412ee9:	push   ds
  412eea:	test   al,0x24
  412eec:	in     al,0x63
  412eee:	fs xchg ecx,eax
  412ef0:	scas   al,BYTE PTR es:[edi]
  412ef1:	jle    0x412eb5
  412ef3:	(bad)  [ebx]
  412ef5:	loop   0x412eb6
  412ef7:	mov    edx,0x9b4d67d7
  412efc:	lock fstp DWORD PTR ds:0x1152dbe8
  412f03:	loop   0x412efa
  412f05:	add    eax,0xfef766a1
  412f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f0b:	loopne 0x412f64
  412f0d:	rcl    BYTE PTR [ebx-0x26],cl
  412f10:	loop   0x412f8c
  412f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f13:	leave  
  412f14:	fistp  WORD PTR [eax]
  412f16:	sub    eax,0xc0f54910
  412f1b:	lods   al,BYTE PTR ds:[esi]
  412f1c:	jecxz  0x412f38
  412f1e:	and    al,0xee
  412f20:	pop    es
  412f21:	or     al,0x88
  412f23:	sub    ebp,ecx
  412f25:	adc    DWORD PTR [ebx],edi
  412f27:	mov    dh,0x45
  412f29:	mov    cl,0x56
  412f2b:	mov    eax,0x7d747288
  412f30:	call   0x7f663e5
  412f35:	jge    0x412eec
  412f37:	es sub bl,dl
  412f3a:	lahf   
  412f3b:	fstp   TBYTE PTR ds:0x4b2abd77
  412f41:	or     BYTE PTR [edx+0x32],al
  412f44:	rcl    ebp,0xb3
  412f47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f48:	or     al,0x9a
  412f4a:	pop    es
  412f4b:	popf   
  412f4c:	cmp    eax,0xb466ebca
  412f51:	paddsb mm3,mm0
  412f54:	pushf  
  412f55:	js     0x412f7b
  412f57:	nop
  412f58:	ins    WORD PTR es:[edi],dx
  412f5a:	pop    ebx
  412f5b:	sbb    DWORD PTR [esi],ecx
  412f5d:	out    dx,eax
  412f5e:	mov    DWORD PTR [eax],ecx
  412f60:	loope  0x412f68
  412f62:	out    0xad,al
  412f64:	inc    eax
  412f65:	pop    esi
  412f66:	test   BYTE PTR [ebp-0x181489e0],al
  412f6c:	add    BYTE PTR [edx-0x26f0a7af],0xdb
  412f73:	push   0x65
  412f75:	sub    BYTE PTR [edx*4+0x7dc98a70],al
  412f7c:	mov    ebp,0x242ddae6
  412f81:	in     eax,dx
  412f82:	test   al,0x9e
  412f84:	inc    ebp
  412f85:	push   es
  412f86:	and    BYTE PTR [esi+eax*2+0x10b1f2ba],0xf9
  412f8e:	hlt    
  412f8f:	mov    bl,0x80
  412f91:	jne    0x413004
  412f93:	arpl   WORD PTR [esi-0x5a],si
  412f96:	pop    ss
  412f97:	dec    ebp
  412f98:	outs   dx,DWORD PTR ds:[esi]
  412f99:	fidiv  WORD PTR [edx+edi*8+0x1d6955d0]
  412fa0:	inc    ebx
  412fa1:	jl     0x412f8f
  412fa3:	sbb    edi,DWORD PTR [ebx-0x726f0f9c]
  412fa9:	sysexit 
  412fab:	call   0xc0d512d4
  412fb0:	mov    ch,0xad
  412fb2:	push   ebx
  412fb3:	push   ebp
  412fb4:	sub    BYTE PTR [esi+0x1e],0x71
  412fb8:	data16 adc ch,BYTE PTR [esi+ecx*2-0x2b6d615e]
  412fc0:	lea    ebx,[edi+eiz*2+0x67]
  412fc4:	ins    BYTE PTR es:[edi],dx
  412fc5:	in     al,0xa4
  412fc7:	fdivr  st(0),st
  412fc9:	xor    eax,0x53c30d03
  412fce:	mov    eax,0x6f91f53b
  412fd3:	mov    eax,0xe9f4facf
  412fd8:	mov    ah,0x72
  412fda:	(bad)  
  412fdb:	bound  edx,QWORD PTR [ebx+0x13]
  412fde:	or     esi,edx
  412fe0:	aaa    
  412fe1:	mov    ah,0xdf
  412fe3:	pushf  
  412fe4:	dec    edi
  412fe5:	cmc    
  412fe6:	xchg   esi,eax
  412fe7:	push   ss
  412fe8:	popf   
  412fe9:	retf   0x9456
  412fec:	pop    edx
  412fed:	add    ecx,DWORD PTR [esi]
  412fef:	les    eax,FWORD PTR [esi]
  412ff1:	pop    ss
  412ff2:	dec    eax
  412ff3:	(bad)  
  412ff4:	jg     0x413004
  412ff6:	mov    al,0x8f
  412ff8:	jl     0x413046
  412ffa:	jb     0x413000
  412ffc:	inc    ebp
  412ffd:	cdq    
  412ffe:	xor    ch,BYTE PTR [ecx+0x2e013332]
  413004:	or     esi,DWORD PTR [ecx]
  413006:	pop    ss
  413007:	(bad)
  41300a:	fcmovnu st,st(4)
  41300c:	dec    edi
  41300d:	dec    eax
  41300e:	jb     0x412fca
  413010:	mov    ds:0x93be6de,al
  413015:	jae    0x41300c
  413017:	inc    esi
  413018:	xchg   esi,eax
  413019:	mov    ebx,0x568d4889
  41301e:	xchg   esi,eax
  41301f:	jge    0x413099
  413021:	xor    cl,BYTE PTR [edx-0x80]
  413024:	stos   DWORD PTR es:[edi],eax
  413025:	mov    edx,0x3cdfd1fb
  41302a:	shl    ebx,0x4f
  41302d:	mov    esi,0x1d18c59f
  413032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413033:	loop   0x4130b3
  413035:	pop    ds
  413036:	ins    DWORD PTR es:[edi],dx
  413037:	fcomp  QWORD PTR [ecx+0x38]
  41303a:	pop    ebx
  41303b:	xchg   DWORD PTR [ecx+0x4],ecx
  41303e:	pop    edi
  41303f:	push   cs
  413040:	test   BYTE PTR [edx+ebp*4],dh
  413043:	inc    edi
  413044:	pop    ebp
  413045:	adc    edx,DWORD PTR [edi-0x2bf9edd]
  41304b:	pop    ss
  41304c:	bound  esp,QWORD PTR [eax+0x4f]
  41304f:	arpl   dx,bx
  413051:	scas   eax,DWORD PTR es:[edi]
  413052:	cmp    DWORD PTR [ebp-0x73db8dd7],ebp
  413058:	ins    BYTE PTR es:[edi],dx
  413059:	fld    DWORD PTR fs:[edi+edi*4-0x4e]
  41305e:	xchg   esp,eax
  41305f:	xlat   BYTE PTR ds:[ebx]
  413060:	add    eax,0xd6f7731f
  413065:	ds ds stos DWORD PTR es:[edi],eax
  413068:	in     eax,0x4
  41306a:	lock sub eax,0x7800a01b
  413070:	icebp  
  413071:	jbe    0x4130e2
  413073:	pop    edx
  413074:	pop    es
  413075:	cmp    eax,0xe7099438
  41307a:	leave  
  41307b:	add    ecx,0x2d
  41307e:	scas   eax,DWORD PTR es:[edi]
  41307f:	jns    0x41304b
  413081:	cdq    
  413082:	xchg   ebx,eax
  413083:	loop   0x4130d9
  413085:	push   esi
  413086:	jl     0x4130bb
  413088:	rcl    DWORD PTR [esi],cl
  41308a:	test   al,0x27
  41308c:	mov    ah,0x4
  41308e:	mov    cl,0xbd
  413090:	dec    ebp
  413091:	mov    cs,WORD PTR [esi-0x64dc487b]
  413097:	and    al,0xe8
  413099:	inc    eax
  41309a:	cmp    eax,0xa1b71975
  41309f:	data16 aas 
  4130a1:	push   esp
  4130a2:	stc    
  4130a3:	xor    DWORD PTR [ecx-0x2b],ebp
  4130a6:	lods   al,BYTE PTR ds:[esi]
  4130a7:	xor    al,0x6a
  4130a9:	in     eax,0x3b
  4130ab:	(bad)  
  4130ac:	(bad)  
  4130ad:	add    ebp,DWORD PTR [esi-0x79]
  4130b0:	es dec edi
  4130b2:	retf   
  4130b3:	test   DWORD PTR ds:0x4aeb4b29,ebx
  4130b9:	push   es
  4130ba:	out    0xe1,eax
  4130bc:	sub    eax,0xf1bebd29
  4130c1:	mov    dl,0xbc
  4130c3:	and    DWORD PTR [edi+0x79],edi
  4130c6:	pop    eax
  4130c7:	jmp    0x413133
  4130c9:	outs   dx,DWORD PTR ds:[esi]
  4130ca:	stos   BYTE PTR es:[edi],al
  4130cb:	push   ebp
  4130cc:	int    0x88
  4130ce:	inc    esp
  4130cf:	je     0x413094
  4130d1:	shl    BYTE PTR [edi*2-0x4d95fa70],1
  4130d8:	xor    DWORD PTR [edi+ebp*4+0x2c],esp
  4130dc:	imul   esp,DWORD PTR [edi+0xdd24f61],0xfffffffa
  4130e3:	aad    0xae
  4130e5:	aam    0xe2
  4130e7:	jbe    0x4130f0
  4130e9:	loope  0x41311b
  4130eb:	pop    ecx
  4130ec:	pop    ss
  4130ed:	icebp  
  4130ee:	add    ah,BYTE PTR [ecx-0x3b68e17f]
  4130f4:	dec    ebx
  4130f5:	enter  0x5f5f,0x9e
  4130f9:	fidiv  WORD PTR ds:[ecx+0x3d6828ff]
  413100:	out    0xe0,al
  413102:	test   al,0xe8
  413104:	dec    esi
  413105:	pop    edx
  413106:	jnp    0x4130b5
  413108:	push   cs
  413109:	pop    ebp
  41310a:	imul   ebp,DWORD PTR [esi+0x5a],0x8eb44103
  413111:	sti    
  413112:	lahf   
  413113:	mov    edx,0x5ab64f6d
  413118:	jo     0x4130b9
  41311a:	mov    ecx,0x56212785
  41311f:	sbb    cl,BYTE PTR [ebp+0x205b75b]
  413125:	xor    eax,0xa9124585
  41312a:	pop    esi
  41312b:	jns    0x4130c4
  41312d:	mov    dl,0x7c
  41312f:	push   edi
  413130:	lods   eax,DWORD PTR ds:[esi]
  413131:	pop    edx
  413132:	test   al,0x15
  413134:	pushf  
  413135:	leave  
  413136:	adc    eax,0xdfdb21ab
  41313b:	xor    eax,0xc61036c0
  413140:	call   0xd4e76af3
  413145:	loope  0x4131aa
  413147:	xor    ebx,DWORD PTR ds:0xd688503d
  41314d:	pop    ecx
  41314e:	(bad)  
  41314f:	sar    ecx,cl
  413151:	push   cs
  413152:	cmp    BYTE PTR [eax],cl
  413154:	add    esi,DWORD PTR [edx-0x11]
  413157:	je     0x4131a9
  413159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41315a:	pop    ecx
  41315b:	xor    BYTE PTR [edx-0x795a9df9],cl
  413161:	loope  0x4131c4
  413163:	in     al,0x50
  413165:	adc    al,0xbd
  413167:	or     al,0x26
  413169:	es jbe 0x413171
  41316c:	leave  
  41316d:	xrelease xchg BYTE PTR [ebp+0x7e],bh
  413171:	int    0xee
  413173:	sbb    DWORD PTR [edx+0x7d4fb3d8],0xbfea3ca6
  41317d:	out    0x7e,eax
  41317f:	add    al,BYTE PTR [edi-0x77]
  413182:	addr16 sti 
  413184:	push   ds
  413185:	adc    dh,BYTE PTR [ecx]
  413187:	cmp    DWORD PTR [esi],ebx
  413189:	or     cl,BYTE PTR [edx+0x67c2b0a]
  41318f:	cld    
  413190:	sub    esp,eax
  413192:	sar    DWORD PTR [ebp-0x76d7f0ea],cl
  413198:	or     ecx,DWORD PTR [esi]
  41319a:	aaa    
  41319b:	xor    edi,DWORD PTR [edx-0x3b]
  41319e:	ror    BYTE PTR [esi+0x56],1
  4131a1:	ja     0x41317f
  4131a3:	nop
  4131a4:	add    ebx,DWORD PTR [esi-0x22]
  4131a7:	pop    esi
  4131a8:	or     ah,BYTE PTR [edx+0x3a]
  4131ab:	mov    edi,0x9c92cf11
  4131b0:	loopne 0x4131cf
  4131b2:	in     al,dx
  4131b3:	sub    esi,DWORD PTR [ebp-0x22eb5569]
  4131b9:	cmp    DWORD PTR ds:0xb22fd9a0,esi
  4131bf:	popa   
  4131c0:	outs   dx,BYTE PTR ds:[esi]
  4131c1:	not    DWORD PTR [edi+ebp*2+0x19dc40e]
  4131c8:	mov    bl,0x12
  4131ca:	cmc    
  4131cb:	cmp    al,0xd8
  4131cd:	sbb    dl,ch
  4131cf:	xor    al,BYTE PTR [ebx-0x350a1f42]
  4131d5:	in     eax,0xa9
  4131d7:	es add edx,esp
  4131da:	sbb    al,0x89
  4131dc:	xor    ebp,ecx
  4131de:	pop    ecx
  4131df:	ss xor eax,0xaa07a721
  4131e5:	and    BYTE PTR [edi],0x73
  4131e8:	add    DWORD PTR [edx+0x19848d3f],esi
  4131ee:	jmp    0xa4df3c94
  4131f3:	les    ebp,FWORD PTR [ecx+0x51fead14]
  4131f9:	fwait
  4131fa:	ret    
  4131fb:	in     eax,dx
  4131fc:	mov    ch,0xec
  4131fe:	adc    al,0xb1
  413200:	adc    eax,0xcac75b10
  413205:	sbb    eax,0xab081695
  41320a:	adc    ch,ah
  41320c:	mov    WORD PTR [edx],cs
  41320e:	pop    ss
  41320f:	cmp    ebp,DWORD PTR [edx+eax*2]
  413212:	mov    bh,0x5c
  413214:	sbb    ah,bh
  413216:	push   cs
  413217:	or     BYTE PTR [ebx+edi*4+0x38],bh
  41321b:	sub    edx,DWORD PTR [edi]
  41321d:	stc    
  41321e:	push   ebp
  41321f:	sub    eax,0x4e7174b
  413224:	adc    DWORD PTR [edi*8-0x20ae9907],edi
  41322b:	dec    esp
  41322c:	cmp    eax,0x33508053
  413231:	jno    0x41328a
  413233:	nop
  413234:	mov    ebx,DWORD PTR [eax]
  413236:	lods   al,BYTE PTR ds:[esi]
  413237:	xchg   edx,eax
  413238:	or     DWORD PTR [eax-0x1ebd8e52],ebp
  41323e:	mov    al,ds:0xa00266f
  413243:	add    BYTE PTR [ecx+0x4b],al
  413246:	(bad)  
  413247:	jl     0x41327e
  413249:	add    esi,DWORD PTR ds:0x92ff60c5
  41324f:	push   ebx
  413250:	lds    ebx,FWORD PTR [ecx-0x7d]
  413253:	mov    bh,0xa1
  413255:	retf   
  413256:	sbb    al,0xd8
  413258:	xchg   ecx,eax
  413259:	std    
  41325a:	cmp    ch,BYTE PTR [ebp+ebp*1-0x62]
  41325e:	jbe    0x41327c
  413260:	inc    esi
  413261:	daa    
  413262:	xor    BYTE PTR [edx],cl
  413264:	mov    WORD PTR [edi+edi*8+0x4de992c9],ds
  41326b:	xor    al,0xa3
  41326d:	push   edi
  41326e:	fmul   DWORD PTR [eax+0x5d2648a2]
  413274:	xor    eax,0x1e5c4cca
  413279:	int    0xa5
  41327b:	div    ch
  41327d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41327e:	cmp    al,0x1c
  413280:	sub    eax,0x40020463
  413285:	lahf   
  413286:	mov    bl,0x4e
  413288:	mov    ah,0x71
  41328a:	shr    al,1
  41328c:	mov    al,ds:0x7a55eac6
  413291:	fdivrp st(1),st
  413293:	push   esp
  413294:	nop
  413295:	push   ebp
  413296:	sub    dl,bh
  413298:	iret   
  413299:	inc    ebp
  41329a:	sahf   
  41329b:	in     al,0xa6
  41329d:	imul   ebp,DWORD PTR [esi],0xffffffb2
  4132a0:	imul   al
  4132a2:	push   ss
  4132a3:	and    eax,0x42cba228
  4132a8:	(bad)  
  4132aa:	lahf   
  4132ab:	mov    al,ah
  4132ad:	or     DWORD PTR [ebp-0x14],esp
  4132b0:	retf   0xf637
  4132b3:	push   0xe5c53de7
  4132b8:	cs push ecx
  4132ba:	in     eax,0xc9
  4132bc:	(bad)  
  4132bd:	idiv   ebp
  4132bf:	jb     0x41331a
  4132c1:	mov    edx,0xccf41f49
  4132c6:	out    dx,eax
  4132c7:	(bad)  
  4132c8:	dec    ebx
  4132c9:	ror    ch,1
  4132cb:	push   ecx
  4132cc:	mov    ebx,0xb230bd77
  4132d1:	pop    ebx
  4132d2:	adc    DWORD PTR [edx+ebx*2],0xffffffc1
  4132d6:	mov    DWORD PTR [ecx-0x6e005cac],eax
  4132dc:	ret    0x1af7
  4132df:	mov    ds:0x2c7482d4,al
  4132e4:	sti    
  4132e5:	jg     0x4132f6
  4132e7:	pop    esp
  4132e8:	(bad)  [ebx]
  4132ea:	push   0x6800a2df
  4132ef:	xchg   edi,eax
  4132f0:	xchg   edi,eax
  4132f1:	pop    esp
  4132f2:	adc    al,0x1b
  4132f4:	adc    eax,0xcae1b7e4
  4132f9:	imul   esp,ebp,0xbbe5eb47
  4132ff:	xchg   ecx,eax
  413300:	mov    esp,0xac960db0
  413305:	inc    edx
  413306:	ja     0x413314
  413308:	imul   ebp,DWORD PTR [esi],0x38dae17c
  41330e:	dec    ecx
  41330f:	and    BYTE PTR [edx+eiz*2-0x76],dh
  413313:	push   ds
  413314:	clc    
  413315:	fsubr  QWORD PTR [eax-0x53]
  413318:	mov    ch,0xf
  41331a:	mov    edx,0xbc00f7c7
  41331f:	div    BYTE PTR [edi-0x5f2b81a7]
  413325:	mov    BYTE PTR [ebp+0xa28b768],bl
  41332b:	clc    
  41332c:	lea    edx,[ecx]
  41332e:	mov    ah,0x98
  413330:	mov    bh,0x3c
  413332:	mov    dl,0x88
  413334:	mov    dh,0x6f
  413336:	xor    eax,0xabc4c327
  41333b:	sub    eax,0x30e8a24f
  413340:	jb     0x41338e
  413342:	fld    TBYTE PTR [edi-0x54]
  413345:	mov    esp,DWORD PTR [eax+ecx*1-0x2a]
  413349:	cmp    DWORD PTR [eax],0x3c
  41334c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41334d:	(bad)  
  41334e:	cmc    
  41334f:	pop    ecx
  413350:	out    dx,eax
  413351:	shl    DWORD PTR [ecx],0x52
  413354:	push   ebp
  413355:	xchg   ebx,eax
  413356:	inc    ebx
  413357:	fwait
  413358:	pop    ds
  413359:	jp     0x4133bd
  41335b:	jp     0x4133d6
  41335d:	xchg   ebx,ecx
  41335f:	loop   0x4132ee
  413361:	jne    0x41332b
  413363:	fiadd  DWORD PTR [edi-0x6f]
  413366:	pusha  
  413367:	add    al,0x99
  413369:	dec    ebx
  41336a:	or     bh,dl
  41336c:	shr    BYTE PTR [ebx+eax*8],0x68
  413370:	enter  0xfa3d,0xbb
  413374:	jns    0x413302
  413376:	sbb    al,0x5
  413378:	mov    bl,0xb1
  41337a:	rcl    DWORD PTR [ecx],0x53
  41337d:	ret    
  41337e:	xchg   edi,eax
  41337f:	adc    al,dl
  413381:	and    BYTE PTR [ecx],bh
  413383:	ret    0xf9c
  413386:	(bad)  
  413387:	or     ebx,DWORD PTR [edx+0x2f]
  41338a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41338b:	dec    eax
  41338c:	xor    DWORD PTR [edx],eax
  41338e:	dec    esi
  41338f:	icebp  
  413390:	loope  0x41337d
  413392:	jp     0x4133f4
  413394:	xchg   ebp,eax
  413395:	push   cs
  413396:	jne    0x413411
  413398:	fidiv  WORD PTR [eax-0x2a25863d]
  41339e:	retf   
  41339f:	xchg   ebp,eax
  4133a0:	jge    0x41338e
  4133a2:	jbe    0x413380
  4133a4:	mov    cl,0x21
  4133a6:	add    BYTE PTR [ebx+0x30],bl
  4133a9:	mov    ds:0x7a350291,eax
  4133ae:	sbb    DWORD PTR [ecx+0x3288c05c],ebx
  4133b4:	test   eax,0x55125a57
  4133b9:	movups xmm7,XMMWORD PTR [edx-0x1c940fff]
  4133c0:	or     edi,DWORD PTR [ebp+0x550f4a5c]
  4133c6:	push   ebp
  4133c7:	push   eax
  4133c8:	ret    
  4133c9:	out    0x88,eax
  4133cb:	push   esi
  4133cc:	cmp    ecx,DWORD PTR [ebx-0x6a]
  4133cf:	jecxz  0x4133d1
  4133d1:	jns    0x413412
  4133d3:	mov    ch,0x9a
  4133d5:	stos   BYTE PTR es:[edi],al
  4133d6:	iret   
  4133d7:	adc    al,BYTE PTR [ecx+0x42daf017]
  4133dd:	jmp    0x94ea59f0
  4133e2:	(bad)  
  4133e3:	pop    esi
  4133e4:	and    BYTE PTR [edi+eiz*8-0x3a],0x3
  4133e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ea:	mov    dl,bh
  4133ec:	mov    bh,0xb3
  4133ee:	adc    ecx,ebp
  4133f0:	inc    BYTE PTR [ebp+eiz*4+0x60]
  4133f4:	mov    bh,0x42
  4133f6:	dec    esp
  4133f7:	push   0x84c3c714
  4133fc:	jmp    0x4f88d8b
  413401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413402:	call   0x36a:0x8a46979f
  413409:	adc    ebx,DWORD PTR [ebx]
  41340b:	jbe    0x413423
  41340d:	fdiv   QWORD PTR [edx]
  41340f:	or     eax,0x488ab865
  413414:	and    bl,BYTE PTR [edx]
  413416:	sbb    DWORD PTR [ecx+0x61c59bf1],eax
  41341c:	or     edi,DWORD PTR [esp+eiz*4-0x17d02b3d]
  413423:	mov    dh,0xae
  413425:	aad    0xfb
  413427:	xor    al,0x5d
  413429:	rcr    BYTE PTR [ebx-0x54],1
  41342c:	xor    cl,BYTE PTR [eax+0x67]
  41342f:	scas   al,BYTE PTR es:[edi]
  413430:	mov    al,0x7c
  413432:	fld    st(5)
  413434:	ret    
  413435:	shl    ch,0x30
  413438:	loopne 0x4134a4
  41343a:	xchg   edi,eax
  41343b:	(bad)  
  41343c:	mov    ebp,0xe2b91daf
  413441:	mov    ebp,0xb35e69ca
  413446:	cs scas al,BYTE PTR es:[edi]
  413448:	mov    esp,0xea2ffc56
  41344d:	fstp   QWORD PTR [esi]
  41344f:	and    ch,bh
  413451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413452:	push   ebx
  413453:	xor    edi,edx
  413455:	pop    ebx
  413456:	dec    esp
  413457:	cmp    eax,0x96bfdd08
  41345c:	xor    DWORD PTR [edx+0x48],ebp
  41345f:	lods   al,BYTE PTR ds:[esi]
  413460:	out    0x3e,al
  413462:	adc    BYTE PTR [ecx],cl
  413464:	into   
  413465:	dec    BYTE PTR [esi]
  413467:	add    ecx,DWORD PTR [ecx+0x31]
  41346a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41346b:	adc    bl,BYTE PTR [eax]
  41346d:	repz push ds
  41346f:	add    ebp,DWORD PTR [ecx-0x16a34fdf]
  413475:	add    eax,0x3cc40ce9
  41347a:	movsx  ebx,WORD PTR [esi]
  41347d:	ja     0x41343d
  41347f:	adc    BYTE PTR [edi-0x6434ef47],ch
  413485:	push   ds
  413486:	pop    ebx
  413487:	push   0x64c98bc5
  41348c:	pop    ecx
  41348d:	mov    dh,0x92
  41348f:	inc    esp
  413490:	jmp    0xc7b64d0a
  413495:	loop   0x4134d6
  413497:	or     ebx,DWORD PTR [edi+esi*1+0x69ae6404]
  41349e:	mov    dh,0xc7
  4134a0:	pop    edi
  4134a1:	add    ecx,eax
  4134a3:	or     eax,0x84ed65a6
  4134a8:	add    al,0x19
  4134aa:	(bad)  [ebx-0x32]
  4134ad:	rcl    BYTE PTR ds:0x7ca53305,cl
  4134b3:	and    BYTE PTR gs:[ecx+0x8c7a548],dh
  4134ba:	mov    eax,ds:0xab023794
  4134bf:	inc    ebx
  4134c0:	pop    ss
  4134c1:	or     BYTE PTR [edx],bh
  4134c3:	jl     0x4134ec
  4134c5:	inc    cx
  4134c7:	shl    BYTE PTR [ecx+0x3a],0xc2
  4134cb:	push   es
  4134cc:	jge    0x41346b
  4134ce:	sar    BYTE PTR [ecx],1
  4134d0:	lahf   
  4134d1:	dec    ecx
  4134d2:	aas    
  4134d3:	jne    0x413460
  4134d5:	jb     0x4134b4
  4134d7:	enter  0xb81,0xbb
  4134db:	cwde   
  4134dc:	jnp    0x4134a3
  4134de:	xor    DWORD PTR [esp+ebp*1-0x3f],ebx
  4134e2:	push   ebx
  4134e3:	and    esi,esp
  4134e5:	gs push esp
  4134e7:	jne    0x413529
  4134e9:	and    eax,0x3fd17930
  4134ee:	jg     0x413528
  4134f0:	mov    edx,0x79cb195a
  4134f5:	xchg   edi,eax
  4134f6:	lods   eax,DWORD PTR ds:[esi]
  4134f7:	rcl    DWORD PTR [edx+ecx*2],cl
  4134fa:	jo     0x4134af
  4134fc:	iret   
  4134fd:	push   ss
  4134fe:	pop    ecx
  4134ff:	xchg   eax,ebx
  413501:	inc    esi
  413502:	pop    es
  413503:	call   0xef5d:0x5c8089ce
  41350a:	mov    cl,0x3d
  41350c:	and    eax,0x5cafc04
  413511:	loop   0x41350f
  413513:	mov    bh,0x7a
  413515:	add    ebp,DWORD PTR [ebp-0x76]
  413518:	xchg   esi,eax
  413519:	test   DWORD PTR [ecx+eiz*4],ecx
  41351c:	mov    DWORD PTR [edx-0x3d],esp
  41351f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413520:	sbb    eax,0x71b2fa18
  413525:	test   eax,0x5d00ea43
  41352a:	cmp    al,0x8
  41352c:	sbb    al,0x98
  41352e:	std    
  41352f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413530:	sbb    BYTE PTR [ecx-0x57072647],al
  413536:	mov    edx,0xda32790b
  41353b:	push   edx
  41353c:	and    DWORD PTR ds:0x85e8b5f9,eax
  413542:	jae    0x4134ea
  413544:	(bad)  
  413545:	dec    esp
  413546:	outs   dx,DWORD PTR ds:[esi]
  413547:	cwde   
  413548:	push   ss
  413549:	dec    edi
  41354a:	xor    DWORD PTR [eax],0xa1438cf7
  413550:	push   0xffffff91
  413552:	ret    0x649f
  413555:	shr    DWORD PTR [ecx],0xf0
  413558:	gs jbe 0x4134f6
  41355b:	jnp    0x4135ad
  41355d:	inc    esp
  41355e:	in     eax,0xc8
  413560:	xchg   ebp,eax
  413561:	lock pop ss
  413563:	jne    0x4135c5
  413565:	dec    edi
  413566:	xchg   esp,eax
  413567:	sti    
  413568:	mov    eax,ds:0xafb9808
  41356d:	add    al,0xe7
  41356f:	xlat   BYTE PTR ds:[ebx]
  413570:	xchg   esi,eax
  413571:	int    0x2c
  413573:	(bad)  
  413575:	mov    esi,0xa7410a02
  41357a:	dec    ebp
  41357b:	pop    edi
  41357c:	out    dx,al
  41357d:	push   0xddf53d34
  413582:	or     ch,BYTE PTR [esi]
  413584:	sbb    bl,BYTE PTR [ebx+0x38]
  413587:	test   al,0x8f
  413589:	out    dx,al
  41358a:	cdq    
  41358b:	fsub   st,st(5)
  41358d:	or     BYTE PTR [ebx-0x5a],cl
  413590:	dec    edx
  413591:	pushf  
  413592:	das    
  413593:	aad    0xdb
  413595:	jge    0x413546
  413597:	lahf   
  413598:	mov    ch,0x23
  41359a:	les    eax,FWORD PTR [esi]
  41359c:	cmp    BYTE PTR [ecx-0x5f732a83],0x44
  4135a3:	mov    eax,0x7ab43da5
  4135a8:	hlt    
  4135a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135aa:	push   ds
  4135ab:	cld    
  4135ac:	retf   
  4135ad:	push   esi
  4135ae:	mov    BYTE PTR [ecx-0x53],bh
  4135b1:	fisttp QWORD PTR [eax-0x46b89d4c]
  4135b7:	dec    ebp
  4135b8:	pushf  
  4135b9:	push   cs
  4135ba:	inc    edi
  4135bb:	jg     0x41358d
  4135bd:	icebp  
  4135be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135bf:	aam    0x84
  4135c1:	int3   
  4135c2:	jne    0x4135a8
  4135c4:	jl     0x413629
  4135c6:	int    0xd6
  4135c8:	mov    esi,DWORD PTR [esi+0x5c1783aa]
  4135ce:	cmp    esp,DWORD PTR [ecx+0x6a043f93]
  4135d4:	mov    cs,WORD PTR [edx+0x76]
  4135d7:	jmp    0x4dcdb84a
  4135dc:	lods   eax,DWORD PTR ds:[esi]
  4135dd:	mov    ebx,0x915dbe02
  4135e2:	clc    
  4135e3:	ja     0x413653
  4135e5:	xor    edi,edi
  4135e7:	mov    cl,BYTE PTR [ebx]
  4135e9:	cli    
  4135ea:	xchg   esi,eax
  4135eb:	pop    ds
  4135ec:	mov    edi,gs
  4135ee:	call   0x38219ab
  4135f3:	push   ecx
  4135f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f5:	push   0x7b
  4135f7:	outs   dx,DWORD PTR ds:[esi]
  4135f8:	loopne 0x41357f
  4135fa:	xchg   DWORD PTR ds:[edx+0x4299738b],edx
  413601:	inc    eax
  413602:	mov    ebx,0xbf83b155
  413607:	xchg   ebp,eax
  413608:	mov    eax,0xbcd216c8
  41360d:	in     eax,dx
  41360e:	mov    WORD PTR [edi+0x10],gs
  413611:	xor    BYTE PTR [ebx+0x1eebd1a6],dl
  413617:	xchg   DWORD PTR [ecx+0x6127de0f],edi
  41361d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41361e:	mov    al,0x23
  413620:	ret    0xb5af
  413623:	dec    esi
  413624:	adc    BYTE PTR es:[ecx-0xd9703aa],bh
  41362b:	bound  ebx,QWORD PTR [edx+0x67348d7a]
  413631:	lahf   
  413632:	(bad)  
  413633:	mov    edi,0x83421121
  413638:	jmp    0x948f:0x76008e8a
  41363f:	and    eax,0x81a6d567
  413644:	in     eax,0x83
  413646:	aaa    
  413647:	fst    QWORD PTR [ecx]
  413649:	scas   al,BYTE PTR es:[edi]
  41364a:	(bad)  
  41364b:	loope  0x413612
  41364d:	ins    BYTE PTR es:[edi],dx
  41364e:	test   DWORD PTR [edi],edx
  413650:	dec    ebp
  413651:	xor    eax,0x47c7321b
  413656:	jbe    0x413697
  413658:	pop    edx
  413659:	arpl   WORD PTR [ebx+ebx*1+0x66],sp
  41365d:	push   ss
  41365e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41365f:	xchg   ebx,eax
  413660:	scas   eax,DWORD PTR es:[edi]
  413661:	ret    
  413662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413663:	adc    dh,BYTE PTR [ebx+0x74]
  413666:	dec    edi
  413667:	cwde   
  413668:	mov    al,ds:0x14d33292
  41366d:	stos   BYTE PTR es:[edi],al
  41366e:	xor    DWORD PTR ds:0xe384ae7f,edi
  413674:	pop    ds
  413675:	mov    DWORD PTR [edx+0x7c],0x25c391b4
  41367c:	aaa    
  41367d:	int    0xf8
  41367f:	push   edi
  413680:	sub    eax,0x670dd834
  413685:	(bad)  
  413686:	pop    eax
  413687:	mov    bl,0x22
  413689:	inc    edi
  41368a:	sbb    al,0xc
  41368c:	or     DWORD PTR [edi+esi*2-0x5d],esp
  413690:	dec    esi
  413691:	arpl   WORD PTR ds:0x80b43580,cx
  413697:	mov    edx,0x8b152401
  41369c:	xor    edx,esp
  41369e:	rcl    esi,1
  4136a0:	pop    edx
  4136a1:	loope  0x4136a6
  4136a3:	cmp    eax,0xed189219
  4136a8:	adc    DWORD PTR [eax+0x13],ebp
  4136ab:	add    DWORD PTR [edx],ecx
  4136ad:	sbb    edx,eax
  4136af:	adc    edx,DWORD PTR [ecx]
  4136b1:	stc    
  4136b2:	mov    WORD PTR [esi],?
  4136b4:	idiv   DWORD PTR [edx]
  4136b6:	dec    ebx
  4136b7:	mov    ebp,0x7572e13a
  4136bc:	inc    eax
  4136bd:	test   al,0x4b
  4136bf:	mov    DWORD PTR [eax+0xb],esp
  4136c2:	(bad)  
  4136c3:	aam    0x75
  4136c5:	out    dx,al
  4136c6:	jbe    0x4136ad
  4136c8:	cdq    
  4136c9:	and    ebx,DWORD PTR [edi-0x34]
  4136cc:	mov    al,ds:0x8e416505
  4136d1:	push   ecx
  4136d2:	cmp    eax,0x52deba8e
  4136d7:	and    edx,ebp
  4136d9:	in     eax,0x67
  4136db:	mov    DWORD PTR [esi+0x4de74e5f],esp
  4136e1:	arpl   WORD PTR [ecx],cx
  4136e3:	inc    ecx
  4136e4:	mov    eax,0xbc03a086
  4136e9:	imul   edi,DWORD PTR ds:0x40323d73,0x5464bb3b
  4136f3:	aad    0xbb
  4136f5:	xor    bh,BYTE PTR [edx+0xa434eab]
  4136fb:	xchg   BYTE PTR [ebx+0x7],bl
  4136fe:	mov    al,ds:0xe0cd019e
  413703:	mov    edi,ecx
  413705:	mov    edx,DWORD PTR [ebp+ebp*4+0xd]
  413709:	pop    es
  41370a:	cwde   
  41370b:	popa   
  41370c:	pushf  
  41370d:	daa    
  41370e:	out    dx,eax
  41370f:	or     DWORD PTR [edx-0x5de3d8ac],0x48
  413716:	popf   
  413717:	ret    
  413718:	lods   eax,DWORD PTR ds:[esi]
  413719:	and    al,0xe6
  41371b:	add    eax,0x1bc3549e
  413720:	sub    bh,BYTE PTR ds:0xba4c151d
  413726:	int3   
  413727:	inc    eax
  413728:	enter  0x4adb,0x5a
  41372c:	jmp    0x347f:0xd8ab239b
  413733:	daa    
  413734:	(bad)  
  413735:	clc    
  413736:	adc    BYTE PTR [esi+0x7a],bl
  413739:	ror    DWORD PTR [edx],cl
  41373b:	sub    eax,0x7a71cd10
  413740:	adc    al,0x0
  413742:	out    0xe7,al
  413744:	cli    
  413745:	add    BYTE PTR [ecx+0x65],ch
  413748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413749:	aam    0xa6
  41374b:	dec    ebx
  41374c:	icebp  
  41374d:	(bad)  
  41374e:	pop    esi
  41374f:	mov    ecx,0xc895a309
  413754:	rcl    bl,1
  413756:	and    al,0xaf
  413758:	outs   dx,BYTE PTR ds:[esi]
  413759:	jmp    0xaebc:0x3d702915
  413760:	inc    edx
  413761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413762:	fnsave [eax+0x49]
  413765:	push   es
  413766:	test   al,0x6
  413768:	nop
  413769:	jb     0x41378e
  41376b:	dec    esp
  41376c:	cmp    al,0x74
  41376e:	push   cs
  41376f:	psadbw mm3,QWORD PTR [edi-0x33]
  413773:	test   DWORD PTR [ecx-0x2f593aae],edx
  413779:	repz cmp eax,0xa193139
  41377f:	xchg   esp,eax
  413780:	ret    0xaa95
  413783:	loop   0x41372a
  413785:	es jb  0x413764
  413788:	retf   
  413789:	xor    esi,DWORD PTR [esi-0x76cb06ed]
  41378f:	outs   dx,BYTE PTR ds:[esi]
  413790:	or     esp,ecx
  413792:	jo     0x41375b
  413794:	cmp    al,0x76
  413796:	fiadd  DWORD PTR [esi+0x7e]
  413799:	sti    
  41379a:	jl     0x4137da
  41379c:	xchg   ebp,eax
  41379d:	push   ss
  41379e:	push   esi
  41379f:	add    ah,BYTE PTR [edx-0x7c]
  4137a2:	out    0xc9,eax
  4137a4:	inc    ecx
  4137a5:	adc    DWORD PTR [ebp+0x4d],0xffffff87
  4137a9:	out    0x65,eax
  4137ab:	xor    dl,dl
  4137ad:	fist   WORD PTR [eax]
  4137af:	dec    edi
  4137b0:	mov    bh,0x55
  4137b2:	cmp    ch,bh
  4137b4:	int3   
  4137b5:	ret    0xa155
  4137b8:	ror    BYTE PTR [eax+0x1a20fc5a],0x95
  4137bf:	aas    
  4137c0:	call   0x685d:0x31670981
  4137c7:	outs   dx,BYTE PTR ds:[esi]
  4137c8:	xchg   edi,eax
  4137c9:	adc    BYTE PTR [edx+edx*8-0x1d9318ab],0x34
  4137d1:	fs mov dl,0x5c
  4137d4:	pushf  
  4137d5:	adc    BYTE PTR [ebx],dh
  4137d7:	dec    ebx
  4137d8:	mov    al,0xbd
  4137da:	inc    ecx
  4137db:	lea    ebp,[ebp+0x6d]
  4137de:	test   DWORD PTR [esi],edi
  4137e0:	mov    ecx,0xce6d9d73
  4137e5:	mov    ecx,0x9b3e4a4a
  4137ea:	dec    edi
  4137eb:	or     dl,BYTE PTR [eax-0x62]
  4137ee:	xchg   esp,eax
  4137ef:	es call 0xf909e1c4
  4137f5:	aaa    
  4137f6:	loop   0x41377f
  4137f8:	ss inc esp
  4137fa:	repnz in eax,0x96
  4137fd:	sbb    al,0x7a
  4137ff:	jo     0x413856
  413801:	sar    BYTE PTR [ebx+0x23df2393],cl
  413807:	imul   esi,ebp,0x6729266
  41380d:	mov    dl,0x3a
  41380f:	xor    ch,BYTE PTR [edi-0x1d534baa]
  413815:	jmp    0xf8ad25a9
  41381a:	(bad)  
  41381b:	push   ds
  41381c:	addr16 test al,0x8c
  41381f:	jb     0x4138a0
  413821:	jmp    0x41383d
  413823:	es ja  0x41389c
  413826:	jl     0x413844
  413828:	pop    edx
  413829:	mov    ebx,0x45b7cf81
  41382e:	mov    dh,0x7b
  413830:	or     eax,0x2e96ddb0
  413835:	xchg   DWORD PTR [ebp-0x75],edx
  413838:	and    DWORD PTR [esp+esi*4-0x57531cb3],esp
  41383f:	imul   ebx,DWORD PTR [esi-0x261ef66c],0xffffff8b
  413846:	gs jb  0x413890
  413849:	jb     0x4138bd
  41384b:	xlat   BYTE PTR ds:[ebx]
  41384c:	out    0xdb,al
  41384e:	and    bl,BYTE PTR [ebx+0x7d52b8fd]
  413854:	xchg   edi,eax
  413855:	es pop ecx
  413857:	adc    BYTE PTR [eax+0x7bc5707c],dh
  41385d:	in     eax,0x0
  41385f:	(bad)  
  413861:	inc    ecx
  413862:	rcl    DWORD PTR [ebx-0x69],1
  413865:	xchg   ecx,eax
  413866:	mov    esp,0x618f6b23
  41386b:	stc    
  41386c:	mov    dh,0xec
  41386e:	shr    BYTE PTR [ebp-0x656d8947],1
  413874:	call   0x99af8f21
  413879:	cmp    al,0x19
  41387b:	sbb    edi,DWORD PTR [edx+0x66]
  41387e:	pushf  
  41387f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413880:	ja     0x413855
  413882:	add    al,0xc8
  413884:	dec    eax
  413885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413886:	adc    DWORD PTR [esi-0x2d],esi
  413889:	out    dx,al
  41388a:	neg    DWORD PTR [esi+ebx*1-0x34]
  41388e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41388f:	bound  esp,QWORD PTR [edx+0x14]
  413892:	loope  0x4138f1
  413894:	mov    ebp,0xfddb1cb5
  413899:	les    ebp,FWORD PTR [esi+0x3f]
  41389c:	daa    
  41389d:	mov    ecx,0x68d2314a
  4138a2:	dec    edi
  4138a3:	cli    
  4138a4:	sahf   
  4138a5:	push   esi
  4138a6:	sti    
  4138a7:	int    0xf5
  4138a9:	xlat   BYTE PTR ds:[ebx]
  4138aa:	mov    ds:0x3e4b815b,al
  4138af:	sbb    eax,0x5d79d8c
  4138b4:	inc    edi
  4138b5:	aad    0x8c
  4138b7:	dec    ebx
  4138b8:	mov    al,es:0x48370d40
  4138be:	fnstcw WORD PTR [ecx+0x218e5726]
  4138c4:	nop
  4138c5:	cmp    ah,BYTE PTR [ebp-0x21ac9cfc]
  4138cb:	cmp    DWORD PTR ds:0xf20b8bfa,ebx
  4138d1:	jmp    0x41385e
  4138d3:	aaa    
  4138d4:	test   edx,edi
  4138d6:	and    DWORD PTR [eax+0x14],ebx
  4138d9:	jge    0x4138d8
  4138db:	adc    dl,BYTE PTR [edi-0x54]
  4138de:	or     eax,0x9bd0527d
  4138e3:	dec    ebp
  4138e4:	adc    eax,0x83c999b3
  4138e9:	out    dx,al
  4138ea:	pop    es
  4138eb:	sub    DWORD PTR [bx+di-0x6e],ecx
  4138ef:	sub    ebp,DWORD PTR [edi-0x262d6b17]
  4138f5:	push   ss
  4138f6:	adc    dl,BYTE PTR [edi]
  4138f8:	push   ecx
  4138f9:	in     eax,0x1
  4138fb:	sar    DWORD PTR [ebp+0x7d],0xfb
  4138ff:	loope  0x413919
  413901:	xor    BYTE PTR [edx],bl
  413903:	pop    ds
  413904:	imul   esi,DWORD PTR [ebx-0x62],0x5f7ee043
  41390b:	mov    eax,0x90e1e4fd
  413910:	adc    al,0x21
  413912:	mov    dh,BYTE PTR [ecx-0x46]
  413915:	into   
  413916:	xchg   esi,eax
  413917:	into   
  413918:	adc    BYTE PTR [esi-0x63],dh
  41391b:	jae    0x4138ce
  41391d:	mov    eax,0x52edc2e7
  413922:	adc    DWORD PTR [edi],ebp
  413924:	fwait
  413925:	dec    ebx
  413926:	out    dx,al
  413927:	mov    ecx,0xbb520900
  41392c:	pop    esi
  41392d:	pushf  
  41392e:	bound  edi,QWORD PTR [esi-0x6121d25e]
  413934:	jg     0x4139a4
  413936:	cmc    
  413937:	in     al,dx
  413938:	lock pusha 
  41393a:	push   edx
  41393b:	mov    dl,0x13
  41393d:	nop
  41393e:	cld    
  41393f:	popa   
  413940:	adc    al,0x2c
  413942:	bound  edx,QWORD PTR [esi]
  413944:	lock (bad) 
  413946:	xchg   ebx,eax
  413947:	mov    DWORD PTR [edx+0x23],ebx
  41394a:	sub    bh,BYTE PTR [edx+0x6f7e2e24]
  413950:	xchg   ecx,eax
  413951:	mov    esp,0x4ce0b71f
  413956:	or     bh,BYTE PTR [ebx+0x4d4ebe07]
  41395c:	adc    ebp,DWORD PTR [edx]
  41395e:	xor    ah,ah
  413960:	bound  esp,QWORD PTR [edx]
  413962:	int3   
  413963:	dec    ebp
  413964:	leave  
  413965:	add    ecx,DWORD PTR [edi+ebx*8+0x1]
  413969:	mov    edx,0xb6993d15
  41396e:	add    BYTE PTR [ecx],0x99
  413971:	pop    eax
  413972:	add    DWORD PTR [ebp+0x334290b3],eax
  413978:	jl     0x413954
  41397a:	or     al,0x55
  41397c:	lods   eax,DWORD PTR ds:[esi]
  41397d:	mov    esi,0x3d67ee19
  413982:	cli    
  413983:	mov    eax,ds:0xa0da688a
  413988:	adc    cl,BYTE PTR [eax+ebx*2]
  41398b:	mov    ds,WORD PTR [ebx*4+0x5f731804]
  413992:	fidivr WORD PTR [ecx+edx*2+0x4b]
  413996:	inc    esi
  413997:	div    edi
  413999:	mov    edx,0x7a93d131
  41399e:	pop    edx
  41399f:	cmp    al,0x94
  4139a1:	mov    eax,DWORD PTR [edx]
  4139a3:	(bad)  
  4139a5:	mov    ecx,0x9662129d
  4139aa:	pop    edx
  4139ab:	(bad)  
  4139ac:	dec    ecx
  4139ad:	rcr    DWORD PTR [ebp+eax*8-0x5e],1
  4139b1:	shr    BYTE PTR [esi-0x744d573e],0x81
  4139b8:	pushf  
  4139b9:	add    ah,0xa8
  4139bc:	pusha  
  4139bd:	ror    DWORD PTR [ecx+0x551271d6],1
  4139c3:	sbb    al,0xbb
  4139c5:	inc    edi
  4139c6:	mov    eax,gs:0x65a65877
  4139cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139cd:	xchg   ebx,eax
  4139ce:	imul   ebp,ebx,0x70
  4139d1:	imul   ecx,ebx,0xd550719d
  4139d7:	popf   
  4139d8:	cmp    DWORD PTR fs:[edi-0x411b4040],eax
  4139df:	xor    BYTE PTR [ebx],al
  4139e1:	and    DWORD PTR [ebx+ecx*2+0x6c766a18],esi
  4139e8:	adc    al,0x6c
  4139ea:	hlt    
  4139eb:	sub    al,0xe6
  4139ed:	inc    eax
  4139ee:	add    BYTE PTR [ebx+0x54],ah
  4139f1:	adc    BYTE PTR [edx+ebp*8+0x3f0db6f4],bl
  4139f8:	xchg   DWORD PTR [esi],eax
  4139fa:	popf   
  4139fb:	aad    0xbb
  4139fd:	mov    ebx,0x3abd9e82
  413a02:	dec    ecx
  413a03:	in     al,0x8a
  413a05:	sbb    al,0x42
  413a07:	mov    edx,0x7beea264
  413a0c:	mov    al,ds:0x6ac4e60e
  413a11:	mov    esp,0x3f164134
  413a16:	and    esi,DWORD PTR [edi-0x49]
  413a19:	fisub  DWORD PTR [esi+0x47]
  413a1c:	lahf   
  413a1d:	adc    eax,0xa27e8913
  413a22:	stc    
  413a23:	rcl    BYTE PTR [ecx+0x7a45b5d7],0xed
  413a2a:	or     edi,DWORD PTR [ebx-0x37976453]
  413a30:	mov    ah,0xd0
  413a32:	jmp    0x8252a961
  413a37:	repnz fidiv WORD PTR cs:[edx]
  413a3b:	mov    ds:0x7e2ad153,eax
  413a40:	cmc    
  413a41:	add    BYTE PTR [edx+0x47],al
  413a44:	mov    ds:0x1530e064,eax
  413a49:	jmp    0x375e:0xb888eb42
  413a50:	mov    cl,0xaf
  413a52:	inc    ebp
  413a53:	or     eax,0xefc8f51f
  413a58:	mov    eax,0x9aca4ce7
  413a5d:	ror    DWORD PTR [esi+0xd422f82],cl
  413a63:	add    BYTE PTR [ecx+ecx*2-0x162523a0],0xf4
  413a6b:	cmp    BYTE PTR [edi+0x150182ec],ah
  413a71:	mov    dh,0xc3
  413a73:	loop   0x413ad8
  413a75:	pop    ds
  413a76:	jmp    DWORD PTR [eax]
  413a78:	inc    ebp
  413a79:	(bad)  
  413a7a:	adc    eax,0x7c8e77d9
  413a7f:	arpl   WORD PTR [esi-0x53],dx
  413a82:	hlt    
  413a83:	sbb    ebx,ecx
  413a85:	out    0x49,eax
  413a87:	or     al,0xb8
  413a89:	mov    eax,0x47725114
  413a8e:	imul   edx,DWORD PTR [edx],0xffffff82
  413a91:	iret   
  413a92:	xchg   ebp,eax
  413a93:	xchg   ebx,eax
  413a94:	adc    eax,0xde85f778
  413a99:	out    dx,eax
  413a9a:	push   es
  413a9b:	push   edx
  413a9c:	sbb    ebp,edi
  413a9e:	loop   0x413adf
  413aa0:	mov    bh,0xd3
  413aa2:	mov    ah,0x8a
  413aa4:	xlat   BYTE PTR ds:[ebx]
  413aa5:	int    0x6b
  413aa7:	and    cl,al
  413aa9:	fmul   QWORD PTR [ecx]
  413aab:	shl    DWORD PTR [esi+0x1e9f1f4f],cl
  413ab1:	mov    cs,WORD PTR [edx+0x7c]
  413ab4:	pop    edi
  413ab5:	lahf   
  413ab6:	mov    bh,0xf5
  413ab8:	dec    edi
  413ab9:	rcl    dh,0x18
  413abc:	data16 fist DWORD PTR [eax-0x31122e85]
  413ac3:	cmp    esi,DWORD PTR [eax]
  413ac5:	cmp    ebx,DWORD PTR [edi]
  413ac7:	mov    eax,ds:0xdad83639
  413acc:	pop    ecx
  413acd:	pop    esp
  413ace:	loopne 0x413a72
  413ad0:	icebp  
  413ad1:	jo     0x413a5d
  413ad3:	(bad)  
  413ad4:	rcr    DWORD PTR [ebp+0x59],cl
  413ad7:	mov    ah,BYTE PTR [edx+0x4088692f]
  413add:	mov    dl,0x7d
  413adf:	sub    dh,dl
  413ae1:	xor    DWORD PTR [esi+edx*4+0x7],edx
  413ae5:	mov    eax,ds:0x3dce19bf
  413aea:	pushf  
  413aeb:	pop    ss
  413aec:	fs pop edx
  413aee:	pop    es
  413aef:	pop    ds
  413af0:	jge    0x413aa3
  413af2:	or     cl,BYTE PTR [ecx-0x75]
  413af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413af6:	xchg   ebx,eax
  413af7:	repz inc ecx
  413af9:	scas   eax,DWORD PTR es:[edi]
  413afa:	xor    BYTE PTR [ebx+edi*2-0x17e00238],0x60
  413b02:	jns    0x413b58
  413b04:	mov    dh,0xa2
  413b06:	jbe    0x413ab1
  413b08:	mov    ebp,0x39555427
  413b0d:	and    eax,0x221e2abc
  413b12:	adc    eax,0x351ed06d
  413b17:	(bad)  
  413b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b1a:	out    dx,al
  413b1b:	ficomp WORD PTR [edx]
  413b1d:	jmp    0x413ad1
  413b1f:	fs dec edx
  413b21:	fwait
  413b22:	pop    es
  413b23:	xor    edx,DWORD PTR [ecx]
  413b25:	sar    BYTE PTR [ebx],0x9d
  413b28:	scas   eax,DWORD PTR es:[edi]
  413b29:	push   ds
  413b2a:	sbb    al,0x9a
  413b2c:	js     0x413ab7
  413b2e:	enter  0x780f,0xe0
  413b32:	mov    eax,0x2fc6da0d
  413b37:	inc    ecx
  413b38:	addr16 int 0x3
  413b3b:	rol    dl,0x26
  413b3e:	jmp    0xe0f9:0x8f83c741
  413b45:	push   edi
  413b46:	cs push ebx
  413b48:	push   ebp
  413b49:	push   esp
  413b4a:	jae    0x413ae0
  413b4c:	xor    BYTE PTR [eax],al
  413b4e:	cmp    eax,0x5a01a953
  413b53:	xlat   BYTE PTR ds:[ebx]
  413b54:	push   esi
  413b55:	dec    esp
  413b56:	and    esp,0x9723413f
  413b5c:	stc    
  413b5d:	cdq    
  413b5e:	test   al,0x9
  413b60:	and    dl,BYTE PTR [esi-0x56d5cbc7]
  413b66:	ins    BYTE PTR es:[edi],dx
  413b67:	mov    edx,0xaa82ed57
  413b6c:	xor    DWORD PTR [eax+0x75],esp
  413b6f:	inc    ecx
  413b70:	ror    DWORD PTR [edi-0x51617768],cl
  413b76:	inc    ebx
  413b77:	inc    edi
  413b78:	sbb    DWORD PTR [esi+0x18fae597],esp
  413b7e:	sub    DWORD PTR [edi],ebp
  413b80:	loopne 0x413b9a
  413b82:	inc    edx
  413b83:	mov    edi,esp
  413b85:	aad    0xd5
  413b87:	pop    ds
  413b88:	or     eax,0x8b86682c
  413b8d:	scas   al,BYTE PTR es:[edi]
  413b8e:	lock leave 
  413b90:	leave  
  413b91:	repnz pop esp
  413b93:	mov    esp,0x87abf8a4
  413b98:	sbb    DWORD PTR [edi+0x21],edx
  413b9b:	fild   DWORD PTR [ecx]
  413b9d:	add    eax,0xc7da4019
  413ba2:	jno    0x413bae
  413ba4:	aaa    
  413ba5:	call   0xbddd:0x455b656c
  413bac:	dec    cl
  413bae:	xchg   ebp,eax
  413baf:	fld    TBYTE PTR [eax+esi*1-0x52]
  413bb3:	cmc    
  413bb4:	cmp    edx,edx
  413bb6:	sbb    al,0x9e
  413bb8:	pop    esp
  413bb9:	sbb    DWORD PTR [ecx+0x362f4475],ecx
  413bbf:	jns    0x413bdc
  413bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc2:	mov    ebp,0x30eea089
  413bc7:	out    0xba,eax
  413bc9:	jne    0x413b5c
  413bcb:	cmc    
  413bcc:	ss sahf 
  413bce:	daa    
  413bcf:	dec    edi
  413bd0:	pop    ss
  413bd1:	jmp    0x4425:0x28ee566d
  413bd8:	xchg   ebp,eax
  413bd9:	daa    
  413bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bdb:	lods   eax,DWORD PTR ds:[esi]
  413bdc:	retf   0xfce2
  413bdf:	arpl   WORD PTR [edi+0x38465768],di
  413be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413be6:	ins    BYTE PTR es:[edi],dx
  413be7:	icebp  
  413be8:	mov    bl,0x28
  413bea:	dec    ecx
  413beb:	loope  0x413bbe
  413bed:	sub    ch,bh
  413bef:	test   al,0xf6
  413bf1:	lahf   
  413bf2:	inc    esp
  413bf3:	ret    
  413bf4:	icebp  
  413bf5:	(bad)  
  413bf7:	data16 scas al,BYTE PTR es:[edi]
  413bf9:	and    eax,0xaab5bd94
  413bfe:	imul   ebp,DWORD PTR [esi+0x75],0xfffffff3
  413c02:	shl    edx,cl
  413c04:	lods   al,BYTE PTR ds:[esi]
  413c05:	test   eax,0x76d624ec
  413c0a:	sbb    dh,0xa9
  413c0d:	add    eax,DWORD PTR [ebx-0x479694bc]
  413c13:	iret   
  413c14:	clc    
  413c15:	mov    WORD PTR [edi],?
  413c17:	cwde   
  413c18:	jp     0x413c36
  413c1a:	mov    bl,0x99
  413c1c:	pop    esi
  413c1d:	and    DWORD PTR [esi],edx
  413c1f:	pusha  
  413c20:	mov    dl,0xa4
  413c22:	out    0xba,eax
  413c24:	mov    cl,0xec
  413c26:	(bad)
  413c29:	inc    DWORD PTR [esi]
  413c2b:	add    edi,DWORD PTR [edx-0x6a]
  413c2e:	cmp    eax,0xc19289e7
  413c33:	cmp    ebp,esp
  413c35:	scas   al,BYTE PTR es:[edi]
  413c36:	popf   
  413c37:	mov    bh,0x98
  413c39:	sub    DWORD PTR [ebx+0x65],esp
  413c3c:	xchg   ebp,eax
  413c3d:	in     eax,dx
  413c3e:	push   ss
  413c3f:	ja     0x413c92
  413c41:	addr16 sahf 
  413c43:	sub    bl,0xad
  413c46:	mov    ecx,DWORD PTR [eax]
  413c48:	mov    esi,0xb1bb2726
  413c4d:	mov    ds:0xcc20ee89,al
  413c52:	daa    
  413c53:	ror    DWORD PTR [ebp+0x7a],1
  413c56:	je     0x413c0a
  413c58:	neg    BYTE PTR [ebx+eax*4-0x2f]
  413c5c:	mov    al,ds:0xb3d1a56
  413c61:	add    bl,cl
  413c63:	push   edx
  413c64:	pushf  
  413c65:	outs   dx,BYTE PTR ds:[esi]
  413c66:	shr    BYTE PTR [ecx],0x5f
  413c69:	inc    edi
  413c6a:	jae    0x413caa
  413c6c:	ss lods eax,DWORD PTR ds:[esi]
  413c6f:	jecxz  0x413c17
  413c71:	or     ch,bh
  413c73:	mov    dh,0x65
  413c75:	test   al,0x9e
  413c77:	xlat   BYTE PTR ds:[ebx]
  413c78:	fsub   QWORD PTR [esi+eax*2-0x56]
  413c7c:	adc    al,BYTE PTR [esi-0x6c0a7f1c]
  413c82:	inc    ecx
  413c83:	aam    0xa0
  413c85:	pop    ebp
  413c86:	mov    ebx,0x87c54196
  413c8b:	repz cmc 
  413c8d:	gs hlt 
  413c8f:	dec    esi
  413c90:	xchg   esp,eax
  413c91:	rcr    al,1
  413c93:	xchg   esp,eax
  413c94:	dec    esp
  413c95:	add    BYTE PTR [esi],ch
  413c97:	mov    ds:0xe63e7d84,eax
  413c9c:	mov    DWORD PTR [edx],ebx
  413c9e:	cmp    eax,0x2b2af323
  413ca3:	inc    eax
  413ca4:	mov    ds:0x47d562c5,al
  413ca9:	pop    edx
  413caa:	call   0xa98e:0x57e48666
  413cb1:	repz sbb al,ch
  413cb4:	out    0x86,al
  413cb6:	clc    
  413cb7:	arpl   WORD PTR [ebp+0x6e],si
  413cba:	sub    ch,BYTE PTR [edi+0x2f0f6331]
  413cc0:	mov    ch,0xcb
  413cc2:	fsubr  QWORD PTR ds:0x35aa146c
  413cc8:	mov    eax,0xee568639
  413ccd:	sbb    ebx,DWORD PTR ds:0x7a318906
  413cd3:	sti    
  413cd4:	jnp    0x413d1a
  413cd6:	je     0x413c92
  413cd8:	shl    BYTE PTR [edi-0x4af30eb9],0xb9
  413cdf:	jecxz  0x413cb3
  413ce1:	aaa    
  413ce2:	dec    edx
  413ce3:	retf   0x45db
  413ce6:	sub    DWORD PTR [esi],edx
  413ce8:	(bad)  
  413ce9:	rcr    BYTE PTR [esi-0x3],0xab
  413ced:	or     al,ah
  413cef:	inc    edi
  413cf0:	xchg   edi,eax
  413cf1:	dec    ecx
  413cf2:	pop    esp
  413cf3:	mov    eax,0x776e8f1
  413cf8:	add    BYTE PTR [edi],dl
  413cfa:	sbb    ebx,esi
  413cfc:	push   ebp
  413cfd:	push   esi
  413cfe:	or     BYTE PTR [esi+0x7dea8e17],0x8d
  413d05:	pop    ss
  413d06:	cmp    BYTE PTR [eax+eiz*2-0x7bbb76db],al
  413d0d:	lock push esi
  413d0f:	repz push ecx
  413d11:	(bad)  
  413d12:	xor    al,0x96
  413d14:	push   ebx
  413d15:	xchg   DWORD PTR [ebx+0x7b],edx
  413d18:	xchg   ecx,eax
  413d19:	mov    ebx,0x5af91717
  413d1e:	dec    esi
  413d1f:	xchg   ebx,eax
  413d20:	sub    ch,BYTE PTR [edx-0x2b]
  413d23:	pop    esp
  413d24:	ret    
  413d25:	cmp    eax,0x945e64b9
  413d2a:	stos   DWORD PTR es:[edi],eax
  413d2b:	icebp  
  413d2c:	scas   al,BYTE PTR es:[edi]
  413d2d:	xor    edi,esi
  413d2f:	out    0x15,eax
  413d31:	add    esp,DWORD PTR [ecx-0xba3c005]
  413d37:	ficomp DWORD PTR [edx-0x5dfc5f9e]
  413d3d:	pop    edi
  413d3e:	rol    DWORD PTR [ebx],0xd0
  413d41:	inc    esi
  413d42:	mov    ds:0xbbf6ad71,al
  413d47:	mov    edi,0xc43b17d7
  413d4c:	(bad)  
  413d4d:	mov    cs,edi
  413d4f:	std    
  413d50:	popa   
  413d51:	dec    esp
  413d52:	jne    0x413d17
  413d54:	aam    0xa0
  413d56:	retf   0xd3
  413d59:	ss jbe 0x413ce2
  413d5c:	or     al,0x81
  413d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d5f:	dec    ebp
  413d60:	push   eax
  413d61:	and    dh,BYTE PTR [esi]
  413d63:	mov    ebp,0xc856e7b5
  413d68:	inc    edi
  413d69:	push   edi
  413d6a:	sub    eax,0x5bd996b6
  413d6f:	add    BYTE PTR [ebp-0x26],al
  413d72:	adc    eax,0xa917dcc5
  413d77:	inc    edi
  413d78:	mov    dl,0x73
  413d7a:	fiadd  DWORD PTR [edx-0xf]
  413d7d:	xor    bh,BYTE PTR [edx-0x420b3c39]
  413d83:	test   DWORD PTR [ecx+0x13694584],esi
  413d89:	sbb    bh,dl
  413d8b:	pushf  
  413d8c:	popa   
  413d8d:	pusha  
  413d8e:	or     eax,0xbde11937
  413d93:	mov    cl,0xae
  413d95:	mov    eax,0x9fbc468f
  413d9a:	jae    0x413d92
  413d9c:	shl    BYTE PTR [eax],cl
  413d9e:	arpl   WORD PTR [esi+0x47],sp
  413da1:	out    0xfa,eax
  413da3:	push   0x29
  413da5:	mov    dh,0x11
  413da7:	adc    DWORD PTR [ebx],0xfffffff9
  413daa:	retf   0x1b19
  413dad:	fisttp QWORD PTR [esi]
  413daf:	fs and al,0x8d
  413db2:	sbb    al,0x8c
  413db4:	sub    DWORD PTR [edi-0x4c],ebx
  413db7:	add    al,bl
  413db9:	fnstenv [esi]
  413dbb:	push   ebp
  413dbc:	xor    dl,ah
  413dbe:	cmp    al,0xe9
  413dc0:	xchg   edi,eax
  413dc1:	jae    0x413db8
  413dc3:	push   0x6e
  413dc5:	dec    edx
  413dc6:	pusha  
  413dc7:	or     al,0x91
  413dc9:	jp     0x413da1
  413dcb:	cmp    eax,0x1b6f67d1
  413dd0:	cmp    eax,0x8912a6af
  413dd5:	or     ah,cl
  413dd7:	sbb    BYTE PTR [ecx-0x56a42227],ah
  413ddd:	fmul   QWORD PTR [ebx+eiz*2+0x79c3dea2]
  413de4:	aaa    
  413de5:	push   ds
  413de6:	mov    ds:0x6ef40a31,al
  413deb:	jg     0x413d88
  413ded:	je     0x413e12
  413def:	bound  eax,QWORD PTR [esp+esi*2]
  413df2:	push   edi
  413df3:	dec    edx
  413df4:	sahf   
  413df5:	push   eax
  413df6:	lea    edx,[edi+edi*4+0x2d]
  413dfa:	shl    cl,0xd8
  413dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dfe:	xchg   ebx,eax
  413dff:	add    al,0x66
  413e01:	iret   
  413e02:	inc    edi
  413e03:	mov    bh,0x35
  413e05:	cmp    edx,DWORD PTR [ecx+0x47]
  413e08:	or     eax,0xbc01f19e
  413e0d:	push   ebp
  413e0e:	pop    edi
  413e0f:	jecxz  0x413d91
  413e11:	sahf   
  413e12:	das    
  413e13:	repz (bad) [ebx]
  413e16:	pusha  
  413e17:	xchg   DWORD PTR [edi-0x59290e8b],esp
  413e1d:	jne    0x413dcb
  413e1f:	cmp    al,0xf3
  413e21:	xchg   esi,eax
  413e22:	in     eax,dx
  413e23:	push   ecx
  413e24:	pushf  
  413e25:	test   al,0xc5
  413e27:	xor    eax,0x526971b0
  413e2c:	push   esp
  413e2d:	das    
  413e2e:	arpl   WORD PTR [edi-0x75],cx
  413e31:	sbb    eax,0xa63a15f4
  413e36:	mov    WORD PTR [edx-0x69c093c3],es
  413e3c:	neg    eax
  413e3e:	in     al,dx
  413e3f:	pop    ebp
  413e40:	add    eax,0xc2c5c5e3
  413e45:	push   es
  413e46:	xchg   DWORD PTR [esp+ecx*2],esp
  413e49:	mov    ch,0x1e
  413e4b:	sbb    al,0xf2
  413e4d:	lods   al,BYTE PTR ds:[esi]
  413e4e:	mov    ch,dl
  413e50:	mov    ebx,0x2eea4490
  413e55:	sbb    ecx,DWORD PTR [edx+0x70]
  413e58:	into   
  413e59:	dec    eax
  413e5a:	lahf   
  413e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e5c:	in     al,0x85
  413e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e5f:	retf   0x53dc
  413e62:	cmp    eax,DWORD PTR [edx+0x33ed54af]
  413e68:	in     al,0xce
  413e6a:	rol    BYTE PTR [esi+0x1],cl
  413e6d:	mov    bl,0xc5
  413e6f:	xchg   ecx,eax
  413e70:	stos   DWORD PTR es:[edi],eax
  413e71:	mov    WORD PTR [ecx],ss
  413e73:	jno    0x413e22
  413e75:	dec    edi
  413e76:	or     ebp,ecx
  413e78:	add    eax,0xf0e0890a
  413e7d:	fidivr DWORD PTR [eax]
  413e7f:	fwait
  413e80:	jp     0x413ea0
  413e82:	jae    0x413e56
  413e84:	mov    bh,0x90
  413e86:	mov    esp,DWORD PTR [ecx+0x42]
  413e89:	dec    ebx
  413e8a:	mov    esi,0x92fad674
  413e8f:	aam    0xae
  413e91:	fcmovbe st,st(0)
  413e93:	ds icebp 
  413e95:	pop    DWORD PTR [ebx-0x27ef7b33]
  413e9b:	shl    BYTE PTR [eax-0x28],cl
  413e9e:	add    DWORD PTR [ebp-0x17d2fe78],ecx
  413ea4:	imul   ebx,DWORD PTR [edx+ebx*2],0x25
  413ea8:	fisub  WORD PTR [eax-0x311dd60a]
  413eae:	sbb    cl,bh
  413eb0:	xchg   ecx,eax
  413eb1:	inc    eax
  413eb2:	psubw  mm2,mm4
  413eb5:	add    al,0x18
  413eb7:	test   al,0xc7
  413eb9:	in     eax,0x24
  413ebb:	std    
  413ebc:	push   ebp
  413ebd:	sbb    BYTE PTR [ecx-0x77],cl
  413ec0:	push   0xffffff87
  413ec2:	sbb    al,0xba
  413ec4:	fucom  st(4)
  413ec6:	xchg   esp,eax
  413ec7:	loop   0x413eff
  413ec9:	sbb    esp,ebx
  413ecb:	ins    DWORD PTR es:[di],dx
  413ecd:	jb     0x413f21
  413ecf:	xlat   BYTE PTR ds:[ebx]
  413ed0:	jnp    0x413ef4
  413ed2:	jp     0x413eb7
  413ed4:	mov    esi,0xf768600d
  413ed9:	pop    esi
  413eda:	arpl   WORD PTR [edi],ax
  413edc:	dec    edx
  413edd:	js     0x413f50
  413edf:	sub    esp,DWORD PTR [esi]
  413ee1:	mov    bl,0xca
  413ee3:	cmp    DWORD PTR [eax-0x18],esi
  413ee6:	das    
  413ee7:	icebp  
  413ee8:	xchg   esi,eax
  413ee9:	cmpps  xmm4,xmm7,0xfa
  413eed:	cs dec esi
  413eef:	mov    cl,0x4f
  413ef1:	mov    dh,0xf1
  413ef3:	jns    0x413eec
  413ef5:	sbb    eax,0x7d3f54b9
  413efa:	pop    ds
  413efb:	inc    eax
  413efc:	loop   0x413f47
  413efe:	mov    ch,0x28
  413f00:	or     ebp,DWORD PTR [ecx]
  413f02:	imul   ebp,DWORD PTR [ecx+0x37d5fd03],0x61460c44
  413f0c:	dec    esp
  413f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f0e:	or     dl,ah
  413f10:	sub    al,0x3e
  413f12:	add    al,0x6
  413f14:	inc    esi
  413f15:	jmp    0xc73a1eec
  413f1a:	dec    ebp
  413f1b:	arpl   bp,si
  413f1d:	sub    bh,dl
  413f1f:	mov    esp,0xdf9459a
  413f24:	sbb    BYTE PTR [eax+0x357f2b0b],bl
  413f2a:	loopne 0x413f72
  413f2c:	enter  0xc5e9,0x64
  413f30:	cmp    cl,ch
  413f32:	mov    ebp,0x6bb3518b
  413f37:	loop   0x413f96
  413f39:	bound  ecx,QWORD PTR [ebp-0x69acc08a]
  413f3f:	xchg   ecx,eax
  413f40:	call   0xa6c1:0xa64ebaa2
  413f47:	and    eax,0x2bba0f48
  413f4c:	mov    al,ds:0xc5e81b55
  413f51:	popa   
  413f52:	mov    dh,0x4c
  413f54:	xchg   ecx,eax
  413f55:	xor    DWORD PTR [ecx+ebx*4+0x8e62119],edx
  413f5c:	adc    eax,0x3969e675
  413f61:	shl    esp,1
  413f63:	pop    ecx
  413f64:	mov    WORD PTR [ebp+0x70],ds
  413f67:	add    ebp,DWORD PTR [ecx+0x20]
  413f6a:	clc    
  413f6b:	or     bl,ch
  413f6d:	in     al,dx
  413f6e:	das    
  413f6f:	les    ebp,FWORD PTR [esp+ebx*8-0xe]
  413f73:	sbb    al,0x16
  413f75:	std    
  413f76:	add    eax,0xc199109
  413f7b:	ins    BYTE PTR es:[edi],dx
  413f7c:	inc    ebp
  413f7d:	es mov ah,0xaf
  413f80:	sbb    DWORD PTR [esi+esi*8],esp
  413f83:	add    esi,DWORD PTR [eax]
  413f85:	pop    es
  413f86:	fcmovnu st,st(6)
  413f88:	sbb    dl,al
  413f8a:	cmp    ah,BYTE PTR ds:0xd29ee1ba
  413f90:	inc    ecx
  413f91:	mov    al,ds:0xebc38d28
  413f96:	mov    esp,0x155458d1
  413f9b:	xor    DWORD PTR [ebp+0x5c],0xffffffc6
  413f9f:	sub    ah,bl
  413fa1:	xor    ebx,ebp
  413fa3:	dec    ebp
  413fa4:	mov    al,BYTE PTR [esi]
  413fa6:	or     bh,BYTE PTR [eax]
  413fa8:	adc    esi,DWORD PTR [edx-0x13]
  413fab:	or     eax,0x88e150c0
  413fb0:	or     edi,DWORD PTR [edi+0x68]
  413fb3:	cmp    eax,0xce3bc826
  413fb8:	xor    ah,dl
  413fba:	or     esp,DWORD PTR [edi]
  413fbc:	mov    esp,DWORD PTR [ebp-0x5320241b]
  413fc2:	(bad)  
  413fc3:	idiv   DWORD PTR es:[edx-0x7accad62]
  413fca:	push   0xffffffa3
  413fcc:	imul   esp,DWORD PTR [ebp+0x37345c35],0x12
  413fd3:	sbb    BYTE PTR [edi-0x6ccaec68],bl
  413fd9:	rcr    DWORD PTR [ebp-0x3],cl
  413fdc:	mov    edx,0xeff57ef9
  413fe1:	lods   eax,DWORD PTR ds:[esi]
  413fe2:	inc    ch
  413fe4:	mov    bl,0xe1
  413fe6:	pushf  
  413fe7:	dec    ecx
  413fe8:	das    
  413fe9:	clc    
  413fea:	and    BYTE PTR [ebp-0x79],ah
  413fed:	popf   
  413fee:	xlat   BYTE PTR ds:[ebx]
  413fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ff0:	fiadd  DWORD PTR [ecx-0x54755dc]
  413ff6:	jns    0x414036
  413ff8:	cwde   
  413ff9:	xchg   ebp,eax
  413ffa:	fdiv   QWORD PTR [edx+0x39]
  413ffd:	cmp    DWORD PTR es:[eax-0x2ff9ee6e],0x28
  414005:	fdivp  st(1),st
  414007:	popa   
  414008:	std    
  414009:	ja     0x413fc5
  41400b:	xor    esi,DWORD PTR [eax+0x4c]
  41400e:	pop    eax
  41400f:	adc    DWORD PTR [ebx-0x4a],esi
  414012:	shl    ebx,cl
  414014:	xchg   ecx,eax
  414015:	test   al,0x41
  414017:	and    ebx,DWORD PTR [edx]
  414019:	js     0x41400f
  41401b:	clc    
  41401c:	jmp    edx
  41401e:	mov    ebx,0xc9b1292f
  414023:	mov    al,ds:0x4dd7603d
  414028:	outs   dx,BYTE PTR ds:[esi]
  414029:	out    0x6b,al
  41402b:	sub    dh,BYTE PTR [ecx-0x5277c89a]
  414031:	stos   BYTE PTR es:[edi],al
  414032:	jge    0x414053
  414034:	sub    DWORD PTR [esi+0x5e89e1bc],edx
  41403a:	repnz std 
  41403c:	or     ebp,DWORD PTR [edx+0x7884994f]
  414042:	(bad)  
  414043:	andps  xmm2,XMMWORD PTR [eax+0x294fc016]
  41404a:	push   edi
  41404b:	pop    ss
  41404c:	inc    edx
  41404d:	test   DWORD PTR ds:0x2bf9bff7,edx
  414053:	mov    ebp,0x9df6a693
  414058:	jp     0x414002
  41405a:	mov    edi,0x1fcbb5a0
  41405f:	push   cs
  414060:	(bad)  
  414061:	popf   
  414062:	bound  esi,QWORD PTR [ebx+esi*2+0x674ca3df]
  414069:	in     al,0x90
  41406b:	mov    ebx,ebx
  41406d:	jg     0x414027
  41406f:	stos   BYTE PTR es:[edi],al
  414070:	outs   dx,BYTE PTR ds:[esi]
  414071:	xchg   DWORD PTR [edi],eax
  414073:	call   0x5a4a:0xa967b070
  41407a:	jge    0x4140cb
  41407c:	pop    ecx
  41407d:	xchg   esp,eax
  41407e:	mov    cl,0x4e
  414080:	sub    dh,ah
  414082:	mov    ah,0xa7
  414084:	inc    eax
  414085:	mov    BYTE PTR [ecx+0x53],al
  414088:	sub    al,0x89
  41408a:	scas   eax,DWORD PTR es:[edi]
  41408b:	and    ebp,DWORD PTR [edi+esi*8]
  41408e:	ret    
  41408f:	or     DWORD PTR [eax],esi
  414091:	dec    ebx
  414092:	mov    dl,0xfb
  414094:	outs   dx,DWORD PTR ds:[esi]
  414095:	pop    ebp
  414097:	push   ebp
  414098:	add    DWORD PTR [edi+0x69d22de6],edi
  41409e:	in     al,0xe5
  4140a0:	fldenv [ecx]
  4140a2:	sbb    esi,ebp
  4140a4:	or     eax,0xcc437740
  4140a9:	push   0x9f82fa35
  4140ae:	xchg   ebp,eax
  4140af:	cld    
  4140b0:	xor    bh,BYTE PTR [edx*1-0x32b3e2e8]
  4140b7:	in     eax,0x35
  4140b9:	lock fadd st,st(7)
  4140bc:	mov    ds:0xbfec0102,al
  4140c1:	adc    dh,BYTE PTR [ebx-0xe4873cc]
  4140c7:	retf   
  4140c8:	(bad)  
  4140c9:	push   ebp
  4140ca:	pop    esi
  4140cb:	iret   
  4140cc:	or     DWORD PTR [ebp-0x5d],esp
  4140cf:	xor    ebp,DWORD PTR [esp+eax*8+0x36]
  4140d3:	adc    edi,ebp
  4140d5:	push   ss
  4140d6:	lods   al,BYTE PTR es:[esi]
  4140d8:	sub    dl,bl
  4140da:	inc    edx
  4140db:	mov    bl,0xa2
  4140dd:	add    cl,BYTE PTR [ecx+0xd]
  4140e0:	stos   BYTE PTR es:[edi],al
  4140e1:	shr    BYTE PTR [edi],1
  4140e3:	dec    edi
  4140e4:	mov    al,0x63
  4140e6:	push   0xc89c10da
  4140eb:	out    dx,eax
  4140ec:	sbb    eax,0x347dcc74
  4140f1:	adc    DWORD PTR [ecx+0x6d],esi
  4140f4:	ja     0x41416a
  4140f6:	test   DWORD PTR [ecx+0x44],0x3f1e04fc
  4140fd:	add    eax,0xd0f60f39
  414102:	xchg   edi,eax
  414103:	or     DWORD PTR [ecx],ebx
  414105:	xchg   esi,eax
  414106:	out    0xf6,al
  414108:	mov    edi,0x23fcd0ee
  41410d:	ins    DWORD PTR es:[edi],dx
  41410e:	jbe    0x4140ad
  414110:	ins    DWORD PTR es:[edi],dx
  414111:	dec    edx
  414112:	mov    al,ds:0x53b06945
  414117:	mov    dh,0x77
  414119:	mov    esi,0x777cd705
  41411e:	inc    esp
  41411f:	dec    eax
  414120:	out    0xfb,al
  414122:	je     0x414144
  414124:	pop    ebp
  414125:	xchg   ebp,eax
  414126:	pop    es
  414127:	fisubr DWORD PTR ds:[ebp+edx*4-0x452f7aba]
  41412f:	mov    ebx,0x9f8c6677
  414134:	lods   eax,DWORD PTR ds:[esi]
  414135:	pop    edx
  414136:	clc    
  414137:	iret   
  414138:	inc    edx
  414139:	jecxz  0x41410a
  41413b:	push   ebp
  41413c:	rcl    bh,cl
  41413e:	push   0xffffff91
  414140:	adc    DWORD PTR [eax+0x71],0x30
  414144:	add    BYTE PTR [esi+0x5],cl
  414147:	inc    ebp
  414148:	pop    es
  414149:	shl    BYTE PTR [ebx],1
  41414b:	pop    esi
  41414c:	lahf   
  41414d:	aas    
  41414e:	stos   BYTE PTR es:[edi],al
  41414f:	enter  0x2706,0xd8
  414153:	ret    
  414154:	mov    ebp,0x7eae6cfc
  414159:	scas   eax,DWORD PTR es:[edi]
  41415a:	lods   eax,DWORD PTR ds:[esi]
  41415b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41415c:	test   DWORD PTR [eax-0x4f950061],esp
  414162:	jns    0x414104
  414164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414165:	stc    
  414166:	inc    esp
  414167:	and    al,0xe8
  414169:	inc    esi
  41416a:	mov    dh,dl
  41416c:	sbb    DWORD PTR gs:[edi+0x506a19a1],0xffffff95
  414174:	and    edi,eax
  414176:	xchg   DWORD PTR [edx-0x7f],edx
  414179:	in     eax,dx
  41417a:	jecxz  0x41417b
  41417c:	and    esp,DWORD PTR [edx-0x6a22ab73]
  414182:	mov    esp,0x74304b59
  414187:	xchg   edi,eax
  414188:	jb     0x4141c8
  41418a:	pop    ecx
  41418b:	data16 das 
  41418d:	js     0x4141aa
  41418f:	icebp  
  414190:	jp     0x414180
  414192:	sub    eax,0x8411e8f3
  414197:	iret   
  414198:	shl    BYTE PTR [eax+0x3e],1
  41419b:	aas    
  41419c:	pop    es
  41419d:	and    BYTE PTR [ecx+ebx*2+0x31],dl
  4141a1:	(bad)  
  4141a2:	jg     0x41419c
  4141a4:	mov    edx,DWORD PTR [ebp+0x6eebd1d3]
  4141aa:	mov    ch,BYTE PTR [edi+edi*4-0x511ed6b6]
  4141b1:	ds scas al,BYTE PTR es:[edi]
  4141b3:	cmp    edx,0xffffffc8
  4141b6:	aas    
  4141b7:	lds    esi,FWORD PTR [ebx]
  4141b9:	pop    es
  4141ba:	fstp   DWORD PTR [ebp+edi*2+0x48]
  4141be:	push   es
  4141bf:	inc    edi
  4141c0:	sub    ecx,DWORD PTR [ebp+edi*1-0x80]
  4141c4:	mov    ebp,0x9521fb43
  4141c9:	fs jae 0x4141a9
  4141cc:	jns    0x4141cc
  4141ce:	cmp    BYTE PTR [ebp+edi*8-0x253446c1],bh
  4141d5:	add    eax,0x6411a125
  4141da:	mov    ebx,0xb78587f9
  4141df:	xchg   esp,eax
  4141e0:	mov    ds:0xf2626a10,eax
  4141e5:	mov    dl,0xe9
  4141e7:	test   eax,esi
  4141e9:	je     0x414259
  4141eb:	test   ebp,ebx
  4141ed:	xchg   edi,eax
  4141ee:	jmp    0xf8318878
  4141f3:	and    al,dl
  4141f5:	xor    ebp,ebx
  4141f7:	cs out dx,eax
  4141f9:	jo     0x4141ed
  4141fb:	fld    TBYTE PTR [esi+0x5efaaf49]
  414201:	or     eax,0xe707a442
  414206:	shl    BYTE PTR gs:[ebp-0x4f38e0d6],cl
  41420d:	add    BYTE PTR [ebp+0x56c49bae],bh
  414213:	sub    eax,0x16d45f62
  414218:	mov    ds:0xc1894d8a,al
  41421d:	fistp  WORD PTR [ecx]
  41421f:	stos   DWORD PTR es:[edi],eax
  414220:	add    DWORD PTR [ecx-0x149d0e06],ebp
  414226:	icebp  
  414227:	inc    edi
  414228:	mov    al,0x94
  41422a:	fwait
  41422b:	jmp    0x5fe1:0x576889f6
  414232:	xchg   ecx,eax
  414233:	dec    esi
  414234:	ret    
  414235:	and    eax,esp
  414237:	pop    ebx
  414238:	jb     0x4141e5
  41423a:	mov    al,0xb7
  41423c:	sbb    al,0xf
  41423e:	push   cs
  41423f:	enter  0xa77f,0xce
  414243:	jmp    0xeac026b9
  414248:	imul   esi,DWORD PTR [eax+esi*8-0x2fd14e50],0x76
  414250:	inc    ebx
  414251:	ret    
  414252:	fadd   DWORD PTR [eax]
  414254:	test   BYTE PTR [edi],dh
  414256:	sub    bh,ch
  414258:	pushf  
  414259:	jo     0x4141f7
  41425b:	in     eax,0x89
  41425d:	mov    esi,0x94fd5bd9
  414262:	cs dec ebx
  414264:	jecxz  0x41429a
  414266:	dec    esi
  414267:	mov    eax,ds:0xbd97bbb4
  41426c:	mov    ch,BYTE PTR [esi]
  41426e:	das    
  41426f:	sbb    al,0x0
  414271:	add    DWORD PTR [ebx-0x7b992c7e],ebp
  414277:	push   eax
  414278:	sbb    BYTE PTR [eax-0x4ff3e65f],bh
  41427e:	fprem  
  414280:	dec    edx
  414281:	repnz aas 
  414283:	jmp    0x4142c7
  414285:	sub    eax,eax
  414287:	lahf   
  414288:	inc    ebp
  414289:	fisttp QWORD PTR [ebx+0x70395ce]
  41428f:	repz inc edi
  414291:	out    dx,al
  414292:	xchg   esp,eax
  414293:	sub    eax,0x98e3b24a
  414298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414299:	dec    dx
  41429b:	repz push ebp
  41429d:	pop    ss
  41429e:	out    dx,al
  41429f:	push   eax
  4142a0:	inc    esp
  4142a1:	mov    ebx,0xb1455c1b
  4142a6:	jecxz  0x4142c2
  4142a8:	(bad)  
  4142a9:	mov    ebp,0x51f74b44
  4142ae:	cmp    al,0xa8
  4142b0:	dec    edi
  4142b1:	daa    
  4142b2:	cs addr16 retf 0x9ef9
  4142b7:	pop    es
  4142b8:	inc    dl
  4142ba:	xor    ah,BYTE PTR [ebx-0x7a]
  4142bd:	jecxz  0x4142b2
  4142bf:	mov    dl,0x66
  4142c1:	pop    esp
  4142c2:	call   0xa01c:0xeef2ebdf
  4142c9:	scas   eax,DWORD PTR es:[edi]
  4142ca:	ficom  DWORD PTR [ebx]
  4142cc:	push   eax
  4142cd:	add    ebx,eax
  4142cf:	and    eax,0xcc06a036
  4142d4:	sub    al,0x71
  4142d7:	xchg   ebx,eax
  4142d8:	sahf   
  4142d9:	push   0x3bce787b
  4142de:	pusha  
  4142df:	imul   edx,DWORD PTR ds:0xa616317,0xffffffe4
  4142e6:	jo     0x41428a
  4142e8:	dec    edx
  4142e9:	xchg   dh,bl
  4142eb:	mov    eax,ds:0xf7bea976
  4142f0:	adc    eax,0xcae08151
  4142f5:	jmp    0x4142ae
  4142f7:	xor    DWORD PTR gs:[edi],edx
  4142fa:	aas    
  4142fb:	dec    ecx
  4142fc:	mov    dh,0x39
  4142fe:	push   esp
  4142ff:	adc    bl,bl
  414301:	mov    BYTE PTR [esi+0x36],cl
  414304:	and    ebx,DWORD PTR [eax]
  414306:	add    ebx,ecx
  414308:	and    eax,0x4931c4a
  41430d:	mov    DWORD PTR [ebx+0x5da2ba18],ecx
  414313:	std    
  414314:	cs mov esp,0xc33d283b
  41431a:	xchg   ebp,eax
  41431b:	mov    ah,BYTE PTR [edi+0x28d3d7f1]
  414321:	mov    dh,BYTE PTR [ecx-0xa0b0d6c]
  414327:	in     eax,0xb9
  414329:	mov    BYTE PTR [eax+0x252ffee8],cl
  41432f:	loope  0x4142f7
  414331:	pop    esi
  414332:	ror    DWORD PTR [ecx-0x43],cl
  414335:	push   es
  414336:	jbe    0x4142f0
  414338:	(bad)  [esi+0x54]
  41433b:	inc    eax
  41433c:	sar    DWORD PTR [ecx-0x2f],0x70
  414340:	pop    ecx
  414341:	(bad)  
  414342:	popf   
  414343:	jl     0x4142ce
  414345:	mov    dl,0x20
  414347:	sub    al,0x27
  414349:	fnsave [ecx]
  41434b:	sbb    al,0x34
  41434d:	adc    al,0x2e
  41434f:	fcom   QWORD PTR [ebp+0x79]
  414352:	lock mov cl,dh
  414355:	and    BYTE PTR [ebp-0x14b00a53],cl
  41435b:	ins    WORD PTR es:[edi],dx
  41435d:	sub    edi,DWORD PTR [edx]
  41435f:	call   0xa264:0x5244800e
  414366:	add    DWORD PTR [eax-0x3410cdd6],ebp
  41436c:	mov    ss,WORD PTR [ecx-0x4423c832]
  414372:	lods   al,BYTE PTR ds:[esi]
  414373:	(bad)  
  414374:	imul   ebp,DWORD PTR ds:[eax+0x5a261c6c],0x43
  41437c:	jmp    0x974b:0x93cab3ff
  414383:	inc    eax
  414384:	in     eax,0x2d
  414386:	jle    0x4143a1
  414388:	dec    ecx
  414389:	xchg   ebp,eax
  41438a:	sbb    ebx,DWORD PTR [ecx]
  41438c:	push   ss
  41438d:	cmp    edi,DWORD PTR [esi+0x51]
  414390:	(bad)
  414393:	mov    ds:0x7005462d,al
  414398:	xor    edi,DWORD PTR [eax-0x6014afcb]
  41439e:	scas   eax,DWORD PTR es:[edi]
  41439f:	pop    edx
  4143a0:	ret    
  4143a1:	daa    
  4143a2:	sub    BYTE PTR [edi-0x3c],dl
  4143a5:	pop    edx
  4143a6:	jecxz  0x4143a1
  4143a8:	dec    eax
  4143a9:	mov    ebp,0xe7021e9c
  4143ae:	sbb    al,0x2c
  4143b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143b1:	lea    edi,[ebx+0x60]
  4143b4:	aas    
  4143b5:	jp     0x4143a5
  4143b7:	xor    edx,DWORD PTR ds:0x79a1ddfa
  4143bd:	mov    eax,0xe22e1e76
  4143c2:	push   ebp
  4143c3:	cs cli 
  4143c5:	mov    ecx,0x47a746ad
  4143ca:	fnstenv [ecx+0x69]
  4143cd:	sar    DWORD PTR [edx+eiz*1-0x11],0xdc
  4143d2:	div    DWORD PTR ds:0xaa72eb21
  4143d8:	pop    ds
  4143d9:	xchg   ecx,eax
  4143da:	and    al,0xfc
  4143dc:	retf   
  4143dd:	push   edi
  4143de:	imul   edx,DWORD PTR [ecx-0x53],0xfffffffe
  4143e2:	push   esp
  4143e3:	dec    edx
  4143e4:	popf   
  4143e5:	jbe    0x4143dd
  4143e7:	mov    bp,0x5797
  4143eb:	add    bl,BYTE PTR [eax-0x178aae08]
  4143f1:	fnstcw WORD PTR [ebp+0x45f1cff4]
  4143f7:	cmc    
  4143f8:	retf   
  4143f9:	les    ecx,FWORD PTR [esi-0x1d842486]
  4143ff:	add    al,0x90
  414401:	mov    eax,ds:0xa0286f30
  414406:	cmc    
  414407:	mov    esp,0xf10a37ba
  41440c:	ret    0x9974
  41440f:	shl    ah,cl
  414411:	jb     0x41440f
  414413:	clc    
  414414:	shl    ebp,cl
  414416:	dec    ebx
  414417:	mov    edx,0x49d0bff4
  41441c:	repnz fcmovnbe st,st(3)
  41441f:	mov    esp,0x57ec1e9f
  414424:	sahf   
  414425:	fs cld 
  414427:	aad    0x17
  414429:	fnstenv [eax]
  41442b:	dec    ebp
  41442c:	sub    al,0x83
  41442e:	push   cs
  41442f:	mov    ecx,0xc31e554c
  414434:	bswap  eax
  414436:	jge    0x414415
  414438:	or     dh,BYTE PTR [ecx-0x13]
  41443b:	mov    esp,0xa9067484
  414440:	adc    al,0xee
  414442:	ss dec edi
  414444:	pop    edi
  414445:	inc    edi
  414446:	lahf   
  414447:	mov    ecx,0xad9c8f11
  41444c:	push   cs
  41444d:	jge    0x4144af
  41444f:	dec    ecx
  414450:	cdq    
  414451:	xchg   ecx,eax
  414452:	sub    bh,dh
  414454:	sub    BYTE PTR [ecx],ch
  414456:	ja     0x4143e4
  414458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414459:	mov    ch,0x0
  41445b:	sbb    ch,BYTE PTR [ecx]
  41445d:	(bad)  
  41445f:	loopne 0x4143f2
  414461:	xchg   edx,eax
  414462:	xchg   ecx,eax
  414463:	pop    ds
  414464:	adc    eax,0xb9d70548
  414469:	aad    0x14
  41446b:	cld    
  41446c:	cmp    DWORD PTR [ecx+esi*4],ebp
  41446f:	into   
  414470:	push   ecx
  414471:	or     ebp,DWORD PTR [ebp+edx*1+0x45]
  414475:	mov    bh,0xff
  414477:	fisttp QWORD PTR [ecx]
  414479:	ins    DWORD PTR es:[edi],dx
  41447a:	jne    0x4144a5
  41447c:	or     BYTE PTR [esi],0x8c
  41447f:	orps   xmm6,XMMWORD PTR [ecx-0xc8d4096]
  414486:	sbb    ecx,ebx
  414488:	jbe    0x414437
  41448a:	and    ebx,0xffffffcf
  41448d:	push   ebp
  41448e:	cmc    
  41448f:	jecxz  0x41448b
  414491:	mov    eax,cs:0x797854f4
  414497:	push   ss
  414498:	int3   
  414499:	loopne 0x414435
  41449b:	out    dx,al
  41449c:	das    
  41449d:	das    
  41449e:	mov    ds:0x479b8961,al
  4144a3:	xchg   edx,eax
  4144a4:	xor    al,bl
  4144a6:	cmp    edi,edx
  4144a8:	mov    bh,0x4c
  4144aa:	mov    WORD PTR [ebp+0x5badc44c],ss
  4144b0:	stc    
  4144b1:	mov    esp,0x69cb92ef
  4144b6:	int    0xec
  4144b8:	sbb    ch,BYTE PTR [esi+0x5a]
  4144bb:	lock adc cl,BYTE PTR [edi]
  4144be:	ret    0xb0eb
  4144c1:	and    BYTE PTR [ebp+0x70],ah
  4144c4:	adc    al,0x6
  4144c6:	inc    edx
  4144c7:	xlat   BYTE PTR fs:[ebx]
  4144c9:	mov    ecx,0xb70d79b7
  4144ce:	jg     0x41447d
  4144d0:	dec    edx
  4144d1:	add    bl,BYTE PTR [ecx]
  4144d3:	outs   dx,BYTE PTR ds:[esi]
  4144d4:	sub    eax,0x7ab9f7dc
  4144d9:	xchg   esi,eax
  4144da:	pop    es
  4144db:	daa    
  4144dc:	je     0x4144a5
  4144de:	scas   eax,DWORD PTR es:[edi]
  4144df:	xchg   ebp,eax
  4144e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144e1:	xor    ah,BYTE PTR [edi-0x32]
  4144e4:	bound  ecx,QWORD PTR [ebx]
  4144e6:	retf   0xf0d4
  4144e9:	iret   
  4144ea:	pop    ss
  4144eb:	enter  0xeec,0xfe
  4144ef:	fadd   QWORD PTR [ecx+ebx*8]
  4144f2:	mov    esp,0x36e0e587
  4144f7:	push   0xffffffed
  4144f9:	shl    dl,cl
  4144fb:	shr    DWORD PTR [eax+edx*2-0x34],0xdf
  414500:	rcl    bh,0x32
  414503:	mov    BYTE PTR [edx],ch
  414505:	mov    ah,0xec
  414507:	or     al,0xba
  414509:	adc    BYTE PTR es:[edi+ebp*2],bh
  41450d:	and    ah,cl
  41450f:	inc    ebp
  414510:	adc    al,0x25
  414512:	in     al,0x77
  414514:	addr16 mov edi,0x55606def
  41451a:	out    dx,eax
  41451b:	jg     0x4144ed
  41451d:	xchg   edi,eax
  41451e:	repz adc cl,al
  414521:	sahf   
  414522:	int    0x3e
  414524:	pop    ecx
  414525:	or     al,0xcb
  414527:	cmp    DWORD PTR [edx-0x2ff9e58f],esi
  41452d:	jbe    0x414561
  41452f:	mov    ebx,DWORD PTR [ecx+0x55]
  414532:	leave  
  414533:	mov    eax,ds:0x47c898cb
  414538:	pusha  
  414539:	sbb    eax,0x1907e627
  41453e:	sar    DWORD PTR [edx],0x29
  414541:	dec    esi
  414542:	popf   
  414543:	jns    0x4144d6
  414545:	call   0xe9e235f5
  41454a:	(bad)  
  41454c:	loop   0x41452d
  41454e:	jg     0x41457d
  414550:	jnp    0x4145c6
  414552:	push   es
  414553:	inc    edi
  414554:	call   FWORD PTR [ebx+0x21]
  414557:	fwait
  414558:	ror    BYTE PTR [edi-0x5],1
  41455b:	popa   
  41455c:	fisub  WORD PTR [ebx-0x56766459]
  414562:	(bad)  
  414563:	mov    al,ds:0x4c71ed51
  414568:	test   eax,0x4de87e86
  41456d:	adc    dh,BYTE PTR [ebp-0x70f3d7fb]
  414573:	cmp    dh,bl
  414575:	and    ecx,DWORD PTR [ebx+eax*2+0x603e492e]
  41457c:	dec    eax
  41457d:	ficom  WORD PTR [ebx+0x60]
  414580:	mov    eax,0xf1815621
  414585:	scas   al,BYTE PTR es:[edi]
  414586:	push   edx
  414587:	pusha  
  414588:	mov    ?,WORD PTR [ecx+eiz*1]
  41458b:	inc    ecx
  41458c:	sub    DWORD PTR [eax-0x65fea3fb],0xffffff85
  414593:	push   edi
  414594:	cs dec ebp
  414596:	mov    al,ds:0x27a62431
  41459b:	jmp    FWORD PTR [esi+0x5157eee0]
  4145a1:	vmaxpd xmm3,xmm6,xmm1
  4145a5:	mov    dl,0x7b
  4145a7:	pop    ds
  4145a8:	fwait
  4145a9:	add    cl,BYTE PTR [eax+0x350d982e]
  4145af:	outs   dx,DWORD PTR ds:[esi]
  4145b0:	pop    esp
  4145b1:	sahf   
  4145b2:	mov    dh,0xa1
  4145b4:	push   eax
  4145b5:	and    bl,BYTE PTR [edx-0xfed032f]
  4145bb:	xor    dh,bh
  4145bd:	jp     0x414634
  4145bf:	test   eax,0xb91557cb
  4145c4:	xchg   ebx,eax
  4145c5:	fisub  WORD PTR [esi-0x6dddd404]
  4145cb:	add    DWORD PTR [edi],ecx
  4145cd:	es aam 0x10
  4145d0:	loope  0x4145df
  4145d2:	bound  eax,QWORD PTR [ebx]
  4145d4:	inc    ecx
  4145d5:	(bad)  
  4145d6:	mov    ds:0x2fba648d,al
  4145db:	mov    esp,0xdef09abe
  4145e0:	sub    eax,DWORD PTR [edx]
  4145e2:	xor    al,0x54
  4145e4:	ins    DWORD PTR es:[edi],dx
  4145e5:	mov    ecx,0x19a22792
  4145ea:	push   ds
  4145eb:	push   ebx
  4145ec:	pop    ebp
  4145ee:	mov    al,0xe1
  4145f0:	fimul  DWORD PTR [esi]
  4145f2:	les    edi,FWORD PTR [eax]
  4145f4:	lods   eax,DWORD PTR ds:[esi]
  4145f5:	loopne 0x41459c
  4145f7:	jle    0x41466f
  4145f9:	fwait
  4145fa:	push   esi
  4145fb:	mov    edi,0xc5a3fbfb
  414600:	call   FWORD PTR [edx-0x1c5ee05]
  414606:	xor    ebx,DWORD PTR [ebx]
  414608:	popa   
  414609:	clc    
  41460a:	inc    esp
  41460b:	mov    edx,0x328f5399
  414610:	mov    cl,0x8
  414612:	pusha  
  414613:	ds aad 0x74
  414616:	push   ecx
  414617:	push   edi
  414618:	fwait
  414619:	xor    edx,DWORD PTR [ebx]
  41461b:	(bad)  [ebp+0x59]
  41461e:	mov    al,ds:0x7957353e
  414623:	or     BYTE PTR [ecx-0x2f],0xc2
  414627:	shl    DWORD PTR [esi+0x7a],1
  41462a:	outs   dx,DWORD PTR ds:[esi]
  41462b:	popf   
  41462c:	xor    DWORD PTR [ebx-0x61],ebp
  41462f:	cmp    eax,0xba60db41
  414634:	or     BYTE PTR [ebp-0x2b],bl
  414637:	mov    eax,ds:0xd9da76d0
  41463c:	mov    DWORD PTR [eax],ebp
  41463e:	ds inc ebp
  414640:	push   ecx
  414641:	jb     0x41468d
  414643:	cdq    
  414644:	test   eax,0xa6c1491e
  414649:	fwait
  41464a:	mov    ebp,0xb9036ee4
  41464f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414650:	das    
  414651:	out    0x53,al
  414653:	mov    ds:0x7143bb46,al
  414658:	sub    dh,BYTE PTR [ebp-0x6d]
  41465b:	sub    eax,0x4e120120
  414660:	es test eax,0x5e5fbfd1
  414666:	push   ds
  414667:	scas   eax,DWORD PTR es:[edi]
  414668:	adc    ebx,ebx
  41466a:	mov    al,ds:0xf022dffd
  41466f:	xchg   esi,eax
  414670:	and    ebp,esi
  414672:	push   eax
  414673:	test   DWORD PTR [edx+0x2236307e],0x8f56efd6
  41467d:	jae    0x4146d7
  41467f:	inc    esp
  414680:	retf   
  414681:	rcl    cl,cl
  414683:	cmp    eax,DWORD PTR [ecx+esi*4+0x3a]
  414687:	outs   dx,DWORD PTR ds:[esi]
  414688:	sub    BYTE PTR [edi],bl
  41468a:	inc    ebx
  41468b:	xor    BYTE PTR [ebx+0x386709ed],ch
  414691:	dec    ecx
  414692:	shl    ebp,1
  414694:	dec    ecx
  414695:	add    eax,0x82a0c592
  41469a:	mov    dl,0x8f
  41469c:	rcl    DWORD PTR [ebp-0x22],cl
  41469f:	(bad)  
  4146a0:	jmp    0xc8dd4dd0
  4146a5:	cmp    edi,DWORD PTR ds:0xb826d80d
  4146ab:	sbb    BYTE PTR [ebp+0x17],al
  4146ae:	or     al,BYTE PTR [ecx-0xaf2e7ac]
  4146b4:	add    BYTE PTR ds:0xd94ce123,ch
  4146ba:	inc    edx
  4146bb:	or     bh,bh
  4146bd:	retf   0x129d
  4146c0:	fild   WORD PTR [esi+0x77]
  4146c3:	pop    ss
  4146c4:	sbb    BYTE PTR [ebx+eax*1],ah
  4146c7:	add    eax,0xf99d9ae3
  4146cc:	sbb    esi,esp
  4146ce:	aas    
  4146cf:	rcl    BYTE PTR [edi],1
  4146d1:	fisubr WORD PTR [esi-0x264ce582]
  4146d7:	ret    
  4146d8:	cld    
  4146d9:	les    eax,FWORD PTR [edi-0x38a83885]
  4146df:	and    eax,DWORD PTR [edx+0x1cd440c5]
  4146e5:	cmp    ebx,DWORD PTR [ebx+ebx*4-0x5f4adb68]
  4146ec:	(bad)
  4146ef:	fisttp DWORD PTR [eax]
  4146f1:	jmp    0x23c7f50
  4146f6:	mov    bl,BYTE PTR [edi+0x26]
  4146f9:	cmp    dl,BYTE PTR [edx]
  4146fb:	das    
  4146fc:	cmp    DWORD PTR [edi+0x17],esp
  4146ff:	bswap  edi
  414701:	mov    ebp,0x595a6db0
  414706:	and    esp,DWORD PTR [ebx+0x5528f954]
  41470c:	xor    al,0x83
  41470e:	ins    BYTE PTR es:[edi],dx
  41470f:	out    dx,al
  414710:	dec    esp
  414711:	sbb    BYTE PTR [edi],bh
  414713:	add    al,0x8c
  414715:	repz fiadd DWORD PTR [esi]
  414718:	fisttp QWORD PTR [ebx]
  41471a:	sbb    eax,0x76573cdb
  41471f:	(bad)  
  414721:	mov    al,0xd7
  414723:	stos   DWORD PTR es:[edi],eax
  414724:	inc    eax
  414725:	jb     0x4146e7
  414727:	into   
  414728:	xchg   DWORD PTR [edx],ebx
  41472a:	(bad)  
  41472b:	int    0xab
  41472d:	add    esi,esp
  41472f:	(bad)  
  414730:	mov    esi,0xf567096b
  414735:	jmp    0xa89ea4ab
  41473a:	mov    ah,0xec
  41473c:	(bad)  
  41473d:	sbb    BYTE PTR [esp+edi*8+0x79],al
  414741:	add    DWORD PTR [edi],esp
  414743:	popf   
  414744:	(bad)  
  414745:	mov    cl,0xba
  414747:	call   0x8bf4f35c
  41474c:	mov    eax,0x1a7c02c5
  414751:	shr    BYTE PTR ds:0x64cf386d,1
  414757:	cmc    
  414758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414759:	inc    esp
  41475a:	xor    ebp,DWORD PTR [bx+di-0x7689]
  41475f:	outs   dx,DWORD PTR ds:[esi]
  414760:	sbb    dl,ah
  414762:	shl    BYTE PTR [ebx],cl
  414764:	mov    bl,0xde
  414766:	lahf   
  414767:	call   0xb2e16884
  41476c:	retf   0xb5c5
  41476f:	fs dec ebp
  414771:	fnsave [edx]
  414773:	sbb    bl,ch
  414775:	pop    ebp
  414776:	ficom  WORD PTR [edi]
  414778:	(bad)  
  414779:	aas    
  41477a:	(bad)  
  41477b:	ret    
  41477c:	test   DWORD PTR [ebp+0x31dcb263],ebx
  414782:	and    al,BYTE PTR [eax+0x71fd7754]
  414788:	cs inc eax
  41478a:	push   ecx
  41478b:	sub    al,0xdd
  41478d:	(bad)  
  41478e:	push   ecx
  41478f:	mov    al,0xaa
  414791:	aad    0x73
  414793:	xor    esi,ebx
  414795:	(bad)  
  414797:	lock sar esi,0xfd
  41479b:	scas   al,BYTE PTR es:[edi]
  41479c:	sbb    al,0x33
  41479e:	les    ecx,FWORD PTR [ecx-0x4adce70c]
  4147a4:	jo     0x4147c2
  4147a6:	ja     0x4147c5
  4147a8:	adc    eax,0x1a8cc6cd
  4147ad:	push   edx
  4147ae:	dec    eax
  4147af:	out    dx,al
  4147b0:	and    BYTE PTR [edi],bh
  4147b2:	push   edx
  4147b3:	cli    
  4147b4:	sbb    eax,0xa368b9be
  4147b9:	mov    cl,0xd3
  4147bb:	jmp    DWORD PTR [ecx]
  4147bd:	popf   
  4147be:	cmp    eax,0xa688d2c7
  4147c3:	and    al,0xa1
  4147c5:	stc    
  4147c6:	stos   BYTE PTR es:[edi],al
  4147c7:	out    dx,al
  4147c8:	cli    
  4147c9:	aam    0x3
  4147cb:	or     al,0xd3
  4147cd:	inc    edi
  4147ce:	sbb    DWORD PTR ds:0x876e6466,0xc890fe49
  4147d8:	icebp  
  4147d9:	dec    esi
  4147da:	popf   
  4147db:	clc    
  4147dc:	pop    edi
  4147dd:	xchg   esp,eax
  4147de:	fisub  WORD PTR [ecx+ebx*1+0x7a09001c]
  4147e5:	push   ecx
  4147e6:	das    
  4147e7:	js     0x4147d0
  4147e9:	cdq    
  4147ea:	jae    0x4147b1
  4147ec:	mov    ss:0x9f853847,eax
  4147f2:	inc    eax
  4147f3:	mov    ah,0x23
  4147f5:	add    al,0x57
  4147f7:	mov    esp,0x1a582231
  4147fc:	imul   esi,DWORD PTR [ebx+esi*4-0x32],0xfffffffd
  414801:	sub    dh,BYTE PTR [edi]
  414803:	jmp    0x41478e
  414805:	out    dx,al
  414806:	(bad)  
  414807:	das    
  414808:	scas   eax,DWORD PTR es:[edi]
  414809:	mov    ebp,0x4fd3fe94
  41480e:	nop
  41480f:	push   eax
  414810:	outs   dx,DWORD PTR ds:[esi]
  414811:	pushf  
  414812:	or     ch,bl
  414814:	ja     0x4147b2
  414816:	std    
  414817:	pop    ds
  414818:	jmp    0x1cb1df02
  41481d:	mov    bh,0x81
  41481f:	push   esp
  414820:	int3   
  414821:	adc    BYTE PTR [eax+0x2c84d138],bh
  414827:	cwde   
  414828:	shr    edx,0x8e
  41482b:	setp   BYTE PTR [ebp+esi*2-0x48a52885]
  414833:	adc    DWORD PTR [ecx],edi
  414835:	pop    es
  414836:	in     eax,dx
  414837:	push   edi
  414838:	fidiv  DWORD PTR [esi-0x17e55443]
  41483e:	loope  0x414855
  414840:	add    DWORD PTR [edx-0x50],ebp
  414843:	mov    al,ds:0x2c3a6ba4
  414848:	mov    ebp,ebx
  41484a:	cwde   
  41484b:	dec    esi
  41484c:	sub    esi,DWORD PTR [eax]
  41484e:	pusha  
  41484f:	sbb    bl,BYTE PTR [eax+edx*4-0x3a79dd3e]
  414856:	adc    al,0x1d
  414858:	pop    edi
  414859:	xchg   ah,bh
  41485b:	dec    ebp
  41485c:	mov    ecx,0xf68e0672
  414861:	jl     0x414879
  414863:	jle    0x414845
  414865:	mov    edi,0xa967c573
  41486a:	cdq    
  41486b:	lods   al,BYTE PTR ds:[esi]
  41486c:	jno    0x414812
  41486e:	and    DWORD PTR [ebx],esi
  414870:	mov    bl,BYTE PTR [ebp-0x2e]
  414873:	adc    al,0xfd
  414875:	pop    ebp
  414876:	mov    al,ds:0x120c6531
  41487b:	pop    ss
  41487c:	xor    bl,dl
  41487e:	xchg   edi,eax
  41487f:	ret    0x28a0
  414882:	sar    BYTE PTR [edx],0xa6
  414885:	pop    ds
  414886:	mov    esi,0xbb7b6969
  41488b:	loop   0x41490b
  41488d:	mul    WORD PTR [esi+0x26]
  414891:	add    eax,0xd646e714
  414896:	mov    edx,DWORD PTR [edi-0x7b]
  414899:	adc    bl,cl
  41489b:	in     eax,0xa7
  41489d:	sahf   
  41489e:	dec    ecx
  41489f:	adc    eax,DWORD PTR [edi+0x31]
  4148a2:	test   edx,edi
  4148a4:	xchg   ebp,eax
  4148a5:	in     al,0xb5
  4148a7:	scas   al,BYTE PTR es:[edi]
  4148a8:	mov    edx,0x3183fcf1
  4148ad:	jo     0x4148c7
  4148af:	mov    edx,0x4ea80ac6
  4148b4:	sbb    esi,DWORD PTR [ecx]
  4148b6:	dec    esp
  4148b7:	adc    BYTE PTR [ebx+0x18],dl
  4148ba:	jnp    0x414851
  4148bc:	jp     0x4148b9
  4148be:	shr    BYTE PTR [ebx+0x34dfa679],1
  4148c4:	add    DWORD PTR [ebx-0x134a997],edi
  4148ca:	stc    
  4148cb:	xchg   ebx,eax
  4148cc:	and    al,0x68
  4148ce:	dec    edx
  4148cf:	sub    edi,0xa74af4c5
  4148d5:	fwait
  4148d6:	mov    edx,0x748778c1
  4148db:	clc    
  4148dc:	ins    DWORD PTR es:[edi],dx
  4148dd:	inc    ebx
  4148de:	ret    0xe795
  4148e1:	imul   esi,DWORD PTR [eax+eax*8-0x33c94e1e],0xc9e7624e
  4148ec:	out    0x71,al
  4148ee:	cmp    al,0x94
  4148f0:	push   ds
  4148f1:	push   ss
  4148f2:	mov    ebx,edi
  4148f4:	push   esi
  4148f5:	pop    ds
  4148f6:	std    
  4148f7:	fiadd  WORD PTR [ecx-0x717eff23]
  4148fd:	dec    eax
  4148fe:	dec    esi
  4148ff:	mov    dl,0x83
  414901:	jae    0xbc648344
  414907:	fidivr WORD PTR [bx+0x66]
  41490b:	lock xchg esi,eax
  41490d:	js     0x41495e
  41490f:	jns    0x41490a
  414911:	push   esi
  414912:	jo     0x4148f4
  414914:	ret    
  414915:	inc    ebp
  414916:	fcomip st,st(6)
  414918:	std    
  414919:	mov    ch,0x45
  41491b:	bound  ebp,QWORD PTR [esi]
  41491d:	stc    
  41491e:	jmp    esp
  414920:	sub    al,ch
  414922:	cmp    ah,BYTE PTR [ecx-0x6c5c3b0d]
  414928:	jp     0x4148f8
  41492a:	dec    edx
  41492b:	xchg   ecx,eax
  41492c:	pop    es
  41492d:	pushf  
  41492e:	fisttp DWORD PTR [esi+0x1c72ef0e]
  414934:	mov    eax,0xe3b22ed6
  414939:	(bad)  
  41493a:	es imul ebx,ebx,0xed3d69cb
  414941:	pop    esi
  414942:	pop    ebx
  414943:	xchg   esi,eax
  414944:	sbb    DWORD PTR [eax-0x2a2ef431],ecx
  41494a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41494b:	shl    BYTE PTR [eax-0x3],cl
  41494e:	cmp    DWORD PTR [edi+0x5c6c31c3],esi
  414954:	addr16 or eax,0x970090b7
  41495a:	pop    ebx
  41495b:	sub    BYTE PTR [ebp+0x30ff64b0],0x3c
  414962:	call   0x4e0cfbdb
  414967:	js     0x414947
  414969:	ds dec esi
  41496b:	mov    ch,0xcd
  41496d:	retf   
  41496e:	loop   0x4148ff
  414970:	data16 jecxz 0x4149db
  414973:	cwde   
  414974:	inc    esi
  414975:	invd   
  414977:	jl     0x4149b9
  414979:	enter  0x54c1,0x38
  41497d:	in     eax,dx
  41497e:	pop    ss
  41497f:	repnz pop esp
  414981:	jmp    0x414976
  414983:	mov    dl,0x9a
  414985:	out    0x29,eax
  414987:	cld    
  414988:	lea    edi,[ecx+0x76]
  41498b:	das    
  41498c:	sbb    edx,DWORD PTR [esi]
  41498e:	and    eax,0x6c64f65e
  414993:	out    0x8d,al
  414995:	lock out 0x7b,al
  414998:	jp     0x414961
  41499a:	rcl    BYTE PTR [esi-0x2b],cl
  41499d:	shl    BYTE PTR [edx+0x0],1
  4149a0:	sub    ebp,DWORD PTR [esi]
  4149a2:	ins    BYTE PTR es:[edi],dx
  4149a3:	loopne 0x414a10
  4149a5:	mov    DWORD PTR [ebx],edi
  4149a7:	xor    BYTE PTR [edi-0x18e0c37a],dl
  4149ad:	pop    ebp
  4149ae:	popf   
  4149af:	mov    al,ds:0x1a43609c
  4149b4:	xlat   BYTE PTR ds:[ebx]
  4149b5:	out    0xe0,al
  4149b7:	push   0xfffffff3
  4149b9:	jg     0x5ac8fbaa
  4149bf:	mov    WORD PTR [esi-0x2a243ef7],?
  4149c5:	sbb    eax,0xd2e2518c
  4149ca:	pop    ebx
  4149cb:	sar    bl,0xd0
  4149ce:	jae    0x4149dc
  4149d0:	dec    ebp
  4149d1:	mov    dh,0x17
  4149d3:	test   DWORD PTR [edx-0x5d],ebp
  4149d6:	jge    0x414993
  4149d8:	lock mov bh,0xab
  4149db:	ret    
  4149dc:	dec    esi
  4149dd:	and    eax,0xe261d42f
  4149e2:	add    BYTE PTR [edx],0x93
  4149e5:	and    al,0x96
  4149e7:	inc    ebp
  4149e8:	adc    DWORD PTR [eax+0x1d5107a7],edx
  4149ee:	mov    ?,WORD PTR [ecx-0x72e7b049]
  4149f4:	sbb    ah,BYTE PTR [eax+ebx*2-0x4fffef68]
  4149fb:	ins    DWORD PTR es:[edi],dx
  4149fc:	and    BYTE PTR [edi],0xdd
  4149ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a00:	jnp    0x4149cb
  414a02:	jmp    0x414a23
  414a04:	scas   al,BYTE PTR es:[edi]
  414a05:	cmc    
  414a06:	pop    ss
  414a07:	popf   
  414a08:	ds mov ah,0xed
  414a0b:	arpl   WORD PTR [ecx-0x6f],ax
  414a0e:	inc    esi
  414a0f:	retf   
  414a10:	into   
  414a11:	sbb    ah,BYTE PTR [ebp-0x75]
  414a14:	xchg   edx,eax
  414a15:	and    BYTE PTR [bp+di-0x5b],0x58
  414a1a:	gs push 0xbad623a
  414a20:	jae    0x414a7d
  414a22:	or     BYTE PTR [ebx+0x21],cl
  414a25:	gs xchg edi,eax
  414a27:	push   0x70
  414a29:	mov    ah,0xe
  414a2b:	xor    al,0x86
  414a2d:	mov    al,ds:0xcaa5a6e3
  414a32:	sbb    DWORD PTR [esi-0x1],esp
  414a35:	mov    ecx,0x762a474b
  414a3a:	enter  0x6cd9,0x41
  414a3e:	mov    ah,0xe8
  414a40:	add    al,0x93
  414a42:	inc    edx
  414a43:	jmp    DWORD PTR [edx+0x331366d6]
  414a49:	cmp    ebx,DWORD PTR [ecx]
  414a4b:	cmp    BYTE PTR [edi+0x7d],0xc0
  414a4f:	or     eax,0x6f1e9307
  414a54:	sub    bl,BYTE PTR [eax]
  414a56:	test   eax,0x59254bc1
  414a5b:	and    BYTE PTR [ebp-0x6707cb64],cl
  414a61:	mov    esp,0xb04f4a9e
  414a66:	push   ds
  414a67:	mov    dl,0x9a
  414a69:	mov    ds:0x3579ab61,al
  414a6f:	xchg   ebx,eax
  414a70:	sbb    al,0xa7
  414a72:	lds    ebp,FWORD PTR [edx+edx*1-0x2d515420]
  414a79:	push   esp
  414a7a:	push   0x52775402
  414a7f:	pop    ebx
  414a80:	(bad)  [ecx-0x4b989eed]
  414a86:	pusha  
  414a87:	push   es
  414a88:	add    cl,BYTE PTR [ebx-0x7a9adfdb]
  414a8e:	ins    BYTE PTR es:[edi],dx
  414a8f:	imul   ecx,DWORD PTR [esi+0x4f],0xd6a97207
  414a96:	repnz loopne 0x414ab9
  414a99:	jle    0x414aab
  414a9b:	xchg   BYTE PTR [ebp+0x6736bd86],bl
  414aa1:	and    BYTE PTR [esi],ah
  414aa3:	xchg   ch,bh
  414aa5:	jnp    0x414af4
  414aa7:	jb     0x414b0d
  414aa9:	jp     0x414b21
  414aab:	pop    eax
  414aac:	mov    al,ds:0xca1d0d52
  414ab1:	inc    ebp
  414ab2:	je     0x414a3d
  414ab4:	(bad)  
  414ab5:	fsub   QWORD PTR [esi+0x404a0217]
  414abb:	in     al,0x41
  414abd:	mov    WORD PTR [ebx+0x6913e646],?
  414ac3:	out    0x21,al
  414ac5:	push   ecx
  414ac6:	push   ebp
  414ac7:	jns    0x414a88
  414ac9:	(bad)  
  414aca:	arpl   sp,sp
  414acc:	jnp    0x414afe
  414ace:	xor    ecx,edi
  414ad0:	outs   dx,BYTE PTR ds:[esi]
  414ad1:	inc    eax
  414ad2:	iret   
  414ad3:	les    eax,FWORD PTR [ebp+0x604d4e01]
  414ad9:	call   0x61ec:0x238bc1d
  414ae0:	pop    esp
  414ae1:	fnstcw WORD PTR [edi-0x153a9f91]
  414ae7:	push   esp
  414ae8:	inc    eax
  414ae9:	shr    BYTE PTR [eax],0xe7
  414aec:	sbb    BYTE PTR [edx],bl
  414aee:	xor    edx,ebx
  414af0:	mov    bl,0x54
  414af2:	icebp  
  414af3:	inc    esp
  414af4:	push   cs
  414af5:	mov    dh,dl
  414af7:	mov    cl,0xd2
  414af9:	lock inc ebx
  414afb:	mov    DWORD PTR [eax-0x72874017],esp
  414b01:	in     eax,0x32
  414b03:	icebp  
  414b04:	pop    ss
  414b05:	sahf   
  414b06:	push   eax
  414b07:	lea    edi,[edi+eiz*1]
  414b0a:	sbb    eax,DWORD PTR [ecx+eax*4-0x38b85c9c]
  414b11:	xlat   BYTE PTR ds:[ebx]
  414b12:	push   es
  414b13:	mov    bl,0x80
  414b15:	addr16 jbe 0x414aaf
  414b18:	(bad)  
  414b19:	js     0x414b2b
  414b1b:	xor    eax,0x36ad937
  414b20:	hlt    
  414b21:	sbb    DWORD PTR [eax+0x7bf74d4c],eax
  414b27:	cmp    eax,0x660372ca
  414b2c:	retf   
  414b2d:	add    eax,0xecbd74d9
  414b32:	sbb    eax,0xfe393517
  414b37:	sub    DWORD PTR [ecx+0x15],esi
  414b3a:	xor    esi,edi
  414b3c:	mov    ebp,0xec9da05f
  414b41:	adc    al,0x54
  414b43:	jnp    0x414ae9
  414b45:	in     al,dx
  414b46:	sbb    BYTE PTR [esi-0x1c],cl
  414b49:	sub    dh,bl
  414b4b:	add    ebx,esp
  414b4d:	dec    esi
  414b4e:	imul   ecx,DWORD PTR [edx],0x19
  414b51:	pushf  
  414b52:	jge    0x414b8a
  414b54:	sub    ecx,esp
  414b56:	cdq    
  414b57:	cmc    
  414b58:	mov    ds:0xc96574c4,eax
  414b5d:	fild   QWORD PTR [edi+0x3069c461]
  414b63:	out    dx,al
  414b64:	retf   
  414b65:	mov    ecx,ebp
  414b67:	push   ebp
  414b68:	mov    al,0xd9
  414b6a:	jo     0x414b5c
  414b6c:	and    bh,ch
  414b6e:	clc    
  414b6f:	adc    dl,BYTE PTR [ebx+0x56e64e42]
  414b75:	cmp    DWORD PTR [eax+esi*8-0x1192096a],ebp
  414b7c:	push   esi
  414b7d:	hlt    
  414b7e:	ffree  st(6)
  414b80:	mov    dh,0x3f
  414b82:	enter  0x160b,0x32
  414b86:	cmp    dl,dh
  414b88:	mov    ecx,0x611715ae
  414b8d:	mov    edi,0xe0753b9e
  414b92:	cmc    
  414b93:	pop    edi
  414b94:	out    0xe9,eax
  414b96:	pop    ecx
  414b97:	bnd jno 0x414be7
  414b9a:	xchg   ebp,eax
  414b9b:	push   edx
  414b9c:	cwde   
  414b9d:	mov    cl,0x56
  414b9f:	jns    0x414be4
  414ba1:	mov    edx,0xda6f91cf
  414ba6:	or     ebp,DWORD PTR [esi]
  414ba8:	aad    0xe8
  414baa:	or     dl,BYTE PTR [edi+0x2caafd7c]
  414bb0:	mov    esi,DWORD PTR [edx]
  414bb2:	or     ah,BYTE PTR ss:[ebx+0x3373e81]
  414bb9:	loopne 0x414c0d
  414bbb:	clc    
  414bbc:	loop   0x414b46
  414bbe:	mov    al,0xcf
  414bc0:	xchg   ebx,eax
  414bc1:	xor    BYTE PTR [edx+0x32],ah
  414bc4:	je     0x414c11
  414bc6:	mov    ds:0x6bd7c758,eax
  414bcb:	mov    ds:0x512455a,eax
  414bd0:	repz adc al,0xea
  414bd3:	sbb    eax,0x1560bf0f
  414bd8:	jle    0x414ba6
  414bda:	cs push es
  414bdc:	in     al,dx
  414bdd:	dec    eax
  414bde:	sbb    edx,DWORD PTR [ecx+0x963a01f]
  414be4:	lods   al,BYTE PTR ds:[esi]
  414be5:	in     eax,dx
  414be6:	lds    esp,FWORD PTR [esi+0x32]
  414be9:	push   ss
  414bea:	inc    esp
  414beb:	xlat   BYTE PTR ds:[ebx]
  414bec:	xor    al,0xc2
  414bee:	xor    cl,BYTE PTR ss:[ebp+eiz*8-0x64]
  414bf3:	push   ecx
  414bf4:	daa    
  414bf5:	and    ah,BYTE PTR [edi-0x66]
  414bf8:	inc    eax
  414bf9:	mov    bh,0xa2
  414bfb:	popa   
  414bfc:	pop    DWORD PTR [ebx-0x4e]
  414bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c00:	inc    ebx
  414c01:	and    bh,BYTE PTR [eax+0xb]
  414c04:	pop    ecx
  414c05:	adc    BYTE PTR [eax-0x66],bh
  414c08:	xchg   ebp,eax
  414c09:	loope  0x414c16
  414c0b:	push   ecx
  414c0c:	sbb    BYTE PTR [eax+0x76a4ebf1],dh
  414c12:	adc    al,0x73
  414c14:	pop    edi
  414c15:	or     DWORD PTR [edx+0x0],0x6fe4ac60
  414c1c:	lock js 0x414c64
  414c1f:	rcl    BYTE PTR [ecx-0x48ec784a],0xa9
  414c26:	push   edx
  414c27:	dec    esp
  414c28:	jmp    0x414c1b
  414c2a:	into   
  414c2b:	mov    edx,0x85ee9a79
  414c30:	rcl    dl,1
  414c32:	adc    dh,BYTE PTR ds:0xb19475f5
  414c38:	cs loop 0x414c8b
  414c3b:	addr16 aas 
  414c3d:	loope  0x414c47
  414c3f:	adc    BYTE PTR [ecx-0x76],0x65
  414c43:	mov    BYTE PTR [ecx-0x4c],ah
  414c46:	jno    0x414c83
  414c48:	or     cl,0xe8
  414c4b:	lock sbb DWORD PTR [edx+0x5dc93e66],0x28
  414c53:	pop    ss
  414c54:	or     BYTE PTR [edi],bh
  414c56:	xchg   DWORD PTR [ecx],esi
  414c58:	inc    ebx
  414c59:	nop
  414c5a:	ret    0x70b6
  414c5d:	js     0x414be0
  414c5f:	adc    esi,DWORD PTR [ecx+0x71bc1df9]
  414c65:	imul   ecx,esp,0x4981b09e
  414c6b:	pop    eax
  414c6c:	or     ebx,DWORD PTR [esi+0x5539705c]
  414c72:	mov    bh,0x6e
  414c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c75:	or     al,0x40
  414c77:	cmovl  esp,DWORD PTR [ebp+0x1e]
  414c7b:	mov    WORD PTR gs:[ebx],?
  414c7e:	int    0x89
  414c80:	popf   
  414c81:	dec    ecx
  414c82:	push   es
  414c83:	sbb    esp,eax
  414c85:	ds loopne 0x414c37
  414c88:	in     eax,dx
  414c89:	(bad)  
  414c8a:	sub    eax,0x17ba9395
  414c8f:	inc    esp
  414c90:	add    BYTE PTR [ecx],bh
  414c92:	fs cmp al,0xdf
  414c95:	hlt    
  414c96:	fmul   st,st(4)
  414c98:	fbstp  TBYTE PTR [eax+0x10]
  414c9b:	jmp    0x9777:0x6da2ac9b
  414ca2:	mov    bl,0x3a
  414ca4:	and    esp,0xb79d440d
  414caa:	dec    ecx
  414cab:	(bad)  
  414cac:	(bad)  
  414cad:	loope  0x414cd9
  414caf:	rol    DWORD PTR [esi+0xd811e16],0x70
  414cb6:	popf   
  414cb7:	cmp    ecx,edi
  414cb9:	fisttp DWORD PTR [esi+0xa]
  414cbc:	xchg   eax,edx
  414cbe:	adc    DWORD PTR [eax],edx
  414cc0:	arpl   WORD PTR [ebp-0x4ba85339],di
  414cc6:	or     BYTE PTR [eax+0x46],0x24
  414cca:	mov    ch,BYTE PTR [ecx]
  414ccc:	and    ch,BYTE PTR [ebp+0x2f3ed8a4]
  414cd2:	retf   0xbae8
  414cd5:	mov    al,ds:0xc30fd480
  414cda:	add    edi,DWORD PTR [ecx+0x35]
  414cdd:	pop    esi
  414cde:	sti    
  414cdf:	jg     0x414cfe
  414ce1:	mov    ds:0x734b6f88,eax
  414ce6:	cs xor bh,bh
  414ce9:	(bad)  
  414cea:	mov    bh,0x18
  414cec:	dec    eax
  414ced:	ret    
  414cee:	xchg   edx,eax
  414cef:	fmulp  st(0),st
  414cf1:	retf   0xe3cf
  414cf4:	ins    BYTE PTR es:[edi],dx
  414cf5:	shr    ecx,0x9f
  414cf8:	dec    edi
  414cf9:	lods   al,BYTE PTR ds:[esi]
  414cfa:	mov    edx,0x961bc244
  414cff:	sub    BYTE PTR [ebx+0x7911e6ea],dh
  414d05:	or     BYTE PTR [edi+0x26],al
  414d08:	push   edi
  414d09:	shl    DWORD PTR [edx-0x3d],0x6e
  414d0d:	in     eax,dx
  414d0e:	sub    ah,ch
  414d10:	adc    BYTE PTR [esi],ah
  414d12:	mov    ds:0xeb3e27,al
  414d17:	stos   BYTE PTR es:[edi],al
  414d18:	jns    0x414d34
  414d1a:	push   esp
  414d1b:	inc    edx
  414d1c:	test   BYTE PTR [esi],cl
  414d1e:	xchg   BYTE PTR [ecx],al
  414d20:	inc    eax
  414d21:	imul   edi,DWORD PTR [ecx+0x75e67ab6],0x27
  414d28:	out    0xef,al
  414d2a:	repnz mov esp,fs
  414d2d:	out    0x9c,al
  414d2f:	ret    0x87c6
  414d32:	sbb    esp,edx
  414d34:	inc    edx
  414d35:	rcl    DWORD PTR [edx+0x446d812c],cl
  414d3b:	sahf   
  414d3c:	cmp    DWORD PTR [ecx],edi
  414d3e:	or     bl,BYTE PTR [edx]
  414d40:	(bad)  
  414d41:	aad    0x7d
  414d43:	add    bl,cl
  414d45:	pusha  
  414d46:	jmp    0x414d73
  414d48:	or     dh,dl
  414d4a:	mov    al,0x62
  414d4c:	sahf   
  414d4d:	cld    
  414d4e:	(bad)  
  414d4f:	in     eax,dx
  414d50:	push   eax
  414d51:	cmp    BYTE PTR [ecx],dh
  414d53:	sub    bl,dh
  414d55:	adc    bl,cl
  414d57:	mov    bh,0x52
  414d59:	mov    ecx,0x9f018ab9
  414d5e:	shl    DWORD PTR [ecx+0x20],cl
  414d61:	cmp    dl,cl
  414d63:	push   esi
  414d64:	dec    esi
  414d65:	ret    0xa625
  414d68:	sbb    DWORD PTR [ebp+0x4dbe49a2],esi
  414d6e:	or     edi,edx
  414d70:	jb     0x414dca
  414d72:	ret    
  414d73:	jl     0x414d58
  414d75:	int3   
  414d76:	mov    ebp,0x2d62e293
  414d7b:	mov    bl,0x14
  414d7d:	inc    ebp
  414d7e:	mov    dl,0x44
  414d80:	adc    DWORD PTR [esi+0xd],ebx
  414d83:	jnp    0x414d36
  414d85:	jb     0x414d5d
  414d87:	mov    eax,ds:0x9b537f9e
  414d8c:	xchg   ecx,eax
  414d8d:	inc    ebp
  414d8e:	in     al,0x56
  414d90:	sub    BYTE PTR [ebp-0x7a],al
  414d93:	pop    ebp
  414d94:	pop    ecx
  414d95:	lea    edx,[ebx-0x6b]
  414d98:	lods   eax,DWORD PTR ds:[esi]
  414d99:	mov    WORD PTR [ebx],gs
  414d9b:	add    al,0x33
  414d9d:	jp     0x414d6b
  414d9f:	sbb    dh,BYTE PTR [edx+0x29]
  414da2:	xchg   edx,eax
  414da3:	or     BYTE PTR [esi+0x3f],cl
  414da6:	or     BYTE PTR [edi],0x2d
  414da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dab:	sbb    ecx,DWORD PTR [ebx]
  414dad:	loop   0x414e23
  414daf:	and    DWORD PTR [edx+0xd],esp
  414db2:	adc    al,0x8e
  414db4:	mov    di,WORD PTR [esp+eiz*2-0x1fdb881c]
  414dbc:	sti    
  414dbd:	je     0x414dd0
  414dbf:	add    DWORD PTR [ecx],0x94209899
  414dc5:	dec    eax
  414dc6:	and    DWORD PTR [ebx+0x3a],ebx
  414dc9:	and    DWORD PTR [esi+esi*2+0x58],ecx
  414dcd:	loope  0x414dae
  414dcf:	out    dx,al
  414dd0:	leave  
  414dd1:	sub    DWORD PTR [ebx],edi
  414dd3:	push   esi
  414dd4:	xor    DWORD PTR [edi+0x6d],eax
  414dd7:	mov    eax,ds:0x82078889
  414ddc:	std    
  414ddd:	xor    BYTE PTR ds:[eax-0xe],cl
  414de1:	jg     0x414dda
  414de3:	mov    al,0xb8
  414de5:	stc    
  414de6:	inc    esi
  414de7:	pop    es
  414de8:	cwde   
  414de9:	fld    QWORD PTR [eax+0x123115ab]
  414def:	push   0xffffffdf
  414df1:	ret    
  414df2:	cli    
  414df3:	jns    0x414e0e
  414df5:	int3   
  414df6:	sar    ecx,0x4b
  414df9:	or     BYTE PTR [edx-0xa22621e],dh
  414dff:	mov    bh,0x46
  414e01:	inc    ebx
  414e02:	cmp    al,0xec
  414e04:	test   DWORD PTR [esi+0x59beb3cd],esi
  414e0a:	and    DWORD PTR [edi+0x68],esp
  414e0d:	or     bh,ch
  414e0f:	addr16 or eax,0x23136e0e
  414e15:	fsub   DWORD PTR [ebp-0x79]
  414e18:	xchg   edi,eax
  414e19:	sar    BYTE PTR ds:0x51a657d0,0xfb
  414e20:	icebp  
  414e21:	cmp    edi,esp
  414e23:	loope  0x414e64
  414e25:	lods   eax,DWORD PTR ds:[esi]
  414e26:	pop    ds
  414e27:	rol    eax,cl
  414e29:	push   cs
  414e2a:	push   eax
  414e2b:	inc    eax
  414e2c:	xchg   esi,eax
  414e2d:	push   ecx
  414e2e:	inc    ebx
  414e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e30:	aad    0xa4
  414e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e33:	sti    
  414e34:	out    0xe,al
  414e36:	xor    BYTE PTR [ebp+0x7cec5b7a],ah
  414e3c:	push   esi
  414e3d:	mov    ch,0x57
  414e3f:	cmp    BYTE PTR [edx-0x58],0x39
  414e43:	test   eax,0xbd96775f
  414e48:	inc    edx
  414e49:	inc    edx
  414e4a:	lock gs in eax,dx
  414e4d:	sub    bl,BYTE PTR [eax-0x41]
  414e50:	push   esp
  414e51:	rcr    ah,0xa2
  414e54:	pop    ecx
  414e55:	add    ah,BYTE PTR [edx-0x637a92f5]
  414e5b:	add    BYTE PTR [edi+0x48c97592],bl
  414e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e62:	pushf  
  414e63:	stc    
  414e64:	shl    BYTE PTR [edx-0x7e9001c8],cl
  414e6a:	jp     0x94db7abd
  414e70:	fsubr  QWORD PTR [edx+0x6d]
  414e73:	sbb    DWORD PTR [edi+0x74],ecx
  414e76:	sub    DWORD PTR [ebx+0x67f88b08],0x27
  414e7d:	fwait
  414e7e:	sub    BYTE PTR [edx],ch
  414e80:	fnstenv [ebx-0x7a]
  414e83:	mov    edi,0xed8c569b
  414e88:	mov    esi,0x8c5b8308
  414e8d:	ficom  WORD PTR [edx]
  414e8f:	cld    
  414e90:	js     0x414ed5
  414e92:	sbb    eax,0x49fe274f
  414e97:	xchg   ebp,eax
  414e98:	adc    edi,ebx
  414e9a:	push   ds
  414e9b:	cmc    
  414e9c:	adc    DWORD PTR [edx-0x6d],0xe09dd401
  414ea3:	icebp  
  414ea4:	(bad)  
  414ea5:	push   ds
  414ea6:	cmp    ah,BYTE PTR [edi]
  414ea8:	sub    DWORD PTR [edi+0x67],esi
  414eab:	dec    esi
  414eac:	mov    DWORD PTR [ebx],edx
  414eae:	mov    BYTE PTR [ebx-0x22d4f849],bl
  414eb4:	add    BYTE PTR [eax],bl
  414eb6:	test   DWORD PTR ds:0x80c7eb87,esp
  414ebc:	adc    BYTE PTR [edi],cl
  414ebe:	jb     0x414e8e
  414ec0:	pop    esp
  414ec2:	push   ss
  414ec3:	rsm    
  414ec5:	push   ecx
  414ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec7:	mov    eax,ds:0xe5017336
  414ecc:	or     edx,DWORD PTR [edi]
  414ece:	or     esp,DWORD PTR [esi]
  414ed0:	push   esp
  414ed1:	ficomp DWORD PTR [ebx]
  414ed3:	push   esi
  414ed4:	adc    ebp,ecx
  414ed6:	or     ebx,edi
  414ed8:	out    dx,eax
  414ed9:	ret    
  414eda:	bswap  esp
  414edc:	in     al,0x56
  414ede:	adc    edx,DWORD PTR [edi+0x62]
  414ee1:	and    al,dl
  414ee3:	pop    ecx
  414ee4:	test   eax,0xd559b9e8
  414ee9:	cwde   
  414eea:	les    edx,FWORD PTR ds:0xd0344d02
  414ef0:	ror    DWORD PTR [esi+eiz*4-0x46],cl
  414ef4:	popf   
  414ef5:	pop    edi
  414ef6:	inc    eax
  414ef7:	inc    ecx
  414ef8:	loope  0x414f61
  414efa:	cmc    
  414efb:	push   es
  414efc:	sahf   
  414efd:	dec    ebp
  414efe:	cli    
  414eff:	add    al,0x57
  414f01:	and    WORD PTR [edi-0x27],0xff7a
  414f07:	(bad)  
  414f09:	lock ins DWORD PTR es:[edi],dx
  414f0b:	mov    esp,gs
  414f0d:	clc    
  414f0e:	jmp    0x4648cf23
  414f13:	scas   eax,DWORD PTR es:[edi]
  414f14:	std    
  414f15:	mov    eax,ds:0xa542cef3
  414f1a:	xchg   edi,eax
  414f1b:	xchg   edi,eax
  414f1c:	xchg   BYTE PTR [ebx-0x52],dh
  414f1f:	xchg   esp,eax
  414f20:	imul   DWORD PTR [edi+0x2]
  414f23:	push   esp
  414f24:	mov    dl,0x87
  414f26:	pop    edx
  414f27:	stc    
  414f28:	ss xor ebp,edi
  414f2b:	xor    al,0xc4
  414f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f2e:	rcl    BYTE PTR [edx+edx*8],cl
  414f31:	jo     0x414f20
  414f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f34:	mov    cl,0x9f
  414f36:	(bad)  
  414f38:	fldcw  WORD PTR [esi+0x6d56aa1d]
  414f3e:	ss das 
  414f40:	push   edx
  414f41:	jnp    0x414ee7
  414f43:	test   al,0x74
  414f45:	mov    BYTE PTR [eax-0x6c8799d4],bh
  414f4b:	sar    ah,1
  414f4d:	jne    0x414ef5
  414f4f:	push   0xffffff8d
  414f51:	push   esi
  414f52:	xor    al,0x3f
  414f54:	mov    al,0xb
  414f56:	or     al,0x74
  414f58:	dec    ecx
  414f59:	push   ebp
  414f5a:	mov    dh,0xf8
  414f5c:	xchg   edi,eax
  414f5d:	cli    
  414f5e:	retf   
  414f5f:	push   ebx
  414f60:	sbb    cl,BYTE PTR [ebp+0x3b]
  414f63:	test   al,0x2b
  414f65:	call   0x2c20d4af
  414f6a:	xor    al,0x89
  414f6c:	pop    ecx
  414f6d:	sti    
  414f6e:	mov    DWORD PTR [edi-0x467a1164],esp
  414f74:	push   ds
  414f75:	retf   0xdeff
  414f78:	push   es
  414f79:	mov    eax,ds:0x409a704c
  414f7e:	push   ss
  414f7f:	into   
  414f80:	sbb    DWORD PTR [esi+0x4caaa579],ebp
  414f86:	pop    eax
  414f87:	add    eax,0xee3bbf09
  414f8c:	mov    ah,0x36
  414f8e:	inc    ecx
  414f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f90:	xchg   BYTE PTR [edx+0x46650992],cl
  414f96:	cmp    DWORD PTR [esi+edx*4+0x65bda743],ecx
  414f9d:	mov    eax,ds:0x863ac69b
  414fa2:	mov    eax,0x8ed9af0a
  414fa7:	in     al,dx
  414fa8:	push   cs
  414fa9:	outs   dx,DWORD PTR ds:[esi]
  414faa:	pop    esp
  414fab:	sti    
  414fac:	xchg   edx,eax
  414fad:	pop    ecx
  414fae:	retf   
  414faf:	ret    
  414fb0:	mov    ebp,0x1cb7023
  414fb5:	out    dx,eax
  414fb6:	out    0xea,eax
  414fb8:	dec    ebx
  414fb9:	push   ecx
  414fba:	out    dx,al
  414fbb:	loopne 0x414f8e
  414fbd:	jmp    0xc81b:0x22543041
  414fc4:	pop    ebx
  414fc5:	xor    DWORD PTR [ebp+0x7939adc8],edx
  414fcb:	push   ebx
  414fcc:	cld    
  414fcd:	mov    dh,0xf2
  414fcf:	ins    BYTE PTR es:[edi],dx
  414fd0:	cmp    dh,BYTE PTR [ecx+0x2f]
  414fd3:	dec    ecx
  414fd4:	iret   
  414fd5:	mov    esp,0xe76d54d0
  414fda:	xor    DWORD PTR [eax],ebp
  414fdc:	rcr    DWORD PTR [esi],0x43
  414fdf:	stos   BYTE PTR es:[edi],al
  414fe0:	out    dx,eax
  414fe1:	sub    esp,DWORD PTR [edx-0x1d303ac3]
  414fe7:	inc    esp
  414fe8:	dec    edi
  414fe9:	mov    dh,0x4e
  414feb:	mov    ebp,0x5b08d335
  414ff0:	int    0xa1
  414ff2:	(bad)  
  414ff3:	cli    
  414ff4:	mov    WORD PTR [eax+edx*2-0x65],es
  414ff8:	sti    
  414ff9:	in     eax,dx
  414ffa:	ds mov ah,0xf3
  414ffd:	clc    
  414ffe:	gs jmp 0x4d85:0x2bf109a9
  415006:	aas    
  415007:	mov    ah,0xf7
  415009:	inc    edx
  41500a:	cmp    ebx,DWORD PTR [eax+edx*1]
  41500d:	ret    0x787b
  415010:	pop    eax
  415011:	lock cmp al,0xa7
  415014:	sti    
  415015:	ret    0xc42b
  415018:	xchg   edx,eax
  415019:	ins    DWORD PTR es:[edi],dx
  41501a:	pop    ecx
  41501b:	or     al,0x7f
  41501d:	cmp    DWORD PTR [ecx],ebx
  41501f:	and    al,0xc5
  415021:	pop    eax
  415022:	lahf   
  415023:	pop    edx
  415024:	repz call 0x3e286b27
  41502a:	inc    ecx
  41502b:	pop    es
  41502c:	inc    ebx
  41502d:	test   BYTE PTR [ebx],bl
  41502f:	mov    ds:0x96762d49,eax
  415034:	and    BYTE PTR [ebx-0x55],dl
  415037:	lock pop es
  415039:	(bad)  
  41503b:	ins    DWORD PTR es:[edi],dx
  41503c:	and    DWORD PTR ds:0xa95c5a4a,edx
  415042:	rcl    BYTE PTR [eax+0x7c3a9e3e],1
  415048:	xchg   ebp,eax
  415049:	outs   dx,BYTE PTR ds:[esi]
  41504a:	das    
  41504b:	add    eax,0xbe4c1ea0
  415050:	js     0x41502f
  415052:	in     eax,dx
  415053:	jae    0x414fea
  415055:	mov    esp,0x863fcd84
  41505a:	repz cli 
  41505c:	retf   0xb0a1
  41505f:	mov    ch,0x39
  415061:	repnz leave 
  415063:	sbb    ebx,edi
  415065:	call   0x3a4d:0x908a7613
  41506c:	adc    BYTE PTR [edx-0x6f353279],bl
  415072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415073:	rol    DWORD PTR [esi],1
  415075:	dec    ecx
  415076:	fsubr  QWORD PTR [ecx-0x158a9781]
  41507c:	add    al,0xaf
  41507e:	jae    0x4150f2
  415080:	inc    edx
  415081:	imul   esi,DWORD PTR [ecx+edi*1-0x62d4073],0x3bddca99
  41508c:	add    edx,esp
  41508e:	arpl   di,di
  415090:	jmp    0x63ac6eb2
  415095:	pusha  
  415096:	jecxz  0x41510b
  415098:	int    0x8f
  41509a:	(bad)
  41509e:	or     al,0xf2
  4150a0:	jge    0x415078
  4150a2:	xor    eax,0x64ac5962
  4150a7:	inc    ebp
  4150a8:	nop
  4150a9:	cmp    DWORD PTR [esi-0x5414c7de],ebp
  4150af:	cmp    BYTE PTR [esi],ch
  4150b1:	out    0x5c,eax
  4150b3:	sbb    BYTE PTR [esi],bh
  4150b5:	test   DWORD PTR [edi+esi*4-0x213ea0f],edx
  4150bc:	in     eax,0x90
  4150be:	push   ebp
  4150bf:	pop    esp
  4150c0:	fst    QWORD PTR [ebx]
  4150c2:	pop    esi
  4150c3:	mov    eax,0xc1ff8c02
  4150c8:	cmp    DWORD PTR [esi+ecx*2+0x49d7d547],edi
  4150cf:	daa    
  4150d0:	icebp  
  4150d1:	pop    esp
  4150d2:	cmp    eax,DWORD PTR [ebx+0x37]
  4150d5:	ins    BYTE PTR es:[edi],dx
  4150d6:	jne    0x4150b7
  4150d8:	loopne 0x415083
  4150da:	push   ebx
  4150db:	addr16 aas 
  4150dd:	mov    ds:0x82282336,al
  4150e2:	mov    ds:0x8fedbebc,eax
  4150e7:	xchg   esi,eax
  4150e8:	cmp    BYTE PTR [edx+0x6e2843e7],bl
  4150ee:	mov    ss,WORD PTR [ebx-0x45]
  4150f1:	dec    edx
  4150f2:	push   0xffffffaa
  4150f4:	inc    ebp
  4150f5:	jge    0x41511d
  4150f7:	stos   BYTE PTR es:[edi],al
  4150f8:	cmp    al,BYTE PTR [edx+0x3c6605fb]
  4150fe:	mov    ebp,0x489c4609
  415103:	xor    eax,0xc260deab
  415108:	mov    ecx,0x8000cd
  41510d:	daa    
  41510e:	mov    bl,0x17
  415110:	not    BYTE PTR [ebx]
  415112:	lods   al,BYTE PTR ds:[esi]
  415113:	dec    edi
  415114:	and    eax,0xd9a9bb9d
  415119:	or     bl,bh
  41511b:	sub    DWORD PTR [ebp-0x47],ecx
  41511e:	gs scas al,BYTE PTR es:[edi]
  415120:	pop    es
  415121:	sub    al,0x52
  415123:	lock bound eax,QWORD PTR [edx+esi*4]
  415127:	lock es call 0x3709:0xbc146d49
  415130:	(bad)  
  415131:	lods   eax,DWORD PTR ds:[esi]
  415132:	sbb    al,0x93
  415134:	pop    es
  415135:	adc    BYTE PTR [eax-0x59f8a634],ah
  41513b:	jmp    0xe76f241c
  415140:	sub    BYTE PTR [ebp+ebx*4-0x6aafe0f5],bl
  415147:	or     ah,BYTE PTR [ebx]
  415149:	push   ss
  41514a:	shr    DWORD PTR [ebp-0x22],0x92
  41514e:	push   eax
  41514f:	or     bh,bl
  415151:	aad    0xc5
  415153:	stc    
  415154:	test   BYTE PTR [edi+0x331f3856],cl
  41515a:	jne    0x4150e6
  41515c:	cwde   
  41515d:	rcr    DWORD PTR [eax*2+0x8841185],0x47
  415165:	jge    0x41512f
  415167:	sbb    BYTE PTR [edx+0x4d179383],cl
  41516d:	ret    0xd13d
  415170:	test   BYTE PTR [eax],ch
  415172:	add    DWORD PTR [esi],edx
  415174:	inc    esi
  415175:	ds and eax,0xa64e7b8e
  41517b:	mov    gs:0xb55a1b0a,eax
  415181:	aad    0x3e
  415183:	fst    QWORD PTR [edx]
  415185:	xchg   ah,bh
  415187:	pop    ds
  415188:	in     al,0xac
  41518a:	mov    esi,DWORD PTR [edx-0x15]
  41518d:	data16 ins BYTE PTR es:[edi],dx
  41518f:	data16 sub ch,BYTE PTR [eax]
  415192:	sahf   
  415193:	pop    esi
  415194:	mov    BYTE PTR [ebp+ecx*4+0x4d8d1726],dh
  41519b:	adc    edx,esi
  41519d:	mov    bl,0x63
  41519f:	pop    edx
  4151a0:	mov    ecx,0xeb2f2377
  4151a5:	sub    BYTE PTR [edx-0x58],al
  4151a8:	ja     0x4151f5
  4151aa:	xchg   edi,eax
  4151ab:	add    al,0x51
  4151ad:	retf   
  4151ae:	and    edi,DWORD PTR [esi-0x31]
  4151b1:	pop    edi
  4151b2:	and    ebp,DWORD PTR [ebp+0x62]
  4151b5:	fwait
  4151b6:	pop    ds
  4151b7:	sahf   
  4151b8:	pminsw mm2,mm0
  4151bb:	and    BYTE PTR [edi],0x2c
  4151be:	pop    ecx
  4151bf:	pop    eax
  4151c0:	mov    DWORD PTR [ecx-0x2a],esi
  4151c3:	ds sbb ebp,esi
  4151c6:	adc    bh,ch
  4151c8:	sbb    ebp,ebx
  4151ca:	inc    ebp
  4151cb:	jg     0x415199
  4151cd:	stos   DWORD PTR es:[edi],eax
  4151ce:	test   BYTE PTR [edx+0x14],0x41
  4151d2:	add    bh,ch
  4151d4:	arpl   WORD PTR [ebx-0x3a],bp
  4151d7:	mov    ebx,0xb47ae0e1
  4151dc:	fmul   DWORD PTR ds:0x41dd7221
  4151e2:	sbb    BYTE PTR [ebp+0x77],al
  4151e5:	or     DWORD PTR [edx+edi*4-0x33],0xffffffe0
  4151ea:	lods   al,BYTE PTR ds:[esi]
  4151eb:	fsub   DWORD PTR [edi+esi*4]
  4151ee:	jmp    0x7311:0x8212b622
  4151f5:	inc    esp
  4151f6:	mov    eax,0x1b8bd6c3
  4151fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151fc:	fdiv   QWORD PTR [ebp-0xb]
  4151ff:	xchg   esp,eax
  415200:	inc    ebp
  415201:	and    dl,bl
  415203:	int3   
  415204:	pop    ebx
  415205:	jbe    0x41519a
  415207:	inc    edi
  415208:	cli    
  415209:	ds std 
  41520b:	cmp    al,0x60
  41520d:	jno    0x4151bb
  41520f:	jge    0x41523d
  415211:	pop    ds
  415212:	adc    DWORD PTR [ecx-0x1f665a62],0x5e
  415219:	lock loop 0x4151e8
  41521c:	rcl    DWORD PTR [ebx+0xd9a670d],1
  415222:	push   edx
  415223:	data16 je 0x4151c6
  415226:	jmp    0xb2e9:0x73c44f33
  41522d:	stos   BYTE PTR es:[edi],al
  41522e:	push   cs
  41522f:	pusha  
  415230:	sub    ecx,eax
  415232:	dec    ebx
  415233:	mov    bh,0xe7
  415235:	jb     0x4151c1
  415237:	push   ecx
  415238:	imul   ebp,edx,0xffffff81
  41523b:	mov    ebp,DWORD PTR [ebp-0x1c]
  41523e:	dec    esp
  41523f:	cmp    al,bh
  415241:	dec    esi
  415242:	pop    DWORD PTR [edx+0x6482c860]
  415248:	jno    0x415261
  41524a:	and    al,0x38
  41524c:	xor    ebx,edx
  41524e:	xor    eax,DWORD PTR [edx-0x51eae75c]
  415254:	push   esp
  415255:	shl    DWORD PTR [edx-0x43e7e72f],1
  41525b:	sub    ebp,esi
  41525d:	sahf   
  41525e:	sbb    edx,DWORD PTR [edi+0x5043d410]
  415264:	pushf  
  415265:	stos   BYTE PTR es:[edi],al
  415266:	sub    esp,ecx
  415268:	cmc    
  415269:	mov    eax,?
  41526b:	dec    edi
  41526c:	mov    cl,0xd3
  41526e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41526f:	cmp    al,0x36
  415271:	sbb    BYTE PTR [esi+0xf],bh
  415274:	push   edx
  415275:	pop    ecx
  415276:	mov    ds:0x25f33506,eax
  41527b:	(bad)  
  41527c:	jo     0x4152f1
  41527e:	imul   esi,DWORD PTR [ecx]
  415281:	jne    0x41528a
  415283:	adc    esp,ebp
  415285:	cmp    DWORD PTR [esp+edx*8],esi
  415288:	xor    dh,BYTE PTR [eax-0x7a]
  41528b:	leave  
  41528c:	push   ebp
  41528d:	mov    ebx,DWORD PTR [ecx+edx*8]
  415290:	ret    0x55ad
  415293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415294:	pop    ebp
  415295:	adc    ah,dl
  415297:	xchg   BYTE PTR [edx+ecx*2],cl
  41529a:	pop    esp
  41529b:	sub    ebx,DWORD PTR [edi+0x7b14ab72]
  4152a1:	jno    0x415309
  4152a3:	adc    al,0x33
  4152a5:	add    bh,dh
  4152a7:	lods   al,BYTE PTR ds:[esi]
  4152a8:	sbb    cl,BYTE PTR [ebp-0x227baf27]
  4152ae:	leave  
  4152af:	or     al,0xdb
  4152b1:	arpl   WORD PTR [ecx+0x3c4eb9c3],dx
  4152b7:	or     edi,eax
  4152b9:	out    dx,eax
  4152ba:	mov    dl,0x6a
  4152bc:	pop    ds
  4152bd:	push   esp
  4152be:	and    ebx,DWORD PTR ss:0x6558c1b2
  4152c5:	jmp    0x415329
  4152c7:	sub    eax,0x3f2e0be8
  4152cc:	ret    0xb14e
  4152cf:	xlat   BYTE PTR ds:[ebx]
  4152d0:	and    eax,0xbad77267
  4152d5:	sbb    edx,DWORD PTR [ebx]
  4152d7:	pop    ecx
  4152d8:	and    al,0xd4
  4152da:	pusha  
  4152db:	push   ebx
  4152dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152dd:	mov    cl,0xb6
  4152df:	loope  0x41528d
  4152e1:	out    0x8a,eax
  4152e3:	xchg   edi,eax
  4152e4:	ret    0xbe66
  4152e7:	fcmovu st,st(7)
  4152e9:	mov    ds:0x7c489ab1,eax
  4152ee:	packsswb mm4,mm7
  4152f1:	iret   
  4152f2:	sahf   
  4152f3:	push   0x1e278c66
  4152f8:	pop    ebp
  4152f9:	sahf   
  4152fa:	lock outs dx,BYTE PTR ds:[esi]
  4152fc:	xchg   edx,eax
  4152fd:	adc    DWORD PTR [edi+0x39],0x71
  415301:	jmp    0x6bfc:0xae1d3037
  415308:	pusha  
  415309:	pop    ss
  41530a:	cmp    al,0x49
  41530c:	xor    edx,DWORD PTR [ebx-0x7233cec5]
  415312:	xchg   ecx,eax
  415313:	int3   
  415314:	adc    eax,0xef858cd3
  415319:	mov    ch,0x2c
  41531b:	hlt    
  41531c:	cmp    al,0x31
  41531e:	adc    DWORD PTR [eax+0x258a33af],ebp
  415324:	xchg   ebp,eax
  415325:	pop    esi
  415326:	hlt    
  415327:	loop   0x41535e
  415329:	mov    esi,0xd54cc617
  41532e:	out    0xb4,eax
  415330:	sbb    al,0x3d
  415332:	stc    
  415333:	test   DWORD PTR [ecx-0x2b604979],ecx
  415339:	dec    ebp
  41533a:	jnp    0x4152f6
  41533c:	mov    eax,0xed54b4b7
  415341:	xor    eax,0xe810da7f
  415346:	es jl  0x415362
  415349:	push   ebp
  41534a:	and    esp,DWORD PTR [ebp-0x20]
  41534d:	aam    0xf2
  41534f:	call   0x4f72a800
  415354:	push   es
  415355:	and    ah,ah
  415357:	into   
  415358:	inc    BYTE PTR [edi]
  41535a:	mov    esi,0xd81a3642
  41535f:	and    al,0x47
  415361:	pop    edi
  415362:	mov    ebx,0x2cf96192
  415367:	push   cs
  415368:	cld    
  415369:	daa    
  41536a:	fwait
  41536b:	adc    BYTE PTR [ecx+edi*1],dl
  41536e:	jmp    0x9172f952
  415373:	int    0x97
  415375:	retf   0xbe92
  415378:	or     DWORD PTR [ecx],0xffffff9d
  41537b:	add    al,ah
  41537d:	fidiv  WORD PTR [ecx]
  41537f:	mov    ds:0xefce58af,eax
  415384:	pusha  
  415385:	push   ds
  415386:	xor    BYTE PTR [eax],bh
  415388:	mov    ch,0x2e
  41538a:	retf   0xdff3
  41538d:	fsub   DWORD PTR [ecx+0x21]
  415390:	adc    ah,BYTE PTR [ecx+ebx*4]
  415393:	xchg   ecx,eax
  415394:	or     BYTE PTR [edx+eax*8],0xcb
  415398:	mov    ch,0xfe
  41539a:	push   ss
  41539b:	ror    DWORD PTR [eax+ecx*1+0x45],1
  41539f:	pop    eax
  4153a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153a1:	sbb    al,0x35
  4153a3:	mov    al,ds:0x7fedc5ec
  4153a8:	enter  0x5198,0xc9
  4153ac:	int    0x50
  4153ae:	aas    
  4153af:	adc    al,0x2a
  4153b1:	cmp    al,0x9d
  4153b3:	js     0x41533f
  4153b5:	ror    DWORD PTR ds:0x1f6ab29a,cl
  4153bb:	push   edi
  4153bc:	sahf   
  4153bd:	mov    ch,0xc8
  4153bf:	mov    esp,0x942fffe6
  4153c4:	aad    0x1d
  4153c6:	push   edi
  4153c7:	stc    
  4153c8:	leave  
  4153c9:	jb     0x415376
  4153cb:	es (bad) 
  4153cd:	sbb    BYTE PTR [edx+0x7e7f3533],bl
  4153d3:	cmp    eax,0xd14fbdd2
  4153d8:	int    0xbc
  4153da:	jmp    0x6101:0x37519468
  4153e1:	xchg   ebx,eax
  4153e3:	dec    ecx
  4153e4:	(bad)  
  4153e5:	lock adc ebx,DWORD PTR [eax]
  4153e8:	and    al,0xb6
  4153ea:	test   eax,0x4581f406
  4153ef:	daa    
  4153f0:	and    al,0xae
  4153f2:	test   DWORD PTR [esi+edi*4],eax
  4153f5:	add    edi,DWORD PTR [edx-0x48d1f118]
  4153fb:	dec    ecx
  4153fc:	cdq    
  4153fd:	dec    ecx
  4153fe:	inc    esi
  4153ff:	mov    ecx,0xe215440e
  415404:	js     0x415444
  415406:	lea    eax,[edi+ebp*2]
  415409:	loop   0x415472
  41540b:	xor    DWORD PTR [edi+0x61c6b79e],esp
  415411:	fild   WORD PTR [ebp-0x7f]
  415414:	fdiv   QWORD PTR [ecx-0x461bcb9a]
  41541a:	mov    dh,0xb4
  41541c:	xor    cl,BYTE PTR [edx]
  41541e:	jmp    0x29e1bf78
  415423:	xor    eax,eax
  415425:	rcr    eax,1
  415427:	add    esp,ebp
  415429:	push   0x7651e8f8
  41542e:	test   al,0xa
  415430:	data16 sbb al,0x4e
  415433:	aas    
  415434:	aaa    
  415435:	push   cs
  415436:	inc    edi
  415437:	jae    0x415457
  415439:	inc    esi
  41543a:	fisttp WORD PTR [eax+0x7a]
  41543d:	sub    esi,ebp
  41543f:	pusha  
  415440:	leave  
  415441:	rol    BYTE PTR [ebp-0xafd17b],0x28
  415448:	popf   
  415449:	shl    DWORD PTR [ecx],1
  41544b:	dec    ebp
  41544c:	es test al,0x4
  41544f:	pushf  
  415450:	inc    BYTE PTR [edi-0x1e]
  415453:	les    ebx,FWORD PTR [eax+0x5c846f20]
  415459:	fwait
  41545a:	mov    WORD PTR es:[ecx],ds
  41545d:	jmp    0x912db1ca
  415462:	sub    bl,0x5b
  415465:	popf   
  415466:	(bad)  
  415467:	std    
  415468:	cmp    al,0xee
  41546a:	adc    BYTE PTR [ecx-0x59361bf8],0xe4
  415471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415472:	mov    ecx,0x929c6bd9
  415477:	xchg   ebp,eax
  415478:	jno    0x415414
  41547a:	xor    cl,BYTE PTR [ebp-0x401f42e9]
  415480:	inc    eax
  415481:	mov    WORD PTR [edx+0x1a09fd80],?
  415487:	mov    edi,0x188990d3
  41548d:	mov    ds:0x64a0ebc,eax
  415492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415493:	or     DWORD PTR [ebx],esi
  415495:	shl    DWORD PTR [eax-0x41],1
  415498:	mov    ?,WORD PTR fs:[edx]
  41549b:	jg     0x415480
  41549d:	data16 jg 0x415501
  4154a0:	add    ebx,DWORD PTR [edi-0x1ab91e03]
  4154a6:	retf   0xe263
  4154a9:	rol    BYTE PTR [edx-0x28],cl
  4154ac:	shl    ebx,cl
  4154ae:	mov    ecx,0xdc58101d
  4154b3:	cwde   
  4154b4:	call   0x9c203cd3
  4154b9:	icebp  
  4154ba:	pop    es
  4154bb:	add    BYTE PTR [ebp+0x3a671276],0x50
  4154c2:	call   0x486b915d
  4154c7:	div    ch
  4154c9:	add    al,BYTE PTR [esp+ebp*1]
  4154cc:	sub    esp,DWORD PTR [ebp-0x7e]
  4154cf:	test   DWORD PTR [edi+edx*8-0x48],edi
  4154d3:	nop
  4154d4:	adc    bh,al
  4154d6:	pop    ss
  4154d7:	sahf   
  4154d8:	xor    edi,DWORD PTR [esi-0xd]
  4154db:	jbe    0x41549f
  4154dd:	jge    0x415489
  4154df:	mov    al,bl
  4154e1:	pusha  
  4154e2:	sbb    eax,0xa31bc462
  4154e7:	ds push ebp
  4154e9:	scas   al,BYTE PTR es:[edi]
  4154ea:	test   BYTE PTR ds:0x6beb1199,ah
  4154f0:	fst    st(0)
  4154f2:	mov    ebx,0x6e6e6f56
  4154f7:	popf   
  4154f8:	pop    es
  4154f9:	cmp    eax,0x41bcb45b
  4154fe:	and    al,0xa4
  415500:	pop    eax
  415501:	push   ss
  415502:	outs   dx,DWORD PTR ds:[esi]
  415503:	fisttp QWORD PTR [esi-0x7475456e]
  415509:	ja     0x415528
  41550b:	cmp    al,0x7a
  41550d:	cmp    ebp,esi
  41550f:	mov    eax,0x5bb23eeb
  415514:	and    eax,0xd070a7eb
  415519:	sar    ebx,0xf5
  41551c:	xlat   BYTE PTR ds:[ebx]
  41551d:	in     eax,0xca
  41551f:	loop   0x4154e2
  415521:	aas    
  415522:	mov    ?,WORD PTR [edi+0x7bea645]
  415528:	jp     0x415501
  41552a:	push   esp
  41552b:	dec    ebp
  41552c:	retf   
  41552d:	jp     0x415501
  41552f:	or     ebp,esp
  415531:	popa   
  415532:	xor    al,0xb3
  415534:	jmp    0x41558f
  415536:	inc    eax
  415537:	push   0x2b
  415539:	test   DWORD PTR [edi+0x5b],edx
  41553c:	mov    bl,0xf2
  41553e:	cmp    ecx,DWORD PTR [ebx+0x5]
  415541:	push   es
  415542:	daa    
  415543:	jge    0x4155af
  415545:	inc    esi
  415546:	rcr    DWORD PTR [edi-0x1],0xe1
  41554a:	sbb    dh,BYTE PTR [esi+0x55]
  41554d:	in     eax,0xc2
  41554f:	aaa    
  415550:	jle    0x4155d1
  415552:	or     eax,DWORD PTR [edi+0xc017081]
  415558:	sbb    edi,esp
  41555a:	jge    0x415597
  41555c:	test   DWORD PTR [esi],esi
  41555e:	leave  
  41555f:	iret   
  415560:	inc    ecx
  415561:	fild   QWORD PTR [ebx-0x48]
  415564:	push   esp
  415565:	scas   al,BYTE PTR es:[edi]
  415566:	pop    ecx
  415567:	mov    al,0x1f
  415569:	xor    BYTE PTR [edx-0x3f],al
  41556c:	pop    edx
  41556d:	pop    es
  41556e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41556f:	(bad)  
  415571:	jo     0x4155e7
  415573:	sbb    al,0xf7
  415575:	or     BYTE PTR [edi+0x5142b86b],ah
  41557b:	das    
  41557c:	push   cs
  41557d:	jle    0x4155f3
  41557f:	mov    edx,0xf5927e86
  415584:	inc    ebp
  415585:	arpl   WORD PTR [eax+0x69974c06],ax
  41558b:	rol    BYTE PTR [edx-0x6b],1
  41558e:	pop    ds
  41558f:	xor    ebx,DWORD PTR [ecx]
  415591:	dec    ecx
  415592:	add    ebp,ecx
  415594:	and    esp,DWORD PTR [ebx]
  415596:	cli    
  415597:	pop    edx
  415598:	add    esi,DWORD PTR [edx+0x336ebc0e]
  41559e:	clc    
  41559f:	loope  0x415548
  4155a1:	sbb    al,0x5e
  4155a3:	add    eax,0x2a379e69
  4155a8:	mov    ss,WORD PTR [ecx]
  4155aa:	xchg   esi,eax
  4155ab:	push   es
  4155ac:	out    dx,al
  4155ad:	aad    0x37
  4155af:	push   edi
  4155b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155b1:	lock in eax,0x91
  4155b4:	jle    0x4155b2
  4155b6:	jno    0x415563
  4155b8:	jne    0x4155bd
  4155ba:	fsubr  DWORD PTR [ecx]
  4155bc:	inc    ebp
  4155bd:	aaa    
  4155be:	xchg   esi,eax
  4155bf:	and    eax,0xe542ae58
  4155c4:	dec    ebx
  4155c5:	mov    ecx,0x9751b8ec
  4155ca:	push   ecx
  4155cb:	xchg   edx,eax
  4155cc:	fxam   
  4155ce:	loopne 0x4155aa
  4155d0:	sbb    esi,DWORD PTR [eax]
  4155d2:	cmp    ecx,DWORD PTR [ebx+0x7acbf6c2]
  4155d8:	repnz mov ecx,0xaf73c971
  4155de:	jno    0x41564c
  4155e0:	loop   0x41565e
  4155e2:	push   ebp
  4155e3:	inc    ebx
  4155e4:	xchg   esp,eax
  4155e5:	outs   dx,DWORD PTR ds:[esi]
  4155e6:	daa    
  4155e7:	and    al,0x16
  4155e9:	sbb    al,0x58
  4155eb:	mov    dl,0x9b
  4155ed:	ins    DWORD PTR es:[edi],dx
  4155ee:	cmc    
  4155ef:	pop    ecx
  4155f0:	sbb    eax,0x338a4c37
  4155f5:	mov    ch,0xcb
  4155f7:	xchg   esi,eax
  4155f8:	das    
  4155f9:	mov    ds:0xf3e86c7e,eax
  4155fe:	pop    ss
  4155ff:	mov    ds:0xd73d65d0,al
  415604:	leave  
  415605:	inc    eax
  415606:	fiadd  DWORD PTR [edi]
  415608:	push   edx
  415609:	cmp    eax,0x2554a356
  41560e:	ins    BYTE PTR es:[edi],dx
  41560f:	loopne 0x415619
  415611:	test   DWORD PTR [edi-0x1a],edx
  415614:	lahf   
  415615:	loope  0x4155fa
  415617:	mov    esp,0xf047939e
  41561c:	ins    DWORD PTR es:[edi],dx
  41561d:	ret    0x20c4
  415620:	mov    ah,0x93
  415622:	push   0x57
  415624:	inc    ecx
  415625:	dec    esi
  415626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415627:	inc    esp
  415628:	xchg   ebx,eax
  415629:	sbb    ch,al
  41562b:	xchg   BYTE PTR ds:0x99f85d95,bh
  415631:	pop    eax
  415632:	cmp    DWORD PTR [ecx-0x6f],ebp
  415635:	aam    0x38
  415637:	xlat   BYTE PTR ds:[ebx]
  415638:	jmp    0x1cd1:0x556b0300
  41563f:	jecxz  0x4155f0
  415641:	xlat   BYTE PTR ds:[ebx]
  415642:	mov    ecx,0x4dd092fc
  415647:	xchg   ebp,eax
  415648:	xchg   ecx,eax
  415649:	sub    bh,BYTE PTR ds:0x875b0c3e
  41564f:	lock mov es,WORD PTR es:[ecx-0x62]
  415654:	jb     0x415627
  415656:	aam    0x3
  415658:	xchg   edi,eax
  41565a:	loopne 0x4156a1
  41565c:	sti    
  41565d:	mov    esp,DWORD PTR [edx+ebp*4]
  415660:	mov    dl,0xb2
  415662:	retf   
  415663:	fcmovb st,st(0)
  415665:	jle    0x41560e
  415667:	mov    eax,ds:0xfd5546b5
  41566c:	hlt    
  41566d:	jne    0x41564e
  41566f:	xor    DWORD PTR [ebx+0x60123eca],eax
  415675:	push   cs
  415676:	sbb    BYTE PTR [esi-0x37],ch
  415679:	aaa    
  41567a:	add    BYTE PTR [eax+0x408a9b5b],cl
  415680:	pop    esi
  415681:	jmp    0x4156e3
  415683:	cli    
  415684:	mov    ch,BYTE PTR [eax]
  415686:	pop    es
  415687:	in     al,dx
  415688:	mov    ch,0x68
  41568a:	dec    eax
  41568b:	mov    edx,0xc0dd8189
  415690:	xor    BYTE PTR [esi-0x43],dh
  415693:	fcom   DWORD PTR [ebp+eax*2+0x579772d]
  41569a:	push   edi
  41569b:	jp     0x415642
  41569d:	mov    edi,0xb6ac3e04
  4156a2:	mov    edx,0x5865f034
  4156a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156a8:	or     eax,0xa4cb9a37
  4156ad:	loop   0x415656
  4156af:	mov    ch,0xc1
  4156b1:	mov    ch,0xad
  4156b3:	rcr    BYTE PTR [ebp-0x29],0xa7
  4156b7:	or     DWORD PTR [ecx+0x33d3c763],edi
  4156bd:	int3   
  4156be:	inc    ebx
  4156bf:	sub    DWORD PTR [edi+0x4c79c89],0xffffffa6
  4156c6:	scas   eax,DWORD PTR es:[edi]
  4156c7:	out    0xcc,eax
  4156c9:	mov    dh,0x78
  4156cb:	into   
  4156cc:	call   0xe0bdf874
  4156d1:	dec    eax
  4156d2:	shl    DWORD PTR [eax-0x3bd6ec5],cl
  4156d8:	xchg   ebx,eax
  4156d9:	jbe    0x415709
  4156db:	stos   DWORD PTR es:[edi],eax
  4156dc:	dec    edi
  4156dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156de:	icebp  
  4156df:	mov    ah,ch
  4156e1:	sub    al,0xba
  4156e4:	clc    
  4156e5:	(bad)  
  4156e6:	pop    ecx
  4156e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156e8:	(bad)  
  4156ea:	ins    BYTE PTR es:[edi],dx
  4156eb:	aam    0xe1
  4156ed:	push   es
  4156ee:	pop    DWORD PTR [esi+0x6ce4cd64]
  4156f4:	adc    BYTE PTR [edi+0x12],0x3c
  4156f8:	push   0xffffffbd
  4156fa:	mov    cl,0x99
  4156fc:	xsha256 (bad)
  4156fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156fe:	adc    ebp,DWORD PTR [esi-0x75]
  415701:	and    DWORD PTR [eax-0x198feee6],esp
  415707:	outs   dx,BYTE PTR ds:[esi]
  415708:	mov    fs,WORD PTR [edx+0x6bd901c1]
  41570e:	fs in  eax,dx
  415710:	mov    bh,0x8b
  415712:	or     BYTE PTR [ebx],ah
  415714:	push   cs
  415715:	imul   esp,DWORD PTR [ebx-0x5f],0x643d14d5
  41571c:	mov    bl,0x2e
  41571e:	push   esp
  41571f:	mov    ch,0x4
  415721:	mov    edi,0x2a335e07
  415726:	dec    edx
  415727:	mov    cl,0xe3
  415729:	ret    0x3960
  41572c:	out    dx,al
  41572d:	jg     0x415788
  41572f:	mov    ebx,0xd45b7a3e
  415734:	adc    esi,esi
  415736:	pop    es
  415737:	dec    esp
  415738:	pop    ecx
  415739:	dec    esp
  41573a:	in     al,dx
  41573b:	pop    esp
  41573c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41573d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41573e:	push   ecx
  41573f:	jbe    0x415797
  415741:	jmp    0x4157b6
  415743:	or     DWORD PTR [ecx-0x62b22421],ecx
  415749:	test   BYTE PTR [ebp-0x25],ch
  41574c:	lea    edi,[ebx-0x1c93d0d]
  415752:	scas   eax,DWORD PTR es:[edi]
  415753:	shl    DWORD PTR [ebx],cl
  415755:	sbb    ebp,DWORD PTR [ebp+0x61109d4a]
  41575b:	cmp    eax,0x240bb61d
  415760:	xchg   edi,eax
  415761:	xor    cl,BYTE PTR [ebp-0x36285fcb]
  415767:	lahf   
  415768:	inc    esp
  415769:	pop    ds
  41576a:	push   esp
  41576b:	cld    
  41576c:	loop   0x415790
  41576e:	sti    
  41576f:	mov    ds:0x47adec7f,al
  415774:	inc    eax
  415775:	push   ebp
  415776:	pop    ss
  415777:	mov    eax,ds:0x444344d2
  41577c:	out    dx,eax
  41577d:	adc    DWORD PTR [edi],eax
  41577f:	sti    
  415780:	comiss xmm2,DWORD PTR [edi+0x42]
  415784:	jns    0x41571d
  415786:	sbb    esp,DWORD PTR [ebx]
  415788:	icebp  
  415789:	test   BYTE PTR [edi+edx*8],bh
  41578c:	div    BYTE PTR [ecx]
  41578e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41578f:	mov    edi,0x732f7211
  415794:	push   ss
  415795:	in     al,0xf0
  415797:	cmp    BYTE PTR [ecx+0x30],0xf7
  41579b:	scas   eax,DWORD PTR es:[edi]
  41579c:	inc    ebp
  41579d:	fldenv [eax]
  41579f:	adc    BYTE PTR [ecx+0x14],0x96
  4157a3:	(bad)  
  4157a4:	or     eax,0x2f6a8ef
  4157a9:	hlt    
  4157aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ab:	dec    ebx
  4157ac:	mov    ah,0xd5
  4157ae:	imul   esp,DWORD PTR [ebx-0x68f553ec],0xfae0b272
  4157b8:	jecxz  0x41579e
  4157ba:	loopne 0x4157bc
  4157bc:	cmp    BYTE PTR [ebx+0x5b81e0ef],dl
  4157c2:	aam    0x34
  4157c4:	aaa    
  4157c5:	(bad)  
  4157c6:	rol    DWORD PTR [ecx-0x5c],cl
  4157c9:	dec    edi
  4157ca:	push   eax
  4157cb:	nop
  4157cc:	popa   
  4157cd:	sbb    BYTE PTR [edx+0x72ee41],ah
  4157d3:	add    eax,0x1575a00e
  4157d8:	lods   eax,DWORD PTR ds:[esi]
  4157d9:	mov    BYTE PTR [ebp+0x12],0x9d
  4157dd:	imul   edi,DWORD PTR [ecx+0x4],0x2a04de7e
  4157e4:	push   ecx
  4157e5:	cli    
  4157e6:	ins    DWORD PTR es:[edi],dx
  4157e7:	loope  0x415815
  4157e9:	fbld   TBYTE PTR [ebx+0x77]
  4157ec:	dec    edi
  4157ed:	xchg   edx,eax
  4157ee:	push   ebp
  4157ef:	adc    BYTE PTR [eax-0x3ceab36f],ch
  4157f5:	add    al,0x51
  4157f7:	call   0x7cb:0x2655af9d
  4157fe:	cwde   
  4157ff:	lds    esi,FWORD PTR [ebx-0x72aaca8c]
  415805:	mov    BYTE PTR [edx+0x41],0x4e
  415809:	out    dx,al
  41580a:	push   ebx
  41580b:	fmul   DWORD PTR [eax-0x1d7826c6]
  415811:	jne    0x415847
  415813:	pop    esi
  415814:	inc    ebp
  415815:	sub    ah,BYTE PTR [edx]
  415817:	loope  0x415876
  415819:	add    BYTE PTR [esp+edi*4+0x3716c673],ch
  415820:	popf   
  415821:	sub    BYTE PTR [edx+0x24],0x8a
  415825:	icebp  
  415826:	sti    
  415827:	sbb    eax,0xd1406b2c
  41582c:	mov    dl,0x28
  41582e:	pushf  
  41582f:	dec    esi
  415830:	(bad)  
  415831:	test   al,0x77
  415833:	pusha  
  415834:	aam    0x52
  415836:	(bad)  
  415837:	lds    esi,FWORD PTR [esi-0x29]
  41583a:	xrelease mov DWORD PTR [esi+ecx*4-0x46790b29],esi
  415842:	shl    DWORD PTR [ecx+0x43],1
  415845:	push   cs
  415846:	shl    BYTE PTR [ebx-0x53],0x2c
  41584a:	shl    edi,1
  41584c:	fdivr  DWORD PTR [ecx-0x6ce161f0]
  415852:	cwde   
  415853:	or     eax,0x10fbaa45
  415858:	or     al,0xdb
  41585a:	mov    cl,0x48
  41585c:	or     eax,0xfe8b337e
  415861:	lock fucom st(6)
  415864:	test   DWORD PTR [ebx+edi*1+0x37],ebx
  415868:	xor    DWORD PTR [ebx-0x37971c68],eax
  41586e:	sar    BYTE PTR [edx+eiz*8],cl
  415871:	mov    ebx,0xd7c57be9
  415876:	inc    ecx
  415877:	call   0xb2f87e34
  41587c:	xchg   edi,eax
  41587d:	push   es
  41587e:	push   cs
  41587f:	xchg   bh,cl
  415881:	add    edx,DWORD PTR [ecx]
  415883:	dec    ebp
  415884:	inc    edx
  415885:	fwait
  415886:	in     al,dx
  415887:	pop    ebp
  415888:	jnp    0x4158e8
  41588a:	mov    BYTE PTR [eax+0x27ce6b09],0x6a
  415891:	or     cl,dh
  415893:	jle    0x4158ef
  415895:	mov    DWORD PTR [edx-0x22f7b2e],esp
  41589b:	in     al,dx
  41589c:	outs   dx,BYTE PTR ds:[esi]
  41589d:	pusha  
  41589e:	mov    dl,0x3f
  4158a0:	mov    ch,0x1a
  4158a2:	mov    esp,0x6f105e59
  4158a7:	mov    esp,0x7bdcd6be
  4158ac:	push   ds
  4158ad:	pop    ebp
  4158ae:	sahf   
  4158af:	mov    ds:0xac1c6c48,al
  4158b4:	jno    0x415898
  4158b6:	sub    ch,BYTE PTR [esi-0x5c]
  4158b9:	in     eax,dx
  4158ba:	pop    eax
  4158bb:	lahf   
  4158bc:	jae    0x4158c3
  4158be:	outs   dx,BYTE PTR ds:[esi]
  4158bf:	(bad)  
  4158c0:	fcomp  DWORD PTR [ecx-0xa4460e8]
  4158c6:	add    BYTE PTR [ebp+0x1ebb08c1],bl
  4158cc:	and    DWORD PTR [ebx-0x767e2dc1],eax
  4158d2:	int3   
  4158d3:	retf   0x146c
  4158d6:	xchg   esp,eax
  4158d7:	add    ecx,DWORD PTR [edx-0x4d]
  4158da:	xchg   esi,eax
  4158db:	paddw  mm4,QWORD PTR [edi+eiz*2-0x53a2cf3a]
  4158e3:	push   ds
  4158e4:	dec    edx
  4158e5:	push   0x13
  4158e7:	test   BYTE PTR [eax],dl
  4158e9:	sub    cl,dl
  4158eb:	es out dx,eax
  4158ed:	mov    ecx,0xc1b911e3
  4158f2:	jbe    0x41593d
  4158f4:	cmp    ebp,DWORD PTR [ecx+0x1ac03cb2]
  4158fa:	push   esp
  4158fb:	pop    edi
  4158fc:	sub    dl,0x25
  4158ff:	div    esi
  415901:	sbb    ah,BYTE PTR [esi-0x40001378]
  415907:	test   eax,0xc7851f75
  41590c:	sbb    DWORD PTR [ecx+0x7a],esp
  41590f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415910:	pop    ds
  415911:	pop    ebp
  415912:	jle    0x415919
  415914:	in     al,0x9f
  415916:	mov    al,ds:0x319992e0
  41591b:	mov    al,ds:0xdb0015e6
  415920:	mov    bl,0x57
  415922:	jmp    0x4a97e687
  415927:	inc    edx
  415928:	(bad)  
  415929:	adc    al,0x2e
  41592b:	or     al,0x45
  41592d:	lods   al,BYTE PTR ds:[esi]
  41592e:	inc    ecx
  41592f:	mov    ah,0x8a
  415931:	aas    
  415932:	pop    eax
  415933:	adc    eax,0xaa91c23e
  415938:	fmulp  st(1),st
  41593a:	es mov dh,cl
  41593d:	shl    DWORD PTR es:[edi-0x1d],0x25
  415942:	mov    ds:0x2ed61cf4,al
  415947:	inc    esi
  415948:	call   0x786f:0x5038479b
  41594f:	mov    ebp,0xdb2bfe87
  415954:	cdq    
  415955:	aas    
  415956:	sar    DWORD PTR [eax],0x3
  415959:	sar    ecx,0xd6
  41595c:	js     0x41594f
  41595e:	add    eax,0xa7ba9566
  415963:	out    dx,eax
  415964:	mov    cl,0x4d
  415966:	jno    0x4159c1
  415968:	into   
  415969:	sbb    al,0x50
  41596b:	jae    0x415968
  41596d:	shl    DWORD PTR ds:0x59b6b952,1
  415973:	push   edx
  415974:	push   ecx
  415975:	scas   al,BYTE PTR es:[edi]
  415976:	push   ss
  415977:	repz out dx,eax
  415979:	mov    edx,0xf667a68a
  41597e:	mov    eax,ds:0x67c9d447
  415983:	jg     0x4159cc
  415985:	push   ebp
  415986:	mov    ah,0x32
  415988:	fld    TBYTE PTR [eax+0x1d]
  41598b:	or     DWORD PTR [esi],0xf4e98cf1
  415991:	cli    
  415992:	out    0x9d,eax
  415994:	das    
  415995:	aas    
  415996:	outs   dx,DWORD PTR ds:[esi]
  415997:	dec    esi
  415998:	bound  ecx,QWORD PTR [esi+0x15]
  41599b:	push   ss
  41599c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41599d:	add    al,0xf4
  41599f:	mov    eax,0x1471727
  4159a4:	or     esi,DWORD PTR [edi+0x16833fb4]
  4159aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159ab:	inc    edx
  4159ac:	pop    ecx
  4159ad:	dec    ecx
  4159ae:	(bad)  
  4159af:	lods   al,BYTE PTR ds:[esi]
  4159b0:	lock out dx,al
  4159b2:	mov    al,ds:0x5a27d674
  4159b7:	add    eax,0x34768cc
  4159bc:	in     eax,dx
  4159bd:	sub    BYTE PTR [edi+0xc1aeae8],al
  4159c3:	mov    DWORD PTR ds:0xa27079f7,edx
  4159c9:	ret    
  4159ca:	loope  0x415a2a
  4159cc:	pop    edx
  4159cd:	arpl   WORD PTR [ecx+0x7eab375],ax
  4159d3:	leave  
  4159d4:	cmp    DWORD PTR [ecx+0x15b35455],ecx
  4159da:	push   ds
  4159db:	sahf   
  4159dc:	mov    al,ds:0x872dea7b
  4159e1:	jmp    0x415a46
  4159e3:	mov    dh,0xab
  4159e5:	or     eax,0x5261a567
  4159ea:	add    esp,esi
  4159ec:	out    0xaf,al
  4159ee:	rol    BYTE PTR [ecx+0x1c],1
  4159f1:	sub    ebx,eax
  4159f3:	fisttp DWORD PTR [esi-0x2e]
  4159f6:	jecxz  0x415a55
  4159f8:	(bad)  [eax-0x4c]
  4159fb:	ret    
  4159fc:	mov    bh,0xaa
  4159fe:	jg     0x415a15
  415a00:	out    0x29,al
  415a02:	out    0xdd,al
  415a04:	sbb    DWORD PTR [edx+0x4a],edx
  415a07:	lea    eax,[esi+0x6eec7f0b]
  415a0d:	dec    edx
  415a0e:	mov    BYTE PTR [edx],bl
  415a10:	sub    ecx,DWORD PTR [edi-0x2f2d13a7]
  415a16:	ds retf 0xa781
  415a1a:	add    al,0x1a
  415a1c:	(bad)  
  415a1e:	sub    eax,0x4ff97c34
  415a23:	icebp  
  415a24:	dec    ecx
  415a25:	stos   DWORD PTR es:[edi],eax
  415a26:	mov    bh,0x32
  415a28:	add    al,0x76
  415a2a:	(bad)  
  415a2b:	mov    ah,0xea
  415a2d:	mov    al,0xcb
  415a2f:	jae    0x415a14
  415a31:	test   eax,0xa44555d3
  415a36:	in     al,0x55
  415a38:	jae    0x415a34
  415a3a:	jb     0x415a6c
  415a3c:	test   dl,bh
  415a3e:	and    eax,0x14f350bc
  415a43:	xor    eax,0x7ab77298
  415a48:	push   0xc4ce370
  415a4d:	add    edi,DWORD PTR [ebp+0x3f34d39c]
  415a53:	cmc    
  415a54:	jle    0x415a6c
  415a56:	xchg   esp,eax
  415a57:	retf   
  415a58:	stos   BYTE PTR es:[edi],al
  415a59:	push   0x759a664
  415a5e:	and    eax,0x8b88e41c
  415a63:	jmp    0x4778:0x7f24f648
  415a6a:	(bad)  [esi+0x4e]
  415a6d:	adc    BYTE PTR [esi],ah
  415a6f:	cmp    eax,DWORD PTR [edx-0x7207449a]
  415a75:	retf   
  415a76:	lea    ecx,[ebx]
  415a78:	and    ebp,esp
  415a7a:	rol    BYTE PTR [edx-0x34357974],cl
  415a80:	adc    eax,0x12a7bce8
  415a85:	jns    0x415ab1
  415a87:	popa   
  415a88:	sub    BYTE PTR [edi+esi*8+0x65],0x3d
  415a8d:	dec    eax
  415a8e:	push   edi
  415a8f:	dec    ebx
  415a90:	xor    DWORD PTR [ebx-0x1241c6c2],ecx
  415a96:	jno    0x415aed
  415a98:	pop    esp
  415a99:	mov    dh,0x94
  415a9b:	dec    eax
  415a9c:	jmp    0x953e92d0
  415aa1:	frstpm(287 only) 
  415aa3:	xchg   esi,eax
  415aa4:	mov    ah,0x38
  415aa6:	mov    ecx,ss
  415aa8:	addr16 dec ebx
  415aaa:	aas    
  415aab:	push   edx
  415aac:	sbb    eax,0x366201d4
  415ab1:	mov    cs,esp
  415ab3:	mov    dh,0x92
  415ab5:	push   ebp
  415ab6:	cwde   
  415ab7:	sbb    ebp,ebx
  415ab9:	in     al,dx
  415aba:	mov    esi,0xf379e32a
  415abf:	mov    eax,ds:0xc961abf
  415ac4:	add    eax,0x542d5460
  415ac9:	nop
  415aca:	xchg   ebp,eax
  415acb:	in     al,dx
  415acc:	das    
  415acd:	xchg   edx,eax
  415ace:	daa    
  415acf:	aas    
  415ad0:	lods   eax,DWORD PTR ds:[esi]
  415ad1:	xlat   BYTE PTR ds:[ebx]
  415ad2:	rcr    eax,0xaa
  415ad5:	ds inc esp
  415ad7:	rol    DWORD PTR [eax-0x34],0x65
  415adb:	gs scas al,BYTE PTR es:[edi]
  415add:	adc    eax,0x1fa4509b
  415ae2:	cld    
  415ae3:	mov    bl,0xc7
  415ae5:	lds    ecx,FWORD PTR [esi+ecx*1+0x3e]
  415ae9:	dec    eax
  415aea:	daa    
  415aeb:	push   ebx
  415aec:	repz out 0x97,al
  415aef:	mov    ebp,DWORD PTR [eax]
  415af1:	gs leave 
  415af3:	mov    ds:0x2a9b4342,eax
  415af8:	lea    ebx,[ebx]
  415afa:	(bad)  
  415afb:	jg     0x415b2f
  415afd:	pop    es
  415afe:	test   ecx,ebx
  415b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b01:	les    edi,FWORD PTR [ebx-0x7c0826d7]
  415b07:	push   edi
  415b08:	mov    ds:0xc510fc0f,al
  415b0d:	jmp    0x415af7
  415b0f:	and    cl,ch
  415b11:	pop    ebx
  415b12:	push   DWORD PTR [edi+0x440598e1]
  415b18:	in     al,dx
  415b19:	popf   
  415b1a:	inc    edx
  415b1b:	pop    ecx
  415b1c:	mov    ch,0x5d
  415b1e:	test   esi,esp
  415b20:	repnz ror al,cl
  415b23:	cmp    al,0x7b
  415b25:	call   0x82cb46c
  415b2a:	sub    eax,0xd860eaa9
  415b2f:	fdivr  st(6),st
  415b31:	mov    al,ds:0x55e0c4a6
  415b36:	push   edx
  415b37:	mov    al,BYTE PTR [ecx-0x53f46c70]
  415b3d:	sub    al,0xa9
  415b3f:	mov    bh,0x5c
  415b41:	lea    ebp,gs:[eax]
  415b44:	and    al,0x72
  415b46:	popf   
  415b47:	xchg   ebx,eax
  415b48:	pop    esi
  415b49:	aam    0xf6
  415b4b:	xor    eax,DWORD PTR [eax]
  415b4d:	adc    eax,0xc351f0fe
  415b52:	and    al,0xb
  415b54:	or     eax,0x2fbe03c0
  415b59:	sbb    dl,bl
  415b5b:	retf   
  415b5c:	stos   BYTE PTR es:[edi],al
  415b5d:	dec    ebp
  415b5e:	adc    al,0x54
  415b60:	jp     0x415ae4
  415b62:	ss addr16 pop esi
  415b65:	mov    ah,0x98
  415b67:	int    0xe8
  415b69:	mov    al,0x48
  415b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b6c:	mov    dh,0x72
  415b6e:	jmp    0xd39a14bb
  415b73:	xchg   ebp,eax
  415b74:	inc    ecx
  415b75:	mov    BYTE PTR [edx],bl
  415b77:	inc    edi
  415b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b79:	fisub  DWORD PTR [eax+ecx*4-0x6d]
  415b7d:	sbb    edx,ebx
  415b7f:	stos   BYTE PTR es:[edi],al
  415b80:	sbb    BYTE PTR [ecx-0x7ad44c07],cl
  415b86:	xor    DWORD PTR [ebx],ebx
  415b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b89:	push   esi
  415b8a:	push   esi
  415b8b:	mov    esi,edx
  415b8d:	aad    0x87
  415b8f:	jp     0x415b99
  415b91:	adc    BYTE PTR [ebx-0x3d31a534],ch
  415b97:	xor    dh,bh
  415b99:	mov    dh,0x49
  415b9b:	push   ecx
  415b9c:	mov    DWORD PTR [edx+0x444f99c6],ebx
  415ba2:	leave  
  415ba3:	loop   0x415be8
  415ba5:	fs add ebp,esp
  415ba8:	es jl  0x415b58
  415bab:	inc    ebx
  415bac:	mov    WORD PTR [ecx],ss
  415bae:	mov    al,ds:0x9daf4cf9
  415bb3:	ret    0x49bf
  415bb6:	lea    esp,[ecx+0x60]
  415bb9:	cmp    al,0xe0
  415bbb:	aam    0x66
  415bbd:	imul   ebx,DWORD PTR [edx],0x64
  415bc0:	aad    0x97
  415bc2:	add    dh,al
  415bc4:	das    
  415bc5:	mov    ah,0xa3
  415bc7:	dec    eax
  415bc8:	jle    0x415c1e
  415bca:	jne    0x415c19
  415bcc:	mov    bl,0x6b
  415bce:	rcl    DWORD PTR [ecx],1
  415bd0:	lods   eax,DWORD PTR ds:[esi]
  415bd1:	dec    esp
  415bd2:	sbb    BYTE PTR [edx+0x3d],al
  415bd5:	cmp    edi,edx
  415bd7:	dec    DWORD PTR [edx+0x274313a8]
  415bdd:	sbb    BYTE PTR es:[ebx*8-0x2732c03c],0xe2
  415be6:	xchg   ebp,eax
  415be7:	or     eax,0x3e40a8e7
  415bec:	mov    ds:0x96351a87,eax
  415bf1:	arpl   WORD PTR [edi],si
  415bf3:	(bad)  
  415bf4:	and    edx,DWORD PTR [eax+0x33]
  415bf7:	mov    al,ds:0x43597353
  415bfc:	dec    ecx
  415bfd:	xchg   ebx,eax
  415bfe:	sub    DWORD PTR [edx+0x32798ea0],ecx
  415c04:	test   BYTE PTR [edx-0x74],ah
  415c07:	imul   esi,DWORD PTR [eax+0x4a],0x63
  415c0b:	scas   eax,DWORD PTR es:[edi]
  415c0c:	lahf   
  415c0d:	in     eax,0x8f
  415c0f:	mov    al,ds:0xc730a6
  415c14:	mov    bl,0x9b
  415c16:	in     eax,dx
  415c17:	stos   DWORD PTR es:[edi],eax
  415c18:	imul   ecx,esi,0xfef18ea8
  415c1e:	cmp    DWORD PTR [ebx],ebp
  415c20:	fistp  WORD PTR [ecx]
  415c22:	and    ah,0xa8
  415c25:	dec    ebp
  415c26:	out    dx,eax
  415c27:	mov    ch,al
  415c29:	push   edi
  415c2a:	and    BYTE PTR ds:0xb37b8cd2,cl
  415c30:	add    BYTE PTR [edx+eiz*4+0x61],0x55
  415c35:	or     al,0x30
  415c37:	sbb    al,0x3a
  415c39:	shl    dh,0x38
  415c3c:	cmp    bh,cl
  415c3e:	sub    WORD PTR [eax+0x3e7c18d1],di
  415c45:	mov    ds:0xf814c1ec,al
  415c4a:	jp     0x415c54
  415c4c:	pop    ds
  415c4d:	call   0xd084b902
  415c52:	add    al,al
  415c54:	nop
  415c55:	into   
  415c56:	cs ins BYTE PTR es:[edi],dx
  415c58:	xchg   DWORD PTR [edx],esp
  415c5a:	jmp    DWORD PTR [esi-0x1d]
  415c5d:	mov    DWORD PTR ds:[edi+0x22],ebx
  415c61:	inc    ebx
  415c62:	adc    al,0x9
  415c64:	jg     0x415cd4
  415c66:	inc    ebp
  415c67:	add    ah,BYTE PTR [esi-0x7f]
  415c6a:	inc    ecx
  415c6b:	std    
  415c6c:	sti    
  415c6d:	retf   
  415c6e:	test   al,0x96
  415c70:	gs mov eax,0xaf8f915b
  415c76:	push   edx
  415c77:	xchg   BYTE PTR [esi],cl
  415c79:	out    dx,eax
  415c7a:	sbb    ebp,DWORD PTR [edi-0x28c6d109]
  415c80:	cmp    DWORD PTR [esp+ecx*2],0xffffffc0
  415c84:	retf   0x59f8
  415c87:	stos   BYTE PTR es:[edi],al
  415c88:	test   eax,0xd10ad0fd
  415c8d:	(bad)  
  415c8e:	jo     0x415c1f
  415c90:	les    ebx,FWORD PTR [ebx-0x63]
  415c93:	mov    ah,0x50
  415c95:	xchg   edx,eax
  415c96:	pop    es
  415c97:	sti    
  415c98:	pusha  
  415c99:	cmc    
  415c9a:	fbld   TBYTE PTR [ebx+eiz*8]
  415c9d:	lds    edi,FWORD PTR [esi]
  415c9f:	mov    BYTE PTR [ecx],0xd
  415ca2:	pop    edi
  415ca3:	pop    edi
  415ca4:	adc    eax,0x7ad64125
  415ca9:	test   DWORD PTR [ecx],0x39440da2
  415caf:	addr16 je 0x415cda
  415cb2:	in     al,0x0
  415cb4:	jns    0x415c9a
  415cb6:	jg     0x415c61
  415cb8:	mov    ebx,0x33d2bcd2
  415cbd:	add    edi,0x73
  415cc0:	outs   dx,DWORD PTR ds:[esi]
  415cc1:	in     al,dx
  415cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cc3:	out    dx,al
  415cc4:	imul   ebp,DWORD PTR [eiz*8+0x20b794d3],0xbfae61a0
  415ccf:	popa   
  415cd0:	add    dl,dh
  415cd2:	rcr    esp,0x78
  415cd5:	in     al,dx
  415cd6:	ror    DWORD PTR [edi-0x2ee0731],cl
  415cdc:	push   esp
  415cdd:	push   esp
  415cde:	(bad)  
  415ce0:	icebp  
  415ce1:	adc    al,0xd2
  415ce3:	add    esi,ecx
  415ce5:	cs jmp 0xd0529261
  415ceb:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ced:	shl    BYTE PTR es:[ebx+0x7517889b],cl
  415cf4:	(bad)  
  415cf5:	(bad)  
  415cf6:	fsub   DWORD PTR [ebp-0x11]
  415cf9:	add    eax,0x11942824
  415cfe:	imul   edi,DWORD PTR ds:0x7ced918d,0x608a6cde
  415d08:	lahf   
  415d09:	out    dx,eax
  415d0a:	inc    ebp
  415d0b:	out    dx,al
  415d0c:	int3   
  415d0d:	mov    ch,0x3d
  415d0f:	and    al,0xa7
  415d11:	rcr    DWORD PTR [eax+0x23],0x8c
  415d15:	jp     0x415ca9
  415d17:	inc    ebx
  415d18:	sub    ah,BYTE PTR [ebx]
  415d1a:	das    
  415d1b:	test   eax,0xca24cbd1
  415d20:	cld    
  415d21:	stos   DWORD PTR es:[edi],eax
  415d22:	daa    
  415d23:	jmp    0x605a74e1
  415d28:	inc    esp
  415d29:	and    ch,BYTE PTR ds:0xf137a262
  415d2f:	jmp    0x9caf:0x2dac02b0
  415d36:	inc    ecx
  415d37:	aam    0x10
  415d39:	mov    ebx,0x145db6ee
  415d3e:	xchg   edx,eax
  415d3f:	add    DWORD PTR [ebx],ebp
  415d41:	mov    ds:0x86cd48d6,al
  415d46:	(bad)  
  415d48:	xor    BYTE PTR [esi-0x56813db2],dl
  415d4e:	stos   BYTE PTR es:[edi],al
  415d4f:	shr    BYTE PTR [esi],1
  415d51:	pop    ds
  415d52:	xor    ch,BYTE PTR [ebx-0x13cae20c]
  415d58:	in     eax,dx
  415d59:	jbe    0x415dd4
  415d5b:	loop   0x415dbd
  415d5d:	ins    DWORD PTR es:[edi],dx
  415d5e:	cmc    
  415d5f:	push   eax
  415d60:	rcr    DWORD PTR [ebx+0x539ffed],cl
  415d66:	(bad)  
  415d67:	lods   al,BYTE PTR ds:[esi]
  415d68:	imul   ebp,DWORD PTR [eax+0x381ecaea],0x9
  415d6f:	sbb    DWORD PTR [ebx-0x4b],ebp
  415d72:	mov    ch,0x2f
  415d74:	jo     0x415dd7
  415d76:	dec    ebp
  415d77:	push   ss
  415d78:	dec    eax
  415d79:	pop    esp
  415d7a:	or     al,0x3c
  415d7c:	xchg   esp,eax
  415d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d7e:	jle    0x415d53
  415d80:	ins    DWORD PTR es:[edi],dx
  415d81:	pop    edx
  415d82:	xchg   BYTE PTR [edx-0x9],ch
  415d85:	pushf  
  415d86:	sbb    eax,0xc623a60a
  415d8b:	inc    eax
  415d8c:	xlat   BYTE PTR ds:[ebx]
  415d8d:	xor    BYTE PTR [ecx],0x42
  415d90:	xchg   ebp,eax
  415d91:	scas   al,BYTE PTR es:[edi]
  415d92:	cwde   
  415d93:	dec    ebp
  415d94:	fisub  DWORD PTR [esi]
  415d96:	adc    al,0x7c
  415d98:	rcr    ah,0xeb
  415d9b:	in     eax,0x26
  415d9d:	nop
  415d9e:	cmp    eax,0xa53d39bf
  415da3:	pop    ebp
  415da4:	outs   dx,DWORD PTR ds:[esi]
  415da5:	or     BYTE PTR [ebx],ch
  415da7:	fwait
  415da8:	mov    edi,0x681c3af
  415dad:	iret   
  415dae:	mov    bl,0xe9
  415db0:	iret   
  415db1:	inc    edx
  415db2:	sbb    al,0xa5
  415db4:	adc    DWORD PTR [eax-0x57],0x394bdb4
  415dbb:	fs mov esi,0x9f38d535
  415dc1:	ret    
  415dc2:	cld    
  415dc3:	enter  0xefe4,0x95
  415dc7:	add    al,0xce
  415dc9:	das    
  415dca:	ss dec edx
  415dcc:	push   cs
  415dcd:	ret    
  415dce:	xor    esp,edx
  415dd0:	xchg   DWORD PTR [esi+ebx*1+0x34],ecx
  415dd4:	mov    ebp,DWORD PTR [ecx]
  415dd6:	in     al,0x54
  415dd8:	xor    al,0x44
  415dda:	adc    eax,0xa180fd52
  415ddf:	add    BYTE PTR [edi+0x44],dl
  415de2:	add    DWORD PTR [esi+0x7b],0xffffffa0
  415de6:	fwait
  415de7:	adc    dl,BYTE PTR [ebx+0x1a97651f]
  415ded:	call   0x56963a06
  415df2:	push   ecx
  415df3:	or     bl,cl
  415df5:	add    DWORD PTR [ebx-0x64],eax
  415df8:	and    al,BYTE PTR ds:0xb0dc88ed
  415dfe:	cld    
  415dff:	addr16 gs int3 
  415e02:	jp     0x415e54
  415e04:	cli    
  415e05:	aam    0x64
  415e07:	fistp  DWORD PTR [ebx-0x24abea34]
  415e0d:	mov    ah,0x7f
  415e0f:	mov    ch,0x98
  415e11:	mov    esi,0x2fa2648f
  415e16:	push   ebx
  415e17:	jae    0x415e40
  415e19:	xchg   edi,eax
  415e1a:	sub    esp,DWORD PTR [ebp-0x45]
  415e1d:	out    0xf5,eax
  415e1f:	int3   
  415e20:	cli    
  415e21:	jge    0x415dcc
  415e23:	xor    esi,DWORD PTR [esi+0x31]
  415e26:	push   esp
  415e27:	pop    edx
  415e28:	daa    
  415e29:	sbb    al,0x7e
  415e2b:	xchg   esi,eax
  415e2c:	es pushf 
  415e2e:	out    0x1e,eax
  415e30:	adc    edi,ecx
  415e32:	outs   dx,BYTE PTR ds:[esi]
  415e33:	(bad)  
  415e34:	je     0x415dfa
  415e36:	mov    al,BYTE PTR [eax]
  415e38:	pop    esi
  415e39:	dec    edi
  415e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e3b:	jbe    0x415dd7
  415e3d:	test   BYTE PTR [ecx+0x8],0xeb
  415e41:	icebp  
  415e42:	push   es
  415e43:	xor    eax,0x5f0edf11
  415e48:	pop    ebx
  415e49:	lds    eax,FWORD PTR [edi-0x29c34fe6]
  415e4f:	aaa    
  415e50:	loopne 0x415e39
  415e52:	fstp   DWORD PTR [esi]
  415e54:	jae    0x415dde
  415e56:	fwait
  415e57:	sbb    eax,0x367f185b
  415e5c:	dec    edx
  415e5d:	mov    dl,0xb6
  415e5f:	mov    ecx,0x3da292ec
  415e64:	outs   dx,DWORD PTR ds:[esi]
  415e65:	(bad)  
  415e66:	mov    al,0xaf
  415e68:	mov    ebp,0xd7f21647
  415e6d:	ret    
  415e6e:	inc    ebx
  415e6f:	int3   
  415e70:	cmp    eax,0x8f136373
  415e75:	call   0x73a7:0xceddc9a6
  415e7c:	adc    bh,ch
  415e7e:	mov    eax,ds:0x2cf959ba
  415e83:	mov    edx,0xa699febe
  415e88:	mov    ecx,0x7862ad2f
  415e8d:	sub    esp,DWORD PTR [ecx-0x4182a3ba]
  415e93:	in     eax,dx
  415e94:	int    0xb3
  415e96:	test   eax,0xf12886a3
  415e9b:	jecxz  0x415ee3
  415e9d:	scas   eax,DWORD PTR es:[edi]
  415e9e:	das    
  415e9f:	mov    WORD PTR [eax-0x2d],es
  415ea2:	aas    
  415ea3:	xor    DWORD PTR [ecx-0x23],ebx
  415ea6:	js     0x415eb8
  415ea8:	mov    fs,WORD PTR [edi-0x5f]
  415eab:	mov    bh,0xa
  415ead:	sbb    DWORD PTR [edx+0x30844ba6],edx
  415eb3:	sub    edx,DWORD PTR [eax]
  415eb5:	lea    edx,ds:0x9dc245be
  415ebb:	and    eax,0x3090b8f2
  415ec0:	fadd   DWORD PTR [esi-0x49]
  415ec3:	dec    esp
  415ec4:	mov    edi,0x4093a7da
  415ec9:	dec    ebx
  415eca:	inc    eax
  415ecb:	int3   
  415ecc:	xchg   edx,eax
  415ecd:	rol    BYTE PTR [ebx+0x22401601],0xb4
  415ed4:	test   eax,0xbcb14c0
  415ed9:	push   esp
  415eda:	pop    ss
  415edb:	fstp   DWORD PTR [ecx]
  415edd:	rcr    BYTE PTR [ebp+0xd],1
  415ee0:	pop    ebp
  415ee1:	dec    esi
  415ee2:	dec    esp
  415ee3:	bound  edx,QWORD PTR [ebp+edi*4+0x4b]
  415ee7:	stc    
  415ee8:	dec    ebp
  415ee9:	pop    DWORD PTR [ebx]
  415eeb:	ds hlt 
  415eed:	in     eax,dx
  415eee:	pop    edx
  415eef:	lods   al,BYTE PTR ds:[esi]
  415ef0:	sub    BYTE PTR [edi+0x328d07f5],al
  415ef6:	pusha  
  415ef7:	fldenv [edi]
  415ef9:	lods   al,BYTE PTR ds:[esi]
  415efa:	cmp    al,0x7b
  415efc:	mov    al,ds:0xd8f131bb
  415f01:	push   eax
  415f02:	mov    bl,dl
  415f04:	cdq    
  415f05:	pop    eax
  415f06:	or     DWORD PTR [edi-0x37a18371],0x6
  415f0d:	add    bh,BYTE PTR [ebx+0x4a4a5d32]
  415f13:	sbb    eax,0x449e39d8
  415f18:	xor    BYTE PTR [esi+0x69c9289d],cl
  415f1e:	push   ss
  415f1f:	and    DWORD PTR [ebp+0x35],eax
  415f22:	imul   edi,DWORD PTR [edx],0xc70dbbdc
  415f28:	inc    ebp
  415f29:	cdq    
  415f2a:	xor    BYTE PTR [ebp+0x6],0xdd
  415f2e:	out    dx,eax
  415f2f:	xchg   edi,eax
  415f30:	fs mov dl,0xd9
  415f33:	inc    ebp
  415f34:	dec    eax
  415f35:	out    dx,al
  415f36:	jg     0x415ec6
  415f38:	ss inc edx
  415f3a:	int    0xe2
  415f3c:	push   ecx
  415f3d:	mov    al,0x1b
  415f3f:	mov    esi,DWORD PTR [ebp-0x76]
  415f42:	mov    ?,WORD PTR [ecx+eiz*1+0x198316f7]
  415f49:	push   esi
  415f4a:	into   
  415f4b:	shl    DWORD PTR [ecx+0x21b31996],cl
  415f51:	jl     0x415f63
  415f53:	or     al,0xb7
  415f55:	and    dl,0x83
  415f58:	icebp  
  415f59:	fs (bad) 
  415f5b:	and    BYTE PTR [ebx],ah
  415f5d:	mov    eax,ds:0xf29ffed6
  415f62:	jns    0x415ef5
  415f64:	nop
  415f65:	cdq    
  415f66:	and    ebx,DWORD PTR [edi+0x6e]
  415f69:	xor    bh,BYTE PTR [edx-0x74]
  415f6c:	mov    ecx,esi
  415f6e:	jae    0x415f94
  415f70:	mov    esp,ecx
  415f72:	cmp    ecx,DWORD PTR [edi]
  415f74:	inc    ebx
  415f75:	pop    edi
  415f76:	jae    0x415ef8
  415f78:	jmp    0xbd71:0xc8ed210e
  415f7f:	es pop eax
  415f81:	xor    al,0x4b
  415f83:	jo     0x415fd4
  415f85:	mov    edi,0x354b8a7f
  415f8a:	add    DWORD PTR [eax+0x16],esi
  415f8d:	push   esi
  415f8e:	call   0x2783:0x413e204e
  415f95:	jmp    0x39c:0xde76f4ab
  415f9c:	add    eax,0xdf4b5ed
  415fa1:	xchg   esi,eax
  415fa2:	das    
  415fa3:	ficom  WORD PTR [ecx]
  415fa5:	addr16 mov ecx,0x1d1f338e
  415fab:	cli    
  415fac:	sub    eax,0xbec3f6e0
  415fb1:	or     eax,DWORD PTR [ecx+0x2b]
  415fb4:	pop    edi
  415fb5:	fiadd  WORD PTR [ecx-0x24cfeeeb]
  415fbb:	push   0xffffff96
  415fbd:	ret    0x4631
  415fc0:	daa    
  415fc1:	daa    
  415fc2:	ins    DWORD PTR es:[edi],dx
  415fc3:	in     al,dx
  415fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fc5:	jge    0x41600a
  415fc7:	pop    esi
  415fc8:	inc    edi
  415fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fca:	clc    
  415fcb:	jo     0x415f6d
  415fcd:	fistp  DWORD PTR ds:0x8264fbd6
  415fd3:	xor    eax,0x11b7e95e
  415fd8:	cmp    DWORD PTR [ebx],ecx
  415fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fdb:	stos   BYTE PTR es:[edi],al
  415fdc:	outs   dx,DWORD PTR ds:[esi]
  415fdd:	push   ebp
  415fde:	out    dx,eax
  415fdf:	inc    DWORD PTR [ebp+0x4b]
  415fe2:	sar    BYTE PTR [esp+edi*2+0x1a],cl
  415fe6:	dec    edx
  415fe7:	xchg   ebx,eax
  415fe8:	shl    BYTE PTR [ecx+0x64],cl
  415feb:	in     al,dx
  415fec:	call   0x142b:0xc0f32e84
  415ff3:	out    0x3f,al
  415ff5:	nop
  415ff6:	jecxz  0x416038
  415ff8:	cmp    BYTE PTR [edx+esi*4+0x3493eaef],al
  415fff:	adc    BYTE PTR ss:[eax-0x5f],dh
  416003:	fstp   QWORD PTR [eax]
  416005:	pop    esp
  416006:	sbb    BYTE PTR [edx+0x4c],al
  416009:	pop    edx
  41600a:	int3   
  41600b:	xlat   BYTE PTR ds:[ebx]
  41600c:	mov    edi,0x43b9092e
  416011:	pop    esp
  416012:	mov    bh,0x28
  416014:	lods   eax,DWORD PTR ds:[esi]
  416015:	dec    DWORD PTR [esi+ebx*8-0x77c9eb6f]
  41601c:	mov    ds:0x4e58d9ad,al
  416021:	push   es
  416022:	shr    BYTE PTR [edi-0x3b782d91],0x65
  416029:	dec    eax
  41602a:	je     0x41607d
  41602c:	or     eax,0x4d59078
  416031:	popa   
  416032:	dec    ebp
  416033:	sub    BYTE PTR [ecx],bh
  416035:	jnp    0x415fed
  416037:	les    ebp,FWORD PTR [edi+0x3fb6f839]
  41603d:	in     al,dx
  41603e:	je     0x416052
  416040:	sbb    eax,0xa09c1518
  416045:	cmp    BYTE PTR [ecx+0x4c888a8e],bh
  41604b:	adc    BYTE PTR [edi-0x4e66e70b],cl
  416051:	dec    esp
  416052:	mov    esi,0x5423c704
  416057:	sti    
  416058:	je     0x416099
  41605a:	cwde   
  41605b:	mov    esp,0xc5eec68e
  416060:	add    eax,0x201e3a13
  416065:	adc    eax,0x3c875f06
  41606a:	adc    al,0x76
  41606c:	and    BYTE PTR [ebp-0x46da58bf],ch
  416072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416073:	jecxz  0x416024
  416075:	mov    ds:0xb9b0f8ac,eax
  41607a:	mov    BYTE PTR [ecx+ebp*1+0xd],ch
  41607e:	add    ecx,DWORD PTR [eax]
  416080:	push   ebp
  416081:	stc    
  416082:	ds fwait
  416084:	push   0x18
  416086:	dec    edx
  416087:	add    DWORD PTR [edx-0x3d2c7008],edx
  41608d:	cmp    eax,0xbbad0c95
  416092:	in     eax,dx
  416093:	xor    al,0x1
  416095:	push   ebp
  416096:	mov    dh,al
  416098:	loopne 0x4160c6
  41609a:	jae    0x416097
  41609c:	or     ebp,DWORD PTR [ecx+0xf6281ec]
  4160a2:	push   esi
  4160a3:	imul   DWORD PTR [edx-0x529d4429]
  4160a9:	nop
  4160aa:	mov    BYTE PTR [edi+0x52ff3884],cl
  4160b0:	mov    dl,0x6c
  4160b2:	mov    ds:0x936d315a,eax
  4160b7:	ret    0x4a0a
  4160ba:	movlps QWORD PTR [eax-0x7d],xmm4
  4160be:	and    BYTE PTR [ecx],bl
  4160c0:	jo     0x4160d8
  4160c2:	daa    
  4160c3:	in     eax,dx
  4160c4:	sbb    BYTE PTR [esi+0x6a2f447f],0xa7
  4160cb:	sbb    eax,0x63124f7b
  4160d0:	xchg   edx,eax
  4160d1:	ja     0x41608a
  4160d3:	mov    esp,DWORD PTR [esi+0x18cfff4e]
  4160d9:	(bad)  
  4160da:	lods   eax,DWORD PTR ds:[esi]
  4160db:	ds xchg esp,eax
  4160dd:	data16 sub al,0xb9
  4160e0:	fcomi  st,st(6)
  4160e2:	clc    
  4160e3:	int    0x56
  4160e5:	adc    ebx,eax
  4160e7:	inc    esp
  4160e8:	fs xchg esp,eax
  4160ea:	mov    ecx,0x8d773fe6
  4160ef:	pop    eax
  4160f0:	mov    ch,0x6f
  4160f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f3:	cmp    DWORD PTR [esi],0xd895aa14
  4160f9:	in     al,0xc8
  4160fb:	jp     0x416100
  4160fd:	sub    ch,bh
  4160ff:	stc    
  416100:	cld    
  416101:	jbe    0x41615e
  416103:	(bad)  
  416104:	jnp    0x41611d
  416106:	cmpps  xmm4,XMMWORD PTR ds:0xce552cb,0xc1
  41610e:	and    al,0x24
  416110:	and    eax,0xc3b39408
  416115:	mov    ah,BYTE PTR [edi-0x5556d526]
  41611b:	push   ds
  41611c:	add    eax,0xf9933255
  416121:	jo     0x4160d1
  416123:	imul   edx,esp,0x78
  416126:	out    0xa0,eax
  416128:	jle    0x4160cb
  41612a:	or     DWORD PTR [esi-0x1b1b9513],ecx
  416130:	ds loope 0x416148
  416133:	clc    
  416134:	stos   BYTE PTR es:[edi],al
  416135:	(bad)  
  416136:	adc    DWORD PTR [esi+ebp*2],ebp
  416139:	dec    eax
  41613a:	ds jl  0x4160f0
  41613d:	pop    edx
  41613e:	adc    edi,eax
  416140:	dec    ebp
  416141:	mov    WORD PTR [edi-0xa],es
  416144:	mov    eax,0x84a87c06
  416149:	daa    
  41614a:	mov    bl,0x87
  41614c:	jno    0x416187
  41614e:	pop    esp
  41614f:	cs pop ebp
  416151:	mov    BYTE PTR [ebp-0x442dcedd],dh
  416157:	dec    ebx
  416158:	add    BYTE PTR [ecx+0x4f9e40cc],ch
  41615e:	in     eax,0xa4
  416160:	cdq    
  416161:	add    BYTE PTR [edx-0x1bf4cd0b],0x5c
  416168:	sub    al,0x69
  41616a:	cdq    
  41616b:	fst    QWORD PTR [edi]
  41616d:	mov    bh,dh
  41616f:	and    ebp,edi
  416171:	(bad)  
  416172:	sub    eax,0x216336d1
  416177:	sub    BYTE PTR [ebx+0x21],cl
  41617a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41617b:	push   ecx
  41617c:	mov    al,cl
  41617e:	rcr    DWORD PTR [ebx-0x4595b830],0x9e
  416185:	and    dl,ah
  416187:	cmp    eax,0x47820443
  41618c:	xchg   edi,eax
  41618d:	test   eax,0xdde562c
  416192:	fidivr WORD PTR [eax+0xa9a795f]
  416198:	push   esp
  416199:	dec    ebx
  41619a:	loopne 0x416134
  41619c:	xchg   esp,eax
  41619d:	fdiv   DWORD PTR ds:0x31b41935
  4161a3:	dec    ebx
  4161a4:	dec    esp
  4161a5:	or     dh,bh
  4161a7:	xor    BYTE PTR ds:0x78b6754a,ah
  4161ad:	push   ss
  4161ae:	jb     0x4161dc
  4161b0:	and    DWORD PTR [ecx+edi*4-0x31],esp
  4161b4:	ins    BYTE PTR es:[edi],dx
  4161b5:	or     eax,0x4129b152
  4161ba:	loope  0x416180
  4161bc:	mov    cl,0xda
  4161be:	addr16 and ebp,esi
  4161c1:	in     eax,0xb0
  4161c3:	mov    ?,WORD PTR [edi]
  4161c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161c6:	(bad)  
  4161c7:	jns    0x4161ce
  4161c9:	scas   eax,DWORD PTR es:[edi]
  4161ca:	out    dx,eax
  4161cb:	push   ebp
  4161cc:	stc    
  4161cd:	sub    edi,0x30af4203
  4161d3:	les    esp,FWORD PTR [ebx]
  4161d5:	rep outs dx,DWORD PTR ds:[esi]
  4161d7:	fst    DWORD PTR [ecx-0x8]
  4161da:	mov    edi,DWORD PTR [ebx]
  4161dc:	mov    dh,0x9a
  4161de:	loopne 0x416229
  4161e0:	out    dx,al
  4161e1:	add    BYTE PTR [ecx-0x58],dh
  4161e4:	ja     0x4161c6
  4161e6:	iret   
  4161e7:	mov    eax,0xac4135f
  4161ec:	retf   0xb1bb
  4161ef:	sbb    BYTE PTR [edi],0x6c
  4161f2:	inc    edi
  4161f3:	or     bl,dl
  4161f5:	push   ebp
  4161f6:	cld    
  4161f7:	adc    al,0xa9
  4161fa:	imul   eax,DWORD PTR [ecx-0x7c],0xffffffa0
  4161fe:	sbb    BYTE PTR [ebx],dl
  416200:	popf   
  416201:	fstp   DWORD PTR [ebp+0x6e]
  416204:	fisttp WORD PTR [ecx-0x10d6cda9]
  41620a:	iret   
  41620b:	cwde   
  41620c:	dec    edi
  41620d:	ror    BYTE PTR [ecx],cl
  41620f:	(bad)  
  416210:	jae    0x41622a
  416212:	je     0x416221
  416214:	mov    esp,0xff760e4b
  416219:	jmp    0x416288
  41621b:	pusha  
  41621c:	xor    esp,DWORD PTR [ebx]
  41621e:	and    DWORD PTR [ebp+0x2fd0b435],eax
  416224:	leave  
  416225:	jmp    0x4161f6
  416227:	in     al,0xd
  416229:	das    
  41622a:	sbb    esp,DWORD PTR [esi+0x3e0ab36e]
  416230:	outs   dx,BYTE PTR ds:[esi]
  416231:	xchg   BYTE PTR [edi-0x1e],bl
  416234:	icebp  
  416235:	adc    dh,BYTE PTR [eax-0x5e]
  416238:	jg     0x4161db
  41623a:	and    eax,DWORD PTR [ebx]
  41623c:	inc    ebx
  41623d:	mov    bl,0x17
  41623f:	push   ebx
  416240:	in     al,0xdd
  416242:	push   edi
  416243:	jmp    0x416229
  416245:	and    al,0x70
  416247:	and    al,0x8e
  416249:	into   
  41624a:	inc    edx
  41624b:	in     eax,dx
  41624c:	xchg   edx,eax
  41624d:	ds cs pop edx
  416250:	retf   0x83fa
  416253:	adc    DWORD PTR [ebx],ebx
  416255:	push   es
  416256:	shr    DWORD PTR [edx-0x77],cl
  416259:	(bad)  
  41625a:	neg    ecx
  41625c:	dec    ebx
  41625d:	idiv   esi
  41625f:	mov    edx,0x3cb0d047
  416264:	test   eax,0xdbb9b77c
  416269:	mov    dh,0x86
  41626b:	sub    eax,0xa312b9a7
  416270:	test   eax,0x6c920aa
  416275:	cmp    eax,0x96a17b0c
  41627a:	and    al,0x83
  41627c:	inc    ebp
  41627d:	jg     0x41629a
  41627f:	pop    esp
  416280:	adc    ah,BYTE PTR [esi+0x46]
  416283:	xor    ch,bh
  416285:	jne    0x416246
  416287:	stos   BYTE PTR es:[edi],al
  416288:	test   bl,0x6d
  41628b:	dec    esp
  41628c:	adc    BYTE PTR [ecx+esi*8],dl
  41628f:	scas   eax,DWORD PTR es:[edi]
  416290:	add    al,0x53
  416292:	jae    0x416265
  416294:	jns    0x4162ed
  416296:	mov    bh,0xcb
  416298:	adc    eax,0xf60bc690
  41629d:	out    0x99,al
  41629f:	mov    bh,0x32
  4162a1:	in     al,dx
  4162a2:	fwait
  4162a3:	pushf  
  4162a4:	mov    ebx,0x65f6d0e3
  4162a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162aa:	sahf   
  4162ab:	test   eax,0x43b62f2f
  4162b0:	mov    WORD PTR [edi],gs
  4162b2:	lock fstp DWORD PTR [esi]
  4162b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162b6:	or     ebx,DWORD PTR [edx]
  4162b8:	out    dx,eax
  4162b9:	xor    BYTE PTR [edi+ecx*4],dl
  4162bc:	imul   edi,DWORD PTR [esi-0x668aad9b],0x7cb8b17a
  4162c6:	pop    es
  4162c7:	fistp  QWORD PTR [esi]
  4162c9:	sti    
  4162ca:	fild   WORD PTR [edi]
  4162cc:	bound  edi,QWORD PTR [ebx+0x69d3302a]
  4162d2:	jl     0x4162bc
  4162d4:	jle    0x4162bb
  4162d6:	pusha  
  4162d7:	or     bh,ch
  4162d9:	mov    ah,0xc
  4162db:	and    bl,ch
  4162dd:	xlat   BYTE PTR ds:[ebx]
  4162de:	imul   ebp,DWORD PTR [eax+edx*2],0xd86b4bd
  4162e5:	rcl    DWORD PTR [ebx+0x3326247f],cl
  4162eb:	push   eax
  4162ec:	nop
  4162ed:	xor    BYTE PTR [ebx],0x89
  4162f0:	pop    ebx
  4162f1:	shr    edi,0x79
  4162f4:	out    0x53,al
  4162f6:	jnp    0x41636f
  4162f8:	push   ebp
  4162f9:	int3   
  4162fa:	inc    esi
  4162fb:	mov    eax,ds:0x903b1938
  416300:	cmp    BYTE PTR cs:[edx],dl
  416303:	pop    esp
  416304:	das    
  416305:	jb     0x4162d3
  416307:	sahf   
  416308:	adc    dl,BYTE PTR [edi]
  41630a:	fldenv [ebp+0x5]
  41630d:	jmp    0x6336b23c
  416312:	xchg   edx,eax
  416313:	add    dl,dl
  416315:	inc    ecx
  416316:	and    BYTE PTR [ecx+0x41],0xa9
  41631a:	mov    ds:0x81b342b8,al
  41631f:	ret    0x2564
  416322:	cmp    DWORD PTR [ebx],ebx
  416324:	es inc edx
  416326:	ins    BYTE PTR es:[edi],dx
  416327:	imul   esi,DWORD PTR [edi-0x53],0xffffffb4
  41632b:	sub    DWORD PTR [ecx-0x74],ebx
  41632e:	add    DWORD PTR [eax+0x6771c3a6],ebx
  416334:	xor    eax,0x4f80c5d0
  416339:	mov    ebx,0x18c1b9b1
  41633e:	jb     0x416301
  416340:	je     0x4162f9
  416342:	outs   dx,DWORD PTR ds:[esi]
  416343:	(bad)  
  416344:	ja     0x41632b
  416346:	mov    esi,0x758c4342
  41634b:	fld    QWORD PTR [edx]
  41634d:	lds    ecx,FWORD PTR [edx]
  41634f:	leave  
  416350:	int    0x7
  416352:	(bad)  [eax]
  416354:	pop    ds
  416355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416356:	sub    BYTE PTR [edi-0x5f],bl
  416359:	daa    
  41635a:	sub    edi,edx
  41635c:	add    DWORD PTR [eax],ebx
  41635e:	dec    ecx
  416360:	mov    gs,WORD PTR [eax+0x623064a3]
  416366:	xchg   edi,eax
  416367:	daa    
  416368:	dec    ebx
  416369:	fbstp  TBYTE PTR [edx]
  41636b:	(bad)  [ebx+0x3d]
  41636e:	out    0x2,eax
  416370:	gs sbb ah,ah
  416373:	rcr    DWORD PTR [ebx+eiz*2+0x1b73fdde],0x89
  41637b:	shl    BYTE PTR [edx],0x45
  41637e:	sub    al,0x1c
  416380:	xchg   edx,eax
  416381:	xor    ah,BYTE PTR [esi-0x53]
  416384:	(bad)  [edi]
  416386:	ja     0x416403
  416388:	ficomp WORD PTR [edi+0x39]
  41638b:	rcr    BYTE PTR [ebp-0x6],cl
  41638e:	mov    dh,BYTE PTR [ebx+0x241a16df]
  416394:	es icebp 
  416396:	and    DWORD PTR [edx],0xffffff80
  416399:	dec    edi
  41639a:	push   ecx
  41639b:	daa    
  41639c:	add    al,0xaa
  41639e:	stos   BYTE PTR es:[edi],al
  41639f:	jge    0x416356
  4163a1:	push   ebx
  4163a2:	dec    si
  4163a4:	repnz fcomip st,st(5)
  4163a7:	push   esi
  4163a8:	or     BYTE PTR [eax+0x2a484b2c],ah
  4163ae:	pop    edi
  4163af:	arpl   WORD PTR [edx-0x67b63fbc],di
  4163b5:	or     al,0xa2
  4163b7:	push   0x2a2ad8ae
  4163bc:	sti    
  4163bd:	loopne 0x416437
  4163bf:	xor    bl,bl
  4163c1:	mov    ds,WORD PTR [ebp+0x74]
  4163c4:	pop    ds
  4163c5:	mov    bh,0xd8
  4163c7:	rcr    BYTE PTR [esi],0xe6
  4163ca:	repnz sub bh,BYTE PTR [edi+0x73]
  4163ce:	jns    0x4163fc
  4163d0:	int    0xee
  4163d2:	test   eax,0x3291a31e
  4163d7:	and    ebx,ebx
  4163d9:	inc    ebx
  4163da:	dec    edi
  4163db:	sub    eax,0xc6980362
  4163e0:	push   0xffffffc8
  4163e2:	xor    ebx,eax
  4163e4:	pop    edx
  4163e5:	mov    ebx,0xf18b69f8
  4163ea:	mov    al,ds:0x58bf61ce
  4163ef:	call   0x5745662d
  4163f4:	adc    DWORD PTR [eax],ecx
  4163f6:	push   ecx
  4163f7:	xchg   BYTE PTR [esi+0x61],cl
  4163fa:	xchg   esi,eax
  4163fb:	jmp    0x8ff7:0x148c9ab0
  416402:	and    eax,ebx
  416404:	stos   BYTE PTR es:[edi],al
  416405:	cmp    eax,DWORD PTR [edi]
  416407:	push   edi
  416408:	push   eax
  416409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41640a:	fistp  QWORD PTR [esp+ebp*2+0x1a308902]
  416411:	mov    ds:0xc3c97000,eax
  416416:	lock add cl,bl
  416419:	bound  ebp,QWORD PTR [edi]
  41641b:	or     BYTE PTR [edx+ecx*2-0x68a00d0],bh
  416422:	xchg   esp,eax
  416423:	fst    DWORD PTR ds:0xc8494225
  416429:	test   al,0xac
  41642b:	sti    
  41642c:	repz mov ah,0x88
  41642f:	mov    eax,0xbd1f9967
  416434:	inc    ebp
  416435:	pop    ebx
  416436:	mov    ebp,0x2828b392
  41643b:	mov    ch,0xe1
  41643d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41643e:	ror    DWORD PTR [ebp+0x65be248b],cl
  416444:	dec    eax
  416445:	test   BYTE PTR [edi],al
  416447:	jbe    0x416471
  416449:	sti    
  41644a:	gs dec ebx
  41644c:	add    eax,0xcc56c80a
  416451:	stos   DWORD PTR es:[edi],eax
  416452:	mov    ah,0xb3
  416454:	cli    
  416455:	idiv   BYTE PTR [edi+0x2906c6dc]
  41645b:	(bad)  
  41645c:	push   0xffffff8a
  41645e:	rol    DWORD PTR [ecx],cl
  416460:	or     dl,BYTE PTR ds:0xf5314df8
  416466:	push   0x35845f62
  41646b:	out    0xff,al
  41646d:	push   ecx
  41646e:	ins    DWORD PTR es:[edi],dx
  41646f:	call   0x8335c349
  416474:	dec    eax
  416475:	fild   QWORD PTR [ebp-0x1e]
  416478:	outs   dx,BYTE PTR ds:[esi]
  416479:	neg    BYTE PTR [ebp+0x49]
  41647c:	or     bh,BYTE PTR [esi-0x68749912]
  416482:	js     0x4164a5
  416484:	mov    ch,0xfa
  416486:	sar    DWORD PTR [eax],1
  416488:	test   al,0x20
  41648a:	sub    eax,0x866e84db
  41648f:	xchg   esi,eax
  416490:	mov    ds:0x26f7dcfd,al
  416495:	mov    eax,ds:0xdb1ccf4
  41649a:	mov    ch,0xfc
  41649c:	sub    edi,DWORD PTR [ecx-0x450c68db]
  4164a2:	cld    
  4164a3:	mov    ebp,0x99283f5
  4164a8:	sbb    al,0x9b
  4164aa:	(bad)  
  4164ab:	sub    edx,edx
  4164ad:	dec    ebp
  4164ae:	scas   eax,DWORD PTR es:[edi]
  4164af:	fdivr  DWORD PTR [eax]
  4164b1:	data16 arpl WORD PTR [edi],dx
  4164b4:	inc    ecx
  4164b5:	jle    0x41652a
  4164b7:	out    dx,eax
  4164b8:	jne    0x4164d4
  4164ba:	sbb    eax,0x219e6d85
  4164bf:	or     al,0x30
  4164c1:	mov    esp,0x88425b7a
  4164c6:	cmp    DWORD PTR [ebx+0x4c3ef14d],edx
  4164cc:	mov    ah,0x47
  4164ce:	std    
  4164cf:	and    DWORD PTR [edx+0x40],edx
  4164d2:	push   cs
  4164d3:	fimul  WORD PTR [ebp+0x3a]
  4164d6:	cmc    
  4164d7:	es sti 
  4164d9:	int    0x82
  4164db:	iret   
  4164dc:	rcr    al,0x53
  4164df:	xor    DWORD PTR ds:0xa8cab2f,0x3caf05e7
  4164e9:	sbb    DWORD PTR [ebp-0xc984034],0xffffffaf
  4164f0:	dec    ecx
  4164f1:	push   0xa9a84f6b
  4164f6:	loope  0x4164e3
  4164f8:	ret    0xa6ea
  4164fb:	mov    edi,0xcf9259b3
  416500:	fist   WORD PTR [eax-0x5ce675ab]
  416506:	mov    dh,0xc5
  416508:	ror    DWORD PTR ss:[eax+ecx*4],1
  41650c:	cmp    ebp,DWORD PTR [eax]
  41650e:	xchg   DWORD PTR [ecx-0x30],edi
  416511:	inc    esi
  416512:	mov    edi,0x30854046
  416517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416518:	icebp  
  416519:	jmp    FWORD PTR [ebx+ebp*2]
  41651c:	inc    ebx
  41651d:	ret    
  41651e:	add    ecx,DWORD PTR [edx-0x31]
  416521:	xor    al,0xf
  416523:	xchg   DWORD PTR [ebp+edx*2-0x7f],ebp
  416527:	test   eax,0x5512420f
  41652c:	sti    
  41652d:	aad    0xff
  41652f:	pop    edi
  416530:	jo     0x416576
  416532:	push   ss
  416533:	dec    ebx
  416534:	sub    esp,ecx
  416536:	in     al,0xf5
  416538:	mov    al,ds:0x24a2054a
  41653d:	cmp    dh,BYTE PTR [ecx+0xbe638f]
  416543:	sbb    dl,BYTE PTR ds:[edx]
  416546:	mov    al,0xe4
  416548:	add    al,0xfd
  41654a:	jne    0x416539
  41654c:	dec    ebp
  41654d:	xchg   ecx,eax
  41654e:	stos   DWORD PTR es:[edi],eax
  41654f:	push   esp
  416550:	jbe    0x416555
  416552:	imul   ecx,DWORD PTR [edi-0xf],0xffffffdb
  416556:	xor    ebp,DWORD PTR [edx]
  416558:	test   DWORD PTR [esi+0x4d515af4],ebp
  41655e:	cld    
  41655f:	inc    ebx
  416560:	sub    eax,ebp
  416562:	dec    ecx
  416563:	mov    edx,0x1f74242f
  416568:	jp     0x4165c3
  41656a:	fidivr WORD PTR [ebp-0x75287bef]
  416570:	call   0x381c9da5
  416575:	and    eax,0x6d47ec2a
  41657a:	cmp    al,BYTE PTR [ecx+ecx*1-0x342c9688]
  416581:	repnz pop ebp
  416583:	jge    0x416520
  416585:	mov    ch,BYTE PTR [edi]
  416587:	shr    edx,cl
  416589:	dec    esp
  41658a:	fistp  QWORD PTR [esi]
  41658c:	mov    dh,0xe9
  41658e:	ficom  WORD PTR [esp+eax*2]
  416591:	mov    WORD PTR [esi+0x5e],ss
  416594:	fisttp QWORD PTR [edi-0x51]
  416597:	sbb    DWORD PTR [ecx-0x6c],ecx
  41659a:	sti    
  41659b:	add    esp,eax
  41659d:	push   cx
  41659f:	fdivr  QWORD PTR [eax-0x7d3c5fca]
  4165a5:	pop    ds
  4165a6:	int    0xed
  4165a8:	ret    0x6a15
  4165ab:	or     edi,DWORD PTR [esi-0x5733c220]
  4165b1:	adc    DWORD PTR [edx-0x5b858e21],eax
  4165b7:	xchg   DWORD PTR [edi+eax*1+0x7e283835],esp
  4165be:	mov    eax,ds:0x76312c3f
  4165c3:	inc    edi
  4165c4:	adc    al,0x49
  4165c6:	jp     0x416608
  4165c8:	jle    0x4165eb
  4165ca:	fadd   QWORD PTR [esi-0x63]
  4165cd:	outs   dx,BYTE PTR ds:[esi]
  4165ce:	xchg   edx,eax
  4165cf:	mov    eax,ds:0x204dc75b
  4165d4:	dec    eax
  4165d5:	xor    al,0xf6
  4165d7:	ss jg  0x4165a0
  4165da:	xchg   ebx,eax
  4165db:	xchg   edx,eax
  4165dc:	out    dx,al
  4165dd:	inc    eax
  4165de:	mov    bl,dh
  4165e0:	xor    al,0x96
  4165e2:	push   edx
  4165e3:	ja     0x416581
  4165e5:	sub    al,0xfb
  4165e7:	sbb    ch,BYTE PTR [ebx+0x7229336f]
  4165ed:	icebp  
  4165ee:	out    0xe1,eax
  4165f0:	mov    al,0xad
  4165f2:	cmp    eax,0x5ca624b
  4165f7:	mov    dh,0xb2
  4165f9:	test   BYTE PTR [ebx+eax*4-0xf],dh
  4165fd:	daa    
  4165fe:	int3   
  4165ff:	jmp    0xdc3f:0x5202c520
  416606:	ins    DWORD PTR es:[edi],dx
  416607:	test   al,0xc5
  416609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41660a:	ins    DWORD PTR es:[edi],dx
  41660b:	int3   
  41660c:	mov    eax,DWORD PTR [ebp+0x2853ce9f]
  416612:	mov    ebx,0x2bc4b201
  416617:	(bad)  
  416618:	aam    0x5f
  41661a:	sbb    al,0x8f
  41661c:	outs   dx,BYTE PTR ds:[esi]
  41661d:	sbb    ebx,0x2721876f
  416623:	sbb    ah,BYTE PTR [edx+ecx*1]
  416626:	cld    
  416627:	push   0x2c
  416629:	hlt    
  41662a:	pop    ss
  41662b:	cdq    
  41662c:	pop    es
  41662d:	es jo  0x416692
  416630:	and    al,dh
  416632:	popw   es
  416634:	mov    ds:0x819810f0,al
  416639:	mov    edx,0x6003d1f7
  41663e:	mov    dh,0x71
  416640:	sub    al,0xe3
  416642:	xor    al,0x4e
  416644:	cld    
  416645:	mov    ch,0x68
  416647:	fnstsw WORD PTR [edx]
  416649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41664a:	add    BYTE PTR [ebp+ecx*1-0x4a],0xb8
  41664f:	hlt    
  416650:	js     0x41663a
  416652:	in     al,dx
  416653:	repz loop 0x416663
  416656:	mov    ebx,0x62c141fe
  41665b:	xchg   ecx,eax
  41665c:	pop    eax
  41665d:	psubusw mm4,QWORD PTR [ebx+0x3fd28a23]
  416664:	xchg   edx,eax
  416665:	in     eax,dx
  416666:	fiadd  DWORD PTR [eax]
  416668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416669:	mov    esp,esp
  41666b:	test   eax,0xdb3d3eb6
  416670:	gs sbb esp,eax
  416673:	js     0x4166bc
  416675:	fidiv  WORD PTR [esi]
  416677:	(bad)  
  416678:	icebp  
  416679:	mov    ?,WORD PTR [esi+esi*2]
  41667c:	daa    
  41667d:	aam    0x39
  41667f:	jns    0x416645
  416681:	out    0x34,al
  416683:	stos   DWORD PTR es:[edi],eax
  416684:	fldcw  WORD PTR [eax-0x1ed93bf3]
  41668a:	les    esi,FWORD PTR [esi+0x5f]
  41668d:	les    ebx,FWORD PTR [ebp+0x49]
  416690:	cwde   
  416691:	sub    BYTE PTR [edx+0x25],al
  416694:	jo     0x416641
  416696:	mov    ah,0x6e
  416698:	sti    
  416699:	cmp    eax,DWORD PTR [ecx]
  41669b:	inc    edi
  41669c:	aaa    
  41669d:	jge    0x4166a2
  41669f:	pop    es
  4166a0:	test   al,0xfd
  4166a2:	fdiv   QWORD PTR [ecx+esi*8]
  4166a5:	mov    ah,0x8d
  4166a7:	cmc    
  4166a8:	xor    ah,al
  4166aa:	push   ss
  4166ab:	mov    ebp,0x58535f78
  4166b0:	and    DWORD PTR [eax-0x35],0xfffffff8
  4166b4:	mov    eax,ds:0xe5959c6c
  4166b9:	inc    eax
  4166ba:	xor    ah,BYTE PTR [ebx]
  4166bc:	and    esi,DWORD PTR [ecx+eax*2+0x15a5930b]
  4166c3:	sbb    BYTE PTR [bx+di-0x1],ch
  4166c7:	(bad)  
  4166c8:	in     eax,0x23
  4166ca:	adc    BYTE PTR fs:0xede189a3,0x2e
  4166d2:	nop
  4166d3:	(bad)  [ebp+0x11e1b727]
  4166d9:	loop   0x416698
  4166db:	push   ebx
  4166dc:	jbe    0x4166c0
  4166de:	(bad)  
  4166df:	popa   
  4166e0:	in     eax,dx
  4166e1:	ja     0x416673
  4166e3:	and    bl,BYTE PTR [edi]
  4166e5:	mov    ebp,0xa7574cb0
  4166ea:	add    DWORD PTR [ecx],esp
  4166ec:	dec    esi
  4166ed:	into   
  4166ee:	aam    0x9a
  4166f0:	scas   eax,DWORD PTR es:[edi]
  4166f1:	push   edi
  4166f2:	add    eax,0x91e7e1b0
  4166f7:	ja     0x4166d4
  4166f9:	jbe    0x416741
  4166fb:	mov    ebp,0x478b6c93
  416700:	mov    esp,0xbeade535
  416705:	cmp    al,0x7c
  416707:	dec    BYTE PTR [esi+0x4a]
  41670a:	mov    cs,ebx
  41670c:	push   ecx
  41670d:	inc    edi
  41670e:	xchg   BYTE PTR [bp+di],bh
  416711:	adc    DWORD PTR [edx-0x80],0xe2e36216
  416718:	mov    ebp,0x67592ac6
  41671d:	sbb    DWORD PTR [ebp-0x6b77e60f],eax
  416723:	mov    ?,WORD PTR [esi+0x38f7ec00]
  416729:	sub    BYTE PTR [ebp+0x59],dl
  41672c:	bound  esp,QWORD PTR [ebp-0x74f2c6f8]
  416732:	(bad)  ds:0xe3d7a951
  416738:	mov    ch,0x48
  41673a:	mov    ch,0x28
  41673c:	cs xchg esp,eax
  41673e:	(bad)  
  41673f:	mov    ah,0x11
  416741:	jl     0x416763
  416743:	mov    DWORD PTR ds:0x25914065,eax
  416749:	sahf   
  41674a:	push   es
  41674b:	inc    ecx
  41674c:	sbb    al,bh
  41674e:	mov    edi,0x153b4596
  416753:	xor    cl,BYTE PTR [edi]
  416755:	push   esi
  416756:	in     al,0x6e
  416758:	add    bl,BYTE PTR [edx]
  41675a:	aas    
  41675b:	adc    al,0xf5
  41675d:	xor    BYTE PTR [esi],0xf4
  416760:	inc    ecx
  416761:	pop    eax
  416762:	stos   DWORD PTR es:[edi],eax
  416763:	(bad)  
  416764:	(bad)  
  416765:	mov    esp,0x710ef4c2
  41676a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41676b:	icebp  
  41676c:	(bad)  
  41676d:	aad    0x1a
  41676f:	jnp    0x416790
  416771:	xchg   edx,eax
  416772:	clc    
  416773:	leave  
  416774:	jne    0x41670f
  416776:	add    eax,0x6c1a87b8
  41677b:	inc    edi
  41677c:	jmp    0xf505:0xfaebf2a5
  416783:	in     eax,dx
  416784:	jne    0x416770
  416786:	sbb    eax,DWORD PTR [esi-0x1f]
  416789:	sbb    eax,0x8f06e844
  41678e:	mov    ecx,0x3c6e8f23
  416793:	hlt    
  416794:	ss push ecx
  416796:	push   edi
  416797:	add    cl,BYTE PTR [edi+0x7e201d7f]
  41679d:	or     al,0xa7
  41679f:	pop    eax
  4167a0:	push   esi
  4167a1:	popa   
  4167a2:	or     DWORD PTR [ecx+0x50bcd0c6],edi
  4167a8:	xchg   esp,eax
  4167a9:	arpl   ax,di
  4167ab:	cmp    esp,DWORD PTR [eax]
  4167ad:	call   0x3e390263
  4167b2:	mov    eax,0x5731c194
  4167b7:	fidivr DWORD PTR [esp+ebp*4-0x4b5335c5]
  4167be:	pop    edi
  4167bf:	and    eax,0x1ab1cb91
  4167c4:	jae    0x4167dd
  4167c6:	out    dx,eax
  4167c7:	jmp    0xec0e:0x1061ec7e
  4167ce:	pop    esi
  4167cf:	hlt    
  4167d0:	ss retf 0xb3fb
  4167d4:	cmc    
  4167d5:	pushf  
  4167d6:	adc    ebx,esi
  4167d8:	(bad)  
  4167d9:	addr16 je 0x416763
  4167dc:	jecxz  0x4167f6
  4167de:	sub    eax,0xcdd8208a
  4167e3:	scas   al,BYTE PTR es:[edi]
  4167e4:	in     al,0x2f
  4167e6:	mov    al,0x64
  4167e8:	inc    ebp
  4167e9:	(bad)  
  4167eb:	cs ja  0x41678c
  4167ee:	sbb    esp,edx
  4167f0:	or     bh,BYTE PTR [eax+0x30]
  4167f3:	pop    ecx
  4167f4:	mov    eax,0x74977a22
  4167f9:	(bad)  
  4167fb:	pop    es
  4167fc:	sbb    ebx,edi
  4167fe:	inc    BYTE PTR [ebx+0x61]
  416801:	or     ebp,eax
  416803:	jmp    DWORD PTR [ebx]
  416805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416806:	(bad)
  416809:	ret    0x32aa
  41680c:	and    al,0xb1
  41680e:	iret   
  41680f:	mov    ?,eax
  416811:	mov    BYTE PTR [edi-0x42],ah
  416814:	pmaddwd mm6,QWORD PTR [edi]
  416817:	fs inc edx
  416819:	mov    ah,0xd3
  41681b:	mov    ds:0x8a03f9f,eax
  416820:	adc    edi,DWORD PTR [edi]
  416822:	jb     0x4167a5
  416824:	sub    esi,esi
  416826:	(bad)  
  416827:	xchg   edx,eax
  416828:	dec    esi
  416829:	adc    ebp,0xcfca2f9b
  41682f:	rcl    dh,1
  416831:	fidivr WORD PTR ds:0x50e2bdd
  416837:	mov    ch,0x71
  416839:	push   es
  41683a:	(bad)  
  41683b:	icebp  
  41683c:	call   0x3d9:0xc34d244d
  416843:	pop    edi
  416844:	mov    dl,0x5a
  416846:	adc    DWORD PTR [esi-0x12],esp
  416849:	or     dh,dh
  41684b:	loopne 0x4168ac
  41684d:	sar    DWORD PTR [esi+0xb0db0e3],1
  416853:	aas    
  416854:	stc    
  416855:	add    ecx,edx
  416857:	xlat   BYTE PTR ds:[ebx]
  416858:	xor    al,0x63
  41685a:	ret    0x7fba
  41685d:	dec    ecx
  41685f:	push   esp
  416860:	push   ebx
  416861:	ret    
  416862:	inc    ebp
  416863:	std    
  416864:	adc    ecx,ebx
  416866:	pop    ebx
  416867:	loopne 0x4168b6
  416869:	pop    ss
  41686a:	out    dx,al
  41686b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41686c:	mov    BYTE PTR [ebp+0x2a6ea4d0],ch
  416872:	dec    ecx
  416873:	xor    BYTE PTR [edi],0xa1
  416876:	mov    bh,ah
  416878:	fadd   st(7),st
  41687a:	add    ebx,DWORD PTR [edx-0x4d29fdba]
  416880:	mov    bl,0xc7
  416882:	inc    edx
  416883:	push   ebx
  416884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416885:	sbb    DWORD PTR [edx],0xe18b1b2b
  41688b:	aas    
  41688c:	test   esp,0xe8181de1
  416892:	lods   eax,DWORD PTR ds:[esi]
  416893:	ror    BYTE PTR [ebx-0x192fff95],1
  416899:	rcl    DWORD PTR [edx+ebx*4],1
  41689c:	jmp    0x416916
  41689e:	pop    ebx
  41689f:	inc    ecx
  4168a0:	or     edx,DWORD PTR [edx-0x67]
  4168a3:	hlt    
  4168a4:	cwde   
  4168a5:	xchg   esi,eax
  4168a6:	out    0xc1,al
  4168a8:	and    eax,DWORD PTR [edx+eiz*2-0x67]
  4168ac:	jp     0x416891
  4168ae:	adc    BYTE PTR [esi],dl
  4168b0:	jg     0x4168b7
  4168b2:	mov    ah,0x8
  4168b4:	std    
  4168b5:	jns    0x416838
  4168b7:	data16 gs aad 0x27
  4168bb:	(bad)  
  4168bc:	aam    0x2d
  4168be:	add    edi,DWORD PTR [esi-0x5f92090]
  4168c4:	ds xchg ecx,eax
  4168c6:	icebp  
  4168c7:	jmp    0x41686c
  4168c9:	(bad)  
  4168ca:	jl     0x4168f4
  4168cc:	(bad)  
  4168cd:	and    edi,DWORD PTR [edi]
  4168cf:	mov    WORD PTR [edx+0x22914724],cs
  4168d5:	mov    ah,0x18
  4168d7:	adc    DWORD PTR [edx],esi
  4168d9:	repz pop eax
  4168db:	(bad)
  4168de:	fist   WORD PTR [esi-0x3fcc54e5]
  4168e4:	mov    dh,0xde
  4168e6:	mov    edx,edi
  4168e8:	mov    ch,0xf9
  4168ea:	add    al,0xe2
  4168ec:	sti    
  4168ed:	fnstenv [esi]
  4168ef:	and    BYTE PTR [ecx+0x6bbbbdef],0x77
  4168f6:	jnp    0x4168b1
  4168f8:	adc    eax,0x78d7dce8
  4168fd:	pop    esi
  4168fe:	mov    ebp,0x41f2c35e
  416903:	inc    bx
  416905:	sbb    BYTE PTR [edi],al
  416907:	loopne 0x416933
  416909:	cmp    bh,ah
  41690b:	imul   edi,DWORD PTR [esi+0x6b9c9],0xd10fe092
  416915:	pop    ds
  416916:	mov    ebp,0x36804e11
  41691b:	fs std 
  41691d:	outs   dx,BYTE PTR ds:[esi]
  41691e:	retf   
  41691f:	in     ax,dx
  416921:	fdiv   DWORD PTR [ebx+ebp*1]
  416924:	sub    DWORD PTR [ebx-0xdf124b7],ebx
  41692a:	or     bl,BYTE PTR [ebp+0x70560b68]
  416930:	fwait
  416931:	push   es
  416932:	mov    WORD PTR [edx+ecx*8+0x2242559d],ss
  416939:	sub    BYTE PTR [edx+0x4102c45c],0x8b
  416940:	mov    ebp,0xc117c3ee
  416945:	dec    ebx
  416946:	imul   ebx,esp,0x8e255296
  41694c:	pop    esp
  41694d:	rcr    ah,1
  41694f:	repnz test esi,edx
  416952:	push   0xffffffec
  416954:	fcom   QWORD PTR [ebx+0x2a94cdc0]
  41695a:	fsubr  QWORD PTR [edi]
  41695c:	dec    eax
  41695d:	jmp    0x416997
  41695f:	push   edi
  416960:	push   cs
  416961:	inc    eax
  416962:	pop    ebp
  416963:	jo     0x416964
  416965:	sar    BYTE PTR [esi-0x61eca21b],cl
  41696b:	dec    ebp
  41696c:	dec    ecx
  41696d:	ficomp WORD PTR [edi]
  41696f:	and    DWORD PTR [ecx],ebx
  416971:	ins    DWORD PTR es:[edi],dx
  416972:	xor    esi,edi
  416974:	or     DWORD PTR [edx-0x2d],ebp
  416977:	jp     0x416936
  416979:	xchg   esp,esp
  41697b:	and    DWORD PTR [edi+0x14],0xffffffcf
  41697f:	jecxz  0x416943
  416981:	push   esi
  416982:	bound  edx,QWORD PTR [esi+0x2f65febd]
  416988:	push   es
  416989:	addr16 (bad) 
  41698b:	stc    
  41698c:	mov    cl,0x77
  41698e:	pushf  
  41698f:	jge    0x4169ea
  416991:	xchg   edx,eax
  416992:	dec    ebp
  416993:	and    BYTE PTR [ecx-0x410006d5],ah
  416999:	jo     0x416a03
  41699b:	mov    ebp,0x5740308
  4169a0:	adc    al,0x5
  4169a2:	and    DWORD PTR [eax-0xc5d9f8c],ebp
  4169a8:	and    ah,dh
  4169aa:	mov    ebp,0xd7eaa13f
  4169af:	imul   ebp,ecx,0xe452df49
  4169b5:	ret    
  4169b6:	jmp    0x41698c
  4169b8:	test   BYTE PTR [edi+edi*2],dh
  4169bb:	push   esi
  4169bc:	(bad)  
  4169bd:	sbb    eax,0xae77e793
  4169c2:	ret    0x9338
  4169c5:	in     eax,dx
  4169c6:	(bad)  
  4169c7:	int    0x6d
  4169c9:	(bad)  
  4169ca:	in     eax,dx
  4169cb:	mov    edi,DWORD PTR [esi+0x1dd0ac78]
  4169d1:	dec    esp
  4169d2:	(bad)  
  4169d4:	fs inc ebx
  4169d6:	sar    BYTE PTR [ebx],0x35
  4169d9:	inc    ecx
  4169da:	mov    ebx,0x53f88045
  4169df:	xchg   edi,eax
  4169e0:	xchg   ebx,eax
  4169e1:	xchg   edx,eax
  4169e2:	pop    ecx
  4169e3:	int    0x24
  4169e5:	pop    ds
  4169e6:	pop    esi
  4169e7:	and    ebx,DWORD PTR [edi+0x20943f0]
  4169ed:	cli    
  4169ee:	dec    esi
  4169ef:	div    BYTE PTR es:[ebp-0x77626047]
  4169f6:	addr16 fwait
  4169f8:	and    eax,0x83cb33db
  4169fd:	ins    DWORD PTR es:[edi],dx
  4169fe:	outs   dx,BYTE PTR ds:[esi]
  4169ff:	mov    ah,BYTE PTR [ebx-0x21]
  416a02:	test   DWORD PTR [edx],ecx
  416a04:	and    cl,BYTE PTR [ecx-0x2a]
  416a07:	mov    cl,0x67
  416a09:	mov    bl,0xa6
  416a0b:	mov    ecx,0x792a3e1d
  416a10:	mov    ds:0xd7a92686,eax
  416a15:	mov    dh,0x9
  416a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a18:	inc    edx
  416a19:	sti    
  416a1a:	mov    dl,0xe2
  416a1c:	cmp    al,0x5d
  416a1e:	fadd   QWORD PTR ds:0xb9b0b766
  416a24:	inc    esi
  416a25:	and    dh,BYTE PTR [ebx-0x26f193d0]
  416a2b:	ret    0x3fbe
  416a2e:	lods   eax,DWORD PTR ds:[esi]
  416a2f:	xor    DWORD PTR [edi-0x9fc5e0],edx
  416a35:	xchg   DWORD PTR [edx],esi
  416a37:	sub    eax,0xce200ea0
  416a3c:	aam    0x87
  416a3e:	or     eax,0xc5d81d67
  416a43:	adc    BYTE PTR [edi],ch
  416a45:	jecxz  0x4169f0
  416a47:	fisttp WORD PTR [ebx]
  416a49:	loope  0x416a2d
  416a4b:	aaa    
  416a4c:	es inc ebx
  416a4e:	adc    DWORD PTR [eax+0x4019deb7],ebp
  416a54:	nop
  416a55:	push   es
  416a56:	rcr    DWORD PTR [esi],cl
  416a58:	loopne 0x4169f9
  416a5a:	dec    ebx
  416a5b:	loopne 0x4169de
  416a5d:	and    edx,ebp
  416a5f:	cs in  eax,dx
  416a61:	push   ds
  416a62:	pop    esi
  416a63:	pop    esp
  416a64:	push   edi
  416a65:	in     eax,dx
  416a66:	cmp    al,0x71
  416a68:	push   cs
  416a69:	or     edx,DWORD PTR [esi-0x22]
  416a6c:	outs   dx,DWORD PTR ds:[esi]
  416a6d:	xor    BYTE PTR [edi-0x1b2b7900],dh
  416a73:	xchg   DWORD PTR [edi],esi
  416a75:	fadd   DWORD PTR [eax]
  416a77:	xchg   esi,eax
  416a78:	int    0xcc
  416a7a:	push   edi
  416a7b:	mov    ch,0x69
  416a7d:	sub    esi,DWORD PTR [edx]
  416a7f:	lds    esp,FWORD PTR [eax]
  416a81:	inc    edx
  416a82:	popa   
  416a83:	cmp    BYTE PTR [ecx+0x7601915b],0x7c
  416a8a:	in     eax,dx
  416a8b:	push   0xffffffde
  416a8d:	xlat   BYTE PTR ds:[ebx]
  416a8e:	dec    ebp
  416a8f:	dec    esi
  416a90:	adc    ebp,esi
  416a92:	loope  0x416a1b
  416a94:	dec    ebx
  416a95:	test   DWORD PTR [ebx*1+0x1a036ccc],ebx
  416a9c:	dec    edx
  416a9d:	cbw    
  416a9f:	pusha  
  416aa0:	scas   eax,DWORD PTR es:[edi]
  416aa1:	dec    ebx
  416aa2:	or     BYTE PTR [eax],bl
  416aa4:	outs   dx,DWORD PTR ds:[esi]
  416aa5:	add    al,0x55
  416aa7:	jg     0x416acd
  416aa9:	(bad)
  416aac:	pop    ds
  416aad:	sub    BYTE PTR [ebp+0x79aa921f],bl
  416ab3:	scas   al,BYTE PTR es:[edi]
  416ab4:	jg     0x416b2c
  416ab6:	js     0x416a39
  416ab8:	inc    edx
  416ab9:	ror    DWORD PTR [edx],cl
  416abb:	sar    ah,1
  416abd:	and    edi,DWORD PTR [esp+esi*4]
  416ac0:	arpl   WORD PTR [ecx+0x74],cx
  416ac3:	(bad)  [esi-0x26]
  416ac6:	fiadd  DWORD PTR [esi]
  416ac8:	cmp    BYTE PTR ds:0xbb9869b3,0x4f
  416acf:	sub    DWORD PTR [ecx],esi
  416ad1:	stos   DWORD PTR es:[edi],eax
  416ad2:	(bad)  
  416ad3:	fmul   st(2),st
  416ad5:	ficomp DWORD PTR [edx-0x2b1c5aa0]
  416adb:	aad    0x9f
  416add:	aaa    
  416ade:	dec    ebx
  416adf:	lods   eax,DWORD PTR ds:[esi]
  416ae0:	cmp    al,0x98
  416ae2:	bound  ebx,QWORD PTR [ecx+ebx*4-0x3795713c]
  416ae9:	mov    dh,0x33
  416aeb:	aaa    
  416aec:	test   al,0xe4
  416aee:	stc    
  416aef:	pop    ebx
  416af0:	mov    ds:0xec1b0617,al
  416af5:	fild   DWORD PTR [esi+ebx*2]
  416af8:	push   esp
  416af9:	push   edx
  416afa:	mov    ds:0xbfa04d75,al
  416aff:	xlat   BYTE PTR ds:[ebx]
  416b00:	addr16 xor dh,al
  416b03:	aaa    
  416b04:	add    dh,BYTE PTR [eax]
  416b06:	(bad)  
  416b07:	adc    dh,BYTE PTR [ecx]
  416b09:	arpl   WORD PTR [esi-0x16],bx
  416b0c:	push   ecx
  416b0d:	mov    al,0xb2
  416b0f:	ror    BYTE PTR [edi+0x6c81dfab],cl
  416b15:	push   esp
  416b16:	stos   DWORD PTR es:[edi],eax
  416b17:	push   edi
  416b18:	call   0x9249:0x22eb557c
  416b1f:	pop    esi
  416b20:	pusha  
  416b21:	call   0x5dad5b38
  416b26:	xchg   esi,eax
  416b27:	xor    dh,BYTE PTR [edi]
  416b29:	popf   
  416b2a:	push   edx
  416b2b:	stc    
  416b2c:	jge    0x416b53
  416b2e:	(bad)  [ebx]
  416b30:	retf   
  416b31:	rcr    BYTE PTR [ecx+0x59],cl
  416b34:	aaa    
  416b35:	imul   ecx,esi,0xf539dfa6
  416b3b:	int    0x4f
  416b3d:	adc    ch,BYTE PTR [si]
  416b40:	and    cl,BYTE PTR [esi+0x3d]
  416b43:	sbb    esi,eax
  416b45:	rol    BYTE PTR [ebx],0x2a
  416b48:	push   ebx
  416b49:	rcr    DWORD PTR [ebp+0x1b],cl
  416b4c:	enter  0x6a66,0x59
  416b50:	push   esp
  416b51:	cwde   
  416b52:	dec    ebp
  416b53:	cmc    
  416b54:	xor    dh,0x6a
  416b57:	pop    edi
  416b58:	adc    eax,0x922242d6
  416b5d:	fstp   TBYTE PTR [esi]
  416b5f:	push   es
  416b60:	inc    esi
  416b61:	repz cmovl esp,DWORD PTR [edx+0x5d]
  416b66:	into   
  416b67:	call   0x447a670c
  416b6c:	xchg   edi,eax
  416b6d:	pop    esi
  416b6e:	mov    bh,0xfa
  416b70:	fdiv   st,st(3)
  416b72:	data16 sbb al,0x1d
  416b75:	sub    al,0x1
  416b77:	bound  edx,QWORD PTR [edi+0x1d]
  416b7a:	(bad)  
  416b7b:	nop
  416b7c:	sbb    eax,0x7b5cc1e4
  416b81:	jo     0x416be3
  416b83:	pop    ds
  416b84:	dec    ebx
  416b85:	cmp    DWORD PTR [esi],esi
  416b87:	sub    al,0xa8
  416b89:	dec    esi
  416b8a:	inc    edi
  416b8b:	mov    dl,0x22
  416b8d:	mov    ds:0xce47bc62,eax
  416b92:	(bad)
  416b95:	push   edi
  416b96:	xor    BYTE PTR [edx-0x8],ch
  416b99:	mov    ah,0xeb
  416b9b:	repnz or esi,ebx
  416b9e:	dec    ebp
  416b9f:	arpl   WORD PTR [esi+0x35],bx
  416ba2:	cwde   
  416ba3:	pop    esi
  416ba4:	lea    edi,[edx-0x35]
  416ba7:	(bad)  [esi+0x2f]
  416baa:	or     BYTE PTR [eax-0x3a77cf0d],dh
  416bb0:	adc    esp,edi
  416bb2:	add    cl,al
  416bb4:	dec    ebp
  416bb5:	xor    bh,BYTE PTR [edx+0x396e8b5c]
  416bbb:	jo     0x416c30
  416bbd:	stos   DWORD PTR es:[edi],eax
  416bbe:	pop    esp
  416bbf:	mov    dl,0x87
  416bc1:	fcom   st(7)
  416bc3:	xlat   BYTE PTR ds:[ebx]
  416bc4:	int    0x11
  416bc6:	lock ins BYTE PTR es:[edi],dx
  416bc8:	ins    BYTE PTR es:[edi],dx
  416bc9:	ror    BYTE PTR [esi-0x795d5395],1
  416bcf:	ret    
  416bd0:	mov    ds:0x13122f0,eax
  416bd5:	inc    edx
  416bd6:	cmp    DWORD PTR [eax],0x425f26a1
  416bdc:	sbb    ah,dh
  416bde:	arpl   WORD PTR [edi+ebp*8+0x3f],dx
  416be2:	inc    ebx
  416be3:	inc    edx
  416be4:	dec    BYTE PTR [ebx-0x69d3facf]
  416bea:	js     0x416b94
  416bec:	je     0x416b96
  416bee:	add    al,0xb9
  416bf0:	xor    eax,0x6f621768
  416bf5:	int    0xe4
  416bf7:	mov    ch,BYTE PTR [edi-0x60]
  416bfa:	push   es
  416bfb:	jecxz  0x416bcb
  416bfd:	repz dec edx
  416bff:	in     eax,dx
  416c00:	pop    edi
  416c01:	aaa    
  416c02:	loope  0x416c68
  416c04:	(bad)  
  416c06:	dec    edx
  416c07:	pushf  
  416c08:	cmp    eax,0x7e09cf74
  416c0d:	or     dh,BYTE PTR [ebp+0x1e]
  416c10:	add    ecx,DWORD PTR [bx]
  416c13:	rcr    BYTE PTR [esi],cl
  416c15:	or     DWORD PTR [eax],edx
  416c17:	das    
  416c18:	adc    BYTE PTR [esi],al
  416c1a:	lock sub BYTE PTR [edi-0x61],bl
  416c1e:	fadd   QWORD PTR [eax]
  416c20:	push   ebx
  416c21:	je     0x416c75
  416c23:	sbb    eax,0xaeb80911
  416c28:	retf   0x3cdf
  416c2b:	jp     0x416c04
  416c2d:	and    DWORD PTR [ebx+edx*4],esi
  416c30:	mov    BYTE PTR [edi+0x30],cl
  416c33:	sub    eax,0xb3babb5e
  416c38:	jns    0x416bed
  416c3a:	add    edi,esi
  416c3c:	add    DWORD PTR [edi+edi*2+0x1f8c1bdc],esi
  416c43:	arpl   WORD PTR [ebp-0x2131618],bp
  416c49:	dec    ebx
  416c4a:	adc    ch,bh
  416c4c:	xor    DWORD PTR [ebp-0x322d647b],esi
  416c52:	hlt    
  416c53:	add    eax,0x57f36d69
  416c58:	sahf   
  416c59:	mov    dl,0xd
  416c5b:	icebp  
  416c5c:	mov    bl,0x31
  416c5e:	or     edx,edx
  416c60:	jg     0x416cc5
  416c62:	dec    edi
  416c63:	pusha  
  416c64:	stc    
  416c65:	rcr    BYTE PTR [esi+0x2d],cl
  416c68:	mov    bl,0x3
  416c6a:	sub    eax,0xa2ce19a5
  416c6f:	rol    BYTE PTR [edi-0x256d8309],0xc6
  416c76:	pop    edx
  416c77:	xor    ebx,esp
  416c79:	mov    WORD PTR [esi],?
  416c7b:	push   0x2e
  416c7d:	dec    esi
  416c7e:	and    al,BYTE PTR [esi]
  416c80:	xor    DWORD PTR [ebp+edx*1+0x2a],0x6c
  416c85:	sbb    DWORD PTR [ebp-0x52],ecx
  416c88:	push   ds
  416c89:	jge    0x416c65
  416c8b:	cmp    ah,ah
  416c8d:	call   0xbd9f601e
  416c92:	mul    DWORD PTR [edx+0x7a]
  416c95:	cmc    
  416c96:	pop    ebp
  416c97:	xchg   ecx,eax
  416c98:	sti    
  416c99:	cmc    
  416c9a:	push   eax
  416c9b:	push   ss
  416c9c:	jns    0x416c9d
  416c9e:	inc    esp
  416c9f:	aas    
  416ca0:	cmp    BYTE PTR [ebp-0x2c8a2f16],ch
  416ca6:	pop    esp
  416ca7:	mov    BYTE PTR [ebx-0x71a7ca2b],al
  416cad:	sti    
  416cae:	mov    edx,fs
  416cb0:	mov    cs,ebp
  416cb2:	sbb    eax,edi
  416cb4:	jns    0x416c90
  416cb6:	jns    0x416cc6
  416cb8:	out    dx,al
  416cb9:	push   ebx
  416cba:	xchg   ebp,eax
  416cbb:	sbb    DWORD PTR [eax-0x37e8878c],0x1d0c88b
  416cc5:	fsub   DWORD PTR [ebp-0x23]
  416cc8:	mov    ecx,DWORD PTR [edx+0x48]
  416ccb:	call   0x6cc26bde
  416cd0:	or     eax,0x9cdeaec8
  416cd5:	bndstx [edi],bnd0
  416cd8:	call   0x7a72:0x968c24b8
  416cdf:	lock mov ecx,0xa8492e73
  416ce5:	and    DWORD PTR [edx+0x41],ebx
  416ce8:	test   BYTE PTR [ebp+0x42],0x79
  416cec:	mov    esp,0x83265b53
  416cf1:	repnz pop esi
  416cf3:	stos   DWORD PTR es:[edi],eax
  416cf4:	stc    
  416cf5:	repz sub al,0xf6
  416cf8:	mov    ch,0xf7
  416cfa:	xchg   esp,eax
  416cfb:	(bad)  
  416cfc:	outs   dx,BYTE PTR ds:[esi]
  416cfd:	add    BYTE PTR [esi+0x50],0xd2
  416d01:	cmp    BYTE PTR [edx],0xc8
  416d04:	in     eax,0xbb
  416d06:	inc    edi
  416d07:	call   FWORD PTR [ebx]
  416d09:	out    dx,al
  416d0a:	inc    edx
  416d0b:	or     ah,bl
  416d0d:	push   ss
  416d0e:	aad    0x92
  416d10:	xchg   ecx,eax
  416d11:	dec    ebx
  416d12:	(bad)  
  416d13:	mov    ds:0xa481b925,al
  416d18:	mov    ecx,0x97f1fc25
  416d1d:	loope  0x416d6a
  416d1f:	xor    edx,DWORD PTR [ecx+edx*2-0x331a78d5]
  416d26:	(bad)  
  416d27:	and    eax,0xf8907d01
  416d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d2d:	mov    esi,0x75790706
  416d32:	gs jne 0x416d87
  416d35:	rcr    BYTE PTR [edi-0x39],cl
  416d38:	jns    0x416d54
  416d3a:	fstp   TBYTE PTR [ecx+0x1bc93ff5]
  416d40:	cdq    
  416d41:	mov    dh,0x3c
  416d43:	mov    dl,0x7
  416d45:	int    0xd
  416d47:	cdq    
  416d48:	push   0x2
  416d4a:	xchg   ebx,eax
  416d4b:	add    dl,dh
  416d4d:	sub    al,0xd3
  416d4f:	dec    edi
  416d50:	cmp    ecx,DWORD PTR [esp+eax*4+0x1b]
  416d54:	sti    
  416d55:	sub    al,BYTE PTR [esi-0x45]
  416d58:	mov    fs,WORD PTR [ecx+esi*2+0x1c]
  416d5c:	dec    ecx
  416d5d:	and    ah,BYTE PTR [esi-0x1c337c29]
  416d63:	sub    edi,DWORD PTR [edx-0x14dcc45]
  416d69:	jg     0x416d84
  416d6b:	or     BYTE PTR [edx+0x179006b1],dl
  416d71:	loope  0x416d3c
  416d73:	jne    0x416d17
  416d75:	out    0xb3,eax
  416d77:	(bad)  [eax*2-0x74831664]
  416d7e:	out    0x55,eax
  416d80:	or     BYTE PTR [ecx+0x39],cl
  416d83:	inc    esp
  416d84:	retf   0x8ece
  416d87:	leave  
  416d88:	nop
  416d89:	lods   eax,DWORD PTR gs:[esi]
  416d8b:	fisttp QWORD PTR [ebx-0x557d0a1b]
  416d91:	or     edx,edi
  416d93:	daa    
  416d94:	or     al,BYTE PTR [eax]
  416d96:	cmp    eax,0xf70c4aa1
  416d9b:	rcl    edx,1
  416d9d:	xchg   esi,eax
  416d9e:	mov    WORD PTR [ebp+0x4ff077df],?
  416da4:	jge    0x416dd7
  416da6:	jecxz  0x416d8b
  416da8:	mov    ch,0x81
  416daa:	cmp    eax,0xe077cfab
  416daf:	or     bl,BYTE PTR [ebx+0x31]
  416db2:	mov    bh,0x26
  416db4:	push   0xffffffbb
  416db6:	sbb    DWORD PTR [edx],0x13
  416db9:	popf   
  416dba:	cmp    BYTE PTR [ecx-0x496abb00],0xcf
  416dc1:	repnz outs dx,DWORD PTR ds:[esi]
  416dc3:	vmread ecx,edi
  416dc6:	loop   0x416d66
  416dc8:	enter  0x8457,0xfd
  416dcc:	repnz les eax,FWORD PTR [esi-0x2a]
  416dd0:	jmp    0x416d92
  416dd2:	mov    ds:0x7b847323,al
  416dd7:	sbb    al,bl
  416dd9:	adc    DWORD PTR [esp+ecx*1],0x4f8cbea3
  416de0:	aas    
  416de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416de2:	inc    edi
  416de3:	xchg   esp,eax
  416de4:	cmp    al,0x33
  416de6:	jg     0x416de6
  416de8:	mov    bh,0x98
  416dea:	ret    
  416deb:	cmp    BYTE PTR ds:[edi-0x455293f0],0xb
  416df3:	jmp    0xf9bc:0x8212e54a
  416dfa:	cld    
  416dfb:	cmp    dl,BYTE PTR ds:0x5266df0e
  416e01:	add    eax,0x41ef6054
  416e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e07:	sbb    al,0x70
  416e09:	(bad)  
  416e0a:	and    DWORD PTR [ebx-0x66],ebp
  416e0d:	popa   
  416e0e:	enter  0x2f37,0xd9
  416e12:	or     ecx,DWORD PTR [esi-0x3132d289]
  416e18:	sub    edi,DWORD PTR [edi-0x110a0e2c]
  416e1e:	(bad)  
  416e1f:	js     0x416e05
  416e21:	cdq    
  416e22:	pop    edx
  416e23:	pusha  
  416e24:	or     bl,BYTE PTR [ebp-0x20]
  416e27:	aam    0x8e
  416e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e2a:	mov    dl,0x22
  416e2c:	sbb    BYTE PTR [eax+0x47],al
  416e2f:	jne    0x416dbe
  416e31:	cwde   
  416e32:	pusha  
  416e33:	fst    QWORD PTR [edi-0x24f93489]
  416e39:	loope  0x416e6e
  416e3b:	outs   dx,BYTE PTR ds:[esi]
  416e3c:	or     dh,BYTE PTR [ebp+0x501da429]
  416e42:	jl     0x416e5c
  416e44:	jle    0x416e0a
  416e46:	test   al,0xb
  416e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e49:	push   ecx
  416e4a:	(bad)  
  416e4b:	sbb    ch,BYTE PTR [edx+0x5573a982]
  416e51:	xchg   ebx,eax
  416e52:	xchg   edx,eax
  416e53:	dec    ebx
  416e54:	repz idiv BYTE PTR ds:0xbfb1decd
  416e5b:	ret    0x1edf
  416e5e:	mov    dh,BYTE PTR [esi+ecx*8]
  416e61:	in     al,dx
  416e62:	out    0xd4,eax
  416e64:	push   esi
  416e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e66:	ins    DWORD PTR es:[edi],dx
  416e67:	xor    al,0x9f
  416e69:	into   
  416e6a:	jno    0x416df6
  416e6c:	jmp    0x1d9bea28
  416e71:	push   edi
  416e72:	push   esi
  416e73:	and    ecx,0x206461fd
  416e79:	adc    DWORD PTR [eax-0x5cba3121],0x5013f904
  416e83:	stc    
  416e84:	shl    DWORD PTR [edx+ebp*2-0x51],cl
  416e88:	and    dl,BYTE PTR [esi+0x44]
  416e8b:	retf   0xcaae
  416e8e:	call   0xadfdfc1
  416e93:	xor    BYTE PTR [ecx+0x4c],dl
  416e96:	push   ds
  416e97:	jmp    0xa0233cf7
  416e9c:	sbb    al,0x6c
  416e9e:	retf   
  416e9f:	xchg   esp,eax
  416ea0:	push   esp
  416ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ea2:	mov    dh,0x34
  416ea4:	inc    ecx
  416ea5:	scas   al,BYTE PTR es:[edi]
  416ea6:	add    DWORD PTR [eax-0x1f],eax
  416ea9:	jae    0x416f01
  416eab:	cld    
  416eac:	out    dx,al
  416ead:	sbb    al,0x8f
  416eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eb0:	outs   dx,BYTE PTR ds:[esi]
  416eb1:	adc    edx,DWORD PTR [eax]
  416eb3:	das    
  416eb4:	inc    esi
  416eb5:	scas   eax,DWORD PTR es:[edi]
  416eb6:	hlt    
  416eb7:	into   
  416eb8:	cli    
  416eb9:	jbe    0x416e44
  416ebb:	ja     0x416f23
  416ebd:	inc    ebp
  416ebe:	mov    edi,0x9995adb7
  416ec3:	adc    dl,ah
  416ec5:	add    eax,0xa4d6ebc9
  416eca:	sbb    esp,ebx
  416ecc:	(bad)  
  416ecd:	xchg   edx,eax
  416ece:	out    dx,al
  416ecf:	add    ecx,ebp
  416ed1:	push   edx
  416ed2:	mov    cr2,edx
  416ed5:	inc    ecx
  416ed6:	aaa    
  416ed7:	dec    esi
  416ed8:	fdiv   DWORD PTR es:[ecx+0x61cec483]
  416edf:	fld    TBYTE PTR [esi]
  416ee1:	std    
  416ee2:	cmp    al,BYTE PTR [esi-0x48d29e0b]
  416ee8:	data16 or al,0x7f
  416eeb:	or     edx,DWORD PTR [esi]
  416eed:	sbb    eax,0x3bce4be
  416ef2:	fst    DWORD PTR [ebp+0x757c6662]
  416ef8:	not    BYTE PTR [edx+eax*8-0x11]
  416efc:	imul   eax,DWORD PTR [esi-0xd111400],0x32c73cb
  416f06:	lock sub ecx,DWORD PTR ss:[edi-0x1]
  416f0b:	jnp    0x416f0b
  416f0d:	jmp    0x416f5f
  416f0f:	ret    
  416f10:	sahf   
  416f11:	in     al,dx
  416f12:	imul   ebp,DWORD PTR [esi-0x30b1abe3],0x8ed19265
  416f1c:	inc    esp
  416f1d:	cwde   
  416f1e:	pop    ds
  416f1f:	cdq    
  416f20:	and    DWORD PTR [ecx*2-0x5700b519],edx
  416f27:	repz mov ch,0x29
  416f2a:	call   0xbc77d55b
  416f2f:	je     0x416edc
  416f31:	jae    0x416f99
  416f33:	xor    BYTE PTR [edi+0x50],al
  416f36:	mov    ds:0xa2bbce61,eax
  416f3b:	into   
  416f3c:	gs sbb cl,cl
  416f3f:	cmp    BYTE PTR ds:0x5b325a7f,dh
  416f45:	inc    esi
  416f46:	xor    al,0x93
  416f48:	mov    BYTE PTR [ebp+0x634a82a0],cl
  416f4e:	inc    esp
  416f4f:	pslld  mm1,mm4
  416f52:	sub    dl,BYTE PTR [edi+0x1a]
  416f55:	imul   BYTE PTR [ebx-0x19]
  416f58:	inc    edi
  416f59:	(bad)  [edx+0x7a27cbe5]
  416f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f60:	mov    esp,0xc38e0130
  416f65:	es push esp
  416f67:	pop    ds
  416f68:	sbb    bl,BYTE PTR [edi-0x51f1b762]
  416f6e:	dec    esi
  416f6f:	adc    edx,DWORD PTR [ebx]
  416f71:	jecxz  0x416fa0
  416f73:	clc    
  416f74:	sbb    al,0xa8
  416f76:	pushf  
  416f77:	and    cl,al
  416f79:	mov    edx,DWORD PTR [eax+0x60]
  416f7c:	call   0xe70ab2fb
  416f81:	inc    eax
  416f82:	fwait
  416f83:	inc    ebx
  416f84:	sbb    DWORD PTR [edx+0x41],0xd9db2b25
  416f8b:	daa    
  416f8c:	dec    esp
  416f8d:	adc    eax,0xfe3595f2
  416f92:	or     eax,esi
  416f94:	mov    al,ds:0x94e10a84
  416f99:	mov    eax,0xeda21f17
  416f9e:	clc    
  416f9f:	(bad)  
  416fa0:	jp     0x416f75
  416fa2:	mov    dh,0x7c
  416fa4:	mov    dh,0xb4
  416fa6:	xor    ebx,DWORD PTR [ebp+0x56]
  416fa9:	scas   eax,DWORD PTR es:[edi]
  416faa:	fcomp  st(2)
  416fac:	jl     0x416f6f
  416fae:	xlat   BYTE PTR ds:[ebx]
  416faf:	cmp    bh,BYTE PTR [ecx]
  416fb1:	cs dec ebx
  416fb3:	cdq    
  416fb4:	retf   0xcb4d
  416fb7:	adc    bh,BYTE PTR [esi-0x22]
  416fba:	(bad)  
  416fbb:	mov    dh,0x45
  416fbd:	or     al,0x89
  416fbf:	jp     0x417023
  416fc1:	sbb    DWORD PTR [edi],edx
  416fc3:	mov    eax,0xeaf72a62
  416fc8:	fmul   st(2),st
  416fca:	add    DWORD PTR [eax+0x42090ae],edx
  416fd0:	popa   
  416fd1:	fisttp WORD PTR [ecx-0x10]
  416fd4:	cvtps2pd xmm2,xmm1
  416fd7:	retf   
  416fd8:	in     al,dx
  416fd9:	jg     0x416f77
  416fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fdc:	mov    dh,0xf2
  416fde:	add    DWORD PTR [esi+0x13],edx
  416fe1:	sbb    ch,bl
  416fe3:	sbb    BYTE PTR [edi],al
  416fe5:	xor    DWORD PTR [edx+0x58a9620e],esp
  416feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fec:	les    edi,FWORD PTR [edi+0x64]
  416fef:	xor    bl,0x37
  416ff2:	mov    ?,WORD PTR [esp+eax*4+0x48fc3ad1]
  416ff9:	retf   0x7a60
  416ffc:	xor    eax,0x65999c1d
  417001:	stc    
  417002:	adc    esp,DWORD PTR [eax+esi*2]
  417005:	dec    edi
  417006:	sbb    BYTE PTR [edx],cl
  417008:	sbb    DWORD PTR [ecx+eax*2-0xf],0xbe772d96
  417010:	cmp    dl,dh
  417012:	push   edx
  417013:	loopne 0x416ffd
  417015:	mov    edi,0x552817a
  41701a:	lods   al,BYTE PTR ds:[esi]
  41701b:	jno    0x417099
  41701d:	add    al,BYTE PTR [edi-0x38]
  417020:	fisub  WORD PTR [edx]
  417022:	push   edi
  417023:	push   0xbb2ece9c
  417028:	mov    esi,0xb53dbd8b
  41702d:	ror    DWORD PTR [edi-0x63558f46],1
  417033:	xchg   esp,eax
  417034:	data16 hlt 
  417036:	fst    QWORD PTR [eax+0x32]
  417039:	jge    0x417068
  41703b:	mov    eax,ds:0xd28a23ed
  417040:	sahf   
  417041:	arpl   di,bx
  417043:	(bad)  
  417044:	cli    
  417045:	jbe    0x41700a
  417047:	push   edx
  417048:	mov    gs,WORD PTR [ebx-0x39480364]
  41704e:	push   ss
  41704f:	mov    esi,0x7a1fdad8
  417054:	shr    DWORD PTR [ecx],0x8d
  417057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417058:	or     esi,DWORD PTR [ecx-0x46]
  41705b:	mov    DWORD PTR [esi-0x5c],eax
  41705e:	lods   al,BYTE PTR ds:[esi]
  41705f:	in     al,0xd4
  417061:	jl     0x41703b
  417063:	or     al,0xba
  417065:	dec    esp
  417066:	xor    BYTE PTR [ebx],ah
  417068:	lock mov esp,0x86117b36
  41706e:	inc    ecx
  41706f:	sub    BYTE PTR [eax+0x3bc8aa87],bh
  417075:	add    BYTE PTR [ebx+ecx*1+0x10],dl
  417079:	xor    BYTE PTR [edx],ch
  41707b:	cmc    
  41707c:	dec    esp
  41707d:	cmp    DWORD PTR [ebx+0x13209f3a],edi
  417083:	mov    BYTE PTR [edi-0x10],ch
  417086:	jne    0x41704a
  417088:	rcr    BYTE PTR [edx-0x50],1
  41708b:	sbb    eax,DWORD PTR [eax-0x720ed359]
  417091:	sbb    eax,0x2a3522e0
  417096:	jbe    0x417036
  417098:	mov    edi,0x61d6ba3
  41709d:	(bad)  
  41709e:	mov    edi,0x15827fc1
  4170a3:	xlat   BYTE PTR ds:[ebx]
  4170a4:	add    BYTE PTR [edi+edi*8],al
  4170a7:	aas    
  4170a8:	sbb    BYTE PTR [edx+0x30],0xe2
  4170ac:	stos   DWORD PTR es:[edi],eax
  4170ad:	inc    edi
  4170ae:	mov    ah,0xd1
  4170b0:	icebp  
  4170b1:	popf   
  4170b2:	popa   
  4170b3:	outs   dx,BYTE PTR ds:[esi]
  4170b4:	dec    ecx
  4170b5:	bswap  esi
  4170b7:	jp     0x4170ec
  4170b9:	jle    0x4170b4
  4170bb:	jne    0x4170d7
  4170bd:	cmp    ch,0x8c
  4170c0:	in     eax,0x29
  4170c2:	retf   
  4170c3:	fsub   QWORD PTR [edx+0x1aff0b86]
  4170c9:	mov    al,0x68
  4170cb:	test   ah,bh
  4170cd:	test   ah,bl
  4170cf:	popa   
  4170d0:	mov    ds:0xf3537eac,al
  4170d5:	out    dx,al
  4170d6:	js     0x4170da
  4170d8:	xor    eax,0xc2d4599d
  4170dd:	cli    
  4170de:	dec    ebx
  4170df:	outs   dx,BYTE PTR ds:[esi]
  4170e0:	into   
  4170e1:	push   esi
  4170e2:	aad    0x9a
  4170e4:	and    ch,BYTE PTR [eax]
  4170e6:	sbb    eax,0xfde6cec3
  4170eb:	mov    eax,ds:0xad577a18
  4170f0:	ror    DWORD PTR [edi+0x2a],0x52
  4170f4:	call   0x7526a634
  4170f9:	iret   
  4170fa:	outs   dx,DWORD PTR ds:[esi]
  4170fb:	loopne 0x4170de
  4170fd:	lds    ebp,FWORD PTR [edi]
  4170ff:	pop    esi
  417100:	(bad)  
  417101:	hlt    
  417102:	mov    ebp,0x501daa5d
  417107:	ja     0x417127
  417109:	rol    BYTE PTR [eax+0x4b512131],1
  41710f:	jmp    0xbcc814f5
  417114:	push   edi
  417115:	or     al,BYTE PTR [edx]
  417117:	ins    DWORD PTR es:[edi],dx
  417118:	dec    edx
  417119:	push   eax
  41711a:	mov    al,ds:0x81677df0
  41711f:	or     al,bl
  417121:	enter  0xc908,0x26
  417125:	mov    ecx,0xf40f479e
  41712a:	sbb    BYTE PTR [ebx+edi*8-0x4ae61374],ah
  417131:	ficomp DWORD PTR [edi+0x5c03795c]
  417137:	jecxz  0x417166
  417139:	es xchg esi,esp
  41713c:	iret   
  41713d:	and    eax,0x99d68adb
  417142:	dec    ecx
  417143:	mov    ds:0xde4d8944,al
  417148:	sbb    bh,BYTE PTR [ebp-0x3b1330f]
  41714e:	loope  0x41718a
  417150:	inc    ebp
  417151:	mov    bh,0x98
  417153:	add    BYTE PTR [ebp+edi*4-0x6e],bh
  417157:	(bad)  
  417158:	dec    esi
  417159:	mov    edx,0x372a4cc0
  41715e:	pop    ds
  41715f:	mov    dl,0xce
  417161:	(bad)  
  417162:	enter  0x5479,0xda
  417166:	xor    bh,BYTE PTR [ecx+0x2d]
  417169:	jmp    0x98e451c5
  41716e:	mov    WORD PTR [ebp-0x62],ss
  417171:	test   eax,0x186b38a2
  417176:	inc    esi
  417177:	repnz and BYTE PTR [si+0x77],cl
  41717c:	push   esp
  41717d:	xor    BYTE PTR [eax+0x57],dl
  417180:	or     BYTE PTR [eax],0x3a
  417183:	in     eax,dx
  417184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417185:	sub    al,BYTE PTR [edx+0x1a6b401f]
  41718b:	adc    al,dh
  41718d:	pop    ds
  41718e:	aaa    
  41718f:	out    0x2b,eax
  417191:	inc    edi
  417192:	pop    esi
  417193:	addr16 jmp 0x4573:0xa210a22c
  41719b:	js     0x4171ca
  41719d:	push   esp
  41719e:	aaa    
  41719f:	rcr    DWORD PTR [esi+0x34],cl
  4171a2:	iret   
  4171a3:	push   edi
  4171a4:	retf   
  4171a5:	frstor ds:0xdcf2787d
  4171ab:	push   edi
  4171ac:	xor    esp,DWORD PTR [eax+0xb8fdc87]
  4171b2:	add    ebx,DWORD PTR [ebx-0x1a]
  4171b5:	mov    cs,esi
  4171b7:	inc    esp
  4171b8:	sbb    al,0xad
  4171ba:	iret   
  4171bb:	(bad)  
  4171bc:	rcl    BYTE PTR [edi],0x26
  4171bf:	(bad)  
  4171c1:	cmp    BYTE PTR [edx],ah
  4171c3:	mov    edx,0x77486cf9
  4171c8:	push   esi
  4171c9:	(bad)  
  4171ca:	(bad)  
  4171cb:	out    dx,al
  4171cc:	mov    ds:0x9ec9867e,al
  4171d1:	pop    ecx
  4171d2:	dec    eax
  4171d3:	sub    ebp,DWORD PTR [esi]
  4171d5:	test   BYTE PTR [ecx+0x7f7076f2],cl
  4171db:	sub    esp,DWORD PTR [edx+edi*4]
  4171de:	push   edx
  4171df:	inc    edi
  4171e0:	or     edx,DWORD PTR [edx]
  4171e2:	adc    al,0x9b
  4171e4:	shl    BYTE PTR [edx-0x26],cl
  4171e7:	adc    al,0xf4
  4171e9:	call   0xbb0fc19a
  4171ee:	inc    esi
  4171ef:	ficom  WORD PTR [eax+eiz*1+0x2c]
  4171f3:	in     eax,0x4c
  4171f5:	call   0x9490152f
  4171fa:	pop    esi
  4171fb:	ins    DWORD PTR es:[edi],dx
  4171fc:	mov    al,ds:0xdc928a98
  417201:	jae    0x4171f2
  417203:	ja     0x417243
  417205:	stos   BYTE PTR es:[edi],al
  417206:	cwde   
  417207:	dec    esp
  417208:	movntps XMMWORD PTR [esi+esi*2+0x24b69d72],xmm1
  417210:	ror    BYTE PTR [edi],0xcd
  417213:	aam    0x75
  417215:	add    al,0x1d
  417217:	nop
  417218:	inc    ecx
  417219:	aas    
  41721a:	xchg   ecx,eax
  41721b:	pop    ecx
  41721c:	ss test cl,bh
  41721f:	stc    
  417220:	lods   eax,DWORD PTR ds:[esi]
  417221:	xchg   ebp,eax
  417222:	dec    ebp
  417223:	call   0xd1ae:0xbb19b5f3
  41722a:	stos   DWORD PTR es:[edi],eax
  41722b:	loop   0x4171da
  41722d:	(bad)  
  41722e:	int3   
  41722f:	outs   dx,DWORD PTR ds:[esi]
  417230:	xchg   ecx,eax
  417231:	inc    eax
  417232:	(bad)  ds:0xd8e4f065
  417238:	ins    BYTE PTR es:[edi],dx
  417239:	sbb    eax,0x2706946c
  41723e:	(bad)  
  41723f:	cmc    
  417240:	push   es
  417241:	xchg   esi,eax
  417242:	in     al,dx
  417243:	jae    0x4171fb
  417245:	iret   
  417246:	retf   0x230f
  417249:	jne    0x417265
  41724b:	test   al,0x9e
  41724d:	int    0xc9
  41724f:	scas   eax,DWORD PTR es:[edi]
  417250:	dec    esi
  417251:	leave  
  417252:	xchg   esi,eax
  417253:	dec    ebp
  417254:	in     eax,0x72
  417256:	pop    ss
  417257:	mov    dh,0x32
  417259:	adc    eax,0xd72bc3e4
  41725e:	inc    edi
  41725f:	and    ebp,ecx
  417261:	push   esp
  417262:	mov    dl,0x43
  417264:	in     eax,dx
  417265:	or     eax,0xba2d7175
  41726a:	or     ah,dl
  41726c:	jmp    0xe024:0x61986c14
  417273:	mov    esp,0x395108c4
  417278:	mov    ebx,0x10b2f27d
  41727d:	sbb    BYTE PTR [ebp-0x4],al
  417280:	xlat   BYTE PTR ds:[ebx]
  417281:	ret    
  417282:	mov    BYTE PTR [esi-0x79657320],dh
  417288:	pop    eax
  417289:	dec    ecx
  41728a:	xlat   BYTE PTR ds:[ebx]
  41728b:	adc    eax,0x263a927d
  417290:	popf   
  417291:	arpl   sp,di
  417293:	jl     0x4172d3
  417295:	mov    ds:0x2e3c6062,eax
  41729a:	add    eax,0x4f639c4e
  41729f:	sub    BYTE PTR [edx],ch
  4172a1:	call   0xcf9e:0xa2a62e35
  4172a8:	push   0xffffff89
  4172aa:	(bad)  
  4172ab:	push   ds
  4172ac:	cmp    DWORD PTR [edi+0x77],edx
  4172af:	cli    
  4172b0:	je     0x4172d6
  4172b2:	push   edx
  4172b3:	test   edi,edx
  4172b5:	(bad)  [ebx+0x7987704a]
  4172bb:	ror    DWORD PTR [esi+0x6f],1
  4172be:	bound  ebx,QWORD PTR [ebp-0x7e]
  4172c1:	aam    0xaa
  4172c3:	jle    0x41725f
  4172c5:	add    ah,BYTE PTR [esi+0x794a4fbf]
  4172cb:	hlt    
  4172cc:	fst    DWORD PTR [esi-0x29]
  4172cf:	push   edx
  4172d0:	jge    0x417254
  4172d2:	inc    ebp
  4172d3:	xchg   ebp,eax
  4172d4:	test   eax,0xdd6635e3
  4172d9:	xlat   BYTE PTR ds:[ebx]
  4172da:	push   esp
  4172db:	and    ah,cl
  4172dd:	or     BYTE PTR [esi+0x1],ch
  4172e0:	jmp    0xd118bd9f
  4172e5:	fcom   QWORD PTR [esi]
  4172e7:	nop
  4172e8:	push   ebp
  4172e9:	xor    dl,BYTE PTR [ebx-0x5244dca7]
  4172ef:	sti    
  4172f0:	lea    ecx,[esp+ebp*4+0x78]
  4172f4:	ins    DWORD PTR es:[edi],dx
  4172f5:	mov    ah,0x55
  4172f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172f8:	xchg   ecx,eax
  4172f9:	ficomp WORD PTR [ebp+0x3]
  4172fc:	(bad)  
  4172fd:	in     eax,0x3f
  4172ff:	cmp    al,0x1f
  417301:	mov    ebp,0x5f87ffe4
  417306:	pop    ebx
  417307:	lahf   
  417308:	aam    0x79
  41730a:	sbb    BYTE PTR [esi+0x1b579865],0x7d
  417311:	out    0x2e,al
  417313:	or     eax,0x24cde85f
  417318:	or     bh,dh
  41731a:	into   
  41731b:	jmp    0x5343:0x78562
  417322:	cmc    
  417323:	cmc    
  417324:	pop    ebp
  417325:	xchg   edi,eax
  417326:	xor    cl,cl
  417328:	mov    esi,0x1cc478e9
  41732d:	shr    ebx,cl
  41732f:	out    dx,eax
  417330:	fld    QWORD PTR [edi]
  417332:	xor    al,0x2b
  417334:	cli    
  417335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417336:	cmp    al,0x76
  417338:	out    0x99,al
  41733a:	xor    al,0xb6
  41733c:	or     ah,0xe3
  41733f:	rcl    DWORD PTR [ebp+0x77],0xac
  417343:	inc    ebp
  417344:	cwde   
  417345:	and    eax,0x5b495d16
  41734a:	pop    ebp
  41734b:	getsec 
  41734d:	fcomp  QWORD PTR [eax+ebx*1]
  417350:	push   cs
  417351:	push   edx
  417352:	pop    es
  417353:	arpl   WORD PTR [edi-0x1a],dx
  417356:	scas   eax,DWORD PTR es:[edi]
  417357:	mov    esi,0x81028c56
  41735c:	test   cl,dl
  41735e:	xor    al,0xa9
  417360:	sbb    cl,BYTE PTR [ebp-0x1bf2aab]
  417366:	adc    eax,0x969e56e
  41736b:	pop    esi
  41736c:	adc    al,BYTE PTR [edx-0x6b3d86df]
  417372:	call   0x62c5affd
  417377:	sub    ebp,DWORD PTR [edx+0x36b6a07a]
  41737d:	out    0x60,eax
  41737f:	cld    
  417380:	(bad)  
  417382:	xor    al,0xa6
  417384:	test   edi,ebp
  417386:	imul   edi,DWORD PTR [edx-0x67d70132],0xa884995b
  417390:	xor    BYTE PTR [edx],bl
  417392:	sti    
  417393:	jno    0x4173b3
  417395:	into   
  417396:	in     al,dx
  417397:	(bad)  
  417399:	fnstenv [ecx+ebp*2+0x49]
  41739d:	mov    esi,0xd1d26765
  4173a2:	ins    BYTE PTR es:[edi],dx
  4173a3:	and    eax,0xcf44eaab
  4173a8:	push   edi
  4173a9:	dec    ebp
  4173aa:	jns    0x4173f8
  4173ac:	in     eax,0x9
  4173ae:	cmp    ah,BYTE PTR [esi+0x3c]
  4173b1:	jg     0x4173a3
  4173b3:	pop    esp
  4173b4:	push   eax
  4173b5:	pop    esp
  4173b6:	lods   al,BYTE PTR ds:[esi]
  4173b7:	(bad)  
  4173b8:	stc    
  4173b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173ba:	jnp    0x41742f
  4173bc:	div    DWORD PTR [ebp+0x37253c78]
  4173c2:	push   ds
  4173c3:	add    al,0xd0
  4173c5:	dec    edx
  4173c6:	mov    ch,0x37
  4173c8:	dec    eax
  4173c9:	or     eax,0x7f87dab2
  4173ce:	pop    es
  4173cf:	retf   
  4173d0:	pop    ebp
  4173d1:	ds pusha 
  4173d3:	icebp  
  4173d4:	imul   edi,DWORD PTR [ebp-0x76],0x33
  4173d8:	dec    eax
  4173d9:	je     0x417393
  4173db:	jno    0x417454
  4173dd:	out    0xf1,eax
  4173df:	cmp    esp,DWORD PTR [edi+0x16e301d1]
  4173e5:	sbb    BYTE PTR [edi-0x6b7080f0],0xc0
  4173ec:	test   al,0x35
  4173ee:	in     eax,0x8c
  4173f0:	mov    cl,BYTE PTR [edi-0x12]
  4173f3:	sbb    eax,0x733e1ada
  4173f8:	lods   eax,DWORD PTR ds:[esi]
  4173f9:	popf   
  4173fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173fb:	xor    cl,BYTE PTR [esi-0x54c46cc]
  417401:	xor    ah,al
  417403:	and    eax,ecx
  417405:	stc    
  417406:	xchg   ebp,eax
  417407:	add    cl,ch
  417409:	and    edx,DWORD PTR [ebp+ebp*8+0x432ef966]
  417410:	enter  0xc846,0x48
  417414:	pop    edx
  417415:	(bad)  
  417416:	jge    0x41744c
  417418:	mov    ebp,0x9496073e
  41741d:	xor    BYTE PTR [eax-0x74],0x5d
  417421:	js     0x417442
  417423:	mov    al,0x7d
  417425:	shr    DWORD PTR [ebp-0x2f7a588],0x40
  41742c:	inc    eax
  41742d:	jns    0x4173e8
  41742f:	scas   eax,DWORD PTR es:[edi]
  417430:	imul   esi,DWORD PTR [ebp+0x7389bb4e],0xe
  417437:	and    esi,DWORD PTR [esi]
  417439:	sub    eax,0x5d4337bf
  41743e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41743f:	or     DWORD PTR [ebx],esp
  417441:	mov    esp,0xa4b6d4a1
  417446:	sbb    BYTE PTR [eax-0x1c],bh
  417449:	inc    eax
  41744a:	or     dl,BYTE PTR [ebx+0x5ac68851]
  417450:	fldenv [esi+0x2874fddf]
  417456:	mov    esi,0x150f8d1
  41745b:	sahf   
  41745c:	jle    0x41744d
  41745e:	add    BYTE PTR [edx-0x3c],0x5a
  417462:	cmp    dh,BYTE PTR [ebx+0x60]
  417465:	arpl   WORD PTR [ebx-0x25be6396],ax
  41746b:	and    eax,DWORD PTR [edx+0xf]
  41746e:	pusha  
  41746f:	xchg   BYTE PTR [ecx],bl
  417471:	popf   
  417472:	cwde   
  417473:	cld    
  417474:	leave  
  417475:	add    al,0xba
  417477:	sub    edx,ebx
  417479:	mov    ebx,0x212d77fb
  41747e:	pop    es
  41747f:	mov    al,BYTE PTR [esi-0x67]
  417482:	mov    bl,0x0
  417484:	pushf  
  417485:	dec    ecx
  417486:	push   esi
  417487:	popw   es
  417489:	mov    ebp,DWORD PTR [ecx]
  41748b:	mov    al,ds:0x9f7b0a63
  417490:	mov    eax,0xd02decb3
  417495:	stc    
  417496:	dec    esi
  417497:	sbb    al,0xe
  417499:	popa   
  41749a:	rol    BYTE PTR [eax+0x27788783],cl
  4174a0:	pop    ebp
  4174a1:	jno    0x41744d
  4174a3:	adc    BYTE PTR [ecx-0x3b621ae3],bl
  4174a9:	push   esi
  4174aa:	sub    al,0x17
  4174ac:	outs   dx,BYTE PTR ss:[esi]
  4174ae:	jno    0x417495
  4174b0:	push   esp
  4174b1:	sbb    bh,BYTE PTR [edi+0x7e]
  4174b4:	js     0x41743b
  4174b6:	xchg   ebp,eax
  4174b7:	test   eax,0xf007f52c
  4174bc:	pushf  
  4174bd:	scas   eax,DWORD PTR es:[edi]
  4174be:	mov    bh,0x81
  4174c0:	xlat   BYTE PTR ds:[ebx]
  4174c1:	aaa    
  4174c2:	push   ecx
  4174c3:	jmp    0x629:0x799d02a9
  4174ca:	push   edi
  4174cb:	xor    al,BYTE PTR [ecx+0x52]
  4174ce:	scas   eax,DWORD PTR es:[edi]
  4174cf:	or     DWORD PTR [ecx+eax*1],0x38
  4174d3:	fwait
  4174d4:	out    dx,al
  4174d5:	(bad)  
  4174d6:	jbe    0x4174ed
  4174d8:	mov    eax,0xdf9b5a76
  4174dd:	cwde   
  4174de:	retf   0x98a1
  4174e1:	fild   WORD PTR [ebx]
  4174e3:	dec    edi
  4174e4:	mov    dl,0xc3
  4174e6:	retf   
  4174e7:	inc    ecx
  4174e8:	(bad)  
  4174e9:	out    0x83,al
  4174eb:	sub    edx,DWORD PTR [edx+0x7258b6b1]
  4174f1:	mov    edx,0x82c277be
  4174f6:	xor    al,0x26
  4174f8:	int    0x79
  4174fa:	jb     0x4174dc
  4174fc:	push   ds
  4174fd:	in     eax,dx
  4174fe:	rcr    al,cl
  417500:	dec    eax
  417501:	(bad)  
  417503:	sbb    ecx,DWORD PTR [ebx+0x764a8ab0]
  417509:	jmp    0xb9bd:0xdc0f5c9a
  417510:	mov    ds:0xe47687f0,al
  417515:	mov    ch,0x39
  417517:	mov    eax,ds:0x147d276c
  41751c:	call   0x46a8ba60
  417521:	fcom   DWORD PTR [edx-0x7a]
  417524:	mov    ah,0xa2
  417526:	data16 scas al,BYTE PTR es:[edi]
  417528:	pop    si
  41752a:	ins    BYTE PTR es:[edi],dx
  41752b:	nop
  41752c:	lahf   
  41752d:	ins    BYTE PTR es:[edi],dx
  41752e:	fstp   QWORD PTR [edi]
  417530:	in     eax,dx
  417531:	out    dx,al
  417532:	ins    BYTE PTR es:[edi],dx
  417533:	out    dx,al
  417534:	rcr    dl,cl
  417536:	setns  BYTE PTR [ecx]
  417539:	mov    es,WORD PTR [esi+0x6a]
  41753c:	lods   eax,DWORD PTR ds:[esi]
  41753d:	mov    ebx,0xbea439cf
  417542:	inc    eax
  417543:	mov    edx,0x9c5f4a7e
  417548:	inc    edx
  417549:	fs push esp
  41754b:	aam    0xd2
  41754d:	leave  
  41754e:	adc    eax,0xbea2fc3b
  417553:	jb     0x4174d7
  417555:	je     0x417575
  417557:	xchg   BYTE PTR [ebx-0x1429f9ce],al
  41755d:	shl    BYTE PTR [ebx],1
  41755f:	pop    edx
  417560:	jmp    0x989bd686
  417565:	mov    al,ds:0x741de430
  41756a:	imul   esi,ebx,0xffffff96
  41756d:	les    edi,FWORD PTR [esp+esi*4-0x2e48408b]
  417574:	stos   DWORD PTR es:[edi],eax
  417575:	cmp    eax,0x910669dc
  41757a:	xchg   DWORD PTR [edi+0x48],ebp
  41757d:	cmp    eax,0xed67565f
  417582:	add    DWORD PTR [esi-0x3e],esi
  417585:	pop    ebp
  417586:	push   eax
  417587:	(bad)  
  417588:	addr16 dec ebp
  41758a:	retf   0xeceb
  41758d:	jecxz  0x417575
  41758f:	stos   BYTE PTR es:[edi],al
  417590:	das    
  417591:	sbb    ebp,DWORD PTR [esi+0x57]
  417594:	xor    al,0x8
  417596:	or     esi,ebp
  417598:	pop    ds
  417599:	add    DWORD PTR [esi+edi*1-0x3f],0xe8339171
  4175a1:	test   al,0x3d
  4175a3:	pop    es
  4175a4:	mov    dl,0xae
  4175a6:	add    ebp,DWORD PTR [esi-0x5d]
  4175a9:	out    dx,eax
  4175aa:	push   cs
  4175ab:	dec    eax
  4175ac:	lahf   
  4175ad:	adc    ebp,DWORD PTR [ebp+0x42]
  4175b0:	lock out 0xf4,al
  4175b3:	sub    ebx,DWORD PTR [ebp+0x57]
  4175b6:	dec    esp
  4175b7:	dec    esi
  4175b8:	inc    ebx
  4175b9:	xchg   esi,eax
  4175ba:	rcr    cl,0x34
  4175bd:	retf   0xf2a7
  4175c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175c1:	xchg   esp,eax
  4175c2:	push   edx
  4175c3:	popa   
  4175c4:	xchg   ebx,eax
  4175c5:	and    eax,0xbb69e57f
  4175ca:	jb     0x4175bb
  4175cc:	jl     0x417581
  4175ce:	leave  
  4175cf:	jmp    0x41763f
  4175d1:	mov    ebp,0x1cf0cb1f
  4175d6:	fild   WORD PTR [esi-0x39]
  4175d9:	fistp  DWORD PTR [eax]
  4175db:	sbb    esp,esp
  4175dd:	xor    al,BYTE PTR [edi-0x5e]
  4175e0:	sbb    DWORD PTR [edx+0x58],ecx
  4175e3:	mov    bx,0xae6d
  4175e7:	fwait
  4175e8:	sar    esp,1
  4175ea:	rcr    BYTE PTR [edx-0x7792876],0x74
  4175f1:	in     eax,dx
  4175f2:	in     al,0xd1
  4175f4:	lds    eax,FWORD PTR [ebp-0x52]
  4175f7:	les    ebp,FWORD PTR [ebx+0x55]
  4175fa:	clc    
  4175fb:	sub    dh,BYTE PTR [eax+0x7e]
  4175fe:	fwait
  4175ff:	mov    ebp,0x52ad3b75
  417604:	shl    BYTE PTR [ebx],cl
  417606:	jmp    0x4175b8
  417608:	in     eax,dx
  417609:	cli    
  41760a:	imul   ebp,esp,0xffffffc6
  41760d:	(bad)  
  41760f:	in     al,0x37
  417611:	mov    ecx,0xfcf12b5
  417616:	or     eax,0x4e5674d5
  41761b:	pop    ebp
  41761c:	arpl   WORD PTR [edi+eax*2+0x4e],dx
  417620:	jbe    0x417679
  417622:	aas    
  417623:	fsqrt  
  417625:	mov    esi,0xeb25f8b2
  41762a:	adc    ah,ch
  41762c:	iret   
  41762d:	push   ebx
  41762e:	(bad)  
  41762f:	stc    
  417630:	pop    ds
  417631:	push   edi
  417632:	(bad)  [ebx+0x47]
  417635:	fist   DWORD PTR [ebx]
  417637:	jmp    0xcb185af9
  41763c:	fld    TBYTE PTR [ecx+ecx*4-0x3e]
  417640:	pop    ebp
  417641:	jle    0x41761d
  417643:	xchg   esi,eax
  417644:	dec    ebx
  417645:	rol    DWORD PTR [edi+ebp*1],1
  417648:	in     eax,0xc8
  41764a:	(bad)  [edx+0xebab2c6]
  417650:	xchg   esp,eax
  417651:	retf   0x498d
  417654:	mov    bl,0xd1
  417656:	sub    DWORD PTR [edx],ebx
  417658:	add    ecx,DWORD PTR [esi+0x133b2508]
  41765e:	sbb    dl,BYTE PTR [edx+0x22cc5090]
  417664:	dec    edi
  417665:	adc    BYTE PTR [edi],0xa2
  417668:	cs nop
  41766a:	pop    eax
  41766b:	jno    0x4176be
  41766d:	adc    dl,cl
  41766f:	push   DWORD PTR [esp+ebp*2]
  417672:	je     0x417666
  417674:	xchg   edx,eax
  417675:	inc    ecx
  417676:	jns    0x417632
  417678:	test   BYTE PTR [edx+0x2268bb56],0x93
  41767f:	xor    DWORD PTR [ecx-0x5a6bc92a],esp
  417685:	push   ecx
  417686:	xchg   ebx,eax
  417687:	jns    0x41766e
  417689:	pop    edi
  41768a:	push   edx
  41768b:	mov    ds:0xa6908676,al
  417690:	xchg   edx,eax
  417691:	fnsave [ebx]
  417693:	jbe    0x41763d
  417695:	dec    eax
  417696:	jmp    0x41765e
  417698:	scas   eax,DWORD PTR es:[edi]
  417699:	aam    0xc5
  41769b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41769c:	or     eax,0x6691e8b0
  4176a1:	and    edx,DWORD PTR ss:[edx]
  4176a4:	hlt    
  4176a5:	sahf   
  4176a6:	and    BYTE PTR [edx+0x35],0xab
  4176aa:	daa    
  4176ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176ac:	out    dx,eax
  4176ad:	sbb    ah,BYTE PTR [eax]
  4176af:	pop    edx
  4176b0:	cs jle 0x4176c0
  4176b3:	mov    ebp,0x53c2573c
  4176b8:	cli    
  4176b9:	jmp    0x3e0f2620
  4176be:	mov    ds:0x41b32df6,eax
  4176c3:	jne    0x417732
  4176c5:	xlat   BYTE PTR ds:[ebx]
  4176c6:	jns    0x4176a8
  4176c8:	add    dl,dl
  4176ca:	aam    0xf0
  4176cc:	sbb    bh,0xb7
  4176cf:	push   edi
  4176d0:	pop    ebp
  4176d1:	pop    esi
  4176d2:	fs hlt 
  4176d4:	cld    
  4176d5:	mov    esp,0x5858a0f8
  4176da:	mov    edi,0x35fa5955
  4176df:	call   0x972b202e
  4176e4:	adc    BYTE PTR [esi-0x7f],ah
  4176e7:	lods   eax,DWORD PTR ds:[esi]
  4176e8:	cmp    BYTE PTR [edi+ebx*8+0x78],bl
  4176ec:	fld    DWORD PTR [esi-0x51]
  4176ef:	sbb    ebp,ecx
  4176f1:	js     0x4176bd
  4176f3:	aaa    
  4176f4:	dec    edx
  4176f5:	scas   al,BYTE PTR es:[edi]
  4176f6:	fwait
  4176f7:	mov    al,0xed
  4176f9:	or     al,0x26
  4176fb:	data16 jle 0x41769f
  4176fe:	or     dl,bl
  417700:	jp     0x4176ea
  417702:	gs iret 
  417704:	sub    ch,BYTE PTR [ebx]
  417706:	mov    cl,0x7c
  417708:	in     al,dx
  417709:	ins    DWORD PTR es:[edi],dx
  41770a:	and    BYTE PTR [eax-0x2ffcc58a],cl
  417710:	xchg   DWORD PTR [ebx-0x31],ebp
  417713:	shr    DWORD PTR [ecx+eax*2-0x35],1
  417717:	outs   dx,DWORD PTR ds:[esi]
  417718:	mov    edi,0xb566917c
  41771d:	clc    
  41771e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41771f:	jno    0x417728
  417721:	xor    dh,BYTE PTR [eiz*8+0x5daca162]
  417728:	clc    
  417729:	int3   
  41772a:	popf   
  41772b:	(bad)  
  41772c:	call   0xedc7ebae
  417731:	mov    ch,0xc
  417733:	pop    ebp
  417734:	jmp    0xddde783c
  417739:	pop    eax
  41773a:	shl    BYTE PTR [ecx],1
  41773c:	js     0x4176c2
  41773e:	dec    edx
  41773f:	push   eax
  417740:	aas    
  417741:	inc    esp
  417742:	adc    eax,0x3806a1ad
  417747:	in     al,0x50
  417749:	out    0x3a,eax
  41774b:	je     0x4177ca
  41774d:	or     ch,ch
  41774f:	(bad)
  417753:	mov    edx,0x1f8b191a
  417758:	aas    
  417759:	pusha  
  41775a:	into   
  41775b:	sti    
  41775c:	xchg   ebx,eax
  41775d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775e:	lods   al,BYTE PTR ds:[esi]
  41775f:	rol    BYTE PTR [edi+0x42cbbe63],cl
  417765:	and    BYTE PTR [edi+esi*1],dl
  417768:	loop   0x4177c1
  41776a:	cwde   
  41776b:	getsec 
  41776d:	popa   
  41776e:	pop    edx
  41776f:	or     DWORD PTR [ebx+0x23],edx
  417772:	add    BYTE PTR [ebx],al
  417774:	xchg   edi,eax
  417775:	outs   dx,DWORD PTR ds:[esi]
  417776:	inc    eax
  417777:	and    bl,BYTE PTR [esp+ebx*2-0x30]
  41777b:	fcomi  st,st(6)
  41777d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41777e:	push   ebp
  41777f:	pusha  
  417780:	call   0xcbe56da9
  417785:	aad    0x9b
  417787:	inc    eax
  417788:	ret    
  417789:	cmp    al,0x69
  41778b:	aam    0x90
  41778d:	lods   al,BYTE PTR ds:[esi]
  41778e:	mov    BYTE PTR [ebx],bh
  417790:	sbb    BYTE PTR [eax+eiz*8+0x15],al
  417794:	icebp  
  417795:	xchg   ecx,eax
  417796:	jg     0x41779c
  417798:	cdq    
  417799:	mov    ds:0x207a7d7b,eax
  41779e:	and    eax,0x11a8303c
  4177a3:	lea    edi,[edi-0x486fef9e]
  4177a9:	mov    al,ds:0x846c88fc
  4177ae:	test   eax,0x5fc7cc4
  4177b3:	push   cs
  4177b4:	jmp    0xf417a1b2
  4177b9:	and    eax,0x15cd2d73
  4177be:	repnz add dl,bl
  4177c1:	je     0x417781
  4177c3:	ficomp DWORD PTR [edi-0x55]
  4177c6:	(bad)  
  4177c7:	mov    al,ds:0x662c5fc9
  4177cc:	mov    ds:0xd414674b,al
  4177d1:	test   DWORD PTR [ecx-0x1e943785],ecx
  4177d7:	sub    bh,dl
  4177d9:	sub    DWORD PTR [ebx],0x26
  4177dc:	les    ebp,FWORD PTR ds:0x9f832134
  4177e2:	test   DWORD PTR [edx-0xddbbbea],0x1d327541
  4177ec:	pop    ds
  4177ed:	nop
  4177ee:	adc    bl,bh
  4177f0:	outs   dx,BYTE PTR ds:[esi]
  4177f1:	ss jae 0x417836
  4177f4:	outs   dx,BYTE PTR ds:[esi]
  4177f5:	repz add ebp,DWORD PTR [esi+0xc]
  4177f9:	outs   dx,BYTE PTR ds:[esi]
  4177fa:	or     esp,DWORD PTR [esp+ebx*8+0x6f]
  4177fe:	arpl   WORD PTR [eax],bp
  417800:	lahf   
  417801:	pop    ecx
  417802:	fistp  DWORD PTR [esi]
  417804:	mov    dl,0xeb
  417806:	jle    0x4177c6
  417808:	cmp    ecx,DWORD PTR [edx]
  41780a:	mov    eax,0x8e7acf45
  41780f:	inc    ebx
  417810:	ja     0x41787e
  417812:	inc    edx
  417813:	adc    ebp,esi
  417815:	or     eax,0xba9ac36b
  41781a:	xchg   ebp,eax
  41781b:	hlt    
  41781c:	ja     0x417810
  41781e:	xchg   esi,eax
  41781f:	lahf   
  417820:	out    0x6e,eax
  417822:	enter  0x9375,0x90
  417826:	cmp    ecx,DWORD PTR ds:0x1dfe320a
  41782c:	mov    edi,DWORD PTR [ecx+0x47]
  41782f:	mov    edi,0xcfd53de5
  417834:	stos   DWORD PTR es:[edi],eax
  417835:	cmc    
  417836:	scas   eax,DWORD PTR es:[edi]
  417837:	xchg   ebp,eax
  417838:	xchg   esp,eax
  417839:	jo     0x4177e2
  41783b:	xor    ebx,0x795a11c1
  417841:	xor    eax,0xdad4e513
  417846:	and    ebp,DWORD PTR [ebx-0x19]
  417849:	pushf  
  41784a:	mov    ebx,0x87a8c322
  41784f:	sbb    ebx,DWORD PTR [esi+0x2b648317]
  417855:	fstp   QWORD PTR [ecx-0x30d9770f]
  41785b:	add    al,0x4e
  41785d:	rcl    DWORD PTR [ecx],1
  41785f:	mov    esp,0xe2efb6d1
  417864:	push   ds
  417865:	push   es
  417866:	mov    dh,0x43
  417868:	adc    DWORD PTR [edi+edi*2],ebp
  41786b:	shr    edx,0xf1
  41786e:	in     eax,0xad
  417870:	jl     0x4178dd
  417872:	mov    eax,ds:0xe649c42d
  417877:	test   DWORD PTR [ebp+0x59023c3c],0x4d8a48d4
  417881:	mov    ss,WORD PTR [eax+ebx*2+0x47fe4640]
  417888:	js     0x4178e1
  41788a:	sub    DWORD PTR [edi],ebp
  41788c:	inc    eax
  41788d:	jp     0x4178d3
  41788f:	cmp    eax,0x286b38e2
  417894:	ins    DWORD PTR es:[edi],dx
  417895:	int3   
  417896:	out    0x19,al
  417898:	mov    WORD PTR [edx],es
  41789a:	pop    es
  41789b:	inc    ebp
  41789c:	inc    edi
  41789d:	jno    0x41789f
  41789f:	and    eax,0x238286d3
  4178a4:	cs cld 
  4178a6:	aas    
  4178a7:	cmp    eax,DWORD PTR [ebp+0xee970b7]
  4178ad:	icebp  
  4178ae:	fisub  WORD PTR [esi]
  4178b0:	mov    ebp,0x646dc750
  4178b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178b6:	pop    eax
  4178b7:	jbe    0x41788d
  4178b9:	not    DWORD PTR [edi+0x4b]
  4178bc:	mov    eax,ds:0x7203b145
  4178c1:	sbb    eax,edx
  4178c3:	and    BYTE PTR [esi+0x469f6e0d],0x74
  4178ca:	push   ebx
  4178cb:	loope  0x417914
  4178cd:	ss mov eax,0x6ed4a2a3
  4178d3:	sub    al,0x69
  4178d5:	dec    ecx
  4178d6:	mov    ds:0x2fe3e617,al
  4178db:	xchg   ebx,eax
  4178dc:	bound  eax,QWORD PTR [esi]
  4178de:	test   DWORD PTR ds:[eax],0x9f2b33bb
  4178e5:	fcmovbe st,st(2)
  4178e7:	pop    ss
  4178e8:	cmp    ch,BYTE PTR [edi+eax*4-0x53]
  4178ec:	enter  0x41aa,0x8b
  4178f0:	test   DWORD PTR [ebx],0xff3f1e2d
  4178f6:	imul   esi,DWORD PTR [ecx+0x4bd55b86],0xffffff89
  4178fd:	xor    cl,BYTE PTR [eax+ebp*2]
  417900:	ds (bad) 
  417902:	call   0xedf2:0x880ffac6
  417909:	or     dh,cl
  41790b:	das    
  41790c:	jmp    0x38d0:0xdcc978db
  417913:	sar    DWORD PTR [ebp+0x1f73d021],cl
  417919:	jae    0x417915
  41791b:	pop    edx
  41791c:	cli    
  41791d:	fnsave [edx]
  41791f:	sub    eax,0xcccc4e59
  417924:	test   BYTE PTR [ebp-0x41],ch
  417927:	aas    
  417928:	inc    BYTE PTR [ebx-0x20]
  41792b:	pop    ecx
  41792c:	ror    DWORD PTR [ebx*4+0x1d4b9f9e],cl
  417933:	pushf  
  417934:	mov    edx,0x93fa5c9
  417939:	(bad)  
  41793a:	cmp    al,0xf0
  41793c:	push   cs
  41793d:	sub    al,0xe7
  41793f:	ja     0x417956
  417941:	sub    edx,esi
  417943:	adc    bl,BYTE PTR [eax+0x1b47c957]
  417949:	mov    bh,0xc8
  41794b:	add    esp,eax
  41794d:	sbb    ecx,edi
  41794f:	ss adc eax,0x8a8c7ea2
  417955:	out    dx,eax
  417956:	fdivrp st(0),st
  417958:	pop    ss
  417959:	pop    ds
  41795a:	into   
  41795b:	ss scas eax,DWORD PTR es:[edi]
  41795d:	(bad)  
  41795e:	retf   
  41795f:	mov    esi,0x9eff5ead
  417964:	aad    0x58
  417966:	xchg   esp,eax
  417967:	jmp    0x4179ac
  417969:	adc    bl,BYTE PTR es:[edi]
  41796c:	jno    0x4178f3
  41796e:	fdivr  QWORD PTR [ecx+eiz*8]
  417971:	fs sbb eax,0xf3819906
  417977:	repz cmp eax,0x54772c28
  41797d:	jb     0x41794a
  41797f:	scas   eax,DWORD PTR es:[edi]
  417980:	fwait
  417981:	and    al,0xb3
  417983:	mov    al,ds:0xe6fdc2e1
  417988:	add    eax,0x669516c2
  41798d:	sub    ebx,DWORD PTR [edx+0x41]
  417990:	lods   eax,DWORD PTR ds:[esi]
  417991:	adc    al,0x35
  417993:	ds aam 0x5
  417996:	sbb    bl,ah
  417998:	cs dec edx
  41799a:	ins    DWORD PTR es:[edi],dx
  41799b:	mov    cl,0x9f
  41799d:	mov    edx,0x32498ee0
  4179a2:	dec    ecx
  4179a3:	or     DWORD PTR [ecx+0x6c],0xdb6e2858
  4179aa:	cld    
  4179ab:	ret    
  4179ac:	stc    
  4179ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179ae:	jle    0x4179a4
  4179b0:	fidiv  WORD PTR [ecx]
  4179b2:	inc    esp
  4179b3:	mov    edi,0x7fc4ebda
  4179b8:	loop   0x417a39
  4179ba:	jbe    0x417959
  4179bc:	push   esi
  4179bd:	cmp    al,0xcd
  4179bf:	pop    edx
  4179c0:	adc    ch,0x68
  4179c3:	sub    DWORD PTR [ebx+0x1b992d99],0xbaa641bd
  4179cd:	stos   DWORD PTR es:[edi],eax
  4179ce:	cmp    al,BYTE PTR [ebp-0x66]
  4179d1:	pop    ebp
  4179d2:	jle    0x4179d6
  4179d4:	cli    
  4179d5:	into   
  4179d6:	jge    0x417995
  4179d8:	call   0xaa26:0xae830645
  4179df:	mov    BYTE PTR [eax+0x22],cl
  4179e2:	sahf   
  4179e3:	popf   
  4179e4:	retf   0xf583
  4179e7:	repz dec edi
  4179e9:	sub    edx,eax
  4179eb:	push   ebx
  4179ec:	enter  0x4b82,0x85
  4179f0:	sub    eax,0x199c3a7d
  4179f5:	mov    eax,ds:0xe948e52a
  4179fa:	sahf   
  4179fb:	into   
  4179fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179fd:	popf   
  4179fe:	aam    0x4f
  417a00:	xor    al,0xaf
  417a02:	xchg   ebp,eax
  417a03:	or     al,0x4d
  417a05:	xor    al,0xb3
  417a07:	jbe    0x4179c5
  417a09:	pop    ebx
  417a0a:	pushf  
  417a0b:	ret    
  417a0c:	and    esp,edi
  417a0e:	ror    DWORD PTR ds:0xcdcf087d,1
  417a14:	add    DWORD PTR [eax+edi*8-0x38447af8],eax
  417a1b:	stc    
  417a1c:	sub    BYTE PTR [edi],ah
  417a1e:	jbe    0x4179f8
  417a20:	(bad)  
  417a21:	push   ebp
  417a22:	hlt    
  417a23:	inc    edx
  417a24:	cmp    ch,cl
  417a26:	loopne 0x417a48
  417a28:	inc    edx
  417a29:	shl    BYTE PTR gs:[eax+0x1450e05b],0x63
  417a31:	mov    eax,ebp
  417a33:	rcl    DWORD PTR [edx],0x9b
  417a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a37:	out    0x57,eax
  417a39:	jbe    0x4179c0
  417a3b:	repnz or DWORD PTR [ebp-0x3d],0xaaae0fd9
  417a43:	xchg   esp,eax
  417a44:	adc    BYTE PTR [ecx-0x6a],ah
  417a47:	pop    esp
  417a48:	cmp    dh,al
  417a4a:	mov    edx,0x5e2162fb
  417a4f:	int3   
  417a50:	add    BYTE PTR [eax+0x6255d8de],al
  417a56:	jle    0x417a48
  417a58:	xor    esp,DWORD PTR [eax-0x2b89d418]
  417a5e:	jae    0x417a7a
  417a60:	sub    ebx,0xabacab7e
  417a66:	pop    es
  417a67:	repnz pop ecx
  417a69:	and    dh,BYTE PTR [esi]
  417a6b:	jnp    0x417a3b
  417a6d:	cmc    
  417a6e:	cdq    
  417a6f:	loopne 0x417a57
  417a71:	in     al,0x6b
  417a73:	retf   0xa4ec
  417a76:	dec    eax
  417a77:	jo     0x417a8e
  417a79:	adc    DWORD PTR [edi],edi
  417a7b:	and    DWORD PTR [esi+0xa842619],ebp
  417a81:	mov    ah,BYTE PTR [ebx-0x27c9c381]
  417a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a88:	clc    
  417a89:	imul   esi,DWORD PTR [edi],0xa843a18b
  417a8f:	adc    DWORD PTR [edi],ebp
  417a91:	add    eax,0xef182f8c
  417a96:	clc    
  417a97:	shl    BYTE PTR [ecx-0xf68d4de],1
  417a9d:	cmp    dl,BYTE PTR [edi]
  417a9f:	fcom   DWORD PTR [ecx-0x763ce8e8]
  417aa5:	pop    edi
  417aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa7:	dec    ebx
  417aa8:	pop    eax
  417aa9:	cdq    
  417aaa:	mov    bh,0xed
  417aac:	and    DWORD PTR [edx+0x1a],esp
  417aaf:	into   
  417ab0:	push   edi
  417ab1:	push   esi
  417ab2:	push   eax
  417ab3:	mov    bh,ch
  417ab5:	jnp    0x417a3e
  417ab7:	sbb    dl,BYTE PTR [edi]
  417ab9:	fnsave [ecx]
  417abb:	je     0x417ad8
  417abd:	stc    
  417abe:	fadd   st,st(7)
  417ac0:	push   ds
  417ac1:	not    DWORD PTR [eax-0xae8a615]
  417ac7:	icebp  
  417ac8:	cdq    
  417ac9:	sbb    esp,edi
  417acb:	add    edi,eax
  417acd:	dec    edi
  417ace:	out    dx,al
  417acf:	call   0x733773ee
  417ad4:	mov    BYTE PTR [ecx],ch
  417ad6:	sbb    dh,BYTE PTR [esi+0x72a154f9]
  417adc:	push   ebp
  417add:	xlat   BYTE PTR ds:[ebx]
  417ade:	mov    bl,BYTE PTR [eax-0xac46139]
  417ae4:	jns    0x417aa6
  417ae6:	and    al,0x30
  417ae8:	or     ch,BYTE PTR [eax+0x79]
  417aeb:	sub    ebx,edx
  417aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aee:	repnz cwde 
  417af0:	leave  
  417af1:	or     eax,edx
  417af3:	xor    ch,BYTE PTR [ecx+0x26]
  417af6:	(bad)  
  417af8:	sbb    DWORD PTR [edx+ebp*4],ecx
  417afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417afc:	jle    0x417b38
  417afe:	imul   edi,DWORD PTR [ebp+0x5dfedbd9],0x62918324
  417b08:	jnp    0x417b13
  417b0a:	xor    BYTE PTR [ebx+0x43],bl
  417b0d:	fst    QWORD PTR [eax]
  417b0f:	(bad)  
  417b10:	fld    QWORD PTR [ecx-0x4cb1ab19]
  417b16:	mov    esp,0x8c647ace
  417b1b:	(bad)  
  417b1d:	pop    ss
  417b1e:	xor    ah,ah
  417b20:	ds push ecx
  417b22:	shl    BYTE PTR [ebx+ecx*1-0x68],1
  417b26:	into   
  417b27:	in     al,0xdb
  417b29:	inc    eax
  417b2a:	fld    DWORD PTR [edi+0x7f]
  417b2d:	daa    
  417b2e:	dec    BYTE PTR [esi-0x68]
  417b31:	lds    esp,FWORD PTR [ecx+0x42]
  417b34:	test   eax,0xa8443a3d
  417b39:	loope  0x417ae7
  417b3b:	inc    ebx
  417b3c:	pop    eax
  417b3d:	jbe    0x417ba8
  417b3f:	push   esi
  417b40:	imul   eax,DWORD PTR [edi+0x2],0xffffff9e
  417b44:	inc    eax
  417b45:	xchg   esi,eax
  417b46:	(bad)
  417b4a:	adc    edi,DWORD PTR [esi-0x5f]
  417b4d:	xor    cl,BYTE PTR [edi+0x5def7484]
  417b53:	add    eax,0x18aeae16
  417b58:	(bad)  
  417b59:	pop    edx
  417b5a:	fadd   QWORD PTR [edx+0x2092ae1a]
  417b60:	loop   0x417af1
  417b62:	stc    
  417b63:	add    DWORD PTR [ebp+0x73],0x12
  417b67:	imul   eax,ebx,0xa16c64b2
  417b6d:	icebp  
  417b6e:	nop
  417b6f:	inc    eax
  417b70:	xor    ecx,DWORD PTR gs:[ebx+0x14]
  417b74:	hlt    
  417b75:	rcl    BYTE PTR [ebx],0x5c
  417b78:	rcl    esi,1
  417b7a:	enter  0x2edc,0x9a
  417b7e:	inc    eax
  417b7f:	repz in al,0xe5
  417b82:	lods   al,BYTE PTR ds:[esi]
  417b83:	cmp    edx,DWORD PTR [edi+0x6]
  417b86:	fisttp QWORD PTR [ebx]
  417b88:	lea    edx,[esi-0x7bb173f5]
  417b8e:	rcr    DWORD PTR [edx+0x1f0d69e5],cl
  417b94:	mov    esp,0x6c7d60e1
  417b99:	inc    ebp
  417b9a:	mov    bh,0xb3
  417b9c:	sahf   
  417b9d:	repz dec eax
  417b9f:	aaa    
  417ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ba1:	push   esp
  417ba2:	cdq    
  417ba3:	mov    ah,0xaf
  417ba5:	out    0xdd,al
  417ba7:	mov    BYTE PTR [eax+0x3e],bl
  417baa:	mov    ecx,0x7b9cd62
  417baf:	test   al,0xfc
  417bb1:	pop    eax
  417bb2:	mov    edx,0xc4219254
  417bb7:	jae    0x417b4f
  417bb9:	sbb    eax,0x3edf3364
  417bbe:	out    dx,eax
  417bbf:	aam    0xe1
  417bc1:	sub    bh,bl
  417bc3:	pop    es
  417bc4:	inc    ebp
  417bc5:	loope  0x417b85
  417bc7:	or     al,0x38
  417bc9:	fidiv  WORD PTR [ecx]
  417bcb:	sub    al,0x45
  417bcd:	nop
  417bce:	jmp    0xad64d167
  417bd3:	fld    st(0)
  417bd5:	pop    edi
  417bd6:	mov    ebx,ss
  417bd8:	cld    
  417bd9:	out    dx,eax
  417bda:	dec    edx
  417bdb:	jo     0x417c16
  417bdd:	(bad)  
  417bde:	cmp    al,0xe5
  417be0:	sahf   
  417be1:	outs   dx,DWORD PTR ds:[esi]
  417be2:	out    dx,al
  417be3:	loope  0x417c49
  417be5:	push   0x739559fb
  417bea:	cmc    
  417beb:	inc    edi
  417bec:	ja     0x417b99
  417bee:	and    edi,DWORD PTR [eax]
  417bf0:	into   
  417bf1:	add    eax,0x94466a4
  417bf6:	inc    esp
  417bf7:	dec    ebp
  417bf8:	lock pop edi
  417bfa:	(bad)
  417bfd:	mov    ch,0xf7
  417bff:	inc    edx
  417c00:	jle    0x417b8d
  417c02:	cmp    DWORD PTR [ecx-0x78],0x2d
  417c06:	fistp  QWORD PTR [edi+0x7c]
  417c09:	sbb    edi,DWORD PTR [esp+edx*1-0x25]
  417c0d:	mov    esi,0x7bc972f0
  417c12:	pop    edx
  417c13:	pop    ebp
  417c14:	cld    
  417c15:	addr16 pinsrw mm6,esp,0x4a
  417c1a:	push   edx
  417c1b:	sar    BYTE PTR [ebx-0x1f],1
  417c1e:	(bad)  
  417c20:	clc    
  417c21:	jmp    0xe930:0xde308f89
  417c28:	dec    eax
  417c29:	dec    ebp
  417c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c2b:	xor    al,0x74
  417c2d:	push   0xac0c20f5
  417c32:	call   0xf022:0xf58edc27
  417c39:	les    ecx,FWORD PTR [ecx-0x1c]
  417c3c:	mov    bl,0x8f
  417c3e:	adc    al,0x76
  417c40:	(bad)  
  417c42:	xchg   edi,eax
  417c43:	mov    BYTE PTR ds:0x84323fad,dh
  417c49:	dec    ebx
  417c4a:	ss mov cx,0x94b8
  417c4f:	stc    
  417c50:	mov    eax,0xed1e001f
  417c55:	sub    dl,BYTE PTR [ebx+eax*2-0x1113b4e2]
  417c5c:	adc    ecx,DWORD PTR [ebp-0x1d]
  417c5f:	mov    esp,0x9753d8d5
  417c64:	cli    
  417c65:	ds call 0x642f7a3b
  417c6b:	inc    eax
  417c6c:	dec    esp
  417c6d:	xchg   esp,eax
  417c6e:	cmp    eax,0x900aa146
  417c73:	rcl    BYTE PTR [edx+eax*2-0x59a5a9b7],cl
  417c7a:	or     BYTE PTR [edx+0x483a118e],0x38
  417c81:	test   DWORD PTR [ebp+ebp*4-0x1c],0x70259d08
  417c89:	aaa    
  417c8a:	inc    edi
  417c8b:	jmp    0xd5940d14
  417c90:	test   al,0xca
  417c92:	mov    ah,0x77
  417c94:	or     ecx,DWORD PTR [esi+0x43]
  417c97:	jno    0x417c9b
  417c99:	xchg   esp,eax
  417c9a:	adc    eax,0x1ba6a75f
  417c9f:	mov    DWORD PTR [ebx],edx
  417ca1:	push   cs
  417ca2:	dec    edi
  417ca3:	ret    0xe29f
  417ca6:	mov    ch,0xaa
  417ca8:	mov    BYTE PTR [ebp+0x6e84b640],ah
  417cae:	mov    eax,0x5afd2e8e
  417cb3:	jg     0x417c60
  417cb5:	das    
  417cb6:	pusha  
  417cb7:	and    DWORD PTR [edx-0x34],0x23
  417cbb:	clc    
  417cbc:	dec    ebx
  417cbd:	cli    
  417cbe:	jae    0x417d3f
  417cc0:	pop    ebx
  417cc1:	retf   
  417cc2:	mov    ds:0xea30269c,al
  417cc7:	dec    eax
  417cc8:	dec    esp
  417cc9:	imul   edx,DWORD PTR [edi],0x746c7047
  417ccf:	leave  
  417cd0:	jmp    0x417c7c
  417cd2:	adc    bh,BYTE PTR [edx+edx*2+0x44eb02bf]
  417cd9:	inc    ebp
  417cda:	or     DWORD PTR [esi-0x66],eax
  417cdd:	push   0xffffffec
  417cdf:	adc    DWORD PTR [ecx-0x3c],0x7f
  417ce3:	adc    eax,0xec844f7
  417ce8:	sub    esp,ebp
  417cea:	xlat   BYTE PTR ds:[ebx]
  417ceb:	test   eax,0x5715144
  417cf0:	scas   al,BYTE PTR es:[edi]
  417cf1:	cmp    DWORD PTR [edx],esp
  417cf3:	push   edx
  417cf4:	daa    
  417cf5:	inc    ebp
  417cf6:	cmc    
  417cf7:	ins    DWORD PTR es:[edi],dx
  417cf8:	dec    esp
  417cf9:	shr    DWORD PTR [esi-0x1d],cl
  417cfc:	or     eax,0x62c9be24
  417d01:	xchg   edi,eax
  417d02:	pop    ebx
  417d03:	int3   
  417d04:	or     ebx,DWORD PTR [eax+edx*1]
  417d07:	or     eax,0xa4968f69
  417d0c:	mov    ah,0xb8
  417d0e:	inc    eax
  417d0f:	fld    QWORD PTR [ebx]
  417d11:	cmp    DWORD PTR [ebp+0x4d37a5a1],esp
  417d17:	sub    al,0x79
  417d19:	adc    edx,ecx
  417d1b:	xchg   ecx,eax
  417d1c:	out    0x39,eax
  417d1e:	jne    0x417cbf
  417d20:	shl    DWORD PTR [edx-0x13],0x6b
  417d24:	xor    eax,0x1c70eeae
  417d29:	out    dx,al
  417d2a:	xlat   BYTE PTR ds:[ebx]
  417d2b:	push   0x80615977
  417d30:	adc    BYTE PTR [edx+0x19],bh
  417d33:	inc    esp
  417d34:	add    eax,0x212200bd
  417d39:	ins    BYTE PTR es:[edi],dx
  417d3a:	test   BYTE PTR [eax-0x74],bl
  417d3d:	sub    cl,BYTE PTR [ebx-0x45]
  417d40:	adc    ebp,DWORD PTR [edx]
  417d42:	and    ah,ah
  417d44:	cli    
  417d45:	and    ebp,DWORD PTR [esi]
  417d47:	pop    esp
  417d48:	pop    es
  417d49:	sbb    eax,0x841311f0
  417d4e:	(bad)  
  417d4f:	jmp    0xbe37daa6
  417d54:	dec    ebx
  417d55:	inc    ebp
  417d56:	add    cl,cl
  417d58:	push   0x8e2cad3d
  417d5d:	lahf   
  417d5e:	out    0x97,al
  417d60:	std    
  417d61:	loopne 0x417d10
  417d63:	pop    ss
  417d64:	(bad)  
  417d65:	pop    edx
  417d66:	push   eax
  417d67:	xchg   esp,eax
  417d68:	xchg   ecx,eax
  417d69:	mov    esi,ss
  417d6b:	addr16 (bad) 
  417d6d:	sub    eax,0xda10e605
  417d72:	adc    eax,0x1726efce
  417d77:	mov    WORD PTR [esi-0x45167b0a],fs
  417d7d:	mov    dl,0x42
  417d7f:	push   cs
  417d80:	sub    ecx,DWORD PTR [ebx-0x48]
  417d83:	out    0x7d,al
  417d85:	xchg   ebx,eax
  417d86:	sub    BYTE PTR [eax+0x646f6a13],cl
  417d8c:	ror    DWORD PTR [edi-0x22],1
  417d8f:	mov    dl,dh
  417d91:	inc    eax
  417d92:	adc    BYTE PTR [ebx-0x59],dh
  417d95:	dec    ebx
  417d96:	not    edx
  417d98:	sbb    eax,0xe97cb655
  417d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d9e:	or     eax,0x47fd2372
  417da3:	outs   dx,BYTE PTR ds:[esi]
  417da4:	or     DWORD PTR [ecx],eax
  417da6:	stos   BYTE PTR es:[edi],al
  417da7:	pop    ebp
  417da8:	test   DWORD PTR [edx],edi
  417daa:	inc    esi
  417dab:	lock test ecx,edi
  417dae:	cmp    ebp,0xffffff93
  417db1:	mov    ds:0x48342b77,al
  417db6:	pop    eax
  417db7:	and    al,0x83
  417db9:	xor    bh,BYTE PTR ds:0xfc94b002
  417dbf:	fdivr  DWORD PTR [ebx]
  417dc1:	sbb    cl,al
  417dc3:	push   edi
  417dc4:	mov    eax,ds:0xb741dccd
  417dc9:	xchg   esp,eax
  417dca:	hlt    
  417dcb:	mov    dh,dh
  417dcd:	scas   eax,DWORD PTR es:[edi]
  417dce:	gs fdiv st(0),st
  417dd1:	jbe    0x417df7
  417dd3:	hlt    
  417dd4:	mov    edi,0x1e66dd6b
  417dd9:	shl    DWORD PTR [ebx],cl
  417ddb:	mov    ds:0xb278efdb,al
  417de0:	mov    al,0xbc
  417de2:	fcmovnu st,st(0)
  417de4:	bound  eax,QWORD PTR [ecx+edi*2]
  417de7:	hlt    
  417de8:	cwde   
  417de9:	mov    ebp,0x5d347d54
  417dee:	retf   0x3e5e
  417df1:	imul   esi,DWORD PTR [esi-0x298fc9bd],0xffffff98
  417df8:	cli    
  417df9:	add    eax,DWORD PTR [ecx-0x6c]
  417dfc:	(bad)  
  417dfd:	call   0x3d4fccd6
  417e02:	std    
  417e03:	das    
  417e04:	mov    ebp,ss
  417e06:	jge    0x417e18
  417e08:	inc    edx
  417e09:	cmp    edx,ecx
  417e0b:	ja     0x417e0d
  417e0d:	rcr    DWORD PTR [ebp+eiz*4+0x5b],cl
  417e11:	ds and dh,dl
  417e14:	mov    al,0x69
  417e16:	push   edi
  417e17:	jl     0x417e87
  417e19:	xchg   DWORD PTR [ebp-0x63],ebp
  417e1c:	jmp    0xd005:0x87e205a6
  417e23:	mov    es,WORD PTR [esi]
  417e25:	pop    edi
  417e26:	imul   esi,DWORD PTR [ebx-0x5fd4333d],0x42
  417e2d:	pop    ebx
  417e2e:	or     ebx,0xf0e571db
  417e34:	fs nop
  417e36:	pop    es
  417e37:	ss inc esi
  417e39:	test   BYTE PTR [eax-0x3a],ah
  417e3c:	mov    BYTE PTR [edi],ch
  417e3e:	pop    edi
  417e3f:	sbb    al,bl
  417e41:	ror    BYTE PTR [ecx],cl
  417e43:	push   ss
  417e44:	sub    esi,ecx
  417e46:	ja     0x417dfc
  417e48:	loopne 0x417eaf
  417e4a:	je     0x417e4d
  417e4c:	xor    eax,0xf722c8f9
  417e51:	les    esi,FWORD PTR [edi+0x20]
  417e54:	push   0x627819d6
  417e59:	xchg   ebp,eax
  417e5a:	mov    WORD PTR [edx-0x9b1471c],ss
  417e60:	pop    ss
  417e61:	pop    edx
  417e62:	add    ecx,DWORD PTR [ecx]
  417e64:	xor    BYTE PTR [ebp+0x50cd6a3e],dh
  417e6a:	xor    dh,BYTE PTR [ebx]
  417e6c:	retf   0x1fb5
  417e6f:	sub    eax,0xc4331a6
  417e74:	(bad)  
  417e75:	les    esi,FWORD PTR [ebx-0x6f]
  417e78:	mov    eax,ds:0xa82711c2
  417e7d:	loopne 0x417efe
  417e7f:	lods   eax,DWORD PTR ds:[esi]
  417e80:	out    0x98,al
  417e82:	enter  0x10d4,0x2f
  417e86:	dec    edi
  417e87:	add    edx,DWORD PTR [edi-0xcf36156]
  417e8d:	mov    ax,WORD PTR [esi+0x1c]
  417e91:	jl     0x417f04
  417e93:	push   edi
  417e94:	daa    
  417e95:	pop    esi
  417e96:	pop    ds
  417e97:	inc    ebp
  417e98:	jmp    0x417ed4
  417e9a:	xor    esp,edi
  417e9c:	mov    DWORD PTR [eax+0x6041838d],esi
  417ea2:	inc    ebx
  417ea3:	or     ebx,DWORD PTR [eax+0x26]
  417ea6:	(bad)  
  417ea7:	fdivr  QWORD PTR [edi]
  417ea9:	push   edx
  417eaa:	sti    
  417eab:	mov    al,ds:0x94145c43
  417eb0:	mov    ah,0xec
  417eb2:	push   es
  417eb3:	jns    0x417e8c
  417eb5:	pop    esp
  417eb6:	jmp    0x6e362a51
  417ebb:	xchg   esp,eax
  417ebc:	mov    edi,0x41ced3f8
  417ec1:	pusha  
  417ec2:	mov    BYTE PTR [ebp+0x70],ah
  417ec5:	or     BYTE PTR [ebx+0x210005e],bl
  417ecb:	(bad)  
  417ecc:	(bad)  
  417ece:	cmp    dl,BYTE PTR [eax]
  417ed0:	sti    
  417ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ed2:	out    0x63,al
  417ed4:	mov    ch,0x89
  417ed6:	das    
  417ed7:	leave  
  417ed8:	xchg   ecx,eax
  417ed9:	sbb    al,0x67
  417edb:	pusha  
  417edc:	jge    0x417ebe
  417ede:	mov    eax,ds:0xe60eeb0e
  417ee3:	out    dx,eax
  417ee4:	adc    al,0x73
  417ee6:	dec    esp
  417ee7:	mov    ds,WORD PTR [ebp-0x6e]
  417eea:	xchg   BYTE PTR [edi],dl
  417eec:	dec    esi
  417eed:	mov    esi,0x4e213d96
  417ef2:	mov    bh,0xe
  417ef4:	xor    BYTE PTR [edx+0x3b],bh
  417ef7:	inc    ebp
  417ef8:	mov    ch,0x78
  417efa:	cdq    
  417efb:	push   cs
  417efc:	stos   DWORD PTR es:[edi],eax
  417efd:	leave  
  417efe:	fisttp DWORD PTR cs:[edx]
  417f01:	sub    DWORD PTR [esi],ecx
  417f03:	cmp    al,0xf2
  417f05:	ja     0x417f75
  417f07:	fld    QWORD PTR ds:0xd28006c4
  417f0d:	js     0x417f5a
  417f0f:	xor    ebx,edx
  417f11:	and    al,0xd
  417f13:	jno    0x417ec5
  417f15:	sbb    eax,0x145d3108
  417f1a:	push   ebp
  417f1b:	scas   al,BYTE PTR es:[edi]
  417f1c:	cmp    al,0xdd
  417f1e:	mov    ebx,0x9f16b88
  417f23:	and    BYTE PTR [esi-0x4f],dh
  417f26:	jmp    0xf20b:0xbdbf386e
  417f2d:	add    al,0x9
  417f2f:	push   ebx
  417f30:	jnp    0x417f0f
  417f32:	mov    bl,0x59
  417f34:	lods   al,BYTE PTR ds:[esi]
  417f35:	shl    BYTE PTR [ebx+edi*4+0x6d],0x4c
  417f3a:	sbb    al,0x0
  417f3c:	push   ecx
  417f3d:	jmp    0x417ef2
  417f3f:	inc    ebp
  417f40:	cmp    al,bh
  417f42:	fimul  DWORD PTR [eax+0x7f6306a9]
  417f48:	jmp    0xc771178a
  417f4d:	sbb    eax,DWORD PTR [eax-0x66]
  417f50:	mov    WORD PTR es:[edi-0x25ab371e],?
  417f57:	stos   BYTE PTR es:[edi],al
  417f58:	in     eax,0x42
  417f5a:	js     0x417fb3
  417f5c:	or     DWORD PTR [esi+0x46f38eb5],ecx
  417f62:	in     eax,dx
  417f63:	(bad)  
  417f64:	jnp    0x417fb7
  417f66:	or     ebx,ebp
  417f68:	ins    DWORD PTR es:[edi],dx
  417f69:	add    eax,DWORD PTR [ecx-0x19]
  417f6c:	adc    ecx,0x7d
  417f6f:	jne    0x417f2c
  417f71:	ds pop esp
  417f73:	js     0x417f65
  417f75:	pop    esi
  417f76:	jp     0x417fc9
  417f78:	jne    0x417f0f
  417f7a:	ins    BYTE PTR es:[edi],dx
  417f7b:	cdq    
  417f7c:	nop
  417f7d:	shr    DWORD PTR ds:0x823cee6,cl
  417f83:	xchg   edx,eax
  417f84:	in     al,0x77
  417f86:	adc    eax,0xdbba6f40
  417f8b:	jg     0x417f6f
  417f8d:	retf   
  417f8e:	iret   
  417f8f:	lods   eax,DWORD PTR ds:[esi]
  417f90:	push   ds
  417f91:	lock push cs
  417f93:	fxch   st(4)
  417f95:	outs   dx,DWORD PTR ds:[esi]
  417f96:	bound  ecx,QWORD PTR [esi+0x6fca8376]
  417f9c:	loop   0x417f47
  417f9e:	and    eax,0x6f14682f
  417fa3:	jg     0x417f78
  417fa5:	outs   dx,BYTE PTR ds:[esi]
  417fa6:	sbb    BYTE PTR [edx],dl
  417fa8:	jl     0x417f5d
  417faa:	ret    
  417fab:	push   ecx
  417fac:	dec    eax
  417fad:	cmp    DWORD PTR [ebx],ebx
  417faf:	fcmovnb st,st(1)
  417fb1:	cli    
  417fb2:	push   ecx
  417fb3:	fwait
  417fb4:	test   BYTE PTR [ecx+0xa],dl
  417fb7:	mov    eax,0xff6ee87
  417fbc:	and    BYTE PTR [edx-0x3c],bh
  417fbf:	cld    
  417fc0:	cmp    BYTE PTR [esi-0x66],0x17
  417fc4:	test   eax,0x19a0f4a3
  417fc9:	xchg   BYTE PTR [ecx+0x71a706f2],al
  417fcf:	call   0x953e9f9f
  417fd4:	xchg   ebp,eax
  417fd5:	fld    QWORD PTR [ebp+0x3a43f498]
  417fdb:	push   edx
  417fdc:	(bad)  
  417fdd:	imul   ebp,ecx,0x35
  417fe0:	xchg   DWORD PTR [edx+esi*2-0x5e64e4d7],ecx
  417fe7:	dec    esi
  417fe8:	mov    esp,DWORD PTR [eax]
  417fea:	sbb    cl,bl
  417fec:	test   dl,0xf0
  417fef:	xor    eax,0x82e34d82
  417ff4:	inc    ebx
  417ff5:	adc    eax,0x97c212a
  417ffa:	xchg   ecx,eax
  417ffb:	cmp    eax,0x75cd30f4
  418000:	jb     0x417ff0
  418002:	cmp    eax,0x27506e37
  418007:	dec    eax
  418008:	jmp    0x9033931f
  41800d:	adc    eax,0xd763bdb0
  418012:	cdq    
  418013:	aaa    
  418014:	aas    
  418015:	in     al,0xd1
  418017:	frstpm(287 only) 
  418019:	add    ebx,DWORD PTR [esi+0x33]
  41801c:	es in  eax,0x9
  41801f:	pop    ecx
  418020:	and    DWORD PTR [edi-0x522f13f7],ecx
  418026:	int3   
  418027:	sbb    al,0xaf
  418029:	(bad)  
  41802a:	loop   0x417fb2
  41802c:	sub    eax,0x35df5054
  418031:	pop    ss
  418032:	push   ebx
  418033:	rcr    eax,cl
  418035:	mov    ebx,DWORD PTR [eax+0xc]
  418038:	cmp    eax,0x4cbb4f0b
  41803d:	lods   eax,DWORD PTR ds:[esi]
  41803e:	jnp    0x418028
  418040:	xor    BYTE PTR [eax+eiz*8],0x3d
  418044:	adc    edx,0x8
  418047:	cld    
  418048:	mov    ch,0xc5
  41804a:	sbb    ch,ah
  41804c:	stos   DWORD PTR es:[edi],eax
  41804d:	xchg   edx,eax
  41804e:	add    BYTE PTR [ecx-0x556eadf],ah
  418054:	nop
  418055:	test   eax,0xe5388774
  41805a:	js     0x418059
  41805c:	xchg   BYTE PTR [eax+edi*4-0x47],al
  418060:	out    0xbc,al
  418062:	pop    esi
  418063:	rcl    bh,cl
  418065:	gs mov edi,0x21feeb94
  41806b:	std    
  41806c:	xor    esp,esi
  41806e:	sbb    DWORD PTR [ecx+0x127e5236],edi
  418074:	sti    
  418075:	mov    edx,0x35734f6f
  41807a:	mov    dl,0x1d
  41807c:	xchg   BYTE PTR [edi],al
  41807e:	pop    ds
  41807f:	xor    dl,ah
  418081:	pop    ds
  418082:	shl    esi,0xf9
  418085:	out    dx,al
  418086:	mov    ch,BYTE PTR [eax+0x28]
  418089:	fnstsw WORD PTR [ebp-0x6efe70d6]
  41808f:	mov    ch,0x1c
  418091:	stc    
  418092:	int    0xa9
  418094:	jmp    0xd98ac9e
  418099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41809a:	cld    
  41809b:	mov    dh,0x6d
  41809d:	ins    BYTE PTR es:[edi],dx
  41809e:	inc    ecx
  41809f:	inc    ebx
  4180a0:	add    edx,eax
  4180a2:	mov    ecx,0xe48f593e
  4180a7:	das    
  4180a8:	retf   
  4180a9:	adc    BYTE PTR [si],ch
  4180ac:	mov    DWORD PTR [eax],ebx
  4180ae:	pop    ebp
  4180af:	jl     0x4180de
  4180b1:	pop    ds
  4180b2:	icebp  
  4180b3:	aaa    
  4180b4:	add    edi,esi
  4180b6:	es or  al,0xb7
  4180b9:	mov    edi,0xdf6dc411
  4180be:	add    BYTE PTR [esi-0x6e],0xef
  4180c2:	(bad)  
  4180c3:	(bad)  
  4180c4:	pop    edi
  4180c5:	pop    es
  4180c6:	les    esp,FWORD PTR [ebx+esi*8+0x1b]
  4180ca:	je     0x418098
  4180cc:	jle    0x41812b
  4180ce:	inc    edx
  4180cf:	pop    ebx
  4180d0:	bswap  esp
  4180d2:	jns    0x418087
  4180d4:	stos   DWORD PTR es:[edi],eax
  4180d5:	pushf  
  4180d6:	mov    ah,0x1e
  4180d8:	jae    0x41811c
  4180da:	lock out 0xfe,al
  4180dd:	mov    ebp,0x636c6f56
  4180e2:	inc    edi
  4180e3:	xchg   BYTE PTR [edx+0x4d7118e9],dl
  4180e9:	outs   dx,DWORD PTR ds:[esi]
  4180ea:	rol    BYTE PTR es:[ebp-0x52],cl
  4180ee:	mov    al,ds:0xfa339680
  4180f3:	shl    BYTE PTR [edi-0x78],0xbf
  4180f7:	jp     0x41814a
  4180f9:	aam    0x31
  4180fb:	retf   
  4180fc:	ja     0x41808a
  4180fe:	ja     0x4180f5
  418100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418101:	push   ebx
  418102:	push   ecx
  418103:	xchg   esi,eax
  418104:	mov    bl,0xea
  418106:	shl    ecx,cl
  418108:	or     eax,0xa7c8152f
  41810d:	clc    
  41810e:	adc    ebp,edi
  418110:	mov    esi,0x53a14c2a
  418115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418116:	nop
  418117:	push   esi
  418118:	cmp    eax,DWORD PTR [edi-0x3d6d5bf1]
  41811e:	mov    bl,0x4d
  418120:	out    dx,al
  418121:	div    DWORD PTR [edx+0x24]
  418124:	inc    ebx
  418125:	push   ss
  418126:	(bad)  
  418127:	cmc    
  418128:	add    dl,BYTE PTR [ecx]
  41812a:	xor    ch,BYTE PTR [ebp+0x58aa5b81]
  418130:	das    
  418131:	jge    0x4180b9
  418133:	mov    ds:0x833a870a,eax
  418138:	push   esi
  418139:	pop    eax
  41813a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41813b:	adc    al,0xf6
  41813d:	and    dl,BYTE PTR [ebp+eax*8+0x1b]
  418141:	lds    ebx,FWORD PTR [edx+0x15]
  418144:	jns    0x4181b8
  418146:	aad    0x3c
  418148:	inc    esp
  418149:	scas   al,BYTE PTR es:[edi]
  41814a:	push   eax
  41814b:	inc    ecx
  41814c:	mov    ecx,0x5f25e3a4
  418151:	cmp    BYTE PTR [eiz*2-0x3c428a22],0x4e
  418159:	icebp  
  41815a:	adc    DWORD PTR [edx+edx*4-0x776b79b7],esp
  418161:	mov    BYTE PTR [ebp-0x4b8d2ace],bl
  418167:	push   ebx
  418168:	mov    esi,0x15af3e99
  41816d:	mov    bh,0x89
  41816f:	jnp    0x418183
  418171:	enter  0xefc6,0x51
  418175:	fxch   st(3)
  418177:	lock popa 
  418179:	call   0x841d:0xcf7ac30f
  418180:	inc    ebp
  418181:	add    BYTE PTR [ebp-0x7d28b98d],cl
  418187:	call   0xc4bde785
  41818c:	mov    ch,0x5e
  41818e:	mov    WORD PTR ds:0x17ec403c,cs
  418194:	call   0x9db0:0xd8b2afc0
  41819b:	mov    ebp,?
  41819d:	cmp    eax,DWORD PTR [esi]
  41819f:	loope  0x4181dc
  4181a1:	cmp    BYTE PTR [edi+0x7c3c9a97],bl
  4181a7:	aas    
  4181a8:	loopne 0x418142
  4181aa:	xor    al,0xff
  4181ac:	pushf  
  4181ad:	pop    ds
  4181ae:	test   DWORD PTR [ebx-0x46897525],eax
  4181b4:	pop    edx
  4181b5:	and    edx,edi
  4181b7:	repnz xlat BYTE PTR ds:[ebx]
  4181b9:	mov    ebp,0x1c38a227
  4181be:	adc    al,0xbf
  4181c0:	imul   ebx,DWORD PTR [edx-0x3a9c6593],0x37
  4181c7:	push   ebx
  4181c8:	dec    edi
  4181c9:	mov    cl,0x94
  4181cb:	xchg   esi,eax
  4181cc:	xchg   esi,eax
  4181cd:	xchg   esp,eax
  4181ce:	or     cl,BYTE PTR [eax]
  4181d0:	fstp   QWORD PTR [edx]
  4181d2:	addr16 ftst 
  4181d5:	(bad)  
  4181d6:	fwait
  4181d7:	push   ebp
  4181d8:	ret    
  4181d9:	jmp    0xd7ee:0xade3c782
  4181e0:	add    DWORD PTR [eax+0x75ca6bcb],eax
  4181e6:	aas    
  4181e7:	push   ebx
  4181e8:	in     al,0xbd
  4181ea:	mov    esi,0x1e503ac4
  4181ef:	push   esi
  4181f0:	jle    0x41817b
  4181f2:	push   es
  4181f3:	std    
  4181f4:	das    
  4181f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f6:	add    BYTE PTR [ebx-0x3a1452ee],al
  4181fc:	or     BYTE PTR [edx+0x73dd9138],ah
  418202:	lock adc BYTE PTR [edi],dl
  418205:	pusha  
  418206:	sbb    BYTE PTR [ecx+0x7f70a3ed],ch
  41820c:	retf   0xdeed
  41820f:	adc    eax,0xf356a396
  418214:	pop    es
  418215:	add    eax,0x2e3c4cd6
  41821a:	(bad)  
  41821b:	(bad)  
  41821c:	iret   
  41821d:	retf   
  41821e:	fs cwde 
  418220:	fdivr  DWORD PTR [edx-0x21d82e54]
  418226:	xor    al,0x39
  418228:	xchg   DWORD PTR [edi+ebx*4-0xa],eax
  41822c:	and    BYTE PTR [edx],ch
  41822e:	sub    DWORD PTR [esi],0xb9ed3265
  418234:	test   al,0x8e
  418236:	sets   BYTE PTR [ecx+eax*8-0x2a]
  41823b:	in     eax,dx
  41823c:	push   esi
  41823d:	add    eax,0xab271809
  418242:	mov    esp,0xcfb2d142
  418247:	(bad)  
  418248:	(bad)  
  418249:	mov    eax,0x4d99e6e2
  41824e:	add    DWORD PTR [ecx-0x40],esp
  418251:	cs jge 0x41825a
  418254:	loop   0x4182c0
  418256:	push   es
  418257:	and    DWORD PTR [ebx],esi
  418259:	push   esp
  41825a:	enter  0xed42,0xae
  41825e:	mov    ah,0x2e
  418260:	mov    bh,0xdb
  418262:	adc    DWORD PTR [ebx],0xe5e7acc6
  418268:	outs   dx,DWORD PTR ds:[esi]
  418269:	and    BYTE PTR [ebx],al
  41826b:	xchg   edx,eax
  41826c:	jmp    0x41825e
  41826e:	pop    ds
  41826f:	shl    cl,0x64
  418272:	arpl   WORD PTR [edx],bx
  418274:	dec    ebp
  418275:	cmp    edi,DWORD PTR [edi+0x59]
  418278:	int3   
  418279:	jmp    0xe78dbcc5
  41827e:	and    BYTE PTR [eax+0x5b],bl
  418281:	sbb    eax,0x186d8120
  418286:	add    esp,0x35128de4
  41828c:	jle    0x41826a
  41828e:	(bad)  
  41828f:	and    DWORD PTR [esi+0x63ebfbe3],ebx
  418295:	push   ecx
  418296:	or     BYTE PTR [ebx-0x77],bh
  418299:	out    0xc8,eax
  41829b:	ficomp WORD PTR [ebp-0x6290dbde]
  4182a1:	jno    0x418253
  4182a3:	or     edi,ebx
  4182a5:	gs arpl cx,si
  4182a8:	stc    
  4182a9:	cmp    DWORD PTR [edx],eax
  4182ab:	(bad)  
  4182ac:	jmp    0x4182ff
  4182ae:	pop    ds
  4182af:	rcr    cl,1
  4182b1:	sub    ah,ah
  4182b3:	icebp  
  4182b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182b5:	fnstcw WORD PTR [edi]
  4182b7:	les    eax,FWORD PTR [edx]
  4182b9:	jne    0x8e942559
  4182bf:	fs mov ch,0xe9
  4182c2:	xor    ah,BYTE PTR [edi-0x76b90fc6]
  4182c8:	out    dx,al
  4182c9:	inc    sp
  4182cb:	xchg   edi,eax
  4182cc:	jge    0x418255
  4182ce:	stos   DWORD PTR es:[edi],eax
  4182cf:	cmp    BYTE PTR [ecx-0x72dd3934],al
  4182d5:	jno    0x418304
  4182d7:	sbb    al,0xfc
  4182d9:	jno    0x418285
  4182db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182dc:	dec    ecx
  4182dd:	popf   
  4182de:	fiadd  WORD PTR [edx+ebx*1-0x1d675519]
  4182e5:	mov    BYTE PTR [edx+0x7d],ch
  4182e8:	sahf   
  4182e9:	pop    ecx
  4182ea:	add    ch,BYTE PTR [esi+0x527b5003]
  4182f0:	mov    DWORD PTR ds:0xeb5e57f,edi
  4182f6:	shl    BYTE PTR [edi-0xf629c93],0xc6
  4182fd:	jl     0x4182a6
  4182ff:	jo     0x41830c
  418301:	cmp    DWORD PTR [ebx],edx
  418303:	jne    0x418378
  418305:	(bad)  
  418306:	lock test DWORD PTR ds:0xf0945696,edi
  41830d:	enter  0x3df8,0xd5
  418311:	popf   
  418312:	test   edx,ebp
  418314:	imul   edx,ebx,0x36
  418317:	retf   
  418318:	or     dh,BYTE PTR [ebx+0x326fb291]
  41831e:	lock add edx,esi
  418321:	push   0xa7f28f0d
  418326:	lods   al,BYTE PTR ds:[esi]
  418327:	or     ch,BYTE PTR [edi+0x44]
  41832a:	imul   ebp,DWORD PTR ss:[ecx+ecx*1+0x112e7998],0xe985f786
  418336:	outs   dx,BYTE PTR ds:[esi]
  418337:	mov    esi,DWORD PTR [ecx]
  418339:	div    DWORD PTR [ecx]
  41833b:	ja     0x418327
  41833d:	cmp    esi,DWORD PTR [edi+0x191c0972]
  418343:	aas    
  418344:	jno    0x418331
  418346:	mov    dh,0xc4
  418348:	inc    ebp
  418349:	inc    ebp
  41834a:	sbb    BYTE PTR [ecx+0xa],dh
  41834d:	jae    0x418381
  41834f:	jnp    0x418356
  418351:	mov    esi,0xe295dd21
  418356:	or     al,0xe4
  418358:	scas   eax,DWORD PTR es:[edi]
  418359:	mov    esi,0x9dbfdfb
  41835e:	push   edx
  41835f:	jmp    0x70641d60
  418364:	and    dl,BYTE PTR [esi+0x31fba73f]
  41836a:	outs   dx,DWORD PTR ds:[esi]
  41836b:	push   esi
  41836c:	xor    ebx,DWORD PTR [ecx-0x7]
  41836f:	adc    dl,BYTE PTR [ecx-0x4]
  418372:	popa   
  418373:	into   
  418374:	dec    ebx
  418375:	cmc    
  418376:	or     al,0x92
  418378:	add    al,0x28
  41837a:	pop    esp
  41837b:	and    esi,0x0
  41837e:	xchg   esp,eax
  41837f:	add    ah,al
  418381:	bnd jae 0x418351
  418384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418385:	mov    edi,0xf52f8947
  41838a:	push   cs
  41838b:	mov    al,ds:0xec3bbf13
  418390:	jg     0x418351
  418392:	aad    0xa1
  418394:	pop    ebp
  418395:	in     al,0xd2
  418397:	in     al,0x68
  418399:	xchg   edi,eax
  41839a:	enter  0xb2a,0x4
  41839e:	xor    edi,DWORD PTR ds:0xe4d3e178
  4183a4:	leave  
  4183a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183a6:	daa    
  4183a7:	cmp    eax,0xcc065cc6
  4183ac:	call   0xd533afa0
  4183b1:	aas    
  4183b2:	add    BYTE PTR ss:[esi+0x1a217576],dl
  4183b9:	dec    esi
  4183ba:	sbb    BYTE PTR ds:0x4024f403,0x6
  4183c1:	arpl   WORD PTR [eax-0x3c],dx
  4183c4:	sub    ebp,DWORD PTR [ebx]
  4183c6:	mov    ebp,0x89fce8e
  4183cb:	or     al,0x9
  4183cd:	inc    esp
  4183ce:	(bad)  
  4183cf:	gs jmp 0x4183e0
  4183d2:	into   
  4183d3:	pop    eax
  4183d4:	bound  eax,QWORD PTR [edi-0x50067]
  4183da:	xchg   esp,eax
  4183db:	cmp    al,0xe1
  4183dd:	jne    0x4183f3
  4183df:	retf   0x6e28
  4183e2:	cmp    BYTE PTR [ecx-0x6e],al
  4183e5:	ret    0xe7f1
  4183e8:	adc    BYTE PTR [edi],bh
  4183ea:	adc    eax,0xc22ab18e
  4183ef:	scas   al,BYTE PTR es:[edi]
  4183f0:	push   edi
  4183f1:	xchg   ecx,eax
  4183f2:	cdq    
  4183f3:	sub    BYTE PTR [ecx-0x65],0xeb
  4183f7:	inc    edx
  4183f8:	sub    eax,0xaff549
  4183fd:	das    
  4183fe:	mov    al,ds:0x40ad92f6
  418403:	lock shl DWORD PTR [esp+edx*4-0x28],0x58
  418409:	jp     0x4183be
  41840b:	data16 fisub WORD PTR [esi-0x62]
  41840f:	push   0x3a
  418411:	push   ebx
  418412:	jmp    0x7860:0x8a590cfa
  418419:	js     0x418469
  41841b:	dec    ebp
  41841c:	mov    al,ds:0x9fa043b0
  418421:	mov    esp,0xf843a6d6
  418426:	rcl    bl,0x16
  418429:	cld    
  41842a:	jb     0x4183fe
  41842c:	or     BYTE PTR [esp+edx*4],bh
  41842f:	ins    BYTE PTR es:[edi],dx
  418430:	inc    eax
  418431:	or     al,0x7d
  418433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418434:	push   esi
  418435:	icebp  
  418436:	adc    ebp,ebp
  418438:	adc    DWORD PTR [edx+0x38],ebx
  41843b:	xor    ebx,ebx
  41843d:	imul   eax,DWORD PTR [esi],0xfffffff2
  418440:	adc    DWORD PTR [eax+0x68],ebx
  418443:	mov    cl,0x33
  418445:	cs xchg bl,dl
  418448:	popa   
  418449:	sub    ebx,DWORD PTR [edx]
  41844b:	sub    al,0xe4
  41844d:	mov    dh,bl
  41844f:	shl    bh,0x8c
  418452:	ja     0x41840c
  418454:	fwait
  418455:	push   cs
  418456:	xchg   ecx,eax
  418457:	jecxz  0x418447
  418459:	jae    0x4183ff
  41845b:	lods   al,BYTE PTR ds:[esi]
  41845c:	xchg   ecx,eax
  41845d:	and    al,0x75
  41845f:	inc    esp
  418460:	cld    
  418461:	ss mov bl,0x9b
  418464:	loop   0x4184b3
  418466:	cmp    al,0x88
  418468:	stos   DWORD PTR es:[edi],eax
  418469:	les    ebp,FWORD PTR ds:0x3168c72b
  41846f:	mov    dl,0x36
  418471:	mov    ds:0xdde0bf99,eax
  418476:	in     eax,0xe0
  418478:	(bad)  
  41847a:	sbb    eax,0xf121d29e
  41847f:	adc    dx,si
  418482:	jle    0x418405
  418484:	dec    ebp
  418485:	test   al,0x18
  418487:	retf   
  418488:	dec    esi
  418489:	lds    ecx,FWORD PTR [ebp+0x5a42c022]
  41848f:	jmp    0xb1b0:0x61089dfc
  418496:	bound  esp,QWORD PTR [ebx+0x25050a19]
  41849c:	push   edx
  41849d:	cmp    edi,DWORD PTR [edi+0x40]
  4184a0:	add    eax,0x3e83374
  4184a5:	jl     0x4184de
  4184a7:	stos   BYTE PTR es:[edi],al
  4184a8:	inc    eax
  4184a9:	jns    0x4184c5
  4184ab:	and    eax,0xd6fdb5ff
  4184b0:	popa   
  4184b1:	jmp    0x4184c3
  4184b3:	(bad)  
  4184b4:	loope  0x418474
  4184b6:	stos   BYTE PTR es:[edi],al
  4184b7:	and    bl,BYTE PTR [edx+ebp*2-0x1c]
  4184bb:	je     0x418480
  4184bd:	jle    0x4184eb
  4184bf:	(bad)  
  4184c1:	add    DWORD PTR [ebx],ebx
  4184c3:	mov    esp,0x77fed8ba
  4184c8:	jb     0x41846d
  4184ca:	sub    al,0x36
  4184cc:	test   BYTE PTR [ecx-0x56faa0bc],ch
  4184d2:	mov    DWORD PTR [ebp+0x74],ecx
  4184d5:	or     DWORD PTR [ecx+eiz*4],eax
  4184d8:	(bad)
  4184db:	lahf   
  4184dc:	in     al,dx
  4184dd:	aaa    
  4184de:	(bad)  
  4184df:	mov    edi,0x25fdb17
  4184e4:	movntq QWORD PTR [edi+0xab8a548],mm2
  4184eb:	sbb    ecx,DWORD PTR [esi+0x4b5431ac]
  4184f1:	cwde   
  4184f2:	xchg   ebx,eax
  4184f3:	fs ret 0xb8ad
  4184f7:	adc    ebx,ecx
  4184f9:	dec    edx
  4184fa:	mov    ecx,0x3e7c0681
  4184ff:	pusha  
  418500:	stos   BYTE PTR es:[edi],al
  418501:	xchg   ebp,eax
  418502:	push   0xfffffffb
  418504:	popa   
  418505:	mov    WORD PTR [esi],gs
  418507:	adc    DWORD PTR ds:[esi-0x2a],ebx
  41850b:	sub    DWORD PTR [edx+0x3],esi
  41850e:	ins    DWORD PTR es:[edi],dx
  41850f:	mov    ds:0x41414725,eax
  418514:	inc    esp
  418515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418516:	pop    ebx
  418517:	add    BYTE PTR [ebx-0x465e41a8],bh
  41851d:	call   0xe1656399
  418522:	aad    0x27
  418524:	outs   dx,DWORD PTR ds:[esi]
  418525:	pop    ebx
  418526:	add    bl,0xe5
  418529:	ror    DWORD PTR [edx+0x5ad998a7],0x1b
  418530:	or     DWORD PTR ds:0xe5494694,0xffffff97
  418537:	mul    BYTE PTR [edi+0x7]
  41853a:	ja     0x41855f
  41853c:	or     eax,0xa7965c81
  418541:	stos   DWORD PTR es:[edi],eax
  418542:	sub    dh,ah
  418544:	sbb    DWORD PTR [edx+ecx*2],0xffffffa7
  418548:	sbb    eax,0xe37d2ba7
  41854d:	std    
  41854e:	pop    ecx
  41854f:	fdecstp 
  418551:	cmp    esp,DWORD PTR [ebx]
  418553:	fisubr DWORD PTR [ecx+0x80769f4]
  418559:	ss xchg ecx,eax
  41855b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41855c:	stos   DWORD PTR es:[edi],eax
  41855d:	push   es
  41855e:	(bad)  
  41855f:	xchg   ecx,eax
  418560:	sbb    esp,ebp
  418562:	fsubr  QWORD PTR [eax-0x27]
  418565:	or     ebp,esi
  418567:	dec    ebx
  418568:	fiadd  WORD PTR [edi]
  41856a:	pop    edx
  41856b:	adc    DWORD PTR [ebx],ecx
  41856d:	cmp    esp,esp
  41856f:	mov    DWORD PTR [eax],eax
  418571:	lea    ecx,[ebx-0x7746b798]
  418577:	scas   al,BYTE PTR es:[edi]
  418578:	enter  0xc3dc,0x2d
  41857c:	pushf  
  41857d:	sahf   
  41857e:	test   DWORD PTR [eax+0x20ab1356],esp
  418584:	pusha  
  418585:	or     ah,BYTE PTR [ecx]
  418587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418588:	ja     0x4185cb
  41858a:	fwait
  41858b:	loopne 0x4185ea
  41858d:	(bad)  
  41858e:	mov    eax,0x7a6e14a9
  418593:	out    dx,eax
  418594:	ins    BYTE PTR es:[edi],dx
  418595:	test   eax,0xaea95fff
  41859a:	clc    
  41859b:	mov    ch,0x10
  41859d:	or     al,0x74
  41859f:	popf   
  4185a0:	push   ecx
  4185a1:	int    0xe4
  4185a3:	mov    ds:0xaded0315,al
  4185a8:	mov    edx,0x3d1be14
  4185ad:	add    DWORD PTR [ecx-0x519b628f],esp
  4185b3:	mov    ch,al
  4185b5:	push   esi
  4185b6:	mov    esi,0x8593fc21
  4185bb:	lods   al,BYTE PTR ds:[esi]
  4185bc:	test   eax,0x818d54c7
  4185c1:	fsub   QWORD PTR [ecx-0x3df5b453]
  4185c7:	mov    ecx,0x6841434b
  4185cc:	push   ebp
  4185cd:	push   0xd537dc45
  4185d2:	sub    esi,DWORD PTR [ebp+0x1c]
  4185d5:	mov    edx,0xa6bd09
  4185da:	xor    edi,edx
  4185dc:	pop    esp
  4185dd:	cmp    esp,DWORD PTR [eax+0x3b]
  4185e0:	jno    0x418658
  4185e2:	jmp    0x1ca7fca1
  4185e7:	xchg   ecx,eax
  4185e8:	dec    edx
  4185e9:	test   DWORD PTR [edi],ecx
  4185eb:	mov    edx,0xeb0fd513
  4185f0:	fsub   DWORD PTR [ecx]
  4185f2:	je     0x418605
  4185f4:	sbb    BYTE PTR [ecx+0x2035bcf7],ch
  4185fa:	sahf   
  4185fb:	mov    ds:0x5bd25c70,eax
  418600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418601:	jmp    DWORD PTR [ebp+0x40c1b0a7]
  418607:	sub    DWORD PTR [esi-0x72],eax
  41860a:	mov    ecx,0x1aaaa3a9
  41860f:	shl    BYTE PTR [ebx+0x5301b1a0],1
  418615:	test   eax,0x800e14fd
  41861a:	loopne 0x418657
  41861c:	shr    DWORD PTR [ebx+ebx*1+0x1b],0xf5
  418621:	(bad)  
  418622:	jl     0x418610
  418624:	neg    ebp
  418626:	lock int3 
  418628:	add    eax,0xd5144812
  41862d:	sub    BYTE PTR [esp+edi*2],0x3d
  418631:	mov    eax,0xebb6aa9a
  418636:	outs   dx,BYTE PTR ds:[esi]
  418637:	mov    bh,0xca
  418639:	add    eax,DWORD PTR [eax]
  41863b:	mov    ecx,0x3180814
  418640:	or     BYTE PTR [ebp+ecx*4+0xc],dh
  418644:	mov    esi,0xcdbe289a
  418649:	push   es
  41864a:	adc    cl,BYTE PTR [esi+0x3a]
  41864d:	push   edi
  41864e:	js     0x41869e
  418650:	mov    al,ds:0x58b9ef08
  418655:	xor    DWORD PTR [ebx+0x6f662001],esi
  41865b:	mov    DWORD PTR [esi],ebx
  41865d:	lock xchg ebp,eax
  41865f:	or     eax,0xecaa058d
  418664:	adc    al,0x31
  418666:	jp     0x4185ee
  418668:	ins    BYTE PTR es:[edi],dx
  418669:	ror    BYTE PTR [ecx-0x2006f5bb],cl
  41866f:	mov    dl,0xd6
  418671:	push   esi
  418672:	ss (bad) 
  418674:	inc    BYTE PTR [ecx]
  418676:	cs test eax,0xb5846c42
  41867c:	gs push bx
  41867f:	pop    ebp
  418680:	fldcw  WORD PTR ds:0x8b8b3399
  418686:	cdq    
  418687:	sub    ebx,DWORD PTR [ebx]
  418689:	xchg   edi,eax
  41868a:	jp     0x418614
  41868c:	repz jl 0x4186df
  41868f:	stos   BYTE PTR es:[edi],al
  418690:	sbb    al,0x26
  418692:	mov    ch,0x46
  418694:	or     BYTE PTR [edx-0x2d],cl
  418697:	xor    esp,DWORD PTR [ebp+edi*4+0x4eb1fba2]
  41869e:	call   0xdc068793
  4186a3:	dec    ecx
  4186a4:	sbb    eax,0x31b662b2
  4186a9:	jl     0x4186f8
  4186ab:	adc    DWORD PTR [ecx],0x1f
  4186ae:	mov    edx,0xd8602830
  4186b3:	inc    edi
  4186b4:	inc    esp
  4186b5:	sahf   
  4186b6:	mov    DWORD PTR ds:0xdb26ad4f,ebp
  4186bc:	push   edx
  4186bd:	pop    es
  4186be:	sbb    DWORD PTR [edi-0x76e43e5f],esi
  4186c4:	jb     0x4186bb
  4186c6:	out    dx,al
  4186c7:	aam    0xe2
  4186c9:	loope  0x4186d1
  4186cb:	fadd   st(2),st
  4186cd:	cld    
  4186ce:	sub    DWORD PTR [eax+edx*1+0x1e],esi
  4186d2:	popf   
  4186d3:	sub    eax,DWORD PTR [esi+ebp*2+0x7bcf2a5d]
  4186da:	jnp    0x4186de
  4186dc:	(bad)  
  4186dd:	call   0x10bcf45a
  4186e2:	lock into 
  4186e4:	imul   edi,ecx,0xd9859d28
  4186ea:	adc    bh,BYTE PTR [edx-0x32]
  4186ed:	ss jge 0x418689
  4186f0:	mov    al,ds:0xa077ca3e
  4186f5:	fadd   DWORD PTR [ebx-0x23]
  4186f8:	sub    al,0x8d
  4186fa:	mov    ebp,0x31e24b36
  4186ff:	mov    ebx,DWORD PTR [edi]
  418701:	mov    al,BYTE PTR [edi+ebx*1+0x4347adad]
  418708:	mov    ah,0x80
  41870a:	mov    ebp,0x4b7f2e0e
  41870f:	mov    ebp,0x73b52c11
  418714:	dec    ecx
  418715:	cwde   
  418716:	popf   
  418717:	dec    edx
  418718:	xor    ah,BYTE PTR [edi+esi*4]
  41871b:	icebp  
  41871c:	or     eax,0x4fab3dc1
  418721:	out    0xcb,al
  418723:	push   0xffffffe6
  418725:	ds mov esp,0x7095e8b9
  41872b:	out    dx,al
  41872c:	push   es
  41872d:	push   0x1
  41872f:	or     bl,BYTE PTR [ecx+0x5ef89c11]
  418735:	and    BYTE PTR ds:0x46f7b29,ah
  41873b:	mov    ah,0xb3
  41873d:	in     eax,dx
  41873e:	or     eax,0x18fea359
  418743:	pop    eax
  418744:	push   esi
  418745:	retf   0xb227
  418748:	mov    ds:0x12551114,al
  41874d:	popa   
  41874e:	sbb    eax,0xad64b980
  418753:	cmp    al,0xeb
  418755:	mov    es,WORD PTR [ecx-0x7a]
  418758:	imul   edi,DWORD PTR [esi-0x7d8b9d8],0xffffffc8
  41875f:	test   DWORD PTR [edx+0x383ddf1b],esp
  418765:	and    al,0x39
  418767:	mov    esp,edx
  418769:	sbb    esp,DWORD PTR [edx+0x6a]
  41876c:	inc    ebx
  41876d:	add    dl,BYTE PTR [ecx+ebx*4]
  418770:	pop    ds
  418771:	pop    eax
  418772:	xchg   ebp,eax
  418773:	in     al,dx
  418774:	lock daa 
  418776:	mov    ch,0xd9
  418778:	xlat   BYTE PTR ds:[ebx]
  418779:	scas   eax,DWORD PTR es:[edi]
  41877a:	outs   dx,DWORD PTR ds:[esi]
  41877b:	push   0xffffffb5
  41877d:	xor    eax,0x3bed5755
  418782:	in     al,0x6
  418784:	add    ebx,DWORD PTR [edx+0x1b]
  418787:	and    ebp,edi
  418789:	adc    edx,DWORD PTR [edx-0x17]
  41878c:	inc    edi
  41878d:	fnstsw WORD PTR [ebx]
  41878f:	xchg   esp,eax
  418790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418791:	out    0xbe,al
  418793:	xor    ebp,DWORD PTR [ebp+0x3]
  418796:	mov    ds:0xfffb1e3d,al
  41879b:	in     al,0x62
  41879d:	mul    DWORD PTR [eax+ecx*8-0x7b]
  4187a1:	aam    0xa4
  4187a3:	mov    ah,0x27
  4187a5:	mov    DWORD PTR [esi+edx*4],edi
  4187a8:	aas    
  4187a9:	add    al,0xc8
  4187ab:	inc    ecx
  4187ac:	inc    ebp
  4187ad:	mov    ch,0xb8
  4187af:	cmc    
  4187b0:	daa    
  4187b1:	and    ebx,ecx
  4187b3:	test   ecx,ebp
  4187b5:	jp     0x418786
  4187b7:	adc    eax,0x1dac511c
  4187bc:	xor    edx,edx
  4187be:	fidivr WORD PTR ds:0x8d6f816c
  4187c4:	and    ah,cl
  4187c6:	xchg   esp,eax
  4187c7:	pop    ebx
  4187c8:	add    eax,0xd49a362e
  4187cd:	icebp  
  4187ce:	je     0x41880c
  4187d0:	imul   esp,eax,0xffffffb7
  4187d3:	pop    ebx
  4187d4:	daa    
  4187d5:	mov    ds:0x74a0e4af,al
  4187da:	mov    DWORD PTR [ebp+0x4097be13],ebx
  4187e0:	scas   eax,DWORD PTR es:[edi]
  4187e1:	dec    ecx
  4187e2:	lds    edi,FWORD PTR [ebp+0x65]
  4187e5:	sbb    DWORD PTR [esi+esi*1+0x44374562],0x44bd7d80
  4187f0:	sub    BYTE PTR [esi+0x63],dh
  4187f3:	jmp    0x4187ed
  4187f5:	push   ss
  4187f6:	in     al,dx
  4187f7:	and    BYTE PTR [edi],ch
  4187f9:	lods   al,BYTE PTR ds:[esi]
  4187fa:	push   ss
  4187fb:	sbb    eax,0x6fe7af3c
  418800:	mov    ebp,0xf8305c63
  418805:	test   BYTE PTR [ecx],ch
  418807:	lahf   
  418808:	jcxz   0x418820
  41880b:	cmc    
  41880c:	sub    cl,dh
  41880e:	jb     0x4187d8
  418810:	xchg   WORD PTR [ecx-0x5de09739],ax
  418817:	loope  0x4187f4
  418819:	stos   BYTE PTR es:[edi],al
  41881a:	mov    BYTE PTR [esi-0x25],0x8d
  41881e:	rcr    BYTE PTR [edx],1
  418820:	mov    eax,esi
  418822:	add    BYTE PTR [edx+0x7dde1412],al
  418828:	out    dx,eax
  418829:	jno    0x41880d
  41882b:	inc    esp
  41882c:	or     DWORD PTR [ebp+0x483c662f],edi
  418832:	and    al,0x70
  418834:	push   ecx
  418835:	add    cl,BYTE PTR [eax+esi*8+0x17]
  418839:	cmp    al,dl
  41883b:	pop    eax
  41883c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41883d:	(bad)  
  41883e:	fsubr  DWORD PTR [esi]
  418840:	clc    
  418841:	inc    ecx
  418842:	fstp   TBYTE PTR ds:0x8bfcf728
  418848:	xor    DWORD PTR [ebp+0x77],edi
  41884b:	jg     0x41880e
  41884d:	pusha  
  41884e:	push   esi
  41884f:	and    eax,0x397f5a76
  418854:	sahf   
  418855:	adc    cl,BYTE PTR [ebp-0x330823dc]
  41885b:	adc    al,0xa4
  41885d:	dec    ecx
  41885f:	cld    
  418860:	ret    
  418861:	and    DWORD PTR [eax],eax
  418863:	pop    edx
  418864:	pop    esp
  418865:	cld    
  418866:	fisttp QWORD PTR fs:[ebx-0x743a5cd8]
  41886d:	xor    edi,DWORD PTR [edi-0x40]
  418870:	adc    al,0xa6
  418872:	cld    
  418873:	cld    
  418874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418875:	push   cs
  418876:	and    esi,esi
  418878:	(bad)  
  41887a:	int    0x87
  41887c:	fistp  WORD PTR [ecx-0x3d30a283]
  418882:	jno    0x418834
  418884:	xchg   DWORD PTR [esi],eax
  418886:	hlt    
  418887:	shl    BYTE PTR [edi-0x68],0x86
  41888b:	mov    al,0x3
  41888d:	xchg   ebx,eax
  41888e:	sti    
  41888f:	dec    esp
  418890:	in     eax,0x26
  418892:	fmul   QWORD PTR [eax]
  418894:	inc    esp
  418895:	sub    DWORD PTR [eax],edi
  418897:	out    dx,al
  418898:	inc    edi
  418899:	retw   0x7aeb
  41889d:	mov    dh,0xd5
  41889f:	(bad)  
  4188a0:	xchg   ebx,eax
  4188a1:	mov    ah,0x2e
  4188a3:	mov    es,WORD PTR [eax+0x1df6dd5e]
  4188a9:	sub    DWORD PTR [edi-0x4e],ecx
  4188ac:	jo     0x418889
  4188ae:	dec    DWORD PTR [edx]
  4188b0:	sub    al,0xce
  4188b2:	mov    edx,0xe15bbca7
  4188b7:	mov    esp,0x1577b5d3
  4188bc:	xchg   ebp,eax
  4188bd:	jo     0x4188c0
  4188bf:	scas   eax,DWORD PTR es:[edi]
  4188c0:	or     ebp,edx
  4188c2:	sbb    al,0x4
  4188c4:	mov    DWORD PTR [esi-0x11],edi
  4188c7:	cdq    
  4188c8:	(bad)  
  4188c9:	fisttp DWORD PTR [ebx-0x7f]
  4188cc:	repz jae 0x4188b0
  4188cf:	add    ah,BYTE PTR [eax-0x29]
  4188d2:	ret    
  4188d3:	jmp    0x41893c
  4188d5:	outs   dx,DWORD PTR ds:[esi]
  4188d6:	xor    BYTE PTR ds:[ebx],ch
  4188d9:	mov    ds:0xa9419412,al
  4188de:	clc    
  4188df:	jge    0x418947
  4188e1:	gs mov dl,0x9
  4188e4:	adc    dl,BYTE PTR ds:0x2b9209ca
  4188ea:	rcl    ch,0x5
  4188ed:	fnstsw WORD PTR [edi+ebx*2-0x67]
  4188f1:	pop    es
  4188f2:	sbb    ch,BYTE PTR [esi-0x1ffe962b]
  4188f8:	or     eax,0xffe5acc4
  4188fd:	adc    eax,0xf44a4bb8
  418902:	test   BYTE PTR [ebp-0x1c],ah
  418905:	adc    eax,0xd63f6bfb
  41890a:	lds    edx,FWORD PTR [ebp-0x69]
  41890d:	(bad)  
  41890e:	cdq    
  41890f:	sub    DWORD PTR [edi],0x92f9d61f
  418915:	and    cl,0xd6
  418918:	and    eax,0x2bc975b3
  41891d:	in     eax,dx
  41891e:	xchg   edx,eax
  41891f:	mov    ebx,0x9b414133
  418924:	mov    esi,0xd43a5d43
  418929:	(bad)  
  41892a:	jg     0x41898c
  41892c:	iret   
  41892d:	xlat   BYTE PTR ds:[ebx]
  41892e:	pushf  
  41892f:	loope  0x418963
  418931:	jno    0x4188d2
  418933:	mov    WORD PTR [ebx+0x1b4dd19a],?
  418939:	cmp    BYTE PTR [ecx+0x50],dl
  41893c:	jns    0x4188e7
  41893e:	int3   
  41893f:	fiadd  DWORD PTR [edx]
  418941:	mov    ebp,0x1f2ec25e
  418946:	sbb    bh,0x5f
  418949:	pop    edi
  41894b:	push   eax
  41894c:	cwde   
  41894d:	loopne 0x41891a
  41894f:	mov    dl,al
  418951:	ficom  WORD PTR [ecx]
  418953:	(bad)  
  418954:	adc    ebp,DWORD PTR ds:0x88790a18
  41895a:	push   ebp
  41895b:	jp     0x418909
  41895d:	popa   
  41895e:	pop    esp
  41895f:	mov    eax,ds:0xf49c1719
  418964:	repnz xor bh,BYTE PTR [ecx+edi*2]
  418968:	pop    ebx
  418969:	in     al,dx
  41896a:	aad    0xe7
  41896c:	out    dx,al
  41896d:	call   0x64b:0x3ee6fa2a
  418974:	fdivr  DWORD PTR [edi-0x2a]
  418977:	ficomp DWORD PTR [edx+0x28076017]
  41897d:	pop    esi
  41897e:	dec    esp
  41897f:	adc    al,0xf3
  418981:	pop    edx
  418982:	mov    esi,0x394d0638
  418987:	inc    ebx
  418988:	xchg   esi,eax
  418989:	mov    al,ds:0x83481054
  41898e:	nop
  41898f:	inc    ebx
  418990:	xchg   edx,eax
  418991:	lea    ecx,[esi+edx*8]
  418994:	inc    ebp
  418995:	cmp    BYTE PTR [edi+ecx*1],bh
  418998:	out    dx,al
  418999:	cld    
  41899a:	ret    
  41899b:	ins    BYTE PTR es:[edi],dx
  41899c:	les    edx,FWORD PTR [ebx]
  41899e:	icebp  
  41899f:	sbb    DWORD PTR [esi+0x14],edx
  4189a2:	bound  edx,QWORD PTR [esi]
  4189a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189a5:	sbb    eax,0x8eb9fc4f
  4189aa:	rcr    DWORD PTR [edi],1
  4189ac:	pushf  
  4189ad:	mov    eax,0x4ae84b63
  4189b2:	or     BYTE PTR ds:0x68beae8,ch
  4189b8:	jmp    0x418a2a
  4189ba:	or     al,0x2f
  4189bc:	push   ebp
  4189bd:	xor    al,0x7f
  4189bf:	loop   0x4189e8
  4189c1:	mov    ebp,0xd8da0c18
  4189c6:	loope  0x4189a5
  4189c8:	cwde   
  4189c9:	fcmovnbe st,st(6)
  4189cb:	cld    
  4189cc:	sbb    eax,0x1cfeaffd
  4189d1:	pop    esi
  4189d2:	retf   
  4189d3:	loopne 0x4189b1
  4189d5:	or     eax,0xb9558915
  4189da:	mov    ch,0xa3
  4189dc:	mov    ss,edx
  4189de:	inc    edx
  4189df:	repnz add al,0x5e
  4189e2:	outs   dx,DWORD PTR ds:[esi]
  4189e3:	add    DWORD PTR [ebx-0x69],esi
  4189e6:	sub    cl,BYTE PTR [esi+0x662d93f3]
  4189ec:	add    eax,0x39a16fca
  4189f1:	popa   
  4189f2:	rcl    BYTE PTR [ebx-0x28],0x33
  4189f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189f7:	cmp    al,0xd9
  4189f9:	cs inc esp
  4189fb:	(bad)
  418a00:	ret    0x9e91
  418a03:	dec    esp
  418a04:	imul   esi
  418a06:	push   ebp
  418a07:	loope  0x4189ae
  418a09:	daa    
  418a0a:	jb     0x418a2e
  418a0c:	pop    ebp
  418a0d:	dec    ecx
  418a0e:	loop   0x4189f0
  418a10:	in     eax,dx
  418a11:	and    al,BYTE PTR [esi+0x72574d91]
  418a17:	jno    0x418a1d
  418a19:	add    ch,BYTE PTR [ebp+ebx*4+0x15]
  418a1d:	ins    DWORD PTR es:[edi],dx
  418a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a1f:	or     eax,0x518dd346
  418a24:	adc    bl,ah
  418a26:	adc    al,0xc5
  418a28:	mov    cl,0x1f
  418a2a:	mov    al,ds:0xc7fce02d
  418a2f:	sub    BYTE PTR [bp+si+0x7f24],0xa5
  418a35:	xor    BYTE PTR [edx-0x3da44a5b],cl
  418a3b:	cmp    DWORD PTR [ecx+0x2f],0x39
  418a3f:	xlat   BYTE PTR ds:[ebx]
  418a40:	add    bh,dl
  418a42:	or     eax,0x37e8ff8c
  418a47:	mov    bh,dl
  418a49:	xchg   DWORD PTR [esi],eax
  418a4b:	mov    dh,0x81
  418a4d:	add    bh,BYTE PTR [edx]
  418a4f:	pop    esp
  418a50:	fcom   DWORD PTR [esp+esi*1-0x3e6d3f59]
  418a57:	cmp    ebx,DWORD PTR [edi+0x56b41f94]
  418a5d:	ja     0x418a29
  418a5f:	mov    esp,DWORD PTR [ecx-0x3efea313]
  418a65:	sbb    dh,BYTE PTR [esp+esi*1+0x23]
  418a69:	cmp    al,0x54
  418a6b:	pushf  
  418a6c:	pop    ds
  418a6d:	cmp    bl,dh
  418a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a70:	push   cs
  418a71:	pop    es
  418a72:	push   ecx
  418a73:	fcomip st,st(3)
  418a75:	xchg   ebp,eax
  418a76:	sahf   
  418a77:	xchg   ebx,eax
  418a78:	mov    WORD PTR ds:0x6f740cf0,?
  418a7e:	mov    WORD PTR [ebx-0x5657d928],cs
  418a84:	jl     0x418aa7
  418a86:	test   ah,dh
  418a88:	dec    edx
  418a89:	adc    DWORD PTR [bp+si+0x47],0xffffffdb
  418a8e:	inc    edx
  418a8f:	pop    ss
  418a90:	inc    esp
  418a91:	mov    al,ds:0x6b58448c
  418a96:	jp     0x418a30
  418a98:	xchg   ecx,eax
  418a99:	mov    es:0x59e7f7e1,eax
  418a9f:	sub    eax,0x36aa2fb2
  418aa4:	sar    dh,1
  418aa6:	add    al,0x26
  418aa8:	xor    eax,0xd93dbaf
  418aad:	push   edi
  418aae:	inc    esp
  418aaf:	(bad)  
  418ab0:	fdiv   DWORD PTR [edx]
  418ab2:	out    dx,al
  418ab3:	stos   DWORD PTR es:[edi],eax
  418ab4:	sbb    BYTE PTR [ebx+eax*1-0x62],al
  418ab8:	in     eax,dx
  418ab9:	cmp    BYTE PTR [ecx],cl
  418abb:	xlat   BYTE PTR ds:[ebx]
  418abc:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  418abe:	jnp    0x418ae5
  418ac0:	push   edx
  418ac1:	mov    eax,ds:0x5ab6122
  418ac6:	loope  0x418a80
  418ac8:	xchg   ecx,ebx
  418aca:	inc    edi
  418acb:	and    al,0x73
  418acd:	sub    esp,DWORD PTR [esp+ecx*8-0x26]
  418ad1:	cmp    eax,0xed54716
  418ad6:	jmp    0xd139:0xea0b6f28
  418add:	push   eax
  418ade:	xor    eax,0x54903432
  418ae3:	push   0x5af5dc05
  418ae8:	loopne 0x418aa0
  418aea:	int    0x4d
  418aec:	ds jno 0x418a70
  418aef:	push   esi
  418af0:	add    ch,bl
  418af2:	in     eax,0xa2
  418af4:	push   ds
  418af5:	jbe    0x418ace
  418af7:	push   ebx
  418af8:	ds sbb eax,0x79226342
  418afe:	cmp    al,0xb0
  418b00:	hlt    
  418b01:	inc    edi
  418b02:	repnz daa 
  418b04:	call   DWORD PTR [ecx+0x67]
  418b07:	into   
  418b08:	xor    ebx,DWORD PTR [eax+0x18]
  418b0b:	pop    ds
  418b0c:	(bad)  
  418b0d:	mov    bh,0x71
  418b0f:	dec    ebx
  418b10:	push   ecx
  418b11:	push   ebx
  418b12:	inc    ebx
  418b13:	or     BYTE PTR [edi-0x6d],0x4e
  418b17:	retf   0xcb48
  418b1a:	mov    ds:0x2a0579a1,eax
  418b1f:	mov    eax,ds:0x7271f0d9
  418b24:	mov    esp,0x91cec358
  418b29:	mov    ecx,0x425b40f7
  418b2e:	add    esp,DWORD PTR [ebx+0x68e247a9]
  418b34:	jbe    0x418b27
  418b36:	xchg   ebp,eax
  418b37:	in     eax,0xb1
  418b39:	shl    DWORD PTR [esi+ebx*1],cl
  418b3c:	xor    eax,0xafeefd82
  418b41:	cs inc ecx
  418b43:	lock (bad) 
  418b45:	pop    ebx
  418b46:	mov    WORD PTR [eax-0x2],fs
  418b49:	fs je  0x418b2b
  418b4c:	jb     0x418bbb
  418b4e:	xchg   ebx,eax
  418b4f:	push   edi
  418b50:	test   DWORD PTR [ebp+0x7a],ebx
  418b53:	add    ah,bl
  418b55:	pop    edi
  418b56:	out    0xb0,al
  418b58:	adc    al,0xdb
  418b5a:	aad    0x4e
  418b5c:	fisttp DWORD PTR [esi-0xa]
  418b5f:	fnstsw WORD PTR [edx]
  418b61:	or     ch,BYTE PTR [ebx]
  418b63:	and    edx,edx
  418b65:	dec    edi
  418b66:	retf   
  418b67:	addr16 jo 0x418b41
  418b6a:	cmp    al,0x81
  418b6c:	sub    edx,ebx
  418b6e:	pop    edx
  418b6f:	xchg   ebp,eax
  418b70:	outs   dx,DWORD PTR ds:[esi]
  418b71:	xor    esi,0x2c3a9142
  418b77:	pop    edi
  418b78:	and    edi,0x23
  418b7b:	mov    ds:0xde0ffc07,eax
  418b80:	mov    ebp,0x49e32789
  418b85:	jge    0x418b34
  418b87:	adc    ebx,DWORD PTR [ebp+0x63]
  418b8a:	icebp  
  418b8b:	mov    BYTE PTR [eax+0x71],bh
  418b8e:	mov    esi,0x76a2baef
  418b93:	adc    DWORD PTR [edx],ebp
  418b95:	sbb    al,0xfa
  418b97:	sbb    cl,ah
  418b99:	xchg   ecx,eax
  418b9a:	pop    ebp
  418b9b:	add    esi,ebp
  418b9d:	retf   0xd478
  418ba0:	stos   BYTE PTR es:[edi],al
  418ba1:	xor    BYTE PTR [eax],dh
  418ba3:	dec    edi
  418ba4:	aad    0xd
  418ba6:	dec    esp
  418ba7:	pop    es
  418ba8:	out    dx,al
  418ba9:	jbe    0x418bac
  418bab:	iret   
  418bac:	mov    cl,0x44
  418bae:	and    eax,0x122e12ac
  418bb3:	and    DWORD PTR [ebp+0x1],eax
  418bb6:	out    0x7,eax
  418bb8:	jmp    0x418bfe
  418bba:	(bad)  
  418bbb:	mov    eax,0x905bd749
  418bc0:	dec    esi
  418bc1:	fst    DWORD PTR [edi]
  418bc3:	or     BYTE PTR [ebp-0x7cd471a3],dl
  418bc9:	xor    dl,BYTE PTR [eax]
  418bcb:	cmp    bh,BYTE PTR [ecx+0x12]
  418bce:	ret    0xe2f3
  418bd1:	cld    
  418bd2:	adc    dh,BYTE PTR [edx-0x2a0dd2b8]
  418bd8:	ja     0x418b96
  418bda:	add    al,0x63
  418bdc:	adc    bh,bl
  418bde:	mov    ebx,0x62b56a93
  418be3:	int    0x1f
  418be5:	not    BYTE PTR [esi-0x75]
  418be8:	repnz fxch st(6)
  418beb:	fwait
  418bec:	xchg   edx,eax
  418bed:	test   DWORD PTR [esi+0x77],0x83a5ca8e
  418bf4:	dec    edi
  418bf5:	loope  0x418bbd
  418bf7:	or     ebx,DWORD PTR [esp+esi*1+0x9]
  418bfb:	icebp  
  418bfc:	mov    al,0x45
  418bfe:	xchg   edi,eax
  418bff:	push   0xffffffcb
  418c01:	xor    ch,BYTE PTR [esp+eax*2]
  418c04:	dec    ecx
  418c05:	repz out dx,eax
  418c07:	ins    DWORD PTR es:[edi],dx
  418c08:	pop    ebx
  418c09:	enter  0xb4c6,0x2b
  418c0d:	mov    ebp,DWORD PTR [eax-0x7]
  418c10:	adc    al,ah
  418c12:	add    al,0xfe
  418c14:	dec    esi
  418c15:	xchg   esi,esp
  418c17:	int3   
  418c18:	jmp    0x418ba7
  418c1a:	loope  0x418bb2
  418c1c:	sbb    eax,0xa571dbc1
  418c21:	jl     0x418c2e
  418c23:	push   0x26
  418c25:	jbe    0x418bf6
  418c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c28:	inc    edi
  418c29:	(bad)  
  418c2a:	pushf  
  418c2b:	jg     0x418bb6
  418c2d:	jo     0x418c3d
  418c2f:	enter  0x8d68,0x4
  418c33:	jns    0x418c88
  418c35:	adc    ebx,DWORD PTR [ecx+0x3e6d0791]
  418c3b:	cmp    al,0x63
  418c3d:	ss xor al,0xfb
  418c40:	jne    0x418c42
  418c42:	arpl   WORD PTR [ecx],bx
  418c44:	call   0x9f98:0x30e59dc2
  418c4b:	or     DWORD PTR [ebx-0x398554ea],esi
  418c51:	call   DWORD PTR [edi+ecx*1-0x54086bb9]
  418c58:	jbe    0x418ccd
  418c5a:	stos   DWORD PTR es:[edi],eax
  418c5b:	lds    ebx,FWORD PTR [edi+0x7259d5f]
  418c61:	sbb    BYTE PTR [edi+0x41],bl
  418c64:	xor    eax,0x9f61279a
  418c69:	mov    BYTE PTR [edi],al
  418c6b:	push   es
  418c6c:	inc    ecx
  418c6d:	jge    0x418c5c
  418c6f:	push   0x3a
  418c71:	add    BYTE PTR [edx-0x274a2d18],ah
  418c77:	outs   dx,BYTE PTR ds:[esi]
  418c78:	add    cl,BYTE PTR [edi]
  418c7a:	(bad)  
  418c7b:	and    DWORD PTR [edi-0x25ac6da4],ebp
  418c81:	mov    ecx,0x66e46ab3
  418c86:	pop    ds
  418c87:	in     al,0xc8
  418c89:	sub    eax,0x158f556d
  418c8e:	xchg   BYTE PTR [ebp+eiz*4-0x10],ch
  418c92:	out    0x2f,al
  418c94:	call   0x5254:0x84efe67c
  418c9b:	test   BYTE PTR [ecx],ch
  418c9d:	jb     0x418c30
  418c9f:	mov    ch,0xdc
  418ca1:	or     edi,DWORD PTR [esi]
  418ca3:	es push ecx
  418ca5:	pop    es
  418ca6:	out    0xb6,al
  418ca8:	outs   dx,BYTE PTR ds:[esi]
  418ca9:	dec    esp
  418caa:	cwde   
  418cab:	jecxz  0x418c8a
  418cad:	arpl   WORD PTR [esi],si
  418caf:	cmp    cl,BYTE PTR [ecx+0x20364bc8]
  418cb5:	sbb    eax,DWORD PTR [edi+0x6621cce3]
  418cbb:	loop   0x418d27
  418cbd:	pop    es
  418cbe:	push   edi
  418cbf:	dec    edx
  418cc0:	(bad)  
  418cc1:	(bad)
  418cc4:	mov    ebx,ebp
  418cc6:	push   ecx
  418cc7:	lods   al,BYTE PTR ds:[esi]
  418cc8:	jo     0x418cf1
  418cca:	sahf   
  418ccb:	aad    0x2e
  418ccd:	pushf  
  418cce:	and    BYTE PTR [esp+eiz*4],dh
  418cd1:	mov    ecx,ebx
  418cd3:	iret   
  418cd4:	pop    esp
  418cd5:	xchg   ebp,eax
  418cd6:	inc    BYTE PTR [edx+0x5b]
  418cd9:	ins    BYTE PTR es:[edi],dx
  418cda:	test   DWORD PTR [edi-0x35],esp
  418cdd:	shr    BYTE PTR [esi-0x7e],cl
  418ce0:	ret    0x10bf
  418ce3:	and    al,0xe1
  418ce5:	psrad  mm1,QWORD PTR [ebx-0x4c0d3c1d]
  418cec:	in     eax,dx
  418ced:	xor    DWORD PTR [ebx],edx
  418cef:	std    
  418cf0:	test   BYTE PTR [esi-0x2a],al
  418cf3:	xor    al,0xac
  418cf5:	adc    bl,BYTE PTR [ebx+0x1]
  418cf8:	inc    esp
  418cf9:	dec    esp
  418cfa:	popa   
  418cfb:	mov    al,BYTE PTR [ebx+0x41]
  418cfe:	stos   BYTE PTR es:[edi],al
  418cff:	sbb    eax,0xeac6e9e5
  418d04:	xor    eax,0xa22b4c2c
  418d09:	inc    ebp
  418d0a:	int3   
  418d0b:	inc    eax
  418d0c:	push   ss
  418d0d:	into   
  418d0e:	adc    al,0x23
  418d10:	jge    0x418d02
  418d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d13:	daa    
  418d14:	ret    0x903f
  418d17:	into   
  418d18:	and    esi,DWORD PTR [ecx+ecx*2-0x5f]
  418d1c:	mov    ds:0xbdf0cc32,al
  418d21:	fidivr DWORD PTR [ebx+edx*1+0x1]
  418d25:	inc    ecx
  418d26:	pop    ss
  418d27:	pop    esp
  418d28:	mov    dl,0xf3
  418d2a:	ja     0x418d50
  418d2c:	repz out dx,eax
  418d2e:	retf   
  418d2f:	mov    al,0x49
  418d31:	sub    al,BYTE PTR [edi+0xe7579b3]
  418d37:	sub    dh,ah
  418d39:	mov    ebp,0x5323d404
  418d3e:	arpl   WORD PTR [ebx],cx
  418d40:	pop    edi
  418d41:	(bad)  
  418d42:	fsub   QWORD PTR [ebp+eax*1+0x32]
  418d46:	lods   al,BYTE PTR ds:[esi]
  418d47:	and    eax,0xbc2f6ca2
  418d4c:	sub    DWORD PTR [eax-0xb5b9b51],edx
  418d52:	(bad)  
  418d53:	mov    dh,0xc7
  418d55:	jno    0x418d6a
  418d57:	xchg   ebx,eax
  418d58:	retf   
  418d59:	mov    edi,0x96767de8
  418d5e:	stos   DWORD PTR es:[edi],eax
  418d5f:	mov    dl,0x1d
  418d61:	mov    WORD PTR [ebx+0x555579c7],ds
  418d67:	push   esp
  418d68:	sub    BYTE PTR [esi],ah
  418d6a:	mov    fs:0x9fdbb9fa,eax
  418d70:	std    
  418d71:	sub    eax,0xb1e9defa
  418d76:	popa   
  418d77:	jmp    0xf618:0x2004218d
  418d7e:	iret   
  418d7f:	bnd ret 0xbd11
  418d83:	push   ebx
  418d84:	xor    eax,0x544d4d0e
  418d89:	pusha  
  418d8a:	push   edi
  418d8b:	xor    dh,0xcf
  418d8e:	dec    ecx
  418d8f:	imul   DWORD PTR [ecx+0x2b]
  418d92:	sar    BYTE PTR [esi],cl
  418d94:	pop    ebp
  418d95:	div    BYTE PTR [eax+0x79]
  418d98:	lock push edi
  418d9a:	ja     0x418d35
  418d9c:	loopne 0x418d56
  418d9e:	pop    ebx
  418d9f:	cmc    
  418da0:	cld    
  418da1:	mov    edi,0x6326286c
  418da6:	clc    
  418da7:	outs   dx,BYTE PTR ds:[esi]
  418da8:	add    DWORD PTR [ebx-0x5cc7ea07],ecx
  418dae:	pop    ebp
  418daf:	das    
  418db0:	dec    esi
  418db1:	stc    
  418db2:	xchg   ecx,eax
  418db3:	mul    BYTE PTR [esi]
  418db5:	mov    eax,ds:0x4433912a
  418dba:	mov    ch,BYTE PTR ds:0x78b2287e
  418dc0:	sahf   
  418dc1:	push   es
  418dc2:	cdq    
  418dc3:	pop    ecx
  418dc4:	rcr    BYTE PTR [esi+0x39],1
  418dc7:	fucomi st,st(3)
  418dc9:	add    al,0x30
  418dcb:	test   eax,esi
  418dcd:	enter  0x4845,0xd0
  418dd1:	icebp  
  418dd2:	test   al,0xee
  418dd4:	fadd   QWORD PTR [ebx]
  418dd6:	shr    DWORD PTR [ebp+0x73],cl
  418dd9:	mov    ah,0xe1
  418ddb:	dec    esp
  418ddc:	scas   al,BYTE PTR es:[edi]
  418ddd:	xchg   ebx,eax
  418dde:	push   0xa52cb721
  418de3:	and    al,0x1c
  418de5:	ins    BYTE PTR es:[edi],dx
  418de6:	jns    0x418de1
  418de8:	sbb    al,0x51
  418dea:	ins    DWORD PTR es:[edi],dx
  418deb:	and    cl,BYTE PTR [ebx]
  418ded:	repz das 
  418def:	mov    ebx,0x9a04f75d
  418df4:	std    
  418df5:	pop    esp
  418df6:	xchg   ebp,eax
  418df7:	sub    dl,BYTE PTR [ebp-0x7b]
  418dfa:	dec    eax
  418dfb:	or     ebp,DWORD PTR [ecx-0x5f]
  418dfe:	xchg   edi,eax
  418dff:	(bad)
  418e02:	add    bl,BYTE PTR [eax+0x31]
  418e05:	lods   eax,DWORD PTR ds:[esi]
  418e06:	icebp  
  418e07:	cmp    edx,esp
  418e09:	inc    esi
  418e0a:	fucomi st,st(5)
  418e0c:	lods   al,BYTE PTR ds:[esi]
  418e0d:	xchg   edi,eax
  418e0e:	out    dx,eax
  418e0f:	cmp    al,BYTE PTR [ebx]
  418e11:	jg     0x418e62
  418e13:	and    eax,DWORD PTR [edi-0x71]
  418e16:	enter  0x2d8f,0x7f
  418e1a:	dec    ebp
  418e1b:	mov    cl,dh
  418e1d:	or     BYTE PTR [ebx-0x7],ch
  418e20:	mov    esp,0x32c54a82
  418e25:	cwde   
  418e26:	push   ss
  418e27:	sbb    al,0x83
  418e29:	pop    esp
  418e2a:	pop    esp
  418e2b:	cli    
  418e2c:	arpl   WORD PTR [ecx+0x5a],ax
  418e2f:	jne    0x418e2c
  418e31:	sub    al,0xae
  418e33:	push   edx
  418e34:	jp     0x418e69
  418e36:	mul    BYTE PTR [edi+0x4c8774b]
  418e3c:	loope  0x418ebc
  418e3e:	adc    cl,ah
  418e40:	inc    ebp
  418e41:	int3   
  418e42:	sub    bh,bh
  418e44:	jmp    0x418dd7
  418e46:	push   ebp
  418e47:	js     0x418dfd
  418e49:	imul   ecx,DWORD PTR [ebx-0x4a29dbf4],0x16
  418e50:	(bad)  
  418e52:	cmp    al,0x2f
  418e54:	(bad)  
  418e55:	rol    ah,cl
  418e57:	cmp    BYTE PTR [edi-0x27e5d084],dh
  418e5d:	xchg   ecx,eax
  418e5e:	or     BYTE PTR [ebp-0x375ab555],dl
  418e64:	dec    edx
  418e65:	mov    edx,0xfae11789
  418e6a:	xchg   ebp,eax
  418e6b:	mov    esp,0x4ed123a7
  418e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e72:	jno    0x418ebe
  418e74:	or     eax,0x8ac66700
  418e79:	sar    ecx,0x15
  418e7c:	nop
  418e7d:	or     al,0xdc
  418e7f:	ss mov edx,0xa31a9469
  418e85:	jmp    0x418ea6
  418e87:	mov    WORD PTR ds:0x7c701de9,?
  418e8d:	mov    bh,0x73
  418e8f:	mov    ebx,0x78dd37b4
  418e94:	aas    
  418e95:	push   esi
  418e96:	push   ebp
  418e97:	xor    BYTE PTR [edx+eax*4],dh
  418e9a:	or     edi,DWORD PTR [edi-0x6a71252]
  418ea0:	pop    esp
  418ea1:	xchg   ecx,eax
  418ea2:	add    dh,ch
  418ea4:	retf   0x94c0
  418ea7:	jecxz  0x418e58
  418ea9:	push   eax
  418eaa:	jmp    0x418e77
  418eac:	cs mov ch,0x88
  418eaf:	scas   eax,DWORD PTR es:[edi]
  418eb0:	xor    al,0xa9
  418eb2:	(bad)  
  418eb3:	fs call 0xec693b88
  418eb9:	and    DWORD PTR [eax],ebp
  418ebb:	jmp    0xe55d3c89
  418ec0:	shl    ebp,cl
  418ec2:	dec    esp
  418ec3:	push   ebx
  418ec4:	enter  0xcd88,0xac
  418ec8:	fst    QWORD PTR [ebp+0x35]
  418ecb:	test   al,0x5c
  418ecd:	mov    cs,WORD PTR [esi+0x1d59d9]
  418ed3:	cmovbe eax,DWORD PTR [edi+0x4a5c8c24]
  418eda:	mov    edx,0x31bcb079
  418edf:	dec    ebx
  418ee0:	and    BYTE PTR [esi],dl
  418ee2:	or     BYTE PTR [edi*4+0x680f0d71],ah
  418ee9:	test   al,0xde
  418eeb:	addr16 push 0x71
  418eee:	fisub  DWORD PTR [ebx+0x27]
  418ef1:	inc    edx
  418ef2:	dec    esp
  418ef3:	ins    DWORD PTR es:[edi],dx
  418ef4:	retf   0x2cf4
  418ef7:	ror    BYTE PTR [eax+0x722c08a4],1
  418efd:	inc    ecx
  418efe:	adc    eax,0x7e0fbae1
  418f03:	and    BYTE PTR [edx],dl
  418f05:	pushf  
  418f06:	mov    ah,0xd2
  418f08:	imul   ebp,DWORD PTR [ecx+ecx*8-0x3c836b6b],0xffffffaf
  418f10:	repnz in al,dx
  418f12:	std    
  418f13:	jl     0x418eae
  418f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f16:	dec    eax
  418f17:	jecxz  0x418f87
  418f19:	pop    ebx
  418f1a:	jmp    0x8d69:0x9f03916
  418f21:	dec    edi
  418f22:	pop    esp
  418f23:	cmp    DWORD PTR [ecx+edx*8-0x66],ebx
  418f27:	mov    esp,0x72cd6f3e
  418f2c:	loopne 0x418ed1
  418f2e:	push   eax
  418f2f:	clc    
  418f30:	inc    edi
  418f31:	add    eax,0x181dfb20
  418f36:	pusha  
  418f37:	hlt    
  418f38:	push   ecx
  418f39:	lea    edx,[eax+edi*8]
  418f3c:	and    DWORD PTR [eax-0x56],0x79
  418f40:	test   DWORD PTR [ecx],edx
  418f42:	mov    al,ds:0x76e0a394
  418f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f48:	add    al,0xdf
  418f4a:	stos   BYTE PTR es:[edi],al
  418f4b:	jae    0x418f50
  418f4d:	cld    
  418f4e:	imul   eax,DWORD PTR [edx],0x7b
  418f51:	loopne 0x418f3e
  418f53:	add    ch,ch
  418f55:	bound  eax,QWORD PTR [esi-0x24e64c96]
  418f5b:	and    esi,DWORD PTR [eax-0x1f]
  418f5e:	inc    ecx
  418f5f:	sub    DWORD PTR [esi],0x34286119
  418f65:	lods   eax,DWORD PTR ds:[esi]
  418f66:	push   ebp
  418f67:	int    0xb2
  418f69:	adc    eax,0xd9b12080
  418f6e:	dec    esi
  418f6f:	data16 sbb BYTE PTR [ebx-0x5d],dh
  418f73:	cld    
  418f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f75:	xor    al,0xff
  418f77:	dec    esi
  418f78:	xchg   ebp,eax
  418f79:	loopne 0x418fe7
  418f7b:	iret   
  418f7c:	cdq    
  418f7d:	mov    ah,0x84
  418f7f:	mov    esp,0xf609f1fe
  418f84:	cmp    al,0xc
  418f86:	les    edx,FWORD PTR ds:0xf242bf21
  418f8c:	pop    eax
  418f8d:	stc    
  418f8e:	mov    eax,0xc81e585d
  418f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f94:	data16 fidivr DWORD PTR ds:0x22d5fdd3
  418f9b:	pop    eax
  418f9c:	data16 (bad) 
  418f9e:	in     eax,0xf2
  418fa0:	mov    al,ds:0xa6ff9cbc
  418fa5:	sbb    DWORD PTR [esp+edi*8+0x77],edi
  418fa9:	and    BYTE PTR [ebx+0x685c8506],ah
  418faf:	sbb    ebx,DWORD PTR [edx+0x7a55a2cf]
  418fb5:	pop    ebx
  418fb6:	xor    dl,BYTE PTR [ecx+0x5011a056]
  418fbc:	xor    esi,DWORD PTR [ebx]
  418fbe:	push   ss
  418fbf:	int    0x55
  418fc1:	inc    edi
  418fc2:	and    ah,BYTE PTR [eax]
  418fc4:	xor    DWORD PTR [eax-0x39],esp
  418fc7:	inc    ebx
  418fc8:	sbb    DWORD PTR [edi-0x6d640c3b],esi
  418fce:	mov    dl,0xff
  418fd0:	int    0x63
  418fd2:	push   cs
  418fd3:	xchg   ebx,eax
  418fd4:	pusha  
  418fd5:	mov    eax,ds:0xdfe5c1ef
  418fda:	mov    ecx,0x97136b3b
  418fdf:	rcr    esi,0xee
  418fe2:	and    al,0x87
  418fe4:	outs   dx,DWORD PTR ds:[esi]
  418fe5:	test   al,0x25
  418fe7:	pusha  
  418fe8:	ins    DWORD PTR es:[edi],dx
  418fe9:	outs   dx,BYTE PTR ds:[esi]
  418fea:	out    0xdd,al
  418fec:	mov    ah,0xb1
  418fee:	dec    esp
  418fef:	in     eax,0x68
  418ff1:	stc    
  418ff2:	dec    edi
  418ff3:	(bad)  
  418ff4:	outs   dx,DWORD PTR ds:[esi]
  418ff5:	repz adc BYTE PTR [esi-0x5cde21fd],al
  418ffc:	loope  0x418fc8
  418ffe:	gs push ecx
  419000:	add    ch,0x13
  419003:	stos   BYTE PTR es:[edi],al
  419004:	fidiv  DWORD PTR gs:[esi+0x15]
  419008:	shl    DWORD PTR [esi+0xb],0xef
  41900c:	xor    edi,edx
  41900e:	scas   eax,DWORD PTR es:[edi]
  41900f:	xchg   BYTE PTR [ecx],al
  419011:	adc    edi,DWORD PTR [edi+0x80e0505]
  419017:	dec    ecx
  419018:	ret    0xf2ac
  41901b:	mov    ah,0xe9
  41901d:	daa    
  41901e:	adc    al,0x23
  419020:	shl    DWORD PTR [ecx],0xff
  419023:	sbb    eax,0xa294c4a7
  419028:	(bad)  
  419029:	or     eax,0xef9fb5c6
  41902e:	clc    
  41902f:	(bad)  
  419030:	jl     0x41903a
  419032:	mov    ds,WORD PTR [edx-0x41]
  419035:	jmp    0x2769ee61
  41903a:	ficom  DWORD PTR [eax]
  41903c:	ds add edx,esi
  41903f:	mov    DWORD PTR [edi-0x4b],ecx
  419042:	inc    edx
  419043:	and    BYTE PTR [eax],ah
  419045:	fcomip st,st(4)
  419047:	jne    0x419094
  419049:	dec    ebp
  41904a:	hlt    
  41904b:	and    DWORD PTR [esi],eax
  41904d:	xchg   ecx,eax
  41904e:	jnp    0x418fd0
  419050:	and    edi,ebp
  419052:	xchg   BYTE PTR [ecx-0x2d],cl
  419055:	xor    ecx,0xb
  419058:	push   edi
  419059:	out    dx,eax
  41905a:	dec    esi
  41905b:	inc    edi
  41905c:	aam    0x6e
  41905e:	stos   BYTE PTR es:[edi],al
  41905f:	mov    ch,0xf1
  419061:	mov    BYTE PTR [edx-0x6bf9895e],cl
  419067:	lods   al,BYTE PTR ds:[esi]
  419068:	adc    esp,DWORD PTR [ecx]
  41906a:	je     0x419084
  41906c:	fstp   DWORD PTR [edx-0x2e97ce12]
  419072:	(bad)  
  419073:	mov    WORD PTR [ebx],?
  419075:	pop    edi
  419076:	and    eax,ecx
  419078:	aas    
  419079:	fnstcw WORD PTR ds:0xb26d9b41
  41907f:	pushf  
  419080:	add    esp,ecx
  419082:	jmp    0x88325518
  419087:	mov    ds:0x6420c2c5,eax
  41908c:	xchg   esp,eax
  41908d:	(bad)  
  41908e:	clc    
  41908f:	clc    
  419090:	mov    bl,0xcb
  419092:	xchg   ebx,esp
  419094:	mov    BYTE PTR [edx+ebx*4-0x6c35aa],dh
  41909b:	cs loope 0x4190e2
  41909e:	outs   dx,BYTE PTR ds:[esi]
  41909f:	xor    edx,ecx
  4190a1:	mov    dh,0xad
  4190a3:	cmp    BYTE PTR ds:0xbd80fc3,dh
  4190a9:	mov    dl,0x10
  4190ab:	aas    
  4190ac:	shr    DWORD PTR [ebp-0x42],1
  4190af:	mov    ch,0x52
  4190b1:	ds pop ebx
  4190b3:	dec    eax
  4190b4:	sbb    DWORD PTR [esp+esi*4+0x11],ebx
  4190b8:	add    DWORD PTR [ebp+0x6af7db9b],0x8f490059
  4190c2:	rcr    BYTE PTR [esi+ebx*2+0xb],1
  4190c6:	cmp    DWORD PTR [ecx+0x19],edx
  4190c9:	es mov bh,0xb2
  4190cc:	aad    0xcc
  4190ce:	mov    ds:0x8c85de14,eax
  4190d3:	jb     0x419134
  4190d5:	clc    
  4190d6:	mov    cl,0xfe
  4190d8:	jmp    0x9052:0x5cc45115
  4190df:	sub    al,0xa
  4190e1:	enter  0x371d,0x2f
  4190e5:	xlat   BYTE PTR ds:[ebx]
  4190e6:	and    eax,0xe114efa1
  4190eb:	mov    edx,0x63473fea
  4190f0:	stc    
  4190f1:	pusha  
  4190f2:	xchg   esi,esp
  4190f4:	ror    dh,0x5
  4190f7:	pmullw mm6,QWORD PTR [eax-0x59]
  4190fb:	push   edx
  4190fc:	lds    edx,FWORD PTR [ebx]
  4190fe:	cmp    BYTE PTR [ebx],cl
  419100:	and    DWORD PTR ds:0xd6beccf,esp
  419106:	aas    
  419107:	jg     0x419129
  419109:	fadd   QWORD PTR ds:0x645b7c86
  41910f:	sar    DWORD PTR [eax+0x76],0x1f
  419113:	pop    ss
  419114:	xor    DWORD PTR [ebp*4-0x4e02047],ecx
  41911b:	cld    
  41911c:	iret   
  41911d:	bound  edx,QWORD PTR [esi]
  41911f:	bnd jbe 0x4190bc
  419122:	jge    0x4190ad
  419124:	jp     0x4190ae
  419126:	xchg   edx,eax
  419127:	add    BYTE PTR [ecx],ah
  419129:	les    ebp,FWORD PTR [ecx]
  41912b:	xor    al,BYTE PTR [esi]
  41912d:	push   ebp
  41912e:	push   0xb27498d
  419133:	jne    0x41915d
  419135:	lock push esp
  419137:	lods   al,BYTE PTR ds:[esi]
  419138:	jno    0x4190e9
  41913a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41913b:	adc    BYTE PTR [esi-0x2be8bfad],cl
  419141:	(bad)  
  419143:	adc    eax,0xd2d9907b
  419148:	in     al,0x86
  41914a:	dec    esp
  41914b:	les    eax,FWORD PTR [esi-0x18]
  41914e:	aam    0xc7
  419150:	pop    eax
  419151:	leave  
  419152:	fsubr  DWORD PTR [ebx+eiz*2-0x2e]
  419156:	sahf   
  419157:	imul   esi,esi,0x30721950
  41915d:	jbe    0x4191c1
  41915f:	inc    ebx
  419160:	jb     0xb3999e02
  419166:	outs   dx,BYTE PTR ds:[esi]
  419167:	cmp    al,0x6a
  419169:	pop    ebx
  41916a:	dec    edi
  41916b:	sahf   
  41916c:	pop    esi
  41916d:	daa    
  41916e:	jo     0x419194
  419170:	inc    eax
  419171:	sti    
  419172:	call   0x236c:0x79f7c58e
  419179:	outs   dx,BYTE PTR ds:[esi]
  41917a:	ins    DWORD PTR es:[edi],dx
  41917b:	dec    ecx
  41917c:	xchg   ecx,eax
  41917d:	dec    edx
  41917e:	in     eax,dx
  41917f:	or     DWORD PTR [edx],esi
  419181:	push   cs
  419182:	jnp    0x419183
  419184:	jecxz  0x4191b6
  419186:	(bad)  
  419187:	cld    
  419188:	repnz mov ds:0xd7308b11,eax
  41918e:	xor    BYTE PTR [ebx-0x79],0x20
  419192:	scas   eax,DWORD PTR es:[di]
  419194:	in     eax,0x9a
  419196:	stos   DWORD PTR es:[edi],eax
  419197:	xor    edx,DWORD PTR [eax]
  419199:	js     0x128a378b
  41919f:	jmp    0x80ea921c
  4191a4:	in     eax,0x3f
  4191a6:	adc    al,0x7
  4191a8:	pop    esi
  4191a9:	into   
  4191aa:	in     eax,dx
  4191ab:	cmp    ebp,DWORD PTR [edx-0x5f]
  4191ae:	cmp    ebx,DWORD PTR [edx-0x12fc1590]
  4191b4:	gs (bad) 
  4191b6:	cmp    al,0xc6
  4191b8:	imul   BYTE PTR [ecx]
  4191ba:	out    0xde,eax
  4191bc:	dec    eax
  4191bd:	mov    ebp,0x7afd4fbe
  4191c2:	jae    0x419152
  4191c4:	inc    esi
  4191c5:	cmp    DWORD PTR [edi],edx
  4191c7:	dec    eax
  4191c8:	fist   DWORD PTR [eax-0x4cd81aab]
  4191ce:	ret    
  4191cf:	mov    esi,0x6e07d77c
  4191d4:	(bad)  
  4191d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191d7:	outs   dx,BYTE PTR ds:[esi]
  4191d8:	fs mov ecx,0x9153b373
  4191de:	adc    al,0x86
  4191e0:	aaa    
  4191e1:	mov    ch,BYTE PTR [ebp+0x7f]
  4191e4:	(bad)  [ebx+0x62ded7fe]
  4191ea:	xor    bh,BYTE PTR [edx-0x3f]
  4191ed:	ficom  WORD PTR [edx+0x59c783cc]
  4191f3:	scas   eax,DWORD PTR es:[edi]
  4191f4:	pop    esp
  4191f5:	ret    
  4191f6:	xchg   esi,eax
  4191f7:	mov    eax,ds:0xc5c62704
  4191fc:	pop    edx
  4191fd:	outs   dx,DWORD PTR fs:[esi]
  4191ff:	rcr    DWORD PTR [ecx+0x7c],0x57
  419203:	les    edi,FWORD PTR [ebx]
  419205:	jb     0x4191d1
  419207:	fldcw  WORD PTR [ebx+0x7d]
  41920a:	mov    esp,0xff4b0809
  41920f:	out    0xa6,al
  419211:	scas   al,BYTE PTR es:[edi]
  419212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419213:	test   eax,0x853b371e
  419218:	fdivrp st(5),st
  41921a:	pop    cx
  41921c:	or     eax,0x50a0d9e8
  419221:	push   edi
  419222:	xchg   esi,eax
  419223:	(bad)  
  419224:	or     DWORD PTR [edx],0xc920e340
  41922a:	inc    ebp
  41922b:	call   0x5384e8b7
  419230:	lea    ecx,[ecx]
  419232:	xor    eax,0x7848f2e
  419237:	sbb    dh,BYTE PTR [eax]
  419239:	add    ch,BYTE PTR [ebp-0x5b476816]
  41923f:	fnstenv [edi+esi*8-0x2f]
  419243:	pop    es
  419244:	hlt    
  419245:	fwait
  419246:	and    BYTE PTR [edx+eax*4],0xa6
  41924a:	stos   DWORD PTR es:[edi],eax
  41924b:	pop    ds
  41924c:	call   0x66762eb5
  419251:	(bad)  
  419252:	xchg   ebp,eax
  419253:	cli    
  419254:	pop    esp
  419255:	int3   
  419256:	(bad)  
  419257:	jl     0x419224
  419259:	sti    
  41925a:	js     0x4192d0
  41925c:	icebp  
  41925d:	gs pop eax
  41925f:	inc    ebp
  419260:	mov    ds:0xe16cb655,eax
  419265:	fs imul ebx,edi,0xfffffffe
  419269:	arpl   WORD PTR [ebp-0x76],bx
  41926c:	adc    dl,BYTE PTR [ebp+0x53]
  41926f:	popa   
  419270:	je     0x419226
  419272:	imul   ebp,DWORD PTR [ecx+0x1383d51f],0x56
  419279:	ret    
  41927a:	fwait
  41927b:	add    al,0x31
  41927d:	mov    esp,0x7faaee21
  419282:	xchg   edi,eax
  419283:	push   0xfc525bc1
  419288:	ins    DWORD PTR es:[edi],dx
  419289:	icebp  
  41928a:	mov    eax,ds:0xe09aeabc
  41928f:	ss or  eax,0x665082f7
  419295:	xchg   esi,eax
  419296:	and    BYTE PTR [esi],dh
  419298:	inc    esp
  419299:	nop
  41929a:	mov    DWORD PTR [eax],edi
  41929c:	jb     0x419280
  41929e:	jo     0x4192d4
  4192a0:	out    0x40,al
  4192a2:	and    eax,0xeb163d11
  4192a7:	xor    eax,0xcf979009
  4192ac:	and    eax,0x2235652e
  4192b1:	dec    eax
  4192b2:	xor    DWORD PTR [ebx+0x51],ecx
  4192b5:	or     eax,0x6e8fbc05
  4192ba:	in     eax,dx
  4192bb:	loop   0x419250
  4192bd:	clc    
  4192be:	(bad)  
  4192c0:	and    BYTE PTR [ebx-0x58],dl
  4192c3:	push   esp
  4192c4:	jns    0x419303
  4192c6:	pop    es
  4192c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192c8:	test   DWORD PTR [eax],edi
  4192ca:	push   edi
  4192cb:	inc    BYTE PTR [edi+0x2d6db2e6]
  4192d1:	jb     0x419280
  4192d3:	mov    eax,ds:0x58bea584
  4192d8:	adc    eax,0x1d955d79
  4192dd:	repnz jecxz 0x4192e8
  4192e0:	add    ah,dl
  4192e2:	nop
  4192e3:	add    DWORD PTR [eax+0x62],ecx
  4192e6:	aam    0xbc
  4192e8:	sbb    ecx,DWORD PTR [edx+0x2b046da4]
  4192ee:	cmp    DWORD PTR [esi+0x32297213],0x93cd7c34
  4192f8:	cs jo  0x41935c
  4192fb:	mov    al,ds:0xec1e6eb6
  419300:	jae    0x4192b0
  419302:	inc    ebx
  419303:	add    al,0xa5
  419305:	and    eax,0x834b5772
  41930a:	sub    BYTE PTR [edx],bl
  41930c:	or     al,0xc2
  41930e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41930f:	jb     0x41931b
  419311:	arpl   WORD PTR [ebp-0x2a],bx
  419314:	es mov ecx,0x25f39457
  41931a:	mov    esi,0xc9d6edc7
  41931f:	push   0xffffffb5
  419321:	mov    ch,0x91
  419323:	and    ebp,DWORD PTR [edi+eax*4+0x13f535a7]
  41932a:	and    bl,dh
  41932c:	sbb    DWORD PTR [eax+0x2b],ecx
  41932f:	cs add al,0x46
  419332:	test   DWORD PTR [edx-0x71155aaa],ebp
  419338:	pop    es
  419339:	jbe    0x4192df
  41933b:	mov    ebx,0x8b85d764
  419340:	pop    eax
  419341:	adc    al,0xcb
  419343:	push   cs
  419344:	cmp    ah,BYTE PTR [ebp+0x60]
  419347:	add    ah,0x18
  41934a:	xor    eax,ebp
  41934c:	fisttp DWORD PTR [ebx]
  41934e:	lea    eax,[edx+0x5200c086]
  419354:	(bad)  
  419355:	scas   al,BYTE PTR es:[edi]
  419356:	mov    esi,0xb1335d99
  41935b:	dec    edx
  41935c:	pop    ss
  41935d:	jle    0x419336
  41935f:	ja     0x419314
  419361:	arpl   WORD PTR [esi+0x1a],bx
  419364:	mov    DWORD PTR [esi+edi*2-0x62e956ba],edi
  41936b:	test   BYTE PTR [eax],bh
  41936d:	popa   
  41936e:	xchg   ebx,eax
  41936f:	jecxz  0x4193d7
  419371:	adc    ah,BYTE PTR [ecx-0x335c76fe]
  419377:	les    ebp,FWORD PTR [eax+0x76d69a35]
  41937d:	jns    0x41930a
  41937f:	jp     0x4193b9
  419381:	or     esi,DWORD PTR [esi]
  419383:	cmp    dh,BYTE PTR [edi]
  419385:	mov    ds:0x1d2cf00f,eax
  41938a:	push   ebx
  41938b:	fstp   QWORD PTR [ecx+0x14f39897]
  419391:	outs   dx,BYTE PTR ds:[esi]
  419392:	cmp    bh,dl
  419394:	and    esp,edi
  419396:	xlat   BYTE PTR ds:[ebx]
  419397:	loope  0x419400
  419399:	loopne 0x4193ab
  41939b:	add    BYTE PTR [ebp-0x75a13ea4],0xcb
  4193a2:	stos   BYTE PTR es:[edi],al
  4193a3:	pop    edi
  4193a4:	jl     0x4193f1
  4193a6:	mov    ch,0xa2
  4193a8:	jno    0x419399
  4193aa:	fwait
  4193ab:	hlt    
  4193ac:	shr    DWORD PTR [ebp+0x8],1
  4193af:	cld    
  4193b0:	cmp    edx,DWORD PTR [eax+0x51]
  4193b3:	jae    0x4193f2
  4193b5:	pop    esi
  4193b6:	outs   dx,DWORD PTR ds:[esi]
  4193b7:	sub    al,0x3a
  4193b9:	inc    ecx
  4193ba:	sahf   
  4193bb:	hlt    
  4193bc:	xchg   edi,eax
  4193bd:	repz int3 
  4193bf:	mov    ecx,0x9c610983
  4193c4:	inc    esi
  4193c5:	or     ecx,DWORD PTR [ebx+esi*8]
  4193c8:	gs (bad) 
  4193ca:	cmp    BYTE PTR [eax],ah
  4193cc:	popf   
  4193cd:	cmp    ah,cl
  4193cf:	inc    al
  4193d1:	in     al,0x69
  4193d3:	jae    0x419402
  4193d5:	push   esi
  4193d6:	cdq    
  4193d7:	add    dh,0x75
  4193da:	cs push ebx
  4193dc:	xchg   edx,eax
  4193dd:	test   al,0x12
  4193df:	daa    
  4193e0:	cmp    al,0xf0
  4193e2:	pop    edx
  4193e3:	cld    
  4193e4:	jbe    0x4193f5
  4193e6:	call   FWORD PTR [esi+0x36]
  4193e9:	sahf   
  4193ea:	push   esp
  4193eb:	iret   
  4193ec:	retf   0x34a2
  4193ef:	(bad)  
  4193f0:	fnstenv [edi-0x75f13810]
  4193f6:	bound  ecx,QWORD PTR [eax+ebp*8-0x7c]
  4193fa:	xchg   esp,eax
  4193fb:	mov    ds:0x5cb1211,al
  419400:	je     0x41947e
  419402:	call   0x260523f5
  419407:	push   edi
  419408:	jmp    0x24d1:0xdf865c1c
  41940f:	(bad)  
  419410:	push   ds
  419411:	fwait
  419412:	aad    0xc8
  419414:	cmp    al,0xaf
  419416:	pusha  
  419417:	push   ebp
  419418:	cwde   
  419419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41941a:	stos   DWORD PTR es:[edi],eax
  41941b:	xchg   ebp,eax
  41941c:	and    bh,0x2f
  41941f:	aaa    
  419420:	mov    ds:0x6871b36d,eax
  419425:	scas   eax,DWORD PTR es:[edi]
  419426:	pop    es
  419427:	mov    BYTE PTR [eax+0x78a9a70f],al
  41942d:	jle    0x4193b6
  41942f:	ins    BYTE PTR es:[edi],dx
  419430:	dec    ecx
  419431:	cmp    eax,DWORD PTR [edi]
  419433:	mov    edx,DWORD PTR [edi]
  419435:	ds cmp al,cl
  419438:	inc    eax
  419439:	jno    0x4194a7
  41943b:	lahf   
  41943c:	dec    ebx
  41943d:	(bad)  
  41943f:	inc    esi
  419440:	enter  0xb984,0xda
  419444:	sub    BYTE PTR [esi-0x78],bl
  419447:	in     eax,0xc6
  419449:	jl     0x4193e8
  41944b:	sti    
  41944c:	jmp    0x4193f0
  41944e:	enter  0xe280,0x5
  419452:	retf   0x1e3b
  419455:	mov    edi,0x1e6588c4
  41945a:	hlt    
  41945b:	jb     0x4194c9
  41945d:	inc    esi
  41945e:	cmp    al,0x5e
  419460:	repz pop eax
  419462:	iret   
  419463:	xchg   ebp,eax
  419464:	push   0x6add73cf
  419469:	retf   
  41946a:	out    dx,al
  41946b:	lock inc ebx
  41946d:	cmp    BYTE PTR [esi-0x47],al
  419470:	das    
  419471:	fxam   
  419473:	inc    esi
  419474:	xchg   esp,eax
  419475:	adc    DWORD PTR [edi-0x212b0a5c],0xffffffce
  41947c:	pusha  
  41947d:	jge    0x419418
  41947f:	add    bl,BYTE PTR fs:[ecx-0x61cec0d1]
  419486:	jmp    0xe923f839
  41948b:	les    ebp,FWORD PTR cs:[ebp-0x6b1aa2ca]
  419492:	mov    cl,0xe
  419494:	call   0xd135:0x6ca0b9e4
  41949b:	hlt    
  41949c:	push   eax
  41949d:	cdq    
  41949e:	js     0x4194fe
  4194a0:	fcom   DWORD PTR [esi-0x637c6500]
  4194a6:	aaa    
  4194a7:	mov    DWORD PTR [edx+0x701a09d1],edi
  4194ad:	and    BYTE PTR [ecx+esi*2],bh
  4194b0:	jbe    0x41950f
  4194b2:	or     ecx,esi
  4194b4:	daa    
  4194b5:	xor    ecx,0x31b55335
  4194bb:	mov    bh,0xbe
  4194bd:	xor    dh,BYTE PTR [eax-0x55]
  4194c0:	shl    BYTE PTR [ebp+edi*2-0x44],cl
  4194c4:	fstp   QWORD PTR [ecx-0x16c301ce]
  4194ca:	xchg   edx,edx
  4194cc:	std    
  4194cd:	mov    BYTE PTR [ecx-0x5a],ah
  4194d0:	mov    ds:0x92374efb,eax
  4194d5:	pop    es
  4194d6:	mov    ecx,0x2163cca5
  4194db:	inc    ebx
  4194dc:	out    dx,eax
  4194dd:	lahf   
  4194de:	jmp    0xee27d3a
  4194e3:	jl     0x41955a
  4194e5:	pop    edx
  4194e6:	arpl   dx,dx
  4194e8:	xchg   ebx,eax
  4194e9:	and    al,dl
  4194eb:	inc    edx
  4194ec:	sbb    DWORD PTR [esi+0x398409bb],ebx
  4194f2:	and    eax,0x20b8a764
  4194f7:	pop    ebx
  4194f8:	lock sub DWORD PTR [eax-0x6f78b568],ebx
  4194ff:	jo     0x41957d
  419501:	outs   dx,DWORD PTR ds:[esi]
  419502:	inc    edx
  419503:	lods   al,BYTE PTR ds:[esi]
  419504:	xchg   ecx,eax
  419505:	push   ebx
  419506:	xchg   DWORD PTR [esi-0x19a701d2],edi
  41950c:	xor    eax,DWORD PTR [edx+eiz*2-0x4065a55c]
  419513:	and    DWORD PTR [ebx],0xffffffb8
  419516:	fndisi(8087 only) 
  419518:	aad    0x8b
  41951a:	push   DWORD PTR [ecx+0x35ed208]
  419520:	test   al,0xe8
  419522:	or     DWORD PTR [ebx],esi
  419524:	ja     0x41954d
  419526:	pop    es
  419527:	outs   dx,DWORD PTR ds:[esi]
  419528:	(bad)  
  419529:	test   eax,ecx
  41952b:	pop    ecx
  41952c:	clc    
  41952d:	jecxz  0x4194b2
  41952f:	pop    esp
  419530:	and    edi,DWORD PTR [esi-0x7acfeff5]
  419536:	mov    bl,0x8c
  419538:	cwde   
  419539:	jecxz  0x419519
  41953b:	jnp    0x4195a7
  41953d:	ja     0x41955b
  41953f:	add    eax,0x96a3d59a
  419544:	push   ebp
  419545:	push   0x714ee42b
  41954a:	adc    DWORD PTR [esi],eax
  41954c:	mov    bh,0x7d
  41954e:	fwait
  41954f:	iret   
  419550:	jl     0x4195a2
  419552:	rcr    ecx,1
  419554:	popa   
  419555:	and    BYTE PTR [edi+0x43],cl
  419558:	fld    DWORD PTR [eax]
  41955a:	(bad)  
  41955b:	clc    
  41955c:	mov    ch,0xf5
  41955e:	cmp    eax,0xd5e3f2c
  419563:	mov    esp,0xa968c302
  419568:	cmp    al,0xf3
  41956a:	outs   dx,BYTE PTR ds:[esi]
  41956b:	(bad)  
  41956c:	push   esi
  41956d:	(bad)  
  41956f:	test   al,0x53
  419571:	scas   al,BYTE PTR es:[edi]
  419572:	popa   
  419573:	arpl   WORD PTR ds:0x97afb944,cx
  419579:	fbld   TBYTE PTR [esi+0x43]
  41957c:	xchg   ecx,eax
  41957d:	add    dl,dl
  41957f:	or     DWORD PTR [ecx],ebp
  419581:	xchg   esp,eax
  419582:	test   DWORD PTR [eax+0x3b07b035],edx
  419588:	mov    ah,0xa4
  41958a:	mov    ds:0xe49cd123,eax
  41958f:	test   DWORD PTR ds:0x16ba323f,ebp
  419595:	data16 mov cs,WORD PTR [esi]
  419598:	jns    0x4195b2
  41959a:	dec    edx
  41959b:	std    
  41959c:	push   ebp
  41959d:	out    0x29,al
  41959f:	fmul   QWORD PTR [edi-0x565a7113]
  4195a5:	jbe    0x41959e
  4195a7:	jl     0x4195be
  4195a9:	aam    0x53
  4195ab:	jg     0x4195d1
  4195ad:	or     esi,edx
  4195af:	outs   dx,DWORD PTR ds:[esi]
  4195b0:	push   edi
  4195b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195b2:	test   eax,0x340ab07a
  4195b7:	lods   al,BYTE PTR ds:[esi]
  4195b8:	xor    dh,BYTE PTR [edi+0x6d4ddf14]
  4195be:	sub    eax,0x9630e2a0
  4195c3:	ss pop eax
  4195c5:	wbinvd 
  4195c7:	imul   esp,DWORD PTR [eax+0x54],0xfffffff4
  4195cb:	lar    esp,WORD PTR [ecx*1-0x52c69d]
  4195d3:	iret   
  4195d4:	jbe    0x419621
  4195d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195d7:	pop    ecx
  4195d8:	push   es
  4195d9:	xchg   BYTE PTR [ebp-0x1c],ch
  4195dc:	(bad)  
  4195dd:	inc    ebx
  4195de:	and    DWORD PTR [ebp+0x54],edx
  4195e1:	or     DWORD PTR [eax],eax
  4195e3:	cmp    DWORD PTR ds:0x302a80c3,edi
  4195e9:	sub    eax,0x90639dc5
  4195ee:	(bad)  
  4195ef:	push   esp
  4195f0:	jae    0x41959b
  4195f2:	mov    eax,0x3ad93caa
  4195f7:	mov    dh,BYTE PTR [ebx+eax*1]
  4195fa:	lods   eax,DWORD PTR ds:[esi]
  4195fb:	sub    DWORD PTR [ecx-0x18],ebp
  4195fe:	inc    esi
  4195ff:	add    eax,0xd4c8847f
  419604:	dec    ebx
  419605:	scas   eax,DWORD PTR es:[edi]
  419606:	jb     0x419635
  419608:	cmp    al,0x67
  41960a:	jmp    0xc2d7:0x224bf66
  419611:	xchg   ecx,eax
  419612:	sti    
  419613:	sub    ecx,DWORD PTR [ecx+eiz*4]
  419616:	fwait
  419617:	(bad)  
  419618:	mov    ds:0x106832af,eax
  41961d:	shl    BYTE PTR gs:[edx+0x4128442e],cl
  419624:	add    bh,BYTE PTR [ebp-0x1]
  419627:	push   0x71
  419629:	jae    0x419683
  41962b:	mov    bh,0x4b
  41962d:	adc    DWORD PTR [esp+ebx*1-0x3a],esp
  419631:	mov    cl,BYTE PTR [edx-0x4c]
  419634:	das    
  419635:	rcr    BYTE PTR [esp],cl
  419638:	inc    edi
  419639:	shl    DWORD PTR [edx-0x15841ad6],cl
  41963f:	xor    bh,dl
  419641:	add    edx,DWORD PTR [eax-0x11]
  419644:	popa   
  419645:	push   DWORD PTR ds:0x5b4b9124
  41964b:	mov    ebp,0x7daf3802
  419650:	popf   
  419651:	xchg   edi,eax
  419652:	neg    BYTE PTR ds:0x4572f5c7
  419658:	daa    
  419659:	xchg   edi,eax
  41965a:	fld    DWORD PTR [ecx]
  41965c:	dec    edi
  41965d:	imul   ebp,DWORD PTR [ecx+0x5c],0x8d82b550
  419664:	xchg   BYTE PTR [ebp+ebx*4+0x5d09a9bb],bh
  41966b:	push   0xe6214000
  419670:	icebp  
  419671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419672:	xlat   BYTE PTR ds:[ebx]
  419673:	add    ebx,DWORD PTR [esi-0x15]
  419676:	xchg   ebx,eax
  419677:	mov    dh,0x7
  419679:	outs   dx,DWORD PTR ds:[esi]
  41967a:	fdivr  DWORD PTR [ecx+0x3174e508]
  419680:	clc    
  419681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419682:	aad    0x70
  419684:	sbb    ebx,eax
  419686:	stos   DWORD PTR es:[edi],eax
  419687:	jl     0x4196f5
  419689:	pop    ds
  41968a:	mov    DWORD PTR ds:0x2f8a45a5,0x3b4356ab
  419694:	pop    eax
  419695:	add    DWORD PTR [ecx-0x5e5640c9],edi
  41969b:	sahf   
  41969c:	jmp    0xc19270cc
  4196a1:	inc    ecx
  4196a2:	rcl    DWORD PTR [ecx+0x20],1
  4196a5:	mov    dh,0x33
  4196a7:	or     al,0x6b
  4196a9:	or     dh,BYTE PTR [ebx-0x40]
  4196ac:	xchg   edi,eax
  4196ad:	pop    edi
  4196ae:	push   ecx
  4196af:	add    eax,0x56fb99c5
  4196b4:	mov    dh,0xae
  4196b6:	sbb    BYTE PTR [esi-0xf],ah
  4196b9:	(bad)  
  4196ba:	cmc    
  4196bb:	add    DWORD PTR [edi-0x6b],ebp
  4196be:	outs   dx,DWORD PTR ds:[esi]
  4196bf:	cmp    ebx,DWORD PTR [edi+esi*1]
  4196c2:	(bad)  [ecx]
  4196c4:	or     eax,0xeecbe794
  4196c9:	pop    ebp
  4196ca:	sub    al,BYTE PTR [esp+edx*2+0x5e]
  4196ce:	fild   WORD PTR [ebx]
  4196d0:	mov    eax,0xb71a0d95
  4196d6:	mov    esi,0xbcb4e7ad
  4196db:	fsqrt  
  4196dd:	dec    esi
  4196de:	fistp  WORD PTR [ecx-0x5e5ab690]
  4196e4:	jbe    0x4196da
  4196e6:	cld    
  4196e7:	imul   DWORD PTR [edi+0x6ea31ba4]
  4196ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ee:	or     DWORD PTR ds:0x4ed14074,esi
  4196f4:	sar    eax,1
  4196f6:	sub    ch,BYTE PTR [ebx]
  4196f8:	popf   
  4196f9:	xchg   ebp,eax
  4196fa:	fsubr  st(0),st
  4196fc:	xchg   esi,eax
  4196fd:	call   0x9537e2ea
  419702:	mov    edx,0xeeb541e4
  419707:	loop   0x419775
  419709:	xchg   dl,al
  41970b:	std    
  41970c:	xor    BYTE PTR [edx],al
  41970e:	mov    ebx,0x52ef35a5
  419713:	dec    edx
  419714:	fs push 0x8f19427d
  41971a:	sbb    bl,BYTE PTR [edi-0x7a]
  41971d:	add    DWORD PTR [esi+ecx*8-0x6e3d5704],edx
  419724:	aam    0xfc
  419726:	lods   eax,DWORD PTR ds:[esi]
  419727:	or     ah,BYTE PTR [eax-0x1cac16f3]
  41972d:	jnp    0x419710
  41972f:	sub    BYTE PTR [ecx+0x15f468d0],0x5e
  419736:	pop    esi
  419737:	push   ebx
  419738:	dec    ebx
  419739:	call   0x64e6143c
  41973e:	or     BYTE PTR [ebx-0x49],0xdf
  419742:	out    dx,al
  419743:	jecxz  0x4196f7
  419745:	mov    eax,ds:0x18512088
  41974a:	int3   
  41974b:	shr    bh,cl
  41974d:	push   ebx
  41974e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41974f:	bswap  esp
  419751:	cmp    dl,BYTE PTR [ebx+0x2edaafe1]
  419757:	les    ebp,FWORD PTR [esi+0x4244b3b6]
  41975d:	cs out 0x9e,eax
  419760:	or     esi,DWORD PTR [eax+0x56d1df18]
  419766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419767:	cli    
  419768:	cwde   
  419769:	icebp  
  41976a:	push   ebp
  41976b:	sbb    dh,ah
  41976d:	add    edx,DWORD PTR ds:0xf1a12ae4
  419773:	not    BYTE PTR [eax]
  419775:	xchg   ebp,eax
  419776:	sar    DWORD PTR [esi],cl
  419778:	fucomp st(1)
  41977a:	or     ecx,edi
  41977c:	rol    BYTE PTR [eax],1
  41977e:	in     eax,0xff
  419780:	in     al,0xc4
  419782:	inc    edi
  419783:	sub    bl,BYTE PTR [ebx]
  419785:	fiadd  DWORD PTR [edx]
  419787:	mov    esi,0x94b9eb02
  41978c:	mov    bl,0x38
  41978e:	push   ds
  41978f:	pop    ebp
  419790:	popf   
  419791:	not    BYTE PTR [ebx+0x36e74954]
  419797:	mov    al,0xf2
  419799:	or     esi,DWORD PTR ds:0x7ab7b83f
  41979f:	pop    DWORD PTR [esi-0x3b]
  4197a2:	or     eax,0xe4fb47b7
  4197a7:	mov    edx,0x64baa242
  4197ac:	mov    bl,cl
  4197ae:	jmp    0x4197c2
  4197b0:	xor    edi,DWORD PTR [edi+0x1484234]
  4197b6:	in     eax,0x23
  4197b8:	lock enter 0xcac6,0x5a
  4197bd:	imul   sp,WORD PTR [ebx+eax*1+0x55],0x7
  4197c3:	sbb    eax,0xfcfb04af
  4197c8:	call   0xab8b:0xf8ea567e
  4197cf:	push   esi
  4197d0:	or     BYTE PTR [ebx],al
  4197d2:	inc    esi
  4197d3:	in     al,dx
  4197d4:	cmp    bh,ah
  4197d6:	fld    DWORD PTR ds:0x7644be3f
  4197dc:	cmc    
  4197dd:	lods   eax,DWORD PTR ds:[esi]
  4197de:	sbb    ecx,0x5a153e84
  4197e4:	jl     0x4197cf
  4197e6:	mov    ds:0x4b1b24bf,al
  4197eb:	(bad)  
  4197ec:	in     al,0xe0
  4197ee:	jmp    0x83548e8b
  4197f3:	dec    ecx
  4197f4:	loopne 0x419794
  4197f6:	test   DWORD PTR [edx],ecx
  4197f8:	add    al,0x3e
  4197fa:	test   DWORD PTR [edi+0x193cf250],esi
  419800:	add    BYTE PTR [edi],dh
  419802:	xor    DWORD PTR ds:0x9fbe5903,ebx
  419808:	fwait
  419809:	sbb    ch,dh
  41980b:	sub    BYTE PTR [edi+0x41],ch
  41980e:	aad    0x42
  419810:	in     eax,dx
  419811:	push   edx
  419812:	push   eax
  419813:	std    
  419814:	cmc    
  419815:	sbb    eax,0x4232068e
  41981a:	add    DWORD PTR [esi+0x6b],edi
  41981d:	imul   esp,DWORD PTR [ecx-0x4f],0xffffff82
  419821:	xchg   ebp,eax
  419822:	xchg   edx,esp
  419824:	inc    ebp
  419825:	int    0x91
  419827:	ret    
  419828:	inc    edx
  419829:	inc    edi
  41982a:	xor    DWORD PTR [eax],ecx
  41982c:	pop    edx
  41982d:	pop    edx
  41982e:	xor    edi,DWORD PTR [edi]
  419830:	fndisi(8087 only) 
  419832:	mov    ds:0xc6ccbd66,eax
  419837:	or     bl,BYTE PTR [edi-0x33508e8b]
  41983d:	and    DWORD PTR [ebp+esi*1-0x62276925],eax
  419844:	cmp    esp,esi
  419846:	sar    DWORD PTR [edi-0x5fa43bce],cl
  41984c:	xor    ebx,ecx
  41984e:	xor    bh,BYTE PTR [ecx]
  419850:	mov    ebp,0xfb9f72fa
  419855:	rcl    esp,0x4
  419858:	xchg   edi,eax
  419859:	dec    ebx
  41985a:	cmp    BYTE PTR [ebx],0x11
  41985d:	bound  edi,QWORD PTR [edx+0x75]
  419860:	mov    esp,0x883ffd7e
  419865:	ja     0x4198c6
  419867:	enter  0xfdd1,0x21
  41986b:	icebp  
  41986c:	mov    dl,0x34
  41986e:	mov    ecx,0x90fa9932
  419873:	xor    eax,0xef80d91a
  419878:	or     DWORD PTR [ebp-0x61],esi
  41987b:	cmp    eax,0x9217ac82
  419880:	push   0xbf4b328c
  419885:	and    BYTE PTR [ecx+eax*4-0x6c],ch
  419889:	lds    esi,FWORD PTR [ecx]
  41988b:	fisttp DWORD PTR [edi]
  41988d:	sbb    BYTE PTR [esi-0x1e],bh
  419890:	lock xor DWORD PTR [edi],ebx
  419893:	stc    
  419894:	daa    
  419895:	dec    ebx
  419896:	sbb    eax,ecx
  419898:	jg     0x8178c1f
  41989e:	push   edx
  41989f:	inc    edx
  4198a0:	push   0x5931f4c6
  4198a5:	and    esi,DWORD PTR [esi]
  4198a7:	xor    ecx,DWORD PTR [esi]
  4198a9:	daa    
  4198aa:	push   ds
  4198ab:	cmp    al,0x1
  4198ad:	jns    0x4198bd
  4198af:	out    0x11,eax
  4198b1:	lds    esp,FWORD PTR [ebx+eax*4]
  4198b4:	jne    0x419890
  4198b6:	jmp    0x396532be
  4198bb:	scas   eax,DWORD PTR es:[edi]
  4198bc:	shr    BYTE PTR [ebp+0x2c],1
  4198bf:	mov    ebx,ebp
  4198c1:	sbb    BYTE PTR [edi],0x2a
  4198c4:	ins    DWORD PTR es:[edi],dx
  4198c5:	fsub   QWORD PTR [ecx-0x17]
  4198c8:	ins    BYTE PTR es:[edi],dx
  4198c9:	sub    al,0xd0
  4198cb:	xlat   BYTE PTR ds:[ebx]
  4198cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198ce:	data16 cld 
  4198d0:	fwait
  4198d1:	retf   
  4198d2:	add    ah,BYTE PTR [ebx-0x1099c1c7]
  4198d8:	xor    BYTE PTR [esi],al
  4198da:	mov    edx,0xe756b685
  4198df:	cmp    eax,0xcfa62017
  4198e4:	mov    ebp,0xa086a994
  4198e9:	sub    BYTE PTR [edx-0x760062e],ah
  4198ef:	aad    0xc2
  4198f1:	jmp    0x8f9c:0xd1a6745d
  4198f8:	retf   
  4198f9:	call   0xf711:0x6a467fb
  419900:	aas    
  419901:	js     0x419907
  419903:	dec    ebx
  419904:	aas    
  419905:	mov    ds:0x3605def5,al
  41990a:	fsubr  DWORD PTR [ebx]
  41990c:	mov    ecx,esi
  41990e:	jge    0x419938
  419910:	mov    al,0xff
  419912:	loop   0x41991c
  419914:	std    
  419915:	call   0xec8eaedf
  41991a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41991b:	xor    eax,0xb5ae0b8c
  419920:	aas    
  419921:	jl     0x4198c7
  419923:	and    ecx,DWORD PTR [ebx]
  419925:	adc    ah,BYTE PTR [esi-0x2436365b]
  41992b:	cs test eax,0x4c408bd5
  419931:	xor    BYTE PTR [eax],0x6d
  419934:	call   0xbdd1:0x8449e404
  41993b:	jg     0x419944
  41993d:	fimul  WORD PTR [edi]
  41993f:	jno    0x4199b7
  419941:	mov    ebx,0x776ad966
  419946:	daa    
  419947:	mov    cl,0xee
  419949:	nop
  41994a:	jae    0x4198d2
  41994c:	shl    DWORD PTR [eax+0x2b649624],cl
  419952:	jne    0x419927
  419954:	neg    BYTE PTR [ebx]
  419956:	retf   
  419957:	jl     0x41998a
  419959:	sub    esp,DWORD PTR [edi+0x74]
  41995c:	sub    edi,DWORD PTR [edi+0x2d4c7b31]
  419962:	daa    
  419963:	idiv   bl
  419965:	mov    ebp,0x92ee8f0b
  41996a:	add    BYTE PTR [edx],0x1b
  41996d:	mov    ah,0xea
  41996f:	jle    0x4199cf
  419971:	data16 fsub DWORD PTR [ebx+esi*2]
  419975:	mov    fs,WORD PTR [eax]
  419977:	(bad)  
  419978:	(bad)  [ecx]
  41997a:	loopne 0x4199eb
  41997c:	adc    esi,esi
  41997e:	mov    ebx,0x84c617ed
  419983:	mov    eax,ds:0xbd864513
  419988:	shl    DWORD PTR [esi-0x18e4c9c9],cl
  41998e:	call   0xdd56927c
  419993:	sbb    eax,0x2e3f7792
  419998:	aas    
  419999:	adc    BYTE PTR [eax-0x4e],ah
  41999c:	sub    dl,BYTE PTR [ecx+0x17]
  41999f:	dec    eax
  4199a0:	jge    0x41994b
  4199a2:	mov    al,ds:0xc05dd5a9
  4199a7:	lods   al,BYTE PTR ds:[esi]
  4199a8:	xchg   edi,eax
  4199a9:	daa    
  4199aa:	and    ecx,0x58a92554
  4199b0:	adc    eax,0xee9feb03
  4199b5:	mov    ecx,0x6e297545
  4199ba:	imul   esi,DWORD PTR [ebp-0x7c53c44a],0x39
  4199c1:	inc    ebx
  4199c2:	add    al,0x3e
  4199c4:	and    bh,BYTE PTR [esi+0x35]
  4199c7:	add    esi,DWORD PTR [ecx+0x5faa6753]
  4199cd:	test   BYTE PTR [ebx],dl
  4199cf:	dec    ebp
  4199d0:	dec    esi
  4199d1:	sub    eax,0xab3f0703
  4199d6:	push   ss
  4199d7:	imul   eax,DWORD PTR [ebx+eax*4+0x76c0557b],0x70a845c0
  4199e2:	mov    ebp,0x90dae1da
  4199e7:	sbb    BYTE PTR [edi-0x24],0xe2
  4199eb:	test   eax,0xba376868
  4199f0:	xor    ah,BYTE PTR [edx]
  4199f2:	dec    ebp
  4199f3:	sub    DWORD PTR [edx+0x5c1a5669],ecx
  4199f9:	adc    al,0x1a
  4199fb:	mov    ebx,0xf099b84d
  419a00:	lods   eax,DWORD PTR cs:[esi]
  419a02:	cdq    
  419a03:	loope  0x419a29
  419a05:	shl    DWORD PTR [eax],1
  419a07:	or     DWORD PTR [eax+ecx*4],0x4c369ca1
  419a0e:	mov    ah,0xe7
  419a10:	mov    esp,0xc56c4bb9
  419a15:	jl     0x4199db
  419a17:	push   edi
  419a18:	fnsave [ecx-0x4ee70071]
  419a1e:	inc    ebp
  419a1f:	arpl   WORD PTR [edx+ebx*8-0x36],ax
  419a23:	push   esi
  419a24:	popf   
  419a25:	cdq    
  419a26:	xchg   ch,dl
  419a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a29:	mov    ds:0x58214d55,al
  419a2e:	mov    ebx,0x44850db9
  419a33:	loop   0x4199dd
  419a35:	sbb    DWORD PTR [eax+ebx*2],esi
  419a38:	push   cs
  419a39:	inc    ebx
  419a3a:	fsubr  QWORD PTR fs:[ecx+0x6d]
  419a3e:	pushf  
  419a3f:	mov    ecx,0x976ca0d9
  419a44:	mov    ds:0x5400a221,eax
  419a49:	repz dec esi
  419a4b:	inc    ebp
  419a4c:	sti    
  419a4d:	adc    dh,BYTE PTR [ecx]
  419a4f:	cmp    cl,ah
  419a51:	rol    DWORD PTR [edx],cl
  419a53:	lea    eax,[edx-0x44214fd6]
  419a59:	mov    al,ds:0xec1d2ab6
  419a5e:	add    al,0x92
  419a60:	sub    bl,BYTE PTR [eax+0x2]
  419a63:	in     al,dx
  419a64:	aam    0x17
  419a66:	int    0x45
  419a68:	ret    0xf2df
  419a6b:	xor    DWORD PTR [ecx-0x59f8f24a],eax
  419a71:	xchg   esp,eax
  419a72:	xor    al,al
  419a74:	mov    edi,0x6a8515cc
  419a79:	or     eax,0xdb13cae2
  419a7e:	jp     0x419abc
  419a80:	bsf    ebx,DWORD PTR [edx]
  419a83:	fwait
  419a84:	mov    dh,0x8d
  419a86:	cmp    BYTE PTR [ebp+eax*1+0x40],0xc7
  419a8b:	sub    edi,esi
  419a8d:	sbb    ecx,esi
  419a8f:	dec    DWORD PTR [edi+ebx*1+0x47f987ed]
  419a96:	fistp  DWORD PTR [edx]
  419a98:	mov    al,ds:0xe2a8102b
  419a9d:	mov    DWORD PTR ds:0xed66fe85,edi
  419aa3:	pop    ecx
  419aa4:	add    eax,0x304a8a2e
  419aa9:	pop    esp
  419aaa:	dec    ebp
  419aab:	jb     0x419a70
  419aad:	test   DWORD PTR [eax-0x2ab80492],ecx
  419ab3:	sar    BYTE PTR cs:[eax+0x19],cl
  419ab7:	push   es
  419ab8:	jg     0x419b0b
  419aba:	imul   eax,DWORD PTR [esi+0x68024496],0x258e51e4
  419ac4:	xor    al,0x1c
  419ac6:	call   0xf9e5:0x6b54588f
  419acd:	jno    0x419b40
  419acf:	or     eax,0x3be84dc1
  419ad4:	mov    ds:0x3306e60f,al
  419ad9:	jo     0x419b4b
  419adb:	pop    edi
  419adc:	es aas 
  419ade:	rcr    edi,cl
  419ae0:	outs   dx,BYTE PTR ds:[esi]
  419ae1:	xor    eax,0x5589b354
  419ae6:	(bad)  
  419ae8:	ror    esp,1
  419aea:	bound  esp,QWORD PTR [esi+eax*2-0x7]
  419aee:	es mov cl,0x19
  419af1:	sub    DWORD PTR [esi],esp
  419af3:	stos   BYTE PTR es:[edi],al
  419af4:	test   DWORD PTR [edi],edx
  419af6:	mov    WORD PTR [edi+0x58],fs
  419af9:	test   eax,0x264c5552
  419afe:	in     eax,0x2b
  419b00:	and    edi,esp
  419b02:	lds    esp,FWORD PTR [eax-0x598a00b2]
  419b08:	test   DWORD PTR [edi],0x978fdb92
  419b0e:	fadd   st(6),st
  419b10:	dec    ebp
  419b11:	rep stos DWORD PTR es:[edi],eax
  419b13:	cmc    
  419b14:	(bad)  
  419b15:	in     al,0xb4
  419b17:	shl    edx,1
  419b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b1a:	stos   BYTE PTR es:[edi],al
  419b1b:	adc    eax,0x58390050
  419b20:	sub    BYTE PTR [esi-0x2fe9e08b],cl
  419b26:	add    dl,BYTE PTR [eax]
  419b28:	outs   dx,BYTE PTR ds:[esi]
  419b29:	inc    ebp
  419b2a:	cmc    
  419b2b:	fs int 0x6d
  419b2e:	pop    ss
  419b2f:	jne    0x419b12
  419b31:	xchg   DWORD PTR [esi],ebx
  419b33:	xor    eax,0x3d9e7855
  419b38:	mov    bl,0xfe
  419b3a:	adc    al,BYTE PTR ds:0x699cfa64
  419b40:	dec    eax
  419b41:	dec    esi
  419b42:	jecxz  0x419b92
  419b44:	sbb    eax,0x397c975b
  419b49:	mov    edi,0x1176ba2a
  419b4e:	push   edi
  419b4f:	je     0x419b7c
  419b51:	dec    ecx
  419b52:	in     al,0x87
  419b54:	or     al,0x5c
  419b56:	push   esp
  419b57:	arpl   WORD PTR fs:[eax+0x3e74a16],bp
  419b5e:	mov    eax,0x93bd7efe
  419b63:	pop    ebx
  419b64:	jg     0x419bae
  419b66:	sub    DWORD PTR [ecx],0x99886e87
  419b6c:	stos   BYTE PTR es:[edi],al
  419b6d:	cmp    dh,dh
  419b6f:	push   0x5841b165
  419b74:	test   al,ch
  419b76:	getsec 
  419b78:	fbld   TBYTE PTR [esi]
  419b7a:	adc    ebx,DWORD PTR [esi]
  419b7c:	stos   DWORD PTR es:[edi],eax
  419b7d:	mov    dh,0x6c
  419b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b80:	push   edi
  419b81:	or     al,0x27
  419b83:	pop    ebx
  419b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b85:	jae    0x419b86
  419b87:	stos   BYTE PTR es:[edi],al
  419b88:	jo     0x419bef
  419b8a:	push   eax
  419b8b:	shl    DWORD PTR [edi],cl
  419b8d:	or     eax,0x58c83f8
  419b92:	jo     0x419be2
  419b94:	inc    ebx
  419b95:	push   ds
  419b96:	cmp    BYTE PTR [edx],bh
  419b98:	out    0xb8,al
  419b9a:	iret   
  419b9b:	sti    
  419b9c:	lock jne 0x419b80
  419b9f:	adc    ch,BYTE PTR [esi]
  419ba1:	xor    dl,BYTE PTR [eax-0x8b70067]
  419ba7:	fnstenv ds:0x3ba9969
  419bad:	cld    
  419bae:	mov    gs,WORD PTR [ecx+eax*2-0x49]
  419bb2:	cwde   
  419bb3:	lods   al,BYTE PTR ds:[esi]
  419bb4:	xchg   edx,eax
  419bb5:	pop    es
  419bb6:	adc    ch,BYTE PTR ss:0x5626432
  419bbd:	fsub   QWORD PTR [ecx+0x10ebbfa7]
  419bc3:	fs (bad) 
  419bc5:	es add dh,dl
  419bc8:	mov    edx,0x7c6b0e53
  419bcd:	mov    esi,0xd507c7b1
  419bd2:	cli    
  419bd3:	mov    esi,0x44aab143
  419bd8:	int3   
  419bd9:	out    0x70,eax
  419bdb:	repnz in al,dx
  419bdd:	mov    ebx,0xa9bda3ce
  419be2:	pop    esi
  419be3:	dec    eax
  419be4:	ins    BYTE PTR es:[edi],dx
  419be5:	xor    DWORD PTR [ebx],ecx
  419be7:	scas   eax,DWORD PTR es:[edi]
  419be8:	ja     0x419c39
  419bea:	xor    al,0x36
  419bec:	adc    al,0x5d
  419bee:	arpl   WORD PTR [esp+ebp*2+0x60d00b44],bp
  419bf5:	(bad)  
  419bf6:	arpl   WORD PTR [ecx-0x45],sp
  419bf9:	mov    cl,0xef
  419bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bfc:	scas   al,BYTE PTR es:[edi]
  419bfd:	sub    eax,0x6822ee3b
  419c02:	icebp  
  419c03:	sub    BYTE PTR [ebx+ebp*2+0x50c0bc91],0xdc
  419c0b:	xchg   ebp,eax
  419c0c:	into   
  419c0d:	dec    ecx
  419c0e:	xor    eax,0x758c8a25
  419c13:	fmul   DWORD PTR es:[ebp-0xc1ad12]
  419c1a:	pop    es
  419c1b:	and    DWORD PTR [edi],ecx
  419c1d:	mov    DWORD PTR [ebx+esi*1-0x1e85a61f],ebp
  419c24:	in     al,dx
  419c25:	data16 jp 0x419c92
  419c28:	mov    al,ds:0x890fa1de
  419c2d:	mov    ebx,0x26779f03
  419c32:	push   ebp
  419c33:	hlt    
  419c34:	pop    ebx
  419c35:	inc    eax
  419c36:	jo     0x419c90
  419c38:	ror    DWORD PTR [edx+0x3aeff1ae],0xde
  419c3f:	out    dx,eax
  419c40:	mov    edx,0x3fb12657
  419c45:	cmc    
  419c46:	jmp    0x9b7f:0x773db238
  419c4d:	adc    DWORD PTR [edx],ecx
  419c4f:	adc    eax,0xbb88c2e1
  419c54:	jno    0x419cc3
  419c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c57:	sub    eax,0xb250966d
  419c5c:	das    
  419c5d:	ficomp DWORD PTR [ecx+eax*8-0x5cc5fae6]
  419c64:	inc    esi
  419c65:	cmp    al,0x9b
  419c67:	jmp    0x419c2c
  419c69:	add    ecx,DWORD PTR [ebx-0xf41c284]
  419c6f:	loopne 0x419cb1
  419c71:	clc    
  419c72:	push   0x4
  419c74:	imul   ebx,DWORD PTR [esi-0x64],0xe5d1edf
  419c7b:	pop    ebx
  419c7c:	pop    ecx
  419c7d:	rol    BYTE PTR [edi+0x62ce3d39],1
  419c83:	xchg   edi,eax
  419c84:	mov    DWORD PTR [edx-0x25],eax
  419c87:	push   edi
  419c88:	or     DWORD PTR [eax+eiz*8+0x520f7b57],esp
  419c8f:	push   edx
  419c90:	fcomp  DWORD PTR [edi+0x3d]
  419c93:	jecxz  0x419c27
  419c95:	jns    0x419c3e
  419c97:	push   edx
  419c98:	xchg   esp,eax
  419c99:	ss nop
  419c9b:	fidiv  DWORD PTR [esi]
  419c9d:	xchg   ebx,eax
  419c9e:	inc    eax
  419c9f:	scas   al,BYTE PTR es:[edi]
  419ca0:	sbb    al,0xe4
  419ca2:	mov    eax,0x38ec1a97
  419ca7:	inc    edi
  419ca8:	popf   
  419ca9:	and    DWORD PTR [ecx+0x2a],esp
  419cac:	xor    ah,0x17
  419caf:	push   cs
  419cb0:	jne    0x419d2a
  419cb2:	jnp    0x419cf9
  419cb4:	fbstp  TBYTE PTR [eax+0x2054950c]
  419cba:	(bad)  
  419cbb:	and    ecx,ecx
  419cbd:	pop    edx
  419cbe:	dec    esi
  419cbf:	sbb    bh,BYTE PTR [esi+eax*8+0x3e]
  419cc3:	adc    al,0xe8
  419cc5:	ins    DWORD PTR es:[edi],dx
  419cc6:	jo     0x419c6a
  419cc8:	inc    eax
  419cc9:	stc    
  419cca:	imul   BYTE PTR [ebp+0x37]
  419ccd:	ret    
  419cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ccf:	std    
  419cd0:	xchg   esi,eax
  419cd1:	cmp    DWORD PTR [esi+0x73aff24f],ecx
  419cd7:	cmp    BYTE PTR [eax+0x5957910],0x38
  419cde:	xchg   edx,eax
  419cdf:	and    edi,DWORD PTR [eax]
  419ce1:	or     BYTE PTR [esi-0x48],0x72
  419ce5:	sub    esi,ecx
  419ce7:	sar    BYTE PTR [edi-0x6bed5290],0x15
  419cee:	jmp    0xf6847190
  419cf3:	ins    DWORD PTR es:[edi],dx
  419cf4:	sbb    BYTE PTR [ebx+esi*1],ah
  419cf7:	pop    esp
  419cf8:	pop    esi
  419cf9:	test   al,0x5b
  419cfb:	and    al,BYTE PTR [esi+0x3b]
  419cfe:	sub    DWORD PTR [eax-0x555070f0],edx
  419d04:	int3   
  419d05:	sub    BYTE PTR cs:[edi-0x76],al
  419d09:	inc    edx
  419d0a:	push   es
  419d0b:	cli    
  419d0c:	aaa    
  419d0d:	and    DWORD PTR ds:0x5a17228b,ebp
  419d13:	imul   esi
  419d15:	sbb    BYTE PTR [ecx+edx*1+0x37],cl
  419d19:	mov    ecx,0x2390819
  419d1e:	outs   dx,DWORD PTR ds:[esi]
  419d1f:	xchg   ebx,eax
  419d20:	adc    esp,0x5bd37137
  419d26:	mov    eax,0x69445988
  419d2b:	mov    ebp,0x8c6baf9a
  419d30:	add    edx,esi
  419d32:	or     esi,DWORD PTR [ebp-0x77]
  419d35:	xor    ah,BYTE PTR [edx]
  419d37:	out    0x99,al
  419d39:	aam    0x3a
  419d3b:	rcr    DWORD PTR [edx+0x57],1
  419d3e:	dec    ecx
  419d3f:	sub    eax,ecx
  419d41:	(bad)  
  419d42:	fwait
  419d43:	and    eax,0xd38f8f0b
  419d48:	and    al,BYTE PTR [ebp-0x4d]
  419d4b:	lea    esp,[ecx]
  419d4d:	sub    eax,DWORD PTR [ecx+0x57cec11]
  419d53:	test   DWORD PTR [edi-0x6e],eax
  419d56:	not    DWORD PTR [esi+ebx*2+0xce16ea5]
  419d5d:	push   ebx
  419d5e:	mov    dh,0xea
  419d60:	gs cld 
  419d62:	stos   BYTE PTR es:[edi],al
  419d63:	in     al,0xcd
  419d65:	scas   eax,DWORD PTR es:[edi]
  419d66:	cmc    
  419d67:	ud0    eax,DWORD PTR [esi+0x74b726a8]
  419d6e:	mov    esp,0xeb0b9fae
  419d73:	adc    BYTE PTR [ebx-0x157dd6ea],ah
  419d79:	cwde   
  419d7a:	test   DWORD PTR [ecx-0x7049b259],esi
  419d80:	data16 arpl WORD PTR [ecx+ecx*2-0x55],di
  419d85:	adc    bl,bh
  419d87:	sub    DWORD PTR ds:0xab919eb7,ecx
  419d8d:	push   ss
  419d8e:	dec    ecx
  419d8f:	sbb    ch,BYTE PTR [ecx-0x1]
  419d92:	xchg   esi,edi
  419d94:	imul   edx,edi,0x29378864
  419d9a:	and    al,0xf7
  419d9c:	fcom   DWORD PTR [esi+ebp*2]
  419d9f:	daa    
  419da0:	inc    eax
  419da1:	neg    BYTE PTR [eax-0x1a]
  419da4:	cmp    BYTE PTR [esi],bl
  419da6:	es stos BYTE PTR es:[edi],al
  419da8:	push   ds
  419da9:	cdq    
  419daa:	inc    ecx
  419dab:	stos   DWORD PTR es:[edi],eax
  419dac:	add    edx,DWORD PTR [eax+0x6f]
  419daf:	mov    eax,0xae695ffd
  419db4:	mov    dh,0x7
  419db6:	outs   dx,DWORD PTR ds:[esi]
  419db7:	cdq    
  419db8:	addr16 hlt 
  419dba:	daa    
  419dbb:	enter  0xa64e,0x54
  419dbf:	loope  0x419e3b
  419dc1:	mov    esp,0x74740c92
  419dc6:	mov    BYTE PTR [eax+eax*4+0x5af8a307],bh
  419dcd:	in     eax,dx
  419dce:	stc    
  419dcf:	pop    eax
  419dd0:	add    DWORD PTR [eax],esp
  419dd2:	or     dl,BYTE PTR [ebx]
  419dd4:	push   0xb4a248e0
  419dd9:	xchg   ebx,eax
  419dda:	pusha  
  419ddb:	ja     0x419d85
  419ddd:	(bad)  
  419ddf:	bound  esp,QWORD PTR [ecx]
  419de1:	and    DWORD PTR [esi-0x1662960b],ebp
  419de7:	pop    ebx
  419de8:	stos   BYTE PTR es:[edi],al
  419de9:	fmul   QWORD PTR [ebp+ebx*2-0x12]
  419ded:	dec    edi
  419dee:	js     0x419dbe
  419df0:	pop    esi
  419df1:	mov    ebp,0xeef4f144
  419df6:	ins    DWORD PTR es:[edi],dx
  419df7:	sub    al,0xb0
  419df9:	mov    BYTE PTR [esi-0x6bb2d987],bl
  419dff:	shr    BYTE PTR [esi+ecx*4+0xe],0xb7
  419e04:	mov    ebx,0x33f7cda6
  419e09:	pop    esp
  419e0a:	inc    ebx
  419e0b:	sub    al,ch
  419e0d:	dec    ebp
  419e0e:	jns    0x419d96
  419e10:	mov    eax,ds:0xc8d771d6
  419e15:	sbb    al,0x55
  419e17:	mov    ds:0xaf5e5bbb,eax
  419e1c:	fwait
  419e1d:	xor    BYTE PTR [esi],al
  419e1f:	push   edx
  419e20:	push   esp
  419e21:	es stos BYTE PTR es:[edi],al
  419e23:	push   eax
  419e24:	cmp    BYTE PTR [edi-0x9],bl
  419e27:	enter  0xb6e5,0xe0
  419e2b:	test   DWORD PTR [ecx-0x1d],edi
  419e2e:	loope  0x419ea6
  419e30:	add    al,0x75
  419e32:	add    al,0xf6
  419e34:	mov    DWORD PTR [edi-0x15ac26b7],esp
  419e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e3b:	jne    0x419e85
  419e3d:	shl    BYTE PTR [ebx-0x12],0x9c
  419e41:	jle    0x419e23
  419e43:	enter  0xb914,0xf7
  419e47:	sbb    eax,0x8ac912cc
  419e4c:	(bad)  
  419e4d:	or     al,0x98
  419e4f:	retf   
  419e50:	imul   ebx,DWORD PTR [ecx+eiz*2],0x1d
  419e54:	jmp    0x69c78c18
  419e59:	push   ecx
  419e5a:	in     eax,0x66
  419e5c:	xor    eax,0xac3a82eb
  419e61:	xchg   ebp,eax
  419e62:	mov    esp,0xbba41116
  419e67:	out    0x19,al
  419e69:	xlat   BYTE PTR ds:[ebx]
  419e6a:	icebp  
  419e6b:	adc    esi,edi
  419e6d:	call   0xe284:0xb436c22d
  419e74:	xchg   ecx,eax
  419e75:	adc    BYTE PTR [edi+0x13],ch
  419e78:	mov    DWORD PTR [eax-0x13a65006],ecx
  419e7e:	in     al,0x5
  419e80:	or     esp,DWORD PTR [ecx*2+0xe36be84]
  419e87:	std    
  419e88:	cmp    esi,DWORD PTR [esi]
  419e8a:	mov    bl,0x9a
  419e8c:	lods   al,BYTE PTR ds:[esi]
  419e8d:	sub    ebx,DWORD PTR [edi]
  419e8f:	inc    edx
  419e90:	cmc    
  419e91:	test   edi,esi
  419e93:	jns    0x419e44
  419e95:	fdiv   st,st(4)
  419e97:	pop    es
  419e98:	in     al,dx
  419e99:	stc    
  419e9a:	lock adc BYTE PTR [esi-0x142e5234],bl
  419ea1:	jne    0x419ee9
  419ea3:	and    al,0xed
  419ea5:	cs push ebx
  419ea7:	test   BYTE PTR [esi],bl
  419ea9:	fistp  WORD PTR [ebx]
  419eab:	icebp  
  419eac:	cmp    al,0xf0
  419eae:	xchg   DWORD PTR [edx+0x1d8bbc29],esi
  419eb4:	dec    edx
  419eb5:	mov    esp,0x2dbbe273
  419eba:	inc    edx
  419ebb:	sbb    eax,0x46e8596f
  419ec0:	addr16 clc 
  419ec2:	scas   al,BYTE PTR es:[edi]
  419ec3:	inc    eax
  419ec4:	pop    esi
  419ec5:	push   esp
  419ec6:	and    eax,0x75d190b4
  419ecb:	mov    edx,0x129a1cf9
  419ed0:	mov    ds:0xf710f3f9,eax
  419ed5:	mov    ebx,0x1ea217f6
  419eda:	popf   
  419edb:	(bad)  
  419edc:	and    ebp,DWORD PTR [ecx]
  419ede:	cli    
  419edf:	and    cl,BYTE PTR [eax-0x9cbe010]
  419ee5:	push   ecx
  419ee6:	mov    esp,0xad69c9a5
  419eeb:	jae    0x419e81
  419eed:	xchg   ecx,eax
  419eee:	mov    WORD PTR [edi],?
  419ef0:	cli    
  419ef1:	test   DWORD PTR [edx+0x53],0x908c0bb3
  419ef8:	xor    al,0xfe
  419efa:	pop    ss
  419efb:	pop    ss
  419efc:	cmp    eax,0x71b968cb
  419f01:	add    al,0xe5
  419f03:	cwde   
  419f04:	add    dh,cl
  419f06:	jle    0x419f31
  419f08:	ficom  DWORD PTR [ecx+0x585116d6]
  419f0e:	jp     0x419ec5
  419f10:	fisubr WORD PTR [eax+0x6e4cb5b3]
  419f16:	adc    eax,0xc3f43cbe
  419f1b:	pop    ebx
  419f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f1d:	xlat   BYTE PTR ds:[ebx]
  419f1e:	sbb    bh,BYTE PTR [edx+0x53f9a181]
  419f24:	add    BYTE PTR [ebx],cl
  419f26:	fbld   TBYTE PTR [edx+ebx*8-0x59718a42]
  419f2d:	mov    esi,0xcb8877c3
  419f32:	jge    0x419f8f
  419f34:	inc    edx
  419f35:	cmp    eax,0x8892231a
  419f3a:	pop    edi
  419f3b:	inc    ecx
  419f3c:	mov    gs,WORD PTR [esi+0x57]
  419f3f:	pop    ebp
  419f40:	sar    BYTE PTR [edi],cl
  419f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f43:	pop    ebp
  419f44:	(bad)  
  419f45:	sub    DWORD PTR [ebp+0x58],ebx
  419f48:	or     ebx,DWORD PTR [eax+ebx*2+0x1d]
  419f4c:	sub    al,0xa7
  419f4e:	push   cs
  419f4f:	mov    ebp,0x38a5a86a
  419f54:	clc    
  419f55:	dec    esi
  419f56:	fmul   st(5),st
  419f58:	fdivr  st,st(4)
  419f5a:	repnz and dh,BYTE PTR [eax-0x2483996b]
  419f61:	lock mov WORD PTR [eax-0x1079557c],es
  419f68:	punpckhbw mm7,mm1
  419f6b:	jnp    0x419f9e
  419f6d:	jl     0x419fdd
  419f6f:	cmp    DWORD PTR [eax+eiz*8-0x6e5ddeb6],0x6e
  419f77:	das    
  419f78:	les    edx,FWORD PTR ds:0xef520eaf
  419f7e:	stos   DWORD PTR es:[edi],eax
  419f7f:	xor    dh,BYTE PTR [eax-0x57833e6f]
  419f85:	ss mov ah,0x8e
  419f88:	push   0xfffffff8
  419f8a:	xor    al,0x26
  419f8c:	cld    
  419f8d:	push   edx
  419f8e:	mov    bh,0xc2
  419f90:	and    al,0x14
  419f92:	aas    
  419f93:	sar    BYTE PTR [esi],1
  419f95:	retf   
  419f96:	mov    al,0xcc
  419f98:	ins    DWORD PTR es:[edi],dx
  419f99:	mov    al,ds:0xe0b3960f
  419f9e:	hlt    
  419f9f:	js     0x419f31
  419fa1:	imul   eax,DWORD PTR [ebp+0x5da68ad5],0xfffffff7
  419fa8:	ror    BYTE PTR [edi],cl
  419faa:	pop    esp
  419fab:	xor    dl,BYTE PTR [ecx-0x7b82007]
  419fb1:	sbb    esp,DWORD PTR [eax]
  419fb3:	pop    edi
  419fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fb5:	add    DWORD PTR [edx-0x14],edx
  419fb8:	idiv   DWORD PTR [edi]
  419fba:	pop    ebp
  419fbb:	rcl    esp,0xd1
  419fbe:	xor    edx,ecx
  419fc0:	sub    BYTE PTR [ebp-0x2dd99ae5],bh
  419fc6:	jns    0x419fe8
  419fc8:	pop    edx
  419fc9:	fldcw  WORD PTR [eax+0x21759d7e]
  419fcf:	sbb    DWORD PTR [di],esp
  419fd2:	push   ecx
  419fd3:	pop    ebx
  419fd4:	sbb    edi,DWORD PTR [esi-0x5e980f19]
  419fda:	cmp    bl,BYTE PTR [ebx-0x69321dc3]
  419fe0:	pusha  
  419fe1:	and    al,0x3b
  419fe3:	xchg   ebp,eax
  419fe4:	pop    ss
  419fe5:	inc    edi
  419fe6:	jg     0x419fd9
  419fe8:	std    
  419fe9:	sahf   
  419fea:	mov    ?,ebp
  419fec:	mov    edi,0x1ac35756
  419ff1:	xlat   BYTE PTR ds:[ebx]
  419ff2:	push   edx
  419ff3:	ss or  al,0xd5
  419ff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ff7:	(bad)  
  419ff8:	out    0x10,eax
  419ffa:	lahf   
  419ffb:	into   
  419ffc:	cmp    esp,edx
  419ffe:	sahf   
  419fff:	icebp  
  41a000:	lods   al,BYTE PTR ds:[esi]
  41a001:	ja     0x41a027
  41a003:	add    al,0x64
  41a005:	rcl    DWORD PTR [ebx+0x33],0xe
  41a009:	bound  eax,QWORD PTR [ecx-0x33]
  41a00c:	mov    eax,ds:0xfb8f8f03
  41a011:	dec    ebp
  41a012:	add    al,0xbd
  41a014:	xor    dh,dh
  41a016:	lds    ebx,FWORD PTR [edi+0x43cbf3d8]
  41a01c:	fnstsw WORD PTR [ebx-0x24f392b7]
  41a022:	cli    
  41a023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a024:	je     0x41a057
  41a026:	cld    
  41a027:	aas    
  41a028:	sub    al,0x63
  41a02a:	jg     0x419fd0
  41a02c:	out    dx,al
  41a02d:	int3   
  41a02e:	dec    esp
  41a02f:	jne    0x41a0a7
  41a031:	ret    
  41a032:	push   esi
  41a033:	sbb    al,0x94
  41a035:	hlt    
  41a036:	mov    ch,0xdc
  41a038:	mov    dh,0xa6
  41a03a:	mov    dl,0xc4
  41a03c:	push   eax
  41a03d:	fwait
  41a03e:	jecxz  0x41a0aa
  41a040:	shl    DWORD PTR [ebx],0x67
  41a043:	dec    eax
  41a044:	ins    DWORD PTR es:[edi],dx
  41a045:	fmul   st,st(1)
  41a047:	jecxz  0x41a0a0
  41a049:	push   cs
  41a04a:	xchg   ebx,eax
  41a04b:	jg     0x41a02b
  41a04d:	pop    esi
  41a04e:	cmp    esp,DWORD PTR [eax-0x73]
  41a051:	stos   BYTE PTR es:[edi],al
  41a052:	shl    BYTE PTR [ecx+0x328ca43b],1
  41a058:	add    dh,BYTE PTR [ebx]
  41a05a:	cdq    
  41a05b:	out    dx,eax
  41a05c:	sbb    bh,cl
  41a05e:	and    esi,esi
  41a060:	mov    dh,0xed
  41a062:	xor    dh,cl
  41a064:	js     0x419ff9
  41a066:	(bad)  
  41a068:	loopne 0x41a0b4
  41a06a:	loopne 0x41a0db
  41a06c:	imul   ebx,DWORD PTR [ecx+ebx*8],0x39
  41a070:	pop    es
  41a071:	shrd   eax,ebp,0xb4
  41a075:	daa    
  41a076:	int    0xdd
  41a078:	jmp    0x961:0x50d0be63
  41a07f:	push   esp
  41a080:	ret    
  41a081:	jecxz  0x41a085
  41a083:	and    ch,BYTE PTR ds:0x8b51777c
  41a089:	popa   
  41a08a:	into   
  41a08b:	cwde   
  41a08c:	ret    0x6bb4
  41a08f:	pop    si
  41a091:	daa    
  41a092:	sbb    DWORD PTR [eax+0x698d9821],ecx
  41a098:	add    BYTE PTR [ecx],bh
  41a09a:	inc    esi
  41a09b:	test   eax,0x804b932f
  41a0a0:	movzx  esi,WORD PTR [esp+ebp*1]
  41a0a4:	jl     0x41a04e
  41a0a6:	das    
  41a0a7:	sub    eax,0xc255ae4e
  41a0ac:	dec    ebp
  41a0ad:	call   FWORD PTR [esi]
  41a0af:	adc    ecx,DWORD PTR [ebp+0x58a32408]
  41a0b5:	inc    edx
  41a0b6:	mov    ch,0x32
  41a0b8:	dec    edi
  41a0b9:	and    edi,edx
  41a0bb:	inc    edi
  41a0bc:	lods   al,BYTE PTR ds:[esi]
  41a0bd:	adc    eax,0xdc551d3
  41a0c2:	sbb    DWORD PTR [ebp-0x66],edi
  41a0c5:	add    eax,0xa5e1964a
  41a0ca:	mov    edx,esp
  41a0cc:	test   eax,0xbe4d05c7
  41a0d1:	outs   dx,BYTE PTR ds:[esi]
  41a0d2:	(bad)  
  41a0d3:	jnp    0x41a113
  41a0d5:	test   cl,bl
  41a0d7:	pusha  
  41a0d8:	cs mov dl,0x3e
  41a0db:	inc    ecx
  41a0dc:	stos   BYTE PTR es:[edi],al
  41a0dd:	fistp  DWORD PTR [eax+esi*1-0x318ee919]
  41a0e4:	add    eax,0x551bfef0
  41a0e9:	xor    BYTE PTR [edi+0x35],bl
  41a0ec:	mov    WORD PTR [eax+0x6d44a8bd],fs
  41a0f2:	fndisi(8087 only) 
  41a0f4:	shl    BYTE PTR [ecx],cl
  41a0f6:	cmc    
  41a0f7:	mov    ebp,ecx
  41a0f9:	(bad)  
  41a0fa:	(bad)  
  41a0fb:	scas   al,BYTE PTR es:[edi]
  41a0fc:	mov    esp,0xfacfc26
  41a101:	xchg   DWORD PTR [esi-0x324afc3a],edi
  41a107:	in     eax,dx
  41a108:	adc    dl,BYTE PTR [eax+0x2171a7f9]
  41a10e:	pop    ds
  41a10f:	mov    eax,0x3f788416
  41a114:	cmp    BYTE PTR [esi],al
  41a116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a117:	(bad)
  41a11a:	das    
  41a11b:	(bad)  [edi-0x14]
  41a11e:	dec    esp
  41a11f:	pop    edx
  41a120:	xchg   DWORD PTR [ecx-0x4f],ebx
  41a123:	ins    BYTE PTR es:[edi],dx
  41a124:	inc    edx
  41a125:	push   esp
  41a126:	xor    eax,DWORD PTR [edx+eax*2]
  41a129:	clc    
  41a12a:	call   0xda8707da
  41a12f:	cmc    
  41a130:	int3   
  41a131:	int3   
  41a132:	push   ebp
  41a133:	repz shl BYTE PTR [edx+eax*4],cl
  41a137:	jg     0x41a102
  41a139:	loop   0x41a15e
  41a13b:	out    0xec,eax
  41a13d:	loopne 0x41a0cf
  41a13f:	lds    esi,FWORD PTR [ecx-0x604847c8]
  41a145:	xor    BYTE PTR [ebp+0x1b],dl
  41a148:	test   eax,0xd02d43ea
  41a14d:	loope  0x41a12e
  41a14f:	sbb    al,0x45
  41a151:	xchg   edx,eax
  41a152:	jle    0x41a10c
  41a154:	pop    eax
  41a155:	in     eax,0xef
  41a157:	cmp    eax,0x3ce71cf5
  41a15c:	sub    eax,0x93de8469
  41a161:	inc    ebp
  41a162:	sub    edi,DWORD PTR [eax-0x3d]
  41a165:	xor    eax,0xfeb7c9e3
  41a16a:	jg     0x41a124
  41a16c:	adc    BYTE PTR [esi+0x134b0ab3],ch
  41a172:	push   esp
  41a173:	jae    0x41a1b0
  41a175:	popf   
  41a176:	push   esp
  41a177:	loopne 0x41a136
  41a179:	mov    ecx,0x1638efc2
  41a17e:	xchg   edi,eax
  41a17f:	and    al,0x76
  41a181:	les    ecx,FWORD PTR [edx]
  41a183:	sahf   
  41a184:	pop    ds
  41a185:	sub    al,0x3d
  41a187:	fwait
  41a188:	les    ebp,FWORD PTR [ebx+0x67]
  41a18b:	fdivr  st,st(1)
  41a18d:	aad    0xb
  41a18f:	fcmovu st,st(3)
  41a191:	jo     0x41a18a
  41a193:	sub    ecx,ebx
  41a195:	or     eax,ecx
  41a197:	mov    ebp,DWORD PTR [edx-0x3d]
  41a19a:	inc    ecx
  41a19b:	pop    eax
  41a19c:	cmc    
  41a19d:	mov    eax,0x3e8ee5b0
  41a1a2:	and    ebp,esi
  41a1a4:	and    cl,dl
  41a1a6:	fcom   DWORD PTR [ebx+0x1264743b]
  41a1ac:	dec    eax
  41a1ad:	outs   dx,BYTE PTR ds:[esi]
  41a1ae:	push   esi
  41a1af:	and    BYTE PTR [eax-0x4251d4fb],cl
  41a1b5:	outs   dx,BYTE PTR ds:[esi]
  41a1b6:	xor    DWORD PTR [esi+0x48],0xffffffe3
  41a1ba:	pop    edi
  41a1bb:	xchg   ebx,eax
  41a1bc:	jb     0x41a1c9
  41a1be:	test   dh,ch
  41a1c0:	(bad)  
  41a1c1:	sti    
  41a1c2:	jecxz  0x41a1b0
  41a1c4:	and    DWORD PTR [edx],esp
  41a1c6:	pop    es
  41a1c7:	sub    edi,edx
  41a1c9:	pop    ss
  41a1ca:	js     0x41a1d6
  41a1cc:	data16 das 
  41a1ce:	cmp    esi,DWORD PTR [eax]
  41a1d0:	out    dx,eax
  41a1d1:	inc    ecx
  41a1d2:	or     esp,eax
  41a1d4:	test   BYTE PTR [ebx+0x1f],bl
  41a1d7:	mov    fs,WORD PTR [eax-0x53]
  41a1da:	mov    dl,0xd6
  41a1dc:	push   0x524239a4
  41a1e1:	or     eax,0x3a6f56ee
  41a1e6:	xlat   BYTE PTR ds:[ebx]
  41a1e7:	adc    dx,WORD PTR [ebx]
  41a1ea:	out    dx,al
  41a1eb:	or     eax,0xd61d7df5
  41a1f0:	inc    edi
  41a1f1:	xchg   ebp,eax
  41a1f2:	add    al,0x1b
  41a1f4:	call   0xa55b:0x1e63ccb0
  41a1fb:	das    
  41a1fc:	je     0x41a21e
  41a1fe:	mov    ch,0xde
  41a200:	pop    ebp
  41a201:	mov    WORD PTR ds:0x34875f30,?
  41a207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a208:	das    
  41a209:	mov    ds:0x98f7e06b,eax
  41a20e:	loopne 0x41a1f2
  41a210:	outs   dx,BYTE PTR ds:[esi]
  41a211:	jl     0x41a200
  41a213:	inc    edx
  41a214:	mov    esi,0x1b7bbcf8
  41a219:	in     eax,dx
  41a21a:	cmp    al,0x4
  41a21c:	sar    cl,0xf3
  41a21f:	sbb    eax,0xe85e2ef5
  41a224:	pop    esi
  41a225:	adc    al,0xcc
  41a227:	mov    ch,0x77
  41a229:	sar    BYTE PTR [eax],1
  41a22b:	lea    esp,[edi]
  41a22d:	adc    eax,0xd57862ab
  41a232:	push   edi
  41a233:	(bad)  
  41a235:	into   
  41a236:	dec    ecx
  41a237:	inc    BYTE PTR [esi]
  41a239:	rcl    BYTE PTR [edi+0x7686b3cc],1
  41a23f:	xchg   ebx,eax
  41a240:	xchg   dl,al
  41a242:	mul    BYTE PTR [ebp-0x1f]
  41a245:	mov    esp,0xacffb966
  41a24a:	pop    ss
  41a24b:	loope  0x41a2ca
  41a24d:	(bad)  
  41a24e:	imul   ebp,DWORD PTR [ebx],0x45
  41a251:	mov    esp,0x55edd230
  41a256:	mov    eax,0x2d4a8130
  41a25b:	fidivr WORD PTR [edx-0x66]
  41a25e:	fwait
  41a25f:	mov    eax,0x42fa69b
  41a264:	ins    BYTE PTR es:[edi],dx
  41a265:	pop    edx
  41a266:	ins    BYTE PTR es:[edi],dx
  41a267:	mov    al,0x1a
  41a269:	loopne 0x41a23e
  41a26b:	ret    0x2cf2
  41a26e:	stc    
  41a26f:	xor    ebx,esi
  41a271:	mov    edx,0x4c418d12
  41a276:	sub    esi,esi
  41a278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a279:	test   eax,0x4dfdd965
  41a27e:	jl     0x41a209
  41a280:	pop    ds
  41a281:	cmp    BYTE PTR [ebp+0x5f],ch
  41a284:	rol    cl,0x90
  41a287:	loopne 0x41a308
  41a289:	int    0x2b
  41a28b:	mov    ebx,0x829ccd65
  41a290:	or     DWORD PTR [edx+0x3de778da],eax
  41a296:	cmp    BYTE PTR [ebx-0x52193249],ch
  41a29c:	dec    edi
  41a29d:	and    ebx,esp
  41a29f:	dec    ebp
  41a2a0:	(bad)  
  41a2a1:	(bad)  
  41a2a2:	hlt    
  41a2a3:	popa   
  41a2a4:	ss pop esi
  41a2a6:	gs addr16 clc 
  41a2a9:	adc    edx,esp
  41a2ab:	lods   al,BYTE PTR ds:[esi]
  41a2ac:	inc    ecx
  41a2ad:	and    eax,0xf3304d96
  41a2b2:	retf   0xc9d5
  41a2b5:	fcomp  st(1)
  41a2b7:	dec    esp
  41a2b8:	dec    ebx
  41a2b9:	dec    ebp
  41a2ba:	sbb    ebx,esp
  41a2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2bd:	enter  0x4842,0x94
  41a2c1:	dec    esi
  41a2c2:	into   
  41a2c3:	cmc    
  41a2c4:	fbstp  TBYTE PTR ds:0xbf4b783b
  41a2ca:	xchg   ebp,eax
  41a2cb:	inc    esi
  41a2cc:	dec    esi
  41a2cd:	je     0x41a2e7
  41a2cf:	jbe    0x41a2b1
  41a2d1:	aam    0xe
  41a2d3:	jbe    0x41a2b7
  41a2d5:	lahf   
  41a2d6:	jle    0x41a2fe
  41a2d8:	xlat   BYTE PTR ds:[ebx]
  41a2d9:	(bad)  
  41a2db:	outs   dx,DWORD PTR ds:[esi]
  41a2dc:	jb     0x41a35a
  41a2de:	jge    0x41a272
  41a2e0:	xlat   BYTE PTR ds:[ebx]
  41a2e1:	aam    0x30
  41a2e3:	jns    0x41a2ae
  41a2e5:	stc    
  41a2e6:	mov    ax,0xfb80
  41a2ea:	test   eax,0xbc9a1b86
  41a2ef:	jb     0x41a2a3
  41a2f1:	or     ecx,DWORD PTR [ebp+0x4e]
  41a2f4:	xchg   edx,eax
  41a2f5:	test   dh,al
  41a2f7:	fild   WORD PTR [edx+0x72]
  41a2fa:	jge    0x41a2ce
  41a2fc:	pop    es
  41a2fd:	jmp    0x7981084f
  41a302:	out    0x43,al
  41a304:	mov    ecx,0xf41f435a
  41a309:	adc    eax,0x794e7584
  41a30e:	test   al,0x5b
  41a310:	cs push edi
  41a312:	xor    al,bl
  41a314:	adc    BYTE PTR [ebx-0x3b],bh
  41a317:	into   
  41a318:	cmp    eax,0x9ae650b4
  41a31d:	enter  0x5c6c,0xd
  41a321:	mov    ecx,0x50adc6f6
  41a326:	das    
  41a327:	scas   al,BYTE PTR es:[edi]
  41a328:	cmp    eax,0xc6c1b17b
  41a32d:	fld    TBYTE PTR [edi+0x79]
  41a330:	enter  0xab58,0xc2
  41a334:	adc    eax,0xa299516c
  41a339:	out    dx,al
  41a33a:	scas   eax,DWORD PTR es:[edi]
  41a33b:	dec    edi
  41a33c:	add    DWORD PTR ss:[ebx+0x1cf44c18],edx
  41a343:	dec    eax
  41a344:	dec    edi
  41a345:	pusha  
  41a346:	push   ecx
  41a347:	(bad)  
  41a348:	sub    ecx,DWORD PTR [eax-0x35]
  41a34b:	dec    eax
  41a34c:	sub    eax,0x47691e23
  41a351:	test   DWORD PTR [esi],ebp
  41a353:	xchg   edx,eax
  41a354:	mov    ch,al
  41a356:	jne    0x41a2e8
  41a358:	mov    al,0x5d
  41a35a:	cmp    al,dl
  41a35c:	push   esp
  41a35d:	mov    dh,0x78
  41a35f:	jo     0x41a337
  41a361:	into   
  41a362:	(bad)  
  41a363:	jmp    0xa4bc:0xe362de0f
  41a36a:	shr    BYTE PTR [edi-0x2bcd964a],cl
  41a370:	mov    ebp,DWORD PTR [edi+0x4b]
  41a373:	call   0x6709:0xde737a37
  41a37a:	add    BYTE PTR [ebx+0xf94051d],0x44
  41a381:	jnp    0x41a36e
  41a383:	mov    bl,0xce
  41a385:	ss push eax
  41a387:	add    al,0xc
  41a389:	mov    DWORD PTR [esi-0x5d411bbd],ecx
  41a38f:	or     DWORD PTR [ebp-0x13],ebp
  41a392:	xchg   ecx,eax
  41a393:	inc    esp
  41a394:	inc    eax
  41a395:	dec    eax
  41a396:	push   edx
  41a397:	fidiv  WORD PTR [eax]
  41a399:	cmp    DWORD PTR [ebx-0x12c1f804],ecx
  41a39f:	dec    esi
  41a3a0:	imul   ecx,ebp,0x3a1a4311
  41a3a6:	push   0x504e6e14
  41a3ab:	imul   ebx,DWORD PTR [edx+0x187908f1],0xffffff9a
  41a3b2:	retf   0xf5c1
  41a3b5:	adc    al,0x1d
  41a3b7:	cs aaa 
  41a3b9:	ins    DWORD PTR es:[edi],dx
  41a3ba:	add    BYTE PTR ds:0x55729e55,ah
  41a3c0:	ds (bad) 
  41a3c2:	sub    BYTE PTR ss:0xe174cd8d,ch
  41a3c9:	loope  0x41a3c1
  41a3cb:	cs popa 
  41a3cd:	fld    DWORD PTR [ecx-0x44]
  41a3d0:	dec    edx
  41a3d1:	mov    esi,0x41eaf4d5
  41a3d6:	lds    ebp,FWORD PTR [ecx+0xc]
  41a3d9:	mov    eax,ds:0x9a299edd
  41a3de:	or     cl,cl
  41a3e0:	xor    al,0x74
  41a3e2:	sub    BYTE PTR [esi],0x65
  41a3e5:	jl     0x41a38b
  41a3e7:	loope  0x41a379
  41a3e9:	ins    BYTE PTR es:[edi],dx
  41a3ea:	jno    0x41a405
  41a3ec:	mov    esp,0xf8686511
  41a3f1:	pop    esi
  41a3f2:	jle    0x41a406
  41a3f4:	not    BYTE PTR [ebp+0x2e]
  41a3f7:	test   al,0xc1
  41a3f9:	(bad)  
  41a3fa:	hlt    
  41a3fb:	add    edx,esp
  41a3fd:	test   DWORD PTR [eax],esp
  41a3ff:	xchg   DWORD PTR [ecx],edx
  41a401:	dec    eax
  41a402:	mov    al,cs:0x281ca523
  41a408:	xchg   ecx,eax
  41a409:	clc    
  41a40a:	xor    eax,0x18277b1e
  41a40f:	jmp    0x610e:0x8cfd8ca
  41a416:	rcl    BYTE PTR ds:0x2acece62,cl
  41a41c:	sub    ebp,DWORD PTR [eax]
  41a41e:	das    
  41a41f:	mov    eax,0x7fd48dd9
  41a424:	mov    WORD PTR [eax-0x330c6051],cs
  41a42a:	mov    al,al
  41a42c:	sbb    BYTE PTR [eax-0x58],dh
  41a42f:	lock xchg ch,ah
  41a432:	mov    DWORD PTR [eax+0x68],ecx
  41a435:	loopne 0x41a3df
  41a437:	lods   al,BYTE PTR ds:[esi]
  41a438:	or     DWORD PTR [esi-0x3348b236],ebx
  41a43e:	rcr    DWORD PTR [esi-0x503e424d],cl
  41a444:	pop    eax
  41a445:	call   0x4344acca
  41a44a:	adc    BYTE PTR [eax+0x1c9e3a46],ch
  41a450:	mov    DWORD PTR [eax+0x3785d9de],0xb09b066a
  41a45a:	jg     0x41a4c8
  41a45c:	jmp    FWORD PTR [esp+ecx*2]
  41a45f:	(bad)  
  41a460:	retf   
  41a461:	mov    bh,0x11
  41a463:	es jno 0x41a434
  41a466:	test   al,0xb1
  41a468:	or     BYTE PTR [edi],cl
  41a46a:	lods   eax,DWORD PTR ds:[esi]
  41a46b:	jmp    0xd24b7c9e
  41a470:	aam    0xe1
  41a472:	imul   ebx,ebx,0x3d6c087f
  41a478:	ret    0x4b5b
  41a47b:	imul   edx,DWORD PTR [eax+0x17],0xffffffd9
  41a47f:	retf   0xa722
  41a482:	sub    eax,0xbb440e67
  41a487:	jmp    0x41a4ca
  41a489:	bound  edi,QWORD PTR [esi]
  41a48b:	xor    eax,0xc3ccbd7b
  41a490:	in     al,dx
  41a491:	ds jge 0x41a4e0
  41a494:	inc    ecx
  41a495:	inc    edx
  41a496:	adc    DWORD PTR [eax-0x13f22e16],ebx
  41a49c:	xor    DWORD PTR [ecx+0x3d],edx
  41a49f:	inc    eax
  41a4a0:	pop    eax
  41a4a1:	clc    
  41a4a2:	mov    cl,0x9a
  41a4a4:	sti    
  41a4a5:	ins    BYTE PTR es:[edi],dx
  41a4a6:	jle    0x41a51d
  41a4a8:	pop    ebx
  41a4a9:	clts   
  41a4ab:	aam    0x56
  41a4ad:	add    DWORD PTR [edx],esi
  41a4af:	mov    cl,BYTE PTR ds:0xfe78ae0a
  41a4b5:	cmp    DWORD PTR [edx],0xffffffd9
  41a4b8:	(bad)  
  41a4b9:	shl    BYTE PTR [eax],0x32
  41a4bc:	scas   eax,DWORD PTR es:[edi]
  41a4bd:	xchg   edi,eax
  41a4be:	mov    eax,ds:0x27bdd5ca
  41a4c3:	sub    BYTE PTR [ecx],ah
  41a4c5:	pusha  
  41a4c6:	iret   
  41a4c7:	dec    eax
  41a4c8:	mov    ebp,0xebe69102
  41a4cd:	addr16 aad 0x35
  41a4d0:	pop    es
  41a4d1:	mov    ecx,0xf5fe92d6
  41a4d6:	icebp  
  41a4d7:	(bad)  
  41a4d8:	out    0xfc,al
  41a4da:	ins    BYTE PTR es:[edi],dx
  41a4db:	or     eax,0x784c948c
  41a4e0:	hlt    
  41a4e1:	sbb    al,0x51
  41a4e3:	out    dx,al
  41a4e4:	rcr    DWORD PTR [esi+0x5e3e1fe8],1
  41a4ea:	(bad)  [esi+0x60b33d11]
  41a4f0:	xlat   BYTE PTR ds:[ebx]
  41a4f1:	mov    bl,bl
  41a4f3:	cli    
  41a4f4:	mov    ecx,0x6bfbd42d
  41a4f9:	imul   esp
  41a4fb:	mov    ds:0x7a62ce2d,al
  41a500:	retf   0xa0bb
  41a503:	in     al,dx
  41a504:	xchg   edx,eax
  41a505:	sbb    BYTE PTR [ebx+0x73],ch
  41a508:	out    0xd1,al
  41a50a:	je     0x41a4f8
  41a50c:	inc    edx
  41a50d:	lds    ebp,FWORD PTR [ecx-0x2]
  41a510:	fcomp  DWORD PTR [esi]
  41a512:	sub    dh,bl
  41a514:	mov    edx,0xd72c358f
  41a519:	dec    eax
  41a51a:	(bad)  
  41a51b:	and    DWORD PTR [esi],eax
  41a51d:	sub    eax,0x10ec9a96
  41a522:	xchg   edx,eax
  41a523:	stos   BYTE PTR es:[edi],al
  41a524:	repnz push esp
  41a526:	icebp  
  41a527:	pusha  
  41a528:	ins    DWORD PTR es:[edi],dx
  41a529:	sar    DWORD PTR [esi],1
  41a52b:	or     esp,ebx
  41a52d:	pop    eax
  41a52e:	or     BYTE PTR [esi],cl
  41a530:	mov    ah,0xbd
  41a532:	dec    ebp
  41a533:	aam    0x85
  41a535:	push   ebp
  41a536:	outs   dx,DWORD PTR ds:[esi]
  41a537:	out    dx,al
  41a538:	push   edx
  41a539:	test   DWORD PTR [edi-0x4aa1b447],esi
  41a53f:	in     eax,0xc4
  41a541:	sahf   
  41a542:	outs   dx,BYTE PTR ds:[esi]
  41a543:	adc    eax,0xe41d151c
  41a548:	add    dh,BYTE PTR [edx]
  41a54a:	sbb    esp,DWORD PTR es:[esi+eiz*4-0x55]
  41a54f:	jmp    0x7e2d:0x8f56e19e
  41a556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a557:	popa   
  41a558:	pop    ds
  41a559:	ret    
  41a55a:	adc    DWORD PTR [ebx],0x1a219018
  41a560:	pop    ebx
  41a561:	jmp    0x41a501
  41a563:	fcom   DWORD PTR [eax-0x54]
  41a566:	fnstenv [esi+0x5c183a41]
  41a56c:	pop    esi
  41a56d:	dec    edx
  41a56e:	pop    eax
  41a56f:	dec    edx
  41a570:	fistp  WORD PTR [ebx]
  41a572:	das    
  41a573:	push   0x4b
  41a575:	outs   dx,DWORD PTR ds:[esi]
  41a576:	mov    bl,0xc7
  41a578:	adc    eax,0xe3e74e77
  41a57d:	aam    0xf4
  41a57f:	bound  ebp,QWORD PTR [ebx-0x78]
  41a582:	xchg   esp,eax
  41a583:	fmul   st,st(3)
  41a585:	dec    ebp
  41a586:	pop    ss
  41a587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a588:	sub    al,0xed
  41a58a:	arpl   WORD PTR [ecx+edi*8],bp
  41a58d:	das    
  41a58e:	inc    ebx
  41a58f:	jne    0x41a60b
  41a591:	cwde   
  41a592:	xchg   esi,eax
  41a593:	pop    esp
  41a594:	push   ss
  41a595:	mov    DWORD PTR [esi+0xa],eax
  41a598:	ins    BYTE PTR es:[edi],dx
  41a599:	test   DWORD PTR [edx-0x22ee1c48],esp
  41a59f:	or     esi,ebx
  41a5a1:	outs   dx,BYTE PTR ds:[esi]
  41a5a2:	inc    ecx
  41a5a3:	inc    eax
  41a5a4:	push   ecx
  41a5a5:	jnp    0x41a536
  41a5a7:	ret    
  41a5a8:	lock jge 0x41a5df
  41a5ab:	mov    esp,0x742c618a
  41a5b0:	ins    DWORD PTR es:[edi],dx
  41a5b1:	pop    ds
  41a5b2:	or     BYTE PTR [ebx-0x2f6bf6ce],ch
  41a5b8:	lock sub ah,al
  41a5bb:	je     0x41a5f2
  41a5bd:	dec    esp
  41a5be:	xchg   esp,eax
  41a5bf:	(bad)  
  41a5c0:	stc    
  41a5c1:	inc    ebp
  41a5c2:	add    DWORD PTR [edi-0x481d6688],edi
  41a5c8:	sbb    eax,DWORD PTR [ecx+edx*8-0x15751c01]
  41a5cf:	fwait
  41a5d0:	inc    eax
  41a5d1:	out    dx,eax
  41a5d2:	loope  0x41a5e2
  41a5d4:	pop    esp
  41a5d5:	sbb    bl,0x3a
  41a5d8:	ins    DWORD PTR es:[edi],dx
  41a5d9:	hlt    
  41a5da:	(bad)  
  41a5db:	mov    DWORD PTR [ecx-0x68],esi
  41a5de:	push   ebx
  41a5df:	nop
  41a5e0:	pop    esi
  41a5e1:	sbb    BYTE PTR ds:0xbe78d5b,0xd0
  41a5e8:	pop    edx
  41a5e9:	(bad)  
  41a5eb:	ins    DWORD PTR es:[edi],dx
  41a5ec:	int    0x24
  41a5ee:	inc    edi
  41a5ef:	mov    al,0x51
  41a5f1:	and    BYTE PTR [eax+0x13f05b00],ch
  41a5f7:	push   ebp
  41a5f8:	imul   edi,DWORD PTR [ebp+0x3590526f],0x6de45a0f
  41a602:	sub    dl,BYTE PTR [ebx]
  41a604:	and    eax,DWORD PTR [esi-0x7b]
  41a607:	dec    eax
  41a608:	push   ebx
  41a609:	loope  0x41a5be
  41a60b:	enter  0x6ce3,0xef
  41a60f:	(bad)
  41a612:	outs   dx,DWORD PTR ds:[esi]
  41a613:	std    
  41a614:	push   esi
  41a615:	pop    esp
  41a616:	jo     0x41a663
  41a618:	push   es
  41a619:	adc    DWORD PTR [ebx+ecx*8],ecx
  41a61c:	repnz cmp dh,bh
  41a61f:	sub    edi,DWORD PTR [ebp+0xa]
  41a622:	dec    esp
  41a623:	loop   0x41a5ea
  41a625:	lahf   
  41a626:	popf   
  41a627:	call   0xed93e5ca
  41a62c:	or     BYTE PTR [edi],0x89
  41a62f:	ja     0x41a6b0
  41a631:	xchg   edi,eax
  41a632:	or     DWORD PTR [edx+eax*2+0x3336417],edx
  41a639:	aam    0x5
  41a63b:	idiv   DWORD PTR fs:[edi]
  41a63e:	or     edx,DWORD PTR [ecx]
  41a640:	gs pop edx
  41a642:	xchg   edi,eax
  41a643:	stc    
  41a644:	cs mov dl,0x19
  41a647:	add    esi,DWORD PTR [ecx-0x2b3ab9c6]
  41a64d:	in     al,0x21
  41a64f:	out    0xc6,al
  41a651:	push   ss
  41a652:	enter  0x1144,0xd2
  41a656:	adc    al,0xaf
  41a658:	ficomp WORD PTR [edi+edx*1+0x9]
  41a65c:	mov    ds:0xecfcdc70,al
  41a661:	sbb    eax,ebp
  41a663:	add    bh,BYTE PTR [ebx-0x47a25099]
  41a669:	aam    0xe8
  41a66b:	lds    eax,FWORD PTR [edx+0x71cf9a48]
  41a671:	or     BYTE PTR [ebp-0x51],0xb0
  41a675:	inc    ebp
  41a676:	mov    ah,cl
  41a678:	inc    edx
  41a679:	xchg   ebx,eax
  41a67a:	ficomp DWORD PTR [eax+eax*4+0x60]
  41a67e:	add    eax,0x2e02ab1
  41a683:	fmul   DWORD PTR [edi+0x7a179a72]
  41a689:	(bad)  
  41a68a:	bt     esp,esi
  41a68d:	mov    bl,0x8d
  41a68f:	mov    ebx,ecx
  41a691:	cwde   
  41a692:	dec    ecx
  41a693:	or     DWORD PTR [ecx+ecx*4-0xf],esp
  41a697:	not    DWORD PTR [edx]
  41a699:	push   0xe1fcef24
  41a69e:	pushf  
  41a69f:	inc    edx
  41a6a0:	sbb    DWORD PTR [edi+0x70e8748f],edx
  41a6a6:	cmc    
  41a6a7:	and    eax,0xfb175035
  41a6ac:	jle    0x41a6d3
  41a6ae:	mov    dh,BYTE PTR [si]
  41a6b1:	cmp    edi,DWORD PTR [edx]
  41a6b3:	inc    ecx
  41a6b4:	gs push edx
  41a6b6:	lds    esp,FWORD PTR [edi+esi*1+0x402631d0]
  41a6bd:	div    DWORD PTR [ebp+eiz*2-0x682cddf9]
  41a6c4:	sbb    ah,BYTE PTR [edi]
  41a6c6:	ins    BYTE PTR es:[edi],dx
  41a6c7:	push   ss
  41a6c8:	sub    cl,bh
  41a6ca:	dec    ebx
  41a6cb:	aam    0xab
  41a6cd:	icebp  
  41a6ce:	mov    BYTE PTR ds:0x436069d,dh
  41a6d4:	adc    BYTE PTR [ebp-0x4f],dh
  41a6d7:	data16 std 
  41a6d9:	mov    WORD PTR [edi],?
  41a6db:	mov    dh,0xe5
  41a6dd:	pop    ss
  41a6de:	and    BYTE PTR [ebx-0x6c36f85],al
  41a6e4:	(bad)  
  41a6e5:	pop    esi
  41a6e6:	pop    edx
  41a6e7:	xor    edx,DWORD PTR [esi+0x64]
  41a6ea:	and    ch,BYTE PTR [eax+0x3a]
  41a6ed:	lods   al,BYTE PTR ds:[esi]
  41a6ee:	and    eax,DWORD PTR [edx]
  41a6f0:	and    bh,BYTE PTR [edi+esi*8-0x3cae781c]
  41a6f7:	or     eax,0xe245c78d
  41a6fc:	sahf   
  41a6fd:	scas   al,BYTE PTR es:[edi]
  41a6fe:	(bad)  
  41a6ff:	popa   
  41a700:	sbb    eax,0x4d5160d9
  41a705:	cwde   
  41a706:	adc    eax,0xde28ac87
  41a70b:	and    al,0x20
  41a70d:	inc    ebp
  41a70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a70f:	and    cl,bl
  41a711:	push   edx
  41a712:	sbb    eax,0x9923137
  41a717:	push   ecx
  41a718:	push   0xffffffec
  41a71a:	xchg   ecx,eax
  41a71b:	mov    dl,0xc6
  41a71d:	push   ss
  41a71e:	into   
  41a71f:	lods   eax,DWORD PTR ds:[esi]
  41a720:	sub    DWORD PTR [esi-0x10233e2b],0x621bcc18
  41a72a:	jb     0x41a73e
  41a72c:	dec    edx
  41a72d:	lahf   
  41a72e:	aaa    
  41a72f:	xor    al,0x2b
  41a731:	mov    al,ds:0x868daf6c
  41a736:	mov    ebx,0xdb3715ed
  41a73b:	aaa    
  41a73c:	sub    ch,dh
  41a73e:	or     ch,0x7e
  41a741:	les    esi,FWORD PTR [esp+esi*4]
  41a744:	popa   
  41a745:	dec    eax
  41a746:	xchg   DWORD PTR cs:[ecx+0x58ee1f22],ebx
  41a74d:	pop    ss
  41a74e:	loop   0x41a75e
  41a750:	sar    al,0x6f
  41a753:	daa    
  41a754:	or     DWORD PTR [eax-0x74],ecx
  41a757:	lea    eax,[eax+0x1526d095]
  41a75d:	adc    BYTE PTR [edx],ch
  41a75f:	sbb    DWORD PTR [edi-0x4fe11150],edi
  41a765:	popf   
  41a766:	pop    es
  41a767:	xor    BYTE PTR [eax+0x6a3a4695],dl
  41a76d:	enter  0x69bc,0x9a
  41a771:	hlt    
  41a772:	les    esp,FWORD PTR [eax+0x7a2b96d0]
  41a778:	pusha  
  41a779:	mov    bl,0x66
  41a77b:	pop    ds
  41a77c:	in     eax,0xa6
  41a77e:	scas   eax,DWORD PTR es:[edi]
  41a77f:	lock or dh,0x2
  41a783:	(bad)  
  41a784:	stc    
  41a785:	sbb    BYTE PTR [esi+0x22],dl
  41a788:	out    0x9,eax
  41a78a:	jecxz  0x41a7d6
  41a78c:	int3   
  41a78d:	dec    ecx
  41a78e:	adc    al,0x8e
  41a790:	into   
  41a791:	mov    ah,0x22
  41a793:	jo     0x41a80b
  41a795:	repz cmc 
  41a797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a798:	cwde   
  41a799:	fistp  WORD PTR [si]
  41a79c:	popf   
  41a79d:	fidivr DWORD PTR [ebx+0x6a]
  41a7a0:	sbb    ch,dh
  41a7a2:	mov    bh,0x32
  41a7a4:	ss cmc 
  41a7a6:	dec    esi
  41a7a7:	pop    ebp
  41a7a8:	push   ss
  41a7a9:	push   edx
  41a7aa:	test   al,0x14
  41a7ac:	pop    edi
  41a7ad:	push   0x3a
  41a7af:	or     DWORD PTR [esi+edi*1+0x45c88c28],edi
  41a7b6:	fld    TBYTE PTR [eax-0x34]
  41a7b9:	loop   0x41a751
  41a7bb:	sub    DWORD PTR [ebp+0x79],0xffffffa8
  41a7bf:	jp     0x41a75f
  41a7c1:	xchg   esi,eax
  41a7c2:	pop    edx
  41a7c3:	arpl   WORD PTR [edi],bp
  41a7c5:	xlat   BYTE PTR ds:[ebx]
  41a7c6:	mov    WORD PTR [ecx+ebx*8],?
  41a7c9:	icebp  
  41a7ca:	inc    edi
  41a7cb:	popa   
  41a7cc:	jb     0x41a7c4
  41a7ce:	sub    BYTE PTR [ebx],0x8f
  41a7d1:	imul   esi,DWORD PTR [eax],0x2a7fb59
  41a7d7:	cmp    al,0xa4
  41a7d9:	ins    DWORD PTR es:[edi],dx
  41a7da:	sub    edi,DWORD PTR [esi+0x60]
  41a7dd:	leave  
  41a7de:	adc    eax,0x5d4f1fb5
  41a7e3:	push   eax
  41a7e4:	pop    edx
  41a7e5:	dec    ebx
  41a7e6:	or     eax,0x47a8a9be
  41a7eb:	rcr    ebx,0x5f
  41a7ee:	push   0x6a
  41a7f0:	ds das 
  41a7f2:	dec    esp
  41a7f3:	ins    BYTE PTR es:[edi],dx
  41a7f4:	bound  eax,QWORD PTR [esi-0x14]
  41a7f7:	lods   al,BYTE PTR ds:[esi]
  41a7f8:	sti    
  41a7f9:	pusha  
  41a7fa:	xlat   BYTE PTR ds:[ebx]
  41a7fb:	pusha  
  41a7fc:	xor    eax,0x2cb17dc9
  41a801:	imul   edi,DWORD PTR [ebp+0x66],0xffffff90
  41a805:	fbstp  TBYTE PTR [edi+edi*8+0x1e]
  41a809:	mov    al,ds:0x565c06d9
  41a80e:	jnp    0x41a7e4
  41a810:	mov    DWORD PTR [eax+0x4e232d49],eax
  41a816:	sub    bl,bl
  41a818:	pop    eax
  41a819:	pushf  
  41a81a:	test   eax,0xfe11ba20
  41a81f:	mov    edi,0x417893f
  41a824:	mov    ch,0x77
  41a826:	shr    DWORD PTR [ebp+0x43],0x19
  41a82a:	xor    DWORD PTR [esi],ecx
  41a82c:	dec    ebp
  41a82d:	in     eax,0x5
  41a82f:	cmp    ecx,esi
  41a831:	out    dx,eax
  41a832:	lock and al,0xe1
  41a835:	stc    
  41a836:	xchg   esp,eax
  41a837:	cld    
  41a838:	push   ebp
  41a839:	ret    0xfbc3
  41a83c:	into   
  41a83d:	inc    ecx
  41a83e:	mov    ds:0x261c1823,eax
  41a843:	hlt    
  41a844:	enter  0xbd97,0x26
  41a848:	and    eax,0x1778489d
  41a84d:	fldenv [edx+0x44daad7e]
  41a853:	xor    eax,0x88663bed
  41a858:	pop    es
  41a859:	test   al,0x60
  41a85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a85c:	xchg   edx,eax
  41a85d:	fsub   DWORD PTR [eax+0x4b911632]
  41a863:	imul   edi,DWORD PTR [ecx+0x384e552],0xea96afdc
  41a86d:	ins    DWORD PTR es:[edi],dx
  41a86e:	test   eax,0x74b30da4
  41a873:	aaa    
  41a874:	mov    dh,0x45
  41a876:	cld    
  41a877:	ins    DWORD PTR es:[edi],dx
  41a878:	retf   
  41a879:	adc    ebp,DWORD PTR [ecx]
  41a87b:	shl    BYTE PTR [ecx-0x6a8cdfb5],cl
  41a881:	cwde   
  41a882:	fidivr WORD PTR [edi]
  41a884:	mov    ebx,0x4d9ce6b5
  41a889:	outs   dx,BYTE PTR ds:[esi]
  41a88a:	cld    
  41a88b:	mov    edi,0xf335034e
  41a890:	xchg   edx,eax
  41a891:	repnz push ecx
  41a893:	xchg   edx,eax
  41a894:	lods   eax,DWORD PTR ds:[esi]
  41a895:	scas   eax,DWORD PTR es:[edi]
  41a896:	ins    BYTE PTR es:[edi],dx
  41a897:	dec    esi
  41a898:	jecxz  0x41a884
  41a89a:	and    DWORD PTR [ebx-0x4eeea03f],eax
  41a8a0:	and    esp,DWORD PTR [edi+eiz*1-0x609a86bc]
  41a8a7:	add    al,dh
  41a8a9:	lods   eax,DWORD PTR ds:[esi]
  41a8aa:	inc    ebp
  41a8ab:	cld    
  41a8ac:	cmp    DWORD PTR [eax],ecx
  41a8ae:	or     DWORD PTR [edx-0x73],ecx
  41a8b1:	lods   al,BYTE PTR ds:[esi]
  41a8b2:	sbb    DWORD PTR [eax-0x6b],0x28
  41a8b6:	cdq    
  41a8b7:	xlat   BYTE PTR gs:[ebx]
  41a8b9:	cmp    dh,cl
  41a8bb:	mov    esp,0xdfd798c6
  41a8c0:	sbb    ah,BYTE PTR [ebp+0x4c14730b]
  41a8c6:	(bad)  
  41a8c7:	pop    ebx
  41a8c8:	mov    ah,0x12
  41a8ca:	ret    
  41a8cb:	sub    DWORD PTR [esi-0x79631bdc],edi
  41a8d1:	retf   0xfb27
  41a8d4:	sbb    DWORD PTR [ecx-0x6f],eax
  41a8d7:	div    BYTE PTR [edi]
  41a8d9:	push   ebp
  41a8da:	cmp    ebx,0x2a1cd8d6
  41a8e0:	jg     0x41a8c9
  41a8e2:	rol    DWORD PTR [esi-0x5f],1
  41a8e5:	jecxz  0x41a868
  41a8e7:	jmp    0x899991c3
  41a8ec:	pop    es
  41a8ed:	stc    
  41a8ee:	or     ecx,ebx
  41a8f0:	jg     0x41a935
  41a8f2:	and    al,0xa3
  41a8f4:	push   eax
  41a8f5:	jecxz  0x41a974
  41a8f7:	dec    edi
  41a8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8f9:	adc    dh,BYTE PTR [edi]
  41a8fb:	mov    esp,?
  41a8fd:	jecxz  0x41a8cd
  41a8ff:	das    
  41a900:	retf   
  41a901:	shl    BYTE PTR [ecx+ecx*8],1
  41a904:	(bad)  
  41a906:	cmp    dl,BYTE PTR [edi+0x4b]
  41a909:	rcl    eax,0x9c
  41a90c:	stos   DWORD PTR es:[edi],eax
  41a90d:	mov    al,ds:0xb3a9515d
  41a912:	mov    eax,DWORD PTR [ebp-0x29]
  41a915:	push   eax
  41a916:	das    
  41a917:	(bad)  
  41a918:	aam    0x91
  41a91a:	mov    bl,0x39
  41a91c:	xor    ecx,DWORD PTR [edx]
  41a91e:	sub    eax,0x3c892c70
  41a923:	mov    al,0x55
  41a925:	push   ebp
  41a926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a927:	daa    
  41a928:	pop    ss
  41a929:	fcmovnb st,st(7)
  41a92b:	fst    QWORD PTR [bx]
  41a92e:	(bad)  
  41a92f:	out    0x6f,al
  41a931:	xor    al,0xb0
  41a933:	push   edx
  41a934:	jo     0x41a94a
  41a936:	adc    BYTE PTR [ebp-0x10],ah
  41a939:	loope  0x41a8f5
  41a93b:	loopne 0x41a8be
  41a93d:	loope  0x41a95d
  41a93f:	imul   BYTE PTR [eax-0x25]
  41a942:	adc    dh,BYTE PTR [ebp-0x69]
  41a945:	mov    eax,DWORD PTR ds:0x2763f2c8
  41a94b:	jecxz  0x41a976
  41a94d:	dec    ebx
  41a94e:	jge    0x41a989
  41a950:	inc    edx
  41a951:	test   DWORD PTR [edx],eax
  41a953:	icebp  
  41a954:	mov    dh,0x87
  41a956:	jge    0x41a9b4
  41a958:	test   ebp,0x763f3fe7
  41a95e:	or     DWORD PTR [ecx-0xb],ebp
  41a961:	aad    0x23
  41a963:	sbb    DWORD PTR [esi],esi
  41a965:	fild   QWORD PTR [ecx+eax*8+0x6eca0bae]
  41a96c:	imul   ebp,DWORD PTR [edi],0x20b5e8e5
  41a972:	js     0x41a950
  41a974:	aaa    
  41a975:	(bad)  
  41a976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a977:	(bad)  
  41a978:	jns    0x41a9cf
  41a97a:	inc    eax
  41a97b:	gs push ebp
  41a97d:	mov    ch,0xe6
  41a97f:	sub    al,0xb6
  41a981:	mov    dl,0x20
  41a983:	cmc    
  41a984:	inc    eax
  41a985:	add    eax,0xffc65874
  41a98a:	push   eax
  41a98b:	jnp    0x41a954
  41a98d:	or     DWORD PTR ds:0x7c04dcfc,ebp
  41a993:	retf   0xe81e
  41a996:	sahf   
  41a997:	clc    
  41a998:	lock push 0x1e511aa3
  41a99e:	ss mov ah,0x12
  41a9a1:	dec    ah
  41a9a3:	add    al,0xa
  41a9a5:	xor    BYTE PTR [edx-0x5b],0x95
  41a9a9:	xor    eax,0x4c135390
  41a9ae:	(bad)  
  41a9b0:	push   0x73
  41a9b2:	xor    edx,DWORD PTR [edx+0x16]
  41a9b5:	xor    ah,bl
  41a9b7:	(bad)  
  41a9b8:	pop    eax
  41a9b9:	sub    ebx,DWORD PTR [ecx-0x33]
  41a9bc:	mov    dl,0x14
  41a9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9bf:	adc    DWORD PTR [edx+0x3ee819e9],esi
  41a9c5:	cld    
  41a9c6:	aam    0xa0
  41a9c8:	mov    ds:0xb44429d9,al
  41a9cd:	add    cl,cl
  41a9cf:	inc    bx
  41a9d1:	bnd ret 0x664f
  41a9d5:	cdq    
  41a9d6:	and    eax,0x987a50bc
  41a9db:	push   ss
  41a9dc:	xchg   esi,eax
  41a9dd:	or     ebp,DWORD PTR [ebx]
  41a9df:	mov    ecx,0x6ab02826
  41a9e4:	push   cs
  41a9e5:	xchg   ebp,eax
  41a9e6:	in     eax,0x2e
  41a9e8:	or     DWORD PTR [ebx+0x2e0da382],ecx
  41a9ee:	mov    ebp,0xedbc9921
  41a9f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9f4:	jl     0x41aa20
  41a9f6:	dec    ebx
  41a9f7:	mov    eax,ds:0x60462bec
  41a9fc:	mov    esp,0xb4f50c8e
  41aa01:	fcom   DWORD PTR [ebx]
  41aa03:	jmp    FWORD PTR [eax+ebx*4]
  41aa06:	and    BYTE PTR [esp+edx*4-0x680e8e54],al
  41aa0d:	loop   0x41a9f1
  41aa0f:	jbe    0x41a9e7
  41aa11:	dec    edi
  41aa12:	mov    ds:0x7fc75513,al
  41aa17:	pop    edx
  41aa18:	popa   
  41aa19:	cmc    
  41aa1a:	imul   ecx,ecx,0x10
  41aa1d:	jp     0x41a9ec
  41aa1f:	pusha  
  41aa20:	push   eax
  41aa21:	int    0x80
  41aa23:	cmp    DWORD PTR [ebx-0x633efb8],0xff9283c9
  41aa2d:	dec    ecx
  41aa2e:	xor    al,BYTE PTR [eax+0x32c9e24c]
  41aa34:	sub    BYTE PTR [ebx+0x31],0x44
  41aa38:	pop    esp
  41aa39:	add    al,0xb3
  41aa3b:	mov    ebx,0xb0a499b1
  41aa40:	mov    ch,0x13
  41aa42:	jmp    0x1d20bdf7
  41aa47:	xchg   edx,eax
  41aa48:	push   0xffffff91
  41aa4a:	fiadd  WORD PTR [esi+0x3f]
  41aa4d:	imul   esi,DWORD PTR [esi+0xa],0xfcbf31b8
  41aa54:	pusha  
  41aa55:	cmp    ebp,ecx
  41aa57:	cmp    eax,0x84d84636
  41aa5c:	in     al,0x6c
  41aa5e:	jle    0x41aa1d
  41aa60:	jmp    0xc328:0x44a7caa1
  41aa67:	in     eax,dx
  41aa68:	dec    ebx
  41aa69:	push   ss
  41aa6a:	scas   al,BYTE PTR es:[edi]
  41aa6b:	xor    BYTE PTR [eax],bh
  41aa6d:	mov    edx,0x9fd871be
  41aa72:	sbb    al,0xe0
  41aa74:	in     eax,dx
  41aa75:	scas   eax,DWORD PTR es:[edi]
  41aa76:	add    dh,ah
  41aa78:	loop   0x41aa97
  41aa7a:	xchg   esi,eax
  41aa7b:	psrld  mm4,mm3
  41aa7e:	xchg   edi,eax
  41aa7f:	or     ch,BYTE PTR [ebx+0x1]
  41aa82:	loope  0x41aabf
  41aa84:	dec    eax
  41aa85:	shl    bh,cl
  41aa87:	das    
  41aa88:	mov    ds:0x65426ba8,eax
  41aa8d:	and    eax,0xa2862704
  41aa92:	jns    0x41aa79
  41aa94:	jg     0x41aa46
  41aa96:	dec    esp
  41aa97:	sbb    dh,BYTE PTR [edx+eiz*2+0x2b]
  41aa9b:	lods   al,BYTE PTR ds:[esi]
  41aa9c:	mov    ebx,0x3106de80
  41aaa1:	pop    edi
  41aaa2:	dec    edx
  41aaa3:	xor    al,0xb3
  41aaa5:	sbb    BYTE PTR [edi-0x73],0xca
  41aaa9:	or     BYTE PTR [ebx+0x3abd247f],dh
  41aaaf:	xor    al,0x25
  41aab1:	sahf   
  41aab2:	mov    ds:0x3286f6d1,eax
  41aab7:	mov    ebp,0x7154591b
  41aabc:	adc    ebx,DWORD PTR [edi+esi*8]
  41aabf:	int    0xc1
  41aac1:	mov    ds:0x29daa993,al
  41aac6:	stos   BYTE PTR es:[edi],al
  41aac7:	and    cl,BYTE PTR [ecx]
  41aac9:	jmp    0x41aa5c
  41aacb:	dec    ecx
  41aacc:	into   
  41aacd:	mov    bh,dl
  41aacf:	push   cs
  41aad0:	mov    ah,0x1b
  41aad2:	lods   eax,DWORD PTR ds:[esi]
  41aad3:	ror    DWORD PTR [edi+0x6a],cl
  41aad6:	out    dx,eax
  41aad7:	and    DWORD PTR ds:0x4ec4dabf,ebp
  41aadd:	push   ecx
  41aade:	setbe  BYTE PTR [ecx+0x62]
  41aae2:	(bad)  
  41aae3:	mov    ebp,0x8a665844
  41aae8:	dec    esp
  41aae9:	lds    edi,FWORD PTR ds:0xf2441103
  41aaef:	pusha  
  41aaf0:	(bad)  
  41aaf1:	xlat   BYTE PTR ds:[ebx]
  41aaf2:	aad    0x7c
  41aaf4:	sbb    ch,bl
  41aaf6:	stos   BYTE PTR es:[edi],al
  41aaf7:	push   cs
  41aaf8:	dec    esp
  41aaf9:	aad    0xdc
  41aafb:	int3   
  41aafc:	sbb    ah,bl
  41aafe:	(bad)  
  41aaff:	mov    ebx,0x39b1b9c4
  41ab04:	fld    TBYTE PTR [ebx+0x2ac37576]
  41ab0a:	mov    eax,0x3327d2a7
  41ab0f:	jmp    0x7764:0xa5bf
  41ab15:	mov    esp,0x84523e04
  41ab1a:	xor    DWORD PTR [edx+0x38],ebx
  41ab1d:	fnclex 
  41ab1f:	ins    DWORD PTR es:[edi],dx
  41ab20:	(bad)  
  41ab21:	sub    BYTE PTR [ecx-0x34b5c5a9],cl
  41ab27:	dec    esi
  41ab28:	inc    ecx
  41ab29:	lock cwde 
  41ab2b:	and    eax,0xdd8f3cf6
  41ab30:	aad    0x8b
  41ab32:	mov    bh,0xa1
  41ab34:	out    0x4d,eax
  41ab36:	adc    edx,DWORD PTR [ebp-0x1c]
  41ab39:	xchg   edx,eax
  41ab3a:	add    bl,BYTE PTR [edx+ebx*1]
  41ab3d:	in     eax,dx
  41ab3e:	(bad)  
  41ab40:	xchg   edx,eax
  41ab41:	ror    BYTE PTR [edx],1
  41ab43:	dec    ebx
  41ab44:	push   0xffffff92
  41ab46:	mov    ebx,0x768b823b
  41ab4b:	fiadd  WORD PTR [ecx+0xfee1289]
  41ab51:	inc    ecx
  41ab52:	aam    0x79
  41ab54:	dec    ebp
  41ab55:	in     al,dx
  41ab56:	add    BYTE PTR [edi+ebp*8-0x3],0xb5
  41ab5b:	inc    ebp
  41ab5c:	shl    BYTE PTR [ecx+eiz*1],cl
  41ab5f:	out    0x7b,al
  41ab61:	mov    ds:0x65b3a559,eax
  41ab66:	sub    edi,DWORD PTR [eax+0xd]
  41ab69:	add    DWORD PTR [esp+ecx*1],0x41f7f788
  41ab70:	out    0x57,eax
  41ab72:	pop    ds
  41ab73:	sbb    DWORD PTR [ecx],ecx
  41ab75:	xor    eax,0x1285074f
  41ab7a:	cmp    DWORD PTR [eax-0x2f8239ba],esi
  41ab80:	sbb    DWORD PTR [ebx],ebp
  41ab82:	mov    ebp,0xca010d38
  41ab87:	inc    edi
  41ab88:	pop    edi
  41ab89:	fbstp  TBYTE PTR [esi]
  41ab8b:	mov    esi,0x22263800
  41ab90:	mov    esi,0x73e83bb7
  41ab95:	stos   DWORD PTR es:[edi],eax
  41ab96:	adc    al,0x7
  41ab98:	gs add esi,eax
  41ab9b:	adc    BYTE PTR [ecx-0x58],cl
  41ab9e:	ss int 0x12
  41aba1:	call   0xde1ae0d5
  41aba6:	test   ch,dh
  41aba8:	dec    ebp
  41aba9:	fist   DWORD PTR [ecx]
  41abab:	test   eax,0x3a0c4784
  41abb0:	imul   DWORD PTR [edx-0x45]
  41abb3:	adc    edx,DWORD PTR [esi+0x37f8cf49]
  41abb9:	xchg   ebx,eax
  41abba:	aam    0x65
  41abbc:	(bad)  
  41abbd:	ds test ah,ah
  41abc0:	(bad)  
  41abc2:	jecxz  0x41abf0
  41abc4:	mov    bl,0x60
  41abc6:	push   cs
  41abc7:	mov    esi,esi
  41abc9:	jno    0x41ab75
  41abcb:	lock jb 0x41ac30
  41abce:	dec    ebx
  41abcf:	xchg   ebp,eax
  41abd0:	sub    ch,BYTE PTR [eax]
  41abd2:	aas    
  41abd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd4:	xchg   ecx,ebx
  41abd6:	pushf  
  41abd7:	xor    BYTE PTR [eax+ebx*2+0x13],ch
  41abdb:	in     al,dx
  41abdc:	mov    DWORD PTR [ecx-0x7053d616],edi
  41abe2:	add    DWORD PTR [eax-0x5264c6b3],edi
  41abe8:	daa    
  41abe9:	and    eax,0x64522409
  41abee:	push   0xa774b82c
  41abf3:	cmp    eax,0xddd3068d
  41abf8:	mov    ebx,0x3b2eea05
  41abfd:	pusha  
  41abfe:	jge    0x41abf4
  41ac00:	je     0x41ac32
  41ac02:	inc    ebp
  41ac03:	and    ebx,ebx
  41ac05:	and    ebp,eax
  41ac07:	bound  esp,QWORD PTR ds:0x6ed8c151
  41ac0d:	mov    al,0xf5
  41ac0f:	lods   al,BYTE PTR ds:[esi]
  41ac10:	adc    ebx,edx
  41ac12:	fsub   QWORD PTR gs:[esi+ebx*4-0x3b]
  41ac17:	and    al,0x5c
  41ac19:	and    esi,esi
  41ac1b:	test   eax,0x5a89b047
  41ac20:	cmp    bh,BYTE PTR [edx]
  41ac22:	fst    DWORD PTR ds:[eax-0x1c]
  41ac26:	xchg   esp,eax
  41ac27:	loop   0x41abea
  41ac29:	cwde   
  41ac2a:	xchg   edx,eax
  41ac2b:	mov    ds:0xbceb5265,al
  41ac30:	bswap  ecx
  41ac32:	xor    DWORD PTR [ecx],0x5c
  41ac35:	jo     0x41abd3
  41ac37:	jbe    0x41ac22
  41ac39:	rol    DWORD PTR [ebx-0x26],0x8a
  41ac3d:	fs inc ebp
  41ac3f:	(bad)  
  41ac40:	jl     0x41ac44
  41ac42:	mov    cs,WORD PTR [eax-0x6e]
  41ac45:	test   dl,0x37
  41ac48:	xor    al,0xd0
  41ac4a:	ins    BYTE PTR es:[edi],dx
  41ac4b:	dec    ebx
  41ac4c:	mov    bh,0x38
  41ac4e:	pop    esp
  41ac4f:	push   esi
  41ac50:	add    al,0x88
  41ac52:	and    DWORD PTR [esp+eax*1],esi
  41ac55:	out    0xaf,eax
  41ac57:	in     eax,0x23
  41ac59:	out    0x33,al
  41ac5b:	daa    
  41ac5c:	aam    0x3f
  41ac5e:	dec    esi
  41ac5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac60:	clc    
  41ac61:	mov    bl,0x15
  41ac63:	xchg   ecx,eax
  41ac64:	cs (bad) 
  41ac66:	pop    esi
  41ac67:	mov    DWORD PTR [esp+edx*4-0x5a231fec],ebx
  41ac6e:	mov    ebx,0xfad590aa
  41ac73:	out    dx,eax
  41ac74:	sbb    ebp,0x6a
  41ac77:	jp     0x41ac9b
  41ac79:	jno    0x41ac88
  41ac7b:	call   0x303928e7
  41ac80:	mov    bl,0xb9
  41ac82:	jbe    0x41acd0
  41ac84:	inc    edi
  41ac85:	push   esi
  41ac86:	mov    ecx,0xd0a9100e
  41ac8b:	pop    eax
  41ac8c:	cmp    ecx,edi
  41ac8e:	mov    ch,0x28
  41ac90:	mov    eax,0x8de9846e
  41ac95:	sub    BYTE PTR [ebx-0x11fa55c],0xfe
  41ac9c:	push   ss
  41ac9d:	jnp    0x41ad0a
  41ac9f:	inc    ebp
  41aca0:	daa    
  41aca1:	jae    0x41ac8d
  41aca3:	pushf  
  41aca4:	int3   
  41aca5:	pop    ds
  41aca6:	mov    bh,0x17
  41aca8:	add    eax,0x41d03a66
  41acad:	fisubr DWORD PTR [edi-0x7e5a377e]
  41acb3:	(bad)
  41acb7:	push   ecx
  41acb8:	adc    ebp,esp
  41acba:	push   esp
  41acbb:	adc    eax,0x8eb7d3c3
  41acc0:	stos   BYTE PTR es:[edi],al
  41acc1:	adc    eax,0x5b0541ba
  41acc6:	shl    ecx,0x9c
  41acc9:	lods   eax,DWORD PTR ds:[esi]
  41acca:	jp     0x41acc1
  41accc:	in     eax,dx
  41accd:	not    BYTE PTR [ecx-0x6097b75d]
  41acd3:	ret    
  41acd4:	add    esi,DWORD PTR [eax-0x5cd6d8f1]
  41acda:	jecxz  0x41acb1
  41acdc:	mov    ds:0x6455d3ed,eax
  41ace1:	div    BYTE PTR [ebx+0x585f9fff]
  41ace7:	inc    eax
  41ace8:	jg     0x41ac79
  41acea:	sbb    al,0x8d
  41acec:	addr16 jmp 0x5ec0e956
  41acf2:	sahf   
  41acf3:	(bad)  
  41acf4:	sbb    BYTE PTR [edi+0x51bc0fbb],dl
  41acfa:	or     DWORD PTR [edx+0x2a43c3fe],edx
  41ad00:	gs jbe 0x41ad62
  41ad03:	sar    ecx,0xc0
  41ad06:	scas   eax,DWORD PTR es:[edi]
  41ad07:	sub    al,0x6c
  41ad09:	and    eax,0x27805bf1
  41ad0e:	ficom  DWORD PTR [esi-0x27f9a772]
  41ad14:	test   al,0x6b
  41ad16:	adc    cl,BYTE PTR [di]
  41ad19:	pop    ebp
  41ad1a:	mov    ds:0xbd749f6f,eax
  41ad1f:	xchg   ecx,eax
  41ad20:	inc    esp
  41ad21:	mov    ds:0xb9bce2,al
  41ad26:	loope  0x41ad32
  41ad28:	ror    BYTE PTR [edi-0x4d],cl
  41ad2b:	lock test eax,0xf3a6eb96
  41ad31:	rol    bh,1
  41ad33:	add    al,al
  41ad35:	out    dx,eax
  41ad36:	sbb    DWORD PTR [ecx-0x15c204a8],ebp
  41ad3c:	mov    eax,0xb8d9c2d9
  41ad41:	int    0x58
  41ad43:	leave  
  41ad44:	inc    edi
  41ad45:	mov    bl,0x96
  41ad47:	and    BYTE PTR [edi],ch
  41ad49:	mov    dl,0x59
  41ad4b:	lods   eax,DWORD PTR ds:[esi]
  41ad4c:	xor    ah,BYTE PTR [ecx-0x3fb1ae72]
  41ad52:	mov    BYTE PTR [ebp-0x7e2a1cff],bl
  41ad58:	fstp   QWORD PTR [ebp+0x10]
  41ad5b:	ss push esi
  41ad5d:	mov    bh,0xb
  41ad5f:	jae    0x41ad92
  41ad61:	test   DWORD PTR [ecx+0x68d696e2],0x822a2404
  41ad6b:	and    BYTE PTR [ecx+0x5631a152],0xba
  41ad72:	test   al,0xa7
  41ad75:	outs   dx,DWORD PTR ds:[esi]
  41ad76:	fs rcl ah,1
  41ad79:	lods   eax,DWORD PTR ds:[esi]
  41ad7a:	dec    esp
  41ad7b:	fdivrp st(6),st
  41ad7d:	mov    eax,ds:0x1954e6f9
  41ad82:	out    0xbb,eax
  41ad84:	out    0xd9,eax
  41ad86:	or     dl,dl
  41ad88:	fwait
  41ad89:	sbb    DWORD PTR [ecx+0x5bd5b88a],0x76
  41ad90:	add    al,BYTE PTR [ebp+edx*2+0x45]
  41ad94:	iret   
  41ad95:	cdq    
  41ad96:	rcl    BYTE PTR [esi+0x37269b0c],1
  41ad9c:	mov    edi,0x7127c418
  41ada1:	mov    ebp,0x692e19c5
  41ada6:	popf   
  41ada7:	xchg   ecx,eax
  41ada8:	(bad)  
  41ada9:	dec    eax
  41adaa:	adc    cl,BYTE PTR [edi-0x5e931708]
  41adb0:	call   0xb069:0xdfc8c54f
  41adb7:	mov    dl,0x80
  41adb9:	ds pop edi
  41adbb:	cld    
  41adbc:	loopne 0x41ad42
  41adbe:	ror    BYTE PTR [ecx-0x4b],0x95
  41adc2:	(bad)  
  41adc3:	lods   al,BYTE PTR ds:[esi]
  41adc4:	not    ah
  41adc6:	inc    eax
  41adc7:	mov    ecx,0x9734cd19
  41adcc:	mov    edx,0xc2d7ab03
  41add1:	mov    bl,0x70
  41add3:	xchg   edx,eax
  41add4:	pusha  
  41add5:	call   0xe4d4:0x62a70c9a
  41addc:	xor    eax,0xee1b10e8
  41ade1:	xchg   ebx,eax
  41ade2:	jmp    FWORD PTR [edi+0x35cf3fe0]
  41ade8:	or     eax,0xe60a5b04
  41aded:	nop
  41adee:	aam    0xac
  41adf0:	or     cl,bl
  41adf2:	lds    ecx,FWORD PTR [edi+eiz*4+0x5]
  41adf6:	je     0x41ae46
  41adf8:	loope  0x41ad98
  41adfa:	add    DWORD PTR [esi-0x1d],eax
  41adfd:	test   BYTE PTR [esi],al
  41adff:	pushf  
  41ae00:	fadd   DWORD PTR ds:0x3e7882a6
  41ae06:	jmp    0xc572:0x60eae27b
  41ae0d:	enter  0x734a,0x86
  41ae11:	add    eax,0xf781d3f3
  41ae16:	imul   esp,DWORD PTR [edi],0xffffff82
  41ae19:	test   al,0x8c
  41ae1b:	pop    ebx
  41ae1c:	dec    esi
  41ae1d:	add    BYTE PTR [esi+0x30],dh
  41ae20:	jg     0x41ae63
  41ae22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae23:	sbb    ah,bl
  41ae25:	xchg   esi,eax
  41ae26:	cmp    esp,edx
  41ae28:	out    dx,eax
  41ae29:	jl     0x41ae8b
  41ae2b:	retf   0x3253
  41ae2e:	add    edx,DWORD PTR [ecx-0x6d665132]
  41ae34:	push   es
  41ae35:	aaa    
  41ae36:	sub    DWORD PTR [eax+ebx*4],edi
  41ae39:	adc    al,0xcb
  41ae3b:	mov    cl,0xbb
  41ae3d:	scas   al,BYTE PTR es:[edi]
  41ae3e:	xlat   BYTE PTR ds:[ebx]
  41ae3f:	xlat   BYTE PTR ds:[ebx]
  41ae40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae41:	jo     0x41ae62
  41ae43:	in     eax,0x40
  41ae45:	sbb    bh,ah
  41ae47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae48:	ds mov ch,bh
  41ae4b:	jge    0x41aeac
  41ae4d:	(bad)  
  41ae4e:	jne    0x41ae33
  41ae50:	cmp    cl,BYTE PTR [ebp+ecx*2+0x7c3ffbb3]
  41ae57:	call   0x4a7c:0x933e62d4
  41ae5e:	or     DWORD PTR gs:[esi],0xffffff9e
  41ae62:	call   0x8d7:0x4c6df0c4
  41ae69:	aad    0x46
  41ae6b:	(bad)  [ebp+0x4b40abe0]
  41ae71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae72:	lods   eax,DWORD PTR ds:[esi]
  41ae73:	(bad)  
  41ae74:	fmul   DWORD PTR [edx+0x168e892a]
  41ae7a:	imul   edi,DWORD PTR [ecx-0x11],0x49786a21
  41ae81:	xchg   BYTE PTR [ecx-0x36],bl
  41ae84:	aaa    
  41ae85:	jle    0x41ae87
  41ae87:	sti    
  41ae88:	pop    ss
  41ae89:	xchg   ecx,eax
  41ae8a:	popa   
  41ae8b:	(bad)  
  41ae8c:	mov    ch,0x50
  41ae8e:	rol    BYTE PTR [eax],0xfe
  41ae91:	push   cs
  41ae92:	lahf   
  41ae93:	jne    0x41ae16
  41ae95:	jge    0x41ae73
  41ae97:	inc    edx
  41ae98:	lods   al,BYTE PTR ds:[esi]
  41ae99:	mov    cl,0x1f
  41ae9b:	adc    ebx,ecx
  41ae9d:	mov    al,ds:0x8b917cbd
  41aea2:	sbb    eax,0x46aec11e
  41aea7:	(bad)  
  41aea8:	mov    edx,0xfa4caeb4
  41aead:	nop
  41aeae:	lds    ebp,FWORD PTR ds:0x44c7d4b3
  41aeb4:	(bad)
  41aeb7:	cdq    
  41aeb8:	pusha  
  41aeb9:	dec    eax
  41aeba:	loope  0x41aedb
  41aebc:	pop    es
  41aebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aebe:	hlt    
  41aebf:	ss dec ebp
  41aec1:	jg     0x41af2f
  41aec3:	jae    0x41ae79
  41aec5:	mov    BYTE PTR [esp+ebp*2+0x7a7a218e],ch
  41aecc:	push   0x6e6a4bb5
  41aed1:	ja     0x41af3a
  41aed3:	push   eax
  41aed4:	push   edx
  41aed5:	ins    BYTE PTR es:[edi],dx
  41aed6:	rol    BYTE PTR [ebp+0x53],cl
  41aed9:	out    dx,eax
  41aeda:	frstor [ebx+0x66]
  41aedd:	pusha  
  41aede:	inc    ebx
  41aedf:	enter  0x123a,0x68
  41aee3:	aam    0xa8
  41aee5:	imul   edx,DWORD PTR [esi-0x44cf32a0],0xf7e4e7ce
  41aeef:	mov    BYTE PTR [edx+edx*1-0x3e],ch
  41aef3:	dec    ecx
  41aef4:	inc    edx
  41aef5:	push   ebx
  41aef6:	or     esi,eax
  41aef8:	pop    esi
  41aef9:	sub    eax,ecx
  41aefb:	or     BYTE PTR [ecx-0x27fdd413],0x1a
  41af02:	daa    
  41af03:	jns    0x41af7c
  41af05:	sbb    eax,0xa7adb570
  41af0a:	fmul   st,st(0)
  41af0c:	popa   
  41af0d:	sbb    dh,BYTE PTR [edx-0x2c61d318]
  41af13:	lock cld 
  41af15:	and    DWORD PTR [ecx-0x3da19264],eax
  41af1b:	mov    edi,0xf897c3df
  41af20:	in     eax,0xa9
  41af22:	xchg   edi,eax
  41af23:	jecxz  0x41aede
  41af25:	call   FWORD PTR [ebp*2+0x64f85a70]
  41af2c:	mov    ecx,0x8cf205a6
  41af31:	mov    al,al
  41af33:	ds mov ecx,0xcf29f69b
  41af39:	in     eax,0x89
  41af3b:	lods   al,BYTE PTR ds:[esi]
  41af3c:	retf   0x9327
  41af3f:	lea    edx,[edi+0x79]
  41af42:	jo     0x41aecc
  41af44:	ficomp DWORD PTR [esi-0x3b]
  41af47:	adc    bl,BYTE PTR [ebp+esi*1+0x4c]
  41af4b:	mov    al,ds:0x7e43a687
  41af50:	les    ebp,FWORD PTR gs:[edx-0x5ce5a7d]
  41af57:	sub    al,ch
  41af59:	scas   al,BYTE PTR es:[edi]
  41af5a:	or     DWORD PTR [ebx+ebp*8-0x6eba8bf6],eax
  41af61:	sahf   
  41af62:	outs   dx,BYTE PTR ds:[esi]
  41af63:	sbb    esp,ecx
  41af65:	aam    0xda
  41af67:	lds    edi,FWORD PTR [edx]
  41af69:	xchg   esi,eax
  41af6a:	adc    bl,BYTE PTR [ecx-0x21b71ec0]
  41af70:	sub    DWORD PTR [ecx+0x79329684],edi
  41af76:	rcr    dh,1
  41af78:	jb     0x41afa5
  41af7a:	test   ah,0xf7
  41af7d:	aaa    
  41af7e:	sti    
  41af7f:	jle    0x41affd
  41af81:	mov    edi,DWORD PTR [ecx+edx*4-0x48]
  41af85:	mov    ds:0x3aa0926f,al
  41af8a:	cld    
  41af8b:	add    BYTE PTR [esi-0x63],al
  41af8e:	int3   
  41af8f:	inc    ecx
  41af90:	push   DWORD PTR [ebp-0x73]
  41af93:	icebp  
  41af94:	js     0x41afdd
  41af96:	aas    
  41af97:	pop    ds
  41af98:	(bad)  
  41af99:	cld    
  41af9a:	adc    al,BYTE PTR [ecx-0x64835b06]
  41afa0:	ins    BYTE PTR es:[edi],dx
  41afa1:	int3   
  41afa2:	sbb    al,ah
  41afa4:	jo     0x41af44
  41afa6:	aas    
  41afa7:	lds    esp,FWORD PTR [ebx]
  41afa9:	inc    edx
  41afaa:	mov    cl,0xc4
  41afac:	(bad)  
  41afad:	xor    ah,BYTE PTR [edi-0x38]
  41afb0:	cmp    DWORD PTR [edx+0x3b],esp
  41afb3:	shl    BYTE PTR [eax-0x3b],0x7d
  41afb7:	fwait
  41afb8:	call   0xa34d84c4
  41afbd:	test   eax,0xc170d1a
  41afc2:	mov    dh,cl
  41afc4:	(bad)
  41afc8:	jne    0x41af9f
  41afca:	and    bl,cl
  41afcc:	or     DWORD PTR [esi],esp
  41afce:	push   ebp
  41afcf:	(bad)  
  41afd0:	std    
  41afd1:	pop    ds
  41afd2:	(bad)  
  41afd4:	fs cmc 
  41afd6:	cmp    al,0x93
  41afd8:	xchg   ebx,eax
  41afd9:	fs (bad) 
  41afdb:	xchg   ebp,eax
  41afdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afdd:	push   edi
  41afde:	sbb    DWORD PTR [edx-0x31cf1a14],edi
  41afe4:	and    edx,DWORD PTR [edi-0x68]
  41afe7:	shr    DWORD PTR [ebx+ebp*2],0x4a
  41afeb:	mov    eax,0x398a042e
  41aff0:	shl    DWORD PTR [edi],0x8b
  41aff3:	sub    eax,0x1a6b61ad
  41aff8:	fsubr  st(2),st
  41affa:	icebp  
  41affb:	add    esi,DWORD PTR [ecx]
  41affd:	xchg   ecx,eax
  41affe:	jb     0x41afac
  41b000:	retf   
  41b001:	in     eax,0x11
  41b003:	or     bh,BYTE PTR [ecx-0x58]
  41b006:	jecxz  0x41b039
  41b008:	outs   dx,BYTE PTR ds:[esi]
  41b009:	adc    eax,0x935f690c
  41b00e:	and    al,0xcc
  41b010:	push   ecx
  41b011:	lock push 0xf9203fc0
  41b017:	fidiv  WORD PTR [ebx+0x65]
  41b01a:	lock xor DWORD PTR [ecx+0x5dad7fd1],0xffffff8d
  41b022:	mov    bl,0xb2
  41b024:	inc    edx
  41b025:	dec    edi
  41b026:	js     0x41b078
  41b028:	add    dl,0xee
  41b02b:	jbe    0x41b049
  41b02d:	adc    eax,0x704c5c7b
  41b032:	xchg   ebx,eax
  41b033:	int    0x9d
  41b035:	xchg   DWORD PTR [eax-0x7c987564],ebx
  41b03b:	stos   BYTE PTR es:[edi],al
  41b03c:	cdq    
  41b03d:	cmp    DWORD PTR [esi],eax
  41b03f:	sbb    al,BYTE PTR [ebx+eax*4+0x3a94fb07]
  41b046:	idiv   DWORD PTR [ebx+0x29fd4948]
  41b04c:	adc    esi,DWORD PTR cs:[esi+0x2f]
  41b050:	gs adc al,0x41
  41b053:	push   eax
  41b054:	xchg   ecx,eax
  41b055:	mov    ebx,0xbd81007
  41b05a:	arpl   cx,di
  41b05c:	fiadd  WORD PTR [edx]
  41b05e:	cmp    bl,dh
  41b060:	scas   al,BYTE PTR es:[edi]
  41b061:	mov    ch,0x76
  41b063:	adc    BYTE PTR ds:0x1831dd8b,ch
  41b069:	es das 
  41b06b:	cmc    
  41b06c:	paddusb mm0,QWORD PTR [ecx]
  41b06f:	mov    esp,0x3dacdd9c
  41b074:	xor    eax,0x6e159760
  41b079:	mov    ecx,0x6b077bcf
  41b07e:	inc    esi
  41b07f:	pop    ebx
  41b080:	ja     0x41b08c
  41b082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b083:	repz pusha 
  41b085:	pop    ecx
  41b086:	lea    ebp,[eax]
  41b088:	fdiv   st,st(4)
  41b08a:	(bad)  [ebx-0x34d26860]
  41b090:	push   esi
  41b091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b092:	mov    esi,edx
  41b094:	cmp    BYTE PTR [ebx+0x26d939ec],0x0
  41b09b:	iret   
  41b09c:	cli    
  41b09d:	sub    ebp,DWORD PTR [edx]
  41b09f:	out    dx,al
  41b0a0:	pop    esi
  41b0a1:	and    ecx,DWORD PTR [ebx]
  41b0a3:	retf   0x7219
  41b0a6:	fsubr  DWORD PTR [eax+0x3]
  41b0a9:	xchg   BYTE PTR [ebx+0x1f8b1a01],cl
  41b0af:	les    edx,FWORD PTR [ecx+0x6c]
  41b0b2:	ror    BYTE PTR [edx+0x2f8135e8],0x45
  41b0b9:	sti    
  41b0ba:	add    eax,0xa3b03627
  41b0bf:	xchg   DWORD PTR [eax-0x5f0cc703],esi
  41b0c5:	bound  edx,QWORD PTR [ebx-0x55]
  41b0c8:	dec    ecx
  41b0c9:	xchg   ecx,edx
  41b0cb:	sub    DWORD PTR [esi],esi
  41b0cd:	enter  0xc871,0xc1
  41b0d1:	pushf  
  41b0d2:	out    0x9,al
  41b0d4:	and    ebx,0x5ca265ea
  41b0da:	fxch   st(7)
  41b0dc:	pop    edi
  41b0dd:	mov    dl,0x64
  41b0df:	pop    ss
  41b0e0:	inc    edi
  41b0e1:	call   0x5500:0x906f28cf
  41b0e8:	shl    BYTE PTR [eax],1
  41b0ea:	test   eax,0x3cb437d6
  41b0ef:	xchg   ebx,eax
  41b0f0:	cmp    al,0x5b
  41b0f2:	xor    al,0xac
  41b0f4:	test   al,0xf9
  41b0f6:	add    edi,DWORD PTR [eax]
  41b0f8:	test   DWORD PTR [esi-0x3f],edi
  41b0fb:	mov    esp,0xddc67c40
  41b100:	or     bh,ah
  41b102:	and    al,0x9d
  41b104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b105:	pop    esi
  41b106:	leave  
  41b107:	pushf  
  41b108:	push   0x36
  41b10a:	les    esi,FWORD PTR [eax+eax*8-0x15780dff]
  41b111:	fmul   DWORD PTR [ebx+0x42b564e0]
  41b117:	lock ins BYTE PTR es:[edi],dx
  41b119:	mov    ecx,ebp
  41b11b:	mov    ah,0x54
  41b11d:	mov    dh,0x42
  41b11f:	out    dx,eax
  41b120:	push   ebp
  41b121:	jb     0x41b150
  41b123:	cdq    
  41b124:	out    0x57,eax
  41b126:	jge    0x41b124
  41b128:	jo     0x41b0f8
  41b12a:	ins    DWORD PTR es:[edi],dx
  41b12b:	jb     0x41b171
  41b12d:	jb     0x41b103
  41b12f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b130:	dec    ebp
  41b131:	iret   
  41b132:	imul   eax,DWORD PTR [esi+0x295c2842],0x81b1837a
  41b13c:	mov    esp,0xd4c24caf
  41b141:	jno    0x41b131
  41b143:	sub    DWORD PTR [edi],ebx
  41b145:	mov    al,0x3
  41b147:	hlt    
  41b148:	ins    DWORD PTR es:[edi],dx
  41b149:	add    ah,ch
  41b14b:	add    esp,DWORD PTR [ebx-0x10]
  41b14e:	sar    DWORD PTR [ebp+edi*4+0x28],cl
  41b152:	in     eax,dx
  41b153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b154:	jle    0x41b107
  41b156:	inc    edx
  41b157:	rcl    ebx,cl
  41b159:	test   al,0x68
  41b15b:	repz mov esi,0x3eb87f3c
  41b161:	xchg   edi,eax
  41b162:	fs std 
  41b164:	stc    
  41b165:	push   eax
  41b166:	dec    ebx
  41b167:	int3   
  41b168:	bound  edx,QWORD PTR [edi]
  41b16a:	fucomi st,st(3)
  41b16c:	ins    BYTE PTR es:[edi],dx
  41b16d:	sub    ah,BYTE PTR [ebx+ecx*1-0x194fb93c]
  41b174:	dec    esi
  41b175:	push   edx
  41b176:	pop    ebx
  41b177:	pusha  
  41b178:	xor    esp,DWORD PTR [esp+edi*2+0x64e897b2]
  41b17f:	or     edi,DWORD PTR [edx+0x2ec8d74c]
  41b185:	je     0x41b173
  41b187:	repz sbb bh,BYTE PTR [esi+0x23ac1d15]
  41b18e:	and    cl,0x77
  41b191:	sub    al,0xfe
  41b193:	retf   0x8bbc
  41b196:	push   eax
  41b197:	jmp    0x41b193
  41b199:	test   eax,0x4acbc61f
  41b19e:	inc    eax
  41b19f:	sbb    ebx,DWORD PTR [edx-0xd]
  41b1a2:	mov    ecx,0x6593368e
  41b1a7:	cmp    eax,0x6d0756e6
  41b1ac:	push   ds
  41b1ad:	cmp    BYTE PTR [eax],ch
  41b1af:	push   ss
  41b1b0:	call   0x8276:0xc63a36b2
  41b1b7:	mov    fs,WORD PTR [edx+0x47cbc3ad]
  41b1bd:	out    0xe8,eax
  41b1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1c0:	out    dx,al
  41b1c1:	cwde   
  41b1c2:	iret   
  41b1c3:	pop    ds
  41b1c4:	test   al,0xfe
  41b1c6:	add    ebx,DWORD PTR [ecx+0x31]
  41b1c9:	hlt    
  41b1ca:	inc    ebp
  41b1cb:	mov    edi,0x256d64a3
  41b1d0:	jnp    0x41b1a8
  41b1d2:	and    DWORD PTR [ebp-0x23],esi
  41b1d5:	ins    DWORD PTR es:[edi],dx
  41b1d6:	fcmovnbe st,st(4)
  41b1d8:	xlat   BYTE PTR ds:[ebx]
  41b1d9:	call   DWORD PTR [esi+0x53c5a]
  41b1df:	cmp    BYTE PTR [edx+0xbed29cc],al
  41b1e5:	dec    esp
  41b1e6:	cli    
  41b1e7:	inc    ebx
  41b1e8:	out    0x1c,eax
  41b1ea:	add    ch,BYTE PTR es:[edi-0x7ec27df0]
  41b1f1:	add    BYTE PTR [ebp-0x74],0x96
  41b1f5:	push   ebx
  41b1f6:	repz mov cl,0x3
  41b1f9:	not    BYTE PTR [edx+esi*2]
  41b1fc:	js     0x41b214
  41b1fe:	lea    ebx,[ebp-0x4e4dccd9]
  41b204:	int3   
  41b205:	and    al,0x3
  41b207:	mov    esp,0x5b0314f6
  41b20c:	lahf   
  41b20d:	test   DWORD PTR [ecx],ecx
  41b20f:	je     0x41b198
  41b211:	and    ebp,DWORD PTR [ebp+0x41]
  41b214:	loop   0x41b1b7
  41b216:	jo     0x41b20c
  41b218:	mov    esi,0xcc56b3e1
  41b21d:	test   BYTE PTR [edi+0x2b],0xa0
  41b221:	and    esi,DWORD PTR [esi]
  41b223:	sbb    eax,0x80b0a05a
  41b228:	xchg   BYTE PTR [ebx-0x67],bl
  41b22b:	hlt    
  41b22c:	and    DWORD PTR [edi],edi
  41b22e:	cwde   
  41b22f:	outs   dx,BYTE PTR ds:[esi]
  41b230:	add    eax,0xa9afd88d
  41b235:	jne    0x41b22e
  41b237:	sbb    DWORD PTR [ebx+ebp*8],ebx
  41b23a:	push   ebx
  41b23b:	stos   BYTE PTR es:[edi],al
  41b23c:	fild   DWORD PTR [edi]
  41b23e:	aas    
  41b23f:	pop    ebx
  41b240:	cmp    eax,0xb4375e76
  41b245:	pop    esi
  41b246:	fidivr DWORD PTR [esi]
  41b248:	pop    ss
  41b249:	add    edi,DWORD PTR [ebx+0xf]
  41b24c:	inc    eax
  41b24d:	ret    
  41b24e:	adc    DWORD PTR [ebx+edx*8],esp
  41b251:	dec    edx
  41b252:	mov    dl,0x50
  41b254:	xlat   BYTE PTR ds:[ebx]
  41b255:	dec    esp
  41b256:	shl    DWORD PTR [ebp-0x384b3a9d],1
  41b25c:	sbb    cl,0xaf
  41b25f:	jmp    0xdbb2a4a7
  41b264:	jecxz  0x41b20a
  41b266:	xchg   ebp,eax
  41b267:	dec    edi
  41b268:	push   esp
  41b269:	xchg   ecx,eax
  41b26a:	mov    al,0x74
  41b26c:	inc    ebp
  41b26d:	mov    BYTE PTR [esp+esi*1],cl
  41b270:	arpl   WORD PTR [bx+di],si
  41b273:	mov    ds:0x3c5e2ba7,al
  41b278:	aas    
  41b279:	ss inc esp
  41b27b:	(bad)  [ebx]
  41b27d:	fld    TBYTE PTR [esi+eiz*4]
  41b280:	push   ebx
  41b281:	sbb    edx,esp
  41b283:	out    dx,eax
  41b284:	push   edi
  41b285:	mov    edi,0x8efb3fb3
  41b28a:	mov    edx,0xe9a2540b
  41b28f:	hlt    
  41b290:	xchg   esp,eax
  41b291:	dec    ecx
  41b292:	mov    eax,ds:0x4dac127
  41b297:	int    0x73
  41b299:	fsub   DWORD PTR [eax+eiz*1]
  41b29c:	(bad)  [edx+0x14]
  41b29f:	dec    edx
  41b2a0:	adc    dl,dl
  41b2a2:	push   0x13793de2
  41b2a7:	mov    ebx,DWORD PTR [edi-0x3]
  41b2aa:	xchg   ebx,eax
  41b2ab:	das    
  41b2ac:	push   0xffffffc8
  41b2ae:	cmp    al,0x65
  41b2b0:	push   ebp
  41b2b1:	sbb    al,0xbb
  41b2b3:	repnz into 
  41b2b5:	arpl   dx,sp
  41b2b7:	or     BYTE PTR [eax],bl
  41b2b9:	inc    edx
  41b2ba:	mov    al,ds:0xfa2e0ff6
  41b2bf:	mov    edx,0xaca7c02a
  41b2c4:	mov    bh,0x89
  41b2c6:	fadd   QWORD PTR [ebx]
  41b2c8:	scas   eax,DWORD PTR es:[edi]
  41b2c9:	inc    eax
  41b2ca:	popa   
  41b2cb:	jecxz  0x41b2ef
  41b2cd:	out    dx,eax
  41b2ce:	xor    BYTE PTR [edx+0x7a],cl
  41b2d1:	adc    eax,0xb08ee6c7
  41b2d6:	cmp    dh,BYTE PTR [ebx+0x31]
  41b2d9:	test   BYTE PTR [ebx],ah
  41b2db:	jp     0x41b2fd
  41b2dd:	dec    eax
  41b2de:	adc    al,0x98
  41b2e0:	mov    bl,BYTE PTR [edi]
  41b2e2:	out    0x40,eax
  41b2e4:	call   ecx
  41b2e6:	or     eax,0x8b6858af
  41b2eb:	fisubr DWORD PTR [ecx-0x45]
  41b2ee:	fs jg  0x41b341
  41b2f1:	ss mov esp,0x6f00eb9
  41b2f7:	clc    
  41b2f8:	mov    ch,0x82
  41b2fa:	sar    DWORD PTR [edi+0x6e],cl
  41b2fd:	add    eax,0x16960495
  41b302:	cwde   
  41b303:	mov    ecx,0xb05c802a
  41b308:	loope  0x41b386
  41b30a:	test   eax,0xbd6d6468
  41b30f:	ja     0x41b310
  41b311:	mov    edx,0xde17454e
  41b316:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b318:	int3   
  41b319:	jne    0x41b350
  41b31b:	fst    DWORD PTR [esi-0x7cb49e4f]
  41b321:	loopne 0x41b2b0
  41b323:	cmc    
  41b324:	shl    BYTE PTR [edx+ebx*4],cl
  41b327:	mov    dl,0x46
  41b329:	cld    
  41b32a:	push   cs
  41b32b:	out    dx,al
  41b32c:	or     eax,0x849ace19
  41b331:	daa    
  41b332:	pop    edi
  41b333:	xor    al,0x1c
  41b335:	jbe    0x41b30b
  41b337:	aad    0x95
  41b339:	and    cl,BYTE PTR [ecx]
  41b33b:	ror    DWORD PTR [edx-0x407e53aa],cl
  41b341:	sub    BYTE PTR [ecx],al
  41b343:	sub    ch,cl
  41b345:	pop    ebp
  41b346:	or     esi,DWORD PTR [edx-0x1e5e09ca]
  41b34c:	outs   dx,DWORD PTR ds:[esi]
  41b34d:	out    dx,al
  41b34e:	cmp    DWORD PTR [ecx+eax*2],ecx
  41b351:	nop
  41b352:	mov    esi,DWORD PTR [edi+ebx*2-0x70]
  41b356:	cmp    dl,dl
  41b358:	dec    ecx
  41b359:	popf   
  41b35a:	imul   ebp,DWORD PTR [edx+ebx*2+0x21],0x70
  41b35f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b360:	sub    esi,ebx
  41b362:	es xchg ebp,eax
  41b364:	pop    eax
  41b365:	adc    eax,0xa2c9f39b
  41b36a:	out    0x6e,eax
  41b36c:	les    edi,FWORD PTR [edi+0x65]
  41b36f:	mov    al,ds:0xe68303f4
  41b374:	mov    DWORD PTR [edi-0x18],esi
  41b377:	inc    ebx
  41b378:	and    ecx,0xc03d1551
  41b37e:	sub    bh,BYTE PTR [ebp-0x1f]
  41b381:	(bad)  
  41b382:	data16 jbe 0x41b38a
  41b385:	test   BYTE PTR [ebx-0x7b],bh
  41b388:	addr16 mov eax,0x9e3e7c8f
  41b38e:	loop   0x41b3f2
  41b390:	(bad)  
  41b391:	lock xchg esp,eax
  41b393:	out    dx,eax
  41b394:	stc    
  41b395:	lock mov al,ds:0x6a29a869
  41b39b:	icebp  
  41b39c:	dec    esp
  41b39d:	daa    
  41b39e:	mov    bl,0x82
  41b3a0:	sti    
  41b3a1:	mov    ds:0xd1749859,eax
  41b3a6:	or     al,0x72
  41b3a8:	out    dx,al
  41b3a9:	push   eax
  41b3aa:	bound  eax,QWORD PTR ds:0x41539ce5
  41b3b0:	and    al,0x3
  41b3b2:	pop    eax
  41b3b3:	mov    ebx,DWORD PTR [ecx-0x17]
  41b3b6:	jbe    0x41b349
  41b3b8:	jle    0x41b3a6
  41b3ba:	stos   DWORD PTR es:[edi],eax
  41b3bb:	fst    DWORD PTR [eax]
  41b3bd:	cmp    esp,esi
  41b3bf:	lods   al,BYTE PTR ds:[esi]
  41b3c0:	sub    eax,0x85e84f30
  41b3c5:	dec    edi
  41b3c6:	xchg   ecx,eax
  41b3c7:	das    
  41b3c8:	fisub  WORD PTR [edi]
  41b3ca:	int3   
  41b3cb:	xchg   ecx,eax
  41b3cc:	or     BYTE PTR [eax-0x6ce6af8d],ah
  41b3d2:	pop    ebp
  41b3d3:	inc    edi
  41b3d4:	jmp    0xb7188c15
  41b3d9:	std    
  41b3da:	fidiv  WORD PTR [edi+ecx*1+0x3302a7da]
  41b3e1:	sbb    eax,0x5b8587e4
  41b3e6:	add    ebp,edi
  41b3e8:	dec    ecx
  41b3e9:	xor    eax,0x1ed40f51
  41b3ee:	fdiv   DWORD PTR [ebp+0x474f8be2]
  41b3f4:	mov    cl,0xc5
  41b3f6:	dec    edx
  41b3f7:	jg     0x41b411
  41b3f9:	sub    bl,BYTE PTR [edi+edx*1]
  41b3fc:	sub    DWORD PTR [edx+0x3d10383],esp
  41b402:	dec    eax
  41b403:	dec    ebx
  41b404:	inc    esi
  41b405:	ror    BYTE PTR [edi-0x5b],cl
  41b408:	mov    WORD PTR [ebx],?
  41b40a:	mov    bl,0x4c
  41b40c:	mov    al,0x29
  41b40e:	dec    edi
  41b40f:	sub    eax,edi
  41b411:	mov    edi,0x1e99bac9
  41b416:	inc    ebp
  41b417:	push   ecx
  41b418:	int    0x9b
  41b41a:	and    edi,DWORD PTR [ebx+0x9e41814]
  41b420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b421:	ja     0x41b489
  41b423:	shl    BYTE PTR [eax-0x14],1
  41b426:	add    bl,ch
  41b428:	xor    eax,0x894c88f8
  41b42d:	and    dh,ch
  41b42f:	loop   0x41b3f7
  41b431:	loopne 0x41b3c6
  41b433:	fyl2xp1 
  41b435:	inc    ecx
  41b436:	fiadd  WORD PTR [edi]
  41b438:	cmp    esp,0xe2e1c52d
  41b43e:	scas   eax,DWORD PTR es:[edi]
  41b43f:	mov    dh,0x70
  41b441:	mov    bh,0x5
  41b443:	not    DWORD PTR [edi+0x43]
  41b446:	cmp    esi,DWORD PTR [eax]
  41b448:	imul   ebx,DWORD PTR [edi-0x62d6844e],0xf61562b7
  41b452:	lods   al,BYTE PTR ds:[esi]
  41b453:	leave  
  41b454:	jno    0x41b490
  41b456:	retf   0x166e
  41b459:	and    eax,0x5ae2332
  41b45e:	ret    
  41b45f:	lods   al,BYTE PTR ds:[esi]
  41b460:	int    0xa2
  41b462:	stos   BYTE PTR es:[edi],al
  41b463:	dec    esi
  41b464:	or     al,0x39
  41b466:	lea    esp,[eax-0x79f1ae57]
  41b46c:	cs mov al,0x34
  41b46f:	mov    esp,DWORD PTR [ebx-0x19]
  41b472:	and    ebp,DWORD PTR [esi+0x5272edd1]
  41b478:	xchg   ecx,eax
  41b479:	test   al,0xce
  41b47b:	mov    eax,ds:0x1a2b6daf
  41b480:	outs   dx,BYTE PTR ds:[esi]
  41b481:	rol    DWORD PTR fs:[ebx],1
  41b484:	in     eax,dx
  41b485:	mov    eax,ds:0x100b4a70
  41b48a:	ins    DWORD PTR es:[edi],dx
  41b48b:	cwde   
  41b48c:	neg    BYTE PTR [eax]
  41b48e:	jno    0x41b4eb
  41b490:	pop    esp
  41b491:	mov    cs,ebp
  41b493:	push   edx
  41b494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b495:	outs   dx,BYTE PTR ds:[esi]
  41b496:	frstor [edx+edx*4+0x54762116]
  41b49d:	fist   WORD PTR [edi]
  41b49f:	mov    eax,ds:0x58474ca
  41b4a4:	adc    eax,DWORD PTR [eax]
  41b4a6:	xor    al,0xe4
  41b4a8:	inc    edx
  41b4a9:	sub    dh,BYTE PTR [ecx+0x70]
  41b4ac:	imul   ecx,ebp,0xffffffa4
  41b4af:	stc    
  41b4b0:	dec    ebx
  41b4b1:	stos   DWORD PTR es:[edi],eax
  41b4b2:	mov    eax,ds:0x8e85273f
  41b4b7:	xor    eax,0x5ea92bf3
  41b4bc:	push   ds
  41b4bd:	mov    ebp,0x95278a81
  41b4c2:	arpl   ax,sp
  41b4c4:	jns    0x41b532
  41b4c6:	pop    ecx
  41b4c7:	stos   BYTE PTR es:[edi],al
  41b4c8:	and    DWORD PTR es:[ebx],eax
  41b4cb:	ins    BYTE PTR es:[edi],dx
  41b4cc:	or     al,bl
  41b4ce:	dec    esi
  41b4cf:	sub    DWORD PTR [ebp-0x65],ebx
  41b4d2:	inc    esp
  41b4d3:	pop    eax
  41b4d4:	hlt    
  41b4d5:	and    DWORD PTR [edi-0x56],0x6ac4ee15
  41b4dc:	dec    edx
  41b4dd:	in     eax,dx
  41b4de:	mov    fs,ebx
  41b4e0:	jnp    0x41b4ae
  41b4e2:	lock cdq 
  41b4e4:	imul   ecx,esi,0x9bd4f5d2
  41b4ea:	mov    al,ds:0x31eff3c2
  41b4ef:	pushf  
  41b4f0:	push   0x81863f86
  41b4f5:	pop    ss
  41b4f6:	lods   eax,DWORD PTR ds:[esi]
  41b4f7:	inc    esp
  41b4f8:	es xchg edx,eax
  41b4fa:	push   ecx
  41b4fb:	daa    
  41b4fc:	pop    ebp
  41b4fd:	out    dx,al
  41b4fe:	and    eax,0x11e10ac3
  41b503:	inc    ebx
  41b504:	sbb    dh,BYTE PTR [edi+0x5e]
  41b507:	mov    dh,0xfa
  41b509:	or     al,0x38
  41b50b:	dec    edx
  41b50c:	xor    DWORD PTR [esi-0x470783d9],eax
  41b512:	xor    eax,0xf7adb716
  41b517:	inc    esp
  41b518:	add    BYTE PTR [eax+ecx*8],ch
  41b51b:	adc    al,0x93
  41b51d:	and    eax,0x5f7e25fc
  41b522:	sti    
  41b523:	sbb    cl,BYTE PTR [edi+0x3f2b0d66]
  41b529:	sbb    esp,ecx
  41b52b:	fwait
  41b52c:	ret    
  41b52d:	sub    dl,0xda
  41b530:	add    ebp,DWORD PTR [edx+0xd4f7407]
  41b536:	inc    BYTE PTR [esi+0x7c]
  41b539:	out    dx,al
  41b53a:	adc    eax,0x15681e0f
  41b53f:	(bad)  
  41b540:	mov    eax,0x86dab8c4
  41b545:	cli    
  41b546:	ss data16 das 
  41b549:	xlat   BYTE PTR ds:[ebx]
  41b54a:	inc    ebp
  41b54b:	repnz enter 0xc4bb,0xc6
  41b550:	js     0x41b52f
  41b552:	scas   al,BYTE PTR es:[edi]
  41b553:	pop    ebp
  41b554:	and    eax,DWORD PTR [esi-0x1f]
  41b557:	(bad)  
  41b558:	pop    edi
  41b559:	outs   dx,BYTE PTR ds:[esi]
  41b55a:	ss call 0x4168:0x45ae3ed
  41b562:	pop    esp
  41b563:	jno    0x41b4fc
  41b565:	lods   eax,DWORD PTR ds:[esi]
  41b566:	dec    edi
  41b567:	xor    edi,DWORD PTR ds:0x3e12020
  41b56d:	adc    BYTE PTR [ecx-0x4d11d7c9],ah
  41b573:	jns    0x41b56d
  41b575:	xchg   bl,bh
  41b577:	jne    0x41b55e
  41b579:	sbb    BYTE PTR [edi],bh
  41b57b:	(bad)  [ebx+ecx*1-0x2d]
  41b57f:	push   ss
  41b580:	mov    esp,DWORD PTR [ebx]
  41b582:	js     0x41b5c1
  41b584:	in     al,0xe8
  41b586:	mov    dl,0xb3
  41b588:	test   DWORD PTR [ecx+0x66685d0c],ebp
  41b58e:	pop    es
  41b58f:	dec    edi
  41b590:	xor    dl,BYTE PTR [edi+ebx*4-0xc570382]
  41b597:	jns    0x41b608
  41b599:	xor    ebp,DWORD PTR [eax]
  41b59b:	add    DWORD PTR fs:[edx-0x512012ba],0xffffffdd
  41b5a3:	sbb    dl,BYTE PTR [edx]
  41b5a5:	sti    
  41b5a6:	out    0x29,al
  41b5a8:	mov    DWORD PTR [esp+ebp*2],ecx
  41b5ab:	lods   eax,DWORD PTR ds:[esi]
  41b5ac:	arpl   WORD PTR [edi+0x28e4de3c],dx
  41b5b2:	mov    WORD PTR [ebx-0x50],ds
  41b5b5:	shl    bh,cl
  41b5b7:	retf   
  41b5b8:	cmp    ebp,edi
  41b5ba:	(bad)  
  41b5bb:	in     eax,dx
  41b5bc:	or     eax,0xb51a0eb7
  41b5c2:	add    al,0x26
  41b5c4:	and    eax,0x1698cc84
  41b5c9:	ror    DWORD PTR [eax],0x13
  41b5cc:	sbb    BYTE PTR [ebx+0x56],ch
  41b5cf:	fs out 0x47,eax
  41b5d2:	inc    edx
  41b5d3:	jbe    0x41b61f
  41b5d5:	ja     0x41b563
  41b5d7:	pop    ss
  41b5d8:	cmp    esp,DWORD PTR [ecx]
  41b5da:	int    0xfd
  41b5dc:	mov    dl,0xcb
  41b5de:	jb     0x41b58d
  41b5e0:	dec    ebp
  41b5e1:	mov    al,ds:0x8862a056
  41b5e6:	adc    eax,0x95c7b030
  41b5ec:	push   edi
  41b5ed:	inc    ecx
  41b5ee:	or     eax,0xfb529836
  41b5f3:	outs   dx,DWORD PTR ds:[esi]
  41b5f4:	call   0xace408b4
  41b5f9:	mov    al,0xfe
  41b5fb:	cmp    eax,0x9173b1ae
  41b600:	lods   eax,DWORD PTR es:[esi]
  41b602:	rcl    dl,0x66
  41b605:	fs push 0xacb27068
  41b60b:	inc    ebx
  41b60c:	xchg   esp,eax
  41b60d:	(bad)  [edx]
  41b60f:	fdivr  st(2),st
  41b611:	jmp    0x41b636
  41b613:	js     0x41b5bc
  41b615:	cmp    eax,0x2ac2f04e
  41b61a:	mov    ch,BYTE PTR [edx+0x7a49ddb5]
  41b620:	lahf   
  41b621:	pop    ds
  41b622:	in     al,dx
  41b623:	lahf   
  41b624:	(bad)  
  41b627:	imul   esp,DWORD PTR [esi+ebp*2-0x6682dbdb],0xffffff96
  41b62f:	inc    ecx
  41b630:	f2xm1  
  41b632:	or     al,BYTE PTR [si+0x6c]
  41b637:	cmp    BYTE PTR [ebp-0x78],0xa8
  41b63b:	inc    edx
  41b63c:	push   eax
  41b63d:	(bad)  
  41b63e:	cld    
  41b63f:	mov    bl,0xf0
  41b641:	rcr    BYTE PTR [ecx],0x39
  41b644:	scas   al,BYTE PTR es:[edi]
  41b645:	daa    
  41b646:	cmp    BYTE PTR [ebx-0x6c],bh
  41b649:	jne    0x41b622
  41b64b:	xchg   edi,eax
  41b64c:	rcr    BYTE PTR [edx-0x6604da95],1
  41b652:	mov    bh,BYTE PTR [esi-0x1a]
  41b655:	daa    
  41b656:	cs mov al,0xfc
  41b659:	push   edi
  41b65a:	push   edx
  41b65b:	adc    DWORD PTR [ebp-0x415ff696],ebp
  41b661:	lds    edx,FWORD PTR [eax-0x2a]
  41b664:	rol    dh,0x1e
  41b667:	out    0x31,al
  41b669:	stos   BYTE PTR es:[edi],al
  41b66a:	push   0x6e
  41b66c:	or     al,0x2f
  41b66e:	mov    cl,0x2e
  41b670:	outs   dx,BYTE PTR ds:[esi]
  41b671:	or     al,0x6e
  41b673:	ror    DWORD PTR [eax+ecx*1],0x55
  41b677:	dec    ebp
  41b678:	cmp    ebx,edi
  41b67a:	or     DWORD PTR [ecx+0x57c9eaca],edi
  41b680:	retf   
  41b681:	fs dec eax
  41b683:	repnz push esi
  41b685:	xlat   BYTE PTR ds:[ebx]
  41b686:	and    esp,edi
  41b688:	shl    edx,cl
  41b68a:	jle    0x41b622
  41b68c:	xor    eax,0xde0d9bab
  41b691:	(bad)  
  41b692:	lds    esp,FWORD PTR [esi+0x3b94570e]
  41b698:	mov    esi,0xacaa2978
  41b69d:	mov    dh,0x13
  41b69f:	(bad)  
  41b6a3:	jne    0x41b675
  41b6a5:	ds cwde 
  41b6a7:	mov    edx,0xa3adc05b
  41b6ac:	aaa    
  41b6ad:	std    
  41b6ae:	fcmovbe st,st(4)
  41b6b0:	xor    eax,0xd270e857
  41b6b5:	push   esp
  41b6b6:	add    edx,DWORD PTR [edi-0x1e88ea42]
  41b6bc:	jno    0x41b67e
  41b6be:	ins    DWORD PTR es:[edi],dx
  41b6bf:	out    dx,al
  41b6c0:	cld    
  41b6c1:	call   0xe7fd48b4
  41b6c6:	adc    al,0x33
  41b6c8:	lahf   
  41b6c9:	sbb    dl,cl
  41b6cb:	aad    0x35
  41b6cd:	xchg   al,cl
  41b6cf:	fs dec edi
  41b6d1:	test   edx,ebx
  41b6d3:	gs call 0xfeca:0x59ed01c0
  41b6db:	adc    eax,0xb2220f9a
  41b6e0:	retf   
  41b6e1:	imul   esp,DWORD PTR [ecx],0x12713048
  41b6e7:	add    al,0x7b
  41b6e9:	xlat   BYTE PTR ds:[ebx]
  41b6ea:	mov    ds:0x736211f2,al
  41b6ef:	xchg   ebp,eax
  41b6f0:	xchg   ebp,eax
  41b6f1:	xlat   BYTE PTR ds:[ebx]
  41b6f2:	xchg   esi,eax
  41b6f3:	jae    0x41b68f
  41b6f5:	inc    edx
  41b6f6:	pop    eax
  41b6f7:	sti    
  41b6f8:	jbe    0x41b753
  41b6fa:	sbb    esi,edx
  41b6fc:	dec    edx
  41b6fd:	stc    
  41b6fe:	xor    DWORD PTR [edi+edx*8-0x22],ebx
  41b702:	mov    ds:0xce797d42,eax
  41b707:	xchg   ebx,eax
  41b708:	lahf   
  41b709:	mov    dl,0xd3
  41b70b:	imul   esi,DWORD PTR [ecx],0x8d4d9893
  41b711:	inc    ebp
  41b712:	xchg   ah,ch
  41b714:	dec    edx
  41b715:	aam    0x42
  41b717:	out    dx,al
  41b718:	pop    esp
  41b719:	and    BYTE PTR [esp+edx*8+0x2834a7b7],bh
  41b720:	dec    edi
  41b721:	aas    
  41b722:	inc    ebx
  41b723:	inc    esi
  41b724:	int3   
  41b725:	stc    
  41b726:	cmp    edi,0xe02e7d13
  41b72c:	dec    ebp
  41b72d:	inc    eax
  41b72e:	and    edi,DWORD PTR [eax-0x4b]
  41b731:	sbb    esi,DWORD PTR [ebx-0x221a0a4c]
  41b737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b738:	shr    DWORD PTR [ebx+ecx*1],cl
  41b73b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b73c:	sbb    DWORD PTR [eax],ebx
  41b73e:	loopne 0x41b6ca
  41b740:	(bad)  
  41b741:	mov    ecx,0xd4707499
  41b746:	cld    
  41b747:	call   0x8294:0x51665027
  41b74e:	and    DWORD PTR [esi],ebx
  41b750:	and    DWORD PTR [esp+ebp*1],0xfffffff0
  41b754:	xor    al,0x21
  41b756:	cld    
  41b757:	shr    DWORD PTR [edi],cl
  41b759:	ds in  al,0x53
  41b75c:	mov    edx,0xd967994f
  41b761:	inc    edi
  41b762:	pop    edx
  41b763:	xor    DWORD PTR [edi+0x17],ebp
  41b766:	mov    edi,0xf0674275
  41b76b:	mov    cl,0x9c
  41b76d:	mov    dh,0x7a
  41b76f:	icebp  
  41b770:	mov    BYTE PTR [ebx-0xc549d2b],0x70
  41b777:	and    dl,0x98
  41b77a:	jg     0x41b744
  41b77c:	iret   
  41b77d:	push   0x43
  41b77f:	scas   al,BYTE PTR es:[edi]
  41b780:	scas   eax,DWORD PTR es:[edi]
  41b781:	lods   al,BYTE PTR ds:[esi]
  41b782:	adc    al,0x5f
  41b784:	add    BYTE PTR [edi-0x3c642eff],ch
  41b78a:	mov    bl,ch
  41b78c:	dec    esp
  41b78d:	xor    dh,BYTE PTR [ebx-0x47]
  41b790:	data16 cs cmp al,0x22
  41b794:	sub    ebx,ebp
  41b796:	in     eax,dx
  41b797:	mov    ds:0x5ff3fb33,al
  41b79c:	sbb    BYTE PTR ds:0xef73ac01,al
  41b7a2:	call   DWORD PTR [ebx-0x4002c18f]
  41b7a8:	int3   
  41b7a9:	(bad)  [ebx-0x1b801d15]
  41b7af:	mov    ecx,0x1031aed6
  41b7b4:	cmp    dl,BYTE PTR [eax+edi*1+0x43a4b0dd]
  41b7bb:	pop    edx
  41b7bc:	imul   esi,DWORD PTR [edx+0x564e84f7],0x239fc0c5
  41b7c6:	jmp    0x7493fae4
  41b7cb:	cmp    bl,al
  41b7cd:	sub    al,0xab
  41b7cf:	sbb    DWORD PTR [edx+0x3364cea],eax
  41b7d5:	jmp    0x81a239e2
  41b7da:	and    eax,edx
  41b7dc:	dec    ebx
  41b7dd:	pop    DWORD PTR [edi-0x5c38eec7]
  41b7e3:	xor    BYTE PTR [ebp-0x5c],ch
  41b7e6:	or     ecx,DWORD PTR [ecx+ecx*1+0x7a]
  41b7ea:	das    
  41b7eb:	addr16 sub eax,0x44f6723f
  41b7f1:	jg     0x41b86e
  41b7f3:	lods   al,BYTE PTR ds:[esi]
  41b7f4:	ins    BYTE PTR es:[edi],dx
  41b7f5:	mov    ds:0x7c6d1432,al
  41b7fa:	popa   
  41b7fb:	inc    esp
  41b7fc:	shl    DWORD PTR [ecx-0x22],1
  41b7ff:	shr    DWORD PTR [edi],0x34
  41b802:	push   esp
  41b803:	mov    esp,DWORD PTR [edi-0x107439a8]
  41b809:	adc    eax,DWORD PTR [ebp+0x40e886b2]
  41b80f:	fld    QWORD PTR ds:0xf181eba0
  41b815:	enter  0x245c,0x6c
  41b819:	(bad)  
  41b81a:	adc    al,0xd1
  41b81c:	cli    
  41b81d:	cmp    BYTE PTR [esi-0x7b],dh
  41b820:	mov    ch,0x2
  41b822:	fld    DWORD PTR ds:0x61881264
  41b828:	shl    eax,1
  41b82a:	mov    ebp,DWORD PTR [ecx-0x7aca442f]
  41b830:	and    eax,0xd35ca5fb
  41b835:	push   ecx
  41b836:	sub    dh,BYTE PTR [edx]
  41b838:	or     BYTE PTR [ebx+0x694e78c],al
  41b83e:	xchg   dh,cl
  41b840:	push   edx
  41b841:	int3   
  41b842:	add    BYTE PTR [ecx-0x1b],0x20
  41b846:	or     ecx,DWORD PTR [ebx-0x4e7157a1]
  41b84c:	mov    ecx,esi
  41b84e:	in     eax,dx
  41b84f:	adc    BYTE PTR [ebx],al
  41b851:	cmp    BYTE PTR [ecx+0x21],dh
  41b854:	sbb    DWORD PTR ds:0x7d921bd6,ebp
  41b85a:	mov    DWORD PTR [ebx],0x6744101
  41b860:	jbe    0x41b87f
  41b862:	sub    eax,DWORD PTR [ebx+eax*8-0x6b5d5410]
  41b869:	cli    
  41b86a:	fsubr  st,st(7)
  41b86c:	push   ds
  41b86d:	daa    
  41b86e:	add    eax,0xa53fd8b4
  41b873:	mov    ah,0xd
  41b875:	cs push edi
  41b877:	dec    ecx
  41b878:	retf   0x542a
  41b87b:	js     0x41b81c
  41b87d:	jo     0x41b8f7
  41b87f:	cs push ds
  41b881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b882:	imul   esi,ecx,0x66
  41b885:	ror    BYTE PTR ds:0x84b58dae,1
  41b88b:	inc    ecx
  41b88c:	add    BYTE PTR [ebx],bh
  41b88e:	cmp    al,0x3e
  41b890:	imul   esp,eax,0xffffffe1
  41b893:	loopne 0x41b893
  41b895:	repnz xor al,0xca
  41b898:	mov    eax,ds:0x66cbb4d7
  41b89d:	das    
  41b89e:	mov    ch,0xa8
  41b8a0:	call   0x3708d100
  41b8a5:	dec    edx
  41b8a6:	arpl   WORD PTR [ecx-0x7834d0a9],di
  41b8ac:	push   esp
  41b8ad:	bound  ecx,QWORD PTR [ebx-0x48977d85]
  41b8b3:	xchg   DWORD PTR [edi-0x3],esi
  41b8b6:	inc    ebx
  41b8b7:	push   eax
  41b8b8:	ins    DWORD PTR es:[edi],dx
  41b8b9:	imul   edi,DWORD PTR [ebx+0x61],0x22d2d887
  41b8c0:	outs   dx,BYTE PTR ds:[esi]
  41b8c1:	mov    ds:0x63898386,eax
  41b8c6:	or     DWORD PTR [ebp+ebp*4+0x5b],edx
  41b8ca:	xchg   ebx,eax
  41b8cb:	js     0x41b898
  41b8cd:	cs ja  0x41b91a
  41b8d0:	jo     0x41b915
  41b8d2:	fidivr DWORD PTR [edx+0x4]
  41b8d5:	lock push edi
  41b8d7:	int    0x7f
  41b8d9:	jg     0x41b93b
  41b8db:	daa    
  41b8dc:	ins    DWORD PTR es:[edi],dx
  41b8dd:	mov    ah,0xf7
  41b8df:	mov    esi,0x766febd6
  41b8e4:	and    ecx,DWORD PTR [edx+ebp*2+0x3a]
  41b8e8:	loope  0x41b8ce
  41b8ea:	sub    bh,0xec
  41b8ed:	adc    cl,BYTE PTR [edx+0x37]
  41b8f0:	sbb    dh,dl
  41b8f2:	imul   edx,DWORD PTR es:[edi-0x9],0xa
  41b8f7:	add    DWORD PTR [ebx+eax*1-0x4a196d88],esi
  41b8fe:	loopne 0x41b8e8
  41b900:	mov    dl,0x16
  41b902:	dec    ebx
  41b903:	test   al,0xdf
  41b905:	lahf   
  41b906:	add    al,0xab
  41b908:	mov    edi,0x147a1ebd
  41b90d:	in     al,dx
  41b90e:	lds    ebx,FWORD PTR [ebp+0x417ba3c8]
  41b914:	or     DWORD PTR [esp+edx*2],0xffffff96
  41b918:	mov    ah,0xc4
  41b91a:	mov    WORD PTR [eax],fs
  41b91c:	cmp    al,0x42
  41b91e:	fldcw  WORD PTR [esi-0x1a]
  41b921:	ins    BYTE PTR es:[edi],dx
  41b922:	jns    0x41b8f7
  41b924:	jmp    0xf032192f
  41b929:	jne    0x41b8c4
  41b92b:	pop    ebx
  41b92c:	fsub   QWORD PTR [edi+0x7]
  41b92f:	lods   eax,DWORD PTR ds:[esi]
  41b930:	sbb    DWORD PTR [edx],ebp
  41b932:	push   ebp
  41b933:	lahf   
  41b934:	out    dx,al
  41b935:	call   0x718c00b8
  41b93a:	outs   dx,DWORD PTR ds:[esi]
  41b93b:	fadd   QWORD PTR [ebx+ecx*4]
  41b93e:	inc    ecx
  41b93f:	xchg   edx,eax
  41b940:	hlt    
  41b941:	jl     0x41b902
  41b943:	data16 test dh,al
  41b946:	(bad)  
  41b947:	aaa    
  41b948:	cdq    
  41b949:	push   esi
  41b94a:	xor    al,0x7
  41b94c:	adc    edi,edx
  41b94e:	mov    cl,0xae
  41b950:	mov    esp,0xb501cdd6
  41b955:	mov    ds:0x6c66a719,eax
  41b95a:	xor    DWORD PTR [ecx-0x27ba270e],edx
  41b960:	cwde   
  41b961:	fistp  DWORD PTR [ebp+0xe]
  41b964:	push   edi
  41b965:	test   BYTE PTR [ebx],dh
  41b967:	inc    esi
  41b968:	test   BYTE PTR [ebx],bl
  41b96a:	ins    BYTE PTR es:[edi],dx
  41b96b:	mov    al,0x1a
  41b96d:	pop    edi
  41b96e:	adc    al,0xbc
  41b970:	mov    DWORD PTR [edx+0xfff7e4a],ecx
  41b976:	fprem  
  41b978:	pusha  
  41b979:	ficomp DWORD PTR [ebp+0xf]
  41b97c:	sti    
  41b97d:	cld    
  41b97e:	pop    ecx
  41b97f:	sbb    eax,0xa66fd37e
  41b984:	and    esi,DWORD PTR ds:0x7f7b6dac
  41b98a:	mov    BYTE PTR [ebp+0x59],ch
  41b98d:	int    0x8c
  41b98f:	(bad)  
  41b990:	out    0x98,al
  41b992:	ror    BYTE PTR [edx+ebx*4+0x54],0xfc
  41b997:	jge    0x41b926
  41b999:	ret    
  41b99a:	adc    eax,0x417289bd
  41b99f:	adc    BYTE PTR [edi-0x4d],dl
  41b9a2:	mov    ebp,0x3e54d602
  41b9a7:	and    dl,BYTE PTR [ecx+0x7652ef89]
  41b9ad:	in     al,0x5e
  41b9af:	xchg   esi,eax
  41b9b0:	out    0x91,al
  41b9b2:	mov    ah,0xc4
  41b9b4:	clc    
  41b9b5:	sbb    DWORD PTR [eax+0x1a2d33cb],ecx
  41b9bb:	adc    al,0xd9
  41b9bd:	and    ebp,DWORD PTR [ecx-0x5f]
  41b9c0:	call   0x664d688e
  41b9c5:	cwde   
  41b9c6:	(bad)  
  41b9c7:	jb     0x41b967
  41b9c9:	mov    dh,0x49
  41b9cb:	jb     0x41ba1c
  41b9cd:	rcl    BYTE PTR [ecx+0x1fff5cb9],0x5
  41b9d4:	mov    ebp,0xee9f2786
  41b9d9:	cmc    
  41b9da:	ret    
  41b9db:	mov    ebp,0x561b2325
  41b9e0:	pop    esi
  41b9e1:	fild   QWORD PTR [edi+0x78718039]
  41b9e7:	stos   BYTE PTR es:[edi],al
  41b9e8:	sub    eax,0xfa5977e5
  41b9ed:	sub    BYTE PTR [ebx-0x30383426],bh
  41b9f3:	push   esi
  41b9f4:	out    dx,eax
  41b9f5:	add    BYTE PTR [edx+0xb4ae2ba],ah
  41b9fb:	sbb    eax,0xbdacc65
  41ba00:	loopne 0x41ba6a
  41ba02:	int    0xa7
  41ba04:	lods   al,BYTE PTR ds:[esi]
  41ba05:	test   eax,0xd425dc13
  41ba0a:	inc    esp
  41ba0b:	loope  0x41b9b7
  41ba0d:	pop    edi
  41ba0e:	int    0x96
  41ba10:	clc    
  41ba11:	pop    ss
  41ba12:	inc    ebp
  41ba13:	sub    al,0x63
  41ba15:	shr    BYTE PTR [ebp-0x586cc2ed],0x46
  41ba1c:	aam    0x86
  41ba1e:	inc    edx
  41ba1f:	fldcw  WORD PTR [edx]
  41ba21:	xchg   BYTE PTR [esi+0x3413daa0],dl
  41ba27:	add    eax,0xdb427258
  41ba2c:	arpl   WORD PTR [esi-0x7eb1a522],cx
  41ba32:	jbe    0x41bab0
  41ba34:	xor    al,0x8f
  41ba36:	inc    edi
  41ba37:	iret   
  41ba38:	mov    ds:0x17f8d1e5,eax
  41ba3d:	xchg   esp,eax
  41ba3e:	popa   
  41ba3f:	iret   
  41ba40:	jo     0x41ba90
  41ba42:	dec    edi
  41ba43:	fadd   DWORD PTR [eax]
  41ba45:	repz shl bh,0x9d
  41ba49:	mov    ebp,0xba68cb8c
  41ba4e:	call   0x193a:0x9657ac80
  41ba55:	mov    WORD PTR [edi],es
  41ba57:	je     0x41ba46
  41ba59:	stos   BYTE PTR es:[edi],al
  41ba5a:	div    DWORD PTR [edx-0x6fb9fa84]
  41ba60:	idiv   DWORD PTR [ebp-0x7dfdfb8e]
  41ba66:	jge    0x41ba2b
  41ba68:	enter  0xdbf4,0xe1
  41ba6c:	out    0xa1,al
  41ba6e:	(bad)  
  41ba6f:	std    
  41ba70:	outs   dx,BYTE PTR ds:[esi]
  41ba71:	dec    eax
  41ba72:	fstp   TBYTE PTR [ebp-0x24]
  41ba75:	addr16 mov eax,0x549d69c7
  41ba7b:	sti    
  41ba7c:	data16 daa 
  41ba7e:	rcl    BYTE PTR [ecx+0x7b],1
  41ba81:	jnp    0x41ba06
  41ba83:	jle    0x41baaa
  41ba85:	xchg   BYTE PTR [esi-0x1b],bl
  41ba88:	lock mov esp,0x457a1190
  41ba8e:	or     ebp,DWORD PTR ds:0x6a4ae73b
  41ba94:	ins    BYTE PTR es:[edi],dx
  41ba95:	inc    edi
  41ba96:	inc    esi
  41ba97:	pushf  
  41ba98:	outs   dx,BYTE PTR ds:[esi]
  41ba99:	add    al,0x26
  41ba9b:	hlt    
  41ba9c:	jle    0x41baed
  41ba9e:	inc    esp
  41ba9f:	pop    eax
  41baa0:	and    bh,ah
  41baa2:	gs jo  0x41ba95
  41baa5:	dec    esp
  41baa6:	sti    
  41baa7:	dec    esi
  41baa8:	sub    eax,0x3a41f73b
  41baad:	int3   
  41baae:	push   ebx
  41baaf:	fcom   QWORD PTR [ecx]
  41bab1:	popf   
  41bab2:	mov    cl,0x11
  41bab4:	push   ebp
  41bab5:	inc    ecx
  41bab6:	mov    esi,0x7434954c
  41babb:	fistp  DWORD PTR [edi+0x5e]
  41babe:	xchg   ebx,eax
  41babf:	inc    esi
  41bac0:	lds    ebx,FWORD PTR [edi-0x61]
  41bac3:	rcr    DWORD PTR [edx],cl
  41bac5:	ret    
  41bac6:	jo     0x41ba88
  41bac8:	(bad)  
  41bac9:	inc    DWORD PTR [eax*2-0x5337549d]
  41bad0:	pop    es
  41bad1:	repz fcomp st(4)
  41bad4:	test   BYTE PTR [ecx+edx*2],dl
  41bad7:	cmp    dh,0x5f
  41bada:	cdq    
  41badb:	retf   0xa3a1
  41bade:	xor    ch,al
  41bae0:	stos   BYTE PTR es:[edi],al
  41bae1:	jle    0x41ba72
  41bae3:	sbb    al,0xa7
  41bae5:	sbb    DWORD PTR [ebx],esi
  41bae7:	leave  
  41bae8:	dec    esp
  41bae9:	or     dh,BYTE PTR [ebx-0x31f5a47]
  41baef:	mov    al,ds:0x1b6f6250
  41baf4:	add    ah,ah
  41baf6:	mov    ecx,0xea641522
  41bafb:	and    BYTE PTR [eax+0x8],ah
  41bafe:	call   0x1aedc8c7
  41bb03:	pop    es
  41bb04:	das    
  41bb05:	lahf   
  41bb06:	ins    BYTE PTR es:[edi],dx
  41bb07:	jle    0x41bae5
  41bb09:	push   ebp
  41bb0a:	inc    edi
  41bb0b:	sbb    eax,0x43d25921
  41bb10:	ds cs jp 0x41bb67
  41bb14:	aad    0x3e
  41bb16:	fld    st(4)
  41bb18:	ret    
  41bb19:	sub    eax,0x51
  41bb1c:	jecxz  0x41bb0b
  41bb1e:	add    ecx,DWORD PTR [esp+ecx*4]
  41bb21:	out    0x5c,al
  41bb23:	xor    ch,al
  41bb25:	mov    eax,0xb8b151b
  41bb2a:	dec    edi
  41bb2b:	xchg   ebp,eax
  41bb2c:	ror    DWORD PTR [esi+eiz*2+0x2a2918fe],1
  41bb33:	(bad)  
  41bb34:	fdivr  DWORD PTR [esi-0xf]
  41bb37:	xchg   esp,eax
  41bb38:	xor    bh,al
  41bb3a:	das    
  41bb3b:	push   ebx
  41bb3c:	mov    al,BYTE PTR [ebp-0x29]
  41bb3f:	loope  0x41bb2f
  41bb41:	in     al,0x17
  41bb43:	mov    ah,0x9a
  41bb45:	leave  
  41bb46:	inc    edi
  41bb47:	addr16 ret 
  41bb49:	rol    BYTE PTR [ebx-0xb102aa2],cl
  41bb4f:	fcom   QWORD PTR [ecx+ebp*4-0x6e]
  41bb53:	dec    edx
  41bb54:	pop    ebp
  41bb55:	std    
  41bb56:	or     eax,0xeaba602b
  41bb5b:	jbe    0x41bb07
  41bb5d:	sub    dl,BYTE PTR [edi+0x2bc2912c]
  41bb63:	pop    ds
  41bb64:	mov    ebx,0xc2bbda0c
  41bb69:	mov    edi,0x3fb1447f
  41bb6e:	dec    ebp
  41bb6f:	add    DWORD PTR [eax],0xffffff86
  41bb72:	in     al,0x50
  41bb74:	dec    esp
  41bb75:	jb     0x41bb9d
  41bb77:	ffreep st(5)
  41bb79:	lahf   
  41bb7a:	dec    edi
  41bb7b:	fnstsw WORD PTR [eax+ebp*1-0x54]
  41bb7f:	cld    
  41bb80:	stc    
  41bb81:	xor    eax,0xd3501c95
  41bb86:	sbb    eax,0x515bb51d
  41bb8b:	mov    edx,0x5b3071b4
  41bb90:	aam    0x3a
  41bb92:	scas   al,BYTE PTR es:[edi]
  41bb93:	retf   
  41bb94:	inc    edx
  41bb95:	adc    ecx,ebp
  41bb97:	pop    esi
  41bb98:	fmul   QWORD PTR [esi+0x75db7d44]
  41bb9e:	arpl   WORD PTR [edi],sp
  41bba0:	xchg   ecx,eax
  41bba1:	xchg   ebx,eax
  41bba2:	jle    0x41bbd4
  41bba4:	adc    esp,DWORD PTR [esi-0x4da3778a]
  41bbaa:	mov    esp,0xa37b02ab
  41bbaf:	leave  
  41bbb0:	mov    ds:0x6a724487,al
  41bbb5:	out    0x55,eax
  41bbb7:	out    dx,al
  41bbb8:	mov    esi,0x8f0369c3
  41bbbd:	out    dx,eax
  41bbbe:	mov    bh,0x8d
  41bbc0:	sbb    esi,DWORD PTR [edi-0x71]
  41bbc3:	dec    edx
  41bbc4:	inc    ebx
  41bbc5:	mov    DWORD PTR [edx-0x65],edi
  41bbc8:	test   eax,0xd8cfb87c
  41bbcd:	push   ecx
  41bbce:	(bad)
  41bbd2:	xchg   esi,eax
  41bbd3:	mov    WORD PTR [ebx+0x19],?
  41bbd6:	cli    
  41bbd7:	shl    BYTE PTR [esi+ecx*2-0xb06b53f],1
  41bbde:	xchg   edi,eax
  41bbdf:	test   DWORD PTR [edi],esi
  41bbe1:	call   0xf0c30db4
  41bbe6:	outs   dx,DWORD PTR ds:[esi]
  41bbe7:	jnp    0x41bc12
  41bbe9:	sbb    eax,DWORD PTR [ebx]
  41bbeb:	jg     0x41bc53
  41bbed:	js     0x41bbb1
  41bbef:	mov    fs,esi
  41bbf1:	(bad)  
  41bbf2:	mov    edi,0x20376ff7
  41bbf8:	mov    edx,0x406a8998
  41bbfd:	add    DWORD PTR [eax-0x3defe60b],esi
  41bc03:	or     bl,al
  41bc05:	popa   
  41bc06:	bound  esp,QWORD PTR [edi]
  41bc08:	and    cl,dh
  41bc0a:	mov    esi,0x3b50a19c
  41bc0f:	pop    esp
  41bc10:	ror    ecx,0x9a
  41bc13:	fld    TBYTE PTR [eax+0x74]
  41bc16:	mov    dh,0x72
  41bc18:	gs sub al,0xaf
  41bc1b:	xlat   BYTE PTR ds:[ebx]
  41bc1c:	inc    edx
  41bc1d:	es xor eax,0x1d95b457
  41bc23:	outs   dx,BYTE PTR ds:[esi]
  41bc24:	mov    esi,0x3d601f28
  41bc29:	ins    BYTE PTR es:[edi],dx
  41bc2a:	repz bound ecx,QWORD PTR [esi]
  41bc2d:	loop   0x41bc1f
  41bc2f:	ins    BYTE PTR es:[edi],dx
  41bc30:	xchg   esp,eax
  41bc31:	push   edi
  41bc32:	imul   edi,DWORD PTR [eax+edi*4-0x40],0xf4b67a0b
  41bc3a:	sub    ebx,edx
  41bc3c:	mov    bl,0x7a
  41bc3e:	lahf   
  41bc3f:	dec    ebx
  41bc40:	aas    
  41bc41:	sbb    BYTE PTR [eax+0x21b08f93],cl
  41bc47:	mov    ?,WORD PTR [ebx]
  41bc49:	xor    al,0x61
  41bc4b:	dec    esp
  41bc4c:	and    eax,0xc4280e4d
  41bc51:	xchg   ebp,eax
  41bc52:	adc    al,0x6f
  41bc54:	inc    ecx
  41bc55:	push   ds
  41bc56:	test   al,0x38
  41bc58:	paddsb mm7,mm0
  41bc5b:	aad    0x5
  41bc5d:	repz ror dh,cl
  41bc60:	int3   
  41bc61:	dec    edi
  41bc62:	mov    edi,0xa0f52f6f
  41bc67:	imul   edi,DWORD PTR [ecx-0x2e],0xffffff86
  41bc6b:	je     0x41bcb1
  41bc6d:	push   ebp
  41bc6e:	xchg   edx,eax
  41bc6f:	jge    0x41bc1b
  41bc71:	cmp    DWORD PTR [esi+ebx*4],esi
  41bc74:	pop    ds
  41bc75:	mov    eax,fs
  41bc77:	ins    DWORD PTR es:[edi],dx
  41bc78:	push   ecx
  41bc79:	enter  0x17f4,0xc7
  41bc7d:	push   edi
  41bc7e:	add    al,0x3f
  41bc80:	pop    edi
  41bc81:	add    al,0x36
  41bc83:	dec    eax
  41bc84:	mov    ebx,0xbde59b4
  41bc89:	sbb    BYTE PTR ds:0x7ecf6a36,ah
  41bc8f:	aam    0x83
  41bc91:	jg     0x41bcc0
  41bc93:	cmp    al,0x1a
  41bc95:	int3   
  41bc96:	mov    eax,ds:0x7fda1b5d
  41bc9b:	mov    cl,0xda
  41bc9d:	cmp    eax,0x3f6e1dc6
  41bca2:	enterw 0x6f06,0xd0
  41bca7:	mov    dl,0xb8
  41bca9:	dec    BYTE PTR [ecx+edi*1-0x1619ab32]
  41bcb0:	or     BYTE PTR ds:0x89209e51,bl
  41bcb6:	adc    BYTE PTR [edi+0x49247084],0x6f
  41bcbd:	pop    ebp
  41bcbe:	pop    esi
  41bcbf:	xchg   edi,eax
  41bcc0:	ficomp DWORD PTR [ecx]
  41bcc2:	sub    eax,0xa81bb625
  41bcc7:	cli    
  41bcc8:	mov    bh,0x99
  41bcca:	icebp  
  41bccb:	xchg   esi,eax
  41bccc:	idiv   ch
  41bcce:	in     eax,dx
  41bccf:	dec    ebx
  41bcd0:	(bad)  
  41bcd2:	mov    esp,0x4a55d93e
  41bcd7:	pop    esp
  41bcd8:	int3   
  41bcd9:	shr    DWORD PTR [edi-0x79],1
  41bcdc:	inc    esi
  41bcdd:	es push 0xe891341a
  41bce3:	(bad)  
  41bce4:	lock out 0x23,al
  41bce7:	(bad)  
  41bce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bce9:	inc    ebp
  41bcea:	pop    esp
  41bceb:	sbb    BYTE PTR [edi-0x50],0xd9
  41bcef:	lahf   
  41bcf0:	in     al,0xde
  41bcf2:	push   ss
  41bcf3:	cmp    eax,0xfa82dc34
  41bcf8:	push   esp
  41bcf9:	xchg   esp,eax
  41bcfa:	fcomp  DWORD PTR [esi-0x6f02deae]
  41bd00:	in     al,dx
  41bd01:	iret   
  41bd02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd03:	xchg   edx,eax
  41bd04:	rcr    BYTE PTR [edx],1
  41bd06:	and    al,0xd7
  41bd08:	jns    0x41bd2e
  41bd0a:	xor    dl,BYTE PTR [edi-0x63]
  41bd0d:	aam    0xfa
  41bd0f:	sub    ch,al
  41bd11:	outs   dx,BYTE PTR ds:[esi]
  41bd12:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41bd14:	push   ebx
  41bd15:	gs or  eax,0xa12bb0da
  41bd1b:	test   cl,ch
  41bd1d:	and    al,0x7a
  41bd1f:	cmp    BYTE PTR [esi],0x20
  41bd22:	loope  0x41bd0f
  41bd24:	xor    cl,ah
  41bd26:	popf   
  41bd27:	dec    eax
  41bd28:	inc    eax
  41bd29:	jmp    0x133d:0x38743cd0
  41bd30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd31:	mov    BYTE PTR [ebp+0x32],ch
  41bd34:	sub    al,0xef
  41bd36:	add    eax,0x97676ea2
  41bd3b:	pop    edx
  41bd3c:	jle    0x41bda3
  41bd3e:	pop    ss
  41bd3f:	cmp    eax,DWORD PTR [ebp+0x2e]
  41bd42:	ja     0x41bd20
  41bd44:	pop    edx
  41bd45:	test   edi,edi
  41bd47:	jge    0x41bce6
  41bd49:	jge    0x41bcf6
  41bd4b:	pop    esp
  41bd4c:	inc    eax
  41bd4d:	jmp    0xbbaa31d
  41bd52:	fstp   TBYTE PTR [eax]
  41bd54:	pop    ss
  41bd55:	dec    edx
  41bd56:	jmp    0x41bd6d
  41bd58:	(bad)  
  41bd59:	dec    ecx
  41bd5a:	push   0x15
  41bd5c:	setns  al
  41bd5f:	pop    ecx
  41bd60:	and    cl,bh
  41bd62:	cmp    ecx,esi
  41bd64:	int    0xcb
  41bd66:	outs   dx,DWORD PTR ds:[esi]
  41bd67:	outs   dx,BYTE PTR ds:[esi]
  41bd68:	imul   ebx,DWORD PTR ds:0xc9aab52,0x51
  41bd6f:	xor    eax,0x59265edd
  41bd74:	pop    ebp
  41bd75:	mov    dh,0x66
  41bd77:	sbb    ecx,DWORD PTR [ecx]
  41bd79:	scas   eax,DWORD PTR es:[edi]
  41bd7a:	popf   
  41bd7b:	mov    ebx,DWORD PTR ds:0x285e9641
  41bd81:	jg     0x41bd3c
  41bd83:	nop
  41bd84:	xchg   esi,eax
  41bd85:	and    al,0x48
  41bd87:	jns    0x41bd77
  41bd89:	inc    edx
  41bd8a:	je     0x41bdcf
  41bd8c:	in     al,0x40
  41bd8e:	or     ebx,DWORD PTR [edi-0x711ade34]
  41bd94:	popf   
  41bd95:	mov    ds:0x7e5126d7,eax
  41bd9a:	call   DWORD PTR [edx-0x41]
  41bd9d:	pop    ecx
  41bd9e:	shl    BYTE PTR [edi],cl
  41bda0:	push   ebx
  41bda1:	push   es
  41bda2:	dec    ebp
  41bda3:	rol    dl,0xa
  41bda6:	ret    
  41bda7:	ja     0x41bd82
  41bda9:	div    BYTE PTR [ecx]
  41bdab:	mov    bh,0x35
  41bdad:	push   cs
  41bdae:	aad    0x2c
  41bdb0:	rcl    esi,cl
  41bdb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdb3:	test   eax,0x49f15d24
  41bdb8:	gs xor al,0xf3
  41bdbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdbc:	or     DWORD PTR [edx+0x51],esi
  41bdbf:	test   DWORD PTR [ecx-0x47],ebx
  41bdc2:	lea    esi,ds:[edx+0x2203b93b]
  41bdc9:	and    bh,al
  41bdcb:	scas   al,BYTE PTR es:[edi]
  41bdcc:	dec    esi
  41bdcd:	in     eax,dx
  41bdce:	xchg   esp,eax
  41bdcf:	dec    edx
  41bdd0:	pop    edi
  41bdd1:	imul   esp,DWORD PTR [ebx+0x442ec6db],0xe1cc009a
  41bddb:	arpl   WORD PTR [ebx+edx*1],ax
  41bdde:	add    ebp,ebp
  41bde0:	outs   dx,DWORD PTR ds:[esi]
  41bde1:	rcl    BYTE PTR [ebp-0x74],cl
  41bde4:	jge    0x41be29
  41bde6:	shr    DWORD PTR [edi+0x5a0f123b],0x13
  41bded:	xchg   esp,eax
  41bdee:	xchg   ebx,eax
  41bdef:	in     al,dx
  41bdf0:	jg     0x41bda8
  41bdf2:	push   edi
  41bdf3:	jl     0x41bd8e
  41bdf5:	test   dh,ah
  41bdf7:	hlt    
  41bdf8:	push   edi
  41bdf9:	pushf  
  41bdfa:	pop    ebp
  41bdfb:	mov    esp,0x371cfabf
  41be00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be01:	xor    eax,0x4d516709
  41be06:	mov    ecx,0x3cefd230
  41be0b:	pop    bx
  41be0d:	xor    DWORD PTR [ecx+0x53],esi
  41be10:	sub    DWORD PTR [ebp+0x180d566b],esp
  41be16:	fadd   QWORD PTR [eax-0x45]
  41be19:	lods   eax,DWORD PTR ds:[esi]
  41be1a:	cld    
  41be1b:	pop    ebp
  41be1c:	xor    DWORD PTR [ecx],ebp
  41be1e:	pop    ds
  41be1f:	jne    0x41be42
  41be21:	loope  0x41be95
  41be23:	in     al,0x5a
  41be25:	into   
  41be26:	pop    cx
  41be28:	xlat   BYTE PTR ds:[ebx]
  41be29:	fisubr DWORD PTR [ebp-0x6f]
  41be2c:	and    DWORD PTR [esi+edx*4+0x2a],eax
  41be30:	(bad)  
  41be31:	(bad)  [edx-0x60b03765]
  41be37:	or     eax,0x69dbe611
  41be3c:	daa    
  41be3d:	mov    ds:0x42c132d4,al
  41be42:	imul   ebp,DWORD PTR [ecx-0x4e],0xe
  41be46:	pop    edi
  41be47:	sbb    dl,BYTE PTR ds:0x8a46ab10
  41be4d:	ret    
  41be4e:	(bad)  
  41be4f:	ds pushf 
  41be51:	enter  0xc450,0xdb
  41be55:	ins    BYTE PTR es:[edi],dx
  41be56:	sbb    esp,DWORD PTR [ebx]
  41be58:	push   edx
  41be59:	fisubr DWORD PTR ds:0x25d6d632
  41be5f:	sub    BYTE PTR [edi-0x22],dl
  41be62:	inc    eax
  41be63:	push   ecx
  41be64:	int3   
  41be65:	(bad)  
  41be66:	mov    esp,0x10fb1c00
  41be6b:	inc    esp
  41be6c:	out    0x8,al
  41be6e:	add    DWORD PTR [ebp-0x3f34729d],esp
  41be74:	int    0x7d
  41be76:	xor    BYTE PTR [esi+edi*8-0x1ebdcd84],ch
  41be7d:	inc    esp
  41be7e:	sub    DWORD PTR [esi+ebx*1],eax
  41be81:	loopne 0x41beaf
  41be83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be84:	jp     0x41be83
  41be86:	or     DWORD PTR [esi],eax
  41be88:	cmp    edx,esi
  41be8a:	push   es
  41be8b:	lods   al,BYTE PTR ds:[esi]
  41be8c:	inc    eax
  41be8d:	std    
  41be8e:	sahf   
  41be8f:	jo     0x41be1f
  41be91:	fist   WORD PTR [edx-0x78]
  41be94:	jnp    0x41be91
  41be96:	jg     0x41be59
  41be98:	lods   eax,DWORD PTR ds:[esi]
  41be99:	add    dl,BYTE PTR [ebx]
  41be9b:	fmul   QWORD PTR [ecx]
  41be9d:	js     0x41be74
  41be9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bea0:	test   DWORD PTR [edx+0x625d7b92],edx
  41bea6:	push   ecx
  41bea7:	mov    WORD PTR [esi+0x4b],es
  41beaa:	sar    DWORD PTR [eax],cl
  41beac:	imul   esi,DWORD PTR [ebx],0x87eef7ad
  41beb2:	or     eax,0xfaa4bf70
  41beb7:	int3   
  41beb8:	push   ecx
  41beb9:	mov    ecx,0xb185cf95
  41bebe:	inc    edx
  41bebf:	pushf  
  41bec0:	retf   0x8627
  41bec3:	jb     0x41bf38
  41bec5:	jge    0x41bf1d
  41bec7:	ret    
  41bec8:	lods   al,BYTE PTR ds:[esi]
  41bec9:	mov    ds:0xc109af93,eax
  41bece:	or     al,0x3a
  41bed0:	data16 (bad) 
  41bed2:	std    
  41bed3:	push   ebx
  41bed4:	jmp    0x41be94
  41bed6:	pop    ss
  41bed7:	mul    BYTE PTR [edx+0x6da598f]
  41bedd:	pop    edi
  41bede:	dec    ebx
  41bedf:	popa   
  41bee0:	ss imul ebx,ebp,0xffffffcd
  41bee4:	dec    esi
  41bee5:	inc    ebx
  41bee6:	out    0x4e,eax
  41bee8:	bound  eax,QWORD PTR [edx]
  41beea:	jnp    0x41bf36
  41beec:	mov    esi,edi
  41beee:	pop    ecx
  41beef:	mov    ch,dl
  41bef1:	push   cs
  41bef2:	xor    al,0xf5
  41bef4:	dec    eax
  41bef5:	daa    
  41bef6:	inc    esi
  41bef7:	mov    ds:0xda719b6,eax
  41befc:	mov    eax,0xc404ed15
  41bf01:	add    ecx,esp
  41bf03:	jo     0x41bf46
  41bf05:	push   ebp
  41bf06:	rol    DWORD PTR [ecx+0x6e],cl
  41bf09:	outs   dx,BYTE PTR ds:[esi]
  41bf0a:	sub    DWORD PTR [ebx+0x787f865],0x64
  41bf11:	pop    esi
  41bf12:	in     eax,dx
  41bf13:	mov    bh,0x76
  41bf15:	dec    edi
  41bf16:	xor    eax,0xf695c88f
  41bf1b:	dec    ebx
  41bf1c:	add    DWORD PTR [ecx],eax
  41bf1e:	mov    al,0xb2
  41bf20:	mov    esp,DWORD PTR [ebp-0x44305da9]
  41bf26:	sub    ah,bh
  41bf28:	shl    al,cl
  41bf2a:	inc    edx
  41bf2b:	xor    BYTE PTR [esi],0x22
  41bf2e:	loop   0x41bf1b
  41bf30:	sbb    al,0x66
  41bf32:	and    eax,0xaa66a2e4
  41bf37:	stos   DWORD PTR es:[edi],eax
  41bf38:	and    DWORD PTR [ecx-0x2],eax
  41bf3b:	lock pop edx
  41bf3d:	or     DWORD PTR [ebp+0x27],ecx
  41bf40:	inc    esp
  41bf41:	push   edi
  41bf42:	lods   eax,DWORD PTR ds:[esi]
  41bf43:	sub    bh,BYTE PTR [ebx-0x157d2601]
  41bf49:	xchg   esp,eax
  41bf4a:	outs   dx,BYTE PTR ds:[esi]
  41bf4b:	push   esi
  41bf4c:	imul   esi,DWORD PTR [esi+0x2c1ec72e],0xffffffcf
  41bf53:	inc    edx
  41bf54:	aas    
  41bf55:	cmp    al,0x7f
  41bf57:	ret    
  41bf58:	rcl    BYTE PTR [esi],0x15
  41bf5b:	mov    esi,0xe64b8b19
  41bf60:	adc    DWORD PTR [ebp-0x61],edx
  41bf63:	sub    esi,DWORD PTR [esi*1-0x4ee48611]
  41bf6a:	jge    0x41bfe9
  41bf6c:	xor    BYTE PTR [edx],0xf4
  41bf6f:	pop    ecx
  41bf70:	sbb    al,0xb6
  41bf72:	pusha  
  41bf73:	cmp    al,BYTE PTR [esi]
  41bf75:	pushf  
  41bf76:	ror    bh,cl
  41bf78:	out    dx,eax
  41bf79:	push   esp
  41bf7a:	fs jg  0x41bf15
  41bf7d:	mov    BYTE PTR [edi-0x1863b0c8],dl
  41bf83:	pop    ecx
  41bf84:	add    edi,DWORD PTR [eax]
  41bf86:	pop    esi
  41bf87:	inc    ebx
  41bf88:	int3   
  41bf89:	push   eax
  41bf8a:	dec    esp
  41bf8b:	arpl   WORD PTR [edx+0x74],sp
  41bf8e:	push   ecx
  41bf8f:	stos   DWORD PTR es:[edi],eax
  41bf90:	mov    edi,0xb9d0ecde
  41bf95:	pusha  
  41bf96:	xor    DWORD PTR [edx],ebx
  41bf98:	inc    esp
  41bf99:	jge    0x41bf43
  41bf9b:	scas   eax,DWORD PTR es:[edi]
  41bf9c:	push   eax
  41bf9d:	or     edx,DWORD PTR [ebx]
  41bf9f:	outs   dx,BYTE PTR ds:[esi]
  41bfa0:	mov    ah,0x19
  41bfa2:	aad    0x18
  41bfa4:	sub    DWORD PTR [esp+edx*4],ecx
  41bfa7:	pop    ds
  41bfa8:	mov    ah,0x15
  41bfaa:	sub    eax,DWORD PTR [ebp+0x43]
  41bfad:	aas    
  41bfae:	mov    esi,0x5b196e1a
  41bfb3:	je     0x41c00a
  41bfb5:	pop    esp
  41bfb6:	and    DWORD PTR [eax+0x74301e1e],edi
  41bfbc:	push   esi
  41bfbd:	add    DWORD PTR [esi+0x6a9c2be4],ebx
  41bfc3:	aas    
  41bfc4:	popa   
  41bfc5:	gs mov bl,0xa
  41bfc8:	push   es
  41bfc9:	mov    bl,0xc2
  41bfcb:	jl     0x41c040
  41bfcd:	mov    es,WORD PTR [ebp-0x50]
  41bfd0:	lods   eax,DWORD PTR ds:[esi]
  41bfd1:	test   BYTE PTR [edi+0x4a1b7326],al
  41bfd7:	stc    
  41bfd8:	(bad)  
  41bfd9:	in     al,dx
  41bfda:	fnstcw WORD PTR [edx+0x78]
  41bfdd:	sub    esi,DWORD PTR [ecx+ebp*4-0x31f7faca]
  41bfe4:	jns    0x41bff6
  41bfe6:	mov    eax,0x9db89f61
  41bfeb:	rol    BYTE PTR [esi],1
  41bfed:	mov    ds:0xece798b8,al
  41bff2:	les    esi,FWORD PTR [ecx+0x75]
  41bff5:	cdq    
  41bff6:	jmp    0x41bfdb
  41bff8:	es dec ebx
  41bffa:	rcr    BYTE PTR [ebp-0x29413cec],0x2f
  41c001:	cmp    edx,esp
  41c003:	ret    0x9647
  41c006:	xchg   esp,eax
  41c007:	cmp    BYTE PTR [ecx+0x549bfcee],al
  41c00d:	outs   dx,DWORD PTR ds:[esi]
  41c00e:	test   DWORD PTR [esi-0x59389d42],esp
  41c014:	repz sub al,0x1f
  41c017:	mov    BYTE PTR [ecx-0x28718398],ch
  41c01d:	dec    edx
  41c01e:	inc    edi
  41c01f:	aad    0xfb
  41c021:	cli    
  41c022:	jbe    0x41bff4
  41c024:	cmp    eax,0x5002919a
  41c029:	inc    eax
  41c02a:	fisubr WORD PTR [edi]
  41c02c:	push   esp
  41c02d:	xlat   BYTE PTR ds:[ebx]
  41c02e:	mov    ebp,?
  41c030:	xor    eax,0x81f6ec4f
  41c035:	retf   0xd4d0
  41c038:	ins    DWORD PTR es:[edi],dx
  41c039:	adc    eax,0x56bed5
  41c03e:	xor    al,0xdc
  41c040:	lods   eax,DWORD PTR ds:[esi]
  41c041:	xor    BYTE PTR [edi-0x7ef2b883],bl
  41c047:	mov    ch,0x67
  41c049:	lds    ebx,FWORD PTR [ecx+0x31ccd878]
  41c04f:	adc    BYTE PTR [edx+eax*8+0x6],0xa0
  41c054:	jae    0x41c0b5
  41c056:	push   edi
  41c057:	dec    edi
  41c058:	rol    BYTE PTR [eax+0x7d],1
  41c05b:	mov    edi,0xe5a9e753
  41c060:	std    
  41c061:	jbe    0x41bfe4
  41c063:	or     al,0x2b
  41c065:	mov    ch,BYTE PTR [edx+0xf730301]
  41c06b:	fnsave [edx]
  41c06d:	xchg   esi,eax
  41c06e:	dec    esp
  41c06f:	add    al,0x41
  41c071:	cwde   
  41c072:	test   eax,0xbb21ec72
  41c077:	arpl   WORD PTR [ecx],cx
  41c079:	or     bh,bl
  41c07b:	dec    esp
  41c07c:	pop    ebx
  41c07d:	test   eax,0xb4b0a4b2
  41c082:	or     DWORD PTR [eax],0xf1fe5c8b
  41c088:	std    
  41c089:	jo     0x41c01b
  41c08b:	cmp    eax,DWORD PTR [esi-0x77]
  41c08e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c08f:	xor    BYTE PTR [ebx],0x4d
  41c092:	sub    cl,ch
  41c094:	jp     0x41c07c
  41c096:	xor    DWORD PTR [eax+0x2be0cf1f],esp
  41c09c:	scas   al,BYTE PTR es:[edi]
  41c09d:	fild   WORD PTR [ecx-0x43]
  41c0a0:	sub    eax,0x874c4876
  41c0a5:	jnp    0x41c062
  41c0a7:	pop    ecx
  41c0a8:	dec    sp
  41c0aa:	pop    esp
  41c0ab:	push   ds
  41c0ac:	xor    esi,DWORD PTR [esi-0x1fff35c]
  41c0b2:	xchg   ebx,eax
  41c0b3:	jmp    0x41c103
  41c0b5:	jmp    0x41c0ab
  41c0b7:	push   DWORD PTR [esp+edx*4+0x5fd6c839]
  41c0be:	sub    cl,ah
  41c0c0:	nop
  41c0c1:	adc    al,0xc0
  41c0c3:	and    ch,BYTE PTR [ebx+0x22]
  41c0c6:	xor    al,0xc8
  41c0c8:	(bad)  
  41c0ca:	mov    ds:0xe378dba4,al
  41c0cf:	dec    ebp
  41c0d0:	jno    0x41c110
  41c0d2:	out    dx,eax
  41c0d3:	sti    
  41c0d4:	repnz sub al,BYTE PTR ds:0x4952dc48
  41c0db:	test   eax,0x3240dbc7
  41c0e0:	sar    WORD PTR [ebp-0x17b11ca2],0x5
  41c0e8:	jmp    DWORD PTR [edx]
  41c0ea:	inc    esp
  41c0eb:	iret   
  41c0ec:	aam    0x6d
  41c0ee:	shl    esp,0x3a
  41c0f1:	leave  
  41c0f2:	push   ecx
  41c0f3:	mov    edi,0xb721d82e
  41c0f8:	fdiv   QWORD PTR [edi]
  41c0fa:	sbb    BYTE PTR [edi+0x1a],dl
  41c0fd:	iret   
  41c0fe:	adc    ebx,eax
  41c100:	xor    ebx,edi
  41c102:	jb     0x41c0d1
  41c104:	xor    al,0xe2
  41c106:	jecxz  0x41c183
  41c108:	mov    edi,0x71bf9667
  41c10d:	push   0xfffffff0
  41c10f:	mov    eax,0xf32672e1
  41c114:	mov    esp,0x34c27fd2
  41c119:	cli    
  41c11a:	in     eax,0x50
  41c11c:	push   ebp
  41c11d:	push   ebx
  41c11e:	xor    ch,0x55
  41c121:	fs loopne 0x41c132
  41c124:	stos   BYTE PTR es:[edi],al
  41c125:	add    DWORD PTR [eax+0x75],0xfffffff7
  41c129:	iret   
  41c12a:	ds call 0xf34:0xa0e5bb78
  41c132:	loope  0x41c150
  41c134:	cdq    
  41c135:	lds    ebx,FWORD PTR [esi]
  41c137:	push   esi
  41c138:	xor    DWORD PTR [ecx+0x60],eax
  41c13b:	add    BYTE PTR [ebp+0x75ae919f],ch
  41c141:	mov    ds:0x699e6422,al
  41c146:	loop   0x41c11b
  41c148:	push   esi
  41c149:	xchg   ebp,eax
  41c14a:	or     ah,BYTE PTR [ebx-0x30]
  41c14d:	mov    al,0x31
  41c14f:	outs   dx,DWORD PTR ds:[esi]
  41c150:	ficom  DWORD PTR [eax+eax*2+0x4ce394a9]
  41c157:	(bad)  
  41c158:	jo     0x41c10a
  41c15a:	(bad)  
  41c15b:	jne    0x41c12b
  41c15d:	push   esi
  41c15e:	popf   
  41c15f:	lahf   
  41c160:	push   edi
  41c161:	shl    BYTE PTR [eax],1
  41c163:	cmp    eax,0x128009ef
  41c168:	ss mov cl,0x5e
  41c16b:	pop    edi
  41c16c:	push   eax
  41c16d:	sub    al,0x97
  41c16f:	jmp    0xe0c1:0xa9384f7e
  41c176:	push   ecx
  41c177:	mov    esi,0xabed9639
  41c17c:	push   ss
  41c17d:	mov    DWORD PTR [ebp+edi*4-0x7038ed2c],esp
  41c184:	xchg   edi,eax
  41c185:	inc    ebp
  41c186:	mov    cl,0xe5
  41c188:	push   es
  41c189:	dec    ecx
  41c18a:	cmc    
  41c18b:	ds retf 
  41c18d:	ficom  DWORD PTR [ebp-0x4b7d5c1a]
  41c193:	add    BYTE PTR [ecx-0x173a01ea],0x76
  41c19a:	cwde   
  41c19b:	push   es
  41c19c:	daa    
  41c19d:	pop    esi
  41c19e:	repnz dec esi
  41c1a0:	or     esi,0xffffffe3
  41c1a3:	test   eax,0xeb7d2f5a
  41c1a8:	pop    ebx
  41c1a9:	xor    DWORD PTR [ebx+0x3315140c],ecx
  41c1af:	push   ebp
  41c1b0:	mov    eax,ds:0x446c4ae9
  41c1b5:	test   dl,bh
  41c1b7:	iret   
  41c1b8:	retf   
  41c1b9:	cli    
  41c1ba:	push   ebx
  41c1bb:	mov    esi,0x983cc7d4
  41c1c0:	lods   eax,DWORD PTR ds:[esi]
  41c1c1:	aam    0x58
  41c1c3:	mov    ch,0x12
  41c1c5:	stc    
  41c1c6:	adc    ebp,DWORD PTR [ebx+edx*8]
  41c1c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ca:	aad    0x92
  41c1cc:	test   al,0xe
  41c1ce:	in     al,dx
  41c1cf:	cwde   
  41c1d0:	frstor [esi+0x3b684fad]
  41c1d6:	int3   
  41c1d7:	dec    edi
  41c1d8:	leave  
  41c1d9:	(bad)  
  41c1da:	sub    bl,ah
  41c1dc:	jmp    0xeeee:0x4212a6a0
  41c1e3:	and    DWORD PTR [ebx+0x1e],esp
  41c1e6:	stos   DWORD PTR es:[edi],eax
  41c1e7:	push   ebx
  41c1e8:	adc    BYTE PTR gs:[ebx+edx*8],ah
  41c1ec:	addr16 mov ebp,0xdd3a810e
  41c1f2:	dec    esi
  41c1f3:	int3   
  41c1f4:	cmp    BYTE PTR [ebx-0x7631378b],al
  41c1fa:	ins    DWORD PTR es:[edi],dx
  41c1fb:	mov    dl,0xaf
  41c1fd:	std    
  41c1fe:	jmp    0x6a3c:0xbb14c4ba
  41c205:	pop    eax
  41c206:	sbb    al,0xb
  41c208:	sub    eax,DWORD PTR [ebp+0x7c]
  41c20b:	jns    0x41c218
  41c20d:	or     ebx,DWORD PTR [ebx+edx*4+0x14]
  41c211:	sub    DWORD PTR [eax+0x6d],0x9ef5c589
  41c218:	lods   al,BYTE PTR ds:[esi]
  41c219:	xchg   esi,eax
  41c21a:	lock pop edx
  41c21c:	fadd   st,st(4)
  41c21e:	mov    cl,0x3e
  41c220:	les    ecx,FWORD PTR [eax-0x7b]
  41c223:	or     bl,BYTE PTR [esi]
  41c225:	into   
  41c226:	popf   
  41c227:	icebp  
  41c228:	fcom   DWORD PTR [ebp+0x5637e85d]
  41c22e:	ud2    
  41c230:	mov    bl,0x89
  41c232:	leave  
  41c233:	dec    eax
  41c234:	dec    ebx
  41c235:	push   ebx
  41c236:	out    0xaa,eax
  41c238:	push   0xffffffbb
  41c23a:	call   0xf63a:0xc7cab2d7
  41c241:	push   ebx
  41c242:	push   esi
  41c243:	mov    esi,esi
  41c245:	dec    edx
  41c246:	out    0x7d,al
  41c248:	fwait
  41c249:	and    BYTE PTR [ebx+eiz*2+0x6af86171],0xc5
  41c251:	pop    ss
  41c252:	pop    eax
  41c253:	mov    bl,0x77
  41c255:	dec    edi
  41c256:	pop    ds
  41c257:	fcmove st,st(0)
  41c259:	add    ebp,esp
  41c25b:	mov    DWORD PTR [ebp-0x55bd130b],edx
  41c261:	dec    edx
  41c262:	fnstsw WORD PTR [ebp-0x66596eb7]
  41c268:	shl    BYTE PTR [ecx],1
  41c26a:	mov    ah,0x94
  41c26c:	xchg   esi,eax
  41c26d:	data16 loop 0x41c2e8
  41c270:	int3   
  41c271:	pop    esi
  41c272:	add    edi,DWORD PTR [edx+ecx*2+0x68a2e6bb]
  41c279:	push   ebp
  41c27a:	sbb    DWORD PTR [ebp-0x5565a0f2],edi
  41c280:	add    esp,DWORD PTR [ecx]
  41c282:	push   edx
  41c283:	cmp    al,0x23
  41c285:	xlat   BYTE PTR ds:[ebx]
  41c286:	call   0x70dd397
  41c28b:	rol    dl,0xb9
  41c28e:	cmp    BYTE PTR [ecx],dl
  41c290:	pop    es
  41c291:	add    cl,BYTE PTR ds:0x9b5727c8
  41c297:	xlat   BYTE PTR ds:[ebx]
  41c298:	cmp    DWORD PTR [edx-0x63],edx
  41c29b:	sbb    al,0x66
  41c29d:	mov    BYTE PTR [esi],bl
  41c29f:	shl    DWORD PTR [edi-0x3fcd8208],cl
  41c2a5:	pop    es
  41c2a6:	out    0x1a,al
  41c2a8:	fsub   DWORD PTR [eax+0x63e841cc]
  41c2ae:	push   cs
  41c2af:	xchg   DWORD PTR [ecx+0x59],esi
  41c2b2:	inc    ebp
  41c2b3:	pop    ds
  41c2b4:	push   ecx
  41c2b5:	push   es
  41c2b6:	outs   dx,DWORD PTR ds:[esi]
  41c2b7:	mov    ebp,0x7703e6ae
  41c2bc:	dec    ebp
  41c2bd:	std    
  41c2be:	in     eax,dx
  41c2bf:	(bad)  
  41c2c0:	loop   0x41c243
  41c2c2:	fxch   st(3)
  41c2c4:	aad    0xc2
  41c2c6:	in     al,dx
  41c2c7:	inc    edi
  41c2c8:	and    DWORD PTR [eax-0x780f60a2],ebx
  41c2ce:	cmp    DWORD PTR [ebx],ecx
  41c2d0:	adc    eax,esi
  41c2d2:	push   ebx
  41c2d3:	mov    esi,DWORD PTR ds:0xa921d25b
  41c2d9:	scas   eax,DWORD PTR es:[edi]
  41c2da:	adc    DWORD PTR [esp+edi*1+0x239b0bef],ebx
  41c2e1:	pop    edi
  41c2e2:	xchg   ebx,eax
  41c2e3:	or     BYTE PTR [ebx],al
  41c2e5:	mov    ebx,0x1147f8c5
  41c2ea:	xchg   ebx,eax
  41c2eb:	jl     0x41c296
  41c2ed:	stos   DWORD PTR es:[edi],eax
  41c2ee:	jecxz  0x41c2ae
  41c2f0:	adc    BYTE PTR [bp+di],dh
  41c2f3:	cmp    al,0xef
  41c2f5:	leave  
  41c2f6:	mov    dl,0xdc
  41c2f8:	into   
  41c2f9:	loope  0x41c2f5
  41c2fb:	jae    0x41c301
  41c2fd:	mov    bl,0x6c
  41c2ff:	int3   
  41c300:	mov    cl,0xf8
  41c302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c303:	sbb    bh,cl
  41c305:	xchg   edi,eax
  41c306:	stos   BYTE PTR es:[edi],al
  41c307:	scas   al,BYTE PTR es:[edi]
  41c308:	fimul  DWORD PTR [ecx+0x12704e7b]
  41c30e:	push   edi
  41c30f:	push   ecx
  41c310:	stos   BYTE PTR es:[edi],al
  41c311:	retf   
  41c312:	inc    eax
  41c313:	dec    esi
  41c314:	lahf   
  41c315:	nop
  41c316:	cmp    edi,DWORD PTR [ecx]
  41c318:	out    dx,al
  41c319:	cs je  0x41c30f
  41c31c:	fisubr DWORD PTR [eax-0x791d4ffd]
  41c322:	push   ecx
  41c323:	rol    DWORD PTR [edi+0x5e13049a],0x28
  41c32a:	out    0x12,eax
  41c32c:	neg    BYTE PTR [esi]
  41c32e:	clc    
  41c32f:	sti    
  41c330:	mov    dh,0x64
  41c332:	lahf   
  41c333:	iret   
  41c334:	xlat   BYTE PTR ds:[ebx]
  41c335:	inc    ebx
  41c336:	sub    BYTE PTR [esp+edi*4-0x64],cl
  41c33a:	(bad)  
  41c33b:	mov    dh,0x56
  41c33d:	mov    ecx,DWORD PTR [ebx+0x13]
  41c340:	mov    ebp,0x1b7c0981
  41c345:	mov    cl,0x52
  41c347:	iret   
  41c348:	mov    edi,0x72b0b4da
  41c34d:	jl     0x41c34b
  41c34f:	push   es
  41c350:	lods   al,BYTE PTR ds:[esi]
  41c351:	stc    
  41c352:	in     al,dx
  41c353:	mov    esi,0x5b543190
  41c358:	(bad)  
  41c359:	xor    ebp,DWORD PTR [esi]
  41c35b:	pushf  
  41c35c:	inc    edx
  41c35d:	mov    dl,0x45
  41c35f:	push   ecx
  41c360:	add    eax,DWORD PTR [edi]
  41c362:	and    bh,BYTE PTR [ecx+0x52]
  41c365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c366:	jo     0x41c330
  41c368:	jmp    0x70cff529
  41c36d:	out    dx,eax
  41c36e:	and    DWORD PTR [eax-0x5ceb3ce4],eax
  41c374:	cmp    DWORD PTR [esi+0x8],esi
  41c377:	lds    eax,FWORD PTR [edi]
  41c379:	jbe    0x41c39e
  41c37b:	popf   
  41c37c:	mov    ebx,0xd8c729
  41c381:	adc    dh,BYTE PTR [ecx]
  41c383:	push   ss
  41c384:	mov    edx,0x650de4cf
  41c389:	dec    ecx
  41c38a:	fldenv [edx+0x39]
  41c38d:	sub    bl,bh
  41c38f:	pushf  
  41c390:	fsub   DWORD PTR [ecx-0x77f482bb]
  41c396:	in     al,dx
  41c397:	dec    ecx
  41c398:	pushf  
  41c399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c39a:	push   0xb618c14a
  41c39f:	pusha  
  41c3a0:	stos   BYTE PTR es:[edi],al
  41c3a1:	or     esi,ecx
  41c3a3:	pop    eax
  41c3a4:	retf   0x38d8
  41c3a7:	shl    DWORD PTR [esi+esi*2-0x4d53e5d8],1
  41c3ae:	pop    es
  41c3af:	imul   BYTE PTR [eax]
  41c3b1:	cmp    al,0xd9
  41c3b3:	sbb    BYTE PTR [esi+0x5d1005d],0x29
  41c3ba:	icebp  
  41c3bb:	sub    eax,0x455b23b8
  41c3c0:	stc    
  41c3c1:	pop    ebx
  41c3c2:	out    dx,eax
  41c3c3:	fstp   DWORD PTR [edi+ebx*8+0x1397ac43]
  41c3ca:	dec    ebx
  41c3cb:	pop    edx
  41c3cc:	pop    es
  41c3cd:	mov    bl,0x6d
  41c3cf:	mov    ebx,0x6ea9007c
  41c3d4:	call   0x4bea70d6
  41c3d9:	pop    es
  41c3da:	adc    eax,0x60de5ae5
  41c3df:	mov    edi,db3
  41c3e2:	ret    
  41c3e3:	call   0xc3cf:0x7c057dcd
  41c3ea:	es out 0xfa,eax
  41c3ed:	(bad)  
  41c3ee:	repnz or esp,DWORD PTR [ecx+0x48]
  41c3f2:	das    
  41c3f3:	xor    ch,bl
  41c3f5:	in     al,0x4a
  41c3f7:	in     eax,0xb1
  41c3f9:	fiadd  DWORD PTR [ebx+0x76]
  41c3fc:	mov    bh,0x26
  41c3fe:	or     DWORD PTR [eax-0x29],0x5f17fce8
  41c405:	or     dh,BYTE PTR [esi+0x59]
  41c408:	mov    edi,0xbda760f2
  41c40d:	cdq    
  41c40e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c40f:	xor    al,0x9d
  41c411:	(bad)  
  41c412:	cli    
  41c413:	lods   eax,DWORD PTR ds:[esi]
  41c414:	les    ebp,FWORD PTR [edx+eax*8-0xe171c2a]
  41c41b:	(bad)  
  41c41c:	cld    
  41c41d:	mov    edi,0x74de8875
  41c422:	retf   0x3a6b
  41c425:	sub    edi,DWORD PTR [edi+0x37]
  41c428:	stc    
  41c429:	fisub  DWORD PTR [esi+0x5]
  41c42c:	arpl   WORD PTR [esp+edx*2+0x44040920],cx
  41c433:	mov    eax,0x6090615a
  41c438:	cld    
  41c439:	test   eax,0x34f382f9
  41c43e:	sub    edx,esp
  41c440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c441:	stc    
  41c442:	cmp    BYTE PTR [edi],al
  41c444:	pop    ebx
  41c445:	inc    esp
  41c446:	sahf   
  41c447:	lods   al,BYTE PTR ds:[esi]
  41c448:	mov    ebx,0x2a2301ea
  41c44d:	out    0xe8,al
  41c44f:	push   cs
  41c450:	dec    edi
  41c451:	jmp    0x41c486
  41c453:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c455:	test   al,0x63
  41c457:	xchg   BYTE PTR [ebp-0x2c],bl
  41c45a:	mov    esi,0x829f45c3
  41c45f:	pop    esi
  41c460:	inc    edx
  41c461:	jl     0x41c46e
  41c463:	push   ebx
  41c464:	imul   DWORD PTR [edi+0x7f21609d]
  41c46a:	pop    es
  41c46b:	call   0x3886:0xfa3e995b
  41c472:	data16 aas 
  41c474:	fs cmc 
  41c476:	data16 (bad) 
  41c478:	loop   0x41c4b6
  41c47a:	add    dh,BYTE PTR [bx+si-0x4b]
  41c47e:	sbb    BYTE PTR [ebx],bl
  41c480:	lahf   
  41c481:	js     0x41c41f
  41c483:	shr    BYTE PTR [ebx-0x26],cl
  41c486:	mov    eax,0x3db713cb
  41c48b:	pop    ebp
  41c48c:	inc    edx
  41c48d:	push   ss
  41c48e:	retf   0x7a64
  41c491:	add    BYTE PTR [eax+0x11],cl
  41c494:	mov    dh,0xa2
  41c496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c497:	ret    0xdb83
  41c49a:	jge    0x41c484
  41c49c:	retf   0xdf4e
  41c49f:	xor    eax,0x31f2570
  41c4a4:	stc    
  41c4a5:	mov    ds:0x6cad0f9b,al
  41c4aa:	lds    ebp,FWORD PTR [edx+0x7c]
  41c4ad:	ins    BYTE PTR es:[edi],dx
  41c4ae:	in     eax,dx
  41c4af:	xchg   BYTE PTR [ebx-0x6a],bl
  41c4b2:	jns    0x41c531
  41c4b4:	int    0xa4
  41c4b6:	jl     0x41c522
  41c4b8:	pop    ebx
  41c4b9:	adc    eax,0xc6d2210
  41c4be:	pop    ebp
  41c4bf:	inc    esi
  41c4c0:	or     DWORD PTR [ecx+0x5a00e539],ecx
  41c4c6:	js     0x41c4ab
  41c4c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4c9:	push   ds
  41c4ca:	pop    eax
  41c4cb:	sbb    edx,edi
  41c4cd:	lods   al,BYTE PTR ds:[esi]
  41c4ce:	jge    0x41c51e
  41c4d0:	(bad)  
  41c4d1:	(bad)  
  41c4d2:	(bad)  
  41c4d3:	in     al,dx
  41c4d4:	stc    
  41c4d5:	out    0x29,al
  41c4d7:	mov    cl,BYTE PTR [edi+eax*8]
  41c4da:	add    dl,BYTE PTR [ecx-0x7c468b4d]
  41c4e0:	jb     0x41c494
  41c4e2:	enter  0x65c2,0x90
  41c4e6:	cld    
  41c4e7:	jno    0x41c55f
  41c4e9:	sub    cl,BYTE PTR [edx]
  41c4eb:	cmp    bh,BYTE PTR ds:0x28d0018f
  41c4f1:	mov    dl,0xc8
  41c4f3:	sbb    dh,dh
  41c4f5:	sbb    eax,0xf5905ca6
  41c4fa:	mov    fs,eax
  41c4fc:	(bad)  
  41c4fd:	sub    edi,DWORD PTR [edi+0x6a]
  41c500:	pushf  
  41c501:	jl     0x41c4cc
  41c503:	push   esi
  41c504:	mov    ebx,0xad7d1921
  41c509:	jp     0x41c541
  41c50b:	mov    esp,0xdbae5d39
  41c510:	xlat   BYTE PTR ds:[ebx]
  41c511:	jne    0x41c4e7
  41c513:	rol    BYTE PTR ds:0x204b9919,0xb7
  41c51a:	xchg   BYTE PTR [edx+0x1c],bl
  41c51d:	pusha  
  41c51e:	and    bl,cl
  41c520:	inc    eax
  41c521:	mov    ebp,0x89540269
  41c526:	jne    0x41c553
  41c528:	aad    0x2b
  41c52a:	sub    al,0xe1
  41c52c:	jno    0x41c580
  41c52e:	add    esp,DWORD PTR [ecx]
  41c530:	adc    DWORD PTR [ecx+0x1fc418f7],eax
  41c536:	jmp    0x41c4b8
  41c538:	out    dx,eax
  41c539:	xchg   edi,eax
  41c53a:	dec    eax
  41c53b:	and    esp,DWORD PTR [eax-0x735bdfdd]
  41c541:	mov    eax,ds:0x692096ca
  41c546:	cmp    ch,BYTE PTR [ecx*2+0x67f23b56]
  41c54d:	xchg   edx,eax
  41c54e:	fs jnp 0x41c547
  41c551:	adc    BYTE PTR [ebx],bh
  41c553:	pop    es
  41c554:	adc    ch,BYTE PTR [edi]
  41c556:	fs mov ecx,0x39a930c5
  41c55c:	push   cs
  41c55d:	stc    
  41c55e:	test   al,0xf2
  41c560:	jno    0x41c594
  41c562:	mov    edx,0x161b60dd
  41c567:	add    DWORD PTR [edx+0x2e],ecx
  41c56a:	xchg   esp,eax
  41c56b:	inc    ecx
  41c56c:	or     edx,DWORD PTR [ebp-0x6e]
  41c56f:	sbb    esp,DWORD PTR ds:0xc574b4c4
  41c575:	or     al,0xac
  41c577:	clc    
  41c578:	loope  0x41c57a
  41c57a:	add    al,0x8d
  41c57c:	inc    esp
  41c57d:	fprem  
  41c57f:	test   BYTE PTR ds:0x39d68762,bh
  41c585:	mov    esi,0x3b28c216
  41c58a:	sti    
  41c58b:	shl    DWORD PTR [eax-0x3e],1
  41c58e:	outs   dx,BYTE PTR ds:[esi]
  41c58f:	jne    0x41c5e9
  41c591:	xchg   ebp,eax
  41c592:	or     DWORD PTR [ebp+0x1d],0xffffffc3
  41c596:	in     al,dx
  41c597:	push   cs
  41c598:	sub    bh,bl
  41c59a:	mov    al,ds:0x11bc65ad
  41c59f:	xor    al,0x33
  41c5a1:	mov    cl,0x5e
  41c5a3:	or     eax,0xee512096
  41c5a8:	or     al,0x13
  41c5aa:	stos   BYTE PTR es:[edi],al
  41c5ab:	clc    
  41c5ac:	stos   DWORD PTR es:[edi],eax
  41c5ad:	dec    esi
  41c5ae:	call   0x573a:0xe90665de
  41c5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5b6:	out    dx,al
  41c5b7:	out    dx,al
  41c5b8:	mov    ebp,0x3ee74930
  41c5bd:	pop    eax
  41c5be:	sbb    ch,bl
  41c5c0:	in     eax,0x54
  41c5c2:	cld    
  41c5c3:	fidiv  DWORD PTR [esp+edi*1]
  41c5c6:	popf   
  41c5c7:	aad    0xe9
  41c5c9:	cmp    BYTE PTR [ebx],al
  41c5cb:	sub    al,0x29
  41c5cd:	int    0x2f
  41c5cf:	ret    0x8e66
  41c5d2:	xor    eax,edi
  41c5d4:	xlat   BYTE PTR ds:[ebx]
  41c5d5:	xchg   BYTE PTR [edx-0x1517e0e2],dl
  41c5db:	in     al,0xe7
  41c5dd:	inc    eax
  41c5de:	pop    esi
  41c5df:	(bad)  
  41c5e0:	mov    eax,ds:0xfc016b6d
  41c5e5:	iret   
  41c5e6:	mov    ah,0x1d
  41c5e8:	out    dx,al
  41c5e9:	aad    0x88
  41c5eb:	cdq    
  41c5ec:	pushf  
  41c5ed:	adc    al,0x30
  41c5ef:	xor    DWORD PTR [ebp-0x19],esp
  41c5f2:	arpl   WORD PTR [ecx-0x4ff8e9f0],dx
  41c5f8:	inc    esp
  41c5f9:	pop    edi
  41c5fa:	shl    DWORD PTR [edi+edi*1],0x3d
  41c5fe:	push   eax
  41c5ff:	inc    ebp
  41c600:	enter  0x5cea,0x91
  41c604:	outs   dx,BYTE PTR ds:[esi]
  41c605:	inc    edi
  41c606:	jae    0x41c5b2
  41c608:	cdq    
  41c609:	or     DWORD PTR [ebx-0x28],eax
  41c60c:	ret    0xae88
  41c60f:	jge    0x41c5de
  41c611:	jo     0x41c650
  41c613:	jmp    0x41c614
  41c615:	sbb    esi,DWORD PTR [edi]
  41c617:	dec    ebx
  41c618:	mov    ds:0x198fa15c,eax
  41c61d:	mov    dl,0x4e
  41c61f:	fwait
  41c620:	dec    esp
  41c621:	fstp   DWORD PTR [ecx+0x41]
  41c624:	and    eax,0xf2a5a33c
  41c629:	call   0x1395:0x1708cfcb
  41c630:	(bad)  
  41c631:	rol    al,cl
  41c633:	repnz xor eax,0x9c0beac2
  41c639:	jnp    0x41c5d6
  41c63b:	adc    al,0x4a
  41c63d:	outs   dx,BYTE PTR ds:[esi]
  41c63e:	ret    
  41c63f:	mov    esi,0xc7ca99b3
  41c644:	sbb    ebp,ebp
  41c646:	lods   eax,DWORD PTR ds:[esi]
  41c647:	int    0xda
  41c649:	inc    eax
  41c64a:	mov    ebx,0xf4faf901
  41c64f:	mov    edx,0x5e49703
  41c654:	mov    bl,0x5e
  41c656:	cmp    ecx,DWORD PTR [ebp+0x40]
  41c659:	push   esp
  41c65a:	repnz push ecx
  41c65c:	sub    edx,edx
  41c65e:	add    al,0x66
  41c660:	mov    ds:0xfe9d38a,eax
  41c665:	fisttp WORD PTR [esi-0x70]
  41c668:	test   BYTE PTR [esi],0xec
  41c66b:	push   ss
  41c66c:	nop
  41c66d:	addr16 inc esi
  41c66f:	adc    ebx,DWORD PTR [ebx-0xe4f199f]
  41c675:	mov    sp,0x4fa7
  41c679:	into   
  41c67a:	shr    BYTE PTR [ebp+0x2c],1
  41c67d:	pop    esp
  41c67e:	mov    bh,0xc2
  41c680:	adc    eax,ecx
  41c682:	cdq    
  41c683:	cmp    DWORD PTR [edi+0x21199d09],edi
  41c689:	in     eax,dx
  41c68a:	shl    BYTE PTR [ebx],1
  41c68c:	push   esp
  41c68d:	enter  0xcf5b,0xdc
  41c691:	and    esi,DWORD PTR [edx-0x2bcfab84]
  41c697:	gs lahf 
  41c699:	mov    ah,0xe1
  41c69b:	adc    al,0x3a
  41c69d:	cli    
  41c69e:	jno    0x41c6f2
  41c6a0:	(bad)  
  41c6a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6a2:	cmp    cl,bh
  41c6a4:	inc    edx
  41c6a5:	loopne 0x41c654
  41c6a7:	inc    esp
  41c6a8:	inc    esi
  41c6a9:	sub    BYTE PTR [ebx+0x4b66d08f],0xd5
  41c6b0:	adc    al,0xcc
  41c6b2:	inc    ebx
  41c6b3:	fstp   DWORD PTR [ecx]
  41c6b5:	fsubrp st(3),st
  41c6b7:	or     BYTE PTR [edi+0x1d],bh
  41c6ba:	mov    eax,ds:0x7120d561
  41c6bf:	xchg   ecx,eax
  41c6c0:	and    BYTE PTR [ecx-0x52331fe4],ch
  41c6c6:	popa   
  41c6c7:	stmxcsr DWORD PTR [edi]
  41c6ca:	pop    edi
  41c6cb:	iret   
  41c6cc:	xchg   DWORD PTR [esi-0x1a],edx
  41c6cf:	mov    eax,0x24e7b86a
  41c6d4:	into   
  41c6d5:	pop    ebp
  41c6d6:	mov    al,0xae
  41c6d8:	(bad)  
  41c6d9:	cld    
  41c6da:	pop    esi
  41c6db:	mov    ch,0xf8
  41c6dd:	pop    ebx
  41c6de:	xchg   edi,eax
  41c6df:	jae    0x41c6fb
  41c6e1:	jo     0x41c6b6
  41c6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6e4:	cdq    
  41c6e5:	outs   dx,BYTE PTR ds:[esi]
  41c6e6:	mov    edx,0x7cd6af1f
  41c6eb:	out    0xd9,al
  41c6ed:	out    0x44,al
  41c6ef:	ret    0x3cdf
  41c6f2:	pop    es
  41c6f3:	sti    
  41c6f4:	addr16 mov cl,0xf1
  41c6f7:	jmp    0x529b8f6a
  41c6fc:	xor    eax,eax
  41c6fe:	call   FWORD PTR [eax-0x7053b269]
  41c704:	sbb    dh,BYTE PTR [ebp-0x65f76238]
  41c70a:	shr    eax,cl
  41c70c:	out    dx,eax
  41c70d:	pop    ebx
  41c70e:	cmp    al,0xcb
  41c710:	dec    edi
  41c711:	call   0xed67ba3c
  41c716:	dec    ebx
  41c717:	ds inc ebp
  41c719:	ds (bad) 
  41c71b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c71c:	mov    ds:0xbc470791,eax
  41c721:	push   es
  41c722:	inc    edx
  41c723:	push   edi
  41c724:	(bad)  
  41c725:	mov    ds:0x5abcf529,eax
  41c72a:	or     DWORD PTR [ebx],edi
  41c72c:	mov    esp,0x36bbef57
  41c731:	aad    0x35
  41c733:	repnz cs (bad) 
  41c736:	lock xor eax,0x2281d4cf
  41c73c:	shl    BYTE PTR [edi-0x1b],0x83
  41c740:	or     al,0x69
  41c742:	ss dec esi
  41c744:	sets   BYTE PTR [edi-0x7b]
  41c748:	ss popf 
  41c74a:	xor    ch,ah
  41c74c:	xchg   esi,eax
  41c74d:	cmp    ebp,DWORD PTR [ebx]
  41c74f:	xor    BYTE PTR [edx],bh
  41c751:	add    ah,bl
  41c753:	push   0x41
  41c755:	mov    ebp,ebp
  41c757:	jge    0x41c75b
  41c759:	sub    BYTE PTR [ecx],bh
  41c75b:	lods   eax,DWORD PTR ds:[esi]
  41c75c:	push   ds
  41c75d:	ret    0x26e8
  41c760:	xor    al,0xac
  41c762:	ficomp DWORD PTR [eax+0x53ad2088]
  41c768:	hlt    
  41c769:	in     al,0x4e
  41c76b:	shl    BYTE PTR [edx+0x49],0x2d
  41c76f:	aas    
  41c770:	push   esi
  41c771:	inc    ebx
  41c772:	nop
  41c773:	pop    bp
  41c775:	pop    esp
  41c776:	cmp    DWORD PTR [edi+0x3f],edi
  41c779:	or     al,0x36
  41c77b:	xchg   edx,eax
  41c77c:	(bad)  
  41c77d:	pop    ebx
  41c77e:	or     BYTE PTR [esi+0x29],ch
  41c781:	leave  
  41c782:	aaa    
  41c783:	mov    ecx,0xc7ec018b
  41c788:	push   0xffffffb2
  41c78a:	in     al,dx
  41c78b:	mov    cl,0x5a
  41c78d:	sub    eax,0x42b32c02
  41c792:	xchg   edx,eax
  41c793:	adc    ebx,DWORD PTR [ebx]
  41c795:	adc    BYTE PTR [ebx+0x5706082b],bh
  41c79b:	and    al,0xa3
  41c79d:	mov    WORD PTR [ecx+0x37],cs
  41c7a0:	pop    ebx
  41c7a1:	xor    DWORD PTR [esi+0x44e2f140],esi
  41c7a7:	inc    edx
  41c7a8:	push   edi
  41c7a9:	popa   
  41c7aa:	pushf  
  41c7ab:	inc    DWORD PTR [edi+ecx*1-0x57e06f06]
  41c7b2:	xchg   ebp,eax
  41c7b3:	mov    eax,0x2fdd0e6f
  41c7b8:	mov    edx,0xb1e22699
  41c7bd:	repz fnstenv [ecx+0x3fa13d81]
  41c7c4:	icebp  
  41c7c5:	icebp  
  41c7c6:	popa   
  41c7c7:	jecxz  0x41c772
  41c7c9:	add    dh,BYTE PTR [esi]
  41c7cb:	cmp    ebx,DWORD PTR [edx+0x1a367b84]
  41c7d1:	int3   
  41c7d2:	test   BYTE PTR [ebp-0x484b2019],bh
  41c7d8:	out    0xbc,eax
  41c7da:	jb     0x41c798
  41c7dc:	mov    ebx,0xf96c963a
  41c7e1:	sub    BYTE PTR [ebx+0x61f0a431],ah
  41c7e7:	xchg   ebp,eax
  41c7e8:	jnp    0x41c839
  41c7ea:	cmp    cl,bl
  41c7ec:	sub    eax,0xd157d8fe
  41c7f1:	cmp    ebp,DWORD PTR ds:0xaee686d
  41c7f7:	rcl    BYTE PTR [ecx+0x6c2cd84e],1
  41c7fd:	test   BYTE PTR [ebx],ah
  41c7ff:	imul   ebx,DWORD PTR [edi+0x5f8b6e41],0xffffffb9
  41c806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c807:	in     eax,0x35
  41c809:	aad    0x25
  41c80b:	int3   
  41c80c:	sub    BYTE PTR [ecx+0xd],bl
  41c80f:	add    DWORD PTR [ebx+ecx*8],0x3e
  41c813:	mov    ebx,0x2bf597d7
  41c818:	mov    eax,DWORD PTR [ebx-0x20]
  41c81b:	dec    ecx
  41c81c:	inc    ebx
  41c81d:	jle    0x41c7be
  41c81f:	push   ebx
  41c820:	cmc    
  41c821:	cmp    BYTE PTR ds:0xdfd8ffbb,0xb9
  41c828:	cmp    al,0xe
  41c82a:	cmp    BYTE PTR [edx],ah
  41c82c:	inc    eax
  41c82d:	inc    ecx
  41c82e:	xor    DWORD PTR [ebx-0x57],eax
  41c831:	adc    ah,al
  41c833:	mov    fs,WORD PTR [eax-0x4e]
  41c836:	sbb    eax,0xdcd6f953
  41c83b:	pop    eax
  41c83c:	pop    ecx
  41c83d:	jno    0x41c805
  41c83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c840:	jg     0x41c876
  41c842:	and    edx,DWORD PTR [ebp+0x6c]
  41c845:	test   al,0x84
  41c847:	cli    
  41c848:	shl    ebx,cl
  41c84a:	fcomi  st,st(4)
  41c84c:	dec    esp
  41c84d:	mov    ah,0x22
  41c84f:	mov    cl,0x27
  41c851:	push   ebx
  41c852:	out    0x99,eax
  41c854:	(bad)  [edi+eax*1+0x13]
  41c858:	cs iret 
  41c85a:	bound  ecx,QWORD PTR [edi-0xd30ded5]
  41c860:	xchg   ecx,eax
  41c861:	les    ecx,FWORD PTR [eax-0x154ec1a2]
  41c867:	je     0x41c841
  41c869:	pop    ebp
  41c86a:	bound  edi,QWORD PTR [ebp-0x29]
  41c86d:	ins    DWORD PTR es:[edi],dx
  41c86e:	cli    
  41c86f:	dec    ebx
  41c870:	mov    gs,WORD PTR [ebp+0x5c]
  41c873:	imul   dh
  41c875:	aaa    
  41c876:	inc    esp
  41c877:	push   eax
  41c878:	ret    0xcac
  41c87b:	mov    eax,0xc55daa4c
  41c880:	mov    al,0x6d
  41c882:	lods   al,BYTE PTR ds:[esi]
  41c883:	inc    edi
  41c884:	dec    ecx
  41c885:	dec    eax
  41c886:	(bad)  [ebp+0x3cc9896]
  41c88c:	xlat   BYTE PTR ds:[ebx]
  41c88d:	in     eax,dx
  41c88e:	add    dh,al
  41c890:	and    dh,BYTE PTR [edi]
  41c892:	popf   
  41c893:	stos   DWORD PTR es:[edi],eax
  41c894:	add    cl,0x96
  41c897:	push   eax
  41c898:	loop   0x41c8c7
  41c89a:	xchg   DWORD PTR [eax],ecx
  41c89c:	mov    al,0xce
  41c89e:	fidiv  WORD PTR [ebx-0x479c9ae7]
  41c8a4:	inc    esi
  41c8a5:	sub    DWORD PTR [eax-0x748f3590],edx
  41c8ab:	add    eax,0x142459f0
  41c8b0:	jp     0x41c8c5
  41c8b2:	xchg   BYTE PTR [ebp-0x317ddfbe],dl
  41c8b8:	add    al,0xdc
  41c8ba:	inc    esi
  41c8bb:	in     eax,dx
  41c8bc:	cwde   
  41c8bd:	out    0xe2,eax
  41c8bf:	int3   
  41c8c0:	rcr    DWORD PTR [ebx-0x6a],1
  41c8c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8c4:	dec    ebp
  41c8c5:	xor    al,0xba
  41c8c7:	ficomp WORD PTR [edi]
  41c8c9:	cwde   
  41c8ca:	sbb    eax,0xf3e02c87
  41c8cf:	fwait
  41c8d0:	das    
  41c8d1:	cwde   
  41c8d2:	sbb    esi,DWORD PTR [edi+0x5c3abc6d]
  41c8d8:	push   ebp
  41c8d9:	jmp    0x41c8b0
  41c8db:	xchg   edi,eax
  41c8dc:	in     al,0x54
  41c8de:	add    ecx,DWORD PTR [ecx+0x79]
  41c8e1:	dec    eax
  41c8e2:	push   ebx
  41c8e3:	call   0xd89c:0x3eaf32dd
  41c8ea:	mov    ch,0x4
  41c8ec:	cmc    
  41c8ed:	or     esp,esp
  41c8ef:	cmp    al,0x66
  41c8f1:	add    eax,0x1fc2f019
  41c8f6:	jo     0x41c8e8
  41c8f8:	mov    al,0x4e
  41c8fa:	outs   dx,BYTE PTR ds:[esi]
  41c8fb:	jecxz  0x41c888
  41c8fd:	mov    esi,DWORD PTR [esi-0x783adbc6]
  41c903:	sahf   
  41c904:	in     eax,0x66
  41c906:	fs push esp
  41c908:	test   al,0xd1
  41c90a:	leave  
  41c90b:	mov    eax,ds:0x3edbb5fb
  41c910:	sbb    al,0xa
  41c912:	(bad)  
  41c914:	inc    ebp
  41c915:	xchg   ecx,eax
  41c916:	lahf   
  41c917:	xor    BYTE PTR [eax],0x7e
  41c91a:	(bad)  
  41c91b:	push   ss
  41c91c:	jecxz  0x41c987
  41c91e:	mov    bh,0x39
  41c920:	scas   eax,DWORD PTR es:[edi]
  41c921:	xor    ebp,DWORD PTR [edi+eiz*2]
  41c924:	pop    ss
  41c925:	adc    al,0x77
  41c927:	or     BYTE PTR [esi+0x61],bh
  41c92a:	out    0x57,al
  41c92c:	jmp    DWORD PTR [edi+0x24]
  41c92f:	push   es
  41c930:	out    0x61,eax
  41c932:	jnp    0x41c8c6
  41c934:	xchg   DWORD PTR [edx+esi*8],esi
  41c937:	iret   
  41c938:	push   ss
  41c939:	jmp    0x61ca5b17
  41c93e:	sub    BYTE PTR [edi],cl
  41c940:	stc    
  41c941:	jns    0x41c8f8
  41c943:	sbb    ch,ah
  41c945:	shl    BYTE PTR [ecx+eax*1+0xb36041d],0x16
  41c94d:	add    ebp,ebp
  41c94f:	pop    esi
  41c950:	scas   eax,DWORD PTR es:[edi]
  41c951:	mov    ds:0x31b1b39e,eax
  41c956:	xor    DWORD PTR [esi+0x28],0x7b
  41c95a:	pop    es
  41c95b:	jmp    0x41c909
  41c95d:	jmp    0x17da:0xceb5c6c5
  41c964:	retf   0xed4d
  41c967:	mov    esp,0x3e71e6a9
  41c96c:	xlat   BYTE PTR ds:[ebx]
  41c96d:	pop    es
  41c96e:	jae    0x41c97d
  41c970:	ins    DWORD PTR es:[edi],dx
  41c971:	aad    0xfe
  41c973:	and    DWORD PTR [edx-0x2c],ebx
  41c976:	or     bh,BYTE PTR [edx-0x62]
  41c979:	cmp    eax,0xc7d923be
  41c97e:	mov    edx,0x8c9d1ca1
  41c983:	xchg   esp,eax
  41c984:	push   edx
  41c985:	lahf   
  41c986:	in     al,dx
  41c987:	imul   edi,DWORD PTR [ebx+0x59],0x6a
  41c98b:	inc    eax
  41c98c:	pop    es
  41c98d:	in     eax,0xa9
  41c98f:	xchg   ecx,eax
  41c990:	xchg   ebx,eax
  41c991:	inc    edi
  41c992:	cli    
  41c993:	int3   
  41c994:	inc    ecx
  41c995:	popa   
  41c996:	cld    
  41c997:	and    al,0x72
  41c999:	fs sub eax,0xd6cb43e7
  41c99f:	jmp    0x3f21fd8b
  41c9a4:	jbe    0x41c9fd
  41c9a6:	enter  0x257a,0x28
  41c9aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9ab:	ja     0x41c94c
  41c9ad:	and    BYTE PTR [ecx-0x518ba652],dl
  41c9b3:	inc    ebp
  41c9b4:	sar    DWORD PTR [eax+0xa],cl
  41c9b7:	cmp    bl,dh
  41c9b9:	nop
  41c9ba:	adc    BYTE PTR [esi-0x28],dh
  41c9bd:	push   es
  41c9be:	int3   
  41c9bf:	xchg   ebp,eax
  41c9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9c1:	and    BYTE PTR [esp+esi*2+0x64],dh
  41c9c5:	sub    edx,ebp
  41c9c7:	xchg   BYTE PTR [esi-0xf],ch
  41c9ca:	jmp    0xefd0:0x61043c73
  41c9d1:	or     DWORD PTR fs:0x13adf273,ebp
  41c9d8:	rcr    DWORD PTR [esi+0x75a5a538],1
  41c9de:	jnp    0x41c990
  41c9e0:	push   ebx
  41c9e1:	mov    ecx,0x3bf07dae
  41c9e6:	iret   
  41c9e7:	and    al,0xb5
  41c9e9:	pop    edx
  41c9ea:	jno    0x41ca25
  41c9ec:	mov    edx,0xab2b8d14
  41c9f1:	nop
  41c9f2:	sub    BYTE PTR [ebp+0x1bbf5697],0x24
  41c9f9:	pop    eax
  41c9fa:	push   ebx
  41c9fb:	mov    esp,0xec0ea75e
  41ca00:	jecxz  0x41c990
  41ca02:	adc    edx,DWORD PTR [esi-0x3f]
  41ca05:	dec    eax
  41ca06:	(bad)  
  41ca07:	loope  0x41ca6a
  41ca09:	or     dl,bh
  41ca0b:	lea    ebp,[ecx+0x2d]
  41ca0e:	ja     0x41c9db
  41ca10:	cli    
  41ca11:	fwait
  41ca12:	pop    ds
  41ca13:	dec    ebx
  41ca14:	or     al,BYTE PTR [esi]
  41ca16:	sbb    BYTE PTR [esi+0x591a62e5],cl
  41ca1c:	jo     0x41c9ad
  41ca1e:	retf   
  41ca1f:	out    dx,al
  41ca20:	xor    edi,eax
  41ca22:	fsubr  DWORD PTR [ebx]
  41ca24:	cdq    
  41ca25:	test   DWORD PTR [esp+ebx*1],ebx
  41ca28:	lock xlat BYTE PTR ds:[ebx]
  41ca2a:	pop    DWORD PTR [ecx]
  41ca2c:	imul   ebx,DWORD PTR [esi+ecx*8+0x14f8a93f],0xe727e295
  41ca37:	mov    eax,ds:0x611eefc4
  41ca3c:	mov    eax,0xfc00a5b0
  41ca41:	mov    bl,0xa4
  41ca43:	stos   DWORD PTR es:[edi],eax
  41ca44:	enter  0xc8c5,0x6c
  41ca48:	aam    0x57
  41ca4a:	pop    edi
  41ca4b:	ds mov edx,0x3ff22015
  41ca51:	out    0xf8,al
  41ca53:	retf   
  41ca54:	pusha  
  41ca55:	mov    bl,al
  41ca57:	xchg   esp,eax
  41ca58:	test   eax,0x1fabcbe7
  41ca5d:	mov    esp,0xe312c9d9
  41ca62:	cmp    eax,edi
  41ca64:	sub    DWORD PTR [eax+0x3],eax
  41ca67:	adc    eax,0x110f33a0
  41ca6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca6d:	test   DWORD PTR [ecx],esp
  41ca6f:	or     DWORD PTR [edx-0x61169acd],esi
  41ca75:	push   edi
  41ca76:	iret   
  41ca77:	xor    DWORD PTR [edi+0x40dd874b],eax
  41ca7d:	out    dx,al
  41ca7e:	sar    DWORD PTR [edx],1
  41ca80:	mov    bh,0xc5
  41ca82:	cmp    BYTE PTR [edi-0x3a],0x5
  41ca86:	xor    edx,esp
  41ca88:	jge    0x41cab5
  41ca8a:	inc    ecx
  41ca8b:	jnp    0x41ca76
  41ca8d:	popa   
  41ca8e:	pop    ecx
  41ca8f:	add    eax,0xc148656e
  41ca94:	dec    ecx
  41ca95:	adc    DWORD PTR [ebx+0x2f],esi
  41ca98:	xor    edx,DWORD PTR [edx-0x34fca848]
  41ca9e:	and    DWORD PTR [ecx-0x2e8e6d20],ebx
  41caa4:	mov    al,ds:0x8143e096
  41caa9:	and    ah,BYTE PTR [ecx-0xcf3d3c1]
  41caaf:	jne    0x41ca94
  41cab1:	sub    DWORD PTR [ebx+0x1b5938f3],ecx
  41cab7:	mov    BYTE PTR [ebp+eiz*2+0x2e],bh
  41cabb:	fstp   QWORD PTR [edi+0x299c5c91]
  41cac1:	rol    DWORD PTR [ebx],1
  41cac3:	cmp    bh,BYTE PTR [ecx+0x6]
  41cac6:	aad    0x93
  41cac8:	add    eax,0x11e5d898
  41cacd:	and    ecx,DWORD PTR [ebp+0x2c]
  41cad0:	jg     0x41ca75
  41cad2:	mov    cl,0x23
  41cad4:	inc    edx
  41cad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cad6:	add    BYTE PTR [edi-0x33],ah
  41cad9:	add    cl,BYTE PTR [esi-0x18528976]
  41cadf:	retf   
  41cae0:	push   esi
  41cae1:	pop    eax
  41cae2:	adc    DWORD PTR [edx-0x6e5acfb3],0xfffffff7
  41cae9:	stos   BYTE PTR es:[edi],al
  41caea:	fistp  QWORD PTR [eax-0x75]
  41caed:	std    
  41caee:	stos   DWORD PTR es:[edi],eax
  41caef:	push   es
  41caf0:	lock fistp WORD PTR [ecx+0x6b]
  41caf4:	adc    BYTE PTR ds:[edx],dh
  41caf7:	in     al,0xf2
  41caf9:	or     al,0xc
  41cafb:	pop    es
  41cafc:	jo     0x41ca93
  41cafe:	add    ch,ah
  41cb00:	fsubr  st(6),st
  41cb02:	and    eax,0x42afe58b
  41cb07:	jb     0x41cacb
  41cb09:	ja     0x41caad
  41cb0b:	clc    
  41cb0c:	in     eax,dx
  41cb0d:	and    al,BYTE PTR [ecx]
  41cb0f:	fldcw  WORD PTR gs:[eax]
  41cb12:	lahf   
  41cb13:	cmp    BYTE PTR [esi+0x4f],ah
  41cb16:	jl     0x41cb60
  41cb18:	mov    bl,0x9e
  41cb1a:	mov    al,ds:0x314b9d0f
  41cb1f:	jecxz  0x41cb3e
  41cb21:	imul   ecx,DWORD PTR [edx],0x3d
  41cb24:	sub    DWORD PTR [ebp-0x6dbeb929],esp
  41cb2a:	cmp    al,0xd6
  41cb2c:	sbb    al,0x8
  41cb2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb2f:	dec    esp
  41cb30:	scas   eax,DWORD PTR es:[edi]
  41cb31:	int    0x57
  41cb33:	ds sahf 
  41cb35:	mov    WORD PTR [edx+eiz*2+0x30],gs
  41cb39:	xchg   BYTE PTR [ecx-0x5463d4ee],dh
  41cb3f:	daa    
  41cb40:	or     eax,0xa69af2da
  41cb45:	adc    cl,bh
  41cb47:	aas    
  41cb48:	sbb    DWORD PTR [ebx-0x7d4a69f6],esp
  41cb4e:	jno    0x41cadc
  41cb50:	sbb    eax,0x18495f6
  41cb55:	ja     0x41cb74
  41cb57:	xlat   BYTE PTR ds:[ebx]
  41cb58:	push   es
  41cb59:	push   edi
  41cb5a:	sub    DWORD PTR [ebx],esp
  41cb5c:	pusha  
  41cb5d:	aaa    
  41cb5e:	sbb    ch,cl
  41cb60:	pop    edx
  41cb61:	(bad)  [edx-0x38]
  41cb64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb65:	and    eax,0x9f9c13fe
  41cb6a:	dec    edi
  41cb6b:	xchg   ebp,eax
  41cb6c:	lea    ebp,[ebx+0x2e]
  41cb6f:	outs   dx,DWORD PTR ds:[esi]
  41cb70:	repnz mov DWORD PTR [ebx+0x5460f858],edi
  41cb77:	add    eax,0x27d91ddd
  41cb7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb7d:	cmc    
  41cb7e:	xor    DWORD PTR [ebx+0x5bac616b],esp
  41cb84:	xchg   edi,eax
  41cb85:	jnp    0x41cb36
  41cb87:	push   ss
  41cb88:	and    BYTE PTR [eax+0x61],al
  41cb8b:	ja     0x41cb77
  41cb8d:	mov    dh,0xa5
  41cb8f:	push   edx
  41cb90:	nop
  41cb91:	jnp    0x41cb82
  41cb93:	mov    ebp,0x6371e0de
  41cb98:	call   0x3f28fd1c
  41cb9d:	loope  0x41cbbe
  41cb9f:	imul   esi,DWORD PTR [ebx-0x4b],0xffffffeb
  41cba3:	cmp    ch,ah
  41cba5:	sub    al,0xc7
  41cba7:	pop    edi
  41cba8:	test   al,0xaa
  41cbaa:	add    DWORD PTR [ebx+0x49026738],ebx
  41cbb0:	xchg   ebp,eax
  41cbb1:	mov    ds:0xd12da93f,eax
  41cbb6:	adc    BYTE PTR [edi],bl
  41cbb8:	ficomp DWORD PTR [esi]
  41cbba:	push   eax
  41cbbb:	cs pop es
  41cbbd:	xchg   ebx,eax
  41cbbe:	sub    dh,cl
  41cbc0:	icebp  
  41cbc1:	sub    eax,0x94defe86
  41cbc6:	jmp    0x41cb93
  41cbc8:	inc    esi
  41cbc9:	sub    DWORD PTR [ecx+ecx*2-0x74],edx
  41cbcd:	sub    bl,al
  41cbcf:	div    esi
  41cbd1:	shl    BYTE PTR [edi],cl
  41cbd3:	call   DWORD PTR [esi]
  41cbd5:	test   al,0xae
  41cbd7:	pop    eax
  41cbd8:	cmp    ch,BYTE PTR [edi-0x5117a5ee]
  41cbde:	jmp    0x82ff:0xb8325052
  41cbe5:	mov    al,ds:0xc51d535b
  41cbea:	mov    eax,gs:0xb6f69446
  41cbf0:	inc    esp
  41cbf1:	dec    ecx
  41cbf2:	in     al,dx
  41cbf3:	adc    BYTE PTR [edi],dh
  41cbf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbf6:	cdq    
  41cbf7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41cbf9:	jbe    0x41cc64
  41cbfb:	icebp  
  41cbfc:	xor    dh,ch
  41cbfe:	pop    eax
  41cbff:	iret   
  41cc00:	sbb    bl,0x30
  41cc03:	test   eax,0x31b11483
  41cc08:	jg     0x41cc37
  41cc0a:	add    ah,BYTE PTR [esi-0x53909caf]
  41cc10:	mov    ah,0x46
  41cc12:	push   edx
  41cc13:	or     eax,0xafa684e8
  41cc18:	inc    edi
  41cc19:	mov    eax,ds:0xa3934e01
  41cc1e:	push   edi
  41cc1f:	dec    ebp
  41cc20:	push   ds
  41cc21:	sbb    ebp,DWORD PTR [ecx+0x6c947288]
  41cc27:	push   ds
  41cc28:	or     al,0x68
  41cc2a:	sub    DWORD PTR [edx-0x42],edx
  41cc2d:	mov    ch,0x14
  41cc2f:	jp     0x41cc12
  41cc31:	cmc    
  41cc32:	jg     0x41cc34
  41cc34:	call   0xf217f8eb
  41cc39:	call   DWORD PTR [edi+0x3b84ce5d]
  41cc3f:	jo     0x41cc16
  41cc41:	or     ebp,DWORD PTR [edi]
  41cc43:	xor    BYTE PTR [ebx-0x531bfb5e],bl
  41cc49:	cs sti 
  41cc4b:	nop
  41cc4c:	mov    bl,0xae
  41cc4e:	push   ecx
  41cc4f:	pop    ds
  41cc50:	out    0x75,eax
  41cc52:	lock ins DWORD PTR es:[edi],dx
  41cc54:	aad    0x7
  41cc56:	ss and al,0x69
  41cc59:	mov    ch,0x9d
  41cc5b:	int3   
  41cc5c:	sub    ecx,esi
  41cc5e:	xchg   ebx,eax
  41cc5f:	out    0xac,al
  41cc61:	fwait
  41cc62:	add    eax,0x8cd1020f
  41cc67:	jbe    0x41cbe9
  41cc69:	sti    
  41cc6a:	stos   BYTE PTR es:[edi],al
  41cc6b:	adc    al,al
  41cc6d:	xor    al,0xe
  41cc6f:	out    0x7f,eax
  41cc71:	fstp   TBYTE PTR [ebx-0x44]
  41cc74:	fdiv   DWORD PTR ds:0x3dd39650
  41cc7a:	inc    esi
  41cc7b:	push   0xcc018650
  41cc80:	push   ss
  41cc81:	(bad)  
  41cc82:	pop    ecx
  41cc83:	xchg   ebp,eax
  41cc84:	jo     0x41cc20
  41cc86:	mov    al,ds:0xed7c1d71
  41cc8b:	and    al,0xb9
  41cc8d:	lea    ebp,[esi-0x41]
  41cc90:	xchg   ebx,eax
  41cc91:	mov    ebx,0x71340fb2
  41cc96:	ficom  WORD PTR [ecx]
  41cc98:	int3   
  41cc99:	jnp    0x41cc73
  41cc9b:	scas   eax,DWORD PTR es:[edi]
  41cc9c:	cdq    
  41cc9d:	lds    eax,FWORD PTR [esi-0x34a4a487]
  41cca3:	sbb    BYTE PTR cs:[ebx+0x37af8937],bl
  41ccaa:	cs (bad) 
  41ccac:	imul   ecx,DWORD PTR [edi+0x5b],0x295fb729
  41ccb3:	pop    esi
  41ccb4:	mov    dh,0x39
  41ccb6:	shl    BYTE PTR [eax],cl
  41ccb8:	push   edi
  41ccb9:	mov    eax,ds:0x189ab849
  41ccbe:	mov    edi,0x780b52a6
  41ccc3:	pop    eax
  41ccc4:	sbb    DWORD PTR [ebx],eax
  41ccc6:	ss pusha 
  41ccc8:	clc    
  41ccc9:	in     al,0x50
  41cccb:	imul   esi,DWORD PTR [eax+0x5],0xffffffef
  41cccf:	xchg   ebp,eax
  41ccd0:	rcl    BYTE PTR [ebx-0x7c],0x5b
  41ccd4:	mov    ss,WORD PTR ds:0x861ad066
  41ccda:	add    edx,ebp
  41ccdc:	fwait
  41ccdd:	das    
  41ccde:	and    al,0xcc
  41cce0:	xchg   BYTE PTR [ecx-0x100fb879],ch
  41cce6:	jb     0x41cd39
  41cce8:	and    ch,al
  41ccea:	pop    ebx
  41cceb:	mov    esp,0x1117952
  41ccf0:	stos   DWORD PTR es:[edi],eax
  41ccf1:	es scas al,BYTE PTR es:[edi]
  41ccf3:	imul   edx,DWORD PTR [eax+0x497aa444],0xc4d8b15b
  41ccfd:	test   DWORD PTR [ebp-0x1e],0x42abb37c
  41cd04:	xor    eax,0x1ce3ee96
  41cd09:	cmp    al,dl
  41cd0b:	bound  esi,QWORD PTR [edx+0x8fa1042]
  41cd11:	repnz (bad) 
  41cd14:	xchg   DWORD PTR [ebx+esi*2],edi
  41cd17:	retf   0xb1d4
  41cd1a:	cld    
  41cd1b:	adc    al,0x4d
  41cd1d:	fwait
  41cd1e:	and    ecx,eax
  41cd20:	dec    ebx
  41cd21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd22:	sahf   
  41cd23:	inc    ebp
  41cd24:	scas   al,BYTE PTR es:[edi]
  41cd25:	push   0xb20b725e
  41cd2a:	cmp    bl,BYTE PTR [edx+0xa1679b3]
  41cd30:	test   al,0x9c
  41cd32:	xor    esp,DWORD PTR [edx-0x42]
  41cd35:	call   0x93f44776
  41cd3a:	pusha  
  41cd3b:	jne    0x41ccc9
  41cd3d:	cdq    
  41cd3e:	mov    ds:0xd22b41f9,al
  41cd43:	add    ah,BYTE PTR [ebx-0x73607453]
  41cd49:	sbb    ecx,DWORD PTR [ecx+0x3f]
  41cd4c:	or     al,0xae
  41cd4e:	mov    edi,0xb0c256f7
  41cd53:	mov    dl,0xae
  41cd55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd56:	mov    esp,0xaf1aee43
  41cd5b:	pop    es
  41cd5c:	jb     0x41cced
  41cd5e:	dec    ecx
  41cd5f:	and    bl,0x95
  41cd62:	loopne 0x41cd65
  41cd64:	iret   
  41cd65:	es dec ebp
  41cd67:	add    BYTE PTR [eax],ch
  41cd69:	iret   
  41cd6a:	mov    ebp,0x91f97626
  41cd6f:	xor    bl,dl
  41cd71:	dec    ebp
  41cd72:	jno    0x41cd75
  41cd74:	scas   eax,DWORD PTR es:[edi]
  41cd75:	and    BYTE PTR [eax-0x21],dh
  41cd78:	ja     0x41cda5
  41cd7a:	daa    
  41cd7b:	pusha  
  41cd7c:	loopne 0x41cdca
  41cd7e:	or     BYTE PTR [edi+0x524b35b0],ah
  41cd84:	and    ebp,ebp
  41cd86:	xchg   edi,eax
  41cd87:	aad    0x44
  41cd89:	push   ss
  41cd8a:	push   0x5513e6ff
  41cd8f:	(bad)  
  41cd90:	xor    ecx,esp
  41cd92:	mov    esp,0x574b33b6
  41cd97:	mov    esi,0x95a909db
  41cd9c:	fidivr WORD PTR [eax+0x6a1ab999]
  41cda2:	xor    DWORD PTR [ecx],edx
  41cda4:	outs   dx,BYTE PTR ds:[esi]
  41cda5:	pop    es
  41cda6:	lods   al,BYTE PTR ds:[esi]
  41cda7:	cli    
  41cda8:	add    esi,DWORD PTR [esi+ebx*8-0x6da84b6f]
  41cdaf:	outs   dx,DWORD PTR ds:[esi]
  41cdb0:	test   eax,0xc5f0674f
  41cdb5:	loop   0x41ce00
  41cdb7:	(bad)  
  41cdb8:	push   ecx
  41cdb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdba:	dec    edi
  41cdbb:	bound  edx,QWORD PTR [esp+eiz*8+0x461d9f61]
  41cdc2:	pop    ecx
  41cdc3:	sub    BYTE PTR [ecx-0x6e2ae97c],ah
  41cdc9:	out    0xe3,eax
  41cdcb:	add    BYTE PTR [ebx],ch
  41cdcd:	in     al,dx
  41cdce:	ja     0x41cd8b
  41cdd0:	imul   eax,DWORD PTR [ecx+0x57f3c644],0x3f
  41cdd7:	push   eax
  41cdd8:	push   esi
  41cdd9:	stc    
  41cdda:	out    dx,al
  41cddb:	fldenv [esi+0x3313da3b]
  41cde1:	mov    esi,0x6001e8d8
  41cde6:	rcl    BYTE PTR [esi],1
  41cde8:	add    BYTE PTR [edi+esi*8-0x39],dl
  41cdec:	iret   
  41cded:	shl    DWORD PTR [ebx+0x6e],1
  41cdf0:	gs mov edi,0xd5124f46
  41cdf6:	mov    cl,bh
  41cdf8:	jns    0x41cd96
  41cdfa:	xor    ecx,DWORD PTR [eax+0x50]
  41cdfd:	inc    edx
  41cdfe:	dec    ecx
  41cdff:	and    eax,0x224c536
  41ce04:	or     BYTE PTR [ecx-0x5c29f74d],dh
  41ce0a:	mov    ?,WORD PTR [ebx+0x48c46296]
  41ce10:	pop    esp
  41ce11:	xor    al,0xc0
  41ce13:	sub    bl,BYTE PTR [eax+ecx*8]
  41ce16:	scas   eax,DWORD PTR es:[edi]
  41ce17:	push   edi
  41ce18:	or     ah,BYTE PTR ds:0xef0bf237
  41ce1e:	mov    ecx,0x47764701
  41ce23:	scas   al,BYTE PTR es:[edi]
  41ce24:	imul   edi,ecx,0x69c1d754
  41ce2a:	in     al,dx
  41ce2b:	popf   
  41ce2c:	mov    al,0xd1
  41ce2e:	rcl    DWORD PTR [edx+0x11066a4b],cl
  41ce34:	mov    ebp,0x416c93d9
  41ce39:	out    0x2c,eax
  41ce3b:	cmp    ch,0xf7
  41ce3e:	lods   eax,DWORD PTR ds:[esi]
  41ce3f:	push   eax
  41ce40:	xchg   esi,eax
  41ce41:	or     esp,edi
  41ce43:	and    BYTE PTR [edx-0x75447bd4],dl
  41ce49:	out    dx,eax
  41ce4a:	popf   
  41ce4b:	push   esp
  41ce4c:	es jle 0x41cdfe
  41ce4f:	jo     0x41cdf2
  41ce51:	xchg   esp,eax
  41ce52:	pop    ss
  41ce53:	xor    eax,0xcc272f6e
  41ce58:	xchg   bp,ax
  41ce5a:	test   al,0x72
  41ce5c:	jmp    0x51c2:0x90a5ea0
  41ce63:	or     BYTE PTR [ecx-0x4bd3518d],cl
  41ce69:	sub    DWORD PTR [esi],esp
  41ce6b:	wrmsr  
  41ce6d:	imul   ebx,DWORD PTR [esi-0x13],0xc9f989cb
  41ce74:	push   0xb5f161ee
  41ce79:	mov    ds:0x40c398b3,al
  41ce7e:	mov    dh,0x90
  41ce80:	enter  0x3164,0x57
  41ce84:	lods   eax,DWORD PTR ds:[esi]
  41ce85:	rcr    DWORD PTR [esi],1
  41ce87:	mov    ebx,0x48abdbf6
  41ce8c:	fcom   DWORD PTR [esi+0x1976dc6a]
  41ce92:	and    dh,BYTE PTR [esi+0x6838c165]
  41ce98:	push   ebp
  41ce99:	inc    edi
  41ce9a:	adc    BYTE PTR [ebx+0x669f8752],dh
  41cea0:	push   es
  41cea1:	sbb    al,BYTE PTR [edx+edi*2]
  41cea4:	out    dx,eax
  41cea5:	push   ecx
  41cea6:	(bad)  
  41cea7:	retf   
  41cea8:	ss mov eax,0xcce9a7f3
  41ceae:	jecxz  0x41cf00
  41ceb0:	xchg   esi,eax
  41ceb1:	mov    esp,0xae7a1c9
  41ceb6:	je     0x41cee7
  41ceb8:	inc    esi
  41ceb9:	std    
  41ceba:	dec    esp
  41cebb:	(bad)  
  41cebc:	adc    eax,0x49eb37c7
  41cec1:	lds    esp,FWORD PTR [ecx]
  41cec3:	adc    eax,0x982e9c07
  41cec8:	sub    al,0x58
  41ceca:	mov    bh,0x41
  41cecc:	int    0x6b
  41cece:	hlt    
  41cecf:	sub    al,0x65
  41ced1:	mov    ds:0x88d0e107,eax
  41ced6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced7:	lahf   
  41ced8:	into   
  41ced9:	js     0x41ce94
  41cedb:	jmp    0xd9b9:0xe83a1c48
  41cee2:	loope  0x41cf25
  41cee4:	hlt    
  41cee5:	push   ss
  41cee6:	xor    DWORD PTR [ecx+0x2b52f086],esp
  41ceec:	data16 and al,0x44
  41ceef:	add    edi,DWORD PTR [eax+0x33bf97f5]
  41cef5:	dec    esi
  41cef6:	pop    esp
  41cef7:	mov    BYTE PTR ds:0x4e44e902,ah
  41cefd:	push   cs
  41cefe:	clc    
  41ceff:	cmp    al,0xa
  41cf01:	dec    ebx
  41cf02:	imul   eax,eax,0x241b707f
  41cf08:	xchg   ecx,eax
  41cf09:	inc    esi
  41cf0a:	jge    0x41cec4
  41cf0c:	xchg   BYTE PTR [ecx-0x40],bl
  41cf0f:	repz fnstsw WORD PTR [edx+ebx*2-0x51]
  41cf14:	push   edx
  41cf15:	aad    0x26
  41cf17:	leave  
  41cf18:	pop    esi
  41cf19:	bound  esp,QWORD PTR [ecx*4+0x4d25994]
  41cf20:	lahf   
  41cf21:	imul   esi,ebp,0x6e383b85
  41cf27:	sar    BYTE PTR [ebp+0x266289d6],0x28
  41cf2e:	push   es
  41cf2f:	mov    ah,0x0
  41cf31:	or     bl,bl
  41cf33:	jecxz  0x41cf17
  41cf35:	pop    esp
  41cf36:	std    
  41cf37:	sti    
  41cf38:	xchg   ebx,eax
  41cf39:	fldcw  WORD PTR [edi+0x6c]
  41cf3c:	ds ror ecx,0xa7
  41cf40:	mov    bl,0xd2
  41cf42:	jne    0x41cfb5
  41cf44:	ss pusha 
  41cf46:	jae    0x41cf3c
  41cf48:	popf   
  41cf49:	(bad)  
  41cf4a:	mov    bh,0xf4
  41cf4c:	and    al,0x1e
  41cf4e:	leave  
  41cf4f:	loop   0x41cf17
  41cf51:	and    DWORD PTR [ebp+0x3],ebp
  41cf54:	js     0x41cfcd
  41cf56:	xor    BYTE PTR [ebp+0x397f988e],cl
  41cf5c:	call   0x5c91:0x275b7067
  41cf63:	inc    esi
  41cf64:	(bad)  
  41cf65:	xlat   BYTE PTR ds:[ebx]
  41cf66:	test   esp,eax
  41cf68:	in     al,0x5b
  41cf6a:	nop
  41cf6b:	mov    edi,DWORD PTR [ecx-0x2668387d]
  41cf71:	fild   WORD PTR [ecx+eiz*1+0x995ab61]
  41cf78:	push   esp
  41cf79:	imul   edx,DWORD PTR [edx],0x1e
  41cf7c:	fadd   DWORD PTR [edx]
  41cf7e:	xlat   BYTE PTR ds:[ebx]
  41cf7f:	mov    bl,0xfd
  41cf81:	inc    ebp
  41cf82:	popa   
  41cf83:	pop    ds
  41cf84:	or     ecx,ebp
  41cf86:	push   edx
  41cf87:	and    ebx,DWORD PTR [edi]
  41cf89:	cmp    BYTE PTR [ebp+0x52],bh
  41cf8c:	loop   0x41cf16
  41cf8e:	pcmpeqb mm0,mm0
  41cf91:	push   esi
  41cf92:	popf   
  41cf93:	mov    ch,0xec
  41cf95:	pop    edi
  41cf96:	jmp    0x907490be
  41cf9b:	div    ch
  41cf9d:	mov    cl,0x57
  41cf9f:	pop    esp
  41cfa0:	jbe    0x41cfd4
  41cfa2:	sub    esp,DWORD PTR ds:0x1977a481
  41cfa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfa9:	outs   dx,DWORD PTR ds:[esi]
  41cfaa:	pop    ss
  41cfab:	lds    edi,FWORD PTR [esi+0x3a]
  41cfae:	mov    ebp,0x8b0cd96a
  41cfb3:	ins    BYTE PTR es:[edi],dx
  41cfb4:	mov    ebp,0x4f6743fe
  41cfb9:	xchg   esi,eax
  41cfba:	xchg   ebx,eax
  41cfbb:	mov    ds:0x47614e08,al
  41cfc0:	adc    ebp,DWORD PTR [esi+0x650aac2c]
  41cfc6:	and    al,0x94
  41cfc8:	mov    bl,0x41
  41cfca:	out    dx,al
  41cfcb:	(bad)  
  41cfcc:	iret   
  41cfcd:	pop    eax
  41cfce:	dec    ebx
  41cfcf:	mov    ah,0x10
  41cfd1:	mov    eax,ds:0xc3022c8a
  41cfd6:	sub    DWORD PTR [edx+0x2aee056a],edx
  41cfdc:	loope  0x41cfc9
  41cfde:	jno    0x41d05a
  41cfe0:	push   edi
  41cfe1:	lock add al,0x80
  41cfe4:	adc    eax,0x4176324a
  41cfe9:	push   0xbea8ba0a
  41cfee:	cmp    bl,BYTE PTR [esi-0x37d855fa]
  41cff4:	shr    BYTE PTR [eax+ecx*1-0x1f],cl
  41cff8:	test   al,cl
  41cffa:	outs   dx,DWORD PTR ds:[esi]
  41cffb:	xchg   ebp,eax
  41cffc:	out    dx,al
  41cffd:	loope  0x41cfe8
  41cfff:	sub    DWORD PTR ds:0xcc96762f,edx
  41d005:	sub    al,0xbd
  41d007:	jno    0x41cffe
  41d009:	(bad)  
  41d00a:	dec    esi
  41d00b:	jno    0x41d08a
  41d00d:	fsub   st(5),st
  41d00f:	adc    ecx,0x13
  41d012:	sbb    edx,ebp
  41d014:	fild   DWORD PTR [eax]
  41d016:	xlat   BYTE PTR ds:[ebx]
  41d017:	ror    DWORD PTR [ebx+0x71],cl
  41d01a:	mov    bh,0xf1
  41d01c:	jne    0x41cfd1
  41d01e:	xor    eax,0xce613a2a
  41d023:	and    BYTE PTR [esi-0x26],0x35
  41d027:	aam    0xdb
  41d029:	neg    bl
  41d02b:	call   0xaa1c:0xc1480907
  41d032:	mov    dh,0xf7
  41d034:	jl     0x41d080
  41d036:	pop    esp
  41d037:	pop    edx
  41d038:	dec    esi
  41d039:	rcr    dl,0x83
  41d03c:	sub    eax,0x527a0c73
  41d041:	jno    0x41d0a9
  41d043:	mov    ecx,0xa1f165ed
  41d048:	cmp    ebx,esi
  41d04a:	and    BYTE PTR [ecx],bl
  41d04c:	push   edi
  41d04d:	arpl   WORD PTR [esi+ebx*1-0x1aef8e40],dx
  41d054:	inc    esi
  41d055:	gs inc esi
  41d057:	popa   
  41d058:	das    
  41d059:	jmp    0xe2c21f3b
  41d05e:	push   edi
  41d05f:	add    al,0x16
  41d061:	sti    
  41d062:	leave  
  41d063:	test   BYTE PTR [edx-0x34],bl
  41d066:	fcmovu st,st(2)
  41d068:	jmp    0xda6:0xaf360a15
  41d06f:	inc    edx
  41d070:	mov    dl,0x5
  41d072:	(bad)  
  41d073:	push   ds
  41d074:	ins    DWORD PTR es:[edi],dx
  41d075:	aas    
  41d076:	imul   esp,DWORD PTR [edi-0x341fa4bb],0xf7bd3262
  41d080:	push   ebx
  41d081:	inc    esi
  41d082:	mov    al,ds:0xf4da836a
  41d087:	in     al,0xc5
  41d089:	call   0xc06e:0xa1ad7aac
  41d090:	into   
  41d091:	retf   
  41d092:	retf   0xc5fe
  41d095:	cs sub eax,0x1a07f3fb
  41d09b:	dec    edi
  41d09c:	fdiv   st,st(0)
  41d09e:	jnp    0x41d0f5
  41d0a0:	adc    dl,al
  41d0a2:	xor    DWORD PTR [eax+0x25],ecx
  41d0a5:	fbld   TBYTE PTR [edx+0x62]
  41d0a8:	in     eax,0xbc
  41d0aa:	pop    es
  41d0ab:	add    al,0x1d
  41d0ad:	fisubr DWORD PTR [ebp+0x6e]
  41d0b0:	ficom  WORD PTR [eax]
  41d0b2:	cmp    bh,BYTE PTR [edx+0x28]
  41d0b5:	jecxz  0x41d0ef
  41d0b7:	mov    edi,0x65c61935
  41d0bc:	in     eax,0x51
  41d0be:	mov    ecx,DWORD PTR [edi+0x17d9aea8]
  41d0c4:	test   DWORD PTR [eax+ebx*2+0x41868cbc],esi
  41d0cb:	sbb    eax,0x651b577c
  41d0d0:	or     BYTE PTR ds:0xf3643c85,ah
  41d0d6:	mov    ebx,0x8ce172eb
  41d0db:	xchg   DWORD PTR ds:0x1f69089f,ebp
  41d0e1:	gs aaa 
  41d0e3:	cmp    al,0xd
  41d0e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0e6:	and    al,0x2
  41d0e8:	loopne 0x41d0b5
  41d0ea:	mov    ss,WORD PTR [esi+0x3a35e959]
  41d0f0:	retf   0x6f5c
  41d0f3:	push   ds
  41d0f4:	into   
  41d0f5:	sbb    bl,BYTE PTR [edx-0x48]
  41d0f8:	cmp    bl,bh
  41d0fa:	sub    ecx,DWORD PTR [ebp+0x4d]
  41d0fd:	ret    0xea3b
  41d100:	jne    0x41d10d
  41d102:	xchg   BYTE PTR [edx+ebp*8-0x556fc51c],dl
  41d109:	adc    DWORD PTR [edi-0x7638f7d2],esp
  41d10f:	mov    esp,0x362457d0
  41d114:	(bad)  
  41d115:	fst    QWORD PTR [ebx]
  41d117:	or     BYTE PTR [edx],ah
  41d119:	fmul   st(4),st
  41d11b:	jnp    0x41d184
  41d11d:	push   esi
  41d11e:	je     0x41d0aa
  41d120:	sub    DWORD PTR [ebx+eax*4+0x534dcd69],ecx
  41d127:	inc    esi
  41d128:	sbb    BYTE PTR [ecx+0x42395427],0xee
  41d12f:	cmp    DWORD PTR [ebx],0xe8fb691f
  41d135:	test   DWORD PTR [ebp-0xe],esi
  41d138:	jl     0x41d132
  41d13a:	les    esp,FWORD PTR [eax]
  41d13c:	jmp    0xf751:0xf34a3ac4
  41d143:	mov    dh,0xc1
  41d145:	mov    eax,0x530bb00b
  41d14a:	add    dl,BYTE PTR [edi]
  41d14c:	test   DWORD PTR [edx],esi
  41d14e:	xchg   esi,eax
  41d14f:	enter  0xda9,0xa9
  41d153:	fs out 0x7c,al
  41d156:	iret   
  41d157:	outs   dx,DWORD PTR ds:[esi]
  41d158:	or     ecx,eax
  41d15a:	bswap  ebp
  41d15c:	mov    bh,0x38
  41d15e:	ret    0xc07e
  41d161:	ins    DWORD PTR es:[edi],dx
  41d162:	mov    WORD PTR [ecx-0x16],ss
  41d165:	mov    esp,0xa6317a92
  41d16a:	sub    ebp,DWORD PTR [ecx]
  41d16c:	push   esi
  41d16d:	test   al,0x8d
  41d16f:	adc    eax,DWORD PTR [esp+esi*2]
  41d172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d173:	out    dx,eax
  41d174:	push   edi
  41d175:	fiadd  WORD PTR [ecx-0x137b6a4b]
  41d17b:	fimul  DWORD PTR [eax+0xe2fa07a]
  41d181:	jne    0x41d19f
  41d183:	aad    0x28
  41d185:	stos   DWORD PTR es:[edi],eax
  41d186:	pop    ebp
  41d187:	in     al,0x8d
  41d189:	inc    eax
  41d18a:	fdivr  DWORD PTR [eax+ecx*2-0x3]
  41d18e:	and    BYTE PTR [ecx+0x7c5baef5],bl
  41d194:	rol    ebp,0x0
  41d197:	imul   ebx,DWORD PTR [edi-0x55c0f4cc],0x46
  41d19e:	xchg   cl,dh
  41d1a0:	(bad)  [edx]
  41d1a2:	xor    ebp,DWORD PTR [edx-0x12ebb7c6]
  41d1a8:	ret    
  41d1a9:	ins    BYTE PTR es:[edi],dx
  41d1aa:	ret    
  41d1ab:	sub    DWORD PTR [esi-0x3d8bf299],0xffffffd2
  41d1b2:	add    al,0x96
  41d1b4:	xor    bl,ch
  41d1b6:	lock cwde 
  41d1b8:	(bad)  
  41d1b9:	pop    eax
  41d1ba:	dec    ebx
  41d1bb:	add    BYTE PTR [ecx-0x2b],dl
  41d1be:	jmp    0x4c04079e
  41d1c3:	dec    ebx
  41d1c4:	ret    0xcb50
  41d1c7:	aam    0x62
  41d1c9:	adc    dl,BYTE PTR [eax]
  41d1cb:	and    bl,BYTE PTR [ebp+0x4a]
  41d1ce:	jle    0x41d185
  41d1d0:	mov    ebp,0x23298a6b
  41d1d5:	inc    ecx
  41d1d6:	neg    BYTE PTR [edi-0x1a1e8edf]
  41d1dc:	jne    0x41d217
  41d1de:	lea    ebp,[ecx]
  41d1e0:	jmp    0xfe3378bc
  41d1e5:	(bad)  
  41d1e6:	clc    
  41d1e7:	sbb    al,0xa6
  41d1e9:	jne    0x41d20c
  41d1eb:	pop    ds
  41d1ec:	adc    al,BYTE PTR [ebp+0x63b023b9]
  41d1f2:	dec    edx
  41d1f3:	xor    BYTE PTR [edx],al
  41d1f5:	pop    DWORD PTR cs:[esi+0x43299272]
  41d1fc:	sub    BYTE PTR [edi],ch
  41d1fe:	fst    QWORD PTR [esi]
  41d200:	ja     0x41d1d2
  41d202:	cmp    eax,0xe480654e
  41d207:	popf   
  41d208:	xchg   esp,eax
  41d209:	push   0xffffff9c
  41d20b:	jae    0x41d1af
  41d20d:	in     ax,0x58
  41d210:	fidivr WORD PTR [ebx+0x62a9b0ea]
  41d216:	stos   BYTE PTR es:[edi],al
  41d217:	push   es
  41d218:	mov    ch,BYTE PTR [ebx-0x551c013e]
  41d21e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d21f:	retf   0x7d6a
  41d222:	pusha  
  41d223:	shl    al,1
  41d225:	ret    
  41d226:	sub    dl,dh
  41d228:	movsx  ecx,WORD PTR [eax]
  41d22b:	or     DWORD PTR [esi],0x45b9da01
  41d231:	jecxz  0x41d1e1
  41d233:	aam    0xee
  41d235:	into   
  41d236:	adc    dl,BYTE PTR [ecx-0x52]
  41d239:	or     eax,0x709a1526
  41d23e:	jbe    0x41d291
  41d240:	shr    ecx,1
  41d242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d243:	jno    0x41d24c
  41d245:	repz xor eax,0xecf2aa36
  41d24b:	lods   eax,DWORD PTR ds:[esi]
  41d24c:	xor    BYTE PTR [ecx-0x609f86ec],ch
  41d252:	cwde   
  41d253:	(bad)  
  41d254:	push   edi
  41d255:	or     eax,0xd5f1992e
  41d25a:	ins    DWORD PTR es:[edi],dx
  41d25b:	ffreep st(2)
  41d25d:	enter  0x68db,0xda
  41d261:	cmp    DWORD PTR [ebp+0x58],ecx
  41d264:	retf   
  41d265:	sub    BYTE PTR [edi+ebp*2+0x68],bh
  41d269:	ds cmp al,0x2d
  41d26c:	dec    ecx
  41d26d:	push   ds
  41d26e:	sahf   
  41d26f:	rcl    BYTE PTR [eax],cl
  41d271:	sbb    DWORD PTR [ebp+eax*1-0x77],edx
  41d275:	frstor [ebx+0x14]
  41d278:	out    0x12,al
  41d27a:	repz mov bh,0xef
  41d27d:	push   bp
  41d27f:	sub    DWORD PTR [eax],ebp
  41d281:	shr    DWORD PTR [ecx-0x79],1
  41d284:	sub    ebp,DWORD PTR [esp+ecx*2+0x3f33beda]
  41d28b:	rcr    DWORD PTR [edx],0x4c
  41d28e:	mov    esp,0x9f9c26df
  41d293:	sbb    DWORD PTR [esi*2+0x4924d07e],edx
  41d29a:	jp     0x41d31b
  41d29c:	sbb    eax,esp
  41d29e:	je     0x41d26d
  41d2a0:	ror    DWORD PTR [edi+0x1d],1
  41d2a3:	mov    edx,0x2b61da76
  41d2a8:	and    edi,DWORD PTR [ebx]
  41d2aa:	adc    BYTE PTR [edi-0x1f4d7596],ah
  41d2b0:	mul    DWORD PTR [edx+edx*1-0x8]
  41d2b4:	xor    eax,0xd99e02cb
  41d2b9:	nop
  41d2ba:	call   0x1dd0:0x9dda84a8
  41d2c1:	ret    0xa88e
  41d2c4:	je     0x41d2ea
  41d2c6:	mov    ah,ch
  41d2c8:	push   eax
  41d2c9:	sub    ebp,DWORD PTR [edi-0xb]
  41d2cc:	xchg   ebx,eax
  41d2cd:	ror    BYTE PTR [edx],1
  41d2cf:	xchg   edi,eax
  41d2d0:	mov    al,0x79
  41d2d2:	adc    eax,0xed37fc10
  41d2d7:	stos   BYTE PTR es:[edi],al
  41d2d8:	jecxz  0x41d2d9
  41d2da:	pushf  
  41d2db:	ret    0x9055
  41d2de:	imul   BYTE PTR [edx-0x31]
  41d2e1:	cli    
  41d2e2:	addr16 out 0xa9,eax
  41d2e5:	sahf   
  41d2e6:	ror    ebp,1
  41d2e8:	push   ebp
  41d2e9:	pop    esp
  41d2ea:	adc    ebx,esp
  41d2ec:	pop    ebp
  41d2ed:	cld    
  41d2ee:	xor    dl,bh
  41d2f0:	jl     0x41d2b1
  41d2f2:	mov    cl,BYTE PTR [eax+eax*4+0x3]
  41d2f6:	push   cs
  41d2f7:	pop    ebp
  41d2f8:	call   0x195c:0x9524a58c
  41d2ff:	in     eax,0x9
  41d301:	cmp    esp,DWORD PTR [esi]
  41d303:	sub    DWORD PTR [edi],esp
  41d305:	lock fdiv DWORD PTR [ecx]
  41d308:	xchg   esi,eax
  41d309:	inc    esi
  41d30a:	mov    DWORD PTR [edx+0x23],edi
  41d30d:	adc    eax,0xffec8caf
  41d312:	push   esp
  41d313:	inc    ebp
  41d314:	or     eax,0x74cd6b32
  41d319:	lods   ax,WORD PTR ds:[esi]
  41d31b:	mov    eax,ds:0xd68bdecb
  41d320:	push   0x88ce12a6
  41d325:	add    eax,0xb8e5ad56
  41d32a:	lds    edx,FWORD PTR [ebx-0x27fc8df6]
  41d330:	push   ds
  41d331:	arpl   WORD PTR [eax+0x5a],cx
  41d334:	xchg   ebp,eax
  41d336:	inc    eax
  41d337:	dec    ebp
  41d338:	cmp    eax,0x1e925b79
  41d33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d33e:	das    
  41d33f:	mov    gs,WORD PTR [ecx+edi*1-0x1f59b5fe]
  41d346:	mov    ds:0x6cdcc9fc,al
  41d34b:	mov    eax,ds:0x136266a7
  41d350:	pop    edx
  41d351:	sub    edi,DWORD PTR [eax+0x6ceb0561]
  41d357:	in     al,0x19
  41d359:	int3   
  41d35a:	inc    edi
  41d35b:	test   al,ah
  41d35d:	xchg   edx,eax
  41d35e:	js     0x41d39c
  41d360:	mov    eax,ds:0x28f1c844
  41d365:	inc    eax
  41d366:	(bad)  
  41d367:	scas   eax,DWORD PTR es:[edi]
  41d368:	jno    0x41d353
  41d36a:	popf   
  41d36b:	not    BYTE PTR [ebx+0x7d8ebe4b]
  41d371:	scas   eax,DWORD PTR es:[edi]
  41d372:	js     0x41d3c9
  41d374:	nop
  41d375:	out    dx,eax
  41d376:	adc    DWORD PTR [ecx+0x693d9c40],ebp
  41d37c:	call   0x7605:0x51c49675
  41d383:	adc    eax,0x33c0b666
  41d388:	retf   
  41d389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d38a:	xlat   BYTE PTR ds:[ebx]
  41d38b:	push   eax
  41d38c:	stos   BYTE PTR es:[edi],al
  41d38d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d38e:	or     al,0x29
  41d390:	repnz aam 0x50
  41d393:	test   eax,0x918df788
  41d398:	xchg   edx,eax
  41d399:	and    BYTE PTR [edx],bl
  41d39b:	pop    ebp
  41d39c:	mov    ebp,DWORD PTR [eax+0x450117c5]
  41d3a2:	dec    ecx
  41d3a3:	jg     0x41d3ca
  41d3a5:	push   0xf3f9c289
  41d3aa:	dec    eax
  41d3ab:	adc    DWORD PTR [esi+0x32],ecx
  41d3ae:	xchg   esi,eax
  41d3af:	mov    eax,ds:0x6f097b84
  41d3b4:	rcr    DWORD PTR ds:0x9f459c06,0x98
  41d3bb:	and    BYTE PTR [ebx],dh
  41d3bd:	enter  0xec62,0x1d
  41d3c1:	mov    ebx,0x943b70ff
  41d3c6:	pop    ebp
  41d3c7:	xchg   esp,eax
  41d3c8:	fs pop ss
  41d3ca:	xchg   ecx,eax
  41d3cb:	lods   al,BYTE PTR ds:[esi]
  41d3cc:	inc    esi
  41d3cd:	aad    0x8f
  41d3cf:	aad    0xd3
  41d3d1:	or     al,0x53
  41d3d3:	int3   
  41d3d4:	adc    esp,DWORD PTR [ecx+0xb02cda6]
  41d3da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3db:	mov    WORD PTR ds:0x4b6739,fs
  41d3e1:	enter  0x9a1d,0xfa
  41d3e5:	push   esp
  41d3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3e7:	(bad)  
  41d3e8:	sub    eax,0xdbdce1b7
  41d3ed:	pop    ecx
  41d3ee:	adc    eax,0x2286789a
  41d3f3:	pop    ds
  41d3f4:	jle    0x41d3fc
  41d3f6:	in     eax,0x1f
  41d3f8:	or     DWORD PTR [esi],esi
  41d3fa:	popa   
  41d3fb:	vminps xmm6,xmm6,xmm7
  41d3ff:	jo     0x41d44f
  41d401:	clc    
  41d402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d403:	dec    esp
  41d404:	arpl   WORD PTR [edx],cx
  41d406:	cmp    BYTE PTR [edx-0x70217fe2],dh
  41d40c:	cmc    
  41d40d:	and    eax,edx
  41d40f:	mov    WORD PTR [ecx+ebp*4-0x26afc33d],cs
  41d416:	inc    ecx
  41d417:	aam    0xde
  41d419:	adc    DWORD PTR [edi-0x6dced462],edx
  41d41f:	xchg   edi,eax
  41d420:	popf   
  41d421:	push   0x19
  41d423:	lahf   
  41d424:	mov    edi,0x478be0a2
  41d429:	js     0x41d497
  41d42b:	out    dx,al
  41d42c:	sbb    BYTE PTR [edi-0x6f],0x17
  41d430:	popf   
  41d431:	xchg   ebx,eax
  41d432:	dec    esp
  41d433:	jl     0x41d3d8
  41d435:	mov    al,ds:0xd5c84e13
  41d43a:	ja     0x41d3c0
  41d43c:	adc    al,0xc9
  41d43e:	mov    cl,ch
  41d440:	lock add dl,bl
  41d443:	mov    edx,DWORD PTR [esi]
  41d445:	jecxz  0x41d447
  41d447:	push   ebp
  41d448:	push   0x2cea8956
  41d44d:	in     eax,dx
  41d44e:	outs   dx,BYTE PTR ds:[esi]
  41d44f:	xor    DWORD PTR [esi+esi*4+0x6c],ecx
  41d453:	nop
  41d454:	mov    eax,0xb66ed63d
  41d459:	cli    
  41d45a:	out    dx,al
  41d45b:	repnz xchg ebx,eax
  41d45d:	data16 outs dx,BYTE PTR ds:[esi]
  41d45f:	(bad)  
  41d460:	(bad)  
  41d461:	mov    ah,cl
  41d463:	inc    eax
  41d464:	jle    0x41d4cc
  41d466:	cdq    
  41d467:	jmp    0x44398596
  41d46c:	inc    eax
  41d46d:	inc    edi
  41d46e:	shl    DWORD PTR es:[ebx],0x19
  41d472:	mov    WORD PTR [esi-0x24],gs
  41d475:	mov    ebx,DWORD PTR [edx]
  41d477:	and    BYTE PTR [edx-0x31],ch
  41d47a:	mov    dh,0x1e
  41d47c:	nop
  41d47d:	jmp    0xfb9c:0xaa8cf786
  41d484:	add    al,0x1a
  41d486:	imul   eax,DWORD PTR [esi+esi*1],0x11a707bf
  41d48d:	cmp    ebp,DWORD PTR [ebx]
  41d48f:	daa    
  41d490:	imul   esi,DWORD PTR [eax],0x1f
  41d493:	lds    edi,FWORD PTR [ebx+0x36]
  41d496:	xchg   BYTE PTR [edi+ebx*8],al
  41d499:	xlat   BYTE PTR ds:[ebx]
  41d49a:	imul   eax,ebp,0x93f753b5
  41d4a0:	retf   
  41d4a1:	xchg   ecx,eax
  41d4a2:	scas   al,BYTE PTR es:[edi]
  41d4a3:	les    edx,FWORD PTR [edx+0x3a]
  41d4a6:	inc    edi
  41d4a7:	loopne 0x41d481
  41d4a9:	add    al,0xfd
  41d4ab:	adc    bl,bh
  41d4ad:	dec    esp
  41d4ae:	jo     0x41d4e1
  41d4b0:	pop    es
  41d4b1:	mov    bl,0x53
  41d4b3:	mov    WORD PTR [ecx-0x31c052c2],fs
  41d4b9:	pop    esi
  41d4ba:	jg     0x41d46b
  41d4bc:	adc    eax,0x2209e40c
  41d4c1:	mov    BYTE PTR es:[ecx],ah
  41d4c4:	out    dx,eax
  41d4c5:	in     al,0x2c
  41d4c7:	fisubr DWORD PTR [ebx-0x464b0180]
  41d4cd:	in     al,0xfd
  41d4cf:	(bad)  [edx]
  41d4d1:	add    al,0x42
  41d4d3:	adc    al,0xfc
  41d4d5:	cmp    edi,ebx
  41d4d7:	je     0x41d523
  41d4d9:	pop    edx
  41d4da:	rcr    dh,1
  41d4dc:	sahf   
  41d4dd:	push   ss
  41d4de:	mov    bl,0x9b
  41d4e0:	sub    al,0xa3
  41d4e2:	and    dl,BYTE PTR [ebp-0x589f67f5]
  41d4e8:	adc    esi,edi
  41d4ea:	cmp    eax,DWORD PTR [ecx]
  41d4ec:	or     al,bl
  41d4ee:	pop    es
  41d4ef:	in     eax,dx
  41d4f0:	retf   
  41d4f1:	and    edx,ebp
  41d4f3:	xor    dh,bh
  41d4f5:	mov    edi,0xfb4f5cea
  41d4fa:	retf   
  41d4fb:	imul   ebx,DWORD PTR [eax+0xc152896],0x6f
  41d502:	cli    
  41d503:	pushf  
  41d504:	inc    edx
  41d505:	cdq    
  41d506:	pop    es
  41d507:	sub    DWORD PTR [edx+0x45],ebp
  41d50a:	jmp    0x4f914f59
  41d50f:	out    0x4d,eax
  41d511:	es jmp edx
  41d514:	in     al,dx
  41d515:	lods   al,BYTE PTR ds:[esi]
  41d516:	outs   dx,BYTE PTR ds:[esi]
  41d517:	iret   
  41d518:	jecxz  0x41d4c1
  41d51a:	sub    al,0x50
  41d51c:	cs retf 0x306b
  41d520:	std    
  41d521:	retf   
  41d522:	sbb    esp,DWORD PTR [ebp+0xd9bb7d0]
  41d528:	ret    
  41d529:	mov    ah,0x2c
  41d52b:	in     eax,dx
  41d52c:	push   0x2a
  41d52e:	push   0xb2fdebeb
  41d533:	push   esp
  41d534:	sahf   
  41d535:	and    bh,bl
  41d537:	xor    BYTE PTR [ecx],bh
  41d539:	ins    BYTE PTR es:[edi],dx
  41d53a:	popa   
  41d53b:	lods   al,BYTE PTR ds:[esi]
  41d53c:	mov    ecx,0xdc967f87
  41d541:	cmp    esi,DWORD PTR [esi]
  41d543:	idiv   BYTE PTR [ebx+0x7e827221]
  41d549:	sub    cl,BYTE PTR [edx-0x2aa90098]
  41d54f:	sar    dl,1
  41d551:	(bad)  
  41d552:	jle    0x41d51b
  41d554:	bound  edi,QWORD PTR [esi-0x5]
  41d557:	div    DWORD PTR [ebp+0x7a821f60]
  41d55d:	outs   dx,DWORD PTR ds:[esi]
  41d55e:	xor    esi,DWORD PTR [ebx]
  41d560:	or     eax,DWORD PTR [ebx+0x2ac8306d]
  41d566:	imul   bh
  41d568:	push   ebx
  41d569:	jp     0x41d599
  41d56b:	dec    DWORD PTR [esi]
  41d56d:	pop    edx
  41d56e:	add    al,0x28
  41d570:	stos   DWORD PTR es:[edi],eax
  41d571:	sub    eax,0x99abfb2b
  41d576:	dec    ebx
  41d577:	mov    cl,0x5f
  41d579:	push   0x9f540cb6
  41d57e:	retf   0xcffe
  41d581:	dec    ebx
  41d582:	push   0x14c1e29b
  41d587:	sub    eax,0x3803fec8
  41d58c:	imul   DWORD PTR [edi-0x31]
  41d58f:	and    eax,0xd43df298
  41d594:	mov    DWORD PTR fs:[edx+0x38],eax
  41d598:	loop   0x41d5d3
  41d59a:	jb     0x41d568
  41d59c:	sbb    DWORD PTR [ecx+0x2],esi
  41d59f:	dec    ebx
  41d5a0:	inc    eax
  41d5a1:	or     ebx,0xe32a9a02
  41d5a7:	fcomp  QWORD PTR [edx]
  41d5a9:	mov    edx,0x63013334
  41d5ae:	cmp    BYTE PTR ss:[edi],dl
  41d5b1:	in     eax,0x56
  41d5b3:	pop    edx
  41d5b4:	mov    edx,gs
  41d5b6:	sub    dh,BYTE PTR [ecx-0x2d905fdf]
  41d5bc:	stc    
  41d5bd:	sar    DWORD PTR [edi+0x41705fd1],0xf4
  41d5c4:	jo     0x41d5f0
  41d5c6:	mov    BYTE PTR [edx-0x7c43d6a1],al
  41d5cc:	in     eax,0xde
  41d5ce:	in     eax,0x4
  41d5d0:	xor    eax,0x5ac4ae1
  41d5d5:	in     eax,dx
  41d5d6:	push   ds
  41d5d7:	call   0xdbc5:0x54ba0a5f
  41d5de:	adc    al,0xf2
  41d5e0:	jbe    0x41d627
  41d5e2:	cmp    eax,0xe39a3046
  41d5e7:	out    dx,al
  41d5e8:	pop    ecx
  41d5e9:	das    
  41d5ea:	adc    bl,ch
  41d5ec:	(bad)  
  41d5ed:	fst    QWORD PTR [ebx-0x7b]
  41d5f0:	ins    BYTE PTR es:[edi],dx
  41d5f1:	push   esp
  41d5f2:	sar    BYTE PTR [eax+0x20da08db],0xd9
  41d5f9:	test   al,0xd2
  41d5fb:	sbb    ah,BYTE PTR [edx+0x47]
  41d5fe:	jmp    0xedb1:0x63cbf457
  41d605:	(bad)  
  41d607:	mov    ch,0xa7
  41d609:	lods   eax,DWORD PTR ds:[esi]
  41d60a:	jmp    0x41d63f
  41d60c:	das    
  41d60d:	jecxz  0x41d60b
  41d60f:	jge    0x41d683
  41d611:	lahf   
  41d612:	nop
  41d613:	nop
  41d614:	jb     0x41d67f
  41d616:	ret    0x621f
  41d619:	cmp    eax,0xc6f97719
  41d61e:	jl     0x41d5b7
  41d620:	xchg   esi,eax
  41d621:	in     al,0xfc
  41d623:	frstor [esi]
  41d625:	inc    ebx
  41d626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d627:	pop    esi
  41d628:	loop   0x41d606
  41d62a:	jbe    0x41d5fc
  41d62c:	(bad)  
  41d62d:	mov    bh,0xbd
  41d62f:	add    BYTE PTR ds:0xd3cfda6,dl
  41d635:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d637:	iret   
  41d638:	or     DWORD PTR [eax],eax
  41d63a:	into   
  41d63b:	in     al,dx
  41d63c:	xor    BYTE PTR [esi],dh
  41d63e:	dec    ebp
  41d63f:	loope  0x41d6a0
  41d641:	aas    
  41d642:	sub    edx,esi
  41d644:	inc    edi
  41d645:	adc    DWORD PTR [ebp+0x23ca91ff],esp
  41d64b:	cdq    
  41d64c:	lods   al,BYTE PTR ds:[esi]
  41d64d:	cmc    
  41d64e:	pop    esp
  41d64f:	in     eax,0x76
  41d651:	mov    esp,0xe3962b72
  41d656:	mov    esi,0x16c61f18
  41d65b:	lahf   
  41d65c:	jae    0x41d661
  41d65e:	mov    ds:0x97538cf,eax
  41d663:	mov    eax,ds:0x7e61c6e3
  41d668:	fist   WORD PTR [edx+0x381d9c3b]
  41d66e:	mov    edi,0xe29bf149
  41d673:	mov    WORD PTR [esi-0x7971205b],ds
  41d679:	adc    dh,ah
  41d67b:	shl    ecx,1
  41d67d:	test   DWORD PTR [ecx+ecx*1-0x59],ebx
  41d681:	sbb    al,0x62
  41d683:	cld    
  41d684:	xchg   ecx,eax
  41d685:	jb     0x41d68a
  41d687:	mov    ecx,DWORD PTR [edx-0x42]
  41d68a:	in     al,dx
  41d68b:	cdq    
  41d68c:	sbb    edx,DWORD PTR [edx+0x57]
  41d68f:	push   cs
  41d690:	mov    ch,0x4b
  41d692:	shl    ebp,cl
  41d694:	xor    eax,0x89a4a972
  41d699:	js     0x41d676
  41d69b:	call   DWORD PTR [edi-0x30a50acd]
  41d6a1:	adc    al,0xb0
  41d6a3:	mov    eax,ds:0x9eff70ed
  41d6a8:	or     al,0xe8
  41d6aa:	pop    ebx
  41d6ab:	push   ebx
  41d6ac:	push   ds
  41d6ad:	mov    eax,ds:0x5d9b069a
  41d6b2:	cmp    eax,0x3f6a110
  41d6b7:	paddsw mm4,QWORD PTR [eax+ebx*2+0x3dccdfee]
  41d6bf:	fwait
  41d6c0:	(bad)  
  41d6c1:	sbb    eax,0xa3df1c4c
  41d6c6:	pop    esp
  41d6c7:	and    al,0x63
  41d6c9:	pushf  
  41d6ca:	ss inc esi
  41d6cc:	inc    ebx
  41d6cd:	in     eax,dx
  41d6ce:	jo     0x41d707
  41d6d0:	mov    ?,WORD PTR [esp+eiz*8]
  41d6d3:	push   esp
  41d6d4:	xor    BYTE PTR [ebx-0x4e9abd5d],0x51
  41d6db:	and    BYTE PTR [esi+0x2cde4509],0x4e
  41d6e2:	nop
  41d6e3:	mov    eax,0x567eb140
  41d6e8:	push   ebx
  41d6e9:	fs push ebx
  41d6eb:	gs pop ecx
  41d6ed:	into   
  41d6ee:	call   0x2b66499
  41d6f3:	cs xchg ebp,eax
  41d6f5:	not    edi
  41d6f7:	test   al,0x2a
  41d6f9:	jecxz  0x41d690
  41d6fb:	push   cs
  41d6fc:	cmp    BYTE PTR [ebx+0x183e4657],0x1c
  41d703:	dec    ebp
  41d704:	in     al,dx
  41d705:	adc    BYTE PTR [esi-0x6e],dl
  41d708:	lea    ebp,[edi]
  41d70a:	in     al,0xdd
  41d70c:	xlat   BYTE PTR ds:[ebx]
  41d70d:	stos   DWORD PTR es:[edi],eax
  41d70e:	mov    BYTE PTR [ecx-0xd3bf338],dh
  41d714:	xchg   ebx,eax
  41d715:	push   ebx
  41d716:	repnz and al,0x8e
  41d719:	mov    ebx,0x5c3b22ed
  41d71e:	mov    ah,0x62
  41d720:	pop    es
  41d721:	adc    eax,0x15045b64
  41d726:	lock popa 
  41d728:	xor    dl,BYTE PTR [ebx]
  41d72a:	sub    al,0x78
  41d72c:	and    eax,0x1dcb2ce8
  41d731:	add    al,0xc0
  41d733:	not    BYTE PTR [ebx+0x26]
  41d736:	repnz in al,0x96
  41d739:	sbb    dh,BYTE PTR [edx-0x322b7027]
  41d73f:	sbb    BYTE PTR [esi],ah
  41d741:	add    BYTE PTR [eax],0xae
  41d744:	dec    eax
  41d745:	jo     0x41d6cf
  41d747:	fs mov eax,0xab2336b5
  41d74d:	adc    eax,0xfd05b15d
  41d752:	or     BYTE PTR [eax+edi*2],dh
  41d755:	push   es
  41d756:	or     ch,dh
  41d758:	push   ebx
  41d759:	es nop
  41d75b:	ret    
  41d75c:	fmul   QWORD PTR [edx+ebp*2]
  41d75f:	test   BYTE PTR [ecx-0x72],bl
  41d762:	mov    eax,0xfac613ab
  41d767:	leave  
  41d768:	pushf  
  41d769:	push   eax
  41d76a:	outs   dx,BYTE PTR ds:[esi]
  41d76b:	mul    BYTE PTR [ecx]
  41d76d:	cmp    ecx,edi
  41d76f:	jecxz  0x41d74a
  41d771:	xchg   ecx,eax
  41d772:	adc    al,0xe4
  41d774:	jmp    0x3ff6:0x19611f38
  41d77b:	and    al,0x87
  41d77d:	mov    ds:0xf19d3435,eax
  41d782:	jge    0x41d771
  41d784:	add    BYTE PTR [ebx-0x1b],al
  41d787:	xchg   edx,eax
  41d788:	add    BYTE PTR [esi+ebp*4-0x1a161fb3],cl
  41d78f:	mov    bl,BYTE PTR [ecx+ecx*4-0x65af1c0b]
  41d796:	xor    eax,0xb1a46de5
  41d79b:	mov    ds:0x9d5b94c9,al
  41d7a0:	jnp    0x41d75d
  41d7a2:	ds sbb eax,edi
  41d7a5:	int    0x97
  41d7a7:	test   eax,0x1866e6dd
  41d7ac:	sub    al,0x7a
  41d7ae:	fwait
  41d7af:	pop    es
  41d7b0:	pop    es
  41d7b1:	mov    eax,ds:0xfd7803c7
  41d7b6:	les    ebx,FWORD PTR [ebx+ebx*2+0x6a]
  41d7ba:	sub    edx,DWORD PTR [ecx*8+0x38cc97ba]
  41d7c1:	frstpm(287 only) 
  41d7c3:	jge    0x41d805
  41d7c5:	inc    di
  41d7c7:	cmp    eax,0x63d7f2a5
  41d7cc:	and    eax,0x3045cf99
  41d7d1:	mov    ebx,0x4b9a66c4
  41d7d6:	adc    dl,al
  41d7d8:	mov    bl,0x57
  41d7da:	jns    0x41d7b6
  41d7dc:	leave  
  41d7dd:	jmp    0x41d78d
  41d7df:	(bad)  
  41d7e0:	mov    eax,ds:0xa064138f
  41d7e5:	inc    edx
  41d7e6:	xchg   edi,eax
  41d7e7:	bound  ebp,QWORD PTR [esp+edx*1+0x557ec42c]
  41d7ee:	enter  0x6edf,0xa2
  41d7f2:	inc    edx
  41d7f3:	push   eax
  41d7f4:	gs fs jecxz 0x41d83a
  41d7f8:	jp     0x41d81c
  41d7fa:	test   al,0x1
  41d7fc:	jno    0x41d826
  41d7fe:	jnp    0x41d87d
  41d800:	jne    0x41d78e
  41d802:	lds    ebx,FWORD PTR [ebp-0x6b]
  41d805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d806:	mov    WORD PTR [ecx+0x47],fs
  41d809:	and    al,0x69
  41d80b:	cmp    BYTE PTR [ebx+0x56],bh
  41d80e:	iret   
  41d80f:	(bad)  [ebp+0x230ad66a]
  41d815:	shl    DWORD PTR ds:0xe1aa789,0xe0
  41d81c:	ss push cs
  41d81e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d81f:	push   ss
  41d820:	call   0xdbce:0x5295a4f7
  41d827:	mov    bl,0xf9
  41d829:	repz push ss
  41d82b:	retf   
  41d82c:	push   0x508c1667
  41d831:	and    BYTE PTR [eax-0x456e342c],bh
  41d837:	sub    ch,BYTE PTR [ebx]
  41d839:	cmp    DWORD PTR [ebx-0x1bfd78bd],0x7d924552
  41d843:	jge    0x41d862
  41d845:	jae    0x41d81c
  41d847:	or     eax,0xa52fd354
  41d84c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d84d:	sub    al,0xb9
  41d84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d850:	jno    0x41d89d
  41d852:	retf   
  41d853:	mov    ds:0xf6bcb0e7,eax
  41d858:	sbb    ch,0xf2
  41d85b:	xchg   esi,eax
  41d85c:	add    dh,BYTE PTR [ebp-0x2c]
  41d85f:	push   0x3dbdad61
  41d864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d865:	jmp    0xb039:0xa2206d8d
  41d86c:	cmp    DWORD PTR [edx+0x1179ba02],edi
  41d872:	test   bl,dl
  41d874:	and    eax,0x39e07656
  41d879:	in     al,0x8a
  41d87b:	xchg   ecx,eax
  41d87c:	adc    esp,DWORD PTR [ebx+0x17d79100]
  41d882:	cmp    al,0xd6
  41d884:	ins    BYTE PTR es:[edi],dx
  41d885:	pusha  
  41d886:	cmp    al,0x1c
  41d888:	loope  0x41d883
  41d88a:	fcomp  st(2)
  41d88c:	stos   BYTE PTR es:[edi],al
  41d88d:	icebp  
  41d88e:	fistp  WORD PTR cs:[ebx+0x241e359a]
  41d895:	or     esi,ecx
  41d897:	js     0x41d860
  41d899:	jb     0x41d8e0
  41d89b:	push   eax
  41d89c:	repnz cld 
  41d89e:	fbstp  TBYTE PTR [edi+0x3bab4786]
  41d8a4:	(bad)  
  41d8a5:	pop    esp
  41d8a6:	xchg   ebp,eax
  41d8a7:	jb     0x41d829
  41d8a9:	idiv   BYTE PTR [edx-0x33]
  41d8ac:	cdq    
  41d8ad:	ss pop ebp
  41d8af:	iret   
  41d8b0:	popf   
  41d8b1:	mov    eax,ds:0x7777d698
  41d8b6:	push   ebx
  41d8b7:	cmp    eax,0x3d31e852
  41d8bc:	arpl   si,di
  41d8be:	lods   eax,DWORD PTR ds:[esi]
  41d8bf:	lods   eax,DWORD PTR ds:[esi]
  41d8c0:	jae    0x41d892
  41d8c2:	out    0x43,eax
  41d8c4:	out    dx,eax
  41d8c5:	ins    DWORD PTR es:[edi],dx
  41d8c6:	in     al,dx
  41d8c7:	lahf   
  41d8c8:	nop
  41d8c9:	cmc    
  41d8ca:	mov    ah,0xa2
  41d8cc:	jecxz  0x41d8eb
  41d8ce:	mov    ds:0x27610e62,eax
  41d8d3:	arpl   WORD PTR [ebx-0x4273694b],ax
  41d8d9:	lea    ecx,[ecx]
  41d8db:	shr    DWORD PTR [esi+0x75],0xcb
  41d8df:	(bad)  [edx]
  41d8e1:	loope  0x41d8a1
  41d8e3:	inc    esi
  41d8e4:	add    BYTE PTR [ecx+0x4c],0x28
  41d8e8:	xchg   ebx,eax
  41d8e9:	xchg   esp,eax
  41d8ea:	pop    edi
  41d8eb:	fbstp  TBYTE PTR [ebx+0x68fc2c03]
  41d8f1:	fist   WORD PTR [ebx-0xf6f5297]
  41d8f7:	mov    ss,WORD PTR [edi]
  41d8f9:	mov    ebp,0x8627628a
  41d8fe:	mov    ch,0x8f
  41d900:	(bad)  
  41d901:	(bad)  
  41d903:	xchg   ebx,eax
  41d904:	popf   
  41d905:	push   ecx
  41d906:	rol    DWORD PTR [edi+ebx*8-0x4e1495c4],0x2c
  41d90e:	adc    edx,edi
  41d910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d911:	push   edi
  41d912:	pop    esi
  41d913:	xchg   ebp,eax
  41d914:	cdq    
  41d915:	xor    al,0xa0
  41d917:	mov    esi,0xf8f37cd3
  41d91c:	push   ebp
  41d91d:	or     eax,0x9a104ded
  41d922:	cmc    
  41d923:	jbe    0x41d99a
  41d925:	ret    
  41d926:	inc    ecx
  41d927:	scas   al,BYTE PTR es:[edi]
  41d928:	dec    ecx
  41d929:	sbb    al,0x53
  41d92b:	pop    ebp
  41d92c:	mov    ecx,0x995b2d26
  41d931:	cld    
  41d932:	mov    dh,0x5b
  41d934:	(bad)  
  41d935:	adc    DWORD PTR [esi],ebx
  41d937:	mov    esp,0x466161a5
  41d93c:	inc    ebp
  41d93d:	sbb    eax,0x287955ae
  41d942:	cmp    ch,BYTE PTR [edi+0x7e]
  41d945:	in     al,dx
  41d946:	sar    DWORD PTR [ebx-0x5],0x86
  41d94a:	std    
  41d94b:	dec    esi
  41d94c:	xchg   ebx,eax
  41d94d:	nop
  41d94e:	or     esi,ebx
  41d950:	outs   dx,DWORD PTR ds:[esi]
  41d951:	add    al,0x5
  41d953:	jmp    0x7777:0x71186d45
  41d95a:	dec    eax
  41d95b:	in     al,0x2c
  41d95d:	mov    es:0x380eb564,eax
  41d963:	shl    al,cl
  41d965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d966:	push   eax
  41d967:	loopne 0x41d9a8
  41d969:	xchg   edx,eax
  41d96a:	push   ss
  41d96b:	popf   
  41d96c:	test   BYTE PTR [eax-0x67],bh
  41d96f:	retf   
  41d970:	mov    ds:0x6eecfb67,eax
  41d975:	xchg   ebp,eax
  41d976:	and    BYTE PTR [ecx],dh
  41d978:	dec    ebx
  41d979:	xchg   ebp,eax
  41d97a:	mov    edi,0x7c83793a
  41d97f:	pop    ebp
  41d980:	fs or  esi,esi
  41d983:	inc    ebx
  41d984:	pusha  
  41d985:	aas    
  41d986:	sub    al,0xc5
  41d988:	xchg   ecx,eax
  41d989:	in     eax,dx
  41d98a:	dec    edx
  41d98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d98c:	push   es
  41d98d:	sar    eax,cl
  41d98f:	xor    cl,ch
  41d991:	fwait
  41d992:	jo     0x41d92c
  41d994:	out    0xee,eax
  41d996:	xlat   BYTE PTR ds:[ebx]
  41d997:	mov    ds,edi
  41d999:	and    eax,0x1ed2435
  41d99e:	cli    
  41d99f:	fcom   QWORD PTR [esp+ebx*8-0x27]
  41d9a3:	jnp    0x41d9e8
  41d9a5:	inc    esp
  41d9a6:	stos   BYTE PTR es:[edi],al
  41d9a7:	push   ds
  41d9a8:	popf   
  41d9a9:	or     ch,cl
  41d9ab:	cmp    edi,DWORD PTR [esi+0xfef48b1]
  41d9b1:	jmp    0x485f1913
  41d9b6:	pop    es
  41d9b7:	xchg   ebp,eax
  41d9b8:	jns    0x41d9c9
  41d9ba:	inc    eax
  41d9bb:	jmp    DWORD PTR [edi-0x35eec178]
  41d9c1:	mov    es,WORD PTR [eax+0x12]
  41d9c4:	shr    BYTE PTR [ebp-0x24],1
  41d9c7:	data16 (bad) 
  41d9c9:	xlat   BYTE PTR ds:[ebx]
  41d9ca:	cmp    eax,0x63506bea
  41d9cf:	(bad)  
  41d9d0:	mov    ah,0xe4
  41d9d2:	das    
  41d9d3:	rcl    DWORD PTR [eax],1
  41d9d5:	lods   al,BYTE PTR ds:[esi]
  41d9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9d7:	fs mov ebp,0x8ab34afb
  41d9dd:	cmp    al,0xa4
  41d9df:	fidiv  DWORD PTR [ebp+0x25]
  41d9e2:	inc    eax
  41d9e3:	ja     0x41d9f8
  41d9e5:	popa   
  41d9e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9e7:	add    edx,ebx
  41d9e9:	sub    eax,0x17fe699f
  41d9ee:	dec    eax
  41d9ef:	mov    bh,0x81
  41d9f1:	outs   dx,DWORD PTR ds:[esi]
  41d9f2:	and    dl,BYTE PTR [ebp-0x72]
  41d9f5:	and    esi,esp
  41d9f7:	jmp    0xcb60:0xfde39a1c
  41d9fe:	jecxz  0x41d9b4
  41da00:	fimul  DWORD PTR [ecx+0x55f3b007]
  41da06:	cmp    DWORD PTR [esi-0xc],ecx
  41da09:	xchg   edi,eax
  41da0a:	lods   al,BYTE PTR ds:[esi]
  41da0b:	mov    ah,0x70
  41da0d:	into   
  41da0e:	ja     0x41d9ee
  41da10:	mov    fs,WORD PTR [ebx-0x23]
  41da13:	mov    ch,BYTE PTR [ebp-0x33]
  41da16:	fld    DWORD PTR [esi+0x4d]
  41da19:	cmp    ebx,DWORD PTR [eax-0xa]
  41da1c:	cmp    bh,ah
  41da1e:	dec    esi
  41da1f:	sub    DWORD PTR [ebx],0xdc41ab95
  41da25:	cmp    ebp,DWORD PTR [edx-0x4b7c0a3e]
  41da2b:	pop    esi
  41da2c:	lea    edi,[edx+edx*4]
  41da2f:	mov    BYTE PTR [esi+edi*8-0x72],bh
  41da33:	pop    ebp
  41da34:	mov    ebp,0x508909f1
  41da39:	xlat   BYTE PTR ds:[ebx]
  41da3a:	les    esi,FWORD PTR [edx+0x68]
  41da3d:	lea    ecx,ds:0xd12c6b89
  41da43:	int3   
  41da44:	(bad)  
  41da45:	sub    DWORD PTR [edi-0x1a51026a],ecx
  41da4b:	or     esi,DWORD PTR [esi]
  41da4d:	std    
  41da4e:	add    bl,ch
  41da50:	daa    
  41da51:	xor    BYTE PTR [esi+esi*8],cl
  41da54:	mov    eax,0x25a8e841
  41da59:	sub    DWORD PTR [edi-0x2c],esp
  41da5c:	xor    al,0x51
  41da5e:	dec    edx
  41da5f:	xchg   edx,eax
  41da60:	sub    bl,bl
  41da62:	xchg   DWORD PTR ds:[eax-0x80],edx
  41da66:	jb     0x41d9ee
  41da68:	shl    ch,cl
  41da6a:	pop    ebx
  41da6b:	xchg   esp,eax
  41da6c:	stos   BYTE PTR es:[edi],al
  41da6d:	xchg   ebp,eax
  41da6e:	rcr    edx,0x77
  41da71:	cmp    BYTE PTR [ebp-0x5e],bl
  41da74:	add    dl,BYTE PTR [edi-0x330d3a0d]
  41da7a:	sbb    DWORD PTR [esi-0x79],edx
  41da7d:	xchg   edi,eax
  41da7e:	sub    al,0x66
  41da80:	sub    al,0x7a
  41da82:	out    dx,eax
  41da83:	mov    al,0xe6
  41da85:	inc    ecx
  41da86:	mov    dh,0x79
  41da88:	adc    eax,0x1a
  41da8b:	mov    edx,0x60efa3a7
  41da90:	pop    ds
  41da91:	jne    0x41da2d
  41da93:	adc    al,0x6c
  41da95:	ja     0x41dae2
  41da97:	daa    
  41da98:	xlat   BYTE PTR ds:[ebx]
  41da99:	stc    
  41da9a:	inc    edi
  41da9b:	fist   WORD PTR [ebx+0xa]
  41da9e:	dec    edx
  41da9f:	mov    esp,0xf8e7ee34
  41daa4:	(bad)  
  41daa5:	mov    cl,0x29
  41daa7:	add    ah,BYTE PTR [ebp+0x7b604fab]
  41daad:	adc    ecx,DWORD PTR [edi+edx*2+0x5644e4af]
  41dab4:	sahf   
  41dab5:	pop    ebx
  41dab6:	inc    esp
  41dab7:	xor    DWORD PTR [ebp+0x11],ebp
  41daba:	test   ecx,edi
  41dabc:	inc    edx
  41dabd:	jp     0x41daa2
  41dabf:	dec    ecx
  41dac0:	jl     0x41da56
  41dac2:	jge    0x41db29
  41dac4:	fcom   DWORD PTR [esp]
  41dac7:	pop    ss
  41dac8:	sub    BYTE PTR [edx+eiz*8-0x52],bl
  41dacc:	out    dx,eax
  41dacd:	push   eax
  41dace:	pushf  
  41dacf:	or     al,0x22
  41dad1:	mov    ah,0x5b
  41dad3:	mov    eax,ds:0x69ec15fe
  41dad8:	imul   esi,DWORD PTR [ecx-0xb],0x63c654b6
  41dadf:	jbe    0x41db13
  41dae1:	mov    al,0xd5
  41dae3:	das    
  41dae4:	sti    
  41dae5:	xchg   ebx,eax
  41dae6:	fidivr DWORD PTR [ebx-0x72]
  41dae9:	pop    esi
  41daea:	jb     0x41db1f
  41daec:	(bad)  
  41daee:	aad    0x4e
  41daf0:	dec    ebp
  41daf1:	mov    ah,0x60
  41daf3:	and    al,bl
  41daf5:	jbe    0x41daa1
  41daf7:	pop    edx
  41daf8:	pusha  
  41daf9:	leave  
  41dafa:	inc    ebx
  41dafb:	xchg   DWORD PTR [ebp+0xc7c19d],edi
  41db01:	dec    ebx
  41db02:	leave  
  41db03:	add    edx,DWORD PTR [esi-0x6fc037e5]
  41db09:	or     eax,0x901faf3a
  41db0e:	dec    ebp
  41db0f:	pop    ss
  41db10:	sub    al,0xb
  41db12:	aam    0xd2
  41db14:	sub    eax,0x1d1673eb
  41db19:	add    eax,0xeb44284c
  41db1e:	sbb    DWORD PTR [edx*2-0x5039b482],ebp
  41db25:	sbb    DWORD PTR [edx+0x28],ebx
  41db28:	std    
  41db29:	mov    ch,0xfe
  41db2b:	sbb    DWORD PTR [esi],esi
  41db2d:	mov    ah,0x65
  41db2f:	outs   dx,BYTE PTR ds:[esi]
  41db30:	daa    
  41db31:	xchg   ch,dl
  41db33:	push   ss
  41db34:	cmp    al,0x81
  41db36:	stos   DWORD PTR es:[edi],eax
  41db37:	xchg   BYTE PTR [edi+0x4e],dl
  41db3a:	or     al,0x83
  41db3c:	aas    
  41db3d:	(bad)  
  41db3e:	(bad)  
  41db3f:	out    0x67,eax
  41db41:	jmp    0x41db58
  41db43:	shl    BYTE PTR [ebx],1
  41db45:	pop    ds
  41db46:	retf   
  41db47:	mov    dl,0xe9
  41db49:	adc    eax,DWORD PTR [esi+0x7]
  41db4c:	aas    
  41db4d:	mov    edx,0x26422482
  41db52:	push   es
  41db53:	push   edx
  41db54:	cdq    
  41db55:	sub    eax,0x797da5e5
  41db5a:	imul   edx,DWORD PTR [edi+0x603e3f52],0x34
  41db61:	jae    0x41db65
  41db63:	pop    esp
  41db64:	scas   al,BYTE PTR es:[edi]
  41db65:	stos   BYTE PTR es:[edi],al
  41db66:	xor    ebp,DWORD PTR [esi+0x5243303c]
  41db6c:	icebp  
  41db6d:	dec    edi
  41db6e:	inc    esi
  41db6f:	push   ss
  41db70:	sub    ch,dh
  41db72:	les    esi,FWORD PTR [esi+0x6518d522]
  41db78:	sbb    DWORD PTR [edx+0x5cad625c],edi
  41db7e:	repnz into 
  41db80:	fwait
  41db81:	dec    eax
  41db82:	ror    ah,0xde
  41db85:	add    eax,0xd1370e56
  41db8a:	lock inc edx
  41db8c:	xor    al,0xf3
  41db8e:	push   ds
  41db8f:	cmp    BYTE PTR [eax+0x5e],al
  41db92:	xor    BYTE PTR [esi],cl
  41db94:	xor    BYTE PTR [edi-0x528cc869],cl
  41db9a:	xchg   edi,eax
  41db9c:	xor    al,0x4f
  41db9e:	in     al,dx
  41db9f:	cmp    esi,DWORD PTR [ebp-0x2c442546]
  41dba5:	sar    DWORD PTR [ecx+0x7],1
  41dba8:	push   esi
  41dba9:	inc    eax
  41dbaa:	in     eax,0x49
  41dbac:	ins    BYTE PTR es:[edi],dx
  41dbad:	push   edi
  41dbae:	mov    ecx,0x95ca4d37
  41dbb3:	fisttp QWORD PTR [edi+0x4c951c65]
  41dbb9:	jl     0x41dc24
  41dbbb:	rcr    DWORD PTR [ebx-0x5a2b1ca1],0x66
  41dbc2:	or     bh,BYTE PTR [eax-0x7d8e74a4]
  41dbc8:	bound  eax,QWORD PTR [eax-0x14]
  41dbcb:	lahf   
  41dbcc:	mov    edx,0xc09ac57f
  41dbd1:	cli    
  41dbd2:	xchg   ebp,eax
  41dbd3:	jbe    0x41db7c
  41dbd5:	jle    0x41dc4d
  41dbd7:	xchg   edi,eax
  41dbd8:	xor    DWORD PTR [edx+0x30bd3f50],edi
  41dbde:	loopne 0x41db85
  41dbe0:	xchg   ebx,eax
  41dbe1:	inc    esp
  41dbe2:	mov    bl,0x49
  41dbe4:	shl    dl,cl
  41dbe6:	rcl    BYTE PTR [edx+ecx*4+0x6d],cl
  41dbea:	push   ebp
  41dbeb:	and    eax,0x343019bd
  41dbf0:	xchg   edx,eax
  41dbf1:	dec    edi
  41dbf2:	(bad)  
  41dbf3:	les    edi,FWORD PTR ds:0xd41f316a
  41dbf9:	or     edx,esp
  41dbfb:	fisubr WORD PTR [esi]
  41dbfd:	imul   eax,ebx,0x39a12bec
  41dc03:	std    
  41dc04:	fmul   DWORD PTR ds:0xcb87d971
  41dc0a:	adc    al,0x31
  41dc0c:	add    ch,BYTE PTR ds:0x5a5a2bac
  41dc12:	fwait
  41dc13:	dec    ebp
  41dc14:	push   0xda358f5e
  41dc19:	sub    cl,cl
  41dc1b:	adc    al,0xfa
  41dc1d:	sar    bh,cl
  41dc1f:	or     eax,0xad3cbc82
  41dc24:	cmp    al,0xb0
  41dc26:	or     eax,0xc7563ae5
  41dc2b:	jmp    0x372baa23
  41dc30:	repnz push ebp
  41dc32:	cmp    DWORD PTR [ebp+0x33],eax
  41dc35:	xchg   edi,eax
  41dc36:	push   esp
  41dc37:	xor    eax,0xc05b907a
  41dc3c:	or     DWORD PTR [ecx+ebp*2+0x5],ebx
  41dc40:	dec    eax
  41dc41:	nop
  41dc42:	test   BYTE PTR [ebx-0x6c3719a],cl
  41dc48:	stos   BYTE PTR es:[edi],al
  41dc49:	(bad)  
  41dc4a:	(bad)  
  41dc4b:	mov    edx,0x16811c44
  41dc50:	(bad)  
  41dc51:	jmp    DWORD PTR [esi+0x1e]
  41dc54:	xchg   ecx,eax
  41dc55:	test   DWORD PTR [eax+0x42729eb5],0x4ed9c95
  41dc5f:	push   edi
  41dc60:	cli    
  41dc61:	jae    0x41dc19
  41dc63:	push   esp
  41dc64:	mov    WORD PTR [ebx+0x56],fs
  41dc67:	or     BYTE PTR [edi+0x23a7531b],ch
  41dc6d:	into   
  41dc6e:	and    esi,DWORD PTR [ebx]
  41dc70:	fadd   QWORD PTR [ecx+0x65]
  41dc73:	cmp    DWORD PTR [eax+0x6c],ebp
  41dc76:	pop    ebx
  41dc77:	mov    al,ds:0x6be835a5
  41dc7c:	mov    dh,BYTE PTR [edi+0x58]
  41dc7f:	dec    esi
  41dc80:	(bad)  
  41dc82:	jl     0x41dcff
  41dc84:	cwde   
  41dc85:	push   ecx
  41dc86:	in     eax,dx
  41dc87:	push   edi
  41dc88:	sahf   
  41dc89:	outs   dx,DWORD PTR ds:[esi]
  41dc8a:	aaa    
  41dc8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc8c:	push   esi
  41dc8d:	sub    ebx,DWORD PTR [ebp-0xda3c42b]
  41dc93:	sbb    dh,BYTE PTR [ebx-0x4f]
  41dc96:	xor    BYTE PTR [ecx-0x6a],bh
  41dc99:	mov    bl,BYTE PTR [ebx-0x21]
  41dc9c:	sbb    BYTE PTR [edi-0x5d],bl
  41dc9f:	jmp    0x2b8ed6a6
  41dca4:	xchg   esi,eax
  41dca5:	sbb    eax,0x51f86acd
  41dcaa:	clc    
  41dcab:	sbb    BYTE PTR ds:0x80a5467b,dh
  41dcb1:	mov    cl,0x66
  41dcb3:	dec    edx
  41dcb4:	push   ebx
  41dcb5:	in     eax,dx
  41dcb6:	loope  0x41dcfc
  41dcb8:	call   0x49d6:0xc6b7c982
  41dcbf:	aas    
  41dcc0:	outs   dx,DWORD PTR ds:[esi]
  41dcc1:	imul   eax,DWORD PTR [edx+0x6ae4f3c3],0xda108058
  41dccb:	xchg   ecx,eax
  41dccc:	pop    edx
  41dccd:	mov    BYTE PTR [eax+0x78ed89a7],al
  41dcd3:	jg     0x41dca1
  41dcd5:	pop    ds
  41dcd6:	mov    al,ds:0xd28153f8
  41dcdb:	cdq    
  41dcdc:	sbb    al,0xbb
  41dcde:	mov    bh,0xb5
  41dce0:	ja     0x41dd2e
  41dce2:	push   0x45
  41dce4:	push   es
  41dce5:	mov    edi,edi
  41dce7:	repnz dec ebp
  41dce9:	cmp    eax,0x53e0b4ed
  41dcee:	jecxz  0x41dd0b
  41dcf0:	push   ss
  41dcf1:	add    DWORD PTR [edi+ebx*2],edi
  41dcf4:	or     esi,ebp
  41dcf6:	ret    0xe2af
  41dcf9:	pop    edx
  41dcfa:	xor    eax,0xf6901a67
  41dcff:	mov    al,ds:0xcf97738c
  41dd04:	adc    al,0xd1
  41dd06:	jmp    0x41dcc0
  41dd08:	fisttp QWORD PTR [edx-0xc]
  41dd0b:	retf   0x9f24
  41dd0e:	sub    DWORD PTR [ecx],edi
  41dd10:	in     eax,dx
  41dd11:	sbb    dh,BYTE PTR cs:[ecx-0x11]
  41dd15:	dec    ecx
  41dd16:	je     0x41dcc0
  41dd18:	imul   ebx,DWORD PTR [esi+0x3b3c1d42],0xfffffff7
  41dd1f:	mov    dl,0x88
  41dd21:	cs call 0x9893737c
  41dd27:	add    eax,DWORD PTR [esp+eax*2+0x27]
  41dd2b:	cmp    al,0x8e
  41dd2d:	nop
  41dd2e:	fisub  WORD PTR ds:0x7955368b
  41dd34:	push   ds
  41dd35:	jnp    0x41dcbf
  41dd37:	push   edi
  41dd38:	rol    BYTE PTR [ebx+ecx*2-0xa],cl
  41dd3c:	ds sbb al,0xb4
  41dd3f:	cmp    al,0x8b
  41dd41:	sub    esi,edx
  41dd43:	int3   
  41dd44:	jge    0x41dcd9
  41dd46:	pop    ds
  41dd47:	hlt    
  41dd48:	push   ds
  41dd49:	mov    ds:0x8ac0f0bf,al
  41dd4e:	outs   dx,DWORD PTR ds:[esi]
  41dd4f:	xchg   esp,eax
  41dd50:	cld    
  41dd51:	aas    
  41dd52:	leave  
  41dd53:	repz cmp BYTE PTR [edx+0x55],cl
  41dd57:	mov    ah,0x6f
  41dd59:	jp     0x41dcee
  41dd5b:	xor    ecx,DWORD PTR fs:[ebx+0x74]
  41dd5f:	jae    0x41ddb6
  41dd61:	mov    ah,0xc6
  41dd63:	or     al,0xc
  41dd65:	call   0xdfdf:0x7474b947
  41dd6c:	sub    DWORD PTR [ebp-0x5c],ecx
  41dd6f:	mov    WORD PTR [esi-0x75],fs
  41dd72:	sahf   
  41dd73:	out    dx,al
  41dd74:	sbb    DWORD PTR [edi+0xb],esi
  41dd77:	mov    cl,0x57
  41dd79:	push   DWORD PTR [esi+0x2d]
  41dd7c:	mov    bl,0xf0
  41dd7e:	jp     0x41ddae
  41dd80:	inc    edi
  41dd81:	lds    esp,FWORD PTR [edi+0xf]
  41dd84:	add    BYTE PTR [ebx+0x8],dh
  41dd87:	and    BYTE PTR [ebx+0x54203050],dh
  41dd8d:	not    esp
  41dd8f:	pushf  
  41dd90:	shl    BYTE PTR [esi],cl
  41dd92:	repz push ds
  41dd94:	das    
  41dd95:	add    ch,BYTE PTR [ecx+eiz*1]
  41dd98:	add    eax,0x7073fc99
  41dd9d:	int    0xb3
  41dd9f:	pop    edx
  41dda0:	jne    0x41dd84
  41dda2:	mov    cl,0x8f
  41dda4:	sub    BYTE PTR [edi+0x182c3770],bh
  41ddaa:	std    
  41ddab:	mov    BYTE PTR [ebx],ah
  41ddad:	mov    esp,0xb2194555
  41ddb2:	imul   DWORD PTR [edx-0x7f50b192]
  41ddb8:	dec    esp
  41ddb9:	loopne 0x41dd5a
  41ddbb:	std    
  41ddbc:	mov    ds:0x9aa63623,eax
  41ddc1:	repz xor al,0xb4
  41ddc4:	cdq    
  41ddc5:	adc    bh,BYTE PTR [ebp-0x603339f1]
  41ddcb:	jbe    0x41de14
  41ddcd:	outs   dx,BYTE PTR ds:[esi]
  41ddce:	loope  0x41de0b
  41ddd0:	push   edi
  41ddd1:	cmp    esp,DWORD PTR [edx-0x7bd7497c]
  41ddd7:	inc    edx
  41ddd8:	loopne 0x41de10
  41ddda:	fldcw  WORD PTR [eax-0x40037ecd]
  41dde0:	mov    ebx,0x14d743ce
  41dde5:	push   cs
  41dde6:	adc    al,0xde
  41dde8:	mov    BYTE PTR [edx],ah
  41ddea:	xchg   esp,eax
  41ddeb:	xchg   edi,eax
  41ddec:	aad    0xeb
  41ddee:	xor    eax,0xbf316cca
  41ddf3:	sahf   
  41ddf4:	pushf  
  41ddf5:	adc    BYTE PTR [esi+ebp*1],ah
  41ddf8:	add    eax,0x4acd54cc
  41ddfd:	mov    esi,0x2cfbf90d
  41de02:	rcr    BYTE PTR [edi],1
  41de04:	pusha  
  41de05:	clc    
  41de06:	push   ds
  41de07:	jge    0x41ddc1
  41de09:	pop    ebx
  41de0a:	xchg   ebx,eax
  41de0b:	add    BYTE PTR [esi-0x15718630],ah
  41de11:	xchg   ecx,eax
  41de12:	push   edi
  41de13:	cs sbb al,0x4e
  41de16:	mov    bh,BYTE PTR [ecx]
  41de18:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41de1a:	frstor [esi-0x67]
  41de1d:	mov    eax,ds:0x9f1a56ed
  41de22:	or     eax,0x22ff3142
  41de27:	mov    BYTE PTR [esi+0x77726bad],ch
  41de2d:	inc    eax
  41de2e:	xor    eax,0xb1fa4f
  41de33:	jg     0x41dddf
  41de35:	pop    ecx
  41de36:	out    0xc3,eax
  41de38:	dec    esi
  41de39:	pop    ds
  41de3a:	mov    al,0xfa
  41de3c:	inc    eax
  41de3d:	ja     0x41de3f
  41de3f:	out    0x49,eax
  41de41:	mov    cl,0x66
  41de43:	push   edi
  41de44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de45:	jnp    0x41de86
  41de47:	popa   
  41de48:	enter  0x1bf6,0x5b
  41de4c:	ror    DWORD PTR [esi+0x11],0x5b
  41de50:	sbb    esi,DWORD PTR [edi]
  41de52:	sahf   
  41de53:	in     al,0x2c
  41de55:	js     0x41dde6
  41de57:	xchg   edi,eax
  41de58:	jl     0x41deb7
  41de5a:	loope  0x41de9c
  41de5c:	xor    al,0x2b
  41de5e:	ins    DWORD PTR es:[edi],dx
  41de5f:	in     al,dx
  41de60:	inc    edx
  41de61:	jecxz  0x41de78
  41de63:	mov    BYTE PTR [edx],al
  41de65:	stos   DWORD PTR es:[edi],eax
  41de66:	pop    ecx
  41de67:	cmp    al,cl
  41de69:	cmp    eax,0x5bc42688
  41de6e:	jge    0x41de05
  41de70:	fdiv   QWORD PTR [ebp-0x4e]
  41de73:	pop    edi
  41de74:	jae    0x41dea6
  41de76:	and    al,0x5e
  41de78:	or     al,0xbb
  41de7a:	or     eax,0xa033ac61
  41de7f:	fsub   QWORD PTR [esi+ecx*1-0x4c]
  41de83:	mov    esi,0xba40607
  41de88:	arpl   WORD PTR [ebx+edi*4-0x3de67da9],cx
  41de8f:	ret    0x4640
  41de92:	fstp   QWORD PTR [ebx-0xfb04a88]
  41de98:	lahf   
  41de99:	imul   ecx,DWORD PTR [ecx+0x12],0x2a57a517
  41dea0:	mov    al,0xfa
  41dea2:	lea    ebp,[ebx]
  41dea4:	mov    ecx,0xb19bce41
  41dea9:	add    eax,0x38e617cb
  41deae:	fldcw  WORD PTR [eax+0x7015296f]
  41deb4:	outs   dx,DWORD PTR ds:[esi]
  41deb5:	sbb    BYTE PTR [eax+0x5c],bl
  41deb8:	mov    cl,0x3c
  41deba:	xor    al,0x3f
  41debc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41debd:	rcl    DWORD PTR [esi+eax*8+0x2c63c3ea],0x4a
  41dec5:	retf   0x1162
  41dec8:	or     ah,BYTE PTR [ebx+eax*4-0x2a1bb9cf]
  41decf:	popf   
  41ded0:	add    edi,edx
  41ded2:	sub    eax,0xd61a1c67
  41ded7:	stos   DWORD PTR es:[edi],eax
  41ded8:	mov    ah,0xe8
  41deda:	pop    ecx
  41dedb:	push   edi
  41dedc:	outs   dx,BYTE PTR ds:[esi]
  41dedd:	pop    ebp
  41dede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dedf:	cld    
  41dee0:	and    DWORD PTR [esp+ecx*2+0x3a],edx
  41dee4:	out    dx,eax
  41dee5:	inc    ebp
  41dee6:	mov    esi,DWORD PTR [edx-0x433d85e7]
  41deec:	out    0xe8,al
  41deee:	lods   eax,DWORD PTR ds:[esi]
  41deef:	stos   DWORD PTR es:[edi],eax
  41def0:	jmp    0x41dee3
  41def2:	mov    ebx,0xaa84d1ae
  41def7:	dec    esp
  41def8:	fild   QWORD PTR [ebp+0x2f61957e]
  41defe:	adc    eax,0x7b4e990
  41df03:	and    ah,BYTE PTR [esi+0x165bda18]
  41df09:	inc    edi
  41df0a:	fild   DWORD PTR [edi+0x490483c4]
  41df10:	outs   dx,DWORD PTR ds:[esi]
  41df11:	cmp    esp,DWORD PTR [edi+0x29]
  41df14:	mov    dl,0x17
  41df16:	or     ebp,DWORD PTR [edx+0x59]
  41df19:	aas    
  41df1a:	jp     0x41df48
  41df1c:	mov    bh,0xe2
  41df1e:	cwde   
  41df1f:	ds out dx,eax
  41df21:	sbb    BYTE PTR [esi-0x6e],ch
  41df24:	lods   al,BYTE PTR ds:[esi]
  41df25:	pusha  
  41df26:	fild   WORD PTR [ecx]
  41df28:	lds    eax,FWORD PTR [ecx-0x67e31963]
  41df2e:	jp     0x41df26
  41df30:	adc    esp,eax
  41df32:	nop
  41df33:	dec    BYTE PTR [ebp+0x41944d72]
  41df39:	add    dh,BYTE PTR [ebp-0x1e58bc2e]
  41df3f:	fnstenv [ebx+edx*8-0x4a]
  41df43:	sub    al,0x57
  41df45:	leave  
  41df46:	lods   eax,DWORD PTR ds:[esi]
  41df47:	mov    ds:0xa819ecce,al
  41df4c:	test   eax,0x637cdfc6
  41df51:	sub    DWORD PTR [esi],0x5e
  41df54:	inc    esp
  41df55:	adc    DWORD PTR [ecx+eiz*2-0x47],0xffffffc1
  41df5a:	enter  0x91c0,0xe1
  41df5e:	lock jo 0x41df5d
  41df61:	fldcw  WORD PTR [eax]
  41df63:	jl     0x41deee
  41df65:	outs   dx,BYTE PTR ds:[esi]
  41df66:	(bad)  
  41df67:	xchg   ecx,eax
  41df68:	adc    al,0xa6
  41df6a:	or     BYTE PTR [edi],al
  41df6c:	sbb    ecx,DWORD PTR [esi+ebx*1+0x1a]
  41df70:	adc    ecx,DWORD PTR ds:0x5ac86b3e
  41df76:	mov    bl,0xa4
  41df78:	mov    dl,0x8d
  41df7a:	sbb    cl,BYTE PTR [ecx-0x50]
  41df7d:	mov    al,0x14
  41df7f:	xchg   esp,eax
  41df80:	ret    
  41df81:	cli    
  41df82:	sti    
  41df83:	lea    ebp,[eax]
  41df85:	retf   
  41df86:	adc    ecx,DWORD PTR [ebx+0x198f2da3]
  41df8c:	sbb    al,0x94
  41df8e:	cld    
  41df8f:	add    eax,DWORD PTR [ecx-0x60]
  41df92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df93:	mov    eax,ds:0x5b59353e
  41df98:	push   edx
  41df99:	xor    DWORD PTR [ecx-0x6f49702f],esi
  41df9f:	push   ds
  41dfa0:	in     al,dx
  41dfa1:	arpl   ax,di
  41dfa3:	mov    al,ds:0x3ea43912
  41dfa8:	stos   DWORD PTR es:[edi],eax
  41dfa9:	lods   al,BYTE PTR ds:[esi]
  41dfaa:	or     al,0xfb
  41dfac:	scas   al,BYTE PTR es:[edi]
  41dfad:	jbe    0x41dfcd
  41dfaf:	xlat   BYTE PTR ds:[ebx]
  41dfb0:	cmp    ah,bl
  41dfb2:	gs sbb ch,0xa6
  41dfb6:	push   edx
  41dfb7:	mov    dl,0x31
  41dfb9:	push   0x6a
  41dfbb:	sub    al,0x29
  41dfbd:	lods   eax,DWORD PTR ds:[esi]
  41dfbe:	aad    0xa8
  41dfc0:	cmp    DWORD PTR [ebx-0x60546487],eax
  41dfc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfc7:	mov    ecx,DWORD PTR [esi-0x723f9778]
  41dfcd:	je     0x41dfa3
  41dfcf:	push   DWORD PTR [eax-0x19]
  41dfd2:	aaa    
  41dfd3:	sub    DWORD PTR [ebx],edx
  41dfd5:	jge    0x41e005
  41dfd7:	add    DWORD PTR [eax],0xcdc0fe19
  41dfdd:	mov    dh,0xdc
  41dfdf:	push   ss
  41dfe0:	dec    ebp
  41dfe1:	mov    esp,0xf3289a6b
  41dfe6:	adc    esi,DWORD PTR [eax-0x40]
  41dfe9:	push   eax
  41dfea:	jne    0x41e028
  41dfec:	xchg   esp,eax
  41dfed:	xor    ah,BYTE PTR [esi+0x3c]
  41dff0:	mov    edx,0xb88f23e0
  41dff5:	jmp    0xd339:0xba70edb6
  41dffc:	dec    edi
  41dffd:	iret   
  41dffe:	or     BYTE PTR [eax-0x66],dh
  41e001:	dec    edx
  41e002:	mov    eax,ds:0xc41875a
  41e007:	push   ss
  41e008:	aam    0x15
  41e00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e00b:	daa    
  41e00c:	jns    0x41dfa9
  41e00e:	test   al,0x16
  41e010:	push   ebx
  41e011:	add    cl,BYTE PTR [ebx]
  41e013:	dec    esi
  41e015:	and    ah,BYTE PTR [ecx+eiz*2]
  41e018:	fisub  WORD PTR [ebx+0x29d0ffe]
  41e01e:	adc    al,0x77
  41e020:	les    ebx,FWORD PTR [edx+0x4c]
  41e023:	xchg   ebp,eax
  41e024:	test   eax,0x7a1de0ae
  41e029:	or     DWORD PTR [ecx-0x2e],0xffffffb3
  41e02d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e02f:	xor    al,0x62
  41e031:	sbb    al,0x5
  41e033:	and    esi,0xffffffe4
  41e036:	aam    0x4a
  41e038:	aam    0x92
  41e03a:	popf   
  41e03b:	fst    QWORD PTR [edi]
  41e03d:	gs and al,0xfc
  41e040:	ret    0xac75
  41e043:	(bad)  [ebx-0xd]
  41e046:	and    eax,0xd19f4f60
  41e04b:	scas   al,BYTE PTR es:[edi]
  41e04c:	cs dec esp
  41e04e:	add    bl,BYTE PTR [ebx-0x59e7e04]
  41e054:	stc    
  41e055:	inc    esi
  41e056:	push   ss
  41e057:	and    BYTE PTR [ebp-0x75],ah
  41e05a:	dec    ecx
  41e05b:	addr16 dec edi
  41e05d:	int    0x7a
  41e05f:	(bad)  
  41e060:	jno    0x41e00a
  41e062:	jmp    0x410faf7
  41e067:	ficomp DWORD PTR [edx]
  41e069:	cmp    eax,0x726969f2
  41e06e:	dec    esp
  41e06f:	outs   dx,DWORD PTR ds:[esi]
  41e070:	(bad)
  41e074:	and    DWORD PTR [ecx],ebp
  41e076:	jp     0x41e033
  41e078:	pop    ebp
  41e079:	xor    al,0x85
  41e07b:	sbb    edi,DWORD PTR [eax]
  41e07d:	sahf   
  41e07e:	in     al,0xae
  41e080:	fnstenv [ecx-0x75022464]
  41e086:	mov    edi,0x3b09ccd1
  41e08b:	jl     0x41e10c
  41e08d:	push   es
  41e08e:	jge    0x41e0eb
  41e090:	jae    0x41e0ab
  41e092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e093:	in     eax,0x90
  41e095:	sbb    ecx,DWORD PTR [edi-0x1342754c]
  41e09b:	push   ecx
  41e09c:	mov    dl,0x73
  41e09e:	mov    al,0xf0
  41e0a0:	dec    esi
  41e0a1:	or     al,0x6d
  41e0a3:	ds retf 
  41e0a5:	adc    dh,BYTE PTR [edi+0x7c]
  41e0a8:	mov    edx,0x8b0c0cb3
  41e0ad:	cmp    eax,0x96954def
  41e0b2:	adc    bl,BYTE PTR [ecx]
  41e0b4:	pop    esi
  41e0b5:	shl    BYTE PTR [edx-0x2e9b4c2d],1
  41e0bb:	dec    esi
  41e0bc:	inc    esi
  41e0bd:	(bad)  
  41e0be:	xor    BYTE PTR [ebp+ebx*4+0x57],dl
  41e0c2:	or     al,0x4d
  41e0c4:	std    
  41e0c5:	mov    al,ds:0x524716d6
  41e0ca:	mov    eax,0x1e7ea5af
  41e0cf:	jo     0x41e09d
  41e0d1:	push   ds
  41e0d2:	outs   dx,BYTE PTR ds:[esi]
  41e0d3:	(bad)  
  41e0d4:	push   0x52
  41e0d6:	outs   dx,BYTE PTR ds:[esi]
  41e0d7:	add    al,0x6d
  41e0d9:	cs pop ebp
  41e0db:	sub    ah,BYTE PTR [eax-0x35]
  41e0de:	int    0xfe
  41e0e0:	loopne 0x41e08e
  41e0e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0e3:	dec    esp
  41e0e4:	pop    eax
  41e0e5:	mov    WORD PTR [edx],cs
  41e0e7:	jge    0x41e13e
  41e0e9:	adc    eax,0xd480f790
  41e0ee:	cmp    eax,0x48e35dae
  41e0f3:	out    dx,al
  41e0f4:	popf   
  41e0f5:	test   eax,0x4eacfbff
  41e0fa:	or     BYTE PTR [ebx+0x6d],ch
  41e0fd:	aaa    
  41e0fe:	dec    ecx
  41e0ff:	add    BYTE PTR [ebx+0x776f1ca0],al
  41e105:	out    0x3a,al
  41e107:	or     al,0x9e
  41e109:	test   DWORD PTR [esi+0x22],edi
  41e10c:	fidivr DWORD PTR [ecx+0x6a]
  41e10f:	push   esp
  41e110:	or     DWORD PTR [esi+0x4e21a132],ecx
  41e116:	fbstp  TBYTE PTR gs:[ebp+0x475fde54]
  41e11d:	inc    edx
  41e11e:	fild   QWORD PTR ds:0x2c4dc843
  41e124:	ins    BYTE PTR es:[edi],dx
  41e125:	(bad)  
  41e126:	ss loop 0x41e182
  41e129:	retf   
  41e12a:	icebp  
  41e12b:	add    al,0xb1
  41e12d:	mov    DWORD PTR [ebp-0x5a9dade0],esp
  41e133:	mov    eax,ds:0x8ffea9c0
  41e138:	and    DWORD PTR [edx+0x3b21dd8b],eax
  41e13e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e13f:	je     0x41e115
  41e141:	mov    BYTE PTR [edx+edx*8-0x59ec2b96],ch
  41e148:	cwde   
  41e149:	sahf   
  41e14a:	add    DWORD PTR [ebx-0x250509c5],ecx
  41e150:	lahf   
  41e151:	push   edx
  41e152:	add    esi,DWORD PTR [ebx]
  41e154:	(bad)
  41e158:	xor    eax,0x8d3f8f4a
  41e15d:	pop    ds
  41e15e:	out    0x72,eax
  41e160:	fistp  WORD PTR ds:[eax-0x6d]
  41e164:	pop    eax
  41e165:	mov    ebx,0x3cbd6cfc
  41e16a:	cmc    
  41e16b:	xchg   ebp,eax
  41e16c:	fdiv   DWORD PTR [eax-0x10c959c4]
  41e172:	leave  
  41e173:	sti    
  41e174:	fldenv [eax]
  41e176:	sub    al,0x94
  41e179:	repnz hlt 
  41e17b:	jl     0x41e181
  41e17d:	or     eax,0x5a95e5e9
  41e182:	xor    ebp,0x4b
  41e185:	push   esi
  41e186:	enter  0x49ed,0x95
  41e18a:	inc    edx
  41e18b:	push   eax
  41e18c:	mov    ds:0xa61e8dee,eax
  41e191:	repnz mov eax,cs:0xb7281c2c
  41e198:	(bad)  
  41e199:	xchg   ebx,eax
  41e19a:	xor    ch,BYTE PTR ds:0x8cafc60b
  41e1a0:	cmp    eax,0x6c9bb0bb
  41e1a5:	and    BYTE PTR [edi+0x4f001623],bl
  41e1ab:	dec    edi
  41e1ac:	lods   eax,DWORD PTR ds:[esi]
  41e1ad:	mov    bh,0x5a
  41e1af:	mov    esi,0x8a9be878
  41e1b4:	pop    eax
  41e1b5:	or     edx,DWORD PTR [ebx-0x504e1c95]
  41e1bb:	and    DWORD PTR [ecx-0x9],esi
  41e1be:	dec    ebx
  41e1bf:	test   cl,ch
  41e1c1:	ins    BYTE PTR es:[edi],dx
  41e1c2:	xchg   al,al
  41e1c4:	sub    esp,DWORD PTR [ebp+0x371bc785]
  41e1ca:	add    al,0x9e
  41e1cc:	ret    
  41e1cd:	mov    esp,gs
  41e1cf:	sbb    DWORD PTR [ebx-0x78c48ff9],0xfffffffa
  41e1d6:	adc    DWORD PTR [ecx-0x62],0xeb8e3abd
  41e1dd:	sbb    eax,0x710afbd6
  41e1e2:	fwait
  41e1e3:	sbb    BYTE PTR [edi+0x28413a15],0xd9
  41e1ea:	mov    eax,ds:0xc3d318c0
  41e1ef:	arpl   WORD PTR [ecx-0x1a018893],dx
  41e1f5:	test   DWORD PTR ss:[edi-0x38],esi
  41e1f9:	xchg   esi,eax
  41e1fa:	xor    eax,0x9f7eddd4
  41e1ff:	xor    eax,0x97d4dbc0
  41e204:	add    esp,DWORD PTR [edi+ebx*2]
  41e207:	and    al,0x21
  41e209:	inc    ax
  41e20b:	pop    esp
  41e20c:	mov    al,0xd9
  41e20e:	sbb    DWORD PTR [esi-0x27],esi
  41e211:	mov    ch,0x14
  41e213:	or     bh,BYTE PTR [ebx+0x29267747]
  41e219:	sbb    eax,0x49efa7a5
  41e21e:	rol    edx,cl
  41e220:	popf   
  41e221:	and    eax,0x76efb1b8
  41e226:	mov    esp,0xb381da5c
  41e22b:	cmp    DWORD PTR [edi+0x0],esp
  41e22e:	and    edi,DWORD PTR [eax-0x4c76cbe3]
  41e234:	mov    cl,0xc8
  41e236:	ins    BYTE PTR es:[edi],dx
  41e237:	dec    edi
  41e238:	lds    edi,FWORD PTR [ecx+0x27113aca]
  41e23e:	sub    DWORD PTR [edi-0x154f2112],ebx
  41e244:	mov    BYTE PTR [eax+edx*2],0x41
  41e248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e249:	inc    esi
  41e24a:	push   ds
  41e24b:	adc    ebp,ecx
  41e24d:	popf   
  41e24e:	ins    BYTE PTR es:[edi],dx
  41e24f:	loope  0x41e25c
  41e251:	ss pop esp
  41e253:	mov    al,0x5d
  41e255:	in     eax,dx
  41e256:	cmp    al,0x88
  41e258:	push   eax
  41e259:	fidiv  DWORD PTR [ecx+eiz*2-0x2c]
  41e25d:	xor    al,0xe4
  41e25f:	aad    0x90
  41e261:	test   eax,0xbc4d642d
  41e266:	mov    bh,0xd3
  41e268:	xchg   ecx,eax
  41e269:	mov    BYTE PTR [ebp-0x45d51d3b],bl
  41e26f:	mov    edi,0x5c5a64b9
  41e274:	dec    ecx
  41e275:	es xchg ebp,eax
  41e277:	pusha  
  41e278:	fcom   DWORD PTR [edi]
  41e27a:	pop    es
  41e27b:	int    0xd0
  41e27d:	cmp    eax,DWORD PTR [ecx+0x18]
  41e280:	sbb    BYTE PTR [eax+0x115d9f61],al
  41e286:	push   ebp
  41e287:	addr16 jns 0x41e228
  41e28a:	gs pop es
  41e28c:	(bad)  
  41e28d:	rcl    BYTE PTR [ecx+0x4f],1
  41e290:	mov    ds:0x49add9ab,eax
  41e295:	addr16 ret 
  41e297:	jnp    0x41e303
  41e299:	dec    esp
  41e29a:	in     eax,0x90
  41e29c:	xlat   BYTE PTR ds:[ebx]
  41e29d:	or     al,0xb0
  41e29f:	inc    ebx
  41e2a0:	cli    
  41e2a1:	iret   
  41e2a2:	push   edx
  41e2a3:	pop    esp
  41e2a4:	jmp    0x33843961
  41e2a9:	cmp    BYTE PTR [ebp+0x8],dh
  41e2ac:	jns    0x41e310
  41e2ae:	popf   
  41e2af:	push   ss
  41e2b0:	push   ebp
  41e2b1:	out    0x0,al
  41e2b3:	cld    
  41e2b4:	call   0x2503:0x44b68ea9
  41e2bb:	xor    BYTE PTR ds:0x96fff661,al
  41e2c1:	loop   0x41e289
  41e2c3:	jns    0x41e2e4
  41e2c5:	sbb    dl,BYTE PTR [eax]
  41e2c7:	loop   0x41e261
  41e2c9:	inc    edx
  41e2ca:	xor    al,0x91
  41e2cc:	call   FWORD PTR [edx+esi*1-0x76]
  41e2d0:	jp     0x41e2a9
  41e2d2:	cld    
  41e2d3:	test   eax,0x5b29595f
  41e2d8:	pusha  
  41e2d9:	cmp    eax,0xe3e63a50
  41e2de:	in     al,0x85
  41e2e0:	clc    
  41e2e1:	adc    ebp,DWORD PTR [eax]
  41e2e3:	or     edx,ecx
  41e2e5:	inc    ebx
  41e2e6:	icebp  
  41e2e7:	popf   
  41e2e8:	cmp    esp,0x50
  41e2eb:	aas    
  41e2ec:	retf   
  41e2ed:	push   cs
  41e2ee:	mov    eax,ds:0x609b9762
  41e2f3:	cmp    ebp,esi
  41e2f5:	mov    al,0xb5
  41e2f7:	sub    BYTE PTR [edi+0x6bb12524],0x8
  41e2fe:	loop   0x41e31c
  41e300:	std    
  41e301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e302:	cmp    al,0xe7
  41e304:	cwde   
  41e305:	or     ebp,DWORD PTR ss:[edi]
  41e308:	cs jbe 0x41e32b
  41e30b:	inc    ecx
  41e30c:	inc    esi
  41e30d:	in     al,dx
  41e30e:	addr16 and ecx,edx
  41e311:	aam    0x56
  41e313:	inc    esi
  41e314:	jmp    0x7eb8:0x540dc838
  41e31b:	shr    bl,0xdb
  41e31e:	xchg   ebp,eax
  41e31f:	imul   ebp,DWORD PTR [edx],0x4c
  41e322:	add    eax,0x96eedd0
  41e327:	aad    0x37
  41e329:	xchg   DWORD PTR [esi],esi
  41e32b:	push   edi
  41e32c:	jg     0x41e2e0
  41e32e:	and    eax,0xac3b3c42
  41e333:	push   es
  41e334:	fcom   QWORD PTR [edx+0x7d]
  41e337:	adc    edx,DWORD PTR [ebp+0x18]
  41e33a:	cmp    BYTE PTR [ebx],0x7
  41e33d:	xor    eax,esi
  41e33f:	mov    ds:0x4d1a2e44,al
  41e344:	hlt    
  41e345:	ja     0x41e314
  41e347:	mov    ah,0xa5
  41e349:	stos   BYTE PTR es:[edi],al
  41e34a:	bound  eax,QWORD PTR [eax+0x4bad190c]
  41e350:	sub    al,0x80
  41e352:	jp     0x41e31e
  41e354:	mov    eax,0x947d367d
  41e359:	xor    ch,BYTE PTR [ebp+0x600adef0]
  41e35f:	inc    ebx
  41e360:	add    eax,0xef6288d6
  41e365:	loop   0x41e3d8
  41e367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e368:	fld    DWORD PTR [esp+ebx*2+0x6af62669]
  41e36f:	pushf  
  41e370:	pop    ss
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	imul   ecx,DWORD PTR [ebx],0x1b
  41e375:	add    bh,0xd7
  41e378:	outs   dx,BYTE PTR ds:[esi]
  41e379:	add    ch,BYTE PTR [ecx+0x2b]
  41e37c:	cmp    ebx,ebp
  41e37e:	fucomip st,st(4)
  41e380:	fdiv   st,st(1)
  41e382:	int3   
  41e383:	jl     0x41e3f5
  41e385:	push   ecx
  41e386:	(bad)  
  41e388:	(bad)  
  41e389:	sbb    BYTE PTR [eax+0x5403c7],dh
  41e38f:	sub    DWORD PTR [edx+0x163db5f8],eax
  41e395:	sbb    bl,BYTE PTR [ecx]
  41e397:	push   es
  41e398:	fsub   QWORD PTR [edx]
  41e39a:	scas   al,BYTE PTR es:[edi]
  41e39b:	mov    cl,0xb9
  41e39d:	xlat   BYTE PTR ds:[ebx]
  41e39e:	mov    bl,BYTE PTR [ebx+esi*4]
  41e3a1:	add    ch,ah
  41e3a3:	cmp    eax,0x8dae93a4
  41e3a8:	mov    ch,0x6e
  41e3aa:	aaa    
  41e3ab:	outs   dx,DWORD PTR ds:[esi]
  41e3ac:	or     BYTE PTR [ebx+0x3d],dh
  41e3af:	and    eax,DWORD PTR [edx-0x65cc4bd0]
  41e3b5:	lods   eax,DWORD PTR ds:[esi]
  41e3b6:	cmp    esp,edx
  41e3b8:	out    0x7d,eax
  41e3ba:	adc    bl,BYTE PTR [ebx-0x630ceecd]
  41e3c0:	and    eax,esi
  41e3c2:	add    DWORD PTR [ebx+0xd2d7264],ebp
  41e3c8:	push   edi
  41e3c9:	jge    0x41e3a0
  41e3cb:	fistp  DWORD PTR [ecx+0x1d]
  41e3ce:	cmp    BYTE PTR [ebp+0x3308ae2a],bl
  41e3d4:	jge    0x41e364
  41e3d6:	pop    edx
  41e3d7:	popa   
  41e3d8:	aad    0xa4
  41e3da:	push   esp
  41e3db:	fistp  WORD PTR [edi+0x11]
  41e3de:	pop    edx
  41e3df:	test   DWORD PTR [esi+0x59],edx
  41e3e2:	lods   eax,DWORD PTR ds:[esi]
  41e3e3:	rcl    DWORD PTR [edi-0x59],1
  41e3e6:	mov    bl,0x3f
  41e3e8:	push   ecx
  41e3e9:	hlt    
  41e3ea:	(bad)  
  41e3eb:	sbb    esi,ebx
  41e3ed:	adc    dh,BYTE PTR [esi]
  41e3ef:	lahf   
  41e3f0:	addr16 dec ebx
  41e3f2:	cwde   
  41e3f3:	in     al,dx
  41e3f4:	adc    al,0x66
  41e3f6:	les    esp,FWORD PTR [eax-0x1797bb80]
  41e3fc:	imul   ebx,DWORD PTR [edx],0x62c81618
  41e402:	push   eax
  41e403:	and    BYTE PTR [edx-0x30537404],dh
  41e409:	jle    0x41e437
  41e40b:	sub    DWORD PTR [edx+0x70ef777],ecx
  41e411:	mov    ecx,0x14f68da8
  41e416:	lea    ecx,[ebx-0x3d]
  41e419:	test   esi,eax
  41e41b:	(bad)  
  41e41c:	ds pop ecx
  41e41e:	jnp    0x41e464
  41e420:	sbb    ecx,DWORD PTR [ebx+0x53]
  41e423:	mov    WORD PTR [ecx+ebx*2+0x678201d8],es
  41e42a:	rol    BYTE PTR [eax-0x7],0x8a
  41e42e:	inc    ebp
  41e42f:	(bad)  
  41e430:	aas    
  41e431:	add    eax,0x93107725
  41e436:	add    DWORD PTR [ebx],edx
  41e438:	lds    ecx,FWORD PTR fs:[edx+esi*8]
  41e43c:	push   ebx
  41e43d:	lock cmp edx,DWORD PTR [ebp+0x5e]
  41e441:	push   ds
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	jmp    0xef276113
  41e448:	(bad)  
  41e449:	lods   al,BYTE PTR ds:[esi]
  41e44a:	mov    dh,0x2e
  41e44c:	sbb    ah,BYTE PTR [edi-0x5b69fe02]
  41e452:	test   eax,0xb3f4027d
  41e457:	dec    ecx
  41e459:	into   
  41e45a:	mov    dl,dh
  41e45c:	xor    eax,0x4ee1efb9
  41e461:	data16 out 0xdb,al
  41e464:	jo     0x41e470
  41e466:	jle    0x41e44f
  41e468:	(bad)  
  41e469:	cmp    edx,DWORD PTR [esi+0x72]
  41e46c:	mov    DWORD PTR [ecx+0x6d],esp
  41e46f:	mov    DWORD PTR [edi+edi*2+0x67],edi
  41e473:	stos   BYTE PTR es:[edi],al
  41e474:	xchg   esi,eax
  41e475:	mov    eax,0x3b02bb13
  41e47a:	sbb    eax,0xe3e5ac20
  41e47f:	outs   dx,DWORD PTR ds:[esi]
  41e480:	fimul  WORD PTR [ebp-0x5197cb6b]
  41e486:	sar    DWORD PTR [ebp-0x72],cl
  41e489:	mov    ah,0x68
  41e48b:	call   0x2a400ac
  41e490:	xor    DWORD PTR [edi+0x7b0a4373],eax
  41e496:	daa    
  41e497:	add    BYTE PTR [eax+eax*2-0x71],bh
  41e49b:	pushf  
  41e49c:	arpl   WORD PTR [eax],di
  41e49e:	pop    ss
  41e49f:	dec    ebp
  41e4a0:	mov    DWORD PTR [edx-0x75],esp
  41e4a3:	sub    BYTE PTR [edi+ecx*8+0x399bcbfa],cl
  41e4aa:	sbb    BYTE PTR [ebx],0x69
  41e4ad:	retf   
  41e4ae:	cmp    eax,0xf6ca081d
  41e4b3:	or     BYTE PTR [edi+0x5c3f6728],ah
  41e4b9:	cs retf 0xc3f1
  41e4bd:	mov    esi,0x5a42507d
  41e4c2:	add    DWORD PTR [eax+0x42],ebp
  41e4c5:	fcomi  st,st(1)
  41e4c7:	jmp    0x41e50d
  41e4c9:	cmp    DWORD PTR [ecx],eax
  41e4cb:	push   esi
  41e4cc:	xor    BYTE PTR ss:[ebx-0x3ccd0a01],bl
  41e4d3:	mov    cl,0x79
  41e4d5:	stc    
  41e4d6:	popf   
  41e4d7:	out    0xb1,al
  41e4d9:	add    al,0xbd
  41e4db:	idiv   BYTE PTR [ebx+0x2da9d5f4]
  41e4e1:	xchg   DWORD PTR [ecx+0x40b0565f],ebx
  41e4e7:	mov    esi,0xc1678ee7
  41e4ec:	ins    BYTE PTR es:[edi],dx
  41e4ed:	jnp    0x41e47d
  41e4ef:	cld    
  41e4f0:	mov    edx,0xa50c9999
  41e4f5:	push   ss
  41e4f6:	sbb    al,0xf9
  41e4f8:	std    
  41e4f9:	(bad)  
  41e4fa:	mov    eax,ds:0x57bf35e1
  41e4ff:	mov    ch,0x77
  41e501:	xor    BYTE PTR [edi],bh
  41e503:	call   0x96591731
  41e508:	mov    ebx,0x28ed0a8f
  41e50d:	push   esi
  41e50e:	dec    ebp
  41e50f:	jmp    0x24261441
  41e514:	test   al,0xb9
  41e516:	push   edi
  41e517:	mov    al,al
  41e519:	xor    al,0x22
  41e51b:	mov    ebp,0x31d66aea
  41e520:	ins    DWORD PTR es:[edi],dx
  41e521:	cld    
  41e522:	push   cs
  41e523:	lea    ebx,[edi]
  41e525:	xchg   ecx,eax
  41e526:	sar    DWORD PTR [ebp+0x5d845e28],cl
  41e52c:	xchg   edi,eax
  41e52d:	push   ecx
  41e52e:	mov    eax,ds:0xb25f233
  41e533:	fidivr DWORD PTR [ecx-0x38bdcf50]
  41e539:	stos   BYTE PTR es:[edi],al
  41e53a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e53b:	jle    0x41e51a
  41e53d:	xor    ecx,DWORD PTR [ebx+esi*4]
  41e540:	jmp    0x41e526
  41e542:	int    0x9a
  41e544:	xchg   ecx,eax
  41e545:	stc    
  41e546:	js     0x41e538
  41e548:	rcr    DWORD PTR [edx+eiz*8+0x65],cl
  41e54c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e54d:	out    dx,al
  41e54e:	mov    esp,0xb38d787c
  41e553:	dec    esp
  41e554:	cmc    
  41e555:	xchg   esi,eax
  41e556:	mov    ch,0xbf
  41e558:	pop    esi
  41e559:	inc    esp
  41e55a:	jecxz  0x41e575
  41e55c:	popa   
  41e55d:	push   ebp
  41e55e:	es cwde 
  41e560:	inc    esi
  41e561:	dec    cx
  41e563:	fwait
  41e564:	aas    
  41e565:	jp     0x41e58b
  41e567:	sub    al,0xdd
  41e569:	nop
  41e56a:	or     cl,ch
  41e56c:	icebp  
  41e56d:	dec    ecx
  41e56e:	gs push cs
  41e570:	add    bl,BYTE PTR [edx]
  41e572:	test   BYTE PTR [edx+edi*4+0x6437dc5c],0x13
  41e57a:	outs   dx,BYTE PTR ds:[esi]
  41e57b:	push   es
  41e57c:	xchg   ebx,eax
  41e57d:	xchg   ecx,eax
  41e57e:	sub    BYTE PTR [ebp-0x55100309],0x95
  41e585:	mov    al,0x71
  41e587:	mov    dh,0xde
  41e589:	icebp  
  41e58a:	and    DWORD PTR [edx+0x44d9e3b1],ebx
  41e590:	(bad)  
  41e591:	outs   dx,DWORD PTR ds:[esi]
  41e592:	mov    BYTE PTR ds:0xd156ff1f,cl
  41e598:	test   eax,0x32365b4a
  41e59d:	and    BYTE PTR [bp+di+0x44e4],al
  41e5a2:	(bad)  [edx+0x21]
  41e5a5:	adc    eax,0x9f80daf6
  41e5aa:	(bad)  [edx]
  41e5ac:	sti    
  41e5ad:	int    0x10
  41e5af:	or     DWORD PTR [esi],edi
  41e5b1:	pop    ebp
  41e5b2:	cmc    
  41e5b3:	out    dx,al
  41e5b4:	pop    ebx
  41e5b5:	sbb    al,0x62
  41e5b7:	push   edx
  41e5b8:	pushf  
  41e5b9:	mov    ds:0xd66f5692,eax
  41e5be:	or     BYTE PTR [ecx],al
  41e5c0:	inc    ebx
  41e5c1:	dec    ebp
  41e5c2:	int3   
  41e5c3:	mov    ch,0x30
  41e5c5:	pop    DWORD PTR [eiz*4+0x623c6476]
  41e5cc:	shl    bl,1
  41e5ce:	arpl   WORD PTR [edx+0x2bf0e604],di
  41e5d4:	not    BYTE PTR [eax-0x66]
  41e5d7:	cmovs  esi,DWORD PTR [edx]
  41e5da:	pusha  
  41e5db:	lahf   
  41e5dc:	inc    ebp
  41e5dd:	mov    edx,0xbf25c01a
  41e5e2:	mov    ss,eax
  41e5e4:	pop    ds
  41e5e5:	test   BYTE PTR ds:0x3dcb1d89,0x80
  41e5ec:	stos   DWORD PTR es:[edi],eax
  41e5ed:	repz pop ds
  41e5ef:	jmp    0x41e652
  41e5f1:	pop    ss
  41e5f2:	dec    ecx
  41e5f3:	(bad)  
  41e5f5:	pop    ebp
  41e5f6:	inc    esi
  41e5f7:	push   edi
  41e5f8:	out    0x9d,eax
  41e5fa:	scas   eax,DWORD PTR es:[edi]
  41e5fb:	mov    WORD PTR [ebp+0x1143af70],?
  41e601:	add    BYTE PTR [edi+0x67383428],al
  41e607:	call   0x486c8ad1
  41e60c:	fild   WORD PTR [esi+0x225173ad]
  41e612:	or     edx,DWORD PTR [edi-0x29]
  41e615:	dec    eax
  41e616:	xchg   ebx,eax
  41e617:	movq   mm7,mm0
  41e61a:	jno    0x41e658
  41e61c:	xchg   ecx,eax
  41e61d:	mov    al,0xa7
  41e61f:	lods   eax,DWORD PTR ds:[esi]
  41e620:	loope  0x41e607
  41e622:	stc    
  41e623:	or     al,BYTE PTR [edx]
  41e625:	inc    eax
  41e626:	shl    BYTE PTR [esi-0x1a],0x55
  41e62a:	jno    0x41e675
  41e62c:	add    BYTE PTR [ecx],bl
  41e62e:	fadd   QWORD PTR [edx-0x3]
  41e631:	dec    ebx
  41e632:	pop    edi
  41e633:	iret   
  41e634:	mov    al,ds:0xc73b484b
  41e639:	mov    ebx,0x5a900c8d
  41e63e:	aam    0x83
  41e640:	inc    esp
  41e641:	out    0x92,al
  41e643:	test   DWORD PTR [ebp+ebx*8-0xb],ebp
  41e647:	inc    ecx
  41e648:	or     eax,0x3811fbe
  41e64d:	adc    DWORD PTR [edx-0x2569136a],0x26
  41e654:	mov    ch,0x3
  41e656:	mov    DWORD PTR [esi],edx
  41e658:	das    
  41e659:	pop    edx
  41e65a:	fld    TBYTE PTR [eax+eiz*8-0xb]
  41e65e:	mov    esp,0x9ad2d53c
  41e663:	mov    eax,ds:0x5459687
  41e668:	xchg   ebx,eax
  41e669:	and    eax,0xdc841b05
  41e66e:	inc    edi
  41e66f:	je     0x41e6a9
  41e671:	repnz push ss
  41e673:	dec    eax
  41e674:	gs add ah,0x5e
  41e678:	pop    ebx
  41e679:	test   esi,esi
  41e67b:	icebp  
  41e67c:	add    DWORD PTR [esp+edx*2-0x3954ddfe],esp
  41e683:	mov    eax,ds:0xc7974d27
  41e688:	gs enter 0x9475,0xba
  41e68d:	ss lock pushf 
  41e690:	or     cl,BYTE PTR [edx+0x4dfc9db8]
  41e696:	adc    DWORD PTR [ecx-0x7aca4bee],edx
  41e69c:	pop    ecx
  41e69d:	push   ss
  41e69e:	shl    BYTE PTR [ecx],0x7b
  41e6a1:	mov    al,ds:0x5cd45066
  41e6a6:	sub    eax,0xa380e3a1
  41e6ab:	pushf  
  41e6ac:	push   ds
  41e6ad:	mov    esp,0xb7ad3c5a
  41e6b2:	clc    
  41e6b3:	rol    BYTE PTR [ecx-0x1b4c055f],1
  41e6b9:	call   0xd0d4:0x7720abbd
  41e6c0:	pop    esp
  41e6c1:	mov    edx,esi
  41e6c3:	cs dec edi
  41e6c5:	frstor [ebx-0x7a]
  41e6c8:	sub    eax,DWORD PTR [esi-0x6f8ddd04]
  41e6ce:	or     al,0xce
  41e6d0:	fs call 0x3fa4a490
  41e6d6:	xor    BYTE PTR [ebp-0x7d3517dc],dl
  41e6dc:	(bad)  
  41e6dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6de:	sbb    bh,dh
  41e6e0:	cmp    DWORD PTR [edx],ebx
  41e6e2:	jge    0x41e749
  41e6e4:	inc    esi
  41e6e5:	inc    edx
  41e6e6:	xchg   edx,eax
  41e6e7:	dec    edx
  41e6e8:	aad    0xfd
  41e6ea:	fcom   QWORD PTR [ecx+0x1da70790]
  41e6f0:	sar    BYTE PTR [eax-0x5b],cl
  41e6f3:	mov    ch,0x65
  41e6f5:	stos   DWORD PTR es:[edi],eax
  41e6f6:	js     0x41e731
  41e6f8:	dec    ebx
  41e6f9:	les    ecx,FWORD PTR [ebx-0x30129451]
  41e6ff:	or     ebx,DWORD PTR [eax-0x14]
  41e702:	cmp    BYTE PTR [esi+0x4c],bh
  41e705:	sbb    bh,dh
  41e707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e708:	push   eax
  41e709:	in     eax,dx
  41e70a:	aaa    
  41e70b:	fisubr WORD PTR [esi]
  41e70d:	xchg   esp,eax
  41e70e:	mov    ch,0xa4
  41e710:	mov    eax,ds:0x13b9b9ce
  41e715:	adc    BYTE PTR [ecx],bl
  41e717:	cmc    
  41e718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e719:	fcmovne st,st(7)
  41e71b:	mov    dl,BYTE PTR es:[edi-0x3a]
  41e71f:	mov    al,BYTE PTR [edi-0x347c56f2]
  41e725:	jl     0x41e706
  41e727:	xor    eax,0x802b27b2
  41e72c:	dec    eax
  41e72d:	xor    eax,0x908b161d
  41e732:	mov    edx,DWORD PTR [ebp+0x12d31b9e]
  41e738:	into   
  41e739:	mov    ah,0x18
  41e73b:	xor    ebp,DWORD PTR [edi]
  41e73d:	ret    
  41e73e:	cmc    
  41e73f:	xchg   esi,eax
  41e740:	imul   esp,DWORD PTR [esi+0x40],0xa59769eb
  41e747:	mov    WORD PTR [ebx+0x1f],ss
  41e74a:	xchg   ecx,eax
  41e74b:	hlt    
  41e74c:	pop    eax
  41e74d:	push   ecx
  41e74e:	ror    DWORD PTR [ecx],cl
  41e750:	cmp    bl,dh
  41e752:	cmc    
  41e753:	mov    bh,0x9a
  41e755:	push   esi
  41e756:	add    bh,BYTE PTR [ecx+0x42ccfa2]
  41e75c:	adc    BYTE PTR [ecx],0x83
  41e75f:	mov    edx,0x77a4dbd5
  41e764:	cmp    eax,0x292fbc6c
  41e769:	sar    BYTE PTR [edx+esi*4-0x3c],1
  41e76d:	aad    0x8b
  41e76f:	jmp    0x28a6:0x701e1a6
  41e776:	outs   dx,DWORD PTR ds:[esi]
  41e777:	dec    edi
  41e778:	out    dx,eax
  41e779:	imul   ecx,DWORD PTR [edx],0x45
  41e77c:	je     0x41e7a2
  41e77e:	call   0x754d69ac
  41e783:	in     al,0xd0
  41e785:	push   edi
  41e786:	sbb    al,0x7d
  41e788:	pusha  
  41e789:	inc    esp
  41e78a:	fs sahf 
  41e78c:	lock push ss
  41e78e:	sbb    ah,BYTE PTR ds:0xc5c863ef
  41e794:	syscall 
  41e796:	mov    edi,0xc5cc2dc1
  41e79b:	cwde   
  41e79c:	repz or dl,ch
  41e79f:	lahf   
  41e7a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7a1:	cmp    DWORD PTR [ebp-0x62b42a01],esp
  41e7a7:	pop    ds
  41e7a8:	mov    bl,0x6f
  41e7aa:	ss sbb DWORD PTR fs:[ecx+0x45],edi
  41e7af:	mov    al,0x35
  41e7b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7b2:	aaa    
  41e7b3:	lock popf 
  41e7b5:	add    eax,0xe69f0586
  41e7ba:	aaa    
  41e7bb:	add    DWORD PTR [eax],esp
  41e7bd:	dec    edi
  41e7be:	sahf   
  41e7bf:	test   BYTE PTR [eax+0x652ec06f],bl
  41e7c5:	sbb    eax,DWORD PTR [eax-0x9]
  41e7c8:	xor    edx,DWORD PTR [ebp-0x1f]
  41e7cb:	cmc    
  41e7cc:	aam    0x7b
  41e7ce:	add    eax,0x86a419df
  41e7d3:	adc    dh,BYTE PTR [eax-0x64d1c6f9]
  41e7d9:	call   FWORD PTR [ebx-0x26]
  41e7dc:	push   0xa71e20c5
  41e7e1:	cmp    eax,0xc790d755
  41e7e6:	xor    al,BYTE PTR [edi-0x7e6e3a5d]
  41e7ec:	loop   0x41e7ea
  41e7ee:	adc    eax,0x87621f89
  41e7f3:	test   DWORD PTR [edi],ebx
  41e7f5:	mov    al,0xc9
  41e7f7:	push   edx
  41e7f8:	fist   WORD PTR [edx]
  41e7fa:	ins    DWORD PTR es:[edi],dx
  41e7fb:	add    bl,dl
  41e7fd:	(bad)  
  41e7fe:	ffree  st(2)
  41e800:	test   BYTE PTR [edi+0x18],ah
  41e803:	les    ebp,FWORD PTR [ecx-0x7b]
  41e806:	add    eax,0xb1ac9889
  41e80b:	aas    
  41e80c:	dec    esp
  41e80d:	test   ah,cl
  41e80f:	fdiv   st,st(6)
  41e811:	dec    esi
  41e812:	jg     0x41e7fb
  41e814:	push   ss
  41e815:	stc    
  41e816:	pop    ecx
  41e817:	cmp    eax,0x9e8eef0
  41e81c:	mov    esi,0x9102a2ee
  41e821:	mov    esp,DWORD PTR [eax+edx*4]
  41e824:	test   DWORD PTR [ecx],0x833cec9d
  41e82a:	xor    esp,DWORD PTR [ebp-0x17f0c84a]
  41e830:	and    DWORD PTR [ecx],esi
  41e832:	and    DWORD PTR [ebp+edx*2-0x694750b7],0x2deec7b1
  41e83d:	jecxz  0x41e89b
  41e83f:	xchg   ecx,eax
  41e840:	retf   0x137b
  41e843:	fwait
  41e844:	or     BYTE PTR [ebx],al
  41e846:	lahf   
  41e847:	push   es
  41e848:	sub    dl,0xc9
  41e84b:	mov    dh,0xbc
  41e84d:	cmp    eax,0x594dea67
  41e852:	mov    al,0x6
  41e854:	and    eax,0xad294297
  41e859:	into   
  41e85a:	xchg   edi,eax
  41e85b:	mov    bl,0xf3
  41e85d:	je     0x41e818
  41e85f:	mov    ecx,0xdae8ca32
  41e864:	adc    eax,0xe72df984
  41e869:	or     BYTE PTR [edi],al
  41e86b:	mov    ebp,edi
  41e86d:	ins    BYTE PTR es:[edi],dx
  41e86e:	inc    ebx
  41e86f:	popa   
  41e870:	out    0xb1,al
  41e872:	std    
  41e873:	loope  0x41e816
  41e875:	jl     0x41e8ba
  41e877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e878:	test   DWORD PTR [esi+0x5b],esi
  41e87b:	inc    ebp
  41e87c:	jne    0x41e806
  41e87e:	xchg   DWORD PTR ds:0x23fe2c5c,edx
  41e884:	xchg   ebp,eax
  41e885:	outs   dx,DWORD PTR ds:[esi]
  41e886:	call   0xe683b767
  41e88b:	jmp    0x41e907
  41e88d:	pushf  
  41e88e:	adc    eax,0xfba27881
  41e893:	ja     0x41e898
  41e895:	js     0x41e8f1
  41e897:	mov    al,0x1c
  41e899:	pop    edi
  41e89a:	test   eax,0xfedfc827
  41e89f:	xor    ecx,DWORD PTR [edx]
  41e8a1:	mov    cl,0x4
  41e8a3:	pop    ss
  41e8a4:	sub    DWORD PTR [edx-0x26],ebp
  41e8a7:	dec    ebx
  41e8a8:	xor    BYTE PTR [edi-0x72d9aa1f],0x8e
  41e8af:	cmp    edi,DWORD PTR [eax-0x2d]
  41e8b2:	loopne 0x41e932
  41e8b4:	idiv   DWORD PTR ds:[esp+edi*2]
  41e8b8:	or     ecx,ebp
  41e8ba:	or     DWORD PTR [edx-0x21],esp
  41e8bd:	push   0x5a496339
  41e8c2:	dec    eax
  41e8c3:	push   cs
  41e8c4:	push   0x5ebefe81
  41e8c9:	loop   0x41e8f7
  41e8cb:	jb     0x41e945
  41e8cd:	mov    ebp,0x62002ecd
  41e8d2:	or     eax,0x38dc02ef
  41e8d7:	cmp    al,0xe0
  41e8d9:	sbb    eax,edi
  41e8db:	shl    BYTE PTR [ebx+edx*2-0x1c3f927a],cl
  41e8e2:	jo     0x41e86e
  41e8e4:	and    dl,bh
  41e8e6:	dec    esp
  41e8e7:	xchg   esi,eax
  41e8e8:	fcomp  DWORD PTR [eax-0x4310f4c7]
  41e8ee:	gs push ds
  41e8f0:	sbb    al,BYTE PTR [esi-0x60d08daf]
  41e8f6:	cmp    DWORD PTR [ecx-0x3f42297c],eax
  41e8fc:	push   ebp
  41e8fd:	nop
  41e8fe:	rol    edi,1
  41e900:	imul   ebp,edi,0x2c119790
  41e906:	jb     0x41e8a9
  41e908:	mov    esi,0x3b64463c
  41e90d:	addr16 add al,0x6f
  41e910:	loopne 0x41e89c
  41e912:	jne    0x41e90d
  41e914:	fwait
  41e915:	fwait
  41e916:	dec    BYTE PTR [esi+0x61e685fe]
  41e91c:	(bad)  
  41e91d:	sub    al,0x6f
  41e91f:	idiv   BYTE PTR [eax+ebx*1]
  41e922:	scas   eax,DWORD PTR es:[edi]
  41e923:	loop   0x41e92b
  41e925:	ret    
  41e926:	sbb    DWORD PTR [eax+0x4c],esp
  41e929:	jmp    0xf0d4:0x4ed59390
  41e930:	cmc    
  41e931:	sbb    ch,bh
  41e933:	fcomp  DWORD PTR [ecx-0x4085208]
  41e939:	push   ecx
  41e93a:	ja     0x41e95f
  41e93c:	cmp    al,0xa8
  41e93e:	loop   0x41e9a3
  41e940:	cmp    al,0x2b
  41e942:	xchg   edx,eax
  41e943:	fwait
  41e944:	mov    ds:0x54e47696,al
  41e949:	neg    BYTE PTR [eax-0x576c20f6]
  41e94f:	fild   DWORD PTR [ecx]
  41e951:	push   ecx
  41e952:	jbe    0x41e99c
  41e954:	imul   BYTE PTR [ecx+0x7f]
  41e957:	mov    ebp,eax
  41e959:	sub    DWORD PTR [esi],edx
  41e95b:	sub    al,0x7f
  41e95d:	or     DWORD PTR [eax+0x8998ed8],0x1d6f7a82
  41e967:	nop
  41e968:	mov    bl,0x8
  41e96a:	or     eax,0xa248737b
  41e96f:	jg     0x41e960
  41e971:	pop    ebx
  41e972:	imul   esp,DWORD PTR [edx+0x7bdeb8f7],0x42
  41e979:	inc    ebx
  41e97a:	aad    0x1f
  41e97c:	jo     0x41e94e
  41e97e:	jle    0x41e90a
  41e980:	inc    ecx
  41e981:	(bad)  
  41e982:	repnz shl dh,cl
  41e985:	push   edi
  41e986:	jl     0x41e964
  41e988:	out    dx,eax
  41e989:	pop    ds
  41e98a:	mov    eax,ds:0x5c5d8759
  41e98f:	sbb    esp,DWORD PTR [edx+0x19b05687]
  41e995:	data16 sbb ah,al
  41e998:	cli    
  41e999:	imul   esp,ecx,0x83360d8d
  41e99f:	adc    BYTE PTR [ecx],cl
  41e9a1:	pusha  
  41e9a2:	je     0x41e956
  41e9a4:	test   BYTE PTR [ebp+0x56c97830],bl
  41e9aa:	fs hlt 
  41e9ac:	fsubr  st(3),st
  41e9ae:	mov    ch,0xf1
  41e9b0:	outs   dx,BYTE PTR ds:[esi]
  41e9b1:	out    dx,al
  41e9b2:	and    ch,dl
  41e9b4:	pop    esp
  41e9b5:	lods   eax,DWORD PTR ds:[esi]
  41e9b6:	bnd call 0x9a4271a5
  41e9bc:	push   edi
  41e9bd:	outs   dx,BYTE PTR ds:[esi]
  41e9be:	push   0x75075467
  41e9c3:	add    eax,0x886c90a8
  41e9c8:	and    eax,0x6024ea0e
  41e9cd:	mov    ds:0xb6253e37,al
  41e9d2:	jp     0x41e9d3
  41e9d4:	shl    DWORD PTR [ecx],1
  41e9d6:	ficomp DWORD PTR [edx+0xd]
  41e9d9:	inc    edx
  41e9da:	ins    DWORD PTR es:[edi],dx
  41e9db:	lods   eax,DWORD PTR ds:[esi]
  41e9dc:	pop    es
  41e9dd:	inc    eax
  41e9de:	mov    ch,0x33
  41e9e0:	push   cs
  41e9e1:	xchg   dl,dl
  41e9e3:	dec    eax
  41e9e4:	mov    dh,0x8f
  41e9e6:	inc    edi
  41e9e7:	pop    ss
  41e9e8:	push   es
  41e9e9:	mov    ds:0x370d5d82,eax
  41e9ee:	pop    edi
  41e9ef:	sub    eax,0x56c1bb2
  41e9f4:	xor    ecx,DWORD PTR [ecx+0x6f]
  41e9f7:	test   BYTE PTR [esi+0x745dec8b],bh
  41e9fd:	and    esp,edi
  41e9ff:	ret    
  41ea00:	int3   
  41ea01:	dec    esi
  41ea02:	mov    ?,WORD PTR [ebp-0x3e]
  41ea05:	inc    edx
  41ea06:	sub    al,0x78
  41ea08:	fs push ebx
  41ea0a:	les    ecx,FWORD PTR [esi-0x43559660]
  41ea10:	and    eax,0xebaec555
  41ea15:	imul   ebx,eax,0x6cd1279e
  41ea1b:	sar    esi,0xfb
  41ea1e:	sbb    eax,0x954c576d
  41ea23:	shl    BYTE PTR [edi-0x76],1
  41ea26:	out    0x55,al
  41ea28:	(bad)  
  41ea29:	imul   esp,DWORD PTR ds:0xefa5f914,0x9187b68
  41ea33:	push   0xd146b784
  41ea38:	add    DWORD PTR [edx+0x7e],0x32ca983
  41ea3f:	or     al,0xef
  41ea41:	add    al,0x2e
  41ea43:	add    BYTE PTR [ebp+0x62c49e69],al
  41ea49:	xchg   esi,eax
  41ea4a:	pop    esi
  41ea4b:	shl    BYTE PTR [esi+0x5c],0xff
  41ea4f:	sub    ch,BYTE PTR [eax+0x7683f12a]
  41ea55:	in     al,dx
  41ea56:	adc    al,0xbb
  41ea58:	jp     0x41ea84
  41ea5a:	(bad)  
  41ea5b:	out    dx,al
  41ea5c:	enter  0xafca,0x17
  41ea60:	adc    BYTE PTR ds:0x4a98858d,bh
  41ea66:	fcom   DWORD PTR [ebp+0x6ff22f2c]
  41ea6c:	aaa    
  41ea6d:	jle    0x41ea75
  41ea6f:	dec    edx
  41ea70:	pop    ecx
  41ea71:	js     0x41ea84
  41ea73:	jp     0x41ead4
  41ea75:	inc    ebx
  41ea76:	out    0xe4,eax
  41ea78:	fsubr  DWORD PTR [edi+eax*4-0x50acd28]
  41ea7f:	inc    edi
  41ea80:	cli    
  41ea81:	test   al,0x44
  41ea83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea84:	pop    edx
  41ea85:	sti    
  41ea86:	dec    ecx
  41ea87:	mov    ds:0x56202ecf,al
  41ea8c:	pusha  
  41ea8d:	jo     0x41eab2
  41ea8f:	add    BYTE PTR [ecx],bl
  41ea91:	cdq    
  41ea92:	sub    dl,al
  41ea94:	add    BYTE PTR [eax],0x60
  41ea97:	pop    eax
  41ea98:	and    eax,0x47b074a2
  41ea9d:	lds    eax,FWORD PTR [ebp+0x1d9ad4d9]
  41eaa3:	inc    esi
  41eaa4:	test   esp,0x31b35d5b
  41eaaa:	not    DWORD PTR [ebx+0x2f466ce6]
  41eab0:	and    eax,0x782fcaf5
  41eab5:	ret    0xbe6
  41eab8:	inc    edi
  41eab9:	hlt    
  41eaba:	(bad)  
  41eabb:	int    0x23
  41eabd:	repnz aad 0x87
  41eac0:	cwde   
  41eac1:	cld    
  41eac2:	push   edx
  41eac3:	outs   dx,DWORD PTR ds:[esi]
  41eac4:	pushf  
  41eac5:	out    0xd7,al
  41eac7:	fs push 0x7a
  41eaca:	leave  
  41eacb:	popa   
  41eacc:	aaa    
  41eacd:	cli    
  41eace:	cld    
  41eacf:	call   0x172:0x64771d9b
  41ead6:	or     bh,BYTE PTR [ebx+ebp*2+0xa6cf11e]
  41eadd:	fnstenv [ebp+0x5a665f13]
  41eae3:	das    
  41eae4:	fs call 0x1850:0x58efa1fa
  41eaec:	mov    esp,0xb4a299e5
  41eaf1:	lods   eax,DWORD PTR ds:[esi]
  41eaf2:	or     eax,0x61918c71
  41eaf7:	mov    BYTE PTR [esi-0x7c5ceea3],ah
  41eafd:	retf   
  41eafe:	or     edx,DWORD PTR [ebx-0xb]
  41eb01:	in     eax,0x71
  41eb03:	mov    eax,ds:0x78e0888c
  41eb08:	adc    DWORD PTR [ecx],edi
  41eb0a:	add    BYTE PTR [edi],bl
  41eb0c:	jo     0x41eb0e
  41eb0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb0f:	push   esp
  41eb10:	adc    BYTE PTR [ebx+0x6c01d816],0x53
  41eb17:	pushf  
  41eb18:	jbe    0x41eb5c
  41eb1a:	daa    
  41eb1b:	icebp  
  41eb1c:	inc    edx
  41eb1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb1e:	retf   0xd95
  41eb21:	sub    DWORD PTR [ecx+0x32],0x2cb5f0a7
  41eb28:	xchg   edi,eax
  41eb29:	call   0x9422:0xcc54685f
  41eb30:	pop    esi
  41eb31:	stc    
  41eb32:	and    eax,0x9c73f04e
  41eb37:	xor    ch,BYTE PTR [ebp-0x4a6a884f]
  41eb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb3e:	mov    BYTE PTR [ecx],dl
  41eb40:	xchg   edi,eax
  41eb41:	jmp    0x53614eee
  41eb46:	bound  ebp,QWORD PTR [ebx-0x72]
  41eb49:	outs   dx,BYTE PTR ds:[esi]
  41eb4a:	(bad)  
  41eb4c:	and    BYTE PTR [esi],bl
  41eb4e:	popa   
  41eb4f:	sub    al,0xbc
  41eb51:	mov    esp,0x3da9d168
  41eb56:	or     al,0xbc
  41eb58:	push   es
  41eb59:	push   ebx
  41eb5a:	lea    edx,[ebx-0x431b7725]
  41eb60:	jg     0x41eaf4
  41eb62:	imul   esp,ecx,0x4e6c6a9a
  41eb68:	pop    ebx
  41eb69:	pusha  
  41eb6a:	add    al,0x32
  41eb6c:	std    
  41eb6d:	ficom  WORD PTR [edx]
  41eb6f:	ret    0xffb0
  41eb72:	add    eax,0xa5a6be60
  41eb77:	cmp    eax,0x1d1e0716
  41eb7c:	xchg   edi,eax
  41eb7d:	mov    ebx,ebp
  41eb7f:	fs jae 0x41eb7c
  41eb82:	shl    BYTE PTR [edi],1
  41eb84:	xchg   ecx,eax
  41eb85:	fild   QWORD PTR [edx]
  41eb87:	dec    eax
  41eb88:	arpl   sp,cx
  41eb8a:	mov    ebp,ds
  41eb8c:	or     BYTE PTR [edx+0x23d7c241],dl
  41eb92:	loop   0x41eb52
  41eb94:	cmp    eax,0x8f3d7fa2
  41eb99:	inc    ecx
  41eb9a:	mov    dl,0x6e
  41eb9c:	sbb    al,0xa8
  41eb9e:	stos   DWORD PTR es:[edi],eax
  41eb9f:	adc    BYTE PTR [eax],ah
  41eba1:	push   ss
  41eba2:	pop    ebx
  41eba3:	pop    esi
  41eba4:	mov    bh,0x50
  41eba6:	pop    es
  41eba7:	outs   dx,BYTE PTR ds:[esi]
  41eba8:	inc    ecx
  41eba9:	mov    bh,0xc3
  41ebab:	add    DWORD PTR [esi+0x3d],edx
  41ebae:	and    DWORD PTR [ebx-0x10],ebx
  41ebb1:	pop    ebp
  41ebb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebb3:	inc    ebp
  41ebb4:	pop    ss
  41ebb5:	mov    ds:0xab26f762,eax
  41ebba:	sbb    al,0xb2
  41ebbc:	into   
  41ebbd:	shr    BYTE PTR [ebx],0x67
  41ebc0:	add    esi,ecx
  41ebc2:	push   ecx
  41ebc3:	or     eax,ebx
  41ebc5:	retf   0x6f09
  41ebc8:	out    0xa7,eax
  41ebca:	xor    BYTE PTR [eax+eiz*1],ah
  41ebcd:	bnd ja 0x41eb9e
  41ebd0:	fbld   TBYTE PTR [ecx]
  41ebd2:	dec    edi
  41ebd3:	mov    al,ds:0xbe676a4f
  41ebd8:	scas   al,BYTE PTR es:[edi]
  41ebd9:	sahf   
  41ebda:	add    eax,0x5c138baa
  41ebdf:	nop
  41ebe0:	adc    BYTE PTR [edx-0x1a],dl
  41ebe3:	xchg   BYTE PTR [eax+0x645a29fd],ah
  41ebe9:	cs jl  0x41eb6f
  41ebec:	out    0x9a,al
  41ebee:	call   0xf1ac:0x1f63eba4
  41ebf5:	mov    edx,0x17190d3
  41ebfa:	and    eax,0xa9588788
  41ebff:	rcr    DWORD PTR [edx+0x4d1ba6b4],0x66
  41ec06:	or     ebx,esp
  41ec08:	dec    ebx
  41ec09:	mov    BYTE PTR [esi],bh
  41ec0b:	jno    0x41ec38
  41ec0d:	xchg   DWORD PTR [edi+eiz*1],eax
  41ec10:	ja     0x41eba2
  41ec12:	lods   eax,DWORD PTR ds:[esi]
  41ec13:	or     al,0x0
  41ec15:	jecxz  0x41ebf1
  41ec17:	mov    ah,0xb3
  41ec19:	add    al,0xbd
  41ec1b:	ret    
  41ec1c:	jnp    0x41ebd7
  41ec1e:	inc    edi
  41ec1f:	shr    BYTE PTR [esi+0x32],1
  41ec22:	mov    dh,0xef
  41ec24:	xor    DWORD PTR [edx-0x33],ebx
  41ec27:	jmp    0x41ec7c
  41ec29:	out    dx,al
  41ec2a:	push   edx
  41ec2b:	adc    al,0x1b
  41ec2d:	pop    ss
  41ec2e:	in     eax,0x4e
  41ec30:	test   esi,esp
  41ec32:	or     ecx,esi
  41ec34:	arpl   WORD PTR [ecx-0x3c62a692],sp
  41ec3a:	fdivrp st(4),st
  41ec3c:	dec    ebx
  41ec3d:	xor    eax,ebp
  41ec3f:	push   ss
  41ec40:	enter  0xf0e2,0xb4
  41ec44:	fcmovnu st,st(6)
  41ec46:	and    bh,ch
  41ec48:	adc    BYTE PTR [ecx+0x64],ah
  41ec4b:	xor    al,BYTE PTR es:[ebx]
  41ec4e:	stos   BYTE PTR es:[edi],al
  41ec4f:	xor    BYTE PTR [ebx],bh
  41ec51:	mov    al,0xb8
  41ec53:	or     edi,DWORD PTR [eax]
  41ec55:	sub    BYTE PTR [eax+0x1f37c2f3],bl
  41ec5b:	jecxz  0x41ec11
  41ec5d:	iret   
  41ec5e:	push   eax
  41ec5f:	sar    esp,cl
  41ec61:	out    0xd,al
  41ec63:	inc    ecx
  41ec64:	push   ds
  41ec65:	fisub  DWORD PTR [eax+0x56]
  41ec68:	bound  ebx,QWORD PTR [edx-0x50]
  41ec6b:	xor    al,0x61
  41ec6d:	dec    esi
  41ec6e:	pop    edi
  41ec6f:	pushf  
  41ec70:	jle    0x41ec77
  41ec72:	imul   ebx,DWORD PTR [eax],0x91270303
  41ec78:	and    cl,cl
  41ec7a:	push   ebx
  41ec7b:	xor    eax,0xe226c0de
  41ec80:	push   eax
  41ec81:	outs   dx,DWORD PTR ds:[esi]
  41ec82:	push   0x2291f5c2
  41ec87:	push   edx
  41ec88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec89:	xlat   BYTE PTR ds:[ebx]
  41ec8a:	push   eax
  41ec8b:	into   
  41ec8c:	test   edi,ebx
  41ec8e:	popa   
  41ec8f:	xchg   esi,eax
  41ec90:	mov    esp,0xe559452c
  41ec95:	mov    DWORD PTR [esi-0x6ba978d7],ebx
  41ec9b:	add    eax,0x6ad1ca3c
  41eca0:	outs   dx,DWORD PTR ds:[esi]
  41eca1:	add    DWORD PTR [esi],edx
  41eca3:	pop    ebp
  41eca4:	cli    
  41eca5:	lahf   
  41eca6:	sahf   
  41eca7:	and    dh,ch
  41eca9:	test   al,0xd
  41ecab:	inc    ecx
  41ecac:	fiadd  DWORD PTR [eax+0x37]
  41ecaf:	test   dl,ch
  41ecb1:	mov    ds:0xa025367,eax
  41ecb6:	aam    0x4d
  41ecb8:	xchg   esp,eax
  41ecb9:	lds    edi,FWORD PTR [eax+0x40]
  41ecbc:	inc    ebx
  41ecbd:	and    eax,0x74b041b4
  41ecc2:	int3   
  41ecc3:	aas    
  41ecc4:	daa    
  41ecc5:	out    dx,eax
  41ecc6:	add    DWORD PTR [ebx+0x40],0xffffff85
  41ecca:	sbb    bh,BYTE PTR [ecx-0x3a]
  41eccd:	xor    al,0xcf
  41eccf:	or     ecx,esi
  41ecd1:	mov    al,ds:0xfd5a0117
  41ecd6:	add    bl,ah
  41ecd8:	cmp    dh,BYTE PTR [esi]
  41ecda:	sub    DWORD PTR [esi-0x5be3f791],edi
  41ece0:	les    edi,FWORD PTR [edi-0x3e65d49e]
  41ece6:	lock mov esp,0xdf135616
  41ecec:	clc    
  41eced:	xchg   esp,eax
  41ecee:	daa    
  41ecef:	inc    edx
  41ecf0:	pop    ecx
  41ecf1:	(bad)  
  41ecf2:	shl    ebp,cl
  41ecf4:	mov    dh,0x11
  41ecf6:	jbe    0x41ec8f
  41ecf8:	inc    edi
  41ecf9:	dec    ebp
  41ecfa:	nop
  41ecfb:	push   edi
  41ecfc:	mov    bh,0xa4
  41ecfe:	dec    ebp
  41ecff:	sub    DWORD PTR [eax-0x4c7b7a29],ecx
  41ed05:	jmp    0x3a13:0x83f94fc1
  41ed0c:	ror    DWORD PTR es:[esi+0x3db9eaa7],0xb8
  41ed14:	mov    edi,0x49d073a
  41ed19:	rdpmc  
  41ed1b:	xchg   esi,eax
  41ed1c:	push   cs
  41ed1d:	clc    
  41ed1e:	pop    ebp
  41ed1f:	mov    ah,0x21
  41ed21:	jg     0x41ed93
  41ed23:	call   0x9993c6e6
  41ed28:	(bad)  
  41ed29:	or     ebx,DWORD PTR [eax]
  41ed2b:	outs   dx,DWORD PTR ds:[esi]
  41ed2c:	mov    dh,0xbd
  41ed2e:	jg     0x41ed20
  41ed30:	hlt    
  41ed31:	inc    edx
  41ed32:	and    esi,ebx
  41ed34:	mov    BYTE PTR [edi-0x63],bh
  41ed37:	jo     0x41ecfc
  41ed39:	jns    0x41ed64
  41ed3b:	xchg   edi,eax
  41ed3c:	test   ebp,ecx
  41ed3e:	add    BYTE PTR [ecx+esi*8-0x38],cl
  41ed42:	retf   0x45f3
  41ed45:	scas   eax,DWORD PTR es:[edi]
  41ed46:	lds    ebp,FWORD PTR [ebx+eiz*2]
  41ed49:	dec    ebx
  41ed4a:	shl    DWORD PTR [esi+0x44],cl
  41ed4d:	pop    esp
  41ed4e:	sbb    eax,0x5c26495b
  41ed53:	mov    BYTE PTR [ebp-0x4a],dl
  41ed56:	rcr    DWORD PTR [esi],cl
  41ed58:	imul   ebp,DWORD PTR [edi+0x710946e],0xaafc266d
  41ed62:	das    
  41ed63:	(bad)  
  41ed64:	loope  0x41ed5f
  41ed66:	sbb    esp,esi
  41ed68:	fdiv   QWORD PTR [edi+0x1d1d8734]
  41ed6e:	cmp    BYTE PTR [edi],cl
  41ed70:	jne    0x41ede4
  41ed72:	mov    al,ds:0x351ac4be
  41ed77:	sub    al,0x23
  41ed79:	fdivr  st(1),st
  41ed7b:	xchg   ebp,eax
  41ed7c:	and    al,0x34
  41ed7e:	xchg   ebx,eax
  41ed7f:	ret    0x579c
  41ed82:	mov    eax,ds:0x50ef617e
  41ed87:	out    dx,al
  41ed88:	and    al,ah
  41ed8a:	mov    al,0xd2
  41ed8c:	pusha  
  41ed8d:	mov    ecx,0x131a4caa
  41ed92:	test   BYTE PTR [ecx-0x151cef27],0x15
  41ed99:	retf   0x816e
  41ed9c:	add    eax,0x430c2959
  41eda1:	xchg   edi,eax
  41eda2:	push   esi
  41eda3:	loope  0x41edae
  41eda5:	and    bl,bl
  41eda7:	mov    ch,0x9b
  41eda9:	xchg   ebx,eax
  41edaa:	imul   esp,DWORD PTR [ebx+0xa],0x42
  41edae:	sbb    edx,ebx
  41edb0:	sub    esp,edx
  41edb2:	imul   ebp,DWORD PTR [eax-0x56],0xa6ee2f40
  41edb9:	jl     0x41eda7
  41edbb:	pop    edx
  41edbc:	pop    ebp
  41edbd:	pop    esp
  41edbe:	pop    esi
  41edbf:	imul   edi,DWORD PTR [ecx-0x41],0xffffffa2
  41edc3:	ret    0xe61f
  41edc6:	je     0x41ed6c
  41edc8:	bound  eax,QWORD PTR [edx-0x21]
  41edcb:	outs   dx,BYTE PTR ds:[esi]
  41edcc:	add    eax,0x8641e7a6
  41edd1:	popa   
  41edd2:	neg    edi
  41edd4:	jg     0x41ee15
  41edd6:	mov    al,ds:0xe85c1a97
  41eddb:	sub    bh,BYTE PTR [ecx-0x30]
  41edde:	int3   
  41eddf:	les    ebx,FWORD PTR [ecx-0x73290cc]
  41ede5:	xchg   edi,eax
  41ede6:	cmp    BYTE PTR [esi+eiz*8],cl
  41ede9:	in     al,dx
  41edea:	fcom   QWORD PTR ds:0x57a6b197
  41edf0:	call   0x2e24:0x29d9f1d0
  41edf7:	int    0xfe
  41edf9:	cmp    al,0xb1
  41edfb:	mov    edx,edi
  41edfd:	fadd   st,st(5)
  41edff:	mov    eax,0x3b8e2598
  41ee04:	xchg   BYTE PTR [ecx+0x61],ch
  41ee07:	pop    ebx
  41ee08:	daa    
  41ee09:	xor    al,0x6c
  41ee0b:	mov    al,ds:0x15f242a3
  41ee10:	frstor [ecx]
  41ee12:	and    DWORD PTR [edi+0x2f],eax
  41ee15:	int3   
  41ee16:	mov    ebx,0x5f8a1333
  41ee1b:	sbb    al,0xa
  41ee1d:	mov    ah,0xdc
  41ee1f:	out    dx,al
  41ee20:	aaa    
  41ee21:	inc    edx
  41ee22:	mov    ds:0xd27d8313,eax
  41ee27:	jo     0x41eea2
  41ee29:	dec    ebx
  41ee2a:	and    eax,0x70086637
  41ee2f:	mov    DWORD PTR [eax+eax*4-0x32],ebp
  41ee33:	xchg   DWORD PTR [edi],ebx
  41ee35:	hlt    
  41ee36:	sar    DWORD PTR [ebp+edi*4+0x56],0x58
  41ee3b:	lea    esp,[esi+0x61]
  41ee3e:	xor    al,0x89
  41ee40:	xchg   BYTE PTR [edx-0x69],bl
  41ee43:	jae    0x41edcd
  41ee45:	leave  
  41ee46:	dec    edx
  41ee47:	shr    bh,1
  41ee49:	daa    
  41ee4a:	cli    
  41ee4b:	push   0xffffffef
  41ee4d:	das    
  41ee4e:	aam    0xa0
  41ee50:	pop    ebp
  41ee51:	(bad)  
  41ee52:	mov    edx,DWORD PTR [ebx+0x37ef71c9]
  41ee58:	pop    edi
  41ee59:	or     dl,BYTE PTR ds:[ebp+0x76967eb0]
  41ee60:	dec    eax
  41ee61:	mov    edi,0x8ebb24f3
  41ee66:	data16 jp 0x41ee94
  41ee69:	retf   0xb348
  41ee6c:	ins    BYTE PTR es:[edi],dx
  41ee6d:	out    0x50,al
  41ee6f:	jb     0x41ee7c
  41ee71:	(bad)  
  41ee72:	mov    al,ds:0x405d89e0
  41ee77:	lock popf 
  41ee79:	inc    BYTE PTR [esi-0x217f8be7]
  41ee7f:	leave  
  41ee80:	int3   
  41ee81:	jne    0x41ee84
  41ee83:	and    BYTE PTR [ebp+0x3e],cl
  41ee86:	mov    al,ds:0x9d8bcf08
  41ee8b:	jmp    DWORD PTR [ebx+0x69c06294]
  41ee91:	mov    cl,0xc4
  41ee93:	out    dx,al
  41ee94:	pushf  
  41ee95:	jmp    0xb1ed44d6
  41ee9a:	inc    ebx
  41ee9b:	or     bh,bh
  41ee9d:	or     DWORD PTR [edi-0x1509ba9b],0xffffffeb
  41eea4:	sahf   
  41eea5:	cmp    BYTE PTR [edx+ebp*1-0x3c91b226],al
  41eeac:	lods   al,BYTE PTR ds:[esi]
  41eead:	push   esp
  41eeae:	add    DWORD PTR [edi],esp
  41eeb0:	mov    ds,ebp
  41eeb2:	xchg   edi,eax
  41eeb3:	pop    ebx
  41eeb4:	js     0x41eed0
  41eeb6:	inc    esi
  41eeb7:	xor    bl,dh
  41eeb9:	rol    DWORD PTR [ebx+0x2f],cl
  41eebc:	pop    si
  41eebe:	mov    bl,0x97
  41eec0:	loop   0x41eea5
  41eec2:	sbb    DWORD PTR [esi],edi
  41eec4:	jno    0x41eeeb
  41eec6:	push   ebp
  41eec7:	in     eax,dx
  41eec8:	into   
  41eec9:	out    0xa2,eax
  41eecb:	icebp  
  41eecc:	test   al,0x8c
  41eece:	je     0x41ee6f
  41eed0:	push   esi
  41eed1:	jmp    0x6a3daf1f
  41eed6:	scas   eax,DWORD PTR es:[edi]
  41eed7:	icebp  
  41eed8:	jmp    0x44a1:0x8e260d3b
  41eedf:	or     al,0xed
  41eee1:	(bad)  
  41eee2:	addr16 inc edi
  41eee4:	rol    DWORD PTR [edi+eiz*1],0x1c
  41eee8:	outs   dx,DWORD PTR ds:[esi]
  41eee9:	nop    DWORD PTR [eax]
  41eeec:	test   al,0x1c
  41eeee:	(bad)  
  41eeef:	jmp    0x42138676
  41eef4:	cs lock mov eax,?
  41eef8:	push   eax
  41eef9:	xor    BYTE PTR [esi],dl
  41eefb:	(bad)  
  41eefc:	neg    bl
  41eefe:	iret   
  41eeff:	stc    
  41ef00:	pushf  
  41ef01:	icebp  
  41ef02:	inc    esp
  41ef03:	mov    ds,WORD PTR [eax+0x395a0398]
  41ef09:	hlt    
  41ef0a:	ret    0xae42
  41ef0d:	lods   al,BYTE PTR ds:[esi]
  41ef0e:	adc    DWORD PTR [ecx-0x3],ebp
  41ef11:	jns    0x41ee99
  41ef13:	mov    bl,0xba
  41ef15:	lock js 0x41eee1
  41ef18:	xor    eax,0xdf5555aa
  41ef1d:	arpl   di,di
  41ef1f:	rcr    BYTE PTR [ebx],1
  41ef21:	xchg   esi,eax
  41ef22:	out    0xe2,eax
  41ef24:	in     al,dx
  41ef25:	sbb    bh,dh
  41ef27:	jecxz  0x41eec9
  41ef29:	push   0x128312cd
  41ef2e:	adc    dl,BYTE PTR [esi]
  41ef30:	mov    cl,0xd5
  41ef32:	mov    ch,BYTE PTR [edi+0x2257723a]
  41ef38:	aas    
  41ef39:	into   
  41ef3a:	cmp    DWORD PTR [esi-0x502521e6],edi
  41ef40:	pop    ebp
  41ef41:	xchg   edx,eax
  41ef42:	or     DWORD PTR [ebp+0x59085dab],ecx
  41ef48:	sub    bl,BYTE PTR ss:[edx+edi*4+0x13d22042]
  41ef50:	and    DWORD PTR [edx+0x4c],0x4
  41ef54:	or     al,0x34
  41ef56:	adc    eax,0xaa35c76
  41ef5b:	cmp    eax,DWORD PTR [ebx-0x4c]
  41ef5e:	pop    esp
  41ef5f:	cmp    BYTE PTR [ebp+0x7b50d7c0],cl
  41ef65:	in     eax,dx
  41ef66:	cmp    al,0xd5
  41ef68:	push   0x89facc6
  41ef6d:	loope  0x41ef6b
  41ef6f:	cmp    DWORD PTR [ecx+ecx*1-0x66208119],0xfa27857d
  41ef7a:	xor    DWORD PTR [edx+ecx*1+0x31],0x7f1cadbe
  41ef82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef83:	lahf   
  41ef84:	dec    ecx
  41ef85:	loop   0x41efb0
  41ef87:	inc    edi
  41ef88:	pop    edi
  41ef89:	dec    eax
  41ef8a:	fisttp DWORD PTR [esi]
  41ef8c:	pop    ss
  41ef8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef8e:	sahf   
  41ef8f:	push   cs
  41ef90:	cs xchg ecx,eax
  41ef92:	iret   
  41ef93:	jl     0x41ef4d
  41ef95:	rcr    BYTE PTR [ebp-0x44],cl
  41ef98:	sbb    DWORD PTR [edx+ebp*2],0x27f51d9d
  41ef9f:	(bad)  
  41efa0:	jg     0x41efbb
  41efa2:	cmp    eax,0x1b18ae21
  41efa7:	sbb    BYTE PTR [esi],al
  41efa9:	xchg   esi,eax
  41efaa:	push   0x82e00ba
  41efaf:	lods   eax,DWORD PTR ds:[esi]
  41efb0:	imul   ecx,DWORD PTR [esp+esi*1],0x69
  41efb4:	retf   
  41efb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb6:	sahf   
  41efb7:	out    0x17,eax
  41efb9:	adc    eax,DWORD PTR [edi+esi*1+0x7104c51]
  41efc0:	push   ebx
  41efc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efc2:	retf   0x2fb3
  41efc5:	out    dx,al
  41efc6:	add    bh,BYTE PTR [edx+0x3fa2aabc]
  41efcc:	popf   
  41efcd:	cmp    cl,BYTE PTR ds:0xfd1a0635
  41efd3:	sub    DWORD PTR [ebx],esp
  41efd5:	popa   
  41efd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd7:	adc    bh,ch
  41efd9:	addr16 xchg edx,eax
  41efdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efdc:	leave  
  41efdd:	(bad)
  41efe0:	sbb    al,BYTE PTR [eax-0x40]
  41efe3:	jae    0x41efcf
  41efe5:	push   esi
  41efe6:	add    al,0xa1
  41efe8:	mov    ecx,0x583fd35a
  41efed:	jns    0x41ef8f
  41efef:	out    dx,al
  41eff0:	dec    edi
  41eff1:	in     eax,dx
  41eff2:	punpckhbw mm2,QWORD PTR [ebp-0x1656d3d7]
  41eff9:	adc    dh,al
  41effb:	xor    edx,DWORD PTR [ebx+0x12a79acf]
  41f001:	js     0x41efdc
  41f003:	jecxz  0x41ef87
  41f005:	retf   
  41f006:	ds push ss
  41f008:	mov    ah,0x28
  41f00a:	jae    0x41f081
  41f00c:	rcr    DWORD PTR [esi],0xf5
  41f00f:	xchg   esp,eax
  41f010:	les    esp,FWORD PTR [eax-0x49da9ed1]
  41f016:	jne    0x41f06e
  41f018:	jg     0x41efd6
  41f01a:	fiadd  WORD PTR [eax-0x2d]
  41f01d:	or     DWORD PTR [ecx+0x2b],edx
  41f020:	mov    bl,0xb8
  41f022:	or     eax,DWORD PTR [ebp-0x7f]
  41f025:	pop    edx
  41f026:	pusha  
  41f027:	xor    al,0x39
  41f029:	fwait
  41f02a:	push   esi
  41f02b:	mov    esp,0x2380218e
  41f030:	cmp    esp,DWORD PTR [eax]
  41f032:	mov    ecx,esp
  41f034:	push   ebp
  41f035:	popf   
  41f036:	fistp  DWORD PTR [ebp-0x56bbda7]
  41f03c:	sahf   
  41f03d:	fisub  DWORD PTR [edi+0x2d0aecae]
  41f043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f044:	mulps  xmm1,XMMWORD PTR [ebx-0x8]
  41f048:	xor    ebp,DWORD PTR [ecx]
  41f04a:	cmp    ch,BYTE PTR [edi]
  41f04c:	mov    fs,eax
  41f04e:	aad    0xf3
  41f050:	icebp  
  41f051:	or     DWORD PTR ds:0xed5b8405,esp
  41f057:	repnz sub eax,0xfcfc5218
  41f05d:	and    esp,DWORD PTR [ecx+0x65]
  41f060:	and    edx,DWORD PTR [esp+ecx*8+0x6c]
  41f064:	xlat   BYTE PTR ds:[ebx]
  41f065:	mov    eax,ds:0x26f68144
  41f06a:	adc    al,0x2d
  41f06c:	scas   al,BYTE PTR es:[edi]
  41f06d:	pushf  
  41f06e:	push   esp
  41f06f:	push   es
  41f070:	cld    
  41f071:	aas    
  41f072:	ret    0xfbb6
  41f075:	addr16 ret 
  41f077:	xor    esi,DWORD PTR [edx+esi*1-0x16830f06]
  41f07e:	push   ecx
  41f07f:	sar    DWORD PTR [edi+0x34],0x61
  41f083:	jo     0x41f091
  41f085:	cli    
  41f086:	add    eax,0x856c2a63
  41f08b:	sbb    al,0xda
  41f08d:	in     eax,0x85
  41f08f:	xor    DWORD PTR [ecx],edi
  41f091:	ficom  DWORD PTR [eax-0x3]
  41f094:	or     dh,BYTE PTR [ebx+0x7d24e298]
  41f09a:	pop    eax
  41f09b:	cmp    DWORD PTR [ebp+ebx*1+0x6ea57cd],0x7b
  41f0a3:	add    eax,0xca12ae30
  41f0a8:	adc    al,0x5b
  41f0aa:	clc    
  41f0ab:	sbb    DWORD PTR [esi+esi*2-0x55],ebp
  41f0af:	and    edi,edx
  41f0b1:	inc    ebx
  41f0b2:	daa    
  41f0b3:	mov    dh,0x63
  41f0b5:	loopne 0x41f0b5
  41f0b7:	loopne 0x41f0b6
  41f0b9:	in     al,dx
  41f0ba:	push   ss
  41f0bb:	dec    esi
  41f0bc:	ins    DWORD PTR es:[edi],dx
  41f0bd:	jmp    0xb3a45cd3
  41f0c2:	imul   ebp,DWORD PTR ds:0xcf9a8488,0x60aa3a48
  41f0cc:	aas    
  41f0cd:	jb     0x41f0bd
  41f0cf:	jnp    0x41f060
  41f0d1:	aas    
  41f0d2:	jns    0x41f11a
  41f0d4:	aas    
  41f0d5:	icebp  
  41f0d6:	jmp    0x2cf6:0xd5d086d
  41f0dd:	mov    eax,DWORD PTR [edi]
  41f0df:	std    
  41f0e0:	ja     0x41f091
  41f0e2:	sbb    esp,DWORD PTR [edx-0x49]
  41f0e5:	and    eax,0xf9cf317c
  41f0ea:	jg     0x41f163
  41f0ec:	nop
  41f0ed:	or     ecx,DWORD PTR [ebp+0x23]
  41f0f0:	push   eax
  41f0f1:	fistp  DWORD PTR [ebx-0x689f2898]
  41f0f7:	shl    eax,0xc1
  41f0fa:	jo     0x41f177
  41f0fc:	xor    bl,BYTE PTR [ecx+0x13]
  41f0ff:	or     BYTE PTR [ebx],0x9
  41f102:	mov    al,ds:0x7c2c4261
  41f107:	mov    ecx,0x4fefce1
  41f10c:	mov    ebp,cr4
  41f10f:	mov    cl,0x76
  41f111:	and    al,0x86
  41f113:	xor    ebp,DWORD PTR [edi]
  41f115:	lock mul DWORD PTR [ebx+0x5b]
  41f119:	hlt    
  41f11a:	adc    ch,ah
  41f11c:	nop
  41f11d:	imul   esp,DWORD PTR [ebp-0xa09e89],0x65d5c5b2
  41f127:	pop    ebx
  41f128:	xchg   ecx,eax
  41f129:	mov    ebx,0x6ba28627
  41f12e:	ss lahf 
  41f130:	(bad)  
  41f131:	fwait
  41f132:	jb     0x41f0fb
  41f134:	out    dx,eax
  41f135:	pop    esi
  41f136:	das    
  41f137:	mov    WORD PTR [eax+edx*1-0x6d],ss
  41f13b:	push   0x76
  41f13d:	clc    
  41f13e:	and    eax,0x6daa268a
  41f143:	neg    BYTE PTR [esi-0x5e958111]
  41f149:	retf   0x4a8c
  41f14c:	iret   
  41f14d:	jge    0x41f0f2
  41f14f:	cli    
  41f150:	sahf   
  41f151:	mov    al,0xb1
  41f153:	ds inc edi
  41f155:	loop   0x41f14c
  41f157:	int3   
  41f158:	test   ah,dh
  41f15a:	dec    esi
  41f15b:	xchg   esi,eax
  41f15c:	add    DWORD PTR [edi+0x2a17d62e],edx
  41f162:	jmp    0x5969:0x6ff80ef4
  41f169:	icebp  
  41f16a:	jge    0x41f17d
  41f16c:	dec    ecx
  41f16d:	mov    edx,0xa37bc63
  41f172:	popa   
  41f173:	and    al,0x2c
  41f175:	stc    
  41f176:	push   esp
  41f177:	pop    ss
  41f178:	mov    dh,0xd6
  41f17a:	jb     0x41f197
  41f17c:	sti    
  41f17d:	mov    edi,DWORD PTR ds:0xa279f15b
  41f183:	mov    ds:0x99ea44eb,al
  41f188:	out    0xd4,al
  41f18a:	or     cl,dh
  41f18c:	mov    edx,0x6baa49f
  41f191:	jmp    0x41f191
  41f193:	gs mov dl,0x22
  41f196:	or     al,0x75
  41f198:	in     al,0x2
  41f19a:	cmp    dl,BYTE PTR [edx]
  41f19c:	sbb    DWORD PTR [eax],ebp
  41f19e:	inc    esp
  41f19f:	or     al,0x6
  41f1a1:	pushf  
  41f1a2:	nop
  41f1a3:	call   0x426cd8e8
  41f1a8:	sbb    ebp,ebx
  41f1aa:	aas    
  41f1ab:	sbb    dh,BYTE PTR [edx-0x9]
  41f1ae:	in     al,dx
  41f1af:	into   
  41f1b0:	fimul  DWORD PTR [ecx-0x16]
  41f1b3:	rcl    BYTE PTR [edi+0x1d078656],cl
  41f1b9:	in     eax,dx
  41f1ba:	popa   
  41f1bb:	ja     0x41f141
  41f1bd:	popa   
  41f1be:	out    dx,eax
  41f1bf:	test   esi,edi
  41f1c1:	stos   BYTE PTR es:[edi],al
  41f1c2:	sbb    BYTE PTR ds:0x9c83cf55,dl
  41f1c8:	cld    
  41f1c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ca:	in     eax,dx
  41f1cb:	xchg   DWORD PTR [edx-0x4d2ecec3],ebp
  41f1d1:	mov    ch,0x80
  41f1d3:	(bad)  
  41f1d4:	push   ds
  41f1d5:	sbb    eax,0x7baf3ef6
  41f1da:	sti    
  41f1db:	xchg   BYTE PTR ds:0xa45f122a,al
  41f1e1:	jb     0x41f240
  41f1e3:	add    al,BYTE PTR [ebx]
  41f1e5:	inc    esi
  41f1e6:	inc    eax
  41f1e7:	or     dl,BYTE PTR [ecx+eiz*1]
  41f1ea:	test   DWORD PTR [eax+esi*4],edx
  41f1ed:	loop   0x41f22e
  41f1ef:	sti    
  41f1f0:	leave  
  41f1f1:	add    edx,DWORD PTR [edx]
  41f1f3:	mov    ebx,0x7f99c544
  41f1f8:	hlt    
  41f1f9:	dec    eax
  41f1fa:	leave  
  41f1fb:	adc    BYTE PTR [edi-0x4],bl
  41f1fe:	or     al,0x60
  41f200:	cmp    DWORD PTR [edi],esp
  41f202:	stc    
  41f203:	pop    edi
  41f204:	and    al,0x31
  41f206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f207:	fnstsw WORD PTR [eax-0x2613cece]
  41f20d:	retf   0xa43c
  41f210:	ja     0x41f26b
  41f212:	xor    eax,0x153f719d
  41f217:	les    ebx,FWORD PTR [esp+ebx*4-0x3d234dc9]
  41f21e:	jo     0x41f1da
  41f220:	mov    edx,0x2bf2ffa4
  41f225:	(bad)  
  41f226:	push   ebx
  41f227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f228:	dec    edi
  41f229:	data16 aaa 
  41f22b:	popf   
  41f22c:	aaa    
  41f22d:	into   
  41f22e:	push   eax
  41f22f:	popf   
  41f230:	mov    edx,0x627be287
  41f235:	popa   
  41f236:	lock xor eax,0x61c524b1
  41f23c:	into   
  41f23d:	in     eax,dx
  41f23e:	xor    al,0x89
  41f240:	mov    ?,WORD PTR [edi+0x2]
  41f243:	(bad)
  41f246:	mov    edi,0xbb06cfa6
  41f24b:	ds jnp 0x41f1cf
  41f24e:	push   eax
  41f24f:	scas   eax,DWORD PTR es:[edi]
  41f250:	ficom  DWORD PTR [edi-0x73afea36]
  41f256:	(bad)  
  41f257:	test   eax,0x6e3d7d87
  41f25c:	mov    esp,0xea097e4d
  41f261:	mov    ds:0xe41b9c99,eax
  41f266:	pop    esp
  41f267:	loope  0x41f243
  41f269:	outs   dx,BYTE PTR ds:[esi]
  41f26a:	(bad)  
  41f26b:	out    0x6f,eax
  41f26d:	into   
  41f26e:	pop    ecx
  41f26f:	xchg   BYTE PTR [edi+esi*8],al
  41f272:	push   ds
  41f273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f274:	sub    eax,DWORD PTR ds:0xd3e38b22
  41f27a:	add    BYTE PTR [esp+edx*1],ch
  41f27d:	pop    edx
  41f27e:	leave  
  41f27f:	mov    esi,DWORD PTR [edi-0x25]
  41f282:	repz mov bh,0x60
  41f285:	loopne 0x41f277
  41f287:	hlt    
  41f288:	mov    ebp,0x57191687
  41f28d:	scas   al,BYTE PTR es:[edi]
  41f28e:	xchg   esp,eax
  41f28f:	push   0xfffffff0
  41f291:	mov    eax,ds:0x386887ea
  41f296:	adc    al,0x84
  41f298:	add    eax,0x4fa4f29a
  41f29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f29e:	sbb    DWORD PTR ds:0x7193687a,edi
  41f2a4:	mov    esi,0x4b517
  41f2a9:	lods   eax,DWORD PTR ds:[esi]
  41f2aa:	popf   
  41f2ab:	stos   BYTE PTR es:[edi],al
  41f2ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2ad:	add    eax,0x63a51b0
  41f2b2:	aad    0x67
  41f2b4:	ins    BYTE PTR es:[edi],dx
  41f2b5:	cs std 
  41f2b7:	sbb    bh,0x7f
  41f2ba:	add    dl,dl
  41f2bc:	loope  0x41f26c
  41f2be:	test   al,0x75
  41f2c0:	cdq    
  41f2c1:	mov    WORD PTR [eax+0x1dba7bd7],ss
  41f2c7:	out    dx,al
  41f2c8:	dec    ebp
  41f2c9:	pop    es
  41f2ca:	cli    
  41f2cb:	pop    es
  41f2cc:	inc    ebp
  41f2cd:	ret    0x2908
  41f2d0:	(bad)  
  41f2d1:	mov    eax,ds:0xa71331e0
  41f2d6:	mov    eax,ds:0x573a11f4
  41f2db:	(bad)  
  41f2dc:	push   0xd9bef1e8
  41f2e1:	js     0x41f284
  41f2e3:	or     DWORD PTR [ebx],edx
  41f2e5:	inc    ecx
  41f2e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2e7:	adc    ch,dh
  41f2e9:	into   
  41f2ea:	inc    edi
  41f2eb:	jbe    0x41f369
  41f2ed:	out    0x12,al
  41f2ef:	retf   
  41f2f0:	pop    edi
  41f2f1:	inc    ecx
  41f2f2:	and    ebp,DWORD PTR [esi+0x45]
  41f2f5:	pop    ds
  41f2f6:	jmp    0x7bd359cd
  41f2fb:	sti    
  41f2fc:	add    eax,0xeb31cbd
  41f301:	xchg   ebp,eax
  41f302:	aam    0x43
  41f304:	sbb    eax,0xb3bad57a
  41f309:	shl    ch,0x4b
  41f30c:	mov    dl,0xfd
  41f30e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f30f:	jo     0x41f2a5
  41f311:	sahf   
  41f312:	mov    al,0xf8
  41f314:	inc    ebx
  41f315:	adc    dh,BYTE PTR [edx]
  41f317:	add    DWORD PTR [edx],0xffffff8d
  41f31a:	push   esp
  41f31b:	push   esp
  41f31c:	dec    edi
  41f31d:	fadd   QWORD PTR [edx-0x7311da3e]
  41f323:	inc    ecx
  41f324:	jmp    0x7179f3bc
  41f329:	lea    edi,[edi-0xb]
  41f32c:	out    0xca,eax
  41f32e:	ret    
  41f32f:	mov    cl,BYTE PTR [eax-0x4f]
  41f332:	push   es
  41f333:	xor    BYTE PTR [edi],ah
  41f335:	mov    ch,0x3
  41f337:	(bad)  
  41f338:	jmp    0x41f326
  41f33a:	(bad)  
  41f33b:	xor    al,0xd7
  41f33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f33e:	es (bad) 
  41f340:	pop    esp
  41f341:	loopne 0x41f377
  41f343:	push   ebp
  41f344:	sbb    DWORD PTR [eax-0x75],esp
  41f347:	rcl    ebp,cl
  41f349:	xchg   edi,eax
  41f34a:	mov    ecx,DWORD PTR [esi]
  41f34c:	pop    esp
  41f34d:	(bad)  
  41f34e:	lds    edx,FWORD PTR [edx-0x4b62c4df]
  41f354:	dec    ebx
  41f355:	sahf   
  41f356:	jmp    0xda14:0x9403a899
  41f35d:	lods   eax,DWORD PTR ds:[esi]
  41f35e:	stos   DWORD PTR es:[edi],eax
  41f35f:	pop    ss
  41f360:	inc    esp
  41f361:	fadd   QWORD PTR [ebp+eiz*2+0x52]
  41f365:	fdiv   DWORD PTR [ebx-0x5ef59b8d]
  41f36b:	aaa    
  41f36c:	div    dh
  41f36e:	cmp    DWORD PTR [esi+0x3ac644ca],edx
  41f374:	jge    0x41f3c8
  41f376:	out    dx,eax
  41f377:	jnp    0x41f3a7
  41f379:	(bad)  
  41f37a:	std    
  41f37b:	jmp    0x41f3f7
  41f37d:	dec    edi
  41f37e:	jge    0x41f3bb
  41f380:	fs stos BYTE PTR es:[edi],al
  41f382:	(bad)  
  41f383:	jmp    0x1e091e23
  41f388:	or     DWORD PTR ds:0xf22ef6c2,0x49db846f
  41f392:	aad    0x8c
  41f394:	sbb    dl,BYTE PTR [esi]
  41f396:	or     eax,DWORD PTR [ebp+0x3b492c86]
  41f39c:	enter  0xd979,0x6b
  41f3a0:	xchg   ecx,eax
  41f3a1:	call   0xfd4f:0x86fa62e7
  41f3a8:	pop    ss
  41f3a9:	dec    esi
  41f3aa:	push   0xa99525c4
  41f3af:	mov    edi,0x4bf0204e
  41f3b4:	pop    ss
  41f3b5:	lahf   
  41f3b6:	pop    edi
  41f3b7:	xchg   ecx,eax
  41f3b8:	sbb    BYTE PTR [edx+0xa57fcab],ch
  41f3be:	xor    esp,0xdfdd581d
  41f3c4:	jp     0x41f3bc
  41f3c6:	or     dl,BYTE PTR [ebx-0x3f]
  41f3c9:	push   ds
  41f3ca:	mov    ?,WORD PTR ss:[edi]
  41f3cd:	xchg   esp,eax
  41f3ce:	test   BYTE PTR [edi],ch
  41f3d0:	ffreep st(7)
  41f3d2:	sti    
  41f3d3:	out    0xe8,eax
  41f3d5:	mov    eax,0x5ed72e8e
  41f3da:	cli    
  41f3db:	xor    DWORD PTR [eax],ecx
  41f3dd:	sub    eax,0x15fca369
  41f3e2:	cmc    
  41f3e3:	or     eax,0x51d512f9
  41f3e8:	aam    0xe
  41f3ea:	adc    eax,0x20c1e2a
  41f3ef:	popf   
  41f3f0:	jmp    0x7547d09c
  41f3f5:	div    BYTE PTR [esi]
  41f3f7:	int3   
  41f3f8:	loop   0x41f3f1
  41f3fa:	ss scas eax,DWORD PTR es:[edi]
  41f3fc:	shl    DWORD PTR [edx-0x26],0xde
  41f400:	fisttp QWORD PTR [esi-0x74]
  41f403:	mov    edi,0x2cc2bf7e
  41f408:	sahf   
  41f409:	ins    BYTE PTR es:[edi],dx
  41f40a:	adc    eax,0x4ddd197f
  41f40f:	inc    edx
  41f410:	cmp    eax,0xb3a20f6c
  41f415:	xchg   BYTE PTR [esi-0x64],bl
  41f418:	adc    DWORD PTR [esi],eax
  41f41a:	(bad)  
  41f41b:	pop    ss
  41f41c:	xchg   DWORD PTR [ecx],eax
  41f41e:	cwde   
  41f41f:	int    0x19
  41f421:	inc    esi
  41f422:	jo     0x41f442
  41f424:	not    BYTE PTR [edi-0xc881a9e]
  41f42a:	jge    0x41f47b
  41f42c:	mov    esi,0x3b9b7af8
  41f431:	pop    ds
  41f432:	push   edx
  41f433:	inc    edi
  41f434:	out    0xb1,eax
  41f436:	mov    dl,0x8e
  41f438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f439:	jecxz  0x41f44a
  41f43b:	mov    edi,0xc5fb15e1
  41f440:	push   ecx
  41f441:	test   eax,0xb2144d83
  41f446:	int3   
  41f447:	mov    ah,0x75
  41f449:	and    DWORD PTR [esi],edi
  41f44b:	loopne 0x41f46f
  41f44d:	loop   0x41f451
  41f44f:	(bad)  
  41f450:	(bad)  
  41f451:	xchg   edi,eax
  41f452:	pop    ecx
  41f453:	xchg   ecx,eax
  41f454:	lock fscale 
  41f457:	cmc    
  41f458:	aas    
  41f459:	push   0x8c5fde2
  41f45e:	imul   edi,DWORD PTR [edx],0xf5b54c99
  41f464:	xchg   ecx,eax
  41f465:	and    eax,ecx
  41f467:	sub    edi,DWORD PTR [eax+0x5eaef5c4]
  41f46d:	add    ebx,edi
  41f46f:	or     DWORD PTR [ebp+eax*4+0x38],ebx
  41f473:	mov    esi,es
  41f475:	dec    edx
  41f476:	lods   al,BYTE PTR ds:[esi]
  41f477:	jne    0x41f49a
  41f479:	pop    edx
  41f47a:	mul    eax
  41f47c:	in     eax,dx
  41f47d:	mov    ds:0x31e16eba,eax
  41f482:	jne    0x41f41a
  41f484:	add    BYTE PTR [ebp-0x7403ba5c],0xfd
  41f48b:	cld    
  41f48c:	int3   
  41f48d:	sti    
  41f48e:	jmp    0x7c913854
  41f493:	push   edx
  41f494:	inc    esp
  41f495:	pextrw esp,mm7,0xff
  41f499:	call   0x2f9d6e73
  41f49e:	xchg   ebx,eax
  41f49f:	xchg   ebx,eax
  41f4a0:	std    
  41f4a1:	sub    DWORD PTR [eax+0x3f0a76b4],esi
  41f4a7:	or     DWORD PTR [eax+0x3f],eax
  41f4aa:	daa    
  41f4ab:	ins    BYTE PTR es:[edi],dx
  41f4ac:	xor    BYTE PTR es:[ebp+ecx*8+0x19],ah
  41f4b1:	cmp    bl,ah
  41f4b3:	adc    eax,0x8884f5e1
  41f4b8:	mov    ebx,0x670ea9ef
  41f4bd:	cld    
  41f4be:	pop    esi
  41f4bf:	add    al,0x4b
  41f4c1:	outs   dx,BYTE PTR ds:[esi]
  41f4c2:	xchg   edx,ebp
  41f4c4:	call   0x4c776e6f
  41f4c9:	xor    al,0x9c
  41f4cb:	popf   
  41f4cc:	or     al,BYTE PTR [esi+0x23]
  41f4cf:	mov    al,ds:0x89272d35
  41f4d4:	or     DWORD PTR [esi-0xe],esp
  41f4d7:	add    edx,DWORD PTR [edi]
  41f4d9:	fadd   QWORD PTR [edi+0x44128dcb]
  41f4df:	sti    
  41f4e0:	outs   dx,DWORD PTR ds:[esi]
  41f4e1:	fdivr  st(1),st
  41f4e3:	cmp    DWORD PTR [edx+0x209d9fc],edi
  41f4e9:	mov    edi,0xa75a11ae
  41f4ee:	out    0x81,eax
  41f4f0:	inc    eax
  41f4f1:	imul   ebx,DWORD PTR [edx-0x32],0x5c03acac
  41f4f8:	mov    dl,0xfa
  41f4fa:	gs xchg esi,eax
  41f4fc:	cmp    ebx,DWORD PTR [edi+0x30]
  41f4ff:	or     DWORD PTR [edi],ebp
  41f501:	push   edx
  41f502:	push   edx
  41f503:	jmp    0xde0afbd
  41f508:	mov    WORD PTR [ecx],?
  41f50a:	xor    ah,BYTE PTR [ebx-0x38]
  41f50d:	and    esi,0x5aa460c
  41f513:	and    al,cl
  41f515:	adc    bl,dl
  41f517:	pop    ds
  41f518:	or     eax,0xa21b1ec5
  41f51d:	cmp    ebp,DWORD PTR [edi-0x1]
  41f520:	xor    al,0x4f
  41f522:	mov    edi,0x8c34fb28
  41f527:	es mov ecx,0x2b087ba
  41f52d:	pop    ds
  41f52e:	ja     0x41f4d0
  41f530:	(bad)  
  41f531:	stc    
  41f532:	cmp    eax,0x748c775e
  41f537:	xor    al,0xde
  41f539:	mov    ah,BYTE PTR [esi]
  41f53b:	lods   al,BYTE PTR ds:[esi]
  41f53c:	int    0x6d
  41f53e:	adc    DWORD PTR [ebx+0x3fa078c7],ecx
  41f544:	jecxz  0x41f54f
  41f546:	out    dx,eax
  41f547:	inc    edx
  41f548:	scas   eax,DWORD PTR es:[edi]
  41f549:	into   
  41f54a:	mov    bh,0xf5
  41f54c:	cmp    eax,0x92a9afdd
  41f551:	xchg   edx,eax
  41f552:	es loopne 0x41f5c4
  41f555:	add    eax,0xb6ea3450
  41f55a:	jg     0x41f5c7
  41f55c:	or     edi,DWORD PTR [ebp-0x49b8842a]
  41f562:	popf   
  41f563:	add    al,0x56
  41f565:	je     0x41f552
  41f567:	test   BYTE PTR [eax+0x67ea7897],al
  41f56d:	add    esi,edx
  41f56f:	pop    es
  41f570:	pop    ds
  41f571:	add    al,0x28
  41f573:	loope  0x41f567
  41f575:	retf   0x1065
  41f578:	jp     0x41f511
  41f57a:	(bad)  
  41f57b:	js     0x41f5bc
  41f57d:	mov    ds:0x5077369c,eax
  41f582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f583:	xor    eax,0x9f75006a
  41f588:	jp     0x41f581
  41f58a:	stc    
  41f58b:	dec    esp
  41f58c:	repnz xchg ebp,eax
  41f58e:	sbb    esp,0x19
  41f591:	adc    edi,ebx
  41f593:	push   edi
  41f594:	xor    BYTE PTR [ebp+0x132d4436],ch
  41f59a:	arpl   WORD PTR [ebp-0x110ee75c],cx
  41f5a0:	retf   0x2708
  41f5a3:	cli    
  41f5a4:	repz push edx
  41f5a6:	ja     0x41f5ba
  41f5a8:	data16 out 0x6b,al
  41f5ab:	push   eax
  41f5ac:	sbb    al,0x1f
  41f5ae:	paddusb mm1,QWORD PTR [esi]
  41f5b1:	sti    
  41f5b2:	and    bl,bh
  41f5b4:	test   al,0x9f
  41f5b6:	aad    0xdd
  41f5b8:	mov    bl,0x89
  41f5ba:	mov    dl,0x24
  41f5bc:	test   eax,0x57f7517c
  41f5c1:	enter  0xc9f8,0xca
  41f5c5:	or     BYTE PTR ds:0x25c1f2e7,dl
  41f5cb:	test   DWORD PTR [esi-0x415d6520],edx
  41f5d1:	push   esi
  41f5d2:	xor    edi,DWORD PTR [ebx]
  41f5d4:	daa    
  41f5d5:	ss push 0x52
  41f5d8:	pushf  
  41f5d9:	rcr    BYTE PTR [esi],1
  41f5db:	sahf   
  41f5dc:	fld    DWORD PTR [ebp+0x7e]
  41f5df:	inc    ebx
  41f5e0:	add    ecx,0x6d
  41f5e3:	(bad)  
  41f5e5:	in     al,dx
  41f5e6:	mov    bh,0x7a
  41f5e8:	cmp    eax,0x80c85f1b
  41f5ed:	test   DWORD PTR [eax-0xa9650b6],edx
  41f5f3:	add    ebx,DWORD PTR [esi]
  41f5f5:	or     al,BYTE PTR [esi]
  41f5f7:	push   ebx
  41f5f8:	xor    edx,DWORD PTR [ebp-0x3d3f7583]
  41f5fe:	mov    ebp,0x6f5a1568
  41f603:	retf   0x6782
  41f606:	je     0x41f610
  41f608:	push   esp
  41f609:	enter  0xb0f9,0x6
  41f60d:	xchg   ebx,eax
  41f60e:	pusha  
  41f60f:	mov    ebx,0xd154cd9e
  41f614:	cdq    
  41f615:	cmp    al,0xcc
  41f617:	inc    edi
  41f618:	push   ebx
  41f619:	out    dx,al
  41f61a:	sub    bh,dl
  41f61c:	retf   
  41f61d:	std    
  41f61e:	mov    ds:0xf978feb6,eax
  41f623:	fs aad 0xc6
  41f626:	dec    eax
  41f627:	test   BYTE PTR [ebp+0x57],ah
  41f62a:	in     al,dx
  41f62b:	cli    
  41f62c:	ret    0x1b30
  41f62f:	and    DWORD PTR [edi],ecx
  41f631:	dec    edi
  41f632:	cmp    eax,0x8d76c48d
  41f637:	pop    es
  41f638:	mov    edx,0xc90349e7
  41f63d:	and    edi,ebx
  41f63f:	xlat   BYTE PTR ds:[ebx]
  41f640:	hlt    
  41f641:	and    eax,0x2dad6c04
  41f646:	inc    eax
  41f647:	sub    al,0xc1
  41f649:	mov    al,ds:0xb343e3db
  41f64e:	iret   
  41f64f:	fnstsw WORD PTR [esi]
  41f651:	lods   eax,DWORD PTR ds:[esi]
  41f652:	fs pop ebp
  41f654:	ror    BYTE PTR [ebx+0x56],1
  41f657:	adc    BYTE PTR [esi],dl
  41f659:	gs ret 0xfa2b
  41f65d:	pop    edi
  41f65e:	retf   0x4854
  41f661:	mov    BYTE PTR [ebx-0x4d],dl
  41f664:	clc    
  41f665:	rcl    BYTE PTR [edx-0x37],0xad
  41f669:	mov    WORD PTR [eax-0x2287e74c],?
  41f66f:	pop    edi
  41f670:	mov    esp,0x99bac9f3
  41f675:	aaa    
  41f676:	push   es
  41f677:	mov    esp,0xc9a5b2fe
  41f67c:	in     eax,0x17
  41f67e:	adc    DWORD PTR ds:0xafd80ef8,esp
  41f684:	out    dx,al
  41f685:	dec    esi
  41f686:	shl    DWORD PTR [ebp-0x6c78ec8e],cl
  41f68c:	push   cs
  41f68d:	data16 (bad) 
  41f68f:	(bad)  [edx+0x21428ec8]
  41f695:	cmp    eax,0x1f5de725
  41f69a:	xchg   ecx,eax
  41f69b:	push   ss
  41f69c:	sub    dh,BYTE PTR [eax+0x6c63ca6c]
  41f6a2:	call   0x2c0b9b20
  41f6a7:	add    dl,dh
  41f6a9:	add    DWORD PTR [ecx],esp
  41f6ab:	aaa    
  41f6ac:	jae    0x41f63b
  41f6ae:	cwde   
  41f6af:	adc    eax,0x62d90d20
  41f6b4:	enter  0xf9a4,0x5b
  41f6b8:	vmwrite ebx,DWORD PTR [esi]
  41f6bb:	add    cl,BYTE PTR [eax]
  41f6bd:	xchg   edi,eax
  41f6be:	aam    0xf1
  41f6c0:	icebp  
  41f6c1:	pop    edi
  41f6c2:	add    edi,DWORD PTR [edi]
  41f6c4:	and    eax,0x52cd46d5
  41f6c9:	or     eax,0x18044eb
  41f6ce:	xor    BYTE PTR [eax-0x65521fdd],ah
  41f6d4:	mov    ebx,DWORD PTR [ebx]
  41f6d6:	sub    cl,BYTE PTR [edi-0x77949326]
  41f6dc:	xchg   edx,eax
  41f6dd:	outs   dx,DWORD PTR ds:[esi]
  41f6de:	dec    ecx
  41f6df:	popa   
  41f6e0:	or     eax,0xc3706eb7
  41f6e5:	jmp    0x41f710
  41f6e7:	pop    ebx
  41f6e8:	les    ecx,FWORD PTR [ecx+0x24]
  41f6eb:	(bad)  
  41f6ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ed:	mov    fs,WORD PTR [edi+0x5e]
  41f6f0:	jle    0x41f697
  41f6f2:	inc    esp
  41f6f3:	adc    cl,BYTE PTR ss:[esi+ebp*2+0x43820789]
  41f6fb:	xchg   BYTE PTR [edi+eiz*1+0x0],al
  41f6ff:	icebp  
  41f700:	mul    ah
  41f702:	out    dx,eax
  41f703:	push   esp
  41f704:	sbb    al,0xcf
  41f706:	imul   ecx,DWORD PTR [ebp-0x4d1bc481],0x4c
  41f70d:	popf   
  41f70e:	mov    dh,BYTE PTR [edx+0x317a814b]
  41f714:	ins    DWORD PTR es:[edi],dx
  41f715:	in     eax,0xe3
  41f717:	and    al,0x4a
  41f719:	jo     0x41f77c
  41f71b:	jnp    0x41f6b5
  41f71d:	outs   dx,BYTE PTR ds:[esi]
  41f71e:	sbb    DWORD PTR [eax+0x4d],ebp
  41f721:	mov    BYTE PTR [ecx+eiz*2+0x61],al
  41f725:	rcl    BYTE PTR gs:[esi],0xef
  41f729:	mov    esp,0x3a6261f9
  41f72e:	xchg   ebx,eax
  41f72f:	push   ds
  41f730:	xor    edi,DWORD PTR [edi]
  41f732:	and    eax,DWORD PTR [edi-0x35]
  41f735:	mov    bh,0xc0
  41f737:	rcr    ah,1
  41f739:	jecxz  0x41f6fa
  41f73b:	xor    bl,ah
  41f73d:	leave  
  41f73e:	inc    ecx
  41f73f:	js     0x41f763
  41f741:	xor    esi,DWORD PTR [edx]
  41f743:	jo     0x41f72c
  41f745:	sub    BYTE PTR [ecx+0x6b],ch
  41f748:	shl    DWORD PTR [edi+edx*2],1
  41f74b:	iret   
  41f74c:	call   0x15a74320
  41f751:	mov    BYTE PTR [ebx-0x2d46c2a],dl
  41f757:	mov    ch,0xc
  41f759:	jg     0x41f716
  41f75b:	push   ecx
  41f75c:	fsubr  QWORD PTR ds:0x8b662612
  41f762:	jmp    0x41f7c6
  41f764:	push   edi
  41f765:	adc    bh,ch
  41f767:	and    ebp,DWORD PTR [eax-0x269d99e4]
  41f76d:	leave  
  41f76e:	push   esp
  41f76f:	call   0xa40dbd22
  41f774:	out    dx,eax
  41f775:	jmp    edi
  41f777:	fisub  WORD PTR [ebp-0x70be88cb]
  41f77d:	enter  0x35f4,0x62
  41f781:	mov    esi,0x2fb2a256
  41f786:	add    bh,BYTE PTR [ebx-0x7a]
  41f789:	dec    ecx
  41f78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f78b:	xor    eax,0xf08e857f
  41f790:	mov    eax,0x86433265
  41f795:	stos   DWORD PTR es:[edi],eax
  41f796:	sub    bh,BYTE PTR [edx+0x18]
  41f799:	stos   BYTE PTR es:[edi],al
  41f79a:	sub    ebx,esp
  41f79c:	dec    ebx
  41f79d:	push   edi
  41f79e:	stc    
  41f79f:	xchg   edi,eax
  41f7a0:	push   ebx
  41f7a1:	or     al,0x24
  41f7a3:	not    DWORD PTR [esi]
  41f7a5:	outs   dx,BYTE PTR ds:[esi]
  41f7a6:	in     al,dx
  41f7a7:	lods   eax,DWORD PTR ds:[esi]
  41f7a8:	pop    esi
  41f7a9:	sahf   
  41f7aa:	inc    edx
  41f7ab:	jp     0x41f7e0
  41f7ad:	and    esi,edx
  41f7af:	mov    dh,0x70
  41f7b1:	mov    eax,ds:0x7a0cf2f4
  41f7b6:	sbb    eax,0x631f2b9b
  41f7bb:	fidivr WORD PTR [edx+eax*2-0x74]
  41f7bf:	xor    al,0x71
  41f7c1:	aaa    
  41f7c2:	daa    
  41f7c3:	hlt    
  41f7c4:	sub    bh,cl
  41f7c6:	pop    eax
  41f7c7:	repnz arpl WORD PTR [ecx+0x65],di
  41f7cb:	xor    bl,BYTE PTR [edx+edx*8-0x5d]
  41f7cf:	adc    esp,DWORD PTR [ebp+eax*4-0x7f9aa1d9]
  41f7d6:	aad    0xf0
  41f7d8:	arpl   WORD PTR [ebx],di
  41f7da:	js     0x41f778
  41f7dc:	mov    WORD PTR [esi-0x3],ss
  41f7df:	and    ebp,esp
  41f7e1:	inc    esi
  41f7e3:	das    
  41f7e4:	xchg   edx,eax
  41f7e5:	or     DWORD PTR [ebx],0xd96fd25e
  41f7eb:	ret    
  41f7ec:	outs   dx,BYTE PTR ds:[esi]
  41f7ed:	mov    eax,ds:0x8c314de4
  41f7f2:	cdq    
  41f7f3:	sbb    edi,DWORD PTR [ebx+0x71]
  41f7f6:	call   0x16fd:0x2c570bde
  41f7fd:	mov    al,0xe5
  41f7ff:	cld    
  41f800:	cmp    ah,bl
  41f802:	mov    gs,WORD PTR [ebp-0x19c35ccc]
  41f808:	sub    cl,0x68
  41f80b:	lods   al,BYTE PTR ds:[esi]
  41f80c:	clc    
  41f80d:	ins    BYTE PTR es:[edi],dx
  41f80e:	mov    ds,WORD PTR [ebx+0x3dbf2b53]
  41f814:	stc    
  41f815:	mov    eax,0xb0989c78
  41f81a:	push   cs
  41f81b:	arpl   WORD PTR [ecx],sp
  41f81d:	sub    eax,0x1864198
  41f822:	push   0xffffff90
  41f824:	and    al,0x49
  41f826:	dec    ecx
  41f827:	daa    
  41f828:	sbb    al,0x6b
  41f82a:	cdq    
  41f82b:	pop    ebp
  41f82c:	stos   BYTE PTR es:[edi],al
  41f82d:	sar    BYTE PTR [ecx+0x4238607d],1
  41f833:	mov    esi,0x298a6238
  41f838:	fnsave [edi-0x36]
  41f83b:	fwait
  41f83c:	inc    esi
  41f83d:	mov    dh,0x7a
  41f83f:	xor    bl,BYTE PTR [esi]
  41f841:	lock dec ebx
  41f843:	data16 (bad) 
  41f846:	add    al,0x7f
  41f848:	in     al,0xd9
  41f84a:	jae    0x41f836
  41f84c:	mov    dh,cl
  41f84e:	mov    BYTE PTR [edx-0x4b],al
  41f851:	pop    esp
  41f852:	xlat   BYTE PTR ds:[ebx]
  41f853:	fdivr  st,st(1)
  41f855:	loope  0x41f85c
  41f857:	outs   dx,BYTE PTR ds:[esi]
  41f858:	retf   
  41f859:	mov    dl,0xe4
  41f85b:	imul   ebp,DWORD PTR [ebx],0xd124b00
  41f861:	xchg   ebp,eax
  41f862:	mov    ds:0x6ae7f26,al
  41f867:	push   es
  41f868:	arpl   WORD PTR [ebp+0x829565f],ax
  41f86e:	push   ebx
  41f86f:	add    DWORD PTR gs:[ebx+0x4e637947],eax
  41f876:	mov    eax,0xd996ce51
  41f87b:	mov    ebp,DWORD PTR cs:[ebx+0x331e8829]
  41f882:	and    DWORD PTR [ebx],0x28
  41f885:	das    
  41f886:	xor    DWORD PTR [ecx+0x68730cb],esi
  41f88c:	push   edi
  41f88d:	add    esi,DWORD PTR [eax]
  41f88f:	cld    
  41f890:	pushf  
  41f891:	dec    eax
  41f892:	sbb    al,0x9
  41f894:	xchg   ebp,eax
  41f895:	push   edi
  41f896:	cwde   
  41f897:	mov    WORD PTR [ebx-0x19],ds
  41f89a:	adc    cl,dl
  41f89c:	ins    BYTE PTR es:[edi],dx
  41f89d:	xor    dh,ah
  41f89f:	push   0x30f62e26
  41f8a4:	ins    BYTE PTR es:[edi],dx
  41f8a5:	pop    es
  41f8a6:	icebp  
  41f8a7:	xlat   BYTE PTR ds:[ebx]
  41f8a8:	dec    esi
  41f8a9:	ins    BYTE PTR es:[edi],dx
  41f8aa:	rcr    BYTE PTR [ecx],1
  41f8ac:	mov    ds:0xd827c68e,al
  41f8b1:	mov    ah,0x1e
  41f8b3:	cld    
  41f8b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8b5:	pop    ecx
  41f8b6:	clc    
  41f8b7:	out    0x79,eax
  41f8b9:	stc    
  41f8ba:	(bad)  
  41f8bb:	jp     0x41f854
  41f8bd:	mov    ?,WORD PTR [esi-0x1d]
  41f8c0:	xor    al,0x7a
  41f8c2:	fldenv [edx+0x71]
  41f8c5:	and    ebp,eax
  41f8c7:	(bad)  
  41f8c9:	in     al,0x55
  41f8cb:	(bad)  
  41f8cc:	sar    esp,1
  41f8ce:	cmc    
  41f8cf:	jo     0x41f8db
  41f8d1:	iret   
  41f8d2:	mov    bl,0x6f
  41f8d4:	imul   eax,DWORD PTR [edi],0x5e
  41f8d7:	seta   BYTE PTR [edi+0xcfec6f3]
  41f8de:	aad    0x2c
  41f8e0:	bound  ecx,QWORD PTR [edx+0xfc89f9c]
  41f8e6:	jae    0x41f8bd
  41f8e8:	test   eax,0xad828b12
  41f8ed:	xor    ah,bh
  41f8ef:	mov    cl,0x28
  41f8f1:	push   ds
  41f8f2:	add    ch,al
  41f8f4:	inc    ebp
  41f8f5:	jge    0x41f95b
  41f8f7:	mov    ebx,0x5147fe0c
  41f8fc:	(bad)  
  41f8fd:	pop    edi
  41f8fe:	in     al,dx
  41f8ff:	not    BYTE PTR [esi+0x38]
  41f902:	lock or BYTE PTR [esi-0x16a4dc70],0x85
  41f90a:	rcr    BYTE PTR [esi],1
  41f90c:	inc    ebp
  41f90d:	jmp    0xc3a2:0x7a363947
  41f914:	in     al,0x75
  41f916:	ins    BYTE PTR es:[edi],dx
  41f917:	clc    
  41f918:	icebp  
  41f919:	mov    eax,ds:0x9144b28a
  41f91e:	jl     0x41f90f
  41f920:	push   ebx
  41f921:	xchg   DWORD PTR ds:0x550d5c0,ecx
  41f927:	or     DWORD PTR [eax],ecx
  41f929:	imul   ebx,DWORD PTR [ebp-0x61],0xd8faa7e2
  41f930:	lahf   
  41f931:	push   ebp
  41f932:	sbb    dh,BYTE PTR [ecx+0x1e]
  41f935:	fdiv   st(7),st
  41f937:	mov    DWORD PTR [esi+0x78fa3d25],esi
  41f93d:	pop    ss
  41f93e:	xchg   esi,eax
  41f93f:	idiv   DWORD PTR [ebp-0x445efc08]
  41f945:	sub    BYTE PTR [esi],dh
  41f947:	pop    edx
  41f948:	jnp    0x41f9ac
  41f94a:	lahf   
  41f94b:	call   0x456c:0xd0ce1832
  41f952:	pop    eax
  41f953:	xchg   edx,eax
  41f954:	cmc    
  41f955:	xor    eax,0xa3f7b1a4
  41f95a:	xchg   ebx,eax
  41f95b:	mov    ebp,0x970d9731
  41f960:	adc    cl,bh
  41f962:	add    eax,0x5cd53492
  41f967:	xor    esp,DWORD PTR [ebp+0x18]
  41f96a:	test   BYTE PTR [esi+0x4e],ah
  41f96d:	test   BYTE PTR ds:0x4d8afb02,cl
  41f973:	adc    ecx,0xae741276
  41f979:	push   cs
  41f97a:	push   ecx
  41f97b:	mov    bh,0x52
  41f97d:	adc    esi,esi
  41f97f:	mov    ds:0x851535a7,eax
  41f984:	mov    eax,0xc60a6162
  41f989:	xor    esp,esp
  41f98b:	or     BYTE PTR [eax-0x54c81295],cl
  41f991:	bound  esi,QWORD PTR ds:0x37cfbcc3
  41f997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f998:	jbe    0x41f91e
  41f99a:	sub    eax,0x83e88666
  41f99f:	or     DWORD PTR [ecx-0x2bef4fde],eax
  41f9a5:	push   0x9f3fbdf
  41f9aa:	inc    edi
  41f9ab:	in     al,0x2a
  41f9ad:	call   0x99e7:0xf655aa1e
  41f9b4:	mov    bl,BYTE PTR [ebp-0x7aca634]
  41f9ba:	jl     0x41fa2e
  41f9bc:	mov    eax,0x28c4face
  41f9c1:	icebp  
  41f9c2:	ret    0xf360
  41f9c5:	jp     0x41f9f0
  41f9c7:	xlat   BYTE PTR ds:[ebx]
  41f9c8:	jmp    0x350b2b4f
  41f9cd:	xor    al,0x87
  41f9cf:	fdiv   DWORD PTR [edx+0x7b]
  41f9d2:	inc    edi
  41f9d3:	lahf   
  41f9d4:	sbb    dh,BYTE PTR [edx-0x38]
  41f9d7:	mov    al,BYTE PTR [ebp+0x71]
  41f9da:	xchg   DWORD PTR [ebx+0x1],esi
  41f9dd:	fstp   QWORD PTR [esp+ebx*8+0x25]
  41f9e1:	in     eax,0xa3
  41f9e3:	mov    edi,0xf2bb40c2
  41f9e8:	adc    dh,bh
  41f9ea:	and    esi,DWORD PTR [edi]
  41f9ec:	push   es
  41f9ed:	or     eax,0xd860c52
  41f9f2:	scas   eax,DWORD PTR es:[edi]
  41f9f3:	sbb    ebx,DWORD PTR [edx]
  41f9f5:	int    0x42
  41f9f7:	(bad)  [ebx-0x3c7f399e]
  41f9fd:	das    
  41f9fe:	(bad)  
  41f9ff:	idiv   BYTE PTR [esi]
  41fa01:	cmc    
  41fa02:	shr    DWORD PTR [edi-0x7eb15942],1
  41fa08:	jbe    0x41fa42
  41fa0a:	mov    ds,WORD PTR [edx-0x63ecec9]
  41fa10:	cmp    DWORD PTR [ebx],ebp
  41fa12:	scas   eax,DWORD PTR es:[edi]
  41fa13:	inc    esp
  41fa14:	adc    BYTE PTR [edx-0x31a8b1a],cl
  41fa1a:	push   0x343072dc
  41fa1f:	sub    ecx,edx
  41fa21:	jnp    0x41fa3f
  41fa23:	sbb    edx,ebp
  41fa25:	adc    ch,BYTE PTR [eax]
  41fa27:	out    0x2,eax
  41fa29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa2a:	jg     0x41fa44
  41fa2c:	push   ss
  41fa2d:	mov    edi,0xe7186dd4
  41fa32:	call   0xb6a1:0xea6eb6bd
  41fa39:	jne    0x41fa5f
  41fa3b:	rcr    DWORD PTR [eax-0x2c],1
  41fa3e:	mov    al,BYTE PTR [edx+edi*2]
  41fa41:	rcl    esp,1
  41fa43:	test   eax,0x3e42edfa
  41fa48:	jbe    0x41fac1
  41fa4a:	pusha  
  41fa4b:	lods   eax,DWORD PTR ds:[esi]
  41fa4c:	repz sbb WORD PTR [edx],bx
  41fa50:	dec    esi
  41fa51:	push   edi
  41fa52:	out    dx,eax
  41fa53:	imul   ecx,ebx,0x7b1cd857
  41fa59:	sub    al,0xdc
  41fa5b:	test   al,0xed
  41fa5d:	pop    esi
  41fa5e:	bound  edi,QWORD PTR [edx+eax*1-0x44ef1456]
  41fa65:	mov    ebp,0xf4c0acac
  41fa6a:	add    ah,BYTE PTR [edi+0x50]
  41fa6d:	push   esi
  41fa6e:	push   es
  41fa6f:	(bad)  
  41fa70:	fsub   st(0),st
  41fa72:	push   edx
  41fa73:	push   ebx
  41fa74:	stc    
  41fa75:	daa    
  41fa76:	pop    ebx
  41fa77:	mov    al,ds:0x15c30455
  41fa7c:	xchg   esp,eax
  41fa7d:	mov    ebp,0x42a7ddf2
  41fa82:	call   0x1bc6:0x44172b41
  41fa89:	fsub   DWORD PTR [ebx+0x79]
  41fa8c:	mov    ecx,0x76ca166e
  41fa91:	add    eax,esi
  41fa93:	adc    eax,0xdff29623
  41fa98:	fsubr  QWORD PTR [esi+0x21]
  41fa9b:	stc    
  41fa9c:	(bad)  
  41fa9d:	cmp    ebp,DWORD PTR [edi-0x30ba1029]
  41faa3:	fcomp  QWORD PTR [ecx]
  41faa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faa6:	outs   dx,DWORD PTR ds:[esi]
  41faa7:	ds pop eax
  41faa9:	sbb    BYTE PTR [ebx-0x46415130],ah
  41faaf:	imul   edi,DWORD PTR [eax+0x22],0xffffffbb
  41fab3:	add    BYTE PTR [ecx+eax*8-0x7b],bh
  41fab7:	inc    esp
  41fab8:	in     eax,0x1f
  41faba:	jmp    0x696e:0xbf98e245
  41fac1:	and    BYTE PTR [edx+eiz*1],dl
  41fac4:	sbb    ch,BYTE PTR [ebx]
  41fac6:	clc    
  41fac7:	lea    esi,[eax-0x41bed13f]
  41facd:	mov    ah,BYTE PTR [edx+0x6abad4d9]
  41fad3:	xor    cl,BYTE PTR [esi+0x4a]
  41fad6:	in     eax,dx
  41fad7:	(bad)  
  41fad8:	pop    ebx
  41fad9:	inc    ecx
  41fada:	repnz add BYTE PTR [eax-0x2e],ah
  41fade:	scas   eax,DWORD PTR es:[edi]
  41fadf:	icebp  
  41fae0:	mov    bh,0x3b
  41fae2:	push   ds
  41fae3:	std    
  41fae4:	mov    bl,0x52
  41fae6:	jl     0x41facd
  41fae8:	dec    esi
  41fae9:	xchg   BYTE PTR [edi-0x38],dh
  41faec:	js     0x41fb46
  41faee:	jmp    0x8acf:0xb14293c5
  41faf5:	push   ecx
  41faf6:	xchg   ecx,eax
  41faf7:	push   eax
  41faf8:	xchg   esp,eax
  41faf9:	pushf  
  41fafa:	cwde   
  41fafb:	test   eax,0xc4fb2995
  41fb00:	add    esi,ecx
  41fb02:	stos   BYTE PTR es:[edi],al
  41fb03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb04:	dec    ecx
  41fb05:	mov    WORD PTR [eax+0x4160d0c7],?
  41fb0b:	(bad)  
  41fb0c:	ins    BYTE PTR es:[edi],dx
  41fb0d:	cmp    eax,0x6b86c363
  41fb13:	outs   dx,BYTE PTR ds:[esi]
  41fb14:	mov    BYTE PTR [edx+esi*2],bh
  41fb17:	push   edi
  41fb18:	scas   al,BYTE PTR es:[edi]
  41fb19:	int    0x9b
  41fb1b:	jne    0x41fb9b
  41fb1d:	jno    0x41fb73
  41fb1f:	loop   0x41fb68
  41fb21:	push   ss
  41fb22:	aad    0x21
  41fb24:	ucomiss xmm5,DWORD PTR [ebx-0x3d0ef4b6]
  41fb2b:	je     0x41fb10
  41fb2d:	xchg   BYTE PTR [ecx],bl
  41fb2f:	cli    
  41fb30:	fcom   QWORD PTR es:[esi]
  41fb33:	pop    ds
  41fb34:	pushf  
  41fb35:	sub    al,0xb5
  41fb37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb38:	sub    bl,BYTE PTR [eax+0x21411e95]
  41fb3e:	out    dx,al
  41fb3f:	ds adc ch,0xad
  41fb43:	and    al,0x98
  41fb45:	xor    cl,BYTE PTR [esi+0x1a21e380]
  41fb4b:	add    dl,BYTE PTR es:[ebp-0x1a]
  41fb4f:	icebp  
  41fb50:	mov    DWORD PTR [esp+ebp*8-0x7ab7f92c],edi
  41fb57:	add    eax,0xbe6672e5
  41fb5c:	ror    BYTE PTR [eax-0x66],1
  41fb5f:	test   eax,0x16178e6c
  41fb64:	push   ds
  41fb65:	call   0xc787:0x77a2ab1d
  41fb6c:	jb     0x41fb1d
  41fb6e:	push   ss
  41fb6f:	xlat   BYTE PTR ds:[ebx]
  41fb70:	repz data16 test al,0xa7
  41fb74:	shr    BYTE PTR [ebx],0xe3
  41fb77:	out    dx,al
  41fb78:	mov    gs,WORD PTR [esi]
  41fb7a:	mov    bl,0x8e
  41fb7c:	aam    0xda
  41fb7e:	out    0x81,al
  41fb80:	cmp    esi,DWORD PTR [esi+0x43]
  41fb83:	(bad)  
  41fb84:	mov    dh,0x68
  41fb86:	mov    al,0xf4
  41fb88:	cmp    esi,ebx
  41fb8a:	bound  esp,QWORD PTR [ebp+0x6e]
  41fb8d:	xchg   BYTE PTR [esi+0x539b973a],dl
  41fb93:	clc    
  41fb94:	fwait
  41fb95:	push   edx
  41fb96:	sbb    esi,DWORD PTR [edx+esi*8+0x1f]
  41fb9a:	push   eax
  41fb9b:	sbb    dh,cl
  41fb9d:	sub    DWORD PTR [eax-0x4a],esi
  41fba0:	je     0x41fb8a
  41fba2:	xchg   edi,eax
  41fba3:	and    DWORD PTR cs:[edx+0x5f3adc51],esi
  41fbaa:	inc    ebx
  41fbab:	xor    al,0xed
  41fbad:	add    DWORD PTR [ecx+ebp*8-0x3e008ba2],edx
  41fbb4:	js     0x41fb9b
  41fbb6:	pop    esp
  41fbb7:	sbb    ecx,DWORD PTR [eax+edx*1]
  41fbba:	push   esp
  41fbbb:	inc    edi
  41fbbc:	inc    esi
  41fbbd:	push   cs
  41fbbe:	fdivr  st(4),st
  41fbc0:	sbb    dh,BYTE PTR [esi+0x557aff70]
  41fbc6:	in     eax,dx
  41fbc7:	or     ch,BYTE PTR [ecx+0x4f6694de]
  41fbcd:	pop    es
  41fbce:	les    eax,FWORD PTR [edx]
  41fbd0:	jmp    0x139d72b0
  41fbd5:	inc    eax
  41fbd6:	into   
  41fbd7:	jnp    0x41fb95
  41fbd9:	es and eax,edi
  41fbdc:	push   ss
  41fbdd:	and    al,0xe8
  41fbdf:	sub    al,0x33
  41fbe1:	or     eax,0x761ad066
  41fbe6:	scas   al,BYTE PTR es:[edi]
  41fbe7:	je     0x41fc23
  41fbe9:	arpl   ax,ax
  41fbeb:	sub    al,0x64
  41fbed:	call   0xccd4:0xa0fb4660
  41fbf4:	enter  0x133c,0x29
  41fbf8:	jnp    0x41fbc3
  41fbfa:	pop    ecx
  41fbfb:	fstp   st(0)
  41fbfd:	push   edx
  41fbfe:	sub    al,bh
  41fc00:	call   0x14ea1f79
  41fc05:	ins    DWORD PTR es:[edi],dx
  41fc06:	mov    bh,0x57
  41fc08:	out    dx,al
  41fc09:	loope  0x41fbc0
  41fc0b:	(bad)  
  41fc0c:	hlt    
  41fc0d:	adc    al,0xa8
  41fc0f:	add    esi,edi
  41fc11:	iret   
  41fc12:	push   esi
  41fc13:	(bad)  
  41fc14:	xor    al,0xf6
  41fc16:	add    ebp,ecx
  41fc18:	into   
  41fc19:	inc    DWORD PTR [ebp-0x42]
  41fc1c:	or     dl,BYTE PTR [ecx]
  41fc1e:	aad    0xf6
  41fc20:	imul   edi,ebx,0x35
  41fc23:	jae    0x41fc5e
  41fc25:	std    
  41fc26:	sbb    al,0xfd
  41fc28:	push   ebp
  41fc29:	jns    0x41fc78
  41fc2b:	int3   
  41fc2c:	cmp    DWORD PTR [eax],esp
  41fc2e:	xor    ch,BYTE PTR [eax-0x326756a2]
  41fc34:	pop    ss
  41fc35:	adc    eax,0x32037e77
  41fc3a:	retf   0x752f
  41fc3d:	jo     0x41fc11
  41fc3f:	scas   al,BYTE PTR es:[edi]
  41fc40:	lods   eax,DWORD PTR ds:[esi]
  41fc41:	add    edi,ebx
  41fc43:	inc    ebp
  41fc44:	inc    edi
  41fc45:	in     eax,0x40
  41fc47:	mov    bl,0x40
  41fc49:	bound  edx,QWORD PTR [esi+0x6a]
  41fc4c:	mov    edx,0x8c2f2db9
  41fc51:	mov    al,0xee
  41fc53:	push   esp
  41fc54:	sub    BYTE PTR [eax],cl
  41fc56:	push   ebx
  41fc57:	leave  
  41fc58:	sar    DWORD PTR [edx-0x7bd00813],0xed
  41fc5f:	into   
  41fc60:	ins    BYTE PTR es:[edi],dx
  41fc61:	cs add al,0x4a
  41fc64:	cmc    
  41fc65:	lea    esp,[edx]
  41fc67:	push   ecx
  41fc68:	inc    esp
  41fc69:	jne    0x41fc52
  41fc6b:	repnz rcr DWORD PTR [ecx],cl
  41fc6e:	and    BYTE PTR gs:[esp+ebx*8],bh
  41fc72:	scas   al,BYTE PTR es:[edi]
  41fc73:	fsubr  QWORD PTR [ecx-0x70]
  41fc76:	iret   
  41fc77:	adc    al,0xc
  41fc79:	cmp    dh,BYTE PTR [ebx]
  41fc7b:	pop    esp
  41fc7c:	or     BYTE PTR [ebp-0x4b],dh
  41fc7f:	xor    edx,DWORD PTR [eax-0x62]
  41fc82:	jp     0x41fc76
  41fc84:	(bad)  
  41fc85:	jbe    0x41fce4
  41fc87:	dec    edi
  41fc88:	mov    ch,0x7d
  41fc8a:	scas   al,BYTE PTR es:[edi]
  41fc8b:	dec    esp
  41fc8c:	mov    esi,0x62fe8940
  41fc91:	xor    DWORD PTR [eax],ecx
  41fc93:	cmp    al,0x62
  41fc95:	mov    dl,0xb9
  41fc97:	xlat   BYTE PTR ds:[ebx]
  41fc98:	jbe    0x41fc8b
  41fc9a:	cs push ds
  41fc9c:	in     al,0x29
  41fc9e:	xor    al,0x5f
  41fca0:	push   esp
  41fca1:	cmp    ch,0xf
  41fca4:	push   0x81a7ac31
  41fca9:	jbe    0x41fcd7
  41fcab:	fdivr  DWORD PTR [edi]
  41fcad:	sbb    ebx,DWORD PTR [ebx+0x3a]
  41fcb0:	cmc    
  41fcb1:	push   es
  41fcb2:	mov    al,0xe7
  41fcb4:	jmp    FWORD PTR [edx-0x5f76955e]
  41fcba:	stos   DWORD PTR es:[edi],eax
  41fcbb:	fcmovbe st,st(0)
  41fcbd:	hlt    
  41fcbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcbf:	jb     0x41fc74
  41fcc1:	sub    BYTE PTR [eax+0x3d7d67f2],cl
  41fcc7:	or     esi,DWORD PTR [ecx]
  41fcc9:	jae    0x41fd0c
  41fccb:	pop    edi
  41fccc:	pop    ecx
  41fccd:	pop    edx
  41fcce:	out    0x49,eax
  41fcd0:	xor    bh,dh
  41fcd2:	or     eax,0xa986fe5c
  41fcd7:	or     esp,DWORD PTR [ebp+0x1dcd4066]
  41fcdd:	out    dx,eax
  41fcde:	bound  esi,QWORD PTR [eax-0x646c16f0]
  41fce4:	adc    BYTE PTR [ecx],bl
  41fce6:	retf   0x7ff2
  41fce9:	out    dx,eax
  41fcea:	stc    
  41fceb:	nop
  41fcec:	adc    ebp,DWORD PTR [eax]
  41fcee:	push   esp
  41fcef:	jbe    0x41fcdc
  41fcf1:	lea    eax,[edi+0x789b7d7e]
  41fcf7:	popa   
  41fcf8:	sbb    ebp,DWORD PTR [eax+0x66]
  41fcfb:	push   0x7de28226
  41fd00:	loopne 0x41fcbf
  41fd02:	jae    0x41fd55
  41fd04:	sub    BYTE PTR [eax],bh
  41fd06:	sahf   
  41fd07:	cli    
  41fd08:	dec    edi
  41fd09:	clc    
  41fd0a:	je     0x41fd6a
  41fd0c:	jge    0x41fcdd
  41fd0e:	scas   eax,DWORD PTR es:[edi]
  41fd0f:	add    al,0x48
  41fd11:	cld    
  41fd12:	hlt    
  41fd13:	shl    BYTE PTR [ecx],cl
  41fd15:	push   0xffffff8c
  41fd17:	lea    edi,[ecx]
  41fd19:	mov    ds:0x8617c9cb,al
  41fd1e:	jmp    0xae85:0xd327244
  41fd25:	and    BYTE PTR [eax-0x343f49aa],bh
  41fd2b:	jp     0x41fd74
  41fd2d:	outs   dx,BYTE PTR ds:[esi]
  41fd2e:	stos   BYTE PTR es:[edi],al
  41fd2f:	pop    ecx
  41fd30:	cmp    ebx,edx
  41fd32:	mov    edx,0xa02f2a38
  41fd37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd38:	push   0x11
  41fd3a:	(bad)  
  41fd3b:	clc    
  41fd3c:	adc    al,0x49
  41fd3e:	sub    ebp,DWORD PTR [esi]
  41fd40:	xor    bl,BYTE PTR [esi+0x53]
  41fd43:	call   0x641dee8e
  41fd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd49:	lods   al,BYTE PTR ds:[esi]
  41fd4a:	pop    esi
  41fd4b:	test   DWORD PTR [eax+ebp*4-0x12ed4e0d],ebp
  41fd52:	mov    ebx,0xa207f305
  41fd57:	imul   eax,DWORD PTR [ebx],0xf94f1708
  41fd5d:	add    DWORD PTR [ecx+eiz*8+0x45],esp
  41fd61:	sbb    eax,0x7e52e854
  41fd66:	sbb    DWORD PTR [bx-0x348d],eax
  41fd6b:	daa    
  41fd6c:	mov    BYTE PTR [ecx],dl
  41fd6e:	push   ebp
  41fd6f:	das    
  41fd70:	iret   
  41fd71:	dec    ebx
  41fd72:	add    BYTE PTR [ebp+0x15],dh
  41fd75:	mov    bl,0xcb
  41fd77:	int3   
  41fd78:	ret    0x3958
  41fd7b:	add    ecx,DWORD PTR [ebx+0xb]
  41fd7e:	jp     0x41fdd0
  41fd80:	ja     0x41fd77
  41fd82:	add    edx,DWORD PTR [eax+0x50f037ac]
  41fd88:	cmc    
  41fd89:	rol    BYTE PTR [esi-0x3efa645d],0xb6
  41fd90:	retf   
  41fd91:	mov    edx,0xdfe88fd5
  41fd96:	inc    esi
  41fd97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd98:	aad    0x22
  41fd9a:	xor    al,0xfb
  41fd9c:	(bad)  
  41fd9d:	mov    ds:0xcdad687e,al
  41fda2:	xor    BYTE PTR [edx-0x75],ah
  41fda5:	inc    ebp
  41fda6:	adc    ebp,esp
  41fda8:	mov    eax,0x3a0fc348
  41fdad:	mov    ah,0x1e
  41fdaf:	mov    esp,0x91f1adc2
  41fdb4:	push   ds
  41fdb5:	imul   ebp,DWORD PTR [ecx],0x6a
  41fdb8:	jno    0x41fd5b
  41fdba:	cld    
  41fdbb:	hlt    
  41fdbc:	xor    BYTE PTR [di],ah
  41fdbf:	js     0x41fd7b
  41fdc1:	fstp   TBYTE PTR fs:[esp+esi*1]
  41fdc5:	cwde   
  41fdc6:	aad    0x64
  41fdc8:	fdivr  DWORD PTR [ecx+edi*4+0x7f]
  41fdcc:	or     DWORD PTR [edx-0x52],edi
  41fdcf:	out    0xf2,al
  41fdd1:	xor    ebx,eax
  41fdd3:	retf   
  41fdd4:	div    DWORD PTR [ebx+0x3c7d8b12]
  41fdda:	hlt    
  41fddb:	cmp    cl,BYTE PTR ss:[ebx+esi*1+0x5a]
  41fde0:	dec    edx
  41fde1:	inc    ebx
  41fde2:	imul   eax,DWORD PTR [edi],0xf1733cc0
  41fde8:	dec    esp
  41fde9:	mov    cl,0x1c
  41fdeb:	sub    BYTE PTR [edi],dl
  41fded:	xchg   edi,eax
  41fdee:	mov    ebx,DWORD PTR [ebx]
  41fdf0:	call   0xdcad2eb0
  41fdf5:	mov    edi,0xa9a0c3cd
  41fdfa:	test   edi,edx
  41fdfc:	ds sti 
  41fdfe:	ins    DWORD PTR es:[edi],dx
  41fdff:	gs push ss
  41fe01:	xor    bh,BYTE PTR [eax-0x651d9b9d]
  41fe07:	adc    BYTE PTR [edx+ebx*2+0x155e132],cl
  41fe0e:	cmc    
  41fe0f:	cdq    
  41fe10:	sbb    eax,0x241094a3
  41fe15:	scas   al,BYTE PTR es:[edi]
  41fe16:	mov    ebx,0x1a869310
  41fe1b:	xchg   ebp,eax
  41fe1c:	mov    edx,DWORD PTR [ebx-0x34d9b89f]
  41fe22:	adc    eax,DWORD PTR [edx-0x47]
  41fe25:	cmp    esp,ebx
  41fe27:	add    cl,BYTE PTR [ebx-0x56454041]
  41fe2d:	push   0xf
  41fe2f:	cmc    
  41fe30:	das    
  41fe31:	xchg   edi,eax
  41fe32:	out    dx,al
  41fe33:	fwait
  41fe34:	jb     0x41fe6a
  41fe36:	aas    
  41fe37:	inc    eax
  41fe38:	test   esp,edi
  41fe3a:	xchg   ebx,eax
  41fe3b:	out    0x9a,eax
  41fe3d:	mov    WORD PTR [edi],ss
  41fe3f:	iret   
  41fe40:	nop
  41fe41:	xchg   esp,eax
  41fe42:	sub    ebx,DWORD PTR [ecx-0x59]
  41fe45:	movups xmm0,xmm0
  41fe48:	push   esi
  41fe49:	mov    eax,0xa71567b1
  41fe4e:	mov    ebx,0x184bd14b
  41fe53:	imul   BYTE PTR [eax]
  41fe55:	or     bh,BYTE PTR [ebx]
  41fe57:	jns    0x41fe18
  41fe59:	lods   eax,DWORD PTR ds:[esi]
  41fe5a:	(bad)  
  41fe5b:	rol    DWORD PTR [edi+ebx*1],1
  41fe5e:	jl     0x41fe20
  41fe60:	outs   dx,BYTE PTR ds:[esi]
  41fe61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe62:	stc    
  41fe63:	sahf   
  41fe64:	pushf  
  41fe65:	jecxz  0x41fe47
  41fe67:	imul   esp,ebx,0xa3bdfd93
  41fe6d:	out    dx,eax
  41fe6e:	repnz out dx,al
  41fe70:	(bad)  
  41fe71:	call   0x8e5189c0
  41fe76:	mov    ds:0x4d2b11cc,eax
  41fe7b:	cs sti 
  41fe7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe7e:	std    
  41fe7f:	mov    ch,BYTE PTR [ebx]
  41fe81:	mov    ecx,0xb2555a0a
  41fe86:	jae    0x41fe97
  41fe88:	xor    dl,cl
  41fe8a:	dec    eax
  41fe8b:	sti    
  41fe8c:	dec    esi
  41fe8d:	push   0x7b9c7e48
  41fe92:	push   eax
  41fe93:	clc    
  41fe94:	aam    0x37
  41fe96:	cdq    
  41fe97:	cwde   
  41fe98:	lahf   
  41fe99:	xlat   BYTE PTR ds:[ebx]
  41fe9a:	cmp    BYTE PTR [esi+ebx*4+0x29],al
  41fe9e:	cmp    eax,0x343d817c
  41fea3:	mov    al,ds:0x53479152
  41fea8:	and    BYTE PTR [eax+0xb8bf458],dh
  41feae:	lock into 
  41feb0:	mov    eax,ds:0xb56ee41
  41feb5:	aam    0xd0
  41feb7:	ror    dh,cl
  41feb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feba:	cmp    DWORD PTR [esi-0x78],0x76
  41febe:	shl    bl,0xc4
  41fec1:	mov    eax,ds:0x492505aa
  41fec6:	arpl   WORD PTR [eax+ecx*2-0x3e2ad37],cx
  41fecd:	repnz mov ch,0x59
  41fed0:	sub    dl,cl
  41fed2:	mov    al,0x92
  41fed4:	int3   
  41fed5:	hlt    
  41fed6:	out    dx,eax
  41fed7:	pop    ebp
  41fed8:	mov    ebx,0x2b2e6367
  41fedd:	or     bl,BYTE PTR [eax+0x49]
  41fee0:	jecxz  0x41fe86
  41fee2:	mov    edi,0x726e320f
  41fee7:	loope  0x41ff3b
  41fee9:	outs   dx,DWORD PTR ds:[esi]
  41feea:	mov    eax,ds:0x633f3574
  41feef:	pop    esp
  41fef0:	out    0xf2,al
  41fef2:	xchg   ebx,eax
  41fef3:	adc    esp,DWORD PTR [eax+0x74d11ddd]
  41fef9:	loope  0x41ff34
  41fefb:	pusha  
  41fefc:	repnz mov bl,0x9
  41feff:	xchg   esi,eax
  41ff00:	xor    BYTE PTR [ebx-0x5e],dh
  41ff03:	xchg   edx,eax
  41ff04:	and    BYTE PTR [edi],ch
  41ff06:	adc    edi,DWORD PTR [edi+0x5a]
  41ff09:	dec    ebp
  41ff0a:	adc    esi,0x58ae869b
  41ff10:	call   0x32b7:0x5c8801c5
  41ff17:	adc    dl,BYTE PTR ds:0xf7b0ed9
  41ff1d:	into   
  41ff1e:	push   ecx
  41ff1f:	fs jae 0x41ff4b
  41ff22:	aam    0x8
  41ff24:	cs push edi
  41ff26:	daa    
  41ff27:	add    bh,BYTE PTR [ecx-0x28]
  41ff2a:	aaa    
  41ff2b:	inc    edx
  41ff2c:	lds    edx,FWORD PTR [ebp*2+0x7ec96acb]
  41ff33:	pushf  
  41ff34:	dec    ecx
  41ff35:	imul   ecx,DWORD PTR [esi+0x7e],0xffffffd1
  41ff39:	sbb    eax,DWORD PTR [edx-0x37]
  41ff3c:	adc    ch,dl
  41ff3e:	in     eax,dx
  41ff3f:	sbb    edi,DWORD PTR [edi-0x69]
  41ff42:	push   esp
  41ff43:	push   edi
  41ff44:	mov    edi,0xe54bf8db
  41ff49:	arpl   WORD PTR ds:0x38d67f4f,sp
  41ff4f:	add    BYTE PTR [ecx+0x38c48d8b],0xc9
  41ff56:	ds add al,0xfc
  41ff59:	out    dx,al
  41ff5a:	and    al,BYTE PTR [ebp+0x56]
  41ff5d:	dec    edi
  41ff5e:	xchg   ecx,eax
  41ff5f:	jp     0x41ff12
  41ff61:	ja     0x41ff52
  41ff63:	ret    0x85f5
  41ff66:	cmc    
  41ff67:	je     0x41ffde
  41ff69:	pusha  
  41ff6a:	mov    edx,0x10bd643d
  41ff6f:	retf   0xc4ab
  41ff72:	ja     0x41ffc2
  41ff74:	(bad)  
  41ff75:	ja     0x41fef9
  41ff77:	mov    esi,0xb244f11d
  41ff7c:	test   BYTE PTR [eax-0x6f],ch
  41ff7f:	adc    edi,DWORD PTR [edx-0x68]
  41ff82:	jbe    0x41ff08
  41ff84:	ret    
  41ff85:	arpl   WORD PTR [ecx-0x2f],bx
  41ff88:	ja     0x41ffeb
  41ff8a:	push   esi
  41ff8b:	lahf   
  41ff8c:	test   al,0xe7
  41ff8e:	iret   
  41ff8f:	inc    eax
  41ff90:	xchg   esp,eax
  41ff91:	and    cl,cl
  41ff93:	ror    DWORD PTR [ecx+0x10],0x49
  41ff97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff98:	xor    BYTE PTR [eax],bh
  41ff9a:	into   
  41ff9b:	add    al,BYTE PTR [edx]
  41ff9d:	jge    0x41ffa6
  41ff9f:	lods   eax,DWORD PTR ds:[esi]
  41ffa0:	inc    edx
  41ffa1:	push   es
  41ffa2:	aaa    
  41ffa3:	das    
  41ffa4:	add    al,0x9a
  41ffa6:	popf   
  41ffa7:	push   0xffffffd0
  41ffa9:	ja     0x41ffbb
  41ffab:	add    al,0xcc
  41ffad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffae:	pop    ds
  41ffaf:	popf   
  41ffb0:	mov    ah,0x91
  41ffb2:	bound  edi,QWORD PTR [ebx+0x68]
  41ffb5:	fiadd  WORD PTR [ebp-0x18]
  41ffb8:	test   eax,0xbd437b34
  41ffbd:	dec    esp
  41ffbe:	imul   BYTE PTR [edi+0x1cc5b31f]
  41ffc4:	inc    DWORD PTR [edx+edx*1]
  41ffc7:	(bad)  
  41ffc8:	(bad)  
  41ffc9:	push   eax
  41ffca:	lahf   
  41ffcb:	push   esp
  41ffcc:	cmp    DWORD PTR [ebx-0x77defbba],ebp
  41ffd2:	mov    dh,0x79
  41ffd4:	mov    esp,0xa78f97ca
  41ffd9:	(bad)  
  41ffda:	mov    edx,0xb74b5b8e
  41ffdf:	ss ja  0x41ffd5
  41ffe2:	dec    ebp
  41ffe3:	stos   BYTE PTR es:[edi],al
  41ffe4:	pop    ds
  41ffe5:	loopne 0x41ff79
  41ffe7:	int    0x5d
  41ffe9:	nop
  41ffea:	call   0x13c4cb1d
  41ffef:	jbe    0x41ff9a
  41fff1:	repz (bad) 
  41fff3:	mov    esp,0x725bad20
  41fff8:	adc    ecx,DWORD PTR [edi+ebp*2-0x7e]
  41fffc:	pop    edx
  41fffd:	in     eax,dx
  41fffe:	jg     0x420007
  420000:	scas   al,BYTE PTR es:[edi]
  420001:	js     0x41ffea
  420003:	or     eax,0x620452b4
  420008:	xchg   BYTE PTR [ebp-0x1b],dh
  42000b:	div    DWORD PTR [edx]
  42000d:	dec    ecx
  42000e:	inc    edx
  42000f:	jge    0x42004e
  420011:	and    al,0xea
  420014:	(bad)  
  420016:	aam    0xbb
  420018:	jnp    0x420014
  42001a:	loopne 0x41ffee
  42001c:	jecxz  0x42008f
  42001e:	add    al,0x5f
  420020:	adc    eax,0x6732a
  420025:	int3   
  420026:	mov    ebp,0x3ee27474
  42002b:	neg    ebp
  42002d:	mov    edi,0x715c82d6
  420032:	pusha  
  420033:	mov    bh,0x0
  420035:	fcmovnu st,st(6)
  420037:	ja     0x41ffd5
  420039:	xchg   edi,eax
  42003a:	xchg   ebx,eax
  42003b:	jmp    0x88ff2c58
  420040:	lahf   
  420041:	in     eax,0xf6
  420043:	ficomp DWORD PTR [eax+eiz*1-0x6c]
  420047:	sbb    DWORD PTR [esp+eax*2+0x7c688e4a],ebp
  42004e:	popa   
  42004f:	ds clc 
  420051:	repnz lea edi,[ebp-0x26]
  420055:	retf   
  420056:	jge    0x420048
  420058:	lds    ebp,FWORD PTR [edx+0x2f]
  42005b:	mov    edi,0x25f71e96
  420060:	int3   
  420061:	pop    ds
  420062:	adc    eax,0x1741cedd
  420067:	retf   
  420068:	out    dx,al
  420069:	cmc    
  42006a:	inc    eax
  42006b:	add    DWORD PTR [ebp-0x2de99fa6],0xa11ddfe5
  420075:	daa    
  420076:	hlt    
  420077:	or     al,0x34
  420079:	adc    DWORD PTR [edi],edx
  42007b:	pushf  
  42007c:	jmp    0x4200e1
  42007e:	scas   al,BYTE PTR es:[edi]
  42007f:	mov    ds:0xaa485baf,eax
  420084:	inc    esi
  420085:	mov    fs,WORD PTR [edi]
  420087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420088:	jb     0x42006b
  42008a:	fwait
  42008b:	cld    
  42008c:	popf   
  42008d:	pop    eax
  42008e:	jle    0x4200fb
  420090:	jno    0x4200fe
  420092:	and    eax,DWORD PTR [edx+0x25]
  420095:	cld    
  420096:	or     BYTE PTR [ebp+0x4e3be8c3],bh
  42009c:	cmp    al,0xb5
  42009e:	push   es
  42009f:	gs stc 
  4200a1:	fcmovnbe st,st(6)
  4200a3:	fldenv [edi]
  4200a5:	and    dh,BYTE PTR [ebx-0x5c73ef12]
  4200ab:	addr16 inc esp
  4200ad:	das    
  4200ae:	(bad)  
  4200af:	sub    ebp,DWORD PTR [edi+0x31976ac5]
  4200b5:	test   eax,0x931b7184
  4200ba:	int    0x1
  4200bc:	aas    
  4200bd:	in     eax,0x1a
  4200bf:	inc    ecx
  4200c0:	nop
  4200c1:	stos   BYTE PTR es:[edi],al
  4200c2:	(bad)  
  4200c3:	sub    edx,edx
  4200c5:	xor    eax,DWORD PTR [ebp-0x4d0c1c23]
  4200cb:	addr16 adc eax,0xdad5cbcc
  4200d1:	adc    ch,cl
  4200d3:	fs call 0x2f3559c2
  4200d9:	jecxz  0x4200fc
  4200db:	clc    
  4200dc:	in     eax,0x22
  4200de:	icebp  
  4200df:	cli    
  4200e0:	add    bh,BYTE PTR [ecx-0x5e]
  4200e3:	sub    DWORD PTR [ebp+0x6a4ccc92],edi
  4200e9:	mov    al,0x80
  4200eb:	dec    ebp
  4200ec:	inc    ecx
  4200ed:	ss mov bh,0xe6
  4200f0:	cmp    edx,DWORD PTR [edi]
  4200f2:	nop
  4200f3:	sub    eax,0x2dfe0b84
  4200f8:	mov    al,0x9d
  4200fa:	retf   
  4200fb:	ret    0x908a
  4200fe:	sbb    DWORD PTR es:[esi-0x1ae07d8c],ebp
  420105:	jle    0x4200b1
  420107:	(bad)  
  420108:	out    dx,al
  420109:	repz ret 
  42010b:	out    0xaa,eax
  42010d:	ror    bl,1
  42010f:	mov    edx,0xac3f7d72
  420114:	dec    edx
  420115:	cmp    al,0x75
  420117:	xchg   esi,eax
  420118:	sub    al,0x78
  42011a:	mov    ch,0x99
  42011c:	aaa    
  42011d:	dec    bh
  42011f:	test   DWORD PTR [esi],edi
  420121:	mov    edx,0x1c332fb0
  420126:	push   esi
  420127:	fisttp QWORD PTR [ebx-0x5b]
  42012a:	jnp    0x420172
  42012c:	sbb    DWORD PTR [ebx-0x2dcbd11e],eax
  420132:	cmp    eax,0x9ddba859
  420137:	aam    0xa8
  420139:	ins    BYTE PTR es:[edi],dx
  42013a:	xor    DWORD PTR [ecx-0x4d268ae],ebp
  420140:	aas    
  420141:	mov    edi,0x78896627
  420146:	mov    al,ds:0x6ae7cb91
  42014b:	rol    DWORD PTR [eax-0x5e802e43],0xca
  420152:	aas    
  420153:	and    BYTE PTR [ebx+0x1e892f2f],cl
  420159:	std    
  42015a:	out    0x1f,al
  42015c:	xor    BYTE PTR [esi+ebx*4+0xe3d5be1],ch
  420163:	adc    ah,ah
  420165:	rcr    DWORD PTR [edx],1
  420167:	jle    0x42019d
  420169:	retf   0x9687
  42016c:	add    esi,DWORD PTR [edi+edx*8+0x2c]
  420170:	sbb    DWORD PTR [esi+0x8fe86de],esp
  420176:	nop
  420177:	in     eax,dx
  420178:	xchg   BYTE PTR [ebp-0xc3c86af],ch
  42017e:	(bad)
  420181:	out    dx,al
  420182:	out    0x63,eax
  420184:	enter  0x57b6,0xcb
  420188:	stos   DWORD PTR es:[edi],eax
  420189:	adc    edx,DWORD PTR [eax+eax*2+0x41]
  42018d:	ins    DWORD PTR es:[edi],dx
  42018e:	hlt    
  42018f:	into   
  420190:	popa   
  420191:	mov    ds:0x8ec25f13,eax
  420196:	into   
  420197:	jbe    0x42020f
  420199:	mov    dh,0x4a
  42019b:	mov    edi,0xbbb8d776
  4201a0:	out    dx,al
  4201a1:	inc    ebx
  4201a2:	xor    dl,BYTE PTR [ecx]
  4201a4:	sub    eax,0x803d3d5a
  4201a9:	pop    ebx
  4201aa:	jo     0x420196
  4201ac:	ret    
  4201ad:	outs   dx,DWORD PTR ds:[esi]
  4201ae:	into   
  4201af:	ss mov ecx,0x213f295d
  4201b5:	sahf   
  4201b6:	and    al,0xc8
  4201b8:	and    esi,eax
  4201ba:	test   eax,0x27ae4d01
  4201bf:	das    
  4201c0:	js     0x4201c4
  4201c2:	fnsetpm(287 only) 
  4201c4:	mov    ds:0xc896488e,eax
  4201c9:	mov    ebp,0xd0774482
  4201ce:	and    al,0xfe
  4201d0:	inc    esi
  4201d1:	ret    
  4201d2:	mov    cl,0x46
  4201d4:	push   0x8a9edd22
  4201d9:	sub    eax,edi
  4201db:	icebp  
  4201dc:	jl     0x4201c1
  4201de:	adc    eax,0x53b56ce
  4201e3:	inc    ecx
  4201e4:	stos   BYTE PTR es:[edi],al
  4201e5:	dec    bl
  4201e7:	cmp    DWORD PTR [ebp+ebx*2+0x5220f0fd],ebx
  4201ee:	xor    ebx,DWORD PTR [edi]
  4201f0:	xchg   esp,eax
  4201f1:	int    0x5e
  4201f3:	sbb    DWORD PTR [eax+0x1e],ecx
  4201f6:	std    
  4201f7:	xchg   edx,eax
  4201f8:	ins    BYTE PTR es:[edi],dx
  4201f9:	cdq    
  4201fa:	or     eax,ecx
  4201fc:	sub    edi,ebp
  4201fe:	mov    WORD PTR [ecx-0x7e],?
  420201:	adc    BYTE PTR [edi],0x19
  420204:	mov    cl,0x8
  420206:	jb     0x420204
  420208:	shr    BYTE PTR [ebp+ecx*2-0x8],0x4a
  42020d:	jle    0x420289
  42020f:	bound  esp,QWORD PTR [edx+0x1f8643e0]
  420215:	push   cs
  420216:	repnz dec edi
  420218:	jecxz  0x420295
  42021a:	add    al,0xc4
  42021c:	dec    esp
  42021d:	gs aaa 
  42021f:	cwde   
  420220:	pop    ebx
  420221:	gs xchg edx,eax
  420223:	into   
  420224:	je     0x4201c1
  420226:	dec    eax
  420227:	inc    ecx
  420228:	jecxz  0x42021d
  42022a:	jnp    0x42021c
  42022c:	mov    edx,0x4ee40250
  420231:	cli    
  420232:	adc    BYTE PTR [esp+ebp*4+0x4bf9be53],0xfc
  42023a:	in     eax,dx
  42023b:	inc    esp
  42023c:	push   edi
  42023d:	push   ss
  42023e:	outs   dx,DWORD PTR ds:[esi]
  42023f:	std    
  420240:	xor    bh,BYTE PTR [ebp+0x30]
  420243:	and    eax,0xea20bccc
  420248:	cmp    al,BYTE PTR [eax+0x9]
  42024b:	in     al,dx
  42024c:	idiv   DWORD PTR [ecx+ecx*4+0x1e]
  420250:	pop    eax
  420251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420252:	pop    edi
  420253:	mov    dh,0xd7
  420255:	sub    BYTE PTR [eax-0x7c11417d],dl
  42025b:	pusha  
  42025c:	sub    DWORD PTR [edi],esi
  42025e:	xchg   ecx,eax
  42025f:	pop    es
  420260:	xchg   ebp,eax
  420261:	xchg   edi,eax
  420262:	mov    ds:0xa728022d,eax
  420267:	and    BYTE PTR [ebx+0x34],al
  42026a:	pushf  
  42026b:	add    BYTE PTR [ebp+esi*1-0x73],dh
  42026f:	cmp    al,0x43
  420271:	(bad)  
  420272:	fld    QWORD PTR [ebp-0x4a]
  420275:	push   ss
  420276:	mov    ds:0x4873cdeb,eax
  42027b:	and    al,0xe1
  42027d:	adc    edi,DWORD PTR [edi+0x24]
  420280:	push   edi
  420281:	cdq    
  420282:	inc    eax
  420283:	(bad)  
  420284:	(bad)  
  420285:	xchg   esp,eax
  420286:	addr16 push esi
  420288:	dec    DWORD PTR [ebx-0x7]
  42028b:	ret    
  42028c:	sbb    bh,bl
  42028e:	es cmovge ecx,eax
  420292:	cmp    dh,bh
  420294:	ins    DWORD PTR es:[edi],dx
  420295:	jo     0x420238
  420297:	cmp    dl,dl
  420299:	repnz mov edi,0xe831c021
  42029f:	nop
  4202a0:	mov    bl,0x1f
  4202a2:	or     esp,DWORD PTR [ecx]
  4202a4:	mov    ah,BYTE PTR [eax+edi*8+0x37c1173c]
  4202ab:	xchg   edi,eax
  4202ac:	push   edx
  4202ad:	loopne 0x4202dc
  4202af:	jmp    0xb5f8:0x8c03067d
  4202b6:	xchg   edi,eax
  4202b7:	imul   eax,edi,0x48adf673
  4202bd:	pop    es
  4202be:	sub    eax,0xafa1c648
  4202c3:	push   ebp
  4202c4:	mov    edx,0x307f2c6b
  4202c9:	jp     0x4202e2
  4202cb:	aad    0x55
  4202cd:	mov    ah,cl
  4202cf:	js     0x420329
  4202d1:	xchg   BYTE PTR [ebx-0x2],bl
  4202d4:	aad    0x4d
  4202d6:	mov    eax,0x302ee643
  4202db:	dec    edi
  4202dc:	loopne 0x4202f9
  4202de:	(bad)  
  4202df:	adc    al,0xec
  4202e1:	mov    esi,0x74e0ba17
  4202e6:	shl    DWORD PTR [edx+0x7a956b0],cl
  4202ec:	ret    0x825a
  4202ef:	push   ss
  4202f0:	icebp  
  4202f1:	inc    esi
  4202f2:	sbb    ecx,esp
  4202f4:	push   ds
  4202f5:	test   al,0xf4
  4202f7:	xchg   edx,eax
  4202f8:	inc    ebp
  4202f9:	or     cl,BYTE PTR [eax+0x56b2bde5]
  4202ff:	mov    bl,0x70
  420301:	or     BYTE PTR [edi-0xf],ch
  420304:	retf   
  420305:	fisubr WORD PTR [edi-0x79294cff]
  42030b:	sbb    eax,0xf453590
  420310:	dec    esi
  420311:	xchg   edx,eax
  420312:	adc    DWORD PTR [ecx+0x401843a3],ecx
  420318:	jge    0x42033e
  42031a:	js     0x4202f5
  42031c:	loop   0x4202d8
  42031e:	mov    ds:0xa68ec5e0,al
  420323:	push   ss
  420324:	adc    BYTE PTR [edx-0x50],ah
  420327:	les    esi,FWORD PTR [edi]
  420329:	and    BYTE PTR [ecx+0x4],al
  42032c:	xlat   BYTE PTR ds:[ebx]
  42032d:	stos   BYTE PTR es:[edi],al
  42032e:	inc    DWORD PTR [esi]
  420330:	xchg   esi,eax
  420331:	mov    eax,edx
  420333:	jbe    0x420342
  420335:	shl    ebp,0xda
  420338:	(bad)  
  420339:	jl     0x420310
  42033b:	add    edx,DWORD PTR [ebp+0x1e]
  42033e:	mov    dh,0xfd
  420340:	jb     0x4202e9
  420342:	rol    bl,0x86
  420345:	mov    edi,0x151cda5c
  42034a:	test   DWORD PTR [ebp+eiz*2+0x7e2e9e61],ecx
  420351:	xchg   edi,eax
  420352:	pusha  
  420353:	or     eax,0x231a1402
  420358:	and    ecx,edx
  42035a:	inc    ebp
  42035b:	xchg   esp,eax
  42035c:	jnp    0x420307
  42035e:	xchg   ebp,eax
  42035f:	retf   
  420360:	std    
  420361:	pushf  
  420362:	les    eax,FWORD PTR [edi-0x1a]
  420365:	sbb    al,0x48
  420367:	test   al,0x42
  420369:	xor    cl,bl
  42036b:	dec    esp
  42036c:	sbb    DWORD PTR [eax+ecx*4-0x2],ecx
  420370:	mov    esi,0xa41c53fa
  420375:	sub    ah,BYTE PTR [ecx-0x28]
  420378:	fiadd  WORD PTR [ebx+0x62f5e277]
  42037e:	shl    edi,cl
  420380:	xchg   esp,eax
  420381:	mov    esi,0x943f1255
  420386:	xor    bl,BYTE PTR [ebx+eiz*8+0x27]
  42038a:	test   al,0x5d
  42038c:	or     al,BYTE PTR [edi-0x6be26ce7]
  420392:	fldcw  WORD PTR [eax+0x7e]
  420395:	mov    ds:0xa548a06f,al
  42039a:	push   0xb8f6bffd
  42039f:	mov    esi,0xe3796d95
  4203a4:	add    BYTE PTR [ebp+0x1b68c70f],0x9d
  4203ab:	(bad)  
  4203ac:	in     eax,dx
  4203ad:	mov    ebp,0xd23ea5fa
  4203b2:	fnsave [ebx]
  4203b4:	or     ebx,edx
  4203b6:	adc    eax,0x884a6406
  4203bb:	enter  0xc39,0x6
  4203bf:	in     al,0xa3
  4203c1:	fbld   TBYTE PTR [edx+0x9682e13]
  4203c7:	imul   esi,DWORD PTR [eax-0x16a03421],0x4f
  4203ce:	sub    al,BYTE PTR [edx+0x2b]
  4203d1:	jg     0x4203d3
  4203d3:	in     eax,0xb6
  4203d5:	inc    eax
  4203d6:	dec    edi
  4203d7:	repz push esp
  4203d9:	scas   eax,DWORD PTR es:[edi]
  4203da:	test   BYTE PTR [ebx+ebp*4-0x32],bh
  4203de:	(bad)  
  4203df:	jecxz  0x420407
  4203e1:	aas    
  4203e2:	sub    al,0xd0
  4203e4:	sti    
  4203e5:	out    dx,eax
  4203e6:	cmp    eax,0x78547d61
  4203eb:	xlat   BYTE PTR ds:[ebx]
  4203ec:	outs   dx,DWORD PTR ds:[esi]
  4203ed:	push   edx
  4203ee:	jmp    0xaf30:0x34d32fa6
  4203f5:	pushf  
  4203f6:	jle    0x4203c3
  4203f8:	ins    BYTE PTR es:[edi],dx
  4203f9:	mov    ebp,DWORD PTR [eax+0x803b102]
  4203ff:	push   0xaf61eb84
  420404:	aas    
  420405:	ds call 0x8de3:0xcf51a85b
  42040d:	dec    edx
  42040e:	pop    ecx
  42040f:	call   0x51218f47
  420414:	pusha  
  420415:	add    DWORD PTR [eax+0x55],edx
  420418:	jge    0x4203f9
  42041a:	in     eax,0x49
  42041c:	call   0x5ac8dc70
  420421:	and    al,0x3d
  420423:	dec    edx
  420424:	add    edx,DWORD PTR [ecx-0x7f6fb25]
  42042a:	and    eax,0xa8562326
  42042f:	jae    0x4203b3
  420431:	push   eax
  420432:	pop    ecx
  420433:	lock fisub DWORD PTR [eax+0x4d]
  420437:	xor    eax,0x2eda3dc4
  42043c:	cwde   
  42043d:	test   al,0x91
  42043f:	ret    0xa6f2
  420442:	sub    eax,0x7e617554
  420447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420448:	leave  
  420449:	stc    
  42044a:	imul   esi,ebx,0xc56b0ce9
  420450:	cmp    eax,0x8490eb48
  420455:	mov    bh,0x72
  420457:	or     BYTE PTR cs:[edx+0x8],bl
  42045b:	xor    eax,0x36cd0b2f
  420460:	enter  0x7dd4,0x9f
  420464:	inc    ebp
  420465:	pop    eax
  420466:	push   0xfffffffd
  420468:	mov    BYTE PTR [edx+0x5e93393c],al
  42046e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42046f:	adc    bh,bh
  420471:	test   al,0xb0
  420473:	mov    ds:0xa1b3e5b2,eax
  420478:	and    eax,0x85e7d82d
  42047d:	inc    ebx
  42047e:	stc    
  42047f:	aas    
  420480:	ins    BYTE PTR es:[edi],dx
  420481:	mov    bl,0x60
  420483:	lods   eax,DWORD PTR ds:[esi]
  420484:	xchg   ebp,eax
  420485:	out    0x92,eax
  420487:	in     al,0x7e
  420489:	inc    edi
  42048a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42048b:	adc    BYTE PTR [ecx],bl
  42048d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048e:	or     DWORD PTR [ecx],esi
  420490:	mov    dl,0x5e
  420492:	sub    BYTE PTR [eax],dl
  420494:	inc    edi
  420495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420496:	fild   WORD PTR [eax+0x347b7b64]
  42049c:	ds xchg esp,eax
  42049e:	jmp    0x420516
  4204a0:	sub    BYTE PTR [ebp+0x32],bl
  4204a3:	mov    ah,0xa
  4204a5:	push   es
  4204a6:	push   eax
  4204a7:	add    eax,0x78e7f10b
  4204ac:	fidiv  DWORD PTR [esp+edx*4-0x4e]
  4204b0:	add    ebx,DWORD PTR [ebp-0x3a]
  4204b3:	cmp    BYTE PTR [edi-0x20640b5],cl
  4204b9:	adc    DWORD PTR [ebp+0x3fd079c8],eax
  4204bf:	pop    esi
  4204c0:	push   ebx
  4204c1:	daa    
  4204c2:	jns    0x420446
  4204c4:	push   edx
  4204c5:	lds    eax,FWORD PTR [ecx]
  4204c7:	fs jg  0x420483
  4204ca:	push   eax
  4204cb:	out    0xa6,al
  4204cd:	out    dx,al
  4204ce:	mov    DWORD PTR [eax-0x281f8e8e],edx
  4204d4:	retf   0xf58
  4204d7:	sub    cl,BYTE PTR ss:[ebx-0x38]
  4204db:	mov    DWORD PTR [edi],ebp
  4204dd:	push   0x180c3a7f
  4204e2:	jbe    0x420524
  4204e4:	adc    BYTE PTR [esi+0x19c0eda4],0xe5
  4204eb:	cdq    
  4204ec:	ds daa 
  4204ee:	pusha  
  4204ef:	inc    ebp
  4204f0:	retf   0xa4c7
  4204f3:	ss push es
  4204f5:	push   ss
  4204f6:	sub    cl,BYTE PTR [edx]
  4204f8:	pop    eax
  4204f9:	or     eax,DWORD PTR [eax-0x5f7de2a4]
  4204ff:	cmp    dl,ah
  420501:	adc    al,0x2f
  420503:	mov    eax,0xf5160141
  420508:	stos   DWORD PTR es:[edi],eax
  420509:	ss out 0x46,eax
  42050c:	shr    DWORD PTR [eax+esi*1],1
  42050f:	aas    
  420510:	mov    cl,0x4a
  420512:	add    edi,0x2
  420515:	mov    ah,0xb3
  420517:	mov    cx,0x872a
  42051b:	ja     0x42055d
  42051d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42051e:	xchg   ebx,eax
  42051f:	hlt    
  420520:	cmp    al,BYTE PTR [esi-0x7e]
  420523:	popa   
  420524:	and    edx,DWORD PTR [ebp+0x63]
  420527:	jb     0x4204c1
  420529:	and    al,0x79
  42052b:	and    al,ch
  42052d:	xchg   edi,eax
  42052e:	mov    ds:0x6731bfc4,eax
  420533:	xchg   esi,eax
  420534:	enter  0x9a23,0xe4
  420538:	mov    eax,0xec93457e
  42053d:	stos   BYTE PTR es:[edi],al
  42053e:	call   0xc15f:0x9dd3483c
  420545:	rcr    BYTE PTR ds:0x4385e014,1
  42054b:	xor    ah,bl
  42054d:	popa   
  42054e:	sub    eax,0x52756d2c
  420553:	pop    es
  420554:	xor    ah,BYTE PTR [esi-0x58]
  420557:	xchg   ah,al
  420559:	ret    0x6787
  42055c:	xor    ebp,DWORD PTR [esi+0x22]
  42055f:	sub    bl,dl
  420561:	mov    ch,BYTE PTR ds:0x753adeab
  420567:	push   ds
  420568:	call   0xfd68f8ae
  42056d:	cld    
  42056e:	mov    ebx,0xc3cdc90b
  420573:	sub    DWORD PTR [ecx+0x70],edi
  420576:	sub    eax,0x420f2e06
  42057b:	addr16 sub al,0x79
  42057e:	inc    ecx
  42057f:	add    esp,DWORD PTR [edi-0x73]
  420582:	jl     0x4205b3
  420584:	pop    ebx
  420585:	sahf   
  420586:	pop    es
  420587:	in     al,0xe6
  420589:	test   al,0x5c
  42058b:	repz xchg ah,bl
  42058e:	pop    edi
  42058f:	mov    eax,0xda255398
  420594:	mov    eax,0xdd0438a7
  420599:	lods   al,BYTE PTR ds:[si]
  42059b:	sahf   
  42059c:	shl    DWORD PTR [ebx+0x2eac3557],cl
  4205a2:	rcr    ecx,0xde
  4205a5:	out    0x49,al
  4205a7:	jns    0x420583
  4205a9:	push   cs
  4205aa:	inc    esi
  4205ab:	addr16 cli 
  4205ad:	ins    BYTE PTR es:[edi],dx
  4205ae:	stos   DWORD PTR es:[edi],eax
  4205af:	xlat   BYTE PTR ds:[ebx]
  4205b0:	loopne 0x4205fe
  4205b2:	jns    0x42055b
  4205b4:	lods   al,BYTE PTR ds:[esi]
  4205b5:	or     BYTE PTR [esp+ebx*1],cl
  4205b8:	je     0x42054c
  4205ba:	clc    
  4205bb:	and    BYTE PTR [eax-0x67],0x34
  4205bf:	dec    ebx
  4205c0:	jno    0x420615
  4205c2:	fiadd  DWORD PTR [edx+edx*4]
  4205c5:	mov    al,0xf3
  4205c7:	popf   
  4205c8:	add    DWORD PTR [edi+0x45],0x13160816
  4205cf:	jae    0x42055f
  4205d1:	pop    edi
  4205d2:	mul    BYTE PTR [esi]
  4205d4:	into   
  4205d5:	sub    ch,BYTE PTR [ecx-0x323638e]
  4205db:	push   eax
  4205dc:	pop    eax
  4205dd:	or     al,0x6
  4205df:	push   cs
  4205e0:	inc    esp
  4205e1:	mov    ds:0x60264efd,al
  4205e6:	retf   0x9a23
  4205e9:	test   BYTE PTR [edx],cl
  4205eb:	loope  0x420586
  4205ed:	sub    al,0xe4
  4205ef:	std    
  4205f0:	mov    al,ds:0xf5d8cefd
  4205f5:	unpckhps xmm1,XMMWORD PTR [esi+0x57]
  4205f9:	fst    DWORD PTR [ebx]
  4205fb:	outs   dx,BYTE PTR ds:[esi]
  4205fc:	push   ebx
  4205fd:	push   ecx
  4205fe:	fdiv   QWORD PTR [edx-0xa23f11d]
  420604:	pop    esi
  420605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420606:	jb     0x420594
  420608:	dec    ebx
  420609:	movaps XMMWORD PTR [ecx+0x10],xmm1
  42060d:	mov    edi,0xea92f46b
  420612:	les    edi,FWORD PTR [esi+edx*2+0x458fd804]
  420619:	mov    eax,ds:0xb3d6caa8
  42061e:	xor    ebx,DWORD PTR [edx+edx*1-0x3e4c72c8]
  420625:	cmp    eax,0x42169016
  42062a:	fisubr WORD PTR [edi]
  42062c:	add    eax,0xa09927d6
  420631:	sub    DWORD PTR [edi],edi
  420633:	jno    0x420643
  420635:	mov    BYTE PTR [edx],0x71
  420638:	mov    ah,0x39
  42063a:	js     0x42066c
  42063c:	push   ebx
  42063d:	imul   DWORD PTR [eax-0x3c]
  420640:	js     0x420675
  420642:	sbb    BYTE PTR [edi+ecx*4-0xf],dh
  420646:	enter  0xfe31,0x7e
  42064a:	or     eax,0xe18f5087
  42064f:	add    al,0x5a
  420651:	shl    BYTE PTR [edx+0x27],cl
  420654:	or     ebx,esi
  420656:	add    eax,DWORD PTR [esi*4-0x5c23ca4d]
  42065d:	clts   
  42065f:	mov    cs,WORD PTR [ebx+eax*1+0x58ab2b4e]
  420666:	sbb    eax,0xae53f205
  42066b:	mov    dl,BYTE PTR ds:0x7d8f3fdc
  420671:	sahf   
  420672:	sbb    esp,DWORD PTR [ebp-0x264cc4b6]
  420678:	das    
  420679:	xchg   BYTE PTR [edx-0x1a],cl
  42067c:	mov    cs,eax
  42067e:	retf   0xd9c1
  420681:	sbb    ebp,DWORD PTR [ebx+0x2b]
  420684:	pop    esp
  420685:	and    eax,0x6a18c403
  42068a:	dec    esi
  42068b:	adc    BYTE PTR [edx],0xe3
  42068e:	dec    esp
  42068f:	mov    BYTE PTR [ebp-0x40],dl
  420692:	cld    
  420693:	cs dec ebp
  420695:	jp     0x420709
  420697:	sbb    al,0x12
  420699:	add    DWORD PTR [esi+0x27],esi
  42069c:	hlt    
  42069d:	jg     0x420672
  42069f:	inc    ebx
  4206a0:	loopne 0x42062c
  4206a2:	scas   al,BYTE PTR es:[edi]
  4206a3:	scas   eax,DWORD PTR es:[edi]
  4206a4:	xchg   BYTE PTR [edx-0x3a],dh
  4206a7:	call   0x852f:0xd9aa8a6f
  4206ae:	pop    ebp
  4206af:	call   0xebc92bd0
  4206b4:	repnz sub DWORD PTR [edx+ebx*1],edi
  4206b8:	sub    esp,ecx
  4206ba:	and    ch,bl
  4206bc:	pop    ebx
  4206bd:	loopne 0x420697
  4206bf:	add    eax,0x7400dd2a
  4206c4:	jp     0x420690
  4206c6:	xor    eax,0xfb2edd68
  4206cb:	fldenv [eax+0x6f87adb0]
  4206d1:	push   0xf582aaa5
  4206d6:	sub    ah,bl
  4206d8:	inc    edx
  4206d9:	mov    ebx,0x6aa516d7
  4206de:	test   DWORD PTR [edx],eax
  4206e0:	and    bh,dl
  4206e2:	lods   al,BYTE PTR ds:[esi]
  4206e3:	div    BYTE PTR [ebx-0x6c]
  4206e6:	and    DWORD PTR [ebp-0x13],edx
  4206e9:	ss mov eax,0x69fdc31b
  4206ef:	call   0x283c3fe0
  4206f4:	lods   al,BYTE PTR ds:[esi]
  4206f5:	fcom   QWORD PTR [eax]
  4206f7:	inc    eax
  4206f8:	xchg   esi,eax
  4206f9:	call   0xa6f6:0xf7ef7683
  420700:	xor    cl,dh
  420702:	fld    TBYTE PTR [ecx-0x6c]
  420705:	sub    esp,DWORD PTR [esi]
  420707:	and    bh,BYTE PTR [ebx+eiz*2+0xf41eab7]
  42070e:	pop    ebx
  42070f:	cwde   
  420710:	ret    0x5777
  420713:	enter  0x1119,0x3c
  420717:	sub    al,0xae
  420719:	mov    bh,BYTE PTR [ecx]
  42071b:	mov    ebx,0xfd63769
  420720:	xchg   ecx,eax
  420721:	pusha  
  420722:	pop    ebp
  420723:	data16 sbb ah,BYTE PTR [ecx]
  420726:	lods   al,BYTE PTR ds:[esi]
  420727:	outs   dx,BYTE PTR ds:[esi]
  420728:	sbb    DWORD PTR [edx-0x6a993975],ebx
  42072e:	cmp    ebp,eax
  420730:	mov    bh,0x2f
  420732:	jne    0x42072f
  420734:	loop   0x420783
  420736:	cmc    
  420737:	mov    esp,0xb5b2adc3
  42073c:	out    0x8a,eax
  42073e:	aaa    
  42073f:	std    
  420740:	cmp    eax,0xcac1d8a5
  420745:	ins    DWORD PTR es:[edi],dx
  420746:	mov    esp,esp
  420748:	jae    0x420745
  42074a:	jge    0x4207a9
  42074c:	das    
  42074d:	fstp   QWORD PTR ds:0xfa16aaf7
  420753:	sar    DWORD PTR [ebx+0x2113e82f],1
  420759:	lock add BYTE PTR [eax],bl
  42075c:	jp     0x42070d
  42075e:	das    
  42075f:	popa   
  420760:	xor    BYTE PTR [ecx+edx*4-0x4f],0xa4
  420765:	(bad)  
  420766:	xor    al,0x83
  420768:	into   
  420769:	nop
  42076a:	cli    
  42076b:	adc    bh,BYTE PTR [esi-0x3a46c0b8]
  420771:	lods   al,BYTE PTR ss:[esi]
  420773:	popf   
  420774:	retf   0xad36
  420777:	pop    esp
  420778:	mov    ebp,edi
  42077a:	shl    BYTE PTR [ecx+0x4b],cl
  42077d:	push   edx
  42077e:	sbb    ecx,ebx
  420780:	push   es
  420781:	xchg   ebp,eax
  420782:	push   0x6244ec7f
  420787:	push   eax
  420788:	das    
  420789:	aad    0x1a
  42078b:	and    eax,0x1fb39ca1
  420790:	daa    
  420791:	loop   0x420797
  420793:	ficom  DWORD PTR [eax]
  420795:	adc    ebp,ebx
  420797:	dec    ebp
  420798:	jmp    0xe1cbee19
  42079d:	loopne 0x42076f
  42079f:	cmc    
  4207a0:	and    ah,ah
  4207a2:	pop    ds
  4207a3:	inc    esp
  4207a4:	daa    
  4207a5:	test   eax,0x4f34a146
  4207aa:	hlt    
  4207ab:	icebp  
  4207ac:	cwde   
  4207ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ae:	or     al,0x6a
  4207b0:	fmul   st,st(6)
  4207b2:	fsub   DWORD PTR [eax]
  4207b4:	cmp    dh,BYTE PTR [ebx+0x21]
  4207b7:	(bad)  
  4207b8:	mov    al,0x8d
  4207ba:	cld    
  4207bb:	fnstsw WORD PTR [edi+eax*2-0x3d]
  4207bf:	push   0xffffffe9
  4207c1:	sub    ch,bh
  4207c3:	test   al,0x38
  4207c5:	int3   
  4207c6:	add    esi,DWORD PTR [edi]
  4207c8:	hlt    
  4207c9:	pop    esi
  4207ca:	(bad)  
  4207cb:	cmp    al,BYTE PTR [edx-0x6b25a2a2]
  4207d1:	js     0x4207b0
  4207d3:	lock dec ebx
  4207d5:	out    dx,al
  4207d6:	sbb    al,0xa2
  4207d8:	sbb    DWORD PTR fs:[edi],eax
  4207db:	fist   WORD PTR [ecx+edi*4-0x58]
  4207df:	dec    ecx
  4207e0:	fst    DWORD PTR [edi-0x1d7b7991]
  4207e6:	and    ecx,0xffffffff
  4207e9:	xchg   edx,eax
  4207ea:	call   0x730c:0xafae381d
  4207f1:	loop   0x4207c1
  4207f3:	fmul   st(6),st
  4207f5:	mov    bl,0x56
  4207f7:	lods   eax,DWORD PTR ds:[esi]
  4207f8:	adc    esi,DWORD PTR [eax]
  4207fa:	das    
  4207fb:	mov    esp,0x910981e7
  420800:	in     al,dx
  420801:	add    eax,0x9735f612
  420806:	neg    BYTE PTR ds:0xaec0656
  42080c:	retf   
  42080d:	jmp    0x42082c
  42080f:	xchg   esi,eax
  420810:	fcmovb st,st(3)
  420812:	xlat   BYTE PTR ds:[ebx]
  420813:	sub    eax,DWORD PTR [esi+ebp*1]
  420816:	sub    DWORD PTR [eax+0x35],edi
  420819:	xchg   edx,eax
  42081a:	shl    BYTE PTR [esi-0x4fb9d682],cl
  420820:	scas   al,BYTE PTR es:[edi]
  420821:	(bad)  
  420822:	push   esp
  420823:	jp     0x4207c4
  420825:	(bad)  
  420826:	(bad)
  420829:	mov    ?,ebx
  42082b:	pop    ebx
  42082c:	cmp    ebp,DWORD PTR [edi+0x3e3af892]
  420832:	add    BYTE PTR [ecx+0x76],al
  420835:	jno    0x420860
  420837:	jb     0x42084c
  420839:	cmp    ecx,DWORD PTR [ebx]
  42083b:	mov    ebp,0xc98083cd
  420840:	fnsave [eax+edi*1+0x4]
  420844:	(bad)  
  420845:	ds jge 0x4207dd
  420848:	xor    eax,0x4816d358
  42084d:	(bad)  
  42084e:	jbe    0x42081e
  420850:	dec    BYTE PTR [esi+0x172cdf12]
  420856:	or     BYTE PTR [esi+0x26c9b112],al
  42085c:	jp     0x42080b
  42085e:	and    edi,ebp
  420860:	and    eax,0x22d66753
  420865:	push   0x3f
  420867:	fst    QWORD PTR [eax+0x679663ce]
  42086d:	in     eax,0xf0
  42086f:	jbe    0x420802
  420871:	adc    BYTE PTR [esi],dl
  420873:	jnp    0x420888
  420875:	mov    edi,esp
  420877:	je     0x420840
  420879:	call   0xd72926a4
  42087e:	jnp    0x42087b
  420880:	js     0x420859
  420882:	adc    eax,0x6b994a6e
  420887:	add    esp,DWORD PTR [ebx+edi*1+0xa1bcf22]
  42088e:	das    
  42088f:	fsub   QWORD PTR [esi]
  420891:	in     eax,0xd9
  420893:	mov    eax,0x9dcfc959
  420898:	test   al,0xca
  42089a:	mov    esi,0xa3da7c53
  42089f:	push   esp
  4208a0:	popf   
  4208a1:	xchg   DWORD PTR [esi+0x7d16552b],esp
  4208a7:	sub    al,BYTE PTR [ebx-0x5ffbfcea]
  4208ad:	jo     0x42085e
  4208af:	cwde   
  4208b0:	shr    BYTE PTR [edx+esi*2+0x27],1
  4208b4:	test   DWORD PTR [ebx+ecx*4],esi
  4208b7:	(bad)  
  4208b9:	test   DWORD PTR [edi],0x3efa6eaa
  4208bf:	rol    BYTE PTR [edi-0x3c],cl
  4208c2:	dec    ebx
  4208c3:	stos   DWORD PTR es:[edi],eax
  4208c4:	aas    
  4208c5:	xchg   ebp,eax
  4208c6:	xchg   ebx,eax
  4208c7:	sub    DWORD PTR [edi],0xffffff94
  4208ca:	dec    esi
  4208cb:	or     eax,0x6fd08407
  4208d0:	xchg   ecx,eax
  4208d1:	jmp    0xa43db598
  4208d6:	mov    dl,0x83
  4208d8:	and    al,0xf5
  4208da:	xor    dh,BYTE PTR [esi-0x43eaee9a]
  4208e0:	adc    cl,ch
  4208e2:	fld    QWORD PTR [ebx-0x74]
  4208e5:	dec    ecx
  4208e6:	fbstp  TBYTE PTR [edx-0x42e93cb6]
  4208ec:	sahf   
  4208ed:	pop    ebp
  4208ee:	scas   eax,DWORD PTR es:[edi]
  4208ef:	cs ins BYTE PTR es:[edi],dx
  4208f1:	xor    BYTE PTR [esi+0x5f90ef79],0xa7
  4208f8:	adc    ebx,DWORD PTR ss:[edi-0xf78bbaf]
  4208ff:	inc    esp
  420900:	(bad)  
  420901:	sub    al,BYTE PTR [ecx-0x7a53c797]
  420907:	xor    al,0x46
  420909:	push   ss
  42090a:	(bad)  
  42090b:	jecxz  0x4208b9
  42090d:	jo     0x4208f8
  42090f:	and    BYTE PTR [edi],0x86
  420912:	imul   eax,ebx,0x8bbdd71b
  420918:	iret   
  420919:	mov    eax,eax
  42091b:	and    BYTE PTR [ecx-0x14],ch
  42091e:	loopne 0x420917
  420920:	or     BYTE PTR [edi],ah
  420922:	ds retf 
  420924:	xchg   eax,edx
  420926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420927:	push   ds
  420928:	clc    
  420929:	inc    edx
  42092a:	stos   BYTE PTR es:[edi],al
  42092b:	stos   BYTE PTR es:[edi],al
  42092c:	enter  0x3221,0xad
  420930:	xchg   ebx,eax
  420931:	push   edx
  420932:	cmp    esi,DWORD PTR [edx+0x60cb77cb]
  420938:	and    eax,0x8341382d
  42093d:	mov    ds:0xf5d6e8bb,eax
  420942:	fadd   DWORD PTR fs:[edx+ebx*2-0x7c10867]
  42094a:	les    ebx,FWORD PTR cs:[edx-0x2b8e5e]
  420951:	adc    al,0xb4
  420953:	sbb    dl,bl
  420955:	cmp    eax,0xbde5b487
  42095a:	rol    BYTE PTR [esi+0x3f],cl
  42095d:	inc    esi
  42095e:	jns    0x4209a3
  420960:	into   
  420961:	dec    DWORD PTR [edx]
  420963:	(bad)  
  420964:	(bad)  
  420965:	sbb    eax,0x1a55038a
  42096a:	xchg   eax,ebx
  42096c:	pop    es
  42096d:	scas   al,BYTE PTR es:[edi]
  42096e:	loop   0x420959
  420970:	pop    ss
  420971:	and    dl,BYTE PTR [ebx+0x69031df5]
  420977:	leave  
  420978:	adc    al,0xa0
  42097a:	inc    ebx
  42097b:	or     DWORD PTR ds:0x76d381a8,ecx
  420981:	xchg   ebx,eax
  420982:	push   0xffffffed
  420984:	sbb    eax,0x3be1ce70
  420989:	leave  
  42098a:	cmp    ebp,DWORD PTR [esi+ebx*4]
  42098d:	je     0x4209e2
  42098f:	pop    edi
  420990:	sbb    eax,0x355a299f
  420995:	in     eax,dx
  420996:	sub    esi,DWORD PTR [ecx]
  420998:	push   0xffffffe2
  42099a:	out    dx,eax
  42099b:	dec    eax
  42099c:	js     0x4209b1
  42099e:	enter  0xf64c,0x7a
  4209a2:	mov    ebp,0x1fa20ab1
  4209a7:	dec    ebx
  4209a8:	inc    eax
  4209a9:	jnp    0x4209dd
  4209ab:	inc    ecx
  4209ac:	clc    
  4209ad:	push   ds
  4209ae:	in     al,0x93
  4209b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209b1:	nop
  4209b2:	xchg   edx,eax
  4209b3:	cmc    
  4209b4:	test   eax,0xc985608d
  4209b9:	in     eax,dx
  4209ba:	pop    edi
  4209bb:	sub    al,0x6a
  4209bd:	loopne 0x4209f0
  4209bf:	sub    eax,DWORD PTR ds:0x58c33f2c
  4209c5:	xor    DWORD PTR [edi-0x32],edx
  4209c8:	daa    
  4209c9:	add    edi,DWORD PTR [edi]
  4209cb:	test   eax,0x85f66d52
  4209d0:	mov    edi,0x7a299c43
  4209d5:	push   esp
  4209d6:	or     eax,0x41ea1d07
  4209db:	out    dx,al
  4209dc:	rcr    BYTE PTR [ebx-0x15],cl
  4209df:	stos   DWORD PTR es:[edi],eax
  4209e0:	out    dx,al
  4209e1:	xchg   ebp,eax
  4209e2:	ret    
  4209e3:	cdq    
  4209e4:	sub    BYTE PTR [eax],0x4b
  4209e7:	ror    BYTE PTR [edx],cl
  4209e9:	add    eax,0x14104cf3
  4209ee:	out    dx,eax
  4209ef:	out    dx,al
  4209f0:	ins    BYTE PTR es:[edi],dx
  4209f1:	das    
  4209f2:	and    eax,0xa8499337
  4209f7:	jle    0x420a20
  4209f9:	push   cs
  4209fa:	js     0x420a59
  4209fc:	enter  0x9947,0xa3
  420a00:	mov    ch,0xf1
  420a02:	out    dx,al
  420a03:	mov    edi,0xa2328109
  420a08:	mov    esi,0xdc4b18f1
  420a0d:	inc    edx
  420a0e:	xchg   edx,eax
  420a0f:	mov    dl,0xb5
  420a11:	pop    eax
  420a12:	sbb    eax,0xc41db26f
  420a17:	or     DWORD PTR [edx],ecx
  420a19:	add    eax,0xa0139803
  420a1e:	adc    BYTE PTR [edi],ah
  420a20:	rcl    DWORD PTR cs:[edx*8-0x57810db7],cl
  420a28:	mov    bl,0x11
  420a2a:	loopne 0x4209e2
  420a2c:	fldcw  WORD PTR [eax+esi*4+0x73ca8fec]
  420a33:	(bad)
  420a36:	mov    dh,0x9e
  420a38:	mov    esi,DWORD PTR [ebp+0x48]
  420a3b:	mov    dl,0xca
  420a3d:	mov    ds:0xa592045,eax
  420a42:	pusha  
  420a43:	aad    0xc4
  420a45:	jns    0x420a71
  420a47:	dec    DWORD PTR [ecx+0x4b]
  420a4a:	lock cld 
  420a4c:	and    BYTE PTR [esp+ebx*2+0x57908368],ch
  420a53:	jmp    0xe133:0x75226727
  420a5a:	cmp    dl,BYTE PTR [ebp-0x6a]
  420a5d:	sbb    dl,0xac
  420a60:	test   DWORD PTR [ebx-0x1],esi
  420a63:	sub    al,BYTE PTR [esi+0x618cca53]
  420a69:	mov    ecx,DWORD PTR [edi-0x5c]
  420a6c:	outs   dx,BYTE PTR ds:[esi]
  420a6d:	sbb    DWORD PTR [esi-0x12],eax
  420a70:	js     0x420ab9
  420a72:	retf   0x2ce2
  420a75:	repz inc edx
  420a77:	xor    DWORD PTR [ebp-0x60],edx
  420a7a:	test   al,0x1f
  420a7c:	arpl   bp,bx
  420a7e:	add    edi,DWORD PTR [esi-0x37]
  420a81:	adc    bl,BYTE PTR [ebp-0x38]
  420a84:	dec    eax
  420a85:	xchg   ebx,eax
  420a86:	dec    ecx
  420a87:	mov    edi,0x753e8f55
  420a8c:	inc    ecx
  420a8d:	inc    ebx
  420a8e:	xor    ebp,DWORD PTR [esi]
  420a90:	aas    
  420a91:	lods   al,BYTE PTR ds:[esi]
  420a92:	and    esi,DWORD PTR ds:0x3191343d
  420a98:	aam    0x43
  420a9a:	sbb    al,0x1c
  420a9c:	retf   
  420a9d:	mov    al,ds:0x664c7cab
  420aa2:	add    DWORD PTR [ecx+0x4d],edx
  420aa5:	jns    0x420aa8
  420aa7:	jno    0x420a73
  420aa9:	daa    
  420aaa:	dec    edi
  420aab:	pusha  
  420aac:	xchg   edi,eax
  420aad:	icebp  
  420aae:	or     esi,DWORD PTR [edi]
  420ab0:	mov    ah,bh
  420ab2:	imul   esp,DWORD PTR [edx+0x34],0xffffffe0
  420ab6:	mov    bl,BYTE PTR [edx]
  420ab8:	adc    BYTE PTR [ebx],ah
  420aba:	in     al,dx
  420abb:	popa   
  420abc:	jp     0x420b18
  420abe:	sub    eax,0x3ce637ab
  420ac3:	inc    ecx
  420ac4:	adc    DWORD PTR [edi-0x57bb7797],ebx
  420aca:	daa    
  420acb:	push   esp
  420acc:	in     al,dx
  420acd:	sbb    eax,DWORD PTR [eax+eax*4]
  420ad0:	iret   
  420ad1:	out    dx,al
  420ad2:	add    eax,0xa208cc7b
  420ad7:	mov    edi,0x8cda2d6
  420adc:	daa    
  420add:	mov    eax,0x6560b799
  420ae2:	xchg   ebp,eax
  420ae3:	stos   DWORD PTR es:[edi],eax
  420ae4:	mov    eax,0xbefbe675
  420ae9:	shl    BYTE PTR [eax-0x68c9ff6b],1
  420aef:	sub    ebp,DWORD PTR [eax+0x2f019d0]
  420af5:	mov    dh,0xe1
  420af7:	and    dh,cl
  420af9:	mov    DWORD PTR [ebx],esp
  420afb:	xor    eax,0xacab6f65
  420b00:	addr16 sahf 
  420b02:	dec    esp
  420b03:	frstpm(287 only) 
  420b05:	inc    ebx
  420b06:	mov    ebx,0xde6fa468
  420b0b:	inc    ecx
  420b0c:	mov    bh,0xb9
  420b0e:	stos   DWORD PTR es:[edi],eax
  420b0f:	sbb    al,0x2f
  420b11:	sahf   
  420b12:	aad    0x44
  420b14:	pop    es
  420b15:	pop    eax
  420b16:	aas    
  420b17:	sahf   
  420b18:	cmc    
  420b19:	add    esi,DWORD PTR [ecx]
  420b1b:	(bad)  
  420b1c:	mov    ?,WORD PTR [edx-0x744ea087]
  420b22:	pusha  
  420b23:	fs aam 0x13
  420b26:	cmp    eax,0x187c189
  420b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b2d:	(bad)  
  420b2e:	(bad)  
  420b2f:	lock shl BYTE PTR [esi],cl
  420b32:	dec    eax
  420b33:	sub    BYTE PTR [esi-0xb],ah
  420b36:	xor    al,0xb3
  420b38:	add    ebx,edi
  420b3a:	push   DWORD PTR [edi]
  420b3c:	jp     0x420b8d
  420b3e:	addr16 cmp ecx,0x3208b503
  420b45:	cs (bad) 
  420b47:	hlt    
  420b48:	xlat   BYTE PTR ds:[ebx]
  420b49:	in     eax,0xf4
  420b4b:	imul   esp,DWORD PTR es:[ecx-0x42],0x26
  420b50:	xchg   ebx,eax
  420b51:	add    DWORD PTR [esi+0x7676edf5],esi
  420b57:	pop    eax
  420b58:	leave  
  420b59:	shl    esi,cl
  420b5b:	mov    bl,0x28
  420b5d:	xlat   BYTE PTR ds:[ebx]
  420b5e:	arpl   bx,bp
  420b60:	jnp    0x420b70
  420b62:	data16 mov bh,0xa6
  420b65:	xchg   bl,al
  420b67:	cs sti 
  420b69:	push   0x91c53f69
  420b6e:	data16 sub ch,0x43
  420b72:	in     al,0x80
  420b74:	dec    ecx
  420b75:	out    0x1c,eax
  420b77:	retf   
  420b78:	pop    ecx
  420b79:	aas    
  420b7a:	push   0xe
  420b7c:	call   0x8bc41fc
  420b81:	jne    0x420b8a
  420b83:	sbb    BYTE PTR [ebx+0x2f8df928],ah
  420b89:	sti    
  420b8a:	jg     0x420bef
  420b8c:	pop    ebx
  420b8d:	aam    0xae
  420b8f:	and    cl,bh
  420b91:	hlt    
  420b92:	and    eax,0x93a3d0b0
  420b97:	jne    0x420b8f
  420b99:	idiv   BYTE PTR [ecx-0xa27bb40]
  420b9f:	mov    eax,0xe01f1ce7
  420ba4:	push   cs
  420ba5:	sbb    BYTE PTR [ebx+ebp*4-0x2d4b7373],0xaa
  420bad:	or     al,0x6e
  420baf:	jmp    0x420b98
  420bb1:	sub    ecx,DWORD PTR [eax-0x30]
  420bb4:	pop    esp
  420bb5:	mov    ecx,0x92f4de0f
  420bba:	fst    st(3)
  420bbc:	dec    edi
  420bbd:	xor    ah,BYTE PTR [ebx-0x42]
  420bc0:	es mov ebp,0xebf7c651
  420bc6:	cwde   
  420bc7:	loopne 0x420b5e
  420bc9:	pop    eax
  420bca:	cld    
  420bcb:	inc    edx
  420bcc:	cmp    bl,BYTE PTR [edi]
  420bce:	retf   0x8eae
  420bd1:	(bad)  
  420bd3:	xlat   BYTE PTR ds:[ebx]
  420bd4:	scas   al,BYTE PTR es:[edi]
  420bd5:	lea    edx,[ebp+0x72916e87]
  420bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bdc:	xchg   edx,eax
  420bdd:	jecxz  0x420b93
  420bdf:	test   ebx,esi
  420be1:	in     eax,dx
  420be2:	pop    esp
  420be3:	mov    ds:0xf41a4f6d,eax
  420be8:	lods   al,BYTE PTR ds:[esi]
  420be9:	cmp    al,0x50
  420beb:	pop    esi
  420bec:	pop    edx
  420bed:	les    esp,FWORD PTR [edx+0x766e0cf6]
  420bf3:	lock inc eax
  420bf5:	fstp   DWORD PTR [ecx-0x2b0cf06a]
  420bfb:	imul   BYTE PTR [ecx-0x5e1171f4]
  420c01:	imul   esi,ebx,0xd5ef5d9
  420c07:	scas   eax,DWORD PTR es:[edi]
  420c08:	shr    BYTE PTR [eax+0x49],cl
  420c0b:	test   esi,ebp
  420c0d:	or     BYTE PTR [ecx+0x7b],al
  420c10:	loop   0x420b9b
  420c12:	repnz cwde 
  420c14:	in     al,dx
  420c15:	popa   
  420c16:	xor    eax,0x63a95ddd
  420c1b:	sti    
  420c1c:	push   0xffffffff
  420c1e:	mov    cl,0x99
  420c20:	cmp    eax,0xc33b861
  420c25:	xchg   edx,eax
  420c26:	icebp  
  420c27:	sub    BYTE PTR [edx],ch
  420c29:	popa   
  420c2a:	pop    ecx
  420c2b:	aad    0x5c
  420c2d:	mov    edi,0x73eeb49
  420c32:	cs jne 0x420c65
  420c35:	xor    ebx,DWORD PTR [edi+0x3b]
  420c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c3a:	inc    edx
  420c3b:	xor    esi,DWORD PTR [edx]
  420c3d:	jb     0x420c24
  420c3f:	sbb    bl,BYTE PTR [ecx+0x1363ac2f]
  420c45:	sbb    DWORD PTR [edx-0x1dfa2ccd],0x3b
  420c4c:	fcom   DWORD PTR [edx]
  420c4e:	add    DWORD PTR [ebx-0x80],ebp
  420c51:	cld    
  420c52:	jb     0x420bfd
  420c54:	in     al,0xdc
  420c56:	imul   esi,DWORD PTR [ebx+0x6d2be26c],0x2b8e2dfc
  420c60:	test   DWORD PTR [edi],ebp
  420c62:	outs   dx,DWORD PTR ds:[esi]
  420c63:	xor    DWORD PTR [eax-0x60],ebp
  420c66:	sbb    ebp,ecx
  420c68:	(bad)  
  420c69:	jns    0x420c7b
  420c6b:	mov    al,0x96
  420c6d:	ss and al,0xec
  420c70:	lods   al,BYTE PTR ds:[esi]
  420c71:	aad    0xab
  420c73:	or     cl,BYTE PTR [ecx+0x1e]
  420c76:	sub    al,ch
  420c78:	frstor [eax+0x23]
  420c7b:	repnz ficom WORD PTR [edi]
  420c7e:	xchg   edx,eax
  420c7f:	repnz xchg esp,eax
  420c81:	push   0xffffff99
  420c83:	loop   0x420cef
  420c85:	xor    eax,0x2f99d446
  420c8a:	xchg   BYTE PTR [ebx+0x7eca9030],al
  420c90:	fst    QWORD PTR [ebp-0x6b4e6863]
  420c96:	jg     0x420cb6
  420c98:	div    bh
  420c9a:	jmp    0xac89:0xe5f1adce
  420ca1:	(bad)  
  420ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ca4:	mov    WORD PTR [ebx-0x17a3ee1b],?
  420caa:	jp     0x420cf7
  420cac:	sbb    edi,ecx
  420cae:	mov    edi,0x2726db9
  420cb3:	jo     0xbfc0a874
  420cb9:	ffree  st(2)
  420cbb:	dec    esp
  420cbc:	aas    
  420cbd:	xchg   esi,eax
  420cbe:	jmp    0x70f8:0x83de234f
  420cc5:	cs iret 
  420cc7:	jge    0x420cbf
  420cc9:	inc    BYTE PTR [esi+0x932286f]
  420ccf:	es pop edx
  420cd1:	dec    sp
  420cd3:	neg    DWORD PTR [ebp+0x52e22b61]
  420cd9:	mov    dh,0x60
  420cdb:	dec    eax
  420cdc:	mov    cl,0x2f
  420cde:	fdiv   DWORD PTR [esi-0x31e214c3]
  420ce4:	sbb    BYTE PTR [edx+0x40aa7034],ah
  420cea:	aad    0x57
  420cec:	addr16 cld 
  420cee:	push   edi
  420cef:	imul   esp,DWORD PTR [edi],0xffffff80
  420cf2:	jge    0x420cbe
  420cf4:	int    0x9
  420cf6:	mov    DWORD PTR [edx-0x65973aa8],esi
  420cfc:	jae    0x420d05
  420cfe:	in     eax,0x1a
  420d00:	inc    ecx
  420d01:	pop    edi
  420d02:	addr16 pusha 
  420d04:	mov    ebp,0x570b1e54
  420d09:	sbb    al,BYTE PTR [ebx]
  420d0b:	into   
  420d0c:	pop    ecx
  420d0d:	xchg   BYTE PTR [esi+ecx*8-0x74],bh
  420d11:	mov    bl,0xc4
  420d13:	pop    ss
  420d14:	inc    edx
  420d15:	fnstsw WORD PTR [esi-0x26ac91d5]
  420d1b:	pop    esp
  420d1c:	sbb    ah,BYTE PTR [ecx+0x72]
  420d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d20:	bound  ebx,QWORD PTR [eax]
  420d22:	fs xchg ecx,eax
  420d24:	sbb    eax,0xbef46358
  420d29:	jl     0x420cf3
  420d2b:	test   DWORD PTR [edx],esi
  420d2d:	sbb    eax,0xbfe8545
  420d32:	xlat   BYTE PTR ds:[ebx]
  420d33:	int    0x14
  420d35:	loopne 0x420da7
  420d37:	(bad)  
  420d38:	adc    DWORD PTR [ebp-0x2f],esi
  420d3b:	das    
  420d3c:	cmp    eax,0x10454018
  420d41:	dec    ebx
  420d42:	push   esp
  420d43:	dec    ecx
  420d44:	shl    ebx,0xe9
  420d47:	in     eax,0x11
  420d49:	and    al,BYTE PTR [ebx+eax*4]
  420d4c:	out    0x4d,al
  420d4e:	add    eax,0xf14bfef5
  420d53:	test   eax,0x81c23e29
  420d58:	inc    ebx
  420d59:	lds    ebp,FWORD PTR cs:[ebp-0x2c40d1fa]
  420d60:	sar    BYTE PTR [esi-0x2e],cl
  420d63:	sub    esi,esp
  420d65:	das    
  420d66:	or     eax,0x9da75dba
  420d6b:	xchg   ecx,eax
  420d6c:	cdq    
  420d6d:	nop
  420d6e:	(bad)  
  420d6f:	ror    esp,cl
  420d71:	mov    bl,0x55
  420d73:	and    eax,0x307302c5
  420d78:	xor    BYTE PTR [esi+0x32],dl
  420d7b:	hlt    
  420d7c:	or     ebp,DWORD PTR [ebx+0x35]
  420d7f:	jb     0x420d69
  420d81:	xchg   dh,cl
  420d83:	in     al,dx
  420d84:	fs jp  0x420d1c
  420d87:	call   0xe930:0x67d768ee
  420d8e:	pop    esi
  420d8f:	jae    0x420dfc
  420d91:	test   eax,0x15597be3
  420d96:	std    
  420d97:	lds    esi,FWORD PTR [eax+edx*4+0x71e98854]
  420d9e:	ja     0x420d92
  420da0:	mov    WORD PTR [ebx-0x2d4ee868],ds
  420da6:	mov    eax,ds:0x14b8dc55
  420dab:	addr16 push 0x8afafdc
  420db1:	and    eax,0x62a320c8
  420db6:	in     al,0x56
  420db8:	test   al,0x58
  420dba:	xchg   ebp,eax
  420dbb:	daa    
  420dbc:	cmp    al,0x22
  420dbe:	mov    al,ds:0x89af8323
  420dc3:	pop    edi
  420dc4:	std    
  420dc5:	sub    cl,BYTE PTR [edx+0x1]
  420dc8:	pop    edx
  420dc9:	cld    
  420dca:	sub    ebx,DWORD PTR [ebx]
  420dcc:	sub    al,0x44
  420dce:	xlat   BYTE PTR ds:[ebx]
  420dcf:	jns    0x420d79
  420dd1:	clc    
  420dd2:	cmc    
  420dd3:	call   0x8fe82b39
  420dd8:	nop
  420dd9:	mov    ecx,0x8999e320
  420dde:	push   ss
  420ddf:	ja     0x420e1e
  420de1:	mov    esp,0xd5082176
  420de6:	cmp    al,0x97
  420de8:	addr16 cs pop ebp
  420deb:	out    0xb4,al
  420ded:	repnz pushf 
  420def:	push   edx
  420df0:	add    al,BYTE PTR [eax+0x20]
  420df3:	and    ah,BYTE PTR [esi-0x77669085]
  420df9:	call   0xc10ce5a3
  420dfe:	into   
  420dff:	imul   edx,DWORD PTR [edx],0xffffff9a
  420e02:	dec    esi
  420e03:	hlt    
  420e04:	cs in  eax,dx
  420e06:	jno    0x420dd9
  420e08:	jl     0x420dbb
  420e0a:	xchg   edx,eax
  420e0b:	lock mov edx,0xbf19a31d
  420e11:	add    al,0x25
  420e13:	out    0x9f,eax
  420e15:	popf   
  420e16:	dec    esp
  420e17:	cmp    eax,0x42028b78
  420e1c:	mov    ch,0x3
  420e1e:	ficom  DWORD PTR [eax+0xc8a6946]
  420e24:	lods   eax,DWORD PTR ds:[esi]
  420e25:	(bad)  
  420e26:	rep stos DWORD PTR es:[edi],eax
  420e28:	mov    ds:0x6c06f130,eax
  420e2d:	shl    DWORD PTR [ecx+0x16],1
  420e30:	loope  0x420e7d
  420e32:	add    eax,0xf5d02799
  420e37:	adc    al,BYTE PTR [edx+0x1cdf41ad]
  420e3d:	mov    ah,0x92
  420e3f:	xor    al,BYTE PTR ds:0x42381ed5
  420e45:	in     al,dx
  420e46:	cmp    dl,BYTE PTR [ebp-0x26]
  420e49:	mov    bl,0x54
  420e4b:	mov    WORD PTR [esi+0x4cfe18f],cs
  420e51:	(bad)  
  420e52:	hlt    
  420e53:	xlat   BYTE PTR ds:[ebx]
  420e54:	cwde   
  420e55:	mov    eax,ds:0x80275214
  420e5a:	es sbb al,0x52
  420e5d:	clc    
  420e5e:	sub    eax,0xffffff80
  420e61:	lds    ebp,FWORD PTR [ecx-0x14c80c96]
  420e67:	pop    esp
  420e68:	and    edx,DWORD PTR [ecx+edx*8-0x47]
  420e6c:	jne    0x420ebe
  420e6e:	in     eax,dx
  420e6f:	call   0xf3c02bf
  420e74:	jo     0x420e3f
  420e76:	(bad)  
  420e77:	mov    edx,0xf71fa355
  420e7c:	and    al,0x96
  420e7e:	clc    
  420e7f:	cmp    ecx,DWORD PTR [ecx+ebx*2]
  420e82:	cli    
  420e83:	adc    eax,0x62c7e98e
  420e88:	mov    ebp,0xaed9e10d
  420e8d:	sahf   
  420e8e:	cwde   
  420e8f:	dec    ebp
  420e90:	mov    esp,0x23603dc6
  420e95:	repz std 
  420e97:	out    dx,al
  420e98:	str    WORD PTR ds:0x2c7a0ab5
  420e9f:	mov    edi,DWORD PTR [ebx]
  420ea1:	inc    esp
  420ea2:	sbb    cl,cl
  420ea4:	out    0x1a,eax
  420ea6:	mov    dl,0xc2
  420ea8:	lods   al,BYTE PTR ds:[esi]
  420ea9:	aad    0xbf
  420eab:	xchg   BYTE PTR [esi+0x3287c031],ah
  420eb1:	adc    eax,0xe4ce4447
  420eb6:	xlat   BYTE PTR ds:[ebx]
  420eb7:	cs xchg esi,eax
  420eb9:	outs   dx,DWORD PTR ds:[esi]
  420eba:	jmp    0x420e53
  420ebc:	xchg   edx,eax
  420ebd:	retf   0x1685
  420ec0:	or     eax,0x61157d06
  420ec5:	(bad)  
  420ec7:	inc    edx
  420ec8:	lds    esi,FWORD PTR [ebx]
  420eca:	jne    0x420e55
  420ecc:	xlat   BYTE PTR ds:[ebx]
  420ecd:	mov    DWORD PTR [edi],ecx
  420ecf:	repz xchg edi,eax
  420ed1:	rol    BYTE PTR [ecx+0x3973af1f],0x1d
  420ed8:	stos   DWORD PTR es:[edi],eax
  420ed9:	cmp    ebx,DWORD PTR ds:0x4f917f1d
  420edf:	inc    ecx
  420ee0:	jmp    0x420ee3
  420ee2:	lea    esi,[ebx+0x7b]
  420ee5:	push   edi
  420ee6:	hlt    
  420ee7:	cmp    al,0x3b
  420ee9:	pop    edx
  420eea:	xor    dl,BYTE PTR [ecx-0x5388dbb2]
  420ef0:	mov    es,WORD PTR [esi]
  420ef2:	pop    ds
  420ef3:	inc    esp
  420ef4:	push   ds
  420ef5:	push   esi
  420ef6:	jg     0x420eac
  420ef8:	cs hlt 
  420efa:	xor    eax,0x13ca8e0e
  420eff:	jg     0x420f65
  420f01:	cmp    al,0x3
  420f03:	js     0x420f6d
  420f05:	mov    ds:0x34ce947e,eax
  420f0a:	ror    DWORD PTR [edx+0x68],0xf7
  420f0e:	cmp    edx,edx
  420f10:	xchg   ecx,edi
  420f12:	jmp    0xe06ac01c
  420f17:	or     eax,0x140b18a3
  420f1c:	inc    edx
  420f1d:	mov    ?,WORD PTR [ebp+0x38]
  420f20:	inc    edi
  420f21:	cdq    
  420f22:	les    ebp,FWORD PTR [ebx+ecx*8+0x7a]
  420f26:	rcr    DWORD PTR ds:0x45cebb25,1
  420f2c:	cdq    
  420f2d:	push   eax
  420f2e:	mov    ds:0xa09adeab,eax
  420f33:	int    0x84
  420f35:	xchg   edx,eax
  420f36:	mov    eax,DWORD PTR [ecx+ebx*8+0x2de34950]
  420f3d:	test   edx,ebp
  420f3f:	pop    ebx
  420f40:	mov    DWORD PTR [ebx+0x41],0xd96de8fa
  420f47:	mov    ch,0x8
  420f49:	and    DWORD PTR [ebx],esi
  420f4b:	pop    eax
  420f4c:	out    dx,eax
  420f4d:	sub    DWORD PTR [eax-0x3],ebp
  420f50:	fwait
  420f51:	ss cdq 
  420f53:	adc    bh,ch
  420f55:	sbb    cl,BYTE PTR [ebx+0x6894914a]
  420f5b:	dec    esp
  420f5c:	jne    0x420f0f
  420f5e:	pop    esp
  420f5f:	mov    ss:0x82e0afe3,eax
  420f65:	mov    edi,0x913cfd0f
  420f6a:	xor    ah,BYTE PTR [ecx+ebx*2-0x29]
  420f6e:	add    bl,bh
  420f70:	imul   ecx,DWORD PTR [eax+ecx*2+0x12],0xffffffc7
  420f75:	outs   dx,DWORD PTR ds:[esi]
  420f76:	repz sbb dh,BYTE PTR [edi-0x4e615f9a]
  420f7d:	es std 
  420f7f:	xchg   esi,eax
  420f80:	xchg   ebp,eax
  420f81:	pop    esp
  420f82:	inc    edx
  420f83:	dec    ebp
  420f84:	xchg   BYTE PTR [ecx*1+0x2c49162d],al
  420f8b:	fcmovb st,st(7)
  420f8d:	fidivr DWORD PTR [ebx-0x72]
  420f90:	outs   dx,DWORD PTR ds:[esi]
  420f91:	or     ch,0x23
  420f94:	inc    eax
  420f95:	cli    
  420f96:	lahf   
  420f97:	ja     0x420f5b
  420f99:	jbe    0x420fe0
  420f9b:	fbld   TBYTE PTR ds:0xd4c2af1f
  420fa1:	xor    al,0xdc
  420fa3:	pop    esi
  420fa4:	clc    
  420fa5:	out    0x86,eax
  420fa7:	stos   BYTE PTR es:[edi],al
  420fa8:	icebp  
  420fa9:	inc    eax
  420faa:	rcr    DWORD PTR [ebp-0x70f419c9],1
  420fb0:	leave  
  420fb1:	mov    ds:0x26a5ad89,al
  420fb6:	cwde   
  420fb7:	push   es
  420fb8:	mov    al,0x91
  420fba:	jo     0x42100c
  420fbc:	loope  0x42103c
  420fbe:	dec    eax
  420fbf:	add    esp,DWORD PTR [eax+esi*2+0x13]
  420fc3:	xchg   edx,eax
  420fc4:	sub    eax,0x9769588
  420fc9:	cmp    eax,DWORD PTR [ecx-0x5857bbca]
  420fcf:	mov    eax,DWORD PTR [ebp+0x49]
  420fd2:	std    
  420fd3:	xchg   edi,eax
  420fd4:	push   ds
  420fd5:	jl     0x420f6e
  420fd7:	mov    al,0xc8
  420fd9:	xrelease mov BYTE PTR [ecx-0x32],bl
  420fdd:	inc    edx
  420fde:	inc    eax
  420fdf:	mov    eax,ds:0xe08ac1a6
  420fe4:	mov    al,ds:0x309e62a1
  420fe9:	mov    dl,0x42
  420feb:	mov    eax,ds:0xc34e565
  420ff0:	lock or DWORD PTR [eax-0x67d5eb3e],esi
  420ff7:	or     bh,BYTE PTR [eax]
  420ff9:	(bad)  
  420ffa:	xlat   BYTE PTR ds:[ebx]
  420ffb:	pop    es
  420ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ffd:	adc    eax,0x9ef5d7ac
  421002:	outs   dx,DWORD PTR ds:[esi]
  421003:	xchg   ecx,eax
  421004:	pop    esp
  421005:	sub    al,0xef
  421007:	pop    esi
  421008:	shl    DWORD PTR [ebx-0x6],cl
  42100b:	pop    ebp
  42100c:	outs   dx,BYTE PTR ds:[esi]
  42100d:	mov    al,0xea
  42100f:	and    DWORD PTR [eax+0x5b12c6],eax
  421015:	ffree  st(6)
  421017:	push   0x71a0966
  42101c:	pop    ss
  42101d:	xchg   edi,eax
  42101e:	add    BYTE PTR [ecx+0x21],cl
  421021:	sbb    eax,0x144957bf
  421026:	je     0x420fcc
  421028:	cs data16 jb 0x421020
  42102c:	mov    bl,0x67
  42102e:	aas    
  42102f:	push   ss
  421030:	push   ebp
  421031:	jle    0x421042
  421033:	test   al,0x8c
  421035:	test   BYTE PTR [edi],dl
  421037:	pop    eax
  421038:	sub    esi,DWORD PTR [edx-0x3e]
  42103b:	push   cs
  42103c:	out    dx,al
  42103d:	out    dx,al
  42103e:	not    BYTE PTR [ebp+0x4a]
  421041:	jecxz  0x421039
  421043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421044:	jl     0x421069
  421046:	mov    eax,ds:0x717a119
  42104b:	(bad)  
  42104c:	xor    al,al
  42104e:	repnz int3 
  421050:	lock sub dl,BYTE PTR [edi]
  421053:	ss jnp 0x421093
  421056:	and    esi,0x7d
  421059:	popf   
  42105a:	mov    ecx,0x4d65b117
  42105f:	add    al,0x20
  421061:	aad    0xca
  421063:	loope  0x4210b2
  421065:	bound  ecx,QWORD PTR [ebx-0x55d738bf]
  42106b:	or     DWORD PTR [esi+0x7],0xffffffa4
  42106f:	std    
  421070:	lods   al,BYTE PTR ds:[esi]
  421071:	pop    ss
  421072:	test   BYTE PTR ds:0x710804b2,cl
  421078:	scas   al,BYTE PTR es:[edi]
  421079:	or     DWORD PTR [ecx],esi
  42107b:	push   ss
  42107c:	mov    esi,0x6565a09c
  421081:	pop    ebp
  421082:	loopne 0x4210b4
  421084:	or     eax,0xa114a84
  421089:	ds jns 0x42110a
  42108c:	mov    dl,0xaa
  42108e:	push   ebx
  42108f:	xchg   edi,eax
  421090:	xor    BYTE PTR ss:[bp+si-0x7],dh
  421095:	das    
  421096:	xchg   ebp,eax
  421097:	mov    ch,0x9c
  421099:	xchg   DWORD PTR [edx],esi
  42109b:	jne    0x421042
  42109d:	call   0x79dc6bd5
  4210a2:	dec    esp
  4210a3:	mov    ah,0x4e
  4210a5:	sub    DWORD PTR [eax-0x54],esi
  4210a8:	pusha  
  4210a9:	sub    ebx,edx
  4210ab:	dec    ebx
  4210ac:	out    0x8e,al
  4210ae:	inc    edx
  4210af:	das    
  4210b0:	xor    ah,BYTE PTR [ebx-0x69]
  4210b3:	test   DWORD PTR [edx+eiz*4+0x2ab1fe3a],edx
  4210ba:	cmp    dl,dh
  4210bc:	(bad)  
  4210be:	cmp    eax,0xc0c1be6e
  4210c3:	dec    ecx
  4210c4:	stos   DWORD PTR es:[edi],eax
  4210c5:	push   ss
  4210c6:	mov    es,WORD PTR [ecx-0x6e]
  4210c9:	jp     0x42107c
  4210cb:	(bad)  
  4210cc:	mov    edi,0xfbd57f0e
  4210d1:	jo     0x4210ed
  4210d3:	jae    0x421089
  4210d5:	push   ebx
  4210d6:	shl    DWORD PTR [edx+0x6c],0xa7
  4210da:	sbb    BYTE PTR [eax],bh
  4210dc:	and    eax,0x91bfb516
  4210e1:	xchg   DWORD PTR ds:0x1ca59d09,edx
  4210e7:	out    0x98,al
  4210e9:	in     al,0x80
  4210eb:	push   ss
  4210ec:	fldenv [ebx+0x49881b59]
  4210f2:	push   esi
  4210f3:	inc    ecx
  4210f4:	inc    ebp
  4210f5:	add    ch,al
  4210f7:	push   esp
  4210f8:	iret   
  4210f9:	in     al,dx
  4210fa:	mov    ebx,0x45a04c0f
  4210ff:	or     ah,cl
  421101:	sahf   
  421102:	or     eax,0xa5137edf
  421107:	jle    0x42116a
  421109:	and    edi,DWORD PTR [esi+0x42]
  42110c:	jg     0x42112a
  42110e:	jae    0x4210b8
  421110:	(bad)  
  421111:	arpl   WORD PTR [esp+eax*1-0x4013200],cx
  421118:	jmp    0x421174
  42111a:	xchg   ebx,eax
  42111b:	mov    ah,0x0
  42111d:	xor    eax,0x235e3732
  421122:	retf   
  421123:	in     al,0xd6
  421125:	fild   WORD PTR [ebp+0xd82de8]
  42112b:	jae    0x42113d
  42112d:	add    dh,cl
  42112f:	push   edi
  421130:	mov    eax,0x9710216f
  421135:	adc    eax,0x2aa182a5
  42113a:	or     bl,BYTE PTR [edx+0x7711d16f]
  421140:	cmp    BYTE PTR [ebx],ch
  421142:	neg    BYTE PTR [edx+0x394b32bc]
  421148:	add    al,0x58
  42114a:	jne    0x4210d9
  42114c:	mov    cs,WORD PTR [ecx]
  42114e:	and    eax,0x59a3ba1b
  421153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421154:	and    eax,0x44f52c71
  421159:	es xchg esi,eax
  42115b:	clc    
  42115c:	scas   eax,DWORD PTR es:[edi]
  42115d:	(bad)  
  42115e:	jl     0x421135
  421160:	mov    esp,0x147d8cfb
  421165:	mov    ds:0x2f19e6ea,al
  42116a:	ret    0x62f5
  42116d:	pop    ss
  42116e:	out    dx,al
  42116f:	mov    WORD PTR [eax],?
  421171:	dec    ecx
  421172:	add    al,0x66
  421174:	test   DWORD PTR [ebx],edx
  421176:	ds retf 0xd8a1
  42117a:	sahf   
  42117b:	pop    ebx
  42117c:	repnz xor esi,ebx
  42117f:	add    DWORD PTR [edx],eax
  421181:	mov    al,0x86
  421183:	dec    ebp
  421184:	rcr    DWORD PTR [ebp+0x373a0787],0x39
  42118b:	dec    ecx
  42118c:	(bad)  
  42118d:	not    BYTE PTR [eax+0x6dd07e0d]
  421193:	call   0xc858:0x10bf75b3
  42119a:	or     edx,DWORD PTR ss:[ebp+ecx*2-0x23]
  42119f:	test   DWORD PTR [esi+ebx*1+0x51],esi
  4211a3:	popf   
  4211a4:	lea    esp,[edi+0x7de31269]
  4211aa:	andnps xmm1,XMMWORD PTR [esi]
  4211ad:	mov    edx,0x816c1115
  4211b2:	push   esp
  4211b3:	mov    al,0xf6
  4211b5:	or     dh,BYTE PTR [edi]
  4211b7:	or     BYTE PTR [esi],ch
  4211b9:	dec    esi
  4211ba:	cli    
  4211bb:	jnp    0x421235
  4211bd:	jb     0x421155
  4211bf:	cmp    ebx,DWORD PTR [ebx+0x11db96ad]
  4211c5:	test   eax,0xd15823c4
  4211ca:	call   0xa29ab34f
  4211cf:	push   esp
  4211d0:	loope  0x4211c6
  4211d2:	pop    ebx
  4211d3:	dec    esi
  4211d4:	cmp    BYTE PTR [edx-0x41fed80f],bl
  4211da:	add    BYTE PTR [eax+0x1f1bd098],bl
  4211e0:	dec    ebx
  4211e1:	int    0x5c
  4211e3:	outs   dx,DWORD PTR ds:[esi]
  4211e4:	jge    0x421238
  4211e6:	lods   al,BYTE PTR ds:[esi]
  4211e7:	(bad)  
  4211e8:	jns    0x42121d
  4211ea:	addr16 xor al,0x71
  4211ed:	sub    DWORD PTR [edi],ebp
  4211ef:	push   ebx
  4211f0:	retf   0x8b54
  4211f3:	cwde   
  4211f4:	call   0x9034:0xc243188d
  4211fb:	sbb    eax,0xc160172d
  421200:	js     0x421199
  421202:	mov    bl,0xec
  421204:	ja     0x42123d
  421206:	shl    BYTE PTR [edx],1
  421208:	call   0x42ad:0x942b9731
  42120f:	ret    0x18cb
  421212:	push   ss
  421213:	mov    dl,0xc1
  421215:	cmp    eax,0xc5001a95
  42121a:	adc    BYTE PTR [ebx+0x430953fc],bh
  421220:	leave  
  421221:	sbb    al,0x34
  421223:	mov    ebp,0xc6a8896e
  421228:	lods   eax,DWORD PTR ds:[esi]
  421229:	jl     0x4212a7
  42122b:	sub    ebp,DWORD PTR [edi]
  42122d:	mov    bl,0xc0
  42122f:	cwde   
  421230:	sub    ch,BYTE PTR ds:0x153c271
  421236:	pop    edi
  421237:	lahf   
  421238:	jo     0x421270
  42123a:	and    eax,0x4957327d
  42123f:	or     al,0x90
  421241:	inc    ebx
  421242:	jmp    FWORD PTR [ebx]
  421244:	mov    al,ds:0xc147a833
  421249:	dec    edx
  42124a:	push   ds
  42124b:	push   ds
  42124c:	das    
  42124d:	loop   0x42127d
  42124f:	loopne 0x4212b7
  421251:	inc    edx
  421252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421253:	push   cs
  421254:	iret   
  421255:	ds jne 0x421239
  421258:	dec    ebx
  421259:	dec    ecx
  42125a:	lock xchg esp,eax
  42125c:	ins    DWORD PTR es:[edi],dx
  42125d:	pop    ss
  42125e:	add    DWORD PTR [ecx+esi*8+0x133eaa29],ebx
  421265:	adc    DWORD PTR [ecx],ecx
  421267:	pop    es
  421268:	ds in  al,dx
  42126a:	sbb    dl,BYTE PTR [ebx+0x3c]
  42126d:	sbb    al,0xa0
  42126f:	fstp   QWORD PTR [ebx]
  421271:	push   0x16
  421273:	aaa    
  421274:	clc    
  421275:	(bad)  
  421276:	arpl   WORD PTR [ecx+0x25],di
  421279:	xor    ch,BYTE PTR [eax-0x12e05fda]
  42127f:	imul   dh
  421281:	push   esp
  421282:	pusha  
  421283:	sar    DWORD PTR [ebp-0x74e3d265],cl
  421289:	outs   dx,BYTE PTR ds:[esi]
  42128a:	pop    edi
  42128b:	xchg   ebx,eax
  42128c:	mov    ds:0xc21de5ee,eax
  421291:	cli    
  421292:	aad    0x5e
  421294:	dec    esp
  421295:	mov    ah,0x86
  421297:	sub    DWORD PTR ds:0xf236387f,0xffffffdb
  42129e:	cmp    bl,0x6a
  4212a1:	dec    edx
  4212a2:	(bad)  
  4212a3:	fucomp st(6)
  4212a5:	mov    ebx,0x5d0a8d1b
  4212aa:	mov    bh,0xfd
  4212ac:	(bad)  
  4212ad:	rcl    BYTE PTR [eax],cl
  4212af:	or     esp,0x4c
  4212b2:	xchg   ecx,eax
  4212b3:	(bad)  
  4212b5:	push   eax
  4212b6:	add    ah,BYTE PTR [edi-0x1724ffe]
  4212bc:	dec    edx
  4212bd:	jbe    0x4212ed
  4212bf:	and    al,0xed
  4212c1:	stos   DWORD PTR es:[edi],eax
  4212c2:	jb     0x421315
  4212c4:	push   0x10837cc7
  4212c9:	fcom   QWORD PTR [ebx]
  4212cb:	pop    esi
  4212cc:	pop    ss
  4212cd:	jp     0x4212cf
  4212cf:	jl     0x4212e5
  4212d1:	jp     0x421255
  4212d3:	into   
  4212d4:	pop    esp
  4212d5:	inc    eax
  4212d6:	test   dl,ah
  4212d8:	inc    eax
  4212d9:	(bad)  
  4212da:	cmp    ah,bh
  4212dc:	lahf   
  4212dd:	pusha  
  4212de:	leave  
  4212df:	or     al,0xcc
  4212e1:	pop    ebx
  4212e2:	lea    esp,[ebx-0x38e82e02]
  4212e8:	add    BYTE PTR [ecx+0x7d],bh
  4212eb:	je     0x4212b7
  4212ed:	jmp    0x4212da
  4212ef:	pop    ebp
  4212f0:	lds    ecx,FWORD PTR [edx]
  4212f2:	adc    al,0x71
  4212f4:	scas   al,BYTE PTR es:[edi]
  4212f5:	jb     0x421356
  4212f7:	outs   dx,BYTE PTR ds:[esi]
  4212f8:	jp     0x42128c
  4212fa:	adc    edi,edi
  4212fc:	sbb    esp,DWORD PTR [eax]
  4212fe:	jge    0x4212de
  421300:	pop    ebp
  421301:	imul   edi,edx,0x47
  421304:	aaa    
  421305:	ror    DWORD PTR [esp+edi*8-0x4a0fcfa5],0xcf
  42130d:	(bad)  
  42130e:	pop    esp
  42130f:	sub    al,0xc8
  421311:	cmp    BYTE PTR [esi+eax*1],dl
  421314:	mov    cl,0x78
  421316:	bound  eax,QWORD PTR [edi+0x7f3ee744]
  42131c:	or     BYTE PTR [ebp+esi*2+0x1a],dl
  421320:	push   ds
  421321:	mov    DWORD PTR [ebx+0xe],edi
  421324:	in     eax,0x7e
  421326:	mov    esp,0x172d208d
  42132b:	mov    edx,0xa0fb8a00
  421330:	mov    dh,0x55
  421332:	icebp  
  421333:	push   0xffffffe5
  421335:	xor    BYTE PTR [ebx+eiz*4],dl
  421338:	mov    ch,0x47
  42133a:	data16 daa 
  42133c:	sbb    DWORD PTR [esp+ecx*8+0x77],esp
  421340:	jo     0x42132f
  421342:	outs   dx,DWORD PTR ds:[esi]
  421343:	nop
  421344:	clc    
  421345:	xor    DWORD PTR [edx],0x67
  421348:	(bad)  
  421349:	xlat   BYTE PTR ds:[ebx]
  42134a:	mul    DWORD PTR [edi+ebp*8-0x27e7f27f]
  421351:	and    eax,0xa7111347
  421356:	test   BYTE PTR [edx+0x1474a179],dl
  42135c:	repnz add DWORD PTR [eax+0x5f4a71ff],0x7d
  421364:	daa    
  421365:	test   DWORD PTR [eax],edi
  421367:	rol    bh,1
  421369:	xor    eax,0xd202a845
  42136e:	mov    ebp,0x85c62773
  421373:	pop    esp
  421374:	clc    
  421375:	pop    ds
  421376:	fwait
  421377:	aas    
  421378:	push   edi
  421379:	xor    al,0x64
  42137b:	and    al,0x17
  42137d:	repnz out 0x26,eax
  421380:	dec    ebx
  421381:	and    ch,BYTE PTR [edi]
  421383:	xor    ecx,DWORD PTR [esi]
  421385:	lahf   
  421386:	push   esp
  421387:	xchg   edi,eax
  421388:	adc    DWORD PTR [edi-0x78],ebx
  42138b:	jnp    0x421405
  42138d:	dec    esp
  42138e:	loope  0x421399
  421390:	inc    edi
  421391:	jl     0x421400
  421393:	jge    0x421316
  421395:	imul   ebp,DWORD PTR [ebx-0x6],0xfffffff0
  421399:	cmp    edx,esi
  42139b:	or     eax,0xd82f1fe2
  4213a0:	cmc    
  4213a1:	sbb    BYTE PTR [esi-0x64fb3e04],0x82
  4213a8:	push   es
  4213a9:	and    BYTE PTR [eax+edx*1-0x35c279cc],ch
  4213b0:	xchg   BYTE PTR [ecx],bh
  4213b2:	mov    cl,0x87
  4213b4:	mov    esi,0xf941cc7
  4213b9:	cmp    ebx,DWORD PTR [esi-0x7cbd6c60]
  4213bf:	nop
  4213c0:	mov    ecx,0x7916a97e
  4213c5:	bound  edx,QWORD PTR [ecx+0x8]
  4213c8:	iret   
  4213c9:	shl    BYTE PTR [ebx-0x4579e50f],1
  4213cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213d0:	in     eax,dx
  4213d1:	pop    ebp
  4213d2:	and    al,0xc0
  4213d4:	mov    esi,0xa9382425
  4213d9:	call   0xf3e0b274
  4213de:	ret    0x2f7f
  4213e1:	mov    al,ds:0xc51baaee
  4213e6:	dec    edx
  4213e7:	outs   dx,DWORD PTR ds:[esi]
  4213e8:	stos   BYTE PTR es:[edi],al
  4213e9:	je     0x4213df
  4213eb:	gs sub eax,0x5177e254
  4213f1:	push   ecx
  4213f2:	jge    0x421439
  4213f4:	inc    ebx
  4213f5:	das    
  4213f6:	rcl    DWORD PTR [ecx+0x41],0x91
  4213fa:	jno    0x42143c
  4213fc:	in     eax,0x80
  4213fe:	push   ss
  4213ff:	pop    eax
  421400:	pop    ebp
  421401:	inc    ebp
  421402:	push   0x49
  421404:	je     0x421453
  421406:	sub    dh,BYTE PTR [ebp+0x48]
  421409:	inc    ecx
  42140a:	and    al,0x9c
  42140c:	dec    ecx
  42140d:	das    
  42140e:	iret   
  42140f:	int3   
  421410:	adc    al,0x8b
  421412:	sti    
  421413:	pop    es
  421414:	aaa    
  421415:	sbb    eax,0x11719e70
  42141a:	sbb    BYTE PTR [eax+edi*1],ch
  42141d:	sbb    al,0xc3
  42141f:	xchg   esp,eax
  421420:	add    DWORD PTR [esi+0x41600c5c],esi
  421426:	lds    ebp,FWORD PTR [ebp+0x9f756d5]
  42142c:	popf   
  42142d:	cmp    esp,edx
  42142f:	(bad)  
  421430:	repnz retf 0x8935
  421434:	lea    ebx,[eax]
  421436:	lahf   
  421437:	das    
  421438:	leave  
  421439:	sbb    esi,DWORD PTR [ebx+eiz*2]
  42143c:	sbb    ebx,ebx
  42143e:	push   edx
  42143f:	int3   
  421440:	jp     0x4213eb
  421442:	and    DWORD PTR [eax+eiz*8-0x2e1af0ce],0x1e600a84
  42144d:	(bad)  
  42144e:	aam    0x6d
  421450:	daa    
  421451:	mov    ah,cl
  421453:	push   0xffffffe4
  421455:	pop    ebx
  421456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421457:	adc    ecx,DWORD PTR [edi-0x414109e4]
  42145d:	jecxz  0x4214c2
  42145f:	cmp    BYTE PTR [ebp+0x6e05d6dd],bh
  421465:	adc    ch,BYTE PTR [esi+0x6f]
  421468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42146a:	mov    eax,ds:0xe38c0559
  42146f:	mov    esi,0x59c7f1e6
  421474:	out    0xc9,eax
  421476:	inc    ebp
  421477:	loopne 0x421465
  421479:	pop    eax
  42147a:	mov    ecx,0x8f49bfcf
  42147f:	nop
  421480:	mov    edx,DWORD PTR [esi+edx*8]
  421483:	(bad)  
  421484:	data16 (bad) 
  421486:	mov    ch,0xfc
  421488:	push   0xe22626ed
  42148d:	mov    bh,0xc7
  42148f:	mov    bl,0xf4
  421491:	and    esp,DWORD PTR [eax]
  421493:	leave  
  421494:	pop    es
  421495:	xchg   edi,eax
  421496:	rcr    BYTE PTR [ebx],cl
  421498:	cmp    ecx,ebp
  42149a:	push   ds
  42149b:	mov    ecx,0x80f1738e
  4214a0:	dec    si
  4214a2:	pop    edx
  4214a3:	dec    edx
  4214a4:	test   DWORD PTR [edx],edi
  4214a6:	aad    0x80
  4214a8:	jnp    0x4214ea
  4214aa:	mov    esi,0x2a33dcab
  4214af:	test   eax,0xb8dc4b2f
  4214b4:	sti    
  4214b5:	cmp    eax,edi
  4214b7:	int3   
  4214b8:	loop   0x42145d
  4214ba:	and    BYTE PTR [ebp+edi*8+0x7ec8297],cl
  4214c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214c2:	das    
  4214c3:	retf   0x9146
  4214c6:	mov    ch,0xf9
  4214c8:	rdpmc  
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x25ce4108
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x8469c5c9
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	inc    ebp
  42182f:	cmp    edi,ebx
  421831:	sbb    bl,bh
  421833:	shl    DWORD PTR [ecx],1
  421835:	mov    bh,BYTE PTR ds:0x5bef37c1
  42183b:	ja     0x42189e
  42183d:	imul   esp,DWORD PTR [edx-0x75ce2e24],0x39
  421844:	shl    DWORD PTR [edi],0xaf
  421847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421848:	mov    BYTE PTR [ecx+0x6b],ah
  42184b:	sbb    bl,ah
  42184d:	shl    DWORD PTR [ecx],1
  42184f:	mov    bh,BYTE PTR [ecx]
  421851:	shl    DWORD PTR [edi],0xef
  421854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421855:	mov    BYTE PTR [ecx+0x6b],ah
  421858:	sbb    bl,ah
  42185a:	shl    DWORD PTR [ecx],1
  42185c:	mov    bh,BYTE PTR [ecx]
  42185e:	shl    DWORD PTR [edi],0xef
  421861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421862:	mov    BYTE PTR [ecx+0x6b],ah
  421865:	sbb    bl,ah
  421867:	shl    DWORD PTR [ecx],1
  421869:	mov    al,cl
  42186b:	shl    DWORD PTR [edi],0xef
  42186e:	stos   BYTE PTR es:[edi],al
  42186f:	xchg   edi,eax
  421870:	(bad)  [ebp+0x1a]
  421873:	push   0x81abfcd8
  421878:	sar    BYTE PTR [ebx+0x22],0x85
  42187c:	fmul   QWORD PTR [ecx]
  42187e:	add    ch,BYTE PTR [ecx-0x4]
  421881:	mov    eax,ds:0xb35ee543
  421886:	push   esi
  421887:	add    BYTE PTR [ebx+ebp*8-0x4c8bfb00],0xa5
  42188f:	adc    eax,ebp
  421891:	pop    esp
  421892:	loope  0x4218d9
  421894:	call   0x983a:0x508a8ca
  42189b:	sahf   
  42189c:	bound  ebp,QWORD PTR [edx-0x75ac51ac]
  4218a2:	mov    al,BYTE PTR [ebp-0x23c19e94]
  4218a8:	shl    DWORD PTR [ecx],1
  4218aa:	mov    bh,BYTE PTR [ecx]
  4218ac:	shl    DWORD PTR [edi],0xe8
  4218af:	cmp    eax,0xe2283874
  4218b4:	dec    esi
  4218b5:	(bad)  [edx+0x72]
  4218b8:	stos   DWORD PTR es:[edi],eax
  4218b9:	retf   
  4218ba:	je     0x4218d3
  4218bc:	cmp    BYTE PTR ss:[ecx],0xe
  4218c0:	push   ss
  4218c1:	(bad)  
  4218c2:	mov    cs,ecx
  4218c4:	sbb    BYTE PTR [ebx],dh
  4218c6:	cdq    
  4218c7:	push   edx
  4218c8:	xlat   BYTE PTR ds:[ebx]
  4218c9:	scas   al,BYTE PTR es:[edi]
  4218ca:	dec    edx
  4218cb:	cdq    
  4218cc:	stc    
  4218cd:	adc    BYTE PTR [esp+esi*4+0x39518008],al
  4218d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218d5:	in     eax,0x88
  4218d7:	push   es
  4218d8:	pop    eax
  4218d9:	popa   
  4218da:	pop    esp
  4218db:	and    al,0x43
  4218dd:	cmp    eax,eax
  4218df:	mov    ecx,0x5ca53dd0
  4218e4:	sbb    ch,BYTE PTR [ebx+0x21]
  4218e7:	call   0xcbab:0x7269dbdd
  4218ee:	je     0x421907
  4218f0:	aaa    
  4218f1:	or     BYTE PTR [ecx-0x6e],0x88
  4218f5:	(bad)  
  4218f6:	outs   dx,BYTE PTR ds:[esi]
  4218f7:	jmp    0xcfce4c06
  4218fc:	jge    0x4218ac
  4218fe:	rol    BYTE PTR [esi+edx*2],1
  421901:	adc    ah,dl
  421903:	sub    DWORD PTR [ebx+0x3fa46180],esp
  421909:	in     eax,0xe6
  42190b:	jo     0x421900
  42190d:	popa   
  42190e:	inc    edx
  42190f:	mov    ecx,0xc1c83bde
  421914:	push   ebx
  421915:	cmp    eax,0x9ebcdbd
  42191a:	sub    dl,ah
  42191c:	dec    esi
  42191d:	(bad)  [ecx]
  42191f:	mov    bh,BYTE PTR [ecx]
  421921:	shl    DWORD PTR [edi],0xef
  421924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421925:	mov    BYTE PTR [ecx],dh
  421927:	cs sbb bl,ah
  42192a:	popf   
  42192b:	xor    BYTE PTR [eax-0x7b189ec7],cl
  421931:	jmp    0x4218bb
  421933:	popa   
  421934:	imul   ebx,DWORD PTR [edx],0xffffffdc
  421937:	shl    DWORD PTR [ecx],1
  421939:	mov    bl,cl
  42193b:	shl    DWORD PTR [esi+ebp*8],0xaf
  42193f:	mov    DWORD PTR [ebx+0x6b],ebp
  421942:	sbb    dh,BYTE PTR [edx]
  421944:	aad    0x31
  421946:	mov    al,BYTE PTR [ebp-0x5b10c839]
  42194c:	mov    BYTE PTR [ecx+0x7a],ah
  42194f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421950:	(bad)  
  421952:	xor    DWORD PTR [edx-0x10c83ec7],ebx
  421958:	mov    eax,ds:0x5b6b6188
  42195d:	(bad)  
  42195f:	and    DWORD PTR [edx-0x10ca3ec7],ecx
  421965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421966:	lea    esp,[ecx+0x6a]
  421969:	sbb    bl,ah
  42196b:	shl    DWORD PTR [ecx],1
  42196d:	mov    bh,BYTE PTR [ecx+eax*8]
  421970:	ss out dx,eax
  421972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421973:	mov    BYTE PTR [ecx+0x6b],ah
  421976:	sbb    cl,BYTE PTR [ebp+ebx*8-0x3ec275cf]
  42197d:	aaa    
  42197e:	out    dx,al
  42197f:	inc    eax
  421980:	lea    esp,[ecx+0x69]
  421983:	sbb    bl,ah
  421985:	push   ecx
  421986:	xor    DWORD PTR [edx-0xc83ed7],ecx
  42198c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42198d:	mov    BYTE PTR [ecx+0x6b],ah
  421990:	or     bl,ah
  421992:	shl    DWORD PTR [ecx],1
  421994:	mov    bh,BYTE PTR [ecx]
  421996:	shl    DWORD PTR [edi],0xef
  421999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42199a:	cwde   
  42199b:	popa   
  42199c:	imul   ebx,DWORD PTR [edx],0xffffffdc
  42199f:	shl    DWORD PTR [ecx],1
  4219a1:	mov    bh,BYTE PTR [ecx]
  4219a3:	shl    DWORD PTR [edi],0xef
  4219a6:	push   eax
  4219a7:	mov    cl,0x6d
  4219a9:	imul   esi,DWORD PTR [ebx-0x21],0xffffffd1
  4219ad:	xor    DWORD PTR [edx-0x5fc83537],ecx
  4219b3:	in     eax,dx
  4219b4:	mov    BYTE PTR [ecx+0x6b],ah
  4219b7:	sbb    bl,ah
  4219b9:	shl    DWORD PTR [ecx],1
  4219bb:	mov    bh,BYTE PTR [ecx]
  4219bd:	shl    DWORD PTR [edi],0xef
  4219c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219c1:	mov    BYTE PTR [ecx+0x6b],ah
  4219c4:	sbb    bl,ah
  4219c6:	shl    DWORD PTR [ecx],1
  4219c8:	mov    bh,BYTE PTR [ecx]
  4219ca:	shl    DWORD PTR [edi],0xef
  4219cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219ce:	mov    BYTE PTR [ecx+0x6b],ah
  4219d1:	sbb    bl,ah
  4219d3:	shl    DWORD PTR [ecx],1
  4219d5:	mov    bh,BYTE PTR [ecx]
  4219d7:	shl    DWORD PTR [edi],0xef
  4219da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219db:	mov    BYTE PTR [ecx+0x6b],ah
  4219de:	sbb    bl,ah
  4219e0:	shl    DWORD PTR [ecx],1
  4219e2:	mov    bh,BYTE PTR [ecx]
  4219e4:	shl    DWORD PTR [edi],0xef
  4219e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219e8:	mov    BYTE PTR [ecx+0x6b],ah
  4219eb:	sbb    bl,ah
  4219ed:	shl    DWORD PTR [ecx],1
  4219ef:	mov    bh,BYTE PTR [ecx]
  4219f1:	shl    DWORD PTR [edi],0xef
  4219f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219f5:	mov    BYTE PTR [ecx+0x6b],ah
  4219f8:	sbb    bl,ah
  4219fa:	shl    DWORD PTR [ecx],1
  4219fc:	mov    bh,BYTE PTR [ecx]
  4219fe:	shl    DWORD PTR [edi],0xef
  421a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a02:	mov    BYTE PTR [ecx+0x6b],ah
  421a05:	sbb    bl,ah
  421a07:	shl    DWORD PTR [ecx],1
  421a09:	mov    bh,BYTE PTR [ecx]
  421a0b:	shl    DWORD PTR [edi],0xef
  421a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a0f:	mov    BYTE PTR [ecx+0x6b],ah
  421a12:	sbb    bl,ah
  421a14:	shl    DWORD PTR [ecx],1
  421a16:	mov    bh,BYTE PTR [ecx]
  421a18:	shl    DWORD PTR [edi],0xef
  421a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a1c:	mov    BYTE PTR [ecx+0x45],ah
  421a1f:	outs   dx,BYTE PTR ds:[esi]
  421a20:	mov    ecx,0x398a45a9
  421a25:	shl    DWORD PTR [edi],0xf
  421a28:	scas   eax,DWORD PTR es:[edi]
  421a29:	mov    BYTE PTR [ecx+0x7b],ah
  421a2c:	sbb    bl,ah
  421a2e:	shl    ebp,1
  421a30:	mov    ?,WORD PTR [ecx]
  421a32:	shl    DWORD PTR [ebx],0xef
  421a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a36:	fsub   DWORD PTR [eax+ebp*1]
  421a39:	sub    BYTE PTR [eax+0x398a319e],cl
  421a3f:	shl    DWORD PTR [edi],0xef
  421a42:	test   BYTE PTR [eax-0x51cb749f],cl
  421a48:	mov    ds:0xc139e943,al
  421a4d:	aaa    
  421a4e:	out    dx,eax
  421a4f:	les    ecx,FWORD PTR [eax-0x2815949f]
  421a55:	shl    DWORD PTR [ecx],1
  421a57:	sar    BYTE PTR [ecx],1
  421a59:	shl    DWORD PTR [edi],0x37
  421a5c:	mov    al,ds:0x1a6b6188
  421a61:	(bad)  
  421a63:	xor    DWORD PTR [edx-0x10c83ec7],ecx
  421a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a6a:	test   al,0x61
  421a6c:	imul   edi,edx,0xffffffdc
  421a6f:	shl    DWORD PTR [ecx],1
  421a71:	mov    bh,BYTE PTR [ecx]
  421a73:	shl    DWORD PTR [edi],0xef
  421a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a77:	mov    BYTE PTR [ecx+0x6b],ah
  421a7a:	sbb    bl,ah
  421a7c:	shl    DWORD PTR [ecx],1
  421a7e:	mov    bh,BYTE PTR [ecx]
  421a80:	shl    DWORD PTR [edi],0xef
  421a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a84:	mov    BYTE PTR [ecx+0x6b],ah
  421a87:	sbb    bl,ah
  421a89:	shl    DWORD PTR [ecx],1
  421a8b:	mov    bh,BYTE PTR [ecx]
  421a8d:	shl    DWORD PTR [edi],0xef
  421a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a91:	mov    BYTE PTR [ecx+0x6b],ah
  421a94:	sbb    bl,ah
  421a96:	shl    DWORD PTR [ecx],1
  421a98:	mov    bh,BYTE PTR [ecx]
  421a9a:	shl    DWORD PTR [edi],0xef
  421a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a9e:	mov    BYTE PTR [ecx+0x6b],ah
  421aa1:	sbb    bl,ah
  421aa3:	shl    DWORD PTR [ecx],1
  421aa5:	mov    bh,BYTE PTR [ecx]
  421aa7:	shl    DWORD PTR [edi],0xef
  421aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aab:	mov    BYTE PTR [ecx+0x6b],ah
  421aae:	sbb    bl,ah
  421ab0:	shl    DWORD PTR [ecx],1
  421ab2:	mov    bh,BYTE PTR [ecx]
  421ab4:	shl    DWORD PTR [edi],0xef
  421ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ab8:	mov    BYTE PTR [ecx+0x6b],ah
  421abb:	sbb    bl,ah
  421abd:	shl    DWORD PTR [ecx],1
  421abf:	mov    bh,BYTE PTR [ecx]
  421ac1:	shl    DWORD PTR [edi],0xef
  421ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ac5:	mov    BYTE PTR [ecx+0x6b],ah
  421ac8:	sbb    bl,ah
  421aca:	shl    DWORD PTR [ecx],1
  421acc:	mov    bh,BYTE PTR [ecx]
  421ace:	shl    DWORD PTR [edi],0xef
  421ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ad2:	mov    BYTE PTR [ecx+0x6b],ah
  421ad5:	sbb    bl,ah
  421ad7:	shl    DWORD PTR [ecx],1
  421ad9:	mov    bh,BYTE PTR [ecx]
  421adb:	shl    DWORD PTR [edi],0xef
  421ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421adf:	mov    BYTE PTR [ecx+0x6b],ah
  421ae2:	sbb    bl,ah
  421ae4:	shl    DWORD PTR [ecx],1
  421ae6:	mov    bh,BYTE PTR [ecx]
  421ae8:	shl    DWORD PTR [edi],0xef
  421aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aec:	mov    BYTE PTR [ecx+0x6b],ah
  421aef:	sbb    bl,ah
  421af1:	shl    DWORD PTR [ecx],1
  421af3:	mov    bh,BYTE PTR [ecx]
  421af5:	shl    DWORD PTR [edi],0xef
  421af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421af9:	mov    BYTE PTR [ecx+0x6b],ah
  421afc:	sbb    bl,ah
  421afe:	shl    DWORD PTR [ecx],1
  421b00:	mov    bh,BYTE PTR [ecx]
  421b02:	shl    DWORD PTR [edi],0xef
  421b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b06:	mov    BYTE PTR [ecx+0x6b],ah
  421b09:	sbb    bl,ah
  421b0b:	shl    DWORD PTR [ecx],1
  421b0d:	mov    bh,BYTE PTR [ecx]
  421b0f:	shl    DWORD PTR [edi],0xef
  421b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b13:	mov    BYTE PTR [ecx+0x6b],ah
  421b16:	sbb    bl,ah
  421b18:	shl    DWORD PTR [ecx],1
  421b1a:	mov    bh,BYTE PTR [ecx]
  421b1c:	shl    DWORD PTR [edi],0xef
  421b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b20:	mov    BYTE PTR [ecx+0x6b],ah
  421b23:	sbb    bl,ah
  421b25:	shl    DWORD PTR [ecx],1
  421b27:	mov    bh,BYTE PTR [ecx]
  421b29:	shl    DWORD PTR [edi],0xef
  421b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b2d:	mov    BYTE PTR [ecx+0x6b],ah
  421b30:	sbb    bl,ah
  421b32:	shl    DWORD PTR [ecx],1
  421b34:	mov    bh,BYTE PTR [ecx]
  421b36:	shl    DWORD PTR [edi],0xef
  421b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b3a:	mov    BYTE PTR [ecx+0x6b],ah
  421b3d:	sbb    bl,ah
  421b3f:	shl    DWORD PTR [ecx],1
  421b41:	mov    bh,BYTE PTR [ecx]
  421b43:	shl    DWORD PTR [edi],0xef
  421b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b47:	mov    BYTE PTR [ecx+0x6b],ah
  421b4a:	sbb    bl,ah
  421b4c:	shl    DWORD PTR [ecx],1
  421b4e:	mov    bh,BYTE PTR [ecx]
  421b50:	shl    DWORD PTR [edi],0xef
  421b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b54:	mov    BYTE PTR [ecx+0x6b],ah
  421b57:	sbb    bl,ah
  421b59:	shl    DWORD PTR [ecx],1
  421b5b:	mov    bh,BYTE PTR [ecx]
  421b5d:	shl    DWORD PTR [edi],0xef
  421b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b61:	mov    BYTE PTR [ecx+0x6b],ah
  421b64:	sbb    bl,ah
  421b66:	shl    DWORD PTR [ecx],1
  421b68:	mov    bh,BYTE PTR [ecx]
  421b6a:	shl    DWORD PTR [edi],0xef
  421b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b6e:	mov    BYTE PTR [ecx+0x6b],ah
  421b71:	sbb    bl,ah
  421b73:	shl    DWORD PTR [ecx],1
  421b75:	mov    bh,BYTE PTR [ecx]
  421b77:	shl    DWORD PTR [edi],0xef
  421b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b7b:	mov    BYTE PTR [ecx+0x6b],ah
  421b7e:	sbb    bl,ah
  421b80:	shl    DWORD PTR [ecx],1
  421b82:	mov    bh,BYTE PTR [ecx]
  421b84:	shl    DWORD PTR [edi],0xef
  421b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b88:	mov    BYTE PTR [ecx+0x6b],ah
  421b8b:	sbb    bl,ah
  421b8d:	shl    DWORD PTR [ecx],1
  421b8f:	mov    bh,BYTE PTR [ecx]
  421b91:	shl    DWORD PTR [edi],0xef
  421b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b95:	mov    BYTE PTR [ecx+0x6b],ah
  421b98:	sbb    bl,ah
  421b9a:	shl    DWORD PTR [ecx],1
  421b9c:	mov    bh,BYTE PTR [ecx]
  421b9e:	shl    DWORD PTR [edi],0xef
  421ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ba2:	mov    BYTE PTR [ecx+0x6b],ah
  421ba5:	sbb    bl,ah
  421ba7:	shl    DWORD PTR [ecx],1
  421ba9:	mov    bh,BYTE PTR [ecx]
  421bab:	shl    DWORD PTR [edi],0xef
  421bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421baf:	mov    BYTE PTR [ecx+0x6b],ah
  421bb2:	sbb    bl,ah
  421bb4:	shl    DWORD PTR [ecx],1
  421bb6:	mov    bh,BYTE PTR [ecx]
  421bb8:	shl    DWORD PTR [edi],0xef
  421bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bbc:	mov    BYTE PTR [ecx+0x6b],ah
  421bbf:	sbb    bl,ah
  421bc1:	shl    DWORD PTR [ecx],1
  421bc3:	mov    bh,BYTE PTR [ecx]
  421bc5:	shl    DWORD PTR [edi],0xef
  421bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bc9:	mov    BYTE PTR [ecx+0x6b],ah
  421bcc:	sbb    bl,ah
  421bce:	shl    DWORD PTR [ecx],1
  421bd0:	mov    bh,BYTE PTR [ecx]
  421bd2:	shl    DWORD PTR [edi],0xef
  421bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bd6:	mov    BYTE PTR [ecx+0x6b],ah
  421bd9:	sbb    bl,ah
  421bdb:	shl    DWORD PTR [ecx],1
  421bdd:	mov    bh,BYTE PTR [ecx]
  421bdf:	shl    DWORD PTR [edi],0xef
  421be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421be3:	mov    BYTE PTR [ecx+0x6b],ah
  421be6:	sbb    bl,ah
  421be8:	shl    DWORD PTR [ecx],1
  421bea:	mov    bh,BYTE PTR [ecx]
  421bec:	shl    DWORD PTR [edi],0xef
  421bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bf0:	mov    BYTE PTR [ecx+0x6b],ah
  421bf3:	sbb    bl,ah
  421bf5:	shl    DWORD PTR [ecx],1
  421bf7:	mov    bh,BYTE PTR [ecx]
  421bf9:	shl    DWORD PTR [edi],0xef
  421bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bfd:	mov    BYTE PTR [ecx+0x6b],ah
  421c00:	sbb    bl,ah
  421c02:	shl    DWORD PTR [ecx],1
  421c04:	mov    bh,BYTE PTR [ecx]
  421c06:	shl    DWORD PTR [edi],0xef
  421c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c0a:	mov    BYTE PTR [ecx+0x6b],ah
  421c0d:	sbb    bl,ah
  421c0f:	shl    DWORD PTR [ecx],1
  421c11:	mov    bh,BYTE PTR [ecx]
  421c13:	shl    DWORD PTR [edi],0xef
  421c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c17:	mov    BYTE PTR [ecx+0x6b],ah
  421c1a:	sbb    bl,ah
  421c1c:	shl    DWORD PTR [ecx],1
  421c1e:	mov    bh,BYTE PTR [ecx]
  421c20:	shl    DWORD PTR [edi],0xef
  421c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c24:	mov    BYTE PTR [ecx+0x6b],ah
  421c27:	sbb    bl,ah
  421c29:	shl    DWORD PTR [ecx],1
  421c2b:	mov    bh,BYTE PTR [ecx]
  421c2d:	rcr    DWORD PTR [eax+0x47],0xaf
  421c31:	mov    BYTE PTR [esi+0x6b],cl
  421c34:	sbb    cl,ah
  421c36:	shl    DWORD PTR [ecx],1
  421c38:	mov    al,ds:0x89461b9b
  421c3d:	pop    ebx
  421c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c3f:	(bad)  
  421c40:	in     al,dx
  421c41:	dec    edx
  421c42:	xor    edi,esp
  421c44:	fstp   DWORD PTR [ecx-0x61aeab73]
  421c4a:	and    dl,dl
  421c4c:	jb     0x421c28
  421c4e:	lods   eax,DWORD PTR ds:[esi]
  421c4f:	retf   0xd5bc
  421c52:	add    BYTE PTR [eax+0x348d1907],bh
  421c58:	mov    bh,0x58
  421c5a:	pop    eax
  421c5b:	push   ebp
  421c5c:	ins    DWORD PTR es:[edi],dx
  421c5d:	(bad)  
  421c5e:	adc    ecx,DWORD PTR [edx-0x454099e2]
  421c64:	cmc    
  421c65:	in     eax,0xc8
  421c67:	pop    ecx
  421c68:	daa    
  421c69:	add    ebp,eax
  421c6b:	sub    dl,0x36
  421c6e:	pop    ds
  421c6f:	adc    edx,DWORD PTR [eax+ebp*8+0x5b]
  421c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c74:	inc    esp
  421c75:	loop   0x421cb9
  421c77:	fcmovnu st,st(6)
  421c79:	out    dx,al
  421c7a:	sbb    DWORD PTR [edx+0x38],esp
  421c7d:	push   ds
  421c7e:	push   cs
  421c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c80:	and    al,0x13
  421c82:	pop    esp
  421c83:	lea    edx,[edx-0x1780c401]
  421c89:	dec    edx
  421c8a:	jb     0x421cb1
  421c8c:	rol    BYTE PTR [ebx-0x1da15194],cl
  421c92:	pop    edx
  421c93:	outs   dx,BYTE PTR ds:[esi]
  421c94:	sbb    BYTE PTR [ecx],dh
  421c96:	push   esi
  421c97:	les    ebp,FWORD PTR fs:[esi]
  421c9a:	jne    0x421ce3
  421c9c:	std    
  421c9d:	ja     0x421c98
  421c9f:	jp     0x421d0e
  421ca1:	push   es
  421ca2:	popa   
  421ca3:	sub    al,0xb0
  421ca5:	push   ss
  421ca6:	xor    ah,BYTE PTR [edi]
  421ca8:	xlat   BYTE PTR ds:[ebx]
  421ca9:	popa   
  421caa:	cmc    
  421cab:	xchg   ebx,eax
  421cac:	pop    ds
  421cad:	jne    0x421cb7
  421caf:	lock sti 
  421cb1:	pop    eax
  421cb2:	stos   DWORD PTR es:[edi],eax
  421cb3:	out    0xc3,al
  421cb5:	xor    eax,0x74dbf1a7
  421cba:	dec    esi
  421cbb:	lods   al,BYTE PTR ds:[esi]
  421cbc:	mov    BYTE PTR [eax+0x159bc0dc],bh
  421cc2:	in     al,dx
  421cc3:	xor    bl,BYTE PTR [esi+0x1437b78d]
  421cc9:	xor    edi,DWORD PTR ds:0xd290f563
  421ccf:	ins    DWORD PTR es:[edi],dx
  421cd0:	mov    ch,0x96
  421cd2:	and    DWORD PTR [ebx],ebp
  421cd4:	add    edi,DWORD PTR [ecx-0x72]
  421cd7:	das    
  421cd8:	ret    
  421cd9:	adc    ah,BYTE PTR [edx-0x27]
  421cdc:	adc    DWORD PTR [esi],esi
  421cde:	dec    edx
  421cdf:	and    BYTE PTR [esi+0x1dd409e0],bh
  421ce5:	call   0xdbd600bb
  421cea:	and    al,0x4e
  421cec:	adc    bh,dl
  421cee:	jbe    0x421d20
  421cf0:	fbstp  TBYTE PTR [ebp+0x423c792d]
  421cf6:	test   BYTE PTR [ebp-0x5d41fffd],dh
  421cfc:	outs   dx,DWORD PTR ds:[esi]
  421cfd:	por    mm7,QWORD PTR [ebx-0x4d]
  421d01:	repnz pop esp
  421d03:	popf   
  421d04:	adc    al,0x9b
  421d06:	and    eax,0x6cb29991
  421d0b:	mov    bh,BYTE PTR [eax+0x2c]
  421d0e:	mov    edi,DWORD PTR [ebx+eax*4]
  421d11:	in     eax,dx
  421d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d13:	ret    
  421d14:	jge    0x421cae
  421d16:	fistp  QWORD PTR [edi]
  421d18:	fdivr  DWORD PTR [edi-0x7fefffac]
  421d1e:	or     ebp,DWORD PTR [eax]
  421d20:	or     eax,0x1d5baad0
  421d25:	cs retf 
  421d27:	fld    st(2)
  421d29:	mov    BYTE PTR [edi-0x67],dl
  421d2c:	add    al,0xea
  421d2e:	add    bl,cl
  421d30:	mov    edi,0x18e0ad
  421d35:	cmp    al,0xe7
  421d37:	rol    DWORD PTR [edi+edx*4],0x18
  421d3b:	scas   eax,DWORD PTR es:[edi]
  421d3c:	retf   
  421d3d:	stc    
  421d3e:	out    0xf9,eax
  421d40:	dec    eax
  421d41:	adc    eax,0x40cf1f2b
  421d46:	dec    esp
  421d47:	sub    eax,0xc28a963e
  421d4c:	or     esi,DWORD PTR [esi-0x28]
  421d4f:	lds    edx,FWORD PTR [edx+esi*8+0x1a]
  421d53:	or     al,dl
  421d55:	pop    eax
  421d56:	shr    esi,1
  421d58:	xor    BYTE PTR [eax-0x5a0dde20],ah
  421d5e:	stos   BYTE PTR es:[edi],al
  421d5f:	sub    esp,DWORD PTR [edi]
  421d61:	pop    ebx
  421d62:	test   DWORD PTR [edi],0xc1d0b078
  421d68:	jle    0x421d39
  421d6a:	nop
  421d6b:	(bad)  
  421d6d:	jge    0x421d2f
  421d6f:	dec    DWORD PTR [edi-0x5ebdca7d]
  421d75:	push   0xca3cb4bc
  421d7a:	mov    ds:0x8207d25,al
  421d7f:	dec    ebp
  421d80:	pop    esi
  421d81:	sbb    eax,0xcc1ca79c
  421d86:	adc    edx,0x522201ff
  421d8c:	sbb    al,0x28
  421d8e:	sti    
  421d8f:	pusha  
  421d90:	les    eax,FWORD PTR [ebp-0x72]
  421d93:	shl    DWORD PTR [esi+ebx*8-0x2781e792],0xcf
  421d9b:	mov    edx,0x42a204a2
  421da0:	fdiv   QWORD PTR [ecx-0x79167f5a]
  421da6:	pop    ebp
  421da7:	popf   
  421da8:	imul   esp,DWORD PTR [eax-0x3b],0x7d6c552a
  421daf:	adc    eax,0x961ddf4f
  421db4:	arpl   dx,ax
  421db6:	stos   BYTE PTR es:[edi],al
  421db7:	add    ecx,eax
  421db9:	test   BYTE PTR [esi+0x76],0x0
  421dbd:	cmp    BYTE PTR [edi+edx*1-0x2bee774e],cl
  421dc4:	rcr    BYTE PTR [esi],0xdd
  421dc7:	mov    edx,DWORD PTR [edx+0x49828685]
  421dcd:	mov    bl,0xf0
  421dcf:	test   eax,0xc018aaa0
  421dd4:	cmp    BYTE PTR [edi-0x2948e438],bh
  421dda:	daa    
  421ddb:	dec    ecx
  421ddc:	push   esi
  421ddd:	int    0xa
  421ddf:	push   0x2e
  421de1:	jl     0x421d90
  421de3:	push   edi
  421de4:	mov    ds:0x4d605075,eax
  421de9:	add    esi,DWORD PTR [edx-0x56]
  421dec:	sub    dl,BYTE PTR [esi]
  421dee:	mov    BYTE PTR [ebp-0x3a7b8b32],bh
  421df4:	int3   
  421df5:	lahf   
  421df6:	jno    0x421e26
  421df8:	mov    ah,BYTE PTR [ebx+edi*8]
  421dfb:	(bad)  
  421dfc:	fadd   QWORD PTR [eax+ebx*2+0x1617fd0d]
  421e03:	jno    0x421e84
  421e05:	add    eax,0x6bc0fd66
  421e0a:	(bad)  
  421e0b:	popa   
  421e0c:	adc    DWORD PTR [esi-0x351455e9],eax
  421e12:	loopne 0x421def
  421e14:	add    edx,esi
  421e16:	xchg   BYTE PTR [ebp+0x347cd0e9],ch
  421e1c:	mov    dh,0x70
  421e1e:	idiv   DWORD PTR [ebx-0x6f4e2568]
  421e24:	pop    ebp
  421e25:	in     al,0x45
  421e27:	dec    edx
  421e28:	add    ecx,DWORD PTR [esi-0x39]
  421e2b:	inc    esi
  421e2c:	test   DWORD PTR [esi+esi*8+0x4a001296],ecx
  421e33:	clc    
  421e34:	mov    cl,0xb9
  421e36:	mov    edi,0xa8b15f23
  421e3b:	jmp    0x421e3c
  421e3d:	fistp  QWORD PTR [ebx-0x210b393b]
  421e43:	add    al,0x29
  421e45:	popf   
  421e46:	xchg   ecx,eax
  421e47:	retf   
  421e48:	ja     0x421e23
  421e4a:	pop    edx
  421e4b:	sbb    edi,DWORD PTR [esi+0x25ed3236]
  421e51:	dec    BYTE PTR [ebx]
  421e53:	(bad)  
  421e54:	and    al,0xf3
  421e56:	xor    al,0x88
  421e58:	or     al,0x7c
  421e5a:	mov    esi,0xacd6df4a
  421e5f:	test   al,0xd3
  421e61:	xor    DWORD PTR [edi-0x54],0x9409f6fe
  421e68:	mov    dh,0x80
  421e6a:	mov    DWORD PTR [eax+edx*8-0x33a0176b],ecx
  421e71:	dec    ebx
  421e72:	push   cs
  421e73:	outs   dx,BYTE PTR ds:[esi]
  421e74:	cdq    
  421e75:	sub    eax,DWORD PTR [edi+0x4c75f2e1]
  421e7b:	xor    BYTE PTR [edx+0x37e999bb],al
  421e81:	test   DWORD PTR [edx+0x6a],eax
  421e84:	ja     0x421e4f
  421e86:	rcl    BYTE PTR [ecx+0x39],1
  421e89:	enter  0x9e01,0xd0
  421e8d:	addr16 push esi
  421e8f:	xor    eax,0xedfa69e
  421e94:	in     eax,dx
  421e95:	jl     0x421eed
  421e97:	pop    ecx
  421e98:	and    al,0x2f
  421e9a:	cmp    bh,BYTE PTR [edx+eiz*1+0x5d0808a2]
  421ea1:	sub    edx,DWORD PTR [ebp+0x2fa50f14]
  421ea7:	popa   
  421ea8:	lea    esp,[ecx+0x7f407f0e]
  421eae:	bound  ecx,QWORD PTR ds:0x9160e617
  421eb4:	mov    al,ds:0x8dca035e
  421eb9:	sti    
  421eba:	push   es
  421ebb:	rep lods eax,DWORD PTR ds:[esi]
  421ebd:	or     eax,0xa13ba8ae
  421ec2:	cmc    
  421ec3:	jb     0x421ed6
  421ec5:	jge    0x421e5e
  421ec7:	sbb    al,0xc
  421ec9:	xchg   edx,eax
  421eca:	xchg   DWORD PTR [eax-0x3d],esi
  421ecd:	push   esi
  421ece:	jge    0x421edc
  421ed0:	jbe    0x421eb0
  421ed2:	sar    BYTE PTR [esi+0x6bf78009],1
  421ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ed9:	inc    ebp
  421eda:	jnp    0x421f22
  421edc:	add    BYTE PTR [ebx],ah
  421ede:	dec    ecx
  421edf:	xor    eax,0x4b60e5e6
  421ee4:	mov    ds:0x8a989fee,eax
  421ee9:	fldcw  WORD PTR [ebp+0x6d]
  421eec:	pop    es
  421eed:	inc    esp
  421eee:	mov    edi,0x637c84f8
  421ef3:	mov    ecx,0x2fe7bc1f
  421ef8:	mov    ecx,?
  421efa:	push   0x78395b4f
  421eff:	dec    ebp
  421f00:	mov    eax,0x423220d3
  421f05:	inc    eax
  421f06:	mov    esp,0x419f5e4b
  421f0b:	icebp  
  421f0c:	fcomip st,st(4)
  421f0e:	or     DWORD PTR [ebp+0x57d6cef0],esi
  421f14:	inc    eax
  421f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f16:	sbb    esi,DWORD PTR [ecx]
  421f18:	push   cs
  421f19:	or     ebx,ebx
  421f1b:	cmp    esi,ecx
  421f1d:	outs   dx,BYTE PTR ds:[esi]
  421f1e:	jecxz  0x421ee6
  421f20:	dec    ecx
  421f21:	dec    ebp
  421f22:	ret    0x149a
  421f25:	pop    ds
  421f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f27:	xor    BYTE PTR ds:0x2ba10866,0xec
  421f2e:	fld    DWORD PTR ds:0x72758960
  421f34:	pop    esp
  421f35:	int3   
  421f36:	cs std 
  421f38:	pop    edx
  421f39:	sub    DWORD PTR [edi],edi
  421f3b:	enter  0x7e34,0xbf
  421f3f:	ficom  DWORD PTR [edx-0x578dad60]
  421f45:	adc    BYTE PTR [edx],bl
  421f47:	and    ecx,0xffffff92
  421f4a:	xchg   edx,eax
  421f4b:	jmp    0x421fca
  421f4d:	bswap  esi
  421f4f:	pop    ss
  421f50:	mov    ah,0xa2
  421f52:	cli    
  421f53:	imul   eax,DWORD PTR [eax]
  421f56:	shl    BYTE PTR [ebp+0x2c7f8767],0xae
  421f5d:	mov    ecx,0x506a6a57
  421f62:	xlat   BYTE PTR ds:[ebx]
  421f63:	outs   dx,BYTE PTR ds:[esi]
  421f64:	out    0x4c,al
  421f66:	mov    bh,0x3c
  421f68:	rcr    BYTE PTR [eax],cl
  421f6a:	in     eax,dx
  421f6b:	int    0xa4
  421f6d:	inc    esi
  421f6e:	jne    0x421fa3
  421f70:	jns    0x421f36
  421f72:	daa    
  421f73:	cmp    al,0xfa
  421f75:	dec    esp
  421f76:	adc    esi,eax
  421f78:	jge    0x421efe
  421f7a:	iret   
  421f7b:	(bad)  
  421f7c:	stos   DWORD PTR es:[edi],eax
  421f7d:	mov    ebp,0xa1f7be7a
  421f82:	adc    edi,esp
  421f84:	xchg   esi,eax
  421f85:	clc    
  421f86:	jns    0x421fe5
  421f88:	pop    ds
  421f89:	cmp    BYTE PTR [eax-0x4868fafa],cl
  421f8f:	and    ecx,ecx
  421f91:	mul    DWORD PTR [edx-0x68]
  421f94:	leave  
  421f95:	cmp    BYTE PTR [ecx+0x56],bl
  421f98:	xchg   BYTE PTR [ebx],bl
  421f9a:	arpl   cx,ax
  421f9c:	push   0x58
  421f9e:	mov    WORD PTR [ebx-0x71],fs
  421fa1:	mov    BYTE PTR [edi+0x1ed0eebb],0x81
  421fa8:	ins    DWORD PTR es:[edi],dx
  421fa9:	xlat   BYTE PTR ds:[ebx]
  421faa:	inc    BYTE PTR [eax-0x3eff04c]
  421fb0:	loop   0x421faa
  421fb2:	fsub   st,st(3)
  421fb4:	xchg   ch,al
  421fb6:	addr16 pushf 
  421fb8:	aad    0x29
  421fba:	push   ebp
  421fbb:	es mov esp,0x909e2978
  421fc1:	mov    ebx,0x6b9bcf9a
  421fc6:	push   edi
  421fc7:	aas    
  421fc8:	xchg   ebx,eax
  421fc9:	push   esi
  421fca:	mov    dl,0x47
  421fcc:	xlat   BYTE PTR ds:[ebx]
  421fcd:	sar    ch,0xf4
  421fd0:	xor    eax,0x4fc78aac
  421fd5:	push   edx
  421fd6:	mov    ebp,0xfb30482
  421fdb:	or     BYTE PTR [edi+eax*1],0xb2
  421fdf:	fstp   QWORD PTR [ecx]
  421fe1:	dec    edi
  421fe2:	and    al,0xef
  421fe4:	ds ja  0x421f80
  421fe7:	adc    bl,BYTE PTR [ebp-0x44fd301e]
  421fed:	pop    edi
  421fee:	popa   
  421fef:	dec    ebx
  421ff0:	outs   dx,DWORD PTR ds:[esi]
  421ff1:	out    0x1e,eax
  421ff3:	out    dx,eax
  421ff4:	cdq    
  421ff5:	aas    
  421ff6:	loopne 0x42205f
  421ff8:	imul   eax,eax,0xffffffae
  421ffb:	addr16 dec eax
  421ffd:	inc    ebx
  421ffe:	jnp    0x421f92
  422000:	mov    BYTE PTR [ebx+edx*4+0x68],bh
  422004:	sub    eax,esp
  422006:	jmp    0x422064
  422008:	repnz sbb BYTE PTR [ecx],0x4f
  42200c:	dec    edx
  42200d:	das    
  42200e:	jg     0x421faf
  422010:	push   ecx
  422011:	loop   0x422009
  422013:	or     esp,ebx
  422015:	call   0x7d9e44c6
  42201a:	xor    ebx,esi
  42201c:	les    edx,FWORD PTR [edx-0xc34c1b3]
  422022:	out    dx,eax
  422023:	mov    bh,0x3d
  422025:	sahf   
  422026:	inc    edi
  422027:	push   esi
  422028:	dec    eax
  422029:	hlt    
  42202a:	add    al,BYTE PTR [ebx+0x16]
  42202d:	jbe    0x421fbf
  42202f:	fcom   DWORD PTR cs:[eax]
  422032:	mov    al,0x6a
  422034:	not    BYTE PTR [ecx+0x51]
  422037:	inc    ebx
  422038:	rcr    DWORD PTR [edi+0x69],1
  42203b:	frstor [eax]
  42203d:	add    BYTE PTR [ebp-0x63],bl
  422040:	jb     0x4220a9
  422042:	pushf  
  422043:	fadd   DWORD PTR [ecx-0x3235c43b]
  422049:	outs   dx,BYTE PTR ds:[esi]
  42204a:	out    0x53,eax
  42204c:	dec    ecx
  42204d:	push   eax
  42204e:	mov    ?,ebx
  422050:	mov    ch,0xdb
  422052:	and    eax,DWORD PTR [ebx+ebp*8-0x535ae361]
  422059:	sub    DWORD PTR [ecx],0xc2bb889d
  42205f:	leave  
  422060:	out    0xc4,eax
  422062:	jecxz  0x422038
  422064:	mov    ds:0x2529b49d,al
  422069:	enter  0x8550,0xec
  42206d:	inc    edx
  42206e:	mov    bl,0xc4
  422070:	xor    BYTE PTR [edi-0x57],dl
  422073:	fistp  DWORD PTR [edi+ecx*4]
  422076:	jnp    0x4220a8
  422078:	push   ds
  422079:	ret    
  42207a:	jns    0x42204f
  42207c:	ror    BYTE PTR [ecx-0x2104a26a],1
  422082:	xor    DWORD PTR [edi-0x1b],0xbee110f6
  422089:	mov    al,0xee
  42208b:	xchg   ebp,eax
  42208c:	sub    eax,0x92a48bb5
  422091:	jmp    0xaa21:0x1f7825dc
  422098:	sbb    eax,0x5fcfe5a0
  42209d:	or     edx,DWORD PTR [ebp+0x32ca7372]
  4220a3:	fisubr WORD PTR [ebx-0x757c942e]
  4220a9:	xor    BYTE PTR [eax+eiz*1-0x3ba937b7],ch
  4220b0:	leave  
  4220b1:	sub    BYTE PTR [edi],0x99
  4220b4:	ds das 
  4220b6:	mov    cl,0x11
  4220b8:	push   eax
  4220b9:	repz ror DWORD PTR [esi],0x41
  4220bd:	and    edx,edi
  4220bf:	hlt    
  4220c0:	in     eax,dx
  4220c1:	dec    eax
  4220c2:	aad    0xce
  4220c4:	jae    0x4220ba
  4220c6:	fdivr  DWORD PTR [ecx-0x66f8c24e]
  4220cc:	sar    DWORD PTR gs:[ebx],cl
  4220cf:	mov    ecx,0x64cb1173
  4220d4:	mov    DWORD PTR [eax+0x11],ecx
  4220d7:	sbb    DWORD PTR [esi],esi
  4220d9:	sub    eax,0x464290cd
  4220de:	xchg   BYTE PTR [esi],bl
  4220e0:	ss ins DWORD PTR es:[edi],dx
  4220e2:	fcmovu st,st(5)
  4220e4:	cld    
  4220e5:	aad    0xed
  4220e7:	and    esp,DWORD PTR [eax-0x62014900]
  4220ed:	jnp    0x42208f
  4220ef:	fcomp  st(6)
  4220f1:	xor    al,BYTE PTR [esi]
  4220f3:	btr    DWORD PTR [ecx+0x68b5b1b9],ecx
  4220fa:	add    al,BYTE PTR [ecx]
  4220fc:	inc    ecx
  4220fd:	packsswb mm5,QWORD PTR [edx]
  422100:	pusha  
  422101:	add    esp,DWORD PTR [edx-0x2e]
  422104:	mov    edx,0x8c13c877
  422109:	mov    esp,0x6d9fa824
  42210e:	call   0xe0e8:0xf1709af5
  422115:	or     BYTE PTR ds:0xda3c3f52,ch
  42211b:	mov    ebx,0x68bc16e7
  422120:	sbb    ebp,DWORD PTR [edi-0x66]
  422123:	xchg   esi,eax
  422125:	jae    0x422160
  422127:	loopne 0x4220e6
  422129:	jle    0x4220f8
  42212b:	pop    ecx
  42212c:	dec    esp
  42212d:	mov    DWORD PTR [esi-0x57c89f6f],esi
  422133:	fisttp QWORD PTR [edx+esi*8-0x5e]
  422137:	mov    ds:0x49227cb8,al
  42213c:	pop    eax
  42213d:	mov    ch,0x24
  42213f:	jl     0x4220e1
  422141:	aam    0x92
  422143:	(bad)  [edi+edx*8]
  422146:	outs   dx,BYTE PTR ds:[esi]
  422147:	enter  0x2aa2,0xdc
  42214b:	fcmovnbe st,st(5)
  42214d:	(bad)  
  42214e:	aad    0xfe
  422150:	mov    ecx,0xfaccb37e
  422155:	push   edi
  422156:	lahf   
  422157:	rcr    BYTE PTR [edi+eax*4],cl
  42215a:	clc    
  42215b:	jbe    0x4220fb
  42215d:	push   ss
  42215e:	inc    ebx
  42215f:	sbb    DWORD PTR [ebp+0x26],ebp
  422162:	push   0x838d991
  422167:	call   0xa5a1dae0
  42216c:	mov    ebp,DWORD PTR [ebx]
  42216e:	push   ss
  42216f:	add    eax,0xd73e64a3
  422174:	into   
  422175:	cmp    al,0xc9
  422177:	push   eax
  422178:	push   0x7009a4a0
  42217d:	dec    edx
  42217e:	add    ah,BYTE PTR [edx+esi*1-0x53]
  422182:	test   BYTE PTR [eax+0xc38d75f],bl
  422188:	pop    edx
  422189:	in     al,dx
  42218a:	popa   
  42218b:	mov    ah,0x8a
  42218d:	push   eax
  42218e:	pop    esp
  42218f:	xor    al,0x0
  422191:	push   ds
  422192:	dec    edi
  422193:	jmp    0xd1acbe34
  422198:	bound  ecx,QWORD PTR [ecx+0x31]
  42219b:	lods   al,BYTE PTR ds:[esi]
  42219c:	clc    
  42219d:	dec    esp
  42219e:	std    
  42219f:	out    0xee,eax
  4221a1:	push   edx
  4221a2:	mov    dh,0x38
  4221a4:	(bad)  
  4221a5:	ficomp WORD PTR [edx-0x1e]
  4221a8:	fst    QWORD PTR [ecx]
  4221aa:	push   ebx
  4221ab:	jae    0x422176
  4221ad:	into   
  4221ae:	arpl   WORD PTR gs:[edi],si
  4221b1:	cmp    cl,BYTE PTR [eax]
  4221b3:	mov    dl,0x1e
  4221b5:	sub    ah,BYTE PTR [ecx-0x19]
  4221b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221b9:	mov    cl,0x30
  4221bb:	call   0x2734:0x3231160b
  4221c2:	inc    ebp
  4221c3:	in     eax,dx
  4221c4:	sbb    DWORD PTR [eax+0x7a],ebx
  4221c7:	add    al,0x77
  4221c9:	test   al,0xcc
  4221cb:	pop    edx
  4221cc:	pop    edx
  4221cd:	mov    esi,ss
  4221cf:	lds    esi,FWORD PTR ds:0xef44d525
  4221d5:	add    BYTE PTR [ebp-0x7e543ff5],cl
  4221db:	or     bh,BYTE PTR [edx-0x106d5663]
  4221e1:	pop    edx
  4221e2:	popa   
  4221e3:	mov    ah,0x64
  4221e5:	out    dx,al
  4221e6:	sahf   
  4221e7:	dec    eax
  4221e8:	jp     0x42217b
  4221ea:	ins    DWORD PTR es:[edi],dx
  4221eb:	test   al,0xfb
  4221ed:	fnsave [ebx+0x76]
  4221f0:	mov    ebx,edi
  4221f2:	das    
  4221f3:	adc    DWORD PTR [edx+0x72],eax
  4221f6:	or     BYTE PTR [edx-0x8591682],al
  4221fc:	push   0x4a
  4221fe:	les    edi,FWORD PTR [edx-0x58292889]
  422204:	jno    0x422226
  422206:	ffree  st(2)
  422208:	inc    edi
  422209:	dec    esi
  42220a:	lea    ecx,ss:[ecx+0x12]
  42220e:	xchg   ebp,eax
  42220f:	jno    0x42220d
  422211:	rcr    ch,cl
  422213:	jp     0x4221cd
  422215:	jno    0x4221c2
  422217:	lock stos BYTE PTR es:[edi],al
  422219:	mov    al,0x98
  42221b:	call   DWORD PTR fs:[ebp+0x57]
  42221f:	xor    eax,0xcd78dd3c
  422224:	adc    ah,BYTE PTR ds:0xfe886e6f
  42222a:	idiv   esp
  42222c:	xchg   edx,eax
  42222d:	sbb    al,0x35
  42222f:	mov    edx,0x12279f99
  422234:	pop    ecx
  422235:	daa    
  422236:	(bad)  
  422238:	lahf   
  422239:	call   0x1d17:0xaaf9608b
  422240:	fidivr WORD PTR [ebp+0x1e]
  422243:	and    edx,edx
  422245:	dec    esi
  422246:	adc    eax,0x30ca02e3
  42224b:	ins    BYTE PTR es:[edi],dx
  42224c:	xchg   edi,eax
  42224d:	ins    BYTE PTR es:[edi],dx
  42224e:	stc    
  42224f:	retf   0x820e
  422252:	pop    edi
  422253:	xor    BYTE PTR ds:0xea5f2879,dl
  422259:	(bad)  
  42225a:	leave  
  42225b:	pop    esi
  42225c:	dec    esp
  42225d:	(bad)  
  42225e:	leave  
  42225f:	in     eax,dx
  422260:	retf   0xf9c3
  422263:	mov    bh,0x11
  422265:	cmp    BYTE PTR [esi-0x2c2aba3a],0x9
  42226c:	sub    al,0x1
  42226e:	sbb    al,0xe6
  422270:	ffreep st(7)
  422272:	adc    DWORD PTR [ecx],ebp
  422274:	ror    DWORD PTR [ecx+0x81f8ec],0x9f
  42227b:	(bad)  
  42227c:	or     eax,0xba1813c4
  422281:	sti    
  422282:	mov    al,0x23
  422284:	sar    DWORD PTR [ebp+0x3cda9358],0xc2
  42228b:	push   0x48
  42228d:	pop    edx
  42228e:	ret    
  42228f:	addr16 int 0xde
  422292:	sahf   
  422293:	xor    al,0x6b
  422295:	sbb    ch,BYTE PTR [edx]
  422297:	nop
  422298:	cwde   
  422299:	sub    BYTE PTR [eax+0x5ed95bd5],0x95
  4222a0:	ss ins BYTE PTR es:[edi],dx
  4222a2:	sub    DWORD PTR [edi*4-0x1df9a500],edi
  4222a9:	sbb    DWORD PTR [eax],edi
  4222ab:	mov    ebx,0x262fc1a
  4222b0:	cmc    
  4222b1:	clc    
  4222b2:	xor    eax,0xe77fc749
  4222b7:	xor    eax,0x33253b44
  4222bc:	mov    ah,0x13
  4222be:	out    dx,eax
  4222bf:	es mov bl,0xbf
  4222c2:	mov    bl,BYTE PTR [ecx+0x262c74cf]
  4222c8:	mov    edx,0xfa364408
  4222cd:	inc    edi
  4222ce:	dec    ecx
  4222cf:	std    
  4222d0:	pop    edx
  4222d1:	in     al,dx
  4222d2:	push   es
  4222d3:	jge    0x422286
  4222d5:	ret    
  4222d6:	jne    0x422264
  4222d8:	jle    0x4222df
  4222da:	mov    al,ds:0xf8ba5c79
  4222df:	shl    dh,1
  4222e1:	iret   
  4222e2:	and    BYTE PTR es:[edi],bh
  4222e5:	jae    0x4222b6
  4222e7:	shr    DWORD PTR [ebx-0x7e],1
  4222ea:	sub    esp,DWORD PTR [ebp-0x4eba109b]
  4222f0:	stos   DWORD PTR es:[edi],eax
  4222f1:	mov    eax,0x929b66de
  4222f6:	add    ecx,DWORD PTR [eax+0x34]
  4222f9:	xchg   DWORD PTR [esi],eax
  4222fb:	outs   dx,DWORD PTR ds:[esi]
  4222fc:	test   al,0x19
  4222fe:	mov    ds:0x372ec9d0,al
  422303:	iret   
  422304:	out    dx,eax
  422305:	mov    cs,WORD PTR [eax-0x5bb61bd1]
  42230b:	js     0x422316
  42230d:	in     eax,dx
  42230e:	push   ebx
  42230f:	push   ds
  422310:	call   0x85601e63
  422315:	adc    DWORD PTR [ecx],ebp
  422317:	mov    eax,ds:0x516f8262
  42231c:	xor    BYTE PTR [esi-0x3b],cl
  42231f:	mov    ds:0xcd0c8d5,al
  422324:	sbb    esp,DWORD PTR [ebx-0x12]
  422327:	std    
  422328:	xor    cl,BYTE PTR [ecx+0x4b]
  42232b:	cld    
  42232c:	mov    eax,0xa8daf61b
  422331:	pop    esi
  422332:	pop    es
  422333:	add    BYTE PTR [ebp-0x24],dh
  422336:	mov    bl,0xb6
  422338:	call   0xf720:0x9b5fed45
  42233f:	dec    esi
  422340:	mov    edx,0xfe8a7942
  422345:	pop    eax
  422346:	or     al,0x73
  422348:	sbb    DWORD PTR [esi-0x4],0xffffffec
  42234c:	dec    esp
  42234d:	out    0x9e,al
  42234f:	outs   dx,BYTE PTR ds:[esi]
  422350:	das    
  422351:	loop   0x42232a
  422353:	or     DWORD PTR [ecx+ebp*2],edx
  422356:	fstp   DWORD PTR [edi+0x7d]
  422359:	inc    ax
  42235b:	and    DWORD PTR [esi+0x6b],ecx
  42235e:	es mov ch,0x64
  422361:	mov    bl,0xb1
  422363:	add    eax,0x8c29e108
  422368:	fbstp  TBYTE PTR [edx]
  42236a:	or     DWORD PTR [eax],ecx
  42236c:	mov    dl,0xc0
  42236e:	push   0x85f92355
  422373:	dec    ebx
  422374:	ret    
  422375:	mov    ebp,0x8d5e26d0
  42237a:	pushf  
  42237b:	jecxz  0x42230d
  42237d:	mov    edi,0x5ddd556a
  422382:	fs retf 
  422384:	fiadd  DWORD PTR [ecx+eax*1-0x40]
  422388:	mov    ebx,0x491ff28a
  42238d:	jecxz  0x4223e4
  42238f:	push   esp
  422390:	(bad)  
  422391:	retf   
  422392:	xor    ah,BYTE PTR [edx]
  422394:	mov    ecx,0x372d94c9
  422399:	sbb    al,0xc2
  42239b:	cmova  eax,edi
  42239e:	rol    DWORD PTR [edx+0x1466bb75],cl
  4223a4:	fdiv   DWORD PTR ds:0xde9373fa
  4223aa:	jae    0x42234f
  4223ac:	mov    ebp,0x7ea55ed9
  4223b1:	out    dx,eax
  4223b2:	and    eax,DWORD PTR [ebx]
  4223b4:	xor    DWORD PTR [edi+0x7b],eax
  4223b7:	outs   dx,DWORD PTR ds:[esi]
  4223b8:	adc    al,0x20
  4223ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223bb:	push   esp
  4223bc:	adc    al,0x5
  4223be:	mov    ah,BYTE PTR [edx+0x25]
  4223c1:	test   DWORD PTR [ebp+0x15db89d1],eax
  4223c7:	jmp    0xcb54b458
  4223cc:	jle    0x4223db
  4223ce:	xchg   DWORD PTR [ecx],ebx
  4223d0:	mov    ch,0x8d
  4223d2:	int3   
  4223d3:	xchg   edi,eax
  4223d4:	add    eax,0xe1680d84
  4223d9:	in     al,dx
  4223da:	inc    ebp
  4223db:	pop    esi
  4223dc:	nop
  4223dd:	idiv   DWORD PTR [ecx-0x73acc02d]
  4223e3:	repz and si,si
  4223e7:	rcl    ebx,cl
  4223e9:	sbb    eax,0xb00797e3
  4223ee:	jbe    0x422431
  4223f0:	xor    al,0x41
  4223f2:	or     DWORD PTR [ebx+0x1f],edi
  4223f5:	add    DWORD PTR [edi+0x2d615464],0xace96eaf
  4223ff:	add    BYTE PTR [esi+edi*2-0x63e1b131],dh
  422406:	loopne 0x422465
  422408:	ss ja  0x422475
  42240b:	pop    edx
  42240c:	push   esp
  42240d:	xor    cl,BYTE PTR [edi]
  42240f:	cwde   
  422410:	inc    edx
  422411:	lock adc al,BYTE PTR [esi-0x19ec9ff1]
  422418:	enter  0x6239,0x49
  42241c:	scas   al,BYTE PTR es:[edi]
  42241d:	(bad)  
  42241e:	in     al,dx
  42241f:	pushf  
  422420:	mov    bl,0x76
  422422:	adc    edi,DWORD PTR [ebx+0x2]
  422425:	fidivr WORD PTR [edi-0x1a59858]
  42242b:	es es pop ss
  42242e:	jmp    0x42248b
  422430:	xor    ecx,DWORD PTR [ebx+eax*1]
  422433:	cmp    DWORD PTR [edx],0x25e9cf05
  422439:	ret    
  42243a:	cld    
  42243b:	pop    esp
  42243c:	mov    ah,0xfe
  42243e:	xchg   ebx,eax
  42243f:	jmp    0x422432
  422441:	jo     0x4224b3
  422443:	cmp    edi,DWORD PTR [ebx-0x3f3ebcd6]
  422449:	push   ebp
  42244a:	test   eax,0xd5ae622b
  42244f:	push   ss
  422450:	pop    eax
  422451:	gs or  dh,ch
  422454:	and    ebx,DWORD PTR es:[eax+0xd]
  422458:	cld    
  422459:	(bad)  
  42245a:	or     eax,0x8171e5f6
  42245f:	and    eax,esp
  422461:	and    BYTE PTR [ebx+edx*4+0xe],0xc5
  422466:	inc    esp
  422467:	mov    ds:0x47ff0ba8,al
  42246c:	dec    esp
  42246d:	sbb    DWORD PTR [esi],esi
  42246f:	pushf  
  422470:	sbb    al,BYTE PTR [edi-0x6b68cdfb]
  422476:	pop    edx
  422477:	jecxz  0x422426
  422479:	aam    0xb3
  42247b:	pop    edx
  42247c:	xchg   edx,eax
  42247d:	or     al,0xda
  42247f:	jo     0x42242b
  422481:	aad    0x6f
  422483:	jbe    0x422405
  422485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422486:	lock pushf 
  422488:	mov    ds:0x2929f82b,eax
  42248d:	fisttp QWORD PTR [edx]
  42248f:	jo     0x4224ab
  422491:	xchg   BYTE PTR [esi+ecx*8-0x4],bl
  422495:	mov    ?,WORD PTR [ecx+0x94be42e]
  42249b:	mov    cl,0x3b
  42249d:	mov    BYTE PTR [ebx],ah
  42249f:	loopne 0x422444
  4224a1:	scas   al,BYTE PTR es:[edi]
  4224a2:	rcr    BYTE PTR [ecx+ebp*4],1
  4224a5:	shr    DWORD PTR [esi-0x99226d9],1
  4224ab:	push   ecx
  4224ac:	mov    eax,ds:0xe7e24e3f
  4224b1:	add    al,0xed
  4224b3:	xchg   ebp,eax
  4224b4:	mov    al,0x38
  4224b6:	dec    edx
  4224b7:	pop    esp
  4224b8:	or     bh,dl
  4224ba:	jle    0x4224ca
  4224bc:	jge    0x42245f
  4224be:	xor    eax,0xcb79479c
  4224c3:	cdq    
  4224c4:	dec    ebx
  4224c5:	inc    ebp
  4224c6:	cwde   
  4224c7:	mov    dh,0x89
  4224c9:	adc    BYTE PTR [edi-0x37],0xd0
  4224cd:	test   eax,0xf6df604b
  4224d2:	add    esp,DWORD PTR [edx+ebp*8]
  4224d5:	adc    BYTE PTR [edi+0x16],dh
  4224d8:	cmp    eax,0xc6426b65
  4224dd:	adc    BYTE PTR [ecx+0x548ee970],cl
  4224e3:	fisttp WORD PTR [esi+0x4c]
  4224e6:	ret    
  4224e7:	xchg   ebx,eax
  4224e8:	jo     0x4224d0
  4224ea:	mov    bh,BYTE PTR [eax]
  4224ec:	push   0x7298c360
  4224f1:	cmp    eax,0x255b437e
  4224f6:	mov    edx,0x4da6fe0a
  4224fb:	push   edi
  4224fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fd:	nop
  4224fe:	in     eax,dx
  4224ff:	push   edx
  422500:	mov    ds:0x2484175f,al
  422505:	or     esp,DWORD PTR [ecx+0x6ca4388b]
  42250b:	jecxz  0x42249f
  42250d:	push   ds
  42250e:	xchg   ebp,eax
  42250f:	mov    al,ds:0xd4c3630
  422514:	pop    fs
  422516:	push   edi
  422517:	cmc    
  422518:	stos   DWORD PTR es:[edi],eax
  422519:	bound  ebx,QWORD PTR [ebp-0x18cf5492]
  42251f:	(bad)  
  422520:	pop    eax
  422521:	fmul   QWORD PTR [edi+0x58]
  422524:	test   eax,0xad44af68
  422529:	(bad)  
  42252a:	int3   
  42252b:	dec    eax
  42252c:	aas    
  42252d:	pop    edi
  42252e:	mov    dh,0xad
  422530:	or     DWORD PTR [edx+0x593320a0],0xffffff90
  422537:	bound  esi,QWORD PTR [ebx+0x3b30ecae]
  42253d:	mov    ds:0xf275e66,al
  422542:	loope  0x4224e7
  422544:	fsubr  QWORD PTR [ecx-0x57]
  422547:	push   ds
  422548:	mov    esi,DWORD PTR [esi+0x15678c59]
  42254e:	jmp    0x84787753
  422553:	call   0xbebec51d
  422558:	add    eax,0x1fb20a74
  42255d:	cmp    ecx,DWORD PTR [edx+0x5e2814e2]
  422563:	jmp    0x422530
  422565:	pop    ebp
  422566:	idiv   edi
  422568:	dec    ecx
  422569:	lock cld 
  42256b:	pop    edx
  42256c:	dec    ecx
  42256d:	call   0x47cfcf37
  422572:	mov    edi,0x11c63d3
  422577:	imul   ebp,DWORD PTR [ebp+0x17630064],0x2af0da05
  422581:	mov    BYTE PTR [esi+esi*2-0x14b134b1],dl
  422588:	mov    eax,ds:0x8924cf6d
  42258d:	arpl   WORD PTR [esi-0x23fb22fb],cx
  422593:	mov    ch,0xed
  422595:	dec    eax
  422596:	stos   DWORD PTR es:[edi],eax
  422597:	mov    cl,0xe5
  422599:	(bad)  
  42259a:	cmp    al,0x6a
  42259c:	fucomi st,st(4)
  42259e:	mov    es:0xd17880db,eax
  4225a4:	sub    al,0x54
  4225a6:	adc    eax,0xf99302e7
  4225ab:	and    DWORD PTR [ecx],ebp
  4225ad:	push   0x626154da
  4225b2:	aad    0x3f
  4225b4:	sbb    BYTE PTR [esp+edi*8+0x45d9853f],0x9f
  4225bc:	in     al,0x74
  4225be:	or     al,BYTE PTR [ebx+ecx*8-0x56]
  4225c2:	dec    ebp
  4225c3:	into   
  4225c4:	jno    0x42263b
  4225c6:	lods   eax,DWORD PTR ds:[esi]
  4225c7:	das    
  4225c8:	jl     0x4225e0
  4225ca:	inc    eax
  4225cb:	add    bl,BYTE PTR [edi-0x4b]
  4225ce:	pop    es
  4225cf:	bound  edi,QWORD PTR [esi-0x3fac4d92]
  4225d5:	and    eax,0xaac03eb4
  4225da:	lahf   
  4225db:	pop    ss
  4225dc:	or     ch,BYTE PTR [edx+0x275bc21e]
  4225e2:	ficom  WORD PTR [esi]
  4225e4:	bound  ebx,QWORD PTR [edi]
  4225e6:	push   0x40
  4225e8:	adc    eax,0x98063131
  4225ed:	in     al,dx
  4225ee:	pop    ecx
  4225ef:	call   0x4de9:0x5b83559a
  4225f6:	into   
  4225f7:	push   cs
  4225f8:	test   eax,0x8b80b1ee
  4225fd:	pushf  
  4225fe:	imul   ecx,DWORD PTR [eax+0x43dc4c5e],0x6f512f6b
  422608:	les    esp,FWORD PTR [ecx]
  42260a:	imul   edi,DWORD PTR [ecx-0x68207f80],0xffffffe7
  422611:	mov    ebx,0xccd7ec23
  422616:	mov    eax,0xd6933f53
  42261b:	rcl    DWORD PTR [ebp+0x2],1
  42261e:	rol    BYTE PTR [edi],0x9d
  422621:	jno    0x42260a
  422623:	dec    ebx
  422624:	jmp    0x4225ef
  422626:	leave  
  422627:	mov    bl,0xa7
  422629:	imul   edi,esp,0xffffffe1
  42262c:	sbb    dh,BYTE PTR [edi+0x287529d5]
  422632:	inc    eax
  422633:	scas   eax,DWORD PTR es:[edi]
  422634:	pop    ebp
  422635:	mov    dh,0x1b
  422637:	and    eax,0xbc68b28f
  42263c:	loop   0x4226b1
  42263e:	cmp    BYTE PTR [esi],dl
  422640:	cdq    
  422641:	xchg   edx,eax
  422642:	pop    ebp
  422643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422644:	mul    DWORD PTR [ebx-0x328758fe]
  42264a:	adc    ebp,ecx
  42264c:	retf   0xe5ac
  42264f:	jno    0x4226c4
  422651:	stos   DWORD PTR es:[edi],eax
  422652:	outs   dx,BYTE PTR ds:[esi]
  422653:	fdivp  st(3),st
  422655:	les    ebx,FWORD PTR [ecx+0x40fc0a99]
  42265b:	push   ecx
  42265c:	aas    
  42265d:	call   0x77f7:0xb1a86a76
  422664:	mov    ebp,0x6136a2bb
  422669:	dec    esp
  42266a:	adc    eax,0x602eeec
  42266f:	and    ecx,DWORD PTR [edi+eiz*1-0x29cc9754]
  422676:	dec    ebx
  422677:	add    DWORD PTR [ebp-0x12],ebp
  42267a:	push   edi
  42267b:	iret   
  42267c:	sti    
  42267d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267e:	retf   0x5757
  422681:	data16 jo 0x4226b2
  422684:	xchg   ecx,eax
  422685:	pop    eax
  422686:	jne    0x4226fc
  422688:	or     DWORD PTR [ecx+0x2d],eax
  42268b:	mov    ecx,0x63f46791
  422690:	in     al,0xb4
  422692:	mov    bl,0xd6
  422694:	inc    esp
  422695:	cmp    BYTE PTR [ebx],0xed
  422698:	mov    esp,0x4a43809e
  42269d:	and    ebp,ebx
  42269f:	test   al,0x6c
  4226a1:	icebp  
  4226a2:	test   BYTE PTR [ebp+edx*1-0x51099429],cl
  4226a9:	outs   dx,DWORD PTR ds:[esi]
  4226aa:	mov    edi,0x12a0f65d
  4226af:	scas   eax,DWORD PTR es:[edi]
  4226b0:	loop   0x4226b6
  4226b2:	retf   
  4226b3:	loop   0x4226fb
  4226b5:	xor    eax,0xfe56d0ac
  4226ba:	(bad)  
  4226bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226bc:	gs gs xchg ecx,eax
  4226bf:	push   edi
  4226c0:	add    DWORD PTR [eax-0x34d79388],ecx
  4226c6:	call   0x6ff6:0x3b5b1a61
  4226cd:	(bad)  
  4226ce:	adc    BYTE PTR [ecx+eax*4+0x50828996],ah
  4226d5:	mov    dh,0x1
  4226d7:	cwde   
  4226d8:	mov    dl,0x2c
  4226da:	and    dl,al
  4226dc:	push   es
  4226dd:	popf   
  4226de:	jmp    0x42271f
  4226e0:	sbb    BYTE PTR [edx],bh
  4226e2:	push   esp
  4226e3:	clc    
  4226e4:	mov    ebp,0x56ac4bf4
  4226e9:	shl    BYTE PTR [eax+0x6affdaf1],0x57
  4226f0:	ret    0x8f04
  4226f3:	sbb    edx,DWORD PTR [ebx-0x177f1aa8]
  4226f9:	test   eax,0x6b762632
  4226fe:	test   eax,0x26c028f8
  422703:	inc    ebx
  422704:	dec    ebp
  422705:	mov    bh,0xd9
  422707:	push   edi
  422708:	int3   
  422709:	nop
  42270a:	mov    eax,ds:0x501e9da8
  42270f:	outs   dx,DWORD PTR ds:[esi]
  422710:	pop    ecx
  422711:	(bad)  
  422712:	and    edi,DWORD PTR [edx+0x976b245]
  422718:	call   0x8bcf2a4a
  42271d:	xor    BYTE PTR [edi+0x7d0fd89e],0x24
  422724:	add    DWORD PTR [ebx],edi
  422726:	pop    esp
  422727:	stc    
  422728:	div    BYTE PTR [ebx]
  42272a:	sar    cl,cl
  42272c:	xor    eax,0x6b88bad5
  422731:	retf   
  422732:	sar    DWORD PTR [ebp+0x1fe8c448],1
  422738:	dec    esp
  422739:	xchg   edi,eax
  42273a:	jg     0x42276d
  42273c:	xchg   ebx,eax
  42273d:	ss rol esp,1
  422740:	add    esi,DWORD PTR [esi-0x25]
  422743:	outs   dx,DWORD PTR ds:[esi]
  422744:	cmp    edi,DWORD PTR [ecx-0x70]
  422747:	jmp    0xcbbe:0xa3132d4f
  42274e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42274f:	add    DWORD PTR [ecx],ecx
  422751:	mov    bh,0x39
  422753:	jecxz  0x4227c1
  422755:	cmp    dl,BYTE PTR [ecx-0x1f]
  422758:	outs   dx,DWORD PTR ds:[esi]
  422759:	and    al,0xaf
  42275b:	jo     0x422774
  42275d:	xor    ecx,edx
  42275f:	dec    edx
  422760:	icebp  
  422761:	push   edx
  422762:	shl    DWORD PTR [ebx],cl
  422764:	jmp    0x4227ce
  422766:	fisubr DWORD PTR [esp+edi*8]
  422769:	mov    ebp,gs
  42276b:	jle    0x422768
  42276d:	push   ds
  42276e:	das    
  42276f:	or     ah,cl
  422771:	push   cs
  422772:	fwait
  422773:	aam    0xb8
  422775:	clc    
  422776:	mov    BYTE PTR [edx+ebp*8-0x8096d14],ah
  42277d:	lock push 0x1a511cc2
  422783:	or     al,0xa5
  422785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422786:	dec    esi
  422787:	cmp    edx,DWORD PTR [edx+edx*8-0x57e4ec1]
  42278e:	cdq    
  42278f:	stos   BYTE PTR es:[edi],al
  422790:	mov    ?,WORD PTR [edx-0x78df6a9]
  422796:	push   ds
  422797:	cdq    
  422798:	fidiv  DWORD PTR [esp+eax*2-0x49]
  42279c:	mov    ah,0x51
  42279e:	int3   
  42279f:	retf   0xfa37
  4227a2:	jb     0x4227e9
  4227a4:	ja     0x4227db
  4227a6:	add    DWORD PTR [ebp+0x6768a74a],0x7333096a
  4227b0:	and    DWORD PTR [edx+esi*4],0x22d35956
  4227b7:	js     0x422775
  4227b9:	sub    dh,BYTE PTR [edi-0x6c013d8d]
  4227bf:	xor    DWORD PTR [ebx+ecx*8-0x31],esp
  4227c3:	push   0xb79c2901
  4227c8:	ds test al,0xe5
  4227cb:	sahf   
  4227cc:	std    
  4227cd:	hlt    
  4227ce:	shr    DWORD PTR es:[eax+0x6a],cl
  4227d2:	out    dx,eax
  4227d3:	pusha  
  4227d4:	or     eax,0xd343b215
  4227d9:	mov    bh,0xad
  4227db:	dec    esp
  4227dc:	jmp    0x2c18:0x701b0783
  4227e3:	dec    ebx
  4227e4:	pop    ss
  4227e5:	pop    ecx
  4227e6:	jno    0x422830
  4227e8:	jle    0x42279d
  4227ea:	std    
  4227eb:	rcl    BYTE PTR [ebp-0xb],1
  4227ee:	and    esi,DWORD PTR [edx+eax*4]
  4227f1:	pop    edx
  4227f2:	add    eax,0x390e2d67
  4227f7:	stos   BYTE PTR es:[edi],al
  4227f8:	cmp    DWORD PTR [ebp+edx*4+0x28],ebp
  4227fc:	pop    es
  4227fd:	xchg   DWORD PTR [esi+0x37],edx
  422800:	call   0x60381b54
  422805:	dec    BYTE PTR [ecx]
  422807:	mov    edx,0x33e457b3
  42280c:	pushf  
  42280d:	or     eax,0x89334008
  422812:	mov    bl,0xe0
  422814:	dec    ebx
  422815:	or     eax,0xd6463b6c
  42281a:	pop    ds
  42281b:	inc    ebx
  42281c:	dec    edx
  42281d:	mov    ds:0x533e00a3,al
  422822:	pop    es
  422823:	mov    ecx,0x4d9f3868
  422828:	xchg   ebp,eax
  422829:	xlat   BYTE PTR ds:[ebx]
  42282a:	add    BYTE PTR [edx],bl
  42282c:	or     al,0x49
  42282e:	(bad)  
  42282f:	jmp    ebx
  422831:	or     edx,edi
  422833:	and    al,0xa
  422835:	jbe    0x422871
  422837:	hlt    
  422838:	or     DWORD PTR [eax+0x1c7b136d],esp
  42283e:	pushf  
  42283f:	mov    ebp,0x93e393f3
  422844:	mov    bl,0x23
  422846:	imul   BYTE PTR [edi+eiz*8+0x3f]
  42284a:	gs ja  0x42289c
  42284d:	into   
  42284e:	adc    BYTE PTR [edi-0x251a862d],0xfc
  422855:	int    0xb7
  422857:	jmp    0xf55ecf03
  42285c:	jne    0x4227e0
  42285e:	mov    esi,DWORD PTR [esi]
  422860:	icebp  
  422861:	mul    edx
  422863:	mov    esi,0x994e2fd8
  422868:	and    ebx,eax
  42286a:	mov    DWORD PTR [esi+esi*8-0x46370606],esi
  422871:	sbb    esp,DWORD PTR [ebx-0x78]
  422874:	push   cs
  422875:	inc    ebp
  422876:	in     al,0x21
  422878:	into   
  422879:	popf   
  42287a:	push   ecx
  42287b:	jg     0x422874
  42287d:	shl    DWORD PTR [edx],0xeb
  422880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422881:	cld    
  422882:	mov    ecx,0x12ae6346
  422887:	mov    eax,ds:0xd162d59c
  42288c:	pop    esp
  42288d:	je     0x4228ec
  42288f:	jmp    0x2f52:0x71f283d4
  422896:	arpl   WORD PTR [eax+0x6c92d076],si
  42289c:	add    BYTE PTR [edx-0x42e45cab],dl
  4228a2:	mov    eax,0x344e40fe
  4228a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228a8:	fist   DWORD PTR [ebx+0x339caf47]
  4228ae:	xor    dh,al
  4228b0:	xchg   edx,eax
  4228b1:	dec    edi
  4228b2:	sub    al,BYTE PTR ds:0x5f13d67f
  4228b8:	mov    ecx,0xf69d02c8
  4228bd:	frstor [edi-0x62]
  4228c0:	push   ebx
  4228c1:	popf   
  4228c2:	adc    edi,DWORD PTR fs:[esi+edi*4+0x60]
  4228c7:	retf   
  4228c8:	jae    0x422897
  4228ca:	rol    dh,0x12
  4228cd:	rol    BYTE PTR [edx],cl
  4228cf:	mov    ?,esp
  4228d1:	and    BYTE PTR [edi],0xf4
  4228d4:	les    ecx,FWORD PTR [ebp-0x29e7523a]
  4228da:	push   edi
  4228db:	(bad)  
  4228dc:	in     al,dx
  4228dd:	sahf   
  4228de:	(bad)  
  4228df:	mov    ebp,0x218ced72
  4228e4:	rcr    al,cl
  4228e6:	xchg   esi,eax
  4228e7:	cdq    
  4228e8:	sbb    dh,BYTE PTR [ebx]
  4228ea:	dec    esp
  4228eb:	hlt    
  4228ec:	add    esp,edi
  4228ee:	cmp    dh,ch
  4228f0:	cmp    al,0xdb
  4228f2:	aaa    
  4228f3:	aas    
  4228f4:	xchg   ecx,eax
  4228f5:	xchg   esi,eax
  4228f6:	and    ah,BYTE PTR [eax]
  4228f8:	out    0x5e,eax
  4228fa:	out    0xbc,al
  4228fc:	mov    ds:0x291179a7,eax
  422901:	dec    ebp
  422902:	(bad)
  422905:	(bad)  
  422907:	ins    BYTE PTR es:[edi],dx
  422908:	jmp    0x42288c
  42290a:	hlt    
  42290b:	stc    
  42290c:	aad    0x46
  42290e:	mov    ecx,0x45a80635
  422913:	cmp    edi,edi
  422915:	scas   al,BYTE PTR es:[edi]
  422916:	cli    
  422917:	je     0x422990
  422919:	push   eax
  42291a:	push   edi
  42291b:	cli    
  42291c:	mov    ebp,0x2843d4cf
  422921:	mov    esp,0xbe3adcf
  422926:	cmp    DWORD PTR cs:[edx],0x5c
  42292a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42292b:	fcmovbe st,st(3)
  42292d:	cmp    BYTE PTR [ecx+ebx*4-0x7d],ah
  422931:	push   es
  422932:	dec    eax
  422933:	mov    bl,al
  422935:	sub    edi,eax
  422937:	test   eax,0x4119f0d7
  42293c:	(bad)  
  42293d:	fidivr WORD PTR [esi]
  42293f:	ins    DWORD PTR es:[edi],dx
  422940:	mov    eax,ds:0xa95ff9c1
  422945:	dec    esp
  422946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422947:	jge    0x42291d
  422949:	jmp    0xe290:0x65249f98
  422950:	or     DWORD PTR [edx-0x38],ebp
  422953:	sbb    BYTE PTR [edx+0xe138ad1],ch
  422959:	push   DWORD PTR [ebx]
  42295b:	rol    BYTE PTR [ebx+0x10c210c4],0x0
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
