
965d43ae5dd1868327c54ce80c3b0a48a7a7a44c60f7dfbea5faa0c5cb85272e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sbb    ecx,0x40a3
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	mov    ecx,DWORD PTR ds:0x42a1b3
  401019:	adc    DWORD PTR ds:0x42a14f,ecx
  40101f:	push   esi
  401020:	push   edi
  401021:	and    DWORD PTR ds:0x42a183,0x0
  40102b:	jmp    0x40103d
  401030:	mov    edi,DWORD PTR ds:0x42a183
  401036:	inc    edi
  401037:	mov    DWORD PTR ds:0x42a183,edi
  40103d:	cmp    DWORD PTR ds:0x42a183,0x17
  401044:	jae    0x401067
  40104a:	cmp    DWORD PTR ds:0x42a183,0x1c
  401051:	ja     0x401067
  401057:	jmp    0x401062
  40105c:	call   DWORD PTR ds:0x42a293
  401062:	jmp    0x401030
  401067:	mov    esi,0x75108a8
  40106c:	mov    DWORD PTR ds:0x42a13f,0x1f
  401076:	cmp    DWORD PTR ds:0x42a13f,0x0
  40107d:	je     0x4010bf
  401083:	cmp    DWORD PTR ds:0x42a13f,0x2c
  40108a:	ja     0x4010bf
  401090:	jmp    0x4010ad
  401095:	push   DWORD PTR [ebp-0x1c]
  401098:	push   0x6c93
  40109d:	push   0x429093
  4010a2:	push   0x400000
  4010a7:	call   DWORD PTR ds:0x42a297
  4010ad:	mov    edi,DWORD PTR ds:0x42a13f
  4010b3:	dec    edi
  4010b4:	mov    DWORD PTR ds:0x42a13f,edi
  4010ba:	jmp    0x401076
  4010bf:	xor    eax,esi
  4010c1:	sbb    DWORD PTR ds:0x42a18f,0x4c4b
  4010cb:	mov    edi,0x3272ef
  4010d0:	and    DWORD PTR ds:0x42a13f,0x59cd
  4010da:	add    eax,edi
  4010dc:	mov    ecx,DWORD PTR ds:0x42a13b
  4010e2:	sbb    ecx,DWORD PTR ds:0x42a17b
  4010e8:	mov    DWORD PTR ds:0x42a13b,ecx
  4010ee:	mov    DWORD PTR [ebp-0x40],eax
  4010f1:	mov    DWORD PTR ds:0x42a167,0x1b
  4010fb:	cmp    DWORD PTR ds:0x42a167,0x0
  401102:	je     0x40114e
  401108:	cmp    DWORD PTR ds:0x42a167,0x3
  40110f:	jb     0x40114e
  401115:	jmp    0x401120
  40111a:	call   DWORD PTR ds:0x42a29b
  401120:	cmp    DWORD PTR ds:0x42a167,0x4
  401127:	jne    0x40113c
  40112d:	xor    ecx,ecx
  40112f:	add    ecx,DWORD PTR ds:0x42a167
  401135:	dec    ecx
  401136:	mov    DWORD PTR ds:0x42a167,ecx
  40113c:	mov    ecx,DWORD PTR ds:0x42a167
  401142:	dec    ecx
  401143:	mov    DWORD PTR ds:0x42a167,ecx
  401149:	jmp    0x4010fb
  40114e:	mov    eax,ds:0x4292af
  401153:	mov    eax,DWORD PTR [eax]
  401155:	xor    ecx,ecx
  401157:	or     ecx,DWORD PTR ds:0x42a27f
  40115d:	mov    ecx,DWORD PTR [ecx]
  40115f:	sbb    DWORD PTR ds:0x42a15f,ecx
  401165:	mov    DWORD PTR [ebp-0x3c],eax
  401168:	sub    ecx,0x5dee
  40116e:	mov    eax,ds:0x4294bf
  401173:	and    DWORD PTR ds:0x42a1b7,edx
  401179:	mov    eax,DWORD PTR [eax]
  40117b:	and    DWORD PTR ds:0x42a18f,0x0
  401185:	jmp    0x401197
  40118a:	mov    ecx,DWORD PTR ds:0x42a18f
  401190:	inc    ecx
  401191:	mov    DWORD PTR ds:0x42a18f,ecx
  401197:	cmp    DWORD PTR ds:0x42a18f,0x1d
  40119e:	jae    0x4011d3
  4011a4:	cmp    DWORD PTR ds:0x42a18f,0x22
  4011ab:	jg     0x4011d3
  4011b1:	jmp    0x4011ce
  4011b6:	push   DWORD PTR [ebp-0x10]
  4011b9:	push   0x1d13
  4011be:	push   0x42920b
  4011c3:	push   0x400000
  4011c8:	call   DWORD PTR ds:0x42a2a3
  4011ce:	jmp    0x40118a
  4011d3:	mov    DWORD PTR [ebp-0x1c],eax
  4011d6:	sub    ecx,eax
  4011d8:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  4011df:	mov    DWORD PTR ds:0x42a16b,0x4da
  4011e9:	mov    eax,DWORD PTR [ebp-0x34]
  4011ec:	dec    ecx
  4011ed:	xor    eax,esi
  4011ef:	xor    DWORD PTR ds:0x42a1a7,0x5e5b
  4011f9:	add    eax,edi
  4011fb:	add    DWORD PTR ds:0x42a16f,0x6276
  401205:	mov    DWORD PTR [ebp-0x40],eax
  401208:	and    DWORD PTR ds:0x42a147,0x0
  401212:	jmp    0x401226
  401217:	xor    ecx,ecx
  401219:	or     ecx,DWORD PTR ds:0x42a147
  40121f:	inc    ecx
  401220:	mov    DWORD PTR ds:0x42a147,ecx
  401226:	cmp    DWORD PTR ds:0x42a147,0x15
  40122d:	jae    0x401250
  401233:	cmp    DWORD PTR ds:0x42a147,0x19
  40123a:	jle    0x401250
  401240:	jmp    0x40124b
  401245:	call   DWORD PTR ds:0x42a2a7
  40124b:	jmp    0x401217
  401250:	mov    eax,ds:0x42942f
  401255:	mov    DWORD PTR [ebp-0x40],eax
  401258:	mov    eax,DWORD PTR [ebp-0x3c]
  40125b:	mov    DWORD PTR ds:0x42a18b,0x16
  401265:	cmp    DWORD PTR ds:0x42a18b,0x0
  40126c:	je     0x4012a7
  401272:	cmp    DWORD PTR ds:0x42a18b,0x20
  401279:	jg     0x4012a7
  40127f:	jmp    0x401295
  401284:	push   DWORD PTR [ebp-0x28]
  401287:	push   0x42a137
  40128c:	push   DWORD PTR [ebp-0x28]
  40128f:	call   DWORD PTR ds:0x42a2ab
  401295:	mov    ecx,DWORD PTR ds:0x42a18b
  40129b:	dec    ecx
  40129c:	mov    DWORD PTR ds:0x42a18b,ecx
  4012a2:	jmp    0x401265
  4012a7:	mov    DWORD PTR [ebp-0x14],eax
  4012aa:	sub    ecx,eax
  4012ac:	mov    eax,DWORD PTR [ebp-0x14]
  4012af:	push   0x4
  4012b1:	xor    ecx,ecx
  4012b3:	xor    ecx,DWORD PTR ds:0x42a1cb
  4012b9:	xor    DWORD PTR ds:0x42a143,ecx
  4012bf:	pop    ecx
  4012c0:	or     DWORD PTR ds:0x42a197,0x7ab3
  4012ca:	sub    ecx,eax
  4012cc:	add    DWORD PTR ds:0x42a13f,0x1333
  4012d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4012d9:	movzx  eax,BYTE PTR ds:0x42a187
  4012e0:	xor    DWORD PTR ds:0x42a14b,eax
  4012e6:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  4012ed:	mov    DWORD PTR [ebp-0x18],ecx
  4012f0:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  4012fa:	add    DWORD PTR ds:0x42a1b3,0x1736
  401304:	mov    eax,DWORD PTR [ebp-0x14]
  401307:	mov    DWORD PTR [ebp-0x9c],eax
  40130d:	and    DWORD PTR ds:0x42a1ab,0x0
  401317:	jmp    0x40132a
  40131c:	xor    eax,eax
  40131e:	xor    eax,DWORD PTR ds:0x42a1ab
  401324:	inc    eax
  401325:	mov    ds:0x42a1ab,eax
  40132a:	cmp    DWORD PTR ds:0x42a1ab,0x18
  401331:	jae    0x401364
  401337:	cmp    DWORD PTR ds:0x42a1ab,0x1e
  40133e:	jb     0x401364
  401344:	jmp    0x40135f
  401349:	push   0x8043
  40134e:	push   0x4a07
  401353:	push   DWORD PTR [ebp-0x24]
  401356:	push   DWORD PTR [ebp-0xc]
  401359:	call   DWORD PTR ds:0x42a2af
  40135f:	jmp    0x40131c
  401364:	mov    eax,DWORD PTR [ebp-0x18]
  401367:	xor    DWORD PTR ds:0x42a18f,0x63f7
  401371:	mov    DWORD PTR [ebp-0x98],eax
  401377:	mov    eax,DWORD PTR [ebp-0x2c]
  40137a:	sbb    DWORD PTR ds:0x42a18f,0x379e
  401384:	xor    eax,esi
  401386:	add    eax,edi
  401388:	mov    DWORD PTR [ebp-0x94],eax
  40138e:	or     DWORD PTR ds:0x42a16b,0x36f8
  401398:	lea    eax,[ebp-0x48]
  40139b:	mov    DWORD PTR [ebp-0x90],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0xa0]
  4013a7:	inc    DWORD PTR ds:0x42a18b
  4013ad:	xor    eax,esi
  4013af:	sbb    DWORD PTR ds:0x42a18b,0x42a177
  4013b9:	add    eax,edi
  4013bb:	or     DWORD PTR ds:0x42a19b,0x42a15b
  4013c5:	mov    DWORD PTR [ebp-0xa0],eax
  4013cb:	sub    DWORD PTR ds:0x42a143,0x1d49
  4013d5:	lea    eax,[ebp-0xa0]
  4013db:	push   eax
  4013dc:	neg    eax
  4013de:	mov    eax,DWORD PTR [ebp+0xc]
  4013e1:	sub    DWORD PTR ds:0x42a17b,0x2c11
  4013eb:	xor    eax,esi
  4013ed:	add    eax,edi
  4013ef:	push   eax
  4013f0:	mov    eax,ds:0x42944f
  4013f5:	push   0x4293a5
  4013fa:	mov    DWORD PTR ds:0x42a157,0x524d
  401404:	push   DWORD PTR [eax]
  401406:	call   0x40a8fb
  40140b:	xor    edx,edx
  40140d:	add    edx,DWORD PTR ds:0x42a16f
  401413:	and    DWORD PTR ds:0x42a15f,edx
  401419:	mov    ebx,DWORD PTR [ebp-0x14]
  40141c:	mov    eax,DWORD PTR [ebp-0x18]
  40141f:	mov    DWORD PTR [ebp-0x58],eax
  401422:	mov    eax,ds:0x42a1d7
  401427:	mov    edx,DWORD PTR ds:0x42a21f
  40142d:	sub    edx,eax
  40142f:	sub    eax,DWORD PTR [eax+edx*1]
  401432:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  401439:	mov    eax,0xf89c85bb
  40143e:	mov    DWORD PTR [ebp-0x1c],eax
  401441:	xor    DWORD PTR ds:0x42a157,0x37ec
  40144b:	lea    ecx,[eax-0x2]
  40144e:	and    DWORD PTR ds:0x42a1b3,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42a1b3
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42a1b3,edx
  40146a:	cmp    DWORD PTR ds:0x42a1b3,0x18
  401471:	jae    0x4014be
  401477:	cmp    DWORD PTR ds:0x42a1b3,0x4
  40147e:	jge    0x4014be
  401484:	jmp    0x40149f
  401489:	push   DWORD PTR [ebp-0x18]
  40148c:	push   DWORD PTR [ebp-0x14]
  40148f:	push   0x42a1af
  401494:	push   0x249d
  401499:	call   DWORD PTR ds:0x42a2b3
  40149f:	cmp    DWORD PTR ds:0x42a1b3,0x3
  4014a6:	jne    0x4014b9
  4014ac:	mov    edx,DWORD PTR ds:0x42a1b3
  4014b2:	inc    edx
  4014b3:	mov    DWORD PTR ds:0x42a1b3,edx
  4014b9:	jmp    0x40145d
  4014be:	mov    DWORD PTR [ebp-0x28],ecx
  4014c1:	movzx  edx,WORD PTR ds:0x42a173
  4014c8:	sbb    DWORD PTR ds:0x42a157,edx
  4014ce:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4014d5:	mov    DWORD PTR [ebp-0x8],eax
  4014d8:	mov    eax,DWORD PTR [ebp-0x10]
  4014db:	xor    eax,esi
  4014dd:	and    DWORD PTR ds:0x42a14f,0x0
  4014e7:	jmp    0x4014fb
  4014ec:	xor    edx,edx
  4014ee:	or     edx,DWORD PTR ds:0x42a14f
  4014f4:	inc    edx
  4014f5:	mov    DWORD PTR ds:0x42a14f,edx
  4014fb:	cmp    DWORD PTR ds:0x42a14f,0x18
  401502:	jae    0x401551
  401508:	cmp    DWORD PTR ds:0x42a14f,0x5
  40150f:	jb     0x401551
  401515:	jmp    0x401532
  40151a:	push   0x42a167
  40151f:	push   DWORD PTR [ebp-0xc]
  401522:	push   0x4290bb
  401527:	push   0x429032
  40152c:	call   DWORD PTR ds:0x42a2b7
  401532:	cmp    DWORD PTR ds:0x42a14f,0x4
  401539:	jne    0x40154c
  40153f:	mov    edx,DWORD PTR ds:0x42a14f
  401545:	inc    edx
  401546:	mov    DWORD PTR ds:0x42a14f,edx
  40154c:	jmp    0x4014ec
  401551:	mov    edx,0xffcd8d91
  401556:	or     DWORD PTR ds:0x42a137,0x42a15b
  401560:	sub    edx,eax
  401562:	not    eax
  401564:	mov    DWORD PTR [ebp-0xc],edx
  401567:	mov    DWORD PTR ds:0x42a19f,0x2809
  401571:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401578:	mov    DWORD PTR ds:0x42a13b,ecx
  40157e:	mov    eax,DWORD PTR [ebp-0x8]
  401581:	mov    DWORD PTR ds:0x42a193,0x7f63
  40158b:	mov    DWORD PTR [ebp-0x3c],ebx
  40158e:	mov    DWORD PTR ds:0x42a193,0x4784
  401598:	cmp    eax,ecx
  40159a:	mov    DWORD PTR ds:0x42a1d3,0x12a
  4015a4:	je     0x40185b
  4015aa:	and    eax,ecx
  4015ac:	mov    eax,DWORD PTR [ebp-0x10]
  4015af:	and    DWORD PTR ds:0x42a163,0x0
  4015b9:	jmp    0x4015cb
  4015be:	mov    ecx,DWORD PTR ds:0x42a163
  4015c4:	inc    ecx
  4015c5:	mov    DWORD PTR ds:0x42a163,ecx
  4015cb:	cmp    DWORD PTR ds:0x42a163,0x10
  4015d2:	jae    0x401614
  4015d8:	cmp    DWORD PTR ds:0x42a163,0x6
  4015df:	jbe    0x401614
  4015e5:	jmp    0x4015f5
  4015ea:	push   0x4c56
  4015ef:	call   DWORD PTR ds:0x42a2bf
  4015f5:	cmp    DWORD PTR ds:0x42a163,0x5
  4015fc:	jne    0x40160f
  401602:	mov    ecx,DWORD PTR ds:0x42a163
  401608:	inc    ecx
  401609:	mov    DWORD PTR ds:0x42a163,ecx
  40160f:	jmp    0x4015be
  401614:	mov    ecx,DWORD PTR [ebp-0x10]
  401617:	sbb    DWORD PTR ds:0x42a13f,0x6da3
  401621:	xor    eax,esi
  401623:	xor    ecx,esi
  401625:	or     DWORD PTR ds:0x42a193,0x42a197
  40162f:	lea    ecx,[eax+ecx*1+0x64e5de]
  401636:	xor    eax,DWORD PTR ds:0x42a1c7
  40163c:	mov    eax,DWORD PTR [ebp-0xc]
  40163f:	xor    edx,edx
  401641:	div    ecx
  401643:	sub    ecx,eax
  401645:	mov    eax,DWORD PTR [ebp-0x8]
  401648:	mov    ecx,DWORD PTR [ebp-0x10]
  40164b:	sbb    DWORD PTR ds:0x42a18f,0x52cd
  401655:	xor    eax,esi
  401657:	xor    ecx,esi
  401659:	sub    eax,ecx
  40165b:	cmp    edx,eax
  40165d:	mov    DWORD PTR ds:0x42a15b,0x4928
  401667:	jne    0x401805
  40166d:	add    DWORD PTR ds:0x42a1ab,edi
  401673:	mov    eax,DWORD PTR [ebp-0xc]
  401676:	add    DWORD PTR ds:0x42a17b,ebx
  40167c:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  401683:	mov    eax,DWORD PTR [ebp-0x28]
  401686:	xor    DWORD PTR ds:0x42a16f,0x3725
  401690:	mov    ecx,DWORD PTR [ebp-0x18]
  401693:	add    DWORD PTR ds:0x42a13f,0x6412
  40169d:	xor    eax,esi
  40169f:	xor    ecx,esi
  4016a1:	add    eax,edi
  4016a3:	xor    DWORD PTR ds:0x42a15f,0x42a18b
  4016ad:	add    ecx,edi
  4016af:	mov    BYTE PTR [ebp-0x21],dl
  4016b2:	cmp    eax,ecx
  4016b4:	jae    0x4017dd
  4016ba:	lea    ecx,[eax-0x3272ef]
  4016c0:	mov    DWORD PTR ds:0x42a183,0x1c
  4016ca:	cmp    DWORD PTR ds:0x42a183,0x0
  4016d1:	je     0x401709
  4016d7:	cmp    DWORD PTR ds:0x42a183,0x23
  4016de:	jg     0x401709
  4016e4:	jmp    0x4016f7
  4016e9:	push   DWORD PTR [ebp-0x20]
  4016ec:	push   0x5db4
  4016f1:	call   DWORD PTR ds:0x42a2c3
  4016f7:	mov    edx,DWORD PTR ds:0x42a183
  4016fd:	dec    edx
  4016fe:	mov    DWORD PTR ds:0x42a183,edx
  401704:	jmp    0x4016ca
  401709:	mov    DWORD PTR [ebp-0x14],ecx
  40170c:	xor    DWORD PTR ds:0x42a1af,ecx
  401712:	mov    edx,DWORD PTR [ebp-0x14]
  401715:	xor    edx,esi
  401717:	add    edx,0x7f55d8fb
  40171d:	mov    DWORD PTR ds:0x42a14b,0x52dc
  401727:	lea    ecx,[ebp+eax*4-0xb4]
  40172e:	mov    DWORD PTR ds:0x42a16b,0x1786
  401738:	mov    DWORD PTR [ecx],edx
  40173a:	not    edx
  40173c:	mov    edx,DWORD PTR [ecx]
  40173e:	mov    DWORD PTR ds:0x42a13f,0x42a6
  401748:	cmp    edx,0x244ecb9c
  40174e:	mov    DWORD PTR ds:0x42a187,0x6943
  401758:	jbe    0x40177d
  40175e:	add    DWORD PTR ds:0x42a147,0x3ac8
  401768:	add    DWORD PTR [ecx],0x405fcdd
  40176e:	mov    DWORD PTR ds:0x42a17b,0x6763
  401778:	jmp    0x40178d
  40177d:	add    DWORD PTR ds:0x42a12b,0x42a18b
  401787:	add    DWORD PTR [ecx],0xfdaf4323
  40178d:	sub    ecx,0x38f7
  401793:	mov    ecx,DWORD PTR [ebp-0x18]
  401796:	xor    DWORD PTR ds:0x42a1a3,0x8c7
  4017a0:	xor    ecx,esi
  4017a2:	dec    DWORD PTR ds:0x42a137
  4017a8:	inc    eax
  4017a9:	sbb    DWORD PTR ds:0x42a1ab,0x42a1bb
  4017b3:	inc    DWORD PTR [ebp-0x14]
  4017b6:	add    DWORD PTR ds:0x42a1cf,0x42a16f
  4017c0:	add    ecx,edi
  4017c2:	cmp    eax,ecx
  4017c4:	mov    DWORD PTR ds:0x42a1af,0x74e1
  4017ce:	jb     0x40170c
  4017d4:	not    DWORD PTR ds:0x42a18b
  4017da:	mov    dl,BYTE PTR [ebp-0x21]
  4017dd:	xor    DWORD PTR ds:0x42a12f,edi
  4017e3:	mov    eax,DWORD PTR [ebp-0x34]
  4017e6:	xor    al,0xa8
  4017e8:	mov    cl,0x11
  4017ea:	sub    cl,al
  4017ec:	add    dl,cl
  4017ee:	mov    ecx,DWORD PTR [ebp-0x1c]
  4017f1:	xor    cl,0xa8
  4017f4:	sub    cl,0x11
  4017f7:	ror    dl,cl
  4017f9:	xor    eax,eax
  4017fb:	mov    eax,DWORD PTR [ebp-0xc]
  4017fe:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401805:	mov    eax,DWORD PTR [ebp-0xc]
  401808:	mov    ecx,DWORD PTR [ebp-0x28]
  40180b:	sub    eax,edi
  40180d:	xor    eax,esi
  40180f:	cmp    eax,ecx
  401811:	jne    0x40183b
  401817:	mov    eax,DWORD PTR [ebp-0x8]
  40181a:	mov    ecx,DWORD PTR [ebp-0x10]
  40181d:	xor    eax,esi
  40181f:	xor    ecx,esi
  401821:	sub    eax,ecx
  401823:	sub    eax,edi
  401825:	xor    eax,esi
  401827:	mov    DWORD PTR [ebp-0x8],eax
  40182a:	mov    eax,DWORD PTR [ebp-0x10]
  40182d:	xor    eax,esi
  40182f:	mov    ecx,0xffcd8d91
  401834:	sub    ecx,eax
  401836:	jmp    0x40184a
  40183b:	mov    eax,DWORD PTR [ebp-0x10]
  40183e:	xor    eax,esi
  401840:	mov    ecx,0xffcd8d11
  401845:	sub    ecx,eax
  401847:	add    ecx,DWORD PTR [ebp-0xc]
  40184a:	mov    DWORD PTR [ebp-0xc],ecx
  40184d:	mov    eax,DWORD PTR [ebp-0x8]
  401850:	cmp    eax,0xf89c85b9
  401855:	jne    0x4015aa
  40185b:	mov    DWORD PTR [ebp-0x34],0x9
  401862:	mov    ecx,DWORD PTR [ebp+0x8]
  401865:	xor    ecx,esi
  401867:	add    ecx,edi
  401869:	jmp    0x40a889
  40186e:	lea    eax,[ecx+ebx*1]
  401871:	mov    DWORD PTR [ebp-0x2c],eax
  401874:	mov    eax,DWORD PTR [ebp-0x58]
  401877:	sub    eax,ecx
  401879:	mov    DWORD PTR [ebp-0x1c],eax
  40187c:	mov    eax,DWORD PTR [ebp-0x1c]
  40187f:	mov    DWORD PTR [ebp-0x14],eax
  401882:	mov    eax,DWORD PTR [ebp-0x2c]
  401885:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  40188c:	mov    DWORD PTR [ebp-0x54],eax
  40188f:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  401896:	mov    eax,DWORD PTR [ebp-0x38]
  401899:	xor    eax,esi
  40189b:	add    eax,edi
  40189d:	mov    DWORD PTR [ebp-0x10],eax
  4018a0:	mov    eax,DWORD PTR [ebp-0x38]
  4018a3:	xor    eax,esi
  4018a5:	add    eax,edi
  4018a7:	mov    DWORD PTR [ebp-0x8],eax
  4018aa:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  4018b1:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  4018b8:	mov    eax,DWORD PTR [ebp-0x38]
  4018bb:	mov    edx,DWORD PTR [ebp-0x14]
  4018be:	xor    eax,esi
  4018c0:	add    eax,edi
  4018c2:	cmp    edx,eax
  4018c4:	je     0x40a87d
  4018ca:	mov    eax,DWORD PTR [ebp-0x20]
  4018cd:	xor    eax,esi
  4018cf:	mov    edx,0xffcd8d11
  4018d4:	sub    edx,eax
  4018d6:	add    edx,DWORD PTR [ebp-0x14]
  4018d9:	mov    eax,DWORD PTR [ebp-0x20]
  4018dc:	mov    ebx,DWORD PTR [ebp-0x10]
  4018df:	xor    eax,esi
  4018e1:	add    eax,edi
  4018e3:	imul   eax,ebx
  4018e6:	cmp    eax,edx
  4018e8:	ja     0x40a87a
  4018ee:	mov    edx,DWORD PTR [ebp-0x10]
  4018f1:	mov    eax,DWORD PTR [ebp-0x14]
  4018f4:	mov    ebx,DWORD PTR [ebp-0x2c]
  4018f7:	sub    eax,edx
  4018f9:	xor    ebx,esi
  4018fb:	xor    edx,edx
  4018fd:	add    ebx,edi
  4018ff:	div    ebx
  401901:	mov    DWORD PTR [ebp-0x8],eax
  401904:	mov    eax,DWORD PTR [ebp-0x44]
  401907:	mov    edx,DWORD PTR [ebp-0x8]
  40190a:	xor    eax,esi
  40190c:	add    eax,edi
  40190e:	cmp    edx,eax
  401910:	jbe    0x401920
  401916:	mov    eax,DWORD PTR [ebp-0x44]
  401919:	xor    eax,esi
  40191b:	add    eax,edi
  40191d:	mov    DWORD PTR [ebp-0x8],eax
  401920:	mov    eax,DWORD PTR [ebp-0x2c]
  401923:	mov    edx,DWORD PTR [ebp-0x8]
  401926:	xor    eax,esi
  401928:	add    eax,edi
  40192a:	imul   eax,edx
  40192d:	mov    DWORD PTR [ebp-0x8],eax
  401930:	mov    eax,DWORD PTR [ebp-0x38]
  401933:	mov    edx,DWORD PTR [ebp-0x8]
  401936:	xor    eax,esi
  401938:	add    eax,edi
  40193a:	cmp    edx,eax
  40193c:	je     0x40a863
  401942:	mov    eax,DWORD PTR [ebp-0x8]
  401945:	mov    DWORD PTR [ebp-0x18],eax
  401948:	mov    eax,DWORD PTR [ebp-0x10]
  40194b:	add    eax,DWORD PTR [ebp-0x54]
  40194e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  401955:	mov    DWORD PTR [ebp-0x8],eax
  401958:	mov    eax,0xf89c85ba
  40195d:	mov    DWORD PTR [ebp-0x28],eax
  401960:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  401967:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  40196e:	mov    DWORD PTR [ebp-0x30],eax
  401971:	mov    eax,DWORD PTR [ebp-0x1c]
  401974:	xor    eax,esi
  401976:	add    eax,edi
  401978:	jmp    0x40613f
  40197d:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  401984:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40198b:	mov    eax,DWORD PTR [ebp-0x30]
  40198e:	mov    edx,DWORD PTR [ebp-0xc]
  401991:	xor    eax,esi
  401993:	add    eax,edi
  401995:	imul   eax,edx
  401998:	mov    edx,DWORD PTR [ebp-0x8]
  40199b:	mov    al,BYTE PTR [eax+edx*1]
  40199e:	mov    BYTE PTR [ebp-0x1],al
  4019a1:	mov    eax,DWORD PTR [ebp-0x30]
  4019a4:	mov    edx,DWORD PTR [ebp-0xc]
  4019a7:	xor    eax,esi
  4019a9:	add    eax,edi
  4019ab:	imul   eax,edx
  4019ae:	mov    edx,DWORD PTR [ebp-0x5c]
  4019b1:	xor    edx,esi
  4019b3:	add    eax,edx
  4019b5:	mov    edx,DWORD PTR [ebp-0x8]
  4019b8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  4019c0:	mov    edx,DWORD PTR [ebp-0x4c]
  4019c3:	xor    edx,esi
  4019c5:	lea    eax,[edx+eax*1+0x3272ef]
  4019cc:	movzx  edx,BYTE PTR [ebp-0x1]
  4019d0:	xor    edx,eax
  4019d2:	mov    BYTE PTR [ebp-0x1],dl
  4019d5:	mov    al,BYTE PTR [ebp-0x1]
  4019d8:	mov    edx,DWORD PTR [ebp-0x30]
  4019db:	mov    ebx,DWORD PTR [ebp-0xc]
  4019de:	xor    edx,esi
  4019e0:	add    edx,edi
  4019e2:	jmp    0x403d52
  4019e7:	and    ebx,DWORD PTR [eax-0x16]
  4019ea:	daa    
  4019eb:	lea    eax,[edi+0x3005549b]
  4019f1:	repz shl DWORD PTR [ebp-0x67],1
  4019f5:	out    dx,eax
  4019f6:	addr16 jp 0x401a73
  4019f9:	jp     0x401a75
  4019fb:	das    
  4019fc:	pop    edi
  4019fd:	jp     0x401a79
  4019ff:	and    DWORD PTR [eax],ebp
  401a01:	daa    
  401a02:	cmp    eax,0x2f1b3125
  401a07:	jno    0x401a43
  401a09:	jne    0x401a81
  401a0b:	aad    0x77
  401a0d:	push   0x6a
  401a0f:	imul   eax,DWORD PTR [edx-0x2f],0x546cfdd8
  401a16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  401a1a:	jl     0x401a85
  401a1c:	gs iret 
  401a1e:	pop    ecx
  401a1f:	dec    edx
  401a20:	cmp    al,0x88
  401a22:	cli    
  401a23:	xchg   edi,eax
  401a24:	xchg   BYTE PTR [edi+0x49],ah
  401a27:	jg     0x401a70
  401a29:	mov    WORD PTR [esi+0x3bb2bc7f],?
  401a2f:	sub    bh,bh
  401a31:	jbe    0x401a0b
  401a33:	cli    
  401a34:	arpl   WORD PTR [edi+0x1e],di
  401a37:	jmp    0xe9fae381
  401a3c:	xchg   edi,eax
  401a3d:	and    ebx,esi
  401a3f:	mov    esi,DWORD PTR ds:0x8aab650f
  401a45:	rol    BYTE PTR [edi],1
  401a47:	imul   ebx,ecx,0xfa0ee010
  401a4d:	ss and al,0x54
  401a50:	or     BYTE PTR [esi],dh
  401a52:	imul   esi,DWORD PTR [ebp+eax*8-0x51],0x23
  401a57:	pop    ebp
  401a58:	adc    DWORD PTR [esi+0x2b55f5ff],esi
  401a5e:	add    BYTE PTR [edx-0x2c],0x5b
  401a62:	add    eax,0xbd84fa1a
  401a67:	jae    0x401a42
  401a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a6a:	pop    edi
  401a6b:	mov    edi,DWORD PTR [ebp+0x4d922017]
  401a71:	add    ebx,DWORD PTR [esi+0xb838238]
  401a77:	fisubr DWORD PTR [ecx]
  401a79:	bound  ecx,QWORD PTR [ecx-0xc9fbcc0]
  401a7f:	iret   
  401a80:	mov    dh,BYTE PTR ds:0xc8c7cc95
  401a86:	xchg   esp,eax
  401a87:	ins    DWORD PTR es:[edi],dx
  401a88:	lock push ecx
  401a8a:	bound  ecx,QWORD PTR [eax+0x8]
  401a8d:	add    eax,DWORD PTR ds:[esi+0x13]
  401a91:	test   eax,0x4cb7ca4b
  401a96:	fcom   QWORD PTR [eax]
  401a98:	data16 stc 
  401a9a:	bound  esp,QWORD PTR [esi-0x4f]
  401a9d:	add    eax,0x5204bf74
  401aa2:	and    eax,0x665815fa
  401aa7:	stos   DWORD PTR es:[edi],eax
  401aa8:	and    eax,0xb2f3e1b6
  401aad:	or     ebp,esp
  401aaf:	adc    eax,0x289449df
  401ab4:	push   cs
  401ab5:	psraw  mm7,QWORD PTR [esi]
  401ab8:	xchg   ecx,eax
  401ab9:	push   esi
  401aba:	rol    DWORD PTR [ebx],1
  401abc:	inc    ebx
  401abd:	add    edi,esp
  401abf:	stc    
  401ac0:	xlat   BYTE PTR ds:[ebx]
  401ac1:	and    edi,DWORD PTR [eax]
  401ac3:	mov    WORD PTR [eax],fs
  401ac5:	fs stos DWORD PTR es:[edi],eax
  401ac7:	and    esp,DWORD PTR [ecx]
  401ac9:	cmp    eax,0x4c44142d
  401ace:	adc    cl,BYTE PTR [ebp+0x23ed220e]
  401ad4:	inc    eax
  401ad5:	ja     0x401a82
  401ad7:	ins    DWORD PTR es:[edi],dx
  401ad8:	cmp    BYTE PTR [edi+0x4862d91a],bl
  401ade:	and    ebx,DWORD PTR cs:[ecx+edi*1+0x7d8b51e0]
  401ae6:	rol    DWORD PTR gs:[eax-0x71],1
  401aea:	clc    
  401aeb:	sub    BYTE PTR [eax-0x17b14510],al
  401af1:	scas   al,BYTE PTR es:[edi]
  401af2:	mov    WORD PTR [edi-0x1002e373],?
  401af8:	cmp    esi,0xffffff92
  401afb:	mov    eax,ds:0x99a1a60e
  401b00:	out    0xe3,al
  401b02:	rcl    DWORD PTR [edx-0x1eb9e26d],cl
  401b08:	xchg   ebp,eax
  401b09:	jmp    0x401aa9
  401b0b:	cmove  esp,DWORD PTR [eax-0x16]
  401b0f:	cmp    BYTE PTR [ebx-0x30],0xe
  401b13:	hlt    
  401b14:	lahf   
  401b15:	inc    edx
  401b16:	(bad)  
  401b17:	(bad)  
  401b19:	adc    al,BYTE PTR [edi]
  401b1b:	or     eax,DWORD PTR [ecx+0x57a6e929]
  401b21:	arpl   di,bp
  401b23:	call   0x923a18d5
  401b28:	(bad)  
  401b29:	stos   DWORD PTR es:[edi],eax
  401b2a:	mov    eax,ds:0xb5f93c48
  401b2f:	ret    
  401b30:	dec    DWORD PTR [esi]
  401b32:	imul   eax,DWORD PTR [esi+esi*4-0x6857720a],0x81db5b28
  401b3d:	imul   ebp,DWORD PTR [edx-0x80],0xffffffeb
  401b41:	pushf  
  401b42:	leave  
  401b43:	adc    DWORD PTR ds:0x9f6f0edf,ebp
  401b49:	clc    
  401b4a:	mov    esp,0x7de1c311
  401b4f:	data16 stc 
  401b51:	xor    ah,0x3e
  401b54:	clc    
  401b55:	adc    al,0xd
  401b57:	scas   al,BYTE PTR es:[edi]
  401b58:	mov    esp,0x782a7eb4
  401b5d:	cli    
  401b5e:	ins    DWORD PTR es:[edi],dx
  401b5f:	mov    esi,0x9375fc11
  401b64:	jl     0x401b63
  401b66:	jle    0x401b76
  401b68:	adc    eax,0xdd265a4
  401b6d:	dec    edi
  401b6e:	jl     0x401b80
  401b70:	xor    ch,al
  401b72:	mov    ah,0x49
  401b74:	test   esp,esi
  401b76:	cmp    eax,0x6a0d9771
  401b7b:	lahf   
  401b7c:	cmp    DWORD PTR [eax+esi*8-0x55],edi
  401b80:	sub    BYTE PTR [edx-0x3a461462],ah
  401b86:	jp     0x401b2d
  401b88:	sbb    eax,0xbcba0b14
  401b8d:	cmp    al,BYTE PTR [edx]
  401b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b91:	add    eax,0x403e6481
  401b96:	jp     0x401b35
  401b98:	sbb    eax,0x91d186ad
  401b9d:	mov    ah,0xa
  401b9f:	jmp    0x890a:0x2adf609b
  401ba6:	pop    ecx
  401ba7:	in     al,0xde
  401ba9:	jne    0x401b53
  401bab:	js     0x401c05
  401bad:	test   ecx,eax
  401baf:	(bad)  
  401bb0:	icebp  
  401bb1:	push   cs
  401bb2:	popa   
  401bb3:	inc    edi
  401bb4:	int3   
  401bb5:	mov    bl,0xb5
  401bb7:	inc    esp
  401bb8:	adc    esi,DWORD PTR [edx]
  401bba:	mov    eax,0x5b0f2d89
  401bbf:	ja     0x401b84
  401bc1:	test   al,0x59
  401bc3:	push   ebx
  401bc4:	push   ebx
  401bc5:	push   esi
  401bc6:	lea    ecx,[ebx]
  401bc8:	adc    DWORD PTR [eax+0x6],ecx
  401bcb:	enter  0x8ace,0x9f
  401bcf:	popa   
  401bd0:	add    ecx,DWORD PTR [ecx+0x5ecb9ca]
  401bd6:	imul   BYTE PTR [esi+0x76b44a72]
  401bdc:	add    cl,BYTE PTR [edi+edi*8-0x3dfb2030]
  401be3:	push   ds
  401be4:	push   esi
  401be5:	dec    edx
  401be6:	or     ecx,esp
  401be8:	sbb    bl,ch
  401bea:	imul   esi,DWORD PTR [esi],0xffffff98
  401bed:	or     BYTE PTR [ecx],ah
  401bef:	fs pop esp
  401bf1:	inc    edi
  401bf2:	sbb    ebp,DWORD PTR [ebx+edx*2]
  401bf5:	or     esp,DWORD PTR [esp+edi*2+0x409ae8cf]
  401bfc:	jl     0x401c69
  401bfe:	arpl   WORD PTR [ecx],cx
  401c00:	in     eax,dx
  401c01:	retf   
  401c02:	inc    ebp
  401c03:	imul   ecx,edi,0xf8cf4fca
  401c09:	xor    esp,DWORD PTR [ecx-0x7a]
  401c0c:	arpl   ax,bx
  401c0e:	push   eax
  401c0f:	test   al,0x53
  401c11:	sbb    eax,0xee8840d3
  401c16:	int3   
  401c17:	add    cl,BYTE PTR [ebp-0x45]
  401c1a:	mov    fs,WORD PTR [edx+0x75]
  401c1d:	gs xor eax,0xd4f3a406
  401c23:	in     eax,dx
  401c24:	repnz add al,BYTE PTR [ebx]
  401c27:	xchg   esp,eax
  401c28:	sub    bh,bl
  401c2a:	in     eax,dx
  401c2b:	push   0xfffffff3
  401c2d:	dec    esi
  401c2e:	push   ecx
  401c2f:	mov    ch,0x8
  401c31:	inc    esp
  401c32:	addr16 jo 0x401c02
  401c35:	les    esi,FWORD PTR [edi+ecx*8]
  401c38:	shl    DWORD PTR [ebp+ecx*2+0x6a],0xd5
  401c3d:	inc    esi
  401c3e:	cmp    al,0xf3
  401c40:	enter  0xa47a,0x68
  401c44:	sbb    ebp,ecx
  401c46:	or     al,ch
  401c48:	imul   ebp,DWORD PTR [esi],0x2c
  401c4b:	mov    edx,DWORD PTR [ebp-0x41f59eec]
  401c51:	and    edx,ebx
  401c53:	dec    edi
  401c54:	fwait
  401c55:	inc    eax
  401c56:	into   
  401c57:	pushf  
  401c58:	push   ebp
  401c59:	std    
  401c5a:	xchg   ebx,eax
  401c5b:	icebp  
  401c5c:	popa   
  401c5d:	addr16 inc esi
  401c5f:	es inc ecx
  401c61:	cmp    edx,ecx
  401c63:	repnz imul dl
  401c66:	aaa    
  401c67:	je     0x401cdb
  401c69:	cmp    DWORD PTR [ebx-0x7d],eax
  401c6c:	sbb    al,0x8f
  401c6e:	push   edi
  401c6f:	shl    DWORD PTR [eax+0x32ba452c],0x96
  401c76:	xchg   edi,eax
  401c77:	(bad)  
  401c78:	xchg   esi,eax
  401c79:	(bad)  
  401c7a:	adc    ebp,eax
  401c7c:	inc    ebx
  401c7d:	jmp    0x9630:0xee3ec4c6
  401c84:	cmp    eax,0xa92286c0
  401c89:	xor    cl,dl
  401c8b:	push   es
  401c8c:	imul   edx,DWORD PTR [ebp-0x2d69e06],0xc07eea7f
  401c96:	inc    DWORD PTR [edi-0x53]
  401c99:	stos   BYTE PTR es:[edi],al
  401c9a:	pop    ebp
  401c9c:	jb     0x401caf
  401c9e:	enter  0x44d4,0xc3
  401ca2:	mov    al,0xd5
  401ca4:	aas    
  401ca5:	adc    BYTE PTR [ecx+0x4771ffef],dl
  401cab:	shl    eax,0xc1
  401cae:	lock or DWORD PTR [eax+0x42],ebp
  401cb2:	ss xor al,0x1b
  401cb5:	or     eax,0xaf9d732a
  401cba:	ja     0x401c7d
  401cbc:	and    ah,BYTE PTR [ebp+0x6d]
  401cbf:	mov    ebx,0x653b4bce
  401cc4:	mov    dl,0xc0
  401cc6:	test   DWORD PTR [ebp-0x1b],edi
  401cc9:	sahf   
  401cca:	push   ebp
  401ccb:	and    al,0x95
  401ccd:	sub    DWORD PTR [edx+0x52f441b8],0x14
  401cd4:	clc    
  401cd5:	pusha  
  401cd6:	retf   0x92bf
  401cd9:	jb     0x401cc8
  401cdb:	inc    ebx
  401cdc:	mov    dh,0xe0
  401cde:	pop    ebx
  401cdf:	adc    cl,bh
  401ce1:	mov    cl,0x9
  401ce3:	je     0x401c81
  401ce5:	add    eax,0x71a59573
  401cea:	push   es
  401ceb:	ret    
  401cec:	jns    0x401cf4
  401cee:	pushf  
  401cef:	aad    0x27
  401cf1:	call   0x9fb24e06
  401cf6:	push   esi
  401cf7:	add    DWORD PTR [edi+0x4e],0xffffff88
  401cfb:	jmp    0xe3ab:0x36bf8b2e
  401d02:	xchg   ebp,eax
  401d03:	push   ebp
  401d04:	in     al,0x3b
  401d06:	or     al,BYTE PTR [edx-0x77]
  401d09:	sbb    al,0x8c
  401d0b:	mov    ebp,0x660d9502
  401d10:	int3   
  401d11:	pop    ebx
  401d12:	mov    ds:0x1a82408,al
  401d17:	mov    ds,WORD PTR [ecx]
  401d19:	shl    DWORD PTR [eax+0x777c84d],0xd8
  401d20:	in     eax,dx
  401d21:	xchg   ebx,eax
  401d22:	nop
  401d23:	jmp    0x401d76
  401d25:	inc    edx
  401d26:	push   edi
  401d27:	jle    0x401caa
  401d29:	outs   dx,DWORD PTR ds:[esi]
  401d2a:	pop    ecx
  401d2b:	in     eax,dx
  401d2c:	mov    edi,0x149672a8
  401d31:	mov    al,0xff
  401d33:	pop    esi
  401d34:	jb     0x401cf3
  401d36:	jns    0x401cce
  401d38:	in     eax,dx
  401d39:	arpl   WORD PTR [ebp-0x5],bp
  401d3c:	pop    ebp
  401d3d:	dec    esp
  401d3e:	xlat   BYTE PTR ds:[ebx]
  401d3f:	(bad)  
  401d40:	nop
  401d41:	lahf   
  401d42:	dec    esp
  401d43:	(bad)  
  401d44:	fst    QWORD PTR [eax-0x41]
  401d47:	and    al,BYTE PTR [esi+0x0]
  401d4a:	sbb    esp,DWORD PTR [ebx]
  401d4c:	and    al,0xf5
  401d4e:	xor    ebp,DWORD PTR [eax+edi*2+0x1d]
  401d52:	in     al,0x50
  401d54:	pop    edi
  401d55:	mov    eax,ds:0x4ef516a3
  401d5a:	loopne 0x401d3a
  401d5c:	(bad)  
  401d5d:	mov    ecx,0xfee05274
  401d62:	daa    
  401d63:	stc    
  401d64:	mov    bl,0xb0
  401d66:	xchg   esi,eax
  401d67:	iret   
  401d68:	cmc    
  401d69:	push   esi
  401d6a:	fst    DWORD PTR [eax-0x73]
  401d6d:	dec    esp
  401d6e:	loope  0x401d68
  401d70:	daa    
  401d71:	xchg   edi,eax
  401d72:	pushf  
  401d73:	ds loope 0x401df3
  401d76:	rcl    DWORD PTR [esi],0x84
  401d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d7a:	out    dx,al
  401d7b:	push   edi
  401d7c:	adc    ch,BYTE PTR [ebx]
  401d7e:	cld    
  401d7f:	dec    ecx
  401d80:	mov    bl,BYTE PTR [eax]
  401d82:	sub    eax,0xa07c1155
  401d87:	push   ecx
  401d88:	mov    eax,ds:0xf2027c27
  401d8d:	mov    ds:0x1e289d98,al
  401d92:	outs   dx,DWORD PTR ds:[esi]
  401d93:	xor    eax,0x9c229ae3
  401d98:	pop    ds
  401d99:	xlat   BYTE PTR ds:[ebx]
  401d9a:	jbe    0x401e02
  401d9c:	inc    ebp
  401d9d:	repnz adc esi,edi
  401da0:	enter  0x7695,0x64
  401da4:	mov    BYTE PTR [eax-0x67e786ea],al
  401daa:	adc    DWORD PTR [eax],0xffffff85
  401dad:	or     bl,BYTE PTR [esi+0x2d6ec24a]
  401db3:	jp     0x401d50
  401db5:	fidivr DWORD PTR [eax+0xad74de6]
  401dbb:	adc    BYTE PTR [ebp+0xc],ah
  401dbe:	sub    DWORD PTR [ebx],esp
  401dc0:	jmp    0xac68:0xc25ec06a
  401dc7:	xchg   edi,eax
  401dc8:	dec    ecx
  401dc9:	(bad)  
  401dcc:	cmp    al,ah
  401dce:	xchg   ecx,eax
  401dcf:	hlt    
  401dd0:	fimul  DWORD PTR [edx+0x44]
  401dd3:	and    edi,DWORD PTR [ebx+edx*8-0x353bb77e]
  401dda:	mov    ds:0x7c004823,al
  401ddf:	pop    eax
  401de0:	ret    
  401de1:	popa   
  401de2:	fsub   DWORD PTR [edx-0x5d0d7edb]
  401de8:	xor    al,0x5f
  401dea:	std    
  401deb:	test   DWORD PTR [ecx-0x2d827331],esi
  401df1:	xor    BYTE PTR ds:0x1511d107,cl
  401df7:	sbb    cl,BYTE PTR [esi]
  401df9:	or     eax,edi
  401dfb:	or     esi,DWORD PTR [ebp+0x40ec4434]
  401e01:	mov    esi,0xceaf91b
  401e06:	dec    edx
  401e07:	or     eax,0x8c182772
  401e0c:	dec    edx
  401e0d:	jae    0x401e62
  401e0f:	or     DWORD PTR ds:0x87bfb8af,0xacc48775
  401e19:	or     DWORD PTR [edx],0x7a
  401e1c:	add    edi,ebx
  401e1e:	mov    BYTE PTR [edx-0x6c],0x3f
  401e22:	inc    ebp
  401e23:	jg     0x401e15
  401e25:	and    ebp,DWORD PTR [eax]
  401e27:	into   
  401e28:	mov    bh,0xf6
  401e2a:	push   edi
  401e2b:	inc    edi
  401e2c:	cmp    DWORD PTR [ecx-0x25],ecx
  401e2f:	fwait
  401e30:	cwde   
  401e31:	test   dh,bl
  401e33:	jae    0x401e06
  401e35:	test   BYTE PTR [ebx],cl
  401e37:	leave  
  401e38:	push   ds
  401e39:	pop    ebx
  401e3a:	and    DWORD PTR ds:0xae13aba7,0x7
  401e41:	leave  
  401e42:	push   ds
  401e43:	retf   0xede2
  401e46:	lock xchg edx,eax
  401e48:	inc    esp
  401e49:	sbb    ecx,esp
  401e4b:	pop    fs
  401e4d:	mov    ebx,0x43ac9b48
  401e52:	pushf  
  401e53:	lds    ebp,FWORD PTR [ecx+0x711ef385]
  401e59:	or     al,0xa9
  401e5b:	aad    0xc4
  401e5d:	sbb    BYTE PTR [eax],cl
  401e5f:	sbb    ch,BYTE PTR [ebp-0x1c]
  401e62:	fld    TBYTE PTR [ebx]
  401e64:	xor    al,0x76
  401e66:	push   eax
  401e67:	stos   BYTE PTR es:[edi],al
  401e68:	gs in  al,0x2f
  401e6b:	sbb    BYTE PTR [edi],cl
  401e6d:	xor    esp,esi
  401e6f:	add    DWORD PTR [edx-0x1e086ef3],edi
  401e75:	icebp  
  401e76:	push   ecx
  401e77:	rep ins WORD PTR es:[edi],dx
  401e7a:	ds jne 0x401edc
  401e7d:	gs sbb dh,BYTE PTR es:[eax]
  401e81:	pop    edx
  401e82:	mov    eax,0x32d15c31
  401e87:	sub    eax,0xb4f035b0
  401e8c:	jp     0x401ecf
  401e8e:	pop    ebp
  401e90:	les    eax,FWORD PTR [eax+eiz*4+0x4]
  401e94:	call   0x1bb3:0x7c592554
  401e9b:	mov    cl,0x68
  401e9d:	iret   
  401e9e:	in     al,0x4f
  401ea0:	stc    
  401ea1:	pushf  
  401ea2:	push   0xffffffea
  401ea4:	int3   
  401ea5:	fimul  DWORD PTR [di+0xa]
  401ea9:	in     al,0xaf
  401eab:	jns    0x401edb
  401ead:	add    ch,bl
  401eaf:	mov    ds:0x975dcd1,al
  401eb4:	lods   eax,DWORD PTR ds:[esi]
  401eb5:	sub    ebx,DWORD PTR [ecx-0x42a573ab]
  401ebb:	test   DWORD PTR [ebx],edi
  401ebd:	inc    esi
  401ebe:	jo     0x401f26
  401ec0:	sbb    al,0x19
  401ec2:	imul   eax,DWORD PTR [ebp-0x32],0xe21298c9
  401ec9:	mov    esi,DWORD PTR [ecx]
  401ecb:	inc    esp
  401ecc:	sub    al,0x1
  401ece:	xchg   esi,eax
  401ecf:	jb     0x401f03
  401ed1:	iret   
  401ed2:	test   BYTE PTR [edx],bh
  401ed4:	daa    
  401ed5:	mov    esi,0x3974cec6
  401eda:	into   
  401edb:	sub    bh,BYTE PTR [edi+0x40387706]
  401ee1:	ja     0x401ecd
  401ee3:	inc    ebp
  401ee4:	xchg   esp,eax
  401ee5:	pop    esp
  401ee6:	shr    dl,1
  401ee8:	mov    DWORD PTR [edi+0x10f1a7f0],ebx
  401eee:	jo     0x401f1d
  401ef0:	jnp    0x401e85
  401ef2:	fnstcw WORD PTR ds:0xd4c2db92
  401ef8:	sub    dl,ch
  401efa:	sahf   
  401efb:	mov    ds:0x814291e,al
  401f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f01:	rcr    DWORD PTR [eax+0x3a77e02d],0x46
  401f08:	sub    al,0xbe
  401f0a:	test   eax,0xef13b4bd
  401f0f:	xchg   ebp,eax
  401f10:	ret    0x471b
  401f13:	loope  0x401ec7
  401f15:	jnp    0x401f6e
  401f17:	push   ebp
  401f18:	xlat   BYTE PTR ds:[ebx]
  401f19:	or     eax,DWORD PTR [edx+ebx*8+0x70]
  401f1d:	mov    BYTE PTR [ebx],bl
  401f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f20:	xor    esi,eax
  401f22:	test   eax,0x7018165f
  401f27:	xor    DWORD PTR [ecx],eax
  401f29:	loopne 0x401eae
  401f2b:	inc    ebx
  401f2c:	sbb    BYTE PTR [edx],ch
  401f2e:	dec    ebp
  401f2f:	inc    ebx
  401f30:	jb     0x401f5a
  401f32:	ret    0x8bc8
  401f35:	sub    al,BYTE PTR [edx]
  401f37:	mov    eax,ds:0x799f8854
  401f3c:	into   
  401f3d:	mov    BYTE PTR [eax-0x6388f7f4],al
  401f43:	sub    eax,0x12bb9afe
  401f48:	les    ecx,FWORD PTR [ebp-0x704183cd]
  401f4e:	cli    
  401f4f:	add    ecx,DWORD PTR [edx]
  401f51:	xor    ebp,0x9
  401f54:	je     0x401fcb
  401f56:	jl     0x401f19
  401f58:	mul    DWORD PTR [ecx+0x2153d80a]
  401f5e:	inc    ebp
  401f5f:	ret    0xc9a4
  401f62:	test   DWORD PTR [esi+0x1d],0xa4dc954b
  401f69:	sbb    DWORD PTR [ecx],esp
  401f6b:	inc    esi
  401f6c:	adc    BYTE PTR [edi-0x7d99fe9b],ah
  401f72:	or     BYTE PTR [edi-0x4d],ah
  401f75:	jecxz  0x401f46
  401f77:	ins    DWORD PTR es:[edi],dx
  401f78:	inc    ebp
  401f79:	paddsw mm1,QWORD PTR [edi]
  401f7c:	cmp    al,0xa0
  401f7e:	fild   DWORD PTR [esi-0x7867e794]
  401f84:	jle    0x401f75
  401f86:	inc    ebp
  401f87:	ficomp WORD PTR [ebp+ebp*1+0x1d]
  401f8b:	dec    ebx
  401f8c:	pop    eax
  401f8d:	loope  0x401f4f
  401f8f:	push   ebp
  401f90:	jge    0x401fe1
  401f92:	sbb    al,0x8e
  401f94:	into   
  401f95:	test   al,0x38
  401f97:	or     edx,DWORD PTR [eax+0x7a38a28c]
  401f9d:	lahf   
  401f9e:	mov    esp,DWORD PTR [ebx-0x1]
  401fa1:	mov    cs:0xca2d0e80,eax
  401fa7:	es xor eax,0x947435f9
  401fad:	rcr    eax,cl
  401faf:	lea    edx,[ecx-0x41b5d885]
  401fb5:	mov    ecx,0x17368e4d
  401fba:	jge    0x401f96
  401fbc:	jo     0x40202a
  401fbe:	jmp    0x3f2d29cc
  401fc3:	pop    edx
  401fc4:	rcr    edi,1
  401fc6:	push   cs
  401fc7:	ds xchg ecx,eax
  401fc9:	jbe    0x402016
  401fcb:	jg     0x401fa7
  401fcd:	pop    esp
  401fce:	cld    
  401fcf:	cmp    BYTE PTR [eax-0x5b5bc93c],al
  401fd5:	pop    eax
  401fd6:	sbb    DWORD PTR [ecx-0x6e],esi
  401fd9:	cmp    ecx,DWORD PTR [edi+0x53]
  401fdc:	ret    0x7573
  401fdf:	sbb    ebx,DWORD PTR [ecx+0x14]
  401fe2:	sbb    eax,0xa08de1d8
  401fe7:	scas   eax,DWORD PTR es:[edi]
  401fe8:	fcom   QWORD PTR [esi+0x3]
  401feb:	adc    ebx,DWORD PTR [ebp-0x45]
  401fee:	xor    eax,0x9a7e41f0
  401ff3:	dec    ebp
  401ff4:	mov    edx,DWORD PTR [edi+edi*1-0x32]
  401ff8:	fisubr WORD PTR [esi]
  401ffa:	dec    eax
  401ffb:	sahf   
  401ffc:	repnz sub al,0xc1
  401fff:	out    dx,eax
  402000:	std    
  402001:	mov    esp,DWORD PTR [ecx-0x41]
  402004:	xor    eax,0x6875c422
  402009:	pop    ds
  40200a:	sbb    WORD PTR [edx-0x70f95178],di
  402011:	mov    bh,0x8b
  402013:	pop    es
  402014:	mov    cl,0x4e
  402016:	inc    esi
  402017:	ins    DWORD PTR es:[edi],dx
  402018:	push   edi
  402019:	mov    eax,0x4f77e228
  40201e:	je     0x402094
  402020:	lahf   
  402021:	idiv   bl
  402023:	mov    edx,0xa0d7c6b6
  402028:	jns    0x401ff2
  40202a:	repz cld 
  40202c:	enter  0xf8f3,0x26
  402030:	je     0x40205a
  402032:	(bad)  
  402033:	test   cl,0x1f
  402036:	aam    0xe5
  402038:	dec    edi
  402039:	ss adc ebx,ebp
  40203c:	inc    ebx
  40203d:	adc    al,0xd5
  40203f:	pop    ebp
  402040:	aad    0xea
  402042:	inc    esi
  402043:	ds dec ebx
  402045:	pop    ss
  402046:	std    
  402047:	and    DWORD PTR ds:0xee0a9e6e,edi
  40204d:	jecxz  0x402025
  40204f:	ss ds push edx
  402052:	(bad)  [ebp-0x73]
  402055:	fisttp DWORD PTR [edi-0x7d]
  402058:	imul   ebp,DWORD PTR [ebx],0x89bfe6af
  40205e:	mov    ch,0x35
  402060:	jecxz  0x40208e
  402062:	dec    eax
  402063:	jge    0x402051
  402065:	out    dx,al
  402066:	pushf  
  402067:	xchg   edx,eax
  402068:	mov    bh,BYTE PTR [esi-0x28]
  40206b:	sahf   
  40206c:	inc    eax
  40206d:	fucomip st,st(1)
  40206f:	xchg   ebp,eax
  402070:	stos   DWORD PTR es:[edi],eax
  402071:	mov    es,WORD PTR [ebp-0x1e]
  402074:	icebp  
  402075:	(bad)  
  402078:	test   al,0x46
  40207a:	lahf   
  40207b:	xchg   BYTE PTR [eax],ch
  40207d:	and    al,0x69
  40207f:	adc    al,BYTE PTR [ecx]
  402081:	jle    0x4020ea
  402083:	sbb    ch,BYTE PTR [ecx-0x47392fcc]
  402089:	dec    edi
  40208a:	outs   dx,BYTE PTR ds:[esi]
  40208b:	xchg   esi,eax
  40208c:	xchg   ecx,eax
  40208d:	jae    0x402035
  40208f:	out    dx,al
  402090:	popf   
  402091:	icebp  
  402092:	scas   al,BYTE PTR es:[edi]
  402093:	cwde   
  402094:	cmc    
  402095:	jmp    FWORD PTR [eax]
  402097:	fadd   QWORD PTR [edx+0x731ef5cc]
  40209d:	dec    eax
  40209e:	int    0x40
  4020a0:	lods   al,BYTE PTR ds:[esi]
  4020a1:	mov    ebx,0x7b907f62
  4020a6:	enter  0xc5e6,0xad
  4020aa:	and    al,0xf8
  4020ac:	je     0x4020c8
  4020ae:	xor    eax,0x4fdd9846
  4020b3:	aaa    
  4020b4:	xchg   edx,eax
  4020b5:	vpcmpgtw xmm6,xmm3,XMMWORD PTR [ebp+0x17]
  4020ba:	add    DWORD PTR [edx],esp
  4020bc:	mov    dh,0x45
  4020be:	lea    esp,[ebx-0x76]
  4020c1:	xor    al,0xfb
  4020c3:	jno    0x4020b4
  4020c5:	int3   
  4020c6:	sti    
  4020c7:	mov    edi,es
  4020c9:	ret    0xbca7
  4020cc:	or     BYTE PTR [esi-0x61f89b7d],cl
  4020d2:	dec    edx
  4020d3:	push   edx
  4020d4:	mov    ds:0xa497774e,eax
  4020d9:	mov    bl,0x10
  4020db:	xor    ch,BYTE PTR [edx]
  4020dd:	jle    0x402130
  4020df:	cmp    eax,0xd43eeb6d
  4020e4:	lds    ebx,FWORD PTR [eax-0x6d]
  4020e7:	pop    ds
  4020e8:	(bad)  
  4020e9:	xchg   ebp,eax
  4020ea:	xor    BYTE PTR [ecx+0x70618cb7],cl
  4020f0:	mov    edi,0x84ff412
  4020f5:	push   esi
  4020f6:	pop    ebp
  4020f7:	enter  0xef10,0xc4
  4020fb:	repz mov ch,0x4a
  4020fe:	dec    esp
  4020ff:	or     eax,0xfa095918
  402104:	test   al,0xf6
  402106:	imul   ecx,ebx,0x6743b0d3
  40210c:	jmp    0xd431f643
  402111:	fisubr WORD PTR [edi+0x63]
  402114:	sar    BYTE PTR [edi+0x1c0aa793],cl
  40211a:	inc    edx
  40211b:	pop    ss
  40211c:	or     dl,ch
  40211e:	test   DWORD PTR [eax+ebp*4-0x47],0x3d6f09e6
  402126:	loopne 0x40214c
  402128:	in     al,dx
  402129:	jl     0x4020ea
  40212b:	in     al,0x4b
  40212d:	test   al,0xb0
  40212f:	mov    dl,bl
  402131:	push   ecx
  402132:	fisub  DWORD PTR [eax-0x12]
  402135:	xchg   edi,eax
  402136:	inc    edi
  402137:	xor    eax,0x6f154086
  40213c:	nop
  40213d:	outs   dx,DWORD PTR ds:[esi]
  40213e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40213f:	mov    bh,0x18
  402141:	cs jae 0x40214a
  402144:	push   ecx
  402145:	mov    es,WORD PTR [ecx]
  402147:	fmul   QWORD PTR [edi]
  402149:	retf   0x27ed
  40214c:	test   DWORD PTR [eax+0x7f],edi
  40214f:	or     DWORD PTR [edi],ebx
  402151:	pop    ds
  402152:	dec    ebx
  402153:	fnstenv [eax+0x1b]
  402156:	pushf  
  402157:	leave  
  402158:	sbb    al,BYTE PTR [edi+0x68833831]
  40215e:	ss sti 
  402160:	or     eax,0x336db3d1
  402165:	add    al,0x68
  402167:	sub    bh,BYTE PTR [ebx]
  402169:	dec    ecx
  40216a:	mov    esp,0x709c91a1
  40216f:	and    esp,DWORD PTR ds:0xdfecbcdf
  402175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402176:	(bad)  
  402177:	popa   
  402178:	sahf   
  402179:	pop    es
  40217a:	add    al,0x58
  40217c:	shl    BYTE PTR [edx-0x55],cl
  40217f:	imul   eax,esi,0xfffffff5
  402182:	mov    esi,DWORD PTR [ebx+0x4f]
  402185:	xchg   edi,eax
  402186:	loop   0x4021d7
  402188:	push   ebx
  402189:	dec    eax
  40218a:	jns    0x402194
  40218c:	and    eax,0xd08d84f9
  402191:	xchg   ecx,eax
  402192:	xlat   BYTE PTR ds:[ebx]
  402193:	pushf  
  402194:	push   es
  402195:	dec    edi
  402196:	lods   eax,DWORD PTR ds:[esi]
  402197:	push   ss
  402198:	pop    esi
  402199:	xchg   ebx,eax
  40219a:	and    ecx,eax
  40219c:	inc    ebp
  40219d:	aad    0x6b
  40219f:	jle    0x4021fe
  4021a1:	inc    ecx
  4021a2:	lds    eax,FWORD PTR [esi+0x187c899e]
  4021a8:	add    DWORD PTR [edx-0x137fe933],ecx
  4021ae:	jne    0x40218f
  4021b0:	int    0xbe
  4021b2:	repnz push ebp
  4021b4:	add    eax,esp
  4021b6:	retf   
  4021b7:	lods   al,BYTE PTR ds:[esi]
  4021b8:	int3   
  4021b9:	ds call 0x11f7:0x9581a8aa
  4021c1:	outs   dx,DWORD PTR ds:[esi]
  4021c2:	mov    esp,0xeb879e9
  4021c7:	push   ss
  4021c8:	xchg   esi,eax
  4021c9:	repz ficomp WORD PTR [ecx+0x45552556]
  4021d0:	cmovp  ecx,DWORD PTR [edx]
  4021d3:	(bad)  
  4021d4:	and    DWORD PTR [esi+edx*2-0x54c8292e],esi
  4021db:	sub    eax,0x9bebb27b
  4021e0:	retf   0x91ff
  4021e3:	(bad)  
  4021e4:	lahf   
  4021e5:	mov    ebx,0x15800cfb
  4021ea:	daa    
  4021eb:	jmp    0x402257
  4021ed:	fs aam 0x2f
  4021f0:	clc    
  4021f1:	dec    ebx
  4021f2:	ja     0x4021b9
  4021f4:	jnp    0x40223d
  4021f6:	rcl    DWORD PTR [ebx-0x7f],cl
  4021f9:	out    0x42,eax
  4021fb:	jnp    0x4021b1
  4021fd:	pop    eax
  4021fe:	sar    DWORD PTR [ecx-0x30],0x89
  402202:	inc    eax
  402203:	imul   eax,DWORD PTR [esi+esi*4],0x50
  402207:	cli    
  402208:	std    
  402209:	js     0x4021e4
  40220b:	jg     0x402268
  40220d:	mov    edx,0x45fd859c
  402212:	mov    edx,0x1bac8d4
  402217:	(bad)  [edi-0x56ace5d5]
  40221d:	hlt    
  40221e:	jns    0x402221
  402220:	mov    gs,WORD PTR [edi]
  402222:	or     ebx,DWORD PTR [ebx+0x7b8515ce]
  402228:	in     eax,0xce
  40222a:	outs   dx,DWORD PTR ds:[esi]
  40222b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40222c:	pushf  
  40222d:	ret    0x5b08
  402230:	pop    ebx
  402231:	jecxz  0x4021cd
  402233:	push   esp
  402234:	push   ss
  402235:	lods   al,BYTE PTR ds:[esi]
  402236:	mov    al,0xf1
  402238:	adc    BYTE PTR [ecx+0x77ec436b],dh
  40223e:	cmp    bh,dl
  402240:	or     edx,DWORD PTR [edi+0x2970273a]
  402246:	fistp  QWORD PTR [ecx]
  402248:	xor    eax,0x92206944
  40224d:	mov    esi,0x5bacb200
  402252:	mov    edi,0xf827ca7b
  402257:	fcomip st,st(0)
  402259:	add    BYTE PTR [edx-0x21499c7e],0x12
  402260:	mov    ebx,0xc22f2605
  402265:	mov    eax,ds:0xcee17080
  40226a:	xchg   ebx,eax
  40226b:	fs push ebx
  40226d:	adc    cl,BYTE PTR [ebp-0x7c25207d]
  402273:	and    al,0x82
  402275:	sub    al,0x1
  402277:	fwait
  402278:	sub    ebp,DWORD PTR [eax-0x23801932]
  40227e:	ins    BYTE PTR es:[edi],dx
  40227f:	sbb    bh,BYTE PTR [esi+edx*1-0x52]
  402283:	imul   edx,DWORD PTR [edi-0x57],0xbe4798f8
  40228a:	pop    ecx
  40228b:	mov    cl,0xc6
  40228d:	sbb    al,0xdd
  40228f:	dec    esi
  402290:	jno    0x4022a4
  402292:	icebp  
  402293:	xchg   esp,eax
  402294:	dec    esi
  402295:	adc    esp,DWORD PTR [edx+ecx*4]
  402298:	bound  eax,QWORD PTR [esi-0x773607f3]
  40229e:	sahf   
  40229f:	dec    esp
  4022a0:	scas   eax,DWORD PTR es:[edi]
  4022a1:	repnz inc edx
  4022a3:	xor    BYTE PTR [ebx],bl
  4022a5:	pop    eax
  4022a6:	int    0xfe
  4022a8:	pop    edx
  4022a9:	mov    ah,0x7e
  4022ab:	int    0x1
  4022ad:	mov    ecx,0x1fbaf4d3
  4022b2:	sahf   
  4022b3:	jne    0x40231d
  4022b5:	jmp    0x8cb30a61
  4022ba:	dec    edx
  4022bb:	(bad)  
  4022bc:	dec    eax
  4022bd:	push   eax
  4022be:	call   0xf24:0xe97fd3c
  4022c5:	scas   al,BYTE PTR es:[edi]
  4022c6:	sbb    eax,0xa9bfc974
  4022cb:	daa    
  4022cc:	xchg   DWORD PTR [ebx],esi
  4022ce:	cdq    
  4022cf:	mov    DWORD PTR [edi+0x1d],edx
  4022d2:	sbb    al,0x5f
  4022d4:	(bad)  
  4022d5:	lahf   
  4022d6:	sbb    al,0xf1
  4022d8:	mov    ebp,0xc6006cdd
  4022dd:	(bad)  
  4022de:	ret    
  4022df:	adc    DWORD PTR ds:0x7fdff934,eax
  4022e5:	dec    ebx
  4022e6:	xchg   BYTE PTR [esi+0x2f],dl
  4022e9:	out    dx,eax
  4022ea:	aam    0xec
  4022ec:	inc    eax
  4022ed:	cli    
  4022ee:	cmp    al,0x11
  4022f0:	push   ebx
  4022f1:	xchg   esp,edx
  4022f3:	push   ss
  4022f4:	xor    eax,0xe73b1c12
  4022f9:	retf   0xd9d0
  4022fc:	je     0x4022c9
  4022fe:	push   ebx
  4022ff:	pop    ecx
  402300:	pop    ss
  402301:	pusha  
  402302:	mov    edx,0x22e16af0
  402307:	pop    ebp
  402308:	sahf   
  402309:	dec    ebx
  40230a:	fwait
  40230b:	jmp    0xb7d03d0f
  402310:	sbb    eax,ecx
  402312:	in     eax,0xf2
  402314:	sbb    DWORD PTR [edi],0xfffffff3
  402317:	mov    bh,0xf5
  402319:	hlt    
  40231a:	adc    eax,eax
  40231c:	mov    DWORD PTR [ebp+0x24294d50],ecx
  402322:	mov    esi,0x9d9afda3
  402327:	pop    ss
  402328:	inc    eax
  402329:	or     DWORD PTR [ebp+0x620f9ef0],esp
  40232f:	dec    ecx
  402330:	ror    bh,1
  402332:	or     DWORD PTR [ebx-0x57],edx
  402335:	cmp    ch,dl
  402337:	scas   eax,DWORD PTR es:[edi]
  402338:	ja     0x4022c5
  40233a:	fdiv   st(2),st
  40233c:	push   ebx
  40233d:	push   ebp
  40233e:	or     ebp,ebp
  402340:	xchg   ecx,eax
  402341:	jle    0x4022cb
  402343:	test   DWORD PTR [eax+0x3c433578],edx
  402349:	aad    0x96
  40234b:	jmp    0x4022ee
  40234d:	shl    DWORD PTR [edi],cl
  40234f:	ds enter 0x68ed,0xc1
  402354:	mov    al,ds:0x957bf25c
  402359:	std    
  40235a:	push   eax
  40235b:	cld    
  40235c:	sub    al,al
  40235e:	sub    ah,BYTE PTR ds:0x870d1b1d
  402364:	or     DWORD PTR [edi+edx*2],ebx
  402367:	add    ecx,DWORD PTR [eax+0x77285d42]
  40236d:	mov    ds:0xec13519b,eax
  402372:	imul   esi,DWORD PTR [ecx+0x17],0x261ad7f6
  402379:	dec    esp
  40237a:	clc    
  40237b:	adc    eax,DWORD PTR [edi]
  40237d:	mov    ds:0xb343730,eax
  402382:	ins    BYTE PTR es:[edi],dx
  402383:	mov    dh,0xc6
  402385:	jb     0x402395
  402387:	mov    bl,0x41
  402389:	pop    ecx
  40238a:	pop    eax
  40238b:	jb     0x40233b
  40238d:	out    dx,al
  40238e:	sub    bh,BYTE PTR [ecx-0x1e]
  402391:	cwde   
  402392:	mov    esp,0x91144d0d
  402397:	xchg   ebp,eax
  402398:	aaa    
  402399:	pop    ss
  40239a:	and    esi,DWORD PTR [edx+0x1]
  40239d:	(bad)  
  40239e:	cmp    edx,ebx
  4023a0:	fnstcw WORD PTR [ecx-0x5e]
  4023a3:	ins    DWORD PTR es:[edi],dx
  4023a4:	xchg   DWORD PTR [esi-0x6f4793f],ebp
  4023aa:	jmp    0x4023c8
  4023ac:	fld    QWORD PTR [edx-0x62d93de9]
  4023b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023b3:	in     eax,dx
  4023b4:	scas   al,BYTE PTR es:[edi]
  4023b5:	idiv   BYTE PTR ds:0xfab94691
  4023bb:	jae    0x402435
  4023bd:	mov    ds:0x35a5936c,al
  4023c2:	arpl   WORD PTR [ebp+0x2230a62e],bx
  4023c8:	test   DWORD PTR ds:0x1781735a,edx
  4023ce:	outs   dx,BYTE PTR ds:[esi]
  4023cf:	pop    ss
  4023d0:	dec    edi
  4023d1:	cdq    
  4023d2:	or     DWORD PTR [eax],esi
  4023d4:	mov    bl,0xe0
  4023d6:	adc    al,0xa
  4023d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023d9:	sub    bl,BYTE PTR [edi]
  4023db:	call   0x178d:0x115dd966
  4023e2:	in     al,0x83
  4023e4:	add    al,0x7e
  4023e6:	push   eax
  4023e7:	call   0xc845:0xb6c7d03f
  4023ee:	clc    
  4023ef:	push   cs
  4023f0:	loope  0x40239b
  4023f2:	fcomp  QWORD PTR [ebx-0x62]
  4023f5:	mov    esp,DWORD PTR [esi+ebx*1-0x28]
  4023f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023fa:	stc    
  4023fb:	fdivrp st(3),st
  4023fd:	push   0x7105c6eb
  402402:	add    bl,0x6
  402405:	in     al,0x4b
  402407:	or     esp,0x9c2914ca
  40240d:	loopne 0x40242d
  40240f:	mov    ebp,0xa0a9f7b0
  402414:	aam    0x20
  402416:	push   ecx
  402417:	icebp  
  402418:	pop    es
  402419:	lahf   
  40241a:	icebp  
  40241b:	ss call 0x55348b93
  402421:	leave  
  402422:	not    DWORD PTR [ebx-0x7f898be5]
  402428:	je     0x4023ce
  40242a:	(bad)  
  40242b:	fcomp  st(0)
  40242d:	push   dx
  40242f:	out    dx,eax
  402430:	jle    0x402434
  402432:	pusha  
  402433:	mov    DWORD PTR [edi-0x1e07f09a],edi
  402439:	push   edx
  40243a:	push   ebx
  40243b:	sbb    DWORD PTR [esi],esi
  40243d:	rcl    edi,1
  40243f:	xor    edx,DWORD PTR [eax-0x142cb295]
  402445:	aaa    
  402446:	xchg   ebp,eax
  402447:	and    BYTE PTR [edx],bl
  402449:	cld    
  40244a:	push   edi
  40244b:	pushf  
  40244c:	xchg   ebp,eax
  40244d:	idiv   BYTE PTR [ebx]
  40244f:	out    0x39,al
  402451:	das    
  402452:	mov    ebx,0x6ef70502
  402457:	pop    esp
  402458:	loope  0x40248c
  40245a:	pop    es
  40245b:	lods   al,BYTE PTR ds:[esi]
  40245c:	add    BYTE PTR [esi+0x2d05413d],cl
  402462:	sub    al,0xba
  402464:	call   0x31a6:0xa8e70419
  40246b:	popf   
  40246c:	outs   dx,BYTE PTR ds:[esi]
  40246d:	sbb    al,0x81
  40246f:	aam    0x2c
  402471:	sbb    BYTE PTR [edi+0x14],dh
  402474:	adc    BYTE PTR [edx+ecx*2-0x37],dl
  402478:	push   esp
  402479:	jmp    FWORD PTR [ebx-0x37]
  40247c:	jge    0x40242c
  40247e:	sahf   
  40247f:	ins    DWORD PTR es:[edi],dx
  402480:	add    ecx,DWORD PTR [ebx+0x42]
  402483:	adc    eax,0x16672ac5
  402488:	int    0xac
  40248a:	mov    ecx,0xff183d90
  40248f:	out    0xbb,eax
  402491:	sbb    eax,0x3a7eda3
  402496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402497:	sub    edx,DWORD PTR [edx+0x551fbba4]
  40249d:	test   BYTE PTR ds:0xfc17f223,ah
  4024a3:	push   edi
  4024a4:	mov    edx,0x84f3a4d0
  4024a9:	test   DWORD PTR [ecx+0x22],esi
  4024ac:	pop    ds
  4024ad:	jmp    0x7079:0x6efd74c7
  4024b4:	je     0x402526
  4024b6:	dec    esi
  4024b7:	jl     0x4024eb
  4024b9:	in     al,0xe6
  4024bb:	pop    edx
  4024bc:	mov    ebx,0x2455e54b
  4024c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024c2:	rol    eax,cl
  4024c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024c5:	xor    esi,DWORD PTR [esi]
  4024c7:	mov    al,0x1a
  4024c9:	lahf   
  4024ca:	in     al,dx
  4024cb:	jl     0x4024ec
  4024cd:	call   0x3a0e94a
  4024d2:	imul   ebx,DWORD PTR [ecx+0x1bafd1ee],0x847a70fd
  4024dc:	jle    0x40252e
  4024de:	neg    ebp
  4024e0:	pop    edx
  4024e1:	mov    dh,0x3b
  4024e3:	arpl   WORD PTR [edx-0x16],bx
  4024e6:	sub    DWORD PTR [edx],ebx
  4024e8:	imul   ebp,DWORD PTR [edi],0x5281d342
  4024ee:	push   esi
  4024ef:	jmp    DWORD PTR [eax-0xc]
  4024f2:	dec    ebp
  4024f3:	mov    al,ds:0x732b4b05
  4024f8:	mov    DWORD PTR [esp+esi*1-0x1d],edi
  4024fc:	retf   
  4024fd:	jp     0x402537
  4024ff:	xor    ah,dl
  402501:	in     eax,dx
  402502:	jo     0x4024c2
  402504:	and    bl,bh
  402506:	or     al,BYTE PTR [edx+0x4e]
  402509:	sti    
  40250a:	adc    eax,0x65b3f34c
  40250f:	out    0x63,al
  402511:	jne    0x402542
  402513:	dec    edx
  402514:	in     eax,0xfe
  402516:	jg     0x402580
  402518:	(bad)  
  402519:	not    ch
  40251b:	xor    bl,BYTE PTR [edx]
  40251d:	cmp    eax,DWORD PTR [esi]
  40251f:	mul    BYTE PTR [edi]
  402521:	dec    ecx
  402522:	pop    esp
  402523:	cs inc ecx
  402525:	mov    BYTE PTR [edi-0x74],bl
  402528:	ins    BYTE PTR es:[edi],dx
  402529:	mov    bl,0xdb
  40252b:	daa    
  40252c:	or     ebx,DWORD PTR [esi+eax*4]
  40252f:	mov    bh,0x7f
  402531:	scas   eax,DWORD PTR es:[edi]
  402532:	jp     0x4024d5
  402534:	ja     0x402592
  402536:	rcr    BYTE PTR [eax+ebp*1+0xbdad56b],cl
  40253d:	shr    DWORD PTR [esi+0x1b9959ec],1
  402543:	xor    ah,BYTE PTR [esi]
  402545:	gs fs add eax,0x98cdd25
  40254c:	sbb    DWORD PTR [ebx],ebp
  40254e:	mov    WORD PTR [eax+edx*2],?
  402551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402552:	xchg   edx,eax
  402553:	push   0xbe72ba7
  402558:	test   BYTE PTR [ebx+ecx*4+0x42],bh
  40255c:	in     al,dx
  40255d:	mov    bh,0xec
  40255f:	add    ebp,0x64
  402562:	test   DWORD PTR [esp+edx*4+0x1f],edi
  402566:	jle    0x402542
  402568:	test   eax,0xd8cf09c8
  40256d:	bound  edi,QWORD PTR [ebp+0x79077844]
  402573:	or     cl,0xb5
  402576:	cli    
  402577:	add    al,BYTE PTR [esi+0x351837a1]
  40257d:	xchg   esp,eax
  40257e:	loop   0x4025f1
  402580:	mov    esi,0xd4ea7a6c
  402585:	or     ah,BYTE PTR [ecx-0x8467e9d]
  40258b:	cs std 
  40258d:	retf   0x594
  402590:	int    0x75
  402592:	adc    DWORD PTR [edi+0xc],ebp
  402595:	out    0x80,al
  402597:	xor    al,0x22
  402599:	aas    
  40259a:	push   es
  40259b:	push   es
  40259c:	xchg   ebp,eax
  40259d:	outs   dx,DWORD PTR ds:[esi]
  40259e:	ds in  al,0x51
  4025a1:	and    dl,dh
  4025a3:	arpl   WORD PTR [ebx+0x6b],bx
  4025a6:	xchg   ebp,eax
  4025a7:	(bad)  
  4025a8:	outs   dx,BYTE PTR ds:[esi]
  4025a9:	add    DWORD PTR [edx-0x6bef8c4a],ecx
  4025af:	xchg   ecx,eax
  4025b0:	js     0x402602
  4025b2:	mov    eax,ds:0x96c92846
  4025b7:	add    ah,BYTE PTR [ecx-0x74b8528a]
  4025bd:	push   cs
  4025be:	(bad)  
  4025bf:	dec    eax
  4025c0:	test   eax,0x4c89be72
  4025c5:	ja     0x402569
  4025c7:	inc    eax
  4025c8:	lea    ebx,[edx-0x1a646e48]
  4025ce:	mov    ds:0xef2c127c,eax
  4025d3:	ds pop es
  4025d5:	sub    eax,0x214d9786
  4025da:	(bad)  [ecx]
  4025dc:	xor    al,0xc7
  4025de:	fstp   TBYTE PTR [ebx+0x632d39ff]
  4025e4:	cdq    
  4025e5:	push   ebp
  4025e6:	fisubr WORD PTR [ebp+0x2b536326]
  4025ec:	jge    0x4025df
  4025ee:	mov    ch,0xa2
  4025f0:	loopne 0x40264e
  4025f2:	sbb    edx,esi
  4025f4:	enter  0xae41,0xe5
  4025f8:	adc    eax,0x659f0615
  4025fd:	cwde   
  4025fe:	mov    al,ds:0xeeb87090
  402603:	and    eax,ebx
  402605:	cmp    BYTE PTR [edi+0x39],ch
  402608:	cld    
  402609:	stos   BYTE PTR es:[edi],al
  40260a:	bswap  ebx
  40260c:	enter  0xb0dc,0xb6
  402610:	xchg   ecx,eax
  402611:	mov    al,0xb2
  402613:	(bad)  
  402614:	loop   0x4025a7
  402616:	adc    bh,dh
  402618:	xlat   BYTE PTR ds:[ebx]
  402619:	into   
  40261a:	adc    ah,dl
  40261c:	mov    bh,0xf8
  40261e:	add    BYTE PTR [edi+0x15],ah
  402621:	fnsave [esi]
  402623:	pop    ss
  402624:	xor    ecx,DWORD PTR [ebp+0x69baf1fd]
  40262a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40262b:	(bad)  
  40262c:	neg    ebp
  40262e:	or     cl,BYTE PTR [edx+0x1c]
  402631:	aas    
  402632:	mov    esi,0xf78cb55f
  402637:	(bad)  
  402639:	add    bl,BYTE PTR [ecx-0x3af4fd4c]
  40263f:	out    dx,al
  402640:	push   es
  402641:	dec    ebx
  402643:	jecxz  0x40266b
  402645:	stc    
  402646:	and    DWORD PTR [esp+esi*8-0x2bba60d0],0x2e
  40264e:	ins    DWORD PTR es:[edi],dx
  40264f:	pop    ds
  402650:	popf   
  402651:	outs   dx,BYTE PTR ds:[esi]
  402652:	in     al,dx
  402653:	call   0x7e98:0xaefd9610
  40265a:	cmp    BYTE PTR [esi],ah
  40265c:	(bad)  
  40265d:	rcr    BYTE PTR [ecx+0x3c1daf40],1
  402663:	and    edi,esi
  402665:	push   0x7348c42b
  40266a:	cmp    ebx,DWORD PTR [esi+ecx*8+0x22]
  40266e:	hlt    
  40266f:	lods   al,BYTE PTR ds:[esi]
  402670:	and    eax,0x3146ba61
  402675:	bound  bp,DWORD PTR [eax+0x7f]
  402679:	sbb    al,cl
  40267b:	mov    ds:0x9a04686f,eax
  402680:	pop    ebx
  402681:	push   eax
  402682:	or     eax,edx
  402684:	fsubr  QWORD PTR [ebx+eax*1]
  402687:	int    0x70
  402689:	inc    ecx
  40268a:	out    0x99,al
  40268c:	shl    BYTE PTR [ebp+0x19159d93],1
  402692:	ss dec esp
  402694:	jo     0x4026e1
  402696:	mov    al,0x87
  402698:	mov    DWORD PTR [eax+0x7c],esp
  40269b:	push   cs
  40269c:	and    esp,ecx
  40269e:	ret    0x7b5b
  4026a1:	std    
  4026a2:	push   es
  4026a3:	push   ebp
  4026a4:	mov    edx,DWORD PTR [eax+0x36aa0067]
  4026aa:	test   DWORD PTR [edi-0x16],eax
  4026ad:	rcr    BYTE PTR [ecx-0x7129ad21],0xe8
  4026b4:	or     DWORD PTR [ebx-0xdd54477],edx
  4026ba:	cld    
  4026bb:	addr16 jmp 0xec2eda0c
  4026c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026c2:	pop    edx
  4026c3:	mov    ds:0x5cc403df,eax
  4026c8:	xor    ecx,esp
  4026ca:	jmp    0x2a50d346
  4026cf:	out    0x15,eax
  4026d1:	inc    esp
  4026d2:	adc    al,0xae
  4026d4:	sbb    eax,0xe6143d78
  4026d9:	jns    0x40269e
  4026db:	imul   edx,DWORD PTR [edi+0x1572abcf],0x8e9715a5
  4026e5:	mov    dl,0x70
  4026e7:	mov    ah,0xde
  4026e9:	data16 (bad) 
  4026eb:	jg     0x4026da
  4026ed:	push   eax
  4026ee:	pop    DWORD PTR [edx-0x2bced2a2]
  4026f4:	dec    esi
  4026f5:	jecxz  0x40271a
  4026f7:	and    dl,BYTE PTR [ebp+0x70]
  4026fa:	xlat   BYTE PTR ds:[ebx]
  4026fb:	jmp    0x66c41564
  402700:	sbb    al,ch
  402702:	aas    
  402703:	out    dx,eax
  402704:	call   0xc363:0x240ad149
  40270b:	arpl   WORD PTR [esi+0x50],sp
  40270e:	mov    bx,0x9294
  402712:	int3   
  402713:	adc    BYTE PTR ds:0x909635ef,cl
  402719:	clc    
  40271a:	push   esp
  40271b:	out    0x2e,al
  40271d:	mov    WORD PTR [ecx+edx*4-0x543fe8e9],gs
  402724:	mov    bl,0x64
  402726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402727:	call   0x6d614b6e
  40272c:	pop    ss
  40272d:	fcomp  QWORD PTR [edi]
  40272f:	mov    dh,0x16
  402731:	fisttp QWORD PTR [edx-0x61e5f611]
  402737:	push   eax
  402738:	fild   QWORD PTR [ecx-0x57eda435]
  40273e:	pop    ebx
  40273f:	push   ecx
  402740:	mov    esp,0x88cf617
  402745:	mov    esi,0x46ed159a
  40274a:	(bad)  
  40274b:	ins    DWORD PTR es:[edi],dx
  40274c:	adc    ebp,edx
  40274e:	or     DWORD PTR [edi+ebx*4+0x47f065e2],edx
  402755:	pushf  
  402756:	cmovno ebx,DWORD PTR [eax-0x7c]
  40275a:	pop    ebx
  40275b:	xor    ecx,DWORD PTR [ecx]
  40275d:	ja     0x4027c2
  40275f:	xchg   edx,eax
  402760:	push   edi
  402761:	ins    DWORD PTR es:[edi],dx
  402762:	daa    
  402763:	xchg   DWORD PTR [esi-0x4b],eax
  402766:	cs mov esp,0xe3a3a0b6
  40276c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40276d:	fs or  eax,ebx
  402770:	push   ss
  402771:	cmp    al,0xe3
  402773:	scas   al,BYTE PTR es:[edi]
  402774:	push   ebx
  402775:	cs es aam 0xee
  402779:	icebp  
  40277a:	push   ss
  40277b:	cmp    dl,0xd0
  40277e:	ret    0x11ff
  402781:	or     edi,DWORD PTR [esi-0x36]
  402784:	retf   0x70c4
  402787:	jmp    0x21dcd9a6
  40278c:	push   ss
  40278d:	mov    dl,0xa8
  40278f:	lea    ecx,[edx+0x43]
  402792:	jmp    0xfb6:0x3aae077c
  402799:	xor    ah,ah
  40279b:	not    BYTE PTR [edx+eax*8]
  40279e:	or     BYTE PTR [eax+0x43e79060],0x16
  4027a5:	(bad)  
  4027a6:	mov    ds:0x8e0aa009,eax
  4027ab:	push   ebp
  4027ac:	ss in  eax,0xd6
  4027af:	cmp    al,0x41
  4027b1:	xor    DWORD PTR [ecx],0xc0371785
  4027b7:	dec    ebp
  4027b8:	or     eax,0x88dac6ca
  4027bd:	out    0x15,eax
  4027bf:	adc    BYTE PTR [edi+0x18],al
  4027c2:	div    DWORD PTR [esi-0x51]
  4027c5:	jmp    0x8e17:0x16d0ef14
  4027cc:	popf   
  4027cd:	leave  
  4027ce:	mov    DWORD PTR gs:[esi],ebx
  4027d1:	lahf   
  4027d2:	xchg   ebx,eax
  4027d3:	in     al,dx
  4027d4:	mov    DWORD PTR [ebx],eax
  4027d6:	popa   
  4027d7:	fwait
  4027d8:	fwait
  4027d9:	sar    BYTE PTR [edi],0x75
  4027dc:	aaa    
  4027dd:	lahf   
  4027de:	push   0x57
  4027e0:	add    eax,0x2e165419
  4027e5:	sub    BYTE PTR [esi],0x61
  4027e8:	pop    DWORD PTR [eax-0x5c]
  4027eb:	sub    al,0x9a
  4027ed:	retf   0xcba8
  4027f0:	pop    es
  4027f1:	xlat   BYTE PTR ds:[ebx]
  4027f2:	bound  ecx,QWORD PTR [ecx-0x5b6d7d75]
  4027f8:	xchg   ebp,eax
  4027f9:	je     0x402810
  4027fb:	(bad)  
  4027fc:	dec    esp
  4027fd:	push   0x421961bf
  402802:	xchg   edi,eax
  402803:	jo     0x40283c
  402805:	mov    ds:0x9bc58e53,eax
  40280a:	pop    ebx
  40280b:	bound  ecx,QWORD PTR [ebx]
  40280d:	jno    0x402886
  40280f:	sbb    dh,BYTE PTR [edi+0x57]
  402812:	sbb    al,0x8c
  402814:	lahf   
  402815:	mov    ds:0x92b716d9,al
  40281a:	mov    al,ds:0xbced960d
  40281f:	push   ebp
  402820:	and    DWORD PTR [eax-0x73fb3b57],0xffffffbb
  402827:	rcr    ch,1
  402829:	adc    al,0xe2
  40282b:	cmp    eax,0xdd3e5a8c
  402830:	inc    esi
  402831:	pop    ebx
  402832:	test   DWORD PTR [ebx+0x79],esp
  402835:	dec    ebp
  402836:	scas   eax,DWORD PTR es:[edi]
  402837:	jle    0x4027c9
  402839:	pop    edx
  40283a:	lds    ebp,FWORD PTR [eax+ecx*4-0x79]
  40283e:	push   es
  40283f:	imul   esp,DWORD PTR [ebx+0x1788a433],0xa8268854
  402849:	pop    ebx
  40284a:	int    0x9a
  40284c:	popf   
  40284d:	sub    BYTE PTR [ebx],dl
  40284f:	(bad)  
  402851:	cli    
  402852:	je     0x402816
  402854:	in     al,dx
  402855:	mov    cl,0xbc
  402857:	and    al,0xe6
  402859:	xor    dh,BYTE PTR [eax+0x5e]
  40285c:	inc    esp
  40285d:	jge    0x402844
  40285f:	test   dl,bh
  402861:	xchg   ebx,eax
  402862:	nop
  402863:	(bad)  
  402865:	jb     0x40288c
  402867:	xchg   ebp,eax
  402868:	mov    ecx,0xfef6605b
  40286d:	or     BYTE PTR [ebx+esi*1-0x4a75aa70],dh
  402874:	cmc    
  402875:	jle    0x402877
  402877:	sub    al,0xb3
  402879:	es fld TBYTE PTR gs:[eax+esi*1-0x1e]
  40287f:	push   0x21
  402881:	(bad)  
  402882:	enter  0xdc4f,0x42
  402886:	jle    0x4028e9
  402888:	sub    al,0x44
  40288a:	or     eax,0xbc0ce665
  40288f:	fwait
  402890:	sub    bl,BYTE PTR [edx]
  402892:	xchg   esi,eax
  402893:	and    ebp,DWORD PTR [edi]
  402895:	xor    al,0x2b
  402897:	stos   DWORD PTR es:[edi],eax
  402898:	xchg   ecx,eax
  402899:	fs call 0x26bebcab
  40289f:	pop    edi
  4028a0:	adc    eax,0x20e3cfa2
  4028a5:	(bad)  
  4028a7:	or     edi,DWORD PTR [esi]
  4028a9:	cdq    
  4028aa:	not    DWORD PTR [edi]
  4028ac:	mov    cl,0x5
  4028ae:	adc    al,0x7d
  4028b0:	push   cs
  4028b1:	sub    dh,BYTE PTR [ebp-0x4c6758b1]
  4028b7:	dec    BYTE PTR [esi+0x19]
  4028ba:	jb     0x402893
  4028bc:	mov    esi,0x546834f6
  4028c1:	nop
  4028c2:	xchg   ebp,eax
  4028c3:	pop    ecx
  4028c4:	or     BYTE PTR [eax-0x26],ch
  4028c7:	sbb    cl,BYTE PTR [esi+0x47]
  4028ca:	sbb    DWORD PTR [ebx],0x9aa62fb8
  4028d0:	mov    ds:0x744294bb,al
  4028d5:	xchg   esi,eax
  4028d6:	dec    ecx
  4028d7:	add    BYTE PTR [ecx+edx*1],dh
  4028da:	clc    
  4028db:	push   esi
  4028dc:	neg    BYTE PTR [edi-0x2e]
  4028df:	outs   dx,DWORD PTR ds:[esi]
  4028e0:	(bad)  
  4028e1:	in     eax,dx
  4028e2:	pop    eax
  4028e3:	in     al,dx
  4028e4:	rol    DWORD PTR [edx],1
  4028e6:	lods   eax,DWORD PTR ds:[esi]
  4028e7:	mov    eax,0xc1591e9f
  4028ec:	fnsave [ebp-0x760ead5]
  4028f2:	or     BYTE PTR [edx+0x4d49fafc],ch
  4028f8:	push   edx
  4028f9:	mov    ebp,0x42d49ec2
  4028fe:	ja     0x4028e2
  402900:	jge    0x40295b
  402902:	push   esi
  402903:	jae    0x4028b5
  402905:	xor    al,0x5b
  402907:	hlt    
  402908:	(bad)  
  402909:	pop    ebx
  40290a:	sahf   
  40290b:	popa   
  40290c:	pop    esp
  40290d:	mov    bl,BYTE PTR [esi-0x7f]
  402910:	adc    DWORD PTR [ebx-0x69],ecx
  402913:	pop    es
  402914:	outs   dx,BYTE PTR ds:[esi]
  402915:	sbb    eax,0x33d62123
  40291a:	push   ds
  40291b:	das    
  40291c:	outs   dx,DWORD PTR ds:[esi]
  40291d:	sub    al,0xc3
  40291f:	fld    TBYTE PTR [esi+0x54]
  402922:	pop    ebx
  402923:	sbb    ch,dl
  402925:	leave  
  402926:	inc    edx
  402927:	call   0xd2aede8f
  40292c:	adc    BYTE PTR [esi],0x71
  40292f:	add    eax,DWORD PTR [eax+0x367848d2]
  402935:	adc    eax,0x5ea69306
  40293a:	xor    eax,DWORD PTR [edx-0x83ad313]
  402940:	cmp    BYTE PTR [ebx+esi*8],ch
  402943:	hlt    
  402944:	xchg   dh,al
  402946:	xchg   ecx,eax
  402947:	and    ebp,ecx
  402949:	cs popa 
  40294b:	ret    
  40294c:	rcl    DWORD PTR [ebp-0x28cb6495],1
  402952:	add    cl,BYTE PTR [esi+0x7e]
  402955:	int    0xf9
  402957:	pop    ss
  402958:	xchg   DWORD PTR [eax+0x40],ebx
  40295b:	inc    eax
  40295c:	sti    
  40295d:	shr    BYTE PTR [ecx],0xd3
  402960:	add    eax,0xf8aa6eae
  402965:	aas    
  402966:	dec    eax
  402967:	push   cs
  402968:	mov    ds:0x9bc013c,al
  40296d:	rol    DWORD PTR [ecx],1
  40296f:	and    cl,BYTE PTR [eax+0x71c4a0db]
  402975:	enter  0xfee8,0x30
  402979:	dec    ecx
  40297a:	xor    ecx,DWORD PTR [ebx+0x32]
  40297d:	js     0x4029db
  40297f:	xor    ecx,DWORD PTR [edi+0x3e]
  402982:	jecxz  0x4029d6
  402984:	leave  
  402985:	mov    edi,0x4b002659
  40298a:	out    dx,eax
  40298b:	pop    ds
  40298c:	call   0x2f46:0x3c2df6b2
  402993:	iret   
  402994:	loope  0x40297c
  402996:	and    ebx,DWORD PTR [esi-0x25]
  402999:	icebp  
  40299a:	mov    ds:0x460e8865,eax
  40299f:	int3   
  4029a0:	idiv   DWORD PTR [esi]
  4029a2:	inc    ecx
  4029a3:	(bad)  
  4029a4:	test   al,0x54
  4029a6:	(bad)  
  4029a7:	dec    edx
  4029a8:	in     al,0x85
  4029aa:	out    dx,eax
  4029ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029ac:	cwde   
  4029ad:	xchg   ecx,eax
  4029ae:	xchg   DWORD PTR [ecx],esp
  4029b0:	ret    
  4029b1:	or     cl,BYTE PTR [ecx+0x41]
  4029b4:	pop    ecx
  4029b5:	xchg   ebp,eax
  4029b6:	mov    BYTE PTR [esi+0x4cdd5f8b],bl
  4029bc:	inc    esi
  4029bd:	cmc    
  4029be:	mov    edi,0xc53a93d
  4029c3:	test   ch,bl
  4029c5:	mov    ah,0xfa
  4029c7:	cmp    cl,BYTE PTR [esi]
  4029c9:	xchg   ecx,eax
  4029ca:	jns    0x4029b4
  4029cc:	(bad)
  4029cf:	xchg   ebx,eax
  4029d0:	sub    eax,0xcb5bd2c4
  4029d5:	icebp  
  4029d6:	inc    ebp
  4029d7:	mov    al,0xb2
  4029d9:	lock int 0xd1
  4029dc:	sbb    DWORD PTR [eax+0x3c19e2ae],eax
  4029e2:	in     eax,0xcf
  4029e4:	int3   
  4029e5:	add    eax,0xf4a9959a
  4029ea:	jecxz  0x4029fc
  4029ec:	daa    
  4029ed:	cdq    
  4029ee:	call   0xad75:0x1e7de005
  4029f5:	in     eax,dx
  4029f6:	test   BYTE PTR [ecx],bh
  4029f8:	test   cl,dh
  4029fa:	sbb    al,BYTE PTR [ebp-0xd973d7f]
  402a00:	daa    
  402a01:	lahf   
  402a02:	add    ebx,DWORD PTR fs:[esi+0x7e770e9a]
  402a09:	sub    DWORD PTR [esi],ebp
  402a0b:	inc    eax
  402a0c:	xchg   BYTE PTR [ecx-0x1f],ah
  402a0f:	repnz mov dl,cl
  402a12:	test   BYTE PTR [edi],al
  402a14:	jb     0x4029da
  402a16:	push   ds
  402a17:	xchg   DWORD PTR [ebx],ecx
  402a19:	cmc    
  402a1a:	je     0x402a00
  402a1c:	mov    al,0x8c
  402a1e:	xor    DWORD PTR [edi-0x3b],ebp
  402a21:	pop    esi
  402a22:	(bad)  
  402a23:	mov    bl,0x3e
  402a25:	pop    edi
  402a26:	out    0x3e,eax
  402a28:	jnp    0x402a8f
  402a2a:	or     DWORD PTR [edx],esi
  402a2c:	test   DWORD PTR [ebp+0x34a7d165],0x250b26eb
  402a36:	fsub   QWORD PTR [esi-0x3ad76848]
  402a3c:	pop    esi
  402a3d:	and    BYTE PTR [ecx+eiz*4-0x7aff9995],dl
  402a44:	dec    ebx
  402a45:	and    eax,0xdc6b53ce
  402a4a:	sbb    edx,edi
  402a4c:	loope  0x402a88
  402a4e:	enter  0x8010,0x65
  402a52:	fnsave [eax-0x707f07c0]
  402a58:	ficomp WORD PTR [edi-0x42]
  402a5b:	outs   dx,BYTE PTR ds:[esi]
  402a5c:	cld    
  402a5d:	in     al,dx
  402a5e:	mov    ds:0x2e26ff30,al
  402a63:	(bad)  
  402a64:	dec    edi
  402a65:	icebp  
  402a66:	out    0x7,al
  402a68:	ss pop ecx
  402a6a:	or     cl,BYTE PTR ds:0x705f4ec6
  402a70:	jp     0x402a08
  402a72:	xor    edx,DWORD PTR [eax]
  402a74:	(bad)  
  402a75:	in     al,dx
  402a76:	out    0x9f,eax
  402a78:	sbb    ah,BYTE PTR [esi]
  402a7a:	hlt    
  402a7b:	cmp    DWORD PTR [ecx],0x9478eb91
  402a81:	add    eax,0x48193361
  402a86:	mov    DWORD PTR es:[edx+ebp*8+0x7d],ebp
  402a8b:	mov    eax,0x1dd47dc0
  402a90:	and    cl,BYTE PTR [ecx-0x75]
  402a93:	and    eax,0x28b7e8be
  402a98:	ins    BYTE PTR es:[edi],dx
  402a99:	sub    eax,0x3f0c99fb
  402a9e:	dec    eax
  402a9f:	in     eax,dx
  402aa0:	mov    al,0x77
  402aa2:	push   ebx
  402aa3:	hlt    
  402aa4:	cld    
  402aa5:	scas   al,BYTE PTR es:[edi]
  402aa6:	jbe    0x402b21
  402aa8:	jbe    0x402aa5
  402aaa:	pop    esi
  402aab:	ja     0x402a94
  402aad:	add    ax,0x2bd4
  402ab1:	mov    WORD PTR ds:0x6e16cbad,?
  402ab7:	test   ah,dl
  402ab9:	xor    ebx,DWORD PTR [ecx]
  402abb:	mov    bh,BYTE PTR [edi]
  402abd:	call   0x23d72d3c
  402ac2:	or     edx,esi
  402ac4:	pop    esi
  402ac5:	aaa    
  402ac6:	inc    ecx
  402ac7:	inc    ebp
  402ac8:	inc    ebx
  402ac9:	jne    0x402ab8
  402acb:	fistp  WORD PTR [ebx-0x24d5d430]
  402ad1:	or     BYTE PTR [eax+eax*1+0x74],cl
  402ad5:	imul   esp,DWORD PTR [ebp+0x46e9d984],0x6
  402adc:	pop    eax
  402add:	mov    ah,0xf9
  402adf:	mov    dl,0x52
  402ae1:	test   al,0x74
  402ae3:	mov    edi,0x6e52217d
  402ae8:	dec    ebp
  402ae9:	imul   esi,DWORD PTR [edx+0x27],0x4b58111d
  402af0:	(bad)  
  402af1:	cs std 
  402af3:	xchg   ebp,eax
  402af4:	inc    edx
  402af5:	cwde   
  402af6:	das    
  402af7:	es loope 0x402b48
  402afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402afb:	xchg   BYTE PTR [eax-0x58],al
  402afe:	sbb    ebx,DWORD PTR [eax-0x7c96e7b]
  402b04:	or     DWORD PTR [eax],ecx
  402b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b07:	pushf  
  402b08:	daa    
  402b09:	sti    
  402b0a:	leave  
  402b0b:	and    al,0x25
  402b0d:	jle    0x402b53
  402b0f:	jo     0x402ad6
  402b11:	nop
  402b12:	gs xchg ecx,eax
  402b14:	pusha  
  402b15:	jmp    0xc672d8b5
  402b1a:	or     eax,0x5475c9eb
  402b1f:	stos   BYTE PTR es:[edi],al
  402b20:	add    BYTE PTR [esi+0x5f7f43a2],ah
  402b26:	lods   eax,DWORD PTR ds:[esi]
  402b27:	add    eax,0xdd52b176
  402b2c:	cmp    edi,DWORD PTR [ebp+esi*8+0x73]
  402b30:	mov    eax,ds:0xe76bd2c2
  402b35:	jle    0x402b20
  402b37:	push   ecx
  402b38:	jle    0x402ae5
  402b3a:	mov    ch,BYTE PTR [edx]
  402b3c:	mov    ch,0xee
  402b3e:	inc    eax
  402b3f:	mov    BYTE PTR [ebp-0x5c1c2790],ch
  402b45:	lock sbb cl,bh
  402b48:	retf   0x77d6
  402b4b:	mov    ah,0xf0
  402b4d:	bound  edx,QWORD PTR [edx+0x73]
  402b50:	dec    esi
  402b51:	mov    ch,0x18
  402b53:	adc    esi,DWORD PTR [ebx]
  402b55:	adc    cl,BYTE PTR [edx+0x4f]
  402b58:	sbb    eax,0x34b10228
  402b5d:	fiadd  WORD PTR [edi]
  402b5f:	inc    eax
  402b60:	push   ebx
  402b61:	xor    edx,ebp
  402b63:	ins    BYTE PTR es:[edi],dx
  402b64:	jns    0x402bc2
  402b66:	dec    edx
  402b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b68:	dec    ecx
  402b69:	out    0xc7,eax
  402b6b:	lock lock xchg ebx,eax
  402b6e:	sti    
  402b6f:	xchg   BYTE PTR [esi-0x137bdcea],dh
  402b75:	lock call 0x7f431a54
  402b7b:	ja     0x402bf3
  402b7d:	or     al,0x6a
  402b80:	dec    ebx
  402b81:	xlat   BYTE PTR ds:[ebx]
  402b82:	dec    edx
  402b83:	je     0x402ba4
  402b85:	adc    cl,BYTE PTR [eax+0x1c]
  402b88:	neg    BYTE PTR [ebx+0x10]
  402b8b:	jmp    0x402bba
  402b8d:	daa    
  402b8e:	inc    eax
  402b8f:	addr16 or dl,ah
  402b92:	sbb    BYTE PTR [esi],al
  402b94:	(bad)
  402b98:	jnp    0x402c0c
  402b9a:	cmp    DWORD PTR [edx+0x29],edi
  402b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b9e:	test   DWORD PTR [edi],ecx
  402ba0:	cli    
  402ba1:	fstp   TBYTE PTR [eax-0x39deb629]
  402ba7:	and    edx,DWORD PTR [edx]
  402ba9:	(bad)  
  402baa:	pop    es
  402bab:	push   ebx
  402bac:	push   0xcc5de166
  402bb1:	or     DWORD PTR [edx-0x3d5c5710],ebx
  402bb7:	loope  0x402c38
  402bb9:	mov    bl,BYTE PTR [ebx+0x2a4549e4]
  402bbf:	mov    esi,0xb1461d0f
  402bc4:	outs   dx,DWORD PTR ds:[esi]
  402bc5:	enter  0x4ef1,0x44
  402bc9:	push   0xffffffc7
  402bcb:	pop    esp
  402bcc:	in     al,0xff
  402bce:	push   esi
  402bcf:	lods   eax,DWORD PTR ds:[esi]
  402bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bd1:	lods   al,BYTE PTR ds:[esi]
  402bd2:	mov    BYTE PTR [edx],ah
  402bd4:	xchg   esi,eax
  402bd5:	pop    esp
  402bd6:	sub    esp,DWORD PTR [ebx-0x24]
  402bd9:	mov    al,ds:0xfd543ab8
  402bde:	std    
  402bdf:	xor    BYTE PTR [edx],0x55
  402be2:	xor    BYTE PTR [ecx],dl
  402be4:	mov    esi,DWORD PTR [edi+edx*2+0x2162e28]
  402beb:	enter  0xaa61,0x94
  402bef:	rol    dl,1
  402bf1:	(bad)  
  402bf2:	aas    
  402bf3:	test   cl,ch
  402bf5:	scas   al,BYTE PTR es:[edi]
  402bf6:	inc    esi
  402bf7:	xor    ah,BYTE PTR [esi-0x31]
  402bfa:	jp     0x402bce
  402bfc:	test   DWORD PTR [ecx],esp
  402bfe:	sbb    edi,DWORD PTR [eax+0x6c846c7c]
  402c04:	(bad)  
  402c05:	es pop ecx
  402c07:	retf   
  402c08:	in     eax,0x33
  402c0a:	jns    0x402beb
  402c0c:	push   es
  402c0d:	or     BYTE PTR [esi-0x6a],0xa0
  402c11:	push   cs
  402c12:	ficomp DWORD PTR [eax]
  402c14:	xor    BYTE PTR [esi],dh
  402c16:	mov    bh,BYTE PTR ds:[eax-0x3c607d0a]
  402c1d:	adc    al,0x2e
  402c1f:	iret   
  402c20:	jp     0x402bc9
  402c22:	pop    es
  402c23:	and    dh,BYTE PTR [ecx+esi*1]
  402c26:	push   edx
  402c27:	enter  0x2f8c,0x33
  402c2b:	add    esp,edx
  402c2d:	dec    ebp
  402c2e:	inc    eax
  402c2f:	loop   0x402c10
  402c31:	xchg   ecx,eax
  402c32:	jge    0x402c13
  402c34:	pusha  
  402c35:	or     DWORD PTR [bx-0x4f5a],0x895195e
  402c3e:	test   al,0xeb
  402c40:	add    eax,0x175ebfe1
  402c45:	jl     0x402c37
  402c47:	sbb    BYTE PTR [edx-0x21],dh
  402c4a:	dec    esp
  402c4b:	mov    al,ds:0x9738ee05
  402c50:	mov    dl,0x97
  402c52:	ins    BYTE PTR es:[edi],dx
  402c53:	sub    edi,DWORD PTR [edx-0x16]
  402c56:	pop    ds
  402c57:	fdivr  QWORD PTR [edx]
  402c59:	pop    ebp
  402c5a:	ins    BYTE PTR es:[edi],dx
  402c5b:	or     DWORD PTR [ecx-0x7d],edi
  402c5e:	sbb    al,0xb2
  402c60:	(bad)  
  402c61:	ficom  WORD PTR [ecx+0xa]
  402c64:	xchg   esp,eax
  402c65:	inc    esp
  402c66:	mov    WORD PTR [ecx-0x1],?
  402c69:	(bad)  fs:[ecx+esi*2+0x228a8b4]
  402c71:	xchg   edi,eax
  402c72:	jb     0x402c5d
  402c74:	xchg   edi,eax
  402c75:	addr16 jbe 0x402c7d
  402c78:	dec    edi
  402c79:	aam    0xf7
  402c7b:	push   es
  402c7c:	mov    ebx,0xa39e54d0
  402c81:	jno    0x402c8e
  402c83:	xor    DWORD PTR [eax],eax
  402c85:	cli    
  402c86:	retf   0xcf5b
  402c89:	adc    DWORD PTR [ecx+0x2ed09e63],ebp
  402c8f:	xchg   esi,eax
  402c90:	imul   ecx,DWORD PTR [esi],0x5dbfe40e
  402c96:	mov    al,ds:0x87b195b5
  402c9b:	aaa    
  402c9c:	or     esp,ecx
  402c9e:	mov    dl,0xfb
  402ca0:	ret    0x4b3b
  402ca3:	cmp    esi,DWORD PTR [edx-0x3c]
  402ca6:	(bad)  [edi]
  402ca8:	fwait
  402ca9:	mov    eax,ds:0x859cbeb4
  402cae:	cmp    al,0x33
  402cb0:	and    al,0xca
  402cb2:	stc    
  402cb3:	pushw  0x389
  402cb7:	fs pop esp
  402cb9:	(bad)  
  402cba:	in     eax,dx
  402cbb:	adc    DWORD PTR [edi],0x7ed4486f
  402cc1:	lahf   
  402cc2:	mov    edx,0x25a9059b
  402cc7:	mov    ebx,0x157c6d46
  402ccc:	push   es
  402ccd:	in     eax,dx
  402cce:	sti    
  402ccf:	pop    edx
  402cd0:	push   ebp
  402cd1:	jmp    FWORD PTR [edi-0x28ae9745]
  402cd7:	inc    ecx
  402cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cd9:	sbb    ecx,eax
  402cdb:	jne    0x402ce0
  402cdd:	sub    esp,eax
  402cdf:	fsub   DWORD PTR [edx-0x76b90abf]
  402ce5:	mov    ah,0xfb
  402ce7:	xor    BYTE PTR [eax+0x59c78313],ch
  402ced:	les    esi,FWORD PTR [ecx]
  402cef:	call   0x9d264c5e
  402cf4:	into   
  402cf5:	pusha  
  402cf6:	inc    ebx
  402cf7:	push   edx
  402cf8:	add    al,0x67
  402cfa:	mov    DWORD PTR [ebx],eax
  402cfc:	nop    DWORD PTR [edx+0x2e]
  402d00:	pop    ecx
  402d01:	xor    al,0x29
  402d03:	fnstenv ds:0x30684c78
  402d09:	jno    0x402d52
  402d0b:	out    0x85,al
  402d0d:	mov    eax,ds:0xdfd5ef77
  402d12:	and    al,0xbc
  402d14:	mov    bl,BYTE PTR [ecx]
  402d16:	or     eax,ecx
  402d18:	sub    ah,BYTE PTR [esi]
  402d1a:	loopne 0x402d28
  402d1c:	fisub  DWORD PTR [edi+0x45]
  402d1f:	test   DWORD PTR [edi-0x6c3a9ddb],ebp
  402d25:	stos   BYTE PTR es:[edi],al
  402d26:	dec    edi
  402d27:	mov    BYTE PTR [ebp-0x4],ch
  402d2a:	jno    0x402ce6
  402d2c:	pop    ebp
  402d2d:	pop    edx
  402d2e:	or     DWORD PTR [esi],eax
  402d30:	cmp    DWORD PTR [edx-0x57],ebx
  402d33:	xchg   esi,eax
  402d34:	int3   
  402d35:	in     al,0xc7
  402d37:	icebp  
  402d38:	adc    BYTE PTR [ebx+ecx*4-0x2dedbbc9],dh
  402d3f:	pop    ebp
  402d40:	cmp    ah,dl
  402d42:	fsub   st(2),st
  402d44:	fwait
  402d45:	lea    ebp,[ebp-0x5610398a]
  402d4b:	data16 repz mov bl,0x88
  402d4f:	popf   
  402d50:	es and al,0xb7
  402d53:	xor    al,0xe5
  402d55:	mov    cl,BYTE PTR [esi-0x4d59b320]
  402d5b:	pushf  
  402d5c:	mov    dl,0x4d
  402d5e:	xor    DWORD PTR [eax+0x338caf37],ebp
  402d64:	cmp    ch,BYTE PTR [ebp-0x51]
  402d67:	(bad)  
  402d69:	sbb    ah,dl
  402d6b:	fidiv  DWORD PTR [esi]
  402d6d:	(bad)  
  402d6f:	scas   al,BYTE PTR es:[edi]
  402d70:	adc    ecx,DWORD PTR [ebp+0x31b3653c]
  402d76:	int3   
  402d77:	adc    DWORD PTR [eax+ebp*4],edx
  402d7a:	fiadd  WORD PTR [ebp-0x1f4be944]
  402d80:	repz jle 0x402d31
  402d83:	aas    
  402d84:	imul   edx,ebp,0xffffff90
  402d87:	shr    DWORD PTR [ebx],0x8
  402d8a:	out    dx,al
  402d8b:	imul   edx,DWORD PTR [esi+edx*1-0xf8f43cf],0xffffffe0
  402d93:	cs mov eax,0xd08ac455
  402d99:	cmp    BYTE PTR [edi+eiz*8-0x46982e38],0xb0
  402da1:	push   eax
  402da2:	pop    eax
  402da3:	arpl   dx,bx
  402da5:	mov    ds:0xb1b0e46d,al
  402daa:	in     eax,0xae
  402dac:	pop    esi
  402dad:	mov    ebx,0x795645d3
  402db2:	imul   edi,ecx,0x1ab4004f
  402db8:	mov    bh,0xbf
  402dba:	cmp    al,0x90
  402dbc:	(bad)  [ecx-0x5b68fe7e]
  402dc2:	mov    eax,0x4325eb4a
  402dc7:	inc    esi
  402dc8:	cwde   
  402dc9:	adc    BYTE PTR [ecx+0x71],ah
  402dcc:	es icebp 
  402dce:	xchg   ecx,eax
  402dcf:	adc    al,0xbc
  402dd1:	jae    0x402de5
  402dd3:	mov    DWORD PTR [ebp-0x35e79839],edx
  402dd9:	aad    0x1d
  402ddb:	retf   0xcd39
  402dde:	and    ah,bl
  402de0:	add    eax,0x5c371954
  402de5:	pop    ebp
  402de6:	out    dx,eax
  402de7:	xor    al,0x20
  402de9:	neg    dh
  402deb:	mov    dh,dh
  402ded:	inc    eax
  402dee:	(bad)  
  402def:	jmp    0x30c1:0xad6ec90
  402df6:	aad    0xeb
  402df8:	outs   dx,DWORD PTR ds:[esi]
  402df9:	call   0xa4a7633e
  402dfe:	inc    edi
  402dff:	jns    0x402e00
  402e01:	jbe    0x402e63
  402e03:	and    edx,DWORD PTR [ecx+0x509963a6]
  402e09:	cwde   
  402e0a:	jecxz  0x402e53
  402e0c:	xor    eax,0x95499e9a
  402e11:	in     al,0xb3
  402e13:	xlat   BYTE PTR ds:[ebx]
  402e14:	fwait
  402e15:	cld    
  402e16:	jecxz  0x402e05
  402e18:	xor    al,0x71
  402e1a:	cmp    eax,0x6b9630a1
  402e1f:	(bad)  
  402e20:	fistp  QWORD PTR [ebx+0x53]
  402e23:	push   ebp
  402e24:	push   0x5c
  402e26:	sbb    eax,0xd58e670c
  402e2b:	out    dx,eax
  402e2c:	jae    0x402e9e
  402e2e:	cli    
  402e2f:	add    DWORD PTR [ebp-0x2f79ae3f],eax
  402e35:	lea    ecx,[esi+0x36e13436]
  402e3b:	lea    ebx,[edi]
  402e3d:	leave  
  402e3e:	cwde   
  402e3f:	add    bl,BYTE PTR [ebx]
  402e41:	popa   
  402e42:	pop    ss
  402e43:	mov    eax,ds:0xbf691e1e
  402e48:	xchg   esp,eax
  402e49:	and    DWORD PTR [esi-0x17e9acc0],0x5c227a6d
  402e53:	pusha  
  402e54:	lods   eax,DWORD PTR ds:[esi]
  402e55:	cmc    
  402e56:	pop    ebx
  402e57:	(bad)  
  402e58:	pop    ebp
  402e59:	inc    edi
  402e5a:	mov    al,BYTE PTR [eax+ebx*4-0x14]
  402e5e:	sahf   
  402e5f:	sbb    BYTE PTR [eax*1-0x66b60f65],al
  402e66:	xor    eax,0xc070bd9f
  402e6b:	test   DWORD PTR [esp+edx*4-0x5e],edx
  402e6f:	adc    al,0xb
  402e71:	loope  0x402ed2
  402e73:	jg     0x402ee2
  402e75:	cdq    
  402e76:	dec    eax
  402e77:	retf   0x6a48
  402e7a:	jbe    0x402ef5
  402e7c:	and    DWORD PTR [edi],edx
  402e7e:	add    BYTE PTR [esi+0x4f7677c],cl
  402e84:	pop    ebp
  402e85:	daa    
  402e86:	pop    edi
  402e87:	inc    esp
  402e88:	fdiv   DWORD PTR [ebp-0x5356f190]
  402e8e:	push   eax
  402e8f:	dec    esi
  402e90:	mov    dl,0x41
  402e92:	popa   
  402e93:	or     bl,BYTE PTR [ecx+0x5ade689b]
  402e99:	xchg   ebp,eax
  402e9a:	xor    ah,BYTE PTR [edi+0x383e5776]
  402ea0:	dec    ebx
  402ea1:	xchg   esp,eax
  402ea2:	shr    DWORD PTR ds:0x76105c0f,0xc9
  402ea9:	stos   BYTE PTR es:[edi],al
  402eaa:	push   esi
  402eab:	pop    esp
  402eac:	cmc    
  402ead:	mov    esp,0xc492e25c
  402eb2:	outs   dx,BYTE PTR ds:[esi]
  402eb3:	(bad)  
  402eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eb5:	or     bh,BYTE PTR [edi-0x3122bc0f]
  402ebb:	mov    bh,0x36
  402ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ebe:	into   
  402ebf:	jno    0x402f21
  402ec1:	je     0x402f3f
  402ec3:	inc    edi
  402ec4:	(bad)  
  402ec5:	aam    0x17
  402ec7:	add    eax,0xdc2d7c4
  402ecc:	sub    al,dl
  402ece:	push   cs
  402ecf:	mov    esp,0xec8c5f7c
  402ed4:	out    0x50,eax
  402ed6:	add    al,0x9e
  402ed8:	rcr    BYTE PTR [eax-0x71],1
  402edb:	mov    DWORD PTR [ecx+0x6d493a54],ebp
  402ee1:	cmp    al,0xac
  402ee3:	push   0x4f60ca09
  402ee8:	add    BYTE PTR [edx-0x5f910816],bl
  402eee:	pushf  
  402eef:	adc    DWORD PTR [esi+0x14],ecx
  402ef2:	cmp    al,0x2c
  402ef4:	mul    BYTE PTR ds:0xfa799d4
  402efa:	mov    ah,0x50
  402efc:	mov    BYTE PTR [esi-0x4449c589],bl
  402f02:	pop    ebp
  402f03:	lahf   
  402f04:	fwait
  402f05:	loop   0x402f6b
  402f07:	push   edi
  402f08:	sbb    BYTE PTR ds:0x48e452a1,dl
  402f0e:	push   ss
  402f0f:	xlat   BYTE PTR ds:[ebx]
  402f10:	and    al,0xa0
  402f12:	push   0xffffffe3
  402f14:	inc    eax
  402f15:	js     0x402f60
  402f17:	mov    cl,0x73
  402f19:	mov    esp,0xb37a9794
  402f1e:	ror    esi,cl
  402f20:	pop    edx
  402f21:	cwde   
  402f22:	sub    eax,0xc26e1765
  402f27:	pop    ebx
  402f28:	xor    eax,0x8746cf14
  402f2d:	and    eax,0x60b7f448
  402f32:	adc    eax,0x43af1fce
  402f37:	cdq    
  402f38:	inc    edi
  402f39:	jae    0x402fa8
  402f3b:	aas    
  402f3c:	cs out 0x2d,al
  402f3f:	jl     0x402fb9
  402f41:	xchg   ebx,eax
  402f42:	cmp    eax,0x1134de7a
  402f47:	ja     0x402f60
  402f49:	xchg   edi,eax
  402f4a:	loopne 0x402f1e
  402f4c:	dec    ecx
  402f4d:	loopne 0x402f0a
  402f4f:	(bad)  
  402f50:	jae    0x402ef3
  402f52:	pusha  
  402f53:	push   ebx
  402f54:	jb     0x402fc1
  402f56:	call   edi
  402f58:	ror    DWORD PTR [esi-0x730053e3],cl
  402f5e:	jo     0x402f00
  402f60:	add    DWORD PTR [esp+ebp*2-0x1d3f16e4],edx
  402f67:	ins    DWORD PTR es:[edi],dx
  402f68:	mov    ?,WORD PTR [ecx-0x3bc74166]
  402f6e:	outs   dx,BYTE PTR ds:[esi]
  402f6f:	dec    ecx
  402f70:	add    ah,BYTE PTR [eax+0x393e6abb]
  402f76:	push   0x5f
  402f78:	(bad)  
  402f79:	xchg   esp,eax
  402f7a:	imul   DWORD PTR [edi-0x33]
  402f7d:	cld    
  402f7e:	ret    
  402f7f:	das    
  402f80:	sub    al,0x57
  402f82:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f84:	mov    edx,0x5912a708
  402f89:	ud1    esi,ebp
  402f8c:	jmp    0xa1cf:0xd2c500f2
  402f93:	add    dh,BYTE PTR [ecx+0x3249966d]
  402f99:	mov    bl,0xa0
  402f9b:	stos   DWORD PTR es:[edi],eax
  402f9c:	mul    DWORD PTR [edx]
  402f9e:	mov    edi,0x7831702f
  402fa3:	in     eax,0x75
  402fa5:	repnz pop ecx
  402fa7:	dec    esp
  402fa8:	push   es
  402fa9:	fistp  QWORD PTR [edi+0x4dab17ab]
  402faf:	mov    edx,0xf32fc6f6
  402fb4:	sbb    ch,BYTE PTR [ecx]
  402fb6:	retf   
  402fb7:	mov    edx,0x3dbae926
  402fbc:	imul   esi,DWORD PTR [ebp-0x2b],0xa13ffed4
  402fc3:	sti    
  402fc4:	and    eax,0xf8799adb
  402fc9:	and    ebx,ecx
  402fcb:	or     eax,0x6a83144b
  402fd0:	cwde   
  402fd1:	scas   al,BYTE PTR es:[edi]
  402fd2:	imul   edi,DWORD PTR [ecx],0x8fc0e8ca
  402fd8:	sbb    dl,BYTE PTR [esi+0x71]
  402fdb:	adc    eax,0x21d83cfa
  402fe0:	adc    edi,DWORD PTR [ebp+0x4f5c5bfc]
  402fe6:	int    0x26
  402fe8:	pop    esp
  402fe9:	test   DWORD PTR [edi],0x2cfb1fc3
  402fef:	xchg   ecx,eax
  402ff0:	ret    
  402ff1:	jmp    0xbb03c98
  402ff6:	call   0x77d3506b
  402ffb:	xor    BYTE PTR [eax],0xca
  402ffe:	pop    esi
  402fff:	es jmp 0x3dd435af
  403005:	out    0xcf,al
  403007:	lahf   
  403008:	out    dx,al
  403009:	lea    esp,[edi+0xb55192a]
  40300f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403010:	popf   
  403011:	ss or  ah,0x69
  403015:	push   0x5e
  403017:	sbb    BYTE PTR [esi],ch
  403019:	daa    
  40301a:	cmp    DWORD PTR [eax+edi*2],edi
  40301d:	fldenv [ecx]
  40301f:	in     al,dx
  403020:	int    0xbf
  403022:	xchg   DWORD PTR [edi-0x7c],eax
  403025:	fstp   TBYTE PTR [ebx+0x1ed8e173]
  40302b:	xchg   edi,eax
  40302c:	inc    ebx
  40302d:	fsubr  QWORD PTR [edi+0x30a4e838]
  403033:	mov    ebx,0x79d81830
  403038:	push   ebp
  403039:	les    edx,FWORD PTR [ebx+0x683500c4]
  40303f:	fst    QWORD PTR [ecx+0x3e]
  403042:	add    ebp,DWORD PTR [esi]
  403044:	inc    edx
  403045:	sub    bl,BYTE PTR [eax-0x54]
  403048:	jl     0x403002
  40304a:	mov    BYTE PTR [edx+0x41fb8188],cl
  403050:	sbb    DWORD PTR [esi-0x37],ebp
  403053:	sbb    al,0xf9
  403055:	mov    DWORD PTR [ecx-0x29],ecx
  403058:	std    
  403059:	jo     0x403003
  40305b:	cmp    eax,0x9984320e
  403060:	dec    esp
  403061:	lahf   
  403062:	out    dx,eax
  403063:	addr16 cwde 
  403065:	icebp  
  403066:	sahf   
  403067:	or     DWORD PTR [eax-0x42],esi
  40306a:	mov    eax,0x464de1fc
  40306f:	outs   dx,BYTE PTR ds:[esi]
  403070:	jp     0x4030e7
  403072:	xchg   edi,eax
  403073:	mov    esp,0x6a457142
  403078:	inc    esp
  403079:	test   BYTE PTR [edx],ah
  40307b:	inc    ecx
  40307c:	fisubr DWORD PTR [ebp-0x24ef794c]
  403082:	pop    ds
  403083:	not    DWORD PTR [ebx]
  403085:	inc    edi
  403086:	mov    edi,DWORD PTR [edi]
  403088:	cmp    eax,0x27b9e55e
  40308d:	rcl    DWORD PTR [esi+0x112b539f],1
  403093:	in     al,dx
  403094:	or     edi,DWORD PTR [edx]
  403096:	and    BYTE PTR [edi-0x65],bl
  403099:	push   es
  40309a:	lahf   
  40309b:	sub    bl,BYTE PTR [ebx]
  40309d:	scas   al,BYTE PTR es:[edi]
  40309e:	and    esi,DWORD PTR [eax+0x4aa7c458]
  4030a4:	les    edx,FWORD PTR [ecx]
  4030a6:	add    ah,BYTE PTR ds:0xae94f97c
  4030ac:	(bad)  
  4030ad:	push   ss
  4030ae:	out    dx,al
  4030af:	and    cl,BYTE PTR ss:[ebx+0x70]
  4030b3:	xchg   DWORD PTR [edi-0x5d],edx
  4030b6:	sub    esp,DWORD PTR ds:0x66bc7806
  4030bc:	rcr    ebp,0x4f
  4030bf:	jl     0x4030df
  4030c1:	out    dx,eax
  4030c2:	push   ebp
  4030c3:	push   edx
  4030c4:	inc    ecx
  4030c5:	pop    ebx
  4030c6:	(bad)  
  4030c7:	fidivr DWORD PTR [edi+0x53]
  4030ca:	ja     0x4030b2
  4030cc:	dec    ebp
  4030cd:	call   0xe895274d
  4030d2:	pop    ds
  4030d3:	inc    ebp
  4030d4:	adc    al,0xb7
  4030d6:	fucom  st(7)
  4030d8:	sub    ebp,edi
  4030da:	mov    bl,0x89
  4030dc:	and    al,0x99
  4030de:	out    0xae,al
  4030e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030e1:	fdiv   DWORD PTR ds:0xce971af0
  4030e7:	mov    esi,0x787f9c59
  4030ec:	pushf  
  4030ed:	mov    ebx,0x4b02aa93
  4030f2:	daa    
  4030f3:	pop    esi
  4030f4:	jno    0x4030eb
  4030f6:	xor    DWORD PTR [edi],ebx
  4030f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030f9:	cwde   
  4030fa:	jle    0x4030ae
  4030fc:	push   edx
  4030fd:	dec    ecx
  4030fe:	jne    0x403089
  403100:	mov    ah,0xfd
  403102:	sbb    BYTE PTR [edi+0x40cb60ff],0x84
  403109:	xor    al,0xb
  40310b:	jbe    0x40317c
  40310d:	mov    ah,ah
  40310f:	push   eax
  403110:	adc    DWORD PTR [edx],ebx
  403112:	enter  0x6c2,0xfd
  403116:	or     ebx,DWORD PTR [bx+di-0x7f]
  40311a:	or     BYTE PTR [ecx],0x31
  40311d:	push   ds
  40311e:	and    al,0x64
  403120:	sbb    DWORD PTR [ecx],ebx
  403122:	int    0x3c
  403124:	jne    0x40310f
  403126:	jnp    0x40315a
  403128:	out    dx,al
  403129:	adc    ecx,DWORD PTR [esp+esi*8]
  40312c:	ins    DWORD PTR es:[edi],dx
  40312d:	sub    eax,0x93794072
  403132:	mov    ds:0xc1fe31b6,al
  403137:	fcmove st,st(6)
  403139:	mov    eax,0x6ff9a90b
  40313e:	dec    ebp
  40313f:	push   0xb768d803
  403144:	int3   
  403145:	je     0x403175
  403147:	ins    BYTE PTR es:[edi],dx
  403148:	mov    bl,0x3
  40314a:	setb   BYTE PTR [edx]
  40314d:	dec    esi
  40314e:	aaa    
  40314f:	xchg   ebp,eax
  403150:	pop    esp
  403151:	jae    0x403129
  403153:	out    0xcd,eax
  403155:	jmp    0x6dd71c49
  40315a:	cdq    
  40315b:	xchg   esi,eax
  40315c:	repz or BYTE PTR [edx+0x426e74a5],ah
  403163:	mov    WORD PTR [ebx],gs
  403165:	inc    eax
  403166:	and    eax,0x8b85e4b4
  40316b:	cmc    
  40316c:	(bad)  
  40316d:	sbb    eax,0xe42cbbfa
  403172:	loop   0x40317b
  403174:	xor    DWORD PTR [ecx-0x3870a7cf],0xffffff8c
  40317b:	mov    esi,0xdbf51575
  403180:	mov    dl,0x52
  403182:	cdq    
  403183:	or     dl,bl
  403185:	stos   DWORD PTR es:[edi],eax
  403186:	daa    
  403187:	outs   dx,BYTE PTR ds:[esi]
  403188:	popa   
  403189:	jp     0x403144
  40318b:	add    ecx,DWORD PTR [esi-0x126077]
  403191:	outs   dx,BYTE PTR ds:[esi]
  403192:	xchg   edx,eax
  403193:	(bad)  
  403194:	adc    DWORD PTR [edi+ecx*2-0x4e561d29],ecx
  40319b:	sbb    al,0x80
  40319d:	pop    ecx
  40319e:	(bad)  
  40319f:	in     eax,0x9e
  4031a1:	push   edi
  4031a2:	jl     0x4031a1
  4031a4:	imul   esp,ebp,0xc7451dfb
  4031aa:	icebp  
  4031ab:	push   0x93f00616
  4031b0:	sbb    cl,ah
  4031b2:	inc    ebp
  4031b3:	out    dx,eax
  4031b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031b5:	(bad)
  4031b8:	cmp    BYTE PTR [ecx+0xad52d10],bh
  4031be:	or     eax,0x336ca4d9
  4031c3:	mov    ebx,DWORD PTR [edx+edx*4-0x6cce3f87]
  4031ca:	sbb    al,0x45
  4031cc:	mov    dl,0x10
  4031ce:	xchg   ebp,eax
  4031cf:	adc    al,0x2a
  4031d1:	jae    0x403221
  4031d3:	dec    eax
  4031d4:	dec    ecx
  4031d5:	ret    
  4031d6:	mov    ebp,0xc2bf8c69
  4031db:	mov    bl,0x8d
  4031dd:	sbb    DWORD PTR [ebp+0xd69a0fc],edx
  4031e3:	xchg   BYTE PTR [ecx+eax*4+0x32b0bcb],bh
  4031ea:	sbb    DWORD PTR [ecx],edx
  4031ec:	call   0xc22517db
  4031f1:	ja     0x403271
  4031f3:	pop    esp
  4031f4:	jmp    0x170c8f63
  4031f9:	jb     0x4031f5
  4031fb:	in     al,dx
  4031fc:	in     al,dx
  4031fd:	mov    esp,0xda8a3800
  403202:	(bad)  
  403203:	dec    ebx
  403204:	repz js 0x4031d5
  403207:	sar    BYTE PTR [ebx+0x2b6f3f3],1
  40320d:	or     edx,DWORD PTR [esi]
  40320f:	daa    
  403210:	add    al,0x28
  403212:	rcl    DWORD PTR [edi],0x2e
  403215:	or     eax,0xd76a9c1
  40321a:	aas    
  40321b:	and    BYTE PTR ds:0x219d7cbf,ah
  403221:	rol    DWORD PTR [eax+0x7e241d99],cl
  403227:	pop    ecx
  403228:	dec    edi
  403229:	lds    esp,FWORD PTR [eax]
  40322b:	stc    
  40322c:	stos   BYTE PTR es:[edi],al
  40322d:	inc    ecx
  40322e:	adc    DWORD PTR [ebp-0x3a2ada40],esi
  403234:	icebp  
  403235:	sub    eax,0xf42d02d5
  40323a:	add    ecx,DWORD PTR [edi+0x71ca1a00]
  403240:	ss mov bl,0xe3
  403243:	nop
  403244:	cs fwait
  403246:	jle    0x403289
  403248:	div    BYTE PTR [esi-0x34c3085d]
  40324e:	dec    edx
  40324f:	xchg   edx,eax
  403250:	out    0x88,eax
  403252:	sti    
  403253:	in     al,0xbc
  403255:	add    eax,0x3f844f6e
  40325a:	inc    edx
  40325b:	retf   
  40325c:	or     al,dl
  40325e:	loop   0x4032a1
  403260:	and    al,0xa4
  403262:	mov    eax,ds:0x1f51c2d5
  403267:	popf   
  403268:	inc    eax
  403269:	sub    DWORD PTR [ecx],edi
  40326b:	xchg   esp,eax
  40326c:	cmc    
  40326d:	xchg   DWORD PTR [esi],edx
  40326f:	jne    0x4032c9
  403271:	add    cl,BYTE PTR [edx+0xe493cb]
  403277:	sub    BYTE PTR [ebx+0x3772069b],al
  40327d:	mov    al,ds:0x3f63bbba
  403282:	xchg   edi,eax
  403283:	aas    
  403284:	jnp    0x403218
  403286:	sbb    al,0xce
  403288:	outs   dx,BYTE PTR ds:[esi]
  403289:	push   ss
  40328a:	shl    BYTE PTR [ebx],1
  40328c:	sbb    DWORD PTR [ecx+0x5f],ecx
  40328f:	adc    eax,0xeeade063
  403294:	fwait
  403295:	pop    ss
  403296:	sahf   
  403297:	addr16 ret 
  403299:	or     DWORD PTR [ebx+eax*8-0x6c],esi
  40329d:	fcmovbe st,st(4)
  40329f:	dec    edx
  4032a0:	fwait
  4032a1:	xchg   esi,eax
  4032a2:	mov    ds:0xb6a23125,al
  4032a7:	ins    BYTE PTR es:[edi],dx
  4032a8:	dec    edi
  4032a9:	adc    al,BYTE PTR ds:0x53ffe46b
  4032af:	push   ds
  4032b0:	scas   al,BYTE PTR es:[edi]
  4032b1:	or     al,0xc5
  4032b3:	out    0xe2,al
  4032b5:	jae    0x403240
  4032b7:	shl    DWORD PTR [esp+edi*2+0x23ef25ba],0x8f
  4032bf:	jae    0x403312
  4032c1:	dec    ebx
  4032c2:	lods   eax,DWORD PTR ds:[esi]
  4032c3:	icebp  
  4032c4:	pop    es
  4032c5:	(bad)  
  4032c6:	shr    BYTE PTR [esi],cl
  4032c8:	push   ss
  4032c9:	test   esp,esp
  4032cb:	mov    dl,0x6d
  4032cd:	and    eax,0x7ff62e7a
  4032d2:	sbb    eax,0xaf484445
  4032d7:	sub    DWORD PTR [edx+0x2f],esi
  4032da:	pushf  
  4032db:	adc    edi,DWORD PTR [ecx]
  4032dd:	pushf  
  4032de:	cmp    BYTE PTR [edi+edi*8-0x5f61a994],0x8
  4032e6:	int3   
  4032e7:	adc    ebp,DWORD PTR [esi]
  4032e9:	mov    esi,0x95b27eea
  4032ee:	add    DWORD PTR [eax],0x37
  4032f1:	in     eax,0x3b
  4032f3:	mov    eax,ds:0x81d105c6
  4032f8:	pusha  
  4032f9:	xor    DWORD PTR es:[ebp-0x41],ebp
  4032fd:	in     al,dx
  4032fe:	push   0x18
  403300:	jmp    0x403286
  403302:	icebp  
  403303:	cmp    DWORD PTR [edx+0x115c4798],esp
  403309:	dec    esp
  40330a:	daa    
  40330b:	cmp    BYTE PTR [ebp+0x22],ch
  40330e:	cdq    
  40330f:	sub    bh,BYTE PTR [esi+0x5e]
  403312:	je     0x4032d1
  403314:	dec    edi
  403315:	dec    edx
  403316:	call   0x60a3:0x72c06b38
  40331d:	mov    edx,0x68655ede
  403322:	cli    
  403323:	cld    
  403324:	bound  ebx,QWORD PTR [esi]
  403326:	sti    
  403327:	cli    
  403328:	cmp    al,0x88
  40332a:	fptan  
  40332c:	and    al,ch
  40332e:	fs pusha 
  403330:	dec    eax
  403331:	sbb    dh,dh
  403333:	push   edx
  403334:	pop    ebp
  403335:	cdq    
  403336:	sbb    cl,BYTE PTR [esi-0x1e]
  403339:	ret    0x8f85
  40333c:	push   0xa44e7bc5
  403341:	mov    bh,0x6f
  403343:	fcomp  QWORD PTR [ebx]
  403345:	push   ss
  403346:	adc    BYTE PTR [ebp-0x52],dh
  403349:	loope  0x403370
  40334b:	es mov ebx,0x7b1b4122
  403351:	xor    dh,dh
  403353:	adc    al,0xc
  403355:	ss mov al,dh
  403358:	pop    es
  403359:	cld    
  40335a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40335b:	and    ecx,DWORD PTR [eax+0x2bd0a551]
  403361:	pusha  
  403362:	dec    ebx
  403363:	mov    gs,WORD PTR [eax-0x2dbbb82f]
  403369:	in     al,0xc5
  40336b:	xchg   BYTE PTR [ebp-0x69],dh
  40336e:	pop    esp
  40336f:	jmp    DWORD PTR [ebp+0x63]
  403372:	(bad)  
  403374:	xchg   ecx,eax
  403375:	retf   
  403376:	sbb    bl,dh
  403378:	sar    BYTE PTR [eax],0x70
  40337b:	xlat   BYTE PTR fs:[ebx]
  40337d:	in     al,dx
  40337e:	xchg   ebp,eax
  40337f:	loop   0x40331f
  403381:	(bad)  
  403382:	sub    ebp,DWORD PTR [edx+0x31777a25]
  403388:	dec    eax
  403389:	arpl   WORD PTR [eax+0x59],si
  40338c:	mov    ah,ah
  40338e:	lock mov eax,ds:0xa7e504cd
  403394:	mov    edx,0xd0f53d96
  403399:	jmp    0x4033a0
  40339b:	mov    DWORD PTR [eax-0x2c25b358],0x29d58929
  4033a5:	test   BYTE PTR [esi-0x2e],0x9f
  4033a9:	pop    ebx
  4033aa:	mov    dh,0x26
  4033ac:	out    0xaf,eax
  4033ae:	and    eax,DWORD PTR [ecx+0x43a7f5cd]
  4033b4:	xchg   ecx,eax
  4033b5:	stos   DWORD PTR es:[edi],eax
  4033b6:	dec    edi
  4033b7:	in     al,dx
  4033b8:	jnp    0x40337c
  4033ba:	repz push ebp
  4033bc:	fist   DWORD PTR [esi-0x1a8e1da9]
  4033c2:	push   ecx
  4033c3:	sub    eax,0xdcf2890a
  4033c8:	lods   al,BYTE PTR ds:[esi]
  4033c9:	loope  0x403369
  4033cb:	pop    edx
  4033cc:	pop    ss
  4033cd:	mov    DWORD PTR [edx],ebp
  4033cf:	xor    ecx,DWORD PTR [edx-0x74]
  4033d2:	pusha  
  4033d3:	cmp    DWORD PTR [edx+0x41],eax
  4033d6:	int    0xcb
  4033d8:	ins    DWORD PTR es:[edi],dx
  4033d9:	and    BYTE PTR [edx+0x2d7dc590],0xca
  4033e0:	adc    DWORD PTR [ecx],0x24
  4033e3:	and    BYTE PTR [esp+ebx*4],dl
  4033e6:	data16 add BYTE PTR [esi+0x7],dl
  4033ea:	add    eax,0xe374eb48
  4033ef:	ficom  DWORD PTR [esi-0x42364a4f]
  4033f5:	adc    DWORD PTR [ebx+0x37d01437],0xd255555c
  4033ff:	mov    eax,fs
  403401:	and    DWORD PTR [ebx+ebp*1-0x5f],eax
  403405:	pop    es
  403406:	in     al,0x21
  403408:	in     al,0x9f
  40340a:	fcomp  DWORD PTR [edx+0x28]
  40340d:	cmc    
  40340e:	lods   eax,DWORD PTR ds:[esi]
  40340f:	and    edi,DWORD PTR [ecx]
  403411:	mov    edi,0x11db5b90
  403416:	push   ecx
  403417:	sbb    eax,0x2869df07
  40341c:	sti    
  40341d:	ins    BYTE PTR es:[edi],dx
  40341e:	outs   dx,DWORD PTR ds:[esi]
  40341f:	mov    bl,0x28
  403421:	aas    
  403422:	rcr    ebp,0x45
  403425:	in     al,dx
  403426:	mov    ds:0x1d45b89e,eax
  40342b:	sub    al,0x2f
  40342d:	push   ds
  40342e:	mov    ?,WORD PTR [ebx-0x670843a0]
  403434:	pop    eax
  403435:	jnp    0x403490
  403437:	cwde   
  403438:	mov    dl,0x1c
  40343a:	cdq    
  40343b:	lahf   
  40343c:	(bad)  
  40343d:	out    dx,al
  40343e:	pop    es
  40343f:	sub    BYTE PTR [esi-0x39],cl
  403442:	xchg   DWORD PTR [ebx-0x3e8aa8ac],edx
  403448:	sub    ebp,DWORD PTR [esp+esi*2]
  40344b:	pop    ebx
  40344c:	or     eax,0xb1f888c4
  403451:	pop    edi
  403452:	js     0x403410
  403454:	dec    ebx
  403455:	xchg   esi,eax
  403456:	es loopne 0x4034b0
  403459:	or     eax,0x73a4b6df
  40345e:	push   0xa46013c2
  403463:	jae    0x4034a8
  403465:	push   esp
  403466:	aad    0x3a
  403468:	fcmovnbe st,st(4)
  40346a:	push   ss
  40346b:	sbb    DWORD PTR [edx+0x1526e8a5],0x6b6824c8
  403475:	mov    edx,0xff22da6d
  40347a:	loopne 0x40343a
  40347c:	dec    eax
  40347d:	sub    ecx,DWORD PTR [ecx-0x54ddba1a]
  403483:	pushf  
  403484:	pop    edi
  403485:	repnz xchg ecx,eax
  403487:	jmp    0x6027016b
  40348c:	mov    ecx,0x1bd1de8a
  403491:	adc    al,BYTE PTR [eax*4-0x5f3a8109]
  403498:	ins    DWORD PTR es:[edi],dx
  403499:	in     al,0x93
  40349b:	push   es
  40349c:	shr    edx,1
  40349e:	xor    eax,edi
  4034a0:	iret   
  4034a1:	ds fwait
  4034a3:	sti    
  4034a4:	jnp    0x403477
  4034a6:	ins    BYTE PTR es:[edi],dx
  4034a7:	ror    DWORD PTR [edx-0xc],1
  4034aa:	jp     0x4034d3
  4034ac:	mov    edx,0xa0fa7c49
  4034b1:	mov    esi,0xd9f6d1e3
  4034b6:	cdq    
  4034b7:	lock fst QWORD PTR [ecx+edx*2+0x5a]
  4034bc:	aas    
  4034bd:	les    esi,FWORD PTR [ecx+0x67]
  4034c0:	in     eax,dx
  4034c1:	iret   
  4034c2:	lods   eax,DWORD PTR ds:[esi]
  4034c3:	pop    ss
  4034c4:	adc    eax,0x9b4f1ea0
  4034c9:	pop    edx
  4034ca:	inc    edi
  4034cb:	das    
  4034cc:	adc    eax,0x6cd890d4
  4034d1:	out    dx,eax
  4034d2:	sar    DWORD PTR [ebx],0x44
  4034d5:	xchg   edx,eax
  4034d6:	pop    eax
  4034d7:	dec    ebx
  4034d9:	jmp    0xf3b14238
  4034de:	push   ebx
  4034df:	xor    dl,cl
  4034e1:	loope  0x40354b
  4034e3:	repnz retf 
  4034e5:	add    esp,edx
  4034e7:	add    eax,0x530a03f5
  4034ec:	repnz push es
  4034ee:	leave  
  4034ef:	push   cs
  4034f0:	loopne 0x403515
  4034f2:	shl    DWORD PTR [ebp+0x6],0x8a
  4034f6:	mov    ds:0x552f879a,eax
  4034fb:	scas   al,BYTE PTR es:[edi]
  4034fc:	test   al,0x48
  4034fe:	cld    
  4034ff:	jg     0x4034da
  403501:	and    dl,BYTE PTR [ebp+0x19]
  403504:	jo     0x4034f0
  403506:	jbe    0x403526
  403508:	mov    DWORD PTR [eiz*2+0x2c1978d3],esp
  40350f:	sbb    dh,BYTE PTR [eax+0x5804e2c5]
  403515:	adc    DWORD PTR [eax],ecx
  403517:	loop   0x4034a6
  403519:	les    edx,FWORD PTR [edi-0x5871c4af]
  40351f:	jp     0x40352e
  403521:	cmp    BYTE PTR [ecx-0x2b0af465],ah
  403527:	push   0xb136a4e5
  40352c:	nop
  40352d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40352e:	jb     0x4034db
  403530:	mov    edx,0x21bbfff4
  403535:	test   DWORD PTR [eax],ebx
  403537:	in     al,dx
  403538:	es test al,0xdc
  40353b:	jo     0x40359c
  40353d:	test   cl,dh
  40353f:	in     al,dx
  403540:	js     0x4034d5
  403542:	lds    eax,FWORD PTR [ecx+esi*4]
  403545:	out    dx,eax
  403546:	das    
  403547:	repz in eax,dx
  403549:	test   eax,0x622ffec8
  40354e:	sbb    al,0x53
  403550:	sbb    BYTE PTR [ecx+0x717dff7e],al
  403556:	lahf   
  403557:	in     al,0x6d
  403559:	mov    edx,0x623e1854
  40355e:	rcr    BYTE PTR [ecx+0x1579bb7d],cl
  403564:	cld    
  403565:	(bad)  
  403566:	std    
  403567:	retf   0x2a08
  40356a:	mov    ecx,0xbc41033
  40356f:	mov    edx,0x8f005ac5
  403574:	push   ebp
  403575:	sub    BYTE PTR [esi+0x4f],bh
  403578:	loope  0x4035d9
  40357a:	hlt    
  40357b:	push   0x71353d7b
  403580:	add    eax,0xf2b69f06
  403585:	(bad)  
  403586:	popf   
  403587:	or     al,bh
  403589:	push   ss
  40358a:	int3   
  40358b:	loope  0x403532
  40358d:	inc    ebp
  40358e:	icebp  
  40358f:	add    cl,BYTE PTR [edx-0x6]
  403592:	jne    0x40359c
  403594:	cmp    eax,0x60a7fb19
  403599:	inc    ebp
  40359a:	xchg   edx,eax
  40359b:	leave  
  40359c:	fisub  WORD PTR [esi+0x1e]
  40359f:	cmp    cl,cl
  4035a1:	imul   ebx,DWORD PTR [esi-0x10],0xba72fa69
  4035a8:	sub    dl,BYTE PTR [ebx+0x71]
  4035ab:	lods   eax,DWORD PTR ds:[esi]
  4035ac:	repnz das 
  4035ae:	push   0x2a
  4035b0:	and    BYTE PTR [edx-0x67],ah
  4035b3:	and    BYTE PTR [esi+0x4660a7a6],dl
  4035b9:	jmp    0xaeb:0x8fa1cfa8
  4035c0:	pop    es
  4035c1:	pushf  
  4035c2:	jl     0x40356d
  4035c4:	mov    al,0x69
  4035c6:	or     eax,0xa0649205
  4035cb:	push   esp
  4035cc:	inc    ebx
  4035cd:	scas   eax,DWORD PTR es:[edi]
  4035ce:	leave  
  4035cf:	lock mov ds:0x3139d95e,al
  4035d5:	cdq    
  4035d6:	push   eax
  4035d7:	adc    DWORD PTR [edi-0x5],ebp
  4035da:	inc    ecx
  4035db:	scas   eax,DWORD PTR es:[edi]
  4035dc:	xlat   BYTE PTR ds:[ebx]
  4035dd:	mov    dh,0x61
  4035df:	cld    
  4035e0:	(bad)  
  4035e1:	lahf   
  4035e2:	retf   0xe4f
  4035e5:	xor    eax,0xd0c85ddf
  4035ea:	sub    eax,0x1ff1f518
  4035ef:	mov    dh,0x27
  4035f1:	std    
  4035f2:	fdivr  DWORD PTR [edx]
  4035f4:	mov    DWORD PTR [eax+0x457a433b],ecx
  4035fa:	shl    BYTE PTR [edx+ebp*2+0x49aebc6f],1
  403601:	ds or  edx,esi
  403604:	push   eax
  403605:	repz sub eax,0xd5ea72e3
  40360b:	mov    ss,WORD PTR [ebp+0x3e]
  40360e:	scas   eax,DWORD PTR es:[edi]
  40360f:	and    ecx,ebx
  403611:	stos   BYTE PTR es:[edi],al
  403612:	xchg   ecx,eax
  403613:	xchg   ebx,eax
  403614:	(bad)  
  403616:	xchg   ecx,eax
  403617:	cdq    
  403618:	adc    DWORD PTR [edx],ebx
  40361a:	pop    ss
  40361b:	mov    esp,0xeba6cea5
  403620:	in     al,dx
  403621:	mov    DWORD PTR [ecx-0x5e7a9dac],ecx
  403627:	pop    es
  403628:	sbb    ah,BYTE PTR [ecx-0x42]
  40362b:	mov    ah,0x5e
  40362d:	punpcklbw mm1,DWORD PTR [eax]
  403630:	std    
  403631:	pusha  
  403632:	test   DWORD PTR [ebp+0x5e5cd9e8],0x978fc1f9
  40363c:	dec    edi
  40363d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40363e:	adc    BYTE PTR es:[ecx+esi*8+0xc0bc751],bl
  403646:	pop    ss
  403647:	cmp    eax,ebp
  403649:	ja     0x4035d5
  40364b:	pop    ecx
  40364c:	mov    dl,BYTE PTR [esp+esi*1-0x3a]
  403650:	or     DWORD PTR [ecx],eax
  403652:	dec    esp
  403653:	sub    bh,ah
  403655:	jmp    0xbf332ba6
  40365a:	adc    al,0xa5
  40365c:	mov    bh,0xe6
  40365e:	ficomp DWORD PTR [ecx]
  403660:	pop    ss
  403661:	je     0x40367e
  403663:	out    dx,eax
  403664:	xchg   edi,eax
  403665:	xchg   ebp,eax
  403666:	mov    ds:0x8b29d91d,al
  40366b:	retf   0xf096
  40366e:	and    eax,0x27e5ffb6
  403673:	call   0xac77:0x1cee5689
  40367a:	mov    cl,BYTE PTR [ebx]
  40367c:	mov    cl,BYTE PTR [edi-0x56]
  40367f:	inc    ecx
  403680:	mov    ebp,0xa214439e
  403685:	ins    DWORD PTR es:[edi],dx
  403686:	psrlq  mm5,mm6
  403689:	jae    0x403617
  40368b:	mov    bl,0x5b
  40368d:	(bad)  
  40368e:	out    0x70,eax
  403690:	sub    al,0x3
  403692:	dec    edi
  403693:	(bad)  
  403694:	jmp    0x6903:0x764cc8b3
  40369b:	sbb    bl,dl
  40369d:	sub    dl,BYTE PTR [esp+esi*2]
  4036a0:	shl    DWORD PTR [ebp-0x4e],cl
  4036a3:	jno    0x40362a
  4036a5:	dec    ebx
  4036a6:	adc    eax,0xc701a6f3
  4036ab:	ja     0x4036d2
  4036ad:	test   eax,0x3ea3dbb7
  4036b2:	pop    edx
  4036b3:	neg    DWORD PTR [esi+0x11]
  4036b6:	jns    0x40371b
  4036b8:	pop    es
  4036b9:	dec    esi
  4036ba:	loopne 0x40364a
  4036bc:	fucomp st(6)
  4036be:	sub    BYTE PTR [edi],dh
  4036c0:	mov    eax,0x7df60f3
  4036c5:	repz fwait
  4036c7:	fwait
  4036c8:	mov    WORD PTR [ebp-0x7c7fb5fc],?
  4036ce:	(bad)  
  4036cf:	das    
  4036d0:	sbb    dh,bl
  4036d2:	sub    al,0xab
  4036d5:	rcr    BYTE PTR [ecx+0x44],1
  4036d8:	dec    eax
  4036d9:	fbld   TBYTE PTR [edi-0x25]
  4036dc:	clc    
  4036dd:	pop    esp
  4036de:	mov    ebx,DWORD PTR [edx-0x69]
  4036e1:	sbb    eax,0x3cfc7586
  4036e6:	push   edi
  4036e7:	call   0x80fb:0x275d5a9a
  4036ee:	mov    dl,0xe6
  4036f0:	loop   0x40372c
  4036f2:	cmp    BYTE PTR [ebx+0x31],al
  4036f5:	lock jne 0x403714
  4036f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036f9:	xchg   esi,eax
  4036fa:	out    0x7a,al
  4036fc:	std    
  4036fd:	mov    ecx,0xfdd37781
  403702:	or     al,0xe3
  403704:	fmul   st,st(0)
  403706:	(bad)  
  403708:	mov    esi,0xd967e14b
  40370d:	mov    bl,0x63
  40370f:	sbb    eax,0x74b33a55
  403714:	pushf  
  403715:	mov    ah,0xb7
  403717:	gs dec edi
  403719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40371a:	xor    ch,BYTE PTR [ecx]
  40371c:	xor    BYTE PTR [ecx+0x1f],dh
  40371f:	xchg   edx,eax
  403720:	(bad)  
  403721:	dec    ecx
  403722:	cld    
  403723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403724:	iret   
  403725:	and    eax,ebx
  403727:	pop    ss
  403728:	pop    esp
  403729:	cld    
  40372a:	push   0xdb57fd57
  40372f:	mov    bh,0x76
  403731:	(bad)  
  403732:	in     eax,0xe7
  403734:	in     al,dx
  403735:	add    BYTE PTR [edx+eax*8+0x265876aa],al
  40373c:	ror    BYTE PTR [eax-0x4d],0x51
  403740:	mov    dh,0x45
  403742:	out    0x3f,eax
  403744:	add    DWORD PTR [edi],edi
  403746:	xor    DWORD PTR [ecx+ebx*4-0x2a7cc666],ebx
  40374d:	fprem1 
  40374f:	das    
  403750:	xchg   ebx,eax
  403751:	stc    
  403752:	out    dx,eax
  403753:	sub    al,0x8d
  403755:	inc    ebx
  403756:	xchg   edx,eax
  403757:	mov    al,ds:0x1bd57307
  40375c:	push   es
  40375d:	sub    edx,DWORD PTR ds:0xcc781c8a
  403763:	add    al,0xd3
  403765:	push   ecx
  403766:	push   edx
  403767:	mov    al,0x71
  403769:	adc    BYTE PTR [edx-0x2],0x8d
  40376d:	inc    esi
  40376e:	jge    0x4037bb
  403770:	adc    ebp,esp
  403772:	(bad)  
  403773:	mov    ebp,0x42814e2f
  403778:	or     eax,0xaa76544
  40377d:	fcomp  QWORD PTR [ecx]
  40377f:	call   0x98a4:0x6822298b
  403786:	add    edx,DWORD PTR [eax+0xf897cc8]
  40378c:	or     BYTE PTR [edx+eax*8],0xb7
  403790:	clc    
  403791:	adc    bh,BYTE PTR [ebx-0x34]
  403794:	popf   
  403795:	in     eax,0xbd
  403797:	dec    ebx
  403798:	cwde   
  403799:	pop    es
  40379a:	and    bh,BYTE PTR [ebp+0x2631d4cc]
  4037a0:	dec    ebx
  4037a1:	push   ss
  4037a2:	push   ds
  4037a3:	pushf  
  4037a4:	sbb    esi,ebp
  4037a6:	shl    DWORD PTR [edi],0x2c
  4037a9:	and    dh,BYTE PTR [eax]
  4037ab:	cmp    ebp,ebp
  4037ad:	stos   BYTE PTR es:[edi],al
  4037ae:	xchg   BYTE PTR [ebx+0x16],bh
  4037b1:	or     ah,BYTE PTR [edi+0x73]
  4037b4:	push   ecx
  4037b5:	push   es
  4037b6:	sbb    bl,bl
  4037b8:	adc    al,0x58
  4037ba:	dec    esi
  4037bb:	or     esi,esp
  4037bd:	sbb    al,0xd3
  4037bf:	addr16 (bad) 
  4037c1:	dec    DWORD PTR [ebx-0x57310b63]
  4037c7:	push   ss
  4037c8:	add    al,0x89
  4037ca:	imul   ch
  4037cc:	jmp    0x40379b
  4037ce:	jmp    0xe845:0x5c96f82b
  4037d5:	push   esi
  4037d7:	xchg   esp,eax
  4037d8:	cld    
  4037d9:	and    al,0xa8
  4037db:	inc    esi
  4037dc:	neg    DWORD PTR [ebx+0x1cd22bcb]
  4037e2:	jmp    0x403842
  4037e4:	pop    ebp
  4037e5:	aas    
  4037e6:	inc    ecx
  4037e7:	cmp    BYTE PTR [esi+0x3a],0x53
  4037eb:	or     DWORD PTR [ebp-0x89b1c03],0xc7287a5
  4037f5:	icebp  
  4037f6:	scas   al,BYTE PTR es:[edi]
  4037f7:	in     al,0x53
  4037f9:	popf   
  4037fa:	dec    edi
  4037fb:	out    0xe,eax
  4037fd:	cmp    BYTE PTR [eax],bh
  4037ff:	pop    edx
  403800:	mov    ebp,0xcb4bdbc5
  403805:	test   eax,0xb6154fa6
  40380a:	adc    edi,edx
  40380c:	or     eax,DWORD PTR [ebx+0x2]
  40380f:	or     BYTE PTR [ecx+0x6ef2bc1a],ch
  403815:	test   al,0x4f
  403817:	jo     0x403895
  403819:	imul   esi,DWORD PTR [esp+edx*1+0x7a35de57],0xe83e9cca
  403824:	stc    
  403825:	inc    edi
  403826:	rol    DWORD PTR [edx],cl
  403828:	cmc    
  403829:	ins    BYTE PTR es:[edi],dx
  40382a:	pop    edi
  40382b:	daa    
  40382c:	rol    BYTE PTR [edx],cl
  40382e:	lea    ebx,[edx+0x75]
  403831:	push   eax
  403832:	jb     0x403877
  403834:	dec    edi
  403835:	aad    0x4d
  403837:	pushf  
  403838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403839:	lods   al,BYTE PTR ds:[esi]
  40383a:	push   0xffffff8b
  40383c:	rcr    DWORD PTR [edx+0x508c29e4],1
  403842:	dec    eax
  403843:	ins    BYTE PTR es:[edi],dx
  403844:	mov    eax,ds:0x8e2dc301
  403849:	jg     0x40380c
  40384b:	add    eax,0x7842532f
  403850:	jp     0x4038bd
  403852:	cmp    ecx,ecx
  403854:	lea    eax,[edi-0x5c]
  403857:	dec    edi
  403858:	into   
  403859:	push   0xbead8a04
  40385e:	add    DWORD PTR [esi-0x73],esi
  403861:	xchg   esi,eax
  403862:	add    dl,BYTE PTR ss:[eax-0x25685ebf]
  403869:	mov    bh,0x94
  40386b:	pop    eax
  40386c:	mov    ch,0x92
  40386e:	hlt    
  40386f:	cmp    ebp,edx
  403871:	mov    edx,0xeab4af02
  403876:	in     eax,0xc8
  403878:	xchg   esp,eax
  403879:	out    dx,al
  40387a:	stos   BYTE PTR es:[edi],al
  40387b:	sahf   
  40387c:	cmp    ah,ah
  40387e:	mov    esi,0xe19449c5
  403883:	cmp    BYTE PTR [ebp+0x77],cl
  403886:	add    al,0xf8
  403888:	jmp    0x2adffad3
  40388d:	xchg   ebp,eax
  40388e:	inc    ebx
  40388f:	and    al,0xe9
  403891:	fsubrp st(2),st
  403893:	inc    esi
  403894:	clc    
  403895:	or     DWORD PTR [ecx+0x24],0xffffffaa
  403899:	inc    ebx
  40389a:	stos   BYTE PTR es:[edi],al
  40389b:	dec    edi
  40389c:	dec    edx
  40389d:	mov    al,ds:0xb281b011
  4038a2:	addr16 lahf 
  4038a4:	xchg   ecx,eax
  4038a5:	outs   dx,DWORD PTR ds:[esi]
  4038a6:	mov    esi,0x74ec651e
  4038ab:	pop    edi
  4038ac:	pushf  
  4038ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ae:	mov    ds:0x80155503,eax
  4038b3:	in     eax,dx
  4038b4:	popa   
  4038b5:	xchg   edi,eax
  4038b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038b7:	and    BYTE PTR [ecx+edx*2-0x4cdd6fde],bh
  4038be:	je     0x403936
  4038c0:	jecxz  0x40389c
  4038c2:	dec    esp
  4038c3:	dec    esi
  4038c4:	mov    ebp,0xae774b4c
  4038c9:	jns    0x4038b7
  4038cb:	daa    
  4038cc:	std    
  4038cd:	push   ecx
  4038ce:	lods   eax,DWORD PTR ds:[esi]
  4038cf:	xor    edx,DWORD PTR [eax]
  4038d1:	xchg   edx,eax
  4038d2:	sbb    DWORD PTR [eax+edx*2+0x8d597b5],ebx
  4038d9:	aad    0x3b
  4038db:	cmp    al,0x7c
  4038dd:	mov    DWORD PTR [edx-0x5a3cee7c],esi
  4038e3:	jmp    0x6b94c65b
  4038e8:	popa   
  4038e9:	push   edx
  4038ea:	sahf   
  4038eb:	jo     0x4038c3
  4038ed:	push   ebp
  4038ee:	sub    DWORD PTR [edi+0x76],0xffffffbd
  4038f2:	je     0x403934
  4038f4:	pop    edx
  4038f5:	ja     0x4038f1
  4038f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038f8:	and    al,0x4d
  4038fa:	idiv   edx
  4038fc:	cmp    ch,BYTE PTR [esi]
  4038fe:	(bad)  
  4038ff:	fcmovu st,st(1)
  403901:	jecxz  0x4038fe
  403903:	dec    eax
  403904:	stos   BYTE PTR es:[edi],al
  403905:	push   ebp
  403906:	jecxz  0x403942
  403908:	xor    BYTE PTR [esi+0x6],ch
  40390b:	sbb    ecx,esi
  40390d:	xchg   edi,eax
  40390e:	aam    0xda
  403910:	aam    0x48
  403912:	pop    edi
  403913:	dec    ecx
  403914:	pop    es
  403915:	or     eax,0x9b61cfaf
  40391a:	dec    eax
  40391b:	fimul  WORD PTR [edx+ebp*8-0x4d63d20c]
  403922:	or     DWORD PTR [ebp-0x48e448fa],ebx
  403928:	hlt    
  403929:	sbb    bl,BYTE PTR [edx+0x5f]
  40392c:	stc    
  40392d:	mov    al,0xbf
  40392f:	test   al,0x7c
  403931:	inc    esi
  403932:	out    0xfa,eax
  403934:	inc    edx
  403935:	jbe    0x403966
  403937:	ficomp WORD PTR [ebx]
  403939:	popf   
  40393a:	mov    BYTE PTR [ecx],dl
  40393c:	mov    eax,ds:0x677503d5
  403941:	jmp    0x40395a
  403943:	je     0x4038fb
  403945:	lock mov esp,0xa1abc1f5
  40394b:	inc    edx
  40394c:	and    DWORD PTR [edx],edi
  40394e:	cmp    al,0x83
  403950:	sbb    DWORD PTR [eax-0x6],ebp
  403953:	nop
  403954:	pop    esi
  403955:	sub    ecx,DWORD PTR [ecx]
  403957:	sbb    eax,0x15b53735
  40395c:	rcr    BYTE PTR [edx],1
  40395e:	mov    cl,0xe9
  403960:	(bad)  
  403961:	cdq    
  403962:	xor    dh,BYTE PTR [ebx+0x79133916]
  403968:	sub    bl,cl
  40396a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40396b:	xor    al,0x2b
  40396d:	test   DWORD PTR [eax-0x18aeb734],esi
  403973:	clc    
  403974:	pop    esp
  403975:	(bad)  
  403976:	js     0x40395f
  403978:	lahf   
  403979:	test   DWORD PTR [edx],ecx
  40397b:	scas   eax,DWORD PTR es:[edi]
  40397c:	outs   dx,DWORD PTR ds:[esi]
  40397d:	push   ds
  40397e:	sbb    ah,BYTE PTR [esi-0x74c3a628]
  403984:	jle    0x403a00
  403986:	push   esp
  403987:	call   FWORD PTR [ebp+0x53c801aa]
  40398d:	mov    ds:0xad5908db,al
  403992:	mov    al,0xf7
  403994:	cmp    eax,DWORD PTR [ecx]
  403996:	push   ecx
  403997:	or     DWORD PTR [ebx],0xd7a4b154
  40399d:	xor    DWORD PTR [edx],edi
  40399f:	sub    DWORD PTR [edx-0x35eacf0f],ebx
  4039a5:	pop    ebx
  4039a6:	jbe    0x4039eb
  4039a8:	or     edi,eax
  4039aa:	adc    cl,BYTE PTR [ebx]
  4039ac:	cwde   
  4039ad:	and    al,0x31
  4039af:	rcl    cl,0xd0
  4039b2:	inc    ebx
  4039b3:	mov    bl,0x38
  4039b5:	mov    ch,0x7b
  4039b7:	sub    DWORD PTR [eax+edi*2+0x632a1359],0xb
  4039bf:	or     ecx,DWORD PTR [ebp+0x53812da5]
  4039c5:	fcmove st,st(7)
  4039c7:	cmc    
  4039c8:	mov    esp,esp
  4039ca:	retf   
  4039cb:	pop    ebp
  4039cc:	out    0x92,al
  4039ce:	ret    
  4039cf:	inc    ebx
  4039d0:	xor    ah,BYTE PTR [eax-0x38]
  4039d3:	nop
  4039d4:	jle    0x4039e0
  4039d6:	(bad)  
  4039d7:	jg     0x403964
  4039d9:	sbb    BYTE PTR [edi+0x1b90b2ba],bh
  4039df:	mov    al,ds:0x8f0cd51b
  4039e4:	xchg   ebx,eax
  4039e5:	push   eax
  4039e6:	dec    ebx
  4039e7:	and    al,BYTE PTR [edi-0x61f495ac]
  4039ed:	les    esp,FWORD PTR [ebp+0x2d2f66f2]
  4039f3:	push   eax
  4039f4:	scas   eax,DWORD PTR es:[edi]
  4039f5:	cmp    BYTE PTR [edi-0x79],al
  4039f8:	or     BYTE PTR [esi+0x76],0x1e
  4039fc:	push   edx
  4039fd:	mov    cl,0x1d
  4039ff:	(bad)  
  403a00:	xlat   BYTE PTR ds:[ebx]
  403a01:	inc    esp
  403a02:	add    ebp,esi
  403a04:	js     0x4039b9
  403a06:	shl    BYTE PTR [edi-0x34],1
  403a09:	xor    eax,0x40e95bf2
  403a0e:	xchg   ecx,eax
  403a0f:	xchg   bh,ch
  403a11:	or     edi,esp
  403a13:	outs   dx,DWORD PTR ds:[esi]
  403a14:	mov    cl,0xca
  403a16:	jb     0x403a4c
  403a18:	sbb    edx,DWORD PTR [eax-0x3d]
  403a1b:	out    dx,eax
  403a1c:	cmp    DWORD PTR [esp+0x7a311735],edi
  403a23:	xor    eax,0x8a6ac955
  403a28:	push   0xae0e1bd4
  403a2d:	das    
  403a2e:	mov    ecx,0x19580e8d
  403a33:	aam    0xa4
  403a35:	pop    ebx
  403a36:	in     al,dx
  403a37:	aam    0xb2
  403a39:	fld    st(5)
  403a3b:	nop
  403a3c:	repnz mov eax,ds:0x77507be7
  403a42:	sbb    al,BYTE PTR [ecx+0x2f9438fb]
  403a48:	push   0x22
  403a4a:	cmc    
  403a4b:	daa    
  403a4c:	sar    ebp,1
  403a4e:	ins    BYTE PTR es:[edi],dx
  403a4f:	cmp    ah,BYTE PTR [ebx]
  403a51:	sub    esp,DWORD PTR [ebp+0xdc142b2]
  403a57:	jp     0x403a78
  403a59:	popf   
  403a5a:	or     esi,esi
  403a5c:	fsub   st(1),st
  403a5e:	sti    
  403a5f:	inc    edi
  403a60:	in     al,dx
  403a61:	addr16 mov dl,0x63
  403a64:	add    ebp,DWORD PTR ds:0xf15d3302
  403a6a:	mov    ds:0x7834b3d5,eax
  403a6f:	sbb    eax,0x5b9dc352
  403a74:	mov    ch,0x71
  403a76:	sbb    BYTE PTR gs:[ebx-0x23],cl
  403a7a:	addr16 adc al,0x2b
  403a7d:	pushf  
  403a7e:	add    eax,esi
  403a80:	sti    
  403a81:	outs   dx,DWORD PTR ds:[esi]
  403a82:	in     al,0x82
  403a84:	ins    DWORD PTR es:[edi],dx
  403a85:	pop    edx
  403a86:	dec    eax
  403a87:	xor    ah,al
  403a89:	(bad)  
  403a8a:	jp     0x403ab5
  403a8c:	sbb    BYTE PTR [edx-0x3a],dl
  403a8f:	jae    0x403ae6
  403a91:	xchg   BYTE PTR [edx],dl
  403a93:	xlat   BYTE PTR ds:[ebx]
  403a94:	out    0xe6,al
  403a96:	int3   
  403a97:	fcom   DWORD PTR [esi+0x7971276]
  403a9d:	fidivr WORD PTR [ebx+0x7ae9e3a9]
  403aa3:	cmp    dl,BYTE PTR [eax+ecx*2-0x43381538]
  403aaa:	imul   ecx,DWORD PTR [eax-0x70cdd70],0xbdd8507e
  403ab4:	(bad)  
  403ab5:	(bad)  
  403ab6:	adc    BYTE PTR [eax-0x774938ad],ch
  403abc:	inc    ebx
  403abd:	fprem  
  403abf:	dec    ebp
  403ac0:	imul   ebp,ebp,0xffffffaa
  403ac3:	push   ebp
  403ac4:	xchg   edi,eax
  403ac5:	loope  0x403b0e
  403ac7:	sbb    esp,edx
  403ac9:	ins    DWORD PTR es:[edi],dx
  403aca:	sbb    al,0x4f
  403acc:	(bad)  
  403acd:	sti    
  403ace:	mov    ds:0x8017079c,al
  403ad3:	pop    esp
  403ad4:	popa   
  403ad5:	fs int3 
  403ad7:	in     eax,0xec
  403ad9:	sbb    al,0x63
  403adb:	jecxz  0x403abf
  403add:	in     al,dx
  403ade:	hlt    
  403adf:	dec    esi
  403ae0:	pop    esi
  403ae1:	repnz aas 
  403ae3:	cdq    
  403ae4:	aas    
  403ae5:	(bad)  
  403ae6:	icebp  
  403ae7:	push   ebp
  403ae8:	outs   dx,BYTE PTR ds:[esi]
  403ae9:	jne    0x403a82
  403aeb:	lahf   
  403aec:	mov    ds:0xcf60b634,al
  403af1:	and    BYTE PTR [ecx+0x22cb2ee3],dh
  403af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403af8:	fisttp DWORD PTR [edi-0x6c]
  403afb:	mov    WORD PTR [esi+0x47],?
  403afe:	mov    ds:0xb1becd2d,eax
  403b03:	loopne 0x403a94
  403b05:	ja     0x403b4b
  403b07:	inc    edi
  403b08:	xchg   esi,eax
  403b09:	and    DWORD PTR [edx+edi*4+0x2d],0xffffff88
  403b0e:	es rol dh,0xd2
  403b12:	push   ds
  403b13:	mov    ah,0xb5
  403b15:	mov    bl,0xdf
  403b17:	arpl   WORD PTR [edx-0x40],cx
  403b1a:	leave  
  403b1b:	dec    ebx
  403b1c:	daa    
  403b1d:	(bad)  
  403b1e:	pop    edi
  403b1f:	daa    
  403b20:	fnsave [ebx-0x108c4ad6]
  403b26:	mov    ch,0xdd
  403b28:	sub    bl,BYTE PTR [ecx+0x66d88e95]
  403b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b2f:	pushf  
  403b30:	xchg   ebx,eax
  403b31:	(bad)  
  403b32:	jae    0x403ad5
  403b34:	rcr    ch,0x1a
  403b37:	cmp    al,0x4
  403b39:	push   ecx
  403b3a:	dec    eax
  403b3b:	cdq    
  403b3c:	test   DWORD PTR [ecx],edi
  403b3e:	outs   dx,BYTE PTR ds:[esi]
  403b3f:	cmp    BYTE PTR [eax],al
  403b41:	cdq    
  403b42:	xor    eax,0xaa998a96
  403b47:	(bad)  
  403b48:	paddusb mm6,QWORD PTR [esi-0x7b74234c]
  403b4f:	stos   DWORD PTR es:[edi],eax
  403b50:	jmp    0x403b81
  403b52:	mov    ebx,0x85cf9a1a
  403b57:	sti    
  403b58:	les    ebx,FWORD PTR fs:[ebx+ecx*2+0x4d40c577]
  403b60:	ins    BYTE PTR es:[edi],dx
  403b61:	xor    eax,DWORD PTR [edi+eax*8]
  403b64:	cmp    ebp,DWORD PTR [esi+ebp*1]
  403b67:	cli    
  403b68:	dec    ebp
  403b69:	aas    
  403b6a:	mov    BYTE PTR [eax-0x66416bdc],bl
  403b70:	fisttp DWORD PTR [esi-0x25a0b0c9]
  403b76:	cli    
  403b77:	clc    
  403b78:	les    esp,FWORD PTR [edi]
  403b7a:	cli    
  403b7b:	sbb    bl,BYTE PTR [eax+edx*8+0x792ce30f]
  403b82:	inc    ebp
  403b83:	mov    eax,ds:0x144ec5ff
  403b88:	leave  
  403b89:	push   ebp
  403b8a:	inc    ebx
  403b8b:	jmp    0x3932131d
  403b90:	push   ebp
  403b91:	and    cl,BYTE PTR [ecx+0x62]
  403b94:	icebp  
  403b95:	ret    
  403b96:	aam    0x2e
  403b98:	add    BYTE PTR [eax-0x7b],ah
  403b9b:	jb     0x403ba4
  403b9d:	pop    ebp
  403b9e:	pop    ebp
  403b9f:	aas    
  403ba0:	dec    eax
  403ba1:	xor    cl,BYTE PTR [ecx-0x21588166]
  403ba7:	sub    BYTE PTR [edi],0xd3
  403baa:	in     eax,dx
  403bab:	pop    esp
  403bac:	imul   ch
  403bae:	(bad)  
  403baf:	inc    ebx
  403bb0:	push   0x1c
  403bb2:	stc    
  403bb3:	adc    eax,0xe83b5e90
  403bb8:	aad    0x9c
  403bba:	inc    esi
  403bbb:	scas   eax,DWORD PTR es:[edi]
  403bbc:	xchg   ebx,eax
  403bbd:	sub    eax,ebp
  403bbf:	dec    ebx
  403bc0:	mov    dl,BYTE PTR [esi+esi*4-0x72]
  403bc4:	jns    0x403c32
  403bc6:	adc    BYTE PTR [eax+0x5aff76f6],0x33
  403bcd:	scas   eax,DWORD PTR es:[edi]
  403bce:	je     0x403bea
  403bd0:	fst    st(5)
  403bd2:	loop   0x403bcb
  403bd4:	adc    ah,ah
  403bd6:	jne    0x403bb1
  403bd8:	cmp    al,0xf9
  403bda:	sbb    eax,0x701f5084
  403bdf:	fadd   DWORD PTR [edx+edi*4+0x665fe1d7]
  403be6:	cs jae 0x403c68
  403be9:	inc    esp
  403bea:	inc    esp
  403beb:	or     ecx,DWORD PTR [edi+0x8]
  403bee:	mov    ch,0xf
  403bf0:	sub    esi,DWORD PTR [ecx-0x8]
  403bf3:	lahf   
  403bf4:	sbb    ebx,DWORD PTR [ebx]
  403bf6:	mov    esp,0x324abe06
  403bfb:	repz test DWORD PTR [eax+0x45],esi
  403bff:	add    BYTE PTR [ebx-0x1f],ah
  403c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c03:	loopne 0x403c34
  403c05:	inc    esp
  403c07:	pop    eax
  403c08:	retf   0xbbcd
  403c0b:	js     0x403bd0
  403c0d:	jb     0x403bc8
  403c0f:	repz pop eax
  403c11:	jmp    0x403c4f
  403c13:	leave  
  403c14:	add    esp,eax
  403c16:	jb     0x403be2
  403c18:	(bad)  
  403c19:	in     al,dx
  403c1a:	or     eax,ebp
  403c1c:	loop   0x403bba
  403c1e:	mov    ch,0x60
  403c20:	mov    eax,ds:0x115964f0
  403c25:	in     al,0x8a
  403c27:	psubq  mm6,QWORD PTR [ebp-0x6724a882]
  403c2e:	cmp    DWORD PTR fs:[ebx-0xb],ecx
  403c32:	cmp    edx,DWORD PTR [ebp+0x8]
  403c35:	enter  0x67f2,0xc5
  403c39:	popa   
  403c3a:	js     0x403c4b
  403c3c:	(bad)  
  403c3e:	test   al,0xd1
  403c40:	rcr    BYTE PTR [ebp-0x70],1
  403c43:	lods   eax,DWORD PTR ds:[esi]
  403c45:	and    BYTE PTR [eax],al
  403c47:	call   0xd8bdb892
  403c4c:	stos   BYTE PTR es:[edi],al
  403c4d:	aam    0x8d
  403c4f:	sbb    ecx,esi
  403c51:	ficomp DWORD PTR [eax]
  403c53:	int3   
  403c54:	or     al,BYTE PTR [esi-0x1b943ca0]
  403c5a:	mov    ah,BYTE PTR [esi+0xa]
  403c5d:	outs   dx,BYTE PTR ds:[esi]
  403c5e:	mov    ds:0x90708653,al
  403c63:	rcr    al,0xdd
  403c66:	out    0xfd,eax
  403c68:	mov    al,ds:0xc433446b
  403c6d:	aad    0x7e
  403c6f:	add    esp,eax
  403c71:	pusha  
  403c72:	mov    ds:0x851e2165,eax
  403c77:	adc    ch,BYTE PTR [ebp+0x61]
  403c7a:	fidiv  WORD PTR [edx-0x29]
  403c7d:	or     ah,BYTE PTR [ecx]
  403c7f:	ins    DWORD PTR es:[edi],dx
  403c80:	int3   
  403c81:	pop    es
  403c82:	dec    edi
  403c83:	mov    al,BYTE PTR [ebx]
  403c85:	fwait
  403c86:	(bad)
  403c89:	fwait
  403c8a:	adc    ah,ah
  403c8c:	xor    al,0xcd
  403c8e:	mov    es,WORD PTR [eax-0x385bb23]
  403c94:	mov    esp,0x4e953052
  403c99:	sti    
  403c9a:	xor    eax,0xabd1d2cc
  403c9f:	mov    esi,0x2f7d7bd5
  403ca4:	jo     0x403c7f
  403ca6:	lahf   
  403ca7:	fst    DWORD PTR [esi-0x642f1ef1]
  403cad:	sub    cl,BYTE PTR [edi+0x59]
  403cb0:	dec    eax
  403cb1:	repnz and BYTE PTR gs:[edx+0x65],bl
  403cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cb7:	repnz pushf 
  403cb9:	popf   
  403cba:	loopne 0x403d09
  403cbc:	jecxz  0x403cce
  403cbe:	dec    edx
  403cbf:	push   ecx
  403cc0:	sub    ebp,DWORD PTR [edx+0x7a9d5c03]
  403cc6:	push   ss
  403cc7:	dec    ecx
  403cc8:	jbe    0x403d09
  403cca:	addr16 iret 
  403ccc:	in     al,dx
  403ccd:	icebp  
  403cce:	xor    bl,dh
  403cd0:	jb     0x2fed72aa
  403cd6:	pop    esi
  403cd7:	mov    dh,0xe2
  403cd9:	scas   al,BYTE PTR es:[edi]
  403cda:	push   eax
  403cdb:	ins    DWORD PTR es:[edi],dx
  403cdc:	mov    WORD PTR [ecx+0x2e],es
  403cdf:	into   
  403ce0:	push   0x2a75454e
  403ce5:	xor    eax,0x1ebe2fe7
  403cea:	sar    ah,cl
  403cec:	mov    al,0x48
  403cee:	mov    ebp,0xbeff32af
  403cf3:	pop    edi
  403cf4:	add    esp,ebx
  403cf6:	outs   dx,DWORD PTR ds:[esi]
  403cf7:	cmp    BYTE PTR [edi+0x1a],bl
  403cfa:	sbb    eax,0x1c9c5bce
  403cff:	dec    edx
  403d00:	nop
  403d01:	cli    
  403d02:	sub    DWORD PTR [edi-0x39],esp
  403d05:	out    dx,al
  403d06:	out    dx,eax
  403d07:	inc    edx
  403d08:	dec    DWORD PTR ds:0x5e2cca3b
  403d0e:	sub    al,0xe5
  403d10:	stos   DWORD PTR es:[edi],eax
  403d11:	adc    edi,esi
  403d13:	les    esi,FWORD PTR [ecx-0x24]
  403d16:	fistp  DWORD PTR [ecx]
  403d18:	mov    WORD PTR [eax+0x3115cf0f],?
  403d1e:	mov    dl,0xdd
  403d20:	adc    al,0xd2
  403d22:	test   eax,0x1ba37c7b
  403d27:	jo     0x403d59
  403d29:	(bad)  
  403d2a:	out    dx,eax
  403d2b:	sbb    bh,0x8c
  403d2e:	sub    DWORD PTR [edx-0x69c23fde],edx
  403d34:	into   
  403d35:	mov    BYTE PTR [eax],ah
  403d37:	xor    dl,bh
  403d39:	adc    ah,BYTE PTR cs:[edi]
  403d3c:	bound  esi,QWORD PTR [eax+ecx*8+0x4b807761]
  403d43:	add    BYTE PTR [edi],bl
  403d45:	cdq    
  403d46:	dec    ecx
  403d47:	push   di
  403d49:	adc    DWORD PTR [edx-0x116f268c],edi
  403d4f:	pushf  
  403d50:	cld    
  403d51:	ins    DWORD PTR es:[edi],dx
  403d52:	imul   edx,ebx
  403d55:	mov    ebx,DWORD PTR [ebp-0x8]
  403d58:	mov    BYTE PTR [edx+ebx*1],al
  403d5b:	mov    eax,DWORD PTR [ebp-0x30]
  403d5e:	mov    edx,DWORD PTR [ebp-0xc]
  403d61:	xor    eax,esi
  403d63:	add    eax,edi
  403d65:	jmp    0x4060d5
  403d6a:	scas   al,BYTE PTR es:[edi]
  403d6b:	pushf  
  403d6c:	and    al,0xa
  403d6e:	add    al,0x82
  403d70:	test   BYTE PTR [eax+eiz*4-0x6bb77288],bl
  403d77:	mov    dh,BYTE PTR [esi+0x7a5f2f37]
  403d7d:	jp     0x403dae
  403d7f:	pop    edi
  403d80:	jp     0x403dfc
  403d82:	add    BYTE PTR [eax],0x8e
  403d85:	xor    eax,ebp
  403d87:	fs sti 
  403d89:	pop    esp
  403d8a:	mov    esp,0x9e97376e
  403d8f:	std    
  403d90:	mov    eax,0xdf5b0db8
  403d95:	and    al,0xf
  403d97:	mov    ecx,0x47c30425
  403d9c:	jno    0x403d47
  403d9e:	mov    al,ds:0x15b7f7d1
  403da3:	sbb    BYTE PTR [ebp+edx*2+0x5f],al
  403da7:	adc    DWORD PTR [eax-0x116467b0],edi
  403dad:	xchg   DWORD PTR [edi],ebp
  403daf:	imul   eax,ebx,0xeb0bb234
  403db5:	adc    BYTE PTR [ecx-0x46],al
  403db8:	xchg   esi,eax
  403db9:	jle    0x403de5
  403dbb:	xor    al,0xd6
  403dbd:	(bad)  
  403dbe:	sahf   
  403dbf:	push   cs
  403dc0:	arpl   bx,sp
  403dc2:	cwde   
  403dc3:	jae    0x403d9e
  403dc5:	mov    ds:0x732b67b4,eax
  403dca:	cmp    al,0xd4
  403dcc:	inc    edx
  403dcd:	pop    esp
  403dce:	mov    esp,0x1d59644d
  403dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dd4:	pop    es
  403dd5:	ja     0x403dae
  403dd7:	adc    BYTE PTR [ecx],cl
  403dd9:	not    esp
  403ddb:	call   0x9a03:0xfdd64d15
  403de2:	shl    BYTE PTR cs:[ecx+0x22b685],1
  403de9:	sbb    BYTE PTR [edx-0x38117e5a],dl
  403def:	shr    BYTE PTR [ebp+0x7ad48cc3],1
  403df5:	pop    ds
  403df6:	rol    DWORD PTR [edx+0x64],cl
  403df9:	xchg   edi,eax
  403dfa:	adc    cl,BYTE PTR [ecx+0x54b080b7]
  403e00:	call   0xbc6abef
  403e05:	xor    DWORD PTR [ebp-0x60132131],ecx
  403e0b:	lahf   
  403e0c:	in     al,dx
  403e0d:	dec    edi
  403e0e:	mov    edx,0x172e0535
  403e13:	pop    eax
  403e14:	cmp    DWORD PTR [ebp+0x61],0x76922875
  403e1b:	push   esp
  403e1c:	inc    edx
  403e1d:	xor    dh,BYTE PTR es:[edi]
  403e20:	or     al,0x41
  403e22:	shl    DWORD PTR [eax-0x1d98fbb1],1
  403e28:	jmp    0xd36e0441
  403e2d:	xchg   BYTE PTR [ebx],bh
  403e2f:	call   0x753bc16f
  403e34:	push   ds
  403e35:	push   cs
  403e36:	lahf   
  403e37:	jae    0x403e40
  403e39:	lea    edx,ds:0x4d1fa49d
  403e3f:	into   
  403e40:	and    al,0xb5
  403e42:	push   eax
  403e43:	sub    DWORD PTR fs:[ebx],ecx
  403e46:	mov    edi,0x1416fee4
  403e4b:	fisttp WORD PTR [edx+0x3804a2ac]
  403e51:	popa   
  403e52:	js     0x403e79
  403e54:	aam    0x53
  403e56:	mov    ecx,0xe4550885
  403e5b:	clc    
  403e5c:	mov    edx,0x98643c55
  403e61:	cmp    eax,DWORD PTR [edx]
  403e63:	outs   dx,BYTE PTR ds:[esi]
  403e64:	cdq    
  403e65:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403e67:	xchg   ebp,eax
  403e68:	fs ret 0x20dd
  403e6c:	adc    eax,0xa15977bf
  403e71:	fsubr  st(1),st
  403e73:	sti    
  403e74:	jb     0x403e07
  403e76:	mov    cl,0x76
  403e78:	adc    al,0x47
  403e7a:	enter  0xa4bb,0x73
  403e7e:	xchg   bh,ah
  403e80:	leave  
  403e81:	stc    
  403e82:	mov    ebp,0x74942e80
  403e87:	popf   
  403e88:	mov    ecx,DWORD PTR [ebx+0x73]
  403e8b:	ins    DWORD PTR es:[edi],dx
  403e8c:	inc    esp
  403e8d:	mov    ebx,ebp
  403e8f:	retf   0xb49
  403e92:	mov    dh,0xfd
  403e94:	mov    dl,0x42
  403e96:	stos   DWORD PTR es:[edi],eax
  403e97:	test   dl,ch
  403e99:	mov    DWORD PTR [esi+0x3b],ecx
  403e9c:	pop    edi
  403e9d:	pop    edx
  403e9e:	leave  
  403e9f:	sbb    BYTE PTR [eax],dh
  403ea1:	call   0xe023:0x29cef18b
  403ea8:	xor    ah,BYTE PTR [ecx]
  403eaa:	xchg   ebx,eax
  403eab:	mov    al,ds:0xf6e72d2
  403eb0:	lock xchg esi,eax
  403eb2:	out    dx,al
  403eb3:	adc    ecx,eax
  403eb5:	sbb    eax,0x3f837a3f
  403eba:	fdiv   st,st(7)
  403ebc:	xor    ebx,DWORD PTR [ebp-0x74174a33]
  403ec2:	nop
  403ec3:	xchg   ebp,eax
  403ec4:	scas   al,BYTE PTR es:[edi]
  403ec5:	lods   al,BYTE PTR ds:[esi]
  403ec6:	adc    ebp,eax
  403ec8:	push   ss
  403ec9:	xchg   edx,eax
  403eca:	dec    esp
  403ecb:	mov    ds:0x733b79b2,eax
  403ed0:	dec    ecx
  403ed1:	fisubr WORD PTR [eax+0x5d]
  403ed4:	pop    esi
  403ed5:	pop    es
  403ed6:	inc    esp
  403ed7:	xor    esp,ebp
  403ed9:	scas   al,BYTE PTR es:[edi]
  403eda:	hlt    
  403edb:	bound  ebp,QWORD PTR [eax-0x39]
  403ede:	xor    esp,ebp
  403ee0:	mov    edx,0x8ae27e34
  403ee5:	xor    esp,DWORD PTR [edi+0x433f06a6]
  403eeb:	xor    ebp,DWORD PTR [esi+0x68]
  403eee:	pop    es
  403eef:	dec    esi
  403ef0:	push   ss
  403ef1:	jno    0x403f2b
  403ef3:	push   ebx
  403ef4:	loope  0x403f36
  403ef6:	ffreep st(6)
  403ef8:	push   0x5e
  403efa:	mov    bh,0x68
  403efc:	mov    ecx,0x4fff5d08
  403f01:	pop    eax
  403f02:	(bad)  
  403f03:	shl    BYTE PTR [ebp+0x2ee152b],0x72
  403f0a:	push   0xf75fd749
  403f0f:	xchg   esp,eax
  403f10:	push   eax
  403f11:	jmp    0x6d9fb313
  403f16:	loop   0x403f05
  403f18:	dec    ecx
  403f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f1a:	mov    ds:0x3d93a39,al
  403f1f:	std    
  403f20:	mov    dh,0xdc
  403f22:	jecxz  0x403f9a
  403f24:	xchg   esp,eax
  403f25:	xchg   ebx,eax
  403f26:	mov    ch,0x67
  403f29:	mov    esi,0x7a755013
  403f2e:	xor    cl,BYTE PTR [ebp+0x6a]
  403f31:	nop
  403f32:	out    0x2f,al
  403f34:	cmp    ebp,DWORD PTR [bp+di-0x13b1]
  403f39:	(bad)  
  403f3b:	cwde   
  403f3c:	(bad)  
  403f3d:	or     ecx,ecx
  403f3f:	cmp    al,0x34
  403f41:	pop    eax
  403f42:	lahf   
  403f43:	and    eax,0x421b65f6
  403f48:	mov    ah,0xd1
  403f4a:	jmp    0x403ed2
  403f4c:	(bad)  [ebp+ebp*2-0x2b]
  403f50:	sbb    BYTE PTR es:[ebx-0x70],cl
  403f54:	dec    ecx
  403f55:	or     al,0xa4
  403f57:	mov    esp,DWORD PTR [esi-0x36]
  403f5a:	fld    st(7)
  403f5c:	dec    ebp
  403f5d:	aad    0xd3
  403f5f:	pop    ebp
  403f60:	xor    ebx,DWORD PTR [ecx+0x251b7252]
  403f66:	xchg   edx,eax
  403f67:	dec    edx
  403f68:	dec    edi
  403f69:	xchg   ecx,eax
  403f6a:	stos   BYTE PTR es:[edi],al
  403f6b:	or     ecx,DWORD PTR [esi+eiz*2+0x4d]
  403f6f:	mov    dh,0x25
  403f71:	mov    esp,0xeadd1a76
  403f76:	and    eax,0xedf56229
  403f7b:	(bad)  
  403f7c:	outs   dx,DWORD PTR ds:[esi]
  403f7d:	cld    
  403f7e:	sbb    ah,dl
  403f80:	xadd   ecx,ebx
  403f83:	mov    ebx,0xa17f951b
  403f88:	(bad)  
  403f89:	fdivr  st(7),st
  403f8b:	cmp    al,0xa5
  403f8d:	pop    eax
  403f8e:	gs daa 
  403f90:	clc    
  403f91:	xchg   ecx,eax
  403f92:	jb     0x403fcd
  403f94:	or     ebp,DWORD PTR [eax]
  403f96:	rol    BYTE PTR [eax],1
  403f98:	mov    dh,0xd8
  403f9a:	sti    
  403f9b:	retf   
  403f9c:	xor    ebx,ebp
  403f9e:	out    0x0,al
  403fa0:	aas    
  403fa1:	leave  
  403fa2:	sahf   
  403fa3:	icebp  
  403fa4:	icebp  
  403fa5:	jecxz  0x403fb4
  403fa7:	add    al,0xa1
  403fa9:	xchg   esp,edx
  403fab:	imul   ebp,DWORD PTR [ecx-0x64824728],0xffffff89
  403fb2:	or     dl,BYTE PTR [ebx+0x6024a5ff]
  403fb8:	test   al,0x86
  403fba:	xchg   edx,eax
  403fbb:	std    
  403fbc:	xor    dl,bl
  403fbe:	xor    al,0x1
  403fc0:	jns    0x40402d
  403fc2:	fist   DWORD PTR [edi+0x39623f7c]
  403fc8:	xor    edx,DWORD PTR ds:[ebp+0x22]
  403fcc:	jp     0x403f82
  403fce:	xchg   esp,eax
  403fcf:	mov    cl,0x8f
  403fd1:	xor    edi,esi
  403fd3:	jg     0x403f74
  403fd5:	sub    al,0xc4
  403fd7:	add    al,0x22
  403fd9:	rcr    ebp,cl
  403fdb:	fst    DWORD PTR ds:0xc0ba322a
  403fe1:	sbb    DWORD PTR [ebp+0x7],edx
  403fe4:	jne    0x40402f
  403fe6:	mul    al
  403fe8:	shl    DWORD PTR [edx-0x9],1
  403feb:	inc    edx
  403fec:	int3   
  403fed:	ret    0xf595
  403ff0:	mov    bl,0x25
  403ff2:	push   ebp
  403ff3:	popf   
  403ff4:	or     al,0x3b
  403ff6:	dec    edx
  403ff7:	fbstp  TBYTE PTR ds:[edx]
  403ffa:	pushf  
  403ffb:	add    BYTE PTR [edx-0x76],al
  403ffe:	inc    ebx
  403fff:	fwait
  404000:	mov    edi,0xda7ad2ba
  404005:	xchg   ebx,eax
  404006:	dec    esp
  404007:	and    BYTE PTR [esi+ebp*8-0x2ccbb3fa],0xd2
  40400f:	jbe    0x404013
  404011:	jecxz  0x403fb3
  404013:	adc    ch,BYTE PTR ds:[esi]
  404016:	in     al,0x1d
  404018:	lds    esi,FWORD PTR [edi+0x2d5af9eb]
  40401e:	inc    esi
  40401f:	xlat   BYTE PTR ds:[ebx]
  404020:	mov    ebx,DWORD PTR ds:0x2dda2a4d
  404026:	xor    esi,esi
  404028:	xor    bl,al
  40402a:	inc    edx
  40402b:	mov    bl,0xc9
  40402d:	jbe    0x404038
  40402f:	icebp  
  404030:	mov    bl,0x2d
  404032:	sbb    dl,BYTE PTR ds:0xcff9ec8a
  404038:	cld    
  404039:	repz jns 0x403fd8
  40403c:	fisubr DWORD PTR [edi+0x5670bd1b]
  404042:	xchg   esi,eax
  404043:	inc    eax
  404044:	call   0x897110d2
  404049:	popf   
  40404a:	cld    
  40404b:	repnz rcr edx,0x11
  40404f:	cmp    dh,ah
  404051:	mov    ch,0xd8
  404053:	push   0x33
  404055:	inc    ebx
  404056:	popa   
  404057:	lahf   
  404058:	pop    es
  404059:	mov    ah,0xea
  40405b:	and    BYTE PTR [ebp-0x20],cl
  40405e:	cmp    BYTE PTR [ebx+esi*8],dl
  404061:	cld    
  404062:	test   BYTE PTR [ebx-0x3b6aa2ec],ah
  404068:	add    al,0x98
  40406a:	imul   edx,DWORD PTR [eax],0x473e49c
  404070:	push   edx
  404071:	jns    0x4040d7
  404073:	mov    ah,0x78
  404075:	push   esp
  404076:	(bad)  
  404077:	and    DWORD PTR ds:0x8731aeb0,eax
  40407d:	fild   DWORD PTR [ebx+0x115c519a]
  404083:	fisttp DWORD PTR [ecx+0x0]
  404086:	lds    edx,FWORD PTR [edi+eiz*2+0x6ff6c011]
  40408d:	bnd jl 0x404043
  404090:	sbb    eax,0x2d980332
  404095:	mov    al,ds:0x274476ed
  40409a:	mov    al,ds:0x200383ed
  40409f:	out    0x95,al
  4040a1:	dec    ebx
  4040a2:	(bad)  
  4040a3:	and    edi,esp
  4040a5:	sbb    ecx,DWORD PTR [esi]
  4040a7:	pusha  
  4040a8:	jns    0x4040f0
  4040aa:	je     0x4040dd
  4040ac:	xor    esp,DWORD PTR [ecx-0x8]
  4040af:	arpl   WORD PTR [eax-0x5d],ax
  4040b2:	sbb    DWORD PTR [ebp+0x33f79a1d],ebp
  4040b8:	sbb    BYTE PTR [ecx+0x31],ch
  4040bb:	iret   
  4040bc:	test   BYTE PTR [ebx],ch
  4040be:	ror    DWORD PTR [ebx-0x1c],cl
  4040c1:	lahf   
  4040c2:	(bad)  
  4040c3:	fisubr WORD PTR [edx]
  4040c5:	inc    esp
  4040c6:	ret    0x13d9
  4040c9:	push   ecx
  4040ca:	jns    0x4040e4
  4040cc:	dec    ebp
  4040cd:	or     eax,0x27ab8aac
  4040d2:	push   ecx
  4040d3:	mov    bl,0x6f
  4040d5:	jmp    0xb759:0xb0f5d17c
  4040dc:	mov    bl,0xca
  4040de:	mov    eax,ds:0x481c645
  4040e3:	pop    edi
  4040e4:	push   ebp
  4040e5:	das    
  4040e6:	sbb    BYTE PTR [eax+0x137f0af6],0xeb
  4040ed:	mov    ds:0x47f9da4b,eax
  4040f2:	or     BYTE PTR [ecx-0x4702d93],al
  4040f8:	test   BYTE PTR [ebx],cl
  4040fa:	push   0xc1758eb2
  4040ff:	addr16 mov ecx,0xdcbe7d5e
  404105:	sbb    cl,BYTE PTR [ecx+0x31]
  404108:	adc    al,0x94
  40410b:	mov    ebp,0x67f97422
  404110:	or     eax,0x6f3f898f
  404115:	arpl   WORD PTR [edi+0x67],dx
  404118:	(bad)  
  404119:	sbb    BYTE PTR [ebx],dh
  40411b:	mov    ch,0x75
  40411d:	dec    edx
  40411e:	cmp    eax,0xaee5b22
  404123:	out    0x70,al
  404125:	outs   dx,DWORD PTR ds:[esi]
  404126:	fwait
  404127:	mov    ebp,0xcd78abcd
  40412c:	pop    eax
  40412d:	mov    eax,0x3a77223e
  404132:	xchg   edx,eax
  404133:	push   0xbceb7075
  404138:	mov    bl,0x3c
  40413a:	adc    DWORD PTR [ecx-0x1a],0x60b85493
  404141:	push   es
  404142:	rol    ah,cl
  404144:	js     0x404104
  404146:	jecxz  0x4041a5
  404148:	sti    
  404149:	push   ss
  40414a:	and    edi,DWORD PTR [ebx]
  40414c:	jp     0x4041ba
  40414e:	jp     0x4040e6
  404150:	inc    eax
  404151:	add    esi,DWORD PTR [eax+0x60d76f46]
  404157:	outs   dx,DWORD PTR ds:[esi]
  404158:	imul   esi,DWORD PTR [bx],0xb0db8387
  40415f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404160:	out    dx,al
  404161:	iret   
  404162:	pop    esp
  404163:	popa   
  404164:	fidivr DWORD PTR [edx-0x27]
  404167:	xor    DWORD PTR [eax+eiz*8+0x5c],0x81800c94
  40416f:	pop    ebx
  404170:	jge    0x404118
  404172:	xor    esi,edi
  404174:	xor    eax,0xc042975f
  404179:	sbb    BYTE PTR [eax],0x99
  40417c:	pop    ss
  40417d:	in     eax,dx
  40417e:	inc    ecx
  40417f:	jb     0x404103
  404181:	push   ecx
  404182:	mov    WORD PTR [ecx+0x63],ss
  404185:	add    DWORD PTR [ebp-0x5064ea8],ebx
  40418b:	pushf  
  40418c:	or     al,BYTE PTR [ebp+0x5dfc35da]
  404192:	sub    esi,DWORD PTR [ecx-0x2567be1c]
  404198:	mov    ah,0x26
  40419a:	ds in  eax,dx
  40419c:	xchg   esp,eax
  40419d:	imul   edx,ecx,0xffffffa1
  4041a0:	or     dh,bl
  4041a2:	shr    BYTE PTR [edx+edx*8],1
  4041a5:	lods   eax,DWORD PTR ds:[esi]
  4041a6:	outs   dx,BYTE PTR ds:[esi]
  4041a7:	je     0x404171
  4041a9:	ds pop esp
  4041ab:	inc    esp
  4041ac:	(bad)  
  4041ad:	pop    esi
  4041ae:	dec    esi
  4041af:	jg     0x4041f6
  4041b1:	or     BYTE PTR [edx+0x61],0x30
  4041b5:	popf   
  4041b6:	popa   
  4041b7:	je     0x4041a1
  4041b9:	add    edx,DWORD PTR [eax]
  4041bb:	sbb    eax,DWORD PTR [edi]
  4041bd:	sbb    al,bl
  4041bf:	dec    ebx
  4041c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041c1:	(bad)  
  4041c3:	fcom   QWORD PTR [eax-0x60249cae]
  4041c9:	ret    
  4041ca:	(bad)  
  4041cb:	adc    eax,DWORD PTR [ecx]
  4041cd:	mov    al,ds:0x67802c41
  4041d2:	imul   ecx,DWORD PTR [eax+0x7e],0x888f6a0b
  4041d9:	aad    0x40
  4041db:	push   edi
  4041dc:	bnd jno 0x4041c8
  4041df:	imul   edi,DWORD PTR [esp-0x6c],0xffffff94
  4041e4:	(bad)  
  4041e5:	jbe    0x4041ac
  4041e7:	mov    al,ds:0xbb77ffd0
  4041ec:	dec    edi
  4041ed:	xor    cl,BYTE PTR [edx+0x177c54ef]
  4041f3:	sahf   
  4041f4:	dec    eax
  4041f5:	push   eax
  4041f6:	cld    
  4041f7:	lea    ecx,[edx]
  4041f9:	out    dx,al
  4041fa:	mov    BYTE PTR [esi],bh
  4041fc:	sbb    esp,0x7b4f61d4
  404202:	sub    DWORD PTR [ecx],ecx
  404204:	mov    dl,0xb3
  404206:	aam    0xf7
  404208:	out    0x91,eax
  40420a:	rol    ebp,1
  40420c:	mov    ah,0x4d
  40420e:	cld    
  40420f:	es lahf 
  404211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404212:	mov    WORD PTR [edx-0x22f49b10],cs
  404218:	and    eax,0x8681d5ea
  40421d:	jmp    0x8ef3:0x19a234c5
  404224:	aas    
  404225:	and    ebx,DWORD PTR [ecx-0x457e2002]
  40422b:	add    esi,DWORD PTR [ebx-0x27]
  40422e:	push   edi
  40422f:	sbb    eax,0x98af099d
  404234:	mov    eax,ds:0xe6aa18f4
  404239:	dec    edx
  40423a:	and    ebp,DWORD PTR [edi+0x39a4966f]
  404240:	in     eax,0xdd
  404242:	shl    cl,0xdc
  404245:	inc    ecx
  404246:	call   0xddc:0x11178a69
  40424d:	dec    eax
  40424e:	out    dx,al
  40424f:	mov    esi,0xf52d085b
  404254:	scas   al,BYTE PTR es:[edi]
  404255:	shr    DWORD PTR [ebx-0x100da52b],1
  40425b:	pop    es
  40425c:	jbe    0x4042dc
  40425e:	cmp    esi,0x702d5122
  404264:	dec    ebp
  404265:	retf   0xcbff
  404268:	sbb    DWORD PTR [ecx],esi
  40426a:	xchg   esp,eax
  40426b:	daa    
  40426c:	push   ds
  40426d:	push   ecx
  40426e:	in     al,dx
  40426f:	jecxz  0x404257
  404271:	test   al,0x6
  404273:	lods   al,BYTE PTR es:[esi]
  404275:	scas   eax,DWORD PTR es:[edi]
  404276:	ds sahf 
  404278:	int    0xcd
  40427a:	and    DWORD PTR [ebx],edi
  40427c:	mov    ebp,0x8fa7cba0
  404281:	jl     0x404239
  404283:	mov    al,0xa
  404285:	xchg   ebx,eax
  404286:	pslld  mm4,QWORD PTR [esi]
  404289:	paddd  mm3,QWORD PTR ds:0x52a9ed6c
  404290:	jl     0x404282
  404292:	inc    edi
  404293:	or     esi,DWORD PTR [esi]
  404295:	retf   
  404296:	retf   0x1aaa
  404299:	add    BYTE PTR [ebp+0x1c],dl
  40429c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40429d:	aaa    
  40429e:	push   0xf0041d0f
  4042a3:	dec    esp
  4042a4:	push   cs
  4042a5:	repnz mov al,ds:0xdea2c331
  4042ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042ac:	add    eax,DWORD PTR [esi]
  4042ae:	popa   
  4042af:	or     DWORD PTR [eax-0x64],ecx
  4042b2:	xchg   ebp,eax
  4042b3:	cdq    
  4042b4:	lds    esp,FWORD PTR [eax-0x110c00b4]
  4042ba:	inc    ecx
  4042bb:	inc    esp
  4042bc:	shl    BYTE PTR [edx+0x75fad325],1
  4042c2:	jbe    0x4042e9
  4042c4:	push   ecx
  4042c5:	rol    BYTE PTR ds:0x8325e8fa,1
  4042cb:	in     eax,0xb9
  4042cd:	or     al,0x87
  4042cf:	rcr    DWORD PTR [ebx],cl
  4042d1:	push   0x1a06f369
  4042d6:	sahf   
  4042d7:	fs loope 0x404325
  4042da:	or     edi,DWORD PTR [edx]
  4042dc:	stc    
  4042dd:	adc    eax,0x1ef4dfc2
  4042e2:	cs ins BYTE PTR es:[edi],dx
  4042e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042e5:	inc    edx
  4042e6:	repz or al,0x84
  4042e9:	adc    al,0x70
  4042eb:	loope  0x40435b
  4042ed:	and    DWORD PTR fs:[edi-0x4bdc6b04],esi
  4042f4:	inc    esi
  4042f5:	add    DWORD PTR [edi-0x47],0xffffffce
  4042f9:	pusha  
  4042fa:	(bad)  
  4042fb:	imul   edx,DWORD PTR [edi+0x6f],0xffffffe8
  4042ff:	fs dec esi
  404301:	push   0xffffffd6
  404303:	cdq    
  404304:	in     al,0x9b
  404306:	lahf   
  404307:	sbb    al,0x2a
  404309:	mov    ch,BYTE PTR [edi-0x75]
  40430c:	std    
  40430d:	jg     0x404377
  40430f:	add    eax,0xbefe8b25
  404314:	test   eax,0xbd14cc72
  404319:	test   DWORD PTR [ecx-0xf],esp
  40431c:	fdiv   DWORD PTR [eax-0x278ee853]
  404322:	aas    
  404323:	jge    0x404325
  404325:	daa    
  404326:	sbb    BYTE PTR [edx+edi*4],0xd0
  40432a:	in     eax,dx
  40432b:	das    
  40432c:	in     eax,0xae
  40432e:	push   edx
  40432f:	icebp  
  404330:	test   al,0x5d
  404332:	push   0x7a
  404334:	cmp    ebp,edx
  404336:	lahf   
  404337:	test   DWORD PTR [ecx-0x4764aef0],ebp
  40433d:	push   esp
  40433e:	int    0x44
  404340:	loop   0x4043ab
  404342:	mov    DWORD PTR [edi-0x77ab7049],edi
  404348:	pop    ss
  404349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40434a:	shl    cl,cl
  40434c:	xchg   BYTE PTR [ecx+0x66],cl
  40434f:	aaa    
  404350:	sub    BYTE PTR [esi],dh
  404352:	in     eax,0xd6
  404354:	or     al,0x29
  404356:	loopne 0x404351
  404358:	imul   esi,DWORD PTR [edx],0xffffffa8
  40435b:	pop    ds
  40435c:	xlat   BYTE PTR ds:[ebx]
  40435d:	data16 mov al,ds:0x48487f37
  404363:	pop    eax
  404364:	jle    0x404334
  404366:	mov    DWORD PTR ds:0x46bc9e9,0xc749ee62
  404370:	sbb    BYTE PTR [eax+0x1753f30],dh
  404376:	pop    ebx
  404377:	or     eax,0xbcca55c4
  40437c:	out    0x6c,al
  40437e:	inc    DWORD PTR [edi-0x22]
  404381:	pop    edx
  404382:	xchg   ebp,eax
  404383:	repnz in al,dx
  404385:	adc    ah,cl
  404387:	push   esi
  404388:	stos   DWORD PTR es:[edi],eax
  404389:	lds    esp,FWORD PTR [ebx+eiz*1-0x354ec72f]
  404390:	mov    eax,0x68f48010
  404395:	pop    ebp
  404396:	and    BYTE PTR [eax],al
  404398:	adc    al,0x58
  40439a:	(bad)  
  40439b:	call   0x6904:0x602770cf
  4043a2:	dec    ecx
  4043a3:	add    dl,BYTE PTR [edx]
  4043a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043a6:	addr16 pop edx
  4043a8:	dec    ebp
  4043a9:	push   0xffffffb5
  4043ab:	push   ds
  4043ac:	mov    ds:0x3fbf389e,al
  4043b1:	add    al,dh
  4043b3:	adc    BYTE PTR [ecx-0x7a],al
  4043b6:	mov    bh,0x83
  4043b8:	ja     0x404340
  4043ba:	sub    bh,BYTE PTR [esp+esi*4]
  4043bd:	xor    ebx,DWORD PTR [eax+0x22708aaa]
  4043c3:	xor    BYTE PTR ds:0x3ff6e081,al
  4043c9:	adc    eax,0x90bac544
  4043ce:	gs push cs
  4043d0:	imul   ecx,DWORD PTR [esi-0x11e599b4],0x6407ea93
  4043da:	(bad)  
  4043dc:	fmul   DWORD PTR [edi-0x41]
  4043df:	dec    eax
  4043e0:	xor    ah,BYTE PTR [ebp-0xf]
  4043e3:	push   ds
  4043e4:	call   0xa7160a5b
  4043e9:	and    BYTE PTR [ebp+0x60],ah
  4043ec:	ins    DWORD PTR es:[edi],dx
  4043ed:	cld    
  4043ee:	std    
  4043ef:	aas    
  4043f0:	jo     0x404451
  4043f2:	mov    ebx,ebx
  4043f4:	mov    ebp,0xcb48e778
  4043f9:	mov    ecx,0x26c52c58
  4043fe:	jge    0x4043fc
  404400:	pop    ebx
  404401:	jae    0x4043f5
  404403:	scas   eax,DWORD PTR es:[edi]
  404404:	call   0xf609:0x25e9397e
  40440b:	and    DWORD PTR [edi-0x1c],edi
  40440e:	dec    ebx
  40440f:	ror    DWORD PTR [esi-0xf63792a],0x0
  404416:	xor    al,0x3d
  404418:	clc    
  404419:	scas   eax,DWORD PTR es:[edi]
  40441a:	xchg   DWORD PTR [edx-0x40],ebp
  40441d:	or     BYTE PTR [edx+0x7223e72],bh
  404423:	jb     0x4043b9
  404425:	xchg   ebx,ebx
  404427:	outs   dx,BYTE PTR ds:[esi]
  404428:	int    0xb0
  40442a:	jge    0x4043e6
  40442c:	push   ebx
  40442d:	out    dx,eax
  40442e:	outs   dx,BYTE PTR ds:[esi]
  40442f:	mov    eax,ds:0x8096eed3
  404434:	nop
  404435:	xor    esp,DWORD PTR [ebx+0x6ff1427c]
  40443b:	test   bh,al
  40443d:	cmp    cl,cl
  40443f:	and    al,0xa0
  404441:	dec    esp
  404442:	mov    ds:0xdc1d787a,al
  404447:	adc    BYTE PTR [eax+ebp*8],0x20
  40444b:	les    edx,FWORD PTR [edi]
  40444d:	lods   eax,DWORD PTR ds:[esi]
  40444e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40444f:	jge    0x40446e
  404451:	test   BYTE PTR [ebp+0x229f4db9],al
  404457:	icebp  
  404458:	mov    bl,0x52
  40445a:	ds xor eax,0x29979566
  404460:	mov    ds:0x1891fe57,eax
  404465:	pop    es
  404466:	inc    edi
  404467:	push   ebx
  404468:	inc    eax
  404469:	js     0x4044df
  40446b:	add    eax,0x8bb90789
  404470:	lea    esi,[ebx]
  404472:	xchg   edx,eax
  404473:	dec    esp
  404474:	aas    
  404475:	cmp    ch,BYTE PTR [edx+esi*1-0x3a453023]
  40447c:	(bad)  
  40447d:	cli    
  40447e:	les    esi,FWORD PTR [eax-0x45e8e8ab]
  404484:	scas   al,BYTE PTR es:[edi]
  404485:	add    eax,0x2c7e2967
  40448a:	shl    ebp,0x2b
  40448d:	imul   edi,DWORD PTR [esi+eax*1-0x131e6d39],0x864abe36
  404498:	pop    ds
  404499:	sbb    eax,ecx
  40449b:	mov    edi,0x23819052
  4044a0:	inc    eax
  4044a1:	test   eax,0x4adb0f78
  4044a6:	mov    bh,0x8e
  4044a8:	shr    BYTE PTR [eax-0x3c4b48f2],0xcb
  4044af:	pop    ds
  4044b0:	in     eax,0xa6
  4044b2:	mov    eax,ds:0xb97d8b8b
  4044b7:	xor    esp,DWORD PTR [eax+0x59466af]
  4044bd:	test   BYTE PTR [eax+0x26],bl
  4044c0:	mov    edx,0xb94fd143
  4044c5:	mov    ebp,0x30ddfd6b
  4044ca:	add    cl,BYTE PTR [ecx]
  4044cc:	jp     0x404476
  4044ce:	pop    ds
  4044cf:	dec    esp
  4044d0:	(bad)  
  4044d1:	sub    al,0x40
  4044d3:	int    0xec
  4044d5:	js     0x404524
  4044d7:	stc    
  4044d8:	add    ah,BYTE PTR [ebx]
  4044da:	mov    dl,0xd4
  4044dc:	lods   eax,DWORD PTR ds:[esi]
  4044dd:	pop    ds
  4044de:	or     eax,0xa3ed4d97
  4044e3:	pop    esp
  4044e4:	out    dx,al
  4044e5:	sbb    dh,BYTE PTR [eax-0x5d]
  4044e8:	or     al,BYTE PTR [eax-0x5333fd04]
  4044ee:	mov    eax,ds:0xb09bdcca
  4044f3:	jecxz  0x4044a3
  4044f5:	rol    DWORD PTR [esi],1
  4044f7:	popf   
  4044f8:	jmp    0x1ee035c3
  4044fd:	in     al,0xd9
  4044ff:	adc    edx,DWORD PTR [edi-0x1]
  404502:	(bad)  
  404503:	mov    esi,0xf80b5545
  404508:	dec    esi
  404509:	fadd   DWORD PTR [esp+eiz*2]
  40450c:	adc    BYTE PTR [edx-0x70],al
  40450f:	dec    eax
  404510:	into   
  404511:	xchg   esi,eax
  404512:	xor    edi,eax
  404514:	aam    0xc2
  404516:	arpl   dx,sp
  404518:	inc    edx
  404519:	jne    0x4044ca
  40451b:	(bad)  
  40451d:	jno    0x404563
  40451f:	mov    eax,0x9a23a497
  404524:	jo     0x40458f
  404526:	add    eax,0x44bf1c99
  40452b:	cmp    BYTE PTR [edi+eiz*2],al
  40452e:	xor    ah,dh
  404530:	jae    0x4045b1
  404532:	jecxz  0x404523
  404534:	mov    esi,DWORD PTR [edi]
  404536:	mov    eax,ds:0xbed14418
  40453b:	ret    0xf5a5
  40453e:	mov    al,ds:0xc23d102a
  404543:	and    al,0x36
  404545:	fwait
  404546:	lea    esp,[ecx]
  404548:	add    al,0x20
  40454a:	fsub   DWORD PTR [ecx+0x46a5f3fa]
  404550:	cs aam 0xc3
  404553:	lea    ebx,[ebx]
  404555:	jno    0x40453d
  404557:	mov    ch,BYTE PTR [esi]
  404559:	jmp    0xd2ee91db
  40455e:	and    bl,BYTE PTR [edx+0x1772f91e]
  404564:	dec    ebp
  404565:	dec    esi
  404566:	(bad)  
  404567:	gs pop ebp
  404569:	out    dx,al
  40456a:	add    ah,BYTE PTR [ebx+edi*2-0x2e]
  40456e:	jmp    DWORD PTR [edi-0x71]
  404571:	(bad)  
  404573:	std    
  404574:	in     al,dx
  404575:	jbe    0x40451c
  404577:	ror    BYTE PTR [ebp+0x7],cl
  40457a:	int    0x73
  40457c:	cmc    
  40457d:	push   esi
  40457e:	inc    ebx
  40457f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404580:	pop    ebx
  404581:	and    eax,0x891829f0
  404586:	test   al,0xb7
  404588:	mov    edi,0xa8d6cbe3
  40458d:	lods   al,BYTE PTR ds:[esi]
  40458e:	aas    
  40458f:	call   0x465d:0x3a35c855
  404596:	sub    al,0x86
  404598:	loope  0x4045aa
  40459a:	icebp  
  40459b:	pop    edi
  40459c:	outs   dx,BYTE PTR ds:[esi]
  40459d:	mov    ah,0x25
  40459f:	lods   al,BYTE PTR ds:[esi]
  4045a0:	xor    edi,DWORD PTR [eax+ecx*2]
  4045a3:	fnsave [ebx+0x4f]
  4045a6:	data16 hlt 
  4045a8:	ins    DWORD PTR es:[edi],dx
  4045a9:	mov    ch,0x26
  4045ab:	or     al,ch
  4045ad:	inc    esi
  4045ae:	pop    edx
  4045af:	pop    ss
  4045b0:	dec    ebp
  4045b1:	and    eax,0x23be693b
  4045b6:	mov    dl,0x78
  4045b8:	ret    
  4045b9:	hlt    
  4045ba:	xor    eax,0x76efe1e9
  4045bf:	addr16 jnp 0x4045ca
  4045c2:	xor    dh,al
  4045c4:	ins    DWORD PTR es:[edi],dx
  4045c5:	lods   eax,DWORD PTR ds:[esi]
  4045c6:	mov    eax,eax
  4045c8:	inc    esi
  4045c9:	xchg   esi,eax
  4045ca:	not    DWORD PTR [eax-0x4141946b]
  4045d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d1:	ds loop 0x404623
  4045d4:	push   0xffffffdb
  4045d6:	push   ebx
  4045d7:	xchg   BYTE PTR [esp+edx*2],ch
  4045da:	daa    
  4045db:	pop    edi
  4045dc:	or     eax,0x1f2c323e
  4045e1:	cmp    BYTE PTR [ebx+0x705a6634],bl
  4045e7:	js     0x4045db
  4045e9:	pop    ss
  4045ea:	es pop ds
  4045ec:	mov    ebp,edx
  4045ee:	pop    esi
  4045ef:	arpl   dx,dx
  4045f1:	ja     0x404622
  4045f3:	dec    edx
  4045f4:	enter  0x3b3,0xe3
  4045f8:	or     bh,bl
  4045fa:	jno    0x4045c9
  4045fc:	push   ecx
  4045fd:	dec    edi
  4045fe:	fxch   st(0)
  404600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404601:	shr    ecx,0x25
  404604:	and    edx,DWORD PTR ds:0x59e90ab6
  40460a:	mov    dh,0xf2
  40460c:	mov    edi,0x9c85d548
  404611:	inc    eax
  404612:	or     ebx,DWORD PTR [edx]
  404614:	aaa    
  404615:	add    BYTE PTR [ebp-0x61],dl
  404618:	push   es
  404619:	stc    
  40461a:	sub    al,0x7b
  40461c:	rcl    BYTE PTR [eax+edx*8],cl
  40461f:	fwait
  404620:	pop    ebp
  404621:	sahf   
  404622:	adc    cl,BYTE PTR [edi+0x1a]
  404625:	dec    esp
  404626:	imul   edi,DWORD PTR [ebx],0x65
  404629:	iret   
  40462a:	xor    BYTE PTR ds:0x12b2588e,dl
  404630:	sbb    DWORD PTR [edi-0xc5a79aa],eax
  404636:	fs fcmovu st,st(7)
  404639:	dec    esp
  40463a:	jecxz  0x4045f4
  40463c:	call   0xf96d:0xf7f63eff
  404643:	pop    eax
  404644:	es inc ecx
  404646:	test   eax,0x30ae368e
  40464b:	pop    ebp
  40464c:	mov    eax,ds:0xe05e0925
  404651:	cs mov esp,0xd1e88840
  404657:	(bad)  
  404658:	fisub  DWORD PTR [ebx+0xfe3378a]
  40465e:	dec    ecx
  40465f:	xor    DWORD PTR [ebx-0x3ead0af1],esi
  404665:	lods   al,BYTE PTR ds:[esi]
  404666:	int    0x3a
  404668:	lods   al,BYTE PTR ds:[esi]
  404669:	sub    BYTE PTR [esi+ebp*2-0x33],ah
  40466d:	sti    
  40466e:	daa    
  40466f:	(bad)  
  404671:	push   ds
  404672:	aaa    
  404673:	fimul  DWORD PTR [eax+0x7e]
  404676:	or     DWORD PTR [esi-0x70],0x81985ea1
  40467d:	jnp    0x404618
  40467f:	arpl   di,sp
  404681:	mov    edx,0xc82f1dee
  404686:	inc    edi
  404687:	fbld   TBYTE PTR [ebx-0x1f]
  40468a:	loopne 0x404708
  40468c:	jmp    0xbf745758
  404691:	lods   al,BYTE PTR ds:[esi]
  404692:	and    al,0x51
  404694:	push   edx
  404695:	xchg   DWORD PTR [edx-0x26],edx
  404698:	das    
  404699:	xor    ch,BYTE PTR [edi+0xfe84294]
  40469f:	loopne 0x404710
  4046a1:	mov    ebx,0xaba7a47b
  4046a6:	sbb    dh,BYTE PTR [edx]
  4046a8:	xor    BYTE PTR [ebp+0x6c],al
  4046ab:	dec    edx
  4046ac:	cwde   
  4046ad:	or     al,0xef
  4046af:	or     esp,ebx
  4046b1:	ficomp WORD PTR [bx+si-0x2515]
  4046b6:	cmp    BYTE PTR [esi],ah
  4046b8:	cmp    dh,ch
  4046ba:	jno    0x4046b3
  4046bc:	cmp    ebp,DWORD PTR [ecx]
  4046be:	aaa    
  4046bf:	inc    esp
  4046c0:	or     al,0xe7
  4046c2:	int3   
  4046c3:	xlat   BYTE PTR ds:[ebx]
  4046c4:	dec    edi
  4046c5:	inc    edx
  4046c6:	xchg   ebx,eax
  4046c7:	cmp    BYTE PTR [eax+ebx*2],bh
  4046ca:	(bad)  
  4046cb:	(bad)  
  4046cc:	cmp    eax,0x965efcd
  4046d1:	xchg   esi,eax
  4046d2:	mov    ebx,0xb220d7db
  4046d7:	push   ecx
  4046d8:	dec    esp
  4046d9:	ins    DWORD PTR es:[edi],dx
  4046da:	and    eax,0xb3ffb482
  4046df:	and    al,0xbf
  4046e1:	pop    eax
  4046e2:	jecxz  0x40475f
  4046e4:	cmp    cl,BYTE PTR es:[bp+di+0x633f]
  4046ea:	mov    ch,0x45
  4046ec:	ret    0x2b1
  4046ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046f0:	imul   eax,esi,0x57
  4046f3:	mov    BYTE PTR [ebx-0x72f403bd],0x22
  4046fa:	mov    eax,0x78515884
  4046ff:	add    DWORD PTR [ebp-0x60],ebx
  404702:	sub    dl,dl
  404704:	xor    al,0xab
  404706:	dec    eax
  404707:	xchg   ecx,eax
  404708:	fsubr  QWORD PTR [ebp-0x470da92b]
  40470e:	xor    BYTE PTR [esi],ah
  404710:	(bad)  
  404711:	adc    edi,DWORD PTR ds:0xa2091815
  404717:	in     al,0x7d
  404719:	sahf   
  40471a:	(bad)  
  40471b:	out    0x17,al
  40471d:	ins    BYTE PTR es:[edi],dx
  40471e:	test   bh,bh
  404720:	das    
  404721:	and    al,0x8b
  404723:	inc    edx
  404724:	call   0xcbf3a272
  404729:	lds    ecx,FWORD PTR [eax+edx*4-0x60afc0eb]
  404730:	pop    ds
  404731:	loope  0x4046f6
  404733:	stc    
  404734:	leave  
  404735:	outs   dx,DWORD PTR ss:[esi]
  404737:	out    dx,al
  404738:	and    cl,BYTE PTR [ecx-0x59a181be]
  40473e:	ficomp WORD PTR [edi+0x4b53f2c3]
  404744:	push   esi
  404745:	mov    ebp,0xe4225deb
  40474a:	mov    cl,0x65
  40474c:	adc    edx,edi
  40474e:	inc    ecx
  40474f:	push   edi
  404750:	adc    DWORD PTR [ebx],eax
  404752:	xor    cl,BYTE PTR [ebp+0x33]
  404755:	xor    bl,bh
  404757:	xchg   edx,eax
  404758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404759:	add    bl,BYTE PTR [ebx+edi*1+0x55ccd850]
  404760:	in     eax,0x9a
  404762:	outs   dx,DWORD PTR ds:[esi]
  404763:	ror    DWORD PTR [ecx-0x3f],cl
  404766:	je     0x4047bb
  404768:	jne    0x40472c
  40476a:	xlat   BYTE PTR ds:[ebx]
  40476b:	push   cs
  40476c:	lods   eax,DWORD PTR ds:[esi]
  40476d:	mov    ebx,0x5390bf20
  404772:	iret   
  404773:	sbb    DWORD PTR [edx+0x51a22d09],0xffffffd4
  40477a:	in     al,dx
  40477b:	aaa    
  40477c:	(bad)  
  40477d:	pop    ecx
  40477e:	ret    0x788c
  404781:	jmp    0x404748
  404783:	push   ss
  404784:	and    eax,0x6b7edc8e
  404789:	sub    bl,ch
  40478b:	jp     0x4047bd
  40478d:	in     eax,0xfd
  40478f:	xchg   ecx,eax
  404790:	push   ecx
  404791:	jmp    0x812c:0xfef007ac
  404798:	(bad)  
  404799:	jle    0x404787
  40479b:	popf   
  40479c:	lods   al,BYTE PTR ds:[esi]
  40479d:	stc    
  40479e:	pop    ecx
  40479f:	xor    ebx,ecx
  4047a1:	push   esi
  4047a2:	and    DWORD PTR [eax],0xffffff9b
  4047a5:	hlt    
  4047a6:	cmp    DWORD PTR [edx-0x565d2308],esp
  4047ac:	fcomp  QWORD PTR [eax-0x4]
  4047af:	dec    edx
  4047b0:	arpl   WORD PTR [ebx+edx*8],bp
  4047b3:	dec    ebx
  4047b4:	push   es
  4047b5:	data16 mov al,BYTE PTR [ecx]
  4047b8:	fadd   st,st(4)
  4047ba:	mov    cl,0x17
  4047bc:	jmp    0x4047b6
  4047be:	aam    0x52
  4047c0:	push   ss
  4047c1:	lods   al,BYTE PTR ds:[esi]
  4047c2:	dec    edi
  4047c3:	scas   al,BYTE PTR es:[edi]
  4047c4:	mov    WORD PTR [eax+edx*1],ds
  4047c7:	inc    ebp
  4047c8:	mov    ebp,0x24f0c7ef
  4047cd:	jns    0x4047bc
  4047cf:	push   esp
  4047d0:	xlat   BYTE PTR ds:[ebx]
  4047d1:	loop   0x40475f
  4047d3:	push   edx
  4047d4:	lds    edx,FWORD PTR [esi]
  4047d6:	dec    ebp
  4047d7:	stos   DWORD PTR es:[edi],eax
  4047d8:	jmp    0x4047a2
  4047da:	mov    ecx,0xc7437685
  4047df:	jge    0x40484f
  4047e1:	call   0x9389:0xddefda8a
  4047e8:	(bad)  
  4047e9:	cwde   
  4047ea:	push   DWORD PTR [esp+eiz*8-0x17]
  4047ee:	mov    ch,0x6e
  4047f0:	pop    ds
  4047f1:	mov    ds:0x8263a5d1,eax
  4047f6:	and    ah,ah
  4047f8:	push   ebp
  4047f9:	fidiv  WORD PTR [edx-0x24]
  4047fc:	add    BYTE PTR [ebx-0x8ca3bac],bh
  404802:	outs   dx,DWORD PTR ds:[esi]
  404803:	sahf   
  404804:	sub    al,0x1a
  404806:	je     0x404799
  404808:	es or  ecx,edx
  40480b:	mov    dh,0x2e
  40480d:	gs jge 0x4047ee
  404810:	std    
  404811:	push   ebp
  404812:	bound  ebp,QWORD PTR [ebx+0x1c3eed9e]
  404818:	shl    BYTE PTR [ebp+0x6e0a6772],cl
  40481e:	push   edi
  40481f:	mov    ah,0xb6
  404821:	inc    edi
  404822:	lds    ecx,FWORD PTR [ebx]
  404824:	add    DWORD PTR [eax],eax
  404826:	jne    0x4047b3
  404828:	fwait
  404829:	or     al,0xb6
  40482b:	cli    
  40482c:	or     dh,dh
  40482e:	mov    bl,0x91
  404830:	loope  0x404825
  404832:	(bad)  
  404833:	data16 inc BYTE PTR [esi+0x1be69cfd]
  40483a:	cmp    al,0xb3
  40483c:	or     bl,bl
  40483e:	mov    ah,0x43
  404840:	xchg   edi,eax
  404841:	sub    esi,DWORD PTR [ebp-0x54b3ebe0]
  404847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404848:	cli    
  404849:	push   edx
  40484a:	ds mov ebx,0xc61ccfd2
  404850:	push   eax
  404851:	out    dx,al
  404852:	adc    DWORD PTR ds:0xe4463c04,esi
  404858:	rcr    esp,cl
  40485a:	mov    esp,0x45f13bad
  40485f:	in     al,dx
  404860:	les    edx,FWORD PTR [esi+0x6389b742]
  404866:	bnd jmp 0xa07c3c15
  40486c:	mov    ebx,0x6e1582f2
  404871:	sub    al,0x2f
  404873:	cmp    al,BYTE PTR [esi+edi*1-0x46]
  404877:	mov    ds:0x932c525,eax
  40487c:	or     DWORD PTR [edx+ecx*1],edx
  40487f:	jle    0x4048de
  404881:	sbb    bh,ah
  404883:	jno    0x404894
  404885:	mov    ch,0xeb
  404887:	add    BYTE PTR [edx],ah
  404889:	dec    edi
  40488a:	gs mov dh,0x0
  40488d:	inc    ebp
  40488e:	mov    esp,0x57b420a6
  404893:	xor    dh,bh
  404895:	bound  esp,QWORD PTR [edx+0x2c]
  404898:	rol    BYTE PTR [ecx+0x77be3f7a],0xae
  40489f:	mov    dh,0xae
  4048a1:	loope  0x40484d
  4048a3:	or     esi,DWORD PTR [ebp+0x450b765a]
  4048a9:	inc    esp
  4048aa:	mov    ss,eax
  4048ac:	cmp    bl,ah
  4048ae:	sti    
  4048af:	lock and DWORD PTR ss:[ebx],ebx
  4048b3:	inc    ecx
  4048b4:	test   DWORD PTR [eax],ebx
  4048b6:	out    0x54,eax
  4048b8:	sbb    edx,DWORD PTR [ecx]
  4048ba:	test   BYTE PTR [edx-0x34b15edf],bh
  4048c0:	fs sub eax,0x4c1c92f3
  4048c6:	sub    eax,0xdc721f1d
  4048cb:	in     al,dx
  4048cc:	aaa    
  4048cd:	les    esp,FWORD PTR [ecx]
  4048cf:	scas   eax,DWORD PTR es:[edi]
  4048d0:	cli    
  4048d1:	hlt    
  4048d2:	addr16 mov ebx,0x302337b8
  4048d8:	stos   DWORD PTR es:[edi],eax
  4048d9:	add    eax,0x4ed674ad
  4048de:	jg     0x404889
  4048e0:	push   0xffffffea
  4048e2:	push   esi
  4048e3:	inc    DWORD PTR [ebp+0x56]
  4048e6:	pop    ecx
  4048e7:	enter  0x8bf2,0xb6
  4048eb:	data16 (bad) 
  4048ed:	dec    edx
  4048ee:	and    al,al
  4048f0:	and    BYTE PTR [edx-0x24dea72c],bh
  4048f6:	or     ch,0xac
  4048f9:	jecxz  0x40494c
  4048fb:	cmp    BYTE PTR [edi-0x5c7abbd7],dl
  404901:	adc    al,0x79
  404903:	push   ebp
  404904:	ror    bl,0x1f
  404907:	xchg   DWORD PTR [ecx+ecx*2],esp
  40490a:	adc    esi,DWORD PTR ds:0x758461fa
  404910:	call   0x1f34:0xe2892b2
  404917:	add    dl,bh
  404919:	jge    0x404949
  40491b:	ret    0x916c
  40491e:	and    BYTE PTR [eax+edi*2],0xd4
  404922:	push   ebx
  404923:	je     0x4048c7
  404925:	or     ecx,ebx
  404927:	xchg   esi,eax
  404928:	sub    DWORD PTR [ecx-0x4c],ebp
  40492b:	xor    eax,DWORD PTR [edx-0x4565826a]
  404931:	fstp   TBYTE PTR [eax+edx*4-0x4bbd685f]
  404938:	jne    0x40493d
  40493a:	xchg   esi,eax
  40493b:	push   ebx
  40493c:	inc    edi
  40493d:	pop    eax
  40493e:	dec    edx
  40493f:	pop    esi
  404940:	lahf   
  404941:	dec    ecx
  404942:	iret   
  404943:	test   BYTE PTR [esi],dl
  404945:	iret   
  404946:	dec    ebx
  404947:	sbb    BYTE PTR [edx-0x6bad9694],bh
  40494d:	xor    eax,0xb0bfffb0
  404952:	sub    DWORD PTR [eax],esp
  404954:	xchg   ebx,eax
  404955:	out    dx,al
  404956:	in     eax,dx
  404957:	in     al,0xd2
  404959:	in     al,0xb
  40495b:	dec    esp
  40495c:	call   0x28aab392
  404961:	push   ecx
  404962:	add    BYTE PTR [edx-0x7d7db01f],dl
  404968:	add    eax,0xf92fcc92
  40496d:	mov    sp,ds
  404970:	mov    dh,0x47
  404972:	inc    eax
  404973:	cmp    DWORD PTR [edx],esi
  404975:	int    0x6a
  404977:	push   edi
  404978:	cs dec esi
  40497a:	shr    DWORD PTR [ecx],1
  40497c:	pop    edi
  40497d:	cli    
  40497e:	ins    DWORD PTR es:[edi],dx
  40497f:	iret   
  404980:	or     ecx,DWORD PTR [ebp+0x5]
  404983:	int3   
  404984:	xor    DWORD PTR [edi],0xffffffdd
  404987:	jecxz  0x404990
  404989:	xor    BYTE PTR [esi-0x34],bh
  40498c:	mov    cl,0x5b
  40498e:	xchg   edx,eax
  40498f:	xor    al,bl
  404991:	leave  
  404992:	adc    BYTE PTR [eax-0x45ecf2df],al
  404998:	mov    ebp,0x1a812dfc
  40499d:	pop    ds
  40499e:	cdq    
  40499f:	ins    DWORD PTR es:[edi],dx
  4049a0:	imul   esi,DWORD PTR [eax-0x12],0xd071ae38
  4049a7:	iret   
  4049a8:	dec    ebx
  4049a9:	pusha  
  4049aa:	mov    DWORD PTR [edx],ebp
  4049ac:	loopne 0x404934
  4049ae:	xchg   BYTE PTR [ebp-0x542ba580],ch
  4049b4:	jne    0x404999
  4049b6:	retf   
  4049b7:	jno    0x404a24
  4049b9:	jmp    0x40494c
  4049bb:	(bad)  
  4049bc:	sti    
  4049bd:	daa    
  4049be:	fiadd  WORD PTR [esi+eiz*4-0x7d74ef4b]
  4049c5:	pop    ss
  4049c6:	adc    bh,BYTE PTR [edx-0x64e966ea]
  4049cc:	stc    
  4049cd:	jecxz  0x404963
  4049cf:	std    
  4049d0:	sub    al,0xbb
  4049d2:	daa    
  4049d3:	in     eax,dx
  4049d4:	sbb    al,0xf2
  4049d6:	cmp    bl,bh
  4049d8:	test   BYTE PTR [edi-0x20807f31],0xb0
  4049df:	std    
  4049e0:	push   ecx
  4049e1:	pop    esi
  4049e2:	mov    edi,0x1c454755
  4049e7:	icebp  
  4049e8:	jp     0x4049a8
  4049ea:	mov    dl,BYTE PTR [ebp-0x6a84c8b4]
  4049f0:	xor    bh,BYTE PTR [edi+0x17]
  4049f3:	and    DWORD PTR [eax-0x228a8aaa],eax
  4049f9:	sbb    eax,0x76aee80e
  4049fe:	push   ss
  4049ff:	and    dh,BYTE PTR [eax-0x61]
  404a02:	adc    al,0x8c
  404a04:	inc    ecx
  404a05:	arpl   bp,bx
  404a07:	add    ebx,esp
  404a09:	sbb    DWORD PTR [edi-0xd357b50],eax
  404a0f:	pop    ss
  404a10:	jbe    0x4049a4
  404a12:	xor    DWORD PTR [ecx+0x69],ebx
  404a15:	add    BYTE PTR [edi+eiz*8-0x66],ch
  404a19:	xor    DWORD PTR [ecx],esp
  404a1b:	pop    eax
  404a1c:	out    dx,al
  404a1d:	or     al,0x84
  404a1f:	enter  0xc85e,0x27
  404a23:	repnz fst QWORD PTR [ebx]
  404a26:	cmp    al,0xc9
  404a28:	leave  
  404a29:	and    eax,0x54601ea1
  404a2e:	push   ebp
  404a2f:	scas   al,BYTE PTR es:[edi]
  404a30:	inc    esp
  404a31:	scas   al,BYTE PTR es:[edi]
  404a32:	jl     0x404a78
  404a34:	mov    ds:0xb0b1970,eax
  404a39:	sub    al,cl
  404a3b:	dec    edi
  404a3c:	mov    eax,ds:0x3a8f4348
  404a41:	cmp    DWORD PTR [eax],esi
  404a43:	lock sub ebx,esi
  404a46:	jmp    0x57f9:0x3a62326
  404a4d:	inc    esp
  404a4e:	enter  0x69b,0x95
  404a52:	imul   esi,DWORD PTR [edi],0x7f
  404a55:	inc    ebx
  404a56:	popf   
  404a57:	scas   al,BYTE PTR es:[edi]
  404a58:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  404a5a:	or     eax,0xc3ae480
  404a5f:	inc    esp
  404a60:	xchg   ebx,eax
  404a61:	mov    al,0x4c
  404a63:	mov    eax,0xcddfebfd
  404a68:	cmc    
  404a69:	push   esp
  404a6a:	sbb    al,0xd0
  404a6c:	dec    ebx
  404a6d:	inc    eax
  404a6e:	and    al,0x3
  404a70:	add    ebp,DWORD PTR es:[eax]
  404a73:	jp     0x404aa6
  404a75:	dec    edx
  404a76:	jno    0x404a65
  404a78:	add    bh,BYTE PTR [ebx+0x7bff90c1]
  404a7e:	test   dl,al
  404a80:	jno    0x404aa5
  404a82:	push   0x647a4b9e
  404a87:	inc    edi
  404a88:	jnp    0x404aa5
  404a8a:	xchg   esi,eax
  404a8b:	mov    ecx,DWORD PTR [ecx+ecx*1]
  404a8e:	or     eax,DWORD PTR [ecx-0x6d]
  404a91:	mov    cl,0x59
  404a93:	and    BYTE PTR ds:0xd5a78b96,dh
  404a99:	pushf  
  404a9a:	fcom   QWORD PTR [eax]
  404a9c:	mov    eax,0x70997b11
  404aa1:	push   0x4dd3d1b0
  404aa6:	xchg   esp,eax
  404aa7:	mov    DWORD PTR [edx],edx
  404aa9:	jge    0x404a44
  404aab:	das    
  404aac:	mov    edi,0x9fea675f
  404ab1:	or     eax,0x2842c6be
  404ab6:	cmp    bl,BYTE PTR [edi+0x26]
  404ab9:	bt     DWORD PTR [edi],edx
  404abc:	mov    ebp,DWORD PTR [eax]
  404abe:	mov    dh,0x1a
  404ac0:	stc    
  404ac1:	mov    al,0x1a
  404ac3:	sub    ebx,DWORD PTR ds:[ebp+0x4db306c9]
  404aca:	xchg   ecx,eax
  404acb:	mov    ah,0x3e
  404acd:	js     0x404aec
  404acf:	faddp  st(3),st
  404ad1:	lea    ebp,[ebp-0x4d]
  404ad4:	jbe    0x404ab7
  404ad6:	inc    ecx
  404ad7:	xchg   ecx,eax
  404ad8:	lock jbe 0x404b19
  404adb:	aad    0xb9
  404add:	(bad)
  404ae0:	and    esp,DWORD PTR [ecx-0x56e918eb]
  404ae6:	(bad)  
  404ae7:	mov    eax,0x5a57f914
  404aec:	inc    ebp
  404aed:	pop    ds
  404aee:	push   ebp
  404aef:	dec    esi
  404af0:	sti    
  404af1:	jge    0x404a81
  404af3:	and    edi,DWORD PTR [edi-0x17185b01]
  404af9:	jb     0x404ab1
  404afb:	mov    bl,0x83
  404afd:	rol    esi,0x32
  404b00:	mov    ch,0x9f
  404b02:	add    dh,cl
  404b04:	jmp    0x3756:0x2aa0685b
  404b0b:	es push ss
  404b0d:	retf   
  404b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b0f:	iret   
  404b10:	fmul   DWORD PTR [esi-0x6c421909]
  404b16:	mov    al,0x56
  404b18:	or     eax,0x34b8da16
  404b1d:	sbb    edi,edi
  404b1f:	cld    
  404b20:	push   esp
  404b21:	dec    esp
  404b22:	leave  
  404b23:	mov    DWORD PTR [esi-0x4246e1d2],edi
  404b29:	mov    ecx,0xc9fb0bdb
  404b2e:	nop
  404b2f:	jle    0x404b7a
  404b31:	int    0x5e
  404b33:	aaa    
  404b34:	gs je  0x404b63
  404b37:	jbe    0x404b35
  404b39:	lods   al,BYTE PTR ds:[esi]
  404b3a:	inc    esi
  404b3b:	pushf  
  404b3c:	mov    ds:0x644ccafb,al
  404b41:	mov    edx,0x84de32a5
  404b46:	jae    0x404b60
  404b48:	sahf   
  404b49:	daa    
  404b4a:	push   cs
  404b4b:	int3   
  404b4c:	mov    dh,0xc8
  404b4e:	std    
  404b4f:	pop    edx
  404b50:	jmp    0x42a8:0xfeccc92b
  404b57:	push   ebx
  404b58:	aad    0xc
  404b5a:	xor    ebp,DWORD PTR [edi]
  404b5c:	mov    dh,0x9c
  404b5e:	mul    BYTE PTR [ecx]
  404b60:	pop    ecx
  404b61:	add    DWORD PTR [ebx],ebx
  404b63:	push   cs
  404b64:	call   0xfb8f:0x1568605b
  404b6b:	lods   al,BYTE PTR ds:[esi]
  404b6c:	xchg   BYTE PTR ds:0x99084fb,dh
  404b72:	addr16 repz xchg ebp,eax
  404b75:	nop
  404b76:	imul   DWORD PTR [eax+0x24]
  404b79:	ret    
  404b7a:	data16 jne 0x404b7b
  404b7d:	lods   eax,DWORD PTR ds:[esi]
  404b7e:	test   DWORD PTR [ebx+0x6],eax
  404b81:	or     DWORD PTR [ebx-0x3d],eax
  404b84:	or     eax,0x282e3702
  404b8a:	out    0xab,al
  404b8c:	dec    eax
  404b8d:	jge    0x404b45
  404b8f:	sbb    eax,0x25731063
  404b94:	jnp    0x404ba0
  404b96:	out    0xe4,al
  404b98:	enter  0x3d70,0xd7
  404b9c:	lods   al,BYTE PTR ds:[esi]
  404b9d:	ds (bad) 
  404b9f:	push   ebx
  404ba0:	pop    edx
  404ba1:	xchg   edx,eax
  404ba2:	lods   eax,DWORD PTR ds:[esi]
  404ba3:	jmp    0x404b41
  404ba5:	jl     0x404b3b
  404ba7:	push   ss
  404ba8:	lock and ecx,DWORD PTR [esi-0x6851fde]
  404baf:	add    eax,0x5e871c74
  404bb4:	inc    ebx
  404bb5:	push   esi
  404bb6:	shr    BYTE PTR [esi],1
  404bb8:	sub    DWORD PTR [eax],edx
  404bba:	and    BYTE PTR [edi+0x301a9b1b],bl
  404bc0:	push   ds
  404bc1:	jmp    0x88f3:0x7807b21d
  404bc8:	loopne 0x404baa
  404bca:	mov    WORD PTR [ebp*1+0xf1c5da5],cs
  404bd1:	jmp    0x404bcd
  404bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bd4:	daa    
  404bd5:	int    0x30
  404bd7:	or     eax,0x262f541a
  404bdc:	clc    
  404bdd:	inc    ecx
  404bde:	cmp    ah,al
  404be0:	or     ah,BYTE PTR [eax-0x5e]
  404be3:	or     BYTE PTR [ebp-0x4f1863df],al
  404be9:	inc    edi
  404beb:	dec    esi
  404bec:	sub    al,0xa
  404bee:	add    DWORD PTR [edx-0x21],0x420a93e2
  404bf5:	in     al,dx
  404bf6:	shl    DWORD PTR [ebp-0x1a],1
  404bf9:	int3   
  404bfa:	ins    DWORD PTR es:[edi],dx
  404bfb:	retf   
  404bfc:	sub    al,0xfc
  404bfe:	adc    al,0x8f
  404c00:	jns    0x404c0d
  404c02:	(bad)  
  404c03:	fdivr  DWORD PTR [ebx-0x6a351967]
  404c09:	cld    
  404c0a:	push   0x911dfee3
  404c0f:	mov    ebx,0x39a88fa
  404c14:	push   edx
  404c15:	and    bl,dh
  404c17:	adc    dh,BYTE PTR [edi+0x7f766098]
  404c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c1f:	and    dl,dh
  404c21:	aas    
  404c22:	cmp    edi,esp
  404c24:	push   0x7a
  404c26:	shl    DWORD PTR [edi-0x298a1a43],cl
  404c2c:	xchg   edx,eax
  404c2d:	out    0x5c,eax
  404c2f:	inc    BYTE PTR [esi]
  404c31:	mov    bl,0xa
  404c33:	popf   
  404c34:	cwde   
  404c35:	dec    ebp
  404c36:	test   al,0x25
  404c38:	icebp  
  404c39:	into   
  404c3a:	pop    edi
  404c3b:	inc    eax
  404c3c:	pop    esp
  404c3d:	sub    al,0x70
  404c3f:	mov    ch,0xdb
  404c41:	cmc    
  404c42:	push   0x3c
  404c44:	shl    BYTE PTR [eax+eiz*4+0x5c160e0e],1
  404c4b:	sahf   
  404c4c:	int3   
  404c4d:	fwait
  404c4e:	xor    ebp,DWORD PTR [edx+0x6c]
  404c51:	push   ecx
  404c52:	mov    dh,0xbd
  404c54:	popa   
  404c55:	xor    BYTE PTR [edx],bl
  404c57:	or     dl,bh
  404c59:	jg     0x404c84
  404c5b:	(bad)  
  404c5c:	jb     0x404cae
  404c5e:	xchg   esp,ebp
  404c60:	call   0x1be3aa3f
  404c65:	jecxz  0x404cdb
  404c67:	loop   0x404c54
  404c69:	xchg   ebx,eax
  404c6a:	icebp  
  404c6b:	add    eax,0x6c4d9f75
  404c70:	dec    edi
  404c71:	out    0xeb,al
  404c73:	adc    dl,BYTE PTR [ebp-0x13]
  404c76:	jp     0x404c43
  404c78:	jae    0x404ce7
  404c7a:	scas   al,BYTE PTR es:[edi]
  404c7b:	jl     0x404c10
  404c7d:	into   
  404c7e:	add    eax,0x65e74dda
  404c83:	sub    al,0x4a
  404c85:	mov    ds:0xc7672ef0,eax
  404c8a:	scas   al,BYTE PTR es:[edi]
  404c8b:	push   esi
  404c8c:	push   ebp
  404c8d:	push   eax
  404c8e:	call   0xd5a09240
  404c93:	call   0x3861a787
  404c98:	loope  0x404c39
  404c9a:	clc    
  404c9b:	xor    DWORD PTR [ebx],0xf6d4ac79
  404ca1:	push   cs
  404ca2:	imul   ecx,ebx,0x20fb3350
  404ca8:	jl     0x404cd5
  404caa:	sbb    ebp,DWORD PTR [edx]
  404cac:	imul   edi,DWORD PTR [ebx],0x52703b4e
  404cb2:	fidivr WORD PTR ds:0x32dc133d
  404cb8:	(bad)  
  404cb9:	gs nop
  404cbb:	fwait
  404cbc:	outs   dx,BYTE PTR ds:[esi]
  404cbd:	mov    dh,0x78
  404cbf:	jl     0x404c87
  404cc1:	dec    esi
  404cc2:	lea    ecx,[esi-0x32]
  404cc5:	retf   0x8fe
  404cc8:	cmc    
  404cc9:	push   esp
  404cca:	adc    BYTE PTR [edi],0x87
  404ccd:	lods   eax,DWORD PTR ds:[esi]
  404cce:	xchg   ebx,eax
  404ccf:	add    ecx,DWORD PTR [ebp+0x2c]
  404cd2:	shl    DWORD PTR [esi+0x221cdb0f],1
  404cd8:	xor    BYTE PTR [edx-0x40444f98],dh
  404cde:	push   ebx
  404cdf:	fwait
  404ce0:	sbb    BYTE PTR [ebx],al
  404ce2:	jnp    0x404ca2
  404ce4:	shl    DWORD PTR [ecx+ebx*2],0x78
  404ce8:	nop
  404ce9:	mov    dh,0x80
  404ceb:	fld    TBYTE PTR ds:0x3cca6e38
  404cf1:	out    dx,al
  404cf2:	lock add dl,BYTE PTR [ecx]
  404cf5:	and    BYTE PTR [ecx+0x685e19d2],ch
  404cfb:	inc    esp
  404cfc:	jecxz  0x404ce0
  404cfe:	push   ds
  404cff:	and    eax,0xe0c9734f
  404d04:	addr16 adc esi,ebx
  404d07:	sbb    eax,0xe40d1b13
  404d0c:	inc    esi
  404d0d:	push   ecx
  404d0e:	sbb    DWORD PTR [edx],eax
  404d10:	es lock dec esi
  404d13:	pop    eax
  404d14:	ret    
  404d15:	jnp    0x404d44
  404d17:	jmp    0x404d09
  404d19:	into   
  404d1a:	xor    ebp,DWORD PTR [edx+0x2d]
  404d1d:	out    0xf9,eax
  404d1f:	inc    DWORD PTR [eax]
  404d21:	add    eax,0x304b1cc
  404d26:	rol    BYTE PTR [esi-0x7b],1
  404d29:	lods   al,BYTE PTR ds:[esi]
  404d2a:	pop    esp
  404d2b:	popf   
  404d2c:	int3   
  404d2d:	mov    cl,BYTE PTR [ecx+0x7f]
  404d30:	not    BYTE PTR [ecx-0x1e]
  404d33:	data16 xchg BYTE PTR [edx-0x19],ah
  404d37:	mov    BYTE PTR [ebx-0x80],cl
  404d3a:	jg     0x404d65
  404d3c:	lahf   
  404d3d:	pop    ecx
  404d3e:	mov    DWORD PTR [esi+eax*4-0x72353b39],eax
  404d45:	mov    ds:0xc8903f,eax
  404d4a:	imul   DWORD PTR [edi]
  404d4c:	add    al,0x4
  404d4e:	push   ecx
  404d4f:	xor    eax,DWORD PTR [ecx]
  404d51:	fnstenv [ebx+edi*1-0x5856ebbf]
  404d58:	loop   0x404d3f
  404d5a:	jb     0x404cdd
  404d5c:	adc    BYTE PTR [eax-0x74],dh
  404d5f:	bound  eax,QWORD PTR [esi+0x1d384ef8]
  404d65:	pusha  
  404d66:	cmp    eax,0xe16db19d
  404d6b:	jb     0x404d3d
  404d6d:	inc    esi
  404d6e:	or     eax,0x4fa8ebca
  404d73:	xor    edi,DWORD PTR [edx+0x20eeca1f]
  404d79:	icebp  
  404d7a:	sar    DWORD PTR [edi+0x61],0x6d
  404d7e:	clc    
  404d7f:	inc    ebp
  404d80:	fbld   TBYTE PTR [edi-0x28]
  404d83:	xchg   esp,ebx
  404d85:	lea    eax,[esi+0x32]
  404d88:	add    BYTE PTR [ebx],0xfb
  404d8b:	(bad)  
  404d8c:	std    
  404d8d:	(bad)  
  404d8e:	int    0xa7
  404d90:	sub    bh,BYTE PTR [edx+0x45838216]
  404d96:	je     0x404e05
  404d98:	pop    ds
  404d99:	mov    ah,0x7f
  404d9b:	fmul   QWORD PTR [esi]
  404d9d:	fmulp  st(0),st
  404d9f:	int    0xc6
  404da1:	cmc    
  404da2:	arpl   WORD PTR [ebx],bx
  404da4:	pop    DWORD PTR [esi]
  404da6:	addr16 jns 0x404d66
  404da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404daa:	cmp    cl,dh
  404dac:	push   eax
  404dad:	(bad)  
  404dae:	jo     0x404d3a
  404db0:	adc    al,0x56
  404db2:	pop    edi
  404db3:	mov    eax,0x8c58bc35
  404db8:	jmp    0xe2a75132
  404dbd:	fimul  WORD PTR [edx]
  404dbf:	mov    ebx,0xc20293d5
  404dc4:	out    dx,eax
  404dc5:	and    BYTE PTR [ebx+0x19],0x31
  404dc9:	xor    eax,0xcfacc363
  404dce:	xchg   ebx,eax
  404dcf:	mov    al,0x92
  404dd1:	jnp    0x404db1
  404dd3:	mov    ebp,0x80b9c46d
  404dd8:	add    eax,0xaefd18ac
  404ddd:	cli    
  404dde:	in     al,0x14
  404de0:	test   BYTE PTR [eax],bl
  404de2:	mov    bh,0x5
  404de4:	add    bh,BYTE PTR [edx-0x7d795e82]
  404dea:	cwde   
  404deb:	sbb    edi,edi
  404ded:	out    dx,eax
  404dee:	or     ebx,edi
  404df0:	push   edx
  404df1:	sub    BYTE PTR [esi-0x1d],cl
  404df4:	mov    dh,0xe2
  404df6:	xchg   edi,eax
  404df7:	pop    es
  404df8:	mov    eax,ds:0xa443b72d
  404dfd:	lods   eax,DWORD PTR ds:[esi]
  404dfe:	fidiv  DWORD PTR ds:0x3bc11473
  404e04:	(bad)  
  404e05:	sub    eax,0x1b2b17b0
  404e0a:	mov    cl,0xeb
  404e0c:	mov    eax,ds:0x85fa2ab0
  404e11:	stos   BYTE PTR es:[edi],al
  404e12:	gs mov dh,0x69
  404e15:	ins    DWORD PTR es:[edi],dx
  404e16:	sti    
  404e17:	aad    0x3d
  404e19:	outs   dx,BYTE PTR ds:[esi]
  404e1a:	(bad)  
  404e1b:	sbb    ch,BYTE PTR [ebp+0x55]
  404e1e:	push   es
  404e1f:	and    edx,ecx
  404e21:	sub    cl,BYTE PTR ds:0xb9ddc109
  404e27:	and    al,0xd1
  404e29:	sub    BYTE PTR [edx+0x2a7e4708],dh
  404e2f:	mov    ebx,0x2141ac68
  404e34:	repnz iret 
  404e36:	enter  0x8c75,0x36
  404e3a:	pushf  
  404e3b:	mov    ebx,0x4f6c760e
  404e40:	dec    ecx
  404e41:	in     al,0x4b
  404e43:	cmp    BYTE PTR gs:[ecx-0x34],0x88
  404e48:	jmp    0xb259:0x44e2d042
  404e4f:	add    dl,BYTE PTR [eax+0x2d55917c]
  404e55:	arpl   WORD PTR [ebp+0x2a82bd39],bp
  404e5b:	jecxz  0x404e18
  404e5d:	clc    
  404e5e:	jecxz  0x404e29
  404e60:	push   edx
  404e61:	mov    esi,0xfa3411d8
  404e66:	jl     0x404e1b
  404e68:	add    BYTE PTR [edi-0x61371d5d],cl
  404e6e:	adc    DWORD PTR [esi-0x13],esi
  404e71:	dec    esi
  404e72:	or     eax,0xfaac239
  404e77:	test   al,0x21
  404e79:	mov    edx,0x4bb31e4b
  404e7e:	add    cl,0x9d
  404e81:	rcr    DWORD PTR [edx+0x7d6e86e0],cl
  404e87:	rol    BYTE PTR [ecx],0x79
  404e8a:	popf   
  404e8b:	(bad)  
  404e8d:	xchg   esp,eax
  404e8e:	jmp    0x13fa92b
  404e93:	inc    ebx
  404e94:	gs (bad) 
  404e96:	retf   0x2111
  404e99:	cmp    dh,BYTE PTR [esi+0x1b]
  404e9c:	test   eax,0x9bf5ca71
  404ea1:	mov    DWORD PTR [ecx+eiz*2-0x5fbaca6c],ebp
  404ea8:	lea    ecx,[eax]
  404eaa:	mov    fs,WORD PTR [edx]
  404eac:	aaa    
  404ead:	dec    ebx
  404eae:	imul   esi,DWORD PTR [ebx],0x47
  404eb1:	dec    esp
  404eb2:	mov    ecx,0x1d738b29
  404eb7:	adc    al,0x33
  404eb9:	(bad)  
  404eba:	popf   
  404ebb:	loop   0x404ea0
  404ebd:	imul   eax,DWORD PTR [ecx],0xcc1de113
  404ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ec4:	mov    esi,DWORD PTR [edi]
  404ec6:	jo     0x404ed7
  404ec8:	(bad)  
  404ec9:	jae    0x404ec5
  404ecb:	inc    eax
  404ecc:	out    dx,al
  404ecd:	lahf   
  404ece:	loop   0x404f24
  404ed0:	or     BYTE PTR [esi-0x6894ecdd],dh
  404ed6:	xchg   edi,eax
  404ed7:	sub    BYTE PTR [esi-0x17],cl
  404eda:	push   ecx
  404edb:	push   edi
  404edc:	cld    
  404edd:	add    dl,dl
  404edf:	sub    esi,DWORD PTR [edx+0x12]
  404ee2:	push   0x4ab65e9b
  404ee7:	mov    ds:0x93768e02,al
  404eec:	xchg   edx,eax
  404eed:	mov    dh,0x35
  404eef:	call   0x8a0f4469
  404ef4:	cmc    
  404ef5:	adc    BYTE PTR [ebx+0xe87a11d],bh
  404efb:	iret   
  404efc:	jne    0x404f37
  404efe:	test   al,0x54
  404f00:	cs mov dl,0x83
  404f03:	cmp    al,0x5d
  404f05:	out    dx,eax
  404f06:	xor    ch,BYTE PTR [ebp-0x407c6ce8]
  404f0c:	sub    ch,bl
  404f0e:	ret    0x3ebb
  404f11:	fmul   QWORD PTR [ebx-0x2c055d04]
  404f17:	dec    edx
  404f18:	or     edx,edi
  404f1a:	push   ss
  404f1b:	jp     0x404f5d
  404f1d:	clc    
  404f1e:	mov    ecx,0x9570c454
  404f23:	dec    esi
  404f25:	pop    es
  404f26:	inc    esp
  404f27:	dec    ebp
  404f28:	shl    BYTE PTR [ecx],0x43
  404f2b:	lock push ebp
  404f2d:	repnz (bad) [esi]
  404f30:	das    
  404f31:	les    ebx,FWORD PTR [ebx+0x6f]
  404f34:	xchg   edx,eax
  404f35:	pop    esp
  404f36:	in     eax,dx
  404f37:	mov    ch,0x36
  404f39:	gs ins DWORD PTR es:[edi],dx
  404f3b:	mov    ecx,0xda9b8b68
  404f40:	lods   eax,DWORD PTR ds:[esi]
  404f41:	xor    edi,DWORD PTR [edi]
  404f43:	or     eax,0xc24b879c
  404f49:	sub    BYTE PTR [ebx+0x2e],cl
  404f4c:	retf   
  404f4d:	aam    0x2a
  404f4f:	gs jmp 0xbb06:0x49adf8
  404f57:	jae    0x404f32
  404f59:	imul   ecx,ebp,0x5bf5b985
  404f5f:	mov    ds:0x91ee4004,al
  404f64:	repz jge 0x404f17
  404f67:	retf   0x4230
  404f6a:	cwde   
  404f6b:	add    ch,BYTE PTR [esi+eax*2]
  404f6e:	cli    
  404f6f:	out    dx,eax
  404f70:	push   ecx
  404f71:	pop    eax
  404f72:	sbb    esp,DWORD PTR [esi-0x30]
  404f75:	jmp    0xa4553655
  404f7a:	inc    eax
  404f7b:	es stos DWORD PTR es:[edi],eax
  404f7d:	jbe    0x404f56
  404f7f:	ins    BYTE PTR es:[edi],dx
  404f80:	or     dh,BYTE PTR [ecx+0x2e]
  404f83:	ja     0x404f48
  404f85:	lds    edi,FWORD PTR [ebx+0x55]
  404f88:	aad    0xbb
  404f8a:	inc    esi
  404f8b:	and    BYTE PTR [edi-0x22],bl
  404f8e:	out    dx,eax
  404f8f:	(bad)  
  404f90:	int    0x34
  404f92:	jmp    0x2985:0x2222fb84
  404f99:	cmp    ch,bl
  404f9b:	inc    eax
  404f9c:	xchg   edx,eax
  404f9d:	icebp  
  404f9e:	dec    edx
  404f9f:	and    eax,0xe3fa752a
  404fa4:	push   esp
  404fa5:	pop    ebp
  404fa6:	mov    WORD PTR [ebx+0x791e5f27],cs
  404fac:	mov    esi,0xb65d3428
  404fb1:	adc    DWORD PTR [edx+0x4f],ebp
  404fb4:	xchg   ebx,eax
  404fb5:	fwait
  404fb6:	std    
  404fb7:	fdivr  st,st(7)
  404fb9:	repz pop es
  404fbb:	push   0xffffffe0
  404fbd:	nop
  404fbe:	pop    edi
  404fbf:	cs int 0x1
  404fc2:	js     0x40501f
  404fc4:	mov    ds:0x37db36a,al
  404fc9:	and    edx,edx
  404fcb:	icebp  
  404fcc:	scas   eax,DWORD PTR es:[edi]
  404fcd:	ins    BYTE PTR es:[edi],dx
  404fce:	bnd jb 0x405038
  404fd1:	cs xchg esp,eax
  404fd3:	sbb    esi,esi
  404fd5:	xor    eax,DWORD PTR [edi-0x3e]
  404fd8:	adc    eax,0x3dcb22a
  404fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fde:	dec    eax
  404fdf:	or     al,0xfc
  404fe1:	fisubr WORD PTR [esi]
  404fe3:	mov    ds:0xe806f8ac,eax
  404fe8:	mov    ?,WORD PTR [ebx+0x1b]
  404feb:	mov    cl,0x38
  404fed:	xor    dl,dl
  404fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ff0:	int3   
  404ff1:	or     al,0x6f
  404ff3:	int3   
  404ff4:	sub    edi,DWORD PTR [eax+edx*4]
  404ff7:	or     cl,BYTE PTR [esi-0x2d]
  404ffa:	jmp    0x4e7d1958
  404fff:	mov    ch,0x5c
  405001:	in     eax,dx
  405002:	inc    BYTE PTR [eax]
  405004:	and    DWORD PTR [ecx],ecx
  405006:	xlat   BYTE PTR ds:[ebx]
  405007:	jbe    0x404fbc
  405009:	hlt    
  40500a:	aaa    
  40500b:	std    
  40500c:	inc    edx
  40500d:	push   ebx
  40500e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40500f:	push   ebp
  405010:	loope  0x40503f
  405012:	xor    bh,BYTE PTR [esi+0x33ad65ce]
  405018:	mov    bl,0x46
  40501a:	mov    edi,0x6d48b4a0
  40501f:	adc    al,0x63
  405021:	(bad)  
  405022:	jbe    0x404fe4
  405024:	adc    al,0xf7
  405026:	pop    ss
  405027:	mov    ds:0x3f8db4b6,al
  40502c:	and    bh,BYTE PTR [ebp+0xf6cf8af]
  405032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405033:	dec    esp
  405034:	jnp    0x405008
  405036:	pop    edx
  405037:	daa    
  405038:	xor    al,0x50
  40503a:	sti    
  40503b:	inc    ebp
  40503c:	out    0x6c,al
  40503e:	lahf   
  40503f:	mov    al,ds:0x5db71168
  405044:	fmul   DWORD PTR [edi-0x31]
  405047:	xor    ah,ah
  405049:	popa   
  40504a:	mov    edx,0xf8c63ccf
  40504f:	rcr    DWORD PTR [ebp-0x4b435e0a],1
  405055:	jbe    0x405053
  405057:	dec    ebp
  405058:	sbb    eax,0xc6b4811
  40505d:	out    0xd0,al
  40505f:	ins    BYTE PTR es:[edi],dx
  405060:	mov    esp,0xcb5ee826
  405065:	pop    edi
  405066:	jle    0x4050e3
  405068:	add    eax,0x516d1c47
  40506d:	push   esi
  40506e:	bound  ebx,QWORD PTR [ecx]
  405070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405071:	mov    DWORD PTR [eax],ecx
  405073:	icebp  
  405074:	add    ah,BYTE PTR [ebx+ebx*4-0x640838dd]
  40507b:	jmp    0x405002
  40507d:	bnd jno 0x405044
  405080:	test   edi,edi
  405082:	or     dl,BYTE PTR [eax]
  405084:	xchg   edx,eax
  405085:	dec    esi
  405086:	cmp    eax,DWORD PTR es:[edx]
  405089:	ins    DWORD PTR es:[edi],dx
  40508a:	push   0x27
  40508c:	out    0xbc,eax
  40508e:	nop
  40508f:	mov    ah,0x3b
  405091:	into   
  405092:	or     esp,DWORD PTR [edx-0x37]
  405095:	add    al,0x68
  405098:	fidiv  WORD PTR [ecx-0x4b510e5d]
  40509e:	sub    cl,bl
  4050a0:	in     al,0x60
  4050a2:	pop    ds
  4050a3:	aas    
  4050a4:	dec    edx
  4050a5:	cdq    
  4050a6:	out    dx,al
  4050a7:	sbb    DWORD PTR [ebx-0x197d877f],0x7d
  4050ae:	sub    eax,0x95cb935e
  4050b3:	mov    ch,0x7
  4050b5:	test   al,0xe
  4050b7:	add    BYTE PTR [edi-0xffdcb17],bl
  4050bd:	sbb    DWORD PTR [eax+0x59],0x9156c2f5
  4050c4:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4050c6:	add    edi,DWORD PTR [eax-0x1321a9a4]
  4050cc:	xor    al,0xd6
  4050ce:	push   esi
  4050cf:	sbb    ecx,DWORD PTR [esi-0x1d]
  4050d2:	push   0x2
  4050d4:	mov    cl,bh
  4050d6:	inc    esp
  4050d7:	loop   0x40514c
  4050d9:	mov    edx,0x3e5c6258
  4050de:	dec    eax
  4050df:	aaa    
  4050e0:	mov    edi,0x6798ab50
  4050e5:	push   ebp
  4050e6:	cmp    eax,0x3bf2b522
  4050eb:	js     0x4050d0
  4050ed:	mov    ebp,esi
  4050ef:	sub    eax,0x20771b91
  4050f4:	mov    eax,0xdeeb0071
  4050f9:	push   ds
  4050fa:	(bad)  [ecx-0x47]
  4050fd:	pop    sp
  4050ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405100:	xchg   edi,eax
  405101:	jb     0x4050df
  405103:	ret    0x3bdf
  405106:	mov    al,0x50
  405108:	mov    ds:0x1cb2b4bc,al
  40510d:	dec    eax
  40510e:	and    dl,ch
  405110:	add    DWORD PTR [esi-0x34],ecx
  405113:	jl     0x40510e
  405115:	clc    
  405116:	shl    DWORD PTR [ebp+0x3f],0xc1
  40511a:	in     al,0x48
  40511c:	lahf   
  40511d:	xchg   edx,eax
  40511e:	in     al,0xb4
  405120:	sbb    bh,BYTE PTR [ebp+ecx*1-0x5e9ffda]
  405127:	in     eax,0xf7
  405129:	mov    esp,0x8aeefa72
  40512e:	or     ch,al
  405130:	jns    0x405196
  405132:	pop    ecx
  405133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405134:	dec    edx
  405135:	xor    eax,0x75f69c53
  40513a:	sub    al,ch
  40513c:	imul   edx,edi,0xdf7a22af
  405142:	add    ah,bh
  405144:	outs   dx,DWORD PTR ds:[esi]
  405145:	into   
  405146:	cmp    eax,0x1d85f527
  40514b:	into   
  40514c:	mov    ebp,0x42bc7b42
  405151:	cmp    BYTE PTR [edi],ah
  405153:	gs jle 0x4051c0
  405156:	stos   BYTE PTR es:[edi],al
  405157:	push   edx
  405158:	pop    es
  405159:	ficomp WORD PTR [ecx-0x55]
  40515c:	enter  0xcde,0x32
  405160:	jnp    0x40513f
  405162:	sahf   
  405163:	bound  esi,QWORD PTR [eax+edx*8-0x2]
  405167:	push   edi
  405168:	mov    DWORD PTR [edx+0x60],ebp
  40516b:	jp     0x40515e
  40516d:	das    
  40516e:	call   0x60c77e7d
  405173:	pop    edi
  405174:	cmp    ecx,edx
  405176:	popa   
  405177:	aas    
  405178:	push   ecx
  405179:	pop    edx
  40517a:	and    dl,dl
  40517c:	int3   
  40517d:	xchg   edi,eax
  40517e:	xchg   BYTE PTR [ecx-0x80],bh
  405181:	int3   
  405182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405183:	or     ebp,DWORD PTR [ecx-0x46]
  405186:	xchg   edx,eax
  405187:	fist   DWORD PTR [ebp+0x5a9df166]
  40518d:	mov    ?,edx
  40518f:	or     ecx,DWORD PTR [edi-0x43506933]
  405195:	das    
  405196:	(bad)  
  405197:	xchg   BYTE PTR gs:0xf43a2696,al
  40519e:	call   0x327:0xa98cd755
  4051a5:	jb     0x405135
  4051a7:	xchg   ebx,eax
  4051a8:	test   eax,0xa78a33b0
  4051ad:	add    al,0x30
  4051af:	rcl    esp,1
  4051b1:	test   BYTE PTR [esi+edi*4-0x2cac1fea],cl
  4051b8:	push   edx
  4051b9:	dec    esi
  4051ba:	mov    ch,BYTE PTR [edi]
  4051bc:	cwde   
  4051bd:	popf   
  4051be:	int3   
  4051bf:	sub    ecx,DWORD PTR [edx+0x22557deb]
  4051c5:	and    al,0x9a
  4051c7:	cpuid  
  4051c9:	sti    
  4051ca:	pusha  
  4051cb:	mov    es:0xdb08f9cb,al
  4051d1:	mov    dh,0x72
  4051d4:	out    dx,al
  4051d5:	popa   
  4051d6:	or     esp,DWORD PTR [ebx-0x62529a05]
  4051dc:	iret   
  4051dd:	xor    DWORD PTR [edx*4-0x2ee2cd55],edi
  4051e4:	xor    ebp,esi
  4051e6:	outs   dx,BYTE PTR ds:[esi]
  4051e7:	sub    esp,DWORD PTR [edx]
  4051e9:	add    BYTE PTR [ebx-0x4f],dh
  4051ec:	mov    ah,0xb1
  4051ee:	aad    0xdf
  4051f0:	or     dh,BYTE PTR [eax+0x7e]
  4051f3:	(bad)  
  4051f4:	cmp    cl,bl
  4051f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051f7:	mov    bl,0x69
  4051f9:	frstor [esp+ebp*4+0x23ac873e]
  405200:	int3   
  405201:	sbb    bl,BYTE PTR [edi-0x2a26feec]
  405207:	pop    ecx
  405208:	dec    ecx
  405209:	mov    cl,0x95
  40520b:	imul   esp,DWORD PTR [ebx+0x1c],0x369e33d2
  405212:	fcomp  QWORD PTR [edi]
  405214:	add    al,0x5e
  405216:	jg     0x405283
  405218:	and    eax,0x1d9cb56d
  40521d:	jg     0x405209
  40521f:	dec    esp
  405220:	cwde   
  405221:	mov    al,0xa5
  405223:	ds in  eax,dx
  405225:	popf   
  405226:	fst    QWORD PTR [edx-0x11]
  405229:	sahf   
  40522a:	in     eax,dx
  40522b:	scas   al,BYTE PTR es:[edi]
  40522c:	(bad)  
  40522d:	arpl   WORD PTR [edx],si
  40522f:	jge    0x405207
  405231:	jg     0x40521e
  405233:	icebp  
  405234:	adc    ecx,DWORD PTR [ecx+eiz*4+0x71]
  405238:	push   edi
  405239:	or     DWORD PTR [edi-0x4f9246b6],edi
  40523f:	mov    esp,ecx
  405241:	pop    ds
  405242:	inc    esi
  405243:	mov    DWORD PTR [ecx+0x61ce1cdc],ebp
  405249:	js     0x405222
  40524b:	pop    esp
  40524c:	scas   al,BYTE PTR es:[edi]
  40524d:	add    al,0xc
  40524f:	stos   BYTE PTR es:[edi],al
  405250:	sub    BYTE PTR [esi],dh
  405252:	test   DWORD PTR [eax+0x6c],esi
  405255:	lods   al,BYTE PTR ds:[esi]
  405256:	xchg   ebx,eax
  405257:	fcomp  st(3)
  405259:	mov    dl,0x9f
  40525b:	scas   eax,DWORD PTR es:[edi]
  40525c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40525d:	std    
  40525e:	out    dx,al
  40525f:	out    0xab,eax
  405261:	(bad)  
  405262:	fstp   QWORD PTR [ecx-0x33005c5b]
  405268:	imul   ecx,DWORD PTR [ebx+0x35],0xffffffe7
  40526c:	aam    0xb
  40526e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40526f:	aad    0x74
  405271:	addr16 xchg esi,eax
  405273:	cdq    
  405274:	int    0x42
  405276:	cdq    
  405277:	and    edx,DWORD PTR [esi+0x56296511]
  40527d:	sbb    al,0xa4
  40527f:	leave  
  405280:	(bad)  
  405281:	cli    
  405282:	add    BYTE PTR [eax-0x6c85922],ch
  405288:	sar    edi,1
  40528a:	js     0x405218
  40528c:	mov    edi,edx
  40528e:	add    ebp,DWORD PTR [edi]
  405290:	sbb    al,0x20
  405292:	sub    bl,bl
  405294:	das    
  405295:	sbb    DWORD PTR [ebp-0x577fec66],ecx
  40529b:	mov    al,ds:0x9b8a0bc9
  4052a0:	pop    esp
  4052a1:	or     eax,0x880d169f
  4052a6:	arpl   WORD PTR [edi+edx*1],cx
  4052a9:	loopne 0x405268
  4052ab:	mov    bh,0x96
  4052ad:	or     ebx,DWORD PTR [eax+edi*1+0x40]
  4052b1:	inc    eax
  4052b2:	sbb    al,0x4c
  4052b4:	repnz ins BYTE PTR es:[edi],dx
  4052b6:	int3   
  4052b7:	fwait
  4052b8:	jbe    0x40532e
  4052ba:	fidiv  DWORD PTR [ecx+0x51]
  4052bd:	jge    0x405329
  4052bf:	fadd   st(3),st
  4052c1:	dec    ecx
  4052c2:	push   0xda008ec0
  4052c7:	or     ebx,DWORD PTR [ebp+0x7c]
  4052ca:	adc    eax,0xa8125581
  4052cf:	xchg   ebp,eax
  4052d0:	and    al,BYTE PTR [ecx+0x77d0b8e4]
  4052d6:	jge    0x4052b8
  4052d8:	fist   DWORD PTR [ecx-0x55c54209]
  4052de:	pop    eax
  4052df:	fst    QWORD PTR [eax+0x4c3cee36]
  4052e5:	(bad)  
  4052e6:	cmc    
  4052e7:	(bad)  
  4052e8:	je     0x40534b
  4052ea:	enter  0xedfc,0x53
  4052ee:	cmc    
  4052ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052f0:	xchg   edi,eax
  4052f1:	loopne 0x4052fc
  4052f3:	adc    DWORD PTR [esi],ecx
  4052f5:	mov    cl,0x71
  4052f7:	cdq    
  4052f8:	mov    ebp,0x6e1ac5e3
  4052fd:	div    BYTE PTR [esi-0x29]
  405300:	xchg   DWORD PTR [ebp+0x70],edx
  405303:	nop
  405304:	mov    ebx,0x705a13f0
  405309:	xlat   BYTE PTR ds:[ebx]
  40530a:	pop    esi
  40530b:	or     dh,BYTE PTR [edx-0x74e72bc3]
  405311:	add    eax,0xb0853ced
  405316:	(bad)  
  405317:	mov    esp,0x74af665d
  40531c:	sub    eax,0xbe96ffe4
  405321:	imul   BYTE PTR [esi]
  405323:	(bad)  
  405324:	sub    al,0xee
  405326:	xor    esp,DWORD PTR [eax-0x7222825b]
  40532c:	(bad)  
  40532d:	mov    esp,0xb2c9f867
  405332:	cdq    
  405333:	in     al,0x33
  405335:	sub    DWORD PTR [eax-0x4361d3d9],0xffffffc2
  40533c:	fadd   QWORD PTR [edx]
  40533e:	xchg   edi,ebp
  405340:	adc    DWORD PTR [edx+0x26],esp
  405343:	add    al,0xd8
  405345:	mov    eax,0xd992463c
  40534a:	add    cl,al
  40534c:	pop    eax
  40534d:	aas    
  40534e:	jb     0x40531b
  405350:	test   BYTE PTR [ebx],bl
  405352:	sbb    BYTE PTR [ecx-0x7593a96b],dh
  405358:	(bad)  
  405359:	mov    ebx,0xbbbfae16
  40535e:	neg    BYTE PTR ds:0xcc9f5fe0
  405364:	jl     0x4053b9
  405366:	mov    ds:0x5028093a,al
  40536b:	data16 test BYTE PTR [edx],ah
  40536e:	xchg   edx,eax
  40536f:	xchg   ecx,eax
  405370:	cmp    DWORD PTR [esi-0x6],edx
  405373:	cmp    ebx,DWORD PTR [edi+eiz*1+0x36]
  405377:	push   ds
  405378:	(bad)  
  405379:	fdiv   st,st(6)
  40537b:	call   0x18d6be9a
  405380:	rol    DWORD PTR [eax],0x47
  405383:	sub    BYTE PTR [edi+0x7b62871d],cl
  405389:	aam    0x33
  40538b:	lods   al,BYTE PTR ds:[esi]
  40538c:	dec    ecx
  40538d:	adc    BYTE PTR [esi],ch
  40538f:	push   es
  405390:	fs xchg ecx,eax
  405392:	fidiv  WORD PTR [ebp+0x2123f1b0]
  405398:	sbb    ch,cl
  40539a:	or     al,0x27
  40539c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40539d:	push   0x9eab5558
  4053a2:	mov    eax,0xdf991519
  4053a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053a8:	sub    eax,0xb27587f5
  4053ad:	repz inc ecx
  4053af:	mov    bl,0x86
  4053b1:	cwde   
  4053b2:	push   0x63
  4053b4:	and    BYTE PTR ds:0x9552a9ee,ch
  4053ba:	in     al,0xdb
  4053bc:	fmul   DWORD PTR [edx+0x12ef8438]
  4053c2:	cmp    DWORD PTR [ebx+ebp*4+0x3cec4099],ecx
  4053c9:	cld    
  4053ca:	jnp    0x405374
  4053cc:	mov    DWORD PTR [ecx+0x57480db3],ebp
  4053d2:	add    al,0x40
  4053d4:	fs xchg ebp,eax
  4053d6:	in     eax,dx
  4053d7:	dec    esi
  4053d9:	sub    edx,DWORD PTR [eax]
  4053db:	cmp    cl,BYTE PTR [eax-0x2b]
  4053de:	or     cl,BYTE PTR [edx+ecx*2+0x4e994e47]
  4053e5:	in     al,dx
  4053e6:	mov    ebp,0x5aa4f487
  4053eb:	push   edx
  4053ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053ed:	mov    eax,0x21883478
  4053f2:	xchg   DWORD PTR [ecx+0x2d],esi
  4053f5:	test   ch,ah
  4053f7:	mov    WORD PTR [ebp+0x7a],ss
  4053fa:	sbb    al,0x8
  4053fc:	aas    
  4053fd:	int3   
  4053fe:	aas    
  4053ff:	scas   eax,DWORD PTR es:[edi]
  405400:	repz mov di,0xf65a
  405405:	fstp   TBYTE PTR [edx-0xffce5cc]
  40540b:	mov    al,0xf6
  40540d:	push   ebp
  40540e:	fisub  DWORD PTR [esi]
  405410:	cmp    al,0x55
  405412:	xchg   edi,eax
  405413:	(bad)  
  405414:	dec    esi
  405415:	out    dx,eax
  405416:	ror    BYTE PTR [ecx+0xd],1
  405419:	add    al,0xfe
  40541b:	test   BYTE PTR [edx+0x6c],0x95
  40541f:	repz dec ebp
  405421:	outs   dx,DWORD PTR ds:[esi]
  405422:	inc    edi
  405423:	dec    esp
  405424:	mov    ?,WORD PTR [ebx+0x16b7af0f]
  40542a:	adc    al,0xb2
  40542c:	lea    esi,[ebx+0x3f]
  40542f:	adc    BYTE PTR [esi+0x3c9e8044],al
  405435:	push   eax
  405436:	sbb    al,0x88
  405438:	aam    0xbb
  40543a:	les    esp,FWORD PTR [ebx-0x59]
  40543d:	ss xchg ecx,eax
  405440:	das    
  405441:	shr    bh,1
  405443:	fwait
  405444:	push   0xad56f657
  405449:	inc    ecx
  40544a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544b:	xor    eax,0x974a143f
  405450:	dec    esi
  405451:	push   ebp
  405452:	inc    ebx
  405453:	jle    0x405425
  405455:	jb     0x405463
  405457:	clc    
  405458:	dec    edi
  405459:	popf   
  40545a:	lods   eax,DWORD PTR ds:[esi]
  40545b:	xlat   BYTE PTR ds:[ebx]
  40545c:	push   cs
  40545d:	icebp  
  40545e:	mov    dh,0xcc
  405460:	and    al,0x32
  405462:	add    esp,DWORD PTR ds:0xc9c126df
  405468:	rcl    DWORD PTR [esi+eiz*1],1
  40546b:	sub    edx,ebx
  40546d:	jnp    0x40544e
  40546f:	sti    
  405470:	pop    edx
  405471:	cmovp  esi,ebx
  405474:	xchg   ecx,eax
  405475:	jns    0x4054da
  405477:	jecxz  0x405446
  405479:	xor    al,0xb6
  40547b:	out    dx,eax
  40547c:	cmc    
  40547d:	int    0x50
  40547f:	mov    bh,0xe4
  405481:	daa    
  405482:	popa   
  405483:	xor    DWORD PTR [esi-0x60],0x89724338
  40548a:	cdq    
  40548b:	cs lahf 
  40548d:	mov    ebp,0xef183c42
  405492:	xor    eax,0xbd91a657
  405497:	push   eax
  405498:	dec    ebx
  405499:	sbb    al,0x46
  40549b:	in     al,0x9a
  40549d:	cmc    
  40549e:	(bad)  
  40549f:	(bad)  
  4054a0:	jl     0x40549f
  4054a2:	mov    ds:0xd44dc500,al
  4054a7:	ss adc al,0xdd
  4054aa:	pusha  
  4054ab:	pop    edx
  4054ac:	adc    eax,0x9c6977cd
  4054b1:	and    eax,DWORD PTR [ecx+0x60]
  4054b4:	pop    es
  4054b5:	inc    ecx
  4054b6:	aad    0x2e
  4054b8:	aad    0xad
  4054ba:	pop    ds
  4054bb:	jno    0x40549c
  4054bd:	adc    BYTE PTR [ebx+ecx*8-0x7f],dh
  4054c1:	pop    esp
  4054c2:	pop    esp
  4054c3:	sahf   
  4054c4:	mov    esp,0xb806b998
  4054c9:	iret   
  4054ca:	push   esp
  4054cb:	dec    ebp
  4054cc:	int3   
  4054cd:	xchg   ecx,eax
  4054ce:	dec    esi
  4054cf:	push   ebp
  4054d0:	or     al,dh
  4054d2:	aad    0xda
  4054d4:	(bad)  
  4054d5:	rol    DWORD PTR [ebp-0x3b4c9683],1
  4054db:	div    BYTE PTR [edx-0x3b]
  4054de:	cwde   
  4054df:	inc    dx
  4054e1:	loope  0x40547f
  4054e3:	repnz cdq 
  4054e5:	xor    BYTE PTR [ebx-0x7e44bde],0x77
  4054ec:	pop    edx
  4054ed:	jnp    0x4054f4
  4054ef:	push   ecx
  4054f0:	call   FWORD PTR [esi]
  4054f2:	jl     0x40551e
  4054f4:	or     BYTE PTR cs:[ecx+0x57d7c69a],ch
  4054fb:	mov    esp,0x4fde57de
  405500:	popa   
  405501:	mov    BYTE PTR [edx-0x2f909ddb],dh
  405507:	or     dh,BYTE PTR [edi+0x194ca75c]
  40550d:	cmp    eax,0x49da245a
  405512:	sbb    eax,0x415d994f
  405517:	adc    al,0xf4
  405519:	add    eax,DWORD PTR [edi]
  40551b:	cmp    BYTE PTR fs:[edx-0x42],ah
  40551f:	(bad)  
  405520:	lods   eax,DWORD PTR ds:[esi]
  405521:	dec    esp
  405522:	dec    ecx
  405523:	add    BYTE PTR [ecx+esi*1],bl
  405526:	mov    ebx,0x52c636f9
  40552b:	xchg   esi,eax
  40552c:	mov    edi,0x726762ec
  405531:	push   edx
  405532:	sbb    dl,BYTE PTR [eax]
  405534:	neg    DWORD PTR [eax]
  405536:	lahf   
  405537:	std    
  405538:	mov    al,0xbb
  40553a:	lds    ebx,FWORD PTR [ebx+edx*8-0x41f48cec]
  405541:	or     ecx,DWORD PTR [esi]
  405543:	inc    eax
  405544:	push   ds
  405545:	inc    ecx
  405546:	fistp  WORD PTR [esp+ecx*4-0x73]
  40554a:	dec    esp
  40554b:	fld    TBYTE PTR [edx+0x58]
  40554e:	cli    
  40554f:	aad    0x89
  405551:	ret    0x78de
  405554:	aas    
  405555:	fisub  DWORD PTR [esi+0x3b]
  405558:	cs mov bh,0x12
  40555b:	es in  al,0x9
  40555e:	ss add dl,0x23
  405562:	jns    0x405572
  405564:	adc    DWORD PTR [ebp*8+0x34f96a4e],ebp
  40556b:	imul   edi,ebp,0xffffffe2
  40556e:	mov    ecx,0xb24f931b
  405573:	mov    edi,?
  405575:	les    esp,FWORD PTR [ecx+0x5d]
  405578:	je     0x405589
  40557a:	add    DWORD PTR [edx+0x6ac21d76],ebx
  405580:	push   es
  405581:	jmp    0x38cc:0xb6731e26
  405588:	aam    0x1a
  40558a:	pop    esp
  40558b:	mov    al,ds:0x640db571
  405590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405591:	xchg   ebx,eax
  405592:	sti    
  405593:	shl    BYTE PTR [edx-0x35],0xf9
  405597:	(bad)  
  405598:	push   ebp
  405599:	xchg   edx,eax
  40559a:	mov    DWORD PTR ds:0x9d4ad321,eax
  4055a0:	cwde   
  4055a1:	add    DWORD PTR [ecx+0x76],esp
  4055a4:	pop    ecx
  4055a5:	popa   
  4055a6:	mov    ebx,0xc54255fa
  4055ab:	das    
  4055ac:	sar    bh,1
  4055ae:	nop
  4055af:	adc    eax,0x7092baa8
  4055b4:	stc    
  4055b5:	fcomp  QWORD PTR [ebx-0x1c]
  4055b8:	clc    
  4055b9:	lods   eax,DWORD PTR ds:[esi]
  4055ba:	mov    edi,0xb58edbe6
  4055bf:	rcr    esp,1
  4055c1:	dec    esp
  4055c2:	pop    es
  4055c3:	xchg   BYTE PTR [edi+0x264f4ea6],bl
  4055c9:	mov    BYTE PTR [edi+edx*2+0x1a],ah
  4055cd:	mov    edi,0x3f3b6699
  4055d2:	sub    eax,0x11bcb5a9
  4055d7:	rcr    BYTE PTR [eax+0x496959fa],cl
  4055dd:	dec    edx
  4055de:	mov    ah,0x3c
  4055e0:	retf   
  4055e1:	sub    DWORD PTR [edi],0xfab265d0
  4055e7:	fisttp DWORD PTR [ecx]
  4055e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055ea:	dec    BYTE PTR [esi]
  4055ec:	scas   al,BYTE PTR es:[edi]
  4055ed:	(bad)  
  4055ee:	shl    BYTE PTR [esi-0xc],cl
  4055f1:	jo     0x40563b
  4055f3:	dec    edx
  4055f4:	sbb    BYTE PTR [esi+0x72d4c68a],cl
  4055fa:	fnstcw WORD PTR [esp+eax*1+0x6bd5f5f1]
  405601:	xor    DWORD PTR [eax+edx*8-0x5a],edx
  405605:	imul   ecx,DWORD PTR fs:[eax-0x57184f2b],0xf4a826d0
  405610:	dec    BYTE PTR [edi]
  405612:	rcl    esi,cl
  405614:	dec    edi
  405615:	mov    edx,DWORD PTR [edi+ebx*8-0x26b90840]
  40561c:	cmp    eax,0xf200262d
  405621:	add    eax,0x81cb1890
  405626:	test   BYTE PTR [eax],ah
  405628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405629:	rcr    BYTE PTR [ebx],cl
  40562b:	xchg   BYTE PTR [ecx-0x14babe7e],bl
  405631:	sbb    DWORD PTR [ecx],esp
  405633:	jge    0x40560b
  405635:	(bad)  
  405636:	and    ah,BYTE PTR [edx-0x6]
  405639:	adc    BYTE PTR [edx+edx*1+0x46a327c3],al
  405640:	retf   0x1ac3
  405643:	gs jmp 0x40561d
  405646:	mov    ah,0x1a
  405648:	arpl   WORD PTR ds:0x876f7bdc,ax
  40564e:	mov    ds:0x1ed62be5,eax
  405653:	push   esp
  405654:	mov    ds:0x3cef1acb,al
  405659:	xchg   esi,eax
  40565a:	xor    DWORD PTR [eax-0x68a68d19],0xedb783fd
  405664:	imul   eax,edi,0x1a45c4d2
  40566a:	inc    ebp
  40566b:	jb     0x405698
  40566d:	les    ebp,FWORD PTR [edx+0x29ef1dde]
  405673:	(bad)  
  405675:	sbb    BYTE PTR [ecx+ecx*4],dl
  405678:	cli    
  405679:	and    al,0xb4
  40567b:	ror    DWORD PTR [edi+0x4c],1
  40567e:	mov    ds:0x8ab19111,al
  405683:	cmp    edx,ecx
  405685:	push   ss
  405686:	dec    edi
  405687:	call   0xd51a:0xd9881f61
  40568e:	test   eax,0x9e6e1e2
  405693:	out    dx,eax
  405694:	into   
  405695:	mov    edi,DWORD PTR [esi-0x4662e4dc]
  40569b:	jecxz  0x40570b
  40569d:	dec    edi
  40569e:	std    
  40569f:	sub    BYTE PTR [edi],ah
  4056a1:	cdq    
  4056a2:	icebp  
  4056a3:	push   esi
  4056a4:	rcr    BYTE PTR [ebp-0x17],1
  4056a7:	rol    bl,1
  4056a9:	xchg   BYTE PTR [ebp+0x20e38cbc],dl
  4056af:	add    ch,al
  4056b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056b2:	or     dl,ah
  4056b4:	mov    al,bl
  4056b6:	lods   al,BYTE PTR ds:[esi]
  4056b7:	dec    ebp
  4056b8:	mov    ecx,0x756c0814
  4056bd:	pop    esi
  4056be:	outs   dx,BYTE PTR ds:[esi]
  4056bf:	jne    0x405710
  4056c1:	enter  0xadcf,0x11
  4056c5:	int    0xcc
  4056c7:	into   
  4056c8:	jo     0x4056f1
  4056ca:	aad    0x64
  4056cc:	and    BYTE PTR [eax],dh
  4056ce:	fmulp  st(7),st
  4056d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d1:	out    dx,al
  4056d2:	jge    0x405691
  4056d4:	ins    BYTE PTR es:[edi],dx
  4056d5:	add    DWORD PTR [esi-0x32],edx
  4056d8:	mov    BYTE PTR [edx-0x59],cl
  4056db:	rcr    bh,1
  4056dd:	test   BYTE PTR ds:0xccf282e1,ch
  4056e3:	std    
  4056e4:	xor    ah,ah
  4056e6:	test   eax,0xa75a520
  4056eb:	mov    al,0x7
  4056ed:	hlt    
  4056ee:	jecxz  0x40576a
  4056f0:	sbb    DWORD PTR [edx-0x65],ebp
  4056f3:	pop    edi
  4056f4:	jg     0x4056d2
  4056f6:	jmp    0x6a61297b
  4056fb:	aam    0x9b
  4056fd:	or     edi,DWORD PTR [esi+esi*8]
  405700:	mov    ah,0xa0
  405702:	sbb    DWORD PTR ss:[edx+0x2],0xffffffea
  405707:	xor    cl,BYTE PTR [edi+0x70]
  40570a:	dec    ecx
  40570b:	push   ebp
  40570c:	sub    eax,DWORD PTR [edx+0x774f1390]
  405712:	js     0x40575d
  405714:	sbb    al,0x7d
  405716:	jo     0x4056bb
  405718:	outs   dx,BYTE PTR ds:[esi]
  405719:	fwait
  40571a:	dec    dx
  40571c:	inc    ebp
  40571d:	dec    esp
  40571e:	push   ss
  40571f:	pushf  
  405720:	call   0x9bd4915b
  405725:	xchg   esp,eax
  405726:	pop    ss
  405727:	stos   DWORD PTR es:[edi],eax
  405728:	push   0xffffffd1
  40572a:	fstp   DWORD PTR [ebp-0x5391c675]
  405730:	mov    ds:0x92668929,eax
  405735:	fist   WORD PTR [ecx+0x53c0092f]
  40573b:	jg     0x405707
  40573d:	dec    ecx
  40573e:	push   eax
  40573f:	jge    0x4057b9
  405741:	test   al,0xd2
  405743:	xchg   ecx,eax
  405744:	shr    BYTE PTR [edx-0x4509b039],cl
  40574a:	ss jnp 0x405715
  40574d:	pusha  
  40574e:	outs   dx,BYTE PTR ds:[esi]
  40574f:	outs   dx,BYTE PTR ds:[esi]
  405750:	test   al,0xf8
  405752:	push   es
  405753:	jbe    0x4057b7
  405755:	cld    
  405756:	cli    
  405757:	(bad)  
  405758:	mov    al,ds:0xe22a6022
  40575d:	repnz mov ah,0xdd
  405760:	and    ebp,ebp
  405762:	dec    eax
  405763:	sub    eax,0x6febd469
  405768:	call   FWORD PTR [eax+0x6abf7f5e]
  40576e:	out    dx,al
  40576f:	mov    DWORD PTR [esi+ecx*2-0x3c],ecx
  405773:	jnp    0x40576b
  405775:	jg     0x405706
  405777:	aas    
  405778:	jmp    0x4057a9
  40577a:	jnp    0x4057c7
  40577c:	arpl   WORD PTR [edx-0x20],bp
  40577f:	nop
  405780:	or     eax,DWORD PTR [ebx+0x3a3bb1ce]
  405786:	cdq    
  405787:	outs   dx,BYTE PTR ds:[esi]
  405788:	sub    al,0x5c
  40578a:	call   0x51563e53
  40578f:	arpl   WORD PTR [ebx-0x3f],cx
  405792:	pop    ss
  405793:	shl    BYTE PTR [edi+0x112a9748],1
  405799:	cwde   
  40579a:	adc    edi,0xffffffeb
  40579d:	mov    ds:0xc946fe86,al
  4057a2:	xor    ah,BYTE PTR [ebx]
  4057a4:	jns    0x4057e4
  4057a6:	xor    al,0x42
  4057a8:	test   al,0xdb
  4057aa:	cmp    al,0x58
  4057ac:	add    bl,0xf0
  4057af:	std    
  4057b0:	es pop edx
  4057b2:	push   es
  4057b3:	loopne 0x40580a
  4057b5:	inc    edx
  4057b6:	cmp    dl,BYTE PTR [ebp-0x1e]
  4057b9:	pop    ebx
  4057ba:	fidivr DWORD PTR [edx-0x4d]
  4057bd:	dec    esp
  4057be:	sahf   
  4057bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057c0:	ins    BYTE PTR es:[edi],dx
  4057c1:	adc    eax,0xac2c659e
  4057c6:	cmp    eax,DWORD PTR [edx+0xe5cb1a0]
  4057cc:	(bad)  
  4057cd:	jns    0x405834
  4057cf:	mov    bl,BYTE PTR [edi-0x606ba544]
  4057d5:	fisub  WORD PTR ds:0x749de738
  4057db:	ret    0x1890
  4057de:	cwde   
  4057df:	inc    esp
  4057e0:	dec    eax
  4057e1:	jecxz  0x40581d
  4057e3:	mov    edi,0x39b5fe26
  4057e8:	push   eax
  4057e9:	ja     0x405783
  4057eb:	icebp  
  4057ec:	ins    BYTE PTR es:[edi],dx
  4057ed:	popa   
  4057ee:	dec    ebx
  4057ef:	sbb    eax,0x5e1484f4
  4057f4:	sbb    bh,dl
  4057f6:	mov    edx,0xe41c64a5
  4057fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057fc:	mov    ds:0x7b16e8eb,al
  405801:	fisttp DWORD PTR [eax]
  405803:	xor    ax,0x20c9
  405807:	stc    
  405808:	fwait
  405809:	repnz adc eax,0x7570ab5b
  40580f:	inc    eax
  405810:	mov    ds:0xe9b5e37a,eax
  405815:	pop    ecx
  405816:	xor    al,BYTE PTR [esi]
  405818:	std    
  405819:	retf   0xfce
  40581c:	sbb    DWORD PTR [esi+0xa0e821e],ebp
  405822:	mov    al,0x1f
  405824:	(bad)  
  405825:	and    eax,0x9bb5d70d
  40582a:	je     0x405826
  40582c:	dec    edi
  40582d:	in     al,0xf
  40582f:	cs stc 
  405831:	inc    edx
  405832:	xchg   edx,eax
  405833:	xchg   esp,eax
  405834:	loop   0x4057bb
  405836:	icebp  
  405837:	add    eax,0xd793f16f
  40583c:	ror    BYTE PTR [edx+0x1657ab98],0x46
  405843:	outs   dx,BYTE PTR ds:[esi]
  405844:	xor    ebx,DWORD PTR [eax+0x3af6238e]
  40584a:	sub    eax,0x2d3514e2
  40584f:	(bad)  
  405850:	adc    BYTE PTR [edx],bh
  405852:	enter  0xef6d,0x8b
  405856:	in     al,dx
  405857:	fmulp  st(6),st
  405859:	adc    eax,0xb8a9afb7
  40585e:	ficomp DWORD PTR [ebp+0x2ddefe5]
  405864:	push   0xffffffec
  405866:	imul   edx,DWORD PTR [ecx+0x1a],0x16
  40586a:	mov    eax,ds:0xd1bde67c
  40586f:	ja     0x219f86e7
  405875:	cwde   
  405876:	out    0xe8,al
  405878:	adc    BYTE PTR [edi+0x0],al
  40587b:	aas    
  40587c:	xor    DWORD PTR [ebx-0xcbda122],edx
  405882:	push   ebp
  405883:	inc    edi
  405884:	mov    DWORD PTR [esi],esp
  405886:	popa   
  405887:	xor    eax,DWORD PTR [esi-0x6e]
  40588a:	je     0x405906
  40588c:	mov    al,ds:0x183fff47
  405891:	shr    DWORD PTR [eax+0x3ec2abf4],0xbf
  405898:	mov    al,0xc5
  40589a:	pop    esi
  40589b:	mov    ah,0x80
  40589d:	fcomp  DWORD PTR [ecx]
  40589f:	daa    
  4058a0:	push   edi
  4058a1:	push   ds
  4058a2:	rcr    BYTE PTR [eax+eiz*8-0x807d8cb],cl
  4058a9:	inc    ecx
  4058aa:	pop    ebp
  4058ab:	icebp  
  4058ac:	lods   al,BYTE PTR ds:[esi]
  4058ad:	jge    0x405830
  4058af:	lock cs jmp 0x405888
  4058b3:	push   cs
  4058b4:	jle    0x4058b0
  4058b6:	stos   DWORD PTR es:[edi],eax
  4058b7:	push   cs
  4058b8:	cmc    
  4058b9:	mov    al,ds:0x18af4ef8
  4058be:	cmp    ch,BYTE PTR [edi]
  4058c0:	pop    ebx
  4058c1:	mov    ebx,0x890daf20
  4058c6:	test   dh,dl
  4058c8:	mov    ds:0x4ffac2e7,al
  4058cd:	jg     0x405888
  4058cf:	jo     0x4058df
  4058d1:	mov    edi,0x938788cf
  4058d6:	fs push esi
  4058d8:	and    eax,0x72d05124
  4058dd:	test   eax,0x112b77dc
  4058e2:	enter  0xd8a7,0xd1
  4058e6:	jbe    0x40591d
  4058e8:	mov    ebx,0xbde8037a
  4058ed:	xchg   esi,eax
  4058ee:	fsubr  st,st(5)
  4058f0:	hlt    
  4058f1:	jns    0x40595b
  4058f3:	or     eax,0x56f9e9ff
  4058f8:	inc    esi
  4058f9:	or     al,0x68
  4058fb:	shl    BYTE PTR [ebx],1
  4058fd:	cmp    bl,BYTE PTR [esp+edi*1+0xdfc3c4]
  405904:	mov    eax,0x2dd461f0
  405909:	rcr    BYTE PTR fs:[ebx+0x566ee68],cl
  405910:	push   edx
  405911:	cwde   
  405912:	(bad)  
  405913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405914:	imul   esp,DWORD PTR [ecx],0x9ee244d7
  40591a:	push   0xffffffe1
  40591c:	mov    esi,0xebc72742
  405921:	dec    esi
  405922:	scas   al,BYTE PTR es:[edi]
  405923:	push   ds
  405924:	xchg   DWORD PTR [edx],edi
  405926:	cmp    ch,BYTE PTR [esi-0x2d]
  405929:	mov    dl,0x1c
  40592b:	cmp    DWORD PTR [edi-0x75],eax
  40592e:	test   BYTE PTR [ebx+0x37],bh
  405931:	xchg   BYTE PTR [ebx-0x55],dl
  405934:	stos   BYTE PTR es:[edi],al
  405935:	retf   
  405936:	fnstsw WORD PTR [esi]
  405938:	mov    ecx,0x585d738
  40593d:	cmp    al,0x14
  40593f:	mov    esi,0x2f720b3a
  405944:	xchg   esi,eax
  405945:	lahf   
  405946:	stos   BYTE PTR es:[edi],al
  405947:	cmp    al,0x82
  405949:	push   0xd
  40594b:	xchg   esi,eax
  40594c:	add    ecx,DWORD PTR cs:[ebp-0x4a]
  405950:	push   es
  405951:	mov    ch,ah
  405953:	xchg   ah,cl
  405955:	push   ebp
  405956:	test   eax,0x5d1e4f8d
  40595b:	xchg   ecx,eax
  40595c:	cmp    dl,BYTE PTR [ecx+ebx*2]
  40595f:	adc    eax,0x5b4524a0
  405964:	xlat   BYTE PTR ds:[ebx]
  405965:	sbb    eax,0x3f189e3d
  40596a:	dec    ecx
  40596b:	xchg   esi,eax
  40596c:	sbb    eax,0x677e0657
  405971:	das    
  405972:	std    
  405973:	inc    esp
  405974:	dec    BYTE PTR [ecx-0x21]
  405977:	mov    ebp,0x63c44d87
  40597c:	or     al,0x10
  40597e:	das    
  40597f:	pop    DWORD PTR [ebx+0xc]
  405982:	lds    edi,FWORD PTR ds:0x9669c31a
  405988:	sti    
  405989:	mov    edi,0xd8dce712
  40598e:	adc    DWORD PTR [ebx-0x43],edx
  405991:	cld    
  405992:	inc    esp
  405993:	pop    ecx
  405994:	test   al,0x31
  405996:	ins    DWORD PTR es:[edi],dx
  405997:	gs xchg ebx,eax
  405999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40599a:	adc    BYTE PTR ds:0xa50aa28f,ah
  4059a0:	dec    eax
  4059a1:	sub    DWORD PTR [edx+0xb],0xa056c866
  4059a8:	xchg   edx,eax
  4059a9:	loopne 0x40594a
  4059ab:	or     esp,esi
  4059ad:	pop    esi
  4059ae:	cmp    eax,0xd30a325e
  4059b3:	and    DWORD PTR [ebx+eiz*8],eax
  4059b6:	leave  
  4059b7:	fwait
  4059b8:	out    0xc2,al
  4059ba:	test   al,0xea
  4059bc:	jp     0x4059aa
  4059be:	imul   ebp,DWORD PTR [ebp+edi*1+0x36c8ba9],0x46bef9f8
  4059c9:	pop    esp
  4059ca:	sub    ah,ch
  4059cc:	out    dx,al
  4059cd:	jmp    0xea565ee4
  4059d2:	iret   
  4059d3:	xchg   ebp,eax
  4059d4:	pop    ds
  4059d5:	in     eax,dx
  4059d6:	(bad)  
  4059d7:	retf   
  4059d8:	(bad)  
  4059d9:	xchg   BYTE PTR [esi-0x21964102],ch
  4059df:	xchg   BYTE PTR [ebp+edi*4-0x229b8a13],ch
  4059e6:	pop    edx
  4059e7:	cs out 0xdc,eax
  4059ea:	fcomi  st,st(4)
  4059ec:	jno    0x405a6b
  4059ee:	cmp    bh,BYTE PTR [edi+0x69655ab6]
  4059f4:	cmp    ebx,DWORD PTR [edi-0x3850cb6f]
  4059fa:	push   ds
  4059fb:	adc    al,0x5d
  4059fd:	stos   BYTE PTR es:[edi],al
  4059fe:	jnp    0x405a07
  405a00:	fsubr  st,st(7)
  405a02:	out    dx,eax
  405a03:	popw   ss
  405a05:	call   0x5b4b55aa
  405a0a:	pop    ds
  405a0b:	jb     0x4059eb
  405a0d:	mov    ds:0x23b86c0d,al
  405a12:	and    edi,DWORD PTR [eax]
  405a14:	jbe    0x4059f2
  405a16:	mov    eax,0x19e7315a
  405a1b:	les    ecx,FWORD PTR ds:0x36657be0
  405a21:	bndstx [ecx+0x66ccfcc],(bad)
  405a28:	jae    0x405aa8
  405a2a:	and    eax,0x3c5aba7b
  405a2f:	cmp    dl,BYTE PTR ds:0xafa040a6
  405a35:	in     eax,0x88
  405a37:	jno    0x405ab7
  405a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a3a:	hlt    
  405a3b:	jl     0x405a8b
  405a3d:	js     0x405a10
  405a3f:	pop    edi
  405a40:	push   ss
  405a41:	jge    0x405a85
  405a43:	shl    DWORD PTR [edx],1
  405a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a46:	mov    esi,0xe825f342
  405a4b:	out    dx,eax
  405a4c:	mov    al,ds:0xe171819a
  405a51:	fwait
  405a52:	les    ecx,FWORD PTR [eax]
  405a54:	div    BYTE PTR [ebp+0x35]
  405a57:	in     al,dx
  405a58:	pop    esi
  405a59:	mov    al,0x3a
  405a5b:	les    ebp,FWORD PTR ds:[esp+esi*2+0x56]
  405a60:	(bad)  
  405a61:	fwait
  405a62:	cmp    al,0xb0
  405a64:	mov    ecx,0xcedd21d9
  405a69:	iret   
  405a6a:	aam    0x38
  405a6c:	and    al,BYTE PTR [esi]
  405a6e:	and    ch,BYTE PTR ds:0xe2984c17
  405a74:	rol    BYTE PTR [ecx],cl
  405a76:	loope  0x405a35
  405a78:	in     al,dx
  405a79:	cmp    al,0x7a
  405a7b:	aaa    
  405a7c:	cld    
  405a7d:	fcmove st,st(2)
  405a7f:	test   DWORD PTR [edx-0x9],eax
  405a82:	ds int3 
  405a84:	int    0xb0
  405a86:	push   esp
  405a87:	shl    BYTE PTR [ebp-0x41e0a86],1
  405a8d:	scas   al,BYTE PTR es:[edi]
  405a8e:	xchg   ebx,eax
  405a8f:	and    cl,dl
  405a91:	sbb    DWORD PTR [ecx+edi*2-0x29],ebp
  405a95:	mov    al,ds:0xcb611caf
  405a9a:	push   ebx
  405a9b:	pop    edi
  405a9c:	mov    esi,0x6a8c1492
  405aa1:	inc    edi
  405aa2:	and    eax,0xb8b8592e
  405aa7:	adc    DWORD PTR [edi],esi
  405aa9:	xor    BYTE PTR [esi-0x6],bl
  405aac:	bound  esp,QWORD PTR [ebp+0x3c6c8358]
  405ab2:	sti    
  405ab3:	inc    esi
  405ab4:	push   esi
  405ab5:	in     eax,0xfa
  405ab7:	pop    ebx
  405ab8:	jg     0x405b0a
  405aba:	mov    eax,ds:0xf205109b
  405abf:	imul   eax,DWORD PTR [ebx],0x27
  405ac2:	popa   
  405ac3:	add    DWORD PTR [esp+edi*1-0x3e2f48c5],edi
  405aca:	ss or  eax,0xcedfda70
  405ad0:	or     ah,dh
  405ad2:	popa   
  405ad3:	xchg   ecx,eax
  405ad4:	or     esi,edi
  405ad6:	call   0x8ca6:0xcc837b47
  405add:	sti    
  405ade:	mov    bl,0x9
  405ae0:	dec    ecx
  405ae1:	fild   WORD PTR [ebx]
  405ae3:	mov    DWORD PTR [eax],edi
  405ae5:	mul    DWORD PTR [ebp-0x32]
  405ae8:	xor    edx,DWORD PTR [esi+0x7]
  405aeb:	jecxz  0x405ab1
  405aed:	mov    al,ds:0x1bd918fa
  405af2:	fwait
  405af3:	pop    ds
  405af4:	pop    DWORD PTR [eax]
  405af6:	fs hlt 
  405af8:	aas    
  405af9:	adc    BYTE PTR [edi],ah
  405afb:	pop    ebp
  405afc:	(bad)  
  405afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405afe:	ins    DWORD PTR es:[edi],dx
  405aff:	mov    esi,0x13fd3748
  405b04:	pushf  
  405b05:	pop    edx
  405b06:	(bad)  
  405b07:	sti    
  405b08:	pop    esi
  405b09:	adc    dl,dl
  405b0b:	mov    ebp,DWORD PTR [edx-0x62488855]
  405b11:	gs ret 0x5eb4
  405b15:	and    BYTE PTR [edx+0x48],al
  405b18:	scas   eax,DWORD PTR es:[edi]
  405b19:	out    0x35,al
  405b1b:	pop    edi
  405b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b1d:	mov    al,BYTE PTR cs:[bp+di]
  405b21:	mov    eax,0xee1d89f0
  405b26:	mov    ah,0x56
  405b28:	dec    ebx
  405b29:	and    BYTE PTR [edi],ch
  405b2b:	xor    cl,BYTE PTR [edi]
  405b2d:	lahf   
  405b2e:	jecxz  0x405b11
  405b30:	add    BYTE PTR [edi+ecx*1],0xe3
  405b34:	mov    ch,0xfb
  405b36:	jp     0x405b32
  405b38:	mov    esi,0x419881c9
  405b3d:	inc    ecx
  405b3e:	cwde   
  405b3f:	gs ins BYTE PTR es:[edi],dx
  405b41:	clc    
  405b42:	je     0x405b09
  405b44:	lahf   
  405b45:	sub    DWORD PTR [ebp-0x6df14f82],edi
  405b4b:	dec    ebp
  405b4c:	mov    es,esp
  405b4e:	adc    BYTE PTR ds:0xf9ed30ca,ah
  405b54:	sbb    eax,0x52a9a1d6
  405b59:	push   es
  405b5a:	hlt    
  405b5b:	dec    eax
  405b5c:	lock or eax,DWORD PTR [edx-0x1a]
  405b60:	cmp    DWORD PTR [esi-0x67],edi
  405b63:	push   edi
  405b64:	mov    bl,0x4
  405b66:	dec    esp
  405b67:	add    al,0xb
  405b69:	out    0x65,eax
  405b6b:	pushf  
  405b6c:	push   edi
  405b6d:	bound  eax,QWORD PTR [ebx+0x5fd027cb]
  405b73:	rcl    dh,0xdf
  405b76:	mov    ecx,0xc9074a20
  405b7b:	jns    0x405bc4
  405b7d:	mov    cl,0xf6
  405b7f:	retf   0x9622
  405b82:	jmp    0x405b18
  405b84:	je     0x405b8d
  405b86:	pop    es
  405b87:	arpl   WORD PTR [ecx],bp
  405b89:	push   0xaf2e236f
  405b8e:	and    dh,ch
  405b90:	ror    bh,1
  405b92:	mov    ds:0x5da78f58,eax
  405b97:	ret    
  405b98:	lods   eax,DWORD PTR ds:[esi]
  405b99:	mov    edx,0xa747faf6
  405b9e:	mov    cl,0x97
  405ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ba1:	dec    edi
  405ba2:	push   0x9f9bdeb
  405ba7:	cmp    ebx,DWORD PTR [edi+ecx*2]
  405baa:	and    dh,BYTE PTR [edx+0x41e5b1df]
  405bb0:	stos   DWORD PTR es:[edi],eax
  405bb1:	adc    eax,0x6e600c13
  405bb6:	jne    0x405bd4
  405bb8:	mov    cl,0x77
  405bba:	xor    ah,BYTE PTR [ecx-0x62771dc0]
  405bc0:	data16 adc al,BYTE PTR [ebp-0x395bcdb4]
  405bc7:	bound  ebp,QWORD PTR [eax]
  405bc9:	scas   al,BYTE PTR es:[edi]
  405bca:	nop
  405bcb:	jg     0x405c1c
  405bcd:	jmp    0x405c3d
  405bcf:	jmp    0xe94:0x9617d597
  405bd6:	inc    edi
  405bd7:	mov    edi,0xc95493ed
  405bdc:	pop    es
  405bdd:	push   DWORD PTR [edi-0x5d6eccbd]
  405be3:	retf   0xaba
  405be6:	fdivr  QWORD PTR [edx-0x3925e493]
  405bec:	in     al,0xd5
  405bee:	test   DWORD PTR [eax+0x7],ebx
  405bf1:	mov    dh,0x36
  405bf3:	mov    al,0x74
  405bf5:	sub    al,0x29
  405bf7:	pop    es
  405bf8:	out    dx,al
  405bf9:	mov    eax,0x5d7111a2
  405bfe:	cmp    eax,0x9baf9daa
  405c03:	mov    ?,WORD PTR [esi-0x61]
  405c06:	mov    ds:0x7a3eec8e,eax
  405c0b:	daa    
  405c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c0d:	add    DWORD PTR [ecx+0x16],0xffffff84
  405c11:	xor    eax,0xd7e43554
  405c16:	lods   al,BYTE PTR ds:[esi]
  405c17:	sub    dh,ah
  405c19:	mov    ch,0x49
  405c1b:	fidivr WORD PTR [edi-0x58d79645]
  405c21:	jns    0x405bb1
  405c23:	xor    edi,DWORD PTR [esi-0x1e372cdb]
  405c29:	iret   
  405c2a:	fwait
  405c2b:	ds div edi
  405c2e:	sub    edx,ebx
  405c30:	ss das 
  405c32:	and    BYTE PTR [ebp-0x31],bh
  405c35:	int3   
  405c36:	pop    esp
  405c37:	lock cmp DWORD PTR [ecx-0x6c2a5816],0xffffffe4
  405c3f:	scas   al,BYTE PTR es:[edi]
  405c40:	push   edi
  405c41:	xchg   esi,eax
  405c42:	test   BYTE PTR [esi],al
  405c44:	adc    dl,BYTE PTR [edx]
  405c46:	fistp  DWORD PTR [ecx+0x5a57c806]
  405c4c:	mov    ds:0x8890e255,eax
  405c51:	cld    
  405c52:	mov    ah,BYTE PTR [edi-0x48b5f613]
  405c58:	adc    ah,BYTE PTR [edi]
  405c5a:	ret    0x39db
  405c5d:	ins    DWORD PTR es:[edi],dx
  405c5e:	cmp    bl,BYTE PTR [edx+0x67]
  405c61:	jno    0x405be6
  405c63:	fst    QWORD PTR [ebx]
  405c65:	sbb    BYTE PTR [ebx],bh
  405c67:	popf   
  405c68:	push   eax
  405c69:	xchg   BYTE PTR [ebx-0x3ec4d5d4],bh
  405c6f:	inc    eax
  405c70:	int3   
  405c71:	xlat   BYTE PTR ds:[ebx]
  405c72:	push   0x2e
  405c74:	loope  0x405c3c
  405c76:	lods   al,BYTE PTR ds:[esi]
  405c77:	adc    al,0xd2
  405c79:	push   esi
  405c7a:	js     0x405c52
  405c7c:	pop    esi
  405c7d:	xor    esp,ecx
  405c7f:	enter  0x3ea,0xc8
  405c83:	ja     0x405d01
  405c85:	pop    ebx
  405c86:	fiadd  DWORD PTR [ebp-0xc401ac0]
  405c8c:	retf   
  405c8d:	jecxz  0x405cd5
  405c8f:	repnz sub DWORD PTR [esi-0x622cabad],0xd03c19a
  405c9a:	cs retf 
  405c9c:	mov    ds:0xede65a33,eax
  405ca1:	xchg   ebp,eax
  405ca2:	push   0xffffffb0
  405ca4:	mov    BYTE PTR [ecx+0x4ecd2d6c],dl
  405caa:	add    al,0xf4
  405cac:	cli    
  405cad:	pop    ecx
  405cae:	lods   al,BYTE PTR ds:[esi]
  405caf:	pop    ss
  405cb0:	push   ds
  405cb1:	push   ebp
  405cb2:	mov    edi,0x58b8085c
  405cb7:	imul   edx,DWORD PTR [ebp-0x6e8836c2],0x0
  405cbe:	imul   ebp,DWORD PTR [edi+0x66],0x4d4d038b
  405cc5:	pop    ss
  405cc6:	das    
  405cc7:	ror    BYTE PTR [ebx+ebx*1+0x46],1
  405ccb:	test   DWORD PTR [ebx+ecx*4],0xd7ba77e4
  405cd2:	jns    0x405ce7
  405cd4:	xor    DWORD PTR [ebx],eax
  405cd6:	stos   DWORD PTR es:[edi],eax
  405cd7:	jmp    FWORD PTR [eax+0x34]
  405cda:	test   DWORD PTR [esi+0x30],ebp
  405cdd:	lds    ebp,FWORD PTR [esi]
  405cdf:	loop   0x405cef
  405ce1:	mov    dl,0x41
  405ce3:	aaa    
  405ce4:	cmp    esi,DWORD PTR [edi-0x30]
  405ce7:	cdq    
  405ce8:	mov    esi,0x2b6ce8a8
  405ced:	jno    0x405ce1
  405cef:	enter  0x6822,0x68
  405cf3:	jae    0x405d00
  405cf5:	cmp    al,BYTE PTR [edi+0x3a0f66ad]
  405cfb:	int    0x1f
  405cfd:	jae    0x405d69
  405cff:	nop
  405d00:	jnp    0x405ce9
  405d02:	sub    BYTE PTR [edx],0xe
  405d05:	pop    edi
  405d06:	mov    ds:0xdd00363d,eax
  405d0b:	or     ch,bl
  405d0d:	ins    BYTE PTR es:[edi],dx
  405d0e:	ss push 0x46
  405d11:	cli    
  405d12:	adc    cl,BYTE PTR [edi]
  405d14:	stos   DWORD PTR es:[edi],eax
  405d15:	lods   eax,DWORD PTR ds:[esi]
  405d16:	test   BYTE PTR [esi],al
  405d18:	sub    cl,bh
  405d1a:	xor    cl,BYTE PTR ds:0x5ed6afa1
  405d20:	mov    ecx,cr1
  405d23:	in     al,dx
  405d24:	das    
  405d25:	retf   
  405d26:	imul   esp,DWORD PTR [esi],0xf
  405d29:	jle    0x405da2
  405d2b:	outs   dx,DWORD PTR ds:[esi]
  405d2c:	stos   DWORD PTR es:[edi],eax
  405d2d:	xlat   BYTE PTR ds:[ebx]
  405d2e:	jbe    0x405ce3
  405d30:	aaa    
  405d31:	repnz (bad) 
  405d33:	mov    ah,0x7d
  405d35:	or     BYTE PTR [edi-0x4e2f391d],dh
  405d3b:	inc    ebx
  405d3c:	dec    esi
  405d3d:	jnp    0x405d27
  405d3f:	sub    bh,BYTE PTR ds:0x5a42f596
  405d45:	fbld   TBYTE PTR [ecx+0x5fe7af3e]
  405d4b:	enter  0x6c9b,0x60
  405d4f:	or     ebx,0xffffffda
  405d52:	out    dx,eax
  405d53:	std    
  405d54:	int    0x37
  405d56:	aad    0x2d
  405d58:	or     BYTE PTR [ecx+0x7dd5c2a7],cl
  405d5e:	in     al,dx
  405d5f:	ja     0x405d81
  405d61:	dec    esp
  405d62:	jg     0x405d56
  405d64:	add    ebp,DWORD PTR [edx+0x6faf7271]
  405d6a:	xlat   BYTE PTR ds:[ebx]
  405d6b:	fadd   QWORD PTR [ecx]
  405d6d:	sbb    DWORD PTR [ebp+0x27a5ed71],ebx
  405d73:	push   eax
  405d74:	ror    cl,1
  405d76:	data16 rcr BYTE PTR [ebp+0x752163c1],0xa8
  405d7e:	adc    eax,0xb65cf3c4
  405d83:	aaa    
  405d84:	mov    dh,0x31
  405d86:	imul   ecx,DWORD PTR [edx+0x7686cef1],0xfffffff5
  405d8d:	dec    esi
  405d8e:	xchg   edx,eax
  405d8f:	cmc    
  405d90:	dec    edx
  405d91:	(bad)  
  405d92:	hlt    
  405d93:	aad    0xe0
  405d95:	sbb    al,0xf
  405d97:	aad    0x5d
  405d99:	vpsraw ymm3,ymm7,XMMWORD PTR [esi-0x56f5263e]
  405da1:	lahf   
  405da2:	cmp    DWORD PTR [ebp+0x35],ebx
  405da5:	(bad)  
  405da7:	imul   DWORD PTR [edi+0x28994d45]
  405dad:	ds jno 0x405d6d
  405db0:	fmulp  st(2),st
  405db2:	inc    ecx
  405db3:	sub    eax,0xaa19b478
  405db8:	retf   0x568d
  405dbb:	jl     0x405d80
  405dbd:	mov    ebp,0xf2274b65
  405dc2:	xor    al,0xb8
  405dc4:	(bad)  
  405dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dc6:	xchg   esi,eax
  405dc7:	sbb    al,0xbc
  405dc9:	cmp    DWORD PTR [ecx],eax
  405dcb:	imul   edi,DWORD PTR [ebx+0x27672f50],0x8d25c89b
  405dd5:	or     BYTE PTR ss:[esi+0x42],cl
  405dd9:	rol    DWORD PTR [eax+0x7f],0xd4
  405ddd:	aam    0xaa
  405ddf:	jbe    0x405d9e
  405de1:	in     eax,0xc5
  405de3:	jp     0x91de5db0
  405de9:	cli    
  405dea:	cmc    
  405deb:	jmp    0xc74d:0x222680
  405df2:	jecxz  0x405e71
  405df4:	std    
  405df5:	push   esp
  405df6:	test   ecx,esp
  405df8:	stos   DWORD PTR es:[edi],eax
  405df9:	mul    BYTE PTR ds:0x2931922c
  405dff:	fs pop ebx
  405e01:	(bad)  
  405e02:	mov    cl,BYTE PTR [eax]
  405e04:	je     0x405e07
  405e06:	les    ebx,FWORD PTR [ecx]
  405e08:	inc    ebx
  405e09:	cmc    
  405e0a:	sbb    edi,DWORD PTR [ebx]
  405e0c:	push   eax
  405e0d:	(bad)  
  405e0e:	sti    
  405e0f:	mov    bl,0xa1
  405e11:	test   al,0xc5
  405e13:	add    BYTE PTR [ecx-0x71],ch
  405e16:	adc    dl,al
  405e18:	cmp    al,BYTE PTR [ebp+0x4a4fbb6]
  405e1e:	push   0xffffffdf
  405e20:	pop    edi
  405e21:	retf   
  405e22:	inc    edx
  405e23:	mov    edi,0x1d603f33
  405e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e29:	cld    
  405e2a:	jne    0x405e05
  405e2c:	pop    edi
  405e2d:	in     al,dx
  405e2e:	call   0xb90061c9
  405e33:	or     DWORD PTR [edi],esp
  405e35:	(bad)  
  405e36:	add    al,0x3c
  405e38:	pop    esp
  405e39:	xlat   BYTE PTR ds:[ebx]
  405e3a:	aas    
  405e3b:	jnp    0x5efe2d5c
  405e41:	scas   al,BYTE PTR es:[edi]
  405e42:	cmp    eax,0xa5a616c2
  405e47:	cdq    
  405e48:	push   0xffffffe4
  405e4a:	clc    
  405e4b:	push   ecx
  405e4c:	inc    ebp
  405e4d:	inc    ebp
  405e4e:	jae    0x405e99
  405e50:	mov    dl,0x7f
  405e52:	fsub   QWORD PTR [eax]
  405e54:	in     eax,0x68
  405e56:	rcl    BYTE PTR [eax],0xa
  405e59:	push   ecx
  405e5a:	out    0xd0,al
  405e5c:	xchg   ecx,eax
  405e5d:	popa   
  405e5e:	adc    eax,0xd4e2b419
  405e63:	(bad)  
  405e64:	es stos DWORD PTR es:[edi],eax
  405e66:	xchg   esp,esp
  405e68:	loope  0x405e7f
  405e6a:	aam    0xca
  405e6c:	pop    esp
  405e6e:	adc    al,0x77
  405e70:	adc    ah,dl
  405e72:	xor    esi,ebx
  405e74:	push   es
  405e75:	loope  0x405e8f
  405e77:	jle    0x405e79
  405e79:	popa   
  405e7a:	cmp    al,0x54
  405e7c:	inc    edi
  405e7d:	xchg   edi,eax
  405e7e:	sti    
  405e7f:	push   esi
  405e80:	jnp    0x405ede
  405e82:	dec    ecx
  405e83:	out    0x71,eax
  405e85:	int3   
  405e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e87:	and    DWORD PTR [edx-0x1daabf30],0xbd27dad2
  405e91:	mov    edx,0xc9692949
  405e96:	and    eax,0xb3ba9f44
  405e9b:	adc    DWORD PTR [edi],ecx
  405e9d:	or     al,0x29
  405e9f:	aaa    
  405ea0:	neg    DWORD PTR [ebp-0x37]
  405ea3:	les    edx,FWORD PTR [edx]
  405ea5:	iret   
  405ea6:	aam    0xd3
  405ea8:	mov    eax,0xf10d9af3
  405ead:	xchg   ecx,eax
  405eae:	popa   
  405eaf:	dec    ebp
  405eb0:	and    ah,al
  405eb2:	in     al,0x8
  405eb4:	test   DWORD PTR [esi+0x576b8d41],0xf454fc1f
  405ebe:	stos   DWORD PTR es:[edi],eax
  405ebf:	cmp    BYTE PTR ds:0xeff4ac9e,dh
  405ec5:	mov    ebp,0xdcc852ed
  405eca:	pop    edi
  405ecb:	pop    ebx
  405ecc:	fisub  DWORD PTR [ebp-0x4663696f]
  405ed2:	add    edi,DWORD PTR [ebp-0x58]
  405ed5:	adc    eax,0x81650360
  405eda:	out    dx,eax
  405edb:	jne    0x405ec1
  405edd:	xor    eax,0x629698c7
  405ee2:	icebp  
  405ee3:	nop
  405ee4:	inc    ebp
  405ee5:	push   es
  405ee6:	xor    eax,0xb587cefd
  405eeb:	push   edx
  405eec:	mov    ebp,0x4f370e12
  405ef1:	push   es
  405ef2:	(bad)  
  405ef3:	out    0x48,eax
  405ef5:	jbe    0x405f08
  405ef7:	(bad)  [esi+0x56c43070]
  405efd:	repnz mov ah,0x95
  405f00:	inc    esp
  405f01:	xchg   esp,eax
  405f02:	retf   
  405f03:	inc    ebx
  405f04:	sub    dh,BYTE PTR [ebx+ecx*2]
  405f07:	push   edx
  405f08:	into   
  405f09:	dec    ebx
  405f0a:	and    BYTE PTR [edx-0x24830fcf],0xdd
  405f11:	sbb    bh,BYTE PTR [ecx+0x3d]
  405f14:	je     0x405eb2
  405f16:	push   edx
  405f17:	fstp   DWORD PTR [edi+0x69]
  405f1a:	mov    eax,0x7ef41bdc
  405f1f:	into   
  405f20:	mov    edx,0x9addc1fa
  405f25:	dec    ebp
  405f26:	nop
  405f27:	jae    0x405eb0
  405f29:	ret    0xdc15
  405f2c:	fs jmp 0x19d7:0x966e8a6c
  405f34:	jg     0x405ef3
  405f36:	or     ecx,edi
  405f38:	fisub  DWORD PTR [ebp-0x50]
  405f3b:	mov    bl,0xe7
  405f3d:	out    dx,eax
  405f3e:	(bad)  
  405f40:	mov    WORD PTR [esi+0x1c],ss
  405f43:	lea    esi,[edi]
  405f45:	cmp    ch,bl
  405f47:	adc    dh,BYTE PTR [esi-0x1b741e3a]
  405f4d:	xchg   ebx,eax
  405f4e:	push   0x4
  405f50:	mov    ebp,0x4c12cf6e
  405f55:	loop   0x405fad
  405f57:	mov    cl,0xd0
  405f59:	mov    ah,0xbd
  405f5b:	dec    esp
  405f5c:	cmp    eax,0x3b4ef245
  405f61:	fcomp  QWORD PTR [edx-0x28a7cf5a]
  405f67:	into   
  405f68:	sbb    eax,esp
  405f6a:	add    al,0xbb
  405f6c:	push   eax
  405f6d:	ds test al,0xb2
  405f70:	shr    DWORD PTR [edi-0x6c],1
  405f73:	jg     0x405ef9
  405f75:	push   edx
  405f76:	test   BYTE PTR [ecx],bl
  405f78:	in     eax,dx
  405f79:	adc    BYTE PTR ss:[edx-0x5ad73339],ch
  405f80:	inc    ecx
  405f81:	(bad)  
  405f82:	xor    BYTE PTR [eax],dh
  405f84:	icebp  
  405f85:	call   0x23ab:0x39324e46
  405f8c:	rcr    DWORD PTR [ecx-0x70],0x1d
  405f90:	rcr    DWORD PTR [esp+ebp*8],1
  405f93:	ror    BYTE PTR [ebx-0x47],1
  405f96:	fild   QWORD PTR [eax]
  405f98:	outs   dx,BYTE PTR ds:[esi]
  405f99:	repz sbb BYTE PTR [ecx+0x7d],0x56
  405f9e:	cli    
  405f9f:	xchg   esp,eax
  405fa0:	in     al,dx
  405fa1:	mov    eax,0x62c7d89c
  405fa6:	fstp   QWORD PTR [eax+eiz*4-0x17]
  405faa:	push   es
  405fab:	aaa    
  405fac:	fld    DWORD PTR [ecx]
  405fae:	ds push esp
  405fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb1:	scas   al,BYTE PTR es:[edi]
  405fb2:	sub    bh,dl
  405fb4:	mov    eax,0x75fc21a1
  405fb9:	jmp    0x72d3703e
  405fbe:	add    dh,bh
  405fc0:	inc    eax
  405fc1:	sub    al,0xed
  405fc3:	push   esi
  405fc4:	sbb    BYTE PTR ds:0x5676c65e,0x14
  405fcb:	fild   DWORD PTR [esi+0x65]
  405fce:	jns    0x405fbe
  405fd0:	sub    bh,BYTE PTR [eax+0x10]
  405fd3:	mov    al,ds:0xd9e840dc
  405fd8:	cmp    al,0x9b
  405fda:	out    dx,eax
  405fdb:	jg     0x406008
  405fdd:	jae    0x405ff4
  405fdf:	pop    edx
  405fe0:	scas   eax,DWORD PTR es:[edi]
  405fe1:	xor    BYTE PTR [ebx-0x1e],cl
  405fe4:	(bad)  
  405fe5:	cmp    DWORD PTR [edx+eiz*4+0x7abfaf85],esi
  405fec:	cmp    al,0xff
  405fee:	jl     0x405f92
  405ff0:	sbb    DWORD PTR [ebp-0x510299be],ebp
  405ff6:	mov    ah,BYTE PTR [esi]
  405ff8:	repnz add eax,0x17c12449
  405ffe:	jb     0x406028
  406000:	inc    DWORD PTR [ebx+0x3d]
  406003:	or     al,0x3d
  406005:	loopne 0x406057
  406007:	aaa    
  406008:	inc    edx
  406009:	xchg   BYTE PTR [ebp-0x3c453459],bl
  40600f:	fs es retf 0x8d9a
  406014:	mov    dh,0x23
  406016:	jmp    0xa0634dd7
  40601b:	imul   esp,edx,0xffffffe7
  40601e:	aam    0xd3
  406020:	sti    
  406021:	sbb    BYTE PTR [eax-0x1c],0xa9
  406025:	lea    edi,[edi-0x43d2bac8]
  40602b:	hlt    
  40602c:	inc    ebx
  40602d:	imul   ebx,esp,0xffffff86
  406030:	pop    edx
  406031:	mov    eax,ds:0xf234f82
  406036:	ret    0xf877
  406039:	ret    0x6673
  40603c:	push   esp
  40603d:	jg     0x40604b
  40603f:	pop    edi
  406040:	les    ebx,FWORD PTR [ebp+0x51]
  406043:	mov    ah,0x40
  406045:	shl    ecx,cl
  406047:	cli    
  406048:	mov    bl,0xc
  40604a:	xor    esi,DWORD PTR [eax+eiz*2+0x17]
  40604e:	and    al,0x78
  406050:	inc    esi
  406051:	ja     0x406041
  406053:	test   al,0x96
  406055:	nop
  406056:	cmp    al,BYTE PTR [ebx+0x4b]
  406059:	pop    es
  40605a:	or     cl,al
  40605c:	pop    ds
  40605d:	mov    ecx,0x44d7f946
  406062:	pop    ecx
  406063:	or     bh,ah
  406065:	push   esp
  406066:	sbb    al,0x99
  406068:	inc    ebp
  406069:	cmc    
  40606a:	enter  0xe3ae,0x15
  40606e:	jge    0x40602b
  406070:	cmp    al,BYTE PTR [ebx]
  406072:	nop
  406073:	stc    
  406074:	dec    ecx
  406075:	lds    eax,FWORD PTR [eax]
  406077:	pop    ds
  406078:	repz cmp ah,cl
  40607b:	inc    ebp
  40607c:	scas   eax,DWORD PTR es:[edi]
  40607d:	ss scas eax,DWORD PTR es:[edi]
  40607f:	add    ah,cl
  406081:	or     ch,cl
  406083:	daa    
  406084:	sahf   
  406085:	mov    edi,0xd3bce284
  40608a:	loopne 0x40605c
  40608c:	rcl    DWORD PTR [ebp+0x33],1
  40608f:	fldenv [ebp+0x3dc933c]
  406095:	xor    eax,0x6c5e36f9
  40609a:	mov    WORD PTR [esi+0x306b0c7f],cs
  4060a0:	mov    ds:0xa986581f,eax
  4060a5:	mov    DWORD PTR [ebx-0x7fe6af6a],edi
  4060ab:	enter  0x7f61,0xef
  4060af:	mov    bh,dl
  4060b1:	cdq    
  4060b2:	scas   eax,DWORD PTR es:[edi]
  4060b3:	pop    ebp
  4060b4:	adc    eax,0x75d04987
  4060b9:	out    dx,eax
  4060ba:	unpckhps xmm0,XMMWORD PTR [ecx]
  4060bd:	in     eax,dx
  4060be:	jp     0x4060b3
  4060c0:	sbb    esi,DWORD PTR [ecx-0x56]
  4060c3:	xor    bh,BYTE PTR [edi+0x4]
  4060c6:	fs push cs
  4060c8:	aaa    
  4060c9:	xchg   esp,eax
  4060ca:	cdq    
  4060cb:	or     esi,DWORD PTR [esi]
  4060cd:	pop    es
  4060ce:	enter  0xa9a,0xfc
  4060d2:	push   ss
  4060d3:	adc    eax,0xc2af0f16
  4060d8:	mov    edx,DWORD PTR [ebp-0x8]
  4060db:	mov    al,BYTE PTR [eax+edx*1]
  4060de:	mov    BYTE PTR [ebp-0x1],al
  4060e1:	mov    eax,DWORD PTR [ebp-0x30]
  4060e4:	mov    edx,DWORD PTR [ebp-0xc]
  4060e7:	xor    eax,esi
  4060e9:	add    eax,edi
  4060eb:	imul   eax,edx
  4060ee:	mov    edx,DWORD PTR [ebp-0x28]
  4060f1:	xor    edx,esi
  4060f3:	add    eax,edx
  4060f5:	mov    edx,DWORD PTR [ebp-0x8]
  4060f8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  406100:	mov    edx,DWORD PTR [ebp-0x50]
  406103:	xor    edx,esi
  406105:	lea    eax,[edx+eax*1+0x3272ef]
  40610c:	movzx  edx,BYTE PTR [ebp-0x1]
  406110:	xor    edx,eax
  406112:	mov    BYTE PTR [ebp-0x1],dl
  406115:	mov    al,BYTE PTR [ebp-0x1]
  406118:	mov    edx,DWORD PTR [ebp-0x30]
  40611b:	mov    ebx,DWORD PTR [ebp-0xc]
  40611e:	xor    edx,esi
  406120:	add    edx,edi
  406122:	imul   edx,ebx
  406125:	mov    ebx,DWORD PTR [ebp-0x8]
  406128:	mov    BYTE PTR [edx+ebx*1],al
  40612b:	mov    eax,DWORD PTR [ebp-0x40]
  40612e:	mov    edx,DWORD PTR [ebp-0x28]
  406131:	xor    eax,esi
  406133:	xor    edx,esi
  406135:	add    eax,edi
  406137:	add    edx,edi
  406139:	imul   eax,edx
  40613c:	add    eax,DWORD PTR [ebp-0xc]
  40613f:	mov    DWORD PTR [ebp-0xc],eax
  406142:	mov    eax,DWORD PTR [ebp-0xc]
  406145:	mov    edx,DWORD PTR [ebp-0x18]
  406148:	cmp    edx,eax
  40614a:	jb     0x40197d
  406150:	mov    eax,DWORD PTR [ebp-0x28]
  406153:	mov    edx,DWORD PTR [ebp-0x18]
  406156:	xor    eax,esi
  406158:	add    eax,edi
  40615a:	imul   eax,edx
  40615d:	jmp    0x4084cd
  406162:	daa    
  406163:	add    edi,DWORD PTR [ebx]
  406165:	in     al,dx
  406166:	cmp    esp,DWORD PTR [edi+eax*4-0x6cabb385]
  40616d:	push   edi
  40616e:	add    bl,bh
  406170:	std    
  406171:	test   ah,bl
  406173:	cmp    al,0x7a
  406175:	jp     0x4061a6
  406177:	pop    edi
  406178:	jp     0x4061f4
  40617a:	repz je 0x406181
  40617d:	ret    
  40617e:	or     DWORD PTR [ebx],0xedd43c0f
  406184:	or     BYTE PTR [ecx+ebx*8+0x5a3db6d1],dl
  40618b:	push   0x33fa05d1
  406190:	fcmovnbe st,st(1)
  406192:	shl    esp,0x86
  406195:	pop    edi
  406196:	sti    
  406197:	sbb    DWORD PTR [ecx+0x3],0x7c161a5
  40619e:	cmc    
  40619f:	mov    WORD PTR [edi+0x58],ss
  4061a2:	retf   
  4061a3:	adc    bl,BYTE PTR [ebp+0x392fd004]
  4061a9:	dec    edi
  4061aa:	retf   0x1ebe
  4061ad:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4061af:	lahf   
  4061b0:	pop    ds
  4061b1:	nop
  4061b2:	jbe    0x4061c9
  4061b4:	sub    al,0xd3
  4061b6:	jb     0x40616a
  4061b8:	jmp    0x9f08:0x59da6858
  4061bf:	(bad)  
  4061c0:	idiv   BYTE PTR [esi+0x4c]
  4061c3:	fdiv   QWORD PTR [esi]
  4061c5:	(bad)  
  4061c7:	fucomip st,st(7)
  4061c9:	xchg   edx,eax
  4061ca:	jge    0x4061b7
  4061cc:	out    dx,eax
  4061cd:	jnp    0x406230
  4061cf:	frstor [ebx]
  4061d1:	and    eax,0xd55eba3a
  4061d6:	pop    eax
  4061d7:	add    esi,esi
  4061d9:	ja     0x406201
  4061db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061dc:	aam    0x50
  4061de:	mov    ds:0xaa450440,al
  4061e3:	gs out 0x15,al
  4061e6:	retf   
  4061e7:	call   DWORD PTR [eax-0x45]
  4061ea:	mov    ch,0x11
  4061ec:	add    ah,BYTE PTR [esi+0x7edae35d]
  4061f2:	xchg   ecx,eax
  4061f3:	mov    ecx,0x5e08e9f2
  4061f8:	cmp    eax,0x8915fe8b
  4061fd:	jecxz  0x4061fb
  4061ff:	adc    BYTE PTR [esi],al
  406201:	outs   dx,DWORD PTR ds:[esi]
  406202:	push   cs
  406203:	or     eax,0x631e003e
  406208:	mov    eax,0x1497e747
  40620d:	fs jno 0x4061a6
  406210:	jae    0x4061ad
  406212:	into   
  406213:	lods   eax,DWORD PTR ds:[esi]
  406214:	pop    esi
  406215:	mov    esi,0xc7797d9d
  40621a:	and    ah,ah
  40621c:	scas   al,BYTE PTR es:[edi]
  40621d:	jmp    0x4cbb2bbe
  406222:	pop    eax
  406223:	jbe    0x406294
  406225:	inc    esi
  406226:	pop    ebx
  406227:	les    esi,FWORD PTR [edx-0x4f3ccb95]
  40622d:	jge    0x4061c5
  40622f:	in     al,dx
  406230:	jecxz  0x40620e
  406232:	mov    ebx,0xd5e9bfdb
  406237:	aas    
  406238:	fcomp  st(6)
  40623a:	push   edi
  40623b:	add    BYTE PTR [esi],cl
  40623d:	jmp    0x917ac199
  406242:	jp     0x406272
  406244:	jmp    0x406253
  406246:	pop    ecx
  406247:	xor    DWORD PTR [ebx],edx
  406249:	or     BYTE PTR [ebp-0x764a6f43],0x34
  406250:	sti    
  406251:	leave  
  406252:	and    al,BYTE PTR [ebx]
  406254:	test   al,0xfa
  406256:	inc    ebp
  406257:	cmp    ah,BYTE PTR [edx]
  406259:	fld    TBYTE PTR [ebx]
  40625b:	mov    bl,0xbc
  40625d:	cdq    
  40625e:	mov    esp,0x20373017
  406263:	(bad)  
  406264:	fisubr DWORD PTR [edx]
  406266:	jp     0x406243
  406268:	sub    al,BYTE PTR [ebp+0xfbfb010]
  40626e:	fld    DWORD PTR [ebp*4-0x4ea6a56d]
  406275:	push   esp
  406276:	sbb    al,0x1e
  406278:	sbb    cl,cl
  40627a:	add    eax,0xbad4c633
  40627f:	imul   BYTE PTR [edi]
  406281:	mov    edx,0x24cb21b4
  406286:	enter  0x1ee,0xd3
  40628a:	fwait
  40628b:	mov    ah,0xce
  40628d:	push   ds
  40628e:	sbb    BYTE PTR [eax-0x46baf6a7],ah
  406294:	cs jle 0x4062c1
  406297:	(bad)  
  406298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406299:	mov    dl,0x2c
  40629b:	sbb    al,0xe0
  40629d:	ja     0x4062b1
  40629f:	jae    0x406253
  4062a1:	std    
  4062a2:	je     0x406272
  4062a4:	lea    esi,[eax-0x58]
  4062a7:	pop    es
  4062a8:	add    ah,0x8a
  4062ab:	not    DWORD PTR [esi]
  4062ad:	push   ecx
  4062ae:	fcomp  DWORD PTR ds:0x69e6698b
  4062b4:	pop    ebx
  4062b5:	arpl   sp,sp
  4062b7:	adc    edx,DWORD PTR [eax]
  4062b9:	mov    esp,0xac2b9c0f
  4062be:	shl    ebp,cl
  4062c0:	mov    fs,WORD PTR [ebp+0x47b81640]
  4062c6:	xchg   edx,eax
  4062c7:	call   0xbc6d:0xcf53bf44
  4062ce:	sbb    al,0x61
  4062d0:	cli    
  4062d1:	jmp    0x22a0:0x691b42d3
  4062d8:	pop    edi
  4062d9:	test   eax,0xd3eb9590
  4062de:	cmp    al,0x41
  4062e0:	fisttp WORD PTR [edi]
  4062e2:	bound  ebp,QWORD PTR [ecx+0x46]
  4062e5:	cmp    dl,dh
  4062e7:	adc    eax,0xd7fd4f12
  4062ec:	sar    BYTE PTR [eax+eax*8],cl
  4062ef:	pop    ss
  4062f0:	add    esi,DWORD PTR [ecx-0x704c788d]
  4062f6:	push   ebp
  4062f7:	push   eax
  4062f8:	jge    0x406373
  4062fa:	loopne 0x406314
  4062fc:	xchg   BYTE PTR [ebx-0x74e055f2],dl
  406302:	jae    0x406359
  406304:	imul   ebp,DWORD PTR [edx],0xe8f622ba
  40630a:	jge    0x40638b
  40630c:	add    BYTE PTR [edi],0xe9
  40630f:	int    0x61
  406311:	test   al,0x7b
  406313:	lods   eax,DWORD PTR gs:[esi]
  406315:	mov    ecx,0x99475923
  40631a:	sti    
  40631b:	repz jmp 0x406341
  40631e:	enter  0x63e3,0x0
  406322:	or     BYTE PTR [edx+eiz*8-0x394b42fa],bl
  406329:	push   esp
  40632a:	imul   ebx,edi,0xc125c55f
  406330:	add    al,0xc8
  406332:	frstor [esi-0x7f]
  406335:	xchg   ebp,eax
  406336:	adc    DWORD PTR [esi+0x36],0x7
  40633a:	push   cs
  40633b:	sub    BYTE PTR [edi+0x1],bl
  40633e:	sbb    bl,BYTE PTR [ebx-0x5a9a34d0]
  406344:	lock pusha 
  406346:	enter  0x8ec,0x3e
  40634a:	inc    esp
  40634b:	pop    edx
  40634c:	es std 
  40634e:	pop    ebx
  40634f:	adc    BYTE PTR [ecx],bh
  406351:	pop    edi
  406352:	pop    edx
  406353:	jae    0x40631c
  406355:	fisubr WORD PTR [edi-0x12]
  406358:	or     ebp,ebx
  40635a:	mov    edi,DWORD PTR [ecx-0x42]
  40635d:	and    al,BYTE PTR [edi]
  40635f:	cli    
  406360:	sbb    BYTE PTR [ebx+0x24334080],bh
  406366:	shl    ebp,0x3f
  406369:	(bad)  [edx-0x76eb59c0]
  40636f:	jge    0x4063ec
  406371:	mov    ecx,0x5322c80c
  406376:	and    edx,esi
  406378:	es pop ebp
  40637a:	or     al,0x3c
  40637c:	or     BYTE PTR [edx-0x33],cl
  40637f:	mov    eax,ds:0x976c09b3
  406384:	jl     0x406351
  406386:	mov    edi,0xcc73f680
  40638b:	std    
  40638c:	test   eax,0x54843d77
  406391:	mov    edx,0xac478eb4
  406396:	scas   eax,DWORD PTR es:[edi]
  406397:	jle    0x4063fc
  406399:	fsubr  st,st(6)
  40639b:	sub    eax,0x80bed950
  4063a1:	xlat   BYTE PTR ds:[ebx]
  4063a2:	sbb    DWORD PTR [esi],edx
  4063a4:	jnp    0x4063c0
  4063a6:	cmp    al,0x18
  4063a8:	out    0xae,al
  4063aa:	jle    0x406343
  4063ac:	stc    
  4063ad:	into   
  4063ae:	(bad)  
  4063af:	jb     0x4063f6
  4063b1:	xor    BYTE PTR [edx],ah
  4063b3:	adc    ecx,edi
  4063b5:	add    ah,BYTE PTR [edx-0x176c1392]
  4063bb:	jl     0x406415
  4063bd:	lds    edx,FWORD PTR [edx]
  4063bf:	cmp    eax,eax
  4063c1:	add    BYTE PTR [ebx-0x4c],0x6e
  4063c5:	mov    bl,BYTE PTR [ecx+0x3d550ff3]
  4063cb:	sahf   
  4063cc:	sub    ah,cl
  4063ce:	cmpxchg DWORD PTR [esi+eax*8+0x18],edx
  4063d3:	hlt    
  4063d4:	cmp    al,0x69
  4063d6:	jecxz  0x406414
  4063d8:	xchg   esp,eax
  4063d9:	sub    cl,BYTE PTR [eax-0x671a25d2]
  4063df:	es inc ecx
  4063e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063e2:	jg     0x40637e
  4063e4:	add    al,0x8c
  4063e6:	jb     0x406399
  4063e8:	sbb    eax,0xed466afb
  4063ed:	push   eax
  4063ee:	mov    DWORD PTR [ecx+0xa43f731],0x41a5e9cb
  4063f8:	(bad)  
  4063f9:	dec    ecx
  4063fa:	or     BYTE PTR [ecx-0x5b],bh
  4063fd:	fisttp DWORD PTR [ebp+0x29006563]
  406403:	xchg   ebp,eax
  406404:	lock ret 0x6f35
  406408:	mov    ebp,DWORD PTR ds:0xb6d67069
  40640e:	ror    BYTE PTR [ebx-0x530699a1],cl
  406414:	mov    esi,0xd2b2314c
  406419:	lahf   
  40641a:	fidiv  WORD PTR [ebx-0x353d08e0]
  406420:	por    mm4,QWORD PTR [edi+eiz*4]
  406424:	xor    al,0xc
  406426:	jle    0x406480
  406428:	sub    eax,0xb0d72a17
  40642d:	enter  0x2427,0x1
  406431:	mov    al,ds:0x8379ac17
  406436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406437:	bound  edi,QWORD PTR [edx+0xaf58b95]
  40643d:	std    
  40643e:	push   ebp
  40643f:	mov    ebx,0xb4f61656
  406444:	push   ecx
  406445:	sub    ebx,DWORD PTR [esi-0x57]
  406448:	cli    
  406449:	daa    
  40644a:	add    DWORD PTR [eax],esi
  40644c:	scas   eax,DWORD PTR es:[edi]
  40644d:	or     eax,0x842266fe
  406452:	xchg   esp,eax
  406453:	das    
  406454:	push   esi
  406455:	jmp    0xc9f05e56
  40645a:	fcomp  DWORD PTR ds:0x571b94d3
  406460:	mov    DWORD PTR [ecx-0x3500e3ce],esi
  406466:	dec    ebx
  406467:	int3   
  406468:	push   edi
  406469:	cmp    edx,DWORD PTR [edi-0x5d]
  40646c:	lock pushf 
  40646e:	xchg   ebp,eax
  40646f:	pop    eax
  406470:	das    
  406471:	fidiv  WORD PTR [eax+0x7eb8798f]
  406477:	sub    eax,0xdfcda085
  40647c:	push   ebp
  40647d:	xor    BYTE PTR [edx],cl
  40647f:	inc    ecx
  406480:	push   0x572571f1
  406485:	inc    DWORD PTR [ebx+0xe961cc4]
  40648b:	scas   eax,DWORD PTR es:[edi]
  40648c:	sahf   
  40648d:	push   ss
  40648e:	bound  edx,QWORD PTR [ecx-0x76]
  406491:	inc    ecx
  406492:	xor    eax,DWORD PTR [ebp+edi*2+0x4a]
  406496:	lods   eax,DWORD PTR ds:[esi]
  406497:	(bad)  
  406498:	push   DWORD PTR [edx]
  40649a:	fild   DWORD PTR [ebp+0x7c7abb41]
  4064a0:	jl     0x406439
  4064a2:	out    dx,al
  4064a3:	jge    0x406468
  4064a5:	enter  0xc15f,0x43
  4064a9:	icebp  
  4064aa:	cli    
  4064ab:	jae    0x4064bd
  4064ad:	es dec ebp
  4064af:	pop    esp
  4064b0:	out    0xae,al
  4064b2:	outs   dx,DWORD PTR ds:[esi]
  4064b3:	in     eax,0x85
  4064b5:	and    ecx,eax
  4064b7:	popa   
  4064b8:	(bad)  
  4064b9:	into   
  4064ba:	mov    eax,ds:0x5dcbe6ad
  4064bf:	jg     0x40648d
  4064c1:	jns    0x4064a1
  4064c3:	cmp    al,0x89
  4064c5:	mov    esp,0x1075f53b
  4064ca:	(bad)  [ecx+0x29]
  4064cd:	mov    bh,0x33
  4064cf:	push   esp
  4064d0:	call   0xb394:0xc7cf66bc
  4064d7:	pop    esp
  4064d8:	inc    ecx
  4064d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064da:	sub    al,0xc6
  4064dc:	or     bh,0x51
  4064df:	sbb    BYTE PTR [ecx-0x1b],al
  4064e2:	in     al,0xf3
  4064e4:	jbe    0x40651c
  4064e6:	adc    BYTE PTR ds:0xd5526d07,0x79
  4064ed:	wrmsr  
  4064ef:	fs out 0x8c,eax
  4064f2:	pusha  
  4064f3:	pusha  
  4064f4:	call   0x7aaa:0xcd6ca804
  4064fb:	fadd   DWORD PTR [edi]
  4064fd:	jo     0x40650d
  4064ff:	jge    0x40657e
  406501:	int    0xe4
  406503:	lock push esp
  406505:	sub    al,0xb4
  406507:	lds    edi,FWORD PTR [eax+edi*8-0x60]
  40650b:	aam    0xee
  40650d:	adc    edx,0x55
  406510:	xor    al,0x0
  406512:	and    DWORD PTR [edi+eiz*1],esi
  406515:	sbb    DWORD PTR [eax+ebp*4],ebx
  406518:	mov    dl,0x26
  40651a:	xchg   edx,eax
  40651b:	sub    DWORD PTR [bp-0x2a15],esp
  406520:	(bad)  
  406521:	es aaa 
  406523:	into   
  406524:	icebp  
  406525:	sahf   
  406526:	cmp    BYTE PTR [edx+0x3e],dh
  406529:	push   esi
  40652a:	iret   
  40652b:	mov    ch,0xcb
  40652d:	add    eax,0x9dcc0694
  406532:	push   0x9
  406534:	mov    ds:0x3063e7fb,eax
  406539:	add    eax,0x972ef041
  40653e:	ins    BYTE PTR es:[edi],dx
  40653f:	sahf   
  406540:	pop    ds
  406541:	adc    bl,cl
  406543:	xchg   ebx,eax
  406544:	pop    eax
  406545:	mov    DWORD PTR [ebx+0x491d0ade],eax
  40654b:	fld    QWORD PTR ds:0x24c4cc9e
  406551:	inc    ecx
  406552:	jo     0x40654b
  406554:	xlat   BYTE PTR ss:[bx]
  406557:	or     DWORD PTR [edi],0xc09f94cc
  40655d:	cli    
  40655e:	cwde   
  40655f:	ds xor eax,0xe80c3090
  406565:	add    DWORD PTR [edx+ebp*1+0x2ec8a21f],0xffffffcd
  40656d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40656e:	call   0x6c01:0xc74102b5
  406575:	or     BYTE PTR [ebx+0x65],dl
  406578:	std    
  406579:	das    
  40657a:	pushf  
  40657b:	pop    esp
  40657c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40657d:	popf   
  40657e:	push   ds
  40657f:	loopne 0x40654f
  406581:	pop    ds
  406582:	aas    
  406583:	mov    ah,0x46
  406585:	jae    0x406586
  406587:	jns    0x406575
  406589:	imul   eax,DWORD PTR [edi+0x67],0x3fa8ed40
  406590:	mov    bl,0xef
  406592:	aam    0xe0
  406594:	gs inc esi
  406596:	or     dl,BYTE PTR [edi-0x30]
  406599:	nop
  40659a:	int    0xed
  40659c:	imul   eax,ecx,0xffffff9b
  40659f:	call   0x3e72:0xb096dae5
  4065a6:	dec    ecx
  4065a7:	mov    eax,ds:0xebe5500e
  4065ac:	inc    esp
  4065ad:	cmc    
  4065ae:	or     BYTE PTR [edi+0x2f],dh
  4065b1:	cmp    al,0x4e
  4065b3:	hlt    
  4065b4:	sub    al,0x52
  4065b6:	das    
  4065b7:	jle    0x406606
  4065b9:	dec    ebx
  4065ba:	mov    ds:0xff51ba99,al
  4065bf:	neg    BYTE PTR [esi+0x65]
  4065c2:	sbb    eax,0x3fbb5bc1
  4065c7:	pushf  
  4065c8:	push   0xf
  4065ca:	xchg   ecx,eax
  4065cb:	fimul  WORD PTR [ebx]
  4065cd:	mov    BYTE PTR [ebx+0x6f5defd],dh
  4065d3:	fadd   st,st(6)
  4065d5:	adc    esp,edx
  4065d7:	mov    eax,ds:0x114db3af
  4065dc:	icebp  
  4065dd:	xor    al,0xff
  4065df:	or     eax,0x6fcc165b
  4065e4:	ret    0x278f
  4065e7:	sbb    BYTE PTR [ecx+eiz*8],dh
  4065ea:	popf   
  4065eb:	mov    esi,0x2575f8a4
  4065f0:	adc    DWORD PTR [ecx],esp
  4065f2:	dec    esi
  4065f3:	push   ebx
  4065f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065f5:	jo     0x40657d
  4065f7:	xchg   ebx,eax
  4065f8:	sti    
  4065f9:	xchg   WORD PTR [ebp+ebx*2-0x19452433],bp
  406601:	mov    ch,0x2d
  406603:	icebp  
  406604:	push   ebp
  406605:	xor    al,0x89
  406607:	push   eax
  406608:	xchg   edi,eax
  406609:	xchg   ebp,eax
  40660a:	sub    BYTE PTR [edi-0x62],dh
  40660d:	mov    edi,ebp
  40660f:	mov    DWORD PTR [ecx-0x40],ebp
  406612:	(bad)  
  406613:	jns    0x4065f7
  406615:	dec    eax
  406616:	dec    esi
  406617:	(bad)  
  406618:	or     eax,DWORD PTR [edx-0x6b28f40d]
  40661e:	shl    DWORD PTR [eax],0x97
  406621:	pop    ebp
  406622:	cmp    ebp,DWORD PTR [ecx+0x21e76873]
  406628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406629:	mov    bl,0x2a
  40662b:	add    al,BYTE PTR [ebp+0x42]
  40662e:	cmp    bh,BYTE PTR [ebx+0x73]
  406631:	inc    ecx
  406632:	rcr    ah,cl
  406634:	retf   
  406635:	xor    DWORD PTR [ecx],esi
  406637:	xchg   BYTE PTR [edx+0x16],dl
  40663a:	mov    bh,0x5b
  40663c:	mov    fs,WORD PTR [edi+0x64d5946f]
  406642:	xchg   ebx,eax
  406643:	mov    ds:0x36480819,al
  406648:	dec    esp
  406649:	pop    eax
  40664a:	adc    DWORD PTR [ecx+0x1659f3ea],ebp
  406650:	or     DWORD PTR [ebp+0x313a05a4],esi
  406656:	(bad)  
  406657:	les    esp,FWORD PTR [edi]
  406659:	fcom   QWORD PTR [esi-0x2a]
  40665c:	jae    0x406622
  40665e:	mov    eax,ds:0xbca952fd
  406663:	aas    
  406664:	mov    ds:0x3867adc0,eax
  406669:	stos   BYTE PTR es:[edi],al
  40666a:	cmp    cl,BYTE PTR [esi+0x52]
  40666d:	dec    esi
  40666e:	gs (bad) 
  406670:	retf   0x114e
  406673:	and    dl,BYTE PTR [esi-0x53a915e9]
  406679:	cld    
  40667a:	(bad)  
  40667b:	pushf  
  40667c:	sbb    al,0x87
  40667e:	adc    ebx,esp
  406680:	dec    ebp
  406681:	iret   
  406682:	jmp    0x4066a5
  406684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406685:	xchg   ebx,eax
  406686:	es and eax,0x59b09234
  40668c:	mov    eax,0x978b70be
  406691:	xor    al,0x2b
  406693:	sahf   
  406694:	pop    esi
  406695:	das    
  406696:	fisub  DWORD PTR [ecx]
  406698:	cmp    al,0x54
  40669a:	mov    ebx,0x7ea06cc6
  40669f:	fdivrp st(0),st
  4066a1:	dec    ebp
  4066a2:	sub    DWORD PTR [esi-0x3286c48b],esi
  4066a8:	out    dx,eax
  4066a9:	add    al,0x4f
  4066ab:	adc    al,bl
  4066ad:	push   ebx
  4066ae:	mov    esp,DWORD PTR [edi+0x1c4673cf]
  4066b4:	jno    0x4066b6
  4066b6:	jp     0x40668a
  4066b8:	add    eax,0x606805fd
  4066bd:	or     bh,BYTE PTR [edx+0x6b]
  4066c0:	fsubr  st(2),st
  4066c2:	and    al,0x68
  4066c4:	jbe    0x4066d7
  4066c6:	sbb    dh,BYTE PTR [ebx-0x5e]
  4066c9:	push   0x4
  4066cb:	mov    WORD PTR [ebp+0x53],cs
  4066ce:	sub    edx,edx
  4066d0:	cmp    al,0x7c
  4066d2:	sets   BYTE PTR [ebx]
  4066d5:	mov    bl,0xea
  4066d7:	add    cl,dh
  4066d9:	(bad)  
  4066da:	(bad)  
  4066db:	mov    eax,0x7075a8a8
  4066e0:	lods   eax,DWORD PTR ds:[esi]
  4066e1:	jmp    0xb045:0xfa9cfe93
  4066e8:	ins    BYTE PTR es:[edi],dx
  4066e9:	(bad)  
  4066ea:	mov    bl,0xb
  4066ec:	mov    bh,0x23
  4066ee:	xchg   DWORD PTR [ebx+0x69],esi
  4066f1:	std    
  4066f2:	jnp    0x4066f1
  4066f4:	dec    esp
  4066f5:	outs   dx,DWORD PTR ds:[esi]
  4066f6:	retf   0x6d6f
  4066f9:	adc    ecx,DWORD PTR [ecx+edx*8]
  4066fc:	lods   eax,DWORD PTR ds:[esi]
  4066fd:	push   DWORD PTR [edx]
  4066ff:	pop    ebp
  406700:	sti    
  406701:	jp     0x40670b
  406703:	repz fmul DWORD PTR [edi]
  406706:	ins    DWORD PTR es:[edi],dx
  406707:	aam    0x6b
  406709:	mov    edx,0x9e8777d3
  40670e:	xchg   BYTE PTR [edx-0x51d8b34c],bh
  406714:	jns    0x406717
  406716:	mov    WORD PTR [edi-0x5e],ds
  406719:	rcr    BYTE PTR [edx],cl
  40671b:	add    edx,DWORD PTR [ebp+esi*1-0x2e3f3ce6]
  406722:	sbb    al,0x5d
  406724:	sahf   
  406725:	and    cl,bh
  406727:	leave  
  406728:	fwait
  406729:	cdq    
  40672a:	mov    eax,ds:0x2aa91638
  40672f:	(bad)  
  406730:	pop    edx
  406731:	fisubr WORD PTR ds:0x7050390c
  406737:	add    al,0xf2
  406739:	gs in  al,dx
  40673b:	xlat   BYTE PTR ds:[ebx]
  40673c:	adc    bl,cl
  40673e:	retf   0xf517
  406741:	cmc    
  406742:	mov    al,ds:0x86787413
  406747:	mov    bl,0x54
  406749:	xchg   esp,eax
  40674a:	pusha  
  40674b:	loope  0x406760
  40674d:	scas   al,BYTE PTR es:[edi]
  40674e:	loope  0x40676c
  406750:	(bad)  
  406751:	or     DWORD PTR [ebx-0x79420474],ebp
  406757:	jge    0x4067ba
  406759:	(bad)  
  40675a:	mov    eax,ds:0xab612a3f
  40675f:	inc    ecx
  406760:	jo     0x406758
  406762:	fs sbb eax,0xca9a19c2
  406768:	sti    
  406769:	in     eax,dx
  40676a:	cli    
  40676b:	shl    DWORD PTR [edx-0x72],0x57
  40676f:	loope  0x40670a
  406771:	pop    ebx
  406772:	jg     0x4066f6
  406774:	pop    edx
  406775:	mov    edi,gs
  406777:	lea    eax,[ebp+0x70756c72]
  40677d:	xchg   ebp,eax
  40677e:	hlt    
  40677f:	inc    ecx
  406780:	fist   WORD PTR [eax+0x39]
  406783:	retf   0x8659
  406786:	xor    DWORD PTR [ebx+0x66],eax
  406789:	in     eax,0x90
  40678b:	mov    esi,0x25445f4a
  406790:	pop    edx
  406791:	enter  0x8100,0x19
  406795:	jb     0x406775
  406797:	and    DWORD PTR [ebx+eiz*4-0x5b7e61fc],ecx
  40679e:	fwait
  40679f:	mov    ds:0x840c59c4,al
  4067a4:	mov    WORD PTR ds:0x1ea82e65,cs
  4067aa:	inc    esp
  4067ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ac:	retf   0x386a
  4067af:	push   esp
  4067b0:	xor    al,0xde
  4067b2:	outs   dx,BYTE PTR ds:[esi]
  4067b3:	not    eax
  4067b5:	xor    DWORD PTR [edx-0x4b],ebp
  4067b8:	mov    DWORD PTR [ecx+0x46],eax
  4067bb:	or     eax,0xac953eb
  4067c0:	mov    dl,al
  4067c2:	inc    ebx
  4067c3:	retf   0x59fb
  4067c6:	mov    gs:0x16bfe39b,eax
  4067cc:	jle    0x5a16686c
  4067d2:	retf   0x4ab9
  4067d5:	fsubrp st(5),st
  4067d7:	jns    0x40683e
  4067d9:	in     eax,dx
  4067da:	stc    
  4067db:	cmp    DWORD PTR [ebx-0xfbe2ec0],0xffffff8c
  4067e2:	adc    edx,DWORD PTR [edx-0xc]
  4067e5:	or     ebx,esi
  4067e7:	int3   
  4067e8:	cmp    BYTE PTR [ebx+0x20dc0b88],0x12
  4067ef:	dec    esi
  4067f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067f1:	mov    bl,0x6e
  4067f3:	mov    ds:0xf5fde065,al
  4067f8:	sub    al,0x80
  4067fa:	add    bh,BYTE PTR [ecx]
  4067fc:	shr    DWORD PTR [eax+eax*2+0x14493374],1
  406803:	popf   
  406804:	push   ebx
  406805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406806:	push   ebx
  406807:	pop    esp
  406808:	mov    edi,0x6033e738
  40680d:	iret   
  40680e:	and    DWORD PTR [esi-0x71],ebx
  406811:	lods   al,BYTE PTR ds:[esi]
  406812:	fsubr  QWORD PTR [ebp-0x33]
  406815:	leave  
  406816:	sbb    eax,0x39f88bff
  40681b:	lods   al,BYTE PTR ds:[esi]
  40681c:	and    cl,bh
  40681e:	pop    ebx
  40681f:	inc    ebp
  406820:	or     edi,esp
  406822:	cmp    edi,DWORD PTR [ecx]
  406824:	xchg   al,ah
  406826:	std    
  406827:	jge    0x4067e1
  406829:	cld    
  40682a:	fadd   QWORD PTR [esi+eiz*4-0x6e07fda0]
  406831:	arpl   si,dx
  406833:	ins    BYTE PTR es:[edi],dx
  406834:	(bad)  
  406835:	out    dx,al
  406836:	and    BYTE PTR [esi-0x12],0xde
  40683a:	(bad)  
  40683b:	hlt    
  40683c:	std    
  40683d:	fsub   DWORD PTR [edi+0x42]
  406840:	or     esi,esi
  406842:	out    0x49,eax
  406844:	pop    ebp
  406845:	push   0xe
  406847:	mov    ch,0xf7
  406849:	pop    edi
  40684a:	cld    
  40684b:	shr    DWORD PTR [ebx-0x6003b700],cl
  406851:	ja     0x406889
  406853:	ins    DWORD PTR es:[edi],dx
  406854:	mov    al,ds:0x805ca40e
  406859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40685a:	pop    ss
  40685b:	repnz mov ds:0x6b125850,eax
  406861:	mov    ebx,0x5b80f0c6
  406866:	jnp    0x406854
  406868:	cmp    BYTE PTR es:[ebx],bl
  40686b:	outs   dx,BYTE PTR ds:[esi]
  40686c:	jle    0x40686d
  40686e:	cdq    
  40686f:	(bad)  
  406870:	loop   0x406874
  406872:	mov    dh,0xab
  406874:	lea    edx,[edx]
  406876:	iret   
  406877:	loope  0x406835
  406879:	sub    edi,ebp
  40687b:	int3   
  40687c:	adc    dl,BYTE PTR [edx+0xf]
  40687f:	sbb    al,BYTE PTR [ecx]
  406881:	mov    DWORD PTR [edi-0x1c1a4dc5],esp
  406887:	add    eax,0x30f822a2
  40688c:	not    BYTE PTR [eax-0x21]
  40688f:	in     al,0x56
  406891:	popa   
  406892:	mov    ch,0x9b
  406894:	dec    ecx
  406895:	stos   DWORD PTR es:[edi],eax
  406896:	aad    0x9c
  406898:	cld    
  406899:	rol    DWORD PTR [esi-0x65bdb735],0x6
  4068a0:	add    eax,0x52a371e0
  4068a5:	out    dx,eax
  4068a6:	sbb    al,0x69
  4068a8:	sub    al,bh
  4068aa:	mov    dh,0x42
  4068ac:	cmp    DWORD PTR ds:0x4dc92e90,edi
  4068b2:	add    al,0xbf
  4068b4:	in     eax,dx
  4068b5:	mov    ebp,0x90fc2223
  4068bb:	sar    al,1
  4068bd:	inc    ebp
  4068be:	aad    0xe0
  4068c0:	mov    ah,0xd8
  4068c2:	pop    esp
  4068c3:	sti    
  4068c4:	push   eax
  4068c5:	jns    0x4068de
  4068c7:	aam    0x7c
  4068c9:	pop    es
  4068ca:	mov    esi,0xdf3691c3
  4068cf:	adc    BYTE PTR [eax],ch
  4068d1:	ret    0x9616
  4068d4:	aas    
  4068d5:	bound  esi,QWORD PTR [ecx+0x2a5825bb]
  4068db:	cmc    
  4068dc:	adc    eax,DWORD PTR [edi-0x53]
  4068df:	popf   
  4068e0:	inc    edi
  4068e1:	xor    ch,al
  4068e3:	mov    cl,0x3a
  4068e5:	cld    
  4068e6:	rcl    DWORD PTR [edi+0x538d7128],0xaa
  4068ed:	lock fdiv DWORD PTR [esi-0x6781f8d2]
  4068f4:	xchg   ecx,eax
  4068f5:	enter  0x8a7d,0x94
  4068f9:	retf   0xb730
  4068fc:	sub    ebx,DWORD PTR [edi]
  4068fe:	dec    ebx
  4068ff:	and    BYTE PTR [edx],ch
  406901:	jo     0x4068a8
  406903:	or     BYTE PTR [edi+ebx*1],0xad
  406907:	sahf   
  406908:	sbb    bl,BYTE PTR [ecx-0x4f15dab3]
  40690e:	in     al,0x8c
  406910:	scas   eax,DWORD PTR es:[edi]
  406911:	inc    edx
  406912:	loope  0x4068bc
  406914:	test   DWORD PTR [ecx-0x41],ebp
  406917:	cmp    eax,0xc4928f7a
  40691c:	xchg   esp,eax
  40691d:	add    eax,0x8926d3a6
  406922:	fsub   QWORD PTR [edx+0x5d574c2d]
  406928:	rcr    DWORD PTR [ebp+0x27],1
  40692b:	sub    DWORD PTR [eax],ecx
  40692d:	inc    ebp
  40692e:	mov    dl,0x17
  406930:	mov    al,ds:0x8811d813
  406935:	mov    BYTE PTR [ecx+0x6f064fb],0xa3
  40693c:	retf   0xc1f9
  40693f:	sbb    dl,BYTE PTR [ebx-0x67]
  406942:	jle    0x406926
  406944:	ins    BYTE PTR es:[edi],dx
  406945:	(bad)  
  406946:	not    DWORD PTR [ecx-0x3fe0f15f]
  40694c:	cmp    eax,0x7ab68936
  406951:	aad    0x0
  406953:	sbb    esi,edi
  406955:	adc    eax,0xd429cbf7
  40695a:	test   DWORD PTR [ecx-0x48],edi
  40695d:	enter  0xe19c,0xe8
  406961:	inc    ebp
  406962:	inc    eax
  406963:	pop    esi
  406964:	(bad)  
  406965:	mov    eax,0x588e1f05
  40696a:	imul   edx,DWORD PTR [ebp-0x54609c73],0x6f3ee15a
  406974:	mov    edx,0xd6c4ee4d
  406979:	scas   eax,DWORD PTR es:[edi]
  40697a:	fimul  WORD PTR [esi-0x29b6b392]
  406980:	cmp    DWORD PTR [edx+0x678f2299],esp
  406986:	fld    DWORD PTR [ebp+0x13909d82]
  40698c:	and    BYTE PTR [ebp-0x34],ch
  40698f:	mov    esi,0x3b95caea
  406994:	sti    
  406995:	inc    ecx
  406996:	push   ebx
  406997:	mov    eax,0xb747da79
  40699c:	mov    al,ds:0x1fc1a0ef
  4069a1:	adc    DWORD PTR [ecx],ebx
  4069a3:	in     al,0x24
  4069a5:	jmp    0x9d2966b7
  4069aa:	std    
  4069ab:	test   edi,eax
  4069ad:	fs pop ebx
  4069af:	jb     0x4069fb
  4069b1:	inc    ebx
  4069b2:	pop    eax
  4069b3:	dec    esi
  4069b4:	mov    ds:0xa541c173,eax
  4069b9:	xchg   esp,eax
  4069ba:	push   edi
  4069bb:	dec    ebx
  4069bc:	js     0x406a01
  4069be:	out    dx,eax
  4069bf:	std    
  4069c0:	cmp    eax,0x268cfe7a
  4069c5:	sub    bl,dl
  4069c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069c8:	and    al,0x15
  4069ca:	jp     0x4069b3
  4069cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069cd:	mov    cs,ecx
  4069cf:	push   0xa418555f
  4069d4:	xchg   ecx,eax
  4069d5:	jno    0x406a25
  4069d7:	call   0xda84:0x4d7dab1c
  4069de:	test   DWORD PTR [ebx-0x32],ebx
  4069e1:	jle    0x406994
  4069e3:	std    
  4069e4:	mov    eax,0xeec1ce33
  4069e9:	pop    ecx
  4069ea:	jmp    0x4069e6
  4069ec:	ds sub al,0xed
  4069ef:	push   ebp
  4069f0:	test   DWORD PTR [eax+0x9e9bb78],edx
  4069f6:	mov    bl,0xe6
  4069f8:	dec    ecx
  4069f9:	or     ecx,DWORD PTR [eax+0x54]
  4069fc:	(bad)  
  4069fd:	icebp  
  4069fe:	mov    ebx,0x1528a978
  406a03:	sub    eax,0x333dca9c
  406a08:	mov    al,ds:0xd2ed2993
  406a0d:	mov    esp,0x158da8d7
  406a12:	retf   
  406a13:	(bad)
  406a17:	repnz out dx,al
  406a19:	mov    WORD PTR [esi-0x51],cs
  406a1c:	pop    eax
  406a1d:	sbb    eax,0x2d931c
  406a22:	mov    esp,0x96519fff
  406a27:	sub    BYTE PTR [ebx-0x67e42363],ch
  406a2d:	idiv   BYTE PTR [eax-0x42]
  406a30:	mov    al,0xa6
  406a32:	sub    eax,0x4df5f3b
  406a37:	sbb    esi,DWORD PTR [ebp-0x6b]
  406a3a:	xor    ecx,DWORD PTR [edi+0x4d]
  406a3d:	shl    edx,cl
  406a3f:	fisub  WORD PTR [edi]
  406a41:	popf   
  406a42:	retf   
  406a43:	retf   0x1a15
  406a46:	(bad)  
  406a47:	push   ds
  406a48:	jb     0x4069d6
  406a4a:	inc    edx
  406a4b:	pop    esi
  406a4c:	test   DWORD PTR [edi+0x1f],esi
  406a4f:	xor    eax,esi
  406a51:	sar    DWORD PTR [ebp+0x61],0xff
  406a55:	sub    DWORD PTR [esi-0x53170947],ebp
  406a5b:	les    ecx,FWORD PTR [esi+0x47b3d07b]
  406a61:	inc    eax
  406a62:	shr    BYTE PTR [ecx-0x9bcbb99],cl
  406a68:	and    al,0xf1
  406a6a:	jecxz  0x406ae3
  406a6c:	add    ch,BYTE PTR [edx-0x5c]
  406a6f:	out    0xe8,eax
  406a71:	les    ecx,FWORD PTR [eax]
  406a73:	in     eax,dx
  406a74:	jno    0x406a49
  406a76:	cli    
  406a77:	sar    DWORD PTR [edx+0x5cb9f61e],1
  406a7d:	or     BYTE PTR [eax+ebx*8-0x15],0x70
  406a82:	lds    esp,FWORD PTR ds:0x3913816b
  406a88:	xchg   DWORD PTR [esi],ebx
  406a8a:	es loop 0x406a78
  406a8d:	ins    BYTE PTR es:[edi],dx
  406a8e:	or     DWORD PTR [ecx],esp
  406a90:	add    DWORD PTR [ebx+eax*4-0x12a9f9f8],esp
  406a97:	pop    ecx
  406a98:	add    al,0xef
  406a9a:	sbb    ecx,ebx
  406a9c:	sub    eax,0x8c823570
  406aa1:	retf   
  406aa2:	jmp    0xd4df:0xb10559cb
  406aa9:	inc    ebx
  406aaa:	fcmovnbe st,st(5)
  406aac:	jl     0x406b28
  406aae:	or     DWORD PTR [edx],ebp
  406ab0:	pop    ss
  406ab1:	push   eax
  406ab2:	shr    BYTE PTR [edi-0x5f],1
  406ab5:	(bad)  
  406ab6:	int    0x88
  406ab8:	or     DWORD PTR [ebp-0x53],esp
  406abb:	aam    0xd9
  406abd:	cmp    DWORD PTR [ecx-0x2c],edx
  406ac0:	dec    ebx
  406ac1:	inc    esi
  406ac2:	add    BYTE PTR [ecx-0x7f],0xbd
  406ac6:	mov    cl,0x45
  406ac8:	mov    ch,0x3a
  406aca:	mov    al,ds:0x87464e39
  406acf:	adc    DWORD PTR [eax],0x4b
  406ad2:	pop    edi
  406ad3:	mov    ah,0xf9
  406ad5:	mov    ds:0xc52f5a34,eax
  406ada:	je     0x406ad9
  406adc:	sub    ch,al
  406ade:	mov    al,ds:0xdd5e96d0
  406ae3:	je     0x406a89
  406ae5:	(bad)  
  406ae6:	fmul   QWORD PTR [ebx-0x762a0d99]
  406aec:	xor    DWORD PTR [ebx],edx
  406aee:	jno    0x406b0e
  406af0:	leave  
  406af1:	push   edi
  406af2:	(bad)
  406af5:	mov    bh,0x84
  406af7:	mul    DWORD PTR [ebp-0xaad290f]
  406afd:	fiadd  WORD PTR [esi-0x7768d5f7]
  406b03:	push   esp
  406b04:	xor    dh,BYTE PTR ds:0x6e4ec684
  406b0a:	inc    esp
  406b0b:	fidiv  WORD PTR [edx]
  406b0d:	sub    ebx,DWORD PTR [ebx+0x2b]
  406b10:	jge    0x406b4d
  406b12:	repnz fld DWORD PTR [eax+eiz*2-0x70a96c45]
  406b1a:	cmp    BYTE PTR [eax-0x2d],0x5e
  406b1e:	mov    ebp,0xb0d0e43b
  406b23:	pusha  
  406b24:	xchg   edx,eax
  406b25:	lds    edx,FWORD PTR [ebp+0x73]
  406b28:	fbstp  TBYTE PTR [esp+edx*1-0x57]
  406b2c:	cdq    
  406b2d:	(bad)  
  406b2e:	ins    DWORD PTR es:[edi],dx
  406b2f:	and    al,0x1f
  406b32:	(bad)  
  406b33:	out    dx,eax
  406b34:	pusha  
  406b35:	shl    edi,0xb5
  406b38:	pop    ebp
  406b39:	push   cs
  406b3a:	rol    BYTE PTR [edx+ebp*2],cl
  406b3d:	xchg   ebx,eax
  406b3e:	inc    ebx
  406b3f:	les    ebx,FWORD PTR [edx-0x4e59794b]
  406b45:	mov    eax,0x3e40c61f
  406b4a:	retf   0xe2fb
  406b4d:	outs   dx,DWORD PTR ds:[esi]
  406b4e:	lahf   
  406b4f:	scas   al,BYTE PTR es:[edi]
  406b50:	sub    BYTE PTR gs:[esi-0x48af64ee],dh
  406b57:	pop    eax
  406b58:	add    al,0x64
  406b5a:	test   eax,0xfca54b47
  406b5f:	lods   eax,DWORD PTR ds:[esi]
  406b60:	div    BYTE PTR ds:0x9a1238ca
  406b66:	and    eax,0x287397f8
  406b6b:	xor    eax,0x3581f67e
  406b70:	in     al,dx
  406b71:	xchg   bl,dl
  406b73:	xor    DWORD PTR [eax+ebx*1],0x1f
  406b77:	xchg   edi,eax
  406b78:	jecxz  0x406bd8
  406b7a:	lea    ebp,[ecx+0x616a918b]
  406b80:	test   DWORD PTR [bx+di],eax
  406b83:	or     al,0x4e
  406b85:	push   ds
  406b86:	gs pushf 
  406b88:	or     edx,ebx
  406b8a:	fldpi  
  406b8c:	ins    DWORD PTR es:[edi],dx
  406b8d:	sbb    BYTE PTR [ecx-0x53299934],dl
  406b93:	xor    dh,bh
  406b95:	push   edx
  406b96:	dec    ebp
  406b97:	fs test eax,0xf2d97c63
  406b9d:	sub    BYTE PTR [edi],ah
  406b9f:	xchg   edx,eax
  406ba0:	xchg   ebx,eax
  406ba1:	enterw 0x1d2b,0x9e
  406ba6:	(bad)  
  406ba7:	stc    
  406ba8:	pop    eax
  406ba9:	cmp    al,0xe7
  406bab:	pop    ds
  406bac:	pop    edx
  406bad:	pop    ebp
  406bae:	xchg   esi,eax
  406baf:	fmul   DWORD PTR [esi+0x20]
  406bb2:	mov    esi,0xb47acec8
  406bb7:	(bad)  
  406bb8:	sbb    ch,BYTE PTR [ecx+0x7c696e35]
  406bbe:	test   al,0x74
  406bc0:	in     al,dx
  406bc1:	or     ebp,DWORD PTR [edi+edx*8]
  406bc4:	dec    esp
  406bc5:	push   es
  406bc6:	leave  
  406bc7:	cmp    ecx,esi
  406bc9:	xchg   dl,al
  406bcb:	clc    
  406bcc:	jge    0x406c2d
  406bce:	dec    ebx
  406bcf:	das    
  406bd0:	ins    BYTE PTR es:[edi],dx
  406bd1:	or     eax,0x79a6de91
  406bd6:	jb     0x406bbb
  406bd8:	(bad)  
  406bd9:	icebp  
  406bda:	fs xchg edx,eax
  406bdc:	cmp    DWORD PTR ds:0x5f13a99c,ecx
  406be2:	adc    eax,edx
  406be4:	mov    ds:0xf3dc6b7,al
  406be9:	jno    0x406b6c
  406beb:	cmc    
  406bec:	cmp    BYTE PTR [edx+ebp*4],cl
  406bef:	ret    0x6996
  406bf2:	mov    bl,0x2e
  406bf4:	clc    
  406bf5:	iret   
  406bf6:	popa   
  406bf7:	lea    eax,[eax-0x78]
  406bfa:	test   ebx,0x59b14c4a
  406c00:	mov    cl,0x4e
  406c02:	fisttp DWORD PTR [edx-0xc]
  406c05:	xchg   edi,eax
  406c06:	mov    eax,ds:0x5872059e
  406c0b:	daa    
  406c0c:	neg    DWORD PTR [edx+0x46]
  406c0f:	repnz (bad) 
  406c11:	pop    ebx
  406c12:	cmp    eax,0xaa7797da
  406c17:	xchg   edi,eax
  406c18:	push   edi
  406c19:	push   ds
  406c1a:	mov    ecx,0x68adaeea
  406c1f:	pop    ebp
  406c20:	mov    eax,ds:0xba4c46b5
  406c25:	outs   dx,BYTE PTR ds:[esi]
  406c26:	out    dx,eax
  406c27:	mov    esi,0xa70cc32
  406c2c:	je     0x406ca1
  406c2e:	pushf  
  406c2f:	rcl    DWORD PTR [ebx-0x750f9159],1
  406c35:	mov    ?,WORD PTR [ebx]
  406c37:	retf   0xff42
  406c3a:	adc    BYTE PTR [eax+0x72],dl
  406c3d:	mov    dh,0xbd
  406c3f:	fidivr WORD PTR [esi-0x42]
  406c42:	shl    DWORD PTR [edi],1
  406c44:	jl     0x406c28
  406c46:	push   ebx
  406c47:	out    dx,al
  406c48:	scas   al,BYTE PTR es:[edi]
  406c49:	or     al,0x2c
  406c4b:	rcr    BYTE PTR [ebx+0x55464380],0x0
  406c52:	ins    DWORD PTR es:[edi],dx
  406c53:	pop    esi
  406c54:	in     al,dx
  406c55:	std    
  406c56:	pop    esp
  406c57:	out    dx,al
  406c58:	ds adc eax,0x165de0e
  406c5e:	mov    DWORD PTR [ecx],0x36b2a64f
  406c64:	loop   0x406c6d
  406c66:	jge    0x406c15
  406c68:	adc    edi,DWORD PTR [edx+0xf]
  406c6b:	xchg   edi,eax
  406c6c:	retf   0xc365
  406c6f:	cmp    edx,esp
  406c71:	pop    ecx
  406c72:	push   es
  406c73:	push   edi
  406c74:	push   0xffffffef
  406c76:	rcl    BYTE PTR [ebp-0x48],cl
  406c79:	pop    ebx
  406c7a:	cs xchg esp,eax
  406c7c:	xlat   BYTE PTR ds:[ebx]
  406c7d:	popf   
  406c7e:	(bad)  
  406c7f:	test   dl,cl
  406c81:	(bad)  [ebp+eiz*2-0x43]
  406c85:	mov    fs,WORD PTR [edx+0x531e162a]
  406c8b:	int    0xce
  406c8d:	inc    ebx
  406c8e:	pop    ebx
  406c8f:	sub    al,0xa2
  406c91:	in     al,0xb
  406c93:	add    BYTE PTR [ebx+0x64],cl
  406c96:	data16 fwait
  406c98:	cdq    
  406c99:	outs   dx,BYTE PTR ds:[esi]
  406c9a:	out    0xae,al
  406c9c:	pusha  
  406c9d:	fadd   st(0),st
  406c9f:	xchg   BYTE PTR [eax],dh
  406ca1:	sub    eax,0x6e1add40
  406ca6:	adc    eax,0xd3a1e11
  406cab:	in     eax,dx
  406cac:	xchg   ebx,eax
  406cad:	pop    esp
  406cae:	pop    ebp
  406caf:	ror    bh,0x3f
  406cb2:	das    
  406cb3:	fbld   TBYTE PTR [ecx]
  406cb5:	int    0xf9
  406cb7:	ror    DWORD PTR [edi+0x1c552011],cl
  406cbd:	sahf   
  406cbe:	mov    bh,BYTE PTR [ebx+0x210bc5ee]
  406cc4:	fbld   TBYTE PTR [eax-0x1f]
  406cc7:	aad    0x60
  406cc9:	arpl   WORD PTR ds:[ebx+eax*8+0x70],bp
  406cce:	push   esp
  406ccf:	jl     0x406d2d
  406cd1:	or     BYTE PTR [eax-0x394d3273],dl
  406cd7:	dec    ebp
  406cd8:	fsub   st(5),st
  406cda:	pusha  
  406cdb:	fistp  DWORD PTR [edx-0x2d]
  406cde:	es cmp al,0xcd
  406ce1:	push   edi
  406ce2:	inc    edx
  406ce3:	sti    
  406ce4:	ficomp WORD PTR [ebx-0xa]
  406ce7:	in     eax,dx
  406ce8:	sub    al,0xa4
  406cea:	pop    edi
  406ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ced:	jne    0x406ce4
  406cef:	mov    ?,WORD PTR [esi-0x44]
  406cf2:	pop    ebp
  406cf3:	and    bl,BYTE PTR [ecx+0x5b]
  406cf6:	jb     0x406c8e
  406cf8:	(bad)  
  406cf9:	inc    edi
  406cfa:	inc    esi
  406cfb:	pop    esp
  406cfc:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  406cfe:	push   cs
  406cff:	in     ax,dx
  406d01:	repz (bad) 
  406d03:	push   0xffffffe8
  406d05:	inc    edi
  406d06:	mov    edx,0xbc29275a
  406d0b:	imul   ecx,DWORD PTR [edx],0x24
  406d0e:	pop    ds
  406d0f:	(bad)  
  406d10:	sub    BYTE PTR [edi+0xa646e58],al
  406d16:	push   ebp
  406d17:	xor    DWORD PTR [ebx+0x985c445],edi
  406d1d:	dec    eax
  406d1e:	mov    ecx,0xa23ad66f
  406d23:	add    eax,0x8cb593d6
  406d28:	sbb    eax,DWORD PTR [edx+0x39d0cbd3]
  406d2e:	jle    0x406d11
  406d30:	bound  edi,QWORD PTR [ebx+0x59]
  406d33:	jge    0x406cea
  406d35:	and    al,0x0
  406d37:	ins    BYTE PTR es:[edi],dx
  406d38:	hlt    
  406d39:	xchg   edi,eax
  406d3a:	in     al,dx
  406d3b:	push   ebx
  406d3c:	popf   
  406d3d:	adc    bl,0x18
  406d40:	pushf  
  406d41:	xor    esp,edi
  406d43:	sub    ch,BYTE PTR [ecx-0x63]
  406d46:	and    BYTE PTR [esp+ebx*1-0x21],dl
  406d4a:	cs xchg edx,eax
  406d4c:	aas    
  406d4d:	push   ebp
  406d4e:	sar    esp,1
  406d50:	sti    
  406d51:	inc    edx
  406d52:	inc    edx
  406d53:	rcl    DWORD PTR [edx],1
  406d55:	fs pop ebp
  406d57:	xchg   ebp,eax
  406d58:	ret    0x9962
  406d5b:	cld    
  406d5c:	cs ret 0xdea1
  406d60:	xor    DWORD PTR [eax+0x50],edx
  406d63:	fisub  DWORD PTR [edx-0x7286ae2f]
  406d69:	lock and dh,ch
  406d6c:	out    0xcf,al
  406d6e:	adc    BYTE PTR [eax+0xa],ah
  406d71:	sbb    ebx,DWORD PTR [ecx+0xeee29c1]
  406d77:	loop   0x406d0f
  406d79:	xor    al,0x3c
  406d7b:	clc    
  406d7c:	dec    DWORD PTR ds:0xecb8fa9c
  406d82:	cdq    
  406d83:	loopne 0x406df8
  406d85:	mov    edx,gs
  406d87:	or     ebx,DWORD PTR [ebx-0x545fcdd4]
  406d8d:	sub    ah,ch
  406d8f:	add    al,0x96
  406d91:	retf   
  406d92:	adc    al,0xd7
  406d94:	xchg   DWORD PTR ds:0x241a6efc,esi
  406d9a:	out    0x1d,al
  406d9c:	sbb    eax,0x7bc6e276
  406da1:	cdq    
  406da2:	(bad)  
  406da3:	icebp  
  406da4:	add    al,0xfc
  406da6:	cli    
  406da7:	sbb    al,0x3d
  406da9:	popa   
  406daa:	fadd   QWORD PTR [esi-0x19]
  406dad:	inc    esp
  406dae:	mov    cl,0x39
  406db0:	and    DWORD PTR [eax],eax
  406db2:	nop
  406db3:	lods   eax,DWORD PTR ds:[esi]
  406db4:	std    
  406db5:	adc    eax,0x62933669
  406dba:	sub    al,0x9a
  406dbc:	add    eax,0xfd2c527e
  406dc1:	mov    bl,0xbc
  406dc3:	sub    al,0x71
  406dc5:	mov    dh,BYTE PTR [ebp+0x4f8a0e28]
  406dcb:	aam    0x8a
  406dcd:	out    dx,al
  406dce:	add    esi,DWORD PTR [edi]
  406dd0:	or     eax,0x5f92812
  406dd5:	pop    ebp
  406dd6:	into   
  406dd7:	(bad)  
  406dda:	idiv   BYTE PTR [esi-0x1f]
  406ddd:	fidivr WORD PTR [eax+0x5f]
  406de0:	mov    al,ds:0xc23fad4d
  406de5:	mov    al,ds:0xcba15b99
  406dea:	inc    eax
  406deb:	mov    cl,0xf
  406ded:	adc    bh,ah
  406def:	clc    
  406df0:	aad    0x94
  406df2:	ins    BYTE PTR es:[edi],dx
  406df3:	mov    dl,0xc5
  406df5:	lea    esi,[ecx+0x13]
  406df8:	popa   
  406df9:	in     eax,0x79
  406dfb:	inc    BYTE PTR [edx+0xc]
  406dfe:	sub    DWORD PTR [ebx+0x1f75be6],esi
  406e04:	xchg   ebx,eax
  406e05:	gs int 0x6d
  406e08:	mov    dh,0x2
  406e0a:	and    al,BYTE PTR [ecx+0x54c36cec]
  406e10:	push   ss
  406e11:	xchg   ebp,eax
  406e12:	jae    0x406e23
  406e14:	lock repz jmp 0x406e85
  406e18:	lds    edi,FWORD PTR [edi-0x13]
  406e1b:	dec    BYTE PTR [ebp+edi*2+0x6b]
  406e1f:	jno    0x406db0
  406e21:	push   eax
  406e22:	popa   
  406e23:	ins    BYTE PTR es:[edi],dx
  406e24:	ds nop
  406e26:	jne    0x406e03
  406e28:	addr16 sbb al,0x13
  406e2b:	and    DWORD PTR [eax],esi
  406e2d:	jp     0x406e01
  406e2f:	push   ds
  406e30:	enter  0xa62f,0x52
  406e34:	xchg   esp,eax
  406e35:	mov    cl,0xe6
  406e37:	jo     0x406dba
  406e39:	sub    eax,0x5626f0a7
  406e3e:	bound  esp,QWORD PTR [ebx+0x5b]
  406e41:	mov    ch,0x5b
  406e43:	cmp    eax,0xd4c8b20f
  406e48:	popa   
  406e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e4a:	mov    ch,0xe5
  406e4c:	xchg   ecx,eax
  406e4d:	jg     0x406ebd
  406e4f:	jne    0x406e26
  406e51:	xchg   esi,eax
  406e52:	sbb    esi,DWORD PTR [edx-0x52]
  406e55:	aas    
  406e56:	adc    DWORD PTR [ebx+0x3fd3afc9],edx
  406e5c:	jge    0x406eb2
  406e5e:	test   al,0x1e
  406e60:	fwait
  406e61:	stos   DWORD PTR es:[edi],eax
  406e62:	aad    0xb2
  406e64:	shr    BYTE PTR [eax+0x47],0xc2
  406e68:	jp     0x406ea1
  406e6a:	pop    ebp
  406e6b:	(bad)  
  406e6d:	xor    al,0x32
  406e6f:	(bad)  
  406e70:	out    dx,al
  406e71:	retf   0x716f
  406e74:	fmul   st(6),st
  406e76:	call   0x2c8efc8c
  406e7b:	mov    ah,BYTE PTR [ecx+0x53]
  406e7e:	daa    
  406e7f:	scas   eax,DWORD PTR es:[edi]
  406e80:	adc    al,0x6
  406e82:	and    BYTE PTR [ebx-0xb62a608],dl
  406e88:	mov    eax,ds:0x94097a6c
  406e8d:	inc    edi
  406e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e8f:	xchg   ecx,eax
  406e90:	retf   0x84f2
  406e93:	add    eax,0xd4035b3a
  406e98:	adc    al,dh
  406e9a:	adc    esi,edx
  406e9c:	pop    edx
  406e9d:	xor    DWORD PTR [ebx+esi*4-0x5d],eax
  406ea1:	cmp    al,0x55
  406ea3:	fild   WORD PTR [edx+0x2f]
  406ea6:	std    
  406ea7:	in     eax,0xb7
  406ea9:	cwde   
  406eaa:	mov    esp,0xb93bba4a
  406eaf:	inc    ebx
  406eb0:	sbb    dl,BYTE PTR [esi-0x5b80c2aa]
  406eb6:	cmp    bh,BYTE PTR [esp+ebp*1]
  406eb9:	xor    BYTE PTR [ebp-0xe95e60f],cl
  406ebf:	inc    edi
  406ec0:	inc    ebp
  406ec1:	mov    ebp,0xb209e534
  406ec6:	xchg   esp,eax
  406ec7:	imul   ebx,DWORD PTR [edi],0xffffff81
  406eca:	and    eax,0xbad7d7ce
  406ecf:	in     eax,0xb0
  406ed1:	outs   dx,BYTE PTR ds:[esi]
  406ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ed3:	mov    edi,0x4adc14bc
  406ed8:	sahf   
  406ed9:	sbb    BYTE PTR [eax-0xb5a2e5a],ch
  406edf:	je     0x406f41
  406ee1:	ins    BYTE PTR es:[edi],dx
  406ee2:	and    dl,bh
  406ee4:	push   0x231ecefb
  406ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eea:	ret    
  406eeb:	mov    eax,ds:0x3db170c2
  406ef0:	imul   DWORD PTR [esi-0x4f0478c2]
  406ef6:	jb     0x406ee6
  406ef8:	and    al,0x54
  406efa:	daa    
  406efb:	mov    al,0xfe
  406efd:	mov    cl,0xfa
  406eff:	out    dx,eax
  406f00:	loopne 0x406f45
  406f02:	cmp    al,0x70
  406f04:	dec    ecx
  406f05:	mul    BYTE PTR [eax+0x2a494d15]
  406f0b:	add    ah,BYTE PTR [eax-0xe137ffb]
  406f11:	loop   0x406f4c
  406f13:	xchg   esp,eax
  406f14:	sbb    al,0xb1
  406f16:	sahf   
  406f17:	xchg   ebx,eax
  406f18:	push   es
  406f19:	push   DWORD PTR [eax+0x3913f2ce]
  406f1f:	adc    edi,ebx
  406f21:	fst    st(6)
  406f23:	inc    edx
  406f24:	mov    ch,0x8
  406f26:	add    al,BYTE PTR [eax-0x1ef810ff]
  406f2c:	mov    BYTE PTR [esi],0xeb
  406f2f:	sub    al,0x9e
  406f31:	xor    cl,dl
  406f33:	fisub  WORD PTR [esi]
  406f35:	mov    eax,0x89e99584
  406f3a:	addr16 xor eax,0xfc71d9a1
  406f40:	ror    ebp,1
  406f42:	mov    dh,0x95
  406f44:	xor    bh,ah
  406f46:	lahf   
  406f47:	(bad)  
  406f48:	jne    0x406f2b
  406f4a:	ins    BYTE PTR es:[edi],dx
  406f4b:	pop    es
  406f4c:	idiv   BYTE PTR [eax-0x15841c56]
  406f52:	outs   dx,DWORD PTR ds:[esi]
  406f53:	push   es
  406f54:	std    
  406f55:	imul   ecx,edi,0xffffff85
  406f58:	adc    al,0x80
  406f5a:	sti    
  406f5b:	or     dh,BYTE PTR [esi]
  406f5d:	pushf  
  406f5e:	xor    ecx,DWORD PTR [esi-0x6a5d6eee]
  406f64:	push   0x4518ecc9
  406f69:	mov    ebp,0x1a3f5852
  406f6e:	rcr    DWORD PTR [eax-0x14096adc],0x41
  406f75:	push   ecx
  406f76:	shl    BYTE PTR ds:0x1b8f0729,0x96
  406f7d:	dec    esp
  406f7e:	or     al,0xd2
  406f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f81:	push   esi
  406f82:	xchg   esp,eax
  406f83:	inc    ebp
  406f84:	pop    ecx
  406f85:	cli    
  406f86:	jecxz  0x406fa5
  406f88:	mov    edx,0x338fa4bf
  406f8d:	es sub eax,0xe937dab7
  406f93:	cmc    
  406f94:	cmc    
  406f95:	sub    al,0xa3
  406f97:	sbb    DWORD PTR [edx-0x65],edx
  406f9a:	shl    BYTE PTR [ecx+0x7e2c3f7a],cl
  406fa0:	mov    eax,0xc5956bcf
  406fa5:	sbb    dh,BYTE PTR [ecx+0x53311d25]
  406fab:	dec    eax
  406fac:	aam    0x14
  406fae:	fisubr WORD PTR [edx]
  406fb0:	mov    edx,0x3e9a9341
  406fb5:	jb     0x406f6a
  406fb7:	xchg   ebp,eax
  406fb8:	imul   ebp,DWORD PTR [esi+0x7a51a827],0xbd736845
  406fc2:	mov    BYTE PTR [esi+ecx*2-0x357d91f0],bh
  406fc9:	scas   eax,DWORD PTR es:[edi]
  406fca:	jg     0x407014
  406fcc:	sbb    ah,ah
  406fce:	mov    eax,0x5895fa07
  406fd3:	leave  
  406fd4:	fnstenv [ebx+0x6da12191]
  406fda:	and    BYTE PTR [edx-0x7c],ah
  406fdd:	pop    esp
  406fde:	inc    ebx
  406fdf:	xchg   esp,eax
  406fe0:	int    0xf8
  406fe2:	test   BYTE PTR [edi+0x3b],dl
  406fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fe6:	push   ds
  406fe7:	xchg   DWORD PTR [edi-0x10],esp
  406fea:	xor    ebp,ebx
  406fec:	(bad)  
  406fed:	xchg   ecx,eax
  406fee:	retf   
  406fef:	mov    dl,0xc3
  406ff1:	jb     0x406f93
  406ff3:	adc    esp,DWORD PTR [ecx]
  406ff5:	sub    BYTE PTR ds:0x3e82dd4a,dl
  406ffb:	(bad)  
  406ffc:	jb     0x407030
  406ffe:	sbb    bh,cl
  407000:	stos   BYTE PTR es:[edi],al
  407001:	inc    edi
  407002:	lods   al,BYTE PTR ds:[esi]
  407003:	dec    ecx
  407004:	shl    BYTE PTR [edi],cl
  407006:	push   cs
  407007:	xchg   esi,eax
  407008:	dec    ebp
  407009:	inc    eax
  40700a:	loope  0x406fe6
  40700c:	cmp    DWORD PTR [edi],edx
  40700e:	out    0x9d,eax
  407010:	mov    gs,WORD PTR [ebp+0x4c]
  407013:	into   
  407014:	mov    ds:0x9d1b14d6,al
  407019:	pushf  
  40701a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40701b:	lods   eax,DWORD PTR ds:[esi]
  40701c:	jb     0x407028
  40701e:	sub    bl,BYTE PTR [eax]
  407020:	test   DWORD PTR [esi],eax
  407022:	cli    
  407023:	lahf   
  407024:	fwait
  407025:	pop    ecx
  407026:	xchg   BYTE PTR [ebp+0x2d],dh
  407029:	inc    esp
  40702a:	add    DWORD PTR [ebx*4-0xe431c25],edi
  407031:	xchg   ebp,eax
  407032:	ret    
  407033:	jbe    0x4070b1
  407035:	shl    DWORD PTR [esi*2+0x548068],1
  40703c:	pop    edi
  40703d:	fwait
  40703e:	adc    edi,DWORD PTR [ecx+0x3f]
  407041:	and    al,0xc2
  407043:	pop    ecx
  407044:	mov    WORD PTR [ecx-0x3d904953],?
  40704a:	inc    esp
  40704b:	rcr    BYTE PTR ds:0xc43fe787,cl
  407051:	adc    bl,BYTE PTR [ecx+eax*1-0x9493ad1]
  407058:	iret   
  407059:	mov    bl,0x5d
  40705b:	mov    ch,0x5a
  40705d:	inc    esi
  40705e:	dec    ebp
  407060:	cmp    DWORD PTR [ebp-0x2f9130f8],edi
  407066:	int3   
  407067:	inc    edi
  407068:	add    DWORD PTR [bx+0x57db],ebp
  40706d:	mov    WORD PTR [eax+0x52],fs
  407070:	adc    edx,0x6f
  407073:	adc    DWORD PTR ss:[ebx+0x58],esp
  407077:	(bad)
  40707a:	cli    
  40707b:	cwde   
  40707c:	sbb    ebx,esp
  40707e:	xchg   esi,eax
  40707f:	sbb    dl,BYTE PTR [ebp+0x46afb420]
  407085:	lods   al,BYTE PTR ds:[esi]
  407086:	jno    0x4070c3
  407088:	jmp    FWORD PTR [edi-0x69]
  40708b:	mov    dh,0x92
  40708d:	leave  
  40708e:	imul   edi,ebx,0x9e3ea883
  407094:	jge    0x40707a
  407096:	xor    ecx,DWORD PTR [esi+0x6e0fa0b]
  40709c:	or     bh,0xd0
  40709f:	xchg   esi,eax
  4070a0:	dec    ebx
  4070a1:	inc    esp
  4070a2:	(bad)  
  4070a3:	xchg   ecx,eax
  4070a4:	pop    es
  4070a5:	clc    
  4070a6:	jge    0x407059
  4070a8:	lock mov WORD PTR [eax+0x441b608a],ds
  4070af:	fdiv   DWORD PTR [ecx-0x8]
  4070b2:	add    BYTE PTR [ebx+0x2a],al
  4070b5:	(bad)  
  4070b7:	shl    BYTE PTR [edi-0x22],cl
  4070ba:	sti    
  4070bb:	mov    al,0xf
  4070bd:	sbb    BYTE PTR [ebp+ebx*2-0x54b616cb],0x2a
  4070c5:	and    BYTE PTR [ecx+0x6d],ch
  4070c8:	pop    ecx
  4070c9:	or     ebx,esi
  4070cb:	xor    al,0xc5
  4070cd:	inc    eax
  4070ce:	xor    al,0x0
  4070d0:	les    edi,FWORD PTR [eax+0x6fc5dac0]
  4070d6:	pushf  
  4070d7:	pop    edi
  4070d8:	jmp    0x4b4f:0x4eff7b9
  4070df:	dec    esp
  4070e0:	leave  
  4070e1:	ds ja  0x407067
  4070e4:	outs   dx,DWORD PTR ds:[esi]
  4070e5:	dec    ecx
  4070e6:	fninit 
  4070e8:	cmp    eax,0x4bd3b370
  4070ed:	xchg   edx,eax
  4070ee:	sub    DWORD PTR [ebp+eiz*4-0x6f],0xffffffab
  4070f3:	mov    bl,0x74
  4070f5:	rcl    BYTE PTR ds:0x8992c561,1
  4070fb:	fbld   TBYTE PTR [edx]
  4070fd:	push   esi
  4070fe:	sbb    eax,0x93183efb
  407103:	sbb    eax,0xcdeb97fb
  407108:	mov    al,0x49
  40710a:	xchg   esp,eax
  40710b:	mov    edx,0xc8d6f1dc
  407110:	imul   edx,DWORD PTR [esi+0xc8c1cf7],0x27
  407117:	rcl    DWORD PTR [ecx],0xe2
  40711a:	mov    dl,0xd1
  40711c:	fcom   QWORD PTR [ebx+0x5b566fbf]
  407122:	mov    cl,0xf2
  407124:	mov    ebp,0xc4ba7a03
  407129:	in     al,dx
  40712a:	cld    
  40712b:	nop
  40712c:	adc    edx,DWORD PTR [ebp-0x6c]
  40712f:	xor    esp,DWORD PTR [eax]
  407131:	fcomp  DWORD PTR [esi+0x24]
  407134:	not    ch
  407136:	mov    bl,0x44
  407138:	jo     0x40714f
  40713a:	and    eax,0x8cb35be5
  40713f:	in     al,0xa1
  407141:	arpl   WORD PTR [eax-0x5ca119c3],ax
  407147:	xchg   edx,eax
  407148:	int3   
  407149:	lock cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40714c:	or     al,0xe4
  40714e:	lods   al,BYTE PTR ds:[esi]
  40714f:	or     DWORD PTR [ebx-0x7651c52],edi
  407155:	push   es
  407156:	add    al,0x89
  407158:	xchg   ecx,eax
  407159:	jle    0x4071ce
  40715b:	cli    
  40715c:	jae    0x4070f6
  40715e:	xor    BYTE PTR [eax+ebx*8+0xe1391c2],0xc6
  407166:	ins    DWORD PTR es:[edi],dx
  407167:	cmp    edx,DWORD PTR [edi-0x5ba010c9]
  40716d:	mov    WORD PTR [ebp-0x71],gs
  407170:	fidivr WORD PTR cs:[edx+ecx*1-0x4d]
  407175:	imul   ecx,DWORD PTR [ebx+ebp*8+0x26],0x74961910
  40717d:	jno    0x4071f6
  40717f:	outs   dx,DWORD PTR ds:[esi]
  407180:	fimul  DWORD PTR [edx-0x3b446b2a]
  407186:	aas    
  407187:	retf   0xe35b
  40718a:	call   0xb312:0xb4488131
  407191:	and    eax,0x188d50de
  407196:	push   edi
  407197:	fstp   TBYTE PTR [esi-0x1d]
  40719a:	in     al,dx
  40719b:	sbb    cl,al
  40719d:	push   ds
  40719e:	out    dx,al
  40719f:	dec    esp
  4071a0:	jbe    0x407127
  4071a2:	xor    eax,0x401d1f16
  4071a7:	xchg   ecx,eax
  4071a8:	pop    esi
  4071a9:	fisttp WORD PTR [edx]
  4071ab:	adc    BYTE PTR [edi],al
  4071ad:	les    esi,FWORD PTR [edi+0x7f]
  4071b0:	call   0x833fa48b
  4071b5:	pop    ds
  4071b6:	(bad)  
  4071b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071b8:	js     0x40719a
  4071ba:	addr16 ja 0x4071f6
  4071bd:	mov    eax,ds:0xefd9f3b4
  4071c2:	shr    BYTE PTR [ebx],cl
  4071c4:	aad    0xb3
  4071c6:	test   eax,0x9b490feb
  4071cb:	dec    esp
  4071cc:	ror    BYTE PTR [esi+0x18],1
  4071cf:	mov    cl,BYTE PTR [esi+0x3ce2ffc3]
  4071d5:	ss sub ebp,ebx
  4071d8:	mov    ebx,0xa7b312fb
  4071dd:	or     ebx,DWORD PTR [ecx]
  4071df:	out    dx,eax
  4071e0:	aad    0x53
  4071e2:	push   0xda6847d3
  4071e7:	cmp    DWORD PTR [edx],eax
  4071e9:	sbb    eax,0x160322df
  4071ee:	ja     0x40717b
  4071f0:	in     al,dx
  4071f1:	in     eax,0x49
  4071f3:	js     0x407264
  4071f5:	stos   DWORD PTR es:[edi],eax
  4071f6:	or     edi,DWORD PTR [esi-0x7b43774d]
  4071fc:	sub    BYTE PTR [edi],dh
  4071fe:	adc    BYTE PTR [ebx],bl
  407200:	popa   
  407201:	push   ss
  407202:	sub    bh,BYTE PTR [edi-0x2608e527]
  407208:	xchg   edi,eax
  407209:	dec    ecx
  40720a:	out    dx,al
  40720b:	sub    eax,0x6823513a
  407210:	jmp    0x3b90:0xe03e388e
  407217:	push   cs
  407218:	aas    
  407219:	push   ebp
  40721a:	stc    
  40721b:	dec    edi
  40721c:	or     edi,ebx
  40721e:	nop
  40721f:	aam    0x2c
  407221:	(bad)  
  407222:	icebp  
  407223:	fst    QWORD PTR [eax-0x583aa493]
  407229:	hlt    
  40722a:	xchg   edi,eax
  40722b:	adc    eax,0x4ee8882e
  407230:	adc    ebp,edx
  407232:	jp     0x4071bb
  407234:	push   esp
  407235:	xchg   ebp,eax
  407236:	test   al,0x34
  407238:	jmp    0x407215
  40723a:	cs jbe 0x4071c7
  40723d:	push   edx
  40723e:	prefetcht1 BYTE PTR [ebx+0x6f11e85f]
  407245:	std    
  407246:	mul    DWORD PTR [edx]
  407248:	rcr    esi,1
  40724a:	ins    DWORD PTR es:[edi],dx
  40724b:	js     0x4072b3
  40724d:	aam    0x82
  40724f:	lods   al,BYTE PTR ds:[esi]
  407250:	adc    eax,0x48178f18
  407255:	xor    eax,0x5ed40e0f
  40725a:	cdq    
  40725b:	mov    cl,0x17
  40725d:	enter  0xbbdf,0x61
  407261:	jo     0x407264
  407263:	int3   
  407264:	retf   0xde7b
  407267:	int3   
  407268:	xor    BYTE PTR [ecx-0x5f],0xcf
  40726c:	loopne 0x407284
  40726e:	dec    edi
  40726f:	leave  
  407270:	inc    ecx
  407271:	cmp    BYTE PTR [eax+0x6],dh
  407274:	std    
  407275:	lock inc ebp
  407277:	dec    edx
  407278:	cs and dl,cl
  40727b:	pushf  
  40727c:	mov    cl,0x7d
  40727e:	jl     0x40720e
  407280:	xor    al,0x56
  407282:	sub    ah,BYTE PTR [edi-0x6b]
  407285:	mov    al,0x8
  407287:	inc    esp
  407288:	jno    0x40728e
  40728a:	lods   al,BYTE PTR ds:[esi]
  40728b:	jmp    0x4072e3
  40728d:	(bad)  
  40728e:	(bad)  
  40728f:	lods   al,BYTE PTR ds:[esi]
  407290:	mov    esi,DWORD PTR [ebx+ebp*8+0x1e]
  407294:	cmp    ecx,edx
  407296:	cli    
  407297:	les    esp,FWORD PTR [ebp-0x67]
  40729a:	push   ds
  40729b:	sbb    ecx,DWORD PTR [edi]
  40729d:	sub    edi,DWORD PTR [ebp-0x5f]
  4072a0:	push   cs
  4072a1:	int    0x7e
  4072a3:	inc    ebx
  4072a4:	shl    BYTE PTR [ebx],cl
  4072a6:	test   eax,0xd6c136a0
  4072ab:	dec    esp
  4072ac:	jno    0x40727d
  4072ae:	(bad)  
  4072af:	cld    
  4072b0:	sub    dh,0xa6
  4072b3:	mov    ebx,0x430b6e89
  4072b8:	hlt    
  4072b9:	mov    ecx,0x56fe79e0
  4072be:	mov    esp,0x18eeddb7
  4072c3:	jne    0x4072a2
  4072c5:	fwait
  4072c6:	aad    0x8d
  4072c8:	jb     0x407340
  4072ca:	lods   al,BYTE PTR ds:[esi]
  4072cb:	push   edx
  4072cc:	xchg   ebx,eax
  4072cd:	aad    0xcf
  4072cf:	and    al,0x55
  4072d1:	fimul  WORD PTR [edx+0x93ce04]
  4072d7:	ds mov ch,0x98
  4072da:	aad    0xb8
  4072dc:	jmp    0x40735a
  4072de:	sbb    eax,0x1e7e4562
  4072e3:	(bad)  
  4072e4:	out    dx,al
  4072e5:	test   bh,cl
  4072e7:	imul   edi,DWORD PTR [esi-0x55],0x419e9404
  4072ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072ef:	dec    esi
  4072f0:	cmp    al,0x92
  4072f2:	loope  0x407370
  4072f4:	xchg   ebx,eax
  4072f5:	xor    eax,0x775b681f
  4072fa:	popf   
  4072fb:	jmp    FWORD PTR [ecx]
  4072fd:	nop
  4072fe:	(bad)  
  4072ff:	sub    al,cl
  407301:	xor    DWORD PTR [ebp-0x78],esi
  407304:	js     0x407305
  407306:	mov    eax,0x3bd0b6dc
  40730b:	pop    ds
  40730c:	loopne 0x40734d
  40730e:	cmp    ch,BYTE PTR [edi]
  407310:	mov    ebp,0xdb2dc42e
  407315:	retf   0xc5a8
  407318:	(bad)  ds:0x5809bc89
  40731e:	mov    bl,0x49
  407320:	and    edi,edx
  407322:	int    0xd8
  407324:	cmp    eax,0x94b553d3
  407329:	jae    0x4072b8
  40732b:	rcr    DWORD PTR [eax+0x26],cl
  40732e:	loop   0x4073a9
  407330:	mov    eax,0x5d096b0e
  407335:	jno    0x407358
  407337:	push   edx
  407338:	lods   eax,DWORD PTR ds:[esi]
  407339:	sbb    ecx,DWORD PTR [ebp+0x7]
  40733c:	cmp    dl,BYTE PTR [ebp-0x73]
  40733f:	inc    ecx
  407340:	mov    cl,0x93
  407342:	jae    0x40735f
  407344:	xchg   edx,eax
  407345:	fild   DWORD PTR [edx-0x66b1bf1f]
  40734b:	(bad)  
  40734c:	imul   edx,eax,0xffffff9f
  40734f:	in     eax,dx
  407350:	in     eax,0x37
  407352:	jmp    0xd1c6:0x43eabee5
  407359:	mov    ecx,0x68803f7c
  40735e:	jmp    0x3dca50ca
  407363:	mov    ch,0xdd
  407365:	sub    BYTE PTR [ecx+edx*8],dh
  407368:	imul   edi,edx,0xf
  40736b:	mov    ebp,DWORD PTR [ebp+0x1cb0d9fc]
  407371:	ja     0x407346
  407373:	and    DWORD PTR [edi],esp
  407375:	push   cs
  407376:	inc    edx
  407377:	jle    0x407320
  407379:	or     DWORD PTR [edi+ebx*2-0x71],edi
  40737d:	sbb    BYTE PTR [edx],ch
  40737f:	fs jmp 0xf4c37e76
  407385:	cwde   
  407386:	loop   0x4073fa
  407388:	sub    eax,0x3969c280
  40738d:	es mov esp,0x6c197ea7
  407393:	fdivrp st(2),st
  407395:	not    ecx
  407397:	mov    ah,0xff
  407399:	cmp    BYTE PTR [eax-0x1a],0xd
  40739d:	sub    BYTE PTR [ecx],ah
  40739f:	aam    0x62
  4073a1:	dec    edx
  4073a2:	mov    bh,BYTE PTR [edx]
  4073a4:	enter  0xf26f,0x16
  4073a8:	mov    ah,0xa5
  4073aa:	mov    WORD PTR [ebp+0x7bc3f63e],?
  4073b0:	fs ins DWORD PTR es:[edi],dx
  4073b2:	es mov bl,0x18
  4073b5:	mov    al,ds:0x2712fd48
  4073ba:	inc    edi
  4073bb:	or     esi,DWORD PTR [ecx]
  4073bd:	jle    0x4073a3
  4073bf:	add    al,dl
  4073c1:	mov    esp,0x8ad051c1
  4073c6:	pusha  
  4073c7:	test   BYTE PTR [edx+ebp*4],dh
  4073ca:	sub    al,0x3c
  4073cc:	mov    bh,0x3e
  4073ce:	adc    DWORD PTR [ecx+eiz*8-0x494174f5],edi
  4073d5:	jno    0x407372
  4073d7:	fadd   DWORD PTR [ecx+0x7fe955be]
  4073dd:	inc    edi
  4073de:	or     eax,0x3532c9a5
  4073e3:	mov    ecx,0x283e2fe3
  4073e8:	retf   
  4073e9:	xor    eax,0xc0846926
  4073ee:	pop    edi
  4073ef:	xor    ecx,DWORD PTR [esi+edx*4-0xd25c707]
  4073f6:	dec    esi
  4073f7:	jne    0x40739b
  4073f9:	xor    ah,BYTE PTR [ebp-0x68f49627]
  4073ff:	jmp    0xc818:0x6c549912
  407406:	lock xchg ebx,eax
  407408:	cld    
  407409:	add    DWORD PTR [esi+0x2beac99f],ebp
  40740f:	mov    ch,0x1d
  407411:	and    eax,0x31b4b7b2
  407416:	cdq    
  407417:	aas    
  407418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407419:	mov    dh,0x5f
  40741b:	xor    ch,ah
  40741d:	data16 hlt 
  40741f:	push   esi
  407420:	aad    0x67
  407422:	call   0xec05:0xf2cbb545
  407429:	call   0xeef68ffb
  40742e:	or     DWORD PTR [eax+ebp*1+0x19ebd2da],edi
  407435:	mov    fs,WORD PTR [ebx+0x45]
  407438:	js     0x40748f
  40743a:	vpsubusw ymm1,ymm6,YMMWORD PTR [ebx+0xeeff34]
  407442:	repz jo 0x4074ba
  407445:	jl     0x40746c
  407447:	shl    ah,1
  407449:	sti    
  40744a:	sub    al,0xfd
  40744c:	mov    edx,0xa01001e6
  407451:	push   edx
  407452:	icebp  
  407453:	(bad)  
  407455:	psadbw mm4,mm4
  407458:	retf   0xef9e
  40745b:	mov    esp,0x7dbbd2fa
  407460:	out    dx,eax
  407461:	and    al,0x56
  407463:	xor    eax,0x131650c
  407468:	jne    0x4073f2
  40746a:	leave  
  40746b:	in     eax,dx
  40746c:	lea    eax,[edi+0x4f97e549]
  407472:	in     eax,0x6c
  407474:	adc    BYTE PTR [ecx-0x7d1d9103],ah
  40747a:	xchg   edi,eax
  40747b:	xor    eax,0x1850b339
  407480:	xor    ch,0x81
  407483:	jbe    0x407469
  407485:	fbld   TBYTE PTR [ecx+0x9]
  407488:	mov    eax,DWORD PTR [edx+0x2e9361ab]
  40748e:	mov    edx,ebp
  407490:	jne    0x407471
  407492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407493:	pop    ecx
  407494:	or     BYTE PTR [esp+ebx*1-0x67a80e81],dl
  40749b:	aas    
  40749c:	fimul  DWORD PTR [esi]
  40749e:	mov    ebx,0xf02e69d6
  4074a3:	ins    BYTE PTR es:[edi],dx
  4074a4:	fadd   DWORD PTR [eax-0x34]
  4074a7:	xor    dh,BYTE PTR ds:0xf80267b5
  4074ad:	aaa    
  4074ae:	add    DWORD PTR [ebx+0x44c43d5a],esi
  4074b4:	push   edi
  4074b5:	mov    ebx,esp
  4074b7:	xor    DWORD PTR [ecx+ebx*2-0x46e25850],esp
  4074be:	dec    eax
  4074bf:	ds jae 0x40749a
  4074c2:	shl    cl,1
  4074c4:	sets   BYTE PTR [ebx-0x10]
  4074c8:	ds push cs
  4074ca:	das    
  4074cb:	pop    ecx
  4074cc:	in     eax,dx
  4074cd:	jmp    0xb4c9:0xfb493efc
  4074d4:	or     dl,BYTE PTR [edx]
  4074d6:	jo     0x40752e
  4074d8:	fwait
  4074d9:	xchg   edx,eax
  4074da:	jp     0x4074ab
  4074dc:	div    BYTE PTR [ecx-0x7ba27600]
  4074e2:	(bad)  
  4074e3:	sub    DWORD PTR [edi],ebx
  4074e5:	adc    eax,0x671c6adb
  4074ea:	ret    
  4074eb:	iret   
  4074ec:	xchg   ecx,eax
  4074ed:	push   edx
  4074ee:	es push ds
  4074f0:	pop    ds
  4074f1:	push   DWORD PTR [ebp+0x1184c508]
  4074f7:	mov    bl,0xd7
  4074f9:	mov    bl,0xd0
  4074fb:	test   eax,0xcafd675e
  407500:	lock out dx,eax
  407502:	into   
  407503:	pop    ebp
  407504:	cdq    
  407505:	out    dx,eax
  407506:	push   eax
  407507:	in     al,dx
  407508:	sbb    BYTE PTR [ecx-0x25d1796f],ah
  40750e:	icebp  
  40750f:	xchg   esi,eax
  407510:	adc    BYTE PTR [eax-0x67],bl
  407513:	push   cs
  407514:	add    al,0xbe
  407516:	xchg   ecx,eax
  407517:	sbb    esi,esp
  407519:	in     al,dx
  40751a:	pop    ebx
  40751b:	test   DWORD PTR [ebx+esi*1+0x3d25527c],ebp
  407522:	(bad)  
  407523:	stc    
  407524:	ins    DWORD PTR es:[edi],dx
  407525:	adc    eax,0x81b9575a
  40752a:	sub    DWORD PTR [esi+0x3f],eax
  40752d:	(bad)  
  40752e:	pop    eax
  40752f:	popa   
  407530:	jae    0x40757b
  407532:	pop    eax
  407533:	neg    DWORD PTR [eax+0x6b]
  407536:	add    al,0xf7
  407538:	jl     0x4074be
  40753a:	push   cs
  40753b:	xor    ebx,DWORD PTR [edx]
  40753d:	pop    ecx
  40753e:	call   0x19aa:0xae1debd1
  407545:	inc    edx
  407546:	cmp    DWORD PTR [eax],esi
  407548:	in     al,dx
  407549:	or     dl,BYTE PTR [ecx]
  40754b:	rdpmc  
  40754d:	add    al,0xdd
  40754f:	mov    edi,0x26e6724
  407554:	pop    ecx
  407555:	push   es
  407556:	lahf   
  407557:	xor    al,0x34
  407559:	repz inc esi
  40755b:	imul   edx,edx,0x4b72cdf3
  407561:	retf   
  407562:	pop    es
  407563:	mov    ebx,0x83a69b07
  407568:	adc    BYTE PTR [ecx],dh
  40756a:	jnp    0x4075c1
  40756c:	sub    ah,BYTE PTR [eax-0x7229bda3]
  407572:	aas    
  407573:	jno    0x40754f
  407575:	adc    ecx,DWORD PTR [eax+ebx*4-0x2bf28ea8]
  40757c:	retf   
  40757d:	dec    ecx
  40757e:	in     al,dx
  40757f:	dec    esp
  407580:	in     eax,0xfe
  407582:	mov    edi,0x730608fc
  407587:	xor    DWORD PTR [esi+0x15],eax
  40758a:	les    ecx,FWORD PTR [edx-0x7a63257b]
  407590:	mov    DWORD PTR [eax+0x1b],esp
  407593:	aam    0xb0
  407595:	in     eax,dx
  407596:	outs   dx,BYTE PTR ds:[esi]
  407597:	jle    0x407596
  407599:	pop    edx
  40759a:	fidivr WORD PTR [esi+0x3a10fc1d]
  4075a0:	push   ss
  4075a1:	imul   DWORD PTR [edi+0x16ee3477]
  4075a7:	xor    eax,0x31a89f7d
  4075ac:	jae    0x407553
  4075ae:	adc    al,0xd6
  4075b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b1:	test   DWORD PTR [ebp+0x76],0x2018187a
  4075b8:	ss aam 0xe0
  4075bb:	jp     0x4075f4
  4075bd:	xlat   BYTE PTR ds:[ebx]
  4075be:	call   0x1af2:0x225a4616
  4075c5:	mov    ebx,0xa3651943
  4075ca:	mov    dh,0x3
  4075cc:	popa   
  4075cd:	dec    ebx
  4075ce:	scas   al,BYTE PTR es:[edi]
  4075cf:	dec    ecx
  4075d0:	(bad)  
  4075d1:	fs call 0x81a836e4
  4075d7:	(bad)  
  4075d8:	and    eax,DWORD PTR [esi-0x1bf8931b]
  4075de:	lock mov bh,0xd6
  4075e1:	(bad)  
  4075e2:	jg     0x407618
  4075e4:	test   BYTE PTR [eax-0x3c],0xcb
  4075e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075e9:	pop    ebx
  4075ea:	xor    DWORD PTR ds:0x3dfa05ac,ebp
  4075f0:	cmp    dh,BYTE PTR [edi-0x3c1fa9f6]
  4075f6:	xor    dh,BYTE PTR [ebp+eax*4+0x53fc4de1]
  4075fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075fe:	int    0x2e
  407600:	out    dx,eax
  407601:	sbb    bl,BYTE PTR [esi]
  407603:	sbb    al,0xb
  407605:	lock xor BYTE PTR [ecx+eiz*4-0x7e5e4333],ah
  40760d:	xor    BYTE PTR [esi+0x58],ch
  407610:	lds    eax,FWORD PTR [ebx]
  407612:	dec    edi
  407613:	mov    esp,0x3bea5a9
  407618:	push   edx
  407619:	js     0x407672
  40761b:	cmc    
  40761c:	je     0x40765b
  40761e:	add    edx,DWORD PTR [edx]
  407620:	fwait
  407621:	push   ss
  407622:	inc    edi
  407623:	push   0x6b
  407625:	adc    BYTE PTR [esi+0x25],ah
  407628:	aaa    
  407629:	je     0x4075f1
  40762b:	xchg   esp,eax
  40762c:	mov    esp,0x2c57bb58
  407631:	mov    DWORD PTR [ebp+eax*4+0x396e5ab6],eax
  407638:	push   es
  407639:	push   ecx
  40763a:	mov    esp,0xc316ee6
  40763f:	push   esi
  407640:	(bad)
  407643:	cmp    ch,dh
  407645:	pop    ebx
  407646:	fild   WORD PTR [ebx]
  407648:	(bad)  
  40764b:	xor    al,0x86
  40764d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40764e:	arpl   WORD PTR [esp+ebx*4+0x2a],sp
  407652:	loop   0x407669
  407654:	sbb    DWORD PTR [edi-0x5e],esi
  407657:	adc    ecx,DWORD PTR [ebx+ebp*1]
  40765a:	add    DWORD PTR [ebx-0x1e134972],eax
  407660:	arpl   ax,si
  407662:	fnstenv [ebp-0x39]
  407665:	fwait
  407666:	mov    ebp,0xb702c58b
  40766b:	sbb    esi,DWORD PTR [ecx-0x35]
  40766e:	addr16 mov cl,0x1c
  407671:	xor    DWORD PTR [edi+esi*8+0x4ae49e7d],0xe0624955
  40767c:	xor    eax,0xc103006c
  407681:	sbb    esi,0x4cf5e6b9
  407687:	and    ebp,edi
  407689:	lods   al,BYTE PTR ds:[esi]
  40768a:	cli    
  40768b:	xor    eax,edi
  40768d:	(bad)  
  40768e:	rcl    DWORD PTR [esi],cl
  407690:	pop    esp
  407691:	or     esp,DWORD PTR [ebx]
  407693:	cmp    ebx,DWORD PTR [esi]
  407695:	xchg   ecx,eax
  407696:	aaa    
  407697:	pop    ebp
  407698:	enter  0x5279,0x34
  40769c:	xor    BYTE PTR [ecx-0x3a71c477],dh
  4076a2:	sub    ecx,esp
  4076a4:	add    eax,DWORD PTR [edi+eax*8]
  4076a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076a8:	div    DWORD PTR [ebx]
  4076aa:	add    al,0xfe
  4076ac:	sub    al,0xa4
  4076ae:	out    0xf4,eax
  4076b0:	pop    esi
  4076b1:	cmp    ebp,edi
  4076b3:	imul   esi,DWORD PTR [esi],0xffffff8f
  4076b6:	jbe    0x40771e
  4076b8:	xor    esp,DWORD PTR [edi+0x655e2bb]
  4076be:	mov    edx,0x3e85734c
  4076c3:	xor    ah,BYTE PTR [eax+0x7f0bacce]
  4076c9:	jmp    0xca8370ab
  4076ce:	les    eax,FWORD PTR [edi-0x5f]
  4076d1:	cmp    BYTE PTR [esi],dl
  4076d3:	xlat   BYTE PTR ds:[ebx]
  4076d4:	std    
  4076d5:	test   BYTE PTR [esi],ch
  4076d7:	shr    BYTE PTR [esi-0x28],0xfd
  4076db:	mul    DWORD PTR [ebx-0x44]
  4076de:	or     al,0x56
  4076e0:	sub    ch,0x1f
  4076e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076e4:	mov    edi,0x9db61a52
  4076e9:	mov    ch,0x54
  4076eb:	xchg   ebx,eax
  4076ec:	jecxz  0x407736
  4076ee:	sub    ecx,edi
  4076f0:	xchg   esp,ecx
  4076f2:	push   0xffffff8e
  4076f4:	inc    ebp
  4076f5:	adc    ch,BYTE PTR [eax]
  4076f7:	scas   eax,DWORD PTR es:[edi]
  4076f8:	add    bl,BYTE PTR [edx]
  4076fa:	push   ebp
  4076fb:	sbb    al,BYTE PTR [esi]
  4076fd:	sbb    bh,BYTE PTR [ebp-0x25]
  407700:	enter  0xdbcc,0xd9
  407704:	in     al,dx
  407705:	les    ebp,FWORD PTR [edx-0x2df7c573]
  40770b:	sahf   
  40770c:	clc    
  40770d:	dec    ebp
  40770e:	jo     0x407731
  407710:	popa   
  407711:	xchg   BYTE PTR [ebx-0x463370d1],al
  407717:	jle    0x40769e
  407719:	adc    al,BYTE PTR [edx]
  40771b:	xchg   esp,eax
  40771c:	aaa    
  40771d:	dec    ecx
  40771e:	(bad)  
  40771f:	(bad)  [edi-0xbbdcd26]
  407725:	push   0xeacae66
  40772a:	ret    0x8ce0
  40772d:	mov    dh,0xe1
  40772f:	lahf   
  407730:	cmp    eax,DWORD PTR [ecx]
  407732:	leave  
  407733:	xchg   DWORD PTR [edx],ebx
  407735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407736:	mov    WORD PTR [edx+0x23],gs
  407739:	js     0x40771d
  40773b:	mov    ebp,0x749ffb01
  407740:	les    esp,FWORD PTR [edx-0x7c]
  407743:	aad    0x4b
  407745:	inc    esi
  407746:	or     al,ch
  407748:	imul   DWORD PTR [ebx+0x4192bcb3]
  40774e:	das    
  40774f:	mov    ds:0x56b1f1c6,al
  407754:	addr16 cwde 
  407756:	add    eax,0xa283a031
  40775b:	push   0x39
  40775d:	stos   DWORD PTR es:[edi],eax
  40775e:	enter  0x9759,0x54
  407762:	ins    DWORD PTR es:[edi],dx
  407763:	mov    dh,0x37
  407765:	ds (bad) 
  407767:	loop   0x407715
  407769:	dec    edi
  40776a:	dec    ebx
  40776b:	adc    DWORD PTR [edi],edx
  40776d:	scas   eax,DWORD PTR es:[edi]
  40776e:	ins    DWORD PTR es:[edi],dx
  40776f:	jmp    0x4077b4
  407771:	dec    esp
  407772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407773:	mov    ds:0x54bf4aef,al
  407778:	and    BYTE PTR [edx+0x26],bh
  40777b:	mov    ch,0xec
  40777d:	sub    DWORD PTR [eax-0x1974f1e3],esi
  407783:	adc    eax,0xa072a004
  407788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407789:	dec    esi
  40778a:	jecxz  0x407778
  40778c:	icebp  
  40778d:	jmp    0x407781
  40778f:	dec    ebx
  407790:	jge    0x4077b2
  407792:	pop    ebp
  407793:	(bad)  
  407794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407795:	jg     0x40772a
  407797:	jbe    0x4077c9
  407799:	pop    ecx
  40779a:	cmp    al,0xd4
  40779c:	dec    esi
  40779d:	outs   dx,BYTE PTR ds:[esi]
  40779e:	stc    
  40779f:	xchg   ebp,eax
  4077a0:	dec    ebx
  4077a1:	sahf   
  4077a2:	pop    esi
  4077a3:	sub    esp,DWORD PTR [esi-0x64]
  4077a6:	push   ds
  4077a7:	jbe    0x4077b5
  4077a9:	sub    ebx,DWORD PTR [ebx+ebp*1-0x517bb546]
  4077b0:	retf   0xa188
  4077b3:	sbb    al,dh
  4077b5:	adc    ecx,edi
  4077b7:	ret    0xd57c
  4077ba:	dec    ebx
  4077bb:	hlt    
  4077bc:	mov    bh,0xbf
  4077be:	stc    
  4077bf:	aaa    
  4077c0:	add    bh,ah
  4077c2:	sbb    bh,0x87
  4077c5:	stos   BYTE PTR es:[edi],al
  4077c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077c7:	push   edi
  4077c8:	leave  
  4077c9:	push   ds
  4077ca:	adc    DWORD PTR [eax+0x1921c9],0xfffffff3
  4077d1:	fisttp QWORD PTR [eax-0x24387840]
  4077d7:	xor    al,dl
  4077d9:	mov    dl,0xd3
  4077db:	lds    eax,FWORD PTR [edi+0x64]
  4077de:	and    BYTE PTR [ebp-0x72],cl
  4077e1:	out    dx,eax
  4077e2:	pop    ecx
  4077e3:	(bad)  
  4077e4:	and    al,0x41
  4077e6:	add    al,0x40
  4077e8:	push   ds
  4077e9:	inc    esi
  4077ea:	cmp    eax,DWORD PTR [ebp-0x561395d6]
  4077f0:	fdivr  QWORD PTR [ecx-0x45]
  4077f3:	pop    eax
  4077f4:	cmp    eax,0x57fafb28
  4077f9:	sub    al,0x53
  4077fb:	and    dl,BYTE PTR [edx-0x2d]
  4077fe:	ret    0xa36b
  407801:	sub    eax,0xe41e905b
  407806:	mov    ebp,DWORD PTR [ebx-0x431be52]
  40780c:	pop    ss
  40780d:	add    DWORD PTR [ebx+0x7594d5a0],ecx
  407813:	inc    ecx
  407814:	and    ch,al
  407816:	inc    eax
  407817:	pop    edi
  407818:	sbb    al,ch
  40781a:	pusha  
  40781b:	mov    ds:0x8a37d12f,eax
  407820:	dec    ebp
  407821:	sub    al,0x27
  407823:	iret   
  407824:	(bad)  
  407825:	xlat   BYTE PTR ds:[ebx]
  407826:	test   DWORD PTR [eax],edi
  407828:	jl     0x4077d8
  40782a:	(bad)  
  40782b:	xor    bh,BYTE PTR [ebx]
  40782d:	or     DWORD PTR [esi-0x27e7ac3d],ebp
  407833:	out    0xa3,al
  407835:	ss aad 0x47
  407838:	xor    BYTE PTR [esi-0x580b34c0],dh
  40783e:	je     0x407867
  407840:	faddp  st(7),st
  407842:	mov    esi,0xae996652
  407847:	xor    cl,bh
  407849:	xchg   esp,eax
  40784a:	lahf   
  40784b:	fmul   DWORD PTR [edi+0x5b1d3e6a]
  407851:	jbe    0x40785f
  407853:	and    eax,0x8a54eb60
  407858:	lods   eax,DWORD PTR ds:[esi]
  407859:	jp     0x40780c
  40785b:	fild   WORD PTR [edi+0x46846cca]
  407861:	cwde   
  407862:	aad    0x38
  407864:	sbb    esp,DWORD PTR [edi+0x1a]
  407867:	rcl    DWORD PTR [ebp+0x1fda0bb],1
  40786d:	out    0xa4,eax
  40786f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407870:	dec    ebp
  407871:	sbb    ch,BYTE PTR [ebx-0xeafc02]
  407877:	mov    ebp,0x3179129a
  40787c:	or     al,0xb5
  40787e:	mov    WORD PTR [esi+0x720ce703],?
  407884:	xor    bl,dh
  407886:	dec    ebp
  407887:	cmc    
  407888:	fwait
  407889:	jo     0x407818
  40788b:	mov    al,dl
  40788d:	add    eax,0xc02f285d
  407892:	adc    DWORD PTR [ecx],esi
  407894:	inc    ebp
  407895:	mov    esi,0x64c9cd85
  40789a:	sbb    DWORD PTR [ebx],0x25
  40789d:	iret   
  40789e:	cmp    BYTE PTR [edx],ah
  4078a0:	lea    esp,[ebp+ecx*8-0x6a]
  4078a4:	out    dx,al
  4078a5:	mov    dl,0xc
  4078a7:	jl     0x4078d5
  4078a9:	in     eax,0x7f
  4078ab:	sub    dl,BYTE PTR [ecx+0x257ace26]
  4078b1:	cli    
  4078b2:	sti    
  4078b3:	add    al,BYTE PTR ds:0x1a2cf9e5
  4078b9:	std    
  4078ba:	sub    eax,0x9853f353
  4078bf:	sbb    DWORD PTR [ebp-0x1f1a4053],ecx
  4078c5:	mov    bl,dl
  4078c7:	aam    0x47
  4078c9:	jmp    0x1ef0:0x3dedd0bb
  4078d0:	aas    
  4078d1:	mov    eax,ds:0x27ae7148
  4078d6:	mov    ah,BYTE PTR [eax-0x51]
  4078d9:	pusha  
  4078da:	inc    ebx
  4078db:	mov    ds:0xabe18b48,eax
  4078e0:	inc    edi
  4078e1:	aam    0xfe
  4078e3:	mov    al,ch
  4078e5:	lea    edx,[edi]
  4078e7:	imul   ebp,DWORD PTR [eax],0x724f90d8
  4078ed:	int3   
  4078ee:	mov    BYTE PTR [edx-0x3f],al
  4078f1:	fist   DWORD PTR [edx+0x534b881a]
  4078f7:	arpl   WORD PTR [eax+ecx*2+0x1d],di
  4078fb:	lock or BYTE PTR [edi+0xab7d7ac],bl
  407902:	daa    
  407903:	cmp    eax,0x3e3e20aa
  407908:	call   0x945:0xa1eac74d
  40790f:	xchg   edi,eax
  407910:	sbb    edi,DWORD PTR [ecx+0x2ff600a0]
  407916:	mov    ch,BYTE PTR [edx-0x14]
  407919:	mov    eax,DWORD PTR [ebx-0x6b]
  40791c:	outs   dx,DWORD PTR ds:[esi]
  40791d:	push   ss
  40791e:	js     0x40794d
  407920:	dec    edi
  407921:	mov    bh,0xaf
  407923:	daa    
  407924:	sub    ecx,edx
  407926:	sbb    al,al
  407928:	and    edx,0x61a5af28
  40792e:	std    
  40792f:	shr    BYTE PTR [ecx],1
  407931:	or     BYTE PTR [edi],al
  407933:	(bad)  
  407934:	loope  0x40790a
  407936:	sbb    al,0x9f
  407938:	mov    WORD PTR [ebp-0x18],cs
  40793b:	arpl   di,dx
  40793d:	aas    
  40793e:	inc    ecx
  40793f:	jns    0x4d234a54
  407945:	mov    eax,ds:0xf6b3a876
  40794a:	std    
  40794b:	adc    esp,0xe72795a8
  407951:	mov    al,ds:0x1f318e20
  407956:	jnp    0x4078df
  407958:	jecxz  0x407951
  40795a:	iret   
  40795b:	cwde   
  40795c:	fld    QWORD PTR ds:0x2da2895f
  407962:	adc    ah,bh
  407964:	pop    esp
  407965:	retf   0x959f
  407968:	mov    ecx,0xd8e0243b
  40796d:	imul   esi,DWORD PTR [eax-0x2049f319],0x2f
  407974:	int3   
  407975:	mov    dl,0xbc
  407977:	ins    BYTE PTR es:[edi],dx
  407978:	lds    eax,FWORD PTR [edx]
  40797a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40797b:	xchg   esp,eax
  40797c:	pop    ds
  40797d:	jnp    0x407933
  40797f:	out    dx,al
  407980:	outs   dx,DWORD PTR ds:[esi]
  407981:	jae    0x407933
  407983:	leave  
  407984:	jns    0x407913
  407986:	push   edx
  407987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407988:	fucom  st(5)
  40798a:	add    esp,DWORD PTR [ecx+edi*4+0x1e]
  40798e:	rol    BYTE PTR [ecx],0xc4
  407991:	jp     0x4079bc
  407993:	(bad)  
  407994:	xor    DWORD PTR [ecx-0x2e0f8cdb],edi
  40799a:	das    
  40799b:	retf   
  40799c:	mov    dl,0x45
  40799e:	sub    BYTE PTR [eax+0x24],al
  4079a1:	xchg   ebp,eax
  4079a2:	out    dx,eax
  4079a3:	test   DWORD PTR [edi+0x2a182db9],eax
  4079a9:	mov    dl,0x47
  4079ab:	cli    
  4079ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ad:	je     0x407961
  4079af:	repz jb 0x407940
  4079b2:	mov    al,ds:0xa2d8df81
  4079b7:	mov    al,ds:0x7d38ee5
  4079bc:	lods   al,BYTE PTR ds:[esi]
  4079bd:	dec    DWORD PTR [eax]
  4079bf:	pushf  
  4079c0:	lahf   
  4079c1:	and    esp,DWORD PTR [edx-0x6735dd66]
  4079c7:	mov    ds,WORD PTR [edx+0x4c2666c4]
  4079cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ce:	mov    BYTE PTR [ecx+0x3c],bh
  4079d1:	cs cmc 
  4079d3:	or     bl,BYTE PTR [ecx]
  4079d5:	adc    esp,edi
  4079d7:	cmp    si,bp
  4079da:	imul   ebx,DWORD PTR [eax-0x592aa52b],0x6c178077
  4079e4:	sub    al,BYTE PTR [eax+0x1a29c71b]
  4079ea:	fmul   st,st(5)
  4079ed:	sub    esp,ecx
  4079ef:	mov    ch,0x3d
  4079f1:	jno    0x4079be
  4079f3:	aam    0xf5
  4079f5:	or     bl,BYTE PTR [ecx]
  4079f7:	and    al,0x12
  4079f9:	leave  
  4079fa:	test   eax,0x9653cd88
  4079ff:	call   0xa26c7c36
  407a04:	sbb    dh,BYTE PTR [eax]
  407a06:	rcr    cl,cl
  407a08:	mov    bl,0x7
  407a0a:	mov    edx,0xc34e02ae
  407a0f:	enter  0x9184,0x24
  407a13:	cmp    ebp,edx
  407a15:	call   0xb51446cc
  407a1a:	fucomp st(1)
  407a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a1d:	pop    ebp
  407a1e:	call   0x4a9ba477
  407a23:	mov    cl,al
  407a25:	pop    esp
  407a26:	sahf   
  407a27:	jmp    0x407a38
  407a29:	(bad)  
  407a2a:	mov    BYTE PTR [ecx+0x6edd843c],bh
  407a30:	add    DWORD PTR cs:[edi+0x34bfea4c],0xc442322a
  407a3b:	call   0x96ff:0x3b7710bb
  407a42:	out    dx,al
  407a43:	pop    edx
  407a44:	sbb    DWORD PTR [ecx-0x51],ecx
  407a47:	xor    DWORD PTR [esi],0x16f7575a
  407a4d:	lock shl cl,0x5
  407a51:	push   esi
  407a52:	xor    DWORD PTR [eax],0xffffffea
  407a55:	mov    ecx,0x3117196e
  407a5a:	rcr    ebp,0x77
  407a5d:	rcl    BYTE PTR [edi+0x355a9198],1
  407a63:	xchg   esi,eax
  407a64:	retf   0xc79b
  407a67:	in     al,dx
  407a68:	sbb    ebx,DWORD PTR [edx+0x5be83d30]
  407a6e:	pop    ecx
  407a6f:	and    edi,DWORD PTR [eax+0x734f7780]
  407a75:	mov    ds:0xcf8bf6b8,eax
  407a7a:	dec    edi
  407a7b:	bound  esp,QWORD PTR [eax]
  407a7d:	(bad)  
  407a7f:	mov    ch,0xb4
  407a81:	(bad)  
  407a82:	inc    edx
  407a83:	retf   
  407a84:	retf   0xfa21
  407a87:	mov    esi,0x10125731
  407a8c:	test   al,0x1
  407a8e:	sbb    DWORD PTR [edx+0x3e],0x2d
  407a92:	adc    al,0x57
  407a94:	into   
  407a95:	mov    ?,WORD PTR [eax-0x7a2525da]
  407a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a9c:	mov    edi,0xc6c49629
  407aa1:	mov    DWORD PTR [esi-0x3c],eax
  407aa4:	cli    
  407aa5:	mov    BYTE PTR [ebx-0x6c],ch
  407aa8:	xor    al,dh
  407aaa:	aas    
  407aab:	clc    
  407aac:	ja     0x407ab5
  407aae:	test   eax,0xb09b77d3
  407ab3:	mov    cl,0x6
  407ab5:	pop    eax
  407ab6:	shl    edx,0x6c
  407ab9:	jmp    0x5625:0xf644b726
  407ac0:	cmp    ch,BYTE PTR [esi]
  407ac2:	jp     0x407af2
  407ac4:	mov    ebp,0x9d83d6ed
  407ac9:	sar    ecx,1
  407acb:	fidivr WORD PTR [ebx]
  407acd:	int3   
  407ace:	cmp    DWORD PTR [eax],ebx
  407ad0:	jmp    0x1f67c1dd
  407ad5:	push   ebx
  407ad6:	hlt    
  407ad7:	xlat   BYTE PTR ds:[ebx]
  407ad8:	cld    
  407ad9:	pop    ebx
  407ada:	stos   DWORD PTR es:[edi],eax
  407adb:	push   ecx
  407adc:	pop    ecx
  407add:	fstp   TBYTE PTR [ebp-0x6cab5687]
  407ae3:	and    DWORD PTR [esi+0x4e8fe42c],ebx
  407ae9:	ret    
  407aea:	sub    DWORD PTR [eax-0x2dd8498c],0x667dfbd1
  407af4:	sbb    al,0x4
  407af6:	pop    ebp
  407af7:	dec    edx
  407af8:	xchg   esp,eax
  407af9:	rol    BYTE PTR [ebx-0x7ac5a3eb],cl
  407aff:	xchg   edx,eax
  407b00:	fucomp st(3)
  407b02:	rcr    BYTE PTR [ebx],cl
  407b04:	push   esi
  407b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b06:	loopne 0x407ab4
  407b08:	mov    bh,bl
  407b0a:	mov    ds:0x6912f3d7,eax
  407b0f:	xor    bl,BYTE PTR [ecx]
  407b11:	es loop 0x407b22
  407b14:	stos   BYTE PTR es:[edi],al
  407b15:	lahf   
  407b16:	push   es
  407b17:	pop    ebx
  407b18:	retf   
  407b19:	arpl   WORD PTR [ebp+ebp*4-0x18],di
  407b1d:	inc    edx
  407b1e:	or     edi,edx
  407b20:	or     cl,BYTE PTR [ecx+0x6cca37d2]
  407b26:	outs   dx,BYTE PTR ds:[esi]
  407b28:	push   0x74
  407b2a:	aad    0xd0
  407b2c:	in     al,0xfd
  407b2e:	push   0x24f2135c
  407b33:	sahf   
  407b34:	out    dx,al
  407b35:	leave  
  407b36:	out    dx,al
  407b37:	aaa    
  407b38:	mov    dl,0x49
  407b3a:	sub    ebx,DWORD PTR [edi+ebx*1]
  407b3d:	mov    esp,0xa031b09f
  407b42:	xor    BYTE PTR [edx],dl
  407b44:	int    0x1a
  407b46:	xchg   BYTE PTR [esi+0x57],ch
  407b49:	or     eax,eax
  407b4b:	ret    0xce95
  407b4e:	cmp    DWORD PTR [ebp-0x68dbd3de],0xffffff83
  407b55:	ins    BYTE PTR es:[edi],dx
  407b56:	jg     0x407b08
  407b58:	sub    al,0x3
  407b5a:	out    0x39,eax
  407b5c:	mov    al,0xb7
  407b5e:	and    al,0x55
  407b60:	adc    BYTE PTR [ebp+0x1e6f3b2c],0x78
  407b67:	out    dx,al
  407b68:	imul   DWORD PTR [esi]
  407b6a:	jns    0x407bd9
  407b6c:	stc    
  407b6d:	and    cl,BYTE PTR [eax]
  407b6f:	(bad)  
  407b70:	jmp    0xdd564b8c
  407b75:	outs   dx,DWORD PTR ds:[esi]
  407b76:	sbb    esp,DWORD PTR [ebp-0x80]
  407b79:	cmp    eax,0xccbd5011
  407b7e:	fcomp  st(1)
  407b80:	sbb    eax,0x23fad834
  407b85:	jle    0x407b5e
  407b87:	neg    BYTE PTR [edx-0x7e32628]
  407b8d:	push   es
  407b8e:	fcom   st(3)
  407b90:	sbb    cl,BYTE PTR [ebx-0x566e8051]
  407b96:	addr16 ret 
  407b98:	pop    eax
  407b99:	and    eax,0x6
  407b9c:	xchg   BYTE PTR [edi-0x20ddea42],bh
  407ba2:	stos   BYTE PTR es:[edi],al
  407ba3:	clc    
  407ba4:	add    al,0xc3
  407ba6:	and    cl,BYTE PTR [edx+eiz*8]
  407ba9:	dec    edx
  407baa:	sahf   
  407bab:	addr16 sahf 
  407bad:	je     0x407bd8
  407baf:	cmp    esp,ecx
  407bb1:	dec    ebx
  407bb2:	loope  0x407c13
  407bb4:	shr    BYTE PTR [ecx+0x29],0xab
  407bb8:	and    BYTE PTR [eax+0x35],0xe4
  407bbc:	nop
  407bbd:	or     bl,cl
  407bbf:	pushf  
  407bc0:	cmp    DWORD PTR [ebx],eax
  407bc2:	jno    0x407b50
  407bc4:	jp     0x407b80
  407bc6:	clc    
  407bc7:	repz sti 
  407bc9:	loopne 0x407c3d
  407bcb:	push   es
  407bcc:	aas    
  407bcd:	out    0x91,al
  407bcf:	mov    ah,ch
  407bd1:	xchg   edx,eax
  407bd2:	cld    
  407bd3:	xor    BYTE PTR [ecx-0x588f2ab0],bl
  407bd9:	rol    BYTE PTR [eax-0x3f],0x3a
  407bdd:	mov    ecx,DWORD PTR [esi+0x23]
  407be0:	xor    eax,0xc6eb57fb
  407be5:	xor    DWORD PTR [edi-0x6a0c1c2b],0x28e5b4c2
  407bef:	mov    cl,0x9a
  407bf1:	shl    DWORD PTR [ebp+0x159bb8fc],1
  407bf7:	(bad)  
  407bf8:	call   DWORD PTR [edi-0x21]
  407bfb:	mov    ch,0x10
  407bfd:	push   0x3e
  407bff:	(bad)  
  407c01:	into   
  407c02:	ror    DWORD PTR [ebp+0x5d],cl
  407c05:	sub    ecx,DWORD PTR [ebx]
  407c07:	jecxz  0x407c59
  407c09:	push   esp
  407c0a:	mov    ds:0xb56008f1,al
  407c0f:	pop    edi
  407c10:	call   0x5ae2:0x2e6c613f
  407c17:	cmc    
  407c18:	dec    esp
  407c19:	jge    0x407c90
  407c1b:	inc    edi
  407c1c:	call   0xbe50:0x16d95e78
  407c23:	push   ebp
  407c24:	je     0x407c35
  407c26:	xchg   ebp,eax
  407c27:	mov    cl,0x69
  407c29:	mov    eax,ds:0xcd430765
  407c2e:	ret    
  407c2f:	pop    esi
  407c30:	or     eax,0xfd614842
  407c35:	sub    al,0xad
  407c37:	add    al,0x4f
  407c39:	scas   al,BYTE PTR es:[edi]
  407c3a:	adc    al,0xc2
  407c3c:	and    eax,0xe2043df1
  407c41:	in     eax,dx
  407c42:	inc    ebp
  407c43:	sar    BYTE PTR [edx+0x30],cl
  407c46:	rcl    BYTE PTR [ebx-0x48],cl
  407c49:	pop    esp
  407c4a:	jae    0x407c5b
  407c4c:	pop    esp
  407c4d:	pop    ebp
  407c4e:	popa   
  407c4f:	(bad)  
  407c50:	mov    ch,0x36
  407c52:	int    0x7a
  407c54:	and    DWORD PTR [edi+0xa220c6],edi
  407c5a:	fs aad 0x5
  407c5d:	out    dx,al
  407c5e:	add    eax,0x3805aef1
  407c63:	or     al,0x3f
  407c65:	scas   eax,DWORD PTR es:[edi]
  407c66:	cmp    BYTE PTR [ecx+0x4e56b814],al
  407c6c:	xlat   BYTE PTR ds:[ebx]
  407c6d:	sub    al,0x86
  407c6f:	daa    
  407c70:	arpl   WORD PTR [edx],bp
  407c72:	jecxz  0x407c1c
  407c74:	dec    edi
  407c75:	xchg   edi,eax
  407c76:	xchg   ebp,eax
  407c77:	cli    
  407c78:	mov    al,0x46
  407c7a:	clc    
  407c7b:	mov    bl,0x86
  407c7d:	repnz xor edi,esi
  407c80:	adc    ch,bh
  407c82:	cs xchg esp,eax
  407c84:	daa    
  407c85:	add    BYTE PTR [ecx],0x8c
  407c88:	pop    ebp
  407c89:	popa   
  407c8a:	adc    eax,edx
  407c8c:	iret   
  407c8d:	lock and edx,0x46
  407c91:	lea    esi,[esi+0x1106cd70]
  407c97:	xor    cl,ah
  407c99:	fsubr  DWORD PTR [ebx]
  407c9b:	es xchg ecx,eax
  407c9d:	dec    ebp
  407c9e:	cmc    
  407c9f:	push   0xffffffeb
  407ca1:	sti    
  407ca2:	adc    BYTE PTR gs:[eax+0x499fc6a5],al
  407ca9:	push   esp
  407caa:	lahf   
  407cab:	inc    edi
  407cac:	cmp    al,0xf4
  407cae:	ins    DWORD PTR es:[edi],dx
  407caf:	lds    ecx,FWORD PTR [edx]
  407cb1:	mov    ecx,0x29bebbd7
  407cb6:	not    BYTE PTR [eax-0x2a]
  407cb9:	mov    ah,0xe1
  407cbb:	xor    edx,DWORD PTR [esi+0x464908fe]
  407cc1:	ds repnz pusha 
  407cc4:	sub    edx,0x777394f8
  407cca:	xor    ebp,esp
  407ccc:	mov    dl,BYTE PTR [ebx-0x66]
  407ccf:	jge    0x407ccf
  407cd1:	xchg   esp,eax
  407cd2:	mov    al,BYTE PTR [ebx]
  407cd4:	sbb    dh,bl
  407cd6:	mov    bh,0xbf
  407cd8:	inc    esp
  407cd9:	adc    eax,0x4c2f80ad
  407cde:	cmp    edi,DWORD PTR [edx+eax*8]
  407ce1:	sar    DWORD PTR [edi-0x3a],cl
  407ce4:	cmp    eax,0x4445fad0
  407ce9:	dec    eax
  407cea:	sbb    DWORD PTR [edx+0x25],eax
  407ced:	cmp    ecx,DWORD PTR [ecx+0x77]
  407cf0:	fisub  DWORD PTR [edx-0x3]
  407cf3:	cwde   
  407cf4:	cmp    al,0x98
  407cf6:	rcr    ch,cl
  407cf8:	inc    edx
  407cf9:	lods   eax,DWORD PTR ds:[esi]
  407cfa:	lea    esi,[esp+edx*2]
  407cfd:	dec    eax
  407cfe:	into   
  407cff:	xor    ebp,eax
  407d01:	stos   DWORD PTR es:[edi],eax
  407d02:	test   DWORD PTR [edi-0x69eca0bf],ebx
  407d08:	cwde   
  407d09:	ja     0x407ccf
  407d0b:	arpl   cx,ax
  407d0d:	push   ss
  407d0e:	es lahf 
  407d10:	push   es
  407d11:	or     eax,0xf8e3dd6
  407d16:	in     al,0x3e
  407d18:	dec    esi
  407d19:	inc    edi
  407d1a:	cmp    ah,cl
  407d1c:	push   ebx
  407d1d:	fs inc esi
  407d1f:	jns    0x407cff
  407d21:	fisubr DWORD PTR [edi-0x116f9ef4]
  407d27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d28:	mov    ebx,0x4b75fad9
  407d2d:	inc    eax
  407d2e:	mov    esp,DWORD PTR [ebx+0x35f9e848]
  407d34:	push   cx
  407d36:	mov    bl,0x93
  407d38:	add    BYTE PTR [eax+0x5c106ef6],bh
  407d3e:	shl    DWORD PTR [edx-0x3c],cl
  407d41:	repz mov ch,0xe9
  407d44:	inc    ebx
  407d45:	mov    ds:0xd79a8766,al
  407d4a:	imul   esi,DWORD PTR [edx+0x77],0x7c
  407d4e:	and    DWORD PTR [edx],esp
  407d50:	aam    0x11
  407d52:	ret    0xe8c9
  407d55:	ret    0x85d0
  407d58:	or     bh,dl
  407d5a:	jl     0x407cde
  407d5c:	sahf   
  407d5d:	pop    ds
  407d5e:	(bad)  
  407d5f:	fisubr WORD PTR [ebp+0x1bac6945]
  407d65:	pop    ss
  407d66:	xor    DWORD PTR [esi],esi
  407d68:	mov    edi,0xafd31159
  407d6d:	dec    ebp
  407d6e:	popf   
  407d6f:	fninit 
  407d71:	jne    0x407d4f
  407d73:	lea    ebp,[esi+0x37e1f870]
  407d79:	and    BYTE PTR [esi+edi*8],dl
  407d7c:	int3   
  407d7d:	adc    edx,DWORD PTR [ecx+0xad4ad2]
  407d83:	push   0xdb7d35d7
  407d88:	push   edi
  407d89:	lahf   
  407d8a:	fnstcw WORD PTR [edi+0x2e]
  407d8d:	mov    ebx,0x37f0d808
  407d92:	int3   
  407d93:	adc    ebx,DWORD PTR [edi+0x7d]
  407d96:	cmc    
  407d97:	test   DWORD PTR [ebx-0x41b5396c],edi
  407d9d:	cli    
  407d9e:	daa    
  407d9f:	rcr    DWORD PTR [eax-0x2aa996aa],cl
  407da5:	mov    ecx,0x5460ac59
  407daa:	adc    bh,BYTE PTR [ebx+0x59cc953d]
  407db0:	fst    DWORD PTR ds:0xf46f69e2
  407db6:	sub    al,0x9c
  407db8:	jle    0x407d97
  407dba:	jb     0x407d66
  407dbc:	stos   DWORD PTR es:[edi],eax
  407dbd:	call   0x54b82890
  407dc2:	push   cs
  407dc3:	or     eax,0xbe0f2fed
  407dc8:	cmc    
  407dc9:	arpl   WORD PTR [ecx+eax*2],bx
  407dcc:	js     0x407e3b
  407dce:	jo     0x407e08
  407dd0:	jbe    0x407d52
  407dd2:	fcmovnb st,st(1)
  407dd4:	dec    edi
  407dd5:	gs inc ebx
  407dd7:	nop
  407dd8:	shr    BYTE PTR [ebx+ebx*8],0xe0
  407ddc:	dec    ebx
  407ddd:	std    
  407dde:	mov    esi,0x5aa906c3
  407de3:	cmp    esi,DWORD PTR [ecx+0x585a7006]
  407de9:	and    DWORD PTR [edx],esi
  407deb:	aaa    
  407dec:	adc    edi,DWORD PTR [edx+0x707cb73f]
  407df2:	arpl   WORD PTR [ebx+0x6f723c69],bp
  407df8:	les    ebx,FWORD PTR [ebx+0x6e]
  407dfb:	gs pop eax
  407dfd:	cmp    DWORD PTR [ebp+0x6c5a8704],eax
  407e03:	xor    al,BYTE PTR [edx+0x135393a3]
  407e09:	bound  ebp,QWORD PTR [ebx+0x74a504b6]
  407e0f:	scas   al,BYTE PTR es:[edi]
  407e10:	inc    ebp
  407e11:	cmp    edx,ebx
  407e13:	jo     0x407dce
  407e15:	dec    esp
  407e16:	ins    DWORD PTR es:[edi],dx
  407e17:	cmp    eax,0xf8730e80
  407e1c:	add    al,0xa5
  407e1e:	cmp    ebx,DWORD PTR [ebp-0x2c]
  407e21:	or     DWORD PTR [ebp-0x58213a34],ecx
  407e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e28:	mov    edx,0xd20ac76c
  407e2d:	cmp    esp,DWORD PTR [ebx+0x48]
  407e30:	in     eax,dx
  407e31:	mov    dl,0x6e
  407e33:	or     BYTE PTR gs:[eax-0xe0f5214],ch
  407e3a:	xor    eax,ecx
  407e3c:	jne    0x407e2c
  407e3e:	and    al,0x86
  407e40:	mov    ch,dh
  407e42:	jae    0x407e84
  407e44:	xchg   DWORD PTR [eax],edi
  407e46:	fld    DWORD PTR [edx]
  407e48:	jno    0x407e7b
  407e4a:	in     al,dx
  407e4b:	iret   
  407e4c:	into   
  407e4d:	sti    
  407e4e:	mov    bl,0xc3
  407e50:	sbb    eax,0x3a7a7c42
  407e55:	xchg   DWORD PTR ds:0x52ed629a,edi
  407e5b:	nop
  407e5c:	into   
  407e5d:	xchg   ebx,eax
  407e5e:	mov    ebp,0x4bc35ee6
  407e63:	loope  0x407e6c
  407e65:	cmp    eax,0x4b81f016
  407e6a:	pop    edx
  407e6b:	icebp  
  407e6c:	cs stos BYTE PTR es:[edi],al
  407e6e:	jp     0x407e75
  407e70:	mov    edi,0x790f692f
  407e75:	(bad)  
  407e76:	(bad)  
  407e77:	sub    eax,0x90d15ae9
  407e7c:	dec    ecx
  407e7d:	test   BYTE PTR [ecx],bl
  407e7f:	test   ah,bl
  407e81:	pop    ds
  407e82:	nop
  407e83:	scas   al,BYTE PTR es:[edi]
  407e84:	or     eax,ebx
  407e86:	mov    edx,DWORD PTR [ebx+0x1d6bfac7]
  407e8c:	hlt    
  407e8d:	fcom   DWORD PTR [edx-0x4e66a04d]
  407e93:	xchg   edi,eax
  407e94:	inc    esi
  407e95:	mov    al,0xa5
  407e97:	pop    ss
  407e98:	fiadd  DWORD PTR [edx+esi*1-0x5e]
  407e9c:	retf   0xb6fb
  407e9f:	pushf  
  407ea0:	shr    DWORD PTR [ebx-0x72],cl
  407ea3:	mov    bl,0x9b
  407ea5:	push   esi
  407ea6:	fs xor al,0xe
  407ea9:	cdq    
  407eaa:	scas   eax,DWORD PTR es:[edi]
  407eab:	push   ebx
  407eac:	xchg   edi,eax
  407ead:	iret   
  407eae:	lods   ax,WORD PTR ds:[esi]
  407eb0:	push   esp
  407eb1:	jo     0x407f07
  407eb3:	push   0x4e
  407eb5:	xchg   ebp,eax
  407eb6:	sbb    BYTE PTR [edi+0x466bc048],0x7c
  407ebd:	div    DWORD PTR [eax]
  407ebf:	mov    ebp,0x1aacb081
  407ec4:	test   edi,ebp
  407ec6:	push   es
  407ec7:	clc    
  407ec8:	into   
  407ec9:	repz les esi,FWORD PTR [ecx+0x5fd71c81]
  407ed0:	aas    
  407ed1:	js     0x407f2e
  407ed3:	sbb    al,0xeb
  407ed5:	icebp  
  407ed6:	mov    BYTE PTR [eax],cl
  407ed8:	xchg   ebp,eax
  407ed9:	jnp    0x407f59
  407edb:	imul   edx,DWORD PTR [ebx+0x44aec658],0x3c61b4ef
  407ee5:	or     dh,BYTE PTR [edi-0x3cdc298]
  407eeb:	clc    
  407eec:	rcr    edx,cl
  407eee:	inc    ecx
  407eef:	daa    
  407ef0:	ss popa 
  407ef2:	imul   esp,DWORD PTR [ecx],0x1f
  407ef5:	aam    0xe7
  407ef7:	adc    ax,0x4e7a
  407efb:	inc    ebp
  407efc:	in     eax,0x31
  407efe:	and    BYTE PTR [esi+0x26],bh
  407f01:	push   ecx
  407f02:	sbb    BYTE PTR [edi+0x21],dh
  407f05:	sbb    ah,dh
  407f07:	imul   esp,DWORD PTR [esi-0x7ad6d222],0x4b
  407f0e:	stos   DWORD PTR es:[edi],eax
  407f0f:	cmp    ebp,edx
  407f11:	cmc    
  407f12:	jo     0x407f5f
  407f14:	xor    DWORD PTR [eax-0x13b10439],esi
  407f1a:	mov    ebx,es
  407f1c:	je     0x407f1e
  407f1e:	adc    BYTE PTR [ecx+edx*4],dh
  407f21:	inc    edi
  407f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f23:	jl     0x407eb0
  407f25:	fsubr  QWORD PTR [edi+0x77]
  407f28:	sbb    ah,BYTE PTR [eax-0x5c3d0d86]
  407f2e:	pushf  
  407f2f:	retf   0x2cf4
  407f32:	fcomp  st(2)
  407f34:	and    eax,0xb887b64e
  407f39:	jp     0x407f55
  407f3b:	mov    edx,0xdc7c4362
  407f40:	ja     0x407f9e
  407f42:	stos   DWORD PTR es:[edi],eax
  407f43:	in     eax,dx
  407f44:	sub    eax,0xb88cb55a
  407f49:	mov    bh,0xc
  407f4b:	lods   eax,DWORD PTR ds:[esi]
  407f4c:	xchg   ebx,eax
  407f4d:	xchg   edx,eax
  407f4e:	in     al,0xe7
  407f50:	add    BYTE PTR [edx],al
  407f52:	mov    dh,0xbf
  407f54:	mov    BYTE PTR [eax+0x5f],ch
  407f57:	sahf   
  407f58:	sbb    al,0x38
  407f5a:	or     eax,0x55257e69
  407f5f:	jnp    0x407ee1
  407f61:	push   es
  407f62:	xchg   BYTE PTR [ecx],dl
  407f64:	xchg   ebx,eax
  407f65:	loope  0x407f8d
  407f67:	mov    ecx,0x893a437a
  407f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f6d:	inc    esi
  407f6e:	fwait
  407f6f:	push   esi
  407f70:	add    edi,DWORD PTR [ebx]
  407f72:	mov    eax,0x1d550923
  407f77:	xchg   BYTE PTR [edx+0x5dbef9e9],dh
  407f7d:	jmp    0x58fa674b
  407f82:	imul   ebx,DWORD PTR [ebx+ecx*4-0x49],0xffffff88
  407f87:	jnp    0x407f27
  407f89:	das    
  407f8a:	mov    al,0xd2
  407f8c:	not    dh
  407f8e:	test   al,0x95
  407f90:	pop    edi
  407f91:	mov    ebp,0x43130e0c
  407f96:	jp     0x407f33
  407f98:	mov    DWORD PTR [ecx-0x5a60ac57],eax
  407f9e:	and    eax,0x59ab5830
  407fa3:	into   
  407fa4:	popf   
  407fa5:	aam    0xcd
  407fa7:	mov    ch,0xa5
  407fa9:	cwde   
  407faa:	jp     0x407fcc
  407fac:	sbb    eax,0x1b5ef60b
  407fb1:	pop    ebp
  407fb2:	xor    BYTE PTR [edx+0x413ce08e],al
  407fb8:	push   ecx
  407fb9:	inc    edi
  407fba:	adc    edi,DWORD PTR [ebx+0xf3c4fb]
  407fc0:	iret   
  407fc1:	shl    BYTE PTR [edi-0xf],0xf3
  407fc5:	jp     0x40802b
  407fc7:	dec    ebp
  407fc8:	mov    ?,WORD PTR [ecx-0x20]
  407fcb:	mov    bh,0xed
  407fcd:	or     ecx,DWORD PTR [ebx-0x4ea3fcaf]
  407fd3:	adc    BYTE PTR [eax],ah
  407fd5:	scas   al,BYTE PTR es:[edi]
  407fd6:	gs out dx,al
  407fd8:	jb     0x408010
  407fda:	cs add ebp,ebp
  407fdd:	jle    0x407fb8
  407fdf:	mov    eax,0xb1c66470
  407fe4:	outs   dx,BYTE PTR ds:[esi]
  407fe5:	push   edi
  407fe6:	call   0x6ce2:0x5d40d6ef
  407fed:	hlt    
  407fee:	dec    ecx
  407fef:	fsub   QWORD PTR [edi+0x23af00de]
  407ff5:	add    ebx,DWORD PTR [ecx+0x17]
  407ff8:	adc    eax,0x5ed2b282
  407ffd:	xchg   BYTE PTR [eax],dl
  407fff:	jnp    0x407fee
  408001:	es out dx,al
  408003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408004:	inc    esp
  408005:	push   ebx
  408006:	callw  0x613d
  40800a:	rcl    BYTE PTR [ecx-0x3ce89d71],0x2e
  408011:	int    0x75
  408013:	mov    cl,ah
  408015:	jne    0x408076
  408017:	iret   
  408018:	sahf   
  408019:	pop    ebx
  40801a:	test   al,0xb0
  40801c:	mov    al,ds:0x2a83c180
  408021:	mov    bh,BYTE PTR [edx+0x43c7828b]
  408027:	xor    eax,DWORD PTR [esp+ebp*1-0x418109ac]
  40802e:	sbb    al,0x79
  408030:	add    edi,ebx
  408032:	adc    edx,ebx
  408034:	adc    dh,BYTE PTR [ebp-0x78]
  408037:	mov    dl,BYTE PTR [bp+0x2469]
  40803c:	int3   
  40803d:	fwait
  40803e:	pop    eax
  40803f:	push   edx
  408040:	dec    edx
  408041:	mov    esp,0xf1ab2c33
  408046:	sub    dh,dl
  408048:	add    ebx,edx
  40804a:	js     0x40807e
  40804c:	sub    DWORD PTR [esi+0x33],ecx
  40804f:	or     ebp,DWORD PTR [edx+0x376e70d0]
  408055:	cmc    
  408056:	mov    BYTE PTR [ebx],ch
  408058:	cmp    BYTE PTR [ebp-0x7c210f30],ah
  40805e:	scas   eax,DWORD PTR es:[edi]
  40805f:	mov    eax,ds:0x900c9b6a
  408064:	jg     0x408042
  408066:	fsub   DWORD PTR [ecx+0x52]
  408069:	cmp    BYTE PTR [ebx+0x73],al
  40806c:	add    eax,DWORD PTR [ecx-0x70281069]
  408072:	dec    edx
  408073:	sbb    bh,0x4f
  408076:	jge    0x408002
  408078:	icebp  
  408079:	iret   
  40807a:	sar    BYTE PTR [ecx-0x7834c3ff],cl
  408080:	int3   
  408081:	fdivrp st(1),st
  408083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408084:	fucom  st(3)
  408086:	retf   
  408087:	pop    ebx
  408088:	sub    al,BYTE PTR [ebp-0x74]
  40808b:	push   ss
  40808c:	call   0xc059b5ad
  408091:	arpl   WORD PTR [ebx],bx
  408093:	out    dx,eax
  408094:	(bad)  
  408095:	lods   al,BYTE PTR ds:[esi]
  408096:	hlt    
  408097:	ss push eax
  408099:	inc    esp
  40809a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40809b:	add    ah,BYTE PTR ds:0x1ea5382d
  4080a1:	mov    cl,0xcd
  4080a3:	gs pushf 
  4080a5:	or     eax,0x8a7eea54
  4080aa:	jae    0x408099
  4080ac:	or     DWORD PTR [eax-0x7b8378c5],0xe4ef03e
  4080b6:	push   0xffffffa4
  4080b8:	jge    0x4080d3
  4080ba:	sub    BYTE PTR [esi],bl
  4080bc:	(bad)  
  4080bd:	mov    ds:0x21e7a50f,eax
  4080c2:	add    bh,dl
  4080c4:	repnz cmp edi,DWORD PTR [esi+0x6ed5fa75]
  4080cb:	sbb    dh,BYTE PTR [ebp+0x6b749e14]
  4080d1:	loop   0x4080a0
  4080d3:	xchg   ecx,eax
  4080d4:	in     eax,0x40
  4080d6:	and    eax,0xb4691acb
  4080db:	(bad)  
  4080dc:	ins    BYTE PTR es:[edi],dx
  4080dd:	sub    BYTE PTR [ecx-0x3624d3e0],dl
  4080e3:	inc    ebx
  4080e4:	adc    DWORD PTR [eax],ecx
  4080e6:	mov    dl,0x64
  4080e8:	pop    eax
  4080e9:	and    al,0x17
  4080eb:	leave  
  4080ec:	jecxz  0x4080b8
  4080ee:	or     eax,0x9dfed350
  4080f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f4:	pop    edx
  4080f5:	in     eax,dx
  4080f6:	add    BYTE PTR [eax+0x2f],dh
  4080f9:	cmp    BYTE PTR [ebx],0xec
  4080fc:	nop
  4080fd:	jge    0x40815a
  4080ff:	sbb    eax,0xeee537ca
  408104:	sub    eax,DWORD PTR [edi-0x53b2a0fe]
  40810a:	mov    ch,0xc
  40810c:	mov    eax,ds:0x9cc5d26a
  408111:	sbb    DWORD PTR [ebp+0x54],ecx
  408114:	icebp  
  408115:	dec    edx
  408116:	jns    0x4080c2
  408118:	dec    edx
  408119:	bound  edx,QWORD PTR [eax-0x31e2c791]
  40811f:	into   
  408120:	and    BYTE PTR [ebp+0x76],0x75
  408124:	pop    ecx
  408125:	aas    
  408126:	sahf   
  408127:	mov    ebp,0x9685f3f
  40812c:	push   ebp
  40812d:	or     DWORD PTR [edi-0x42c5b854],ebx
  408133:	jecxz  0x408173
  408135:	inc    ecx
  408136:	mov    ebp,0x2aa9c098
  40813b:	sbb    DWORD PTR [esi+eiz*4-0x16],eax
  40813f:	imul   esi
  408141:	adc    ecx,DWORD PTR [edi+0xd00be0e]
  408147:	cmp    DWORD PTR [esi-0x53dfc8e4],edx
  40814d:	sub    BYTE PTR [ebp-0x775f7155],al
  408153:	(bad)  
  408155:	push   esp
  408156:	das    
  408157:	mov    dl,0x5d
  408159:	and    eax,0xd0d691ee
  40815e:	push   ds
  40815f:	mov    BYTE PTR ds:0x9bb43c7f,dl
  408165:	lods   eax,DWORD PTR fs:[esi]
  408167:	sti    
  408168:	or     al,dh
  40816a:	mov    ds:0x29e65ca2,al
  40816f:	mov    al,ds:0x9dd0fa54
  408174:	out    0x64,eax
  408176:	loope  0x4081e3
  408178:	sahf   
  408179:	enter  0x46c2,0x4b
  40817d:	sahf   
  40817e:	and    eax,0x4cc596fc
  408183:	inc    ebp
  408184:	sahf   
  408185:	ror    DWORD PTR [ebp-0x2b],cl
  408188:	inc    ebx
  408189:	ds inc ecx
  40818b:	nop
  40818c:	jbe    0x408199
  40818e:	call   0x903cb8d4
  408193:	mov    cl,0x88
  408195:	div    bh
  408197:	cld    
  408198:	sbb    BYTE PTR [ecx+ecx*2],dl
  40819b:	mov    cl,0x6d
  40819d:	dec    esi
  40819e:	mov    ds:0xbbfe32e5,eax
  4081a3:	jbe    0x40818b
  4081a5:	add    dl,bh
  4081a7:	or     DWORD PTR [ecx-0x2f6b02f2],ebx
  4081ad:	iret   
  4081ae:	mov    bl,0x3a
  4081b0:	pop    es
  4081b1:	add    ebp,DWORD PTR [esi]
  4081b3:	jno    0x408174
  4081b5:	sub    al,0xbe
  4081b7:	and    eax,0xe9ae16a0
  4081bc:	sbb    ch,ch
  4081be:	mov    dl,0x7a
  4081c0:	mov    cl,0x90
  4081c2:	ja     0x40819e
  4081c4:	mov    BYTE PTR [esi+0x5a21ee05],dh
  4081ca:	mov    dh,BYTE PTR [eax-0x30bba5de]
  4081d0:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4081d2:	inc    esp
  4081d3:	lods   al,BYTE PTR ds:[esi]
  4081d4:	mov    DWORD PTR [eax-0x5f],eax
  4081d7:	fild   DWORD PTR [ebx]
  4081d9:	xlat   BYTE PTR ds:[ebx]
  4081da:	pop    ds
  4081db:	cli    
  4081dc:	sahf   
  4081dd:	sbb    al,0x39
  4081df:	jns    0x408243
  4081e1:	cmp    DWORD PTR [ebp-0x8],0x5912744
  4081e8:	add    BYTE PTR [edx],0xc5
  4081eb:	pop    esp
  4081ec:	cmp    ch,BYTE PTR [edx+0x76]
  4081ef:	ins    DWORD PTR es:[edi],dx
  4081f0:	leave  
  4081f1:	inc    ecx
  4081f2:	stc    
  4081f3:	mov    esi,0x17193fc5
  4081f8:	pop    edi
  4081f9:	test   al,0x99
  4081fb:	cmp    DWORD PTR [eax],0xe98dbfbe
  408201:	stos   DWORD PTR es:[edi],eax
  408202:	dec    edi
  408203:	daa    
  408204:	xor    BYTE PTR [ecx],al
  408206:	mov    bl,0xc4
  408208:	jmp    DWORD PTR [esi+0x23cddd56]
  40820e:	into   
  40820f:	mov    ebx,DWORD PTR [edx-0x3e]
  408212:	fidivr DWORD PTR [eax-0x47f03e1e]
  408218:	xchg   bl,ch
  40821a:	add    ecx,eax
  40821c:	pop    ebx
  40821d:	xchg   ecx,eax
  40821e:	xchg   ebp,eax
  40821f:	pop    eax
  408220:	(bad)  [eax-0x2369c80b]
  408226:	add    eax,0x5f9c6cbf
  40822b:	cmp    BYTE PTR ds:0x323a59d2,al
  408231:	cmp    BYTE PTR [edx-0x428de1a2],dh
  408237:	cmp    eax,esp
  408239:	adc    DWORD PTR [ebx-0x925ad39],edi
  40823f:	jl     0x4082b0
  408241:	xor    DWORD PTR [eax+0x3870ccd7],0xbee85108
  40824b:	dec    ecx
  40824c:	xchg   edi,eax
  40824d:	xchg   ebx,eax
  40824e:	loop   0x4081e0
  408250:	cmp    ebx,edi
  408252:	frstor [edx+eiz*1]
  408255:	jb     0x408263
  408257:	pop    edx
  408258:	xlat   BYTE PTR ds:[ebx]
  408259:	cwde   
  40825a:	push   ss
  40825b:	call   DWORD PTR [edx+eiz*2]
  40825e:	loop   0x4081fd
  408260:	xor    eax,0x8ab89cc8
  408265:	jle    0x4082ce
  408267:	xchg   ebp,eax
  408268:	xchg   ebx,eax
  408269:	dec    eax
  40826a:	inc    ebx
  40826b:	test   al,0x3e
  40826d:	mov    al,0x76
  40826f:	and    BYTE PTR [edx],bl
  408271:	int    0x9
  408273:	rcr    DWORD PTR ds:0xddbb56bc,cl
  408279:	ins    DWORD PTR es:[edi],dx
  40827a:	dec    ecx
  40827b:	retf   
  40827c:	pop    ebp
  40827d:	dec    ebp
  40827e:	push   es
  40827f:	adc    BYTE PTR [edx-0x49],dl
  408282:	sub    ecx,esi
  408284:	xor    eax,DWORD PTR [ebp+ecx*4-0x54b50bd1]
  40828b:	and    al,BYTE PTR ds:0x2fd697fd
  408291:	push   eax
  408292:	rol    cl,1
  408294:	sub    BYTE PTR [eax+0x2f68ed82],cl
  40829a:	mov    edx,ebp
  40829c:	test   eax,0x7cdcff82
  4082a1:	les    ebp,FWORD PTR [esp+edi*2]
  4082a4:	cmp    DWORD PTR ds:0xfcf04081,0x49
  4082ab:	jge    0x408263
  4082ad:	sub    al,0xd8
  4082af:	in     al,dx
  4082b0:	adc    al,0xb3
  4082b2:	mov    BYTE PTR [edx+0x2d1f3a7f],dl
  4082b8:	pop    ss
  4082b9:	and    esp,DWORD PTR [ebp-0x5814183c]
  4082bf:	dec    esp
  4082c0:	ret    
  4082c1:	div    DWORD PTR [esi+0x48]
  4082c4:	xchg   edx,eax
  4082c5:	sub    BYTE PTR [ecx-0x15],dh
  4082c8:	inc    edx
  4082c9:	test   eax,0xc9808101
  4082ce:	fisttp DWORD PTR [eax+0x5b1194d0]
  4082d4:	imul   BYTE PTR ds:[ecx+0x7da8d37f]
  4082db:	mov    edi,DWORD PTR [ebx]
  4082dd:	adc    al,0x3a
  4082df:	lahf   
  4082e0:	ins    BYTE PTR es:[edi],dx
  4082e1:	add    DWORD PTR [ebx-0x4d],esp
  4082e4:	push   0xffffff80
  4082e6:	pop    ebx
  4082e7:	and    BYTE PTR [eax+0x49],al
  4082ea:	sub    esi,DWORD PTR [edx-0x4c9214da]
  4082f0:	adc    eax,0xbfb0790d
  4082f5:	gs pop ss
  4082f7:	add    ecx,ecx
  4082f9:	inc    ecx
  4082fa:	adc    ah,bh
  4082fc:	push   ds
  4082fd:	cmp    al,0xa6
  4082ff:	mov    BYTE PTR [esi+0x66396b43],ah
  408305:	les    ebx,FWORD PTR [esi]
  408307:	in     al,dx
  408308:	sbb    al,0xa6
  40830a:	or     BYTE PTR [ebp-0x44125dd5],bh
  408310:	mov    eax,ds:0x4ceb0eee
  408315:	ror    edi,0x50
  408318:	push   esp
  408319:	lock fwait
  40831b:	push   ecx
  40831c:	cmp    BYTE PTR [eax-0x53],ch
  40831f:	sub    eax,0xc8e9fa71
  408324:	mov    eax,0x2b1907c7
  408329:	stos   DWORD PTR es:[edi],eax
  40832a:	cld    
  40832b:	cld    
  40832c:	pop    esi
  40832d:	pushf  
  40832e:	jo     0x408320
  408330:	sti    
  408331:	mov    esi,DWORD PTR [ecx+edi*4+0x24]
  408335:	push   eax
  408336:	in     eax,0x16
  408338:	xor    cl,dl
  40833a:	outs   dx,BYTE PTR ds:[esi]
  40833b:	mov    ecx,0x93c9963a
  408340:	enter  0xe682,0x24
  408344:	sub    esi,DWORD PTR ds:0x231c36ad
  40834a:	pop    esi
  40834b:	into   
  40834c:	shr    ah,cl
  40834e:	rol    BYTE PTR ss:[esi+0x57a14afd],cl
  408355:	xchg   esp,eax
  408356:	rcl    BYTE PTR ds:[ecx],1
  408359:	xchg   edx,eax
  40835a:	mov    ah,0x44
  40835c:	add    DWORD PTR [edi],esi
  40835e:	xchg   ecx,eax
  40835f:	test   al,0xfe
  408361:	leave  
  408362:	mov    ebp,0xf565924b
  408367:	add    al,0x85
  408369:	add    bl,ah
  40836b:	or     BYTE PTR [edi+0x2b],bl
  40836e:	cs push ebp
  408370:	(bad)  [ebp+0x3c]
  408373:	repnz out 0x34,eax
  408376:	imul   ecx,DWORD PTR [esi+0x1dad0073],0xffffff8b
  40837d:	fstp   DWORD PTR [edx]
  40837f:	shl    BYTE PTR [ecx],0xd5
  408382:	mov    bh,0x5c
  408384:	clc    
  408385:	xchg   BYTE PTR [eax+0x7f],ch
  408388:	add    ah,dl
  40838a:	mov    ebx,0xef490785
  40838f:	les    ecx,FWORD PTR [ebx+ecx*2+0x229929d8]
  408396:	add    DWORD PTR [edx+0x5e],0x24
  40839a:	call   0xbb355246
  40839f:	pop    ecx
  4083a0:	cmc    
  4083a1:	sbb    esp,DWORD PTR [ecx+0x6f]
  4083a4:	and    edi,ebx
  4083a6:	cmp    DWORD PTR [edi+edi*8+0x7d487191],ebp
  4083ad:	aad    0x2f
  4083af:	jo     0x408374
  4083b1:	repnz xor eax,edx
  4083b4:	xchg   ebx,eax
  4083b5:	in     eax,0x65
  4083b7:	inc    edi
  4083b8:	aam    0xed
  4083ba:	and    ch,BYTE PTR [esp+eax*2+0x4b]
  4083be:	push   DWORD PTR [esi+0x21]
  4083c1:	test   eax,0x77f50a6d
  4083c6:	lock jl 0x408432
  4083c9:	popa   
  4083ca:	fwait
  4083cb:	imul   esi,DWORD PTR [ecx],0xffffffb2
  4083ce:	adc    ebx,ecx
  4083d0:	cs cwde 
  4083d2:	pop    ecx
  4083d3:	mov    esi,0x34613bbf
  4083d8:	and    ebx,ebp
  4083da:	adc    BYTE PTR [ebx+ebx*2+0x72],al
  4083de:	xchg   DWORD PTR [edx+0x5d0e2327],eax
  4083e4:	mov    al,0xb6
  4083e6:	jge    0x4083e0
  4083e8:	mov    bh,ch
  4083ea:	and    eax,0x6bd82c66
  4083ef:	div    DWORD PTR [esi]
  4083f1:	sub    ebx,DWORD PTR [esi+0x23]
  4083f4:	repnz push esi
  4083f6:	or     esi,DWORD PTR [edx]
  4083f8:	imul   BYTE PTR [eax+0x72388181]
  4083fe:	in     eax,dx
  4083ff:	es jge 0x40839d
  408402:	clc    
  408403:	cmp    BYTE PTR [esi-0x71],dh
  408406:	rcl    BYTE PTR [ebx+ebp*8-0xd3e287e],0xb5
  40840e:	xor    al,0x7b
  408410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408411:	jecxz  0x40847b
  408413:	adc    bh,BYTE PTR [esi+ebx*2]
  408416:	fisub  DWORD PTR ds:0x45a402b2
  40841c:	add    dl,BYTE PTR [ebx]
  40841e:	cld    
  40841f:	jne    0x408452
  408421:	pop    esi
  408422:	je     0x40843a
  408424:	out    dx,al
  408425:	dec    ebp
  408426:	pop    edx
  408427:	pop    esi
  408428:	jns    0x4083c1
  40842a:	(bad)  
  40842b:	fsub   QWORD PTR [ecx+edx*2]
  40842e:	or     al,0x44
  408430:	add    BYTE PTR [eax+ecx*1-0x59421af5],0x7b
  408438:	(bad)  
  408439:	rcr    DWORD PTR [edi+0x44],cl
  40843c:	lods   eax,DWORD PTR ds:[esi]
  40843d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40843e:	inc    edx
  40843f:	xchg   esi,eax
  408440:	test   al,0xa7
  408442:	cmp    BYTE PTR [edi+0x1c],ch
  408445:	fisub  DWORD PTR [ebx-0x177f71c6]
  40844b:	stos   DWORD PTR es:[edi],eax
  40844c:	repnz out 0x6,al
  40844f:	mov    ds:0x1c30d954,al
  408454:	pop    ss
  408455:	xor    BYTE PTR [ecx+0x2ca86068],0xcc
  40845c:	mov    ebp,0xa0fa557c
  408461:	loop   0x40842a
  408463:	push   ebp
  408464:	rcr    dh,0x69
  408467:	sub    eax,0xa9d43cda
  40846c:	lods   eax,DWORD PTR ds:[esi]
  40846d:	and    al,0xa8
  40846f:	(bad)  
  408470:	stos   DWORD PTR es:[edi],eax
  408471:	sub    DWORD PTR [ecx+eiz*8],ebx
  408474:	xor    eax,0xd9ccbc42
  408479:	jno    0x40844b
  40847b:	push   0xa1e4f00c
  408480:	push   ss
  408481:	add    bh,BYTE PTR [edx]
  408483:	mov    al,0x84
  408485:	call   0xc7914830
  40848a:	pop    ebx
  40848b:	(bad)  
  40848c:	jmp    0x7f89c6b0
  408491:	cmp    ch,BYTE PTR [edi+0x4b]
  408494:	sub    BYTE PTR [ebx+0x7e50a129],0xcc
  40849b:	cmp    cl,al
  40849d:	or     BYTE PTR [edi+0x1097c1dd],bh
  4084a3:	sbb    bl,ch
  4084a5:	push   esi
  4084a6:	adc    DWORD PTR [ebx-0x1a14f555],edx
  4084ac:	pop    ebp
  4084ad:	jae    0x40843e
  4084af:	and    dl,bl
  4084b1:	pushf  
  4084b2:	sub    al,BYTE PTR [ecx-0x2dec099d]
  4084b8:	clc    
  4084b9:	mov    bl,0x4f
  4084bb:	cmc    
  4084bc:	neg    DWORD PTR [ebp-0x483c220e]
  4084c2:	lgs    edi,FWORD PTR [eax+ebx*1+0x17]
  4084c7:	mov    bh,0xcb
  4084c9:	sbb    BYTE PTR [esi+0x53],al
  4084cc:	adc    DWORD PTR [ebx-0x29cc1bab],ecx
  4084d2:	add    edx,edi
  4084d4:	or     eax,edx
  4084d6:	mov    edx,DWORD PTR [ebp-0x20]
  4084d9:	xor    edx,esi
  4084db:	add    eax,edx
  4084dd:	mov    edx,DWORD PTR [ebp-0x20]
  4084e0:	xor    edx,esi
  4084e2:	add    eax,edx
  4084e4:	mov    edx,DWORD PTR [ebp-0x10]
  4084e7:	lea    eax,[eax+edx*1+0x64e5de]
  4084ee:	jmp    0x40a872
  4084f3:	jmp    0x40a863
  4084f8:	mov    ecx,0x7b608113
  4084fd:	in     al,0x9f
  4084ff:	jnp    0x40851c
  408501:	mov    bl,0xe4
  408503:	pop    ebx
  408504:	out    dx,eax
  408505:	mov    edx,0x118128ce
  40850a:	jp     0x408586
  40850c:	das    
  40850d:	pop    edi
  40850e:	jp     0x40858a
  408510:	ja     0x40858f
  408512:	(bad)  
  408513:	call   0x18af4b79
  408518:	or     cl,BYTE PTR [ebp+0x6c]
  40851b:	mov    edi,0x88c9f492
  408520:	adc    eax,0x4ec8e062
  408525:	xchg   ebx,eax
  408526:	std    
  408527:	aad    0x88
  408529:	mov    dh,0x38
  40852b:	xor    BYTE PTR [ebx],bh
  40852d:	aaa    
  40852e:	ret    0xd8ca
  408531:	jecxz  0x4084e7
  408533:	and    DWORD PTR [edx+0x44b6e7],ebx
  408539:	div    ch
  40853b:	xchg   esp,eax
  40853c:	mov    esp,0xaad766ee
  408541:	push   ds
  408542:	pop    esp
  408543:	loopne 0x40851d
  408545:	call   0x7daff143
  40854a:	scas   al,BYTE PTR es:[edi]
  40854b:	popf   
  40854c:	pusha  
  40854d:	adc    ax,0xf2db
  408551:	hlt    
  408552:	pop    edi
  408553:	jmp    0x408583
  408555:	cmp    eax,0xdb502c28
  40855a:	pop    ebp
  40855b:	or     ebp,ebx
  40855d:	jo     0x408571
  40855f:	sbb    ebx,DWORD PTR [ecx-0xa1fc2cb]
  408565:	aaa    
  408566:	add    esi,DWORD PTR [ebx+0x181ae133]
  40856c:	shl    DWORD PTR [ebp+0x3c],cl
  40856f:	or     DWORD PTR [esi+edi*4+0x77],esp
  408573:	in     al,dx
  408574:	jp     0x408506
  408576:	push   ebp
  408577:	sbb    edi,edi
  408579:	ficomp DWORD PTR [eax+0x26]
  40857c:	adc    al,0xf7
  40857e:	adc    edx,ebp
  408580:	cmp    eax,DWORD PTR [eax+0x30]
  408583:	fistp  QWORD PTR [edx-0x69]
  408586:	aad    0x97
  408588:	mov    ebp,0xe7441681
  40858d:	cmp    ecx,DWORD PTR [eax+0x4e]
  408590:	inc    esp
  408591:	and    bl,dl
  408593:	sub    eax,0xc05da3e5
  408598:	outs   dx,BYTE PTR ds:[esi]
  408599:	icebp  
  40859a:	je     0x408595
  40859c:	mov    ch,0xed
  40859e:	and    DWORD PTR [ecx+0x7bcfacc8],0xa0dc33bb
  4085a8:	mov    WORD PTR [esi+0x75],?
  4085ab:	jno    0x40861f
  4085ad:	imul   eax
  4085af:	jno    0x4085fa
  4085b1:	push   ebp
  4085b2:	ins    DWORD PTR es:[edi],dx
  4085b3:	push   edx
  4085b4:	cwde   
  4085b5:	pop    es
  4085b6:	sub    BYTE PTR [esi+0x3dc9ce32],ch
  4085bc:	push   ebx
  4085bd:	test   edi,esp
  4085bf:	xadd   BYTE PTR [ebx-0x3a855da3],bh
  4085c6:	sbb    dl,BYTE PTR [esp+eiz*2]
  4085c9:	pop    ds
  4085ca:	jge    0x408647
  4085cc:	xor    eax,0x469484e4
  4085d1:	sbb    ah,BYTE PTR [eax-0x69]
  4085d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085d5:	push   0x1d
  4085d7:	inc    ebp
  4085d8:	call   0x1065b1cd
  4085dd:	mov    ebp,0xdc7be8bf
  4085e2:	fsubr  DWORD PTR ds:0x66c62b96
  4085e8:	pop    ecx
  4085e9:	add    BYTE PTR [esi],al
  4085eb:	adc    BYTE PTR [edi],al
  4085ed:	xor    edx,edx
  4085ef:	mov    bl,0x63
  4085f1:	stos   DWORD PTR es:[edi],eax
  4085f2:	pop    esp
  4085f3:	dec    esp
  4085f4:	or     al,BYTE PTR [ebx+0x13]
  4085f7:	jno    0x4085ac
  4085f9:	lds    ebx,FWORD PTR [ebp+0x38f7413b]
  4085ff:	into   
  408600:	jns    0x40866d
  408602:	out    dx,eax
  408603:	mov    ebp,esi
  408605:	push   es
  408606:	sub    BYTE PTR [edx-0x4a439f00],ch
  40860c:	xchg   ebx,eax
  40860d:	add    DWORD PTR [eax],esi
  40860f:	data16 cmp ah,BYTE PTR [edx-0x3]
  408613:	cwde   
  408614:	sbb    al,0xfb
  408616:	cwde   
  408617:	aas    
  408618:	mov    al,0xb1
  40861a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40861b:	jge    0x4085df
  40861d:	sbb    bl,dh
  40861f:	nop
  408620:	arpl   WORD PTR gs:[esp+ebp*4-0x4a],ax
  408625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408626:	or     ebp,DWORD PTR ds:0x3ecc1fb1
  40862c:	mov    esp,0xd3ffb131
  408631:	push   esi
  408632:	push   eax
  408634:	out    0xfa,eax
  408636:	js     0x408662
  408638:	jb     0x4085bc
  40863a:	lock loopne 0x4085dd
  40863d:	test   ch,cl
  40863f:	fidivr DWORD PTR [edx]
  408641:	ror    DWORD PTR [ebp-0x7e4df07c],cl
  408647:	arpl   WORD PTR [edx+0x2b],di
  40864a:	leave  
  40864b:	dec    edi
  40864c:	test   DWORD PTR [esi],0x77e1b58
  408652:	imul   ebx,edi,0xbfc44842
  408658:	dec    ebp
  408659:	sbb    BYTE PTR [esi+0x79],0x30
  40865d:	add    ebx,esp
  40865f:	jl     0x408686
  408661:	jecxz  0x4085ea
  408663:	fsub   st(5),st
  408665:	mov    ds:0xaace5eb4,eax
  40866a:	(bad)  
  40866c:	and    al,0x7
  40866e:	cmp    DWORD PTR [esi],0x71761ba4
  408674:	punpckhwd mm3,QWORD PTR [esi]
  408677:	cmp    al,0x6
  408679:	cwde   
  40867a:	sahf   
  40867b:	data16 add dh,BYTE PTR [esi+0x5904a8b3]
  408682:	js     0x408669
  408684:	and    DWORD PTR [edx-0x61],0x57
  408688:	pop    ebp
  408689:	xchg   ebx,eax
  40868a:	cwde   
  40868b:	inc    edx
  40868c:	jp     0x408613
  40868e:	ds push es
  408690:	pop    ss
  408691:	fistp  QWORD PTR [esi]
  408693:	push   ebp
  408694:	arpl   WORD PTR [esi],cx
  408696:	and    eax,ebp
  408698:	pushf  
  408699:	out    0xb,eax
  40869b:	fldenv [edx+0x7b]
  40869e:	sub    DWORD PTR [edx],esi
  4086a0:	adc    ah,cl
  4086a2:	sbb    DWORD PTR [ebx-0x44eb7821],0xdfbadb61
  4086ac:	push   esp
  4086ad:	or     ecx,edi
  4086af:	stc    
  4086b0:	ret    
  4086b1:	add    al,0x95
  4086b3:	push   edx
  4086b4:	repnz lods eax,DWORD PTR ds:[esi]
  4086b6:	inc    esp
  4086b7:	test   eax,0xa7c93997
  4086bc:	aad    0x3b
  4086be:	and    eax,0xb8f59093
  4086c3:	cli    
  4086c4:	loope  0x408692
  4086c6:	jno    0x408680
  4086c8:	adc    ch,BYTE PTR ds:0xc43868b0
  4086ce:	lahf   
  4086cf:	pop    ds
  4086d0:	xchg   ebp,eax
  4086d1:	xchg   edi,eax
  4086d2:	cmp    al,0xac
  4086d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086d5:	inc    ecx
  4086d6:	push   ebp
  4086d7:	pop    ds
  4086d8:	mov    ecx,0x2db68a4b
  4086dd:	mov    ds:0x1cbce66f,al
  4086e2:	repnz dec ebx
  4086e4:	and    DWORD PTR [eax+0x4c8b1d31],ebx
  4086ea:	cmp    al,0x29
  4086ec:	js     0x40874f
  4086ee:	enter  0x40f9,0x49
  4086f2:	in     eax,dx
  4086f3:	dec    esi
  4086f4:	xor    ch,BYTE PTR [esi+0x6b]
  4086f7:	das    
  4086f8:	push   0xffffff96
  4086fa:	push   ebp
  4086fb:	inc    ecx
  4086fc:	sti    
  4086fd:	stc    
  4086fe:	adc    DWORD PTR cs:[esi],ebp
  408701:	(bad)  
  408702:	sbb    esi,esp
  408704:	shl    DWORD PTR [eax-0x12],0x7d
  408708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408709:	add    ah,dl
  40870b:	hlt    
  40870c:	add    eax,0xbb4cabef
  408711:	pop    esp
  408712:	xor    al,0x41
  408714:	add    ecx,0xffffffe5
  408717:	pushf  
  408718:	dec    ebp
  408719:	lods   al,BYTE PTR ds:[esi]
  40871a:	pushf  
  40871b:	pcmpeqd mm7,QWORD PTR [ebp-0x1792072f]
  408722:	dec    ebx
  408723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408724:	mov    ah,0x13
  408726:	(bad)  
  408727:	fcom   DWORD PTR [eax]
  408729:	shl    DWORD PTR [edi-0x612d90a3],1
  40872f:	div    edx
  408731:	sub    al,dh
  408733:	out    dx,eax
  408734:	cmc    
  408735:	push   0x2cf402c1
  40873a:	dec    edi
  40873b:	daa    
  40873c:	mov    edx,0x236d2ae1
  408741:	mov    ebp,0xc70eec88
  408746:	jb     0x408751
  408748:	ret    
  408749:	iret   
  40874a:	sbb    BYTE PTR [esi],bl
  40874c:	cmp    BYTE PTR [edx],dl
  40874e:	in     eax,0x7f
  408750:	xchg   edi,ebp
  408752:	xor    al,BYTE PTR [ecx+esi*8+0xf1e970e]
  408759:	mov    edx,?
  40875b:	loope  0x408705
  40875d:	dec    BYTE PTR [ecx-0x39299782]
  408763:	in     eax,0x9c
  408765:	mov    edi,0x8c71ca7c
  40876a:	jae    0x4087d0
  40876c:	mov    edi,0x24584063
  408771:	retf   
  408772:	xor    ch,BYTE PTR [edi+0x6a0e38b4]
  408778:	aad    0x33
  40877a:	lock mov ds:0x17584158,eax
  408780:	inc    eax
  408781:	sub    sp,dx
  408784:	scas   eax,DWORD PTR es:[edi]
  408785:	std    
  408786:	jl     0x4087a2
  408788:	cmp    esp,ebp
  40878a:	inc    edi
  40878b:	daa    
  40878c:	jg     0x408724
  40878e:	test   BYTE PTR [eax],0x78
  408791:	inc    eax
  408792:	mov    dl,0xdd
  408794:	adc    al,0xb7
  408796:	cmp    ah,BYTE PTR [eax+ebp*8]
  408799:	mov    cs,WORD PTR [ebp+0x47]
  40879c:	test   eax,0xd14fccb7
  4087a1:	cmp    esi,esp
  4087a3:	cld    
  4087a4:	and    BYTE PTR ds:0x79a75bfd,bl
  4087aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ab:	push   ecx
  4087ac:	mov    al,0xfc
  4087ae:	dec    ebx
  4087af:	je     0x4087bf
  4087b1:	es sbb ecx,0x1da3094c
  4087b8:	xor    edi,DWORD PTR [edi+eiz*1+0x41ba17cf]
  4087bf:	cmp    eax,0x273d5c46
  4087c4:	push   esp
  4087c5:	add    DWORD PTR [ebx-0x1a],0xffffffae
  4087c9:	and    ebp,DWORD PTR [ecx-0x3d79302a]
  4087cf:	push   ss
  4087d0:	cwde   
  4087d1:	cs add eax,0xc43a17e4
  4087d7:	fstp   QWORD PTR [edx]
  4087d9:	in     eax,dx
  4087da:	pop    edi
  4087db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087dc:	dec    edx
  4087dd:	pop    edi
  4087de:	cmp    al,0x13
  4087e0:	retfw  0xee24
  4087e4:	aaa    
  4087e5:	inc    ebp
  4087e6:	in     eax,0xa
  4087e8:	inc    ebx
  4087e9:	jmp    0x408798
  4087eb:	xor    al,0xa
  4087ed:	cli    
  4087ee:	mov    eax,0x9cd3d346
  4087f3:	sbb    DWORD PTR [ebx-0x442bb1bd],esi
  4087f9:	lock or DWORD PTR [ebx+0x76ec70dc],edi
  408800:	jne    0x408880
  408802:	add    BYTE PTR [eax],0x2e
  408805:	lea    edx,[edi+0x23e5ea9]
  40880b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40880c:	mov    dh,BYTE PTR [ebx]
  40880e:	shl    bl,0x76
  408811:	sbb    eax,0xcbca01c6
  408816:	cli    
  408817:	and    DWORD PTR [ebp-0x65],ebx
  40881a:	inc    esi
  40881b:	sahf   
  40881c:	sub    cl,bl
  40881e:	pop    eax
  40881f:	lods   al,BYTE PTR ds:[esi]
  408820:	(bad)  
  408821:	aam    0x5
  408823:	aam    0x6a
  408825:	fs jge 0x408868
  408828:	push   ecx
  408829:	pop    ss
  40882a:	dec    eax
  40882b:	in     al,dx
  40882c:	scas   eax,DWORD PTR es:[edi]
  40882d:	jo     0x4088a6
  40882f:	mov    bh,0x57
  408831:	jg     0x4087ec
  408833:	or     bl,BYTE PTR [eax+0x1cbae856]
  408839:	and    ebp,esi
  40883b:	mov    esi,0x91d78e83
  408840:	pop    eax
  408841:	jne    0x4087fe
  408843:	das    
  408844:	call   0xf291da70
  408849:	das    
  40884a:	jg     0x408882
  40884c:	out    0xa6,eax
  40884e:	xchg   ebx,eax
  40884f:	add    DWORD PTR [ecx+0x2d],0x8258905b
  408856:	inc    esp
  408857:	test   eax,0x5e96c3ae
  40885c:	cld    
  40885d:	(bad)  
  40885e:	jle    0x40880d
  408860:	mov    ch,dh
  408862:	sbb    esp,DWORD PTR [esi]
  408864:	mov    bl,0x18
  408866:	sbb    DWORD PTR [edx-0xa],esi
  408869:	sub    edi,DWORD PTR [esi-0x1d]
  40886c:	adc    cl,BYTE PTR [ecx]
  40886e:	sub    bl,dh
  408870:	fwait
  408871:	or     ebp,DWORD PTR [esi]
  408873:	jecxz  0x4088b5
  408875:	dec    edx
  408876:	jg     0x4088f5
  408878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408879:	inc    ebx
  40887a:	and    dh,BYTE PTR [ebp+0x61]
  40887d:	push   edi
  40887e:	sbb    ebx,DWORD PTR [ecx]
  408880:	ds pop ds
  408882:	mov    dl,0x62
  408884:	in     al,dx
  408885:	jmp    0x93eb9cf0
  40888a:	lahf   
  40888b:	out    0x14,eax
  40888d:	xchg   ebx,eax
  40888e:	or     DWORD PTR [ebp+0x650a9340],edi
  408894:	popf   
  408895:	or     bl,0x73
  408898:	lahf   
  408899:	push   eax
  40889a:	test   BYTE PTR [eax-0x4a],ch
  40889d:	bound  ebx,QWORD PTR [edi+0x9605fc8]
  4088a3:	xchg   edx,eax
  4088a4:	mov    ds,WORD PTR [edi+eax*1-0x1f]
  4088a8:	icebp  
  4088a9:	pop    edx
  4088aa:	sub    eax,0xb6b52c43
  4088af:	or     BYTE PTR [ebx-0x50],0x63
  4088b3:	out    dx,al
  4088b4:	add    eax,0x6c71fdd6
  4088b9:	pop    ds
  4088ba:	sbb    cl,al
  4088bc:	xchg   ecx,eax
  4088bd:	xchg   esp,eax
  4088be:	fs xor eax,0x1f97f170
  4088c4:	test   eax,0xfc448241
  4088c9:	push   ebx
  4088ca:	mov    esp,0x43c3ddee
  4088cf:	aas    
  4088d0:	fadd   QWORD PTR [ebx-0x23]
  4088d3:	add    dl,BYTE PTR [eax-0x7d2e95b9]
  4088d9:	push   es
  4088da:	pop    eax
  4088db:	sahf   
  4088dc:	stos   DWORD PTR es:[edi],eax
  4088dd:	in     al,0xec
  4088df:	into   
  4088e0:	add    al,0x96
  4088e2:	popf   
  4088e3:	add    ebp,ecx
  4088e5:	mov    cl,0x43
  4088e7:	lock call FWORD PTR [ecx+0x2c]
  4088eb:	jg     0x40888e
  4088ed:	in     al,0xeb
  4088ef:	iret   
  4088f0:	xlat   BYTE PTR ds:[ebx]
  4088f1:	mov    edi,0x57a0085b
  4088f6:	fisubr DWORD PTR ds:0x71c746da
  4088fc:	and    al,0x1d
  4088fe:	mov    ebx,0xc2b25ddd
  408903:	add    eax,0x8840316e
  408908:	addr16 sub ebp,ebp
  40890b:	out    dx,eax
  40890c:	jecxz  0x4088bd
  40890e:	out    dx,al
  40890f:	jo     0x408980
  408911:	jp     0x408985
  408913:	repnz cmp DWORD PTR [eax+0x3e],0xffffff82
  408918:	inc    edi
  408919:	daa    
  40891a:	push   esi
  40891b:	mov    ah,0x4c
  40891d:	aad    0xd9
  40891f:	loope  0x408980
  408921:	push   ebp
  408922:	xchg   ebx,eax
  408923:	lea    edi,[edx]
  408925:	mov    dl,BYTE PTR [esi+0x58]
  408928:	bound  ecx,QWORD PTR [edx]
  40892a:	pop    edi
  40892b:	or     dh,BYTE PTR [esi+0x7ac851f3]
  408931:	in     al,dx
  408932:	data16 sbb al,BYTE PTR [ebx]
  408935:	jle    0x4088be
  408937:	xor    ch,BYTE PTR [eax]
  408939:	outs   dx,DWORD PTR ds:[esi]
  40893a:	and    DWORD PTR [eax],ebp
  40893c:	leave  
  40893d:	mov    WORD PTR [esi+0x68],gs
  408940:	dec    edx
  408941:	inc    esi
  408942:	push   esi
  408943:	sbb    DWORD PTR [edx+0x55],edx
  408946:	dec    edx
  408947:	mov    WORD PTR [ebx+0xc],cs
  40894a:	push   eax
  40894b:	add    DWORD PTR [edx],edx
  40894d:	xchg   ebp,eax
  40894e:	xchg   esp,eax
  40894f:	mov    eax,0xa5c5eaa3
  408954:	fdiv   st,st(0)
  408956:	mov    eax,0x91dd0619
  40895b:	xor    BYTE PTR [esi+0x5c],0xe8
  40895f:	ret    
  408960:	ins    DWORD PTR es:[edi],dx
  408961:	pusha  
  408962:	mov    bh,0xb3
  408964:	cmp    BYTE PTR [esi+0x35d163b7],ch
  40896a:	mov    edx,0x1735d306
  40896f:	mov    ds:0x1373897e,al
  408974:	add    edx,DWORD PTR [esi]
  408976:	push   0xffffff87
  408978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408979:	div    BYTE PTR [edx-0x3]
  40897c:	push   ss
  40897d:	inc    ecx
  40897e:	sar    BYTE PTR [ecx-0x6b],cl
  408981:	daa    
  408982:	mov    edi,0xe0ce78ca
  408987:	jp     0x40897a
  408989:	clc    
  40898a:	cmp    eax,0x47b7fa4f
  40898f:	xchg   BYTE PTR [edx-0x41],ch
  408992:	pop    ax
  408994:	push   0x5cec720d
  408999:	dec    eax
  40899a:	push   ecx
  40899b:	call   0x5bc4:0x3fba19a
  4089a2:	or     dh,dl
  4089a4:	sahf   
  4089a5:	rol    DWORD PTR [edi],cl
  4089a7:	mov    BYTE PTR [ecx],cl
  4089a9:	inc    edx
  4089aa:	cs mov edx,0xdf09ac20
  4089b0:	pop    edx
  4089b1:	jb     0x408a2e
  4089b3:	aam    0xfe
  4089b5:	mov    ds:0x2f16a311,eax
  4089ba:	xchg   esi,eax
  4089bb:	inc    ecx
  4089bc:	repnz sbb DWORD PTR [eax+0x499318a4],ebp
  4089c3:	mov    dl,0xbc
  4089c5:	sub    DWORD PTR [ecx-0x72],ecx
  4089c8:	pop    esi
  4089c9:	push   0x4eab760a
  4089ce:	in     al,dx
  4089cf:	mov    al,ds:0xdd50052c
  4089d4:	inc    ebx
  4089d5:	sbb    DWORD PTR fs:[esi+0x72bde570],ecx
  4089dc:	rcl    BYTE PTR [esi+0x2d],0x11
  4089e0:	inc    edi
  4089e1:	xchg   ebp,eax
  4089e2:	rcr    DWORD PTR [edi-0x527f2c8a],1
  4089e8:	pop    ebp
  4089e9:	test   BYTE PTR [edx-0x29],al
  4089ec:	push   es
  4089ed:	ds xchg ecx,eax
  4089ef:	mov    edi,0xb7bc4340
  4089f4:	jns    0x4089e7
  4089f6:	popa   
  4089f7:	out    0xcc,al
  4089f9:	inc    eax
  4089fa:	test   al,al
  4089fc:	out    0x52,al
  4089fe:	cmp    DWORD PTR [ebp+0x688e60],esi
  408a04:	xchg   ebp,eax
  408a05:	fdivr  DWORD PTR [esi]
  408a07:	add    eax,0x8a3cee60
  408a0c:	or     al,0x75
  408a0e:	mov    edi,fs
  408a10:	mov    esi,0x189fbcc5
  408a15:	in     al,dx
  408a16:	jbe    0x408a6a
  408a18:	push   0xffffffbc
  408a1a:	pusha  
  408a1b:	fwait
  408a1c:	jb     0x408a61
  408a1e:	adc    dl,BYTE PTR [ebp-0x2f]
  408a21:	pop    esi
  408a22:	test   al,0xa5
  408a24:	jbe    0x4089ae
  408a26:	lea    ecx,[esi+0x50e6ac12]
  408a2c:	push   es
  408a2d:	leave  
  408a2e:	dec    ebx
  408a2f:	xchg   edx,eax
  408a30:	pop    ebp
  408a31:	retf   
  408a32:	out    dx,al
  408a33:	stos   BYTE PTR es:[edi],al
  408a34:	fcmove st,st(1)
  408a36:	(bad)  
  408a37:	rcl    BYTE PTR [ebp-0x6ab2ed53],cl
  408a3d:	inc    eax
  408a3e:	pop    es
  408a3f:	(bad)  
  408a40:	hlt    
  408a41:	loop   0x4089d1
  408a43:	push   ss
  408a44:	jle    0x408a65
  408a46:	(bad)  
  408a47:	(bad)  
  408a48:	cmp    DWORD PTR [esi+0x38],ebx
  408a4b:	pop    eax
  408a4c:	rol    BYTE PTR [eax+0x550e4b1a],1
  408a52:	outs   dx,DWORD PTR ds:[esi]
  408a53:	xor    al,0x88
  408a55:	and    BYTE PTR [eax+0xb87aa9b],cl
  408a5b:	and    edx,DWORD PTR [ecx-0x6ff3ba94]
  408a61:	stc    
  408a62:	dec    esp
  408a63:	inc    ebx
  408a64:	dec    esi
  408a65:	jmp    FWORD PTR [ebx]
  408a67:	fnstsw ax
  408a69:	ror    BYTE PTR [ebp-0x61],1
  408a6c:	rcl    BYTE PTR [edi],cl
  408a6e:	std    
  408a6f:	push   ss
  408a70:	fbstp  TBYTE PTR [ecx+0x42]
  408a73:	jmp    0x9de8fd9e
  408a78:	mov    al,ds:0xd4ac0297
  408a7d:	xchg   ecx,eax
  408a7e:	mov    esp,0xeca5e6fc
  408a83:	sbb    al,0xef
  408a85:	add    BYTE PTR [esi-0x2b3dbeb5],ah
  408a8b:	aam    0x37
  408a8d:	aaa    
  408a8e:	mov    ecx,DWORD PTR [eax]
  408a90:	rcr    cl,1
  408a92:	sub    al,0x85
  408a94:	mov    cl,ah
  408a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a97:	je     0x408a52
  408a99:	lock xchg ebp,eax
  408a9b:	ins    DWORD PTR es:[edi],dx
  408a9c:	inc    esp
  408a9d:	or     eax,0x58334bb6
  408aa2:	and    eax,0xec901e3
  408aa7:	aam    0x38
  408aa9:	mov    dl,0x75
  408aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aac:	ins    DWORD PTR es:[edi],dx
  408aad:	and    eax,0x168e7b73
  408ab2:	or     bh,BYTE PTR [edi]
  408ab4:	inc    edi
  408ab5:	neg    BYTE PTR [ecx]
  408ab7:	data16 addr16 loopne 0x408ae1
  408abb:	mov    ss,WORD PTR [eax+0x3f]
  408abe:	dec    ebp
  408abf:	sub    ch,bh
  408ac1:	xchg   esp,eax
  408ac2:	or     BYTE PTR [edx],ch
  408ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ac5:	test   eax,0xfe60389c
  408aca:	push   0x54226ac0
  408acf:	loope  0x408a54
  408ad1:	push   edx
  408ad2:	mov    ebx,0x586a0100
  408ad7:	xor    dh,BYTE PTR [ebx]
  408ad9:	or     ebx,edx
  408adb:	stos   BYTE PTR es:[edi],al
  408adc:	inc    esi
  408add:	jmp    0xfe1:0xdcac4049
  408ae4:	bound  ebx,QWORD PTR [esi+0x7fdf7c2d]
  408aea:	xchg   ebp,eax
  408aec:	mov    ebx,0x8f32d2fe
  408af1:	call   0xf083:0x9c542a29
  408af8:	jb     0x408b5b
  408afa:	(bad)  
  408afb:	leave  
  408afc:	or     eax,0x9f9dc6cf
  408b01:	mov    DWORD PTR [eax-0x51],edi
  408b04:	addr16 push ecx
  408b06:	fidiv  DWORD PTR [ebx-0x3e2875e4]
  408b0c:	pop    ds
  408b0d:	push   ss
  408b0e:	mov    esi,0xb56eb672
  408b13:	lock inc edi
  408b15:	(bad)  
  408b17:	jne    0x408add
  408b19:	pushf  
  408b1a:	fs jae 0x408ac0
  408b1d:	jl     0x408ac4
  408b1f:	test   esp,ebx
  408b21:	cmp    DWORD PTR [ebp-0x16fd8f78],ebx
  408b27:	outs   dx,DWORD PTR ds:[esi]
  408b28:	mov    bh,0x2
  408b2a:	fmul   DWORD PTR [ebx-0x48]
  408b2d:	fdivp  st(1),st
  408b2f:	fist   DWORD PTR [eax]
  408b31:	test   BYTE PTR [edx-0x1b3c1ee6],bl
  408b37:	pop    es
  408b38:	push   eax
  408b39:	scas   al,BYTE PTR es:[edi]
  408b3a:	adc    BYTE PTR [eax+0x30193242],bl
  408b40:	cmp    BYTE PTR [ebp+eiz*2+0x5e],ch
  408b44:	int3   
  408b45:	jge    0x408bab
  408b47:	in     eax,dx
  408b48:	test   al,0xd7
  408b4a:	or     DWORD PTR [ecx-0x30cd84e4],eax
  408b50:	rcl    BYTE PTR [ecx],1
  408b52:	clc    
  408b53:	call   0xec57b85a
  408b58:	idiv   BYTE PTR [ecx-0x36d8eb8a]
  408b5e:	and    esp,DWORD PTR [ebp-0x9]
  408b61:	sbb    ebx,ebp
  408b63:	pop    es
  408b64:	xor    BYTE PTR [ecx+0x75],dl
  408b67:	iret   
  408b68:	jmp    0x408b88
  408b6a:	sub    al,0x4e
  408b6c:	call   0x4a0c:0x9517b4c3
  408b73:	pop    ebp
  408b74:	lahf   
  408b75:	push   eax
  408b76:	or     BYTE PTR [ecx+0x7e74f6b8],0x2a
  408b7d:	clc    
  408b7e:	mov    al,0x84
  408b80:	shr    BYTE PTR [edx+0x10430da5],cl
  408b86:	or     DWORD PTR [edi],edi
  408b88:	jg     0x408be1
  408b8a:	(bad)  
  408b8b:	mov    ds:0xbdc4be35,al
  408b90:	(bad)  
  408b91:	mov    cl,0xc
  408b93:	mov    edi,0x64adf207
  408b98:	push   ebp
  408b99:	push   ss
  408b9a:	call   0xc123ab95
  408b9f:	mov    ds:0x7e68a38b,eax
  408ba4:	xor    al,0x1d
  408ba6:	jae    0x408bdb
  408ba8:	mov    dh,0x47
  408baa:	mov    DWORD PTR [edx],esp
  408bac:	into   
  408bad:	sub    al,0x2d
  408baf:	cdq    
  408bb0:	xlat   BYTE PTR ds:[ebx]
  408bb1:	pop    esp
  408bb2:	jge    0x408b79
  408bb4:	jg     0x408bbb
  408bb6:	shl    DWORD PTR [ebx+ebp*2+0x18],1
  408bba:	ror    DWORD PTR [eax-0x3c],0x2f
  408bbe:	inc    edi
  408bbf:	lods   eax,DWORD PTR ds:[esi]
  408bc0:	add    BYTE PTR [ecx],ah
  408bc2:	xchg   edi,eax
  408bc3:	mov    edi,DWORD PTR [eax+0x918dc86]
  408bc9:	in     al,0x2c
  408bcb:	dec    ebp
  408bcc:	mov    edx,?
  408bce:	out    0x10,eax
  408bd0:	inc    ecx
  408bd1:	aas    
  408bd2:	mov    ecx,0x7683fec
  408bd7:	repz push esi
  408bd9:	jg     0x408bc6
  408bdb:	dec    esi
  408bdc:	mov    cl,0xe3
  408bde:	call   0x1f121c7a
  408be3:	arpl   WORD PTR ds:0x7158b4b1,dx
  408be9:	and    DWORD PTR [ebx+0x5522fa30],ebp
  408bef:	stc    
  408bf0:	sahf   
  408bf1:	push   eax
  408bf2:	pop    ebp
  408bf3:	iret   
  408bf4:	fld    QWORD PTR cs:[ebp-0x1ee96bcc]
  408bfb:	scas   eax,DWORD PTR es:[edi]
  408bfc:	inc    esi
  408bfd:	xchg   esi,eax
  408bfe:	push   esp
  408bff:	(bad)  [ebx-0x77f4709]
  408c05:	in     al,dx
  408c06:	jl     0x408c5d
  408c08:	xor    DWORD PTR [ebx],edi
  408c0a:	mov    ebx,DWORD PTR [ecx]
  408c0c:	mov    esp,DWORD PTR [esi-0x107ab271]
  408c12:	cmp    cl,bl
  408c14:	retf   0xfb09
  408c17:	sub    DWORD PTR [eax-0x53a58d38],edi
  408c1d:	lock mov ecx,0x1f369eea
  408c23:	int3   
  408c24:	mov    dl,0xde
  408c26:	jo     0x408bea
  408c28:	cmp    ch,BYTE PTR [edx]
  408c2a:	sub    al,ch
  408c2c:	or     cl,BYTE PTR [edi]
  408c2e:	aad    0xce
  408c30:	cdq    
  408c31:	(bad)  
  408c32:	out    dx,al
  408c33:	arpl   WORD PTR [edi-0x2e],si
  408c36:	xchg   edi,eax
  408c37:	mov    edi,0xda95dd1c
  408c3c:	add    bh,BYTE PTR [edi+esi*8-0x6f]
  408c40:	pop    ebp
  408c42:	jo     0x408c34
  408c44:	mov    ebx,0x12222445
  408c49:	outs   dx,BYTE PTR ds:[esi]
  408c4a:	idiv   DWORD PTR [ebx-0x4c]
  408c4d:	fldenv [eax+0x12213376]
  408c53:	cdq    
  408c54:	sbb    al,0x7f
  408c57:	jns    0x408bfe
  408c59:	add    al,0xe8
  408c5b:	sar    bh,cl
  408c5d:	shr    BYTE PTR [ebx-0x5f],1
  408c60:	fadd   DWORD PTR [esi]
  408c62:	ins    DWORD PTR es:[edi],dx
  408c63:	(bad)  
  408c64:	jmp    0xca44:0x2436df9f
  408c6b:	pop    esp
  408c6c:	lahf   
  408c6d:	cli    
  408c6e:	mov    ch,0x7f
  408c70:	int    0xf7
  408c72:	int    0xbc
  408c74:	push   esi
  408c75:	jb     0x408c38
  408c77:	mov    al,0xd5
  408c79:	add    ebx,edx
  408c7b:	int3   
  408c7c:	jle    0x408c21
  408c7e:	enter  0xaac,0x4b
  408c82:	push   esi
  408c83:	enter  0x117a,0x33
  408c87:	jbe    0x408c0d
  408c89:	cmp    eax,0xa41becaa
  408c8e:	ds jp  0x408c62
  408c91:	sahf   
  408c92:	mov    eax,ds:0x214950bf
  408c97:	out    0xd7,eax
  408c99:	popf   
  408c9a:	or     BYTE PTR [eax],ah
  408c9c:	pop    edx
  408c9d:	jns    0x408c88
  408c9f:	mov    eax,0xbce5e32e
  408ca4:	test   BYTE PTR ds:0xb30688a4,0x3f
  408cab:	push   eax
  408cac:	fiadd  DWORD PTR ds:0x12801ad8
  408cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cb3:	scas   eax,DWORD PTR es:[edi]
  408cb4:	push   es
  408cb5:	fisubr WORD PTR [ebx]
  408cb7:	(bad)  
  408cb8:	adc    eax,0x7c294c75
  408cbd:	dec    ebx
  408cbe:	jno    0x408ce2
  408cc0:	jmp    FWORD PTR [edi-0x72]
  408cc3:	arpl   bp,cx
  408cc5:	or     bh,BYTE PTR [esi+0x1eda891d]
  408ccb:	loop   0x408c5e
  408ccd:	mov    eax,ds:0x57809435
  408cd2:	mov    ch,0x8e
  408cd4:	repz or eax,DWORD PTR [ebx+0x59]
  408cd8:	cwde   
  408cd9:	cmp    ch,BYTE PTR [ecx+0x78f745f7]
  408cdf:	xchg   esp,eax
  408ce0:	dec    ebp
  408ce1:	stc    
  408ce2:	hlt    
  408ce3:	mov    ah,0x77
  408ce5:	xchg   edx,eax
  408ce6:	retf   
  408ce7:	addr16 push ds
  408ce9:	je     0x408ce6
  408ceb:	rcl    al,cl
  408ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cee:	add    eax,0x9b579a74
  408cf3:	(bad)  
  408cf4:	sbb    eax,0xdb839b7b
  408cf9:	jns    0x408cf2
  408cfb:	and    ah,bl
  408cfd:	push   ebx
  408cfe:	mov    al,0xf0
  408d00:	int    0xa7
  408d02:	jg     0x408d7e
  408d04:	pop    esp
  408d05:	lods   al,BYTE PTR ds:[esi]
  408d06:	and    edx,eax
  408d08:	push   eax
  408d09:	mov    al,ds:0x66c48e8c
  408d0e:	aas    
  408d0f:	xlat   BYTE PTR ds:[ebx]
  408d10:	test   eax,0x9d7510fe
  408d15:	ja     0x408d78
  408d17:	popf   
  408d18:	sbb    eax,0x1b42510f
  408d1d:	into   
  408d1e:	mov    eax,0xb08e8aed
  408d23:	iret   
  408d24:	mul    BYTE PTR [edx+0x68]
  408d27:	fimul  WORD PTR ds:0x4a9d51ce
  408d2d:	sbb    eax,0x9ee3eea8
  408d32:	retf   0xafdb
  408d35:	xchg   bh,ah
  408d37:	inc    ecx
  408d38:	add    ebx,DWORD PTR [edx]
  408d3a:	jmp    0x408cda
  408d3c:	pop    ebx
  408d3d:	sub    BYTE PTR [esi-0x68],bh
  408d40:	pop    ecx
  408d41:	out    dx,al
  408d42:	ins    DWORD PTR es:[edi],dx
  408d43:	nop
  408d44:	and    dh,bh
  408d46:	fsubrp st(5),st
  408d48:	cmp    eax,0xb0757815
  408d4d:	inc    esp
  408d4e:	gs repz test eax,0xea4e1a69
  408d55:	(bad)  
  408d56:	pop    eax
  408d57:	inc    edx
  408d58:	cmp    DWORD PTR [eax-0x6e],edi
  408d5b:	bound  ecx,QWORD PTR [ebx+ebx*2]
  408d5e:	add    eax,0xfd801ab4
  408d63:	mov    edx,DWORD PTR [ebx-0x3e]
  408d66:	int    0x28
  408d68:	adc    DWORD PTR [esi+eax*4-0x19],edx
  408d6c:	jae    0x408d5b
  408d6e:	(bad)  
  408d6f:	jecxz  0x408d50
  408d71:	push   ds
  408d72:	rcl    DWORD PTR [ebx+ebx*4-0x65],0xdd
  408d77:	out    0x57,eax
  408d79:	rcl    DWORD PTR [ebx+ebp*8],1
  408d7c:	stos   DWORD PTR es:[edi],eax
  408d7d:	sbb    al,0x28
  408d7f:	dec    ebp
  408d80:	imul   ebp,DWORD PTR ds:0x1e69c695,0x5f
  408d87:	cmp    al,0xe7
  408d8a:	nop
  408d8b:	icebp  
  408d8c:	push   edi
  408d8d:	dec    esi
  408d8e:	div    edx
  408d90:	popa   
  408d91:	ficomp DWORD PTR [ebx-0x25cd2a4b]
  408d97:	add    BYTE PTR [esi+eiz*4-0x54],cl
  408d9b:	xor    eax,edi
  408d9d:	dec    edx
  408d9e:	mov    cl,0xd8
  408da0:	leave  
  408da1:	push   0xffffffd0
  408da3:	mov    dl,BYTE PTR [edi+0x519db0f]
  408da9:	outs   dx,BYTE PTR ds:[esi]
  408daa:	push   ebp
  408dab:	inc    ebp
  408dac:	aad    0x1f
  408dae:	push   eax
  408daf:	stc    
  408db0:	jp     0x408d72
  408db2:	mov    ds:0x8c573236,eax
  408db7:	and    ah,BYTE PTR [esi]
  408db9:	inc    eax
  408dba:	cmp    esi,DWORD PTR [eax-0x4]
  408dbd:	pop    ecx
  408dbe:	ret    0x2acb
  408dc1:	fadd   QWORD PTR [ebp+0x92df2df]
  408dc7:	shl    DWORD PTR [ecx+0x5af9ce28],0xf5
  408dce:	loopne 0x408e3b
  408dd0:	fs loope 0x408d73
  408dd3:	push   cs
  408dd4:	mov    al,0x3d
  408dd6:	push   0x6d12a833
  408ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ddc:	inc    edx
  408ddd:	sub    esi,edx
  408ddf:	jecxz  0x408de0
  408de1:	shl    BYTE PTR [eax],0x9a
  408de4:	retf   
  408de5:	push   eax
  408de6:	call   0x59ac:0xee84a861
  408ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dee:	and    al,0x27
  408df0:	dec    esp
  408df1:	scas   al,BYTE PTR es:[edi]
  408df2:	fwait
  408df3:	push   edi
  408df4:	push   ebx
  408df5:	fisub  DWORD PTR [edi-0x5011f961]
  408dfb:	test   eax,0x76ce97fa
  408e00:	push   ebx
  408e01:	jb     0x408e53
  408e03:	adc    dl,BYTE PTR [esi-0x30]
  408e06:	sub    BYTE PTR [edi-0x2c483932],dl
  408e0c:	cdq    
  408e0d:	mov    ecx,eax
  408e0f:	xor    BYTE PTR [ecx],ah
  408e11:	gs xchg ebp,eax
  408e13:	push   edx
  408e14:	push   esp
  408e15:	xchg   ecx,eax
  408e16:	pop    ecx
  408e17:	push   esp
  408e18:	adc    ah,BYTE PTR [eax+eiz*1-0x679b70aa]
  408e1f:	pop    ebp
  408e20:	idiv   DWORD PTR [ebx+eiz*2]
  408e23:	mov    bl,0x4c
  408e25:	push   edi
  408e26:	shr    DWORD PTR [ebp-0x3b],cl
  408e29:	push   ss
  408e2a:	cs pop ds
  408e2c:	outs   dx,BYTE PTR ds:[esi]
  408e2d:	fwait
  408e2e:	outs   dx,BYTE PTR ds:[esi]
  408e2f:	push   ss
  408e30:	pop    ss
  408e31:	inc    edi
  408e32:	mov    ds:0xe23ce63d,al
  408e37:	shl    bl,cl
  408e39:	sbb    al,0xeb
  408e3b:	sub    al,0x46
  408e3d:	aas    
  408e3e:	sub    eax,0xe64ec8b
  408e43:	adc    ecx,DWORD PTR [edi]
  408e45:	rol    BYTE PTR [ebx],1
  408e47:	xor    ah,BYTE PTR [ecx+0x47]
  408e4a:	je     0x408e69
  408e4c:	aas    
  408e4d:	daa    
  408e4e:	arpl   WORD PTR [edx],cx
  408e50:	call   0xbf6e:0x91b5b4b5
  408e57:	cdq    
  408e58:	push   ebp
  408e59:	sbb    esi,DWORD PTR [esi-0x62288133]
  408e5f:	mov    al,0xe0
  408e61:	mov    ah,0xe6
  408e63:	iret   
  408e64:	fistp  WORD PTR [edi]
  408e66:	push   ebp
  408e67:	push   cs
  408e68:	pop    ebp
  408e69:	xlat   BYTE PTR ds:[ebx]
  408e6a:	das    
  408e6b:	into   
  408e6c:	retf   
  408e6d:	mov    ebx,0x982bedaf
  408e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e73:	cmp    al,0x47
  408e75:	sar    BYTE PTR [ecx],0x27
  408e78:	sub    al,0x7d
  408e7a:	and    ecx,edx
  408e7c:	(bad)  
  408e7d:	mov    ebx,0x37e9be9b
  408e82:	daa    
  408e83:	or     bh,0xef
  408e86:	cli    
  408e87:	mov    DWORD PTR [ebp-0x37f36cb4],esi
  408e8d:	sub    dh,BYTE PTR es:[ebx]
  408e90:	cmp    BYTE PTR [edi],bh
  408e92:	imul   ebp,DWORD PTR [ebx],0x7f8e95b5
  408e98:	sbb    eax,DWORD PTR [edi]
  408e9a:	(bad)  
  408e9b:	call   0x1a91da0b
  408ea0:	xor    ch,BYTE PTR [edi+eax*4-0x78]
  408ea4:	loopne 0x408f1e
  408ea6:	push   edx
  408ea7:	out    0x45,al
  408ea9:	(bad)  
  408eaa:	aam    0xf0
  408eac:	push   es
  408ead:	out    0x3b,al
  408eaf:	push   esi
  408eb0:	mov    bl,0xe8
  408eb2:	mov    dl,0x20
  408eb4:	push   edi
  408eb5:	sub    al,BYTE PTR [ebp-0x6ff9ef8f]
  408ebb:	neg    DWORD PTR [edx-0x21]
  408ebe:	mov    edx,0x58482924
  408ec3:	dec    edi
  408ec4:	and    BYTE PTR [ebp+ebp*1+0x2df7882d],al
  408ecb:	(bad)  
  408ecc:	xchg   edi,eax
  408ecd:	add    DWORD PTR [edx],ecx
  408ecf:	stc    
  408ed0:	mov    eax,0x86777b60
  408ed5:	in     al,dx
  408ed6:	stos   BYTE PTR es:[edi],al
  408ed7:	xor    ebx,ebp
  408ed9:	stc    
  408eda:	jle    0x408f26
  408edc:	repz iret 
  408ede:	add    al,0xa2
  408ee0:	call   0x3b97c0dc
  408ee5:	jecxz  0x408ed6
  408ee7:	pop    ds
  408ee8:	stc    
  408ee9:	mov    ecx,gs
  408eeb:	xchg   eax,esi
  408eed:	and    bl,BYTE PTR [edx]
  408eef:	jb     0x408f11
  408ef1:	jmp    DWORD PTR [eax+0x52]
  408ef4:	push   ebx
  408ef5:	adc    eax,eax
  408ef7:	pop    esp
  408ef8:	rol    BYTE PTR [ebx+edi*1+0x2ca3fed],cl
  408eff:	lahf   
  408f00:	out    dx,eax
  408f01:	shr    BYTE PTR [ebp-0x7561f435],0x8b
  408f08:	jl     0x408f88
  408f0a:	lea    edi,[eax+0x3024b44]
  408f10:	cli    
  408f11:	les    esp,FWORD PTR [ebp-0x25]
  408f14:	dec    esi
  408f15:	daa    
  408f16:	push   edx
  408f17:	out    dx,al
  408f18:	fiadd  DWORD PTR [ecx-0x13]
  408f1b:	ffree  st(4)
  408f1d:	retf   0xfafc
  408f20:	iret   
  408f21:	sti    
  408f22:	mov    bl,0xf8
  408f24:	sbb    al,0x95
  408f26:	shr    BYTE PTR [edx+0x774e7fdd],cl
  408f2c:	fld    TBYTE PTR [ecx+0x17534a21]
  408f32:	cmc    
  408f33:	fdiv   DWORD PTR [ebx+edx*8-0x5]
  408f37:	dec    esi
  408f38:	cmp    esi,DWORD PTR [ebp-0x57]
  408f3b:	cmp    al,0x45
  408f3d:	mov    ch,0x97
  408f3f:	sahf   
  408f40:	dec    BYTE PTR [esi-0x68]
  408f43:	mov    DWORD PTR [esi+0x10fbd228],edi
  408f49:	fucomp st(0)
  408f4b:	repz dec esp
  408f4d:	aas    
  408f4e:	add    al,BYTE PTR [ebp+0x24]
  408f51:	inc    ebx
  408f52:	es inc edx
  408f54:	aad    0xdc
  408f56:	cmp    esi,DWORD PTR [edx+0x5f497ab7]
  408f5c:	or     al,0xd7
  408f5e:	(bad)  
  408f5f:	popf   
  408f60:	fsubr  st(0),st
  408f62:	loopne 0x408eee
  408f64:	shl    BYTE PTR [esi],0x4f
  408f67:	push   eax
  408f68:	fisub  DWORD PTR [eax-0x329d7f47]
  408f6e:	mov    ch,0x5e
  408f70:	mov    eax,ds:0x8df74b3f
  408f75:	mov    esp,0x46296c0f
  408f7a:	cmp    al,0x20
  408f7c:	xor    ecx,eax
  408f7e:	xchg   esp,eax
  408f7f:	mov    bh,0x78
  408f81:	cs int3 
  408f83:	dec    edi
  408f84:	or     DWORD PTR ds:0xa629b22c,ebp
  408f8a:	adc    DWORD PTR [edi-0x7e],0x8f1a9fbd
  408f91:	sbb    eax,0x6872e4b3
  408f96:	and    bl,dl
  408f98:	sahf   
  408f99:	inc    edx
  408f9a:	sbb    BYTE PTR [ebp+eiz*2-0x69],0x66
  408f9f:	leave  
  408fa0:	pusha  
  408fa1:	in     al,0xd5
  408fa3:	stos   DWORD PTR es:[edi],eax
  408fa4:	push   esp
  408fa5:	mov    eax,ds:0xc80003f0
  408faa:	xor    ch,ah
  408fac:	push   ds
  408fad:	mov    ebx,DWORD PTR [edi]
  408faf:	cmp    BYTE PTR [ebp-0xdd98f23],cl
  408fb5:	mov    edi,DWORD PTR [eax+0x3c]
  408fb8:	or     al,0xc0
  408fba:	retf   
  408fbb:	jo     0x409019
  408fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fbe:	popa   
  408fbf:	jno    0x40903e
  408fc1:	aam    0x65
  408fc3:	jns    0x408f75
  408fc5:	or     bh,BYTE PTR [ebx+0x61]
  408fc8:	sti    
  408fc9:	xchg   edi,eax
  408fca:	out    0x47,al
  408fcc:	popa   
  408fcd:	test   BYTE PTR [edi],bh
  408fcf:	mov    edx,0x533c4745
  408fd4:	mov    edi,0x522fedb8
  408fd9:	(bad)  [esi-0x1a8f9b5b]
  408fdf:	adc    ecx,DWORD PTR [ebx]
  408fe1:	xchg   BYTE PTR [ecx+0x1b],dl
  408fe4:	xchg   ecx,eax
  408fe5:	outs   dx,BYTE PTR ds:[esi]
  408fe6:	add    ecx,esp
  408fe8:	sbb    al,BYTE PTR [edx]
  408fea:	repz sbb al,BYTE PTR [ebx]
  408fed:	sar    BYTE PTR [ebp+0x7f015cd3],0x84
  408ff4:	sbb    esp,DWORD PTR [ecx+0x516573a4]
  408ffa:	mov    ds:0xde61173d,eax
  408fff:	test   cl,ch
  409001:	sub    DWORD PTR [eax],edi
  409003:	add    ebx,ebp
  409005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409006:	add    al,0xf0
  409008:	push   es
  409009:	dec    eax
  40900a:	int3   
  40900b:	push   ds
  40900c:	xsha256 (bad)
  40900d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40900e:	adc    dl,BYTE PTR [ebx-0x43]
  409011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409012:	mov    BYTE PTR ds:0x77d5d03f,dh
  409018:	add    ch,cl
  40901a:	out    dx,eax
  40901b:	cmp    BYTE PTR [esi],ch
  40901d:	mov    edx,0x4af71a86
  409022:	push   edi
  409023:	sub    DWORD PTR [edi],edx
  409025:	add    dl,BYTE PTR [edx+0x6be98dcd]
  40902b:	lea    ecx,[ebx-0x1b]
  40902e:	fsubr  QWORD PTR [ecx-0x4f1b2267]
  409034:	into   
  409035:	addr16 cmp eax,0xa54372f1
  40903b:	push   edi
  40903c:	pop    ss
  40903d:	jmp    0x13fd:0x46d98543
  409044:	xor    DWORD PTR [ecx+eax*8+0x2eb692ae],0xffffffaa
  40904c:	mov    esi,0xa656d006
  409051:	ror    ch,cl
  409053:	aaa    
  409054:	pop    ds
  409055:	pop    esp
  409056:	test   BYTE PTR ds:0xeb633ee1,0x4b
  40905d:	push   eax
  40905e:	mov    dl,0xd0
  409060:	pop    edi
  409061:	int3   
  409062:	jge    0x408ff6
  409064:	sbb    eax,DWORD PTR [ebx+0x1c]
  409067:	mov    ds:0x2678f964,al
  40906c:	mov    al,0xf
  40906e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40906f:	stos   DWORD PTR es:[edi],eax
  409070:	and    al,0xdf
  409072:	imul   ebx,esi,0x56
  409075:	es mov eax,0x3fda5d76
  40907b:	xchg   edx,eax
  40907c:	scas   al,BYTE PTR es:[edi]
  40907d:	iret   
  40907e:	jmp    0xac2b:0x77c10a2d
  409085:	xor    DWORD PTR [ebp+ecx*8+0x45bbb632],esp
  40908c:	mov    eax,0xc53a43e8
  409091:	jp     0x40908a
  409093:	add    eax,0x908618d8
  409098:	jle    0x40909d
  40909a:	fcom   st(1)
  40909c:	test   eax,0xb766abe6
  4090a1:	sbb    eax,0xb2b16914
  4090a6:	aas    
  4090a7:	mov    al,ds:0x3c7d7eb6
  4090ac:	cmp    dl,BYTE PTR [ecx]
  4090ae:	xchg   ebp,eax
  4090af:	les    edx,FWORD PTR [ecx-0x4e0e8b87]
  4090b5:	xor    BYTE PTR [esi-0x7e],al
  4090b8:	out    0xd2,eax
  4090ba:	xor    eax,0x9a792f6f
  4090bf:	aas    
  4090c0:	aad    0xa5
  4090c2:	add    bh,dh
  4090c4:	out    0x66,al
  4090c6:	pop    es
  4090c7:	xchg   BYTE PTR [edx+0x4b],dl
  4090ca:	stos   DWORD PTR es:[edi],eax
  4090cb:	cmc    
  4090cc:	jg     0x40911f
  4090ce:	push   esp
  4090cf:	(bad)  
  4090d0:	je     0x409133
  4090d2:	cwde   
  4090d3:	xchg   ecx,eax
  4090d4:	test   al,0x8e
  4090d6:	cld    
  4090d7:	push   cs
  4090d8:	fld    DWORD PTR [eax]
  4090da:	(bad)  
  4090db:	pop    edi
  4090dc:	mov    al,BYTE PTR [edi]
  4090de:	hlt    
  4090df:	(bad)  
  4090e0:	or     ah,al
  4090e2:	mov    al,ds:0xb0aae53d
  4090e7:	sub    ch,BYTE PTR [ecx+0x56889105]
  4090ed:	aas    
  4090ee:	fstp   QWORD PTR [edx]
  4090f0:	pop    esp
  4090f1:	jno    0x409147
  4090f3:	retf   
  4090f4:	mov    ah,0xd9
  4090f6:	xlat   BYTE PTR ds:[ebx]
  4090f7:	jl     0x409080
  4090f9:	mov    ebx,esi
  4090fb:	aaa    
  4090fc:	aad    0x6c
  4090fe:	or     BYTE PTR [eax],al
  409100:	(bad)  
  409101:	sbb    ah,bl
  409103:	mov    ebp,0xa5279f7a
  409108:	mov    edx,0x9840d7b
  40910d:	jne    0x409129
  40910f:	jp     0x40914b
  409111:	sbb    al,al
  409113:	mov    dl,0xf2
  409115:	aas    
  409116:	pop    es
  409117:	xchg   esp,eax
  409118:	cmp    eax,0x3203c3c5
  40911d:	push   0x17
  40911f:	mov    ds:0x10cd297e,al
  409124:	sahf   
  409125:	sub    bh,cl
  409127:	mov    dh,0xc1
  409129:	retf   
  40912a:	cmp    esp,ecx
  40912c:	push   es
  40912d:	(bad)  [eax-0x33377b18]
  409133:	xor    DWORD PTR [esi-0x3bb8903c],0xc6b8a765
  40913d:	push   0x953a1d39
  409142:	or     eax,0x9c4a0421
  409147:	pop    ebp
  409148:	es mov ebx,0x4963222c
  40914e:	sar    BYTE PTR [edi-0x27cc5e96],cl
  409154:	adc    eax,0x20fb7c48
  409159:	sub    ebx,eax
  40915b:	mov    cl,0xfa
  40915d:	xchg   esp,eax
  40915e:	icebp  
  40915f:	sahf   
  409160:	mov    cl,0xa2
  409162:	and    eax,0xc45583ab
  409167:	jecxz  0x409112
  409169:	clc    
  40916a:	or     edx,esi
  40916c:	stc    
  40916d:	jb     0x409187
  40916f:	imul   ebx,DWORD PTR [ebx+edx*2+0x75],0x7c
  409174:	push   ecx
  409175:	fimul  DWORD PTR [edi]
  409177:	dec    ebx
  409178:	out    dx,eax
  409179:	mov    bl,BYTE PTR [ebp-0x61]
  40917c:	push   ecx
  40917d:	pop    edx
  40917e:	(bad)  
  40917f:	in     eax,dx
  409180:	dec    ebp
  409181:	cmp    DWORD PTR [ecx+0x5d],eax
  409184:	and    cl,BYTE PTR [ebx+0x2d]
  409187:	frstor [esi-0x20]
  40918a:	jae    0x40919e
  40918c:	pop    es
  40918d:	and    DWORD PTR [ebp-0x5ad0dd22],ecx
  409193:	adc    DWORD PTR [ecx+0x69],0xb
  409197:	add    bl,BYTE PTR [edi-0x3866dc3e]
  40919d:	mov    dh,0xef
  40919f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091a0:	push   es
  4091a1:	cmp    al,0x81
  4091a3:	mov    ebp,edx
  4091a5:	or     cl,ch
  4091a7:	nop
  4091a8:	in     eax,dx
  4091a9:	adc    bl,ah
  4091ab:	es inc esp
  4091ad:	sti    
  4091ae:	adc    BYTE PTR [ecx+0x4e67015f],dl
  4091b4:	and    edx,DWORD PTR ss:[ebp+0x30]
  4091b8:	ds enter 0x55d1,0x36
  4091bd:	sub    ecx,DWORD PTR [edi-0x26]
  4091c0:	aaa    
  4091c1:	cmp    eax,0x95cfd1d8
  4091c6:	xor    al,0xe1
  4091c8:	das    
  4091c9:	pusha  
  4091ca:	and    dl,al
  4091cc:	mov    esi,0x4c358a65
  4091d1:	neg    DWORD PTR [ebp-0x7303957f]
  4091d7:	xchg   ebx,eax
  4091d8:	dec    edx
  4091d9:	push   eax
  4091da:	jle    0x409240
  4091dc:	xchg   BYTE PTR [edx-0x496cabc1],dl
  4091e2:	repz add eax,0xafc88bf6
  4091e8:	inc    ecx
  4091e9:	mov    ds:0x66b711b,eax
  4091ee:	cmp    DWORD PTR [esi+0x73],edi
  4091f1:	arpl   WORD PTR [edx+0x1982c5bd],dx
  4091f7:	sub    DWORD PTR [edi],ebx
  4091f9:	pop    edx
  4091fa:	cmp    BYTE PTR [eax],al
  4091fc:	pop    esp
  4091fe:	(bad)  
  4091ff:	cmp    eax,0x2b435c08
  409204:	mov    bh,0x3f
  409206:	addr16 jbe 0x40926f
  409209:	sub    DWORD PTR [ebp+0x6edd7485],ecx
  40920f:	jo     0x4091d1
  409211:	nop
  409212:	iret   
  409213:	add    eax,0x60087e7
  409218:	lds    esp,FWORD PTR [ecx+0x21a53900]
  40921e:	xchg   edi,eax
  40921f:	mov    esi,0xc471af02
  409224:	inc    edi
  409225:	jne    0x409257
  409227:	jns    0x4091fa
  409229:	mov    ecx,0xdea78227
  40922e:	ret    0x480f
  409231:	push   ebp
  409232:	mov    al,0xd5
  409234:	imul   ebx,DWORD PTR [ebp-0x35bb1ad3],0x56
  40923b:	sti    
  40923c:	and    al,0x98
  40923e:	cmp    eax,0xfc7bedff
  409243:	fld    DWORD PTR [edi-0x7f836b96]
  409249:	dec    dx
  40924b:	pusha  
  40924c:	sbb    al,0xa4
  40924e:	mov    esi,0xac04a44d
  409253:	data16 ja 0x4091f6
  409256:	lods   eax,DWORD PTR ds:[esi]
  409257:	xchg   BYTE PTR [eax-0x3036900e],dl
  40925d:	loope  0x40922b
  40925f:	mov    al,ds:0x398e60aa
  409264:	retf   0xf652
  409267:	je     0x4092a8
  409269:	adc    ecx,ecx
  40926b:	ret    
  40926c:	std    
  40926d:	push   ecx
  40926e:	adc    eax,DWORD PTR [edx-0x10dd8352]
  409274:	adc    al,0x0
  409276:	cmp    al,0xd
  409278:	and    BYTE PTR [ecx],ch
  40927a:	lods   al,BYTE PTR ds:[esi]
  40927b:	jecxz  0x409256
  40927d:	call   0x32c0:0x77a14df4
  409284:	in     al,dx
  409285:	pop    ss
  409286:	and    ah,BYTE PTR [ebp-0x6c]
  409289:	adc    esi,DWORD PTR [ebx]
  40928b:	sub    dl,BYTE PTR [eax*2+0x26dfc05c]
  409292:	clc    
  409293:	imul   ebp,DWORD PTR [esi-0x42a1234c],0x6adb8452
  40929d:	out    0xc2,al
  40929f:	mov    al,0x9c
  4092a1:	or     BYTE PTR [esi],cl
  4092a3:	into   
  4092a4:	stos   DWORD PTR es:[edi],eax
  4092a5:	in     eax,0x35
  4092a7:	pop    esi
  4092a8:	in     al,dx
  4092a9:	(bad)  
  4092aa:	mov    bl,0x64
  4092ac:	inc    edx
  4092ad:	lahf   
  4092ae:	push   edi
  4092af:	sbb    ch,BYTE PTR [ebp-0x1314670a]
  4092b5:	rol    BYTE PTR [ecx-0x516082e5],cl
  4092bb:	or     eax,0x895edd95
  4092c0:	push   edi
  4092c2:	inc    ebp
  4092c3:	ret    
  4092c4:	mov    ah,0xf5
  4092c6:	jae    0x4092c4
  4092c8:	xchg   edx,eax
  4092c9:	or     esi,DWORD PTR [bx]
  4092cc:	std    
  4092cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092ce:	adc    bh,BYTE PTR [edx+0x25]
  4092d1:	jp     0x4092aa
  4092d3:	scas   eax,DWORD PTR es:[edi]
  4092d4:	xchg   ebx,eax
  4092d5:	sub    DWORD PTR [edi+0x46ac8e8f],ecx
  4092db:	lock in al,dx
  4092dd:	stos   DWORD PTR es:[edi],eax
  4092de:	or     DWORD PTR ds:0xbc45e99a,edx
  4092e4:	vpsrlw xmm3,xmm3,XMMWORD PTR [ebp*8-0x7a2b6dd]
  4092ed:	inc    esi
  4092ee:	in     al,0xca
  4092f0:	jecxz  0x409307
  4092f2:	or     al,0x76
  4092f4:	cwde   
  4092f5:	mov    al,0xf7
  4092f7:	daa    
  4092f8:	sub    DWORD PTR [esi],edx
  4092fa:	jno    0x4092b6
  4092fc:	xchg   ebx,eax
  4092fd:	push   edx
  4092fe:	inc    ecx
  4092ff:	leave  
  409300:	cs xor edi,ebp
  409303:	unpcklps xmm5,xmm7
  409306:	and    ebx,DWORD PTR [esi+0x191e94c6]
  40930c:	imul   edx,DWORD PTR [ecx+ebp*4],0x5e
  409310:	into   
  409311:	lds    ebp,FWORD PTR [edi-0x19b750b3]
  409317:	mov    esi,0xcf20c30b
  40931c:	popf   
  40931d:	xchg   ebp,eax
  40931e:	mov    ah,0xdf
  409320:	test   eax,0x35c4f3f
  409325:	test   DWORD PTR [eax],esp
  409327:	xor    dl,ch
  409329:	fadd   QWORD PTR [edx]
  40932b:	push   ebx
  40932c:	cmp    BYTE PTR [eax],cl
  40932e:	(bad)  
  40932f:	xchg   ecx,eax
  409330:	mov    ds:0xf126ab4f,eax
  409335:	mov    ch,0x1f
  409337:	test   dl,bh
  409339:	loopne 0x409311
  40933b:	xor    ebp,esi
  40933d:	xchg   DWORD PTR [esi-0x350140bf],eax
  409343:	scas   al,BYTE PTR es:[edi]
  409344:	or     al,BYTE PTR [eax]
  409346:	xchg   dl,bl
  409348:	in     al,0x18
  40934a:	les    edi,FWORD PTR [ebp+0x1c74c22d]
  409350:	scas   eax,DWORD PTR es:[edi]
  409351:	aad    0x43
  409353:	cmp    DWORD PTR [eax-0x43],ebp
  409356:	mov    cl,0x80
  409358:	gs pop ss
  40935a:	pop    ecx
  40935b:	in     al,0xe8
  40935d:	push   0x5f8e70b2
  409362:	div    bh
  409364:	mov    DWORD PTR [eax+0x4fa41c3f],esp
  40936a:	sub    ch,ah
  40936c:	jp     0x4093c2
  40936e:	or     BYTE PTR [edi-0x74bfbd7f],al
  409374:	sahf   
  409375:	fsubr  DWORD PTR [edx]
  409377:	ss dec edx
  409379:	std    
  40937a:	aas    
  40937b:	push   ecx
  40937c:	stos   BYTE PTR es:[edi],al
  40937d:	jae    0x4093e4
  40937f:	add    al,0x6b
  409381:	xchg   edi,eax
  409382:	mov    bh,bh
  409384:	jo     0x4093b6
  409386:	adc    al,0xfc
  409388:	xchg   cl,bl
  40938a:	push   esi
  40938b:	in     eax,0xf9
  40938d:	cwde   
  40938e:	imul   ecx,DWORD PTR ds:0x902fe942,0x455ec542
  409398:	ror    DWORD PTR [ebp+0x9ecd3a5],cl
  40939e:	or     ebx,esp
  4093a0:	mov    ss,WORD PTR cs:[esi-0x3c5aa3d2]
  4093a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093a8:	retf   0xc188
  4093ab:	xchg   DWORD PTR [edx+0x385489d5],eax
  4093b1:	add    bh,BYTE PTR [esp+eax*4-0x6e]
  4093b5:	pop    ecx
  4093b6:	call   0x499ae8f1
  4093bb:	jl     0x4093e7
  4093bd:	inc    esp
  4093be:	dec    ebp
  4093bf:	iret   
  4093c0:	shl    BYTE PTR [ecx+0x75],1
  4093c3:	adc    bh,BYTE PTR [edi]
  4093c5:	cmp    eax,0xb3f2c460
  4093ca:	xor    ch,BYTE PTR [ebx-0x54]
  4093cd:	icebp  
  4093ce:	or     edi,eax
  4093d0:	rcr    BYTE PTR [ebx],1
  4093d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093d3:	xor    BYTE PTR [esi],dl
  4093d5:	pop    ebx
  4093d6:	scas   eax,DWORD PTR es:[edi]
  4093d7:	jecxz  0x409373
  4093d9:	les    edi,FWORD PTR [ecx]
  4093db:	cmp    bh,cl
  4093dd:	pop    es
  4093de:	sbb    al,ch
  4093e0:	mov    DWORD PTR [edi+0x625b5379],0x835811fd
  4093ea:	fchs   
  4093ec:	loope  0x409370
  4093ee:	pop    esi
  4093ef:	mov    cl,0x3c
  4093f1:	add    al,0xfc
  4093f3:	and    DWORD PTR [ebp+edi*2-0xdb3c56b],0x34
  4093fb:	xchg   ecx,eax
  4093fc:	je     0x40944e
  4093fe:	fistp  DWORD PTR [ebp+0xe0e8f51]
  409404:	pop    ds
  409405:	mov    eax,0xdf054694
  40940a:	out    dx,al
  40940b:	cmp    esp,DWORD PTR [ecx]
  40940d:	out    dx,eax
  40940e:	sbb    ch,BYTE PTR [ecx-0x19]
  409411:	movlps QWORD PTR [ebp-0x9d10e52],xmm0
  409418:	(bad)  
  409419:	ins    BYTE PTR es:[edi],dx
  40941a:	in     al,0x0
  40941c:	(bad)  
  40941d:	xchg   esi,eax
  40941e:	dec    ebx
  40941f:	ins    DWORD PTR es:[edi],dx
  409420:	xlat   BYTE PTR ds:[ebx]
  409421:	jo     0x4093fe
  409423:	popa   
  409424:	rcr    DWORD PTR [eax-0x35],1
  409427:	mov    DWORD PTR [ebx-0x61],edi
  40942a:	mov    al,ds:0x80813104
  40942f:	xlat   BYTE PTR ds:[ebx]
  409430:	dec    ecx
  409431:	mov    edi,0xf93bce05
  409436:	lods   al,BYTE PTR ds:[esi]
  409437:	pop    ss
  409438:	dec    eax
  409439:	in     al,dx
  40943a:	retf   0xe362
  40943d:	jmp    0x713:0x9b17d0a8
  409444:	(bad)  
  409445:	nop
  409446:	pop    edx
  409447:	js     0x409489
  409449:	fstp   TBYTE PTR [ecx-0x1c6a10dd]
  40944f:	shl    DWORD PTR [eax],0xf1
  409452:	pushf  
  409453:	dec    esp
  409454:	push   ebp
  409455:	or     eax,DWORD PTR [eax-0x25]
  409458:	and    DWORD PTR [edi],eax
  40945a:	ja     0x4094bf
  40945c:	shr    BYTE PTR [ebp+0x40a787b],1
  409462:	sbb    eax,DWORD PTR [ebx-0x6b0a11b]
  409468:	scas   al,BYTE PTR es:[edi]
  409469:	jbe    0x4094e9
  40946b:	sub    ah,BYTE PTR [esi+0x6f]
  40946e:	and    bl,bl
  409470:	inc    eax
  409471:	inc    edi
  409472:	(bad)  
  409473:	and    bl,BYTE PTR [eax]
  409475:	(bad)  
  409476:	in     eax,dx
  409477:	dec    edx
  409478:	nop
  409479:	imul   ebp,edx,0x22a72f1f
  40947f:	sbb    DWORD PTR [eax+0xe],0x1b721cab
  409486:	les    edx,FWORD PTR [ebp+edx*1-0x537865fb]
  40948d:	loopne 0x4094f6
  40948f:	xor    esp,DWORD PTR [ebx]
  409491:	push   edx
  409492:	jge    0x4094f5
  409494:	imul   eax,DWORD PTR [ecx+0x27],0xf1ca9a66
  40949b:	dec    edx
  40949c:	or     BYTE PTR [ebx-0x60e64985],al
  4094a2:	sbb    al,0xd3
  4094a4:	bsf    eax,DWORD PTR [ecx-0x402f14ef]
  4094ab:	xor    al,0x74
  4094ad:	and    BYTE PTR [edi-0x9],cl
  4094b0:	cmp    dh,BYTE PTR [ebx-0x62]
  4094b3:	dec    esi
  4094b4:	mov    bl,0x70
  4094b6:	push   edx
  4094b7:	dec    edx
  4094b8:	sbb    dl,ah
  4094ba:	mov    edi,0x91c33ccb
  4094bf:	sbb    dh,BYTE PTR [edi]
  4094c1:	xor    eax,0xfc8f722f
  4094c6:	xlat   BYTE PTR ds:[ebx]
  4094c7:	loope  0x4094ac
  4094c9:	out    dx,eax
  4094ca:	dec    ebp
  4094cb:	in     eax,0xdc
  4094cd:	and    ebx,DWORD PTR [ebp+0x43b599]
  4094d3:	cs leavew 
  4094d6:	push   edi
  4094d7:	sbb    eax,0xe9680ee9
  4094dc:	add    DWORD PTR [esi],ebp
  4094de:	mov    cl,0x8e
  4094e0:	jp     0x409503
  4094e2:	hlt    
  4094e3:	xor    BYTE PTR [edi+0x73],ah
  4094e6:	push   ss
  4094e7:	inc    esi
  4094e8:	inc    eax
  4094e9:	retf   0xe3f8
  4094ec:	call   0x6c0c8d93
  4094f1:	ret    0x7a0a
  4094f4:	stos   BYTE PTR es:[edi],al
  4094f5:	jmp    0x40955d
  4094f7:	leave  
  4094f8:	pop    ss
  4094f9:	and    eax,0xe60ad763
  4094fe:	lahf   
  4094ff:	aas    
  409500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409501:	imul   esi,DWORD PTR [edi-0x9ca8f49],0x88a90e93
  40950b:	or     al,0xa7
  40950d:	cld    
  40950e:	retf   0xc62c
  409511:	push   eax
  409512:	outs   dx,BYTE PTR ds:[esi]
  409513:	scas   eax,DWORD PTR es:[edi]
  409514:	mov    edx,0x5c60fa9f
  409519:	ror    BYTE PTR [edi],1
  40951b:	mov    eax,0xca4ab0db
  409520:	lods   eax,DWORD PTR ds:[esi]
  409521:	ffree  st(4)
  409523:	push   ecx
  409524:	xchg   BYTE PTR [ebx-0x5497a29d],dh
  40952a:	dec    ebp
  40952b:	push   esp
  40952c:	and    DWORD PTR [edi],0x5902380
  409532:	xor    DWORD PTR [ebp+0x29],0x8957208
  409539:	imul   eax,DWORD PTR [ebx-0x71d6439f],0xe
  409540:	jle    0x4094f1
  409542:	in     al,0x93
  409544:	sbb    eax,0x41204f2f
  409549:	and    eax,eax
  40954b:	push   ds
  40954c:	cmp    esi,esi
  40954e:	and    eax,0x19e1d304
  409553:	jo     0x4095a9
  409555:	sbb    BYTE PTR [ecx-0x78],cl
  409558:	cli    
  409559:	cmp    cl,ah
  40955b:	xchg   ecx,eax
  40955c:	sbb    dl,BYTE PTR [esp+ebp*4-0x78c2e423]
  409563:	jne    0x409581
  409565:	xchg   ebx,eax
  409566:	push   0x3
  409568:	iret   
  409569:	in     al,dx
  40956a:	adc    BYTE PTR [ebp+ebp*1-0x3e],ch
  40956e:	mov    dl,0x59
  409571:	dec    edx
  409572:	mov    edx,0xc1d3d36c
  409577:	out    0x31,al
  409579:	sbb    eax,0x49c4dfbc
  40957e:	xchg   esp,eax
  40957f:	and    ebp,DWORD PTR [edi+0x62f6fdde]
  409585:	fwait
  409586:	rcr    DWORD PTR [eax+esi*4+0x6a529bc2],cl
  40958d:	pop    ss
  40958e:	loop   0x409605
  409590:	dec    ebx
  409591:	mov    eax,0x7e746ef5
  409596:	and    al,BYTE PTR [ebp-0x68]
  409599:	sub    BYTE PTR [eax+0x3f],ch
  40959c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40959d:	push   eax
  40959e:	(bad)  
  4095a0:	fadd   DWORD PTR [ebx-0xbad7904]
  4095a6:	mov    ebp,0x4a474f5b
  4095ab:	mov    ebx,0xc356714b
  4095b0:	jnp    0x4095b4
  4095b2:	in     eax,0x3b
  4095b4:	push   cs
  4095b5:	loopne 0x409608
  4095b7:	mov    edi,DWORD PTR [ecx-0x100ceaee]
  4095bd:	fadd   st(0),st
  4095bf:	icebp  
  4095c0:	add    BYTE PTR [ebx+0x3a],dh
  4095c3:	les    ebp,FWORD PTR [ebx+ebp*8-0x6fd9e74f]
  4095ca:	ret    0x5f7c
  4095cd:	sbb    eax,ebx
  4095cf:	and    cl,BYTE PTR [ecx]
  4095d1:	sti    
  4095d2:	fst    st(1)
  4095d4:	mov    ds:0x38073880,eax
  4095d9:	fcom   DWORD PTR ds:0x7ef8d7de
  4095df:	add    eax,DWORD PTR [esi]
  4095e1:	add    ecx,DWORD PTR [eax+0x1f]
  4095e4:	xor    DWORD PTR [eax],edi
  4095e6:	xchg   ebp,eax
  4095e7:	jge    0x409596
  4095e9:	adc    eax,0x5145ae50
  4095ee:	xchg   ebp,eax
  4095ef:	add    esi,ebp
  4095f1:	fsubr  QWORD PTR ds:0xa980f7b3
  4095f7:	jo     0x409649
  4095f9:	sub    al,BYTE PTR [esi-0x1e7f7df]
  4095ff:	pop    ss
  409600:	jnp    0x409646
  409602:	push   edi
  409603:	mov    al,0xaf
  409605:	mov    fs:0x69646a68,al
  40960b:	mov    es,WORD PTR [edx]
  40960d:	dec    ecx
  40960e:	inc    esp
  40960f:	sbb    bl,BYTE PTR [edx+0x64]
  409612:	add    eax,0xd730d5e2
  409617:	icebp  
  409618:	mov    bl,0x9c
  40961a:	rcr    ebx,0xcd
  40961d:	sub    ch,BYTE PTR [ebp+0x30]
  409620:	and    BYTE PTR [esi],cl
  409622:	test   eax,0xd4151ffc
  409627:	xor    eax,0x8af52de0
  40962c:	test   DWORD PTR [ebp-0x3],edx
  40962f:	fild   DWORD PTR [esi-0x45]
  409632:	add    eax,0x5dee0812
  409637:	fidiv  WORD PTR [esi+0x3e62f345]
  40963d:	fs xor ah,0xfb
  409641:	pop    ds
  409642:	jnp    0x409624
  409644:	jns    0x4095e0
  409646:	inc    ebx
  409647:	imul   esp,DWORD PTR [eax+ebp*4+0x7014924f],0xe191945b
  409652:	push   ebx
  409653:	pop    esi
  409654:	mov    edx,0xf5cd481d
  409659:	mov    ebx,0xae3a0573
  40965e:	(bad)  
  40965f:	dec    ebp
  409660:	pushf  
  409661:	pusha  
  409662:	push   ecx
  409663:	sub    cl,BYTE PTR [esi-0x4e]
  409666:	pop    esi
  409667:	cmp    ebp,ecx
  409669:	push   ds
  40966a:	lock jg 0x409654
  40966d:	add    dl,BYTE PTR [eax+0x65ab186a]
  409673:	fmul   st(3),st
  409675:	aam    0xa8
  409677:	je     0x40965f
  409679:	sbb    esp,DWORD PTR [eax+eiz*1]
  40967c:	mov    dh,0x93
  40967e:	or     al,0x9c
  409680:	sub    DWORD PTR [ebx],0xc7a9a8d
  409686:	out    dx,al
  409687:	xchg   ebp,eax
  409688:	jbe    0x409640
  40968a:	ror    BYTE PTR [eax+0x1f2d763e],0x16
  409691:	std    
  409692:	push   eax
  409693:	inc    ecx
  409694:	ror    DWORD PTR [edi-0x3c62c4f1],cl
  40969a:	test   BYTE PTR [eax+0x20],cl
  40969d:	sub    esp,DWORD PTR [eax-0x17f6ce40]
  4096a3:	test   al,0xb8
  4096a5:	xor    BYTE PTR [ebp-0x36],ch
  4096a8:	(bad)  
  4096a9:	xor    BYTE PTR [ebp-0x40748920],0xfe
  4096b0:	cmp    eax,0xbc37c974
  4096b5:	outs   dx,BYTE PTR ds:[esi]
  4096b6:	stos   BYTE PTR es:[edi],al
  4096b7:	out    0x45,al
  4096b9:	add    dh,BYTE PTR [ecx+edi*2]
  4096bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096be:	rol    bl,0x35
  4096c1:	jmp    FWORD PTR [esp+esi*4]
  4096c4:	inc    eax
  4096c5:	in     al,0xd7
  4096c7:	out    dx,al
  4096c8:	sbb    al,0x4
  4096ca:	shl    DWORD PTR [ecx],cl
  4096cc:	mov    al,0x80
  4096ce:	shl    eax,cl
  4096d0:	lds    ebx,FWORD PTR [esi]
  4096d2:	dec    edi
  4096d3:	add    BYTE PTR [edi+0x29],cl
  4096d6:	fs dec al
  4096d9:	jmp    0x4096ad
  4096db:	idiv   BYTE PTR [eax]
  4096dd:	call   0xf1f701d7
  4096e2:	int3   
  4096e3:	retf   0xcecd
  4096e6:	xor    dh,BYTE PTR [edx-0x64dafb86]
  4096ec:	imul   edx,DWORD PTR [edi+esi*8],0x15
  4096f0:	push   0x39
  4096f2:	dec    ecx
  4096f3:	xchg   esp,eax
  4096f4:	xor    DWORD PTR [ecx],esp
  4096f6:	iret   
  4096f7:	pop    ecx
  4096f8:	jle    0x4096fc
  4096fa:	inc    ebx
  4096fb:	adc    al,0x28
  4096fd:	xor    edx,0xffffffe8
  409700:	popa   
  409701:	or     DWORD PTR [ebx],ecx
  409703:	mov    bh,dl
  409705:	xchg   edx,eax
  409706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409707:	or     al,0x53
  409709:	(bad)  
  40970a:	clc    
  40970b:	mov    cl,0x8b
  40970d:	std    
  40970e:	cmp    ah,dh
  409710:	call   0xd9a4:0x7301f0a2
  409717:	les    edi,FWORD PTR [edi+0x5b]
  40971a:	leave  
  40971b:	cdq    
  40971c:	in     al,0xd4
  40971e:	ficom  WORD PTR [ebx]
  409720:	sub    DWORD PTR [ebp+0x6d],ecx
  409723:	adc    BYTE PTR [eax+0x65],ch
  409726:	jl     0x40975b
  409728:	fdiv   DWORD PTR [edi+ecx*4-0x10]
  40972c:	inc    ecx
  40972d:	sbb    DWORD PTR [ebx+0x4e8e0081],ebp
  409733:	pop    esi
  409734:	add    dh,BYTE PTR [edi-0x34]
  409737:	jns    0x409731
  409739:	scas   eax,DWORD PTR es:[edi]
  40973a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40973b:	adc    edx,DWORD PTR [esi-0x5d]
  40973e:	test   eax,0x8d010010
  409743:	bound  esi,QWORD PTR [edx+0x289f349b]
  409749:	xchg   esp,edi
  40974b:	mov    cl,0x5c
  40974d:	or     DWORD PTR [esi-0x40],0x6f
  409751:	std    
  409752:	dec    edi
  409753:	mov    ebp,0xd6554333
  409758:	into   
  409759:	cmp    ebx,edi
  40975b:	clc    
  40975c:	fild   WORD PTR [esi]
  40975e:	hlt    
  40975f:	pop    ebp
  409760:	sar    BYTE PTR [ebx-0x31],cl
  409763:	lahf   
  409764:	jp     0x409717
  409766:	sub    al,ah
  409768:	dec    edi
  409769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40976a:	daa    
  40976b:	imul   edx,edi,0x75bf4d84
  409771:	jmp    0xf01:0x4a1e3407
  409778:	adc    BYTE PTR [esi+0x4ad0af90],bh
  40977e:	inc    ebx
  40977f:	xor    eax,esp
  409781:	not    BYTE PTR gs:[eax]
  409784:	cwde   
  409785:	jmp    0x4097f3
  409787:	jb     0x40978f
  409789:	sti    
  40978a:	ror    al,0xcb
  40978d:	lods   eax,DWORD PTR ds:[esi]
  40978e:	inc    ecx
  40978f:	jmp    esi
  409791:	cld    
  409792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409793:	test   eax,0x97c18f82
  409798:	frstor [esi]
  40979a:	leave  
  40979b:	out    dx,al
  40979c:	out    0xfd,al
  40979e:	add    eax,DWORD PTR [esi*8-0x304c3316]
  4097a5:	aaa    
  4097a6:	mov    dl,BYTE PTR [edx+0x60]
  4097a9:	dec    edx
  4097aa:	sbb    BYTE PTR [ebp+0x52daa560],dh
  4097b0:	dec    ebp
  4097b1:	ds pop ss
  4097b3:	imul   eax,DWORD PTR [ebx+0xb],0xffffffc2
  4097b7:	je     0x409804
  4097b9:	mov    edi,ebp
  4097bb:	rol    BYTE PTR [ebp+0x14],1
  4097be:	push   ecx
  4097bf:	js     0x4097c5
  4097c1:	repnz xchg ebx,eax
  4097c3:	xor    DWORD PTR [eax-0x45dce038],esi
  4097c9:	dec    eax
  4097ca:	stos   BYTE PTR es:[edi],al
  4097cb:	stc    
  4097cc:	aad    0xfa
  4097ce:	xchg   ecx,eax
  4097cf:	ja     0x4097d5
  4097d1:	(bad)  
  4097d2:	push   ebx
  4097d3:	ins    BYTE PTR es:[edi],dx
  4097d4:	pop    eax
  4097d5:	cmc    
  4097d6:	sbb    edx,esi
  4097d8:	xchg   edi,eax
  4097d9:	fstp   DWORD PTR [edx]
  4097db:	pop    ebp
  4097dc:	outs   dx,BYTE PTR ds:[esi]
  4097dd:	sub    eax,DWORD PTR [edi+0x572742d8]
  4097e3:	mul    DWORD PTR [ecx-0x554a2120]
  4097e9:	(bad)  
  4097ea:	sub    BYTE PTR [ecx-0x21f4ef15],dh
  4097f0:	stc    
  4097f1:	sub    al,0x19
  4097f3:	add    al,0x1e
  4097f5:	cli    
  4097f6:	neg    BYTE PTR [ecx-0x62]
  4097f9:	pop    ss
  4097fa:	xchg   ecx,eax
  4097fb:	add    eax,0x2fac51e7
  409800:	fiadd  DWORD PTR [ecx-0x5f806834]
  409806:	jle    0x409804
  409808:	stc    
  409809:	into   
  40980a:	add    BYTE PTR [ebp-0x54],ch
  40980d:	inc    esi
  40980e:	adc    eax,0xe13dd5f9
  409813:	push   0x8002e8ce
  409818:	xchg   ebx,eax
  409819:	mov    al,ds:0x5f2abde7
  40981e:	or     DWORD PTR [ecx-0x42],0x1742fd21
  409825:	and    eax,0x4d8920be
  40982a:	sub    esi,DWORD PTR ds:0x1bf72fd4
  409830:	xchg   ebx,eax
  409831:	iret   
  409832:	mov    al,ds:0x7af6691b
  409837:	jnp    0x4097cc
  409839:	xchg   esp,eax
  40983a:	cmc    
  40983b:	xchg   esi,ebp
  40983d:	hlt    
  40983e:	sbb    cl,bl
  409840:	sbb    BYTE PTR [edi+0x680454b7],bl
  409846:	ins    DWORD PTR es:[edi],dx
  409847:	inc    ebx
  409848:	out    0x23,eax
  40984a:	test   BYTE PTR [edx-0x11],dh
  40984d:	pop    ecx
  40984e:	mov    ds:0x5f5d1948,al
  409853:	push   cs
  409854:	test   al,0xeb
  409856:	in     al,dx
  409857:	lods   al,BYTE PTR ds:[esi]
  409858:	mov    ebp,0x6c23cd17
  40985d:	scas   al,BYTE PTR es:[edi]
  40985e:	shl    BYTE PTR [edx+0x6b],cl
  409861:	imul   esi,DWORD PTR [ebp-0x45],0x63
  409865:	mov    bl,0xfc
  409867:	leave  
  409868:	das    
  409869:	cmp    DWORD PTR [ecx+0x6e],edx
  40986c:	fcomp  DWORD PTR [eax]
  40986e:	adc    cl,BYTE PTR [ebx]
  409870:	xlat   BYTE PTR ds:[ebx]
  409871:	rol    DWORD PTR [edx-0x5a6e3054],1
  409877:	das    
  409878:	mov    WORD PTR [ecx+eiz*1],fs
  40987b:	adc    eax,DWORD PTR [ecx+ecx*8-0x46b0baea]
  409882:	and    eax,0x51d24767
  409887:	mov    eax,0xa9829710
  40988c:	pop    eax
  40988d:	repnz cmc 
  40988f:	gs inc ecx
  409891:	ret    0x3665
  409894:	cmp    BYTE PTR [ecx-0x71],al
  409897:	cmp    esi,DWORD PTR [edx+0x7e]
  40989a:	xor    BYTE PTR [esi+eiz*1],bh
  40989d:	adc    bh,ah
  40989f:	lods   eax,DWORD PTR ds:[esi]
  4098a0:	sar    DWORD PTR [edx+0x6fe11850],cl
  4098a6:	retf   
  4098a7:	dec    eax
  4098a8:	or     eax,0x192b4d56
  4098ad:	mov    edx,0xa8263cf1
  4098b2:	jne    0x4098cd
  4098b4:	stos   BYTE PTR es:[edi],al
  4098b5:	stos   BYTE PTR es:[edi],al
  4098b6:	mov    edx,0x142cee43
  4098bb:	jle    0x40990f
  4098bd:	(bad)  
  4098bf:	add    BYTE PTR [eax-0x1e],cl
  4098c2:	jno    0x409911
  4098c4:	sbb    ch,BYTE PTR [edx+eiz*1+0x3939d49d]
  4098cb:	or     bl,bh
  4098cd:	jge    0x4098ff
  4098cf:	sub    BYTE PTR [edi],bl
  4098d1:	mov    ch,0x20
  4098d3:	mov    ebp,0x2fbd6250
  4098d8:	out    dx,eax
  4098d9:	ret    0x20b4
  4098dc:	mov    bh,0x45
  4098de:	aam    0x6b
  4098e0:	push   esp
  4098e1:	es int3 
  4098e3:	cwde   
  4098e4:	ficom  DWORD PTR [esi+0x7d6dca17]
  4098ea:	inc    edi
  4098eb:	aam    0x6e
  4098ed:	(bad)  [ecx]
  4098ef:	ss enter 0xc537,0xa2
  4098f4:	pop    eax
  4098f5:	daa    
  4098f6:	retf   0x6121
  4098f9:	fs ss fucomp st(5)
  4098fd:	jmp    DWORD PTR [esi-0x4036ff07]
  409903:	xor    esp,DWORD PTR [eax+0x76]
  409906:	jmp    0xbaa37c64
  40990b:	es inc esi
  40990d:	fwait
  40990e:	pop    es
  40990f:	sub    al,0x90
  409911:	cmp    eax,0x997d22f9
  409916:	cmp    BYTE PTR [edi],bh
  409918:	adc    ch,BYTE PTR [esi]
  40991a:	ret    
  40991b:	(bad)  
  40991c:	mov    cl,0xeb
  40991e:	push   esi
  40991f:	ins    BYTE PTR es:[edi],dx
  409920:	xlat   BYTE PTR ds:[ebx]
  409921:	sub    eax,0x369cd4b7
  409926:	and    dh,BYTE PTR [ebx+0x217ccc9c]
  40992c:	xchg   BYTE PTR [ecx+0x64],cl
  40992f:	xchg   ebx,eax
  409930:	sub    cl,BYTE PTR ds:[edx+0x3556f91c]
  409937:	pop    edx
  409938:	mov    ah,0xf7
  40993a:	enter  0x181b,0xe8
  40993e:	pop    edi
  40993f:	adc    eax,DWORD PTR [edi+eax*1-0x54]
  409943:	inc    esp
  409944:	inc    esi
  409945:	push   ecx
  409946:	or     ah,BYTE PTR [ecx]
  409948:	add    al,0x75
  40994a:	mov    eax,ds:0xeb4813b8
  40994f:	(bad)  
  409950:	into   
  409951:	xchg   edx,eax
  409952:	mov    esp,fs
  409954:	adc    BYTE PTR [edx+0x19],dl
  409957:	xor    eax,eax
  409959:	sub    eax,0x41989776
  40995e:	mov    edx,DWORD PTR [ecx]
  409960:	lahf   
  409961:	shl    DWORD PTR [ebp-0x73],0x9f
  409965:	push   0x37
  409967:	xchg   esi,eax
  409968:	imul   BYTE PTR [ebx-0x5bec9db9]
  40996e:	add    al,0x62
  409970:	and    DWORD PTR [esi+0x5adb9a7b],ecx
  409976:	xchg   BYTE PTR [ecx-0x12],dh
  409979:	adc    al,0x99
  40997b:	xor    ecx,DWORD PTR gs:[edx+0x3873976d]
  409982:	lds    eax,FWORD PTR [eax+ebp*2+0x75]
  409986:	pop    es
  409987:	mov    bl,0x26
  409989:	aas    
  40998a:	ret    
  40998b:	jno    0x409970
  40998d:	xchg   ebx,eax
  40998e:	dec    ebp
  40998f:	sbb    eax,0x356927d6
  409994:	test   edx,esp
  409996:	jns    0x4099b8
  409998:	stos   DWORD PTR es:[edi],eax
  409999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40999a:	mov    ebp,0x1f2244f0
  40999f:	sub    DWORD PTR [ecx+0x69f62c19],edi
  4099a5:	fbstp  TBYTE PTR [ecx+0x48ea9791]
  4099ab:	inc    edi
  4099ac:	call   0xd754:0xb1a41cac
  4099b3:	dec    eax
  4099b4:	aas    
  4099b5:	test   al,0xb5
  4099b7:	out    0x94,eax
  4099b9:	sar    bl,1
  4099bb:	lds    ebx,FWORD PTR [edi+0x6e]
  4099be:	in     eax,dx
  4099bf:	(bad)  
  4099c0:	push   eax
  4099c1:	mov    ds:0x4f0ae6e7,eax
  4099c6:	ror    BYTE PTR [eax+eiz*8],0x26
  4099ca:	inc    ebx
  4099cb:	xchg   edx,eax
  4099cc:	ds xchg edx,eax
  4099ce:	mov    esi,0xb16bc21e
  4099d3:	bound  edx,QWORD PTR [ecx-0xe]
  4099d6:	mov    al,ds:0xf6fca1b9
  4099db:	(bad)  
  4099dc:	bnd jo 0x409997
  4099df:	jge    0x4099c3
  4099e1:	fs loope 0x409a24
  4099e4:	cmp    ecx,DWORD PTR [ebx]
  4099e6:	enter  0x6169,0x67
  4099ea:	out    0x23,eax
  4099ec:	(bad)  
  4099ed:	cmc    
  4099ee:	cld    
  4099ef:	dec    edi
  4099f0:	sbb    edx,esi
  4099f2:	cli    
  4099f3:	jle    0x409a20
  4099f5:	ss stc 
  4099f7:	inc    ecx
  4099f8:	(bad)  
  4099fa:	mov    ?,edi
  4099fc:	push   0xfb3737b4
  409a01:	bnd ret 
  409a03:	push   edi
  409a04:	leave  
  409a05:	pop    es
  409a06:	call   0xcae2347
  409a0b:	leave  
  409a0c:	jno    0x4099b9
  409a0e:	lds    ebx,FWORD PTR [edx+0x84abfcd]
  409a14:	mov    gs,WORD PTR [ebp+0x7cb61c42]
  409a1a:	xlat   BYTE PTR ds:[ebx]
  409a1b:	dec    esp
  409a1c:	(bad)
  409a1f:	mov    eax,ds:0xa0063504
  409a24:	popa   
  409a25:	jo     0x409a9f
  409a27:	sbb    al,0xa3
  409a29:	mov    edi,0x567ae263
  409a2e:	dec    ecx
  409a2f:	or     BYTE PTR [edx+0x786c246c],bl
  409a35:	sbb    al,0x72
  409a37:	out    dx,eax
  409a38:	xor    DWORD PTR [ecx-0x37],edx
  409a3b:	sbb    esp,DWORD PTR [ecx+0x33]
  409a3e:	jge    0x4099f3
  409a40:	mov    dl,BYTE PTR [eax+ebp*8+0x4b]
  409a44:	std    
  409a45:	daa    
  409a46:	leave  
  409a47:	and    al,0xce
  409a49:	test   eax,eax
  409a4b:	out    0xf7,eax
  409a4d:	jg     0x409a39
  409a4f:	call   0x7ddc5b6c
  409a54:	scas   al,BYTE PTR es:[edi]
  409a55:	inc    esp
  409a56:	cwde   
  409a57:	jmp    0x3cf3240d
  409a5c:	fimul  DWORD PTR [ebx-0x30]
  409a5f:	jmp    0x51d5:0xdee02e62
  409a66:	into   
  409a67:	fldcw  WORD PTR ds:0x3b16f73e
  409a6d:	inc    ebx
  409a6e:	seto   BYTE PTR [esi]
  409a71:	popf   
  409a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a73:	sbb    eax,edi
  409a75:	adc    dh,BYTE PTR [ebp+0x4a]
  409a78:	repnz pop esi
  409a7a:	test   DWORD PTR [ebp-0x21],0x4a0a4f01
  409a81:	push   ebx
  409a82:	and    bl,ch
  409a84:	jecxz  0x409a60
  409a86:	sbb    DWORD PTR [ecx],edi
  409a88:	pop    ebp
  409a89:	retf   0xfc9c
  409a8c:	mov    edx,0xf7fce865
  409a91:	mov    BYTE PTR [esi-0x77],0x7b
  409a95:	push   ss
  409a96:	sub    BYTE PTR [edx+0x6],ah
  409a99:	or     al,0x66
  409a9b:	and    edx,0xffffff8b
  409a9e:	dec    ebx
  409a9f:	je     0x409a46
  409aa1:	(bad)  
  409aa2:	adc    ebx,ebp
  409aa4:	add    al,0x5
  409aa6:	test   dh,0xca
  409aa9:	adc    cl,BYTE PTR [esi]
  409aab:	mov    BYTE PTR cs:[ebx],bl
  409aae:	push   ds
  409aaf:	fmul   DWORD PTR [ecx+ecx*4-0x4eb35d2b]
  409ab6:	test   eax,0x9c48ee00
  409abb:	jmp    0x79bfcacd
  409ac0:	dec    ecx
  409ac1:	mov    ebx,0x8d11be29
  409ac6:	add    eax,0x79ccb513
  409acb:	and    al,0x28
  409acd:	rcr    BYTE PTR [edi*4-0x7f9cefc9],1
  409ad4:	dec    esi
  409ad5:	out    dx,eax
  409ad6:	mov    ah,0x80
  409ad8:	push   ebp
  409ad9:	dec    edi
  409ada:	sub    ecx,edi
  409adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409add:	cld    
  409ade:	leave  
  409adf:	imul   ecx,DWORD PTR [esi+0x50],0x98ba6e4b
  409ae6:	call   0xbf0d:0x83e04a89
  409aed:	dec    esi
  409aee:	dec    ebx
  409aef:	inc    ebp
  409af0:	xor    BYTE PTR [edx-0x71f1c618],0x10
  409af7:	xchg   DWORD PTR [edi-0x7c],edx
  409afa:	repnz push 0xf2ab2c04
  409b00:	xchg   esi,eax
  409b01:	push   0x2079e58c
  409b06:	adc    edx,edx
  409b08:	jg     0x409ad8
  409b0a:	push   eax
  409b0b:	lods   al,BYTE PTR ds:[esi]
  409b0c:	(bad)  
  409b0d:	les    esi,FWORD PTR [ebp+0x58]
  409b10:	xor    ebp,DWORD PTR [esi]
  409b12:	mov    al,0x9
  409b14:	or     al,0x43
  409b16:	aaa    
  409b17:	sub    al,0x75
  409b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b1a:	repz shr BYTE PTR [esi-0x14],cl
  409b1e:	fldcw  WORD PTR [edx]
  409b20:	mov    ds:0xc52c5634,eax
  409b25:	mov    ebp,0x9bcd0f10
  409b2a:	sbb    eax,esi
  409b2c:	push   ds
  409b2d:	and    eax,DWORD PTR [ebx]
  409b2f:	(bad)
  409b32:	cs push 0xfffffff9
  409b35:	mov    ch,0x44
  409b37:	stc    
  409b38:	outs   dx,DWORD PTR ds:[esi]
  409b39:	fistp  QWORD PTR [ebx+0x68df30]
  409b3f:	lods   eax,DWORD PTR ds:[esi]
  409b40:	mov    eax,ss
  409b42:	inc    esp
  409b43:	jp     0x409b2b
  409b45:	dec    esi
  409b46:	fmul   st(3),st
  409b48:	(bad)  
  409b49:	das    
  409b4a:	cld    
  409b4b:	mov    ebx,0x72eb036e
  409b50:	nop
  409b51:	pop    ss
  409b52:	popf   
  409b53:	call   0x1308:0x91b02e55
  409b5a:	sbb    al,0xce
  409b5c:	jns    0x409b2d
  409b5e:	xchg   DWORD PTR [ebx-0x34],esp
  409b61:	pop    ecx
  409b62:	es iret 
  409b64:	pop    eax
  409b65:	imul   DWORD PTR [ebp-0x63]
  409b68:	dec    eax
  409b69:	rol    dh,cl
  409b6b:	sub    ah,BYTE PTR [ebp-0x3b]
  409b6e:	jge    0x409b5e
  409b70:	addr16 aaa 
  409b72:	push   ebp
  409b73:	pop    ss
  409b74:	aam    0xea
  409b76:	lods   eax,DWORD PTR ds:[esi]
  409b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b78:	adc    eax,0xd3d1348d
  409b7d:	xor    eax,0x105b8e4e
  409b82:	scas   al,BYTE PTR es:[edi]
  409b83:	or     bl,dh
  409b85:	xchg   DWORD PTR [ebx+0x1134502d],ebp
  409b8b:	ds sub eax,0xdf97fa61
  409b91:	imul   edi,DWORD PTR [esi+eiz*8],0xff7c36f7
  409b98:	das    
  409b99:	out    dx,al
  409b9a:	shl    DWORD PTR [edx+0x66520279],cl
  409ba0:	cs mov bl,0xb0
  409ba3:	ficomp WORD PTR [edx-0x6adb444f]
  409ba9:	jae    0x409b62
  409bab:	dec    ecx
  409bac:	xor    BYTE PTR [eax-0x3b],bh
  409baf:	xlat   BYTE PTR ds:[ebx]
  409bb0:	pop    ebp
  409bb1:	adc    edi,eax
  409bb3:	int3   
  409bb4:	(bad)  
  409bb5:	jnp    0x409bcc
  409bb7:	popa   
  409bb8:	test   al,0xb9
  409bba:	fsub   QWORD PTR [ebp+0xde5519c]
  409bc0:	inc    edi
  409bc1:	test   DWORD PTR [eax-0x26c2f45a],0x92d679ee
  409bcb:	sahf   
  409bcc:	jb     0x409c42
  409bce:	rol    BYTE PTR [esi-0x4a],1
  409bd1:	cmp    eax,0x85d798a3
  409bd6:	pop    ebx
  409bd7:	pop    ebx
  409bd8:	or     BYTE PTR [esi-0x23],ah
  409bdb:	push   ebp
  409bdc:	std    
  409bdd:	xchg   ebx,eax
  409bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bdf:	and    BYTE PTR [edx+0x7c5bb438],bh
  409be5:	pop    edx
  409be6:	jl     0x409b7d
  409be8:	cmp    BYTE PTR [ebx-0x360ffd08],al
  409bee:	pushf  
  409bef:	pop    edx
  409bf0:	adc    al,0xab
  409bf2:	push   0x50cc81dc
  409bf7:	fiadd  WORD PTR [esi+eiz*4-0x2f6567a0]
  409bfe:	jg     0x409beb
  409c00:	sub    ebp,DWORD PTR [ebx-0x65]
  409c03:	mov    edi,0xf752e225
  409c08:	fist   WORD PTR [eax*1-0x32ee76f6]
  409c0f:	or     dl,BYTE PTR ds:0x97b4aa21
  409c15:	sub    ecx,DWORD PTR [esp+edx*2]
  409c18:	push   edx
  409c19:	dec    ebx
  409c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c1b:	xchg   esp,eax
  409c1c:	and    DWORD PTR ds:0x2c6c8106,0xc5084e5b
  409c26:	mov    cl,BYTE PTR [ecx+0x6208060d]
  409c2c:	push   ebx
  409c2d:	push   ds
  409c2e:	aaa    
  409c2f:	(bad)  
  409c30:	or     al,0x3
  409c32:	shl    DWORD PTR [ecx+0x47],1
  409c35:	sub    ebx,esp
  409c37:	test   al,0x4b
  409c39:	mov    eax,fs:0x899d89fc
  409c3f:	xchg   BYTE PTR [edi-0x23],dh
  409c42:	es aas 
  409c44:	fimul  WORD PTR ds:0x5bbb6591
  409c4a:	mov    cl,0x84
  409c4c:	jl     0x409be4
  409c4e:	pushf  
  409c4f:	ins    BYTE PTR es:[edi],dx
  409c50:	test   eax,eax
  409c52:	xchg   ebx,eax
  409c53:	cmp    dh,0x7e
  409c56:	into   
  409c57:	jae    0x409c99
  409c59:	mov    ah,0xe7
  409c5b:	pusha  
  409c5c:	or     DWORD PTR [edx+0x3b],edi
  409c5f:	lahf   
  409c60:	sub    edi,DWORD PTR [ebx+0x35b1167f]
  409c66:	sub    cl,ch
  409c68:	fild   QWORD PTR ds:0x26982887
  409c6e:	jmp    0xe4ed:0xc21e2d5
  409c75:	jg     0x409cca
  409c77:	outs   dx,BYTE PTR ds:[esi]
  409c78:	xchg   ecx,eax
  409c79:	and    BYTE PTR [esi+0x78deeb65],0xda
  409c80:	inc    ebx
  409c81:	xchg   esp,eax
  409c82:	mov    ebp,0xef1b4f4a
  409c87:	call   0x40cb:0x64ae757
  409c8e:	sub    BYTE PTR [ebx+0x77c5377e],0x34
  409c95:	mov    dl,0x4e
  409c97:	cmp    esi,DWORD PTR [ecx+edi*8+0x3e]
  409c9b:	in     eax,0x79
  409c9d:	pop    ebp
  409c9e:	(bad)  
  409c9f:	arpl   WORD PTR [edx-0x3d27a359],bp
  409ca5:	pop    esi
  409ca6:	lds    esp,FWORD PTR [esi+0x4]
  409ca9:	xchg   ebx,eax
  409caa:	xchg   esp,eax
  409cab:	ins    BYTE PTR es:[edi],dx
  409cac:	les    ebx,FWORD PTR [esi+ebp*8-0x68]
  409cb0:	stos   DWORD PTR es:[edi],eax
  409cb1:	push   es
  409cb2:	jae    0x409c5c
  409cb4:	sub    ch,bl
  409cb6:	mov    bl,0x50
  409cb8:	xchg   edi,eax
  409cb9:	lods   eax,DWORD PTR ds:[esi]
  409cba:	scas   eax,DWORD PTR es:[edi]
  409cbb:	icebp  
  409cbc:	aam    0x40
  409cbe:	inc    ebx
  409cbf:	add    BYTE PTR [esi+0x2ab027dc],0x8c
  409cc6:	push   eax
  409cc7:	sbb    bl,al
  409cc9:	mov    dl,0xbe
  409ccb:	fisttp QWORD PTR [eax+0xc07d360]
  409cd1:	das    
  409cd2:	ins    DWORD PTR es:[edi],dx
  409cd3:	mov    al,0x29
  409cd5:	pop    ebp
  409cd6:	sahf   
  409cd7:	jecxz  0x409d14
  409cd9:	icebp  
  409cda:	pop    es
  409cdb:	jo     0x409ce4
  409cdd:	scas   eax,DWORD PTR es:[edi]
  409cde:	or     DWORD PTR [eax+0x68],0x24
  409ce2:	jnp    0x409d28
  409ce4:	mov    ds:0xd226018a,eax
  409ce9:	cmp    BYTE PTR [esi-0x2a],bh
  409cec:	dec    edx
  409ced:	repnz aas 
  409cef:	jmp    0xd3d62083
  409cf4:	push   es
  409cf5:	test   al,0x9a
  409cf7:	add    eax,0x7b451b2e
  409cfc:	das    
  409cfd:	add    al,BYTE PTR [edi+0x5881733f]
  409d03:	rol    edx,0x26
  409d06:	xlat   BYTE PTR ds:[ebx]
  409d07:	fadd   DWORD PTR [ecx-0x47]
  409d0a:	imul   ebx,edx,0x53c3651
  409d10:	pop    esp
  409d11:	jmp    0x28845b60
  409d16:	dec    esp
  409d17:	or     eax,0x2953ffdf
  409d1c:	jge    0x409d9d
  409d1e:	fdiv   DWORD PTR [ebp+0x5b]
  409d21:	bound  eax,QWORD PTR [edi]
  409d23:	or     eax,0x329febeb
  409d28:	loop   0x409cad
  409d2a:	adc    ebx,DWORD PTR [edx]
  409d2c:	pop    ecx
  409d2d:	sar    ah,1
  409d2f:	mov    DWORD PTR [eax+0x165bc623],edi
  409d35:	int3   
  409d36:	loop   0x409d42
  409d38:	les    edi,FWORD PTR [esi+eax*1]
  409d3b:	mov    edx,0xee9169ae
  409d40:	retf   
  409d41:	cmp    al,0x4
  409d43:	sbb    al,0x12
  409d45:	and    BYTE PTR [edx+ecx*1+0x64],dh
  409d49:	or     esi,eax
  409d4b:	xchg   edx,eax
  409d4c:	mov    ebx,0x63c95302
  409d51:	sub    bh,cl
  409d53:	push   edx
  409d54:	jmp    0x409d20
  409d56:	ins    BYTE PTR es:[edi],dx
  409d57:	mov    BYTE PTR [edx+0x266a9212],ch
  409d5d:	jb     0x409d47
  409d5f:	(bad)  
  409d60:	push   edi
  409d61:	je     0x409d92
  409d63:	aam    0xdb
  409d65:	fimul  DWORD PTR [ebx]
  409d67:	jb     0x409da9
  409d69:	lods   eax,DWORD PTR ds:[esi]
  409d6a:	mov    dl,dh
  409d6c:	add    BYTE PTR [edi-0x10],ah
  409d6f:	(bad)  
  409d71:	jecxz  0x409cf3
  409d73:	sbb    eax,0x71c59d2
  409d78:	pop    esi
  409d79:	loopne 0x409db2
  409d7b:	jge    0x409d9e
  409d7d:	out    0x8a,al
  409d7f:	les    eax,FWORD PTR [ecx+ebp*4-0x24621e04]
  409d86:	or     edi,DWORD PTR [esi]
  409d88:	inc    esi
  409d89:	es xchg ecx,eax
  409d8b:	sbb    al,bh
  409d8d:	in     eax,dx
  409d8e:	or     BYTE PTR [edx],cl
  409d90:	jbe    0x409e00
  409d92:	mov    al,0xb3
  409d94:	retf   
  409d95:	push   esp
  409d96:	ins    DWORD PTR es:[edi],dx
  409d97:	mov    edx,0xf30919e7
  409d9c:	loope  0x409d34
  409d9e:	push   edi
  409d9f:	sbb    eax,0xa724df09
  409da4:	pop    es
  409da5:	scas   eax,DWORD PTR es:[edi]
  409da6:	cli    
  409da7:	or     dl,BYTE PTR [ecx-0x75025d9c]
  409dad:	popf   
  409dae:	imul   eax,DWORD PTR [ebp+eax*1-0x73],0x4c
  409db3:	cdq    
  409db4:	int    0x66
  409db6:	sbb    DWORD PTR [ebx+0x68],esi
  409db9:	adc    BYTE PTR [ecx],0x52
  409dbc:	mov    cl,0x98
  409dbe:	and    ebx,ecx
  409dc0:	dec    ecx
  409dc1:	rcr    DWORD PTR [ebx-0x1af70186],0xf7
  409dc8:	out    0x3e,eax
  409dca:	dec    esi
  409dcb:	call   0xda549c28
  409dd0:	pop    edi
  409dd1:	out    dx,al
  409dd2:	mov    ch,0xf9
  409dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dd5:	idiv   BYTE PTR [ecx-0x102829e]
  409ddb:	jmp    0x56b3f1c1
  409de0:	retf   
  409de1:	lods   al,BYTE PTR ds:[esi]
  409de2:	ret    
  409de3:	mov    bh,0x46
  409de5:	dec    ebx
  409de6:	sbb    DWORD PTR [eax-0x474d61a3],ecx
  409dec:	dec    ebp
  409ded:	jle    0x409dd3
  409def:	add    DWORD PTR [ebx-0x54],eax
  409df2:	sub    edx,DWORD PTR [edx]
  409df4:	loopne 0x409dc7
  409df6:	cmp    al,0x7b
  409df8:	fwait
  409df9:	pop    esp
  409dfa:	repz xor DWORD PTR ds:[edx-0x5c],eax
  409dff:	and    eax,0x2f7851f8
  409e04:	inc    eax
  409e05:	jge    0x409dfc
  409e07:	shl    DWORD PTR [esi+0x27],0xf7
  409e0b:	and    BYTE PTR [ebx+0x46],bh
  409e0e:	pop    ebx
  409e0f:	sbb    ch,BYTE PTR [ebx-0x1bc0ff51]
  409e15:	aaa    
  409e16:	push   0x61895e42
  409e1b:	xchg   ebp,eax
  409e1c:	dec    ebp
  409e1d:	int    0x3b
  409e1f:	lahf   
  409e20:	inc    esp
  409e21:	inc    ebx
  409e22:	inc    eax
  409e23:	fcom   DWORD PTR [ebx+0x1c]
  409e26:	jnp    0x409e43
  409e28:	push   edi
  409e29:	in     eax,dx
  409e2a:	xchg   esp,eax
  409e2b:	push   eax
  409e2c:	push   ebp
  409e2d:	sbb    al,0x62
  409e2f:	(bad)  
  409e30:	daa    
  409e31:	dec    ebx
  409e32:	adc    DWORD PTR [edx-0x3b0cd735],0xffffffad
  409e39:	mov    ecx,ebx
  409e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e3c:	add    eax,0x63b6029a
  409e41:	inc    ecx
  409e42:	sub    ebp,esp
  409e44:	stos   BYTE PTR es:[edi],al
  409e45:	ror    DWORD PTR [eax],1
  409e47:	push   ebp
  409e48:	arpl   WORD PTR [edi-0x17],bx
  409e4b:	xchg   BYTE PTR [ecx],bl
  409e4d:	xor    eax,0xfb40d683
  409e52:	loope  0x409e07
  409e54:	add    DWORD PTR [ebp+0xa],edi
  409e57:	ins    DWORD PTR es:[edi],dx
  409e58:	popa   
  409e59:	loope  0x409dfb
  409e5b:	jnp    0x409ebf
  409e5d:	in     al,dx
  409e5e:	les    ebx,FWORD PTR [eax+0x1c]
  409e61:	jae    0x409e56
  409e63:	call   0x105247f5
  409e68:	push   ecx
  409e69:	outs   dx,DWORD PTR ds:[esi]
  409e6a:	(bad)  
  409e6c:	xor    cl,BYTE PTR ds:[eax+0x56]
  409e70:	iret   
  409e71:	dec    eax
  409e72:	scas   al,BYTE PTR es:[edi]
  409e73:	adc    BYTE PTR es:[edx-0x1fe172a9],ah
  409e7a:	pusha  
  409e7b:	rol    DWORD PTR [edi-0xa],0xe2
  409e7f:	xchg   edi,eax
  409e80:	sbb    BYTE PTR [ebx-0x67],cl
  409e83:	dec    edi
  409e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e85:	adc    ecx,DWORD PTR [ebp+0x24ad4038]
  409e8b:	jle    0x409efd
  409e8d:	js     0x409efe
  409e8f:	jno    0x409e88
  409e91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e92:	stc    
  409e93:	mov    bl,0x3a
  409e95:	ds sub eax,edi
  409e98:	shl    ebp,cl
  409e9a:	xor    eax,0xffffffb9
  409e9d:	sbb    cl,BYTE PTR [ecx]
  409e9f:	cmp    edx,DWORD PTR [esi]
  409ea1:	dec    ecx
  409ea2:	ja     0x409eba
  409ea4:	or     cl,BYTE PTR [ecx+0x79]
  409ea7:	or     ebp,DWORD PTR [edx]
  409ea9:	test   al,0xb3
  409eab:	jg     0x409efe
  409ead:	imul   ecx,DWORD PTR [ecx+0x1aa4200a],0x151a834e
  409eb7:	cmp    eax,esi
  409eb9:	test   eax,0x84347309
  409ebe:	cmp    esi,DWORD PTR [ebx]
  409ec0:	icebp  
  409ec1:	sub    BYTE PTR [edi+0x1c8c881],dl
  409ec7:	ins    DWORD PTR es:[edi],dx
  409ec8:	fcomp  DWORD PTR [ebx+0x27e1f8ca]
  409ece:	sub    eax,0x90ec7e2
  409ed3:	cmp    dh,dh
  409ed5:	or     al,0xff
  409ed7:	popa   
  409ed8:	out    dx,eax
  409ed9:	mov    bh,BYTE PTR [edi+0x32ad5e83]
  409edf:	ret    0xd920
  409ee2:	push   esi
  409ee3:	sbb    edi,DWORD PTR [eax]
  409ee5:	pusha  
  409ee6:	mov    ch,0x3b
  409ee8:	mov    eax,0xf136fa72
  409eed:	adc    DWORD PTR [ecx+0x64],ebp
  409ef0:	xchg   ebp,eax
  409ef1:	aaa    
  409ef2:	adc    cl,BYTE PTR [ebx-0x132c23de]
  409ef8:	sbb    edx,DWORD PTR [ecx+0x78f43a3e]
  409efe:	inc    ecx
  409eff:	fld    TBYTE PTR [ecx]
  409f01:	push   ss
  409f02:	mov    bl,0x43
  409f04:	(bad)  
  409f05:	adc    ch,BYTE PTR [edi-0x98636e3]
  409f0b:	cdq    
  409f0c:	xor    ebp,DWORD PTR [edi+eax*2-0x53bc7d72]
  409f13:	lea    eax,[esi]
  409f15:	test   al,0x22
  409f17:	xor    DWORD PTR [ecx-0x688a55e8],edx
  409f1d:	test   al,0xc
  409f1f:	(bad)  
  409f20:	in     al,0x1a
  409f22:	or     eax,0x5aee45f0
  409f27:	push   ecx
  409f28:	and    DWORD PTR [eax+0x4f],0xffffff9b
  409f2c:	dec    edx
  409f2d:	mov    edx,0x9497c696
  409f32:	jo     0x409f36
  409f34:	stc    
  409f35:	in     eax,dx
  409f36:	jp     0x409f2c
  409f38:	bound  ecx,QWORD PTR [edi-0xa]
  409f3b:	xchg   edi,eax
  409f3c:	ret    
  409f3d:	sub    dl,BYTE PTR [edx-0x2c]
  409f40:	(bad)  
  409f41:	cwde   
  409f42:	cdq    
  409f43:	and    dh,BYTE PTR [edx+eiz*1]
  409f46:	jle    0x409f3c
  409f48:	or     DWORD PTR [edx+0x36],esi
  409f4b:	dec    ebx
  409f4c:	or     BYTE PTR ds:0x5c403c5f,dl
  409f52:	push   ebx
  409f53:	push   0xffffffde
  409f55:	fisubr WORD PTR [ebx]
  409f57:	repz mov bh,0x72
  409f5a:	ds mov dh,0x31
  409f5d:	sub    eax,0xc353d74a
  409f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f63:	popf   
  409f64:	test   DWORD PTR [esi-0x4e81a68d],ebp
  409f6a:	mov    ecx,0xd28033ec
  409f6f:	stos   DWORD PTR es:[edi],eax
  409f70:	dec    ebx
  409f71:	push   ebx
  409f72:	adc    BYTE PTR [ebp+0x20],0x98
  409f76:	clc    
  409f77:	xchg   esp,eax
  409f78:	xor    eax,0x55ab6ad5
  409f7d:	inc    esp
  409f7e:	push   ebp
  409f7f:	test   eax,0x8cff06ac
  409f84:	jno    0x409f2d
  409f86:	jb     0x409f4b
  409f88:	adc    ebp,esi
  409f8a:	loop   0x409f7b
  409f8c:	mov    bh,dh
  409f8e:	stos   DWORD PTR es:[edi],eax
  409f8f:	rcr    DWORD PTR [edi+0x3],cl
  409f92:	imul   ebx,ebp,0x8247aeeb
  409f98:	adc    edi,eax
  409f9a:	aam    0x91
  409f9c:	mov    ds:0x6b48f423,eax
  409fa1:	fdiv   QWORD PTR [ecx-0x7f]
  409fa4:	fld    DWORD PTR [edi+ebx*2-0x65]
  409fa8:	fldpi  
  409faa:	std    
  409fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fac:	jmp    0xb929e93f
  409fb1:	cwde   
  409fb2:	mov    ecx,0xc8242e44
  409fb7:	lea    eax,[ebp+0x43]
  409fba:	push   edx
  409fbb:	cwde   
  409fbc:	loope  0x40a031
  409fbe:	repz jp 0x409f9f
  409fc1:	movups xmm2,XMMWORD PTR [esp+esi*2]
  409fc5:	mov    eax,0x4781f67f
  409fca:	mov    ecx,0x6a8c6d88
  409fcf:	or     ebp,DWORD PTR [esi-0x49e474f9]
  409fd5:	xor    al,0xc
  409fd7:	test   BYTE PTR [edx],ah
  409fd9:	xor    BYTE PTR [ebx-0x7e],al
  409fdc:	ficomp DWORD PTR [edi]
  409fde:	ins    DWORD PTR es:[edi],dx
  409fdf:	popf   
  409fe0:	mov    dh,0xb2
  409fe2:	lock pop ecx
  409fe4:	jnp    0x40a054
  409fe6:	call   0xb2ea293c
  409feb:	cld    
  409fec:	inc    esi
  409fed:	xchg   esi,eax
  409fee:	push   edx
  409fef:	cli    
  409ff0:	call   0xa59c:0xae12c3b2
  409ff7:	(bad)  
  409ff8:	lock pop esi
  409ffa:	and    eax,0x57f1c177
  409fff:	cmp    BYTE PTR [eax+0x1f378d83],al
  40a005:	not    DWORD PTR ds:0xea41db50
  40a00b:	mov    eax,0x5f9790b1
  40a010:	pop    esp
  40a011:	lods   eax,DWORD PTR ds:[esi]
  40a012:	push   edx
  40a013:	mov    edx,0x2d531b90
  40a018:	in     eax,0x89
  40a01a:	push   ds
  40a01b:	pushf  
  40a01c:	mov    ch,0x76
  40a01e:	and    DWORD PTR [ecx+ebx*4],esi
  40a021:	mov    esp,0x5cb6166f
  40a026:	fmul   QWORD PTR fs:[eax-0x40e13089]
  40a02d:	jno    0x409fcf
  40a02f:	sub    BYTE PTR [eax],cl
  40a031:	or     BYTE PTR [esi],cl
  40a033:	sbb    BYTE PTR [ebp+0x4f],dl
  40a036:	sahf   
  40a037:	(bad)  
  40a038:	mov    ecx,0xb0daafe2
  40a03d:	sub    eax,0x89ad94cd
  40a042:	sub    bl,al
  40a044:	xchg   BYTE PTR [eax-0x2],cl
  40a047:	jns    0x40a0a6
  40a049:	push   es
  40a04a:	cmp    BYTE PTR [esi-0x33bb6ef3],0x3c
  40a051:	mov    eax,0xba31c990
  40a056:	jo     0x40a089
  40a058:	sbb    BYTE PTR [ecx+0x7c],ah
  40a05b:	pushf  
  40a05c:	push   esp
  40a05d:	out    dx,al
  40a05e:	dec    eax
  40a05f:	mov    BYTE PTR [esi+0x24],0x54
  40a063:	jl     0x40a038
  40a065:	cmp    eax,0xa4565152
  40a06a:	arpl   WORD PTR [eax+esi*1],sp
  40a06d:	(bad)  
  40a06e:	or     edi,DWORD PTR [edx]
  40a070:	out    0xd8,eax
  40a072:	mov    bl,0xdf
  40a074:	punpcklbw mm3,DWORD PTR [ecx-0xe]
  40a078:	dec    edx
  40a079:	add    DWORD PTR [esp+esi*1-0x3d],ebx
  40a07d:	add    eax,0xbce2abe2
  40a082:	not    DWORD PTR [ebx]
  40a084:	mov    ch,0x14
  40a086:	xchg   BYTE PTR [eax-0x7b],ah
  40a089:	pop    edi
  40a08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a08b:	pop    edi
  40a08c:	pusha  
  40a08d:	sub    eax,0x8d19ee3e
  40a092:	mov    ah,0x84
  40a094:	push   esp
  40a095:	and    eax,0x604ae4cc
  40a09a:	jecxz  0x40a0b6
  40a09c:	test   al,dh
  40a09e:	repz jae 0x40a11d
  40a0a1:	jbe    0x40a0ff
  40a0a3:	push   ebp
  40a0a4:	pop    ss
  40a0a5:	pop    ss
  40a0a6:	out    0x8c,al
  40a0a8:	fadd   QWORD PTR [ebx+0x60]
  40a0ab:	mov    eax,0xb7e269e9
  40a0b0:	in     eax,dx
  40a0b1:	cmc    
  40a0b2:	ja     0x40a0be
  40a0b4:	icebp  
  40a0b5:	cdq    
  40a0b6:	push   edi
  40a0b7:	iret   
  40a0b8:	jecxz  0x40a042
  40a0ba:	jmp    0x62fc3bd6
  40a0bf:	shr    BYTE PTR [edx+ebx*1],1
  40a0c2:	mov    cl,0x86
  40a0c4:	bound  edi,QWORD PTR [ebx+ebp*8]
  40a0c7:	mov    ah,0x53
  40a0c9:	push   DWORD PTR ds:0xc5b9089
  40a0cf:	inc    ecx
  40a0d0:	test   BYTE PTR [eax-0x6e490339],dh
  40a0d6:	out    0x33,al
  40a0d8:	push   ebp
  40a0d9:	mov    ecx,0xd68cc3f6
  40a0de:	sahf   
  40a0df:	cwde   
  40a0e0:	outs   dx,DWORD PTR ds:[esi]
  40a0e1:	stc    
  40a0e2:	nop
  40a0e3:	loop   0x40a07a
  40a0e5:	cmc    
  40a0e6:	jl     0x40a10f
  40a0e8:	xor    bl,dl
  40a0ea:	shr    dh,0x43
  40a0ed:	sub    esp,DWORD PTR [ebp+0x161ededa]
  40a0f3:	push   edi
  40a0f4:	mov    cl,0xb4
  40a0f6:	mov    esp,DWORD PTR ds:0x97e4b216
  40a0fc:	push   edi
  40a0fd:	cmp    al,0xc
  40a0ff:	or     al,0xcd
  40a101:	leave  
  40a102:	sbb    esi,DWORD PTR [ecx+0x7d]
  40a105:	bound  esi,QWORD PTR [esi]
  40a107:	or     eax,DWORD PTR [ebx-0x272deb39]
  40a10d:	fxsave [edi]
  40a110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a111:	loop   0x40a12c
  40a113:	div    BYTE PTR [esi+0x52]
  40a116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a117:	add    ebp,DWORD PTR [eax]
  40a119:	and    esp,ebp
  40a11b:	push   ecx
  40a11c:	adc    ch,BYTE PTR [eax-0x3f]
  40a11f:	push   edx
  40a120:	sbb    DWORD PTR [edx+0x5e274b87],esp
  40a126:	jmp    0x40a0d1
  40a128:	push   cs
  40a129:	jecxz  0x40a0b3
  40a12b:	xor    DWORD PTR [edi+0x522960d9],edx
  40a131:	into   
  40a132:	sbb    eax,0xb5f0e0c5
  40a137:	pop    edi
  40a138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a139:	pop    ss
  40a13a:	sub    DWORD PTR [edx-0x2472700c],eax
  40a140:	fwait
  40a141:	ins    BYTE PTR es:[edi],dx
  40a142:	ror    BYTE PTR [eax-0xf],cl
  40a145:	pop    ds
  40a146:	fisttp QWORD PTR [esi+ebp*8]
  40a149:	push   edi
  40a14a:	mov    ebp,cs
  40a14c:	int    0x45
  40a14e:	xor    eax,0x605e9cf6
  40a153:	jmp    0x861c2554
  40a158:	scas   eax,DWORD PTR es:[edi]
  40a159:	jno    0x40a140
  40a15b:	mov    al,0x7d
  40a15d:	xchg   BYTE PTR [ebx-0x3a],ah
  40a160:	mov    WORD PTR [edi+eiz*8-0x27477bd],?
  40a167:	call   0xfac0fcc5
  40a16c:	aad    0x61
  40a16e:	adc    DWORD PTR [ebp-0x71],0x4350132d
  40a175:	adc    al,0xe9
  40a177:	sub    DWORD PTR [edi+0x7c04e311],edx
  40a17d:	pop    edi
  40a17e:	bnd jae 0x40a1e0
  40a181:	mov    ebp,0xd5f94c20
  40a186:	xor    ecx,DWORD PTR [esi]
  40a188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a189:	jno    0x40a115
  40a18b:	push   cs
  40a18c:	cmc    
  40a18d:	jb     0x40a1db
  40a18f:	or     al,0x83
  40a191:	jge    0x40a1b2
  40a193:	or     ecx,ebp
  40a195:	cdq    
  40a196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a197:	cmc    
  40a198:	cmp    eax,0xe0dd84f9
  40a19d:	jl     0x40a1ff
  40a19f:	outs   dx,BYTE PTR ds:[esi]
  40a1a0:	call   0x5a084a33
  40a1a5:	in     al,dx
  40a1a6:	nop
  40a1a7:	dec    edx
  40a1a8:	push   edx
  40a1a9:	xchg   ebx,eax
  40a1aa:	jb     0x40a1c4
  40a1ac:	call   0x5949ffc2
  40a1b1:	add    al,dl
  40a1b3:	or     eax,0x8820dc1f
  40a1b8:	in     al,0xab
  40a1ba:	(bad)  
  40a1bb:	imul   esp,DWORD PTR [ebp-0x133f4ac0],0xfffffffd
  40a1c2:	stos   DWORD PTR es:[edi],eax
  40a1c3:	cld    
  40a1c4:	pop    edx
  40a1c5:	sbb    BYTE PTR [edx+eax*2+0x16],ah
  40a1c9:	ins    DWORD PTR es:[edi],dx
  40a1ca:	sub    eax,0xd6ad4a75
  40a1cf:	rcl    BYTE PTR [ebx+0x4f],0xfb
  40a1d3:	pop    ebp
  40a1d4:	jle    0x40a170
  40a1d6:	adc    DWORD PTR [edx-0x3],esp
  40a1d9:	mov    ah,0xae
  40a1db:	push   cs
  40a1dc:	and    edi,ecx
  40a1de:	xchg   esi,eax
  40a1df:	lds    edx,FWORD PTR [ebx-0x67ed4530]
  40a1e5:	push   ds
  40a1e6:	xor    al,0x81
  40a1e8:	in     eax,dx
  40a1e9:	(bad)  
  40a1ea:	adc    BYTE PTR [ecx-0x69],ah
  40a1ed:	sbb    ecx,DWORD PTR [ebp-0x77c35cdb]
  40a1f3:	push   ss
  40a1f4:	adc    BYTE PTR [ebp+ebx*8-0x2f],bh
  40a1f8:	jge    0x40a1f4
  40a1fa:	sahf   
  40a1fb:	js     0x40a1f3
  40a1fd:	loope  0x40a201
  40a1ff:	jl     0x40a1af
  40a201:	xor    DWORD PTR [ebp+0x3],0xaa607808
  40a208:	pop    esp
  40a209:	retf   
  40a20a:	jb     0x40a1e3
  40a20c:	test   DWORD PTR [esp+ecx*8+0x30c478e5],ecx
  40a213:	mov    ecx,0xb1c6a22b
  40a218:	inc    edx
  40a219:	xchg   edi,eax
  40a21a:	or     BYTE PTR [eax+esi*4+0x6cee8b4e],0xe0
  40a222:	jmp    esp
  40a224:	and    eax,0x3d8d9e48
  40a229:	in     al,dx
  40a22a:	retf   
  40a22b:	scas   eax,DWORD PTR es:[edi]
  40a22c:	jg     0x40a218
  40a22e:	aam    0x84
  40a230:	add    DWORD PTR [edi+0x7f],esp
  40a233:	mov    ebp,0x4735fb26
  40a238:	xchg   edx,eax
  40a239:	xchg   ebx,eax
  40a23a:	lahf   
  40a23b:	xchg   DWORD PTR [edx-0x33f7a615],ebx
  40a241:	int    0x87
  40a243:	mov    cl,0x1d
  40a245:	fisub  DWORD PTR ds:0x5c90222a
  40a24b:	push   ss
  40a24c:	jecxz  0x40a204
  40a24e:	and    al,0xfa
  40a250:	mov    ah,0xe9
  40a252:	dec    edx
  40a253:	cmp    dl,BYTE PTR [edx+0xa]
  40a256:	rol    ah,cl
  40a258:	mov    eax,0xde5decf
  40a25d:	ins    BYTE PTR es:[edi],dx
  40a25e:	lock adc ch,BYTE PTR [eax-0x60]
  40a262:	mov    dh,0x19
  40a264:	aaa    
  40a265:	inc    eax
  40a266:	outs   dx,BYTE PTR ds:[esi]
  40a267:	iret   
  40a268:	sub    eax,0x6c8fa1dd
  40a26d:	out    0x68,eax
  40a26f:	push   ecx
  40a270:	in     eax,dx
  40a271:	or     BYTE PTR [ebx-0x19023c60],0x98
  40a278:	pop    edx
  40a279:	jecxz  0x40a263
  40a27b:	ins    BYTE PTR es:[edi],dx
  40a27c:	add    eax,DWORD PTR [ecx-0x9]
  40a27f:	jmp    0x96b6:0xc3724652
  40a286:	jbe    0x40a2ef
  40a288:	(bad)  
  40a289:	mov    ah,0x20
  40a28b:	test   BYTE PTR [ebp+0x62d8f551],bl
  40a291:	cmp    eax,DWORD PTR [edi+0x377d1411]
  40a297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a298:	std    
  40a299:	adc    ebx,esp
  40a29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a29c:	imul   ecx,DWORD PTR [ebp+0x11],0xffffffab
  40a2a0:	ja     0x40a258
  40a2a2:	outs   dx,BYTE PTR ds:[esi]
  40a2a3:	fcom   DWORD PTR ds:0xa58b505b
  40a2a9:	imul   esp,DWORD PTR [edx+0x5e91203f],0xffffffce
  40a2b0:	popa   
  40a2b1:	add    edi,DWORD PTR [ecx]
  40a2b3:	mov    bl,BYTE PTR [esp+ecx*8]
  40a2b6:	test   BYTE PTR [eax-0x33],dl
  40a2b9:	push   ecx
  40a2ba:	popf   
  40a2bb:	bound  ebp,QWORD PTR [esi-0x13]
  40a2be:	retf   
  40a2bf:	xchg   edx,eax
  40a2c0:	daa    
  40a2c1:	cmp    al,0x6e
  40a2c3:	sbb    BYTE PTR [ebx],0x8a
  40a2c6:	lea    ebx,[edx+0x6b]
  40a2c9:	adc    eax,0x844298ce
  40a2cf:	jmp    DWORD PTR [ecx+edi*4]
  40a2d2:	loop   0x40a2c3
  40a2d4:	mov    ds:0xee7b650b,al
  40a2d9:	out    0x6c,al
  40a2db:	cmp    edx,eax
  40a2dd:	shl    DWORD PTR [edx+0x6510b4f7],1
  40a2e3:	adc    ch,ah
  40a2e5:	icebp  
  40a2e6:	mov    ebx,0x283e1a9b
  40a2eb:	(bad)  
  40a2ec:	hlt    
  40a2ed:	mov    bl,0x7f
  40a2ef:	dec    ebx
  40a2f0:	xchg   ecx,eax
  40a2f1:	xor    ebx,DWORD PTR ds:0xf440c832
  40a2f7:	fs xchg esp,eax
  40a2f9:	js     0x40a321
  40a2fb:	mov    dl,0xf7
  40a2fd:	js     0x40a27f
  40a2ff:	sub    edi,DWORD PTR [eax-0x2dd6fe65]
  40a305:	xchg   ecx,eax
  40a306:	aas    
  40a307:	aad    0xa5
  40a309:	jmp    0x40a2a4
  40a30b:	sub    ebx,DWORD PTR [esi-0x60]
  40a30e:	add    DWORD PTR [edi-0x46],edi
  40a311:	jmp    0x2e2d3ab4
  40a316:	cmp    BYTE PTR [eax-0x75],0xc
  40a31a:	sbb    bl,BYTE PTR ds:0x79b878d8
  40a320:	cmp    al,0xd0
  40a322:	inc    ebp
  40a323:	aam    0xb2
  40a325:	inc    edx
  40a326:	js     0x40a387
  40a328:	adc    eax,0xd2fb0b50
  40a32d:	xlat   BYTE PTR ds:[ebx]
  40a32e:	shl    BYTE PTR [ecx+0x628299f2],1
  40a334:	jnp    0x40a308
  40a336:	push   edi
  40a337:	xchg   edi,eax
  40a338:	add    BYTE PTR [eax+0x14019c77],bl
  40a33e:	imul   edi,DWORD PTR [edx-0x2471bf9e],0x51b900b8
  40a348:	je     0x40a3a9
  40a34a:	push   0x64
  40a34c:	repz add al,0x4a
  40a34f:	and    DWORD PTR [ebx-0x4c34fd80],eax
  40a355:	ins    BYTE PTR es:[edi],dx
  40a356:	cmp    al,0xbc
  40a358:	cmp    eax,0xa52d7430
  40a35d:	repz sar BYTE PTR [ecx-0x6a841448],0x58
  40a365:	mov    ebx,0xd42b8820
  40a36a:	jne    0x40a3ae
  40a36c:	clc    
  40a36d:	mov    bh,0xa2
  40a36f:	bound  ecx,QWORD PTR [ebp-0x379a4e0a]
  40a375:	jge    0x40a321
  40a377:	imul   ebx,DWORD PTR [edx+0x75],0x7f9ef570
  40a37e:	mov    ebx,0x220b58a2
  40a383:	stc    
  40a384:	fs stc 
  40a386:	mov    ?,WORD PTR [eax+esi*4-0x54]
  40a38a:	bound  eax,QWORD PTR ds:0x77fa64ea
  40a390:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40a392:	mov    BYTE PTR ds:0xad405902,al
  40a398:	dec    edx
  40a399:	fdivr  st,st(4)
  40a39b:	push   esp
  40a39c:	adc    al,0xe1
  40a39e:	lds    ebp,FWORD PTR [ecx]
  40a3a0:	push   eax
  40a3a1:	ja     0x40a41f
  40a3a3:	mov    ecx,DWORD PTR [ebp-0x1d]
  40a3a6:	or     DWORD PTR [edi-0x15],eax
  40a3a9:	push   0x7879a1f1
  40a3ae:	inc    ecx
  40a3af:	scas   al,BYTE PTR es:[edi]
  40a3b0:	int    0x8f
  40a3b2:	push   edx
  40a3b3:	xor    eax,0x6c3e0935
  40a3b8:	mov    edi,0xa1715275
  40a3bd:	pop    ss
  40a3be:	jb     0x40a3be
  40a3c0:	jns    0x40a372
  40a3c2:	dec    ecx
  40a3c3:	jp     0x40a3af
  40a3c5:	cdq    
  40a3c6:	scas   eax,DWORD PTR es:[edi]
  40a3c7:	rcr    BYTE PTR [esi+0x34],0xf3
  40a3cb:	imul   esp
  40a3cd:	idiv   BYTE PTR [ebp-0x48]
  40a3d0:	add    edx,DWORD PTR [ebp+0x2ededcd]
  40a3d6:	mov    ch,0xb0
  40a3d8:	enter  0xb8db,0x51
  40a3dc:	adc    BYTE PTR [edx-0x71e99297],bh
  40a3e2:	hlt    
  40a3e3:	imul   eax,DWORD PTR ds:[esi-0x49],0x65
  40a3e8:	pop    es
  40a3e9:	and    al,0xfc
  40a3eb:	adc    ebx,edx
  40a3ed:	pop    eax
  40a3ee:	lock and BYTE PTR cs:[ecx],al
  40a3f2:	xor    eax,0x8a37ec8b
  40a3f7:	inc    eax
  40a3f8:	inc    ebp
  40a3f9:	out    dx,al
  40a3fa:	xchg   ecx,eax
  40a3fb:	outs   dx,BYTE PTR ds:[esi]
  40a3fc:	xchg   edx,eax
  40a3fd:	out    dx,eax
  40a3fe:	aas    
  40a3ff:	data16 das 
  40a401:	or     BYTE PTR [edx],0x5b
  40a404:	fistp  WORD PTR [esi-0x2c]
  40a407:	loopne 0x40a3ac
  40a409:	lahf   
  40a40a:	push   ds
  40a40b:	cmp    eax,0x7637064f
  40a410:	mov    al,ds:0x74580fdd
  40a415:	lods   al,BYTE PTR ds:[esi]
  40a416:	xchg   ebx,eax
  40a417:	push   0x752e6d0a
  40a41c:	sahf   
  40a41d:	out    dx,al
  40a41e:	mov    dh,0xbf
  40a420:	jae    0x40a459
  40a422:	sbb    BYTE PTR [eax+0x362ee35d],dl
  40a428:	xchg   ebx,eax
  40a429:	mov    cl,bh
  40a42b:	push   esp
  40a42c:	mov    bl,0x4e
  40a42e:	jp     0x40a3e1
  40a430:	test   DWORD PTR [ecx-0x1b],ebp
  40a433:	inc    edi
  40a434:	inc    eax
  40a435:	add    al,0x4c
  40a437:	rcl    BYTE PTR [ebx+edx*2],0x44
  40a43b:	hlt    
  40a43c:	cld    
  40a43d:	fistp  WORD PTR ds:0x403985ba
  40a443:	in     eax,dx
  40a444:	ins    DWORD PTR es:[edi],dx
  40a445:	inc    esi
  40a446:	xchg   DWORD PTR [ecx],ebp
  40a448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a449:	ins    DWORD PTR es:[edi],dx
  40a44a:	jmp    0x354ec00b
  40a44f:	(bad)  
  40a450:	ja     0x40a444
  40a452:	xor    WORD PTR [ebp+0x59],sp
  40a456:	mov    bl,0x6e
  40a458:	pushf  
  40a459:	mov    dh,0xc1
  40a45b:	leave  
  40a45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a45d:	les    eax,FWORD PTR [ebx-0x75bfd964]
  40a463:	rcl    BYTE PTR [edx],cl
  40a465:	lock adc BYTE PTR ds:0xacdc7f4f,dl
  40a46c:	das    
  40a46d:	(bad)  
  40a46e:	push   ds
  40a46f:	test   eax,0x32e69bc0
  40a474:	bound  esi,QWORD PTR [edi]
  40a476:	lds    ebp,FWORD PTR [ebp+0x323a8ce3]
  40a47c:	loope  0x40a497
  40a47e:	xchg   esi,eax
  40a47f:	(bad)  
  40a480:	out    dx,eax
  40a481:	mov    DWORD PTR [edx+0x32],edi
  40a484:	fimul  WORD PTR [esi+eiz*8]
  40a487:	retf   0x4c40
  40a48a:	sbb    dl,BYTE PTR [ebx]
  40a48c:	add    DWORD PTR [ebx],edi
  40a48e:	jmp    0x685c:0x6f6161f7
  40a495:	sahf   
  40a496:	cmp    al,0xef
  40a498:	push   esp
  40a499:	dec    esp
  40a49a:	jge    0x40a4f2
  40a49c:	leave  
  40a49d:	lds    eax,FWORD PTR [edx+0x6a15611c]
  40a4a3:	je     0x40a4a0
  40a4a5:	inc    edi
  40a4a6:	push   esp
  40a4a7:	dec    esp
  40a4a8:	stos   DWORD PTR es:[edi],eax
  40a4a9:	mov    dl,0x1e
  40a4ab:	adc    DWORD PTR [ebx-0x1253c440],eax
  40a4b1:	and    ebx,esi
  40a4b3:	sbb    BYTE PTR [ebp+eax*8+0x9],0xfc
  40a4b8:	out    dx,eax
  40a4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4ba:	enter  0x82a1,0x5c
  40a4be:	daa    
  40a4bf:	in     al,0x79
  40a4c1:	jnp    0x40a4c6
  40a4c3:	push   edi
  40a4c4:	sub    edx,DWORD PTR ds:0xb11a78bd
  40a4ca:	mov    WORD PTR [ebx+0x17],cs
  40a4cd:	sti    
  40a4ce:	out    dx,al
  40a4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4d0:	push   ss
  40a4d1:	popf   
  40a4d2:	jl     0x40a4ad
  40a4d4:	gs in  al,dx
  40a4d6:	fdivr  DWORD PTR [esp+ebp*4-0x7bea64c2]
  40a4dd:	mov    edx,0x1bb39fcd
  40a4e2:	stos   DWORD PTR es:[edi],eax
  40a4e3:	mov    ah,0xc6
  40a4e5:	ss add eax,0xfcfacb29
  40a4eb:	mov    cl,0x31
  40a4ed:	jb     0x40a497
  40a4ef:	(bad)  
  40a4f0:	js     0x40a560
  40a4f2:	mov    al,0x6d
  40a4f4:	cwde   
  40a4f5:	mov    al,ds:0xd8c96541
  40a4fa:	dec    ecx
  40a4fb:	(bad)  
  40a4fc:	lds    eax,FWORD PTR [esi+0x361c71cc]
  40a502:	xchg   edx,eax
  40a503:	mov    edi,0x954b36e6
  40a508:	adc    BYTE PTR [edx],bl
  40a50a:	inc    ebx
  40a50b:	sbb    cl,BYTE PTR [ebp+0x8]
  40a50e:	nop
  40a50f:	xchg   edx,eax
  40a510:	adc    DWORD PTR [ebx-0x1d],ecx
  40a513:	mov    esp,es
  40a515:	int3   
  40a516:	es xchg esp,eax
  40a518:	sti    
  40a519:	adc    ecx,DWORD PTR [esi+eiz*2-0x4c]
  40a51d:	fwait
  40a51e:	arpl   WORD PTR [esi],dx
  40a520:	jle    0x40a58c
  40a522:	mov    bl,0xd1
  40a524:	adc    al,0x45
  40a526:	mov    esi,0xc69b29f0
  40a52b:	inc    edi
  40a52c:	dec    edx
  40a52d:	mov    bl,0x10
  40a52f:	inc    esp
  40a530:	inc    esp
  40a531:	pusha  
  40a532:	call   0x8e54278
  40a537:	dec    esi
  40a538:	add    DWORD PTR [eax],edx
  40a53a:	sbb    ebx,DWORD PTR [ebx]
  40a53c:	xor    esp,edi
  40a53e:	lds    ecx,FWORD PTR [eax-0x5720f048]
  40a544:	adc    eax,0x1a87614d
  40a549:	cmc    
  40a54a:	jg     0x40a516
  40a54c:	or     eax,0x55730e53
  40a551:	push   ecx
  40a552:	jle    0x40a57d
  40a554:	or     eax,0xdbdac880
  40a559:	inc    eax
  40a55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a55b:	jb     0x40a564
  40a55d:	add    eax,0x17daca31
  40a562:	aad    0x81
  40a564:	es test al,0x5b
  40a567:	imul   DWORD PTR [esi+0x2]
  40a56a:	fld    TBYTE PTR [eax-0x3e]
  40a56d:	or     ecx,0x91589590
  40a573:	cld    
  40a574:	repnz cmp eax,0x9186827c
  40a57a:	mov    edi,DWORD PTR [edx-0x60]
  40a57d:	jle    0x40a5ef
  40a57f:	aad    0x1a
  40a581:	jp     0x40a542
  40a583:	int3   
  40a584:	aaa    
  40a585:	enter  0x9aed,0x30
  40a589:	and    eax,0xfbf13dc9
  40a58e:	out    0x6c,al
  40a590:	outs   dx,DWORD PTR ds:[esi]
  40a591:	mov    ebx,gs
  40a593:	dec    ecx
  40a594:	pop    ebx
  40a595:	jmp    0x40a5ee
  40a597:	sub    al,0x39
  40a599:	push   edx
  40a59a:	jmp    0x40a581
  40a59c:	xlat   BYTE PTR ds:[ebx]
  40a59d:	or     BYTE PTR [edx+eax*4+0x12],cl
  40a5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5a2:	imul   ebx,esp,0x2a
  40a5a5:	sub    BYTE PTR fs:[esi],bl
  40a5a8:	aam    0x6f
  40a5aa:	cs cmp eax,0x99ffddb5
  40a5b0:	jno    0x40a621
  40a5b2:	jb     0x40a5c3
  40a5b4:	cmp    bh,BYTE PTR [ebx-0x36]
  40a5b7:	or     BYTE PTR [ebx],bh
  40a5b9:	in     al,dx
  40a5ba:	mov    ds:0xa7618b14,al
  40a5bf:	icebp  
  40a5c0:	shr    DWORD PTR [edi-0x7cd59388],1
  40a5c6:	cmp    BYTE PTR [edi+ebx*8-0x76],bh
  40a5ca:	cmp    edx,edi
  40a5cc:	cmp    ah,bl
  40a5ce:	or     eax,DWORD PTR [ebx-0x5b86d47c]
  40a5d4:	jno    0x40a653
  40a5d6:	loopne 0x40a59e
  40a5d8:	arpl   WORD PTR [esi-0x43],si
  40a5db:	and    BYTE PTR [eax+0x7746cd2e],0xc3
  40a5e2:	int    0x82
  40a5e4:	not    DWORD PTR [edx+ecx*2+0x77d5af83]
  40a5eb:	inc    edi
  40a5ec:	test   bl,bl
  40a5ee:	mov    esi,0x2ac4abb7
  40a5f3:	add    edi,DWORD PTR [ecx-0x4347b02b]
  40a5f9:	lds    eax,FWORD PTR [ecx-0x4a64ebbd]
  40a5ff:	mov    cl,0x9e
  40a601:	rol    BYTE PTR [ecx+ecx*4],1
  40a604:	sti    
  40a605:	mov    ch,BYTE PTR [edi*4+0x3c1f4baa]
  40a60c:	out    0xec,eax
  40a60e:	out    dx,al
  40a60f:	rol    DWORD PTR [ecx+eiz*8-0x67001102],0x49
  40a617:	or     eax,0x4b7f0a32
  40a61c:	leave  
  40a61d:	mov    eax,ds:0x56d8044
  40a622:	sar    eax,0xd6
  40a625:	je     0x40a5a9
  40a627:	cli    
  40a628:	daa    
  40a629:	test   eax,0x9eec17b5
  40a62e:	xchg   ebx,eax
  40a62f:	xchg   cl,bl
  40a631:	mov    DWORD PTR [edx+0x11],ecx
  40a634:	outs   dx,DWORD PTR ds:[esi]
  40a635:	std    
  40a636:	push   0xa
  40a638:	scas   al,BYTE PTR es:[edi]
  40a639:	push   ebp
  40a63a:	inc    esp
  40a63b:	sbb    al,0x5d
  40a63d:	pusha  
  40a63e:	push   eax
  40a63f:	lods   al,BYTE PTR ds:[esi]
  40a640:	lods   al,BYTE PTR ds:[esi]
  40a641:	pop    esi
  40a642:	adc    dh,0x16
  40a645:	fwait
  40a646:	ret    
  40a647:	test   eax,0x602e91ea
  40a64c:	push   ebx
  40a64d:	xor    DWORD PTR [eax],edx
  40a64f:	addr16 pusha 
  40a651:	lods   al,BYTE PTR ds:[esi]
  40a652:	ins    BYTE PTR es:[edi],dx
  40a653:	jmp    0xa94ff33d
  40a658:	xor    ebp,esp
  40a65a:	mov    bh,0x8
  40a65c:	in     al,0x6c
  40a65e:	push   ecx
  40a65f:	ja     0x40a69f
  40a661:	mov    dl,0xa4
  40a663:	(bad)  
  40a664:	jmp    0x40a6a6
  40a666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a667:	xchg   dh,dl
  40a669:	mov    eax,ds:0x11316ce5
  40a66e:	xor    ch,al
  40a670:	call   0x624e:0xab0b86c1
  40a677:	ret    
  40a678:	cmc    
  40a679:	add    eax,0xde4d3f3f
  40a67e:	rcr    BYTE PTR [ebx+0x185d33cf],1
  40a684:	cmp    edi,DWORD PTR [edx+ecx*1+0x43d920bf]
  40a68b:	adc    al,0xa4
  40a68d:	repz dec edi
  40a68f:	mov    esi,0x6617fadf
  40a694:	sub    al,0xed
  40a696:	or     eax,0x4273a3d0
  40a69b:	int3   
  40a69c:	enter  0x9acb,0x75
  40a6a0:	xchg   ebp,eax
  40a6a1:	mov    ebp,0xd8db1600
  40a6a6:	push   0xffffffaa
  40a6a8:	add    al,0xb3
  40a6aa:	add    eax,DWORD PTR [ebp-0x48]
  40a6ad:	cmp    ah,BYTE PTR [edi-0x3aab1be5]
  40a6b3:	rcl    BYTE PTR [esi-0x77],0x9a
  40a6b7:	xor    BYTE PTR [ebp+0x63],cl
  40a6ba:	iret   
  40a6bb:	out    0xfd,eax
  40a6bd:	daa    
  40a6be:	cmc    
  40a6bf:	inc    esp
  40a6c0:	xor    eax,0x2159761d
  40a6c5:	mov    ebp,DWORD PTR [eax+ebx*2-0x44]
  40a6c9:	in     eax,dx
  40a6ca:	scas   al,BYTE PTR es:[edi]
  40a6cb:	in     eax,dx
  40a6cc:	jae    0x40a72c
  40a6ce:	loopne 0x40a6ed
  40a6d0:	mov    bh,0x6f
  40a6d2:	sub    eax,0x81309a3
  40a6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6d8:	call   0x14fb:0x74ad06e7
  40a6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6e0:	imul   edx,esp,0x20
  40a6e3:	shl    ecx,cl
  40a6e5:	push   esi
  40a6e6:	ror    DWORD PTR [ebx-0x2591a918],0x6e
  40a6ed:	ret    0x8457
  40a6f0:	xor    al,0x7b
  40a6f2:	sub    dh,ah
  40a6f4:	jp     0x40a6ff
  40a6f6:	test   eax,0xbaddf99d
  40a6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6fd:	in     al,dx
  40a6fe:	mov    bl,0xd1
  40a700:	xor    bh,0x1b
  40a703:	xchg   ebp,eax
  40a704:	and    BYTE PTR [esi],cl
  40a706:	push   es
  40a707:	mov    al,ds:0x6621dcd0
  40a70c:	add    esi,ebx
  40a70e:	and    DWORD PTR [ebp-0x54],esp
  40a711:	mov    dh,0xe8
  40a713:	call   0xc2c050e
  40a718:	out    0xec,al
  40a71a:	cmp    edx,ebx
  40a71c:	pusha  
  40a71d:	(bad)  
  40a71f:	xchg   esp,eax
  40a720:	mov    esi,0x107517ea
  40a725:	mov    cs,WORD PTR fs:[edx-0x1f03d9a9]
  40a72c:	pop    edi
  40a72d:	sbb    al,0x26
  40a72f:	or     ebp,edx
  40a731:	(bad)  
  40a732:	dec    eax
  40a733:	outs   dx,DWORD PTR ds:[esi]
  40a734:	aam    0x15
  40a736:	in     eax,0x37
  40a738:	iret   
  40a739:	or     ebp,DWORD PTR [ebx+0x23]
  40a73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a73d:	jne    0x40a722
  40a73f:	ffree  st(4)
  40a741:	jmp    0xc538:0x59900391
  40a748:	jns    0x40a7be
  40a74a:	push   esp
  40a74b:	mov    edx,0x7fe738f1
  40a750:	popf   
  40a751:	jecxz  0x40a714
  40a753:	lea    ecx,[eax-0x65]
  40a756:	push   0xa5404abe
  40a75b:	xor    ebx,esp
  40a75d:	call   0xf5:0xd24406df
  40a764:	neg    ebp
  40a766:	mov    esp,DWORD PTR [esi+0x761ae81c]
  40a76c:	mov    esp,0xd1841da3
  40a771:	shl    BYTE PTR [edx+edi*2-0x536c25f],1
  40a778:	cdq    
  40a779:	inc    edx
  40a77a:	jmp    0x40a7ed
  40a77c:	lock mov al,ds:0xb6393487
  40a782:	mov    eax,0xd87a15f3
  40a787:	or     BYTE PTR [eax-0x79661ba],0xda
  40a78e:	into   
  40a78f:	in     eax,0xbc
  40a791:	(bad)
  40a794:	jne    0x40a71e
  40a796:	add    eax,ecx
  40a798:	push   eax
  40a799:	push   esp
  40a79a:	inc    edx
  40a79b:	inc    eax
  40a79c:	push   edi
  40a79d:	jg     0x40a73f
  40a79f:	xchg   esi,eax
  40a7a0:	push   cs
  40a7a1:	daa    
  40a7a2:	cmp    DWORD PTR ds:0x63472678,esi
  40a7a8:	fbld   TBYTE PTR [eax+0x7593eaa8]
  40a7ae:	(bad)  
  40a7af:	mov    edi,0xe30a4b07
  40a7b4:	mov    al,ds:0x64aa3ebc
  40a7b9:	pop    eax
  40a7ba:	test   BYTE PTR [ebx],dh
  40a7bc:	in     al,dx
  40a7bd:	std    
  40a7be:	mov    ch,0x19
  40a7c0:	pop    edx
  40a7c1:	jne    0x40a833
  40a7c3:	pushf  
  40a7c4:	inc    edi
  40a7c5:	dec    eax
  40a7c6:	pop    ebx
  40a7c7:	add    BYTE PTR [edi-0x2d],0xa5
  40a7cb:	je     0x40a7c3
  40a7cd:	dec    esi
  40a7ce:	xor    al,0xb6
  40a7d0:	call   0x73bdd08d
  40a7d5:	sbb    bh,BYTE PTR [eax+edi*8]
  40a7d8:	or     BYTE PTR [esp+eax*8-0x46],0x85
  40a7dd:	sbb    DWORD PTR [ebp+eiz*4-0x446f10b9],esi
  40a7e4:	mov    bh,0x47
  40a7e6:	mov    bh,0x97
  40a7e8:	pop    ds
  40a7e9:	mov    bl,0x41
  40a7eb:	test   BYTE PTR [ebp+0x7],al
  40a7ee:	mov    dl,0x5
  40a7f0:	adc    bh,BYTE PTR [ebx]
  40a7f2:	(bad)  [eax+0x27]
  40a7f5:	sbb    DWORD PTR [edx],0x20214a28
  40a7fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7fc:	shr    BYTE PTR [ebx+0x5f1546fa],cl
  40a802:	test   eax,0xcf3f0a5c
  40a807:	aam    0x24
  40a809:	pop    es
  40a80a:	push   0x6776fd67
  40a80f:	mov    eax,ds:0xa2facffe
  40a814:	daa    
  40a815:	cmp    eax,0xc28c6328
  40a81a:	cmp    DWORD PTR [edx+0x10],ebx
  40a81d:	loopne 0x40a7d1
  40a81f:	fucomip st,st(4)
  40a821:	pop    esi
  40a822:	or     ah,dl
  40a824:	push   edx
  40a825:	xchg   edx,eax
  40a826:	mov    bl,0xe6
  40a828:	fsub   DWORD PTR [edi-0x670b698b]
  40a82e:	mov    ecx,0x19887c5c
  40a833:	loop   0x40a839
  40a835:	cli    
  40a836:	jno    0x40a855
  40a838:	gs adc eax,0xe19fcb24
  40a83e:	out    0x85,eax
  40a840:	cmp    dh,BYTE PTR ds:0xbeaa2e2b
  40a846:	ins    BYTE PTR es:[edi],dx
  40a847:	mov    bh,0x8c
  40a849:	sub    ebp,ebx
  40a84b:	add    DWORD PTR [edx+0x5981a956],esp
  40a851:	xchg   edi,eax
  40a852:	clc    
  40a853:	fld    DWORD PTR [esi+0x6f109873]
  40a859:	jle    0x40a842
  40a85b:	cmc    
  40a85c:	enter  0x3eae,0x9a
  40a860:	dec    edi
  40a861:	xchg   edi,eax
  40a862:	fmul   DWORD PTR [ebx+0x558be045]
  40a868:	lock xor eax,esi
  40a86b:	lea    eax,[eax+edx*1+0x3272ef]
  40a872:	mov    DWORD PTR [ebp-0x10],eax
  40a875:	jmp    0x4018ca
  40a87a:	mov    ebx,DWORD PTR [ebp-0x3c]
  40a87d:	mov    eax,DWORD PTR [ebp+0xc]
  40a880:	xor    eax,esi
  40a882:	lea    ecx,[ecx+eax*1+0x3272ef]
  40a889:	lea    eax,[ecx-0x3272ef]
  40a88f:	xor    eax,esi
  40a891:	cmp    eax,0xf89c95b9
  40a896:	jne    0x40186e
  40a89c:	dec    DWORD PTR [ebp-0x34]
  40a89f:	jne    0x401862
  40a8a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a8a8:	mov    ecx,DWORD PTR [ebp+0xc]
  40a8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40a8ae:	xor    ecx,esi
  40a8b0:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272ef]
  40a8b7:	xor    eax,esi
  40a8b9:	mov    al,BYTE PTR [eax+ebx*1+0x3272ef]
  40a8c0:	xor    edx,esi
  40a8c2:	mov    BYTE PTR [edx+ebx*1+0x3272ef],cl
  40a8c9:	mov    ecx,DWORD PTR [ebp+0xc]
  40a8cc:	xor    ecx,esi
  40a8ce:	mov    BYTE PTR [ecx+ebx*1+0x3272ef],al
  40a8d5:	mov    eax,DWORD PTR [ebp+0xc]
  40a8d8:	xor    eax,esi
  40a8da:	add    eax,edi
  40a8dc:	pop    edi
  40a8dd:	pop    esi
  40a8de:	pop    ebx
  40a8df:	leave  
  40a8e0:	ret    0x8
  40a8e3:	mov    DWORD PTR ds:0x42a14f,0x31f7
  40a8ed:	xor    eax,eax
  40a8ef:	xor    DWORD PTR ds:0x42a133,0x42a16f
  40a8f9:	inc    eax
  40a8fa:	ret    
  40a8fb:	push   ebp
  40a8fc:	mov    ebp,esp
  40a8fe:	sub    esp,0x38
  40a901:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a908:	push   ebx
  40a909:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  40a910:	add    eax,0x7451
  40a915:	mov    eax,DWORD PTR [ebp-0x4]
  40a918:	push   esi
  40a919:	adc    DWORD PTR ds:0x42a16f,0x11c9
  40a923:	mov    esi,0x75108a8
  40a928:	xor    eax,esi
  40a92a:	and    DWORD PTR ds:0x42a1cb,0x42a193
  40a934:	push   edi
  40a935:	mov    edi,DWORD PTR ds:0x42a1bf
  40a93b:	or     DWORD PTR ds:0x42a1cb,edi
  40a941:	mov    edi,0x3272ef
  40a946:	add    eax,edi
  40a948:	sub    DWORD PTR ds:0x42a1a7,0x1574
  40a952:	mov    DWORD PTR [ebp-0x1c],eax
  40a955:	mov    DWORD PTR ds:0x42a16b,0x10
  40a95f:	cmp    DWORD PTR ds:0x42a16b,0x0
  40a966:	je     0x40a99e
  40a96c:	cmp    DWORD PTR ds:0x42a16b,0x12
  40a973:	jle    0x40a99e
  40a979:	jmp    0x40a98e
  40a97e:	push   0x8e23
  40a983:	push   0x3392
  40a988:	call   DWORD PTR ds:0x42a2c7
  40a98e:	mov    eax,ds:0x42a16b
  40a993:	dec    eax
  40a994:	mov    ds:0x42a16b,eax
  40a999:	jmp    0x40a95f
  40a99e:	mov    eax,DWORD PTR [ebp+0x14]
  40a9a1:	test   eax,eax
  40a9a3:	mov    DWORD PTR ds:0x42a19b,0x1a9e
  40a9ad:	je     0x40aa33
  40a9b3:	mov    DWORD PTR ds:0x42a17f,0x1e
  40a9bd:	cmp    DWORD PTR ds:0x42a17f,0x0
  40a9c4:	je     0x40aa1b
  40a9ca:	cmp    DWORD PTR ds:0x42a17f,0xc
  40a9d1:	jb     0x40aa1b
  40a9d7:	jmp    0x40a9ef
  40a9dc:	push   DWORD PTR [ebp-0xc]
  40a9df:	push   0x42a1af
  40a9e4:	push   0x400000
  40a9e9:	call   DWORD PTR ds:0x42a2cf
  40a9ef:	cmp    DWORD PTR ds:0x42a17f,0xd
  40a9f6:	jne    0x40aa09
  40a9fc:	mov    ebx,DWORD PTR ds:0x42a17f
  40aa02:	dec    ebx
  40aa03:	mov    DWORD PTR ds:0x42a17f,ebx
  40aa09:	mov    ebx,DWORD PTR ds:0x42a17f
  40aa0f:	dec    ebx
  40aa10:	mov    DWORD PTR ds:0x42a17f,ebx
  40aa16:	jmp    0x40a9bd
  40aa1b:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1e:	or     ebx,0x6757
  40aa24:	mov    eax,DWORD PTR [eax]
  40aa26:	xor    DWORD PTR ds:0x42a127,0x5a4b
  40aa30:	mov    DWORD PTR [ebp-0x1c],eax
  40aa33:	mov    eax,DWORD PTR [ebp-0x4]
  40aa36:	dec    DWORD PTR ds:0x42a18f
  40aa3c:	xor    eax,esi
  40aa3e:	add    eax,edi
  40aa40:	and    DWORD PTR ds:0x42a18f,0x0
  40aa4a:	jmp    0x40aa5c
  40aa4f:	mov    ebx,DWORD PTR ds:0x42a18f
  40aa55:	inc    ebx
  40aa56:	mov    DWORD PTR ds:0x42a18f,ebx
  40aa5c:	cmp    DWORD PTR ds:0x42a18f,0x13
  40aa63:	jae    0x40aaaa
  40aa69:	cmp    DWORD PTR ds:0x42a18f,0x4
  40aa70:	jb     0x40aaaa
  40aa76:	jmp    0x40aa8b
  40aa7b:	push   0x42a127
  40aa80:	push   0x37a6
  40aa85:	call   DWORD PTR ds:0x42a2d3
  40aa8b:	cmp    DWORD PTR ds:0x42a18f,0x3
  40aa92:	jne    0x40aaa5
  40aa98:	mov    ebx,DWORD PTR ds:0x42a18f
  40aa9e:	inc    ebx
  40aa9f:	mov    DWORD PTR ds:0x42a18f,ebx
  40aaa5:	jmp    0x40aa4f
  40aaaa:	mov    DWORD PTR [ebp-0x8],eax
  40aaad:	mov    ebx,DWORD PTR ds:0x42a1e7
  40aab3:	mov    ebx,DWORD PTR [ebx]
  40aab5:	xor    DWORD PTR ds:0x42a17f,ebx
  40aabb:	mov    eax,DWORD PTR [ebp-0xc]
  40aabe:	mov    DWORD PTR ds:0x42a1cb,0x14
  40aac8:	cmp    DWORD PTR ds:0x42a1cb,0x0
  40aacf:	je     0x40aaff
  40aad5:	cmp    DWORD PTR ds:0x42a1cb,0x16
  40aadc:	jbe    0x40aaff
  40aae2:	jmp    0x40aaed
  40aae7:	call   DWORD PTR ds:0x42a293
  40aaed:	mov    ebx,DWORD PTR ds:0x42a1cb
  40aaf3:	dec    ebx
  40aaf4:	mov    DWORD PTR ds:0x42a1cb,ebx
  40aafa:	jmp    0x40aac8
  40aaff:	xor    eax,esi
  40ab01:	movzx  ebx,BYTE PTR ds:0x42a17b
  40ab08:	adc    ebx,DWORD PTR ds:0x42a1af
  40ab0e:	mov    DWORD PTR ds:0x42a17b,ebx
  40ab14:	add    eax,edi
  40ab16:	mov    DWORD PTR ds:0x42a16f,0x16
  40ab20:	cmp    DWORD PTR ds:0x42a16f,0x0
  40ab27:	je     0x40ab6b
  40ab2d:	cmp    DWORD PTR ds:0x42a16f,0x1e
  40ab34:	jbe    0x40ab6b
  40ab3a:	jmp    0x40ab57
  40ab3f:	push   DWORD PTR [ebp-0x1c]
  40ab42:	push   0x2f0e
  40ab47:	push   0x429025
  40ab4c:	push   0x400000
  40ab51:	call   DWORD PTR ds:0x42a297
  40ab57:	xor    ebx,ebx
  40ab59:	add    ebx,DWORD PTR ds:0x42a16f
  40ab5f:	dec    ebx
  40ab60:	mov    DWORD PTR ds:0x42a16f,ebx
  40ab66:	jmp    0x40ab20
  40ab6b:	mov    DWORD PTR [ebp-0x24],eax
  40ab6e:	sub    DWORD PTR ds:0x42a183,0x244c
  40ab78:	mov    eax,DWORD PTR [ebp-0x4]
  40ab7b:	xor    eax,esi
  40ab7d:	neg    DWORD PTR ds:0x42a1c7
  40ab83:	add    eax,edi
  40ab85:	and    DWORD PTR ds:0x42a18b,0x0
  40ab8f:	jmp    0x40aba1
  40ab94:	mov    ebx,DWORD PTR ds:0x42a18b
  40ab9a:	inc    ebx
  40ab9b:	mov    DWORD PTR ds:0x42a18b,ebx
  40aba1:	cmp    DWORD PTR ds:0x42a18b,0x19
  40aba8:	jae    0x40abe5
  40abae:	cmp    DWORD PTR ds:0x42a18b,0xf
  40abb5:	jb     0x40abe5
  40abbb:	jmp    0x40abc6
  40abc0:	call   DWORD PTR ds:0x42a29b
  40abc6:	cmp    DWORD PTR ds:0x42a18b,0xe
  40abcd:	jne    0x40abe0
  40abd3:	mov    ebx,DWORD PTR ds:0x42a18b
  40abd9:	inc    ebx
  40abda:	mov    DWORD PTR ds:0x42a18b,ebx
  40abe0:	jmp    0x40ab94
  40abe5:	mov    DWORD PTR [ebp-0x30],eax
  40abe8:	mov    ebx,DWORD PTR [ebp-0x4]
  40abeb:	and    DWORD PTR ds:0x42a13f,ecx
  40abf1:	xor    ebx,esi
  40abf3:	and    DWORD PTR ds:0x42a17f,0x0
  40abfd:	jmp    0x40ac0d
  40ac02:	mov    eax,ds:0x42a17f
  40ac07:	inc    eax
  40ac08:	mov    ds:0x42a17f,eax
  40ac0d:	cmp    DWORD PTR ds:0x42a17f,0x13
  40ac14:	jae    0x40ac61
  40ac1a:	cmp    DWORD PTR ds:0x42a17f,0x6
  40ac21:	jb     0x40ac61
  40ac27:	jmp    0x40ac44
  40ac2c:	push   0x65b7
  40ac31:	push   0x437f
  40ac36:	push   0x4291f1
  40ac3b:	push   DWORD PTR [ebp-0x1c]
  40ac3e:	call   DWORD PTR ds:0x42a2a3
  40ac44:	cmp    DWORD PTR ds:0x42a17f,0x5
  40ac4b:	jne    0x40ac5c
  40ac51:	mov    eax,ds:0x42a17f
  40ac56:	inc    eax
  40ac57:	mov    ds:0x42a17f,eax
  40ac5c:	jmp    0x40ac02
  40ac61:	add    ebx,edi
  40ac63:	mov    DWORD PTR ds:0x42a147,0x13
  40ac6d:	cmp    DWORD PTR ds:0x42a147,0x0
  40ac74:	je     0x40aca2
  40ac7a:	cmp    DWORD PTR ds:0x42a147,0x18
  40ac81:	jg     0x40aca2
  40ac87:	jmp    0x40ac92
  40ac8c:	call   DWORD PTR ds:0x42a2a7
  40ac92:	mov    eax,ds:0x42a147
  40ac97:	dec    eax
  40ac98:	mov    ds:0x42a147,eax
  40ac9d:	jmp    0x40ac6d
  40aca2:	mov    eax,DWORD PTR [ebp-0x24]
  40aca5:	or     DWORD PTR ds:0x42a177,0x6e45
  40acaf:	sub    eax,edi
  40acb1:	sub    DWORD PTR ds:0x42a143,0x42a193
  40acbb:	lea    ecx,[ebx-0x3272ef]
  40acc1:	xor    eax,esi
  40acc3:	xor    ecx,esi
  40acc5:	mov    DWORD PTR ds:0x42a1b7,0x526e
  40accf:	cmp    ecx,eax
  40acd1:	je     0x40aeaf
  40acd7:	or     DWORD PTR ds:0x42a127,0x176b
  40ace1:	mov    eax,DWORD PTR [ebp-0x4]
  40ace4:	xor    eax,esi
  40ace6:	add    DWORD PTR ds:0x42a14f,0x42a14b
  40acf0:	add    eax,edi
  40acf2:	cmp    ebx,eax
  40acf4:	mov    DWORD PTR ds:0x42a1bf,0x7cb
  40acfe:	jne    0x40ae8c
  40ad04:	xor    DWORD PTR ds:0x42a163,0x47ee
  40ad0e:	push   DWORD PTR [ebp+0x8]
  40ad11:	not    DWORD PTR ds:0x42a177
  40ad17:	call   0x424d0e
  40ad1c:	mov    DWORD PTR [ebp-0x14],eax
  40ad1f:	and    DWORD PTR ds:0x42a163,0x0
  40ad29:	mov    ecx,DWORD PTR ds:0x42a163
  40ad2f:	inc    ecx
  40ad30:	mov    DWORD PTR ds:0x42a163,ecx
  40ad36:	cmp    DWORD PTR ds:0x42a163,0x9
  40ad3d:	jle    0x40ad82
  40ad43:	jmp    0x40ad5b
  40ad48:	push   0x1fb9
  40ad4d:	push   0x42a1c3
  40ad52:	push   DWORD PTR [ebp-0x28]
  40ad55:	call   DWORD PTR ds:0x42a2ab
  40ad5b:	cmp    DWORD PTR ds:0x42a163,0x8
  40ad62:	jne    0x40ad75
  40ad68:	mov    ecx,DWORD PTR ds:0x42a163
  40ad6e:	inc    ecx
  40ad6f:	mov    DWORD PTR ds:0x42a163,ecx
  40ad75:	cmp    DWORD PTR ds:0x42a163,0x13
  40ad7c:	jb     0x40ad29
  40ad82:	mov    eax,DWORD PTR [ebp-0x4]
  40ad85:	sub    ecx,DWORD PTR ds:0x42a1af
  40ad8b:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad8e:	xor    DWORD PTR ds:0x42a137,0x508b
  40ad98:	xor    eax,esi
  40ad9a:	sub    DWORD PTR ds:0x42a177,0x58b3
  40ada4:	add    eax,edi
  40ada6:	mov    DWORD PTR ds:0x42a1cf,0x3d63
  40adb0:	cmp    ecx,eax
  40adb2:	mov    DWORD PTR ds:0x42a15f,0x56c5
  40adbc:	je     0x40af1a
  40adc2:	sub    DWORD PTR ds:0x42a15f,0x42a183
  40adcc:	push   DWORD PTR [ebp-0x14]
  40adcf:	add    DWORD PTR ds:0x42a147,0x42a193
  40add9:	push   DWORD PTR [ebp+0x8]
  40addc:	call   0x424e0f
  40ade1:	mov    DWORD PTR [ebp-0x14],eax
  40ade4:	and    DWORD PTR ds:0x42a1af,0x0
  40adee:	mov    ecx,DWORD PTR ds:0x42a1af
  40adf4:	inc    ecx
  40adf5:	mov    DWORD PTR ds:0x42a1af,ecx
  40adfb:	cmp    DWORD PTR ds:0x42a1af,0xd
  40ae02:	ja     0x40ae48
  40ae08:	jmp    0x40ae21
  40ae0d:	push   0x24a8
  40ae12:	push   DWORD PTR [ebp-0x1c]
  40ae15:	push   DWORD PTR [ebp-0x14]
  40ae18:	push   DWORD PTR [ebp-0x10]
  40ae1b:	call   DWORD PTR ds:0x42a2af
  40ae21:	cmp    DWORD PTR ds:0x42a1af,0xc
  40ae28:	jne    0x40ae3b
  40ae2e:	mov    ecx,DWORD PTR ds:0x42a1af
  40ae34:	inc    ecx
  40ae35:	mov    DWORD PTR ds:0x42a1af,ecx
  40ae3b:	cmp    DWORD PTR ds:0x42a1af,0x18
  40ae42:	jb     0x40adee
  40ae48:	mov    eax,DWORD PTR [ebp-0x4]
  40ae4b:	mov    ecx,DWORD PTR [ebp-0x14]
  40ae4e:	xor    eax,esi
  40ae50:	add    eax,edi
  40ae52:	cmp    ecx,eax
  40ae54:	je     0x40af1a
  40ae5a:	mov    eax,DWORD PTR [ebp-0x14]
  40ae5d:	mov    eax,DWORD PTR [eax+0x18]
  40ae60:	mov    DWORD PTR [ebp-0x24],eax
  40ae63:	mov    eax,DWORD PTR [ebp-0x14]
  40ae66:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae69:	add    ecx,DWORD PTR [eax+0x20]
  40ae6c:	mov    DWORD PTR [ebp-0x2c],ecx
  40ae6f:	mov    eax,DWORD PTR [ebp-0x14]
  40ae72:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae75:	add    ecx,DWORD PTR [eax+0x24]
  40ae78:	mov    DWORD PTR [ebp-0x34],ecx
  40ae7b:	mov    eax,DWORD PTR [ebp-0x14]
  40ae7e:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae81:	add    ecx,DWORD PTR [eax+0x1c]
  40ae84:	mov    DWORD PTR [ebp-0x14],ecx
  40ae87:	jmp    0x40aee2
  40ae8c:	mov    eax,DWORD PTR [ebp-0x2c]
  40ae8f:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae92:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae95:	mov    DWORD PTR [ebp-0x28],ecx
  40ae98:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9b:	mov    ecx,DWORD PTR [ebp-0x28]
  40ae9e:	xor    eax,esi
  40aea0:	add    eax,edi
  40aea2:	cmp    ecx,eax
  40aea4:	je     0x40aee2
  40aeaa:	jmp    0x40aed3
  40aeaf:	mov    eax,DWORD PTR [ebp-0x4]
  40aeb2:	mov    ecx,DWORD PTR [ebp-0x8]
  40aeb5:	xor    eax,esi
  40aeb7:	add    eax,edi
  40aeb9:	cmp    ecx,eax
  40aebb:	mov    eax,DWORD PTR [ebp-0x4]
  40aebe:	je     0x40af1d
  40aec4:	mov    ecx,DWORD PTR [ebp-0x30]
  40aec7:	xor    eax,esi
  40aec9:	add    eax,edi
  40aecb:	cmp    ecx,eax
  40aecd:	je     0x40af26
  40aed3:	lea    eax,[ebp-0x8]
  40aed6:	push   eax
  40aed7:	push   DWORD PTR [ebp-0x28]
  40aeda:	push   DWORD PTR [ebp+0xc]
  40aedd:	call   0x40b11d
  40aee2:	mov    eax,DWORD PTR [ebp-0x4]
  40aee5:	mov    ecx,DWORD PTR [ebp-0x8]
  40aee8:	xor    eax,esi
  40aeea:	add    eax,edi
  40aeec:	cmp    ecx,eax
  40aeee:	je     0x40af09
  40aef4:	mov    eax,DWORD PTR [ebp-0x34]
  40aef7:	movzx  eax,WORD PTR [eax+ebx*2]
  40aefb:	mov    ecx,DWORD PTR [ebp-0x14]
  40aefe:	mov    eax,DWORD PTR [ecx+eax*4]
  40af01:	mov    DWORD PTR [ebp-0x38],eax
  40af04:	jmp    0x40aeaf
  40af09:	mov    eax,DWORD PTR [ebp-0xc]
  40af0c:	xor    eax,esi
  40af0e:	lea    ebx,[ebx+eax*1+0x3272ef]
  40af15:	jmp    0x40ac63
  40af1a:	mov    eax,DWORD PTR [ebp-0x4]
  40af1d:	xor    eax,esi
  40af1f:	add    eax,edi
  40af21:	jmp    0x40b045
  40af26:	mov    eax,DWORD PTR [ebp-0x38]
  40af29:	add    eax,DWORD PTR [ebp+0x8]
  40af2c:	mov    DWORD PTR [ebp-0x18],eax
  40af2f:	mov    eax,DWORD PTR [ebp-0x1c]
  40af32:	test   eax,eax
  40af34:	je     0x40afce
  40af3a:	mov    DWORD PTR [ebp-0x20],0x0
  40af41:	push   0x3
  40af43:	xor    edx,edx
  40af45:	pop    edx
  40af46:	add    edx,0x8
  40af49:	push   edx
  40af4a:	pop    ecx
  40af4b:	push   0x6
  40af4d:	dec    ecx
  40af4e:	pop    ebx
  40af4f:	dec    ebx
  40af50:	xchg   ebx,ecx
  40af52:	sub    ebx,ecx
  40af54:	xchg   ebx,ecx
  40af56:	dec    ecx
  40af57:	mov    eax,DWORD PTR [ebp-0x1c]
  40af5a:	imul   eax,ecx
  40af5d:	sub    esp,eax
  40af5f:	mov    DWORD PTR [ebp-0x20],esp
  40af62:	mov    eax,DWORD PTR [ebp-0x4]
  40af65:	xor    eax,esi
  40af67:	add    eax,edi
  40af69:	jmp    0x40afa7
  40af6e:	mov    ecx,DWORD PTR [ebp-0xc]
  40af71:	mov    eax,DWORD PTR [ebp+0x8]
  40af74:	mov    edx,DWORD PTR [ebp+0x14]
  40af77:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40af7b:	xor    ecx,esi
  40af7d:	add    ecx,edi
  40af7f:	xor    edx,edx
  40af81:	div    ecx
  40af83:	mov    ecx,DWORD PTR [ebp-0x4]
  40af86:	xor    ecx,esi
  40af88:	lea    eax,[ecx+eax*1+0x3272ef]
  40af8f:	mov    ecx,DWORD PTR [ebp+0x8]
  40af92:	mov    edx,DWORD PTR [ebp-0x20]
  40af95:	mov    DWORD PTR [edx+ecx*4],eax
  40af98:	mov    eax,DWORD PTR [ebp-0xc]
  40af9b:	mov    ecx,DWORD PTR [ebp+0x8]
  40af9e:	xor    eax,esi
  40afa0:	lea    eax,[eax+ecx*1+0x3272ef]
  40afa7:	mov    DWORD PTR [ebp+0x8],eax
  40afaa:	mov    eax,DWORD PTR [ebp-0xc]
  40afad:	mov    ecx,DWORD PTR [ebp+0x14]
  40afb0:	xor    eax,esi
  40afb2:	add    eax,edi
  40afb4:	imul   eax,DWORD PTR [ecx]
  40afb7:	mov    ecx,DWORD PTR [ebp-0x4]
  40afba:	mov    edx,DWORD PTR [ebp+0x8]
  40afbd:	xor    ecx,esi
  40afbf:	lea    ecx,[ecx+edx*1+0x3272ef]
  40afc6:	cmp    ecx,eax
  40afc8:	jne    0x40af6e
  40afce:	mov    eax,DWORD PTR [ebp-0x4]
  40afd1:	xor    eax,esi
  40afd3:	add    eax,edi
  40afd5:	mov    DWORD PTR [ebp-0x10],eax
  40afd8:	mov    ebx,0x65655
  40afdd:	add    ebx,0x3234
  40afe3:	xchg   ebx,esi
  40afe5:	xor    ebx,ebx
  40afe7:	push   esi
  40afe8:	mov    esi,ebx
  40afea:	pop    ebx
  40afeb:	mov    edx,esi
  40afed:	add    ebx,0x1002
  40aff3:	lea    eax,[ebp-0x18]
  40aff6:	add    edx,eax
  40aff8:	add    edx,0x5
  40affb:	push   edx
  40affc:	inc    esi
  40affd:	pop    ecx
  40affe:	dec    ecx
  40afff:	xchg   ecx,eax
  40b000:	dec    eax
  40b001:	xchg   ecx,eax
  40b002:	dec    ecx
  40b003:	xchg   ecx,edx
  40b005:	dec    edx
  40b006:	push   edx
  40b007:	mov    edx,ebx
  40b009:	pop    ebx
  40b00a:	dec    ebx
  40b00b:	call   DWORD PTR [ebx]
  40b00d:	cmp    DWORD PTR [ebp+0x10],esi
  40b010:	je     0x40b031
  40b016:	xchg   edx,eax
  40b017:	push   0xc
  40b019:	pop    ecx
  40b01a:	dec    ecx
  40b01b:	push   0x3
  40b01d:	pop    ebx
  40b01e:	inc    ebx
  40b01f:	xchg   ebx,ecx
  40b021:	inc    ecx
  40b022:	sub    ebx,ecx
  40b024:	xchg   ebx,ecx
  40b026:	dec    ecx
  40b027:	dec    ecx
  40b028:	mov    eax,DWORD PTR [ebp-0x1c]
  40b02b:	imul   eax,ecx
  40b02e:	add    esp,eax
  40b030:	xchg   edx,eax
  40b031:	push   eax
  40b032:	xor    ebx,ebx
  40b034:	mov    edx,esp
  40b036:	dec    edx
  40b037:	inc    ebx
  40b038:	add    ebx,DWORD PTR [edx+ebx*1]
  40b03b:	dec    ebx
  40b03c:	xor    edx,edx
  40b03e:	add    DWORD PTR [ebp-0x10],ebx
  40b041:	pop    ebx
  40b042:	mov    eax,DWORD PTR [ebp-0x10]
  40b045:	pop    edi
  40b046:	pop    esi
  40b047:	pop    ebx
  40b048:	leave  
  40b049:	ret    0x10
  40b04c:	push   ebp
  40b04d:	mov    ebp,esp
  40b04f:	push   ecx
  40b050:	and    DWORD PTR ds:0x42a13f,0x0
  40b05a:	mov    ecx,DWORD PTR ds:0x42a13f
  40b060:	inc    ecx
  40b061:	mov    DWORD PTR ds:0x42a13f,ecx
  40b067:	cmp    DWORD PTR ds:0x42a13f,0x9
  40b06e:	jl     0x40b0b8
  40b074:	jmp    0x40b091
  40b079:	push   0x2d70
  40b07e:	push   DWORD PTR [ebp-0x14]
  40b081:	push   0x42a187
  40b086:	push   0x2ee9
  40b08b:	call   DWORD PTR ds:0x42a2b3
  40b091:	cmp    DWORD PTR ds:0x42a13f,0x8
  40b098:	jne    0x40b0ab
  40b09e:	mov    ecx,DWORD PTR ds:0x42a13f
  40b0a4:	inc    ecx
  40b0a5:	mov    DWORD PTR ds:0x42a13f,ecx
  40b0ab:	cmp    DWORD PTR ds:0x42a13f,0x1b
  40b0b2:	jb     0x40b05a
  40b0b8:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40b0bf:	mov    eax,DWORD PTR [ebp-0x4]
  40b0c2:	mov    edx,DWORD PTR [ebp+0x10]
  40b0c5:	and    ecx,DWORD PTR ds:0x42a1a7
  40b0cb:	mov    ecx,0x75108a8
  40b0d0:	or     DWORD PTR ds:0x42a187,0x42a183
  40b0da:	xor    eax,ecx
  40b0dc:	add    eax,0x3272ef
  40b0e1:	mov    DWORD PTR [edx],eax
  40b0e3:	mov    eax,DWORD PTR [ebp+0xc]
  40b0e6:	xor    eax,ecx
  40b0e8:	push   esi
  40b0e9:	mov    esi,DWORD PTR [ebp+0x10]
  40b0ec:	mov    edx,0x3272ef
  40b0f1:	add    eax,edx
  40b0f3:	mov    DWORD PTR [esi+0x4],eax
  40b0f6:	mov    eax,DWORD PTR [ebp+0x14]
  40b0f9:	mov    esi,DWORD PTR [ebp+0x10]
  40b0fc:	mov    DWORD PTR [esi+0x8],eax
  40b0ff:	mov    eax,DWORD PTR [ebp+0x18]
  40b102:	mov    esi,DWORD PTR [ebp+0x10]
  40b105:	mov    DWORD PTR [esi+0xc],eax
  40b108:	mov    eax,DWORD PTR [ebp+0x1c]
  40b10b:	mov    esi,DWORD PTR [ebp+0x10]
  40b10e:	mov    DWORD PTR [esi+0x10],eax
  40b111:	mov    eax,DWORD PTR [ebp+0x8]
  40b114:	xor    eax,ecx
  40b116:	add    eax,edx
  40b118:	pop    esi
  40b119:	leave  
  40b11a:	ret    0x18
  40b11d:	push   ebp
  40b11e:	mov    ebp,esp
  40b120:	sub    esp,0x9c
  40b126:	mov    ecx,DWORD PTR [ebp+0x8]
  40b129:	and    DWORD PTR ds:0x42a17f,0x0
  40b133:	mov    eax,ds:0x42a17f
  40b138:	inc    eax
  40b139:	mov    ds:0x42a17f,eax
  40b13e:	cmp    DWORD PTR ds:0x42a17f,0x9
  40b145:	jbe    0x40b18f
  40b14b:	jmp    0x40b16a
  40b150:	push   0x42a15f
  40b155:	push   0x468f
  40b15a:	push   0x42900e
  40b15f:	push   0x4290e5
  40b164:	call   DWORD PTR ds:0x42a2b7
  40b16a:	cmp    DWORD PTR ds:0x42a17f,0x8
  40b171:	jne    0x40b182
  40b177:	mov    eax,ds:0x42a17f
  40b17c:	inc    eax
  40b17d:	mov    ds:0x42a17f,eax
  40b182:	cmp    DWORD PTR ds:0x42a17f,0x13
  40b189:	jb     0x40b133
  40b18f:	mov    eax,0x8a96
  40b194:	xor    ax,WORD PTR [ecx+0x20]
  40b198:	add    DWORD PTR ds:0x42a18f,ecx
  40b19e:	mov    ecx,0x3b59
  40b1a3:	adc    DWORD PTR ds:0x42a1af,0x457a
  40b1ad:	add    ax,cx
  40b1b0:	movzx  eax,ax
  40b1b3:	mov    DWORD PTR ds:0x42a16b,0x1b
  40b1bd:	cmp    DWORD PTR ds:0x42a16b,0x0
  40b1c4:	je     0x40b1f7
  40b1ca:	cmp    DWORD PTR ds:0x42a16b,0x1f
  40b1d1:	ja     0x40b1f7
  40b1d7:	jmp    0x40b1e5
  40b1dc:	push   DWORD PTR [ebp-0x1c]
  40b1df:	call   DWORD PTR ds:0x42a2bf
  40b1e5:	mov    ecx,DWORD PTR ds:0x42a16b
  40b1eb:	dec    ecx
  40b1ec:	mov    DWORD PTR ds:0x42a16b,ecx
  40b1f2:	jmp    0x40b1bd
  40b1f7:	mov    DWORD PTR [ebp-0x10],eax
  40b1fa:	jmp    0x40d57f
  40b1ff:	inc    ecx
  40b200:	pop    edx
  40b201:	cmp    edi,esi
  40b203:	and    DWORD PTR [edi-0x78343779],edx
  40b209:	dec    ebp
  40b20a:	pop    eax
  40b20b:	mov    ds:0x36dbab8e,eax
  40b210:	cmc    
  40b211:	jp     0x40b28d
  40b213:	adc    bl,BYTE PTR [edi+0x7a]
  40b216:	jp     0x40b210
  40b218:	popw   es
  40b21a:	xchg   ebx,eax
  40b21b:	fs xchg ebx,eax
  40b21d:	ret    0xa7ce
  40b220:	lock fistp QWORD PTR [eax+0x7f]
  40b224:	clc    
  40b225:	dec    eax
  40b226:	add    ah,BYTE PTR [eax+ebx*1-0x1f290766]
  40b22d:	xchg   esp,eax
  40b22e:	push   es
  40b22f:	jbe    0x40b1df
  40b231:	push   0x180b41db
  40b236:	and    DWORD PTR [edi-0x1c05fc9c],ebp
  40b23c:	and    ebp,ebp
  40b23e:	test   cl,bl
  40b240:	adc    bl,BYTE PTR [esi]
  40b242:	adc    eax,0x4f7d885f
  40b247:	pop    ss
  40b248:	mov    cl,0x47
  40b24a:	or     DWORD PTR [ecx],edi
  40b24c:	enter  0xff1d,0x20
  40b250:	sub    bh,dl
  40b252:	outs   dx,BYTE PTR ds:[esi]
  40b253:	pop    ecx
  40b254:	fistp  DWORD PTR [ebp-0x52]
  40b257:	or     DWORD PTR [edx-0x50],ebx
  40b25a:	ret    
  40b25b:	gs xor ax,0xfd19
  40b260:	dec    eax
  40b261:	pop    edx
  40b262:	xchg   ecx,eax
  40b263:	lock repnz dec edi
  40b266:	mov    eax,ds:0x82394bc5
  40b26b:	aas    
  40b26c:	push   esi
  40b26e:	int3   
  40b26f:	aaa    
  40b270:	out    0x24,eax
  40b272:	pop    esi
  40b273:	push   edi
  40b274:	xor    DWORD PTR [edi+eiz*4+0x6b],edx
  40b278:	mov    edi,DWORD PTR [edi]
  40b27a:	push   ds
  40b27b:	jp     0x40b210
  40b27d:	pop    ecx
  40b27e:	jg     0x40b264
  40b280:	ror    edx,0x90
  40b283:	pop    esi
  40b284:	dec    edx
  40b285:	fimul  DWORD PTR [esi]
  40b287:	call   0xebedbda0
  40b28c:	and    eax,0x4c61a701
  40b291:	(bad)  [ebx]
  40b293:	add    eax,0xd10cbd18
  40b298:	in     eax,dx
  40b299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b29a:	test   al,0x0
  40b29c:	pop    eax
  40b29d:	lea    di,[ebx-0xbb43d5]
  40b2a4:	out    0x5e,al
  40b2a6:	mov    ah,0xa7
  40b2a8:	out    dx,al
  40b2a9:	ja     0x40b317
  40b2ab:	int3   
  40b2ac:	jl     0x40b2cd
  40b2ae:	(bad)  
  40b2af:	pop    esi
  40b2b0:	push   es
  40b2b1:	std    
  40b2b2:	xchg   esi,eax
  40b2b3:	iret   
  40b2b4:	ret    
  40b2b5:	jmp    DWORD PTR [esp+ebx*8-0xa3f620b]
  40b2bc:	lahf   
  40b2bd:	ficomp DWORD PTR es:[esi-0x38d257c0]
  40b2c4:	pop    ebp
  40b2c5:	scas   al,BYTE PTR es:[di]
  40b2c7:	rcl    edi,1
  40b2c9:	jl     0x40b2b0
  40b2cb:	fnstcw WORD PTR [eax]
  40b2cd:	jecxz  0x40b2ff
  40b2cf:	inc    eax
  40b2d0:	pop    ebx
  40b2d1:	mov    cl,0x44
  40b2d3:	outs   dx,BYTE PTR ds:[esi]
  40b2d4:	mov    edi,DWORD PTR [ebp-0x29]
  40b2d7:	test   eax,0x86f85d23
  40b2dc:	sbb    DWORD PTR [ecx+0x4cf05d84],esi
  40b2e2:	push   edi
  40b2e3:	dec    edi
  40b2e4:	inc    edi
  40b2e5:	ins    BYTE PTR es:[edi],dx
  40b2e6:	xchg   ecx,eax
  40b2e7:	das    
  40b2e8:	adc    ebx,0x1d
  40b2eb:	ja     0x40b2a7
  40b2ed:	mov    ebx,0x910a1aa8
  40b2f2:	jnp    0x40b336
  40b2f4:	cmp    eax,0x85d99b0e
  40b2f9:	ins    DWORD PTR es:[edi],dx
  40b2fa:	xchg   esi,eax
  40b2fb:	mov    BYTE PTR [ecx-0x401d962f],bl
  40b301:	icebp  
  40b302:	mov    WORD PTR es:[edi-0xd59794d],cs
  40b309:	lds    edi,FWORD PTR [eax+0x374dbc4c]
  40b30f:	scas   al,BYTE PTR es:[edi]
  40b310:	test   ch,ch
  40b312:	jne    0x40b38f
  40b314:	arpl   si,ax
  40b316:	or     BYTE PTR ds:0xe14044dc,dh
  40b31c:	jecxz  0x40b2ef
  40b31e:	ficom  WORD PTR [edx+0x7c]
  40b321:	retw   
  40b323:	add    esp,esi
  40b325:	loope  0x40b2ae
  40b327:	fs pop edi
  40b329:	sbb    eax,0x8b6638b3
  40b32e:	pop    es
  40b32f:	and    al,0x80
  40b331:	push   0xc27c152c
  40b336:	jle    0x40b2ca
  40b338:	xchg   esp,eax
  40b339:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b33b:	rol    BYTE PTR [eax+0x1593786a],cl
  40b341:	and    esi,ecx
  40b343:	js     0x40b3a8
  40b345:	jmp    DWORD PTR [edi-0x59]
  40b348:	scas   eax,DWORD PTR es:[edi]
  40b349:	sub    al,0x8f
  40b34b:	(bad)  
  40b34c:	je     0x40b2fd
  40b34e:	scas   al,BYTE PTR es:[edi]
  40b34f:	out    0xb,al
  40b351:	loop   0x40b356
  40b353:	lea    ebp,[ecx+0xb0f8406]
  40b359:	jecxz  0x40b31f
  40b35b:	inc    ebp
  40b35c:	inc    eax
  40b35d:	test   DWORD PTR [ebp-0x3dcc6027],esi
  40b363:	sbb    DWORD PTR [esi+ebp*8],esi
  40b366:	mov    BYTE PTR [esi+0x667b0123],dh
  40b36c:	(bad)  
  40b36e:	xor    al,0xe0
  40b370:	pushf  
  40b371:	pop    ss
  40b372:	jnp    0x40b39f
  40b374:	rcl    BYTE PTR ds:0xebb71d0f,cl
  40b37a:	outs   dx,BYTE PTR ds:[esi]
  40b37b:	xor    ebx,edi
  40b37d:	retf   
  40b37e:	ins    DWORD PTR es:[edi],dx
  40b37f:	push   ebp
  40b380:	es pusha 
  40b382:	imul   esi,esi,0x24e5c328
  40b388:	inc    ebx
  40b389:	imul   ebp,esp,0xffffffc7
  40b38c:	dec    ecx
  40b38d:	scas   al,BYTE PTR es:[edi]
  40b38e:	repnz dec ecx
  40b390:	outs   dx,BYTE PTR ds:[esi]
  40b391:	mov    dl,0xe9
  40b393:	sub    edx,DWORD PTR [edx+0x2bee6613]
  40b399:	mul    edi
  40b39b:	sub    bh,al
  40b39d:	out    0x65,eax
  40b39f:	fimul  WORD PTR [ecx-0x5d4b61a6]
  40b3a5:	push   ebx
  40b3a6:	sti    
  40b3a7:	or     al,BYTE PTR [ebx]
  40b3a9:	shr    DWORD PTR [edi-0x7e2a4e4a],0x63
  40b3b0:	aam    0xa
  40b3b2:	xchg   edi,eax
  40b3b3:	push   ecx
  40b3b4:	sub    BYTE PTR [eax+edx*8+0x25],bl
  40b3b8:	dec    ebx
  40b3b9:	xchg   DWORD PTR [eax+0x55d8ed2a],esi
  40b3bf:	(bad)  
  40b3c0:	push   eax
  40b3c1:	call   DWORD PTR ds:0x79f93aa3
  40b3c7:	push   cs
  40b3c8:	les    edx,FWORD PTR [edx+0x1b115870]
  40b3ce:	and    eax,0x5ddbf795
  40b3d3:	xor    dh,BYTE PTR [ebx]
  40b3d5:	addr16 dec ebp
  40b3d7:	mov    ds:0xf3fdaf23,eax
  40b3dc:	pop    edx
  40b3dd:	jp     0x40b389
  40b3df:	mov    DWORD PTR [esi-0x3b],0x74bc0ca2
  40b3e6:	jbe    0x40b43b
  40b3e8:	sti    
  40b3e9:	pusha  
  40b3ea:	add    ah,dl
  40b3ec:	lods   al,BYTE PTR ds:[esi]
  40b3ed:	jmp    0x907e:0xbc054aca
  40b3f4:	fst    DWORD PTR [eax-0x36]
  40b3f7:	cmp    ecx,DWORD PTR [ebp-0x5d8e7b12]
  40b3fd:	rcr    BYTE PTR [ecx+0x7d931684],1
  40b403:	mov    ah,0x67
  40b405:	(bad)  
  40b406:	jmp    0x40b3f4
  40b408:	(bad)
  40b40d:	lods   eax,DWORD PTR ds:[esi]
  40b40e:	adc    al,0x31
  40b410:	popa   
  40b411:	add    ch,bl
  40b413:	jge    0x40b490
  40b415:	lds    ecx,FWORD PTR [edi-0x5b]
  40b418:	sbb    al,0xa3
  40b41a:	stc    
  40b41b:	lea    ebx,[ebp-0x1f0bbb19]
  40b421:	xor    edi,ebp
  40b423:	aas    
  40b424:	mov    ds:0x3df25a12,eax
  40b429:	inc    ecx
  40b42a:	fsubp  st(2),st
  40b42c:	sti    
  40b42d:	and    BYTE PTR [ebx+0x7d],dh
  40b430:	sbb    eax,0x6f16e9d
  40b435:	xchg   ebp,eax
  40b436:	mov    BYTE PTR [eax],ch
  40b438:	or     eax,0x598b5cca
  40b43d:	ds repnz push ebp
  40b440:	pusha  
  40b441:	call   0x6e0ba4fd
  40b446:	(bad)  
  40b447:	retf   0x7f83
  40b44a:	dec    esi
  40b44b:	retf   
  40b44c:	sub    dh,dh
  40b44e:	jnp    0x40b461
  40b450:	test   DWORD PTR [edx],esp
  40b452:	mov    eax,0xe0690246
  40b457:	js     0x40b45e
  40b459:	sbb    ch,BYTE PTR [eax-0x56]
  40b45c:	das    
  40b45d:	rcr    DWORD PTR [ecx-0x78],1
  40b460:	cmp    DWORD PTR ds:0x90b90503,esi
  40b466:	cmp    al,0x29
  40b468:	in     al,dx
  40b469:	inc    ecx
  40b46a:	jmp    FWORD PTR [eax+0x3b72e0d3]
  40b470:	imul   bl
  40b472:	jmp    0x7aba:0x6e53fdc7
  40b479:	les    ebx,FWORD PTR [edi-0x2cd50e46]
  40b47f:	cmp    edx,DWORD PTR [edi+0x728413d8]
  40b485:	cld    
  40b486:	dec    edx
  40b487:	pop    edi
  40b488:	cmp    cl,BYTE PTR [ebx+ecx*1+0x2d]
  40b48c:	repz add eax,0x4eb6e0f
  40b492:	shl    BYTE PTR [eax],0xb6
  40b495:	push   ecx
  40b496:	jae    0x40b434
  40b498:	test   DWORD PTR [edi+0x61],eax
  40b49b:	popf   
  40b49c:	shr    esi,cl
  40b49e:	loope  0x40b51d
  40b4a0:	push   ecx
  40b4a1:	push   0xd9bbd08a
  40b4a6:	xor    BYTE PTR [eax],ah
  40b4a8:	mov    ecx,0xfde4b729
  40b4ad:	xchg   edi,eax
  40b4ae:	pushf  
  40b4af:	sbb    BYTE PTR [ecx+edi*1+0x17],al
  40b4b3:	outs   dx,BYTE PTR ds:[esi]
  40b4b4:	dec    ecx
  40b4b5:	xchg   ebp,eax
  40b4b6:	xchg   ebx,eax
  40b4b7:	jl     0x40b475
  40b4b9:	cmc    
  40b4ba:	jno    0x40b4f7
  40b4bc:	int3   
  40b4bd:	mov    BYTE PTR [eax-0x53a8d463],bl
  40b4c3:	(bad)  
  40b4c4:	mov    dl,0x41
  40b4c6:	xchg   esp,eax
  40b4c7:	ins    BYTE PTR es:[edi],dx
  40b4c8:	inc    ebx
  40b4c9:	jae    0x40b485
  40b4cb:	cmp    bh,dl
  40b4cd:	mov    esp,0x1a2eca7f
  40b4d2:	rcr    DWORD PTR [esi+0x72],0xd4
  40b4d6:	cmp    eax,0x95f113f8
  40b4db:	out    0x7b,al
  40b4dd:	cwde   
  40b4de:	mov    eax,0xba21a3af
  40b4e3:	cmp    DWORD PTR ds:0x79f46761,ebx
  40b4e9:	clc    
  40b4ea:	pop    ecx
  40b4eb:	pusha  
  40b4ec:	cmc    
  40b4ed:	dec    eax
  40b4ee:	call   0x4074:0xb0feb950
  40b4f5:	mov    esp,0x2a10c5c
  40b4fa:	icebp  
  40b4fb:	xchg   esp,eax
  40b4fc:	pop    es
  40b4fd:	sbb    eax,0xbf57d27b
  40b502:	popf   
  40b503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b504:	aas    
  40b505:	jle    0x40b509
  40b507:	out    dx,eax
  40b508:	sub    ecx,ebp
  40b50a:	lds    eax,FWORD PTR [esi]
  40b50c:	das    
  40b50d:	fmul   DWORD PTR [esi+esi*1-0x4f]
  40b511:	shr    DWORD PTR [ecx-0x73280bb6],cl
  40b517:	push   esi
  40b518:	pop    esi
  40b519:	sbb    cl,al
  40b51b:	cld    
  40b51c:	enter  0x764f,0x86
  40b520:	fmul   DWORD PTR [ebp-0x2b]
  40b523:	jnp    0x40b51c
  40b525:	pop    ecx
  40b526:	fisubr DWORD PTR [ebp-0x244c8e78]
  40b52c:	test   eax,0x63241047
  40b531:	iret   
  40b532:	xchg   BYTE PTR ds:0xf5f055ac,al
  40b538:	cdq    
  40b539:	sub    DWORD PTR [edi-0x46],0xe84ceef7
  40b540:	aas    
  40b541:	daa    
  40b542:	jnp    0x40b52d
  40b544:	mov    esp,0xd51e8d1a
  40b549:	mov    ch,0xad
  40b54b:	call   0x22b5:0x957fce1f
  40b552:	cmp    ch,BYTE PTR [edx]
  40b554:	mov    BYTE PTR [edi-0x67],al
  40b557:	push   ebx
  40b558:	mov    ecx,0x57044eee
  40b55d:	pop    ecx
  40b55e:	cmp    BYTE PTR [ebp-0x5b288dda],0xa2
  40b565:	inc    ebp
  40b566:	jne    0x40b583
  40b568:	adc    DWORD PTR [ebp-0x3ccbe428],esp
  40b56e:	(bad)  
  40b56f:	aam    0x9e
  40b571:	push   esp
  40b572:	daa    
  40b573:	cmpxchg edi,ebp
  40b576:	loopne 0x40b56e
  40b578:	out    dx,al
  40b579:	nop
  40b57a:	sub    ch,BYTE PTR [esi+0x66f7b21]
  40b580:	div    DWORD PTR [ebx-0x52929f36]
  40b586:	pop    ss
  40b587:	clc    
  40b588:	xor    eax,0x34093cdc
  40b58d:	icebp  
  40b58e:	aam    0x93
  40b590:	mov    esi,0x15d7db1e
  40b595:	sub    DWORD PTR [ebp-0x2435e958],eax
  40b59b:	lock mov esp,DWORD PTR [ebp+ebx*2+0x2b6facd0]
  40b5a3:	xor    al,dl
  40b5a5:	cmp    edi,edx
  40b5a7:	mov    edi,0x7a873f07
  40b5ac:	or     BYTE PTR [ebp+0x10275d6d],dh
  40b5b2:	jle    0x40b5d4
  40b5b4:	mov    cl,0x9a
  40b5b6:	pop    ss
  40b5b7:	inc    esi
  40b5b8:	jecxz  0x40b564
  40b5ba:	mov    esi,0xd5f8ae28
  40b5bf:	push   esi
  40b5c0:	xchg   edx,eax
  40b5c1:	push   esp
  40b5c2:	loop   0x40b62a
  40b5c4:	iret   
  40b5c5:	outs   dx,DWORD PTR ds:[esi]
  40b5c6:	cs data16 arpl bp,bp
  40b5ca:	and    eax,0x4d777a87
  40b5cf:	mov    ecx,0x97cf7c94
  40b5d4:	inc    eax
  40b5d5:	push   ebp
  40b5d6:	jecxz  0x40b584
  40b5d8:	push   edx
  40b5d9:	xchg   esi,eax
  40b5da:	dec    esp
  40b5db:	and    ch,BYTE PTR cs:[eax+0x5ac1dbe3]
  40b5e2:	fldenv [eax+0x150d86e]
  40b5e8:	cmp    eax,0xa57bc2c7
  40b5ed:	adc    al,ch
  40b5ef:	fmul   QWORD PTR [ebx+eiz*2+0x99ecb42]
  40b5f6:	test   DWORD PTR [ebp+0x8],0x3591e509
  40b5fd:	mov    bx,0xdd86
  40b601:	push   esi
  40b602:	rcr    BYTE PTR [ebp-0x3e0689c1],cl
  40b608:	retf   0x60a3
  40b60b:	mov    ebp,0xc181157c
  40b610:	rcl    BYTE PTR [ebx-0x58],0x14
  40b614:	fisub  WORD PTR [ebx]
  40b616:	ret    
  40b617:	mov    al,0xf7
  40b619:	pop    edi
  40b61a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b61b:	cwde   
  40b61c:	imul   esp,DWORD PTR ds:0xc8113244,0x375cc689
  40b626:	fisttp DWORD PTR [ebx]
  40b628:	sub    ebx,esp
  40b62a:	jnp    0x40b683
  40b62c:	mov    bl,0xf4
  40b62e:	iret   
  40b62f:	sbb    edx,edx
  40b631:	add    ah,BYTE PTR [esi+eax*1+0x4b055115]
  40b638:	clc    
  40b639:	lods   eax,DWORD PTR ds:[esi]
  40b63a:	mov    al,0x5e
  40b63c:	(bad)  
  40b63d:	inc    esp
  40b63e:	imul   DWORD PTR [edi]
  40b640:	push   ecx
  40b641:	add    dl,BYTE PTR [ecx+0x72aa0033]
  40b647:	test   eax,0xca7525a8
  40b64c:	int3   
  40b64d:	push   eax
  40b64e:	out    dx,eax
  40b64f:	in     eax,0xc1
  40b651:	daa    
  40b652:	bound  ecx,QWORD PTR [edi-0x1f]
  40b655:	ror    DWORD PTR [eax+0xcc56a7d],0x40
  40b65c:	mov    dl,0xe0
  40b65e:	xchg   ebx,eax
  40b65f:	clc    
  40b660:	inc    ebx
  40b662:	pusha  
  40b663:	jp     0x40b698
  40b665:	mov    bl,0xda
  40b667:	mov    bh,dh
  40b669:	popf   
  40b66a:	push   esi
  40b66b:	lods   eax,DWORD PTR ds:[esi]
  40b66c:	xchg   esi,eax
  40b66d:	pushf  
  40b66e:	pop    ebx
  40b66f:	call   0xda42ac5a
  40b674:	ins    BYTE PTR es:[edi],dx
  40b675:	(bad)
  40b679:	outs   dx,BYTE PTR ds:[esi]
  40b67a:	pop    ebx
  40b67b:	retf   0x131d
  40b67e:	fcomp  st(4)
  40b680:	iret   
  40b681:	in     eax,0xce
  40b683:	imul   edx,DWORD PTR [edi],0xfffffff4
  40b686:	imul   edx
  40b688:	dec    ecx
  40b689:	fst    QWORD PTR [edx+ebp*4-0x23b80d20]
  40b690:	jle    0x40b669
  40b692:	mov    dl,0x93
  40b694:	cmp    ecx,ebx
  40b696:	js     0x40b62b
  40b698:	inc    BYTE PTR [esi+0x409ef61]
  40b69e:	add    esp,DWORD PTR [eax]
  40b6a0:	xchg   ebp,eax
  40b6a1:	fdivr  DWORD PTR [esi+ebx*8+0x22]
  40b6a5:	sub    eax,0x3985ecdc
  40b6aa:	test   DWORD PTR [eax-0x58807f1f],0x3141c37b
  40b6b4:	xor    al,0xdf
  40b6b6:	out    0x6b,eax
  40b6b8:	shr    dl,1
  40b6ba:	into   
  40b6bb:	daa    
  40b6bc:	mov    esp,DWORD PTR [edx+edx*1]
  40b6bf:	inc    edx
  40b6c0:	shl    BYTE PTR [esi+0x22e93aa7],0xbe
  40b6c7:	clc    
  40b6c8:	jo     0x40b727
  40b6ca:	sub    ebx,DWORD PTR [esi+0x4a]
  40b6cd:	cmp    BYTE PTR [ecx+0x46],bl
  40b6d0:	jne    0x40b6df
  40b6d2:	dec    esi
  40b6d3:	outs   dx,DWORD PTR ds:[esi]
  40b6d4:	or     edx,DWORD PTR ds:[edx]
  40b6d7:	or     DWORD PTR [ebp-0x1f043ed7],esi
  40b6dd:	jb     0x40b6a0
  40b6df:	gs mov ecx,0xe6fc6f0a
  40b6e5:	fisub  WORD PTR ds:0x18be65c2
  40b6eb:	push   eax
  40b6ec:	jns    0x40b6aa
  40b6ee:	fwait
  40b6ef:	cmp    BYTE PTR [ebx+0x42],bl
  40b6f2:	inc    DWORD PTR [ebx+0x62]
  40b6f5:	fisub  WORD PTR [ebp-0x28e83f3e]
  40b6fb:	mov    dh,0xd8
  40b6fd:	sete   BYTE PTR [ebp+0x6734e08d]
  40b704:	mov    ecx,edx
  40b706:	or     eax,0xd6f4bcd6
  40b70b:	or     ch,BYTE PTR [edx+edi*2]
  40b70e:	mov    bh,0xd5
  40b710:	inc    ebx
  40b711:	arpl   WORD PTR [edi*2+0x48b16d68],di
  40b718:	mov    al,ds:0x688cd476
  40b71d:	or     dh,BYTE PTR [eax+0x44]
  40b720:	in     al,dx
  40b721:	ds out dx,al
  40b723:	sub    eax,0x41d075c3
  40b728:	pop    eax
  40b729:	in     eax,0x94
  40b72b:	mov    ebp,0xd0293b04
  40b730:	cmc    
  40b731:	(bad)  
  40b732:	xor    BYTE PTR [ebp+0x2aa3ca47],al
  40b738:	in     al,0xa1
  40b73a:	ja     0x40b6fe
  40b73c:	sbb    BYTE PTR [ebp+0x4cca0167],dl
  40b742:	cdq    
  40b743:	xor    DWORD PTR [ebx-0x1b],0x229ed4fa
  40b74a:	fimul  DWORD PTR [esi+edx*2]
  40b74d:	das    
  40b74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b74f:	fdiv   DWORD PTR [eax+ecx*4+0x2]
  40b753:	sbb    eax,0xd820957d
  40b758:	neg    BYTE PTR [ecx+0xe3be95f]
  40b75e:	ins    BYTE PTR es:[edi],dx
  40b75f:	dec    ebp
  40b760:	mov    WORD PTR [ebx-0xb],?
  40b763:	inc    eax
  40b764:	pop    ds
  40b765:	xchg   edx,eax
  40b766:	call   0x1a74be58
  40b76b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b76c:	aad    0xa7
  40b76e:	or     ebp,DWORD PTR [ebp+0x30435af1]
  40b774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b775:	arpl   WORD PTR [edx-0x1f],bp
  40b778:	out    dx,al
  40b779:	sbb    bl,BYTE PTR [ebp-0x48391b93]
  40b77f:	sbb    DWORD PTR [edx-0xcb3e05c],edx
  40b785:	daa    
  40b786:	outs   dx,DWORD PTR ds:[esi]
  40b787:	ins    BYTE PTR es:[edi],dx
  40b788:	in     al,0x3
  40b78a:	xlat   BYTE PTR ds:[ebx]
  40b78b:	test   BYTE PTR [ebp-0x1d],cl
  40b78e:	cs mov esi,0xeeaf5c59
  40b794:	js     0x40b7f5
  40b796:	and    al,0xbb
  40b798:	push   ds
  40b799:	test   al,0x28
  40b79b:	in     eax,dx
  40b79c:	mov    BYTE PTR [ebx+0x6d8d752a],al
  40b7a2:	sbb    DWORD PTR [esi-0x16],edx
  40b7a5:	fucom  st(0)
  40b7a7:	lds    eax,FWORD PTR [ebp-0x1b222d36]
  40b7ad:	pop    eax
  40b7ae:	jne    0x40b7d6
  40b7b0:	(bad)  
  40b7b2:	mov    bl,0xa7
  40b7b4:	push   0xffffffc1
  40b7b6:	imul   ebx,DWORD PTR [eax+0x39],0x1c5f1533
  40b7bd:	scas   al,BYTE PTR es:[edi]
  40b7be:	adc    ebp,DWORD PTR [edi+eax*1-0x22]
  40b7c2:	outs   dx,BYTE PTR ds:[esi]
  40b7c3:	mov    WORD PTR [edi-0x3b87c99c],?
  40b7c9:	xchg   edx,eax
  40b7ca:	popa   
  40b7cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7cc:	cmp    edx,DWORD PTR [eax+esi*8-0x7f]
  40b7d0:	jp     0x40b786
  40b7d2:	pusha  
  40b7d3:	daa    
  40b7d4:	repz in eax,0x94
  40b7d7:	sub    BYTE PTR fs:0x355c61d4,0x7a
  40b7df:	fcom   DWORD PTR [eax]
  40b7e1:	cmp    bh,BYTE PTR [ebp+0x1b]
  40b7e4:	adc    DWORD PTR [ebx],ebp
  40b7e6:	xlat   BYTE PTR ds:[ebx]
  40b7e7:	jno    0x40b828
  40b7e9:	xchg   edi,eax
  40b7ea:	mov    cl,0xd0
  40b7ec:	cmp    eax,0xf464e6b7
  40b7f1:	ds (bad) 
  40b7f4:	mov    bl,al
  40b7f6:	das    
  40b7f7:	lods   eax,DWORD PTR ds:[esi]
  40b7f8:	xor    DWORD PTR [edx],edx
  40b7fa:	fs stos BYTE PTR es:[edi],al
  40b7fc:	rcl    DWORD PTR [edi],1
  40b7fe:	jnp    0x40b7e5
  40b800:	mov    ch,0x76
  40b802:	pushf  
  40b803:	fisttp DWORD PTR [edx]
  40b805:	pop    es
  40b806:	dec    ecx
  40b807:	and    al,0x86
  40b809:	fild   DWORD PTR [edx+0x6908ea45]
  40b80f:	fbld   TBYTE PTR [ebx+0x2657025]
  40b815:	xlat   BYTE PTR ds:[ebx]
  40b816:	daa    
  40b817:	pop    ebp
  40b818:	enter  0xc689,0xa8
  40b81c:	test   BYTE PTR [edx],cl
  40b81e:	mov    edx,0xe7f53c8
  40b823:	mov    ds:0x50186a16,al
  40b828:	pop    ebx
  40b829:	push   edx
  40b82a:	add    al,0x33
  40b82c:	(bad)  
  40b82d:	sub    eax,0x4ddc3938
  40b832:	cdq    
  40b833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b834:	dec    edi
  40b835:	das    
  40b836:	inc    ebx
  40b837:	fs ret 0xbcf
  40b83b:	ins    DWORD PTR es:[edi],dx
  40b83c:	in     eax,dx
  40b83d:	test   al,0x30
  40b83f:	and    DWORD PTR [edx],edx
  40b841:	test   eax,0x5baccd11
  40b846:	ss dec ebp
  40b848:	sar    DWORD PTR [eax],cl
  40b84a:	and    DWORD PTR [edx+0x78],ebx
  40b84d:	(bad)  
  40b84e:	mov    ebx,0x90e89612
  40b853:	jb     0x40b857
  40b855:	call   0x72c11f87
  40b85a:	dec    esi
  40b85b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b85c:	adc    al,BYTE PTR [ebx]
  40b85e:	pop    edx
  40b85f:	adc    esp,DWORD PTR [ecx]
  40b861:	jb     0x40b7ef
  40b863:	lods   al,BYTE PTR ds:[esi]
  40b864:	xchg   esi,eax
  40b865:	ins    BYTE PTR es:[edi],dx
  40b866:	jge    0x40b8d7
  40b868:	in     eax,dx
  40b869:	fisttp DWORD PTR [edx-0x8239095]
  40b86f:	xchg   ecx,ecx
  40b871:	clc    
  40b872:	fiadd  DWORD PTR [ebp-0x9]
  40b875:	shl    DWORD PTR [edx-0x49],1
  40b878:	sti    
  40b879:	lds    edx,FWORD PTR [ebx]
  40b87b:	sahf   
  40b87c:	lock sahf 
  40b87e:	out    dx,eax
  40b87f:	mov    bh,0xba
  40b881:	adc    DWORD PTR [ebx+0xf4936a4],ebx
  40b887:	cmp    eax,0xf2f3d426
  40b88c:	dec    edi
  40b88d:	not    DWORD PTR [ebp+0x22]
  40b890:	lea    ebp,[edi-0xe0debb2]
  40b896:	stos   DWORD PTR es:[edi],eax
  40b897:	mov    bl,0x28
  40b899:	cwde   
  40b89a:	mov    ebp,0xc3cc50a9
  40b89f:	jne    0x40b899
  40b8a1:	popf   
  40b8a2:	test   BYTE PTR [esi],0x9a
  40b8a5:	jmp    0x40b8e2
  40b8a7:	retf   0xa1d
  40b8aa:	aas    
  40b8ab:	scas   al,BYTE PTR es:[edi]
  40b8ac:	jno    0x40b921
  40b8ae:	(bad)  
  40b8af:	mov    ecx,0x37a8cb51
  40b8b4:	inc    ebp
  40b8b5:	add    edx,DWORD PTR [eax+0x17]
  40b8b8:	pop    edi
  40b8b9:	in     eax,dx
  40b8ba:	push   es
  40b8bb:	fs nop
  40b8bd:	jmp    0x40b85f
  40b8bf:	xor    DWORD PTR [esi-0x78],esi
  40b8c2:	jnp    0x40b87c
  40b8c4:	das    
  40b8c5:	inc    edx
  40b8c6:	sub    ebp,DWORD PTR [esi+0x2d8acea8]
  40b8cc:	loop   0x40b8f3
  40b8ce:	dec    edx
  40b8cf:	stos   DWORD PTR es:[edi],eax
  40b8d0:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40b8d2:	fs xchg esi,eax
  40b8d4:	dec    edx
  40b8d5:	jg     0x40b8ae
  40b8d7:	test   BYTE PTR [ecx+eiz*8-0x2b],al
  40b8db:	dec    eax
  40b8dc:	mov    dh,0x9e
  40b8de:	xchg   BYTE PTR [ebx-0x6f],dh
  40b8e1:	or     eax,DWORD PTR [ebx]
  40b8e3:	push   ebp
  40b8e4:	adc    BYTE PTR [eax+0x2b],ah
  40b8e7:	inc    eax
  40b8e8:	mov    esi,DWORD PTR [ebp-0x8]
  40b8eb:	add    eax,0x63053ae0
  40b8f0:	push   eax
  40b8f1:	xor    DWORD PTR [ebp-0x68],ebx
  40b8f4:	sub    eax,0x941130fb
  40b8f9:	adc    BYTE PTR [ebx],0xb9
  40b8fc:	test   BYTE PTR gs:[ebx+0x2cd145ca],al
  40b903:	les    esi,FWORD PTR [ecx+ebx*1]
  40b906:	add    DWORD PTR [ebp-0x75804c3c],edx
  40b90c:	jge    0x40b8e5
  40b90e:	xchg   ecx,eax
  40b90f:	sti    
  40b910:	push   ebx
  40b911:	les    esp,FWORD PTR [edx-0xb]
  40b914:	add    BYTE PTR [edi+0x75],dl
  40b917:	ss xor esi,esi
  40b91a:	fs mov ah,0x2
  40b91d:	lods   eax,DWORD PTR cs:[esi]
  40b91f:	xchg   edx,eax
  40b920:	jg     0x40b948
  40b922:	cs loop 0x40b90e
  40b925:	out    0x4e,al
  40b927:	pusha  
  40b928:	push   cs
  40b929:	mov    ah,BYTE PTR [ecx]
  40b92b:	ja     0x40b942
  40b92d:	sbb    eax,0xc42460d
  40b932:	test   BYTE PTR [ecx+0x704628b9],cl
  40b938:	mov    dh,0x20
  40b93a:	mov    cs,WORD PTR [esi-0x20]
  40b93d:	int    0x6a
  40b93f:	jns    0x40b916
  40b941:	dec    esp
  40b942:	ret    
  40b943:	dec    ecx
  40b944:	add    ecx,DWORD PTR [edx-0x4d]
  40b947:	loopne 0x40b970
  40b949:	xchg   edi,eax
  40b94a:	or     BYTE PTR [edx+0x41b1d902],ah
  40b950:	js     0x40b9ba
  40b952:	mov    al,ds:0x1249543
  40b957:	call   0x9cf5fc03
  40b95c:	fs arpl bp,cx
  40b95f:	sub    al,0x66
  40b961:	and    eax,0xa4492619
  40b966:	lock iret 
  40b968:	mov    edi,cs
  40b96a:	xchg   BYTE PTR [ebp+0x10d9564e],ch
  40b970:	mov    ebp,0x36135f0
  40b975:	adc    DWORD PTR [edi+0x4d],esi
  40b978:	push   ebx
  40b979:	add    bh,BYTE PTR [esi-0x23]
  40b97c:	rcr    esp,cl
  40b97e:	vpaddusb ymm1,ymm7,YMMWORD PTR ds:0xa28b440
  40b986:	and    eax,0xbb2219d4
  40b98b:	push   0x4a
  40b98d:	cli    
  40b98e:	mov    edi,0x68db90df
  40b993:	cmp    al,0x17
  40b995:	xor    al,0x7b
  40b997:	sub    al,0x6f
  40b999:	jecxz  0x40b998
  40b99b:	sub    esp,DWORD PTR [ecx-0x7364f34]
  40b9a1:	rcl    BYTE PTR [ecx],cl
  40b9a3:	hlt    
  40b9a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9a5:	or     BYTE PTR [ebx+0x3d],bl
  40b9a8:	or     DWORD PTR [ecx-0x44],esi
  40b9ab:	jno    0x40b9b8
  40b9ad:	lock lds edx,FWORD PTR [ebx+0x1c]
  40b9b1:	das    
  40b9b2:	mov    edx,0x73a93371
  40b9b7:	shl    edi,1
  40b9b9:	fwait
  40b9ba:	mov    BYTE PTR gs:[esi],0xcd
  40b9be:	lods   al,BYTE PTR ds:[esi]
  40b9bf:	(bad)  [ecx+0x79db9485]
  40b9c5:	jns    0x40b9b0
  40b9c7:	cmp    eax,0x3d45796a
  40b9cc:	ret    
  40b9cd:	fsub   QWORD PTR [ebx+0x1a63164b]
  40b9d3:	ret    0x3a62
  40b9d6:	iret   
  40b9d7:	mov    ds:0xa8787517,eax
  40b9dc:	or     eax,0x180a7f5c
  40b9e1:	call   0xba0:0x8ca8956b
  40b9e8:	pop    ebp
  40b9e9:	mov    ah,0xf6
  40b9eb:	daa    
  40b9ec:	push   cs
  40b9ed:	xchg   esi,eax
  40b9ee:	dec    eax
  40b9ef:	mov    ah,0xc6
  40b9f1:	dec    edx
  40b9f2:	fild   WORD PTR [esp+eax*1+0x32]
  40b9f6:	inc    esi
  40b9f7:	mov    dh,0xbe
  40b9f9:	adc    ecx,edx
  40b9fb:	inc    eax
  40b9fc:	push   esi
  40b9fd:	out    0x61,al
  40b9ff:	ins    DWORD PTR es:[edi],dx
  40ba00:	jno    0x40ba23
  40ba02:	iret   
  40ba03:	ret    0x3096
  40ba06:	xchg   esp,eax
  40ba07:	inc    ebx
  40ba08:	je     0x40ba25
  40ba0a:	mov    dl,0x5
  40ba0c:	mov    eax,0x56d0e1d0
  40ba11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba12:	in     eax,0x34
  40ba14:	test   al,0x49
  40ba16:	sahf   
  40ba17:	mov    bh,0x7e
  40ba19:	(bad)  
  40ba1a:	xor    cl,dl
  40ba1c:	xor    ebp,DWORD PTR [edi-0xf]
  40ba1f:	(bad)  
  40ba20:	dec    edi
  40ba21:	dec    ebx
  40ba22:	push   0x6d
  40ba24:	cdq    
  40ba25:	mov    ebp,0x3b989209
  40ba2a:	xchg   esi,eax
  40ba2b:	cmp    edi,esp
  40ba2d:	cs out 0x46,al
  40ba30:	lds    edx,FWORD PTR [edx-0xb]
  40ba33:	pop    ebx
  40ba34:	stc    
  40ba35:	dec    esi
  40ba36:	jmp    0xe5c03142
  40ba3b:	pusha  
  40ba3c:	enter  0xdc03,0x3
  40ba40:	xchg   ebp,eax
  40ba41:	mov    cl,0xd
  40ba43:	imul   eax,DWORD PTR [ebx-0x71],0x42
  40ba47:	aas    
  40ba48:	mov    al,0xb7
  40ba4a:	push   edx
  40ba4b:	push   DWORD PTR [edi]
  40ba4d:	shr    DWORD PTR [edi],1
  40ba4f:	mov    cl,0xb0
  40ba51:	mov    bh,0xc6
  40ba53:	mov    ds:0x913baeaf,eax
  40ba58:	adc    al,0xf3
  40ba5a:	into   
  40ba5b:	in     al,0x94
  40ba5d:	jle    0x40ba3e
  40ba5f:	or     BYTE PTR [esi],dh
  40ba61:	sahf   
  40ba62:	fimul  WORD PTR [eax+0x60]
  40ba65:	xchg   edi,eax
  40ba66:	popf   
  40ba67:	adc    edx,ecx
  40ba69:	aas    
  40ba6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6b:	xchg   edi,eax
  40ba6c:	cmp    esi,edx
  40ba6e:	mov    ch,0x57
  40ba70:	push   ebx
  40ba71:	(bad)  
  40ba72:	(bad)  [edx]
  40ba74:	inc    esi
  40ba75:	in     al,dx
  40ba76:	xor    al,0xab
  40ba78:	outs   dx,BYTE PTR ds:[esi]
  40ba79:	xor    BYTE PTR es:[ecx],ch
  40ba7c:	arpl   bx,bx
  40ba7e:	mov    eax,ds:0xa0ca518a
  40ba83:	mov    WORD PTR [edx+0x64a4bf2],ss
  40ba89:	adc    bl,BYTE PTR [eax+0x1583409a]
  40ba8f:	cmc    
  40ba90:	ss push ecx
  40ba92:	retf   
  40ba93:	call   0x50b41573
  40ba98:	pop    ebp
  40ba99:	mov    esp,0xb4d61899
  40ba9e:	mov    ah,al
  40baa0:	or     esi,DWORD PTR [ebx-0x79580a2d]
  40baa6:	jmp    0x40ba8b
  40baa8:	nop
  40baa9:	and    DWORD PTR ss:[esi-0x686115aa],esp
  40bab0:	push   ebp
  40bab1:	cs es dec eax
  40bab4:	or     al,0x8f
  40bab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab7:	fnstenv [edx]
  40bab9:	cmp    al,0xc5
  40babb:	shl    esp,cl
  40babd:	pop    ebx
  40babe:	push   esi
  40babf:	push   esp
  40bac0:	inc    ecx
  40bac1:	cs fs mov esp,0x79e82880
  40bac8:	sub    eax,0xc9b5fdd9
  40bacd:	and    ebx,DWORD PTR [ecx+0x72]
  40bad0:	leave  
  40bad1:	jp     0x40ba70
  40bad3:	add    bh,BYTE PTR [ebp-0x6649c564]
  40bad9:	dec    eax
  40bada:	dec    ebx
  40badb:	repz je 0x40bb28
  40bade:	mov    ds:0x162e14e0,al
  40bae3:	sub    edx,edi
  40bae5:	cmp    esp,edx
  40bae7:	sahf   
  40bae8:	stos   BYTE PTR es:[edi],al
  40bae9:	ins    BYTE PTR es:[edi],dx
  40baea:	inc    ecx
  40baeb:	xchg   DWORD PTR [eax-0x53],ebp
  40baee:	sbb    BYTE PTR [edx+edi*2+0x34],dh
  40baf2:	push   es
  40baf3:	les    esi,FWORD PTR [ebx-0x7f9972d]
  40baf9:	and    BYTE PTR [ecx],dh
  40bafb:	or     BYTE PTR [esi],0xce
  40bafe:	neg    BYTE PTR [edi-0x2b56bd7c]
  40bb04:	lds    esi,FWORD PTR [edi]
  40bb06:	push   0x63914d1e
  40bb0b:	(bad)  
  40bb0c:	jmp    0x40bb4d
  40bb0e:	in     al,0xa5
  40bb10:	lahf   
  40bb11:	jg     0x40bb14
  40bb13:	sahf   
  40bb14:	popf   
  40bb15:	sub    edx,ebp
  40bb17:	xor    BYTE PTR [edx-0x16cc9da3],ah
  40bb1d:	cmp    BYTE PTR [ebx-0x26],0x28
  40bb21:	pop    ebp
  40bb22:	sub    eax,0x9387aec
  40bb27:	pop    ebx
  40bb28:	popa   
  40bb29:	cld    
  40bb2a:	pop    edx
  40bb2b:	fstp   st(1)
  40bb2d:	mov    ebp,0xdd850939
  40bb32:	xchg   esp,eax
  40bb33:	and    dh,BYTE PTR [edi]
  40bb35:	cwde   
  40bb36:	popa   
  40bb37:	pop    ds
  40bb38:	ss lock push ds
  40bb3b:	inc    eax
  40bb3c:	push   ds
  40bb3d:	aam    0x16
  40bb3f:	pop    ebx
  40bb40:	mov    edi,0x6dac2318
  40bb45:	mov    bl,0x3f
  40bb47:	fnsave [edi+0x43bffb00]
  40bb4d:	pop    ds
  40bb4e:	mov    bl,0x2c
  40bb50:	jo     0x40bb43
  40bb52:	xor    bl,dh
  40bb54:	scas   eax,DWORD PTR es:[edi]
  40bb55:	sbb    dl,dl
  40bb57:	xor    DWORD PTR [edx-0x210612f7],ecx
  40bb5d:	fimul  DWORD PTR [ebx+0x5d243b9b]
  40bb63:	mov    esi,0x1a7a1188
  40bb68:	adc    esp,esi
  40bb6a:	push   edi
  40bb6b:	aas    
  40bb6c:	pop    es
  40bb6d:	xchg   esi,eax
  40bb6e:	jl     0x40bb84
  40bb70:	daa    
  40bb71:	push   edi
  40bb72:	stos   DWORD PTR es:[edi],eax
  40bb73:	pushf  
  40bb74:	push   0x40
  40bb76:	retf   0xb1e4
  40bb79:	(bad)  
  40bb7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb7b:	jecxz  0x40bb89
  40bb7d:	jmp    0x828b:0xfd476d1d
  40bb84:	add    eax,0xed592927
  40bb89:	jge    0x40bb81
  40bb8b:	and    ebx,DWORD PTR [eax]
  40bb8d:	aam    0xee
  40bb8f:	pop    ebx
  40bb90:	leave  
  40bb91:	shl    bl,1
  40bb93:	dec    ecx
  40bb94:	cmp    BYTE PTR [ebp+0x53],bh
  40bb97:	aaa    
  40bb98:	sub    al,0xd6
  40bb9a:	xor    eax,0xc2a1cd65
  40bb9f:	leave  
  40bba0:	push   eax
  40bba1:	adc    cl,BYTE PTR [esi+edx*8-0x3c3f4f5a]
  40bba8:	mov    ecx,0x5ac508d2
  40bbad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbae:	into   
  40bbaf:	jne    0x40bc24
  40bbb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbb2:	sti    
  40bbb3:	dec    eax
  40bbb4:	sub    BYTE PTR [ebx+0x6c],dh
  40bbb7:	out    dx,eax
  40bbb8:	mov    eax,ds:0x23086096
  40bbbd:	mov    al,0x91
  40bbbf:	jo     0x40bb4b
  40bbc1:	pop    es
  40bbc2:	iret   
  40bbc3:	add    esp,edx
  40bbc5:	fadd   DWORD PTR [ebp-0x425789a6]
  40bbcb:	pop    edi
  40bbcc:	push   esp
  40bbcd:	push   0xd120c56b
  40bbd2:	and    BYTE PTR [eax],dh
  40bbd4:	or     eax,0xbab6eec4
  40bbd9:	mov    edx,DWORD PTR [edi-0x1e2e8226]
  40bbdf:	scas   eax,DWORD PTR es:[edi]
  40bbe0:	lea    eax,[ebx+0x49]
  40bbe3:	loope  0x40bba5
  40bbe5:	addr16 loopne 0x40bc40
  40bbe8:	into   
  40bbe9:	pop    esp
  40bbea:	cli    
  40bbeb:	sbb    eax,0x52882ae0
  40bbf0:	push   ebx
  40bbf1:	sub    eax,0x256ebb03
  40bbf6:	lea    ecx,[esi+edi*2-0x6aa0e3f]
  40bbfd:	cs nop
  40bbff:	xor    esi,DWORD PTR [ecx-0x28]
  40bc02:	cli    
  40bc03:	into   
  40bc04:	or     esp,DWORD PTR [eax]
  40bc06:	ds aad 0xf5
  40bc09:	add    ebx,ebp
  40bc0b:	mov    dl,0xa4
  40bc0d:	xchg   BYTE PTR [edx],al
  40bc0f:	lahf   
  40bc10:	call   0x9eecaef6
  40bc15:	cmpps  xmm7,xmm1,0x79
  40bc19:	cmp    DWORD PTR [edx],ebp
  40bc1b:	mov    edx,0x461f70e1
  40bc20:	cmp    BYTE PTR [esi+ebp*2],bh
  40bc23:	fiadd  DWORD PTR [esi]
  40bc25:	ds cmp esi,esp
  40bc28:	cdq    
  40bc29:	repz scas eax,DWORD PTR es:[edi]
  40bc2b:	sbb    edi,0x7
  40bc2e:	cmp    eax,0xbc559b9a
  40bc33:	leave  
  40bc34:	push   edx
  40bc35:	fiadd  DWORD PTR [edx]
  40bc37:	push   ebx
  40bc38:	(bad)  
  40bc3a:	mul    DWORD PTR [edx+ebx*8+0x5a4444a5]
  40bc41:	ficomp WORD PTR [ebx+0x58]
  40bc44:	mov    bl,0x7a
  40bc46:	cmp    BYTE PTR [ecx],dh
  40bc48:	push   edi
  40bc49:	fsubr  DWORD PTR [ecx+esi*1]
  40bc4c:	sub    al,0xcc
  40bc4e:	inc    ebx
  40bc4f:	mov    bh,dh
  40bc51:	adc    BYTE PTR [ecx-0x10],dh
  40bc54:	cli    
  40bc55:	mov    esi,0xa630a024
  40bc5a:	and    bl,bl
  40bc5c:	mov    ebp,0x2a5dcc83
  40bc61:	jl     0x40bc03
  40bc63:	sub    esp,esi
  40bc65:	pop    es
  40bc66:	mov    WORD PTR [ecx+0x7d],?
  40bc69:	out    dx,eax
  40bc6a:	outs   dx,BYTE PTR ds:[esi]
  40bc6b:	inc    esi
  40bc6c:	adc    eax,0x9b496807
  40bc71:	mov    al,0x9c
  40bc73:	xor    dl,BYTE PTR [esi+0x4feedb94]
  40bc79:	retf   
  40bc7a:	or     BYTE PTR [ebp-0x732d29db],dh
  40bc80:	loop   0x40bcb9
  40bc82:	add    al,0x75
  40bc84:	sbb    BYTE PTR [ecx+0x53],bl
  40bc87:	in     al,0xb8
  40bc89:	and    edi,DWORD PTR [esp+ecx*8]
  40bc8c:	mov    eax,cs
  40bc8e:	sub    al,0x4d
  40bc90:	call   0xface:0x51d1e265
  40bc97:	out    dx,eax
  40bc98:	mov    al,ds:0xbc407c6d
  40bc9d:	out    0xe9,eax
  40bc9f:	cs ds push cs
  40bca2:	xor    eax,0xa6323826
  40bca7:	add    ch,bl
  40bca9:	inc    ebp
  40bcaa:	aas    
  40bcab:	cmovae eax,DWORD PTR [edi-0x4ae52fc6]
  40bcb2:	push   eax
  40bcb3:	ret    0x5742
  40bcb6:	sub    BYTE PTR [edx],al
  40bcb8:	jbe    0x40bc70
  40bcba:	xchg   esi,eax
  40bcbb:	(bad)  
  40bcbc:	push   es
  40bcbd:	popf   
  40bcbe:	push   ebp
  40bcbf:	int3   
  40bcc0:	pop    edi
  40bcc1:	push   es
  40bcc2:	stos   BYTE PTR es:[edi],al
  40bcc3:	in     eax,0xf4
  40bcc5:	pop    ecx
  40bcc6:	push   ds
  40bcc7:	adc    DWORD PTR [eax+esi*4+0x3115b58a],ecx
  40bcce:	stos   DWORD PTR es:[edi],eax
  40bccf:	call   0x26b6:0x1a8b7027
  40bcd6:	cmp    eax,0xb234a82b
  40bcdb:	mov    esi,0xdbc2ed8c
  40bce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bce1:	call   0x5001:0x4e6f7b4a
  40bce8:	leave  
  40bce9:	mov    ebp,DWORD PTR [esi]
  40bceb:	dec    ebp
  40bcec:	sbb    cl,BYTE PTR [edi-0x54]
  40bcef:	inc    ebx
  40bcf0:	adc    al,0x78
  40bcf2:	push   ebp
  40bcf3:	push   es
  40bcf4:	sub    DWORD PTR ds:0xfe517e09,edi
  40bcfa:	gs pop edx
  40bcfc:	sub    eax,0x18caf830
  40bd01:	push   0x2e
  40bd03:	dec    ebp
  40bd04:	fisttp DWORD PTR [ebx]
  40bd06:	loop   0x40bca5
  40bd08:	push   edx
  40bd09:	cs or  al,0xd5
  40bd0c:	sub    ch,BYTE PTR [edx+0x6e]
  40bd0f:	call   0xb66c:0xacb023c9
  40bd16:	fwait
  40bd17:	jae    0x40bd5b
  40bd19:	add    eax,0xb0182151
  40bd1e:	sub    ah,BYTE PTR [ecx-0x21491af4]
  40bd24:	and    cl,0x56
  40bd27:	xchg   DWORD PTR [esi],edx
  40bd29:	mov    edi,cs
  40bd2b:	jbe    0x40bd93
  40bd2d:	dec    edi
  40bd2f:	mov    ds:0xc07315d,eax
  40bd34:	data16 (bad) 
  40bd36:	cmpxchg BYTE PTR [ecx],bl
  40bd39:	push   esi
  40bd3a:	mov    ds:0x23f4b76f,eax
  40bd3f:	lds    ebx,FWORD PTR [edi-0x7bdbb639]
  40bd45:	mov    WORD PTR [edx+eiz*2-0x3febe613],?
  40bd4c:	out    dx,eax
  40bd4d:	bound  edi,QWORD PTR [esp+eax*4+0x17d5230c]
  40bd54:	fld    DWORD PTR fs:[ecx+0x6c]
  40bd58:	pop    ebp
  40bd59:	xchg   BYTE PTR [edi-0x79],bh
  40bd5c:	inc    ebp
  40bd5d:	inc    ecx
  40bd5e:	(bad)  
  40bd5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd60:	out    0xdd,eax
  40bd62:	adc    ebx,ecx
  40bd64:	xor    al,0x8d
  40bd66:	dec    esi
  40bd67:	cmc    
  40bd68:	mov    ah,BYTE PTR [esi+0x5a]
  40bd6b:	lods   eax,DWORD PTR ds:[esi]
  40bd6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd6d:	cdq    
  40bd6e:	frstor [eax-0x449f805d]
  40bd74:	ret    
  40bd75:	out    dx,eax
  40bd76:	push   ds
  40bd77:	fistp  QWORD PTR [ebp-0x3b]
  40bd7a:	or     esp,0x235de947
  40bd80:	jecxz  0x40bdeb
  40bd82:	ins    DWORD PTR es:[edi],dx
  40bd83:	xchg   edx,eax
  40bd84:	and    eax,ebp
  40bd86:	adc    al,BYTE PTR [ecx]
  40bd88:	jmp    0x7dce:0x7b40c5ac
  40bd8f:	stos   DWORD PTR es:[edi],eax
  40bd90:	inc    eax
  40bd91:	sbb    al,0x70
  40bd93:	cmc    
  40bd94:	mov    ebx,DWORD PTR [eax+0x1b38784f]
  40bd9a:	mov    al,ds:0xb4d6e237
  40bd9f:	rol    DWORD PTR [ecx],1
  40bda1:	push   esi
  40bda2:	dec    ebp
  40bda3:	cdq    
  40bda4:	xchg   ebp,eax
  40bda5:	test   DWORD PTR [eax],ecx
  40bda7:	push   esp
  40bda8:	add    eax,0x6eaa1a09
  40bdad:	shr    esp,cl
  40bdaf:	push   eax
  40bdb0:	aas    
  40bdb1:	and    dl,ch
  40bdb3:	lods   eax,DWORD PTR ds:[esi]
  40bdb4:	mov    ebx,0xfd90de21
  40bdb9:	bound  ecx,QWORD PTR [edi-0xdf525d]
  40bdbf:	fwait
  40bdc0:	sub    eax,0x2bf7cbfa
  40bdc5:	paddw  mm3,mm6
  40bdc8:	mov    dl,0x14
  40bdca:	mov    eax,ds:0x7b332518
  40bdcf:	repnz cmp BYTE PTR [ebp+0x29],ah
  40bdd3:	mov    cl,0x1d
  40bdd5:	mov    ah,0x3b
  40bdd7:	pop    es
  40bdd8:	inc    edx
  40bdd9:	es in  eax,0x95
  40bddc:	mov    bh,0x79
  40bdde:	sub    al,0x34
  40bde0:	xor    BYTE PTR [edi],dh
  40bde2:	mov    esp,0x4e3230ee
  40bde7:	xchg   esi,eax
  40bde8:	sbb    dl,ch
  40bdea:	push   edi
  40bdeb:	xchg   ebp,eax
  40bdec:	fiadd  WORD PTR [ecx]
  40bdee:	arpl   WORD PTR [edx],cx
  40bdf0:	sbb    BYTE PTR [ebp+0x2b3ef4c4],bl
  40bdf6:	dec    ebp
  40bdf7:	adc    BYTE PTR [esi],ah
  40bdf9:	mov    al,0xae
  40bdfb:	out    dx,al
  40bdfc:	or     dl,bh
  40bdfe:	and    eax,0xd05df762
  40be03:	aaa    
  40be04:	xchg   edx,eax
  40be05:	sti    
  40be06:	sub    dh,BYTE PTR [ebx+0x91e08ad]
  40be0c:	mov    ebx,?
  40be0e:	jg     0x40bde6
  40be10:	mov    cl,0x22
  40be12:	and    eax,0xcc5e811b
  40be17:	stc    
  40be18:	call   0x38cdb90b
  40be1d:	sub    bh,BYTE PTR [ebp-0x28]
  40be20:	inc    ecx
  40be21:	or     eax,0xdb49e373
  40be26:	dec    esp
  40be27:	(bad)  
  40be28:	cwde   
  40be29:	xchg   edx,eax
  40be2a:	rcl    DWORD PTR [eax],cl
  40be2c:	ficom  DWORD PTR [eax]
  40be2e:	shl    BYTE PTR [edx+0x2998be6],1
  40be34:	mov    ch,0x2d
  40be36:	into   
  40be37:	out    dx,al
  40be38:	cld    
  40be39:	(bad)  
  40be3a:	and    BYTE PTR [ecx-0x6a],ah
  40be3d:	stc    
  40be3e:	ss mov bh,0x64
  40be41:	imul   dl
  40be43:	or     ecx,DWORD PTR [edi-0x2c]
  40be46:	push   ss
  40be47:	jbe    0x40be96
  40be49:	inc    ebp
  40be4a:	je     0x40be55
  40be4c:	mov    bl,0x44
  40be4e:	fcom   DWORD PTR [edi]
  40be50:	mov    ebp,0x420782a9
  40be55:	or     BYTE PTR [eax],ch
  40be57:	lods   al,BYTE PTR ds:[esi]
  40be58:	and    BYTE PTR ds:0xeebcf038,cl
  40be5e:	jae    0x40beb0
  40be60:	inc    eax
  40be61:	cmp    ecx,DWORD PTR [ecx]
  40be63:	jg     0x40be14
  40be65:	hlt    
  40be66:	sub    ebx,edi
  40be68:	outs   dx,BYTE PTR ds:[esi]
  40be69:	out    dx,ax
  40be6b:	fisttp DWORD PTR [eax-0x17]
  40be6e:	retf   
  40be6f:	xchg   ebp,eax
  40be70:	mov    cl,0xd9
  40be72:	pop    eax
  40be73:	mov    eax,0x93858845
  40be78:	jecxz  0x40be35
  40be7a:	adc    dl,ah
  40be7c:	retf   
  40be7d:	and    al,0xea
  40be7f:	test   BYTE PTR [eax+0x6f28d42e],ah
  40be85:	push   es
  40be86:	addr16 test eax,0xe5262622
  40be8c:	xor    al,0xfd
  40be8e:	mov    al,ds:0xb2104950
  40be93:	cmp    bl,BYTE PTR [edx-0x25]
  40be96:	iret   
  40be97:	(bad)  [eax]
  40be99:	mov    eax,0x76b464f4
  40be9e:	cmp    al,0x5e
  40bea0:	mov    cs,WORD PTR [ebx]
  40bea2:	in     eax,dx
  40bea3:	call   0xa64c9cbb
  40bea8:	test   eax,0x8d5e88f
  40bead:	mov    dl,0xb8
  40beaf:	std    
  40beb0:	ja     0x40bf2b
  40beb2:	into   
  40beb3:	hlt    
  40beb4:	jmp    0x2eed:0x832729cd
  40bebb:	jo     0x40be7b
  40bebd:	test   eax,0x3e97bca2
  40bec2:	xchg   ebx,eax
  40bec3:	sbb    ah,0xc2
  40bec6:	ror    ecx,0xfc
  40bec9:	jl     0x40bec1
  40becb:	xor    al,0x73
  40becd:	shl    BYTE PTR [esi-0x6fa3add],cl
  40bed3:	mov    ecx,0x838c8fdf
  40bed8:	nop
  40bed9:	mov    bl,0x40
  40bedb:	jbe    0x40be60
  40bedd:	mov    al,ds:0x47db8ae6
  40bee2:	pop    ecx
  40bee3:	icebp  
  40bee4:	mov    al,0x1b
  40bee6:	gs mov ch,0x6e
  40bee9:	or     eax,0xeea1d11e
  40beee:	inc    edi
  40beef:	int3   
  40bef0:	pop    ds
  40bef1:	and    BYTE PTR [ebx-0x805563f],dl
  40bef7:	sar    BYTE PTR [ecx],1
  40bef9:	std    
  40befa:	dec    eax
  40befb:	test   BYTE PTR [edx+ecx*8],ah
  40befe:	ret    
  40beff:	and    DWORD PTR [edi+eax*8+0x3a],esi
  40bf03:	jno    0x40bf3b
  40bf05:	(bad)  
  40bf06:	push   0xbd1802c0
  40bf0b:	add    BYTE PTR [ecx+0x3df6e295],cl
  40bf11:	idiv   ch
  40bf13:	iret   
  40bf14:	jge    0x40bf8d
  40bf16:	pop    esp
  40bf17:	xchg   edx,eax
  40bf18:	adc    dh,ah
  40bf1a:	push   esi
  40bf1b:	in     al,0xf9
  40bf1d:	rol    BYTE PTR [eax+ebx*2],1
  40bf20:	aam    0x8c
  40bf22:	cmp    ebp,DWORD PTR [edx-0x30]
  40bf25:	or     BYTE PTR [esp+edx*1],dl
  40bf28:	fidiv  WORD PTR [ebx+0x1f00965]
  40bf2e:	cmp    dl,BYTE PTR [esi-0x9c45e9b]
  40bf34:	in     al,dx
  40bf35:	mov    ebp,0x50f8c673
  40bf3a:	sbb    eax,DWORD PTR [edx-0x521e08d7]
  40bf40:	int    0x75
  40bf42:	or     DWORD PTR [edx+0x56],esi
  40bf45:	in     al,0x87
  40bf47:	cmp    cl,dh
  40bf49:	and    DWORD PTR [edx-0x13351430],0xffffffcf
  40bf50:	jecxz  0x40bfd0
  40bf52:	ret    0xe40a
  40bf55:	jnp    0x40bee7
  40bf57:	iret   
  40bf58:	sbb    esp,DWORD PTR [ecx+0x6eac14d8]
  40bf5e:	out    0xc,al
  40bf60:	and    al,0x8e
  40bf62:	arpl   WORD PTR [edi+edi*8-0x6a9ef602],cx
  40bf69:	add    BYTE PTR [esp+eax*4-0x3df598b],cl
  40bf70:	aas    
  40bf71:	ins    BYTE PTR es:[edi],dx
  40bf72:	cmp    ch,bl
  40bf74:	sub    BYTE PTR [eax+ebx*8],al
  40bf77:	inc    DWORD PTR [esi]
  40bf79:	dec    ebx
  40bf7a:	fdiv   DWORD PTR ds:[esi]
  40bf7d:	jne    0x40bf13
  40bf7f:	push   cs
  40bf80:	int3   
  40bf81:	cmc    
  40bf82:	mov    ebp,0x9a1920c8
  40bf87:	xor    DWORD PTR [edi-0x38],esp
  40bf8a:	dec    ebx
  40bf8b:	adc    eax,0x5fec04cf
  40bf90:	jp     0x40c001
  40bf92:	stc    
  40bf93:	dec    edx
  40bf94:	or     ecx,DWORD PTR [eax-0x378a4492]
  40bf9a:	inc    ebp
  40bf9b:	fild   DWORD PTR [esi]
  40bf9d:	ror    dh,cl
  40bf9f:	xchg   esi,eax
  40bfa0:	ss sbb eax,0x8d0d4542
  40bfa6:	repz (bad) 
  40bfa8:	jge    0x40bf45
  40bfaa:	div    DWORD PTR [edi+0x59]
  40bfad:	call   0x108c:0xf006371b
  40bfb4:	frstor [eax]
  40bfb6:	jbe    0x40bf89
  40bfb8:	xchg   ecx,eax
  40bfb9:	mov    ebx,0x8bedc71
  40bfbe:	lds    esp,FWORD PTR [ebp+0x6b]
  40bfc1:	mov    DWORD PTR [edi+0x71228f6a],ebx
  40bfc7:	mov    edx,0xe20828e4
  40bfcc:	push   ds
  40bfcd:	mov    bl,0x58
  40bfcf:	and    BYTE PTR [ecx+0x39fc022b],bl
  40bfd5:	icebp  
  40bfd6:	mov    ch,0xe6
  40bfd8:	inc    ecx
  40bfd9:	mov    ds:0x988ec032,eax
  40bfde:	xor    dh,BYTE PTR [esi+eiz*2+0x2f]
  40bfe2:	add    DWORD PTR [ebp+0x53],edi
  40bfe5:	jge    0x40bf71
  40bfe7:	leave  
  40bfe8:	and    cl,BYTE PTR [edi+0x279f4a17]
  40bfee:	push   edi
  40bfef:	cmp    edx,DWORD PTR [edx+0x10]
  40bff2:	jg     0x40bfc4
  40bff4:	(bad)  
  40bff5:	lea    ebx,[edx]
  40bff7:	pushf  
  40bff8:	jg     0x40c014
  40bffa:	pop    esp
  40bffb:	sub    BYTE PTR [eax-0x1f419654],cl
  40c001:	jmp    0xeabb:0x96279549
  40c008:	and    dl,dh
  40c00a:	and    DWORD PTR [ecx-0x7b],eax
  40c00d:	cli    
  40c00e:	add    BYTE PTR [edx+0x6e],dl
  40c011:	pop    ebp
  40c012:	mov    DWORD PTR [edi+0x64942762],esi
  40c018:	popa   
  40c019:	rcl    BYTE PTR [ecx-0x60cf8375],cl
  40c01f:	call   DWORD PTR [ebp+eax*1-0x703aab8f]
  40c026:	ds pop ecx
  40c028:	xor    eax,0x29f2cfcc
  40c02d:	(bad)
  40c031:	dec    eax
  40c032:	cmp    bl,BYTE PTR [edx]
  40c034:	lahf   
  40c035:	les    esi,FWORD PTR [esi-0x7d]
  40c038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c039:	ss retf 0x359d
  40c03d:	rol    BYTE PTR [ebx-0x2bf5ddbf],0x83
  40c044:	shl    BYTE PTR [eax-0x68],cl
  40c047:	shl    edx,1
  40c049:	loop   0x40c06f
  40c04b:	xchg   edx,eax
  40c04c:	subps  xmm2,xmm2
  40c04f:	pop    edx
  40c050:	retf   
  40c051:	jae    0x40c063
  40c053:	(bad)  
  40c054:	xlat   BYTE PTR ds:[ebx]
  40c055:	daa    
  40c056:	xchg   esi,eax
  40c057:	lods   eax,DWORD PTR ds:[esi]
  40c058:	cmp    DWORD PTR [eax+0x6604621f],eax
  40c05e:	int    0x38
  40c060:	adc    BYTE PTR ds:0x5c5398a,dh
  40c066:	inc    eax
  40c067:	loope  0x40c083
  40c069:	iret   
  40c06a:	out    dx,eax
  40c06b:	and    eax,0x54b7bb08
  40c070:	adc    al,BYTE PTR [ecx-0x78]
  40c073:	imul   ebx,DWORD PTR [edx+ebx*8],0xffffffa0
  40c077:	push   esi
  40c078:	mov    bl,dl
  40c07a:	aad    0xe5
  40c07c:	cmp    ebp,DWORD PTR [eax-0x72]
  40c07f:	icebp  
  40c080:	xchg   DWORD PTR [ebp-0x1],esp
  40c083:	mov    dl,0x16
  40c085:	push   ecx
  40c086:	cli    
  40c087:	xchg   edx,eax
  40c088:	and    esi,DWORD PTR ds:0xaf98ebd
  40c08e:	dec    esi
  40c08f:	add    ah,ch
  40c091:	je     0x40c02a
  40c093:	xlat   BYTE PTR ds:[ebx]
  40c094:	jae    0x40c06e
  40c096:	sbb    dh,BYTE PTR [esp+edi*2+0x7b]
  40c09a:	adc    ch,BYTE PTR [eax-0x76ff7d60]
  40c0a0:	mov    WORD PTR [ebp+0x74],cs
  40c0a3:	sub    esi,ebx
  40c0a5:	mov    ebp,eax
  40c0a7:	test   eax,0x76823ec1
  40c0ac:	jae    0x40c071
  40c0ae:	mov    esi,0x2e361d3e
  40c0b3:	jae    0x40c12e
  40c0b5:	enter  0xce3c,0xb8
  40c0b9:	out    0xc0,al
  40c0bb:	mov    al,0x5f
  40c0bd:	jae    0x40c09b
  40c0bf:	adc    al,0x1e
  40c0c1:	test   eax,0x21730503
  40c0c6:	jl     0x40c09b
  40c0c8:	xchg   ebp,eax
  40c0c9:	mov    edi,0x5518b277
  40c0ce:	add    DWORD PTR [ebx+0x35],0xff25da49
  40c0d5:	cmp    eax,0x549d83ff
  40c0da:	arpl   WORD PTR [ebx-0x4eccc57a],ax
  40c0e0:	in     eax,0x24
  40c0e2:	adc    eax,0x38c4d34
  40c0e7:	jb     0x40c0c4
  40c0e9:	inc    edx
  40c0ea:	jp     0x40c09b
  40c0ec:	cmp    BYTE PTR [ebp+0x3f],bl
  40c0ef:	int    0x9f
  40c0f1:	add    al,0x8b
  40c0f3:	mov    edi,0xae6bd33f
  40c0f8:	test   al,0x32
  40c0fa:	xchg   edx,eax
  40c0fb:	pop    eax
  40c0fc:	add    DWORD PTR [ebx-0x710de904],0xffffffb1
  40c103:	es leave 
  40c105:	and    bh,dl
  40c107:	mov    cl,0xf0
  40c109:	and    DWORD PTR [ebx-0x62],0xffffffcc
  40c10d:	push   eax
  40c10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c10f:	adc    ebp,DWORD PTR [edi-0x2beccd89]
  40c115:	cmp    DWORD PTR [ecx-0x57],0x1ad95bba
  40c11c:	pop    esp
  40c11d:	jl     0x40c0b2
  40c11f:	adc    BYTE PTR [esi+0x4a],0xe4
  40c123:	repnz push ss
  40c125:	pop    eax
  40c126:	sbb    al,0x7c
  40c128:	push   ebx
  40c129:	std    
  40c12a:	xchg   esi,eax
  40c12b:	aas    
  40c12c:	loop   0x40c19c
  40c12e:	sbb    cl,0xc1
  40c131:	xchg   BYTE PTR [edx-0xc92288d],bl
  40c137:	adc    BYTE PTR [esi+0x49],0x39
  40c13b:	sub    esp,DWORD PTR [eax]
  40c13d:	sub    DWORD PTR [eax+edi*2],ebx
  40c140:	in     al,dx
  40c141:	xchg   esp,eax
  40c142:	jp     0x40c15f
  40c144:	test   eax,0x20c9dd59
  40c149:	cmc    
  40c14a:	dec    edx
  40c14b:	xchg   esp,eax
  40c14c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c14d:	mov    al,0xbc
  40c14f:	aas    
  40c150:	push   ebp
  40c151:	push   es
  40c152:	lods   al,BYTE PTR ds:[esi]
  40c153:	imul   esp,DWORD PTR [edx+ebp*2],0xfffffffb
  40c157:	daa    
  40c158:	(bad)  
  40c159:	(bad)  
  40c15a:	lahf   
  40c15b:	adc    eax,0xdde1b975
  40c160:	jge    0x40c17e
  40c162:	fdivr  QWORD PTR [esi+esi*2-0x66]
  40c166:	xchg   DWORD PTR [edx+0xb02f61f],esp
  40c16c:	mov    cl,0x53
  40c16e:	mov    ds:0xbd08e3bc,eax
  40c173:	inc    eax
  40c174:	jnp    0x40c16f
  40c176:	nop
  40c177:	push   edx
  40c178:	ds std 
  40c17a:	mov    ecx,0x6e464a57
  40c17f:	jo     0x40c11f
  40c181:	mov    eax,0x964339bb
  40c186:	push   esi
  40c187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c188:	dec    ebp
  40c189:	and    DWORD PTR [esi],esp
  40c18b:	jg     0x2c55885a
  40c191:	jp     0x40c1aa
  40c193:	xchg   DWORD PTR [ecx+0x213fc118],edi
  40c199:	pop    ss
  40c19a:	popf   
  40c19b:	out    0xc6,eax
  40c19d:	scas   eax,DWORD PTR es:[edi]
  40c19e:	mov    eax,ds:0x2ca1b297
  40c1a3:	js     0x40c154
  40c1a5:	push   ebp
  40c1a6:	xchg   BYTE PTR [edx-0x124f70d0],bh
  40c1ac:	sub    al,0x77
  40c1ae:	stc    
  40c1af:	cmp    bl,BYTE PTR fs:[ecx+0x388756e2]
  40c1b6:	loope  0x40c18a
  40c1b8:	push   edx
  40c1b9:	aad    0x96
  40c1bb:	xlat   BYTE PTR ds:[ebx]
  40c1bc:	imul   edi,DWORD PTR [esi+edi*1+0x66],0x70b412d9
  40c1c4:	push   eax
  40c1c5:	lea    ebp,[ebp-0x2f]
  40c1c8:	inc    ecx
  40c1c9:	lds    ebp,FWORD PTR [ebp-0x24]
  40c1cc:	mov    edx,0xbebd2e48
  40c1d1:	mov    esp,0x96925d1f
  40c1d6:	in     eax,0xee
  40c1d8:	inc    ecx
  40c1d9:	and    al,0xc1
  40c1db:	jmp    0x40c1d4
  40c1dd:	aas    
  40c1de:	and    BYTE PTR [esi+0x73e40541],ch
  40c1e4:	scas   al,BYTE PTR es:[edi]
  40c1e5:	push   ebx
  40c1e6:	in     eax,dx
  40c1e7:	cld    
  40c1e8:	inc    ecx
  40c1e9:	dec    ecx
  40c1ea:	or     ah,BYTE PTR [esi-0x2b]
  40c1ed:	scas   al,BYTE PTR es:[edi]
  40c1ee:	mov    eax,0xcba19833
  40c1f3:	retf   
  40c1f4:	add    BYTE PTR [edi-0x371ed654],ah
  40c1fa:	and    DWORD PTR [ecx-0x287a3d58],edx
  40c200:	dec    BYTE PTR [ecx]
  40c202:	ins    BYTE PTR es:[edi],dx
  40c203:	sbb    al,0x46
  40c205:	loopne 0x40c27a
  40c207:	adc    dh,BYTE PTR [edi]
  40c209:	push   cs
  40c20a:	xchg   esp,edi
  40c20c:	mov    ah,0xb1
  40c20e:	call   0x519dcbdc
  40c213:	pop    edi
  40c214:	or     DWORD PTR [ecx-0x1d62d2b5],ecx
  40c21a:	dec    edx
  40c21b:	outs   dx,BYTE PTR ds:[esi]
  40c21c:	lea    ebp,[eax+0xd]
  40c21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c220:	xor    BYTE PTR [ecx-0x3e],dl
  40c223:	cmp    eax,0xbe67d2d6
  40c228:	push   esp
  40c229:	jle    0x40c20c
  40c22b:	pop    ebp
  40c22c:	jle    0x40c1f1
  40c22e:	imul   ecx,DWORD PTR [ecx+eiz*8],0xffffffc5
  40c232:	mov    al,ds:0xb22b8801
  40c237:	fsub   st(4),st
  40c239:	add    DWORD PTR ds:0x2f0760d4,esi
  40c23f:	mov    esi,0x75655976
  40c244:	mov    cl,0x1
  40c246:	es jg  0x40c203
  40c249:	inc    eax
  40c24a:	xchg   edx,eax
  40c24b:	push   esi
  40c24c:	cld    
  40c24d:	xchg   BYTE PTR [edi],ah
  40c24f:	int    0x7a
  40c251:	jnp    0x40c2ad
  40c253:	cmp    BYTE PTR [edi],cl
  40c255:	or     al,0x2d
  40c257:	xlat   BYTE PTR ds:[ebx]
  40c258:	shl    DWORD PTR [edi-0x19],0x46
  40c25c:	les    eax,FWORD PTR [esi]
  40c25e:	imul   BYTE PTR [eax-0x8e65d4b]
  40c264:	pop    ss
  40c265:	icebp  
  40c266:	add    dl,BYTE PTR [edi+0x52]
  40c269:	mov    bl,0x1d
  40c26b:	in     al,dx
  40c26c:	and    bh,BYTE PTR [ecx+0x3848a854]
  40c272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c273:	cmp    ch,dh
  40c275:	and    ch,dh
  40c277:	pop    ebx
  40c278:	xor    al,0xa5
  40c27a:	sub    DWORD PTR [eax+0x20],eax
  40c27d:	xchg   ecx,eax
  40c27e:	repnz pop esi
  40c280:	daa    
  40c281:	out    dx,al
  40c282:	inc    edx
  40c283:	adc    BYTE PTR [ecx+esi*4-0x61],0x21
  40c288:	inc    ebx
  40c289:	xor    DWORD PTR [ecx],eax
  40c28b:	xchg   esp,ecx
  40c28d:	arpl   dx,di
  40c28f:	(bad)
  40c292:	jae    0x40c25d
  40c294:	push   cs
  40c295:	fisttp WORD PTR [esp+eiz*4-0x3d14478d]
  40c29c:	enter  0x682f,0x28
  40c2a0:	lahf   
  40c2a1:	call   0x26d5:0x24c9b087
  40c2a8:	nop
  40c2a9:	push   0xf42a72
  40c2ae:	xchg   DWORD PTR [eax-0xd],esp
  40c2b1:	mov    ch,0x18
  40c2b3:	sbb    dl,BYTE PTR [edi]
  40c2b5:	mov    edx,0x81e42c2
  40c2ba:	shl    BYTE PTR [ecx-0x69],1
  40c2bd:	arpl   WORD PTR [ebx-0x72],bx
  40c2c0:	dec    esp
  40c2c1:	enter  0x64d4,0x14
  40c2c5:	mov    ch,0x4
  40c2c7:	pmulhuw mm3,QWORD PTR [ebx+0x39]
  40c2cb:	repz ror BYTE PTR [ecx],0x6a
  40c2cf:	push   edi
  40c2d0:	sbb    DWORD PTR [ecx-0x76353ccb],0x525fedf1
  40c2da:	mov    ah,0x28
  40c2dc:	daa    
  40c2dd:	out    dx,eax
  40c2de:	bound  ebx,QWORD PTR [ecx+0x2d]
  40c2e1:	xor    ebp,DWORD PTR [ecx]
  40c2e3:	inc    esp
  40c2e4:	sbb    eax,DWORD PTR [esi+0x12]
  40c2e7:	lods   al,BYTE PTR ds:[esi]
  40c2e8:	scas   eax,DWORD PTR es:[edi]
  40c2e9:	test   al,0x65
  40c2eb:	adc    al,0x92
  40c2ed:	jnp    0x40c2ba
  40c2ef:	xlat   BYTE PTR ds:[ebx]
  40c2f0:	and    edi,DWORD PTR [ebp+0x7]
  40c2f3:	into   
  40c2f4:	in     eax,0x78
  40c2f6:	jecxz  0x40c285
  40c2f8:	in     eax,dx
  40c2f9:	mov    ebx,0x795de80
  40c2fe:	sub    BYTE PTR [edx+eiz*8],0x78
  40c302:	xchg   DWORD PTR [eax+0x2f],ecx
  40c305:	pop    es
  40c306:	xchg   ecx,eax
  40c307:	les    ebx,FWORD PTR [ecx]
  40c309:	cdq    
  40c30a:	call   0xd5e614d1
  40c30f:	jmp    0x40c369
  40c311:	pop    ss
  40c312:	xchg   ebp,eax
  40c313:	aas    
  40c314:	mov    DWORD PTR [ebx+eax*4+0x7c972c39],eax
  40c31b:	xor    BYTE PTR [ecx+0x453d77b5],al
  40c321:	jbe    0x40c305
  40c323:	jmp    0x40c36a
  40c325:	in     eax,dx
  40c326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c327:	and    al,0xd1
  40c329:	dec    ebx
  40c32a:	xchg   edi,eax
  40c32b:	inc    esi
  40c32c:	mov    cl,bh
  40c32e:	call   0x6224:0x53857770
  40c335:	cs adc al,0x64
  40c338:	add    esi,DWORD PTR [ebx-0x49]
  40c33b:	(bad)  
  40c33c:	jmp    0xebca:0x88c11b4b
  40c343:	inc    di
  40c345:	out    0xc3,al
  40c347:	push   es
  40c348:	addr16 jnp 0x6571ed37
  40c34f:	scas   al,BYTE PTR es:[edi]
  40c350:	cld    
  40c351:	adc    edi,DWORD PTR [ebx]
  40c353:	adc    al,BYTE PTR cs:[edi-0x2a]
  40c357:	push   cs
  40c358:	loop   0x40c3a3
  40c35a:	jecxz  0x40c32f
  40c35c:	adc    cl,cl
  40c35e:	jmp    0x5882:0xe8ed107e
  40c365:	mov    dl,0x5a
  40c367:	xor    eax,0x92503207
  40c36c:	mov    cl,0x45
  40c36e:	and    BYTE PTR [edx-0x74],dh
  40c371:	push   0x70a31d7c
  40c376:	fdivr  st,st(7)
  40c378:	pop    edx
  40c379:	and    al,0x71
  40c37b:	and    BYTE PTR [ebx+esi*4+0xf08454],ah
  40c382:	sbb    BYTE PTR [ebp-0x47dba7d9],0x2f
  40c389:	out    dx,eax
  40c38a:	hlt    
  40c38b:	inc    esi
  40c38c:	fldcw  WORD PTR [eax-0x585a121b]
  40c392:	add    BYTE PTR [edx+0x43],ch
  40c395:	mov    dl,0x5
  40c397:	sub    esp,esp
  40c399:	dec    ebp
  40c39a:	mov    ecx,0x93e27f34
  40c39f:	repz out 0x75,eax
  40c3a2:	data16 fild WORD PTR [ebx]
  40c3a5:	push   ebp
  40c3a6:	cmp    al,0x64
  40c3a8:	or     ebp,DWORD PTR [esi-0x1e333666]
  40c3ae:	or     al,0x37
  40c3b0:	xchg   DWORD PTR ds:0x28a36be1,edi
  40c3b6:	(bad)  
  40c3b7:	pop    edi
  40c3b8:	mov    cl,0xa3
  40c3ba:	jg     0x40c35d
  40c3bc:	je     0x40c3db
  40c3be:	lahf   
  40c3bf:	sbb    DWORD PTR [eax],ebp
  40c3c1:	cld    
  40c3c2:	pop    esi
  40c3c3:	fidivr DWORD PTR [ecx+0x4111bb31]
  40c3c9:	mov    eax,ds:0x900cbb99
  40c3ce:	scas   al,BYTE PTR es:[edi]
  40c3cf:	or     esp,esi
  40c3d1:	inc    esi
  40c3d2:	push   ebx
  40c3d3:	icebp  
  40c3d4:	imul   edi,DWORD PTR [edi+ebx*2+0x37],0xffffffa6
  40c3d9:	imul   esp,eax,0x17
  40c3dc:	lea    ebp,[eax-0x7e]
  40c3df:	cmc    
  40c3e0:	mov    ebp,0x9e4dada2
  40c3e5:	(bad)  
  40c3e6:	in     eax,0x1d
  40c3e8:	xchg   BYTE PTR [ebx-0x46f682dc],bl
  40c3ee:	aam    0x11
  40c3f0:	call   0x8e6dd045
  40c3f5:	mov    ebp,0x62e49c77
  40c3fa:	fs leave 
  40c3fc:	sbb    bl,BYTE PTR [ebp+esi*4-0x5e50d01c]
  40c403:	cmc    
  40c404:	or     edx,ebp
  40c406:	fmul   DWORD PTR [eax+0x292ea6df]
  40c40c:	or     dh,ch
  40c40e:	in     al,0xea
  40c410:	pop    ebp
  40c411:	das    
  40c412:	push   esp
  40c413:	pop    ebx
  40c414:	cwde   
  40c415:	aaa    
  40c416:	popa   
  40c417:	mov    dl,0xef
  40c419:	loopne 0x40c42d
  40c41b:	add    DWORD PTR [esi],ecx
  40c41d:	add    eax,DWORD PTR [esi+0x8]
  40c420:	pop    ecx
  40c421:	cdq    
  40c422:	push   edi
  40c423:	sbb    eax,0xa15bb2b2
  40c428:	loopne 0x40c474
  40c42a:	ss jmp 0x40c412
  40c42d:	pushf  
  40c42e:	call   FWORD PTR [ebp+0x433d79ec]
  40c434:	(bad)  
  40c435:	fsub   DWORD PTR [esi-0x6179a416]
  40c43b:	cmp    DWORD PTR [ecx-0x797ac027],ecx
  40c441:	enter  0x54b7,0xd1
  40c445:	imul   esp,DWORD PTR [eax-0x75],0x4f
  40c449:	dec    cx
  40c44b:	dec    edx
  40c44c:	jle    0x40c420
  40c44e:	(bad)
  40c451:	call   0xabe08d11
  40c456:	hlt    
  40c457:	adc    DWORD PTR [edx],esi
  40c459:	adc    al,0x26
  40c45b:	inc    ecx
  40c45c:	shl    edx,0xa
  40c45f:	add    eax,0x8db5be8e
  40c464:	jae    0x40c4cf
  40c466:	push   edx
  40c467:	xchg   esi,eax
  40c468:	push   edx
  40c469:	sar    DWORD PTR [edx-0x7d6b8b31],cl
  40c46f:	out    dx,al
  40c470:	ss jae 0x40c4c7
  40c473:	mov    esp,0xf4db06a0
  40c478:	(bad)  
  40c479:	and    eax,0xeeff60aa
  40c47e:	jne    0x40c438
  40c480:	mov    DWORD PTR [ecx-0x7a],edx
  40c483:	mov    ds:0xc9f015f9,eax
  40c488:	test   al,0xfe
  40c48a:	sub    DWORD PTR [ebx+ebp*1],0x4cd56506
  40c491:	arpl   WORD PTR [edi],si
  40c493:	inc    edi
  40c494:	or     eax,ebx
  40c496:	fimul  DWORD PTR [ecx]
  40c498:	call   0xd237:0xcbada1f3
  40c49f:	cmp    al,0xaa
  40c4a1:	push   0xffffffe9
  40c4a3:	pop    edx
  40c4a4:	push   0x6d
  40c4a6:	scas   eax,DWORD PTR es:[edi]
  40c4a7:	ret    
  40c4a8:	mov    ebp,0x73f9cf5b
  40c4ad:	ins    BYTE PTR es:[edi],dx
  40c4ae:	aam    0x86
  40c4b0:	cdq    
  40c4b1:	pop    edi
  40c4b2:	lea    eax,[esi-0x7b74684b]
  40c4b8:	mov    ch,0x98
  40c4ba:	stos   DWORD PTR es:[edi],eax
  40c4bb:	xchg   esp,eax
  40c4bc:	sub    ch,BYTE PTR [edi+0x67]
  40c4bf:	pop    edx
  40c4c0:	add    ebx,eax
  40c4c2:	adc    edx,DWORD PTR [esi-0x11]
  40c4c5:	mov    DWORD PTR [ebx],ecx
  40c4c7:	inc    edi
  40c4c8:	bound  edi,QWORD PTR [ecx-0xe]
  40c4cb:	gs push cs
  40c4cd:	ja     0x40c49a
  40c4cf:	ja     0x40c49b
  40c4d1:	sbb    eax,0x1de1a79c
  40c4d6:	mov    eax,ds:0xa2460542
  40c4db:	lods   eax,DWORD PTR ds:[esi]
  40c4dc:	test   ax,0xb460
  40c4e0:	mov    BYTE PTR [edi-0x4675b2fa],bl
  40c4e6:	pcmpgtb mm0,mm7
  40c4e9:	push   esi
  40c4ea:	or     al,0x83
  40c4ec:	jecxz  0x40c4fb
  40c4ee:	rol    bl,cl
  40c4f0:	xchg   DWORD PTR [esi],eax
  40c4f2:	push   esi
  40c4f3:	inc    edx
  40c4f4:	mul    BYTE PTR [edx+0x40]
  40c4f7:	xor    DWORD PTR [esi*4+0x396e1090],0xffffff8e
  40c4ff:	add    eax,DWORD PTR [esi+0x26]
  40c502:	ss hlt 
  40c504:	in     al,dx
  40c505:	test   DWORD PTR [ebx-0x603f87ad],esi
  40c50b:	jnp    0x40c4a5
  40c50d:	mov    bl,0x23
  40c50f:	pop    ecx
  40c510:	daa    
  40c511:	sub    ebx,DWORD PTR [esi+0x5e]
  40c514:	test   al,0x99
  40c516:	jmp    0x80308869
  40c51b:	shr    DWORD PTR [ecx+0xc88ab07],0x38
  40c522:	cmp    eax,edx
  40c524:	push   0x88b86ac4
  40c529:	dec    ebx
  40c52a:	adc    ecx,ebx
  40c52c:	or     BYTE PTR ds:0x5f69e510,cl
  40c532:	add    ch,BYTE PTR [esi]
  40c534:	shl    cl,cl
  40c536:	mov    ebx,0x3d2f6348
  40c53b:	push   ss
  40c53c:	call   0x1a1d:0x3701316e
  40c543:	(bad)  
  40c544:	xor    al,0x50
  40c546:	xchg   esp,eax
  40c547:	xor    eax,0xc1e36b82
  40c54c:	jg     0x40c534
  40c54e:	jmp    0xe1d6:0xd4dc0b7b
  40c555:	fs xor eax,0xac94bf77
  40c55b:	pop    esp
  40c55c:	call   0x5d1d:0xa3ab37d1
  40c563:	inc    esp
  40c564:	(bad)  [esi-0x71e8a1e2]
  40c56a:	pop    ebp
  40c56b:	adc    BYTE PTR [edi],cl
  40c56d:	pop    esp
  40c56e:	mov    bh,0xf7
  40c570:	out    dx,eax
  40c571:	mov    al,0x4d
  40c573:	cs aad 0x57
  40c576:	pusha  
  40c577:	mov    ds:0x675b8df1,eax
  40c57c:	mov    ds:0x5afc93b2,al
  40c581:	lods   al,BYTE PTR ds:[esi]
  40c582:	int    0x23
  40c584:	arpl   ax,bx
  40c586:	add    DWORD PTR [ebx],edi
  40c588:	fisttp DWORD PTR [ebp-0x54e0f30d]
  40c58e:	sub    dh,bh
  40c590:	dec    ebx
  40c591:	lods   eax,DWORD PTR ds:[esi]
  40c592:	and    al,0xe8
  40c594:	dec    edx
  40c595:	(bad)  
  40c596:	cmp    bh,BYTE PTR [ecx+0x19]
  40c599:	or     eax,0xc6922c82
  40c59e:	mov    ebx,?
  40c5a0:	mov    ebx,eax
  40c5a2:	pinsrw mm5,esp,0x2f
  40c5a6:	inc    ebx
  40c5a7:	in     eax,0x62
  40c5a9:	cmp    eax,0xae39f998
  40c5ae:	(bad)  
  40c5af:	pop    ss
  40c5b0:	leave  
  40c5b1:	jmp    0x40c5aa
  40c5b3:	mov    BYTE PTR [ebx-0x3b],dh
  40c5b6:	sahf   
  40c5b7:	jg     0x40c589
  40c5b9:	not    BYTE PTR [esi+eiz*4+0x2f6392be]
  40c5c0:	push   ss
  40c5c1:	pop    edx
  40c5c2:	outs   dx,BYTE PTR ds:[esi]
  40c5c3:	pop    ecx
  40c5c4:	push   ecx
  40c5c5:	loop   0x40c58a
  40c5c7:	pop    ebx
  40c5c8:	sbb    dl,0x9b
  40c5cb:	xchg   edi,eax
  40c5cc:	adc    eax,0xedfc2e8b
  40c5d1:	jo     0x40c58a
  40c5d3:	hlt    
  40c5d4:	jmp    ebx
  40c5d6:	pop    ebx
  40c5d7:	push   edx
  40c5d8:	call   0xabdf:0x9b33e00b
  40c5df:	mov    ebp,0xab9d4b43
  40c5e4:	mov    ebp,0xb63849dc
  40c5e9:	xchg   edx,eax
  40c5ea:	inc    eax
  40c5eb:	add    cl,0x4f
  40c5ee:	ror    DWORD PTR [ecx],0x4a
  40c5f1:	inc    edx
  40c5f2:	mov    DWORD PTR [esi+0x73c86c49],eax
  40c5f8:	sub    al,0x28
  40c5fa:	iret   
  40c5fb:	and    al,0x49
  40c5fd:	pusha  
  40c5fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c600:	fidivr DWORD PTR [ecx+ebp*4+0x19]
  40c604:	arpl   WORD PTR [esi],cx
  40c606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c607:	cmp    ecx,ebx
  40c609:	mov    ah,0x8f
  40c60b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c60c:	xchg   ebx,eax
  40c60d:	sub    ch,bl
  40c60f:	es push ebx
  40c611:	adc    eax,0x26bfc1c4
  40c616:	cmp    DWORD PTR es:[ebp-0x4c],0x39
  40c61b:	sahf   
  40c61c:	cmp    al,0x45
  40c61e:	push   esp
  40c61f:	or     eax,0x43dbb655
  40c624:	cmp    DWORD PTR [ebx+0x46],ebx
  40c627:	push   es
  40c628:	shl    DWORD PTR [edi+ebx*1-0x46d611c0],1
  40c62f:	sahf   
  40c630:	mov    eax,ds:0xe8a74588
  40c635:	mov    edx,0xd4e9a9a2
  40c63a:	or     eax,0xa7e99674
  40c640:	dec    edx
  40c641:	dec    ecx
  40c642:	aaa    
  40c643:	jae    0x40c62c
  40c645:	rol    DWORD PTR [edx-0x6d],1
  40c648:	or     DWORD PTR [edx-0x73909245],ecx
  40c64e:	fxch   st(6)
  40c650:	in     eax,0xb2
  40c652:	pop    ss
  40c653:	fcmovnu st,st(1)
  40c655:	int    0x63
  40c657:	popf   
  40c658:	add    BYTE PTR [eax+0x34],0xba
  40c65c:	(bad)  
  40c65d:	or     edx,DWORD PTR ds:0x807c222c
  40c663:	xchg   edx,eax
  40c664:	lea    esi,[ebp*8-0x6b757cef]
  40c66b:	in     eax,dx
  40c66c:	adc    edi,DWORD PTR [edx-0x7f62c8c5]
  40c672:	pop    edi
  40c673:	shl    DWORD PTR [esi+0x2b6eacb2],cl
  40c679:	jo     0x40c6c9
  40c67b:	jns    0x40c6dd
  40c67d:	ret    
  40c67e:	dec    eax
  40c67f:	je     0x40c675
  40c681:	das    
  40c682:	fwait
  40c683:	test   al,dh
  40c685:	ficom  WORD PTR [eax+0x461547f2]
  40c68b:	sub    cl,BYTE PTR [edi-0x156f7b3b]
  40c691:	test   al,0xdc
  40c693:	pop    edi
  40c694:	mov    al,ds:0x6baae41e
  40c699:	mov    edx,0xf4f87dbb
  40c69e:	push   0xffffffe3
  40c6a0:	mov    cl,0x83
  40c6a2:	arpl   WORD PTR [esi-0x6ca78428],ax
  40c6a8:	popf   
  40c6a9:	dec    esp
  40c6aa:	test   al,ch
  40c6ac:	fdivr  DWORD PTR [ebp+0x56ab0168]
  40c6b2:	xchg   BYTE PTR [ebx+0x20],bl
  40c6b5:	inc    ecx
  40c6b6:	mov    esi,0x3345485c
  40c6bb:	adc    eax,0xe164c546
  40c6c0:	push   edi
  40c6c1:	and    eax,0x1e1fb475
  40c6c6:	in     eax,dx
  40c6c7:	div    BYTE PTR [eax-0x25]
  40c6ca:	dec    ebx
  40c6cb:	std    
  40c6cc:	popa   
  40c6cd:	jmp    0x17cc7409
  40c6d2:	fnsave ss:[edi+0x58527ae2]
  40c6d9:	mov    ds:0x2dcf63f6,al
  40c6de:	rol    BYTE PTR [esp+esi*2-0x56],cl
  40c6e2:	addr16 inc esp
  40c6e4:	int    0xbf
  40c6e6:	shl    DWORD PTR [esi],1
  40c6e8:	retf   0x7793
  40c6eb:	loopne 0x40c705
  40c6ed:	push   cs
  40c6ee:	pop    es
  40c6ef:	add    ebx,DWORD PTR ds:0x3cd1925b
  40c6f5:	xor    bl,ah
  40c6f7:	sbb    dh,ch
  40c6f9:	ret    0x4413
  40c6fc:	mov    esi,0x61c54f86
  40c701:	xchg   ebp,eax
  40c702:	mov    ah,BYTE PTR gs:[ebp+0x34]
  40c706:	in     al,0x4b
  40c708:	dec    edx
  40c709:	jbe    0x40c76a
  40c70b:	jecxz  0x40c6d2
  40c70d:	gs mov ch,0x2c
  40c710:	mov    dl,ch
  40c712:	sub    ch,BYTE PTR [edi+0x2d8b8307]
  40c718:	ror    BYTE PTR [edx],0x7c
  40c71b:	imul   ebp,DWORD PTR [edx+0x53a80acf],0x83ee1c9d
  40c725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c726:	and    BYTE PTR [ecx+0x4d],0xcd
  40c72a:	mov    dh,0xe4
  40c72c:	jno    0x40c6ec
  40c72e:	mov    WORD PTR [esi-0xd9ef7ad],ds
  40c734:	jle    0x40c76e
  40c736:	pop    edx
  40c737:	mov    dh,0x6f
  40c739:	mov    ds,WORD PTR [esi]
  40c73b:	xchg   esp,eax
  40c73c:	xor    al,0xab
  40c73e:	cli    
  40c73f:	in     al,0x16
  40c741:	xor    edi,DWORD PTR [bx+si+0x6a]
  40c745:	push   cs
  40c746:	jmp    0x947:0x6c62cb1a
  40c74d:	test   cl,0xcb
  40c750:	add    eax,0x14f9b644
  40c755:	sub    eax,0x7cdb6783
  40c75a:	pushf  
  40c75b:	or     BYTE PTR [edi],dh
  40c75d:	iret   
  40c75e:	cld    
  40c75f:	into   
  40c760:	mov    BYTE PTR [edi+0x71066b72],al
  40c766:	fisttp WORD PTR [edi]
  40c768:	push   0xc00b006d
  40c76d:	add    DWORD PTR [eax-0x3],eax
  40c770:	mov    ah,0x99
  40c772:	inc    ebp
  40c773:	dec    ebx
  40c774:	dec    esp
  40c775:	dec    eax
  40c776:	pop    es
  40c777:	fidivr DWORD PTR [ecx]
  40c779:	ror    DWORD PTR [edx+0x6b782207],cl
  40c77f:	mov    edi,0x35193f42
  40c784:	mov    ebx,0xe813a66b
  40c789:	mov    edi,0xd3bef3c0
  40c78e:	bound  ecx,QWORD PTR [ebp*2-0x1d7adfcb]
  40c795:	mov    ds:0x6989a382,eax
  40c79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c79b:	pop    ds
  40c79c:	and    DWORD PTR [edx],0xb3c697ea
  40c7a2:	das    
  40c7a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7a4:	(bad)  
  40c7a5:	bound  edx,QWORD PTR [ebx+0xd]
  40c7a8:	add    esp,ebp
  40c7aa:	das    
  40c7ab:	inc    ebx
  40c7ac:	ins    DWORD PTR es:[edi],dx
  40c7ad:	jp     0x40c782
  40c7af:	scas   eax,DWORD PTR es:[edi]
  40c7b0:	lods   al,BYTE PTR ds:[esi]
  40c7b1:	inc    ebx
  40c7b2:	xor    eax,0x41bae2db
  40c7b7:	mov    esi,0x65d0feb9
  40c7bc:	xor    eax,DWORD PTR [edi+0x40]
  40c7bf:	(bad)  
  40c7c0:	clc    
  40c7c1:	sti    
  40c7c2:	jnp    0x40c807
  40c7c4:	push   esi
  40c7c5:	jp     0x40c798
  40c7c7:	stos   DWORD PTR es:[edi],eax
  40c7c8:	in     al,dx
  40c7c9:	in     eax,0xd8
  40c7cb:	xchg   edi,eax
  40c7cc:	mov    bl,0x87
  40c7ce:	jge    0x40c7af
  40c7d0:	inc    eax
  40c7d1:	out    dx,al
  40c7d2:	inc    esp
  40c7d3:	mov    DWORD PTR [edi-0x22c688c4],esp
  40c7d9:	out    dx,eax
  40c7da:	push   0xb8bd841d
  40c7df:	dec    edx
  40c7e0:	push   cs
  40c7e1:	and    eax,0x31f177eb
  40c7e6:	inc    esp
  40c7e7:	mov    cl,0x20
  40c7e9:	and    al,0xe5
  40c7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7ec:	adc    BYTE PTR [edi-0x18],ch
  40c7ef:	xor    edi,DWORD PTR [edx]
  40c7f1:	and    DWORD PTR [ebx],edx
  40c7f3:	xchg   ah,dh
  40c7f5:	test   al,0xbe
  40c7f7:	inc    edx
  40c7f8:	int    0x15
  40c7fa:	pop    eax
  40c7fb:	mov    ?,WORD PTR [edi+0x71]
  40c7fe:	outs   dx,BYTE PTR ds:[esi]
  40c7ff:	stos   DWORD PTR es:[edi],eax
  40c800:	ret    0xe02c
  40c803:	mov    dl,0x17
  40c805:	jns    0x40c7d1
  40c807:	push   ebx
  40c808:	les    ecx,FWORD PTR [ebx+0x3c]
  40c80b:	pushf  
  40c80c:	rcl    BYTE PTR [ebp+0x14],cl
  40c80f:	fst    QWORD PTR [ecx]
  40c811:	stos   BYTE PTR es:[edi],al
  40c812:	add    BYTE PTR [ecx-0x59d5d880],dl
  40c818:	in     al,dx
  40c819:	xchg   esp,eax
  40c81a:	sbb    BYTE PTR [ebp-0x7b],0x33
  40c81e:	adc    BYTE PTR [ebp+0x19],al
  40c821:	cmp    eax,0x69f8df09
  40c826:	loope  0x40c7b4
  40c828:	cmp    eax,0xf786ec84
  40c82d:	stc    
  40c82e:	xchg   DWORD PTR [edx+0x4db0fb43],eax
  40c834:	fnsave [ecx-0x59]
  40c837:	mov    edx,0xc382f71c
  40c83c:	mov    dl,0xe0
  40c83e:	cmp    eax,0x41aa3cf9
  40c843:	xchg   esi,eax
  40c844:	and    ecx,DWORD PTR [edi+0x39]
  40c847:	pop    ecx
  40c848:	std    
  40c849:	sub    BYTE PTR [esi],ah
  40c84b:	jp     0x40c7d6
  40c84d:	sub    eax,0x76fdd21d
  40c852:	pop    esp
  40c853:	sub    DWORD PTR [edx+0x4b],ebp
  40c856:	adc    eax,0x5c55d2e0
  40c85b:	out    dx,eax
  40c85c:	out    0x7f,al
  40c85e:	jne    0x40c7fc
  40c860:	push   ecx
  40c861:	sbb    ecx,esp
  40c863:	xor    esp,eax
  40c865:	inc    edi
  40c866:	out    dx,eax
  40c867:	jg     0x40c8b4
  40c869:	mov    esp,0xa59166d6
  40c86e:	cmp    BYTE PTR [edi],ch
  40c870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c871:	push   ebx
  40c872:	loope  0x40c8d6
  40c874:	idiv   BYTE PTR [edi]
  40c876:	call   0x5fc42cc5
  40c87b:	jmp    0x9b4f:0xad3de3e
  40c882:	mov    al,0xbf
  40c884:	xchg   ecx,eax
  40c885:	aam    0xa9
  40c887:	leave  
  40c888:	stos   BYTE PTR es:[edi],al
  40c889:	or     al,0xc3
  40c88b:	sbb    DWORD PTR [ebx+ebx*1],ebp
  40c88e:	int3   
  40c88f:	inc    ecx
  40c890:	out    0x31,al
  40c892:	(bad)  
  40c893:	test   eax,0xb40c70ca
  40c898:	jb     0x40c87b
  40c89a:	pop    ds
  40c89b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c89c:	push   edi
  40c89d:	jle    0x40c86e
  40c89f:	push   ds
  40c8a0:	xchg   edi,esi
  40c8a2:	or     eax,ecx
  40c8a4:	shr    bh,cl
  40c8a6:	push   0xfffffff1
  40c8a8:	sbb    al,0x58
  40c8aa:	xor    ecx,ebx
  40c8ac:	sbb    al,BYTE PTR [edi]
  40c8ae:	ret    0xe065
  40c8b1:	push   esp
  40c8b2:	jns    0x40c861
  40c8b4:	std    
  40c8b5:	fcmovbe st,st(5)
  40c8b7:	push   ds
  40c8b8:	repnz xor ch,dh
  40c8bb:	mov    ebx,0x784d3411
  40c8c0:	bound  ebp,QWORD PTR [eax]
  40c8c2:	inc    eax
  40c8c3:	dec    edx
  40c8c4:	mov    ds:0x51c97eda,eax
  40c8c9:	stos   DWORD PTR es:[edi],eax
  40c8ca:	and    DWORD PTR ds:[edi-0x4e57a721],esi
  40c8d1:	jno    0x40c8cd
  40c8d3:	sub    bl,BYTE PTR [eax-0x5a]
  40c8d6:	jnp    0x40c8b9
  40c8d8:	(bad)  
  40c8d9:	rcl    BYTE PTR [esi-0x7d],1
  40c8dc:	push   edx
  40c8dd:	imul   ebx,esi,0xffffff93
  40c8e0:	shl    DWORD PTR [edi+0x1],1
  40c8e3:	xchg   ebx,eax
  40c8e4:	mov    dl,0x26
  40c8e6:	fnstsw WORD PTR [eax-0x60]
  40c8e9:	mov    ds:0x2f364880,eax
  40c8ee:	dec    ecx
  40c8ef:	cs iret 
  40c8f1:	xor    BYTE PTR ds:0x528dbe41,ah
  40c8f7:	xchg   DWORD PTR [eax-0x18ae915],eax
  40c8fd:	mul    BYTE PTR [edx]
  40c8ff:	jge    0x40c97f
  40c901:	leave  
  40c902:	bound  eax,QWORD PTR [eax-0x62]
  40c905:	mov    bl,0xc2
  40c907:	cmp    ch,BYTE PTR [ebx+0x50]
  40c90a:	sahf   
  40c90b:	push   edi
  40c90c:	gs dec ecx
  40c90e:	inc    eax
  40c90f:	retf   
  40c910:	or     al,0x82
  40c912:	sub    edx,ecx
  40c914:	cld    
  40c915:	leave  
  40c916:	repz (bad) 
  40c918:	fwait
  40c919:	jb     0x40c901
  40c91b:	jae    0x40c8f2
  40c91d:	push   cs
  40c91e:	sbb    eax,0x12cb165
  40c923:	shl    BYTE PTR [eax],1
  40c925:	or     ebx,DWORD PTR [edx]
  40c927:	or     ebp,esi
  40c929:	xchg   DWORD PTR [ebx-0xbf6dcf5],edx
  40c92f:	pop    ebx
  40c930:	xor    esi,DWORD PTR [esi+0xf]
  40c933:	jecxz  0x40c97c
  40c935:	sbb    al,0xab
  40c937:	dec    ebx
  40c938:	dec    edi
  40c939:	rcr    DWORD PTR [ebp-0x3b],cl
  40c93c:	add    ch,ch
  40c93e:	(bad)  
  40c93f:	jnp    0x40c979
  40c941:	data16 jge 0x40c968
  40c944:	imul   ecx,DWORD PTR [ebx-0x6ff4394a],0x1e
  40c94b:	lahf   
  40c94c:	add    ebp,esi
  40c94e:	mov    al,ds:0xc4436788
  40c953:	ja     0x40c96b
  40c955:	aam    0x21
  40c957:	les    esp,FWORD PTR [eax]
  40c959:	scas   eax,DWORD PTR es:[edi]
  40c95a:	cmp    edx,DWORD PTR cs:[edx+0x22]
  40c95e:	add    BYTE PTR [ecx+0x7dfa938f],dh
  40c964:	pop    ss
  40c965:	dec    eax
  40c966:	jl     0x40c935
  40c968:	pop    eax
  40c969:	retf   
  40c96a:	aas    
  40c96b:	cmp    DWORD PTR [edi+ecx*2-0x3b],0x4b4d9846
  40c973:	(bad)  
  40c974:	out    0x66,al
  40c976:	xlat   BYTE PTR ds:[ebx]
  40c977:	out    0x4d,eax
  40c979:	xchg   ebx,eax
  40c97a:	xor    eax,0xf905e7d
  40c97f:	push   esi
  40c980:	mov    WORD PTR [ecx-0x5b4a2e26],gs
  40c986:	pop    esi
  40c987:	test   BYTE PTR [esi+0x7],ch
  40c98a:	xchg   ecx,eax
  40c98b:	call   0xfd44:0x2c92e6a9
  40c992:	jns    0x40c92d
  40c994:	jb     0x40c96d
  40c996:	xor    bl,0x87
  40c999:	lods   eax,DWORD PTR ds:[esi]
  40c99a:	mov    edi,0x3ad1c199
  40c99f:	ja     0x40ca04
  40c9a1:	push   ds
  40c9a2:	pushf  
  40c9a3:	xchg   esp,eax
  40c9a4:	add    ebx,DWORD PTR [ebp+0x50]
  40c9a7:	out    0x67,al
  40c9a9:	pop    edx
  40c9aa:	adc    DWORD PTR [ebx+0x7b],esp
  40c9ad:	loope  0x40c93a
  40c9af:	(bad)  [ecx-0x47]
  40c9b2:	xor    al,0xfc
  40c9b4:	neg    BYTE PTR [esi]
  40c9b6:	xchg   edx,eax
  40c9b7:	push   edx
  40c9b8:	cmp    eax,0xe596486c
  40c9bd:	sub    DWORD PTR [esi],0xffffff9c
  40c9c0:	into   
  40c9c1:	arpl   WORD PTR [edx-0x4d],si
  40c9c4:	mov    al,0x34
  40c9c6:	bound  edi,QWORD PTR [ebp-0x590dd8de]
  40c9cc:	dec    esi
  40c9ce:	adc    eax,0x744b0534
  40c9d3:	sti    
  40c9d4:	sbb    eax,0xb5d4df64
  40c9d9:	push   edx
  40c9da:	sbb    BYTE PTR [ecx],ah
  40c9dc:	clc    
  40c9dd:	in     eax,dx
  40c9de:	push   0x7dbdd39
  40c9e3:	sbb    BYTE PTR [ecx+0x30],bh
  40c9e6:	inc    edx
  40c9e7:	adc    BYTE PTR [esi+0x38289132],bl
  40c9ed:	add    al,0x17
  40c9ef:	adc    al,dl
  40c9f1:	retf   
  40c9f2:	or     eax,eax
  40c9f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9f5:	into   
  40c9f6:	ins    DWORD PTR es:[edi],dx
  40c9f7:	adc    al,0x32
  40c9f9:	push   0x307901db
  40c9fe:	cmp    eax,0x616195c8
  40ca03:	inc    edi
  40ca04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca05:	in     al,0xcb
  40ca07:	xor    BYTE PTR [ebx+0x4],0xed
  40ca0b:	fisub  DWORD PTR [ecx+0x3f2b666d]
  40ca11:	add    DWORD PTR [edx-0x71],0x33f15340
  40ca18:	scas   eax,DWORD PTR es:[edi]
  40ca19:	aam    0x8
  40ca1b:	aam    0x5f
  40ca1d:	not    BYTE PTR [edx-0x2bd63e85]
  40ca23:	retf   0xb762
  40ca26:	adc    BYTE PTR [eax],cl
  40ca28:	and    DWORD PTR [ecx],ebp
  40ca2a:	ret    
  40ca2b:	out    dx,eax
  40ca2c:	mov    bl,0x14
  40ca2e:	jle    0x40ca28
  40ca30:	xchg   ebp,eax
  40ca31:	mov    ebx,0xe603f9eb
  40ca36:	or     eax,0x1e3207f3
  40ca3b:	add    bh,BYTE PTR [edi]
  40ca3d:	adc    edi,DWORD PTR [si]
  40ca40:	dec    eax
  40ca41:	cld    
  40ca42:	cmp    ecx,DWORD PTR [esi-0x55]
  40ca45:	loope  0x40ca84
  40ca47:	in     al,0xe6
  40ca49:	jg     0x40ca21
  40ca4b:	jmp    0xb6f83096
  40ca50:	leave  
  40ca51:	sub    BYTE PTR [ebx],ah
  40ca53:	or     esi,DWORD PTR [ecx-0x66]
  40ca56:	ret    0xe89f
  40ca59:	mov    ebx,0x4269ad9c
  40ca5e:	dec    edi
  40ca5f:	cwde   
  40ca60:	xor    al,0x5d
  40ca62:	neg    bl
  40ca64:	pop    ss
  40ca65:	jno    0x40cacb
  40ca67:	stos   DWORD PTR es:[edi],eax
  40ca68:	dec    esp
  40ca69:	xchg   ebx,eax
  40ca6a:	scas   eax,DWORD PTR es:[edi]
  40ca6b:	test   BYTE PTR [si+0x35],ch
  40ca6f:	lock dec esi
  40ca71:	jp     0x40ca5e
  40ca73:	fxtract 
  40ca75:	cmp    al,0x66
  40ca77:	pop    es
  40ca78:	std    
  40ca79:	mov    al,ds:0x4ce01756
  40ca7e:	je     0x40cad8
  40ca80:	sbb    BYTE PTR [ebp+0x7f],bh
  40ca83:	cs (bad) 
  40ca85:	xor    al,0x23
  40ca87:	jmp    0x4b1a:0x292b6eaa
  40ca8e:	in     eax,dx
  40ca8f:	ins    BYTE PTR es:[edi],dx
  40ca90:	mov    ecx,0x2b7bde46
  40ca95:	cmp    al,0xd9
  40ca97:	cmp    dl,ah
  40ca99:	mov    ah,0x24
  40ca9b:	imul   ebx,DWORD PTR [edi+0x14],0x5f
  40ca9f:	pushf  
  40caa0:	lahf   
  40caa1:	pop    ebx
  40caa2:	std    
  40caa3:	nop
  40caa4:	imul   ecx,DWORD PTR [ecx-0x38ae5126],0x58
  40caab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caac:	cli    
  40caad:	inc    eax
  40caae:	mov    dl,0xb1
  40cab0:	(bad)  
  40cab1:	sub    al,0x92
  40cab3:	in     eax,0x83
  40cab5:	cs mov ch,0xc5
  40cab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab9:	fxch   st(6)
  40cabb:	call   0xdaef2607
  40cac0:	inc    esp
  40cac1:	ret    
  40cac2:	cs jmp 0xc34d1724
  40cac8:	or     al,0x17
  40caca:	ja     0x40ca63
  40cacc:	pop    edi
  40cacd:	jle    0x40ca5f
  40cacf:	sbb    BYTE PTR [ecx],ch
  40cad1:	pop    ecx
  40cad2:	arpl   WORD PTR [esp+ecx*4-0x793fdc93],ax
  40cad9:	mov    edx,0x10cc6567
  40cade:	lock mov BYTE PTR [esi+0x28ed06ed],0x6f
  40cae6:	jle    0x40cb01
  40cae8:	sbb    cl,BYTE PTR [esi-0x7]
  40caeb:	je     0x40cb28
  40caed:	fmul   st(0),st
  40caef:	lods   al,BYTE PTR ds:[esi]
  40caf0:	imul   eax,DWORD PTR ds:0x9d350904,0xffffffe9
  40caf7:	cmp    eax,esp
  40caf9:	je     0x40cb6a
  40cafb:	inc    esp
  40cafc:	imul   ebx,DWORD PTR [eax],0x68
  40caff:	das    
  40cb00:	or     al,BYTE PTR [eax]
  40cb02:	xchg   esi,eax
  40cb03:	mov    edx,0x565667d3
  40cb08:	into   
  40cb09:	mov    eax,ds:0xf10960ab
  40cb0e:	sub    al,0xb9
  40cb10:	outs   dx,DWORD PTR ds:[esi]
  40cb11:	loopne 0x40caf5
  40cb13:	dec    ecx
  40cb14:	arpl   WORD PTR [ebx-0x1b],sp
  40cb17:	js     0x40caf3
  40cb19:	jl     0x40cae6
  40cb1b:	test   eax,0x20890099
  40cb20:	fnstsw WORD PTR [ecx]
  40cb22:	xor    dh,BYTE PTR gs:[edx+ecx*2]
  40cb26:	sub    DWORD PTR [ebx+ebp*1+0x45c347a2],esi
  40cb2d:	leave  
  40cb2e:	xlat   BYTE PTR ds:[ebx]
  40cb2f:	xlat   BYTE PTR ds:[ebx]
  40cb30:	inc    ebx
  40cb31:	adc    cl,BYTE PTR ds:0x4615889d
  40cb37:	test   BYTE PTR [ebp-0x52a4a9c7],dl
  40cb3d:	loop   0x40cb30
  40cb3f:	push   esi
  40cb40:	xchg   ah,dl
  40cb42:	or     bh,BYTE PTR [ebx+0x15]
  40cb45:	fcomp  QWORD PTR [esi]
  40cb47:	in     eax,0x90
  40cb49:	adc    eax,0x65086f76
  40cb4e:	(bad)  [edx-0x4f]
  40cb51:	sub    esi,ecx
  40cb53:	out    0xbb,al
  40cb55:	pushf  
  40cb56:	sbb    edx,esi
  40cb58:	mov    ebp,0xf03e0aac
  40cb5d:	add    DWORD PTR [ebx],edx
  40cb5f:	or     edi,DWORD PTR [ebx+0x68e67b1e]
  40cb65:	ins    DWORD PTR es:[edi],dx
  40cb66:	jl     0x40cb33
  40cb68:	xchg   edx,eax
  40cb69:	xchg   DWORD PTR [ebx],ebx
  40cb6b:	popa   
  40cb6c:	icebp  
  40cb6d:	mov    cl,0x12
  40cb6f:	or     BYTE PTR [edi],0x1b
  40cb72:	popf   
  40cb73:	jbe    0x40cb8f
  40cb75:	leave  
  40cb76:	daa    
  40cb77:	stc    
  40cb78:	aad    0x4d
  40cb7a:	mov    DWORD PTR [esi-0x63],edx
  40cb7d:	loope  0x40cbc4
  40cb7f:	enter  0xc52d,0x85
  40cb83:	push   ss
  40cb84:	test   eax,0xfef52d72
  40cb89:	les    edx,FWORD PTR [ebp-0x80]
  40cb8c:	inc    esp
  40cb8d:	mov    esp,0xc18bed9d
  40cb92:	inc    eax
  40cb93:	push   ds
  40cb94:	jnp    0x40cc03
  40cb96:	dec    ebp
  40cb97:	xor    BYTE PTR [edx+0x5c906c1e],bl
  40cb9d:	ret    
  40cb9e:	sub    dl,BYTE PTR [eax+0x466faf8d]
  40cba4:	cmc    
  40cba5:	inc    ebp
  40cba6:	mov    al,gs:0xbe88e331
  40cbac:	sbb    DWORD PTR [edi],0xf744d110
  40cbb2:	aas    
  40cbb3:	adc    ecx,DWORD PTR [ecx]
  40cbb5:	jecxz  0x40cbcb
  40cbb7:	jno    0x40cb6c
  40cbb9:	shl    BYTE PTR [edi+edx*8-0x1520f894],0x4
  40cbc1:	into   
  40cbc2:	adc    ecx,ecx
  40cbc4:	or     DWORD PTR [eax-0x47],edx
  40cbc7:	lea    edx,[ebx+0xe]
  40cbca:	lods   eax,DWORD PTR ds:[esi]
  40cbcb:	sti    
  40cbcc:	mov    dl,0xaf
  40cbce:	or     ecx,DWORD PTR [ebp-0x6d]
  40cbd1:	push   edx
  40cbd2:	mov    esi,0xeaf909f5
  40cbd7:	adc    eax,0x388b4608
  40cbdc:	and    cl,BYTE PTR [ebx]
  40cbde:	push   esi
  40cbdf:	rol    ebp,0xaa
  40cbe2:	sub    DWORD PTR [eax+0x4c],esp
  40cbe5:	les    ecx,FWORD PTR [ebx-0x7b5fce2]
  40cbeb:	in     eax,dx
  40cbec:	cmp    eax,0x31927b89
  40cbf1:	mov    esp,0x513df109
  40cbf6:	mov    eax,0x5128d6ea
  40cbfb:	and    al,0x74
  40cbfd:	test   BYTE PTR [esi+0x3e],bh
  40cc00:	lea    edx,[edx-0x31e41402]
  40cc06:	(bad)  
  40cc07:	and    DWORD PTR [edx-0x381f82f3],esp
  40cc0d:	sbb    eax,0x7fb155d2
  40cc12:	pusha  
  40cc13:	fisttp QWORD PTR [edi+ebx*2]
  40cc16:	sub    esp,esp
  40cc18:	std    
  40cc19:	and    DWORD PTR [esi-0x6fc6e3ba],eax
  40cc1f:	out    dx,al
  40cc20:	ret    0x45e4
  40cc23:	and    dh,al
  40cc25:	frstor [ebx+0x42571837]
  40cc2b:	mov    eax,DWORD PTR [edx]
  40cc2d:	pop    es
  40cc2e:	outs   dx,DWORD PTR ds:[esi]
  40cc2f:	das    
  40cc30:	cmp    al,0xd5
  40cc32:	jae    0x40cc00
  40cc34:	adc    DWORD PTR [ebx],0xb
  40cc37:	mov    ebx,0xe23b9a33
  40cc3c:	(bad)  
  40cc3e:	mov    BYTE PTR [esi+0x2e],ah
  40cc41:	out    0xd0,al
  40cc43:	stos   BYTE PTR es:[edi],al
  40cc44:	xor    dl,BYTE PTR [edx+0x32ba0270]
  40cc4a:	arpl   WORD PTR [ebp-0x7b49969c],dx
  40cc50:	clc    
  40cc51:	mov    esi,0x731e237
  40cc56:	inc    edx
  40cc57:	out    dx,al
  40cc58:	xor    al,0x95
  40cc5a:	ss inc ecx
  40cc5c:	pop    edi
  40cc5d:	mov    ah,0x8f
  40cc5f:	sub    al,0x1a
  40cc61:	xor    dl,BYTE PTR [ecx+0x126075a0]
  40cc67:	jne    0x40cbf7
  40cc69:	mov    BYTE PTR [ecx-0x7e],0xf9
  40cc6d:	mov    al,ds:0x49c27751
  40cc72:	outs   dx,DWORD PTR ds:[esi]
  40cc73:	iret   
  40cc74:	cwde   
  40cc75:	xchg   esi,eax
  40cc76:	dec    edi
  40cc77:	inc    ebx
  40cc78:	mov    esp,0x9991bbdc
  40cc7d:	rcl    BYTE PTR [esi],0xe0
  40cc80:	ret    0x8d42
  40cc83:	xchg   edi,eax
  40cc84:	or     esi,DWORD PTR [esi]
  40cc86:	xchg   DWORD PTR [edi-0x56],ecx
  40cc89:	(bad)  
  40cc8a:	shr    BYTE PTR [eax],0x0
  40cc8d:	call   0x4dc3:0x96765ec9
  40cc94:	imul   ebp,esi,0x2c8fbee8
  40cc9a:	mov    ecx,fs
  40cc9c:	ret    0x4163
  40cc9f:	jbe    0x40cc6d
  40cca1:	sub    eax,0xe5f03c96
  40cca6:	aas    
  40cca7:	test   eax,0xf3808966
  40ccac:	call   0x7492:0x16f64e68
  40ccb3:	imul   edi,DWORD PTR [ecx],0xad18e89b
  40ccb9:	ficomp WORD PTR [ebx]
  40ccbb:	jbe    0x40ccb0
  40ccbd:	mul    edx
  40ccbf:	hlt    
  40ccc0:	cli    
  40ccc1:	mov    ?,edi
  40ccc3:	inc    eax
  40ccc4:	jae    0x40ccb5
  40ccc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccc7:	xchg   edx,eax
  40ccc8:	rcr    BYTE PTR [ecx-0x5201e529],cl
  40ccce:	inc    ebp
  40cccf:	jne    0x40cd50
  40ccd1:	mov    esp,DWORD PTR [ebx-0x24f0e9f1]
  40ccd7:	mov    edx,cs
  40ccd9:	(bad)  
  40ccda:	cmp    ecx,DWORD PTR [edx+0x5b206184]
  40cce0:	lods   al,BYTE PTR ds:[esi]
  40cce1:	jnp    0x40cc81
  40cce3:	sti    
  40cce4:	fcmovbe st,st(2)
  40cce6:	adc    esp,DWORD PTR [ecx+0x26e4b958]
  40ccec:	dec    ebp
  40cced:	(bad)
  40ccf1:	shr    BYTE PTR [edi+0x6e],1
  40ccf4:	pop    ss
  40ccf5:	cs stos BYTE PTR es:[edi],al
  40ccf7:	or     BYTE PTR [edi+0x6b],bh
  40ccfa:	(bad)  
  40ccfb:	mov    eax,ds:0xa9bf96b2
  40cd00:	jmp    0x40cd3e
  40cd02:	(bad)  
  40cd04:	in     al,0xb8
  40cd06:	add    bl,BYTE PTR [esi-0x4124c653]
  40cd0c:	sub    BYTE PTR [esi],cl
  40cd0e:	ss fwait
  40cd10:	sub    BYTE PTR [ebx+esi*4-0x2cca9379],cl
  40cd17:	pop    edx
  40cd18:	aad    0x53
  40cd1a:	cwde   
  40cd1b:	pushf  
  40cd1c:	outs   dx,DWORD PTR ds:[esi]
  40cd1d:	inc    ebp
  40cd1e:	and    DWORD PTR [ecx+0x53598932],edi
  40cd24:	lods   al,BYTE PTR ds:[esi]
  40cd25:	mov    al,ds:0x4dd70006
  40cd2a:	cld    
  40cd2b:	das    
  40cd2c:	push   ss
  40cd2d:	sub    bl,BYTE PTR [eax-0x69]
  40cd30:	out    dx,eax
  40cd31:	jae    0x40cd26
  40cd33:	es cmc 
  40cd35:	pop    edi
  40cd36:	lods   eax,DWORD PTR ds:[esi]
  40cd37:	lea    ecx,[edi+0x33]
  40cd3a:	fldenv [ecx-0x8]
  40cd3d:	into   
  40cd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd3f:	(bad)  
  40cd42:	add    DWORD PTR [edi+ebx*2+0x0],eax
  40cd46:	jnp    0x40cdb1
  40cd48:	sub    BYTE PTR [edi-0x25],dl
  40cd4b:	mov    dl,0x52
  40cd4d:	mov    WORD PTR [edx-0x4e65770d],?
  40cd53:	adc    dh,BYTE PTR [edx]
  40cd55:	pop    es
  40cd56:	ud0    esi,DWORD PTR [eax-0x4b]
  40cd5a:	ds push edi
  40cd5c:	pop    es
  40cd5d:	add    ch,BYTE PTR [ecx-0x4b]
  40cd60:	jo     0x40cdae
  40cd62:	jle    0x40cdcb
  40cd64:	stos   DWORD PTR es:[edi],eax
  40cd65:	outs   dx,DWORD PTR ds:[esi]
  40cd66:	pop    esi
  40cd67:	inc    ecx
  40cd68:	(bad)  
  40cd69:	mov    bl,0x92
  40cd6b:	sub    al,0x4c
  40cd6d:	xchg   BYTE PTR [ecx-0x3a],dl
  40cd70:	xor    eax,0x3888ff86
  40cd75:	jo     0x40cdbe
  40cd77:	popa   
  40cd78:	cmp    al,BYTE PTR [ebx+eiz*8-0xc7d1820]
  40cd7f:	pop    es
  40cd80:	mov    dl,dh
  40cd82:	xor    esi,esp
  40cd84:	jmp    0xc1d7:0x40697ea0
  40cd8b:	scas   al,BYTE PTR es:[edi]
  40cd8c:	lock dec ebp
  40cd8e:	xor    DWORD PTR [edx-0x49],ecx
  40cd91:	mov    fs,WORD PTR [bp+si+0x30]
  40cd95:	sar    DWORD PTR [eax-0x2471f5e8],1
  40cd9b:	outs   dx,DWORD PTR ds:[esi]
  40cd9c:	pusha  
  40cd9d:	nop
  40cd9e:	lods   al,BYTE PTR ds:[esi]
  40cd9f:	dec    eax
  40cda0:	push   0x2b667ee7
  40cda5:	mov    bh,0xea
  40cda7:	ret    
  40cda8:	imul   ebx,DWORD PTR [ecx+0x7473a928],0xb0121d07
  40cdb2:	bound  esi,QWORD PTR [ebp-0x24c78abd]
  40cdb8:	dec    eax
  40cdb9:	sub    edx,esi
  40cdbb:	test   ax,0x344b
  40cdbf:	ja     0x40cd8e
  40cdc1:	aam    0x4c
  40cdc3:	fdivp  st(2),st
  40cdc5:	aas    
  40cdc6:	add    al,0x97
  40cdc8:	test   al,0x95
  40cdca:	inc    edx
  40cdcb:	pop    ecx
  40cdcc:	test   eax,0xee5e62f3
  40cdd1:	mov    DWORD PTR [edi+edi*2],0x12a70e8d
  40cdd8:	push   edx
  40cdd9:	or     DWORD PTR [edx],ebx
  40cddb:	xor    esp,DWORD PTR [eax+0x1fc3795f]
  40cde1:	sub    dh,BYTE PTR [ebx-0x47]
  40cde4:	cmp    esi,DWORD PTR [edi-0x25ab88e3]
  40cdea:	test   BYTE PTR [ebp-0x6d],al
  40cded:	xchg   esi,eax
  40cdee:	out    dx,eax
  40cdef:	call   0x8cd6fb4f
  40cdf4:	sub    al,0x1f
  40cdf6:	dec    eax
  40cdf7:	mov    ebp,0x350f59cf
  40cdfc:	push   cs
  40cdfd:	adc    al,0xfe
  40cdff:	jns    0x40ce08
  40ce01:	adc    eax,DWORD PTR [ecx-0xe3a6829]
  40ce07:	or     BYTE PTR [esi],al
  40ce09:	mov    eax,0x4eec749
  40ce0e:	mov    WORD PTR [ebx],ss
  40ce10:	gs adc eax,0x6466a73d
  40ce16:	jle    0x40ce70
  40ce18:	jne    0x40cda8
  40ce1a:	dec    edx
  40ce1b:	shl    BYTE PTR [edi],0x60
  40ce1e:	xor    bl,dh
  40ce20:	hlt    
  40ce21:	loope  0x40ce53
  40ce23:	dec    ecx
  40ce24:	fwait
  40ce25:	push   cs
  40ce26:	test   BYTE PTR [edi+ebp*4+0x233669ed],bl
  40ce2d:	loopne 0x40ce12
  40ce2f:	or     DWORD PTR cs:[esi-0x77bdac11],esp
  40ce36:	xchg   edx,eax
  40ce37:	lock or al,BYTE PTR [eax+0x40674d79]
  40ce3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce3f:	jle    0x40cdef
  40ce41:	retf   
  40ce42:	mov    ds:0xd2291c7c,al
  40ce47:	int3   
  40ce48:	repnz test eax,0x915c0c0
  40ce4e:	addr16 jl 0x40ce78
  40ce51:	iret   
  40ce52:	(bad)  
  40ce53:	push   edi
  40ce54:	das    
  40ce55:	mov    esi,0x185e2d79
  40ce5a:	dec    edi
  40ce5b:	mov    ecx,gs
  40ce5d:	pop    ebx
  40ce5e:	mov    DWORD PTR [ebx],ebx
  40ce60:	adc    al,bl
  40ce62:	and    bh,dl
  40ce64:	and    ecx,DWORD PTR [eax]
  40ce66:	adc    eax,DWORD PTR [bx+si]
  40ce69:	cmp    DWORD PTR [esp+ebp*2-0x30dfc3b],0xffffffa5
  40ce71:	repnz sti 
  40ce73:	jo     0x40cee6
  40ce75:	scas   al,BYTE PTR es:[edi]
  40ce76:	xchg   ecx,eax
  40ce77:	mov    bl,0xa8
  40ce79:	pop    esi
  40ce7a:	out    dx,eax
  40ce7b:	push   0x3a
  40ce7d:	(bad)  
  40ce7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce7f:	and    esi,ebx
  40ce81:	(bad)  
  40ce82:	push   ebx
  40ce83:	aam    0x51
  40ce85:	jge    0x40cef5
  40ce87:	and    edi,ecx
  40ce89:	test   BYTE PTR [edi+0x1a],dh
  40ce8c:	ins    DWORD PTR es:[edi],dx
  40ce8d:	retf   0xee81
  40ce90:	mov    DWORD PTR [esp+eax*2+0x44aa25a5],ecx
  40ce97:	outs   dx,DWORD PTR ds:[esi]
  40ce98:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40ce9a:	sub    DWORD PTR [ebx+0x7dcea851],ebx
  40cea0:	inc    edi
  40cea1:	jbe    0x40cee3
  40cea3:	aaa    
  40cea4:	pop    ebp
  40cea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea6:	jae    0x40ceff
  40cea8:	gs test bl,dl
  40ceab:	cmp    ebp,DWORD PTR [eax+0xcc1a6b0]
  40ceb1:	frstor [ecx+0x12]
  40ceb4:	jnp    0x40ce45
  40ceb6:	aas    
  40ceb7:	aaa    
  40ceb8:	cmp    esi,DWORD PTR [edx+0x3e]
  40cebb:	pop    ebx
  40cebc:	xor    ebp,esi
  40cebe:	ja     0x40cf08
  40cec0:	fcomp  QWORD PTR [eax+0x5b]
  40cec3:	sub    ecx,DWORD PTR [ebx-0x64353b72]
  40cec9:	out    dx,al
  40ceca:	arpl   dx,ax
  40cecc:	pusha  
  40cecd:	retf   
  40cece:	jp     0x40cede
  40ced0:	xchg   edi,eax
  40ced1:	jp     0x40ce5b
  40ced3:	pop    ebp
  40ced4:	xchg   esp,eax
  40ced5:	dec    ebp
  40ced6:	ja     0x40cebe
  40ced8:	aam    0x1c
  40ceda:	fcmovnu st,st(7)
  40cedc:	add    BYTE PTR [ebx+0x1c],dh
  40cedf:	ins    DWORD PTR es:[edi],dx
  40cee0:	xchg   edi,eax
  40cee1:	int3   
  40cee2:	jge    0x40cea6
  40cee4:	inc    esp
  40cee5:	push   ds
  40cee6:	je     0x40cf39
  40cee8:	sub    ch,BYTE PTR [eax+ecx*2+0x6c7517bf]
  40ceef:	aas    
  40cef0:	mov    ebp,0xd4b6c6d5
  40cef5:	and    eax,0xdbff675d
  40cefa:	sub    edx,ebx
  40cefc:	enter  0x5910,0x87
  40cf00:	pop    ds
  40cf01:	addr16 test eax,0xe7a90a65
  40cf07:	outs   dx,BYTE PTR ds:[esi]
  40cf08:	pusha  
  40cf09:	pop    es
  40cf0a:	push   ebp
  40cf0b:	ss mov ch,0x49
  40cf0e:	jmp    0xac232ac9
  40cf13:	dec    edi
  40cf14:	ins    BYTE PTR es:[edi],dx
  40cf15:	and    BYTE PTR [esi],0x33
  40cf18:	sub    DWORD PTR [ebp+0x56213967],eax
  40cf1e:	cmp    eax,0xaba06f43
  40cf23:	shl    DWORD PTR [ebx],cl
  40cf25:	inc    ebx
  40cf26:	sub    cl,dh
  40cf28:	mov    es:0xd4a5004c,al
  40cf2e:	je     0x40cf6e
  40cf30:	mov    edx,0x6325eb8d
  40cf35:	ds sbb eax,0x10bcebec
  40cf3b:	mov    bl,0x32
  40cf3d:	adc    BYTE PTR [eax],0x88
  40cf40:	lds    esp,FWORD PTR [edx-0x43]
  40cf43:	lock scas eax,DWORD PTR es:[edi]
  40cf45:	scas   eax,DWORD PTR es:[edi]
  40cf46:	int3   
  40cf47:	adc    esp,DWORD PTR [esi]
  40cf49:	jecxz  0x40cf61
  40cf4b:	jbe    0x40cf27
  40cf4d:	das    
  40cf4e:	test   BYTE PTR [ebx-0x59996272],bh
  40cf54:	ins    DWORD PTR es:[edi],dx
  40cf55:	push   ds
  40cf56:	mov    ecx,0xbc4b307b
  40cf5b:	jnp    0x40cfaf
  40cf5d:	adc    DWORD PTR [eax+0x24],ebx
  40cf60:	mov    dh,0xf3
  40cf62:	mov    al,ds:0xb30b4f0b
  40cf67:	dec    edi
  40cf68:	push   esp
  40cf69:	mov    ebp,0x6e5cb3a8
  40cf6e:	lds    esi,FWORD PTR [ebp+0x16e00e5a]
  40cf74:	pop    ss
  40cf75:	dec    edi
  40cf76:	cli    
  40cf77:	addr16 mov edx,0x572bc62b
  40cf7d:	sbb    BYTE PTR [ecx-0x2c8611d5],ah
  40cf83:	shl    BYTE PTR [ecx+0xff73691],1
  40cf89:	mov    ch,0xd3
  40cf8b:	in     al,0xa7
  40cf8d:	jmp    0x40cfcc
  40cf8f:	icebp  
  40cf90:	daa    
  40cf91:	add    edx,edi
  40cf93:	inc    edx
  40cf94:	mov    ds:0x91f94d3a,eax
  40cf99:	xor    eax,0x1038db7c
  40cf9e:	push   es
  40cf9f:	pop    ecx
  40cfa0:	xor    ebp,DWORD PTR [esi]
  40cfa2:	xchg   BYTE PTR [ecx+ebp*4],ah
  40cfa5:	jno    0x40cfb3
  40cfa7:	jmp    DWORD PTR [ebp+0x7ca76c20]
  40cfad:	jne    0x40cf4b
  40cfaf:	or     eax,0x8c4aaecf
  40cfb4:	pop    esi
  40cfb5:	fstp   st(4)
  40cfb7:	fsubr  DWORD PTR [esi+ebp*4]
  40cfba:	xor    esi,DWORD PTR [esi-0x1f182943]
  40cfc0:	and    edx,DWORD PTR [edi+0x30]
  40cfc3:	mov    esp,0x146d8b69
  40cfc8:	cdq    
  40cfc9:	xlat   BYTE PTR ds:[ebx]
  40cfca:	inc    DWORD PTR [ebx-0xb]
  40cfcd:	dec    esp
  40cfce:	inc    ebp
  40cfcf:	push   es
  40cfd0:	in     eax,0x4
  40cfd2:	jmp    0xa5a3a09f
  40cfd7:	fwait
  40cfd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfd9:	or     DWORD PTR [edx],ebp
  40cfdb:	xchg   edi,eax
  40cfdc:	stos   DWORD PTR es:[edi],eax
  40cfdd:	push   ebx
  40cfde:	sahf   
  40cfdf:	std    
  40cfe0:	pop    ss
  40cfe1:	mov    dh,0x1f
  40cfe3:	xor    eax,DWORD PTR [esi]
  40cfe5:	aas    
  40cfe6:	add    edx,DWORD PTR ds:[eax]
  40cfe9:	in     al,0xbc
  40cfeb:	retf   
  40cfec:	sahf   
  40cfed:	retf   0xf921
  40cff0:	jecxz  0x40cfe7
  40cff2:	pop    ebx
  40cff3:	xor    eax,0x19d1382a
  40cff8:	mov    eax,ds:0xbda866bf
  40cffd:	sar    BYTE PTR ds:0xb7951732,0xce
  40d004:	mov    dh,0x36
  40d006:	in     al,0x70
  40d008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d009:	inc    esp
  40d00a:	stos   DWORD PTR es:[edi],eax
  40d00b:	dec    edi
  40d00c:	retf   0xb5c9
  40d00f:	cmp    al,0x32
  40d011:	mov    bh,0x36
  40d013:	mov    ebx,0xb3cd2d41
  40d018:	aaa    
  40d019:	shl    BYTE PTR [ecx+0x1b],cl
  40d01c:	pop    ds
  40d01d:	imul   edi,DWORD PTR [ebp+ebx*8+0x7b],0xfffffffc
  40d022:	loope  0x40cfa6
  40d024:	test   al,0x5
  40d026:	stc    
  40d027:	xor    DWORD PTR [eax],edx
  40d029:	clc    
  40d02a:	jle    0x40d065
  40d02c:	push   ebp
  40d02d:	mov    bl,BYTE PTR [esi]
  40d02f:	jb     0x40cfe7
  40d031:	inc    esp
  40d032:	repnz in al,dx
  40d034:	mov    dh,0xb2
  40d036:	jno    0x40d029
  40d038:	test   DWORD PTR [esi*1-0x60c7a50],ebp
  40d03f:	outs   dx,BYTE PTR ds:[esi]
  40d040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d041:	nop
  40d042:	(bad)  
  40d043:	xchg   edx,eax
  40d044:	stos   DWORD PTR es:[edi],eax
  40d045:	adc    eax,0xca0d401
  40d04a:	sbb    al,0xdb
  40d04c:	pop    esi
  40d04d:	jno    0x40cfdb
  40d04f:	jb     0x40cfdd
  40d051:	aam    0xb7
  40d053:	in     eax,0x33
  40d055:	ins    DWORD PTR es:[edi],dx
  40d056:	cmc    
  40d057:	push   cs
  40d058:	scas   al,BYTE PTR es:[edi]
  40d059:	pop    eax
  40d05a:	das    
  40d05b:	mov    edx,0x2a2cc866
  40d060:	mov    edi,cs
  40d062:	pop    esp
  40d063:	jbe    0x40d065
  40d065:	inc    esp
  40d066:	lahf   
  40d067:	push   esp
  40d068:	cmp    BYTE PTR [ecx+ebp*4+0x34],dh
  40d06c:	fwait
  40d06d:	mov    fs,eax
  40d06f:	xchg   edi,eax
  40d070:	mov    cl,0x20
  40d072:	inc    edi
  40d073:	mov    ebp,esi
  40d075:	fcom   QWORD PTR [esi]
  40d077:	fisub  DWORD PTR [ebx*4-0x4be05b7e]
  40d07e:	rol    edi,0x62
  40d081:	cmp    eax,0x5c912ade
  40d086:	lods   eax,DWORD PTR ds:[esi]
  40d087:	addr16 pop eax
  40d089:	sbb    bh,BYTE PTR [esi]
  40d08b:	test   al,0x43
  40d08d:	and    ebx,DWORD PTR [eax]
  40d08f:	into   
  40d090:	ja     0x40d03a
  40d092:	orps   xmm1,XMMWORD PTR [edi+0x68]
  40d096:	les    esi,FWORD PTR [edi+0x66d83dc3]
  40d09c:	jnp    0x40d11d
  40d09e:	test   dh,ah
  40d0a0:	pop    ss
  40d0a1:	loop   0x40d0ce
  40d0a3:	(bad)
  40d0a6:	push   ss
  40d0a7:	addr16 pop ebp
  40d0a9:	in     eax,dx
  40d0aa:	cs jbe 0x40d059
  40d0ad:	xor    eax,0x745af03d
  40d0b2:	sub    DWORD PTR [edi+0x1c374129],edi
  40d0b8:	loop   0x40d137
  40d0ba:	dec    eax
  40d0bb:	and    edx,ebp
  40d0bd:	icebp  
  40d0be:	and    eax,0x921e413c
  40d0c3:	push   esp
  40d0c4:	sub    ah,BYTE PTR [ebx-0x4f]
  40d0c7:	aam    0xf6
  40d0c9:	out    0x12,al
  40d0cb:	dec    esi
  40d0cc:	mov    ecx,eax
  40d0ce:	adc    al,BYTE PTR [edi]
  40d0d0:	nop
  40d0d1:	mov    ebx,0x1e684c9c
  40d0d6:	cmc    
  40d0d7:	pop    ecx
  40d0d8:	gs mov edi,0x20ab9f5
  40d0de:	dec    ecx
  40d0df:	clc    
  40d0e0:	out    0xf5,al
  40d0e2:	dec    esp
  40d0e3:	mov    ds:0x4b92cc19,eax
  40d0e8:	xor    BYTE PTR [ebx],al
  40d0ea:	stos   BYTE PTR es:[edi],al
  40d0eb:	inc    edx
  40d0ec:	sbb    al,0xf2
  40d0ee:	pop    esi
  40d0ef:	lods   eax,DWORD PTR ds:[esi]
  40d0f0:	dec    esi
  40d0f1:	inc    ebx
  40d0f2:	push   ds
  40d0f3:	jns    0x40d0e5
  40d0f5:	jns    0x40d145
  40d0f7:	mov    ds:0x6645408,al
  40d0fc:	mov    al,ds:0xa4f2532b
  40d101:	sbb    BYTE PTR [edi],0x9f
  40d104:	sub    eax,0x6fdf1c69
  40d109:	dec    edi
  40d10a:	sbb    al,0x41
  40d10c:	mov    ebp,0x8ca4fde7
  40d111:	out    0x23,al
  40d113:	add    ch,BYTE PTR [edx+0x73]
  40d116:	sbb    eax,DWORD PTR [eiz*4-0x5a5fdf15]
  40d11d:	cdq    
  40d11e:	dec    ebx
  40d11f:	cmc    
  40d120:	outs   dx,BYTE PTR ds:[esi]
  40d121:	stc    
  40d122:	and    eax,0x4d512b8c
  40d127:	pop    ecx
  40d128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d129:	rcl    BYTE PTR [edx],0x74
  40d12c:	mov    BYTE PTR [esi],ch
  40d12e:	mov    fs,ebp
  40d130:	nop
  40d131:	inc    ebx
  40d132:	repz mov eax,ecx
  40d135:	in     al,dx
  40d136:	dec    ebx
  40d137:	retf   0x46c5
  40d13a:	stos   DWORD PTR es:[edi],eax
  40d13b:	push   edx
  40d13c:	pop    edx
  40d13d:	cmp    BYTE PTR [ebx+0x4d],dl
  40d140:	sbb    BYTE PTR [ecx+0x43],dh
  40d143:	xchg   edx,eax
  40d144:	test   al,0xf5
  40d146:	inc    ecx
  40d147:	shr    edx,cl
  40d149:	inc    esi
  40d14a:	dec    esi
  40d14b:	push   es
  40d14c:	hlt    
  40d14d:	inc    eax
  40d14e:	cmc    
  40d14f:	pop    es
  40d150:	scas   eax,DWORD PTR es:[di]
  40d152:	mov    gs,WORD PTR [esi-0x66]
  40d155:	into   
  40d156:	xchg   ecx,eax
  40d157:	xchg   BYTE PTR [eax],ch
  40d159:	xor    bh,BYTE PTR [esi]
  40d15b:	inc    esp
  40d15c:	push   esp
  40d15d:	sub    ebp,DWORD PTR [edx-0x7]
  40d160:	xor    BYTE PTR [eax-0x7d],al
  40d163:	inc    ebp
  40d164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d165:	fs xchg edx,eax
  40d167:	mov    cl,0xa4
  40d169:	dec    esp
  40d16a:	mov    dl,0xcd
  40d16c:	out    dx,eax
  40d16d:	and    bl,dh
  40d16f:	or     eax,0x7a6a7b8
  40d174:	jbe    0x40d1c5
  40d176:	dec    esi
  40d177:	lahf   
  40d178:	adc    DWORD PTR [ecx-0x6e2ce2a2],edx
  40d17e:	aad    0x9f
  40d180:	loop   0x40d153
  40d182:	mov    DWORD PTR [eax+0x3e55274a],0x54a14f4c
  40d18c:	gs add eax,0xe5e503b6
  40d192:	retf   0x6614
  40d195:	pusha  
  40d196:	repnz add al,0xef
  40d199:	jns    0x40d1ea
  40d19b:	lock adc al,0xd6
  40d19e:	jle    0x40d18b
  40d1a0:	xchg   ecx,eax
  40d1a1:	or     eax,0xc0eaae0
  40d1a6:	pushaw 
  40d1a8:	sbb    ecx,DWORD PTR [ebx-0x54]
  40d1ab:	js     0x40d156
  40d1ad:	and    DWORD PTR [ebx+0x1cf7540],ebp
  40d1b3:	fs push ds
  40d1b5:	je     0x40d13a
  40d1b7:	fst    QWORD PTR [ebx]
  40d1b9:	into   
  40d1ba:	test   BYTE PTR [edi+0x5c],dh
  40d1bd:	inc    ebp
  40d1be:	int    0x59
  40d1c0:	and    BYTE PTR [ebx-0x14412920],0x5b
  40d1c7:	inc    ebp
  40d1c8:	fucomi st,st(6)
  40d1ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1cc:	push   0xad441e49
  40d1d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1d2:	popf   
  40d1d3:	cmp    al,0xe8
  40d1d5:	fidivr DWORD PTR ds:0xc5a40261
  40d1db:	and    eax,0x1e96507b
  40d1e0:	pop    edi
  40d1e1:	lds    esi,FWORD PTR [eax-0x41]
  40d1e4:	mov    dl,0xe
  40d1e6:	jbe    0x40d183
  40d1e8:	stos   DWORD PTR es:[edi],eax
  40d1e9:	and    dl,BYTE PTR [eax-0x53]
  40d1ec:	cdq    
  40d1ed:	dec    ebp
  40d1ee:	loop   0x40d20a
  40d1f0:	in     al,0x71
  40d1f2:	sub    ch,BYTE PTR [ecx+0x4b1cf7be]
  40d1f8:	in     eax,dx
  40d1f9:	imul   ebx,DWORD PTR [edi],0xffffff96
  40d1fc:	xor    dl,BYTE PTR [edi-0x1e]
  40d1ff:	or     al,0x9b
  40d201:	mov    al,0x37
  40d203:	mov    bh,0x37
  40d205:	mov    bh,0x5
  40d207:	mov    ebp,0x1b29fdf0
  40d20c:	jbe    0x40d27b
  40d20e:	xor    eax,0x887e6a3c
  40d213:	daa    
  40d214:	cld    
  40d215:	dec    eax
  40d216:	out    dx,ax
  40d218:	fstp   TBYTE PTR [ebp+0x6906168c]
  40d21e:	or     al,0x11
  40d220:	ins    BYTE PTR es:[edi],dx
  40d221:	pop    esp
  40d222:	push   cs
  40d223:	daa    
  40d224:	sbb    edi,DWORD PTR [edx-0x11867bea]
  40d22a:	jb     0x40d1fb
  40d22c:	cdq    
  40d22d:	das    
  40d22e:	push   edx
  40d22f:	xlat   BYTE PTR ds:[ebx]
  40d230:	jbe    0x40d1db
  40d232:	mov    ds:0x8e055887,eax
  40d237:	sbb    al,0x6d
  40d239:	add    DWORD PTR [ecx],0x13c17974
  40d23f:	inc    eax
  40d240:	mov    cl,0x66
  40d242:	pop    edi
  40d243:	out    dx,eax
  40d244:	ss ja  0x40d251
  40d247:	sti    
  40d248:	pop    es
  40d249:	repnz push ss
  40d24b:	(bad)
  40d24e:	mul    ah
  40d250:	fstp   QWORD PTR [ecx+0x73cec256]
  40d256:	jne    0x40d237
  40d258:	inc    ebx
  40d259:	arpl   WORD PTR [edi],cx
  40d25b:	enter  0x813b,0xfb
  40d25f:	jg     0x40d2ad
  40d261:	in     al,dx
  40d262:	mov    ebp,0x84e3bc45
  40d267:	cli    
  40d268:	mov    ah,0x89
  40d26a:	xchg   BYTE PTR [eax-0x2dc77fe],cl
  40d270:	jne    0x40d201
  40d272:	jne    0x40d290
  40d274:	(bad)  
  40d275:	int3   
  40d276:	mov    bl,0x7b
  40d278:	addr16 loope 0x40d28b
  40d27b:	sub    BYTE PTR [esi+0x45aadaaf],ah
  40d281:	mov    ?,WORD PTR [esi]
  40d283:	js     0x40d2b1
  40d285:	popf   
  40d286:	je     0x40d230
  40d288:	sub    eax,DWORD PTR [edi]
  40d28a:	outs   dx,BYTE PTR ds:[esi]
  40d28b:	(bad)  
  40d28c:	adc    ecx,DWORD PTR [edi]
  40d28e:	xchg   esi,ecx
  40d290:	pop    es
  40d291:	dec    ecx
  40d292:	mov    al,ds:0xc506342
  40d297:	test   BYTE PTR [edi-0x1e8503be],dh
  40d29d:	mov    ds,WORD PTR [ecx+ecx*2]
  40d2a0:	xchg   ecx,eax
  40d2a1:	inc    edi
  40d2a2:	rcr    DWORD PTR [ebx+esi*4-0x1f99a1d3],0xd2
  40d2aa:	or     eax,0x55dcc003
  40d2af:	lods   al,BYTE PTR ds:[esi]
  40d2b0:	aam    0x97
  40d2b2:	inc    ebp
  40d2b3:	push   esi
  40d2b4:	out    0xbf,al
  40d2b6:	jle    0x40d2ee
  40d2b8:	inc    esi
  40d2b9:	arpl   bp,ax
  40d2bb:	sbb    ecx,0x595694a5
  40d2c1:	ret    
  40d2c2:	cmp    bl,BYTE PTR [ebx]
  40d2c4:	jne    0x40d333
  40d2c6:	fmul   QWORD PTR [esi]
  40d2c8:	mov    ds:0xdac82a64,eax
  40d2cd:	inc    edi
  40d2ce:	inc    ebx
  40d2cf:	pop    ebx
  40d2d0:	adc    edi,ebp
  40d2d2:	add    DWORD PTR [ebx-0x174aa484],edi
  40d2d8:	inc    ecx
  40d2d9:	adc    dh,dh
  40d2db:	clc    
  40d2dc:	pusha  
  40d2dd:	jle    0x40d28b
  40d2df:	(bad)  
  40d2e0:	lock add eax,0x12ffde00
  40d2e6:	xchg   ebx,ebp
  40d2e8:	inc    esi
  40d2e9:	cmp    esi,DWORD PTR [edi-0x3f]
  40d2ec:	enter  0x1be4,0xbd
  40d2f0:	push   0x73
  40d2f2:	fisttp WORD PTR [esi]
  40d2f4:	mov    esp,0x93e2df1c
  40d2f9:	add    BYTE PTR [edx+0x3],0x19
  40d2fd:	lds    ecx,FWORD PTR [eax-0x6a]
  40d300:	add    al,dl
  40d302:	and    edi,DWORD PTR [edx]
  40d304:	pop    edi
  40d305:	sbb    cl,dh
  40d307:	pop    edx
  40d308:	and    eax,0xed907633
  40d30d:	ins    BYTE PTR es:[edi],dx
  40d30e:	mov    cl,0xa4
  40d310:	ret    
  40d311:	xchg   ebp,eax
  40d312:	inc    ebp
  40d313:	inc    ebx
  40d314:	in     al,0xc
  40d316:	jle    0x40d29a
  40d318:	add    al,0x41
  40d31a:	add    al,0x37
  40d31c:	inc    ebx
  40d31d:	xchg   ebx,eax
  40d31e:	inc    ebx
  40d31f:	inc    ebx
  40d320:	loop   0x40d343
  40d322:	inc    edi
  40d323:	xor    al,0xa2
  40d325:	(bad)  
  40d326:	jge    0x40d306
  40d328:	inc    eax
  40d329:	or     BYTE PTR [edi+0x67],bl
  40d32c:	cmp    DWORD PTR [edx+0x7d],ebx
  40d32f:	(bad)  
  40d330:	xchg   esi,eax
  40d331:	adc    al,0xfe
  40d333:	sub    edx,esi
  40d335:	or     DWORD PTR [ebp+0xf],esi
  40d338:	out    dx,eax
  40d339:	pop    ebx
  40d33a:	mov    bl,BYTE PTR [edx]
  40d33c:	fdiv   QWORD PTR [edi+eiz*4+0x6e47b3f2]
  40d343:	jp     0x40d3b8
  40d345:	xor    ebx,DWORD PTR [esi-0x5486cecc]
  40d34b:	lea    esi,ds:0x441bf9e9
  40d351:	pop    ds
  40d352:	rol    BYTE PTR [edx-0x61],0xb6
  40d356:	aad    0x94
  40d358:	popf   
  40d359:	inc    ecx
  40d35a:	mov    esi,0xe7bec8ff
  40d35f:	or     eax,DWORD PTR [esp+ebp*4+0x5d31d140]
  40d366:	pop    eax
  40d367:	jmp    0x40d301
  40d369:	cdq    
  40d36a:	mov    bl,0xf
  40d36c:	and    BYTE PTR [edx],0x5e
  40d36f:	sbb    DWORD PTR [eax],esp
  40d371:	mov    ebx,0x48fce8bf
  40d376:	jge    0x40d3c5
  40d378:	xchg   BYTE PTR [edi],al
  40d37a:	jb     0x40d399
  40d37c:	sbb    ah,BYTE PTR [edi-0xcec1ef7]
  40d382:	(bad)  
  40d383:	dec    edi
  40d384:	or     al,0xef
  40d386:	dec    edx
  40d387:	cmp    ebp,ebp
  40d389:	cmp    al,0x69
  40d38b:	nop
  40d38c:	gs std 
  40d38e:	mov    ch,0x87
  40d390:	dec    ebp
  40d391:	dec    ecx
  40d392:	int3   
  40d393:	xchg   edx,eax
  40d394:	fdivr  QWORD PTR [edx+0x55]
  40d397:	(bad)  
  40d398:	cmp    ebx,DWORD PTR [edi]
  40d39a:	push   eax
  40d39b:	inc    eax
  40d39c:	add    ebp,eax
  40d39e:	adc    BYTE PTR [eax-0x2d906cd7],cl
  40d3a4:	mov    dh,0x2f
  40d3a6:	or     DWORD PTR [ecx],eax
  40d3a8:	aas    
  40d3a9:	(bad)  
  40d3aa:	in     eax,dx
  40d3ab:	lahf   
  40d3ac:	xchg   ebx,eax
  40d3ad:	pop    ss
  40d3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3af:	and    BYTE PTR [ebx],bl
  40d3b1:	clc    
  40d3b2:	xor    al,BYTE PTR [edi+edi*8+0x7]
  40d3b6:	in     al,0xf4
  40d3b8:	jb     0x40d3ce
  40d3ba:	jp     0x40d3ec
  40d3bc:	retf   0xd0fc
  40d3bf:	out    0x2d,eax
  40d3c1:	mov    eax,ds:0x25da184c
  40d3c6:	adc    eax,0x205651a8
  40d3cb:	jae    0x40d34d
  40d3cd:	loope  0x40d367
  40d3cf:	inc    esi
  40d3d0:	mov    edi,0x81e1ad63
  40d3d5:	or     eax,eax
  40d3d7:	adc    al,0x71
  40d3d9:	je     0x40d3a8
  40d3db:	xchg   esi,eax
  40d3dc:	and    al,0xff
  40d3de:	(bad)  
  40d3df:	cmp    eax,0xb746aa3c
  40d3e4:	mov    ss,WORD PTR [esi+0x72815da5]
  40d3ea:	push   ebx
  40d3eb:	jo     0x40d3d1
  40d3ed:	dec    ecx
  40d3ee:	and    al,0xb8
  40d3f0:	repz jg 0x40d471
  40d3f3:	cmc    
  40d3f4:	fcmove st,st(0)
  40d3f6:	and    dh,BYTE PTR [ecx+ebx*2]
  40d3f9:	mov    eax,ds:0x3dd963e1
  40d3fe:	ret    
  40d3ff:	pop    ebx
  40d400:	ja     0x40d3a9
  40d402:	sbb    bl,BYTE PTR [ecx-0x1839f47d]
  40d408:	push   edi
  40d409:	dec    edi
  40d40a:	mov    edx,0x7c8a1e51
  40d40f:	daa    
  40d410:	push   edx
  40d411:	inc    esp
  40d412:	xchg   ebx,eax
  40d413:	div    BYTE PTR [ebp-0x5fd0d956]
  40d419:	idiv   BYTE PTR [ebp+0xd]
  40d41c:	sbb    BYTE PTR [edx-0x27b3335c],ah
  40d422:	mov    dl,0x82
  40d424:	out    0xed,al
  40d426:	je     0x40d454
  40d428:	(bad)  
  40d429:	repnz lds ebp,FWORD PTR [ebx+ebx*4]
  40d42d:	je     0x40d414
  40d42f:	sub    BYTE PTR [esi+0x5],cl
  40d432:	ret    
  40d433:	in     eax,dx
  40d434:	(bad)  
  40d436:	stos   BYTE PTR es:[edi],al
  40d437:	and    BYTE PTR [edx+ebp*2-0x2a],al
  40d43b:	aaa    
  40d43c:	test   eax,0x6506bf84
  40d441:	and    ecx,edx
  40d443:	ret    0x88be
  40d446:	mov    bl,0xd5
  40d448:	jmp    0x40d49a
  40d44a:	push   ds
  40d44b:	cld    
  40d44c:	out    0x12,eax
  40d44e:	test   BYTE PTR [esi+0x31],bl
  40d451:	and    al,0xad
  40d453:	jb     0x40d418
  40d455:	cmovg  edx,ecx
  40d458:	pop    es
  40d459:	cmp    eax,0xe56b6e8b
  40d45e:	xchg   esi,eax
  40d45f:	xor    bh,BYTE PTR [esp+ebx*1-0x40a52be5]
  40d466:	pop    es
  40d467:	std    
  40d468:	lock add BYTE PTR [ecx],ch
  40d46b:	call   0x4f72bb7c
  40d470:	add    edx,DWORD PTR [edi]
  40d472:	mov    bl,0xb6
  40d474:	adc    BYTE PTR [ecx+0x39],cl
  40d477:	and    cl,BYTE PTR [edx+0x35f9ba04]
  40d47d:	lock daa 
  40d47f:	xchg   cl,ah
  40d481:	pop    eax
  40d482:	xor    al,0x6
  40d484:	sti    
  40d485:	stos   BYTE PTR es:[edi],al
  40d486:	dec    edi
  40d487:	ficomp WORD PTR [eax+0x692fb74c]
  40d48d:	stos   BYTE PTR es:[edi],al
  40d48e:	fcomp  QWORD PTR [eax]
  40d490:	add    bh,bh
  40d492:	sub    ebp,edx
  40d494:	cmp    al,0xe8
  40d496:	dec    edi
  40d497:	xchg   edi,eax
  40d498:	xlat   BYTE PTR ds:[ebx]
  40d499:	push   ss
  40d49a:	push   esp
  40d49b:	arpl   WORD PTR [esi+ecx*2-0x25bdfe9e],dx
  40d4a2:	sbb    bl,BYTE PTR [ebx-0x60]
  40d4a5:	rcr    esp,0x65
  40d4a8:	outs   dx,DWORD PTR ds:[esi]
  40d4a9:	ja     0x40d4c5
  40d4ab:	xor    ecx,ecx
  40d4ad:	sbb    BYTE PTR [edi-0x2fc51947],dl
  40d4b3:	mov    cs,WORD PTR [esi]
  40d4b5:	fisttp WORD PTR [esi+0x40]
  40d4b8:	call   0xa5ac:0xe32633bc
  40d4bf:	lock dec ebx
  40d4c1:	cli    
  40d4c2:	adc    BYTE PTR [edx],cl
  40d4c4:	adc    al,0x44
  40d4c6:	mov    esi,DWORD PTR [edi+0x7b]
  40d4c9:	mov    bl,0xa6
  40d4cb:	xor    BYTE PTR cs:[ecx],dh
  40d4ce:	inc    esi
  40d4cf:	dec    edx
  40d4d0:	mov    ds:0x140d97a,al
  40d4d5:	loop   0x40d543
  40d4d7:	aad    0xf8
  40d4d9:	arpl   WORD PTR [eax+ebx*1-0x42],di
  40d4dd:	in     eax,0x99
  40d4df:	dec    ebp
  40d4e0:	cmp    edi,0xa3bae799
  40d4e6:	pop    ebp
  40d4e7:	xlat   BYTE PTR ds:[ebx]
  40d4e8:	push   0x49
  40d4ea:	arpl   bp,bp
  40d4ec:	push   edi
  40d4ed:	stos   BYTE PTR es:[edi],al
  40d4ee:	aad    0x32
  40d4f0:	(bad)  
  40d4f1:	lfs    ebp,FWORD PTR [eax]
  40d4f4:	gs xchg esp,eax
  40d4f6:	mov    esi,0x150cc048
  40d4fb:	je     0x40d554
  40d4fd:	into   
  40d4fe:	pop    ds
  40d4ff:	mov    ah,0x5a
  40d501:	mov    ecx,0x41c5bdf9
  40d506:	fst    QWORD PTR [edx+0x58]
  40d509:	bound  ebp,QWORD PTR [ecx+0x66]
  40d50c:	imul   esi,DWORD PTR [esi],0xa93327b7
  40d512:	mov    edx,0x5a82b25a
  40d517:	sub    al,0xf7
  40d519:	add    eax,0xef627de4
  40d51e:	sub    esi,DWORD PTR [ebp+0x34]
  40d521:	outs   dx,DWORD PTR ds:[esi]
  40d522:	sbb    bp,WORD PTR [ecx+0x4f40ec1c]
  40d529:	dec    esp
  40d52a:	pop    edx
  40d52b:	loope  0x40d4fb
  40d52d:	outs   dx,DWORD PTR ds:[esi]
  40d52e:	scas   al,BYTE PTR es:[edi]
  40d52f:	(bad)  
  40d530:	xor    eax,0x4e975a49
  40d535:	cmp    edi,DWORD PTR [esi-0xbdc0ef0]
  40d53b:	sub    bh,BYTE PTR [ebx-0x46]
  40d53e:	or     DWORD PTR [eax],esp
  40d540:	jnp    0x40d585
  40d542:	scas   al,BYTE PTR es:[edi]
  40d543:	pushf  
  40d544:	adc    DWORD PTR [ecx+edi*8-0x60],ebx
  40d548:	pop    edi
  40d549:	(bad)  
  40d54a:	cld    
  40d54b:	sub    al,0x7f
  40d54d:	lds    eax,FWORD PTR ds:0x82ba1a43
  40d553:	inc    ebx
  40d554:	sub    al,0x72
  40d556:	hlt    
  40d557:	pop    es
  40d558:	or     al,0xaf
  40d55a:	call   0x254d7091
  40d55f:	pop    eax
  40d560:	retf   0x5bbb
  40d563:	mov    ebx,DWORD PTR [edi+0x6fc219e1]
  40d569:	xchg   BYTE PTR [ebp-0x569cce1a],dl
  40d56f:	sbb    ecx,DWORD PTR ds:0xac347575
  40d575:	test   DWORD PTR [esi+0x245bda8f],edx
  40d57b:	dec    esi
  40d57c:	xor    eax,0x45c640dd
  40d581:	(bad)  
  40d582:	jns    0x40d505
  40d584:	shl    DWORD PTR [edi],1
  40d586:	jne    0x40d588
  40d588:	add    BYTE PTR [ebp+0x1511ff45],cl
  40d58e:	fwait
  40d58f:	mov    eax,ds:0x45890042
  40d594:	hlt    
  40d595:	mov    al,BYTE PTR [ebp-0x1]
  40d598:	sbb    ecx,DWORD PTR ds:0x42a173
  40d59e:	mov    ecx,DWORD PTR [ebp-0xc]
  40d5a1:	xor    al,0x7b
  40d5a3:	dec    al
  40d5a5:	add    DWORD PTR ds:0x42a147,0x42a177
  40d5af:	mov    BYTE PTR [ecx],al
  40d5b1:	dec    ecx
  40d5b2:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40d5b9:	push   ebx
  40d5ba:	mov    eax,ds:0x42a227
  40d5bf:	xor    ecx,ecx
  40d5c1:	xor    ecx,DWORD PTR ds:0x42a25f
  40d5c7:	sub    ecx,eax
  40d5c9:	sub    eax,DWORD PTR [eax+ecx*1]
  40d5cc:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  40d5d3:	and    DWORD PTR ds:0x42a1b7,0x0
  40d5dd:	jmp    0x40d5ef
  40d5e2:	mov    ecx,DWORD PTR ds:0x42a1b7
  40d5e8:	inc    ecx
  40d5e9:	mov    DWORD PTR ds:0x42a1b7,ecx
  40d5ef:	cmp    DWORD PTR ds:0x42a1b7,0x1e
  40d5f6:	jae    0x40d623
  40d5fc:	cmp    DWORD PTR ds:0x42a1b7,0x27
  40d603:	ja     0x40d623
  40d609:	jmp    0x40d61e
  40d60e:	push   0x2919
  40d613:	push   0x5f54
  40d618:	call   DWORD PTR ds:0x42a2c3
  40d61e:	jmp    0x40d5e2
  40d623:	mov    ecx,DWORD PTR [ebp-0x18]
  40d626:	xor    DWORD PTR ds:0x42a14b,ebx
  40d62c:	push   esi
  40d62d:	and    DWORD PTR ds:0x42a147,0x0
  40d637:	jmp    0x40d647
  40d63c:	mov    eax,ds:0x42a147
  40d641:	inc    eax
  40d642:	mov    ds:0x42a147,eax
  40d647:	cmp    DWORD PTR ds:0x42a147,0x19
  40d64e:	jae    0x40d679
  40d654:	cmp    DWORD PTR ds:0x42a147,0x22
  40d65b:	jbe    0x40d679
  40d661:	jmp    0x40d674
  40d666:	push   0x61d1
  40d66b:	push   DWORD PTR [ebp-0x18]
  40d66e:	call   DWORD PTR ds:0x42a2c7
  40d674:	jmp    0x40d63c
  40d679:	mov    eax,0x75108a8
  40d67e:	sub    esi,DWORD PTR ds:0x42a1ab
  40d684:	xor    ecx,eax
  40d686:	mov    esi,0x3272ef
  40d68b:	push   edi
  40d68c:	sbb    DWORD PTR ds:0x42a1cb,0x42a1c7
  40d696:	add    ecx,esi
  40d698:	mov    DWORD PTR ds:0x42a1bf,0x6562
  40d6a2:	jmp    0x40d6b2
  40d6a7:	mov    dl,BYTE PTR [ebp-0x1]
  40d6aa:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40d6b1:	inc    ecx
  40d6b2:	mov    DWORD PTR ds:0x42a1af,0x1651
  40d6bc:	cmp    ecx,0x40
  40d6bf:	jb     0x40d6a7
  40d6c5:	mov    DWORD PTR ds:0x42a19f,0x1c
  40d6cf:	cmp    DWORD PTR ds:0x42a19f,0x0
  40d6d6:	je     0x40d72f
  40d6dc:	cmp    DWORD PTR ds:0x42a19f,0x5
  40d6e3:	jb     0x40d72f
  40d6e9:	jmp    0x40d703
  40d6ee:	push   0x2a2f
  40d6f3:	push   0x42a1ab
  40d6f8:	push   0x400000
  40d6fd:	call   DWORD PTR ds:0x42a2cf
  40d703:	cmp    DWORD PTR ds:0x42a19f,0x6
  40d70a:	jne    0x40d71d
  40d710:	mov    edx,DWORD PTR ds:0x42a19f
  40d716:	dec    edx
  40d717:	mov    DWORD PTR ds:0x42a19f,edx
  40d71d:	mov    edx,DWORD PTR ds:0x42a19f
  40d723:	dec    edx
  40d724:	mov    DWORD PTR ds:0x42a19f,edx
  40d72a:	jmp    0x40d6cf
  40d72f:	mov    edx,DWORD PTR [ebp-0x18]
  40d732:	mov    DWORD PTR ds:0x42a17b,0x4b1
  40d73c:	xor    edx,eax
  40d73e:	adc    DWORD PTR ds:0x42a19b,0x42a1cf
  40d748:	add    edx,esi
  40d74a:	mov    DWORD PTR ds:0x42a1ab,0x5d5c
  40d754:	jmp    0x40fb6b
  40d759:	mov    edi,DWORD PTR [ebp+0x8]
  40d75c:	xor    DWORD PTR ds:0x42a167,0x6495
  40d766:	mov    ecx,0x8a96
  40d76b:	and    DWORD PTR ds:0x42a133,0x42a1a7
  40d775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40d77a:	sbb    DWORD PTR ds:0x42a17b,0x2976
  40d784:	mov    edi,0x3b59
  40d789:	xor    DWORD PTR ds:0x42a143,0x42a187
  40d793:	add    cx,di
  40d796:	movzx  ecx,cx
  40d799:	sbb    DWORD PTR ds:0x42a193,0x4902
  40d7a3:	mov    DWORD PTR [ebp-0xc],ecx
  40d7a6:	xor    DWORD PTR ds:0x42a167,edx
  40d7ac:	jmp    0x40fb31
  40d7b1:	popa   
  40d7b2:	sbb    DWORD PTR [edi],0x5b849f06
  40d7b8:	test   DWORD PTR [esp+eiz*4],ebx
  40d7bb:	push   esp
  40d7bc:	pop    esi
  40d7bd:	outs   dx,DWORD PTR ds:[esi]
  40d7be:	fnstcw WORD PTR [eax]
  40d7c0:	sbb    dh,cl
  40d7c2:	retf   0x7a7a
  40d7c5:	adc    bl,BYTE PTR [edi+0x7a]
  40d7c8:	jp     0x40d7b3
  40d7ca:	push   edi
  40d7cb:	daa    
  40d7cc:	inc    esp
  40d7cd:	loop   0x40d783
  40d7cf:	add    BYTE PTR [edx+esi*4-0x1f0fee2d],0xcb
  40d7d7:	pop    esi
  40d7d8:	std    
  40d7d9:	adc    BYTE PTR [edx+edi*8-0x3b],al
  40d7dd:	mov    dl,0xa
  40d7df:	xor    al,0xe6
  40d7e1:	jmp    0x88f0:0xc4f75f22
  40d7e8:	mov    al,ds:0xb440282f
  40d7ed:	adc    eax,0x31bbfd5a
  40d7f2:	or     eax,0xf6b1bedf
  40d7f7:	xchg   ecx,eax
  40d7f8:	(bad)  
  40d7f9:	sub    DWORD PTR [edx+0x510e5688],ebp
  40d7ff:	or     eax,0x2cc2b6e8
  40d804:	push   eax
  40d805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d806:	mov    dl,0x51
  40d808:	xor    dh,BYTE PTR [esi+esi*8+0x7f80e215]
  40d80f:	add    dl,BYTE PTR [edi]
  40d811:	adc    eax,0x4355fa0d
  40d816:	mov    ds:0x34cbf975,eax
  40d81b:	inc    ecx
  40d81c:	shl    edi,0x98
  40d81f:	call   0x6b65dac1
  40d824:	jae    0x40d802
  40d826:	inc    ecx
  40d827:	push   eax
  40d828:	outs   dx,DWORD PTR ds:[esi]
  40d829:	sar    DWORD PTR [eax+eax*1-0x682ac0e1],cl
  40d830:	(bad)  
  40d831:	sbb    BYTE PTR [ebx],bl
  40d833:	sbb    BYTE PTR [ebx],ah
  40d835:	aad    0x9d
  40d837:	inc    DWORD PTR [esi]
  40d839:	dec    ebp
  40d83a:	jne    0x40d89e
  40d83c:	pop    ss
  40d83d:	cmp    DWORD PTR [ebx],esp
  40d83f:	shl    BYTE PTR es:[esi-0x14],1
  40d843:	xchg   esp,eax
  40d844:	jmp    FWORD PTR [esi+ebp*2+0x4c]
  40d848:	push   ss
  40d849:	loop   0x40d81c
  40d84b:	retf   0xc411
  40d84e:	add    eax,0xd702ad7e
  40d853:	xchg   esp,eax
  40d854:	sbb    BYTE PTR [edi+edx*2-0x7a],ch
  40d858:	push   edx
  40d859:	jmp    0x40d8ba
  40d85b:	sbb    eax,0x1e0ed7f7
  40d860:	fwait
  40d861:	shl    DWORD PTR [ebx-0x58fcf477],1
  40d867:	and    DWORD PTR [eax-0x518a8857],0x1334735c
  40d871:	sahf   
  40d872:	mov    eax,0x5dcdf26f
  40d877:	gs push ebp
  40d879:	pop    esp
  40d87a:	cmp    ecx,ecx
  40d87c:	sbb    al,0x1
  40d87e:	popf   
  40d87f:	inc    edi
  40d880:	xchg   DWORD PTR [eax+0x32],edx
  40d883:	in     eax,0x0
  40d885:	in     al,0x56
  40d887:	pop    es
  40d888:	fbstp  TBYTE PTR [edx+eax*1]
  40d88b:	shl    DWORD PTR [ecx],1
  40d88d:	xor    edi,DWORD PTR [ebp+0x19]
  40d890:	lods   eax,DWORD PTR ds:[esi]
  40d891:	mov    ds,WORD PTR [eax]
  40d893:	push   ss
  40d894:	xchg   DWORD PTR [esi],eax
  40d896:	jns    0x40d8cf
  40d898:	cld    
  40d899:	ret    
  40d89a:	inc    esi
  40d89b:	enter  0xf995,0x4f
  40d89f:	std    
  40d8a0:	xchg   ebx,eax
  40d8a1:	data16 jecxz 0x40d910
  40d8a4:	mov    es,WORD PTR [edx-0x65]
  40d8a7:	mov    ds:0x60343d64,al
  40d8ac:	outs   dx,DWORD PTR ds:[esi]
  40d8ad:	je     0x40d88b
  40d8af:	jno    0x40d878
  40d8b1:	pop    ds
  40d8b2:	sbb    BYTE PTR [esi+ecx*1],dh
  40d8b5:	pop    edx
  40d8b6:	loopne 0x40d8f2
  40d8b8:	jae    0x40d879
  40d8ba:	daa    
  40d8bb:	sti    
  40d8bc:	sub    DWORD PTR [esi-0x3c],edi
  40d8bf:	jge    0x40d918
  40d8c1:	push   cs
  40d8c2:	scas   al,BYTE PTR es:[edi]
  40d8c3:	mov    edi,0x6fe43911
  40d8c8:	daa    
  40d8c9:	rcl    BYTE PTR [ecx+0x77],1
  40d8cc:	and    ah,dh
  40d8ce:	fdivr  DWORD PTR [esi+ecx*8]
  40d8d2:	jo     0x40d91a
  40d8d4:	push   esp
  40d8d5:	sbb    BYTE PTR [ebp+0x44],bl
  40d8d8:	lds    edx,FWORD PTR [eax+ebx*8-0x4f4f0fdc]
  40d8df:	push   esp
  40d8e0:	sbb    dh,ch
  40d8e2:	push   0x7c23bec1
  40d8e7:	and    ah,dl
  40d8e9:	and    edx,eax
  40d8eb:	test   al,0x9c
  40d8ed:	cmps   DWORD PTR gs:[si],DWORD PTR es:[di]
  40d8f0:	push   ecx
  40d8f1:	cli    
  40d8f2:	call   0x15ce:0x6c6570d9
  40d8f9:	popa   
  40d8fa:	ret    
  40d8fb:	pop    ebp
  40d8fc:	cli    
  40d8fd:	test   al,0x2d
  40d8ff:	dec    edx
  40d900:	inc    ebx
  40d901:	jmp    0x7664:0xcbcc8005
  40d908:	inc    esp
  40d909:	cmp    ebp,DWORD PTR [eax]
  40d90b:	retf   0x45fa
  40d90e:	pop    eax
  40d90f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d910:	mov    al,0xe
  40d912:	jl     0x40d928
  40d914:	outs   dx,DWORD PTR ds:[esi]
  40d915:	test   WORD PTR [ebx],cx
  40d918:	pop    eax
  40d919:	mov    ch,0x73
  40d91b:	out    0x22,eax
  40d91d:	out    0x6,eax
  40d91f:	jae    0x40d92d
  40d921:	std    
  40d922:	ss push ss
  40d924:	cmp    ch,BYTE PTR [ebp+0x2ccd2ed4]
  40d92a:	jns    0x40d93b
  40d92c:	push   ds
  40d92d:	inc    eax
  40d92e:	inc    edx
  40d92f:	pop    ebx
  40d930:	(bad)  
  40d931:	outs   dx,BYTE PTR ds:[esi]
  40d932:	fidivr WORD PTR [ecx]
  40d934:	mov    eax,ds:0xbb325efa
  40d939:	(bad)  
  40d93a:	pop    ds
  40d93b:	push   edx
  40d93c:	xchg   ecx,eax
  40d93d:	mov    bh,0x49
  40d93f:	inc    ecx
  40d940:	sub    al,0x94
  40d942:	dec    ecx
  40d943:	stos   DWORD PTR es:[edi],eax
  40d944:	fwait
  40d945:	mov    ebx,0x1c6830f5
  40d94a:	inc    edi
  40d94b:	pop    ss
  40d94c:	fwait
  40d94d:	les    edi,FWORD PTR [ebx]
  40d94f:	repnz repz out 0x38,eax
  40d953:	xchg   al,al
  40d955:	mov    al,ds:0x58d38207
  40d95a:	gs (bad) 
  40d95c:	xor    eax,0xa367e224
  40d961:	pop    esi
  40d962:	mov    bl,0xf2
  40d964:	fcom   QWORD PTR [eax-0x36]
  40d967:	or     DWORD PTR [ebx+0x6d0b7048],ebx
  40d96d:	xor    ah,BYTE PTR [esp+edx*1+0x5e2931ad]
  40d974:	shr    ch,0xdf
  40d977:	add    dl,BYTE PTR [edi+0x10adb763]
  40d97d:	popf   
  40d97e:	imul   esi,DWORD PTR [ecx+0x13bd3244],0x14e636b4
  40d988:	mov    ch,0x21
  40d98a:	in     eax,0x2a
  40d98c:	dec    esi
  40d98d:	hlt    
  40d98e:	mov    esi,0xeac209d0
  40d993:	inc    ebx
  40d994:	dec    ebp
  40d995:	push   cs
  40d996:	ins    DWORD PTR es:[edi],dx
  40d997:	adc    ebx,DWORD PTR [edx+edi*8+0x3a]
  40d99b:	repnz daa 
  40d99d:	pop    esi
  40d99e:	dec    esp
  40d99f:	fwait
  40d9a0:	push   ecx
  40d9a1:	mov    ah,0x24
  40d9a3:	sbb    BYTE PTR [ecx+0x2b],0x13
  40d9a7:	pop    es
  40d9a8:	dec    ebx
  40d9a9:	mul    BYTE PTR [edx+0x7f]
  40d9ac:	mov    WORD PTR [eax],?
  40d9ae:	push   ss
  40d9af:	pop    eax
  40d9b0:	mov    dh,0xf2
  40d9b2:	pop    edx
  40d9b3:	xchg   edx,eax
  40d9b4:	or     ebp,DWORD PTR [eax-0x2e]
  40d9b7:	push   0xfffffff4
  40d9b9:	pop    es
  40d9ba:	lock jno 0x40d9f0
  40d9bd:	xchg   edx,eax
  40d9be:	add    ch,BYTE PTR [ebx]
  40d9c0:	sbb    DWORD PTR [eax+0x40],esp
  40d9c3:	lods   al,BYTE PTR ds:[esi]
  40d9c4:	int    0xef
  40d9c6:	in     al,dx
  40d9c7:	iret   
  40d9c8:	(bad)  
  40d9c9:	jmp    0x5170:0x2dbee75b
  40d9d0:	fucom  st(5)
  40d9d2:	dec    esp
  40d9d3:	mov    dh,0x4c
  40d9d5:	(bad)  
  40d9d6:	or     eax,0xa20d9369
  40d9db:	jns    0x40da44
  40d9dd:	sub    bl,BYTE PTR [ecx]
  40d9df:	hlt    
  40d9e0:	clc    
  40d9e1:	sahf   
  40d9e2:	outs   dx,BYTE PTR ds:[esi]
  40d9e3:	jp     0x40d96d
  40d9e5:	(bad)  
  40d9e6:	retf   
  40d9e7:	dec    ecx
  40d9e8:	pop    esi
  40d9e9:	sub    eax,0xc2fb351e
  40d9ee:	xor    eax,0x4b161533
  40d9f3:	pop    esi
  40d9f4:	cmp    al,0xf9
  40d9f6:	jnp    0x40da23
  40d9f8:	adc    eax,DWORD PTR [ecx]
  40d9fa:	aaa    
  40d9fb:	pop    ss
  40d9fc:	xchg   ebx,eax
  40d9fd:	jmp    FWORD PTR [ebx-0x75]
  40da00:	jne    0x40d9ca
  40da02:	imul   ebx,DWORD PTR [edx+0x2b179ff2],0xffffffdf
  40da09:	jmp    0x7d7a:0x84bc930
  40da10:	add    eax,0xfe9d7a
  40da15:	popf   
  40da16:	dec    edx
  40da17:	aam    0x20
  40da19:	jo     0x40da68
  40da1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da1c:	arpl   bx,sp
  40da1e:	add    al,0x14
  40da20:	stos   BYTE PTR es:[edi],al
  40da21:	or     al,ch
  40da23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da24:	dec    eax
  40da25:	mov    edx,0xaf52948a
  40da2a:	sbb    ch,BYTE PTR [ebp-0x4b]
  40da2d:	movntq (bad),mm5
  40da2e:	out    0xed,eax
  40da30:	sub    BYTE PTR [esi-0x7d360de5],0x80
  40da37:	pop    eax
  40da39:	push   edx
  40da3a:	and    BYTE PTR [edx-0x4aba546d],bh
  40da40:	or     al,0xf2
  40da42:	and    BYTE PTR [esi-0xd],bl
  40da45:	mov    dh,0x52
  40da47:	dec    edx
  40da48:	jecxz  0x40da04
  40da4a:	push   ecx
  40da4b:	test   edi,ebx
  40da4d:	xchg   edi,eax
  40da4e:	push   0xffffffe6
  40da50:	xchg   edi,eax
  40da51:	pop    ss
  40da52:	mov    esp,0xa7e0dc29
  40da57:	xor    DWORD PTR [ebx*8-0x1be9a9b0],edi
  40da5e:	popf   
  40da5f:	das    
  40da60:	aas    
  40da61:	mov    ch,0x6c
  40da63:	jo     0x40da18
  40da65:	xchg   edi,eax
  40da66:	in     al,dx
  40da67:	cmc    
  40da68:	adc    BYTE PTR [ecx+0x40b90535],ch
  40da6e:	fimul  WORD PTR [ecx+eax*1]
  40da71:	xchg   ebp,eax
  40da72:	rcr    DWORD PTR [ecx+edx*1+0x7938b26f],cl
  40da79:	pop    ecx
  40da7a:	cmp    edi,DWORD PTR ds:0xf8e5f0a6
  40da80:	adc    esp,DWORD PTR [edx]
  40da82:	lahf   
  40da83:	mov    esp,0x8277c78a
  40da88:	int    0xe5
  40da8a:	pop    esi
  40da8b:	jns    0x40dad8
  40da8d:	fsub   DWORD PTR [ecx-0x41cb0e00]
  40da93:	xchg   esp,eax
  40da94:	dec    edx
  40da95:	ss stos DWORD PTR es:[edi],eax
  40da97:	(bad)  
  40da98:	pop    ss
  40da99:	sbb    ecx,DWORD PTR [edx+0x5bec5506]
  40da9f:	pop    edi
  40daa0:	imul   esp,DWORD PTR [ebx],0x886fb371
  40daa6:	add    eax,0x86bf2a8c
  40daab:	int3   
  40daac:	(bad)  
  40daad:	cmp    BYTE PTR [ebx+edx*2+0x5b4068b4],dh
  40dab4:	shr    BYTE PTR [eax],cl
  40dab6:	mov    ds:0xb8a5f727,eax
  40dabb:	jmp    0x3bae:0x87c4668e
  40dac2:	xor    eax,0x6b17bdd2
  40dac7:	sbb    ecx,esi
  40dac9:	ret    
  40daca:	std    
  40dacb:	fst    QWORD PTR [edi+0x1c]
  40dace:	sbb    eax,0xb5d66177
  40dad3:	(bad)  
  40dad4:	icebp  
  40dad5:	push   ss
  40dad6:	inc    esi
  40dad7:	(bad)  
  40dad8:	int    0xb9
  40dada:	outs   dx,DWORD PTR ds:[esi]
  40dadb:	cs out 0xb,eax
  40dade:	mov    bh,al
  40dae0:	imul   ecx,DWORD PTR [esi-0x2c],0xffffff88
  40dae4:	fmul   st(3),st
  40dae6:	jmp    0x40db1c
  40dae8:	out    dx,eax
  40dae9:	int3   
  40daea:	out    0xd,al
  40daec:	dec    ecx
  40daed:	icebp  
  40daee:	xor    edi,esp
  40daf0:	sbb    BYTE PTR [esi+0x2249c576],bh
  40daf6:	inc    ebp
  40daf7:	jbe    0x40db2f
  40daf9:	scas   eax,DWORD PTR es:[edi]
  40dafa:	sub    BYTE PTR gs:[edx+0x72],bh
  40dafe:	pop    esi
  40daff:	dec    esi
  40db00:	imul   edx,DWORD PTR [ecx-0x2cf8e912],0x2a
  40db07:	push   edi
  40db08:	adc    BYTE PTR [esi+0x4029f8ca],al
  40db0e:	lods   al,BYTE PTR ds:[esi]
  40db0f:	add    al,0xac
  40db11:	mov    ds:0x4573cdf,al
  40db16:	daa    
  40db17:	clc    
  40db18:	mov    esi,0x99c12831
  40db1d:	xlat   BYTE PTR ds:[ebx]
  40db1e:	pop    ss
  40db1f:	push   esp
  40db20:	cmp    ebx,DWORD PTR [ebp-0x5f]
  40db23:	out    0x78,eax
  40db25:	js     0x40dba2
  40db27:	(bad)  
  40db28:	int    0xa4
  40db2a:	pushf  
  40db2b:	(bad)  
  40db2c:	xor    bl,cl
  40db2e:	pop    esi
  40db2f:	aad    0xdf
  40db31:	pop    ds
  40db32:	pop    esp
  40db33:	adc    edx,DWORD PTR [edx]
  40db35:	push   es
  40db36:	dec    edi
  40db37:	pop    ebx
  40db38:	pop    es
  40db39:	(bad)  
  40db3a:	addr16 test al,0x31
  40db3d:	add    DWORD PTR ds:0xc951778c,0x1fee5afb
  40db47:	and    al,0x27
  40db49:	ret    0xb749
  40db4c:	es adc al,0x63
  40db4f:	inc    ebx
  40db50:	add    bh,bh
  40db52:	(bad)  
  40db53:	arpl   WORD PTR [edi+ebx*2],sp
  40db56:	call   0xec622f6e
  40db5b:	pusha  
  40db5c:	and    BYTE PTR [ebx-0xd],0x37
  40db60:	in     eax,0x54
  40db62:	mov    edi,0xd3e427d0
  40db67:	bound  esp,QWORD PTR [ebx+0xc]
  40db6a:	call   0x8466023d
  40db6f:	inc    ebx
  40db70:	adc    cl,cl
  40db72:	outs   dx,BYTE PTR ds:[esi]
  40db73:	(bad)  [esi]
  40db75:	mov    bl,0xef
  40db77:	jl     0x40db17
  40db79:	mov    al,0xbd
  40db7b:	pop    eax
  40db7c:	mov    ebp,0x30ebe5f9
  40db81:	jbe    0x40dbe8
  40db83:	repz ffreep st(5)
  40db86:	imul   eax,DWORD PTR [esi+0x7eedc8f8],0x61
  40db8d:	jg     0x40db96
  40db8f:	jmp    0x40db7d
  40db91:	(bad)  
  40db92:	jae    0x40db3c
  40db94:	and    eax,0x638e407b
  40db99:	mov    DWORD PTR [ecx+0x32],edx
  40db9c:	shl    ecx,1
  40db9e:	lods   eax,DWORD PTR ds:[esi]
  40db9f:	dec    edi
  40dba0:	clc    
  40dba1:	leave  
  40dba2:	adc    edi,DWORD PTR [edi+0x3d]
  40dba5:	(bad)  [ebx+edx*4-0x4755d420]
  40dbac:	mov    bl,BYTE PTR [eax+0x76cbf86f]
  40dbb2:	fimul  DWORD PTR [edx+0x51]
  40dbb5:	ins    BYTE PTR es:[edi],dx
  40dbb6:	leave  
  40dbb7:	mov    ecx,DWORD PTR fs:[edi-0x6a]
  40dbbb:	lahf   
  40dbbc:	pusha  
  40dbbd:	cmp    al,0x5d
  40dbbf:	dec    ebp
  40dbc0:	loope  0x40dbd0
  40dbc2:	sub    eax,0xf8082eca
  40dbc7:	fiadd  WORD PTR [edi-0x463c98da]
  40dbcd:	sub    al,0xd
  40dbcf:	pop    edi
  40dbd0:	inc    edi
  40dbd1:	popf   
  40dbd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbd3:	adc    eax,0xa82ddb93
  40dbd8:	cmp    al,0x70
  40dbda:	push   cs
  40dbdb:	sub    ax,0x44ce
  40dbdf:	icebp  
  40dbe0:	or     eax,0x1c186b9c
  40dbe5:	int    0xce
  40dbe7:	add    DWORD PTR [ebx-0x3a],ebx
  40dbea:	xor    al,0x3
  40dbec:	scas   al,BYTE PTR es:[edi]
  40dbed:	add    DWORD PTR [ebx+ebx*1],ebx
  40dbf0:	enter  0x4002,0x93
  40dbf4:	pop    ebp
  40dbf5:	lahf   
  40dbf6:	mov    bh,0xed
  40dbf8:	push   ebx
  40dbf9:	cmp    DWORD PTR [esi],esi
  40dbfb:	packuswb mm6,QWORD PTR ds:0x6ea392c9
  40dc02:	fwait
  40dc03:	mov    ebx,0x44a5fa93
  40dc08:	in     al,dx
  40dc09:	mov    BYTE PTR [edx],cl
  40dc0b:	leave  
  40dc0c:	inc    ebp
  40dc0d:	mov    ah,0x74
  40dc0f:	ss push ebp
  40dc11:	jl     0x40dc43
  40dc13:	pop    edx
  40dc14:	out    dx,eax
  40dc15:	push   edx
  40dc16:	xchg   edi,eax
  40dc17:	jmp    0xc32c:0x9000b8eb
  40dc1e:	cmp    esi,ecx
  40dc20:	daa    
  40dc21:	ja     0x40dc63
  40dc23:	push   eax
  40dc24:	in     al,dx
  40dc25:	cmp    al,0xbf
  40dc27:	cmp    ebx,edx
  40dc29:	lahf   
  40dc2a:	push   edx
  40dc2b:	pusha  
  40dc2c:	dec    edi
  40dc2d:	jp     0x40dc8f
  40dc2f:	sub    ch,BYTE PTR cs:[ecx]
  40dc32:	mov    al,ds:0xe0bb4e1d
  40dc37:	jmp    0x40dc91
  40dc39:	adc    BYTE PTR [edx],cl
  40dc3b:	and    eax,0x3fa5588b
  40dc40:	pusha  
  40dc41:	jnp    0x40dbe1
  40dc43:	leave  
  40dc44:	test   al,0xbc
  40dc46:	(bad)  
  40dc47:	pop    ebx
  40dc48:	pop    ss
  40dc49:	add    al,0x8
  40dc4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc4c:	xor    ebx,DWORD PTR [esi]
  40dc4e:	push   ss
  40dc4f:	(bad)  
  40dc52:	in     al,0xf6
  40dc54:	test   eax,0x7ec9e256
  40dc59:	xor    al,ch
  40dc5b:	mov    BYTE PTR [esi],dh
  40dc5d:	lds    ecx,FWORD PTR [eax+0x6ce38166]
  40dc63:	call   0x7359:0xf1df38fd
  40dc6a:	or     al,0x7b
  40dc6c:	sahf   
  40dc6d:	xchg   ebp,eax
  40dc6e:	jb     0x40dc9c
  40dc70:	fstp   TBYTE PTR [edx+0x59ec3795]
  40dc76:	push   0xffffff9a
  40dc78:	sub    al,0x35
  40dc7a:	retf   
  40dc7b:	out    0x37,al
  40dc7d:	mov    al,ds:0x19a16911
  40dc82:	cs dec esi
  40dc84:	mov    fs,WORD PTR [eax]
  40dc86:	pop    ebx
  40dc87:	jg     0x40dc1d
  40dc89:	rol    BYTE PTR [edi-0x36e181c6],0x5c
  40dc90:	inc    edx
  40dc91:	ja     0x40dc7e
  40dc93:	inc    esp
  40dc94:	jle    0x40dd0f
  40dc96:	into   
  40dc97:	aas    
  40dc98:	test   DWORD PTR ds:0xf3a3ea7,ecx
  40dc9e:	lock inc edi
  40dca0:	mov    edx,0x43868781
  40dca5:	imul   ecx,esp,0x1b
  40dca8:	jnp    0x40dcac
  40dcaa:	cs in  eax,0xed
  40dcad:	js     0x40dcb8
  40dcaf:	hlt    
  40dcb0:	aam    0x9f
  40dcb2:	or     eax,0x14b0ce71
  40dcb7:	cmp    eax,0x39dcd691
  40dcbc:	pop    edx
  40dcbd:	outs   dx,DWORD PTR ds:[esi]
  40dcbe:	jo     0x40dc74
  40dcc0:	mov    edx,0xa9ffd608
  40dcc5:	out    0x4a,al
  40dcc7:	icebp  
  40dcc8:	push   edx
  40dcc9:	outs   dx,DWORD PTR ds:[esi]
  40dcca:	jne    0x40dc76
  40dccc:	shl    BYTE PTR [edi+0x5d],0x82
  40dcd0:	icebp  
  40dcd1:	mov    ebx,0x67e29dee
  40dcd6:	(bad)  
  40dcd8:	pop    esp
  40dcd9:	adc    esi,DWORD PTR [edx-0x73]
  40dcdc:	or     DWORD PTR [edx-0x6e470794],0xffffffb5
  40dce3:	pop    eax
  40dce4:	dec    ebp
  40dce5:	or     bl,al
  40dce7:	jge    0x40dc77
  40dce9:	test   BYTE PTR [ebx],bh
  40dceb:	fwait
  40dcec:	dec    edi
  40dced:	pusha  
  40dcee:	sbb    BYTE PTR [ebx-0x103e113a],cl
  40dcf4:	int3   
  40dcf5:	shl    bh,1
  40dcf7:	fs jnp 0x40dc85
  40dcfa:	ins    BYTE PTR es:[edi],dx
  40dcfb:	fwait
  40dcfc:	(bad)  
  40dcfd:	jae    0x40dcb0
  40dcff:	mov    cl,0x15
  40dd01:	lds    ebx,FWORD PTR [eax-0x3a]
  40dd04:	aas    
  40dd05:	cmp    eax,edi
  40dd07:	gs adc eax,0x780a39ed
  40dd0d:	jmp    0x7dcde597
  40dd12:	sbb    ch,BYTE PTR [esi]
  40dd14:	mov    cl,0xd9
  40dd16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd17:	inc    ecx
  40dd18:	mov    ?,WORD PTR [ebp-0x2d2fdaa7]
  40dd1e:	mov    edx,ebx
  40dd20:	mov    esp,es
  40dd22:	leave  
  40dd23:	add    DWORD PTR [edx-0x15],0x7157c989
  40dd2a:	jge    0x40dd6b
  40dd2c:	jnp    0xebeab2d7
  40dd32:	or     DWORD PTR [ebx+0x44],0x7e
  40dd36:	ins    BYTE PTR es:[edi],dx
  40dd37:	jmp    0x3c49:0xafbe19c2
  40dd3e:	jl     0x40dd19
  40dd40:	mov    dh,0x8e
  40dd42:	outs   dx,BYTE PTR ds:[esi]
  40dd43:	call   0xfaa0ff85
  40dd48:	shl    DWORD PTR ds:0xde621b53,1
  40dd4e:	mov    eax,ds:0xf03d27fb
  40dd53:	or     al,0x17
  40dd55:	int3   
  40dd56:	cmp    cl,al
  40dd58:	jb     0x40dda8
  40dd5a:	jnp    0x40dd89
  40dd5c:	aam    0xe1
  40dd5e:	mov    edi,0xc426f8ab
  40dd63:	popf   
  40dd64:	add    eax,0x982613d8
  40dd69:	push   ss
  40dd6a:	jo     0x40dd23
  40dd6c:	or     ebp,DWORD PTR [edx+0x39]
  40dd6f:	aaa    
  40dd70:	stos   DWORD PTR es:[edi],eax
  40dd71:	push   esp
  40dd72:	ja     0x40dd3f
  40dd74:	pop    esi
  40dd75:	addr16 adc eax,ecx
  40dd78:	imul   ebp,DWORD PTR [ecx+0x7e4c96c5],0xffffff81
  40dd7f:	jge    0x40dddc
  40dd81:	lock retf 0x24af
  40dd85:	adc    esp,ebx
  40dd87:	mov    eax,ds:0x283c3acc
  40dd8c:	or     ah,BYTE PTR [ebx-0x6bc8c9ce]
  40dd92:	shr    BYTE PTR [edx-0x2502531a],cl
  40dd98:	dec    eax
  40dd99:	inc    esp
  40dd9a:	(bad)  
  40dd9b:	or     edx,ecx
  40dd9d:	xchg   ecx,eax
  40dd9e:	test   al,0x6
  40dda0:	repz sub BYTE PTR [ebx],al
  40dda3:	push   eax
  40dda4:	iret   
  40dda5:	addr16 test eax,0x70508621
  40ddab:	in     al,0xd7
  40ddad:	stos   DWORD PTR es:[edi],eax
  40ddae:	cmp    al,0x39
  40ddb0:	aam    0x31
  40ddb2:	sbb    BYTE PTR ds:0xbd8e73ed,ah
  40ddb8:	xchg   ebp,eax
  40ddb9:	sahf   
  40ddba:	or     al,0x38
  40ddbc:	aam    0x11
  40ddbe:	out    dx,eax
  40ddbf:	xor    al,0x1a
  40ddc1:	test   al,0xcf
  40ddc3:	xlat   BYTE PTR ds:[ebx]
  40ddc4:	loop   0x40de03
  40ddc6:	out    0xfe,eax
  40ddc8:	sub    bl,ch
  40ddca:	mov    esi,0xdb2e8f48
  40ddcf:	mov    eax,ds:0xe000ce9e
  40ddd4:	fnstcw WORD PTR [esi+0x4e0002cb]
  40ddda:	or     edi,DWORD PTR [ebp+0x6e1e9a5f]
  40dde0:	pop    es
  40dde1:	arpl   si,sp
  40dde3:	jb     0x40de4e
  40dde5:	inc    eax
  40dde6:	or     DWORD PTR [eax],0xfa855ec6
  40ddec:	clc    
  40dded:	mov    ds:0x1b4a7595,al
  40ddf2:	jns    0x40ddc8
  40ddf4:	pop    ebp
  40ddf5:	cmp    cl,BYTE PTR [ebp-0x5d]
  40ddf8:	add    ecx,DWORD PTR [esi-0x31367acf]
  40ddfe:	jbe    0x40de5c
  40de00:	aam    0xc1
  40de02:	xchg   edx,eax
  40de03:	imul   edi,DWORD PTR [edi],0xfffffff9
  40de06:	adc    eax,0x54c44d98
  40de0b:	test   DWORD PTR [ecx+ebx*2],esi
  40de0e:	and    ebx,DWORD PTR [eax+ecx*1-0x20]
  40de12:	std    
  40de13:	cmp    eax,0x432f981b
  40de18:	jge    0x40de12
  40de1a:	dec    esi
  40de1b:	jecxz  0x40dde3
  40de1d:	(bad)  
  40de1e:	dec    esi
  40de1f:	jns    0x40ddfd
  40de21:	jbe    0x40dded
  40de23:	outs   dx,BYTE PTR ds:[esi]
  40de24:	adc    BYTE PTR [edx-0x27],ch
  40de27:	dec    edi
  40de28:	or     bl,bl
  40de2a:	retw   
  40de2c:	pop    ebp
  40de2d:	lods   eax,DWORD PTR ds:[esi]
  40de2e:	inc    edi
  40de2f:	sub    bl,BYTE PTR [ebx]
  40de31:	lock fistp DWORD PTR [bp+di-0x93b]
  40de37:	jns    0x40de32
  40de39:	push   es
  40de3a:	inc    esp
  40de3b:	xor    edi,esi
  40de3d:	cmp    BYTE PTR [eax-0x5d67f0be],dh
  40de43:	data16 and cl,BYTE PTR [esi-0x1a]
  40de47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de48:	push   eax
  40de49:	pop    eax
  40de4a:	fwait
  40de4b:	and    cl,ah
  40de4d:	xchg   edi,eax
  40de4e:	cmp    ch,BYTE PTR [esi+0x6ed827c4]
  40de54:	jno    0x40de89
  40de56:	test   DWORD PTR [edx+0x1eb08a9a],edx
  40de5c:	cmp    edi,DWORD PTR [ebp+0x4]
  40de5f:	jne    0x40de94
  40de61:	mov    ecx,0x1c25bdb5
  40de66:	sub    eax,ebx
  40de68:	push   ebp
  40de69:	lods   al,BYTE PTR ds:[esi]
  40de6a:	mov    eax,ds:0x997e6975
  40de6f:	jnp    0x40de9e
  40de71:	test   al,0x8a
  40de73:	cwde   
  40de74:	mov    dh,0x5
  40de76:	iret   
  40de77:	mov    dh,0x17
  40de79:	push   es
  40de7a:	stc    
  40de7b:	cmp    BYTE PTR [ecx+0x5d],dh
  40de7e:	loop   0x40deda
  40de80:	mov    WORD PTR [ebx],gs
  40de82:	cmp    eax,0x316db9f8
  40de87:	cwde   
  40de88:	cmp    dl,BYTE PTR [edi]
  40de8a:	popf   
  40de8b:	test   DWORD PTR [edx-0x57ef0961],edi
  40de91:	mov    ds:0x294b8a9e,eax
  40de96:	sti    
  40de97:	jae    0x40de64
  40de99:	je     0x40df0a
  40de9b:	mov    cl,0x99
  40de9d:	sub    al,0x90
  40de9f:	pop    es
  40dea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dea1:	inc    esp
  40dea2:	out    0xa9,eax
  40dea4:	fnstcw WORD PTR [ebp+0x38]
  40dea7:	cmp    esi,ebx
  40dea9:	mov    dl,BYTE PTR [ebx]
  40deab:	inc    ebp
  40deac:	sbb    eax,0x60db796c
  40deb1:	pop    ebx
  40deb2:	cmp    eax,0x52526c64
  40deb7:	and    edi,DWORD PTR [ecx+0x1baee165]
  40debd:	cwde   
  40debe:	jp     0x40defd
  40dec0:	fiadd  DWORD PTR [ebx+0x72]
  40dec3:	sbb    al,0xb1
  40dec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dec6:	and    BYTE PTR [ebx+0x0],bh
  40dec9:	pushf  
  40deca:	inc    edi
  40decb:	into   
  40decc:	pop    ss
  40decd:	xlat   BYTE PTR ds:[ebx]
  40dece:	lock mov ecx,0xf8e06ad6
  40ded4:	leave  
  40ded5:	(bad)  
  40ded6:	mov    bh,0xe6
  40ded8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ded9:	shl    BYTE PTR [ebx],cl
  40dedb:	jo     0x40df41
  40dedd:	adc    eax,0x57b2a89f
  40dee2:	jle    0x40df31
  40dee4:	or     BYTE PTR [edi],dl
  40dee6:	cmp    ch,dl
  40dee8:	inc    ebp
  40dee9:	fdivr  QWORD PTR [edx+edx*4]
  40deec:	mov    BYTE PTR [esi+ebx*8],al
  40deef:	pop    ss
  40def0:	arpl   WORD PTR [eax-0x54d1edc],si
  40def6:	inc    eax
  40def7:	mov    ebx,0x204295a9
  40defc:	lods   al,BYTE PTR ds:[esi]
  40defd:	ins    DWORD PTR es:[edi],dx
  40defe:	cdq    
  40deff:	int3   
  40df00:	aaa    
  40df01:	adc    al,0xec
  40df03:	ins    DWORD PTR es:[edi],dx
  40df04:	push   eax
  40df05:	fist   DWORD PTR [ebx+0xc]
  40df08:	(bad)  
  40df09:	std    
  40df0a:	push   edi
  40df0b:	dec    edx
  40df0c:	(bad)  
  40df0e:	push   ebp
  40df0f:	retf   
  40df10:	cs ret 
  40df12:	sahf   
  40df13:	fcomip st,st(3)
  40df15:	retf   
  40df16:	lods   eax,DWORD PTR ds:[esi]
  40df17:	aad    0xd1
  40df19:	cmp    dl,al
  40df1b:	dec    edi
  40df1c:	gs dec esi
  40df1e:	jg     0x40df9b
  40df20:	ret    
  40df21:	dec    ebx
  40df22:	inc    eax
  40df23:	int3   
  40df24:	jo     0x40dedd
  40df26:	pusha  
  40df27:	push   ebp
  40df28:	jne    0x40df47
  40df2a:	cmp    al,dl
  40df2c:	sub    edi,eax
  40df2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df2f:	xchg   esi,eax
  40df30:	sub    DWORD PTR [esi+0x41],esi
  40df33:	imul   ecx,DWORD PTR [esi+eiz*2],0x51233925
  40df3a:	scas   eax,DWORD PTR es:[edi]
  40df3b:	repz fild WORD PTR [ebp-0x16]
  40df3f:	ror    BYTE PTR [edi+0x7fab89ac],0xff
  40df46:	pop    edx
  40df47:	rcr    edi,cl
  40df49:	retf   0x2e7e
  40df4c:	dec    esp
  40df4d:	xchg   ebp,eax
  40df4e:	aaa    
  40df4f:	xchg   ebp,eax
  40df50:	icebp  
  40df51:	push   ds
  40df52:	dec    BYTE PTR [edi-0x224acdd6]
  40df58:	retf   
  40df59:	mov    ebp,0x207d9ed7
  40df5e:	push   ebx
  40df5f:	(bad)  [esi]
  40df61:	pop    eax
  40df62:	cmp    DWORD PTR [esi+0x5f42048b],0xa
  40df69:	nop
  40df6a:	(bad)  
  40df6b:	cld    
  40df6c:	pop    ebp
  40df6d:	xor    BYTE PTR [edx+0x7581287a],ch
  40df73:	ss mov eax,0xac625551
  40df79:	pusha  
  40df7a:	inc    eax
  40df7b:	jmp    0xb820:0xfd78e571
  40df82:	pop    ds
  40df83:	stc    
  40df84:	mov    ds,WORD PTR [eax+0x37ec30ec]
  40df8a:	mov    dh,0x84
  40df8c:	aam    0xb1
  40df8e:	es out 0xf0,eax
  40df91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df92:	adc    BYTE PTR [ecx-0x2ec7fc91],cl
  40df98:	popa   
  40df99:	(bad)  
  40df9a:	jns    0x40df79
  40df9c:	cmp    eax,0x341a2139
  40dfa1:	neg    BYTE PTR [edi+0x24]
  40dfa4:	cmp    ecx,DWORD PTR [eax-0x32]
  40dfa7:	stos   BYTE PTR es:[edi],al
  40dfa8:	lods   al,BYTE PTR ds:[esi]
  40dfa9:	and    eax,0x28d38e5f
  40dfae:	neg    edx
  40dfb0:	std    
  40dfb1:	xchg   ecx,eax
  40dfb2:	pop    ecx
  40dfb3:	cdq    
  40dfb4:	pop    ss
  40dfb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfb6:	sbb    dh,bl
  40dfb8:	outs   dx,BYTE PTR ds:[esi]
  40dfb9:	adc    DWORD PTR [ecx+0x1f],0x37394abc
  40dfc0:	jg     0x40df6f
  40dfc2:	push   es
  40dfc3:	push   ds
  40dfc4:	add    eax,0xfa1070d5
  40dfc9:	add    edx,DWORD PTR [eax-0x6acec540]
  40dfcf:	mov    bl,0x1
  40dfd1:	aad    0x2c
  40dfd3:	clc    
  40dfd4:	loop   0x40e02e
  40dfd6:	into   
  40dfd7:	loop   0x40dfe5
  40dfd9:	pushf  
  40dfda:	and    BYTE PTR [ecx-0x42],cl
  40dfdd:	mov    ebp,DWORD PTR [esi+0x4b31c721]
  40dfe3:	loop   0x40e00d
  40dfe5:	push   ebp
  40dfe6:	fadd   DWORD PTR [edi]
  40dfe8:	push   esi
  40dfe9:	jl     0x40dfcd
  40dfeb:	test   al,0x5e
  40dfed:	ds xor esp,edi
  40dff0:	sub    bl,bh
  40dff2:	jle    0x40e05c
  40dff4:	sub    al,0xbd
  40dff6:	adc    BYTE PTR [ebx-0x7b],ah
  40dff9:	mov    ch,0x8a
  40dffb:	pop    eax
  40dffc:	add    BYTE PTR [ebp-0x49f3e180],ch
  40e002:	daa    
  40e003:	mov    al,ds:0x9c5d1d5f
  40e008:	mov    DWORD PTR [ecx+ebp*8],ebp
  40e00b:	add    eax,0x15defe6f
  40e010:	leave  
  40e011:	clc    
  40e012:	mov    eax,ds:0xd0e67a43
  40e017:	jg     0x40e00d
  40e019:	push   0x63
  40e01b:	inc    edx
  40e01c:	in     eax,dx
  40e01d:	mov    ebx,0xf0ade21c
  40e022:	jle    0x40dfcf
  40e024:	jp     0x40dfc9
  40e026:	fidivr DWORD PTR [ebx-0x1d]
  40e029:	inc    esp
  40e02a:	or     BYTE PTR [edi+ebx*8-0x53],0x31
  40e02f:	fs int 0x69
  40e032:	xchg   ecx,eax
  40e033:	aam    0xda
  40e035:	or     eax,0xedb5f989
  40e03a:	or     bl,BYTE PTR [esi+0x178be430]
  40e040:	jo     0x40e0be
  40e042:	adc    eax,0x19cc31e5
  40e047:	inc    ecx
  40e048:	addr16 xchg esp,eax
  40e04a:	lods   al,BYTE PTR ds:[esi]
  40e04b:	sub    esi,DWORD PTR [esi]
  40e04d:	pop    es
  40e04e:	in     al,dx
  40e04f:	add    BYTE PTR [eax+0x64],ch
  40e052:	jbe    0x40e009
  40e054:	push   0x49
  40e056:	ins    BYTE PTR es:[edi],dx
  40e057:	ds hlt 
  40e059:	inc    esi
  40e05a:	xor    ah,BYTE PTR [esi+0x5]
  40e05d:	xor    eax,0x7392f97a
  40e062:	in     eax,0x19
  40e064:	(bad)  
  40e065:	in     al,dx
  40e066:	fdiv   QWORD PTR [edx]
  40e068:	stos   DWORD PTR es:[edi],eax
  40e069:	dec    eax
  40e06a:	mov    ebp,0x2c0b3e72
  40e06f:	sbb    eax,0x630a73e8
  40e074:	hlt    
  40e075:	add    BYTE PTR [ebx-0x67],al
  40e078:	jbe    0x40e0ca
  40e07a:	pop    es
  40e07b:	popa   
  40e07c:	push   ds
  40e07d:	jb     0x40e05e
  40e07f:	mov    ecx,ebp
  40e081:	out    dx,al
  40e082:	or     edi,DWORD PTR [edi]
  40e084:	sub    al,0xf9
  40e086:	adc    al,0xbf
  40e088:	mov    eax,ds:0x12533bd1
  40e08d:	sahf   
  40e08e:	mov    esp,0x4ff46bd9
  40e093:	das    
  40e094:	je     0x40e03b
  40e096:	shl    DWORD PTR [ecx],cl
  40e098:	in     al,0xdb
  40e09a:	push   ds
  40e09b:	mov    eax,fs
  40e09d:	gs mov dl,0x74
  40e0a0:	ins    BYTE PTR es:[edi],dx
  40e0a1:	xor    al,0xc8
  40e0a3:	sub    bl,bl
  40e0a5:	jl     0x40e084
  40e0a7:	or     esi,DWORD PTR [edi+0x1b59e30f]
  40e0ad:	stos   DWORD PTR es:[edi],eax
  40e0ae:	(bad)
  40e0b1:	test   ecx,edx
  40e0b3:	pop    eax
  40e0b4:	and    BYTE PTR [edi-0x3b5ea39d],ch
  40e0ba:	dec    esi
  40e0bb:	ficom  WORD PTR [eax]
  40e0bd:	sbb    DWORD PTR [edx],ebp
  40e0bf:	daa    
  40e0c0:	pop    edi
  40e0c1:	iret   
  40e0c2:	pop    eax
  40e0c3:	call   0xbd2e60e0
  40e0c8:	adc    al,0x98
  40e0ca:	sub    al,0x9e
  40e0cc:	pop    ebp
  40e0cd:	add    eax,0x3d0f7f17
  40e0d2:	ja     0x40e0d5
  40e0d4:	mov    ds:0x73556220,al
  40e0d9:	pop    esi
  40e0da:	repnz xchg edi,eax
  40e0dc:	mov    dl,ah
  40e0de:	pop    ss
  40e0df:	xchg   DWORD PTR [ecx+0x61],esi
  40e0e2:	sbb    al,0x0
  40e0e4:	jl     0x40e067
  40e0e6:	fsubr  DWORD PTR [eax]
  40e0e8:	and    bl,dh
  40e0ea:	cmc    
  40e0eb:	or     ebp,DWORD PTR [ecx]
  40e0ed:	fild   WORD PTR [ebx+0x42]
  40e0f0:	sbb    DWORD PTR [ebp-0xac0d606],esp
  40e0f6:	jg     0x40e13a
  40e0f8:	not    ch
  40e0fa:	int3   
  40e0fb:	inc    ebx
  40e0fc:	dec    esi
  40e0fd:	adc    dl,BYTE PTR [edx-0x6b]
  40e100:	call   0xfbf1:0x4109535f
  40e107:	jne    0x40e0e0
  40e109:	in     al,0x83
  40e10b:	enter  0x9f84,0x24
  40e10f:	das    
  40e110:	mov    ebp,0xfaef0d2f
  40e115:	mov    ecx,ds
  40e117:	mov    edx,0xffe63a8d
  40e11c:	pop    eax
  40e11d:	xchg   ecx,eax
  40e11e:	idiv   BYTE PTR cs:[ecx+0x682d6289]
  40e125:	jnp    0x40e192
  40e127:	dec    ebx
  40e128:	aas    
  40e129:	push   0xffffffc8
  40e12b:	add    al,0x28
  40e12d:	xchg   edi,ebx
  40e12f:	fsubr  DWORD PTR [ebx+eax*8-0x7c]
  40e133:	mov    bl,0x44
  40e135:	mov    eax,ds:0xc71b774f
  40e13a:	inc    esp
  40e13b:	dec    ecx
  40e13c:	mov    BYTE PTR [edi+0x6e],cl
  40e13f:	mov    esi,edx
  40e141:	xchg   DWORD PTR [edx],esi
  40e143:	sti    
  40e144:	das    
  40e145:	into   
  40e146:	mov    ds:0xe4d92f20,eax
  40e14b:	sub    eax,0x9c4162a3
  40e150:	and    ah,al
  40e152:	test   BYTE PTR [ecx],ch
  40e154:	(bad)  
  40e155:	xlat   BYTE PTR ds:[ebx]
  40e156:	out    0xeb,eax
  40e158:	aas    
  40e159:	test   BYTE PTR [ecx],ah
  40e15b:	mov    eax,0xe1161c86
  40e160:	sbb    bh,dl
  40e162:	inc    ecx
  40e163:	jle    0x40e18b
  40e165:	dec    ebp
  40e166:	loope  0x40e1c1
  40e168:	(bad)  
  40e169:	loopne 0x40e15a
  40e16b:	(bad)  
  40e16c:	fdiv   QWORD PTR [ebx]
  40e16e:	sahf   
  40e16f:	fstp   QWORD PTR [ecx]
  40e171:	lea    ebp,[esi-0x67]
  40e174:	stos   DWORD PTR es:[edi],eax
  40e175:	loop   0x40e155
  40e177:	pop    ds
  40e178:	mov    bl,BYTE PTR [ecx+0x79ee7f3d]
  40e17e:	pop    esp
  40e17f:	mov    esi,0xd80a2248
  40e185:	int3   
  40e186:	mov    DWORD PTR [ebp+edi*2+0x5062f3b4],ebp
  40e18d:	sbb    edi,DWORD PTR [ecx+0x3d]
  40e190:	ss in  al,0x1b
  40e193:	int3   
  40e194:	add    cl,al
  40e196:	pop    ebp
  40e197:	loop   0x40e204
  40e199:	cmc    
  40e19a:	jl     0x40e1ab
  40e19c:	pop    ds
  40e19d:	out    dx,eax
  40e19e:	out    dx,eax
  40e19f:	xchg   esp,eax
  40e1a0:	pop    ecx
  40e1a1:	sbb    ah,dh
  40e1a3:	shl    BYTE PTR [esi+0x40],0x28
  40e1a7:	(bad)  
  40e1a8:	stc    
  40e1a9:	shl    BYTE PTR [ecx+0x6bcc0a3e],1
  40e1af:	jecxz  0x40e1c8
  40e1b1:	int    0xed
  40e1b3:	in     al,dx
  40e1b4:	test   DWORD PTR [eax+0x71b95e96],esi
  40e1ba:	sub    BYTE PTR [ebx-0x9],dh
  40e1bd:	retf   
  40e1be:	and    cl,BYTE PTR [ebp+0x493163a9]
  40e1c4:	retf   
  40e1c5:	push   cs
  40e1c6:	cmp    ebx,DWORD PTR [esi]
  40e1c8:	adc    al,0x75
  40e1ca:	fwait
  40e1cb:	pushf  
  40e1cc:	add    ch,ch
  40e1ce:	mov    BYTE PTR [edx-0x2d451253],al
  40e1d4:	push   0xffffffc0
  40e1d6:	inc    edx
  40e1d7:	mov    ebx,DWORD PTR [esp+edx*4-0x2]
  40e1db:	test   DWORD PTR [edx+0x53],esi
  40e1de:	add    BYTE PTR [edx],ch
  40e1e0:	mov    ecx,0xb58807ba
  40e1e5:	retf   
  40e1e6:	inc    ebx
  40e1e7:	mov    ds:0xe0f524a2,eax
  40e1ec:	stos   BYTE PTR es:[edi],al
  40e1ed:	mov    ebp,0x7e1b0fee
  40e1f2:	inc    eax
  40e1f3:	inc    eax
  40e1f4:	ins    DWORD PTR es:[edi],dx
  40e1f5:	repz ret 
  40e1f7:	push   eax
  40e1f8:	lahf   
  40e1f9:	(bad)  
  40e1fa:	loop   0x40e1dd
  40e1fc:	ja     0x40e1f2
  40e1fe:	dec    esi
  40e1ff:	jmp    0xf776:0xbd1ca4e2
  40e206:	lds    ebx,FWORD PTR [ebp-0x80]
  40e209:	cmp    al,0x80
  40e20b:	scas   eax,DWORD PTR es:[edi]
  40e20c:	shr    BYTE PTR [esi-0x47776761],1
  40e212:	das    
  40e213:	push   es
  40e214:	dec    ebx
  40e215:	push   cs
  40e216:	mov    edx,0xebfa3bbb
  40e21b:	dec    ecx
  40e21c:	sub    eax,0x72f11fdc
  40e221:	cli    
  40e222:	cmp    al,0xae
  40e224:	ror    DWORD PTR [edi+0x59578fa3],1
  40e22a:	dec    ebx
  40e22b:	scas   al,BYTE PTR es:[edi]
  40e22c:	pusha  
  40e22d:	aaa    
  40e22e:	(bad)
  40e231:	cmp    eax,0x7df05117
  40e236:	push   0xffffffb4
  40e238:	out    dx,al
  40e239:	cmp    DWORD PTR [ebx],ecx
  40e23b:	hlt    
  40e23c:	push   ebp
  40e23d:	cmp    al,0xef
  40e23f:	or     eax,0x270444f2
  40e244:	inc    eax
  40e245:	ret    
  40e246:	bound  ebp,QWORD PTR [ecx-0x69]
  40e249:	stos   DWORD PTR es:[edi],eax
  40e24a:	lea    eax,[ebx-0x4491b05b]
  40e250:	jmp    0x40e289
  40e252:	ret    
  40e253:	adc    eax,0x2c6d94e2
  40e258:	push   0xffffff80
  40e25a:	inc    esp
  40e25b:	inc    edi
  40e25c:	and    al,dl
  40e25e:	(bad)  
  40e25f:	sub    cl,BYTE PTR ds:0xe4b9227d
  40e265:	icebp  
  40e266:	icebp  
  40e267:	cli    
  40e268:	xchg   esp,eax
  40e269:	add    eax,0x2df1b95b
  40e26e:	mov    ds,WORD PTR [edi]
  40e270:	sbb    al,0xa1
  40e272:	pusha  
  40e273:	lods   al,BYTE PTR ds:[esi]
  40e274:	repz mov bl,0xb6
  40e277:	shl    BYTE PTR [ecx-0x1e],1
  40e27a:	lds    ecx,FWORD PTR [esi]
  40e27c:	mov    eax,ds:0xf66adbf5
  40e281:	add    DWORD PTR [eax+edi*8-0x60491010],ebx
  40e288:	cmp    dh,BYTE PTR [esi+0x34d81ae7]
  40e28e:	push   0xffffffd2
  40e290:	mov    esi,0xa67ee71
  40e295:	in     eax,0xdd
  40e297:	sbb    ah,ah
  40e299:	push   0x51
  40e29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e29c:	shr    DWORD PTR [ecx-0x3adbcd89],0xe2
  40e2a3:	pop    eax
  40e2a4:	mov    cl,0xbc
  40e2a6:	mov    edi,0x41ae8e75
  40e2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2ac:	push   edx
  40e2ad:	xlat   BYTE PTR ds:[ebx]
  40e2ae:	bound  eax,QWORD PTR [edx+esi*4-0x3f]
  40e2b2:	dec    edx
  40e2b3:	cmp    al,0xc3
  40e2b5:	fist   WORD PTR [esi-0x26]
  40e2b8:	mov    ebp,0x85f21f25
  40e2bd:	cmp    dl,dh
  40e2bf:	inc    esi
  40e2c0:	retf   
  40e2c1:	fidiv  DWORD PTR [ebp-0x33]
  40e2c4:	test   al,0x62
  40e2c6:	sub    eax,0x1b31ec02
  40e2cb:	push   eax
  40e2cc:	cmp    cl,BYTE PTR [eax+0x29]
  40e2cf:	mov    ds:0xcc41a1a1,al
  40e2d4:	aas    
  40e2d5:	dec    edx
  40e2d6:	mov    dh,BYTE PTR [edi-0x5a]
  40e2d9:	mov    dl,0xc8
  40e2db:	mov    WORD PTR [eax-0x13ea939],?
  40e2e1:	xchg   edi,eax
  40e2e2:	das    
  40e2e3:	inc    esi
  40e2e4:	sub    eax,0x999a47d6
  40e2e9:	pop    ecx
  40e2ea:	stos   BYTE PTR es:[edi],al
  40e2eb:	dec    esi
  40e2ec:	jmp    0x40e298
  40e2ee:	adc    DWORD PTR [edx+0x14],ebx
  40e2f1:	imul   esp,DWORD PTR [esi-0x79bc681d],0x58c2a5c9
  40e2fb:	ins    DWORD PTR es:[edi],dx
  40e2fc:	and    bl,BYTE PTR [eax+0x14b52c39]
  40e302:	lock dec ecx
  40e304:	cwde   
  40e305:	int    0x9a
  40e307:	outs   dx,BYTE PTR ds:[esi]
  40e308:	pop    edx
  40e309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e30a:	int3   
  40e30b:	add    ah,bl
  40e30d:	inc    esi
  40e30e:	xchg   esp,eax
  40e30f:	dec    eax
  40e310:	sub    al,bh
  40e312:	mov    esp,0xd25601dd
  40e317:	fs jnp 0x40e308
  40e31a:	scas   al,BYTE PTR es:[edi]
  40e31b:	out    0xec,eax
  40e31d:	mov    ecx,0x1977fb62
  40e322:	add    DWORD PTR [ebp+0x75e23c7e],esp
  40e328:	fcom   QWORD PTR [eax]
  40e32a:	and    BYTE PTR [edi],ch
  40e32c:	dec    edi
  40e32d:	into   
  40e32e:	sbb    eax,DWORD PTR ds:0x6c87e5b0
  40e334:	(bad)  
  40e335:	xchg   ebx,eax
  40e336:	mov    eax,0x95f8d928
  40e33b:	mov    DWORD PTR [ebx+0x52],eax
  40e33e:	shl    edx,cl
  40e340:	ds xor eax,0x79a61205
  40e346:	aaa    
  40e347:	ror    cl,0xc6
  40e34a:	xchg   ebx,eax
  40e34b:	inc    esi
  40e34c:	jnp    0x40e307
  40e34e:	nop
  40e34f:	ins    DWORD PTR es:[edi],dx
  40e350:	jns    0x40e389
  40e352:	or     DWORD PTR ds:[edx+edi*4-0x40],eax
  40e357:	or     al,0xcd
  40e359:	push   esi
  40e35a:	pusha  
  40e35b:	dec    esi
  40e35c:	lahf   
  40e35d:	mov    esi,0x89473d49
  40e362:	pop    ebp
  40e363:	scas   al,BYTE PTR es:[edi]
  40e364:	leave  
  40e365:	retf   0x798b
  40e368:	or     al,0x87
  40e36a:	les    esi,FWORD PTR [edx]
  40e36c:	hlt    
  40e36d:	daa    
  40e36e:	inc    edx
  40e36f:	imul   esi,esi,0xffffffd9
  40e372:	les    ebp,FWORD PTR [eax+0x1c]
  40e375:	xchg   ebx,eax
  40e376:	mov    edx,ecx
  40e378:	mov    ecx,0xd84736bd
  40e37d:	push   esi
  40e37e:	and    BYTE PTR [ebx-0x71],bl
  40e381:	enter  0xef9d,0xfd
  40e385:	fwait
  40e386:	out    0xa4,eax
  40e388:	repz pop ds
  40e38a:	jns    0x40e3b0
  40e38c:	mov    esi,0xd3a0f4d7
  40e391:	cld    
  40e392:	pop    ss
  40e393:	fs cdq 
  40e395:	dec    edi
  40e396:	inc    ecx
  40e397:	mov    cl,0xb1
  40e399:	jmp    0xfdbf44c5
  40e39e:	push   cs
  40e39f:	and    bh,BYTE PTR [esi+0x73]
  40e3a2:	cmp    esp,ebx
  40e3a4:	and    BYTE PTR [ebx-0x7c],dh
  40e3a7:	clc    
  40e3a8:	pop    esi
  40e3a9:	fstp   DWORD PTR [esi-0x2d]
  40e3ac:	cmp    eax,0xa90c7f70
  40e3b1:	adc    ecx,DWORD PTR [ebx-0x74]
  40e3b4:	mov    esp,ecx
  40e3b6:	pop    edx
  40e3b7:	sbb    DWORD PTR [edi-0x8],edi
  40e3ba:	add    eax,0x81aeb9ee
  40e3bf:	fisubr DWORD PTR [ebx]
  40e3c1:	jnp    0x40e394
  40e3c3:	add    DWORD PTR [edx-0x68e0fb7c],esp
  40e3c9:	add    dl,BYTE PTR [esp+ebx*2+0x68e41fe8]
  40e3d0:	jne    0x40e37d
  40e3d2:	add    dl,BYTE PTR [edi+0x51]
  40e3d5:	mov    esp,0xfd3d9bb
  40e3da:	out    dx,eax
  40e3db:	fisubr WORD PTR [edx-0x68]
  40e3de:	adc    dl,ah
  40e3e0:	test   al,0x1c
  40e3e2:	popa   
  40e3e3:	cmp    DWORD PTR [esi+0x2e],edi
  40e3e6:	mov    ds:0x41d9e91b,al
  40e3eb:	xchg   ebp,eax
  40e3ec:	les    edx,FWORD PTR [ecx-0x73]
  40e3ef:	push   0x5e
  40e3f1:	or     eax,0xc663003
  40e3f6:	mov    ah,0x8b
  40e3f8:	cmc    
  40e3f9:	xchg   edx,eax
  40e3fa:	hlt    
  40e3fb:	retf   0x54e8
  40e3fe:	cs mul ebp
  40e401:	in     al,dx
  40e402:	scas   eax,DWORD PTR es:[edi]
  40e403:	dec    edi
  40e404:	mov    dl,0xe0
  40e406:	mov    ?,WORD PTR [esp+esi*1+0xa]
  40e40a:	adc    al,0xe1
  40e40c:	pop    ebp
  40e40d:	daa    
  40e40e:	dec    edi
  40e40f:	xor    al,0x99
  40e411:	xlat   BYTE PTR ds:[ebx]
  40e412:	aad    0x52
  40e414:	mov    dl,0x72
  40e416:	inc    edi
  40e417:	(bad)  
  40e418:	psrld  mm7,QWORD PTR [eax+0x65fbd924]
  40e41f:	inc    ebp
  40e420:	mov    dl,0x56
  40e422:	sub    dl,BYTE PTR [edi+edx*1-0x7b]
  40e426:	mov    ah,0xaa
  40e428:	aad    0x6b
  40e42a:	retf   
  40e42b:	int    0xd5
  40e42d:	xor    al,BYTE PTR [ebp+ebx*4-0x20d5c454]
  40e434:	scas   al,BYTE PTR es:[edi]
  40e435:	jle    0x40e45a
  40e437:	fnstsw WORD PTR [ebx-0x10a30780]
  40e43d:	xchg   ecx,eax
  40e43e:	jne    0x40e4ae
  40e440:	and    cl,al
  40e442:	adc    esi,DWORD PTR [ebp-0x77bb9be6]
  40e448:	mov    gs,WORD PTR [ebx-0x24]
  40e44b:	es test al,0xcc
  40e44e:	daa    
  40e44f:	sub    eax,0x79788f19
  40e454:	jne    0x40e474
  40e456:	mov    esi,0xb82a23e3
  40e45b:	stos   BYTE PTR es:[edi],al
  40e45c:	inc    ebx
  40e45d:	bound  esp,QWORD PTR [ebp-0x642256a7]
  40e463:	and    BYTE PTR [edx+0x11],dl
  40e466:	cmp    eax,0x370d5f1b
  40e46b:	jb     0x40e4c1
  40e46d:	and    eax,DWORD PTR [eax-0x5f]
  40e470:	jg     0x40e4e5
  40e472:	mov    al,0xb3
  40e474:	stc    
  40e475:	mov    ebp,0x806bd749
  40e47a:	(bad)  
  40e47b:	(bad)  
  40e47d:	mov    esi,0xe62c2e07
  40e482:	pop    ds
  40e483:	fsub   st(2),st
  40e485:	push   esp
  40e486:	or     DWORD PTR [ebx+0x17],ebx
  40e489:	and    eax,0x3c33c3b2
  40e48e:	idiv   BYTE PTR [ebx-0x48c79a8f]
  40e494:	addr16 adc edx,ebx
  40e497:	dec    edx
  40e498:	popa   
  40e499:	ins    BYTE PTR es:[edi],dx
  40e49a:	daa    
  40e49b:	add    DWORD PTR ds:0xde47e63,0x1fbce734
  40e4a5:	sub    dx,WORD PTR [edx]
  40e4a8:	ret    0x825f
  40e4ab:	in     eax,0x23
  40e4ad:	xchg   edx,eax
  40e4ae:	ss div ecx
  40e4b1:	aam    0xe6
  40e4b3:	out    dx,eax
  40e4b4:	mov    dh,0x47
  40e4b6:	jmp    0x40e4cb
  40e4b8:	cmp    DWORD PTR [ebp-0x498b2721],esi
  40e4be:	mov    esi,0xab5c3ce
  40e4c3:	mov    ebp,0x53defe61
  40e4c8:	sbb    al,0x36
  40e4ca:	jns    0x40e48c
  40e4cc:	inc    eax
  40e4cd:	xor    BYTE PTR [edi-0x8],al
  40e4d0:	xchg   ebp,eax
  40e4d1:	push   esp
  40e4d2:	inc    esi
  40e4d3:	js     0x40e4f4
  40e4d5:	aad    0x60
  40e4d7:	cwde   
  40e4d8:	stos   BYTE PTR es:[edi],al
  40e4d9:	dec    eax
  40e4da:	(bad)  
  40e4db:	jmp    0x9522:0xaa9bdd3c
  40e4e2:	or     al,cl
  40e4e4:	scas   al,BYTE PTR es:[edi]
  40e4e5:	jp     0x40e494
  40e4e7:	jg     0x40e525
  40e4e9:	push   edx
  40e4ea:	mov    edi,0x843c034f
  40e4ef:	cld    
  40e4f0:	repz aam 0xeb
  40e4f3:	stos   DWORD PTR es:[edi],eax
  40e4f4:	scas   eax,DWORD PTR es:[edi]
  40e4f5:	xor    BYTE PTR [eax-0x19],bl
  40e4f8:	pop    es
  40e4f9:	inc    ebx
  40e4fa:	xchg   esp,eax
  40e4fb:	shl    DWORD PTR ds:0x6690f0b2,cl
  40e501:	mov    edx,0x2230ef77
  40e506:	and    cl,bl
  40e508:	sbb    BYTE PTR [edi+0x52fa96bd],bh
  40e50e:	jle    0x40e542
  40e510:	pop    edx
  40e511:	or     eax,ebx
  40e513:	push   esp
  40e514:	retf   0x605
  40e517:	mov    edx,0x48c0ef18
  40e51c:	(bad)  
  40e51d:	scas   al,BYTE PTR es:[edi]
  40e51e:	jmp    0x6a29d9e2
  40e523:	adc    al,0x7
  40e525:	adc    eax,0x71033161
  40e52a:	call   0xcb6f192e
  40e52f:	out    0x6e,al
  40e531:	jne    0x40e556
  40e533:	xchg   ecx,eax
  40e534:	call   0x7eab:0x5c8b35c0
  40e53b:	pusha  
  40e53c:	(bad)  
  40e53e:	dec    ebx
  40e53f:	mov    bl,0x6a
  40e541:	inc    ebp
  40e542:	push   esp
  40e543:	and    esp,esi
  40e545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e546:	cmp    DWORD PTR [ebx-0x59],0x4a
  40e54a:	dec    edi
  40e54b:	pushf  
  40e54c:	mov    ds:0xfad4adc9,al
  40e551:	cld    
  40e552:	scas   eax,DWORD PTR es:[edi]
  40e553:	sbb    ebx,0xb5a74e5b
  40e559:	dec    eax
  40e55a:	xlat   BYTE PTR ds:[ebx]
  40e55b:	mov    ah,0xfb
  40e55d:	pushf  
  40e55e:	(bad)  
  40e55f:	popf   
  40e560:	outs   dx,BYTE PTR ds:[esi]
  40e561:	fisttp DWORD PTR [ebp+0x4591fe29]
  40e567:	mov    al,ds:0x7b1db29f
  40e56c:	lea    ebx,[edx+edx*2]
  40e56f:	fadd   DWORD PTR [esi+eax*1]
  40e572:	fwait
  40e573:	sbb    esp,eax
  40e575:	jo     0x40e504
  40e577:	xlat   BYTE PTR ds:[ebx]
  40e578:	mov    dh,0xa
  40e57a:	mov    ecx,0xb8ca7394
  40e57f:	dec    ebp
  40e580:	push   ebp
  40e581:	pop    ds
  40e582:	push   edi
  40e583:	imul   edi,DWORD PTR [ecx-0x3a],0xf5ae39ba
  40e58a:	stc    
  40e58b:	outs   dx,BYTE PTR ds:[esi]
  40e58c:	(bad)  
  40e58e:	scas   eax,DWORD PTR es:[edi]
  40e58f:	loop   0x40e5d5
  40e591:	push   edi
  40e592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e593:	xchg   esp,ebp
  40e595:	mov    eax,0xb463e31d
  40e59a:	mov    BYTE PTR [ebp+0x60],ah
  40e59d:	jo     0x40e5d0
  40e59f:	fst    QWORD PTR [edx]
  40e5a1:	nop
  40e5a2:	jmp    DWORD PTR [edx+0x1d]
  40e5a5:	fst    DWORD PTR [esi]
  40e5a7:	xchg   edx,eax
  40e5a8:	sahf   
  40e5a9:	cs pushf 
  40e5ab:	xchg   ebp,eax
  40e5ac:	sub    dh,cl
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	ret    0xae39
  40e5b2:	into   
  40e5b3:	inc    ebp
  40e5b4:	push   eax
  40e5b5:	mov    esi,0x12204c83
  40e5ba:	dec    edi
  40e5bb:	sub    DWORD PTR [eax-0x5a],0x19
  40e5bf:	pusha  
  40e5c0:	xchg   BYTE PTR [esi-0x65517075],dh
  40e5c6:	inc    esp
  40e5c7:	fidiv  DWORD PTR [ebx+edi*4-0x52a76f2c]
  40e5ce:	adc    eax,DWORD PTR [eax]
  40e5d0:	or     BYTE PTR fs:[ebx],ah
  40e5d3:	mov    al,0x69
  40e5d5:	xchg   ecx,eax
  40e5d6:	adc    DWORD PTR [esi-0x59485257],edi
  40e5dc:	stos   DWORD PTR es:[edi],eax
  40e5dd:	mov    edi,0x1a468233
  40e5e2:	inc    eax
  40e5e3:	outs   dx,BYTE PTR ds:[si]
  40e5e5:	sbb    esp,ebp
  40e5e7:	inc    edi
  40e5e8:	pop    es
  40e5e9:	icebp  
  40e5ea:	imul   eax,DWORD PTR [eax+0x7],0x7d9016e5
  40e5f1:	aam    0xc0
  40e5f3:	cdq    
  40e5f4:	or     BYTE PTR [ecx],0x2e
  40e5f7:	ins    DWORD PTR es:[edi],dx
  40e5f8:	mov    dl,0xca
  40e5fa:	cli    
  40e5fb:	daa    
  40e5fc:	push   es
  40e5fd:	leave  
  40e5fe:	mov    eax,0x163c36af
  40e603:	inc    ebx
  40e604:	pushf  
  40e605:	mov    ds:0x700a8e9b,eax
  40e60a:	pop    ds
  40e60b:	mov    ecx,0x64b15938
  40e610:	mov    BYTE PTR [ebp+0xfb2d339],bh
  40e616:	mov    esp,0xb82df136
  40e61b:	jp     0x40e59e
  40e61d:	add    eax,0xc21d722d
  40e622:	push   0x43
  40e624:	daa    
  40e625:	xor    bl,BYTE PTR [edx+0x72]
  40e628:	les    esi,FWORD PTR [eax+0x5293a7a6]
  40e62e:	mov    ebx,DWORD PTR [edi-0x5c03f1bc]
  40e634:	test   eax,0xcd76ba6d
  40e639:	pop    ss
  40e63a:	jmp    0xfda1d3e7
  40e63f:	sbb    al,BYTE PTR [edi+ebx*2+0x27]
  40e643:	fcomp  DWORD PTR [eax]
  40e645:	adc    al,0x66
  40e647:	pop    es
  40e648:	cmc    
  40e649:	lods   eax,DWORD PTR ds:[esi]
  40e64a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e64c:	ret    0x981d
  40e64f:	push   cs
  40e650:	stos   BYTE PTR es:[edi],al
  40e651:	enter  0x2038,0xff
  40e655:	test   DWORD PTR [eax+0x7],esp
  40e658:	(bad)  
  40e659:	cmp    al,0xd3
  40e65b:	imul   DWORD PTR [esi+0x632eaf3e]
  40e661:	jecxz  0x40e66e
  40e663:	scas   al,BYTE PTR es:[edi]
  40e664:	push   eax
  40e665:	jns    0x40e693
  40e667:	or     edi,DWORD PTR [esi]
  40e669:	mov    al,ds:0x773da860
  40e66e:	in     eax,0x71
  40e670:	pop    esi
  40e671:	sbb    al,0xee
  40e673:	mov    WORD PTR [ebp-0x67aa75e6],ss
  40e679:	fdivr  QWORD PTR [eax+0x7acda85f]
  40e67f:	(bad)  
  40e681:	sbb    ah,ch
  40e683:	dec    edx
  40e684:	add    DWORD PTR [esi],edx
  40e686:	stc    
  40e687:	and    al,0xab
  40e689:	out    0xcc,al
  40e68b:	xor    BYTE PTR [ebx+0x43],ch
  40e68e:	call   0x9191789c
  40e693:	in     eax,0xaa
  40e695:	inc    ecx
  40e696:	ss adc al,0xd8
  40e699:	pushf  
  40e69a:	out    dx,eax
  40e69b:	out    0xa2,eax
  40e69d:	xor    esi,DWORD PTR [ebx]
  40e69f:	jno    0x40e6d6
  40e6a1:	xchg   edx,eax
  40e6a2:	mov    esi,0xeab87a9b
  40e6a7:	xor    edx,DWORD PTR [esi-0x62]
  40e6aa:	push   ds
  40e6ab:	fnsave [ebx]
  40e6ad:	stos   BYTE PTR es:[edi],al
  40e6ae:	pop    ebx
  40e6af:	mov    BYTE PTR [esi],ah
  40e6b1:	mov    esi,0x6ea44a54
  40e6b6:	mov    eax,ds:0x288cc8a1
  40e6bb:	fwait
  40e6bc:	xchg   DWORD PTR [ebp+0x12],ecx
  40e6bf:	mov    ds:0x92bb2f27,eax
  40e6c4:	push   ds
  40e6c5:	add    DWORD PTR [edi],esp
  40e6c7:	mov    ds:0x1634da07,eax
  40e6cc:	outs   dx,DWORD PTR ds:[esi]
  40e6cd:	pop    ss
  40e6ce:	cmp    al,bh
  40e6d0:	mov    ebp,0x41945347
  40e6d5:	repnz lods al,BYTE PTR ds:[esi]
  40e6d7:	mov    BYTE PTR [esi+edi*4],ah
  40e6da:	test   DWORD PTR [esi+0x5b],esi
  40e6dd:	aaa    
  40e6de:	jmp    esp
  40e6e0:	jle    0x40e6fd
  40e6e2:	or     eax,esp
  40e6e4:	pop    esi
  40e6e5:	jmp    0x40e766
  40e6e7:	aaa    
  40e6e8:	ins    DWORD PTR es:[edi],dx
  40e6e9:	rcl    DWORD PTR [ebx+eiz*2-0x69d30906],0x92
  40e6f1:	mov    ebx,0x17ba0268
  40e6f6:	add    al,0x68
  40e6f8:	addr16 dec esi
  40e6fa:	push   cs
  40e6fb:	mov    ecx,0x57528606
  40e700:	jecxz  0x40e6af
  40e702:	mov    ebx,0x5c80061d
  40e707:	cmp    eax,esi
  40e709:	(bad)  
  40e70a:	adc    al,0x63
  40e70c:	mov    ah,0x48
  40e70e:	lock push eax
  40e710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e711:	mov    dh,0x3d
  40e713:	jns    0x40e726
  40e715:	cmp    DWORD PTR [eax-0x28a75e26],edi
  40e71b:	mov    bl,0x58
  40e71d:	mov    eax,0x9a916f5b
  40e722:	xchg   esp,eax
  40e723:	mov    BYTE PTR [eax],ah
  40e725:	into   
  40e726:	ret    
  40e727:	ss shl ch,cl
  40e72a:	mov    bh,0x19
  40e72c:	inc    edx
  40e72d:	or     eax,0xa7010120
  40e732:	out    dx,al
  40e733:	xchg   edi,eax
  40e734:	xchg   ebx,eax
  40e735:	stos   DWORD PTR es:[edi],eax
  40e736:	mov    cl,BYTE PTR [edi+eax*2-0xa]
  40e73a:	dec    esp
  40e73b:	xchg   esp,eax
  40e73c:	or     BYTE PTR [edi+eiz*8],al
  40e73f:	sub    edi,DWORD PTR [esi-0x3175dfdf]
  40e745:	stos   BYTE PTR es:[edi],al
  40e746:	xor    BYTE PTR [esi+0x33],0x92
  40e74a:	mov    al,0xfc
  40e74c:	adc    BYTE PTR [ebx+0x32],0x90
  40e750:	js     0x40e704
  40e752:	das    
  40e753:	dec    edi
  40e754:	add    esp,ecx
  40e756:	inc    ebp
  40e757:	std    
  40e758:	pop    ss
  40e759:	fs pop ss
  40e75b:	lods   al,BYTE PTR ds:[esi]
  40e75c:	mov    eax,0xd1ce204e
  40e761:	outs   dx,DWORD PTR ds:[esi]
  40e762:	push   cs
  40e763:	je     0x40e74c
  40e765:	shl    WORD PTR [eax+0x4e73ddb5],cl
  40e76c:	sbb    BYTE PTR [esi+0x1364a941],ah
  40e772:	mov    ah,0xcc
  40e774:	daa    
  40e775:	sar    edi,0xeb
  40e778:	pushf  
  40e779:	and    eax,0xb06ccf09
  40e77e:	pop    esi
  40e77f:	imul   edx,DWORD PTR [edx-0x7bb370c9],0xa398a000
  40e789:	ja     0x40e73d
  40e78b:	stc    
  40e78c:	sbb    bh,bl
  40e78e:	in     eax,dx
  40e78f:	call   0xec07:0x26f3e53d
  40e796:	loop   0x40e799
  40e798:	inc    edx
  40e799:	(bad)  
  40e79a:	cmp    eax,0x59dc183c
  40e79f:	push   ebx
  40e7a0:	scas   al,BYTE PTR es:[edi]
  40e7a1:	sbb    al,0x9e
  40e7a3:	pushf  
  40e7a4:	mov    BYTE PTR [edx+ecx*1-0x48],0x2
  40e7a9:	adc    ah,dl
  40e7ab:	mov    dh,ah
  40e7ad:	push   0x775c6e0a
  40e7b2:	cmp    DWORD PTR [esi-0x7e],esi
  40e7b5:	mov    ds:0x47e6b5a1,al
  40e7ba:	inc    BYTE PTR [esi+0x74a5fd58]
  40e7c0:	aaa    
  40e7c1:	mov    cl,0x81
  40e7c3:	adc    DWORD PTR [ecx],eax
  40e7c5:	loopne 0x40e7be
  40e7c7:	or     eax,0x60839205
  40e7cc:	fist   DWORD PTR [ebx-0x4979f2a3]
  40e7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7d3:	xchg   DWORD PTR [eax-0xd],edi
  40e7d6:	cmp    DWORD PTR [eax-0x7],edx
  40e7d9:	or     edx,esp
  40e7db:	test   eax,0x770ff469
  40e7e0:	mov    esi,0x81076d6f
  40e7e5:	cld    
  40e7e6:	jne    0x40e7c5
  40e7e8:	or     al,0xbb
  40e7ea:	mov    cl,BYTE PTR [eax]
  40e7ec:	mov    al,ds:0x904505ef
  40e7f1:	mov    cl,0x68
  40e7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f4:	xchg   esp,eax
  40e7f5:	xchg   BYTE PTR [esi],dl
  40e7f7:	lsl    esp,WORD PTR [eax]
  40e7fa:	or     eax,0x1a62319d
  40e7ff:	xchg   esp,eax
  40e800:	pop    edi
  40e801:	lock jmp 0xa808ad50
  40e807:	fnsave [edx]
  40e809:	daa    
  40e80a:	(bad)  
  40e80b:	fcom   DWORD PTR [esi-0x3a]
  40e80e:	add    BYTE PTR [ebp-0x60d1e9aa],al
  40e814:	pop    edi
  40e815:	aaa    
  40e816:	test   al,0x2f
  40e818:	repnz idiv BYTE PTR [eax-0x27]
  40e81c:	push   esp
  40e81d:	mov    edi,0x1247e02
  40e822:	and    esp,DWORD PTR [ebx]
  40e824:	mul    cl
  40e826:	add    DWORD PTR [ebp-0x3d4e28bb],ebx
  40e82c:	ret    0x8ab1
  40e82f:	sbb    ecx,DWORD PTR [ebp+0x881e161]
  40e835:	jo     0x40e868
  40e837:	sub    eax,0x8b71893a
  40e83c:	mov    eax,ds:0xc7bf045
  40e841:	xchg   ebp,eax
  40e842:	cmp    edi,DWORD PTR [esi+0x65758c0]
  40e848:	jle    0x40e834
  40e84a:	pop    es
  40e84b:	sub    al,0x77
  40e84d:	jmp    0x40e860
  40e84f:	sub    DWORD PTR ds:0xc9cb5de1,esp
  40e855:	and    al,0x27
  40e857:	or     DWORD PTR [esp+eax*8+0x1737af39],edi
  40e85e:	inc    ebp
  40e85f:	nop
  40e860:	bsf    edx,DWORD PTR [edx]
  40e863:	xor    esp,DWORD PTR [ebp-0x43a2aa36]
  40e869:	and    eax,0x796025c6
  40e86e:	jbe    0x40e896
  40e870:	cli    
  40e871:	bound  edx,QWORD PTR [ebx-0x646b3258]
  40e877:	lods   eax,DWORD PTR ds:[esi]
  40e878:	sbb    dh,BYTE PTR [eax]
  40e87a:	loopne 0x40e8f7
  40e87c:	fdiv   QWORD PTR [ecx]
  40e87e:	and    cl,BYTE PTR [edi+0xd]
  40e881:	or     eax,0xdaf9cd8a
  40e886:	popa   
  40e887:	bound  ebx,QWORD PTR [edi-0x76]
  40e88a:	call   0xb1fa:0xff6763b5
  40e891:	lahf   
  40e892:	pop    edx
  40e893:	call   0x521a0fa1
  40e898:	je     0x40e8be
  40e89a:	jmp    0xa9cf35d3
  40e89f:	repz data16 sbb al,0xa9
  40e8a3:	stc    
  40e8a4:	dec    ecx
  40e8a5:	stos   BYTE PTR es:[edi],al
  40e8a6:	sbb    eax,0x4e17aea7
  40e8ab:	ds pushf 
  40e8ad:	xor    edi,DWORD PTR [ecx]
  40e8af:	push   esi
  40e8b0:	data16 out dx,al
  40e8b2:	jns    0x40e8ae
  40e8b4:	add    edi,ebp
  40e8b6:	push   0x3aa3bb7e
  40e8bb:	call   0xe38b:0xe7898320
  40e8c2:	inc    edx
  40e8c3:	shr    ecx,1
  40e8c5:	push   edx
  40e8c6:	jmp    0xe83e:0xbe9231cb
  40e8cd:	fwait
  40e8ce:	pop    ss
  40e8cf:	inc    eax
  40e8d0:	pop    ecx
  40e8d1:	loopne 0x40e94d
  40e8d3:	out    0xbe,eax
  40e8d5:	repnz or al,0x94
  40e8d8:	mul    BYTE PTR [esp+ebx*4-0x44]
  40e8dc:	scas   eax,DWORD PTR es:[di]
  40e8de:	call   0x6fd3:0xfe8ce38f
  40e8e5:	dec    ebx
  40e8e6:	ret    0xccca
  40e8e9:	pop    ebx
  40e8ea:	and    BYTE PTR [edi+0x250d5122],al
  40e8f0:	cwde   
  40e8f1:	test   ebx,ecx
  40e8f3:	adc    al,0xf7
  40e8f5:	int    0x6a
  40e8f7:	lahf   
  40e8f8:	aaa    
  40e8f9:	out    0xa4,al
  40e8fb:	out    0x12,eax
  40e8fd:	adc    edx,ebp
  40e8ff:	js     0x40e884
  40e901:	scas   al,BYTE PTR es:[edi]
  40e902:	lods   eax,DWORD PTR ds:[esi]
  40e903:	sahf   
  40e904:	xor    eax,ecx
  40e906:	mov    bh,0x7c
  40e908:	call   0x3952dd16
  40e90d:	icebp  
  40e90e:	aam    0x60
  40e910:	paddd  mm4,mm6
  40e913:	sbb    eax,0xeaebfe1a
  40e918:	pop    ss
  40e919:	(bad)  
  40e91a:	mov    esi,0xbac8ef58
  40e91f:	sbb    al,0x71
  40e921:	fsubrp st(3),st
  40e923:	cmp    cl,BYTE PTR [edx-0x5ca6af94]
  40e929:	test   DWORD PTR [edx-0x5c94701f],esp
  40e92f:	popf   
  40e930:	cmp    al,ah
  40e932:	test   DWORD PTR [edi-0x52],0xf15dc018
  40e939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e93a:	gs das 
  40e93c:	(bad)  
  40e93d:	cmp    DWORD PTR [ebp+0x19],ebp
  40e940:	ret    
  40e941:	(bad)  
  40e942:	fstp   DWORD PTR [ebx-0x59ee3b93]
  40e948:	cmp    BYTE PTR [edi],cl
  40e94a:	dec    ebp
  40e94b:	cli    
  40e94c:	cdq    
  40e94d:	lds    ebp,FWORD PTR [ecx+0x5f]
  40e950:	adc    ch,BYTE PTR [eax-0x4d]
  40e953:	add    eax,0xeb837782
  40e958:	push   ss
  40e959:	(bad)  
  40e95a:	and    eax,0xf9f28b1d
  40e95f:	ins    DWORD PTR es:[edi],dx
  40e960:	popf   
  40e961:	dec    ebp
  40e962:	sbb    eax,0xd9413e3e
  40e967:	gs jbe 0x40e8ed
  40e96a:	xchg   edi,ecx
  40e96c:	jbe    0x40e926
  40e96e:	les    ebx,FWORD PTR [edi]
  40e970:	pop    ss
  40e971:	pop    ss
  40e972:	inc    esp
  40e973:	in     al,0x86
  40e975:	stos   BYTE PTR es:[edi],al
  40e976:	push   0x410f11bd
  40e97b:	repz imul ecx,DWORD PTR [ecx+eiz*2+0x17],0x89f91cd7
  40e984:	jbe    0x40e92d
  40e986:	fs pop edx
  40e988:	mov    edx,0x654ce74a
  40e98d:	nop
  40e98e:	add    al,0xd3
  40e990:	adc    DWORD PTR [eax],ecx
  40e992:	das    
  40e993:	jp     0x40e999
  40e995:	xchg   ebx,eax
  40e996:	push   ss
  40e997:	dec    ebx
  40e998:	push   ebx
  40e999:	fcmove st,st(2)
  40e99b:	inc    eax
  40e99c:	push   es
  40e99d:	retf   0xe6d3
  40e9a0:	loope  0x40e9ee
  40e9a2:	in     al,dx
  40e9a3:	aad    0x86
  40e9a5:	push   ecx
  40e9a6:	inc    eax
  40e9a7:	mov    edi,DWORD PTR [esp+eiz*2+0x6be30a53]
  40e9ae:	push   ecx
  40e9af:	test   eax,0x66edbd83
  40e9b4:	imul   esp,edi,0x8a38e10f
  40e9ba:	inc    eax
  40e9bb:	jl     0x40ea19
  40e9bd:	cli    
  40e9be:	add    DWORD PTR [edx+ecx*4-0x6efa8d5e],edx
  40e9c5:	or     al,0x5c
  40e9c7:	sbb    BYTE PTR [ebx+0x25b5ecdb],dh
  40e9cd:	inc    ecx
  40e9ce:	pusha  
  40e9cf:	rcl    BYTE PTR [edx+0x72fbb801],1
  40e9d5:	mov    eax,esp
  40e9d7:	mov    ss,WORD PTR [edi+0x59]
  40e9da:	fisttp QWORD PTR [eax-0x6c]
  40e9dd:	mov    dl,BYTE PTR [eax+0x44461f0b]
  40e9e3:	dec    esi
  40e9e4:	or     BYTE PTR ds:0x4d40518f,bh
  40e9ea:	xor    al,0x68
  40e9ec:	fwait
  40e9ed:	ss pop ds
  40e9ef:	pop    es
  40e9f0:	rcr    DWORD PTR es:[eax+eiz*2+0x3ce1970c],1
  40e9f8:	or     cl,bl
  40e9fa:	or     al,0x40
  40e9fc:	xchg   DWORD PTR [ebp+0x5dbadda],ebp
  40ea02:	mov    eax,ds:0x51378c1
  40ea07:	popa   
  40ea08:	cli    
  40ea09:	xor    ah,bl
  40ea0b:	fcom   QWORD PTR [ecx]
  40ea0d:	push   ss
  40ea0e:	cmp    edx,esi
  40ea10:	sbb    eax,0x9d12643b
  40ea15:	sar    bh,cl
  40ea17:	pop    ecx
  40ea18:	sbb    al,0x57
  40ea1a:	xor    edx,ebp
  40ea1c:	add    BYTE PTR [ebp-0x447ea784],ah
  40ea22:	pop    ecx
  40ea23:	loope  0x40ea79
  40ea25:	and    BYTE PTR [esi-0x471f24ce],dh
  40ea2b:	sahf   
  40ea2c:	xlat   BYTE PTR fs:[ebx]
  40ea2e:	rol    DWORD PTR [ebx-0x66370161],1
  40ea34:	and    eax,0x987350a8
  40ea39:	pushf  
  40ea3a:	sbb    eax,0x4c033b2f
  40ea3f:	sub    esi,ebx
  40ea41:	enter  0x3a76,0x8f
  40ea45:	fchs   
  40ea47:	sbb    edi,DWORD PTR [ebx+ecx*1]
  40ea4a:	add    al,0xa7
  40ea4c:	(bad)
  40ea4f:	add    eax,0xa3cea18a
  40ea54:	jmp    DWORD PTR [ecx+0x3d]
  40ea57:	lock push ebp
  40ea59:	cs jns 0x40ea99
  40ea5c:	mov    WORD PTR [eax],ss
  40ea5e:	inc    ebx
  40ea5f:	pushf  
  40ea60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea61:	xchg   esi,eax
  40ea62:	or     ah,BYTE PTR [ebp+0xe415a50]
  40ea68:	pop    ss
  40ea69:	jge    0x40eaea
  40ea6b:	dec    esi
  40ea6c:	or     eax,0xc8799f8f
  40ea71:	out    dx,al
  40ea72:	fsubr  DWORD PTR [edi-0x4390b054]
  40ea78:	cmp    esp,ecx
  40ea7a:	push   edi
  40ea7b:	cmp    eax,0x8d4c2cf3
  40ea80:	(bad)  gs:[ebx-0x271fb2db]
  40ea87:	sbb    al,ch
  40ea89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea8a:	jo     0x40eb04
  40ea8c:	scas   eax,DWORD PTR es:[edi]
  40ea8d:	cmp    eax,0x4bc49c87
  40ea92:	mov    ch,0xba
  40ea94:	sbb    al,0x1f
  40ea96:	les    eax,FWORD PTR [eax]
  40ea98:	leave  
  40ea99:	xor    ecx,DWORD PTR [eax]
  40ea9b:	push   ds
  40ea9c:	mov    edx,0x3fe80d31
  40eaa1:	call   FWORD PTR [ebx+ebx*1]
  40eaa4:	retf   
  40eaa5:	sbb    al,0xf4
  40eaa7:	pushf  
  40eaa8:	push   edx
  40eaa9:	cwde   
  40eaaa:	cwde   
  40eaab:	mov    BYTE PTR [ebp+0x46d6c09c],ch
  40eab1:	xchg   ebx,eax
  40eab2:	fidiv  WORD PTR [esi-0x7aa22333]
  40eab8:	push   ss
  40eab9:	mov    bh,0x5
  40eabb:	aaa    
  40eabc:	dec    esp
  40eabd:	(bad)
  40eac3:	aam    0x67
  40eac5:	je     0x40ea4a
  40eac7:	out    dx,al
  40eac8:	mov    al,0x25
  40eaca:	and    BYTE PTR [ebp+0xa709267],bh
  40ead0:	mov    ebp,0x22e3a2b1
  40ead5:	div    DWORD PTR [ecx]
  40ead7:	push   eax
  40ead8:	and    BYTE PTR [ebx],dl
  40eada:	cmp    edi,DWORD PTR [ebx]
  40eadc:	push   ecx
  40eadd:	jmp    0xca71b41b
  40eae2:	pop    esp
  40eae3:	je     0x40eb10
  40eae5:	mov    BYTE PTR ds:0xdf1510b1,dl
  40eaeb:	add    eax,0x57c83327
  40eaf0:	and    DWORD PTR ds:0x6e413012,edx
  40eaf6:	lods   eax,DWORD PTR ds:[esi]
  40eaf7:	mov    edi,0x35077d8a
  40eafc:	or     al,0x13
  40eafe:	ret    0x6dd
  40eb01:	nop
  40eb02:	add    al,0x53
  40eb04:	call   0x6af66b9f
  40eb09:	sub    DWORD PTR [edi],ecx
  40eb0b:	jno    0x40ea97
  40eb0d:	(bad)  
  40eb0e:	push   0xffffffc6
  40eb10:	pop    ecx
  40eb11:	adc    BYTE PTR [ecx+eiz*2],ch
  40eb14:	inc    ecx
  40eb15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb16:	das    
  40eb17:	inc    esp
  40eb18:	mov    dh,0x6
  40eb1a:	mov    esi,0xcefdf7b4
  40eb1f:	push   esi
  40eb20:	sbb    dl,BYTE PTR [ebp-0x47132846]
  40eb26:	mov    eax,ds:0x68687933
  40eb2b:	push   0x1d0c90e9
  40eb30:	fmulp  st(1),st
  40eb32:	sbb    eax,0x819671c6
  40eb37:	xor    DWORD PTR [ebx],0x60
  40eb3a:	inc    ebp
  40eb3b:	jnp    0x40eb72
  40eb3d:	idiv   DWORD PTR [esp+edx*2+0x7cdaafe1]
  40eb44:	arpl   ax,bx
  40eb46:	jmp    0x517b:0x4e92b326
  40eb4d:	ret    
  40eb4e:	pop    eax
  40eb4f:	fld    DWORD PTR [edx-0x1bdb29dc]
  40eb55:	xor    eax,0x6c92896d
  40eb5a:	icebp  
  40eb5b:	shr    BYTE PTR [edi+0x2f],0x66
  40eb5f:	pusha  
  40eb60:	or     dl,BYTE PTR [ebp-0x13542c]
  40eb66:	shl    DWORD PTR [edi-0x3b],1
  40eb69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb6a:	jge    0x40eb03
  40eb6c:	and    al,0xf5
  40eb6e:	pop    ecx
  40eb70:	or     al,0x24
  40eb72:	call   0x1554d90f
  40eb77:	mov    ch,0x47
  40eb79:	xchg   ebx,eax
  40eb7a:	push   ecx
  40eb7b:	and    ch,BYTE PTR [ebp+ebp*2-0x14892bed]
  40eb82:	daa    
  40eb83:	pusha  
  40eb84:	ins    DWORD PTR es:[edi],dx
  40eb85:	ds ja  0x40eb8e
  40eb88:	cmp    DWORD PTR [ebx+0x5b],edx
  40eb8b:	dec    ebx
  40eb8c:	dec    ebp
  40eb8d:	into   
  40eb8e:	nop
  40eb8f:	sub    al,0x84
  40eb91:	cmp    ebp,DWORD PTR [esi+0x29]
  40eb94:	scas   al,BYTE PTR es:[edi]
  40eb95:	jmp    0x40ebdf
  40eb97:	leave  
  40eb98:	lds    edi,FWORD PTR [eax]
  40eb9a:	hlt    
  40eb9b:	xchg   edi,eax
  40eb9c:	push   ss
  40eb9d:	cdq    
  40eb9e:	push   ebp
  40eb9f:	rcl    BYTE PTR [edi],cl
  40eba1:	in     eax,0xff
  40eba3:	je     0x40eb7e
  40eba5:	lods   al,BYTE PTR ds:[esi]
  40eba6:	lods   al,BYTE PTR ds:[esi]
  40eba7:	lock adc ch,BYTE PTR [ecx-0x563c7f07]
  40ebae:	pushf  
  40ebaf:	cmp    esp,edx
  40ebb1:	lods   al,BYTE PTR ds:[esi]
  40ebb2:	pop    ecx
  40ebb3:	jo     0x40eb52
  40ebb5:	shr    BYTE PTR [esi+0x33e24564],1
  40ebbb:	xchg   ebx,eax
  40ebbc:	enter  0x6195,0x9b
  40ebc0:	xor    dh,al
  40ebc2:	dec    edi
  40ebc3:	cwde   
  40ebc4:	cmp    ch,ah
  40ebc6:	add    DWORD PTR [esi+0x39],ebp
  40ebc9:	inc    ecx
  40ebca:	mov    ebx,0x9e774e8b
  40ebcf:	inc    eax
  40ebd0:	mov    dl,0x25
  40ebd2:	sahf   
  40ebd3:	xchg   DWORD PTR [ebp-0x62d83dfe],ebp
  40ebd9:	ins    DWORD PTR es:[edi],dx
  40ebda:	mov    es,esp
  40ebdc:	clc    
  40ebdd:	jmp    0x2c76:0x5d836e37
  40ebe4:	pop    ebx
  40ebe5:	lds    eax,FWORD PTR [eax+0x6d5e7b27]
  40ebeb:	inc    edx
  40ebec:	cmc    
  40ebed:	sahf   
  40ebee:	idiv   BYTE PTR ds:0x5150a024
  40ebf4:	pushf  
  40ebf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebf6:	sub    BYTE PTR [esi-0x2d0ce491],dl
  40ebfc:	pmuludq mm5,mm7
  40ebff:	or     DWORD PTR [esi+esi*2],edi
  40ec02:	popa   
  40ec03:	mov    ds:0x635c0c92,al
  40ec08:	cmp    BYTE PTR [eax],dl
  40ec0a:	fild   DWORD PTR [edi-0x38913b36]
  40ec10:	add    al,0xb
  40ec12:	pop    ds
  40ec13:	add    ecx,DWORD PTR [ecx+0x23]
  40ec16:	(bad)  
  40ec17:	push   eax
  40ec18:	lds    esp,FWORD PTR ds:0x471d79d2
  40ec1e:	loop   0x40ec8e
  40ec20:	ss enter 0x9fe8,0x89
  40ec25:	push   eax
  40ec26:	in     al,0x4c
  40ec28:	dec    ebx
  40ec29:	outs   dx,BYTE PTR ds:[esi]
  40ec2a:	jge    0x40ec4e
  40ec2c:	call   0x5aa1ac65
  40ec31:	cmp    esi,ebp
  40ec33:	loopne 0x40ec2c
  40ec35:	sub    DWORD PTR [ebx-0x5],ebx
  40ec38:	push   ebp
  40ec39:	mov    WORD PTR [esi],?
  40ec3b:	retf   0xf5aa
  40ec3e:	test   BYTE PTR [ebp+0xe],ch
  40ec41:	dec    eax
  40ec42:	xchg   esi,eax
  40ec43:	push   edi
  40ec44:	push   0xa8002bef
  40ec49:	dec    ebx
  40ec4a:	enter  0x6e8e,0xea
  40ec4e:	aad    0xe9
  40ec50:	push   esi
  40ec51:	pop    esi
  40ec52:	xchg   DWORD PTR [ebx+0x208759ed],edi
  40ec58:	je     0x40ec32
  40ec5a:	lds    ebp,FWORD PTR [ebx-0x40]
  40ec5d:	mov    eax,0xe1b03f38
  40ec62:	mov    al,0xb0
  40ec64:	mov    ecx,DWORD PTR [esi+esi*1-0x27]
  40ec68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec69:	sahf   
  40ec6a:	xchg   bl,ah
  40ec6c:	inc    ebx
  40ec6d:	adc    eax,0x9f9c30a9
  40ec72:	xor    bp,dx
  40ec75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec76:	pushf  
  40ec77:	iret   
  40ec78:	fadd   st(2),st
  40ec7a:	enter  0x5dae,0xe1
  40ec7e:	jl     0x40ec84
  40ec80:	or     BYTE PTR [ecx],bl
  40ec82:	dec    esp
  40ec83:	or     ebx,esp
  40ec85:	xor    eax,0xa9160b1a
  40ec8a:	lds    esp,FWORD PTR [ecx+0x10300a3f]
  40ec90:	or     eax,0x3c7faef1
  40ec95:	sub    bh,BYTE PTR [edx]
  40ec97:	rcl    DWORD PTR [edi],1
  40ec99:	mov    al,ds:0x5ff5d21b
  40ec9e:	jno    0x40ecbe
  40eca0:	push   0xfffffff1
  40eca2:	push   0x2d91f593
  40eca7:	inc    esi
  40eca8:	mov    bl,0x51
  40ecaa:	or     DWORD PTR [esi],edi
  40ecac:	or     al,BYTE PTR [eax]
  40ecae:	bound  ecx,QWORD PTR ds:0x6c227374
  40ecb4:	cdq    
  40ecb5:	in     al,0x62
  40ecb7:	in     al,dx
  40ecb8:	sti    
  40ecb9:	and    ch,ah
  40ecbb:	outs   dx,DWORD PTR ds:[esi]
  40ecbc:	scas   eax,DWORD PTR es:[edi]
  40ecbd:	fs dec edi
  40ecbf:	hlt    
  40ecc0:	out    dx,eax
  40ecc1:	jbe    0x40eccc
  40ecc3:	cmp    esi,eax
  40ecc5:	mov    ebx,0x74f5ecb3
  40ecca:	inc    esi
  40eccb:	xchg   ebx,eax
  40eccc:	out    0x64,eax
  40ecce:	dec    ecx
  40eccf:	dec    ebx
  40ecd0:	js     0x40ed15
  40ecd2:	and    edx,eax
  40ecd4:	push   0xf40d0e09
  40ecd9:	xor    bh,BYTE PTR [edx]
  40ecdb:	pop    edi
  40ecdc:	dec    ebp
  40ecdd:	adc    cl,BYTE PTR [edx-0x73]
  40ece0:	mov    eax,ds:0x91af89e0
  40ece5:	xor    cl,0xb8
  40ece8:	cmp    DWORD PTR [esi+0x71],esp
  40eceb:	nop    DWORD PTR [esi]
  40ecee:	cwde   
  40ecef:	pop    eax
  40ecf0:	push   ebp
  40ecf1:	sub    DWORD PTR [ecx-0x457b1904],esi
  40ecf7:	in     eax,0x92
  40ecf9:	nop
  40ecfa:	xor    ah,BYTE PTR [ecx*8-0x69ffae9]
  40ed01:	cmp    eax,0x8b3863cc
  40ed06:	mov    al,0xd1
  40ed08:	mov    bh,0xfd
  40ed0a:	jae    0x40ecf0
  40ed0c:	loop   0x40ec9f
  40ed0e:	out    dx,al
  40ed0f:	call   0xbff8:0xd3f2d107
  40ed16:	aaa    
  40ed17:	sub    esi,DWORD PTR [eax+eiz*8-0x3b]
  40ed1b:	xor    BYTE PTR [eax+0x2b275119],cl
  40ed21:	adc    al,0xcc
  40ed23:	cld    
  40ed24:	dec    esp
  40ed25:	jecxz  0x40ed42
  40ed27:	std    
  40ed28:	xchg   edi,eax
  40ed29:	sub    BYTE PTR [esi-0x245e5727],0x46
  40ed30:	out    0x9e,al
  40ed32:	retf   
  40ed33:	sbb    ah,BYTE PTR [ebx]
  40ed35:	push   0x91ad6339
  40ed3a:	jg     0x40ecbe
  40ed3c:	inc    edx
  40ed3d:	or     esi,DWORD PTR [edx+0x1399ce69]
  40ed43:	js     0x40ed31
  40ed45:	xchg   edi,eax
  40ed46:	inc    ebx
  40ed47:	sbb    al,0xdf
  40ed49:	adc    DWORD PTR [eax-0x2d99405d],edx
  40ed4f:	sub    cl,al
  40ed51:	mov    edx,edi
  40ed53:	popa   
  40ed54:	sub    ch,BYTE PTR [esi+eax*8+0x418b462e]
  40ed5b:	and    ecx,DWORD PTR [eax-0x49f266c2]
  40ed61:	push   es
  40ed62:	div    DWORD PTR [edx-0x691a78bf]
  40ed68:	xchg   ecx,eax
  40ed69:	icebp  
  40ed6a:	sahf   
  40ed6b:	push   es
  40ed6c:	ret    
  40ed6d:	push   eax
  40ed6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed6f:	sub    BYTE PTR [ecx+0x63e1910],bh
  40ed75:	or     dh,BYTE PTR [edx+edx*1]
  40ed78:	dec    eax
  40ed79:	or     al,0x38
  40ed7b:	jle    0x40edba
  40ed7d:	fdivr  st(6),st
  40ed7f:	stc    
  40ed80:	loop   0x40ed2b
  40ed82:	mov    eax,0x5e0cc63
  40ed87:	ret    
  40ed88:	rcl    DWORD PTR [esi],cl
  40ed8a:	adc    al,0x20
  40ed8c:	xor    DWORD PTR [esi],0x14bc11af
  40ed92:	xor    BYTE PTR [edx+0x21],bl
  40ed95:	test   al,0x51
  40ed97:	xor    bh,BYTE PTR [eax]
  40ed99:	(bad)  
  40ed9a:	dec    esp
  40ed9b:	test   ecx,0x66e75d9
  40eda1:	or     eax,0x220f39f6
  40eda6:	mov    al,BYTE PTR [ecx+0x5a]
  40eda9:	add    esp,DWORD PTR [edi+0x5c]
  40edac:	xchg   BYTE PTR [eax-0x43],ch
  40edaf:	in     al,0x3d
  40edb1:	cs iret 
  40edb3:	ror    DWORD PTR [edx-0x56],cl
  40edb6:	(bad)  
  40edb7:	and    ecx,edi
  40edb9:	cmp    edx,eax
  40edbb:	and    dh,BYTE PTR [ecx-0x6d]
  40edbe:	mov    esi,0x72ec9f7e
  40edc3:	add    esp,DWORD PTR [eax+0x3]
  40edc6:	aas    
  40edc7:	sbb    eax,DWORD PTR [ebx]
  40edc9:	addr16 cwde 
  40edcb:	cmp    ebp,ebp
  40edcd:	mov    ah,0xe6
  40edcf:	out    0xb9,al
  40edd1:	pop    ss
  40edd2:	inc    ebp
  40edd3:	or     ch,BYTE PTR [esi+ecx*4-0x1e]
  40edd7:	mov    ebx,0x380a28e8
  40eddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eddd:	pusha  
  40edde:	pop    ds
  40eddf:	pop    esi
  40ede0:	retf   0x899c
  40ede3:	fcom   QWORD PTR [eax]
  40ede5:	outs   dx,DWORD PTR ds:[esi]
  40ede6:	adc    BYTE PTR [ecx+ebp*1-0x3d],ah
  40edea:	pop    edi
  40edeb:	jle    0x40ee28
  40eded:	and    al,0xf6
  40edef:	xor    BYTE PTR [edi],0xf6
  40edf2:	xlat   BYTE PTR ds:[ebx]
  40edf3:	jb     0x40ee52
  40edf5:	mov    WORD PTR [ebx],ds
  40edf7:	pop    esi
  40edf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edf9:	jp     0x40ee3d
  40edfb:	xchg   ebp,eax
  40edfc:	adc    ecx,DWORD PTR ds:0xa4bbb1b2
  40ee02:	adc    al,0x99
  40ee04:	pop    eax
  40ee05:	dec    edi
  40ee06:	inc    eax
  40ee07:	jmp    0x4dc5ca37
  40ee0c:	pop    edx
  40ee0d:	mov    BYTE PTR [edx],al
  40ee0f:	icebp  
  40ee10:	jns    0x40ee6b
  40ee12:	test   edx,esp
  40ee14:	or     ch,BYTE PTR [eax-0x34]
  40ee17:	xchg   esi,eax
  40ee18:	xchg   esp,eax
  40ee19:	stc    
  40ee1a:	inc    esp
  40ee1b:	sub    esp,eax
  40ee1d:	arpl   WORD PTR [ecx-0x36],bp
  40ee20:	fwait
  40ee21:	call   0x450c5d27
  40ee26:	mov    ch,BYTE PTR [eax]
  40ee28:	mov    eax,DWORD PTR [ebx-0x42b42311]
  40ee2e:	call   0x92163dc1
  40ee33:	test   esi,ecx
  40ee35:	sub    bl,0x2
  40ee38:	cmp    DWORD PTR [esi-0x75],esp
  40ee3b:	retf   
  40ee3c:	push   edi
  40ee3d:	push   edi
  40ee3e:	mov    cl,0xdc
  40ee40:	out    0x15,eax
  40ee42:	clc    
  40ee43:	imul   edx,DWORD PTR [ebx],0x6e27dbd4
  40ee49:	dec    esp
  40ee4a:	pop    esi
  40ee4b:	sub    esi,esi
  40ee4d:	call   0xcd445f39
  40ee52:	sub    esp,DWORD PTR [edx]
  40ee54:	xor    eax,0x5f6125d1
  40ee59:	dec    ebx
  40ee5a:	pop    es
  40ee5b:	lahf   
  40ee5c:	mov    eax,0xeb80fb72
  40ee61:	jne    0x40ee3f
  40ee63:	fdivr  QWORD PTR [eax]
  40ee65:	sar    DWORD PTR [ebx+0x8429b99],1
  40ee6b:	shl    BYTE PTR [ebx+ebp*2-0x59],cl
  40ee6f:	arpl   WORD PTR [ebx],dx
  40ee71:	push   0x31cf25f3
  40ee76:	inc    esp
  40ee77:	inc    eax
  40ee78:	out    0x39,eax
  40ee7a:	pop    ss
  40ee7b:	dec    edi
  40ee7c:	cmc    
  40ee7d:	shl    ah,1
  40ee7f:	inc    ecx
  40ee80:	shl    BYTE PTR [ecx+0xd],cl
  40ee83:	(bad)
  40ee87:	addr16 pop ss
  40ee89:	sbb    al,0x5e
  40ee8b:	sbb    dl,BYTE PTR [ebx]
  40ee8d:	and    eax,0xc59c5397
  40ee92:	inc    ebx
  40ee93:	xchg   ebp,eax
  40ee94:	das    
  40ee95:	stos   DWORD PTR es:[edi],eax
  40ee96:	sbb    edi,eax
  40ee98:	jmp    0x3e8207e6
  40ee9d:	pusha  
  40ee9e:	btc    DWORD PTR [edx+0x22],edi
  40eea2:	jmp    0x89ee8367
  40eea7:	in     eax,dx
  40eea8:	xlat   BYTE PTR ds:[ebx]
  40eea9:	pop    ebp
  40eeaa:	push   0x58
  40eeac:	addr16 mov esp,0xd5e363ee
  40eeb2:	add    dl,al
  40eeb4:	ret    0xe052
  40eeb7:	jecxz  0x40eed5
  40eeb9:	add    BYTE PTR [esi-0x772c3d1e],dl
  40eebf:	repnz fild WORD PTR [edi+0x51]
  40eec3:	call   0xc3b9:0xbe2aa149
  40eeca:	and    DWORD PTR [eax+0x41e499eb],edx
  40eed0:	push   esp
  40eed1:	ret    
  40eed2:	cwde   
  40eed3:	in     al,dx
  40eed4:	push   eax
  40eed5:	repnz xor BYTE PTR [edx+0x70],0x1b
  40eeda:	and    ch,BYTE PTR [edi+0x6cd2f7a5]
  40eee0:	xchg   edi,eax
  40eee1:	out    0x94,al
  40eee3:	ds push esp
  40eee5:	xor    al,0x4d
  40eee7:	ins    DWORD PTR es:[edi],dx
  40eee8:	das    
  40eee9:	imul   esp,DWORD PTR [ecx+0x7a],0x27112d9e
  40eef0:	bound  edx,QWORD PTR [eax+ecx*4+0x7d22c4f0]
  40eef7:	iret   
  40eef8:	(bad)
  40eefb:	mov    bh,0x68
  40eefd:	sbb    al,0x25
  40eeff:	or     ebp,DWORD PTR [esi-0x2572d671]
  40ef05:	mov    esp,0xa91bd1f2
  40ef0a:	test   DWORD PTR [eax],0xe7c7fe4f
  40ef10:	(bad)  
  40ef11:	jbe    0x40ef72
  40ef13:	daa    
  40ef14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef15:	mov    bh,0x38
  40ef17:	push   ss
  40ef18:	sbb    eax,0x7bf4e1cc
  40ef1d:	mov    edx,0x1f7958e8
  40ef22:	iret   
  40ef23:	jl     0x40eedc
  40ef25:	cs mov ?,ebp
  40ef28:	std    
  40ef29:	repz jmp 0x316:0xb41b7c46
  40ef31:	out    dx,eax
  40ef32:	add    DWORD PTR [ebx+0x17],esi
  40ef35:	add    al,0xff
  40ef37:	sbb    DWORD PTR [edx+ebp*8+0x77333e80],ebp
  40ef3e:	int    0x67
  40ef40:	sti    
  40ef41:	sbb    esi,DWORD PTR [esp+ecx*8-0x7bb6a3a]
  40ef48:	aam    0x74
  40ef4a:	push   cs
  40ef4b:	fsubr  DWORD PTR [edi-0x5e678f8b]
  40ef51:	pop    ds
  40ef52:	call   0x1d268cb3
  40ef57:	pushf  
  40ef58:	mov    al,0xca
  40ef5a:	cwde   
  40ef5b:	mov    ds:0xe930b020,eax
  40ef60:	pop    eax
  40ef61:	arpl   WORD PTR [ecx-0x10e01777],cx
  40ef67:	jnp    0x40ef96
  40ef69:	jp     0x40efea
  40ef6b:	aad    0x36
  40ef6d:	mov    BYTE PTR [ebx-0x27],cl
  40ef70:	daa    
  40ef71:	test   al,0x9b
  40ef73:	push   cs
  40ef74:	in     eax,0x2b
  40ef76:	call   0x1f82ef0a
  40ef7b:	dec    edi
  40ef7c:	int    0x38
  40ef7e:	jmp    0xf755:0x1ca094a0
  40ef85:	lock (bad) 
  40ef87:	xlat   BYTE PTR ds:[ebx]
  40ef88:	ds popf 
  40ef8a:	add    eax,0x4a445776
  40ef8f:	sbb    bl,dl
  40ef91:	scas   eax,DWORD PTR es:[edi]
  40ef92:	scas   al,BYTE PTR es:[edi]
  40ef93:	pop    gs
  40ef95:	int3   
  40ef96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef97:	jae    0x40efca
  40ef99:	push   esi
  40ef9a:	add    al,0x35
  40ef9c:	push   0xe3c8213f
  40efa1:	pop    esi
  40efa2:	or     al,0x64
  40efa4:	or     bh,dh
  40efa6:	pop    es
  40efa7:	std    
  40efa8:	dec    esp
  40efa9:	(bad)  
  40efaa:	loop   0x40efa2
  40efac:	sub    cl,BYTE PTR [ecx+ebp*2-0x6daee43a]
  40efb3:	mov    edx,0x3c25a23c
  40efb8:	sbb    DWORD PTR [esi+0x43bcbff8],eax
  40efbe:	cmp    BYTE PTR [edx-0x6f],0xc6
  40efc2:	push   esi
  40efc3:	dec    edi
  40efc4:	xchg   ebx,eax
  40efc5:	mov    ss,ebx
  40efc7:	add    al,0xec
  40efc9:	cmp    DWORD PTR [esi-0x13],eax
  40efcc:	lods   al,BYTE PTR ds:[esi]
  40efcd:	mov    edx,0x2c2c5778
  40efd2:	mov    dl,0xe1
  40efd4:	inc    ebx
  40efd5:	xchg   ebp,eax
  40efd6:	(bad)  
  40efd7:	jp     0x40ef5f
  40efd9:	xchg   ecx,eax
  40efda:	dec    ebp
  40efdb:	xchg   esi,eax
  40efdc:	jae    0x40f04a
  40efde:	aaa    
  40efdf:	dec    edx
  40efe0:	mov    ecx,0xa36cb59
  40efe5:	cmc    
  40efe6:	ret    
  40efe7:	retf   0x6042
  40efea:	enter  0x1f13,0x5b
  40efee:	inc    eax
  40efef:	mov    ch,0xf9
  40eff1:	jge    0x40f059
  40eff3:	popa   
  40eff4:	popf   
  40eff5:	fcom   st(0)
  40eff7:	(bad)  
  40eff8:	imul   ecx,DWORD PTR [eax+0x605c8eb1],0xffffff91
  40efff:	mov    ?,WORD PTR [ecx+eax*2]
  40f002:	and    DWORD PTR [esi+edi*4-0x461d6d65],0x72c898c3
  40f00d:	test   edx,0xfba70013
  40f013:	sbb    DWORD PTR [ebx],ecx
  40f015:	ret    
  40f016:	ds xchg edi,eax
  40f018:	mov    esi,eax
  40f01a:	cmp    eax,0xa00e3bea
  40f01f:	sub    ebp,edi
  40f021:	pop    ecx
  40f022:	sub    BYTE PTR [esi],ah
  40f024:	jecxz  0x40f03e
  40f026:	mov    al,0xc9
  40f028:	test   BYTE PTR [esi+0x2b01c255],bl
  40f02e:	cld    
  40f02f:	xor    DWORD PTR [ebp+0x2e],0x34
  40f033:	cmp    ch,ah
  40f035:	das    
  40f036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f037:	inc    edi
  40f038:	loope  0x40f001
  40f03a:	jno    0x40f07d
  40f03c:	imul   ecx
  40f03e:	js     0x40f07d
  40f040:	jmp    0x40f04e
  40f042:	sar    BYTE PTR [eax+0xe56112a],cl
  40f048:	mov    ebp,0x71d5c243
  40f04d:	adc    eax,eax
  40f04f:	mov    al,ds:0x1f137335
  40f054:	addr16 aas 
  40f056:	pop    eax
  40f057:	inc    ecx
  40f058:	pop    ds
  40f059:	gs retf 
  40f05b:	dec    edx
  40f05c:	retf   0x7b1f
  40f05f:	jmp    0x451b7535
  40f064:	lods   al,BYTE PTR ds:[esi]
  40f065:	lods   al,BYTE PTR ds:[esi]
  40f066:	inc    ebx
  40f067:	mov    BYTE PTR [eax-0xf3fb8a7],dh
  40f06d:	outs   dx,DWORD PTR ds:[esi]
  40f06e:	push   ds
  40f06f:	sub    BYTE PTR [ebx],dh
  40f071:	or     al,0xd3
  40f073:	mov    ds:0xc993237d,al
  40f078:	pop    ss
  40f079:	clc    
  40f07a:	mov    ds:0x42257349,al
  40f07f:	xchg   DWORD PTR [ecx+0x4ee0b2a1],esp
  40f085:	scas   eax,DWORD PTR es:[edi]
  40f086:	add    esi,DWORD PTR [ecx-0x720f47d5]
  40f08c:	mov    al,0x19
  40f08e:	ret    
  40f08f:	sbb    ebp,DWORD PTR [esi-0x49]
  40f092:	in     al,0x27
  40f094:	sub    DWORD PTR [edx],esp
  40f096:	hlt    
  40f097:	or     eax,0x5cf8b7c
  40f09c:	aaa    
  40f09d:	outs   dx,DWORD PTR ds:[esi]
  40f09e:	pop    es
  40f09f:	add    BYTE PTR [ebx+0x67],dl
  40f0a2:	mov    edx,0x9b9a73ec
  40f0a7:	icebp  
  40f0a8:	icebp  
  40f0a9:	das    
  40f0aa:	jnp    0x40f0df
  40f0ac:	mov    eax,ds:0x60a71ba1
  40f0b1:	xor    ecx,ecx
  40f0b3:	mov    ch,0x83
  40f0b5:	loop   0x40f0b0
  40f0b7:	xor    DWORD PTR [edi+0x52],ebx
  40f0ba:	cmp    ecx,DWORD PTR [ecx]
  40f0bc:	cs dec ebp
  40f0be:	sub    BYTE PTR [esi],0x56
  40f0c1:	mov    eax,ds:0x7c9c2dc0
  40f0c6:	cmp    al,0x21
  40f0c8:	mov    edx,0x6b9d81c7
  40f0cd:	mov    edx,0x1a07b155
  40f0d2:	stc    
  40f0d3:	(bad)
  40f0d6:	xchg   edi,eax
  40f0d7:	sbb    DWORD PTR [edi-0x4f],esi
  40f0da:	std    
  40f0db:	sub    dh,bh
  40f0dd:	push   ss
  40f0de:	cmp    ebx,DWORD PTR [edx]
  40f0e0:	pushf  
  40f0e1:	popf   
  40f0e2:	pop    edx
  40f0e3:	int3   
  40f0e4:	repz xlat BYTE PTR ds:[ebx]
  40f0e6:	imul   BYTE PTR [eax]
  40f0e8:	push   0x2ffa28db
  40f0ed:	dec    ebx
  40f0ee:	mov    ebx,0xfc4a6a16
  40f0f3:	ins    BYTE PTR es:[edi],dx
  40f0f4:	outs   dx,BYTE PTR ds:[esi]
  40f0f5:	mov    edi,0x2ee58fbd
  40f0fa:	fcomp  DWORD PTR [esp+ebp*8-0x5ee5e8cb]
  40f101:	cwde   
  40f102:	jno    0x40f119
  40f104:	loopne 0x40f15e
  40f106:	jmp    0x2c8052cb
  40f10b:	mov    ds:0xffc2b999,eax
  40f110:	jge    0x40f14a
  40f112:	push   esi
  40f113:	sbb    DWORD PTR [ecx],0x7b
  40f116:	xlat   BYTE PTR ds:[ebx]
  40f117:	mov    eax,ds:0xf9703fc4
  40f11c:	aad    0xbd
  40f11e:	xor    eax,0xdb82177f
  40f123:	sub    esi,DWORD PTR [ebx-0x227f3c2a]
  40f129:	sar    DWORD PTR [esi],0x19
  40f12c:	outs   dx,BYTE PTR ds:[esi]
  40f12d:	sub    al,0xa9
  40f12f:	scas   al,BYTE PTR es:[edi]
  40f130:	xor    DWORD PTR [ebx+0x369caf07],edx
  40f136:	inc    ebp
  40f137:	push   0xd1641eed
  40f13c:	xchg   edx,eax
  40f13d:	xchg   ecx,eax
  40f13e:	mov    bh,0x6f
  40f140:	cmp    DWORD PTR [esi+0x52],0xcd00fbc6
  40f147:	inc    ebx
  40f148:	dec    ebp
  40f149:	inc    edx
  40f14a:	add    DWORD PTR [edi+0x45b6adbc],0xffffffda
  40f151:	sub    DWORD PTR [esi+edi*4],edi
  40f154:	in     al,dx
  40f155:	out    0x7d,al
  40f157:	pop    ss
  40f158:	inc    edi
  40f159:	push   0xffffffed
  40f15b:	retf   
  40f15c:	lock shl DWORD PTR [eax+eax*4-0x6],1
  40f161:	into   
  40f162:	jo     0x40f116
  40f164:	pop    edx
  40f165:	pop    es
  40f166:	pop    esi
  40f167:	enter  0x26a,0xab
  40f16b:	sti    
  40f16c:	je     0x40f1b4
  40f16e:	pop    edx
  40f16f:	sbb    dh,ch
  40f171:	aaa    
  40f172:	in     al,0x92
  40f174:	outs   dx,DWORD PTR ds:[esi]
  40f175:	stos   DWORD PTR es:[edi],eax
  40f176:	inc    DWORD PTR [ecx-0x16db9566]
  40f17c:	les    esi,FWORD PTR [edx-0x36]
  40f17f:	jp     0x40f1c1
  40f181:	arpl   WORD PTR [ecx],sp
  40f183:	out    dx,eax
  40f184:	pop    ecx
  40f185:	repz shr BYTE PTR [ebx-0x10e1d2b0],0x6f
  40f18d:	mov    eax,0x9019ec7a
  40f192:	call   DWORD PTR cs:[ecx]
  40f195:	ins    BYTE PTR es:[edi],dx
  40f196:	into   
  40f197:	in     eax,dx
  40f198:	pop    ebx
  40f199:	nop
  40f19a:	mov    dl,0x83
  40f19c:	popfw  
  40f19e:	jne    0x40f139
  40f1a0:	pop    esp
  40f1a1:	not    DWORD PTR [edi-0x71fd8de6]
  40f1a7:	test   al,0xcd
  40f1a9:	pop    esp
  40f1aa:	jo     0x40f190
  40f1ac:	sbb    DWORD PTR [edx-0x123285b9],0x48
  40f1b3:	mov    al,0x18
  40f1b5:	dec    eax
  40f1b6:	jmp    0xd8c6:0xea26b73d
  40f1bd:	mov    edi,0x69c590fb
  40f1c2:	mov    dl,0xa0
  40f1c4:	neg    BYTE PTR [edx+0x544458fa]
  40f1ca:	arpl   WORD PTR [ebp+0x4ea7ed2d],si
  40f1d0:	enter  0x6b87,0x80
  40f1d4:	inc    edi
  40f1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1d6:	mov    bl,0x74
  40f1d8:	cmp    DWORD PTR [esi],0x2e
  40f1db:	push   es
  40f1dc:	shl    DWORD PTR [edi+0x40],1
  40f1df:	xchg   DWORD PTR [esi-0x20],esp
  40f1e2:	cmp    eax,0xce564551
  40f1e7:	jmp    0x4f911a74
  40f1ec:	mov    eax,0xac2b09f7
  40f1f1:	das    
  40f1f2:	jae    0x40f1ae
  40f1f4:	fwait
  40f1f5:	cli    
  40f1f6:	int    0xe4
  40f1f8:	mov    ah,0xa
  40f1fa:	bound  ecx,QWORD PTR [edi-0x34]
  40f1fd:	rol    bl,1
  40f1ff:	jp     0x40f277
  40f201:	dec    ecx
  40f202:	push   cs
  40f203:	adc    eax,0x5141d169
  40f208:	test   BYTE PTR gs:[ebx],0xe3
  40f20c:	and    eax,0xe1613bc3
  40f211:	arpl   WORD PTR [edi+0x5a8aeebb],sp
  40f217:	jnp    0x40f222
  40f219:	cmp    esi,DWORD PTR [ecx+eax*1]
  40f21c:	(bad)  
  40f21d:	data16 lahf 
  40f21f:	repz pop edi
  40f221:	cmp    BYTE PTR [ebx+eax*2],cl
  40f224:	into   
  40f225:	sub    BYTE PTR [eax-0x5e],bh
  40f228:	repz inc eax
  40f22a:	push   eax
  40f22b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f22c:	daa    
  40f22d:	mov    bh,0x9c
  40f22f:	xchg   bh,bh
  40f231:	pop    edi
  40f232:	sbb    al,0xe6
  40f234:	push   ds
  40f235:	xlat   BYTE PTR ds:[ebx]
  40f236:	or     eax,0x36100956
  40f23b:	cld    
  40f23c:	hlt    
  40f23d:	mov    bl,0xf9
  40f23f:	cmp    ebp,DWORD PTR [ecx-0x49]
  40f242:	pop    ebx
  40f243:	mov    eax,0xfa5e3c7
  40f248:	fwait
  40f249:	or     al,0xe2
  40f24b:	push   esi
  40f24c:	icebp  
  40f24d:	dec    ebp
  40f24e:	out    dx,eax
  40f24f:	push   0xb32dab8c
  40f254:	cs sahf 
  40f256:	sbb    eax,0xd8c84697
  40f25b:	lock lock sbb bl,BYTE PTR [ebp+0xa]
  40f260:	stos   BYTE PTR es:[edi],al
  40f261:	fldcw  WORD PTR [esi]
  40f263:	xchg   DWORD PTR [esi-0x6804f42f],ebp
  40f269:	push   ebp
  40f26a:	mov    esi,0xf43057a5
  40f26f:	test   dl,ah
  40f271:	sub    esi,DWORD PTR [ecx]
  40f273:	xchg   esp,eax
  40f274:	xchg   ebp,eax
  40f275:	sbb    al,0x9b
  40f277:	mov    eax,ds:0x27c5342
  40f27c:	int    0xcf
  40f27e:	sub    eax,0x6d61a5fb
  40f283:	scas   eax,DWORD PTR es:[edi]
  40f284:	inc    eax
  40f285:	or     cl,BYTE PTR [esi-0x3d]
  40f288:	pop    ebp
  40f289:	pop    edi
  40f28a:	sub    DWORD PTR [esp+eiz*8-0x609e8dd4],0xffffff94
  40f292:	mov    esp,0x2494f431
  40f297:	push   esi
  40f298:	(bad)  
  40f299:	popa   
  40f29a:	and    BYTE PTR [ebx-0xd2e2f3e],0xa4
  40f2a1:	pop    eax
  40f2a2:	fdiv   st,st(3)
  40f2a4:	ins    DWORD PTR es:[edi],dx
  40f2a5:	mov    ah,0x59
  40f2a7:	jecxz  0x40f30b
  40f2a9:	and    edx,DWORD PTR [ecx]
  40f2ab:	pop    ebx
  40f2ac:	adc    eax,0x12fa0c15
  40f2b1:	stos   BYTE PTR es:[edi],al
  40f2b2:	mul    esi
  40f2b4:	ins    BYTE PTR es:[edi],dx
  40f2b5:	inc    eax
  40f2b6:	xor    eax,0x53b01c59
  40f2bb:	fcmovb st,st(0)
  40f2bd:	inc    ebx
  40f2be:	(bad)  
  40f2bf:	jecxz  0x40f331
  40f2c1:	cmp    cl,ah
  40f2c3:	daa    
  40f2c4:	xchg   edi,eax
  40f2c5:	gs das 
  40f2c7:	cmc    
  40f2c8:	push   es
  40f2c9:	dec    ebp
  40f2ca:	addr16 stc 
  40f2cc:	sbb    eax,0x86aa132a
  40f2d1:	inc    edx
  40f2d2:	sbb    DWORD PTR [edi+0x19],eax
  40f2d5:	push   edi
  40f2d6:	sbb    dh,BYTE PTR [ebp+0x4dd12859]
  40f2dc:	sar    BYTE PTR [edx],1
  40f2de:	and    al,0x5a
  40f2e0:	push   es
  40f2e1:	ins    DWORD PTR es:[edi],dx
  40f2e2:	je     0x40f350
  40f2e4:	sahf   
  40f2e5:	or     dl,ch
  40f2e7:	xchg   esi,eax
  40f2e8:	cmp    BYTE PTR [esi+0x5a],0xb3
  40f2ec:	push   DWORD PTR [ebx+0x3f]
  40f2ef:	xchg   DWORD PTR [ebp+0x386c1d],edi
  40f2f5:	js     0x40f304
  40f2f7:	mov    WORD PTR [edi],cs
  40f2f9:	xor    DWORD PTR [edi],0x6a
  40f2fc:	and    BYTE PTR [eax],dh
  40f2fe:	test   eax,0x2a067150
  40f303:	sub    DWORD PTR [esi],0x3c5ab324
  40f309:	sub    eax,0xfaaa4d29
  40f30e:	hlt    
  40f30f:	dec    ebx
  40f310:	mov    esi,0xc3998e6d
  40f315:	mov    ds:0x6e5900e0,eax
  40f31a:	dec    esi
  40f31b:	std    
  40f31c:	jge    0x40f365
  40f31e:	shl    DWORD PTR [ebx-0x1a5040f1],1
  40f324:	mov    ah,0x30
  40f326:	pop    edi
  40f327:	and    DWORD PTR [eiz*1+0x724dc9f4],eax
  40f32e:	jp     0x40f33d
  40f330:	pop    ss
  40f331:	scas   eax,DWORD PTR es:[edi]
  40f332:	mov    ebp,0x7abb9284
  40f337:	dec    edi
  40f338:	mov    edi,0xc3f62cb1
  40f33d:	sbb    edx,ecx
  40f33f:	leave  
  40f340:	imul   eax,DWORD PTR [esi],0x56f2be13
  40f346:	pop    eax
  40f347:	popa   
  40f348:	in     eax,dx
  40f349:	ins    BYTE PTR es:[edi],dx
  40f34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f34b:	stc    
  40f34c:	mov    eax,0xdc6e3f1c
  40f351:	jl     0x40f336
  40f353:	cli    
  40f354:	call   0x6123:0x297b8d
  40f35b:	scas   eax,DWORD PTR es:[edi]
  40f35c:	ret    
  40f35d:	cmp    BYTE PTR [edi+0x3],bh
  40f360:	xchg   ebp,eax
  40f361:	idiv   edx
  40f363:	cmp    al,0xcc
  40f365:	loope  0x40f3e6
  40f367:	idiv   ecx
  40f369:	cdq    
  40f36a:	outs   dx,DWORD PTR ds:[esi]
  40f36b:	jae    0x40f2f9
  40f36d:	popa   
  40f36e:	mul    bl
  40f370:	retf   0xba2d
  40f373:	xchg   ebx,eax
  40f374:	mov    al,BYTE PTR [edx+eiz*2+0x4d]
  40f378:	lods   al,BYTE PTR ds:[esi]
  40f379:	lea    ebx,[ecx+0x22cfd98e]
  40f37f:	dec    ah
  40f381:	mov    cl,0x5c
  40f383:	add    DWORD PTR ds:0x4642c45a,ebx
  40f389:	ret    
  40f38a:	clc    
  40f38b:	in     al,0x65
  40f38d:	fdivr  QWORD PTR [edx-0x8311cd1]
  40f393:	push   ebx
  40f394:	adc    esp,DWORD PTR [eax-0x50]
  40f397:	or     ebp,ecx
  40f399:	fisubr WORD PTR [ecx+0x27483510]
  40f39f:	inc    edi
  40f3a0:	mov    eax,ds:0xb65dc0a6
  40f3a5:	daa    
  40f3a6:	lds    eax,FWORD PTR es:[edi+ebp*4-0x7]
  40f3ab:	(bad)
  40f3ae:	xchg   edx,eax
  40f3af:	mov    WORD PTR [ebx+0x6e],?
  40f3b2:	mov    edi,DWORD PTR [edi+0x12]
  40f3b5:	cmp    al,0x92
  40f3b7:	jno    0x40f33f
  40f3b9:	push   0xff6dd180
  40f3be:	inc    ecx
  40f3bf:	mov    ?,WORD PTR [edi-0x1c48fd9b]
  40f3c5:	(bad)  
  40f3c7:	jp     0x40f387
  40f3c9:	mov    ah,0x8
  40f3cb:	ins    BYTE PTR es:[edi],dx
  40f3cc:	xchg   esp,eax
  40f3cd:	pop    edi
  40f3ce:	mov    al,ds:0x366cfd6
  40f3d3:	xchg   ebp,eax
  40f3d4:	or     eax,0x66a6c019
  40f3d9:	push   ds
  40f3da:	mul    BYTE PTR [ebp+0x57]
  40f3dd:	test   BYTE PTR [edx-0x49],ah
  40f3e0:	imul   ecx,DWORD PTR [eax+0x4faa8753],0x1c1dc82c
  40f3ea:	cwde   
  40f3eb:	(bad)  
  40f3ec:	mov    eax,0x4b4a3e93
  40f3f1:	mov    esp,0x8825431b
  40f3f6:	sar    DWORD PTR [ebx-0x616a65e7],cl
  40f3fc:	js     0x40f391
  40f3fe:	lds    edi,FWORD PTR [ebx+0x57b8cc57]
  40f404:	fstp   DWORD PTR [eax+0x3b07e39c]
  40f40a:	xchg   ebp,eax
  40f40b:	pop    ebp
  40f40c:	imul   eax,DWORD PTR [ebp+0xc28a87e],0x5b8c8033
  40f416:	cmp    ch,BYTE PTR [esp+edx*1]
  40f419:	iret   
  40f41a:	pop    ds
  40f41b:	cli    
  40f41c:	cld    
  40f41d:	(bad)  
  40f41e:	lea    ebx,[edi+0x6b4a316e]
  40f424:	stos   DWORD PTR es:[edi],eax
  40f425:	cmc    
  40f426:	inc    edx
  40f427:	lea    eax,[esi+edx*4-0x23]
  40f42b:	xor    eax,0xeb286cb3
  40f430:	mov    bh,0xf3
  40f432:	mov    dl,0xda
  40f434:	jbe    0x40f407
  40f436:	(bad)  
  40f437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f438:	sbb    eax,0xabf679bd
  40f43d:	loop   0x40f472
  40f43f:	outs   dx,DWORD PTR ds:[esi]
  40f440:	and    eax,eax
  40f442:	enter  0x422d,0xf9
  40f446:	jecxz  0x40f3f9
  40f448:	pop    eax
  40f449:	shl    DWORD PTR [ebp+0x6b6c689b],cl
  40f44f:	fistp  WORD PTR [eax-0x6b]
  40f452:	test   al,0xd8
  40f454:	push   ebp
  40f455:	xor    DWORD PTR [ebx],ebp
  40f457:	dec    esp
  40f458:	dec    ebp
  40f459:	popa   
  40f45a:	aas    
  40f45b:	sub    al,0x81
  40f45d:	daa    
  40f45e:	mov    WORD PTR [ebp+0x1e3d135b],es
  40f464:	push   cs
  40f465:	pop    ss
  40f466:	xor    ebx,DWORD PTR [ecx]
  40f468:	mov    eax,ds:0xbd267c74
  40f46d:	ja     0x40f49c
  40f46f:	in     al,0x10
  40f471:	jge    0x40f4e7
  40f473:	xor    al,0x15
  40f475:	dec    ebp
  40f476:	lea    ebx,[ebx-0x5c656945]
  40f47c:	pop    ds
  40f47d:	push   edx
  40f47e:	jle    0x40f4ad
  40f480:	mov    bl,0xd1
  40f482:	retf   0xddbc
  40f485:	sub    cl,BYTE PTR [eax+0x4a]
  40f488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f489:	dec    edi
  40f48a:	mov    WORD PTR [edi-0x22d48877],?
  40f490:	ret    
  40f491:	mov    ah,0x67
  40f493:	add    dl,BYTE PTR [esi-0x73]
  40f496:	jp     0x40f466
  40f498:	push   ds
  40f499:	cs call 0x3c9b:0xbfc6c002
  40f4a1:	xchg   edx,eax
  40f4a2:	push   esp
  40f4a3:	and    ah,BYTE PTR [esi+0x4f4b717a]
  40f4a9:	pusha  
  40f4aa:	push   ebp
  40f4ab:	xchg   ebx,eax
  40f4ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4ad:	or     al,0x88
  40f4af:	xor    eax,0x3052b5fc
  40f4b4:	loope  0x40f490
  40f4b6:	loope  0x40f537
  40f4b8:	repz sub esi,edi
  40f4bb:	jne    0xac84c9da
  40f4c1:	test   al,0xb
  40f4c3:	aam    0x12
  40f4c5:	fucomi st,st(7)
  40f4c7:	das    
  40f4c8:	mov    dh,BYTE PTR ds:0x803695d9
  40f4ce:	imul   BYTE PTR [edx-0x17]
  40f4d1:	fidiv  DWORD PTR [eax-0x1a]
  40f4d4:	punpckldq mm5,DWORD PTR [edi+0x64]
  40f4d8:	pop    ds
  40f4d9:	inc    esp
  40f4da:	jns    0x40f45c
  40f4dc:	adc    al,0x30
  40f4de:	fs retf 0x933f
  40f4e2:	pusha  
  40f4e3:	das    
  40f4e4:	and    ecx,edx
  40f4e6:	jmp    0x221e:0xfcbfd70f
  40f4ed:	xchg   DWORD PTR [esi],ebp
  40f4ef:	ins    BYTE PTR es:[edi],dx
  40f4f0:	(bad)  
  40f4f1:	sbb    DWORD PTR [ecx],edi
  40f4f3:	cwde   
  40f4f4:	dec    esi
  40f4f5:	or     dl,BYTE PTR [ebx+0x347b2727]
  40f4fb:	ins    BYTE PTR es:[edi],dx
  40f4fc:	in     al,0x9
  40f4fe:	add    ebx,DWORD PTR [ecx+ebx*4+0x585b465b]
  40f505:	cld    
  40f506:	shr    cl,0x96
  40f509:	jns    0x40f547
  40f50b:	cmp    ecx,eax
  40f50d:	add    eax,DWORD PTR [esi+0x26]
  40f510:	cs ret 
  40f512:	adc    al,0xc
  40f514:	cli    
  40f515:	or     DWORD PTR [edx],esi
  40f517:	pop    esp
  40f518:	xor    eax,DWORD PTR [edi]
  40f51a:	xchg   edx,eax
  40f51b:	add    BYTE PTR [esi+ebp*4-0x16db2cd0],ah
  40f522:	add    ch,ch
  40f524:	ror    BYTE PTR [ebx],cl
  40f526:	or     ecx,esp
  40f528:	mov    edi,0x25a16854
  40f52d:	jle    0x40f599
  40f52f:	pop    edi
  40f530:	add    eax,0x3dc35d1
  40f535:	fstp   QWORD PTR [ebp+0x485a2ad6]
  40f53b:	fstp   TBYTE PTR [eax]
  40f53d:	cmp    DWORD PTR [eax],ecx
  40f53f:	push   ebx
  40f540:	sub    DWORD PTR ds:0xacb8f46f,ecx
  40f546:	push   ecx
  40f547:	pop    esp
  40f548:	ins    BYTE PTR es:[edi],dx
  40f549:	sbb    ebp,DWORD PTR [edi+ebp*1]
  40f54c:	scas   eax,DWORD PTR es:[edi]
  40f54d:	cli    
  40f54e:	cld    
  40f54f:	mov    BYTE PTR [ecx+0x7ad77f9],cl
  40f555:	setne  BYTE PTR [esi+0x5e]
  40f559:	cli    
  40f55a:	inc    edi
  40f55b:	clc    
  40f55c:	call   DWORD PTR [edi+0x3dc97cfb]
  40f562:	or     esp,DWORD PTR [ebp+0x41]
  40f565:	call   0x2f9c:0xc61d6fa5
  40f56c:	push   eax
  40f56d:	(bad)  
  40f56e:	(bad)  
  40f56f:	pusha  
  40f570:	ja     0x40f5ed
  40f572:	(bad)  
  40f573:	aam    0x93
  40f575:	outs   dx,BYTE PTR ds:[esi]
  40f576:	test   cl,dh
  40f578:	mov    edi,0x23f36229
  40f57d:	dec    ebp
  40f57e:	ins    DWORD PTR es:[edi],dx
  40f57f:	jecxz  0x40f536
  40f581:	sub    dh,dh
  40f583:	jecxz  0x40f5c6
  40f585:	or     DWORD PTR ds:0xaf8bad78,eax
  40f58b:	sub    BYTE PTR [ebx],dl
  40f58d:	mov    sp,bx
  40f590:	xchg   esp,eax
  40f591:	lahf   
  40f592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f593:	pop    esi
  40f594:	adc    dh,BYTE PTR [esi-0x4b0f7186]
  40f59a:	shl    DWORD PTR [edx],1
  40f59c:	retf   
  40f59d:	jmp    0x40f551
  40f59f:	push   0xffffffc6
  40f5a1:	rol    BYTE PTR [ecx],1
  40f5a3:	pushf  
  40f5a4:	xchg   ebx,eax
  40f5a5:	and    BYTE PTR [edx-0x269d8f4d],bl
  40f5ab:	in     eax,0xa0
  40f5ad:	sahf   
  40f5ae:	adc    DWORD PTR [edi+0xa],esi
  40f5b1:	call   0x9347:0x828dae1e
  40f5b8:	in     al,0x6d
  40f5ba:	xchg   ebx,eax
  40f5bb:	sbb    eax,0xd54db984
  40f5c0:	ins    DWORD PTR es:[edi],dx
  40f5c1:	int    0x58
  40f5c3:	push   edx
  40f5c4:	inc    ebp
  40f5c5:	adc    dl,BYTE PTR [ebx+edi*2]
  40f5c8:	retf   0x6202
  40f5cb:	sbb    DWORD PTR [ebp+esi*2+0x67],0x72
  40f5d0:	mov    edx,0xd01c555a
  40f5d5:	stos   DWORD PTR es:[edi],eax
  40f5d6:	fild   DWORD PTR [esi+ebx*1]
  40f5d9:	inc    ecx
  40f5da:	mov    ch,0x9
  40f5dc:	mov    cl,0x19
  40f5de:	fist   WORD PTR [ecx-0x354410ce]
  40f5e4:	xchg   ah,cl
  40f5e6:	aas    
  40f5e7:	in     al,dx
  40f5e8:	lds    esp,FWORD PTR [ebp+0x3]
  40f5eb:	xchg   DWORD PTR [ecx+0x12952fcc],ecx
  40f5f1:	es push ebp
  40f5f3:	adc    DWORD PTR [esi-0x62],0xb16241a2
  40f5fa:	pop    edx
  40f5fb:	sbb    al,0x70
  40f5fd:	mov    bh,0xc0
  40f5ff:	push   ecx
  40f600:	cmp    al,0x67
  40f602:	add    DWORD PTR [ebp+0x7d2e45b7],0x9ea3170d
  40f60c:	mov    DWORD PTR [eax-0x71],edi
  40f60f:	popa   
  40f610:	push   cs
  40f611:	and    dl,BYTE PTR [eax]
  40f613:	push   0x53bb94ec
  40f618:	lods   eax,DWORD PTR ds:[esi]
  40f619:	or     cl,BYTE PTR [edx+0x44]
  40f61c:	pop    es
  40f61d:	ins    DWORD PTR es:[edi],dx
  40f61e:	leave  
  40f61f:	shl    DWORD PTR ds:0xc897ac40,1
  40f625:	adc    DWORD PTR [edi+0x4359242],ebp
  40f62b:	loop   0x40f687
  40f62d:	adc    dl,0xbf
  40f630:	jb     0x40f616
  40f632:	loopne 0x40f61d
  40f634:	cmp    ebp,DWORD PTR [eax]
  40f636:	(bad)  
  40f637:	pop    eax
  40f638:	xchg   ebp,eax
  40f639:	dec    eax
  40f63a:	sbb    al,0x15
  40f63c:	out    0x56,al
  40f63e:	adc    esp,esp
  40f640:	arpl   WORD PTR [ebx-0x5e],cx
  40f643:	mov    esi,edi
  40f645:	shr    cl,0x1d
  40f648:	and    eax,0x9a374b79
  40f64d:	adc    bl,dl
  40f64f:	mov    ebx,fs
  40f651:	jbe    0x40f6a1
  40f653:	fldln2 
  40f655:	out    0xc1,eax
  40f657:	rcr    esi,0xc8
  40f65a:	out    dx,eax
  40f65b:	(bad)  
  40f65d:	aam    0x9f
  40f65f:	add    DWORD PTR [edx],0x23
  40f662:	jg     0x40f69d
  40f664:	scas   eax,DWORD PTR es:[edi]
  40f665:	(bad)  [ebp-0x2d2e9ad0]
  40f66b:	lods   eax,DWORD PTR ds:[esi]
  40f66c:	sbb    eax,0x74ec4145
  40f671:	push   ebp
  40f672:	sub    BYTE PTR [esi+0x489ab44a],ah
  40f678:	or     ebx,DWORD PTR [edx+eiz*1+0x23]
  40f67c:	cmp    ebp,DWORD PTR ds:0xa1a6da91
  40f682:	in     eax,0xdb
  40f684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f685:	pop    es
  40f686:	adc    DWORD PTR [ebp-0x19187bea],esp
  40f68c:	retf   0x9bff
  40f68f:	sar    DWORD PTR [esi-0x1c7b2a67],1
  40f695:	(bad)  
  40f696:	stc    
  40f697:	jnp    0x40f67d
  40f699:	sbb    al,0x9a
  40f69b:	int    0x21
  40f69d:	fadd   QWORD PTR [edi-0x3e]
  40f6a0:	sbb    dh,BYTE PTR [esi-0x2d]
  40f6a3:	mov    ds:0xdd78ab6d,al
  40f6a8:	outs   dx,BYTE PTR ds:[esi]
  40f6a9:	add    ebx,DWORD PTR [ebp-0x2b754360]
  40f6af:	retf   0xf425
  40f6b2:	inc    ecx
  40f6b3:	aaa    
  40f6b4:	xor    eax,0xa27879ed
  40f6b9:	add    DWORD PTR [ebx+eax*1+0x3727db95],ecx
  40f6c0:	cmp    al,0x79
  40f6c2:	inc    esp
  40f6c3:	fcomp  DWORD PTR [edx]
  40f6c5:	ds cmp eax,0x2e42f334
  40f6cb:	fisubr DWORD PTR [edx+edx*1]
  40f6ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6cf:	cmp    DWORD PTR [edx],ebx
  40f6d1:	pushf  
  40f6d2:	push   esp
  40f6d3:	mov    dh,BYTE PTR [edx+eiz*4-0x4e]
  40f6d7:	call   0xdfca:0x3d79136e
  40f6de:	or     eax,0xd2cf95b1
  40f6e3:	xchg   ecx,eax
  40f6e4:	push   ebp
  40f6e5:	jno    0x40f6c0
  40f6e7:	jg     0x40f6c7
  40f6e9:	pop    ds
  40f6ea:	pushf  
  40f6eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6ec:	inc    ecx
  40f6ed:	add    eax,0x72ae15a4
  40f6f2:	(bad)  
  40f6f3:	mov    esi,0x425f2e96
  40f6f8:	and    al,0x88
  40f6fa:	jmp    0xa0de99e6
  40f6ff:	std    
  40f700:	das    
  40f701:	sbb    DWORD PTR [ebx+0xfa20628],ecx
  40f707:	add    edx,edi
  40f709:	or     ebp,edi
  40f70b:	dec    ebx
  40f70c:	(bad)  
  40f70d:	int    0x87
  40f70f:	int    0xb
  40f711:	dec    ebp
  40f712:	ins    DWORD PTR es:[edi],dx
  40f713:	push   es
  40f714:	cmc    
  40f715:	mov    edx,0xe7bf06d
  40f71a:	jno    0x40f702
  40f71c:	and    edi,ecx
  40f71e:	mov    dh,dh
  40f720:	call   FWORD PTR [eax]
  40f722:	ins    DWORD PTR es:[edi],dx
  40f723:	rcr    BYTE PTR [edx+0x31],cl
  40f726:	stc    
  40f727:	push   edx
  40f728:	(bad)  
  40f729:	cmp    eax,0xe26530b2
  40f72e:	fwait
  40f72f:	xchg   edi,eax
  40f730:	push   ebp
  40f731:	add    dl,BYTE PTR [edi-0x1c]
  40f734:	xchg   esi,eax
  40f735:	push   edi
  40f736:	add    DWORD PTR [edi+0x502ee01a],ecx
  40f73c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f73d:	sar    BYTE PTR [eax-0x2b],cl
  40f740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f741:	jle    0x40f731
  40f743:	cmp    BYTE PTR [edx],al
  40f745:	ror    DWORD PTR [edx+0x10e12881],cl
  40f74b:	std    
  40f74c:	iret   
  40f74d:	fcmove st,st(7)
  40f74f:	pop    esp
  40f750:	sub    al,0x5e
  40f752:	lock sub DWORD PTR [esi+0x42aaafa1],ecx
  40f759:	std    
  40f75a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f75b:	add    BYTE PTR [ecx-0x35],ch
  40f75e:	xor    BYTE PTR [esi+edi*8],dh
  40f761:	mov    ebx,0x32478ea8
  40f766:	ret    0x471d
  40f769:	in     al,0xe4
  40f76b:	or     eax,0x4d0f5d0d
  40f770:	clc    
  40f771:	loopne 0x40f727
  40f773:	neg    DWORD PTR [ecx-0x3d]
  40f776:	mov    ebp,edx
  40f778:	mov    eax,0x6164deaf
  40f77d:	push   cs
  40f77e:	mov    esp,0xb68ad32
  40f783:	sbb    ecx,edi
  40f785:	mov    bh,0xb0
  40f787:	fsub   st(6),st
  40f789:	(bad)  
  40f78a:	push   ss
  40f78b:	pushf  
  40f78c:	addr16 aas 
  40f78e:	sbb    eax,0x8c7f9266
  40f793:	ss scas al,BYTE PTR es:[edi]
  40f795:	repnz aad 0xe7
  40f798:	cmp    al,0xa7
  40f79a:	push   0xffffffc7
  40f79c:	xchg   edi,eax
  40f79d:	not    DWORD PTR [edx-0x21]
  40f7a0:	mov    DWORD PTR [ebx-0x708caee9],esp
  40f7a6:	lds    edi,FWORD PTR [edi]
  40f7a8:	cmp    eax,DWORD PTR [esp+edi*1+0x6a]
  40f7ac:	mov    DWORD PTR [ecx+0x3754fbb9],esp
  40f7b2:	adc    DWORD PTR [ecx-0x44e6a0f7],ecx
  40f7b8:	sub    ebx,DWORD PTR [ecx+0x72bcdadf]
  40f7be:	stos   DWORD PTR es:[edi],eax
  40f7bf:	ins    DWORD PTR es:[edi],dx
  40f7c0:	mov    al,0xa7
  40f7c2:	sub    bl,BYTE PTR [ecx+0x63]
  40f7c5:	or     eax,0x24258abf
  40f7ca:	cmc    
  40f7cb:	and    BYTE PTR [ecx-0x18],al
  40f7ce:	ins    BYTE PTR es:[edi],dx
  40f7cf:	pop    esp
  40f7d0:	mov    ebx,0x60785dfb
  40f7d5:	mov    ecx,0x71a9e19d
  40f7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7db:	dec    ebx
  40f7dc:	rcl    DWORD PTR [edx+eax*1],0x7b
  40f7e0:	mov    WORD PTR [ebp+0x49],ds
  40f7e3:	out    0x2e,eax
  40f7e5:	pop    ecx
  40f7e6:	pop    eax
  40f7e7:	cmp    eax,DWORD PTR [eax+0x57]
  40f7ea:	xor    DWORD PTR [ebp+0x3],edx
  40f7ed:	jns    0x40f7f3
  40f7ef:	fcmovnbe st,st(4)
  40f7f1:	sub    BYTE PTR [edi-0x5c460a05],cl
  40f7f7:	ror    ah,0xc5
  40f7fa:	cli    
  40f7fb:	jmp    0xcdec:0x8ed1c74f
  40f802:	cmp    eax,0x2da5de29
  40f807:	add    DWORD PTR [eax],esi
  40f809:	pusha  
  40f80a:	jbe    0x40f7fa
  40f80c:	push   es
  40f80d:	and    eax,0xd2941e21
  40f812:	aam    0xdc
  40f814:	fwait
  40f815:	xchg   edi,eax
  40f816:	mov    bl,0xff
  40f818:	pop    edx
  40f819:	outs   dx,DWORD PTR ds:[esi]
  40f81a:	scas   eax,DWORD PTR es:[edi]
  40f81b:	xchg   esp,eax
  40f81c:	jmp    edx
  40f81e:	sbb    DWORD PTR [esi+0x7140cc97],0x1f
  40f825:	sbb    ebx,DWORD PTR [ecx+ecx*2+0x36b50be0]
  40f82c:	(bad)  [ebx]
  40f82e:	out    dx,eax
  40f82f:	push   0xdf12ac79
  40f834:	and    cl,BYTE PTR [edx-0x7d]
  40f837:	mov    dl,0xfa
  40f839:	xor    ebx,edi
  40f83b:	lds    ebp,FWORD PTR [esi+0x64]
  40f83e:	cmp    BYTE PTR [ecx-0x7e],dl
  40f841:	mov    al,0x2b
  40f843:	cmc    
  40f844:	mov    al,0x5f
  40f846:	xchg   esi,eax
  40f847:	mov    edx,0xdb96ec1b
  40f84c:	sub    eax,0xefa7d47d
  40f851:	fs mov edx,0x94bbf83d
  40f857:	call   0x6a47be39
  40f85c:	fcomp  QWORD PTR [esi-0x6f]
  40f85f:	inc    edx
  40f860:	jno    0x40f85b
  40f862:	test   eax,0x3ef1e874
  40f867:	clc    
  40f868:	dec    esi
  40f869:	add    edi,edi
  40f86b:	xchg   DWORD PTR ds:0x3f71f5a3,ebx
  40f871:	jge    0x40f862
  40f873:	fisttp QWORD PTR [esi-0x21fa75c7]
  40f879:	mov    cl,0x25
  40f87b:	out    0x54,al
  40f87d:	adc    BYTE PTR [bx+di+0x18],dl
  40f881:	jae    0x40f872
  40f883:	sub    al,0xf5
  40f885:	int    0xf1
  40f887:	in     eax,0x34
  40f889:	push   eax
  40f88a:	repz adc ebx,DWORD PTR [edi+eiz*4-0x7a]
  40f88f:	add    bh,BYTE PTR [esi-0x64]
  40f892:	pop    es
  40f893:	dec    esi
  40f894:	in     al,dx
  40f895:	xor    ecx,DWORD PTR [edx+ecx*4-0x344cd033]
  40f89c:	cli    
  40f89d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f89e:	pop    es
  40f89f:	stc    
  40f8a0:	dec    ebp
  40f8a1:	sar    BYTE PTR [ecx],0xd
  40f8a4:	test   DWORD PTR [ebx+ecx*2+0x7c5e20a],ebp
  40f8ab:	imul   esp,DWORD PTR gs:[ebx-0x48],0x57
  40f8b0:	dec    edx
  40f8b1:	cmp    eax,0x3e85f312
  40f8b6:	xor    BYTE PTR [eax-0x2d],cl
  40f8b9:	xchg   ebp,eax
  40f8ba:	arpl   sp,sp
  40f8bc:	mov    eax,0xa6faa770
  40f8c1:	dec    eax
  40f8c2:	popf   
  40f8c3:	imul   ecx,DWORD PTR [ebx],0xffffff82
  40f8c6:	sbb    al,0x77
  40f8c8:	into   
  40f8c9:	sahf   
  40f8ca:	push   edx
  40f8cb:	sub    bh,bh
  40f8cd:	jge    0x40f85a
  40f8cf:	xor    DWORD PTR [ecx+0x358fd8a6],esp
  40f8d5:	aam    0x82
  40f8d7:	adc    al,0x86
  40f8d9:	fwait
  40f8da:	mov    ds:0x6074c75c,al
  40f8df:	out    dx,al
  40f8e0:	mov    ds:0xe4111c13,eax
  40f8e5:	rcr    DWORD PTR [ebp+0x34],1
  40f8e8:	push   es
  40f8e9:	or     DWORD PTR [esi+0x7f],esp
  40f8ec:	sub    BYTE PTR [ecx],dh
  40f8ee:	cs (bad) 
  40f8f0:	(bad)  
  40f8f1:	scas   eax,DWORD PTR es:[edi]
  40f8f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8f3:	dec    ebp
  40f8f4:	cmp    al,0xc7
  40f8f6:	jbe    0x40f87f
  40f8f8:	inc    edi
  40f8f9:	sub    esp,DWORD PTR [ebx+0xc]
  40f8fc:	push   ss
  40f8fd:	inc    edx
  40f8fe:	xchg   esi,eax
  40f8ff:	or     eax,0xfc4a29c7
  40f904:	push   ss
  40f905:	mov    al,0xa2
  40f907:	jl     0x40f984
  40f909:	inc    edx
  40f90a:	add    dh,BYTE PTR ds:0x24fc420
  40f910:	in     eax,dx
  40f911:	dec    esi
  40f912:	or     BYTE PTR [ecx+ebx*4-0x5c5f3a00],ah
  40f919:	rcr    DWORD PTR [edi+0x390de94e],1
  40f91f:	xor    al,0xca
  40f921:	in     eax,dx
  40f922:	arpl   WORD PTR [esi-0x2f],bp
  40f925:	xchg   esi,eax
  40f926:	pop    ebp
  40f927:	push   edi
  40f928:	add    DWORD PTR [ecx],0xffffffb6
  40f92b:	adc    edi,DWORD PTR ds:0xef8d6ef4
  40f931:	ret    
  40f932:	sub    DWORD PTR [esi+0x7d2ae73b],esp
  40f938:	cmp    bh,0x7
  40f93b:	cmp    al,0x6b
  40f93d:	clc    
  40f93e:	out    dx,al
  40f93f:	idiv   BYTE PTR [edx]
  40f941:	inc    ebp
  40f942:	or     edi,ecx
  40f944:	std    
  40f945:	pop    esp
  40f946:	lock push esp
  40f948:	mov    edx,ebx
  40f94a:	mov    ah,0x4b
  40f94c:	push   ds
  40f94d:	cmp    BYTE PTR [ecx-0x63f317ab],cl
  40f953:	inc    ebp
  40f954:	cli    
  40f955:	fs push ds
  40f957:	out    dx,eax
  40f958:	daa    
  40f959:	inc    esp
  40f95a:	into   
  40f95b:	mov    WORD PTR [esi+0x48],fs
  40f95e:	cmp    al,0xa5
  40f960:	inc    ebx
  40f961:	add    BYTE PTR [edi+0x4c],0x6a
  40f965:	cmp    edi,DWORD PTR [ebx-0x47]
  40f968:	cmovs  ebp,DWORD PTR [ebx-0x49]
  40f96c:	jg     0x40f8f8
  40f96e:	sbb    al,0x3c
  40f970:	fsubr  st(5),st
  40f972:	push   eax
  40f973:	mov    bl,ch
  40f975:	inc    ebx
  40f976:	push   es
  40f977:	pop    ds
  40f978:	loopne 0x40f916
  40f97a:	and    al,0x61
  40f97c:	push   ds
  40f97d:	jmp    0x30aedba2
  40f982:	test   al,0x41
  40f984:	or     bh,BYTE PTR [edi-0x7baa6faf]
  40f98a:	adc    al,0x7d
  40f98c:	cmpxchg DWORD PTR [eax],edi
  40f98f:	sub    al,0x7a
  40f991:	rcr    DWORD PTR [ebx+eax*2],cl
  40f994:	pop    es
  40f995:	mov    WORD PTR [esi+ecx*2],ss
  40f998:	xchg   edi,eax
  40f999:	scas   al,BYTE PTR es:[di]
  40f99b:	xor    al,0x11
  40f99d:	mov    ah,0x8
  40f99f:	xchg   esp,eax
  40f9a0:	mov    dl,0x4f
  40f9a2:	loopne 0x40f96e
  40f9a4:	(bad)  
  40f9a6:	daa    
  40f9a7:	test   al,0x8b
  40f9a9:	lods   al,BYTE PTR ds:[esi]
  40f9aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9ab:	neg    BYTE PTR [ebp-0x13]
  40f9ae:	mov    dh,0xcc
  40f9b0:	scas   al,BYTE PTR es:[edi]
  40f9b1:	xchg   edx,eax
  40f9b2:	add    eax,0xc66b4d33
  40f9b7:	push   cs
  40f9b8:	xor    dl,BYTE PTR [ecx+eax*8+0x50f7f092]
  40f9bf:	lds    ecx,FWORD PTR [ecx-0x61]
  40f9c2:	pop    es
  40f9c3:	dec    ebp
  40f9c4:	push   edi
  40f9c5:	pop    eax
  40f9c6:	mov    eax,0x20c18b2d
  40f9cb:	jns    0x40f9cc
  40f9cd:	pop    ebx
  40f9ce:	add    ch,bl
  40f9d0:	inc    edx
  40f9d1:	repz call DWORD PTR [ebx]
  40f9d4:	add    BYTE PTR [edi+0x1b],dl
  40f9d7:	or     al,0x45
  40f9d9:	cs jae 0x40fa52
  40f9dc:	in     al,0x1d
  40f9de:	cmp    al,0xf3
  40f9e0:	and    BYTE PTR [ebp-0x1c],0xf0
  40f9e4:	xchg   esi,eax
  40f9e5:	xor    eax,0x120cfdc
  40f9ea:	ins    BYTE PTR es:[edi],dx
  40f9eb:	sahf   
  40f9ec:	adc    esp,DWORD PTR [esp+ecx*2]
  40f9ef:	jns    0x40fa26
  40f9f1:	cmp    al,0x65
  40f9f3:	xor    BYTE PTR [edx],ah
  40f9f5:	inc    edx
  40f9f6:	sti    
  40f9f7:	ja     0x40f9a0
  40f9f9:	lahf   
  40f9fa:	jae    0x40fa03
  40f9fc:	mov    edi,0x165a920f
  40fa01:	inc    ebx
  40fa02:	xor    bh,cl
  40fa04:	mov    al,0x98
  40fa06:	je     0x40f98a
  40fa08:	aas    
  40fa09:	xor    DWORD PTR [ecx-0x77],edx
  40fa0c:	jl     0x40fa6b
  40fa0e:	out    dx,eax
  40fa0f:	jecxz  0x40fa74
  40fa11:	sbb    al,0xb5
  40fa13:	icebp  
  40fa14:	and    ebp,ecx
  40fa16:	inc    ebp
  40fa17:	icebp  
  40fa18:	or     eax,0x5be590be
  40fa1d:	xchg   esi,ebp
  40fa1f:	add    ebx,0xffffff91
  40fa22:	loop   0x40fa98
  40fa24:	pop    ecx
  40fa25:	(bad)  
  40fa27:	cwde   
  40fa28:	mov    cl,BYTE PTR [eax+0x7641c9ea]
  40fa2e:	mov    al,BYTE PTR [ecx+0x16c9be28]
  40fa34:	pop    eax
  40fa35:	dec    edx
  40fa36:	sub    esi,eax
  40fa38:	pop    ds
  40fa39:	xor    al,0xd6
  40fa3b:	pop    edx
  40fa3c:	mov    eax,ds:0xf3ec82f3
  40fa41:	out    0xf8,al
  40fa43:	push   esp
  40fa44:	ins    BYTE PTR es:[edi],dx
  40fa45:	mov    ?,WORD PTR [eax]
  40fa47:	lea    edx,[edx-0x59b1c22f]
  40fa4d:	jno    0x40fa29
  40fa4f:	or     ebx,ebp
  40fa51:	imul   esi,DWORD PTR [ebx],0x40
  40fa54:	sbb    eax,0xc9003562
  40fa59:	add    eax,0x23441038
  40fa5e:	inc    esp
  40fa5f:	xor    ecx,esp
  40fa61:	jo     0x40fa14
  40fa63:	or     ch,BYTE PTR [ebx]
  40fa65:	nop
  40fa66:	clc    
  40fa67:	test   BYTE PTR [ebp+0x626b57c2],bh
  40fa6d:	addr16 lock inc edx
  40fa70:	mov    dl,0xe3
  40fa72:	mov    ds:0x59ae9364,al
  40fa77:	mov    edx,0x95dda88e
  40fa7c:	xlat   BYTE PTR es:[ebx]
  40fa7e:	dec    ebp
  40fa7f:	repz cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40fa82:	xor    DWORD PTR [eax-0x16],edx
  40fa85:	mov    ah,0x53
  40fa87:	mov    esi,gs
  40fa89:	sbb    ah,BYTE PTR [ebp-0x21]
  40fa8c:	in     al,0x67
  40fa8e:	loope  0x40fa1f
  40fa90:	clc    
  40fa91:	add    DWORD PTR [esi-0x31],ebx
  40fa94:	test   al,0x1e
  40fa96:	fwait
  40fa97:	pop    edi
  40fa98:	popa   
  40fa99:	add    eax,0xd6bb6628
  40fa9e:	test   BYTE PTR [esi],0x39
  40faa1:	sbb    DWORD PTR [eax-0x16697283],ecx
  40faa7:	(bad)  
  40faa8:	sub    al,0x53
  40faaa:	mov    DWORD PTR [ebp+edx*8+0x74],ebp
  40faae:	pop    ds
  40faaf:	sahf   
  40fab0:	or     eax,DWORD PTR [ecx]
  40fab2:	jbe    0x40fa83
  40fab4:	lock xor eax,0x91353649
  40faba:	inc    edi
  40fabb:	out    dx,al
  40fabc:	push   0xd460b3c9
  40fac1:	mov    ebx,DWORD PTR [ebx+0x38]
  40fac4:	in     al,dx
  40fac5:	add    al,0x87
  40fac7:	add    al,0xc8
  40fac9:	into   
  40faca:	cs cmp di,dx
  40face:	jle    0x40fb38
  40fad0:	pop    ebp
  40fad1:	loopne 0x40fa79
  40fad3:	call   0x2c52aa11
  40fad8:	shl    DWORD PTR [esp+ebx*8-0x15],1
  40fadc:	fild   QWORD PTR [ecx+0x53e8377a]
  40fae2:	(bad)
  40fae5:	push   esi
  40fae6:	cwde   
  40fae7:	(bad)  
  40fae8:	and    cl,bl
  40faea:	lahf   
  40faeb:	ror    ebx,0xb1
  40faee:	stc    
  40faef:	mov    ds:0x7d433ccb,al
  40faf4:	mov    ds:0x228d02c4,eax
  40faf9:	sar    DWORD PTR [eax],1
  40fafb:	pop    ebx
  40fafc:	leave  
  40fafd:	popf   
  40fafe:	mov    ebx,0x2ae669bf
  40fb03:	pop    ss
  40fb04:	push   0x26d9f239
  40fb09:	pop    esp
  40fb0a:	hlt    
  40fb0b:	sti    
  40fb0c:	(bad)  
  40fb0d:	enter  0x619d,0x39
  40fb11:	xor    BYTE PTR [esi],ah
  40fb13:	inc    edx
  40fb14:	(bad)  
  40fb15:	data16 add dl,ch
  40fb18:	add    eax,DWORD PTR [ebx-0x22000a88]
  40fb1e:	fldenv [edi+0x5f50132f]
  40fb24:	(bad)  
  40fb25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb26:	mov    cl,0x6
  40fb28:	(bad)  [edx]
  40fb2a:	adc    edx,DWORD PTR [eax-0x28]
  40fb2d:	push   esp
  40fb2e:	in     eax,dx
  40fb2f:	or     eax,0x84d8bc1
  40fb34:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fb38:	xor    DWORD PTR ds:0x42a16f,0x6377
  40fb42:	xor    ecx,0x8a96
  40fb48:	sub    DWORD PTR ds:0x42a16f,0x7d05
  40fb52:	add    ecx,edi
  40fb54:	mov    DWORD PTR ds:0x42a1a7,edi
  40fb5a:	mov    edi,DWORD PTR [ebp-0xc]
  40fb5d:	inc    DWORD PTR ds:0x42a12b
  40fb63:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fb6a:	inc    edx
  40fb6b:	mov    ecx,DWORD PTR [ebp-0x10]
  40fb6e:	mov    DWORD PTR ds:0x42a1af,0x4619
  40fb78:	cmp    edx,ecx
  40fb7a:	jne    0x40d759
  40fb80:	mov    ecx,DWORD PTR [ebp-0x18]
  40fb83:	and    DWORD PTR ds:0x42a1a7,0x0
  40fb8d:	jmp    0x40fb9f
  40fb92:	mov    edi,DWORD PTR ds:0x42a1a7
  40fb98:	inc    edi
  40fb99:	mov    DWORD PTR ds:0x42a1a7,edi
  40fb9f:	cmp    DWORD PTR ds:0x42a1a7,0x1c
  40fba6:	jae    0x40fbd1
  40fbac:	cmp    DWORD PTR ds:0x42a1a7,0x20
  40fbb3:	jg     0x40fbd1
  40fbb9:	jmp    0x40fbcc
  40fbbe:	push   0x42a1d3
  40fbc3:	push   DWORD PTR [ebp-0x10]
  40fbc6:	call   DWORD PTR ds:0x42a2d3
  40fbcc:	jmp    0x40fb92
  40fbd1:	mov    edx,DWORD PTR [ebp+0x10]
  40fbd4:	or     edi,0x72f1
  40fbda:	xor    ecx,eax
  40fbdc:	add    ecx,esi
  40fbde:	mov    DWORD PTR [edx],ecx
  40fbe0:	adc    DWORD PTR ds:0x42a17b,0xfda
  40fbea:	mov    ecx,DWORD PTR [ebp-0x18]
  40fbed:	and    DWORD PTR ds:0x42a127,ecx
  40fbf3:	xor    ecx,eax
  40fbf5:	add    ecx,esi
  40fbf7:	mov    DWORD PTR [ebp-0xc],ecx
  40fbfa:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40fc01:	mov    ecx,DWORD PTR ds:0x42a12f
  40fc07:	xor    ecx,DWORD PTR ds:0x42a13b
  40fc0d:	mov    DWORD PTR ds:0x42a12f,ecx
  40fc13:	mov    DWORD PTR [ebp-0x14],0xf89c8589
  40fc1a:	and    edi,DWORD PTR ds:0x42a13f
  40fc20:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40fc27:	and    DWORD PTR ds:0x42a13b,0x0
  40fc31:	mov    ecx,DWORD PTR ds:0x42a13b
  40fc37:	inc    ecx
  40fc38:	mov    DWORD PTR ds:0x42a13b,ecx
  40fc3e:	cmp    DWORD PTR ds:0x42a13b,0x24
  40fc45:	jbe    0x40fc63
  40fc4b:	jmp    0x40fc56
  40fc50:	call   DWORD PTR ds:0x42a293
  40fc56:	cmp    DWORD PTR ds:0x42a13b,0x15
  40fc5d:	jb     0x40fc31
  40fc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40fc66:	sbb    DWORD PTR ds:0x42a1bb,ebx
  40fc6c:	mov    DWORD PTR [ebp+0x8],ecx
  40fc6f:	and    edi,DWORD PTR ds:0x42a17f
  40fc75:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc78:	adc    edi,0x3f37
  40fc7e:	xor    ecx,eax
  40fc80:	xor    DWORD PTR ds:0x42a18b,edx
  40fc86:	add    ecx,esi
  40fc88:	mov    edi,0x2513
  40fc8d:	mov    ecx,0x242ebcd
  40fc92:	mov    edi,0xf641bcc
  40fc97:	mov    DWORD PTR ds:0x42a163,0x3833
  40fca1:	je     0x41b544
  40fca7:	movzx  edx,WORD PTR ds:0x42a143
  40fcae:	or     DWORD PTR ds:0x42a1bb,edx
  40fcb4:	mov    edx,DWORD PTR [ebp+0x8]
  40fcb7:	or     DWORD PTR ds:0x42a12b,edi
  40fcbd:	mov    ebx,DWORD PTR [ebp-0x8]
  40fcc0:	adc    DWORD PTR ds:0x42a18f,0x42a177
  40fcca:	xor    edx,eax
  40fccc:	mov    DWORD PTR ds:0x42a1ab,0x2aa1
  40fcd6:	xor    ebx,eax
  40fcd8:	sub    edx,ebx
  40fcda:	neg    ebx
  40fcdc:	sub    edx,esi
  40fcde:	adc    ebx,DWORD PTR ds:0x42a16b
  40fce4:	xor    edx,eax
  40fce6:	xor    ebx,ebx
  40fce8:	or     ebx,DWORD PTR ds:0x42a187
  40fcee:	sub    DWORD PTR ds:0x42a147,ebx
  40fcf4:	mov    DWORD PTR [ebp+0x8],edx
  40fcf7:	mov    edx,DWORD PTR [ebp+0x8]
  40fcfa:	and    DWORD PTR ds:0x42a13f,ebx
  40fd00:	mov    ebx,DWORD PTR [ebp-0x58]
  40fd03:	sub    DWORD PTR ds:0x42a17f,0x42a1b3
  40fd0d:	add    edx,0x5708fa
  40fd13:	sub    DWORD PTR ds:0x42a16f,0x2df9
  40fd1d:	imul   edx,ebx
  40fd20:	and    DWORD PTR ds:0x42a14f,0x0
  40fd2a:	jmp    0x40fd3c
  40fd2f:	mov    ebx,DWORD PTR ds:0x42a14f
  40fd35:	inc    ebx
  40fd36:	mov    DWORD PTR ds:0x42a14f,ebx
  40fd3c:	cmp    DWORD PTR ds:0x42a14f,0x1e
  40fd43:	jae    0x40fd94
  40fd49:	cmp    DWORD PTR ds:0x42a14f,0x9
  40fd50:	jbe    0x40fd94
  40fd56:	jmp    0x40fd73
  40fd5b:	push   0x5a7a
  40fd60:	push   DWORD PTR [ebp-0x1c]
  40fd63:	push   0x4290f0
  40fd68:	push   0x400000
  40fd6d:	call   DWORD PTR ds:0x42a297
  40fd73:	cmp    DWORD PTR ds:0x42a14f,0x8
  40fd7a:	jne    0x40fd8f
  40fd80:	xor    ebx,ebx
  40fd82:	or     ebx,DWORD PTR ds:0x42a14f
  40fd88:	inc    ebx
  40fd89:	mov    DWORD PTR ds:0x42a14f,ebx
  40fd8f:	jmp    0x40fd2f
  40fd94:	mov    DWORD PTR [ebp-0x58],edx
  40fd97:	mov    DWORD PTR ds:0x42a1a3,0x13
  40fda1:	cmp    DWORD PTR ds:0x42a1a3,0x0
  40fda8:	je     0x40fdd8
  40fdae:	cmp    DWORD PTR ds:0x42a1a3,0x14
  40fdb5:	jb     0x40fdd8
  40fdbb:	jmp    0x40fdc6
  40fdc0:	call   DWORD PTR ds:0x42a29b
  40fdc6:	mov    edx,DWORD PTR ds:0x42a1a3
  40fdcc:	dec    edx
  40fdcd:	mov    DWORD PTR ds:0x42a1a3,edx
  40fdd3:	jmp    0x40fda1
  40fdd8:	mov    edx,DWORD PTR [ebp+0x8]
  40fddb:	xor    DWORD PTR ds:0x42a167,0x6c23
  40fde5:	mov    ebx,DWORD PTR [ebp-0x54]
  40fde8:	sbb    DWORD PTR ds:0x42a183,0x57b9
  40fdf2:	add    edx,0x64f89c
  40fdf8:	or     edx,ebx
  40fdfa:	movzx  ebx,WORD PTR ds:0x42a187
  40fe01:	sbb    DWORD PTR ds:0x42a1b3,ebx
  40fe07:	mov    DWORD PTR [ebp-0x54],edx
  40fe0a:	mov    edx,DWORD PTR [ebp+0x8]
  40fe0d:	and    DWORD PTR ds:0x42a1af,0x0
  40fe17:	xor    ebx,ebx
  40fe19:	xor    ebx,DWORD PTR ds:0x42a1af
  40fe1f:	inc    ebx
  40fe20:	mov    DWORD PTR ds:0x42a1af,ebx
  40fe26:	cmp    DWORD PTR ds:0x42a1af,0x7
  40fe2d:	jge    0x40fe75
  40fe33:	jmp    0x40fe4e
  40fe38:	push   0x45bb
  40fe3d:	push   DWORD PTR [ebp-0x20]
  40fe40:	push   0x42923d
  40fe45:	push   DWORD PTR [ebp-0x18]
  40fe48:	call   DWORD PTR ds:0x42a2a3
  40fe4e:	cmp    DWORD PTR ds:0x42a1af,0x6
  40fe55:	jne    0x40fe68
  40fe5b:	mov    ebx,DWORD PTR ds:0x42a1af
  40fe61:	inc    ebx
  40fe62:	mov    DWORD PTR ds:0x42a1af,ebx
  40fe68:	cmp    DWORD PTR ds:0x42a1af,0x14
  40fe6f:	jb     0x40fe17
  40fe75:	mov    ebx,DWORD PTR [ebp-0x50]
  40fe78:	add    edx,ecx
  40fe7a:	adc    DWORD PTR ds:0x42a167,0x1f0e
  40fe84:	xor    edx,ebx
  40fe86:	and    DWORD PTR ds:0x42a17b,0x42a1a7
  40fe90:	mov    DWORD PTR [ebp-0x50],edx
  40fe93:	and    DWORD PTR ds:0x42a1a3,0x1c1b
  40fe9d:	mov    edx,DWORD PTR [ebp+0x8]
  40fea0:	mov    ebx,DWORD PTR [ebp-0x4c]
  40fea3:	sbb    DWORD PTR ds:0x42a177,0x5e0b
  40fead:	add    edx,edi
  40feaf:	and    edx,ebx
  40feb1:	xor    DWORD PTR ds:0x42a12f,ecx
  40feb7:	mov    DWORD PTR [ebp-0x4c],edx
  40feba:	and    DWORD PTR ds:0x42a16f,0x0
  40fec4:	jmp    0x40fed6
  40fec9:	mov    edx,DWORD PTR ds:0x42a16f
  40fecf:	inc    edx
  40fed0:	mov    DWORD PTR ds:0x42a16f,edx
  40fed6:	cmp    DWORD PTR ds:0x42a16f,0x1b
  40fedd:	jae    0x40ff00
  40fee3:	cmp    DWORD PTR ds:0x42a16f,0x1e
  40feea:	jge    0x40ff00
  40fef0:	jmp    0x40fefb
  40fef5:	call   DWORD PTR ds:0x42a2a7
  40fefb:	jmp    0x40fec9
  40ff00:	mov    edx,DWORD PTR [ebp+0x8]
  40ff03:	mov    ebx,DWORD PTR [ebp-0x48]
  40ff06:	not    DWORD PTR ds:0x42a183
  40ff0c:	lea    edx,[ebx+edx*1+0x241fcdf]
  40ff13:	add    ebx,DWORD PTR ds:0x42a1c7
  40ff19:	mov    DWORD PTR [ebp-0x48],edx
  40ff1c:	mov    DWORD PTR ds:0x42a19b,0x1d36
  40ff26:	mov    edx,DWORD PTR [ebp+0x8]
  40ff29:	mov    ebx,0xfa5e1530
  40ff2e:	sub    ebx,edx
  40ff30:	mov    DWORD PTR ds:0x42a1bf,0x1f
  40ff3a:	cmp    DWORD PTR ds:0x42a1bf,0x0
  40ff41:	je     0x40ff82
  40ff47:	cmp    DWORD PTR ds:0x42a1bf,0x22
  40ff4e:	jge    0x40ff82
  40ff54:	jmp    0x40ff6e
  40ff59:	push   0x84e5
  40ff5e:	push   0x42a137
  40ff63:	push   0x6ce8
  40ff68:	call   DWORD PTR ds:0x42a2ab
  40ff6e:	xor    edx,edx
  40ff70:	or     edx,DWORD PTR ds:0x42a1bf
  40ff76:	dec    edx
  40ff77:	mov    DWORD PTR ds:0x42a1bf,edx
  40ff7d:	jmp    0x40ff3a
  40ff82:	add    ebx,DWORD PTR [ebp-0x44]
  40ff85:	mov    DWORD PTR [ebp-0x44],ebx
  40ff88:	mov    edx,DWORD PTR [ebp+0x8]
  40ff8b:	adc    DWORD PTR ds:0x42a16b,0x42a12f
  40ff95:	xor    edx,eax
  40ff97:	adc    DWORD PTR ds:0x42a163,0x5ee0
  40ffa1:	add    edx,esi
  40ffa3:	jne    0x40fca7
  40ffa9:	mov    DWORD PTR ds:0x42a147,0x481d
  40ffb3:	jmp    0x41b544
  40ffb8:	mov    edx,DWORD PTR [ebp-0xc]
  40ffbb:	adc    DWORD PTR ds:0x42a137,edi
  40ffc1:	sub    edx,esi
  40ffc3:	xor    ebx,ebx
  40ffc5:	or     ebx,DWORD PTR ds:0x42a197
  40ffcb:	or     ebx,DWORD PTR ds:0x42a137
  40ffd1:	mov    DWORD PTR ds:0x42a197,ebx
  40ffd7:	xor    edx,eax
  40ffd9:	mov    DWORD PTR [ebp-0x5c],edx
  40ffdc:	mov    edx,DWORD PTR [ebp-0x10]
  40ffdf:	sbb    DWORD PTR ds:0x42a143,0x42a15b
  40ffe9:	mov    ebx,DWORD PTR [ebp-0x8]
  40ffec:	sub    DWORD PTR ds:0x42a193,0x2e82
  40fff6:	xor    edx,eax
  40fff8:	xor    ebx,eax
  40fffa:	mov    DWORD PTR ds:0x42a177,0x1dc1
  410004:	sub    edx,ebx
  410006:	and    DWORD PTR ds:0x42a1c3,0x42a17b
  410010:	sub    edx,esi
  410012:	xor    edx,eax
  410014:	mov    DWORD PTR ds:0x42a18b,0x3cb9
  41001e:	mov    DWORD PTR [ebp-0x10],edx
  410021:	mov    edx,DWORD PTR [ebp-0x14]
  410024:	mov    DWORD PTR [ebp+0x8],edx
  410027:	jmp    0x412514
  41002c:	mov    edx,DWORD PTR [ebp+0x8]
  41002f:	mov    ebx,DWORD PTR [ebp-0x8]
  410032:	xor    DWORD PTR ds:0x42a1cb,0x42a163
  41003c:	xor    edx,eax
  41003e:	adc    DWORD PTR ds:0x42a16b,0x42a177
  410048:	xor    ebx,eax
  41004a:	sbb    DWORD PTR ds:0x42a1c3,0x42a1af
  410054:	sub    edx,ebx
  410056:	or     DWORD PTR ds:0x42a1af,edx
  41005c:	sub    edx,esi
  41005e:	and    DWORD PTR ds:0x42a133,0x0
  410068:	xor    ebx,ebx
  41006a:	xor    ebx,DWORD PTR ds:0x42a133
  410070:	inc    ebx
  410071:	mov    DWORD PTR ds:0x42a133,ebx
  410077:	cmp    DWORD PTR ds:0x42a133,0x5
  41007e:	jbe    0x4100c6
  410084:	jmp    0x41009d
  410089:	push   DWORD PTR [ebp-0x14]
  41008c:	push   DWORD PTR [ebp-0x24]
  41008f:	push   0x52a1
  410094:	push   DWORD PTR [ebp-0x20]
  410097:	call   DWORD PTR ds:0x42a2af
  41009d:	cmp    DWORD PTR ds:0x42a133,0x4
  4100a4:	jne    0x4100b9
  4100aa:	xor    ebx,ebx
  4100ac:	or     ebx,DWORD PTR ds:0x42a133
  4100b2:	inc    ebx
  4100b3:	mov    DWORD PTR ds:0x42a133,ebx
  4100b9:	cmp    DWORD PTR ds:0x42a133,0x16
  4100c0:	jb     0x410068
  4100c6:	xor    edx,eax
  4100c8:	and    DWORD PTR ds:0x42a1c3,0x0
  4100d2:	xor    ebx,ebx
  4100d4:	or     ebx,DWORD PTR ds:0x42a1c3
  4100da:	inc    ebx
  4100db:	mov    DWORD PTR ds:0x42a1c3,ebx
  4100e1:	cmp    DWORD PTR ds:0x42a1c3,0xb
  4100e8:	jbe    0x4124b4
  4100ee:	jmp    0x410108
  4100f3:	push   0x81d2
  4100f8:	push   0x1
  4100fa:	push   0x42a1a7
  4100ff:	push   DWORD PTR [ebp-0x14]
  410102:	call   DWORD PTR ds:0x42a2b3
  410108:	cmp    DWORD PTR ds:0x42a1c3,0xa
  41010f:	jne    0x410122
  410115:	mov    ebx,DWORD PTR ds:0x42a1c3
  41011b:	inc    ebx
  41011c:	mov    DWORD PTR ds:0x42a1c3,ebx
  410122:	cmp    DWORD PTR ds:0x42a1c3,0x18
  410129:	jb     0x4100d2
  41012f:	jmp    0x4124b4
  410134:	or     ah,BYTE PTR [ebp-0x5e]
  410137:	jns    0x4100be
  410139:	mov    ebp,0x52330581
  41013e:	test   al,0xcd
  410140:	sbb    DWORD PTR [esi],0xffffffb1
  410143:	retf   
  410144:	data16 scas al,BYTE PTR es:[edi]
  410146:	jp     0x4101c2
  410148:	adc    bl,BYTE PTR [edi+0x7a]
  41014b:	jp     0x41013f
  41014d:	add    DWORD PTR [edx-0x594d0a3a],esp
  410153:	(bad)  
  410154:	out    dx,al
  410155:	popa   
  410156:	pop    esp
  410157:	les    edi,FWORD PTR [edi]
  410159:	adc    bh,al
  41015b:	lods   eax,DWORD PTR ds:[esi]
  41015c:	imul   edx,DWORD PTR [eax+edi*8+0x51],0xffffffc4
  410161:	cmp    al,0xe8
  410163:	xchg   DWORD PTR [edx+0x78c3de5b],ebp
  410169:	adc    al,BYTE PTR [esi+0x60]
  41016c:	dec    esi
  41016d:	lahf   
  41016e:	test   al,0x2
  410170:	inc    edx
  410171:	or     DWORD PTR [esi-0x4c45a2b4],edx
  410177:	jmp    0xc2a76f57
  41017c:	jmp    0x4101b2
  41017e:	sub    DWORD PTR [esi+0x70],edx
  410181:	lahf   
  410182:	pop    ecx
  410183:	pop    eax
  410184:	enter  0x9fce,0x9
  410188:	stos   DWORD PTR es:[edi],eax
  410189:	fcmovne st,st(2)
  41018b:	mov    ebp,0x35985682
  410190:	popf   
  410191:	sbb    eax,0x9bf71a7f
  410196:	xchg   ebp,eax
  410197:	shl    DWORD PTR [eax+edi*8],1
  41019a:	(bad)  
  41019b:	sub    eax,0xd9d91506
  4101a0:	mov    al,0xc7
  4101a2:	les    esi,FWORD PTR [eax-0xf721521]
  4101a8:	mov    bl,0x6d
  4101aa:	add    dl,bl
  4101ac:	fucomp st(0)
  4101ae:	sub    edx,DWORD PTR [edx+0x57]
  4101b1:	jnp    0x4101a9
  4101b3:	scas   al,BYTE PTR es:[edi]
  4101b4:	addr16 xor al,0x5a
  4101b7:	in     eax,0x6d
  4101b9:	or     ebp,DWORD PTR [ecx]
  4101bb:	mov    dh,0xf5
  4101bd:	push   ss
  4101be:	jle    0x4101c4
  4101c0:	pop    esi
  4101c1:	push   edx
  4101c2:	push   0xffffffaf
  4101c4:	jecxz  0x4101c1
  4101c6:	jo     0x41015a
  4101c8:	jns    0x410186
  4101ca:	cmp    ch,BYTE PTR [ebp-0x36]
  4101cd:	inc    ecx
  4101ce:	cmp    cl,cl
  4101d0:	iret   
  4101d1:	outs   dx,BYTE PTR ds:[esi]
  4101d2:	inc    ebp
  4101d3:	pusha  
  4101d4:	mov    ebx,0x8a112bcc
  4101d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101da:	shr    DWORD PTR [ecx-0x36],cl
  4101dd:	xchg   ebp,eax
  4101de:	mov    ?,WORD PTR [ebx+0x2027fcdd]
  4101e4:	pop    ebx
  4101e5:	xchg   ecx,eax
  4101e6:	sub    eax,0xf269c64b
  4101eb:	xchg   ecx,eax
  4101ec:	jae    0x410201
  4101ee:	push   es
  4101ef:	push   esp
  4101f0:	mov    ds:0x43458c98,al
  4101f5:	lods   eax,DWORD PTR ds:[esi]
  4101f6:	jne    0x4101c0
  4101f8:	iret   
  4101f9:	(bad)  
  4101fb:	pop    ecx
  4101fc:	pop    ds
  4101fd:	out    0xb8,eax
  4101ff:	mov    eax,cs
  410201:	inc    ebp
  410202:	inc    edx
  410203:	add    bh,ah
  410205:	int    0x4e
  410207:	inc    esp
  410208:	int3   
  410209:	enter  0xfe6e,0xe7
  41020d:	fistp  WORD PTR [ecx+0x5d]
  410210:	fiadd  DWORD PTR [edx+0x63]
  410213:	and    al,0x93
  410215:	xor    al,0x97
  410217:	xor    bh,BYTE PTR ds:0xc337f6b8
  41021d:	gs pushf 
  41021f:	pop    ss
  410220:	sbb    BYTE PTR [ecx-0x3e282b16],cl
  410226:	in     eax,dx
  410227:	test   DWORD PTR [esi+0x2e],edx
  41022a:	daa    
  41022b:	pop    edx
  41022c:	rcr    DWORD PTR [edi+ecx*8],0x8d
  410230:	add    esp,edx
  410232:	lods   al,BYTE PTR ds:[esi]
  410233:	lahf   
  410234:	fdivrp st(4),st
  410236:	inc    esp
  410237:	push   es
  410238:	test   ecx,esi
  41023a:	sub    ah,BYTE PTR [edi-0x17a96ead]
  410240:	mov    esp,0xe0fc80ae
  410245:	outs   dx,DWORD PTR ds:[esi]
  410246:	sar    BYTE PTR ss:[edx],0x3
  41024a:	push   ds
  41024b:	fsub   QWORD PTR [edx*2+0x3239b2ee]
  410252:	ja     0x410292
  410254:	cld    
  410255:	mov    esi,0x652103ea
  41025a:	and    eax,0x880ef89c
  41025f:	cli    
  410260:	adc    DWORD PTR [eax+0x66b7af8f],ebp
  410266:	loopne 0x4102a9
  410268:	addr16 xor eax,0xa8d89683
  41026e:	fcmovne st,st(4)
  410270:	ins    BYTE PTR es:[edi],dx
  410271:	shr    DWORD PTR [edi],cl
  410273:	sbb    eax,0x237a5ac7
  410278:	mov    al,0x29
  41027a:	ret    
  41027b:	add    ah,BYTE PTR [edi]
  41027d:	push   ds
  41027e:	sar    DWORD PTR [edx+0x49],0x16
  410282:	fsubp  st(6),st
  410284:	mov    DWORD PTR [esi+0x2aeb6d8e],ebx
  41028a:	shr    DWORD PTR [edi],cl
  41028c:	add    eax,0x51945e71
  410291:	pusha  
  410292:	or     eax,DWORD PTR [edi+0x1ffca150]
  410298:	cmp    bh,al
  41029a:	in     eax,dx
  41029b:	mov    esi,0x120212c1
  4102a0:	int    0xb3
  4102a2:	xor    dh,ah
  4102a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a5:	cmc    
  4102a6:	mov    ch,0x22
  4102a8:	test   al,0xec
  4102aa:	nop
  4102ab:	xchg   edx,eax
  4102ac:	cmp    dh,BYTE PTR [esi+0x5bcc290b]
  4102b2:	out    dx,eax
  4102b3:	and    eax,0x6ec1054a
  4102b8:	(bad)  
  4102b9:	test   eax,0x8b2f2f4e
  4102be:	add    dh,BYTE PTR [ebx]
  4102c0:	iret   
  4102c1:	jmp    0x4102ad
  4102c3:	sbb    esp,0xe542e3b
  4102c9:	add    bh,BYTE PTR [ebx+0x35b117c0]
  4102cf:	or     DWORD PTR [edi],ebx
  4102d1:	loopne 0x4102c8
  4102d3:	jbe    0x41026a
  4102d5:	xor    al,0xa3
  4102d7:	popf   
  4102d8:	pop    edi
  4102d9:	punpckhdq mm4,mm6
  4102dc:	ret    
  4102dd:	pop    eax
  4102de:	or     al,0xb5
  4102e0:	and    dh,BYTE PTR ds:[ebx-0x1f]
  4102e4:	mov    bl,0x0
  4102e6:	aaa    
  4102e7:	int3   
  4102e8:	xor    ch,bh
  4102ea:	add    al,0x18
  4102ec:	push   esp
  4102ed:	repz clc 
  4102ef:	add    ebx,DWORD PTR [eax-0x3411240f]
  4102f5:	mov    esi,0x26d413aa
  4102fa:	lods   eax,DWORD PTR ds:[esi]
  4102fb:	or     eax,0xec9d6ceb
  410300:	dec    edi
  410301:	and    eax,0xd31d3133
  410306:	mov    esi,DWORD PTR [ebx-0x1795c751]
  41030c:	mov    ds:0x89832be6,al
  410311:	push   ds
  410312:	leave  
  410313:	push   ebx
  410314:	mov    dl,0x56
  410316:	or     BYTE PTR [esi+0x6e],bh
  410319:	or     esp,0x37
  41031c:	inc    edi
  41031d:	mov    edi,0x62773d6a
  410322:	out    dx,al
  410323:	fwait
  410324:	jo     0x41035a
  410326:	cmp    esp,DWORD PTR [eax-0x56b9e60f]
  41032c:	outs   dx,BYTE PTR ds:[esi]
  41032d:	push   ss
  41032e:	inc    edx
  41032f:	mov    eax,0x19f52bc
  410334:	(bad)
  410338:	mov    dh,BYTE PTR [esi+0x7f]
  41033b:	addr16 dec esi
  41033d:	pop    esp
  41033e:	popf   
  41033f:	or     edi,DWORD PTR fs:[esi+0x39d3f57f]
  410346:	popf   
  410347:	add    eax,DWORD PTR [edx]
  410349:	push   ecx
  41034a:	into   
  41034b:	(bad)  
  41034c:	push   edi
  41034d:	cmp    DWORD PTR [edi],ecx
  41034f:	scas   al,BYTE PTR es:[edi]
  410350:	aam    0xc3
  410352:	sbb    edx,edi
  410354:	lock and al,0xe7
  410357:	xor    al,0x1e
  410359:	sub    al,0x6d
  41035b:	dec    edx
  41035c:	push   ds
  41035d:	inc    ecx
  41035e:	cmp    DWORD PTR [edi-0x1e760cea],edx
  410364:	add    DWORD PTR [esp+eax*1-0x510d351],ebx
  41036b:	mov    ch,0xa5
  41036d:	scas   al,BYTE PTR es:[edi]
  41036e:	sbb    esi,ebp
  410370:	rol    DWORD PTR [edx],cl
  410372:	addr16 push 0x40af25d7
  410378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410379:	nop
  41037a:	or     ebp,esi
  41037c:	and    DWORD PTR [ebx+0x35597a96],ebx
  410382:	mov    esp,edi
  410384:	out    dx,al
  410385:	pop    ebx
  410386:	test   al,0x20
  410388:	xchg   BYTE PTR [esi],bl
  41038a:	or     DWORD PTR [esi],ebp
  41038c:	test   edi,0x3f10f24f
  410392:	out    0x77,al
  410394:	pop    ebx
  410395:	and    eax,0x18f5ea80
  41039a:	stos   DWORD PTR es:[edi],eax
  41039b:	js     0x41038b
  41039d:	cmp    dh,dl
  41039f:	inc    esp
  4103a0:	dec    ebx
  4103a1:	mov    eax,0x4598d289
  4103a6:	mov    ah,0xb4
  4103a8:	test   eax,0xf2f51af9
  4103ad:	cwde   
  4103ae:	ret    0x2350
  4103b1:	pop    edi
  4103b2:	and    DWORD PTR [edx-0x67789d4f],edi
  4103b8:	lea    esi,[eax]
  4103ba:	out    0x58,eax
  4103bc:	mov    ch,0xa6
  4103be:	sub    bh,BYTE PTR [ebx-0x6b]
  4103c1:	daa    
  4103c2:	cmp    eax,0x72a05e05
  4103c7:	push   0x32
  4103c9:	arpl   ax,cx
  4103cb:	aad    0x4c
  4103cd:	push   ebp
  4103ce:	loope  0x4103ce
  4103d0:	in     eax,dx
  4103d1:	test   al,0xb6
  4103d3:	sbb    DWORD PTR [edi],edi
  4103d5:	add    al,0x34
  4103d7:	ret    0xce6c
  4103da:	pop    ds
  4103db:	jo     0x410442
  4103dd:	gs add al,0x90
  4103e0:	call   0x55e3ae50
  4103e5:	shr    DWORD PTR [ebx-0x44],cl
  4103e8:	and    al,0x9b
  4103ea:	xchg   BYTE PTR [edx+0x36],bh
  4103ed:	mov    bh,0x35
  4103ef:	scas   al,BYTE PTR es:[edi]
  4103f0:	loopne 0x410374
  4103f2:	push   eax
  4103f3:	jl     0x41045f
  4103f5:	add    eax,0x5fbd2c6d
  4103fa:	out    dx,al
  4103fb:	test   bl,bh
  4103fd:	mov    esp,0x92337b39
  410402:	and    al,0x4d
  410404:	shl    DWORD PTR [esi],1
  410406:	and    BYTE PTR [edx+ecx*4],bh
  410409:	xor    DWORD PTR [ebp-0x2ab658f],edx
  41040f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410410:	push   es
  410411:	call   0xb055:0x6c6bfe6d
  410418:	mov    ecx,0xcad2eb92
  41041d:	popa   
  41041e:	ror    BYTE PTR [ebx],1
  410420:	cmp    DWORD PTR [ecx],ebx
  410422:	ja     0x410407
  410424:	das    
  410425:	mov    bl,0xa1
  410427:	iret   
  410428:	inc    eax
  410429:	repz scas eax,DWORD PTR es:[edi]
  41042b:	mov    bl,0x26
  41042d:	mov    bl,0x78
  41042f:	lock xchg ebx,eax
  410431:	mov    BYTE PTR [edi],cl
  410433:	outs   dx,BYTE PTR ds:[si]
  410435:	mov    edi,0x8b38e257
  41043a:	ret    
  41043b:	add    al,0xbf
  41043d:	ror    DWORD PTR [eax-0x77a12b61],0x99
  410444:	lds    eax,FWORD PTR ds:0x52c21ae4
  41044a:	fwait
  41044b:	enter  0x4aa5,0xbb
  41044f:	or     eax,0x2310eec
  410454:	pop    esp
  410455:	push   ebx
  410456:	mov    WORD PTR [edx+ecx*2],cs
  410459:	pop    ds
  41045a:	push   esp
  41045b:	and    bl,BYTE PTR [ebx+0x2bff7542]
  410461:	mov    al,0xff
  410463:	lods   al,BYTE PTR ds:[esi]
  410464:	or     al,bh
  410466:	pusha  
  410467:	sbb    DWORD PTR [edx],ebx
  410469:	mov    ebp,0x5cd71c01
  41046e:	or     BYTE PTR [esi+0x3153746c],ch
  410474:	das    
  410475:	mov    al,ds:0x86e61b77
  41047a:	cmp    al,0xef
  41047c:	cmp    esp,DWORD PTR [ebp+0x55]
  41047f:	xlat   BYTE PTR ds:[ebx]
  410480:	aaa    
  410481:	pop    ss
  410482:	add    DWORD PTR [ecx-0x6bd55911],0x6a
  410489:	mov    dh,0xe4
  41048b:	mov    al,ds:0x23fac014
  410490:	xchg   edx,eax
  410491:	sti    
  410492:	pop    es
  410493:	xor    DWORD PTR [edi],esi
  410495:	push   es
  410496:	mov    WORD PTR [ecx],ds
  410498:	imul   ebp,edi,0x30
  41049b:	or     edx,DWORD PTR [esi-0x18]
  41049e:	test   DWORD PTR ds:0xe357ed57,edx
  4104a4:	lods   al,BYTE PTR ds:[esi]
  4104a5:	in     eax,0x7
  4104a7:	leave  
  4104a8:	adc    DWORD PTR [ebx-0x44],0x7ce8468c
  4104af:	mov    ebp,0x2a42191
  4104b4:	arpl   si,cx
  4104b6:	in     al,dx
  4104b7:	neg    dl
  4104b9:	mov    edx,0x570b69c1
  4104be:	les    edx,FWORD PTR [edi-0x38a549be]
  4104c4:	inc    ebp
  4104c5:	pop    ss
  4104c6:	scas   al,BYTE PTR es:[edi]
  4104c7:	rcl    DWORD PTR [esi+0x29f14ca4],0x61
  4104ce:	inc    eax
  4104cf:	pop    eax
  4104d0:	add    esi,DWORD PTR [eax+0x78]
  4104d3:	dec    esi
  4104d4:	scas   al,BYTE PTR es:[edi]
  4104d5:	ret    
  4104d6:	xor    DWORD PTR [ecx+0x50],ebp
  4104d9:	sub    DWORD PTR [ebp+edx*4+0x3e533261],ebx
  4104e0:	jle    0x410468
  4104e2:	test   al,0xbc
  4104e4:	push   edi
  4104e5:	pop    ebp
  4104e6:	cld    
  4104e7:	dec    esi
  4104e8:	test   dh,dh
  4104ea:	sub    al,0xaa
  4104ec:	add    al,0xf4
  4104ee:	jmp    0x41055a
  4104f0:	inc    DWORD PTR [esi+0xfbf2329]
  4104f6:	xchg   esi,eax
  4104f7:	fst    st(0)
  4104f9:	jb     0x41050d
  4104fb:	aam    0x16
  4104fd:	fs retf 0x7d69
  410501:	dec    edi
  410502:	add    ch,0x33
  410505:	(bad)  
  410506:	pop    eax
  410507:	inc    esp
  410508:	xchg   DWORD PTR [esi],edx
  41050a:	jb     0x4104e4
  41050c:	jl     0x410511
  41050e:	mov    al,ds:0xfbf757f5
  410513:	fild   DWORD PTR [ebp+0x2a7a8c1e]
  410519:	ss cmp eax,0xf0445b92
  41051f:	cmp    al,0xed
  410521:	mov    eax,0x3d1e078b
  410526:	sbb    eax,ebp
  410528:	popfw  
  41052a:	retf   
  41052b:	mov    dh,0xf2
  41052d:	scas   al,BYTE PTR es:[edi]
  41052e:	dec    edi
  41052f:	fiadd  WORD PTR [edi-0x3177afab]
  410535:	jmp    0xfba79030
  41053a:	int    0xd1
  41053c:	adc    eax,0x28b55e22
  410541:	mov    bl,0x34
  410543:	addr16 push ds
  410545:	xor    al,0x3b
  410547:	sahf   
  410548:	xor    edi,DWORD PTR [edi-0x67bb4242]
  41054e:	push   ebx
  41054f:	enter  0xd895,0xd3
  410553:	add    al,0x33
  410555:	push   esp
  410556:	scas   al,BYTE PTR es:[edi]
  410557:	sub    eax,0xdb9a6478
  41055c:	shl    ch,1
  41055e:	out    dx,eax
  41055f:	cs pop ebx
  410561:	push   0x465fa59b
  410566:	cdq    
  410567:	jle    0x4105bd
  410569:	mov    ah,0xe9
  41056b:	inc    ebp
  41056c:	in     eax,dx
  41056d:	in     al,dx
  41056e:	rcr    ecx,1
  410570:	jp     0x41054c
  410572:	ficomp WORD PTR [edx]
  410574:	cmp    al,0x49
  410576:	dec    esp
  410577:	outs   dx,BYTE PTR ds:[esi]
  410578:	inc    edi
  410579:	fcom   st(2)
  41057b:	pop    edi
  41057c:	lea    esp,ds:[esp+ecx*1-0x32c2bba7]
  410584:	outs   dx,DWORD PTR ds:[esi]
  410585:	inc    eax
  410586:	test   BYTE PTR [ecx],0xd2
  410589:	sub    al,0x81
  41058b:	retf   0x273
  41058e:	sbb    al,0xc9
  410590:	pop    ss
  410591:	mov    dh,0xb4
  410593:	sti    
  410594:	test   BYTE PTR [eax+0x57],ah
  410597:	mov    bl,0x99
  410599:	test   eax,0x6470169d
  41059e:	(bad)  
  41059f:	aad    0x17
  4105a1:	(bad)  
  4105a2:	xlat   BYTE PTR ds:[ebx]
  4105a3:	dec    eax
  4105a4:	pop    ecx
  4105a5:	out    dx,al
  4105a6:	add    dh,ah
  4105a8:	int3   
  4105a9:	cmp    eax,0xccf232f9
  4105ae:	les    ecx,FWORD PTR [ecx+eiz*2-0x1e]
  4105b2:	loop   0x410616
  4105b4:	pop    es
  4105b5:	sbb    BYTE PTR [edx+0x5bbe1e6d],cl
  4105bb:	push   eax
  4105bc:	cs dec ecx
  4105be:	add    BYTE PTR [edi],bh
  4105c0:	pop    edx
  4105c1:	enter  0xb8d4,0xe1
  4105c5:	or     bh,BYTE PTR [edx]
  4105c7:	sub    bl,BYTE PTR [eax-0x7f]
  4105ca:	dec    edi
  4105cb:	adc    bl,al
  4105cd:	push   0xffffffe0
  4105cf:	mov    cl,0x7b
  4105d1:	int    0xc7
  4105d3:	clc    
  4105d4:	sub    DWORD PTR [eax],edx
  4105d6:	mov    bh,0x53
  4105d8:	inc    ecx
  4105d9:	push   eax
  4105da:	aad    0x51
  4105dc:	xchg   edi,eax
  4105dd:	pop    eax
  4105de:	jb     0x4105e9
  4105e0:	stc    
  4105e1:	sti    
  4105e2:	sbb    dh,BYTE PTR [edx+0x3c9d6c10]
  4105e8:	cmp    BYTE PTR [edi-0x5],cl
  4105eb:	xchg   ebx,eax
  4105ec:	adc    eax,0xc9ce4cc0
  4105f1:	push   0xffffffa6
  4105f3:	xchg   ebp,eax
  4105f4:	sub    DWORD PTR [eax],edi
  4105f6:	gs mov bh,0x76
  4105f9:	or     edx,DWORD PTR ss:[esi+0x6c4c4aad]
  410600:	jne    0x4105ea
  410602:	sbb    ch,al
  410604:	sub    al,0xd5
  410606:	mov    ds:0x4cabcc37,eax
  41060b:	shr    DWORD PTR [ebp+0x1579ba49],0xeb
  410612:	mov    BYTE PTR [edi-0x3ddefe53],dl
  410618:	lds    edi,FWORD PTR [ecx]
  41061a:	in     eax,dx
  41061b:	xor    BYTE PTR [esi+esi*1],cl
  41061e:	push   edx
  41061f:	lods   al,BYTE PTR ds:[esi]
  410620:	out    0x28,eax
  410622:	and    DWORD PTR [edx+0x17],0xffffff97
  410626:	jge    0x410606
  410628:	sub    ch,bh
  41062a:	mov    al,ds:0xaa727f81
  41062f:	cmp    ebx,DWORD PTR [edi-0x787a85d6]
  410635:	or     eax,0xa40959a6
  41063a:	mov    al,0xa
  41063c:	adc    ch,BYTE PTR [ebx+0x3]
  41063f:	mov    esp,0x6817e6f9
  410644:	cli    
  410645:	pop    ebx
  410646:	imul   edi,DWORD PTR [ebp-0x7fec4c91],0x280a5f5b
  410650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410651:	inc    eax
  410652:	inc    ebp
  410653:	jb     0x41067c
  410655:	cwde   
  410656:	aam    0x7d
  410658:	fucompp 
  41065a:	cmp    eax,0x12aefab1
  41065f:	mov    ebx,DWORD PTR [ebp+0x7a]
  410662:	addr16 gs cmp eax,0x5edaef6c
  410669:	mov    ?,WORD PTR [esi]
  41066b:	adc    dl,BYTE PTR [ebp+eax*2-0x59]
  41066f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410670:	inc    edi
  410671:	inc    edx
  410672:	xchg   ecx,eax
  410673:	sub    eax,0xea73d19d
  410678:	mov    ah,0xa8
  41067a:	scas   al,BYTE PTR es:[edi]
  41067b:	call   0x4347:0x8addcbb4
  410682:	rcr    BYTE PTR [edi+0x54],0x6d
  410686:	in     eax,dx
  410687:	inc    edi
  410688:	and    ebx,DWORD PTR [esi]
  41068a:	mov    ds:0x7edca6b7,eax
  41068f:	sbb    BYTE PTR [ecx+eiz*2+0x64],dl
  410693:	mov    ecx,ebx
  410695:	scas   al,BYTE PTR es:[edi]
  410696:	in     eax,dx
  410697:	mov    ebx,0x8f85b5ee
  41069c:	sub    dh,dl
  41069e:	adc    eax,0x88c9f89e
  4106a3:	arpl   WORD PTR [edi+0x56467564],bp
  4106a9:	ror    ch,0xc7
  4106ac:	inc    esi
  4106ad:	cs xchg ebp,eax
  4106af:	mov    ch,dl
  4106b1:	and    BYTE PTR [esi-0x427de554],bl
  4106b7:	(bad)  [ebp+0x8]
  4106ba:	in     eax,0x1f
  4106bc:	mov    bl,0x50
  4106be:	xchg   ebp,eax
  4106bf:	fnclex 
  4106c1:	fild   WORD PTR [ecx*4+0x376d5589]
  4106c8:	arpl   WORD PTR [esi-0x3c5b658e],si
  4106ce:	jo     0x410674
  4106d0:	aam    0x25
  4106d2:	mov    edx,ecx
  4106d4:	lods   al,BYTE PTR ds:[esi]
  4106d5:	inc    al
  4106d7:	outs   dx,BYTE PTR ds:[esi]
  4106d8:	mov    cl,0x32
  4106da:	mov    ebp,0x6bf0aaf8
  4106df:	ins    DWORD PTR es:[edi],dx
  4106e0:	div    DWORD PTR [esi]
  4106e2:	in     eax,dx
  4106e3:	xor    cl,ch
  4106e5:	dec    esp
  4106e6:	cmp    eax,0x6006f705
  4106eb:	ret    0xcbf3
  4106ee:	arpl   WORD PTR [ebp+0xa],dx
  4106f1:	inc    esp
  4106f2:	into   
  4106f3:	outs   dx,BYTE PTR ds:[esi]
  4106f4:	mov    esi,ds
  4106f6:	inc    esi
  4106f7:	xor    DWORD PTR [esp+eax*1],eax
  4106fa:	add    dl,0x58
  4106fd:	std    
  4106fe:	les    ecx,FWORD PTR [esi-0xbb831fd]
  410704:	repnz sahf 
  410706:	fsubrp st(0),st
  410708:	pop    ebp
  410709:	lock dec esi
  41070b:	sti    
  41070c:	cmp    ch,BYTE PTR [esi]
  41070e:	outs   dx,DWORD PTR ds:[esi]
  41070f:	adc    bl,dl
  410711:	lea    ebx,[edx-0x444c7493]
  410717:	call   0x9949925a
  41071c:	sbb    esp,DWORD PTR [edi]
  41071e:	add    ebx,DWORD PTR [edi]
  410720:	xchg   ebx,eax
  410721:	lea    edx,[ebx+edi*2-0x1a26216b]
  410728:	push   eax
  410729:	mov    edx,0x5c455333
  41072e:	sub    DWORD PTR ds:0x34c7f0b3,eax
  410734:	jb     0x41075e
  410736:	dec    edi
  410737:	int3   
  410738:	and    edx,ebx
  41073a:	sti    
  41073b:	into   
  41073c:	imul   esp,DWORD PTR [esi-0x57],0x72f8c8e3
  410743:	rcr    DWORD PTR [edx-0x24],cl
  410746:	sub    eax,0xb8ed26b5
  41074b:	pop    esp
  41074c:	sbb    DWORD PTR [ebp+0x5a],esp
  41074f:	sbb    al,0xfc
  410751:	(bad)  
  410752:	mov    ebp,?
  410754:	or     al,0x3e
  410756:	cmp    DWORD PTR [ecx-0x505df588],esi
  41075c:	jmp    0x8adbcfbf
  410761:	imul   DWORD PTR [ebx]
  410763:	loope  0x4107df
  410765:	out    dx,al
  410766:	pusha  
  410767:	push   edi
  410768:	mov    cl,0x41
  41076a:	mov    fs,WORD PTR [ebp+0xc]
  41076d:	fadd   DWORD PTR [eax*2-0x57d6891d]
  410774:	xchg   esp,eax
  410775:	in     eax,dx
  410776:	rcr    DWORD PTR [ebx-0x40],0xd7
  41077a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41077b:	mov    ecx,0x8febe735
  410781:	je     0x410743
  410783:	fisub  DWORD PTR [esi]
  410785:	mov    ah,0xac
  410787:	cwde   
  410788:	or     al,0xfb
  41078a:	lods   al,BYTE PTR ds:[esi]
  41078b:	jmp    0x4107ab
  41078d:	loop   0x41073f
  41078f:	mov    esi,0xb6d31504
  410794:	cmp    ebx,0xffffffee
  410797:	shl    DWORD PTR [edx+0x4d4fa1cc],1
  41079d:	dec    ebx
  41079e:	js     0x410814
  4107a0:	pop    esp
  4107a1:	rcl    BYTE PTR [ebx-0x69],cl
  4107a4:	adc    eax,0xfc18ef1f
  4107a9:	mov    dh,0x84
  4107ab:	fist   DWORD PTR [esi]
  4107ad:	mov    DWORD PTR [ebx-0x2c45b317],esi
  4107b3:	or     al,0xb7
  4107b5:	sar    ebp,1
  4107b7:	mov    ah,0x8f
  4107b9:	scas   eax,DWORD PTR es:[edi]
  4107ba:	loop   0x410816
  4107bc:	dec    ebp
  4107bd:	dec    esp
  4107be:	xchg   esi,eax
  4107bf:	adc    ebp,ebp
  4107c1:	aad    0x96
  4107c3:	aam    0xbe
  4107c5:	fnstcw WORD PTR [eax+ecx*2+0x628a199c]
  4107cc:	xlat   BYTE PTR ds:[ebx]
  4107cd:	in     eax,0x4a
  4107cf:	sub    BYTE PTR [ebp-0x3b],bh
  4107d2:	enter  0xc3ca,0xa0
  4107d6:	mov    eax,0x18629227
  4107db:	pop    ebx
  4107dc:	sahf   
  4107dd:	sub    eax,0x9173ecc0
  4107e2:	xor    BYTE PTR [esi-0x31],bh
  4107e5:	fiadd  DWORD PTR ds:0x57f90c5a
  4107eb:	and    ch,al
  4107ed:	cmp    DWORD PTR [edx+0x35],edx
  4107f0:	jmp    0x7ff4:0x5473797a
  4107f7:	stos   DWORD PTR es:[edi],eax
  4107f8:	lods   al,BYTE PTR ds:[esi]
  4107f9:	ficom  DWORD PTR [edi-0x3b]
  4107fc:	add    BYTE PTR [edi],bl
  4107fe:	pusha  
  4107ff:	or     al,0xc4
  410801:	icebp  
  410802:	push   edi
  410803:	out    0x19,eax
  410805:	cwde   
  410806:	sbb    edi,DWORD PTR [ecx-0xf]
  410809:	adc    esp,eax
  41080b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41080c:	add    eax,0x61482416
  410811:	lds    ebx,FWORD PTR [ebp-0x26a1d68c]
  410817:	xor    dh,dl
  410819:	xlat   BYTE PTR ds:[ebx]
  41081a:	(bad)  [eax+0x4a70258b]
  410820:	xlat   BYTE PTR ds:[ebx]
  410821:	nop
  410822:	mov    BYTE PTR [edx-0x4f],dh
  410825:	adc    DWORD PTR [ecx],edx
  410827:	mov    bl,0xb0
  410829:	out    0x2f,eax
  41082b:	add    edi,DWORD PTR [edx+0x3f]
  41082e:	gs loopne 0x41088f
  410831:	int    0xfc
  410833:	lahf   
  410834:	out    0x11,eax
  410836:	gs inc ebp
  410838:	das    
  410839:	(bad)  
  41083a:	jb     0x41082a
  41083c:	add    eax,0x928f0982
  410841:	mov    cl,BYTE PTR [ebx+ebx*4-0x646af4de]
  410848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410849:	jne    0x41088f
  41084b:	xor    al,0x23
  41084d:	cli    
  41084e:	ins    BYTE PTR es:[edi],dx
  41084f:	pop    ss
  410850:	shr    DWORD PTR [edx-0x29],1
  410853:	dec    ecx
  410854:	popa   
  410855:	push   0x2c
  410857:	dec    edx
  410858:	fild   QWORD PTR [ecx-0x6]
  41085b:	dec    esp
  41085c:	jmp    0x32e37cd1
  410861:	or     DWORD PTR [ebp-0x6d],edx
  410864:	fiadd  WORD PTR [ebx+0x7b]
  410867:	retf   0xc68b
  41086a:	fsub   QWORD PTR [ebx+0x1194e902]
  410870:	sahf   
  410871:	xor    al,0xfd
  410873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410874:	mov    ds:0x503518ea,eax
  410879:	call   0x107923f4
  41087e:	add    al,0xad
  410880:	in     al,0xbd
  410882:	inc    esi
  410883:	xchg   DWORD PTR [ebx-0x72c6e73],ebp
  410889:	dec    ebx
  41088a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41088b:	out    dx,al
  41088c:	call   0x33ab:0x92cd36f2
  410893:	jecxz  0x410892
  410895:	aas    
  410896:	lods   eax,DWORD PTR ss:[esi]
  410898:	scas   al,BYTE PTR es:[edi]
  410899:	retf   0x606c
  41089c:	cmp    cl,dh
  41089e:	test   BYTE PTR [ebp+0x1b7bbae9],dh
  4108a4:	cmc    
  4108a5:	pop    ds
  4108a6:	mov    ah,BYTE PTR [ebx+0x20]
  4108a9:	nop
  4108aa:	dec    ecx
  4108ab:	mov    BYTE PTR [edx+eiz*1+0x30],ch
  4108af:	aam    0x7c
  4108b1:	popa   
  4108b2:	xchg   ebx,eax
  4108b3:	xchg   edx,eax
  4108b4:	mov    eax,DWORD PTR [eax]
  4108b6:	fwait
  4108b7:	mov    edx,DWORD PTR [ebx]
  4108b9:	stos   DWORD PTR es:[edi],eax
  4108ba:	fcmovnb st,st(0)
  4108bc:	fistp  WORD PTR [ecx-0x3a]
  4108bf:	xchg   esi,eax
  4108c0:	gs jae 0x41084b
  4108c3:	push   0x78
  4108c5:	cwde   
  4108c6:	inc    eax
  4108c7:	jl     0x4108a5
  4108c9:	xchg   esi,eax
  4108ca:	sub    DWORD PTR [ecx+0x3a97c602],ebx
  4108d0:	push   ds
  4108d1:	fidivr DWORD PTR [eax]
  4108d3:	pop    ds
  4108d4:	xchg   esi,eax
  4108d5:	jmp    0x4108db
  4108d7:	idiv   BYTE PTR [edx+0x0]
  4108da:	mov    ds:0x8ceee6a8,eax
  4108df:	pop    ebx
  4108e0:	pop    eax
  4108e1:	in     al,dx
  4108e2:	call   0xc9338369
  4108e7:	xchg   edx,eax
  4108e8:	and    al,BYTE PTR [esi-0x3245c010]
  4108ee:	dec    ebp
  4108ef:	push   esi
  4108f0:	aas    
  4108f1:	dec    BYTE PTR [eax+edi*4]
  4108f4:	dec    ebx
  4108f5:	xchg   ebp,eax
  4108f6:	mov    ebx,0x1de09a85
  4108fb:	dec    edx
  4108fc:	pop    ds
  4108fd:	inc    eax
  4108fe:	inc    esi
  4108ff:	dec    eax
  410900:	xchg   ebp,eax
  410901:	icebp  
  410902:	pop    ecx
  410903:	js     0x410914
  410905:	cmp    DWORD PTR ss:0xac83330b,ebp
  41090c:	mov    BYTE PTR [edx-0x2b49ff9b],ah
  410912:	(bad)  
  410913:	fidivr DWORD PTR [edi]
  410915:	mov    ah,0xb8
  410917:	adc    BYTE PTR [edx],bh
  410919:	pop    ebx
  41091a:	inc    esp
  41091b:	add    DWORD PTR [esi+0x3e],esi
  41091e:	out    dx,al
  41091f:	aaa    
  410920:	hlt    
  410921:	add    BYTE PTR [esi+0x128e8e9f],ah
  410927:	arpl   WORD PTR [esi-0x33f9e25],bp
  41092d:	jne    0x410925
  41092f:	push   cs
  410930:	add    esi,DWORD PTR [ebx+ebx*8+0x59]
  410934:	mov    ecx,0x24df6b72
  410939:	inc    ecx
  41093a:	xor    BYTE PTR [ebx+eiz*2-0x34],ch
  41093e:	stos   BYTE PTR es:[edi],al
  41093f:	scas   eax,DWORD PTR es:[edi]
  410940:	xchg   ebp,eax
  410941:	hlt    
  410942:	mov    ch,0xd4
  410944:	dec    ebx
  410945:	and    DWORD PTR [ecx],edx
  410947:	mov    WORD PTR [esi+edi*8],ds
  41094a:	fldcw  WORD PTR [ebp-0x1d0054cf]
  410950:	pop    ds
  410951:	out    dx,al
  410952:	jo     0x41091f
  410954:	add    ah,ah
  410956:	xchg   DWORD PTR [ebp-0x72],esi
  410959:	xchg   esi,eax
  41095a:	outs   dx,DWORD PTR ds:[esi]
  41095b:	nop
  41095c:	fld    TBYTE PTR [ebx]
  41095e:	adc    al,0x8d
  410960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410961:	daa    
  410962:	cs dec esi
  410964:	fdiv   QWORD PTR [ebp+0x508dac9e]
  41096a:	xchg   ebp,eax
  41096b:	lea    eax,[ecx+0x32]
  41096e:	or     ah,cl
  410970:	lea    esp,[ecx+0x29905d35]
  410976:	out    dx,eax
  410977:	call   0x997c9b60
  41097c:	xor    al,BYTE PTR ds:0x92ff0971
  410982:	rcl    eax,cl
  410984:	fcom   DWORD PTR [ebx+0x7110c73c]
  41098a:	xor    BYTE PTR [edx+0x197e8f39],ch
  410990:	pushf  
  410991:	pop    eax
  410992:	mov    eax,ebx
  410994:	loope  0x4109dd
  410996:	add    DWORD PTR [edx+0x2e],esp
  410999:	xchg   esi,eax
  41099a:	jle    0x410963
  41099c:	pop    edi
  41099d:	sbb    eax,DWORD PTR [edx+0x1e1dc826]
  4109a3:	in     eax,0xcb
  4109a5:	loope  0x410a1f
  4109a7:	test   al,0x50
  4109a9:	jmp    0x41096b
  4109ab:	inc    edx
  4109ac:	sub    eax,0xc4d9de60
  4109b1:	sahf   
  4109b2:	add    esi,ebx
  4109b4:	mov    al,0x4f
  4109b6:	jo     0x410978
  4109b8:	mov    ebp,0xc1e44528
  4109bd:	jecxz  0x410a3b
  4109bf:	lods   eax,DWORD PTR ds:[esi]
  4109c0:	and    BYTE PTR [ebx-0x4e],dh
  4109c3:	je     0x4109eb
  4109c5:	test   DWORD PTR [ecx-0x5957ad2f],esp
  4109cb:	sar    BYTE PTR cs:0x75b40c99,cl
  4109d2:	jge    0x410a52
  4109d4:	mov    edx,0x13965a6
  4109d9:	pop    edx
  4109da:	pop    esi
  4109db:	inc    ebp
  4109dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109dd:	retf   0xda30
  4109e0:	xchg   edi,eax
  4109e1:	int3   
  4109e2:	mov    edx,0xc39913f1
  4109e7:	aaa    
  4109e8:	push   es
  4109e9:	push   ebx
  4109ea:	jmp    0x5a7a6f03
  4109ef:	xchg   ebx,eax
  4109f0:	jmp    DWORD PTR [esi-0x14fc1a28]
  4109f6:	(bad)  [ecx+edi*8-0x2a]
  4109fa:	push   ebx
  4109fb:	idiv   BYTE PTR [ecx]
  4109fd:	jns    0x410a41
  4109ff:	mov    cl,0xf2
  410a01:	test   DWORD PTR ds:0xc967c028,eax
  410a07:	sub    BYTE PTR [ebp+0x1c],dl
  410a0a:	mov    esp,0x8a1e06f7
  410a0f:	dec    esi
  410a10:	pop    esi
  410a11:	out    0xfe,al
  410a13:	fld    QWORD PTR [eax]
  410a15:	lahf   
  410a16:	pop    esi
  410a17:	xchg   edx,eax
  410a18:	ror    BYTE PTR [esi],1
  410a1a:	and    DWORD PTR [edi+0x69],ebx
  410a1d:	add    edi,DWORD PTR [esi]
  410a1f:	shl    BYTE PTR [ecx-0x2b],cl
  410a22:	jp     0x410a62
  410a24:	popa   
  410a25:	lods   al,BYTE PTR ds:[esi]
  410a26:	push   ebx
  410a27:	(bad)  [ebx-0x2048ff9f]
  410a2d:	adc    bh,cl
  410a2f:	mov    gs,WORD PTR [ebx+edi*1]
  410a32:	inc    edx
  410a33:	dec    eax
  410a34:	fisttp QWORD PTR [edx+0x79ff6eee]
  410a3a:	or     esp,0x2f
  410a3d:	xlat   BYTE PTR ds:[ebx]
  410a3e:	retf   
  410a3f:	jle    0x410a23
  410a41:	test   eax,0xe77d999f
  410a46:	enter  0xa1fe,0xbf
  410a4a:	push   esi
  410a4b:	into   
  410a4c:	cld    
  410a4d:	sbb    eax,0x4dbd695f
  410a52:	adc    bl,BYTE PTR [ecx-0x6]
  410a55:	mov    gs:0x12599571,al
  410a5b:	and    al,al
  410a5d:	(bad)  
  410a5e:	das    
  410a5f:	jns    0x4109f7
  410a61:	data16 (bad) 
  410a63:	cmp    al,0x64
  410a65:	mov    ds:0xfaf389be,al
  410a6a:	neg    BYTE PTR [ecx]
  410a6c:	stos   DWORD PTR es:[edi],eax
  410a6d:	add    eax,0x1e307f41
  410a72:	aad    0xa
  410a74:	jl     0x4109fd
  410a76:	lods   eax,DWORD PTR ds:[esi]
  410a77:	repz hlt 
  410a79:	das    
  410a7a:	je     0x410a75
  410a7c:	add    DWORD PTR [ebp-0x10],ebp
  410a7f:	out    0xce,al
  410a81:	mov    BYTE PTR [esi],ch
  410a83:	xchg   BYTE PTR [ebx+0x6a3dcaee],ch
  410a89:	dec    eax
  410a8a:	and    DWORD PTR [eax-0x25ebe27],0xffffffaa
  410a91:	ret    0xd64c
  410a94:	pop    ss
  410a95:	fstp   DWORD PTR [esi+0x6e6be957]
  410a9b:	sbb    edi,DWORD PTR [edx+0x32d27706]
  410aa1:	es dec al
  410aa4:	dec    esi
  410aa5:	mov    edi,0x4ef6b018
  410aaa:	(bad)  
  410aab:	cdq    
  410aac:	(bad)  
  410aad:	mov    DWORD PTR [eax],ecx
  410aaf:	xor    eax,0xe482c793
  410ab4:	push   edx
  410ab5:	cmp    BYTE PTR [ebp-0x7b],cl
  410ab8:	push   ss
  410ab9:	add    DWORD PTR [edi],eax
  410abb:	neg    DWORD PTR [edx]
  410abd:	lock mov ebx,0xb7b7e530
  410ac3:	cmp    eax,0xd0dae330
  410ac8:	push   edi
  410ac9:	mov    ch,0xce
  410acb:	mov    ebx,0x83bd3bf1
  410ad0:	test   al,0x9b
  410ad2:	xchg   ebx,eax
  410ad3:	mov    cl,0x37
  410ad5:	push   0xffffff98
  410ad7:	into   
  410ad8:	dec    ecx
  410ad9:	into   
  410ada:	mov    dh,0x9c
  410adc:	sahf   
  410add:	shl    DWORD PTR [edx-0x37],cl
  410ae0:	jo     0x410b08
  410ae2:	xor    BYTE PTR [ebx+0x4d],bh
  410ae5:	lea    eax,[eax+0x58]
  410ae8:	pop    esi
  410ae9:	mov    edx,0x90cdb87f
  410aee:	stos   BYTE PTR es:[edi],al
  410aef:	push   es
  410af0:	xlat   BYTE PTR ds:[ebx]
  410af1:	cmp    ebp,edi
  410af3:	imul   ebx,ebx,0x49
  410af6:	mov    edi,0x7f54bb01
  410afb:	cmp    ebp,ebx
  410afd:	inc    esi
  410afe:	cwde   
  410aff:	or     al,0xf7
  410b01:	or     BYTE PTR [esi+0x4a],cl
  410b04:	mov    esp,0x2ea19cab
  410b09:	les    ecx,FWORD PTR [esi]
  410b0b:	nop
  410b0c:	or     BYTE PTR [ecx+0x12],ah
  410b0f:	push   edx
  410b10:	add    DWORD PTR ds:[eax+0x25],0x5016129b
  410b18:	mov    ax,fs
  410b1b:	inc    edi
  410b1c:	(bad)  
  410b1d:	fadd   st,st(3)
  410b1f:	dec    BYTE PTR [edx+0x1b]
  410b22:	and    eax,esi
  410b24:	sbb    BYTE PTR [eax],0xbe
  410b27:	inc    edi
  410b28:	test   BYTE PTR [ebx],dh
  410b2a:	(bad)  
  410b2b:	sub    DWORD PTR [edx+eax*2+0x4e],edi
  410b2f:	xlat   BYTE PTR ds:[ebx]
  410b30:	pop    ecx
  410b31:	fdiv   QWORD PTR ds:0x82093e03
  410b37:	(bad)  
  410b39:	sar    BYTE PTR [ebx-0x5f],1
  410b3c:	cmp    dh,cl
  410b3e:	call   0x281da568
  410b43:	xor    edi,0xffffff9d
  410b46:	lods   al,BYTE PTR ds:[esi]
  410b47:	stos   DWORD PTR es:[edi],eax
  410b48:	fcomp  QWORD PTR [edx-0x4d]
  410b4b:	pop    esi
  410b4c:	push   ds
  410b4d:	dec    esi
  410b4e:	rcl    cl,1
  410b50:	cmc    
  410b51:	ror    edx,1
  410b53:	or     eax,0xa569a704
  410b58:	ins    DWORD PTR es:[edi],dx
  410b59:	add    eax,0x1df7efec
  410b5e:	sub    BYTE PTR [esi+edx*2-0x65e56be3],bh
  410b65:	js     0x410b38
  410b67:	aam    0xde
  410b69:	clc    
  410b6a:	lods   al,BYTE PTR ds:[esi]
  410b6b:	imul   eax,DWORD PTR [ecx+0x7e],0xffffffed
  410b6f:	sub    esi,DWORD PTR [ecx-0x6494d0fc]
  410b75:	xor    eax,0x884e5c10
  410b7a:	cmp    esi,ecx
  410b7c:	sub    BYTE PTR [ecx+ebx*2+0x59],ch
  410b80:	adc    DWORD PTR [edx+0x13],edi
  410b83:	hlt    
  410b84:	and    eax,0xc0b43cf1
  410b89:	xchg   edx,eax
  410b8a:	xchg   ebp,eax
  410b8b:	push   ds
  410b8c:	sti    
  410b8d:	dec    edx
  410b8e:	shr    ebx,0x5f
  410b91:	in     eax,0x20
  410b93:	inc    ecx
  410b94:	cmp    al,0xd2
  410b96:	dec    esp
  410b97:	popfw  
  410b99:	ror    BYTE PTR [edx-0x3d0893a3],1
  410b9f:	lahf   
  410ba0:	mov    cs,ecx
  410ba2:	imul   ecx,eax,0x75
  410ba5:	jl     0x410b82
  410ba7:	ja     0x410b71
  410ba9:	pop    ss
  410baa:	or     al,0x61
  410bac:	or     bh,dh
  410bae:	mov    al,ds:0xd643a702
  410bb3:	inc    ecx
  410bb4:	push   ss
  410bb5:	pop    ds
  410bb6:	fs xchg ebp,esp
  410bb9:	mov    dh,0x20
  410bbb:	cmc    
  410bbc:	sub    ebx,ebp
  410bbe:	call   0x464e6d64
  410bc3:	xchg   esi,eax
  410bc4:	je     0x410c44
  410bc6:	xor    eax,0x57fe970a
  410bcb:	mov    edx,0x84976e66
  410bd0:	mov    ch,0x94
  410bd2:	rcl    BYTE PTR [ebx-0x50],0xd9
  410bd6:	dec    ecx
  410bd7:	adc    cl,ah
  410bd9:	aaa    
  410bda:	(bad)  
  410bdb:	int    0xd1
  410bdd:	sub    cl,ch
  410bdf:	dec    esp
  410be0:	xchg   esi,ecx
  410be2:	shr    BYTE PTR [ebx-0x7c58cd19],cl
  410be8:	or     ch,BYTE PTR [esi+ecx*8]
  410beb:	popf   
  410bec:	jge    0x410c1a
  410bee:	push   ebp
  410bef:	pop    edx
  410bf0:	dec    edx
  410bf1:	ret    0x24a7
  410bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf5:	sub    ecx,esp
  410bf7:	jg     0x410bd5
  410bf9:	cli    
  410bfa:	mov    bh,0x23
  410bfc:	outs   dx,BYTE PTR ds:[esi]
  410bfd:	scas   eax,DWORD PTR es:[edi]
  410bfe:	shl    DWORD PTR [edi+0x1c0f63b3],0x4f
  410c05:	pop    ds
  410c06:	scas   al,BYTE PTR es:[edi]
  410c07:	icebp  
  410c08:	adc    edx,DWORD PTR [ebx-0x5a]
  410c0b:	scas   eax,DWORD PTR es:[edi]
  410c0c:	jb     0x410c77
  410c0e:	dec    edx
  410c0f:	outs   dx,DWORD PTR ds:[esi]
  410c10:	test   al,0xc1
  410c12:	inc    edx
  410c13:	jnp    0x410bee
  410c15:	adc    ah,BYTE PTR [edx]
  410c17:	not    BYTE PTR [ecx-0x2059f9f5]
  410c1d:	dec    esi
  410c1e:	push   ebp
  410c1f:	cmp    bl,BYTE PTR [ebx+0x2f]
  410c22:	jbe    0x410c20
  410c24:	push   edi
  410c25:	adc    esp,0xffffffc5
  410c28:	and    al,0x7
  410c2a:	adc    al,al
  410c2c:	clc    
  410c2d:	cmp    eax,0x5de715f2
  410c32:	push   ss
  410c33:	lods   al,BYTE PTR ds:[esi]
  410c34:	and    BYTE PTR [edi+0x25],0xd3
  410c38:	add    DWORD PTR [edi*2-0x71c20f19],esi
  410c3f:	sbb    ch,al
  410c41:	sahf   
  410c42:	(bad)  
  410c43:	xchg   DWORD PTR [edx],ebx
  410c45:	or     BYTE PTR [eax],dl
  410c47:	adc    esp,DWORD PTR [eax+ebx*4+0x15]
  410c4b:	adc    eax,0x3f738822
  410c50:	xor    bh,cl
  410c52:	and    BYTE PTR [edx-0x2af6eda5],0x6a
  410c59:	mov    bl,0x2
  410c5b:	shr    BYTE PTR [edx-0x741e8e41],0x29
  410c62:	sahf   
  410c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c64:	pop    ss
  410c65:	pop    ss
  410c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c67:	mov    ch,dl
  410c69:	addr16 in eax,0xcf
  410c6c:	ret    
  410c6d:	xlat   BYTE PTR ds:[ebx]
  410c6e:	(bad)  
  410c6f:	test   eax,0xf079f334
  410c74:	xchg   edx,eax
  410c75:	nop
  410c76:	bound  ebp,QWORD PTR [edx]
  410c78:	xchg   esp,eax
  410c79:	xchg   edi,eax
  410c7a:	in     al,0x7c
  410c7c:	sub    esp,DWORD PTR [ebx]
  410c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c7f:	sbb    ebx,esp
  410c81:	pop    ebp
  410c82:	and    eax,0x25f7c679
  410c87:	xor    ebp,esp
  410c89:	stc    
  410c8a:	push   ecx
  410c8b:	inc    edx
  410c8c:	int    0x56
  410c8e:	and    eax,0xf2e7759b
  410c93:	dec    ecx
  410c94:	dec    esp
  410c95:	push   es
  410c96:	popf   
  410c97:	inc    edi
  410c98:	(bad)
  410c9d:	xchg   esp,eax
  410c9e:	add    ebp,DWORD PTR [eax+0x10]
  410ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ca2:	mov    fs,eax
  410ca4:	sbb    eax,0x7ab7dfc9
  410ca9:	cmp    BYTE PTR [esi-0x1c],bl
  410cac:	mov    bh,0x54
  410cae:	xchg   edi,eax
  410caf:	dec    ebp
  410cb0:	test   dh,bl
  410cb2:	jo     0x410cf1
  410cb4:	mov    bl,0x90
  410cb6:	pushf  
  410cb7:	mov    al,0xf5
  410cb9:	fst    DWORD PTR [edi+edx*1]
  410cbc:	mov    esp,0xec716fa9
  410cc1:	cmp    ebx,DWORD PTR [ebx+esi*1-0x4a40197c]
  410cc8:	call   0xe9d6371c
  410ccd:	mov    ds:0x37f14b3f,al
  410cd2:	(bad)  
  410cd3:	adc    edx,DWORD PTR [edi]
  410cd5:	pop    ecx
  410cd6:	or     ebx,DWORD PTR ds:0xcf4965c6
  410cdc:	sbb    eax,0x51340942
  410ce1:	add    DWORD PTR [esi],edx
  410ce3:	add    ch,BYTE PTR [edi-0x5966671a]
  410ce9:	cld    
  410cea:	fwait
  410ceb:	pop    ss
  410cec:	jmp    0x885954b9
  410cf1:	dec    eax
  410cf2:	bound  ebp,QWORD PTR [edx]
  410cf4:	and    dl,BYTE PTR [ebx]
  410cf6:	jp     0x410c7b
  410cf8:	lds    ebx,FWORD PTR [ebx-0x9]
  410cfb:	pop    ebx
  410cfc:	or     eax,0x72fbb801
  410d01:	xchg   esi,eax
  410d02:	not    DWORD PTR [esi]
  410d04:	inc    edi
  410d05:	add    DWORD PTR [esi+0x148662cd],ecx
  410d0b:	push   ss
  410d0c:	sbb    esi,DWORD PTR [esi+ebp*2]
  410d0f:	arpl   WORD PTR [ebp-0x5128db5f],sp
  410d15:	lods   al,BYTE PTR ds:[esi]
  410d16:	into   
  410d17:	sub    dl,ch
  410d19:	xchg   ecx,eax
  410d1a:	push   0xffffff8c
  410d1c:	adc    BYTE PTR [esi+esi*2-0x1],bh
  410d20:	test   DWORD PTR [ecx+0x28],0xa4d0d2b6
  410d27:	add    esp,DWORD PTR [ebp-0x3b]
  410d2a:	inc    ebx
  410d2b:	scas   al,BYTE PTR es:[edi]
  410d2c:	or     eax,0x3b976e63
  410d31:	mov    bh,0xf0
  410d33:	aam    0xa4
  410d35:	mov    cl,0xe4
  410d37:	mov    al,ds:0x82eeea2c
  410d3c:	hlt    
  410d3d:	jle    0x410cf8
  410d3f:	xor    BYTE PTR [ebx+0x28],bl
  410d42:	cmp    bl,bh
  410d44:	xor    al,0xe6
  410d46:	jbe    0x410dc1
  410d48:	int    0x72
  410d4a:	push   ecx
  410d4b:	pusha  
  410d4c:	add    DWORD PTR ss:[edx],eax
  410d4f:	mov    eax,eax
  410d51:	cdq    
  410d52:	out    0xdc,eax
  410d54:	jecxz  0x410daa
  410d56:	repnz pop ds
  410d58:	(bad)  
  410d59:	and    BYTE PTR [edi-0x369ee60f],dl
  410d5f:	leave  
  410d60:	dec    ebp
  410d61:	retf   0xe55f
  410d64:	nop
  410d65:	jae    0x410dc0
  410d67:	cmc    
  410d68:	fwait
  410d69:	mov    ebx,0xa18b74d2
  410d6e:	add    DWORD PTR [ecx-0x209662e],ecx
  410d74:	pop    ss
  410d75:	push   ecx
  410d76:	les    esi,FWORD PTR [edx]
  410d78:	xchg   DWORD PTR [ebx-0x3dc6f84a],edx
  410d7e:	aam    0x25
  410d80:	les    ecx,FWORD PTR [ebx]
  410d82:	adc    dl,BYTE PTR [edi+esi*1+0x7a10b43e]
  410d89:	(bad)  
  410d8a:	fisttp QWORD PTR [edi-0x33aca9e0]
  410d90:	or     eax,0xc02c5d43
  410d95:	fdiv   QWORD PTR [edi+0x6a671499]
  410d9b:	mov    edx,0x2c8cecc5
  410da0:	pop    es
  410da1:	add    al,0x4c
  410da3:	and    al,0x40
  410da5:	ins    DWORD PTR es:[edi],dx
  410da6:	lock jnp 0x410d34
  410da9:	add    al,0x2c
  410dab:	pop    ds
  410dac:	pop    edi
  410dad:	in     al,0xdd
  410daf:	(bad)
  410db2:	rol    DWORD PTR [ebp+0x35],0x23
  410db6:	call   0x5b03:0x1a41819c
  410dbd:	xchg   edi,eax
  410dbe:	xor    DWORD PTR [eax-0xe],ecx
  410dc1:	lahf   
  410dc2:	mov    esi,0x21cdc8f
  410dc7:	fcmovnb st,st(6)
  410dc9:	or     esi,esi
  410dcb:	or     BYTE PTR [ebp-0x67],cl
  410dce:	mov    esp,0xc1c98d6
  410dd3:	pop    ss
  410dd4:	adc    cl,ah
  410dd6:	xor    eax,0x63c07bf
  410ddb:	dec    esi
  410ddc:	mov    ch,0x78
  410dde:	retf   0xe042
  410de1:	fstp   QWORD PTR [edx-0x5db3c0e9]
  410de7:	enter  0xab80,0x2e
  410deb:	test   DWORD PTR [edx+0x3],esi
  410dee:	or     al,0x93
  410df0:	pop    ss
  410df1:	mov    DWORD PTR ds:0x4edc6c71,0x4e7ad1ae
  410dfb:	push   ecx
  410dfc:	test   BYTE PTR [eax-0x1db39267],bh
  410e02:	les    edi,FWORD PTR [esi]
  410e04:	ds std 
  410e06:	(bad)  
  410e07:	in     al,dx
  410e08:	xchg   edx,eax
  410e09:	cli    
  410e0a:	lock add eax,0x48e827a8
  410e10:	or     al,0xcb
  410e12:	pop    es
  410e13:	jmp    0x410dcd
  410e15:	repz push esi
  410e17:	popf   
  410e18:	lahf   
  410e19:	ffreep st(2)
  410e1b:	and    BYTE PTR [ecx-0x12],al
  410e1e:	std    
  410e1f:	loop   0x410e81
  410e21:	mov    cl,0xf9
  410e23:	(bad)  
  410e24:	stos   DWORD PTR es:[edi],eax
  410e25:	aad    0x1d
  410e27:	ja     0x410e6e
  410e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e2a:	call   0xebe4a094
  410e2f:	jecxz  0x410e7d
  410e31:	adc    DWORD PTR [edi+0x9],ebp
  410e34:	sahf   
  410e35:	dec    edx
  410e36:	jmp    0x8d5ba8b3
  410e3b:	and    DWORD PTR [eax-0x47],esi
  410e3e:	inc    esp
  410e3f:	or     ebx,ecx
  410e41:	ficomp WORD PTR [edi]
  410e43:	xor    dl,BYTE PTR [esi]
  410e45:	xchg   ebx,eax
  410e46:	push   esp
  410e47:	icebp  
  410e48:	fdivr  DWORD PTR [eax-0x59cf3f3a]
  410e4e:	pop    es
  410e4f:	shl    DWORD PTR [ecx+0x6d],cl
  410e52:	sub    dl,ah
  410e54:	fsubrp st(7),st
  410e56:	scas   eax,DWORD PTR es:[edi]
  410e57:	addr16 int 0xcd
  410e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e5b:	sbb    al,0x3e
  410e5d:	dec    esp
  410e5e:	(bad)  
  410e5f:	jecxz  0x410dea
  410e61:	jmp    FWORD PTR [edx-0x2b8413b]
  410e67:	inc    edx
  410e68:	shr    DWORD PTR [esi+0x3aee1ef6],1
  410e6e:	mov    fs,edi
  410e70:	fwait
  410e71:	push   ds
  410e72:	daa    
  410e73:	inc    eax
  410e74:	add    al,0xc9
  410e76:	nop
  410e77:	adc    eax,0xdd666d15
  410e7c:	inc    eax
  410e7d:	popf   
  410e7e:	je     0x410e59
  410e80:	enter  0x3c2d,0x21
  410e84:	lods   al,BYTE PTR ds:[esi]
  410e85:	jmp    0x84f29ff8
  410e8a:	xor    ebx,esi
  410e8c:	jo     0x410f0a
  410e8e:	sti    
  410e8f:	xor    DWORD PTR [eax],0xffffffbe
  410e92:	aad    0x24
  410e94:	dec    esp
  410e95:	shl    DWORD PTR [ecx-0x7d],cl
  410e98:	test   al,0xea
  410e9a:	mov    esp,0xc4eb252
  410e9f:	and    DWORD PTR [esi+0x1d],edi
  410ea2:	and    ebx,DWORD PTR [ebx]
  410ea4:	fnsave [esi]
  410ea6:	dec    esp
  410ea7:	cli    
  410ea8:	mov    cl,0xa6
  410eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eab:	cmp    ch,al
  410ead:	js     0x410ed1
  410eaf:	icebp  
  410eb0:	hlt    
  410eb1:	jbe    0x410e4f
  410eb3:	dec    esp
  410eb4:	xchg   ecx,eax
  410eb5:	clc    
  410eb6:	in     eax,0x57
  410eb8:	sbb    DWORD PTR [ebp+0x5c90493e],ebx
  410ebe:	sahf   
  410ebf:	sar    BYTE PTR [esi],1
  410ec1:	call   0xafe3a5a0
  410ec6:	dec    eax
  410ec7:	mov    eax,ds:0x8309e573
  410ecc:	ins    DWORD PTR es:[edi],dx
  410ecd:	jae    0x410efb
  410ecf:	push   ecx
  410ed0:	push   0x67
  410ed2:	xor    BYTE PTR [ecx],dl
  410ed4:	jnp    0x410ee8
  410ed6:	xor    eax,0xc6e8b4c6
  410edb:	inc    esi
  410edc:	aam    0x8
  410ede:	imul   esp,DWORD PTR [esi],0xffffffb3
  410ee1:	jbe    0x410f23
  410ee3:	xchg   edx,eax
  410ee4:	cmp    BYTE PTR [edi-0xb],0xe0
  410ee8:	xchg   ch,bl
  410eea:	jbe    0x410f36
  410eec:	mov    BYTE PTR [edx-0x107618d6],dh
  410ef2:	cmp    BYTE PTR [ecx-0x75],bh
  410ef5:	ret    0x6286
  410ef8:	jecxz  0x410f63
  410efa:	mov    ch,bl
  410efc:	rcl    DWORD PTR [esi+esi*8-0x74],cl
  410f00:	adc    eax,0x51347b9d
  410f05:	push   edx
  410f06:	aad    0xa2
  410f08:	ret    
  410f09:	mov    bh,ah
  410f0b:	fmul   st,st(7)
  410f0d:	or     bl,BYTE PTR [ebx-0x524bdbde]
  410f13:	rcr    BYTE PTR [esi+0x7a],1
  410f16:	mov    eax,ds:0x49d7b596
  410f1b:	das    
  410f1c:	pop    edx
  410f1d:	shl    BYTE PTR [ecx-0x58],1
  410f20:	stos   BYTE PTR es:[edi],al
  410f21:	in     eax,dx
  410f22:	xchg   ecx,eax
  410f23:	mov    ds:0x2cde5a2d,eax
  410f28:	jmp    0x5603d2f3
  410f2d:	pop    es
  410f2e:	pop    es
  410f2f:	xchg   ecx,eax
  410f30:	add    edx,edi
  410f32:	jp     0x410f13
  410f34:	mov    al,dl
  410f36:	clc    
  410f37:	jbe    0x410ed1
  410f39:	xchg   edi,eax
  410f3a:	dec    edi
  410f3b:	push   edx
  410f3c:	inc    BYTE PTR [edx+0x9c459a]
  410f42:	jle    0x410ee2
  410f44:	fstp   DWORD PTR [ecx+esi*2+0x23]
  410f48:	stos   DWORD PTR es:[edi],eax
  410f49:	mov    esp,0xb912226
  410f4e:	jp     0x410f5b
  410f50:	jle    0x410fa5
  410f52:	shl    DWORD PTR [edx],0xd0
  410f55:	test   DWORD PTR [edi-0x6e96f1fa],0xaff91533
  410f5f:	cmp    DWORD PTR gs:[eax+ebx*2],ecx
  410f63:	xchg   ebp,eax
  410f64:	test   DWORD PTR [edx-0x19],ebp
  410f67:	mov    bh,0xb5
  410f69:	or     dh,bh
  410f6b:	dec    ebx
  410f6c:	or     ebx,esp
  410f6e:	cmp    BYTE PTR [edx+0x50],dh
  410f71:	push   0x9add3f46
  410f76:	ss xor eax,0xdffff640
  410f7c:	repnz or eax,0xc27ae79f
  410f82:	cmp    esi,DWORD PTR ds:0x7d841e1a
  410f88:	add    eax,0xffcf55e4
  410f8d:	outs   dx,DWORD PTR ds:[esi]
  410f8e:	inc    ebp
  410f8f:	sbb    edx,ecx
  410f91:	(bad)  
  410f92:	add    eax,0x385e3e79
  410f97:	mov    ch,0xc7
  410f99:	fild   DWORD PTR [edi]
  410f9b:	es ret 0xa41b
  410f9f:	xor    dl,cl
  410fa1:	std    
  410fa2:	retf   
  410fa3:	scas   al,BYTE PTR es:[edi]
  410fa4:	xchg   ebx,eax
  410fa5:	mov    dh,BYTE PTR [esi+ebx*8]
  410fa8:	jmp    0x410f74
  410faa:	cld    
  410fab:	inc    esp
  410fac:	xchg   edx,eax
  410fad:	dec    ebx
  410fae:	xchg   esi,eax
  410faf:	sub    bh,BYTE PTR [esi]
  410fb1:	(bad)  
  410fb2:	jp     0x410f34
  410fb4:	fs (bad) 
  410fb9:	arpl   bp,bx
  410fbb:	xchg   ebp,eax
  410fbc:	push   ebx
  410fbd:	test   DWORD PTR [esi-0x166bf95f],esp
  410fc3:	jnp    0x410fb6
  410fc5:	out    dx,eax
  410fc6:	mov    esi,0xa239018a
  410fcb:	adc    al,0x73
  410fcd:	in     al,0x37
  410fcf:	or     esp,0xffffffc6
  410fd2:	outs   dx,BYTE PTR ds:[esi]
  410fd3:	push   ss
  410fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fd5:	cmc    
  410fd6:	sti    
  410fd7:	xchg   esp,eax
  410fd8:	inc    esi
  410fd9:	rcr    bh,cl
  410fdb:	push   ebp
  410fdc:	pop    edx
  410fdd:	mov    ds:0xa3b77894,al
  410fe2:	jb     0x410f98
  410fe4:	inc    esp
  410fe5:	xchg   DWORD PTR [ebx+0x1f],ecx
  410fe8:	fwait
  410fe9:	xchg   ebp,eax
  410fea:	ss mov ecx,0x7a7c5bb4
  410ff0:	sub    al,0x7d
  410ff2:	jmp    0x410ff9
  410ff4:	dec    edi
  410ff5:	(bad)  
  410ff6:	(bad)  
  410ff8:	outs   dx,BYTE PTR ds:[esi]
  410ff9:	shl    DWORD PTR [edx],cl
  410ffb:	sub    BYTE PTR [eax],dh
  410ffd:	sbb    DWORD PTR [ecx],edx
  410fff:	xchg   esp,eax
  411000:	lock leave 
  411002:	test   al,0xf3
  411004:	mov    esi,0xbd69e0c4
  411009:	pminsw mm2,QWORD PTR [ecx+0x1ed7cef]
  411010:	imul   BYTE PTR [eax-0x1c12e103]
  411016:	mov    eax,ds:0x8f8fff34
  41101b:	dec    ebp
  41101c:	pop    ss
  41101d:	xor    edx,DWORD PTR ds:0xfe8551f7
  411023:	(bad)  
  411024:	cs xor dh,ah
  411027:	push   ebx
  411028:	xchg   BYTE PTR [ebx-0x7d],dh
  41102b:	clc    
  41102c:	mov    dl,cl
  41102e:	add    dh,BYTE PTR [edx]
  411030:	jmp    0xbf45fd73
  411035:	ds fwait
  411037:	int3   
  411038:	lods   al,BYTE PTR ds:[esi]
  411039:	mov    cl,0x6
  41103b:	retf   
  41103c:	mov    esi,0x865b266e
  411041:	jbe    0x41102d
  411043:	or     edx,edx
  411045:	xor    DWORD PTR [ecx+0xbc0d6d1],esi
  41104b:	and    ah,ch
  41104d:	js     0x411057
  41104f:	outs   dx,BYTE PTR ds:[esi]
  411050:	mov    ch,0x6b
  411052:	dec    edx
  411053:	lods   al,BYTE PTR ds:[esi]
  411054:	mov    dh,0x6
  411056:	loopne 0x4110ce
  411058:	pusha  
  411059:	sub    BYTE PTR [ecx+ebp*8],cl
  41105c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41105d:	js     0x411040
  41105f:	and    ebx,esi
  411061:	shl    BYTE PTR [ebp-0x6f],cl
  411064:	ja     0x4110b5
  411066:	jp     0x4110b7
  411068:	into   
  411069:	aaa    
  41106a:	cmp    BYTE PTR [ebx-0x69],al
  41106d:	inc    ebx
  41106e:	in     eax,dx
  41106f:	out    dx,eax
  411070:	fs call 0x1979:0xba187ca2
  411078:	clc    
  411079:	addr16 jb 0x41108b
  41107c:	pop    edi
  41107d:	(bad)  
  41107e:	jns    0x4110fd
  411080:	pop    ds
  411081:	sub    ebp,0x994571ce
  411087:	mov    dl,0xeb
  411089:	inc    edx
  41108a:	fisttp DWORD PTR [edi+0x2945342]
  411090:	xchg   ecx,eax
  411091:	in     al,dx
  411092:	mov    ebx,0x96fbbc1
  411097:	cmp    DWORD PTR [ecx+0x68],edi
  41109a:	and    al,BYTE PTR [edi+0x4c]
  41109d:	(bad)  
  4110a0:	jno    0x411117
  4110a2:	cwde   
  4110a3:	adc    bl,BYTE PTR [eax-0x38dcaa1]
  4110a9:	cmc    
  4110aa:	scas   al,BYTE PTR es:[edi]
  4110ab:	jae    0x411129
  4110ad:	adc    eax,0xee80cd4a
  4110b2:	xor    bh,BYTE PTR [edx]
  4110b4:	std    
  4110b5:	and    DWORD PTR [ebp-0x7f],esp
  4110b8:	mov    dh,0xb1
  4110ba:	call   0x63f2fc8d
  4110bf:	pop    esi
  4110c0:	cmp    al,0xcc
  4110c2:	sub    edi,DWORD PTR [ecx-0x3f]
  4110c5:	or     eax,0x83504cbc
  4110ca:	xor    ah,ah
  4110cc:	lea    esi,[edx+0x2e]
  4110cf:	aas    
  4110d0:	aas    
  4110d1:	push   ss
  4110d2:	lods   eax,DWORD PTR ds:[esi]
  4110d3:	inc    edx
  4110d4:	dec    esp
  4110d5:	into   
  4110d6:	shr    BYTE PTR [ebp+0x26a8bcda],1
  4110dc:	push   ds
  4110dd:	rcl    BYTE PTR [edi-0x280ff23d],0xf7
  4110e4:	cwde   
  4110e5:	fldcw  WORD PTR [ecx+0x32070ae3]
  4110eb:	dec    edi
  4110ec:	pop    edx
  4110ed:	rcl    edi,0xc1
  4110f0:	cmp    bh,ch
  4110f2:	jb     0x411087
  4110f4:	xlat   BYTE PTR ds:[ebx]
  4110f5:	(bad)  
  4110f6:	mov    ecx,0x8dfeed46
  4110fb:	push   esi
  4110fc:	call   0xe936:0x80925aa7
  411103:	out    0xc4,eax
  411105:	(bad)  
  411106:	popa   
  411107:	push   esp
  411108:	rcr    ebp,cl
  41110a:	lock dec esp
  41110c:	push   cs
  41110d:	(bad)  
  41110e:	icebp  
  41110f:	cmp    dh,bl
  411111:	sub    esi,ecx
  411113:	pop    edx
  411114:	xchg   edi,eax
  411115:	inc    ebx
  411117:	inc    DWORD PTR [edi+0x71eae334]
  41111d:	jp     0x41115d
  41111f:	inc    ebp
  411120:	scas   eax,DWORD PTR es:[edi]
  411121:	push   ebp
  411122:	stos   BYTE PTR es:[edi],al
  411123:	or     bh,BYTE PTR [ecx+0x62ba69f9]
  411129:	inc    esp
  41112a:	popf   
  41112b:	cs push eax
  41112d:	mov    al,0xe1
  41112f:	mov    esi,0x1edf8b3
  411134:	xchg   ebp,eax
  411135:	(bad)  
  411136:	jno    0x4111b3
  411138:	imul   esp,DWORD PTR [edx+0xe],0xffffffa2
  41113c:	pop    esp
  41113d:	jmp    0x4110cf
  41113f:	sub    ch,0x6c
  411142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411143:	ja     0x411196
  411145:	popa   
  411146:	sub    bh,BYTE PTR [ecx]
  411148:	cs sub al,0x1
  41114b:	or     edi,DWORD PTR [edi+0x24]
  41114e:	or     BYTE PTR [ebx-0x644a1916],0xba
  411155:	jne    0x4111cb
  411157:	pop    eax
  411158:	arpl   WORD PTR [edx-0x6d768a3e],bp
  41115e:	stos   DWORD PTR es:[edi],eax
  41115f:	stos   BYTE PTR es:[edi],al
  411160:	jl     0x411174
  411162:	and    ah,bh
  411164:	add    dl,ch
  411166:	aaa    
  411167:	push   esp
  411168:	ins    DWORD PTR es:[edi],dx
  411169:	mov    bl,0x3e
  41116b:	inc    edx
  41116c:	sbb    eax,0x89bc9fe9
  411171:	inc    ebx
  411172:	sub    esp,DWORD PTR ds:0x579601cf
  411178:	push   ss
  411179:	push   cs
  41117a:	pxor   mm4,QWORD PTR [edi]
  41117d:	mov    ebx,esi
  41117f:	ja     0x411102
  411181:	xchg   ecx,eax
  411182:	cdq    
  411183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411184:	std    
  411185:	iret   
  411186:	scas   eax,DWORD PTR es:[edi]
  411187:	xchg   esp,eax
  411188:	and    al,0xe5
  41118a:	int    0x47
  41118c:	dec    edx
  41118d:	js     0x41110f
  41118f:	fisub  DWORD PTR [edx-0x73]
  411192:	int    0x26
  411194:	jno    0x4111d7
  411196:	inc    edx
  411197:	add    BYTE PTR [edi-0x588741ff],0xbd
  41119e:	pop    esp
  41119f:	push   edi
  4111a0:	(bad)  
  4111a1:	retf   
  4111a2:	mov    esp,0x698070a1
  4111a7:	jno    0x4111cc
  4111a9:	mov    eax,ds:0xf1d2feb6
  4111ae:	lahf   
  4111af:	mov    es,WORD PTR [ecx]
  4111b1:	retf   0xdce1
  4111b4:	dec    ebp
  4111b5:	iret   
  4111b6:	into   
  4111b7:	jbe    0x41113f
  4111b9:	jmp    0x143ca906
  4111be:	mov    edx,0x39f4af0d
  4111c3:	dec    edx
  4111c4:	es out 0x1,al
  4111c7:	repnz addr16 inc cl
  4111cb:	mov    DWORD PTR [ecx+eiz*8-0x40],edi
  4111cf:	or     ebp,DWORD PTR [ecx-0x50]
  4111d2:	mov    BYTE PTR [edx-0x69],bh
  4111d5:	sub    al,0xb1
  4111d7:	push   0xda6c44f9
  4111dc:	jne    0x411167
  4111de:	sbb    DWORD PTR [esi+0x3b],edi
  4111e1:	dec    edx
  4111e2:	dec    eax
  4111e3:	pop    eax
  4111e4:	pop    es
  4111e5:	xor    ah,BYTE PTR [edx]
  4111e7:	mov    eax,ds:0xa17ba7a4
  4111ec:	xchg   ebp,eax
  4111ed:	push   edx
  4111ee:	push   es
  4111ef:	xchg   ebx,eax
  4111f0:	repz imul ebp,DWORD PTR [ebx*4+0x57bc62d6],0x31c985ff
  4111fc:	sti    
  4111fd:	cdq    
  4111fe:	jle    0x411232
  411200:	sbb    al,0x62
  411202:	mov    ebp,0xa1e93080
  411207:	ss pop ss
  411209:	mov    eax,0xb95fbe9a
  41120e:	add    BYTE PTR [ebx+0x54],bl
  411211:	pop    eax
  411212:	stc    
  411213:	imul   edx,DWORD PTR [ebx-0x54ed208e],0x37
  41121a:	icebp  
  41121b:	cmp    edi,eax
  41121d:	lds    esi,FWORD PTR [ebx+0x5d]
  411220:	ss repnz push esi
  411223:	fidiv  DWORD PTR [ecx+esi*2-0x77]
  411227:	cli    
  411228:	add    cl,BYTE PTR [ebp-0x767cef65]
  41122e:	push   ebp
  41122f:	jecxz  0x4112af
  411231:	push   ds
  411232:	das    
  411233:	imul   ebp,DWORD PTR [ebx+0x13],0x19bf3193
  41123a:	push   cs
  41123b:	dec    eax
  41123c:	scas   al,BYTE PTR es:[edi]
  41123d:	test   DWORD PTR [edx+0x2f],ebx
  411240:	js     0x41128b
  411242:	out    0x44,eax
  411244:	inc    eax
  411245:	jb     0x411287
  411247:	(bad)  
  411248:	pop    edx
  411249:	adc    esi,DWORD PTR [edi]
  41124b:	cdq    
  41124c:	outs   dx,BYTE PTR ds:[esi]
  41124d:	ins    BYTE PTR es:[edi],dx
  41124e:	xchg   edx,eax
  41124f:	stos   BYTE PTR es:[edi],al
  411250:	nop
  411251:	or     BYTE PTR [esi-0x19],dl
  411254:	repz rcr DWORD PTR [ecx],cl
  411257:	xchg   ebp,eax
  411258:	mov    ebp,0x3b841b2a
  41125d:	icebp  
  41125e:	or     ah,dh
  411260:	inc    esp
  411261:	imul   eax
  411263:	pop    edi
  411264:	add    al,0x68
  411266:	jecxz  0x411212
  411268:	jecxz  0x411229
  41126a:	nop
  41126b:	or     BYTE PTR [eax-0x60],cl
  41126e:	retf   
  41126f:	out    dx,eax
  411270:	inc    ecx
  411271:	loop   0x4112ee
  411273:	inc    esp
  411274:	and    dh,BYTE PTR [esi-0x73]
  411277:	jmp    0x41127a
  411279:	test   edi,0xf3f14fce
  41127f:	pop    ds
  411280:	loope  0x41124f
  411282:	sub    BYTE PTR [ebx-0x69ea9eb8],dl
  411288:	dec    BYTE PTR [edx+0x172ee07c]
  41128e:	mov    ebp,0xfc3f25a3
  411293:	in     al,dx
  411294:	stos   DWORD PTR es:[edi],eax
  411295:	sbb    BYTE PTR [ebx+0x689afc5b],cl
  41129b:	adc    eax,0x5cc62f93
  4112a0:	clc    
  4112a1:	jmp    0x7b3d:0x2b396063
  4112a8:	mov    ah,0xf0
  4112aa:	aam    0x1a
  4112ac:	and    BYTE PTR [edi+edi*2],cl
  4112af:	push   0xc
  4112b1:	pop    edi
  4112b2:	sbb    DWORD PTR [eax+edi*4+0x2ae84cd6],0xffffffaa
  4112ba:	clc    
  4112bb:	dec    ebp
  4112bc:	fwait
  4112bd:	(bad)  
  4112be:	cmp    dh,BYTE PTR [ebx-0x57b7b7b5]
  4112c4:	in     al,0x47
  4112c6:	leave  
  4112c7:	(bad)  
  4112c8:	pop    eax
  4112c9:	inc    DWORD PTR es:[ecx-0x4b4e3c56]
  4112d0:	lods   eax,DWORD PTR ds:[esi]
  4112d1:	mov    eax,0x4092db6e
  4112d6:	and    dl,al
  4112d8:	or     bh,al
  4112da:	xlat   BYTE PTR ds:[ebx]
  4112db:	push   esi
  4112dc:	retf   0xf08a
  4112df:	mov    bh,0x9c
  4112e1:	adc    DWORD PTR [edx+0x25],ecx
  4112e4:	cld    
  4112e5:	out    dx,eax
  4112e6:	cmp    ah,ah
  4112e8:	sub    DWORD PTR [ebx-0x7e],0xa5bf17f3
  4112ef:	cmp    BYTE PTR [edi+0x29],dl
  4112f2:	in     eax,dx
  4112f3:	xchg   ecx,eax
  4112f4:	mov    WORD PTR [esi+0x3900304b],cs
  4112fa:	js     0x4112ac
  4112fc:	hlt    
  4112fd:	push   cs
  4112fe:	loope  0x411321
  411300:	and    edx,edx
  411302:	stos   BYTE PTR es:[edi],al
  411303:	inc    ebp
  411304:	and    eax,0xa03e4f92
  411309:	les    ecx,FWORD PTR [edx+0x19]
  41130c:	les    edx,FWORD PTR [esi-0x3b60f034]
  411312:	and    DWORD PTR [ecx+0x5a],eax
  411315:	jns    0x41133d
  411317:	add    al,0xfd
  411319:	dec    eax
  41131a:	rcr    DWORD PTR [esi],0x34
  41131d:	jge    0x4112ff
  41131f:	pop    ds
  411320:	int3   
  411321:	jno    0x411397
  411323:	cwde   
  411324:	add    ebp,DWORD PTR [edi+0x3e]
  411327:	push   ecx
  411328:	popa   
  411329:	mov    ds:0xfa292561,eax
  41132e:	dec    ebp
  41132f:	popf   
  411330:	imul   DWORD PTR [ecx+0x5ce001bd]
  411336:	pop    ecx
  411337:	je     0x4112f7
  411339:	mov    edi,0x8eeb7b3
  41133e:	in     eax,dx
  41133f:	bound  esp,QWORD PTR [edi-0x5a]
  411342:	sahf   
  411343:	shl    DWORD PTR [ebx+0x3bc63111],0xb4
  41134a:	lea    edi,[edi-0x412e9d74]
  411350:	ins    DWORD PTR es:[edi],dx
  411351:	ftst   
  411353:	xchg   ebp,eax
  411354:	or     eax,0x7e35d863
  411359:	jp     0x411384
  41135b:	into   
  41135c:	gs adc eax,0xa02af03
  411362:	int3   
  411363:	mov    esi,0x881ef9e3
  411368:	js     0x41136e
  41136a:	xchg   esi,eax
  41136b:	les    eax,FWORD PTR [edi]
  41136d:	aaa    
  41136e:	mov    ah,0x13
  411370:	je     0x4113dd
  411372:	xor    al,0xa9
  411374:	sub    al,0x6d
  411376:	icebp  
  411377:	pop    ebx
  411378:	jge    0x4113e4
  41137a:	repnz and eax,0x65287d71
  411380:	shl    ecx,cl
  411382:	fidivr DWORD PTR [ebx]
  411384:	arpl   WORD PTR [eax+esi*1-0x45],di
  411388:	sbb    esi,DWORD PTR [ebx]
  41138a:	mov    al,0x83
  41138c:	sub    esi,edx
  41138e:	push   es
  41138f:	ds pop ss
  411391:	aas    
  411392:	or     eax,0x83720b5e
  411397:	sar    BYTE PTR [esi],0x67
  41139a:	jecxz  0x411333
  41139c:	data16 sti 
  41139e:	push   esp
  41139f:	pop    ecx
  4113a0:	imul   ecx,DWORD PTR [edi-0xd859190],0x19
  4113a7:	lods   al,BYTE PTR ds:[esi]
  4113a8:	jo     0x4113bc
  4113aa:	xor    eax,0x686b1ccd
  4113af:	mov    al,ds:0x6a0506d8
  4113b4:	mov    eax,ds:0x94985f00
  4113b9:	outs   dx,BYTE PTR ds:[esi]
  4113ba:	inc    esi
  4113bb:	popf   
  4113bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113bd:	in     al,dx
  4113be:	mov    eax,ds:0x7f0100d9
  4113c3:	jne    0x411442
  4113c5:	into   
  4113c6:	gs mov ah,0xc1
  4113c9:	popf   
  4113ca:	mov    WORD PTR [esi-0x25],ss
  4113cd:	push   eax
  4113ce:	jb     0x4113ec
  4113d0:	bound  eax,QWORD PTR [eax-0x710ca130]
  4113d6:	jmp    0x4113ee
  4113d8:	jae    0x411381
  4113da:	or     BYTE PTR [ebx],al
  4113dc:	jae    0x411456
  4113de:	lods   al,BYTE PTR ds:[esi]
  4113df:	popa   
  4113e0:	cmp    BYTE PTR [ecx-0x3f],cl
  4113e3:	(bad)  
  4113e4:	dec    esi
  4113e5:	aas    
  4113e6:	test   edi,0x6f3f1b78
  4113ec:	mov    edx,0x360595c9
  4113f1:	dec    edx
  4113f2:	aas    
  4113f3:	(bad)  
  4113f4:	mov    eax,DWORD PTR [esi*1-0x13289514]
  4113fb:	out    dx,eax
  4113fc:	sub    ebx,esp
  4113fe:	and    DWORD PTR [edi+0x9],0xfffffff3
  411402:	add    bh,BYTE PTR [edi]
  411404:	mov    bl,0x6d
  411406:	lock hlt 
  411408:	aas    
  411409:	mov    ds:0x1d9e5852,al
  41140e:	pop    ebp
  41140f:	cld    
  411410:	pop    esi
  411411:	sbb    eax,0x6ef44744
  411416:	dec    edx
  411417:	inc    eax
  411418:	xlat   BYTE PTR ds:[ebx]
  411419:	push   esp
  41141a:	inc    edx
  41141b:	mov    al,bh
  41141d:	dec    eax
  41141e:	mov    ecx,0xed3f2d91
  411423:	fdivr  DWORD PTR [edi+0x44]
  411426:	sub    eax,DWORD PTR [eax-0x37]
  411429:	retf   
  41142a:	add    ah,BYTE PTR [ebx]
  41142c:	pop    ss
  41142d:	fild   DWORD PTR [ecx-0x7f]
  411430:	adc    cl,BYTE PTR ss:[edi]
  411433:	xchg   ecx,eax
  411434:	out    0xf7,al
  411436:	jo     0x4113e4
  411438:	add    BYTE PTR [ebx],bh
  41143a:	lds    ebx,FWORD PTR [esp+ebx*4+0x6c6dd553]
  411441:	jae    0x4113c8
  411443:	cwde   
  411444:	sbb    bh,BYTE PTR [eax-0x618d4663]
  41144a:	dec    esp
  41144b:	pushf  
  41144c:	mov    ah,0x47
  41144e:	pushf  
  41144f:	and    edx,DWORD PTR [ecx+ecx*2]
  411452:	push   eax
  411453:	mov    ecx,0x8a0f2738
  411458:	push   eax
  411459:	sahf   
  41145a:	(bad)  
  41145b:	jns    0x411405
  41145d:	pushf  
  41145e:	popa   
  41145f:	aaa    
  411460:	mov    esp,0xcb0de34b
  411465:	in     eax,dx
  411466:	pop    ebx
  411467:	push   edx
  411468:	and    dh,BYTE PTR [ecx]
  41146a:	jg     0x41144a
  41146c:	inc    edx
  41146d:	jle    0x41146e
  41146f:	push   ds
  411470:	sahf   
  411471:	or     eax,0xee0e3924
  411476:	test   DWORD PTR [edi],ecx
  411478:	aad    0xb
  41147a:	into   
  41147b:	popf   
  41147c:	jbe    0x4114da
  41147e:	adc    DWORD PTR [esp+edx*4],eax
  411481:	push   ss
  411482:	xor    al,0xc9
  411484:	and    al,0xfd
  411486:	out    0xb7,al
  411488:	mov    ah,BYTE PTR [esi-0xa]
  41148b:	(bad)  
  41148c:	sbb    al,0xaa
  41148e:	cmp    DWORD PTR [ecx],esp
  411490:	jle    0x411491
  411492:	mov    fs,WORD PTR [edi+0xf]
  411495:	or     al,0x58
  411497:	clc    
  411498:	loopne 0x41141a
  41149a:	(bad)  
  41149b:	daa    
  41149c:	or     ch,BYTE PTR [ebp+0x19435293]
  4114a2:	sbb    eax,0xde6b532e
  4114a7:	sub    al,0xd3
  4114a9:	add    eax,0x83916b81
  4114ae:	adc    BYTE PTR [esi+0x60],cl
  4114b1:	outs   dx,BYTE PTR ds:[esi]
  4114b2:	pop    esi
  4114b3:	add    eax,0xb8ad4a33
  4114b8:	push   0x4c5a477e
  4114bd:	sbb    eax,0xdeab4c1
  4114c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114c3:	or     edx,0x7
  4114c6:	sub    ebx,DWORD PTR [ebp-0x80]
  4114c9:	sub    DWORD PTR [esp+ebx*4+0x2be5ffe3],edi
  4114d0:	call   0x339e5a54
  4114d5:	sub    BYTE PTR [ecx-0x273fb0a8],0x85
  4114dc:	fist   WORD PTR es:0x921f8970
  4114e4:	inc    edi
  4114e5:	pop    ecx
  4114e6:	pop    esi
  4114e7:	test   eax,0xf15eb1d4
  4114ec:	fs inc ecx
  4114ee:	sti    
  4114ef:	scas   eax,DWORD PTR es:[edi]
  4114f0:	or     dl,al
  4114f2:	fiadd  WORD PTR [esi-0x36]
  4114f5:	sub    ebp,DWORD PTR gs:[esp+ecx*2+0x5d77a112]
  4114fd:	stc    
  4114fe:	ret    
  4114ff:	jg     0x411564
  411501:	sbb    esi,ebx
  411503:	pop    edi
  411504:	push   esp
  411505:	push   cs
  411506:	adc    bh,BYTE PTR [eax+0x4c]
  411509:	push   edx
  41150a:	cmp    ch,cl
  41150c:	clc    
  41150d:	jge    0x411575
  41150f:	sbb    al,0x79
  411511:	cmp    al,0x8f
  411513:	jmp    0x411548
  411515:	pop    ss
  411516:	pop    edi
  411517:	int    0x98
  411519:	cmp    bh,al
  41151b:	jmp    0xf00ec6b4
  411520:	es dec ebx
  411522:	adc    BYTE PTR [esi-0x1d],dh
  411525:	lahf   
  411526:	pop    es
  411527:	ja     0x41155f
  411529:	or     ch,BYTE PTR [ecx+0x6e94eb51]
  41152f:	aaa    
  411530:	aas    
  411531:	jo     0x411505
  411533:	or     BYTE PTR [ecx],dh
  411535:	add    ebx,DWORD PTR [ecx]
  411537:	or     eax,0x7347ec47
  41153c:	cli    
  41153d:	(bad)  
  41153e:	adc    ah,cl
  411540:	ss (bad) 
  411543:	push   0xfffffff0
  411545:	mov    WORD PTR [edi+eax*2-0x74d05f12],fs
  41154c:	call   0xd7abb15d
  411551:	or     al,0x98
  411553:	push   eax
  411554:	repnz fdivr DWORD PTR [eax+0x64288b1]
  41155b:	and    cl,ch
  41155d:	call   0xea4a:0x95720115
  411564:	bound  ebx,QWORD PTR [eax]
  411566:	daa    
  411567:	mov    bh,0x49
  411569:	jmp    0xfbfb:0xb16a6bd6
  411570:	inc    BYTE PTR [edx-0x6e32c745]
  411576:	jp     0x411505
  411578:	mov    ecx,0x2ff8628c
  41157d:	pop    es
  41157e:	jecxz  0x411510
  411580:	nop
  411581:	mov    ah,bh
  411583:	cmp    eax,0x51ebedd
  411588:	adc    dl,ah
  41158a:	clc    
  41158b:	xchg   esp,eax
  41158c:	mov    eax,0x4788f549
  411591:	jmp    0xdeee:0x8b7b8fb0
  411598:	xlat   BYTE PTR ds:[ebx]
  411599:	jo     0x411532
  41159b:	add    eax,0x46ea1b65
  4115a0:	clc    
  4115a1:	push   ecx
  4115a2:	cmp    ebx,DWORD PTR [esp+eiz*2+0x2fb811e7]
  4115a9:	dec    edx
  4115aa:	out    0xdb,al
  4115ac:	fst    QWORD PTR [ecx-0x540e4844]
  4115b2:	add    eax,0x18ddff77
  4115b7:	daa    
  4115b8:	int    0x19
  4115ba:	stc    
  4115bb:	mov    eax,ds:0xa7bb8549
  4115c0:	imul   DWORD PTR [eax+0x781e8df5]
  4115c6:	lods   eax,DWORD PTR ds:[esi]
  4115c7:	pop    eax
  4115c8:	and    BYTE PTR [esi],bl
  4115ca:	mov    WORD PTR [esi-0x13],ds
  4115cd:	and    bl,BYTE PTR [eax+0x47]
  4115d0:	mov    edx,0xf6311ae0
  4115d5:	jne    0x411584
  4115d7:	gs xor edi,esi
  4115da:	daa    
  4115db:	add    ebp,DWORD PTR [esi]
  4115dd:	jno    0x4115ed
  4115df:	dec    eax
  4115e0:	mov    DWORD PTR [edi],esp
  4115e2:	jae    0x41161c
  4115e4:	sti    
  4115e5:	mov    ds:0x72bd7dca,eax
  4115ea:	sub    BYTE PTR [ebx+0x3],ch
  4115ed:	in     eax,dx
  4115ee:	dec    ebp
  4115ef:	adc    al,0xd
  4115f1:	dec    ebp
  4115f2:	mov    edx,0x2af4d1a6
  4115f8:	lds    eax,FWORD PTR [ebx-0x4b]
  4115fb:	das    
  4115fc:	pop    ebx
  4115fd:	pushf  
  4115fe:	mov    ebx,0x8a1b89b8
  411603:	mov    ss,WORD PTR [edi+0xc]
  411606:	cld    
  411607:	std    
  411608:	dec    esi
  411609:	dec    ebp
  41160a:	sub    DWORD PTR [ebp+0x5b],edx
  41160d:	scas   al,BYTE PTR es:[edi]
  41160e:	sahf   
  41160f:	inc    ebp
  411610:	test   eax,0xfb1bc622
  411615:	add    BYTE PTR [ebx],0x97
  411618:	enter  0xe840,0x45
  41161c:	(bad)  
  41161d:	call   0xf49fb3e9
  411622:	fcomp  QWORD PTR [edx-0x1a]
  411625:	ds dec eax
  411627:	pushf  
  411628:	call   0x6c09:0x59290493
  41162f:	pop    ss
  411630:	mov    dh,0x1f
  411632:	fisttp QWORD PTR [ebp+0x41283e75]
  411638:	add    BYTE PTR [edi+0x59],ch
  41163b:	mov    ds:0xffddd4d0,eax
  411640:	(bad)  
  411641:	fistp  QWORD PTR [ebx-0x266d72ce]
  411647:	inc    esp
  411649:	xlat   BYTE PTR ds:[ebx]
  41164a:	or     al,0x81
  41164c:	iret   
  41164d:	adc    eax,0x3738fd87
  411652:	push   0xe6082026
  411657:	push   DWORD PTR [ebx-0x39]
  41165a:	dec    edx
  41165b:	cs shl esi,0xc6
  41165f:	ins    DWORD PTR es:[edi],dx
  411660:	in     eax,0x6a
  411662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411663:	xor    eax,0x72795812
  411668:	fmul   DWORD PTR [edi+0x1013eee2]
  41166e:	psubd  mm1,QWORD PTR [ecx+0x48]
  411672:	fxch   st(4)
  411674:	imul   edx,DWORD PTR [ebp-0x74f19388],0xffffffb7
  41167b:	idiv   BYTE PTR [eax-0x24]
  41167e:	and    DWORD PTR [ebx-0x24],esi
  411681:	fcmovnu st,st(4)
  411683:	mov    ds:0x8134526f,al
  411688:	in     eax,0xbe
  41168a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41168b:	aad    0x14
  41168d:	mov    eax,0x7c243e2
  411692:	test   eax,0x1cf9dcd8
  411697:	hlt    
  411698:	push   0xdfdf5e48
  41169d:	das    
  41169e:	mov    esi,0x45f1e3fc
  4116a3:	push   edx
  4116a4:	inc    esp
  4116a5:	add    DWORD PTR [edx-0x6],ebp
  4116a8:	mov    eax,0xc2ad239f
  4116ad:	repnz and DWORD PTR [edx+0xeb93f84],ecx
  4116b4:	aaa    
  4116b5:	pop    eax
  4116b6:	jae    0x411682
  4116b8:	fist   DWORD PTR [edx-0x66]
  4116bb:	add    eax,0xaffefeae
  4116c0:	add    bh,BYTE PTR [eax]
  4116c2:	popf   
  4116c3:	jg     0x4116b0
  4116c5:	jg     0x4116d2
  4116c7:	mov    al,0x35
  4116c9:	jp     0x4116a9
  4116cb:	jl     0x4116be
  4116cd:	sub    al,0xbc
  4116cf:	daa    
  4116d0:	sbb    eax,0x34d78d7a
  4116d5:	pop    ecx
  4116d6:	sbb    al,0xd1
  4116d8:	scas   eax,DWORD PTR es:[edi]
  4116d9:	xchg   DWORD PTR [ebx],ebp
  4116db:	push   edi
  4116dc:	clc    
  4116dd:	push   ebp
  4116de:	jno    0x4116d0
  4116e0:	jle    0x4116fd
  4116e2:	sbb    bh,al
  4116e4:	imul   edi,DWORD PTR [ebp-0x7d],0xc38f061a
  4116eb:	shl    DWORD PTR [edi-0x1a34a5bd],0x45
  4116f2:	push   esi
  4116f3:	in     eax,dx
  4116f4:	sub    DWORD PTR [edi],esi
  4116f6:	lods   al,BYTE PTR ds:[esi]
  4116f7:	out    0x2c,eax
  4116f9:	and    DWORD PTR [ebx],ecx
  4116fb:	rcl    BYTE PTR [ebx+0x44c24e0],cl
  411701:	add    dh,BYTE PTR [ebx-0x3876ccb8]
  411707:	sbb    eax,0x4026da7e
  41170c:	and    al,0xd8
  41170e:	jb     0x4116a1
  411710:	enter  0x8fb9,0x60
  411714:	sub    eax,0x5b6bef8c
  411719:	mul    DWORD PTR [edi]
  41171b:	es call 0xc39dde20
  411721:	fstp   TBYTE PTR [esi]
  411723:	pop    ecx
  411724:	pop    ebp
  411725:	or     esi,0xd08a1361
  41172b:	test   al,0x99
  41172d:	lock and DWORD PTR [ebx-0x26],edi
  411731:	retf   0x7e4d
  411734:	mov    esp,0xe8dce795
  411739:	loope  0x411795
  41173b:	mov    esi,0x51f11be7
  411740:	call   0xbd17b349
  411745:	jmp    0x4117b6
  411747:	loop   0x411733
  411749:	(bad)  
  41174a:	and    DWORD PTR [edi+esi*4+0x2e],ebx
  41174e:	mov    ebx,0x2c106012
  411753:	daa    
  411754:	jno    0x4116e0
  411756:	(bad)  
  411757:	mov    dl,0x18
  411759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41175a:	shl    BYTE PTR [ebx+0x25a447c4],cl
  411760:	or     ebp,ebp
  411762:	(bad)  
  411763:	int3   
  411764:	sbb    al,0x14
  411766:	bound  ebp,QWORD PTR [ebp-0x3c]
  411769:	sbb    al,0x3e
  41176b:	sbb    al,bl
  41176d:	add    BYTE PTR [ebp-0x65],bl
  411770:	inc    ebp
  411771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411772:	cmp    al,0xdb
  411774:	jne    0x41177c
  411776:	les    eax,FWORD PTR [eax-0x310b4ca9]
  41177c:	add    ebp,DWORD PTR [edx+0x30adf6ad]
  411782:	dec    edi
  411783:	in     al,0xbc
  411785:	shl    bh,1
  411787:	popa   
  411788:	sbb    dl,BYTE PTR [edx-0x5e]
  41178b:	ret    
  41178c:	popa   
  41178d:	jbe    0x411725
  41178f:	mov    ds:0xa4971b4b,al
  411794:	out    0x43,eax
  411796:	sub    ebx,edi
  411798:	and    edi,DWORD PTR [edx]
  41179a:	push   cs
  41179b:	ds jmp 0x7e16:0x45feaa7d
  4117a3:	or     ecx,DWORD PTR [eax+0x35]
  4117a6:	xor    eax,0xdbef95e1
  4117ab:	rol    DWORD PTR [ebp-0x41bf77c],0x65
  4117b2:	push   ds
  4117b3:	jae    0x4117c6
  4117b5:	ficomp DWORD PTR [ebp+ecx*8-0x58e87551]
  4117bc:	(bad)  
  4117bd:	iret   
  4117be:	in     eax,0xeb
  4117c0:	std    
  4117c1:	shr    BYTE PTR [eax+edi*2],0x4b
  4117c5:	sbb    al,0x4a
  4117c7:	sti    
  4117c8:	xchg   edi,eax
  4117c9:	xchg   esi,eax
  4117ca:	and    eax,DWORD PTR [edi-0x5a]
  4117cd:	les    eax,FWORD PTR [edx-0x46e14406]
  4117d3:	les    ebp,FWORD PTR [esi+0x37d2ab13]
  4117d9:	jle    0x411780
  4117db:	loopne 0x41185b
  4117dd:	mov    ebx,0x8321c635
  4117e2:	sbb    ecx,DWORD PTR [esi]
  4117e4:	mov    edx,0x1d3c3d36
  4117e9:	mov    esp,0x9ec8f3e2
  4117ee:	or     dh,BYTE PTR [edx-0x30]
  4117f1:	mov    bl,0x2e
  4117f3:	icebp  
  4117f4:	ss lods eax,DWORD PTR cs:[esi]
  4117f7:	clc    
  4117f8:	retf   0x9ccd
  4117fb:	mov    cl,0x27
  4117fd:	fwait
  4117fe:	rcr    DWORD PTR [eax-0x74e1316a],1
  411804:	pop    esi
  411805:	inc    esi
  411806:	cmc    
  411807:	jge    0x411864
  411809:	or     eax,0x13483822
  41180e:	iret   
  41180f:	retf   0x8049
  411812:	xchg   ebx,eax
  411813:	mul    DWORD PTR [ebx]
  411815:	dec    edx
  411816:	loop   0x4117b1
  411818:	mov    BYTE PTR [esi],bl
  41181a:	ror    BYTE PTR [eax+0x6fff8e3a],1
  411820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411821:	daa    
  411822:	inc    edi
  411823:	repz out 0x33,eax
  411826:	shl    DWORD PTR [ebx+0x1c44a1b2],0xe3
  41182d:	retf   0xe953
  411830:	jo     0x4117b6
  411832:	pop    ebp
  411833:	test   al,0xce
  411835:	call   0x7264:0x4529eec7
  41183c:	call   FWORD PTR [ebx+0x16d8d494]
  411842:	cmp    edi,eax
  411844:	stc    
  411845:	dec    ebp
  411846:	retf   0xb0dc
  411849:	leave  
  41184a:	enter  0x28a0,0xd4
  41184e:	mov    ah,0x96
  411850:	inc    esi
  411851:	stos   BYTE PTR es:[edi],al
  411852:	and    al,0xec
  411854:	add    ah,BYTE PTR [ebp-0x1d]
  411857:	xor    bh,BYTE PTR [eax+0x189bd9ce]
  41185d:	(bad)  
  41185f:	leave  
  411860:	adc    DWORD PTR [ebp+0x4dc6be42],ebp
  411866:	rol    bl,cl
  411868:	sbb    BYTE PTR [edi-0x516c3c3],dl
  41186e:	lods   al,BYTE PTR ds:[esi]
  41186f:	je     0x41189e
  411871:	pusha  
  411872:	mov    bh,0xba
  411874:	or     bl,BYTE PTR [edx-0x6477c0f5]
  41187a:	cmp    BYTE PTR [esi-0x68],ch
  41187d:	dec    DWORD PTR [ebp-0x28d7a425]
  411883:	mov    ebp,0xad22d8c8
  411888:	lds    esp,FWORD PTR [eax+0x41]
  41188b:	call   0xb5fe8f8e
  411890:	test   BYTE PTR [eax+0x1e97281b],ch
  411896:	add    al,0xbd
  411898:	cmp    al,BYTE PTR [ebp+0x4c]
  41189b:	fst    DWORD PTR [ebx]
  41189d:	xchg   esi,eax
  41189e:	aam    0xb6
  4118a0:	xchg   esp,eax
  4118a1:	loopne 0x411840
  4118a3:	(bad)  [bp+di]
  4118a6:	jl     0x4118f8
  4118a8:	out    dx,eax
  4118a9:	fisttp DWORD PTR [ecx]
  4118ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ac:	in     al,dx
  4118ad:	ret    0xd21b
  4118b0:	adc    esp,DWORD PTR [ebp-0x2c18f71e]
  4118b6:	arpl   WORD PTR ds:0x6fb36022,dx
  4118bc:	mov    dl,0xb7
  4118be:	jg     0x411886
  4118c0:	mov    al,0x4f
  4118c2:	int3   
  4118c3:	test   al,0x51
  4118c5:	mov    ah,0x4e
  4118c7:	js     0x411876
  4118c9:	mov    bh,0xbb
  4118cb:	rcr    ebx,0xe5
  4118ce:	out    dx,al
  4118cf:	mov    cl,0x34
  4118d1:	push   0xc18d1491
  4118d6:	pop    ss
  4118d7:	xor    DWORD PTR [esi-0x5925e01e],ebp
  4118dd:	dec    DWORD PTR [ebp+0x22061428]
  4118e3:	popf   
  4118e4:	(bad)  
  4118e5:	jmp    0x8b4a2e86
  4118ea:	hlt    
  4118eb:	cmp    ch,BYTE PTR [edi-0x40c72299]
  4118f1:	int3   
  4118f2:	(bad)  
  4118f3:	jno    0x4118f2
  4118f5:	mov    cl,0xd5
  4118f7:	outs   dx,BYTE PTR ds:[esi]
  4118f8:	iret   
  4118f9:	std    
  4118fa:	pop    edi
  4118fb:	fs add ecx,esi
  4118fe:	sub    BYTE PTR [ecx+0x530b545a],dl
  411904:	pop    es
  411905:	je     0x411925
  411907:	mov    ecx,0x45f44c2d
  41190c:	xor    al,BYTE PTR [ebx-0x5322f645]
  411912:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  411914:	sub    ch,BYTE PTR [ecx+0x13e4d063]
  41191a:	aad    0x74
  41191c:	inc    esp
  41191d:	nop
  41191e:	test   al,0xed
  411920:	fdivr  QWORD PTR [edx]
  411922:	ins    BYTE PTR es:[edi],dx
  411923:	inc    esi
  411924:	and    eax,DWORD PTR ds:0x6bafbc9
  41192a:	lds    ebp,FWORD PTR [eax+0x2f77b118]
  411930:	das    
  411931:	test   al,0xef
  411933:	aad    0xe
  411935:	fs es out 0xe1,al
  411939:	dec    edx
  41193a:	call   0xca8f:0x6ab717f6
  411941:	retf   0x8d29
  411944:	lods   eax,DWORD PTR ds:[esi]
  411945:	nop
  411946:	cwde   
  411947:	js     0x4119c3
  411949:	push   ebx
  41194a:	xor    eax,0xb86ae3bf
  41194f:	sbb    BYTE PTR ds:0x91c98448,bl
  411955:	ror    BYTE PTR [edx+0x154fb34f],1
  41195b:	sub    ch,BYTE PTR [esi+0x65]
  41195e:	jp     0x411910
  411960:	mov    bh,0x13
  411962:	mov    DWORD PTR [eax+0x8cc899a],edi
  411968:	fcomp  DWORD PTR [ebx-0x1000d728]
  41196e:	jmp    0x368c011b
  411973:	or     eax,0x6025625e
  411978:	inc    ecx
  411979:	nop
  41197a:	in     eax,dx
  41197b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41197c:	xor    esi,edx
  41197e:	and    esi,edi
  411980:	xchg   esi,eax
  411981:	mov    cl,0x9
  411983:	fucomp st(7)
  411985:	rcl    BYTE PTR [eax+eax*8+0x11570094],1
  41198c:	cmp    al,0xd1
  41198e:	mov    al,ds:0xd275408c
  411993:	icebp  
  411994:	pop    ecx
  411995:	pop    eax
  411996:	arpl   WORD PTR [eax+0x455bcdb7],bp
  41199c:	xchg   esi,eax
  41199d:	test   BYTE PTR [ebx+ebx*2+0x6cfc4fd1],ch
  4119a4:	sbb    eax,0x17cee63a
  4119a9:	in     al,0x1e
  4119ab:	or     edi,eax
  4119ad:	arpl   WORD PTR [edx-0x752d3f46],dx
  4119b3:	ret    
  4119b4:	leave  
  4119b5:	loop   0x411a24
  4119b7:	xchg   edx,eax
  4119b8:	pop    esi
  4119b9:	sub    eax,0x5cee3a45
  4119be:	aam    0x77
  4119c0:	or     ebx,DWORD PTR [esi+0x49626960]
  4119c6:	cmp    esp,DWORD PTR [edx+0x4a98bc08]
  4119cc:	mov    cl,ch
  4119ce:	mov    ch,0x5f
  4119d0:	dec    eax
  4119d1:	jmp    0x4119e6
  4119d3:	mov    ebp,0x8284a851
  4119d8:	bound  ebx,QWORD PTR [ecx-0x41ad6aa8]
  4119de:	out    0x3c,al
  4119e0:	mov    eax,ds:0xa706e851
  4119e5:	into   
  4119e6:	or     edx,ecx
  4119e8:	or     al,BYTE PTR [ebx+0x71]
  4119eb:	out    0xcf,al
  4119ed:	mov    gs,eax
  4119ef:	cld    
  4119f0:	dec    ebx
  4119f1:	jmp    0x4119e3
  4119f3:	jne    0x411a21
  4119f5:	jl     0x4119d8
  4119f7:	jo     0x411a21
  4119f9:	cmp    eax,0x94c76515
  4119fe:	xchg   edx,eax
  4119ff:	ins    BYTE PTR es:[edi],dx
  411a00:	sub    DWORD PTR [eax+edi*4],esp
  411a03:	push   ss
  411a04:	cdq    
  411a05:	add    bh,BYTE PTR [ecx-0x34]
  411a08:	pushf  
  411a09:	test   al,0xe0
  411a0b:	in     eax,0x3c
  411a0d:	cmc    
  411a0e:	loop   0x411990
  411a10:	jl     0x411a2d
  411a12:	int    0xc4
  411a14:	xchg   esi,eax
  411a15:	push   ds
  411a16:	adc    al,bl
  411a18:	int    0x43
  411a1a:	or     ah,BYTE PTR [ebx]
  411a1c:	aaa    
  411a1d:	jbe    0x4119d0
  411a1f:	sbb    dh,dl
  411a21:	(bad)  
  411a22:	mov    DWORD PTR [eax+0x1291f24],ebx
  411a28:	ins    BYTE PTR es:[edi],dx
  411a29:	mov    ?,WORD PTR [edx-0x3d919008]
  411a2f:	xor    al,0x66
  411a31:	sbb    al,0xd3
  411a33:	pop    esi
  411a34:	(bad)  
  411a36:	icebp  
  411a37:	shl    DWORD PTR [edi],0x45
  411a3a:	and    bl,BYTE PTR [eax+0x2f]
  411a3d:	daa    
  411a3e:	jle    0x4119fb
  411a40:	scas   al,BYTE PTR es:[edi]
  411a41:	and    bl,al
  411a43:	cdq    
  411a44:	ficomp WORD PTR [edi-0x65710670]
  411a4a:	jo     0x411ac5
  411a4c:	jge    0x4119e2
  411a4e:	mov    esp,0xe0f9a0bd
  411a53:	inc    eax
  411a54:	push   esi
  411a55:	sbb    al,0x5
  411a57:	xor    DWORD PTR [eax],esp
  411a59:	push   ecx
  411a5a:	xchg   cl,ah
  411a5c:	mov    ecx,DWORD PTR [ebp+edx*1-0x51]
  411a60:	fst    QWORD PTR [eax-0x1f]
  411a63:	inc    ebp
  411a64:	pop    ss
  411a65:	rol    ch,1
  411a67:	bound  ecx,QWORD PTR [ecx]
  411a69:	outs   dx,BYTE PTR ds:[esi]
  411a6a:	data16 gs mov tr1,ebp
  411a6f:	add    esp,DWORD PTR [ebx]
  411a71:	jns    0x411ad6
  411a73:	in     al,0xc4
  411a75:	jmp    0x5468:0xeb6662ce
  411a7c:	push   ds
  411a7d:	mov    ecx,0x573a66d3
  411a82:	in     eax,dx
  411a83:	jmp    0x93e25e56
  411a88:	ret    0x5ffe
  411a8b:	mov    al,fs:0x855644b9
  411a91:	lahf   
  411a92:	mov    edx,0xd0d11ce3
  411a97:	lock mov bl,0xc7
  411a9a:	test   bl,0x2
  411a9d:	cmp    BYTE PTR [ebp+ebp*1+0x25],dh
  411aa1:	sti    
  411aa2:	dec    ecx
  411aa3:	add    BYTE PTR [edi-0x3ee58cbd],ah
  411aa9:	btc    DWORD PTR [esi-0x3927abfa],esp
  411ab0:	mov    ebp,0x28d6570a
  411ab5:	call   0x4aaa:0xac7aa67e
  411abc:	call   0x2bc5:0xe4926113
  411ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ac4:	cmp    eax,0xe6cbb432
  411ac9:	adc    bh,bl
  411acb:	mov    edi,0x8a095a98
  411ad0:	mov    al,ds:0x5c95b38a
  411ad5:	repz cmc 
  411ad7:	leave  
  411ad8:	adc    ah,bl
  411ada:	xor    DWORD PTR [ebp-0x46c62626],ebp
  411ae0:	add    al,0xd1
  411ae2:	mov    ebp,DWORD PTR [edx-0x7808768d]
  411ae8:	or     eax,0xa8b58c94
  411aed:	jmp    0x4e88437f
  411af2:	out    dx,al
  411af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411af4:	arpl   cx,sp
  411af6:	mov    eax,0x9969ce6
  411afb:	pop    DWORD PTR [eax+0x411adb4b]
  411b01:	mov    dl,0x58
  411b03:	lods   eax,DWORD PTR ds:[esi]
  411b04:	das    
  411b05:	js     0x411b12
  411b07:	inc    esp
  411b08:	xchg   ebx,eax
  411b09:	push   0x66
  411b0b:	retf   0xbf74
  411b0e:	cmp    DWORD PTR fs:[ecx],ecx
  411b11:	dec    eax
  411b12:	inc    esi
  411b13:	or     al,0x65
  411b15:	adc    eax,0x8773c32a
  411b1a:	or     dl,bh
  411b1c:	(bad)  
  411b1d:	es cmp eax,0x95d15d67
  411b23:	loopne 0x411b82
  411b25:	xlat   BYTE PTR ds:[ebx]
  411b26:	push   eax
  411b27:	xor    eax,0xa7668181
  411b2c:	sti    
  411b2d:	fsub   DWORD PTR [esi]
  411b2f:	pop    ecx
  411b30:	outs   dx,DWORD PTR ds:[esi]
  411b31:	inc    ecx
  411b32:	sub    dh,bh
  411b34:	push   edi
  411b35:	push   esi
  411b36:	in     al,dx
  411b37:	xor    DWORD PTR [edx+0x68],esi
  411b3a:	mov    ebp,0x58e5ba13
  411b3f:	fimul  DWORD PTR [eax+0x5b962766]
  411b45:	ds popf 
  411b47:	test   BYTE PTR [ebx],cl
  411b49:	jne    0x411b2f
  411b4b:	fdivr  QWORD PTR [esi+0x5a646a9e]
  411b51:	xchg   ch,ah
  411b53:	outs   dx,DWORD PTR ds:[esi]
  411b54:	fcmovb st,st(2)
  411b56:	push   edx
  411b57:	or     BYTE PTR [ecx-0x535496fb],bl
  411b5d:	test   DWORD PTR [ebp-0x102953ed],esi
  411b63:	mov    ch,0xd8
  411b65:	repnz cli 
  411b67:	jns    0x411b2e
  411b69:	or     BYTE PTR [edi-0x2d],cl
  411b6c:	sub    BYTE PTR [edi+edi*8-0x70],0x9f
  411b71:	add    BYTE PTR [ebp+0x60],bl
  411b74:	xchg   edx,eax
  411b75:	jmp    0x4d387b79
  411b7a:	mov    ds:0xad59ae93,al
  411b7f:	push   ebp
  411b80:	jo     0x411b66
  411b82:	sbb    eax,0x96501b1e
  411b87:	jbe    0x411b39
  411b89:	mov    edi,0x9108719e
  411b8e:	mov    ds:0x101de493,al
  411b93:	loope  0x411bd6
  411b95:	push   edi
  411b96:	loopne 0x411b23
  411b98:	(bad)
  411b9b:	dec    edi
  411b9c:	pop    edi
  411b9d:	push   eax
  411b9e:	into   
  411b9f:	ffree  st(4)
  411ba1:	out    dx,eax
  411ba2:	mov    ?,esi
  411ba4:	(bad)  [ecx]
  411ba6:	and    eax,0xe47f4d9c
  411bab:	cmc    
  411bac:	das    
  411bad:	faddp  st(1),st
  411baf:	cmp    eax,0xcfb442ef
  411bb4:	aaa    
  411bb5:	add    BYTE PTR [edi-0x1a],0xe
  411bb9:	push   ds
  411bba:	dec    eax
  411bbb:	popa   
  411bbc:	(bad)  
  411bbd:	mov    ebp,0xb0560fb2
  411bc2:	into   
  411bc3:	and    BYTE PTR [ebp+0x47],cl
  411bc6:	push   ebp
  411bc7:	xor    esi,DWORD PTR [esi+0x36]
  411bca:	je     0x411bd0
  411bcc:	sbb    eax,0x818c0098
  411bd1:	(bad)  
  411bd2:	push   ebx
  411bd3:	dec    esi
  411bd4:	push   ss
  411bd5:	mov    eax,0x94fd28f5
  411bda:	sbb    eax,0x7eb3f752
  411bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411be0:	shl    BYTE PTR [ecx-0x51],0x34
  411be4:	ret    
  411be5:	imul   edi,DWORD PTR [edx],0x19
  411be8:	sub    al,0xff
  411bea:	movaps xmm5,XMMWORD PTR [edi+0x5b82d0fe]
  411bf1:	adc    BYTE PTR [ecx-0x3fa42ca3],0x7c
  411bf8:	and    edx,DWORD PTR ds:0x204a0cab
  411bfe:	test   esp,eax
  411c00:	jmp    0xd38e8f80
  411c05:	test   eax,0xc3d03ad4
  411c0a:	std    
  411c0b:	je     0x411b98
  411c0d:	cmp    al,0xe7
  411c0f:	push   esi
  411c10:	ss out 0xa2,al
  411c13:	mov    esi,0x10405010
  411c18:	inc    ebx
  411c19:	fs push cs
  411c1b:	sub    DWORD PTR [ecx+0x1e16fd35],edi
  411c21:	inc    esi
  411c22:	mov    ah,BYTE PTR [ebx+ecx*2]
  411c25:	sub    BYTE PTR [edx],dh
  411c27:	or     DWORD PTR [esi-0x26277179],ecx
  411c2d:	das    
  411c2e:	stc    
  411c2f:	dec    ebp
  411c30:	test   DWORD PTR [ecx],eax
  411c32:	fnstsw WORD PTR [edi+0x7d]
  411c35:	sub    eax,0xd178aaf9
  411c3a:	(bad)  
  411c3b:	retf   
  411c3c:	inc    eax
  411c3d:	cmp    al,0xe2
  411c3f:	xor    al,0x77
  411c41:	fwait
  411c42:	push   0x5bdee867
  411c47:	fwait
  411c48:	and    ebx,edx
  411c4a:	dec    ebp
  411c4b:	cmp    eax,0xa08c15f1
  411c50:	fidiv  DWORD PTR [ecx]
  411c52:	int    0x26
  411c54:	mov    eax,0x13a20cc8
  411c59:	stos   BYTE PTR es:[edi],al
  411c5a:	push   es
  411c5b:	jo     0x411c48
  411c5d:	adc    dh,al
  411c5f:	add    bl,BYTE PTR [esi+0x35]
  411c62:	push   0x7d
  411c64:	(bad)  
  411c65:	xlat   BYTE PTR ds:[ebx]
  411c66:	pop    esi
  411c67:	sar    BYTE PTR [ecx],1
  411c69:	push   cs
  411c6a:	inc    esi
  411c6b:	or     cl,BYTE PTR [esi+esi*8-0x45377da]
  411c72:	push   cs
  411c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c74:	add    al,0xcd
  411c76:	daa    
  411c77:	test   al,0x4e
  411c79:	lahf   
  411c7a:	les    esi,FWORD PTR [ebx-0x2acfae13]
  411c80:	popa   
  411c81:	sti    
  411c82:	mov    cl,0xe7
  411c84:	call   0xc1590bf2
  411c89:	fnstcw WORD PTR [eax]
  411c8b:	data16 mov ds:0x6c732f38,al
  411c91:	push   esp
  411c92:	adc    al,0xca
  411c94:	dec    ecx
  411c95:	sar    ebp,0x6e
  411c98:	inc    ecx
  411c99:	repnz sub ebx,ebp
  411c9c:	int3   
  411c9d:	mov    esp,DWORD PTR [edx-0x6a4ee7c3]
  411ca3:	add    BYTE PTR fs:[eax],ch
  411ca6:	ds jmp 0x411cfa
  411ca9:	mov    bl,0x43
  411cab:	and    cl,BYTE PTR ds:0xa9d17e5e
  411cb1:	sub    dl,bh
  411cb3:	loope  0x411c8b
  411cb5:	fnstcw WORD PTR [ecx-0x7da1e56b]
  411cbb:	(bad)  
  411cbc:	or     eax,0x8a74e24b
  411cc1:	sti    
  411cc2:	(bad)  
  411cc3:	aam    0xa1
  411cc5:	out    dx,eax
  411cc6:	call   0xc268:0x9f608be1
  411ccd:	xor    eax,0x72318446
  411cd2:	nop
  411cd3:	xor    DWORD PTR cs:[edx],ebp
  411cd6:	push   es
  411cd7:	pop    edx
  411cd8:	sbb    BYTE PTR [ebp-0x7a4aab8d],cl
  411cde:	xlat   BYTE PTR ds:[ebx]
  411cdf:	sub    dh,BYTE PTR [edx-0x31e1f9a2]
  411ce5:	loope  0x411ce2
  411ce7:	xor    eax,0xa6c895cb
  411cec:	test   BYTE PTR [ebp+0x3c],al
  411cef:	cmp    dl,BYTE PTR [esi+0x74d08fae]
  411cf5:	mov    DWORD PTR [eax],edi
  411cf7:	mov    eax,0x713f1028
  411cfc:	push   es
  411cfd:	jmp    0xaa3026e9
  411d02:	fldenv [edi+0x48da65fb]
  411d08:	fdiv   st(4),st
  411d0a:	repnz mov BYTE PTR [edi-0x5c8c1f7],ch
  411d11:	cmc    
  411d12:	or     bh,ch
  411d14:	rol    al,0xfc
  411d17:	fwait
  411d18:	inc    ecx
  411d19:	enter  0xa417,0x2f
  411d1d:	pop    es
  411d1e:	std    
  411d1f:	dec    DWORD PTR [eax]
  411d21:	mov    ebp,0xf37eb5d1
  411d26:	stos   BYTE PTR es:[edi],al
  411d27:	ja     0x411d7c
  411d29:	rcl    ah,0xfe
  411d2c:	mov    eax,ss
  411d2e:	std    
  411d2f:	(bad)  
  411d30:	mov    esi,0x296c86b5
  411d35:	imul   dl
  411d37:	pop    ss
  411d38:	cmp    BYTE PTR [edi],bl
  411d3a:	push   ecx
  411d3b:	cli    
  411d3c:	(bad)  
  411d3d:	rol    bl,1
  411d3f:	xchg   ebp,eax
  411d40:	sahf   
  411d41:	dec    ecx
  411d42:	rcl    dl,1
  411d44:	mov    bl,0x5a
  411d46:	repnz and DWORD PTR [esi+edx*8],0xfc8c7b9e
  411d4e:	mov    ch,0x83
  411d51:	test   al,0xaa
  411d53:	daa    
  411d54:	mov    ebp,0xd52cdc57
  411d59:	mov    ss,WORD PTR [eax-0x2efb6c86]
  411d5f:	cwde   
  411d60:	xor    al,0x87
  411d62:	cwde   
  411d63:	jl     0x411d5c
  411d65:	(bad)
  411d69:	lahf   
  411d6a:	shl    ah,cl
  411d6c:	popf   
  411d6d:	cmp    al,BYTE PTR [ebp-0x4c0b473e]
  411d73:	ds dec eax
  411d75:	stc    
  411d76:	pop    ds
  411d77:	sar    BYTE PTR [edx],1
  411d79:	out    dx,al
  411d7a:	mov    esp,0x72d3bf76
  411d7f:	xchg   ebx,eax
  411d80:	ins    BYTE PTR es:[edi],dx
  411d81:	int3   
  411d82:	jecxz  0x411da6
  411d84:	ds add esi,eax
  411d87:	mov    al,0x54
  411d89:	ror    DWORD PTR [ebx+0x6a6e197e],cl
  411d8f:	neg    DWORD PTR [esi]
  411d91:	rol    DWORD PTR [ebx-0x5b169a59],0x83
  411d98:	sbb    DWORD PTR [ebx+0x2badabdd],eax
  411d9e:	out    0xba,al
  411da0:	inc    ebp
  411da1:	lahf   
  411da2:	cwde   
  411da3:	add    al,0x9c
  411da5:	int    0x9f
  411da7:	add    DWORD PTR [eax+0x72b5e92],esi
  411dad:	cld    
  411dae:	dec    esp
  411daf:	mov    ch,0xef
  411db1:	inc    esi
  411db2:	or     esi,esi
  411db4:	inc    ebx
  411db5:	push   edi
  411db6:	in     al,0xbf
  411db8:	mov    eax,ds:0x499eb173
  411dbd:	outs   dx,DWORD PTR ds:[esi]
  411dbe:	test   ebx,ebx
  411dc0:	adc    dh,dl
  411dc2:	jae    0x411d70
  411dc4:	push   es
  411dc5:	hlt    
  411dc6:	sub    BYTE PTR [ebx-0x12],dh
  411dc9:	pop    ss
  411dca:	or     al,0xcc
  411dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dcd:	pop    ds
  411dce:	adc    eax,0xe7ebe728
  411dd3:	inc    esi
  411dd4:	and    BYTE PTR ds:0x1e74a50d,0xf7
  411ddc:	sub    al,0xd8
  411dde:	nop
  411ddf:	cli    
  411de0:	call   DWORD PTR [ecx+edi*1]
  411de3:	call   0xb12182a4
  411de8:	fist   DWORD PTR [ebx+esi*2-0x52e5b928]
  411def:	xor    ebp,ebx
  411df1:	addr16 pop es
  411df3:	int    0x71
  411df5:	(bad)  
  411df6:	sahf   
  411df7:	into   
  411df8:	mul    edi
  411dfa:	test   al,0x40
  411dfc:	repnz sub BYTE PTR [eax],al
  411dff:	neg    BYTE PTR [ebx-0x36f2929a]
  411e05:	push   0x6aad6beb
  411e0a:	pop    eax
  411e0b:	sahf   
  411e0c:	mov    eax,ds:0xdc5066cd
  411e11:	sub    bl,bl
  411e13:	(bad)  
  411e14:	xlat   BYTE PTR ds:[ebx]
  411e15:	push   ecx
  411e16:	push   ecx
  411e17:	sub    BYTE PTR [ebx-0x44],bh
  411e1a:	popa   
  411e1b:	xchg   DWORD PTR [ecx+0x63],ebp
  411e1e:	mov    ebx,0x1128b780
  411e23:	and    ch,al
  411e25:	sbb    BYTE PTR [ecx+0x3fbcba8f],ah
  411e2b:	sbb    eax,0xea8dee3f
  411e30:	loopne 0x411de4
  411e32:	cwde   
  411e33:	loop   0x411dd2
  411e35:	loope  0x411e68
  411e37:	in     al,0xbb
  411e39:	mov    esp,0x7502f02a
  411e3e:	adc    al,0x6b
  411e40:	lahf   
  411e41:	rol    BYTE PTR [eax-0x2a],0xe1
  411e45:	mov    edi,0x789d00a8
  411e4a:	inc    esi
  411e4b:	mov    ds:0xd5053322,eax
  411e50:	mov    edi,0x4cc0031
  411e55:	dec    edx
  411e56:	xchg   ecx,eax
  411e57:	data16 cmp bh,BYTE PTR [ebp+0x1a]
  411e5b:	cmp    bh,BYTE PTR [eax+edi*8+0x22]
  411e5f:	cld    
  411e60:	or     al,0x70
  411e62:	test   DWORD PTR [edx+0x1b],0xad5a30a9
  411e69:	aam    0xa6
  411e6b:	sub    al,0x59
  411e6d:	sbb    al,0x1f
  411e6f:	or     cl,BYTE PTR [edx]
  411e71:	stos   BYTE PTR es:[edi],al
  411e72:	out    0x0,al
  411e74:	rcl    ebp,1
  411e76:	xor    BYTE PTR [ebp-0x5a],0xd9
  411e7a:	imul   eax,DWORD PTR [edx],0xffffff9f
  411e7d:	mov    ebx,0x32221fce
  411e82:	fisttp WORD PTR [edi+0x209a3a82]
  411e88:	repnz push ss
  411e8a:	mov    cl,0x79
  411e8c:	les    edx,FWORD PTR [esi+0x48]
  411e8f:	pop    esi
  411e90:	(bad)  
  411e91:	fmul   DWORD PTR [esi+0x4b3c8533]
  411e97:	js     0x411e96
  411e99:	push   ebp
  411e9a:	mov    es,edi
  411e9c:	nop
  411e9d:	push   0x2e
  411e9f:	add    ah,BYTE PTR [ecx-0x2f]
  411ea2:	sti    
  411ea3:	scas   eax,DWORD PTR es:[edi]
  411ea4:	(bad)  
  411ea5:	fstp   TBYTE PTR [ebx+0x202e44e0]
  411eab:	adc    bl,al
  411ead:	and    edx,DWORD PTR [ecx-0x774015e2]
  411eb3:	fxch   st(3)
  411eb5:	mov    ch,0xcb
  411eb7:	mov    ebp,0xd2a18514
  411ebc:	xor    eax,0xff8bdb96
  411ec1:	cdq    
  411ec2:	fcom   st(4)
  411ec4:	xor    dl,BYTE PTR [edx-0xc]
  411ec7:	pusha  
  411ec8:	push   esp
  411ec9:	mov    edi,0x5b3ce846
  411ece:	int3   
  411ecf:	dec    edx
  411ed0:	(bad)  
  411ed1:	jmp    0x52f3:0xe17d1f43
  411ed8:	lods   eax,DWORD PTR ds:[esi]
  411ed9:	imul   ecx,DWORD PTR [eax],0xfffffffd
  411edc:	xor    eax,0x550e032
  411ee1:	mov    eax,0x2bf0330c
  411ee6:	sub    edx,0x14
  411ee9:	hlt    
  411eea:	xlat   BYTE PTR ds:[ebx]
  411eeb:	sub    DWORD PTR [ebx+0x4bafd29d],esi
  411ef1:	or     BYTE PTR [eax+0x71],dh
  411ef4:	pushf  
  411ef5:	sub    eax,0xf5300bd6
  411efa:	jge    0x411f56
  411efc:	stc    
  411efd:	(bad)  
  411eff:	(bad)  
  411f00:	push   es
  411f01:	cwde   
  411f02:	repz out dx,al
  411f04:	int3   
  411f05:	push   cs
  411f06:	leave  
  411f07:	mov    DWORD PTR [edx+0x25a58598],edi
  411f0d:	not    DWORD PTR [esi]
  411f0f:	daa    
  411f10:	dec    edi
  411f11:	inc    BYTE PTR [ebx-0x64]
  411f14:	scas   al,BYTE PTR es:[edi]
  411f15:	xchg   edx,eax
  411f16:	mov    esi,0xdeadb06e
  411f1b:	mov    esp,0x50508122
  411f20:	pop    es
  411f21:	call   0x663d:0xd2cd7778
  411f28:	cdq    
  411f29:	sub    al,0x23
  411f2b:	adc    eax,0x4144d442
  411f30:	mov    ah,0x49
  411f32:	dec    ecx
  411f33:	add    al,0xe2
  411f35:	dec    eax
  411f36:	ss clc 
  411f38:	cdq    
  411f39:	mov    esi,0xf303829d
  411f3e:	dec    eax
  411f3f:	ret    
  411f40:	mov    edx,0x7ad0bcf4
  411f45:	dec    ecx
  411f46:	dec    eax
  411f47:	in     eax,dx
  411f48:	push   0x23db5c01
  411f4d:	pusha  
  411f4e:	push   cs
  411f4f:	dec    ebx
  411f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f51:	jp     0x411f8a
  411f53:	or     eax,0xb79d21e8
  411f58:	repz test DWORD PTR [ebx+0x495e1901],esi
  411f5f:	mov    ah,0xb7
  411f61:	(bad)  
  411f62:	data16 jns 0x411f87
  411f65:	pop    esi
  411f66:	cmp    ebx,0xe158b3f1
  411f6c:	imul   ecx,DWORD PTR [edi+0x2b6b4479],0xffffff9b
  411f73:	xor    ah,al
  411f75:	(bad)  
  411f76:	mov    dh,0xb
  411f78:	dec    esi
  411f79:	inc    ecx
  411f7a:	and    dh,bl
  411f7c:	daa    
  411f7d:	jae    0x411fad
  411f7f:	inc    ebx
  411f80:	call   0xd3e3:0x8b517355
  411f87:	out    dx,al
  411f88:	cli    
  411f89:	inc    ebp
  411f8a:	out    dx,al
  411f8b:	out    0xbe,eax
  411f8d:	jo     0x411f96
  411f8f:	inc    edi
  411f90:	aas    
  411f91:	adc    ah,BYTE PTR [edi+0x49]
  411f94:	jno    0x411fa7
  411f96:	fs pop esi
  411f98:	stos   BYTE PTR es:[edi],al
  411f99:	out    dx,eax
  411f9a:	mov    bl,0xec
  411f9c:	dec    eax
  411f9d:	mov    eax,0x997596e3
  411fa2:	or     al,0x1d
  411fa4:	push   edi
  411fa5:	ins    DWORD PTR es:[edi],dx
  411fa6:	and    DWORD PTR [eax+0x29f7320c],ebx
  411fac:	shl    BYTE PTR [ecx+0x71],1
  411faf:	mov    edi,0x25f9a1dc
  411fb4:	pop    ds
  411fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fb6:	mov    eax,DWORD PTR [esi+0x2d873e04]
  411fbc:	push   edx
  411fbd:	aam    0xc4
  411fbf:	lock hlt 
  411fc1:	lock and eax,0x9427f493
  411fc7:	pop    ds
  411fc8:	fs ret 0x398
  411fcc:	aad    0x55
  411fce:	loope  0x411fc4
  411fd0:	mov    ecx,DWORD PTR [esi+0x4ebcd381]
  411fd6:	xchg   ebx,eax
  411fd7:	pop    ebx
  411fd8:	mov    esp,0xd56c460c
  411fdd:	mov    dh,BYTE PTR [ebx+eax*8]
  411fe0:	mov    bl,0x80
  411fe2:	shl    BYTE PTR [ecx-0x6a],0x23
  411fe6:	mov    ds:0x29d9fc6b,al
  411feb:	sahf   
  411fec:	sti    
  411fed:	push   ss
  411fee:	jl     0x411f9d
  411ff0:	loope  0x411fa2
  411ff2:	out    0x6b,al
  411ff4:	jb     0x41203d
  411ff6:	add    cl,bl
  411ff8:	(bad)  
  411ff9:	retf   
  411ffa:	mov    ebp,esi
  411ffc:	adc    BYTE PTR [edx+0x2e88a230],bl
  412002:	or     DWORD PTR [esi+edx*8-0x58],ebx
  412006:	pop    es
  412007:	outs   dx,BYTE PTR ds:[esi]
  412008:	imul   ecx,DWORD PTR [eax],0x12bd913a
  41200e:	data16 data16 mov dl,0xcc
  412012:	nop    ecx
  412015:	add    al,0xe3
  412017:	fwait
  412018:	je     0x41200c
  41201a:	xchg   edx,eax
  41201b:	test   al,0x2e
  41201d:	hlt    
  41201e:	repnz fs pushf 
  412021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412022:	xchg   esp,eax
  412023:	jge    0x41208c
  412025:	sub    DWORD PTR [edi],0x9b3c6f95
  41202b:	mov    cl,0x4c
  41202d:	or     eax,0x6ea76127
  412032:	lea    ebp,[ecx+0x70]
  412035:	(bad)  
  412036:	sahf   
  412037:	mov    DWORD PTR [edi],edx
  412039:	push   ecx
  41203a:	pop    es
  41203b:	jg     0x411ffd
  41203d:	jb     0x4120a1
  41203f:	retf   
  412040:	jbe    0x411ffb
  412042:	fwait
  412043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412044:	mov    eax,ds:0x52f849d0
  412049:	outs   dx,DWORD PTR ds:[esi]
  41204a:	(bad)
  41204d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41204e:	jle    0x412038
  412050:	stos   BYTE PTR es:[edi],al
  412051:	ss inc eax
  412053:	scas   eax,DWORD PTR es:[edi]
  412054:	fstp   DWORD PTR [eax+edi*1+0x3ca98a7d]
  41205b:	jo     0x412001
  41205d:	xor    eax,0x6cca2886
  412062:	scas   eax,DWORD PTR es:[edi]
  412063:	pop    ds
  412064:	sar    DWORD PTR [edx-0x4e7e0841],1
  41206a:	jle    0x412024
  41206c:	mov    ch,0xd3
  41206e:	jo     0x4120c5
  412070:	cli    
  412071:	adc    ebp,DWORD PTR [eax-0x6bafbb3a]
  412077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412078:	sub    BYTE PTR [edx-0x3cfe2747],bh
  41207e:	sbb    dh,BYTE PTR [eax+0x5a58979]
  412084:	aad    0xfe
  412086:	or     DWORD PTR [eax+0x70c5c7b1],0x38
  41208d:	dec    ebp
  41208e:	push   ds
  41208f:	sbb    eax,DWORD PTR [eax+0x12]
  412092:	out    dx,eax
  412093:	push   edx
  412094:	int3   
  412095:	sub    eax,0x4553d805
  41209a:	xchg   DWORD PTR [ebp-0x7b],ebx
  41209d:	std    
  41209e:	add    al,0x3e
  4120a0:	cdq    
  4120a1:	cmp    esp,ebp
  4120a3:	dec    edi
  4120a4:	lods   al,BYTE PTR ds:[esi]
  4120a5:	pop    ecx
  4120a6:	cs push ebx
  4120a8:	int3   
  4120a9:	mov    BYTE PTR [eax],dh
  4120ab:	xlat   BYTE PTR ds:[ebx]
  4120ac:	inc    ecx
  4120ad:	pop    esp
  4120ae:	jecxz  0x4120ce
  4120b0:	push   ss
  4120b1:	adc    BYTE PTR [esi],0x20
  4120b4:	inc    edx
  4120b5:	retf   0x122c
  4120b8:	xor    eax,0xcb39da9e
  4120bd:	and    DWORD PTR [edx+0x53613eda],0xe16d14bf
  4120c7:	retf   
  4120c8:	aad    0x76
  4120ca:	mov    eax,ds:0x2f620c31
  4120cf:	in     al,dx
  4120d0:	inc    ebp
  4120d1:	in     al,0x76
  4120d3:	and    ebp,edi
  4120d5:	outs   dx,BYTE PTR ds:[esi]
  4120d6:	push   ds
  4120d7:	mov    esi,0x148cefc3
  4120dc:	dec    ebx
  4120dd:	ds xchg ebp,eax
  4120df:	pop    eax
  4120e0:	adc    BYTE PTR [ebp-0x71a3fc61],dh
  4120e6:	mov    eax,0x1c051c7d
  4120eb:	xchg   DWORD PTR [ecx],eax
  4120ed:	or     al,0x2a
  4120ef:	push   ss
  4120f0:	leave  
  4120f1:	lods   eax,DWORD PTR ds:[esi]
  4120f2:	cld    
  4120f3:	das    
  4120f4:	mov    ch,0x7f
  4120f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f7:	cmp    al,0xaa
  4120f9:	mov    dh,bh
  4120fb:	test   eax,0xc3cc7a99
  412100:	xlat   BYTE PTR ds:[ebx]
  412101:	jge    0x41211b
  412103:	or     ebp,DWORD PTR [edx+0x7830613b]
  412109:	sbb    eax,0xbcd932a8
  41210e:	adc    ch,BYTE PTR [edx-0x58d76153]
  412114:	(bad)  
  412115:	call   eax
  412117:	retf   0xa693
  41211a:	xor    esi,ecx
  41211c:	add    bl,BYTE PTR [esi+0x5fe5dec0]
  412122:	adc    eax,0x5117db3
  412127:	popa   
  412128:	iret   
  412129:	cmp    eax,0xf8ed69ff
  41212e:	data16 addr16 cmc 
  412131:	mov    ds:0x11c4e315,al
  412136:	retf   0xab12
  412139:	jb     0x4120bc
  41213b:	mov    WORD PTR [ecx],cs
  41213d:	add    bl,BYTE PTR [eax-0x4f]
  412140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412141:	xor    BYTE PTR [edx-0x2ead1522],ah
  412147:	jbe    0x4120e7
  412149:	call   0x6f2f39e9
  41214e:	and    eax,0x5308e5bb
  412153:	scas   al,BYTE PTR es:[edi]
  412154:	ret    
  412155:	(bad)  
  412156:	imul   edi,DWORD PTR [esi],0x62
  412159:	jmp    0x9b25257d
  41215e:	ret    
  41215f:	xor    eax,0xfffffff3
  412162:	into   
  412163:	jl     0x412185
  412165:	sahf   
  412166:	jge    0x4121e3
  412168:	pop    edi
  412169:	mov    ds:0x86881d58,al
  41216e:	imul   ebx,DWORD PTR [edi+ecx*8],0x202cc947
  412175:	sbb    eax,esi
  412177:	add    eax,0x317e7bab
  41217c:	(bad)  
  41217d:	adc    bl,BYTE PTR [ebx+0x67]
  412180:	and    ebx,ebx
  412182:	out    dx,eax
  412183:	jg     0x412189
  412185:	scas   eax,DWORD PTR es:[edi]
  412186:	mov    BYTE PTR [eax+0x2c],0xbd
  41218a:	in     eax,0x50
  41218c:	dec    ecx
  41218d:	lock xor DWORD PTR [ebx],ebx
  412190:	cmp    al,0x32
  412192:	cld    
  412193:	push   cs
  412194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412195:	push   ecx
  412196:	cmp    esp,esp
  412198:	mov    ?,WORD PTR [eax-0x27]
  41219b:	shl    BYTE PTR [ebp-0x1c],cl
  41219e:	xchg   ebp,eax
  4121a0:	jbe    0x4121b4
  4121a2:	(bad)  
  4121a3:	inc    eax
  4121a4:	mov    ah,0xcb
  4121a6:	inc    eax
  4121a7:	rcl    BYTE PTR [eax],1
  4121a9:	jle    0x412135
  4121ab:	pop    edx
  4121ac:	mov    DWORD PTR ds:0xa417b223,eax
  4121b2:	mov    esp,0xfbdc353f
  4121b7:	inc    ebx
  4121b8:	nop
  4121b9:	mov    esi,0x674fa102
  4121be:	dec    ecx
  4121bf:	in     al,0x90
  4121c1:	inc    ebx
  4121c2:	retf   0x9088
  4121c5:	outs   dx,BYTE PTR ds:[esi]
  4121c6:	das    
  4121c7:	xor    BYTE PTR [ebx],dh
  4121c9:	xchg   edx,eax
  4121ca:	jecxz  0x41215f
  4121cc:	test   DWORD PTR [ebx-0x3c7d3aa5],eax
  4121d2:	xchg   ebp,eax
  4121d3:	cld    
  4121d4:	je     0x41223f
  4121d6:	inc    esp
  4121d7:	push   edx
  4121d8:	out    dx,al
  4121d9:	adc    al,0xb8
  4121db:	ins    DWORD PTR es:[edi],dx
  4121dc:	jnp    0x41221e
  4121de:	lds    ebp,FWORD PTR [edi+0x2e49843b]
  4121e4:	enter  0x5c7b,0x16
  4121e8:	push   ss
  4121e9:	rol    DWORD PTR [ebx+ebp*8-0x130e7d03],1
  4121f0:	pop    ebx
  4121f1:	inc    ecx
  4121f2:	mov    ds:0x5d28c516,al
  4121f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121f8:	mov    ecx,0x1ab31318
  4121fd:	lock bound ebp,QWORD PTR [esp+eax*8]
  412201:	xor    DWORD PTR [esi],edx
  412203:	shl    BYTE PTR [edx-0xd],1
  412206:	fs cmp dh,ah
  412209:	inc    eax
  41220a:	and    DWORD PTR [ecx],eax
  41220c:	add    DWORD PTR [ecx],esi
  41220e:	mov    ah,0xa0
  412210:	jge    0x412287
  412212:	mov    ah,dh
  412214:	dec    edx
  412215:	(bad)  
  412216:	in     eax,dx
  412217:	xchg   esi,eax
  412218:	cmp    ebp,edi
  41221a:	and    esp,eax
  41221c:	pop    ebx
  41221d:	call   0xa728b222
  412222:	outs   dx,DWORD PTR ds:[esi]
  412223:	sub    BYTE PTR [edi],al
  412225:	repnz icebp 
  412227:	outs   dx,BYTE PTR ds:[esi]
  412228:	xchg   edx,eax
  412229:	inc    eax
  41222a:	sbb    DWORD PTR [edx+0xb],ebp
  41222d:	pop    eax
  41222e:	mov    ebp,0xc855758a
  412233:	dec    esp
  412234:	dec    eax
  412235:	jne    0x412220
  412237:	fs and al,0x0
  41223a:	mov    ah,0x62
  41223c:	push   cs
  41223d:	and    ebp,DWORD PTR [esp+ebx*8]
  412240:	and    ebx,edi
  412242:	stos   DWORD PTR es:[edi],eax
  412243:	sar    BYTE PTR [esp+ebx*4-0x1a],1
  412247:	scas   eax,DWORD PTR es:[edi]
  412248:	out    dx,al
  412249:	pop    esi
  41224a:	pop    esp
  41224b:	jns    0x4122a4
  41224d:	aam    0x75
  41224f:	sub    ebp,edi
  412251:	mov    al,ds:0x85c750fc
  412256:	(bad)  
  412257:	in     al,0x4b
  412259:	adc    eax,esp
  41225b:	ins    BYTE PTR es:[edi],dx
  41225c:	fwait
  41225d:	or     BYTE PTR [edi],0xc4
  412260:	(bad)  
  412261:	jno    0x412234
  412263:	pop    ebx
  412264:	xchg   BYTE PTR [ecx-0x34],cl
  412267:	xchg   ecx,eax
  412268:	sub    al,0xcc
  41226a:	sub    DWORD PTR [ebp-0x65],edx
  41226d:	jle    0x4122b2
  41226f:	fild   QWORD PTR [ebx]
  412271:	mov    ch,0x17
  412273:	jnp    0x4122f2
  412275:	fs stos DWORD PTR es:[edi],eax
  412277:	imul   esi,DWORD PTR [edx+0x5db43d53],0xffffffdf
  41227e:	shl    DWORD PTR [edx],cl
  412280:	add    BYTE PTR [ebp+0xef1fd90],al
  412286:	jmp    DWORD PTR [edx-0x66]
  412289:	hlt    
  41228a:	in     al,dx
  41228b:	fisubr DWORD PTR [esi-0x2a6cc4c4]
  412291:	adc    esp,esi
  412293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412294:	dec    eax
  412295:	int    0x51
  412297:	pushf  
  412298:	div    DWORD PTR [eax]
  41229a:	in     eax,dx
  41229b:	(bad)  
  41229c:	daa    
  41229d:	adc    edi,ebp
  41229f:	sub    al,0x8
  4122a1:	loop   0x41227c
  4122a3:	jnp    0x4122a1
  4122a5:	jo     0x4122b6
  4122a7:	and    bh,BYTE PTR [ecx+0x6f35e8a1]
  4122ad:	jmp    0xc7f1eef6
  4122b2:	popf   
  4122b3:	mov    edi,0x43396599
  4122b8:	shl    bh,0x64
  4122bb:	adc    BYTE PTR [edx+ebx*8-0x23c4760b],ah
  4122c2:	mov    edx,0x569b5b24
  4122c7:	mov    bl,0xbe
  4122c9:	pusha  
  4122ca:	xor    edi,DWORD PTR [esi-0x7b]
  4122cd:	push   0x3d27b2a4
  4122d2:	push   edi
  4122d3:	dec    esi
  4122d4:	ja     0x4122d5
  4122d6:	lods   eax,DWORD PTR ds:[esi]
  4122d7:	stc    
  4122d8:	or     al,0xe4
  4122da:	test   eax,0x263dd538
  4122df:	cmp    al,0xe9
  4122e1:	or     edx,edi
  4122e3:	push   ebx
  4122e4:	mov    bl,0xaa
  4122e6:	stos   DWORD PTR es:[edi],eax
  4122e7:	into   
  4122e8:	mov    bh,0xc0
  4122ea:	and    edx,DWORD PTR [ecx+0x52]
  4122ed:	inc    ebp
  4122ee:	fwait
  4122ef:	jo     0x41231b
  4122f1:	in     eax,dx
  4122f2:	or     DWORD PTR [eax+0x16],ebx
  4122f5:	test   DWORD PTR [esi],0x38fa140
  4122fb:	gs dec edx
  4122fd:	sub    dh,ah
  4122ff:	rcl    DWORD PTR [esi-0x2b],0x14
  412303:	scas   eax,DWORD PTR es:[edi]
  412304:	jo     0x412299
  412306:	jmp    0xcd81:0xd3da2cd7
  41230d:	repnz push ebp
  41230f:	imul   edx,DWORD PTR [edi],0xc58b5a9f
  412315:	xor    ebx,ecx
  412317:	shr    eax,cl
  412319:	push   esi
  41231a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41231b:	xor    eax,0x8d598892
  412320:	data16 jp 0x4122b9
  412323:	jmp    0x4122f9
  412325:	outs   dx,DWORD PTR ds:[esi]
  412326:	mov    eax,0xb8f7b058
  41232b:	sbb    eax,DWORD PTR [eax-0x4]
  41232e:	push   0xa2148932
  412333:	mov    esp,0x85428149
  412338:	pop    edi
  412339:	into   
  41233a:	sub    DWORD PTR [ecx+0x755b2d45],0x5ffcd602
  412344:	mov    al,0x94
  412346:	sbb    ecx,DWORD PTR [edx]
  412348:	jp     0x4122d4
  41234a:	je     0x412326
  41234c:	push   ss
  41234d:	jecxz  0x412370
  41234f:	dec    eax
  412350:	push   ebp
  412351:	adc    BYTE PTR ds:0x611316fc,dl
  412357:	jle    0x4123cf
  412359:	push   ebx
  41235a:	std    
  41235b:	popa   
  41235c:	sub    al,0x36
  41235e:	adc    BYTE PTR [ebp-0x6199b4e1],ch
  412364:	xchg   BYTE PTR [ecx+0x2011f2dd],bh
  41236a:	or     ch,BYTE PTR [eax-0x4d4759d1]
  412370:	cmc    
  412371:	dec    ecx
  412372:	mov    esp,0xc2bf03b4
  412377:	fadd   QWORD PTR [edi-0x5621b85e]
  41237d:	loop   0x4123b1
  41237f:	(bad)  
  412380:	jl     0x412366
  412382:	stos   BYTE PTR es:[edi],al
  412383:	mov    edx,0xef1fa3f7
  412388:	je     0x412396
  41238a:	retf   0x5692
  41238d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41238e:	push   esi
  41238f:	add    al,0xe0
  412391:	test   eax,0x92e24d52
  412396:	xchg   BYTE PTR [esi+0x5c],dl
  412399:	mov    bh,0x1
  41239b:	call   0x98fa618d
  4123a0:	mov    eax,0x704f71f0
  4123a5:	daa    
  4123a6:	arpl   WORD PTR [esi+0x2f],bx
  4123a9:	dec    ebp
  4123aa:	fidiv  WORD PTR [ecx+0x49]
  4123ad:	pop    eax
  4123ae:	sub    ebp,edx
  4123b0:	nop
  4123b1:	add    esi,DWORD PTR ds:[esi+0x11f308d3]
  4123b8:	bound  ebp,QWORD PTR [edx-0x28194ccd]
  4123be:	xor    DWORD PTR [esi+0x14f97078],esp
  4123c4:	mov    ebp,0x75e828cf
  4123c9:	jmp    DWORD PTR gs:[edi+0x25]
  4123cd:	or     DWORD PTR [ecx],edx
  4123cf:	sbb    eax,0x296ff21a
  4123d4:	and    ah,BYTE PTR [ecx+edi*4]
  4123d7:	stos   DWORD PTR es:[edi],eax
  4123d8:	sub    bl,BYTE PTR [edx+0x794d984c]
  4123de:	xor    cl,al
  4123e0:	and    eax,ecx
  4123e2:	mov    bh,0x34
  4123e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123e5:	imul   ebp,esp,0xffffffa4
  4123e8:	mov    edx,DWORD PTR [ebx]
  4123ea:	gs mov eax,0x864e3b48
  4123f0:	pop    es
  4123f1:	cld    
  4123f2:	mov    ebx,0x91db9409
  4123f7:	push   ebx
  4123f8:	xor    edi,0xffffffb8
  4123fb:	push   eax
  4123fc:	sub    edx,DWORD PTR [edx+0xb]
  4123ff:	adc    esp,esi
  412401:	push   edx
  412402:	push   0xffffffa0
  412404:	and    BYTE PTR [ebp+0x5ade461b],bh
  41240a:	jae    0x41242b
  41240c:	pop    ds
  41240d:	cmc    
  41240e:	clc    
  41240f:	mov    dh,0x5c
  412411:	je     0x4123c9
  412413:	fstp   QWORD PTR ds:0x2fba55
  412419:	jecxz  0x4123a8
  41241b:	fmul   DWORD PTR [edi-0x75]
  41241e:	fnsetpm(287 only) 
  412420:	jge    0x412485
  412422:	arpl   WORD PTR [edx],sp
  412424:	ficom  WORD PTR [eax-0x27ee4931]
  41242a:	mov    edx,0x3cbaadfd
  41242f:	rcr    BYTE PTR [esi+ecx*1],1
  412432:	in     eax,dx
  412433:	mov    bl,0x33
  412435:	ror    DWORD PTR [edx-0x49],1
  412438:	scas   eax,DWORD PTR es:[edi]
  412439:	pop    esp
  41243a:	mov    bh,0xfe
  41243c:	jmp    0x6db6e7c6
  412441:	mov    esi,0xe3161f61
  412446:	dec    edi
  412447:	xor    BYTE PTR [ebx],bl
  412449:	mov    ebp,0x1db5b403
  41244e:	xor    eax,0xdaa4555c
  412453:	imul   ebp,eax,0x92352113
  412459:	mov    ch,0x39
  41245b:	sbb    esp,DWORD PTR [ebx+0xb]
  41245e:	sub    DWORD PTR [ebx-0x3c],0x58620fb6
  412465:	mov    dl,0xe9
  412467:	xchg   edx,eax
  412468:	popa   
  412469:	xchg   esi,eax
  41246a:	and    DWORD PTR [eax-0x710a2a36],eax
  412470:	and    ecx,esp
  412472:	fs inc edi
  412474:	shl    DWORD PTR [ecx+0x78],0x42
  412478:	mov    ecx,0x1a8338b7
  41247d:	(bad)  
  41247e:	(bad)  
  41247f:	scas   eax,DWORD PTR es:[edi]
  412480:	xor    al,0x33
  412482:	cld    
  412483:	jae    0x412427
  412485:	(bad)  
  412487:	sbb    DWORD PTR [ebp-0x29],esi
  41248a:	mov    bh,0x1f
  41248c:	cmp    eax,0x73072ad4
  412491:	cmp    DWORD PTR [edi-0x7d],ebp
  412494:	rol    DWORD PTR [ebx],0x7d
  412497:	in     al,dx
  412498:	adc    al,0x5
  41249a:	jl     0x412507
  41249c:	ror    DWORD PTR [esi-0x6ddbb7c3],1
  4124a2:	stos   BYTE PTR es:[edi],al
  4124a3:	mov    al,ds:0x5b350e79
  4124a8:	or     BYTE PTR gs:[eax],al
  4124ab:	retf   0xb9a4
  4124ae:	or     edx,eax
  4124b0:	mov    ds:0x896ca58c,al
  4124b5:	push   ebp
  4124b6:	or     BYTE PTR [ebx+0x5d8b0855],cl
  4124bc:	test   al,0x81
  4124be:	ret    0x8fa
  4124c1:	push   edi
  4124c2:	add    BYTE PTR [edi],cl
  4124c4:	scas   eax,DWORD PTR es:[edi]
  4124c5:	ror    DWORD PTR [ecx+0x558ba855],cl
  4124cb:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  4124d1:	pushf  
  4124d2:	clc    
  4124d3:	add    BYTE PTR fs:[ebx],cl
  4124d6:	ror    DWORD PTR [ecx+0x558bac55],cl
  4124dc:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  4124e2:	xor    edx,ebx
  4124e4:	mov    DWORD PTR [ebp-0x50],edx
  4124e7:	mov    edx,DWORD PTR [ebp+0x8]
  4124ea:	mov    ebx,DWORD PTR [ebp-0x4c]
  4124ed:	add    edx,edi
  4124ef:	and    edx,ebx
  4124f1:	mov    DWORD PTR [ebp-0x4c],edx
  4124f4:	mov    edx,DWORD PTR [ebp+0x8]
  4124f7:	mov    ebx,DWORD PTR [ebp-0x48]
  4124fa:	lea    edx,[ebx+edx*1+0x241fcdf]
  412501:	mov    DWORD PTR [ebp-0x48],edx
  412504:	mov    edx,DWORD PTR [ebp+0x8]
  412507:	mov    ebx,0xfa5e1530
  41250c:	sub    ebx,edx
  41250e:	add    ebx,DWORD PTR [ebp-0x44]
  412511:	mov    DWORD PTR [ebp-0x44],ebx
  412514:	mov    edx,DWORD PTR [ebp+0x8]
  412517:	xor    edx,eax
  412519:	add    edx,esi
  41251b:	jne    0x41002c
  412521:	mov    edx,DWORD PTR [ebp-0xc]
  412524:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41252b:	mov    bl,BYTE PTR [ebp-0x1]
  41252e:	cmp    dl,bl
  412530:	je     0x41909d
  412536:	mov    ecx,DWORD PTR [ebp-0x5c]
  412539:	mov    edx,DWORD PTR [ebp-0xc]
  41253c:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412543:	mov    ebx,DWORD PTR [ebp+0xc]
  412546:	xor    ecx,eax
  412548:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ef]
  41254f:	jne    0x41b556
  412555:	mov    ecx,DWORD PTR [ebp-0x5c]
  412558:	mov    edx,DWORD PTR [ebp+0xc]
  41255b:	xor    ecx,eax
  41255d:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ef]
  412565:	mov    edx,DWORD PTR [ebp-0x18]
  412568:	xor    edx,eax
  41256a:	add    edx,esi
  41256c:	cmp    ecx,edx
  41256e:	mov    ecx,DWORD PTR [ebp-0x14]
  412571:	mov    DWORD PTR [ebp+0x8],ecx
  412574:	mov    ecx,DWORD PTR [ebp+0x8]
  412577:	je     0x41d9e3
  41257d:	jmp    0x414902
  412582:	lods   eax,DWORD PTR ds:[esi]
  412583:	xor    edi,DWORD PTR [ecx-0x65]
  412586:	out    dx,eax
  412587:	fwait
  412588:	fwait
  412589:	sub    edi,DWORD PTR [esi-0x2a0aca40]
  41258f:	xchg   DWORD PTR [ecx+0x7a83fec9],edx
  412595:	jp     0x4125a9
  412597:	pop    edi
  412598:	jp     0x412614
  41259a:	(bad)  
  41259b:	mov    dh,0xaf
  41259d:	sbb    ch,BYTE PTR [esi*4-0x2e25a146]
  4125a4:	ja     0x4125c2
  4125a6:	aas    
  4125a7:	jmp    0x4125f5
  4125a9:	xchg   edx,eax
  4125aa:	jmp    0x412572
  4125ac:	push   ebp
  4125ad:	add    DWORD PTR [eax],0x753fe4a5
  4125b3:	cmp    BYTE PTR [esi],al
  4125b5:	inc    esi
  4125b6:	sahf   
  4125b7:	push   0xffffffaa
  4125b9:	test   eax,0xee389004
  4125be:	retf   0x6055
  4125c1:	gs (bad) 
  4125c3:	mov    ebx,0xea16d11e
  4125c8:	pop    eax
  4125c9:	js     0x412612
  4125cb:	sbb    ebx,DWORD PTR [eax-0x27]
  4125ce:	shl    DWORD PTR [ecx-0x58585bdb],cl
  4125d4:	icebp  
  4125d5:	das    
  4125d6:	test   BYTE PTR [ebx+0x45],ch
  4125d9:	xchg   edx,eax
  4125da:	fimul  DWORD PTR [esp+eiz*2-0x66]
  4125de:	outs   dx,BYTE PTR ds:[esi]
  4125df:	jecxz  0x412590
  4125e1:	fistp  WORD PTR [ebx-0x3fef29d0]
  4125e7:	mov    ecx,0xf5e8500a
  4125ec:	jmp    0x4125d6
  4125ee:	cld    
  4125ef:	pop    ecx
  4125f0:	pop    edi
  4125f1:	pop    ds
  4125f2:	das    
  4125f3:	mov    ds:0x604fa720,eax
  4125f8:	push   eax
  4125f9:	fmul   DWORD PTR [ebx-0x41]
  4125fc:	pop    esp
  4125fd:	add    dl,BYTE PTR [eax-0x69c98268]
  412603:	data16 rol BYTE PTR [esi],0x31
  412607:	cwde   
  412608:	mov    esp,0x590b8d88
  41260d:	mov    edi,0xe66bcd3a
  412612:	call   0x65100dbf
  412617:	fstp   TBYTE PTR [edi+0x7965d14c]
  41261d:	mov    esp,0x514f487
  412622:	push   0x68
  412624:	div    ebx
  412626:	in     eax,dx
  412627:	and    bh,dh
  412629:	scas   eax,DWORD PTR es:[edi]
  41262a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41262b:	sub    eax,0x709fad92
  412630:	sub    BYTE PTR [ecx+0x6c],0x8a
  412634:	push   ebx
  412635:	xor    BYTE PTR [edi],ch
  412637:	xchg   ebp,eax
  412638:	mov    ds:0x1133dbc6,al
  41263d:	nop
  41263e:	push   cs
  41263f:	out    dx,eax
  412640:	aam    0x5e
  412642:	sbb    al,0x79
  412644:	pop    esp
  412645:	mov    BYTE PTR [eax-0x1ea210d2],0xf9
  41264c:	adc    BYTE PTR [edi+0x1e],al
  41264f:	test   eax,0xfa757cb6
  412654:	pop    esp
  412655:	xchg   edx,eax
  412656:	dec    ecx
  412657:	cmp    eax,0x848b87c6
  41265c:	and    al,0xdc
  41265e:	(bad)  
  41265f:	cmp    DWORD PTR [eax],edx
  412661:	shr    BYTE PTR [edx-0x53],cl
  412664:	sbb    eax,0x6a4b48ba
  412669:	aam    0x4d
  41266b:	cmp    BYTE PTR [esi],dl
  41266d:	xor    ebx,DWORD PTR [ecx-0x6fb10e14]
  412673:	xchg   edx,eax
  412674:	inc    eax
  412675:	(bad)  
  412676:	push   ds
  412677:	adc    cl,BYTE PTR [ebx]
  412679:	lods   eax,DWORD PTR ds:[esi]
  41267a:	shl    BYTE PTR [ecx+0x57],0x2b
  41267e:	sbb    al,0x83
  412680:	xor    al,0xeb
  412682:	mov    ebx,DWORD PTR [edx+0x45227a2d]
  412688:	jo     0x41267b
  41268a:	lds    eax,FWORD PTR [esi-0x5816daf6]
  412690:	sbb    DWORD PTR [esi+ebx*8],0x1a95acd3
  412697:	xchg   ecx,eax
  412698:	pop    DWORD PTR [ecx-0x24]
  41269b:	fld    QWORD PTR [ecx-0x18536863]
  4126a1:	shl    DWORD PTR [ebx],cl
  4126a3:	ss xor dh,bl
  4126a6:	xchg   esi,eax
  4126a7:	add    ecx,ebx
  4126a9:	xlat   BYTE PTR ds:[ebx]
  4126aa:	dec    edx
  4126ab:	ss enter 0x5f21,0xf6
  4126b0:	mov    ebx,esi
  4126b2:	scas   al,BYTE PTR es:[edi]
  4126b3:	xchg   esi,eax
  4126b4:	into   
  4126b5:	xchg   esp,eax
  4126b6:	ss out 0xc0,al
  4126b9:	sbb    BYTE PTR [eax+ebp*1],0x4c
  4126bd:	add    bh,bh
  4126bf:	dec    ecx
  4126c0:	cmp    BYTE PTR [edx],ah
  4126c2:	mov    bl,0xa7
  4126c4:	mov    ebp,0x5685154b
  4126c9:	jo     0x412730
  4126cb:	dec    ebx
  4126cc:	dec    ebp
  4126cd:	loope  0x412734
  4126cf:	mov    al,ds:0xed7cad27
  4126d4:	xchg   BYTE PTR [edi],bl
  4126d6:	jmp    0x41274b
  4126d8:	mov    WORD PTR [ecx],?
  4126da:	data16 adc dh,BYTE PTR [edx]
  4126dd:	scas   eax,DWORD PTR es:[edi]
  4126de:	adc    DWORD PTR [ecx-0x5489119f],0xcdb81037
  4126e8:	dec    dl
  4126ea:	mov    ah,0x66
  4126ec:	mov    bl,0x9
  4126ee:	mov    edx,0x71e436a4
  4126f3:	push   eax
  4126f4:	fwait
  4126f5:	bound  edi,QWORD PTR [edi]
  4126f7:	jp     0x41270e
  4126f9:	jl     0x4126a0
  4126fb:	imul   ecx,DWORD PTR [edi+0x14],0x21165a85
  412702:	xchg   edx,eax
  412703:	push   ecx
  412704:	ins    BYTE PTR es:[edi],dx
  412705:	pop    eax
  412706:	lahf   
  412707:	mov    ebp,0x5aa7ff74
  41270c:	aaa    
  41270d:	dec    DWORD PTR [ebp-0x49]
  412710:	aaa    
  412711:	and    eax,0xeecc5b56
  412716:	adc    dh,BYTE PTR [edx-0x35]
  412719:	cmp    al,0x5
  41271b:	scas   al,BYTE PTR es:[edi]
  41271c:	hlt    
  41271d:	rcl    DWORD PTR [ebx+0x32],1
  412720:	retf   0x91d7
  412723:	daa    
  412724:	jecxz  0x412752
  412726:	test   eax,0x880f96a6
  41272b:	iret   
  41272c:	test   eax,0xec933558
  412731:	out    0xe8,eax
  412733:	sbb    eax,0x53a46893
  412738:	fmul   DWORD PTR [ecx+0x68]
  41273b:	push   ecx
  41273c:	mov    dl,0x37
  41273e:	aaa    
  41273f:	xor    eax,DWORD PTR [esi-0x2c4d37ff]
  412745:	(bad)  
  412746:	loop   0x4127af
  412748:	sbb    cl,BYTE PTR [edi]
  41274a:	mov    esp,0xb3555550
  41274f:	aas    
  412750:	pop    ebp
  412751:	push   ecx
  412752:	loope  0x412782
  412754:	or     BYTE PTR [edx+0x17],al
  412757:	push   ebp
  412758:	inc    edx
  412759:	and    al,0x23
  41275b:	inc    edx
  41275c:	push   ss
  41275d:	fsubp  st(1),st
  41275f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412760:	icebp  
  412761:	pop    eax
  412762:	add    al,0xba
  412764:	mov    edi,0x5d258af2
  412769:	pop    ecx
  41276a:	mov    ebx,0xfc5516dc
  41276f:	adc    ebp,eax
  412771:	jno    0x412718
  412773:	dec    esp
  412774:	add    bl,BYTE PTR [ebp+ebx*4-0x6e13bb7e]
  41277b:	mov    BYTE PTR [ebx-0x10fbffe8],0x74
  412782:	mov    eax,DWORD PTR [eax+ecx*2]
  412785:	mov    ds,ebx
  412787:	stc    
  412788:	sub    eax,0x91d9a306
  41278d:	dec    edi
  41278e:	out    0x1c,eax
  412790:	mov    eax,ds:0xda45c7b
  412795:	inc    esi
  412796:	scas   eax,DWORD PTR es:[edi]
  412797:	dec    ebx
  412798:	dec    eax
  412799:	jo     0x4127ee
  41279b:	in     eax,dx
  41279c:	sub    DWORD PTR ds:0x10b17a91,0x1c051416
  4127a6:	aaa    
  4127a7:	ret    0x1da9
  4127aa:	jecxz  0x4127d7
  4127ac:	outs   dx,DWORD PTR ds:[esi]
  4127ad:	(bad)  
  4127af:	push   esi
  4127b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127b1:	js     0x4127e4
  4127b3:	add    edx,DWORD PTR ds:0xc7944e1c
  4127b9:	nop
  4127ba:	push   eax
  4127bb:	adc    BYTE PTR [edx-0x5f],dl
  4127be:	add    BYTE PTR [ebx],dh
  4127c0:	fbld   TBYTE PTR [edi-0x651168fb]
  4127c6:	lods   eax,DWORD PTR ds:[esi]
  4127c7:	cmp    al,0x74
  4127c9:	retf   
  4127ca:	loopne 0x4127c9
  4127cc:	mov    BYTE PTR [eax+0x7fc9da53],bh
  4127d2:	cmp    al,0x9d
  4127d4:	ins    BYTE PTR es:[edi],dx
  4127d5:	mov    WORD PTR [esp+ebp*1],?
  4127d8:	and    al,0x99
  4127da:	push   edi
  4127db:	pusha  
  4127dc:	jnp    0x412767
  4127de:	arpl   WORD PTR ss:[ecx+0x7],bx
  4127e2:	mov    edx,0xf3174d5
  4127e7:	or     eax,0x18d32866
  4127ec:	scas   eax,DWORD PTR es:[edi]
  4127ed:	outs   dx,BYTE PTR ds:[esi]
  4127ee:	jns    0x412782
  4127f0:	sub    esp,DWORD PTR [esi-0x35]
  4127f3:	(bad)  
  4127f5:	or     BYTE PTR [esi+0x38c3c69c],dh
  4127fb:	jae    0x412845
  4127fd:	pop    edi
  4127fe:	mov    eax,ds:0xad882dbc
  412803:	mov    eax,0xa3241223
  412808:	cld    
  412809:	cdq    
  41280a:	mov    ecx,0xf64772c2
  41280f:	loop   0x412879
  412811:	in     eax,dx
  412812:	pusha  
  412813:	add    DWORD PTR [esi+0x59],edx
  412816:	push   0x71
  412818:	out    0xad,eax
  41281a:	xchg   ecx,eax
  41281b:	aad    0xb7
  41281d:	xor    DWORD PTR [edx+0x3a1486a1],0xfffffffa
  412824:	mov    WORD PTR [edx+0x100e54da],es
  41282a:	push   ebp
  41282b:	fwait
  41282c:	adc    BYTE PTR ds:0x57424ec2,bh
  412832:	lea    eax,[edx-0x8bceb73]
  412838:	jp     0x412850
  41283a:	mov    cl,0x34
  41283c:	xchg   esi,eax
  41283d:	xchg   ebp,eax
  41283e:	mov    edx,ebx
  412840:	daa    
  412841:	pop    ds
  412842:	xchg   edi,eax
  412843:	pop    edi
  412844:	bound  edx,QWORD PTR [ecx-0x2a]
  412847:	fs jecxz 0x412892
  41284a:	push   ebp
  41284b:	add    BYTE PTR ds:0xda157edc,0xb2
  412852:	cwde   
  412853:	(bad)  
  412854:	mov    eax,ds:0x9be5c003
  412859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41285a:	cmc    
  41285b:	les    ebp,FWORD PTR [eax+0x3]
  41285e:	push   ebp
  41285f:	test   BYTE PTR [edx+edi*1+0x53],dl
  412863:	jo     0x412815
  412865:	cmp    DWORD PTR ds:0xf1957a80,esp
  41286b:	cmp    eax,0xae4a71c4
  412870:	mov    ah,BYTE PTR [edi+edi*4+0x14]
  412874:	fs xor al,0x32
  412877:	cs cmp al,0x51
  41287a:	(bad)  
  41287c:	xchg   edi,eax
  41287d:	outs   dx,BYTE PTR ds:[esi]
  41287e:	mov    DWORD PTR [ebx+0x304a6d1b],esi
  412884:	arpl   WORD PTR [eax],bx
  412886:	mov    ds:0xe58d6e98,eax
  41288b:	mov    dl,BYTE PTR [edi+0x61]
  41288e:	cmp    bl,0x38
  412891:	les    ebp,FWORD PTR [ebx]
  412893:	(bad)  
  412894:	jb     0x412862
  412896:	pusha  
  412897:	aaa    
  412898:	push   cs
  412899:	(bad)  
  41289a:	enter  0x5063,0x12
  41289e:	mov    edi,0xe6e7791b
  4128a3:	cs hlt 
  4128a5:	add    DWORD PTR [esi],ebx
  4128a7:	inc    ebx
  4128a8:	cmp    DWORD PTR [edi-0x2e],esi
  4128ab:	or     BYTE PTR [edi],bh
  4128ad:	sahf   
  4128ae:	lods   al,BYTE PTR ds:[esi]
  4128af:	sbb    ebx,esi
  4128b1:	div    ah
  4128b3:	out    dx,al
  4128b4:	int    0x5d
  4128b6:	xchg   ecx,eax
  4128b7:	add    DWORD PTR [eax],esi
  4128b9:	int3   
  4128ba:	mov    edi,0x4451aee6
  4128bf:	pop    esi
  4128c0:	jmp    0xec546ac4
  4128c5:	pop    edx
  4128c6:	jb     0x412869
  4128c8:	sub    DWORD PTR [ebx-0x775d2412],0xdb1f9392
  4128d2:	and    ebp,eax
  4128d4:	iret   
  4128d5:	les    esi,FWORD PTR [ebx+esi*8]
  4128d8:	repz or DWORD PTR [ecx+0xd],edx
  4128dc:	fs pop eax
  4128de:	lds    ecx,FWORD PTR [ebp-0x7c]
  4128e1:	scas   al,BYTE PTR es:[edi]
  4128e2:	mov    edx,0x1113c76
  4128e7:	iret   
  4128e8:	sbb    dh,BYTE PTR [ecx-0x52]
  4128eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128ec:	(bad)  
  4128ed:	fldcw  WORD PTR [ecx+0x2f5e8e94]
  4128f3:	inc    esi
  4128f4:	jmp    0x508023b0
  4128f9:	adc    al,0x8b
  4128fb:	int    0xe7
  4128fd:	jbe    0x41288b
  4128ff:	mov    ebp,0x32ccf15b
  412904:	adc    esi,DWORD PTR [edi]
  412906:	jl     0x412889
  412908:	stos   DWORD PTR es:[edi],eax
  412909:	cld    
  41290a:	add    BYTE PTR [ecx],ah
  41290c:	(bad)  
  41290d:	mov    bl,0x39
  41290f:	in     eax,dx
  412910:	cmp    cl,BYTE PTR [eax+0x31]
  412913:	std    
  412914:	call   0xfbb4:0x7a16043a
  41291b:	into   
  41291c:	sbb    bh,BYTE PTR [eax]
  41291e:	xor    dl,cl
  412920:	test   BYTE PTR [edi],0xc5
  412923:	fldcw  WORD PTR [edx-0x61]
  412926:	pop    esi
  412927:	pop    edi
  412928:	xor    DWORD PTR [ebx+0x510b744],ebp
  41292e:	pop    edx
  41292f:	cmp    eax,0x7e8698e
  412934:	jmp    0xdb8a:0xa8fa920a
  41293b:	add    esp,DWORD PTR [esi+0x417ae29e]
  412941:	loop   0x412917
  412943:	push   eax
  412944:	jne    0x41291e
  412946:	or     ecx,DWORD PTR [edx-0x30a86c6c]
  41294c:	sub    ah,dh
  41294e:	and    DWORD PTR [esi+0xb],edi
  412951:	jmp    0xb33ae553
  412956:	(bad)  
  412957:	repnz adc ecx,DWORD PTR [esi]
  41295a:	mov    bh,0xce
  41295c:	test   al,0x68
  41295e:	pop    esp
  41295f:	jmp    FWORD PTR [edi+ebp*1+0x6e]
  412963:	jmp    0xa482:0xcc0bbdc2
  41296a:	or     BYTE PTR [edi-0x6a9d0412],dh
  412970:	shr    BYTE PTR [ebp-0x39],1
  412973:	cmp    ch,BYTE PTR [eax-0x70]
  412976:	loop   0x41292f
  412978:	xchg   BYTE PTR [edx-0x7dc903e7],cl
  41297e:	cld    
  41297f:	fstp   QWORD PTR [ebp+0x10]
  412982:	aaa    
  412983:	inc    edi
  412984:	dec    edi
  412985:	imul   BYTE PTR [edi+0x1e]
  412988:	fcom   QWORD PTR ds:0x4d656a22
  41298e:	retf   0xdf78
  412991:	lds    edx,FWORD PTR [edx-0x15]
  412994:	jno    0x412a04
  412996:	xchg   BYTE PTR [ebx],dh
  412998:	stc    
  412999:	arpl   WORD PTR [ebp+0x5b],cx
  41299c:	lea    ebx,[ecx+eiz*2]
  41299f:	call   FWORD PTR [eax-0x3e]
  4129a2:	inc    ecx
  4129a3:	popa   
  4129a4:	mov    DWORD PTR [edi-0x7e570a0],eax
  4129aa:	ins    DWORD PTR es:[edi],dx
  4129ab:	pushf  
  4129ac:	sbb    eax,0x5a9252e4
  4129b1:	shr    dl,0x71
  4129b4:	jb     0x4129e7
  4129b6:	stos   BYTE PTR es:[edi],al
  4129b7:	push   ebp
  4129b8:	and    BYTE PTR [eax-0x748ce7ab],dl
  4129be:	fwait
  4129bf:	in     al,0xe9
  4129c1:	add    BYTE PTR [edi-0x1c],0x65
  4129c5:	popa   
  4129c6:	push   ss
  4129c7:	pop    ecx
  4129c8:	mov    es,WORD PTR [esi]
  4129ca:	dec    ecx
  4129cb:	shl    BYTE PTR [ecx-0x6f],cl
  4129ce:	in     eax,0x24
  4129d0:	xchg   ebp,eax
  4129d1:	inc    edi
  4129d2:	ins    BYTE PTR es:[edi],dx
  4129d3:	adc    DWORD PTR [ebx],0xffffff97
  4129d6:	rep ins BYTE PTR es:[edi],dx
  4129d8:	repz iret 
  4129da:	pop    eax
  4129db:	push   cs
  4129dc:	clc    
  4129dd:	mov    edi,DWORD PTR [ebx]
  4129df:	or     BYTE PTR [edx],ch
  4129e1:	and    esp,eax
  4129e3:	mov    esi,0x446cd68f
  4129e8:	lahf   
  4129e9:	xchg   BYTE PTR [eax],cl
  4129eb:	out    0x97,eax
  4129ed:	sub    DWORD PTR [esi],edi
  4129ef:	xchg   edi,eax
  4129f0:	imul   ebx,DWORD PTR [edi+0x59],0x13bdea09
  4129f7:	xchg   esi,eax
  4129f8:	scas   al,BYTE PTR es:[edi]
  4129f9:	and    dl,cl
  4129fb:	or     ebx,DWORD PTR [ebx-0x4f]
  4129fe:	loop   0x4129fa
  412a00:	mov    gs,WORD PTR [edi*8-0x646640ba]
  412a07:	inc    DWORD PTR [ebp-0x790d1bad]
  412a0d:	fdiv   st(1),st
  412a0f:	retf   
  412a10:	push   ecx
  412a11:	hlt    
  412a12:	adc    DWORD PTR [ecx-0x13139d96],esi
  412a18:	popa   
  412a19:	aam    0x8a
  412a1b:	jmp    0x24dd0eb2
  412a20:	sbb    al,0x89
  412a22:	inc    eax
  412a23:	and    ah,BYTE PTR [eax]
  412a25:	push   ebx
  412a26:	and    al,0xe9
  412a28:	jp     0x412a67
  412a2a:	mov    bh,BYTE PTR [esi-0x26]
  412a2d:	adc    al,ah
  412a2f:	cli    
  412a30:	out    dx,eax
  412a31:	out    dx,al
  412a32:	mov    al,0xd7
  412a34:	rcl    esp,1
  412a36:	mov    edx,0x88cbd342
  412a3b:	cmp    ebp,DWORD PTR [ebx+0x4acbf8f0]
  412a41:	and    BYTE PTR [ecx-0x41],dh
  412a44:	idiv   BYTE PTR [eax-0x75084f8e]
  412a4a:	pop    ds
  412a4b:	aaa    
  412a4c:	rcr    BYTE PTR [ecx],1
  412a4e:	cmp    eax,0x368a8a6e
  412a53:	daa    
  412a54:	mov    bh,BYTE PTR [ecx+0xc]
  412a57:	add    edx,ebx
  412a59:	push   0xffffffa2
  412a5b:	add    BYTE PTR [eax+0x2e],al
  412a5e:	(bad)  
  412a5f:	ret    0xcec1
  412a62:	push   eax
  412a63:	mov    dh,0x2
  412a65:	cmp    ebp,ecx
  412a67:	jno    0x412a43
  412a69:	add    al,BYTE PTR ds:0x3bc99f99
  412a6f:	inc    edi
  412a70:	call   0xe8df4226
  412a75:	mov    ds:0xf8257847,eax
  412a7a:	aam    0x7c
  412a7c:	sti    
  412a7d:	cmp    BYTE PTR [edx-0x7e9c983d],bh
  412a83:	push   ecx
  412a84:	stc    
  412a85:	ins    BYTE PTR es:[edi],dx
  412a86:	add    al,0x2f
  412a88:	xchg   esp,eax
  412a89:	xor    eax,0x9ab6fc7d
  412a8e:	pop    eax
  412a8f:	or     DWORD PTR [esi-0xff3a472],0xe0d13752
  412a99:	ror    BYTE PTR [edi],0x63
  412a9c:	(bad)  
  412a9d:	sub    dh,BYTE PTR [ebp-0x74]
  412aa0:	scas   eax,DWORD PTR es:[edi]
  412aa1:	shr    BYTE PTR [ebx+0x7528696b],0x38
  412aa8:	repz sub al,BYTE PTR [edx+0x53]
  412aac:	retf   
  412aad:	adc    eax,0x51f108fe
  412ab2:	dec    esp
  412ab3:	fild   DWORD PTR [ebx+0x56c0dddb]
  412ab9:	mov    ch,0xe4
  412abb:	xor    DWORD PTR [eax-0x45],ebx
  412abe:	sub    BYTE PTR [esi+0xc],al
  412ac1:	inc    ebp
  412ac2:	retf   0x9133
  412ac5:	jne    0x412b30
  412ac7:	ficom  WORD PTR [ecx-0x20565802]
  412acd:	pop    edx
  412ace:	icebp  
  412acf:	out    dx,al
  412ad0:	mov    esp,0x2fbe201f
  412ad5:	xor    esp,DWORD PTR [ecx+ebp*1-0x6e41ec19]
  412adc:	or     al,0xc9
  412ade:	out    dx,al
  412adf:	pop    esp
  412ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ae1:	ins    DWORD PTR es:[edi],dx
  412ae2:	call   0x4432bd46
  412ae7:	sub    al,0x87
  412ae9:	sbb    ecx,DWORD PTR ds:0x71a83ba3
  412aef:	cs push esi
  412af1:	int    0x57
  412af3:	cli    
  412af4:	out    0x96,al
  412af6:	ins    BYTE PTR es:[edi],dx
  412af7:	(bad)  
  412af8:	mov    esi,0x5bdbd30f
  412afd:	mov    dl,0xb5
  412aff:	sahf   
  412b00:	add    eax,0xbc235a63
  412b05:	mov    fs,WORD PTR [esi]
  412b07:	or     eax,0xf248ad33
  412b0c:	or     al,0x7
  412b0e:	and    dl,BYTE PTR [esi]
  412b10:	repz mov al,0xff
  412b13:	add    DWORD PTR [bp-0x2fd1],edi
  412b18:	and    eax,0xe8e79165
  412b1d:	jno    0x412af9
  412b1f:	rol    dl,1
  412b21:	lds    ebp,FWORD PTR [eax]
  412b23:	sahf   
  412b24:	xchg   edx,eax
  412b25:	and    al,0x79
  412b27:	ror    DWORD PTR [ebp+eax*2-0x5c],1
  412b2b:	mov    edi,0x19d23b00
  412b30:	mov    eax,0xede81339
  412b35:	inc    ebp
  412b36:	inc    ebp
  412b37:	mov    eax,ds:0xf39e9025
  412b3c:	mov    ch,0x58
  412b3e:	imul   esi,DWORD PTR [ecx],0xffffffcf
  412b41:	fidivr DWORD PTR [esp+esi*8+0x5352f694]
  412b48:	scas   eax,DWORD PTR es:[edi]
  412b49:	les    edx,FWORD PTR [eax]
  412b4b:	xchg   ebx,ebp
  412b4d:	aaa    
  412b4e:	inc    eax
  412b4f:	jp     0x412b94
  412b51:	adc    dh,BYTE PTR [ecx-0x3d19ba7d]
  412b57:	pop    esi
  412b58:	mov    esp,0x25e61a68
  412b5d:	add    DWORD PTR [ebp+0x20],0xc6e8fbf0
  412b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b65:	test   eax,0x9c887c0c
  412b6a:	jmp    0x412b54
  412b6c:	addr16 dec ebp
  412b6e:	xchg   edi,eax
  412b6f:	xchg   edx,eax
  412b70:	call   0x9281ae69
  412b75:	xor    eax,0xec3029c5
  412b7a:	or     al,0xf0
  412b7c:	jmp    0x3094:0x5a72b235
  412b83:	cmp    BYTE PTR [esi+ebp*4-0x23600cf],al
  412b8a:	add    al,0xf9
  412b8c:	inc    ebx
  412b8d:	xchg   di,ax
  412b8f:	pop    ebp
  412b90:	out    dx,eax
  412b91:	jb     0x412b33
  412b93:	inc    eax
  412b94:	push   edi
  412b95:	fnstsw WORD PTR [edx-0x7041104f]
  412b9b:	lods   eax,DWORD PTR ds:[esi]
  412b9c:	push   ss
  412b9d:	pop    ecx
  412b9e:	inc    esi
  412b9f:	in     al,0x41
  412ba1:	rol    DWORD PTR [edi-0x11],cl
  412ba4:	xchg   BYTE PTR [esi+0x418179f5],ah
  412baa:	ret    
  412bab:	sub    bh,dl
  412bad:	dec    ebx
  412bae:	inc    ah
  412bb0:	xor    ebp,0x5aa8f7d
  412bb6:	test   eax,0x3c7a2d31
  412bbb:	(bad)  
  412bbc:	data16 and al,0xf
  412bbf:	fadd   st(2),st
  412bc1:	test   al,0x2c
  412bc3:	or     ah,dh
  412bc5:	or     eax,0x5ee3dbc9
  412bca:	retf   0x7948
  412bcd:	retf   0xa9b5
  412bd0:	adc    eax,0xdc2581b6
  412bd5:	aaa    
  412bd6:	cdq    
  412bd7:	mov    WORD PTR [edi],ss
  412bd9:	and    edi,edx
  412bdb:	xchg   edi,eax
  412bdc:	inc    ebp
  412bdd:	pushf  
  412bde:	inc    ebx
  412bdf:	push   esi
  412be0:	leave  
  412be1:	mov    bl,0xf8
  412be3:	daa    
  412be4:	call   0x64ee:0x7adfe8a2
  412beb:	sbb    al,dh
  412bed:	(bad)  
  412bef:	mov    ah,0xbe
  412bf1:	lods   al,BYTE PTR ds:[esi]
  412bf2:	aad    0x87
  412bf4:	ss into 
  412bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bf7:	mov    edx,0xc0a90fd
  412bfc:	fwait
  412bfd:	mov    ?,WORD PTR [edi]
  412bff:	jl     0x412c43
  412c01:	push   esp
  412c02:	popf   
  412c03:	push   0x3a
  412c05:	xor    dl,BYTE PTR ds:0x99edd6c5
  412c0b:	cmp    eax,0xd8d0c7f7
  412c10:	push   ebx
  412c11:	mov    bh,0x3b
  412c13:	int    0x3
  412c15:	cmp    al,0xc6
  412c17:	outs   dx,DWORD PTR ds:[esi]
  412c18:	out    0xeb,al
  412c1a:	and    cl,BYTE PTR [ebx-0xd]
  412c1d:	mov    dl,0xe2
  412c1f:	shr    ebx,0x57
  412c22:	out    dx,eax
  412c23:	cmp    eax,0xf02e442e
  412c28:	add    eax,0x3ef3dedd
  412c2d:	add    al,0x96
  412c2f:	daa    
  412c30:	cld    
  412c31:	push   cs
  412c32:	sub    DWORD PTR [edi],ebx
  412c34:	jg     0x412c1b
  412c36:	fisttp WORD PTR [ebx+0x71]
  412c39:	jb     0x412c5b
  412c3b:	ret    0xef3d
  412c3e:	push   esp
  412c3f:	rcl    DWORD PTR [ebx-0x67],cl
  412c42:	(bad)  
  412c43:	inc    ecx
  412c44:	mov    BYTE PTR [ebp-0x2e],al
  412c47:	mov    al,0x74
  412c49:	push   ebp
  412c4a:	xor    ecx,eax
  412c4c:	add    cl,BYTE PTR [ecx+0x495ab0fc]
  412c52:	jle    0x412c25
  412c54:	cmc    
  412c55:	push   es
  412c56:	mov    esi,0x4b2acb58
  412c5b:	(bad)  [edi-0x40]
  412c5e:	add    eax,0x3fd143be
  412c63:	dec    ecx
  412c64:	dec    edi
  412c65:	fimul  DWORD PTR [edx-0x76]
  412c68:	xchg   edx,eax
  412c69:	addr16 inc ecx
  412c6b:	ret    0x2377
  412c6e:	cmp    ebx,DWORD PTR [edi-0x29]
  412c71:	cld    
  412c72:	mov    al,ds:0x196908a
  412c77:	jge    0x412cb8
  412c79:	pop    ecx
  412c7a:	(bad)  
  412c7b:	sbb    eax,0xafefd398
  412c80:	(bad)  
  412c81:	push   0xe6453e4f
  412c86:	jo     0x412cf4
  412c88:	push   ebp
  412c89:	adc    edx,DWORD PTR [ebp-0x33120160]
  412c8f:	mov    eax,ds:0x7dd392af
  412c94:	cmp    al,bh
  412c96:	xchg   BYTE PTR [edi],ah
  412c98:	(bad)  [edi-0x7d49e993]
  412c9e:	or     BYTE PTR [edx-0xd],0xee
  412ca2:	ins    DWORD PTR es:[edi],dx
  412ca3:	ins    DWORD PTR es:[edi],dx
  412ca4:	call   0x5349e559
  412ca9:	(bad)  
  412caa:	dec    edx
  412cab:	xor    DWORD PTR [esi+esi*8-0x7941e540],0x19554b32
  412cb6:	or     al,0xd9
  412cb8:	pop    ss
  412cb9:	add    al,0x89
  412cbb:	ins    BYTE PTR es:[edi],dx
  412cbc:	mov    ebx,0x4b1d8987
  412cc1:	in     al,dx
  412cc2:	bound  ecx,QWORD PTR [eax]
  412cc4:	and    eax,0xdd98fd
  412cc9:	les    edx,FWORD PTR fs:[esi+ebx*8+0x4c]
  412cce:	xchg   esi,eax
  412ccf:	jge    0x412c6c
  412cd1:	dec    ebx
  412cd2:	cwde   
  412cd3:	xlat   BYTE PTR ds:[ebx]
  412cd4:	in     al,0x2e
  412cd6:	jno    0x412ca2
  412cd8:	retf   
  412cd9:	mov    bh,0x92
  412cdb:	popa   
  412cdc:	mov    ch,0x69
  412cde:	sub    bh,BYTE PTR [ebx-0x7e8cf747]
  412ce4:	xor    ebp,ebx
  412ce6:	jmp    0x412c7d
  412ce8:	jmp    0xe321b17a
  412ced:	mov    ecx,eax
  412cef:	paddq  mm7,QWORD PTR [edi-0x49ff9dad]
  412cf6:	add    BYTE PTR ds:0x6e244f69,cl
  412cfc:	cmc    
  412cfd:	push   ebx
  412cfe:	pop    esi
  412cff:	pop    edx
  412d00:	sub    ah,BYTE PTR [ecx+0x41]
  412d03:	fcmovnu st,st(2)
  412d05:	xchg   esi,eax
  412d06:	stos   DWORD PTR es:[edi],eax
  412d07:	icebp  
  412d08:	xor    al,0x5
  412d0a:	push   cs
  412d0b:	test   DWORD PTR [eax+0x22],0x8aca2471
  412d12:	jnp    0x412d15
  412d14:	stos   BYTE PTR es:[edi],al
  412d15:	push   es
  412d16:	out    dx,eax
  412d17:	xchg   ebx,eax
  412d18:	retf   
  412d19:	sbb    ebx,ecx
  412d1b:	and    eax,0x43089d59
  412d20:	jecxz  0x412d82
  412d22:	cmp    eax,0xf4d34098
  412d27:	xchg   ebp,eax
  412d28:	sbb    dh,BYTE PTR [eax+0x186ab048]
  412d2e:	add    eax,0x46
  412d31:	push   0x64418aea
  412d36:	add    BYTE PTR [ecx],bh
  412d38:	or     eax,0x87d5f232
  412d3d:	jmp    0x341a3166
  412d42:	inc    esp
  412d43:	push   cs
  412d44:	xchg   edi,eax
  412d45:	jp     0x412d3d
  412d47:	js     0x412d61
  412d49:	pop    fs
  412d4b:	fnstenv [eax]
  412d4d:	and    DWORD PTR [eax-0x75],eax
  412d50:	inc    edi
  412d51:	mov    dh,0xe4
  412d53:	mov    DWORD PTR [esi],ebp
  412d55:	sub    edx,ecx
  412d57:	std    
  412d58:	pop    esp
  412d59:	push   edx
  412d5a:	dec    edx
  412d5b:	jb     0x412d45
  412d5d:	popa   
  412d5e:	xor    eax,0x5f016d00
  412d63:	ror    dh,cl
  412d65:	in     eax,0x3
  412d67:	ss in  eax,0xd3
  412d6a:	sub    BYTE PTR [ecx+0x3df6dee4],dl
  412d70:	sbb    cl,BYTE PTR [edi]
  412d72:	call   0x968091b4
  412d77:	dec    eax
  412d78:	std    
  412d79:	jge    0x412de9
  412d7b:	in     al,0x84
  412d7d:	mov    ebp,0x6180749
  412d82:	adc    DWORD PTR cs:[edi-0x12],0xffffffc5
  412d87:	ds enter 0x3af0,0xdb
  412d8c:	jne    0x412dd3
  412d8e:	fdivr  st(6),st
  412d90:	mov    ebx,0x3e222251
  412d95:	jmp    0xa826:0xde1daa3e
  412d9c:	loope  0x412d4e
  412d9e:	mov    ch,0x44
  412da0:	es sti 
  412da2:	sti    
  412da3:	mov    ds:0x448502f5,eax
  412da8:	fdiv   QWORD PTR [ecx]
  412daa:	pop    eax
  412dab:	inc    ecx
  412dac:	sbb    eax,0xe6596c63
  412db1:	les    esp,FWORD PTR [esi-0x23b260c]
  412db7:	push   cs
  412db8:	pop    ebx
  412db9:	les    edi,FWORD PTR [esi]
  412dbb:	enter  0x9efb,0x88
  412dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc0:	ss adc eax,0x1b844756
  412dc6:	sub    al,0x5c
  412dc8:	jb     0x412d8b
  412dca:	out    dx,eax
  412dcb:	inc    eax
  412dcc:	addr16 es je 0x412df0
  412dd0:	dec    edx
  412dd1:	inc    edx
  412dd2:	push   ds
  412dd3:	outs   dx,BYTE PTR ds:[esi]
  412dd4:	cmp    BYTE PTR [ebp-0x40],bh
  412dd7:	clc    
  412dd8:	xchg   edi,eax
  412dd9:	mov    al,0x73
  412ddb:	jmp    0x412d77
  412ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dde:	ja     0x412e26
  412de0:	pop    ecx
  412de1:	test   al,0xcd
  412de3:	jmp    0x17f2:0x849185af
  412dea:	mov    BYTE PTR [ecx],0xc3
  412ded:	mov    ds:0xcd95caf5,al
  412df2:	pop    ss
  412df3:	out    0xdc,eax
  412df5:	xchg   ecx,eax
  412df6:	jae    0x412d81
  412df8:	rcl    DWORD PTR [edx-0x49],0xfa
  412dfc:	sbb    DWORD PTR [esi],edi
  412dfe:	clc    
  412dff:	popa   
  412e00:	jbe    0x412e12
  412e02:	xchg   edx,eax
  412e03:	in     al,dx
  412e04:	sub    ecx,DWORD PTR [edi+ebp*8]
  412e07:	inc    edi
  412e08:	fidiv  WORD PTR [eax]
  412e0a:	call   DWORD PTR [ebx]
  412e0c:	fld    TBYTE PTR [eax]
  412e0e:	cmp    BYTE PTR [eax-0x7c7ff7f3],0xe9
  412e15:	push   edi
  412e16:	adc    al,0xd2
  412e18:	jmp    0x944843e2
  412e1d:	fnsave [ecx]
  412e1f:	rcl    DWORD PTR [esi],1
  412e21:	adc    ecx,DWORD PTR ds:0x9f4e96e4
  412e27:	stos   DWORD PTR es:[edi],eax
  412e28:	idiv   BYTE PTR [ebx+0x2d000307]
  412e2e:	call   0x3616989a
  412e33:	sbb    DWORD PTR [esi+0x20f3243d],edx
  412e39:	imul   edi,DWORD PTR [esp+edi*1-0x50ded88c],0x9da2d720
  412e44:	xor    dl,bh
  412e46:	fwait
  412e47:	mov    ds:0x630c1fee,al
  412e4c:	or     DWORD PTR ds:[eax+0x16],esp
  412e50:	shl    ebp,0xdd
  412e53:	jecxz  0x412e72
  412e55:	xor    DWORD PTR [ebx-0x55b02959],ecx
  412e5b:	mov    edi,0x5320ad3e
  412e60:	je     0x412e1e
  412e62:	and    eax,0xe40ae602
  412e67:	mov    ebx,0x7c09158d
  412e6c:	inc    edx
  412e6d:	sub    eax,0xc6a419f7
  412e72:	stc    
  412e73:	sbb    BYTE PTR [eax],cl
  412e75:	adc    BYTE PTR [ebx],bh
  412e77:	sbb    eax,0x62b90328
  412e7c:	test   eax,0xc61706a7
  412e81:	jno    0x412efb
  412e83:	outs   dx,DWORD PTR ds:[esi]
  412e84:	sbb    esp,DWORD PTR [eax-0x60d67a12]
  412e8a:	fld    QWORD PTR [ecx+0x66]
  412e8d:	pusha  
  412e8e:	scas   al,BYTE PTR es:[edi]
  412e8f:	jge    0x412e44
  412e91:	sbb    bl,BYTE PTR [esi+0x7e]
  412e94:	jp     0x412eeb
  412e96:	pushf  
  412e97:	mov    edi,0x31dd26da
  412e9c:	leave  
  412e9d:	ss and al,0x1e
  412ea0:	cmp    al,ch
  412ea2:	or     al,0xcf
  412ea4:	aam    0x1b
  412ea6:	stos   DWORD PTR es:[edi],eax
  412ea7:	ret    
  412ea8:	mov    al,es:0x64b9354f
  412eae:	stos   DWORD PTR es:[edi],eax
  412eaf:	mov    bl,0x13
  412eb1:	es mov dh,0x46
  412eb4:	inc    edi
  412eb5:	push   edx
  412eb6:	std    
  412eb7:	sahf   
  412eb8:	enter  0x7f9a,0x98
  412ebc:	pop    ecx
  412ebd:	fstp   QWORD PTR [eax+0x3f]
  412ec0:	push   ds
  412ec1:	push   0xef552687
  412ec6:	or     ch,BYTE PTR [ebx-0x57fc0dc4]
  412ecc:	inc    eax
  412ecd:	add    eax,DWORD PTR [ebp-0x36822010]
  412ed3:	fs addr16 adc al,0x9c
  412ed7:	inc    edi
  412ed8:	adc    BYTE PTR ds:[edi+0x4924c51f],0x95
  412ee0:	in     eax,dx
  412ee1:	inc    edi
  412ee2:	xchg   esp,eax
  412ee3:	retf   0x20cc
  412ee6:	shr    DWORD PTR [ebp+0x2f4616a3],0x24
  412eed:	push   0xffffffd3
  412eef:	mov    dh,0x16
  412ef1:	bnd jmp 0x412f21
  412ef4:	(bad)  [ebx]
  412ef6:	mov    ds:0xe96da411,eax
  412efb:	(bad)  
  412efd:	pop    ebx
  412efe:	sub    BYTE PTR [edi+0x23afebd1],bh
  412f04:	pop    eax
  412f05:	add    BYTE PTR [edi+0x34],al
  412f08:	add    edi,DWORD PTR [ebp-0x61afdf9c]
  412f0e:	xor    ch,BYTE PTR [ebp-0x1f]
  412f11:	pop    ds
  412f12:	jmp    0xcedd3af5
  412f17:	nop
  412f18:	jp     0x412efa
  412f1a:	mov    ch,0x74
  412f1c:	mov    al,ds:0xbd5310e9
  412f21:	inc    eax
  412f22:	mov    edi,0x1928084f
  412f27:	in     eax,0x99
  412f29:	imul   edx,ecx,0xee940b5
  412f2f:	push   esi
  412f30:	mov    bh,0x97
  412f32:	xchg   bl,bl
  412f34:	mov    bl,0x2d
  412f36:	push   edi
  412f37:	jle    0x412f84
  412f39:	test   al,0xed
  412f3b:	xchg   esi,eax
  412f3c:	cmp    dh,ch
  412f3e:	and    ch,dh
  412f40:	repz dec BYTE PTR [ebp+esi*1-0xe]
  412f45:	stos   DWORD PTR es:[edi],eax
  412f46:	jl     0x412f1b
  412f48:	iret   
  412f49:	dec    edx
  412f4a:	pop    edx
  412f4b:	push   ds
  412f4c:	jnp    0x412f40
  412f4e:	into   
  412f4f:	hlt    
  412f50:	cmp    al,0x9a
  412f52:	add    eax,0xbac7bdd1
  412f57:	inc    eax
  412f58:	cmp    DWORD PTR [edi-0x36269d68],0x2f
  412f5f:	jp     0x412f36
  412f61:	mov    ah,BYTE PTR [edx+0x1f]
  412f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f65:	push   ebx
  412f66:	out    dx,al
  412f67:	scas   eax,DWORD PTR es:[edi]
  412f68:	into   
  412f69:	call   0x4e9e:0x30dc3c2
  412f70:	test   BYTE PTR [esi+0x3bac9902],0xcb
  412f77:	out    dx,al
  412f78:	aad    0x50
  412f7a:	call   0x1339bc6a
  412f7f:	cdq    
  412f80:	dec    ebx
  412f81:	sar    ch,cl
  412f83:	adc    eax,0xf539d59f
  412f88:	test   eax,0x8e376d40
  412f8d:	daa    
  412f8e:	loope  0x412ff6
  412f90:	sahf   
  412f91:	mov    al,ds:0xc46a90a2
  412f96:	jl     0x412ff9
  412f98:	cmp    al,0x84
  412f9a:	and    BYTE PTR [edi],bh
  412f9c:	leave  
  412f9d:	lods   al,BYTE PTR ds:[esi]
  412f9e:	mov    ebx,0xd5025dc4
  412fa3:	jb     0x412f71
  412fa5:	xchg   edi,eax
  412fa6:	ret    
  412fa7:	rcr    BYTE PTR [edx],0xf4
  412faa:	test   eax,0x268c22cc
  412faf:	xor    ch,bh
  412fb1:	hlt    
  412fb2:	and    BYTE PTR [eax+0x1c],0x1a
  412fb6:	js     0x412f8e
  412fb8:	jne    0x412fff
  412fba:	aam    0x39
  412fbc:	in     eax,0x27
  412fbe:	jb     0x412f9b
  412fc0:	aaa    
  412fc1:	(bad)  
  412fc3:	and    DWORD PTR [eax+0x79],edi
  412fc6:	outs   dx,BYTE PTR ds:[esi]
  412fc7:	pushf  
  412fc8:	ret    
  412fc9:	cld    
  412fca:	sub    DWORD PTR [esi+0x510e6fcb],ebp
  412fd0:	lock (bad) 
  412fd4:	nop
  412fd5:	loope  0x412f69
  412fd7:	pop    eax
  412fd8:	push   0x6e
  412fda:	inc    ebx
  412fdb:	pop    esi
  412fdc:	out    0xab,al
  412fde:	call   0xe369:0x56d234f6
  412fe5:	mov    al,ds:0x3a9a13fb
  412fea:	cli    
  412feb:	fmul   DWORD PTR [eax]
  412fed:	scas   al,BYTE PTR es:[edi]
  412fee:	cmp    BYTE PTR [ebx],bh
  412ff0:	and    DWORD PTR [esi+0x541f2b61],0xffffffc7
  412ff7:	mov    ch,0xed
  412ff9:	sbb    al,0x56
  412ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ffc:	cld    
  412ffd:	jno    0x413053
  412fff:	js     0x412fd7
  413001:	(bad)  
  413002:	or     ebx,DWORD PTR ds:0xf33ff372
  413008:	enter  0x27fc,0xb
  41300c:	movd   esp,mm7
  41300f:	or     BYTE PTR [esi+0x674a6481],cl
  413015:	mov    bh,0x11
  413017:	or     ecx,esi
  413019:	cmp    eax,0x4c95c872
  41301e:	adc    esp,DWORD PTR [eax-0x7a]
  413021:	cmp    DWORD PTR [esi+0x7f46b021],edx
  413027:	ret    0xd7ac
  41302a:	mov    BYTE PTR [edi+0x2a997d8f],ch
  413030:	stos   DWORD PTR es:[edi],eax
  413031:	mov    cl,0xd3
  413033:	and    al,0x41
  413035:	iret   
  413036:	outs   dx,DWORD PTR ds:[esi]
  413037:	pop    edx
  413038:	inc    ebp
  413039:	clc    
  41303a:	xchg   esp,eax
  41303b:	retf   
  41303c:	or     eax,0x4d79528c
  413041:	or     DWORD PTR [edx+eiz*1],edx
  413044:	add    eax,0x726a2f36
  413049:	fmulp  st(0),st
  41304b:	enter  0x19c4,0x13
  41304f:	push   ebx
  413050:	pop    edi
  413051:	in     eax,0x12
  413053:	push   edx
  413054:	dec    ecx
  413055:	imul   edx,DWORD PTR [esi+0x43],0xffffffa0
  413059:	mul    DWORD PTR [esi+0x12]
  41305c:	loope  0x41304f
  41305e:	xor    BYTE PTR [ebx-0x13],ah
  413061:	dec    ecx
  413062:	cmc    
  413063:	pusha  
  413064:	jae    0x413045
  413066:	out    dx,eax
  413067:	retf   
  413068:	enter  0xd6ad,0x0
  41306c:	repz pop eax
  41306e:	mov    al,0x67
  413070:	pop    ss
  413071:	popa   
  413072:	xchg   esp,eax
  413073:	pop    es
  413074:	in     eax,0xde
  413076:	inc    ecx
  413077:	dec    edx
  413078:	jno    0x413073
  41307a:	cmp    dh,BYTE PTR [eax]
  41307c:	(bad)  
  41307d:	stc    
  41307e:	outs   dx,DWORD PTR ds:[esi]
  41307f:	lods   al,BYTE PTR ds:[esi]
  413080:	cs (bad) 
  413083:	dec    eax
  413084:	mov    ebx,0x94db701b
  413089:	enter  0xc551,0xe4
  41308d:	clc    
  41308e:	rol    BYTE PTR [edx+0x5476b9b1],cl
  413094:	cwde   
  413095:	sbb    ah,BYTE PTR [edx+0x3b161515]
  41309b:	cld    
  41309c:	aad    0xad
  41309e:	stos   BYTE PTR es:[edi],al
  41309f:	out    dx,eax
  4130a0:	repnz add eax,0xb9c36d86
  4130a6:	mov    edx,0x18396480
  4130ab:	sbb    eax,0x392fcf41
  4130b0:	in     eax,dx
  4130b1:	jmp    0x41310a
  4130b3:	scas   al,BYTE PTR es:[edi]
  4130b4:	pop    DWORD PTR [edi+0x0]
  4130b7:	in     eax,dx
  4130b8:	jle    0x4130c8
  4130ba:	out    0xa5,al
  4130bc:	cmp    DWORD PTR [ebx+edi*4],ebx
  4130bf:	shl    DWORD PTR [edx],0x38
  4130c2:	test   eax,0xc13119a8
  4130c7:	xchg   ebp,eax
  4130c8:	fbld   TBYTE PTR [esi+ebp*2+0x164a42fe]
  4130cf:	adc    ebx,DWORD PTR [ebp+0x4b]
  4130d2:	or     eax,0x25673ae7
  4130d7:	(bad)  
  4130d8:	jl     0x413129
  4130da:	xor    BYTE PTR [ecx],0x1e
  4130dd:	adc    ah,BYTE PTR [edx]
  4130df:	mov    esp,0x192956fb
  4130e4:	xor    eax,0x4df4874b
  4130e9:	push   ecx
  4130ea:	xchg   ebp,eax
  4130eb:	cmp    eax,0xcb8254d5
  4130f0:	sbb    edx,ebp
  4130f2:	pop    esp
  4130f3:	lock arpl WORD PTR [edx],bx
  4130f6:	push   cs
  4130f7:	out    dx,al
  4130f8:	mov    ah,BYTE PTR [eax-0xc]
  4130fb:	dec    ecx
  4130fc:	sub    ebx,DWORD PTR [esi*8-0x73dc5b67]
  413103:	repz xchg edi,eax
  413105:	iret   
  413106:	fs imul eax,eax,0x2a09b1eb
  41310d:	push   edx
  41310e:	mov    eax,DWORD PTR [ebx]
  413110:	or     cl,BYTE PTR [eax-0x4724dc77]
  413116:	mov    ds:0x7b8ce964,al
  41311b:	xchg   ecx,eax
  41311c:	fcom   QWORD PTR [eax-0xd]
  41311f:	(bad)  
  413120:	rol    BYTE PTR [eax+ecx*4-0x6c],1
  413124:	fwait
  413125:	jnp    0x413145
  413127:	and    esp,0x73
  41312a:	and    bh,BYTE PTR [ecx]
  41312c:	sti    
  41312d:	xchg   esp,eax
  41312e:	xor    eax,0xcf7d13a8
  413133:	xchg   esp,eax
  413134:	test   DWORD PTR gs:[bp+0x26],eax
  413139:	sub    dl,dl
  41313b:	xchg   edx,eax
  41313c:	mov    ds:0xe721113b,al
  413141:	jbe    0x4130f9
  413143:	ins    DWORD PTR es:[edi],dx
  413144:	(bad)  
  413145:	xor    eax,0x476f74af
  41314a:	jns    0x41316c
  41314c:	repz mov eax,0x33569120
  413152:	inc    esp
  413153:	cmp    ah,BYTE PTR [edx+0x50]
  413156:	sub    al,0xde
  413158:	mov    cs,WORD PTR [esi+0x6e978e1b]
  41315e:	je     0x41312b
  413160:	sti    
  413161:	push   cs
  413162:	scas   eax,DWORD PTR es:[edi]
  413163:	xchg   ebp,eax
  413164:	(bad)  
  413165:	out    0x98,al
  413167:	lahf   
  413168:	push   es
  413169:	mov    edx,0xc892d742
  41316e:	mov    edx,0x627df9e6
  413173:	xor    al,0x77
  413175:	xor    al,BYTE PTR [edi-0x30ce926a]
  41317b:	sub    eax,0x60a7b7e5
  413180:	jmp    0x41310c
  413182:	and    ch,cl
  413184:	add    ch,BYTE PTR [edi]
  413186:	push   cs
  413187:	hlt    
  413188:	ret    
  413189:	mov    ah,0x6a
  41318b:	mov    ebx,0x53d3c6b7
  413190:	xchg   edx,esi
  413192:	inc    ecx
  413193:	inc    edx
  413194:	shr    DWORD PTR [eax+0x33],1
  413197:	or     eax,0xa0ec69fd
  41319c:	push   ds
  41319d:	pop    esp
  41319e:	push   edi
  41319f:	in     eax,0x1
  4131a1:	sub    esi,esp
  4131a3:	icebp  
  4131a4:	std    
  4131a5:	popa   
  4131a6:	push   es
  4131a7:	aad    0x68
  4131a9:	sub    ebx,edx
  4131ab:	out    dx,eax
  4131ac:	mov    al,ds:0x632a02d
  4131b1:	adc    al,0x41
  4131b3:	mov    ah,0xbb
  4131b5:	push   0x2722365c
  4131ba:	add    BYTE PTR [esi],bl
  4131bc:	add    al,0xba
  4131be:	push   ds
  4131bf:	cmp    ah,bl
  4131c1:	cdq    
  4131c2:	push   edx
  4131c3:	jne    0x4131c6
  4131c5:	loopne 0x41321f
  4131c7:	stc    
  4131c8:	xchg   ebp,eax
  4131c9:	sbb    DWORD PTR [ecx-0x9814495],ebp
  4131cf:	xor    eax,0xd3ce00d2
  4131d4:	push   ss
  4131d5:	sub    ch,BYTE PTR [eax]
  4131d7:	bound  ecx,QWORD PTR [ecx+0x3be7450a]
  4131dd:	scas   al,BYTE PTR es:[edi]
  4131de:	push   edi
  4131df:	xchg   esi,eax
  4131e0:	pop    ss
  4131e1:	ret    
  4131e2:	int3   
  4131e3:	js     0x41320f
  4131e5:	fist   DWORD PTR [eax+0x7eb50baf]
  4131eb:	push   0x89d66838
  4131f0:	outs   dx,DWORD PTR ds:[esi]
  4131f1:	imul   ecx,esp,0x5892db06
  4131f7:	mov    dh,0xba
  4131f9:	xchg   ecx,eax
  4131fa:	in     eax,0xb5
  4131fc:	pusha  
  4131fd:	xor    al,0xb7
  4131ff:	fisttp QWORD PTR [eax]
  413201:	and    eax,0x75e45367
  413206:	cdq    
  413207:	lahf   
  413208:	pop    edx
  413209:	scas   eax,DWORD PTR es:[edi]
  41320a:	cmp    al,0xb
  41320c:	daa    
  41320d:	mov    ebp,0xe57290f8
  413212:	mov    ah,0x1
  413214:	push   ss
  413215:	pop    edx
  413216:	pop    es
  413217:	pop    ds
  413218:	or     bh,BYTE PTR [edi+0x1c]
  41321b:	mov    ds:0x940d5a41,eax
  413220:	daa    
  413221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413222:	xor    BYTE PTR ss:[edx],0x37
  413226:	sbb    eax,0xf8bd0d9e
  41322b:	dec    esi
  41322c:	mov    ebp,0x89622a83
  413231:	and    ecx,DWORD PTR [esi+0x72]
  413234:	lea    esi,[ecx+0x4b]
  413237:	(bad)  
  413238:	fsubr  QWORD PTR [eax-0x5b]
  41323b:	lods   eax,DWORD PTR ds:[esi]
  41323c:	leave  
  41323d:	ret    
  41323e:	iret   
  41323f:	dec    ebx
  413240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413241:	popa   
  413242:	jge    0x41326f
  413244:	int    0x6f
  413246:	sti    
  413247:	sub    eax,edx
  413249:	mov    al,ds:0xb79691bf
  41324e:	(bad)  
  413250:	pushf  
  413251:	jbe    0x413264
  413253:	inc    esp
  413254:	fisubr WORD PTR [edi]
  413256:	es retf 0x3979
  41325a:	(bad)  
  41325c:	call   0xb23f6ee9
  413261:	cmp    BYTE PTR [edi-0x5c],0x6f
  413265:	push   es
  413266:	pusha  
  413267:	ret    
  413268:	dec    esp
  413269:	mov    BYTE PTR [edx+0x64],cl
  41326c:	(bad)  
  41326d:	jecxz  0x413236
  41326f:	inc    ebx
  413270:	addr16 sub al,0x26
  413273:	xchg   edi,eax
  413274:	hlt    
  413275:	lea    ebp,[edi+ecx*8]
  413278:	arpl   WORD PTR [eax-0x60eb3ecc],si
  41327e:	(bad)  
  41327f:	loop   0x41329b
  413281:	sub    esi,edx
  413283:	push   0xffffff88
  413285:	call   0x820be99b
  41328a:	addr16 inc esi
  41328c:	inc    edx
  41328d:	add    bl,ch
  41328f:	sahf   
  413290:	push   0x31
  413292:	jmp    0x9a4d9431
  413297:	dec    ebp
  413298:	sbb    esi,esp
  41329a:	pop    esi
  41329b:	rol    BYTE PTR [edx-0x71],0x7
  41329f:	xchg   DWORD PTR [ecx+0x4],eax
  4132a2:	imul   esi,DWORD PTR [ecx],0xffffffc6
  4132a5:	jmp    0x9a144eea
  4132aa:	mov    bl,0x57
  4132ac:	ror    BYTE PTR [edx-0x3fb0a5bd],0x7a
  4132b3:	cmp    eax,DWORD PTR [edx-0x11]
  4132b6:	shl    BYTE PTR [ecx+0x32],0x3
  4132ba:	dec    eax
  4132bb:	add    ecx,DWORD PTR [ebp+eiz*8-0x70]
  4132bf:	jp     0x41328c
  4132c1:	pop    ecx
  4132c2:	dec    ebx
  4132c3:	(bad)  
  4132c4:	push   ebp
  4132c5:	or     eax,DWORD PTR [esi]
  4132c7:	push   eax
  4132c8:	mov    ah,BYTE PTR [ebx+0x5b2e11cf]
  4132ce:	sbb    al,0xd1
  4132d0:	or     al,0x86
  4132d2:	bound  ebx,QWORD PTR [eax+edi*4+0x55676820]
  4132d9:	out    0xf7,eax
  4132db:	imul   ebx,DWORD PTR [eax-0x727b8880],0x72
  4132e2:	push   ebp
  4132e3:	sti    
  4132e4:	mov    esp,0x108571c4
  4132e9:	dec    edx
  4132ea:	outs   dx,BYTE PTR ds:[esi]
  4132eb:	mov    edi,0xdfdb446f
  4132f0:	push   cs
  4132f1:	fs jb  0x41336d
  4132f4:	jb     0x413305
  4132f6:	in     eax,dx
  4132f7:	shr    DWORD PTR [ebx-0x1e4751e6],1
  4132fd:	stos   BYTE PTR es:[edi],al
  4132fe:	int    0x46
  413300:	mov    cl,0x3f
  413302:	fabs   
  413304:	mov    ds:0xcbe7f48a,eax
  413309:	shl    BYTE PTR [ecx+edi*4],cl
  41330c:	sar    DWORD PTR [ebx],cl
  41330e:	fs pop ss
  413310:	sub    BYTE PTR ds:0xb04ed7aa,0xeb
  413317:	mov    DWORD PTR [edi+0x4df9ce0e],ebp
  41331d:	ret    
  41331e:	adc    BYTE PTR [edi+0x20575289],ah
  413324:	sti    
  413325:	jbe    0x4132da
  413327:	sub    al,dl
  413329:	sub    eax,0x8c837e78
  41332e:	retf   
  41332f:	loopne 0x413326
  413331:	sub    al,0x49
  413333:	adc    al,0x46
  413335:	sti    
  413336:	imul   esp,DWORD PTR [edi+0x7d],0xffffff96
  41333a:	lds    esi,FWORD PTR [eax+0x5a2eb3a8]
  413340:	pop    ebx
  413341:	push   cs
  413342:	shr    DWORD PTR [edi-0x654160],0x41
  413349:	and    al,0xc
  41334b:	hlt    
  41334c:	mov    edx,0xc42069be
  413351:	cmp    al,0x14
  413353:	in     eax,0x3f
  413355:	sar    ah,0x7
  413358:	(bad)  
  413359:	outs   dx,BYTE PTR ds:[esi]
  41335a:	pop    eax
  41335b:	bound  edx,QWORD PTR [ecx+ebp*4]
  41335e:	mov    eax,ds:0x782bbfdb
  413363:	and    al,0x65
  413365:	or     BYTE PTR [esi-0x5],ah
  413368:	out    dx,eax
  413369:	rcr    bl,1
  41336b:	mov    fs,WORD PTR [eax-0x6f]
  41336e:	in     eax,0x1b
  413370:	dec    ecx
  413371:	sti    
  413372:	lahf   
  413373:	mov    WORD PTR [edx-0x6b13db17],gs
  413379:	adc    al,BYTE PTR [edi]
  41337b:	sub    esp,ebp
  41337d:	add    eax,0x4282bf71
  413382:	mov    bl,0x5f
  413384:	sbb    DWORD PTR [eax+0xa],ecx
  413387:	xlat   BYTE PTR ds:[ebx]
  413388:	add    dh,BYTE PTR [ecx]
  41338a:	call   0xa58bfd40
  41338f:	inc    edi
  413390:	dec    edi
  413391:	cmp    BYTE PTR [ecx+0x42fdc299],al
  413397:	mov    WORD PTR [ebx],?
  413399:	add    DWORD PTR [ebx-0x50],esi
  41339c:	std    
  41339d:	and    ebx,eax
  41339f:	xchg   ebx,eax
  4133a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133a1:	pop    edi
  4133a2:	mov    al,ds:0x2747adb4
  4133a7:	pop    ss
  4133a8:	xchg   edi,eax
  4133a9:	sub    BYTE PTR [edx],dl
  4133ab:	rol    DWORD PTR [edx+ebp*2+0x23],1
  4133af:	and    ebx,edi
  4133b1:	mov    ch,0x86
  4133b3:	push   ecx
  4133b4:	cmp    DWORD PTR [edi+0x77f66357],ebp
  4133ba:	mov    bh,0xeb
  4133bc:	pop    ecx
  4133bd:	push   esi
  4133be:	aad    0x28
  4133c0:	jecxz  0x413395
  4133c2:	pop    esp
  4133c3:	push   esp
  4133c4:	inc    eax
  4133c5:	mov    bl,BYTE PTR ds:0x63925f7
  4133cb:	test   al,0x40
  4133cd:	iret   
  4133ce:	xor    al,0xf
  4133d0:	dec    eax
  4133d1:	in     eax,dx
  4133d2:	inc    eax
  4133d3:	push   DWORD PTR [ecx+0x5d]
  4133d6:	ins    BYTE PTR es:[edi],dx
  4133d7:	cdq    
  4133d8:	mov    ah,0x62
  4133da:	daa    
  4133db:	lock push ebp
  4133dd:	sbb    BYTE PTR [edi+0x59],dh
  4133e0:	push   esp
  4133e1:	out    dx,eax
  4133e2:	mov    edx,DWORD PTR [ecx+0x8]
  4133e5:	push   0xad213ee6
  4133ea:	cmp    eax,0xcf94169d
  4133ef:	mov    eax,0xfc05521c
  4133f4:	out    0xfe,al
  4133f6:	fdivp  st(3),st
  4133f8:	xchg   esi,eax
  4133f9:	inc    ebp
  4133fa:	aas    
  4133fb:	out    dx,eax
  4133fc:	(bad)  
  4133fd:	scas   eax,DWORD PTR es:[edi]
  4133fe:	push   edi
  4133ff:	ja     0x4133df
  413401:	add    al,0x31
  413403:	scas   al,BYTE PTR es:[edi]
  413404:	xchg   ebp,eax
  413405:	sub    DWORD PTR [edi+0x2e],edi
  413408:	arpl   WORD PTR [edi-0x4d],ax
  41340b:	rcr    BYTE PTR [edi+0x67fac51f],cl
  413411:	stc    
  413412:	mov    eax,ds:0x8c63a828
  413417:	mov    WORD PTR [ebx+0x2f],ds
  41341a:	sbb    ebp,DWORD PTR [edx+eax*2]
  41341d:	jg     0x41343d
  41341f:	out    0xd7,eax
  413421:	lods   al,BYTE PTR ds:[esi]
  413422:	xchg   esp,eax
  413423:	repnz ds aaa 
  413426:	pop    ss
  413427:	daa    
  413428:	(bad)  
  413429:	stos   BYTE PTR es:[edi],al
  41342a:	xchg   edi,eax
  41342b:	adc    bh,BYTE PTR [edx-0x42]
  41342e:	dec    esp
  41342f:	cmp    BYTE PTR [edx+eiz*2],bh
  413432:	in     eax,0xa3
  413434:	dec    eax
  413435:	add    ah,BYTE PTR [eax+ebx*8-0x943be01]
  41343c:	push   esi
  41343d:	(bad)  
  41343e:	cmp    ah,BYTE PTR [edx]
  413440:	jb     0x413407
  413442:	mov    ebp,esp
  413444:	aas    
  413445:	jns    0x4134b7
  413447:	add    BYTE PTR [esi+0x31],0xac
  41344b:	sar    DWORD PTR [edi],1
  41344d:	adc    edi,DWORD PTR [bp+0x57]
  413451:	stos   DWORD PTR es:[edi],eax
  413452:	int    0x47
  413454:	aam    0x3a
  413456:	jo     0x4134c3
  413458:	(bad)  
  413459:	inc    esi
  41345a:	cdq    
  41345b:	dec    esi
  41345c:	xchg   ebx,eax
  41345d:	jne    0x413486
  41345f:	(bad)  
  413461:	ret    
  413462:	and    DWORD PTR [ebp+eiz*8+0x21],0xffffff95
  413467:	ror    DWORD PTR [ecx+0x2d],1
  41346a:	xchg   ecx,eax
  41346b:	repnz not BYTE PTR [ecx+0x58f8d816]
  413472:	loop   0x41345b
  413474:	xor    eax,DWORD PTR [esi-0x58]
  413477:	xor    DWORD PTR [esi],ebx
  413479:	popa   
  41347a:	mov    dh,bh
  41347c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41347d:	rcr    BYTE PTR [ecx],1
  41347f:	imul   edi,edi,0x8a7a761b
  413485:	mov    esi,0x729f7565
  41348a:	inc    ecx
  41348b:	mov    cl,0x27
  41348d:	sbb    bh,BYTE PTR [edi]
  41348f:	mov    BYTE PTR [ebx-0x50],al
  413492:	sbb    BYTE PTR [esi-0x44],bh
  413495:	sbb    al,0x88
  413497:	cmp    al,bl
  413499:	sub    eax,0x4dbef3a9
  41349e:	mov    dl,0x16
  4134a0:	adc    BYTE PTR [eax+eax*4+0x76],dl
  4134a4:	add    al,0xba
  4134a6:	add    edi,DWORD PTR [edi+0x3e3ccadd]
  4134ac:	inc    ecx
  4134ad:	xchg   esp,eax
  4134ae:	xchg   ebx,eax
  4134af:	sti    
  4134b0:	inc    ebp
  4134b1:	pop    ds
  4134b2:	push   ds
  4134b3:	fild   WORD PTR ds:0x95961c30
  4134b9:	push   es
  4134ba:	sbb    BYTE PTR [eax+edx*1+0x33419bc],dl
  4134c1:	or     eax,0xade9c5df
  4134c6:	pop    eax
  4134c7:	test   BYTE PTR [edi-0x487d9962],0xd9
  4134ce:	fstp   QWORD PTR [edx]
  4134d0:	jb     0x4134d7
  4134d2:	sbb    edi,DWORD PTR ds:0xf8a1f824
  4134d8:	retf   0xe52b
  4134db:	mov    esp,0xa756a37
  4134e0:	or     ebp,DWORD PTR [edx+ecx*4]
  4134e3:	xor    eax,0xabea4d9c
  4134e8:	ret    
  4134e9:	dec    ebx
  4134ea:	loop   0x413556
  4134ec:	push   esi
  4134ed:	scas   eax,DWORD PTR es:[edi]
  4134ee:	xchg   esi,eax
  4134ef:	je     0x41353c
  4134f1:	xchg   edx,eax
  4134f2:	xchg   edi,ebp
  4134f4:	(bad)  
  4134f5:	cmp    bl,BYTE PTR [ebp+0x38]
  4134f8:	sbb    BYTE PTR [edi+0xd],ch
  4134fb:	xor    eax,0xc7c69aaa
  413500:	stc    
  413501:	mov    ch,0x34
  413503:	sti    
  413504:	jae    0x4134ac
  413506:	(bad)  ds:0x71ee4361
  41350c:	mov    eax,0x109b34df
  413511:	or     BYTE PTR [eax-0x66],dl
  413514:	xchg   BYTE PTR [edi+0x76568870],cl
  41351a:	fs pop ss
  41351c:	push   0x6ad8d636
  413521:	mov    bh,0x52
  413523:	(bad)  
  413524:	cmp    al,0x93
  413526:	xor    DWORD PTR [edx+0x51],edi
  413529:	(bad)  
  41352a:	xchg   esi,eax
  41352b:	aas    
  41352c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41352d:	or     BYTE PTR [ecx],bl
  41352f:	pushf  
  413530:	dec    ebp
  413531:	stos   BYTE PTR es:[edi],al
  413532:	int    0x16
  413534:	jae    0x413540
  413536:	jnp    0x413591
  413538:	push   ds
  413539:	out    0x19,eax
  41353b:	test   eax,0x48a8de2d
  413540:	shr    BYTE PTR [ebp+0x62],cl
  413543:	mov    ds:0xb5d077bc,eax
  413548:	iret   
  413549:	cwde   
  41354a:	test   esi,0x2410b095
  413550:	dec    esp
  413551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413552:	xor    BYTE PTR [ebp+0x37c1ae5e],cl
  413558:	xchg   DWORD PTR [eax+0x29],eax
  41355b:	loope  0x413597
  41355d:	int3   
  41355e:	push   esi
  41355f:	sar    BYTE PTR [edx+0x35],1
  413562:	mov    eax,es:0x5762545a
  413568:	sbb    ebp,edi
  41356a:	inc    eax
  41356b:	jge    0x4135ca
  41356d:	stos   DWORD PTR es:[edi],eax
  41356e:	sbb    DWORD PTR [ebx-0x203e7f53],0x57a58491
  413578:	pop    ebx
  413579:	sub    al,0x12
  41357b:	jb     0x41353b
  41357d:	int3   
  41357e:	jbe    0x413501
  413580:	pushf  
  413581:	and    al,0x7c
  413583:	or     edx,edx
  413585:	inc    esp
  413586:	jecxz  0x413524
  413588:	jo     0x4135e4
  41358a:	pop    esp
  41358b:	sbb    BYTE PTR [edi],bl
  41358d:	xchg   BYTE PTR [ecx],cl
  41358f:	mov    ds:0xed7f4ab8,eax
  413594:	dec    edi
  413595:	push   ebx
  413596:	fcomip st,st(7)
  413598:	popa   
  413599:	mov    ah,0x71
  41359b:	mov    ebx,0x80b9084b
  4135a0:	loop   0x4135d3
  4135a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135a3:	(bad)  
  4135a4:	jg     0x413599
  4135a6:	or     esi,DWORD PTR [edi+0xb6bec50]
  4135ac:	add    BYTE PTR cs:[edx+0x7500f228],0x6c
  4135b4:	ja     0x4135bb
  4135b6:	mov    bh,0x72
  4135b8:	mov    dl,0xc9
  4135ba:	xlat   BYTE PTR gs:[ebx]
  4135bc:	adc    ebp,DWORD PTR [ebx-0x339df5be]
  4135c2:	jp     0x413635
  4135c4:	je     0x4135cb
  4135c6:	mov    esi,0x12ac3942
  4135cb:	jge    0x4135aa
  4135cd:	pop    edi
  4135ce:	pop    ebp
  4135cf:	jbe    0x413595
  4135d1:	mov    dh,0xe5
  4135d3:	xchg   edx,eax
  4135d4:	ret    0xd84f
  4135d7:	push   0xffffffa9
  4135d9:	cmp    al,0x74
  4135db:	stos   BYTE PTR es:[edi],al
  4135dc:	jle    0x4135b7
  4135de:	and    eax,0xc52117d9
  4135e3:	iret   
  4135e4:	or     BYTE PTR [edx+0x37],0x91
  4135e8:	push   eax
  4135e9:	imul   eax,edx,0x30
  4135ec:	jle    0x4135dc
  4135ee:	rol    DWORD PTR [eax+0x56],0x56
  4135f2:	sub    BYTE PTR [edx-0x72533440],al
  4135f8:	(bad)  
  4135f9:	mov    al,0xa7
  4135fb:	loop   0x41358b
  4135fd:	inc    edx
  4135fe:	push   ebx
  4135ff:	sbb    eax,DWORD PTR [edx+ebx*2-0xabbcdea]
  413606:	repnz sub ah,0xc6
  41360a:	and    cl,BYTE PTR [ebx+esi*8-0x2d]
  41360e:	mov    dh,0x92
  413610:	pop    edi
  413611:	xor    DWORD PTR [eax-0x3f3b66fc],0x423c6962
  41361b:	mov    WORD PTR [edx+0x64d84ac5],cs
  413621:	js     0x413605
  413623:	das    
  413624:	ret    
  413625:	and    al,0x25
  413627:	jmp    0x4135fb
  413629:	fdivp  st(0),st
  41362b:	mov    cl,0xa1
  41362d:	stos   BYTE PTR es:[edi],al
  41362e:	gs aas 
  413630:	out    0x94,al
  413632:	dec    eax
  413633:	jg     0x413651
  413635:	ja     0x4136a1
  413637:	nop
  413638:	call   0xb789:0xe7d4d0da
  41363f:	add    BYTE PTR [ebx+ebp*1-0x692fad2a],dl
  413646:	hlt    
  413647:	ja     0x41368e
  413649:	enter  0xf238,0x72
  41364d:	sub    al,0x54
  41364f:	fwait
  413650:	jmp    0x41367a
  413652:	and    ch,BYTE PTR [ecx]
  413654:	inc    esp
  413655:	pop    edi
  413656:	and    eax,0x571b4d05
  41365b:	lock jmp 0x48c7:0xb7051dd7
  413663:	sbb    BYTE PTR [edx],0xd2
  413666:	mov    ch,0xc8
  413668:	pop    edi
  413669:	sbb    eax,0xb2ee892
  41366e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41366f:	(bad)  
  413670:	sbb    al,0x4a
  413672:	ficomp DWORD PTR [esi]
  413674:	inc    esi
  413675:	out    dx,al
  413676:	push   ss
  413677:	fnsave [ebx+eax*8]
  41367a:	test   ecx,eax
  41367c:	aad    0xa8
  41367e:	call   0x3ffc4841
  413683:	int    0x3e
  413685:	arpl   WORD PTR ss:[edi],di
  413688:	adc    ecx,esp
  41368a:	pop    eax
  41368b:	cmp    al,0x10
  41368e:	cli    
  41368f:	rol    BYTE PTR [esi+0x66],cl
  413692:	pop    ebp
  413693:	sub    edi,eax
  413695:	shl    cl,0xb
  413698:	call   0xff6260ed
  41369d:	dec    ebx
  41369e:	test   BYTE PTR [ebx],dh
  4136a0:	jge    0x41365e
  4136a2:	aas    
  4136a3:	fnstenv [eax+0x6f19c2b9]
  4136a9:	fild   DWORD PTR [eax-0x7a1208d]
  4136af:	js     0x41371d
  4136b1:	pop    ss
  4136b2:	mov    ds,WORD PTR [edx+0x3382e80d]
  4136b8:	leave  
  4136b9:	rcl    edx,1
  4136bb:	ror    DWORD PTR [edi],0xa2
  4136be:	xor    al,0x7f
  4136c0:	inc    esp
  4136c1:	clc    
  4136c2:	cli    
  4136c3:	dec    edx
  4136c4:	lods   eax,DWORD PTR ds:[esi]
  4136c5:	call   0xd7e3ae11
  4136ca:	or     BYTE PTR [esi+ecx*4],bh
  4136cd:	jl     0x4136de
  4136cf:	pusha  
  4136d0:	mov    ah,0xf1
  4136d2:	addr16 xor ch,0xee
  4136d6:	stos   DWORD PTR es:[edi],eax
  4136d7:	pop    esp
  4136d8:	pop    ds
  4136d9:	mov    bl,0x57
  4136db:	mov    es,WORD PTR [edx]
  4136dd:	stos   BYTE PTR es:[edi],al
  4136de:	icebp  
  4136df:	out    0xc4,eax
  4136e1:	sbb    eax,0x27e9e796
  4136e6:	cmp    bl,BYTE PTR [edx+0x456f22bf]
  4136ec:	push   0x323a0c0
  4136f1:	xchg   esi,eax
  4136f2:	lea    ecx,[edx-0x6efa9e27]
  4136f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136f9:	mov    esi,0xd1788fd7
  4136fe:	aam    0x80
  413700:	clc    
  413701:	sbb    eax,0x8b6ac913
  413706:	pop    edx
  413707:	shr    DWORD PTR [ebp-0x21b0fcd6],cl
  41370d:	es inc esp
  41370f:	xor    DWORD PTR [ebx+0x130fb163],esi
  413715:	ja     0x413723
  413717:	jge    0x4136e7
  413719:	rcl    BYTE PTR [eax-0x6d],1
  41371c:	adc    al,0x13
  41371e:	shl    BYTE PTR [ebp+edx*1+0x30e5f5a9],1
  413725:	dec    ebp
  413726:	sub    al,0x13
  413728:	mov    ebx,0x76826667
  41372d:	sub    eax,0xa8242751
  413732:	sbb    esp,DWORD PTR [eax+0x2d]
  413735:	(bad)  [ebx+ebx*1+0x17]
  413739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41373a:	inc    esi
  41373b:	(bad)  
  41373c:	xrelease mov DWORD PTR [ebx-0x51],edx
  413740:	jge    0x41378c
  413742:	aaa    
  413743:	jae    0x4137b7
  413745:	(bad)  
  413746:	leave  
  413747:	jne    0x4136e7
  413749:	add    al,0x2a
  41374b:	mov    edi,DWORD PTR [esi]
  41374d:	popa   
  41374e:	jae    0x413775
  413750:	addr16 iret 
  413752:	cmp    DWORD PTR [edx+0x39],ecx
  413755:	dec    eax
  413756:	dec    edi
  413757:	inc    esp
  413758:	jecxz  0x41372b
  41375a:	push   ss
  41375b:	retf   0xf5f1
  41375e:	dec    eax
  41375f:	test   al,0x13
  413761:	or     ah,al
  413763:	jnp    0x413709
  413765:	xchg   BYTE PTR [edx+0x35fa16de],dl
  41376b:	add    BYTE PTR [edx+0x69],dl
  41376e:	xor    esp,esi
  413770:	mov    esp,0xda740474
  413775:	pop    ss
  413776:	sub    eax,0xa64b7ee3
  41377b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41377c:	jbe    0x4137c3
  41377e:	retf   0xe1da
  413781:	cmc    
  413782:	ficom  DWORD PTR [edi+0x2c]
  413785:	fld    TBYTE PTR [ebx]
  413787:	in     eax,0x1
  413789:	jne    0x413741
  41378b:	ret    0x73b2
  41378e:	adc    ax,0xccd6
  413792:	lods   al,BYTE PTR ds:[esi]
  413793:	jbe    0x413744
  413795:	mov    esp,edx
  413797:	pop    ebp
  413798:	sub    BYTE PTR ss:[ebp-0x495ba6dd],al
  41379f:	dec    esi
  4137a0:	jb     0x41380f
  4137a2:	pusha  
  4137a3:	and    BYTE PTR [esp+ebp*8],0xf4
  4137a7:	imul   eax,esp,0xea4c10d2
  4137ad:	ret    
  4137ae:	bound  edi,QWORD PTR [eax]
  4137b0:	dec    edi
  4137b1:	in     eax,dx
  4137b2:	pusha  
  4137b3:	out    0xd0,eax
  4137b5:	and    eax,DWORD PTR [ebp+0x7d]
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	js     0x4137bf
  4137bb:	icebp  
  4137bc:	stc    
  4137bd:	rcl    BYTE PTR [ebp-0x1f2d7b6f],cl
  4137c3:	loope  0x413746
  4137c5:	pop    ebx
  4137c6:	mov    esp,0x9ad4fc8a
  4137cb:	push   esp
  4137cc:	inc    edx
  4137cd:	adc    esp,DWORD PTR [ecx+0x5b]
  4137d0:	mov    ebx,DWORD PTR [edi-0x58d6a59]
  4137d6:	jmp    0x2199c527
  4137db:	les    ebx,FWORD PTR [ecx+0x51]
  4137de:	cld    
  4137df:	sub    BYTE PTR [ebp-0x42c7e7c4],bh
  4137e5:	mov    ss,WORD PTR [ebp+0x3f154a47]
  4137eb:	sbb    al,0x76
  4137ed:	ret    0xdd22
  4137f0:	(bad)  [ecx-0x10]
  4137f4:	mov    bl,0xbc
  4137f6:	push   esi
  4137f7:	stos   DWORD PTR es:[edi],eax
  4137f8:	mov    dh,0x1e
  4137fa:	out    dx,al
  4137fb:	loop   0x4137fd
  4137fd:	sbb    DWORD PTR [ecx],0x59
  413800:	cmp    BYTE PTR [ebp+0x37ad2255],bl
  413806:	jmp    0x6a80:0x1b38c136
  41380d:	inc    ecx
  41380e:	call   0x2a94:0x4d82b29a
  413815:	ret    0x553c
  413818:	arpl   bp,bx
  41381a:	dec    edi
  41381b:	scas   al,BYTE PTR es:[edi]
  41381c:	inc    edx
  41381d:	ds pushf 
  41381f:	not    DWORD PTR [eax-0x14]
  413822:	push   ds
  413823:	push   cs
  413824:	pop    ebx
  413825:	fcomp  QWORD PTR [edx+esi*2]
  413828:	ffreep st(3)
  41382a:	ins    DWORD PTR es:[edi],dx
  41382b:	pop    ecx
  41382c:	in     eax,0x3c
  41382e:	mov    ds:0x81311c99,eax
  413833:	jne    0x413847
  413835:	fcmovnu st,st(0)
  413837:	add    eax,0x56f23ea2
  41383c:	xlat   BYTE PTR ds:[ebx]
  41383d:	scas   al,BYTE PTR es:[edi]
  41383e:	adc    ah,BYTE PTR ds:0x190babb8
  413844:	xor    esp,DWORD PTR [esi]
  413846:	and    edx,edx
  413848:	imul   edi,DWORD PTR [ebx],0xffffffe4
  41384b:	arpl   WORD PTR [edi+0x52],di
  41384e:	push   edi
  41384f:	nop
  413850:	xlat   BYTE PTR ds:[ebx]
  413851:	inc    eax
  413852:	(bad)  
  413853:	mov    esp,DWORD PTR [eax+ebx*1-0x42]
  413857:	inc    esi
  413858:	push   cs
  413859:	cmc    
  41385a:	shl    DWORD PTR [edi-0x5f],0xbb
  41385e:	sbb    al,0xec
  413860:	ja     0x413810
  413862:	in     eax,0xbc
  413864:	inc    ebx
  413865:	imul   esi,ecx,0x47517bf0
  41386b:	mov    fs,WORD PTR [ecx+0x433b924d]
  413871:	dec    ecx
  413872:	cdq    
  413873:	hlt    
  413874:	fld    DWORD PTR gs:[ecx-0x76]
  413878:	add    DWORD PTR [ebp-0x18],edi
  41387b:	in     al,dx
  41387c:	sub    DWORD PTR [edi+ebp*1-0x43],0x1e
  413881:	lods   eax,DWORD PTR ds:[esi]
  413882:	xor    eax,0x10d39056
  413887:	sbb    ebx,edi
  413889:	mov    edi,0xe742725
  41388e:	pop    esp
  41388f:	sahf   
  413890:	int    0xdd
  413892:	jne    0x413904
  413894:	popf   
  413895:	cs lock push cs
  413898:	sbb    esp,edx
  41389a:	push   0x39
  41389c:	fstp   st(7)
  41389e:	lock push edx
  4138a0:	adc    BYTE PTR [edi+0x12],ch
  4138a3:	mov    dl,0x44
  4138a5:	repz mov esp,0x57ee24a9
  4138ab:	mov    ch,0x2f
  4138ad:	adc    al,0x10
  4138af:	hlt    
  4138b0:	(bad)  
  4138b1:	xlat   BYTE PTR ds:[ebx]
  4138b2:	mov    ebx,0x1d303ccf
  4138b7:	cmp    BYTE PTR [esi],al
  4138b9:	push   esi
  4138ba:	xor    ebp,edi
  4138bc:	fild   WORD PTR [edi-0x80]
  4138bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138c0:	repz cmp BYTE PTR [ecx+0x40],bh
  4138c4:	ja     0x4138f7
  4138c6:	cmc    
  4138c7:	sbb    edi,ebx
  4138c9:	inc    ebp
  4138ca:	xchg   esi,eax
  4138cb:	mov    dl,BYTE PTR [ecx+edx*1+0x1ea83434]
  4138d2:	out    dx,eax
  4138d3:	mov    ch,bl
  4138d5:	dec    esp
  4138d6:	bound  ecx,QWORD PTR [edx+eiz*2]
  4138d9:	lahf   
  4138da:	fs retf 
  4138dc:	jb     0x4138e4
  4138de:	push   ebp
  4138df:	jae    0x413880
  4138e1:	push   0xffffffe6
  4138e3:	fwait
  4138e4:	push   edi
  4138e5:	and    DWORD PTR [edi-0x41],0x7d
  4138e9:	icebp  
  4138ea:	and    eax,0x62d43fa1
  4138ef:	dec    edi
  4138f0:	jne    0x413889
  4138f2:	mov    esi,0x818d86f3
  4138f7:	fisttp WORD PTR [ecx+0x35]
  4138fa:	mov    dh,BYTE PTR [esi-0x4a]
  4138fd:	push   ss
  4138fe:	or     DWORD PTR [ebp-0x62],0xa9c3e916
  413905:	cmp    eax,0xa97e338d
  41390a:	jns    0x413913
  41390c:	cmp    cl,al
  41390e:	jg     0x4138f7
  413910:	mov    ch,0x8a
  413912:	mov    DWORD PTR [edx],ecx
  413914:	and    eax,0xd57bc97b
  413919:	in     al,0x21
  41391b:	xchg   BYTE PTR [edi],dl
  41391d:	xor    eax,edi
  41391f:	inc    ebp
  413920:	mov    eax,gs:0xa5998a1f
  413926:	add    DWORD PTR [ecx+eiz*8],ecx
  413929:	xor    BYTE PTR [edi],0x27
  41392c:	inc    eax
  41392d:	mov    ch,0xdb
  41392f:	fidivr WORD PTR [ebp-0x4cad5d27]
  413935:	mov    ah,0x31
  413937:	popf   
  413938:	jecxz  0x413934
  41393a:	jp     0x413932
  41393c:	mov    bh,0xa1
  41393e:	fcmove st,st(4)
  413940:	cdq    
  413941:	jbe    0x413998
  413943:	cmp    al,0xe3
  413945:	sbb    al,ch
  413947:	mov    edi,0x4312bb81
  41394c:	mov    ah,0x14
  41394e:	jns    0x413997
  413950:	leave  
  413951:	in     eax,dx
  413952:	or     eax,0xfb049420
  413957:	jne    0x41394a
  413959:	mov    ds:0x27506fa3,eax
  41395e:	jae    0x41392f
  413960:	es enter 0xea7d,0x2e
  413965:	mov    ch,0xf2
  413967:	pusha  
  413968:	shr    DWORD PTR [ebp-0x7f752366],cl
  41396e:	cmp    eax,0xc52a783d
  413973:	sub    BYTE PTR [ebp-0x7e],ch
  413976:	or     cl,dh
  413978:	dec    ecx
  413979:	stos   BYTE PTR es:[edi],al
  41397a:	call   0x1171:0x2b3e570d
  413981:	cmp    eax,0xb3c3b08
  413986:	call   0x96a4:0x58d8dc55
  41398d:	das    
  41398e:	push   ebp
  41398f:	push   ds
  413990:	push   ss
  413991:	ds pop esp
  413993:	lods   eax,DWORD PTR ds:[esi]
  413994:	rcr    DWORD PTR [edi+0xe],cl
  413997:	out    dx,eax
  413998:	aaa    
  413999:	call   0x5221:0x69f5d681
  4139a0:	in     eax,dx
  4139a1:	sbb    eax,0x98063a88
  4139a6:	pop    ds
  4139a7:	sub    dl,BYTE PTR [ecx-0x13ad35de]
  4139ad:	fld    DWORD PTR [esi-0x47bc885]
  4139b3:	pop    ds
  4139b4:	aaa    
  4139b5:	sub    ebx,DWORD PTR [ebx+0x61]
  4139b8:	je     0x413a31
  4139ba:	xchg   ebx,eax
  4139bb:	and    DWORD PTR [esi+0x27],ebp
  4139be:	cwde   
  4139bf:	loop   0x4139bb
  4139c1:	inc    eax
  4139c2:	push   esp
  4139c3:	mov    bh,0x69
  4139c5:	imul   edx,ebp,0xffffffa5
  4139c8:	in     al,0xd5
  4139ca:	xchg   BYTE PTR [edi],bh
  4139cc:	jns    0x41395b
  4139ce:	pop    ecx
  4139cf:	jmp    0xbdcb:0xf8806086
  4139d6:	add    eax,0x458337b0
  4139db:	adc    eax,0x2de8d9b4
  4139e0:	dec    esp
  4139e1:	mov    ds:0xf7e77bf6,eax
  4139e6:	pushf  
  4139e7:	repnz mov ecx,0x8001cb4
  4139ed:	dec    edi
  4139ee:	pop    ebx
  4139ef:	add    bh,ch
  4139f1:	(bad)  
  4139f3:	in     eax,0xe0
  4139f5:	not    DWORD PTR [edi+eax*1-0x29]
  4139f9:	je     0x413983
  4139fb:	add    bl,bl
  4139fd:	sti    
  4139fe:	inc    edi
  4139ff:	sub    ecx,DWORD PTR [ecx]
  413a01:	or     BYTE PTR [ecx],bl
  413a03:	adc    BYTE PTR [ecx],bl
  413a05:	pop    edi
  413a06:	mov    eax,ds:0xb621ab70
  413a0b:	jp     0x4139b4
  413a0d:	adc    BYTE PTR [ebp+0x6a],cl
  413a10:	aas    
  413a11:	pop    ebp
  413a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a13:	aas    
  413a14:	daa    
  413a15:	sbb    eax,0xacd1a7e5
  413a1a:	add    eax,0x751bbe5f
  413a1f:	in     al,dx
  413a20:	loope  0x4139ef
  413a22:	cmp    al,0xe2
  413a24:	sbb    al,0x56
  413a26:	sbb    esp,DWORD PTR [ebp+0x19bbc9a8]
  413a2c:	push   ds
  413a2d:	mov    ebp,0x84397ab3
  413a32:	sub    al,0x6
  413a34:	inc    edx
  413a35:	jle    0x413a3f
  413a37:	outs   dx,BYTE PTR ds:[esi]
  413a38:	lahf   
  413a39:	pop    edx
  413a3a:	pop    es
  413a3b:	aas    
  413a3c:	and    BYTE PTR [edi-0x62],0x8f
  413a40:	add    al,0xc
  413a42:	sub    esi,eax
  413a44:	rcl    BYTE PTR ds:0xf05ab9b8,cl
  413a4a:	shl    BYTE PTR ds:0x653ab92d,cl
  413a50:	mov    ds:0x79f4ef14,eax
  413a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a56:	pop    ebp
  413a57:	orps   xmm3,xmm4
  413a5a:	sub    eax,0xd603a5f1
  413a5f:	jp     0x413a8a
  413a61:	(bad)  
  413a62:	jmp    0x413a87
  413a64:	cdq    
  413a65:	nop
  413a66:	push   ebp
  413a67:	cmp    ah,ch
  413a69:	xor    eax,0x4c4ccd8
  413a6e:	pop    es
  413a6f:	sub    ah,BYTE PTR [edx-0x56]
  413a72:	cmp    BYTE PTR [edi+0x46],ch
  413a75:	sbb    eax,0x19366bd4
  413a7a:	std    
  413a7b:	dec    ecx
  413a7c:	cwde   
  413a7d:	sbb    ecx,DWORD PTR [eax+0x4a72d3e]
  413a83:	xor    esi,DWORD PTR [esi-0x1521e0a6]
  413a89:	jge    0x413a81
  413a8b:	mov    ebx,esp
  413a8d:	jae    0x413aa8
  413a8f:	and    BYTE PTR [edi+0x54cdc496],dl
  413a95:	data16 test al,0xb3
  413a98:	popf   
  413a99:	hlt    
  413a9a:	xchg   BYTE PTR ds:0xf79a068d,bl
  413aa0:	sub    BYTE PTR [esi-0x7a],0x8d
  413aa4:	xor    ecx,edx
  413aa6:	xchg   ebx,eax
  413aa7:	cmp    al,0x68
  413aa9:	in     al,dx
  413aaa:	loope  0x413a30
  413aac:	mov    edx,0x842c47b2
  413ab1:	mov    bh,BYTE PTR [edx+0x4e]
  413ab4:	jae    0x413a94
  413ab6:	out    dx,eax
  413ab7:	int    0x15
  413ab9:	push   ds
  413aba:	mov    bl,0x37
  413abc:	xchg   edi,eax
  413abd:	jo     0x71ce7bb4
  413ac3:	and    bl,al
  413ac5:	mov    cl,0xde
  413ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ac8:	imul   esi,DWORD PTR [esp+ecx*1+0x58],0x71
  413acd:	bound  esi,QWORD PTR ds:0x292ed327
  413ad3:	dec    DWORD PTR [edi-0x11]
  413ad6:	xor    DWORD PTR [edx+0x4bcab299],ecx
  413adc:	std    
  413add:	add    eax,0xdcfede5d
  413ae2:	popa   
  413ae3:	pop    edx
  413ae4:	ds inc ebp
  413ae6:	ror    ah,cl
  413ae8:	call   0xd0c809a2
  413aed:	inc    edx
  413aee:	repz das 
  413af0:	ror    DWORD PTR [esi],0x11
  413af3:	rol    BYTE PTR [edi],1
  413af5:	je     0x413ae6
  413af7:	lods   al,BYTE PTR ds:[esi]
  413af8:	adc    al,0x2
  413afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413afb:	mov    edx,0x5bdd56cb
  413b00:	add    cl,BYTE PTR [edi+0x362e31b]
  413b06:	xor    DWORD PTR [ecx+0x1a3d5cd3],eax
  413b0c:	ins    BYTE PTR es:[edi],dx
  413b0d:	dec    BYTE PTR [esi+0x3a36cd3]
  413b13:	push   ebp
  413b14:	inc    ebx
  413b15:	jo     0x413b66
  413b17:	mov    al,0x1b
  413b19:	iret   
  413b1a:	mov    eax,0x3245fffd
  413b1f:	rcr    DWORD PTR [eax],0xa8
  413b22:	add    esp,DWORD PTR [esi]
  413b24:	lea    eax,[ebp-0x5]
  413b27:	mov    al,0x88
  413b29:	lods   al,BYTE PTR ds:[esi]
  413b2a:	dec    esi
  413b2b:	mov    ebp,0xf7cd7536
  413b30:	jmp    0x413ab5
  413b32:	out    dx,eax
  413b33:	ss inc ecx
  413b35:	push   ebx
  413b36:	nop
  413b37:	fcmovu st,st(5)
  413b39:	int3   
  413b3a:	int    0x18
  413b3c:	push   esp
  413b3d:	arpl   WORD PTR [edi+0x2f],bx
  413b40:	hlt    
  413b41:	dec    ch
  413b43:	mov    eax,ds:0x3effa9ba
  413b48:	scas   al,BYTE PTR es:[edi]
  413b49:	gs cmp eax,0x59520557
  413b4f:	jae    0x413adf
  413b51:	mul    BYTE PTR ds:0xab082cde
  413b57:	jge    0x413b04
  413b59:	and    ch,BYTE PTR [esp+eiz*2+0x15]
  413b5d:	sbb    bl,BYTE PTR [ebx+0x726d4072]
  413b63:	mov    DWORD PTR [ecx],esi
  413b65:	inc    edx
  413b66:	jl     0x413b6e
  413b68:	xlat   BYTE PTR ds:[ebx]
  413b69:	ds push edx
  413b6b:	pop    ss
  413b6c:	retf   0x454b
  413b6f:	sbb    BYTE PTR [eax],ah
  413b71:	ret    0x515d
  413b74:	adc    eax,0x509337b0
  413b79:	lahf   
  413b7a:	push   es
  413b7b:	pop    ecx
  413b7c:	mov    edx,0x8a9eb0e4
  413b81:	fs mov bl,0x91
  413b84:	fucomip st,st(6)
  413b86:	shl    DWORD PTR [ebp+0x2f],cl
  413b89:	cwde   
  413b8a:	mov    edi,fs
  413b8c:	mov    ebx,0x5521505e
  413b91:	sbb    al,0x16
  413b93:	xor    eax,DWORD PTR [ecx-0x561ba1da]
  413b99:	(bad)  
  413b9a:	dec    edi
  413b9b:	add    ecx,DWORD PTR [esi+edi*1-0x54]
  413b9f:	add    esp,DWORD PTR [ebx]
  413ba1:	add    ebx,edx
  413ba3:	loopne 0x413c05
  413ba5:	(bad)  
  413ba7:	mov    ah,bl
  413ba9:	adc    cl,BYTE PTR [ecx-0x7fbe1c91]
  413baf:	mov    eax,0xed47fa73
  413bb4:	sbb    dh,BYTE PTR [eax+0x595245e]
  413bba:	inc    esp
  413bbb:	pushw  ss
  413bbd:	and    DWORD PTR [edi],ebx
  413bbf:	rcr    BYTE PTR [ecx],cl
  413bc1:	ss xor al,0x6f
  413bc4:	mov    al,ss:0x43f097e
  413bca:	lea    ebx,[ecx]
  413bcc:	dec    ebx
  413bcd:	cs mov eax,0xca782edc
  413bd3:	mov    ds:0xef805612,eax
  413bd8:	and    DWORD PTR [edi+edx*8+0x77],edi
  413bdc:	xchg   ch,cl
  413bde:	out    0xeb,eax
  413be0:	push   eax
  413be1:	xchg   esi,eax
  413be2:	jg     0x413bc3
  413be4:	xchg   esp,eax
  413be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be6:	or     ax,0xc5
  413bea:	jge    0x413c08
  413bec:	push   ebp
  413bed:	mov    edx,0xabbfc414
  413bf2:	addr16 sbb eax,0x6a8ff007
  413bf8:	leave  
  413bf9:	mov    edx,0x2aa24769
  413bfe:	mov    cl,0x32
  413c00:	jno    0x413bb2
  413c02:	fnstcw WORD PTR [esi+0x56]
  413c05:	add    ch,BYTE PTR [ebp-0x74c973ad]
  413c0b:	mov    bh,0xb8
  413c0d:	shr    ebx,cl
  413c0f:	dec    esp
  413c10:	imul   ebp,esp,0xffffffb3
  413c13:	xchg   edx,eax
  413c14:	sar    DWORD PTR [ecx],1
  413c16:	stos   BYTE PTR es:[edi],al
  413c17:	xchg   ebp,eax
  413c18:	pop    es
  413c19:	or     esp,ebp
  413c1b:	xchg   BYTE PTR [ecx-0x61d32ecb],al
  413c21:	mov    bl,0x7c
  413c23:	imul   esp,DWORD PTR [ebp-0x1ffcefc0],0x51
  413c2a:	push   eax
  413c2b:	inc    edi
  413c2c:	rcl    BYTE PTR [ebp-0x3b9a6e3d],0x4e
  413c33:	pop    edx
  413c34:	rol    DWORD PTR [esp+edi*8],1
  413c37:	call   0xdf0e187a
  413c3c:	out    0x68,eax
  413c3e:	rcl    BYTE PTR [ebx-0x2d],1
  413c41:	jecxz  0x413bef
  413c43:	mov    BYTE PTR [edx],al
  413c45:	dec    esp
  413c46:	in     eax,0xb7
  413c48:	mov    cl,0x9d
  413c4a:	pop    edi
  413c4b:	ds ss (bad) 
  413c4e:	lea    esi,[edx+0x53bf737a]
  413c54:	inc    edi
  413c55:	xchg   DWORD PTR [edx],esp
  413c57:	mov    esi,DWORD PTR [esi]
  413c59:	or     BYTE PTR [ecx-0x680f4417],0x64
  413c60:	jne    0x413c33
  413c62:	loope  0x413c3e
  413c64:	std    
  413c65:	retf   
  413c66:	jg     0x413cd8
  413c68:	mov    esp,DWORD PTR [ebx+ebx*2]
  413c6b:	jne    0x413c21
  413c6d:	sbb    al,0x4f
  413c6f:	jl     0x413ca3
  413c71:	lahf   
  413c72:	mov    ah,0xd6
  413c74:	dec    ecx
  413c75:	inc    edx
  413c76:	mov    cl,dl
  413c78:	xchg   al,ch
  413c7a:	(bad)  
  413c7b:	pop    ss
  413c7c:	test   eax,0x321f9945
  413c81:	dec    ebp
  413c82:	adc    ebx,edi
  413c84:	cmp    ch,BYTE PTR [ebp-0x7c336507]
  413c8a:	dec    ebx
  413c8b:	in     eax,0xda
  413c8d:	bound  ebx,QWORD PTR [ecx+0x4c]
  413c90:	pushf  
  413c91:	pop    ebp
  413c92:	jecxz  0x413c5f
  413c94:	retf   0x5fe6
  413c97:	xor    bl,BYTE PTR [ecx+edi*1+0x79]
  413c9b:	adc    bh,BYTE PTR [ebp+0x66079b8d]
  413ca1:	out    0xee,al
  413ca3:	ins    BYTE PTR es:[edi],dx
  413ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ca5:	shr    BYTE PTR [ecx],1
  413ca7:	in     eax,0xd4
  413ca9:	mov    bh,0xac
  413cab:	push   ss
  413cac:	ds push edi
  413cae:	leave  
  413caf:	ins    DWORD PTR es:[edi],dx
  413cb0:	xor    eax,ecx
  413cb2:	fld    TBYTE PTR [ecx-0x7e]
  413cb5:	and    DWORD PTR [ecx-0x327c7158],edx
  413cbb:	inc    eax
  413cbc:	(bad)  
  413cbd:	cmp    ebx,DWORD PTR [eax]
  413cbf:	retf   
  413cc0:	dec    ebp
  413cc1:	xor    ebp,DWORD PTR [eax+0x19]
  413cc4:	gs mov eax,0xaf45fa81
  413cca:	repz adc ch,cl
  413ccd:	jns    0x413d2c
  413ccf:	inc    edi
  413cd0:	or     al,0xbb
  413cd2:	adc    eax,0xa0aad7d7
  413cd7:	mov    dh,0x1d
  413cd9:	or     al,0x9e
  413cdb:	push   eax
  413cdc:	mov    esp,0xed0266ab
  413ce1:	cs adc eax,0x884f6e30
  413ce7:	xchg   ecx,eax
  413ce8:	popa   
  413ce9:	push   edx
  413cea:	push   ecx
  413ceb:	inc    edx
  413cec:	das    
  413ced:	pushf  
  413cee:	or     DWORD PTR [esi+0x197cb4c0],edx
  413cf4:	sub    ebp,DWORD PTR [edx]
  413cf6:	stos   BYTE PTR es:[edi],al
  413cf7:	pushf  
  413cf8:	or     al,0x97
  413cfa:	inc    esp
  413cfb:	add    esp,DWORD PTR [ecx]
  413cfd:	sub    ecx,DWORD PTR [esi+0x4436e493]
  413d03:	dec    ebp
  413d04:	fiadd  WORD PTR ds:0x1dd25918
  413d0b:	ss je  0x413c9d
  413d0e:	xor    DWORD PTR [ecx+0x5658c2ab],esp
  413d14:	mov    eax,ds:0xb4fdef71
  413d19:	(bad)
  413d1d:	ret    0x97a
  413d20:	in     eax,dx
  413d21:	daa    
  413d22:	(bad)
  413d25:	stc    
  413d26:	sti    
  413d27:	mov    ecx,0xc2b17308
  413d2c:	mov    ebp,0xbbeedbef
  413d31:	fnstsw WORD PTR [esi]
  413d33:	retf   0x9bd4
  413d36:	or     al,0x79
  413d38:	add    BYTE PTR [edx+0x18],0xb4
  413d3c:	pop    es
  413d3d:	dec    edi
  413d3e:	dec    edi
  413d3f:	xor    DWORD PTR [ebx+ebx*8],0xfab94196
  413d46:	mov    DWORD PTR [esi+0x3d826e4],eax
  413d4c:	sbb    DWORD PTR [esi+0x572f87dd],esp
  413d52:	jnp    0x413d3e
  413d54:	push   0xffffffd3
  413d56:	cld    
  413d57:	bound  eax,QWORD PTR [eax]
  413d59:	test   BYTE PTR [ebx+0x70],ch
  413d5c:	pusha  
  413d5d:	add    esp,DWORD PTR [ebx+0x40]
  413d60:	cmp    edx,ecx
  413d62:	bound  ebp,QWORD PTR [edi]
  413d64:	mov    fs,WORD PTR [eax-0x30]
  413d67:	jle    0x413d3f
  413d69:	aas    
  413d6a:	adc    al,0x2c
  413d6c:	jecxz  0x413dbe
  413d6e:	fadd   QWORD PTR ds:0x3d90dc7a
  413d74:	das    
  413d75:	div    eax
  413d77:	adc    DWORD PTR [eax-0x1992782f],esi
  413d7d:	pop    es
  413d7e:	adc    cl,bl
  413d80:	pop    esp
  413d81:	outs   dx,BYTE PTR ds:[esi]
  413d82:	add    BYTE PTR [eax-0x2c],0x7b
  413d86:	aas    
  413d87:	mov    eax,ds:0xf54daf11
  413d8c:	mov    al,ds:0xa22d511c
  413d91:	dec    esp
  413d92:	loope  0x413dd0
  413d94:	dec    esp
  413d95:	mov    al,ds:0xb0249087
  413d9a:	mov    ebp,0x27b503e0
  413d9f:	das    
  413da0:	ret    
  413da1:	arpl   ax,sp
  413da3:	iret   
  413da4:	data16 sbb BYTE PTR [esi-0x23],ch
  413da8:	mov    bh,0x15
  413daa:	push   0x74
  413dac:	call   0x38da7699
  413db1:	cmp    eax,0xcdf352ee
  413db6:	dec    edx
  413db7:	shl    BYTE PTR [eax],0x1
  413dba:	cld    
  413dbb:	push   es
  413dbc:	fwait
  413dbd:	test   BYTE PTR [edx+edi*4],0x5b
  413dc1:	mov    dh,0xd0
  413dc3:	arpl   cx,si
  413dc5:	dec    eax
  413dc6:	push   ss
  413dc7:	mov    ecx,0x42befda1
  413dcc:	and    bl,BYTE PTR [edx]
  413dce:	lods   al,BYTE PTR ds:[esi]
  413dcf:	aaa    
  413dd0:	les    edi,FWORD PTR [esi]
  413dd2:	inc    ecx
  413dd3:	sti    
  413dd4:	ret    0x3127
  413dd7:	lea    edi,[edx]
  413dd9:	push   ecx
  413dda:	mov    bl,0x1e
  413ddc:	jle    0x413dc3
  413dde:	jns    0x413d9c
  413de0:	cdq    
  413de1:	shr    DWORD PTR [eax],cl
  413de3:	mov    dh,0x57
  413de5:	daa    
  413de6:	mov    cl,0x5a
  413de8:	xchg   edx,eax
  413de9:	out    0x6a,al
  413deb:	iret   
  413dec:	sub    al,0x4e
  413dee:	loopne 0x413e63
  413df0:	lahf   
  413df1:	nop
  413df2:	mov    edx,0xd6cbdda9
  413df7:	mov    dl,0xe5
  413df9:	dec    bx
  413dfb:	dec    esi
  413dfc:	sub    DWORD PTR [edx+eax*8+0x7b],0x9321e04c
  413e04:	and    esp,DWORD PTR [edi+edi*8]
  413e07:	and    bh,dl
  413e09:	push   ebp
  413e0a:	push   cs
  413e0b:	add    eax,0xac48ff1
  413e10:	inc    ebp
  413e11:	mov    esp,0x37be4949
  413e16:	scas   al,BYTE PTR es:[edi]
  413e17:	ins    BYTE PTR es:[edi],dx
  413e18:	inc    edi
  413e19:	add    BYTE PTR [esi],cl
  413e1b:	xchg   edx,eax
  413e1c:	rcl    dl,0x8e
  413e1f:	mov    DWORD PTR [eax],ecx
  413e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e22:	pop    ebp
  413e23:	bound  edx,QWORD PTR [ebp+edi*2+0x2b]
  413e27:	jbe    0x413dd9
  413e29:	jno    0x413e75
  413e2b:	dec    esi
  413e2c:	jne    0x413e36
  413e2e:	inc    eax
  413e2f:	ficomp DWORD PTR [esi]
  413e31:	stc    
  413e32:	pusha  
  413e33:	ret    
  413e34:	sbb    eax,0x5644ca13
  413e39:	and    al,0x60
  413e3b:	enter  0x57b6,0x32
  413e3f:	sbb    DWORD PTR [edi],0xffffffd1
  413e42:	add    eax,DWORD PTR [eax]
  413e44:	mov    BYTE PTR ds:0xc568f110,bh
  413e4a:	es sbb dl,dl
  413e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e4e:	(bad)  
  413e4f:	mov    esp,0xe3838dc5
  413e54:	mov    ebp,0x2f5215d3
  413e59:	or     edx,DWORD PTR [ebp-0x596742fb]
  413e5f:	dec    BYTE PTR [edi-0xcadea57]
  413e65:	mov    ebp,0x50218b84
  413e6a:	xchg   esp,eax
  413e6b:	inc    ecx
  413e6c:	or     ebx,DWORD PTR [edx+0x136aedc6]
  413e72:	clc    
  413e73:	popa   
  413e74:	adc    al,0x1
  413e76:	inc    esp
  413e77:	je     0x413dfc
  413e79:	addr16 adc ch,dl
  413e7c:	in     al,0x44
  413e7e:	mul    BYTE PTR [esi+eax*1-0x556c2908]
  413e85:	lods   al,BYTE PTR ds:[esi]
  413e86:	pop    edi
  413e87:	dec    esi
  413e88:	dec    edi
  413e89:	dec    edi
  413e8a:	stos   BYTE PTR es:[edi],al
  413e8b:	xor    BYTE PTR [edi-0x76bd9b2e],ch
  413e91:	loope  0x413eec
  413e93:	out    dx,al
  413e94:	inc    ecx
  413e95:	jmp    0x265f:0xdfc92c7e
  413e9c:	push   edi
  413e9d:	mov    WORD PTR [edi],gs
  413e9f:	jg     0x413e81
  413ea1:	mov    cl,0x2e
  413ea3:	fisub  WORD PTR ds:0x8f2e4368
  413ea9:	jecxz  0x413eaf
  413eab:	sub    BYTE PTR [eax],dl
  413ead:	loopne 0x413ee8
  413eaf:	xchg   DWORD PTR [esi+eax*8],esp
  413eb2:	push   0x64
  413eb4:	stos   BYTE PTR es:[edi],al
  413eb5:	std    
  413eb6:	sbb    eax,0xc1f0a49f
  413ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ebc:	jge    0x413ed6
  413ebe:	jmp    0x7702e93c
  413ec3:	fwait
  413ec4:	sbb    DWORD PTR [edi-0x63981994],ebp
  413eca:	std    
  413ecb:	mov    esp,0x289a742f
  413ed0:	mov    DWORD PTR [ecx-0x42f7f8ea],eax
  413ed6:	jno    0x413f37
  413ed8:	lock mov edx,0xd46a8a77
  413ede:	mov    al,ds:0xa59abf32
  413ee3:	cmp    eax,0xd093597d
  413ee8:	mul    BYTE PTR [esi+0x52fe5a39]
  413eee:	push   edi
  413eef:	adc    eax,0x1ab8969b
  413ef4:	std    
  413ef5:	mov    esp,0x65b604c
  413efa:	fs and edi,edi
  413efd:	jge    0x413eef
  413eff:	in     eax,dx
  413f00:	idiv   BYTE PTR [esi+eiz*1]
  413f03:	dec    edi
  413f04:	inc    esp
  413f05:	mov    ds:0x11a1a886,al
  413f0a:	out    0x99,eax
  413f0c:	xchg   esi,eax
  413f0d:	mov    bl,0xe6
  413f0f:	pop    esi
  413f10:	sbb    edi,DWORD PTR [edi+ebx*4+0x4e14c936]
  413f17:	add    dl,cl
  413f19:	mov    ?,WORD PTR [eax+0x21]
  413f1c:	mov    bh,0x74
  413f1e:	inc    ebx
  413f1f:	int3   
  413f20:	adc    eax,0x5f8a2740
  413f25:	je     0x413f3d
  413f27:	xchg   edx,eax
  413f28:	pop    eax
  413f29:	push   eax
  413f2a:	iret   
  413f2b:	push   edi
  413f2c:	shl    DWORD PTR [esi],cl
  413f2e:	iret   
  413f2f:	mov    ecx,0xc35f751d
  413f34:	test   al,0x41
  413f36:	push   es
  413f37:	shl    DWORD PTR [edx],0xd2
  413f3a:	sbb    edx,DWORD PTR [ecx+0x57a904f5]
  413f40:	sub    al,0xd3
  413f42:	loop   0x413edd
  413f44:	inc    ecx
  413f45:	mov    bh,0x9d
  413f47:	and    ebx,esi
  413f49:	dec    edi
  413f4a:	cld    
  413f4b:	cmp    al,0x74
  413f4d:	imul   edi,DWORD PTR [ebp+0x16087114],0xffffff99
  413f54:	aas    
  413f55:	dec    ecx
  413f56:	hlt    
  413f57:	sbb    DWORD PTR [eax+edi*2+0x2a7f8f9f],edi
  413f5e:	dec    edx
  413f5f:	add    DWORD PTR [edi],ebx
  413f61:	mov    ch,0x3
  413f63:	(bad)  
  413f65:	mov    al,ds:0xfe708022
  413f6a:	jnp    0x413f7c
  413f6c:	push   edi
  413f6d:	js     0x413fd6
  413f6f:	and    edx,DWORD PTR [ebp-0xe]
  413f72:	pop    ebx
  413f73:	mov    cl,0xc5
  413f75:	(bad)  
  413f76:	das    
  413f77:	adc    ah,0x4d
  413f7a:	pushf  
  413f7b:	imul   ecx,DWORD PTR [edi-0x40],0x18
  413f7f:	sbb    DWORD PTR ds:0x19db7a2,edi
  413f85:	cli    
  413f86:	in     al,dx
  413f87:	mov    dl,0xc5
  413f89:	adc    ah,BYTE PTR [esi-0x1da0e77c]
  413f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f90:	arpl   WORD PTR [edx-0x4e],bx
  413f93:	imul   edx
  413f95:	out    0xa5,eax
  413f97:	fst    st(1)
  413f99:	rol    BYTE PTR [ebx],cl
  413f9b:	aam    0x41
  413f9d:	ficomp WORD PTR [ebp+0x59]
  413fa0:	add    BYTE PTR [edi-0x50],ch
  413fa3:	inc    edx
  413fa4:	clc    
  413fa5:	sub    eax,0x6cc2db6c
  413faa:	hlt    
  413fab:	adc    BYTE PTR [ebx+eiz*8+0x2a120a27],bl
  413fb2:	(bad)  
  413fb3:	mov    cl,0xeb
  413fb5:	(bad)  
  413fb7:	addr16 and al,0x0
  413fba:	jmp    0xf859:0x1f21d31
  413fc1:	retf   0xe136
  413fc4:	ja     0x413f62
  413fc6:	mov    ecx,0x1122d9a4
  413fcb:	(bad)  
  413fcc:	fsubr  DWORD PTR [esi+0x1c541a57]
  413fd2:	pop    ss
  413fd3:	push   edi
  413fd4:	push   edi
  413fd5:	adc    ebx,edi
  413fd7:	ror    DWORD PTR [ecx+0x45b8f3f4],1
  413fdd:	fs cld 
  413fdf:	(bad)  
  413fe0:	mov    dl,0x88
  413fe2:	iret   
  413fe3:	xor    DWORD PTR [ebp+0x21b86f8e],eax
  413fe9:	(bad)  
  413fea:	xor    al,0xbc
  413fec:	loop   0x41400f
  413fee:	xor    BYTE PTR [ebx-0x45],al
  413ff1:	loope  0x414041
  413ff3:	stc    
  413ff4:	pop    es
  413ff5:	scas   al,BYTE PTR es:[edi]
  413ff6:	dec    ecx
  413ff7:	sbb    BYTE PTR [esi-0x32],al
  413ffa:	fnstenv [esi-0x1e68f9f6]
  414000:	mov    ah,cl
  414002:	frstor [edx+0x3226081b]
  414008:	ja     0x413fde
  41400a:	inc    eax
  41400b:	stos   DWORD PTR es:[edi],eax
  41400c:	fstp   QWORD PTR [edi-0x4f4d08f5]
  414012:	adc    dh,BYTE PTR [edi-0x5eb9d213]
  414018:	xchg   ebx,eax
  414019:	ins    DWORD PTR es:[edi],dx
  41401a:	cmp    ch,BYTE PTR [ecx+esi*8]
  41401d:	inc    ecx
  41401e:	(bad)  
  41401f:	jae    0x414051
  414021:	mov    ch,0x99
  414023:	cdq    
  414024:	and    eax,eax
  414026:	sbb    BYTE PTR ds:0x8ad4b63a,bl
  41402c:	pop    edx
  41402d:	xor    eax,0x1606fb87
  414032:	cli    
  414033:	stc    
  414034:	enter  0x8f9b,0xe2
  414038:	je     0x41406f
  41403a:	div    BYTE PTR [ecx-0x5b67f156]
  414040:	fnstenv [esi-0x1d31aac9]
  414046:	push   ds
  414047:	dec    eax
  414048:	jne    0x414023
  41404a:	test   dh,dl
  41404c:	fnsave [ebx-0x40]
  41404f:	pop    edx
  414050:	fstp   DWORD PTR [esi+0x547b935d]
  414056:	dec    ebp
  414057:	mov    bh,0x1b
  414059:	jecxz  0x414080
  41405b:	jecxz  0x4140d1
  41405d:	mov    DWORD PTR [edi-0x3a0b5c8d],ebx
  414063:	or     cl,0x13
  414066:	pushaw 
  414068:	sbb    eax,0xea2af0c2
  41406d:	shl    DWORD PTR [eax],1
  41406f:	xchg   edx,eax
  414070:	sub    al,0x27
  414072:	popa   
  414073:	in     al,dx
  414074:	in     eax,0x1d
  414076:	lods   eax,DWORD PTR ds:[esi]
  414077:	std    
  414078:	cmp    BYTE PTR [ebp+ecx*4+0x50],0xaf
  41407d:	sub    eax,0x33af9364
  414082:	jnp    0x41408c
  414084:	mov    al,ds:0xbe152fc7
  414089:	dec    esp
  41408a:	aas    
  41408b:	sbb    eax,0x2920936a
  414090:	pop    ebp
  414091:	(bad)  
  414092:	adc    eax,0x26c662ae
  414097:	lds    edi,FWORD PTR [esi+0x384de750]
  41409d:	pop    eax
  41409e:	or     DWORD PTR [eiz*1-0x59d3d451],edx
  4140a5:	sti    
  4140a6:	push   edx
  4140a7:	in     eax,dx
  4140a8:	in     eax,dx
  4140a9:	js     0x414110
  4140ab:	mov    edx,0xac302c6b
  4140b0:	enter  0xa8fd,0xdc
  4140b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140b5:	sub    BYTE PTR [edx+edi*8-0x4e1cb0d6],0xf
  4140bd:	ja     0x414054
  4140bf:	inc    esi
  4140c0:	add    eax,0x9012be60
  4140c5:	mov    ecx,0xd49fc83e
  4140ca:	dec    eax
  4140cb:	or     DWORD PTR [eax],ebx
  4140cd:	jecxz  0x4140cd
  4140cf:	retf   
  4140d0:	xchg   ecx,eax
  4140d1:	icebp  
  4140d2:	xor    eax,0xf0d55796
  4140d7:	cmp    BYTE PTR [edi],ch
  4140d9:	and    DWORD PTR [esp+eiz*2-0x15],esi
  4140dd:	sbb    al,0xf
  4140df:	sub    eax,esi
  4140e1:	add    eax,0x2fb56371
  4140e6:	ror    BYTE PTR [ecx],0xd9
  4140e9:	enter  0x4f64,0x17
  4140ed:	sbb    DWORD PTR [edi-0x5718a9a9],edi
  4140f3:	iret   
  4140f4:	cmc    
  4140f5:	fiadd  WORD PTR [edx+0x3e]
  4140f8:	mov    ebp,0x30bc0edd
  4140fd:	test   esp,ecx
  4140ff:	pop    edi
  414100:	sub    eax,0x38516847
  414105:	call   0xb081:0x4f441247
  41410c:	cmpps  xmm7,xmm1,0x8e
  414110:	leave  
  414111:	mov    DWORD PTR [esp+edi*4-0x12],esi
  414115:	jl     0x4140c0
  414117:	pop    ebp
  414118:	sbb    BYTE PTR [ecx+edx*8],0x72
  41411c:	xchg   DWORD PTR [edi+ebp*1+0x38],ebp
  414120:	mov    esi,0xb9d402db
  414125:	and    eax,0x52b3ca84
  41412a:	and    dh,BYTE PTR [ebp-0xc]
  41412d:	pop    eax
  41412e:	sub    al,0xe1
  414130:	pop    es
  414131:	iret   
  414132:	ss (bad) 
  414134:	pop    edx
  414135:	inc    ebx
  414136:	imul   esp,DWORD PTR [esi+0x69808bdf],0x1d
  41413d:	fcmovne st,st(1)
  41413f:	xchg   esi,eax
  414140:	xor    eax,0x77b55eb4
  414145:	nop    esp
  414148:	sti    
  414149:	mov    cs,WORD PTR [ecx-0x39d9e6bc]
  41414f:	pop    ds
  414150:	out    0xab,al
  414152:	sub    bh,BYTE PTR [edx-0x265780fd]
  414158:	jmp    0xf054aa21
  41415d:	and    al,0x36
  41415f:	popa   
  414160:	test   al,0x34
  414162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414163:	rcl    bh,0x43
  414166:	mov    bl,0x76
  414168:	and    cl,BYTE PTR [ecx+eax*8]
  41416b:	xchg   esp,eax
  41416c:	icebp  
  41416d:	mov    ds:0x4327e64d,eax
  414172:	inc    ebx
  414173:	jp     0x4141a9
  414175:	into   
  414176:	mov    bl,0xa9
  414178:	or     ecx,esi
  41417a:	xor    eax,0xc49f4a5
  41417f:	jl     0x4141be
  414181:	cmp    eax,0x60e5e1ef
  414186:	into   
  414187:	in     al,0x8f
  414189:	dec    edi
  41418a:	pop    esi
  41418b:	adc    ah,BYTE PTR ds:0x5a047c7d
  414191:	or     ch,BYTE PTR [ebx-0x4fcf64bd]
  414197:	push   ebx
  414198:	mov    ebp,0xa9035586
  41419d:	shr    BYTE PTR [ebp+0x3f],1
  4141a0:	xor    esp,DWORD PTR [edx+0x76]
  4141a3:	in     eax,dx
  4141a4:	fdiv   QWORD PTR [ecx-0x4e57ee33]
  4141aa:	in     eax,dx
  4141ab:	retf   0x75cc
  4141ae:	or     eax,0xffa0e6a2
  4141b3:	daa    
  4141b4:	cmp    eax,0x5869f164
  4141b9:	mov    esp,0x921d059b
  4141be:	lods   al,BYTE PTR ds:[esi]
  4141bf:	mov    edx,0x63fa54c3
  4141c4:	in     al,0x2b
  4141c6:	fdivr  DWORD PTR [edi]
  4141c8:	ins    DWORD PTR es:[edi],dx
  4141c9:	jae    0x4141c1
  4141cb:	call   0xd2b59a50
  4141d0:	imul   ebx,DWORD PTR [edi+eax*2-0x51ef0a7],0x410abd02
  4141db:	push   edi
  4141dc:	es pop edi
  4141de:	sahf   
  4141df:	fcom   DWORD PTR [ebp+0x3d]
  4141e2:	fstp   TBYTE PTR [edx+0x455634f5]
  4141e8:	mov    dh,0xcc
  4141ea:	test   WORD PTR [ebx+0x13],di
  4141ee:	bound  esi,QWORD PTR [eax+0x33]
  4141f1:	inc    ebx
  4141f2:	enter  0xde54,0x5a
  4141f6:	jge    0x41420e
  4141f8:	imul   ebx,DWORD PTR [ebp-0x5d],0x370e37ff
  4141ff:	jmp    0x4141f3
  414201:	rol    BYTE PTR [ecx],cl
  414203:	out    dx,al
  414204:	push   ebx
  414205:	sub    esi,0xffffffbd
  414208:	inc    edi
  414209:	mov    DWORD PTR [ecx+eiz*4-0x671a7578],esp
  414210:	or     eax,0x981f38b8
  414215:	adc    ebx,ebp
  414217:	push   esi
  414218:	sub    cl,al
  41421a:	(bad)
  41421d:	adc    eax,esp
  41421f:	jle    0x414273
  414221:	mov    BYTE PTR [edx-0x2f],al
  414224:	pop    eax
  414225:	xchg   ebx,eax
  414226:	aad    0x34
  414228:	(bad)  
  41422a:	push   ss
  41422b:	loope  0x4141ea
  41422d:	bound  edi,QWORD PTR [edi-0x4c]
  414230:	push   0xfffffff2
  414232:	repz sti 
  414234:	jp     0x41420c
  414236:	xor    DWORD PTR [edx-0x5f],ebp
  414239:	inc    ecx
  41423a:	mov    cl,0xdf
  41423c:	retf   
  41423d:	fldcw  WORD PTR [ebp+edi*1+0x7299edbf]
  414244:	jo     0x41428a
  414246:	(bad)  
  414247:	jmp    0x17ab:0x756ea026
  41424e:	cmp    esi,DWORD PTR [esi]
  414250:	push   eax
  414251:	xchg   ebx,eax
  414252:	out    0x36,al
  414254:	sar    DWORD PTR [ebx],cl
  414256:	ss ret 
  414258:	dec    ebx
  414259:	push   0x7b
  41425b:	jnp    0x414205
  41425d:	or     al,bh
  41425f:	fbstp  TBYTE PTR [ebx+0x72]
  414262:	(bad)  
  414263:	daa    
  414264:	or     DWORD PTR [ebp-0x55f0ecd4],0x78
  41426b:	std    
  41426c:	push   ebp
  41426d:	sbb    cl,bl
  41426f:	xchg   ecx,eax
  414270:	cmp    al,0x5f
  414272:	call   0xf1fc7e
  414277:	inc    eax
  414278:	mov    dh,0x8
  41427a:	repnz pop esp
  41427c:	push   ecx
  41427d:	cmp    eax,0x2def739a
  414282:	(bad)  
  414283:	cli    
  414284:	mov    cl,0x3d
  414286:	in     al,0xfa
  414288:	adc    al,0x66
  41428a:	xchg   esp,eax
  41428b:	stos   DWORD PTR es:[edi],eax
  41428c:	pusha  
  41428d:	sub    ah,BYTE PTR [edi+ecx*4]
  414290:	jl     0x41426d
  414292:	in     eax,0xd9
  414294:	pushf  
  414295:	repz inc eax
  414297:	je     0x4142b4
  414299:	sub    eax,DWORD PTR [esi+0x2b]
  41429c:	pop    esp
  41429d:	ss sub eax,0x1c7aef4e
  4142a3:	scas   al,BYTE PTR es:[edi]
  4142a4:	fist   WORD PTR [edi+0x454abe9d]
  4142aa:	inc    ebx
  4142ab:	jecxz  0x414288
  4142ad:	js     0x4142ff
  4142af:	pusha  
  4142b0:	loopne 0x41432d
  4142b2:	mov    ds:0xfe2c07e3,eax
  4142b7:	imul   esp,DWORD PTR [edx+0x7581c673],0x659cf1a8
  4142c1:	push   esp
  4142c2:	sbb    dl,BYTE PTR [ebp+0x47]
  4142c5:	fnstcw WORD PTR [ebp+0xd]
  4142c8:	pop    DWORD PTR [edx+0x5d]
  4142cb:	push   edi
  4142cc:	in     eax,dx
  4142cd:	mov    dh,0xcf
  4142cf:	pop    esi
  4142d0:	jle    0x4142a7
  4142d2:	shl    BYTE PTR [edi],cl
  4142d4:	sub    BYTE PTR ds:0x23024ba9,dh
  4142da:	mov    bh,0x23
  4142dc:	or     DWORD PTR [edi+0x1a],0x71832a5e
  4142e3:	sar    BYTE PTR [eax+ebp*8-0x49],0xb0
  4142e8:	pop    ss
  4142e9:	push   ds
  4142ea:	jle    0x414350
  4142ec:	pop    ds
  4142ed:	ret    0x1c3a
  4142f0:	ins    BYTE PTR es:[edi],dx
  4142f1:	add    esi,0xffffffed
  4142f4:	xchg   esi,eax
  4142f5:	sbb    esp,DWORD PTR [edx-0x4dcdb5a]
  4142fb:	(bad)  
  4142fc:	mov    edi,0x13c76ed9
  414301:	dec    eax
  414302:	or     BYTE PTR [ebp-0x7bb135e2],al
  414308:	push   ebx
  414309:	inc    edi
  41430a:	iret   
  41430b:	mov    WORD PTR [esi-0x6a],?
  41430e:	xor    bl,al
  414310:	xchg   esp,eax
  414311:	idiv   BYTE PTR [ebx]
  414313:	pop    edx
  414314:	aam    0x42
  414316:	iret   
  414317:	and    ebx,ebx
  414319:	fcom   DWORD PTR [ecx+0xf67e805]
  41431f:	cmp    edx,esp
  414321:	lods   eax,DWORD PTR ds:[esi]
  414322:	ret    
  414323:	mov    al,ds:0xf109c8e6
  414328:	rol    bh,cl
  41432a:	mov    al,ds:0xcbcde2da
  41432f:	das    
  414330:	ins    DWORD PTR es:[edi],dx
  414331:	dec    ecx
  414332:	pop    es
  414333:	sbb    DWORD PTR [esi-0x3ca5b5b3],ecx
  414339:	mov    esi,0x95c2259e
  41433e:	ror    ebx,cl
  414340:	inc    esi
  414341:	loop   0x4142ca
  414343:	shl    bh,0xf3
  414346:	stos   BYTE PTR es:[edi],al
  414347:	out    dx,al
  414348:	je     0x414304
  41434a:	lods   eax,DWORD PTR ds:[esi]
  41434b:	leave  
  41434c:	push   edx
  41434d:	xchg   BYTE PTR [eax+edx*2+0x13],dl
  414351:	mov    bh,0x83
  414353:	test   BYTE PTR [ebx+0x7a],0x45
  414357:	sbb    ebp,edx
  414359:	adc    BYTE PTR [esi+0x63],ch
  41435c:	jo     0x4143c1
  41435e:	xlat   BYTE PTR ds:[ebx]
  41435f:	pop    es
  414360:	retf   0x8495
  414363:	mov    cs,WORD PTR [edi]
  414365:	mov    ecx,0xeda0d2d4
  41436a:	sbb    al,0x32
  41436c:	repz mov edx,?
  41436f:	pop    ds
  414370:	or     esp,ebp
  414372:	rol    DWORD PTR [edx-0x17],0x94
  414376:	repnz mov ecx,0x835e2055
  41437c:	ss or  edi,ebx
  41437f:	mov    dl,0x74
  414381:	out    dx,eax
  414382:	shl    BYTE PTR [esp+edx*4-0x38],cl
  414386:	outs   dx,DWORD PTR ds:[esi]
  414387:	sbb    BYTE PTR [edi-0x4ee957b4],bl
  41438d:	lock xchg esp,eax
  41438f:	mov    dh,0x74
  414391:	stc    
  414392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414393:	jae    0x414332
  414395:	dec    eax
  414396:	mov    eax,0xda5535f3
  41439b:	cld    
  41439c:	and    BYTE PTR [eax+0x70],dl
  41439f:	xchg   edi,eax
  4143a0:	jbe    0x41440a
  4143a2:	or     esi,DWORD PTR ds:0xbbafb423
  4143a8:	in     al,0x3a
  4143aa:	jns    0x4143b9
  4143ac:	cli    
  4143ad:	outs   dx,BYTE PTR ds:[esi]
  4143ae:	adc    eax,0x16432638
  4143b3:	retf   0x91d3
  4143b6:	ins    DWORD PTR es:[edi],dx
  4143b7:	stc    
  4143b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143b9:	cmp    bh,BYTE PTR [edx]
  4143bb:	mov    ds:0xebd69053,eax
  4143c0:	jl     0x414362
  4143c2:	mov    cl,cl
  4143c4:	xchg   esp,eax
  4143c5:	cmp    BYTE PTR [edi],0x6f
  4143c8:	mov    ds:0x2e81ed85,eax
  4143cd:	ret    
  4143ce:	unpckhps xmm7,XMMWORD PTR [edx+0x46]
  4143d2:	push   edi
  4143d3:	or     cl,0x43
  4143d6:	std    
  4143d7:	mov    bh,0x84
  4143d9:	outs   dx,DWORD PTR ds:[esi]
  4143da:	push   edi
  4143db:	loope  0x414407
  4143dd:	sahf   
  4143de:	nop
  4143df:	test   BYTE PTR [edx+0x0],ch
  4143e2:	cmp    eax,0x44b07463
  4143e7:	jp     0x414446
  4143e9:	add    edi,ecx
  4143eb:	inc    edx
  4143ec:	xchg   esi,eax
  4143ed:	sbb    eax,0x9a45b72d
  4143f2:	cmp    edx,DWORD PTR [esi-0x5d9e8d03]
  4143f8:	lea    esp,[esi-0x51459ef3]
  4143fe:	lahf   
  4143ff:	jecxz  0x414444
  414401:	mov    bl,0xda
  414403:	mov    BYTE PTR [edx],0x1e
  414406:	mov    bl,0x82
  414408:	int3   
  414409:	in     eax,dx
  41440a:	or     cl,BYTE PTR [ebx-0x4658aae5]
  414410:	or     dl,BYTE PTR [esi-0x59057abe]
  414416:	mov    esp,0x826e4ef8
  41441b:	pop    edi
  41441c:	sub    al,0x17
  41441e:	imul   eax,DWORD PTR [edi-0x5d],0xc51891a5
  414425:	dec    ecx
  414426:	jo     0x414410
  414428:	into   
  414429:	das    
  41442a:	jne    0x414453
  41442c:	mov    edx,0x18964868
  414431:	mov    eax,0xf79be99b
  414436:	or     DWORD PTR [esi+0x4eba84cc],esp
  41443c:	lods   al,BYTE PTR ds:[esi]
  41443d:	dec    ebx
  41443e:	pop    ds
  41443f:	mov    cl,0xa4
  414441:	sbb    esi,edi
  414443:	mov    ds:0x1e32cc76,eax
  414448:	mov    DWORD PTR [edi+0x6d82066c],edi
  41444e:	pop    ss
  41444f:	rcr    ecx,1
  414451:	lea    edi,[edi-0x6c]
  414454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414455:	pusha  
  414456:	sbb    DWORD PTR [edx+ecx*8+0x55a0f049],edi
  41445d:	push   0x89e64f4d
  414462:	les    edx,FWORD PTR [esi+eax*8+0x7a8744da]
  414469:	mov    edx,0x93e09ecc
  41446e:	or     ebp,DWORD PTR [ebp-0x9]
  414471:	sbb    eax,0x50fcd7c5
  414476:	aaa    
  414477:	out    0x5b,eax
  414479:	mov    cl,0x95
  41447b:	out    dx,al
  41447c:	pop    es
  41447d:	jle    0x4144d4
  41447f:	pop    es
  414480:	push   es
  414481:	xor    esp,DWORD PTR [eax+edi*2-0x23]
  414485:	sub    DWORD PTR [edx+0x38],edx
  414488:	jae    0x414499
  41448a:	nop
  41448b:	adc    eax,edx
  41448d:	enter  0x5ae3,0x29
  414491:	dec    edi
  414492:	mov    bh,0x88
  414494:	mov    ecx,0x3381a3f1
  414499:	in     al,0xf5
  41449b:	jecxz  0x414505
  41449d:	fldenv [edi+0x5e40addf]
  4144a3:	mov    dh,BYTE PTR [edi-0x2020125]
  4144a9:	(bad)  [ebp+0x4e52c8de]
  4144af:	and    dl,BYTE PTR [ebx]
  4144b1:	lds    edx,FWORD PTR [eax+0x55]
  4144b4:	sbb    dl,BYTE PTR ds:0x874c0b91
  4144ba:	test   eax,0xfe463c4b
  4144bf:	sti    
  4144c0:	push   si
  4144c2:	add    ebx,esp
  4144c4:	add    eax,0xda797465
  4144c9:	mov    ebp,0x76d8c31a
  4144ce:	ja     0x4144f1
  4144d0:	jmp    0xc58a:0x82a1119b
  4144d7:	shl    cl,0xda
  4144da:	out    dx,eax
  4144db:	sub    al,0xd
  4144dd:	xor    eax,0x31212640
  4144e2:	xchg   edx,eax
  4144e3:	inc    eax
  4144e4:	xchg   edx,eax
  4144e5:	mov    ebp,0x82b546a6
  4144ea:	add    al,0x5d
  4144ec:	rcr    DWORD PTR [ebx+0x48cbb2cd],1
  4144f2:	sahf   
  4144f3:	jo     0x414532
  4144f5:	add    esp,DWORD PTR [esi]
  4144f7:	or     edi,edi
  4144f9:	cmp    eax,0xe0acac06
  4144fe:	arpl   WORD PTR [esi-0x9],sp
  414501:	retf   0x5507
  414504:	push   ss
  414505:	in     eax,dx
  414506:	rcr    cl,cl
  414508:	adc    cl,BYTE PTR [eax+0x7bee3710]
  41450e:	jne    0x41455b
  414510:	cmc    
  414511:	pop    ebx
  414512:	sub    ebx,DWORD PTR [ebp-0x70]
  414515:	add    bh,BYTE PTR [ebx]
  414517:	sti    
  414518:	das    
  414519:	fistp  WORD PTR [esi+ecx*1+0x52964b37]
  414520:	add    al,0xc4
  414522:	mov    DWORD PTR [ecx+0x30706581],esi
  414528:	jge    0x4144c5
  41452a:	push   es
  41452b:	nop
  41452c:	in     al,0xaf
  41452e:	out    dx,al
  41452f:	jb     0x414534
  414531:	mov    ch,dl
  414533:	mov    eax,ds:0x4980589d
  414538:	retf   
  414539:	adc    edi,ebx
  41453b:	data16 jl 0x4144f7
  41453e:	jae    0x414591
  414540:	push   ebx
  414541:	(bad)  
  414542:	retf   
  414543:	cmp    DWORD PTR [ebx-0x3d],ecx
  414546:	cli    
  414547:	out    dx,eax
  414548:	stc    
  414549:	cmp    BYTE PTR [ebx+eiz*2-0x3d],bl
  41454d:	lahf   
  41454e:	je     0x4145a5
  414550:	cmp    BYTE PTR [ecx],bh
  414552:	xchg   esi,eax
  414553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414554:	inc    ebp
  414555:	push   ebx
  414556:	add    ebx,DWORD PTR [edi]
  414558:	outs   dx,DWORD PTR ds:[esi]
  414559:	dec    ebx
  41455a:	push   ecx
  41455b:	jno    0x414573
  41455d:	adc    edi,ecx
  41455f:	cli    
  414560:	sub    ebp,DWORD PTR [edx]
  414562:	inc    ecx
  414563:	out    0xdd,eax
  414565:	ds sub bl,dl
  414568:	sbb    DWORD PTR [eax-0x373cd547],ebx
  41456e:	jge    0x4145a0
  414570:	rol    BYTE PTR [eax+0x15],cl
  414573:	jmp    FWORD PTR [esi+edx*1-0xe8df733]
  41457a:	xchg   BYTE PTR [edi+0x583c1fd],dh
  414580:	loop   0x4145c7
  414582:	pop    esp
  414583:	jnp    0x4145a9
  414585:	jno    0x41456f
  414587:	xor    esp,DWORD PTR [ecx+eiz*4+0x26]
  41458b:	mov    esp,0x8fb4c08e
  414590:	push   ss
  414591:	retf   0x976
  414594:	repz les eax,FWORD PTR [edx-0x51e839ac]
  41459b:	fcom   DWORD PTR [ecx+0x71264ac6]
  4145a1:	pusha  
  4145a2:	sub    BYTE PTR [edi],dl
  4145a4:	(bad)  
  4145a5:	enter  0x8b8e,0xf4
  4145a9:	add    eax,0xbf02adb
  4145ae:	jo     0x414583
  4145b0:	call   0xe532:0x89c4b4f8
  4145b7:	sub    BYTE PTR [ebp-0x60],cl
  4145ba:	inc    esp
  4145bb:	mov    DWORD PTR [ebx+0x1ffee0a1],edx
  4145c1:	mov    WORD PTR [esi+0x52e6428a],fs
  4145c7:	push   0x45
  4145c9:	ss pop es
  4145cb:	(bad)  
  4145cc:	sti    
  4145cd:	arpl   WORD PTR [esi+0x3f],bx
  4145d0:	aad    0x42
  4145d2:	int    0x88
  4145d4:	int3   
  4145d5:	mov    al,0x77
  4145d7:	lods   eax,DWORD PTR es:[esi]
  4145d9:	enter  0x11ac,0xd0
  4145dd:	out    0xce,al
  4145df:	add    BYTE PTR [ebp+0x1a15746a],cl
  4145e5:	popf   
  4145e6:	mov    ds:0xcb8b2630,eax
  4145eb:	xlat   BYTE PTR ds:[ebx]
  4145ec:	bound  eax,QWORD PTR ds:0x272ab127
  4145f2:	adc    esi,0x26
  4145f5:	add    eax,0x1b1c28c7
  4145fa:	dec    esp
  4145fb:	cmp    esi,DWORD PTR [eax]
  4145fd:	push   0xffffffa9
  4145ff:	jmp    0x41459d
  414601:	inc    esi
  414602:	push   0xa1d4b1cb
  414607:	cmp    DWORD PTR [edx],esp
  414609:	lahf   
  41460a:	enter  0x58a7,0x81
  41460e:	pop    edx
  41460f:	pushf  
  414610:	call   0x7417:0x6c761bb1
  414617:	loop   0x4145c6
  414619:	mov    esp,0x6d5d68e1
  41461e:	idiv   edi
  414620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414621:	(bad)  
  414622:	xchg   esp,eax
  414623:	mov    dl,0xb8
  414625:	mov    eax,0xc33e6a9a
  41462a:	loop   0x414645
  41462c:	adc    DWORD PTR [edi+0x374f304e],edx
  414632:	mov    edx,0x122951c5
  414637:	fidivr DWORD PTR [ebx+ebp*1+0x66d5d7b6]
  41463e:	pop    ebp
  41463f:	push   ebx
  414640:	mov    ecx,0x13c0f5f2
  414645:	outs   dx,DWORD PTR ds:[esi]
  414646:	xchg   ebx,eax
  414647:	enter  0x6d07,0x76
  41464b:	std    
  41464c:	dec    ebp
  41464d:	stc    
  41464e:	adc    BYTE PTR [eax-0x6e0b0bf5],cl
  414654:	sub    al,0x63
  414656:	hlt    
  414657:	mov    ch,0xc2
  414659:	mov    bl,BYTE PTR [ecx-0x74]
  41465c:	rcl    al,cl
  41465e:	ins    DWORD PTR es:[edi],dx
  41465f:	stos   BYTE PTR es:[edi],al
  414660:	lods   al,BYTE PTR ds:[esi]
  414661:	push   edx
  414662:	outs   dx,BYTE PTR ds:[esi]
  414663:	mov    dl,0x62
  414665:	hlt    
  414666:	aas    
  414667:	cld    
  414668:	mov    ebx,0x27cce809
  41466d:	fwait
  41466e:	or     BYTE PTR ds:0x52b685ff,bl
  414674:	rcr    DWORD PTR [ebp-0x260a4f0c],1
  41467a:	pop    es
  41467b:	push   ebx
  41467c:	jmp    0x4146d8
  41467e:	outs   dx,BYTE PTR ds:[esi]
  41467f:	or     BYTE PTR [edx],dh
  414681:	pop    esi
  414682:	jne    0x4146d1
  414684:	loopne 0x4146ad
  414686:	in     eax,0x5c
  414688:	push   esi
  414689:	(bad)  
  41468b:	sar    bl,0x3b
  41468e:	dec    edx
  41468f:	pop    ecx
  414690:	adc    DWORD PTR [edi+0x5b8cbc16],0xffffffb0
  414697:	mov    ebx,0x75d97f39
  41469c:	aaa    
  41469d:	dec    eax
  41469e:	cs ret 
  4146a0:	lods   al,BYTE PTR ss:[esi]
  4146a2:	imul   BYTE PTR [ecx+esi*2]
  4146a5:	(bad)  
  4146a6:	jmp    0x2b4b:0x38953e5e
  4146ad:	jecxz  0x414707
  4146af:	mov    edx,cs
  4146b1:	fnstsw WORD PTR [esi-0x30a02e24]
  4146b7:	dec    ebx
  4146b8:	(bad)  
  4146b9:	xchg   ebp,eax
  4146ba:	pop    ds
  4146bb:	iret   
  4146bc:	sbb    ebp,0xdc48ae49
  4146c2:	sbb    al,0x70
  4146c4:	and    eax,0xe2a0fe5d
  4146c9:	leave  
  4146ca:	mov    ch,0xa6
  4146cc:	jmp    0x414684
  4146ce:	jg     0x4146ff
  4146d0:	iret   
  4146d1:	(bad)
  4146d5:	js     0x414702
  4146d7:	shl    esp,1
  4146d9:	inc    esp
  4146da:	into   
  4146db:	dec    DWORD PTR [ebx+0x66e66d55]
  4146e1:	daa    
  4146e2:	or     BYTE PTR ds:0x2a947d9c,0xac
  4146e9:	outs   dx,BYTE PTR ds:[esi]
  4146ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146eb:	mov    edx,0x89387a3c
  4146f0:	adc    al,0xbe
  4146f2:	jg     0x41469f
  4146f4:	mov    ds:0xb8a0e27c,al
  4146f9:	ins    DWORD PTR es:[edi],dx
  4146fa:	fisub  DWORD PTR [ebx+0x26]
  4146fd:	push   esp
  4146fe:	ror    BYTE PTR [eax],0x48
  414701:	leave  
  414702:	mov    edx,0xbabe6585
  414707:	mov    ds:0x77378275,al
  41470c:	mov    ah,0x4c
  41470e:	into   
  41470f:	add    ah,BYTE PTR [esi+0xf]
  414712:	jle    0x414793
  414714:	inc    ebp
  414715:	lods   al,BYTE PTR ds:[esi]
  414716:	out    0xf3,eax
  414718:	jmp    0xff34:0x7a8a6bf7
  41471f:	pop    eax
  414720:	dec    eax
  414721:	fs mov cl,0x13
  414724:	arpl   dx,dx
  414726:	xchg   ebp,eax
  414727:	jns    0x414732
  414729:	(bad)  
  41472a:	pushf  
  41472b:	cmp    al,0x17
  41472d:	in     eax,0x40
  41472f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414730:	cmp    ebx,eax
  414732:	jo     0x414777
  414734:	push   ds
  414735:	mov    al,ds:0x2965db79
  41473a:	lock (bad) 
  41473c:	retf   
  41473d:	scas   eax,DWORD PTR es:[edi]
  41473e:	mov    ds:0x842b2001,eax
  414743:	mov    es,edi
  414745:	sub    esi,DWORD PTR [eax+eiz*2+0x2408e459]
  41474c:	inc    eax
  41474d:	adc    ebp,DWORD PTR [ecx+0x4b]
  414750:	fucomi st,st(7)
  414752:	jmp    0xbac5:0x4f0d7067
  414759:	scas   eax,DWORD PTR es:[edi]
  41475a:	mov    DWORD PTR [ecx-0x20decf1f],esi
  414760:	pop    ss
  414761:	fsub   QWORD PTR [ebp-0x21]
  414764:	sbb    ebp,0x2a162a23
  41476a:	dec    eax
  41476b:	push   esi
  41476c:	fld    QWORD PTR [edx]
  41476f:	std    
  414770:	pop    ebx
  414771:	repz pop ecx
  414773:	nop
  414774:	push   edi
  414775:	or     DWORD PTR [ecx+0x4b],esi
  414778:	push   edi
  414779:	inc    edi
  41477a:	inc    esp
  41477b:	pusha  
  41477c:	leave  
  41477d:	clc    
  41477e:	in     eax,0xe7
  414780:	sti    
  414781:	mov    es,WORD PTR [edi+0x2a377347]
  414787:	jecxz  0x4147ae
  414789:	shr    esi,cl
  41478b:	add    edx,DWORD PTR [ecx]
  41478d:	cmp    al,0x33
  41478f:	jo     0x4147a0
  414791:	mov    WORD PTR [esi+ecx*8],?
  414794:	xlat   BYTE PTR ds:[ebx]
  414795:	or     al,0xc3
  414797:	test   al,0xe9
  414799:	in     al,0x75
  41479b:	cmp    BYTE PTR [esi-0x26f34d09],dh
  4147a1:	adc    al,0xd2
  4147a3:	addr16 fdivr st,st(7)
  4147a6:	div    DWORD PTR [ebx-0x3f]
  4147a9:	in     al,0xfb
  4147ab:	ret    0x4bf7
  4147ae:	cmp    DWORD PTR [esi],edx
  4147b0:	test   ecx,eax
  4147b2:	dec    esi
  4147b3:	hlt    
  4147b4:	rcr    DWORD PTR [edx],1
  4147b6:	mov    ebp,0xe36c9173
  4147bb:	stos   BYTE PTR es:[edi],al
  4147bc:	stc    
  4147bd:	mov    al,0x57
  4147bf:	push   ebp
  4147c0:	clc    
  4147c1:	pop    ds
  4147c2:	xlat   BYTE PTR ds:[ebx]
  4147c3:	xchg   DWORD PTR [edi+ecx*8],edx
  4147c6:	pop    ss
  4147c7:	lds    ebp,FWORD PTR [edi-0x4d]
  4147ca:	test   eax,0x58b3eed7
  4147cf:	imul   edi,DWORD PTR [ebx],0x10e68564
  4147d5:	into   
  4147d6:	fsub   QWORD PTR [ecx+0x790684e4]
  4147dc:	inc    ecx
  4147dd:	xor    edx,ecx
  4147df:	mov    edi,0x947b7f7e
  4147e4:	push   ebx
  4147e5:	mov    esi,0x5e2c2bab
  4147ea:	inc    esi
  4147eb:	sbb    al,0x89
  4147ed:	dec    ecx
  4147ee:	mov    BYTE PTR [edx+0x55],bl
  4147f1:	sbb    DWORD PTR [ecx+0x36],ebx
  4147f4:	xchg   edx,eax
  4147f5:	ins    BYTE PTR es:[edi],dx
  4147f6:	mov    esi,0xca55d85e
  4147fb:	in     al,dx
  4147fc:	nop
  4147fd:	xchg   bl,cl
  4147ff:	cmp    bh,ah
  414801:	std    
  414802:	or     eax,0xf242db5
  414807:	mov    ds:0x275aa95d,al
  41480c:	shl    DWORD PTR [esi-0x15ba637f],0x61
  414813:	fstp   TBYTE PTR [eax+0x3a]
  414816:	jmp    0x414808
  414818:	cs pop ss
  41481a:	add    ebp,ecx
  41481c:	outs   dx,DWORD PTR ds:[esi]
  41481d:	stc    
  41481e:	mov    cl,0x4c
  414820:	repz sub al,0x70
  414823:	clc    
  414824:	and    eax,0xffffffd8
  414827:	mov    al,ds:0x66b16ff0
  41482c:	fdiv   DWORD PTR [edi+ecx*4]
  41482f:	and    eax,0x7e68e25d
  414834:	add    DWORD PTR [ebx+0x4b36361c],0xffffffaa
  41483b:	mov    dh,0xcb
  41483d:	mov    ecx,0xa253b000
  414842:	cmc    
  414843:	in     al,0xb8
  414845:	stos   BYTE PTR es:[edi],al
  414846:	frstor [edx]
  414848:	adc    al,0xde
  41484a:	mov    edx,ebx
  41484c:	hlt    
  41484d:	jbe    0x41480f
  41484f:	add    eax,DWORD PTR [eax+eiz*1+0x4d]
  414853:	dec    ecx
  414854:	inc    eax
  414855:	gs xchg ebp,eax
  414857:	sbb    ebx,DWORD PTR [ecx+0x5a0b0435]
  41485d:	imul   eax,esp,0xffffffdf
  414860:	ret    0x35b0
  414863:	push   ds
  414864:	test   al,0xb6
  414866:	inc    ebx
  414867:	xchg   edx,eax
  414868:	mov    al,ds:0x3d281189
  41486d:	pop    eax
  41486e:	and    ebp,esp
  414870:	inc    ebp
  414871:	into   
  414872:	out    0x27,eax
  414874:	aam    0x40
  414876:	add    eax,edi
  414878:	pushf  
  414879:	mov    bl,0xfb
  41487b:	leave  
  41487c:	sbb    ch,BYTE PTR [ebp+edi*4+0x71326406]
  414883:	adc    esp,DWORD PTR [ecx+0x10]
  414886:	adc    BYTE PTR [ebp-0x5202b6fd],cl
  41488c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41488d:	dec    edx
  41488f:	scas   eax,DWORD PTR es:[edi]
  414890:	mov    bh,0x5f
  414892:	outs   dx,BYTE PTR ds:[esi]
  414893:	cmc    
  414894:	sub    BYTE PTR [ebx+0x51],bh
  414897:	pusha  
  414898:	add    eax,0xde1a368b
  41489d:	jns    0x414907
  41489f:	out    0xae,al
  4148a1:	add    ebx,ebp
  4148a3:	lods   eax,DWORD PTR ds:[esi]
  4148a4:	cld    
  4148a5:	mov    ds:0xeadb41d3,al
  4148aa:	(bad)  
  4148ab:	fdivr  DWORD PTR [ebp-0x661787f6]
  4148b1:	test   al,0xb7
  4148b3:	lea    esp,[ecx-0x6a]
  4148b6:	xchg   ecx,eax
  4148b7:	out    dx,eax
  4148b8:	ficomp WORD PTR [ebx]
  4148ba:	pushf  
  4148bb:	ret    0x793b
  4148be:	xchg   ebx,ebp
  4148c0:	test   DWORD PTR ds:0xdaef97b2,0xbe18ab28
  4148ca:	jp     0x4148de
  4148cc:	jb     0x41487d
  4148ce:	or     al,BYTE PTR [ebx-0x60]
  4148d1:	jne    0x414876
  4148d3:	push   edi
  4148d4:	hlt    
  4148d5:	add    eax,0xa171336e
  4148da:	cmp    ax,0x4f81
  4148de:	lea    ebp,[edi+0x1]
  4148e1:	sahf   
  4148e2:	(bad)  
  4148e3:	sti    
  4148e4:	into   
  4148e5:	cmp    eax,0xf4692ffb
  4148ea:	jecxz  0x4148e5
  4148ec:	nop
  4148ed:	dec    esi
  4148ee:	jns    0x4148e6
  4148f0:	repnz iret 
  4148f2:	push   0x7e
  4148f4:	mov    eax,0x214ec73c
  4148f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148fa:	pop    ecx
  4148fb:	jns    0x414905
  4148fd:	inc    ebp
  4148fe:	cmp    al,0x29
  414900:	enter  0x33c5,0xc8
  414904:	add    ecx,esi
  414906:	mov    ecx,0x242ebcd
  41490b:	je     0x419125
  414911:	jmp    0x416c96
  414916:	cwde   
  414917:	add    BYTE PTR [ecx],al
  414919:	or     eax,0x7b940381
  41491e:	test   al,0xe5
  414920:	pusha  
  414921:	mov    ah,0x27
  414923:	mov    esp,DWORD PTR [eax+0x25]
  414926:	xchg   esi,eax
  414927:	pusha  
  414928:	jns    0x4149a4
  41492a:	adc    bl,BYTE PTR [edi+0x7a]
  41492d:	jp     0x414934
  41492f:	call   0x22bc7313
  414934:	gs or  al,0x31
  414937:	into   
  414938:	jo     0x41495d
  41493a:	ss mov ebp,0xaf9e75bc
  414940:	mov    BYTE PTR [ebx],ah
  414942:	cs xchg edi,eax
  414944:	mov    ebx,0xc1d295c9
  414949:	push   ds
  41494a:	fdivr  st(1),st
  41494c:	adc    al,0x16
  41494e:	xchg   eax,ebx
  414950:	jmp    0xf565:0x1e16765
  414957:	out    0xfc,eax
  414959:	in     al,dx
  41495a:	outs   dx,BYTE PTR ds:[esi]
  41495b:	add    ecx,DWORD PTR [ecx+eiz*4+0x4f]
  41495f:	aaa    
  414960:	jmp    FWORD PTR [edi+0x61607a45]
  414966:	inc    ecx
  414967:	and    edx,DWORD PTR [ebx+edx*2]
  41496a:	mov    edi,0x91899a83
  41496f:	loopne 0x4149df
  414971:	repnz xor BYTE PTR [esi+0x5f],bh
  414975:	jns    0x41497d
  414977:	stc    
  414978:	add    cl,ah
  41497a:	add    BYTE PTR [ebx-0x14],bh
  41497d:	xor    eax,0xbfed1c2e
  414982:	arpl   WORD PTR [edi+edx*2-0x80],dx
  414986:	adc    bl,ch
  414988:	out    dx,eax
  414989:	and    BYTE PTR [edx-0x51f1f33e],dl
  41498f:	scas   eax,DWORD PTR es:[edi]
  414990:	(bad)  
  414991:	sub    bh,BYTE PTR [edi]
  414993:	call   0xd25c9613
  414998:	stos   DWORD PTR es:[edi],eax
  414999:	and    eax,0x31209b73
  41499e:	and    esi,0xddb02657
  4149a4:	pushf  
  4149a5:	jp     0x41496d
  4149a7:	(bad)  [ebp-0x4f]
  4149aa:	or     eax,0x9a4d08d6
  4149af:	cmp    DWORD PTR [ebx+0x42],ebx
  4149b2:	push   esp
  4149b3:	(bad)  
  4149b4:	inc    edi
  4149b5:	add    al,0xe3
  4149b7:	mov    eax,0x375136b8
  4149bc:	dec    ecx
  4149bd:	fiadd  DWORD PTR [ecx]
  4149bf:	xor    BYTE PTR [ebx+eax*4-0x395ed821],ah
  4149c6:	mov    al,ds:0x75e690c2
  4149cb:	xchg   ecx,eax
  4149cc:	je     0x414972
  4149ce:	push   edi
  4149cf:	mov    bh,0x89
  4149d1:	jmp    0x414961
  4149d3:	and    BYTE PTR [ecx-0x3342695b],ch
  4149d9:	mov    ebp,0x6781f4e
  4149de:	lahf   
  4149df:	test   BYTE PTR [esi+0x680d2511],dl
  4149e5:	cli    
  4149e6:	push   ecx
  4149e7:	push   edi
  4149e8:	ret    
  4149e9:	scas   al,BYTE PTR es:[edi]
  4149ea:	div    DWORD PTR [edx-0x69]
  4149ed:	cwde   
  4149ee:	aaa    
  4149ef:	or     BYTE PTR [ecx],0x37
  4149f2:	fcomi  st,st(7)
  4149f4:	xor    eax,0xa2785443
  4149f9:	ret    0xaeda
  4149fc:	fistp  QWORD PTR [ecx+0x3c]
  4149ff:	dec    eax
  414a00:	pop    edi
  414a01:	xchg   edx,eax
  414a02:	popf   
  414a03:	mov    ebp,0x76a8b8ae
  414a08:	imul   ecx,DWORD PTR [ecx-0x3e95a53e],0xe30209e6
  414a12:	cmp    edx,DWORD PTR [ebp+0x396575c7]
  414a18:	scas   eax,DWORD PTR es:[edi]
  414a19:	retf   
  414a1a:	bound  ebx,QWORD PTR [esi]
  414a1c:	(bad)  
  414a1e:	int    0xf
  414a20:	shl    ah,0x8b
  414a23:	mov    eax,ds:0x6356481b
  414a28:	imul   esp,DWORD PTR fs:[esi],0xffffffa6
  414a2c:	sbb    dl,dh
  414a2e:	lds    ecx,FWORD PTR [esi]
  414a30:	dec    esp
  414a31:	dec    edx
  414a32:	outs   dx,DWORD PTR fs:[esi]
  414a34:	xchg   DWORD PTR [ebx],eax
  414a36:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  414a38:	ins    BYTE PTR es:[edi],dx
  414a39:	push   edx
  414a3a:	sbb    ecx,DWORD PTR [eax-0xd]
  414a3d:	mov    ah,0x27
  414a3f:	es and ebx,esp
  414a42:	jns    0x414a1a
  414a44:	push   ecx
  414a45:	pop    ecx
  414a46:	retf   
  414a47:	icebp  
  414a48:	fistp  DWORD PTR [esi+esi*8]
  414a4b:	repz pop esi
  414a4d:	mov    dh,dh
  414a4f:	inc    BYTE PTR [ecx+0x2cb0fcb7]
  414a55:	shr    DWORD PTR [esi-0x13],0x32
  414a59:	retf   0xcb23
  414a5c:	add    DWORD PTR [ecx+0x42],ebp
  414a5f:	sbb    DWORD PTR [ecx+0x14],ecx
  414a62:	push   ecx
  414a63:	sbb    ebx,DWORD PTR [edx+0x263afdb2]
  414a69:	(bad)  
  414a6a:	into   
  414a6b:	js     0x414a61
  414a6d:	inc    edx
  414a6e:	sahf   
  414a6f:	pop    edi
  414a70:	dec    edi
  414a71:	jge    0x414a63
  414a73:	xchg   ah,al
  414a75:	popf   
  414a76:	int    0x60
  414a78:	scas   eax,DWORD PTR es:[edi]
  414a79:	shl    BYTE PTR [esi],0xed
  414a7c:	(bad)  
  414a7d:	sub    edx,DWORD PTR [ebx]
  414a7f:	pop    ss
  414a80:	jb     0x414a64
  414a82:	sahf   
  414a83:	add    eax,0x4b58c0c
  414a88:	or     al,0x33
  414a8a:	(bad)  [ebx-0x3a]
  414a8d:	pop    ss
  414a8e:	repz push ss
  414a90:	dec    ecx
  414a91:	jle    0x414abe
  414a93:	clc    
  414a94:	pushf  
  414a95:	fwait
  414a96:	jmp    0x414ac5
  414a98:	aam    0xdb
  414a9a:	rcl    DWORD PTR [ebp+ebx*8+0x7],0x7e
  414a9f:	repnz and ebp,DWORD PTR [ebx-0x79]
  414aa3:	(bad)  
  414aa4:	imul   ebx,esi,0x764e96d1
  414aaa:	icebp  
  414aab:	rol    DWORD PTR [edi-0x1b27d7d7],cl
  414ab1:	lahf   
  414ab2:	cmp    bh,BYTE PTR [ecx+0x6d9494dd]
  414ab8:	mov    cl,0x81
  414aba:	int3   
  414abb:	mov    ds:0x73d8834f,al
  414ac0:	sub    ebx,DWORD PTR [ebp+0x0]
  414ac3:	rol    DWORD PTR [edx],cl
  414ac5:	fcmove st,st(4)
  414ac7:	shr    DWORD PTR [esi-0xf],1
  414aca:	addr16 js 0x414aed
  414acd:	cli    
  414ace:	iret   
  414acf:	fwait
  414ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ad1:	adc    eax,0x7b9ff8b8
  414ad6:	jmp    0x5385:0xa32475e8
  414add:	js     0x414b06
  414adf:	xchg   DWORD PTR [eax-0x7e],ecx
  414ae2:	inc    ecx
  414ae3:	fcmovbe st,st(5)
  414ae5:	pop    ebp
  414ae6:	sub    ebp,DWORD PTR [ecx]
  414ae8:	adc    al,0x61
  414aea:	add    BYTE PTR [ebp+0x46a538fb],bh
  414af0:	pusha  
  414af1:	pop    es
  414af2:	ret    0x4ec8
  414af5:	xchg   esi,eax
  414af6:	sub    esi,esi
  414af8:	adc    BYTE PTR [esi],0x62
  414afb:	pop    ss
  414afc:	mov    ds:0x34b31221,eax
  414b01:	stos   DWORD PTR es:[edi],eax
  414b02:	arpl   di,cx
  414b04:	sbb    bh,BYTE PTR [ecx+0x543703e8]
  414b0a:	cmp    eax,0x6e83fd9a
  414b0f:	xor    edi,eax
  414b11:	dec    edx
  414b12:	push   ecx
  414b13:	jo     0xe78e7a5c
  414b19:	push   es
  414b1a:	mov    BYTE PTR [ebp-0x1e],bh
  414b1d:	add    al,0xdb
  414b1f:	xor    BYTE PTR [eax-0x686dd1c6],cl
  414b25:	cmp    dh,bl
  414b27:	or     al,0x3e
  414b29:	jae    0x414b7b
  414b2b:	data16 mov al,0x83
  414b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b2f:	data16 and BYTE PTR [ecx],bh
  414b32:	xchg   esp,eax
  414b33:	xchg   BYTE PTR [ecx],bh
  414b35:	or     DWORD PTR [eax+0x7d26f810],0xfffffffc
  414b3c:	dec    eax
  414b3d:	adc    al,BYTE PTR [esp+ebx*1]
  414b40:	push   ebx
  414b41:	mov    ah,0x93
  414b43:	ja     0x414b63
  414b45:	popf   
  414b46:	(bad)
  414b4a:	imul   edx,edx,0xffffffa0
  414b4d:	mov    bh,0xf2
  414b4f:	push   es
  414b50:	inc    ecx
  414b51:	dec    ecx
  414b52:	inc    esi
  414b53:	aam    0xe9
  414b55:	xor    eax,0x530a3edd
  414b5a:	sub    BYTE PTR [esp+eiz*8+0x75150e6a],ah
  414b61:	inc    edx
  414b62:	jg     0x414bdc
  414b64:	mov    dl,0xc2
  414b66:	sub    al,0xb4
  414b68:	loopne 0x414b8f
  414b6a:	adc    BYTE PTR [edx],ah
  414b6c:	outs   dx,BYTE PTR ds:[esi]
  414b6d:	cmp    BYTE PTR [ebx+0x5e],ch
  414b70:	sar    DWORD PTR [edi-0x7afb5565],1
  414b76:	inc    esi
  414b77:	mov    DWORD PTR [esi+0x67],ecx
  414b7a:	ret    
  414b7b:	xor    BYTE PTR [esi-0x13],ch
  414b7e:	lods   eax,DWORD PTR ds:[esi]
  414b7f:	das    
  414b80:	add    DWORD PTR [esi],0x31e3e31b
  414b86:	test   BYTE PTR [esi+0x598e997c],dh
  414b8c:	jb     0x414c07
  414b8e:	clc    
  414b8f:	fldcw  WORD PTR [edi]
  414b91:	xchg   esp,eax
  414b92:	call   0x1a5d:0x520bd313
  414b99:	jae    0x414bd8
  414b9b:	retf   0x3360
  414b9e:	jb     0x414bef
  414ba0:	dec    esp
  414ba1:	lock jne 0x414c1b
  414ba4:	retf   
  414ba5:	xchg   esp,eax
  414ba6:	or     bl,0xa1
  414ba9:	xor    BYTE PTR [eax],dh
  414bab:	mov    eax,0xb3de5520
  414bb0:	jno    0x414b83
  414bb2:	adc    BYTE PTR [ebp-0x23],ch
  414bb5:	pop    edi
  414bb6:	loope  0x414b9d
  414bb8:	jp     0x414b76
  414bba:	jnp    0x414bcf
  414bbc:	aam    0xbb
  414bbe:	fs out 0xa8,eax
  414bc1:	and    eax,0xe614f518
  414bc6:	(bad)  [edx]
  414bc8:	dec    edx
  414bc9:	xchg   edi,eax
  414bca:	mov    ds:0x9fdb131f,eax
  414bcf:	pop    eax
  414bd0:	test   DWORD PTR [esi+esi*8-0x6ee14bb7],0x4c2b9057
  414bdb:	div    BYTE PTR [edx]
  414bdd:	retf   
  414bde:	cmc    
  414bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414be0:	push   edi
  414be1:	daa    
  414be2:	jne    0x414ba5
  414be4:	mov    cl,0xbe
  414be6:	sbb    esp,esp
  414be8:	inc    eax
  414be9:	lods   al,BYTE PTR ds:[esi]
  414bea:	pop    ss
  414beb:	iret   
  414bec:	lock xor al,0xe5
  414bef:	jno    0x414c06
  414bf1:	fwait
  414bf2:	clc    
  414bf3:	addr16 stc 
  414bf5:	inc    esi
  414bf6:	(bad)  
  414bf7:	aas    
  414bf8:	inc    esp
  414bf9:	mov    eax,0x74140484
  414bfe:	mov    esi,0x9327ec5b
  414c03:	and    BYTE PTR [ebp-0x64],dh
  414c06:	mov    ah,0x1e
  414c08:	fcmovu st,st(6)
  414c0a:	(bad)  
  414c0b:	mov    ebx,0xed090b22
  414c10:	mov    ah,0x45
  414c12:	enter  0xc77b,0xbe
  414c16:	shl    cl,0x40
  414c19:	sbb    eax,0xb26af930
  414c1e:	daa    
  414c1f:	or     al,0x42
  414c21:	or     al,0x1a
  414c23:	or     BYTE PTR [edx-0x50],0x95
  414c27:	addr16 jmp 0x414c15
  414c2a:	mov    bl,0x99
  414c2c:	mov    ah,0x8c
  414c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c2f:	(bad)  [ebp-0x72]
  414c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c33:	call   0xff24:0x41cd62d0
  414c3a:	mov    dh,0x40
  414c3c:	jnp    0x414c2a
  414c3e:	test   al,0x21
  414c40:	addr16 mov edi,0x94046db7
  414c46:	mov    bh,0xd7
  414c48:	and    DWORD PTR [eax+0x116e728e],0xffffff82
  414c4f:	mov    ds:0xe61c2422,al
  414c54:	(bad)  
  414c55:	dec    edi
  414c56:	xor    BYTE PTR [esi+0x67],0x99
  414c5a:	rcr    BYTE PTR [ecx+ebx*4-0xa],cl
  414c5e:	ficom  WORD PTR [ebx-0x3369860f]
  414c64:	mov    cl,0x4
  414c66:	mov    bl,0x2f
  414c68:	adc    cl,al
  414c6a:	loop   0x414ce1
  414c6c:	rcr    BYTE PTR [esi],cl
  414c6e:	add    esp,ebp
  414c70:	push   ds
  414c71:	das    
  414c72:	test   BYTE PTR [edi+0x6e577d7f],al
  414c78:	ror    DWORD PTR ds:0xb19b60ff,1
  414c7e:	gs jmp 0xcf68:0xe97d88c8
  414c86:	mov    ebp,0x6669c42a
  414c8b:	add    bl,BYTE PTR [ecx]
  414c8d:	pop    es
  414c8e:	jmp    0x7b31:0x7b24caa7
  414c95:	push   0xffffffc9
  414c97:	sbb    DWORD PTR [ebx+0x4b],0x47
  414c9b:	pop    ebx
  414c9c:	pop    es
  414c9d:	mov    bl,0x43
  414c9f:	shl    BYTE PTR [ebx],cl
  414ca1:	out    0x97,eax
  414ca3:	mov    ebp,0x9977b6c0
  414ca8:	cmp    DWORD PTR [edi],esp
  414caa:	(bad)  
  414cab:	stc    
  414cac:	push   esp
  414cad:	aam    0x66
  414caf:	(bad)  
  414cb0:	xchg   esp,eax
  414cb1:	popa   
  414cb2:	in     eax,0xe2
  414cb4:	xchg   ebx,eax
  414cb5:	xchg   esp,eax
  414cb6:	gs mov ch,0xce
  414cb9:	pop    ds
  414cba:	les    edi,FWORD PTR [esi-0x42]
  414cbd:	dec    esp
  414cbe:	jmp    0xd4083c4c
  414cc3:	outs   dx,DWORD PTR ds:[esi]
  414cc4:	pop    ds
  414cc5:	dec    edi
  414cc6:	fstp   DWORD PTR [ebx]
  414cc8:	jle    0x414c80
  414cca:	repz daa 
  414ccc:	fild   DWORD PTR [edx]
  414cce:	sbb    eax,0xeff35c00
  414cd3:	pusha  
  414cd4:	sub    DWORD PTR [edx+edx*2+0x56905a09],ebp
  414cdb:	cmp    al,0xac
  414cdd:	push   eax
  414cde:	(bad)  
  414cdf:	xlat   BYTE PTR ds:[ebx]
  414ce0:	aam    0x8
  414ce2:	int3   
  414ce3:	or     ch,ch
  414ce5:	mov    DWORD PTR [eax],edi
  414ce7:	idiv   BYTE PTR [edi+0x15]
  414cea:	pop    esp
  414ceb:	sbb    al,BYTE PTR [ebp+0x2bb752c0]
  414cf1:	jmp    0x414d20
  414cf3:	dec    esi
  414cf4:	and    DWORD PTR [ebp-0x3d355db3],0x7c
  414cfb:	enter  0xd104,0x1a
  414cff:	lds    esp,FWORD PTR ds:0xdfd6d281
  414d05:	cmp    al,0xfe
  414d07:	ror    esp,0x2e
  414d0a:	push   ecx
  414d0b:	es std 
  414d0d:	or     al,0xfd
  414d0f:	mul    DWORD PTR [esi+0x6a]
  414d12:	imul   edx,esi,0x5a
  414d15:	call   DWORD PTR [ebx-0x13aee37b]
  414d1b:	mov    esp,0x72c7cc5b
  414d20:	sti    
  414d21:	mov    ah,0x6e
  414d23:	leave  
  414d24:	in     eax,0x1c
  414d26:	or     al,0xa1
  414d28:	jae    0x414d05
  414d2a:	mov    ds:0x2bf8fd31,eax
  414d2f:	out    dx,al
  414d30:	(bad)  
  414d31:	fdivr  st,st(4)
  414d33:	test   edi,0x253cf65
  414d39:	cmp    BYTE PTR [eax+eiz*1],bl
  414d3c:	pop    es
  414d3d:	fstp   DWORD PTR [edx]
  414d3f:	fwait
  414d40:	mov    dh,0x12
  414d42:	(bad)  
  414d43:	lds    esi,FWORD PTR [ecx+eiz*1]
  414d46:	xchg   ecx,eax
  414d47:	hlt    
  414d48:	sub    edx,DWORD PTR [ebx+0x592c7e66]
  414d4e:	je     0x414d31
  414d50:	sub    BYTE PTR [ecx],bl
  414d52:	sub    DWORD PTR es:[ecx],edi
  414d55:	mov    ch,bl
  414d57:	lods   eax,DWORD PTR ds:[esi]
  414d58:	mov    ch,0xc8
  414d5a:	popa   
  414d5b:	gs add al,ah
  414d5e:	jmp    0xed34:0x24bc33a
  414d65:	sbb    bh,0x1c
  414d68:	into   
  414d69:	push   eax
  414d6a:	pop    ecx
  414d6b:	repz xchg esp,eax
  414d6d:	and    DWORD PTR [esi+0x3f],ebp
  414d70:	sbb    cl,bh
  414d72:	mov    ah,0x48
  414d74:	dec    ecx
  414d75:	addr16 dec esp
  414d77:	loopne 0x414d87
  414d79:	out    dx,al
  414d7a:	sub    BYTE PTR [edi-0x238b7c9a],bh
  414d80:	push   esp
  414d81:	jge    0x414d76
  414d83:	mov    esi,0x18fb4b9e
  414d88:	inc    esi
  414d89:	jl     0x414dbc
  414d8b:	and    BYTE PTR [edi+0xb],ah
  414d8e:	jae    0x414dda
  414d90:	(bad)  
  414d91:	pop    edi
  414d92:	ret    
  414d93:	test   eax,0x678fd204
  414d98:	enter  0xa054,0xdb
  414d9c:	cmp    dl,BYTE PTR [ecx+0x48]
  414d9f:	inc    ecx
  414da0:	adc    BYTE PTR [ebp+0x36],bl
  414da3:	xor    eax,0x3cc4b157
  414da8:	inc    edi
  414da9:	jnp    0x414de2
  414dab:	out    dx,eax
  414dac:	in     eax,dx
  414dad:	xchg   edi,eax
  414dae:	iret   
  414daf:	imul   edi,esp,0xf5848deb
  414db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414db6:	inc    eax
  414db7:	dec    ebx
  414db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414db9:	xor    eax,0xf19c3c4f
  414dbe:	adc    BYTE PTR [eax-0x6a],bl
  414dc1:	or     dl,bh
  414dc3:	es mov eax,gs
  414dc6:	in     al,0x7d
  414dc8:	jecxz  0x414d78
  414dca:	xchg   ebx,eax
  414dcb:	scas   eax,DWORD PTR es:[edi]
  414dcc:	aam    0xf3
  414dce:	cmp    ebp,esi
  414dd0:	(bad)  
  414dd1:	cmp    DWORD PTR [ebx+eiz*4],esi
  414dd4:	mov    cl,BYTE PTR [esi+0x21cc988a]
  414dda:	jne    0x414e41
  414ddc:	mov    cl,0x1b
  414dde:	jmp    0x414e2b
  414de0:	loope  0x414df0
  414de2:	popf   
  414de3:	ins    DWORD PTR es:[edi],dx
  414de4:	dec    edi
  414de5:	pop    ecx
  414de6:	xchg   esi,eax
  414de7:	jns    0x414dc9
  414de9:	mov    eax,ds:0x9ff6a228
  414dee:	mov    ebp,0x5eeb9267
  414df3:	lahf   
  414df4:	or     BYTE PTR [esp+ebp*4+0x29bc4355],ah
  414dfb:	call   0x421d2f6f
  414e00:	fdiv   QWORD PTR [edi+0x0]
  414e03:	fs in  al,dx
  414e05:	fisttp DWORD PTR [edx+0x4171257c]
  414e0b:	fadd   QWORD PTR [edx+0x4c]
  414e0e:	add    eax,0xec49ecfd
  414e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e14:	popa   
  414e15:	and    al,0x92
  414e17:	jecxz  0x414db5
  414e19:	std    
  414e1a:	out    dx,eax
  414e1b:	(bad)  
  414e1c:	int    0xbf
  414e1e:	cmp    DWORD PTR [eax*4+0x6f90b666],ecx
  414e25:	adc    DWORD PTR [edi],edx
  414e27:	and    ebp,DWORD PTR [edx-0x5bf8ebd9]
  414e2d:	sbb    eax,0x54b48611
  414e32:	or     ebp,DWORD PTR [edi]
  414e34:	mov    eax,ds:0x642089be
  414e39:	test   al,0xe2
  414e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e3c:	(bad)  
  414e3d:	(bad)  
  414e3e:	loopne 0x414e28
  414e40:	lahf   
  414e41:	mov    al,ds:0xc60994ac
  414e46:	ror    BYTE PTR [eax],1
  414e48:	ja     0x414e49
  414e4a:	inc    esp
  414e4b:	pop    eax
  414e4c:	xor    cl,al
  414e4e:	pop    edx
  414e4f:	sbb    esi,DWORD PTR [esi-0x52]
  414e52:	dec    edi
  414e53:	fisub  WORD PTR [eax+0xa]
  414e56:	test   BYTE PTR [edx-0x20993418],bh
  414e5c:	cli    
  414e5d:	jnp    0x414e8d
  414e5f:	lds    ebx,FWORD PTR [edx+0x6effd998]
  414e65:	jle    0x414e69
  414e67:	out    dx,eax
  414e68:	xor    esi,DWORD PTR [eax+0x6b425316]
  414e6e:	adc    eax,0x23556420
  414e73:	repz or eax,0xbe716c17
  414e79:	push   ecx
  414e7a:	(bad)  
  414e7b:	mov    esp,0x99810098
  414e80:	in     eax,dx
  414e81:	dec    ebx
  414e82:	xor    DWORD PTR [ecx+0x4544fcc9],ebx
  414e88:	sar    esi,0xcd
  414e8b:	imul   ebp,DWORD PTR [eax+0x5c12ad03],0xedf1d341
  414e95:	lock aas 
  414e97:	sar    BYTE PTR [ebx],cl
  414e99:	(bad)  
  414e9a:	mov    esp,0xd08ba1e5
  414e9f:	pushf  
  414ea0:	or     edi,DWORD PTR [ecx]
  414ea2:	cmp    al,0x28
  414ea4:	pop    edx
  414ea5:	imul   esi,ecx,0xffffff99
  414ea8:	mov    ebp,0x15439276
  414ead:	mov    dh,0x6a
  414eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb0:	push   ss
  414eb1:	mov    al,ds:0x158a1271
  414eb6:	jno    0x414e4c
  414eb8:	clc    
  414eb9:	gs (bad) 
  414ebb:	jmp    0xb6f30534
  414ec0:	(bad)  
  414ec1:	call   0xb39:0xc34012db
  414ec8:	popf   
  414ec9:	inc    edi
  414eca:	lock loopne 0x414eec
  414ecd:	pop    eax
  414ece:	cwde   
  414ecf:	in     al,dx
  414ed0:	sub    bh,BYTE PTR [ebx+0x556f6820]
  414ed6:	or     eax,0x716e21a
  414edb:	jmp    0x3c28:0x69fb7e29
  414ee2:	mov    DWORD PTR [edx],edx
  414ee4:	dec    edx
  414ee5:	and    DWORD PTR [esi+0x52311684],0xc68bc01d
  414eef:	jns    0x414f19
  414ef1:	(bad)  
  414ef2:	(bad)  
  414ef3:	enter  0xa046,0xa
  414ef7:	mov    ds:0x5e0692cd,eax
  414efc:	lods   al,BYTE PTR ds:[esi]
  414efd:	add    eax,0x83680166
  414f02:	push   ebp
  414f03:	cmp    ah,BYTE PTR ds:0x21323b88
  414f09:	jnp    0x414f68
  414f0b:	mov    esi,0x9ab5124e
  414f10:	mov    WORD PTR [edx-0x40],?
  414f13:	pop    ebp
  414f14:	jnp    0x414ea9
  414f16:	mov    cl,0x17
  414f18:	les    edi,FWORD PTR [esi+0x4ee29d68]
  414f1e:	(bad)  
  414f1f:	loopne 0x414f6c
  414f21:	rol    dh,1
  414f23:	and    BYTE PTR [esi-0x2f],ah
  414f26:	stos   DWORD PTR es:[edi],eax
  414f27:	jge    0x414f7d
  414f29:	add    eax,DWORD PTR [ecx]
  414f2b:	dec    eax
  414f2c:	fisubr WORD PTR [esi-0x67]
  414f2f:	push   0xffffffb7
  414f31:	enter  0x27f7,0xd0
  414f35:	ret    0xf290
  414f38:	(bad)  
  414f39:	adc    ebp,DWORD PTR [esi+eax*2+0x281cfc0d]
  414f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f41:	iret   
  414f42:	jp     0x414ec8
  414f44:	cmp    al,0xc4
  414f46:	fsubr  QWORD PTR [eax]
  414f48:	xchg   ebp,eax
  414f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f4a:	xor    edi,0xba32fa65
  414f50:	int    0xe1
  414f52:	mov    al,0xb5
  414f54:	es jmp 0x414f8d
  414f57:	imul   BYTE PTR [eax+0x2a1171d1]
  414f5d:	call   0xfeeb390
  414f62:	test   ebx,0x9420abc4
  414f68:	sbb    al,0xfc
  414f6a:	mov    edx,edi
  414f6c:	jp     0x414f5f
  414f6e:	pop    ecx
  414f6f:	mov    bh,0xf8
  414f71:	ins    DWORD PTR es:[edi],dx
  414f72:	push   0xb5630117
  414f77:	mov    dl,0x71
  414f79:	enter  0x63ee,0x7b
  414f7d:	fwait
  414f7e:	sub    eax,0x270be35f
  414f83:	mov    al,ds:0x23462a91
  414f88:	push   ebx
  414f89:	push   ds
  414f8a:	add    BYTE PTR [edi-0x5],cl
  414f8d:	cmp    al,0x3b
  414f8f:	(bad)  
  414f90:	fs repz xor ebp,DWORD PTR ss:[ebx-0xd9d4734]
  414f99:	xchg   BYTE PTR ds:0x8f2fc6b3,cl
  414f9f:	dec    esp
  414fa0:	and    DWORD PTR [ebx],0x6f62e8d4
  414fa6:	and    DWORD PTR [esi],esp
  414fa8:	jo     0x415028
  414faa:	xor    cl,dh
  414fac:	inc    eax
  414fad:	adc    BYTE PTR [edx-0x42],dh
  414fb0:	sbb    DWORD PTR [edi-0x19],esp
  414fb3:	out    dx,eax
  414fb4:	xchg   ecx,eax
  414fb5:	stos   BYTE PTR es:[edi],al
  414fb6:	stc    
  414fb7:	mov    eax,ds:0x10c2233a
  414fbc:	mov    WORD PTR [edi+0x7d],?
  414fbf:	enter  0x80a9,0xdb
  414fc3:	sbb    ah,dh
  414fc5:	fcomp  QWORD PTR [ecx]
  414fc7:	lock leave 
  414fc9:	aaa    
  414fca:	shr    DWORD PTR [edx+0x7c],1
  414fcd:	icebp  
  414fce:	aaa    
  414fcf:	add    dl,al
  414fd1:	add    bl,al
  414fd3:	lea    eax,[eax+0x72860c2d]
  414fd9:	push   ecx
  414fda:	inc    edx
  414fdb:	pop    esp
  414fdc:	sub    eax,0x8f97a4ec
  414fe1:	mov    ebx,DWORD PTR [edi]
  414fe3:	jp     0x414f69
  414fe5:	nop
  414fe6:	mov    dh,0x9c
  414fe8:	fistp  DWORD PTR [esp+ebp*8-0x5d]
  414fec:	jg     0x414fd6
  414fee:	mov    cl,0x95
  414ff0:	(bad)  
  414ff1:	es aas 
  414ff3:	loope  0x41504f
  414ff5:	cmp    ah,BYTE PTR [ecx+0x35622b06]
  414ffb:	(bad)  
  414ffc:	or     DWORD PTR [ecx-0x67],ecx
  414fff:	jnp    0x41503f
  415001:	(bad)  
  415002:	out    0xc,al
  415004:	enter  0x9163,0x96
  415008:	loop   0x415049
  41500a:	adc    eax,0xf1d57e0d
  41500f:	cld    
  415010:	ja     0x41501b
  415012:	cmp    ch,BYTE PTR [ebp+0x33b57f32]
  415018:	shl    BYTE PTR [ecx+0x4f],cl
  41501b:	lds    ecx,FWORD PTR [edx-0x2d]
  41501e:	jo     0x415051
  415020:	inc    ecx
  415021:	daa    
  415022:	xor    DWORD PTR [ebp+0x54eee05f],edi
  415028:	cs sbb eax,0xab64be39
  41502e:	mov    ds:0xa758fe1e,al
  415033:	fld    TBYTE PTR [ecx]
  415035:	push   0xffffffcf
  415037:	rol    BYTE PTR [edx-0x1e],cl
  41503a:	sbb    DWORD PTR [edi+0x586a1fd8],esp
  415040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415041:	ret    0x401d
  415044:	pop    eax
  415045:	cmp    ebp,esi
  415047:	hlt    
  415048:	clc    
  415049:	jge    0x414fcf
  41504b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41504c:	ss jo  0x41508b
  41504f:	into   
  415050:	cmp    DWORD PTR [ebx+0x6a04f99d],edi
  415056:	inc    esp
  415057:	vmread edx,ebp
  41505a:	xchg   esp,eax
  41505b:	sti    
  41505c:	enter  0x85fa,0x8d
  415060:	mov    BYTE PTR [ebp-0x72aad360],dh
  415066:	iret   
  415067:	or     eax,edi
  415069:	or     DWORD PTR [edi+ecx*1],esp
  41506c:	es push cs
  41506e:	ja     0x4150b2
  415070:	mov    ebp,0xa011ed2b
  415075:	xor    dl,dl
  415077:	mov    ch,0x6d
  415079:	inc    DWORD PTR [ebx+0x18663017]
  41507f:	lea    esi,[edi]
  415081:	scas   al,BYTE PTR es:[edi]
  415082:	adc    BYTE PTR [esp+eiz*2+0x79],0xec
  415087:	stos   DWORD PTR es:[edi],eax
  415088:	add    DWORD PTR [ebx+esi*2-0x6e5bd748],0xc752cf4b
  415093:	out    0x3f,al
  415095:	popa   
  415096:	jp     0x4150a4
  415098:	ins    DWORD PTR es:[edi],dx
  415099:	add    BYTE PTR [esi],cl
  41509b:	push   cs
  41509c:	xor    eax,DWORD PTR [eax-0x5e]
  41509f:	fisubr WORD PTR [esi+0x24]
  4150a2:	aad    0x99
  4150a4:	adc    BYTE PTR [ecx-0x52],0x64
  4150a8:	scas   eax,DWORD PTR es:[edi]
  4150a9:	add    BYTE PTR [ecx+0x6187c364],ah
  4150af:	inc    ebx
  4150b0:	cwde   
  4150b1:	sbb    DWORD PTR [ebp+0xa],ecx
  4150b4:	dec    edx
  4150b5:	imul   ebx,DWORD PTR [edi],0xfbea25da
  4150bb:	js     0x41503f
  4150bd:	(bad)  
  4150be:	mov    dh,0x80
  4150c0:	stos   DWORD PTR es:[edi],eax
  4150c1:	mov    esp,0x41207b56
  4150c6:	test   BYTE PTR [esi],al
  4150c8:	dec    eax
  4150c9:	shl    BYTE PTR [ebp+0x6d180577],cl
  4150cf:	sbb    BYTE PTR [ecx-0x79],0x9b
  4150d3:	bound  edx,QWORD PTR [esi-0x7a]
  4150d6:	popa   
  4150d7:	adc    BYTE PTR [ebp-0x5b],bh
  4150da:	add    al,0x84
  4150dc:	ins    DWORD PTR es:[edi],dx
  4150dd:	fild   DWORD PTR [ebx-0x49]
  4150e0:	adc    dl,dh
  4150e2:	fimul  DWORD PTR [edx+0x5a]
  4150e5:	and    ecx,DWORD PTR [edi]
  4150e7:	rcr    BYTE PTR [ecx+ecx*1+0x4a],0x9b
  4150ec:	xor    DWORD PTR [edx],eax
  4150ee:	mov    ch,0x2d
  4150f0:	icebp  
  4150f1:	test   BYTE PTR [ebp-0x6e],cl
  4150f4:	hlt    
  4150f5:	mov    esp,0xb9485746
  4150fa:	in     al,dx
  4150fb:	add    dh,BYTE PTR [ebx+0x1af31656]
  415101:	xchg   esi,eax
  415102:	xchg   esi,eax
  415103:	das    
  415104:	in     eax,0xed
  415106:	pusha  
  415107:	jbe    0x41513c
  415109:	push   ecx
  41510a:	in     eax,dx
  41510b:	mov    ch,0xfa
  41510d:	addr16 dec esi
  41510f:	pop    esp
  415110:	test   al,0x92
  415112:	pusha  
  415113:	hlt    
  415114:	jno    0x415181
  415116:	in     eax,dx
  415117:	adc    DWORD PTR [eax+0x59],0x863c1396
  41511e:	leave  
  41511f:	cld    
  415120:	xchg   al,al
  415122:	and    eax,0xdbb3aa16
  415127:	mov    WORD PTR [ebx-0x7b703a7c],?
  41512d:	mov    eax,ds:0x6fcff53c
  415132:	cmp    edx,DWORD PTR [ebx]
  415134:	cdq    
  415135:	outs   dx,BYTE PTR ds:[esi]
  415136:	dec    edx
  415137:	inc    ecx
  415138:	or     BYTE PTR [ebp+0x15a21b55],dl
  41513e:	mov    cl,0xb3
  415140:	add    dh,BYTE PTR [ebx]
  415142:	std    
  415143:	mov    cl,0x7b
  415145:	cmp    ah,BYTE PTR [esi]
  415147:	mov    WORD PTR [eax+0x66971709],cs
  41514d:	mov    edx,0x1568ebe2
  415152:	inc    edx
  415153:	iret   
  415154:	outs   dx,DWORD PTR ds:[esi]
  415155:	cwde   
  415156:	aas    
  415157:	sbb    al,0xf7
  415159:	cdq    
  41515a:	mov    dl,0xa2
  41515c:	sbb    eax,0x27ffcda3
  415161:	jae    0x415169
  415163:	push   cs
  415164:	cmp    ebp,edi
  415166:	outs   dx,DWORD PTR ds:[esi]
  415167:	mov    ebp,0x476f62f8
  41516c:	data16 sti 
  41516e:	xchg   edx,eax
  41516f:	sub    al,0xa7
  415171:	dec    eax
  415172:	dec    ebp
  415173:	pop    edx
  415174:	sbb    ecx,0x207744b3
  41517a:	pusha  
  41517b:	or     eax,0x3c694de8
  415180:	js     0x4151d7
  415182:	mov    ds:0xd787cb25,eax
  415187:	push   edi
  415188:	push   es
  415189:	sbb    bl,0x6c
  41518c:	inc    ecx
  41518d:	bound  eax,QWORD PTR [edi]
  41518f:	loope  0x41515d
  415191:	(bad)  
  415192:	sbb    ch,BYTE PTR [edi]
  415194:	jmp    0x41516a
  415196:	add    ecx,ecx
  415198:	in     eax,0x71
  41519a:	fdivr  QWORD PTR [ecx+ebx*2+0x72d045af]
  4151a1:	mov    esi,0xa30da089
  4151a6:	ficom  DWORD PTR [ecx]
  4151a8:	add    BYTE PTR [ecx+0x7663b934],al
  4151ae:	sub    edx,DWORD PTR [ecx+eax*2]
  4151b1:	cmp    al,0x5b
  4151b3:	data16 loop 0x41513b
  4151b6:	sbb    al,0xd9
  4151b8:	or     al,0x13
  4151ba:	lock pop ds
  4151bc:	mov    ecx,0x79c07061
  4151c1:	push   ebx
  4151c2:	dec    ebp
  4151c3:	adc    bl,bh
  4151c5:	leave  
  4151c6:	pop    ebx
  4151c7:	xchg   DWORD PTR [eax-0x4f],esi
  4151ca:	out    dx,eax
  4151cb:	js     0x4151ec
  4151cd:	cmp    BYTE PTR [ebx+ebx*1+0x3],ah
  4151d1:	aam    0xab
  4151d3:	in     eax,0x4c
  4151d5:	pusha  
  4151d6:	out    0xf1,eax
  4151d8:	add    al,0x5e
  4151da:	add    esi,ecx
  4151dc:	test   eax,0xf69bba6d
  4151e1:	or     BYTE PTR [ebx-0x28562dc2],ch
  4151e7:	or     eax,0xdade220a
  4151ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ed:	stos   BYTE PTR es:[edi],al
  4151ee:	xchg   DWORD PTR [ebx-0x39546d5a],edx
  4151f4:	cmp    dh,bh
  4151f6:	loop   0x41522a
  4151f8:	xchg   edi,eax
  4151f9:	shl    BYTE PTR [eax+0x56],1
  4151fc:	test   DWORD PTR [ebp-0x52],esi
  4151ff:	add    BYTE PTR [esi-0x26],al
  415202:	mov    ds,esi
  415204:	repz inc ecx
  415206:	xlat   BYTE PTR ds:[ebx]
  415207:	push   ss
  415208:	add    BYTE PTR [ebx+0x45],0x1e
  41520c:	jge    0x415241
  41520e:	or     esi,DWORD PTR [eax-0x7d1834a1]
  415214:	add    DWORD PTR [eax+0xa],edx
  415217:	mov    edi,0x5689c5c
  41521c:	pop    ds
  41521d:	in     al,dx
  41521e:	mov    eax,ds:0x5167adb
  415223:	jmp    0x415269
  415225:	loope  0x4151b3
  415227:	(bad)  
  415228:	and    DWORD PTR [ebp+0x29671387],eax
  41522e:	idiv   BYTE PTR [edi-0x17]
  415231:	stos   DWORD PTR es:[edi],eax
  415232:	fst    QWORD PTR [edx]
  415234:	mov    cl,0xa9
  415236:	mov    ds:0xb1a6df10,eax
  41523b:	cmp    eax,0x13d3b19a
  415240:	mov    ah,0xa8
  415242:	xchg   ecx,eax
  415243:	in     eax,0x42
  415245:	sbb    al,0xef
  415247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415248:	push   0x1d
  41524a:	out    dx,al
  41524b:	(bad)  
  41524c:	mov    esi,0x4d43b703
  415251:	dec    edi
  415252:	ins    DWORD PTR es:[edi],dx
  415253:	xchg   edi,eax
  415254:	mov    bl,BYTE PTR ds:0x77bc664e
  41525a:	cwde   
  41525b:	stos   BYTE PTR es:[edi],al
  41525c:	lods   al,BYTE PTR ds:[esi]
  41525d:	int    0xf
  41525f:	gs shl ch,0xf4
  415263:	test   BYTE PTR [esi-0x1a],0x35
  415267:	jbe    0x415230
  415269:	sub    edi,esi
  41526b:	xlat   BYTE PTR ds:[ebx]
  41526c:	cdq    
  41526d:	int    0x77
  41526f:	push   es
  415270:	mov    ss,WORD PTR fs:[edi-0x56]
  415274:	xchg   ecx,eax
  415275:	push   esp
  415276:	adc    edi,DWORD PTR [edi+ecx*2-0x1a3f7696]
  41527d:	(bad)  
  41527f:	push   0x3599af29
  415284:	(bad)  
  415285:	push   edi
  415286:	push   edi
  415287:	inc    esi
  415288:	gs std 
  41528a:	pop    es
  41528b:	dec    esi
  41528c:	(bad)  
  41528d:	fwait
  41528e:	in     eax,0x99
  415290:	sub    DWORD PTR [esi+ebx*8],edi
  415293:	outs   dx,DWORD PTR ds:[esi]
  415294:	int    0xf0
  415296:	(bad)  
  415297:	lods   eax,DWORD PTR ds:[esi]
  415298:	dec    eax
  415299:	inc    edi
  41529a:	inc    ebx
  41529b:	hlt    
  41529c:	xor    ecx,DWORD PTR [edi]
  41529e:	pop    ss
  41529f:	push   esi
  4152a0:	mov    edi,0xe897960d
  4152a5:	ret    0x169a
  4152a8:	mov    bl,0x95
  4152aa:	adc    BYTE PTR [ebx],0xdf
  4152ad:	loope  0x4152b6
  4152af:	xchg   esp,eax
  4152b0:	jno    0x41524e
  4152b2:	retf   0x9c45
  4152b5:	in     eax,0xdd
  4152b7:	daa    
  4152b8:	adc    DWORD PTR [ebx],edx
  4152ba:	dec    esi
  4152bb:	inc    DWORD PTR [esi+0x41]
  4152be:	in     eax,dx
  4152bf:	or     ch,BYTE PTR [edx-0x61ebb6a2]
  4152c5:	clc    
  4152c6:	jno    0x4152b8
  4152c8:	push   0x50
  4152ca:	jmp    0xb912:0x553ea83
  4152d1:	add    DWORD PTR [esi-0x7e],esp
  4152d4:	shl    ah,cl
  4152d6:	xchg   BYTE PTR [ecx-0xf],cl
  4152d9:	pushf  
  4152da:	jge    0x415309
  4152dc:	xchg   edx,eax
  4152dd:	sbb    DWORD PTR [edi-0x62],esi
  4152e0:	xchg   bh,cl
  4152e2:	adc    DWORD PTR [eax],esi
  4152e4:	arpl   WORD PTR [edx-0xf],bp
  4152e7:	inc    esp
  4152e8:	retf   
  4152e9:	outs   dx,DWORD PTR ds:[esi]
  4152ea:	sar    dh,cl
  4152ec:	pusha  
  4152ed:	push   edi
  4152ee:	cmp    DWORD PTR [ecx+0x61],0x54fafb42
  4152f5:	xor    DWORD PTR [ebp+0x16],eax
  4152f8:	sahf   
  4152f9:	aaa    
  4152fa:	loope  0x415341
  4152fc:	imul   ebx,DWORD PTR [edi],0x4c
  4152ff:	cdq    
  415300:	jbe    0x415351
  415302:	sub    al,0xa
  415304:	mov    ah,0x82
  415306:	pop    edi
  415307:	dec    ebx
  415308:	adc    edx,DWORD PTR [ebp+0x41]
  41530b:	and    bl,BYTE PTR [eax-0x35]
  41530e:	icebp  
  41530f:	mov    bl,0x95
  415311:	mov    bh,0xdf
  415313:	sub    DWORD PTR [edi+eiz*2+0x8],ebp
  415317:	and    BYTE PTR [ebp+0x75],0x85
  41531b:	test   eax,0x96ea6fea
  415320:	xchg   esi,eax
  415321:	sbb    eax,0xcec2a302
  415326:	(bad)  
  415327:	iret   
  415328:	ja     0x41539a
  41532a:	popa   
  41532b:	jmp    0xd4ee:0xd43f0660
  415332:	retf   
  415333:	pop    ds
  415334:	adc    BYTE PTR [ecx-0x67],ch
  415337:	mov    ebx,edx
  415339:	not    BYTE PTR [ebp-0x2c]
  41533c:	pop    esi
  41533d:	pop    ds
  41533e:	xchg   edi,eax
  41533f:	pop    es
  415340:	add    ecx,ebp
  415342:	sub    edi,esp
  415344:	sbb    BYTE PTR [edx],cl
  415346:	mov    al,ds:0xd5fb85f2
  41534b:	sti    
  41534c:	pop    es
  41534d:	(bad)  
  41534e:	fwait
  41534f:	push   eax
  415350:	iret   
  415351:	mov    edi,DWORD PTR [ebp+eiz*8-0x1180e397]
  415358:	xchg   esi,eax
  415359:	mov    ah,0x72
  41535b:	mov    BYTE PTR [ebp-0x5b81d197],al
  415361:	cmp    al,0x8f
  415363:	les    ecx,FWORD PTR [edi+0x2f]
  415366:	in     al,dx
  415367:	inc    esi
  415368:	dec    eax
  415369:	std    
  41536a:	xchg   edi,eax
  41536b:	popa   
  41536c:	adc    ecx,DWORD PTR [eax-0x3dac802f]
  415372:	jb     0x41530c
  415374:	sbb    BYTE PTR [edi-0x7],dh
  415377:	dec    eax
  415378:	shr    ebp,1
  41537a:	gs or  bl,0x1c
  41537e:	stos   DWORD PTR es:[edi],eax
  41537f:	pop    esi
  415380:	xchg   edi,eax
  415381:	or     BYTE PTR [ebx+0x456326f4],0x1c
  415388:	fwait
  415389:	stos   BYTE PTR es:[edi],al
  41538a:	push   0xb
  41538c:	adc    ecx,DWORD PTR gs:[ebx-0x2e]
  415390:	jecxz  0x4153c8
  415392:	aaa    
  415393:	or     BYTE PTR [edx-0x28dcc83a],bl
  415399:	jmp    0xbaa1fc4d
  41539e:	cmp    eax,0x52ff5608
  4153a3:	enter  0x1e39,0xa0
  4153a7:	xchg   DWORD PTR [ebp+0x66],ecx
  4153aa:	lods   eax,DWORD PTR ds:[esi]
  4153ab:	inc    esp
  4153ac:	dec    ecx
  4153ad:	les    edx,FWORD PTR [ecx-0x6a]
  4153b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153b1:	dec    eax
  4153b2:	sbb    DWORD PTR [eax+0x7af180bd],0x6af5294a
  4153bc:	mov    dh,0x2
  4153be:	repnz inc ebp
  4153c0:	or     eax,0xe93b92cd
  4153c5:	iret   
  4153c6:	or     edx,DWORD PTR [esi]
  4153c8:	mov    BYTE PTR [ebp+0x6356516c],dh
  4153ce:	bswap  edi
  4153d0:	pop    esi
  4153d1:	add    ebx,ebx
  4153d3:	inc    ebp
  4153d4:	sub    bl,BYTE PTR [edx]
  4153d6:	les    eax,FWORD PTR [ebp+0x12c99577]
  4153dc:	adc    esp,DWORD PTR ds:0x86a892b8
  4153e2:	out    dx,al
  4153e3:	lods   eax,DWORD PTR ds:[esi]
  4153e4:	fist   DWORD PTR [edi+eiz*1-0x7d]
  4153e8:	in     al,dx
  4153e9:	mov    dh,0xce
  4153eb:	or     esp,DWORD PTR [edx+0x5c6eea54]
  4153f1:	loop   0x415378
  4153f3:	or     BYTE PTR [edx+0xdd073f5],ah
  4153f9:	std    
  4153fa:	lds    esi,FWORD PTR cs:[esp+esi*1+0x2e]
  4153ff:	and    edi,DWORD PTR [ebp+0x6270422d]
  415405:	fbld   TBYTE PTR [ecx-0x552a4cac]
  41540b:	adc    esp,edx
  41540d:	popf   
  41540e:	cs push edi
  415410:	and    al,0x8f
  415412:	cwde   
  415413:	cli    
  415414:	jmp    0xb8b6:0xad41903e
  41541b:	in     al,0xfe
  41541d:	or     DWORD PTR [ebx-0x28],0xffffff98
  415421:	lds    esp,FWORD PTR [ebp-0x691b60b]
  415427:	(bad)  
  415428:	fld    TBYTE PTR [eax+0x7]
  41542b:	iret   
  41542c:	mov    eax,ss
  41542e:	mov    eax,0xbda49579
  415433:	retf   0xc7e0
  415436:	es ja  0x41544b
  415439:	pop    ebx
  41543a:	cmc    
  41543b:	dec    ebp
  41543c:	inc    ebp
  41543d:	push   0x8f8f0c5d
  415442:	mov    eax,0x286511a1
  415447:	cmp    DWORD PTR [edx-0x7],0x12b054ae
  41544e:	jge    0x415474
  415450:	lods   eax,DWORD PTR ds:[esi]
  415451:	push   ecx
  415452:	inc    edi
  415453:	out    0x45,al
  415455:	pop    ebx
  415456:	imul   ebx,DWORD PTR [edi+edx*4],0x33b9845d
  41545d:	cwde   
  41545e:	leave  
  41545f:	sub    DWORD PTR [edx+ebx*4+0x24],ecx
  415463:	sbb    DWORD PTR [esi+eax*2-0x1b],ecx
  415467:	repnz ffree st(4)
  41546a:	nop
  41546b:	sub    esp,DWORD PTR [ebx]
  41546d:	lods   eax,DWORD PTR ss:[esi]
  41546f:	mov    eax,0x12997047
  415474:	rcr    esi,1
  415476:	repz or BYTE PTR [edx-0x7],0x9c
  41547b:	in     al,dx
  41547c:	push   eax
  41547d:	sub    al,0xbe
  41547f:	sub    BYTE PTR [ecx],dh
  415481:	jmp    0x4154ea
  415483:	and    BYTE PTR [edi-0x45415809],dh
  415489:	push   es
  41548a:	jbe    0x415484
  41548c:	dec    ebp
  41548d:	jnp    0x4154a2
  41548f:	lock leave 
  415491:	mov    cl,0x92
  415493:	push   0xffffffa9
  415495:	rcr    esi,0x62
  415498:	retf   0xa454
  41549b:	leave  
  41549c:	push   ds
  41549d:	iret   
  41549e:	out    0x82,al
  4154a0:	test   al,0x18
  4154a2:	dec    ecx
  4154a3:	inc    eax
  4154a4:	(bad)  
  4154a5:	pop    eax
  4154a6:	jmp    0x33c3c308
  4154ab:	push   cs
  4154ac:	xor    eax,0x92953352
  4154b2:	xor    BYTE PTR [edi-0x4c],ah
  4154b5:	loopne 0x4154f0
  4154b7:	aad    0xa4
  4154b9:	sar    DWORD PTR fs:[eax],cl
  4154bc:	push   esi
  4154bd:	xchg   esi,eax
  4154be:	jl     0x4154c9
  4154c0:	xor    eax,0xac442ca9
  4154c5:	pop    esp
  4154c6:	dec    ebx
  4154c7:	icebp  
  4154c8:	pop    ecx
  4154c9:	xchg   edx,eax
  4154ca:	ins    DWORD PTR es:[edi],dx
  4154cb:	xor    al,0xeb
  4154cd:	ror    DWORD PTR [edi-0x72],cl
  4154d0:	mov    esi,0xd725057b
  4154d5:	test   al,0xe8
  4154d7:	push   ds
  4154d8:	mov    ecx,0xd66e7517
  4154dd:	shr    DWORD PTR [edx-0x16],1
  4154e0:	scas   al,BYTE PTR es:[edi]
  4154e1:	fsubr  QWORD PTR [edi]
  4154e3:	aam    0x67
  4154e5:	idiv   DWORD PTR [edi]
  4154e7:	aaa    
  4154e8:	aam    0x3d
  4154ea:	push   esi
  4154eb:	jae    0x4154ab
  4154ed:	jmp    0x904f:0x93ad0ece
  4154f4:	ss test DWORD PTR fs:[esi],ebx
  4154f8:	xchg   edi,eax
  4154f9:	aaa    
  4154fa:	les    esi,FWORD PTR [ebp+ebx*2-0x55]
  4154fe:	mov    ?,WORD PTR [edi]
  415500:	in     eax,0xad
  415502:	jle    0x41551c
  415504:	cmp    BYTE PTR [ebx],0xe5
  415507:	xlat   BYTE PTR ds:[ebx]
  415508:	xor    eax,0x6a85c90a
  41550d:	sub    ah,BYTE PTR [ebx-0xb5530d8]
  415513:	or     eax,DWORD PTR gs:[ebx+eiz*2-0x975d644]
  41551b:	int3   
  41551c:	leave  
  41551d:	rcl    eax,0x1b
  415520:	sub    al,0xb7
  415522:	lea    ecx,[edx-0x7b]
  415525:	xchg   ecx,esp
  415527:	sbb    DWORD PTR [ebx+0x72c3f51d],eax
  41552d:	gs out dx,al
  41552f:	(bad)  [ebp+edx*2+0x4d]
  415533:	rol    bh,cl
  415535:	aaa    
  415536:	mov    ebx,0xa2d98cff
  41553b:	(bad)  
  41553c:	cld    
  41553d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41553e:	jns    0x415559
  415540:	dec    edi
  415541:	bswap  eax
  415543:	xchg   ebp,eax
  415544:	mov    gs,WORD PTR [eax+0x5e]
  415547:	mov    edx,0x21004933
  41554c:	jle    0x41550f
  41554e:	into   
  41554f:	stc    
  415550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415551:	call   0x9f0de054
  415556:	rcl    BYTE PTR ds:0xa25a6c60,0xb1
  41555d:	out    dx,eax
  41555e:	mov    ah,0x6f
  415560:	(bad)  
  415561:	cli    
  415562:	test   DWORD PTR [edx],ecx
  415564:	retf   0xb547
  415567:	ins    BYTE PTR es:[edi],dx
  415568:	xlat   BYTE PTR ds:[ebx]
  415569:	dec    esi
  41556a:	xchg   ecx,eax
  41556b:	popa   
  41556c:	push   ss
  41556d:	xchg   ecx,eax
  41556e:	dec    ecx
  41556f:	xchg   ebp,eax
  415570:	lock push ecx
  415572:	push   ebx
  415573:	imul   ebx,DWORD PTR [ebx],0x73
  415576:	pop    ss
  415577:	in     eax,dx
  415578:	aad    0xd2
  41557a:	or     esp,DWORD PTR [esi-0x66]
  41557d:	pusha  
  41557e:	ror    DWORD PTR [edx-0x754c4a9],0x75
  415585:	jle    0x41552d
  415587:	loope  0x4155e3
  415589:	mov    edi,0x28293d7a
  41558e:	adc    ch,BYTE PTR [ecx+0x29]
  415591:	ins    DWORD PTR es:[edi],dx
  415592:	int3   
  415593:	dec    ebp
  415594:	inc    BYTE PTR [eax+0x10775ddc]
  41559a:	cs add al,0x44
  41559d:	in     al,dx
  41559e:	cmp    al,0x5b
  4155a0:	popf   
  4155a1:	sub    BYTE PTR [edi-0x2f1c856f],bh
  4155a7:	cmp    eax,0x50fef654
  4155ac:	push   ebx
  4155ad:	push   0x5f4b0f9a
  4155b2:	mov    ds:0x3c5297ea,al
  4155b7:	xlat   BYTE PTR ds:[ebx]
  4155b8:	ror    BYTE PTR [esp+ecx*8+0x43],cl
  4155bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155bd:	cli    
  4155be:	cmp    al,0x6e
  4155c0:	aas    
  4155c1:	lea    ecx,[eax+0x2f]
  4155c4:	inc    ax
  4155c6:	sub    al,0xb8
  4155c8:	cwde   
  4155c9:	bound  edi,QWORD PTR [esi+edi*1+0x17]
  4155cd:	sbb    cl,BYTE PTR [edx-0x33b2f3f1]
  4155d3:	pop    esi
  4155d4:	ret    0xfa54
  4155d7:	je     0x41558f
  4155d9:	mov    dl,0x5a
  4155db:	inc    ebp
  4155dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155dd:	mov    ds:0x4fe6e4cf,eax
  4155e2:	adc    DWORD PTR ds:0xc6f26e43,0xc3791f24
  4155ec:	int    0x2b
  4155ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155ef:	inc    edi
  4155f0:	nop
  4155f1:	fxam   
  4155f3:	cli    
  4155f4:	dec    ebp
  4155f5:	mov    eax,0xe3d38ba7
  4155fa:	adc    DWORD PTR [edx-0x2a],edi
  4155fd:	shl    DWORD PTR [esi],0xc3
  415600:	data16 (bad) 
  415602:	fidivr DWORD PTR [edi-0x14]
  415605:	fmul   DWORD PTR [ebx+eax*2+0x67]
  415609:	in     eax,0x2d
  41560b:	dec    esi
  41560c:	pop    esi
  41560d:	add    DWORD PTR [edi-0x63032840],esi
  415613:	(bad)  
  415614:	std    
  415615:	out    dx,al
  415616:	mov    edx,0xab1f7e75
  41561b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41561c:	rcl    BYTE PTR [ebx-0x20b135dc],0x32
  415623:	add    al,0xc6
  415625:	dec    edi
  415626:	test   eax,0x45241a13
  41562b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41562c:	scas   al,BYTE PTR es:[edi]
  41562d:	sbb    esi,DWORD PTR [eax]
  41562f:	test   al,ah
  415631:	mul    DWORD PTR [ebx]
  415633:	and    ebx,ebp
  415635:	shl    dh,cl
  415637:	cmp    BYTE PTR [ecx],ch
  415639:	sub    dh,BYTE PTR [eax+0x6d]
  41563c:	repz add ecx,esi
  41563f:	adc    eax,0x96278583
  415644:	loope  0x4155e8
  415646:	and    al,0x8f
  415648:	mov    eax,0xdfce5af8
  41564d:	add    al,0x5b
  41564f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415650:	dec    edx
  415651:	sbb    esp,ecx
  415653:	sub    DWORD PTR [edi+0x28093a9b],0x63
  41565a:	xchg   edx,eax
  41565b:	jbe    0x415637
  41565d:	or     eax,0xf5738451
  415662:	push   ebx
  415663:	jmp    0x1e47230f
  415668:	dec    esi
  415669:	(bad)  
  41566a:	sub    bl,BYTE PTR [eax-0x7c3c3df9]
  415670:	cmp    DWORD PTR [ebx-0x47133b96],ecx
  415676:	xor    DWORD PTR [esi+ecx*1],esp
  415679:	pusha  
  41567a:	and    DWORD PTR ds:0xf43ff4fb,0x3f51626d
  415684:	cmp    al,0xc3
  415686:	in     al,dx
  415687:	mov    al,ds:0x3d6ab44c
  41568c:	retf   
  41568d:	jns    0x415682
  41568f:	jp     0x4156db
  415691:	out    0xd8,eax
  415693:	push   ds
  415694:	(bad)  
  415695:	mov    ch,0x7d
  415697:	cmp    edx,DWORD PTR [ecx+0x66d934e6]
  41569d:	xor    BYTE PTR [ecx-0x23],ah
  4156a0:	out    0xf0,al
  4156a2:	push   ebx
  4156a3:	pop    ds
  4156a4:	js     0x415638
  4156a6:	cmp    al,0xc5
  4156a8:	push   ebp
  4156a9:	(bad)  
  4156ab:	dec    esi
  4156ac:	adc    eax,0xd4f8f322
  4156b1:	call   0xf265:0xcc105e93
  4156b8:	jbe    0x4156e2
  4156ba:	retf   
  4156bb:	mov    BYTE PTR [edx+0x319b498b],0x8
  4156c2:	jl     0x415664
  4156c4:	lds    ecx,FWORD PTR [eax]
  4156c6:	add    ebx,esi
  4156c8:	mov    eax,DWORD PTR [eax+0x52]
  4156cb:	dec    ebp
  4156cc:	repz mov ?,eax
  4156cf:	cmp    eax,0x61e92961
  4156d4:	dec    ecx
  4156d5:	mov    ch,0x31
  4156d7:	shl    BYTE PTR [edx-0x43],1
  4156da:	in     eax,0x64
  4156dc:	xchg   ebp,eax
  4156dd:	inc    eax
  4156de:	scas   eax,DWORD PTR es:[edi]
  4156df:	mov    eax,ds:0xc798e0bd
  4156e4:	or     eax,0x76a546b8
  4156e9:	cld    
  4156ea:	xchg   esp,eax
  4156eb:	jl     0x415766
  4156ed:	and    DWORD PTR [ecx-0x717bf017],0xb32d080a
  4156f7:	xor    eax,0x8d21ca12
  4156fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156fe:	out    dx,al
  4156ff:	outs   dx,BYTE PTR ds:[esi]
  415700:	push   eax
  415701:	in     al,dx
  415702:	call   0x5241:0x2f36d1a9
  415709:	gs into 
  41570b:	xchg   edi,eax
  41570c:	adc    dl,BYTE PTR [ecx]
  41570e:	lods   eax,DWORD PTR ds:[esi]
  41570f:	jnp    0x415734
  415711:	(bad)  
  415713:	retf   
  415714:	fmul   DWORD PTR [ecx-0x4d9f3528]
  41571a:	mov    bh,0x14
  41571c:	cmp    DWORD PTR [ebp-0x7af61e23],eax
  415722:	sahf   
  415723:	int3   
  415724:	pop    ebp
  415725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415726:	loopne 0x4156eb
  415728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41572a:	cmp    ch,bh
  41572c:	out    0xf,eax
  41572e:	das    
  41572f:	cli    
  415730:	(bad)  
  415731:	std    
  415732:	jmp    0x8f84e7db
  415737:	dec    eax
  415738:	push   esp
  415739:	mov    ebx,0x6e833577
  41573e:	(bad)  
  415740:	gs loopne 0x415742
  415743:	add    BYTE PTR [esi+0x7c],dl
  415746:	sbb    ecx,DWORD PTR [esi-0x2c]
  415749:	or     BYTE PTR ds:[eax-0x5a],al
  41574d:	push   fs
  41574f:	fwait
  415750:	test   al,0x9b
  415752:	mov    WORD PTR [eax+eiz*2],cs
  415755:	inc    ebp
  415756:	jmp    0x1d23f1a1
  41575b:	pop    esp
  41575c:	jae    0x41571a
  41575e:	outs   dx,BYTE PTR ds:[esi]
  41575f:	xor    edi,edx
  415761:	pop    esp
  415762:	cmp    al,0x85
  415764:	sbb    DWORD PTR [ecx],esi
  415766:	or     BYTE PTR [edi+0x77],cl
  415769:	mov    ds:0xd03b651a,al
  41576e:	loop   0x41578d
  415770:	or     al,BYTE PTR ds:0xe113bad5
  415776:	xchg   ecx,eax
  415777:	popf   
  415778:	pop    ebx
  415779:	dec    edi
  41577a:	loope  0x4157a2
  41577c:	arpl   WORD PTR [edx+0x17],cx
  41577f:	pushf  
  415780:	dec    ebx
  415781:	cmc    
  415782:	xchg   esp,eax
  415783:	push   ss
  415784:	std    
  415785:	sahf   
  415786:	push   es
  415787:	int3   
  415788:	pop    esp
  415789:	xchg   ebp,eax
  41578a:	sub    bh,ch
  41578c:	mov    edx,0xe62c3e7c
  415791:	cmp    DWORD PTR [ebp-0x17c58d39],ebp
  415797:	adc    ebp,DWORD PTR [esi-0x27c4154e]
  41579d:	jnp    0x4157bf
  41579f:	xor    bh,ah
  4157a1:	mov    dl,0xdd
  4157a3:	stos   BYTE PTR es:[edi],al
  4157a4:	rcl    BYTE PTR ds:0x3635a69d,1
  4157aa:	xchg   edi,eax
  4157ab:	mov    esp,DWORD PTR [ebp+ebp*1-0x31]
  4157af:	ins    DWORD PTR es:[edi],dx
  4157b0:	fiadd  WORD PTR [esi-0x4db4845a]
  4157b6:	bound  ebp,QWORD PTR [ebp-0x1d]
  4157b9:	and    dh,BYTE PTR [ecx-0x56]
  4157bc:	addps  xmm1,XMMWORD PTR [esi-0x28]
  4157c0:	cs adc eax,0xeb16a0a4
  4157c6:	mov    ch,0x11
  4157c8:	or     al,BYTE PTR cs:[ebx+0x332d7429]
  4157cf:	aad    0xb1
  4157d1:	bound  eax,QWORD PTR [esi+0x1c]
  4157d4:	mov    dh,0xec
  4157d6:	in     eax,0x17
  4157d8:	mov    gs:0xfcc497f8,al
  4157de:	into   
  4157df:	mov    al,0x5e
  4157e1:	ds push edi
  4157e3:	sub    edi,DWORD PTR [esp+edx*1]
  4157e6:	or     ch,cl
  4157e8:	out    0x6e,eax
  4157ea:	cmp    DWORD PTR [edx],ebp
  4157ec:	fld    TBYTE PTR [edi]
  4157ee:	dec    ecx
  4157ef:	mov    bl,0xb3
  4157f1:	add    BYTE PTR [bx-0x5f64],dh
  4157f6:	fist   DWORD PTR [ebp+0x6d]
  4157f9:	pop    ebp
  4157fa:	in     al,dx
  4157fb:	mov    bl,0x16
  4157fd:	jb     0x415830
  4157ff:	js     0x41579c
  415801:	sbb    BYTE PTR [eax],ah
  415803:	sbb    eax,0xa81c9213
  415808:	dec    esi
  415809:	and    eax,0x7af255c7
  41580e:	sub    DWORD PTR [ebp+0x6a],edx
  415811:	adc    edi,ecx
  415813:	out    0x5a,al
  415815:	pop    ebp
  415816:	jns    0x4157e0
  415818:	adc    esi,DWORD PTR [ebp+0x5d666030]
  41581e:	mov    eax,0x108824b3
  415823:	xchg   eax,ebx
  415825:	dec    esp
  415826:	daa    
  415827:	cmp    BYTE PTR [edi+ecx*4-0xa],bh
  41582b:	inc    edi
  41582c:	mov    dl,0xc9
  41582e:	push   ebp
  41582f:	mov    ch,0x4d
  415831:	xor    al,0x13
  415833:	fs jo  0x41582e
  415836:	aam    0xa
  415838:	outs   dx,BYTE PTR ds:[esi]
  415839:	jnp    0x4158a3
  41583b:	(bad)  
  41583c:	stc    
  41583d:	pushf  
  41583e:	pop    ss
  41583f:	mov    ebx,0x4ff19d01
  415844:	or     BYTE PTR [ecx],bl
  415846:	jmp    0x739c:0xd6b3e18f
  41584d:	add    al,0xde
  41584f:	cmp    al,0x45
  415851:	add    eax,0xa320b69c
  415856:	jecxz  0x41582a
  415858:	dec    ecx
  415859:	push   0x5f
  41585b:	lods   al,BYTE PTR ds:[esi]
  41585c:	mov    esp,0x64e482db
  415861:	inc    ecx
  415862:	ss lock mov edi,0x81457d11
  415869:	inc    edx
  41586a:	call   0xd88:0x89d9103a
  415871:	sub    cl,BYTE PTR [esp+ecx*8]
  415874:	jp     0x4157fc
  415876:	jmp    0x41582e
  415878:	xchg   DWORD PTR [edx+0x6d],edx
  41587b:	xchg   ebp,eax
  41587c:	jg     0x4158df
  41587e:	adc    eax,0xda19fbbb
  415883:	pop    edi
  415884:	(bad)  
  415885:	mov    bh,0x67
  415887:	add    al,0x13
  415889:	cs xchg ebp,eax
  41588b:	(bad)  
  41588c:	(bad)  
  41588d:	cmp    dl,BYTE PTR ds:0xa0e39ec6
  415893:	out    0xd6,eax
  415895:	jg     0x415897
  415897:	adc    eax,DWORD PTR [ecx]
  415899:	sti    
  41589a:	int    0xfa
  41589c:	inc    DWORD PTR [ecx]
  41589e:	sbb    al,0x18
  4158a0:	adc    eax,0x82677dc8
  4158a5:	cli    
  4158a6:	add    dl,0x75
  4158a9:	lock inc esp
  4158ab:	jg     0x4158ba
  4158ad:	jnp    0x4158d4
  4158af:	loopne 0x415876
  4158b1:	jmp    FWORD PTR [ebp+0x70]
  4158b4:	pop    eax
  4158b5:	dec    edx
  4158b6:	sbb    BYTE PTR [edx],0xfb
  4158b9:	addr16 out 0x58,eax
  4158bc:	out    dx,eax
  4158bd:	inc    esp
  4158be:	xor    BYTE PTR [ecx+0x363c689e],ch
  4158c4:	push   ebp
  4158c5:	cmp    al,0xb5
  4158c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158c8:	mov    ah,BYTE PTR [edx]
  4158ca:	push   ds
  4158cb:	scas   eax,DWORD PTR es:[edi]
  4158cc:	dec    ebp
  4158cd:	loopne 0x4158c8
  4158cf:	out    dx,eax
  4158d0:	ja     0x41586f
  4158d2:	addr16 sbb al,0xf3
  4158d5:	mov    cl,0x7d
  4158d7:	mov    ecx,esp
  4158d9:	mov    esp,0x5e6b0e64
  4158de:	leave  
  4158df:	xor    ebp,DWORD PTR [eax]
  4158e1:	aam    0x4c
  4158e3:	mov    cl,0x3a
  4158e5:	mov    dl,0x7a
  4158e7:	into   
  4158e8:	or     eax,DWORD PTR [eax]
  4158ea:	stos   DWORD PTR es:[edi],eax
  4158eb:	in     eax,0x19
  4158ed:	call   0xfe7f0b9e
  4158f2:	shl    DWORD PTR [edx+0x66],cl
  4158f5:	or     DWORD PTR [edx],ecx
  4158f7:	imul   ebx,DWORD PTR [ebp+0x61],0x53
  4158fb:	sub    bh,BYTE PTR [ebx+ebx*4]
  4158fe:	(bad)  
  4158ff:	shl    BYTE PTR [edx],1
  415901:	popf   
  415902:	xor    al,0x16
  415904:	sub    ah,BYTE PTR ds:0x7cfe905e
  41590a:	shl    DWORD PTR [esi+0x25],1
  41590d:	test   al,0xe1
  41590f:	pop    es
  415910:	inc    edi
  415911:	push   ss
  415912:	or     BYTE PTR [esi],dh
  415914:	ret    0x172a
  415917:	pusha  
  415918:	sbb    al,0x57
  41591a:	scas   eax,DWORD PTR es:[edi]
  41591b:	mov    ch,0x48
  41591d:	jmp    0xa2d7:0x2d74e983
  415924:	int    0x10
  415926:	imul   ebp,DWORD PTR [edx-0x47108b68],0xfb199f80
  415930:	push   edi
  415931:	add    ch,0x23
  415934:	dec    ecx
  415935:	mov    bh,0xb6
  415937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415938:	mov    ah,0x72
  41593a:	cmp    al,0x45
  41593c:	loope  0x4159af
  41593e:	out    dx,eax
  41593f:	retf   
  415940:	sub    DWORD PTR [edx],esp
  415942:	sbb    al,0xbd
  415944:	mov    bl,0x3
  415946:	ss push ebx
  415948:	mov    bh,0x53
  41594a:	xchg   ah,bl
  41594c:	outs   dx,BYTE PTR ds:[esi]
  41594d:	dec    edi
  41594e:	ficom  DWORD PTR [eax]
  415950:	push   ss
  415951:	mov    ah,0xbf
  415953:	jns    0x4158e7
  415955:	push   es
  415956:	repnz out dx,al
  415958:	mov    dh,0x32
  41595a:	lods   eax,DWORD PTR ds:[esi]
  41595b:	mov    eax,ds:0xee19e6f5
  415960:	cmp    cl,BYTE PTR [eax+0x5dcb97c8]
  415966:	repz repz (bad) 
  415969:	jmp    0x45915a13
  41596e:	sub    BYTE PTR [esi+0x64],bl
  415971:	fcomp  DWORD PTR [eax-0x2565a8fd]
  415977:	cmp    eax,0xbd5200a3
  41597c:	jno    0x415959
  41597e:	ret    0x3d08
  415981:	bound  edx,QWORD PTR [edx+0x3]
  415984:	sbb    al,0x15
  415986:	fs popf 
  415988:	mov    dh,0xe8
  41598a:	push   0x13
  41598c:	pop    esp
  41598d:	mov    ds,ebx
  41598f:	jo     0x415974
  415991:	mov    DWORD PTR [ecx],0xb82ca7b0
  415997:	out    0x4f,al
  415999:	loope  0x4159ad
  41599b:	aas    
  41599c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41599d:	ja     0x4159f8
  41599f:	test   BYTE PTR [ebx],dl
  4159a1:	add    eax,0xaab66ac5
  4159a6:	imul   eax,ebp,0x7d3a6e8e
  4159ac:	push   edi
  4159ad:	mov    edi,DWORD PTR [ecx+0x48]
  4159b0:	call   0x7dbb:0xd58fcc91
  4159b7:	inc    esi
  4159b8:	leave  
  4159b9:	das    
  4159ba:	xchg   edi,eax
  4159bb:	out    0x41,al
  4159bd:	and    DWORD PTR [ebp-0x75e3a929],edi
  4159c3:	inc    esp
  4159c4:	dec    eax
  4159c5:	mul    esi
  4159c7:	cmp    eax,0x5d69d291
  4159cc:	arpl   WORD PTR ds:0xb9989ea5,dx
  4159d2:	fadd   st(4),st
  4159d4:	daa    
  4159d5:	gs add eax,0x71943164
  4159db:	dec    edx
  4159dc:	mov    bh,BYTE PTR [eax-0x47]
  4159df:	pop    esi
  4159e0:	sbb    al,0x3
  4159e2:	lea    eax,[eax-0x53]
  4159e5:	jbe    0x415a55
  4159e7:	ror    DWORD PTR [edi-0x72],cl
  4159ea:	push   ss
  4159eb:	adc    eax,0xfdc0abc3
  4159f0:	retf   
  4159f1:	(bad)  
  4159f2:	mov    WORD PTR [edi],ds
  4159f4:	xor    dh,BYTE PTR [ebp-0xf]
  4159f7:	outs   dx,BYTE PTR ds:[esi]
  4159f8:	xchg   ebx,eax
  4159f9:	adc    BYTE PTR [eax-0x72b8b8d6],ch
  4159ff:	sub    BYTE PTR [eax+0x64],dl
  415a02:	fldl2t 
  415a04:	sbb    ah,BYTE PTR [ecx+0x365f59ee]
  415a0a:	fisttp WORD PTR [ebx+0x1f]
  415a0d:	cld    
  415a0e:	call   0x57915f9f
  415a13:	mov    ecx,0x4c36ead0
  415a18:	jb     0x415a99
  415a1a:	jmp    0x8cd4e096
  415a1f:	jle    0x4159fc
  415a21:	inc    ebp
  415a22:	and    ebp,esp
  415a24:	mov    DWORD PTR [edi-0x1f1e2bdc],esi
  415a2a:	or     cl,BYTE PTR [esi+edx*2+0x53]
  415a2e:	in     eax,dx
  415a2f:	jnp    0x415a7c
  415a31:	mov    ch,0x8c
  415a33:	sub    al,0xf6
  415a35:	mov    bl,0xe5
  415a37:	je     0x415a1b
  415a39:	xlat   BYTE PTR ds:[ebx]
  415a3a:	xchg   ebx,eax
  415a3b:	mov    ah,0x83
  415a3d:	xchg   esi,eax
  415a3e:	(bad)  
  415a3f:	loopne 0x415a45
  415a41:	in     eax,0x6b
  415a43:	xchg   ecx,eax
  415a44:	push   es
  415a45:	adc    al,0x60
  415a47:	or     eax,0x3763564e
  415a4c:	fadd   QWORD PTR [ebx]
  415a4e:	push   edx
  415a4f:	xchg   edx,eax
  415a50:	mov    esi,edx
  415a52:	xchg   BYTE PTR [eax+ecx*8+0x51759fa0],ch
  415a59:	xchg   esi,eax
  415a5a:	mov    BYTE PTR [ecx],bl
  415a5c:	test   al,0xd1
  415a5e:	rcr    BYTE PTR [esi-0x6fb9d0cd],cl
  415a64:	push   0x59e0529d
  415a69:	imul   esp,DWORD PTR [esi-0x54],0x35
  415a6d:	inc    edi
  415a6e:	xchg   ecx,eax
  415a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a70:	mov    cl,0x2c
  415a72:	out    0xa,eax
  415a74:	loop   0x415a4e
  415a76:	ss in  al,dx
  415a78:	les    ebx,FWORD PTR [edx]
  415a7a:	dec    eax
  415a7b:	dec    DWORD PTR [edi+0x691e4912]
  415a81:	adc    ch,BYTE PTR [ebx-0x54]
  415a84:	daa    
  415a85:	repnz push ebp
  415a87:	xlat   BYTE PTR ds:[ebx]
  415a88:	les    sp,DWORD PTR [ecx-0x9]
  415a8c:	clc    
  415a8d:	push   0x45
  415a8f:	bt     ebp,esi
  415a92:	push   ecx
  415a93:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a95:	outs   dx,DWORD PTR ds:[esi]
  415a96:	call   0x607c:0x11e90823
  415a9d:	rcl    BYTE PTR [ecx],1
  415a9f:	icebp  
  415aa0:	fcom   QWORD PTR [ebx]
  415aa2:	mov    eax,fs
  415aa4:	lock arpl WORD PTR [edx+0x5a],dx
  415aa8:	dec    ecx
  415aa9:	fadd   QWORD PTR [esp+edi*2]
  415aac:	mov    ebp,0x8652ff51
  415ab1:	mov    eax,esp
  415ab3:	push   ss
  415ab4:	sbb    BYTE PTR [ebx+0x523bb88e],dl
  415aba:	adc    BYTE PTR [ebx],0x9f
  415abd:	ins    DWORD PTR es:[edi],dx
  415abe:	push   ds
  415abf:	push   edi
  415ac0:	or     DWORD PTR [esi],eax
  415ac2:	jne    0x415ae6
  415ac4:	xor    eax,0xc937b1b9
  415ac9:	xchg   ebx,eax
  415aca:	adc    BYTE PTR cs:[esi-0x43],bl
  415ace:	imul   eax,edi,0x110fead2
  415ad4:	xor    ch,BYTE PTR [edx+0x3d]
  415ad7:	mov    ch,0xd3
  415ad9:	pop    es
  415ada:	ret    
  415adb:	fild   DWORD PTR [ebx-0x6fa094e8]
  415ae1:	arpl   WORD PTR [ebx+0x4d],dx
  415ae4:	push   eax
  415ae5:	imul   esi,DWORD PTR [edx+0x32],0x71
  415ae9:	push   esi
  415aea:	je     0x415ac1
  415aec:	imul   edi,edx,0xffffffe2
  415aef:	add    DWORD PTR [eax],0xd988fd8
  415af5:	sahf   
  415af6:	scas   al,BYTE PTR es:[edi]
  415af7:	mov    ecx,0x66968ce5
  415afc:	dec    DWORD PTR [ecx-0x21]
  415aff:	push   ecx
  415b00:	fst    DWORD PTR [edx]
  415b02:	hlt    
  415b03:	mov    esi,0x808a4d29
  415b08:	xlat   BYTE PTR ds:[ebx]
  415b09:	es pop ebp
  415b0b:	ins    DWORD PTR es:[edi],dx
  415b0c:	fist   WORD PTR [edi-0x15a0edbb]
  415b12:	adc    BYTE PTR [ebp+esi*8+0x43],al
  415b16:	ret    
  415b17:	sub    BYTE PTR ss:[esi],ah
  415b1a:	retf   
  415b1b:	xchg   DWORD PTR [edi+0x62],esi
  415b1e:	dec    esi
  415b1f:	pop    edx
  415b20:	iret   
  415b21:	inc    ebp
  415b22:	wbinvd 
  415b24:	shl    DWORD PTR [edi],0x1e
  415b27:	jecxz  0x415b91
  415b29:	mov    edx,0xdcebaf97
  415b2e:	xchg   ebx,eax
  415b2f:	out    0xde,al
  415b31:	xchg   BYTE PTR [edx+0x38],al
  415b34:	pop    ecx
  415b35:	xor    ch,BYTE PTR [esi-0x55]
  415b38:	push   eax
  415b39:	fcom   st(2)
  415b3b:	ret    
  415b3c:	mov    esp,0x620497e7
  415b41:	jo     0x415b09
  415b43:	sub    ebx,DWORD PTR [ecx]
  415b45:	xlat   BYTE PTR ds:[ebx]
  415b46:	retf   
  415b47:	xchg   esi,eax
  415b48:	loopne 0x415b04
  415b4a:	sti    
  415b4b:	ds jns 0x415b39
  415b4e:	aad    0x4d
  415b50:	test   DWORD PTR [edi+edi*1],ebx
  415b53:	test   eax,0x9b8645a9
  415b58:	out    dx,eax
  415b59:	repnz gs sahf 
  415b5c:	push   ebp
  415b5d:	sub    BYTE PTR [esi+0x5c6f8d2c],bh
  415b63:	mov    cl,BYTE PTR [edi+0x5f]
  415b66:	sub    ch,dh
  415b68:	sub    eax,0xc46e845a
  415b6d:	and    DWORD PTR [ebx+edi*8+0x34],esi
  415b71:	(bad)  
  415b72:	push   edx
  415b73:	nop
  415b74:	cmp    BYTE PTR [ecx+esi*8-0x47],ch
  415b78:	xor    al,0x53
  415b7a:	and    BYTE PTR [ecx],dl
  415b7c:	mov    esp,DWORD PTR [ecx]
  415b7e:	cmc    
  415b7f:	xor    BYTE PTR [esi-0x73],ch
  415b82:	cmp    al,0x3d
  415b84:	in     al,dx
  415b85:	sub    al,0x48
  415b87:	retf   0xee29
  415b8a:	fwait
  415b8b:	lods   eax,DWORD PTR ds:[esi]
  415b8c:	ret    0xc977
  415b8f:	mov    bl,0xcb
  415b91:	retf   0xe9d0
  415b94:	cmp    DWORD PTR [ecx+0x58f43c72],0xb0550c5c
  415b9e:	dec    edi
  415b9f:	leave  
  415ba0:	pop    ss
  415ba1:	and    eax,0xcdd5817c
  415ba6:	adc    ebx,ecx
  415ba8:	lods   eax,DWORD PTR ds:[esi]
  415ba9:	clc    
  415baa:	pop    es
  415bab:	or     DWORD PTR [ebp-0x54],ebx
  415bae:	rol    bl,0x1f
  415bb1:	inc    esp
  415bb2:	jp     0x415bfc
  415bb4:	push   ss
  415bb5:	stc    
  415bb6:	jp     0x415bf6
  415bb8:	inc    edi
  415bb9:	dec    edx
  415bba:	fcmovu st,st(4)
  415bbc:	shl    esi,cl
  415bbe:	test   eax,0x7f21925f
  415bc3:	mov    cl,0xde
  415bc5:	inc    esp
  415bc6:	cld    
  415bc7:	(bad)  
  415bc8:	and    DWORD PTR [edx+0x48c0fb],eax
  415bce:	and    dh,BYTE PTR [eax+0x765af436]
  415bd4:	inc    esp
  415bd5:	xor    bh,bl
  415bd7:	jbe    0x415c03
  415bd9:	(bad)  
  415bda:	fst    DWORD PTR ds:0x90c2b09b
  415be0:	jbe    0x415b73
  415be2:	xchg   esp,esp
  415be4:	test   eax,0x80af9641
  415be9:	mov    bh,0xff
  415beb:	xor    eax,0x10c78792
  415bf0:	ja     0x415c34
  415bf2:	mov    DWORD PTR [edx],ebx
  415bf4:	shl    BYTE PTR [esi-0x69],1
  415bf7:	pop    ebx
  415bf8:	cwde   
  415bf9:	and    BYTE PTR [eax],0x62
  415bfc:	dec    edx
  415bfd:	ins    BYTE PTR es:[edi],dx
  415bfe:	popa   
  415bff:	or     al,0x3
  415c01:	mov    esp,0x4c3dbf94
  415c06:	xor    eax,0x21dae68c
  415c0b:	popa   
  415c0c:	addr16 sti 
  415c0e:	push   cs
  415c0f:	adc    eax,0x495031dc
  415c14:	fstp   DWORD PTR [eax]
  415c16:	call   0x9bda:0x757dd740
  415c1d:	dec    esi
  415c1e:	fsub   DWORD PTR [ebx-0x62236aa2]
  415c24:	out    dx,eax
  415c25:	pop    ds
  415c26:	adc    eax,0x856f50d7
  415c2b:	ds push 0x84ea2526
  415c31:	out    0x0,eax
  415c33:	pop    edi
  415c34:	sbb    DWORD PTR [ebp+ebx*1+0x48],0xcfb3834f
  415c3c:	iret   
  415c3d:	xchg   BYTE PTR [ecx-0x530d60e4],al
  415c43:	push   ebp
  415c44:	in     al,0xca
  415c46:	int3   
  415c47:	punpcklbw mm0,DWORD PTR [edi]
  415c4a:	xchg   ebp,eax
  415c4b:	jmp    0x415c9c
  415c4d:	test   DWORD PTR [ebp-0x7d],edx
  415c50:	jmp    0x415bee
  415c52:	fwait
  415c53:	iret   
  415c54:	lea    ebx,[ebp-0x53]
  415c57:	and    eax,DWORD PTR [ecx-0x6]
  415c5a:	jo     0x415bf6
  415c5c:	loopne 0x415c87
  415c5e:	jnp    0x415c2c
  415c60:	mov    al,bh
  415c62:	jo     0x415c66
  415c64:	aad    0xaa
  415c66:	push   edi
  415c67:	push   esp
  415c68:	mov    al,0x2d
  415c6a:	mov    bh,0x8b
  415c6c:	cs ins BYTE PTR es:[edi],dx
  415c6e:	mov    ch,0x13
  415c70:	arpl   WORD PTR [eax-0x3f],ax
  415c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c74:	into   
  415c75:	push   0x5faf466b
  415c7a:	stos   DWORD PTR es:[edi],eax
  415c7b:	lock jb 0x415c4b
  415c7e:	jne    0x415cd7
  415c80:	aas    
  415c81:	lds    esp,FWORD PTR [edi+edi*4-0x70bdf53c]
  415c88:	scas   eax,DWORD PTR es:[edi]
  415c89:	std    
  415c8a:	lods   al,BYTE PTR ds:[esi]
  415c8b:	test   DWORD PTR [eax],esi
  415c8d:	pop    ds
  415c8e:	popf   
  415c8f:	sbb    BYTE PTR [eax],ah
  415c91:	lock xchg edi,eax
  415c93:	jmp    0x40b6:0xb967af5a
  415c9a:	in     eax,0x8d
  415c9c:	sub    esi,DWORD PTR [edx+eax*2-0x46]
  415ca0:	(bad)  
  415ca3:	jo     0x415cba
  415ca5:	jp     0x415c29
  415ca7:	stc    
  415ca8:	pop    ecx
  415ca9:	out    dx,al
  415caa:	sbb    DWORD PTR [edi+eiz*2-0x496352d],eax
  415cb1:	and    edx,DWORD PTR [ecx+0x1d5db4dc]
  415cb7:	arpl   sp,bx
  415cb9:	mov    edi,0xf1eddb60
  415cbe:	arpl   WORD PTR [edx],di
  415cc0:	das    
  415cc1:	pop    edi
  415cc2:	pop    ebp
  415cc3:	xchg   edi,eax
  415cc4:	add    al,0x79
  415cc6:	leave  
  415cc7:	mov    DWORD PTR [ecx-0x5e],ebx
  415cca:	jecxz  0x415ca6
  415ccc:	cmp    esp,esp
  415cce:	dec    edi
  415ccf:	fistp  QWORD PTR [ebx-0x17a3e5e5]
  415cd5:	mov    al,BYTE PTR [ecx]
  415cd7:	add    DWORD PTR [edx+0x1f],ebp
  415cda:	or     dh,BYTE PTR [ebx-0x58]
  415cdd:	ds and al,0xe8
  415ce0:	pop    ecx
  415ce1:	outs   dx,DWORD PTR ds:[esi]
  415ce2:	shr    al,0xb4
  415ce5:	ficom  DWORD PTR [eax-0x2fe64a5b]
  415ceb:	adc    dh,dh
  415ced:	call   0x7ff78598
  415cf2:	(bad)
  415cf5:	arpl   WORD PTR [edi],ax
  415cf7:	test   al,0x3c
  415cf9:	mov    al,0xff
  415cfb:	push   ss
  415cfc:	mov    BYTE PTR [edi+0x3570451e],bl
  415d02:	icebp  
  415d03:	jmp    0x46ba:0xbb611c9c
  415d0a:	jne    0x415c96
  415d0c:	mov    ds,WORD PTR [edx+ecx*8]
  415d0f:	or     DWORD PTR [eax-0x3a],ebx
  415d12:	pop    ebp
  415d13:	inc    edx
  415d14:	xor    al,0xf8
  415d16:	pusha  
  415d17:	pop    esi
  415d18:	mov    bl,0xd7
  415d1a:	adc    al,0xaa
  415d1c:	div    ecx
  415d1e:	push   esi
  415d1f:	inc    ecx
  415d20:	test   BYTE PTR [edx],dl
  415d22:	push   0x557fac73
  415d27:	in     eax,0x47
  415d29:	jns    0x415cb0
  415d2b:	or     DWORD PTR [edx],ecx
  415d2d:	(bad)  
  415d2e:	out    0x66,eax
  415d30:	xor    ebp,DWORD PTR [ebx]
  415d32:	xlat   BYTE PTR ds:[ebx]
  415d33:	and    cl,BYTE PTR [esi+0x48642764]
  415d39:	xor    al,ah
  415d3b:	pop    ds
  415d3c:	mov    edi,0x248f2d32
  415d41:	nop
  415d42:	test   BYTE PTR [edi+ecx*4+0x7e],0x94
  415d47:	sub    DWORD PTR [ecx],ebp
  415d49:	cli    
  415d4a:	sti    
  415d4b:	repnz nop
  415d4d:	test   eax,0xb3efce8b
  415d52:	cld    
  415d53:	inc    esi
  415d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d55:	mov    edi,0x3ce3ae06
  415d5a:	inc    ebx
  415d5b:	mov    al,0x98
  415d5d:	or     BYTE PTR [ebx],al
  415d5f:	xchg   ebx,eax
  415d60:	gs inc esi
  415d62:	sbb    eax,0x641e2be9
  415d67:	test   BYTE PTR [edi],0xbb
  415d6a:	push   ecx
  415d6b:	push   es
  415d6c:	cdq    
  415d6d:	(bad)  
  415d6e:	daa    
  415d6f:	cmp    DWORD PTR [edx+0x7b],0x68
  415d73:	inc    ecx
  415d74:	jle    0x415db2
  415d76:	xchg   BYTE PTR [esp+edi*1],bl
  415d79:	adc    DWORD PTR [ecx-0x27bd7066],eax
  415d7f:	cs scas al,BYTE PTR es:[edi]
  415d81:	jmp    0xfd77044b
  415d86:	aaa    
  415d87:	sbb    al,cl
  415d89:	xor    eax,0xa9c700e2
  415d8e:	jecxz  0x415d36
  415d90:	test   DWORD PTR [ecx+edi*4+0x0],esi
  415d94:	mov    esp,DWORD PTR [edi]
  415d96:	xor    al,0x4f
  415d98:	lods   al,BYTE PTR ds:[esi]
  415d99:	je     0x415dd8
  415d9b:	jle    0x415d81
  415d9d:	in     eax,dx
  415d9e:	mov    cl,0x81
  415da0:	mov    al,0xbf
  415da2:	popa   
  415da3:	cld    
  415da4:	xchg   ebp,eax
  415da5:	pop    eax
  415da6:	std    
  415da7:	adc    DWORD PTR [ecx+0x2e],0x61
  415dab:	mov    eax,ds:0x242af4eb
  415db0:	fwait
  415db1:	push   esi
  415db2:	out    0x86,al
  415db4:	push   edi
  415db5:	je     0x415d40
  415db7:	mov    ch,0xfa
  415db9:	popa   
  415dba:	xor    eax,edx
  415dbc:	push   ecx
  415dbd:	and    BYTE PTR [esp+ebx*2-0x6206770f],cl
  415dc4:	loope  0x415e3b
  415dc6:	mov    esi,DWORD PTR ds:0x1f74e03c
  415dcc:	sub    esp,DWORD PTR ss:[ebp-0x73]
  415dd0:	pusha  
  415dd1:	les    edi,FWORD PTR [ebp+0x6c]
  415dd4:	test   ebp,edx
  415dd6:	xor    esp,DWORD PTR [edi+0x54089e93]
  415ddc:	cwde   
  415ddd:	leave  
  415dde:	ret    
  415ddf:	cmp    al,cl
  415de1:	adc    ebp,DWORD PTR [edi+0x55]
  415de4:	and    BYTE PTR [esi+0x57f78a38],cl
  415dea:	arpl   WORD PTR [edx+0x4cec0137],bp
  415df0:	jbe    0x415e61
  415df2:	imul   eax,DWORD PTR [eax-0x40cdf533],0x14
  415df9:	fistp  DWORD PTR ds:0xca498170
  415dff:	jb     0x415e72
  415e01:	xchg   ecx,eax
  415e02:	and    eax,0x78ea3bae
  415e07:	std    
  415e08:	lock aam 0xfa
  415e0b:	xchg   esi,eax
  415e0c:	push   ds
  415e0d:	fnstenv [edx-0x66c3585d]
  415e13:	xor    DWORD PTR [ebx-0xda545f5],0xffffffb0
  415e1a:	shl    DWORD PTR [edi-0x8],1
  415e1d:	jbe    0x415dc9
  415e1f:	lds    esi,FWORD PTR [eax-0x17831507]
  415e25:	pop    ds
  415e26:	test   BYTE PTR [ebx],0x58
  415e29:	repnz les eax,FWORD PTR [edi-0x75]
  415e2d:	mov    al,0x7a
  415e2f:	aas    
  415e30:	and    eax,0x60c0e536
  415e35:	fadd   st,st(3)
  415e37:	push   0x43d1a990
  415e3c:	cmp    al,BYTE PTR [esi+edx*8-0x7c]
  415e40:	and    eax,0x97c0482d
  415e45:	out    dx,eax
  415e46:	lods   eax,DWORD PTR ds:[esi]
  415e47:	dec    eax
  415e48:	(bad)  
  415e49:	in     al,dx
  415e4a:	int    0xd3
  415e4c:	(bad)  
  415e4d:	dec    edi
  415e4e:	or     edi,DWORD PTR ds:0xa4131ca1
  415e54:	inc    ebp
  415e55:	push   edi
  415e56:	push   ebp
  415e57:	mov    BYTE PTR [esp+eax*2],bl
  415e5a:	lock fwait
  415e5c:	xchg   BYTE PTR [ebx+edi*1+0x26],bl
  415e60:	out    dx,eax
  415e61:	mov    eax,0x755f0a95
  415e66:	out    dx,al
  415e67:	loope  0x415e26
  415e69:	xchg   edx,eax
  415e6a:	pop    ds
  415e6b:	rol    BYTE PTR [ebx-0x12],0x45
  415e6f:	mov    dh,0xe5
  415e71:	dec    edx
  415e72:	retf   
  415e73:	push   ebx
  415e74:	and    DWORD PTR [edx+edi*1],0xffffffeb
  415e78:	xlat   BYTE PTR ds:[ebx]
  415e79:	cmp    ebx,0xa334a528
  415e7f:	cmp    BYTE PTR [ebx+0x6bb3b244],ch
  415e85:	push   0xa82740fb
  415e8a:	cdq    
  415e8b:	ficom  DWORD PTR [esp+edx*8+0x25]
  415e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e90:	mov    ah,0x34
  415e92:	iret   
  415e93:	xor    ah,BYTE PTR [esi-0x77aac418]
  415e99:	xchg   ebx,eax
  415e9a:	hlt    
  415e9b:	pop    ds
  415e9c:	lock int 0x2e
  415e9f:	(bad)  
  415ea0:	outs   dx,DWORD PTR ds:[esi]
  415ea1:	xlat   BYTE PTR ds:[ebx]
  415ea2:	or     eax,DWORD PTR [edx+0x68]
  415ea5:	cli    
  415ea6:	jb     0x415e97
  415ea8:	sbb    eax,0x45e62c1c
  415ead:	jge    0x415e64
  415eaf:	aam    0x65
  415eb1:	push   0xe8ad8b98
  415eb6:	cli    
  415eb7:	idiv   DWORD PTR [edi]
  415eb9:	fcom   DWORD PTR [edi-0x2dc88c9d]
  415ebf:	xchg   DWORD PTR [eax+eax*1+0x1c60b1a6],ebp
  415ec6:	or     BYTE PTR [esi+0x76],bl
  415ec9:	mov    ds:0xea298b4f,eax
  415ece:	shl    ebx,cl
  415ed0:	int    0x96
  415ed2:	inc    esp
  415ed3:	dec    ebx
  415ed4:	dec    edi
  415ed5:	cs jb  0x415e65
  415ed8:	mov    ebp,0x6edf4a01
  415edd:	dec    edi
  415ede:	arpl   WORD PTR [esi-0x66],dx
  415ee1:	dec    edx
  415ee2:	sbb    al,0xe5
  415ee4:	retf   0x2c0a
  415ee7:	sbb    dl,ah
  415ee9:	mov    ch,0x0
  415eeb:	in     eax,0x9e
  415eed:	sub    bh,BYTE PTR [edi]
  415eef:	aas    
  415ef0:	fimul  DWORD PTR [ebp+0x1c]
  415ef3:	hlt    
  415ef4:	vpcmpgtw xmm3,xmm0,XMMWORD PTR [eax+0x38]
  415ef9:	jae    0x415f21
  415efb:	repnz retf 
  415efd:	push   ebp
  415efe:	sub    DWORD PTR [esi+0x38],0xfffffff3
  415f02:	inc    edx
  415f03:	xchg   ecx,eax
  415f04:	and    BYTE PTR [edi+0x76],ch
  415f07:	or     BYTE PTR [edx+eax*4],ah
  415f0a:	out    dx,al
  415f0b:	das    
  415f0c:	xchg   bl,bh
  415f0e:	xchg   edx,eax
  415f0f:	or     eax,0xc82b1505
  415f14:	bound  ecx,QWORD PTR [ebx-0x50]
  415f17:	or     esi,DWORD PTR [eax-0xdfac57a]
  415f1d:	(bad)  
  415f1e:	fldcw  WORD PTR [ecx]
  415f20:	add    ah,bl
  415f22:	adc    eax,0x8f70a34b
  415f27:	in     eax,dx
  415f28:	mov    dl,0x77
  415f2a:	scas   eax,DWORD PTR es:[edi]
  415f2b:	jne    0x415ed0
  415f2d:	add    ebp,DWORD PTR [edx-0x77a31db7]
  415f33:	ret    0x6c91
  415f36:	fcom   DWORD PTR [ebp+0x19]
  415f39:	cmp    eax,DWORD PTR [edx]
  415f3b:	and    eax,0x3eec8cc7
  415f40:	retf   
  415f41:	adc    DWORD PTR [eax+edi*4+0x4aec04cd],edx
  415f48:	pop    esi
  415f49:	sbb    BYTE PTR [ebx+0x18c68c37],bh
  415f4f:	int    0x5a
  415f51:	pop    edi
  415f52:	nop
  415f53:	or     eax,0xaa95dc94
  415f58:	dec    edi
  415f59:	push   ds
  415f5a:	cwde   
  415f5b:	push   cs
  415f5c:	push   DWORD PTR [ecx-0x32]
  415f5f:	ret    0x9623
  415f62:	call   0x30e5c1d6
  415f67:	(bad)  
  415f69:	fmul   QWORD PTR [edx+ebp*1-0x17a7c2a]
  415f70:	adc    al,0xf1
  415f72:	jnp    0x415fad
  415f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f75:	test   BYTE PTR ds:0xf22f513c,dh
  415f7b:	pop    ecx
  415f7d:	test   al,0x1f
  415f7f:	cmc    
  415f80:	inc    ebx
  415f81:	fidiv  DWORD PTR [ebp+0x0]
  415f84:	repz add al,0x5e
  415f87:	enter  0x58c5,0xc9
  415f8b:	or     DWORD PTR [edx+0x4b],0xfffffff9
  415f8f:	mov    edi,0xd2107bc2
  415f94:	ror    dl,0x67
  415f97:	add    bh,0x57
  415f9a:	cmp    cl,BYTE PTR [eax+0x254f43b2]
  415fa0:	lahf   
  415fa1:	fimul  WORD PTR [ebx+0x57]
  415fa4:	jmp    0x416023
  415fa6:	mov    ebx,0x8f303c78
  415fab:	loopne 0x415faa
  415fad:	dec    eax
  415fae:	inc    edi
  415faf:	xor    al,0x3d
  415fb1:	ret    0x8729
  415fb4:	ret    0x28b9
  415fb7:	in     eax,0xb0
  415fb9:	sub    ebp,0x18
  415fbc:	pop    ecx
  415fbd:	inc    edi
  415fbe:	xchg   BYTE PTR [edx],bl
  415fc0:	adc    ecx,edi
  415fc2:	jbe    0x415fdc
  415fc4:	or     DWORD PTR [esi+0x1f00e633],0x586a4639
  415fce:	fwait
  415fcf:	mul    BYTE PTR [edx+0x56]
  415fd2:	out    dx,eax
  415fd3:	(bad)
  415fd6:	scas   al,BYTE PTR es:[edi]
  415fd7:	mov    eax,0x2526ce6c
  415fdc:	xchg   edx,eax
  415fdd:	xchg   esp,eax
  415fde:	ja     0x415fef
  415fe0:	repz dec ebx
  415fe2:	(bad)  
  415fe3:	sub    BYTE PTR [edi-0xa559f0],cl
  415fe9:	mov    bl,0x8
  415feb:	scas   al,BYTE PTR es:[edi]
  415fec:	sbb    ch,BYTE PTR [edx+0x50013940]
  415ff2:	mov    dl,0xa4
  415ff4:	pop    ecx
  415ff5:	loopne 0x416008
  415ff7:	jp     0x415fb8
  415ff9:	push   es
  415ffa:	cdq    
  415ffb:	pop    ecx
  415ffc:	cs fwait
  415ffe:	cli    
  415fff:	sub    edx,ebp
  416001:	sub    eax,0x210dc200
  416006:	pop    ss
  416007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416008:	push   edx
  416009:	inc    esi
  41600a:	inc    esi
  41600b:	hlt    
  41600c:	inc    eax
  41600d:	pop    ecx
  41600e:	xchg   edx,eax
  41600f:	cmp    DWORD PTR [eax+ebx*2+0x67],esi
  416013:	adc    edx,DWORD PTR gs:[esi-0x336c28d4]
  41601a:	push   ds
  41601b:	pop    ebp
  41601c:	repz call 0x5e606c93
  416022:	aad    0x67
  416024:	lds    edi,FWORD PTR [eax+0x40]
  416027:	cmp    DWORD PTR [esp+ebp*1-0x22],0x5
  41602c:	xor    al,0x85
  41602e:	push   0xd
  416030:	jmp    0x415fef
  416032:	add    eax,0xa645a334
  416037:	cwde   
  416038:	jmp    0x2169a0d0
  41603d:	out    dx,al
  41603e:	js     0x416057
  416040:	add    al,0x51
  416042:	mul    DWORD PTR [eax+0x26]
  416045:	shl    DWORD PTR [ecx-0x64],0xd7
  416049:	inc    ebx
  41604a:	arpl   WORD PTR [esi+0x64],di
  41604d:	or     eax,0x25b24611
  416052:	pop    ecx
  416053:	cmp    eax,0xafe05d3a
  416058:	add    esi,eax
  41605a:	sahf   
  41605b:	sub    eax,DWORD PTR [edx+0x5d4db215]
  416061:	cld    
  416062:	mov    BYTE PTR [esi+eiz*2],cl
  416065:	or     cl,cl
  416067:	xlat   BYTE PTR ds:[ebx]
  416068:	aam    0xd9
  41606a:	imul   edx,DWORD PTR [esi+0x71],0xffffff8b
  41606e:	shl    dh,1
  416070:	and    eax,edx
  416072:	ins    DWORD PTR es:[edi],dx
  416073:	mov    ebx,0x7c01a797
  416078:	xchg   esi,eax
  416079:	jmp    0x80a4122d
  41607e:	add    DWORD PTR [esi+0x2a6f8727],edi
  416084:	fidivr WORD PTR [edx]
  416086:	iret   
  416087:	dec    edx
  416088:	jmp    0x4160e3
  41608a:	sbb    al,0xd2
  41608c:	sbb    DWORD PTR [esi],ecx
  41608e:	dec    edx
  41608f:	adc    al,0x70
  416091:	jne    0x4160c2
  416093:	jnp    0x4160e4
  416095:	aas    
  416096:	rol    BYTE PTR [eax+ecx*1+0xf],cl
  41609a:	test   cl,bl
  41609c:	addr16 out dx,al
  41609e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41609f:	xchg   BYTE PTR [ebx-0x20],dl
  4160a2:	shl    DWORD PTR [ebx+0x55884a9a],1
  4160a8:	loopne 0x4160b5
  4160aa:	(bad)  
  4160ab:	jl     0x41612b
  4160ad:	jmp    0x4160c8
  4160af:	pop    ecx
  4160b0:	ja     0x41605f
  4160b2:	dec    ebp
  4160b3:	inc    edx
  4160b4:	inc    esi
  4160b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160b6:	call   0x3bf7fa8b
  4160bb:	adc    eax,0xb1d50df8
  4160c0:	mov    ebx,0xfb556aa5
  4160c5:	loop   0x4160ef
  4160c7:	cli    
  4160c8:	push   0x24031590
  4160cd:	out    0x92,eax
  4160cf:	add    DWORD PTR [ecx+0x0],ebx
  4160d2:	hlt    
  4160d3:	mov    al,ds:0xf77f87a2
  4160d8:	mov    esp,DWORD PTR [edx-0x49]
  4160db:	mov    edi,DWORD PTR [ecx]
  4160dd:	mov    ebx,0x889ed389
  4160e2:	lock pop eax
  4160e4:	leave  
  4160e5:	xor    esi,ecx
  4160e7:	mov    eax,0x8124b7f5
  4160ec:	mov    ch,0xca
  4160ee:	pop    esp
  4160ef:	adc    al,0x6f
  4160f1:	inc    ecx
  4160f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160f3:	pop    ss
  4160f4:	mov    esi,ecx
  4160f6:	sbb    DWORD PTR [ecx],esi
  4160f8:	xlat   BYTE PTR ds:[ebx]
  4160f9:	fimul  WORD PTR [edi+0x21]
  4160fc:	add    esp,DWORD PTR [esi]
  4160fe:	ja     0x4160a5
  416100:	push   ds
  416101:	jbe    0x4160a1
  416103:	in     al,dx
  416104:	(bad)  
  416105:	rcl    BYTE PTR [ecx],cl
  416107:	sti    
  416108:	jns    0x4160dc
  41610a:	loopne 0x41610e
  41610c:	cmp    bl,ch
  41610e:	je     0x4160db
  416110:	or     al,0x3e
  416112:	pop    eax
  416113:	outs   dx,DWORD PTR ds:[esi]
  416114:	cs pop ss
  416116:	push   edx
  416117:	icebp  
  416118:	add    DWORD PTR [edi],esi
  41611a:	jb     0x4160c0
  41611c:	lods   eax,DWORD PTR ds:[esi]
  41611d:	xchg   ebp,eax
  41611e:	sbb    eax,DWORD PTR [edx]
  416120:	xchg   edi,eax
  416121:	dec    ecx
  416122:	add    al,0xe0
  416124:	sbb    bh,BYTE PTR [edi-0x13]
  416127:	sahf   
  416128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41612a:	sbb    ah,bl
  41612c:	inc    esp
  41612d:	inc    edi
  41612e:	cs mov ch,0x86
  416131:	arpl   WORD PTR ds:0x7503a6ea,sp
  416137:	xor    edx,DWORD PTR [edi+0x37febf1b]
  41613d:	or     BYTE PTR [ebx+0x52a10d4d],ch
  416143:	les    edx,FWORD PTR [ebp-0x40e31c81]
  416149:	or     DWORD PTR [ebp-0x3d],ecx
  41614c:	xchg   esp,eax
  41614d:	xchg   esp,eax
  41614e:	mov    ebp,0x7891930
  416153:	aaa    
  416154:	mov    ch,0xe9
  416156:	sti    
  416157:	sbb    bh,BYTE PTR [eax+ecx*4-0x1562e92f]
  41615e:	(bad)  
  41615f:	mov    bh,0xdc
  416161:	popf   
  416162:	xchg   edi,eax
  416163:	adc    DWORD PTR [edi-0x50ed846d],esi
  416169:	adc    BYTE PTR [ebx+0x8b87d13],ah
  41616f:	ret    0xfcee
  416172:	cmp    esi,edx
  416174:	jl     0x416179
  416176:	repnz loope 0x41613b
  416179:	stos   DWORD PTR es:[edi],eax
  41617a:	std    
  41617b:	add    ecx,DWORD PTR [esi+0x7a]
  41617e:	mov    edx,0xb64f17e7
  416183:	xor    ebx,DWORD PTR [ecx-0x3cbf35aa]
  416189:	or     BYTE PTR [eax+eax*4],dh
  41618c:	xlat   BYTE PTR ds:[ebx]
  41618d:	iret   
  41618e:	mov    ch,0x8d
  416190:	fwait
  416191:	mov    cs,WORD PTR [edx-0x30]
  416194:	mov    al,0xe7
  416196:	call   0x3188e977
  41619b:	push   esp
  41619c:	inc    ebp
  41619d:	lods   eax,DWORD PTR cs:[esi]
  41619f:	pop    ecx
  4161a0:	bndldx bnd2,[eax-0x4a]
  4161a4:	pop    ss
  4161a5:	stos   DWORD PTR es:[edi],eax
  4161a6:	in     al,dx
  4161a7:	(bad)  
  4161a8:	call   0xe0daa6a0
  4161ad:	lds    eax,FWORD PTR [esi-0x334b79ac]
  4161b3:	adc    eax,0x105f7843
  4161b8:	and    al,BYTE PTR [ecx]
  4161ba:	int3   
  4161bb:	mov    BYTE PTR ds:0x50b0e59,al
  4161c1:	push   esi
  4161c2:	xor    al,dl
  4161c4:	dec    esp
  4161c5:	ret    0x6c75
  4161c8:	sbb    dh,bh
  4161ca:	sbb    eax,DWORD PTR ds:0x2e405f68
  4161d0:	fcmovb st,st(5)
  4161d2:	scas   eax,DWORD PTR es:[edi]
  4161d3:	test   al,0x3
  4161d5:	or     DWORD PTR [ebp+0xf9bd0f2],edx
  4161db:	and    BYTE PTR [eax],dh
  4161dd:	ret    0x6721
  4161e0:	pop    esi
  4161e1:	mov    al,0xd0
  4161e3:	iret   
  4161e4:	push   edi
  4161e5:	test   eax,0x31940877
  4161ea:	jb     0x4161a1
  4161ec:	cwde   
  4161ed:	lods   al,BYTE PTR ds:[esi]
  4161ee:	inc    edx
  4161ef:	sti    
  4161f0:	out    0xd5,eax
  4161f2:	mov    ds:0xea3a0475,al
  4161f7:	xchg   ebx,eax
  4161f8:	pop    ecx
  4161f9:	dec    esi
  4161fa:	inc    edi
  4161fb:	xchg   edi,eax
  4161fc:	pushf  
  4161fd:	in     al,dx
  4161fe:	push   cs
  4161ff:	inc    edx
  416200:	loopne 0x416267
  416202:	xchg   ebp,eax
  416203:	mov    DWORD PTR ds:0x283909f,ecx
  416209:	retf   0x2825
  41620c:	aaa    
  41620d:	push   es
  41620e:	or     eax,0xfdfe3fdd
  416213:	sahf   
  416214:	mov    ss,esi
  416216:	leave  
  416217:	into   
  416218:	sbb    DWORD PTR [ebp-0x47],esi
  41621b:	fdivr  DWORD PTR [edi]
  41621d:	add    dh,BYTE PTR [ecx+0x66bd826b]
  416223:	imul   BYTE PTR [edx]
  416225:	aaa    
  416226:	aad    0x8
  416228:	arpl   bx,si
  41622a:	sbb    al,0x83
  41622c:	fnstcw WORD PTR [ebx-0x7dece70d]
  416232:	dec    ebp
  416233:	pop    esi
  416234:	popf   
  416235:	retf   
  416236:	ss mov cl,0xbf
  416239:	push   ds
  41623a:	stc    
  41623b:	addr16 jnp 0x4161d5
  41623e:	adc    eax,0xd59edc0
  416243:	es clc 
  416245:	mov    eax,ds:0x571df24b
  41624a:	shl    dh,0x12
  41624d:	pmulhrsw mm7,QWORD PTR [edx-0x22]
  416252:	inc    ecx
  416253:	cmp    al,0x73
  416255:	push   0x57ca2d29
  41625a:	inc    eax
  41625b:	mov    ebx,0xd88ce0d0
  416260:	add    DWORD PTR [eax-0x76],0x6911a76e
  416267:	sub    eax,0xff4371db
  41626c:	int    0xd6
  41626e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41626f:	test   al,0xe7
  416271:	call   0xdfd8398f
  416276:	or     eax,0xe8a3ee51
  41627b:	sbb    esp,eax
  41627d:	jns    0x416240
  41627f:	gs jnp 0x41623b
  416282:	(bad)  
  416283:	iret   
  416284:	jne    0x4162d4
  416286:	outs   dx,DWORD PTR ds:[esi]
  416287:	imul   esp,ebp,0xffffffa0
  41628a:	adc    DWORD PTR [ebp-0x5e4f68b3],0xbe8fd156
  416294:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416296:	mov    ah,0x9b
  416298:	enter  0x1f29,0xb3
  41629c:	sub    eax,0xd3a59bcf
  4162a1:	test   BYTE PTR [edx-0x6],0x66
  4162a5:	push   edx
  4162a6:	mov    eax,0xaa872da
  4162ab:	stc    
  4162ac:	das    
  4162ad:	iret   
  4162ae:	pop    edi
  4162af:	jo     0x416274
  4162b1:	xor    BYTE PTR [edx+0x39],bh
  4162b4:	cmp    BYTE PTR [edx],al
  4162b6:	and    dl,dl
  4162b8:	and    edx,esp
  4162ba:	mov    esi,0x99430da8
  4162bf:	inc    eax
  4162c0:	adc    ecx,DWORD PTR [edi+0x65]
  4162c3:	push   ds
  4162c4:	popf   
  4162c5:	ss in  eax,dx
  4162c7:	dec    ecx
  4162c8:	inc    edi
  4162c9:	js     0x4162a4
  4162cb:	pushf  
  4162cc:	adc    bh,bh
  4162ce:	jp     0x4162e5
  4162d0:	sub    al,0xf7
  4162d2:	std    
  4162d3:	push   edi
  4162d4:	jmp    0x41630b
  4162d6:	mov    ch,cl
  4162d8:	mov    ch,0x75
  4162da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162db:	rol    BYTE PTR [edx+0x42f867c1],cl
  4162e1:	ds in  eax,0x9
  4162e4:	xor    al,0x4f
  4162e6:	mov    edi,0x1dfd0348
  4162eb:	js     0x416283
  4162ed:	inc    esp
  4162ee:	adc    esp,ecx
  4162f0:	xlat   BYTE PTR ds:[ebx]
  4162f1:	sbb    BYTE PTR [eax],cl
  4162f3:	pop    edi
  4162f4:	jo     0x4162d4
  4162f6:	adc    esp,esi
  4162f8:	js     0x41629c
  4162fa:	aad    0xfd
  4162fc:	dec    esp
  4162fd:	xchg   DWORD PTR [ebp-0x6856c659],eax
  416303:	cmp    eax,0xac3bd73
  416308:	adc    bl,BYTE PTR [ebx+eax*4-0x6e]
  41630c:	pop    edx
  41630d:	xchg   edi,eax
  41630e:	dec    eax
  41630f:	(bad)  
  416310:	leave  
  416311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416312:	out    0x52,al
  416314:	push   edx
  416315:	xor    ecx,DWORD PTR [edx]
  416317:	pop    es
  416318:	xchg   esi,eax
  41631a:	pop    edx
  41631b:	jnp    0x416325
  41631d:	ins    BYTE PTR es:[edi],dx
  41631e:	jo     0x41639c
  416320:	xchg   esp,eax
  416321:	mov    ?,WORD PTR fs:[ecx+0x6410b35f]
  416328:	and    BYTE PTR [ebp+0x18],al
  41632b:	mov    ecx,0x1f3844fd
  416330:	mov    bl,0x2a
  416332:	iret   
  416333:	push   edi
  416334:	inc    eax
  416335:	fsubr  DWORD PTR [esi]
  416337:	lea    edi,[ecx-0x1d]
  41633a:	mov    edi,0xf3e3676d
  41633f:	jge    0x4162ff
  416341:	outs   dx,BYTE PTR ds:[esi]
  416342:	mov    ebx,0x40ee0792
  416347:	not    DWORD PTR [esi-0x2fe9cb63]
  41634d:	fstp   TBYTE PTR [ecx-0xa]
  416350:	and    eax,0x3cfb46bc
  416355:	fsub   QWORD PTR [edi-0x22cd11ff]
  41635b:	cdq    
  41635c:	sub    ebp,ebp
  41635e:	mov    ebp,0x44b66e28
  416363:	add    eax,0x3e6fb6ef
  416368:	sbb    ah,bh
  41636a:	xchg   ecx,eax
  41636c:	mov    eax,0x54bd0399
  416371:	int3   
  416372:	or     bl,BYTE PTR [edx-0x22]
  416375:	sahf   
  416376:	pop    es
  416377:	popf   
  416378:	or     BYTE PTR gs:[edx+0x3c],cl
  41637c:	stos   BYTE PTR es:[edi],al
  41637d:	int    0x39
  41637f:	mov    ss,WORD PTR [esi+0x48]
  416382:	jmp    0xa1eab63f
  416387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416388:	fs push 0x930c532b
  41638e:	loope  0x416330
  416390:	mov    edi,0x7f58620
  416395:	(bad)  
  416396:	std    
  416397:	xchg   ebx,eax
  416398:	test   cl,0xe
  41639b:	push   esi
  41639c:	mov    dh,0xbf
  41639e:	pusha  
  41639f:	mov    esp,DWORD PTR [edx+ebp*2-0x63e72605]
  4163a6:	pop    ecx
  4163a7:	xlat   BYTE PTR ds:[ebx]
  4163a8:	adc    al,0x44
  4163aa:	outs   dx,DWORD PTR ds:[esi]
  4163ab:	xchg   esp,eax
  4163ac:	dec    ebp
  4163ad:	popf   
  4163ae:	enter  0x3d4b,0xc1
  4163b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163b3:	adc    al,0xb6
  4163b5:	adc    BYTE PTR [ebp-0x20],ch
  4163b8:	(bad)  
  4163b9:	dec    ecx
  4163ba:	retf   
  4163bb:	sub    BYTE PTR [esp+ecx*1],bh
  4163be:	push   edi
  4163bf:	jae    0x4163ae
  4163c1:	jmp    0x4163d4
  4163c3:	popf   
  4163c4:	or     ch,BYTE PTR [esi-0x70]
  4163c7:	push   ebx
  4163c8:	sbb    DWORD PTR [edx-0x23],ebp
  4163cb:	into   
  4163cc:	jge    0x416395
  4163ce:	sbb    BYTE PTR [ecx-0x46],0x42
  4163d2:	sub    DWORD PTR [edx-0x73],esp
  4163d5:	or     BYTE PTR [ebx+0x276ebb31],0x95
  4163dc:	sub    eax,0xc34b418f
  4163e1:	cmp    ch,dh
  4163e3:	jp     0x416426
  4163e5:	fbld   TBYTE PTR [edx]
  4163e7:	jp     0x4163be
  4163e9:	add    dh,BYTE PTR [ecx+0x7ed04376]
  4163ef:	dec    edi
  4163f0:	pop    ebx
  4163f1:	or     dl,BYTE PTR [ebx-0x5e]
  4163f4:	pop    ss
  4163f5:	push   ecx
  4163f6:	test   eax,0xc296f83d
  4163fb:	gs cmp eax,0x451764c3
  416401:	lods   al,BYTE PTR ds:[esi]
  416402:	imul   edx,DWORD PTR [edx-0x4],0xa0aff720
  416409:	out    0xc9,al
  41640b:	sub    cl,bl
  41640d:	add    eax,ebx
  41640f:	call   0xc4c6db53
  416414:	loopne 0x4163bb
  416416:	ins    DWORD PTR es:[edi],dx
  416417:	adc    al,0xf5
  416419:	adc    eax,0x333751d9
  41641e:	std    
  41641f:	add    al,0x32
  416421:	sar    bh,cl
  416423:	imul   esi,DWORD PTR [edx],0x18
  416426:	cld    
  416427:	adc    edi,DWORD PTR [edx]
  416429:	jp     0x4164aa
  41642b:	mov    ?,WORD PTR [edi+eax*8+0x2dc80dda]
  416432:	xchg   edi,eax
  416433:	(bad)  
  416434:	adc    al,dh
  416436:	sar    DWORD PTR cs:[ebx+0x51],cl
  41643a:	fdiv   DWORD PTR ds:0xaa0c1f95
  416440:	jae    0x416437
  416442:	pop    ecx
  416443:	stos   BYTE PTR es:[edi],al
  416444:	sbb    DWORD PTR [ebx+0x2b97f66d],eax
  41644a:	sub    ah,BYTE PTR [edx+0x28f30d93]
  416450:	hlt    
  416451:	je     0x4164a6
  416453:	mov    dh,0x1b
  416455:	sbb    edx,DWORD PTR [edi-0x57]
  416458:	lods   al,BYTE PTR ds:[esi]
  416459:	mov    ah,BYTE PTR [ebp+ebp*1-0x3d]
  41645d:	push   edi
  41645e:	lea    ebx,[edi]
  416460:	inc    edx
  416461:	cmp    DWORD PTR [ebx-0x59],esp
  416464:	outs   dx,BYTE PTR ds:[esi]
  416465:	jnp    0x4164ca
  416467:	push   ebx
  416468:	xchg   BYTE PTR [ebp-0x283ba391],bl
  41646e:	addr16 popf 
  416470:	ror    BYTE PTR [ecx+0x51],cl
  416473:	pop    ecx
  416474:	pop    ss
  416475:	hlt    
  416476:	mov    ecx,0x7947192
  41647b:	pop    ecx
  41647c:	inc    edx
  41647d:	jl     0x41649a
  41647f:	andnps xmm5,XMMWORD PTR [edx+0x5a]
  416483:	jne    0x41644f
  416485:	jnp    0x4164c8
  416487:	cmp    ah,BYTE PTR [edi]
  416489:	dec    ebx
  41648a:	jg     0x41644e
  41648c:	jmp    0x9dd599ad
  416491:	jmp    0x2a734f0f
  416496:	push   0x46
  416498:	scas   eax,DWORD PTR es:[edi]
  416499:	lods   eax,DWORD PTR ds:[esi]
  41649a:	leave  
  41649b:	fbstp  TBYTE PTR [eax]
  41649d:	pminub mm1,QWORD PTR [esi+0x7e]
  4164a1:	dec    eax
  4164a2:	ins    BYTE PTR es:[edi],dx
  4164a3:	ss push ebp
  4164a5:	sub    BYTE PTR [ebx],cl
  4164a7:	add    al,0x9c
  4164a9:	sbb    al,0x5f
  4164ab:	add    dh,BYTE PTR [edx+0x5]
  4164ae:	cmp    DWORD PTR [edi-0xd9aca24],0x80580842
  4164b8:	and    bl,cl
  4164ba:	and    DWORD PTR [edx-0x75],esp
  4164bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164be:	cld    
  4164bf:	add    esp,DWORD PTR [esi+ebx*8+0xb6db7e2]
  4164c6:	xchg   ebx,eax
  4164c7:	(bad)  
  4164c8:	in     eax,dx
  4164c9:	xor    BYTE PTR [ebx],bh
  4164cb:	or     BYTE PTR [edx+0x41fff36a],cl
  4164d1:	jle    0x4164ad
  4164d3:	mov    dh,ch
  4164d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d6:	out    dx,eax
  4164d7:	pmulhw mm6,QWORD PTR [edx-0x3faf7202]
  4164de:	sub    DWORD PTR [esi-0x3f9dd2e8],esp
  4164e4:	cmp    al,0xbc
  4164e6:	adc    al,0x2
  4164e8:	ins    BYTE PTR es:[edi],dx
  4164e9:	fbstp  TBYTE PTR [ecx+0x3e]
  4164ec:	or     dl,BYTE PTR [edi-0x37]
  4164ef:	scas   eax,DWORD PTR es:[edi]
  4164f0:	into   
  4164f1:	pop    es
  4164f2:	adc    al,0x11
  4164f4:	(bad)  
  4164f5:	int3   
  4164f6:	icebp  
  4164f7:	lock pushf 
  4164f9:	fwait
  4164fa:	call   0xd1b08683
  4164ff:	aam    0xc6
  416501:	fistp  QWORD PTR [edx+0x79]
  416504:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416506:	in     eax,0x83
  416508:	fadd   st(2),st
  41650a:	jle    0x416522
  41650c:	dec    eax
  41650d:	sar    BYTE PTR [ecx-0x30],0xd0
  416511:	pusha  
  416512:	sub    eax,0x7abc2146
  416517:	jb     0x416531
  416519:	push   ds
  41651a:	xchg   esp,eax
  41651b:	je     0x41654b
  41651d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41651e:	jb     0x4164bc
  416520:	pop    DWORD PTR [ebp-0x4e]
  416523:	jecxz  0x416562
  416525:	jnp    0x4164ed
  416527:	mov    ah,0xe5
  416529:	inc    esp
  41652a:	in     al,0x95
  41652c:	xchg   edi,eax
  41652d:	pop    ebp
  41652e:	inc    edi
  41652f:	bswap  ebx
  416531:	test   eax,edx
  416533:	mov    ebx,0xb73c38e5
  416538:	les    eax,FWORD PTR [edx+0x1a]
  41653b:	mov    al,0x61
  41653d:	shr    DWORD PTR [esi+edi*1],cl
  416540:	dec    edi
  416541:	test   DWORD PTR [edi],ebp
  416543:	xor    al,0xe5
  416545:	repz (bad) 
  416547:	jmp    0x3232:0xe3ede2ac
  41654e:	sar    bl,1
  416550:	nop
  416551:	in     al,0xd7
  416553:	test   al,0x99
  416555:	fdivr  DWORD PTR [ebx]
  416557:	shl    BYTE PTR [ebx],1
  416559:	or     DWORD PTR [ecx+0x42],esi
  41655c:	int    0x9b
  41655e:	lods   al,BYTE PTR ds:[esi]
  41655f:	test   DWORD PTR [ebp-0x291f0de],ebx
  416565:	lods   eax,DWORD PTR ds:[esi]
  416566:	pusha  
  416567:	test   eax,0x8d4a431e
  41656c:	shl    BYTE PTR fs:[eax+0x30f29691],1
  416573:	mov    eax,ds:0xe14eca86
  416578:	jg     0x4165b7
  41657a:	mov    ecx,0x587da09f
  41657f:	mov    dl,0xd7
  416581:	fidivr DWORD PTR [edi+0x54]
  416584:	jg     0x416550
  416586:	clc    
  416587:	push   ds
  416588:	adc    al,0x88
  41658a:	jae    0x4165d0
  41658c:	bound  edi,QWORD PTR [edx]
  41658e:	xor    ebx,DWORD PTR [edx]
  416590:	call   0x68ef:0xc178aea5
  416597:	add    al,0xc4
  416599:	mov    edx,DWORD PTR [ebx+ebx*1+0x21]
  41659d:	pushw  es
  41659f:	popfw  
  4165a1:	cmp    ah,bh
  4165a3:	lds    edi,FWORD PTR [eax]
  4165a5:	jo     0x416586
  4165a7:	mov    edx,0x4efc44ae
  4165ac:	das    
  4165ad:	mov    eax,ds:0x9046254a
  4165b2:	mov    eax,ds:0xe382b79e
  4165b7:	inc    ebp
  4165b8:	retf   
  4165b9:	adc    DWORD PTR [esi+0x16056f90],edx
  4165bf:	xor    eax,0xae4f2424
  4165c4:	xor    eax,0x64db8e05
  4165c9:	and    BYTE PTR ds:0x776bc989,0x6c
  4165d0:	mov    cl,0xf9
  4165d2:	sti    
  4165d3:	pop    edi
  4165d4:	rol    DWORD PTR ds:0x8936bf63,0x2b
  4165db:	mov    ebx,0x77756678
  4165e0:	aad    0xcd
  4165e2:	cld    
  4165e3:	aaa    
  4165e4:	dec    edx
  4165e5:	mov    BYTE PTR [ebp+ecx*4+0x6812b324],dh
  4165ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165ed:	xchg   ebp,eax
  4165ee:	push   edx
  4165ef:	retf   
  4165f0:	jno    0x4165da
  4165f2:	imul   eax,DWORD PTR [ecx-0x825b39f],0xdc5367fa
  4165fc:	das    
  4165fd:	xor    BYTE PTR [edi-0xe],ch
  416600:	sysenter 
  416602:	jg     0x4165c8
  416604:	push   esi
  416605:	stc    
  416606:	sub    edi,ebp
  416608:	mov    ch,0xa5
  41660a:	add    ah,BYTE PTR [edx+eax*1-0x353a1a7f]
  416611:	sub    al,0x71
  416613:	dec    eax
  416614:	mov    edi,0x9a05cb8c
  416619:	data16 xlat BYTE PTR ds:[ebx]
  41661b:	cmp    eax,0xfbac77dd
  416620:	popa   
  416621:	popa   
  416622:	xchg   dl,ch
  416624:	inc    ecx
  416625:	(bad)  
  416626:	jae    0x4165ac
  416628:	mov    ch,0x4f
  41662a:	jne    0x4165b9
  41662c:	mov    cl,0xad
  41662e:	fadd   DWORD PTR [edi-0x2d24d9c7]
  416634:	mov    esi,0x918bfff7
  416639:	adc    eax,0x9be2f39b
  41663e:	add    BYTE PTR [ecx],0x73
  416641:	xlat   BYTE PTR ds:[ebx]
  416642:	add    ebp,esi
  416644:	cmc    
  416645:	or     cl,BYTE PTR [edi]
  416647:	stc    
  416648:	jl     0x4165d9
  41664a:	xchg   BYTE PTR [esi],ch
  41664c:	mov    ecx,0xb4bd4d7e
  416651:	jns    0x416635
  416653:	ret    
  416654:	inc    esp
  416655:	mov    bl,0x83
  416657:	in     al,dx
  416658:	pop    edi
  416659:	xor    ebx,edx
  41665b:	and    BYTE PTR [esp+eax*1+0x338ac40f],al
  416662:	int3   
  416663:	popa   
  416664:	inc    eax
  416665:	mov    eax,ds:0x6ca696fa
  41666a:	mov    BYTE PTR [esi],dl
  41666c:	adc    eax,0xe4866518
  416671:	mov    al,0xe4
  416673:	retf   
  416674:	aad    0xa0
  416676:	stc    
  416677:	jnp    0x4166c3
  416679:	pusha  
  41667a:	xor    al,0x88
  41667c:	xchg   ebp,eax
  41667d:	sbb    eax,0xf6be4cd1
  416682:	cdq    
  416683:	adc    edx,DWORD PTR [ecx-0x6d09a80d]
  416689:	xor    cl,bh
  41668b:	push   esp
  41668c:	jle    0x4166d5
  41668e:	and    al,0x27
  416690:	lods   al,BYTE PTR ds:[si]
  416692:	rcl    BYTE PTR ds:0xa463,0x87
  416698:	mov    ecx,0x4353aa03
  41669d:	loope  0x416691
  41669f:	adc    bh,BYTE PTR [esp+ebp*4-0x33]
  4166a3:	or     esi,ebx
  4166a5:	lahf   
  4166a6:	dec    edi
  4166a7:	or     cl,cl
  4166a9:	fdivr  QWORD PTR [ebp+0x1f119ebf]
  4166af:	ja     0x416681
  4166b1:	call   0xaaa0fa7
  4166b6:	mov    eax,0x5787d83e
  4166bb:	cld    
  4166bc:	into   
  4166bd:	test   eax,0x32cb4867
  4166c2:	inc    eax
  4166c3:	sahf   
  4166c4:	sbb    edx,DWORD PTR [esi+ebp*8-0x6]
  4166c8:	or     eax,0xa2ca9d5d
  4166cd:	push   edx
  4166ce:	sahf   
  4166cf:	mov    bh,0xe5
  4166d1:	mov    edx,0x9c460d9a
  4166d6:	jbe    0x4166d2
  4166d8:	pop    edx
  4166d9:	xchg   edi,eax
  4166da:	mov    DWORD PTR [ebx-0x75f12dd4],esp
  4166e0:	test   eax,0xca25da07
  4166e5:	sar    BYTE PTR [eax-0x2f],cl
  4166e8:	dec    eax
  4166e9:	lods   eax,DWORD PTR ds:[esi]
  4166ea:	mov    ah,0xab
  4166ec:	cmp    eax,0x8c32544b
  4166f1:	popf   
  4166f2:	in     eax,0x1a
  4166f4:	or     cl,cl
  4166f6:	int    0x4f
  4166f8:	mov    ecx,0x565610c7
  4166fd:	out    0xf2,eax
  4166ff:	dec    edi
  416700:	and    ecx,edi
  416702:	and    BYTE PTR [edi+0x19],dl
  416705:	xor    ecx,DWORD PTR [ebp+0x1]
  416708:	loop   0x4166fc
  41670a:	stc    
  41670b:	mov    ch,0x59
  41670d:	ins    DWORD PTR es:[edi],dx
  41670e:	and    BYTE PTR [esi+0x36],bh
  416711:	inc    esp
  416712:	cmp    ah,BYTE PTR [edi-0x644ac5d4]
  416718:	cld    
  416719:	inc    ebp
  41671a:	test   al,0xed
  41671c:	mov    eax,0xd130a80d
  416721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416722:	mov    esp,0xacb46df6
  416727:	jmp    0x416735
  416729:	push   0xaaff5d8
  41672e:	and    esp,DWORD PTR [eax-0x65]
  416731:	adc    BYTE PTR [esi-0x2c],bh
  416734:	cmp    al,0x58
  416736:	stos   BYTE PTR es:[edi],al
  416737:	jnp    0x41671d
  416739:	inc    edi
  41673a:	mov    bh,0x68
  41673c:	mov    al,ss:0x6e10d53c
  416742:	xor    cl,al
  416744:	ss inc esp
  416746:	inc    ecx
  416747:	test   eax,0x74c9b188
  41674c:	mov    edi,0xce5634e8
  416751:	mov    edi,0xc90509e6
  416756:	mov    dl,0x1d
  416758:	pop    ss
  416759:	pop    ebx
  41675a:	shr    DWORD PTR [esi-0x1e],cl
  41675d:	mov    cl,bl
  41675f:	(bad)  
  416760:	xor    esi,DWORD PTR [esi-0x2e]
  416763:	ins    DWORD PTR es:[edi],dx
  416764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416765:	pushf  
  416766:	fstp   DWORD PTR [eax-0x33]
  416769:	cmp    dl,BYTE PTR [ebx+0x9f8b3ae]
  41676f:	stos   DWORD PTR es:[edi],eax
  416770:	xor    bl,0x47
  416773:	sub    ebp,edi
  416775:	mov    ch,0xd9
  416777:	ret    0x3cff
  41677a:	xor    edx,DWORD PTR [eax+0x73]
  41677d:	sub    ch,dh
  41677f:	and    al,0x63
  416781:	or     bl,BYTE PTR [ebp-0x51167684]
  416787:	mov    al,ds:0xba25be0c
  41678c:	popa   
  41678d:	shl    DWORD PTR [ebp-0x7b8c9eec],1
  416793:	cli    
  416794:	fisubr DWORD PTR [ebp-0x42]
  416797:	xor    esp,0xffffff88
  41679a:	mov    cl,0x70
  41679c:	popf   
  41679d:	mov    bh,0x5e
  41679f:	aas    
  4167a0:	push   es
  4167a1:	or     eax,0xb7207963
  4167a6:	jns    0x4167dc
  4167a8:	cmp    eax,0x2eb31830
  4167ad:	jbe    0x416756
  4167af:	sub    al,0x51
  4167b1:	(bad)  
  4167b2:	jp     0x416826
  4167b4:	push   esp
  4167b5:	xor    ch,al
  4167b7:	xor    ebx,DWORD PTR [ebx+0x1a790fd1]
  4167bd:	xchg   BYTE PTR [esp+ebx*1+0x13],al
  4167c1:	iret   
  4167c2:	out    dx,eax
  4167c3:	dec    eax
  4167c4:	fcom   QWORD PTR ds:0xb206ecfa
  4167ca:	xchg   edi,eax
  4167cb:	adc    eax,0x19b05c8e
  4167d0:	and    BYTE PTR [esi+edx*1+0x75],dh
  4167d4:	addr16 xchg ebp,eax
  4167d6:	call   0x15b99ad0
  4167db:	bound  esi,QWORD PTR [esi-0xb4c0bdd]
  4167e1:	les    ecx,FWORD PTR [esi+0x49]
  4167e4:	in     eax,0xe8
  4167e6:	pusha  
  4167e7:	cmp    bh,bh
  4167e9:	mov    ah,0x47
  4167eb:	pop    ecx
  4167ec:	addr16 aaa 
  4167ee:	xchg   ah,dh
  4167f0:	cmc    
  4167f1:	aad    0xa3
  4167f3:	imul   edi,DWORD PTR [edx-0xf0e76de],0x41496500
  4167fd:	pop    edi
  4167fe:	add    esi,esp
  416800:	sub    dl,BYTE PTR [esi-0x882d87e]
  416806:	outs   dx,BYTE PTR ds:[esi]
  416807:	daa    
  416808:	sub    eax,0x3220dd38
  41680d:	cmp    eax,0x53e2f72d
  416812:	adc    DWORD PTR [edi-0x48],eax
  416815:	bound  esi,QWORD PTR [ecx-0x481fc500]
  41681b:	push   esi
  41681c:	shl    DWORD PTR [ecx+0x43b4512a],1
  416822:	jg     0x41682c
  416824:	adc    edi,eax
  416826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416827:	arpl   WORD PTR [ecx],dx
  416829:	and    al,0x33
  41682b:	cld    
  41682c:	sub    al,0xc0
  41682e:	dec    esi
  41682f:	mov    ds:0x9bb199d9,al
  416834:	xchg   DWORD PTR [ebx-0x47],ebp
  416837:	inc    esp
  416838:	shr    DWORD PTR [edx],1
  41683a:	or     dl,BYTE PTR [di+0x73]
  41683e:	es bswap edx
  416841:	and    ch,dh
  416843:	jle    0x41686a
  416845:	and    BYTE PTR [ebx+0x4],0xa7
  416849:	xchg   edi,eax
  41684a:	imul   ecx,ecx,0xb8012cb9
  416850:	sahf   
  416851:	cmp    al,0xa0
  416853:	je     0x416887
  416855:	aaa    
  416856:	pop    ebp
  416857:	in     eax,0x9a
  416859:	into   
  41685a:	inc    eax
  41685b:	nop
  41685c:	xor    al,0x75
  41685e:	mov    edi,0xacd44e93
  416863:	test   edx,edx
  416865:	fsubrp st(4),st
  416867:	loopne 0x4167eb
  416869:	mov    dl,0x8b
  41686b:	sub    BYTE PTR [edi+0x19],0xdb
  41686f:	lods   al,BYTE PTR gs:[esi]
  416871:	(bad)  [ebx+0x7d]
  416874:	cmp    al,0x9f
  416876:	pop    edi
  416877:	xchg   BYTE PTR [edi-0x40],bl
  41687a:	or     BYTE PTR [eax-0x51],0x4c
  41687e:	gs jns 0x416861
  416881:	fidiv  WORD PTR [eax+0x35]
  416884:	ds xchg ebx,eax
  416886:	sbb    DWORD PTR [ebx+0x7b],edi
  416889:	mov    cl,0x6f
  41688b:	pop    edx
  41688c:	imul   eax,DWORD PTR [ecx-0x28fe2a07],0x7ecd4615
  416896:	jmp    0x41688c
  416898:	popf   
  416899:	mov    ecx,ebp
  41689b:	xor    eax,0x5d124313
  4168a0:	outs   dx,BYTE PTR gs:[esi]
  4168a2:	or     BYTE PTR [edi+0x19],bl
  4168a5:	repnz pop edx
  4168a7:	cmp    eax,0xdf2a4ebc
  4168ac:	push   ebx
  4168ad:	lods   eax,DWORD PTR ds:[esi]
  4168ae:	mov    ds:0xfc06ee25,al
  4168b3:	sahf   
  4168b4:	mov    esp,0xce7c04d9
  4168b9:	inc    esp
  4168ba:	jp     0x416885
  4168bc:	fldenv [edi-0x55aa9f5b]
  4168c2:	hlt    
  4168c3:	mov    ch,BYTE PTR [edi]
  4168c5:	out    dx,eax
  4168c6:	sbb    al,0xe9
  4168c8:	cmp    cl,BYTE PTR [eax+0x1]
  4168cb:	fsub   QWORD PTR [esi-0xd1919c]
  4168d1:	test   BYTE PTR [ecx-0x73],dl
  4168d4:	out    dx,eax
  4168d5:	into   
  4168d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d7:	mov    cl,0xbf
  4168d9:	xlat   BYTE PTR ds:[ebx]
  4168da:	ins    BYTE PTR es:[edi],dx
  4168db:	nop
  4168dc:	test   DWORD PTR [esi-0x5cd127c9],ecx
  4168e2:	fiadd  DWORD PTR [eax]
  4168e4:	es cmp ebx,ecx
  4168e7:	call   0x716a:0x2362ca4f
  4168ee:	cli    
  4168ef:	adc    DWORD PTR [ecx+eiz*8-0x18],ebx
  4168f3:	sar    ch,1
  4168f5:	ret    0xba5a
  4168f8:	hlt    
  4168f9:	sbb    al,0x9d
  4168fb:	(bad)  
  4168fc:	fistp  DWORD PTR [eax-0xb]
  4168ff:	popa   
  416900:	xlat   BYTE PTR ds:[ebx]
  416901:	(bad)  
  416902:	fild   QWORD PTR [ebx-0x3335a33a]
  416908:	pop    edx
  416909:	jno    0x416901
  41690b:	sub    DWORD PTR [ecx+0x14],ecx
  41690e:	rcr    DWORD PTR cs:[ebx+edi*1],cl
  416912:	xchg   bh,dh
  416914:	pop    esi
  416915:	shl    DWORD PTR [ebx-0x46],0x9f
  416919:	or     BYTE PTR [esi],bl
  41691b:	sbb    BYTE PTR [esi+0x4ca83c36],bl
  416921:	mov    dh,0x90
  416923:	sub    al,0xcb
  416925:	xchg   esi,eax
  416926:	inc    ebx
  416927:	gs push ds
  416929:	sti    
  41692a:	mov    al,ds:0x3133f0e4
  41692f:	out    0xfe,eax
  416931:	lea    esp,[eax]
  416933:	sbb    al,0x78
  416935:	test   ch,ch
  416937:	mov    edi,0x72e6f7c4
  41693c:	sar    DWORD PTR ds:0xb96efb49,cl
  416942:	ret    
  416943:	inc    ecx
  416944:	dec    edx
  416945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416946:	push   esp
  416947:	loop   0x41691e
  416949:	push   ebx
  41694a:	repnz pop eax
  41694c:	cmp    dl,BYTE PTR [eax]
  41694e:	(bad)  
  41694f:	loope  0x416941
  416951:	adc    ebp,DWORD PTR [edx]
  416953:	add    DWORD PTR [edi],eax
  416955:	pop    ebp
  416956:	inc    edi
  416957:	jmp    0x41691c
  416959:	push   edx
  41695a:	xor    DWORD PTR [eax+0x25],esp
  41695d:	adc    BYTE PTR [edi-0x399fc617],bh
  416963:	or     eax,0xbe1fa32d
  416968:	ret    
  416969:	inc    ebp
  41696a:	jg     0x416964
  41696c:	fucomip st,st(7)
  41696e:	push   ebp
  41696f:	mov    ecx,0xbf439c34
  416974:	sbb    eax,DWORD PTR [edi+eiz*4]
  416977:	xchg   ecx,eax
  416978:	push   edx
  416979:	outs   dx,DWORD PTR ds:[esi]
  41697a:	push   DWORD PTR [edx+0x6d1bd4cd]
  416980:	jne    0x4169ce
  416982:	mov    ebx,0xc3c5393b
  416987:	push   eax
  416988:	or     ah,ah
  41698a:	cwde   
  41698b:	mov    ebp,gs
  41698d:	out    dx,al
  41698e:	push   esp
  41698f:	pop    eax
  416990:	add    ecx,DWORD PTR [edi-0x60]
  416993:	mov    edx,0xf4abd6c1
  416998:	inc    ecx
  416999:	mov    ebx,0x46ddca89
  41699e:	out    0x4,al
  4169a0:	mov    bh,ch
  4169a2:	mov    ebx,0xdbe69e3d
  4169a7:	test   BYTE PTR [edx+0x51eea2e3],0x2
  4169ae:	adc    BYTE PTR [eax+0x711a11bf],ch
  4169b4:	lahf   
  4169b5:	xor    DWORD PTR [ebx-0x30b7b274],0x96c6101e
  4169bf:	in     eax,0xfa
  4169c1:	fcomp  QWORD PTR [esi]
  4169c3:	jo     0x416948
  4169c5:	out    dx,eax
  4169c6:	mov    dl,0xd
  4169c8:	fcom   DWORD PTR cs:[edx+0x5]
  4169cc:	outs   dx,DWORD PTR ds:[esi]
  4169cd:	sub    eax,0xac4d55cb
  4169d2:	xchg   ebx,eax
  4169d3:	loope  0x416a20
  4169d5:	in     eax,dx
  4169d6:	push   eax
  4169d7:	inc    ecx
  4169d8:	sub    DWORD PTR ds:0x6bc2d232,eax
  4169de:	in     eax,0xaf
  4169e0:	cmp    esp,esp
  4169e2:	jne    0x4169be
  4169e4:	ror    DWORD PTR [edi+0x42],0x67
  4169e8:	call   0x2f44:0xce507bc5
  4169ef:	int    0xd7
  4169f1:	sub    ebp,ebp
  4169f3:	xchg   ecx,eax
  4169f4:	in     al,dx
  4169f5:	inc    esi
  4169f6:	adc    BYTE PTR [edx-0x1f],ah
  4169f9:	ret    0x5616
  4169fc:	loope  0x416987
  4169fe:	sub    ch,BYTE PTR [esi]
  416a00:	mov    ecx,0xf82881c
  416a05:	dec    esi
  416a06:	fwait
  416a07:	cmp    dh,BYTE PTR [ebx]
  416a09:	add    BYTE PTR [edx+0x22],0xc8
  416a0d:	jp     0x416a53
  416a0f:	push   ds
  416a10:	je     0x416a25
  416a12:	fnstenv [edi+0x6b2d399e]
  416a18:	bound  ecx,QWORD PTR [eax]
  416a1a:	and    al,0xe3
  416a1c:	js     0x416a93
  416a1e:	out    dx,al
  416a1f:	retf   0x60d4
  416a22:	cmc    
  416a23:	sbb    DWORD PTR [ebx-0x1641004a],ebx
  416a29:	xlat   BYTE PTR ds:[ebx]
  416a2a:	clc    
  416a2b:	out    0x12,al
  416a2d:	mov    BYTE PTR [edi+0x5c5a1c6e],bh
  416a33:	dec    edi
  416a34:	daa    
  416a35:	mov    esi,0x6850e0b1
  416a3a:	mov    dh,BYTE PTR [ebp-0x130e40d8]
  416a40:	clc    
  416a41:	into   
  416a42:	jecxz  0x416a74
  416a44:	xlat   BYTE PTR ds:[ebx]
  416a45:	out    dx,eax
  416a46:	xchg   DWORD PTR [edx+eiz*1-0x5c],edi
  416a4a:	and    BYTE PTR [eax+0x41],al
  416a4d:	push   edx
  416a4e:	and    al,0xba
  416a50:	xor    al,dl
  416a52:	fprem1 
  416a54:	ins    DWORD PTR es:[edi],dx
  416a55:	out    dx,eax
  416a56:	mov    al,0xaa
  416a58:	xchg   esp,eax
  416a59:	lods   al,BYTE PTR ds:[esi]
  416a5a:	adc    BYTE PTR [ebp+0x2],ah
  416a5d:	push   ebx
  416a5e:	xchg   edi,eax
  416a5f:	push   esp
  416a60:	push   esi
  416a61:	cmp    ebx,0xcb20e745
  416a67:	idiv   WORD PTR [ebx-0x53fdf6ff]
  416a6e:	outs   dx,BYTE PTR ds:[esi]
  416a6f:	out    0x32,eax
  416a71:	push   ecx
  416a72:	cmp    eax,0xb7c801dd
  416a77:	aad    0xa
  416a79:	mov    ecx,0x32b13d0a
  416a7e:	fwait
  416a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a80:	adc    edx,DWORD PTR [ebp+0x79]
  416a83:	cmp    eax,0x850db57b
  416a88:	enter  0x8aa3,0xcd
  416a8c:	stc    
  416a8d:	pop    ecx
  416a8e:	jge    0x416a2a
  416a90:	cmp    BYTE PTR [eax],dh
  416a92:	repz in eax,0x9f
  416a95:	stos   BYTE PTR es:[edi],al
  416a96:	adc    DWORD PTR [esp+edi*4],edi
  416a99:	inc    edi
  416a9a:	ins    BYTE PTR es:[edi],dx
  416a9b:	cmp    cl,cl
  416a9d:	test   ebx,esi
  416a9f:	fsub   DWORD PTR [edi+0x6871ebd]
  416aa5:	xor    BYTE PTR [ebp+0x2da7a059],dl
  416aab:	xchg   ebp,eax
  416aac:	dec    edi
  416aad:	sbb    BYTE PTR [edx],dl
  416aaf:	lods   al,BYTE PTR ds:[esi]
  416ab0:	test   dh,dh
  416ab2:	adc    BYTE PTR [edx-0x92f5ea6],cl
  416ab8:	mov    ds,ecx
  416aba:	xor    eax,0x682af4bb
  416abf:	dec    edx
  416ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac1:	nop
  416ac2:	pop    eax
  416ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac4:	shl    ch,cl
  416ac6:	xor    dl,ah
  416ac8:	loopne 0x416b15
  416aca:	jno    0x416b3e
  416acc:	xchg   ebx,eax
  416acd:	push   eax
  416ace:	or     al,0xb
  416ad0:	idiv   DWORD PTR [ecx]
  416ad2:	dec    esi
  416ad3:	sub    DWORD PTR [edi],esi
  416ad5:	imul   esi,ebp,0xa56f4ed9
  416adb:	mov    dh,bl
  416add:	mov    eax,0x3cf5f092
  416ae2:	mov    ebx,0xfa10edd7
  416ae7:	or     DWORD PTR [edi+0x524c9128],0x88112c7a
  416af1:	stos   BYTE PTR es:[edi],al
  416af2:	retf   0x1d77
  416af5:	fwait
  416af6:	leave  
  416af7:	lea    edx,[edx-0x3]
  416afa:	push   ecx
  416afb:	shr    DWORD PTR [ecx],0xc0
  416afe:	adc    edi,ebp
  416b00:	nop
  416b01:	add    dh,BYTE PTR [eax+ecx*4-0x6f]
  416b05:	cmovle edx,DWORD PTR [edi+eax*1]
  416b09:	sti    
  416b0a:	inc    esp
  416b0b:	jmp    0x8be38408
  416b10:	call   0xf5fe:0xfc374cf5
  416b17:	into   
  416b18:	pop    ds
  416b19:	push   edi
  416b1a:	dec    ebp
  416b1b:	mov    ecx,0xe73014bd
  416b20:	and    ebx,DWORD PTR [edx-0x1]
  416b23:	outs   dx,BYTE PTR ds:[esi]
  416b24:	fcom   DWORD PTR [ebx+0x72]
  416b27:	and    ah,bl
  416b29:	sub    al,0x37
  416b2b:	cli    
  416b2c:	mov    al,ds:0xa83fd6a3
  416b31:	and    al,0xe2
  416b33:	xchg   esp,eax
  416b34:	int    0x8f
  416b36:	es push 0xffffffa3
  416b39:	cwde   
  416b3a:	outs   dx,DWORD PTR ds:[esi]
  416b3b:	cmc    
  416b3c:	loopne 0x416b9c
  416b3e:	add    al,0x77
  416b40:	push   ebp
  416b41:	les    edi,FWORD PTR [edx-0x415dfb6c]
  416b47:	gs sub al,0x68
  416b4a:	sbb    dl,cl
  416b4c:	je     0x416b1a
  416b4e:	cmp    al,0xf7
  416b50:	pop    ss
  416b51:	retf   
  416b52:	inc    edi
  416b53:	frstor [edx+0x63]
  416b56:	xchg   esp,eax
  416b57:	pop    ebp
  416b58:	dec    DWORD PTR [edx]
  416b5a:	aam    0x97
  416b5c:	hlt    
  416b5d:	lods   al,BYTE PTR ds:[esi]
  416b5e:	cmc    
  416b5f:	scas   eax,DWORD PTR es:[edi]
  416b60:	or     ah,BYTE PTR [ebx-0x7a]
  416b63:	xchg   ebx,eax
  416b64:	popa   
  416b65:	loope  0x416b2c
  416b67:	scas   eax,DWORD PTR es:[edi]
  416b68:	mov    ds:0x2c080f3d,eax
  416b6d:	mov    fs,WORD PTR [eax-0x70d7f141]
  416b73:	mov    ebp,0xd5aa64df
  416b78:	mov    eax,es:0xe45d7c80
  416b7e:	mov    bl,0xb7
  416b80:	cld    
  416b81:	pop    es
  416b82:	and    BYTE PTR [edx+0x59],0xdd
  416b86:	popf   
  416b87:	jne    0x416b52
  416b89:	retf   0x14e
  416b8c:	mov    BYTE PTR [edi-0x8],bh
  416b8f:	fidivr WORD PTR [edx+0x3ddf8039]
  416b95:	and    ebx,DWORD PTR [ebp-0x36]
  416b98:	cmp    eax,0xe5450634
  416b9d:	push   0x1b
  416b9f:	add    al,0xab
  416ba1:	ret    0xb993
  416ba4:	sub    eax,0x5adcbc8e
  416ba9:	mov    ah,0xc1
  416bab:	in     al,dx
  416bac:	or     cl,BYTE PTR [ebp-0x1c]
  416baf:	mov    cl,0xa9
  416bb1:	jecxz  0x416b4c
  416bb3:	lea    ebp,[ecx+0x17]
  416bb6:	retf   
  416bb7:	mov    ebp,0x8e2b87cf
  416bbc:	dec    ebx
  416bbd:	push   edx
  416bbe:	mov    ds:0x6246aeff,al
  416bc3:	or     ch,ch
  416bc5:	dec    edi
  416bc6:	xor    DWORD PTR [ebp-0x3c],esp
  416bc9:	fwait
  416bca:	call   0xd8a3:0x1c081baa
  416bd1:	lock sahf 
  416bd3:	cmp    DWORD PTR [esp+edi*4-0x2de0dfd3],ebp
  416bda:	fnstenv [edx]
  416bdc:	or     esi,DWORD PTR gs:[esi-0x50262837]
  416be3:	ds or  al,cl
  416be6:	stos   DWORD PTR es:[edi],eax
  416be7:	sub    DWORD PTR [edx+0x14],ecx
  416bea:	cmp    DWORD PTR [edx-0x5496084e],edi
  416bf0:	jecxz  0x416c26
  416bf2:	je     0x416c02
  416bf4:	xor    edi,DWORD PTR [edi]
  416bf6:	sbb    dl,BYTE PTR [ebp+0x6d]
  416bf9:	push   eax
  416bfa:	inc    esi
  416bfb:	jbe    0x416ba2
  416bfd:	inc    ecx
  416bfe:	ror    DWORD PTR [eax-0x6b],1
  416c01:	daa    
  416c02:	cmp    al,0x6e
  416c04:	jb     0x416bc6
  416c06:	psrad  mm3,QWORD PTR [eax]
  416c09:	bound  eax,QWORD PTR [esi+0x66]
  416c0c:	sbb    al,0x45
  416c0e:	mov    bl,0xa0
  416c10:	test   al,0x9a
  416c12:	cdq    
  416c13:	aam    0x18
  416c15:	adc    eax,0x654c2f08
  416c1a:	adc    BYTE PTR [ebp+0x63],cl
  416c1d:	out    0x5f,al
  416c1f:	adc    dl,BYTE PTR [ecx+0x13ee9f81]
  416c25:	adc    eax,0x3c3e4935
  416c2a:	jno    0x416c7a
  416c2c:	mov    ebp,0xa0533e42
  416c31:	add    bl,dl
  416c33:	sub    DWORD PTR [ebp+0x1e],ebp
  416c36:	add    ebx,ebp
  416c38:	mov    dl,0x52
  416c3a:	jmp    0x416bfc
  416c3c:	xor    al,0x4f
  416c3e:	sub    eax,0x21dcf8b9
  416c43:	sub    eax,ebp
  416c45:	xchg   esi,eax
  416c46:	sbb    al,0xa5
  416c48:	xlat   BYTE PTR ds:[ebx]
  416c49:	mov    ebp,DWORD PTR [ebp-0x543a2684]
  416c4f:	push   ds
  416c50:	push   esi
  416c51:	push   es
  416c52:	rcl    DWORD PTR [esp+ecx*1+0x2c36d86c],cl
  416c59:	add    BYTE PTR [eax],cl
  416c5b:	repz mov al,0x90
  416c5e:	mov    edx,0xa0b8e2b4
  416c63:	adc    ebx,DWORD PTR [esi]
  416c65:	imul   edi,DWORD PTR ds:[ebx],0xffffffe5
  416c69:	pushf  
  416c6a:	test   al,0x8b
  416c6c:	pop    ds
  416c6d:	es ins BYTE PTR es:[edi],dx
  416c6f:	stc    
  416c70:	retf   
  416c71:	fisttp WORD PTR [edi*2-0x4582ab74]
  416c78:	ins    DWORD PTR es:[edi],dx
  416c79:	and    eax,0x581fb467
  416c7e:	ret    
  416c7f:	inc    ecx
  416c80:	pop    ss
  416c81:	and    dl,BYTE PTR [esi]
  416c83:	scas   eax,DWORD PTR es:[edi]
  416c84:	add    al,0x92
  416c86:	cmp    ch,BYTE PTR [ebx+0x38]
  416c89:	pop    ebx
  416c8a:	pop    esi
  416c8b:	ins    DWORD PTR es:[edi],dx
  416c8c:	loopne 0x416c88
  416c8e:	dec    esi
  416c8f:	push   0x30
  416c91:	inc    edi
  416c92:	pop    esi
  416c93:	jb     0x416cce
  416c95:	mov    ebx,0x8b08558b
  416c9a:	pop    ebp
  416c9b:	clc    
  416c9c:	xor    edx,eax
  416c9e:	xor    ebx,eax
  416ca0:	sub    edx,ebx
  416ca2:	sub    edx,esi
  416ca4:	xor    edx,eax
  416ca6:	mov    DWORD PTR [ebp+0x8],edx
  416ca9:	mov    edx,DWORD PTR [ebp+0x8]
  416cac:	mov    ebx,DWORD PTR [ebp-0x58]
  416caf:	add    edx,0x5708fa
  416cb5:	imul   edx,ebx
  416cb8:	mov    DWORD PTR [ebp-0x58],edx
  416cbb:	mov    edx,DWORD PTR [ebp+0x8]
  416cbe:	mov    ebx,DWORD PTR [ebp-0x54]
  416cc1:	add    edx,0x64f89c
  416cc7:	or     edx,ebx
  416cc9:	mov    DWORD PTR [ebp-0x54],edx
  416ccc:	mov    edx,DWORD PTR [ebp+0x8]
  416ccf:	mov    ebx,DWORD PTR [ebp-0x50]
  416cd2:	add    edx,ecx
  416cd4:	xor    edx,ebx
  416cd6:	mov    DWORD PTR [ebp-0x50],edx
  416cd9:	mov    edx,DWORD PTR [ebp+0x8]
  416cdc:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cdf:	add    edx,edi
  416ce1:	jmp    0x419066
  416ce6:	fidivr WORD PTR [ecx-0x44]
  416ce9:	call   0x43d01081
  416cee:	xchg   ebx,eax
  416cef:	jmp    0x1594:0x284482c3
  416cf6:	cs inc esp
  416cf8:	jns    0x416d74
  416cfa:	adc    bl,BYTE PTR [edi+0x7a]
  416cfd:	jp     0x416ce4
  416cff:	inc    ebx
  416d00:	adc    DWORD PTR [ecx+0x66f5773],ecx
  416d06:	sti    
  416d07:	mov    ds:0xc0f9a7bb,eax
  416d0c:	push   es
  416d0d:	pop    esp
  416d0e:	imul   BYTE PTR [edx]
  416d10:	stos   BYTE PTR es:[edi],al
  416d11:	sub    bh,0x23
  416d14:	sbb    BYTE PTR [edx],dh
  416d16:	retf   0xfb0b
  416d19:	push   esp
  416d1a:	push   ecx
  416d1b:	test   eax,ecx
  416d1d:	jne    0x416cc3
  416d1f:	pushf  
  416d20:	daa    
  416d21:	dec    eax
  416d22:	ins    DWORD PTR es:[edi],dx
  416d23:	stc    
  416d24:	and    al,0x37
  416d26:	xlat   BYTE PTR ds:[ebx]
  416d27:	mov    edx,0x459cd429
  416d2c:	shr    DWORD PTR [ecx],1
  416d2e:	pop    edi
  416d2f:	add    DWORD PTR [ebx-0x581c7c5d],esp
  416d35:	test   esp,ebx
  416d37:	fisttp DWORD PTR [ecx]
  416d39:	repz cld 
  416d3b:	cmc    
  416d3c:	inc    edx
  416d3d:	sub    ch,BYTE PTR ds:0xc4751214
  416d43:	sub    dl,bh
  416d45:	jg     0x416d71
  416d47:	in     al,0x7d
  416d49:	and    bh,cl
  416d4b:	jno    0x416d34
  416d4d:	fsub   st(4),st
  416d4f:	sbb    eax,0x4b6000
  416d54:	lods   eax,DWORD PTR ds:[esi]
  416d55:	adc    eax,0x1837714e
  416d5a:	lahf   
  416d5b:	add    DWORD PTR [ecx],esp
  416d5d:	jmp    0xe655:0xbb0b31a3
  416d64:	ror    DWORD PTR [ebx+0x5c],1
  416d67:	dec    eax
  416d68:	loopne 0x416d9e
  416d6a:	inc    esi
  416d6b:	outs   dx,DWORD PTR ds:[esi]
  416d6c:	das    
  416d6d:	push   0x4c4639f2
  416d72:	mov    ebp,0xfec33110
  416d77:	sub    bh,BYTE PTR [edx]
  416d79:	fidiv  DWORD PTR [eax+0x3a]
  416d7c:	pop    eax
  416d7d:	push   esi
  416d7e:	enter  0x598c,0xb9
  416d82:	in     eax,0x99
  416d84:	jecxz  0x416da2
  416d86:	add    edx,DWORD PTR [esi]
  416d88:	jp     0x416dcf
  416d8a:	cs jbe 0x416d59
  416d8d:	lods   eax,DWORD PTR ds:[esi]
  416d8e:	retf   0xdff
  416d91:	mov    dl,0x52
  416d93:	vpminub ymm0,ymm0,ymm6
  416d97:	push   0x6470a526
  416d9c:	push   es
  416d9d:	mov    ah,0x98
  416d9f:	aam    0x3f
  416da1:	pop    esi
  416da2:	aaa    
  416da3:	or     ebx,DWORD PTR [ebx]
  416da5:	shl    BYTE PTR [edi],cl
  416da7:	mov    ds:0x505efbaf,al
  416dac:	popa   
  416dad:	fiadd  WORD PTR [ecx-0x4f]
  416db0:	in     eax,dx
  416db1:	ror    bl,1
  416db3:	jae    0x416d74
  416db5:	and    al,0xc8
  416db7:	jae    0x416e27
  416db9:	lahf   
  416dba:	not    DWORD PTR [eax-0x5b]
  416dbd:	or     DWORD PTR [eax-0x38b5e1a4],ebp
  416dc3:	jo     0x416d8b
  416dc5:	ret    0x6d62
  416dc8:	popf   
  416dc9:	cmp    al,0x2c
  416dcb:	dec    esp
  416dcc:	mov    ds:0x39f7d415,al
  416dd1:	call   0x93678037
  416dd6:	dec    si
  416dd8:	and    edi,DWORD PTR [esi-0x14]
  416ddb:	aad    0xf
  416ddd:	dec    ecx
  416dde:	test   bl,0x57
  416de1:	lahf   
  416de2:	cmp    al,bl
  416de4:	xchg   esi,eax
  416de5:	popf   
  416de6:	clc    
  416de7:	cs (bad) 
  416de9:	cli    
  416dea:	and    eax,0xf4ae8919
  416def:	outs   dx,BYTE PTR ds:[esi]
  416df0:	(bad)  [edx]
  416df2:	adc    DWORD PTR [eax],edx
  416df4:	fistp  QWORD PTR [ebp-0x1e97d1cc]
  416dfa:	add    al,0xbc
  416dfc:	mov    ch,0xfd
  416dfe:	adc    DWORD PTR [edi+eax*8+0x20225156],edi
  416e05:	pushf  
  416e06:	adc    al,cl
  416e08:	inc    edx
  416e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e0a:	xchg   edi,eax
  416e0b:	iret   
  416e0c:	mov    cl,0xb3
  416e0e:	stos   BYTE PTR es:[edi],al
  416e0f:	inc    ecx
  416e10:	pop    ds
  416e11:	scas   eax,DWORD PTR es:[edi]
  416e12:	fdivr  DWORD PTR [edi-0x6aedec36]
  416e18:	pushf  
  416e19:	je     0x416de1
  416e1b:	int3   
  416e1c:	test   al,0x5f
  416e1e:	outs   dx,BYTE PTR ds:[esi]
  416e1f:	push   eax
  416e20:	jbe    0x416e58
  416e22:	imul   eax,DWORD PTR [edi],0x17
  416e25:	mov    edi,0x9e2050e1
  416e2a:	(bad)  
  416e2b:	mov    edi,0x1a4324af
  416e30:	out    0x88,eax
  416e32:	and    al,BYTE PTR [eax+edx*8+0x2c]
  416e36:	add    al,0xb
  416e38:	ins    DWORD PTR es:[edi],dx
  416e39:	and    al,0xf
  416e3b:	xlat   BYTE PTR ds:[ebx]
  416e3c:	xchg   edx,eax
  416e3d:	push   edx
  416e3e:	mov    esp,0x563aad1d
  416e43:	sbb    al,0x14
  416e45:	frstor [eax-0x126ea9a2]
  416e4b:	jp     0x416dd0
  416e4d:	mov    esp,0x8cd92fa4
  416e52:	and    DWORD PTR [ecx+0x10daceee],0x0
  416e59:	xlat   BYTE PTR ds:[ebx]
  416e5a:	js     0x416e65
  416e5c:	cmc    
  416e5d:	ror    BYTE PTR [edi-0x45],0x4a
  416e61:	pop    edi
  416e62:	dec    esi
  416e63:	inc    eax
  416e64:	std    
  416e65:	or     DWORD PTR ds:[esi+0x3325bfd9],edx
  416e6c:	lock pop ds
  416e6e:	std    
  416e6f:	xor    DWORD PTR [ebx-0x48c8899f],ebx
  416e75:	fldcw  WORD PTR [edi+edi*8-0x3ca2dfcf]
  416e7c:	sbb    ch,BYTE PTR [edi+0x47]
  416e7f:	mov    eax,ds:0xf10571c4
  416e84:	pop    ebp
  416e85:	mov    bl,0xe1
  416e87:	ret    
  416e88:	bound  esi,QWORD PTR [edi+0x559fb293]
  416e8e:	inc    eax
  416e8f:	les    eax,FWORD PTR [eax]
  416e91:	inc    BYTE PTR [ecx+edx*2]
  416e94:	loop   0x416ecb
  416e96:	aas    
  416e97:	and    al,0xc7
  416e99:	push   ebx
  416e9a:	push   ecx
  416e9b:	sub    BYTE PTR [ebx],dh
  416e9d:	aam    0x65
  416e9f:	test   BYTE PTR [esi+0x24],ch
  416ea2:	test   al,0x66
  416ea4:	mov    dl,0x4b
  416ea6:	xchg   al,bl
  416ea8:	inc    ebp
  416ea9:	stos   DWORD PTR es:[edi],eax
  416eaa:	sbb    BYTE PTR [edx],bl
  416eac:	pop    ss
  416ead:	jmp    0x416ec5
  416eaf:	xchg   edi,eax
  416eb0:	dec    esp
  416eb1:	xor    esi,ebx
  416eb3:	or     al,0x6e
  416eb5:	xor    bh,BYTE PTR [esi+0x30]
  416eb8:	gs call 0x60fe:0x71a18aaf
  416ec0:	jo     0x416ef5
  416ec2:	xchg   ch,bh
  416ec4:	outs   dx,DWORD PTR ds:[esi]
  416ec5:	and    al,0x95
  416ec7:	sbb    edx,DWORD PTR [ebp-0x2b64314a]
  416ecd:	adc    BYTE PTR [edx],ah
  416ecf:	push   esi
  416ed0:	mov    bh,0x65
  416ed2:	iret   
  416ed3:	push   ds
  416ed4:	push   0x7d21e672
  416ed9:	outs   dx,BYTE PTR ds:[esi]
  416eda:	test   BYTE PTR [esi-0x11e3ca07],ah
  416ee0:	leave  
  416ee1:	xchg   ebx,eax
  416ee2:	lock mov ebp,0xc74db71
  416ee8:	push   ecx
  416ee9:	mov    al,ds:0x10fe0f58
  416eee:	push   ds
  416eef:	stc    
  416ef0:	loop   0x416ed9
  416ef2:	mov    eax,0xb684e7c7
  416ef7:	inc    edi
  416ef8:	imul   eax,DWORD PTR [eax+eiz*8],0x77
  416efc:	pop    edi
  416efd:	aaa    
  416efe:	adc    ecx,ebp
  416f00:	jl     0x416f17
  416f02:	mov    bh,0x2e
  416f04:	adc    ah,BYTE PTR [eax-0x33f25871]
  416f0a:	push   es
  416f0b:	sbb    BYTE PTR [ecx],dh
  416f0d:	adc    BYTE PTR [edi],al
  416f0f:	outs   dx,BYTE PTR ds:[esi]
  416f10:	dec    edx
  416f11:	pop    edi
  416f12:	test   DWORD PTR [esi-0x48],eax
  416f15:	jae    0x416f41
  416f17:	adc    BYTE PTR [edi-0x15],bh
  416f1a:	add    cl,dl
  416f1c:	loop   0x416f68
  416f1e:	push   0xffffffa5
  416f20:	ins    BYTE PTR es:[edi],dx
  416f21:	jecxz  0x416f90
  416f23:	or     BYTE PTR ds:0xa828f21b,ah
  416f29:	mov    bh,0x1b
  416f2b:	xlat   BYTE PTR ds:[ebx]
  416f2c:	push   ss
  416f2d:	dec    esi
  416f2e:	js     0x416ee0
  416f30:	and    eax,0xaebfa7f0
  416f35:	sbb    ecx,DWORD PTR [ebp+eax*1+0x10]
  416f39:	arpl   WORD PTR [eax-0x57e9edb2],dx
  416f3f:	fist   WORD PTR [eax+0x4f]
  416f42:	jbe    0x416f43
  416f44:	jbe    0x416ee8
  416f46:	fcom   QWORD PTR [edi]
  416f48:	sub    eax,0xc8ded2a0
  416f4d:	push   ss
  416f4e:	add    eax,0x752e0b5a
  416f53:	mov    dl,0x5e
  416f55:	in     eax,dx
  416f56:	inc    esp
  416f57:	(bad)  
  416f58:	cs mov ?,ebp
  416f5b:	nop
  416f5c:	lods   al,BYTE PTR ds:[esi]
  416f5d:	push   ds
  416f5e:	or     bl,BYTE PTR [ebx+0x7d8e20c6]
  416f64:	mov    bl,0xf3
  416f66:	test   ebx,ecx
  416f68:	retf   
  416f69:	sbb    BYTE PTR [ecx-0x46],ah
  416f6c:	popf   
  416f6d:	mov    al,ds:0x1f2a22fc
  416f72:	dec    eax
  416f73:	pop    ds
  416f74:	pusha  
  416f75:	push   edx
  416f76:	and    edi,eax
  416f78:	xchg   esi,eax
  416f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f7a:	push   ebx
  416f7b:	pop    ebp
  416f7c:	add    DWORD PTR [ebp-0x35ebcd2b],eax
  416f82:	popf   
  416f83:	xor    cl,0x8
  416f86:	aad    0xd
  416f88:	sbb    DWORD PTR [ebx],ebp
  416f8a:	inc    edx
  416f8b:	xchg   ecx,eax
  416f8c:	push   ebp
  416f8d:	lods   al,BYTE PTR ds:[esi]
  416f8e:	shl    BYTE PTR [edi],1
  416f90:	je     0x416f3b
  416f92:	pop    esi
  416f93:	mov    al,ds:0xef89128
  416f98:	inc    ecx
  416f99:	repnz lea esp,[edi]
  416f9c:	imul   BYTE PTR [ebx+0x5e368168]
  416fa2:	call   0x30fdb2a0
  416fa7:	pop    ds
  416fa8:	cmp    al,0xff
  416faa:	(bad)  [esi+ebp*1-0x364b1987]
  416fb1:	sbb    al,0x37
  416fb3:	ret    
  416fb4:	sbb    DWORD PTR [ebp+0x69d939e4],edx
  416fba:	retf   
  416fbb:	std    
  416fbc:	mov    edi,0xf3e2b172
  416fc1:	ds cld 
  416fc3:	addr16 pop edx
  416fc5:	aaa    
  416fc6:	stos   BYTE PTR es:[edi],al
  416fc7:	sbb    BYTE PTR ds:0xc14be480,ch
  416fcd:	test   BYTE PTR [ebx-0x2e994f54],0x27
  416fd4:	retf   0x8dfd
  416fd7:	add    DWORD PTR [ebx+ecx*8+0x2f],esi
  416fdb:	pop    esp
  416fdc:	sub    DWORD PTR [edx+0x36bb810f],ebp
  416fe2:	push   es
  416fe3:	shr    eax,cl
  416fe5:	jb     0x417000
  416fe7:	stos   DWORD PTR es:[edi],eax
  416fe8:	push   edx
  416fe9:	inc    ebp
  416fea:	div    esi
  416fec:	loope  0x41703b
  416fee:	out    dx,eax
  416fef:	call   0xe4cb:0x404cd5c5
  416ff6:	icebp  
  416ff7:	std    
  416ff8:	xor    eax,0x47825171
  416ffd:	cli    
  416ffe:	and    eax,0xf8b79cd1
  417003:	cmp    edi,DWORD PTR [ecx-0x1987aa32]
  417009:	adc    BYTE PTR [ecx+ebx*8-0x9],al
  41700d:	sub    DWORD PTR [ebx],ecx
  41700f:	mov    bh,0x74
  417011:	ins    DWORD PTR es:[edi],dx
  417012:	out    dx,al
  417013:	add    al,0x59
  417015:	popf   
  417016:	push   esi
  417017:	and    DWORD PTR [edx],0xffffffad
  41701a:	int3   
  41701b:	and    ah,BYTE PTR [ebp+0x58]
  41701e:	mov    eax,0x4e4d2192
  417023:	and    al,0x2e
  417025:	retf   0x4c9a
  417028:	mov    ch,0xb5
  41702a:	add    BYTE PTR [eax+0x5e19cdce],0x92
  417031:	inc    ecx
  417032:	xor    eax,0xee2e2863
  417037:	sahf   
  417038:	fstp   QWORD PTR [ecx+0x76fa2464]
  41703e:	jae    0x417090
  417040:	nop
  417041:	ins    DWORD PTR es:[edi],dx
  417042:	stos   BYTE PTR es:[edi],al
  417043:	std    
  417044:	push   ecx
  417045:	jne    0x417051
  417047:	push   ds
  417048:	int3   
  417049:	ret    0x446b
  41704c:	js     0x417070
  41704e:	push   esp
  41704f:	push   0x4b
  417051:	xor    eax,0x34ec9776
  417056:	or     eax,0xf3514184
  41705b:	imul   ebp,DWORD PTR [ebp-0xc8d7673],0x4b1737e3
  417065:	retf   
  417066:	jecxz  0x417036
  417068:	or     edx,DWORD PTR [esi-0x7a]
  41706b:	stc    
  41706c:	mov    gs,ecx
  41706e:	push   ecx
  41706f:	pop    esp
  417070:	outs   dx,BYTE PTR ds:[esi]
  417071:	out    dx,eax
  417072:	xchg   DWORD PTR [ebx-0x59],ecx
  417075:	xor    esp,DWORD PTR [esi+0x71]
  417078:	imul   eax,DWORD PTR [ebx],0x1acf02f5
  41707e:	sub    al,0xd0
  417080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417081:	push   0xffffff9f
  417083:	rcl    DWORD PTR ds:0x9cc3e367,1
  417089:	or     cl,BYTE PTR [ebp-0x4]
  41708c:	shr    ch,0x2f
  41708f:	mov    esi,0x449fe8d0
  417094:	gs jo  0x417018
  417097:	sub    esi,DWORD PTR [edi+0x2759fe73]
  41709d:	test   ch,al
  41709f:	jg     0x4170a7
  4170a1:	fcomp  DWORD PTR [ebx+0x4490188e]
  4170a7:	xchg   edi,eax
  4170a8:	xchg   ecx,eax
  4170a9:	push   ebp
  4170aa:	sbb    DWORD PTR [edx],edx
  4170ac:	mov    ah,0xa
  4170ae:	fwait
  4170af:	xlat   BYTE PTR ds:[ebx]
  4170b0:	mov    dh,0xee
  4170b2:	xor    edi,DWORD PTR [ecx*1-0x17f7a04f]
  4170b9:	xchg   edi,eax
  4170ba:	retf   
  4170bb:	push   es
  4170bc:	pushf  
  4170bd:	fnstenv [ebx]
  4170bf:	(bad)  
  4170c1:	pop    ds
  4170c2:	hlt    
  4170c3:	mov    ds:0x9183038d,eax
  4170c8:	mov    cl,0xce
  4170ca:	lods   eax,DWORD PTR ds:[esi]
  4170cb:	outs   dx,BYTE PTR ds:[esi]
  4170cc:	jmp    0x4170c4
  4170ce:	xchg   BYTE PTR [esp+ebx*8+0x48],ah
  4170d2:	cs retf 
  4170d4:	jne    0x4170d1
  4170d6:	jle    0x417098
  4170d8:	cmp    DWORD PTR [ebp+ebx*1-0x492a7774],0x7ee72869
  4170e3:	mov    ds:0x730f1eec,eax
  4170e8:	dec    ecx
  4170e9:	(bad)  
  4170ea:	lods   eax,DWORD PTR ds:[esi]
  4170eb:	jecxz  0x41715e
  4170ed:	popf   
  4170ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170ef:	inc    esp
  4170f0:	pop    ss
  4170f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170f2:	add    ecx,eax
  4170f4:	add    al,0x37
  4170f6:	mov    bh,0x79
  4170f8:	sbb    BYTE PTR [ebx+0x60],ah
  4170fb:	xchg   esp,eax
  4170fc:	(bad)  
  4170fd:	enter  0xed4,0x75
  417101:	pop    ebp
  417102:	lock jno 0x417106
  417105:	push   esp
  417106:	xchg   esi,eax
  417107:	sub    al,dh
  417109:	jne    0x4170d0
  41710b:	js     0x4170f7
  41710d:	push   eax
  41710e:	fsubr  st(6),st
  417110:	jge    0x417140
  417112:	adc    BYTE PTR [ebx+ebp*8],0x5f
  417116:	gs repz jo 0x4170ed
  41711a:	jae    0x417167
  41711c:	loop   0x41717e
  41711e:	inc    eax
  41711f:	add    DWORD PTR ss:[edx+0x2a14714c],esi
  417126:	adc    BYTE PTR [edx],bl
  417128:	sbb    eax,0x27918158
  41712d:	adc    ah,BYTE PTR [ebp-0x55]
  417130:	sti    
  417131:	lods   al,BYTE PTR ds:[esi]
  417132:	inc    ebp
  417133:	aad    0x7b
  417135:	test   eax,0x150f91c3
  41713a:	cmp    ah,BYTE PTR [eax]
  41713c:	cdq    
  41713d:	pop    edx
  41713e:	enter  0x812e,0x9c
  417142:	push   edi
  417143:	in     al,dx
  417144:	mov    bh,0x8a
  417146:	call   0xbc8b3af8
  41714b:	and    ecx,DWORD PTR [edi+eiz*2-0x73]
  41714f:	call   0x1f19e723
  417154:	jb     0x4171a5
  417156:	sbb    eax,0xc72ff4ab
  41715b:	jno    0x41714c
  41715d:	mov    dl,0xfa
  41715f:	mov    esi,0x6bfaa3f4
  417164:	and    cl,BYTE PTR [eax-0x2a]
  417167:	dec    eax
  417168:	add    cl,BYTE PTR [edi]
  41716a:	cmp    eax,0x1c9a99e6
  41716f:	jmp    0x329f:0xbb01b64d
  417176:	outs   dx,BYTE PTR ds:[esi]
  417177:	rcl    BYTE PTR [esi-0x28],0xe9
  41717b:	lods   al,BYTE PTR ds:[esi]
  41717c:	(bad)  
  41717d:	fisttp QWORD PTR [ebp-0xab5c6c9]
  417183:	or     ah,BYTE PTR [edx]
  417185:	repnz clc 
  417187:	mov    eax,0xff298695
  41718c:	test   eax,0x986b8df8
  417191:	mov    al,0x87
  417193:	push   ss
  417194:	leave  
  417195:	add    ebp,edx
  417197:	xchg   edi,eax
  417198:	ja     0x4171e1
  41719a:	(bad)  
  41719c:	aaa    
  41719d:	sahf   
  41719e:	ret    
  41719f:	aam    0x81
  4171a1:	pop    ss
  4171a2:	or     eax,DWORD PTR [esi]
  4171a4:	(bad)  
  4171a5:	xchg   ecx,eax
  4171a6:	inc    edx
  4171a7:	stos   BYTE PTR es:[edi],al
  4171a8:	push   esp
  4171a9:	or     BYTE PTR [eax-0x53],dl
  4171ac:	inc    ebp
  4171ad:	dec    ebx
  4171ae:	out    0xc0,al
  4171b0:	in     eax,dx
  4171b1:	push   esi
  4171b2:	pop    es
  4171b3:	sti    
  4171b4:	xor    ebx,DWORD PTR [ebp+0x44]
  4171b7:	sub    DWORD PTR [ebp+0x1367dcdf],edi
  4171bd:	loop   0x4171d6
  4171bf:	mov    ah,0x16
  4171c1:	xor    al,0x70
  4171c3:	dec    edi
  4171c4:	out    dx,eax
  4171c5:	fxch   st(5)
  4171c7:	push   ds
  4171c8:	ja     0x4171ae
  4171ca:	sub    BYTE PTR [eax+eax*8-0x25],0x6e
  4171cf:	push   0x54d9e162
  4171d4:	inc    ebx
  4171d5:	out    dx,al
  4171d6:	test   BYTE PTR [edi-0x1d8b55b1],0x3c
  4171dd:	cmp    al,0x44
  4171df:	ror    DWORD PTR [esi],0x97
  4171e2:	mov    cl,0x24
  4171e4:	sahf   
  4171e5:	mov    cl,0x3
  4171e7:	repz cmc 
  4171e9:	or     ebx,DWORD PTR [ebx+0x45c761b7]
  4171ef:	adc    ebx,DWORD PTR [ebx]
  4171f1:	mov    ch,0x86
  4171f3:	lods   al,BYTE PTR ds:[esi]
  4171f4:	cwde   
  4171f5:	shl    BYTE PTR [ebx],0xba
  4171f8:	out    dx,eax
  4171f9:	dec    esp
  4171fa:	xor    DWORD PTR [edi+0x57],0xffffff9c
  4171fe:	xchg   BYTE PTR [esi+0x6a31a789],bl
  417204:	sub    ah,bl
  417206:	push   ecx
  417207:	jb     0x4171b4
  417209:	stos   BYTE PTR es:[edi],al
  41720a:	cpuid  
  41720c:	push   cs
  41720d:	fcom   QWORD PTR [ebx+ecx*4+0x4c34b699]
  417214:	sbb    esp,DWORD PTR [eax+ebp*4+0x71]
  417218:	(bad)  
  41721b:	into   
  41721c:	lds    esp,FWORD PTR [edx+ebp*4-0x69]
  417220:	or     esp,esi
  417222:	pop    ecx
  417224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417225:	inc    edx
  417226:	inc    ecx
  417227:	mov    al,ds:0xdea51804
  41722c:	cmp    eax,0x849a0c00
  417231:	das    
  417232:	gs pop ebp
  417234:	ret    0xfff
  417237:	dec    ecx
  417238:	enter  0x3a58,0x3e
  41723c:	dec    edi
  41723d:	and    ah,dh
  41723f:	mov    ds:0xe1afed20,al
  417244:	sti    
  417245:	(bad)  
  417246:	les    ecx,FWORD PTR ds:[esi+0x4e44a927]
  41724d:	push   cs
  41724e:	loop   0x417253
  417250:	stc    
  417251:	shl    DWORD PTR [ebp+0x3a72fb4],cl
  417257:	add    BYTE PTR [esi-0x39],bh
  41725a:	in     al,0x4d
  41725c:	ss pop ecx
  41725e:	mov    BYTE PTR [esi-0x2526def0],bh
  417264:	ret    0xfb4f
  417267:	sbb    al,BYTE PTR [ebx+0x6a]
  41726a:	sbb    al,0x2e
  41726c:	mov    ch,0x54
  41726e:	push   edi
  41726f:	cmp    ch,BYTE PTR [edi+edi*4+0x59432d77]
  417276:	sbb    dl,BYTE PTR [edx]
  417278:	push   ss
  417279:	add    DWORD PTR [edx-0x3e],edi
  41727c:	pop    ebx
  41727d:	xchg   ecx,eax
  41727e:	aad    0xc0
  417280:	xchg   BYTE PTR [esi-0x35],dh
  417283:	mov    esp,0x4738439c
  417288:	jle    0x41720c
  41728a:	and    cl,BYTE PTR [ebp+0x75]
  41728d:	(bad)  [edi+0x27c86892]
  417293:	jle    0x417287
  417295:	or     eax,0xb52da3ed
  41729a:	xor    esp,DWORD PTR [edi+eiz*8]
  41729d:	jbe    0x4172fb
  41729f:	xchg   esp,eax
  4172a0:	shl    edi,1
  4172a2:	jecxz  0x4172e3
  4172a4:	mov    edx,0x86f74b4b
  4172a9:	les    eax,FWORD PTR [ebp+0x7d]
  4172ac:	xor    BYTE PTR [esp+eax*8+0x6e],ah
  4172b0:	or     eax,0x9a3488a0
  4172b5:	push   es
  4172b6:	outs   dx,DWORD PTR ds:[esi]
  4172b7:	sub    al,0xa5
  4172b9:	int3   
  4172ba:	push   ebp
  4172bb:	iret   
  4172bc:	lods   al,BYTE PTR ds:[esi]
  4172bd:	in     eax,0x40
  4172bf:	mov    bh,0x94
  4172c1:	(bad)  
  4172c2:	neg    DWORD PTR [ebx+0x5a519e30]
  4172c8:	popa   
  4172c9:	mov    ss,WORD PTR [ecx+edx*4+0x46fb3914]
  4172d0:	sbb    DWORD PTR [esi+0x42b6c075],eax
  4172d6:	or     ah,ah
  4172d8:	or     esp,DWORD PTR [ecx-0x4e4a67b8]
  4172de:	jo     0x417333
  4172e0:	pop    ss
  4172e1:	icebp  
  4172e2:	and    DWORD PTR [esi+esi*8],ecx
  4172e5:	(bad)  
  4172e6:	cmp    DWORD PTR [edx-0x17],esi
  4172e9:	mov    esi,DWORD PTR [ebx+0x30]
  4172ec:	dec    eax
  4172ed:	push   esi
  4172ee:	mov    ah,0x72
  4172f0:	mov    bl,0xc5
  4172f2:	and    cl,BYTE PTR [eax-0x39363158]
  4172f8:	dec    eax
  4172f9:	loop   0x41727e
  4172fb:	cli    
  4172fc:	mov    al,ds:0x2629ae53
  417301:	xchg   esp,eax
  417302:	push   eax
  417303:	outs   dx,DWORD PTR ds:[esi]
  417304:	mov    ebx,0xf73a2945
  417309:	xchg   ebp,eax
  41730a:	sahf   
  41730b:	loop   0x41735d
  41730d:	cwde   
  41730e:	or     bl,0x7a
  417311:	xor    edx,ebp
  417313:	sahf   
  417314:	hlt    
  417315:	xchg   edi,eax
  417316:	dec    esp
  417317:	je     0x41730f
  417319:	push   cs
  41731a:	in     al,0xa3
  41731c:	mov    bl,0x84
  41731e:	xor    esi,edx
  417320:	push   eax
  417321:	dec    esp
  417322:	outs   dx,BYTE PTR ds:[esi]
  417323:	push   ss
  417324:	inc    esi
  417325:	ror    BYTE PTR [edx+ebx*1-0x72c212fb],0x28
  41732d:	or     bh,BYTE PTR ss:[edi+0x3c673cf8]
  417334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417335:	(bad)  
  417336:	or     DWORD PTR ds:[ebx+0x368b6599],ebp
  41733d:	push   0xfffffffd
  41733f:	mov    BYTE PTR [edx-0x9],ch
  417342:	inc    ecx
  417343:	xor    eax,0xe2cda1ed
  417348:	lods   al,BYTE PTR ds:[esi]
  417349:	retf   
  41734a:	push   0x2bd4b699
  41734f:	ret    0xd137
  417352:	leave  
  417353:	ret    0x876a
  417356:	and    BYTE PTR [edi],al
  417358:	test   al,0x4c
  41735a:	push   edi
  41735b:	stc    
  41735c:	push   ebx
  41735d:	jp     0x417335
  41735f:	loop   0x4172ec
  417361:	push   es
  417362:	sbb    ebx,0x7e
  417365:	in     al,dx
  417366:	push   cs
  417367:	jno    0x41731b
  417369:	mov    ds:0x522905e6,eax
  41736e:	jecxz  0x4173a7
  417370:	imul   BYTE PTR [ebx-0x7b018e93]
  417376:	xchg   esi,eax
  417377:	imul   esp,DWORD PTR [ecx-0x64407022],0xffffffdf
  41737e:	dec    edi
  41737f:	inc    esp
  417380:	or     edx,0xffffffa2
  417383:	adc    esi,DWORD PTR [esi-0x704d0b71]
  417389:	and    DWORD PTR [edx-0x6e6decf6],ecx
  41738f:	and    BYTE PTR [eax-0x54],bh
  417392:	dec    esi
  417393:	mov    bh,bl
  417395:	xchg   DWORD PTR [ecx+eax*8+0x581c9d57],ebx
  41739c:	imul   edi,eax,0x759ecbe3
  4173a2:	jmp    0x4173f6
  4173a4:	loopne 0x4173fa
  4173a6:	inc    ecx
  4173a7:	mov    dl,0xac
  4173a9:	sub    al,0x23
  4173ab:	icebp  
  4173ac:	jo     0x4173fe
  4173ae:	test   cl,ah
  4173b0:	cld    
  4173b1:	push   ss
  4173b2:	call   0xe53346db
  4173b7:	cmp    al,0x92
  4173b9:	xchg   ecx,eax
  4173ba:	les    esp,FWORD PTR [ebp+0x53]
  4173bd:	test   BYTE PTR [edi+esi*4-0x20],dh
  4173c1:	in     eax,0xc4
  4173c3:	ja     0x417349
  4173c5:	inc    esi
  4173c6:	mov    eax,ds:0x7eeb9e01
  4173cb:	neg    DWORD PTR [ecx+0x6]
  4173ce:	icebp  
  4173cf:	inc    ebp
  4173d0:	mov    WORD PTR [esi+eiz*1+0x4cb03e80],?
  4173d7:	adc    ecx,DWORD PTR [esi+edx*2+0x73c007a9]
  4173de:	jmp    0x417437
  4173e0:	lahf   
  4173e1:	xchg   ebp,eax
  4173e2:	out    0x81,al
  4173e4:	mov    al,0xc2
  4173e6:	push   0x1d8eb905
  4173eb:	leave  
  4173ec:	or     dh,cl
  4173ee:	data16 stc 
  4173f0:	out    0x94,al
  4173f2:	mov    edi,0x1832a84a
  4173f7:	(bad)  
  4173f8:	in     al,0x1c
  4173fa:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4173fc:	lea    ebx,[esi]
  4173fe:	loopne 0x4173ab
  417400:	mov    BYTE PTR [eax-0x5b1f216d],bh
  417406:	inc    edx
  417407:	faddp  st(0),st
  417409:	rcl    ebp,1
  41740b:	ret    
  41740c:	and    DWORD PTR [ebp+ecx*2+0x551945fc],edi
  417413:	mov    al,0x7e
  417415:	push   es
  417416:	mov    ebx,0x724b0d71
  41741b:	test   al,0xd3
  41741d:	ret    
  41741e:	dec    eax
  41741f:	inc    esi
  417420:	out    dx,eax
  417421:	fucomp st(0)
  417423:	pop    edi
  417424:	(bad)  [eax]
  417426:	sbb    cl,0x10
  417429:	pop    es
  41742a:	fmul   DWORD PTR [ebp-0x62ac8a75]
  417430:	daa    
  417431:	call   0xe5fd:0x1a8f6ba1
  417438:	mov    ss,esi
  41743a:	test   esp,0xebcae72f
  417440:	xchg   esp,eax
  417441:	div    DWORD PTR [esp+eax*2]
  417444:	nop
  417445:	fsubr  st(1),st
  417447:	ja     0x41743d
  417449:	add    DWORD PTR [esi+0x24],ebx
  41744c:	mov    ebp,0x6512319d
  417451:	clc    
  417452:	adc    dh,BYTE PTR [esi]
  417454:	retf   
  417455:	das    
  417456:	daa    
  417457:	loop   0x417415
  417459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41745a:	push   ebx
  41745b:	jle    0x4174c2
  41745d:	cmp    al,0x78
  41745f:	pop    ds
  417460:	pop    ecx
  417461:	adc    DWORD PTR [ecx],esp
  417463:	push   ebx
  417464:	(bad)  
  417465:	mov    cl,0xe4
  417467:	add    bl,BYTE PTR [eax]
  417469:	imul   ebx,esi,0x33
  41746c:	pop    esi
  41746d:	mov    al,ds:0xf369e913
  417472:	out    dx,al
  417473:	mov    esp,0xe39801a3
  417478:	cwde   
  417479:	jne    0x4174f8
  41747b:	inc    esp
  41747c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41747d:	das    
  41747e:	addr16 out 0x5d,eax
  417481:	dec    esp
  417482:	dec    esp
  417483:	mov    dl,0x22
  417485:	retf   0xed99
  417488:	pop    ebx
  417489:	out    dx,eax
  41748a:	xchg   ebx,eax
  41748b:	dec    edx
  41748c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41748d:	and    eax,DWORD PTR [esi+0x5b528646]
  417493:	xor    BYTE PTR [eax-0x37],0x54
  417497:	xchg   eax,ebx
  417499:	jne    0x4174a8
  41749b:	retf   
  41749c:	dec    ecx
  41749d:	imul   edx,edi,0x49935195
  4174a3:	jecxz  0x4174d0
  4174a5:	sub    eax,0xc901d1b
  4174aa:	or     edx,DWORD PTR [esi-0x46]
  4174ad:	sub    ecx,0xffffff9f
  4174b0:	int    0x11
  4174b2:	jbe    0x417500
  4174b4:	jmp    0xdc2e:0x2c7d3513
  4174bb:	es xor al,0xc8
  4174be:	les    edi,FWORD PTR [edx+eiz*2]
  4174c1:	mov    esp,0x9c75090
  4174c6:	sbb    bh,BYTE PTR [ecx]
  4174c8:	mov    ecx,0x24dad7f8
  4174cd:	cmp    ch,dh
  4174cf:	stos   BYTE PTR es:[edi],al
  4174d0:	scas   eax,DWORD PTR es:[edi]
  4174d1:	fisttp WORD PTR [ebx-0x70]
  4174d4:	dec    ebp
  4174d5:	or     esi,ecx
  4174d7:	mov    ds:0x42eddcdd,al
  4174dc:	and    eax,0x7c25626f
  4174e1:	fild   DWORD PTR [eax+0x4216c226]
  4174e7:	fist   DWORD PTR [eax+0x1d]
  4174ea:	in     al,dx
  4174eb:	or     al,BYTE PTR [eax-0x55858b12]
  4174f1:	jle    0x417554
  4174f3:	sub    dl,BYTE PTR [esi-0x3c52dca5]
  4174f9:	test   BYTE PTR [eax+0x36b0c984],bl
  4174ff:	pop    ss
  417500:	enter  0x4ed1,0xf6
  417504:	pushf  
  417505:	adc    DWORD PTR [ebp+0x70],0xa
  417509:	xchg   esi,eax
  41750a:	or     al,0x1
  41750c:	cmp    eax,esi
  41750e:	repnz out dx,eax
  417510:	cdq    
  417511:	pop    ds
  417512:	(bad)  
  417514:	frstor [ebp-0x3c]
  417517:	xor    BYTE PTR [ecx-0x5d9ee79],dh
  41751d:	inc    ebx
  41751e:	neg    BYTE PTR [esi+ecx*8-0x3a7d33c7]
  417525:	enter  0x69f5,0x3a
  417529:	lock jmp 0x6c2:0xdc2716b7
  417531:	jge    0x417579
  417533:	into   
  417534:	xchg   edi,eax
  417535:	sub    al,BYTE PTR [ebp-0x316be4fa]
  41753b:	mov    al,cl
  41753d:	into   
  41753e:	mov    ds:0x18aeb3e4,al
  417543:	(bad)  
  417544:	jge    0x41751d
  417546:	test   DWORD PTR [ebp+0x4d7f8165],0xf181367a
  417550:	mov    esi,0x6182488f
  417555:	test   eax,0xad552bf0
  41755a:	mov    ss,edx
  41755c:	xor    al,0xfe
  41755e:	mov    ecx,0xf7abc7e
  417563:	fs push 0xd24c0be8
  417569:	test   BYTE PTR [ebp-0x2cde0c02],dl
  41756f:	mov    ebx,DWORD PTR [esi-0x5f]
  417572:	nop
  417573:	(bad)  
  417574:	cwde   
  417575:	or     DWORD PTR [esi],0x52b58905
  41757b:	fnsave [eax+edi*1]
  41757e:	jge    0x41756a
  417580:	pop    ebp
  417581:	xchg   ebx,eax
  417582:	lea    edx,[edx+0x5285f32a]
  417588:	cmp    BYTE PTR [edi],0xd4
  41758b:	into   
  41758c:	dec    esi
  41758d:	xchg   edi,eax
  41758e:	call   DWORD PTR [ebx]
  417590:	jecxz  0x41759e
  417592:	push   ds
  417593:	in     eax,0x4f
  417595:	xchg   ebp,eax
  417596:	mov    ecx,0x995d52fd
  41759b:	clc    
  41759c:	push   edx
  41759d:	das    
  41759e:	cmp    ebx,edx
  4175a0:	fwait
  4175a1:	pop    ebp
  4175a2:	dec    esp
  4175a3:	jecxz  0x4175f5
  4175a5:	call   0x111a8a1f
  4175aa:	mov    edi,0x852a2194
  4175af:	out    0xaa,al
  4175b1:	daa    
  4175b2:	mov    BYTE PTR [eax+0x2599094],cl
  4175b8:	xchg   ebx,eax
  4175b9:	cmp    DWORD PTR [esi+0x17b7cae0],ecx
  4175bf:	pop    eax
  4175c0:	scas   al,BYTE PTR es:[edi]
  4175c1:	fcmovb st,st(4)
  4175c3:	mov    BYTE PTR [ebx+eiz*8],bh
  4175c6:	jbe    0x41760b
  4175c8:	jo     0x417590
  4175ca:	sar    cl,cl
  4175cc:	mov    esi,0x243e8512
  4175d1:	or     dl,BYTE PTR [esi+ebx*4]
  4175d4:	or     BYTE PTR [edi+0x1f21fba8],0xca
  4175db:	inc    esi
  4175dc:	loopne 0x4175ed
  4175de:	dec    eax
  4175df:	int3   
  4175e0:	adc    dh,ch
  4175e2:	xchg   ebp,eax
  4175e3:	dec    ebp
  4175e4:	xor    esp,edi
  4175e6:	lock jmp 0x2bb12c17
  4175ec:	adc    DWORD PTR [eax-0x3b],eax
  4175ef:	(bad)  
  4175f0:	mov    esp,0x76e1e6
  4175f5:	jno    0x4175ba
  4175f7:	sub    eax,0x4c8d0e44
  4175fc:	je     0x4175e7
  4175fe:	dec    edi
  4175ff:	inc    edi
  417600:	mov    ebp,0x1e4a3250
  417605:	ror    BYTE PTR [ebp-0x31],0x65
  417609:	(bad)
  41760c:	xor    al,0x8a
  41760e:	scas   eax,DWORD PTR es:[edi]
  41760f:	mov    eax,0x22a2bf26
  417614:	sar    BYTE PTR [ebx-0x4f],cl
  417617:	xor    al,0x3
  417619:	(bad)  
  41761a:	sbb    DWORD PTR ds:0xb4ef0270,ebx
  417620:	(bad)  
  417621:	pusha  
  417622:	mov    edx,0xe60e788e
  417627:	or     eax,0x68372169
  41762c:	jns    0x417697
  41762e:	add    ecx,ebx
  417630:	jnp    0x4175d1
  417632:	repnz stos BYTE PTR es:[edi],al
  417634:	mov    bl,0xea
  417636:	cmp    dl,BYTE PTR [ecx]
  417638:	mov    edi,0x7fbb8a4
  41763d:	in     al,dx
  41763e:	out    dx,al
  41763f:	jno    0x41761c
  417641:	fiadd  DWORD PTR [ebx+0x21]
  417644:	(bad)  
  417646:	leave  
  417647:	jl     0x4175e4
  417649:	sahf   
  41764a:	dec    edx
  41764b:	mov    edx,0xaf97c67e
  417650:	nop
  417651:	int    0xef
  417653:	push   ecx
  417654:	xchg   BYTE PTR [edi],ah
  417656:	dec    ecx
  417657:	out    dx,al
  417658:	arpl   WORD PTR [esi+0x4e3f5213],dx
  41765e:	out    dx,al
  41765f:	mov    edi,0xbda4b444
  417664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417665:	mov    cl,0x45
  417667:	ss loop 0x417607
  41766a:	mov    eax,ds:0xd7ba0e69
  41766f:	push   ds
  417670:	stos   DWORD PTR es:[edi],eax
  417671:	cmp    eax,0xa274e21a
  417676:	jmp    0x500af158
  41767b:	dec    ebp
  41767c:	jne    0x41764a
  41767e:	or     al,0x59
  417680:	(bad)  
  417682:	(bad)  
  417683:	int3   
  417684:	or     al,0xc1
  417686:	dec    esp
  417687:	push   esi
  417688:	inc    esp
  417689:	and    ah,BYTE PTR [esi]
  41768b:	cmp    eax,0x2f20299d
  417690:	test   ch,dh
  417692:	imul   ecx,DWORD PTR [eax],0x21
  417695:	(bad)  
  417697:	dec    DWORD PTR [edx-0x6046e3ea]
  41769d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41769e:	inc    esp
  41769f:	add    al,0xdd
  4176a1:	mov    dl,0x7c
  4176a3:	dec    ebp
  4176a4:	mov    ds:0x225085a6,al
  4176a9:	mov    ebp,0xc7bcffeb
  4176ae:	add    eax,0x8cde53ce
  4176b3:	mov    WORD PTR [esi+0x7259b3eb],?
  4176b9:	scas   eax,DWORD PTR es:[edi]
  4176ba:	(bad)  
  4176bb:	adc    al,0x39
  4176bd:	cmp    al,0x11
  4176bf:	cmp    eax,0x24a414aa
  4176c4:	inc    esp
  4176c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176c6:	test   eax,0x23c54b88
  4176cb:	pop    edx
  4176cc:	xor    DWORD PTR [edi],esi
  4176ce:	mov    ch,0x29
  4176d0:	sub    DWORD PTR [esi+0x2a6b52f2],ecx
  4176d6:	jmp    0x417751
  4176d8:	hlt    
  4176d9:	pop    esp
  4176da:	js     0x4176c7
  4176dc:	xchg   ebx,eax
  4176dd:	jo     0x41766c
  4176df:	cdq    
  4176e0:	jle    0x41775b
  4176e2:	inc    ecx
  4176e3:	adc    BYTE PTR [ebx],bh
  4176e5:	daa    
  4176e6:	push   0x336ba601
  4176eb:	add    BYTE PTR [ebx+0x7ce2649],al
  4176f1:	mov    edi,0xc3982ea5
  4176f6:	push   esi
  4176f7:	mov    edx,0x3bb5ebf1
  4176fc:	jle    0x4176d9
  4176fe:	mov    esp,0xdc88bf69
  417703:	fsub   st,st(3)
  417705:	test   dl,0x6a
  417708:	outs   dx,DWORD PTR ds:[esi]
  417709:	jno    0x4176db
  41770b:	inc    edx
  41770c:	pop    esp
  41770d:	out    0x9c,eax
  41770f:	mov    esp,0xfac8bcd6
  417714:	dec    edi
  417715:	dec    ecx
  417716:	push   ebx
  417717:	test   BYTE PTR ds:0xe4353786,cl
  41771d:	test   al,0x93
  41771f:	dec    ebx
  417720:	sbb    DWORD PTR [ecx-0xf8b25ed],edi
  417726:	(bad)  
  417727:	enter  0x5e3f,0xf6
  41772b:	imul   edi,ebp,0x35
  41772e:	jbe    0x417749
  417730:	pop    ebx
  417731:	in     eax,0xf9
  417733:	gs out 0x4,eax
  417736:	ror    DWORD PTR [esp+ecx*1],cl
  417739:	cmc    
  41773a:	dec    ebx
  41773b:	jle    0x417785
  41773d:	shl    BYTE PTR [edx+0x29],cl
  417740:	(bad)  
  417741:	sbb    eax,edi
  417743:	xor    dh,BYTE PTR [ebx]
  417745:	sbb    DWORD PTR [eax+0x58],edx
  417748:	out    dx,al
  417749:	int3   
  41774a:	and    esp,DWORD PTR [ebp-0x6b0c993b]
  417750:	imul   ebp,DWORD PTR [esi+0x7d5e4e00],0x5
  417757:	mov    eax,ds:0x9adffa7f
  41775c:	push   eax
  41775d:	call   0xa9e1:0x6949532
  417764:	lock retf 
  417766:	sbb    al,0xc6
  417768:	mov    eax,0x4db8c432
  41776d:	fiadd  DWORD PTR [esi-0x8de0d1]
  417773:	test   eax,0xe1d5759f
  417778:	xchg   ah,bl
  41777a:	dec    edi
  41777b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41777c:	push   0xd8de7e20
  417781:	mov    dh,bh
  417783:	or     dl,BYTE PTR [eax+0x2a239f9e]
  417789:	xchg   ecx,eax
  41778a:	adc    DWORD PTR [esi+0x4857069e],0xaf77835
  417794:	xchg   edx,eax
  417795:	mov    edx,0xa640939a
  41779a:	mov    al,0x39
  41779c:	loop   0x41772f
  41779e:	in     al,dx
  41779f:	xor    al,0x17
  4177a1:	cmp    DWORD PTR [edx],esp
  4177a3:	pop    ebx
  4177a4:	les    esi,FWORD PTR ds:0x6415f395
  4177aa:	test   al,0x89
  4177ac:	pop    ss
  4177ad:	frstor [edx+0x5d]
  4177b0:	cdq    
  4177b1:	dec    ecx
  4177b2:	push   ebp
  4177b3:	repnz mov dh,0x23
  4177b6:	fcom   DWORD PTR [ebp-0x2568e34b]
  4177bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177bd:	aas    
  4177be:	push   ecx
  4177bf:	outs   dx,DWORD PTR ds:[esi]
  4177c0:	push   edx
  4177c1:	inc    ebx
  4177c2:	push   edx
  4177c3:	ficom  DWORD PTR [ebx+0x71ed83a2]
  4177c9:	test   eax,0x4e854417
  4177ce:	add    eax,0xe2c6af98
  4177d3:	retf   
  4177d4:	xchg   DWORD PTR [ebp+0x6abdb2bb],esp
  4177da:	shr    BYTE PTR [edx-0x21],cl
  4177dd:	and    al,0x7f
  4177df:	inc    ecx
  4177e0:	cmp    eax,ecx
  4177e2:	int    0xbe
  4177e4:	xchg   DWORD PTR [edx+0x63b63e87],ebp
  4177ea:	repnz add al,0x39
  4177ed:	dec    edx
  4177ee:	mov    al,0x21
  4177f0:	test   al,0xca
  4177f2:	push   0xab2fc047
  4177f7:	dec    edi
  4177f8:	add    ebx,ecx
  4177fa:	aas    
  4177fb:	adc    al,0x86
  4177fd:	into   
  4177fe:	jae    0x417869
  417800:	mov    bl,0xd8
  417802:	les    esp,FWORD PTR [ecx+esi*1-0x64]
  417806:	daa    
  417807:	enter  0xc538,0x67
  41780b:	xor    DWORD PTR [ebx-0x2],0xe77b3cc4
  417812:	(bad)  
  417813:	stos   DWORD PTR es:[edi],eax
  417814:	cli    
  417815:	loope  0x417857
  417817:	ret    
  417818:	jecxz  0x417893
  41781a:	int    0xd3
  41781c:	pop    esi
  41781d:	sub    ebx,esi
  41781f:	imul   eax,DWORD PTR [ecx+0x61],0xe57fc650
  417826:	xchg   ecx,eax
  417827:	adc    DWORD PTR [edx],esp
  417829:	mov    al,ds:0x7890ab82
  41782e:	jns    0x417865
  417830:	xor    eax,0x8bad38bd
  417835:	es div ch
  417838:	cmp    bh,BYTE PTR [ebx-0x35]
  41783b:	or     al,0xe
  41783d:	aas    
  41783e:	cdq    
  41783f:	add    BYTE PTR [edx],al
  417841:	push   ds
  417842:	fld    QWORD PTR [esi]
  417844:	xchg   ebp,eax
  417845:	sub    eax,0xf98cf6ca
  41784a:	call   0x972f3950
  41784f:	repz pop es
  417851:	pop    ebp
  417852:	cmp    al,0x9f
  417854:	pop    es
  417855:	adc    al,0x39
  417857:	mov    bh,0x5
  417859:	aas    
  41785a:	ds xchg edi,eax
  41785c:	cld    
  41785d:	fidiv  DWORD PTR [edx-0x110915f8]
  417863:	dec    ebx
  417864:	xchg   esi,eax
  417865:	mov    eax,0x22056ccc
  41786a:	cmc    
  41786b:	lock ror al,1
  41786e:	retf   0x7f54
  417871:	cmp    eax,0xc9435c22
  417876:	ja     0x417846
  417878:	dec    ebx
  417879:	(bad)  
  41787a:	pop    ecx
  41787b:	cmp    dh,bl
  41787d:	arpl   WORD PTR ds:0x8749357b,ax
  417883:	jbe    0x41789b
  417885:	lods   eax,DWORD PTR ds:[esi]
  417886:	jbe    0x417850
  417888:	neg    BYTE PTR [edx]
  41788a:	xchg   ebp,eax
  41788b:	jns    0x41781f
  41788d:	sub    al,0xca
  41788f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417890:	jg     0x417877
  417892:	aas    
  417893:	test   BYTE PTR [edi],0x21
  417896:	sub    BYTE PTR [ebp+0x9a8e462],dh
  41789c:	mov    ds:0x9112153f,eax
  4178a1:	jb     0x417911
  4178a3:	lock dec eax
  4178a5:	and    al,0x77
  4178a7:	push   edx
  4178a8:	inc    edx
  4178a9:	mov    ch,BYTE PTR [edx+0x6d9f92d0]
  4178af:	xchg   ecx,eax
  4178b0:	(bad)  
  4178b1:	arpl   WORD PTR [ecx+0x54a1184b],sp
  4178b7:	sub    BYTE PTR [ebp-0x7574e3],0xa8
  4178be:	jmp    0x4178e0
  4178c0:	sub    al,BYTE PTR [ebp+eax*2-0x1e]
  4178c4:	outs   dx,DWORD PTR ds:[esi]
  4178c5:	movlps QWORD PTR [ebp+0x6f],xmm4
  4178c9:	popa   
  4178ca:	xchg   esi,ebp
  4178cc:	mov    al,BYTE PTR [edi+edx*4]
  4178cf:	jnp    0x4178d5
  4178d1:	imul   esp,DWORD PTR [ebp+0x6e],0xd961b7b
  4178d8:	xchg   edi,eax
  4178d9:	fnstcw WORD PTR [esi]
  4178db:	cdq    
  4178dc:	jmp    0xb4bc698d
  4178e1:	sbb    al,0x93
  4178e3:	sub    al,0x67
  4178e5:	or     esp,DWORD PTR [esi-0x41ae171d]
  4178eb:	aad    0x8b
  4178ed:	sbb    DWORD PTR [esi-0x38],edi
  4178f0:	lods   al,BYTE PTR ds:[esi]
  4178f1:	mov    eax,0xb297152c
  4178f6:	in     al,dx
  4178f7:	push   ecx
  4178f8:	push   esi
  4178f9:	lods   eax,DWORD PTR ds:[esi]
  4178fa:	pop    esi
  4178fb:	jmp    0x96d1ac8a
  417900:	popf   
  417901:	fisubr WORD PTR [esi]
  417903:	fcomp  DWORD PTR [esi-0x3c]
  417906:	rcl    al,1
  417908:	arpl   WORD PTR [edx],ax
  41790a:	adc    eax,esi
  41790c:	fdiv   DWORD PTR [ebx-0x7c]
  41790f:	xor    BYTE PTR [ecx-0x59],bh
  417912:	jge    0x417953
  417914:	jmp    FWORD PTR [esi+0x2f]
  417917:	push   di
  417919:	sub    eax,0x5e19f467
  41791e:	popf   
  41791f:	int3   
  417920:	scas   al,BYTE PTR es:[edi]
  417921:	mov    fs,eax
  417923:	mov    esp,ebp
  417925:	xchg   esi,eax
  417926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417927:	pop    ebx
  417928:	je     0x4178cb
  41792a:	(bad)  
  41792c:	je     0x41792e
  41792e:	test   cl,dl
  417930:	enter  0x5db0,0xc
  417934:	popa   
  417935:	loope  0x417927
  417937:	mov    BYTE PTR [eax],bl
  417939:	sti    
  41793a:	outs   dx,DWORD PTR ds:[esi]
  41793b:	daa    
  41793c:	adc    eax,0xc88b7c8e
  417941:	or     al,0xd1
  417943:	pop    es
  417944:	mov    DWORD PTR [ebx+0x636ab833],ebp
  41794a:	aam    0xc2
  41794c:	sbb    DWORD PTR [ebx+0x62],edi
  41794f:	inc    esp
  417950:	push   ds
  417951:	pop    ebx
  417952:	outs   dx,DWORD PTR ds:[esi]
  417953:	jo     0x417948
  417955:	jle    0x4179bb
  417957:	in     al,0x5c
  417959:	cmp    ebp,DWORD PTR [edx-0x45]
  41795c:	stos   DWORD PTR es:[edi],eax
  41795d:	stos   BYTE PTR es:[edi],al
  41795e:	fchs   
  417960:	or     DWORD PTR [esi+esi*1+0x4ae27c29],esp
  417967:	pop    esp
  417968:	and    cl,BYTE PTR [esp+eiz*4]
  41796b:	rcl    BYTE PTR [ebx],0x1d
  41796e:	push   0xffffff80
  417970:	xchg   edi,eax
  417971:	pusha  
  417972:	push   esp
  417973:	pushf  
  417974:	adc    edx,DWORD PTR [ebp-0x4aa75e6]
  41797a:	push   ds
  41797b:	mov    bh,0x3b
  41797d:	cdq    
  41797e:	aaa    
  41797f:	loopne 0x4179ed
  417981:	aaa    
  417982:	ror    ch,cl
  417984:	pop    edx
  417985:	lods   eax,DWORD PTR ds:[esi]
  417986:	aas    
  417987:	inc    ebp
  417988:	cmp    al,bl
  41798a:	sub    al,0x56
  41798c:	xor    DWORD PTR [ebx],ebp
  41798e:	sbb    ah,BYTE PTR ds:0xc6d54b1f
  417994:	or     al,0x4
  417996:	imul   edx,eax,0xccdb547f
  41799c:	mov    al,ds:0x3ccb2050
  4179a1:	pop    es
  4179a2:	ret    
  4179a3:	jnp    0x41792b
  4179a5:	or     al,0xee
  4179a7:	inc    ebx
  4179a8:	lea    ebx,[edx]
  4179aa:	adc    eax,0xf38bdf95
  4179af:	ins    BYTE PTR es:[edi],dx
  4179b0:	popf   
  4179b1:	jno    0x417964
  4179b3:	xchg   esi,ebx
  4179b5:	mov    bh,0x6a
  4179b7:	int3   
  4179b8:	jns    0x417991
  4179ba:	hlt    
  4179bb:	pop    ebx
  4179bc:	jmp    0x41797f
  4179be:	push   esi
  4179bf:	xor    BYTE PTR [ecx+0xe0a30a],dl
  4179c5:	aas    
  4179c6:	inc    edi
  4179c7:	push   edx
  4179c8:	pop    ss
  4179c9:	in     eax,dx
  4179ca:	fisttp WORD PTR [ebx]
  4179cc:	fwait
  4179cd:	jmp    0x88c8:0x485522bf
  4179d4:	mov    bh,0x2a
  4179d6:	cdq    
  4179d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179d8:	mov    esp,0x83071215
  4179dd:	shl    BYTE PTR [ebx],0x83
  4179e0:	ins    BYTE PTR es:[edi],dx
  4179e1:	mov    dl,0xa2
  4179e3:	popf   
  4179e4:	test   DWORD PTR [edi+ecx*2-0x5f],ebp
  4179e8:	test   BYTE PTR [ebp+0x559fcc78],cl
  4179ee:	cmp    BYTE PTR [ebp-0x78],dl
  4179f1:	and    al,0x70
  4179f3:	std    
  4179f4:	cs retf 0x8fae
  4179f8:	aam    0xc7
  4179fa:	das    
  4179fb:	jmp    0x417996
  4179fd:	daa    
  4179fe:	add    eax,0xe872a326
  417a03:	jg     0x417a82
  417a05:	aad    0x94
  417a07:	push   ecx
  417a08:	cli    
  417a09:	jge    0x417a34
  417a0b:	sbb    eax,0xd6c9139f
  417a10:	leave  
  417a11:	aaa    
  417a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a13:	add    edi,DWORD PTR [ebp-0x3c9d67b2]
  417a19:	sbb    ch,BYTE PTR [esi]
  417a1b:	(bad)  
  417a1c:	(bad)  
  417a1d:	xchg   ecx,eax
  417a1e:	loope  0x417a99
  417a20:	mov    bh,0x2
  417a22:	pop    ecx
  417a23:	adc    ebx,0x9d3f0143
  417a29:	sbb    eax,0xffc5a3c6
  417a2e:	sub    ebx,DWORD PTR [esi-0x15]
  417a31:	test   DWORD PTR [ecx-0xb],edx
  417a34:	or     al,0xcb
  417a36:	into   
  417a37:	ins    BYTE PTR es:[edi],dx
  417a38:	js     0x417a7c
  417a3a:	xchg   edi,eax
  417a3b:	dec    ebx
  417a3c:	mov    edx,0x42f48f7c
  417a41:	adc    DWORD PTR [eax-0x62],esi
  417a44:	jmp    0x417a4d
  417a46:	std    
  417a47:	cs mov ch,0xab
  417a4a:	cmp    BYTE PTR [ebx+ebp*1-0x79],0x1d
  417a4f:	inc    ecx
  417a50:	popa   
  417a51:	pop    edx
  417a52:	loopne 0x417ad1
  417a54:	xchg   edi,eax
  417a55:	jb     0x417a28
  417a57:	test   al,0x54
  417a59:	mov    dh,0x7b
  417a5b:	test   BYTE PTR [edx],bl
  417a5d:	call   0x37f2:0xe63ab8d7
  417a64:	add    cl,0x7e
  417a67:	retf   0x38a0
  417a6a:	cdq    
  417a6b:	pop    esi
  417a6c:	xchg   ecx,eax
  417a6d:	div    DWORD PTR [edx-0x6bf12c21]
  417a73:	mov    BYTE PTR [edx-0x62],bh
  417a76:	push   ebx
  417a77:	scas   eax,DWORD PTR es:[edi]
  417a78:	hlt    
  417a79:	pop    ebx
  417a7a:	xchg   ebp,eax
  417a7b:	pop    es
  417a7c:	cmp    BYTE PTR [ebx-0x43],dh
  417a7f:	ins    BYTE PTR es:[edi],dx
  417a80:	in     eax,dx
  417a81:	xchg   BYTE PTR [ebp-0x54],dl
  417a84:	loope  0x417a25
  417a86:	sbb    BYTE PTR [ecx+0x2d0fc4b],0x86
  417a8d:	mov    bh,0x13
  417a8f:	imul   ebp,DWORD PTR [ebp-0x75dd37fc],0xffffffbd
  417a96:	fstp   QWORD PTR [eax-0x78]
  417a99:	shl    ecx,0x9d
  417a9c:	ret    
  417a9d:	(bad)  
  417a9e:	inc    ecx
  417a9f:	dec    esp
  417aa0:	adc    dl,bl
  417aa2:	test   eax,0x363e29d8
  417aa7:	pop    edx
  417aa8:	mov    dh,0xfa
  417aaa:	jg     0x417afa
  417aac:	push   edx
  417aad:	jne    0x417aec
  417aaf:	mov    ah,0xb5
  417ab1:	mov    esi,0xbf0d314a
  417ab6:	add    al,0xce
  417ab8:	lahf   
  417ab9:	ja     0x417b10
  417abb:	jp     0x417a96
  417abd:	sub    DWORD PTR [edi],ebp
  417abf:	lea    ebx,[ebx-0x46]
  417ac2:	and    eax,0x1caf4c12
  417ac7:	jmp    0xa2da:0x2127dba1
  417ace:	enter  0xff06,0x5
  417ad2:	std    
  417ad3:	stc    
  417ad4:	dec    edi
  417ad5:	stc    
  417ad6:	gs push ds
  417ad8:	or     DWORD PTR [ecx+0x1d],esp
  417adb:	jne    0x417aa6
  417add:	retf   
  417ade:	pusha  
  417adf:	push   ebx
  417ae0:	aad    0xe6
  417ae2:	dec    esi
  417ae3:	pop    eax
  417ae4:	mov    ds:0x2b005530,al
  417ae9:	jno    0x417ab8
  417aeb:	lahf   
  417aec:	js     0x417b04
  417aee:	mov    ebp,0x251e07ec
  417af3:	sub    BYTE PTR ds:[edx+0x7c39d902],cl
  417afa:	(bad)  
  417afb:	out    dx,eax
  417afc:	or     ch,BYTE PTR [edi+0x52]
  417aff:	dec    edi
  417b00:	pop    ds
  417b01:	stos   DWORD PTR es:[edi],eax
  417b02:	mov    dl,ah
  417b04:	(bad)  
  417b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b06:	stos   DWORD PTR es:[edi],eax
  417b07:	pop    es
  417b08:	aam    0xb3
  417b0a:	mov    esp,esp
  417b0c:	jmp    DWORD PTR [ebp-0x76]
  417b0f:	lods   al,BYTE PTR ds:[esi]
  417b10:	or     DWORD PTR [edi+0x6c227bcd],ebp
  417b16:	add    esi,DWORD PTR [ebx+esi*2-0x5f]
  417b1a:	pushf  
  417b1b:	push   ds
  417b1c:	xchg   DWORD PTR [esi],ebp
  417b1e:	dec    esi
  417b1f:	jmp    0x47721b69
  417b24:	dec    eax
  417b25:	shl    edi,cl
  417b27:	push   0x7d
  417b29:	push   0xfb5bd832
  417b2e:	lahf   
  417b2f:	imul   edi,DWORD PTR [eax],0x15b6e6b1
  417b35:	rol    DWORD PTR [ebx+0x3a],1
  417b38:	dec    ecx
  417b39:	imul   eax,edi,0xc5883403
  417b3f:	jbe    0x417b42
  417b41:	mov    cl,BYTE PTR [edi+0x9]
  417b44:	push   esp
  417b45:	dec    edx
  417b46:	popa   
  417b47:	iret   
  417b48:	mov    al,ds:0xa4e552d1
  417b4d:	xchg   ebp,eax
  417b4e:	cld    
  417b4f:	leave  
  417b50:	jne    0x417b81
  417b52:	jl     0x417ad7
  417b54:	pop    ss
  417b55:	test   DWORD PTR [eax+0x4d],eax
  417b58:	das    
  417b59:	test   DWORD PTR [eax],0x5e5c3736
  417b5f:	add    al,0xd6
  417b61:	inc    edi
  417b62:	repnz push ds
  417b64:	call   0x1367:0x4ddd7f5b
  417b6b:	mov    dh,0x18
  417b6d:	ucomiss xmm3,DWORD PTR [esi-0x1b]
  417b71:	jmp    0x417bc6
  417b73:	ja     0x417bd3
  417b75:	jb     0x417b4c
  417b77:	xchg   DWORD PTR [ebp-0x4864e972],ebp
  417b7d:	mov    ebx,DWORD PTR [edx+eax*8-0xd]
  417b81:	xchg   BYTE PTR [edx+0x359404f9],ah
  417b87:	inc    esi
  417b88:	mov    DWORD PTR [edi-0x77],ebp
  417b8b:	add    BYTE PTR [edi],0x48
  417b8e:	and    ebp,DWORD PTR [eax-0x6a]
  417b91:	mov    edx,0xf6f09718
  417b96:	jnp    0x417b5d
  417b98:	push   edx
  417b99:	add    bh,BYTE PTR [edx+ecx*8-0x2b]
  417b9d:	scas   al,BYTE PTR es:[edi]
  417b9e:	in     al,dx
  417b9f:	in     al,0x8e
  417ba1:	lahf   
  417ba2:	cmp    DWORD PTR [edi-0x55],edx
  417ba5:	imul   ecx,edi,0x1bde03c8
  417bab:	js     0x417b71
  417bad:	fwait
  417bae:	adc    ecx,DWORD PTR [edx+0x534ec76b]
  417bb4:	push   ebx
  417bb5:	loop   0x417ba0
  417bb7:	jmp    0xec6fa99e
  417bbc:	aam    0xa5
  417bbe:	in     al,0x2e
  417bc0:	fmul   DWORD PTR [esi+eax*2-0x7f]
  417bc4:	adc    BYTE PTR [ebx+0xd956cf6],dh
  417bca:	push   ds
  417bcb:	mov    bl,0x32
  417bcd:	inc    ebp
  417bce:	inc    esp
  417bcf:	add    dl,bl
  417bd1:	xor    ebx,ebp
  417bd3:	rcr    BYTE PTR [ecx+0x28],0x6e
  417bd7:	sub    edi,DWORD PTR [esi+0x1b7278e8]
  417bdd:	shl    DWORD PTR [ecx-0x6],cl
  417be0:	hlt    
  417be1:	mov    eax,gs:0xb24ec12e
  417be7:	mov    WORD PTR [eax],?
  417be9:	fbld   TBYTE PTR [edx+0x77]
  417bec:	pushf  
  417bed:	and    ecx,DWORD PTR [ebx-0x6e]
  417bf0:	ficomp DWORD PTR [edx+0xd1288f]
  417bf6:	icebp  
  417bf7:	aam    0xb8
  417bf9:	dec    esi
  417bfa:	enter  0x1171,0xe8
  417bfe:	test   ebx,ecx
  417c00:	mov    DWORD PTR [ebx-0x5389a754],esi
  417c06:	jne    0x417c68
  417c08:	sub    ch,cl
  417c0a:	aas    
  417c0b:	add    eax,DWORD PTR [ecx-0x61]
  417c0e:	loopne 0x417c84
  417c10:	in     al,0x2e
  417c12:	call   0x1347642a
  417c17:	lock push es
  417c19:	lds    esi,FWORD PTR [edi-0x702e8157]
  417c1f:	cmp    eax,0xd166594f
  417c24:	jbe    0x417c07
  417c26:	adc    dh,bl
  417c28:	jg     0x417c65
  417c2a:	fsubr  QWORD PTR [esi+eax*4]
  417c2d:	cwde   
  417c2e:	jge    0x417c79
  417c30:	add    eax,0x1a833c1d
  417c35:	mov    ch,0xf1
  417c37:	mov    esi,0x5a45d194
  417c3c:	xor    dl,0xc
  417c3f:	addr16 pop ecx
  417c41:	sub    BYTE PTR [eax+0x5d],dh
  417c44:	cwde   
  417c45:	cld    
  417c46:	in     al,0x97
  417c48:	lea    ecx,[ebp-0x2e78652f]
  417c4e:	test   DWORD PTR ds:0x873180b9,edx
  417c54:	adc    al,0xd6
  417c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c57:	stc    
  417c58:	push   ds
  417c59:	xor    cl,BYTE PTR [ecx-0x1c]
  417c5c:	sbb    al,0x3e
  417c5e:	jo     0x417bff
  417c60:	inc    edi
  417c61:	and    eax,0x68b5b081
  417c66:	mov    dl,0x44
  417c68:	stos   BYTE PTR es:[edi],al
  417c69:	inc    BYTE PTR [edx+ecx*1]
  417c6c:	pop    ebx
  417c6d:	hlt    
  417c6e:	and    BYTE PTR [edx],bl
  417c70:	mov    ebp,0xa2195599
  417c75:	test   DWORD PTR [ebp+0x6c],0x48204f7c
  417c7c:	call   0x4c59:0x1b51cbba
  417c83:	mov    ebx,0xafe34bd6
  417c88:	sbb    eax,DWORD PTR [esi+0x69]
  417c8b:	repnz or al,dh
  417c8e:	ins    DWORD PTR es:[edi],dx
  417c8f:	in     eax,dx
  417c90:	stos   BYTE PTR es:[edi],al
  417c91:	xchg   BYTE PTR [edi+0x7],al
  417c94:	test   al,0x9e
  417c96:	test   eax,0x89a2b5f0
  417c9b:	inc    ebp
  417c9c:	add    dh,ah
  417c9e:	fcomip st,st(1)
  417ca0:	adc    al,0xbd
  417ca2:	add    DWORD PTR [edx],edi
  417ca4:	test   eax,0x93fc7da1
  417ca9:	adc    esp,ecx
  417cab:	imul   eax,DWORD PTR [edi-0x37],0x539179f0
  417cb2:	and    al,0xf2
  417cb4:	lods   al,BYTE PTR ds:[esi]
  417cb5:	loopne 0x417d11
  417cb7:	mov    esp,DWORD PTR [ebp+0x46]
  417cba:	(bad)  [ebp+0x6232afe2]
  417cc0:	and    ebx,DWORD PTR [eax+esi*8+0x1]
  417cc4:	bound  esp,QWORD PTR [edi-0x7f97faa5]
  417cca:	jbe    0x417c7e
  417ccc:	lahf   
  417ccd:	(bad)  
  417cce:	in     eax,0x2e
  417cd0:	xor    DWORD PTR [ebx-0x29],ebx
  417cd3:	dec    bp
  417cd5:	inc    ebx
  417cd6:	xor    bl,cl
  417cd8:	add    BYTE PTR [edx+0x4c8e67f9],ah
  417cde:	pop    ebp
  417cdf:	xchg   ebp,eax
  417ce0:	xor    eax,ebp
  417ce2:	add    dh,BYTE PTR [ecx-0x61]
  417ce5:	jl     0x417cff
  417ce7:	cmp    BYTE PTR [ecx],dh
  417ce9:	or     BYTE PTR [eax+0x6db8de4],cl
  417cef:	pop    edi
  417cf0:	or     eax,0xa0dbebfb
  417cf5:	add    ecx,ebp
  417cf7:	shl    BYTE PTR [edi-0x540df20f],0x88
  417cfe:	mov    BYTE PTR [ebp-0x60],0x7e
  417d02:	jnp    0x417d22
  417d04:	ds out dx,al
  417d06:	cmp    eax,0xcec692fc
  417d0b:	mov    bl,0xae
  417d0d:	mov    ah,0x98
  417d0f:	xor    bl,cl
  417d11:	pusha  
  417d12:	adc    DWORD PTR [ebp-0x1ce2062a],eax
  417d18:	mov    ds:0xfb4d0d18,al
  417d1d:	in     al,dx
  417d1e:	jbe    0x417cec
  417d20:	dec    esp
  417d21:	sub    esp,DWORD PTR [ecx-0x12]
  417d24:	mov    ebp,0xcf5278f
  417d29:	jbe    0x417d5f
  417d2b:	addr16 in eax,dx
  417d2d:	(bad)  
  417d2e:	xor    ebx,eax
  417d30:	neg    BYTE PTR [ebp+0x2e8578bf]
  417d36:	or     ecx,DWORD PTR [esi]
  417d38:	in     al,dx
  417d39:	mov    cl,0x80
  417d3b:	push   ss
  417d3c:	not    edx
  417d3e:	adc    BYTE PTR [ebp-0x9c626c],0x85
  417d45:	test   al,0x1f
  417d47:	mov    dh,0xe5
  417d49:	in     al,dx
  417d4a:	dec    edi
  417d4b:	push   ebx
  417d4c:	sub    al,0xd8
  417d4e:	mov    ecx,0x131c9383
  417d53:	mul    bl
  417d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d56:	clc    
  417d57:	icebp  
  417d58:	jb     0x417d61
  417d5a:	sahf   
  417d5b:	sub    eax,0x12f39fa4
  417d60:	data16 out dx,al
  417d62:	(bad)  [ecx]
  417d64:	mov    bh,BYTE PTR [ecx-0x31]
  417d67:	cwde   
  417d68:	sub    DWORD PTR [edi],esp
  417d6a:	pop    ss
  417d6b:	dec    ebx
  417d6c:	add    ah,BYTE PTR [esi]
  417d6e:	outs   dx,DWORD PTR ds:[esi]
  417d6f:	cmp    BYTE PTR [esi-0x3f],ch
  417d72:	dec    esp
  417d73:	cdq    
  417d74:	push   edi
  417d75:	sub    eax,0x4ce05f35
  417d7a:	add    al,0xa
  417d7c:	sbb    eax,0xe488963f
  417d81:	fld    DWORD PTR [esi+0x3]
  417d84:	sub    eax,0xe857a315
  417d89:	in     al,dx
  417d8a:	sub    DWORD PTR [edi-0x6f8ec011],edx
  417d90:	mov    edx,0x3863a1ad
  417d95:	add    al,0xb5
  417d97:	cmp    cl,0xb4
  417d9a:	sub    ebx,DWORD PTR [edx-0x20]
  417d9d:	xor    DWORD PTR [ebx-0x4b],esi
  417da0:	sbb    eax,0xceb56b2
  417da5:	xchg   edi,eax
  417da6:	scas   eax,DWORD PTR es:[edi]
  417da7:	pop    edi
  417da8:	mov    eax,edi
  417daa:	loope  0x417d87
  417dac:	mov    dh,0x82
  417dae:	pusha  
  417daf:	cmp    eax,0xce08dd87
  417db4:	push   esi
  417db5:	xor    al,0x3b
  417db7:	adc    edi,DWORD PTR [eax+ebx*4+0x7d]
  417dbb:	das    
  417dbc:	lahf   
  417dbd:	xchg   DWORD PTR [edi],esp
  417dbf:	cmp    esi,DWORD PTR [edi-0x66]
  417dc2:	loop   0x417d8b
  417dc4:	inc    edx
  417dc5:	cmp    BYTE PTR [ebx+ebp*4-0x482b4ebc],0xdc
  417dcd:	jae    0x417dc7
  417dcf:	jmp    0x6b1f:0x3f69f039
  417dd6:	mov    ds:0xff97ff63,eax
  417ddb:	mov    eax,0x19c18ed6
  417de0:	pop    eax
  417de1:	shl    DWORD PTR [esi+ebx*8-0x3d],cl
  417de5:	inc    ecx
  417de6:	inc    esp
  417de7:	jecxz  0x417e5c
  417de9:	add    BYTE PTR [ecx+0x42243488],al
  417def:	xchg   esp,eax
  417df0:	pop    ebx
  417df1:	xchg   esp,eax
  417df2:	mov    dl,0x20
  417df4:	(bad)  
  417df6:	(bad)  
  417df7:	(bad)  
  417df8:	jg     0x417dd0
  417dfa:	loopne 0x417e24
  417dfc:	cmp    dl,BYTE PTR [ebp-0x1c]
  417dff:	push   0x5c2648be
  417e04:	call   0xf7443c79
  417e09:	push   0x39
  417e0b:	adc    bh,BYTE PTR [eax-0x4843a21a]
  417e11:	and    eax,0x26b39c73
  417e16:	mov    ebp,0x9d8e46c7
  417e1b:	addr16 mov esp,0x3651967f
  417e21:	sub    ah,bh
  417e23:	fisttp QWORD PTR [edx]
  417e25:	stc    
  417e26:	pop    ebp
  417e27:	xchg   ebx,eax
  417e28:	out    dx,eax
  417e29:	cmp    bh,BYTE PTR [edi]
  417e2b:	adc    BYTE PTR [edx],ch
  417e2d:	scas   eax,DWORD PTR es:[edi]
  417e2e:	mov    eax,0xac70a3bc
  417e33:	sub    eax,DWORD PTR [ecx+ebx*2]
  417e36:	(bad)  
  417e37:	in     eax,0x4c
  417e39:	sbb    al,0xc0
  417e3b:	enter  0x47a0,0xad
  417e3f:	inc    edx
  417e40:	test   eax,0x8d86de6d
  417e45:	hlt    
  417e46:	mov    ds:0xc3e01705,eax
  417e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e4c:	stos   BYTE PTR es:[edi],al
  417e4d:	mov    al,ds:0x9522a13c
  417e52:	dec    esi
  417e53:	retf   
  417e54:	cdq    
  417e55:	stos   DWORD PTR es:[edi],eax
  417e56:	out    0x7d,eax
  417e58:	mov    ds:0x721674d,eax
  417e5d:	mov    ch,0x20
  417e5f:	mov    bh,0xcc
  417e61:	cwde   
  417e62:	(bad)  
  417e63:	jmp    0x90ecec27
  417e68:	mov    WORD PTR [edi],?
  417e6a:	popa   
  417e6b:	test   BYTE PTR [edi],dl
  417e6d:	cmp    al,0xa8
  417e6f:	dec    esp
  417e70:	dec    ecx
  417e71:	aaa    
  417e72:	xchg   esp,eax
  417e73:	cwde   
  417e74:	in     al,0x8c
  417e76:	and    dh,bl
  417e78:	fdecstp 
  417e7a:	dec    ecx
  417e7b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  417e7d:	ss pop esi
  417e7f:	mov    esp,0xf0a4ab69
  417e84:	cmc    
  417e85:	lods   eax,DWORD PTR ds:[esi]
  417e86:	mov    ch,0xed
  417e88:	xor    bh,bl
  417e8a:	mov    edi,0x6f3aa10a
  417e8f:	mov    dl,dh
  417e91:	pop    DWORD PTR [edx+0x22f71ddc]
  417e97:	call   0x61252053
  417e9c:	(bad)  
  417e9d:	sbb    ebp,DWORD PTR [ebp-0x1f]
  417ea0:	dec    ebp
  417ea1:	(bad)  
  417ea2:	dec    ebp
  417ea3:	push   0x71bffd27
  417ea8:	pop    eax
  417ea9:	and    BYTE PTR [ebx],ch
  417eab:	mov    al,ds:0x2dd9ec8e
  417eb0:	scas   eax,DWORD PTR es:[edi]
  417eb1:	fild   QWORD PTR [edx-0x77f69906]
  417eb7:	mov    ecx,0x5d44fc44
  417ebc:	sbb    ch,cl
  417ebe:	jnp    0x417ea0
  417ec0:	inc    esp
  417ec1:	jg     0x417ea5
  417ec3:	dec    ebx
  417ec4:	inc    esp
  417ec5:	les    esp,FWORD PTR [ecx+0x42e26fca]
  417ecb:	push   esp
  417ecc:	stc    
  417ecd:	add    BYTE PTR [ebp+esi*4-0x6a],al
  417ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ed2:	jge    0x417ec6
  417ed4:	adc    esi,DWORD PTR [eax-0x2]
  417ed7:	pusha  
  417ed8:	(bad)  
  417eda:	push   ecx
  417edb:	cmp    al,0x0
  417edd:	lds    esp,FWORD PTR ds:0x5a9dada9
  417ee3:	pop    ebp
  417ee4:	ins    DWORD PTR es:[edi],dx
  417ee5:	mov    bl,0x17
  417ee7:	mov    dh,0x63
  417ee9:	xchg   ebp,eax
  417eea:	stc    
  417eeb:	adc    ebp,edx
  417eed:	cmp    dh,BYTE PTR [edi+0x59efb2c8]
  417ef3:	pusha  
  417ef4:	sub    ah,bh
  417ef6:	jbe    0x417eb0
  417ef8:	lods   eax,DWORD PTR ds:[esi]
  417ef9:	add    BYTE PTR [esi-0x45739b26],dl
  417eff:	in     eax,dx
  417f00:	sbb    al,0xc6
  417f02:	into   
  417f03:	rol    DWORD PTR [ebx],0x79
  417f06:	scas   al,BYTE PTR es:[edi]
  417f07:	rcr    DWORD PTR [edi+0x453e4f0b],cl
  417f0d:	push   ecx
  417f0e:	test   al,0x31
  417f10:	inc    edi
  417f11:	xlat   BYTE PTR ds:[ebx]
  417f12:	cmp    BYTE PTR cs:[eax-0x53b1b744],bl
  417f19:	xchg   ebp,eax
  417f1a:	aad    0xd5
  417f1c:	nop
  417f1d:	pop    eax
  417f1e:	push   ebp
  417f1f:	xchg   esi,eax
  417f20:	xor    DWORD PTR [edx],ebp
  417f22:	sub    al,0xe6
  417f24:	cmp    ch,cl
  417f26:	bound  ecx,QWORD PTR [ebx-0x46]
  417f29:	fwait
  417f2a:	cmp    dl,BYTE PTR [edi+0x27]
  417f2d:	mov    ecx,0xff6d382a
  417f32:	out    dx,eax
  417f33:	xchg   ebp,eax
  417f34:	jno    0x417ee8
  417f36:	out    0xd6,al
  417f38:	arpl   WORD PTR [ecx+0x6bc847d4],bp
  417f3e:	mov    edi,0x8144b6e0
  417f43:	pop    ds
  417f44:	test   eax,0x9258add7
  417f49:	dec    esp
  417f4a:	add    eax,DWORD PTR [esi*1-0x3e805f65]
  417f51:	jmp    0x417edf
  417f53:	xchg   ebp,eax
  417f54:	mov    cl,0xb5
  417f56:	test   cl,bh
  417f58:	xchg   esp,eax
  417f59:	or     dl,bl
  417f5b:	cmp    eax,0x12f84386
  417f60:	xchg   esp,eax
  417f61:	fsub   QWORD PTR [ebx]
  417f63:	popa   
  417f64:	jb     0x417fae
  417f66:	ss and al,0xcd
  417f69:	cmp    edx,0xffffffe9
  417f6c:	adc    eax,0x939adc65
  417f71:	adc    al,BYTE PTR [ebp-0x17]
  417f74:	inc    ebx
  417f75:	stos   DWORD PTR es:[edi],eax
  417f76:	push   ss
  417f77:	test   ah,cl
  417f79:	jp     0x417ff0
  417f7b:	scas   eax,DWORD PTR es:[edi]
  417f7c:	mul    DWORD PTR [edx]
  417f7e:	iret   
  417f7f:	in     al,0x5
  417f81:	lea    ebp,[ecx-0x3c]
  417f84:	in     al,0x96
  417f86:	push   ds
  417f87:	adc    al,0xa5
  417f89:	cmp    al,0xaa
  417f8b:	js     0x417f56
  417f8d:	lods   eax,DWORD PTR ds:[esi]
  417f8e:	repz ficom DWORD PTR [ebx+0x4a]
  417f92:	fnsave [edi-0x123ed3fd]
  417f98:	push   ss
  417f99:	es call 0xf614:0x24d61962
  417fa1:	std    
  417fa2:	push   0xfffffffe
  417fa4:	mov    eax,ds:0x531b46be
  417fa9:	xlat   BYTE PTR ds:[ebx]
  417faa:	push   ebx
  417fab:	(bad)  
  417fac:	bnd jb 0x417f5a
  417faf:	scas   eax,DWORD PTR es:[edi]
  417fb0:	mov    edi,DWORD PTR [edx+edi*2]
  417fb3:	mov    al,0x9c
  417fb5:	add    edi,DWORD PTR [ebp+eiz*8-0x1b9786fc]
  417fbc:	fld    TBYTE PTR [edi-0xcedf4c1]
  417fc2:	repnz mov WORD PTR ds:[ecx-0xe],?
  417fc7:	iret   
  417fc8:	and    cl,dh
  417fca:	adc    eax,0xc5187758
  417fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fd0:	and    al,0x37
  417fd2:	sar    BYTE PTR [esi],0x9b
  417fd5:	jmp    0xbd46818a
  417fda:	fwait
  417fdb:	rcr    eax,1
  417fdd:	popf   
  417fde:	ja     0x417fba
  417fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fe1:	repnz inc ebp
  417fe3:	cmp    bh,BYTE PTR ds:0xa30d3189
  417fe9:	sbb    DWORD PTR [eax+0x27f5b4e3],ebp
  417fef:	ret    
  417ff0:	sub    ecx,DWORD PTR [eax+0x2452b8ef]
  417ff6:	pop    ss
  417ff7:	repz shl DWORD PTR [eax+0x6063b86],1
  417ffe:	ja     0x417fb5
  418000:	test   eax,0x4ba60d85
  418006:	mov    ecx,0x62b1fb8d
  41800b:	les    esp,FWORD PTR [edi]
  41800d:	mul    BYTE PTR [esi]
  41800f:	jbe    0x417fe9
  418011:	jno    0x418026
  418013:	push   ds
  418014:	jg     0x417faf
  418016:	test   BYTE PTR [ebp+0x4dce76e0],cl
  41801c:	mov    ecx,DWORD PTR [edx]
  41801e:	lock inc edx
  418020:	push   ecx
  418021:	inc    ecx
  418022:	nop
  418023:	cmp    al,0x29
  418025:	outs   dx,DWORD PTR fs:[si]
  418028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418029:	inc    eax
  41802a:	push   ebx
  41802b:	popa   
  41802c:	adc    eax,0xf6d495f5
  418031:	xor    cl,bl
  418033:	fs out dx,al
  418035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418036:	or     al,0xdb
  418039:	inc    esi
  41803a:	mov    eax,esp
  41803c:	sub    bl,bh
  41803e:	adc    BYTE PTR [ebp+0x7deebcdc],bh
  418044:	fsubr  DWORD PTR [esi]
  418046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418047:	mov    cl,dl
  418049:	lahf   
  41804a:	pop    ebx
  41804b:	shr    edi,1
  41804d:	fcmove st,st(2)
  41804f:	aaa    
  418050:	mov    dl,0xcc
  418052:	mov    ch,0xdc
  418054:	jmp    0xceab:0x72700469
  41805b:	jns    0x4180bf
  41805d:	xor    BYTE PTR [ecx+eax*8+0x102521f0],ch
  418064:	fidivr DWORD PTR [eax-0x1e52418c]
  41806a:	call   0x836b25c3
  41806f:	sub    al,0x7d
  418071:	addr16 call 0xdac5be6e
  418077:	add    DWORD PTR [edx],ebp
  418079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41807a:	lods   al,BYTE PTR gs:[esi]
  41807c:	nop
  41807d:	xor    DWORD PTR [ebp+0x353ecfc6],esi
  418083:	xchg   BYTE PTR [edi],dl
  418085:	jp     0x418015
  418087:	ins    DWORD PTR es:[edi],dx
  418088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418089:	shl    DWORD PTR [ebx+0x9],cl
  41808c:	jae    0x418079
  41808e:	fsub   st,st(3)
  418090:	arpl   WORD PTR [esi+edx*1],dx
  418093:	in     al,dx
  418094:	cmp    al,0x7a
  418096:	push   cs
  418097:	sub    esp,DWORD PTR [edi+0x23701adb]
  41809d:	repz push esp
  41809f:	mov    DWORD PTR [ebp-0x68],edx
  4180a2:	xor    eax,0x8add2bfb
  4180a7:	cmp    al,0x80
  4180a9:	je     0x41811d
  4180ab:	inc    eax
  4180ac:	out    dx,eax
  4180ad:	into   
  4180ae:	movzx  esp,BYTE PTR [esi+0x5bbec698]
  4180b5:	cld    
  4180b6:	shr    DWORD PTR [edi-0x7be0b04c],0xad
  4180bd:	fcmovnb st,st(0)
  4180bf:	popf   
  4180c0:	jg     0x41808f
  4180c2:	in     eax,dx
  4180c3:	mov    esp,0xe8c8e8e9
  4180c8:	ja     0x418074
  4180ca:	call   0x5a3b:0x7224478f
  4180d1:	out    dx,eax
  4180d2:	fcom   QWORD PTR [ecx-0x3b]
  4180d5:	loop   0x4180e7
  4180d7:	pop    ebp
  4180d8:	pop    es
  4180d9:	out    0x7,eax
  4180db:	aas    
  4180dc:	js     0x418070
  4180de:	cmp    esi,edx
  4180e0:	retf   0x13c7
  4180e3:	test   al,0x9f
  4180e5:	and    cl,BYTE PTR [ebx]
  4180e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180e8:	fild   QWORD PTR [ecx]
  4180ea:	call   0x982b:0xfc674555
  4180f1:	test   DWORD PTR [edi+eiz*1-0x2008f999],0x817bc833
  4180fc:	aas    
  4180fd:	pop    es
  4180fe:	jo     0x418161
  418100:	int3   
  418101:	cmc    
  418102:	retf   0xb972
  418105:	mov    gs,esp
  418107:	dec    esp
  418108:	daa    
  418109:	fisubr DWORD PTR [ebp+0x2b]
  41810c:	das    
  41810d:	mov    ecx,0x3f803b49
  418112:	js     0x41813f
  418114:	pop    ecx
  418115:	xor    DWORD PTR [edi],ebp
  418117:	pop    edx
  418118:	cld    
  418119:	out    0xdf,al
  41811b:	(bad)  
  41811d:	xchg   BYTE PTR [ebx],bl
  41811f:	jecxz  0x418126
  418121:	(bad)  
  418122:	sbb    ebp,DWORD PTR [edx-0xaab6a54]
  418128:	inc    BYTE PTR [edx]
  41812a:	inc    ebx
  41812b:	cmp    DWORD PTR [ebx],esi
  41812d:	lahf   
  41812e:	adc    eax,0x774e1351
  418133:	jnp    0x41812f
  418135:	add    dl,BYTE PTR [edi+0x4e]
  418138:	or     al,0x16
  41813a:	push   ecx
  41813b:	xchg   ecx,eax
  41813c:	enter  0x3e2d,0xd1
  418140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418141:	push   esp
  418142:	(bad)  
  418143:	rcl    DWORD PTR [edx],0x0
  418146:	cmp    edi,DWORD PTR ds:0x436130a7
  41814c:	or     BYTE PTR [ebx+0x66],bh
  41814f:	in     eax,0xfa
  418151:	stc    
  418152:	(bad)  
  418154:	retf   0x9351
  418157:	cld    
  418158:	push   0xa865891c
  41815d:	sub    eax,0xe0902838
  418162:	int3   
  418163:	mov    eax,ds:0xb7c77393
  418168:	xchg   ebx,eax
  418169:	sub    BYTE PTR [ebp+0x19],dl
  41816c:	mul    BYTE PTR ds:0x24f404e9
  418172:	ret    0x8ff9
  418175:	ins    BYTE PTR es:[edi],dx
  418176:	repnz push ebp
  418178:	sub    DWORD PTR [ebp-0x6b],esp
  41817b:	xor    BYTE PTR [edx+edx*8-0x10],bh
  41817f:	scas   al,BYTE PTR es:[edi]
  418180:	int    0x62
  418182:	addr16 jo 0x418188
  418185:	mov    bl,ch
  418187:	add    eax,0xa8eaceda
  41818c:	mov    ebp,0xb501b865
  418191:	pusha  
  418192:	push   eax
  418193:	xor    dl,BYTE PTR [ebx+0x52]
  418196:	gs aaa 
  418198:	xor    dl,BYTE PTR [edi-0x745ff932]
  41819e:	das    
  41819f:	xchg   ecx,eax
  4181a0:	adc    al,0x46
  4181a2:	push   ds
  4181a3:	sbb    eax,DWORD PTR fs:[edx]
  4181a6:	sahf   
  4181a7:	clc    
  4181a8:	mov    eax,0xca6622d5
  4181ad:	mov    cs,WORD PTR [esi+0x44]
  4181b0:	mov    dl,0xb8
  4181b2:	fimul  DWORD PTR [ebp+0x16]
  4181b5:	mov    eax,ds:0xe594bb0c
  4181ba:	(bad)  
  4181bb:	cli    
  4181bc:	sbb    esi,ecx
  4181be:	cmp    esp,DWORD PTR [ebp-0x399eec22]
  4181c4:	cmp    BYTE PTR [eax+0x42],cl
  4181c7:	sar    DWORD PTR [eax],cl
  4181c9:	sbb    BYTE PTR [ecx-0x19],al
  4181cc:	int    0x67
  4181ce:	sahf   
  4181cf:	stc    
  4181d0:	jmp    0xbd2b:0xae56c2f8
  4181d7:	cli    
  4181d8:	jmp    0xcae5:0x634e80aa
  4181df:	imul   edx,DWORD PTR [edx+eiz*4+0x2be6d637],0x12
  4181e7:	add    eax,0xb63a756f
  4181ec:	push   0xffffff81
  4181ee:	stc    
  4181ef:	push   ds
  4181f0:	repz sub al,bl
  4181f3:	fs lock xchg ecx,eax
  4181f6:	xchg   ecx,eax
  4181f7:	sbb    al,0x26
  4181f9:	push   esi
  4181fa:	inc    ch
  4181fc:	out    dx,eax
  4181fd:	jbe    0x418276
  4181ff:	pop    ss
  418200:	fisub  DWORD PTR [edi+ecx*4+0xb]
  418204:	pop    ecx
  418205:	pop    ss
  418206:	sub    eax,DWORD PTR [edi-0x5d]
  418209:	scas   al,BYTE PTR es:[edi]
  41820a:	push   es
  41820b:	pop    ebx
  41820c:	pop    edi
  41820d:	out    dx,al
  41820e:	jge    0x418246
  418210:	cmp    eax,0x79658c8d
  418215:	cwde   
  418216:	push   edi
  418217:	pop    ds
  418218:	into   
  418219:	push   esp
  41821a:	rcl    DWORD PTR [edi+0x2e],1
  41821d:	sti    
  41821e:	mov    edx,0x7a8312e1
  418223:	adc    bh,ah
  418225:	jno    0x4181ba
  418227:	clc    
  418228:	mov    cl,0xfb
  41822a:	push   es
  41822b:	sbb    eax,0x9bdb6f0b
  418230:	or     eax,0x2bb4d0f0
  418235:	push   ds
  418236:	popa   
  418237:	mov    esp,0x1363440
  41823c:	mov    ebx,0x84e4c77b
  418241:	pop    esi
  418242:	jg     0x418290
  418244:	pop    ecx
  418245:	adc    al,0x7f
  418247:	(bad)  
  418248:	jnp    0x4181f7
  41824a:	xchg   ecx,eax
  41824b:	popa   
  41824c:	sbb    BYTE PTR [ecx-0x2c],cl
  41824f:	stc    
  418250:	aad    0xfd
  418252:	mov    ds:0x1c01e3af,al
  418257:	fstp   QWORD PTR [eax]
  418259:	xchg   DWORD PTR [ebx],ebx
  41825b:	int    0xd0
  41825d:	dec    edx
  41825e:	pop    es
  41825f:	aaa    
  418260:	sub    BYTE PTR [esi],ch
  418262:	lods   al,BYTE PTR ds:[esi]
  418263:	or     BYTE PTR [eax+0x21cca10a],0x7e
  41826a:	sbb    edi,DWORD PTR [ebx]
  41826c:	bound  ebp,QWORD PTR [ebp+0x41]
  41826f:	fidivr DWORD PTR [edx-0x1b]
  418272:	fadd   st,st(7)
  418274:	pop    edi
  418275:	in     eax,0x4e
  418277:	jns    0x418279
  418279:	cmp    al,0x7d
  41827b:	rcr    BYTE PTR [ebx+ebx*1],1
  41827e:	jb     0x41822d
  418280:	mov    bh,0xf
  418282:	cs cdq 
  418284:	mov    bl,0x12
  418286:	cdq    
  418287:	mov    esp,0x34cd9d79
  41828c:	popf   
  41828d:	inc    esp
  41828e:	xchg   esp,eax
  41828f:	or     ebx,DWORD PTR [esi]
  418291:	aaa    
  418292:	adc    BYTE PTR [ebx+0x54a42fb3],dl
  418298:	mov    al,ds:0x3c4c5b93
  41829d:	cmc    
  41829e:	mov    ds:0xe8c0c1fc,al
  4182a3:	das    
  4182a4:	bound  edi,QWORD PTR [esi+0x4b]
  4182a7:	gs cdq 
  4182a9:	pop    eax
  4182ab:	test   eax,0x77aec77c
  4182b0:	aad    0x2f
  4182b2:	addr16 xor eax,0x30a40843
  4182b8:	inc    edi
  4182b9:	and    BYTE PTR [edi+0xe],bl
  4182bc:	shl    BYTE PTR [ecx-0x7f],1
  4182bf:	call   0x365b:0x3feb61b9
  4182c6:	jl     0x4182d6
  4182c8:	mov    al,0xa6
  4182ca:	ds mov al,0x98
  4182cd:	test   eax,0xf6bd19a7
  4182d2:	jp     0x418259
  4182d4:	repz dec esi
  4182d6:	jecxz  0x4182a3
  4182d8:	mov    esi,0xda0e189b
  4182dd:	xor    al,0x70
  4182df:	out    0x54,al
  4182e1:	pop    ds
  4182e2:	adc    BYTE PTR [eax-0x116d5c0b],ch
  4182e8:	pop    edx
  4182e9:	inc    edi
  4182ea:	push   es
  4182eb:	popa   
  4182ec:	inc    edx
  4182ed:	test   BYTE PTR [ebx+0x44c7e111],0xa0
  4182f4:	aaa    
  4182f5:	int    0xcf
  4182f7:	int    0xef
  4182f9:	fiadd  WORD PTR [eax]
  4182fb:	inc    esi
  4182fc:	out    0x73,al
  4182fe:	iret   
  4182ff:	daa    
  418300:	(bad)
  418303:	(bad)  
  418305:	pop    esp
  418306:	dec    edx
  418307:	das    
  418308:	repz pop ecx
  41830a:	int    0x58
  41830c:	push   ss
  41830d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830e:	xchg   esi,eax
  41830f:	mov    ah,BYTE PTR [eax-0x25]
  418312:	dec    esp
  418313:	and    dh,BYTE PTR [eax-0x17]
  418316:	mov    bh,0xdb
  418318:	sub    al,0x83
  41831a:	mov    ecx,0xef0dfa33
  41831f:	fild   DWORD PTR [edx]
  418321:	icebp  
  418322:	push   eax
  418323:	dec    edx
  418324:	sub    DWORD PTR [edi],eax
  418326:	pop    ebp
  418327:	rol    eax,1
  418329:	cmp    DWORD PTR [esi*8+0x62301684],ebp
  418330:	mov    bh,0x70
  418332:	out    0x17,al
  418334:	pusha  
  418335:	cdq    
  418336:	fwait
  418337:	sub    dh,BYTE PTR [ebx]
  418339:	in     al,dx
  41833a:	popf   
  41833b:	mov    edi,0xb8593c8e
  418340:	out    dx,eax
  418341:	mov    ch,BYTE PTR [esp+eax*1-0x2]
  418345:	in     eax,dx
  418346:	sub    al,ah
  418348:	inc    esp
  418349:	pusha  
  41834a:	daa    
  41834b:	xchg   esi,eax
  41834c:	push   ds
  41834d:	push   0x239b36cb
  418352:	sbb    eax,DWORD PTR [edx+edx*2]
  418355:	xchg   BYTE PTR [ecx+eiz*1-0x1],dh
  418359:	pop    esp
  41835a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41835b:	xchg   ebx,esp
  41835d:	lods   eax,DWORD PTR ds:[esi]
  41835e:	jno    0x41836b
  418360:	imul   esi,DWORD PTR ds:0x14072c48,0xd50c8293
  41836a:	int3   
  41836b:	push   ss
  41836c:	and    edx,DWORD PTR [eax]
  41836e:	inc    edi
  41836f:	mov    cl,0x27
  418371:	pop    edx
  418372:	leave  
  418373:	xor    ah,bh
  418375:	sub    ecx,0x6fca55b3
  41837b:	mov    ch,0xcd
  41837d:	pop    ebp
  41837e:	mov    ds:0x450ac04b,al
  418383:	pop    es
  418384:	ret    0x5a6
  418387:	add    al,0x4b
  418389:	(bad)  [edi+0x626013ad]
  41838f:	xor    al,0xbc
  418391:	pop    esi
  418392:	adc    cl,BYTE PTR [esi-0x56f967fc]
  418398:	push   cs
  418399:	(bad)  
  41839b:	jns    0x418361
  41839d:	pop    ebx
  41839e:	not    DWORD PTR [eax-0x7]
  4183a1:	dec    ebx
  4183a2:	add    edi,ebx
  4183a4:	std    
  4183a5:	mov    ds:0xd2d94473,eax
  4183aa:	sub    bh,dh
  4183ac:	push   edi
  4183ad:	aaa    
  4183ae:	fdiv   DWORD PTR [ecx]
  4183b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183b1:	mov    ds:0x1eec11bc,al
  4183b6:	fwait
  4183b7:	arpl   dx,bp
  4183b9:	xor    eax,edi
  4183bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183bc:	add    eax,0xfed9e363
  4183c1:	pop    esi
  4183c2:	imul   ecx,DWORD PTR [ebx+0x56],0xcf8e66c8
  4183c9:	in     eax,dx
  4183ca:	out    0x67,al
  4183cc:	dec    ebp
  4183cd:	push   es
  4183ce:	stc    
  4183cf:	retf   0x1a19
  4183d2:	and    eax,0x625f4f88
  4183d7:	(bad)  
  4183d8:	outs   dx,DWORD PTR ds:[esi]
  4183d9:	mov    dh,0x20
  4183db:	and    ah,BYTE PTR [eax]
  4183dd:	add    ah,BYTE PTR [ebx-0x2]
  4183e0:	mov    cl,0x0
  4183e2:	add    eax,0x5bf6362e
  4183e7:	xor    esp,DWORD PTR [ebx+0x312963c]
  4183ed:	jecxz  0x418413
  4183ef:	in     eax,0xfb
  4183f1:	pusha  
  4183f2:	(bad)  
  4183f3:	fdiv   DWORD PTR [ebp-0x58e1cf8e]
  4183f9:	shr    DWORD PTR [ebx],cl
  4183fb:	push   eax
  4183fc:	mov    bh,0x34
  4183fe:	shl    bh,0x4f
  418401:	pop    es
  418402:	in     al,0xa2
  418404:	sub    al,0xae
  418406:	xor    edi,edi
  418408:	adc    eax,0xfa60c465
  41840d:	inc    esi
  41840e:	jno    0x418394
  418410:	mov    bl,0xe2
  418412:	test   al,0xa7
  418414:	jle    0x4183c1
  418416:	sub    bl,BYTE PTR [ecx-0x77]
  418419:	sub    DWORD PTR [edi-0x6112f57e],ebp
  41841f:	mov    esi,0xfdb1e13b
  418424:	not    BYTE PTR [edx+ebp*1]
  418427:	sbb    BYTE PTR [esp+eiz*8],ch
  41842a:	shr    DWORD PTR [ebx-0x767bd298],1
  418430:	sbb    eax,DWORD PTR [edi+0x1dc51e79]
  418436:	pop    ds
  418437:	hlt    
  418438:	xchg   edx,eax
  418439:	stos   DWORD PTR es:[edi],eax
  41843a:	retf   0x54a8
  41843d:	lea    ecx,[ecx+0x1e314669]
  418443:	(bad)  
  418444:	addr16 inc ecx
  418446:	mov    ebx,0xe7fcd79b
  41844b:	mov    bh,0x58
  41844d:	xchg   edi,eax
  41844e:	ror    BYTE PTR [ebx],1
  418450:	mov    es,WORD PTR [ecx+0x4f]
  418453:	div    BYTE PTR [ebx+0x3f]
  418456:	xlat   BYTE PTR ds:[ebx]
  418457:	mov    esp,0xd0840f4c
  41845c:	aas    
  41845d:	mov    al,0xe2
  41845f:	stos   BYTE PTR es:[edi],al
  418460:	mov    ds:0x677e9c3d,eax
  418465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418466:	nop
  418467:	and    al,0xa9
  418469:	sub    esp,DWORD PTR [ecx]
  41846b:	ror    BYTE PTR [ebx+0x51],0x0
  41846f:	dec    eax
  418470:	mov    eax,ds:0x65dd30e9
  418475:	nop
  418476:	or     DWORD PTR [eax],ebp
  418478:	inc    ebx
  418479:	sbb    al,0xf4
  41847b:	sub    BYTE PTR [ebp-0x7dcde068],bh
  418481:	cwde   
  418482:	popf   
  418483:	js     0x4184dd
  418485:	mov    fs,WORD PTR [edi+0x32]
  418488:	arpl   WORD PTR [edi+0x14],ax
  41848b:	cmp    DWORD PTR [edi],ebp
  41848d:	xor    ebp,DWORD PTR [ecx-0x654d77f6]
  418493:	push   ebp
  418494:	xor    al,0xcb
  418496:	or     cl,BYTE PTR ds:0xd1ce92e4
  41849c:	xor    eax,0xbc61cfa9
  4184a1:	mov    esp,0x6a2508d1
  4184a6:	mov    ds:0xf9666bda,eax
  4184ab:	jle    0x4184e9
  4184ad:	or     al,0xf1
  4184af:	mov    edi,0xf5875f1e
  4184b4:	std    
  4184b5:	outs   dx,DWORD PTR ds:[esi]
  4184b6:	ds lahf 
  4184b8:	xchg   edx,edx
  4184ba:	jle    0x418527
  4184bc:	iret   
  4184bd:	adc    eax,0xbc92ca91
  4184c2:	or     al,0x50
  4184c4:	dec    edi
  4184c5:	int    0x31
  4184c7:	not    DWORD PTR es:[ecx+0x18]
  4184cb:	dec    ebp
  4184cc:	jge    0x4184ce
  4184ce:	mov    ebp,0x22f5cd44
  4184d3:	ret    
  4184d4:	leave  
  4184d5:	ss test al,0xd
  4184d8:	ret    0x80e0
  4184db:	xchg   edx,eax
  4184dc:	aaa    
  4184dd:	fld    TBYTE PTR ds:0x65f3f744
  4184e3:	jp     0x4184c7
  4184e5:	inc    esp
  4184e6:	rcl    edi,0x90
  4184e9:	add    al,0x79
  4184eb:	xlat   BYTE PTR ds:[ebx]
  4184ec:	gs dec ecx
  4184ee:	daa    
  4184ef:	mov    ds:0x5824dd8a,eax
  4184f4:	imul   edx,DWORD PTR [esi],0xffffffbe
  4184f7:	and    DWORD PTR [eax],ebx
  4184f9:	mov    DWORD PTR [ecx+0x22],esp
  4184fc:	(bad)  
  4184fe:	push   ecx
  4184ff:	jno    0x4184a4
  418501:	sbb    edx,DWORD PTR [edi]
  418503:	test   DWORD PTR [esi+ebx*4-0x6d49b1d5],edi
  41850a:	push   esp
  41850b:	lods   al,BYTE PTR ds:[esi]
  41850c:	push   es
  41850d:	sbb    DWORD PTR [ebp-0x26],ecx
  418510:	cmp    ebx,ebp
  418512:	mov    WORD PTR [ebx+0x61af9fe5],es
  418518:	pushf  
  418519:	fcmovnu st,st(5)
  41851b:	pop    ecx
  41851c:	push   es
  41851d:	inc    edi
  41851e:	loope  0x4184e2
  418520:	test   DWORD PTR [eax+edx*4-0x134ac6cc],ebx
  418527:	pop    ecx
  418528:	jnp    0x418521
  41852a:	mov    ch,0xd4
  41852c:	mov    bl,0xea
  41852e:	push   eax
  41852f:	adc    ebx,eax
  418531:	mov    ch,0x81
  418533:	out    dx,al
  418534:	stc    
  418535:	cli    
  418536:	adc    al,0x4e
  418538:	inc    ebp
  418539:	add    edx,DWORD PTR [ecx-0x80]
  41853c:	mov    al,0xc0
  41853e:	cmp    al,0xe1
  418540:	repz sub BYTE PTR [ebx+esi*8],ah
  418544:	mov    eax,0x3d3f0d0c
  418549:	dec    edi
  41854a:	out    0x91,eax
  41854c:	sbb    al,0x76
  41854e:	popf   
  41854f:	test   esp,0x86f8b621
  418555:	iret   
  418556:	push   0xe8e7f663
  41855b:	sbb    edx,DWORD PTR [esi-0x1f368d32]
  418561:	pop    ds
  418562:	pop    ecx
  418563:	and    DWORD PTR [edx+0x51a25ec],0xfd377a62
  41856d:	sub    eax,0x1c6ae903
  418572:	mov    dh,0x26
  418574:	lahf   
  418575:	jle    0x41850c
  418577:	je     0x418591
  418579:	(bad)  
  41857a:	mov    ecx,0xc80b842d
  41857f:	lock sar BYTE PTR [edi-0x11],0xb5
  418584:	xchg   ecx,eax
  418585:	xchg   edx,eax
  418586:	cld    
  418587:	xor    BYTE PTR [esi],0x9c
  41858a:	aam    0xe9
  41858c:	dec    eax
  41858d:	and    al,0xd1
  41858f:	or     eax,0xd5c112b1
  418594:	sahf   
  418595:	ror    BYTE PTR [ebp-0xa],0x6c
  418599:	(bad)  
  41859a:	cli    
  41859b:	shl    DWORD PTR [edi-0x40],cl
  41859e:	push   es
  41859f:	dec    ecx
  4185a0:	loop   0x4185ad
  4185a2:	cmp    DWORD PTR [esi+esi*2],edi
  4185a5:	jle    0x4185f0
  4185a7:	in     al,dx
  4185a8:	pop    es
  4185a9:	or     al,0x31
  4185ab:	in     al,0x5e
  4185ad:	arpl   WORD PTR [ebp+0x71],ax
  4185b0:	sbb    esp,esi
  4185b2:	add    edi,esp
  4185b4:	inc    eax
  4185b5:	xlat   BYTE PTR ds:[ebx]
  4185b6:	push   edx
  4185b7:	push   cs
  4185b8:	cs ret 0xb59a
  4185bc:	fs in  al,dx
  4185be:	sbb    BYTE PTR [ecx-0x4d],dl
  4185c1:	pusha  
  4185c2:	popa   
  4185c3:	pop    esp
  4185c4:	fs aad 0x2
  4185c7:	or     ebx,0xffffffdd
  4185ca:	int    0x56
  4185cc:	out    dx,al
  4185cd:	je     0x418645
  4185cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185d0:	inc    ecx
  4185d1:	mov    esi,0xee97497e
  4185d6:	dec    edi
  4185d7:	xor    bl,BYTE PTR ds:0x3691fa4d
  4185dd:	rcl    DWORD PTR [eax],cl
  4185df:	inc    edx
  4185e0:	loopne 0x4185c9
  4185e2:	bound  eax,QWORD PTR [ecx+ebp*1-0x39]
  4185e6:	push   cs
  4185e7:	repz pushf 
  4185e9:	lea    esp,[ecx-0x25d5b1cb]
  4185ef:	popf   
  4185f0:	pop    ss
  4185f1:	fsub   st(5),st
  4185f3:	or     al,0x12
  4185f5:	data16 fcmove st,st(4)
  4185f8:	push   0x7e
  4185fa:	jmp    0xefb21486
  4185ff:	out    0xba,eax
  418601:	sahf   
  418602:	sbb    al,0x9e
  418604:	shl    DWORD PTR [esi+eax*1-0x73],1
  418608:	jge    0x41864e
  41860a:	hlt    
  41860b:	push   0x56f51d21
  418610:	shr    BYTE PTR [esi+0x72],0xad
  418614:	add    ecx,DWORD PTR [edi+0x7d]
  418617:	inc    ecx
  418618:	jae    0x4185e5
  41861a:	test   eax,0x46813370
  41861f:	xor    cl,ch
  418621:	(bad)  
  418622:	xor    ch,BYTE PTR [ecx+0x5f6105b8]
  418628:	fmul   st(0),st
  41862a:	sbb    eax,0xe73b04ca
  41862f:	adc    BYTE PTR [edi+0x236b6cfa],ah
  418635:	dec    esi
  418636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418637:	dec    esi
  418638:	inc    edi
  418639:	loope  0x418670
  41863b:	inc    ebp
  41863c:	sbb    BYTE PTR [edx],0x9f
  41863f:	mov    ds:0x7d5b453e,al
  418644:	mov    esi,ebp
  418646:	mov    esp,0x8e2a9ceb
  41864b:	sbb    bh,cl
  41864d:	pop    ss
  41864e:	push   es
  41864f:	pop    ecx
  418650:	add    ebp,DWORD PTR [ebp+0xcd32b76]
  418656:	scas   eax,DWORD PTR es:[edi]
  418657:	ds push eax
  418659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41865a:	in     al,0x73
  41865c:	mov    al,ds:0x5673f473
  418661:	and    al,0x19
  418663:	enter  0x75a4,0xdb
  418667:	push   ds
  418668:	jle    0x418663
  41866a:	jl     0x4186d1
  41866c:	stc    
  41866d:	mov    ds:0xec9326b7,eax
  418672:	dec    ebx
  418673:	xor    al,0x12
  418675:	dec    esi
  418676:	xor    BYTE PTR [esi+0x52bbbb01],ch
  41867c:	adc    al,0xdf
  41867e:	xor    al,0x29
  418680:	test   eax,0x22385fa7
  418685:	pop    ebx
  418686:	dec    esi
  418687:	ret    
  418688:	cmp    BYTE PTR [edx+0x70],bl
  41868b:	sub    DWORD PTR [ecx+0x6b],ecx
  41868e:	or     ecx,DWORD PTR [ebp-0x42]
  418691:	ds mov edi,0x5070c6d6
  418697:	xor    eax,0x4be41c2f
  41869c:	dec    ebx
  41869d:	cmp    esi,0x4bdb2516
  4186a3:	addr16 push ebp
  4186a5:	or     ebx,ecx
  4186a7:	js     0x418632
  4186a9:	xor    DWORD PTR [ebx+ebp*4+0x69881a6c],esp
  4186b0:	cmp    eax,0x9e797419
  4186b5:	xor    DWORD PTR [eax],ebx
  4186b7:	(bad)  
  4186b8:	sbb    eax,0x10dcad58
  4186bd:	fsubr  DWORD PTR ds:0xa2524187
  4186c3:	push   edi
  4186c4:	inc    ecx
  4186c5:	add    bh,BYTE PTR [ecx]
  4186c7:	sbb    eax,0x433df09e
  4186cc:	sub    edx,ebx
  4186ce:	add    DWORD PTR [ecx-0x11e2867c],ecx
  4186d4:	cmp    eax,0x29aa36c2
  4186d9:	cmp    BYTE PTR [edx+0x5a47ed36],ch
  4186df:	das    
  4186e0:	mov    dh,0x34
  4186e2:	test   eax,0x5c3eb5c1
  4186e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186e8:	das    
  4186e9:	fwait
  4186ea:	mov    BYTE PTR [ecx],dl
  4186ec:	aaa    
  4186ed:	sub    al,0x1a
  4186ef:	mov    cl,0xa3
  4186f1:	enterw 0x99c3,0xd0
  4186f6:	repnz or BYTE PTR [eax-0x79],0xe9
  4186fb:	mov    ecx,0xa5baadca
  418700:	cmp    BYTE PTR [ebx+0x19],bl
  418703:	(bad)  
  418705:	push   0xffffffc3
  418707:	and    al,0x9e
  418709:	xchg   ebp,eax
  41870a:	add    al,BYTE PTR [ecx+0x56]
  41870d:	mov    dh,0xa2
  41870f:	pop    ss
  418710:	shr    ebp,1
  418712:	sub    DWORD PTR [ebp-0x75],esi
  418715:	test   DWORD PTR [edi],0xea0bc40d
  41871b:	add    esp,esp
  41871d:	sbb    BYTE PTR [ebx+0x6c4e7a0b],dh
  418723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418724:	enter  0xd293,0xc2
  418728:	mov    edi,0x5da84bcc
  41872d:	into   
  41872e:	ins    DWORD PTR es:[edi],dx
  41872f:	repnz mov ebp,0x7965cf5f
  418735:	scas   eax,DWORD PTR es:[edi]
  418736:	out    0x28,al
  418738:	loopne 0x4186d9
  41873a:	fmulp  st(1),st
  41873c:	mov    ebx,DWORD PTR [eax]
  41873e:	sub    BYTE PTR [edx],bl
  418740:	dec    BYTE PTR [ecx+0x540b77a8]
  418746:	sub    DWORD PTR [edi],edi
  418748:	test   BYTE PTR [esi],ah
  41874a:	out    0x6e,eax
  41874c:	pop    ecx
  41874d:	add    BYTE PTR [edx-0x308586c0],dl
  418753:	ss je  0x4187a0
  418756:	mov    ch,0xb0
  418758:	fst    DWORD PTR [edi+0x2920c66a]
  41875e:	repz add DWORD PTR [edx],esi
  418761:	in     al,0x2
  418763:	cmp    DWORD PTR [edx+0x15],ebx
  418766:	cmp    BYTE PTR [esi],ah
  418768:	in     eax,0xa2
  41876a:	aas    
  41876b:	or     bl,BYTE PTR [ecx+0x6d]
  41876e:	into   
  41876f:	cs data16 stos BYTE PTR es:[edi],al
  418772:	xor    BYTE PTR [edx+0x4c7eb849],dh
  418778:	iret   
  418779:	pop    ebx
  41877a:	push   es
  41877b:	mov    bl,0x28
  41877d:	dec    eax
  41877e:	cmp    ch,ch
  418780:	es lock (bad) 
  418784:	hlt    
  418785:	inc    edi
  418786:	push   ebp
  418787:	inc    eax
  418788:	imul   esi,DWORD PTR [esi-0x29],0xa46cd4fb
  41878f:	test   al,0xc6
  418791:	pop    edi
  418792:	jo     0x418743
  418794:	cmp    eax,0x97d33812
  418799:	rcr    DWORD PTR [ebx+0x70],0x80
  41879d:	sbb    eax,0xf5f01c1c
  4187a2:	pop    ebx
  4187a3:	xlat   BYTE PTR ds:[ebx]
  4187a4:	sub    BYTE PTR [bp+si+0x49],0x8b
  4187a9:	lock inc ecx
  4187ab:	xchg   ebp,eax
  4187ac:	or     BYTE PTR [edi+eax*1-0x7b],dl
  4187b0:	mov    dh,0x86
  4187b2:	mov    dh,0xef
  4187b4:	lock xor DWORD PTR gs:[esi-0x3f],eax
  4187b9:	cmp    edi,DWORD PTR [ecx+ebx*8+0x65e9ad6d]
  4187c0:	stc    
  4187c1:	jnp    0x418774
  4187c3:	jl     0x41876b
  4187c5:	mov    dl,bl
  4187c7:	and    DWORD PTR [ebp+eiz*1+0x623fee02],0xc5087e27
  4187d2:	push   esi
  4187d3:	add    ebp,DWORD PTR [eax]
  4187d5:	outs   dx,BYTE PTR ds:[esi]
  4187d6:	xor    esi,DWORD PTR [ebx]
  4187d8:	and    ah,bh
  4187da:	inc    ebp
  4187db:	test   al,dl
  4187dd:	inc    edi
  4187de:	dec    eax
  4187df:	dec    ecx
  4187e0:	and    eax,0xe5b2ecb8
  4187e5:	js     0x41876f
  4187e7:	(bad)  
  4187e9:	pop    esp
  4187ea:	imul   ebp,DWORD PTR [esi-0x1d495da1],0x94b6b113
  4187f4:	pop    edx
  4187f5:	and    bl,bh
  4187f7:	push   esi
  4187f8:	std    
  4187f9:	adc    DWORD PTR [edx+esi*8+0x715a6d4a],ebp
  418800:	(bad)  
  418801:	lahf   
  418802:	(bad)  
  418803:	jle    0x4187ca
  418805:	fst    DWORD PTR [esi+0x768ef559]
  41880b:	cmp    eax,0x32fe9020
  418810:	pusha  
  418811:	cdq    
  418812:	fs out dx,al
  418814:	ins    BYTE PTR es:[edi],dx
  418815:	std    
  418816:	stos   DWORD PTR es:[edi],eax
  418817:	in     al,dx
  418818:	ret    
  418819:	jnp    0x4187fa
  41881b:	nop
  41881c:	(bad)  
  41881d:	daa    
  41881e:	cmp    bl,BYTE PTR [esi]
  418820:	pop    ecx
  418822:	pop    ds
  418823:	lahf   
  418824:	jo     0x4187ef
  418826:	inc    ebp
  418827:	(bad)  
  418828:	jp     0x41882c
  41882a:	jnp    0x418860
  41882c:	inc    esp
  41882d:	stos   BYTE PTR es:[edi],al
  41882e:	jns    0x4187d1
  418830:	adc    al,0xaf
  418832:	pop    es
  418833:	or     eax,0x42c070ea
  418838:	sub    al,0xc5
  41883a:	cmp    DWORD PTR [ebx+eiz*8-0x75db0953],0xffffffec
  418842:	cwde   
  418843:	adc    ah,bh
  418845:	loop   0x41886e
  418847:	pusha  
  418848:	test   eax,0xf233ee6b
  41884d:	mov    es,WORD PTR cs:[esi]
  418850:	adc    ch,BYTE PTR [eax+0x14d6b4ed]
  418856:	xchg   ebx,eax
  418857:	sbb    DWORD PTR [ecx],esi
  418859:	daa    
  41885a:	push   ecx
  41885b:	ins    DWORD PTR es:[edi],dx
  41885c:	push   cs
  41885d:	data16 mov bh,0x60
  418860:	ds repz into 
  418863:	bound  ebp,QWORD PTR [ebp-0x352748ef]
  418869:	pop    ss
  41886a:	shl    DWORD PTR [ebx+0x29],cl
  41886d:	out    0x4b,al
  41886f:	pop    ss
  418870:	lods   eax,DWORD PTR ds:[esi]
  418871:	mov    ch,0xaf
  418873:	xor    BYTE PTR [ecx-0x4a],bh
  418876:	popf   
  418877:	jbe    0x4188d0
  418879:	in     eax,dx
  41887a:	add    BYTE PTR [ebp+eiz*1+0x40],al
  41887e:	xchg   cx,ax
  418880:	stos   DWORD PTR es:[edi],eax
  418881:	addr16 jmp 0x5067a1ec
  418887:	sub    al,0xb8
  418889:	fcomp  QWORD PTR [ebp+0x50cbe32b]
  41888f:	out    dx,al
  418890:	jle    0x418849
  418892:	push   ecx
  418893:	neg    cl
  418895:	adc    al,0x9f
  418897:	xchg   BYTE PTR [ecx-0x3cd5af58],bl
  41889d:	mov    ds:0x8fd7c4c7,eax
  4188a2:	stc    
  4188a3:	out    dx,eax
  4188a4:	push   ebx
  4188a5:	jb     0x4188b5
  4188a7:	push   ds
  4188a8:	repnz pop fs
  4188ab:	dec    ebp
  4188ac:	in     al,0x3f
  4188ae:	add    BYTE PTR [ecx-0x1b],ch
  4188b1:	ins    DWORD PTR es:[edi],dx
  4188b2:	push   ebx
  4188b3:	test   eax,esp
  4188b5:	scas   al,BYTE PTR es:[edi]
  4188b6:	pop    ecx
  4188b7:	and    al,0x71
  4188b9:	jmp    0x8497c508
  4188be:	popf   
  4188bf:	or     al,BYTE PTR [edx-0x15feac03]
  4188c5:	ss inc esp
  4188c7:	and    BYTE PTR [esi-0x57],al
  4188ca:	jno    0x4188cd
  4188cc:	stc    
  4188cd:	jmp    0xce7a12ab
  4188d2:	push   ds
  4188d3:	mov    edi,0xc35a308a
  4188d8:	imul   esp,DWORD PTR [edx+0x7b],0x50
  4188dc:	mov    esi,0xef9a0497
  4188e1:	push   eax
  4188e2:	(bad)  
  4188e3:	xor    ebx,eax
  4188e5:	(bad)  
  4188e6:	sbb    ah,BYTE PTR fs:[ebp-0x219af30c]
  4188ed:	push   ebp
  4188ee:	sub    bh,BYTE PTR [eax-0x80]
  4188f1:	out    dx,al
  4188f2:	pop    ebx
  4188f3:	cwde   
  4188f4:	xchg   edx,eax
  4188f5:	xchg   ecx,eax
  4188f6:	sbb    eax,0x9078ea57
  4188fb:	leave  
  4188fc:	mov    dl,0x68
  4188fe:	xchg   ebp,eax
  4188ff:	cmp    eax,DWORD PTR [ebp+0x3219d70a]
  418905:	add    DWORD PTR gs:[edx-0x9fa9b1],esi
  41890c:	fistp  WORD PTR [esi+0x3a]
  41890f:	test   eax,0xb2443bf1
  418914:	push   ecx
  418915:	(bad)  
  418916:	sub    eax,0x87c0558b
  41891b:	or     BYTE PTR [ecx+0x6d],ah
  41891e:	shl    DWORD PTR [ebx-0x2],0xf1
  418922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418923:	aaa    
  418924:	sbb    BYTE PTR [eax+0x1ce73dac],ah
  41892a:	xchg   BYTE PTR [edi+ebp*4],bh
  41892d:	cdq    
  41892e:	pop    esi
  41892f:	out    0xba,eax
  418931:	dec    esp
  418932:	xor    eax,ebx
  418934:	call   0x4731:0xbe8b5fae
  41893b:	stc    
  41893c:	inc    edi
  41893d:	pop    edi
  41893e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41893f:	stos   BYTE PTR es:[edi],al
  418940:	idiv   BYTE PTR [edi-0x76]
  418943:	ins    DWORD PTR es:[edi],dx
  418944:	add    eax,0xdedaaff0
  418949:	out    dx,eax
  41894a:	retf   
  41894b:	daa    
  41894c:	or     eax,0x52e7ca81
  418951:	push   ecx
  418952:	adc    BYTE PTR [ebp+0x3d],bh
  418955:	xor    eax,0x542789d9
  41895a:	and    cl,al
  41895c:	pop    ss
  41895d:	mov    WORD PTR [esp+eax*8],ds
  418960:	test   BYTE PTR [edi],bl
  418962:	adc    BYTE PTR [eax+0x5e579040],dh
  418968:	fsub   DWORD PTR [edi+0x6f]
  41896b:	inc    ecx
  41896c:	dec    eax
  41896d:	jnp    0x4189ad
  41896f:	ss arpl sp,bx
  418972:	sub    bl,dl
  418974:	ret    
  418975:	test   DWORD PTR [ebx-0x6d],edi
  418978:	add    al,BYTE PTR [ecx]
  41897a:	dec    eax
  41897b:	push   edi
  41897c:	pushf  
  41897d:	mov    esp,0xc5f39eed
  418982:	in     al,dx
  418983:	ret    
  418984:	hlt    
  418985:	sar    BYTE PTR [edi],0x2
  418988:	mov    ds:0xd46cd7c3,al
  41898d:	add    al,BYTE PTR [eax-0x577b3989]
  418993:	xor    ebp,DWORD PTR [edx+eax*4]
  418996:	jg     0x418928
  418998:	adc    BYTE PTR ds:0x4062be4e,dh
  41899e:	xor    DWORD PTR [eax+0x7ad1b45b],ebp
  4189a4:	fs in  eax,dx
  4189a6:	or     esi,DWORD PTR [edi-0x3e59cdb9]
  4189ac:	jmp    0xbe39:0xfcf98d13
  4189b3:	cmp    esi,DWORD PTR [edx]
  4189b5:	arpl   WORD PTR [ebx-0x32],dx
  4189b8:	push   0x753b3eab
  4189bd:	and    bl,0xa3
  4189c0:	jo     0x418a09
  4189c2:	jne    0x41895a
  4189c4:	or     bl,ah
  4189c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189c7:	scas   eax,DWORD PTR es:[edi]
  4189c8:	mov    dh,0x38
  4189ca:	adc    dl,BYTE PTR [eax+ecx*8+0x45]
  4189ce:	jge    0x418a3e
  4189d0:	adc    DWORD PTR [edx-0x5e],ebp
  4189d3:	mov    eax,0x5103b312
  4189d8:	ret    
  4189d9:	adc    bl,BYTE PTR [eax+0x76]
  4189dc:	mov    ds:0x8582d0e7,al
  4189e1:	out    0xad,eax
  4189e3:	cmp    esi,edi
  4189e5:	xchg   esp,eax
  4189e6:	inc    esp
  4189e7:	mov    bl,0x84
  4189e9:	mov    ch,0x5c
  4189eb:	les    esp,FWORD PTR [eax+0x5a059fab]
  4189f1:	hlt    
  4189f2:	xchg   edx,eax
  4189f3:	es (bad) 
  4189f5:	(bad)  
  4189f6:	jno    0x4189c6
  4189f8:	adc    BYTE PTR [esi-0x7f],0xa5
  4189fc:	cli    
  4189fd:	(bad)  
  4189fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189ff:	mov    ds:0x7e52bd22,al
  418a04:	adc    DWORD PTR [ebx+0x56],eax
  418a07:	popa   
  418a08:	mov    esp,0x5cb4549
  418a0d:	pxor   mm1,QWORD PTR [ecx+eiz*1+0x24]
  418a12:	sub    ebp,DWORD PTR [edx]
  418a14:	ror    dh,cl
  418a16:	sub    bh,bh
  418a18:	(bad)  
  418a19:	repz jg 0x4189a8
  418a1c:	das    
  418a1d:	dec    esp
  418a1e:	nop
  418a1f:	jae    0x4189f6
  418a21:	dec    esp
  418a22:	adc    DWORD PTR [eax+eax*2+0x4c90594],esi
  418a29:	enter  0x7bdf,0xb6
  418a2d:	add    edx,DWORD PTR [ebx]
  418a2f:	inc    esi
  418a30:	sbb    ebx,edi
  418a32:	je     0x4189b4
  418a34:	int    0x45
  418a36:	jno    0x418a45
  418a38:	sar    DWORD PTR [ebx+0x65],1
  418a3b:	fidiv  DWORD PTR [eax]
  418a3d:	add    esp,DWORD PTR [ebx+0x6a]
  418a40:	jmp    0xe08e4759
  418a45:	xor    al,0x9a
  418a47:	bound  ebx,QWORD PTR [ecx]
  418a49:	scas   al,BYTE PTR es:[edi]
  418a4a:	ins    BYTE PTR es:[edi],dx
  418a4b:	xor    DWORD PTR [ebp-0x441cda2e],edi
  418a51:	xchg   edi,eax
  418a52:	ins    DWORD PTR es:[edi],dx
  418a53:	sub    ebx,edx
  418a55:	mov    dl,0x88
  418a57:	popa   
  418a58:	dec    eax
  418a59:	imul   esi,ebx,0xf6add97a
  418a5f:	cmp    dl,BYTE PTR [esi-0x41bff375]
  418a65:	in     eax,0xfd
  418a67:	add    eax,0x3b315f2
  418a6c:	add    eax,0xbbe3ee8b
  418a71:	call   0x518c:0x33b9a6e4
  418a78:	xchg   al,ah
  418a7a:	std    
  418a7b:	popa   
  418a7c:	sub    DWORD PTR [ebx],ebp
  418a7e:	mov    gs,WORD PTR [ebx-0x60]
  418a81:	mov    ebx,0xb04e71e4
  418a86:	std    
  418a87:	xor    esi,DWORD PTR ds:0xaeac04c1
  418a8d:	xor    DWORD PTR [ebp-0x49],edx
  418a90:	(bad)  
  418a91:	out    dx,al
  418a92:	jge    0x418a7c
  418a94:	xlat   BYTE PTR ds:[ebx]
  418a95:	sub    ecx,eax
  418a97:	cmp    edx,DWORD PTR [ebx]
  418a99:	lods   eax,DWORD PTR ds:[esi]
  418a9a:	ret    
  418a9b:	inc    esp
  418a9c:	adc    DWORD PTR [esi+0x3cc5decc],ebx
  418aa2:	or     eax,DWORD PTR [eax]
  418aa4:	inc    esp
  418aa5:	cmp    esp,DWORD PTR [edi-0x6f34bf2c]
  418aab:	mov    edx,0x97834178
  418ab0:	jge    0x418a85
  418ab2:	sbb    al,0x56
  418ab4:	popa   
  418ab5:	dec    ebx
  418ab6:	les    esp,FWORD PTR [esi+0x74]
  418ab9:	int    0xcb
  418abb:	fdiv   QWORD PTR [ecx-0x28]
  418abe:	(bad)  
  418abf:	mov    ds:0xc98c476a,eax
  418ac4:	and    ecx,DWORD PTR [ebp+0x5e76a726]
  418aca:	out    dx,eax
  418acb:	cmp    DWORD PTR [ebx-0x6b2fd65e],edx
  418ad1:	test   al,0x9b
  418ad3:	jecxz  0x418a8e
  418ad5:	std    
  418ad6:	in     eax,0x7b
  418ad8:	mov    bh,0xac
  418ada:	mov    fs,WORD PTR [ecx]
  418adc:	dec    esi
  418add:	in     eax,dx
  418ade:	icebp  
  418adf:	ins    BYTE PTR es:[edi],dx
  418ae0:	xchg   esi,eax
  418ae1:	jle    0x418ab0
  418ae3:	je     0x418af4
  418ae5:	in     eax,0xdc
  418ae7:	(bad)  
  418ae8:	nop
  418ae9:	jnp    0x418ad8
  418aeb:	sbb    eax,0x470a78a
  418af0:	mov    cl,BYTE PTR [eax]
  418af2:	int3   
  418af3:	test   al,0x46
  418af5:	jmp    0xd57b:0xeb89d896
  418afc:	into   
  418afd:	xchg   ecx,eax
  418afe:	fisttp QWORD PTR [edi]
  418b00:	pop    ebx
  418b01:	jp     0x418b3e
  418b03:	push   edi
  418b04:	mov    al,ds:0xdd9f4bdc
  418b09:	jmp    0xe411:0x773a0b69
  418b10:	add    al,0xe5
  418b12:	dec    ebp
  418b13:	mov    ah,BYTE PTR ss:[eax]
  418b16:	jmp    0xc6b9c8a8
  418b1b:	fistp  QWORD PTR [ebx]
  418b1d:	jo     0x418ac4
  418b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b20:	sub    edx,DWORD PTR [esi+0x57]
  418b23:	mov    eax,ds:0xf2bd4350
  418b28:	das    
  418b29:	popf   
  418b2a:	stos   DWORD PTR es:[edi],eax
  418b2b:	sub    BYTE PTR [ebx+0x26],dh
  418b2e:	lods   al,BYTE PTR ds:[esi]
  418b2f:	inc    eax
  418b30:	inc    ecx
  418b31:	mov    ah,0xb1
  418b33:	pop    ebx
  418b34:	sub    BYTE PTR [ebx-0x73],dl
  418b37:	jecxz  0x418b1b
  418b39:	jmp    0xd736:0xca8814e4
  418b40:	das    
  418b41:	dec    ecx
  418b42:	mov    DWORD PTR [esi+0x26bdc25d],esp
  418b48:	test   eax,0xfc1ee74
  418b4d:	add    eax,0x4bfaafef
  418b52:	push   ebx
  418b53:	call   0x54137989
  418b58:	pop    ss
  418b59:	test   ch,bh
  418b5b:	push   ds
  418b5c:	mov    WORD PTR [edi+eiz*4+0x48dbaa1b],cs
  418b63:	mov    dh,0x1e
  418b65:	mov    ds:0x42b0b87,al
  418b6a:	rcr    BYTE PTR [eax-0x45600404],cl
  418b70:	jg     0x418bc0
  418b72:	loope  0x418ba6
  418b74:	inc    ebx
  418b75:	and    esp,edx
  418b77:	inc    ebx
  418b78:	fstp   TBYTE PTR [ebx+0x2fb6029a]
  418b7e:	lods   eax,DWORD PTR ds:[esi]
  418b7f:	int3   
  418b80:	cmp    DWORD PTR cs:[ebx],esi
  418b83:	add    al,BYTE PTR [ebx+0x20]
  418b86:	adc    al,0xdb
  418b88:	bnd js 0x418b87
  418b8b:	ret    0x47a9
  418b8e:	popa   
  418b8f:	sar    DWORD PTR [ecx+0x5e],cl
  418b92:	or     eax,0x7e768008
  418b97:	out    0x4a,al
  418b99:	xchg   esp,eax
  418b9a:	mov    bl,ch
  418b9c:	shl    DWORD PTR ds:0xc6523f6b,0x4c
  418ba3:	cwde   
  418ba4:	in     al,0x22
  418ba6:	sub    DWORD PTR [edi],ebp
  418ba8:	ds inc edx
  418baa:	jg     0x418c0d
  418bac:	cli    
  418bad:	cld    
  418bae:	ins    DWORD PTR es:[edi],dx
  418baf:	in     eax,dx
  418bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bb1:	adc    eax,ebp
  418bb3:	push   ebx
  418bb4:	sbb    DWORD PTR [ebx],ecx
  418bb6:	shr    BYTE PTR [edx-0x4a9ff45],0x33
  418bbd:	xchg   edi,eax
  418bbe:	cmp    eax,0xa6d2033c
  418bc3:	(bad)  
  418bc4:	dec    edi
  418bc5:	sbb    BYTE PTR [edx],dh
  418bc7:	retf   0xaeae
  418bca:	idiv   DWORD PTR [edi+esi*4]
  418bcd:	pop    ss
  418bce:	fsubr  QWORD PTR [edi-0x786fda6d]
  418bd4:	cmp    esi,eax
  418bd6:	(bad)  
  418bd8:	dec    ecx
  418bd9:	mov    ds:0x43bcc64b,eax
  418bde:	jns    0x418ba0
  418be0:	cmp    BYTE PTR [eax-0x4a],ch
  418be3:	adc    ebp,DWORD PTR [ebx+0x11]
  418be6:	cmc    
  418be7:	add    BYTE PTR [edx-0x20],cl
  418bea:	data16 test al,0xdf
  418bed:	clc    
  418bee:	pop    es
  418bef:	or     al,0x17
  418bf1:	and    DWORD PTR [edi+ebp*4],edx
  418bf4:	xchg   edx,eax
  418bf5:	dec    edx
  418bf6:	push   0x26ef794f
  418bfb:	inc    dx
  418bfd:	or     BYTE PTR [ecx+eax*8],0x16
  418c01:	aas    
  418c02:	xor    eax,DWORD PTR [ecx-0x38]
  418c05:	sahf   
  418c06:	lods   al,BYTE PTR ds:[esi]
  418c07:	clc    
  418c08:	jb     0x418c01
  418c0a:	xchg   ebp,eax
  418c0b:	clc    
  418c0c:	leave  
  418c0d:	mov    ds:0xd878c8fc,eax
  418c12:	jne    0x418c52
  418c14:	stos   DWORD PTR es:[edi],eax
  418c15:	push   es
  418c16:	scas   eax,DWORD PTR es:[edi]
  418c17:	scas   eax,DWORD PTR es:[edi]
  418c18:	fs jmp 0xfa253397
  418c1e:	bound  ebp,QWORD PTR [edx-0x11f1acf0]
  418c24:	jg     0x418beb
  418c26:	inc    edi
  418c27:	lock fcomi st,st(1)
  418c2a:	scas   al,BYTE PTR es:[edi]
  418c2b:	inc    ebx
  418c2c:	les    ecx,FWORD PTR [edi-0x7d2cd129]
  418c32:	repnz dec ebx
  418c34:	jge    0x418bde
  418c36:	and    eax,0x41e2b8b7
  418c3b:	pop    ecx
  418c3c:	dec    edx
  418c3d:	daa    
  418c3e:	pop    esi
  418c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c40:	mov    ch,0x3d
  418c42:	retf   0x1896
  418c45:	mov    bh,0x3b
  418c47:	cmp    ebx,DWORD PTR [esi+edi*4]
  418c4a:	shl    BYTE PTR [esi-0x60],1
  418c4d:	pop    ds
  418c4e:	out    dx,eax
  418c4f:	mov    bl,0xc
  418c51:	add    ah,BYTE PTR [esi-0x40]
  418c54:	or     ebx,DWORD PTR [esi]
  418c56:	idiv   BYTE PTR [edx]
  418c58:	xor    dl,BYTE PTR [ecx+eax*8]
  418c5b:	cli    
  418c5c:	mov    esp,DWORD PTR [ebp+eiz*4-0x33]
  418c60:	shr    dh,1
  418c62:	ret    0x384b
  418c65:	stos   BYTE PTR es:[edi],al
  418c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c67:	repnz out dx,eax
  418c69:	lds    ebx,FWORD PTR [ecx+0x64]
  418c6c:	inc    ecx
  418c6d:	pop    es
  418c6e:	imul   BYTE PTR [esp+ecx*4-0x6a734ccf]
  418c75:	or     ah,BYTE PTR [edi]
  418c77:	mov    ?,WORD PTR [esi-0x22274086]
  418c7d:	inc    edx
  418c7e:	jns    0x418c5c
  418c80:	jno    0x418c08
  418c82:	call   0xacb086a6
  418c87:	add    si,ax
  418c8a:	xor    al,0x1a
  418c8c:	xchg   BYTE PTR [ebp+edi*8-0x7f56180f],dl
  418c93:	mov    gs,WORD PTR ds:0x86c73319
  418c99:	mov    ebp,0x7e8c0344
  418c9e:	dec    esp
  418c9f:	dec    edi
  418ca0:	pushw  es
  418ca2:	mov    al,0xac
  418ca4:	(bad)  
  418ca5:	enter  0xa272,0xe6
  418ca9:	sbb    BYTE PTR [eax-0x452bbdae],dl
  418caf:	push   eax
  418cb0:	test   edi,0x10d07d69
  418cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cb7:	add    dh,BYTE PTR [edx-0xc0f65be]
  418cbd:	and    DWORD PTR [edi+0x36],edx
  418cc0:	pushf  
  418cc1:	adc    esp,edi
  418cc3:	fld    DWORD PTR [ebx-0x72]
  418cc6:	mov    al,0x3c
  418cc8:	stos   BYTE PTR es:[di],al
  418cca:	and    eax,0x14202151
  418ccf:	fidiv  WORD PTR [ecx+0x58]
  418cd2:	adc    al,dh
  418cd4:	je     0x418c93
  418cd6:	icebp  
  418cd7:	cli    
  418cd8:	dec    eax
  418cd9:	adc    al,0x5a
  418cdb:	and    DWORD PTR [eax+0x5c],esi
  418cde:	push   0xffffffc6
  418ce0:	les    eax,FWORD PTR [edx-0x6887a0c2]
  418ce6:	je     0x418c86
  418ce8:	cs add eax,0x6b7d52bf
  418cee:	pusha  
  418cef:	fcmovnbe st,st(7)
  418cf1:	outs   dx,DWORD PTR ds:[esi]
  418cf2:	arpl   WORD PTR [ebp-0x7],ax
  418cf5:	cld    
  418cf6:	inc    ebp
  418cf7:	lods   eax,DWORD PTR ds:[esi]
  418cf8:	and    eax,0xcda72577
  418cfd:	add    cl,BYTE PTR [eax+0x1c]
  418d00:	pushf  
  418d01:	jo     0x418cb7
  418d03:	repz adc al,0xb2
  418d06:	clc    
  418d07:	and    eax,0xa1850129
  418d0c:	or     DWORD PTR [ecx+0x20e94edd],edx
  418d12:	icebp  
  418d13:	js     0x418d02
  418d15:	sub    DWORD PTR [ecx+0x5eb42c08],esi
  418d1b:	pushf  
  418d1c:	dec    ebp
  418d1d:	int    0x7a
  418d1f:	sub    BYTE PTR [edi],0x11
  418d22:	ins    BYTE PTR es:[edi],dx
  418d23:	jle    0x418caa
  418d25:	cld    
  418d26:	pop    es
  418d27:	pop    ds
  418d28:	lods   al,BYTE PTR ds:[esi]
  418d29:	xchg   ah,bh
  418d2b:	jo     0x418cea
  418d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d2e:	into   
  418d2f:	inc    edi
  418d30:	out    0x6b,eax
  418d32:	pop    ds
  418d33:	dec    esp
  418d34:	cmc    
  418d35:	sahf   
  418d36:	outs   dx,DWORD PTR ds:[esi]
  418d37:	sti    
  418d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d39:	nop
  418d3a:	bound  ebp,QWORD PTR [edx+0x20d738b7]
  418d40:	ja     0x418d86
  418d42:	mov    eax,ds:0xc2106e9f
  418d47:	mov    ecx,0x91dda8fd
  418d4c:	pop    esi
  418d4d:	std    
  418d4e:	test   BYTE PTR [eax+0x467bf1c2],al
  418d54:	pop    esp
  418d55:	bound  ecx,QWORD PTR [edi]
  418d57:	push   0x2e2a0635
  418d5c:	lds    ecx,FWORD PTR [ebx-0x2c04a069]
  418d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d63:	inc    ebx
  418d64:	daa    
  418d65:	sub    bl,BYTE PTR [esp+eiz*8-0x78]
  418d69:	aam    0x9
  418d6b:	test   esp,0xa27abb5
  418d71:	mov    dh,0xa7
  418d73:	in     al,0xeb
  418d75:	mov    cl,0x1f
  418d77:	push   edx
  418d78:	cmp    eax,0xd7e81030
  418d7d:	dec    eax
  418d7e:	inc    esp
  418d7f:	and    al,0xa5
  418d81:	mov    al,BYTE PTR [esi-0x12]
  418d84:	cmp    al,0x50
  418d86:	xor    edi,DWORD PTR [esi]
  418d88:	mov    dh,0x50
  418d8a:	fbld   TBYTE PTR [esi+0x34]
  418d8d:	and    al,0x60
  418d8f:	jge    0x418d77
  418d91:	inc    esi
  418d92:	dec    eax
  418d93:	adc    cl,BYTE PTR [edi]
  418d95:	dec    edi
  418d96:	inc    ebx
  418d97:	push   ds
  418d98:	loop   0x418db8
  418d9a:	adc    DWORD PTR gs:0x96772b9a,ebx
  418da1:	je     0x418e05
  418da3:	call   0x8c13cb7e
  418da8:	arpl   WORD PTR ds:0x60c876d,sp
  418dae:	pop    edi
  418daf:	or     al,0x32
  418db1:	jmp    ebx
  418db3:	adc    eax,0x7c4dae66
  418db8:	clc    
  418db9:	ins    DWORD PTR es:[edi],dx
  418dba:	aas    
  418dbb:	imul   edi,DWORD PTR [edx-0x566d8254],0x58
  418dc2:	imul   ebp,edx,0xdbcd9804
  418dc8:	(bad)  
  418dc9:	mov    bl,0xf7
  418dcb:	inc    edx
  418dcc:	sti    
  418dcd:	cs and eax,0x8b448994
  418dd3:	add    DWORD PTR [edx+0x7cb31434],0x185ce9f0
  418ddd:	jnp    0x418dbb
  418ddf:	cmp    DWORD PTR [eax+0x823c6a9],edx
  418de5:	or     dh,BYTE PTR [eax-0x29e925f5]
  418deb:	push   0xffffffae
  418ded:	and    cl,bh
  418def:	mul    BYTE PTR [ebx-0x1d]
  418df2:	xor    edi,DWORD PTR [ecx]
  418df4:	sbb    eax,0x9885392d
  418df9:	mov    ch,0xd4
  418dfb:	push   0xeef0b5a1
  418e00:	jb     0x418df6
  418e02:	call   0xf294ec8
  418e07:	stos   DWORD PTR es:[edi],eax
  418e08:	or     edx,ebx
  418e0a:	and    DWORD PTR [ebx+eiz*4-0x714e2bb7],eax
  418e11:	cmp    al,0xf6
  418e13:	mov    dl,0x35
  418e15:	out    dx,eax
  418e16:	sbb    al,al
  418e18:	push   ebx
  418e19:	jb     0x418e8f
  418e1b:	pop    ebp
  418e1c:	pushf  
  418e1d:	mov    ah,0xc1
  418e1f:	mov    esp,0x62f10069
  418e24:	adc    al,0x62
  418e26:	das    
  418e27:	inc    ebp
  418e28:	xor    BYTE PTR [edi-0x601d2ad6],0xbd
  418e2f:	outs   dx,BYTE PTR ds:[esi]
  418e30:	xor    cl,al
  418e32:	out    dx,eax
  418e33:	mov    ebp,DWORD PTR [esp+ebx*1]
  418e36:	inc    edx
  418e37:	popf   
  418e38:	aad    0x94
  418e3a:	daa    
  418e3b:	cmp    cl,dh
  418e3d:	push   ss
  418e3e:	dec    DWORD PTR ds:0xf396995e
  418e44:	retf   
  418e45:	test   eax,0xa16e0d92
  418e4a:	popf   
  418e4b:	mov    ds,WORD PTR [ebx]
  418e4d:	ss dec ebp
  418e4f:	or     al,0x67
  418e51:	mov    esi,cs
  418e53:	in     al,dx
  418e54:	jno    0x418e81
  418e56:	sub    ebx,DWORD PTR [eax+0x4a]
  418e59:	jp     0x418df0
  418e5b:	push   0xaf1488c3
  418e60:	jne    0x418e20
  418e62:	dec    esi
  418e63:	mov    ch,0x34
  418e65:	jb     0x418e82
  418e67:	or     eax,0x35210ce4
  418e6c:	sbb    eax,0x68c8d798
  418e71:	shr    DWORD PTR [esi],1
  418e73:	mov    ebx,0xef7fc00e
  418e78:	(bad)  
  418e79:	or     bh,BYTE PTR [edx]
  418e7b:	add    al,al
  418e7d:	xchg   BYTE PTR [ebx+0x77c27ea7],ch
  418e83:	dec    eax
  418e84:	test   ebx,ebx
  418e86:	cmc    
  418e87:	jecxz  0x418e13
  418e89:	ret    
  418e8a:	jbe    0x418eab
  418e8c:	cmp    bl,BYTE PTR [ebp-0xbaa31f5]
  418e92:	std    
  418e93:	mov    al,ds:0x248f7098
  418e98:	sahf   
  418e99:	enter  0xd22a,0xbe
  418e9d:	add    dl,bl
  418e9f:	pop    esi
  418ea0:	jns    0x418eb6
  418ea2:	add    al,0xe8
  418ea4:	add    BYTE PTR [ebx-0x43e61e00],dl
  418eaa:	lea    ecx,[ecx+esi*1+0x20]
  418eae:	sar    ch,1
  418eb0:	call   0x7c63:0x85d069a
  418eb7:	sbb    DWORD PTR [esi],eax
  418eb9:	or     al,0xc7
  418ebb:	pop    ebx
  418ebc:	test   BYTE PTR [ecx+0x79],al
  418ebf:	push   0xc74719d4
  418ec4:	push   esp
  418ec5:	out    0xde,al
  418ec7:	in     al,dx
  418ec8:	mov    ebp,0xf204784f
  418ecd:	mov    BYTE PTR [ecx+0xe],dl
  418ed0:	(bad)  
  418ed1:	outs   dx,BYTE PTR ds:[esi]
  418ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ed4:	mov    DWORD PTR [edi+edx*1+0x505c2315],ecx
  418edb:	mov    cl,dl
  418edd:	mov    WORD PTR [esi+0x669b7fba],es
  418ee3:	es cdq 
  418ee5:	mov    ecx,0x7df17bc1
  418eea:	sti    
  418eeb:	xchg   ebp,eax
  418eec:	or     esi,ebx
  418eee:	jne    0x418f1b
  418ef0:	inc    ecx
  418ef1:	es iret 
  418ef3:	imul   BYTE PTR [edx]
  418ef5:	imul   dl
  418ef7:	sub    ebx,esi
  418ef9:	or     DWORD PTR [eax-0x4e6981dd],edi
  418eff:	dec    eax
  418f00:	xlat   BYTE PTR ds:[ebx]
  418f01:	(bad)  
  418f03:	mov    ch,al
  418f05:	mov    dl,0xa2
  418f07:	(bad)  
  418f08:	inc    BYTE PTR [esi+0x70]
  418f0b:	jmp    0x68e9ab6
  418f10:	xor    DWORD PTR [esi+0x12],esp
  418f13:	mov    esp,0xd9d34562
  418f18:	lahf   
  418f19:	jae    0x418ef6
  418f1b:	push   ecx
  418f1c:	rol    BYTE PTR [edi+ebx*4],1
  418f1f:	xor    BYTE PTR [edi+esi*1+0x171fd2b7],0x97
  418f27:	xchg   edx,eax
  418f28:	loop   0x418f58
  418f2a:	rcl    BYTE PTR [edi+0x18],0x9
  418f2e:	adc    al,0x6b
  418f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f31:	inc    ebx
  418f32:	hlt    
  418f33:	mov    ecx,0x8cfd4820
  418f38:	sbb    BYTE PTR [edx-0x40],ch
  418f3b:	xchg   edi,eax
  418f3c:	cwde   
  418f3d:	nop
  418f3e:	pop    esi
  418f3f:	aam    0xcd
  418f41:	inc    ebx
  418f42:	addr16 jle 0x418ef6
  418f45:	lock leave 
  418f47:	pop    edi
  418f48:	out    dx,eax
  418f49:	test   DWORD PTR [ecx+0x1c083533],esp
  418f4f:	fs imul esp,edi,0x5
  418f53:	scas   al,BYTE PTR es:[edi]
  418f54:	cdq    
  418f55:	or     eax,0xf6324111
  418f5a:	cmp    al,0x42
  418f5c:	stos   BYTE PTR es:[edi],al
  418f5d:	adc    BYTE PTR [ebx],bl
  418f5f:	dec    ebp
  418f60:	imul   eax,DWORD PTR [eax-0x2],0xfe911650
  418f67:	inc    ebp
  418f68:	daa    
  418f69:	mov    al,0xad
  418f6b:	jge    0x418f85
  418f6d:	xchg   ecx,eax
  418f6e:	je     0x418f82
  418f70:	imul   esp,DWORD PTR gs:[edi+0x6369b4aa],0x4f
  418f78:	retf   0x925b
  418f7b:	out    0xf4,eax
  418f7d:	dec    eax
  418f7e:	cdq    
  418f7f:	leave  
  418f80:	mov    ?,WORD PTR [edi+0x74abf16b]
  418f86:	sbb    al,BYTE PTR [eax-0x5b]
  418f89:	jo     0x418f93
  418f8b:	sub    DWORD PTR [esi-0x986f7d6],edx
  418f91:	and    al,0xec
  418f93:	ret    
  418f94:	iret   
  418f95:	lahf   
  418f96:	jb     0x418f36
  418f98:	lahf   
  418f99:	sbb    eax,0xa5fae9e4
  418f9e:	daa    
  418f9f:	ins    DWORD PTR es:[edi],dx
  418fa0:	test   al,0x2b
  418fa2:	lods   eax,DWORD PTR ds:[esi]
  418fa3:	hlt    
  418fa4:	mov    cl,0xf4
  418fa6:	out    0xfd,al
  418fa8:	out    0xa6,eax
  418faa:	xchg   DWORD PTR [ecx-0x7],ebp
  418fad:	lods   eax,DWORD PTR ds:[esi]
  418fae:	nop
  418faf:	pop    es
  418fb0:	pushf  
  418fb1:	(bad)  
  418fb2:	scas   al,BYTE PTR es:[edi]
  418fb3:	fs push esi
  418fb5:	cmp    BYTE PTR [ebp+0x47],dl
  418fb8:	in     al,0x44
  418fba:	and    DWORD PTR [ebx-0x50],edi
  418fbd:	push   0x6d9a6d27
  418fc2:	mov    ebx,0xb9daeac4
  418fc7:	xchg   esp,eax
  418fc8:	jns    0x418f7f
  418fca:	cdq    
  418fcb:	pop    esp
  418fcc:	and    BYTE PTR [ebx+0x2b],dh
  418fcf:	add    eax,0x871857bc
  418fd4:	xchg   edi,eax
  418fd5:	sti    
  418fd6:	mov    bh,BYTE PTR [edx-0x6b]
  418fd9:	xor    DWORD PTR [ebx+0x62520a05],esp
  418fdf:	xlat   BYTE PTR ds:[ebx]
  418fe0:	sub    ebp,0xc4a8fde3
  418fe6:	jecxz  0x418f86
  418fe8:	pop    ebp
  418fe9:	push   edi
  418fea:	into   
  418feb:	lods   al,BYTE PTR ds:[esi]
  418fec:	hlt    
  418fed:	xchg   esi,eax
  418fee:	lods   al,BYTE PTR ds:[esi]
  418fef:	xchg   BYTE PTR [edi+0x19],cl
  418ff2:	mov    al,0xd3
  418ff4:	push   ss
  418ff5:	sbb    ah,BYTE PTR [edx+0xd]
  418ff8:	stos   DWORD PTR es:[edi],eax
  418ff9:	aam    0x81
  418ffb:	ret    0x5acb
  418ffe:	and    eax,0x309118b1
  419003:	sbb    al,0x6a
  419005:	out    dx,al
  419006:	lock inc ebx
  419008:	push   ds
  419009:	pop    es
  41900a:	push   esp
  41900b:	repz scas al,BYTE PTR es:[edi]
  41900d:	sbb    DWORD PTR [edx],ebp
  41900f:	pushf  
  419010:	push   edi
  419011:	and    ebp,DWORD PTR [edx]
  419013:	push   ecx
  419014:	sub    al,0x53
  419016:	lds    edx,FWORD PTR [esi+0x30]
  419019:	ins    BYTE PTR es:[edi],dx
  41901a:	js     0x418fb4
  41901c:	sahf   
  41901d:	clc    
  41901e:	fild   WORD PTR [ecx-0x7d92d0f1]
  419024:	cs leave 
  419026:	les    ebp,FWORD PTR [edi+edi*8]
  419029:	mov    ah,0xe3
  41902b:	into   
  41902c:	push   edi
  41902d:	leave  
  41902e:	dec    ecx
  41902f:	sbb    dl,ch
  419031:	cmp    edi,DWORD PTR [ebx]
  419033:	sbb    al,0x5a
  419035:	cld    
  419036:	lods   eax,DWORD PTR ds:[esi]
  419037:	(bad)  
  419038:	cld    
  419039:	mov    esp,0x114b4f7
  41903e:	mov    ecx,ebx
  419040:	aas    
  419041:	or     al,0x13
  419043:	aaa    
  419044:	fist   DWORD PTR [ecx-0x62]
  419047:	pusha  
  419048:	adc    DWORD PTR [ebx+0x19],0x4a
  41904c:	mov    gs,WORD PTR [edx+0xd]
  41904f:	test   eax,0xbcaaf337
  419054:	jb     0x419003
  419056:	cmp    BYTE PTR [ebx-0x77],bl
  419059:	in     eax,0x60
  41905b:	and    DWORD PTR [ebp+0xf01c73e],ebx
  419061:	and    ch,BYTE PTR [ecx]
  419063:	adc    DWORD PTR [ebx],eax
  419065:	in     eax,0x23
  419067:	ror    DWORD PTR [ecx+0x558bb455],cl
  41906d:	or     BYTE PTR [ebx-0x6b7247a3],cl
  419073:	adc    ebx,edi
  419075:	cld    
  419076:	inc    ecx
  419077:	add    cl,BYTE PTR [ecx+0x558bb855]
  41907d:	or     BYTE PTR [ebx-0x5a1ead0],bh
  419083:	sub    ebx,edx
  419085:	add    ebx,DWORD PTR [ebp-0x44]
  419088:	mov    DWORD PTR [ebp-0x44],ebx
  41908b:	mov    edx,DWORD PTR [ebp+0x8]
  41908e:	xor    edx,eax
  419090:	add    edx,esi
  419092:	jne    0x416c96
  419098:	jmp    0x419125
  41909d:	mov    edx,DWORD PTR [ebp-0x14]
  4190a0:	mov    DWORD PTR [ebp+0x8],edx
  4190a3:	jmp    0x419118
  4190a8:	mov    edx,DWORD PTR [ebp+0x8]
  4190ab:	mov    ebx,DWORD PTR [ebp-0x8]
  4190ae:	xor    edx,eax
  4190b0:	xor    ebx,eax
  4190b2:	sub    edx,ebx
  4190b4:	sub    edx,esi
  4190b6:	xor    edx,eax
  4190b8:	mov    DWORD PTR [ebp+0x8],edx
  4190bb:	mov    edx,DWORD PTR [ebp+0x8]
  4190be:	mov    ebx,DWORD PTR [ebp-0x58]
  4190c1:	add    edx,0x5708fa
  4190c7:	imul   edx,ebx
  4190ca:	mov    DWORD PTR [ebp-0x58],edx
  4190cd:	mov    edx,DWORD PTR [ebp+0x8]
  4190d0:	mov    ebx,DWORD PTR [ebp-0x54]
  4190d3:	add    edx,0x64f89c
  4190d9:	or     edx,ebx
  4190db:	mov    DWORD PTR [ebp-0x54],edx
  4190de:	mov    edx,DWORD PTR [ebp+0x8]
  4190e1:	mov    ebx,DWORD PTR [ebp-0x50]
  4190e4:	add    edx,ecx
  4190e6:	xor    edx,ebx
  4190e8:	mov    DWORD PTR [ebp-0x50],edx
  4190eb:	mov    edx,DWORD PTR [ebp+0x8]
  4190ee:	mov    ebx,DWORD PTR [ebp-0x4c]
  4190f1:	add    edx,edi
  4190f3:	and    edx,ebx
  4190f5:	mov    DWORD PTR [ebp-0x4c],edx
  4190f8:	mov    edx,DWORD PTR [ebp+0x8]
  4190fb:	mov    ebx,DWORD PTR [ebp-0x48]
  4190fe:	lea    edx,[ebx+edx*1+0x241fcdf]
  419105:	mov    DWORD PTR [ebp-0x48],edx
  419108:	mov    edx,DWORD PTR [ebp+0x8]
  41910b:	mov    ebx,0xfa5e1530
  419110:	sub    ebx,edx
  419112:	add    ebx,DWORD PTR [ebp-0x44]
  419115:	mov    DWORD PTR [ebp-0x44],ebx
  419118:	mov    edx,DWORD PTR [ebp+0x8]
  41911b:	xor    edx,eax
  41911d:	add    edx,esi
  41911f:	jne    0x4190a8
  419125:	mov    edx,DWORD PTR [ebp-0x14]
  419128:	mov    DWORD PTR [ebp+0x8],edx
  41912b:	jmp    0x41b525
  419130:	mov    edx,DWORD PTR [ebp+0x8]
  419133:	mov    ebx,DWORD PTR [ebp-0x8]
  419136:	xor    edx,eax
  419138:	xor    ebx,eax
  41913a:	sub    edx,ebx
  41913c:	sub    edx,esi
  41913e:	xor    edx,eax
  419140:	mov    DWORD PTR [ebp+0x8],edx
  419143:	mov    edx,DWORD PTR [ebp+0x8]
  419146:	mov    ebx,DWORD PTR [ebp-0x58]
  419149:	add    edx,0x5708fa
  41914f:	imul   edx,ebx
  419152:	mov    DWORD PTR [ebp-0x58],edx
  419155:	mov    edx,DWORD PTR [ebp+0x8]
  419158:	mov    ebx,DWORD PTR [ebp-0x54]
  41915b:	add    edx,0x64f89c
  419161:	or     edx,ebx
  419163:	mov    DWORD PTR [ebp-0x54],edx
  419166:	mov    edx,DWORD PTR [ebp+0x8]
  419169:	mov    ebx,DWORD PTR [ebp-0x50]
  41916c:	add    edx,ecx
  41916e:	xor    edx,ebx
  419170:	mov    DWORD PTR [ebp-0x50],edx
  419173:	mov    edx,DWORD PTR [ebp+0x8]
  419176:	mov    ebx,DWORD PTR [ebp-0x4c]
  419179:	add    edx,edi
  41917b:	and    edx,ebx
  41917d:	mov    DWORD PTR [ebp-0x4c],edx
  419180:	mov    edx,DWORD PTR [ebp+0x8]
  419183:	mov    ebx,DWORD PTR [ebp-0x48]
  419186:	lea    edx,[ebx+edx*1+0x241fcdf]
  41918d:	jmp    0x41b512
  419192:	stos   DWORD PTR es:[edi],eax
  419193:	push   ds
  419194:	(bad)  
  419195:	and    al,0xcb
  419197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419198:	jnp    0x419127
  41919a:	jge    0x41913b
  41919c:	xor    eax,0xc954f31b
  4191a1:	es (bad) 
  4191a3:	sbb    DWORD PTR [ecx+0x7a],edi
  4191a6:	adc    bl,BYTE PTR [edi+0x7a]
  4191a9:	jp     0x41912e
  4191ab:	js     0x4191f4
  4191ad:	aas    
  4191ae:	sbb    dl,BYTE PTR [edx-0x7a]
  4191b1:	jge    0x4191cf
  4191b3:	in     eax,0x4f
  4191b5:	fild   DWORD PTR [esi+0xd9a1beb]
  4191bb:	gs int3 
  4191bd:	push   edi
  4191be:	dec    eax
  4191bf:	les    esp,FWORD PTR [ebx-0x35fe67ae]
  4191c5:	lods   eax,DWORD PTR ds:[esi]
  4191c6:	hlt    
  4191c7:	xchg   esp,eax
  4191c8:	into   
  4191c9:	mov    WORD PTR [ecx+eax*8],?
  4191cc:	leave  
  4191cd:	mov    BYTE PTR [esi],cl
  4191cf:	inc    edi
  4191d0:	loope  0x419224
  4191d2:	int    0x10
  4191d4:	pop    ecx
  4191d5:	push   esp
  4191d6:	xor    eax,0x3933925c
  4191db:	mov    ebp,0x20669977
  4191e0:	mov    bl,BYTE PTR ss:[ecx]
  4191e3:	cwde   
  4191e4:	mov    ecx,0xec65eed7
  4191e9:	clc    
  4191ea:	cmc    
  4191eb:	scas   al,BYTE PTR es:[edi]
  4191ec:	je     0x419240
  4191ee:	ret    0x1f87
  4191f1:	hlt    
  4191f2:	xchg   DWORD PTR [edi],esp
  4191f4:	mov    ds:0xbaa6c8b,eax
  4191f9:	push   0x80f89b36
  4191fe:	shl    esi,0xd7
  419201:	cmp    eax,0x33db394f
  419206:	mov    bl,0x21
  419208:	mov    ebp,0x58e6b1c2
  41920d:	add    bl,al
  41920f:	loope  0x41928b
  419211:	popf   
  419212:	add    dh,BYTE PTR [eax]
  419214:	imul   eax,DWORD PTR [edi+ebp*2+0x8d389cc],0x55
  41921c:	repnz fucomp st(6)
  41921f:	ror    cl,0xa7
  419222:	clc    
  419223:	sub    al,0x2
  419225:	xor    BYTE PTR [edi],ah
  419227:	fstp   st(2)
  419229:	sbb    BYTE PTR [ecx-0xa7b7cfa],al
  41922f:	stc    
  419230:	hlt    
  419231:	jnp    0x4191f3
  419233:	xchg   ebp,eax
  419234:	pop    ebp
  419235:	out    0x70,al
  419237:	xor    eax,0x80e26b3f
  41923c:	out    0xc7,eax
  41923e:	(bad)  
  41923f:	dec    ebx
  419240:	in     eax,dx
  419241:	adc    BYTE PTR [ebx+0x26],ch
  419244:	daa    
  419245:	es push esp
  419247:	retf   0x42e0
  41924a:	je     0x41920a
  41924c:	mov    cl,BYTE PTR [eax]
  41924e:	arpl   WORD PTR [edi],bx
  419250:	mov    al,ds:0xcab81e89
  419255:	arpl   WORD PTR [edi],sp
  419257:	dec    eax
  419258:	mov    dh,0x37
  41925a:	or     al,0xf7
  41925c:	loopne 0x419287
  41925e:	mov    al,ds:0x1c81063b
  419263:	ss pop ds
  419265:	loop   0x4191f1
  419267:	int3   
  419268:	dec    edi
  419269:	(bad)  
  41926a:	dec    esi
  41926b:	gs jp  0x41927e
  41926e:	or     eax,0x876cbdd0
  419273:	cdq    
  419274:	retf   
  419275:	sbb    eax,DWORD PTR [esi+eiz*4]
  419278:	dec    esp
  419279:	mov    ds:0x768662d7,eax
  41927e:	jmp    0xe8142c9d
  419283:	dec    eax
  419284:	xor    eax,0x28dc03b1
  419289:	sbb    eax,0xf47fa48
  41928e:	repnz ins BYTE PTR es:[edi],dx
  419290:	cmp    eax,0x45adbbda
  419295:	shl    ecx,cl
  419297:	test   al,0xaf
  419299:	mov    esp,DWORD PTR [ecx-0x21]
  41929c:	mov    ah,0x66
  41929e:	mov    bl,0x1a
  4192a0:	shr    BYTE PTR [ecx+0x7a],cl
  4192a3:	xchg   esi,eax
  4192a4:	xchg   BYTE PTR [ebp-0x2316fb42],dl
  4192aa:	and    DWORD PTR [edx+edi*8-0x2929715c],ebp
  4192b1:	jmp    0x4192a2
  4192b3:	lock jecxz 0x419251
  4192b6:	pop    edi
  4192b7:	jne    0x4192c4
  4192b9:	mov    edi,0xad3e16f9
  4192be:	outs   dx,BYTE PTR ds:[esi]
  4192bf:	or     bl,BYTE PTR [edx-0xceda4bb]
  4192c5:	cmc    
  4192c6:	fs je  0x41927b
  4192c9:	cmp    al,0xe1
  4192cb:	(bad)  
  4192cc:	push   ds
  4192cd:	xchg   ebp,eax
  4192ce:	pop    edi
  4192cf:	test   eax,0xe1efb5f8
  4192d4:	loopne 0x41929a
  4192d6:	sub    BYTE PTR [ebx],bl
  4192d8:	push   ecx
  4192d9:	sub    bl,BYTE PTR [esi-0x4c9dddd0]
  4192df:	adc    bh,dl
  4192e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192e2:	sar    DWORD PTR [edx-0x15],cl
  4192e5:	lds    ebp,FWORD PTR [esi]
  4192e7:	xor    al,0x96
  4192e9:	push   esp
  4192ea:	fidivr WORD PTR [eax]
  4192ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192ed:	leave  
  4192ee:	sbb    eax,0xa8ab789b
  4192f3:	mov    edx,0xa7c3a9a5
  4192f8:	ins    DWORD PTR es:[edi],dx
  4192f9:	(bad)  
  4192fb:	dec    ebx
  4192fc:	jg     0x419347
  4192fe:	daa    
  4192ff:	sbb    al,0x10
  419301:	sbb    bl,BYTE PTR [eax+0x1c7b7e4f]
  419307:	lds    esi,FWORD PTR [ecx+0x5504e852]
  41930d:	or     ebp,DWORD PTR [edx-0x2f166242]
  419313:	and    DWORD PTR [ebp-0x4be7710f],0x49
  41931a:	add    ch,BYTE PTR [ebp-0x43712217]
  419320:	mov    cl,0x80
  419322:	mov    cl,0x73
  419324:	arpl   WORD PTR [ebp-0x3f],dx
  419327:	pusha  
  419328:	stos   BYTE PTR es:[edi],al
  419329:	nop
  41932a:	fs in  al,dx
  41932c:	push   eax
  41932d:	loop   0x419342
  41932f:	mov    ah,0xb3
  419331:	cdq    
  419332:	and    esi,DWORD PTR [ebx-0x5a]
  419335:	adc    al,0x4b
  419337:	lahf   
  419338:	pop    ebx
  419339:	imul   esi,esi,0xffffffbc
  41933c:	mov    ds:0xb7c1d88e,al
  419341:	inc    edx
  419342:	fdivr  st(1),st
  419344:	xor    al,0x27
  419346:	push   0x3c
  419348:	inc    ecx
  419349:	adc    DWORD PTR ds:0x72a6cc4d,0x3a
  419350:	ins    BYTE PTR es:[edi],dx
  419351:	shl    DWORD PTR [ecx],cl
  419353:	cmp    eax,0x7dcc15b1
  419358:	push   ebx
  419359:	cmp    ah,BYTE PTR [ebx+0x64]
  41935c:	mov    dh,0x32
  41935e:	sub    eax,DWORD PTR [eax+0x4237014e]
  419364:	push   0x6e
  419366:	rol    BYTE PTR [ecx-0x615640cb],0x1e
  41936d:	icebp  
  41936e:	scas   eax,DWORD PTR es:[edi]
  41936f:	pop    ss
  419370:	shr    BYTE PTR [esi-0x762c4d8f],0xfe
  419377:	mov    bh,0x77
  419379:	adc    DWORD PTR [edx+esi*4-0x22],ebx
  41937d:	add    ecx,DWORD PTR [edi+0x1d]
  419380:	sbb    ebp,DWORD PTR [esi+0x71]
  419383:	sbb    DWORD PTR [edx],0x4b
  419386:	(bad)  
  419387:	aas    
  419388:	or     ch,BYTE PTR [edi-0x33]
  41938b:	push   edx
  41938c:	sub    BYTE PTR [ebx-0x69b3cf75],ch
  419392:	jmp    0x4193b5
  419394:	mov    ds:0xfa9a7168,al
  419399:	inc    esi
  41939a:	xchg   edx,eax
  41939b:	outs   dx,DWORD PTR ds:[esi]
  41939c:	call   FWORD PTR [ebp+edx*4+0x42]
  4193a0:	push   edi
  4193a1:	clc    
  4193a2:	push   edi
  4193a3:	and    ebp,0xffffff8a
  4193a6:	push   edx
  4193a7:	xor    bl,BYTE PTR [eax]
  4193a9:	fbstp  TBYTE PTR [ecx+0x63be2be9]
  4193af:	(bad)  
  4193b0:	sub    eax,esi
  4193b2:	test   dh,0xdb
  4193b5:	push   edi
  4193b6:	not    BYTE PTR [eax]
  4193b8:	cmp    BYTE PTR [ebx],ah
  4193ba:	call   FWORD PTR [esi+0xb03ac3d]
  4193c0:	fdivrp st(4),st
  4193c2:	ss push 0x67712359
  4193c8:	sbb    DWORD PTR [esi-0x75b5823a],esi
  4193ce:	add    ch,BYTE PTR [edx]
  4193d0:	xchg   ecx,eax
  4193d1:	cld    
  4193d2:	lods   eax,DWORD PTR ds:[esi]
  4193d3:	mov    edi,DWORD PTR [ecx-0xce7812f]
  4193d9:	and    esi,esp
  4193db:	adc    ah,al
  4193dd:	dec    ebx
  4193de:	lahf   
  4193df:	add    al,0x94
  4193e1:	or     DWORD PTR [ecx],edi
  4193e3:	cmp    BYTE PTR [esp+ebx*2+0x58],ah
  4193e7:	lea    esi,[ebx+0x632331ff]
  4193ed:	outs   dx,DWORD PTR ds:[esi]
  4193ee:	fld    TBYTE PTR [esi+0x51]
  4193f1:	and    eax,0xa827202
  4193f6:	cmp    ax,0xb83e
  4193fa:	pushf  
  4193fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193fc:	xlat   BYTE PTR ds:[ebx]
  4193fd:	dec    edi
  4193fe:	add    edi,DWORD PTR ds:0x1bea2cc4
  419404:	ror    DWORD PTR [ecx+ecx*4+0x31],1
  419408:	dec    eax
  419409:	sub    di,WORD PTR [edi]
  41940c:	and    DWORD PTR [ebp+0x401473b6],edx
  419412:	je     0x41942d
  419414:	repz pop ebx
  419416:	cmp    DWORD PTR [ebp-0x1f317efc],edx
  41941c:	call   0xdb79f689
  419421:	sti    
  419422:	xchg   ebx,eax
  419423:	stos   BYTE PTR es:[edi],al
  419424:	mov    edx,0x5224139
  419429:	cmp    ebx,DWORD PTR [ebp+0x5b9192b7]
  41942f:	push   ds
  419430:	sub    bh,bh
  419432:	xchg   edx,eax
  419433:	pop    es
  419434:	out    dx,eax
  419435:	gs fwait
  419437:	jns    0x41940a
  419439:	pop    ecx
  41943a:	ds dec ebx
  41943c:	dec    ebp
  41943d:	addr16 retf 0xcbc2
  419441:	mov    al,0xb9
  419443:	ret    0x83e4
  419446:	sbb    al,0x70
  419448:	pop    ss
  419449:	pop    edi
  41944a:	adc    esi,DWORD PTR [ebp+0x67]
  41944d:	out    dx,al
  41944e:	ja     0x419428
  419450:	retf   0xdca5
  419453:	cmp    bh,ch
  419455:	inc    BYTE PTR [esi+0x34]
  419458:	in     eax,dx
  419459:	mov    ch,bh
  41945b:	sbb    al,0xe
  41945d:	imul   eax,eax,0xffffffaf
  419460:	pusha  
  419461:	sub    esp,esp
  419463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419464:	sti    
  419465:	nop
  419466:	(bad)  
  419467:	out    dx,al
  419468:	fstp   TBYTE PTR [edi]
  41946a:	(bad)
  41946d:	push   ecx
  41946e:	jp     0x419493
  419470:	mov    ebx,0x45847c15
  419475:	popa   
  419476:	and    ch,cl
  419478:	loop   0x4194e1
  41947a:	pop    edi
  41947b:	in     eax,dx
  41947c:	inc    edi
  41947d:	sahf   
  41947e:	mov    WORD PTR ds:0x635c898d,?
  419484:	sbb    eax,0xb64d39ff
  419489:	test   eax,0x9bd8af15
  41948e:	sub    eax,0xd6b29d40
  419493:	test   al,0xc7
  419495:	jp     0x4194db
  419497:	xor    BYTE PTR [ebx],ah
  419499:	in     eax,0x9a
  41949b:	hlt    
  41949c:	fstp   QWORD PTR [edi-0x663bf945]
  4194a2:	inc    edi
  4194a3:	enter  0xcde9,0x1b
  4194a7:	pop    ecx
  4194a8:	ret    
  4194a9:	pop    ebx
  4194aa:	popa   
  4194ab:	lea    esi,[esi-0x30]
  4194ae:	cdq    
  4194af:	sub    esp,DWORD PTR [esi]
  4194b1:	mov    ebp,0x655d2280
  4194b6:	push   es
  4194b7:	mov    eax,ds:0x81909397
  4194bc:	or     eax,0x2ebb2577
  4194c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194c2:	(bad)  
  4194c3:	dec    esp
  4194c4:	sub    al,0xb1
  4194c6:	mov    dl,bl
  4194c8:	outs   dx,BYTE PTR ds:[esi]
  4194c9:	icebp  
  4194ca:	test   al,0x2
  4194cc:	inc    esp
  4194cd:	xchg   esp,eax
  4194ce:	lds    edi,FWORD PTR [ecx-0x2ed8f38c]
  4194d4:	jle    0x4194fb
  4194d6:	or     esp,DWORD PTR [esi]
  4194d8:	dec    ecx
  4194d9:	mov    BYTE PTR [edi+0x38],cl
  4194dc:	mov    eax,0xb76fc967
  4194e1:	mov    ebx,0x71d1fc2d
  4194e6:	push   cs
  4194e7:	xchg   ecx,eax
  4194e8:	mov    eax,ds:0x54e61938
  4194ed:	sbb    DWORD PTR [ecx+0x1b3730f8],ebx
  4194f3:	aas    
  4194f4:	dec    esp
  4194f5:	out    dx,eax
  4194f6:	test   eax,0x5cb230b5
  4194fb:	neg    DWORD PTR [edx]
  4194fd:	mov    ecx,ss
  4194ff:	shl    BYTE PTR [esi+0x6cb2e930],cl
  419505:	jo     0x41950b
  419507:	mov    ecx,DWORD PTR [eax+esi*2+0x74270f8f]
  41950e:	sub    al,0x93
  419510:	inc    ecx
  419511:	loop   0x419514
  419513:	jp     0x4194ae
  419515:	leave  
  419516:	ret    0x7f0a
  419519:	gs mov al,0xb0
  41951c:	outs   dx,DWORD PTR ds:[esi]
  41951d:	retf   
  41951e:	add    BYTE PTR [edi-0x7f4faf98],dl
  419524:	mov    dl,0xf4
  419526:	cmc    
  419527:	push   ss
  419528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419529:	push   cs
  41952a:	out    0xe4,eax
  41952c:	mov    ch,0x24
  41952e:	sub    ebx,DWORD PTR [eax-0x44]
  419531:	je     0x419591
  419533:	stos   DWORD PTR es:[edi],eax
  419534:	cmp    edx,DWORD PTR [edi-0x88410e0]
  41953a:	dec    ebp
  41953b:	and    ah,ch
  41953d:	xchg   esi,eax
  41953e:	cli    
  41953f:	jp     0x419557
  419541:	enter  0x4c0e,0x78
  419545:	gs jmp 0x3b5bcac2
  41954b:	mov    al,0xae
  41954d:	mov    bh,0xb9
  41954f:	leave  
  419550:	add    eax,0x482e6d03
  419555:	mov    ecx,0x56cf3793
  41955a:	icebp  
  41955b:	or     BYTE PTR [edx],dl
  41955d:	out    dx,eax
  41955e:	popa   
  41955f:	gs pop edi
  419561:	adc    al,0xe7
  419563:	mov    eax,0x4153046b
  419568:	pop    esp
  419569:	mov    esp,0xfff9100a
  41956e:	fs in  eax,0x2b
  419571:	cli    
  419572:	fmul   QWORD PTR [edi+0x40]
  419575:	mov    dl,0x6b
  419577:	cmp    BYTE PTR [edx+0x65cc210f],ah
  41957d:	inc    edx
  41957e:	add    BYTE PTR [eax-0x4b],ch
  419581:	dec    edx
  419582:	mov    esp,DWORD PTR [edx-0x1b]
  419585:	xchg   esi,eax
  419586:	xchg   ebx,eax
  419587:	or     al,0x18
  419589:	xor    bh,BYTE PTR [bp+si]
  41958c:	lds    eax,FWORD PTR [edx]
  41958e:	(bad)  
  41958f:	leave  
  419590:	or     DWORD PTR [esi-0x3169b34c],0x8a6810
  41959a:	imul   ebx,DWORD PTR [edi],0x36
  41959d:	das    
  41959e:	dec    ebp
  41959f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195a0:	mov    ebp,0x9b71dde
  4195a5:	outs   dx,DWORD PTR ds:[esi]
  4195a6:	fisub  WORD PTR [ebp-0x5eb391f4]
  4195ac:	mov    bh,0x76
  4195ae:	push   ebx
  4195af:	stos   DWORD PTR es:[edi],eax
  4195b0:	lock mov bl,0x73
  4195b3:	sub    edi,eax
  4195b5:	mov    eax,0x666e6539
  4195ba:	into   
  4195bb:	xchg   esp,eax
  4195bc:	les    edi,FWORD PTR [ebx+0xab7ad87]
  4195c2:	cmc    
  4195c3:	cmp    BYTE PTR [esi-0x1c],0x43
  4195c7:	push   cs
  4195c8:	retf   0x2bcf
  4195cb:	push   ss
  4195cc:	push   0xffffffb4
  4195ce:	add    al,0xb8
  4195d0:	cmp    BYTE PTR [esi-0x77],dl
  4195d3:	(bad)  
  4195d4:	sub    eax,0x3ef6fef0
  4195d9:	lods   al,BYTE PTR ds:[esi]
  4195da:	push   esi
  4195db:	dec    DWORD PTR [esi]
  4195dd:	sbb    BYTE PTR [esi+edx*8],0xe4
  4195e1:	in     al,dx
  4195e2:	adc    ch,BYTE PTR [edi+0x7b2ca24]
  4195e8:	mov    ah,BYTE PTR [esi-0x67]
  4195eb:	adc    WORD PTR [ebp-0x3],bx
  4195ef:	sbb    ebp,DWORD PTR [esi+0x4c]
  4195f2:	xlat   BYTE PTR ds:[ebx]
  4195f3:	mov    edx,0xe77c1dd2
  4195f8:	mov    ah,0xc7
  4195fa:	sub    BYTE PTR [ebp+eiz*1+0x215b30b],cl
  419601:	lds    ebp,FWORD PTR [esi-0x5a20f6cc]
  419607:	(bad)  
  419608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419609:	mov    WORD PTR [bp+0x280e],es
  41960e:	cld    
  41960f:	inc    ecx
  419610:	mov    dl,0x8c
  419612:	adc    ebp,DWORD PTR [edi+0xc3f613f]
  419618:	out    0x26,al
  41961a:	sbb    DWORD PTR [ebx-0x762a6ad8],ecx
  419620:	push   ds
  419621:	pop    es
  419622:	mov    cl,0xab
  419624:	mov    ah,0x69
  419626:	cld    
  419627:	sbb    bl,BYTE PTR [ebx]
  419629:	xor    esi,DWORD PTR [ecx+0x6]
  41962c:	and    ah,BYTE PTR [esi]
  41962e:	outs   dx,BYTE PTR ds:[esi]
  41962f:	mov    edx,ss
  419631:	dec    eax
  419632:	mov    dl,0xed
  419634:	cwde   
  419635:	and    ah,BYTE PTR [edx+0x14]
  419638:	test   al,0x77
  41963a:	int    0x73
  41963c:	psubq  mm5,QWORD PTR [esi-0x65]
  419640:	sub    ah,bl
  419642:	mov    al,ds:0x47f4281d
  419647:	xor    al,cl
  419649:	into   
  41964a:	pop    ebp
  41964b:	mov    ch,0x17
  41964d:	imul   eax,ecx,0x4294b035
  419653:	imul   ebx,DWORD PTR [bx+di+0x48],0xaaa3dc85
  41965b:	inc    edi
  41965c:	sbb    BYTE PTR [edx],ah
  41965e:	(bad)  
  41965f:	sub    DWORD PTR [ebp+0x76132504],edx
  419665:	adc    eax,0x1defbfea
  41966a:	cs mov dl,0xa1
  41966d:	imul   ebx
  41966f:	test   BYTE PTR ds:0x477f7eb3,cl
  419675:	jmp    0x41962e
  419677:	mov    ebx,0x82bbc69f
  41967c:	sub    DWORD PTR [ebp+0x43],edi
  41967f:	mov    al,ds:0xb878ff41
  419684:	repnz bswap ebx
  419687:	lock mov esp,0xb5961a4a
  41968d:	cmp    esp,DWORD PTR ds:0x640db11c
  419693:	into   
  419694:	sbb    BYTE PTR ds:0x1b2d8f57,ch
  41969a:	je     0x419621
  41969c:	bound  edi,QWORD PTR [esi-0x2c71fe9d]
  4196a2:	push   ebx
  4196a3:	cmc    
  4196a4:	or     al,0x46
  4196a6:	sbb    DWORD PTR [ebx],ebp
  4196a8:	inc    ecx
  4196a9:	out    dx,eax
  4196aa:	or     esi,DWORD PTR [ebx]
  4196ac:	loop   0x4196bc
  4196ae:	sbb    eax,DWORD PTR [eax+0x30]
  4196b1:	popf   
  4196b2:	aas    
  4196b3:	fsubr  DWORD PTR [edx-0x5338c52d]
  4196b9:	cwde   
  4196ba:	aas    
  4196bb:	sub    eax,0x3bf12dee
  4196c0:	pop    eax
  4196c1:	div    DWORD PTR [ecx]
  4196c3:	sbb    eax,0x70bd4e45
  4196c8:	cdq    
  4196c9:	sub    DWORD PTR [eax],ecx
  4196cb:	mov    ds:0xae7c9de0,al
  4196d0:	adc    DWORD PTR [edi+0x2b],0x71
  4196d4:	mov    ch,0xe4
  4196d6:	add    esp,DWORD PTR [eiz*2+0x32a0944f]
  4196dd:	and    cl,bh
  4196df:	xchg   ebp,eax
  4196e0:	and    DWORD PTR [edi],eax
  4196e2:	or     ch,BYTE PTR [edi-0x50]
  4196e5:	in     eax,0xfe
  4196e7:	arpl   WORD PTR [ebx-0x44],bx
  4196ea:	or     DWORD PTR [edx+0x1a],0x50
  4196ee:	int    0x6f
  4196f0:	popa   
  4196f1:	jp     0x41975d
  4196f3:	hlt    
  4196f4:	loope  0x419757
  4196f6:	xchg   edi,eax
  4196f7:	cmp    eax,0xbe702192
  4196fc:	std    
  4196fd:	push   eax
  4196fe:	jmp    0xbdbadfc4
  419703:	(bad)  
  419704:	push   ecx
  419705:	adc    edx,ecx
  419707:	add    BYTE PTR [eax],0xf2
  41970a:	es add eax,0x6a3bc6df
  419710:	leave  
  419711:	(bad)  
  419712:	popa   
  419713:	adc    DWORD PTR [edx],ebp
  419715:	test   eax,0x54ec64ad
  41971a:	sub    edi,DWORD PTR [eax+0x25]
  41971d:	xchg   ebx,eax
  41971e:	or     al,0x72
  419720:	cmc    
  419721:	loop   0x419784
  419723:	pop    ecx
  419724:	ins    BYTE PTR es:[edi],dx
  419725:	xchg   eax,edi
  419727:	imul   ecx,DWORD PTR [edx-0x565d554a],0x743fff07
  419731:	out    0x1f,al
  419733:	call   0xa0f5b884
  419738:	mov    ss:0xba86a89b,eax
  41973e:	clc    
  41973f:	mov    edi,0xa1ac10b
  419744:	and    ebp,DWORD PTR [ebp-0x58]
  419747:	retf   0x2f83
  41974a:	or     BYTE PTR ds:0xc698811,bh
  419750:	cmp    al,0x43
  419752:	(bad)  
  419753:	in     al,dx
  419754:	push   eax
  419755:	shl    BYTE PTR ds:0x4cf3583a,1
  41975b:	mov    bl,ah
  41975d:	test   DWORD PTR [esi],ebp
  41975f:	push   edx
  419760:	dec    ecx
  419761:	sub    ah,BYTE PTR [esi]
  419763:	push   esp
  419764:	mov    ecx,0xc787ef12
  419769:	sub    ah,BYTE PTR [edx]
  41976b:	std    
  41976c:	and    DWORD PTR [edx+0x3ea777ad],esi
  419772:	repz repz out 0xf6,al
  419776:	xor    ebx,DWORD PTR [eax-0x77]
  419779:	sar    BYTE PTR [edx],1
  41977b:	dec    esp
  41977c:	leave  
  41977d:	pop    es
  41977e:	or     ebx,esp
  419780:	call   0xf34d4fc
  419785:	and    al,0xbd
  419787:	ins    DWORD PTR es:[edi],dx
  419788:	jp     0x4197d7
  41978a:	add    eax,0x5ddf4246
  41978f:	bound  ecx,QWORD PTR [edi]
  419791:	dec    esi
  419792:	add    DWORD PTR [edx+0x7ba835de],0x26ecd38d
  41979c:	sub    BYTE PTR [edi+0x778b629c],0x25
  4197a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197a4:	das    
  4197a5:	jne    0x4197d1
  4197a7:	or     BYTE PTR [edi-0x1],ch
  4197aa:	out    0x7a,eax
  4197ac:	pop    eax
  4197ad:	and    DWORD PTR [ecx],0x28e7337
  4197b3:	push   es
  4197b4:	repz mov ebx,0xff20bc08
  4197ba:	add    eax,0x215ca36b
  4197bf:	gs cli 
  4197c1:	scas   al,BYTE PTR es:[edi]
  4197c2:	xor    ah,0xe5
  4197c5:	mov    edx,0xab8d9361
  4197ca:	sbb    DWORD PTR [ecx+0x5],0x25340dfa
  4197d1:	fwait
  4197d2:	pop    esi
  4197d4:	mov    ch,0xee
  4197d6:	dec    ah
  4197d8:	mov    BYTE PTR [edi+0x27d3301f],dl
  4197de:	inc    ebx
  4197df:	or     BYTE PTR [ecx+eax*1+0x6ca9d033],bh
  4197e6:	loope  0x419867
  4197e8:	out    0x21,al
  4197ea:	sbb    esi,DWORD PTR [edx-0xa]
  4197ed:	mov    esi,0x99a1a851
  4197f2:	mov    ebx,DWORD PTR [esi]
  4197f4:	or     ebx,DWORD PTR [ebx+0x12]
  4197f7:	push   ecx
  4197f8:	jns    0x419877
  4197fa:	in     eax,0xd3
  4197fc:	outs   dx,DWORD PTR ds:[esi]
  4197fd:	and    dl,bl
  4197ff:	jns    0x4197af
  419801:	aad    0x73
  419803:	and    eax,0x83909a44
  419808:	pop    esi
  419809:	jle    0x419806
  41980b:	inc    esp
  41980c:	rcl    esi,1
  41980e:	lods   eax,DWORD PTR ds:[esi]
  41980f:	jmp    0x419835
  419811:	mov    DWORD PTR [edi],eax
  419813:	mov    bl,BYTE PTR [ebx]
  419815:	and    BYTE PTR [edx+edx*2],cl
  419818:	clc    
  419819:	cmp    BYTE PTR [edx+eax*1-0x5e],dh
  41981d:	mov    bh,0x89
  41981f:	xor    ecx,esp
  419821:	mov    DWORD PTR [esi-0x4b],edi
  419824:	push   ebx
  419825:	and    al,0xe2
  419827:	mov    al,0x9d
  419829:	push   eax
  41982a:	inc    esp
  41982b:	dec    esi
  41982c:	inc    edx
  41982d:	xchg   BYTE PTR [edi-0x45],cl
  419830:	test   BYTE PTR [edi-0x1bb026b5],al
  419836:	lea    edi,[ebp-0x33]
  419839:	imul   edi,esi,0x13
  41983c:	sbb    esp,DWORD PTR [ebp-0x57]
  41983f:	addr16 loopne 0x4198ba
  419842:	push   0x71
  419844:	(bad)  
  419845:	sub    DWORD PTR [ecx+0x35a3dbef],ecx
  41984b:	mov    esp,0x833627df
  419850:	and    ah,BYTE PTR [edx+edx*1]
  419853:	xor    eax,0xe3a38d58
  419858:	mov    edi,fs
  41985a:	inc    edi
  41985b:	ins    BYTE PTR es:[edi],dx
  41985c:	ds mov edi,0x391fe6cb
  419863:	or     DWORD PTR [ebp-0x4a031a81],ebx
  419869:	sub    ecx,DWORD PTR [eax+0x8]
  41986c:	ja     0x419853
  41986e:	or     BYTE PTR [edi+0x28],0x40
  419872:	sbb    eax,0xd120b854
  419877:	adc    BYTE PTR [ecx-0x2a],dl
  41987a:	fbld   TBYTE PTR [esi-0x6a6c0a3e]
  419880:	ins    DWORD PTR es:[edi],dx
  419881:	fst    DWORD PTR [esi-0x4f]
  419884:	or     eax,0xa164aa61
  419889:	or     bl,bh
  41988b:	fucomi st,st(5)
  41988d:	dec    BYTE PTR [esi+0x12]
  419890:	jmp    0x41984d
  419892:	loop   0x419857
  419894:	mov    esi,0xb297a739
  419899:	iret   
  41989a:	mov    ds:0x60a426c2,al
  41989f:	ret    0xfea0
  4198a2:	xor    al,dl
  4198a4:	test   al,0x63
  4198a6:	jb     0x4198ee
  4198a8:	jp     0x4198c2
  4198aa:	inc    eax
  4198ab:	sbb    DWORD PTR [edi],ecx
  4198ad:	test   eax,0x92d9cfc
  4198b2:	cmp    dl,BYTE PTR [edi]
  4198b4:	mov    cl,al
  4198b6:	inc    ebx
  4198b7:	shl    BYTE PTR [eax],0xb9
  4198ba:	xchg   edx,eax
  4198bb:	dec    eax
  4198bc:	cmp    eax,DWORD PTR [ebx+eiz*4+0x3d212a5b]
  4198c3:	fcom   QWORD PTR [ebp-0x67]
  4198c6:	ins    DWORD PTR es:[edi],dx
  4198c7:	pusha  
  4198c8:	out    0xb7,al
  4198ca:	dec    edi
  4198cb:	repnz or DWORD PTR [ebx+0x2f],ebp
  4198cf:	ins    BYTE PTR es:[edi],dx
  4198d0:	shl    DWORD PTR [eax-0x3f1e04e],cl
  4198d6:	test   al,0xfa
  4198d8:	(bad)  
  4198d9:	push   ss
  4198da:	cmp    eax,0x5927a3b0
  4198df:	popa   
  4198e0:	dec    esp
  4198e1:	into   
  4198e2:	out    dx,al
  4198e3:	in     eax,dx
  4198e4:	inc    esp
  4198e5:	mov    bl,0x9a
  4198e7:	mov    al,ds:0x8c2b9329
  4198ec:	push   cs
  4198ed:	sub    BYTE PTR [eax],bl
  4198ef:	xchg   esp,eax
  4198f0:	dec    edx
  4198f1:	rcr    DWORD PTR [ebp-0x5a],1
  4198f4:	stos   DWORD PTR es:[edi],eax
  4198f5:	daa    
  4198f6:	ror    eax,cl
  4198f8:	push   es
  4198f9:	and    al,0x36
  4198fb:	push   ebx
  4198fc:	daa    
  4198fd:	inc    edx
  4198fe:	pop    esi
  4198ff:	imul   edx,DWORD PTR [edx-0x40],0x2ecc2dce
  419906:	lahf   
  419907:	or     ax,0xd7f3
  41990b:	int    0x12
  41990d:	nop
  41990e:	lods   al,BYTE PTR ds:[esi]
  41990f:	arpl   WORD PTR [edi+0x6c8509c],sp
  419915:	addr16 mov ebp,0xb4d5278c
  41991b:	fscale 
  41991d:	sbb    BYTE PTR fs:[edi],bh
  419920:	(bad)  
  419921:	in     al,0x75
  419923:	pushf  
  419924:	mov    esi,0xbf5b29fe
  419929:	fsubr  QWORD PTR [ecx+0xd]
  41992c:	or     edx,DWORD PTR [edx-0x2f]
  41992f:	add    BYTE PTR [esi+0x8],bh
  419932:	pop    ebp
  419933:	pusha  
  419934:	inc    ebx
  419935:	sbb    BYTE PTR [ecx],0xd5
  419938:	xor    esi,DWORD PTR [esi-0x238a7b39]
  41993e:	cmp    BYTE PTR [edi-0x49],dh
  419941:	pop    ss
  419942:	push   ebp
  419943:	dec    edi
  419944:	js     0x4198d8
  419946:	cdq    
  419947:	cmp    dh,BYTE PTR [ebp+edx*4+0x73a7362f]
  41994e:	(bad)  
  419950:	xlat   BYTE PTR ds:[ebx]
  419951:	outs   dx,BYTE PTR ds:[esi]
  419952:	or     eax,0x629a0531
  419957:	push   ss
  419958:	retf   
  419959:	lds    esp,FWORD PTR cs:[ebp-0x760a4dd6]
  419960:	std    
  419961:	pop    ebx
  419962:	cld    
  419963:	fnstsw ax
  419965:	dec    edi
  419966:	or     BYTE PTR [edx],0x31
  419969:	xchg   edx,eax
  41996a:	call   0x94da9f84
  41996f:	(bad)  
  419971:	cmp    eax,0x75d5599a
  419976:	mov    WORD PTR [ebx+0x5d],cs
  419979:	scas   al,BYTE PTR es:[edi]
  41997a:	psubw  mm1,QWORD PTR [ebp+0x1f]
  41997e:	and    esi,DWORD PTR [ebp+0x415705ce]
  419984:	je     0x41997f
  419986:	push   ss
  419987:	jnp    0x41996e
  419989:	mov    cs,ebp
  41998b:	lock push edi
  41998d:	cmp    al,0x9a
  41998f:	or     ebp,0x276767b2
  419995:	push   ebp
  419996:	sub    DWORD PTR [ebx+0x385cd900],edx
  41999c:	mov    bh,BYTE PTR [edi]
  41999e:	sbb    al,0xd5
  4199a0:	out    0x88,eax
  4199a2:	loope  0x41998b
  4199a4:	mov    ebp,0x5c1c7b27
  4199a9:	mov    dh,bl
  4199ab:	clc    
  4199ac:	mov    WORD PTR [esi],fs
  4199ae:	push   ds
  4199af:	aas    
  4199b0:	jb     0x4199ec
  4199b2:	dec    ebp
  4199b3:	test   eax,0xbd0338bd
  4199b8:	in     eax,0x70
  4199ba:	outs   dx,BYTE PTR ds:[esi]
  4199bb:	jmp    0x4199c0
  4199bd:	mov    ds:0xba3831fd,eax
  4199c2:	popa   
  4199c3:	or     eax,0x9614b94b
  4199c8:	ins    DWORD PTR es:[edi],dx
  4199c9:	sbb    al,0x4e
  4199cb:	and    esp,edi
  4199cd:	into   
  4199ce:	dec    ebx
  4199cf:	jge    0x419a30
  4199d1:	es jae 0x41996a
  4199d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199d5:	sub    al,0x9b
  4199d7:	mov    eax,0x4d836029
  4199dc:	pushf  
  4199dd:	pop    esi
  4199de:	rcl    esp,1
  4199e0:	popf   
  4199e1:	cmovne edx,DWORD PTR ds:0x42c4f488
  4199e8:	jae    0x4199ed
  4199ea:	sbb    al,0xaf
  4199ec:	xchg   edi,eax
  4199ed:	jae    0x419a37
  4199ef:	cmp    eax,0xce22988c
  4199f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199f5:	enter  0x7cf3,0x10
  4199f9:	scas   al,BYTE PTR es:[edi]
  4199fa:	jno    0x419a4f
  4199fc:	jge    0x419a48
  4199fe:	jl     0x41999f
  419a00:	das    
  419a01:	mov    ds:0x36611e25,al
  419a06:	in     al,dx
  419a07:	mov    al,0xf3
  419a09:	mov    bl,0x7c
  419a0b:	js     0x4199b5
  419a0d:	mov    esp,0x57b2abb5
  419a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a13:	adc    al,0x7a
  419a15:	imul   edi,DWORD PTR [ecx+0x51ec2377],0xce1d28db
  419a1f:	cmc    
  419a20:	sbb    al,0x1d
  419a22:	ret    
  419a23:	push   esi
  419a24:	fstp   QWORD PTR [edx+esi*8]
  419a27:	std    
  419a28:	push   ss
  419a29:	out    dx,eax
  419a2a:	in     eax,dx
  419a2b:	jnp    0x419a39
  419a2d:	sahf   
  419a2e:	(bad)  
  419a2f:	xchg   esi,eax
  419a30:	in     al,dx
  419a31:	dec    ecx
  419a32:	inc    ebp
  419a33:	and    al,BYTE PTR [edi+0x29]
  419a36:	mov    eax,0x87f64eac
  419a3b:	mov    DWORD PTR [ebp-0x6c],eax
  419a3e:	loopne 0x419a27
  419a40:	inc    esp
  419a41:	sub    DWORD PTR [ecx+0x55],edi
  419a44:	push   esi
  419a45:	and    BYTE PTR [edx],ah
  419a47:	dec    ebx
  419a48:	and    esi,edx
  419a4a:	sub    eax,0x351d6569
  419a4f:	lea    ecx,[edx]
  419a51:	enter  0xf17f,0x82
  419a55:	scas   eax,DWORD PTR es:[edi]
  419a56:	repz adc eax,0x9565a9be
  419a5c:	mov    al,0x30
  419a5e:	fadd   DWORD PTR [eax]
  419a60:	and    DWORD PTR [edi],edi
  419a62:	jle    0x419a98
  419a64:	dec    eax
  419a65:	inc    eax
  419a66:	sub    eax,0xa29e92bb
  419a6b:	lahf   
  419a6c:	mov    edi,DWORD PTR [ecx+ebp*2-0x32ce7fdd]
  419a73:	shl    DWORD PTR [ebp+0x28649cf4],0xd1
  419a7a:	in     al,0x24
  419a7c:	clc    
  419a7d:	mov    ch,0x77
  419a7f:	(bad)  
  419a80:	fs test eax,0xbcf4b6e0
  419a86:	mov    eax,ds:0x72a69d9c
  419a8b:	into   
  419a8c:	neg    bh
  419a8e:	xor    eax,0xc1c0eb06
  419a93:	mov    edx,0xf7086830
  419a98:	and    ebp,DWORD PTR [ebp+0x5d]
  419a9b:	test   DWORD PTR [edx-0x2c56bc7b],edx
  419aa1:	adc    ah,bh
  419aa3:	add    al,0x91
  419aa5:	jbe    0x419adb
  419aa7:	push   ebp
  419aa8:	je     0x419a9a
  419aaa:	cld    
  419aab:	cmp    BYTE PTR [edi-0x37f8712b],ah
  419ab1:	scas   eax,DWORD PTR es:[edi]
  419ab2:	mov    ebx,0x6d415c80
  419ab7:	es inc ecx
  419ab9:	or     BYTE PTR [ebx],0xd
  419abc:	xor    edi,DWORD PTR [edi-0x62]
  419abf:	inc    ecx
  419ac0:	pop    ecx
  419ac1:	pop    ecx
  419ac2:	scas   eax,DWORD PTR es:[edi]
  419ac3:	xchg   edx,eax
  419ac4:	fadd   DWORD PTR [ebx-0x6f006169]
  419aca:	sub    esp,DWORD PTR [ebx+0x13]
  419acd:	jmp    0x386a:0x63ea940d
  419ad4:	test   DWORD PTR [eax+ebp*4],esi
  419ad7:	aad    0x93
  419ad9:	in     eax,dx
  419ada:	loop   0x419abe
  419adc:	imul   esi,DWORD PTR [eax],0x2d4e81d3
  419ae2:	nop
  419ae3:	jecxz  0x419b34
  419ae5:	fs es test al,0x88
  419ae9:	fwait
  419aea:	outs   dx,BYTE PTR ds:[esi]
  419aeb:	jg     0x419a75
  419aed:	out    0x7b,al
  419aef:	outs   dx,DWORD PTR ds:[esi]
  419af0:	sar    dh,1
  419af2:	out    dx,al
  419af3:	pop    es
  419af4:	mov    dl,0xd1
  419af6:	inc    eax
  419af7:	jbe    0x419b24
  419af9:	xchg   BYTE PTR [eax+0x3cea156a],al
  419aff:	fsubr  st(7),st
  419b01:	sub    DWORD PTR [ecx],esp
  419b03:	jno    0x419adc
  419b05:	dec    ebx
  419b06:	dec    ecx
  419b07:	loopne 0x419b76
  419b09:	jmpw   0x8c0e
  419b0d:	push   esi
  419b0e:	inc    eax
  419b0f:	add    al,bh
  419b11:	mov    cl,0x4f
  419b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b14:	mov    DWORD PTR [esi+ebx*1-0x4d2eb99d],eax
  419b1b:	lahf   
  419b1c:	xchg   esi,eax
  419b1d:	retf   0xea6b
  419b20:	test   DWORD PTR [ebx],esi
  419b22:	or     cl,dh
  419b24:	push   ecx
  419b25:	dec    edx
  419b26:	aam    0x64
  419b28:	and    eax,0xa67b896c
  419b2d:	in     eax,dx
  419b2e:	jmp    0x419b25
  419b30:	sub    ecx,ecx
  419b32:	add    eax,0x1dada702
  419b37:	xchg   edi,eax
  419b38:	dec    ebx
  419b39:	mov    edx,0x2fb02def
  419b3e:	aad    0xc7
  419b40:	cmp    bh,cl
  419b42:	cwde   
  419b43:	xor    esp,DWORD PTR [edx]
  419b45:	push   esp
  419b46:	push   ebx
  419b47:	xchg   ebx,eax
  419b48:	ds aaa 
  419b4a:	jmp    0xb429:0xe7593dd7
  419b51:	iret   
  419b52:	pop    ebx
  419b53:	stc    
  419b54:	xchg   DWORD PTR [edi-0x5ae70215],ebp
  419b5a:	sbb    eax,0xa3dc1c52
  419b5f:	adc    BYTE PTR [esi+0x9fe8ab3],bh
  419b65:	icebp  
  419b66:	sub    DWORD PTR [ebx],ebp
  419b68:	aad    0xf5
  419b6a:	cli    
  419b6b:	mov    esp,0x8e70998d
  419b70:	cmp    esp,DWORD PTR [edx-0x4d7c716f]
  419b76:	ja     0x419af8
  419b78:	pop    ds
  419b79:	mov    bl,0x76
  419b7b:	cld    
  419b7c:	dec    edx
  419b7d:	mov    esp,0xf7592bfb
  419b82:	lock ins DWORD PTR es:[edi],dx
  419b84:	xor    BYTE PTR [ebp+0x4302fb25],al
  419b8a:	and    al,0xff
  419b8c:	jb     0x419bb4
  419b8e:	in     al,0x80
  419b90:	mov    eax,ds:0x2c789a59
  419b95:	cmp    eax,0x3b8ee92d
  419b9a:	cmp    esi,edi
  419b9c:	test   al,0x2
  419b9e:	mov    ebx,0x7a5cd553
  419ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ba5:	xor    cl,BYTE PTR ds:0xb34f4487
  419bab:	int3   
  419bac:	(bad)  
  419bad:	pop    ss
  419bae:	outs   dx,BYTE PTR ds:[esi]
  419baf:	dec    ebp
  419bb0:	pop    edx
  419bb1:	pop    esp
  419bb2:	pop    ebp
  419bb3:	fnstenv [eax+0x4a46b507]
  419bb9:	cli    
  419bba:	push   edi
  419bbb:	in     eax,dx
  419bbc:	shl    BYTE PTR [edi-0x176bf4c],cl
  419bc2:	(bad)
  419bc6:	pop    ecx
  419bc7:	daa    
  419bc8:	xchg   edx,eax
  419bc9:	mov    eax,0xedb0e022
  419bce:	daa    
  419bcf:	mov    esp,0x145bbe5b
  419bd4:	leave  
  419bd5:	(bad)  
  419bd7:	and    DWORD PTR [eax+0x19f63b7e],ebx
  419bdd:	mov    ch,ch
  419bdf:	cs pop es
  419be1:	stos   BYTE PTR es:[edi],al
  419be2:	jnp    0x419bb8
  419be4:	dec    ebp
  419be5:	add    eax,0xb4764f9a
  419bea:	popa   
  419beb:	call   0x25208b24
  419bf0:	adc    al,0x2a
  419bf2:	test   DWORD PTR [esi+0x3c],ebx
  419bf5:	xchg   edx,eax
  419bf6:	dec    ebx
  419bf7:	mov    DWORD PTR [ebx],eax
  419bf9:	les    eax,FWORD PTR [edi+0x3d]
  419bfc:	(bad)  [edx+0x67982ab3]
  419c02:	outs   dx,DWORD PTR ds:[esi]
  419c03:	sbb    al,0x80
  419c05:	shr    BYTE PTR [ebx-0x56],cl
  419c08:	mov    cl,al
  419c0a:	mov    ds:0x71667a18,al
  419c0f:	fsubr  QWORD PTR ds:0xb9d2c28
  419c15:	pop    ds
  419c16:	loope  0x419c36
  419c18:	cmp    al,0x9c
  419c1a:	pop    ss
  419c1b:	jmp    0x419bb6
  419c1d:	loop   0x419bc5
  419c1f:	in     eax,0xd0
  419c21:	adc    BYTE PTR [ebx+0x73],ch
  419c24:	popf   
  419c25:	sbb    al,0xa7
  419c27:	ret    
  419c28:	ret    0x92c
  419c2b:	inc    edx
  419c2c:	dec    ebx
  419c2d:	pushf  
  419c2e:	and    BYTE PTR [edx],dh
  419c30:	call   0x68242ffc
  419c35:	push   es
  419c36:	mov    esi,0xb07679da
  419c3b:	nop
  419c3c:	cmp    ah,dh
  419c3e:	jbe    0x419c5d
  419c40:	test   eax,ebx
  419c42:	pop    ss
  419c43:	mov    WORD PTR [edx],ds
  419c45:	mov    al,0x7a
  419c47:	adc    DWORD PTR [ecx],esi
  419c49:	push   es
  419c4a:	les    ebp,FWORD PTR [ebx-0x14c728d4]
  419c50:	jno    0x419c55
  419c52:	arpl   WORD PTR [esi+0x36],ax
  419c55:	jo     0x419c50
  419c57:	aas    
  419c58:	pop    eax
  419c59:	in     eax,dx
  419c5a:	sub    cl,BYTE PTR [ecx+0x6a55acf1]
  419c60:	mov    ss,eax
  419c62:	test   al,0xd7
  419c64:	loopne 0x419c96
  419c66:	pop    es
  419c67:	mov    bl,0xbf
  419c69:	and    DWORD PTR [edx-0x7c],ebx
  419c6c:	jb     0x419ce5
  419c6e:	jg     0x419c63
  419c70:	jb     0x419c75
  419c72:	mov    edi,0x92a54fbc
  419c77:	adc    DWORD PTR [ebp-0x57],0xc5fdd564
  419c7e:	mov    esp,DWORD PTR [ebx-0x1f]
  419c81:	pop    ss
  419c82:	popf   
  419c83:	fimul  DWORD PTR [eax-0x11]
  419c86:	sub    edi,DWORD PTR [ebx+edi*8-0x49]
  419c8a:	dec    eax
  419c8b:	into   
  419c8c:	xchg   ecx,eax
  419c8d:	xchg   edi,eax
  419c8e:	push   esp
  419c8f:	xor    BYTE PTR [ecx+0xe],0x3d
  419c93:	ja     0x419c71
  419c95:	ins    BYTE PTR es:[edi],dx
  419c96:	inc    ecx
  419c97:	sbb    dh,cl
  419c99:	jecxz  0x419ce2
  419c9b:	xchg   esi,eax
  419c9c:	mov    DWORD PTR [edi+0x16],edi
  419c9f:	clc    
  419ca0:	dec    BYTE PTR [edx+esi*4+0x76]
  419ca4:	imul   eax,DWORD PTR [esp+edi*8],0xc6ddc653
  419cab:	adc    eax,0x6d859ee5
  419cb0:	or     BYTE PTR [ebp+eax*4+0x7f3e8590],dl
  419cb7:	xor    BYTE PTR [esi+0x78605cac],al
  419cbd:	js     0x419c63
  419cbf:	push   ebx
  419cc0:	cwde   
  419cc1:	pop    ds
  419cc2:	neg    ecx
  419cc4:	clc    
  419cc5:	jecxz  0x419ca7
  419cc7:	push   esp
  419cc8:	(bad)
  419ccc:	push   0x7e358c5c
  419cd1:	push   esi
  419cd2:	clc    
  419cd3:	je     0x419ccb
  419cd5:	into   
  419cd6:	test   al,0x73
  419cd8:	sub    al,0xdc
  419cda:	je     0x419cb8
  419cdc:	sub    edx,DWORD PTR [esi+edx*2+0x3aa4ddc3]
  419ce3:	adc    eax,0x87b86653
  419ce8:	lds    ebx,FWORD PTR [ecx-0x4a]
  419ceb:	es adc eax,0xee1cba8b
  419cf1:	jle    0x419cc7
  419cf3:	jns    0x419d00
  419cf5:	fst    DWORD PTR [edx-0x5]
  419cf8:	push   esp
  419cf9:	std    
  419cfa:	cli    
  419cfb:	adc    esi,edi
  419cfd:	add    al,0x7f
  419cff:	stc    
  419d00:	cdq    
  419d01:	gs sbb al,0xb3
  419d04:	in     eax,0x9e
  419d06:	popa   
  419d07:	daa    
  419d08:	pop    ss
  419d09:	jno    0x419d3f
  419d0b:	lahf   
  419d0c:	push   es
  419d0d:	stc    
  419d0e:	inc    ebx
  419d0f:	mov    ds,esp
  419d11:	xchg   ebx,eax
  419d12:	lock dec ecx
  419d14:	fstp   TBYTE PTR [ecx+ebp*2+0x1a]
  419d18:	popf   
  419d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d1a:	xchg   esp,eax
  419d1b:	in     eax,0xa4
  419d1d:	adc    edi,eax
  419d1f:	push   cs
  419d20:	push   eax
  419d21:	add    eax,0xd92d6819
  419d26:	xchg   ecx,eax
  419d27:	call   ecx
  419d29:	(bad)  
  419d2a:	mov    edi,0xbebf9c6f
  419d2f:	or     bl,BYTE PTR [ebp-0x756faedd]
  419d35:	jbe    0x419d3b
  419d37:	sub    BYTE PTR [eax+0x53d75043],dh
  419d3d:	dec    eax
  419d3e:	or     eax,0xb964a60f
  419d43:	int3   
  419d44:	push   ebx
  419d45:	pop    ds
  419d46:	ffreep st(3)
  419d48:	(bad)  
  419d49:	mov    dl,0x41
  419d4b:	out    dx,eax
  419d4c:	mov    ah,0x5d
  419d4e:	pop    edi
  419d4f:	ficomp WORD PTR [eax-0x4]
  419d52:	sbb    BYTE PTR [ecx-0x79],0xb9
  419d56:	jg     0x419d5d
  419d58:	aas    
  419d59:	ficom  DWORD PTR [edx]
  419d5b:	mov    ch,bl
  419d5d:	faddp  st(0),st
  419d5f:	pop    edx
  419d60:	lock cmc 
  419d62:	cmc    
  419d63:	js     0x4796dd9f
  419d69:	mov    eax,0xeb54b1c1
  419d6e:	sbb    eax,0xb571447c
  419d73:	loop   0x419dbd
  419d75:	cmp    al,0x14
  419d77:	fdiv   QWORD PTR [edx+0x532fcfe5]
  419d7d:	outs   dx,BYTE PTR ds:[esi]
  419d7e:	jmp    0x660:0x7d6bcef7
  419d85:	mov    ds:0x95e4d88e,al
  419d8a:	ja     0x419dfa
  419d8c:	jo     0x419dab
  419d8e:	das    
  419d8f:	stos   BYTE PTR es:[edi],al
  419d90:	rcr    BYTE PTR [edx-0x423e7bb0],1
  419d96:	(bad)  
  419d97:	call   0xdf95d8bc
  419d9c:	mov    ds,WORD PTR [esi]
  419d9e:	retf   
  419d9f:	iret   
  419da0:	scas   eax,DWORD PTR es:[edi]
  419da1:	inc    esp
  419da2:	ret    
  419da3:	mov    dl,0xe
  419da5:	cdq    
  419da6:	xor    bl,BYTE PTR [edx-0x1985843f]
  419dac:	add    ebx,DWORD PTR [ecx-0x7d]
  419daf:	mov    ch,0x45
  419db1:	fmul   st(2),st
  419db3:	xchg   edx,eax
  419db4:	daa    
  419db5:	push   es
  419db6:	rcl    esi,cl
  419db8:	sub    BYTE PTR [edi+ebp*8],0x4d
  419dbc:	add    BYTE PTR [ecx+0x2c],0xa5
  419dc0:	xchg   ecx,eax
  419dc1:	scas   al,BYTE PTR es:[edi]
  419dc2:	daa    
  419dc3:	adc    esi,DWORD PTR [ecx]
  419dc5:	sub    al,dh
  419dc7:	lea    eax,[ecx-0x31]
  419dca:	xchg   ebx,eax
  419dcb:	popf   
  419dcc:	adc    eax,0x135de2a6
  419dd1:	xchg   DWORD PTR [eax-0x72],esi
  419dd4:	cli    
  419dd5:	aaa    
  419dd6:	add    BYTE PTR [edx-0x518266c6],cl
  419ddc:	sbb    al,0xeb
  419dde:	pop    ds
  419ddf:	mov    ds:0x7fa4aef5,eax
  419de4:	daa    
  419de5:	stc    
  419de6:	fs mov ebp,0xa158c75e
  419dec:	retf   0xeffa
  419def:	pop    ebp
  419df0:	add    BYTE PTR [ebx-0x14],bl
  419df3:	out    dx,eax
  419df4:	loope  0x419df6
  419df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419df7:	jne    0x419e6f
  419df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dfa:	inc    edi
  419dfb:	xor    DWORD PTR [esi+0xf834c2e],0xe2a73a00
  419e05:	add    al,ah
  419e07:	add    edi,DWORD PTR [eax]
  419e09:	pushf  
  419e0a:	xor    cl,BYTE PTR [eax+0x65aaf6fa]
  419e10:	sub    al,0x37
  419e12:	push   ebp
  419e13:	fwait
  419e14:	int    0xa0
  419e16:	jb     0x419e31
  419e18:	mov    bl,0x8f
  419e1a:	inc    ebx
  419e1b:	(bad)  
  419e1d:	inc    edi
  419e1e:	add    eax,0x84b0ba68
  419e23:	push   cs
  419e24:	sub    dl,BYTE PTR [esi-0x22476222]
  419e2a:	xor    DWORD PTR [eax-0x3a],edi
  419e2d:	and    edx,DWORD PTR [ebx]
  419e2f:	in     al,dx
  419e30:	arpl   di,si
  419e32:	xchg   edi,eax
  419e33:	dec    esi
  419e34:	int    0xbf
  419e36:	or     eax,0x2975f438
  419e3b:	inc    esp
  419e3c:	scas   al,BYTE PTR es:[edi]
  419e3d:	out    dx,eax
  419e3e:	pushf  
  419e3f:	cli    
  419e40:	jp     0x419eaa
  419e42:	push   eax
  419e43:	and    edi,DWORD PTR [esi]
  419e45:	push   es
  419e46:	mov    gs,ebp
  419e48:	mov    cl,0x8b
  419e4a:	fadd   QWORD PTR [edi-0x77]
  419e4d:	mov    ecx,0x1a48091
  419e52:	scas   eax,DWORD PTR es:[edi]
  419e53:	mov    al,ds:0x3fd12521
  419e58:	mov    dh,0x11
  419e5a:	test   eax,0x2a41c0c
  419e5f:	xchg   esi,eax
  419e60:	mov    ch,0x91
  419e62:	(bad)  
  419e63:	icebp  
  419e64:	xchg   esi,eax
  419e65:	inc    edx
  419e66:	mov    dl,0xcc
  419e68:	mov    eax,esp
  419e6a:	test   BYTE PTR [esi-0x77],al
  419e6d:	fdiv   st(6),st
  419e6f:	and    al,0x4e
  419e71:	xor    al,0x72
  419e73:	sub    bl,dh
  419e75:	loopne 0x419ebc
  419e77:	sub    eax,0xa0f4af07
  419e7c:	(bad)  
  419e7d:	in     al,dx
  419e7e:	loope  0x419ef4
  419e80:	(bad)  
  419e81:	aas    
  419e82:	lods   eax,DWORD PTR ds:[esi]
  419e83:	mov    edi,0x145afc33
  419e88:	adc    eax,0x92d07a05
  419e8d:	xchg   DWORD PTR [ebp+0x29],esp
  419e90:	xor    BYTE PTR [esi-0x70],ch
  419e93:	mov    al,ds:0x622c9ee0
  419e98:	mov    al,0xa3
  419e9a:	retf   0x3016
  419e9d:	fisub  WORD PTR [esi]
  419e9f:	mov    ebp,0xcaf6b984
  419ea4:	cmp    al,dh
  419ea6:	dec    edi
  419ea7:	test   al,0x9a
  419ea9:	das    
  419eaa:	adc    al,0x41
  419eac:	dec    edx
  419ead:	sbb    edx,ecx
  419eaf:	jl     0x419e90
  419eb1:	add    eax,0x44879c19
  419eb6:	sub    DWORD PTR ds:0x414dd4b7,0x53
  419ebd:	jmp    0x176c:0x7eb71c7b
  419ec4:	pop    eax
  419ec5:	lock pop edx
  419ec7:	adc    esi,DWORD PTR [ebp-0x66]
  419eca:	inc    edi
  419ecb:	sbb    eax,DWORD PTR [ecx-0x65c6f65a]
  419ed1:	mov    dh,0x96
  419ed3:	pop    ds
  419ed4:	inc    ebx
  419ed5:	ficom  WORD PTR [ecx+0x78a27b53]
  419edb:	or     bl,dh
  419edd:	cmp    dl,BYTE PTR [eax]
  419edf:	push   ebx
  419ee0:	mov    ebx,0xd9a112f3
  419ee5:	test   eax,0x5bc3f119
  419eea:	leave  
  419eeb:	inc    esp
  419eec:	adc    ah,BYTE PTR [eax]
  419eee:	add    eax,0x6165334e
  419ef3:	dec    edi
  419ef4:	test   BYTE PTR [ebx-0x3a],ch
  419ef7:	push   esi
  419ef8:	dec    esp
  419ef9:	add    ah,BYTE PTR [ebx-0x5]
  419efc:	das    
  419efd:	mov    BYTE PTR [edi+0x38],dl
  419f00:	not    ebp
  419f02:	jns    0x419f4e
  419f04:	(bad)  
  419f05:	or     ebx,ebx
  419f07:	ja     0x419eeb
  419f09:	cdq    
  419f0a:	mov    edx,0x5b7cae8a
  419f0f:	xchg   ebp,eax
  419f10:	les    esp,FWORD PTR [edx]
  419f12:	outs   dx,DWORD PTR ds:[esi]
  419f13:	fmul   DWORD PTR [edx+ebx*4-0xdeb80e7]
  419f1a:	inc    ecx
  419f1b:	or     al,bl
  419f1d:	adc    dh,bl
  419f1f:	(bad)  
  419f20:	retfw  0x11fe
  419f24:	xlat   BYTE PTR ds:[ebx]
  419f25:	pop    ds
  419f26:	dec    edx
  419f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f28:	jmp    0x419eaf
  419f2a:	or     ch,cl
  419f2c:	out    0x4f,eax
  419f2e:	(bad)  
  419f2f:	int3   
  419f30:	jbe    0x419ed6
  419f32:	fisttp WORD PTR [ecx+0x55f5153]
  419f38:	mov    ch,0xd
  419f3a:	ins    DWORD PTR es:[edi],dx
  419f3b:	out    0xdc,eax
  419f3d:	out    dx,eax
  419f3e:	into   
  419f3f:	push   ds
  419f40:	in     al,dx
  419f41:	pop    ebx
  419f42:	and    al,0xfb
  419f44:	mov    esi,0x3f1c8564
  419f49:	popf   
  419f4a:	lea    eax,ds:0xacd079d7
  419f50:	sub    eax,0x93801ee9
  419f55:	pop    esi
  419f56:	mov    al,ss:0xccc35f88
  419f5c:	clc    
  419f5d:	push   ebp
  419f5e:	add    DWORD PTR [edx+ebx*8],ebx
  419f61:	sbb    al,bh
  419f63:	addr16 dec edx
  419f65:	lods   eax,DWORD PTR ds:[esi]
  419f66:	mov    eax,ds:0x9440314c
  419f6b:	pop    edi
  419f6c:	(bad)  [esi]
  419f6e:	out    0xa2,eax
  419f70:	retf   0xf1d7
  419f73:	fldlg2 
  419f75:	in     al,0xe5
  419f77:	jnp    0x419f0f
  419f79:	mov    DWORD PTR [edi+0x22],ebp
  419f7c:	(bad)  
  419f7d:	jg     0x419f4a
  419f7f:	loopne 0x419f95
  419f81:	(bad)  
  419f83:	jle    0x419fe8
  419f85:	xchg   BYTE PTR [esi-0x110c343c],ch
  419f8b:	enter  0x66ec,0x2b
  419f8f:	sbb    BYTE PTR [edi+0x3ef8010a],cl
  419f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f96:	loopne 0x419f19
  419f98:	aas    
  419f99:	mov    WORD PTR [eax+ecx*2+0x73],fs
  419f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f9e:	jno    0x419f9c
  419fa0:	test   dh,0xf0
  419fa3:	loop   0x419fae
  419fa5:	mov    ah,0xb2
  419fa7:	pop    esp
  419fa8:	in     eax,0x1f
  419faa:	xchg   edi,eax
  419fab:	aad    0x51
  419fad:	mov    dh,0xd6
  419faf:	pop    ds
  419fb0:	or     al,0x61
  419fb2:	jmp    0x60ac:0x6bedde7e
  419fb9:	iret   
  419fba:	stos   BYTE PTR es:[edi],al
  419fbb:	mov    dl,0x75
  419fbd:	xor    al,0xa4
  419fbf:	xchg   ebp,eax
  419fc0:	cmp    BYTE PTR [eax+0x2d],ch
  419fc3:	xor    eax,0x6a439be2
  419fc8:	dec    esi
  419fc9:	pusha  
  419fca:	and    bl,BYTE PTR [ebx-0x12]
  419fcd:	xor    edi,DWORD PTR [edx+ecx*4+0x72]
  419fd1:	and    al,0xa4
  419fd3:	adc    ah,0xed
  419fd6:	test   BYTE PTR [ebx+edx*2+0x15d5c702],ah
  419fdd:	fnstsw WORD PTR [ebx+0x52c9823d]
  419fe3:	xor    dl,BYTE PTR ds:0x88c4f3d9
  419fe9:	pushf  
  419fea:	fdivr  DWORD PTR [edx-0x5d9bb05b]
  419ff0:	(bad)  
  419ff2:	add    dl,BYTE PTR [ebp-0x1027765b]
  419ff8:	iret   
  419ff9:	mov    ah,BYTE PTR [esi+0x56]
  419ffc:	shr    BYTE PTR [edx+0x23ab9411],1
  41a002:	adc    DWORD PTR [ebp-0x4c0d4119],edi
  41a008:	in     eax,0xef
  41a00a:	shl    BYTE PTR [ecx+0x1019ffd4],1
  41a010:	sub    BYTE PTR [ebx-0x5b],cl
  41a013:	add    al,0xd0
  41a015:	(bad)  
  41a016:	out    dx,al
  41a017:	enter  0x4779,0x39
  41a01b:	mov    ebp,0xa33c6e89
  41a020:	mov    ecx,0x9ea69471
  41a025:	xlat   BYTE PTR ds:[ebx]
  41a026:	fidivr DWORD PTR [edx+0x67]
  41a029:	shl    BYTE PTR [edi-0x7],1
  41a02c:	jbe    0x41a028
  41a02e:	fcmovnb st,st(7)
  41a030:	mov    ds:0xadccbec9,al
  41a035:	dec    esi
  41a036:	lea    eax,[ebx]
  41a038:	js     0x41a083
  41a03a:	je     0x41a034
  41a03c:	ins    DWORD PTR es:[edi],dx
  41a03d:	add    BYTE PTR [edi-0x16],0x8b
  41a041:	test   WORD PTR [edi*2-0x5bd80463],cx
  41a049:	(bad)  
  41a04a:	in     al,0x2e
  41a04c:	stos   BYTE PTR es:[edi],al
  41a04d:	leave  
  41a04e:	out    dx,al
  41a04f:	xlat   BYTE PTR ds:[ebx]
  41a050:	lods   eax,DWORD PTR ds:[esi]
  41a051:	ret    0x2197
  41a054:	jo     0x41a05e
  41a056:	inc    DWORD PTR [ebp+0x63]
  41a059:	fwait
  41a05a:	push   ss
  41a05b:	pop    ss
  41a05c:	push   edx
  41a05d:	mov    edi,0x8fed0a4f
  41a062:	jmp    DWORD PTR [ebx+0x2b]
  41a065:	aas    
  41a066:	cli    
  41a067:	pop    eax
  41a068:	cmp    DWORD PTR [edi-0x3],ecx
  41a06b:	cmp    BYTE PTR [ebp-0x4c06de41],cl
  41a071:	add    ah,BYTE PTR fs:[edi-0x706ab86c]
  41a078:	out    dx,eax
  41a079:	mov    ch,dl
  41a07b:	addr16 mov cl,0x88
  41a07e:	pop    ds
  41a07f:	(bad)  
  41a080:	inc    ebp
  41a081:	jge    0x41a050
  41a083:	mov    bh,0x6c
  41a085:	push   es
  41a086:	int3   
  41a087:	push   ebx
  41a088:	adc    al,0x76
  41a08a:	int3   
  41a08b:	fisub  DWORD PTR [eax+0x13]
  41a08e:	inc    ebp
  41a08f:	rol    BYTE PTR [ebp+0x635a834e],1
  41a095:	ror    bl,0xb8
  41a098:	sub    eax,0x12414ce9
  41a09d:	repz cdq 
  41a09f:	sbb    DWORD PTR [ecx-0x53],ebp
  41a0a2:	pop    edi
  41a0a3:	cmc    
  41a0a4:	scas   al,BYTE PTR es:[edi]
  41a0a5:	or     esi,DWORD PTR [ebp+0x6f0c3c7c]
  41a0ab:	dec    edx
  41a0ac:	(bad)  
  41a0ad:	stos   DWORD PTR es:[edi],eax
  41a0ae:	aaa    
  41a0af:	test   ch,bl
  41a0b1:	add    eax,0x38066929
  41a0b6:	out    0x61,al
  41a0b8:	and    eax,0x1119b624
  41a0bd:	pop    es
  41a0be:	adc    DWORD PTR es:[eax],ecx
  41a0c1:	add    ah,al
  41a0c3:	xor    cl,BYTE PTR [eax+0x7f]
  41a0c6:	push   cs
  41a0c7:	out    dx,eax
  41a0c8:	addr16 push ebp
  41a0ca:	xchg   edx,eax
  41a0cb:	jmp    0xe7661cb
  41a0d0:	sub    al,0xe5
  41a0d2:	inc    ebp
  41a0d3:	lahf   
  41a0d4:	js     0x41a07e
  41a0d6:	sbb    esi,DWORD PTR [ecx-0x41]
  41a0d9:	sub    al,0x1d
  41a0db:	mov    esp,0x1bcbb56b
  41a0e0:	cvtpi2ps xmm2,QWORD PTR [esi+0x120234b0]
  41a0e7:	fstp   DWORD PTR [esp+ebx*4]
  41a0ea:	in     al,dx
  41a0eb:	pop    es
  41a0ec:	jmp    0x41a141
  41a0ee:	add    eax,0xdcdb942b
  41a0f3:	mov    cl,0xa4
  41a0f5:	pop    ebx
  41a0f6:	sub    al,0x23
  41a0f8:	inc    esi
  41a0f9:	pop    ecx
  41a0fa:	add    edi,DWORD PTR [edi+edi*4-0x370fd00]
  41a101:	retf   
  41a102:	inc    edi
  41a103:	sub    al,0x7a
  41a105:	sbb    BYTE PTR [eax+ebp*8-0x19a133b6],al
  41a10c:	push   es
  41a10d:	cdq    
  41a10e:	adc    eax,0x2b13103b
  41a113:	jae    0x41a0f8
  41a115:	rcr    BYTE PTR [ebx],0x92
  41a118:	fist   WORD PTR [eax+0x34]
  41a11b:	mov    edx,0x6daceeb1
  41a120:	adc    eax,0x9bd7802e
  41a125:	pop    edx
  41a126:	arpl   WORD PTR [ebx+0x1c],bx
  41a129:	lds    eax,FWORD PTR [esi-0x58724e00]
  41a12f:	dec    esi
  41a130:	sar    BYTE PTR [ecx+edi*4+0x37fff11a],1
  41a137:	jmp    0x41a17f
  41a139:	pop    esi
  41a13a:	popa   
  41a13b:	adc    eax,0x7e6fa919
  41a140:	cmp    ecx,eax
  41a142:	jge    0x41a19d
  41a144:	test   esi,edx
  41a146:	nop
  41a147:	fld    TBYTE PTR [edx]
  41a149:	push   edi
  41a14a:	mov    DWORD PTR [eax+eiz*2+0x45],0x4e30939d
  41a152:	in     al,0x6d
  41a154:	(bad)  
  41a155:	mov    esp,0xe4dfcb86
  41a15a:	(bad)  
  41a15b:	sbb    BYTE PTR [esp+edx*8+0x2781d69b],ch
  41a162:	xor    BYTE PTR [edx],0x11
  41a165:	pop    ecx
  41a166:	jae    0x41a174
  41a168:	repnz repnz ds cmp edi,ebx
  41a16d:	push   ebp
  41a16e:	mov    eax,0xa7a33828
  41a173:	pop    edi
  41a174:	xchg   ecx,eax
  41a175:	inc    ebp
  41a176:	push   ecx
  41a177:	add    bl,ah
  41a179:	sub    bl,BYTE PTR [eax-0x5f]
  41a17c:	jb     0x41a1a5
  41a17e:	(bad)  
  41a17f:	sbb    BYTE PTR [eax-0x16],cl
  41a182:	(bad)  
  41a183:	sub    al,0x11
  41a185:	mov    ecx,0xf3da4c9e
  41a18a:	xor    eax,0x3397de39
  41a18f:	add    al,0x5e
  41a191:	daa    
  41a192:	call   0xb145:0x665262cb
  41a199:	test   BYTE PTR [edx-0x6d],dl
  41a19c:	mov    ebx,0x354a8604
  41a1a1:	data16 in al,dx
  41a1a3:	lods   eax,DWORD PTR ds:[esi]
  41a1a4:	(bad)  
  41a1a5:	(bad)  
  41a1a6:	sub    al,0x6d
  41a1a8:	mov    ecx,0xf48247df
  41a1ad:	adc    esi,edi
  41a1af:	scas   al,BYTE PTR es:[edi]
  41a1b0:	(bad)  
  41a1b1:	std    
  41a1b2:	(bad)  
  41a1b3:	cmc    
  41a1b4:	popf   
  41a1b5:	pop    es
  41a1b6:	sar    BYTE PTR [esi],cl
  41a1b8:	jmp    0x41a208
  41a1ba:	xor    eax,0xb31fb173
  41a1bf:	call   0x742e8aa8
  41a1c4:	dec    ebp
  41a1c5:	loopne 0x41a23d
  41a1c7:	pop    ecx
  41a1c8:	mov    cs,WORD PTR [eax]
  41a1ca:	or     al,0x49
  41a1cc:	mov    ch,0xcc
  41a1ce:	xchg   edx,eax
  41a1cf:	aam    0x1d
  41a1d1:	mov    edi,0x1d341f86
  41a1d6:	test   esi,edx
  41a1d8:	xlat   BYTE PTR ds:[ebx]
  41a1d9:	push   es
  41a1da:	div    DWORD PTR [edx+eiz*1+0xe066451]
  41a1e1:	add    eax,0xbdb60871
  41a1e6:	jo     0x41a23f
  41a1e8:	fisub  DWORD PTR [edi+0x694f1043]
  41a1ee:	hlt    
  41a1ef:	in     al,0x6
  41a1f1:	inc    edx
  41a1f2:	cli    
  41a1f3:	cli    
  41a1f4:	aam    0x73
  41a1f6:	cmc    
  41a1f7:	jmp    0x41a213
  41a1f9:	inc    ebx
  41a1fa:	aam    0x6b
  41a1fc:	jg     0x41a24c
  41a1fe:	fsub   DWORD PTR [eax+edi*8+0x60]
  41a202:	push   esi
  41a203:	xor    eax,0xb48c5874
  41a208:	pop    es
  41a209:	pop    esi
  41a20a:	adc    cl,BYTE PTR [ebp-0x28]
  41a20d:	pusha  
  41a20e:	les    eax,FWORD PTR [ecx-0x65]
  41a211:	jmp    0x41a1cd
  41a213:	mov    ch,0x64
  41a215:	div    DWORD PTR [ebx-0x1ebba27f]
  41a21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a21c:	cwde   
  41a21d:	pop    ebx
  41a21e:	push   0xb9d5a41a
  41a223:	sbb    eax,0xe8518922
  41a228:	mov    esp,0xa6019f5d
  41a22d:	mov    al,ds:0x9da7a8c6
  41a232:	rcl    DWORD PTR [esi],cl
  41a234:	bound  esi,QWORD PTR ds:0xd54b6f64
  41a23a:	loopne 0x41a25c
  41a23c:	sahf   
  41a23d:	(bad)  
  41a23e:	inc    BYTE PTR [esi+0x7710ec30]
  41a244:	sahf   
  41a245:	pusha  
  41a246:	cwde   
  41a247:	ret    0xcb67
  41a24a:	mov    BYTE PTR [ecx],ah
  41a24c:	sbb    ah,BYTE PTR [ebp-0x79]
  41a24f:	cli    
  41a250:	mov    bh,0x9a
  41a252:	cmp    eax,0x7c5bf3cd
  41a257:	mov    dl,BYTE PTR ds:0xdce3ca
  41a25d:	adc    eax,0x84631db9
  41a262:	sbb    ebx,DWORD PTR [edx]
  41a264:	mov    eax,0x75628e3d
  41a269:	jle    0x41a25b
  41a26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a26c:	adc    ebp,DWORD PTR [esp+edx*2-0x2acfee3d]
  41a273:	ror    esi,cl
  41a275:	shl    DWORD PTR [edi],0xc3
  41a278:	int3   
  41a279:	add    al,0xec
  41a27b:	sbb    eax,0x410ec61d
  41a280:	cwde   
  41a281:	(bad)  
  41a282:	cdq    
  41a283:	xchg   ecx,eax
  41a284:	inc    ebp
  41a285:	fst    QWORD PTR [ebp+0x11]
  41a288:	inc    edi
  41a289:	or     DWORD PTR [edi],eax
  41a28b:	lods   al,BYTE PTR ds:[esi]
  41a28c:	aaa    
  41a28d:	icebp  
  41a28e:	mov    dl,0x5
  41a290:	xchg   edi,eax
  41a291:	sub    eax,0x3e2283ec
  41a296:	push   ebx
  41a297:	hlt    
  41a298:	jge    0x41a29a
  41a29a:	dec    edx
  41a29b:	fisttp DWORD PTR [edx+0x23b29ef6]
  41a2a1:	or     cl,BYTE PTR [ebx+0xf]
  41a2a4:	xchg   ecx,eax
  41a2a5:	mov    eax,0xbbf7b317
  41a2aa:	scas   al,BYTE PTR es:[edi]
  41a2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ac:	(bad)
  41a2af:	or     ch,dl
  41a2b1:	lods   eax,DWORD PTR ds:[esi]
  41a2b2:	out    0x18,al
  41a2b4:	loopne 0x41a291
  41a2b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b7:	mov    dh,0xbf
  41a2b9:	cmp    eax,0x2bc5b13a
  41a2be:	lock mov al,BYTE PTR [esp+ebx*4-0x2c]
  41a2c3:	and    DWORD PTR fs:[edx-0x2f],edi
  41a2c7:	das    
  41a2c8:	push   edx
  41a2c9:	jg     0x41a346
  41a2cb:	and    DWORD PTR ss:[ecx+eax*4],0x950ed666
  41a2d3:	fdiv   QWORD PTR [ecx+0x65]
  41a2d6:	push   0x1f
  41a2d8:	shl    BYTE PTR ds:0x7dae65a1,cl
  41a2de:	icebp  
  41a2df:	mov    ds:0xe2d7f37,al
  41a2e4:	scas   eax,DWORD PTR es:[edi]
  41a2e5:	ja     0x41a29a
  41a2e7:	dec    eax
  41a2e8:	pop    es
  41a2e9:	jno    0x41a365
  41a2eb:	hlt    
  41a2ec:	cmp    eax,0x402a2dc6
  41a2f1:	mov    ebx,0x91f7b6ee
  41a2f6:	or     BYTE PTR [edx+0x33],0xd1
  41a2fa:	xchg   edi,eax
  41a2fb:	cmc    
  41a2fc:	jo     0x41a287
  41a2fe:	retf   
  41a2ff:	stc    
  41a300:	mov    dh,BYTE PTR [edx+0x66f61707]
  41a306:	enter  0x9684,0x72
  41a30a:	mov    dl,0xd8
  41a30c:	iret   
  41a30d:	push   esp
  41a30e:	imul   DWORD PTR [edi]
  41a310:	and    cl,0xa1
  41a313:	mov    BYTE PTR [ecx],0xe
  41a316:	dec    ebx
  41a317:	fmulp  st(6),st
  41a319:	pop    ebx
  41a31a:	maskmovq mm6,(bad)
  41a31b:	div    DWORD PTR [ebx]
  41a31d:	(bad)
  41a321:	aad    0x73
  41a323:	push   eax
  41a324:	in     al,0x60
  41a326:	inc    ecx
  41a327:	inc    esi
  41a328:	es jae 0x41a35d
  41a32b:	push   0x400d369
  41a330:	push   ebp
  41a331:	jae    0x41a34e
  41a333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a334:	add    eax,0x8db02c9a
  41a339:	mov    WORD PTR [ecx],?
  41a33b:	(bad)  
  41a33c:	stc    
  41a33d:	into   
  41a33e:	ins    DWORD PTR es:[edi],dx
  41a33f:	test   eax,0xa6f8c1a5
  41a344:	nop
  41a345:	or     dl,BYTE PTR [ecx]
  41a347:	test   eax,0xe6759265
  41a34c:	pop    edx
  41a34d:	imul   edi,eax,0xa4024a1
  41a353:	out    0xdb,al
  41a355:	jae    0x41a300
  41a357:	mov    bh,0x7f
  41a359:	inc    edi
  41a35a:	or     DWORD PTR [ecx-0x4b],ecx
  41a35d:	jae    0x41a2e0
  41a35f:	imul   ecx,ebp,0x53
  41a362:	addr16 aad 0x18
  41a365:	(bad)  
  41a366:	cdq    
  41a367:	lfs    eax,FWORD PTR [ebx+0x2a]
  41a36b:	cld    
  41a36c:	(bad)  
  41a36d:	retf   0x2601
  41a370:	mov    ah,BYTE PTR [ecx+0x436a35b]
  41a376:	shr    DWORD PTR [ecx],cl
  41a378:	mov    WORD PTR [eax],?
  41a37a:	xor    DWORD PTR [edx+0x6f],edx
  41a37d:	push   eax
  41a37e:	ds sub eax,DWORD PTR cs:[edx+0x29]
  41a383:	out    0x99,eax
  41a385:	or     al,0xb0
  41a387:	outs   dx,BYTE PTR ds:[esi]
  41a388:	mov    esp,0x243bcdba
  41a38d:	mov    cl,0x30
  41a38f:	(bad)
  41a392:	jb     0x41a367
  41a394:	(bad)  
  41a395:	aas    
  41a396:	add    BYTE PTR [edi+0xb],dh
  41a399:	cwde   
  41a39a:	in     eax,dx
  41a39b:	sbb    bh,BYTE PTR [ecx+0x5fc0a6fb]
  41a3a1:	mov    cl,0x20
  41a3a3:	fiadd  DWORD PTR [esi+0x30]
  41a3a6:	(bad)  
  41a3a7:	sub    esi,ecx
  41a3a9:	mov    eax,0xd969a914
  41a3ae:	xor    al,0xa2
  41a3b0:	mov    BYTE PTR cs:[edi],bl
  41a3b3:	sar    DWORD PTR [edx],cl
  41a3b5:	sub    al,0xc1
  41a3b7:	int    0xb6
  41a3b9:	fcmovnu st,st(6)
  41a3bb:	test   al,0x70
  41a3bd:	mov    edi,0x616da14
  41a3c2:	lods   al,BYTE PTR ds:[esi]
  41a3c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3c4:	xchg   esp,eax
  41a3c5:	(bad)  
  41a3c6:	pop    ebx
  41a3c7:	jmp    0x9242:0xed05888c
  41a3ce:	aas    
  41a3cf:	rcr    DWORD PTR [edx],1
  41a3d1:	in     eax,0xe9
  41a3d3:	test   eax,0xb7a0c466
  41a3d8:	mov    DWORD PTR [edx+0x52],0xdad5762e
  41a3df:	push   edi
  41a3e0:	add    ah,cl
  41a3e2:	out    dx,al
  41a3e3:	cmp    dh,ah
  41a3e5:	pop    ebp
  41a3e6:	adc    ah,ah
  41a3e8:	fild   QWORD PTR [eax]
  41a3ea:	inc    ebx
  41a3eb:	jne    0x41a3c1
  41a3ed:	popa   
  41a3ee:	leave  
  41a3ef:	pop    esi
  41a3f0:	xor    eax,0x704c3687
  41a3f5:	cmc    
  41a3f6:	xchg   esi,eax
  41a3f7:	fist   WORD PTR [edx+0x2a05623b]
  41a3fd:	fistp  WORD PTR [ecx-0x56]
  41a400:	(bad)
  41a403:	aas    
  41a404:	and    cl,cl
  41a406:	push   0x6b7901b2
  41a40b:	fwait
  41a40c:	mov    dl,BYTE PTR [ecx-0x3]
  41a40f:	pop    ds
  41a410:	and    edi,ebx
  41a412:	mov    esp,0xbaed74af
  41a417:	mul    BYTE PTR [esi-0x7f9b985d]
  41a41d:	popa   
  41a41e:	mov    DWORD PTR [ebx-0x72],edx
  41a421:	xor    BYTE PTR [ecx],al
  41a423:	and    DWORD PTR [eax+0x22ee7cdd],ebx
  41a429:	mov    dl,0xd3
  41a42b:	call   0xcc53:0x5b073683
  41a432:	das    
  41a433:	mov    dh,BYTE PTR [ebx]
  41a435:	mov    al,ds:0x7372125b
  41a43a:	or     esi,edx
  41a43c:	sbb    al,bl
  41a43e:	inc    ebp
  41a43f:	out    dx,al
  41a440:	aaa    
  41a441:	pop    eax
  41a442:	retf   
  41a443:	popf   
  41a444:	xchg   edi,eax
  41a445:	retf   0x53b4
  41a448:	sbb    DWORD PTR [ecx+0x16],esp
  41a44b:	test   eax,0x49b15d7d
  41a450:	(bad)  
  41a451:	test   BYTE PTR [edx-0x3296e97b],al
  41a457:	mov    al,ds:0x143deca5
  41a45c:	(bad)  
  41a45d:	dec    edi
  41a45e:	add    al,0xf6
  41a460:	sahf   
  41a461:	fwait
  41a462:	xchg   DWORD PTR [esi+0x4d],ecx
  41a465:	jmp    0x41a402
  41a467:	push   ss
  41a468:	into   
  41a469:	retf   0x2181
  41a46c:	adc    eax,DWORD PTR [ebp-0x85f36d2]
  41a472:	or     ebp,DWORD PTR [ecx+0x5639bdc6]
  41a478:	test   BYTE PTR [edi],0x35
  41a47b:	xchg   esi,eax
  41a47c:	jo     0x41a494
  41a47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a47f:	inc    edx
  41a480:	gs repz push ds
  41a483:	shl    BYTE PTR es:[eax+0x64f77b1c],1
  41a48a:	test   BYTE PTR [eax+0x19],0xec
  41a48e:	jbe    0x41a432
  41a490:	cld    
  41a491:	or     al,0xa3
  41a493:	seta   dl
  41a496:	(bad)  
  41a497:	shr    BYTE PTR [edx],1
  41a499:	push   0xffffffdd
  41a49b:	dec    esi
  41a49c:	das    
  41a49d:	jle    0x41a51b
  41a49f:	(bad)  
  41a4a0:	mov    dh,0x80
  41a4a2:	lahf   
  41a4a3:	repz xchg ebp,eax
  41a4a5:	sahf   
  41a4a6:	mov    al,ds:0x6f16c024
  41a4ab:	xchg   ebx,eax
  41a4ac:	int3   
  41a4ad:	sub    cl,dh
  41a4af:	mov    bh,0x44
  41a4b1:	jmp    DWORD PTR [edi]
  41a4b3:	stos   BYTE PTR es:[edi],al
  41a4b4:	jo     0x41a489
  41a4b6:	jne    0x41a4d2
  41a4b8:	xchg   BYTE PTR [esp+esi*2],al
  41a4bb:	pextrw ebp,(bad),0xc5
  41a4bd:	sub    DWORD PTR [ecx-0x3c],ebp
  41a4c0:	popa   
  41a4c1:	mov    WORD PTR [edi],ds
  41a4c3:	cmp    ecx,DWORD PTR [eax+0x7c6e58f0]
  41a4c9:	add    esp,edi
  41a4cb:	(bad)  
  41a4cc:	cmp    DWORD PTR [ebx+0x2ec4ccce],ecx
  41a4d2:	and    al,ch
  41a4d4:	add    al,0xbe
  41a4d6:	mov    bh,0x4b
  41a4d8:	mov    ch,0x8f
  41a4da:	add    BYTE PTR [esi-0x37],0xb4
  41a4de:	xor    BYTE PTR [edi],dh
  41a4e0:	push   cs
  41a4e1:	push   ds
  41a4e2:	mov    ebp,DWORD PTR [ecx+ebx*4+0x5be41db5]
  41a4e9:	jle    0x41a47a
  41a4eb:	je     0x41a4fe
  41a4ed:	cmp    eax,0xf3eb10c0
  41a4f2:	dec    esp
  41a4f3:	pop    edx
  41a4f4:	add    DWORD PTR [ebx-0x79],eax
  41a4f7:	and    BYTE PTR [edx+ebp*4-0x6ec1d09c],cl
  41a4fe:	jne    0x41a4b6
  41a500:	(bad)  
  41a501:	fwait
  41a502:	adc    eax,0xef91b494
  41a507:	push   ebx
  41a508:	xchg   DWORD PTR [ecx-0x60c2d4d1],eax
  41a50e:	int    0x39
  41a510:	(bad)  [ecx-0x96cb818]
  41a516:	fcomp  DWORD PTR [edx]
  41a518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a519:	loop   0x41a4e7
  41a51b:	(bad)  
  41a51c:	fdiv   DWORD PTR [edx+0x1efe16cb]
  41a522:	mov    bl,0x6c
  41a524:	cmp    ebp,DWORD PTR [ebp+0x2653bf25]
  41a52a:	jg     0x41a53c
  41a52c:	push   ebx
  41a52d:	mov    bh,0x8a
  41a52f:	dec    eax
  41a531:	in     al,dx
  41a532:	sub    eax,0x53597c59
  41a537:	fs dec edx
  41a539:	(bad)  
  41a53a:	xor    BYTE PTR [esi+0x74],al
  41a53d:	test   DWORD PTR [ecx-0x60],ebx
  41a540:	push   cs
  41a541:	ins    DWORD PTR es:[edi],dx
  41a542:	sub    eax,DWORD PTR [edx+0x6314e00e]
  41a548:	xor    esp,DWORD PTR [edi]
  41a54a:	daa    
  41a54b:	sahf   
  41a54c:	(bad)  
  41a54d:	mov    ah,0x31
  41a54f:	mov    ebx,0x8e5c1679
  41a554:	lods   al,BYTE PTR ds:[esi]
  41a555:	sbb    esp,edi
  41a557:	enter  0x6265,0x12
  41a55b:	(bad)  
  41a55c:	pop    ecx
  41a55d:	jmp    0x41a5a7
  41a55f:	cmp    eax,0x6d1149b5
  41a564:	jecxz  0x41a4f4
  41a566:	xchg   ebx,eax
  41a567:	int3   
  41a568:	xchg   BYTE PTR [esi+ecx*1],dl
  41a56b:	jl     0x41a5eb
  41a56d:	ss inc edi
  41a56f:	pop    ds
  41a570:	adc    BYTE PTR [edx],ch
  41a572:	ja     0x41a500
  41a574:	mul    DWORD PTR [edx-0x699a4750]
  41a57a:	sub    DWORD PTR ss:[eax+0x48],edi
  41a57e:	es or  esi,esp
  41a581:	(bad)  
  41a583:	jbe    0x41a5a5
  41a585:	mov    ah,0x86
  41a587:	fstp   QWORD PTR [ebx+ebx*1-0x14]
  41a58b:	xchg   esp,eax
  41a58c:	retf   0x4c7d
  41a58f:	rcr    al,cl
  41a591:	mov    al,0x33
  41a593:	jle    0x41a53d
  41a595:	cli    
  41a596:	std    
  41a597:	(bad)  
  41a598:	nop
  41a599:	(bad)  
  41a59a:	mov    ch,0xac
  41a59c:	(bad)  
  41a59d:	mov    edi,0xca3bdd52
  41a5a2:	mov    esp,0xf3c3ed5e
  41a5a7:	mov    cl,0x8c
  41a5a9:	push   esi
  41a5aa:	pop    esp
  41a5ab:	stos   BYTE PTR es:[edi],al
  41a5ac:	retf   0x36d2
  41a5af:	jl     0x41a574
  41a5b1:	push   0xbe6bc52b
  41a5b6:	xchg   DWORD PTR [edi+0x2bcb87],eax
  41a5bc:	inc    ecx
  41a5bd:	not    BYTE PTR [edi-0x14]
  41a5c0:	xor    al,0x91
  41a5c2:	outs   dx,DWORD PTR ds:[esi]
  41a5c3:	xchg   al,bl
  41a5c5:	or     ebp,DWORD PTR [esi+0x1c]
  41a5c8:	rol    edi,cl
  41a5ca:	lock in al,dx
  41a5cc:	jl     0x41a61f
  41a5ce:	xchg   BYTE PTR cs:[ecx-0x4ca50fc1],ch
  41a5d5:	lods   eax,DWORD PTR ds:[esi]
  41a5d6:	push   edi
  41a5d7:	and    DWORD PTR [edi+0x68c5be25],ebx
  41a5dd:	ret    0xe969
  41a5e0:	jecxz  0x41a56f
  41a5e2:	jecxz  0x41a5a0
  41a5e4:	loopne 0x41a570
  41a5e6:	push   eax
  41a5e7:	adc    al,0x80
  41a5e9:	out    0xf,al
  41a5eb:	aas    
  41a5ec:	fisub  DWORD PTR [edi+0x10]
  41a5ef:	push   esi
  41a5f0:	push   ecx
  41a5f1:	arpl   di,ax
  41a5f3:	mov    ebp,0x9bdf54cd
  41a5f8:	sbb    ch,BYTE PTR [ecx+edx*2+0x1300c904]
  41a5ff:	xchg   BYTE PTR [ebp+0x66],dh
  41a602:	push   edi
  41a603:	xor    esi,DWORD PTR [esi-0x52c168be]
  41a609:	pop    ss
  41a60a:	jl     0x41a5b3
  41a60c:	sbb    al,BYTE PTR [esi+0x758ed561]
  41a612:	stos   BYTE PTR es:[edi],al
  41a613:	pop    edi
  41a614:	cmp    ecx,DWORD PTR [esi-0x56]
  41a617:	push   cs
  41a618:	aam    0xbd
  41a61a:	and    eax,0xd3df573
  41a61f:	stos   BYTE PTR es:[edi],al
  41a620:	jge    0x41a5ab
  41a622:	or     dl,BYTE PTR [ecx+0x2a8cb843]
  41a628:	les    esi,FWORD PTR [ecx+0x40]
  41a62b:	call   0x7ced:0x573b6e7d
  41a632:	arpl   bx,si
  41a634:	pop    ds
  41a635:	cld    
  41a636:	xchg   ecx,eax
  41a637:	sub    esi,DWORD PTR [esi-0x6c]
  41a63a:	inc    esp
  41a63b:	xchg   ecx,eax
  41a63c:	icebp  
  41a63d:	push   ss
  41a63e:	sahf   
  41a63f:	std    
  41a640:	pop    ecx
  41a641:	xchg   edi,eax
  41a642:	adc    DWORD PTR [esi-0x5a],esi
  41a645:	mov    fs,WORD PTR [ecx-0x30af2391]
  41a64b:	sbb    eax,0xaf388d6
  41a650:	mov    eax,ds:0x6b124299
  41a655:	adc    eax,0x76c8e9e0
  41a65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a65b:	add    DWORD PTR [esi],0xf61e5c5d
  41a661:	sahf   
  41a662:	cmp    DWORD PTR [eax-0x55ad78a4],esp
  41a668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a669:	jae    0x41a683
  41a66b:	jge    0x41a6de
  41a66d:	pushf  
  41a66e:	mov    bl,BYTE PTR [ebx+0x43]
  41a671:	jmp    0xf0c3c20f
  41a676:	gs jle 0x41a6de
  41a679:	sbb    dh,ah
  41a67b:	nop
  41a67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a67d:	popa   
  41a67e:	and    ch,BYTE PTR [edi+0x2a16e786]
  41a684:	push   esi
  41a685:	xchg   ecx,eax
  41a686:	mov    cl,0x8c
  41a688:	lea    ebp,[edi]
  41a68a:	push   esi
  41a68b:	mov    edx,0x4c9c971b
  41a690:	aaa    
  41a691:	imul   ebx,DWORD PTR [edx+0x4e069438],0x1d
  41a698:	mov    edi,0x1392226e
  41a69d:	inc    ecx
  41a69e:	inc    ecx
  41a69f:	mov    al,ds:0x92282815
  41a6a4:	cwde   
  41a6a5:	ds xchg esi,eax
  41a6a7:	jb     0x41a6a5
  41a6a9:	or     edx,DWORD PTR [ebp-0x253bff8]
  41a6af:	mov    al,ds:0x4d0af4b7
  41a6b4:	daa    
  41a6b5:	std    
  41a6b6:	pop    es
  41a6b7:	xchg   esp,eax
  41a6b8:	(bad)  
  41a6b9:	xchg   ebp,eax
  41a6ba:	ja     0x41a734
  41a6bc:	call   0x1c50:0xbff6dfda
  41a6c3:	mov    ds:0x1211f8a9,al
  41a6c8:	icebp  
  41a6c9:	xor    al,0x48
  41a6cb:	sub    eax,0x5d8e7ed8
  41a6d0:	push   ecx
  41a6d1:	in     al,0x98
  41a6d3:	clc    
  41a6d4:	sub    al,0x4f
  41a6d6:	xchg   ebp,eax
  41a6d7:	xor    al,0xb4
  41a6d9:	inc    eax
  41a6da:	fild   WORD PTR [ebp+ebx*8+0x1a9ba616]
  41a6e1:	mov    dl,0xa0
  41a6e3:	ja     0x41a755
  41a6e5:	jae    0x41a6f5
  41a6e7:	xchg   ebx,eax
  41a6e8:	mov    eax,0xabc03ce0
  41a6ed:	hlt    
  41a6ee:	pop    eax
  41a6ef:	mov    ebx,0xf93f2928
  41a6f4:	mov    ecx,esi
  41a6f6:	adc    ah,BYTE PTR [ebp-0x2c]
  41a6f9:	je     0x41a76c
  41a6fb:	lods   eax,DWORD PTR es:[esi]
  41a6fd:	inc    ecx
  41a6fe:	push   ebx
  41a6ff:	push   edi
  41a700:	std    
  41a701:	or     BYTE PTR [ebx-0x38],bl
  41a704:	leave  
  41a705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a706:	clc    
  41a707:	test   al,0x57
  41a709:	out    0x22,al
  41a70b:	cwde   
  41a70c:	mov    ds:0xf8d7310f,ax
  41a712:	into   
  41a713:	scas   eax,DWORD PTR es:[edi]
  41a714:	xor    DWORD PTR [ebp+0x35154249],0x81fedb84
  41a71e:	mov    eax,0xa70b9338
  41a723:	sar    DWORD PTR [ecx+0x7335a0b8],0x4b
  41a72a:	dec    ecx
  41a72b:	ja     0x41a76c
  41a72d:	xor    ch,ah
  41a72f:	mov    ah,0xf0
  41a731:	out    dx,al
  41a732:	test   eax,0xc08ee7af
  41a737:	neg    BYTE PTR [edi+0x23]
  41a73a:	sub    BYTE PTR [ecx],0xd0
  41a73d:	push   ss
  41a73e:	pop    ecx
  41a73f:	dec    ebx
  41a740:	lods   eax,DWORD PTR ds:[esi]
  41a741:	jg     0x41a6f8
  41a743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a744:	sub    dl,bh
  41a746:	jmp    0x1115f74a
  41a74b:	mov    ?,WORD PTR [ecx+0x1228080]
  41a751:	push   esp
  41a752:	fs pop es
  41a754:	stos   BYTE PTR es:[edi],al
  41a755:	pop    es
  41a756:	mov    al,0x17
  41a758:	jmp    0xa639:0x256f7920
  41a75f:	inc    ecx
  41a760:	das    
  41a761:	xchg   esi,eax
  41a762:	ds test eax,0x349cbc66
  41a768:	add    BYTE PTR [ecx],bl
  41a76a:	inc    edx
  41a76b:	sar    DWORD PTR [ebx],cl
  41a76d:	and    DWORD PTR [ebp+0x4f],eax
  41a770:	sub    bl,al
  41a772:	imul   edx,DWORD PTR [eax],0xffffffd9
  41a775:	or     eax,0x2ae667ce
  41a77a:	sub    BYTE PTR [ebx],bl
  41a77c:	cmp    ch,dl
  41a77e:	loopne 0x41a78f
  41a780:	xor    dl,BYTE PTR [esi]
  41a782:	mov    bh,0x62
  41a784:	gs cmp al,0x37
  41a787:	pop    esp
  41a788:	(bad)  
  41a789:	mov    fs,WORD PTR [ebx]
  41a78b:	std    
  41a78c:	jmp    0x92de:0x8298d1f6
  41a793:	cwde   
  41a794:	retf   0x6773
  41a797:	sub    ch,dl
  41a799:	pusha  
  41a79a:	add    dl,BYTE PTR [edi+0x19]
  41a79d:	add    ah,BYTE PTR [esp+ebp*4]
  41a7a0:	sar    DWORD PTR [edx-0xd844e0d],1
  41a7a6:	out    dx,al
  41a7a7:	sar    DWORD PTR [ebp+0x7f],0x14
  41a7ab:	std    
  41a7ac:	in     eax,0xc5
  41a7ae:	cwde   
  41a7af:	pop    es
  41a7b0:	test   al,0xe9
  41a7b2:	mov    ecx,0x13043507
  41a7b7:	jmp    0x26d7168d
  41a7bc:	xchg   edi,eax
  41a7bd:	xchg   bl,dh
  41a7bf:	inc    esi
  41a7c0:	das    
  41a7c1:	fild   DWORD PTR [eax]
  41a7c3:	cmp    BYTE PTR [edx+esi*2],bh
  41a7c6:	mov    ebx,esi
  41a7c8:	mov    ch,0x88
  41a7ca:	adc    eax,0xcfbc7c78
  41a7cf:	les    ebx,FWORD PTR [edi+esi*4-0x7358b35f]
  41a7d6:	ret    0x4ce7
  41a7d9:	or     al,0x7c
  41a7db:	add    al,0xa1
  41a7dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7de:	adc    esp,ebp
  41a7e0:	fsub   QWORD PTR [edi]
  41a7e2:	or     BYTE PTR [ecx],ch
  41a7e4:	(bad)  
  41a7e5:	jne    0x41a79e
  41a7e7:	sti    
  41a7e8:	and    esp,DWORD PTR [ecx-0x7f]
  41a7eb:	scas   al,BYTE PTR es:[edi]
  41a7ec:	add    BYTE PTR [ebx+0x70e6c239],0x65
  41a7f3:	(bad)  
  41a7f4:	mov    ds:0x239d45dd,eax
  41a7f9:	loopne 0x41a7d4
  41a7fb:	xor    DWORD PTR [bx],ebx
  41a7fe:	mov    bl,0xb9
  41a800:	in     al,0xca
  41a802:	fistp  QWORD PTR [ecx+0x31fb02b4]
  41a808:	popf   
  41a809:	std    
  41a80a:	gs cld 
  41a80c:	dec    ebx
  41a80d:	pop    esp
  41a80e:	rcl    cl,0x37
  41a811:	mov    ebp,0x62f7cdf2
  41a816:	loopne 0x41a82d
  41a818:	cmp    al,0x62
  41a81a:	and    al,0x70
  41a81c:	xchg   ebx,eax
  41a81d:	scas   al,BYTE PTR es:[edi]
  41a81e:	fwait
  41a81f:	inc    BYTE PTR [esi-0x61]
  41a822:	test   edi,ecx
  41a824:	loope  0x41a7a7
  41a826:	mov    dl,0xc8
  41a828:	xchg   ebp,eax
  41a829:	fistp  WORD PTR [eax+0x45]
  41a82c:	rol    DWORD PTR [edi],0x97
  41a82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a830:	mov    dl,0x73
  41a832:	sub    DWORD PTR [edi-0x4d19eb69],eax
  41a838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a839:	pop    ecx
  41a83a:	and    eax,0x3867e324
  41a83f:	fst    DWORD PTR [ecx+0x61a8bdcb]
  41a845:	cmp    ch,dh
  41a847:	scas   al,BYTE PTR es:[edi]
  41a848:	stos   BYTE PTR es:[edi],al
  41a849:	pop    ss
  41a84a:	or     al,0xd9
  41a84c:	mov    dl,0x72
  41a84e:	jge    0x41a899
  41a850:	sub    DWORD PTR [ecx+0x3ca56d39],eax
  41a856:	dec    ebx
  41a857:	xchg   dl,dh
  41a859:	xor    DWORD PTR [ebp-0x5317e45a],ebp
  41a85f:	xor    DWORD PTR [ebx+0x8],eax
  41a862:	ret    0x6258
  41a865:	dec    ebx
  41a866:	push   esi
  41a867:	add    BYTE PTR [edx+ebx*1-0x42026122],bh
  41a86e:	jne    0x41a89d
  41a870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a871:	jnp    0x41a85a
  41a873:	jmp    0x44c8201b
  41a878:	push   edi
  41a879:	sub    eax,0x9cde23b3
  41a87e:	adc    DWORD PTR [eax],eax
  41a880:	clc    
  41a881:	mov    ds:0x352fbfd3,al
  41a886:	xor    esi,DWORD PTR [ebx]
  41a888:	or     DWORD PTR [esi+0x29],eax
  41a88b:	call   0x2682:0x194e7a88
  41a892:	ja     0x41a8c0
  41a894:	push   edi
  41a895:	gs mov eax,0x216181b4
  41a89b:	mov    dl,0x6e
  41a89d:	xchg   ebp,eax
  41a89e:	xor    BYTE PTR [ebx+0x2ff7c1f4],0x32
  41a8a5:	loopne 0x41a8e7
  41a8a7:	outs   dx,BYTE PTR ds:[esi]
  41a8a8:	or     cl,BYTE PTR [esp+esi*4+0x1d]
  41a8ac:	adc    al,0x37
  41a8ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8af:	cmp    DWORD PTR [eax+edi*8-0x69dcfbe5],ebx
  41a8b6:	sub    al,0xce
  41a8b8:	push   eax
  41a8b9:	push   ecx
  41a8ba:	arpl   sp,bx
  41a8bc:	xor    eax,0xbd05c2ce
  41a8c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c2:	add    al,0x79
  41a8c4:	add    eax,0xe1d7da0b
  41a8c9:	ja     0x41a8fc
  41a8cb:	add    BYTE PTR [eax],bh
  41a8cd:	jnp    0x41a884
  41a8cf:	and    esi,DWORD PTR [eax+0x224c3362]
  41a8d5:	mov    esi,0x7a9542a7
  41a8da:	dec    ecx
  41a8db:	out    0x33,al
  41a8dd:	push   0xffffffa9
  41a8df:	add    dl,dh
  41a8e1:	(bad)  
  41a8e2:	cld    
  41a8e3:	sbb    al,0xa
  41a8e5:	ss mov cl,0x5a
  41a8e8:	int3   
  41a8e9:	xchg   edx,eax
  41a8ea:	xor    BYTE PTR [esi+0x38],ah
  41a8ed:	dec    ecx
  41a8ee:	icebp  
  41a8ef:	cmp    ch,BYTE PTR [ecx]
  41a8f1:	adc    eax,0x424bee27
  41a8f6:	adc    al,0x8f
  41a8f8:	ins    BYTE PTR es:[edi],dx
  41a8f9:	adc    BYTE PTR fs:[ecx],cl
  41a8fc:	jnp    0x41a8e5
  41a8fe:	enter  0x7bf4,0x20
  41a902:	jns    0x41a8ab
  41a904:	int    0xa4
  41a906:	les    ebp,FWORD PTR [eax+0x1e]
  41a909:	xchg   edx,eax
  41a90a:	sbb    edi,DWORD PTR [eax+0x11]
  41a90d:	call   0xf5ee26da
  41a912:	mov    esp,0xbd1513a1
  41a917:	pop    eax
  41a918:	jo     0x41a8a7
  41a91a:	test   eax,0xbf849de8
  41a91f:	inc    ebx
  41a920:	arpl   WORD PTR [ebx],bx
  41a922:	adc    al,0xbd
  41a924:	sub    bh,0x2b
  41a927:	cmp    ecx,DWORD PTR [ebp-0x65]
  41a92a:	iret   
  41a92b:	stc    
  41a92c:	popa   
  41a92d:	mov    edi,0x3f492b0a
  41a932:	sbb    eax,edi
  41a934:	jecxz  0x41a9b3
  41a936:	aam    0x6
  41a938:	jne    0x41a8d1
  41a93a:	shl    BYTE PTR cs:[eax-0x2d18975d],1
  41a941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a942:	push   esi
  41a943:	fcom   QWORD PTR [ecx+0x439f4567]
  41a949:	dec    ecx
  41a94a:	sbb    al,0xe9
  41a94c:	arpl   si,bp
  41a94e:	mov    ds:0x89a770c9,al
  41a953:	ds cmp eax,0xa1aacbde
  41a959:	mov    WORD PTR ds:0x24e33d26,?
  41a95f:	ret    0xdd9e
  41a962:	xchg   esp,eax
  41a963:	and    eax,0x70b66c95
  41a968:	and    al,0x4f
  41a96a:	imul   ebp,DWORD PTR [eax-0xb0c667b],0xa00d57da
  41a974:	retf   0xf9ca
  41a977:	xchg   edi,eax
  41a978:	iret   
  41a979:	ret    
  41a97a:	pop    esp
  41a97b:	inc    edx
  41a97c:	push   edi
  41a97d:	daa    
  41a97e:	fist   WORD PTR [ebp+0x5f]
  41a981:	jmp    0x90e9d394
  41a986:	push   edi
  41a987:	pop    ebp
  41a988:	add    DWORD PTR [esi+0x4b],0xe
  41a98c:	mov    ebp,0x6a5dca9
  41a991:	adc    esp,esp
  41a993:	fcmovnb st,st(6)
  41a995:	mov    dh,0x1
  41a997:	mov    esp,0xee5ed1c0
  41a99c:	inc    ebx
  41a99d:	or     bl,BYTE PTR [ebx]
  41a99f:	shl    bl,0x98
  41a9a2:	inc    eax
  41a9a3:	je     0x41a97a
  41a9a5:	std    
  41a9a6:	mov    ebp,0x1dd823d
  41a9ab:	gs (bad) 
  41a9ad:	xlat   BYTE PTR ds:[ebx]
  41a9ae:	int3   
  41a9af:	mov    dl,0x3a
  41a9b1:	mov    al,0x8b
  41a9b3:	jmp    0x41a952
  41a9b5:	mov    BYTE PTR [esi],ch
  41a9b7:	arpl   WORD PTR [edx+0x78482dc],bx
  41a9bd:	push   ss
  41a9be:	add    al,0xb4
  41a9c0:	and    eax,0xf641786d
  41a9c5:	dec    ecx
  41a9c6:	inc    ebp
  41a9c7:	shr    cl,1
  41a9c9:	ins    BYTE PTR es:[edi],dx
  41a9ca:	clc    
  41a9cb:	add    DWORD PTR [esi+0x5371f615],0x1f
  41a9d2:	push   eax
  41a9d3:	(bad)  
  41a9d4:	xchg   esp,eax
  41a9d5:	cmp    al,0xaa
  41a9d7:	adc    bl,BYTE PTR [ebx+ecx*1-0x13]
  41a9db:	or     ebp,esi
  41a9dd:	pushf  
  41a9de:	das    
  41a9df:	add    esi,esi
  41a9e1:	outs   dx,DWORD PTR ds:[esi]
  41a9e2:	add    eax,0xaae11458
  41a9e7:	inc    edi
  41a9e8:	dec    eax
  41a9e9:	scas   al,BYTE PTR es:[edi]
  41a9ea:	lea    esp,[esi]
  41a9ec:	fnsave [ebx]
  41a9ee:	cli    
  41a9ef:	mov    esi,0x541c170e
  41a9f4:	jp     0x41aa36
  41a9f6:	(bad)  
  41a9f7:	std    
  41a9f8:	push   edx
  41a9f9:	pop    eax
  41a9fa:	and    al,0x4c
  41a9fc:	xchg   edi,eax
  41a9fd:	inc    ecx
  41a9fe:	push   cs
  41a9ff:	mov    fs:0xd1b0a3dc,al
  41aa05:	sar    DWORD PTR [ebx],0x98
  41aa08:	lea    esp,[edx+0x1390772a]
  41aa0e:	sbb    ch,bh
  41aa10:	ins    DWORD PTR es:[edi],dx
  41aa11:	dec    ecx
  41aa12:	jae    0x41aa89
  41aa14:	cmp    BYTE PTR gs:[edx-0x6caa7b6b],ah
  41aa1b:	dec    BYTE PTR [ebx+0x4a]
  41aa1e:	pop    esp
  41aa1f:	sbb    DWORD PTR [ebp-0xbf7974d],ebp
  41aa25:	mov    dh,0xaf
  41aa27:	mov    bl,0x97
  41aa29:	pop    es
  41aa2a:	add    al,0x29
  41aa2c:	jnp    0x41a9b7
  41aa2e:	ins    BYTE PTR es:[edi],dx
  41aa2f:	xchg   ecx,eax
  41aa30:	call   ebx
  41aa32:	pop    edi
  41aa33:	adc    edx,DWORD PTR [ebp+0x6]
  41aa36:	mov    ebx,0x7cfa38ee
  41aa3b:	sub    cl,BYTE PTR [edx+eax*1]
  41aa3e:	jl     0x41aa0d
  41aa40:	xchg   edi,eax
  41aa41:	push   esi
  41aa42:	jle    0x41a9cf
  41aa44:	cmp    ebx,DWORD PTR [ebx-0x35433d56]
  41aa4a:	cmp    BYTE PTR [ebx],dh
  41aa4c:	sahf   
  41aa4d:	sbb    al,ch
  41aa4f:	mov    fs,esi
  41aa51:	sub    DWORD PTR [edx+0x5e5faa20],ecx
  41aa57:	shld   DWORD PTR [ebp-0x6777993f],ecx,cl
  41aa5e:	jle    0x41aaac
  41aa60:	push   ebx
  41aa61:	lods   eax,DWORD PTR ds:[esi]
  41aa62:	stos   BYTE PTR es:[edi],al
  41aa63:	adc    ah,BYTE PTR [ecx+0xd8cdd5c]
  41aa69:	dec    ebp
  41aa6a:	lahf   
  41aa6b:	jg     0x41a9ef
  41aa6d:	cs mov ebp,0xef5fed2e
  41aa73:	sbb    al,0x76
  41aa75:	es int3 
  41aa77:	ss cwde 
  41aa79:	mov    dh,0xd8
  41aa7b:	mov    dh,0xe
  41aa7d:	neg    bh
  41aa7f:	and    eax,0xb094bec
  41aa84:	inc    esp
  41aa85:	enter  0x82cf,0xcc
  41aa89:	rol    BYTE PTR ds:[esi],1
  41aa8c:	call   0x7772e624
  41aa91:	xor    BYTE PTR [edi+0x3ba97c9d],ah
  41aa97:	mov    bh,0xe5
  41aa99:	(bad)  
  41aa9a:	(bad)  
  41aa9b:	sub    eax,0xd6d40e5d
  41aaa0:	fdiv   QWORD PTR [edx-0x33]
  41aaa3:	mov    esi,0x83202273
  41aaa8:	retf   0x6acf
  41aaab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaac:	and    esi,DWORD PTR [ebx+0x546395c3]
  41aab2:	dec    ebx
  41aab4:	mov    ah,BYTE PTR [ebx+0x6e]
  41aab7:	(bad)  
  41aab8:	sub    eax,0x88364f16
  41aabd:	mov    esi,eax
  41aabf:	mov    ah,0x31
  41aac1:	setns  BYTE PTR [edx+0x3e]
  41aac5:	(bad)
  41aac8:	scas   eax,DWORD PTR es:[edi]
  41aac9:	loopne 0x41ab0e
  41aacb:	fadd   st(1),st
  41aacd:	and    eax,0x58f8e436
  41aad2:	scas   eax,DWORD PTR es:[edi]
  41aad3:	aam    0x4d
  41aad5:	popf   
  41aad6:	arpl   WORD PTR [ebx],dx
  41aad8:	jmp    0x9d1b:0xf0fff920
  41aadf:	sub    ebp,edx
  41aae1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41aae3:	dec    edx
  41aae4:	pusha  
  41aae5:	pop    esi
  41aae6:	xchg   edi,eax
  41aae7:	dec    edx
  41aae8:	sub    ebp,DWORD PTR [ebx+0xc1f5996]
  41aaee:	(bad)  
  41aaef:	in     eax,0xc8
  41aaf1:	pop    eax
  41aaf2:	and    BYTE PTR [esi],0x83
  41aaf5:	adc    DWORD PTR ds:[eax+0x5d0f67bc],edx
  41aafc:	fidiv  WORD PTR [ebx]
  41aafe:	(bad)  
  41ab00:	lock stos DWORD PTR es:[edi],eax
  41ab02:	repnz push es
  41ab04:	add    DWORD PTR [ecx-0x118e1793],edi
  41ab0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab0b:	inc    eax
  41ab0c:	arpl   WORD PTR ds:0x50fd2cfd,sp
  41ab12:	scas   eax,DWORD PTR es:[edi]
  41ab13:	sub    esi,DWORD PTR [edi-0x78]
  41ab16:	mov    dl,0xef
  41ab18:	clc    
  41ab19:	cli    
  41ab1a:	mov    ecx,0xdc7480cb
  41ab1f:	pop    ebx
  41ab20:	mov    bl,BYTE PTR [ebp-0x33aa16d9]
  41ab26:	repz xchg edx,eax
  41ab28:	scas   eax,DWORD PTR es:[edi]
  41ab29:	add    DWORD PTR [ebx],ebp
  41ab2b:	call   DWORD PTR [eax+ebx*1]
  41ab2e:	shl    ebp,cl
  41ab30:	mov    eax,0xeac62b6b
  41ab35:	pop    ebp
  41ab36:	inc    edi
  41ab37:	int    0x18
  41ab39:	pop    ecx
  41ab3a:	jmp    0x29ea:0x51bfa738
  41ab41:	pop    ss
  41ab42:	xlat   BYTE PTR ds:[ebx]
  41ab43:	xlat   BYTE PTR ds:[ebx]
  41ab44:	or     DWORD PTR [edi],eax
  41ab46:	inc    edx
  41ab47:	das    
  41ab48:	scas   eax,DWORD PTR es:[edi]
  41ab49:	xor    eax,0xf8e1087f
  41ab4e:	mov    ds:0xdeaba32f,eax
  41ab53:	pop    esp
  41ab54:	cmp    dh,BYTE PTR [esp+eiz*4]
  41ab57:	call   0xde67:0xe32c7a71
  41ab5e:	sub    ecx,esp
  41ab60:	imul   ebp,DWORD PTR [ecx-0xd],0xffffff88
  41ab64:	fcom   DWORD PTR [ebx+0x72]
  41ab67:	enter  0xf785,0x1
  41ab6b:	xchg   esp,eax
  41ab6c:	mov    DWORD PTR [ebx+ebx*1-0x36],ebp
  41ab70:	xchg   esi,eax
  41ab71:	and    cl,ch
  41ab73:	mov    ch,0xd5
  41ab75:	xor    cl,BYTE PTR [ebx+edi*4-0x3f903417]
  41ab7c:	jmp    0x41ab1f
  41ab7e:	mov    edi,0xc6b567b3
  41ab83:	iret   
  41ab84:	push   esi
  41ab85:	dec    edi
  41ab86:	retf   
  41ab87:	push   ebx
  41ab88:	stos   DWORD PTR es:[edi],eax
  41ab89:	ds sub bh,cl
  41ab8c:	enter  0x28f7,0x29
  41ab90:	iret   
  41ab91:	add    cl,BYTE PTR [edx-0x3e44ee6c]
  41ab97:	fimul  WORD PTR [eax-0x39]
  41ab9a:	mov    bh,0xc2
  41ab9c:	push   ss
  41ab9d:	scas   al,BYTE PTR es:[edi]
  41ab9e:	mov    ebp,0x2c399293
  41aba3:	addr16 shl bl,0x18
  41aba7:	out    0x43,eax
  41aba9:	loope  0x41ab91
  41abab:	or     DWORD PTR [edx-0x33dfd846],edx
  41abb1:	aad    0xf7
  41abb3:	ror    ebp,cl
  41abb5:	rcr    esi,1
  41abb7:	mov    edi,0x2937130a
  41abbc:	pop    esi
  41abbd:	cwde   
  41abbe:	xchg   BYTE PTR [ebp+0x4b],bl
  41abc1:	scas   al,BYTE PTR es:[edi]
  41abc2:	push   0x836299fa
  41abc7:	cmp    BYTE PTR [eax-0x14],dl
  41abca:	call   0x11e3:0x342c0395
  41abd1:	xchg   esp,eax
  41abd2:	(bad)  
  41abd3:	dec    BYTE PTR [ebp+edi*2+0x4d]
  41abd7:	jb     0x41abdb
  41abd9:	dec    ebp
  41abda:	mov    esp,0x95f44317
  41abdf:	dec    ecx
  41abe0:	outs   dx,BYTE PTR ds:[esi]
  41abe1:	xor    ch,BYTE PTR [ebx+0x51]
  41abe4:	xor    DWORD PTR ds:0x50c2e7b1,eax
  41abea:	add    dl,dl
  41abec:	out    dx,eax
  41abed:	les    ecx,FWORD PTR [ecx+ecx*2-0x70053cda]
  41abf4:	or     al,BYTE PTR [edi+ebx*8-0x30]
  41abf8:	outs   dx,DWORD PTR ds:[esi]
  41abf9:	jl     0x41abf1
  41abfb:	sbb    DWORD PTR [edi-0x4efba830],edi
  41ac01:	out    dx,al
  41ac02:	push   ss
  41ac03:	mov    ebx,0x520914a1
  41ac08:	das    
  41ac09:	cmc    
  41ac0a:	and    esp,DWORD PTR [edi-0x11]
  41ac0d:	loopne 0x41ab9b
  41ac0f:	inc    ax
  41ac11:	(bad)  
  41ac12:	cmpxchg BYTE PTR [eax],bh
  41ac15:	xchg   edx,eax
  41ac16:	jae    0x41abde
  41ac18:	arpl   WORD PTR [eax-0x4],di
  41ac1b:	push   0xfcfd3172
  41ac20:	add    al,0xca
  41ac22:	push   ebp
  41ac23:	mov    fs,WORD PTR [edi]
  41ac25:	cwde   
  41ac26:	adc    ebp,DWORD PTR [ebp+edx*8-0x44]
  41ac2a:	sub    esi,esp
  41ac2c:	sbb    BYTE PTR cs:[ebx+0x35],bl
  41ac30:	or     bl,BYTE PTR [eax+0x2f]
  41ac33:	(bad)  
  41ac34:	fdivr  QWORD PTR [eax+0x1aa8104a]
  41ac3a:	mov    edi,0xf972c4c3
  41ac3f:	call   0x22465e3
  41ac44:	ret    
  41ac45:	sbb    BYTE PTR [ecx+0x736d8d47],dh
  41ac4b:	mov    ebp,0xcca4b506
  41ac50:	jnp    0x41ac79
  41ac52:	fldcw  WORD PTR [eax-0x68]
  41ac55:	popa   
  41ac56:	outs   dx,DWORD PTR ds:[esi]
  41ac57:	clc    
  41ac58:	mov    edx,eax
  41ac5a:	and    bh,BYTE PTR [esi-0x70]
  41ac5d:	stos   DWORD PTR es:[edi],eax
  41ac5e:	sbb    al,0xb1
  41ac60:	stc    
  41ac61:	inc    eax
  41ac62:	cmp    edi,DWORD PTR [esp+esi*2-0xe580dae]
  41ac69:	push   cs
  41ac6a:	push   0xe5720b9c
  41ac6f:	mov    cs,WORD PTR [esp+ebp*2]
  41ac72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac73:	jg     0x41ac07
  41ac75:	or     bl,BYTE PTR ds:0x99bf2597
  41ac7b:	sbb    DWORD PTR [ecx+0x7c1c5588],ebp
  41ac81:	push   ecx
  41ac82:	ret    0x5d97
  41ac85:	xchg   ebp,eax
  41ac86:	cwde   
  41ac87:	push   ebp
  41ac88:	mov    cl,0x52
  41ac8a:	push   esp
  41ac8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac8c:	dec    ebx
  41ac8d:	mov    ebp,0xd703a413
  41ac92:	xchg   DWORD PTR [esp+eiz*2+0x58],eax
  41ac96:	scas   al,BYTE PTR es:[edi]
  41ac97:	pushf  
  41ac98:	jae    0x41acf8
  41ac9a:	and    eax,0xcab1c20b
  41ac9f:	lods   al,BYTE PTR ds:[esi]
  41aca0:	fdiv   QWORD PTR [esi]
  41aca2:	in     eax,0x49
  41aca4:	xchg   BYTE PTR [ebp-0x61],bl
  41aca7:	ficomp WORD PTR [edx+0x4c6adbe7]
  41acad:	sahf   
  41acae:	int3   
  41acaf:	fisub  DWORD PTR [esi-0x31]
  41acb2:	sbb    cl,cl
  41acb4:	imul   ecx,DWORD PTR [esi],0x54
  41acb7:	cmp    edx,DWORD PTR [eax-0x353e027d]
  41acbd:	in     eax,0x5d
  41acbf:	mov    al,0xc8
  41acc1:	and    eax,0xaa55eb36
  41acc6:	cld    
  41acc7:	xor    edx,0xdc222879
  41accd:	pop    edi
  41acce:	js     0x41ad4e
  41acd0:	out    0x7f,al
  41acd2:	sbb    dh,BYTE PTR [bp+di]
  41acd5:	repnz into 
  41acd7:	js     0x41ad55
  41acd9:	sbb    bh,dl
  41acdb:	xor    ebp,ebx
  41acdd:	dec    esi
  41acde:	cmp    eax,0xb5de79af
  41ace3:	mov    esp,0xa05e4529
  41ace8:	xchg   ecx,eax
  41ace9:	sub    al,0xb
  41aceb:	dec    edx
  41acec:	push   0xbdc11698
  41acf1:	fucomp st(3)
  41acf3:	inc    edi
  41acf4:	xlat   BYTE PTR ds:[ebx]
  41acf5:	jp     0x41acb4
  41acf7:	mov    ah,0xbc
  41acf9:	xor    ah,dl
  41acfb:	xchg   ebx,eax
  41acfc:	jae    0x41acee
  41acfe:	retf   0x2d26
  41ad01:	mov    eax,ds:0xb19300f0
  41ad06:	pushf  
  41ad07:	jecxz  0x41ad38
  41ad09:	inc    esi
  41ad0a:	ret    0xf6e5
  41ad0d:	fidiv  DWORD PTR [edx]
  41ad0f:	pop    es
  41ad10:	cmp    ch,0xd3
  41ad13:	cmc    
  41ad14:	push   cs
  41ad15:	aad    0x17
  41ad17:	dec    eax
  41ad18:	shl    BYTE PTR [edi-0xd73c596],0x42
  41ad1f:	sbb    eax,0xa4b37feb
  41ad24:	sbb    BYTE PTR [esp+eiz*8+0x6e],0x5b
  41ad29:	xchg   ebp,eax
  41ad2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad2b:	ins    BYTE PTR es:[edi],dx
  41ad2c:	sbb    edx,DWORD PTR [esi-0x7010e495]
  41ad32:	and    eax,0x49617b9
  41ad37:	mov    al,ds:0x39d43f72
  41ad3c:	mov    edi,0x94de0b5e
  41ad41:	sub    edi,ecx
  41ad43:	out    0x33,eax
  41ad45:	dec    eax
  41ad46:	xchg   edi,eax
  41ad47:	call   FWORD PTR [ecx+0x752f8a9a]
  41ad4d:	sbb    DWORD PTR [edx-0x4e],eax
  41ad50:	(bad)  
  41ad51:	mov    edi,0xed747698
  41ad56:	jecxz  0x41ad9b
  41ad58:	add    eax,0x6d987468
  41ad5d:	jnp    0x41ad62
  41ad5f:	in     al,0x8
  41ad61:	out    0xe2,eax
  41ad63:	bound  ebp,QWORD PTR [ecx-0x7b10863e]
  41ad69:	xchg   esi,eax
  41ad6a:	and    eax,0x2886f88f
  41ad6f:	iret   
  41ad70:	daa    
  41ad71:	stos   BYTE PTR es:[edi],al
  41ad72:	int3   
  41ad73:	sahf   
  41ad74:	push   ds
  41ad75:	into   
  41ad76:	arpl   dx,di
  41ad78:	int    0x34
  41ad7a:	cli    
  41ad7b:	jnp    0x41ad9d
  41ad7d:	xor    ch,BYTE PTR ds:0x61b57312
  41ad83:	mov    dl,0xe2
  41ad85:	dec    esi
  41ad86:	sbb    al,0x23
  41ad88:	std    
  41ad89:	xchg   esi,eax
  41ad8a:	pop    eax
  41ad8b:	in     eax,0x50
  41ad8d:	sbb    al,0x4c
  41ad8f:	ins    DWORD PTR es:[edi],dx
  41ad90:	outs   dx,BYTE PTR es:[esi]
  41ad92:	dec    ebx
  41ad93:	aaa    
  41ad94:	sub    BYTE PTR [esi+0x23],al
  41ad97:	dec    edx
  41ad98:	push   eax
  41ad99:	call   0xd36d051c
  41ad9e:	out    0xcd,eax
  41ada0:	xchg   ebx,eax
  41ada1:	dec    edi
  41ada2:	mov    ?,WORD PTR [esp+ecx*1-0x5b9f7613]
  41ada9:	fidiv  DWORD PTR [eax]
  41adab:	iret   
  41adac:	adc    esp,ebp
  41adae:	cmp    ch,BYTE PTR [ecx]
  41adb0:	inc    ebx
  41adb1:	mov    ebx,0xfc2f5c9e
  41adb6:	hlt    
  41adb7:	outs   dx,BYTE PTR ds:[esi]
  41adb8:	dec    eax
  41adb9:	rcl    DWORD PTR [esi],0x7a
  41adbc:	int    0x6d
  41adbe:	add    dl,dl
  41adc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adc1:	stc    
  41adc2:	repnz ins DWORD PTR es:[edi],dx
  41adc4:	sbb    eax,0xfa7ffb40
  41adc9:	scas   al,BYTE PTR es:[edi]
  41adca:	clc    
  41adcb:	sub    ecx,0x1a9ae683
  41add1:	rol    al,cl
  41add3:	(bad)  
  41add4:	(bad)  
  41add6:	and    al,0x10
  41add8:	loop   0x41adb7
  41adda:	(bad)
  41adde:	xor    al,0x6e
  41ade0:	mov    ds:0xf908c809,eax
  41ade5:	push   esp
  41ade6:	pop    edi
  41ade7:	jecxz  0x41ae61
  41ade9:	out    dx,al
  41adea:	(bad)  
  41adeb:	jmp    0x1d10:0x88f2c45c
  41adf2:	sub    DWORD PTR [esi-0x3e],ebx
  41adf5:	fs push ss
  41adf7:	dec    ecx
  41adf8:	xchg   ecx,eax
  41adf9:	sub    ebp,DWORD PTR [ebx+0x2996c9d1]
  41adff:	ins    BYTE PTR es:[edi],dx
  41ae00:	test   al,0x93
  41ae02:	pop    eax
  41ae03:	test   al,0xd8
  41ae05:	ja     0x41ad88
  41ae07:	in     al,dx
  41ae08:	outs   dx,DWORD PTR ds:[esi]
  41ae09:	loopne 0x41ad91
  41ae0b:	js     0x41adb1
  41ae0d:	bswap  eax
  41ae0f:	sub    DWORD PTR [edx],esp
  41ae11:	push   es
  41ae12:	scas   al,BYTE PTR es:[edi]
  41ae13:	js     0x41adfb
  41ae15:	xchg   eax,edx
  41ae17:	mov    ch,0x52
  41ae19:	arpl   WORD PTR [edx],ax
  41ae1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae1c:	mov    dh,0x89
  41ae1e:	push   esi
  41ae1f:	lods   eax,DWORD PTR ds:[esi]
  41ae20:	mov    edi,0x85fcbf56
  41ae25:	daa    
  41ae26:	outs   dx,DWORD PTR ds:[esi]
  41ae27:	cmp    ebp,eax
  41ae29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae2a:	sbb    esp,DWORD PTR [ecx]
  41ae2c:	sahf   
  41ae2d:	xlat   BYTE PTR ds:[ebx]
  41ae2e:	inc    ebp
  41ae2f:	inc    esp
  41ae30:	inc    eax
  41ae31:	mov    dh,0xf8
  41ae33:	je     0x41ae09
  41ae35:	loope  0x41ae21
  41ae37:	lock lahf 
  41ae39:	cs add al,0x83
  41ae3c:	enter  0xba38,0x9e
  41ae40:	cdq    
  41ae41:	dec    edi
  41ae42:	fyl2xp1 
  41ae44:	test   eax,0x28b40a06
  41ae49:	repnz cmp al,0xde
  41ae4c:	push   0x70
  41ae4e:	xchg   esp,eax
  41ae4f:	fisubr DWORD PTR [ebx+0x4c]
  41ae52:	jge    0x41aece
  41ae54:	xor    BYTE PTR [ecx+0x30],ch
  41ae57:	sub    al,0xb
  41ae59:	stc    
  41ae5a:	adc    ch,BYTE PTR [ecx-0x4c]
  41ae5d:	out    0xc,eax
  41ae5f:	and    ebp,ebp
  41ae61:	popa   
  41ae62:	mov    ss,WORD PTR [edi-0x72a5d7d7]
  41ae68:	xchg   ecx,eax
  41ae69:	xor    bh,al
  41ae6b:	and    cl,BYTE PTR [ebp+0x3bfb5a37]
  41ae71:	sbb    al,0x59
  41ae73:	lods   eax,DWORD PTR ds:[esi]
  41ae74:	mov    ds:0x788c3cd1,eax
  41ae79:	jle    0x41ae6d
  41ae7b:	jns    0x41aea9
  41ae7d:	ret    0x75b8
  41ae80:	jg     0x41aeb2
  41ae82:	(bad)  [esi-0x67]
  41ae85:	push   esp
  41ae86:	lods   al,BYTE PTR ds:[esi]
  41ae87:	mov    bl,0x7c
  41ae89:	dec    ebp
  41ae8a:	and    eax,0x3f14eb46
  41ae8f:	cmp    ch,BYTE PTR [edi+0x3aa7469f]
  41ae95:	inc    ebp
  41ae96:	scas   al,BYTE PTR es:[edi]
  41ae97:	cld    
  41ae98:	ret    
  41ae99:	in     eax,0xa6
  41ae9b:	mov    al,ds:0x3ab8922f
  41aea0:	call   0x71d49fa2
  41aea5:	or     DWORD PTR [ebx+0x9aa231c],eax
  41aeab:	xchg   edi,eax
  41aeac:	rcl    BYTE PTR [edi],0x9d
  41aeaf:	or     DWORD PTR [ebp-0x4d],edi
  41aeb2:	xchg   esp,eax
  41aeb3:	sbb    DWORD PTR [eax],eax
  41aeb5:	pop    esi
  41aeb6:	push   0xffffffe1
  41aeb8:	(bad)  
  41aeb9:	jmp    0x41aea7
  41aebb:	popf   
  41aebc:	mov    ds:0xb4fa486f,al
  41aec1:	scas   al,BYTE PTR es:[edi]
  41aec2:	sar    bh,1
  41aec4:	aas    
  41aec5:	and    BYTE PTR [edi+ebp*2-0x66],0x70
  41aeca:	out    dx,eax
  41aecb:	mov    esi,ebp
  41aecd:	dec    edx
  41aece:	mov    bh,0x1a
  41aed0:	dec    edx
  41aed1:	icebp  
  41aed2:	pop    edi
  41aed3:	sbb    eax,0xb30506fc
  41aed8:	(bad)  
  41aed9:	push   cs
  41aeda:	mov    edi,0x7be05d85
  41aedf:	popa   
  41aee0:	adc    DWORD PTR [ecx-0x7bab2b77],ebx
  41aee6:	sub    ecx,DWORD PTR [edi-0x3247169d]
  41aeec:	nop
  41aeed:	and    BYTE PTR [esi],cl
  41aeef:	or     dl,BYTE PTR [esi+0x54bbe952]
  41aef5:	and    BYTE PTR [ecx+0x60705c23],ch
  41aefb:	and    eax,0x914c64df
  41af00:	stos   BYTE PTR es:[edi],al
  41af01:	xchg   DWORD PTR [ebp+0x330243e6],esi
  41af07:	cmc    
  41af08:	mov    al,ds:0x848b96d7
  41af0d:	lock fsubr DWORD PTR [ecx-0x4e9ceb4c]
  41af14:	pusha  
  41af15:	mov    cl,0xba
  41af17:	adc    esi,DWORD PTR [edx-0x43fd14b]
  41af1d:	jns    0x41af98
  41af1f:	mov    edx,0x4ee484b2
  41af24:	fstp   QWORD PTR [eax]
  41af26:	test   BYTE PTR [edi],al
  41af28:	in     eax,0xb1
  41af2a:	mov    al,ds:0x95d1a4cd
  41af2f:	jo     0x41af54
  41af31:	pop    esi
  41af32:	adc    dh,dh
  41af34:	or     al,0x68
  41af36:	mov    ecx,0x467c7e79
  41af3b:	dec    esp
  41af3c:	mov    dh,0x43
  41af3e:	retf   
  41af3f:	mov    esp,0x17d96d02
  41af44:	add    eax,DWORD PTR [edx+0xe]
  41af47:	pop    ds
  41af48:	xchg   ebp,eax
  41af49:	pop    ss
  41af4a:	pop    esp
  41af4b:	je     0x41afaa
  41af4d:	and    eax,0x60a8c2c
  41af52:	loopne 0x41af4d
  41af54:	imul   ebx,DWORD PTR [ebp-0x6a534458],0xd3fd17db
  41af5e:	mov    ecx,0x8d9cccd7
  41af63:	ret    0x27d0
  41af66:	repz inc ebx
  41af68:	push   cs
  41af69:	xchg   edx,eax
  41af6a:	outs   dx,BYTE PTR ds:[esi]
  41af6b:	mov    ch,0xd
  41af6d:	scas   eax,DWORD PTR es:[edi]
  41af6e:	out    0xcf,eax
  41af70:	sbb    eax,0x6b18847
  41af75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af76:	xchg   esi,eax
  41af77:	nop
  41af78:	fwait
  41af79:	xor    al,0x4e
  41af7b:	lds    edx,FWORD PTR [edx-0x1e7bc6db]
  41af81:	loope  0x41af03
  41af83:	mov    ah,0xf6
  41af85:	pushf  
  41af86:	jle    0x41af46
  41af88:	cmp    al,0x2
  41af8a:	xchg   DWORD PTR cs:[esi-0x1b],edi
  41af8e:	and    al,0xff
  41af90:	mov    eax,0x553578d
  41af95:	int3   
  41af96:	ret    0x7726
  41af99:	out    0x95,al
  41af9b:	jns    0x41af89
  41af9d:	call   0xcc99:0x82f2247a
  41afa4:	in     eax,0xde
  41afa6:	loopne 0x41afa7
  41afa8:	xchg   edx,eax
  41afa9:	rol    BYTE PTR [ecx-0x333832f8],1
  41afaf:	dec    edi
  41afb0:	adc    edi,esp
  41afb2:	jmp    0x41afdc
  41afb4:	loope  0x41af73
  41afb6:	mov    ds,WORD PTR [ebx-0x76457fff]
  41afbc:	bnd jmp 0x936f6e2e
  41afc2:	dec    ebx
  41afc3:	in     eax,dx
  41afc4:	and    ebx,ebx
  41afc6:	jne    0x41b017
  41afc8:	popa   
  41afc9:	rcl    DWORD PTR [esi-0x62d4bdf],0x9c
  41afd0:	sbb    ch,cl
  41afd2:	arpl   WORD PTR [edi+0x1a],ax
  41afd5:	fwait
  41afd6:	mov    bh,0x7f
  41afd8:	gs jmp 0x41affd
  41afdb:	push   cs
  41afdc:	dec    ebx
  41afdd:	sub    ecx,edi
  41afdf:	and    DWORD PTR [ebx],edi
  41afe1:	mov    dl,dl
  41afe3:	cli    
  41afe4:	loope  0x41afd8
  41afe6:	xor    ecx,DWORD PTR [ebp+0x2b7a887c]
  41afec:	mov    esp,0x56551e0f
  41aff1:	xor    ebx,DWORD PTR [ecx+0x14c16541]
  41aff7:	push   esp
  41aff8:	jp     0x41b002
  41affa:	leave  
  41affb:	fstp   QWORD PTR [ebx-0x69204a8f]
  41b001:	hlt    
  41b002:	pop    ebx
  41b003:	add    ebp,0x53
  41b006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b007:	sbb    al,0x6f
  41b009:	jne    0x41afdc
  41b00b:	xchg   ecx,eax
  41b00c:	and    ch,ah
  41b00e:	inc    esi
  41b00f:	sahf   
  41b010:	in     eax,dx
  41b011:	inc    ecx
  41b012:	jle    0x41b06c
  41b014:	(bad)  
  41b015:	lea    ebp,[edi]
  41b017:	cmp    BYTE PTR [edi+0x6b841436],bl
  41b01d:	retf   0xa798
  41b020:	dec    ebp
  41b021:	dec    ebx
  41b022:	call   0xc918:0x238a1c38
  41b029:	test   al,0xa
  41b02b:	jmp    0x41afea
  41b02d:	xchg   ebx,eax
  41b02e:	and    esp,ebx
  41b030:	cmp    BYTE PTR [eax-0x79a93a11],ch
  41b036:	fiadd  DWORD PTR [edx]
  41b038:	aas    
  41b039:	or     ah,BYTE PTR [eax+0x6f]
  41b03c:	cmp    DWORD PTR [ebp+0x2d],ecx
  41b03f:	sub    BYTE PTR [edi+0x58],0x89
  41b043:	loopne 0x41b022
  41b045:	xchg   ecx,eax
  41b046:	push   ecx
  41b047:	or     ecx,ebx
  41b049:	mov    eax,0x66415b8c
  41b04e:	popf   
  41b04f:	retf   0x5aa5
  41b052:	imul   esi,ebp,0x9813954a
  41b058:	sbb    BYTE PTR [edi-0x29],dh
  41b05b:	add    cl,BYTE PTR [eax-0x40]
  41b05e:	jmp    0x9aaa:0xf9e136df
  41b065:	adc    al,0x3d
  41b067:	push   edi
  41b068:	sub    BYTE PTR [eax],ch
  41b06a:	or     al,0x14
  41b06c:	cmc    
  41b06d:	pop    es
  41b06e:	(bad)  
  41b070:	imul   eax,DWORD PTR [edx+0x79],0x70587043
  41b077:	jnp    0x41b079
  41b079:	(bad)  
  41b07a:	pop    ebp
  41b07b:	dec    edi
  41b07c:	dec    ecx
  41b07d:	inc    edx
  41b07e:	fs dec ebx
  41b080:	xchg   ebp,esi
  41b082:	aad    0xca
  41b084:	sbb    BYTE PTR [esi],al
  41b086:	scas   al,BYTE PTR es:[edi]
  41b087:	mov    dl,0x78
  41b089:	stos   BYTE PTR es:[edi],al
  41b08a:	cmp    bh,BYTE PTR [ebp+0x38d5ae98]
  41b090:	jmp    0x41b0ec
  41b092:	adc    BYTE PTR [edx-0x7b],dh
  41b095:	fimul  DWORD PTR [ecx-0x65e54cb5]
  41b09b:	pop    ds
  41b09c:	mov    esi,0x3458e8af
  41b0a1:	mul    BYTE PTR [ebp+0x46]
  41b0a4:	pushf  
  41b0a5:	nop
  41b0a6:	jp     0x41b123
  41b0a8:	mul    BYTE PTR [edx+0x1a1a9695]
  41b0ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0af:	stos   BYTE PTR es:[edi],al
  41b0b0:	test   BYTE PTR [edx-0x3d8a2620],cl
  41b0b6:	or     BYTE PTR [edx],bl
  41b0b8:	into   
  41b0b9:	iret   
  41b0ba:	retf   0xe361
  41b0bd:	xchg   esi,eax
  41b0be:	mov    ds:0x11f67903,eax
  41b0c3:	or     bl,dl
  41b0c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0c6:	xor    ch,ah
  41b0c8:	rcr    BYTE PTR [ebx-0x21],1
  41b0cb:	cdq    
  41b0cc:	jae    0x41b080
  41b0ce:	push   eax
  41b0cf:	jmp    0xff3fad71
  41b0d4:	outs   dx,DWORD PTR ds:[esi]
  41b0d5:	and    DWORD PTR [esi],edi
  41b0d7:	sbb    ch,0xe
  41b0da:	outs   dx,BYTE PTR ds:[esi]
  41b0db:	test   eax,ebp
  41b0dd:	shl    edx,0x92
  41b0e0:	retf   0x3406
  41b0e3:	mov    DWORD PTR [esi],ecx
  41b0e5:	les    ebx,FWORD PTR [eax+esi*1]
  41b0e8:	pop    es
  41b0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ea:	arpl   dx,si
  41b0ec:	xchg   esp,eax
  41b0ed:	in     al,0x78
  41b0ef:	aad    0x7
  41b0f1:	mov    edx,DWORD PTR [ebx-0x75]
  41b0f4:	stc    
  41b0f5:	xchg   ebp,eax
  41b0f6:	in     eax,0x2d
  41b0f8:	js     0x41b0d7
  41b0fa:	sub    BYTE PTR [eax+0x3128e1c8],dl
  41b100:	psrlw  mm5,QWORD PTR [esp+esi*2+0x6f]
  41b105:	push   cs
  41b106:	and    al,0xa2
  41b108:	sub    dl,BYTE PTR [edi+0x2f]
  41b10b:	mov    eax,ds:0x11b24285
  41b110:	pop    esp
  41b111:	jp     0x41b0e8
  41b113:	hlt    
  41b114:	lods   al,BYTE PTR ds:[esi]
  41b115:	arpl   WORD PTR [ebx-0x36],cx
  41b118:	aam    0xd7
  41b11a:	pop    eax
  41b11b:	outs   dx,DWORD PTR ds:[esi]
  41b11c:	stc    
  41b11d:	xor    al,BYTE PTR [ecx+0x442cfb04]
  41b123:	xor    ch,BYTE PTR [esi-0x41491783]
  41b129:	data16 or BYTE PTR [ebp-0x58],0xe8
  41b12e:	stc    
  41b12f:	xchg   dh,bh
  41b131:	dec    edi
  41b132:	and    al,0x20
  41b134:	inc    esp
  41b135:	mov    ds,WORD PTR ds:0xe10ef981
  41b13c:	xchg   eax,eax
  41b13e:	add    al,BYTE PTR [eax]
  41b140:	jmp    0x6dc8:0xa7282b1d
  41b147:	ror    edi,1
  41b149:	mov    ds:0x901e7fd8,eax
  41b14e:	lock test BYTE PTR [esi+0xb],0x8f
  41b153:	ins    BYTE PTR es:[edi],dx
  41b154:	hlt    
  41b155:	mov    al,bh
  41b157:	hlt    
  41b158:	sar    BYTE PTR [ebx+0x51],cl
  41b15b:	inc    edi
  41b15c:	fidiv  WORD PTR [eax-0x66e23399]
  41b162:	scas   eax,DWORD PTR es:[edi]
  41b163:	(bad)  
  41b164:	pusha  
  41b165:	pusha  
  41b166:	and    al,0x1f
  41b168:	in     eax,dx
  41b169:	mov    esi,0x21336fcc
  41b16e:	lds    edx,FWORD PTR [eax+0x47]
  41b171:	push   edx
  41b172:	mov    ds:0xdee44888,eax
  41b177:	mov    esi,0xd5b60191
  41b17c:	inc    ecx
  41b17d:	shl    DWORD PTR [edx+eiz*8+0x71],0x76
  41b182:	and    DWORD PTR [esp+esi*2+0x2b97476d],ebx
  41b189:	pop    ebx
  41b18a:	or     dh,BYTE PTR [ebp+0x619d679d]
  41b190:	mov    edx,0xf453a6ab
  41b195:	xor    ebx,edi
  41b197:	out    0xb0,al
  41b199:	or     DWORD PTR [esi-0x387a5db4],ebx
  41b19f:	(bad)  
  41b1a0:	mov    bl,BYTE PTR [ecx]
  41b1a2:	ret    
  41b1a3:	mov    WORD PTR [esi+0x5a0ee87f],?
  41b1a9:	mov    ss,WORD PTR [edi+ebx*1]
  41b1ac:	test   al,0x30
  41b1ae:	fistp  WORD PTR [ebp+0x49]
  41b1b1:	sar    DWORD PTR [esi+0x5d958c1],0x27
  41b1b8:	mov    dl,0x33
  41b1ba:	out    dx,al
  41b1bb:	rcr    DWORD PTR [edx],cl
  41b1bd:	jle    0x41b1af
  41b1bf:	iret   
  41b1c0:	dec    edi
  41b1c1:	ret    
  41b1c2:	adc    bl,BYTE PTR [ebp+0x479876d2]
  41b1c8:	jle    0x41b1bd
  41b1ca:	cdq    
  41b1cb:	dec    ebp
  41b1cc:	aas    
  41b1cd:	ins    BYTE PTR es:[edi],dx
  41b1ce:	fcmove st,st(6)
  41b1d0:	push   0xffffffc7
  41b1d2:	daa    
  41b1d3:	rol    BYTE PTR [esi+0x67],cl
  41b1d6:	scas   al,BYTE PTR es:[edi]
  41b1d7:	(bad)  
  41b1d8:	ror    DWORD PTR ds:0x7511d230,1
  41b1de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1df:	in     al,0xf
  41b1e1:	je     0x41b1f9
  41b1e3:	pop    esi
  41b1e4:	xchg   esp,eax
  41b1e5:	rcl    bh,1
  41b1e7:	ret    0x4f48
  41b1ea:	xor    ch,BYTE PTR [esi-0x56ce2bf6]
  41b1f0:	cmp    eax,0x8f29f846
  41b1f5:	test   al,0xac
  41b1f7:	inc    DWORD PTR [eax-0x16]
  41b1fa:	push   es
  41b1fb:	xchg   ebp,eax
  41b1fc:	mov    bh,0xa0
  41b1fe:	push   ebx
  41b1ff:	jp     0x41b239
  41b201:	loopne 0x41b225
  41b203:	(bad)  [edx+0x7f]
  41b206:	or     bh,BYTE PTR ds:0xee73fce0
  41b20c:	adc    BYTE PTR [ebx+eiz*1],cl
  41b20f:	pop    ebx
  41b210:	(bad)  
  41b211:	xchg   ebp,eax
  41b212:	sar    DWORD PTR [ebx],cl
  41b214:	mov    esp,0x6e01db97
  41b219:	ins    DWORD PTR es:[edi],dx
  41b21a:	sbb    al,0xac
  41b21c:	cmp    ch,BYTE PTR [ebp-0x4a1d2b6c]
  41b222:	scas   al,BYTE PTR es:[edi]
  41b223:	xor    BYTE PTR [ebp-0x5c],dh
  41b226:	mov    dh,0xdc
  41b228:	lods   eax,DWORD PTR ds:[esi]
  41b229:	adc    eax,0x3ba504b4
  41b22e:	mov    ds:0x7cd31f56,al
  41b233:	imul   esi,DWORD PTR [edi],0x8
  41b236:	xchg   esi,eax
  41b237:	pushf  
  41b238:	pop    ecx
  41b239:	shl    BYTE PTR [ebp-0x7e],1
  41b23c:	sub    esp,eax
  41b23e:	mov    bh,ah
  41b240:	test   BYTE PTR [esi+0x76],ah
  41b243:	mov    eax,ds:0x2ce3f977
  41b248:	push   esp
  41b249:	test   al,0x7d
  41b24b:	adc    BYTE PTR ss:[edi],ch
  41b24e:	lds    eax,FWORD PTR [edx]
  41b250:	mov    ebp,0x7230ec67
  41b255:	sbb    DWORD PTR [ebx+0x22965787],ebp
  41b25b:	xor    dh,dh
  41b25d:	(bad)  
  41b25e:	pop    edi
  41b25f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b260:	(bad)  
  41b261:	xchg   edx,eax
  41b262:	inc    ebp
  41b263:	cmp    cl,BYTE PTR [edx+0x450b5095]
  41b269:	mov    ecx,0x430cae84
  41b26e:	xor    esi,0x25
  41b271:	or     DWORD PTR [eax-0x64],esi
  41b274:	in     al,0xe7
  41b276:	xchg   ebx,eax
  41b277:	sbb    BYTE PTR [ecx+0x5f2b3c3b],bl
  41b27d:	ss test eax,0x72f440fa
  41b283:	cmc    
  41b284:	mov    edi,0xfda0ff24
  41b289:	sbb    WORD PTR [edi],0xff98
  41b28d:	or     DWORD PTR [eax],ebx
  41b28f:	pop    esi
  41b290:	and    dl,BYTE PTR [ebx]
  41b292:	les    ecx,FWORD PTR es:[ecx-0x1537a584]
  41b299:	push   esp
  41b29a:	xor    al,0xe2
  41b29c:	mov    DWORD PTR [edi-0x145fc92d],eax
  41b2a2:	gs dec ebp
  41b2a4:	pop    esp
  41b2a5:	add    edx,eax
  41b2a7:	out    0x51,eax
  41b2a9:	jl     0x41b278
  41b2ab:	loop   0x41b290
  41b2ad:	(bad)  
  41b2ae:	in     eax,dx
  41b2af:	addr16 inc eax
  41b2b1:	jecxz  0x41b331
  41b2b3:	xchg   ecx,eax
  41b2b4:	jno    0x41b2d0
  41b2b6:	fist   DWORD PTR [esi]
  41b2b8:	std    
  41b2b9:	jmp    0x6184:0x4ca22aea
  41b2c0:	adc    ch,ah
  41b2c2:	or     eax,DWORD PTR [esi]
  41b2c4:	(bad)  
  41b2c5:	xor    BYTE PTR [edi],al
  41b2c7:	ret    0x6918
  41b2ca:	mov    edi,0x3b27b1b0
  41b2cf:	adc    eax,0x37c359f9
  41b2d4:	mov    ds:0x676a2368,al
  41b2d9:	xor    ecx,edx
  41b2db:	push   ecx
  41b2dc:	cmp    dl,BYTE PTR [ecx+0x6e2e4499]
  41b2e2:	shr    DWORD PTR [esi+0x270468bf],0x4b
  41b2e9:	popf   
  41b2ea:	(bad)  
  41b2eb:	mov    bl,0x3c
  41b2ed:	mov    al,ds:0x5b1fdfd0
  41b2f2:	nop
  41b2f3:	outs   dx,DWORD PTR ds:[esi]
  41b2f4:	mov    bh,BYTE PTR [ecx]
  41b2f6:	aas    
  41b2f7:	ret    
  41b2f8:	retf   0xeeeb
  41b2fb:	shl    BYTE PTR [ecx+ebp*1+0x7],cl
  41b2ff:	pop    edx
  41b300:	int    0x1e
  41b302:	mov    ebx,0x1502d827
  41b307:	cmp    DWORD PTR [esi],0x7d3ed057
  41b30d:	std    
  41b30e:	sti    
  41b30f:	mov    dh,0xfa
  41b311:	and    bh,BYTE PTR [eax+0x4a]
  41b314:	sti    
  41b315:	out    dx,al
  41b316:	mov    esp,0x2bedb79a
  41b31b:	inc    esi
  41b31c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41b31e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b31f:	out    dx,eax
  41b320:	scas   al,BYTE PTR es:[edi]
  41b321:	push   0xdbb30708
  41b326:	test   eax,0x6c4f402c
  41b32b:	in     al,dx
  41b32c:	lds    esi,FWORD PTR [esi+0x6f]
  41b32f:	xchg   ebx,eax
  41b330:	fmul   QWORD PTR [ecx-0x23]
  41b333:	or     ch,BYTE PTR [eax+0x5b]
  41b336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b337:	mov    ds:0x827515ee,al
  41b33c:	fsub   st,st(3)
  41b33e:	pop    edx
  41b33f:	fbld   TBYTE PTR [edi]
  41b341:	popa   
  41b342:	jle    0x41b34b
  41b344:	test   eax,0xf289b72f
  41b349:	jp     0x41b3b0
  41b34b:	dec    esp
  41b34c:	sub    eax,0xaaafe443
  41b351:	add    BYTE PTR [ebx+ecx*1+0x6ae6344],cl
  41b358:	push   edi
  41b359:	ret    0x1649
  41b35c:	push   ebx
  41b35d:	jno    0x41b3d0
  41b35f:	or     al,0xf6
  41b361:	lds    ecx,FWORD PTR [edx+0x250263bd]
  41b367:	jp     0x41b381
  41b369:	mov    dh,0x39
  41b36b:	ss push ebp
  41b36d:	imul   edx
  41b36f:	and    ecx,DWORD PTR [ebp+0x6554717]
  41b375:	ret    0x3e1d
  41b378:	pop    ds
  41b379:	jbe    0x41b362
  41b37b:	popa   
  41b37c:	or     edi,DWORD PTR [eax+0x2bdb69fe]
  41b382:	xchg   esi,eax
  41b383:	es stos DWORD PTR es:[edi],eax
  41b385:	ret    0xdb62
  41b388:	sub    eax,0x9d5a695b
  41b38d:	and    al,dl
  41b38f:	pop    es
  41b390:	pop    edx
  41b391:	mov    esi,0x5c00d2bc
  41b396:	ror    DWORD PTR ds:0x35a97611,1
  41b39c:	push   0x49e7db3f
  41b3a1:	jo     0x41b399
  41b3a3:	mov    al,0x93
  41b3a5:	mov    esi,ecx
  41b3a7:	dec    edi
  41b3a8:	daa    
  41b3a9:	fmul   QWORD PTR [ebp+esi*1+0x599416af]
  41b3b0:	mov    ebx,0x3d70a714
  41b3b5:	ffree  st(7)
  41b3b7:	sahf   
  41b3b8:	cmp    esi,ebp
  41b3ba:	jbe    0x41b3d8
  41b3bc:	dec    esi
  41b3bd:	adc    eax,0xc8a67337
  41b3c2:	adc    BYTE PTR ds:0x9b9adbe0,ah
  41b3c8:	inc    esp
  41b3c9:	mov    ch,bl
  41b3cb:	cmp    al,ah
  41b3cd:	les    edi,FWORD PTR [edi+0x323fbdf6]
  41b3d3:	pop    ecx
  41b3d4:	pop    ebp
  41b3d5:	lods   al,BYTE PTR ds:[esi]
  41b3d6:	test   al,0x13
  41b3d8:	and    ch,BYTE PTR [esi+0x4b0c9198]
  41b3de:	add    DWORD PTR ds:0x15ed156,eax
  41b3e4:	inc    edx
  41b3e5:	hlt    
  41b3e6:	pop    edi
  41b3e7:	inc    BYTE PTR [eax+0x5743a8ec]
  41b3ed:	aas    
  41b3ee:	cmp    DWORD PTR [edx+0x486739ad],ebp
  41b3f4:	jmp    0x41b3d5
  41b3f6:	push   esp
  41b3f7:	int3   
  41b3f8:	add    dh,BYTE PTR [eax-0x36ad76d3]
  41b3fe:	mov    dh,0xcf
  41b400:	outs   dx,BYTE PTR ds:[esi]
  41b401:	pusha  
  41b402:	inc    ebx
  41b403:	fcmove st,st(6)
  41b405:	int3   
  41b406:	out    dx,al
  41b407:	jns    0x41b43f
  41b409:	iret   
  41b40a:	inc    eax
  41b40b:	mov    bl,0xf3
  41b40d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b40e:	sti    
  41b40f:	xor    eax,0xc44c7226
  41b414:	inc    eax
  41b415:	loop   0x41b3ce
  41b417:	sbb    eax,0x55b2355f
  41b41c:	push   ds
  41b41d:	mov    dh,0x9d
  41b41f:	fld    QWORD PTR [edi-0x4e7cef2b]
  41b425:	cmc    
  41b426:	add    al,0xdc
  41b428:	mov    dh,0x88
  41b42a:	sbb    esi,ecx
  41b42c:	xor    bl,BYTE PTR [edi-0x3b808a80]
  41b432:	and    DWORD PTR [esi],ebp
  41b434:	lock lods al,BYTE PTR ds:[esi]
  41b436:	repz bound edx,QWORD PTR [esi+0x1d]
  41b43a:	inc    ebx
  41b43b:	shr    eax,1
  41b43d:	lods   eax,DWORD PTR ds:[esi]
  41b43e:	adc    al,0xec
  41b440:	ficom  DWORD PTR [ebx-0x285d39a6]
  41b446:	sbb    al,0x3d
  41b448:	ins    BYTE PTR es:[edi],dx
  41b449:	mov    cl,0xb1
  41b44b:	sbb    BYTE PTR [edi],bh
  41b44d:	add    DWORD PTR [eax],eax
  41b44f:	pop    edi
  41b450:	rcl    DWORD PTR [ebp+eax*4-0x28],0xce
  41b455:	push   esp
  41b456:	jg     0x41b467
  41b458:	add    eax,0x32c813fd
  41b45d:	hlt    
  41b45e:	and    esi,DWORD PTR [edi]
  41b460:	xlat   BYTE PTR ds:[ebx]
  41b461:	pop    ebx
  41b462:	or     cl,ch
  41b464:	add    BYTE PTR [edi+0x3d],cl
  41b467:	sbb    bh,BYTE PTR [ecx+ebp*2+0x7f]
  41b46b:	and    dl,BYTE PTR [edx-0x1f]
  41b46e:	pop    ebp
  41b46f:	mov    ebp,?
  41b471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b472:	or     al,0xa6
  41b474:	aas    
  41b475:	xchg   esi,eax
  41b476:	add    eax,0xf9cdd8b4
  41b47b:	hlt    
  41b47c:	jae    0x41b478
  41b47e:	cmp    al,0xbb
  41b481:	cli    
  41b482:	std    
  41b483:	adc    DWORD PTR [eax+0x7ad67632],0x23
  41b48a:	cs mov edi,0x51cce342
  41b490:	cmp    esp,DWORD PTR [esp+ecx*4+0x1a4bb0ef]
  41b497:	jle    0x41b48b
  41b499:	lods   al,BYTE PTR ds:[esi]
  41b49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b49b:	dec    ebp
  41b49c:	pop    edi
  41b49d:	div    DWORD PTR [eax+edi*4]
  41b4a0:	popa   
  41b4a1:	icebp  
  41b4a2:	jnp    0x41b48a
  41b4a4:	add    eax,0x3c8bfd9f
  41b4a9:	push   edx
  41b4aa:	scas   eax,DWORD PTR es:[edi]
  41b4ab:	idiv   dh
  41b4ad:	cs mov edx,0x55367bc8
  41b4b3:	cdq    
  41b4b4:	adc    bl,dl
  41b4b6:	mov    dh,0x76
  41b4b8:	add    al,0xf0
  41b4ba:	jecxz  0x41b448
  41b4bc:	cld    
  41b4bd:	sub    eax,0x479bdcba
  41b4c2:	mov    ebp,fs
  41b4c4:	sub    al,0x2b
  41b4c6:	inc    edx
  41b4c7:	das    
  41b4c8:	mov    esi,0x395384d1
  41b4cd:	jo     0x41b464
  41b4cf:	and    al,0xa1
  41b4d1:	imul   edi,DWORD PTR [edi],0xffffffaf
  41b4d4:	loope  0x41b537
  41b4d6:	pusha  
  41b4d7:	mov    bl,0xc0
  41b4d9:	mov    esi,0xe46f59ec
  41b4de:	sbb    esp,DWORD PTR [edx-0x69]
  41b4e1:	daa    
  41b4e2:	cmp    al,0x99
  41b4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4e5:	sbb    BYTE PTR [esi-0x1d455cd7],0x36
  41b4ec:	jp     0x41b50c
  41b4ee:	imul   edx,DWORD PTR [edi+0x2f],0x54
  41b4f2:	(bad)  [ebx+0x4edf538a]
  41b4f8:	dec    ebp
  41b4f9:	push   ecx
  41b4fa:	push   es
  41b4fb:	dec    esi
  41b4fc:	inc    edx
  41b4fd:	in     eax,0xb7
  41b4ff:	sub    BYTE PTR [ebx-0x6e],dh
  41b502:	xor    DWORD PTR [eax+ecx*4],edi
  41b505:	ja     0x41b51f
  41b507:	or     esi,DWORD PTR [ebp-0x320a44f5]
  41b50d:	jge    0x41b562
  41b50f:	or     al,0xf3
  41b511:	push   ebp
  41b512:	mov    DWORD PTR [ebp-0x48],edx
  41b515:	mov    edx,DWORD PTR [ebp+0x8]
  41b518:	mov    ebx,0xfa5e1530
  41b51d:	sub    ebx,edx
  41b51f:	add    ebx,DWORD PTR [ebp-0x44]
  41b522:	mov    DWORD PTR [ebp-0x44],ebx
  41b525:	mov    edx,DWORD PTR [ebp+0x8]
  41b528:	xor    edx,eax
  41b52a:	add    edx,esi
  41b52c:	jne    0x419130
  41b532:	mov    edx,DWORD PTR [ebp-0x8]
  41b535:	mov    ebx,DWORD PTR [ebp-0xc]
  41b538:	xor    edx,eax
  41b53a:	lea    edx,[edx+ebx*1+0x3272ef]
  41b541:	mov    DWORD PTR [ebp-0xc],edx
  41b544:	mov    edx,DWORD PTR [ebp-0x10]
  41b547:	xor    edx,eax
  41b549:	add    edx,esi
  41b54b:	jne    0x40ffb8
  41b551:	jmp    0x41d9ed
  41b556:	mov    ecx,DWORD PTR [ebp-0x14]
  41b559:	mov    DWORD PTR [ebp+0x8],ecx
  41b55c:	jmp    0x41b5d5
  41b561:	mov    ecx,DWORD PTR [ebp+0x8]
  41b564:	mov    edx,DWORD PTR [ebp-0x8]
  41b567:	xor    ecx,eax
  41b569:	xor    edx,eax
  41b56b:	sub    ecx,edx
  41b56d:	sub    ecx,esi
  41b56f:	xor    ecx,eax
  41b571:	mov    DWORD PTR [ebp+0x8],ecx
  41b574:	mov    ecx,DWORD PTR [ebp+0x8]
  41b577:	mov    edx,DWORD PTR [ebp-0x58]
  41b57a:	add    ecx,0x5708fa
  41b580:	imul   ecx,edx
  41b583:	mov    DWORD PTR [ebp-0x58],ecx
  41b586:	mov    ecx,DWORD PTR [ebp+0x8]
  41b589:	mov    edx,DWORD PTR [ebp-0x54]
  41b58c:	add    ecx,0x64f89c
  41b592:	or     ecx,edx
  41b594:	mov    DWORD PTR [ebp-0x54],ecx
  41b597:	mov    ecx,DWORD PTR [ebp+0x8]
  41b59a:	mov    edx,DWORD PTR [ebp-0x50]
  41b59d:	add    ecx,0x242ebcd
  41b5a3:	xor    ecx,edx
  41b5a5:	mov    DWORD PTR [ebp-0x50],ecx
  41b5a8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5ab:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5ae:	add    ecx,edi
  41b5b0:	and    ecx,edx
  41b5b2:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5b5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5b8:	mov    edx,DWORD PTR [ebp-0x48]
  41b5bb:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5c2:	mov    DWORD PTR [ebp-0x48],ecx
  41b5c5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5c8:	mov    edx,0xfa5e1530
  41b5cd:	sub    edx,ecx
  41b5cf:	add    edx,DWORD PTR [ebp-0x44]
  41b5d2:	mov    DWORD PTR [ebp-0x44],edx
  41b5d5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5d8:	xor    ecx,eax
  41b5da:	add    ecx,esi
  41b5dc:	jne    0x41b561
  41b5e2:	jmp    0x41d9f9
  41b5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5ea:	mov    edx,DWORD PTR [ebp-0x8]
  41b5ed:	xor    ecx,eax
  41b5ef:	xor    edx,eax
  41b5f1:	sub    ecx,edx
  41b5f3:	sub    ecx,esi
  41b5f5:	xor    ecx,eax
  41b5f7:	mov    DWORD PTR [ebp+0x8],ecx
  41b5fa:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fd:	mov    edx,DWORD PTR [ebp-0x58]
  41b600:	add    ecx,0x5708fa
  41b606:	imul   ecx,edx
  41b609:	mov    DWORD PTR [ebp-0x58],ecx
  41b60c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60f:	mov    edx,DWORD PTR [ebp-0x54]
  41b612:	add    ecx,0x64f89c
  41b618:	or     ecx,edx
  41b61a:	mov    DWORD PTR [ebp-0x54],ecx
  41b61d:	mov    ecx,DWORD PTR [ebp+0x8]
  41b620:	mov    edx,DWORD PTR [ebp-0x50]
  41b623:	add    ecx,0x242ebcd
  41b629:	xor    ecx,edx
  41b62b:	mov    DWORD PTR [ebp-0x50],ecx
  41b62e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b631:	mov    edx,DWORD PTR [ebp-0x4c]
  41b634:	add    ecx,edi
  41b636:	jmp    0x41d9bb
  41b63b:	mov    ch,ah
  41b63d:	cmp    al,0x62
  41b63f:	sbb    al,0xa2
  41b641:	test   BYTE PTR [edi+ebp*2-0xdddf391],al
  41b648:	sti    
  41b649:	adc    eax,DWORD PTR [ebx]
  41b64b:	pop    esi
  41b64c:	std    
  41b64d:	jns    0x41b6c9
  41b64f:	adc    bl,BYTE PTR [edi+0x7a]
  41b652:	jp     0x41b66f
  41b654:	sar    BYTE PTR [eax-0x1748fdb],cl
  41b65a:	je     0x41b604
  41b65c:	jne    0x41b6a4
  41b65e:	retf   
  41b65f:	popa   
  41b660:	or     esi,eax
  41b662:	(bad)  
  41b664:	outs   dx,DWORD PTR ds:[esi]
  41b665:	in     al,0xe6
  41b667:	mov    bl,0x9a
  41b669:	fs add edi,esi
  41b66c:	hlt    
  41b66d:	lahf   
  41b66e:	outs   dx,BYTE PTR ds:[esi]
  41b66f:	sub    eax,0x75a945bd
  41b674:	add    al,0x96
  41b676:	icebp  
  41b677:	push   ebx
  41b678:	add    BYTE PTR [edi+0x45],bl
  41b67b:	dec    edx
  41b67c:	push   esp
  41b67d:	push   0xd8a552fa
  41b682:	pop    esi
  41b683:	gs mov ch,0x61
  41b686:	and    esp,0x6
  41b689:	popa   
  41b68a:	out    dx,eax
  41b68b:	idiv   DWORD PTR [eax+0x31]
  41b68e:	int3   
  41b68f:	mov    dh,0xe8
  41b691:	sbb    ebx,DWORD PTR ds:0xb8ea037b
  41b697:	mov    dl,0xe2
  41b699:	add    ch,BYTE PTR [edx-0x1c531192]
  41b69f:	xor    al,0x2c
  41b6a1:	push   edi
  41b6a2:	mov    eax,ds:0xb9a52fcd
  41b6a7:	popf   
  41b6a8:	mov    BYTE PTR [edx+0x2d501489],bl
  41b6ae:	mov    ebp,0x999e25d0
  41b6b3:	imul   ebp,ecx,0x5356fd02
  41b6b9:	push   ebx
  41b6ba:	or     al,0xfd
  41b6bc:	mov    ds:0x5c65d648,eax
  41b6c1:	cmp    al,0xfd
  41b6c3:	test   BYTE PTR [ecx+0xf9a1cd8],ch
  41b6c9:	push   edx
  41b6ca:	outs   dx,BYTE PTR ds:[esi]
  41b6cb:	jg     0x41b71c
  41b6cd:	stos   BYTE PTR es:[edi],al
  41b6ce:	retf   0x3242
  41b6d1:	out    0x18,eax
  41b6d3:	retf   0xb5a7
  41b6d6:	loop   0x41b6ff
  41b6d8:	test   esi,esp
  41b6da:	xor    edx,esp
  41b6dc:	or     WORD PTR [ecx+0x58678202],sp
  41b6e3:	out    dx,al
  41b6e4:	sar    BYTE PTR [eax-0x48],cl
  41b6e7:	test   DWORD PTR [edx+0x2a9b6a3d],ecx
  41b6ed:	int3   
  41b6ee:	fldenv [eax+ebp*2-0x7bec1c35]
  41b6f5:	out    dx,al
  41b6f6:	inc    edx
  41b6f7:	aam    0xd2
  41b6f9:	jne    0x41b73c
  41b6fb:	sahf   
  41b6fc:	(bad)  
  41b6fe:	mov    ch,BYTE PTR ds:0x3f6e69db
  41b704:	dec    ecx
  41b705:	add    al,0x69
  41b707:	mov    cl,0x33
  41b709:	ss stc 
  41b70b:	push   0xc08be7cd
  41b710:	(bad)  
  41b711:	das    
  41b712:	mov    DWORD PTR [edx+0x2ee8bb2e],edi
  41b718:	pop    ebx
  41b719:	cmp    eax,0x9d7d264c
  41b71e:	test   BYTE PTR [ecx],ah
  41b720:	push   esp
  41b721:	jecxz  0x41b76e
  41b723:	retf   0xf2ff
  41b726:	jbe    0x41b76a
  41b728:	adc    DWORD PTR [esi-0x69],esi
  41b72b:	sar    bl,1
  41b72d:	fild   DWORD PTR [esi-0x7c726fcf]
  41b733:	fwait
  41b734:	test   WORD PTR [ecx-0x4a],bp
  41b738:	loope  0x41b724
  41b73a:	dec    ebp
  41b73b:	jne    0x41b798
  41b73d:	add    ebp,ebp
  41b73f:	leave  
  41b740:	ret    
  41b741:	mov    al,0x41
  41b743:	out    dx,eax
  41b744:	mov    esi,ecx
  41b746:	or     edi,esi
  41b748:	les    ebp,FWORD PTR [edi-0x3a]
  41b74b:	jbe    0x41b6d4
  41b74d:	sub    BYTE PTR [ecx],0x44
  41b750:	xlat   BYTE PTR ds:[ebx]
  41b751:	and    al,0xfa
  41b753:	push   edx
  41b754:	sbb    DWORD PTR [edi+0x144fcdd7],0x54b57335
  41b75e:	(bad)  
  41b75f:	das    
  41b760:	fst    st(0)
  41b762:	and    bh,BYTE PTR [ebp-0x37]
  41b765:	out    0xa0,eax
  41b767:	xchg   ebp,eax
  41b768:	imul   ebp,esi,0x3f9679f1
  41b76e:	and    BYTE PTR [ecx-0x4a8f74a0],0x43
  41b775:	inc    ebp
  41b776:	and    ebx,DWORD PTR [ecx]
  41b778:	cmp    BYTE PTR [ebx-0x7ee5497],dh
  41b77e:	mov    ebp,0x7132c05e
  41b783:	push   DWORD PTR [eax-0x9]
  41b786:	aas    
  41b787:	test   al,0xe7
  41b789:	cmp    edx,eax
  41b78b:	mov    ebp,0x53ebbbef
  41b790:	xor    bl,bh
  41b792:	add    ecx,ebp
  41b794:	xchg   edx,eax
  41b795:	xchg   BYTE PTR [ebp-0x7],bl
  41b798:	shl    DWORD PTR [edi+0x5df993fc],cl
  41b79e:	sbb    al,0xf7
  41b7a0:	sbb    edx,DWORD PTR [edi]
  41b7a2:	and    ah,BYTE PTR [ecx-0x4]
  41b7a5:	aaa    
  41b7a6:	mov    BYTE PTR [ebx-0x6e8d1c6b],al
  41b7ac:	lea    edi,[ecx+0x3da9688e]
  41b7b2:	mov    bh,0x6f
  41b7b4:	add    cl,bl
  41b7b6:	xchg   esp,eax
  41b7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7b8:	into   
  41b7b9:	mov    ebp,0x30724b7f
  41b7be:	fmul   DWORD PTR [edx+0x18]
  41b7c1:	xchg   ecx,eax
  41b7c2:	bound  ebp,QWORD PTR [esi]
  41b7c4:	push   ss
  41b7c5:	(bad)  
  41b7c7:	mov    ch,0x53
  41b7c9:	ja     0x41b824
  41b7cb:	(bad)
  41b7ce:	mov    BYTE PTR [ecx+ebp*2+0x48f88026],cl
  41b7d5:	add    eax,0x8e5ee47b
  41b7da:	sub    BYTE PTR [esi+0x790a76c5],ah
  41b7e0:	push   cs
  41b7e1:	or     eax,0xc5cf5f26
  41b7e6:	cli    
  41b7e7:	cmp    eax,0x5b867159
  41b7ec:	aaa    
  41b7ed:	cmc    
  41b7ee:	push   eax
  41b7ef:	jne    0x41b7c0
  41b7f1:	xor    eax,0xd6e617df
  41b7f6:	into   
  41b7f7:	lock inc ebx
  41b7f9:	bound  ebx,QWORD PTR [ebx-0x33]
  41b7fc:	xor    DWORD PTR [ebp+0x26d17ba0],ebx
  41b802:	xlat   BYTE PTR ds:[ebx]
  41b803:	ss dec ebp
  41b805:	sbb    DWORD PTR [ebx],esi
  41b807:	cs or  cl,ch
  41b80a:	cmp    al,0xc2
  41b80c:	xor    esp,ebx
  41b80e:	loope  0x41b85d
  41b810:	xor    eax,0x248919d7
  41b815:	(bad)  [ecx+0x1df60943]
  41b81b:	in     eax,0xe2
  41b81d:	jl     0x41b818
  41b81f:	repnz sbb eax,0xeb2d5819
  41b825:	das    
  41b826:	push   ds
  41b827:	dec    esi
  41b828:	ins    BYTE PTR es:[edi],dx
  41b829:	dec    ebp
  41b82a:	fucomip st,st(0)
  41b82c:	inc    esi
  41b82d:	push   ss
  41b82e:	pop    esi
  41b82f:	and    ah,BYTE PTR [eax-0x51]
  41b832:	xchg   edx,eax
  41b833:	dec    DWORD PTR [ebx-0x35]
  41b836:	add    BYTE PTR [ebp+0x2dc6a8dc],cl
  41b83c:	test   eax,0x60490a9a
  41b841:	jne    0x41b865
  41b843:	nop
  41b844:	mov    dl,dh
  41b846:	adc    al,0x40
  41b848:	dec    esp
  41b849:	cmp    DWORD PTR [ebp+0xdd1b972],esp
  41b84f:	or     DWORD PTR [ebx],esi
  41b851:	mov    ah,0x14
  41b853:	xor    edi,DWORD PTR [eax]
  41b855:	clc    
  41b856:	jecxz  0x41b85a
  41b858:	jno    0x41b89e
  41b85a:	arpl   WORD PTR [eax-0x67],si
  41b85d:	ins    DWORD PTR es:[edi],dx
  41b85e:	xor    DWORD PTR [edx+0x67774ffa],eax
  41b864:	(bad)
  41b867:	scas   al,BYTE PTR es:[edi]
  41b868:	lods   al,BYTE PTR ds:[esi]
  41b869:	retf   
  41b86a:	mov    DWORD PTR [edx],eax
  41b86c:	lea    edi,[ecx+0x71b1596a]
  41b872:	pop    esi
  41b874:	es dec esi
  41b876:	push   ebp
  41b877:	es gs sti 
  41b87a:	scas   al,BYTE PTR es:[edi]
  41b87b:	inc    ecx
  41b87c:	arpl   sp,ax
  41b87e:	repz cwde 
  41b880:	jns    0x41b802
  41b882:	in     al,dx
  41b883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b884:	dec    ecx
  41b885:	dec    esi
  41b886:	daa    
  41b887:	(bad)  
  41b888:	retf   
  41b889:	push   0x3eadff0b
  41b88e:	push   cs
  41b88f:	aaa    
  41b890:	pop    ebp
  41b891:	pop    eax
  41b892:	sub    esi,DWORD PTR [esi]
  41b894:	mov    bh,0xd
  41b896:	mov    cl,0x56
  41b898:	std    
  41b899:	or     bl,BYTE PTR [ecx+0x2d]
  41b89c:	int3   
  41b89d:	aas    
  41b89e:	nop
  41b89f:	mov    esi,0x7c793d7a
  41b8a4:	cmp    eax,0xa75b4ada
  41b8a9:	and    al,0xda
  41b8ab:	cs popf 
  41b8ad:	aad    0x57
  41b8af:	ret    0x4bd5
  41b8b2:	retf   
  41b8b3:	xchg   esp,eax
  41b8b4:	out    dx,eax
  41b8b5:	pop    eax
  41b8b6:	pushf  
  41b8b7:	btr    DWORD PTR [ecx],edi
  41b8ba:	les    ebx,FWORD PTR [esi]
  41b8bc:	mov    esi,0xd42c2879
  41b8c1:	fdivrp st(5),st
  41b8c3:	js     0x41b85f
  41b8c5:	and    ecx,ebp
  41b8c7:	push   ds
  41b8c8:	popa   
  41b8c9:	mov    ds:0xeaf0acb1,al
  41b8ce:	adc    DWORD PTR [esp+ecx*4-0xf],ebp
  41b8d2:	lds    eax,FWORD PTR [edi+0xe]
  41b8d5:	lods   al,BYTE PTR ds:[esi]
  41b8d6:	hlt    
  41b8d7:	push   0x56
  41b8d9:	push   0x56
  41b8db:	sbb    ecx,ecx
  41b8dd:	and    BYTE PTR [eax+ebp*8+0x16],bh
  41b8e1:	adc    al,0x1
  41b8e3:	mov    eax,ds:0x19dd8db1
  41b8e8:	stc    
  41b8e9:	ins    BYTE PTR es:[edi],dx
  41b8ea:	loope  0x41b913
  41b8ec:	fwait
  41b8ed:	push   edi
  41b8ee:	mov    dh,0xac
  41b8f0:	jno    0x41b8e7
  41b8f2:	cdq    
  41b8f3:	and    al,0x4e
  41b8f5:	push   es
  41b8f6:	jecxz  0x41b88d
  41b8f8:	ins    BYTE PTR es:[edi],dx
  41b8f9:	loope  0x41b965
  41b8fb:	jle    0x41b8da
  41b8fd:	(bad)  
  41b8fe:	mov    al,ah
  41b900:	jns    0xead7651a
  41b906:	mov    ebx,0x79eac32f
  41b90b:	xchg   DWORD PTR [ecx],esp
  41b90d:	xchg   ecx,eax
  41b90e:	xor    DWORD PTR gs:[ebx],ecx
  41b911:	sub    eax,0x2a0ff1b2
  41b916:	jno    0x41b93d
  41b918:	cs fs (bad) 
  41b91b:	js     0x41b938
  41b91d:	sahf   
  41b91e:	xchg   edx,eax
  41b91f:	pop    esp
  41b920:	push   ss
  41b921:	sahf   
  41b922:	xchg   DWORD PTR [esi],edx
  41b924:	in     al,0xcb
  41b926:	pushf  
  41b927:	push   0x3f49bc57
  41b92c:	call   0x6421:0x6e64fc92
  41b933:	jns    0x41b8d8
  41b935:	mov    ds:0x4edae8d2,al
  41b93a:	in     eax,0x70
  41b93c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b93d:	int3   
  41b93e:	ins    BYTE PTR es:[edi],dx
  41b93f:	sub    DWORD PTR [eax*4-0x4b77eb61],0x9e989026
  41b94a:	jecxz  0x41b8dd
  41b94c:	ja     0x41b95c
  41b94e:	xor    BYTE PTR [eax+ebx*8+0x28e6a112],al
  41b955:	inc    edx
  41b956:	mov    esp,0xf2766c5e
  41b95b:	xchg   edx,eax
  41b95c:	xchg   edx,eax
  41b95d:	outs   dx,DWORD PTR ds:[esi]
  41b95e:	inc    ebp
  41b95f:	sbb    al,0x93
  41b961:	adc    BYTE PTR [ebx+0x0],al
  41b964:	enter  0x88e5,0x36
  41b968:	shr    BYTE PTR [esi+0x23ff3a33],1
  41b96e:	pusha  
  41b96f:	sub    BYTE PTR [edi+ebp*1-0x14],al
  41b973:	mov    dl,0x7b
  41b975:	ins    DWORD PTR es:[edi],dx
  41b976:	lds    ebx,FWORD PTR [edx]
  41b978:	cmp    dh,BYTE PTR [ebp-0x12]
  41b97b:	mov    BYTE PTR [eax-0x4466090b],ah
  41b981:	jmp    0xa518:0x539553ad
  41b988:	jmp    0x41b9a0
  41b98a:	push   ebp
  41b98b:	mov    al,ds:0xc6e7b7b7
  41b990:	out    dx,eax
  41b991:	sub    eax,0x5ba2b7ab
  41b996:	pop    edi
  41b997:	ror    esp,1
  41b999:	retf   
  41b99a:	mov    eax,0xfd6aca17
  41b99f:	xchg   ebp,eax
  41b9a0:	mov    eax,es
  41b9a2:	(bad)  
  41b9a3:	mov    esp,?
  41b9a5:	add    bl,BYTE PTR [edi]
  41b9a7:	ss pushf 
  41b9a9:	int    0xf1
  41b9ab:	lahf   
  41b9ac:	xchg   edi,eax
  41b9ad:	enter  0xa584,0x1
  41b9b1:	push   edi
  41b9b2:	mov    WORD PTR [ecx+0x5],gs
  41b9b5:	and    esi,DWORD PTR [edx-0x48]
  41b9b8:	in     eax,0x3b
  41b9ba:	rcl    DWORD PTR [ebp-0x5eb7f428],1
  41b9c0:	retf   0x51ae
  41b9c3:	lds    esp,FWORD PTR [eax-0x41]
  41b9c6:	and    BYTE PTR [ebx+0x7e2c2210],ah
  41b9cc:	fxch   st(5)
  41b9ce:	mov    edx,0xd8f2d837
  41b9d3:	fs mov ebp,es
  41b9d6:	mov    ds:0x7677251d,al
  41b9db:	jbe    0x41ba4b
  41b9dd:	in     al,0x7e
  41b9df:	inc    esp
  41b9e0:	repnz sti 
  41b9e2:	das    
  41b9e3:	push   cs
  41b9e4:	imul   esi,DWORD PTR [edx+0x1d],0x5e
  41b9e8:	mov    edx,0x4666c5af
  41b9ed:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9ef:	inc    eax
  41b9f0:	or     ebp,DWORD PTR [edx+ebx*1+0x47abd7bb]
  41b9f7:	cmp    ebx,DWORD PTR [edi+eiz*2]
  41b9fa:	bound  ebx,QWORD PTR [eax]
  41b9fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9fd:	add    cl,BYTE PTR [esi-0x749d1f2e]
  41ba03:	enter  0x3538,0x2b
  41ba07:	sahf   
  41ba08:	(bad)  
  41ba09:	xor    al,dl
  41ba0b:	pusha  
  41ba0c:	mov    edi,0x484d6e63
  41ba11:	mov    edx,0xaabdb0af
  41ba16:	div    DWORD PTR [ecx]
  41ba18:	daa    
  41ba19:	mov    al,ds:0x8d0312fc
  41ba1e:	xor    cl,BYTE PTR [ebx+0x4f]
  41ba21:	dec    edi
  41ba22:	iret   
  41ba23:	adc    al,BYTE PTR ds:0x6ec3d28c
  41ba29:	loop   0x41ba46
  41ba2b:	push   esi
  41ba2c:	std    
  41ba2d:	inc    ecx
  41ba2e:	push   ss
  41ba2f:	(bad)  
  41ba30:	jmp    0x2c61:0xe1e5acdb
  41ba37:	mov    ch,0xd
  41ba39:	pop    ecx
  41ba3a:	mov    cs,ebx
  41ba3c:	es scas eax,DWORD PTR es:[edi]
  41ba3e:	xor    bh,BYTE PTR [edi+0x4]
  41ba41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba42:	jmp    0xdde5:0x7083917
  41ba49:	aaa    
  41ba4a:	sbb    al,0xe5
  41ba4c:	nop
  41ba4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba4e:	and    edi,edx
  41ba50:	in     eax,0x69
  41ba52:	mov    ah,0x3a
  41ba54:	pop    ebp
  41ba55:	sub    DWORD PTR [esi-0x65591336],ebp
  41ba5b:	add    ebx,eax
  41ba5d:	stc    
  41ba5e:	xor    ebp,DWORD PTR [esi]
  41ba60:	jmp    0x41baa7
  41ba62:	test   eax,edi
  41ba64:	jo     0x41bae2
  41ba66:	and    eax,0x2ac5767e
  41ba6b:	sbb    edi,DWORD PTR [esi+0x4d]
  41ba6e:	retf   
  41ba6f:	sbb    DWORD PTR [eax-0x81fee4],edx
  41ba75:	xchg   ecx,eax
  41ba76:	push   ebp
  41ba77:	repnz xchg esi,eax
  41ba79:	jne    0x41ba37
  41ba7b:	pop    ecx
  41ba7c:	and    cl,ch
  41ba7e:	pop    esp
  41ba80:	ror    DWORD PTR [edx+0x2023cca9],cl
  41ba86:	mov    ds:0x8c0462bf,al
  41ba8b:	or     eax,0x3e5ecd6c
  41ba90:	ret    
  41ba91:	jl     0x41baa7
  41ba93:	mov    dh,0xa4
  41ba95:	pop    ss
  41ba96:	fs loop 0x41ba66
  41ba99:	imul   ebx,ecx,0xffffffe4
  41ba9c:	xor    BYTE PTR [ebx-0x3f769379],cl
  41baa2:	push   ds
  41baa3:	(bad)  
  41baa4:	cli    
  41baa5:	pusha  
  41baa6:	jmp    0x41ba51
  41baa8:	jg     0x41baa6
  41baaa:	inc    ecx
  41baab:	xchg   cl,bl
  41baad:	in     eax,dx
  41baae:	or     BYTE PTR [ebx-0x2ec60fc7],0xfa
  41bab5:	lods   eax,DWORD PTR ds:[esi]
  41bab6:	dec    ebx
  41bab7:	imul   edi,edi,0xffffff93
  41baba:	or     ah,BYTE PTR [ebx-0x76]
  41babd:	ret    
  41babe:	or     al,0xd8
  41bac0:	jnp    0x41ba65
  41bac2:	jmp    0x30a2af8
  41bac7:	cmp    cl,BYTE PTR [eax]
  41bac9:	rcr    BYTE PTR [esi+0x5dba7e44],1
  41bacf:	xor    al,BYTE PTR [eax]
  41bad1:	fwait
  41bad2:	jno    0x41ba54
  41bad4:	or     ebx,DWORD PTR [edi+0x7777f584]
  41bada:	das    
  41badb:	sbb    ebp,DWORD PTR ds:0x75d53c58
  41bae1:	cli    
  41bae2:	xchg   BYTE PTR ds:0x9a20eea1,dl
  41bae8:	xor    DWORD PTR [edi],esp
  41baea:	push   ebp
  41baeb:	push   edx
  41baec:	bound  esp,QWORD PTR [esi-0x13]
  41baef:	test   eax,0xb2283ca6
  41baf4:	fnsave [eax]
  41baf6:	sub    ah,dl
  41baf8:	cmp    ch,al
  41bafa:	push   es
  41bafb:	les    edi,FWORD PTR [ecx-0x65802c65]
  41bb01:	mov    al,0x42
  41bb03:	mov    al,ds:0x46b03ff5
  41bb08:	sbb    eax,0x647008ab
  41bb0d:	inc    edx
  41bb0e:	inc    edi
  41bb0f:	enter  0xbe88,0xe3
  41bb13:	mov    al,ah
  41bb15:	hlt    
  41bb16:	stos   DWORD PTR es:[edi],eax
  41bb17:	es int 0x1f
  41bb1a:	loope  0x41bb02
  41bb1c:	les    esi,FWORD PTR [esi-0x1cd0c731]
  41bb22:	xchg   esp,eax
  41bb23:	cmp    dl,ah
  41bb25:	dec    edx
  41bb26:	pop    ds
  41bb27:	mov    es,WORD PTR [esi+0x3a8d9ab1]
  41bb2d:	sbb    DWORD PTR [esi+0x1367cba4],edi
  41bb33:	inc    esp
  41bb34:	es das 
  41bb36:	xor    edx,ecx
  41bb38:	cmp    BYTE PTR [ebp-0x7a],ah
  41bb3b:	mul    BYTE PTR [esi-0x7d4fcb40]
  41bb41:	das    
  41bb42:	mov    ebp,0x6a65d55a
  41bb47:	lods   eax,DWORD PTR ds:[esi]
  41bb48:	repz inc ebx
  41bb4a:	ret    
  41bb4b:	aad    0x4f
  41bb4d:	xor    BYTE PTR ds:0x7116836b,ah
  41bb53:	adc    DWORD PTR [ecx],ebx
  41bb55:	sbb    ch,BYTE PTR [esi]
  41bb57:	push   0xb684d434
  41bb5c:	fsubp  st(0),st
  41bb5e:	xchg   BYTE PTR [edi-0x1f],ah
  41bb61:	in     al,dx
  41bb62:	(bad)  
  41bb64:	out    dx,al
  41bb65:	mov    esi,ebp
  41bb67:	ds test edi,esp
  41bb6a:	dec    ebp
  41bb6b:	cmp    al,0xc0
  41bb6d:	add    BYTE PTR [ebx],0x93
  41bb70:	shr    BYTE PTR [ebp+0x19],cl
  41bb73:	mov    ah,0x10
  41bb75:	and    DWORD PTR [ebp+edi*4+0x46cf9df8],ebp
  41bb7c:	push   0x706fe1bd
  41bb81:	popa   
  41bb82:	sbb    DWORD PTR [edi],0x5bae4014
  41bb88:	jle    0x41bbab
  41bb8a:	add    ebx,ebx
  41bb8c:	push   es
  41bb8d:	out    0x16,al
  41bb8f:	enter  0xb194,0xef
  41bb93:	rcr    BYTE PTR [esp+ebx*1+0xe],cl
  41bb97:	and    bh,BYTE PTR [edx-0x6b]
  41bb9a:	imul   eax,DWORD PTR [ebx-0x7e5aa000],0xffffffdd
  41bba1:	push   esi
  41bba2:	inc    edx
  41bba3:	js     0x41bc01
  41bba5:	add    dh,BYTE PTR [edi+0x7e]
  41bba8:	arpl   WORD PTR [edx],sp
  41bbaa:	inc    DWORD PTR [ebp+0x16]
  41bbad:	xor    eax,0xcb43eec6
  41bbb2:	xor    edi,DWORD PTR [esi-0x4e]
  41bbb5:	ret    
  41bbb6:	jo     0x41bb38
  41bbb8:	push   0xfad47f13
  41bbbd:	hlt    
  41bbbe:	ret    0x4e49
  41bbc1:	inc    edi
  41bbc2:	(bad)  
  41bbc3:	loop   0x41bbca
  41bbc5:	cmp    ebx,DWORD PTR [ecx]
  41bbc7:	add    BYTE PTR [edi+0x2f],0xa5
  41bbcb:	jb     0x41bc34
  41bbcd:	pop    esp
  41bbce:	adc    BYTE PTR [edx-0x2a],dh
  41bbd1:	mov    ch,0x42
  41bbd3:	cwde   
  41bbd4:	jl     0x41bc02
  41bbd6:	test   bl,bh
  41bbd8:	add    ebx,DWORD PTR [ecx-0x1b]
  41bbdb:	ja     0x41bc59
  41bbdd:	call   0x4cfb:0xd2e79e8a
  41bbe4:	adc    DWORD PTR [edi+0x38a8f646],ebx
  41bbea:	cmp    al,0x17
  41bbec:	xor    ebp,DWORD PTR [esi]
  41bbee:	or     bh,BYTE PTR [esi-0xe]
  41bbf1:	push   cs
  41bbf2:	outs   dx,BYTE PTR ds:[esi]
  41bbf3:	scas   al,BYTE PTR es:[edi]
  41bbf4:	jge    0x41bbe3
  41bbf6:	mov    ah,0x49
  41bbf8:	xchg   edx,eax
  41bbf9:	retf   
  41bbfa:	push   ss
  41bbfb:	inc    edi
  41bbfc:	jne    0x41bc6f
  41bbfe:	fistp  DWORD PTR [esi-0x8]
  41bc01:	push   es
  41bc02:	mov    al,0xa5
  41bc04:	call   0x293c:0x2100c313
  41bc0b:	in     al,0x82
  41bc0d:	push   esp
  41bc0e:	jge    0x41bc6b
  41bc10:	add    al,0x3e
  41bc12:	sar    DWORD PTR [eax-0xf],1
  41bc15:	out    dx,eax
  41bc16:	(bad)  
  41bc18:	into   
  41bc19:	pusha  
  41bc1a:	stc    
  41bc1b:	arpl   sp,bp
  41bc1d:	imul   eax,DWORD PTR [ecx-0x5c79ece3],0x442eada3
  41bc27:	hlt    
  41bc28:	pop    edi
  41bc29:	jno    0x41bc7f
  41bc2b:	xor    eax,0x92e7b711
  41bc30:	out    dx,al
  41bc31:	push   ds
  41bc32:	mov    edx,0x14695aa2
  41bc37:	xor    al,0x73
  41bc39:	or     al,0xe2
  41bc3b:	push   ebp
  41bc3c:	pop    eax
  41bc3d:	or     bh,BYTE PTR [ebx]
  41bc3f:	push   edi
  41bc40:	dec    esi
  41bc41:	mov    bl,0x2
  41bc43:	jecxz  0x41bc05
  41bc45:	(bad)  
  41bc46:	mov    dl,0xc2
  41bc48:	push   es
  41bc49:	jns    0x41bc9d
  41bc4b:	sbb    edx,DWORD PTR [ebx-0x6b]
  41bc4e:	pushf  
  41bc4f:	inc    ebx
  41bc50:	ins    BYTE PTR es:[edi],dx
  41bc51:	(bad)  
  41bc52:	adc    eax,0xe3514ab7
  41bc57:	sbb    edi,DWORD PTR [ebx+edi*2+0x468a5cbd]
  41bc5e:	(bad)  
  41bc5f:	jmp    0x5018:0x5a6c747d
  41bc66:	popa   
  41bc67:	pop    es
  41bc68:	jo     0x41bc24
  41bc6a:	sahf   
  41bc6b:	and    BYTE PTR ds:0xd6b9824f,0xa1
  41bc72:	xchg   BYTE PTR [eax],al
  41bc74:	jecxz  0x41bc8f
  41bc76:	mov    ecx,0xddb7e48d
  41bc7b:	int    0x43
  41bc7d:	mov    edx,0x36f1aea9
  41bc82:	mov    ah,0x9f
  41bc84:	xor    eax,0x82fadc52
  41bc89:	imul   ebp,DWORD PTR [eax+0x66d2d89e],0xb7dbd102
  41bc93:	aad    0xf1
  41bc95:	idiv   DWORD PTR [esi]
  41bc97:	jmp    FWORD PTR [eax+0x24d7dd4]
  41bc9d:	pop    ebp
  41bc9e:	pop    ss
  41bc9f:	(bad)  
  41bca0:	imul   eax,ebp,0x49ffc27f
  41bca6:	jmp    0x41bc94
  41bca8:	(bad)  
  41bcaa:	jne    0x41bce1
  41bcac:	ja     0x41bd2c
  41bcae:	push   ds
  41bcaf:	scas   al,BYTE PTR es:[edi]
  41bcb0:	sbb    bl,BYTE PTR [esi+edi*8-0x78]
  41bcb4:	retf   
  41bcb5:	outs   dx,DWORD PTR ds:[esi]
  41bcb6:	push   edi
  41bcb7:	scas   eax,DWORD PTR es:[edi]
  41bcb8:	cmp    ebx,esp
  41bcba:	outs   dx,DWORD PTR ss:[esi]
  41bcbc:	fimul  WORD PTR [ebp-0x64d18e34]
  41bcc2:	sbb    DWORD PTR [eax-0x65],edi
  41bcc5:	xor    DWORD PTR [edx],0xffffff85
  41bcc8:	shr    BYTE PTR [eax],1
  41bcca:	cmc    
  41bccb:	into   
  41bccc:	(bad)  
  41bccd:	call   0xdce9c2e0
  41bcd2:	sub    eax,0x162f3ba3
  41bcd7:	test   DWORD PTR [edi+ebp*1],0xd31e207c
  41bcde:	sbb    eax,0xbc3de48b
  41bce3:	test   BYTE PTR [edi+0xb],dl
  41bce6:	popf   
  41bce7:	mov    esp,esi
  41bce9:	retf   0x1ac3
  41bcec:	jg     0x41bd50
  41bcee:	loopne 0x41bd4e
  41bcf0:	push   0x64
  41bcf2:	int3   
  41bcf3:	(bad)  
  41bcf4:	hlt    
  41bcf5:	arpl   WORD PTR cs:[esi+0x51],si
  41bcf9:	jmp    0x41bc9e
  41bcfb:	out    dx,al
  41bcfc:	js     0x41bc8b
  41bcfe:	jnp    0x41bcb7
  41bd00:	test   DWORD PTR [ebp+0xada65a5],ecx
  41bd06:	or     DWORD PTR [esi+0x3c],ebp
  41bd09:	call   0xe7121380
  41bd0e:	sbb    al,0xb2
  41bd10:	mov    bh,0xfa
  41bd12:	stos   DWORD PTR es:[edi],eax
  41bd13:	mov    bl,0x67
  41bd15:	test   al,0xfd
  41bd17:	in     al,0xea
  41bd19:	neg    BYTE PTR [ecx-0x57]
  41bd1c:	mov    al,0x95
  41bd1e:	xor    edx,DWORD PTR [ebx*4+0x787ec106]
  41bd25:	repnz inc esi
  41bd27:	imul   ebx,eax,0xd266f2b7
  41bd2d:	cli    
  41bd2e:	das    
  41bd2f:	mov    edi,0x924c5dc6
  41bd34:	cs out dx,al
  41bd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd37:	retf   
  41bd38:	ins    BYTE PTR es:[edi],dx
  41bd39:	xor    dl,BYTE PTR [edx+0x46c9c0d0]
  41bd3f:	aas    
  41bd40:	jl     0x41bdaa
  41bd42:	cmp    eax,0x1535875e
  41bd47:	push   ebp
  41bd48:	cmp    esp,esi
  41bd4a:	add    DWORD PTR ds:0x692624a3,edi
  41bd50:	pop    edi
  41bd51:	call   0xb4e68c6a
  41bd56:	test   al,0xd6
  41bd58:	xlat   BYTE PTR ds:[ebx]
  41bd59:	xchg   esi,eax
  41bd5a:	cs mov esp,0x63566fd
  41bd60:	inc    ebx
  41bd61:	jg     0x41bd8a
  41bd63:	jp     0x41bcf2
  41bd65:	test   al,0x1f
  41bd67:	or     BYTE PTR [ebp+0x5fd359a3],cl
  41bd6d:	test   BYTE PTR [esi-0x3b986b95],ah
  41bd73:	push   eax
  41bd74:	retf   
  41bd75:	sub    al,0x47
  41bd77:	icebp  
  41bd78:	cld    
  41bd79:	shl    DWORD PTR [ebx],cl
  41bd7b:	jo     0x41bd1f
  41bd7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd7e:	nop
  41bd7f:	cwde   
  41bd80:	ffree  st(5)
  41bd82:	dec    ebp
  41bd83:	(bad)  
  41bd84:	push   0xffffffc1
  41bd86:	fisubr DWORD PTR [edi-0x37685a15]
  41bd8c:	aad    0x9c
  41bd8e:	dec    edi
  41bd8f:	mov    ds:0xdad1a7d7,al
  41bd94:	leave  
  41bd95:	leave  
  41bd96:	ja     0x41bdc9
  41bd98:	inc    edx
  41bd99:	xor    DWORD PTR [eax+edi*8],ebx
  41bd9c:	mov    ebx,0x94f7e0cd
  41bda1:	adc    DWORD PTR [esi+ebp*8-0x60a9c014],0x33fd56f8
  41bdac:	add    al,0x41
  41bdae:	(bad)  
  41bdaf:	loope  0x41bdfa
  41bdb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdb2:	mov    esp,0xf07bd76a
  41bdb7:	xchg   dl,ch
  41bdb9:	push   edx
  41bdba:	mov    al,ds:0x9601fa79
  41bdbf:	in     al,dx
  41bdc0:	jge    0x41be11
  41bdc2:	push   eax
  41bdc3:	in     al,0xd
  41bdc5:	push   cs
  41bdc6:	inc    eax
  41bdc7:	sahf   
  41bdc8:	sbb    al,0xfa
  41bdca:	sub    BYTE PTR [eax+0x39e31a59],dl
  41bdd0:	push   eax
  41bdd1:	cmp    al,0x37
  41bdd3:	(bad)  
  41bdd4:	clc    
  41bdd5:	dec    esi
  41bdd6:	or     al,0x27
  41bdd8:	sub    ebx,ecx
  41bdda:	xchg   edi,eax
  41bddb:	mov    BYTE PTR [edi-0x661978e4],bl
  41bde1:	popf   
  41bde2:	out    dx,eax
  41bde3:	inc    esp
  41bde4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bde5:	or     al,0x7e
  41bde7:	xchg   edi,eax
  41bde8:	mov    ds:0xc84059e2,eax
  41bded:	or     BYTE PTR [ebp+0x1551c4f8],dh
  41bdf3:	iret   
  41bdf4:	adc    eax,0x23cb44b
  41bdf9:	mov    ebp,0x2bd73ab4
  41bdfe:	mov    esi,0x936f0d92
  41be03:	retf   
  41be04:	mov    al,0xab
  41be06:	push   0x65
  41be08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be09:	push   ds
  41be0a:	je     0x41bd95
  41be0c:	aaa    
  41be0d:	cmp    eax,0xb187589
  41be12:	ds ss pushw ds
  41be16:	add    BYTE PTR [ecx],0x59
  41be19:	lods   eax,DWORD PTR ds:[esi]
  41be1a:	sub    eax,0x4e491e5e
  41be1f:	gs iret 
  41be21:	dec    ebp
  41be22:	fiadd  DWORD PTR [edi]
  41be24:	cmp    ch,bl
  41be26:	shl    BYTE PTR [ebx-0x6c],1
  41be29:	nop
  41be2a:	xor    dh,bl
  41be2c:	(bad)  
  41be2d:	jg     0x41be96
  41be2f:	mov    edi,0x18bc2fb7
  41be34:	cdq    
  41be35:	test   al,0x5f
  41be38:	fs sbb al,0x2e
  41be3b:	aad    0x99
  41be3d:	iret   
  41be3e:	adc    BYTE PTR [eax],0x1a
  41be41:	imul   edx,DWORD PTR [ebp-0x56adde1f],0x50964c35
  41be4b:	dec    ecx
  41be4c:	sbb    DWORD PTR [edi-0x3],ecx
  41be4f:	push   ecx
  41be50:	mov    ds:0x9cd3f516,al
  41be55:	pop    ss
  41be56:	je     0x41be83
  41be58:	lock popf 
  41be5a:	xor    edx,DWORD PTR [ebp+0x35]
  41be5d:	imul   esp,DWORD PTR [esi-0x2bb9b4a1],0x16
  41be64:	scas   eax,DWORD PTR es:[edi]
  41be65:	ss hlt 
  41be67:	ret    0x1814
  41be6a:	stc    
  41be6b:	mov    edi,0x3395beb6
  41be70:	popf   
  41be71:	pop    esp
  41be72:	cmp    eax,0x44f782cd
  41be77:	in     al,dx
  41be78:	xor    DWORD PTR [esp+ebx*2+0x60],esi
  41be7c:	loopne 0x41be06
  41be7e:	jo     0x41be58
  41be80:	cld    
  41be81:	adc    DWORD PTR [ebx],edx
  41be83:	jnp    0x41bebf
  41be85:	push   edx
  41be86:	out    0xde,al
  41be88:	ins    DWORD PTR es:[edi],dx
  41be89:	icebp  
  41be8a:	add    eax,0x48eccaa2
  41be8f:	ds pop esp
  41be91:	fisub  WORD PTR [ecx+0x68]
  41be94:	ins    BYTE PTR es:[edi],dx
  41be95:	shr    BYTE PTR [esi-0x30],0x74
  41be99:	ret    
  41be9a:	push   cs
  41be9b:	push   0x996a10a
  41bea0:	or     al,0x3f
  41bea2:	retf   0x4629
  41bea5:	adc    eax,DWORD PTR [edi]
  41bea7:	ja     0x41be47
  41bea9:	popa   
  41beaa:	pop    edx
  41beab:	mov    BYTE PTR [edx+0x49f4d3be],ch
  41beb1:	xor    al,0xf7
  41beb3:	mov    ecx,DWORD PTR [edx+0x7d]
  41beb6:	jp     0x41bef0
  41beb8:	jmp    FWORD PTR [edx]
  41beba:	jle    0x41bf14
  41bebc:	pop    ebp
  41bebd:	outs   dx,DWORD PTR ds:[esi]
  41bebe:	sar    BYTE PTR [edx-0x2de572a5],0x62
  41bec5:	call   0x1d3613cc
  41beca:	sub    ebp,DWORD PTR [ebx]
  41becc:	aas    
  41becd:	inc    esi
  41bece:	sub    al,0x4e
  41bed0:	add    eax,0x43012a5b
  41bed5:	cmp    BYTE PTR ds:0xa310ac5b,bl
  41bedb:	jle    0x41bee6
  41bedd:	jb     0x41bf1b
  41bedf:	test   al,0xa4
  41bee1:	adc    DWORD PTR [eax],edx
  41bee3:	push   cs
  41bee4:	das    
  41bee5:	pop    esi
  41bee6:	sub    edi,DWORD PTR [eax]
  41bee8:	addr16 dec eax
  41beea:	push   0x6ae76e29
  41beef:	push   es
  41bef0:	daa    
  41bef1:	mov    ecx,0x2866d25a
  41bef6:	nop
  41bef7:	fwait
  41bef8:	out    dx,eax
  41bef9:	cld    
  41befa:	inc    edi
  41befb:	(bad)  
  41befc:	mov    ecx,0x6e1cd7eb
  41bf01:	cmc    
  41bf02:	out    0x71,eax
  41bf04:	enter  0x1150,0x1a
  41bf08:	or     ah,BYTE PTR [ecx+ebx*2-0x50]
  41bf0c:	inc    ebp
  41bf0d:	push   eax
  41bf0e:	mov    dh,0x7e
  41bf10:	pop    es
  41bf11:	mov    ds:0x2f45d286,eax
  41bf16:	mov    al,ds:0x9f0b46e5
  41bf1b:	xchg   edx,eax
  41bf1c:	mov    ch,0x53
  41bf1e:	test   DWORD PTR [eax+eiz*1-0x6a],edi
  41bf22:	xor    DWORD PTR [ebx+0x4],esi
  41bf25:	mov    al,ds:0xf5df95b9
  41bf2a:	fild   WORD PTR [ebp+eiz*8-0x3c]
  41bf2e:	leave  
  41bf2f:	scas   al,BYTE PTR es:[edi]
  41bf30:	ret    
  41bf31:	cmp    DWORD PTR [edi-0xe],edx
  41bf34:	add    bl,bl
  41bf36:	mov    BYTE PTR [edx],cl
  41bf38:	fbstp  TBYTE PTR [edx-0x24]
  41bf3b:	sbb    DWORD PTR [eax],ebx
  41bf3d:	mov    esi,DWORD PTR [edx]
  41bf3f:	ds mov cl,0xf8
  41bf42:	nop
  41bf43:	shl    BYTE PTR [esi-0x2],1
  41bf46:	push   cs
  41bf47:	rcl    DWORD PTR [esi+0x3e],1
  41bf4a:	ret    
  41bf4b:	mov    ah,0x16
  41bf4d:	hlt    
  41bf4e:	test   DWORD PTR [edx-0x130c4cb6],0x17a7ac3e
  41bf58:	jbe    0x41bf01
  41bf5a:	cmc    
  41bf5b:	mov    DWORD PTR [edi+0x41a4aca6],edi
  41bf61:	adc    esp,DWORD PTR [esi-0x4b]
  41bf64:	or     BYTE PTR [ebx],bl
  41bf66:	ret    0x402
  41bf69:	fisub  DWORD PTR [ecx+0x69a4be00]
  41bf6f:	lods   eax,DWORD PTR ds:[esi]
  41bf70:	(bad)  
  41bf72:	pop    esp
  41bf73:	fwait
  41bf74:	test   eax,0x46d54017
  41bf79:	lods   eax,DWORD PTR ds:[esi]
  41bf7a:	pop    esp
  41bf7b:	pusha  
  41bf7c:	mov    al,0xcd
  41bf7e:	mov    ds:0x7a43ac9,eax
  41bf83:	inc    ecx
  41bf84:	push   esi
  41bf85:	push   0xfffffffb
  41bf87:	adc    dh,BYTE PTR [ecx-0x27b0e06e]
  41bf8d:	jl     0x41bf76
  41bf8f:	mov    dl,0x7
  41bf91:	das    
  41bf92:	test   bh,dh
  41bf94:	mov    cl,0x6c
  41bf96:	inc    ebp
  41bf97:	push   ss
  41bf98:	popa   
  41bf99:	jecxz  0x41bfeb
  41bf9b:	lock adc BYTE PTR [eax+0x17ef05c5],ch
  41bfa2:	test   eax,0x7d763a7f
  41bfa7:	pop    es
  41bfa8:	sub    DWORD PTR [eax-0x4f],0x781ad058
  41bfaf:	scas   eax,DWORD PTR es:[edi]
  41bfb0:	ja     0x41bfcd
  41bfb2:	mov    bl,BYTE PTR [edi]
  41bfb4:	addr16 mov bl,0x1d
  41bfb7:	mov    WORD PTR [edi-0x50644d6d],ss
  41bfbd:	rol    DWORD PTR [edi+0x71],cl
  41bfc0:	push   0xe4d3a45c
  41bfc5:	mov    al,ds:0xdeff5395
  41bfca:	or     DWORD PTR [esi-0x4ab5902a],edx
  41bfd0:	aaa    
  41bfd1:	jle    0x41c04b
  41bfd3:	xchg   ecx,eax
  41bfd4:	sbb    ebx,edx
  41bfd6:	mov    ecx,0x16c364f6
  41bfdb:	(bad)  
  41bfdc:	mov    edx,0xfcd7afe4
  41bfe1:	es addr16 (bad) 
  41bfe4:	lock fisubr WORD PTR [edx-0x1eeba1d7]
  41bfeb:	arpl   WORD PTR [ecx-0x7c62b3f8],si
  41bff1:	inc    esp
  41bff2:	ret    
  41bff3:	push   edx
  41bff4:	ss jbe 0x41bfac
  41bff7:	and    edx,ebp
  41bff9:	out    0x7e,al
  41bffb:	or     al,0xe
  41bffd:	inc    edi
  41bffe:	or     bh,BYTE PTR [ebx+eiz*8-0x5470307c]
  41c005:	inc    eax
  41c006:	sub    DWORD PTR [eax+0x77],esp
  41c009:	stc    
  41c00a:	add    ah,BYTE PTR [eax+0x72616ddd]
  41c010:	retf   0x5398
  41c013:	mov    ds:0x3db0792e,al
  41c018:	mov    eax,ds:0x7d99f87e
  41c01d:	out    0x7,al
  41c01f:	repz sub DWORD PTR [edi+0x24495e14],0xe87eb364
  41c02a:	xor    al,0x8f
  41c02c:	jg     0x41bfc1
  41c02e:	push   0x47
  41c030:	fcompp 
  41c032:	scas   al,BYTE PTR es:[edi]
  41c033:	sbb    DWORD PTR [edx-0x5cff8d64],edx
  41c039:	jp     0x41bfe1
  41c03b:	lds    edx,FWORD PTR [eax]
  41c03d:	icebp  
  41c03e:	mov    edi,0xdd544458
  41c043:	fnstenv [esi+0x76]
  41c046:	inc    edi
  41c047:	add    al,0x18
  41c049:	(bad)  
  41c04b:	xor    ch,BYTE PTR [di]
  41c04e:	add    al,0x3d
  41c050:	hlt    
  41c051:	in     al,0xe2
  41c053:	test   DWORD PTR [ebp-0x42],esi
  41c056:	jp     0x41c00e
  41c058:	jo     0x41c095
  41c05a:	mov    ds:0x6d290eb3,al
  41c05f:	fdivr  st(0),st
  41c061:	sbb    al,0xe5
  41c063:	test   eax,0x292efb2a
  41c068:	and    ah,ch
  41c06a:	and    BYTE PTR [esi+edx*8+0x54c95c8b],bl
  41c071:	lods   al,BYTE PTR ds:[esi]
  41c072:	out    0xb1,al
  41c074:	inc    esp
  41c075:	and    DWORD PTR [edi-0x5c],esp
  41c078:	xor    eax,0x106d356
  41c07d:	cmp    ebp,DWORD PTR [ebx+0x1d]
  41c080:	sbb    al,0x42
  41c082:	push   eax
  41c083:	pop    edi
  41c084:	imul   eax,DWORD PTR ss:[edi+0x33e90284],0xfffffffa
  41c08c:	out    0xf1,al
  41c08e:	mov    al,0x6b
  41c090:	sbb    bl,bh
  41c092:	xchg   ecx,eax
  41c093:	stc    
  41c094:	jp     0x41c03f
  41c096:	out    dx,eax
  41c097:	ss idiv DWORD PTR gs:[ecx+0x7a]
  41c09c:	fcomp  QWORD PTR [esi+ebp*4-0x7b060df7]
  41c0a3:	inc    edx
  41c0a4:	adc    ch,0x1e
  41c0a7:	push   edx
  41c0a8:	or     eax,0x51d91015
  41c0ad:	adc    eax,0xf863bef4
  41c0b2:	push   ebp
  41c0b3:	jae    0x41c06d
  41c0b5:	adc    DWORD PTR [edx],eax
  41c0b7:	cli    
  41c0b8:	sahf   
  41c0b9:	(bad)  [edi-0x6]
  41c0bc:	mov    bh,0x43
  41c0be:	adc    esp,ebx
  41c0c0:	iret   
  41c0c1:	adc    esp,ebx
  41c0c3:	dec    edx
  41c0c4:	test   esp,ecx
  41c0c6:	outs   dx,DWORD PTR ds:[esi]
  41c0c7:	loopne 0x41c09f
  41c0c9:	mov    bl,0x63
  41c0cb:	mov    ds:0x9228fc1d,eax
  41c0d0:	jno    0x41c078
  41c0d2:	out    dx,eax
  41c0d3:	xlat   BYTE PTR ds:[ebx]
  41c0d4:	fcmovnu st,st(6)
  41c0d6:	ret    0x7f89
  41c0d9:	pop    edi
  41c0da:	jns    0x41c103
  41c0dc:	scas   eax,DWORD PTR es:[edi]
  41c0dd:	ds and dl,bh
  41c0e0:	add    al,0xd4
  41c0e2:	jmp    0xcf0468c1
  41c0e7:	add    eax,0x8a7dbf53
  41c0ec:	jg     0x41c14e
  41c0ee:	pushf  
  41c0ef:	mov    edi,DWORD PTR [esi]
  41c0f1:	jp     0x41c12d
  41c0f3:	adc    al,0xaa
  41c0f5:	clc    
  41c0f6:	or     ebx,DWORD PTR [esi-0xd]
  41c0f9:	idiv   DWORD PTR [ecx+0x12]
  41c0fc:	hlt    
  41c0fd:	or     bl,dl
  41c0ff:	push   ds
  41c100:	lock sar BYTE PTR [ecx+0x7],1
  41c104:	js     0x41c12e
  41c106:	rcl    DWORD PTR [edx-0xa],0x9e
  41c10a:	adc    edi,DWORD PTR [edi]
  41c10c:	push   esp
  41c10d:	xor    esi,esp
  41c10f:	cmp    BYTE PTR [esi],ch
  41c111:	mov    eax,0x3721a0a6
  41c116:	push   esi
  41c117:	ret    0x8a4f
  41c11a:	push   0x57
  41c11c:	das    
  41c11d:	mov    dl,cl
  41c11f:	jg     0x41c0c5
  41c121:	sbb    BYTE PTR [esp+ebx*2+0x6],0x7b
  41c126:	repnz mov ecx,0x219f0948
  41c12c:	clc    
  41c12d:	sub    eax,DWORD PTR [eax-0x6f]
  41c130:	nop
  41c131:	(bad)  
  41c132:	pop    edi
  41c133:	add    dh,BYTE PTR [edi+0x68fb424f]
  41c139:	jg     0x41c0cf
  41c13b:	jae    0x41c10c
  41c13d:	out    0x94,eax
  41c13f:	pop    edi
  41c140:	pop    esi
  41c141:	popa   
  41c142:	push   ecx
  41c143:	test   eax,0xc25c8d00
  41c148:	jge    0x41c1b9
  41c14a:	mov    esp,0x358bf5bd
  41c14f:	mov    ebp,0xa1b14498
  41c154:	xor    BYTE PTR [ecx+0x64],dl
  41c157:	fidivr WORD PTR [ebp-0x38]
  41c15a:	pop    eax
  41c15b:	inc    esi
  41c15c:	fistp  QWORD PTR [ebx+ebp*8]
  41c15f:	xchg   ecx,eax
  41c160:	sub    al,0xb5
  41c162:	adc    dh,BYTE PTR [ecx]
  41c164:	pop    eax
  41c165:	idiv   ebx
  41c167:	xor    edx,ebx
  41c169:	popf   
  41c16a:	outs   dx,BYTE PTR ds:[esi]
  41c16b:	add    dh,ah
  41c16d:	cs mov ebx,0x7dd6ec3b
  41c173:	xlat   BYTE PTR ds:[ebx]
  41c174:	dec    ebx
  41c175:	pop    ss
  41c176:	popa   
  41c177:	mov    al,0xd5
  41c179:	popa   
  41c17a:	jmp    FWORD PTR [eax]
  41c17c:	jnp    0x41c111
  41c17e:	mul    DWORD PTR [edi-0x219fde68]
  41c184:	or     al,0x70
  41c186:	push   ds
  41c187:	lock mov ecx,0xdd4a8046
  41c18d:	shl    BYTE PTR [esi],1
  41c18f:	pushf  
  41c190:	sub    al,0x72
  41c192:	(bad)  
  41c193:	shl    DWORD PTR [esp+eax*1],1
  41c196:	lods   al,BYTE PTR ds:[esi]
  41c197:	les    eax,FWORD PTR [edx-0x6f]
  41c19a:	stos   BYTE PTR es:[edi],al
  41c19b:	pop    esp
  41c19c:	jge    0x41c1c4
  41c19e:	pusha  
  41c19f:	sbb    DWORD PTR ds:[edx+0x54d0742f],edx
  41c1a6:	shr    ebx,cl
  41c1a8:	pop    esi
  41c1a9:	stos   DWORD PTR es:[edi],eax
  41c1aa:	ds ins BYTE PTR es:[edi],dx
  41c1ac:	xor    dh,al
  41c1ae:	rcl    DWORD PTR [ebp-0x47],cl
  41c1b1:	jl     0x41c184
  41c1b3:	out    dx,al
  41c1b4:	push   ss
  41c1b5:	jle    0x41c196
  41c1b7:	sub    al,0x7b
  41c1b9:	das    
  41c1ba:	lahf   
  41c1bb:	ins    BYTE PTR es:[edi],dx
  41c1bc:	mov    eax,ds:0x94fe9f55
  41c1c1:	add    edi,esi
  41c1c3:	into   
  41c1c4:	pop    ss
  41c1c5:	jbe    0x41c1fb
  41c1c7:	xchg   ebp,eax
  41c1c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ca:	ins    DWORD PTR es:[edi],dx
  41c1cb:	inc    eax
  41c1cc:	mov    esp,ebx
  41c1ce:	adc    al,0x2e
  41c1d0:	adc    BYTE PTR [edx],bl
  41c1d2:	and    ebx,ebp
  41c1d4:	int3   
  41c1d5:	xchg   BYTE PTR [ebp+0x65259461],ch
  41c1db:	xchg   ebx,eax
  41c1dc:	mov    bh,0x34
  41c1de:	jb     0x41c171
  41c1e0:	sub    DWORD PTR [edx+0x73],esp
  41c1e3:	fiadd  WORD PTR [ebx-0x75]
  41c1e6:	adc    ah,bl
  41c1e8:	sub    eax,0x4ed9e74
  41c1ed:	in     eax,dx
  41c1ee:	mov    ch,0x8e
  41c1f0:	(bad)  
  41c1f1:	out    0x16,al
  41c1f3:	push   eax
  41c1f4:	aam    0x87
  41c1f6:	mul    dl
  41c1f8:	ins    BYTE PTR es:[edi],dx
  41c1f9:	fld    TBYTE PTR [ebx-0x6]
  41c1fc:	(bad)  
  41c1fd:	and    DWORD PTR [edi+0x45fd0949],esp
  41c203:	jns    0x41c210
  41c205:	mov    esp,0xc5bac08e
  41c20a:	in     eax,dx
  41c20b:	dec    edi
  41c20c:	ins    DWORD PTR es:[edi],dx
  41c20d:	cwde   
  41c20e:	sbb    ebx,DWORD PTR [ebx+0x46bccca7]
  41c214:	sbb    al,0xbb
  41c216:	rol    BYTE PTR [ebx+eiz*2+0x6fe8e4bf],1
  41c21d:	pop    ecx
  41c21e:	adc    ebp,DWORD PTR [ecx+ebx*1-0x422947fb]
  41c225:	in     eax,dx
  41c226:	jae    0x41c220
  41c228:	leave  
  41c229:	xchg   esp,eax
  41c22a:	mov    DWORD PTR [ebx],0x57d8cc19
  41c230:	js     0x41c224
  41c232:	mov    esi,0x940f7a6d
  41c237:	fwait
  41c238:	ret    0x30a4
  41c23b:	xor    dh,BYTE PTR cs:0x2281dba8
  41c242:	or     eax,0x2ac0322e
  41c247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c248:	xchg   ebp,eax
  41c249:	neg    ah
  41c24b:	push   0xb06fc8a4
  41c250:	mov    DWORD PTR [ebx],esp
  41c252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c253:	push   esi
  41c254:	push   ds
  41c255:	adc    al,0x23
  41c257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c258:	pushw  es
  41c25a:	pop    ecx
  41c25b:	test   al,0x5a
  41c25d:	add    bl,BYTE PTR [ecx]
  41c25f:	imul   ebx,DWORD PTR [ebx+0x2c],0xffffff99
  41c263:	add    al,0x8d
  41c265:	pop    esi
  41c266:	fisub  DWORD PTR [ebx+ebx*2-0x6e684639]
  41c26d:	mov    bh,0x26
  41c26f:	sub    DWORD PTR [edi+0x61e52ce3],esp
  41c275:	dec    ecx
  41c276:	sbb    DWORD PTR [ebp-0x35bdf76d],ebx
  41c27c:	ja     0x41c2d4
  41c27e:	mov    al,ds:0x93021f82
  41c283:	sub    esp,eax
  41c285:	shl    ah,1
  41c287:	(bad)  
  41c288:	fldcw  WORD PTR [edi-0x74]
  41c28b:	dec    esi
  41c28c:	adc    DWORD PTR [edi+0x26],eax
  41c28f:	jnp    0x41c21d
  41c291:	sbb    ebx,0x3b
  41c294:	jb     0x41c287
  41c296:	sub    ch,BYTE PTR [edi-0x6d]
  41c299:	cmc    
  41c29a:	call   0xd4897f0b
  41c29f:	add    BYTE PTR [edi+ebp*2-0x2b98519c],bh
  41c2a6:	and    BYTE PTR [esi],ch
  41c2a8:	or     eax,0xef908a7a
  41c2ad:	ss jns 0x41c2c0
  41c2b0:	xchg   edi,eax
  41c2b1:	sbb    al,0xe0
  41c2b3:	sub    ecx,ebx
  41c2b5:	aas    
  41c2b6:	xor    al,0xd6
  41c2b8:	out    0x31,eax
  41c2ba:	and    DWORD PTR [ebp-0x17a460ae],0xffffff96
  41c2c1:	jmp    0xa050f86e
  41c2c6:	jnp    0x41c270
  41c2c8:	mov    ebx,0x4ebd2df2
  41c2cd:	xchg   edi,eax
  41c2ce:	ret    
  41c2cf:	in     eax,0x30
  41c2d1:	xchg   esp,eax
  41c2d2:	and    edi,ebp
  41c2d4:	outs   dx,DWORD PTR ds:[esi]
  41c2d5:	and    dh,BYTE PTR [edx-0x14458feb]
  41c2db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2dc:	ja     0x41c30b
  41c2de:	ret    
  41c2df:	mov    ah,BYTE PTR [ebx+0x69cfcd81]
  41c2e5:	loop   0x41c2f3
  41c2e7:	pop    ss
  41c2e8:	pop    ebx
  41c2e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2ea:	jecxz  0x41c2bf
  41c2ec:	mov    al,ds:0xefee12fc
  41c2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2f2:	mov    eax,0xe0ff017c
  41c2f7:	mov    ecx,esp
  41c2f9:	xor    eax,0x593b7ba4
  41c2fe:	repz add BYTE PTR [eax-0xd8aa87a],cl
  41c305:	jl     0x41c384
  41c307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c308:	div    BYTE PTR [ebx+edi*4+0x20]
  41c30c:	pop    edx
  41c30d:	sbb    al,0xff
  41c30f:	add    eax,0xfe31fb06
  41c314:	test   eax,0xf94f9eda
  41c319:	repz hlt 
  41c31b:	pop    es
  41c31c:	rol    BYTE PTR [edi-0x20],1
  41c31f:	test   DWORD PTR [ebp+0x13],edx
  41c322:	adc    al,0x56
  41c324:	mov    bl,0x9d
  41c326:	enter  0xe8f2,0xdb
  41c32a:	jmp    0xe757:0x475c705f
  41c331:	push   0xb310b338
  41c336:	sbb    al,BYTE PTR [edi-0x9]
  41c339:	shl    esp,0x42
  41c33c:	aad    0xdf
  41c33e:	mov    esi,0xa2e561b
  41c343:	or     BYTE PTR [edi],al
  41c345:	mov    edi,DWORD PTR [eax+0x19960389]
  41c34b:	out    dx,al
  41c34c:	icebp  
  41c34d:	sub    BYTE PTR [edx+0x514d1dd4],bl
  41c353:	jmp    0x41c30a
  41c355:	jns    0x41c38d
  41c357:	sbb    al,0x17
  41c359:	(bad)  
  41c35a:	les    edi,FWORD PTR [eax-0x5d418f0]
  41c360:	sar    edi,1
  41c362:	call   0x15c17e72
  41c367:	add    al,BYTE PTR [ebp-0x6979d4da]
  41c36d:	add    DWORD PTR fs:[ebp-0x777fb1ef],edi
  41c374:	into   
  41c375:	mov    bl,0x44
  41c377:	fist   WORD PTR [eax+ecx*2]
  41c37a:	dec    esp
  41c37b:	leave  
  41c37c:	jns    0x41c3b1
  41c37e:	jae    0x41c38b
  41c380:	fnstenv [ebp+0x7c]
  41c383:	arpl   WORD PTR [ebp-0x2dc64bfc],ax
  41c389:	in     eax,dx
  41c38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c38b:	gs nop
  41c38d:	adc    dl,bl
  41c38f:	mov    dh,0x99
  41c391:	imul   esi,DWORD PTR [ecx+0x71],0x5a4f8a11
  41c398:	cmc    
  41c399:	adc    dl,dh
  41c39b:	cmp    ecx,0x60
  41c39e:	or     al,0xb4
  41c3a0:	(bad)  
  41c3a1:	ins    DWORD PTR es:[edi],dx
  41c3a2:	jno    0x41c35d
  41c3a4:	and    edi,DWORD PTR ss:[ebx+0x190e6e29]
  41c3ab:	jmp    0x41c39c
  41c3ad:	cwde   
  41c3ae:	xchg   ebp,eax
  41c3af:	inc    BYTE PTR [esp+eax*4]
  41c3b2:	or     DWORD PTR [edx+0x5],0xea7ea06e
  41c3b9:	mov    ch,0xe7
  41c3bb:	jbe    0x41c366
  41c3bd:	lahf   
  41c3be:	inc    eax
  41c3bf:	push   0xffffff91
  41c3c1:	and    al,0x6c
  41c3c3:	mov    ebx,0x981d8d4
  41c3c8:	sub    bl,ch
  41c3ca:	xchg   edi,eax
  41c3cb:	inc    esi
  41c3cc:	mov    bh,0x6e
  41c3ce:	into   
  41c3cf:	ja     0x41c415
  41c3d1:	cld    
  41c3d2:	pop    ss
  41c3d3:	dec    eax
  41c3d4:	jb     0x41c3cf
  41c3d6:	pop    ebp
  41c3d7:	stos   BYTE PTR es:[edi],al
  41c3d8:	jecxz  0x41c3b8
  41c3da:	jno    0x41c3fb
  41c3dc:	jmp    0x41c37a
  41c3de:	inc    edx
  41c3df:	adc    dl,BYTE PTR [eax+0x7f98823a]
  41c3e5:	icebp  
  41c3e6:	inc    edx
  41c3e7:	sbb    ah,dl
  41c3e9:	mov    ebp,0x73cbaea2
  41c3ee:	ds cwde 
  41c3f0:	fcomp  DWORD PTR [edi-0x21f29115]
  41c3f6:	cmp    dh,bl
  41c3f8:	stos   DWORD PTR es:[edi],eax
  41c3f9:	les    eax,FWORD PTR ds:[eax-0x5d]
  41c3fd:	dec    ebp
  41c3fe:	idiv   DWORD PTR [edi]
  41c400:	push   esi
  41c401:	and    edi,DWORD PTR [ebx]
  41c403:	shl    BYTE PTR [eax-0x38],0x5a
  41c407:	enter  0xc02,0x88
  41c40b:	sar    BYTE PTR [ecx],cl
  41c40d:	ret    0x48a
  41c410:	mov    BYTE PTR [eax],bh
  41c412:	icebp  
  41c413:	rcr    dl,1
  41c415:	jge    0x41c3ff
  41c417:	rcr    BYTE PTR ds:0x57f8adfd,cl
  41c41d:	out    dx,eax
  41c41e:	xor    BYTE PTR [eax+0x2e1f85b7],dl
  41c424:	jae    0x41c3ab
  41c426:	mov    ch,0x7d
  41c428:	or     dl,BYTE PTR [esi]
  41c42a:	cmp    BYTE PTR [ebx+eax*2-0x43],dh
  41c42e:	xchg   esi,eax
  41c42f:	dec    ecx
  41c430:	and    edi,DWORD PTR [eax+0x466889de]
  41c436:	fucomi st,st(7)
  41c438:	mov    ecx,0xc2869790
  41c43d:	or     al,0xc1
  41c43f:	add    ch,BYTE PTR [edx+0x7b]
  41c442:	pushf  
  41c443:	push   edi
  41c444:	cmp    al,0x4d
  41c446:	fs int3 
  41c448:	pushf  
  41c449:	bound  ecx,QWORD PTR [ecx]
  41c44b:	cdq    
  41c44c:	mov    bh,dl
  41c44e:	cmp    al,0xb8
  41c450:	aad    0x78
  41c452:	cmp    al,0xd0
  41c454:	sub    al,0x5a
  41c456:	bound  esp,QWORD PTR ds:0x414fd21f
  41c45c:	mov    eax,0xe738d07b
  41c461:	daa    
  41c462:	pop    ebx
  41c463:	jb     0x41c498
  41c465:	pushf  
  41c466:	fisubr WORD PTR [edx-0x35]
  41c469:	sahf   
  41c46a:	jge    0x41c47b
  41c46c:	xor    DWORD PTR [edx],ebp
  41c46e:	dec    ebp
  41c46f:	dec    edx
  41c470:	or     esi,DWORD PTR [ebp+0x7fe98673]
  41c476:	gs stc 
  41c478:	cmc    
  41c479:	jno    0x41c451
  41c47b:	xchg   edi,eax
  41c47c:	jecxz  0x41c457
  41c47e:	fist   WORD PTR ds:[esi-0x8]
  41c482:	push   ds
  41c483:	fld    DWORD PTR [edi]
  41c485:	out    dx,al
  41c486:	jmp    0x18827acd
  41c48b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c48c:	mov    eax,0x63235022
  41c491:	mov    bh,0xb9
  41c493:	cmp    al,0x1e
  41c495:	sbb    edx,DWORD PTR [ecx+0x27c5dcba]
  41c49b:	sbb    ebx,DWORD PTR [esi+0x33]
  41c49e:	jnp    0x41c4a3
  41c4a0:	pop    esp
  41c4a1:	out    0x37,eax
  41c4a3:	inc    ecx
  41c4a4:	in     al,0xcc
  41c4a6:	pop    esi
  41c4a7:	fnstsw WORD PTR [ebx]
  41c4a9:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c4ab:	shr    ecx,cl
  41c4ad:	lods   al,BYTE PTR ds:[esi]
  41c4ae:	pop    ebx
  41c4af:	int3   
  41c4b0:	xchg   esp,eax
  41c4b1:	inc    DWORD PTR [edi-0x42]
  41c4b4:	dec    esp
  41c4b5:	and    BYTE PTR [ebp+0x3eca14cb],al
  41c4bb:	mov    edx,0xda294702
  41c4c0:	mov    bh,0x97
  41c4c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4c3:	mov    edi,DWORD PTR [ebp+0x6257e69a]
  41c4c9:	loope  0x41c4c3
  41c4cb:	dec    ebx
  41c4cc:	(bad)  
  41c4cd:	es add eax,0x9eca9a57
  41c4d3:	jle    0x41c481
  41c4d5:	fldcw  WORD PTR [ebx-0x5caa1b23]
  41c4db:	mov    bl,dh
  41c4dd:	mov    eax,DWORD PTR [edx]
  41c4df:	xchg   DWORD PTR [eax-0x6e8f23eb],esp
  41c4e5:	mov    ?,WORD PTR [ebx]
  41c4e7:	xchg   ecx,ebx
  41c4e9:	jno    0x41c48e
  41c4eb:	mov    bl,BYTE PTR [ebx]
  41c4ed:	pop    ebx
  41c4ee:	mov    edx,0xd58e01b5
  41c4f3:	pop    ecx
  41c4f4:	mov    al,ds:0x1e9d409c
  41c4f9:	arpl   WORD PTR [ebp-0x7bc935f3],ax
  41c4ff:	shr    esi,0x72
  41c502:	sti    
  41c503:	mov    bh,ah
  41c505:	mov    eax,0xe6ab7ff2
  41c50a:	daa    
  41c50b:	rcl    BYTE PTR [ecx],cl
  41c50d:	jmp    0x41c4df
  41c50f:	mov    ah,0x9b
  41c511:	jmp    0x41c560
  41c513:	int    0x7d
  41c515:	and    BYTE PTR [edx],0x7f
  41c518:	push   ecx
  41c519:	adc    eax,0x1d3d1940
  41c51e:	adc    BYTE PTR [edi],al
  41c520:	push   esp
  41c521:	inc    eax
  41c522:	in     al,0xdd
  41c524:	mov    esp,0x334743d2
  41c529:	aas    
  41c52a:	mov    DWORD PTR [edi+0x49],esp
  41c52d:	mov    bl,0x60
  41c52f:	dec    ebx
  41c530:	clc    
  41c531:	jae    0x41c587
  41c533:	repnz scas eax,DWORD PTR es:[edi]
  41c535:	mov    edx,0x643ce5c7
  41c53a:	cld    
  41c53b:	retf   0x936b
  41c53e:	sbb    BYTE PTR [edi+eax*2+0x559e0054],0x30
  41c546:	xchg   esi,eax
  41c547:	popf   
  41c548:	(bad)  
  41c549:	sti    
  41c54a:	adc    DWORD PTR [ebx+0x2fb35190],ebp
  41c550:	ins    BYTE PTR es:[edi],dx
  41c551:	dec    eax
  41c552:	or     ebx,ebp
  41c554:	or     eax,0xccb785c9
  41c559:	scas   eax,DWORD PTR es:[edi]
  41c55a:	fadd   st(6),st
  41c55c:	jl     0x41c5ba
  41c55e:	shr    DWORD PTR ds:0x543b3488,cl
  41c564:	xor    eax,0x1518e809
  41c569:	mov    ebx,DWORD PTR [ebx-0x8b44a60]
  41c56f:	xor    eax,0xcea6ba13
  41c574:	mov    bl,0x61
  41c576:	and    DWORD PTR [si],ebp
  41c579:	lock mov dh,0x38
  41c57c:	pop    ecx
  41c57d:	clc    
  41c57e:	inc    ebp
  41c57f:	xor    BYTE PTR [esi-0xa],ch
  41c582:	(bad)  
  41c583:	out    dx,al
  41c584:	pushf  
  41c585:	outs   dx,DWORD PTR ds:[esi]
  41c586:	leave  
  41c587:	pusha  
  41c588:	popa   
  41c589:	sbb    ecx,ebp
  41c58b:	add    bl,BYTE PTR ds:0x55cb5357
  41c591:	jno    0x41c563
  41c593:	sti    
  41c594:	cmp    DWORD PTR [edx],0xfffffffb
  41c597:	mov    DWORD PTR [edi-0x2617609d],esi
  41c59d:	loope  0x41c5e0
  41c59f:	cmp    DWORD PTR [ecx-0x73fcf59d],0x38
  41c5a6:	(bad)  
  41c5a8:	ja     0x41c5ff
  41c5aa:	lds    ebx,FWORD PTR [edi+0x46]
  41c5ad:	mov    ds:0xf759c74,al
  41c5b2:	arpl   si,si
  41c5b4:	jae    0x41c581
  41c5b6:	sti    
  41c5b7:	stos   BYTE PTR es:[edi],al
  41c5b8:	push   cs
  41c5b9:	and    al,0xf5
  41c5bb:	adc    al,0xc5
  41c5bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5be:	in     eax,0xc3
  41c5c0:	push   0x8773b3e6
  41c5c5:	pop    eax
  41c5c6:	adc    bh,bh
  41c5c8:	addr16 jmp 0xf908:0x87c66924
  41c5d0:	pop    edx
  41c5d1:	cld    
  41c5d2:	aam    0x87
  41c5d4:	loopne 0x41c5c3
  41c5d6:	dec    edi
  41c5d7:	dec    ecx
  41c5d8:	hlt    
  41c5d9:	sbb    al,0xb6
  41c5db:	out    dx,al
  41c5dc:	adc    eax,0xf4e0c60d
  41c5e1:	add    ah,dh
  41c5e3:	xor    ah,BYTE PTR [ebx+0x1a]
  41c5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5e7:	mov    edi,0xcd19b537
  41c5ec:	aas    
  41c5ed:	nop
  41c5ee:	add    eax,0xbf1f1f0d
  41c5f3:	dec    edi
  41c5f4:	push   esi
  41c5f5:	or     edx,DWORD PTR [esi+0x39]
  41c5f8:	sbb    ebp,DWORD PTR [edx+0x1e387f0a]
  41c5fe:	repz (bad) 
  41c600:	fdivr  QWORD PTR [edi]
  41c602:	push   ebx
  41c603:	push   0x6a
  41c605:	pop    ss
  41c606:	jmp    0xe81b:0xfd20da1d
  41c60d:	es jge 0x41c68e
  41c610:	add    BYTE PTR [eax],al
  41c612:	shl    BYTE PTR [eax-0x5a],cl
  41c615:	fwait
  41c616:	cs sbb edi,edx
  41c619:	cmp    DWORD PTR [eax-0x13577f6a],0xffffffbe
  41c620:	sar    BYTE PTR [ecx+0x4],cl
  41c623:	(bad)  
  41c624:	(bad)  
  41c625:	add    ebx,ebp
  41c627:	or     bh,ch
  41c629:	sub    BYTE PTR [eax-0x1558085f],0x4f
  41c630:	pop    edi
  41c631:	pusha  
  41c632:	iret   
  41c633:	mov    bl,0x3e
  41c635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c636:	adc    eax,0xf6cce570
  41c63b:	in     eax,0x65
  41c63d:	adc    eax,0xc54689a0
  41c642:	sbb    eax,0xb57db0ef
  41c647:	add    BYTE PTR [eax+0x17],cl
  41c64a:	outs   dx,DWORD PTR ds:[esi]
  41c64b:	sub    BYTE PTR [esi+0x39],0xe5
  41c64f:	lds    eax,FWORD PTR [esi-0x77692695]
  41c655:	idiv   DWORD PTR [edi-0x5f]
  41c658:	mov    bl,0x10
  41c65a:	jmp    0xe749:0x585f973
  41c661:	imul   edi,esp,0x17
  41c664:	jae    0x41c646
  41c666:	sub    al,0xc4
  41c668:	aad    0xe7
  41c66a:	jg     0x41c6c3
  41c66c:	loopne 0x41c67d
  41c66e:	inc    edx
  41c66f:	fwait
  41c670:	xchg   edx,eax
  41c671:	jne    0x41c664
  41c673:	mov    al,ds:0x5446e277
  41c678:	jo     0x41c640
  41c67a:	mov    edx,0x4b8268fe
  41c67f:	inc    edx
  41c680:	cdq    
  41c681:	push   ebp
  41c682:	in     al,0xac
  41c684:	inc    esp
  41c685:	and    al,0xad
  41c687:	repnz mov WORD PTR ds:0xe17888d5,gs
  41c68e:	sbb    bh,0xa9
  41c691:	or     al,0x7a
  41c693:	inc    ebp
  41c694:	push   0x70
  41c696:	outs   dx,DWORD PTR ds:[esi]
  41c697:	jb     0x41c66c
  41c699:	mov    edi,0x74049dfd
  41c69e:	push   cs
  41c69f:	lods   eax,DWORD PTR ds:[esi]
  41c6a0:	(bad)  
  41c6a1:	lock mov DWORD PTR [ecx],ebp
  41c6a4:	adc    al,0x10
  41c6a6:	popa   
  41c6a7:	stos   BYTE PTR es:[edi],al
  41c6a8:	daa    
  41c6a9:	adc    BYTE PTR [ecx+0x48dd93a5],bh
  41c6af:	mov    WORD PTR [edx],ds
  41c6b1:	jae    0x41c6a0
  41c6b3:	push   0x2
  41c6b5:	cmp    DWORD PTR [edi+0x1fe7e3fc],ecx
  41c6bb:	xor    BYTE PTR [edi+0x7a],bl
  41c6be:	push   ds
  41c6bf:	cmp    al,0x8
  41c6c1:	ret    
  41c6c2:	outs   dx,DWORD PTR ds:[esi]
  41c6c3:	mov    ds:0x9329d216,al
  41c6c8:	mov    eax,0x8bd7fdf
  41c6cd:	pop    ebp
  41c6ce:	mov    edi,0x755fb23c
  41c6d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6d4:	dec    ebx
  41c6d5:	pop    ebx
  41c6d6:	mov    ah,0x82
  41c6d8:	sbb    cl,BYTE PTR [ecx+eax*2-0x619a5ebe]
  41c6df:	int3   
  41c6e0:	push   0xde702480
  41c6e5:	std    
  41c6e6:	mov    edx,0xaa668f95
  41c6eb:	gs pushf 
  41c6ed:	adc    BYTE PTR ds:0x166dbb16,dl
  41c6f3:	add    BYTE PTR [eax*8-0x4ad63be],cl
  41c6fa:	sahf   
  41c6fb:	jge    0x41c702
  41c6fd:	test   al,0x23
  41c6ff:	jno    0x41c72a
  41c701:	sub    esi,ebp
  41c703:	pop    ecx
  41c704:	mov    edi,DWORD PTR [ebx+0x49d607d6]
  41c70a:	out    0xb9,eax
  41c70c:	xchg   ebp,eax
  41c70d:	push   0x3d
  41c70f:	sti    
  41c710:	mov    dl,0xd4
  41c712:	(bad)  
  41c713:	in     al,0xc1
  41c715:	dec    esi
  41c716:	repz aaa 
  41c718:	fs mov bl,0x85
  41c71b:	and    al,0x3e
  41c71d:	mov    esi,0xfe780e5e
  41c722:	adc    DWORD PTR [eax],esi
  41c724:	nop
  41c725:	mov    al,ds:0x6a088182
  41c72a:	adc    cl,BYTE PTR [ebx+0x3c]
  41c72d:	jno    0x41c72e
  41c72f:	inc    edx
  41c730:	fnstsw ax
  41c732:	jns    0x41c7a8
  41c734:	das    
  41c735:	enter  0x63a3,0x52
  41c739:	pop    edi
  41c73a:	mov    esi,0x7fe5dd9
  41c73f:	jo     0x41c70e
  41c741:	cmp    BYTE PTR [ecx],dl
  41c743:	sbb    BYTE PTR [ebx],dh
  41c745:	je     0x41c773
  41c747:	xor    cl,dl
  41c749:	and    al,0xef
  41c74b:	xor    eax,0x3f25dfeb
  41c750:	jns    0x41c753
  41c752:	aaa    
  41c753:	push   esp
  41c754:	clc    
  41c755:	xchg   edx,eax
  41c756:	lods   al,BYTE PTR ds:[esi]
  41c757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c758:	adc    DWORD PTR ds:0x741035d,esp
  41c75e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c75f:	pop    ss
  41c760:	cdq    
  41c761:	or     eax,0x54c76ea3
  41c766:	jbe    0x41c781
  41c768:	sti    
  41c769:	sbb    DWORD PTR [esi],esi
  41c76b:	iret   
  41c76c:	or     ch,bl
  41c76e:	pop    edx
  41c76f:	fdivrp st(3),st
  41c771:	lds    ebp,FWORD PTR [edx-0x45]
  41c774:	pusha  
  41c775:	jmp    0xf352cc4e
  41c77a:	ds out 0x28,eax
  41c77d:	neg    BYTE PTR [ecx+0x5]
  41c780:	popa   
  41c781:	xchg   ebp,eax
  41c782:	mov    WORD PTR [esi],es
  41c784:	bound  eax,QWORD PTR [ebp-0x43]
  41c787:	aam    0xea
  41c789:	jmp    DWORD PTR [ecx+0x3bf6e634]
  41c78f:	xchg   DWORD PTR [ecx],edx
  41c791:	in     al,dx
  41c792:	stos   DWORD PTR es:[edi],eax
  41c793:	rcl    BYTE PTR ds:[ebx+0x5831ef74],1
  41c79a:	mov    bh,0x6d
  41c79c:	push   ecx
  41c79d:	add    eax,ebx
  41c79f:	push   es
  41c7a0:	jge    0x41c7d0
  41c7a2:	jle    0x41c7e3
  41c7a4:	xchg   DWORD PTR [esi],edx
  41c7a6:	pushf  
  41c7a7:	jecxz  0x41c80f
  41c7a9:	dec    edi
  41c7aa:	mov    esi,0xccb1118a
  41c7af:	sbb    DWORD PTR [edi-0x22e39097],ebp
  41c7b5:	or     esi,DWORD PTR [esi+0x25456d13]
  41c7bb:	xchg   bh,dl
  41c7bd:	mov    esi,0x54d3649b
  41c7c2:	mov    dh,bl
  41c7c4:	or     ch,cl
  41c7c6:	sbb    DWORD PTR [ebx],ecx
  41c7c8:	sub    ah,BYTE PTR [esi]
  41c7ca:	fidivr DWORD PTR [eax-0x2af791c0]
  41c7d0:	mov    bl,0xa9
  41c7d2:	xchg   ebx,eax
  41c7d3:	test   BYTE PTR [esi],bh
  41c7d5:	aaa    
  41c7d6:	loope  0x41c7d3
  41c7d8:	jo     0x41c852
  41c7da:	retf   
  41c7db:	lock sar bh,1
  41c7de:	add    eax,0x5a403ec1
  41c7e3:	mov    dh,0x99
  41c7e5:	xor    al,0x64
  41c7e7:	outs   dx,BYTE PTR ds:[esi]
  41c7e8:	mov    al,0x37
  41c7ea:	mov    gs,WORD PTR [ecx-0x10f24ca0]
  41c7f0:	xchg   DWORD PTR [esi+0x10],esp
  41c7f3:	lods   al,BYTE PTR ds:[esi]
  41c7f4:	lahf   
  41c7f5:	sahf   
  41c7f6:	adc    al,0xcd
  41c7f8:	inc    esi
  41c7f9:	dec    esi
  41c7fa:	retf   
  41c7fb:	add    eax,0x7af9c2d5
  41c800:	das    
  41c801:	mov    BYTE PTR [edi-0x63],0x6c
  41c805:	ja     0x41c87b
  41c807:	adc    DWORD PTR [esi-0x6aa1594b],esp
  41c80d:	iret   
  41c80e:	mov    edi,0xe38cc4a6
  41c813:	mov    edx,0xc1482dee
  41c818:	ja     0x41c88f
  41c81a:	shl    BYTE PTR [esi+0x68],cl
  41c81d:	jnp    0x41c80c
  41c81f:	adc    al,BYTE PTR [eax]
  41c821:	xchg   edx,eax
  41c822:	cs aaa 
  41c824:	frstor es:[ebp+0x11]
  41c828:	adc    edi,DWORD PTR [edi-0x3f]
  41c82b:	push   es
  41c82c:	inc    edi
  41c82d:	push   0xecfbb069
  41c832:	push   es
  41c833:	inc    edx
  41c834:	adc    BYTE PTR [edi-0x506d46ad],bh
  41c83a:	nop
  41c83b:	adc    al,0x38
  41c83d:	stos   BYTE PTR es:[edi],al
  41c83e:	adc    ch,al
  41c840:	xor    DWORD PTR [edi+0x1f],ebp
  41c843:	pushf  
  41c844:	and    al,0xa2
  41c846:	outs   dx,BYTE PTR ds:[esi]
  41c847:	pop    ss
  41c848:	mov    ds:0x5e31e183,eax
  41c84d:	int    0xc2
  41c84f:	adc    BYTE PTR [edx+0x2d7680bc],0x7e
  41c856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c857:	xchg   BYTE PTR [esi],dl
  41c859:	test   bl,dl
  41c85b:	pop    edi
  41c85c:	sbb    al,0x88
  41c85e:	cmp    al,0x5f
  41c860:	and    DWORD PTR [esp+esi*4-0x55badc44],0xffffff83
  41c868:	scas   eax,DWORD PTR es:[edi]
  41c869:	push   ebp
  41c86a:	push   ss
  41c86b:	les    ebx,FWORD PTR [edi-0x7c3d905c]
  41c871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c872:	(bad)  
  41c873:	cmc    
  41c874:	clc    
  41c875:	add    BYTE PTR [esi+eiz*8+0x3e],ah
  41c879:	icebp  
  41c87a:	aas    
  41c87b:	ror    BYTE PTR [eax+0x70b19e9e],0x5
  41c882:	out    dx,al
  41c883:	add    bl,BYTE PTR [ebp-0x7a]
  41c886:	aaa    
  41c887:	into   
  41c888:	push   edi
  41c889:	push   esp
  41c88a:	mov    al,ds:0x4e36356d
  41c88f:	sub    edx,DWORD PTR [edi+0x3fcba61]
  41c895:	scas   al,BYTE PTR es:[edi]
  41c896:	cmp    BYTE PTR [esi+0x3b3e868a],dh
  41c89c:	pop    eax
  41c89d:	fidiv  WORD PTR [edx-0x1]
  41c8a0:	int3   
  41c8a1:	jb     0x41c882
  41c8a3:	sti    
  41c8a4:	bound  esp,QWORD PTR [eax+0x60449dc7]
  41c8aa:	mov    al,ds:0x8c5bf7a0
  41c8af:	test   al,0xec
  41c8b2:	push   eax
  41c8b3:	jne    0x41c907
  41c8b5:	xor    al,0x5c
  41c8b7:	cmp    ecx,ecx
  41c8b9:	mov    ecx,0xb383fbe9
  41c8be:	stos   BYTE PTR es:[edi],al
  41c8bf:	dec    ebx
  41c8c0:	pop    ebx
  41c8c1:	loop   0x41c8a9
  41c8c3:	xchg   ebp,eax
  41c8c4:	sub    DWORD PTR ds:0xc445d93,esi
  41c8ca:	fadd   DWORD PTR [ebp-0x19]
  41c8cd:	inc    esi
  41c8ce:	fstp   st(1)
  41c8d0:	pop    ecx
  41c8d1:	inc    ebp
  41c8d2:	add    BYTE PTR [ecx],bh
  41c8d4:	lock imul esp,DWORD PTR [ecx],0xffffffd3
  41c8d8:	mov    edx,0x7dcd7f2b
  41c8dd:	sub    BYTE PTR [edx+0x34f14210],dl
  41c8e3:	inc    ebx
  41c8e4:	mov    esi,0x7637a313
  41c8e9:	mov    esi,0x54bb39d1
  41c8ee:	fs aas 
  41c8f0:	and    ebp,eax
  41c8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8f3:	pop    edi
  41c8f4:	cli    
  41c8f5:	xor    ebx,DWORD PTR [ebx-0x49]
  41c8f8:	and    BYTE PTR [edi+0x2c],bh
  41c8fb:	popa   
  41c8fc:	(bad)  
  41c8fd:	jno    0x41c91e
  41c8ff:	mov    ch,0xd0
  41c901:	int    0xd2
  41c903:	scas   eax,DWORD PTR es:[edi]
  41c904:	cmp    DWORD PTR [ebx+edx*8-0x78],ebp
  41c908:	xor    cl,bh
  41c90a:	push   edi
  41c90b:	mov    BYTE PTR [ecx+0x31],ah
  41c90e:	mov    edi,DWORD PTR [esi]
  41c910:	retw   
  41c912:	call   0xad83:0x98f11d03
  41c919:	call   0xc8af4b0e
  41c91e:	and    cl,BYTE PTR [esi+0x3]
  41c921:	xchg   ebx,eax
  41c922:	xchg   esp,eax
  41c923:	repnz (bad) 
  41c925:	aad    0xa5
  41c927:	out    0xcb,eax
  41c929:	xlat   BYTE PTR ds:[ebx]
  41c92a:	scas   al,BYTE PTR es:[edi]
  41c92b:	arpl   si,dx
  41c92d:	cld    
  41c92e:	cdq    
  41c92f:	mov    edi,0x39fabb85
  41c934:	add    DWORD PTR [ecx+0x227db497],esp
  41c93a:	push   edx
  41c93b:	mov    bh,0xe6
  41c93d:	jno    0x41c93d
  41c93f:	idiv   BYTE PTR [ebx]
  41c941:	xchg   edi,eax
  41c942:	xchg   esi,eax
  41c943:	jp     0x41c96a
  41c945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c946:	push   ebx
  41c947:	test   eax,0xf21d372b
  41c94c:	xadd   ch,ah
  41c94f:	imul   edx,DWORD PTR [edx],0x63a60031
  41c955:	sbb    ebp,edi
  41c957:	lods   eax,DWORD PTR ds:[esi]
  41c958:	fisubr DWORD PTR [eax]
  41c95a:	mov    edi,0x1639d444
  41c95f:	sub    eax,ebp
  41c961:	push   ebp
  41c962:	sbb    al,0x2d
  41c964:	ins    BYTE PTR es:[edi],dx
  41c965:	jecxz  0x41c9af
  41c967:	mov    eax,0xcea8da43
  41c96c:	ss scas eax,DWORD PTR es:[edi]
  41c96e:	pop    esi
  41c96f:	jno    0x41c900
  41c971:	inc    esi
  41c972:	lea    ecx,[edi+0x4413b7ac]
  41c978:	cmp    eax,0x4f164eb9
  41c97d:	cmp    dl,al
  41c97f:	dec    ebx
  41c980:	xor    ch,BYTE PTR [edx+esi*8+0x67]
  41c984:	cmp    ebp,esp
  41c986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c987:	cmp    eax,0x3604e698
  41c98c:	(bad)  
  41c98d:	mov    edx,0x4584107d
  41c992:	inc    edx
  41c993:	popa   
  41c994:	imul   ecx,DWORD PTR [edi+ebx*2-0x63],0x59
  41c999:	scas   al,BYTE PTR es:[edi]
  41c99a:	add    al,0xae
  41c99c:	retf   0x86de
  41c99f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41c9a1:	lea    ebx,[edx]
  41c9a3:	mov    edi,0xf78be7bf
  41c9a8:	mov    dl,BYTE PTR [ebx-0x74b93068]
  41c9ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9af:	out    0x4c,eax
  41c9b1:	jmp    0x41c9a6
  41c9b3:	fcom   QWORD PTR [ebp+eiz*4-0x3b9e99ca]
  41c9ba:	cmp    WORD PTR [edi+ecx*2+0x12],ax
  41c9bf:	push   ecx
  41c9c0:	jle    0x41ca2f
  41c9c2:	adc    BYTE PTR [eax+0x60951975],dh
  41c9c8:	jno    0x41c9cb
  41c9ca:	fwait
  41c9cb:	dec    eax
  41c9cc:	les    edi,FWORD PTR [eax+0x19]
  41c9cf:	scas   al,BYTE PTR es:[edi]
  41c9d0:	rol    BYTE PTR [ebx+ebp*8],1
  41c9d3:	add    eax,0xe37a8a3b
  41c9d8:	sub    eax,0x478d77d7
  41c9dd:	mov    ds,WORD PTR [ebp+0x22b40b12]
  41c9e3:	jecxz  0x41c9c2
  41c9e5:	cmp    al,0x7e
  41c9e7:	xor    DWORD PTR [ebx],edx
  41c9e9:	or     ebp,DWORD PTR [esi-0x4b]
  41c9ec:	mov    WORD PTR [ebx+esi*2+0x65],gs
  41c9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9f1:	enter  0x25b1,0xa8
  41c9f5:	cmp    eax,0xee75f72c
  41c9fa:	leave  
  41c9fb:	xchg   ecx,eax
  41c9fc:	xchg   esp,eax
  41c9fd:	sub    al,0xb1
  41c9ff:	pusha  
  41ca00:	push   cs
  41ca01:	dec    edx
  41ca02:	iret   
  41ca03:	sub    DWORD PTR [ebx],eax
  41ca05:	or     edi,DWORD PTR [eax+0x6f]
  41ca08:	or     cl,BYTE PTR [esi]
  41ca0a:	mov    eax,ds:0xa4efefab
  41ca0f:	sub    DWORD PTR [eax-0x37ad524f],eax
  41ca15:	addr16 and al,0x6f
  41ca18:	stos   DWORD PTR es:[edi],eax
  41ca19:	ins    BYTE PTR es:[edi],dx
  41ca1a:	mov    ah,BYTE PTR [edi+0x2319dd34]
  41ca20:	adc    al,BYTE PTR [ecx-0x53]
  41ca23:	lods   al,BYTE PTR ds:[esi]
  41ca24:	pop    edi
  41ca25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca26:	fild   WORD PTR [esi-0x470a28c8]
  41ca2c:	loopne 0x41ca74
  41ca2e:	scas   al,BYTE PTR es:[edi]
  41ca2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca30:	xchg   esi,eax
  41ca31:	add    al,0x60
  41ca33:	int3   
  41ca34:	and    BYTE PTR [esi+0x462e6114],bh
  41ca3a:	or     eax,0x49f4ebda
  41ca3f:	pop    esi
  41ca40:	xor    al,cl
  41ca42:	lds    esp,FWORD PTR [edx+eiz*4]
  41ca45:	push   es
  41ca46:	push   edx
  41ca47:	pop    eax
  41ca48:	arpl   WORD PTR [ecx+0x1343fe5d],bp
  41ca4e:	stos   BYTE PTR es:[edi],al
  41ca4f:	mov    WORD PTR [esi+ebp*2-0x31fd902b],ds
  41ca56:	xchg   ebx,eax
  41ca57:	push   ss
  41ca58:	add    edx,esi
  41ca5a:	fistp  DWORD PTR [eax+0x3b8b9677]
  41ca60:	jle    0x41ca28
  41ca62:	ds into 
  41ca64:	ret    0xfec6
  41ca67:	cwde   
  41ca68:	scas   al,BYTE PTR es:[edi]
  41ca69:	fisubr WORD PTR [edi+0x6d70368c]
  41ca6f:	dec    edx
  41ca70:	cmp    eax,0x67b66c69
  41ca75:	imul   ebx,ebx,0x2c3b3b56
  41ca7b:	xchg   edi,ecx
  41ca7d:	fwait
  41ca7e:	imul   ebp,eax,0x956533ec
  41ca84:	pop    ds
  41ca85:	test   al,0x81
  41ca87:	int3   
  41ca88:	add    bl,BYTE PTR [esp+ebx*8-0x55afc204]
  41ca8f:	adc    dh,BYTE PTR [ecx]
  41ca91:	sahf   
  41ca92:	or     DWORD PTR [edx-0x7ba32c09],esi
  41ca98:	lds    edx,FWORD PTR [ebx+ebp*2+0x47]
  41ca9c:	out    dx,al
  41ca9d:	ins    BYTE PTR es:[edi],dx
  41ca9e:	gs scas eax,DWORD PTR es:[edi]
  41caa0:	popf   
  41caa1:	mov    ah,0x52
  41caa3:	stc    
  41caa4:	dec    ebp
  41caa5:	or     DWORD PTR [esi-0x50],esi
  41caa8:	rcr    DWORD PTR ds:0x99303160,0x8a
  41caaf:	xchg   DWORD PTR [ebx-0x6d],ebp
  41cab2:	stos   DWORD PTR es:[edi],eax
  41cab3:	retf   
  41cab4:	jmp    0xfca2:0xd3162c64
  41cabb:	fcom   st(1)
  41cabd:	gs (bad) 
  41cabf:	in     eax,dx
  41cac0:	jecxz  0x41cad0
  41cac2:	or     eax,ecx
  41cac4:	ds push ecx
  41cac6:	call   0x95a3:0x4d2ec9b2
  41cacd:	sub    BYTE PTR [edi+0x1d],0x82
  41cad1:	jmp    0x41cae7
  41cad3:	and    ch,dl
  41cad5:	mov    bh,0xc6
  41cad7:	cs fcom st(6)
  41cada:	jp     0x41cb07
  41cadc:	push   ds
  41cadd:	or     BYTE PTR [ebx+0x45],cl
  41cae0:	dec    edx
  41cae1:	jno    0x41cabe
  41cae3:	call   0xd370:0x7940693a
  41caea:	imul   edx,DWORD PTR [ebp+0x44],0x1565bf2b
  41caf1:	mov    dh,0x23
  41caf3:	pop    edx
  41caf4:	jnp    0x41cb2a
  41caf6:	inc    ebp
  41caf7:	jg     0x41cb52
  41caf9:	xor    BYTE PTR ds:0xbbf0f299,bl
  41caff:	dec    esi
  41cb00:	ja     0x41caa2
  41cb02:	scas   al,BYTE PTR es:[edi]
  41cb03:	fmul   QWORD PTR [edi-0x610e379a]
  41cb09:	adc    eax,DWORD PTR [eax+0x7a]
  41cb0c:	enter  0x307d,0x86
  41cb10:	aam    0xb
  41cb12:	loop   0x41cb7e
  41cb14:	in     eax,dx
  41cb15:	inc    ebx
  41cb16:	xchg   edi,eax
  41cb17:	jg     0x41cabc
  41cb19:	jne    0x41cb91
  41cb1b:	jge    0x41cb32
  41cb1d:	or     eax,DWORD PTR [ebp+0x19c501ce]
  41cb23:	jge    0x41cb8e
  41cb25:	jmp    0xed16:0xeb428445
  41cb2c:	mov    bh,BYTE PTR [edx+ebx*2-0xfe6492a]
  41cb33:	mov    es:0xbdb17d7f,al
  41cb39:	shl    DWORD PTR [eax],cl
  41cb3b:	test   al,0x10
  41cb3d:	xchg   esp,eax
  41cb3e:	addr16 push 0x6aed95b9
  41cb44:	xchg   esp,eax
  41cb45:	xor    bh,BYTE PTR [ecx+0x3cc2ecac]
  41cb4b:	or     al,0x46
  41cb4d:	(bad)  
  41cb4e:	in     al,0x5b
  41cb50:	jmp    0x3724:0xf75c2f74
  41cb57:	or     BYTE PTR [eax],ah
  41cb59:	cwde   
  41cb5a:	sub    al,0xd7
  41cb5c:	mov    DWORD PTR [ebp+edx*8-0x395c3a5a],esp
  41cb63:	or     al,0xcb
  41cb65:	sbb    cl,BYTE PTR [ebp+0xd]
  41cb68:	aad    0xac
  41cb6a:	iret   
  41cb6b:	adc    DWORD PTR [eax+ecx*8+0x55f6ca5e],ebp
  41cb72:	xor    eax,0x1bf52da6
  41cb77:	jno    0x41cb10
  41cb79:	stos   BYTE PTR es:[edi],al
  41cb7a:	jle    0x41cbbe
  41cb7c:	and    eax,0xca583eb3
  41cb81:	iret   
  41cb82:	je     0x41cbd9
  41cb84:	push   cs
  41cb85:	xor    eax,0x854ffae6
  41cb8a:	aas    
  41cb8b:	shl    BYTE PTR [esi-0x34f0986d],cl
  41cb91:	pusha  
  41cb92:	jp     0x41cb99
  41cb94:	push   esi
  41cb95:	sar    ch,cl
  41cb97:	push   edi
  41cb98:	adc    BYTE PTR [ecx+0x418bcc3c],al
  41cb9e:	add    al,0xba
  41cba0:	cld    
  41cba1:	jecxz  0x41cc03
  41cba3:	cli    
  41cba4:	daa    
  41cba5:	aam    0x51
  41cba7:	push   0xffffff8d
  41cba9:	sub    esp,DWORD PTR [ecx-0x5611d9e9]
  41cbaf:	es daa 
  41cbb1:	jp     0x41cbc0
  41cbb3:	cmc    
  41cbb4:	jno    0x41cb6d
  41cbb6:	rcr    DWORD PTR [eax-0x689d6ab6],1
  41cbbc:	shl    DWORD PTR [ebp-0x2d46d3be],cl
  41cbc2:	add    DWORD PTR [edx-0x7c],edx
  41cbc5:	std    
  41cbc6:	mov    ds:0xc0023679,al
  41cbcb:	call   0x5ac8:0x94b5f5a2
  41cbd2:	adc    dl,BYTE PTR [edx-0x22]
  41cbd5:	in     al,0xf9
  41cbd7:	out    0x71,eax
  41cbd9:	mov    ebx,0xb821ff87
  41cbde:	dec    eax
  41cbdf:	jo     0x41cbb6
  41cbe1:	xchg   ebx,eax
  41cbe2:	retf   
  41cbe3:	dec    eax
  41cbe4:	mov    ds,ebx
  41cbe6:	push   edi
  41cbe7:	jns    0x41cbf1
  41cbe9:	jbe    0x41cba1
  41cbeb:	inc    ebx
  41cbec:	das    
  41cbed:	mov    DWORD PTR [ebx],esp
  41cbef:	lods   al,BYTE PTR ds:[esi]
  41cbf0:	frstor [ebp-0x335fc16a]
  41cbf6:	sbb    al,0x80
  41cbf8:	sub    DWORD PTR [edx],edx
  41cbfa:	pusha  
  41cbfb:	sbb    BYTE PTR [ecx+0x23],0x44
  41cbff:	or     eax,0xea6ab85c
  41cc04:	xor    dh,BYTE PTR [eax-0x23286b59]
  41cc0a:	loope  0x41cc60
  41cc0c:	mov    ch,0xed
  41cc0e:	inc    esp
  41cc0f:	pusha  
  41cc10:	pop    ds
  41cc11:	add    al,0xb
  41cc13:	adc    edx,0xffffffbf
  41cc16:	fisubr DWORD PTR [eax+0x64a1e8eb]
  41cc1c:	mov    ah,0x4c
  41cc1e:	cmp    ah,dh
  41cc20:	add    dl,BYTE PTR [edi-0x32]
  41cc23:	into   
  41cc24:	in     eax,0xd4
  41cc26:	(bad)  
  41cc27:	lods   eax,DWORD PTR ds:[esi]
  41cc28:	mov    ds:0x2f73f99a,eax
  41cc2d:	loope  0x41cca2
  41cc2f:	add    DWORD PTR [edi],esp
  41cc31:	js     0x41cc9d
  41cc33:	mov    dl,0x6f
  41cc35:	stos   DWORD PTR es:[edi],eax
  41cc36:	sti    
  41cc37:	pop    ebp
  41cc38:	test   eax,0x1fb95edb
  41cc3d:	and    ecx,ecx
  41cc3f:	push   ds
  41cc40:	lods   al,BYTE PTR ds:[esi]
  41cc41:	test   DWORD PTR ds:0x1dfb5136,ebp
  41cc47:	lea    ecx,[ebx+ebp*1-0x6139d58c]
  41cc4e:	(bad)  
  41cc4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc50:	mov    edx,0xd4a96db0
  41cc55:	mov    ch,0x8b
  41cc57:	or     al,0x1f
  41cc59:	dec    eax
  41cc5a:	aad    0xc7
  41cc5c:	pop    es
  41cc5d:	ja     0x41cc7a
  41cc5f:	mov    ds:0x39fa2604,al
  41cc64:	ret    
  41cc65:	push   ecx
  41cc66:	inc    esi
  41cc67:	adc    al,0x21
  41cc69:	cdq    
  41cc6a:	daa    
  41cc6b:	or     esp,ebp
  41cc6d:	shl    DWORD PTR [eax+0x20703902],0xd4
  41cc74:	aad    0xda
  41cc76:	(bad)  
  41cc77:	push   0xffffffe9
  41cc79:	(bad)  
  41cc7a:	dec    esp
  41cc7b:	lock pop eax
  41cc7d:	inc    esi
  41cc7e:	neg    DWORD PTR [edi+0x3a0df16d]
  41cc84:	hlt    
  41cc85:	sti    
  41cc86:	je     0x41cc93
  41cc88:	or     al,0x67
  41cc8a:	(bad)  
  41cc8b:	fcmovbe st,st(4)
  41cc8d:	daa    
  41cc8e:	pop    ebx
  41cc8f:	or     eax,DWORD PTR [eax]
  41cc91:	rcl    cl,1
  41cc93:	and    bh,BYTE PTR [esi]
  41cc95:	(bad)  
  41cc96:	mov    esi,0x4b5d6d32
  41cc9b:	xchg   edx,eax
  41cc9c:	mov    edx,0x6e1430a4
  41cca1:	rcr    BYTE PTR [ebp+edi*4-0x67],0x53
  41cca6:	jmp    0xbdf87a26
  41ccab:	(bad)  
  41ccac:	addr16 retw 
  41ccaf:	js     0x41cc98
  41ccb1:	inc    ebx
  41ccb2:	aaa    
  41ccb3:	(bad)  
  41ccb5:	popf   
  41ccb6:	std    
  41ccb7:	ss add eax,0x5bb07971
  41ccbd:	mov    ch,0x9c
  41ccbf:	cmp    eax,0xf2aae96e
  41ccc4:	leave  
  41ccc5:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccc7:	inc    ebx
  41ccc8:	sbb    esp,DWORD PTR [edi-0x41bf588b]
  41ccce:	pop    ds
  41cccf:	rcr    DWORD PTR [ecx+0x2f],1
  41ccd2:	xchg   ecx,eax
  41ccd3:	cs stc 
  41ccd5:	dec    eax
  41ccd6:	add    DWORD PTR [edi],0xffffff99
  41ccd9:	xchg   ebx,eax
  41ccda:	stos   BYTE PTR es:[edi],al
  41ccdb:	inc    edi
  41ccdc:	xchg   ebp,eax
  41ccdd:	inc    ecx
  41ccde:	mov    eax,0x7dbcab66
  41cce3:	jbe    0x41ccd9
  41cce5:	mov    ecx,0xa4c372f6
  41ccea:	adc    eax,0xb250e09e
  41ccef:	sub    eax,0xbc7786d0
  41ccf4:	int3   
  41ccf5:	shl    BYTE PTR [esi+edi*2-0x1b76661e],cl
  41ccfc:	pop    ebp
  41ccfd:	push   0x3d
  41ccff:	or     eax,DWORD PTR [esi-0x57]
  41cd02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd03:	pop    ss
  41cd04:	xchg   DWORD PTR [eax-0xb],edx
  41cd07:	sub    bl,BYTE PTR es:[edi-0x31]
  41cd0b:	cmp    esi,ebx
  41cd0d:	sbb    bl,BYTE PTR [edi]
  41cd0f:	mov    dh,0xae
  41cd11:	pop    esp
  41cd12:	sub    dh,BYTE PTR [esi]
  41cd14:	jno    0x41cd84
  41cd16:	jmp    0xd727:0x9c06dc81
  41cd1d:	repnz adc esp,DWORD PTR [edi-0x3d]
  41cd21:	popa   
  41cd22:	sbb    bh,cl
  41cd24:	ds sahf 
  41cd26:	sti    
  41cd27:	and    al,0xbf
  41cd29:	add    esp,eax
  41cd2b:	pop    ds
  41cd2c:	aas    
  41cd2d:	xchg   edx,eax
  41cd2e:	push   ss
  41cd2f:	rcl    DWORD PTR [edx+0x5c6877e3],1
  41cd35:	adc    al,0x83
  41cd37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd39:	call   0x73e40a6a
  41cd3e:	aas    
  41cd3f:	loopne 0x41cd51
  41cd41:	retf   0x917e
  41cd44:	outs   dx,BYTE PTR ds:[esi]
  41cd45:	mov    ebp,0x1ad61ed0
  41cd4a:	fadd   DWORD PTR ds:0xb9a31291
  41cd50:	stos   BYTE PTR es:[edi],al
  41cd51:	inc    eax
  41cd52:	scas   al,BYTE PTR es:[edi]
  41cd53:	es into 
  41cd55:	aaa    
  41cd56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd57:	arpl   WORD PTR [ecx+0x1b3988e2],dx
  41cd5d:	mov    al,0x15
  41cd5f:	ins    BYTE PTR es:[edi],dx
  41cd60:	inc    esp
  41cd61:	mov    al,ds:0xeb76b2e7
  41cd66:	nop
  41cd67:	lock loop 0x41cd11
  41cd6a:	cmc    
  41cd6b:	in     al,dx
  41cd6c:	sti    
  41cd6d:	push   eax
  41cd6f:	add    esi,DWORD PTR [edx]
  41cd71:	in     eax,0xc8
  41cd73:	in     al,0x74
  41cd75:	adc    eax,0x3df9007a
  41cd7a:	push   ebp
  41cd7b:	cmp    BYTE PTR [edx+0xa],0xee
  41cd7f:	scas   eax,DWORD PTR es:[edi]
  41cd80:	add    DWORD PTR ds:0x139aa081,ebp
  41cd86:	mov    cl,0x63
  41cd88:	sbb    DWORD PTR [edx+0x5183542f],edi
  41cd8e:	les    ebx,FWORD PTR [esi+0x29]
  41cd91:	adc    eax,0xeb1222d4
  41cd96:	add    ebp,DWORD PTR [edx-0x3cb6223d]
  41cd9c:	scas   eax,DWORD PTR es:[edi]
  41cd9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd9e:	loope  0x41cdcf
  41cda0:	inc    esi
  41cda1:	rol    edi,cl
  41cda3:	call   0xfc5c:0x61143b33
  41cdaa:	psraw  mm4,QWORD PTR [ebx+0x4093d15d]
  41cdb1:	mov    dh,0x7
  41cdb3:	shl    DWORD PTR [ebp-0x38e4329f],1
  41cdb9:	jae    0x41cd7b
  41cdbb:	fs mov ch,0x97
  41cdbe:	int3   
  41cdbf:	push   edi
  41cdc0:	rol    BYTE PTR [esi],1
  41cdc2:	mov    esp,DWORD PTR [eax+edi*1-0x27c8dd23]
  41cdc9:	mov    dl,0x6a
  41cdcb:	loop   0x41cddb
  41cdcd:	adc    ah,al
  41cdcf:	in     eax,0xbf
  41cdd1:	dec    esp
  41cdd2:	in     eax,0x57
  41cdd4:	(bad)  
  41cdd5:	mov    bh,0xa
  41cdd7:	pop    ecx
  41cdd8:	inc    esp
  41cdd9:	rol    dl,0xc1
  41cddc:	leave  
  41cddd:	mov    esp,0xd2cb0e88
  41cde2:	fmul   DWORD PTR [eax+0x451740fb]
  41cde8:	lods   al,BYTE PTR ds:[esi]
  41cde9:	jns    0x41ce05
  41cdeb:	mov    edx,DWORD PTR [ebx]
  41cded:	jle    0x41cd75
  41cdef:	mov    cl,0x23
  41cdf1:	fcom   QWORD PTR [esi-0x9]
  41cdf4:	mov    edx,0xefcefcf0
  41cdf9:	and    al,0xfb
  41cdfb:	mov    dl,0x30
  41cdfd:	fs ret 0x46d7
  41ce01:	dec    ecx
  41ce02:	lods   eax,DWORD PTR ds:[esi]
  41ce03:	es push ecx
  41ce05:	(bad)  
  41ce06:	aad    0x87
  41ce08:	adc    edi,ebx
  41ce0a:	pop    es
  41ce0b:	pop    ss
  41ce0c:	cmp    eax,0x98f81356
  41ce11:	pop    ebx
  41ce12:	jp     0x41ce6a
  41ce14:	je     0x41ce0a
  41ce16:	mov    esp,0x6a575f1d
  41ce1b:	aaa    
  41ce1c:	or     eax,0xb70862ba
  41ce21:	inc    eax
  41ce22:	(bad)  
  41ce23:	xchg   edi,eax
  41ce24:	jbe    0x41ce5b
  41ce26:	or     edx,DWORD PTR ds:0xa7e449e4
  41ce2c:	xchg   BYTE PTR [ecx+0x5c],dl
  41ce2f:	cli    
  41ce30:	and    al,0x89
  41ce32:	and    esp,DWORD PTR [ebx-0x2b8d70ec]
  41ce38:	cli    
  41ce39:	nop
  41ce3a:	addr16 add al,0x67
  41ce3d:	lock div DWORD PTR [ecx+0x72]
  41ce41:	jnp    0x41ce5a
  41ce43:	repz jae 0x41ce42
  41ce46:	test   al,0xaa
  41ce48:	sub    BYTE PTR [edi+0x6],bl
  41ce4b:	outs   dx,BYTE PTR ds:[esi]
  41ce4c:	push   es
  41ce4d:	outs   dx,BYTE PTR ds:[esi]
  41ce4e:	dec    edi
  41ce4f:	jg     0x41ce33
  41ce51:	pop    edx
  41ce52:	dec    eax
  41ce53:	mov    al,0x7
  41ce55:	and    DWORD PTR [esi-0x7bc0ad2d],0xffffffe2
  41ce5c:	icebp  
  41ce5d:	stos   BYTE PTR es:[edi],al
  41ce5e:	mov    ebp,0xcac48dbc
  41ce63:	mov    WORD PTR [esp+ecx*4],cs
  41ce66:	xor    DWORD PTR [ebp+0x5058b2be],ebp
  41ce6c:	cdq    
  41ce6d:	outs   dx,BYTE PTR ds:[esi]
  41ce6e:	neg    DWORD PTR [edx+ecx*1+0x5f96fa77]
  41ce75:	xchg   ecx,eax
  41ce76:	xor    ebp,DWORD PTR ds:[eax+edi*4-0x73]
  41ce7b:	fcmovu st,st(1)
  41ce7d:	and    eax,0xac23cfb
  41ce82:	retf   
  41ce83:	dec    edx
  41ce84:	dec    eax
  41ce85:	stos   BYTE PTR es:[edi],al
  41ce86:	cmp    edx,eax
  41ce88:	push   edx
  41ce89:	xchg   edi,eax
  41ce8a:	cli    
  41ce8b:	jg     0x41ce76
  41ce8d:	icebp  
  41ce8e:	push   edi
  41ce8f:	or     edx,DWORD PTR [ecx-0x13]
  41ce92:	shl    edi,0x8e
  41ce95:	inc    ebp
  41ce96:	pop    edx
  41ce97:	sar    BYTE PTR [ebx+0xe],0xe1
  41ce9b:	sar    al,cl
  41ce9d:	(bad)  
  41ce9e:	jl     0x41cf12
  41cea0:	sub    edx,DWORD PTR [eax+0x40a063f6]
  41cea6:	repnz std 
  41cea8:	std    
  41cea9:	fnstenv [edx]
  41ceab:	hlt    
  41ceac:	mov    eax,ds:0x7fae00cb
  41ceb1:	mov    DWORD PTR [edi+0x30f226ba],esi
  41ceb7:	sbb    DWORD PTR [eax+0x25cc2eb9],eax
  41cebd:	mov    al,0xfe
  41cebf:	cdq    
  41cec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cec1:	mov    ds,WORD PTR [edi]
  41cec3:	fisttp WORD PTR [ebx-0x38]
  41cec6:	scas   eax,DWORD PTR es:[edi]
  41cec7:	cld    
  41cec8:	rcr    DWORD PTR [esi],0x6a
  41cecb:	in     eax,0xfb
  41cecd:	ja     0x41ceeb
  41cecf:	(bad)  
  41ced0:	and    edi,DWORD PTR [edi+0x71dfd2df]
  41ced6:	iret   
  41ced7:	aas    
  41ced8:	nop
  41ced9:	jnp    0x41cecb
  41cedb:	push   edx
  41cedc:	js     0x41cf44
  41cede:	jne    0x41cec0
  41cee0:	iret   
  41cee1:	outs   dx,DWORD PTR ds:[esi]
  41cee2:	mov    edx,0xd7bb592f
  41cee7:	push   ss
  41cee8:	cli    
  41cee9:	cdq    
  41ceea:	xchg   ah,al
  41ceec:	xlat   BYTE PTR ds:[ebx]
  41ceed:	jno    0x41ce79
  41ceef:	pop    ebx
  41cef0:	jmp    0x41ceb0
  41cef2:	or     DWORD PTR [ebp+0x2b],ecx
  41cef5:	inc    BYTE PTR [ebx]
  41cef7:	pop    eax
  41cef8:	into   
  41cef9:	adc    cl,bh
  41cefb:	add    al,0x57
  41cefd:	mov    eax,0x6490eff8
  41cf02:	add    al,0x16
  41cf04:	mov    eax,DWORD PTR [ecx+edx*2-0x5781fff9]
  41cf0b:	pop    edx
  41cf0c:	xchg   ebp,eax
  41cf0d:	pop    ecx
  41cf0e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41cf10:	rol    BYTE PTR [edx-0x11],0x67
  41cf14:	test   eax,0x5979bbc
  41cf19:	call   0x397e12fd
  41cf1e:	call   0xf1af:0x66c59e5
  41cf25:	pop    esp
  41cf26:	call   0x658f:0x483a3873
  41cf2d:	jbe    0x41cf5a
  41cf2f:	stc    
  41cf30:	sbb    ebx,edx
  41cf32:	add    BYTE PTR ds:0xbdce46cd,cl
  41cf38:	or     edx,DWORD PTR [edi+edi*4-0x7199e2e2]
  41cf3f:	adc    eax,0x74c7c9fa
  41cf44:	jne    0x41ceed
  41cf46:	ret    0xc76e
  41cf49:	dec    esi
  41cf4a:	and    esp,DWORD PTR [eax+eiz*4-0x12]
  41cf4e:	hlt    
  41cf4f:	pop    esi
  41cf50:	lods   eax,DWORD PTR ds:[esi]
  41cf51:	mov    esp,0xdabbf4c4
  41cf56:	(bad)  
  41cf58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf59:	lds    eax,FWORD PTR [ecx+ecx*4+0x58423f8e]
  41cf60:	sub    DWORD PTR [ebp+0x17],0x7596dce0
  41cf67:	or     ch,BYTE PTR [edx]
  41cf69:	enter  0x3cc3,0x72
  41cf6d:	mov    es,WORD PTR [ebx-0x6c79a5fe]
  41cf73:	fdiv   QWORD PTR [ecx-0x17f224e3]
  41cf79:	mul    BYTE PTR [edi]
  41cf7b:	fldcw  WORD PTR [edx+0x13]
  41cf7e:	in     eax,0xbb
  41cf80:	mov    eax,0x9b4452dd
  41cf85:	dec    ecx
  41cf86:	adc    al,0xc5
  41cf88:	lods   al,BYTE PTR ds:[esi]
  41cf89:	xor    al,0xff
  41cf8b:	push   cs
  41cf8c:	loop   0x41d009
  41cf8e:	jns    0x41cf85
  41cf90:	or     dh,BYTE PTR [ebp+0x471011b8]
  41cf96:	inc    DWORD PTR [ecx-0x4e43f5ea]
  41cf9c:	jae    0x41cffe
  41cf9e:	les    eax,FWORD PTR ds:0x63fc7833
  41cfa4:	ficomp DWORD PTR [ebx]
  41cfa6:	push   ss
  41cfa7:	aas    
  41cfa8:	xchg   ebx,eax
  41cfa9:	and    al,0x6
  41cfab:	or     eax,0x1d116da9
  41cfb0:	jae    0x41d007
  41cfb2:	ret    
  41cfb3:	dec    edx
  41cfb4:	mov    ds:0x6886d547,eax
  41cfb9:	push   ecx
  41cfba:	mov    eax,ds:0xf649772f
  41cfbf:	test   eax,0x7a7d1f26
  41cfc4:	push   ds
  41cfc5:	sbb    al,0x6d
  41cfc7:	pushf  
  41cfc8:	retf   
  41cfc9:	stos   BYTE PTR es:[edi],al
  41cfca:	inc    ecx
  41cfcb:	push   ebx
  41cfcc:	cmp    DWORD PTR [ebx],esi
  41cfce:	pop    edx
  41cfcf:	sub    eax,0x1133248c
  41cfd4:	jno    0x41d048
  41cfd6:	call   0x2c5c5f4c
  41cfdb:	push   es
  41cfdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfdd:	mov    ch,ch
  41cfdf:	lds    esp,FWORD PTR [eax+ecx*2+0x2d]
  41cfe3:	push   esp
  41cfe4:	fcomp  DWORD PTR [esi+eax*2+0x3f]
  41cfe8:	xchg   BYTE PTR [ebp-0xc41ad13],ch
  41cfee:	pop    edi
  41cfef:	xacquire xchg BYTE PTR [eax-0x5075dfb2],dh
  41cff6:	push   ss
  41cff7:	imul   ebp,DWORD PTR [ebx+eax*2-0x51587816],0xffffff9f
  41cfff:	enter  0x65a0,0x5f
  41d003:	ffree  st(3)
  41d006:	pop    esi
  41d007:	jmp    0x41d020
  41d009:	xchg   edx,eax
  41d00a:	call   FWORD PTR [esi]
  41d00c:	vpsubusb ymm2,ymm7,YMMWORD PTR ds:0xc9be72fc
  41d014:	mov    ch,0x68
  41d016:	dec    esp
  41d017:	mov    ds:0x7e54a260,eax
  41d01c:	ins    BYTE PTR es:[edi],dx
  41d01d:	(bad)  
  41d01e:	and    al,0xf8
  41d020:	dec    eax
  41d021:	push   edi
  41d022:	lahf   
  41d023:	and    eax,DWORD PTR [eax-0x779abca5]
  41d029:	mov    ebp,DWORD PTR [ecx]
  41d02b:	je     0x41d075
  41d02d:	loopne 0x41d01a
  41d02f:	fs mov ecx,ebx
  41d032:	retf   0x3b7e
  41d035:	dec    esp
  41d036:	inc    esp
  41d037:	mov    al,0x3f
  41d039:	add    edx,DWORD PTR [eax+0x38]
  41d03c:	pusha  
  41d03d:	jge    0x41d072
  41d03f:	sbb    al,0x78
  41d041:	mov    cs,eax
  41d043:	inc    edi
  41d044:	shl    DWORD PTR [ebp-0x2b],cl
  41d047:	sub    al,0xe3
  41d049:	inc    ecx
  41d04a:	(bad)  
  41d04b:	test   eax,0x693dcd1f
  41d050:	jno    0x41d0a2
  41d052:	data16 jne 0x41d0c6
  41d055:	add    bl,dl
  41d057:	fldpi  
  41d059:	dec    esp
  41d05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d05b:	adc    esi,DWORD PTR [eax+0x1a]
  41d05e:	loope  0x41d014
  41d060:	lock push esp
  41d062:	mov    al,0xc6
  41d064:	ss popa 
  41d066:	mov    al,0xf
  41d068:	mov    al,0x6c
  41d06a:	push   edx
  41d06c:	sbb    DWORD PTR [edx+0x47648d4f],edi
  41d072:	inc    eax
  41d073:	cmp    al,0xe8
  41d075:	or     eax,0x9f18df97
  41d07a:	mov    al,0x2d
  41d07c:	sub    esi,DWORD PTR [ecx+ecx*8+0x15961334]
  41d083:	inc    esi
  41d084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d085:	add    eax,0xcdeb75c5
  41d08a:	pop    eax
  41d08b:	cs icebp 
  41d08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d08e:	mov    ds:0x2d17067,eax
  41d093:	into   
  41d094:	xchg   BYTE PTR ds:0xfc6bd953,dh
  41d09a:	in     eax,dx
  41d09b:	cmp    eax,0xc6d782e8
  41d0a0:	les    esp,FWORD PTR [eax+0x41]
  41d0a3:	sub    DWORD PTR ds:0xda890843,esi
  41d0a9:	imul   esp,DWORD PTR [ecx+0x16],0x5
  41d0ad:	out    dx,eax
  41d0ae:	jno    0x41d109
  41d0b0:	call   0x1987:0x4aaf78fe
  41d0b7:	mov    al,ds:0x754858f
  41d0bc:	or     eax,0x3dd9bbab
  41d0c1:	lock cmp eax,0x60fe4ba9
  41d0c7:	push   0x81ef157c
  41d0cc:	mul    dh
  41d0ce:	jae    0x41d0fb
  41d0d0:	pop    ds
  41d0d1:	jnp    0x41d12e
  41d0d3:	sahf   
  41d0d4:	loop   0x41d0b6
  41d0d6:	mov    ebx,0xff4f3d53
  41d0db:	test   eax,0x18c65e4
  41d0e0:	shl    ax,cl
  41d0e3:	jge    0x41d0bd
  41d0e5:	pusha  
  41d0e6:	inc    ebx
  41d0e7:	mov    ds:0x2d3c49ce,al
  41d0ec:	int    0x1f
  41d0ee:	and    ah,BYTE PTR [edx-0x51319c0a]
  41d0f4:	aas    
  41d0f5:	fwait
  41d0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0f7:	imul   esp,DWORD PTR [ecx-0x1c006cdd],0x5e
  41d0fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0ff:	dec    ebp
  41d100:	mov    edi,0x66191e90
  41d105:	sti    
  41d106:	pop    esi
  41d107:	mov    esp,0x95bc8ab0
  41d10c:	retf   0x5239
  41d10f:	das    
  41d110:	lods   al,BYTE PTR ds:[esi]
  41d111:	es push ds
  41d113:	xchg   ecx,eax
  41d114:	mov    ebx,0x7d14a266
  41d119:	mov    dh,0xcd
  41d11b:	xchg   cl,ch
  41d11d:	jmp    0x41d0d9
  41d11f:	jmp    0x40a16f75
  41d124:	pop    esp
  41d125:	pop    edx
  41d126:	icebp  
  41d127:	aaa    
  41d128:	repnz fs imul edi,edx,0xffffffee
  41d12d:	dec    eax
  41d12e:	cmp    al,0x25
  41d130:	cs dec eax
  41d132:	cmc    
  41d133:	rol    DWORD PTR [ecx+0x29],0x11
  41d137:	ds cwde 
  41d139:	jne    0x41d0d6
  41d13b:	mov    ebp,0xa7750156
  41d140:	mov    bh,al
  41d142:	sub    al,0x45
  41d144:	addr16 pop ebx
  41d146:	bound  edx,QWORD PTR [edx]
  41d148:	imul   DWORD PTR [ebx-0x44]
  41d14b:	sub    eax,0xf8d36e9a
  41d150:	xchg   esi,eax
  41d151:	sub    eax,0x7096e177
  41d156:	xor    ecx,DWORD PTR [ecx]
  41d158:	sbb    edx,DWORD PTR [ebx-0x2d19b575]
  41d15e:	push   ds
  41d15f:	mov    ds:0xadc2ef38,al
  41d164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d165:	cmp    DWORD PTR [edi+0x1e],esp
  41d168:	sbb    al,0xdd
  41d16a:	mov    ch,0x6d
  41d16c:	stc    
  41d16d:	jp     0x41d10a
  41d16f:	sub    esp,DWORD PTR [ecx+0x510d5c10]
  41d175:	sbb    eax,DWORD PTR [edi]
  41d177:	fwait
  41d178:	pop    edx
  41d179:	or     eax,0x48dd4ef0
  41d17e:	fld    DWORD PTR [ebp+ebp*8+0x35b4f912]
  41d185:	aad    0x8
  41d187:	mov    ah,0xe7
  41d189:	adc    eax,0x85d2fb67
  41d18e:	mov    esp,0x8e7a9816
  41d193:	cmp    al,0xb7
  41d195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d196:	push   edi
  41d197:	xlat   BYTE PTR ds:[ebx]
  41d198:	loope  0x41d1ba
  41d19a:	inc    ebx
  41d19b:	call   0x8953:0x220a57c5
  41d1a2:	cmp    esi,DWORD PTR [edi+0x12]
  41d1a5:	ret    
  41d1a6:	mov    ?,WORD PTR [ecx+0x2a834139]
  41d1ac:	xor    eax,0x5cc75777
  41d1b1:	adc    edi,eax
  41d1b3:	aam    0x10
  41d1b5:	(bad)  [ebp+edx*8-0x36157d84]
  41d1bc:	pop    es
  41d1bd:	or     dl,ah
  41d1bf:	xor    BYTE PTR [ebx+ebx*2],al
  41d1c2:	outs   dx,DWORD PTR ds:[esi]
  41d1c3:	mov    bl,0xf8
  41d1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1c6:	inc    eax
  41d1c7:	mov    ah,0x41
  41d1c9:	and    ecx,ebx
  41d1cb:	cmp    BYTE PTR [edi],bh
  41d1cd:	mov    esp,DWORD PTR [eax+0x11]
  41d1d0:	ss sbb eax,0x79a27901
  41d1d6:	arpl   ax,bx
  41d1d8:	mov    WORD PTR [ebx+0x391c435a],ss
  41d1de:	sti    
  41d1df:	pop    esi
  41d1e0:	les    eax,FWORD PTR [edx]
  41d1e2:	cdq    
  41d1e3:	mov    esi,0xd8469374
  41d1e8:	cli    
  41d1e9:	popf   
  41d1ea:	jge    0x41d17d
  41d1ec:	add    DWORD PTR [esi],eax
  41d1ee:	nop
  41d1ef:	xor    dl,ah
  41d1f1:	and    DWORD PTR [edi+0x3],eax
  41d1f4:	sysret 
  41d1f6:	jae    0x41d1a6
  41d1f8:	sub    al,0x4a
  41d1fa:	mov    cl,0xec
  41d1fc:	idiv   BYTE PTR ds:0x7dde4d00
  41d202:	repz sti 
  41d204:	or     DWORD PTR [ecx+ebp*8],edi
  41d207:	sbb    dh,BYTE PTR [eax]
  41d209:	and    BYTE PTR [edi+0x10],0xe0
  41d20d:	mov    edi,DWORD PTR [ecx+0x38928b6f]
  41d213:	sub    DWORD PTR [edi+0x46],esi
  41d216:	std    
  41d217:	loopne 0x41d291
  41d219:	mov    bh,0xd8
  41d21b:	jmp    0x3d58b34d
  41d220:	mov    dh,0x54
  41d222:	daa    
  41d223:	adc    DWORD PTR [esi],esi
  41d225:	jl     0x41d1e0
  41d227:	adc    al,0xf1
  41d229:	scas   eax,DWORD PTR es:[edi]
  41d22a:	or     al,0xf8
  41d22c:	dec    ecx
  41d22d:	push   0xffffff9c
  41d22f:	inc    edx
  41d230:	jmp    0x491ec2b8
  41d235:	or     BYTE PTR ds:0x4b26cb8c,dh
  41d23b:	sbb    BYTE PTR [edx+0x59ab0bac],dl
  41d241:	sbb    DWORD PTR [esi-0x40],ebp
  41d244:	push   ebx
  41d245:	adc    cl,bh
  41d247:	jo     0x41d260
  41d249:	hlt    
  41d24a:	(bad)  
  41d24b:	adc    dh,BYTE PTR [edi-0x319c1a71]
  41d251:	test   al,0x2d
  41d253:	dec    edi
  41d254:	fild   DWORD PTR ds:0x54b1d1c3
  41d25a:	mov    bl,0xdc
  41d25c:	aas    
  41d25d:	jo     0x41d237
  41d25f:	dec    ebx
  41d260:	lahf   
  41d261:	inc    ebx
  41d262:	jnp    0x41d227
  41d264:	dec    esp
  41d265:	jmp    0x41d2be
  41d267:	inc    ebx
  41d268:	std    
  41d269:	mov    BYTE PTR [eax],dl
  41d26b:	pop    ecx
  41d26c:	cmp    BYTE PTR [edx-0x6c2c68a0],0xfb
  41d273:	cwde   
  41d274:	mov    eax,0xb253f508
  41d279:	icebp  
  41d27a:	inc    edi
  41d27b:	adc    eax,0xd778630d
  41d280:	adc    al,0x5e
  41d282:	mov    esi,0xe4c32f5e
  41d287:	shl    BYTE PTR [edi],1
  41d289:	pop    ss
  41d28a:	fst    st(1)
  41d28c:	mov    edi,0xbaf39348
  41d291:	pop    edx
  41d292:	aaa    
  41d293:	and    eax,0x8e409fdf
  41d298:	jne    0x41d2ca
  41d29a:	aas    
  41d29b:	dec    esi
  41d29c:	or     esi,DWORD PTR ds:0xf32375da
  41d2a2:	dec    BYTE PTR ds:0xe9f12342
  41d2a8:	arpl   WORD PTR [ecx+0x1c60f01a],di
  41d2ae:	test   al,0x25
  41d2b0:	mov    al,0x8a
  41d2b2:	push   0xffffff91
  41d2b4:	mov    eax,0x27a7e69b
  41d2b9:	sbb    ecx,edi
  41d2bb:	pop    ss
  41d2bc:	mov    ch,0x4d
  41d2be:	sbb    eax,0x1216e543
  41d2c3:	retf   
  41d2c4:	lock jmp 0x41d337
  41d2c7:	inc    edi
  41d2c8:	mov    eax,ds:0x79f6241a
  41d2cd:	inc    edx
  41d2ce:	jns    0x41d300
  41d2d0:	inc    ecx
  41d2d1:	cld    
  41d2d2:	mov    esp,0x3ffef3a8
  41d2d7:	sar    bl,0xab
  41d2da:	jp     0x41d343
  41d2dc:	xchg   ebp,eax
  41d2dd:	call   0x79c2ea21
  41d2e2:	cmp    al,0x20
  41d2e4:	scas   eax,DWORD PTR es:[edi]
  41d2e5:	cmp    ecx,DWORD PTR [ebp+eiz*2+0xfefd9f]
  41d2ec:	sbb    dl,al
  41d2ee:	mov    al,bh
  41d2f0:	adc    edx,esi
  41d2f2:	pop    esi
  41d2f3:	adc    eax,0x6ae4c56
  41d2f8:	aas    
  41d2f9:	adc    ebp,DWORD PTR [ebx-0x4f23de5c]
  41d2ff:	mov    edi,0xfde07f26
  41d304:	jecxz  0x41d2c6
  41d306:	aaa    
  41d307:	jp     0x41d2dc
  41d309:	sub    BYTE PTR [esi+ebx*8],dh
  41d30c:	mov    ebp,0x100e3625
  41d311:	arpl   WORD PTR [ebp-0x63797657],ax
  41d317:	push   0x22
  41d319:	adc    dl,BYTE PTR [edx-0x3e42cef2]
  41d31f:	rol    ebx,0x69
  41d322:	mov    edi,0xe809d0d2
  41d327:	and    al,0x97
  41d329:	or     al,BYTE PTR [edx+ebx*1+0x7c52986f]
  41d330:	cld    
  41d331:	adc    al,0x45
  41d333:	adc    al,0xe5
  41d335:	das    
  41d336:	lea    ebp,[esi]
  41d338:	std    
  41d339:	sub    eax,0xf2f6096b
  41d33e:	imul   DWORD PTR [edx+0x46]
  41d341:	test   bh,dl
  41d343:	in     al,0xad
  41d345:	jns    0x41d2c7
  41d347:	and    DWORD PTR [esi+0x711ad59b],eax
  41d34d:	scas   eax,DWORD PTR es:[edi]
  41d34e:	shl    BYTE PTR [ebp-0x2be11116],1
  41d354:	jmp    FWORD PTR [edx]
  41d356:	ds jp  0x41d372
  41d359:	pusha  
  41d35a:	scas   al,BYTE PTR es:[edi]
  41d35b:	dec    esi
  41d35c:	in     al,0xf3
  41d35e:	jmp    0x41d39d
  41d360:	mov    dl,0x39
  41d362:	cmp    al,0xba
  41d364:	xor    cl,BYTE PTR ds:0x6bfaca31
  41d36a:	inc    edi
  41d36b:	push   0x1
  41d36d:	xor    bh,bl
  41d36f:	add    BYTE PTR [edi+0x1f],ah
  41d372:	inc    esi
  41d373:	mov    dl,0x7b
  41d375:	push   edx
  41d376:	dec    edi
  41d377:	inc    edi
  41d378:	mov    al,ds:0xece0766a
  41d37d:	sbb    bh,cl
  41d37f:	and    BYTE PTR [edi+ecx*2+0x39f29b96],0x39
  41d387:	xchg   DWORD PTR [edx+0xd],esi
  41d38a:	mov    ebx,0xd0a72c07
  41d38f:	jg     0x41d3bc
  41d391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d392:	(bad)  
  41d393:	cwde   
  41d394:	sub    esi,DWORD PTR [esi-0x71368b08]
  41d39a:	int    0x25
  41d39c:	cmp    ebp,DWORD PTR [ecx+0x4e]
  41d39f:	dec    edi
  41d3a0:	mov    eax,0xce143e27
  41d3a5:	mov    edi,ds
  41d3a7:	cmp    al,0x8e
  41d3a9:	push   cs
  41d3aa:	adc    bl,dl
  41d3ac:	add    al,bl
  41d3ae:	cmp    ebx,ebx
  41d3b0:	loopne 0x41d3b1
  41d3b2:	(bad)  
  41d3b3:	inc    BYTE PTR [eax+0x5f]
  41d3b6:	pop    ebp
  41d3b7:	cmp    al,0x2
  41d3b9:	jne    0x41d435
  41d3bb:	mov    dh,0x21
  41d3bd:	in     eax,dx
  41d3be:	cmp    DWORD PTR [ecx+0x7593a875],ebp
  41d3c4:	fild   QWORD PTR [ebp+0x1e19aa29]
  41d3ca:	jp     0x41d3dd
  41d3cc:	sbb    eax,0x8b70e278
  41d3d1:	dec    ebx
  41d3d2:	mov    edx,0x24d63b23
  41d3d7:	popf   
  41d3d8:	xchg   edi,eax
  41d3d9:	adc    al,bh
  41d3db:	xchg   esp,eax
  41d3dc:	and    BYTE PTR [ebp-0x51],dh
  41d3df:	sub    al,0x48
  41d3e1:	pop    ss
  41d3e2:	clc    
  41d3e3:	add    DWORD PTR [esi+edi*2],edi
  41d3e6:	xlat   BYTE PTR ds:[ebx]
  41d3e7:	jmp    0x41d40f
  41d3e9:	pop    ebx
  41d3ea:	mov    ds:0x24ab165b,eax
  41d3ef:	ret    0xc51b
  41d3f2:	fstp   DWORD PTR [ebx]
  41d3f4:	xchg   ebx,eax
  41d3f5:	jbe    0x41d395
  41d3f7:	add    al,0xdf
  41d3f9:	jg     0x41d3e1
  41d3fb:	mov    bl,bh
  41d3fd:	sub    ebx,DWORD PTR [eax+0x68340f01]
  41d403:	xchg   al,dl
  41d405:	xor    al,BYTE PTR [edi-0x55]
  41d408:	pop    edi
  41d409:	stc    
  41d40a:	xchg   ebx,eax
  41d40b:	sub    DWORD PTR ss:0x8aa536d,eax
  41d412:	xchg   edx,eax
  41d413:	inc    esp
  41d414:	sub    ah,BYTE PTR [ebx-0x44008ecf]
  41d41a:	mov    ecx,DWORD PTR [ebx-0x69]
  41d41d:	xor    DWORD PTR [ebp*4+0x48dba321],edi
  41d424:	ss pop edi
  41d426:	cmp    al,0x75
  41d428:	sbb    ch,BYTE PTR [edi]
  41d42a:	mov    bh,0x99
  41d42c:	mov    BYTE PTR [edi],al
  41d42e:	pop    ss
  41d42f:	dec    BYTE PTR [ebp+0x44]
  41d432:	(bad)  
  41d433:	mov    ch,0xee
  41d435:	std    
  41d436:	push   es
  41d437:	sub    ecx,DWORD PTR [esi+eiz*2-0x65000ba2]
  41d43e:	jmp    FWORD PTR [ebx+0x1a]
  41d441:	ja     0x41d4a4
  41d443:	or     bh,BYTE PTR [esi-0x16758ed2]
  41d449:	xchg   edx,eax
  41d44a:	call   0xa098:0x95861b02
  41d451:	sub    BYTE PTR [edx+0x3e],dl
  41d454:	mov    ecx,0x8f9e74d3
  41d459:	sub    al,0x97
  41d45b:	ins    DWORD PTR es:[edi],dx
  41d45c:	out    dx,al
  41d45d:	mov    ds:0x7fbc2f08,al
  41d462:	sbb    al,0x83
  41d464:	repnz sbb eax,0xf47084f7
  41d46a:	inc    ebx
  41d46b:	stos   BYTE PTR es:[edi],al
  41d46c:	pop    es
  41d46d:	fnstsw WORD PTR [eax-0x3]
  41d470:	dec    ecx
  41d471:	jmp    0x41d4c3
  41d473:	jnp    0x41d443
  41d475:	mov    BYTE PTR [ecx+0x73],0x6e
  41d479:	sbb    ah,BYTE PTR [ebx]
  41d47b:	and    al,0xe3
  41d47d:	pop    esi
  41d47e:	daa    
  41d47f:	lock pop ecx
  41d481:	fist   WORD PTR [edx+0x62]
  41d484:	pop    ss
  41d485:	punpckldq mm7,DWORD PTR [ecx+ebp*1+0x63f42425]
  41d48d:	push   esi
  41d48e:	jmp    FWORD PTR [eax]
  41d490:	test   BYTE PTR [ecx-0x76183a81],ch
  41d496:	mov    ah,0x1
  41d498:	lahf   
  41d499:	lea    ebx,[ecx+0x5d45c636]
  41d49f:	cmp    ch,bh
  41d4a1:	lahf   
  41d4a2:	pop    eax
  41d4a3:	lods   eax,DWORD PTR ds:[esi]
  41d4a4:	repz std 
  41d4a6:	mov    ebp,0xf75c2d8d
  41d4ab:	mov    fs,WORD PTR [edi-0x14]
  41d4ae:	std    
  41d4af:	dec    esp
  41d4b0:	push   ebx
  41d4b1:	gs aas 
  41d4b3:	int3   
  41d4b4:	sti    
  41d4b5:	push   ebp
  41d4b6:	pop    ss
  41d4b7:	jmp    0x41d43c
  41d4b9:	pop    ebp
  41d4ba:	xor    DWORD PTR [edx+edx*4],edi
  41d4bd:	or     al,0xa4
  41d4bf:	(bad)  
  41d4c0:	pop    ebp
  41d4c1:	ret    0xdce4
  41d4c4:	int    0x80
  41d4c6:	pop    edi
  41d4c7:	push   ecx
  41d4c8:	(bad)  
  41d4c9:	sbb    cl,dl
  41d4cb:	repz mov edi,0x3e4d3f7
  41d4d1:	pop    es
  41d4d2:	pop    ds
  41d4d3:	push   eax
  41d4d4:	retf   
  41d4d5:	pusha  
  41d4d6:	nop
  41d4d7:	jg     0x41d519
  41d4d9:	jb     0x41d4f1
  41d4db:	push   cs
  41d4dc:	pop    esi
  41d4dd:	pop    ecx
  41d4de:	and    eax,0x2936bb88
  41d4e3:	sbb    ecx,DWORD PTR [esi]
  41d4e5:	xor    dl,ch
  41d4e7:	js     0x41d556
  41d4e9:	jge    0x41d4de
  41d4eb:	dec    edi
  41d4ec:	push   ebx
  41d4ed:	popf   
  41d4ee:	push   esp
  41d4ef:	mov    ah,BYTE PTR [edi-0x66]
  41d4f2:	int    0x5f
  41d4f4:	jmp    0xb8dc:0x4b9e8390
  41d4fb:	xor    al,0xc6
  41d4fd:	rol    BYTE PTR [esi+0x7f],1
  41d500:	jecxz  0x41d512
  41d502:	jo     0x41d56d
  41d504:	sahf   
  41d505:	loope  0x41d523
  41d507:	fs loope 0x41d571
  41d50a:	mov    cl,0xc1
  41d50c:	lahf   
  41d50d:	add    eax,0x87195a64
  41d512:	jle    0x41d4c1
  41d514:	push   cs
  41d515:	dec    esp
  41d516:	sbb    BYTE PTR [edi+0x4c],bh
  41d519:	sbb    al,0x44
  41d51b:	add    ah,BYTE PTR [ebx+0x5a]
  41d51e:	and    al,0x88
  41d520:	repnz adc DWORD PTR [esi-0x6c75141a],ebx
  41d527:	adc    eax,0x57a5d572
  41d52c:	pop    ecx
  41d52d:	mov    WORD PTR [ebx],es
  41d52f:	xchg   ebx,eax
  41d530:	jb     0x41d514
  41d532:	sbb    ebp,DWORD PTR [edi-0x6d565cde]
  41d538:	jns    0x41d50f
  41d53a:	idiv   DWORD PTR [esi+0x5c]
  41d53d:	mov    ds:0x94f028ad,al
  41d542:	jne    0x41d53d
  41d544:	cdq    
  41d545:	xchg   DWORD PTR [ebx],eax
  41d547:	sub    eax,DWORD PTR [edx+0x3723ac35]
  41d54d:	enter  0x8b60,0x38
  41d551:	shl    ebp,0xe0
  41d554:	stos   BYTE PTR es:[edi],al
  41d555:	push   ebp
  41d556:	pop    esi
  41d557:	lods   eax,DWORD PTR ds:[esi]
  41d558:	(bad)  
  41d559:	mov    edi,0x17de11f6
  41d55e:	xchg   edx,eax
  41d55f:	xor    eax,0xb2380445
  41d564:	mov    ecx,0xd4f9456b
  41d569:	or     eax,DWORD PTR [ebp+ebp*1-0x42]
  41d56d:	pop    ss
  41d56e:	ins    DWORD PTR es:[edi],dx
  41d56f:	dec    edx
  41d570:	shl    ebp,cl
  41d572:	clc    
  41d573:	in     al,dx
  41d574:	mov    cl,0xd2
  41d576:	mov    DWORD PTR [esi+0x7bbdcafa],0xd7989824
  41d580:	jb     0x41d572
  41d582:	xchg   edx,eax
  41d583:	fimul  WORD PTR [ebx]
  41d585:	sbb    al,0x1b
  41d587:	std    
  41d588:	fisub  DWORD PTR [edi-0x581b5911]
  41d58e:	(bad)  
  41d58f:	cmp    esp,DWORD PTR [ecx+0x1f]
  41d592:	xor    bh,dh
  41d594:	and    dl,BYTE PTR [eax+0x21]
  41d597:	sub    ebx,esi
  41d599:	xchg   edx,eax
  41d59a:	mov    edx,0x62f4eec7
  41d59f:	dec    esp
  41d5a0:	adc    al,0x7b
  41d5a2:	pop    esp
  41d5a3:	pop    ss
  41d5a4:	leave  
  41d5a5:	xchg   esp,eax
  41d5a6:	inc    esp
  41d5a7:	cmp    eax,0xd440434d
  41d5ac:	(bad)  
  41d5ad:	mov    eax,ds:0xbc72b5f2
  41d5b2:	xchg   BYTE PTR [esi+ecx*1],bl
  41d5b5:	sub    BYTE PTR [eax+0x4edf3f27],0x59
  41d5bc:	mov    al,0x96
  41d5be:	sub    al,0x33
  41d5c0:	jecxz  0x41d618
  41d5c2:	(bad)  
  41d5c3:	clc    
  41d5c4:	push   0x134e3c7d
  41d5c9:	nop
  41d5ca:	test   DWORD PTR [esi-0x19],esi
  41d5cd:	call   0x7423a48f
  41d5d2:	rcl    BYTE PTR [edi+0x3e],1
  41d5d5:	ds (bad) 
  41d5d7:	jp     0x41d600
  41d5d9:	leave  
  41d5da:	jo     0x41d5b8
  41d5dc:	into   
  41d5dd:	mov    eax,0xded24032
  41d5e2:	mov    ch,BYTE PTR [ecx+0x7abf569d]
  41d5e8:	ins    BYTE PTR es:[edi],dx
  41d5e9:	leave  
  41d5ea:	dec    bl
  41d5ec:	jae    0x41d5e1
  41d5ee:	aad    0xf1
  41d5f0:	pushf  
  41d5f1:	fdiv   QWORD PTR [eax]
  41d5f3:	xor    eax,0x5724ed75
  41d5f8:	inc    esp
  41d5f9:	cmc    
  41d5fa:	sti    
  41d5fb:	xchg   esi,eax
  41d5fc:	out    dx,al
  41d5fd:	scas   al,BYTE PTR es:[edi]
  41d5fe:	(bad)  
  41d5ff:	mov    esi,0x206fed70
  41d604:	(bad)  [edx+0x8]
  41d607:	jne    0x41d681
  41d609:	pop    ebx
  41d60a:	ins    BYTE PTR es:[edi],dx
  41d60b:	or     BYTE PTR ds:0x6b05432c,bh
  41d611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d612:	(bad)  
  41d613:	jmp    0x41d5ac
  41d615:	call   0xa5e85eb8
  41d61a:	retf   0xcd63
  41d61d:	outs   dx,BYTE PTR ds:[esi]
  41d61e:	mov    cl,0xfa
  41d620:	cmp    BYTE PTR [ebx+ebx*8+0x7],0x64
  41d625:	or     bl,al
  41d627:	add    al,BYTE PTR [edi-0x5bbc5ba4]
  41d62d:	mov    dh,0x6d
  41d62f:	shl    DWORD PTR [ecx-0x767f4d68],1
  41d635:	(bad)  
  41d636:	loop   0x41d649
  41d638:	(bad)  
  41d639:	jae    0x41d688
  41d63b:	sub    eax,0xd2db82f6
  41d640:	mov    BYTE PTR [edx],dl
  41d642:	and    al,0xb0
  41d644:	addr16 pop ss
  41d646:	jne    0x41d6c1
  41d648:	sbb    BYTE PTR [eax],ah
  41d64a:	push   ss
  41d64b:	imul   ecx,DWORD PTR [ebx-0x2e],0xafd3ada4
  41d652:	ror    BYTE PTR [esi],0xfa
  41d655:	fisub  DWORD PTR [esi+0x391cf843]
  41d65b:	push   DWORD PTR gs:[edi-0x36125387]
  41d662:	sbb    eax,0x25a4537a
  41d667:	or     eax,0xf2bebc24
  41d66c:	mov    ch,0x77
  41d66e:	(bad)  
  41d66f:	out    0x7,al
  41d671:	cmp    esi,0xffffff8b
  41d674:	mov    ss,WORD PTR [eax+0x3e8f23ed]
  41d67a:	stc    
  41d67b:	pop    edx
  41d67c:	mov    ds:0x72d9a577,eax
  41d681:	fmul   st,st(0)
  41d683:	stc    
  41d684:	sub    ah,BYTE PTR cs:[edi]
  41d687:	pop    ebp
  41d688:	fcmovnbe st,st(3)
  41d68a:	inc    BYTE PTR [ecx]
  41d68c:	pop    esp
  41d68d:	jl     0x41d673
  41d68f:	sbb    al,0xab
  41d691:	and    bl,BYTE PTR [ebx-0x14]
  41d694:	push   eax
  41d695:	mov    bh,0xf1
  41d697:	inc    edi
  41d698:	xchg   edi,esp
  41d69a:	xor    edx,edx
  41d69c:	fstp   DWORD PTR [ebp+0x4b]
  41d69f:	jo     0x41d68e
  41d6a1:	or     al,0x9d
  41d6a3:	push   ecx
  41d6a4:	dec    esi
  41d6a5:	arpl   di,si
  41d6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6a8:	mov    ch,0xee
  41d6aa:	test   DWORD PTR [ebx],esi
  41d6ac:	add    bh,bh
  41d6ae:	jno    0x41d68f
  41d6b0:	inc    eax
  41d6b1:	out    dx,eax
  41d6b2:	adc    BYTE PTR [ecx+0x3d627e66],ah
  41d6b8:	ins    DWORD PTR es:[edi],dx
  41d6b9:	imul   BYTE PTR [eax-0x12388d2]
  41d6bf:	pop    esp
  41d6c0:	jmp    0x28b66b2f
  41d6c5:	std    
  41d6c6:	rol    eax,cl
  41d6c8:	in     eax,0x36
  41d6ca:	(bad)  
  41d6cb:	mov    bh,0xe7
  41d6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6ce:	stos   BYTE PTR es:[edi],al
  41d6cf:	mov    ecx,0x265bdeea
  41d6d4:	jns    0x41d683
  41d6d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6d7:	leave  
  41d6d8:	ret    0x45ce
  41d6db:	push   ebx
  41d6dc:	pop    ds
  41d6dd:	in     eax,dx
  41d6de:	js     0x41d66a
  41d6e0:	inc    ecx
  41d6e1:	xor    al,0x2d
  41d6e3:	idiv   BYTE PTR [esi+0x7908bd76]
  41d6e9:	mov    ecx,0x2d555950
  41d6ee:	(bad)  
  41d6ef:	mov    ebp,DWORD PTR [ebx+0x5f0389f1]
  41d6f5:	rcl    esi,cl
  41d6f7:	fisub  DWORD PTR [eax-0x3a]
  41d6fa:	or     al,0x63
  41d6fc:	pop    ebx
  41d6fd:	faddp  st(3),st
  41d6ff:	adc    ebp,edx
  41d701:	xchg   edi,eax
  41d702:	cmp    DWORD PTR [edx],esi
  41d704:	test   BYTE PTR [esi-0x3a],ah
  41d707:	mov    ebx,0xaf2fd31b
  41d70c:	inc    ebp
  41d70d:	cli    
  41d70e:	ds cmp eax,0x25d49874
  41d714:	in     eax,dx
  41d715:	push   edx
  41d716:	mov    BYTE PTR [edi-0x5f],bl
  41d719:	dec    ebp
  41d71a:	popa   
  41d71b:	xor    al,0xbe
  41d71d:	pushf  
  41d71e:	(bad)  
  41d71f:	jecxz  0x41d771
  41d721:	and    bh,al
  41d723:	mov    esp,DWORD PTR [edi-0x79]
  41d726:	dec    edi
  41d727:	setae  BYTE PTR [edi-0xd]
  41d72b:	jb     0x41d763
  41d72d:	or     DWORD PTR [edx],esi
  41d72f:	mul    DWORD PTR [edi]
  41d731:	mov    ebp,0x199648ee
  41d736:	xchg   esi,eax
  41d737:	loope  0x41d73f
  41d739:	sbb    eax,0x91c1c0e9
  41d73e:	cmp    DWORD PTR [bx+0x5664],eax
  41d743:	push   es
  41d744:	push   ds
  41d745:	dec    ebx
  41d746:	inc    edx
  41d747:	scas   al,BYTE PTR es:[edi]
  41d748:	jns    0x41d79f
  41d74a:	out    0x74,eax
  41d74c:	mov    edx,0xa42b2da0
  41d751:	into   
  41d752:	xor    DWORD PTR [ebp+0x32],esp
  41d755:	sub    cl,bh
  41d757:	ret    
  41d758:	or     BYTE PTR [esi-0x7],bl
  41d75b:	mov    ebp,0x988c4d8d
  41d760:	push   ss
  41d761:	call   DWORD PTR [ebx+0xc]
  41d764:	add    bh,dl
  41d766:	mov    ebx,DWORD PTR [eax-0x4d]
  41d769:	push   ebx
  41d76a:	xlat   BYTE PTR ds:[ebx]
  41d76b:	enter  0xa023,0xd4
  41d76f:	sbb    BYTE PTR [esi-0x3005fb63],cl
  41d775:	out    dx,al
  41d776:	mov    ebp,0x57ba6674
  41d77b:	mov    dl,cl
  41d77d:	test   al,0x34
  41d77f:	push   0x4ef5093c
  41d784:	jae    0x41d764
  41d786:	pop    ds
  41d787:	mov    ecx,0x691da81f
  41d78c:	cmc    
  41d78d:	ficom  WORD PTR [ebp+0x72a4c167]
  41d793:	cmc    
  41d794:	loopne 0x41d760
  41d796:	xchg   edx,eax
  41d797:	jbe    0x41d802
  41d799:	addr16 jb 0x41d7a3
  41d79c:	cmp    DWORD PTR [ecx-0x44],edi
  41d79f:	(bad)  
  41d7a0:	int    0xb0
  41d7a2:	mov    WORD PTR [ecx+0x79],fs
  41d7a5:	jbe    0x41d79a
  41d7a7:	sahf   
  41d7a8:	fidiv  DWORD PTR [ebx]
  41d7aa:	inc    edi
  41d7ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7ac:	std    
  41d7ad:	in     al,dx
  41d7ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7af:	fdivr  DWORD PTR ds:[ebx+0x717282b6]
  41d7b6:	push   ebx
  41d7b7:	xchg   esp,eax
  41d7b8:	push   ebp
  41d7b9:	mov    al,0xdc
  41d7bb:	jne    0x41d73d
  41d7bd:	push   0xdbf70837
  41d7c2:	adc    BYTE PTR [ebp-0x2752b4a6],ah
  41d7c8:	lds    esp,FWORD PTR [edx-0x17502a74]
  41d7ce:	mov    cl,0xb4
  41d7d0:	add    eax,0x6b44bc18
  41d7d5:	out    0x7a,al
  41d7d7:	mov    ds:0x7d73414c,eax
  41d7dc:	push   ecx
  41d7dd:	and    eax,0x15e325d6
  41d7e2:	sub    DWORD PTR [ebx-0x1677b0a1],ecx
  41d7e8:	imul   esi,DWORD PTR ds:0x923a9ffe,0x1e
  41d7ef:	popf   
  41d7f0:	xor    al,0x5
  41d7f2:	xor    DWORD PTR [edx-0xd194f3],0xc3ecd2bb
  41d7fc:	push   ecx
  41d7fd:	mov    dh,0x7b
  41d7ff:	adc    bh,BYTE PTR [ebx+0x2c]
  41d802:	jp     0x41d83c
  41d804:	cmc    
  41d805:	sbb    al,0xb2
  41d807:	ins    DWORD PTR es:[edi],dx
  41d808:	push   ecx
  41d809:	xchg   edx,eax
  41d80a:	neg    BYTE PTR [ebx-0x4d]
  41d80d:	xchg   ebx,eax
  41d80e:	xor    eax,0x8397d6de
  41d813:	inc    ebx
  41d814:	bound  edi,QWORD PTR [ebx-0x28]
  41d817:	jae    0x41d7b7
  41d819:	sbb    DWORD PTR fs:[eax+0x7582a84e],esp
  41d820:	pcmpgtd mm7,mm7
  41d823:	xchg   esi,eax
  41d824:	test   ah,bh
  41d826:	jnp    0x41d7d7
  41d828:	sub    DWORD PTR [eax+0x4b4e636c],0x53
  41d82f:	stos   DWORD PTR es:[edi],eax
  41d830:	jo     0x41d848
  41d832:	mov    esp,0xa4836db7
  41d837:	idiv   DWORD PTR [edx-0x2c8baaa3]
  41d83d:	sub    DWORD PTR [esi+0x5f],edx
  41d840:	push   esp
  41d841:	push   edi
  41d842:	dec    ebp
  41d843:	or     DWORD PTR [ebp+0x10],ebx
  41d846:	sti    
  41d847:	push   0xffffffe2
  41d849:	dec    ecx
  41d84a:	sub    edi,esp
  41d84c:	mov    bh,0xa3
  41d84e:	nop
  41d84f:	aad    0x9a
  41d851:	ret    
  41d852:	xlat   BYTE PTR ds:[ebx]
  41d853:	pushf  
  41d854:	mov    ebp,0xa0054b75
  41d859:	mov    ah,0x3a
  41d85b:	shl    DWORD PTR [edx+0x1f],1
  41d85e:	sub    edx,esp
  41d860:	xor    edi,0x1c
  41d863:	push   eax
  41d864:	push   cs
  41d865:	push   es
  41d866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d868:	cld    
  41d869:	cld    
  41d86a:	xchg   esi,eax
  41d86b:	dec    ebx
  41d86c:	adc    BYTE PTR [edx-0x313e9dc4],bl
  41d872:	imul   ecx,DWORD PTR [eax+edx*1+0x29],0x52196542
  41d87a:	arpl   WORD PTR [edi-0x45bb85fd],bp
  41d880:	ret    
  41d881:	inc    ebp
  41d882:	stos   DWORD PTR es:[edi],eax
  41d883:	gs repnz pop ecx
  41d886:	inc    dh
  41d888:	stc    
  41d889:	or     al,0x64
  41d88b:	repz xor ebp,0xfd065e1f
  41d892:	push   ds
  41d893:	mov    al,ds:0x9fd61d4b
  41d898:	xor    al,0x6a
  41d89a:	aas    
  41d89b:	push   eax
  41d89c:	psrld  mm3,QWORD PTR [ebx]
  41d89f:	or     DWORD PTR [ebx-0x3b],ebp
  41d8a2:	das    
  41d8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8a4:	and    al,0xfc
  41d8a6:	pop    edx
  41d8a7:	adc    bl,BYTE PTR [edx-0x7e5389ed]
  41d8ad:	fwait
  41d8ae:	out    dx,al
  41d8af:	aam    0xc7
  41d8b1:	mov    al,0x36
  41d8b3:	(bad)  
  41d8b4:	in     eax,0x6
  41d8b6:	addr16 mov esp,0x23e24433
  41d8bc:	pop    edi
  41d8bd:	pop    ecx
  41d8be:	sbb    DWORD PTR es:[edi-0x8e8e415],0x1ee3203f
  41d8c9:	push   edi
  41d8ca:	lea    esi,[ebx+edi*4]
  41d8cd:	dec    ecx
  41d8ce:	in     al,0x6a
  41d8d0:	clc    
  41d8d1:	sbb    BYTE PTR [eax],dl
  41d8d3:	addr16 inc edi
  41d8d5:	xchg   ecx,eax
  41d8d6:	stc    
  41d8d7:	mov    edi,0xf6ccd454
  41d8dc:	xor    DWORD PTR [edx],ecx
  41d8de:	mov    eax,ds:0xe3dad7a6
  41d8e3:	loopne 0x41d885
  41d8e5:	repz push cs
  41d8e7:	mov    ds,ebx
  41d8e9:	add    BYTE PTR [edi],0xf
  41d8ec:	test   eax,0x4465290b
  41d8f1:	inc    edx
  41d8f2:	mov    ebx,0x92c66145
  41d8f7:	add    al,0xb6
  41d8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8fa:	sbb    al,0xfb
  41d8fc:	jg     0x41d8c5
  41d8fe:	mov    cl,dl
  41d900:	add    dh,BYTE PTR [edx+0x4b5f571b]
  41d906:	mov    al,0x72
  41d908:	inc    eax
  41d909:	outs   dx,DWORD PTR ds:[esi]
  41d90a:	push   es
  41d90b:	out    0xe9,eax
  41d90d:	add    al,0x98
  41d90f:	jne    0x41d8e9
  41d911:	xchg   ecx,eax
  41d912:	jo     0x41d8b6
  41d914:	add    esp,DWORD PTR [ebx-0x408cb3a8]
  41d91a:	push   edi
  41d91b:	pop    ecx
  41d91c:	pop    ebp
  41d91d:	arpl   WORD PTR [ebp-0x33c8a0e8],bx
  41d923:	js     0x41d900
  41d925:	mov    ds:0x54376cdf,eax
  41d92a:	and    ebx,esi
  41d92c:	xor    eax,0xc258d70a
  41d931:	mov    WORD PTR [ebp-0x4b40d93f],es
  41d937:	stos   DWORD PTR es:[edi],eax
  41d938:	scas   eax,DWORD PTR es:[edi]
  41d939:	addr16 pop ecx
  41d93b:	adc    dh,BYTE PTR [eax]
  41d93d:	sub    dl,dh
  41d93f:	repnz xor al,0x17
  41d942:	mov    ch,0x0
  41d944:	adc    DWORD PTR [edi+eax*1+0x1379485f],eax
  41d94b:	add    al,0x90
  41d94d:	(bad)  
  41d94e:	data16 arpl di,sp
  41d951:	adc    esp,DWORD PTR [eax-0x24]
  41d954:	(bad)  
  41d955:	add    bl,dh
  41d957:	enter  0x1c0f,0x56
  41d95b:	ror    edx,1
  41d95d:	inc    BYTE PTR [eax]
  41d95f:	sbb    BYTE PTR [edx],cl
  41d961:	inc    edx
  41d962:	and    BYTE PTR [edx+0x44],0xf
  41d966:	mov    edi,0x96bc9756
  41d96b:	pop    eax
  41d96c:	jo     0x41d8fc
  41d96e:	lahf   
  41d96f:	lods   eax,DWORD PTR ds:[esi]
  41d970:	es jg  0x41d9e0
  41d973:	push   esi
  41d974:	fs ss cdq 
  41d977:	or     ch,BYTE PTR [ebx]
  41d979:	or     DWORD PTR ds:0xfbbe306f,esi
  41d97f:	aaa    
  41d980:	inc    eax
  41d981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d982:	and    al,0xd3
  41d984:	pop    esi
  41d985:	out    0xa4,eax
  41d987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d988:	push   0x3f
  41d98a:	icebp  
  41d98b:	adc    BYTE PTR [esi+0x2b6270f4],cl
  41d991:	iret   
  41d992:	mov    DWORD PTR fs:[ebp-0x18],edi
  41d996:	stc    
  41d997:	retf   
  41d998:	es repnz adc edx,edi
  41d99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d99d:	out    0xf,eax
  41d99f:	xor    eax,0x9e0f2ccd
  41d9a4:	xor    ebx,DWORD PTR [ebx+esi*4]
  41d9a7:	lahf   
  41d9a8:	leave  
  41d9a9:	ja     0x41da13
  41d9ab:	icebp  
  41d9ac:	xchg   esi,eax
  41d9ad:	xor    edi,DWORD PTR [ecx-0x55]
  41d9b0:	out    0xd4,al
  41d9b2:	mov    esi,0xddc64a9a
  41d9b7:	icebp  
  41d9b8:	jmp    0x41da09
  41d9ba:	xchg   BYTE PTR [ebx],ah
  41d9bc:	retf   0x4d89
  41d9bf:	mov    ah,0x8b
  41d9c1:	dec    ebp
  41d9c2:	or     BYTE PTR [ebx-0x737247ab],cl
  41d9c8:	or     bl,bh
  41d9ca:	cld    
  41d9cb:	inc    ecx
  41d9cc:	add    cl,BYTE PTR [ecx+0x4d8bb84d]
  41d9d2:	or     BYTE PTR [edx-0x5a1ead0],bh
  41d9d8:	sub    edx,ecx
  41d9da:	add    edx,DWORD PTR [ebp-0x44]
  41d9dd:	mov    DWORD PTR [ebp-0x44],edx
  41d9e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41d9e3:	xor    ecx,eax
  41d9e5:	add    ecx,esi
  41d9e7:	jne    0x41b5e7
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9f0:	xor    ecx,eax
  41d9f2:	mov    eax,DWORD PTR [ebp+0x10]
  41d9f5:	add    ecx,esi
  41d9f7:	mov    DWORD PTR [eax],ecx
  41d9f9:	pop    edi
  41d9fa:	pop    esi
  41d9fb:	pop    ebx
  41d9fc:	leave  
  41d9fd:	ret    0xc
  41da00:	push   ebp
  41da01:	mov    ebp,esp
  41da03:	sub    esp,0x78
  41da06:	add    ecx,ecx
  41da08:	push   esi
  41da09:	mov    DWORD PTR ds:0x42a1a3,0x13
  41da13:	cmp    DWORD PTR ds:0x42a1a3,0x0
  41da1a:	je     0x41da5c
  41da20:	cmp    DWORD PTR ds:0x42a1a3,0x1e
  41da27:	jle    0x41da5c
  41da2d:	jmp    0x41da4a
  41da32:	push   0x42a18b
  41da37:	push   DWORD PTR [ebp-0x18]
  41da3a:	push   0x429018
  41da3f:	push   0x4290d7
  41da44:	call   DWORD PTR ds:0x42a2b7
  41da4a:	mov    esi,DWORD PTR ds:0x42a1a3
  41da50:	dec    esi
  41da51:	mov    DWORD PTR ds:0x42a1a3,esi
  41da57:	jmp    0x41da13
  41da5c:	push   edi
  41da5d:	mov    eax,ds:0x42942f
  41da62:	sub    DWORD PTR ds:0x42a1d3,ecx
  41da68:	mov    DWORD PTR [ebp-0x24],eax
  41da6b:	and    eax,edi
  41da6d:	mov    eax,ds:0x42954f
  41da72:	movzx  ecx,WORD PTR ds:0x42a12b
  41da79:	adc    ecx,DWORD PTR ds:0x42a19f
  41da7f:	mov    DWORD PTR ds:0x42a12b,ecx
  41da85:	mov    DWORD PTR [ebp-0x30],eax
  41da88:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41da8f:	and    DWORD PTR ds:0x42a12b,ebx
  41da95:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  41da9c:	mov    eax,DWORD PTR [ebp-0x10]
  41da9f:	sub    DWORD PTR ds:0x42a12f,0x69af
  41daa9:	mov    ecx,DWORD PTR [ebp-0x10]
  41daac:	and    edi,0x886
  41dab2:	sub    eax,ecx
  41dab4:	mov    DWORD PTR [ebp-0x10],eax
  41dab7:	sbb    DWORD PTR ds:0x42a16b,0x4fc4
  41dac1:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  41dac8:	and    DWORD PTR ds:0x42a157,0x0
  41dad2:	xor    eax,eax
  41dad4:	or     eax,DWORD PTR ds:0x42a157
  41dada:	inc    eax
  41dadb:	mov    ds:0x42a157,eax
  41dae0:	cmp    DWORD PTR ds:0x42a157,0x2f
  41dae7:	jle    0x41db08
  41daed:	jmp    0x41dafb
  41daf2:	push   DWORD PTR [ebp-0x18]
  41daf5:	call   DWORD PTR ds:0x42a2bf
  41dafb:	cmp    DWORD PTR ds:0x42a157,0x1f
  41db02:	jb     0x41dad2
  41db08:	mov    eax,DWORD PTR [ebp-0x18]
  41db0b:	mov    ecx,DWORD PTR [ebp-0x18]
  41db0e:	mov    esi,DWORD PTR ds:0x42a22f
  41db14:	mov    esi,DWORD PTR [esi]
  41db16:	sbb    DWORD PTR ds:0x42a15b,esi
  41db1c:	sub    eax,ecx
  41db1e:	and    DWORD PTR ds:0x42a18f,0x0
  41db28:	jmp    0x41db3c
  41db2d:	xor    edi,edi
  41db2f:	xor    edi,DWORD PTR ds:0x42a18f
  41db35:	inc    edi
  41db36:	mov    DWORD PTR ds:0x42a18f,edi
  41db3c:	cmp    DWORD PTR ds:0x42a18f,0x19
  41db43:	jae    0x41db6e
  41db49:	cmp    DWORD PTR ds:0x42a18f,0x1e
  41db50:	jle    0x41db6e
  41db56:	jmp    0x41db69
  41db5b:	push   0x2b00
  41db60:	push   DWORD PTR [ebp-0xc]
  41db63:	call   DWORD PTR ds:0x42a2c3
  41db69:	jmp    0x41db2d
  41db6e:	mov    DWORD PTR [ebp-0x18],eax
  41db71:	xor    eax,0x7540
  41db76:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  41db7d:	mov    eax,DWORD PTR [ebp-0xc]
  41db80:	xor    DWORD PTR ds:0x42a1d3,edi
  41db86:	mov    ecx,DWORD PTR [ebp-0xc]
  41db89:	sub    eax,ecx
  41db8b:	jmp    0x41ff41
  41db90:	loope  0x41db9a
  41db92:	loope  0x41db55
  41db94:	xchg   DWORD PTR [edi-0x1517f73f],eax
  41db9a:	iret   
  41db9b:	addr16 inc edi
  41db9d:	sub    BYTE PTR [ecx],dl
  41db9f:	retf   
  41dba0:	not    dl
  41dba2:	jns    0x41dc1e
  41dba4:	loope  0x41dc05
  41dba6:	jp     0x41dc22
  41dba8:	test   al,0x7d
  41dbaa:	popf   
  41dbab:	(bad)  
  41dbac:	sbb    al,0x1d
  41dbae:	fiadd  WORD PTR [esi-0x41]
  41dbb1:	dec    ebx
  41dbb2:	sbb    edx,DWORD PTR [ebx-0x3a]
  41dbb5:	ror    BYTE PTR [eax-0x2ee582ee],1
  41dbbb:	add    dh,BYTE PTR [eax-0x61cf24e5]
  41dbc1:	xchg   edi,eax
  41dbc2:	into   
  41dbc3:	je     0x41db74
  41dbc5:	xchg   edx,eax
  41dbc6:	push   ss
  41dbc7:	imul   edx,DWORD PTR [esp+ebp*4],0x1d82891c
  41dbce:	cli    
  41dbcf:	lods   al,BYTE PTR ds:[esi]
  41dbd0:	cli    
  41dbd1:	mov    BYTE PTR [ebp+ecx*1-0x3f],al
  41dbd5:	shl    esi,1
  41dbd7:	out    dx,al
  41dbd8:	stos   DWORD PTR es:[edi],eax
  41dbd9:	jg     0x41db70
  41dbdb:	cli    
  41dbdc:	aad    0xb7
  41dbde:	outs   dx,DWORD PTR ds:[esi]
  41dbdf:	sbb    eax,0xb254e3a1
  41dbe4:	dec    esi
  41dbe5:	jp     0x41db8b
  41dbe7:	push   eax
  41dbe8:	sbb    bl,dh
  41dbea:	out    0x83,al
  41dbec:	xchg   edx,eax
  41dbed:	or     DWORD PTR [esi],ebp
  41dbef:	add    ah,bl
  41dbf1:	fs pop edi
  41dbf3:	sub    eax,0x97384dd
  41dbf8:	leave  
  41dbf9:	add    eax,0x1679df4
  41dbfe:	pop    esp
  41dbff:	push   0x604ae674
  41dc04:	xchg   esi,eax
  41dc05:	sbb    BYTE PTR [ebp+0x736e6690],bh
  41dc0b:	(bad)  
  41dc0c:	out    0xcb,eax
  41dc0e:	out    0x7b,eax
  41dc10:	add    eax,0xe3787c4f
  41dc15:	loopne 0x41db9a
  41dc17:	pop    esi
  41dc18:	shr    BYTE PTR [edi-0x395fc1f6],0xa
  41dc1f:	jmp    0x41dc38
  41dc21:	jmp    0x4eee:0xdfda017b
  41dc28:	inc    ecx
  41dc29:	lea    ebx,[ecx+0x7b]
  41dc2c:	or     ah,BYTE PTR [esi+0x3e]
  41dc2f:	retf   0x858c
  41dc32:	or     eax,0xfd6953ae
  41dc37:	cld    
  41dc38:	leave  
  41dc39:	or     ebx,DWORD PTR [edi-0x15]
  41dc3c:	mov    ds:0x18d5f345,eax
  41dc41:	mov    ah,0x97
  41dc43:	push   0x4845b4f5
  41dc48:	jle    0x41dca7
  41dc4a:	addr16 jmp 0x918e6950
  41dc50:	dec    ebp
  41dc51:	sti    
  41dc52:	dec    edx
  41dc53:	or     al,0x58
  41dc55:	xor    eax,0x3022e9b4
  41dc5a:	xchg   ebx,eax
  41dc5b:	inc    edx
  41dc5c:	aad    0x1a
  41dc5e:	lods   al,BYTE PTR ds:[esi]
  41dc5f:	push   cs
  41dc60:	mov    dl,0x7e
  41dc62:	stos   DWORD PTR es:[edi],eax
  41dc63:	cs pop esp
  41dc65:	hlt    
  41dc66:	inc    edi
  41dc67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc68:	in     eax,dx
  41dc69:	lods   eax,DWORD PTR ds:[esi]
  41dc6a:	aam    0x6e
  41dc6c:	out    0x5c,eax
  41dc6e:	dec    ebx
  41dc6f:	and    al,0x4d
  41dc71:	cmc    
  41dc72:	fld    TBYTE PTR [edi]
  41dc74:	in     al,0x6a
  41dc76:	rol    BYTE PTR [eax+edx*8+0x2c],cl
  41dc7a:	or     al,0x2f
  41dc7c:	and    eax,0xe65ee508
  41dc81:	pusha  
  41dc82:	xor    edi,ecx
  41dc84:	pop    edi
  41dc85:	das    
  41dc86:	test   BYTE PTR [ecx],ch
  41dc88:	mov    cl,0x2
  41dc8a:	xchg   edi,eax
  41dc8b:	sub    esp,edi
  41dc8d:	push   ecx
  41dc8e:	pop    ebp
  41dc8f:	sbb    al,ch
  41dc91:	adc    edx,0x31a7d44
  41dc97:	inc    ecx
  41dc98:	inc    esi
  41dc99:	rcl    esi,cl
  41dc9b:	push   ds
  41dc9c:	inc    edi
  41dc9d:	xor    eax,edx
  41dc9f:	mov    ch,0x2c
  41dca1:	test   eax,0xce518412
  41dca6:	bound  edi,QWORD PTR [ebp+ebx*8-0x431d6cba]
  41dcad:	popf   
  41dcae:	mov    ecx,0xf6ef4cda
  41dcb3:	arpl   WORD PTR [ebx],cx
  41dcb5:	and    eax,0x2bce45d6
  41dcba:	and    al,0x29
  41dcbc:	xor    al,0x27
  41dcbe:	inc    esp
  41dcbf:	dec    ebp
  41dcc0:	or     edx,edi
  41dcc2:	or     ebx,edx
  41dcc4:	jno    0x41dd44
  41dcc6:	push   ecx
  41dcc7:	jmp    0x8e9f2381
  41dccc:	cmc    
  41dccd:	cmp    al,0xb2
  41dccf:	ss mov ch,0xe3
  41dcd2:	leave  
  41dcd3:	dec    eax
  41dcd4:	or     edi,DWORD PTR [ebx]
  41dcd6:	pop    eax
  41dcd7:	dec    esi
  41dcd8:	bound  esp,QWORD PTR [edx]
  41dcda:	lock sti 
  41dcdc:	xor    eax,0xfcf2c4cf
  41dce1:	jno    0x41dc75
  41dce3:	mov    eax,ds:0x781265fd
  41dce8:	push   0xba33e3f4
  41dced:	ror    ebp,1
  41dcef:	push   esp
  41dcf0:	push   esi
  41dcf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcf2:	mov    bh,0x18
  41dcf4:	mov    ebp,0x542002ff
  41dcf9:	test   eax,0xf999727f
  41dcfe:	add    edi,DWORD PTR [edx-0x6b]
  41dd01:	popa   
  41dd02:	dec    esi
  41dd03:	dec    esp
  41dd04:	je     0x41dcd4
  41dd06:	mov    dh,0x6c
  41dd08:	cmp    DWORD PTR [eax+0x1f9699a1],edi
  41dd0e:	add    esi,DWORD PTR [ebp+0x6d894935]
  41dd14:	fwait
  41dd15:	push   es
  41dd16:	xchg   esp,eax
  41dd17:	sbb    BYTE PTR [edi+0x771aa3df],dl
  41dd1d:	jnp    0x41dcf6
  41dd1f:	mov    bl,0xd6
  41dd21:	dec    eax
  41dd22:	and    al,0xf1
  41dd24:	std    
  41dd25:	sti    
  41dd26:	test   DWORD PTR [edi+0x54],eax
  41dd29:	push   edi
  41dd2a:	(bad)  
  41dd2b:	hlt    
  41dd2c:	rcr    DWORD PTR [edi],1
  41dd2e:	jb     0x41dda5
  41dd30:	adc    al,0x20
  41dd32:	lods   eax,DWORD PTR ds:[esi]
  41dd33:	stc    
  41dd34:	mov    ss,WORD PTR [ecx+0x258aaa97]
  41dd3a:	jb     0x41dcf5
  41dd3c:	jb     0x41dd3a
  41dd3e:	shl    DWORD PTR [ecx-0x23fdde06],0xab
  41dd45:	pop    edx
  41dd46:	push   ecx
  41dd47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd48:	xor    DWORD PTR [ebx],ebx
  41dd4a:	lahf   
  41dd4b:	jo     0x41ddbf
  41dd4d:	ja     0x41dcdc
  41dd4f:	int    0x87
  41dd51:	rol    esi,1
  41dd53:	sub    eax,0x1d8f328c
  41dd58:	ds out 0x3c,ax
  41dd5c:	mov    ds:0x4e865167,al
  41dd61:	shl    BYTE PTR [edi-0x7a573d45],1
  41dd67:	push   si
  41dd69:	cld    
  41dd6a:	mov    dl,0x63
  41dd6c:	xchg   edx,eax
  41dd6d:	add    BYTE PTR [eax],ah
  41dd6f:	xor    ch,BYTE PTR [esi]
  41dd71:	jne    0x41dde9
  41dd73:	mov    ah,0x2
  41dd75:	ret    0xc2b9
  41dd78:	jle    0x41dd1a
  41dd7a:	pop    esp
  41dd7b:	scas   al,BYTE PTR es:[edi]
  41dd7c:	int    0xd6
  41dd7e:	adc    esi,ebp
  41dd80:	fcmove st,st(0)
  41dd82:	cmc    
  41dd83:	jb     0x41ddda
  41dd85:	xor    eax,0x9ae1cd50
  41dd8a:	fild   WORD PTR [eax-0x71ee26e0]
  41dd90:	call   0xcc39:0x5295a037
  41dd97:	(bad)  
  41dd98:	xchg   DWORD PTR [ebx+0xf],eax
  41dd9b:	test   al,0x3a
  41dd9d:	cli    
  41dd9e:	xchg   esp,eax
  41dd9f:	mov    eax,ds:0xb46d923a
  41dda4:	(bad)  
  41dda5:	cmp    eax,0x98356023
  41ddaa:	and    ecx,DWORD PTR [edi]
  41ddac:	push   esi
  41ddad:	add    bh,BYTE PTR ds:[ebx]
  41ddb0:	mov    ebx,0xa9e8f4a5
  41ddb5:	ror    cl,0xc7
  41ddb8:	xchg   ebp,eax
  41ddb9:	ds and al,0xc5
  41ddbc:	cmp    ebp,ecx
  41ddbe:	dec    esi
  41ddbf:	cmp    ebx,ecx
  41ddc1:	push   cs
  41ddc2:	sbb    cl,BYTE PTR [ecx+ebx*2+0x2c6c7baa]
  41ddc9:	mov    ah,BYTE PTR [edx+0x32]
  41ddcc:	(bad)  
  41ddcd:	retf   0xe00a
  41ddd0:	push   esp
  41ddd1:	dec    esi
  41ddd2:	rcr    DWORD PTR [ebx+ebx*1],0x31
  41ddd6:	aas    
  41ddd7:	in     eax,dx
  41ddd8:	and    al,0xd7
  41ddda:	ja     0x41ddd9
  41dddc:	setbe  BYTE PTR [ebp+0xa6aa2b9]
  41dde3:	jb     0x41dde6
  41dde5:	cmp    eax,DWORD PTR [ebx]
  41dde7:	retf   
  41dde8:	sub    al,0x5
  41ddea:	mov    DWORD PTR [ebx+edx*8-0x3a],edx
  41ddee:	mov    WORD PTR [ebp+0x16bf18e0],ds
  41ddf4:	scas   eax,DWORD PTR es:[edi]
  41ddf5:	jl     0x41ddb5
  41ddf7:	mov    ah,0x99
  41ddf9:	add    ah,BYTE PTR [ebp-0x4f6f9330]
  41ddff:	mov    dh,0xa1
  41de01:	cmp    ebx,edx
  41de03:	sbb    edx,DWORD PTR [eax-0x7c]
  41de06:	mov    esi,0xae9d39a0
  41de0b:	stos   BYTE PTR es:[edi],al
  41de0c:	into   
  41de0d:	push   ds
  41de0e:	mov    DWORD PTR [edx],esp
  41de10:	dec    edx
  41de11:	mov    DWORD PTR [edx-0x345c919e],edi
  41de17:	test   eax,0x44ff9204
  41de1c:	nop
  41de1d:	aaa    
  41de1e:	pop    esp
  41de1f:	or     BYTE PTR [ecx-0x21],cl
  41de22:	outs   dx,BYTE PTR ds:[esi]
  41de23:	jl     0x41ddcd
  41de25:	scas   al,BYTE PTR es:[edi]
  41de26:	push   0x74
  41de28:	add    dl,dl
  41de2a:	out    dx,al
  41de2b:	test   al,0x54
  41de2d:	ror    BYTE PTR [ebp-0x3e80ebdb],cl
  41de33:	mov    dh,BYTE PTR [eax]
  41de35:	fnstenv [edi+0x1d]
  41de38:	scas   al,BYTE PTR es:[edi]
  41de39:	cwde   
  41de3a:	add    al,0x99
  41de3c:	add    eax,0x8c503022
  41de41:	add    al,0x17
  41de43:	sbb    esi,DWORD PTR [ebx]
  41de45:	inc    esi
  41de46:	shr    DWORD PTR [ebp-0x12],0xf6
  41de4a:	ret    0x28e0
  41de4d:	adc    ebp,DWORD PTR cs:[ebx+0x320ae950]
  41de54:	int3   
  41de55:	sbb    eax,0x2277497d
  41de5a:	cmp    eax,DWORD PTR [esi-0x24]
  41de5d:	push   ecx
  41de5e:	test   al,0xb
  41de60:	(bad)  
  41de61:	sbb    ebx,edx
  41de63:	shl    DWORD PTR ss:[edi+0x3a],0xb1
  41de68:	cmp    ebp,DWORD PTR [edx+esi*4+0x6e957702]
  41de6f:	pop    ebx
  41de70:	xor    bh,BYTE PTR [ecx]
  41de72:	add    al,0x28
  41de74:	adc    BYTE PTR [edi],0x3f
  41de77:	jle    0x41de34
  41de79:	jb     0x41de50
  41de7b:	or     bl,BYTE PTR [eax+0x42504e9]
  41de81:	dec    eax
  41de82:	mov    ?,WORD PTR [ecx]
  41de84:	add    DWORD PTR [edi-0x19],0xffffff88
  41de88:	inc    esi
  41de89:	gs inc esp
  41de8b:	sbb    ebp,DWORD PTR gs:[esi]
  41de8e:	pop    ebp
  41de8f:	cmp    bl,BYTE PTR [edx]
  41de91:	or     eax,0x55a26cd1
  41de96:	sbb    DWORD PTR [ecx-0xb],ebx
  41de99:	cmp    eax,0xa873293e
  41de9e:	sbb    ch,BYTE PTR [ecx-0x43]
  41dea1:	outs   dx,DWORD PTR ds:[esi]
  41dea2:	daa    
  41dea3:	xchg   esp,eax
  41dea4:	mov    dh,0xf9
  41dea6:	push   ecx
  41dea7:	or     bh,BYTE PTR [edx+0x19]
  41deaa:	cmp    BYTE PTR [ebx],0x90
  41dead:	or     bl,BYTE PTR [edx+eiz*8]
  41deb0:	pop    edx
  41deb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deb2:	stos   DWORD PTR es:[edi],eax
  41deb3:	stc    
  41deb4:	dec    edx
  41deb5:	xchg   ebx,eax
  41deb6:	xor    al,0x17
  41deb8:	push   ecx
  41deb9:	cs clc 
  41debb:	lods   al,BYTE PTR ds:[esi]
  41debc:	cmc    
  41debd:	mov    esi,0x4087f321
  41dec2:	mov    dl,0x8e
  41dec4:	loopne 0x41df0d
  41dec6:	jmp    0xc642:0xb380fb94
  41decd:	cmp    DWORD PTR [ebp+ebp*8+0x4c],0xdb8373eb
  41ded5:	and    DWORD PTR [edx],0x8a13c31c
  41dedb:	stc    
  41dedc:	xor    ecx,esp
  41dede:	add    ebx,DWORD PTR [ecx-0x46f7a2ee]
  41dee4:	dec    BYTE PTR [edx]
  41dee6:	mov    ah,0xbc
  41dee8:	into   
  41dee9:	dec    edx
  41deea:	cmp    eax,0x8f3d2ea6
  41deef:	dec    ecx
  41def0:	mov    ds:0x3ea3e825,eax
  41def5:	xor    eax,0xd8976234
  41defa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41defb:	shl    DWORD PTR [edi+0x56],0x5
  41deff:	sub    al,0xa1
  41df01:	(bad)  
  41df02:	cli    
  41df03:	push   eax
  41df04:	add    al,0xbe
  41df06:	push   cs
  41df07:	daa    
  41df08:	arpl   WORD PTR [ecx+0x2c54ae00],bp
  41df0e:	push   ecx
  41df0f:	cmp    esp,ebp
  41df11:	cdq    
  41df12:	hlt    
  41df13:	hlt    
  41df14:	sub    eax,0x82b774b5
  41df19:	xor    eax,0x9ce271bf
  41df1e:	retf   0x9c3c
  41df21:	aam    0x7f
  41df23:	das    
  41df24:	inc    ebx
  41df25:	frstpm(287 only) 
  41df27:	dec    esi
  41df28:	fdiv   st(5),st
  41df2a:	push   esp
  41df2b:	ror    DWORD PTR [edi+0x67],1
  41df2e:	sbb    eax,0xd09dc4b6
  41df33:	(bad)  
  41df34:	adc    esi,DWORD PTR [edx-0x7e]
  41df37:	inc    esi
  41df38:	mov    dl,0x65
  41df3a:	push   esi
  41df3b:	mov    cl,0x9d
  41df3d:	fldenv [edi]
  41df3f:	je     0x41df66
  41df41:	xchg   edx,eax
  41df42:	cmp    DWORD PTR [edi],edi
  41df44:	jp     0x41df80
  41df46:	dec    esp
  41df47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df48:	mov    ebp,edx
  41df4a:	mov    dh,0xf7
  41df4c:	jp     0x41df63
  41df4e:	push   ds
  41df4f:	sub    DWORD PTR [edx-0x25],eax
  41df52:	xor    BYTE PTR [ecx],bl
  41df54:	push   es
  41df55:	shl    BYTE PTR [esi+0x56],cl
  41df58:	mov    ebp,0x77e280e3
  41df5d:	sbb    DWORD PTR [edx+0x4d],esp
  41df60:	sub    eax,0x50580c9e
  41df65:	dec    ebp
  41df66:	js     0x41df97
  41df68:	fstp   QWORD PTR [esi+0x6be705ab]
  41df6e:	pop    ds
  41df6f:	sbb    al,0x9c
  41df71:	das    
  41df72:	xchg   esi,eax
  41df73:	pushf  
  41df74:	neg    edx
  41df76:	arpl   di,bp
  41df78:	xchg   cl,al
  41df7a:	push   ss
  41df7b:	xlat   BYTE PTR ds:[ebx]
  41df7c:	rcl    DWORD PTR [ebp+0x36b61c99],0x85
  41df83:	fistp  QWORD PTR [ebp+ebp*2+0x5ffd8fc3]
  41df8a:	mov    eax,0x5e54b92f
  41df8f:	mov    al,0xd8
  41df91:	mov    ecx,edi
  41df93:	push   edi
  41df94:	mov    eax,0x46619152
  41df99:	inc    edi
  41df9a:	push   cs
  41df9b:	dec    eax
  41df9c:	sbb    ch,BYTE PTR ds:0xf4d3bd9e
  41dfa2:	sbb    BYTE PTR [ebx-0x69],cl
  41dfa5:	iret   
  41dfa6:	sbb    al,0x3a
  41dfa8:	mov    DWORD PTR [eax],esp
  41dfaa:	aam    0x2e
  41dfac:	jge    0x41df85
  41dfae:	or     eax,0xf62a6ff1
  41dfb3:	add    al,0x81
  41dfb5:	ss xchg edi,eax
  41dfb7:	loope  0x41dfab
  41dfb9:	xor    ebx,0xffffffec
  41dfbc:	or     esp,DWORD PTR [eax+eiz*4+0x2dcee3c5]
  41dfc3:	in     eax,dx
  41dfc4:	add    DWORD PTR [eax+ebx*8+0x34],edi
  41dfc8:	jnp    0x41df9c
  41dfca:	lahf   
  41dfcb:	xor    al,0xa8
  41dfcd:	fucomip st,st(5)
  41dfcf:	adc    al,0xc
  41dfd1:	inc    ecx
  41dfd2:	mov    edi,0x90b06c2c
  41dfd7:	or     dh,BYTE PTR [ecx-0x2d25c4ac]
  41dfdd:	pusha  
  41dfde:	loopne 0x41dff1
  41dfe0:	out    0xdc,eax
  41dfe2:	(bad)  
  41dfe3:	das    
  41dfe4:	dec    eax
  41dfe5:	xchg   esi,eax
  41dfe6:	pusha  
  41dfe7:	aad    0x29
  41dfe9:	test   al,0xbb
  41dfeb:	inc    eax
  41dfec:	retf   0x2d36
  41dfef:	stc    
  41dff0:	iret   
  41dff1:	stos   DWORD PTR es:[edi],eax
  41dff2:	pusha  
  41dff3:	mov    eax,ds:0xa9c4c0e
  41dff8:	push   ss
  41dff9:	xchg   edx,eax
  41dffa:	pop    ss
  41dffb:	imul   eax,DWORD PTR [eax],0xffffffe5
  41dffe:	mov    edi,0xffa7045d
  41e003:	test   al,0x30
  41e005:	mov    ecx,0x12448d6
  41e00a:	push   esp
  41e00b:	mov    ah,0xf6
  41e00d:	cmp    dl,BYTE PTR es:[ecx-0x55]
  41e011:	int3   
  41e012:	xor    ah,bh
  41e014:	adc    al,0x88
  41e016:	iret   
  41e017:	inc    ecx
  41e018:	mov    ah,0x52
  41e01a:	pushf  
  41e01b:	sbb    eax,0xe1d831e8
  41e020:	sub    edi,edi
  41e022:	(bad)  
  41e023:	pusha  
  41e024:	shr    BYTE PTR [esi-0x1a7eff09],cl
  41e02a:	push   ecx
  41e02b:	sub    eax,0x2c39d1cc
  41e030:	jp     0x41dfb8
  41e032:	xchg   DWORD PTR [edi],esp
  41e034:	mov    ebp,DWORD PTR [ecx]
  41e036:	in     eax,0x61
  41e038:	pop    eax
  41e039:	and    BYTE PTR [edx+0x52da1b52],cl
  41e03f:	sbb    esi,ebx
  41e041:	jne    0x41e055
  41e043:	or     al,0x3f
  41e045:	mov    bl,0x6f
  41e047:	repz xor eax,0xa56e6d4c
  41e04d:	fistp  DWORD PTR [edi]
  41e04f:	jp     0x41e09e
  41e051:	imul   ecx,DWORD PTR [ebx],0x65
  41e054:	or     bh,BYTE PTR [esi]
  41e056:	xor    eax,0x7b857a1d
  41e05b:	mov    eax,0x7469390c
  41e060:	push   esi
  41e061:	mov    ebp,0x9e84a750
  41e066:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41e068:	and    eax,0x1eafaf5f
  41e06d:	mov    dh,bl
  41e06f:	cmp    al,0x3
  41e071:	xlat   BYTE PTR ds:[ebx]
  41e072:	and    eax,0xc065ad4a
  41e077:	or     BYTE PTR ds:0x3f683c4d,bl
  41e07d:	sbb    DWORD PTR [ecx-0x6c4210da],0x749a7e2d
  41e087:	pushf  
  41e088:	lds    edx,FWORD PTR [ecx*4-0xbd08719]
  41e08f:	xor    ebp,DWORD PTR [eax-0x3628a1bb]
  41e095:	fnstsw WORD PTR [eax+0x25]
  41e098:	icebp  
  41e099:	pop    ds
  41e09a:	xor    esi,DWORD PTR [esi+0x2f32f00a]
  41e0a0:	adc    ah,BYTE PTR [ecx+0xc4a2699]
  41e0a6:	and    ebx,DWORD PTR [edx-0x51ff08e5]
  41e0ac:	jns    0x41e0c2
  41e0ae:	add    bh,ah
  41e0b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0b1:	push   0xc76ca3a8
  41e0b6:	je     0x41e0d7
  41e0b8:	add    BYTE PTR ds:0xc7b86c76,bl
  41e0be:	imul   eax,DWORD PTR [ebx],0x8c25a91b
  41e0c4:	aas    
  41e0c5:	cmc    
  41e0c6:	test   dh,ah
  41e0c8:	or     dh,BYTE PTR [ebp-0x408ce0ea]
  41e0ce:	push   esp
  41e0cf:	cwde   
  41e0d0:	call   0x27db6887
  41e0d5:	aas    
  41e0d6:	(bad)  
  41e0da:	jo     0x41e14f
  41e0dc:	enter  0x60ee,0xe5
  41e0e0:	ins    BYTE PTR es:[edi],dx
  41e0e1:	retw   
  41e0e3:	xor    DWORD PTR ds:0x6b3070fe,edx
  41e0e9:	ret    
  41e0ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0eb:	imul   edx,ebp,0x46a3a206
  41e0f1:	jne    0x41e078
  41e0f3:	(bad)  
  41e0f4:	clc    
  41e0f5:	inc    eax
  41e0f6:	push   ss
  41e0f7:	adc    esi,DWORD PTR [edi]
  41e0f9:	pop    esi
  41e0fa:	data16 add al,0xc9
  41e0fd:	repz repz mov ds:0x236a9a5c,al
  41e104:	popa   
  41e105:	sbb    al,0x39
  41e107:	fcom   DWORD PTR [esi]
  41e109:	sahf   
  41e10a:	retf   
  41e10b:	inc    ebp
  41e10c:	mov    al,ds:0x435d3612
  41e111:	cs mov bl,0x40
  41e114:	enter  0x9749,0x32
  41e118:	push   ebp
  41e119:	pop    ebx
  41e11a:	dec    esi
  41e11b:	ins    BYTE PTR es:[edi],dx
  41e11c:	repnz (bad) 
  41e11e:	dec    eax
  41e11f:	sar    ah,cl
  41e121:	pop    esp
  41e122:	adc    eax,0xc6b697bd
  41e127:	ret    
  41e128:	dec    esi
  41e129:	enter  0xb071,0xdb
  41e12d:	addr16 loope 0x41e116
  41e130:	ja     0x41e142
  41e132:	push   0xffffffac
  41e134:	mov    DWORD PTR [edi],ecx
  41e136:	mov    ds:0xe6df0d6f,al
  41e13b:	bound  eax,QWORD PTR [ecx+ebx*8-0xa]
  41e13f:	clc    
  41e140:	push   es
  41e141:	(bad)  
  41e142:	loope  0x41e1a2
  41e144:	push   esi
  41e145:	jno    0x41e0e0
  41e147:	cmp    esi,esi
  41e149:	(bad)  
  41e14b:	mov    al,0xa6
  41e14d:	and    BYTE PTR [eax+0x10],0x7c
  41e151:	mov    DWORD PTR [ecx+0xbff0a1c],edi
  41e157:	jnp    0x41e0f4
  41e159:	adc    edx,ebp
  41e15b:	xchg   ebx,eax
  41e15c:	push   ss
  41e15d:	ds das 
  41e15f:	mov    ds,WORD PTR [esi]
  41e161:	xchg   esi,eax
  41e162:	sbb    DWORD PTR [edx+0x1b],esi
  41e165:	shl    BYTE PTR [ecx+eiz*8],0x30
  41e169:	sub    ebp,ecx
  41e16b:	cld    
  41e16c:	jecxz  0x41e1a3
  41e16e:	sub    bh,BYTE PTR [eax]
  41e170:	aam    0xe0
  41e172:	loope  0x41e1b5
  41e174:	xor    bh,dh
  41e176:	dec    esp
  41e177:	mov    bl,0xc1
  41e179:	sub    DWORD PTR [ebx],0x79
  41e17c:	or     esi,DWORD PTR [eax+0x88a54a7]
  41e182:	mov    dl,0x32
  41e184:	and    eax,0xa3ee176e
  41e189:	(bad)
  41e18c:	sti    
  41e18d:	cmp    BYTE PTR [ebp+0x287486a0],al
  41e193:	ja     0x41e163
  41e195:	outs   dx,BYTE PTR ds:[esi]
  41e196:	sub    DWORD PTR [ebp-0x40752374],ecx
  41e19c:	hlt    
  41e19d:	gs dec edx
  41e19f:	xor    al,0xe6
  41e1a1:	mov    esp,0x7d199b7a
  41e1a6:	push   ecx
  41e1a7:	cmp    eax,0xb09c2b62
  41e1ac:	pop    ds
  41e1ad:	inc    edi
  41e1ae:	cdq    
  41e1af:	and    dl,BYTE PTR [edx-0x22]
  41e1b2:	inc    edx
  41e1b3:	lods   eax,DWORD PTR ds:[esi]
  41e1b4:	or     edi,ecx
  41e1b6:	nop
  41e1b7:	(bad)  
  41e1b8:	dec    ebx
  41e1b9:	jno    0x41e178
  41e1bb:	sti    
  41e1bc:	js     0x41e221
  41e1be:	xor    al,0xbe
  41e1c0:	add    esp,DWORD PTR [ecx]
  41e1c2:	and    al,0x63
  41e1c4:	push   es
  41e1c5:	cmp    BYTE PTR [esi+0x3c],dh
  41e1c8:	stc    
  41e1c9:	jb     0x41e176
  41e1cb:	lea    ecx,[edi-0x58]
  41e1ce:	shl    BYTE PTR [edi-0x76c29ce1],cl
  41e1d4:	cmc    
  41e1d5:	sbb    esp,DWORD PTR [esi+edi*4]
  41e1d8:	push   0xffffffca
  41e1da:	stos   BYTE PTR es:[edi],al
  41e1db:	lods   eax,DWORD PTR ds:[esi]
  41e1dc:	js     0x41e1f4
  41e1de:	sub    eax,0x41baa0f5
  41e1e3:	jp     0x41e217
  41e1e5:	sub    ecx,DWORD PTR [ebx-0x45]
  41e1e8:	xchg   esp,eax
  41e1e9:	stos   BYTE PTR es:[edi],al
  41e1ea:	mov    ebp,0x9c59ac45
  41e1ef:	out    dx,eax
  41e1f0:	dec    esi
  41e1f1:	add    eax,0x83c628eb
  41e1f6:	icebp  
  41e1f7:	inc    ecx
  41e1f8:	dec    edx
  41e1f9:	icebp  
  41e1fa:	cmp    DWORD PTR ds:0xf6ae0ef8,edx
  41e200:	push   ds
  41e201:	je     0x41e190
  41e203:	pop    ebp
  41e204:	and    al,0xed
  41e206:	jno    0x41e24e
  41e208:	cdq    
  41e209:	bound  ebp,QWORD PTR [ebx-0xb38552b]
  41e20f:	stos   BYTE PTR es:[edi],al
  41e210:	fidiv  DWORD PTR [edx+0x5e7f1f7f]
  41e216:	adc    DWORD PTR [ebx-0x2a],0x36
  41e21a:	fdivr  QWORD PTR [esi]
  41e21c:	shr    BYTE PTR [esi+0x65a1e405],1
  41e222:	repnz in al,dx
  41e224:	and    ah,BYTE PTR [ebp+0x73e831c8]
  41e22a:	loopne 0x41e25c
  41e22c:	pop    esp
  41e22d:	cmp    BYTE PTR [esi],cl
  41e22f:	test   BYTE PTR [ebx-0x79],0xa4
  41e233:	push   ds
  41e234:	ja     0x41e218
  41e236:	jl     0x41e28b
  41e238:	rcr    DWORD PTR [ecx],0x34
  41e23b:	xor    ebp,DWORD PTR [eax+0x5f]
  41e23e:	daa    
  41e23f:	rol    bh,1
  41e241:	jge    0x41e289
  41e243:	xchg   ecx,ebx
  41e245:	and    al,0x76
  41e247:	(bad)  
  41e248:	push   ds
  41e249:	add    eax,0xf9125a62
  41e24e:	loopne 0x41e1e1
  41e250:	or     BYTE PTR [edi-0x47],0x0
  41e254:	sbb    eax,0x3d5377f0
  41e259:	pop    ecx
  41e25a:	int3   
  41e25b:	mov    esp,DWORD PTR [edi-0x6]
  41e25e:	dec    esp
  41e25f:	mov    ds:0x56c6eaec,al
  41e264:	or     DWORD PTR [ebx],esp
  41e266:	fnstcw WORD PTR [ebx-0xe]
  41e269:	fs icebp 
  41e26b:	lahf   
  41e26c:	push   0xffffff96
  41e26e:	arpl   WORD PTR [ecx+eax*4-0x57817ffc],cx
  41e275:	in     eax,dx
  41e276:	and    bl,BYTE PTR [ecx-0x144ab4ab]
  41e27c:	or     al,BYTE PTR [ecx]
  41e27e:	push   edi
  41e27f:	test   al,0xe3
  41e281:	or     cl,dh
  41e283:	push   edx
  41e284:	jle    0x41e25b
  41e286:	fiadd  WORD PTR [ebp+ecx*1-0x5e]
  41e28a:	das    
  41e28b:	dec    edi
  41e28c:	and    eax,0xb9fcdd5b
  41e291:	dec    esp
  41e292:	in     al,dx
  41e293:	(bad)  
  41e294:	fimul  DWORD PTR [edi+eiz*1-0x62]
  41e298:	in     eax,0x22
  41e29a:	aas    
  41e29b:	xor    BYTE PTR [ecx-0x3f8d4f92],dl
  41e2a1:	mov    ch,0x5a
  41e2a3:	adc    DWORD PTR [ecx+0x71],edi
  41e2a6:	mov    al,ds:0x416dd7e4
  41e2ab:	int    0x2b
  41e2ad:	mov    edi,0x43b9c326
  41e2b2:	sbb    al,0xcf
  41e2b4:	scas   eax,DWORD PTR es:[edi]
  41e2b5:	mov    edi,0x9174c477
  41e2ba:	jae    0x41e2ba
  41e2bc:	dec    esi
  41e2bd:	or     al,0xc
  41e2bf:	(bad)  
  41e2c0:	jl     0x41e30f
  41e2c2:	push   es
  41e2c3:	(bad)  
  41e2c4:	xchg   edi,eax
  41e2c5:	pxor   mm3,mm5
  41e2c8:	xor    DWORD PTR [edx-0x30],ebx
  41e2cb:	call   0xf59e0764
  41e2d0:	fsub   QWORD PTR [esi+0x3a]
  41e2d3:	and    DWORD PTR ds:0x928df1c,edx
  41e2d9:	mov    BYTE PTR [esi+0x4a],bh
  41e2dc:	xor    al,0x9d
  41e2de:	pop    ecx
  41e2df:	fld    QWORD PTR [eax-0x7b]
  41e2e2:	in     eax,0x67
  41e2e4:	pop    esi
  41e2e5:	dec    edx
  41e2e6:	popf   
  41e2e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2e8:	(bad)  
  41e2e9:	cs in  eax,0xd0
  41e2ec:	mov    ecx,0x5a09a179
  41e2f1:	arpl   WORD PTR [eax],si
  41e2f3:	test   BYTE PTR [esi],0xdb
  41e2f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2f7:	ins    DWORD PTR es:[edi],dx
  41e2f8:	sbb    esp,DWORD PTR [eax+edi*1+0x1df15b6]
  41e2ff:	mov    cs,esi
  41e301:	pop    ecx
  41e302:	scas   al,BYTE PTR es:[edi]
  41e303:	repz out dx,al
  41e305:	js     0x41e2e9
  41e307:	fmul   st(4),st
  41e309:	sub    BYTE PTR ds:0xd265d7ab,dl
  41e30f:	push   edx
  41e310:	fldenv [ecx+0x38]
  41e313:	xchg   edx,eax
  41e314:	out    dx,al
  41e315:	jns    0x41e345
  41e317:	lea    eax,[esi-0x50da2ffd]
  41e31d:	mov    edi,eax
  41e31f:	mov    al,ds:0x6b227bd2
  41e324:	std    
  41e325:	pop    ebx
  41e326:	xchg   DWORD PTR [eax-0x6d],ecx
  41e329:	or     BYTE PTR [ebx+0x65cca246],ch
  41e32f:	dec    esi
  41e330:	ins    DWORD PTR es:[edi],dx
  41e331:	out    dx,al
  41e332:	mov    ebp,esp
  41e334:	cli    
  41e335:	ja     0x41e395
  41e337:	add    al,0x1c
  41e339:	cmp    BYTE PTR [esi-0x5762ada4],ah
  41e33f:	mov    ah,0xc1
  41e341:	ins    DWORD PTR es:[edi],dx
  41e342:	fwait
  41e343:	mov    edx,0x86007605
  41e348:	sbb    BYTE PTR [edi-0x294925a2],dl
  41e34e:	cmp    edx,DWORD PTR [edx]
  41e350:	leave  
  41e351:	or     al,0x8b
  41e353:	cmp    al,0xdd
  41e355:	aam    0xe3
  41e357:	out    0x57,al
  41e359:	icebp  
  41e35a:	aaa    
  41e35b:	lea    edx,[ebp+0x676c7759]
  41e361:	and    BYTE PTR [eax*8-0x7ac06294],ch
  41e368:	jmp    0xf61f6a80
  41e36d:	enter  0xe41b,0xae
  41e371:	stos   DWORD PTR es:[edi],eax
  41e372:	inc    edx
  41e373:	sub    BYTE PTR [ebx+0x7b],ch
  41e376:	dec    esp
  41e377:	adc    eax,DWORD PTR [esi+0x213b0b3b]
  41e37d:	xchg   DWORD PTR [esi+esi*4+0x36ae7dd8],eax
  41e384:	lods   eax,DWORD PTR ds:[esi]
  41e385:	and    esi,DWORD PTR [esi]
  41e387:	repnz push esi
  41e389:	nop
  41e38a:	inc    DWORD PTR [esp+esi*2]
  41e38d:	test   BYTE PTR [edi+ebx*8],bl
  41e390:	aam    0xb6
  41e392:	sbb    eax,0x6f1312e3
  41e397:	(bad)  
  41e398:	(bad)  
  41e399:	iret   
  41e39a:	dec    edx
  41e39b:	and    BYTE PTR [eax+0x6c],dh
  41e39e:	adc    edx,eax
  41e3a0:	arpl   WORD PTR [eax],bx
  41e3a2:	xor    al,0xba
  41e3a4:	fwait
  41e3a5:	jle    0x41e395
  41e3a7:	pop    edi
  41e3a8:	ja     0x41e33d
  41e3aa:	mov    bl,0x9d
  41e3ac:	push   edx
  41e3ad:	mov    cl,0x4a
  41e3af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3b0:	ret    0x7bcb
  41e3b3:	jle    0x41e395
  41e3b5:	xor    BYTE PTR [esi+0x2f],bh
  41e3b8:	add    al,0xd3
  41e3ba:	mov    ds:0xd49a9ff2,al
  41e3bf:	int3   
  41e3c0:	inc    ecx
  41e3c1:	jo     0x41e419
  41e3c3:	lea    ecx,[edi+esi*8]
  41e3c6:	dec    edi
  41e3c7:	and    eax,0x8e0a8420
  41e3cc:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41e3ce:	jecxz  0x41e409
  41e3d0:	xchg   BYTE PTR [ebp+ecx*8-0x1ae4dffa],bl
  41e3d7:	adc    al,0x9e
  41e3d9:	test   bh,0xf2
  41e3dc:	pop    ebp
  41e3dd:	dec    eax
  41e3de:	loopne 0x41e40b
  41e3e0:	(bad)  
  41e3e1:	dec    ebx
  41e3e2:	sub    edi,DWORD PTR [eax+0x14d7dddb]
  41e3e8:	int3   
  41e3e9:	pop    edx
  41e3ea:	add    al,0x1c
  41e3ec:	ins    DWORD PTR es:[edi],dx
  41e3ed:	dec    ebx
  41e3ee:	inc    edx
  41e3ef:	popa   
  41e3f0:	sbb    al,0xfd
  41e3f2:	pop    ecx
  41e3f3:	mov    dl,0x15
  41e3f5:	dec    eax
  41e3f6:	xor    DWORD PTR [ebx+eiz*2-0x30748a81],esi
  41e3fd:	inc    ecx
  41e3fe:	mov    bh,0x6d
  41e400:	mov    edx,0xec59d12d
  41e405:	adc    al,0xba
  41e407:	mov    ds:0x4bf4107d,al
  41e40c:	mov    ebx,0x4d423df4
  41e411:	stos   DWORD PTR es:[edi],eax
  41e412:	sbb    BYTE PTR [edx+0xbcbd689],ah
  41e418:	xor    eax,ebx
  41e41a:	xchg   DWORD PTR [esi+0x13],ecx
  41e41d:	rcr    DWORD PTR [ecx],1
  41e41f:	and    DWORD PTR [ecx-0x60],0x73
  41e423:	xchg   ebx,eax
  41e424:	cdq    
  41e425:	les    eax,FWORD PTR [edi+ebx*2-0x74]
  41e429:	scas   al,BYTE PTR es:[edi]
  41e42a:	inc    eax
  41e42b:	imul   ebx,DWORD PTR [ebp-0x78],0xad14c34a
  41e432:	jle    0x41e428
  41e434:	pop    ebp
  41e435:	dec    eax
  41e436:	fdivp  st(0),st
  41e438:	dec    edx
  41e439:	mov    edi,0x1d452be1
  41e43e:	jbe    0x41e423
  41e440:	sbb    dh,BYTE PTR [ecx]
  41e442:	mov    ebx,edx
  41e444:	xchg   edx,eax
  41e445:	inc    esp
  41e446:	sti    
  41e447:	adc    al,0xd0
  41e449:	out    0x61,eax
  41e44b:	mov    al,0xae
  41e44d:	add    eax,0xceaab1fa
  41e452:	mov    bh,bh
  41e454:	out    0xa1,eax
  41e456:	scas   eax,DWORD PTR es:[edi]
  41e457:	mov    edi,0x118664ea
  41e45c:	mov    eax,ds:0xa730f909
  41e461:	jg     0x41e4a8
  41e463:	add    al,0x7a
  41e466:	inc    edi
  41e467:	ret    
  41e468:	dec    edx
  41e469:	inc    eax
  41e46a:	push   ecx
  41e46b:	push   cs
  41e46c:	sbb    eax,edx
  41e46e:	cmp    dl,BYTE PTR [ecx+0x5da6d616]
  41e474:	pop    edx
  41e475:	adc    eax,ebp
  41e477:	pop    es
  41e478:	mov    ah,0x27
  41e47a:	or     esp,DWORD PTR [ebx+0x75a5caec]
  41e480:	xor    BYTE PTR [esi-0x44],bl
  41e483:	loop   0x41e492
  41e485:	mov    ds:0x8369f4e1,eax
  41e48a:	push   DWORD PTR [ebx-0x16]
  41e48d:	out    dx,eax
  41e48e:	add    al,0x7b
  41e490:	mov    dh,0xf6
  41e492:	jne    0x41e46f
  41e494:	ins    BYTE PTR es:[edi],dx
  41e495:	stos   DWORD PTR es:[edi],eax
  41e496:	into   
  41e497:	imul   ecx,eax,0x9d404082
  41e49d:	mov    ecx,0xe8778f40
  41e4a2:	xor    DWORD PTR [esi],eax
  41e4a4:	mov    dl,0xbc
  41e4a6:	mov    esp,0x25f01b5b
  41e4ab:	les    edx,FWORD PTR [eax]
  41e4ad:	pop    ss
  41e4ae:	lods   eax,DWORD PTR ds:[esi]
  41e4af:	outs   dx,BYTE PTR ds:[esi]
  41e4b0:	mov    ds:0xd25da4b0,eax
  41e4b5:	sbb    BYTE PTR [ecx],dl
  41e4b7:	jl     0x41e4be
  41e4b9:	lahf   
  41e4ba:	ins    DWORD PTR es:[edi],dx
  41e4bb:	into   
  41e4bc:	test   BYTE PTR [ecx-0x72661de5],ch
  41e4c2:	loope  0x41e45a
  41e4c4:	inc    esi
  41e4c5:	ds ss call 0x8fa02038
  41e4cc:	fs pop esi
  41e4ce:	imul   esi,eax,0x43e85f11
  41e4d4:	push   ebx
  41e4d5:	adc    dl,BYTE PTR [eax-0x7d]
  41e4d8:	loop   0x41e4b1
  41e4da:	inc    esi
  41e4db:	inc    ecx
  41e4dc:	aas    
  41e4dd:	fs push edx
  41e4df:	mov    eax,DWORD PTR [edx-0x37ecabe6]
  41e4e5:	push   esi
  41e4e6:	push   ebx
  41e4e7:	inc    ebp
  41e4e8:	lea    edi,[esi-0x27]
  41e4eb:	jle    0x41e4bf
  41e4ed:	add    dl,BYTE PTR [ecx]
  41e4ef:	adc    ecx,edx
  41e4f1:	mov    DWORD PTR [esi+0x45907d],ebp
  41e4f7:	add    BYTE PTR [eax],dl
  41e4f9:	jp     0x41e541
  41e4fb:	add    esp,edx
  41e4fd:	jge    0x41e480
  41e4ff:	es push edx
  41e501:	cmp    edi,DWORD PTR [edx-0x7f61d11e]
  41e507:	lods   eax,DWORD PTR ds:[esi]
  41e508:	push   edi
  41e509:	mov    eax,ds:0xb60cbc89
  41e50e:	xor    bh,dh
  41e510:	mov    eax,0xf514b2d2
  41e515:	mov    dl,BYTE PTR [esi-0x336e86bc]
  41e51b:	loope  0x41e53c
  41e51d:	test   edx,edx
  41e51f:	xor    DWORD PTR [ebp+0x1d],esp
  41e522:	adc    al,0x21
  41e524:	and    al,0xa
  41e526:	(bad)  
  41e527:	neg    DWORD PTR [esi+ecx*8+0x6ce2a6de]
  41e52e:	pop    es
  41e52f:	sub    bl,BYTE PTR [ebx]
  41e531:	test   BYTE PTR [ecx],bh
  41e533:	(bad)  
  41e534:	pop    sp
  41e536:	add    bl,BYTE PTR [esi]
  41e538:	push   ebp
  41e539:	bound  edx,QWORD PTR [edi+0x6f]
  41e53c:	adc    al,0x5a
  41e53e:	xchg   esp,eax
  41e53f:	scas   eax,DWORD PTR es:[edi]
  41e540:	jecxz  0x41e57b
  41e542:	jae    0x41e516
  41e544:	lock (bad) 
  41e547:	(bad)  
  41e548:	fcomp  QWORD PTR [esi+ecx*2]
  41e54b:	jno    0x41e578
  41e54d:	dec    edx
  41e54e:	dec    ebp
  41e54f:	xor    DWORD PTR [ebx-0x663049e3],0x9de6e8b8
  41e559:	add    BYTE PTR [edi],ah
  41e55b:	int3   
  41e55c:	fistp  QWORD PTR [ebx+0x7465c22e]
  41e562:	rcl    ch,0x43
  41e565:	out    dx,eax
  41e566:	jg     0x41e540
  41e568:	inc    ebp
  41e569:	mov    dh,0xa1
  41e56b:	out    0xbd,eax
  41e56d:	fcmovnb st,st(3)
  41e56f:	ds clc 
  41e571:	into   
  41e572:	shl    BYTE PTR [ebx-0x1de3802],1
  41e578:	dec    esp
  41e579:	or     BYTE PTR [esi],ch
  41e57b:	push   edx
  41e57c:	sub    bl,BYTE PTR [ecx-0x4da6e09a]
  41e582:	mov    WORD PTR [ebx-0x5f],fs
  41e585:	cli    
  41e586:	xchg   edi,eax
  41e587:	loope  0x41e5b2
  41e589:	cmc    
  41e58a:	rol    BYTE PTR [edx+ebp*1],cl
  41e58d:	sbb    al,0x95
  41e58f:	pusha  
  41e590:	xchg   esp,eax
  41e591:	add    ch,BYTE PTR [ebx]
  41e593:	pop    ebp
  41e594:	jge    0x41e51f
  41e596:	js     0x41e5a6
  41e598:	sbb    ebx,ebp
  41e59a:	sub    eax,0x944dabfc
  41e59f:	fcomp  DWORD PTR [esi+0x530a6dbc]
  41e5a5:	test   DWORD PTR [edi+0x3b6f3c4],esi
  41e5ab:	lds    esp,FWORD PTR [esi-0x43]
  41e5ae:	stos   DWORD PTR es:[edi],eax
  41e5af:	inc    edi
  41e5b0:	loop   0x41e535
  41e5b2:	or     esp,0x7ac70ddb
  41e5b8:	cmp    eax,DWORD PTR [edi]
  41e5ba:	out    dx,al
  41e5bb:	ret    0x34c1
  41e5be:	ins    DWORD PTR es:[edi],dx
  41e5bf:	mov    esi,0xffe398af
  41e5c4:	iret   
  41e5c5:	inc    eax
  41e5c6:	test   BYTE PTR [edi],dh
  41e5c8:	nop
  41e5c9:	jmp    0xdd8e3701
  41e5ce:	test   ah,cl
  41e5d0:	mov    ch,0x6
  41e5d2:	(bad)  
  41e5d4:	sub    dh,dl
  41e5d6:	pusha  
  41e5d7:	sbb    dh,ah
  41e5d9:	scas   al,BYTE PTR es:[edi]
  41e5da:	popf   
  41e5db:	into   
  41e5dc:	mov    gs:0x62247c33,al
  41e5e2:	fimul  WORD PTR [edi]
  41e5e4:	lods   al,BYTE PTR ds:[esi]
  41e5e5:	pop    eax
  41e5e6:	ret    0x6487
  41e5e9:	or     ch,cl
  41e5eb:	cli    
  41e5ec:	jmp    0x39b7:0x166404a4
  41e5f3:	fs sub ebp,edi
  41e5f6:	mov    cl,0xc7
  41e5f8:	repz call 0x4e1bbcf1
  41e5fe:	pop    esp
  41e5ff:	in     eax,dx
  41e600:	jne    0x41e680
  41e602:	jp     0x41e5d9
  41e604:	sub    BYTE PTR [eax+eax*4-0xb934bda],0x57
  41e60c:	adc    esp,ebx
  41e60e:	jns    0x41e5e0
  41e610:	xchg   edx,eax
  41e611:	sti    
  41e612:	mov    dh,0x12
  41e614:	dec    edx
  41e615:	jmp    0xc27f4130
  41e61a:	jle    0x41e5af
  41e61c:	sbb    dh,BYTE PTR [ecx]
  41e61e:	shr    al,0x77
  41e621:	pop    eax
  41e622:	xor    ecx,DWORD PTR [ecx+ebp*1+0xc]
  41e626:	inc    ecx
  41e627:	call   0xee241e85
  41e62c:	pop    esi
  41e62d:	(bad)  
  41e62e:	jl     0x41e65d
  41e630:	pusha  
  41e631:	pop    ebx
  41e632:	stos   DWORD PTR es:[edi],eax
  41e633:	rcl    esp,1
  41e635:	cmp    BYTE PTR [edi],bh
  41e637:	cdq    
  41e638:	retf   0xe835
  41e63b:	sub    DWORD PTR [ebx+0x14],esp
  41e63e:	push   edx
  41e63f:	mov    ecx,0x47644426
  41e644:	sbb    bh,BYTE PTR [edx+0x1a2347e3]
  41e64a:	and    bh,0x1a
  41e64d:	jmp    0x41e683
  41e64f:	pop    ecx
  41e650:	and    DWORD PTR [ebp+0xb2b2a42],0xffffffae
  41e657:	push   DWORD PTR [esi-0x4c]
  41e65a:	(bad)  
  41e65b:	setl   BYTE PTR [edx+0x602adbe3]
  41e662:	mov    edi,0x8e09503e
  41e667:	fst    QWORD PTR [esi+0x55]
  41e66a:	(bad)  [edx+0x64]
  41e66d:	in     eax,dx
  41e66e:	inc    ebx
  41e66f:	push   edi
  41e670:	sub    dh,dl
  41e672:	push   esp
  41e673:	call   0xfb09:0x93cb075a
  41e67a:	inc    esi
  41e67b:	(bad)  
  41e67c:	test   DWORD PTR [edx+0x7f],0xc16126aa
  41e683:	cwde   
  41e684:	dec    eax
  41e685:	cdq    
  41e686:	lahf   
  41e687:	je     0x41e6e9
  41e689:	adc    ecx,DWORD PTR [eax+eiz*2+0x4c]
  41e68d:	jmp    0x34b1:0xf99e2443
  41e694:	jmp    0x74082e26
  41e699:	push   ebx
  41e69a:	add    DWORD PTR [edx-0x6c],edx
  41e69d:	loope  0x41e6af
  41e69f:	shr    bx,cl
  41e6a2:	fld    DWORD PTR [ecx+0x28]
  41e6a5:	leave  
  41e6a6:	scas   al,BYTE PTR es:[edi]
  41e6a7:	(bad)  
  41e6a8:	lock out dx,al
  41e6aa:	add    ah,dh
  41e6ac:	int3   
  41e6ad:	(bad)  
  41e6ae:	(bad)  
  41e6af:	cmp    ah,BYTE PTR [ecx+0x1e0de018]
  41e6b5:	clc    
  41e6b6:	mov    esp,0xc959e7e5
  41e6bb:	and    al,0xf3
  41e6bd:	test   BYTE PTR [ebp+ecx*8-0x6b],dh
  41e6c1:	sbb    DWORD PTR [edi-0x2e8a0e7c],ebp
  41e6c7:	and    DWORD PTR [eax-0x6bb8464e],eax
  41e6cd:	test   eax,0x7bc16759
  41e6d2:	xchg   ecx,eax
  41e6d3:	sub    cl,BYTE PTR ds:0x45eb903c
  41e6d9:	outs   dx,BYTE PTR ds:[esi]
  41e6da:	je     0x41e70a
  41e6dc:	(bad)  
  41e6dd:	push   ecx
  41e6de:	mov    ch,0xd1
  41e6e0:	sbb    bh,BYTE PTR [ebp-0x3ecff0b0]
  41e6e6:	inc    edx
  41e6e7:	cmp    DWORD PTR [edi-0x75],ebp
  41e6ea:	push   0x6
  41e6ec:	enter  0x31a3,0xb6
  41e6f0:	les    esp,FWORD PTR [esi-0x64529f54]
  41e6f6:	adc    eax,0xa46a5b60
  41e6fb:	mov    cl,0x96
  41e6fd:	fisub  DWORD PTR [eax-0x5]
  41e700:	je     0x41e739
  41e702:	test   eax,0x50cbaa5b
  41e707:	sbb    esp,DWORD PTR [ecx]
  41e709:	in     eax,dx
  41e70a:	mov    eax,0xdb92b52a
  41e70f:	mov    al,ds:0x79741855
  41e714:	out    0x9f,eax
  41e716:	mov    ds:0xad63fd6b,al
  41e71b:	pop    eax
  41e71c:	and    ebp,ecx
  41e71e:	jno    0x41e6af
  41e720:	ds mov bl,0xf3
  41e723:	les    ecx,FWORD PTR [ebx+eax*4-0x70d8acb4]
  41e72a:	(bad)  
  41e72b:	jbe    0x41e753
  41e72d:	mov    ebx,0xe6b05a1c
  41e732:	dec    ebx
  41e733:	test   eax,0xc60214cd
  41e738:	or     ecx,DWORD PTR [ebp-0x23]
  41e73b:	sub    esi,eax
  41e73d:	int    0xaf
  41e73f:	icebp  
  41e740:	mov    esi,esp
  41e742:	fcom   QWORD PTR [eax-0x72a7115a]
  41e748:	jmp    0xf1b39639
  41e74d:	daa    
  41e74e:	mov    ecx,0x95e71db8
  41e753:	loopne 0x41e74e
  41e755:	daa    
  41e756:	mov    ?,WORD PTR [eax-0x3a]
  41e759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e75a:	mov    bl,0x31
  41e75c:	fidivr WORD PTR [edi+0xa]
  41e75f:	sbb    al,0x26
  41e761:	lods   eax,DWORD PTR ds:[esi]
  41e762:	sahf   
  41e763:	lods   eax,DWORD PTR ds:[esi]
  41e764:	dec    edx
  41e765:	mov    edi,0x3f0eac17
  41e76a:	shl    DWORD PTR fs:[ebx-0x34],0x84
  41e76f:	mov    esi,0x19ddb573
  41e774:	popf   
  41e775:	inc    eax
  41e776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e777:	and    bl,BYTE PTR [edx]
  41e779:	push   0xffffffbe
  41e77b:	pop    edi
  41e77c:	jl     0x41e7c7
  41e77e:	lahf   
  41e77f:	fdivr  DWORD PTR [edi+0x5e]
  41e782:	jne    0x41e7ad
  41e784:	scas   eax,DWORD PTR es:[edi]
  41e785:	xor    edi,esp
  41e787:	cwde   
  41e788:	xor    BYTE PTR [edi+0x4cb768e7],0x66
  41e78f:	sbb    BYTE PTR [ecx],0xa2
  41e792:	pop    eax
  41e793:	xor    eax,0xc825bc71
  41e798:	and    DWORD PTR [edx-0x5c],esp
  41e79b:	pop    eax
  41e79c:	push   ebp
  41e79d:	mov    ebp,0x52740e23
  41e7a2:	pop    es
  41e7a3:	outs   dx,BYTE PTR ds:[esi]
  41e7a4:	push   0x6a
  41e7a6:	push   es
  41e7a7:	xor    al,0x3c
  41e7a9:	ins    BYTE PTR es:[edi],dx
  41e7aa:	and    al,ah
  41e7ac:	add    al,0x79
  41e7ae:	loopne 0x41e790
  41e7b0:	jnp    0x41e7c0
  41e7b2:	fcomp  QWORD PTR [ecx]
  41e7b4:	xor    al,0xfe
  41e7b6:	pop    ds
  41e7b7:	mov    ch,cl
  41e7b9:	xor    ecx,DWORD PTR [edi+esi*4-0x524f65f3]
  41e7c0:	stc    
  41e7c1:	push   esi
  41e7c2:	sub    ah,BYTE PTR [ebx-0x10]
  41e7c5:	cmp    al,0xd6
  41e7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7c8:	inc    ebp
  41e7c9:	sbb    DWORD PTR fs:[ebp-0x14],eax
  41e7cd:	dec    eax
  41e7ce:	ret    
  41e7cf:	dec    edx
  41e7d0:	test   DWORD PTR [edi-0x6],edi
  41e7d3:	push   ecx
  41e7d4:	sub    al,0xd6
  41e7d6:	sub    BYTE PTR [esi-0x6],0xa6
  41e7da:	or     bh,BYTE PTR ds:0xa44663e9
  41e7e0:	jns    0x41e7df
  41e7e2:	jg     0x41e7f3
  41e7e4:	lahf   
  41e7e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7e6:	cld    
  41e7e7:	mov    dh,0x88
  41e7e9:	jle    0x41e788
  41e7eb:	mov    esi,0x19f4f15b
  41e7f0:	inc    ecx
  41e7f1:	jmp    0x31
  41e7f6:	dec    edx
  41e7f7:	aad    0x92
  41e7f9:	or     ch,dh
  41e7fb:	mov    ecx,0x56ca458c
  41e800:	(bad)  
  41e801:	dec    edx
  41e802:	(bad)  
  41e803:	scas   eax,DWORD PTR es:[edi]
  41e804:	(bad)  
  41e805:	adc    eax,0xc6837f3b
  41e80a:	mov    es,WORD PTR [edi]
  41e80c:	sti    
  41e80d:	in     eax,0xda
  41e80f:	pop    ds
  41e810:	inc    eax
  41e811:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e814:	clc    
  41e815:	jo     0x41e86a
  41e817:	fucompp 
  41e819:	lea    ebx,[eax]
  41e81b:	push   cs
  41e81c:	sbb    eax,0xb02bdbd1
  41e821:	mov    bl,0x8d
  41e823:	push   ds
  41e824:	push   ebx
  41e825:	and    esp,edi
  41e827:	dec    edi
  41e828:	adc    BYTE PTR ds:0x4ddc3c94,ch
  41e82e:	data16 sar BYTE PTR [esi],cl
  41e831:	mov    DWORD PTR ds:0x60808feb,ecx
  41e837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e838:	adc    edi,DWORD PTR [eax+0x6]
  41e83b:	nop
  41e83c:	sbb    eax,0x9de79ac4
  41e841:	in     eax,dx
  41e842:	div    cl
  41e844:	fistp  QWORD PTR [ecx+edx*1]
  41e847:	pop    ss
  41e848:	mov    edx,0x7cdf5c29
  41e84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e84e:	stos   BYTE PTR es:[edi],al
  41e84f:	fwait
  41e850:	jnp    0x41e808
  41e852:	push   esi
  41e853:	popa   
  41e854:	int3   
  41e855:	mov    bh,0x21
  41e857:	fmul   QWORD PTR [eax-0x7776faf2]
  41e85e:	mov    ds:0x5fd66114,eax
  41e863:	in     eax,0xad
  41e865:	inc    eax
  41e866:	xor    BYTE PTR [ecx+0x22beb877],0x72
  41e86d:	sbb    edi,esp
  41e86f:	push   0x6d
  41e871:	add    al,0x20
  41e873:	arpl   bp,bx
  41e875:	popf   
  41e876:	sbb    al,0x28
  41e878:	or     DWORD PTR [eax-0x3c],edx
  41e87b:	or     BYTE PTR [edx+ebp*2+0x1f],al
  41e87f:	xchg   ecx,eax
  41e880:	pop    ecx
  41e881:	mov    eax,0x7e85b44c
  41e886:	pop    edi
  41e887:	es lahf 
  41e889:	icebp  
  41e88a:	aas    
  41e88b:	and    ebp,edx
  41e88d:	pop    es
  41e88e:	or     DWORD PTR [ebp*4+0x5870cb00],ebx
  41e895:	dec    ebx
  41e896:	cwde   
  41e897:	sbb    bh,BYTE PTR [ebx+0x1f374abc]
  41e89d:	push   ecx
  41e89e:	pop    ds
  41e89f:	jne    0x41e8fa
  41e8a1:	xchg   BYTE PTR [ebp+0x60],ch
  41e8a4:	xor    ebx,DWORD PTR fs:[eax]
  41e8a7:	push   0xffffffd1
  41e8a9:	dec    ebp
  41e8aa:	hlt    
  41e8ab:	sahf   
  41e8ac:	ror    DWORD PTR [esi],1
  41e8ae:	mov    fs,WORD PTR [esi]
  41e8b0:	imul   ebp,DWORD PTR [edi],0x4c7ccf91
  41e8b6:	sti    
  41e8b7:	cmp    al,dl
  41e8b9:	shr    DWORD PTR [esi-0x19687ddf],1
  41e8bf:	mov    edx,0xa97cc0d1
  41e8c4:	nop
  41e8c5:	push   es
  41e8c6:	test   al,0x67
  41e8c8:	iret   
  41e8c9:	dec    edx
  41e8ca:	dec    edx
  41e8cb:	xchg   esi,eax
  41e8cc:	pop    esi
  41e8cd:	into   
  41e8ce:	test   eax,0xce673b11
  41e8d3:	inc    esp
  41e8d4:	pop    edx
  41e8d5:	push   es
  41e8d6:	and    esi,DWORD PTR [edx]
  41e8d8:	and    ebp,DWORD PTR [edx-0xc]
  41e8db:	ds idiv ah
  41e8de:	push   edx
  41e8df:	ss das 
  41e8e1:	les    edx,FWORD PTR [esi]
  41e8e3:	fs jae 0x41e8fc
  41e8e6:	mul    BYTE PTR [ebp-0x4b9b88f8]
  41e8ec:	mov    cl,0x93
  41e8ee:	daa    
  41e8ef:	dec    edi
  41e8f0:	and    DWORD PTR [edi],0x1f7d9652
  41e8f6:	shr    DWORD PTR [esi+0x29c6a34e],0x67
  41e8fd:	js     0x41e906
  41e8ff:	ins    DWORD PTR es:[edi],dx
  41e900:	mov    ds:0x792c8f3c,eax
  41e905:	lods   eax,DWORD PTR ds:[esi]
  41e906:	pop    ecx
  41e907:	adc    BYTE PTR [esi-0x3d],cl
  41e90a:	test   eax,0xe04f2f0d
  41e90f:	retf   
  41e910:	pusha  
  41e911:	fcom   QWORD PTR [eax]
  41e913:	dec    esi
  41e914:	es jb  0x41e994
  41e917:	mov    ebp,0x403edc9
  41e91c:	jge    0x41e944
  41e91e:	jbe    0x41e99a
  41e920:	aad    0x99
  41e922:	inc    eax
  41e923:	xchg   edi,eax
  41e924:	push   ss
  41e925:	leave  
  41e926:	inc    ebx
  41e927:	push   cs
  41e928:	icebp  
  41e929:	dec    ebp
  41e92a:	(bad)  
  41e92b:	out    dx,al
  41e92c:	mov    eax,es
  41e92e:	sti    
  41e92f:	int    0xe3
  41e931:	cmp    ah,BYTE PTR [esi-0x279b2cb8]
  41e937:	mov    ds:0x2a8c3af6,al
  41e93c:	dec    ebp
  41e93d:	div    BYTE PTR [ecx+eiz*2-0x50]
  41e941:	xchg   esi,eax
  41e942:	cmp    DWORD PTR [edx-0x398878e3],eax
  41e948:	adc    BYTE PTR [esi],al
  41e94a:	mov    esi,0x14763368
  41e94f:	sbb    DWORD PTR [ebx],edi
  41e951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e952:	mov    edi,0xcd618f36
  41e957:	sbb    al,0xc9
  41e959:	mov    cl,0xef
  41e95b:	sar    DWORD PTR [esi+0x2f],cl
  41e95e:	cmp    edx,0x65f91a3b
  41e964:	jp     0x41e95c
  41e966:	xchg   esi,eax
  41e967:	or     eax,0x8883e5bd
  41e96c:	lock push ebp
  41e96e:	mov    ds,esp
  41e970:	xchg   edi,eax
  41e971:	mov    esi,0x8223bdb6
  41e976:	dec    ecx
  41e977:	jae    0x41e969
  41e979:	imul   esi,DWORD PTR [ebp+esi*2-0x2e3c90f4],0xfffffff4
  41e981:	add    DWORD PTR [eax],ebx
  41e983:	loopne 0x41e99a
  41e985:	daa    
  41e986:	sbb    ebx,DWORD PTR [eax+0x38ff041e]
  41e98c:	dec    esi
  41e98d:	jle    0x41e973
  41e98f:	xor    al,0x36
  41e991:	cmp    al,0xaa
  41e993:	(bad)  
  41e994:	mov    al,0x12
  41e996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e997:	mov    ch,0x61
  41e999:	loopne 0x41e92e
  41e99b:	cs ss call 0x1e977084
  41e9a2:	cs out 0xb5,eax
  41e9a5:	iret   
  41e9a6:	iret   
  41e9a7:	arpl   WORD PTR [eax],bx
  41e9a9:	jp     0x41e9de
  41e9ab:	shl    DWORD PTR [ebx],0x90
  41e9ae:	inc    ebx
  41e9af:	push   edx
  41e9b0:	icebp  
  41e9b1:	push   edi
  41e9b2:	mov    ebp,0xd1f39362
  41e9b7:	xchg   ebx,eax
  41e9b8:	mov    cl,0xef
  41e9ba:	inc    esi
  41e9bb:	mov    cl,0x64
  41e9bd:	lahf   
  41e9be:	adc    eax,0x49cc1754
  41e9c3:	sbb    BYTE PTR [bx+0x1d70],al
  41e9c8:	mov    edx,0x7e8df99d
  41e9cd:	rol    BYTE PTR [ebx-0x36f64c18],1
  41e9d3:	cmp    eax,0x9057f730
  41e9d8:	mov    eax,ds:0x960a9c81
  41e9dd:	jecxz  0x41e982
  41e9df:	dec    dh
  41e9e1:	cld    
  41e9e2:	loope  0x41ea08
  41e9e4:	adc    ah,BYTE PTR [esp+edx*4+0x1c]
  41e9e8:	push   ds
  41e9e9:	sbb    al,0x10
  41e9eb:	mov    edi,0x6cabf146
  41e9f0:	pop    es
  41e9f1:	sbb    ebx,ebx
  41e9f3:	loop   0x41e979
  41e9f5:	xchg   DWORD PTR [ecx-0x13],ebp
  41e9f8:	mov    ecx,0x311b6082
  41e9fd:	jnp    0x41ea1e
  41e9ff:	xchg   esi,eax
  41ea00:	mov    al,ds:0xb58999af
  41ea05:	ins    DWORD PTR es:[edi],dx
  41ea06:	pusha  
  41ea07:	test   edi,ebp
  41ea09:	es xchg dh,cl
  41ea0c:	xchg   esi,eax
  41ea0d:	and    BYTE PTR ds:0x25030b,ah
  41ea13:	xchg   ecx,eax
  41ea14:	in     al,0xed
  41ea16:	dec    edi
  41ea17:	push   0xd53275be
  41ea1c:	jo     0x41ea56
  41ea1e:	dec    ch
  41ea20:	pop    edi
  41ea21:	mov    ebx,0x42ab2438
  41ea26:	nop    DWORD PTR [esi-0x20424649]
  41ea2d:	mov    cl,0x3b
  41ea2f:	test   edi,eax
  41ea31:	pop    ebp
  41ea32:	inc    eax
  41ea33:	daa    
  41ea34:	ins    DWORD PTR es:[edi],dx
  41ea35:	jmp    0xf9579fe3
  41ea3a:	(bad)  
  41ea3b:	mov    ah,0xe3
  41ea3d:	inc    esp
  41ea3e:	xchg   DWORD PTR [eax-0x2b07c5ca],edx
  41ea44:	add    edx,esi
  41ea46:	add    eax,DWORD PTR gs:[eax]
  41ea49:	arpl   di,bx
  41ea4b:	popa   
  41ea4c:	cmp    esi,DWORD PTR [edx-0x7f4d376b]
  41ea52:	xor    ecx,DWORD PTR [ebx]
  41ea54:	mov    ah,0xc5
  41ea56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea57:	dec    ebx
  41ea58:	clc    
  41ea59:	in     eax,dx
  41ea5a:	lods   eax,DWORD PTR ds:[esi]
  41ea5b:	in     eax,0x1c
  41ea5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea5e:	fnstenv [edi+0x33]
  41ea61:	fisub  WORD PTR [eax-0x6d]
  41ea64:	xlat   BYTE PTR ds:[ebx]
  41ea65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea66:	push   0x62
  41ea68:	adc    ah,dl
  41ea6a:	loop   0x41ea9b
  41ea6c:	adc    al,0x40
  41ea6e:	jge    0x41ea7c
  41ea70:	in     eax,0x8a
  41ea72:	lea    esp,[edx]
  41ea74:	lea    eax,gs:[esi+0x3f]
  41ea78:	shl    DWORD PTR [esp+esi*1],cl
  41ea7b:	fisub  DWORD PTR [eax-0x10eb256d]
  41ea81:	pushf  
  41ea82:	shl    BYTE PTR ds:0xc4ee70c8,cl
  41ea88:	jne    0x41eace
  41ea8a:	sbb    ebx,edi
  41ea8c:	clc    
  41ea8d:	(bad)  [ecx]
  41ea8f:	js     0x41eae5
  41ea91:	adc    DWORD PTR [eax],ecx
  41ea93:	inc    edi
  41ea94:	sahf   
  41ea95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea96:	rcl    BYTE PTR [ebx],1
  41ea98:	sbb    ebx,DWORD PTR ds:0xf5880f59
  41ea9e:	pop    edi
  41ea9f:	mov    ebx,0xa82f608c
  41eaa4:	push   0x472eba82
  41eaa9:	sahf   
  41eaaa:	adc    DWORD PTR [esi],ebx
  41eaac:	shl    bh,0x97
  41eaaf:	inc    eax
  41eab0:	mov    al,0x58
  41eab2:	cld    
  41eab3:	lock lods eax,DWORD PTR ds:[esi]
  41eab5:	adc    esp,DWORD PTR [ecx-0x36]
  41eab8:	inc    ebx
  41eab9:	ret    0x6a71
  41eabc:	pop    edi
  41eabd:	or     eax,0x1e297c85
  41eac2:	cmp    al,0x6b
  41eac4:	in     al,0x76
  41eac6:	mul    DWORD PTR [ebx+0x546ad506]
  41eacc:	inc    eax
  41eacd:	pop    esp
  41eace:	and    bl,BYTE PTR [ecx-0x35a26434]
  41ead4:	cmp    al,0xf0
  41ead6:	test   al,0x6b
  41ead8:	mov    al,ds:0xc043ae97
  41eadd:	mov    fs,WORD PTR [eax-0x20]
  41eae0:	cmp    edx,esi
  41eae2:	jmp    0x347b:0x9e37feda
  41eae9:	inc    ecx
  41eaea:	(bad)  
  41eaeb:	popa   
  41eaec:	jno    0x41ea98
  41eaee:	ja     0x41eb5f
  41eaf0:	mov    ch,0x4c
  41eaf2:	sub    DWORD PTR [edi+edx*4],esi
  41eaf5:	retf   
  41eaf6:	mov    edi,0x85dd0b2b
  41eafb:	or     edi,DWORD PTR [eax+0x50]
  41eafe:	in     al,0xcf
  41eb00:	pop    es
  41eb01:	xlat   BYTE PTR ds:[ebx]
  41eb02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb03:	add    eax,0x4dab016e
  41eb08:	les    esp,FWORD PTR [esi+0x14]
  41eb0b:	nop
  41eb0c:	mov    ecx,0xfe135e79
  41eb11:	outs   dx,DWORD PTR ds:[esi]
  41eb12:	push   cs
  41eb13:	ror    BYTE PTR [eax+0x141b0156],1
  41eb19:	ja     0x41eabe
  41eb1b:	test   dl,bh
  41eb1d:	nop
  41eb1e:	jbe    0x41eb69
  41eb20:	ja     0x41eb33
  41eb22:	inc    ebx
  41eb24:	scas   al,BYTE PTR es:[edi]
  41eb25:	dec    ebx
  41eb26:	jmp    0xa3b6c65c
  41eb2b:	or     bh,BYTE PTR [eax+0x37]
  41eb2e:	cli    
  41eb2f:	fwait
  41eb30:	test   al,0x4c
  41eb32:	sbb    BYTE PTR [ebp-0x69],bl
  41eb35:	imul   esi,ebp,0x9eb2cc75
  41eb3b:	xchg   edx,eax
  41eb3c:	and    al,0xe4
  41eb3e:	mov    eax,0x51326c44
  41eb43:	(bad)  
  41eb44:	cmp    eax,0x18cca463
  41eb49:	test   al,0x8e
  41eb4b:	cmc    
  41eb4c:	inc    esp
  41eb4d:	and    dl,ch
  41eb4f:	gs adc ch,dh
  41eb52:	inc    esi
  41eb53:	call   0x663eada3
  41eb58:	or     ah,BYTE PTR [ebx+ebx*8-0x4a]
  41eb5c:	aam    0x4f
  41eb5e:	and    bl,ch
  41eb60:	pop    edx
  41eb61:	aas    
  41eb62:	fcom   QWORD PTR [edx+0x25ba523d]
  41eb68:	pusha  
  41eb69:	add    BYTE PTR [ebx+0x7640689b],0xa0
  41eb70:	mov    eax,0x19d47e70
  41eb75:	pop    ebx
  41eb76:	push   eax
  41eb77:	rol    edx,1
  41eb79:	push   0xffffff99
  41eb7b:	add    al,0x5
  41eb7d:	mov    dh,0x3b
  41eb7f:	push   eax
  41eb80:	icebp  
  41eb81:	data16 (bad) 
  41eb83:	retf   0x6da7
  41eb86:	cmp    edi,DWORD PTR ds:0x156b458f
  41eb8c:	jmp    0x41eb24
  41eb8e:	fsubr  DWORD PTR [esi-0x13582e0b]
  41eb94:	or     eax,0x7683142b
  41eb99:	popa   
  41eb9a:	sbb    edi,DWORD PTR [ecx+0x21]
  41eb9d:	(bad)  
  41eb9e:	in     al,0xea
  41eba0:	mov    DWORD PTR [edx-0x7f],esi
  41eba3:	rcr    DWORD PTR [ecx+0x12a9312d],1
  41eba9:	ss call 0xc0e8d414
  41ebaf:	and    ch,BYTE PTR [edx+esi*4]
  41ebb2:	xor    BYTE PTR [esi+0x53],dh
  41ebb5:	cmp    bh,BYTE PTR [edx]
  41ebb7:	je     0x41ec00
  41ebb9:	sub    eax,0x957c8b66
  41ebbe:	gs xchg ecx,eax
  41ebc0:	outs   dx,BYTE PTR ds:[esi]
  41ebc1:	pop    ecx
  41ebc2:	dec    eax
  41ebc3:	in     al,dx
  41ebc4:	mov    bh,0x76
  41ebc6:	mov    WORD PTR [ebx],ss
  41ebc8:	push   ebx
  41ebc9:	sub    DWORD PTR ds:0x5c45569a,ecx
  41ebcf:	aam    0xfc
  41ebd1:	aas    
  41ebd2:	outs   dx,BYTE PTR ds:[esi]
  41ebd3:	ret    
  41ebd4:	xor    dl,BYTE PTR [edi-0x164fd9d8]
  41ebda:	jge    0x41ec2c
  41ebdc:	lea    eax,[esi*1-0x678f8c38]
  41ebe3:	xchg   esp,eax
  41ebe4:	push   edi
  41ebe5:	in     eax,dx
  41ebe6:	jnp    0x41ebc4
  41ebe8:	dec    ecx
  41ebe9:	ja     0x41ebf8
  41ebeb:	jmp    0x41ec6c
  41ebed:	(bad)  
  41ebee:	fcos   
  41ebf0:	scas   eax,DWORD PTR es:[edi]
  41ebf1:	and    eax,0x5debcb87
  41ebf6:	push   ebp
  41ebf7:	loope  0x41eba2
  41ebf9:	in     al,dx
  41ebfa:	lds    edx,FWORD PTR [ebx]
  41ebfc:	(bad)  
  41ebfd:	push   eax
  41ebfe:	mov    eax,DWORD PTR [esi+ebx*4+0xcdb2c8]
  41ec05:	sub    eax,0xc7e06719
  41ec0a:	jmp    0xdd96:0x4eda4672
  41ec11:	pop    edx
  41ec12:	xchg   ebx,eax
  41ec13:	int3   
  41ec14:	call   0xd503:0x88946e29
  41ec1b:	shr    dl,1
  41ec1d:	mov    dh,0x4f
  41ec1f:	add    DWORD PTR [ebp-0x35],edx
  41ec22:	inc    eax
  41ec23:	jne    0x41ec57
  41ec25:	xchg   ebx,eax
  41ec26:	lods   eax,DWORD PTR ds:[esi]
  41ec27:	jb     0x41ec3f
  41ec29:	(bad)  
  41ec2b:	nop
  41ec2c:	inc    edx
  41ec2d:	push   0x576136eb
  41ec32:	cli    
  41ec33:	das    
  41ec34:	jo     0x41ec30
  41ec36:	mov    edi,0xad3875f8
  41ec3b:	(bad)  
  41ec3c:	add    dl,BYTE PTR [bp+di-0x16]
  41ec40:	loopne 0x41ebdc
  41ec42:	(bad)  
  41ec43:	das    
  41ec44:	es cmc 
  41ec46:	sbb    eax,0x7a1d3810
  41ec4b:	sub    al,0xa8
  41ec4d:	dec    ecx
  41ec4e:	fsubp  st(2),st
  41ec50:	mov    edi,0xfdbab2df
  41ec55:	xchg   esp,eax
  41ec56:	outs   dx,BYTE PTR ds:[esi]
  41ec57:	or     BYTE PTR [edx],ch
  41ec59:	icebp  
  41ec5a:	cli    
  41ec5b:	xchg   ebx,eax
  41ec5c:	out    0x4a,al
  41ec5e:	and    al,0xe5
  41ec60:	aam    0x3d
  41ec62:	mov    bl,0xa9
  41ec64:	ss cld 
  41ec66:	iret   
  41ec67:	retf   0x8120
  41ec6a:	fcmovu st,st(3)
  41ec6c:	xchg   edx,eax
  41ec6d:	popf   
  41ec6e:	cmp    DWORD PTR [ebp+0x10a71809],ecx
  41ec74:	cmp    edx,ecx
  41ec76:	int    0x48
  41ec78:	nop
  41ec79:	test   BYTE PTR [edi-0x3c],ah
  41ec7c:	mov    ds:0xa6653022,eax
  41ec81:	jmp    0x89349aef
  41ec86:	pop    es
  41ec87:	(bad)  
  41ec89:	je     0x41ec88
  41ec8b:	inc    ebx
  41ec8c:	and    ch,BYTE PTR [ebx+0x765416d9]
  41ec92:	fldenv [ebx]
  41ec94:	ins    BYTE PTR es:[edi],dx
  41ec95:	sub    al,0xc4
  41ec97:	aad    0x33
  41ec99:	xchg   esp,eax
  41ec9a:	rcr    eax,cl
  41ec9c:	std    
  41ec9d:	add    dl,BYTE PTR [edx+0x47bd9303]
  41eca3:	inc    dx
  41eca5:	aad    0xdb
  41eca7:	xchg   edx,eax
  41eca8:	int    0xf9
  41ecaa:	push   ss
  41ecab:	pusha  
  41ecac:	lahf   
  41ecad:	arpl   cx,si
  41ecaf:	jp     0x41ecd4
  41ecb1:	ins    DWORD PTR es:[edi],dx
  41ecb2:	sub    edi,ebp
  41ecb4:	ret    0xb775
  41ecb7:	push   es
  41ecb8:	mov    ecx,0x622c935
  41ecbd:	jb     0x41ec43
  41ecbf:	or     ebx,DWORD PTR [eax+0x79]
  41ecc2:	mov    al,ds:0xa979a80d
  41ecc7:	sbb    BYTE PTR [edx],ch
  41ecc9:	jne    0x41ed40
  41eccb:	fstp   DWORD PTR [esi-0x4a]
  41ecce:	ds ja  0x41ec74
  41ecd1:	and    DWORD PTR [eax-0x57],edi
  41ecd4:	lds    ebx,FWORD PTR [edx]
  41ecd6:	in     al,dx
  41ecd7:	cmc    
  41ecd8:	sahf   
  41ecd9:	mov    eax,ds:0x408c3ad5
  41ecde:	and    eax,0x28e2d52e
  41ece3:	mov    dl,0x44
  41ece5:	pop    esp
  41ece6:	dec    esi
  41ece7:	iret   
  41ece8:	xchg   ecx,eax
  41ece9:	les    ebp,FWORD PTR [edx+ebx*1-0x37e56ce7]
  41ecf0:	inc    eax
  41ecf1:	icebp  
  41ecf2:	jno    0x41ed58
  41ecf4:	inc    edi
  41ecf5:	ss (bad) 
  41ecf7:	xor    al,0x5
  41ecf9:	hlt    
  41ecfa:	fimul  DWORD PTR [esi-0x21c1c0d6]
  41ed00:	and    eax,DWORD PTR [eax-0x3a]
  41ed03:	stos   BYTE PTR es:[edi],al
  41ed04:	push   ebp
  41ed05:	or     cl,BYTE PTR [ebx]
  41ed07:	jns    0x41ec8f
  41ed09:	dec    esp
  41ed0a:	imul   edx,DWORD PTR [esi-0x2717c929],0xff039343
  41ed14:	adc    esi,DWORD PTR [edi]
  41ed16:	jmp    0x9055:0x3b232210
  41ed1d:	and    ebx,ebx
  41ed1f:	(bad)  
  41ed21:	xchg   edi,eax
  41ed22:	int3   
  41ed23:	inc    edx
  41ed24:	retf   
  41ed25:	fmul   QWORD PTR [eax]
  41ed27:	cmp    dl,BYTE PTR [ecx+0x6f]
  41ed2a:	and    eax,0x65b48fab
  41ed2f:	and    dh,bl
  41ed31:	xor    BYTE PTR [esi],0xb5
  41ed34:	push   edx
  41ed35:	rcr    DWORD PTR [esi-0x49],cl
  41ed38:	scas   al,BYTE PTR es:[edi]
  41ed39:	jno    0x41ed6e
  41ed3b:	pop    edi
  41ed3c:	xor    al,0x8d
  41ed3e:	or     dl,dh
  41ed40:	in     al,0xe2
  41ed42:	cmp    esi,DWORD PTR ss:[eax+ecx*2]
  41ed46:	leave  
  41ed47:	xchg   edx,eax
  41ed48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed49:	xchg   DWORD PTR [ebx-0x365dd034],ecx
  41ed4f:	add    ebp,DWORD PTR [edi-0x69]
  41ed52:	jecxz  0x41ed2a
  41ed54:	push   edx
  41ed55:	inc    esp
  41ed56:	jp     0x41ecdd
  41ed58:	or     ecx,DWORD PTR ds:0x32111f80
  41ed5e:	mov    ecx,0xc52da844
  41ed63:	enter  0x7f6f,0xf7
  41ed67:	xchg   edi,eax
  41ed68:	mov    dh,0x78
  41ed6a:	imul   ecx,DWORD PTR [ecx+0x40],0x71b2e302
  41ed71:	out    0x6d,al
  41ed73:	nop
  41ed74:	sbb    BYTE PTR [edx+0x2ec27ea9],bl
  41ed7a:	mov    ecx,0x6d2b19e0
  41ed7f:	les    esi,FWORD PTR [ecx+0x2de2b4fc]
  41ed85:	leave  
  41ed86:	daa    
  41ed87:	(bad)  
  41ed88:	in     al,0x78
  41ed8a:	out    0xba,al
  41ed8c:	test   ah,dh
  41ed8e:	mov    dl,0x7e
  41ed90:	adc    BYTE PTR [edx-0x5f],0xfb
  41ed94:	jnp    0x41edc1
  41ed96:	gs jge 0x41ed1c
  41ed99:	pextrw esi,(bad),0xc5
  41ed9b:	jo     0x41edc5
  41ed9d:	inc    edi
  41ed9e:	inc    esp
  41ed9f:	sub    eax,DWORD PTR [esi-0x6c]
  41eda2:	inc    ecx
  41eda3:	fnstcw WORD PTR [ebp-0x6e]
  41eda6:	imul   ecx,DWORD PTR [ebx],0x650a2ee2
  41edac:	outs   dx,DWORD PTR ds:[esi]
  41edad:	mov    edx,cs
  41edaf:	mov    al,ds:0x2471e91b
  41edb4:	hlt    
  41edb5:	jb     0x41ed40
  41edb7:	dec    ecx
  41edb8:	sbb    ebx,DWORD PTR [ebx+ecx*8+0x5f0084d3]
  41edbf:	pop    esi
  41edc0:	dec    edx
  41edc1:	xor    dl,0x47
  41edc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edc5:	out    0xba,eax
  41edc7:	jno    0x41ee17
  41edc9:	call   0x62b5:0xa1607238
  41edd0:	jo     0x41ede4
  41edd2:	nop
  41edd3:	aaa    
  41edd4:	cmp    al,BYTE PTR [edi+0x46f8fe75]
  41edda:	lods   al,BYTE PTR ds:[esi]
  41eddb:	push   ebx
  41eddc:	sbb    ecx,ebp
  41edde:	ins    BYTE PTR es:[edi],dx
  41eddf:	and    al,0x7
  41ede1:	mov    al,0xa2
  41ede3:	sar    BYTE PTR [esi+0x10dbcca5],1
  41ede9:	cli    
  41edea:	lahf   
  41edeb:	fs sub ebp,ebp
  41edee:	cmp    al,0x2f
  41edf0:	sbb    eax,0xed31ad23
  41edf5:	inc    ebx
  41edf6:	jg     0x41ee4c
  41edf8:	lods   eax,DWORD PTR ds:[esi]
  41edf9:	inc    edx
  41edfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edfb:	pop    edi
  41edfc:	xchg   edi,eax
  41edfd:	dec    edx
  41edfe:	and    esp,DWORD PTR [ecx]
  41ee00:	mov    esi,0x26e6ca98
  41ee05:	mov    fs,WORD PTR [edx+ebp*4-0x22]
  41ee09:	or     BYTE PTR [eax],0x8a
  41ee0c:	fwait
  41ee0d:	mov    ds:0xda8da342,al
  41ee12:	mov    dh,ah
  41ee14:	pop    ss
  41ee15:	or     al,0x54
  41ee17:	jge    0x41edee
  41ee19:	adc    eax,0xa3c84cf0
  41ee1e:	xchg   esi,esp
  41ee20:	test   al,0x3e
  41ee22:	test   eax,0x7b15f44e
  41ee27:	or     eax,0x96d40e3c
  41ee2c:	sbb    DWORD PTR [ebx],ebx
  41ee2e:	adc    ebp,ebp
  41ee30:	cmp    dh,BYTE PTR [ebx-0x14]
  41ee33:	in     eax,0x8c
  41ee35:	dec    edx
  41ee36:	ret    0x630f
  41ee39:	pusha  
  41ee3a:	in     al,dx
  41ee3b:	out    0xff,eax
  41ee3d:	aad    0xc0
  41ee3f:	sahf   
  41ee40:	sbb    al,0x51
  41ee42:	sbb    dl,BYTE PTR [edi]
  41ee44:	xor    eax,0x16a7b6d6
  41ee49:	leave  
  41ee4a:	mov    al,ds:0x99eb7329
  41ee4f:	mov    edx,0x69e0924e
  41ee54:	pop    ecx
  41ee55:	int    0xc0
  41ee57:	out    0x30,al
  41ee59:	push   0xc203e9
  41ee5e:	jmp    0xe312e99d
  41ee63:	pop    ecx
  41ee64:	and    eax,edx
  41ee66:	loop   0x41ee3f
  41ee68:	pop    ebx
  41ee69:	sub    dh,BYTE PTR [ebx]
  41ee6b:	fnstenv [edx-0x483d0e28]
  41ee71:	push   esi
  41ee72:	sub    DWORD PTR [ebx],ebp
  41ee74:	les    edi,FWORD PTR [ebx-0x7e]
  41ee77:	outs   dx,DWORD PTR ds:[esi]
  41ee78:	imul   esi,DWORD PTR [ebx+0x11],0x7629edf1
  41ee7f:	mov    bl,0x81
  41ee81:	pop    eax
  41ee82:	push   esi
  41ee83:	data16 dec BYTE PTR [ebp+0x2879a541]
  41ee8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee8b:	add    esp,DWORD PTR [ecx+0x229a3a3b]
  41ee91:	popf   
  41ee92:	jns    0x41ee9c
  41ee94:	shl    DWORD PTR [ebp-0x36d6484],0x5e
  41ee9b:	cmp    al,0xb6
  41ee9d:	or     esi,DWORD PTR [ebx]
  41ee9f:	test   BYTE PTR [ebp+edx*8-0x5d],dh
  41eea3:	adc    DWORD PTR ss:[esi+0x6],ecx
  41eea7:	pop    edi
  41eea8:	sar    bh,0x5e
  41eeab:	dec    ebp
  41eeac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eead:	dec    ebx
  41eeae:	mov    ah,0x25
  41eeb0:	adc    edx,esi
  41eeb2:	push   esi
  41eeb3:	jmp    0x41eefa
  41eeb5:	jl     0x41ee48
  41eeb7:	adc    eax,0x2ff597a8
  41eebd:	push   0xffffffa5
  41eebf:	scas   eax,DWORD PTR es:[edi]
  41eec0:	push   esp
  41eec1:	dec    ecx
  41eec2:	cdq    
  41eec3:	scas   al,BYTE PTR es:[edi]
  41eec4:	mov    BYTE PTR [edi+eiz*8+0x42],ah
  41eec8:	pop    eax
  41eec9:	jecxz  0x41eeb2
  41eecb:	push   0xe57b8b1a
  41eed0:	xchg   ecx,eax
  41eed1:	push   0xcac3a2fe
  41eed6:	xchg   DWORD PTR [ebx],ecx
  41eed8:	ficom  DWORD PTR [ecx-0x1fb17865]
  41eede:	aas    
  41eedf:	pop    ebx
  41eee0:	sub    dh,dl
  41eee2:	jmp    0x41ee8e
  41eee4:	sub    BYTE PTR [eax-0xd6fea11],bl
  41eeea:	stos   BYTE PTR es:[edi],al
  41eeeb:	loope  0x41ef5a
  41eeed:	push   es
  41eeee:	stos   DWORD PTR es:[edi],eax
  41eeef:	leave  
  41eef0:	mov    bh,cl
  41eef2:	and    dh,BYTE PTR [ebp+ebx*4-0x5bf66cdc]
  41eef9:	jae    0x41ef0c
  41eefb:	pop    esp
  41eefc:	call   FWORD PTR [eax+ebx*1]
  41eeff:	daa    
  41ef00:	sub    bh,0x9
  41ef03:	jmp    0x41eed0
  41ef05:	sub    DWORD PTR [edi],edx
  41ef07:	lea    eax,[esi+ebp*2-0x5a]
  41ef0b:	mov    edx,DWORD PTR [ebx+0x2]
  41ef0e:	cmp    BYTE PTR [edx+eax*2-0x43],al
  41ef12:	jo     0x41eea7
  41ef14:	xchg   ebx,eax
  41ef15:	cmp    eax,0xcfcf8deb
  41ef1a:	cmp    edx,DWORD PTR [edx+0x56]
  41ef1d:	sbb    DWORD PTR [edx],0x87bbc764
  41ef23:	sub    BYTE PTR [ecx],cl
  41ef25:	(bad)  
  41ef26:	out    dx,eax
  41ef27:	out    dx,al
  41ef28:	(bad)  
  41ef2a:	imul   esi,DWORD PTR [esi+eiz*4+0x4c],0x619bcd7b
  41ef32:	mov    esi,0xeb3d69a5
  41ef37:	or     edi,ebp
  41ef39:	out    dx,al
  41ef3a:	push   ds
  41ef3b:	xor    esi,DWORD PTR [ecx-0x28c203be]
  41ef41:	jo     0x41eeee
  41ef43:	cmp    eax,0xec9dc0f0
  41ef48:	inc    eax
  41ef49:	inc    esi
  41ef4a:	mov    edx,0x954f3e3b
  41ef4f:	dec    esi
  41ef50:	fld    DWORD PTR [ecx+eax*2]
  41ef53:	in     eax,dx
  41ef54:	xchg   BYTE PTR [edx-0x3b],cl
  41ef57:	retf   0xa289
  41ef5a:	test   ebx,ebp
  41ef5c:	push   0xffffffb8
  41ef5e:	pusha  
  41ef5f:	adc    eax,DWORD PTR [ebx+0x23]
  41ef62:	aad    0x80
  41ef64:	mov    cl,BYTE PTR [eax-0x5d]
  41ef67:	mov    esp,0xbdf0666c
  41ef6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef6d:	jg     0x41ef5e
  41ef6f:	retf   
  41ef70:	and    al,0x28
  41ef72:	cld    
  41ef73:	xchg   BYTE PTR [esi+0x3a],dl
  41ef76:	mov    DWORD PTR ds:0x7a584004,0xdc8847
  41ef80:	inc    ebp
  41ef81:	les    esi,FWORD PTR [ebx+0xd]
  41ef84:	adc    al,0x9b
  41ef86:	sub    eax,0x9af9f6d5
  41ef8b:	js     0x41efa5
  41ef8d:	test   eax,0x1e0c184a
  41ef92:	aaa    
  41ef93:	cli    
  41ef94:	xchg   ecx,eax
  41ef95:	jb     0x41eff8
  41ef97:	rcl    BYTE PTR [ebp+0x35],cl
  41ef9a:	ins    DWORD PTR es:[edi],dx
  41ef9b:	pop    ebx
  41ef9c:	call   0xd9422990
  41efa1:	iret   
  41efa2:	inc    edi
  41efa3:	jl     0x41efb4
  41efa5:	jnp    0x41ef73
  41efa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa8:	addr16 nop
  41efaa:	clc    
  41efab:	xchg   edi,eax
  41efac:	adc    eax,0x8014a4ba
  41efb1:	pop    ebp
  41efb2:	jge    0x41efdf
  41efb4:	jmp    0x6cfb:0xc8c72639
  41efbb:	inc    ecx
  41efbc:	adc    BYTE PTR [ecx+0x71],bh
  41efbf:	xchg   edx,eax
  41efc0:	and    dh,0x9d
  41efc3:	push   ebx
  41efc4:	mov    BYTE PTR [ecx],bl
  41efc6:	mov    al,ds:0xdcfccdd9
  41efcb:	xlat   BYTE PTR ds:[ebx]
  41efcc:	ror    BYTE PTR [esi-0x4fac20b6],0x3a
  41efd3:	dec    ebx
  41efd4:	fistp  DWORD PTR [ecx+0x67]
  41efd7:	int    0xb
  41efd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efda:	std    
  41efdb:	sar    BYTE PTR ds:0xedd408dc,0xd8
  41efe2:	dec    ecx
  41efe3:	(bad)  
  41efe4:	mov    ah,0xcf
  41efe6:	and    eax,0x674e37c1
  41efeb:	mov    eax,0x3b7137df
  41eff0:	cmp    al,BYTE PTR [edx-0x26ccce8a]
  41eff6:	stc    
  41eff7:	imul   eax,ebx,0xffffffef
  41effa:	adc    al,0x2a
  41effc:	and    BYTE PTR [ebp-0x1d],bh
  41efff:	xor    eax,0xb33d22c0
  41f004:	inc    esi
  41f005:	es out 0x1b,al
  41f008:	mov    edi,0xba6a0e39
  41f00d:	vfrczss xmm13,xmm6
  41f012:	and    ah,bl
  41f014:	adc    DWORD PTR [eax+0xf],ebx
  41f017:	les    eax,FWORD PTR [edi-0x70b4c08c]
  41f01d:	jecxz  0x41effe
  41f01f:	cli    
  41f020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f021:	jbe    0x41f003
  41f023:	mov    esp,0xda388963
  41f028:	dec    edx
  41f029:	ja     0x41effd
  41f02b:	fidiv  DWORD PTR [esi]
  41f02d:	add    eax,0x68146d78
  41f032:	stos   BYTE PTR es:[edi],al
  41f033:	jo     0x41f057
  41f035:	popa   
  41f036:	pop    eax
  41f037:	mov    esi,DWORD PTR [esi-0x29caf246]
  41f03d:	mov    eax,ds:0x759bd322
  41f042:	aaa    
  41f043:	jp     0x41f0ac
  41f045:	dec    edx
  41f046:	and    DWORD PTR es:[esi],0x20c4fa06
  41f04d:	fdivr  DWORD PTR [edx]
  41f04f:	xchg   BYTE PTR [ebx+0x7d],ch
  41f052:	dec    esi
  41f053:	sbb    eax,0x35eef331
  41f058:	cmc    
  41f059:	xchg   BYTE PTR [ebp+ebx*8+0x65],dh
  41f05d:	fcmovne st,st(7)
  41f05f:	xor    ebp,DWORD PTR [ebx+eax*1-0x6cb0fc58]
  41f066:	mov    ch,0x73
  41f068:	std    
  41f069:	jne    0x41f0db
  41f06b:	scas   al,BYTE PTR es:[edi]
  41f06c:	addr16 push edx
  41f06e:	sbb    DWORD PTR [eax-0x39],edi
  41f071:	inc    ebp
  41f072:	mov    ch,0x5f
  41f074:	retf   0x9fc6
  41f077:	outs   dx,BYTE PTR ds:[esi]
  41f078:	ds jno 0x41f0cb
  41f07b:	mov    ds:0xfb414220,al
  41f080:	in     eax,dx
  41f081:	push   esi
  41f082:	inc    esi
  41f083:	daa    
  41f084:	fdivr  QWORD PTR [edi]
  41f086:	sub    al,0xfe
  41f088:	pop    es
  41f089:	mov    edi,0xe2be63eb
  41f08e:	mov    ebx,0x7b7aae34
  41f093:	inc    esi
  41f094:	daa    
  41f095:	fwait
  41f096:	repz dec edi
  41f098:	sub    DWORD PTR ds:0xc8e9b4bd,ecx
  41f09e:	dec    esp
  41f09f:	in     al,0x83
  41f0a1:	xchg   esi,eax
  41f0a2:	jns    0x41f0bd
  41f0a4:	ja     0x41f099
  41f0a6:	pushf  
  41f0a7:	xor    al,0x8a
  41f0a9:	push   ebx
  41f0aa:	jb     0x41f0ad
  41f0ac:	cwde   
  41f0ad:	dec    esi
  41f0ae:	adc    BYTE PTR [ecx],ah
  41f0b0:	std    
  41f0b1:	xchg   ecx,eax
  41f0b2:	jns    0x41f0c2
  41f0b4:	and    al,BYTE PTR [ebp+0x537d14be]
  41f0ba:	cmp    BYTE PTR [edx],al
  41f0bc:	mov    ds:0x7cde9bc3,eax
  41f0c1:	sbb    esi,edi
  41f0c3:	xchg   DWORD PTR [edx-0x3bdae7],edx
  41f0c9:	push   ecx
  41f0ca:	punpckhdq mm2,QWORD PTR [edx]
  41f0cd:	push   0xe
  41f0cf:	mov    esp,0x9928e096
  41f0d4:	in     eax,0x89
  41f0d6:	icebp  
  41f0d7:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41f0d9:	pop    ss
  41f0da:	fsubr  QWORD PTR [esi*4-0x3857f6be]
  41f0e1:	scas   eax,DWORD PTR es:[edi]
  41f0e2:	adc    al,0x4d
  41f0e4:	enter  0xb3b1,0xfe
  41f0e8:	stos   BYTE PTR es:[edi],al
  41f0e9:	repz mov edx,0x7210b562
  41f0ef:	pop    ebx
  41f0f0:	loop   0x41f0af
  41f0f2:	adc    esi,DWORD PTR [esi]
  41f0f4:	div    BYTE PTR [ecx-0x4f39a663]
  41f0fa:	das    
  41f0fb:	push   0xdfdee2f0
  41f100:	(bad)  
  41f101:	cmp    bl,BYTE PTR [ebx]
  41f103:	sbb    al,0x9d
  41f105:	push   es
  41f106:	fwait
  41f107:	cmp    dl,BYTE PTR [eax-0x39]
  41f10a:	das    
  41f10b:	bound  edx,QWORD PTR [eax+edx*1-0x6]
  41f10f:	mov    ds:0x117403a3,al
  41f114:	push   ebx
  41f115:	xchg   edx,eax
  41f116:	out    dx,al
  41f117:	(bad)  
  41f118:	xlat   BYTE PTR ds:[ebx]
  41f119:	inc    esi
  41f11a:	dec    esp
  41f11b:	popa   
  41f11c:	imul   ebx,DWORD PTR [edx+esi*4+0x6c45fe4a],0x2ac2f745
  41f127:	cmp    al,0x12
  41f129:	sbb    al,0xc0
  41f12b:	jge    0x41f161
  41f12d:	(bad)  
  41f12e:	fucomip st,st(2)
  41f130:	adc    eax,0x6b206628
  41f135:	hlt    
  41f136:	mov    ds:0x8d301c68,al
  41f13b:	popa   
  41f13c:	sub    al,0xc7
  41f13e:	js     0x41f17c
  41f140:	sahf   
  41f141:	or     edi,edi
  41f143:	add    eax,0x9c7d84c7
  41f148:	push   es
  41f149:	dec    ecx
  41f14a:	cmc    
  41f14b:	cli    
  41f14c:	sub    DWORD PTR [edi],edi
  41f14e:	fild   WORD PTR [edx-0x18]
  41f151:	dec    ebx
  41f152:	dec    ebx
  41f153:	mov    ebp,0xa8047ea4
  41f158:	mov    al,0x4f
  41f15a:	fs xchg esp,eax
  41f15c:	pusha  
  41f15d:	jl     0x41f12c
  41f15f:	(bad)  
  41f161:	pop    edx
  41f162:	add    DWORD PTR [edi-0x44],ebp
  41f165:	ror    DWORD PTR [ebx-0x64cb19ea],cl
  41f16b:	cmp    al,0x85
  41f16d:	inc    eax
  41f16e:	cwde   
  41f16f:	inc    ebp
  41f170:	cmp    al,0xae
  41f172:	xor    al,0x28
  41f174:	adc    ecx,DWORD PTR [esi+0x2ef0415e]
  41f17a:	dec    eax
  41f17b:	fcom   st(7)
  41f17d:	stos   BYTE PTR es:[edi],al
  41f17e:	mov    al,0xda
  41f180:	xchg   ebp,eax
  41f181:	pop    ds
  41f182:	out    dx,eax
  41f183:	pop    esi
  41f184:	imul   ecx,DWORD PTR [ecx],0xfffffff4
  41f187:	out    dx,al
  41f188:	stos   BYTE PTR es:[edi],al
  41f189:	add    ecx,DWORD PTR [edx-0x5]
  41f18c:	xor    ah,cl
  41f18e:	cmp    eax,0x3f38bf67
  41f193:	mov    ah,0xac
  41f195:	jnp    0x41f14b
  41f197:	xchg   esi,eax
  41f198:	rcl    DWORD PTR [eax],1
  41f19a:	fnstcw WORD PTR [ebx-0x8]
  41f19d:	hlt    
  41f19e:	shl    DWORD PTR [eax+0x58dc98ee],cl
  41f1a4:	cs dec ecx
  41f1a6:	retf   0x209e
  41f1a9:	adc    al,0xe3
  41f1ab:	push   0x51022dd0
  41f1b0:	mov    eax,ds:0xe32e467
  41f1b5:	jp     0x41f1af
  41f1b7:	imul   ebp,esp,0x73
  41f1ba:	in     al,dx
  41f1bb:	int    0x10
  41f1bd:	sub    BYTE PTR [edi+0x52e92c09],dl
  41f1c3:	or     al,0xb9
  41f1c5:	sub    esi,DWORD PTR [ecx-0x7d]
  41f1c8:	das    
  41f1c9:	sbb    ebx,DWORD PTR [edi-0x6d]
  41f1cc:	jl     0x41f23a
  41f1ce:	mov    ebp,0xbd4ba358
  41f1d3:	ret    
  41f1d4:	xor    ecx,esp
  41f1d6:	mov    BYTE PTR [ebx],bl
  41f1d8:	cld    
  41f1d9:	test   eax,0x66484acf
  41f1de:	adc    ebx,edi
  41f1e0:	inc    esp
  41f1e1:	in     eax,dx
  41f1e2:	and    bl,BYTE PTR [ecx-0x7a6d7d0f]
  41f1e8:	popf   
  41f1e9:	pop    ds
  41f1ea:	pop    ebx
  41f1eb:	dec    eax
  41f1ec:	daa    
  41f1ed:	stc    
  41f1ee:	sub    DWORD PTR [ecx-0xf],0xffffffa1
  41f1f2:	cli    
  41f1f3:	push   ecx
  41f1f4:	lods   eax,DWORD PTR ds:[esi]
  41f1f5:	adc    eax,0x23c4f6b3
  41f1fa:	mov    dh,0xb8
  41f1fc:	add    BYTE PTR [ebp+0x976486a],ch
  41f202:	push   esi
  41f203:	jl     0x41f210
  41f205:	test   al,0x48
  41f207:	test   edi,esi
  41f209:	ss sub eax,0x90c24862
  41f20f:	jl     0x41f1da
  41f211:	inc    ebp
  41f212:	pusha  
  41f213:	mul    bh
  41f215:	mov    edi,0x31ba4fe6
  41f21a:	loopne 0x41f263
  41f21c:	mov    DWORD PTR [edx-0x3c],edi
  41f21f:	and    al,0x80
  41f221:	mov    BYTE PTR [edx+0x4a],ch
  41f224:	cwde   
  41f225:	retf   0x37b3
  41f228:	jae    0x41f22c
  41f22a:	mov    dl,0x8f
  41f22c:	pop    edi
  41f22d:	inc    esp
  41f22e:	or     BYTE PTR [esp+eax*8],dl
  41f231:	rcl    BYTE PTR [esi+0x1d],0x68
  41f235:	mov    ecx,0x5a553eef
  41f23a:	inc    ebp
  41f23b:	ror    BYTE PTR ds:0x29492a0,1
  41f241:	push   esi
  41f242:	scas   eax,DWORD PTR es:[edi]
  41f243:	scas   eax,DWORD PTR es:[edi]
  41f244:	inc    edx
  41f245:	mov    esp,0xf6cd55de
  41f24a:	mov    eax,ds:0x63ac4bfb
  41f24f:	ins    BYTE PTR es:[edi],dx
  41f250:	or     DWORD PTR [eax-0x32e62fe6],edx
  41f256:	mov    eax,0x4d9ef33f
  41f25b:	sbb    edi,DWORD PTR [ecx+edi*2]
  41f25e:	fimul  DWORD PTR [esi-0x60cd27eb]
  41f264:	jmp    0x54d8:0xe20d31f2
  41f26b:	cmp    al,al
  41f26d:	sub    bl,ch
  41f26f:	dec    edi
  41f270:	call   0xf4fef1c1
  41f275:	pop    ebp
  41f276:	pop    ss
  41f277:	enter  0x3bda,0xd6
  41f27b:	push   ss
  41f27c:	ins    BYTE PTR es:[edi],dx
  41f27d:	jg     0x41f26c
  41f27f:	adc    esp,DWORD PTR [ecx+esi*1]
  41f282:	lods   al,BYTE PTR ds:[esi]
  41f283:	push   0xffffffc3
  41f285:	jae    0x41f26f
  41f287:	fwait
  41f288:	push   edx
  41f289:	loopne 0x41f2e0
  41f28b:	sub    al,0x2c
  41f28d:	sub    bh,BYTE PTR [esi+0x54]
  41f290:	xor    bh,BYTE PTR [esi]
  41f292:	ret    0xe233
  41f295:	pusha  
  41f296:	mov    eax,ds:0x9e59b381
  41f29b:	inc    esi
  41f29c:	(bad)  
  41f29d:	bound  eax,QWORD PTR ss:0x83ecc63d
  41f2a4:	mov    ebp,0x20b4186c
  41f2a9:	ja     0x41f306
  41f2ab:	iret   
  41f2ac:	mov    dh,0xa1
  41f2ae:	into   
  41f2af:	int    0x2a
  41f2b1:	adc    bl,BYTE PTR [esi+0x62]
  41f2b4:	xor    edi,ebp
  41f2b6:	shl    BYTE PTR [eax],0xa3
  41f2b9:	add    ebx,DWORD PTR [edi+0x5d8aca2b]
  41f2bf:	ins    DWORD PTR es:[edi],dx
  41f2c0:	inc    ebp
  41f2c1:	(bad)  
  41f2c2:	sbb    esp,esp
  41f2c4:	sbb    BYTE PTR [esi+ecx*8+0x20526a33],al
  41f2cb:	rcr    ebp,0xdc
  41f2ce:	jae    0x41f31a
  41f2d0:	js     0x41f2fc
  41f2d2:	fsubr  QWORD PTR [ebx-0x7e]
  41f2d5:	ss cli 
  41f2d7:	fs pop ebx
  41f2d9:	inc    edi
  41f2da:	pushf  
  41f2db:	dec    ebp
  41f2dc:	icebp  
  41f2dd:	jmp    0x41f32f
  41f2df:	xor    DWORD PTR [edi+0x34],ebx
  41f2e2:	dec    esi
  41f2e3:	loop   0x41f311
  41f2e5:	cld    
  41f2e6:	iret   
  41f2e7:	sub    ah,ah
  41f2e9:	iret   
  41f2ea:	inc    eax
  41f2eb:	jno    0x41f35e
  41f2ed:	test   cl,bl
  41f2ef:	fwait
  41f2f0:	outs   dx,DWORD PTR ds:[esi]
  41f2f1:	adc    eax,0x7861982d
  41f2f6:	or     al,0x14
  41f2f8:	dec    esi
  41f2f9:	jo     0x41f28d
  41f2fb:	push   0xcc7aee3f
  41f300:	xor    BYTE PTR [edx],ah
  41f302:	inc    ebp
  41f303:	shr    ch,1
  41f305:	mov    eax,DWORD PTR [eax-0x1107895b]
  41f30b:	push   esi
  41f30c:	adc    edi,DWORD PTR [ebp-0x56674117]
  41f312:	inc    ebx
  41f313:	cmp    edx,DWORD PTR [ebp-0x5c892a8c]
  41f319:	dec    ebx
  41f31a:	add    ch,BYTE PTR [edx+0x4b2debe]
  41f320:	dec    ecx
  41f321:	dec    edi
  41f322:	int    0xc6
  41f324:	jg     0x41f32b
  41f326:	dec    esp
  41f327:	cwde   
  41f328:	jb     0x41f2df
  41f32a:	std    
  41f32b:	inc    edx
  41f32c:	out    0xac,al
  41f32e:	sub    BYTE PTR [esi],dh
  41f330:	mov    esp,0xf074c135
  41f335:	xor    BYTE PTR [eax-0x7c],bl
  41f338:	mov    esi,0x93393d2b
  41f33d:	jl     0x41f34c
  41f33f:	in     eax,dx
  41f340:	fucomip st,st(2)
  41f342:	enter  0x3879,0x85
  41f346:	fmul   QWORD PTR [esi-0x1fe90975]
  41f34c:	xor    esp,DWORD PTR [esi-0x31]
  41f34f:	out    0x5e,al
  41f351:	out    dx,al
  41f352:	icebp  
  41f353:	jae    0x41f30c
  41f355:	add    eax,0xac366979
  41f35a:	mov    ds:0x287a4c4a,al
  41f35f:	sbb    al,0x42
  41f361:	pop    ebx
  41f362:	cmc    
  41f363:	int3   
  41f364:	and    BYTE PTR [ebp-0x13a85b1c],bl
  41f36a:	fadd   st(2),st
  41f36c:	cmp    DWORD PTR [esi+0x53],0x5a
  41f370:	cmp    DWORD PTR [ebx+0x4d],eax
  41f373:	je     0x41f398
  41f375:	lds    ebx,FWORD PTR [eax]
  41f377:	push   ds
  41f378:	ficom  WORD PTR [ebx-0x18]
  41f37b:	mov    ecx,0x43b936e3
  41f380:	xchg   esi,eax
  41f381:	mov    al,0xb2
  41f383:	scas   eax,DWORD PTR es:[edi]
  41f384:	add    ecx,DWORD PTR [ebx+0x1d132d13]
  41f38a:	push   eax
  41f38b:	mov    DWORD PTR [ebx],esp
  41f38d:	adc    al,0xbc
  41f38f:	push   esi
  41f390:	pop    ecx
  41f391:	push   ecx
  41f392:	iret   
  41f393:	mov    ds:0x6b8e7900,al
  41f398:	add    DWORD PTR [ebx],edi
  41f39a:	imul   esi,DWORD PTR [eax-0x10],0x51
  41f39e:	jmp    0x82a4:0xd80dd109
  41f3a5:	jp     0x41f3af
  41f3a7:	pop    edx
  41f3a8:	pop    ecx
  41f3a9:	mov    ds:0x8aaa08d8,eax
  41f3ae:	or     bh,BYTE PTR [eax+ebp*1+0x55b676ae]
  41f3b5:	or     BYTE PTR [ecx-0x3e9ca878],al
  41f3bb:	scas   eax,DWORD PTR es:[edi]
  41f3bc:	fmul   QWORD PTR [esi]
  41f3be:	or     al,0x81
  41f3c0:	out    dx,al
  41f3c1:	cmp    edx,DWORD PTR [ecx]
  41f3c3:	fmul   QWORD PTR [esi+0x41]
  41f3c6:	xchg   ecx,eax
  41f3c7:	neg    BYTE PTR [ecx]
  41f3c9:	mov    es,WORD PTR [edi+eax*8-0x12addaa3]
  41f3d0:	pop    eax
  41f3d1:	or     eax,0x6da068c1
  41f3d6:	shl    DWORD PTR [esi],1
  41f3d8:	add    eax,0x85fa71e3
  41f3dd:	shl    bl,cl
  41f3df:	test   BYTE PTR [ebp+ecx*2+0x23],dh
  41f3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3e4:	add    DWORD PTR [edx+ecx*1+0x3d],edi
  41f3e8:	addr16 in eax,dx
  41f3ea:	scas   eax,DWORD PTR es:[edi]
  41f3eb:	les    ebp,FWORD PTR [eax-0x404d8ea0]
  41f3f1:	jae    0x41f465
  41f3f3:	mov    edx,ebx
  41f3f5:	jmp    0x41f3ed
  41f3f7:	xchg   edi,eax
  41f3f8:	jno    0x41f3e6
  41f3fa:	xor    DWORD PTR [ebp-0x38eb2960],esi
  41f400:	sub    eax,ecx
  41f402:	imul   ecx,DWORD PTR ds:[esi+0xa],0xffffff9d
  41f407:	fstp   TBYTE PTR [edx]
  41f409:	mov    dh,0x15
  41f40b:	mov    ch,0xb3
  41f40d:	addr16 retf 
  41f40f:	pop    esi
  41f410:	fistp  QWORD PTR [ebp-0x25]
  41f413:	xlat   BYTE PTR ds:[ebx]
  41f414:	(bad)  
  41f415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f416:	arpl   WORD PTR [ebp+edx*4-0x5a],cx
  41f41a:	jmp    0x41f427
  41f41c:	add    al,0x11
  41f41e:	add    esi,esi
  41f420:	ja     0x41f484
  41f422:	ins    BYTE PTR es:[edi],dx
  41f423:	iret   
  41f424:	sbb    BYTE PTR [edi+ebx*4],ch
  41f427:	into   
  41f428:	mov    bh,0xff
  41f42a:	imul   ebp,DWORD PTR ds:0xe8fbe37f,0xf3af875
  41f434:	fdivr  DWORD PTR [ebp-0x3d]
  41f437:	fiadd  WORD PTR [ecx-0x36]
  41f43a:	add    ebx,DWORD PTR [ebp+0x2b6ce20]
  41f440:	inc    edx
  41f441:	clc    
  41f442:	adc    DWORD PTR [esi+edi*2-0x2c],edx
  41f446:	inc    esp
  41f447:	ja     0x41f49b
  41f449:	mov    eax,0x68de25ec
  41f44e:	cld    
  41f44f:	nop
  41f450:	adc    eax,0xc1e55275
  41f455:	jp     0x41f412
  41f457:	retf   
  41f458:	push   eax
  41f459:	stos   BYTE PTR es:[edi],al
  41f45a:	push   ebx
  41f45b:	pushf  
  41f45c:	dec    ecx
  41f45d:	and    esp,edi
  41f45f:	sub    DWORD PTR [ecx+0x2d],eax
  41f462:	adc    bl,dl
  41f464:	push   eax
  41f465:	js     0x41f448
  41f467:	cmp    eax,0x91f2c2ec
  41f46c:	imul   eax,DWORD PTR [ebp+0x3f13d401],0x7
  41f473:	inc    eax
  41f474:	dec    ebp
  41f475:	repnz aaa 
  41f477:	arpl   bp,bp
  41f479:	arpl   WORD PTR [edx+0x72ce2b06],ax
  41f47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f480:	cdq    
  41f481:	sub    al,0x7a
  41f483:	jmp    0x41f4bf
  41f485:	lea    ebp,[edx-0x52]
  41f488:	(bad)  
  41f489:	cdq    
  41f48a:	sub    al,0x94
  41f48c:	(bad)  [ebx]
  41f48e:	jl     0x41f4bc
  41f490:	arpl   WORD PTR [ebp-0x54fca69e],sp
  41f496:	mov    dl,0xfa
  41f498:	icebp  
  41f499:	ror    BYTE PTR [ecx-0x24def407],0x2f
  41f4a0:	call   0xb093:0xf333f7e2
  41f4a7:	fisub  DWORD PTR [ecx]
  41f4a9:	in     eax,dx
  41f4aa:	xchg   ecx,eax
  41f4ab:	rcl    DWORD PTR [edx-0xab7f48e],cl
  41f4b1:	xchg   edi,eax
  41f4b2:	ds pop ds
  41f4b4:	jne    0x41f4b7
  41f4b6:	mov    eax,ds:0x2bca4e72
  41f4bb:	cmp    al,0xf1
  41f4bd:	dec    esi
  41f4be:	mov    eax,0xcd3c41b0
  41f4c3:	and    DWORD PTR ds:0x48c1fb0e,esp
  41f4c9:	or     DWORD PTR [eax+ebx*4+0xaea2ac7],esi
  41f4d0:	pop    esp
  41f4d1:	sub    al,0x3c
  41f4d3:	dec    edx
  41f4d4:	call   FWORD PTR [edx]
  41f4d6:	xchg   BYTE PTR [ebp-0x550fbdde],cl
  41f4dc:	mov    al,ds:0x1522ec6d
  41f4e1:	xchg   BYTE PTR [ebx],dl
  41f4e3:	in     al,dx
  41f4e4:	dec    eax
  41f4e5:	shl    edx,1
  41f4e7:	xor    eax,0x969f92aa
  41f4ec:	dec    esi
  41f4ed:	fcomp  DWORD PTR [ebx+0x32]
  41f4f0:	into   
  41f4f1:	pop    esi
  41f4f2:	pusha  
  41f4f3:	(bad)  
  41f4f4:	retf   0x58b3
  41f4f7:	pop    eax
  41f4f8:	jmp    0xbe9:0xb9b76ed0
  41f4ff:	jle    0x41f4a0
  41f501:	sub    eax,0x8d83cc6a
  41f507:	enter  0x6dad,0x93
  41f50b:	push   esp
  41f50c:	lea    ecx,[edx]
  41f50e:	mov    eax,0x76e9d338
  41f513:	fwait
  41f514:	call   0x8850:0x7213b03b
  41f51b:	outs   dx,BYTE PTR ds:[esi]
  41f51c:	sub    BYTE PTR [eax-0x37],bl
  41f51f:	pop    ecx
  41f520:	xchg   esp,eax
  41f521:	xor    BYTE PTR [edi+ecx*2+0x8839ac3],cl
  41f528:	adc    al,dh
  41f52a:	in     al,0x83
  41f52c:	pop    esp
  41f52d:	or     cl,BYTE PTR [edx+0xf]
  41f530:	sti    
  41f531:	or     cl,BYTE PTR [ecx]
  41f533:	mov    eax,ds:0x4153ebbc
  41f538:	mov    edx,0x8765ee7f
  41f53d:	ffreep st(6)
  41f53f:	pop    ecx
  41f540:	mov    ebx,0xee32d43c
  41f545:	or     eax,0x4327db20
  41f54a:	call   FWORD PTR [eax]
  41f54c:	(bad)  
  41f54e:	mov    cl,dl
  41f550:	add    DWORD PTR [ebx-0x50],edi
  41f553:	mov    dl,0x45
  41f555:	push   esp
  41f556:	push   0x58
  41f558:	mov    ch,0xdd
  41f55a:	mov    bh,0xd
  41f55c:	jecxz  0x41f4fd
  41f55e:	popa   
  41f55f:	aad    0x13
  41f561:	test   al,0x81
  41f563:	sub    cl,BYTE PTR [edx+0x1b]
  41f566:	mov    BYTE PTR [esi+esi*8-0x36],ah
  41f56a:	xchg   ebx,eax
  41f56b:	ror    BYTE PTR [esp+ebx*4-0x1b],0xc0
  41f570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f571:	mov    ecx,0x762c1491
  41f576:	mov    ecx,ecx
  41f578:	loopne 0x41f5e2
  41f57a:	ja     0x41f57b
  41f57c:	in     eax,dx
  41f57d:	pushf  
  41f57e:	add    esi,edx
  41f580:	mov    ah,0xb3
  41f582:	loop   0x41f5ac
  41f584:	int    0xe5
  41f586:	rcl    DWORD PTR [ebp-0x14dd12b4],cl
  41f58c:	bound  ebp,QWORD PTR [edi]
  41f58e:	mov    ch,0xbc
  41f590:	push   ss
  41f591:	adc    eax,0x6d66d75f
  41f596:	xchg   esi,eax
  41f597:	jno    0x41f608
  41f599:	xor    BYTE PTR ds:0x5c140d93,ah
  41f59f:	cmp    al,0xca
  41f5a1:	xchg   esp,eax
  41f5a2:	fidivr DWORD PTR [edx-0x21]
  41f5a5:	dec    edi
  41f5a6:	xor    eax,0x6d9fbc21
  41f5ab:	add    edx,eax
  41f5ad:	and    edx,DWORD PTR [edi+0x7f0486d]
  41f5b3:	pop    es
  41f5b4:	jo     0x41f55e
  41f5b6:	int3   
  41f5b7:	add    ah,BYTE PTR [ebp+0x2]
  41f5ba:	sub    ah,BYTE PTR [ebx+0x5e4cdcaf]
  41f5c0:	sbb    dh,BYTE PTR [ecx+0x4f0b3fe2]
  41f5c6:	not    DWORD PTR [ecx-0x253c5821]
  41f5cc:	pop    esp
  41f5cd:	mov    al,0xcd
  41f5cf:	xchg   ebp,eax
  41f5d0:	xchg   ebx,eax
  41f5d1:	pop    ss
  41f5d2:	xlat   BYTE PTR ds:[ebx]
  41f5d3:	cmp    edx,0xffffffe5
  41f5d6:	rcr    BYTE PTR [ecx],1
  41f5d8:	nop
  41f5d9:	bound  esp,QWORD PTR [eax+eiz*2-0x58a46a87]
  41f5e0:	fwait
  41f5e1:	push   edi
  41f5e2:	push   esp
  41f5e3:	call   0xc435:0x33d9776c
  41f5ea:	push   es
  41f5eb:	in     eax,dx
  41f5ec:	push   0x23f5cd8f
  41f5f1:	mov    esp,0xc6e6f476
  41f5f6:	ret    0x996c
  41f5f9:	pusha  
  41f5fa:	adc    BYTE PTR [ebx],ah
  41f5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5fd:	cmp    esi,DWORD PTR [edx-0x331d5d9f]
  41f603:	push   edx
  41f604:	mov    ebx,DWORD PTR [edx+0x4441bc12]
  41f60a:	into   
  41f60b:	push   ds
  41f60c:	cdq    
  41f60d:	out    0x5c,al
  41f60f:	ror    DWORD PTR [esi+eax*8+0x1c],cl
  41f613:	push   esi
  41f614:	sar    BYTE PTR [ebx+eiz*4-0x44],1
  41f618:	(bad)  
  41f619:	fld    TBYTE PTR ds:0x9838ae32
  41f61f:	pop    ebx
  41f620:	out    0x1f,eax
  41f622:	repz xchg ebp,eax
  41f624:	adc    eax,0x12411e62
  41f629:	rcl    DWORD PTR [edx+0x45990e52],cl
  41f62f:	mov    eax,0x9f7efab1
  41f634:	int    0xf9
  41f636:	pushf  
  41f637:	inc    esp
  41f638:	and    al,0xe2
  41f63a:	mov    WORD PTR [ebx+0x58],es
  41f63d:	mov    esp,DWORD PTR [esi+0x72365f44]
  41f643:	adc    BYTE PTR [ebx],al
  41f645:	shl    BYTE PTR [edi-0x55251cae],cl
  41f64b:	and    al,0x9a
  41f64d:	mov    ch,0x28
  41f64f:	jo     0x41f6ae
  41f651:	leave  
  41f652:	push   ds
  41f653:	pop    eax
  41f654:	or     edx,edx
  41f656:	add    cl,ah
  41f658:	int    0x26
  41f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f65b:	add    BYTE PTR [ebp+0x35c4f5],bl
  41f661:	mov    dl,0x63
  41f663:	push   ecx
  41f664:	and    edi,DWORD PTR [ebx+0x1f35c219]
  41f66a:	or     ebp,DWORD PTR [edx]
  41f66c:	pop    eax
  41f66d:	outs   dx,BYTE PTR ds:[esi]
  41f66e:	dec    ebx
  41f66f:	xor    DWORD PTR [edi],edi
  41f671:	xchg   ch,bh
  41f673:	xlat   BYTE PTR ds:[ebx]
  41f674:	jae    0x41f60f
  41f676:	sbb    BYTE PTR ds:0x7559ef0f,bl
  41f67c:	inc    edx
  41f67d:	addr16 in eax,dx
  41f67f:	popa   
  41f680:	sti    
  41f681:	push   esi
  41f682:	int    0x1c
  41f684:	xor    dh,BYTE PTR [eax+ebp*2]
  41f687:	out    dx,al
  41f688:	fimul  WORD PTR [ebp-0x20c066d9]
  41f68e:	pop    ebx
  41f68f:	mov    edi,DWORD PTR [ebx]
  41f691:	ror    BYTE PTR [esi],cl
  41f693:	mov    BYTE PTR [eiz*2+0x100e6a6a],al
  41f69a:	fxch   st(5)
  41f69c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f69d:	shl    DWORD PTR [edi+0xe],cl
  41f6a0:	xor    ecx,DWORD PTR [eax-0x1ce2c262]
  41f6a6:	and    ah,BYTE PTR [ebx-0x3d182a31]
  41f6ac:	xor    bl,0xd7
  41f6af:	jp     0x41f71b
  41f6b1:	adc    dh,dh
  41f6b3:	fild   QWORD PTR [ebx-0x4d104848]
  41f6b9:	aas    
  41f6ba:	fist   DWORD PTR [esi+0x77431095]
  41f6c0:	rcl    esi,cl
  41f6c2:	das    
  41f6c3:	fsubr  QWORD PTR [edx-0x7aee3891]
  41f6c9:	jne    0x41f6c3
  41f6cb:	stos   DWORD PTR es:[edi],eax
  41f6cc:	pop    es
  41f6cd:	mov    bl,0xb4
  41f6cf:	leave  
  41f6d0:	xchg   ebx,esi
  41f6d2:	mov    esi,0x72e3cf0c
  41f6d7:	pusha  
  41f6d8:	out    dx,al
  41f6d9:	mov    bh,0xb1
  41f6db:	push   ecx
  41f6dc:	push   es
  41f6dd:	jle    0x41f6cd
  41f6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e0:	rol    DWORD PTR [edi+0x4c63101c],1
  41f6e6:	xchg   DWORD PTR [ebp+eax*1+0x26],ebp
  41f6ea:	xchg   BYTE PTR [ebp+0x1dccaa3f],dh
  41f6f0:	dec    edi
  41f6f1:	add    al,0x94
  41f6f3:	(bad)  
  41f6f4:	call   esp
  41f6f6:	mov    cs,WORD PTR [eax]
  41f6f8:	sub    DWORD PTR [esi+0xf1bdb8b],0x9d21b535
  41f702:	xchg   ebx,eax
  41f703:	out    0x8c,eax
  41f705:	aam    0x11
  41f707:	imul   edx,DWORD PTR [edx-0x51],0xffffffd9
  41f70b:	xor    DWORD PTR [edx+eax*8],edi
  41f70e:	inc    eax
  41f70f:	sbb    eax,0x4db9a48c
  41f714:	inc    ebp
  41f715:	(bad)  
  41f716:	popf   
  41f717:	xor    dl,BYTE PTR [esi]
  41f719:	adc    eax,0xd7ee407b
  41f71e:	add    al,0x41
  41f720:	jns    0x41f6af
  41f722:	lods   al,BYTE PTR ds:[esi]
  41f723:	sbb    edx,DWORD PTR [edx]
  41f725:	adc    esp,edx
  41f727:	inc    esp
  41f728:	jb     0x41f7a7
  41f72a:	fucomi st,st(3)
  41f72c:	jmp    0x41f7a6
  41f72e:	dec    esi
  41f72f:	jl     0x41f6b6
  41f731:	mov    BYTE PTR [ebx+0x75],cl
  41f734:	cmp    eax,0x1214140c
  41f739:	mov    edx,ebx
  41f73b:	push   ecx
  41f73c:	inc    ecx
  41f73d:	cmp    eax,0x94ad9791
  41f742:	or     DWORD PTR [esi+eiz*4+0x11379f4b],edx
  41f749:	jge    0x41f732
  41f74b:	out    0xa3,al
  41f74d:	pop    ebp
  41f74e:	das    
  41f74f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f751:	dec    edx
  41f752:	cld    
  41f753:	fwait
  41f754:	sub    eax,0x639cb1ca
  41f759:	shr    DWORD PTR [esi+esi*8+0x43],0xa1
  41f75e:	or     eax,0xb7305244
  41f763:	sub    DWORD PTR [edx-0x25],0xffffffa5
  41f767:	xchg   BYTE PTR [eax-0x29],ch
  41f76a:	pop    esp
  41f76b:	ins    DWORD PTR es:[edi],dx
  41f76c:	daa    
  41f76d:	aaa    
  41f76e:	(bad)  
  41f76f:	mov    ah,0x1a
  41f771:	ror    ch,1
  41f773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f774:	shl    esp,0x7
  41f777:	idiv   BYTE PTR [esi]
  41f779:	jno    0x41f7ac
  41f77b:	xchg   ebx,eax
  41f77c:	xchg   BYTE PTR ds:0xabd6481d,dh
  41f782:	push   edx
  41f783:	push   eax
  41f784:	mov    ecx,0xca9d410c
  41f789:	aam    0x77
  41f78b:	(bad)  
  41f78c:	clc    
  41f78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f78e:	sub    BYTE PTR [ebx+0x4087c29],dh
  41f794:	bound  ebx,QWORD PTR [ecx+0xbea6e66]
  41f79a:	cmc    
  41f79b:	popf   
  41f79c:	bound  ebx,QWORD PTR cs:[esi-0x3c]
  41f7a0:	mov    eax,0xafc710d7
  41f7a5:	imul   esi,DWORD PTR [ebx],0xffffffad
  41f7a8:	dec    eax
  41f7a9:	repnz iret 
  41f7ab:	xor    eax,0xe2ffeef3
  41f7b0:	fs xchg ebx,eax
  41f7b2:	stc    
  41f7b3:	sbb    ch,BYTE PTR [ebx-0x5c80bbf7]
  41f7b9:	push   ss
  41f7ba:	inc    ebp
  41f7bb:	xlat   BYTE PTR ds:[ebx]
  41f7bc:	cmc    
  41f7bd:	jns    0x41f789
  41f7bf:	test   DWORD PTR ds:0x91c29f48,esi
  41f7c5:	push   0xffffff88
  41f7c7:	push   ebx
  41f7c8:	dec    edx
  41f7c9:	xchg   si,ax
  41f7cb:	fild   DWORD PTR [eax-0x6c7bacca]
  41f7d1:	dec    ebp
  41f7d2:	clc    
  41f7d3:	push   esp
  41f7d4:	mov    edx,DWORD PTR [edi]
  41f7d6:	sub    cl,BYTE PTR [esp+ecx*2+0x3e]
  41f7da:	sub    dl,dl
  41f7dc:	mov    edi,0xd92d240
  41f7e1:	fild   DWORD PTR [esi-0x87cfed4]
  41f7e7:	xchg   esi,eax
  41f7e8:	into   
  41f7e9:	mov    ecx,0x2d4d721a
  41f7ee:	pop    esi
  41f7ef:	ja     0x41f7ea
  41f7f1:	dec    ebp
  41f7f2:	ja     0x41f774
  41f7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7f5:	pop    edx
  41f7f6:	jmp    0x41f79c
  41f7f8:	cmp    al,0x19
  41f7fb:	cmp    dh,dh
  41f7fd:	xor    dh,BYTE PTR [ebx-0x19]
  41f800:	inc    eax
  41f801:	or     eax,DWORD PTR [ecx-0x51748bbf]
  41f807:	leave  
  41f808:	hlt    
  41f809:	ins    BYTE PTR es:[edi],dx
  41f80a:	fsub   DWORD PTR [esi]
  41f80c:	test   DWORD PTR [ecx+0x7abce58c],eax
  41f812:	addr16 dec eax
  41f814:	pop    ds
  41f815:	gs push eax
  41f817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f818:	inc    ecx
  41f819:	shr    BYTE PTR [ecx],cl
  41f81b:	(bad)  
  41f81d:	mov    eax,ds:0xdfda8a94
  41f822:	sub    eax,DWORD PTR [esi]
  41f824:	cmp    ebx,esp
  41f826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f827:	ins    DWORD PTR es:[edi],dx
  41f828:	(bad)  
  41f829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f82a:	aas    
  41f82b:	add    al,ah
  41f82d:	cwde   
  41f82e:	mov    ds:0xa15ab7c9,eax
  41f833:	mov    ebp,ebp
  41f835:	xchg   ebp,eax
  41f836:	push   edi
  41f837:	inc    ecx
  41f838:	(bad)  
  41f839:	mov    esp,0x143a6cd5
  41f83e:	ja     0x41f865
  41f840:	mov    bl,0x7c
  41f842:	mov    bl,cl
  41f844:	(bad)  
  41f845:	repz inc ecx
  41f847:	pop    es
  41f848:	dec    ebx
  41f849:	repnz mov al,al
  41f84c:	lds    ebp,FWORD PTR [esi-0x2c]
  41f84f:	out    0x59,eax
  41f851:	dec    esp
  41f852:	mov    dl,0x33
  41f854:	int3   
  41f855:	and    edi,0x18
  41f858:	pop    es
  41f859:	dec    esp
  41f85a:	jmp    0x224fadd0
  41f85f:	mov    al,ds:0xaf382ef7
  41f864:	mov    ah,BYTE PTR [ecx+0x185981ee]
  41f86a:	pop    ebx
  41f86b:	jnp    0x41f848
  41f86d:	inc    eax
  41f86e:	sbb    dl,BYTE PTR [esi-0x16]
  41f871:	dec    edx
  41f872:	(bad)  
  41f873:	in     eax,0xbf
  41f875:	xchg   ebx,eax
  41f876:	les    ebx,FWORD PTR [ecx+0x3b]
  41f879:	or     BYTE PTR [ecx-0x5b994ed7],dh
  41f87f:	mov    cl,0xf
  41f881:	cmp    eax,0x78143b0c
  41f886:	and    BYTE PTR [eax],bh
  41f888:	and    BYTE PTR [edx+eax*8],dl
  41f88b:	push   ebx
  41f88c:	(bad)  
  41f88d:	adc    al,0xc3
  41f88f:	mov    eax,0x558d6d4a
  41f894:	dec    ebx
  41f895:	mov    dl,0x5b
  41f897:	push   edx
  41f898:	popf   
  41f899:	bound  ebx,QWORD PTR [esp+eax*2+0x6c]
  41f89d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f89e:	setle  BYTE PTR [ecx+0x4ad5b885]
  41f8a5:	sub    dh,BYTE PTR [eax+0xf4438b2]
  41f8ab:	adc    DWORD PTR [ecx+ecx*4],0x1e
  41f8af:	ror    esp,0x41
  41f8b2:	rcl    ebx,0x73
  41f8b5:	leave  
  41f8b6:	sbb    BYTE PTR [edx],0x77
  41f8b9:	xchg   edx,eax
  41f8ba:	imul   edx,edx,0xffffffbc
  41f8bd:	cmc    
  41f8be:	ss mov ah,0x7d
  41f8c1:	repnz aam 0xea
  41f8c4:	adc    BYTE PTR [eax+0x4c],dh
  41f8c7:	mov    ah,0x4b
  41f8c9:	ss (bad) 
  41f8cb:	push   ebp
  41f8cc:	nop
  41f8cd:	lea    edi,[ecx+edx*2-0x1249e461]
  41f8d4:	mov    BYTE PTR [edi],ch
  41f8d6:	add    cl,dl
  41f8d8:	fcomp  QWORD PTR [edi-0x2d561016]
  41f8de:	mov    edi,0x31109df8
  41f8e3:	push   ds
  41f8e4:	inc    edx
  41f8e5:	adc    eax,0x8d0c19e
  41f8ea:	(bad)  
  41f8eb:	in     al,dx
  41f8ec:	ja     0x41f8d3
  41f8ee:	in     al,dx
  41f8ef:	push   esp
  41f8f0:	or     eax,DWORD PTR [edi]
  41f8f2:	sub    BYTE PTR [eax-0x66aee3ce],ah
  41f8f8:	mov    dh,0xad
  41f8fa:	ror    BYTE PTR [edi],0x38
  41f8fd:	rcr    BYTE PTR [edx-0xb65c812],0x83
  41f904:	clc    
  41f905:	addr16 mov eax,ds:0x4ac9
  41f909:	sub    al,0x7d
  41f90b:	fldenv [ebp-0x27]
  41f90e:	or     DWORD PTR [esi-0x35],edx
  41f911:	aaa    
  41f912:	stc    
  41f913:	imul   eax,DWORD PTR [edx-0x4a236312],0xb7f49645
  41f91d:	xlat   BYTE PTR ds:[ebx]
  41f91e:	neg    BYTE PTR [bx+di-0x4fa8]
  41f923:	lods   eax,DWORD PTR ds:[esi]
  41f924:	xor    ecx,0x73
  41f927:	sbb    al,BYTE PTR [ebx-0x7a0abdf9]
  41f92d:	hlt    
  41f92e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92f:	sbb    al,0xb1
  41f931:	sbb    edx,esi
  41f933:	mov    edx,0x998b96ff
  41f938:	mov    ds:0x79d56730,eax
  41f93d:	add    eax,0x2d054c72
  41f942:	mov    ah,0xaf
  41f944:	cmp    edi,DWORD PTR [ebx]
  41f946:	or     BYTE PTR [esp+ebx*2-0x363a32bf],bh
  41f94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f94e:	ja     0x41f8f3
  41f950:	jns    0x41f962
  41f952:	jg     0x41f96e
  41f954:	inc    eax
  41f955:	fs mov dh,0xce
  41f958:	pop    ss
  41f959:	inc    ecx
  41f95a:	mov    ah,0x26
  41f95c:	xor    ah,BYTE PTR [ebx-0x375ea4c9]
  41f962:	cld    
  41f963:	in     al,dx
  41f964:	shl    DWORD PTR [ebx],0x34
  41f967:	popf   
  41f968:	add    ah,BYTE PTR [ecx-0x40]
  41f96b:	xor    al,0xb3
  41f96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f96e:	sub    eax,0xa2b7ab66
  41f973:	ror    dh,cl
  41f975:	mov    bh,BYTE PTR [edi+0x3f6c9095]
  41f97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f97c:	dec    ecx
  41f97d:	sbb    esi,ebx
  41f97f:	add    DWORD PTR [ecx+0x68],edi
  41f982:	jge    0x41f983
  41f984:	jp     0x41f9cf
  41f986:	cmp    al,0x84
  41f988:	and    esp,DWORD PTR [ebp+0x46]
  41f98b:	ret    0xbf6d
  41f98e:	sub    ah,BYTE PTR [edi+0x5c9a558a]
  41f994:	or     eax,DWORD PTR [ecx+0x62f9560d]
  41f99a:	jmp    0xa0fe6390
  41f99f:	jae    0x41f9ec
  41f9a1:	adc    cl,BYTE PTR [edi]
  41f9a3:	lea    ecx,[edi-0x4bb30922]
  41f9a9:	addr16 in al,dx
  41f9ab:	cmp    esp,DWORD PTR [esi-0x2]
  41f9ae:	dec    ecx
  41f9af:	cmp    dh,cl
  41f9b1:	pop    edx
  41f9b2:	adc    DWORD PTR [edi],0x4a
  41f9b5:	push   ebp
  41f9b6:	dec    eax
  41f9b7:	(bad)  
  41f9b8:	das    
  41f9b9:	in     al,0x93
  41f9bb:	pop    eax
  41f9bc:	push   0x12
  41f9be:	xor    DWORD PTR [ecx+0x37c2b17f],esi
  41f9c4:	mov    ebx,0xb65ff260
  41f9c9:	sbb    al,0x61
  41f9cb:	pop    edi
  41f9cc:	mov    edx,0xc80e444b
  41f9d1:	(bad)  
  41f9d2:	sbb    eax,DWORD PTR [ecx-0x172b92c9]
  41f9d8:	gs push esp
  41f9da:	pop    edi
  41f9db:	stc    
  41f9dc:	ja     0x41f9e7
  41f9de:	push   esi
  41f9df:	xor    eax,0x8de646c8
  41f9e4:	adc    ecx,DWORD PTR [eax+0x3]
  41f9e7:	enter  0xe9fd,0x4a
  41f9eb:	nop
  41f9ec:	inc    edi
  41f9ed:	pusha  
  41f9ee:	and    bl,BYTE PTR [eax]
  41f9f0:	(bad)  
  41f9f2:	and    bl,BYTE PTR [edi]
  41f9f4:	cmp    eax,0xc0508ec
  41f9f9:	sub    al,0xfe
  41f9fb:	mov    eax,0xb1a47787
  41fa00:	inc    esp
  41fa01:	(bad)  
  41fa02:	lods   al,BYTE PTR ds:[esi]
  41fa03:	add    eax,0xedc69e30
  41fa08:	out    0xf,al
  41fa0a:	dec    eax
  41fa0b:	sti    
  41fa0c:	js     0x41f9b8
  41fa0e:	sti    
  41fa0f:	frstor [esi+0x3dd5d19b]
  41fa15:	cmp    edi,DWORD PTR [eax-0x5b5ba513]
  41fa1b:	sub    eax,0x781268ef
  41fa20:	inc    esi
  41fa21:	iret   
  41fa22:	add    ebx,ecx
  41fa24:	xchg   BYTE PTR [ebx-0x144cde8],ah
  41fa2a:	and    al,0xa5
  41fa2c:	test   BYTE PTR [edx+ecx*2],cl
  41fa2f:	mov    dh,0x2f
  41fa31:	test   eax,0x6fc5fa5b
  41fa36:	or     edx,DWORD PTR [edx-0x9]
  41fa39:	rcr    al,0x61
  41fa3c:	pop    ss
  41fa3d:	mov    eax,0xa664c86
  41fa42:	cmp    cl,BYTE PTR [ebp-0x740f58c9]
  41fa48:	stos   DWORD PTR es:[edi],eax
  41fa49:	cmp    ebx,DWORD PTR [eax+0x45]
  41fa4c:	jns    0x41fab5
  41fa4e:	add    al,BYTE PTR [ebp+0xac0605a]
  41fa54:	add    esi,edx
  41fa56:	imul   edx,ecx,0x40
  41fa59:	int3   
  41fa5a:	ins    BYTE PTR es:[edi],dx
  41fa5b:	icebp  
  41fa5c:	xor    al,0xb1
  41fa5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa5f:	jb     0x41fab5
  41fa61:	dec    eax
  41fa62:	mov    ebx,0xde129ead
  41fa67:	cli    
  41fa68:	imul   BYTE PTR [esi-0x5d]
  41fa6b:	jmp    0xa6e5fdc7
  41fa70:	inc    eax
  41fa71:	xchg   ecx,eax
  41fa72:	loope  0x41fa65
  41fa74:	inc    ebx
  41fa75:	fisttp DWORD PTR ds:0x3121c2e7
  41fa7b:	imul   esp,ecx,0x1e
  41fa7e:	(bad)  [edi+edx*2-0x71506e96]
  41fa85:	mov    ch,0x98
  41fa87:	imul   ebx,DWORD PTR [esi-0x7debd895],0x70
  41fa8e:	cmp    esp,DWORD PTR [ebx+0x199fe7ed]
  41fa94:	jmp    FWORD PTR [edx-0xe780387]
  41fa9a:	mov    al,ds:0x91d2b85f
  41fa9f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41faa1:	pop    ss
  41faa2:	push   ss
  41faa3:	dec    ecx
  41faa4:	pop    ss
  41faa5:	fcom   QWORD PTR [ebx+0x541ed004]
  41faab:	mov    ebp,0x4e5eff29
  41fab0:	dec    esp
  41fab1:	mov    BYTE PTR [eax+0x8],ah
  41fab4:	repz push ecx
  41fab6:	fisub  DWORD PTR [ebx]
  41fab8:	shr    DWORD PTR [edi+0x27],1
  41fabb:	sti    
  41fabc:	mov    al,ds:0x8174963f
  41fac1:	aaa    
  41fac2:	xor    BYTE PTR [eax+edi*2-0x3c],cl
  41fac6:	jp     0x41faac
  41fac8:	into   
  41fac9:	add    ebp,DWORD PTR [eax+0x1c]
  41facc:	pop    esp
  41facd:	or     ah,cl
  41facf:	adc    al,0xda
  41fad1:	dec    esi
  41fad2:	mov    WORD PTR ds:0x3f590ef4,fs
  41fad8:	adc    al,BYTE PTR [ecx+0x581a086e]
  41fade:	lock idiv BYTE PTR [ebx+esi*8+0x79c45ae7]
  41fae6:	ins    BYTE PTR es:[edi],dx
  41fae7:	loop   0x41fb12
  41fae9:	add    DWORD PTR [esi+0x1e],ebp
  41faec:	push   ebp
  41faed:	pop    edx
  41faee:	inc    edi
  41faef:	ins    DWORD PTR es:[edi],dx
  41faf0:	add    DWORD PTR [ecx+edi*8+0x26],esp
  41faf4:	idiv   BYTE PTR [esp+ecx*8-0x13]
  41faf8:	add    bl,BYTE PTR [eax-0x4b6180e6]
  41fafe:	jne    0x41fb2d
  41fb00:	push   ds
  41fb01:	aad    0x72
  41fb03:	or     ebp,edx
  41fb05:	ror    DWORD PTR [eax],cl
  41fb07:	aad    0x64
  41fb09:	lods   eax,DWORD PTR ds:[esi]
  41fb0a:	(bad)  
  41fb0c:	shr    BYTE PTR [ebx],cl
  41fb0e:	mov    ebx,0x8ced1bc4
  41fb13:	lods   al,BYTE PTR ds:[esi]
  41fb14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb15:	dec    esp
  41fb16:	test   al,0xba
  41fb18:	jge    0x41fb8f
  41fb1a:	mov    bh,0xbc
  41fb1c:	lods   al,BYTE PTR ds:[esi]
  41fb1d:	fsubr  QWORD PTR [edi-0x60]
  41fb20:	out    dx,eax
  41fb21:	sbb    esi,DWORD PTR [ebx-0x30887e7]
  41fb27:	push   esi
  41fb28:	xchg   esp,eax
  41fb29:	and    esp,esp
  41fb2b:	mov    esi,0xddb745c9
  41fb30:	mov    ah,0xc8
  41fb32:	pop    esp
  41fb33:	cli    
  41fb34:	sub    eax,0xdd80d82b
  41fb39:	out    dx,al
  41fb3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb3b:	jle    0x41fb20
  41fb3d:	xor    cl,BYTE PTR [esi]
  41fb3f:	cmp    al,0xe2
  41fb41:	jp     0x41faf3
  41fb43:	stos   BYTE PTR es:[edi],al
  41fb44:	jno    0x41fad8
  41fb46:	or     al,bh
  41fb48:	ret    0x5c77
  41fb4b:	xchg   ebx,eax
  41fb4c:	mov    dh,0x82
  41fb4e:	mov    ch,0xc0
  41fb50:	repz pop ebp
  41fb52:	dec    esp
  41fb53:	les    esi,FWORD PTR [edx]
  41fb55:	daa    
  41fb56:	mov    WORD PTR [edi+ecx*4+0x1f],ds
  41fb5a:	pushf  
  41fb5b:	(bad)  
  41fb5c:	call   0xd0c09125
  41fb61:	xor    DWORD PTR [eax],esi
  41fb63:	fs inc esp
  41fb65:	outs   dx,BYTE PTR ds:[esi]
  41fb66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb67:	sub    BYTE PTR [edi-0x67844447],bl
  41fb6d:	xor    eax,edi
  41fb6f:	xor    bl,BYTE PTR [esp+edi*1+0x45ab5f2f]
  41fb76:	inc    ecx
  41fb77:	mov    al,ds:0xf27ebe0c
  41fb7c:	adc    DWORD PTR [edi-0x41193ff7],eax
  41fb82:	int3   
  41fb83:	outs   dx,BYTE PTR ds:[esi]
  41fb84:	and    eax,0xa0ab018
  41fb89:	stos   DWORD PTR es:[edi],eax
  41fb8a:	in     eax,0xfb
  41fb8c:	test   BYTE PTR [ebx-0xf4006c4],dl
  41fb92:	dec    eax
  41fb93:	and    eax,0x7ac670db
  41fb98:	ss jg  0x41fba5
  41fb9b:	shr    BYTE PTR [ebp+0x43],1
  41fb9e:	lds    ecx,FWORD PTR [ebx]
  41fba0:	adc    BYTE PTR es:[ebp-0x5f],ah
  41fba4:	mov    ah,0xb9
  41fba6:	xchg   ebp,eax
  41fba7:	mov    ah,BYTE PTR [ebx-0x1d]
  41fbaa:	jb     0x41fb77
  41fbac:	pop    ebp
  41fbad:	in     al,0x91
  41fbaf:	icebp  
  41fbb0:	push   ebx
  41fbb1:	push   edx
  41fbb2:	or     bx,WORD PTR [esi]
  41fbb5:	popf   
  41fbb6:	push   edx
  41fbb7:	imul   ebx,DWORD PTR [eax],0xffffff99
  41fbba:	imul   edi,DWORD PTR [edi],0xd9441144
  41fbc0:	int    0xc
  41fbc2:	mov    WORD PTR [edx],cs
  41fbc4:	shl    BYTE PTR [eax-0x1fb408cc],0xf6
  41fbcb:	inc    edi
  41fbcc:	or     al,0x5
  41fbce:	in     eax,dx
  41fbcf:	inc    ebx
  41fbd0:	and    BYTE PTR [esi-0xf],al
  41fbd3:	retf   
  41fbd4:	mov    ds:0x121dcf14,eax
  41fbd9:	sbb    al,0xf4
  41fbdb:	in     eax,0x4
  41fbdd:	ret    0xd90c
  41fbe0:	add    BYTE PTR [edi-0x7f],bh
  41fbe3:	cmp    dh,BYTE PTR [ebp+eiz*8-0x5e18fead]
  41fbea:	hlt    
  41fbeb:	nop
  41fbec:	add    al,0x91
  41fbee:	or     DWORD PTR [ebx],eax
  41fbf0:	sar    DWORD PTR [edi],cl
  41fbf2:	sahf   
  41fbf3:	mov    gs,WORD PTR [ecx+0x1470da4f]
  41fbf9:	arpl   WORD PTR [ecx],bp
  41fbfb:	fsub   st(2),st
  41fbfd:	into   
  41fbfe:	neg    BYTE PTR [ebp-0x6b]
  41fc01:	pop    ebp
  41fc02:	mov    esi,0x14816d37
  41fc07:	or     esp,DWORD PTR [eax]
  41fc09:	outs   dx,DWORD PTR ds:[esi]
  41fc0a:	(bad)  
  41fc0c:	jb     0x41fbe2
  41fc0e:	mov    ch,0x8c
  41fc10:	outs   dx,BYTE PTR ds:[esi]
  41fc11:	ret    0x81a1
  41fc14:	jmp    0xfae1:0x1fe0a560
  41fc1b:	or     bl,dh
  41fc1d:	mov    ebx,0x3808e7e9
  41fc22:	bound  esi,QWORD PTR [eax+0x70]
  41fc25:	jmp    0x272569f
  41fc2a:	sbb    BYTE PTR [ebp+0x71db9c2e],0x17
  41fc31:	into   
  41fc32:	dec    ebp
  41fc33:	retf   
  41fc34:	(bad)  
  41fc35:	mov    ?,WORD PTR [edi+0x77d18ee2]
  41fc3b:	addr16 pop edx
  41fc3d:	mov    esi,ecx
  41fc3f:	mov    dl,0x2d
  41fc41:	inc    edx
  41fc42:	(bad)  
  41fc43:	cmp    al,0x3d
  41fc45:	and    al,al
  41fc47:	and    DWORD PTR [eax-0x3fd5500e],ecx
  41fc4d:	and    BYTE PTR [edx+edi*8],cl
  41fc50:	rol    DWORD PTR [ecx+esi*1-0x74738afe],0xf3
  41fc58:	call   DWORD PTR ss:[ebp+ebx*2-0x57]
  41fc5d:	inc    ecx
  41fc5e:	push   ebp
  41fc5f:	fcmove st,st(1)
  41fc61:	mov    edx,0x1a6ead27
  41fc66:	frstor ds:0x2e3c533b
  41fc6c:	mov    bh,0xe9
  41fc6e:	sub    ecx,0x1d93b63f
  41fc74:	add    DWORD PTR [eax+0x3536d782],0xa974f7e
  41fc7e:	scas   eax,DWORD PTR es:[edi]
  41fc7f:	cwde   
  41fc80:	popa   
  41fc81:	stos   DWORD PTR es:[edi],eax
  41fc82:	jle    0x41fc4e
  41fc84:	test   BYTE PTR [edx],cl
  41fc86:	mov    eax,0x72044c43
  41fc8b:	loopne 0x41fca6
  41fc8d:	pop    eax
  41fc8e:	idiv   BYTE PTR [edx+0x68551412]
  41fc94:	sbb    BYTE PTR [edi],ah
  41fc96:	out    dx,al
  41fc97:	jmp    0x305b33cc
  41fc9c:	pop    eax
  41fc9d:	fbld   TBYTE PTR [eax]
  41fc9f:	scas   eax,DWORD PTR es:[edi]
  41fca0:	sbb    eax,0x82406943
  41fca5:	dec    ebx
  41fca6:	sbb    ebx,ebx
  41fca8:	out    dx,al
  41fca9:	dec    edi
  41fcaa:	jbe    0x41fc47
  41fcac:	jle    0x41fc61
  41fcae:	push   edx
  41fcaf:	popf   
  41fcb0:	out    0xab,al
  41fcb2:	xor    eax,0x4f639421
  41fcb7:	inc    esi
  41fcb8:	arpl   di,bx
  41fcba:	pusha  
  41fcbb:	inc    ecx
  41fcbc:	out    0x91,al
  41fcbe:	rcr    BYTE PTR [eax-0x4c130ec3],1
  41fcc4:	out    0xb6,eax
  41fcc6:	push   es
  41fcc7:	sbb    DWORD PTR [ebx-0x77],edi
  41fcca:	mov    ds:0x24b8acc4,al
  41fccf:	push   esp
  41fcd0:	mov    eax,DWORD PTR ds:0x66586c49
  41fcd6:	or     esp,DWORD PTR [esi]
  41fcd8:	pop    edx
  41fcd9:	pop    ds
  41fcda:	daa    
  41fcdb:	call   0xc27d:0x4728ad87
  41fce2:	inc    esi
  41fce3:	push   edi
  41fce4:	ror    DWORD PTR [ecx+ecx*8-0x31],1
  41fce8:	push   es
  41fce9:	xchg   esp,eax
  41fcea:	fldlg2 
  41fcec:	jo     0x41fcac
  41fcee:	xchg   edx,eax
  41fcef:	push   ebp
  41fcf0:	lods   eax,DWORD PTR ds:[esi]
  41fcf1:	or     ebx,eax
  41fcf3:	jno    0x41fcf3
  41fcf5:	les    eax,FWORD PTR [ecx+0xf]
  41fcf8:	mov    ds,edx
  41fcfa:	xchg   ecx,eax
  41fcfb:	(bad)  
  41fcfc:	les    ecx,FWORD PTR [edx-0x51]
  41fcff:	cs push ecx
  41fd01:	test   DWORD PTR [ecx],ecx
  41fd03:	dec    esp
  41fd04:	clc    
  41fd05:	retf   
  41fd06:	pop    ebx
  41fd07:	(bad)  
  41fd08:	mov    ch,0x83
  41fd0a:	repz jmp 0x41fcb5
  41fd0d:	mov    ah,0x9b
  41fd0f:	xchg   ebx,eax
  41fd10:	in     eax,0xe3
  41fd12:	push   esp
  41fd13:	or     edx,DWORD PTR [edx+edi*1-0xa85a42e]
  41fd1a:	xchg   edi,eax
  41fd1b:	repz pop ecx
  41fd1d:	xchg   ecx,eax
  41fd1e:	mov    ds:0x497d5141,eax
  41fd23:	xlat   BYTE PTR ds:[ebx]
  41fd24:	and    ebp,0x1d
  41fd27:	or     al,0x18
  41fd29:	dec    ebp
  41fd2a:	adc    ah,dh
  41fd2c:	jne    0x41fcdd
  41fd2e:	je     0x41fcc5
  41fd30:	loop   0x41fd05
  41fd32:	mov    ds:0xe4ff75d6,al
  41fd37:	pushf  
  41fd38:	(bad)  
  41fd39:	aad    0x79
  41fd3b:	pusha  
  41fd3c:	inc    eax
  41fd3d:	pop    es
  41fd3e:	dec    eax
  41fd3f:	xchg   ebx,eax
  41fd40:	dec    ecx
  41fd41:	mov    edi,0xfff9918f
  41fd46:	mov    eax,esi
  41fd48:	sub    ch,cl
  41fd4a:	push   esi
  41fd4b:	stos   DWORD PTR es:[edi],eax
  41fd4c:	lods   al,BYTE PTR ds:[esi]
  41fd4d:	fnstenv [esi+0x69301041]
  41fd53:	mov    bl,0x45
  41fd55:	pusha  
  41fd56:	cmc    
  41fd57:	sbb    edi,edi
  41fd59:	or     ebp,0xffffffcc
  41fd5c:	fild   DWORD PTR [ebp-0x30]
  41fd5f:	cli    
  41fd60:	and    DWORD PTR [esp+0x31],esp
  41fd64:	mov    ecx,DWORD PTR [edi+0x59586a8e]
  41fd6a:	retf   0xaf08
  41fd6d:	in     al,dx
  41fd6e:	es pop ds
  41fd70:	pop    ss
  41fd71:	fs hlt 
  41fd73:	jb     0x41fd87
  41fd75:	aas    
  41fd76:	in     eax,0x2f
  41fd78:	(bad)  
  41fd79:	mov    dl,0xde
  41fd7b:	std    
  41fd7c:	inc    edx
  41fd7d:	jae    0x41fd48
  41fd7f:	add    eax,0x851f9670
  41fd84:	inc    esi
  41fd85:	mov    eax,gs:0x567f91f9
  41fd8b:	mov    DWORD PTR [ecx-0x2f],esi
  41fd8e:	pushf  
  41fd8f:	add    cl,BYTE PTR [ebp-0x47]
  41fd92:	jne    0x41fdba
  41fd94:	pop    eax
  41fd95:	and    al,0xff
  41fd97:	mov    bh,0x25
  41fd99:	adc    eax,0xdf139884
  41fd9e:	jg     0x41fd94
  41fda0:	and    BYTE PTR [esi+esi*8],0x8c
  41fda4:	and    BYTE PTR ds:0xb3da9843,bl
  41fdaa:	dec    edi
  41fdab:	add    ecx,0x64
  41fdae:	lods   al,BYTE PTR ds:[esi]
  41fdaf:	push   edi
  41fdb0:	mov    es,edx
  41fdb2:	sub    bh,BYTE PTR [esi+ecx*4+0x20bce885]
  41fdb9:	pushf  
  41fdba:	inc    edi
  41fdbb:	add    al,0x4d
  41fdbd:	pop    ss
  41fdbe:	mov    edi,0x81bc6e34
  41fdc3:	adc    eax,0xaf3d4b16
  41fdc8:	mov    ecx,0xe22f03b2
  41fdcd:	in     eax,0xe7
  41fdcf:	jge    0x41fe18
  41fdd1:	jge    0x41fde3
  41fdd3:	stos   DWORD PTR es:[edi],eax
  41fdd4:	ficom  DWORD PTR [esi+0x45801156]
  41fdda:	sub    cl,BYTE PTR [edx+edi*4]
  41fddd:	and    edi,0x96fee49c
  41fde3:	xchg   esi,edi
  41fde5:	jb     0x41fd84
  41fde7:	xchg   cl,cl
  41fde9:	fld    DWORD PTR [eax+0x7]
  41fdec:	in     al,dx
  41fded:	test   al,0xc
  41fdef:	pop    ds
  41fdf0:	inc    ebp
  41fdf1:	clc    
  41fdf2:	inc    ebx
  41fdf3:	pop    ds
  41fdf4:	pop    ebx
  41fdf5:	jg     0x41fe29
  41fdf7:	dec    ebp
  41fdf8:	dec    esp
  41fdf9:	add    DWORD PTR [eax-0x62],ecx
  41fdfc:	cli    
  41fdfd:	test   DWORD PTR [ecx],esi
  41fdff:	dec    edx
  41fe00:	fcmove st,st(0)
  41fe02:	push   esi
  41fe03:	add    BYTE PTR ds:0x4f872263,bh
  41fe09:	pop    esp
  41fe0a:	jb     0x41fda9
  41fe0c:	cld    
  41fe0d:	xor    eax,0xd99346fe
  41fe12:	jae    0x41fe02
  41fe14:	lock sub eax,0xf24a0c36
  41fe1a:	mov    bh,0x78
  41fe1c:	(bad)  
  41fe1d:	stc    
  41fe1e:	in     eax,0x30
  41fe20:	(bad)  
  41fe21:	(bad)  
  41fe22:	out    dx,al
  41fe23:	jp     0x41fe08
  41fe25:	repnz ficomp DWORD PTR [esi-0xec983e8]
  41fe2d:	sub    BYTE PTR [edx+ebx*8-0x40],0xb9
  41fe32:	sub    DWORD PTR [esi],edx
  41fe34:	ja     0x8b10f66b
  41fe3a:	sbb    cl,BYTE PTR [ecx+ecx*2+0x67]
  41fe3e:	or     eax,0xc396e55a
  41fe43:	iret   
  41fe44:	ret    
  41fe45:	inc    esp
  41fe46:	icebp  
  41fe47:	loop   0x41fe6a
  41fe49:	hlt    
  41fe4a:	mov    edi,0x38a0234c
  41fe4f:	sbb    BYTE PTR [ebx+0x349e395b],dl
  41fe55:	fisubr DWORD PTR [ebp-0x461e842d]
  41fe5b:	out    dx,eax
  41fe5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe5d:	inc    ebp
  41fe5e:	(bad)  
  41fe60:	add    eax,0x4fb3f032
  41fe65:	out    dx,al
  41fe66:	retf   0xb19f
  41fe69:	cwde   
  41fe6a:	xchg   BYTE PTR [ecx+ecx*2-0x6f],dl
  41fe6e:	icebp  
  41fe6f:	xor    DWORD PTR [ecx],esp
  41fe71:	scas   al,BYTE PTR es:[edi]
  41fe72:	test   eax,0x8060f2dd
  41fe77:	inc    edx
  41fe78:	loop   0x41fe90
  41fe7a:	hlt    
  41fe7b:	mov    esi,0x349ced02
  41fe80:	ja     0x41fe0e
  41fe82:	or     esi,DWORD PTR [esi]
  41fe84:	std    
  41fe85:	mov    dl,0xb9
  41fe87:	add    al,0x12
  41fe89:	js     0x41fefc
  41fe8b:	xchg   ebp,eax
  41fe8c:	pop    edi
  41fe8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe8e:	inc    eax
  41fe8f:	test   al,0xf0
  41fe91:	sbb    cl,cl
  41fe93:	mov    WORD PTR ds:0x2fb3990d,?
  41fe99:	pop    ebp
  41fe9a:	dec    ebp
  41fe9b:	fisttp WORD PTR [edx-0x70]
  41fe9e:	ja     0x41fe91
  41fea0:	push   0xffffffa4
  41fea2:	jl     0x41ff10
  41fea4:	mov    bl,0x65
  41fea6:	lea    eax,[esi]
  41fea8:	sub    BYTE PTR [eax-0x7be2997d],cl
  41feae:	scas   eax,DWORD PTR es:[edi]
  41feaf:	(bad)  
  41feb0:	fwait
  41feb1:	xor    ebp,edi
  41feb3:	(bad)  [ebx+edx*8+0x1fc55c92]
  41feba:	pop    ds
  41febb:	push   si
  41febd:	dec    edx
  41febe:	pop    es
  41febf:	ins    BYTE PTR es:[edi],dx
  41fec0:	test   DWORD PTR [eax-0x40],0x182ca437
  41fec7:	mov    ah,0x72
  41fec9:	adc    BYTE PTR [edx-0x1564c3d3],bh
  41fecf:	(bad)
  41fed2:	nop
  41fed3:	leave  
  41fed4:	sar    BYTE PTR [ebp-0x2e],1
  41fed7:	pop    ebx
  41fed8:	xchg   edx,eax
  41fed9:	sub    edi,edi
  41fedb:	scas   eax,DWORD PTR es:[edi]
  41fedc:	push   esi
  41fedd:	retf   
  41fede:	(bad)  
  41fedf:	dec    edx
  41fee0:	loope  0x41fee3
  41fee2:	add    ah,BYTE PTR [esi+0x4aa4471c]
  41fee8:	cmp    al,0xf2
  41feea:	sub    al,0xb3
  41feec:	fist   WORD PTR [edi-0x22]
  41feef:	rol    BYTE PTR [ebx-0x621f5765],1
  41fef5:	and    DWORD PTR [edx+0x31899fa8],ebp
  41fefb:	jo     0x41ff54
  41fefd:	jae    0x41feb0
  41feff:	dec    edx
  41ff00:	ss add eax,0x63f5e9c5
  41ff06:	jp     0x41ff02
  41ff08:	adc    cl,bh
  41ff0a:	int3   
  41ff0b:	mov    dl,0x52
  41ff0d:	loope  0x41ff17
  41ff0f:	sbb    ebx,DWORD PTR [edx-0x41a5cce]
  41ff15:	jb     0x41ff1d
  41ff17:	mov    al,ds:0x1a49e81a
  41ff1c:	mov    bh,0x80
  41ff1e:	or     cl,BYTE PTR ds:0x41695c7c
  41ff24:	mov    ds:0x761b70e8,al
  41ff29:	(bad)  [ecx-0x4a46fd2c]
  41ff2f:	mov    ebp,0xfcf7dbd0
  41ff34:	imul   ebp,DWORD PTR [eax],0xffffffc0
  41ff37:	clc    
  41ff38:	imul   eax,DWORD PTR [edi-0x4d],0x66f38ae
  41ff3f:	and    eax,DWORD PTR [ecx+ecx*4+0x45]
  41ff43:	hlt    
  41ff44:	add    DWORD PTR ds:0x42a18f,edi
  41ff4a:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  41ff51:	dec    DWORD PTR ds:0x42a193
  41ff57:	mov    eax,DWORD PTR [ebp-0x1c]
  41ff5a:	mov    ecx,DWORD PTR ds:0x42a207
  41ff60:	mov    ecx,DWORD PTR [ecx]
  41ff62:	xor    DWORD PTR ds:0x42a173,ecx
  41ff68:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ff6b:	and    DWORD PTR ds:0x42a173,0x0
  41ff75:	mov    edi,DWORD PTR ds:0x42a173
  41ff7b:	inc    edi
  41ff7c:	mov    DWORD PTR ds:0x42a173,edi
  41ff82:	cmp    DWORD PTR ds:0x42a173,0x16
  41ff89:	jb     0x41ffb1
  41ff8f:	jmp    0x41ffa4
  41ff94:	push   0x372f
  41ff99:	push   0x5fe0
  41ff9e:	call   DWORD PTR ds:0x42a2c7
  41ffa4:	cmp    DWORD PTR ds:0x42a173,0x14
  41ffab:	jb     0x41ff75
  41ffb1:	sub    eax,ecx
  41ffb3:	mov    DWORD PTR [ebp-0x1c],eax
  41ffb6:	xor    ecx,ecx
  41ffb8:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  41ffbf:	sub    ecx,DWORD PTR ds:0x42a133
  41ffc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ffc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41ffcb:	and    DWORD PTR ds:0x42a1af,0x0
  41ffd5:	jmp    0x41ffe9
  41ffda:	xor    edi,edi
  41ffdc:	add    edi,DWORD PTR ds:0x42a1af
  41ffe2:	inc    edi
  41ffe3:	mov    DWORD PTR ds:0x42a1af,edi
  41ffe9:	cmp    DWORD PTR ds:0x42a1af,0x1b
  41fff0:	jae    0x42003a
  41fff6:	cmp    DWORD PTR ds:0x42a1af,0x7
  41fffd:	ja     0x42003a
  420003:	jmp    0x42001b
  420008:	push   0x160a
  42000d:	push   0x42a157
  420012:	push   DWORD PTR [ebp-0x18]
  420015:	call   DWORD PTR ds:0x42a2cf
  42001b:	cmp    DWORD PTR ds:0x42a1af,0x6
  420022:	jne    0x420035
  420028:	mov    edi,DWORD PTR ds:0x42a1af
  42002e:	inc    edi
  42002f:	mov    DWORD PTR ds:0x42a1af,edi
  420035:	jmp    0x41ffda
  42003a:	sub    eax,ecx
  42003c:	mov    DWORD PTR [ebp-0x20],eax
  42003f:	mov    eax,DWORD PTR [ebp-0x2c]
  420042:	mov    ecx,DWORD PTR [ebp-0x20]
  420045:	mov    esi,0x75108a8
  42004a:	xor    eax,esi
  42004c:	mov    edi,0x3272ef
  420051:	add    eax,edi
  420053:	or     eax,ecx
  420055:	mov    DWORD PTR [ebp-0x20],eax
  420058:	mov    eax,DWORD PTR [ebp-0x4]
  42005b:	mov    ecx,DWORD PTR [ebp-0x4]
  42005e:	sub    eax,ecx
  420060:	mov    DWORD PTR [ebp-0x4],eax
  420063:	or     DWORD PTR [ebp-0x4],0xf89c85be
  42006a:	mov    eax,DWORD PTR [ebp-0xc]
  42006d:	xor    eax,esi
  42006f:	add    eax,edi
  420071:	push   eax
  420072:	mov    eax,DWORD PTR [ebp-0x10]
  420075:	xor    eax,esi
  420077:	add    eax,edi
  420079:	push   eax
  42007a:	mov    eax,DWORD PTR [ebp-0x4]
  42007d:	xor    eax,esi
  42007f:	add    eax,edi
  420081:	push   eax
  420082:	lea    eax,[ebp-0x78]
  420085:	push   eax
  420086:	push   DWORD PTR [ebp-0x2c]
  420089:	push   DWORD PTR [ebp-0x28]
  42008c:	call   0x40b04c
  420091:	test   eax,eax
  420093:	je     0x4200c1
  420099:	lea    eax,[ebp-0x78]
  42009c:	push   eax
  42009d:	mov    eax,DWORD PTR [ebp-0x28]
  4200a0:	xor    eax,esi
  4200a2:	add    eax,edi
  4200a4:	push   eax
  4200a5:	mov    eax,DWORD PTR [ebp-0x24]
  4200a8:	add    eax,0xaa
  4200ad:	push   eax
  4200ae:	mov    eax,DWORD PTR [ebp-0x24]
  4200b1:	mov    eax,DWORD PTR [eax+0x198]
  4200b7:	push   DWORD PTR [eax]
  4200b9:	call   0x40a8fb
  4200be:	mov    DWORD PTR [ebp-0x14],eax
  4200c1:	mov    ecx,DWORD PTR ds:0x429527
  4200c7:	lea    eax,[ebp+0x4]
  4200ca:	mov    DWORD PTR [ecx*4+0x42951f],eax
  4200d1:	inc    DWORD PTR ds:0x429527
  4200d7:	mov    eax,DWORD PTR [ebp-0x14]
  4200da:	test   eax,eax
  4200dc:	je     0x420144
  4200e2:	lea    eax,[ebp-0x8]
  4200e5:	mov    DWORD PTR [ebp-0x34],eax
  4200e8:	mov    eax,DWORD PTR [ebp-0x30]
  4200eb:	mov    DWORD PTR [ebp-0x8],eax
  4200ee:	mov    eax,DWORD PTR [ebp-0x8]
  4200f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4200f4:	sub    eax,ecx
  4200f6:	mov    DWORD PTR [ebp-0x8],eax
  4200f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4200fc:	xor    ecx,esi
  4200fe:	mov    eax,0xffcd8d11
  420103:	sub    eax,ecx
  420105:	add    DWORD PTR [ebp-0x8],eax
  420108:	mov    eax,DWORD PTR [ebp-0x8]
  42010b:	mov    ecx,DWORD PTR [ebp-0x14]
  42010e:	mov    DWORD PTR [ecx+0x1],eax
  420111:	mov    eax,DWORD PTR [ebp-0x14]
  420114:	push   DWORD PTR [ebp-0x24]
  420117:	mov    BYTE PTR [eax],0xe9
  42011a:	mov    eax,ds:0x4292ab
  42011f:	push   DWORD PTR [eax]
  420121:	push   DWORD PTR ds:0x42950f
  420127:	push   DWORD PTR ds:0x4292b3
  42012d:	push   DWORD PTR ds:0x4294ef
  420133:	push   DWORD PTR ds:0x429f1b
  420139:	push   DWORD PTR [ebp-0x28]
  42013c:	push   DWORD PTR [ebp-0x2c]
  42013f:	mov    eax,DWORD PTR [ebp-0x14]
  420142:	call   eax
  420144:	pop    edi
  420145:	pop    esi
  420146:	leave  
  420147:	ret    
  420148:	push   ebp
  420149:	mov    ebp,esp
  42014b:	sub    esp,0x1c
  42014e:	add    DWORD PTR ds:0x42a133,edx
  420154:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  42015b:	lea    eax,[ebp+0x14]
  42015e:	mov    DWORD PTR [ebp-0x4],eax
  420161:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  420168:	lea    eax,[ebp-0xc]
  42016b:	and    DWORD PTR ds:0x42a163,0x0
  420175:	jmp    0x420187
  42017a:	mov    ecx,DWORD PTR ds:0x42a163
  420180:	inc    ecx
  420181:	mov    DWORD PTR ds:0x42a163,ecx
  420187:	cmp    DWORD PTR ds:0x42a163,0x1d
  42018e:	jae    0x4201b9
  420194:	cmp    DWORD PTR ds:0x42a163,0x1e
  42019b:	jge    0x4201b9
  4201a1:	jmp    0x4201b4
  4201a6:	push   0x42a157
  4201ab:	push   DWORD PTR [ebp-0x28]
  4201ae:	call   DWORD PTR ds:0x42a2d3
  4201b4:	jmp    0x42017a
  4201b9:	mov    DWORD PTR [ebp-0x14],eax
  4201bc:	xor    ecx,ecx
  4201be:	or     ecx,DWORD PTR ds:0x42a1b7
  4201c4:	and    ecx,DWORD PTR ds:0x42a1ab
  4201ca:	mov    DWORD PTR ds:0x42a1b7,ecx
  4201d0:	mov    eax,DWORD PTR [ebp-0xc]
  4201d3:	sbb    ecx,edx
  4201d5:	mov    edx,DWORD PTR [ebp-0x14]
  4201d8:	mov    ecx,0x75108a8
  4201dd:	add    DWORD PTR ds:0x42a1d3,0x42a18f
  4201e7:	xor    eax,ecx
  4201e9:	sbb    DWORD PTR ds:0x42a1bb,0x42a13f
  4201f3:	add    eax,0x3272ef
  4201f8:	mov    DWORD PTR [edx],eax
  4201fa:	mov    DWORD PTR ds:0x42a16b,0x1a
  420204:	cmp    DWORD PTR ds:0x42a16b,0x0
  42020b:	je     0x420239
  420211:	cmp    DWORD PTR ds:0x42a16b,0x1c
  420218:	jge    0x420239
  42021e:	jmp    0x420229
  420223:	call   DWORD PTR ds:0x42a293
  420229:	mov    eax,ds:0x42a16b
  42022e:	dec    eax
  42022f:	mov    ds:0x42a16b,eax
  420234:	jmp    0x420204
  420239:	mov    eax,ds:0x4292a7
  42023e:	mov    edx,DWORD PTR [ebp-0x4]
  420241:	mov    eax,DWORD PTR [eax]
  420243:	mov    DWORD PTR ds:0x42a14b,0x12e2
  42024d:	add    eax,DWORD PTR [edx]
  42024f:	or     edx,0x7147
  420255:	push   esi
  420256:	mov    DWORD PTR [ebp-0x8],eax
  420259:	and    DWORD PTR ds:0x42a15f,0x0
  420263:	jmp    0x420273
  420268:	mov    eax,ds:0x42a15f
  42026d:	inc    eax
  42026e:	mov    ds:0x42a15f,eax
  420273:	cmp    DWORD PTR ds:0x42a15f,0x15
  42027a:	jae    0x4202af
  420280:	cmp    DWORD PTR ds:0x42a15f,0x1f
  420287:	jge    0x4202af
  42028d:	jmp    0x4202aa
  420292:	push   DWORD PTR [ebp-0x18]
  420295:	push   0x7a6f
  42029a:	push   0x42906a
  42029f:	push   0x400000
  4202a4:	call   DWORD PTR ds:0x42a297
  4202aa:	jmp    0x420268
  4202af:	mov    edx,DWORD PTR [ebp+0x8]
  4202b2:	xor    eax,eax
  4202b4:	mov    eax,ds:0x42942f
  4202b9:	mov    eax,DWORD PTR [eax+0x198]
  4202bf:	sub    DWORD PTR ds:0x42a163,ebx
  4202c5:	xor    edx,ecx
  4202c7:	add    esi,0x2212
  4202cd:	mov    esi,0x3272ef
  4202d2:	add    edx,esi
  4202d4:	mov    DWORD PTR ds:0x42a18b,0x2e1b
  4202de:	cmp    DWORD PTR [eax],edx
  4202e0:	je     0x420301
  4202e6:	mov    DWORD PTR ds:0x42a18b,0x7bac
  4202f0:	mov    eax,DWORD PTR [eax]
  4202f2:	mov    DWORD PTR ds:0x42a167,0x79fc
  4202fc:	jmp    0x423953
  420301:	mov    eax,DWORD PTR [ebp+0x18]
  420304:	xor    eax,ecx
  420306:	and    DWORD PTR ds:0x42a14b,0x42a13b
  420310:	push   ebx
  420311:	and    DWORD PTR ds:0x42a193,0x0
  42031b:	jmp    0x42032f
  420320:	xor    ebx,ebx
  420322:	xor    ebx,DWORD PTR ds:0x42a193
  420328:	inc    ebx
  420329:	mov    DWORD PTR ds:0x42a193,ebx
  42032f:	cmp    DWORD PTR ds:0x42a193,0x1b
  420336:	jae    0x420359
  42033c:	cmp    DWORD PTR ds:0x42a193,0x26
  420343:	jg     0x420359
  420349:	jmp    0x420354
  42034e:	call   DWORD PTR ds:0x42a29b
  420354:	jmp    0x420320
  420359:	add    eax,esi
  42035b:	movzx  ebx,WORD PTR ds:0x42a1b3
  420362:	sub    DWORD PTR ds:0x42a1ab,ebx
  420368:	xor    edx,edx
  42036a:	mov    ebx,0xfabdbeda
  42036f:	xor    DWORD PTR ds:0x42a1b7,0x42a143
  420379:	add    eax,ebx
  42037b:	mov    DWORD PTR ds:0x42a17f,0x709e
  420385:	push   edi
  420386:	mov    edi,0x12e3
  42038b:	adc    edx,0xffffffff
  42038e:	mov    edi,0x8a29a13b
  420393:	xor    eax,edi
  420395:	xor    edx,0x0
  420398:	cmp    eax,0x70941fe1
  42039d:	mov    DWORD PTR ds:0x42a18f,0x2900
  4203a7:	jne    0x4203de
  4203ad:	mov    DWORD PTR ds:0x42a1bb,0x7794
  4203b7:	cmp    edx,0xffffffff
  4203ba:	mov    DWORD PTR ds:0x42a183,0x5653
  4203c4:	jne    0x4203de
  4203ca:	push   0xf89c85ba
  4203cf:	mov    DWORD PTR ds:0x42a13f,0xea6
  4203d9:	jmp    0x423940
  4203de:	sbb    eax,DWORD PTR ds:0x42a167
  4203e4:	mov    eax,DWORD PTR [ebp+0x18]
  4203e7:	xor    eax,ecx
  4203e9:	adc    DWORD PTR ds:0x42a1b7,0x42a183
  4203f3:	add    eax,esi
  4203f5:	xor    edx,edx
  4203f7:	dec    DWORD PTR ds:0x42a17b
  4203fd:	add    eax,ebx
  4203ff:	mov    DWORD PTR ds:0x42a133,0x604
  420409:	adc    edx,0xffffffff
  42040c:	adc    DWORD PTR ds:0x42a12f,0x42a18f
  420416:	xor    eax,edi
  420418:	xor    edx,0x0
  42041b:	mov    DWORD PTR ds:0x42a14b,0x4b6d
  420425:	cmp    eax,0x70941fe7
  42042a:	mov    DWORD PTR ds:0x42a18f,0x342
  420434:	jne    0x42392d
  42043a:	mov    DWORD PTR ds:0x42a19b,0x69f4
  420444:	cmp    edx,0xffffffff
  420447:	jne    0x42392d
  42044d:	and    edx,eax
  42044f:	mov    eax,DWORD PTR [ebp+0x10]
  420452:	inc    edx
  420453:	xor    eax,ecx
  420455:	movzx  edx,BYTE PTR ds:0x42a173
  42045c:	and    DWORD PTR ds:0x42a1bf,edx
  420462:	add    eax,esi
  420464:	sub    DWORD PTR ds:0x42a1d3,0x2e10
  42046e:	mov    DWORD PTR [ebp-0x18],eax
  420471:	xor    DWORD PTR ds:0x42a197,ebx
  420477:	mov    eax,DWORD PTR [ebp+0xc]
  42047a:	mov    edx,DWORD PTR ds:0x42a14f
  420480:	and    DWORD PTR ds:0x42a1bf,edx
  420486:	mov    edx,DWORD PTR [ebp-0x8]
  420489:	or     DWORD PTR ds:0x42a197,0x42a1bb
  420493:	xor    eax,ecx
  420495:	xor    DWORD PTR ds:0x42a173,0x2c59
  42049f:	add    eax,esi
  4204a1:	add    DWORD PTR ds:0x42a12b,0x1203
  4204ab:	imul   eax,DWORD PTR [edx]
  4204ae:	mov    edx,DWORD PTR [ebp+0x8]
  4204b1:	xor    edx,ecx
  4204b3:	add    edx,esi
  4204b5:	mov    DWORD PTR ds:0x42a157,0x15dc
  4204bf:	cmp    edx,eax
  4204c1:	mov    eax,DWORD PTR [ebp-0x4]
  4204c4:	mov    DWORD PTR ds:0x42a19b,0x25f0
  4204ce:	je     0x422919
  4204d4:	xor    DWORD PTR ds:0x42a1b3,edi
  4204da:	mov    edx,DWORD PTR [ebp-0x18]
  4204dd:	and    DWORD PTR ds:0x42a12b,0x42a167
  4204e7:	add    DWORD PTR [eax],edx
  4204e9:	mov    eax,DWORD PTR [ebp-0x4]
  4204ec:	sbb    edx,0x41ab
  4204f2:	mov    edx,DWORD PTR [ebp+0xc]
  4204f5:	or     DWORD PTR ds:0x42a167,0x42a133
  4204ff:	xor    edx,ecx
  420501:	and    DWORD PTR ds:0x42a133,0x1b9a
  42050b:	add    edx,esi
  42050d:	imul   edx,DWORD PTR [eax]
  420510:	mov    DWORD PTR ds:0x42a1c7,0x43e8
  42051a:	mov    DWORD PTR [eax],edx
  42051c:	mov    eax,DWORD PTR [ebp-0x4]
  42051f:	and    DWORD PTR ds:0x42a183,0x0
  420529:	mov    edx,DWORD PTR ds:0x42a183
  42052f:	inc    edx
  420530:	mov    DWORD PTR ds:0x42a183,edx
  420536:	cmp    DWORD PTR ds:0x42a183,0x8
  42053d:	jge    0x420589
  420543:	jmp    0x420560
  420548:	push   0x4b4a
  42054d:	push   DWORD PTR [ebp-0x20]
  420550:	push   0x429257
  420555:	push   0x400000
  42055a:	call   DWORD PTR ds:0x42a2a3
  420560:	cmp    DWORD PTR ds:0x42a183,0x7
  420567:	jne    0x42057c
  42056d:	xor    edx,edx
  42056f:	or     edx,DWORD PTR ds:0x42a183
  420575:	inc    edx
  420576:	mov    DWORD PTR ds:0x42a183,edx
  42057c:	cmp    DWORD PTR ds:0x42a183,0x1f
  420583:	jb     0x420529
  420589:	mov    DWORD PTR [ebp-0x1c],eax
  42058c:	not    DWORD PTR ds:0x42a197
  420592:	mov    eax,DWORD PTR [ebp+0x10]
  420595:	jmp    0x422908
  42059a:	and    eax,0x3cc0e30
  42059f:	les    ebx,FWORD PTR [ebx+0x426a7a97]
  4205a5:	imul   edx,DWORD PTR [edx],0x5d08c00a
  4205ab:	mov    dh,0x79
  4205ad:	jp     0x4205db
  4205af:	pop    edi
  4205b0:	jp     0x42062c
  4205b2:	gs dec eax
  4205b4:	mov    dl,0x58
  4205b6:	stos   BYTE PTR es:[edi],al
  4205b7:	and    dl,bh
  4205b9:	sub    DWORD PTR [esi+edx*2-0x29437ae1],0x22be3c67
  4205c4:	pop    edi
  4205c5:	hlt    
  4205c6:	out    dx,eax
  4205c7:	sbb    edx,DWORD PTR [esi-0x4c]
  4205ca:	pop    ds
  4205cb:	sbb    DWORD PTR [edx],ecx
  4205cd:	shr    DWORD PTR [esi-0x3b],0xab
  4205d1:	fadd   DWORD PTR [esi]
  4205d3:	add    BYTE PTR [eax+0x1cb6fea2],bl
  4205d9:	cmp    DWORD PTR [edi-0x5a5c8479],edi
  4205df:	test   BYTE PTR [eax],dh
  4205e1:	xchg   edx,eax
  4205e2:	push   0xcacf69c7
  4205e7:	push   ecx
  4205e8:	jb     0x4205bd
  4205ea:	scas   eax,DWORD PTR es:[edi]
  4205eb:	or     al,0x3c
  4205ed:	test   eax,0x37076a10
  4205f2:	loop   0x4205ff
  4205f4:	js     0x420642
  4205f6:	cmc    
  4205f7:	sub    DWORD PTR [ecx+ebx*4],ebx
  4205fa:	and    edx,DWORD PTR [eax+esi*2+0x58]
  4205fe:	push   0x4
  420600:	fild   DWORD PTR [ebp-0x35]
  420603:	inc    ecx
  420604:	leave  
  420605:	test   al,0xf5
  420607:	mov    ecx,0xbfb59783
  42060c:	sbb    ah,dh
  42060e:	adc    bh,BYTE PTR [edx+0x5861f205]
  420614:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  420616:	ja     0x4205d5
  420618:	pop    ebx
  420619:	mov    al,ds:0xf45ee6b6
  42061e:	mov    al,0x9
  420620:	stc    
  420621:	mov    edi,DWORD PTR [eax+0x47]
  420624:	pop    ds
  420625:	inc    edx
  420626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420627:	sub    eax,0xda85b82
  42062c:	cmp    ebx,DWORD PTR [edx+0x27]
  42062f:	xchg   ecx,eax
  420630:	dec    esp
  420631:	mov    esi,0xf24ccb13
  420636:	enter  0x1d13,0x9b
  42063a:	mov    cl,0x1
  42063c:	test   DWORD PTR [ecx+edx*1],ebx
  42063f:	inc    edx
  420640:	push   ecx
  420641:	lea    esi,[ebx-0x6d37ffc3]
  420647:	add    bh,cl
  420649:	pop    ss
  42064a:	bound  edi,QWORD PTR [edi+0x51789efc]
  420650:	add    al,0xb4
  420652:	sbb    al,0xcb
  420654:	mov    ds:0x7e8b7d49,al
  420659:	enter  0xa159,0xd4
  42065d:	fild   DWORD PTR [edx]
  42065f:	add    al,0xdf
  420661:	test   DWORD PTR [ebx],eax
  420663:	dec    esi
  420664:	cmp    DWORD PTR [ecx],edx
  420666:	push   ebx
  420667:	mov    ebx,0x98deb213
  42066c:	jbe    0x420695
  42066e:	test   BYTE PTR [ebx-0x3f478f91],ch
  420674:	inc    ebx
  420675:	add    BYTE PTR [ebp-0x5e9ae965],0xa1
  42067c:	(bad)  
  42067d:	sti    
  42067e:	jne    0x42069b
  420680:	adc    bh,BYTE PTR [eax-0x516508c3]
  420686:	and    cl,BYTE PTR [edx]
  420688:	push   ecx
  420689:	sub    eax,0x359c3205
  42068e:	test   al,0x2e
  420690:	test   BYTE PTR [ecx-0x5dc2813e],cl
  420696:	cmp    eax,0xdb029d48
  42069b:	pop    esi
  42069c:	lahf   
  42069d:	ss data16 out 0x65,al
  4206a1:	mov    WORD PTR [ebx],?
  4206a3:	ffreep st(1)
  4206a5:	scas   eax,DWORD PTR es:[edi]
  4206a6:	dec    edi
  4206a7:	ret    0xad2a
  4206aa:	call   0xa002:0x5f9c8e96
  4206b1:	daa    
  4206b2:	(bad)  
  4206b3:	dec    ebp
  4206b4:	mov    edi,0x22b8228
  4206b9:	and    esp,DWORD PTR [edx+0x12]
  4206bc:	lods   al,BYTE PTR ds:[esi]
  4206bd:	lods   al,BYTE PTR ds:[esi]
  4206be:	loopne 0x42072d
  4206c0:	mov    esp,DWORD PTR [edi+0xf129950]
  4206c6:	cmp    al,BYTE PTR [edx+0x71]
  4206c9:	outs   dx,BYTE PTR ds:[esi]
  4206ca:	outs   dx,BYTE PTR ds:[esi]
  4206cb:	xchg   ebp,eax
  4206cc:	mul    BYTE PTR [eax-0x7d69068c]
  4206d2:	std    
  4206d3:	xchg   esp,eax
  4206d4:	add    dh,cl
  4206d6:	fcom   DWORD PTR [esp+esi*1-0x58]
  4206da:	jae    0x4206f2
  4206dc:	lds    ebp,FWORD PTR [edi+0x5b]
  4206df:	and    dh,BYTE PTR [edx]
  4206e1:	mov    ch,0xeb
  4206e3:	les    esp,FWORD PTR [ebp+0x2d34320b]
  4206e9:	mov    ebx,0x724e18e7
  4206ee:	stos   BYTE PTR es:[edi],al
  4206ef:	sbb    ebp,DWORD PTR [ecx-0x41]
  4206f2:	shl    DWORD PTR [edi-0x477c56],0x93
  4206f9:	xchg   esp,eax
  4206fa:	jno    0x420713
  4206fc:	nop
  4206fd:	and    eax,0x89b0f439
  420702:	clc    
  420703:	(bad)  
  420704:	pop    esi
  420705:	sahf   
  420706:	cli    
  420707:	mov    al,0x29
  420709:	push   ss
  42070a:	hlt    
  42070b:	dec    ebp
  42070c:	jmp    0xcc400c70
  420711:	sub    dl,BYTE PTR ds:0xdba7f566
  420717:	aas    
  420718:	inc    eax
  420719:	push   esp
  42071a:	cmp    ah,BYTE PTR [ebx-0x7]
  42071d:	scas   eax,DWORD PTR es:[edi]
  42071e:	sub    BYTE PTR [esi],dl
  420720:	add    al,0xff
  420722:	mov    al,0x28
  420724:	and    ecx,esp
  420726:	fcomp  DWORD PTR [esi-0x3d0d9e43]
  42072c:	repz xchg ecx,eax
  42072e:	xchg   DWORD PTR [eax+0x10436570],edx
  420734:	into   
  420735:	outs   dx,BYTE PTR ds:[esi]
  420736:	pusha  
  420737:	stos   BYTE PTR es:[edi],al
  420738:	add    bl,0x14
  42073b:	pop    edi
  42073c:	retf   
  42073d:	mov    bl,0x72
  42073f:	mov    edi,0xef4f6381
  420744:	test   BYTE PTR [ebp-0x38],al
  420747:	adc    eax,0x6e60938b
  42074c:	jae    0x420768
  42074e:	inc    DWORD PTR [eax+eiz*1-0x18]
  420752:	int3   
  420753:	add    al,BYTE PTR ds:0xa4eb26b7
  420759:	fstp   QWORD PTR [ecx+0x228b230]
  42075f:	out    0x9a,eax
  420761:	ins    BYTE PTR es:[edi],dx
  420762:	push   eax
  420763:	(bad)  
  420765:	pusha  
  420766:	outs   dx,DWORD PTR ds:[esi]
  420767:	dec    ecx
  420768:	sbb    DWORD PTR [eax-0x47a80e4a],ebx
  42076e:	lods   eax,DWORD PTR ds:[esi]
  42076f:	mov    al,ds:0xbdaf6fff
  420774:	push   esp
  420775:	fs pop ss
  420777:	mov    cl,BYTE PTR [esi-0x66]
  42077a:	cmp    al,0xaf
  42077c:	mov    bl,0x99
  42077e:	mov    bh,0xd2
  420780:	push   ebp
  420781:	xor    eax,0x63f0b4bf
  420786:	mov    ?,WORD PTR es:[esi-0x7b39e809]
  42078d:	xor    bl,BYTE PTR [esi-0x288ec52c]
  420793:	je     0x420745
  420795:	dec    ebp
  420796:	ins    DWORD PTR es:[edi],dx
  420797:	fwait
  420798:	cld    
  420799:	es in  al,0x85
  42079c:	fcomp  DWORD PTR [esi-0x73]
  42079f:	pop    ds
  4207a0:	rol    edx,0xa1
  4207a3:	or     BYTE PTR [esi+eiz*2+0x448af358],dl
  4207aa:	dec    ebx
  4207ab:	cdq    
  4207ac:	jmp    0x4207fd
  4207ae:	pushf  
  4207af:	add    DWORD PTR [ecx+edx*4-0x45f88ef6],esi
  4207b6:	cmp    BYTE PTR [ebx-0x2c],bh
  4207b9:	sub    BYTE PTR [ecx+0x55],al
  4207bc:	dec    edi
  4207bd:	cld    
  4207be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207bf:	arpl   WORD PTR [eax-0x69985ca],bp
  4207c5:	retf   0x4718
  4207c8:	or     al,dl
  4207ca:	jl     0x4207da
  4207cc:	idiv   edi
  4207ce:	pop    ebx
  4207cf:	jae    0x420827
  4207d1:	stos   DWORD PTR es:[di],eax
  4207d3:	and    DWORD PTR [ecx],esp
  4207d5:	imul   ebx,DWORD PTR [edx+0x474a363a],0x1d
  4207dc:	add    al,0xc6
  4207de:	iret   
  4207df:	std    
  4207e0:	mov    BYTE PTR [esi],dl
  4207e2:	xor    al,BYTE PTR [edx]
  4207e4:	gs or  eax,0x9f4e3121
  4207ea:	xor    al,0x8d
  4207ec:	and    BYTE PTR [edi-0xe],bl
  4207ef:	outs   dx,DWORD PTR ds:[esi]
  4207f0:	xchg   ebp,eax
  4207f1:	or     ecx,edi
  4207f3:	cmp    eax,DWORD PTR [edx-0x3ab5db9e]
  4207f9:	aaa    
  4207fa:	jb     0x4207d8
  4207fc:	mov    esi,eax
  4207fe:	shl    BYTE PTR [ebx],cl
  420800:	inc    esp
  420801:	push   esp
  420802:	pop    ss
  420803:	retf   0x3727
  420806:	outs   dx,DWORD PTR ds:[esi]
  420807:	xchg   esi,eax
  420808:	xlat   BYTE PTR ds:[ebx]
  420809:	cli    
  42080a:	call   0xe521020c
  42080f:	ins    DWORD PTR es:[edi],dx
  420810:	pop    esi
  420811:	push   cs
  420812:	or     ebp,eax
  420814:	inc    esp
  420815:	(bad)  
  420816:	aaa    
  420817:	lock cs xchg edi,ecx
  42081b:	lahf   
  42081c:	push   esp
  42081d:	ficomp DWORD PTR [eax+0x656f37f9]
  420823:	adc    BYTE PTR [ebp+0x9df03b9],bh
  420829:	xchg   DWORD PTR [edi],eax
  42082b:	fs hlt 
  42082d:	sbb    eax,0x2b957a89
  420832:	into   
  420833:	rol    BYTE PTR fs:[ecx+0x19f56639],0x4c
  42083b:	jmp    0xe18d966e
  420840:	jmp    FWORD PTR [eax]
  420842:	clc    
  420843:	pop    eax
  420844:	(bad)  
  420845:	test   DWORD PTR [ebx],edx
  420847:	jmp    0xb59cf5b7
  42084c:	push   edi
  42084d:	sbb    BYTE PTR [ecx+0x40],cl
  420850:	in     eax,0x7f
  420852:	bound  ecx,QWORD PTR [ecx+eax*4]
  420855:	test   eax,0xb549b721
  42085a:	dec    eax
  42085b:	ja     0x420884
  42085d:	hlt    
  42085e:	pop    ebp
  42085f:	fidivr WORD PTR [esi-0x36]
  420862:	test   DWORD PTR [eax-0x63b5c89b],esp
  420868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420869:	mov    dl,0x68
  42086b:	sbb    al,0xab
  42086d:	mov    edx,0xc057df7b
  420872:	inc    ecx
  420873:	into   
  420874:	lahf   
  420875:	outs   dx,DWORD PTR ds:[esi]
  420876:	push   cs
  420877:	sub    eax,0x22b73c4a
  42087c:	retf   0x4e77
  42087f:	es dec esp
  420881:	xchg   ebx,eax
  420882:	mov    WORD PTR [esi+0x5c],?
  420885:	jae    0x42083a
  420887:	jmp    ebp
  420889:	out    dx,al
  42088a:	daa    
  42088b:	sbb    eax,0x42373d05
  420890:	rsm    
  420892:	dec    ebx
  420893:	xchg   edx,eax
  420894:	mov    ds:0x9871523,eax
  420899:	dec    ebx
  42089a:	mov    eax,0x50d0e2f1
  42089f:	xor    al,0xb1
  4208a1:	fst    QWORD PTR ds:0xc7fc15af
  4208a7:	pop    edi
  4208a8:	in     al,0x22
  4208aa:	call   0xae7bf330
  4208af:	adc    BYTE PTR [esi],bh
  4208b1:	or     eax,0xbbad517
  4208b6:	sub    eax,0x8194a665
  4208bb:	mov    esi,0xf6ded44c
  4208c0:	adc    al,0xb
  4208c2:	fs pop eax
  4208c4:	xor    BYTE PTR [edi-0x27],ch
  4208c7:	adc    al,0xf5
  4208c9:	popa   
  4208ca:	push   0x6f3c0fd8
  4208cf:	imul   edx,ecx,0x70fdebce
  4208d5:	sbb    DWORD PTR [eax-0xf7d8b11],esi
  4208db:	lock sub DWORD PTR [edx-0x73],edx
  4208df:	inc    esp
  4208e0:	ins    DWORD PTR es:[edi],dx
  4208e1:	pop    ebp
  4208e2:	xor    DWORD PTR [edi+0x5c],ebx
  4208e5:	out    dx,al
  4208e6:	ficom  DWORD PTR [ecx+0x24]
  4208e9:	push   ds
  4208ea:	ins    DWORD PTR es:[edi],dx
  4208eb:	mov    eax,ds:0xc894f4bf
  4208f0:	push   ebx
  4208f1:	(bad)  
  4208f2:	gs fwait
  4208f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208f5:	ret    0xac12
  4208f8:	sbb    cl,ch
  4208fa:	hlt    
  4208fb:	pop    ss
  4208fc:	(bad)  
  4208fd:	cmp    DWORD PTR [ebx-0x74],esi
  420900:	sar    BYTE PTR [eax-0x74],0xb
  420904:	mov    ch,0x66
  420906:	and    al,0x10
  420908:	aaa    
  420909:	cwde   
  42090a:	dec    eax
  42090b:	xor    esi,ebx
  42090d:	sbb    eax,0x208804fb
  420912:	mov    cl,BYTE PTR [ebx-0x5b946f07]
  420918:	push   0x4bafed32
  42091d:	cmp    dh,BYTE PTR [edx+0x7081d901]
  420923:	push   eax
  420924:	mov    DWORD PTR [ecx+0x6195bad1],edi
  42092a:	shr    al,1
  42092c:	sbb    ah,BYTE PTR [ecx]
  42092e:	(bad)  
  42092f:	stc    
  420930:	pop    ds
  420931:	in     eax,0x5a
  420933:	xchg   ebp,eax
  420934:	shl    DWORD PTR [edi],cl
  420936:	ffree  st(2)
  420938:	repz fisttp DWORD PTR [edi]
  42093b:	in     al,0x71
  42093d:	test   al,0x23
  42093f:	lods   eax,DWORD PTR ds:[esi]
  420940:	daa    
  420941:	je     0x420952
  420943:	mov    ds:0x43540c68,eax
  420948:	push   ebx
  420949:	cmovne esi,DWORD PTR [edi+0x1e]
  42094d:	jnp    0x420989
  42094f:	jmp    0x4208f2
  420951:	ins    BYTE PTR es:[edi],dx
  420952:	ret    
  420953:	jcxz   0x4209bc
  420956:	out    dx,al
  420957:	jmp    0x5d967b97
  42095c:	sti    
  42095d:	cmp    bh,BYTE PTR [edx-0x7d22296]
  420963:	outs   dx,DWORD PTR ds:[esi]
  420964:	imul   ecx,DWORD PTR [ebx-0x66],0xffffffb5
  420968:	lds    ebp,FWORD PTR [ebp-0x544af6a8]
  42096e:	push   edx
  42096f:	stc    
  420970:	stos   BYTE PTR es:[edi],al
  420971:	push   ebx
  420972:	test   eax,0x25f66ee
  420977:	sbb    BYTE PTR [ebp-0x440aa44e],dh
  42097d:	mov    bl,BYTE PTR [ebx+0x4]
  420980:	pushf  
  420981:	ret    
  420982:	rcr    BYTE PTR [ecx+ecx*8-0x18956dc],cl
  420989:	retf   
  42098a:	ror    BYTE PTR [edx+ebp*1],cl
  42098d:	adc    eax,0x6eead423
  420992:	pop    esi
  420993:	aaa    
  420994:	cmc    
  420995:	ins    BYTE PTR es:[edi],dx
  420996:	jnp    0x4209e0
  420998:	pushf  
  420999:	sbb    BYTE PTR [ebp-0xd495b10],bh
  42099f:	xor    edi,DWORD PTR [edx+0x5c]
  4209a2:	ins    BYTE PTR es:[edi],dx
  4209a3:	nop
  4209a4:	(bad)  
  4209a5:	jmp    0xda90:0xb6a57a9f
  4209ac:	lahf   
  4209ad:	dec    ebx
  4209ae:	xlat   BYTE PTR ds:[ebx]
  4209af:	push   ebp
  4209b0:	adc    BYTE PTR [ebp-0x3a],ah
  4209b3:	mov    ah,0x51
  4209b5:	addr16 mov bp,0x7a7
  4209ba:	adc    BYTE PTR [edx+0x5fc0db64],cl
  4209c0:	sub    BYTE PTR [ecx+0x6c],0xd5
  4209c4:	out    dx,eax
  4209c5:	and    ebp,DWORD PTR [ebp+0x5b]
  4209c8:	dec    esi
  4209c9:	cmp    esp,DWORD PTR [ecx-0x71]
  4209cc:	add    BYTE PTR [ecx-0x7c],0x31
  4209d0:	inc    esp
  4209d1:	push   ebp
  4209d2:	es data16 cli 
  4209d5:	jne    0x420a08
  4209d7:	leave  
  4209d8:	stos   DWORD PTR es:[edi],eax
  4209d9:	jno    0x4209a4
  4209db:	ret    0xd68b
  4209de:	nop
  4209df:	cmp    al,0xc0
  4209e1:	mov    ebp,0x1cda962d
  4209e6:	inc    ebp
  4209e7:	test   edx,eax
  4209e9:	cmp    esi,DWORD PTR [eax]
  4209eb:	test   ch,0x5b
  4209ee:	pop    ebx
  4209ef:	ficom  DWORD PTR [edx]
  4209f1:	mov    cl,al
  4209f3:	inc    eax
  4209f4:	sbb    DWORD PTR [esi+0x43f21a39],edi
  4209fa:	cmp    al,0xba
  4209fc:	add    BYTE PTR [edx],dl
  4209fe:	mov    dh,0x19
  420a00:	(bad)  
  420a01:	and    DWORD PTR [edx+0x21],eax
  420a04:	jne    0x420a06
  420a06:	aam    0x3d
  420a08:	mov    edi,0x2072a6b6
  420a0d:	sbb    dl,BYTE PTR [edx*2+0x508bd473]
  420a14:	dec    edi
  420a15:	out    dx,eax
  420a16:	sub    ecx,DWORD PTR [ecx-0x4550eb30]
  420a1c:	daa    
  420a1d:	dec    ecx
  420a1e:	or     esi,DWORD PTR [ecx+0x33]
  420a21:	jle    0x420a11
  420a23:	js     0x4209a6
  420a25:	mov    ecx,0x9bcfe37
  420a2a:	gs cdq 
  420a2c:	cli    
  420a2d:	dec    esi
  420a2e:	inc    edi
  420a2f:	sub    al,0x26
  420a31:	lahf   
  420a32:	xchg   BYTE PTR [edi-0x478c330],cl
  420a38:	out    0x92,al
  420a3a:	push   ecx
  420a3b:	xchg   DWORD PTR [esi+0x6],ebp
  420a3e:	idiv   DWORD PTR [eax+0x4a]
  420a41:	sub    edx,0x3f912509
  420a47:	push   es
  420a48:	mov    WORD PTR [edi+0x41806980],ds
  420a4e:	jns    0x420a41
  420a50:	xchg   esp,eax
  420a51:	daa    
  420a52:	cmp    al,0x19
  420a54:	shr    DWORD PTR ss:[eax+0x1897fcd6],1
  420a5b:	mov    DWORD PTR [ebx],esp
  420a5d:	pop    ecx
  420a5e:	xchg   ebx,eax
  420a5f:	mov    bh,0x2f
  420a61:	sbb    cl,BYTE PTR [ecx-0x7757df3a]
  420a67:	xor    al,0xe0
  420a69:	pusha  
  420a6a:	mov    WORD PTR [ebp+0x191e70a0],ss
  420a70:	int3   
  420a71:	(bad)  
  420a72:	cs cmp cl,bh
  420a75:	shl    BYTE PTR [esi+0xf149cf6],1
  420a7b:	xchg   edx,eax
  420a7c:	mov    cl,0x31
  420a7e:	ins    DWORD PTR es:[edi],dx
  420a7f:	or     cl,cl
  420a81:	xchg   esp,eax
  420a82:	adc    BYTE PTR [edi],ch
  420a84:	push   esp
  420a85:	xchg   ebx,eax
  420a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a87:	mov    eax,ds:0xf3dcd447
  420a8c:	add    edi,DWORD PTR [ecx+0x732592a0]
  420a92:	cs push ebp
  420a94:	push   ebx
  420a95:	sub    DWORD PTR [esi+0x50],esi
  420a98:	das    
  420a99:	in     al,0x5
  420a9b:	dec    eax
  420a9c:	pop    ebx
  420a9d:	imul   BYTE PTR [ebp*1+0x73fc24cb]
  420aa4:	xchg   DWORD PTR [edi],esi
  420aa6:	cmp    BYTE PTR [ebx],al
  420aa8:	inc    edi
  420aa9:	cmc    
  420aaa:	add    eax,DWORD PTR [eax]
  420aac:	inc    ebp
  420aad:	in     eax,dx
  420aae:	out    0x93,eax
  420ab0:	or     esp,eax
  420ab2:	add    al,0xf4
  420ab4:	adc    bl,dh
  420ab6:	mov    eax,0x8628d5ea
  420abb:	adc    al,BYTE PTR [edx]
  420abd:	inc    ebx
  420abe:	push   ss
  420abf:	or     BYTE PTR [ebp+0x643d459a],dh
  420ac5:	call   0x8e46b0cf
  420aca:	stos   BYTE PTR es:[edi],al
  420acb:	bnd cs ret 0x6391
  420ad0:	xchg   ebx,eax
  420ad1:	cld    
  420ad2:	add    DWORD PTR ds:0xb9ac605f,esp
  420ad8:	push   edx
  420ad9:	cmp    al,0xa6
  420adb:	jmp    0xc27ca6ca
  420ae0:	jmp    0x9709:0xa64652d3
  420ae7:	mov    cs,WORD PTR [ebx+0xa]
  420aea:	js     0x420a8c
  420aec:	xchg   edx,eax
  420aed:	cwde   
  420aee:	sub    al,cl
  420af0:	and    dh,ch
  420af2:	leave  
  420af3:	cdq    
  420af4:	mov    ecx,0xcf236764
  420af9:	pop    ecx
  420afa:	into   
  420afb:	daa    
  420afc:	sub    dh,BYTE PTR [edi]
  420afe:	push   ebx
  420aff:	mov    ebp,DWORD PTR [eax]
  420b01:	aam    0xd1
  420b03:	sbb    DWORD PTR [ebp+0x35],edx
  420b06:	je     0x420b60
  420b08:	mov    ch,BYTE PTR [ecx-0x1f475aa7]
  420b0e:	imul   ebx,DWORD PTR [eax],0xf424a501
  420b14:	mov    DWORD PTR [ebx+edi*2+0x4b791028],ebp
  420b1b:	mov    bh,0x6
  420b1d:	sbb    cl,BYTE PTR [edi]
  420b1f:	rcr    ebp,cl
  420b21:	add    cl,BYTE PTR [edx+0x3a]
  420b24:	je     0x420ace
  420b26:	enter  0xff65,0xd4
  420b2a:	jae    0x420acf
  420b2c:	idiv   BYTE PTR [eax]
  420b2e:	push   esi
  420b2f:	xor    ebp,0xfc6a01c1
  420b35:	push   0xffffffa0
  420b37:	xchg   ecx,eax
  420b38:	ins    DWORD PTR es:[edi],dx
  420b39:	std    
  420b3a:	or     al,bl
  420b3c:	out    dx,al
  420b3d:	or     ah,bl
  420b3f:	cmp    edx,DWORD PTR gs:[ebx+0x2a]
  420b43:	adc    DWORD PTR [edx+ebp*8-0x6b],0x59
  420b48:	dec    eax
  420b49:	out    dx,al
  420b4a:	fisub  DWORD PTR [edx-0x4a]
  420b4d:	ins    BYTE PTR es:[edi],dx
  420b4e:	mov    al,0xbe
  420b50:	adc    al,0x26
  420b52:	add    DWORD PTR [ecx+0x26d7e67c],edi
  420b58:	push   ebx
  420b5a:	jo     0x420b9a
  420b5c:	fisub  DWORD PTR [eax]
  420b5e:	cmp    BYTE PTR [edx+0x50],bh
  420b61:	rcr    BYTE PTR [ebx-0x2e],cl
  420b64:	loop   0x420b96
  420b66:	pusha  
  420b67:	cmp    edi,DWORD PTR [edx-0x48]
  420b6a:	int    0x9a
  420b6c:	scas   eax,DWORD PTR es:[edi]
  420b6d:	in     eax,dx
  420b6e:	pop    edx
  420b6f:	retf   0x5234
  420b72:	aam    0xb5
  420b74:	inc    DWORD PTR [ebx-0x7aa483d2]
  420b7a:	int    0x4e
  420b7c:	inc    esp
  420b7d:	popf   
  420b7e:	aaa    
  420b7f:	adc    BYTE PTR [eax-0x80],ah
  420b82:	mov    ds,eax
  420b84:	push   ss
  420b85:	test   eax,0x96b3797e
  420b8a:	(bad)  
  420b8b:	jne    0x420b7e
  420b8d:	xor    BYTE PTR [esi],dh
  420b8f:	add    eax,0x9195a7d8
  420b94:	aad    0xe2
  420b96:	mov    dh,0xaf
  420b98:	cmp    eax,0x691b9991
  420b9d:	fwait
  420b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b9f:	retf   0x593e
  420ba2:	sar    BYTE PTR [edx-0x4917a6df],1
  420ba8:	mov    al,ds:0x90177ecc
  420bad:	jge    0x420c21
  420baf:	add    BYTE PTR [edi],dl
  420bb1:	ja     0x420bb7
  420bb3:	adc    DWORD PTR [ebx],edx
  420bb5:	int3   
  420bb6:	mov    cs,WORD PTR [ebx-0x6f8f7296]
  420bbc:	xor    al,0xdb
  420bbe:	in     eax,0xb
  420bc0:	(bad)  
  420bc1:	hlt    
  420bc2:	mov    ds:0x421da459,eax
  420bc7:	fstp   TBYTE PTR [ecx-0x224c9850]
  420bcd:	sar    DWORD PTR [ebp-0x10],1
  420bd0:	jne    0x420c39
  420bd2:	pop    esi
  420bd3:	mov    ds:0x479b793c,al
  420bd8:	push   ds
  420bd9:	jle    0x420bc9
  420bdb:	adc    eax,0x2366c787
  420be0:	popf   
  420be1:	dec    ebx
  420be2:	popf   
  420be3:	xchg   edi,eax
  420be4:	jp     0x420b97
  420be6:	lock sub al,0x59
  420be9:	cmp    ah,BYTE PTR [ecx-0x5e]
  420bec:	adc    al,0x6f
  420bee:	pop    ebx
  420bef:	push   es
  420bf0:	pop    eax
  420bf1:	daa    
  420bf2:	cli    
  420bf3:	push   ss
  420bf4:	xor    edx,DWORD PTR ds:0xe1fee859
  420bfa:	sub    DWORD PTR [esi+eax*8],edi
  420bfd:	pop    es
  420bfe:	jge    0x420be8
  420c00:	mov    esp,0x5e724d41
  420c05:	cmp    bl,BYTE PTR [esi+0x39]
  420c08:	inc    edx
  420c09:	repz aas 
  420c0b:	fdivr  QWORD PTR [ebx+ebp*1]
  420c0e:	push   0x77
  420c10:	jmp    0x9327f962
  420c15:	inc    eax
  420c16:	das    
  420c17:	cmp    dh,ch
  420c19:	repz inc edx
  420c1b:	cmp    al,0xc6
  420c1d:	mov    esp,0x4723925a
  420c22:	mov    edx,ss
  420c24:	sub    eax,0x56238c60
  420c29:	push   ebp
  420c2a:	mov    ch,0xa1
  420c2c:	(bad)  
  420c2d:	ror    edx,cl
  420c2f:	aam    0x13
  420c31:	fldl2e 
  420c33:	pop    eax
  420c34:	jmp    0x92aa:0x6299113f
  420c3b:	pandn  mm2,QWORD PTR [edi-0x26fe8ee1]
  420c42:	das    
  420c43:	dec    edi
  420c44:	rcl    BYTE PTR [ebx],0x6
  420c47:	lock rcr BYTE PTR [ebx+0x7],0x58
  420c4c:	push   cs
  420c4d:	add    BYTE PTR [esi+eiz*1-0x70],bh
  420c51:	and    edi,esi
  420c53:	adc    eax,0xacae803b
  420c58:	ret    
  420c59:	jae    0x420ca4
  420c5b:	inc    edx
  420c5c:	cmp    eax,ebp
  420c5e:	and    al,0xee
  420c60:	test   edi,ecx
  420c62:	mov    ecx,0x194600c3
  420c67:	repz add eax,0x53d6d290
  420c6d:	sbb    eax,0x7e1dc576
  420c72:	test   BYTE PTR [esi],0x47
  420c75:	pop    ss
  420c76:	fld    TBYTE PTR [ecx+0x46]
  420c79:	jae    0x420c91
  420c7b:	xchg   ebp,eax
  420c7c:	mov    ds:0x966f2d15,eax
  420c81:	out    0x28,eax
  420c83:	push   0x5fa0be23
  420c88:	mov    bl,0x0
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	scas   eax,DWORD PTR es:[edi]
  420c8d:	sub    BYTE PTR [esi-0x3d315498],dl
  420c93:	loopne 0x420c2f
  420c95:	and    ch,dh
  420c97:	sbb    BYTE PTR [edx+0x44],dh
  420c9a:	sbb    ebp,DWORD PTR ds:0xa4d55cdb
  420ca0:	call   0x392a36d7
  420ca5:	sbb    eax,0x3919c6b3
  420caa:	xlat   BYTE PTR ds:[ebx]
  420cab:	(bad)  
  420cac:	push   cs
  420cad:	retf   0x164d
  420cb0:	jmp    0x4b5e:0x1f2fe601
  420cb7:	or     DWORD PTR [edx],ebp
  420cb9:	cmp    al,0x46
  420cbb:	je     0x420cb0
  420cbd:	fsubp  st(4),st
  420cbf:	out    dx,eax
  420cc0:	jmp    0x420d1f
  420cc2:	clc    
  420cc3:	sar    DWORD PTR [edx],cl
  420cc5:	dec    esp
  420cc6:	adc    ebx,esp
  420cc8:	outs   dx,DWORD PTR ds:[esi]
  420cc9:	pop    esp
  420cca:	out    dx,eax
  420ccb:	pop    ecx
  420ccc:	mov    al,0xde
  420cce:	cdq    
  420ccf:	mov    cl,0x96
  420cd1:	pop    edx
  420cd2:	test   DWORD PTR [ebp+0x12],0x5a275101
  420cd9:	dec    edi
  420cda:	mov    bl,0x85
  420cdc:	mov    ds:0xc06ef77c,al
  420ce1:	outs   dx,BYTE PTR ds:[esi]
  420ce2:	arpl   WORD PTR [esp+ebx*4+0x39],di
  420ce6:	sub    eax,0x3ee01eb
  420ceb:	push   esp
  420cec:	cmp    ebp,DWORD PTR [ebx]
  420cee:	ds jb  0x420ca8
  420cf1:	imul   esp,eax,0x5e
  420cf4:	and    ecx,DWORD PTR [ecx-0x1a]
  420cf7:	int3   
  420cf8:	dec    esi
  420cf9:	mov    esp,0x772fe9bd
  420cfe:	sub    BYTE PTR [edx-0x67df6d10],cl
  420d04:	test   ebx,0x105b3572
  420d0a:	fsubr  QWORD PTR [ebp-0x3f]
  420d0d:	adc    ah,BYTE PTR [edi-0x5b]
  420d10:	jnp    0x420c97
  420d12:	inc    edx
  420d13:	jnp    0x420ccd
  420d15:	cdq    
  420d16:	fdivrp st(1),st
  420d18:	jnp    0x420d64
  420d1a:	(bad)  
  420d1b:	dec    esp
  420d1c:	fisttp QWORD PTR [eax+0xc7e79aa]
  420d22:	in     eax,0xc4
  420d24:	or     bh,ch
  420d26:	jg     0x420cc1
  420d28:	bound  esi,QWORD PTR [esi-0x7d]
  420d2b:	mov    DWORD PTR [ecx],eax
  420d2d:	mov    al,ds:0xa29d6cd5
  420d32:	dec    ebx
  420d33:	sbb    ecx,DWORD PTR [edi-0x744d03c]
  420d39:	xor    dh,bh
  420d3b:	xchg   esp,eax
  420d3c:	pushf  
  420d3d:	jnp    0x420d0a
  420d3f:	leave  
  420d40:	in     al,0xf9
  420d42:	pop    ebx
  420d43:	jnp    0x420d8d
  420d45:	out    0xd,al
  420d47:	call   ebx
  420d49:	sbb    eax,0x37278cb7
  420d4e:	ret    0x7162
  420d51:	sub    al,0xf5
  420d53:	mov    eax,0xce0e12dc
  420d58:	daa    
  420d59:	pop    ss
  420d5a:	into   
  420d5b:	xor    DWORD PTR [eax+0x43046552],eax
  420d61:	(bad)  
  420d62:	arpl   WORD PTR [edx+0x32],cx
  420d65:	cmp    dh,BYTE PTR [ebp+0x5c]
  420d68:	jle    0x420d9f
  420d6a:	sbb    BYTE PTR [edi+0x174f016a],dl
  420d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d71:	xchg   ecx,eax
  420d72:	mov    dl,0x80
  420d74:	adc    eax,0xa4809945
  420d79:	mov    ds:0x91de11c6,al
  420d7e:	mov    eax,ds:0x1566c3e0
  420d83:	pop    esi
  420d84:	mov    edx,0xb5ab5e84
  420d89:	mov    ds:0xbf17674,eax
  420d8e:	(bad)  [ebx]
  420d90:	ss iret 
  420d92:	aam    0x6f
  420d94:	(bad)  
  420d95:	mov    WORD PTR [edx],ss
  420d97:	inc    eax
  420d98:	sub    eax,DWORD PTR ss:[ebx+edi*4+0x73c651eb]
  420da0:	retf   
  420da1:	sub    eax,0x4cd5a5c
  420da6:	mov    WORD PTR [ebp-0x16],?
  420da9:	pop    ds
  420daa:	jle    0x420de5
  420dac:	sub    BYTE PTR [ebx+0x61],dl
  420daf:	and    al,0x48
  420db1:	cmp    DWORD PTR [edi+0xe662cf9],esi
  420db7:	pop    edi
  420db8:	add    bl,bh
  420dba:	push   edx
  420dbb:	and    bh,dl
  420dbd:	push   esi
  420dbe:	popa   
  420dbf:	clc    
  420dc0:	popa   
  420dc1:	scas   eax,DWORD PTR es:[edi]
  420dc2:	mov    ah,0x30
  420dc4:	loop   0x420e16
  420dc6:	fcmovne st,st(1)
  420dc8:	fcomp  st(1)
  420dca:	in     eax,dx
  420dcb:	test   esi,ecx
  420dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dce:	mov    ebx,0xf4de8348
  420dd3:	adc    ebp,DWORD PTR [esi+ebp*1+0x4b]
  420dd7:	mov    al,ds:0xa3a9947c
  420ddc:	mov    gs:0xa6960341,al
  420de2:	or     BYTE PTR [eax],ch
  420de4:	mov    eax,ds:0xeb9a6323
  420de9:	push   edi
  420dea:	pushf  
  420deb:	push   ebp
  420dec:	jle    0x420e2f
  420dee:	or     al,0xc8
  420df0:	call   0x2e22:0x3d20e886
  420df7:	inc    esi
  420df8:	out    0x9c,al
  420dfa:	mov    eax,ds:0x9001b5b1
  420dff:	loop   0x420deb
  420e01:	arpl   sp,ax
  420e03:	in     al,dx
  420e04:	popf   
  420e05:	push   edi
  420e06:	jns    0x420e11
  420e08:	mov    ebx,0xe5b57cda
  420e0d:	pop    ebx
  420e0e:	hlt    
  420e0f:	lahf   
  420e10:	xchg   ecx,eax
  420e11:	mov    eax,ds:0xea88e919
  420e16:	dec    ecx
  420e17:	std    
  420e18:	scas   eax,DWORD PTR es:[edi]
  420e19:	jmp    0xc77b5685
  420e1e:	retf   0x4954
  420e21:	push   cs
  420e22:	adc    al,0x17
  420e24:	loopne 0x420e7c
  420e26:	retf   
  420e27:	fist   DWORD PTR [edx-0x2f]
  420e2a:	cmp    DWORD PTR [ebx],edx
  420e2c:	les    ebp,FWORD PTR [esi+0x648aa83c]
  420e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e33:	(bad)  
  420e34:	pop    edx
  420e35:	dec    ebp
  420e36:	arpl   WORD PTR [eax-0x554ac3ab],dx
  420e3c:	ss jle 0x420e77
  420e3f:	div    DWORD PTR [si]
  420e42:	mov    ?,WORD PTR [edx]
  420e44:	and    bl,al
  420e46:	out    dx,al
  420e47:	(bad)  
  420e48:	es aaa 
  420e4a:	mov    DWORD PTR [eax-0x5be23428],esp
  420e50:	call   0xbdab:0x62bc4c9b
  420e57:	mov    DWORD PTR [edx-0x50],edi
  420e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e5b:	retf   
  420e5c:	ror    BYTE PTR [ecx+0x35ae0ed7],cl
  420e62:	xor    ch,BYTE PTR [edi+0x79]
  420e65:	dec    edi
  420e66:	pusha  
  420e67:	adc    DWORD PTR [edx+0x41013269],edx
  420e6d:	push   esi
  420e6e:	fdivr  st,st(5)
  420e70:	mov    ss,WORD PTR [eax-0x120addc2]
  420e76:	push   esp
  420e77:	aaa    
  420e78:	sbb    DWORD PTR es:[ebp+eiz*2+0x4a751a38],ebp
  420e80:	cld    
  420e81:	or     ebp,DWORD PTR [edi-0x17]
  420e84:	ja     0x420f05
  420e86:	mov    edi,0x16e72ea9
  420e8b:	shl    dh,1
  420e8d:	sbb    dl,0x68
  420e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e91:	outs   dx,DWORD PTR ds:[si]
  420e93:	shl    DWORD PTR [eax-0x13efbaf2],1
  420e99:	icebp  
  420e9a:	inc    eax
  420e9b:	add    DWORD PTR [ecx+0x6a],0xffffffd9
  420e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ea0:	fistp  WORD PTR [esi]
  420ea2:	mov    edx,0xed10b695
  420ea7:	loope  0x420eb8
  420ea9:	dec    esi
  420eaa:	pop    edi
  420eab:	iret   
  420eac:	rol    DWORD PTR [ebp+edi*1-0x73b48470],1
  420eb3:	hlt    
  420eb4:	xchg   edi,eax
  420eb5:	inc    ecx
  420eb6:	xor    eax,0x70f3c8e5
  420ebb:	shr    DWORD PTR [edx+0x24c4d3d3],1
  420ec1:	clc    
  420ec2:	xlat   BYTE PTR ds:[ebx]
  420ec3:	stc    
  420ec4:	inc    edi
  420ec5:	scas   eax,DWORD PTR es:[edi]
  420ec6:	loop   0x420f15
  420ec8:	xchg   DWORD PTR [ecx+eiz*4+0x3e3fb0a7],esi
  420ecf:	adc    eax,0x7d17f16f
  420ed4:	add    al,0xc1
  420ed6:	xor    ch,dl
  420ed8:	inc    eax
  420ed9:	xchg   edx,eax
  420eda:	sti    
  420edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420edc:	sahf   
  420edd:	mov    edi,0xc1f8f96b
  420ee2:	sbb    al,0xa6
  420ee4:	imul   esp,DWORD PTR [eax+0x29484ea9],0x498c3fe
  420eee:	adc    BYTE PTR [edx+0x5d],dl
  420ef1:	jg     0x420f20
  420ef3:	cmp    esp,DWORD PTR [ebx-0x6c]
  420ef6:	lds    edi,FWORD PTR [edx+0x52]
  420ef9:	or     al,bl
  420efb:	mov    BYTE PTR [ebx-0x45],al
  420efe:	(bad)  
  420eff:	xor    eax,0x90915e33
  420f04:	test   DWORD PTR [ebx+0x130c91a9],ecx
  420f0a:	out    dx,al
  420f0b:	push   0x3
  420f0d:	in     al,0x7a
  420f0f:	fist   DWORD PTR [edi]
  420f11:	and    ebx,DWORD PTR [ecx+0x48ddfc3c]
  420f17:	int3   
  420f18:	jne    0x420ef7
  420f1a:	adc    BYTE PTR gs:[edi+edi*8],bl
  420f1e:	sar    edx,0xfe
  420f21:	dec    ecx
  420f22:	data16 ffree st(7)
  420f25:	xor    DWORD PTR [ebx],ecx
  420f27:	dec    edx
  420f28:	outs   dx,DWORD PTR ds:[esi]
  420f29:	jne    0x420f4c
  420f2b:	dec    eax
  420f2c:	pop    esp
  420f2d:	push   esp
  420f2e:	imul   DWORD PTR [ecx]
  420f30:	pop    esp
  420f31:	cmp    DWORD PTR [eax-0x4d6eca5],ebx
  420f37:	xchg   ecx,eax
  420f38:	cmp    al,0xc5
  420f3a:	jbe    0x420ec5
  420f3c:	add    al,0x2d
  420f3f:	jno    0x420f33
  420f41:	sub    dl,dl
  420f43:	or     ecx,DWORD PTR [edi-0x14]
  420f46:	cmp    BYTE PTR [edx],dl
  420f48:	dec    ebp
  420f49:	mov    WORD PTR [esi],?
  420f4b:	push   edi
  420f4c:	and    al,0xae
  420f4e:	jae    0x420f6e
  420f50:	and    BYTE PTR [ebx-0x31],bh
  420f53:	push   ds
  420f54:	pop    ss
  420f55:	sub    dh,al
  420f57:	or     ecx,ecx
  420f59:	cmp    bh,BYTE PTR [ecx+0x2d]
  420f5c:	dec    DWORD PTR [ebx+0x131435a9]
  420f62:	pop    es
  420f63:	and    DWORD PTR [edx-0x8e5ba42],0x482471bc
  420f6d:	xor    esp,DWORD PTR ds:0xe77c2c5
  420f73:	in     al,0x22
  420f75:	outs   dx,DWORD PTR ds:[esi]
  420f76:	ds inc ebx
  420f78:	test   DWORD PTR [edi-0x6],edi
  420f7b:	jg     0x420f87
  420f7d:	pop    es
  420f7e:	jo     0x420f7d
  420f80:	pop    esp
  420f81:	jmp    0x420f05
  420f83:	pop    ebp
  420f84:	cmp    eax,0xe990d57
  420f89:	or     DWORD PTR [edx-0x1ac0062d],ebp
  420f8f:	pop    ebp
  420f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f91:	dec    esi
  420f92:	jae    0x42100e
  420f94:	mov    cl,0x9
  420f96:	xor    edx,DWORD PTR [ecx]
  420f98:	jge    0x420fab
  420f9a:	inc    esp
  420f9b:	shr    BYTE PTR [edi-0x17],0xbb
  420f9f:	loop   0x420f46
  420fa1:	shl    DWORD PTR fs:[edi+esi*1],0xc6
  420fa6:	repnz daa 
  420fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fa9:	sbb    al,0x97
  420fab:	sub    ebx,DWORD PTR [ebx+0x786b6ef5]
  420fb1:	frstor [edx+0x62]
  420fb4:	fucomp st(2)
  420fb6:	in     eax,0xfb
  420fb8:	inc    edx
  420fb9:	mov    ds:0x3962040e,eax
  420fbe:	retf   
  420fbf:	cli    
  420fc0:	mov    WORD PTR [ebx+0x42],gs
  420fc3:	inc    ebp
  420fc4:	push   ss
  420fc5:	cli    
  420fc6:	sbb    al,0xc8
  420fc8:	dec    ecx
  420fc9:	aaa    
  420fca:	gs popfw 
  420fcd:	cwde   
  420fce:	aam    0xfd
  420fd0:	mov    al,BYTE PTR cs:[ebx-0x13000d54]
  420fd7:	mov    dl,0x7e
  420fd9:	lahf   
  420fda:	pop    edi
  420fdb:	sub    BYTE PTR [edi],dh
  420fdd:	and    ecx,DWORD PTR [edx+edx*2+0x63c6921b]
  420fe4:	xor    edx,edx
  420fe6:	enter  0xfabe,0xb2
  420fea:	shl    BYTE PTR [ebx],0xb7
  420fed:	pop    ebx
  420fee:	jo     0x420fef
  420ff0:	cwde   
  420ff1:	xchg   ecx,eax
  420ff2:	sar    ah,0x5d
  420ff5:	dec    ebx
  420ff6:	int    0xff
  420ff8:	sub    bl,BYTE PTR [eax+0x68]
  420ffb:	mov    ch,BYTE PTR [ecx-0x3c46d096]
  421001:	lea    eax,[ecx+ebp*8-0x70]
  421005:	lea    ecx,[ebx-0x5c]
  421008:	adc    al,0x2a
  42100a:	popa   
  42100b:	sub    esp,DWORD PTR [ecx-0x3f]
  42100e:	lds    edi,FWORD PTR cs:0x3ddf480f
  421015:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  421017:	mov    ebp,0xdc58f58
  42101c:	or     eax,0xb0139eaa
  421021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421022:	push   ss
  421023:	push   0x34058ca2
  421028:	dec    ebp
  421029:	inc    ebx
  42102a:	push   ss
  42102b:	dec    edx
  42102c:	hlt    
  42102d:	into   
  42102e:	mov    bl,0xd9
  421030:	jmp    0x65fb:0x896b28c7
  421037:	jmp    0x421043
  421039:	adc    esi,DWORD PTR [esi-0x7589a529]
  42103f:	xchg   BYTE PTR [edx-0x55],cl
  421042:	in     eax,dx
  421043:	pop    edx
  421044:	pop    ds
  421045:	inc    ebp
  421046:	lods   eax,DWORD PTR ds:[esi]
  421047:	push   cs
  421048:	jno    0x42101e
  42104a:	add    ecx,ebp
  42104c:	loope  0x420ffd
  42104e:	test   bl,dh
  421050:	mov    ebp,0xba7bab6a
  421055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421056:	adc    esi,DWORD PTR [edx-0x4ad5421e]
  42105c:	pop    esp
  42105d:	mov    cl,0x9a
  42105f:	jl     0x421001
  421061:	mov    ebp,0x4b85d374
  421066:	xchg   ebx,eax
  421067:	ins    BYTE PTR es:[edi],dx
  421068:	rcl    BYTE PTR [edx+0x3b1c72cc],cl
  42106e:	push   edi
  42106f:	loope  0x421066
  421071:	cmp    cl,ch
  421073:	pusha  
  421074:	or     DWORD PTR [esi],ecx
  421076:	popf   
  421077:	push   esi
  421078:	fisub  WORD PTR [ecx+ecx*8]
  42107b:	pop    ebp
  42107c:	cmp    DWORD PTR [edx-0x7f],edx
  42107f:	sbb    al,0xe9
  421081:	dec    esp
  421082:	addr16 ret 
  421084:	popa   
  421085:	mov    edi,0x29546eba
  42108a:	(bad)  
  42108b:	adc    DWORD PTR [ebx+edi*8+0x286cda2b],eax
  421092:	sub    eax,0xb9989bfe
  421097:	mov    esp,0xe399d4d8
  42109c:	call   0xeb1094fc
  4210a1:	inc    eax
  4210a2:	sbb    DWORD PTR [esi-0x36],esp
  4210a5:	jecxz  0x421029
  4210a7:	adc    edi,DWORD PTR [esi-0xa3af247]
  4210ad:	and    edx,DWORD PTR [ebp+0x9]
  4210b0:	add    al,0x9e
  4210b2:	sub    BYTE PTR [ecx-0x72a35ad5],ah
  4210b8:	push   eax
  4210b9:	inc    esp
  4210ba:	ja     0x4210f2
  4210bc:	cmp    al,0xf5
  4210be:	xchg   ecx,eax
  4210bf:	adc    al,0x41
  4210c1:	std    
  4210c2:	retf   
  4210c3:	xchg   BYTE PTR [ebx+eax*1-0x27],ah
  4210c7:	xchg   esi,eax
  4210c8:	inc    eax
  4210c9:	fstp   DWORD PTR [esi+0x55]
  4210cc:	cmc    
  4210cd:	cmp    ah,BYTE PTR [ebx+0x60]
  4210d0:	rol    BYTE PTR fs:[ecx+0x65d13d83],1
  4210d7:	pop    ss
  4210d8:	jl     0x4210d2
  4210da:	fst    st(7)
  4210dc:	sbb    eax,0xa30ca7d5
  4210e1:	push   cs
  4210e2:	add    BYTE PTR [ebp-0x7d5b8289],bl
  4210e8:	and    edx,DWORD PTR [ebp+0x1b]
  4210eb:	pop    esp
  4210ec:	in     al,0xc8
  4210ee:	cld    
  4210ef:	xchg   ebx,eax
  4210f0:	sti    
  4210f1:	push   edi
  4210f2:	xor    eax,DWORD PTR [ebx-0x6fa286f4]
  4210f8:	inc    esp
  4210f9:	adc    DWORD PTR [ebx-0x74],ebp
  4210fc:	(bad)  
  4210fd:	int    0x3c
  4210ff:	or     ecx,DWORD PTR [ebx*2+0x68711798]
  421106:	jne    0x4210d4
  421108:	daa    
  421109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42110a:	push   ebx
  42110b:	out    0x93,eax
  42110d:	xchg   ebp,eax
  42110e:	std    
  42110f:	xchg   ebx,eax
  421110:	inc    eax
  421111:	aaa    
  421112:	adc    DWORD PTR [edi],edx
  421114:	js     0x42115a
  421116:	js     0x421171
  421118:	or     al,0xc6
  42111a:	shl    ch,0x22
  42111d:	inc    eax
  42111e:	cmovbe ebx,ebx
  421121:	inc    ebp
  421122:	fidiv  WORD PTR [edi+0x4d]
  421125:	repnz xchg dl,ch
  421128:	mov    bl,0x9d
  42112a:	addr16 pop ds
  42112c:	inc    eax
  42112d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42112e:	ss mov bh,0x11
  421131:	jbe    0x4210fd
  421133:	sti    
  421134:	pushf  
  421135:	inc    ebp
  421136:	jbe    0x421173
  421138:	cs leave 
  42113a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42113b:	inc    edx
  42113c:	ficom  WORD PTR [ebp+0x14683ffd]
  421142:	lahf   
  421143:	push   esi
  421144:	iret   
  421145:	push   edx
  421146:	and    al,0x1a
  421148:	jnp    0x421119
  42114a:	cld    
  42114b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42114c:	xchg   DWORD PTR [eax+0x47],edx
  42114f:	imul   ecx,DWORD PTR [esi+0x55033a94],0x32c9825a
  421159:	or     DWORD PTR [edx+0x2431283f],esi
  42115f:	mov    ss,edi
  421161:	pop    ebp
  421162:	es dec ecx
  421164:	or     eax,0xf2fe3210
  421169:	stc    
  42116a:	adc    bl,BYTE PTR [ebx-0x28]
  42116d:	aas    
  42116e:	xlat   BYTE PTR ds:[ebx]
  42116f:	push   ebp
  421170:	sti    
  421171:	popa   
  421172:	xchg   ecx,eax
  421173:	call   0xf192:0x48d2ba24
  42117a:	cs jae 0x4211df
  42117d:	adc    ch,BYTE PTR [edx]
  42117f:	xchg   esp,eax
  421180:	int    0x3d
  421182:	and    BYTE PTR [esi],dh
  421184:	add    cl,BYTE PTR [ebp+ebx*2-0x2d924ece]
  42118b:	adc    DWORD PTR [ebx+ebp*4+0x301b1bcb],esi
  421192:	mov    bh,0x12
  421194:	cmp    di,dx
  421197:	popa   
  421198:	shl    BYTE PTR [ecx-0x4a05110b],cl
  42119e:	pop    es
  42119f:	(bad)  
  4211a0:	enter  0x1a34,0x5f
  4211a4:	ror    dh,cl
  4211a6:	fdiv   DWORD PTR [eax+0xe470a4b]
  4211ac:	cmp    al,0x17
  4211ae:	std    
  4211af:	jno    0x4211b8
  4211b1:	dec    ecx
  4211b2:	jne    0x421159
  4211b4:	das    
  4211b5:	xchg   ecx,eax
  4211b6:	ret    
  4211b7:	push   esp
  4211b8:	cld    
  4211b9:	scas   al,BYTE PTR es:[edi]
  4211ba:	mov    ch,0x44
  4211bc:	cwde   
  4211bd:	jle    0x421208
  4211bf:	sub    ch,BYTE PTR [esp+esi*4]
  4211c2:	pop    ebp
  4211c3:	ins    DWORD PTR es:[edi],dx
  4211c4:	lahf   
  4211c5:	jmp    0x87d77e9b
  4211ca:	mov    ds:0x95673f1a,eax
  4211cf:	mov    eax,ds:0xd6184cf1
  4211d4:	sbb    ebx,DWORD PTR [ebx+0x1e]
  4211d7:	adc    bl,BYTE PTR [edi-0x24154ef1]
  4211dd:	seta   BYTE PTR ds:0x2148915f
  4211e4:	push   cs
  4211e5:	xor    bh,0xfb
  4211e8:	shl    al,0x34
  4211eb:	dec    ebx
  4211ec:	rol    DWORD PTR [ecx-0x6587b228],1
  4211f2:	pop    ebx
  4211f3:	xlat   BYTE PTR ds:[ebx]
  4211f4:	adc    eax,0xb5055240
  4211f9:	in     eax,0x33
  4211fb:	dec    esp
  4211fc:	adc    ecx,DWORD PTR [esi]
  4211fe:	outs   dx,DWORD PTR ds:[esi]
  4211ff:	xchg   edi,eax
  421200:	mov    edx,0xbc0816c1
  421205:	jb     0x42120e
  421207:	xor    edx,ebx
  421209:	aam    0xab
  42120b:	stos   DWORD PTR es:[edi],eax
  42120c:	int    0xec
  42120e:	pop    esp
  42120f:	or     al,0x3
  421211:	sti    
  421212:	lds    ebp,FWORD PTR [esi+eiz*4]
  421215:	loope  0x4211f3
  421217:	cs retf 0x1673
  42121b:	and    dh,BYTE PTR [edx+ecx*4-0x7a]
  42121f:	retf   0x98a6
  421222:	dec    esi
  421223:	mov    al,0xdc
  421225:	sahf   
  421226:	inc    esp
  421227:	ss mov esi,0x8178f589
  42122d:	shl    DWORD PTR [ebx+0x746f8e3b],cl
  421233:	or     BYTE PTR [ecx-0xb],ch
  421236:	rcr    BYTE PTR [eax-0x6ab0a5e7],0xaa
  42123d:	adc    esi,DWORD PTR [ecx+0x348dc5a5]
  421243:	cli    
  421244:	ret    
  421245:	pop    edi
  421246:	lods   eax,DWORD PTR ds:[esi]
  421247:	push   0x31c53b8e
  42124c:	and    al,0x79
  42124e:	xchg   ebx,eax
  42124f:	dec    eax
  421250:	mov    ah,0x21
  421252:	sub    DWORD PTR [ebx-0x61],0xb5e67391
  421259:	into   
  42125a:	test   eax,0x5c44933f
  42125f:	jo     0x42121a
  421261:	jge    0x4212d9
  421263:	sub    ch,BYTE PTR [edi]
  421265:	mov    dl,BYTE PTR [eax-0xd74631f]
  42126b:	cld    
  42126c:	inc    ebx
  42126d:	push   ecx
  42126e:	jb     0x42128e
  421270:	and    ebx,edi
  421272:	jne    0x421275
  421274:	test   al,0x2
  421276:	jmp    0x7e4d:0x956149a
  42127d:	jl     0x4212da
  42127f:	mov    dl,0xd2
  421281:	jno    0x421272
  421283:	mov    dh,0xeb
  421285:	(bad)  
  421286:	ins    BYTE PTR es:[edi],dx
  421287:	jne    0x4212c5
  421289:	fadd   QWORD PTR [esi+ebp*4-0x104dcf0f]
  421290:	adc    BYTE PTR ds:0x21dcd6a,0x8d
  421297:	xor    al,0xad
  421299:	out    0x27,al
  42129b:	push   ebp
  42129c:	push   ss
  42129d:	or     ebx,esp
  42129f:	or     al,0xec
  4212a1:	adc    BYTE PTR ds:[ebx+0x4b],bl
  4212a5:	mov    dh,0xff
  4212a7:	adc    BYTE PTR [ebx+eiz*4],ch
  4212aa:	mov    edx,0x251893eb
  4212af:	fidivr DWORD PTR [ecx]
  4212b1:	inc    edx
  4212b2:	loop   0x42125e
  4212b4:	retf   
  4212b5:	mov    gs,esp
  4212b7:	mov    bl,0x90
  4212b9:	sub    edx,ebp
  4212bb:	sbb    eax,0xffffff8b
  4212be:	mov    BYTE PTR [eax-0x41],al
  4212c1:	and    al,0xc0
  4212c3:	aaa    
  4212c4:	daa    
  4212c5:	push   eax
  4212c6:	mov    eax,0x8bcdfcf5
  4212cb:	push   edx
  4212cc:	mov    cs,ecx
  4212ce:	cmp    dl,BYTE PTR [edx-0x7d]
  4212d1:	or     dh,ch
  4212d3:	push   es
  4212d4:	cmp    bh,BYTE PTR [eax]
  4212d6:	mov    ah,0xe5
  4212d8:	inc    DWORD PTR ds:0xbdd5a902
  4212de:	aad    0x86
  4212e0:	sub    BYTE PTR [edi+0x39],al
  4212e3:	(bad)  [edi+0x2]
  4212e6:	mov    DWORD PTR [ebp+0x61],edx
  4212e9:	ret    
  4212ea:	leave  
  4212eb:	test   ch,ch
  4212ed:	cmp    ebp,DWORD PTR [ecx-0x3d5c89d8]
  4212f3:	(bad)  
  4212f4:	clc    
  4212f5:	fist   DWORD PTR [ebp+0x6fb57a16]
  4212fb:	aam    0xbf
  4212fd:	push   0x8bdebb04
  421302:	mov    ecx,0xa7630816
  421307:	mov    ch,0xd8
  421309:	retf   
  42130a:	outs   dx,DWORD PTR ds:[esi]
  42130b:	pop    eax
  42130c:	or     ecx,DWORD PTR [ecx]
  42130e:	and    eax,0x6c7f1ea2
  421313:	into   
  421314:	jp     0x42129d
  421316:	sbb    al,0xab
  421318:	dec    esp
  421319:	xchg   edx,eax
  42131a:	mov    ds:0xb9c0e18,eax
  42131f:	sub    ch,BYTE PTR [edi+0x7c]
  421322:	mov    ?,WORD PTR [ebx+0x61]
  421325:	add    BYTE PTR [ebx],cl
  421327:	sti    
  421328:	or     eax,0x288ddde3
  42132d:	and    eax,0x988b2e96
  421332:	scas   al,BYTE PTR es:[edi]
  421333:	call   0x3778:0xba7d4920
  42133a:	push   eax
  42133b:	scas   al,BYTE PTR es:[edi]
  42133c:	dec    edi
  42133d:	sub    cl,bh
  42133f:	adc    eax,0x8331869
  421344:	xchg   BYTE PTR [esi],dl
  421346:	rcl    ah,1
  421348:	mov    al,0xb2
  42134a:	stos   BYTE PTR es:[edi],al
  42134b:	mov    edx,edx
  42134d:	xchg   edx,eax
  42134e:	ret    0xd0ef
  421351:	nop
  421352:	mov    esp,ss
  421354:	push   ecx
  421355:	mov    cl,0x97
  421357:	mov    edi,0xf115ff63
  42135c:	(bad)  
  42135d:	mov    bh,0xf7
  42135f:	cmp    ebx,ebp
  421361:	xor    DWORD PTR [eax],esp
  421363:	jae    0x42132a
  421365:	mov    eax,0xfd0597ed
  42136a:	mov    bh,0x4
  42136c:	mul    DWORD PTR [eax-0x3e23c796]
  421372:	into   
  421373:	add    eax,0x3ba6d1d3
  421378:	rcr    BYTE PTR [ebp+0x32c5488c],1
  42137e:	es dec edx
  421380:	adc    al,0x7e
  421382:	bound  edx,QWORD PTR [ecx]
  421384:	in     al,dx
  421385:	jmp    0xea81:0x90edd164
  42138c:	jmp    0x4213a1
  42138e:	push   edx
  42138f:	dec    DWORD PTR [edx]
  421391:	pop    ss
  421392:	mov    bh,0x74
  421394:	cmp    edx,DWORD PTR ds:0xa45df2e0
  42139a:	jbe    0x42131c
  42139c:	punpcklbw mm3,mm3
  42139f:	aaa    
  4213a0:	lock pop esp
  4213a2:	adc    DWORD PTR [ebx],ebx
  4213a4:	push   cs
  4213a5:	xchg   edi,eax
  4213a6:	xlat   BYTE PTR ds:[ebx]
  4213a7:	and    ebx,DWORD PTR ds:0xae8c46b9
  4213ad:	les    esp,FWORD PTR [esi-0x6]
  4213b0:	push   0xf
  4213b2:	xchg   esi,eax
  4213b3:	(bad)  
  4213b4:	icebp  
  4213b5:	fdivr  QWORD PTR [ebp-0x539db0bb]
  4213bb:	add    eax,0x7ad1fac7
  4213c0:	mov    bl,0xf9
  4213c2:	push   edi
  4213c3:	and    esp,DWORD PTR [ebp+0x2c]
  4213c6:	mov    bl,0x4c
  4213c8:	xor    ah,BYTE PTR [eax-0x51]
  4213cb:	dec    esi
  4213cc:	cld    
  4213cd:	cdq    
  4213ce:	mov    DWORD PTR [edi+0x3e3f8b40],0xb6305ee6
  4213d8:	cmp    edi,DWORD PTR ds:0xe07ac8e3
  4213de:	mov    WORD PTR [ebx],gs
  4213e0:	mov    edx,0xee11c741
  4213e5:	bound  eax,QWORD PTR [edx]
  4213e7:	cmc    
  4213e8:	cli    
  4213e9:	inc    edi
  4213ea:	sbb    ch,0xd0
  4213ed:	xchg   dl,ah
  4213ef:	imul   edx,DWORD PTR [eax],0x38eaef9a
  4213f5:	out    0x40,al
  4213f7:	rcl    BYTE PTR [eax],0xc9
  4213fa:	clc    
  4213fb:	jmp    0xca6c668f
  421400:	mov    bh,0xb
  421402:	mov    ah,0x64
  421404:	test   BYTE PTR es:[esi],ch
  421407:	sbb    al,0xc7
  42140a:	xor    eax,0xc27c0f36
  42140f:	pop    ebx
  421410:	lods   al,BYTE PTR ds:[esi]
  421411:	out    dx,eax
  421412:	outs   dx,DWORD PTR ds:[esi]
  421413:	add    bh,BYTE PTR [edi+ebx*8+0x64]
  421417:	in     al,dx
  421418:	inc    edi
  421419:	adc    al,BYTE PTR ds:0x8de23814
  42141f:	mov    ecx,DWORD PTR [edx+ebx*1+0x4e]
  421423:	cmc    
  421424:	add    eax,0x889a4be6
  421429:	sub    al,0x11
  42142b:	cs mov edx,0xb87b8879
  421431:	xchg   ecx,eax
  421432:	jo     0x42144c
  421434:	arpl   si,ax
  421436:	ror    dh,cl
  421438:	cwde   
  421439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42143a:	inc    eax
  42143b:	mov    al,0x87
  42143d:	mov    esp,0xf114fa8c
  421442:	mov    al,ds:0xf8161c92
  421447:	pop    ebx
  421448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421449:	mov    WORD PTR [esi-0x1c],?
  42144c:	adc    al,0xbe
  42144e:	(bad)  
  42144f:	xlat   BYTE PTR ds:[ebx]
  421450:	inc    ebx
  421451:	push   cs
  421452:	mov    al,0x80
  421454:	(bad)  
  421455:	out    0x3e,al
  421457:	(bad)  [edx+0x4e854d09]
  42145d:	or     DWORD PTR [edi+0x4e],ebp
  421460:	rol    DWORD PTR [ebx+eiz*2],cl
  421463:	cmp    esi,DWORD PTR [eax-0x27c4d22a]
  421469:	les    esi,FWORD PTR [ecx-0x4d]
  42146c:	shl    BYTE PTR [eax+0x56],0xe3
  421470:	jae    0x4213ff
  421472:	push   cs
  421473:	mov    edx,0xa931eddf
  421478:	pop    esi
  421479:	pop    ss
  42147a:	push   0x986931e3
  42147f:	mov    ah,0xd6
  421481:	frstor [edx+eax*8-0x37ce25ac]
  421488:	out    dx,eax
  421489:	pop    es
  42148a:	dec    edx
  42148b:	mov    ah,0xdc
  42148d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42148e:	and    BYTE PTR [esi],0x11
  421491:	or     eax,DWORD PTR ds:0xbd473502
  421497:	jns    0x4214e5
  421499:	inc    BYTE PTR [edi-0x31f521d6]
  42149f:	mov    ?,WORD PTR [ebx-0x66]
  4214a2:	cwde   
  4214a3:	out    dx,eax
  4214a4:	lods   al,BYTE PTR ds:[esi]
  4214a5:	repz and al,0x88
  4214a8:	add    DWORD PTR [edi+0x8],0x36aaa5f8
  4214af:	or     al,0x6b
  4214b1:	push   es
  4214b2:	not    ebx
  4214b4:	xchg   edx,eax
  4214b5:	int    0x5b
  4214b7:	inc    ebx
  4214b8:	lea    edx,[ebx]
  4214ba:	jg     0x421536
  4214bc:	inc    ecx
  4214bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214be:	pusha  
  4214bf:	retf   
  4214c0:	adc    eax,0x45d7ce92
  4214c5:	in     al,dx
  4214c6:	test   al,0x6
  4214c8:	adc    edx,DWORD PTR [edi-0x3c]
  4214cb:	inc    eax
  4214cc:	inc    esp
  4214cd:	out    dx,eax
  4214ce:	popf   
  4214cf:	jl     0x4214bd
  4214d1:	mov    cr5,esp
  4214d4:	test   eax,0x91a5576b
  4214d9:	sar    BYTE PTR [eax],cl
  4214db:	aam    0x76
  4214dd:	cwde   
  4214de:	cld    
  4214df:	repz adc esp,DWORD PTR [eax-0x28]
  4214e3:	jmp    0x49aa:0x4076a210
  4214ea:	jae    0x421529
  4214ec:	fs dec eax
  4214ee:	jo     0x4214e1
  4214f0:	mov    cl,0xe0
  4214f2:	(bad)  
  4214f3:	cmp    ebp,DWORD PTR [ebx+edi*2+0x78]
  4214f7:	adc    eax,0x14f50627
  4214fc:	sub    BYTE PTR [eax-0x36ba28df],dl
  421502:	adc    ah,al
  421504:	push   esi
  421505:	cli    
  421506:	mov    ebp,0xba565617
  42150b:	xchg   ebx,ebx
  42150d:	mov    edi,0xa586cef5
  421512:	ror    BYTE PTR [esi],1
  421514:	or     edx,DWORD PTR [edx-0x4935c9f7]
  42151a:	fs pop esi
  42151c:	sub    DWORD PTR [ebx+0x3f],esi
  42151f:	imul   esi,esi,0x38b6d18
  421525:	int3   
  421526:	xchg   ebp,eax
  421527:	stc    
  421528:	dec    esp
  421529:	sbb    eax,0x95b49975
  42152e:	and    DWORD PTR [ebx+ebx*8-0x7ebf122e],ebx
  421535:	lds    esi,FWORD PTR [ebx+ebx*4+0x47f14ffa]
  42153c:	in     al,dx
  42153d:	mov    DWORD PTR [ebp+0x7363afa1],esp
  421543:	cmp    eax,0x71006fcd
  421548:	outs   dx,BYTE PTR ds:[esi]
  421549:	adc    eax,0xc42632c4
  42154e:	lea    edi,[edx+0x1cca77d3]
  421554:	inc    edi
  421555:	ror    DWORD PTR [eax+0x7b],0x6d
  421559:	into   
  42155a:	shl    edx,cl
  42155c:	dec    ecx
  42155d:	js     0x421585
  42155f:	mov    ds:0x9c43fb0e,eax
  421564:	hlt    
  421565:	mov    ds:0xee538f3d,eax
  42156a:	fs stos BYTE PTR es:[edi],al
  42156c:	pop    edx
  42156d:	fld    TBYTE PTR [ebx-0x682fa1f]
  421573:	sbb    DWORD PTR [esi+0x4b],eax
  421576:	shl    BYTE PTR [esi+ecx*2+0x6177c3fb],0xab
  42157e:	mov    esi,0x5d98c963
  421583:	hlt    
  421584:	push   esp
  421585:	cmp    al,0xf6
  421587:	xchg   ebx,eax
  421588:	lds    ebp,FWORD PTR [ebp-0x2b]
  42158b:	and    edx,DWORD PTR [eax+esi*4+0x33]
  42158f:	adc    dh,BYTE PTR [edx+0x2c]
  421592:	scas   al,BYTE PTR es:[edi]
  421593:	loopne 0x42153a
  421595:	imul   esi,DWORD PTR [ebp+edx*1-0x4e],0x5a
  42159a:	and    dl,ah
  42159c:	xchg   ebx,eax
  42159d:	cmp    BYTE PTR [edx-0x270affea],bl
  4215a3:	int    0xda
  4215a5:	enter  0xa34b,0x40
  4215a9:	cmp    DWORD PTR [edx-0x1998229b],0x86fc7580
  4215b3:	aaa    
  4215b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215b5:	ss cmp eax,0x37f45128
  4215bb:	add    al,dh
  4215bd:	sub    ecx,DWORD PTR [edi]
  4215bf:	mov    esi,0x4513ae0e
  4215c4:	pop    ebp
  4215c5:	lods   eax,DWORD PTR ds:[esi]
  4215c6:	scas   eax,DWORD PTR es:[edi]
  4215c7:	loope  0x421600
  4215c9:	and    al,0xb4
  4215cb:	mov    ds:0xe33a644,eax
  4215d0:	adc    al,0xfa
  4215d2:	and    ebx,DWORD PTR [edx+0x3f2077ba]
  4215d8:	addr16 cmp al,0xc8
  4215db:	sbb    ch,dh
  4215dd:	push   edx
  4215de:	ins    DWORD PTR es:[edi],dx
  4215df:	or     eax,0x60543a65
  4215e4:	mov    ebp,0x522ccf97
  4215e9:	fisttp DWORD PTR [edx+0x50a22f90]
  4215ef:	mov    edx,0xf307b7dd
  4215f4:	add    BYTE PTR [edi],0x2f
  4215f7:	outs   dx,DWORD PTR ds:[esi]
  4215f8:	or     bl,BYTE PTR [ebp+0x1c]
  4215fb:	call   0xc77a:0x39013fb5
  421602:	mov    ebx,0x12443d00
  421607:	inc    esi
  421608:	sbb    DWORD PTR [edi+eax*2+0x26bd911a],esi
  42160f:	sahf   
  421610:	sbb    al,0x53
  421612:	pop    edx
  421613:	shl    BYTE PTR [eax+0x2a74f50d],0x95
  42161a:	dec    edi
  42161b:	sub    DWORD PTR [ebx+0x56b7bb14],ebx
  421621:	sbb    al,0x5b
  421623:	mov    al,ds:0xa060eb43
  421628:	mov    bl,0x6d
  42162a:	add    eax,0xc2edfc2f
  42162f:	xor    eax,0x605b6f40
  421634:	jmp    0x4215e5
  421636:	aam    0xc1
  421638:	pop    edx
  421639:	lods   eax,DWORD PTR ds:[esi]
  42163a:	xchg   esp,edx
  42163c:	jmp    0xc9d490e4
  421641:	mov    ebx,0xe1fb0f11
  421646:	js     0x421612
  421648:	push   ss
  421649:	cs repnz push esp
  42164c:	fadd   QWORD PTR [edx+esi*1+0x6f]
  421650:	cmc    
  421651:	outs   dx,BYTE PTR ds:[esi]
  421652:	loopne 0x421668
  421654:	mov    esp,0x9f01d867
  421659:	cmp    DWORD PTR [edx],ecx
  42165b:	pop    ebp
  42165c:	and    al,0x32
  42165e:	cmp    edi,esp
  421660:	and    al,cl
  421662:	push   es
  421663:	adc    dh,al
  421665:	lds    ebp,FWORD PTR [ecx]
  421667:	sub    BYTE PTR [eax+0x77],ch
  42166a:	mov    ch,0xa1
  42166c:	mov    cs,WORD PTR [edi]
  42166e:	pop    ecx
  42166f:	gs pop es
  421671:	retf   0x91b5
  421674:	cmp    DWORD PTR [esi+0x1d],0x7b
  421678:	test   BYTE PTR [edi+0x34],ah
  42167b:	popf   
  42167c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42167d:	mov    BYTE PTR [edi+ebp*1+0x48c07d9c],al
  421684:	test   BYTE PTR [eax-0x9929bf],al
  42168a:	and    BYTE PTR [ebx-0x5a],dh
  42168d:	mov    ds:0x2205df8d,eax
  421692:	out    dx,al
  421693:	lods   eax,DWORD PTR ds:[esi]
  421694:	mov    DWORD PTR [ebx-0x5],0xfc4d81a4
  42169b:	lock add edi,DWORD PTR [ecx+0x4acbcc7f]
  4216a2:	test   eax,0x59426b78
  4216a7:	sbb    bl,BYTE PTR [eax]
  4216a9:	mov    ds:0xfbb6ef8d,al
  4216ae:	std    
  4216af:	gs push esi
  4216b1:	inc    esp
  4216b2:	and    eax,0xb35da829
  4216b7:	pop    ebx
  4216b8:	cmp    BYTE PTR [edi+ecx*2-0x166c5c5e],0xeb
  4216c0:	fwait
  4216c1:	xchg   ecx,eax
  4216c2:	or     edx,DWORD PTR [edx-0x77]
  4216c5:	repnz leave 
  4216c7:	and    DWORD PTR [ebp-0x2d],edx
  4216ca:	pop    es
  4216cb:	ret    
  4216cc:	loopne 0x4216c0
  4216ce:	fistp  QWORD PTR [edx+0x202a783]
  4216d4:	cmp    al,0xb2
  4216d6:	dec    ecx
  4216d7:	xchg   ecx,eax
  4216d8:	inc    edx
  4216d9:	pop    ss
  4216da:	push   ebp
  4216db:	loope  0x42170e
  4216dd:	bound  ebp,QWORD PTR [esi-0x78]
  4216e0:	adc    eax,ecx
  4216e2:	jmp    0x4216ba
  4216e4:	or     al,0x8e
  4216e7:	pop    edx
  4216e8:	pop    edi
  4216e9:	ins    DWORD PTR es:[edi],dx
  4216ea:	fsubr  st(0),st
  4216ec:	mov    esi,0x351e424d
  4216f1:	hlt    
  4216f2:	cmp    eax,0x217b1a7c
  4216f7:	test   dl,ah
  4216f9:	adc    eax,0x9a8ec946
  4216fe:	mov    esi,0x76baf1d3
  421703:	mov    eax,0xd0a4ad5b
  421708:	mov    bl,0xe5
  42170a:	aas    
  42170b:	std    
  42170c:	int    0x5c
  42170e:	mov    ah,0x11
  421710:	out    0xdd,al
  421712:	fwait
  421713:	rol    BYTE PTR [edi+esi*8],cl
  421716:	add    al,0x28
  421718:	imul   edx,DWORD PTR [ecx+0x4981f4b6],0xffffff86
  42171f:	jno    0x421727
  421721:	aaa    
  421722:	push   ds
  421723:	jns    0x42176a
  421725:	or     bh,BYTE PTR [esi-0x150b5080]
  42172b:	test   DWORD PTR [ecx+0x26262f2f],0x7dc4d5b1
  421735:	popa   
  421736:	jp     0x4216e9
  421738:	ret    0x61dd
  42173b:	adc    eax,0x7a20fa2f
  421740:	test   eax,ebx
  421742:	ja     0x421734
  421744:	je     0x421759
  421746:	stos   BYTE PTR es:[edi],al
  421747:	and    eax,0xfaa12a84
  42174c:	lock adc BYTE PTR fs:[edx],dl
  421750:	test   DWORD PTR [eax-0x78],esi
  421753:	sbb    bh,BYTE PTR [esp+ecx*2+0x79]
  421757:	cmp    eax,0x6ac9fce0
  42175c:	aaa    
  42175d:	stos   DWORD PTR es:[edi],eax
  42175e:	pop    esp
  42175f:	test   BYTE PTR [eax],cl
  421761:	test   BYTE PTR [edi-0x5e52c708],dh
  421767:	mov    esp,0x42b60cf7
  42176c:	cmp    edi,DWORD PTR [ecx]
  42176e:	and    eax,ecx
  421770:	push   edi
  421771:	xor    DWORD PTR [edx-0x70],0x54
  421775:	fwait
  421776:	pop    esp
  421777:	cmp    BYTE PTR [ebx+0x4a],bh
  42177a:	xchg   edx,eax
  42177b:	mov    WORD PTR [eax+0x54],fs
  42177e:	mov    edx,DWORD PTR [esi]
  421780:	inc    edi
  421781:	cli    
  421782:	lds    ecx,FWORD PTR [eax+0x411a9dfc]
  421788:	in     eax,0xf1
  42178a:	(bad)  
  42178b:	mov    eax,ds:0x1379d4fb
  421790:	pop    ebp
  421791:	dec    eax
  421792:	test   dh,bh
  421794:	aas    
  421795:	mov    cl,0xf8
  421797:	add    eax,0x6749c83a
  42179c:	sbb    ebx,edx
  42179e:	pop    esp
  42179f:	es fchs 
  4217a2:	clc    
  4217a3:	add    BYTE PTR [eax+edx*1],al
  4217a6:	pop    ecx
  4217a7:	jmp    0x4217a3
  4217a9:	xor    ch,dh
  4217ab:	push   eax
  4217ac:	jno    0x4217bd
  4217ae:	inc    esp
  4217af:	jmp    0xa508:0xf8079d8f
  4217b6:	lea    esi,[ebx+0x48]
  4217b9:	xchg   ebx,eax
  4217ba:	fwait
  4217bb:	cdq    
  4217bc:	(bad)  
  4217be:	pop    ecx
  4217bf:	unpcklps xmm0,XMMWORD PTR [ecx]
  4217c2:	loopne 0x4217ea
  4217c4:	sbb    DWORD PTR [edi-0x7bd2036],ebp
  4217ca:	xor    DWORD PTR ds:0x885cc787,ebx
  4217d0:	dec    ebp
  4217d1:	out    dx,eax
  4217d2:	adc    eax,0xd407a8eb
  4217d7:	or     DWORD PTR [ecx],0xa70c6fdc
  4217dd:	xor    BYTE PTR [ebx-0x2cea3887],dh
  4217e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217e4:	test   eax,0xfdddbe11
  4217e9:	rcr    esp,cl
  4217eb:	mov    eax,ds:0xde4b04bf
  4217f0:	js     0x421812
  4217f2:	jle    0x421814
  4217f4:	mov    esi,DWORD PTR [ecx+ebx*4]
  4217f7:	popf   
  4217f8:	int    0x24
  4217fa:	jno    0x4217fb
  4217fc:	imul   ecx,DWORD PTR [edx+0x5332bc78],0xeb5f1847
  421806:	pop    ds
  421807:	xlat   BYTE PTR ds:[ebx]
  421808:	in     al,dx
  421809:	daa    
  42180a:	sub    al,dl
  42180c:	cmp    eax,edx
  42180e:	jb     0x4217cb
  421810:	(bad)  
  421811:	aad    0x86
  421813:	sub    cl,dl
  421815:	test   al,0xc1
  421817:	aad    0xf3
  421819:	dec    ebx
  42181a:	outs   dx,DWORD PTR ds:[esi]
  42181b:	outs   dx,BYTE PTR ds:[esi]
  42181c:	inc    esi
  42181d:	ret    0xce21
  421820:	dec    ecx
  421821:	mov    eax,DWORD PTR [ecx+esi*1-0x522fd61e]
  421828:	retf   0x6eb0
  42182b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42182c:	cmc    
  42182d:	sub    BYTE PTR [esp+edi*4+0x76],0x14
  421832:	scas   al,BYTE PTR es:[edi]
  421833:	inc    ebp
  421834:	in     eax,dx
  421835:	jle    0x4217d9
  421837:	mov    al,0xe6
  421839:	(bad)  
  42183a:	(bad)  
  42183b:	repnz mov dl,0x50
  42183e:	push   es
  42183f:	push   esi
  421840:	or     bl,bh
  421842:	test   BYTE PTR ds:[ecx+0x3254b2d9],cl
  421849:	jmp    0xb531c190
  42184e:	inc    esp
  42184f:	daa    
  421850:	jecxz  0x42182f
  421852:	mov    edx,edi
  421854:	sub    DWORD PTR [ecx],ecx
  421856:	addr16 jne 0x42186c
  421859:	ja     0x421827
  42185b:	shl    DWORD PTR [edi+0x6a],0xa2
  42185f:	mov    dh,0x50
  421861:	out    0x7f,eax
  421863:	jno    0x4218ac
  421865:	adc    edi,DWORD PTR [esi-0x7a]
  421868:	(bad)  
  421869:	mov    dh,0x57
  42186b:	lock and edi,DWORD PTR [ebp-0x21]
  42186f:	cmp    al,0xf
  421871:	push   esp
  421872:	jne    0x421885
  421874:	push   ecx
  421875:	shl    BYTE PTR [esi-0x58],0xe4
  421879:	jl     0x421843
  42187b:	int    0x94
  42187d:	ds push ebx
  42187f:	jp     0x42180b
  421881:	mov    ecx,fs
  421883:	cwde   
  421884:	xor    ebx,DWORD PTR [edi+0x122e850c]
  42188a:	imul   ecx,ebp,0xffffffcf
  42188d:	jbe    0x42189d
  42188f:	fisttp DWORD PTR [ecx+0x2badcb7c]
  421895:	in     eax,dx
  421896:	call   0xd7633beb
  42189b:	pop    DWORD PTR [edi+0x267c05d2]
  4218a1:	sbb    esi,esp
  4218a3:	ins    BYTE PTR es:[edi],dx
  4218a4:	mov    al,ds:0xfb8d6e2f
  4218a9:	jo     0x42184d
  4218ab:	inc    eax
  4218ac:	sahf   
  4218ad:	in     al,dx
  4218ae:	cld    
  4218af:	mov    cl,0xd2
  4218b1:	mov    ebx,esi
  4218b3:	repnz mov ah,0x45
  4218b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218b7:	shr    DWORD PTR [edi-0x2c96435],0x80
  4218be:	int3   
  4218bf:	or     edx,DWORD PTR [ebp-0x78eced6b]
  4218c5:	jo     0x421887
  4218c7:	inc    eax
  4218c8:	add    DWORD PTR [esi+0x37e24cff],ecx
  4218ce:	in     eax,dx
  4218cf:	jbe    0x4218e4
  4218d1:	inc    ebp
  4218d2:	cld    
  4218d3:	jbe    0x4218c5
  4218d5:	clc    
  4218d6:	mov    bl,0xff
  4218d8:	(bad)  
  4218d9:	fcmovu st,st(6)
  4218db:	(bad)  
  4218dc:	bound  ebx,QWORD PTR [ecx+0x3b]
  4218df:	cmp    al,0x1a
  4218e1:	sti    
  4218e2:	les    eax,FWORD PTR [ecx+0x7a]
  4218e5:	push   eax
  4218e6:	outs   dx,BYTE PTR ds:[esi]
  4218e7:	ss jnp 0x4218c6
  4218ea:	mov    esi,0xa79ffc92
  4218ef:	add    ah,BYTE PTR [edi+0x6f365128]
  4218f5:	push   0xee5bfaf0
  4218fa:	dec    ebp
  4218fb:	pushf  
  4218fc:	imul   esi,esi,0x57fb1ca4
  421902:	inc    edx
  421903:	mov    ebx,0x1334dc70
  421908:	hlt    
  421909:	inc    esp
  42190a:	mov    edx,0x1c4eb767
  42190f:	add    esp,edx
  421911:	repnz in eax,0xbf
  421914:	fdiv   st,st(4)
  421916:	test   BYTE PTR [esi],0xb8
  421919:	fs out dx,al
  42191b:	addr16 ret 
  42191d:	jmp    0xbb3f02cf
  421922:	(bad)  
  421923:	int    0xf0
  421925:	or     eax,0x60e43959
  42192a:	(bad)  
  42192c:	xchg   ecx,eax
  42192d:	std    
  42192e:	sti    
  42192f:	add    cl,BYTE PTR [ebx]
  421931:	in     eax,dx
  421932:	xor    cl,bl
  421934:	xchg   ebp,eax
  421935:	sub    BYTE PTR [ecx],cl
  421937:	push   0x9a83399f
  42193c:	ss in  eax,dx
  42193e:	out    0x14,al
  421940:	adc    esp,DWORD PTR [ebx-0xb]
  421943:	sar    DWORD PTR [edx-0x4fecf3dc],0x3
  42194a:	enter  0x392e,0xe6
  42194e:	iret   
  42194f:	lods   al,BYTE PTR ds:[esi]
  421950:	test   al,0x99
  421952:	ss xchg edx,eax
  421954:	or     ebx,DWORD PTR ds:0x3e3a8120
  42195a:	xlat   BYTE PTR ds:[ebx]
  42195b:	addr16 sbb eax,0xff800fc3
  421961:	mov    esi,DWORD PTR [esi+ebp*4+0x54095a48]
  421968:	cmp    eax,0xc1d5ad2f
  42196d:	sti    
  42196e:	clc    
  42196f:	sub    DWORD PTR [esi],edi
  421971:	xchg   BYTE PTR [edi+eax*4-0x5c],bl
  421975:	xlat   BYTE PTR ds:[ebx]
  421976:	cmc    
  421977:	pushf  
  421978:	or     BYTE PTR [ebp*8-0x4ac9e0e4],0xc0
  421980:	sbb    ebp,edx
  421982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421983:	mov    ebx,0xabe3acb
  421988:	push   esi
  421989:	dec    esp
  42198a:	mov    ecx,0x2d365d97
  42198f:	pop    ds
  421990:	jne    0x421990
  421992:	aaa    
  421993:	or     edx,ecx
  421995:	js     0x42191c
  421997:	and    bl,BYTE PTR [esi-0x44aabacc]
  42199d:	pop    edx
  42199e:	add    DWORD PTR [ebx+0x15bb0606],0xffffffca
  4219a5:	xchg   ebp,eax
  4219a6:	push   es
  4219a7:	lock and DWORD PTR [ebx-0x48e51298],0xd1bb7020
  4219b2:	loope  0x421957
  4219b4:	inc    ecx
  4219b5:	js     0x4219ee
  4219b7:	mov    WORD PTR [edi-0x2],fs
  4219ba:	push   ebp
  4219bb:	or     bh,cl
  4219bd:	sub    DWORD PTR [ebx+0x708b231],esp
  4219c3:	mov    esi,0x99e9e858
  4219c8:	pop    ebx
  4219c9:	fsub   DWORD PTR [ecx+0x5e9b06d1]
  4219cf:	ret    0x370c
  4219d2:	div    DWORD PTR [edi+0x5a0c92a1]
  4219d8:	fs push ecx
  4219da:	xor    ecx,edi
  4219dc:	push   esp
  4219dd:	adc    DWORD PTR [esi-0x645229e1],esp
  4219e3:	addr16 int 0x65
  4219e6:	scas   eax,DWORD PTR es:[edi]
  4219e7:	cs push edx
  4219e9:	and    edx,DWORD PTR [eax]
  4219eb:	add    ah,cl
  4219ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219ee:	pop    edi
  4219ef:	xor    ebp,DWORD PTR [ecx]
  4219f1:	adc    BYTE PTR [eax],al
  4219f3:	dec    edi
  4219f4:	std    
  4219f5:	sub    dh,ch
  4219f7:	mov    ebx,esp
  4219f9:	call   0x46847da4
  4219fe:	stc    
  4219ff:	mov    esi,0xfdc562b2
  421a04:	lahf   
  421a05:	push   0x20
  421a07:	int    0x19
  421a09:	push   ds
  421a0a:	test   eax,0x25495e55
  421a0f:	jae    0x421a5d
  421a11:	mov    ebx,0xc3f23e5d
  421a16:	and    BYTE PTR [edx+0x43],ah
  421a19:	jmp    0x421a65
  421a1b:	mov    esi,0x748d4d6a
  421a20:	cmp    cl,dl
  421a22:	es pop esp
  421a24:	push   eax
  421a25:	es (bad) 
  421a27:	rol    DWORD PTR [esi-0x1a72bedd],1
  421a2d:	ja     0x421a53
  421a2f:	pushf  
  421a30:	aam    0x2b
  421a32:	push   ecx
  421a33:	inc    ebx
  421a34:	fbld   TBYTE PTR [edx]
  421a36:	mov    BYTE PTR [edi+edx*8+0x46],bh
  421a3a:	sti    
  421a3b:	sub    eax,0x4543fdf8
  421a40:	xlat   BYTE PTR ds:[ebx]
  421a41:	mov    eax,ds:0x914f05a8
  421a46:	inc    edi
  421a47:	mov    ah,0x90
  421a49:	mov    edx,0xa548f08c
  421a4e:	jno    0x421a38
  421a50:	cmp    al,0x53
  421a52:	in     al,0x94
  421a54:	das    
  421a55:	fstp   DWORD PTR [edx-0x383e9c69]
  421a5b:	jbe    0x421a3c
  421a5d:	loopne 0x421ac5
  421a5f:	xor    edx,esp
  421a61:	je     0x421a3d
  421a63:	repnz or DWORD PTR [ecx+0x31cb6626],edx
  421a6a:	cdq    
  421a6b:	outs   dx,BYTE PTR ds:[esi]
  421a6c:	or     al,0xe6
  421a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a6f:	adc    edx,esi
  421a71:	in     eax,dx
  421a72:	aam    0xa1
  421a74:	js     0x421a88
  421a76:	test   al,bl
  421a78:	jbe    0x421a8d
  421a7a:	or     al,0xf5
  421a7c:	jmp    0xe2f33fc
  421a81:	daa    
  421a82:	or     DWORD PTR [edx],eax
  421a84:	push   cs
  421a85:	and    esi,DWORD PTR [ebx-0x55]
  421a88:	fcmovnb st,st(2)
  421a8a:	in     eax,dx
  421a8b:	dec    edx
  421a8c:	scas   al,BYTE PTR es:[edi]
  421a8d:	and    DWORD PTR [eax],eax
  421a8f:	inc    edi
  421a90:	lds    ebp,FWORD PTR [edi]
  421a92:	out    dx,al
  421a93:	pop    ebp
  421a94:	mov    ebx,0xc74ac422
  421a99:	jp     0x421ab1
  421a9b:	mov    eax,ds:0x70641723
  421aa0:	xchg   esp,eax
  421aa1:	mov    esi,0xc8022f21
  421aa6:	push   edi
  421aa7:	sbb    al,0x2f
  421aa9:	mov    WORD PTR [edx],es
  421aab:	out    dx,eax
  421aac:	call   0x3a0d:0x56ad333a
  421ab3:	xchg   ecx,eax
  421ab4:	ret    
  421ab5:	mov    ebp,0x7b8e89
  421aba:	hlt    
  421abb:	sub    BYTE PTR [esi],dh
  421abd:	rdmsr  
  421abf:	jns    0x421abe
  421ac1:	cmp    BYTE PTR [ebx+0x63],bl
  421ac4:	ins    BYTE PTR es:[edi],dx
  421ac5:	(bad)  
  421ac6:	hlt    
  421ac7:	push   esi
  421ac8:	mov    cl,0xca
  421aca:	fdiv   st,st(7)
  421acc:	adc    eax,DWORD PTR [eax-0x61cbcd10]
  421ad2:	fist   DWORD PTR [ecx]
  421ad4:	adc    dh,BYTE PTR [ebx+0x74dd968f]
  421ada:	loopne 0x421ab9
  421adc:	pop    es
  421add:	dec    edi
  421ade:	int3   
  421adf:	int    0xd3
  421ae1:	dec    ebp
  421ae2:	nop
  421ae3:	inc    ebp
  421ae4:	dec    esi
  421ae5:	adc    bl,BYTE PTR [edi]
  421ae7:	jp     0x421b5c
  421ae9:	dec    esi
  421aea:	sub    eax,0x470ef87c
  421aef:	out    dx,eax
  421af0:	retf   0xa86c
  421af3:	add    eax,0x7182d233
  421af8:	aas    
  421af9:	add    esi,DWORD PTR ds:0xfd2a4c15
  421aff:	lds    edx,FWORD PTR [eax-0x69]
  421b02:	dec    edx
  421b03:	scas   eax,DWORD PTR es:[edi]
  421b04:	xlat   BYTE PTR ds:[ebx]
  421b05:	out    dx,eax
  421b06:	or     al,0x78
  421b08:	mov    dl,0x1a
  421b0a:	loop   0x421b78
  421b0c:	adc    dl,cl
  421b0e:	sti    
  421b0f:	cwde   
  421b10:	add    al,0x7c
  421b12:	jp     0x421b51
  421b14:	inc    ebp
  421b15:	or     ebx,DWORD PTR [ebx]
  421b17:	jle    0x421b10
  421b19:	fst    DWORD PTR [ebp+0x430caf26]
  421b1f:	mov    esp,0x7b176976
  421b24:	xor    ch,BYTE PTR [ecx]
  421b26:	in     eax,0x95
  421b28:	pop    es
  421b29:	mov    cl,0xf0
  421b2b:	loop   0x421aaf
  421b2d:	pushf  
  421b2e:	jne    0x421b1b
  421b30:	or     ah,dh
  421b32:	scas   eax,DWORD PTR es:[edi]
  421b33:	sar    DWORD PTR ds:0xdae3c4e0,cl
  421b39:	push   esp
  421b3a:	adc    dh,cl
  421b3c:	mov    ebp,0x10a9c7d9
  421b41:	push   esi
  421b42:	dec    ebp
  421b43:	xor    ecx,edi
  421b45:	mov    BYTE PTR [ecx],dl
  421b47:	push   ss
  421b48:	test   bh,dh
  421b4a:	lock gs in al,dx
  421b4d:	sbb    edx,DWORD PTR [edx-0x17]
  421b50:	icebp  
  421b51:	loop   0x421aeb
  421b53:	lock out 0xa1,eax
  421b56:	in     al,dx
  421b57:	pop    ds
  421b58:	adc    al,0x54
  421b5a:	arpl   WORD PTR [edx+0x271285a4],cx
  421b60:	pusha  
  421b61:	pop    ds
  421b62:	mov    ebp,fs
  421b64:	(bad)  
  421b65:	xlat   BYTE PTR ds:[ebx]
  421b66:	sbb    ah,al
  421b68:	loope  0x421b7c
  421b6a:	or     bl,BYTE PTR [edx+edx*4+0x78]
  421b6e:	xor    al,0x60
  421b70:	inc    ebx
  421b71:	shl    edx,1
  421b73:	sub    al,0x3d
  421b75:	xchg   esi,eax
  421b76:	push   esp
  421b77:	push   0xd371b290
  421b7c:	jo     0x421b92
  421b7e:	dec    ebx
  421b7f:	rol    BYTE PTR ds:0x61d41fde,0xbe
  421b86:	cmp    al,0x3a
  421b88:	mov    cl,BYTE PTR [eax]
  421b8a:	mov    dl,0x4e
  421b8c:	pop    esp
  421b8d:	or     eax,0xe8283cd5
  421b92:	scas   al,BYTE PTR es:[edi]
  421b93:	mov    ebp,0x3bb6d32f
  421b98:	mov    bl,0x81
  421b9a:	jae    0x421bab
  421b9c:	cld    
  421b9d:	push   0xce1d9b2
  421ba2:	lock sahf 
  421ba4:	mov    ecx,0xaafa818
  421ba9:	xchg   edx,eax
  421baa:	imul   esp,DWORD PTR [edx],0x54439c4d
  421bb0:	jmp    0x421c10
  421bb2:	xlat   BYTE PTR ds:[ebx]
  421bb3:	ficom  DWORD PTR [edx]
  421bb5:	push   edx
  421bb6:	pop    edx
  421bb7:	out    0xf5,al
  421bb9:	lods   al,BYTE PTR ds:[esi]
  421bba:	out    0xbd,al
  421bbc:	ret    
  421bbd:	or     cl,BYTE PTR [eax]
  421bbf:	add    al,0x90
  421bc1:	scas   al,BYTE PTR es:[edi]
  421bc2:	aas    
  421bc3:	cmp    BYTE PTR [ecx],dh
  421bc5:	stos   BYTE PTR es:[edi],al
  421bc6:	out    dx,eax
  421bc7:	pop    eax
  421bc8:	sub    esp,eax
  421bca:	data16 int 0x83
  421bcd:	pop    ebp
  421bce:	inc    BYTE PTR [ecx-0x1f7b44eb]
  421bd4:	cld    
  421bd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bd6:	cmp    al,0xf0
  421bd8:	aaa    
  421bd9:	mov    al,0xe4
  421bdb:	xor    DWORD PTR [esi+0x60],eax
  421bde:	xchg   ebx,eax
  421bdf:	inc    edx
  421be0:	test   BYTE PTR [eax],ch
  421be2:	add    edx,0x901b04f2
  421be8:	sub    al,0x3
  421bea:	inc    esi
  421beb:	mov    dh,0x41
  421bed:	xchg   esi,eax
  421bee:	push   esp
  421bef:	in     eax,0xdd
  421bf1:	outs   dx,DWORD PTR ds:[esi]
  421bf2:	cdq    
  421bf3:	inc    eax
  421bf4:	pop    esi
  421bf5:	mov    ?,WORD PTR [ebx]
  421bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bf8:	mov    ah,0x62
  421bfa:	rol    BYTE PTR [esi],0xab
  421bfd:	pop    ds
  421bfe:	mov    ds:0x70e33dd9,al
  421c03:	(bad)  
  421c04:	xchg   esp,eax
  421c05:	mov    ecx,0xfc481640
  421c0a:	aaa    
  421c0b:	adc    BYTE PTR ds:0x2b1e2d0,bh
  421c11:	jne    0x421bc9
  421c13:	das    
  421c14:	clc    
  421c15:	jl     0x421bd0
  421c17:	stc    
  421c18:	mov    ecx,ss
  421c1a:	loope  0x421c4b
  421c1c:	push   cs
  421c1d:	test   al,0x22
  421c1f:	xchg   DWORD PTR [ecx-0x4cc3bb1b],esi
  421c25:	mov    edi,0x93bf23c1
  421c2a:	mov    ah,0x65
  421c2c:	clc    
  421c2d:	out    dx,eax
  421c2e:	stos   DWORD PTR es:[edi],eax
  421c2f:	sbb    ebx,DWORD PTR [edx+esi*8+0x7b]
  421c33:	xchg   ebp,eax
  421c34:	je     0x421c59
  421c36:	and    bl,cl
  421c38:	or     dh,BYTE PTR ds:[eax+0x708dace4]
  421c3f:	jl     0x421c6e
  421c41:	xor    BYTE PTR [ecx+0x4b65bb96],bl
  421c47:	stc    
  421c48:	popa   
  421c49:	dec    edx
  421c4a:	jecxz  0x421c9a
  421c4c:	jecxz  0x421c2b
  421c4e:	push   ecx
  421c4f:	ja     0x421bfb
  421c51:	scas   eax,DWORD PTR es:[edi]
  421c52:	popf   
  421c53:	sub    esi,edx
  421c55:	int3   
  421c56:	push   es
  421c57:	jo     0x421cc1
  421c59:	add    ebp,DWORD PTR [eax-0x1d]
  421c5c:	mov    bl,0x2
  421c5e:	cli    
  421c5f:	ss push esp
  421c61:	jnp    0x421ca9
  421c63:	or     al,0x54
  421c65:	lahf   
  421c66:	(bad)  
  421c67:	xchg   edx,eax
  421c68:	nop
  421c69:	mov    ebx,DWORD PTR [eax]
  421c6b:	repnz ss sahf 
  421c6e:	mov    dl,0x6e
  421c70:	(bad)  
  421c72:	je     0x421ce9
  421c74:	mov    DWORD PTR [esi+0x5ea2bd68],0xeb3c6fff
  421c7e:	inc    esp
  421c7f:	nop
  421c80:	and    al,bh
  421c82:	sbb    DWORD PTR [edi],ecx
  421c84:	iret   
  421c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c86:	mov    ds:0x900b3433,al
  421c8b:	dec    edi
  421c8c:	les    esp,FWORD PTR [ebx+eax*2]
  421c8f:	or     BYTE PTR [edx],ch
  421c91:	push   ds
  421c92:	jg     0x421c5e
  421c94:	outs   dx,BYTE PTR ds:[esi]
  421c95:	xchg   DWORD PTR [eax+0x296ebec3],ebx
  421c9b:	jmp    0x421cf2
  421c9d:	sbb    eax,0xb9c8573b
  421ca2:	stc    
  421ca3:	loope  0x421cb0
  421ca5:	std    
  421ca6:	sub    BYTE PTR [ebp-0x3f362e42],ah
  421cac:	imul   edi,esi,0xfc5bdc04
  421cb2:	dec    eax
  421cb3:	jno    0x421ce6
  421cb5:	movhps xmm3,QWORD PTR [esi+0x33]
  421cb9:	(bad)  
  421cba:	xor    al,0xbf
  421cbc:	push   0xffffffe3
  421cbe:	rol    BYTE PTR [esi-0x78eb3830],cl
  421cc4:	mov    ch,0xb
  421cc6:	jmp    0x673443f5
  421ccb:	scas   eax,DWORD PTR es:[edi]
  421ccc:	mov    ebx,0x7c6976c5
  421cd1:	sub    ebx,DWORD PTR [eax-0x42]
  421cd4:	jg     0x421c9d
  421cd6:	sti    
  421cd7:	hlt    
  421cd8:	xor    DWORD PTR [ebx+ebp*1],ebx
  421cdb:	loope  0x421c6a
  421cdd:	sti    
  421cde:	add    al,0x99
  421ce0:	jns    0x421c6e
  421ce2:	inc    ebx
  421ce3:	retf   0xec8d
  421ce6:	scas   al,BYTE PTR es:[edi]
  421ce7:	xchg   DWORD PTR [edx],ebp
  421ce9:	xchg   esi,eax
  421cea:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  421cec:	bound  esp,QWORD PTR [ebp-0x58]
  421cef:	test   DWORD PTR [ecx+0x101555ac],ecx
  421cf5:	mov    bl,0xf0
  421cf7:	test   eax,0x51405bfc
  421cfc:	test   DWORD PTR [ebx],0x409460a2
  421d02:	jle    0x421d1a
  421d04:	addr16 fwait
  421d06:	es add ebx,eax
  421d09:	int    0xff
  421d0b:	xchg   ecx,eax
  421d0c:	(bad)
  421d0f:	repz retfw 
  421d12:	fcmovnbe st,st(5)
  421d14:	call   0xb8f2:0x5a3179ac
  421d1b:	stos   BYTE PTR es:[edi],al
  421d1c:	(bad)  
  421d1e:	sub    al,0x37
  421d20:	or     DWORD PTR [edi+eiz*8-0x56],esp
  421d24:	dec    edx
  421d25:	sti    
  421d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d27:	mov    edi,0x8b2133b6
  421d2c:	sub    edx,DWORD PTR [eax-0x19]
  421d2f:	shr    ebp,0x13
  421d32:	xchg   esi,eax
  421d33:	sbb    al,0x99
  421d35:	sub    ebx,DWORD PTR [eax-0x5d]
  421d38:	inc    ebp
  421d39:	rol    BYTE PTR [ebx+ebp*8-0x71b7aef6],cl
  421d40:	push   ss
  421d41:	shl    esi,1
  421d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d44:	mov    ch,ch
  421d46:	adc    al,0xb6
  421d48:	sbb    dl,ah
  421d4a:	xchg   BYTE PTR [ecx+ebx*4-0xd],ch
  421d4e:	mov    cl,0xc1
  421d50:	mov    DWORD PTR [eax],ecx
  421d52:	jmp    0x421d26
  421d54:	mov    dh,0xc8
  421d56:	pop    edx
  421d57:	stos   BYTE PTR es:[edi],al
  421d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d59:	outs   dx,BYTE PTR ds:[esi]
  421d5a:	(bad)  
  421d5b:	mov    cl,BYTE PTR [edi]
  421d5d:	jecxz  0x421da0
  421d5f:	mov    al,0xff
  421d61:	push   es
  421d62:	dec    ecx
  421d63:	jo     0x421d15
  421d65:	sti    
  421d66:	xchg   BYTE PTR fs:[ebp+0x60],al
  421d6a:	jl     0x421d8d
  421d6c:	out    0x15,eax
  421d6e:	adc    al,BYTE PTR [edi]
  421d70:	pop    edx
  421d71:	add    eax,0x217ff9dc
  421d76:	sahf   
  421d77:	sub    cl,BYTE PTR es:[ebp+0x447325f7]
  421d7e:	jp     0x421d5d
  421d80:	les    esp,FWORD PTR [edi-0x7e]
  421d83:	out    dx,al
  421d84:	bound  esp,QWORD PTR [ebx]
  421d86:	push   ds
  421d87:	popf   
  421d88:	pop    edi
  421d89:	in     eax,dx
  421d8a:	jp     0x421dab
  421d8c:	mov    dl,0xf3
  421d8e:	and    al,0x99
  421d90:	fwait
  421d91:	adc    edx,ebx
  421d93:	stc    
  421d94:	push   eax
  421d95:	cwd    
  421d97:	xor    al,0x6f
  421d99:	rol    DWORD PTR [ebx],cl
  421d9b:	or     ah,BYTE PTR [ebx+0x1a]
  421d9e:	xchg   edi,eax
  421d9f:	in     al,0x93
  421da1:	xor    bl,al
  421da3:	repz in eax,dx
  421da5:	ds icebp 
  421da7:	test   DWORD PTR [edi],0xc6951b01
  421dad:	inc    esi
  421dae:	and    cl,bl
  421db0:	rcr    DWORD PTR [ecx],cl
  421db2:	nop
  421db3:	jp     0x421d54
  421db5:	int3   
  421db6:	je     0x421da3
  421db8:	adc    ecx,0xffffffd9
  421dbb:	mov    DWORD PTR [ecx+0x31a751fd],ebp
  421dc1:	xchg   edx,eax
  421dc2:	add    al,0x93
  421dc4:	js     0x421d80
  421dc6:	out    dx,al
  421dc7:	or     al,0x8f
  421dc9:	mov    ebp,DWORD PTR [eax]
  421dcb:	imul   BYTE PTR [ebp+edi*4+0x277c403]
  421dd2:	pop    ss
  421dd3:	lahf   
  421dd4:	xchg   edi,eax
  421dd5:	outs   dx,DWORD PTR ds:[esi]
  421dd6:	icebp  
  421dd7:	in     al,dx
  421dd8:	loope  0x421dc4
  421dda:	mov    eax,ds:0xecda45d8
  421ddf:	rol    DWORD PTR [esi+0x5bedd028],1
  421de5:	mov    BYTE PTR [esp+ecx*2],ah
  421de8:	cmp    eax,0x8a78e057
  421ded:	inc    ebx
  421dee:	stos   BYTE PTR es:[edi],al
  421def:	xlat   BYTE PTR ds:[ebx]
  421df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421df1:	mov    ch,0x7f
  421df3:	std    
  421df4:	jecxz  0x421e65
  421df6:	jmp    0xec64:0xa8cc3052
  421dfd:	imul   ebp,DWORD PTR [edi+0x70e01aba],0x16a46aa2
  421e07:	sub    ecx,DWORD PTR [si-0x27]
  421e0b:	xor    eax,0x14bc4908
  421e10:	push   ds
  421e11:	sub    bl,BYTE PTR [ebx-0x289c7d05]
  421e17:	scas   al,BYTE PTR es:[edi]
  421e18:	pop    edx
  421e19:	int    0xc5
  421e1b:	mov    cl,0x4e
  421e1d:	out    dx,al
  421e1e:	ins    DWORD PTR es:[edi],dx
  421e1f:	cdq    
  421e20:	ss or  eax,0x9778d85
  421e26:	cmp    ch,BYTE PTR [edi+edi*1]
  421e29:	inc    ebp
  421e2a:	fs daa 
  421e2c:	mov    ds:0x59d1e03a,eax
  421e31:	cmp    eax,0x273abc99
  421e36:	rcr    BYTE PTR [edi+0x22fa23b6],0x7c
  421e3d:	(bad)  
  421e3e:	fcomp  DWORD PTR [ebp+ebp*4+0x54143a33]
  421e45:	pop    eax
  421e46:	dec    edi
  421e47:	out    0x39,eax
  421e49:	popa   
  421e4a:	stc    
  421e4b:	sbb    esp,DWORD PTR [ecx]
  421e4d:	xchg   esp,eax
  421e4e:	jl     0x421e55
  421e50:	mov    ch,0xaf
  421e52:	xor    BYTE PTR [ebx+ecx*8],bh
  421e55:	sbb    al,cl
  421e57:	in     eax,dx
  421e58:	repz mov ebp,DWORD PTR [ebx+edi*2+0x3080fef7]
  421e60:	adc    BYTE PTR [esi+0x18],0x2e
  421e64:	inc    edi
  421e65:	jmp    0x421ecb
  421e67:	mov    ebx,0xf1257e47
  421e6c:	push   edx
  421e6d:	icebp  
  421e6e:	retf   
  421e6f:	pop    esp
  421e70:	fcmovne st,st(1)
  421e72:	lods   eax,DWORD PTR ds:[esi]
  421e73:	mov    DWORD PTR [edx+edx*4+0x4b4dab00],edx
  421e7a:	jne    0x421ef3
  421e7c:	(bad)  
  421e7d:	rol    BYTE PTR [esi+0x76],1
  421e80:	sti    
  421e81:	ins    DWORD PTR es:[edi],dx
  421e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e83:	test   bl,dh
  421e85:	mov    eax,0x267c2300
  421e8a:	gs shl ah,1
  421e8d:	cmp    al,0xe0
  421e8f:	fwait
  421e90:	out    dx,eax
  421e91:	ins    DWORD PTR es:[edi],dx
  421e92:	xchg   ebp,eax
  421e93:	ret    0xdaf1
  421e96:	in     al,0x3d
  421e98:	jle    0x421e95
  421e9a:	push   esp
  421e9b:	mov    cl,0xcc
  421e9d:	xchg   cx,ax
  421e9f:	and    edi,DWORD PTR [edx]
  421ea1:	cmp    ah,bl
  421ea3:	add    DWORD PTR [eax],ebx
  421ea5:	jmp    0x7f69dcf
  421eaa:	stc    
  421eab:	call   0xd554:0x30c76636
  421eb2:	in     eax,dx
  421eb3:	push   ebx
  421eb4:	jle    0x421ec9
  421eb6:	inc    edi
  421eb7:	push   0x4e3db7ea
  421ebc:	xor    edx,DWORD PTR [esi+ecx*8+0x1b6500]
  421ec3:	pop    ss
  421ec4:	out    0xe3,al
  421ec6:	push   ecx
  421ec7:	cmp    eax,0x60b379a7
  421ecc:	cmp    BYTE PTR [edx],bh
  421ece:	or     BYTE PTR [esi+eax*8+0x34],cl
  421ed2:	jp     0x421e73
  421ed4:	mov    al,0x9f
  421ed6:	mov    cl,0x54
  421ed8:	xchg   BYTE PTR [eax+0x69],ch
  421edb:	int3   
  421edc:	or     eax,0x2a1acc27
  421ee1:	add    BYTE PTR [edi+0x11],ah
  421ee4:	push   ds
  421ee5:	retf   0x17eb
  421ee8:	cmp    esi,DWORD PTR [edi-0x7b2b91d0]
  421eee:	xor    eax,0x7df19045
  421ef3:	xor    DWORD PTR [ecx-0x2452fb2a],0xffffffd2
  421efa:	and    ebx,0x97a80d16
  421f00:	adc    eax,0x32dc28ba
  421f05:	shr    dl,0x5a
  421f08:	pop    ds
  421f09:	inc    edx
  421f0a:	mov    al,ds:0x2ad30fb0
  421f0f:	add    eax,0xa03aa7b8
  421f14:	in     eax,dx
  421f15:	pop    es
  421f16:	pushf  
  421f17:	scas   eax,DWORD PTR es:[edi]
  421f18:	push   eax
  421f19:	mov    dh,0xec
  421f1b:	jg     0x421ebe
  421f1d:	dec    edx
  421f1e:	mov    dl,0x76
  421f20:	push   edi
  421f21:	rcr    dl,1
  421f23:	mov    esi,edi
  421f25:	jecxz  0x421f04
  421f27:	mov    dh,0xb3
  421f29:	test   al,0xab
  421f2b:	push   0xffffffa7
  421f2d:	in     al,0x77
  421f2f:	pop    edx
  421f30:	push   ds
  421f31:	in     eax,0x7e
  421f33:	cmp    DWORD PTR [esi+0x8eeebe4],ecx
  421f39:	rcl    BYTE PTR [ebx],cl
  421f3b:	out    0x38,eax
  421f3d:	fst    QWORD PTR [ebx-0x10ec951e]
  421f43:	xor    al,dl
  421f45:	iret   
  421f46:	pop    esi
  421f47:	xchg   DWORD PTR [edi],eax
  421f49:	cmp    BYTE PTR [ebx],ah
  421f4b:	mov    edi,DWORD PTR [edx-0x5b]
  421f4e:	jge    0x421fc8
  421f50:	mov    esi,0xd7a79424
  421f55:	in     al,0x31
  421f57:	sbb    eax,DWORD PTR [ebp-0x305bdb6d]
  421f5d:	pusha  
  421f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f5f:	popa   
  421f60:	popf   
  421f61:	xchg   esi,eax
  421f62:	xor    eax,0xe87a6be3
  421f67:	sub    DWORD PTR [ebp+0x3639b842],esi
  421f6d:	out    dx,al
  421f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f6f:	push   eax
  421f70:	adc    al,0x1e
  421f72:	pop    ebp
  421f73:	test   al,0x3b
  421f75:	fwait
  421f76:	push   ds
  421f77:	mov    WORD PTR [esi+ecx*4+0xa],?
  421f7b:	cs xchg esp,eax
  421f7d:	jmp    0xee3ee870
  421f82:	pop    ss
  421f83:	stc    
  421f84:	jns    0x421f81
  421f86:	jecxz  0x421f54
  421f88:	adc    al,0xbb
  421f8a:	inc    ebp
  421f8b:	add    eax,0x8f329b0c
  421f90:	push   ebp
  421f91:	retf   
  421f92:	scas   eax,DWORD PTR es:[edi]
  421f93:	cmp    al,0x28
  421f95:	stc    
  421f96:	sub    BYTE PTR [edi],al
  421f98:	shl    BYTE PTR [ecx+0x34],cl
  421f9b:	dec    ecx
  421f9c:	mov    ds:0xaa804b64,al
  421fa1:	sub    ah,BYTE PTR [bx+0x2064]
  421fa6:	daa    
  421fa7:	pop    esi
  421fa8:	pop    ds
  421fa9:	sbb    bh,BYTE PTR [eax-0x39]
  421fac:	(bad)  
  421fad:	inc    cx
  421faf:	cwde   
  421fb0:	sub    BYTE PTR [ecx-0x3470408b],0x6a
  421fb7:	sub    ah,BYTE PTR ds:0x127dff93
  421fbd:	sbb    esi,DWORD PTR [edx]
  421fbf:	add    DWORD PTR [ebp+0x32],ecx
  421fc2:	outs   dx,BYTE PTR ds:[esi]
  421fc3:	dec    esi
  421fc4:	rol    BYTE PTR [edx+0x3ac25eeb],1
  421fca:	icebp  
  421fcb:	fdivr  QWORD PTR [bx-0x5f96]
  421fd0:	hlt    
  421fd1:	es jb  0x421fbe
  421fd4:	call   0xacb6:0xa24eca83
  421fdb:	loopne 0x421fc7
  421fdd:	loop   0x421fcb
  421fdf:	mul    ah
  421fe1:	stos   DWORD PTR es:[edi],eax
  421fe2:	stc    
  421fe3:	cs stos BYTE PTR es:[edi],al
  421fe5:	mov    al,ds:0xb2f32c93
  421fea:	mov    ds:0x8662cb5b,eax
  421fef:	test   DWORD PTR [eax+0xf],0xf7abd1d7
  421ff6:	sub    ecx,DWORD PTR [esi-0x5cc277fa]
  421ffc:	add    eax,ebx
  421ffe:	sbb    bl,0xfe
  422001:	js     0x422035
  422003:	xor    bl,BYTE PTR [esi-0x6a]
  422006:	stc    
  422007:	(bad)  
  422009:	xor    DWORD PTR [ecx-0x7143ca44],ebp
  42200f:	mov    ds:0xb6ecdd32,al
  422014:	popa   
  422015:	lods   al,BYTE PTR ds:[esi]
  422016:	sti    
  422017:	fsubr  QWORD PTR [eax+0x4c]
  42201a:	sbb    ch,dl
  42201c:	movd   DWORD PTR [eax-0x29],mm0
  422020:	add    ch,BYTE PTR [ecx]
  422022:	and    cl,ah
  422024:	jb     0x421fbf
  422026:	mov    al,ds:0x21576e01
  42202b:	sub    DWORD PTR [esi],edi
  42202d:	mov    ds:0xb5af1261,al
  422032:	xor    al,bh
  422034:	fld    DWORD PTR [ecx+0x24]
  422037:	sbb    al,0xc6
  422039:	inc    ecx
  42203a:	lea    ebp,[ebx-0x7d31f053]
  422040:	outs   dx,DWORD PTR ds:[esi]
  422041:	inc    esi
  422042:	jo     0x422087
  422044:	xlat   BYTE PTR ds:[ebx]
  422045:	les    edx,FWORD PTR [ebx-0x1b6cb38c]
  42204b:	xor    eax,0x5febeb7e
  422050:	icebp  
  422051:	cdq    
  422052:	mov    ah,0xd9
  422054:	and    DWORD PTR [esi],esp
  422056:	(bad)  
  422057:	sub    eax,0x2514b72a
  42205c:	jne    0x4220b6
  42205e:	lahf   
  42205f:	scas   eax,DWORD PTR es:[edi]
  422060:	in     al,dx
  422061:	dec    ebp
  422062:	xor    al,BYTE PTR [edi-0x30]
  422065:	call   0x2e54020
  42206a:	add    al,0xe4
  42206c:	(bad)  
  42206d:	dec    eax
  42206e:	mov    eax,ds:0x910cb157
  422073:	(bad)
  422077:	sbb    al,0x8e
  422079:	rcr    BYTE PTR ds:0x4f42430c,0xb4
  422080:	sbb    bl,BYTE PTR [edx-0x12]
  422083:	add    DWORD PTR [ebx],esp
  422085:	mov    cs,WORD PTR [esp+ebx*2+0x60]
  422089:	das    
  42208a:	cli    
  42208b:	jbe    0x422106
  42208d:	push   edi
  42208e:	cdq    
  42208f:	sub    eax,0x9577108c
  422094:	aam    0xfd
  422096:	and    BYTE PTR [esi],bh
  422098:	repnz mov esp,0x829c399f
  42209e:	retf   
  42209f:	and    al,0x87
  4220a1:	or     dh,BYTE PTR [edx]
  4220a3:	add    esi,ebp
  4220a5:	sub    eax,0x3b956a08
  4220aa:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220ac:	jge    0x4220b1
  4220ae:	(bad)  
  4220b0:	or     BYTE PTR [ecx-0x57],0x61
  4220b4:	(bad)  
  4220b5:	(bad)
  4220ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220bb:	in     eax,dx
  4220bc:	test   al,0x87
  4220be:	pop    ss
  4220bf:	xor    esi,DWORD PTR [esp+ebx*4-0x58]
  4220c3:	(bad)  
  4220c4:	sub    ebx,DWORD PTR [ecx+edx*1-0x24716477]
  4220cb:	stos   BYTE PTR es:[edi],al
  4220cc:	push   ebx
  4220cd:	sub    al,0x42
  4220cf:	mov    edi,0x80c319f8
  4220d4:	mov    edi,0x2022a89b
  4220d9:	call   FWORD PTR [edi]
  4220db:	inc    esi
  4220dc:	add    al,BYTE PTR [ebp-0x15]
  4220df:	arpl   bp,bp
  4220e1:	jmp    0x4c6:0x1becb7f3
  4220e8:	(bad)  
  4220e9:	adc    al,0xd9
  4220eb:	xchg   ebp,eax
  4220ec:	or     al,0xcf
  4220ee:	jns    0x4220d8
  4220f0:	mov    ebx,0x8257907f
  4220f5:	and    al,0x84
  4220f7:	popf   
  4220f8:	push   ecx
  4220f9:	sbb    al,0x82
  4220fb:	push   eax
  4220fc:	add    ecx,DWORD PTR [eax]
  4220fe:	sbb    al,0x6a
  422100:	imul   ebx,DWORD PTR ss:[esp+ebx*1],0x51cbc8de
  422108:	retf   
  422109:	ja     0x422142
  42210b:	(bad)  
  42210c:	ficom  WORD PTR [edx]
  42210e:	in     eax,dx
  42210f:	rol    esi,cl
  422111:	hlt    
  422112:	lods   eax,DWORD PTR ds:[esi]
  422113:	mov    bh,0x6a
  422115:	(bad)
  422119:	pop    esi
  42211a:	push   cs
  42211b:	push   ecx
  42211c:	inc    ebx
  42211d:	fwait
  42211e:	dec    edx
  42211f:	mov    ?,WORD PTR [ebp-0x40]
  422122:	div    ebp
  422124:	xor    bh,BYTE PTR [eax]
  422126:	mov    ecx,0x93c22fc7
  42212b:	ins    DWORD PTR es:[edi],dx
  42212c:	add    DWORD PTR [esi+0x104342ff],edx
  422132:	loopne 0x422101
  422134:	mov    ds:0x1ce6d48a,al
  422139:	mov    cl,0x63
  42213b:	cmp    ebx,DWORD PTR [ecx]
  42213d:	mov    cl,0x31
  42213f:	adc    BYTE PTR [esi+0x70],al
  422142:	pop    ebp
  422143:	cdq    
  422144:	jmp    0x78b2:0xfc4b2e24
  42214b:	jecxz  0x422130
  42214d:	mov    al,0x60
  42214f:	mov    ebp,0x8fe4818d
  422154:	aaa    
  422155:	xchg   ecx,eax
  422156:	sbb    DWORD PTR [eax],ecx
  422158:	mov    ecx,0xc1810bec
  42215d:	xor    ebp,DWORD PTR [ebp+0x3f2a6119]
  422163:	sbb    ecx,DWORD PTR [ebx-0x47]
  422166:	dec    ebx
  422167:	and    edi,esi
  422169:	outs   dx,DWORD PTR ds:[esi]
  42216a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42216b:	imul   edx,DWORD PTR [eax],0xcb9c8a7f
  422171:	xor    BYTE PTR [ecx-0x15],bh
  422174:	cmp    BYTE PTR [ebp+0x63d4635f],ch
  42217a:	ins    DWORD PTR es:[edi],dx
  42217b:	mov    eax,0xe3969cd3
  422180:	sub    eax,0xe8cb2d9f
  422185:	pop    es
  422186:	int3   
  422187:	add    bh,BYTE PTR [ecx]
  422189:	arpl   WORD PTR [esi+0x56943d3e],dx
  42218f:	fbld   TBYTE PTR [ecx]
  422191:	push   ss
  422192:	outs   dx,DWORD PTR ds:[esi]
  422193:	cmc    
  422194:	cmp    edi,DWORD PTR [ebx]
  422196:	cwde   
  422197:	and    DWORD PTR [ecx-0xb],edx
  42219a:	retf   
  42219b:	sub    ebx,ecx
  42219d:	dec    eax
  42219e:	xor    ebx,DWORD PTR [eax-0xf]
  4221a1:	ja     0x42219b
  4221a3:	mov    cl,bl
  4221a5:	es mov esi,edi
  4221a8:	imul   esp,DWORD PTR [ebx+0x41],0x4544dc74
  4221af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221b0:	push   ds
  4221b1:	or     DWORD PTR [edi+edi*8+0x78],ebx
  4221b5:	mov    ch,0x32
  4221b7:	(bad)  
  4221b8:	push   edi
  4221b9:	call   0x12de0156
  4221be:	pmaxsw mm2,mm6
  4221c1:	scas   al,BYTE PTR es:[edi]
  4221c2:	in     al,0x3c
  4221c4:	outs   dx,DWORD PTR ds:[esi]
  4221c5:	mov    ds:0x82c59875,eax
  4221ca:	pop    ebx
  4221cb:	mov    al,0x97
  4221cd:	xchg   edi,eax
  4221ce:	in     al,0x29
  4221d0:	inc    ebx
  4221d1:	imul   eax,DWORD PTR ds:0x19c0f85,0xa4bc973f
  4221db:	in     eax,dx
  4221dc:	pop    ebx
  4221dd:	cmp    al,0xcb
  4221df:	loopne 0x4221c7
  4221e1:	pushf  
  4221e2:	and    eax,0xca8ce44e
  4221e7:	inc    ebx
  4221e8:	rol    DWORD PTR [ebx+0x620b972c],0x5a
  4221ef:	push   ss
  4221f0:	fsubr  st,st(4)
  4221f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221f3:	adc    BYTE PTR [eax+0x17],0x8a
  4221f7:	(bad)  
  4221f8:	out    dx,al
  4221f9:	jge    0x422187
  4221fb:	lea    ecx,[edx+0x42bd1082]
  422201:	jbe    0x422191
  422203:	fistp  QWORD PTR [ebx+0x5b9f90e4]
  422209:	and    eax,0xdc71d62
  42220e:	dec    ecx
  42220f:	mov    ?,eax
  422211:	jge    0x422198
  422213:	and    eax,0xcacc448a
  422218:	mov    eax,0x685eaff2
  42221d:	sahf   
  42221e:	mov    ecx,0x5d75812d
  422223:	mov    dl,0xee
  422225:	test   BYTE PTR [esi+0x6f],cl
  422228:	xor    DWORD PTR [ebx],esp
  42222a:	ds push eax
  42222c:	xchg   ebx,eax
  42222d:	pushf  
  42222e:	sti    
  42222f:	inc    esi
  422230:	or     ebp,DWORD PTR ds:[eax]
  422233:	call   0x6623:0xc6131bfb
  42223a:	sub    BYTE PTR [ebp-0x7d],dh
  42223d:	mov    ebp,0x767db9fc
  422242:	xor    al,0xf4
  422244:	jp     0x4221eb
  422246:	jno    0x422214
  422248:	xchg   ecx,eax
  422249:	or     DWORD PTR [esi-0x205999b3],eax
  42224f:	xchg   ecx,eax
  422250:	bnd jo 0x4221d5
  422253:	xor    ecx,DWORD PTR [eax+0x35]
  422256:	int    0xf1
  422258:	test   ecx,edi
  42225a:	scas   eax,DWORD PTR es:[edi]
  42225b:	add    DWORD PTR [ecx+ebp*2+0x37bb5ed5],edx
  422262:	outs   dx,DWORD PTR ds:[esi]
  422263:	and    eax,0xd15e75e0
  422268:	push   ss
  422269:	pusha  
  42226a:	sbb    al,0xe3
  42226c:	jo     0x4222a1
  42226e:	loop   0x422233
  422270:	loopne 0x4222b8
  422272:	nop
  422273:	scas   al,BYTE PTR es:[edi]
  422274:	inc    eax
  422275:	and    eax,0x20852681
  42227a:	mov    ds:0x5170fb66,eax
  42227f:	dec    edi
  422280:	popf   
  422281:	stos   BYTE PTR es:[edi],al
  422282:	and    edi,esi
  422284:	arpl   bx,ax
  422286:	jg     0x4222c6
  422288:	cmp    al,BYTE PTR [edi+eiz*4+0x72]
  42228c:	scas   eax,DWORD PTR es:[edi]
  42228d:	jl     0x4222b4
  42228f:	cwde   
  422290:	jns    0x4222c8
  422292:	cdq    
  422293:	cmp    ebp,esi
  422295:	sub    DWORD PTR [ebp+0x5e71fe88],ebx
  42229b:	in     al,0x49
  42229d:	inc    eax
  42229e:	popf   
  42229f:	retf   
  4222a0:	leave  
  4222a1:	and    eax,DWORD PTR [ecx+esi*1-0x6f41003a]
  4222a8:	fisttp DWORD PTR [edx+0xb]
  4222ab:	inc    eax
  4222ac:	add    DWORD PTR [edi],ecx
  4222ae:	pop    ecx
  4222af:	ret    0x7073
  4222b2:	sub    ecx,esi
  4222b4:	xor    BYTE PTR [ebx],ch
  4222b6:	sbb    DWORD PTR [ebx+0x5065dab0],ecx
  4222bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222bd:	scas   al,BYTE PTR es:[edi]
  4222be:	add    eax,0x59029e79
  4222c3:	push   ss
  4222c4:	mov    ebx,0x9c704593
  4222c9:	xlat   BYTE PTR ds:[ebx]
  4222ca:	int3   
  4222cb:	out    dx,al
  4222cc:	sbb    ecx,DWORD PTR [esi]
  4222ce:	or     eax,0xe960319c
  4222d3:	or     BYTE PTR [ebx],cl
  4222d5:	imul   BYTE PTR [eax]
  4222d7:	cli    
  4222d8:	cmp    edi,eax
  4222da:	outs   dx,DWORD PTR ds:[esi]
  4222db:	lods   al,BYTE PTR ds:[esi]
  4222dc:	jb     0x422277
  4222de:	pop    esi
  4222df:	add    eax,0xd174c9c
  4222e4:	daa    
  4222e5:	repnz mov ebx,0x70e62bb6
  4222eb:	pushf  
  4222ec:	inc    BYTE PTR [ebp-0x58]
  4222ef:	loop   0x422354
  4222f1:	test   DWORD PTR [ebx-0x7fe0e6ac],edi
  4222f7:	icebp  
  4222f8:	jle    0x422332
  4222fa:	call   0xd9ee:0x48120ac2
  422301:	stos   BYTE PTR es:[edi],al
  422302:	and    bh,bh
  422304:	mov    ds,WORD PTR [ebp-0xa103e7b]
  42230a:	add    dl,bh
  42230c:	jmp    ecx
  42230e:	sub    al,0x1e
  422310:	out    0x4a,al
  422312:	rcr    BYTE PTR [edi+0xc],cl
  422315:	fst    QWORD PTR ds:0x91ab624
  42231b:	jg     0x422365
  42231d:	or     edi,ecx
  42231f:	iret   
  422320:	test   al,0xd1
  422322:	(bad)  
  422323:	cld    
  422324:	cmp    ebx,DWORD PTR [edi-0x15a881c3]
  42232a:	in     al,0xe6
  42232c:	icebp  
  42232d:	sbb    BYTE PTR [eax+0x4eee0500],dh
  422333:	xchg   BYTE PTR [ebx+edx*1],ah
  422336:	(bad)  
  422337:	adc    eax,0xd9f8cfe6
  42233c:	mov    ebp,0x161311d2
  422341:	data16 jg 0x4222e4
  422344:	dec    esi
  422345:	adc    ebp,DWORD PTR [edi+edx*1]
  422348:	pop    ecx
  422349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42234a:	cmp    eax,0x27ecac05
  42234f:	push   ecx
  422350:	xor    DWORD PTR [ebx],edx
  422352:	mov    edx,0xe262d711
  422357:	iret   
  422358:	fistp  QWORD PTR [edi+eax*4+0x3e]
  42235c:	mov    al,0x2f
  42235e:	add    DWORD PTR [eax-0x3c],eax
  422361:	push   cs
  422362:	xchg   esp,eax
  422363:	bound  ebx,QWORD PTR [eax+ebx*2+0x1c]
  422367:	imul   ecx,DWORD PTR [esi],0x9216fdcf
  42236d:	(bad)  
  42236f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  422371:	into   
  422372:	rol    ecx,cl
  422374:	leave  
  422375:	aad    0xb4
  422377:	div    BYTE PTR [eax+ebp*8-0x6e]
  42237b:	adc    eax,0x729a041
  422380:	cdq    
  422381:	adc    edi,DWORD PTR [edx]
  422383:	sbb    eax,0xabcbb9e2
  422388:	nop
  422389:	xchg   ebx,eax
  42238a:	shl    DWORD PTR [ecx+edx*1+0x19],1
  42238e:	mov    DWORD PTR [eax-0x73],0x1745d2e7
  422395:	xor    al,0xd5
  422397:	icebp  
  422398:	ja     0x4223a0
  42239a:	shl    dl,cl
  42239c:	mov    eax,0x9dba57db
  4223a1:	cdq    
  4223a2:	js     0x4223c1
  4223a4:	mov    cl,0x6e
  4223a6:	test   al,0xad
  4223a8:	fild   QWORD PTR [esi]
  4223aa:	mov    ds:0x57c2f5e6,eax
  4223af:	(bad)  
  4223b0:	cmp    edx,eax
  4223b2:	aas    
  4223b3:	out    0x3d,eax
  4223b5:	in     al,dx
  4223b6:	test   BYTE PTR [edx+0x38afda57],bh
  4223bc:	mov    dl,BYTE PTR [esi]
  4223be:	push   0x29
  4223c0:	mov    dh,0x15
  4223c2:	ins    DWORD PTR es:[edi],dx
  4223c3:	loopne 0x42236f
  4223c5:	sbb    al,0xef
  4223c7:	aas    
  4223c8:	les    ebx,FWORD PTR [edx-0x7a2bea3c]
  4223ce:	rol    BYTE PTR [ebx-0x7e],1
  4223d1:	mov    eax,ds:0x53185ecc
  4223d6:	sti    
  4223d7:	(bad)  
  4223d8:	dec    edx
  4223d9:	jno    0x4223d8
  4223db:	ficom  DWORD PTR [eax+0x44]
  4223de:	(bad)  
  4223df:	fdivr  st(2),st
  4223e1:	mov    ebx,0x7afac4a4
  4223e6:	xor    cl,BYTE PTR [edx]
  4223e8:	cmp    ch,BYTE PTR [ecx-0x6d]
  4223eb:	mov    ch,0x92
  4223ed:	mov    bl,0x2a
  4223ef:	addr16 pusha 
  4223f1:	leave  
  4223f2:	or     eax,0x1935852b
  4223f7:	push   0xe
  4223f9:	push   ebp
  4223fa:	push   edi
  4223fb:	stos   DWORD PTR es:[edi],eax
  4223fc:	push   esi
  4223fd:	es aas 
  4223ff:	scas   al,BYTE PTR es:[edi]
  422400:	mov    cl,0x73
  422402:	xchg   ecx,eax
  422403:	les    ebx,FWORD PTR [edx+ecx*2+0x6e]
  422407:	test   BYTE PTR ds:0xd41ed364,ah
  42240d:	push   0x5e5dc250
  422412:	sbb    al,0x66
  422414:	fwait
  422415:	or     ebx,DWORD PTR [ebp+0x3d]
  422418:	sub    al,0xef
  42241a:	adc    esi,DWORD PTR [ecx]
  42241c:	mov    ds:0xb72fb521,eax
  422421:	dec    ebx
  422422:	int    0x95
  422424:	xor    ch,dh
  422426:	mov    ah,0x73
  422428:	dec    edi
  422429:	sub    DWORD PTR [ebx],eax
  42242b:	sahf   
  42242c:	xor    BYTE PTR [ecx-0x11b03929],bl
  422432:	jne    0x422486
  422434:	pop    si
  422436:	ins    BYTE PTR es:[edi],dx
  422437:	(bad)  [esi]
  422439:	dec    edi
  42243a:	add    eax,0x4938d8a4
  42243f:	dec    ecx
  422440:	xchg   DWORD PTR [eax-0x636285a7],ecx
  422446:	push   edx
  422447:	inc    esi
  422448:	xchg   edi,eax
  422449:	inc    edi
  42244a:	inc    esp
  42244b:	push   cs
  42244c:	add    edx,esi
  42244e:	xchg   ecx,eax
  42244f:	stc    
  422450:	and    BYTE PTR [ebx],0x5
  422453:	in     al,dx
  422454:	out    dx,eax
  422455:	adc    al,0x1b
  422457:	fwait
  422458:	push   ds
  422459:	xchg   al,bh
  42245b:	jne    0x422487
  42245d:	xlat   BYTE PTR ds:[ebx]
  42245e:	xor    BYTE PTR [edx+0x4d],ah
  422461:	call   0xa7745c41
  422466:	fwait
  422467:	sub    al,0xf6
  422469:	or     DWORD PTR [edx],edi
  42246b:	icebp  
  42246c:	mov    esi,0x79150811
  422471:	and    BYTE PTR [esi],0x61
  422474:	pop    edx
  422475:	or     dl,BYTE PTR [esi-0x2e7329e5]
  42247b:	loop   0x422460
  42247d:	aas    
  42247e:	sbb    bh,ah
  422480:	and    DWORD PTR [esp+edx*8+0x60],ebx
  422484:	call   0x98d09ba3
  422489:	leave  
  42248a:	(bad)  
  42248b:	stos   DWORD PTR es:[edi],eax
  42248c:	in     al,dx
  42248d:	ret    0xbd52
  422490:	mov    dh,0xac
  422493:	addr16 gs push ebp
  422496:	and    DWORD PTR [ebp-0x4c0218c9],ebp
  42249c:	fs aas 
  42249e:	ret    
  42249f:	mov    ah,0xb2
  4224a1:	dec    dl
  4224a3:	out    0xf,al
  4224a5:	sub    eax,DWORD PTR [eax+0x2]
  4224a8:	popa   
  4224a9:	jecxz  0x422513
  4224ab:	cdq    
  4224ac:	dec    esp
  4224ad:	mul    BYTE PTR [ecx-0x6a]
  4224b0:	adc    BYTE PTR [ecx+0x1f],al
  4224b3:	xor    eax,edi
  4224b5:	fbld   TBYTE PTR [edi-0x789fa9ab]
  4224bb:	and    BYTE PTR [ecx],ah
  4224bd:	lahf   
  4224be:	jnp    0x4224e0
  4224c0:	jb     0x4224f9
  4224c2:	and    edx,DWORD PTR [esi+esi*1+0x49]
  4224c6:	aam    0x7
  4224c8:	int3   
  4224c9:	or     al,0x12
  4224cb:	rol    ah,1
  4224cd:	in     eax,0xc2
  4224cf:	adc    eax,DWORD PTR [ebp+0x2f]
  4224d2:	(bad)  
  4224d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224d4:	cli    
  4224d5:	and    esi,DWORD PTR [ebp+0x549c6fe3]
  4224db:	sub    eax,0x4db38ddf
  4224e0:	sahf   
  4224e1:	jae    0x422467
  4224e3:	(bad)  
  4224e4:	cmp    eax,0x7b468fd6
  4224e9:	sbb    eax,0x70d6c79f
  4224ee:	inc    eax
  4224ef:	mov    cs,WORD PTR [edi-0x58174d90]
  4224f5:	xor    edi,ebp
  4224f7:	sub    BYTE PTR [eax-0x69],cl
  4224fa:	rcr    ebp,cl
  4224fc:	jp     0x422526
  4224fe:	nop
  4224ff:	xchg   ebx,eax
  422500:	rol    edi,cl
  422502:	or     DWORD PTR [ebx+0x16],esi
  422505:	dec    esi
  422506:	mov    eax,ds:0xc7e4995f
  42250b:	jl     0x4224d5
  42250d:	adc    DWORD PTR [ebp-0x7d],ecx
  422510:	call   0xd7ad89a5
  422515:	pop    edi
  422516:	xlat   BYTE PTR ds:[ebx]
  422517:	sbb    DWORD PTR [ebx+0x153621ee],esp
  42251d:	jmp    FWORD PTR cs:[edi]
  422520:	je     0x4224fb
  422522:	jne    0x42258d
  422524:	aam    0xe7
  422526:	mov    bh,BYTE PTR ss:[ebx-0x9314a51]
  42252d:	and    BYTE PTR [ebp+0x0],0x60
  422531:	mov    ah,0xcd
  422533:	sbb    eax,0xd5336821
  422538:	mov    ch,0x7d
  42253a:	or     BYTE PTR [edx],bh
  42253c:	adc    esi,DWORD PTR [eax-0x60]
  42253f:	sbb    al,0x41
  422541:	dec    edi
  422542:	daa    
  422543:	pop    ds
  422544:	xor    al,0xa0
  422546:	xchg   edx,eax
  422547:	mov    eax,ds:0x26fc70cb
  42254c:	(bad)  
  42254e:	mov    bl,0x83
  422550:	cmp    DWORD PTR [esi+0x53f9dc27],edx
  422556:	jbe    0x422504
  422558:	cmc    
  422559:	stos   BYTE PTR es:[edi],al
  42255a:	ds xor ecx,eax
  42255d:	dec    ebp
  42255e:	mov    ds:0x754e36da,al
  422563:	xor    eax,ebp
  422565:	loop   0x422573
  422567:	mov    esp,0x9866e4b0
  42256c:	mov    edi,0x15d20bc6
  422571:	cwde   
  422572:	and    DWORD PTR [ecx+0x6e],eax
  422575:	pop    esi
  422576:	xor    esi,DWORD PTR [esp]
  422579:	jecxz  0x4225ed
  42257b:	js     0x422595
  42257d:	push   ds
  42257e:	rol    BYTE PTR [edi-0x380bd52d],0xfc
  422585:	sbb    edi,eax
  422587:	jo     0x4225e1
  422589:	mov    esp,0xbedd0e95
  42258e:	dec    ebp
  42258f:	dec    esi
  422590:	pop    ebp
  422591:	sub    eax,0xb9f7fbfb
  422596:	and    eax,0xa2b684c2
  42259b:	pop    eax
  42259c:	pusha  
  42259d:	sahf   
  42259e:	and    bl,bh
  4225a0:	jp     0x4225e6
  4225a2:	push   eax
  4225a3:	cmp    BYTE PTR [edi-0x34],cl
  4225a6:	jmp    0xf5a36097
  4225ab:	test   DWORD PTR [ebx],ebp
  4225ad:	outs   dx,BYTE PTR ds:[esi]
  4225ae:	rcl    BYTE PTR [edi+edi*1],0xc3
  4225b2:	cld    
  4225b3:	mov    cl,0x2c
  4225b5:	push   cs
  4225b6:	fsub   st,st(2)
  4225b8:	dec    eax
  4225b9:	pop    esi
  4225ba:	inc    edi
  4225bb:	pop    ebp
  4225bc:	lods   eax,DWORD PTR ds:[esi]
  4225bd:	scas   al,BYTE PTR es:[edi]
  4225be:	push   edi
  4225bf:	ins    BYTE PTR es:[edi],dx
  4225c0:	shr    ebx,0x12
  4225c3:	add    eax,0x39a1423
  4225c8:	repz lds edi,FWORD PTR [esi]
  4225cb:	lods   eax,DWORD PTR ds:[esi]
  4225cc:	(bad)  
  4225cd:	mov    bl,0x89
  4225cf:	pop    edx
  4225d0:	and    edi,DWORD PTR [esi+0x1a]
  4225d3:	and    bh,BYTE PTR [esi+0x39]
  4225d6:	xor    ch,BYTE PTR [ebp+0x71]
  4225d9:	sub    eax,0x6837ebd0
  4225de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225df:	sbb    ebx,DWORD PTR [ecx+0xf8a98ef]
  4225e5:	pop    ss
  4225e6:	jl     0x422577
  4225e8:	pop    es
  4225e9:	push   edi
  4225ea:	test   eax,0xd6fc3121
  4225ef:	inc    eax
  4225f0:	addr16 sbb eax,0x871b2b3b
  4225f6:	jns    0x42263b
  4225f8:	sbb    DWORD PTR [ebx-0x53],ebp
  4225fb:	imul   edi,ecx,0x28
  4225fe:	sbb    eax,0x626a7a30
  422603:	mov    eax,0x36172b3b
  422608:	sbb    al,0xf6
  42260a:	mov    al,ds:0x963647d3
  42260f:	mov    dl,0x7c
  422611:	sti    
  422612:	and    BYTE PTR [edi-0x8],dh
  422615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422616:	ins    BYTE PTR es:[edi],dx
  422617:	ins    DWORD PTR es:[edi],dx
  422618:	lods   al,BYTE PTR ds:[esi]
  422619:	push   edi
  42261a:	shl    BYTE PTR [edi],0x7b
  42261d:	fisub  WORD PTR [ecx+0x5d22d6d0]
  422623:	mov    edi,0xaf480185
  422628:	pusha  
  422629:	int3   
  42262a:	mov    al,0x99
  42262c:	es ins DWORD PTR es:[edi],dx
  42262e:	or     al,0x61
  422630:	and    bh,BYTE PTR [eax]
  422632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422633:	test   al,0xbf
  422635:	xor    DWORD PTR [ecx+eax*4],ebx
  422638:	mov    bl,cl
  42263a:	jo     0x422606
  42263c:	jnp    0x422629
  42263e:	out    0xb0,al
  422640:	push   edi
  422641:	outs   dx,DWORD PTR ds:[esi]
  422642:	bound  esp,QWORD PTR [ebx-0x76]
  422645:	push   ebp
  422646:	cdq    
  422647:	cmp    eax,0x11548064
  42264c:	dec    ebx
  42264d:	adc    al,0xab
  42264f:	out    0x6a,eax
  422651:	mov    ah,0xa4
  422653:	push   0xed5f900a
  422658:	popa   
  422659:	xchg   esi,eax
  42265a:	dec    ebp
  42265b:	add    esp,edx
  42265d:	mov    bl,0x84
  42265f:	repnz dec esi
  422661:	ror    DWORD PTR [ebx-0x5f],0x63
  422665:	sub    eax,0xca5ad6e0
  42266a:	sbb    esi,esp
  42266c:	inc    edx
  42266d:	pop    ss
  42266e:	fisttp DWORD PTR [edx+edi*1+0x62]
  422672:	jg     0x422651
  422674:	test   al,0x5e
  422676:	sub    al,0x56
  422678:	push   ecx
  422679:	lea    esp,[ebx+edi*8]
  42267c:	xchg   cl,ah
  42267e:	fist   WORD PTR [edx-0x7b]
  422681:	ror    DWORD PTR gs:[esi],0xdf
  422685:	daa    
  422686:	push   es
  422687:	fst    DWORD PTR [di]
  42268a:	stos   DWORD PTR es:[edi],eax
  42268b:	inc    ecx
  42268c:	(bad)  
  42268d:	js     0x4226d8
  42268f:	push   esp
  422690:	rcl    DWORD PTR ds:0x1d0e62c7,cl
  422696:	test   al,0x9f
  422698:	fcomi  st,st(4)
  42269a:	inc    edi
  42269b:	popa   
  42269c:	xchg   DWORD PTR [ebp-0x38be494f],ebx
  4226a2:	test   DWORD PTR [ebx+0x36],esp
  4226a5:	out    dx,eax
  4226a6:	push   ebx
  4226a7:	es mov edx,0x196d0223
  4226ad:	pushf  
  4226ae:	dec    esi
  4226af:	daa    
  4226b0:	sub    bh,BYTE PTR [esi-0x77]
  4226b3:	xchg   BYTE PTR [eax-0x5c],cl
  4226b6:	enter  0xf33c,0x7e
  4226ba:	cmp    eax,0xc7bf8061
  4226bf:	mov    ch,0x12
  4226c1:	ficomp DWORD PTR [ecx+edx*4-0x51]
  4226c5:	aaa    
  4226c6:	xchg   ecx,eax
  4226c7:	inc    edi
  4226c8:	lock imul ecx,DWORD PTR [bp+0x58],0x23
  4226ce:	sub    bl,ch
  4226d0:	push   esp
  4226d1:	leave  
  4226d2:	jmp    0x47819293
  4226d7:	imul   eax,DWORD PTR [edx+ebp*2],0xb95f9526
  4226de:	mov    esi,0xaa087d7
  4226e3:	add    eax,0x6fcbe144
  4226e8:	lods   al,BYTE PTR ds:[esi]
  4226e9:	push   ss
  4226ea:	xor    al,0xfe
  4226ec:	ret    
  4226ed:	test   eax,0x628221e2
  4226f2:	xchg   DWORD PTR [ebx],ecx
  4226f4:	jns    0x422745
  4226f6:	sub    al,0x25
  4226f8:	sub    ah,BYTE PTR [eax-0x50]
  4226fb:	gs add bl,dl
  4226fe:	mov    bl,0xc9
  422700:	xchg   edx,eax
  422701:	pop    esp
  422702:	push   ebp
  422703:	mov    eax,ds:0xc8142a25
  422708:	adc    eax,0x5cb8aa88
  42270d:	shl    edi,1
  42270f:	sar    DWORD PTR [esi+ebx*4-0x44],1
  422713:	arpl   bp,sp
  422715:	(bad)  
  422716:	adc    al,0x3f
  422718:	std    
  422719:	(bad)  
  42271a:	outs   dx,BYTE PTR ds:[esi]
  42271b:	jnp    0x4226cd
  42271d:	sub    dh,BYTE PTR [ebx-0x12]
  422720:	adc    BYTE PTR [eax-0x31],ch
  422723:	or     ch,bl
  422725:	jecxz  0x42277c
  422727:	xchg   edx,eax
  422728:	call   0x162a7003
  42272d:	xchg   BYTE PTR [edi-0x544613eb],dh
  422733:	adc    eax,0xbf587424
  422738:	int    0x4
  42273a:	mov    eax,0xd46851e8
  42273f:	add    eax,0xc4131efc
  422744:	pop    ebp
  422745:	test   eax,0x77fd1ea5
  42274a:	bound  edx,QWORD PTR [ebx]
  42274c:	loop   0x422745
  42274e:	push   esi
  42274f:	jmp    0x8b5d:0x786ec58f
  422756:	mov    ch,0xe2
  422758:	jp     0x4227cb
  42275a:	popf   
  42275b:	rcr    DWORD PTR [ebx+0x2c40bcdf],0xa4
  422762:	je     0x42276f
  422764:	or     DWORD PTR ds:0xa9ad2033,ebp
  42276a:	jmp    DWORD PTR [edx-0x56152759]
  422770:	outs   dx,DWORD PTR ds:[esi]
  422771:	xor    al,0xc4
  422773:	mov    bh,0x69
  422775:	jmp    0x9aaf:0x89c9bd2f
  42277c:	rcr    DWORD PTR [ebp+edi*1-0x7f123e7],0x59
  422784:	jbe    0x42272c
  422786:	in     eax,0x46
  422788:	call   0x191b15cc
  42278d:	loopne 0x4227d8
  42278f:	je     0x4227f2
  422791:	push   es
  422792:	push   cs
  422793:	xchg   ecx,eax
  422794:	or     dh,ch
  422796:	and    BYTE PTR [esi-0x51],bl
  422799:	sbb    al,0x52
  42279b:	jmp    0x42272e
  42279d:	push   esp
  42279e:	xor    al,0x15
  4227a0:	popf   
  4227a1:	jnp    0x4227d1
  4227a3:	neg    BYTE PTR [eax+ecx*1]
  4227a6:	sbb    eax,0x30fd34cf
  4227ab:	jb     0x4227ab
  4227ad:	out    0x40,eax
  4227af:	xchg   ebp,eax
  4227b0:	inc    esp
  4227b1:	call   FWORD PTR [esi]
  4227b3:	mov    ecx,0xcadcba3e
  4227b8:	mov    eax,ds:0x9120b0b6
  4227bd:	fwait
  4227be:	cmc    
  4227bf:	ret    0x9a19
  4227c2:	fdivr  st,st(3)
  4227c4:	and    ebp,edx
  4227c6:	add    al,0x42
  4227c8:	mov    ds:0x9b66527d,al
  4227cd:	repnz mov ecx,0x1e815ecf
  4227d3:	call   0x9a6780a0
  4227d8:	mov    ebx,0xb1fd503c
  4227dd:	shl    BYTE PTR [edx+0x9],1
  4227e0:	xor    al,dh
  4227e2:	cs (bad) 
  4227e4:	sub    eax,DWORD PTR [edx-0x6593a414]
  4227ea:	call   0x4edab97a
  4227ef:	fbstp  TBYTE PTR [esi]
  4227f1:	jp     0x422823
  4227f3:	pop    esp
  4227f4:	rcr    BYTE PTR ds:0x5064c63b,1
  4227fa:	cmc    
  4227fb:	out    0x50,al
  4227fd:	shl    DWORD PTR ds:0x3820302d,1
  422803:	not    BYTE PTR [ebx+0x57bb8ee9]
  422809:	dec    edi
  42280a:	mov    DWORD PTR [edx+0x42378dd0],ebp
  422810:	into   
  422811:	clc    
  422812:	out    0xe6,eax
  422814:	mov    al,ds:0x926c531e
  422819:	cld    
  42281a:	push   0x71
  42281c:	scas   eax,DWORD PTR es:[edi]
  42281d:	mov    ebx,0x1225aaa4
  422822:	add    ch,BYTE PTR [ebp+0x2d3006b3]
  422828:	mov    eax,0xf5ae334d
  42282d:	cmp    dl,dh
  42282f:	test   al,0x6a
  422831:	xor    DWORD PTR [ecx],edi
  422833:	cmp    al,0x5d
  422835:	int    0x7e
  422837:	(bad)  
  422838:	in     eax,0xef
  42283a:	jnp    0x42289b
  42283c:	xchg   BYTE PTR [eax],bl
  42283e:	enter  0x5f2c,0x35
  422842:	sub    al,0xd5
  422844:	stos   DWORD PTR es:[edi],eax
  422845:	ficomp WORD PTR [edx+0x4af38bea]
  42284b:	sub    DWORD PTR [ebx-0x64],0x33
  42284f:	(bad)  
  422850:	cmp    BYTE PTR [ecx+edi*1],dl
  422853:	inc    edi
  422854:	add    edi,ebp
  422856:	das    
  422857:	pop    esi
  422858:	sub    DWORD PTR [esi-0x35000eb9],ecx
  42285e:	sbb    bl,ch
  422860:	aam    0x37
  422862:	push   eax
  422863:	mov    esp,0xef347fe2
  422868:	inc    ecx
  422869:	out    dx,eax
  42286a:	inc    ax
  42286c:	adc    al,BYTE PTR [ecx+0x411bedcf]
  422872:	arpl   WORD PTR [eax+0x46],cx
  422875:	push   es
  422876:	mov    cl,0x87
  422878:	jmp    0x8f20c2cd
  42287d:	sbb    BYTE PTR [edx+0x5bbc4eda],ah
  422883:	or     al,0xcd
  422885:	push   eax
  422886:	dec    ebp
  422887:	sub    al,0x4f
  422889:	fmul   st(6),st
  42288b:	(bad)  
  42288c:	xlat   BYTE PTR ds:[ebx]
  42288d:	pop    ecx
  42288e:	mov    ds:0xf6808cb5,al
  422893:	inc    edx
  422894:	mul    bl
  422896:	aaa    
  422897:	daa    
  422898:	ffree  st(0)
  42289a:	addr16 add eax,0x729f5d
  4228a0:	into   
  4228a1:	fidiv  WORD PTR [edi-0x4d]
  4228a4:	sub    bh,BYTE PTR [ecx]
  4228a6:	mov    esi,0x2ade082e
  4228ab:	mov    WORD PTR [esi-0x283bce9b],?
  4228b1:	xchg   ebx,eax
  4228b2:	inc    esi
  4228b3:	and    al,0xe8
  4228b5:	into   
  4228b6:	shl    BYTE PTR [esi-0x6a7bf5e2],0x32
  4228bd:	cmp    DWORD PTR fs:[ecx],edi
  4228c0:	clc    
  4228c1:	mov    esi,0xdd52c49c
  4228c6:	enter  0x357a,0xd3
  4228ca:	sbb    al,0x45
  4228cc:	push   edx
  4228cd:	mov    ds:0xa68182ad,al
  4228d2:	xchg   edx,eax
  4228d3:	nop
  4228d4:	call   0x4f175434
  4228d9:	and    edx,ebx
  4228db:	fwait
  4228dc:	mov    bl,0x9c
  4228de:	imul   ebp,ebp,0x38
  4228e1:	adc    eax,0xdf4122f7
  4228e6:	int3   
  4228e7:	mov    ds:0xf6ce60e5,al
  4228ec:	ins    DWORD PTR es:[edi],dx
  4228ed:	fld    TBYTE PTR [ebx+0x6800fcef]
  4228f3:	mov    eax,0x3f067908
  4228f8:	add    BYTE PTR [esi-0x26ad9de2],al
  4228fe:	es scas eax,DWORD PTR es:[edi]
  422900:	and    eax,0x1e604b59
  422905:	pop    ebp
  422906:	test   eax,0xbac13301
  42290b:	adc    DWORD PTR [ebp-0x2fd40033],ecx
  422911:	mov    eax,DWORD PTR [ebp-0x1c]
  422914:	jmp    0x422972
  422919:	mov    edx,DWORD PTR [ebp+0x14]
  42291c:	xor    DWORD PTR [eax],edx
  42291e:	mov    DWORD PTR ds:0x42a17b,0x16
  422928:	cmp    DWORD PTR ds:0x42a17b,0x0
  42292f:	je     0x42295d
  422935:	cmp    DWORD PTR ds:0x42a17b,0x25
  42293c:	jbe    0x42295d
  422942:	jmp    0x42294d
  422947:	call   DWORD PTR ds:0x42a2a7
  42294d:	mov    eax,ds:0x42a17b
  422952:	dec    eax
  422953:	mov    ds:0x42a17b,eax
  422958:	jmp    0x422928
  42295d:	mov    eax,DWORD PTR [ebp-0x4]
  422960:	mov    DWORD PTR [ebp-0x1c],eax
  422963:	mov    eax,DWORD PTR [ebp+0x10]
  422966:	xor    eax,ecx
  422968:	mov    edx,0xffcd8d11
  42296d:	sub    edx,eax
  42296f:	mov    eax,DWORD PTR [ebp-0x1c]
  422972:	add    DWORD PTR [eax],edx
  422974:	mov    eax,DWORD PTR [ebp-0x4]
  422977:	mov    edx,DWORD PTR [ebp-0x8]
  42297a:	add    edx,DWORD PTR [eax]
  42297c:	mov    DWORD PTR [ebp-0x8],edx
  42297f:	mov    eax,DWORD PTR [ebp+0xc]
  422982:	mov    edx,DWORD PTR [ebp+0xc]
  422985:	xor    edx,ecx
  422987:	xor    eax,ecx
  422989:	lea    eax,[eax+edx*1+0x64e5de]
  422990:	mov    edx,DWORD PTR [ebp+0xc]
  422993:	xor    edx,ecx
  422995:	add    edx,esi
  422997:	imul   eax,edx
  42299a:	mov    edx,DWORD PTR [ebp+0xc]
  42299d:	xor    edx,ecx
  42299f:	sub    edx,eax
  4229a1:	mov    eax,DWORD PTR [ebp-0x4]
  4229a4:	add    edx,esi
  4229a6:	cmp    DWORD PTR [eax],edx
  4229a8:	mov    eax,DWORD PTR [ebp-0x4]
  4229ab:	jg     0x4229c8
  4229b1:	mov    DWORD PTR [ebp-0x1c],eax
  4229b4:	mov    eax,DWORD PTR [ebp+0x10]
  4229b7:	xor    eax,ecx
  4229b9:	mov    edx,0xffcd8d11
  4229be:	sub    edx,eax
  4229c0:	mov    eax,DWORD PTR [ebp-0x1c]
  4229c3:	jmp    0x4229cf
  4229c8:	mov    edx,DWORD PTR [ebp+0x10]
  4229cb:	xor    edx,ecx
  4229cd:	add    edx,esi
  4229cf:	add    DWORD PTR [eax],edx
  4229d1:	mov    eax,DWORD PTR [ebp-0x8]
  4229d4:	mov    edx,DWORD PTR [ebp-0x10]
  4229d7:	mov    eax,DWORD PTR [eax]
  4229d9:	xor    edx,ecx
  4229db:	add    edx,0x3272ee
  4229e1:	not    edx
  4229e3:	and    eax,edx
  4229e5:	mov    DWORD PTR [ebp-0x4],eax
  4229e8:	movsx  eax,BYTE PTR [eax+0x1]
  4229ec:	cdq    
  4229ed:	add    eax,ebx
  4229ef:	adc    edx,0xffffffff
  4229f2:	xor    eax,edi
  4229f4:	xor    edx,0x0
  4229f7:	cmp    eax,0x70941e0f
  4229fc:	jne    0x423882
  422a02:	cmp    edx,0xffffffff
  422a05:	jne    0x423882
  422a0b:	mov    eax,DWORD PTR [ebp-0x4]
  422a0e:	movsx  eax,BYTE PTR [eax]
  422a11:	cdq    
  422a12:	add    eax,ebx
  422a14:	adc    edx,0xffffffff
  422a17:	xor    eax,edi
  422a19:	xor    edx,0x0
  422a1c:	cmp    eax,0x70941e1c
  422a21:	jne    0x423882
  422a27:	cmp    edx,0xffffffff
  422a2a:	je     0x423899
  422a30:	jmp    0x423882
  422a35:	sbb    dl,dh
  422a37:	pop    edx
  422a38:	rcl    DWORD PTR [eax-0x6348682f],1
  422a3e:	jae    0x422a78
  422a40:	mov    DWORD PTR [ebx+0x74aedad],ebp
  422a46:	mov    edi,DWORD PTR [ecx+0x7a]
  422a49:	dec    ebp
  422a4a:	je     0x422ac6
  422a4c:	jp     0x422a5a
  422a4e:	(bad)  
  422a4f:	mov    esi,0x7733d192
  422a54:	jle    0x422abf
  422a56:	add    cl,BYTE PTR [eax+0x13519653]
  422a5c:	int    0x6a
  422a5e:	pop    ebp
  422a5f:	push   edi
  422a60:	jae    0x4229ff
  422a62:	imul   ebx,DWORD PTR [edi],0xef4f3b7c
  422a68:	mov    dh,0xe0
  422a6a:	and    eax,0x517e43d9
  422a6f:	lahf   
  422a70:	ficomp WORD PTR [eax+ecx*2]
  422a73:	fmul   QWORD PTR [ebp+0x6f407c44]
  422a79:	js     0x422adc
  422a7b:	(bad)  [edx-0xd610112]
  422a81:	jl     0x422a14
  422a83:	loope  0x422aa5
  422a85:	mov    bl,0x29
  422a87:	outs   dx,BYTE PTR ds:[esi]
  422a88:	mov    DWORD PTR [ebx],esi
  422a8a:	ret    0x63e7
  422a8d:	scas   al,BYTE PTR es:[edi]
  422a8e:	stos   DWORD PTR es:[edi],eax
  422a8f:	(bad)  
  422a90:	iret   
  422a91:	test   eax,0x696c7cee
  422a96:	outs   dx,BYTE PTR ds:[esi]
  422a97:	xchg   edi,eax
  422a98:	and    al,0x31
  422a9a:	data16 xchg BYTE PTR [eax+0x7509aef8],bh
  422aa1:	mov    esp,0x8733de29
  422aa6:	out    0x3,eax
  422aa8:	adc    eax,0x2754a752
  422aad:	add    DWORD PTR [esi+0x6346c38d],0x51
  422ab4:	mov    ah,0xfe
  422ab6:	xchg   BYTE PTR [esi+0x3cc4d2b],ah
  422abc:	dec    ebx
  422abd:	jle    0x422b1b
  422abf:	imul   eax,DWORD PTR [edi-0x7c],0xf58f9d89
  422ac6:	add    al,0xe0
  422ac8:	add    ebp,0xe44d633d
  422ace:	jmp    0x813f:0x34702c98
  422ad5:	cdq    
  422ad6:	stos   BYTE PTR es:[edi],al
  422ad7:	outs   dx,BYTE PTR ds:[esi]
  422ad8:	xchg   ecx,edi
  422ada:	lock add BYTE PTR [ecx-0x43a2cc7f],ch
  422ae1:	sbb    bh,al
  422ae3:	fdiv   st(3),st
  422ae5:	mov    al,BYTE PTR [eax]
  422ae7:	std    
  422ae8:	cld    
  422ae9:	cs stos BYTE PTR es:[edi],al
  422aeb:	pop    ds
  422aec:	mov    al,ds:0x8ee016cf
  422af1:	ret    
  422af2:	fstp   DWORD PTR [esi+0x2d1e2a38]
  422af8:	jno    0x422a99
  422afa:	mov    BYTE PTR [edi+0x6403a5de],ch
  422b00:	cld    
  422b01:	jmp    0x653b:0x90226c73
  422b08:	arpl   WORD PTR [esi-0x4883a5d7],bx
  422b0e:	clc    
  422b0f:	mov    BYTE PTR [eax+edx*4+0x1003b90],bh
  422b16:	sub    bl,0xa3
  422b19:	sar    BYTE PTR [ebx+esi*8+0x21],1
  422b1d:	stos   BYTE PTR es:[edi],al
  422b1e:	repz and ebp,ecx
  422b21:	jecxz  0x422b7a
  422b23:	shr    BYTE PTR [edx+0x22ea1f23],cl
  422b29:	ret    0x4325
  422b2c:	sbb    dl,dh
  422b2e:	sbb    BYTE PTR [esi-0x63],bl
  422b31:	icebp  
  422b32:	not    ch
  422b34:	repnz sbb DWORD PTR [ecx-0x19a2ff5e],0x64264ea0
  422b3f:	push   ebx
  422b40:	dec    ecx
  422b41:	xchg   edx,eax
  422b42:	mov    ds,ecx
  422b44:	add    esp,DWORD PTR [edx-0x4e40c34]
  422b4a:	int3   
  422b4b:	lea    eax,[esi]
  422b4d:	mov    DWORD PTR [bx+si+0x6e],esi
  422b51:	add    ebx,ebx
  422b53:	lds    eax,FWORD PTR [bp+si-0x4a]
  422b57:	lock dec ebx
  422b59:	adc    edi,DWORD PTR [ebx+ebx*2+0x67]
  422b5d:	jge    0x422afc
  422b5f:	mov    al,0xa5
  422b61:	jno    0x422b6e
  422b63:	mov    edi,0x9ce6b0b
  422b68:	and    DWORD PTR [edi+ecx*1],eax
  422b6b:	sbb    ebx,DWORD PTR [ecx-0x48]
  422b6e:	cmp    eax,DWORD PTR [eax+0x78]
  422b71:	shr    DWORD PTR [eax],1
  422b73:	dec    ebx
  422b74:	inc    ebp
  422b75:	push   esp
  422b76:	mov    esp,0xdc43414c
  422b7b:	push   cs
  422b7c:	cmc    
  422b7d:	test   eax,0x3204307
  422b82:	int3   
  422b83:	sahf   
  422b84:	xchg   esp,eax
  422b85:	in     eax,0x35
  422b87:	and    edx,eax
  422b89:	dec    ebx
  422b8a:	adc    al,0xcf
  422b8c:	popa   
  422b8d:	pop    es
  422b8e:	mov    es,WORD PTR [edi+0x28]
  422b91:	(bad)  
  422b92:	xchg   esp,eax
  422b93:	fcmovnu st,st(7)
  422b95:	adc    eax,0xc0db7c5b
  422b9a:	sub    BYTE PTR [ebp+0x6c],0xe4
  422b9e:	and    cl,BYTE PTR gs:[ebx+ebp*2+0x3822e558]
  422ba6:	mov    al,ds:0xd02e3391
  422bab:	mov    WORD PTR [bp-0x71],es
  422baf:	jmp    0x422b58
  422bb1:	or     BYTE PTR [ecx+0x65],0x1b
  422bb5:	lods   al,BYTE PTR ds:[esi]
  422bb6:	out    0x3b,eax
  422bb8:	push   edi
  422bb9:	inc    esp
  422bba:	mov    ch,0x3f
  422bbc:	dec    eax
  422bbd:	aad    0xf3
  422bbf:	int3   
  422bc0:	hlt    
  422bc1:	call   0x44e35a39
  422bc6:	das    
  422bc7:	lods   eax,DWORD PTR ds:[esi]
  422bc8:	cwde   
  422bc9:	jmp    0xcd94:0x69f168b8
  422bd0:	xor    ecx,esi
  422bd2:	dec    esp
  422bd3:	test   DWORD PTR [ebx-0x6d4c93af],esi
  422bd9:	sub    dh,bh
  422bdb:	dec    eax
  422bdc:	pop    edx
  422bdd:	ss sbb eax,0xd93008a5
  422be3:	dec    esp
  422be4:	out    0xdb,al
  422be6:	(bad)  
  422be7:	pop    ds
  422be8:	push   0xffffff8d
  422bea:	rcl    DWORD PTR [esi],0x70
  422bed:	js     0x422c07
  422bef:	popa   
  422bf0:	cdq    
  422bf1:	mov    ds:0x99b430a7,al
  422bf6:	pop    esi
  422bf7:	stos   DWORD PTR es:[edi],eax
  422bf8:	stos   DWORD PTR es:[edi],eax
  422bf9:	jb     0x422c6b
  422bfb:	outs   dx,DWORD PTR ds:[esi]
  422bfc:	jg     0x422c09
  422bfe:	lods   al,BYTE PTR ds:[esi]
  422bff:	cld    
  422c00:	xchg   ebx,eax
  422c01:	mov    ebx,0x4b18b00
  422c06:	outs   dx,BYTE PTR ds:[esi]
  422c07:	cli    
  422c08:	(bad)  
  422c09:	ins    DWORD PTR es:[edi],dx
  422c0a:	in     al,0x8c
  422c0c:	mov    cl,0x4a
  422c0e:	push   0xffffffee
  422c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c11:	jmp    0x7a57:0x6c2eeb09
  422c18:	(bad)  
  422c19:	frstor [ebp-0x2e]
  422c1c:	add    DWORD PTR [ebx],ebx
  422c1e:	push   ebx
  422c1f:	jno    0x422bbe
  422c21:	mov    ds:0x8c0516cf,al
  422c26:	adc    DWORD PTR [ecx],0x7
  422c29:	mov    ecx,0x541f506c
  422c2e:	pop    ebp
  422c2f:	cmovle ebx,DWORD PTR [edi-0x186a84c0]
  422c36:	and    ecx,ecx
  422c38:	jnp    0x422bc6
  422c3a:	stos   DWORD PTR es:[edi],eax
  422c3b:	xchg   ebx,eax
  422c3c:	adc    eax,eax
  422c3e:	(bad)  
  422c3f:	daa    
  422c40:	addr16 das 
  422c42:	mov    bh,0xfa
  422c44:	jo     0x422c82
  422c46:	pop    eax
  422c47:	mov    dh,ah
  422c49:	xchg   BYTE PTR [ecx+0x28],bl
  422c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4d:	sbb    dh,BYTE PTR [edi+0x2d412e34]
  422c53:	sub    dh,cl
  422c55:	shr    edi,0xec
  422c58:	(bad)  
  422c59:	xor    esp,DWORD PTR [ebp+0x693329a7]
  422c5f:	xchg   ecx,eax
  422c60:	push   eax
  422c61:	mov    esi,0xecbbf16a
  422c66:	sahf   
  422c67:	call   0x2eaae0cd
  422c6c:	sahf   
  422c6d:	iret   
  422c6e:	int3   
  422c6f:	pushf  
  422c70:	dec    edi
  422c71:	push   es
  422c72:	hlt    
  422c73:	pop    esi
  422c74:	and    BYTE PTR [edi],dl
  422c76:	cmp    bl,0xfb
  422c79:	sub    BYTE PTR [ebp+0x40],al
  422c7c:	in     al,dx
  422c7d:	mov    WORD PTR [edx],ss
  422c7f:	lahf   
  422c80:	cmc    
  422c81:	mov    ecx,0x1a1196db
  422c86:	mov    esp,0x74fa63eb
  422c8b:	bound  esp,QWORD PTR [esi]
  422c8d:	jle    0x422c71
  422c8f:	adc    al,0x31
  422c91:	adc    al,0xe4
  422c93:	xchg   esp,eax
  422c94:	(bad)  
  422c95:	mov    cl,0x66
  422c97:	outs   dx,DWORD PTR ds:[esi]
  422c98:	mov    esp,0xf4ca41d4
  422c9d:	shr    DWORD PTR [eax+0x49],0x4
  422ca1:	add    DWORD PTR [eax-0x661f6ff1],edi
  422ca7:	loope  0x422c8c
  422ca9:	add    al,0xf4
  422cab:	push   ebp
  422cac:	dec    ebx
  422cad:	or     al,0xba
  422caf:	addr16 mov esp,0xb2abe0bc
  422cb5:	nop
  422cb6:	shl    ecx,0xf
  422cb9:	push   eax
  422cba:	aas    
  422cbb:	pushf  
  422cbc:	jmp    0x49f6:0x321b0d5c
  422cc3:	mov    al,ds:0x84ede20d
  422cc8:	dec    esp
  422cc9:	adc    al,0xe3
  422ccb:	mov    esi,0x49741d1e
  422cd0:	xchg   ebp,eax
  422cd1:	js     0x422c91
  422cd3:	adc    DWORD PTR [esi-0x258c2ac2],eax
  422cd9:	repnz fcomip st,st(3)
  422cdc:	push   0xffffffd8
  422cde:	cmp    bh,BYTE PTR [edi]
  422ce0:	pop    ebx
  422ce1:	add    eax,0xaf66107b
  422ce6:	mov    ebp,ecx
  422ce8:	jle    0x422cf7
  422cea:	aaa    
  422ceb:	add    al,0xd1
  422ced:	mov    BYTE PTR [edx+0x4e],ah
  422cf0:	inc    ebx
  422cf1:	and    al,0x7
  422cf3:	xor    bh,BYTE PTR [ecx-0x69ae36c9]
  422cf9:	shr    BYTE PTR [ecx],cl
  422cfb:	sbb    BYTE PTR [edx+0x52],ah
  422cfe:	push   ebx
  422cff:	aas    
  422d00:	sahf   
  422d01:	ret    0x36fc
  422d04:	fadd   QWORD PTR [esi-0x3e]
  422d07:	add    bh,0xc6
  422d0a:	push   ecx
  422d0b:	push   es
  422d0c:	sbb    bl,BYTE PTR [ecx-0x72d8492a]
  422d12:	add    BYTE PTR [ebx-0x1147399b],bl
  422d18:	jbe    0x422d02
  422d1a:	xchg   edi,eax
  422d1b:	aam    0x44
  422d1d:	dec    esi
  422d1e:	xchg   esp,eax
  422d1f:	inc    eax
  422d20:	mov    al,ds:0x4b6a5b6
  422d25:	in     al,0xfb
  422d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d28:	arpl   WORD PTR [edx-0x6b],dx
  422d2b:	stc    
  422d2c:	and    esp,DWORD PTR [esi+edx*4]
  422d2f:	int    0x17
  422d31:	add    DWORD PTR ds:0x7b6245f7,eax
  422d37:	lds    edi,FWORD PTR [eax+0x13d9f8f5]
  422d3d:	and    BYTE PTR [ebx],al
  422d3f:	push   es
  422d40:	shl    BYTE PTR [edi],cl
  422d42:	dec    ecx
  422d43:	ret    
  422d44:	and    al,0xd4
  422d46:	xor    BYTE PTR [ebx+0x57],0xb5
  422d4a:	ja     0x422d7e
  422d4c:	push   es
  422d4d:	icebp  
  422d4e:	mov    BYTE PTR [edi-0x60],al
  422d51:	push   0x3b
  422d53:	mov    edx,0x66616891
  422d58:	push   ss
  422d59:	mov    al,0x92
  422d5b:	jnp    0x422d03
  422d5d:	outs   dx,DWORD PTR ds:[esi]
  422d5e:	mov    esi,DWORD PTR [ebp-0x3f753915]
  422d64:	mov    esp,0x6c85d7c0
  422d69:	mov    edx,0x29968b7b
  422d6e:	or     bl,bh
  422d70:	jmp    0xfe79:0x127ecc3f
  422d77:	in     al,dx
  422d78:	ins    DWORD PTR es:[edi],dx
  422d79:	mov    dh,0x59
  422d7b:	inc    esi
  422d7c:	mov    dh,0xa9
  422d7e:	in     eax,0xc
  422d80:	mov    DWORD PTR [ecx+0x4d06f86b],eax
  422d86:	sbb    DWORD PTR [ecx],esp
  422d88:	(bad)  
  422d89:	mov    bh,0xb4
  422d8b:	cwde   
  422d8c:	(bad)  
  422d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d8f:	fmul   QWORD PTR [ebx-0xf]
  422d92:	mov    ebp,0xcc5c5add
  422d97:	xchg   esp,eax
  422d98:	iret   
  422d99:	sti    
  422d9a:	jmp    0x5bfe62fc
  422d9f:	pop    es
  422da0:	xor    al,al
  422da2:	pop    ebp
  422da3:	in     eax,dx
  422da4:	ins    BYTE PTR es:[edi],dx
  422da5:	jp     0x422d4a
  422da7:	sub    al,cl
  422da9:	lods   al,BYTE PTR ds:[esi]
  422daa:	aaa    
  422dab:	inc    ecx
  422dac:	shl    DWORD PTR [ebx],1
  422dae:	xchg   edi,eax
  422daf:	add    DWORD PTR ss:[eax+0x1b9563d2],edi
  422db6:	aaa    
  422db7:	aas    
  422db8:	xor    al,0xb5
  422dba:	mov    dl,0x6b
  422dbc:	push   es
  422dbd:	mov    bh,dl
  422dbf:	fwait
  422dc0:	sbb    DWORD PTR [esi-0x43e31b6d],ebp
  422dc6:	rol    DWORD PTR [edx+eax*2-0x4b],cl
  422dca:	sbb    cl,ch
  422dcc:	mov    esp,0xb0dd32c2
  422dd1:	test   al,0xc2
  422dd3:	std    
  422dd4:	scas   eax,DWORD PTR es:[edi]
  422dd5:	mov    eax,0x4ebbe70d
  422dda:	test   eax,0x37193c72
  422ddf:	mov    dl,0x80
  422de1:	icebp  
  422de2:	loop   0x422dee
  422de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422de5:	jb     0x422e32
  422de7:	ins    DWORD PTR es:[edi],dx
  422de8:	stos   DWORD PTR es:[edi],eax
  422de9:	xchg   ecx,eax
  422dea:	pusha  
  422deb:	mov    ebx,0x2384f9a7
  422df0:	cmp    DWORD PTR [eax+0x2e],edi
  422df3:	mov    ds:0x34db63ef,al
  422df8:	inc    ebx
  422df9:	jl     0x422e52
  422dfb:	call   0x97d27a8b
  422e00:	or     BYTE PTR [ebp-0x4ae87996],0x59
  422e07:	sub    ebp,edx
  422e09:	mov    ds:0x93177e96,eax
  422e0e:	mov    ds:0xd5270146,eax
  422e13:	xor    DWORD PTR [esi-0x4c826b19],esi
  422e19:	clc    
  422e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e1b:	into   
  422e1c:	add    DWORD PTR [edi-0x66050b12],ecx
  422e22:	add    bl,BYTE PTR [ecx+eax*4]
  422e25:	scas   al,BYTE PTR es:[edi]
  422e26:	jae    0x422e04
  422e28:	out    dx,al
  422e29:	jg     0x422de5
  422e2b:	jp     0x422dbf
  422e2d:	mov    ch,0xba
  422e2f:	sbb    ebp,edi
  422e31:	fisubr DWORD PTR [ebx+0x40]
  422e34:	mov    esi,0xba100f0a
  422e39:	xchg   esp,eax
  422e3a:	sti    
  422e3b:	gs test al,0x7c
  422e3e:	lods   al,BYTE PTR ds:[esi]
  422e3f:	sub    al,0x90
  422e41:	cdq    
  422e42:	sti    
  422e43:	pusha  
  422e44:	or     bh,cl
  422e46:	xchg   edi,eax
  422e47:	xor    BYTE PTR [ebx+0x6d],ch
  422e4a:	mov    ch,0x1b
  422e4c:	mov    ah,bh
  422e4e:	and    al,0x89
  422e50:	sub    BYTE PTR [ebx-0x2e],al
  422e53:	xchg   edi,eax
  422e54:	lds    esp,FWORD PTR [eax]
  422e56:	pop    esi
  422e57:	xchg   edx,eax
  422e58:	repz jmp 0x762ced73
  422e5e:	push   cs
  422e5f:	and    al,0xf7
  422e61:	jno    0x422de4
  422e63:	cmc    
  422e64:	mov    ch,0x21
  422e66:	sub    DWORD PTR [edi-0x71066e6f],ecx
  422e6c:	(bad)  
  422e6d:	lahf   
  422e6e:	pop    edi
  422e6f:	fsub   DWORD PTR [edx]
  422e71:	xor    BYTE PTR [eax-0x7b4a6157],bh
  422e77:	and    al,0x6d
  422e79:	xor    esi,ecx
  422e7b:	lea    esi,[esi]
  422e7d:	or     eax,0xc793e22c
  422e82:	(bad)  
  422e83:	sbb    esp,DWORD PTR [edx+0x44c06743]
  422e89:	xchg   ebx,eax
  422e8a:	mov    bl,dh
  422e8c:	xor    edx,ebx
  422e8e:	inc    eax
  422e8f:	lahf   
  422e90:	stos   DWORD PTR es:[edi],eax
  422e91:	sbb    edx,DWORD PTR ds:0x3ce5d362
  422e97:	or     eax,0x37a3d43f
  422e9c:	mov    bl,0xd6
  422e9e:	jmp    0xfe21:0xcfb719c9
  422ea5:	sti    
  422ea6:	test   bl,0xb7
  422ea9:	sub    DWORD PTR [eax],edx
  422eab:	adc    BYTE PTR [esi+0x199da305],al
  422eb1:	push   ss
  422eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422eb3:	addr16 das 
  422eb5:	sahf   
  422eb6:	cmp    BYTE PTR [edi+0x55],dh
  422eb9:	cmp    BYTE PTR [esi+esi*1+0x1a],al
  422ebd:	or     DWORD PTR [ebx],esp
  422ebf:	stos   DWORD PTR es:[edi],eax
  422ec0:	pop    edx
  422ec1:	xchg   BYTE PTR [ebp-0x5d],dh
  422ec4:	mov    edi,0xca95d1da
  422ec9:	and    esi,DWORD PTR [edi]
  422ecb:	xchg   ebp,eax
  422ecc:	loopne 0x422ec4
  422ece:	xlat   BYTE PTR ds:[ebx]
  422ecf:	js     0x422ece
  422ed1:	adc    dh,BYTE PTR [ecx]
  422ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ed4:	dec    edx
  422ed5:	data16 (bad) 
  422ed7:	out    0x19,eax
  422ed9:	adc    eax,0xbfef2c8a
  422ede:	jne    0x422f16
  422ee0:	sub    eax,0x8df61644
  422ee5:	cmp    eax,0xf25b631a
  422eea:	ss (bad) 
  422eec:	jge    0x422e8c
  422eee:	fs aam 0xf6
  422ef1:	xor    al,BYTE PTR ds:0x162b6cda
  422ef7:	mov    ebx,0xa514ebd1
  422efc:	hlt    
  422efd:	and    BYTE PTR [ecx],0x81
  422f00:	dec    esp
  422f01:	hlt    
  422f02:	test   eax,0x7994f23b
  422f07:	addr16 push esp
  422f09:	int    0xcb
  422f0b:	fldenv [eax+0x5c]
  422f0e:	imul   edx,DWORD PTR [ebx-0x12f60c0f],0x0
  422f15:	ins    BYTE PTR es:[edi],dx
  422f16:	fimul  DWORD PTR [esp+esi*1+0x2e]
  422f1a:	int3   
  422f1b:	rcr    dl,cl
  422f1d:	popf   
  422f1e:	inc    edi
  422f1f:	fadd   st,st(7)
  422f21:	adc    eax,0x448419d5
  422f26:	ss std 
  422f28:	mov    edi,DWORD PTR [esi+ecx*8-0x597ef145]
  422f2f:	fmul   QWORD PTR [edx+0x6baf9c50]
  422f35:	push   ebp
  422f36:	cwde   
  422f37:	push   ecx
  422f38:	xchg   ebx,eax
  422f39:	cmp    eax,0x52eeb6e2
  422f3e:	add    eax,DWORD PTR [edx+ebx*8-0x37]
  422f42:	clc    
  422f43:	ja     0x422f6f
  422f45:	jmp    0x422f29
  422f47:	adc    ebx,DWORD PTR [ebp+0xe]
  422f4a:	push   0x78
  422f4c:	jle    0x422f25
  422f4e:	cmp    bh,BYTE PTR [ecx-0x42]
  422f51:	data16 (bad) 
  422f53:	and    eax,0x533aeab0
  422f58:	mov    ds:0x3eeaebdc,eax
  422f5d:	fmul   QWORD PTR [di-0x1c5b]
  422f62:	int    0xfc
  422f64:	aad    0x46
  422f66:	ret    0x933a
  422f69:	sub    dl,BYTE PTR [esi-0x4b]
  422f6c:	jl     0x422f74
  422f6e:	sbb    BYTE PTR [edi+0x59],cl
  422f71:	jb     0x422fd3
  422f73:	jmp    0xf64bb134
  422f78:	adc    BYTE PTR [ecx],dh
  422f7a:	cmp    esi,DWORD PTR ds:0xa50da6f3
  422f80:	sbb    DWORD PTR [ebx+0x629ca647],0x7fcb85ba
  422f8a:	mov    bl,al
  422f8c:	lea    ebp,[edi+eiz*2+0x4b59ea5]
  422f93:	ins    BYTE PTR es:[edi],dx
  422f94:	(bad)  
  422f95:	cmc    
  422f96:	aaa    
  422f97:	adc    DWORD PTR [edi],esi
  422f99:	sysenter 
  422f9b:	rcr    DWORD PTR [ecx-0x434c83ec],0x73
  422fa2:	xchg   BYTE PTR [edi+eiz*8+0x323770fa],bl
  422fa9:	ret    0x6d3a
  422fac:	and    DWORD PTR [ebx+0x10919b69],edx
  422fb2:	and    al,0xa7
  422fb4:	jo     0x422f59
  422fb6:	out    dx,al
  422fb7:	in     eax,dx
  422fb8:	xor    DWORD PTR [edi-0x59],edx
  422fbb:	push   esi
  422fbc:	xchg   ecx,eax
  422fbd:	out    dx,al
  422fbe:	repz inc esp
  422fc0:	fs sbb eax,0xf3d80cd1
  422fc6:	dec    esp
  422fc7:	cli    
  422fc8:	repnz test cl,dl
  422fcb:	loop   0x422fdf
  422fcd:	pop    esi
  422fce:	sar    DWORD PTR [edi+eiz*2-0x14a9258d],1
  422fd5:	sbb    ebx,esp
  422fd7:	cdq    
  422fd8:	mov    esp,0x32409340
  422fdd:	in     al,dx
  422fde:	frstpm(287 only) 
  422fe0:	neg    DWORD PTR [edx+0x690e6c89]
  422fe6:	sub    al,0xd6
  422fe8:	shl    DWORD PTR [esi-0x76],0xe8
  422fec:	pop    eax
  422fed:	or     DWORD PTR [ebx],ebp
  422fef:	daa    
  422ff0:	xchg   edi,eax
  422ff1:	dec    edx
  422ff2:	sar    BYTE PTR [ebp-0x7fdf00bb],0xf0
  422ff9:	jo     0x422fbb
  422ffb:	push   ecx
  422ffc:	in     al,0x27
  422ffe:	pusha  
  422fff:	mov    ds:0x7f064af8,al
  423004:	aaa    
  423005:	and    DWORD PTR [esi],0xa59e4551
  42300b:	cmp    BYTE PTR [ebp-0x46],0xe3
  42300f:	scas   al,BYTE PTR es:[edi]
  423010:	adc    al,0x9c
  423012:	jmp    0x423002
  423014:	lods   eax,DWORD PTR ds:[esi]
  423015:	fsub   QWORD PTR [edi+0x22514644]
  42301b:	cmp    eax,0x59eb138b
  423020:	dec    ebp
  423021:	leave  
  423022:	or     edi,DWORD PTR [ecx-0x1d]
  423025:	xchg   edx,ebx
  423027:	add    ebp,DWORD PTR [edi-0x1d]
  42302a:	push   esi
  42302b:	sbb    ecx,DWORD PTR [esi]
  42302d:	or     bh,BYTE PTR [ecx+0x29]
  423030:	rcr    BYTE PTR [edi+0x5bb3ef70],0xab
  423037:	mov    ebp,0xc49e2a9e
  42303c:	sub    bl,BYTE PTR [edx+ecx*4-0x8]
  423040:	aam    0xfe
  423042:	sahf   
  423043:	jl     0x423088
  423045:	xor    eax,0x1c998c17
  42304a:	sbb    edi,eax
  42304c:	push   ds
  42304d:	mov    eax,0xdf46735f
  423052:	(bad)  
  423053:	js     0x42304d
  423055:	xlat   BYTE PTR ds:[ebx]
  423056:	enter  0x5a99,0x52
  42305a:	mov    DWORD PTR [esi],edx
  42305c:	and    eax,0xb9ab8de9
  423061:	hlt    
  423062:	push   ebx
  423063:	frstor [edx]
  423065:	add    ebx,eax
  423067:	imul   BYTE PTR [edi]
  423069:	test   al,0xec
  42306b:	dec    edx
  42306c:	pop    ebp
  42306d:	xchg   edx,eax
  42306e:	outs   dx,DWORD PTR ds:[esi]
  42306f:	or     BYTE PTR [ebx+0x73c62d33],ch
  423075:	lods   al,BYTE PTR ds:[esi]
  423076:	jb     0x423004
  423078:	xchg   esp,eax
  423079:	pusha  
  42307a:	ret    0x5947
  42307d:	outs   dx,BYTE PTR ds:[esi]
  42307e:	mov    dh,0x93
  423080:	mov    fs,WORD PTR [ebp-0x3]
  423083:	xor    BYTE PTR cs:[ecx-0x1c],bl
  423087:	pextrw ecx,(bad),0xc5
  423089:	dec    ecx
  42308a:	add    BYTE PTR [edi],dl
  42308c:	cmp    eax,0xdf9efd33
  423091:	jg     0x423090
  423093:	mov    dl,0xe8
  423095:	sar    DWORD PTR [edi*2-0xae4fd02],1
  42309c:	xchg   DWORD PTR [edx+0x2e],ebx
  42309f:	leave  
  4230a0:	or     ecx,DWORD PTR [ebx]
  4230a2:	or     al,0xef
  4230a4:	push   es
  4230a5:	mov    al,0xf
  4230a7:	lds    esi,FWORD PTR [eax-0x12930fed]
  4230ad:	mov    dh,0xe3
  4230af:	push   0xf2b7400c
  4230b4:	jno    0x423106
  4230b6:	pop    ds
  4230b7:	popf   
  4230b8:	in     eax,dx
  4230b9:	fwait
  4230ba:	push   es
  4230bb:	or     al,0xc4
  4230bd:	mov    esp,0x6f7bf8ac
  4230c2:	rol    BYTE PTR [eax+ecx*1-0x30418550],cl
  4230c9:	mov    bh,0x9c
  4230cb:	rcr    edx,1
  4230cd:	lock cli 
  4230cf:	std    
  4230d0:	cmc    
  4230d1:	cmp    BYTE PTR [edx+eiz*1+0xa],ah
  4230d5:	push   ss
  4230d6:	imul   ecx,DWORD PTR [edx],0x6868833c
  4230dc:	mov    ch,0x14
  4230de:	(bad)  
  4230df:	push   esi
  4230e0:	inc    ecx
  4230e1:	push   0x57
  4230e3:	(bad)  
  4230e4:	dec    edx
  4230e5:	je     0x42311e
  4230e7:	and    ch,BYTE PTR [ebx]
  4230e9:	pop    ecx
  4230ea:	inc    edx
  4230eb:	mov    ebp,0xd1cbe454
  4230f0:	jns    0x4230de
  4230f2:	push   edx
  4230f3:	pop    eax
  4230f4:	jg     0x42313f
  4230f6:	dec    ebx
  4230f7:	ins    DWORD PTR es:[edi],dx
  4230f8:	jns    0x4230c8
  4230fa:	ins    BYTE PTR es:[edi],dx
  4230fb:	loopne 0x4230fd
  4230fd:	and    al,ah
  4230ff:	aam    0x85
  423101:	jge    0x423147
  423103:	inc    ecx
  423104:	and    BYTE PTR [esi],bh
  423106:	sbb    al,BYTE PTR [eax+esi*1+0x2e]
  42310a:	mov    esp,0x4dc7a573
  42310f:	or     BYTE PTR [ebx],0xc5
  423112:	(bad)  
  423114:	mov    al,ds:0x5b6227f6
  423119:	jmp    0x4230f1
  42311b:	mov    dh,0xdd
  42311d:	aad    0x5e
  42311f:	xchg   edx,eax
  423120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423121:	mov    eax,0x55f6fa0
  423126:	cmp    DWORD PTR [eax+edi*4],eax
  423129:	(bad)  
  42312a:	js     0x4230e7
  42312c:	cmp    ecx,esp
  42312e:	das    
  42312f:	adc    esi,DWORD PTR [eax-0x48136669]
  423135:	sti    
  423136:	mov    ecx,0x20c98149
  42313b:	sbb    ebp,esp
  42313d:	cmp    eax,0x453beb1f
  423142:	and    DWORD PTR [edi+0x1c2dceb6],esp
  423148:	sub    eax,0x32316a6f
  42314d:	pop    edx
  42314e:	imul   ebx,esi,0xffffff8a
  423151:	cmp    ebx,DWORD PTR [ecx]
  423153:	call   0x9370:0x1841473c
  42315a:	sbb    DWORD PTR ds:0xa6270056,eax
  423160:	in     eax,dx
  423161:	or     BYTE PTR [edx],ah
  423163:	cli    
  423164:	dec    ebx
  423165:	stc    
  423166:	push   edi
  423167:	mov    bl,0x26
  423169:	push   ds
  42316a:	pop    edx
  42316b:	nop
  42316c:	jmp    0x423129
  42316e:	mov    dh,0x73
  423170:	ret    0x91e5
  423173:	imul   ecx,DWORD PTR [ebx],0x55
  423176:	in     eax,0x10
  423178:	mov    DWORD PTR [ebx],ebp
  42317a:	add    esi,DWORD PTR [edx-0x6e]
  42317d:	mov    ds:0xbebe8dbd,al
  423182:	mov    dh,0xd3
  423184:	cmp    BYTE PTR [ebp-0x3a],bh
  423187:	sbb    edi,DWORD PTR [ebx+0x36587150]
  42318d:	xchg   ebx,eax
  42318e:	ficom  WORD PTR [esi]
  423190:	mov    ch,0xcb
  423192:	fstp   st(7)
  423194:	or     bh,BYTE PTR [esi]
  423196:	loopne 0x4231e0
  423198:	adc    esi,esp
  42319a:	dec    edi
  42319b:	stos   DWORD PTR es:[edi],eax
  42319c:	sbb    DWORD PTR [ebp-0x75],esp
  42319f:	cmp    al,0x3c
  4231a1:	xor    DWORD PTR [edi-0x5a],eax
  4231a4:	fwait
  4231a5:	cdq    
  4231a6:	inc    edx
  4231a7:	xor    edi,DWORD PTR [ebx]
  4231a9:	sub    al,0xfd
  4231ab:	sub    DWORD PTR [edx],ecx
  4231ad:	xchg   ecx,eax
  4231ae:	and    edi,ecx
  4231b0:	jnp    0x4231b9
  4231b2:	mov    ds:0xa82e3c2d,al
  4231b7:	dec    edx
  4231b8:	std    
  4231b9:	nop
  4231ba:	mov    ah,0xc9
  4231bc:	dec    esp
  4231bd:	jp     0x42323e
  4231bf:	mov    ch,0xbc
  4231c1:	sub    al,0x8a
  4231c3:	retf   
  4231c4:	push   ss
  4231c5:	sub    al,0x7e
  4231c7:	jbe    0x4231a3
  4231c9:	mov    BYTE PTR [ebp+0x5e],0x75
  4231cd:	ss ret 0xe705
  4231d1:	(bad)  
  4231d2:	sub    eax,0xabf78a34
  4231d7:	adc    BYTE PTR [ebp-0x6b54b57],dl
  4231dd:	bound  edi,QWORD PTR [ecx+eax*8+0x13]
  4231e1:	ror    DWORD PTR [ebx],0x13
  4231e4:	stc    
  4231e5:	fstp   DWORD PTR ds:0x37979365
  4231eb:	mov    ecx,0x9184c7c9
  4231f0:	das    
  4231f1:	sub    ah,ah
  4231f3:	(bad)  [edi+0x251d07e4]
  4231f9:	outs   dx,BYTE PTR ds:[esi]
  4231fa:	dec    edi
  4231fb:	xor    eax,DWORD PTR [ebx]
  4231fd:	clc    
  4231fe:	cmp    al,0x2d
  423200:	repz push ecx
  423202:	and    al,0x15
  423204:	jecxz  0x423227
  423206:	adc    DWORD PTR [edx],0x66
  423209:	out    0xa7,eax
  42320b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42320c:	add    eax,0xd1905184
  423211:	xchg   edx,edi
  423213:	dec    esp
  423214:	sub    DWORD PTR ds:0xc8859ad,esp
  42321a:	push   esi
  42321b:	jp     0x4231bb
  42321d:	test   al,0x6d
  42321f:	and    DWORD PTR [esi+0x178991f0],esp
  423225:	aaa    
  423226:	jg     0x4231bf
  423228:	mov    bh,0x3b
  42322a:	xor    BYTE PTR [esi+0x2e],bh
  42322d:	add    ch,ah
  42322f:	add    ecx,DWORD PTR ds:0x13749f01
  423235:	dec    esi
  423236:	jae    0x4231d5
  423238:	and    al,0xd2
  42323a:	out    dx,al
  42323b:	cmp    dh,BYTE PTR [esi]
  42323d:	or     esp,edi
  42323f:	sbb    ebp,DWORD PTR [edi-0x6a]
  423242:	retf   
  423243:	pop    esi
  423244:	out    dx,eax
  423245:	jmp    0x237f1c58
  42324a:	sub    eax,ecx
  42324c:	pushf  
  42324d:	fs ins DWORD PTR es:[edi],dx
  42324f:	inc    eax
  423250:	fucomp st(6)
  423252:	dec    edx
  423253:	jp     0x42322a
  423255:	xchg   edi,eax
  423256:	xor    al,0x53
  423258:	xor    edx,DWORD PTR [edi]
  42325a:	fadd   st(0),st
  42325c:	stc    
  42325d:	es add al,0x8a
  423260:	jecxz  0x423294
  423262:	jb     0x423284
  423264:	ret    0x5ae2
  423267:	jle    0x423295
  423269:	adc    BYTE PTR [edi],dh
  42326b:	cmp    eax,0x80bbfb71
  423270:	call   0x6e39:0x31972041
  423277:	mov    esi,0xc170ba60
  42327c:	sti    
  42327d:	inc    esp
  42327e:	aaa    
  42327f:	mov    al,ds:0xacc1a879
  423284:	(bad)  
  423285:	addr16 pop ebp
  423287:	mov    ebx,0xf46e6f49
  42328c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42328d:	iret   
  42328e:	int3   
  42328f:	jp     0x423271
  423291:	adc    ah,BYTE PTR [ecx+edi*8+0x702e6ef6]
  423298:	sub    eax,0x8ec9b8b9
  42329d:	shl    DWORD PTR es:[edi+0x39],1
  4232a1:	cmovge eax,DWORD PTR [eax+eax*8]
  4232a5:	pop    ds
  4232a6:	sti    
  4232a7:	xchg   edi,eax
  4232a8:	retf   0x52cf
  4232ab:	push   edi
  4232ac:	pop    edx
  4232ad:	ds xchg ebx,eax
  4232af:	adc    ebx,esi
  4232b1:	sub    bh,ah
  4232b3:	loope  0x42324a
  4232b5:	push   ebp
  4232b6:	(bad)  
  4232b7:	imul   ebp,DWORD PTR [ebp+eax*8-0x44],0xf416534c
  4232bf:	sahf   
  4232c0:	fucomi st,st(6)
  4232c2:	adc    eax,0xf0ad15b4
  4232c7:	lods   al,BYTE PTR ds:[esi]
  4232c8:	dec    ecx
  4232c9:	and    DWORD PTR [ebx-0x3d79a74],edi
  4232cf:	sbb    DWORD PTR [eax+ecx*4],0xe3e4baef
  4232d6:	jmp    0x42333b
  4232d8:	push   ebx
  4232d9:	cmc    
  4232da:	push   ecx
  4232db:	cmc    
  4232dc:	out    dx,eax
  4232dd:	into   
  4232de:	jnp    0x423307
  4232e0:	scas   al,BYTE PTR es:[edi]
  4232e1:	fdivr  DWORD PTR ds:0xbe7efeb4
  4232e7:	int3   
  4232e8:	mov    ch,0x7e
  4232ea:	outs   dx,DWORD PTR ds:[esi]
  4232eb:	test   BYTE PTR [esi],ah
  4232ed:	mov    ebx,0x63b511a5
  4232f2:	nop
  4232f3:	xchg   edx,eax
  4232f4:	mov    ch,0x12
  4232f6:	jo     0x4232d2
  4232f8:	(bad)  
  4232f9:	pop    ebp
  4232fa:	push   ss
  4232fb:	int3   
  4232fc:	push   esp
  4232fd:	iret   
  4232fe:	in     eax,dx
  4232ff:	dec    edi
  423300:	(bad)  
  423301:	lods   eax,DWORD PTR es:[esi]
  423303:	and    BYTE PTR [esi],ah
  423305:	in     eax,0xed
  423307:	jbe    0x42330b
  423309:	mov    dl,BYTE PTR [eax+0x16]
  42330c:	popf   
  42330d:	jb     0x423359
  42330f:	call   0xda7f:0x88876e9d
  423316:	or     al,0xd9
  423318:	add    eax,0xcbf12e82
  42331d:	mov    esi,0x5f5dd539
  423322:	add    eax,0x356bcdb5
  423327:	test   eax,0x8330ea46
  42332c:	addr16 or esi,eax
  42332f:	xchg   esi,eax
  423330:	xor    eax,0x86b7adec
  423335:	xor    eax,0xdeb839ed
  42333a:	fcomi  st,st(6)
  42333c:	call   0x58693276
  423341:	daa    
  423342:	add    esi,DWORD PTR [ecx+0x44]
  423345:	mov    eax,0xa768f6a0
  42334a:	jmp    0xc3dd:0x59ff1b72
  423351:	dec    esi
  423352:	inc    esi
  423353:	mov    ebp,0x4cb97aff
  423358:	xor    DWORD PTR [eax-0x4ab53281],0xd4ab7128
  423362:	call   0x5eb97a0f
  423367:	xor    eax,0x85951dc0
  42336c:	setnp  bl
  42336f:	call   0x64e8:0x29559791
  423376:	fadd   QWORD PTR [ebp-0x4ca43cf]
  42337c:	pop    ecx
  42337d:	adc    BYTE PTR [ebx],ah
  42337f:	pop    esp
  423380:	and    al,0x59
  423382:	jp     0x423311
  423384:	xor    dl,ah
  423386:	push   es
  423387:	in     eax,0x5d
  423389:	outs   dx,DWORD PTR ds:[esi]
  42338a:	sub    al,0x66
  42338c:	nop
  42338d:	adc    eax,0x408fd7c6
  423392:	in     eax,dx
  423393:	jp     0x42333f
  423395:	inc    ecx
  423396:	retf   
  423397:	test   eax,0x8bc70d7a
  42339c:	xchg   edi,eax
  42339d:	adc    ecx,DWORD PTR [edx+0x61df9f44]
  4233a3:	lea    edi,[edx+0x1]
  4233a6:	add    DWORD PTR [edi],ebp
  4233a8:	xchg   edi,eax
  4233a9:	test   BYTE PTR [eax+0x6fb022e6],al
  4233af:	and    bh,BYTE PTR [ecx-0x5eab983e]
  4233b5:	jns    0x423362
  4233b7:	jns    0x42334e
  4233b9:	dec    ebx
  4233ba:	inc    eax
  4233bb:	mov    BYTE PTR [ecx+0x79],dl
  4233be:	and    DWORD PTR [esi+0x2c],0x16
  4233c2:	out    0x82,al
  4233c4:	cld    
  4233c5:	std    
  4233c6:	(bad)  [ecx]
  4233c8:	or     eax,0xd7ac6c9
  4233cd:	adc    eax,0x58036ecf
  4233d2:	cdq    
  4233d3:	nop
  4233d4:	pusha  
  4233d5:	scas   al,BYTE PTR es:[edi]
  4233d6:	dec    ebx
  4233d7:	inc    esi
  4233d8:	jns    0x423411
  4233da:	or     DWORD PTR [ebx],esp
  4233dc:	fiadd  DWORD PTR [eax+0x2f80a3e8]
  4233e2:	xor    DWORD PTR [edi-0x1e],0x9bd47a1f
  4233e9:	jge    0x423371
  4233eb:	jb     0x4233d2
  4233ed:	cmp    BYTE PTR [ecx],ch
  4233ef:	push   ds
  4233f0:	lock mov WORD PTR [edi+0xc],ds
  4233f4:	mov    cl,0xe5
  4233f6:	sub    DWORD PTR [esp+edi*2-0x7e7672af],edx
  4233fd:	pop    eax
  4233fe:	mov    al,0x68
  423400:	ins    DWORD PTR es:[edi],dx
  423401:	dec    eax
  423402:	mov    bh,0xd
  423404:	pop    ecx
  423405:	push   cs
  423406:	inc    edx
  423407:	in     al,0x1a
  423409:	imul   DWORD PTR [ebx+0xb5ed966]
  42340f:	popf   
  423410:	inc    ecx
  423411:	jb     0x4233c4
  423413:	and    ebp,DWORD PTR [esi-0x66]
  423416:	mov    edi,0xb8bd3a57
  42341b:	jo     0x4233d2
  42341d:	test   DWORD PTR [ebx-0x50bc040e],ebp
  423423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423424:	ins    DWORD PTR es:[edi],dx
  423425:	mov    ds:0x9c53965c,al
  42342a:	and    al,0x5f
  42342c:	ds jo  0x423411
  42342f:	push   es
  423430:	xchg   esi,eax
  423431:	or     ecx,ecx
  423433:	sbb    DWORD PTR [ebx],esi
  423435:	clc    
  423436:	inc    edi
  423437:	fistp  DWORD PTR [eax+0x13]
  42343a:	cmc    
  42343b:	icebp  
  42343c:	pusha  
  42343d:	add    BYTE PTR [edi*1-0x2638a5dd],dl
  423444:	in     al,0x73
  423446:	ret    
  423447:	stos   DWORD PTR es:[edi],eax
  423448:	into   
  423449:	or     ecx,DWORD PTR ds:0x13e126e5
  42344f:	xchg   esi,eax
  423450:	call   0xf10eb91e
  423455:	out    dx,eax
  423456:	ja     0x423432
  423458:	test   eax,0x2f5c35b0
  42345d:	or     al,0x6f
  42345f:	mov    eax,ds:0x5a5a6e2f
  423464:	outs   dx,BYTE PTR ds:[esi]
  423465:	popa   
  423466:	test   ecx,ebx
  423468:	(bad)  
  423469:	xor    BYTE PTR [edx+0x7a],bl
  42346c:	add    al,0x3e
  42346e:	hlt    
  42346f:	cmc    
  423470:	int    0x71
  423472:	xchg   esp,edi
  423474:	call   0xdc91:0x27911af2
  42347b:	add    DWORD PTR ds:0x590bd0e6,ebp
  423481:	out    dx,al
  423482:	in     al,dx
  423483:	imul   ebx,edi,0xffffff88
  423486:	sub    al,BYTE PTR [edi-0x59]
  423489:	dec    ecx
  42348a:	adc    BYTE PTR [ebp+0x58528cd0],bh
  423490:	inc    esp
  423491:	xchg   esi,eax
  423492:	sbb    BYTE PTR [ebx+0x64],dl
  423495:	xchg   edi,eax
  423496:	push   0x4d
  423498:	xor    esi,edi
  42349a:	fdiv   DWORD PTR [ecx]
  42349c:	add    eax,0x45711325
  4234a1:	icebp  
  4234a2:	scas   al,BYTE PTR es:[edi]
  4234a3:	adc    ebx,DWORD PTR [ecx]
  4234a5:	pop    esi
  4234a6:	(bad)  
  4234a7:	xor    eax,0x87fc81ed
  4234ac:	in     al,dx
  4234ad:	inc    edx
  4234ae:	daa    
  4234af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234b0:	and    DWORD PTR es:[ebx],esi
  4234b3:	scas   al,BYTE PTR es:[edi]
  4234b4:	ret    
  4234b5:	stc    
  4234b6:	inc    esp
  4234b7:	pop    esi
  4234b8:	pop    eax
  4234b9:	jb     0x42352a
  4234bb:	sub    ah,BYTE PTR [eax+0x5bb24ae9]
  4234c1:	sbb    ah,BYTE PTR [eax+0x61a10a1b]
  4234c7:	bound  edi,QWORD PTR [ebx+0x1e]
  4234ca:	fisttp QWORD PTR [eax-0x5a]
  4234cd:	test   BYTE PTR [edi],al
  4234cf:	mov    cl,0x12
  4234d1:	mov    bh,0xc5
  4234d3:	sub    al,dl
  4234d5:	jle    0x423543
  4234d7:	(bad)  
  4234d9:	jae    0x423533
  4234db:	nop
  4234dc:	cmp    DWORD PTR [eax+0x21537e99],0xba5434f
  4234e6:	xor    di,WORD PTR [ecx+edi*2-0x5]
  4234eb:	outs   dx,BYTE PTR ds:[esi]
  4234ec:	and    BYTE PTR [ebp-0x9],0x24
  4234f0:	sahf   
  4234f1:	or     dl,BYTE PTR [esi-0x7085f5ac]
  4234f7:	fdiv   QWORD PTR [ecx]
  4234f9:	adc    ebx,edi
  4234fb:	hlt    
  4234fc:	cdq    
  4234fd:	icebp  
  4234fe:	cdq    
  4234ff:	int3   
  423500:	jle    0x4234b0
  423502:	pop    edx
  423503:	xchg   ebx,eax
  423504:	or     DWORD PTR [ebx+0x5a],esp
  423507:	aam    0x30
  423509:	aam    0xc3
  42350b:	(bad)  
  42350d:	add    al,0xbb
  42350f:	push   ecx
  423510:	sub    ah,al
  423512:	sbb    ebx,edx
  423514:	int3   
  423515:	mov    cl,0xfd
  423517:	ss pop esi
  423519:	mov    ecx,0xd3283a6a
  42351e:	test   eax,0xd780d3e2
  423523:	inc    eax
  423524:	mov    edx,es
  423526:	imul   esp,DWORD PTR [eax],0xfffffff5
  423529:	mov    ebp,0x6cfdbcc7
  42352e:	sub    ecx,DWORD PTR [ebx-0x6]
  423531:	js     0x42353f
  423533:	(bad)  
  423534:	adc    BYTE PTR ds:0x599447c5,bh
  42353a:	les    edx,FWORD PTR [ebx*2+0x7711255f]
  423541:	lods   al,BYTE PTR ds:[esi]
  423542:	hlt    
  423543:	ds inc ebx
  423545:	xchg   ebp,eax
  423546:	fsub   st,st(1)
  423548:	jne    0x4234cf
  42354a:	dec    esi
  42354b:	jle    0x423549
  42354d:	push   0x6895ec
  423552:	and    BYTE PTR ds:0x63432ae6,0x9f
  423559:	call   0xf4eb41d8
  42355e:	pusha  
  42355f:	(bad)  
  423560:	mov    ah,0x4c
  423562:	push   ecx
  423563:	fbld   TBYTE PTR [eax+0x3f]
  423566:	and    BYTE PTR [eax],al
  423568:	push   esp
  423569:	push   ebp
  42356a:	jmp    FWORD PTR [ebx-0xa93c86f]
  423570:	dec    edi
  423571:	push   esp
  423572:	pop    edx
  423573:	xchg   DWORD PTR [edi+0x57611faa],edx
  423579:	dec    ebp
  42357a:	call   0x989c:0x1dda8630
  423581:	lea    esp,[edx-0x11]
  423584:	mov    bh,BYTE PTR [edi+ebp*1-0x1abdabd7]
  42358b:	std    
  42358c:	call   0xcee88b4e
  423591:	call   0xc806:0xac6a8b6a
  423598:	or     edx,ecx
  42359a:	pop    eax
  42359b:	fdiv   DWORD PTR [eax+0x7a118707]
  4235a1:	xchg   esp,eax
  4235a2:	mov    ecx,0x9a0c14da
  4235a7:	das    
  4235a8:	pop    ebx
  4235a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235aa:	mov    ds:0x8a3b87c7,eax
  4235af:	arpl   cx,dx
  4235b1:	xchg   edx,eax
  4235b2:	das    
  4235b3:	xchg   BYTE PTR [ebp+0x14],cl
  4235b6:	jl     0x4235df
  4235b8:	bound  eax,QWORD PTR [eax+0x47]
  4235bb:	scas   eax,DWORD PTR es:[edi]
  4235bc:	(bad)  
  4235bd:	hlt    
  4235be:	mov    dh,BYTE PTR [ecx-0x11]
  4235c1:	bound  ecx,QWORD PTR [ebx]
  4235c3:	push   es
  4235c4:	or     dl,al
  4235c6:	js     0x42360c
  4235c8:	xchg   ecx,eax
  4235c9:	sbb    BYTE PTR [eax-0x2ae68cf0],dl
  4235cf:	xchg   esi,eax
  4235d0:	ds ins BYTE PTR es:[edi],dx
  4235d2:	fsubr  st(5),st
  4235d4:	push   eax
  4235d5:	fmulp  st(5),st
  4235d7:	xchg   DWORD PTR [ecx+0x5d],edx
  4235da:	in     al,0x4d
  4235dc:	pop    ebx
  4235dd:	sub    eax,DWORD PTR [ebx-0x7]
  4235e0:	mov    ah,0xf1
  4235e2:	sub    al,0x5f
  4235e4:	sub    eax,0xb090b4cc
  4235e9:	push   edx
  4235ea:	mov    bl,0xff
  4235ec:	jnp    0x42365a
  4235ee:	inc    edx
  4235ef:	mov    esp,esi
  4235f1:	in     al,dx
  4235f2:	push   ecx
  4235f3:	mov    dh,0x51
  4235f5:	pop    es
  4235f6:	pop    ss
  4235f7:	cmp    BYTE PTR [ecx-0x50],0x18
  4235fb:	pushf  
  4235fc:	fisub  WORD PTR [ecx]
  4235fe:	jl     0x4235d3
  423600:	aad    0xe
  423602:	sub    DWORD PTR [eax-0x664b3104],eax
  423608:	call   0xe206:0x91788cd7
  42360f:	loopne 0x42359e
  423611:	jae    0x4235a7
  423613:	mov    esi,0x15c78dcb
  423618:	aad    0x5b
  42361a:	hlt    
  42361b:	pusha  
  42361c:	push   0x5
  42361e:	xlat   BYTE PTR ds:[ebx]
  42361f:	add    esi,DWORD PTR [ebp-0x5b]
  423622:	loopne 0x4235de
  423624:	je     0x423656
  423626:	mov    bl,0xdc
  423628:	popf   
  423629:	pop    eax
  42362a:	mov    edi,0x65992d86
  42362f:	frstor [eax-0x29f7ec4a]
  423635:	gs xchg ebx,eax
  423637:	add    bl,bh
  423639:	push   es
  42363a:	outs   dx,BYTE PTR ds:[esi]
  42363b:	rcl    DWORD PTR ds:0x40fb,1
  423640:	mov    ecx,DWORD PTR [ebx-0x5b]
  423643:	xchg   edi,eax
  423644:	fld    QWORD PTR [eax-0x462b6583]
  42364a:	pop    ds
  42364b:	enter  0x6fa3,0x78
  42364f:	sub    edx,DWORD PTR [esi-0x7beedaea]
  423655:	xchg   edx,eax
  423656:	(bad)
  42365a:	mov    esi,0x398c1ae7
  42365f:	mov    ebx,0xb152cb0c
  423664:	loop   0x4236bb
  423666:	dec    esp
  423667:	dec    ebx
  423668:	in     eax,0x45
  42366a:	mov    cl,0x81
  42366c:	stos   BYTE PTR es:[edi],al
  42366d:	cs pop es
  42366f:	bound  eax,QWORD PTR [edx-0x42c4154]
  423675:	inc    ebp
  423676:	mov    eax,DWORD PTR [eax-0x55216acd]
  42367c:	sahf   
  42367d:	sbb    ebp,esi
  42367f:	and    ah,dh
  423681:	mov    dl,0xfe
  423683:	sub    eax,0x10b3bfa6
  423688:	mov    BYTE PTR [ebp-0x17],ah
  42368b:	sub    DWORD PTR [edi+0x56],edi
  42368e:	push   esp
  42368f:	push   0x56
  423691:	xor    bl,bl
  423693:	addr16 jbe 0x4236aa
  423696:	fwait
  423697:	shl    BYTE PTR [ebx],cl
  423699:	sub    edi,DWORD PTR [edi+0x1f]
  42369c:	stc    
  42369d:	cld    
  42369e:	mov    ebp,0x62e019bc
  4236a3:	mov    esp,0xeb8e4178
  4236a8:	rcr    BYTE PTR [edx+0x4bc92e69],cl
  4236ae:	inc    esi
  4236af:	je     0x4236af
  4236b1:	rol    dh,cl
  4236b3:	aas    
  4236b4:	inc    esi
  4236b5:	jl     0x42370d
  4236b7:	shl    DWORD PTR [ebx-0x13aada16],cl
  4236bd:	jmp    0x1e34ce0d
  4236c2:	push   ds
  4236c3:	mov    dh,0xe0
  4236c5:	adc    DWORD PTR [ebp-0x358afa61],edx
  4236cb:	pop    esi
  4236cc:	cwde   
  4236cd:	sbb    dh,BYTE PTR [ebp+edx*8+0x30]
  4236d1:	sub    al,0x2e
  4236d3:	cs mov esp,0x8eb3fbb6
  4236d9:	sub    BYTE PTR [ebx],bl
  4236db:	xor    ebp,esi
  4236dd:	mov    bl,0xf1
  4236df:	push   ss
  4236e0:	aam    0x27
  4236e2:	mov    ecx,0x93229175
  4236e7:	test   BYTE PTR [ebx],ah
  4236e9:	xor    DWORD PTR [eax+0x68],edx
  4236ec:	jo     0x42373c
  4236ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236ef:	xor    edi,ebx
  4236f1:	or     cl,0x76
  4236f4:	mov    edx,0xc30f7d63
  4236f9:	mov    ah,0xd9
  4236fb:	mov    edi,edx
  4236fd:	dec    eax
  4236fe:	adc    DWORD PTR [eax+ebp*8],eax
  423701:	sbb    ch,ch
  423703:	cmovl  ecx,DWORD PTR [ebx-0x1f]
  423707:	retf   
  423708:	int    0x6f
  42370a:	inc    edx
  42370b:	dec    ebp
  42370c:	je     0x4236d4
  42370e:	fist   WORD PTR [edx]
  423710:	add    al,0xb
  423712:	xchg   esp,eax
  423713:	xor    al,0x4b
  423715:	into   
  423716:	test   al,0xe2
  423718:	add    dl,BYTE PTR [ebx]
  42371a:	ins    DWORD PTR es:[edi],dx
  42371b:	mov    ch,0x40
  42371d:	es mov al,0x28
  423720:	lods   al,BYTE PTR ds:[esi]
  423721:	ja     0x4236d2
  423723:	fldenv [ebx]
  423725:	out    0xf5,al
  423727:	inc    edx
  423728:	lds    edi,FWORD PTR [edx+0x65]
  42372b:	loop   0x423713
  42372d:	mov    cl,0x17
  42372f:	xor    ecx,DWORD PTR [edi]
  423731:	test   BYTE PTR [edx+0x6cd5f14f],0xf2
  423738:	cmp    al,bh
  42373a:	sbb    eax,0xa1371040
  42373f:	(bad)  
  423741:	sub    eax,0x3db98352
  423746:	fs ret 0xa28d
  42374a:	clc    
  42374b:	push   eax
  42374c:	fcomip st,st(2)
  42374e:	cli    
  42374f:	js     0x42377d
  423751:	addr16 (bad) 
  423753:	fild   WORD PTR [edi]
  423755:	sub    al,ch
  423757:	fwait
  423758:	cdq    
  423759:	xor    DWORD PTR ds:0xcda00393,esp
  42375f:	dec    eax
  423760:	fisub  WORD PTR [ebx-0x6204808d]
  423766:	es mov dl,0xc4
  423769:	out    0x58,eax
  42376b:	sar    BYTE PTR [ebx+ecx*4+0xe],1
  42376f:	cmp    DWORD PTR [edi],ecx
  423771:	dec    edx
  423772:	test   al,0x95
  423774:	(bad)  
  423775:	cwde   
  423776:	sbb    DWORD PTR [eax],0x58
  423779:	neg    BYTE PTR [ebp-0x2e]
  42377c:	adc    BYTE PTR ds:0xdf23229c,cl
  423782:	gs pop esi
  423784:	or     edx,ecx
  423786:	push   ss
  423787:	loope  0x423783
  423789:	loopne 0x4237ef
  42378b:	jmp    0xd156303e
  423790:	mov    BYTE PTR [edx*8-0x6de79e64],bl
  423797:	and    al,BYTE PTR [eax+0x8676946]
  42379d:	(bad)  
  42379e:	jmp    0x2c84:0xbb6e5abc
  4237a5:	mov    ds:0x24a4d0a2,eax
  4237aa:	in     al,0x36
  4237ac:	xor    cl,BYTE PTR [ebx]
  4237ae:	ficomp DWORD PTR [edx+0x76c4b602]
  4237b4:	sub    ecx,DWORD PTR [ebp+0xc05d2e3]
  4237ba:	cmp    bh,dl
  4237bc:	scas   eax,DWORD PTR es:[edi]
  4237bd:	dec    esi
  4237be:	add    al,0x81
  4237c0:	out    0x0,eax
  4237c2:	sar    BYTE PTR [ebp-0x354a1361],0x4e
  4237c9:	add    eax,esi
  4237cb:	jnp    0x42375c
  4237cd:	xchg   al,dl
  4237cf:	adc    eax,0xc14ccde6
  4237d4:	jae    0x4237c5
  4237d6:	push   0x29
  4237d8:	jp     0x423853
  4237da:	lahf   
  4237db:	dec    esp
  4237dc:	fwait
  4237dd:	call   0xfb5e67f3
  4237e2:	mov    ds:0x4e4f1b7,al
  4237e7:	rcl    BYTE PTR [ecx-0x1f97b249],1
  4237ed:	outs   dx,BYTE PTR ds:[esi]
  4237ee:	adc    BYTE PTR [ecx+ebx*4],bh
  4237f1:	inc    ecx
  4237f2:	rcl    BYTE PTR [ecx+0x1c],cl
  4237f5:	adc    eax,0x50d6ac15
  4237fa:	mov    edx,0x88bb63f0
  4237ff:	inc    eax
  423800:	dec    edx
  423801:	jo     0x4237e4
  423803:	add    ch,BYTE PTR [ebx+0x271c2a20]
  423809:	jnp    0x423838
  42380b:	lahf   
  42380c:	inc    DWORD PTR [eax-0x3882e85a]
  423812:	xchg   esp,eax
  423813:	(bad)  
  423814:	in     al,dx
  423815:	aaa    
  423816:	inc    ecx
  423817:	mov    dl,BYTE PTR [esp+edx*4]
  42381a:	xchg   ecx,eax
  42381b:	mov    cl,0x94
  42381d:	cs dec ebp
  42381f:	dec    ecx
  423820:	dec    ebx
  423821:	push   0xffffffe3
  423823:	scas   al,BYTE PTR es:[edi]
  423824:	div    BYTE PTR [edi-0x67]
  423827:	fwait
  423828:	ja     0x42389d
  42382a:	into   
  42382b:	jae    0x423895
  42382d:	rcl    DWORD PTR ds:0x74727f3d,1
  423833:	fbstp  TBYTE PTR [edi]
  423835:	xor    ecx,DWORD PTR [edx+edx*8+0x667403e9]
  42383c:	(bad)  
  42383d:	cli    
  42383e:	pop    ebp
  42383f:	iret   
  423840:	mov    esp,0x5aca33a
  423845:	dec    esi
  423846:	sbb    al,0x97
  423848:	call   0x42ec:0xdc7d5801
  42384f:	mov    ebx,0x22d0adaf
  423854:	sar    DWORD PTR ds:0x88f30054,0x2c
  42385b:	mov    ds:0x8b38b06,eax
  423860:	mov    bh,0xb2
  423862:	mov    eax,0xc9c7ae9f
  423867:	jnp    0x423829
  423869:	scas   al,BYTE PTR es:[edi]
  42386a:	cmp    BYTE PTR [edi-0x5fbb3896],cl
  423870:	sub    bl,dl
  423872:	xor    al,0x62
  423874:	mov    WORD PTR [ecx],ds
  423876:	retf   0x52c2
  423879:	jl     0x423844
  42387b:	cmp    DWORD PTR [ebp-0x6c13de1a],esp
  423881:	push   0xffffff8b
  423883:	inc    ebp
  423884:	lock xor eax,ecx
  423887:	mov    edx,0xffcd8d11
  42388c:	sub    edx,eax
  42388e:	add    DWORD PTR [ebp-0x4],edx
  423891:	mov    eax,DWORD PTR [ebp-0x4]
  423894:	jmp    0x4229e8
  423899:	mov    eax,DWORD PTR [ebp-0x14]
  42389c:	mov    eax,DWORD PTR [eax]
  42389e:	mov    edx,DWORD PTR [ebp-0x4]
  4238a1:	mov    edx,DWORD PTR [edx+0x3c]
  4238a4:	lea    eax,[edx+eax*8+0x78]
  4238a8:	mov    edx,DWORD PTR [ebp-0x4]
  4238ab:	mov    eax,DWORD PTR [eax+edx*1]
  4238ae:	mov    DWORD PTR [ebp-0x8],eax
  4238b1:	mov    eax,DWORD PTR [ebp+0x8]
  4238b4:	xor    eax,ecx
  4238b6:	add    eax,esi
  4238b8:	mov    DWORD PTR [ebp-0x14],eax
  4238bb:	mov    eax,DWORD PTR [ebp+0x8]
  4238be:	mov    edx,DWORD PTR [ebp-0x8]
  4238c1:	xor    eax,ecx
  4238c3:	add    eax,esi
  4238c5:	cmp    edx,eax
  4238c7:	jne    0x4238e5
  4238cd:	mov    eax,DWORD PTR [ebp+0xc]
  4238d0:	xor    eax,ecx
  4238d2:	mov    ecx,DWORD PTR [ebp-0x8]
  4238d5:	add    eax,esi
  4238d7:	imul   eax,ecx
  4238da:	mov    DWORD PTR [ebp-0x8],eax
  4238dd:	push   DWORD PTR [ebp+0x18]
  4238e0:	jmp    0x423940
  4238e5:	mov    eax,DWORD PTR [ebp-0x8]
  4238e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4238eb:	add    eax,ecx
  4238ed:	mov    DWORD PTR [ebp-0x14],eax
  4238f0:	mov    eax,DWORD PTR [ebp-0x14]
  4238f3:	mov    eax,DWORD PTR [eax+0xc]
  4238f6:	movsx  eax,BYTE PTR [eax+ecx*1]
  4238fa:	cdq    
  4238fb:	add    eax,ebx
  4238fd:	adc    edx,0xffffffff
  423900:	xor    eax,edi
  423902:	xor    edx,0x0
  423905:	cmp    eax,0x70941e1e
  42390a:	jne    0x4238dd
  423910:	cmp    edx,0xffffffff
  423913:	jne    0x4238dd
  423919:	mov    eax,ds:0x42942f
  42391e:	mov    eax,DWORD PTR [eax+0x198]
  423924:	mov    DWORD PTR [eax],ecx
  423926:	mov    eax,ecx
  423928:	jmp    0x423951
  42392d:	mov    eax,DWORD PTR [ebp+0x18]
  423930:	cmp    eax,0xf89c85ba
  423935:	jne    0x423951
  42393b:	push   0xf89c85bb
  423940:	push   DWORD PTR [ebp+0x14]
  423943:	push   DWORD PTR [ebp+0x10]
  423946:	push   DWORD PTR [ebp+0xc]
  423949:	push   DWORD PTR [ebp+0x8]
  42394c:	call   0x420148
  423951:	pop    edi
  423952:	pop    ebx
  423953:	pop    esi
  423954:	leave  
  423955:	ret    0x14
  423958:	push   ebp
  423959:	mov    ebp,esp
  42395b:	and    esp,0xfffffff8
  42395e:	add    DWORD PTR ds:0x42a177,0x42a1bb
  423968:	sub    esp,0x1ac
  42396e:	push   ebx
  42396f:	push   esi
  423970:	mov    DWORD PTR ds:0x42a15f,0x573c
  42397a:	push   edi
  42397b:	xor    edi,edi
  42397d:	push   edi
  42397e:	not    DWORD PTR ds:0x42a18f
  423984:	call   DWORD PTR ds:0x42a28b
  42398a:	mov    esi,DWORD PTR ds:0x42a2cb
  423990:	add    DWORD PTR ds:0x42a14b,0x7d28
  42399a:	push   0xf
  42399c:	and    DWORD PTR ds:0x42a183,0x1edb
  4239a6:	mov    DWORD PTR [esp+0x14],eax
  4239aa:	lea    eax,[esp+0x44]
  4239ae:	sub    DWORD PTR ds:0x42a19b,0x42a187
  4239b8:	push   eax
  4239b9:	push   0x429553
  4239be:	sbb    DWORD PTR ds:0x42a17f,0x7a6
  4239c8:	push   0x429567
  4239cd:	adc    DWORD PTR ds:0x42a17f,0x6000
  4239d7:	push   0x42958f
  4239dc:	adc    DWORD PTR ds:0x42a1c3,0x42a1b7
  4239e6:	call   esi
  4239e8:	shl    eax,0x15
  4239eb:	mov    DWORD PTR ds:0x42a197,0x6670
  4239f5:	cmp    eax,0x1000000
  4239fa:	je     0x423a11
  423a00:	xor    eax,eax
  423a02:	mov    DWORD PTR ds:0x42a12f,0x1037
  423a0c:	jmp    0x424ac8
  423a11:	or     DWORD PTR ds:0x42a187,0x42a127
  423a1b:	push   0x4295b7
  423a20:	call   DWORD PTR ds:0x42a29f
  423a26:	xor    DWORD PTR ds:0x42a15b,0x42a1b3
  423a30:	test   eax,eax
  423a32:	mov    DWORD PTR ds:0x42a137,0x194e
  423a3c:	jne    0x423a00
  423a42:	lea    eax,[esp+0x78]
  423a46:	xor    DWORD PTR ds:0x42a173,0x42a157
  423a50:	push   eax
  423a51:	push   0x4295d3
  423a56:	sbb    DWORD PTR ds:0x42a1ab,0x42a133
  423a60:	call   DWORD PTR ds:0x42a2bb
  423a66:	cmp    eax,0xffffffff
  423a69:	mov    DWORD PTR ds:0x42a193,0x52a3
  423a73:	jne    0x423a00
  423a79:	mov    DWORD PTR ds:0x42a19b,0xfae
  423a83:	push   DWORD PTR [esp+0x10]
  423a87:	add    DWORD PTR ds:0x42a157,0x42a16f
  423a91:	push   edi
  423a92:	sbb    DWORD PTR ds:0x42a1c3,0x76dd
  423a9c:	call   DWORD PTR ds:0x42a287
  423aa2:	mov    ecx,DWORD PTR ds:0x42a24f
  423aa8:	mov    ebx,DWORD PTR ds:0x42a267
  423aae:	sub    ecx,ebx
  423ab0:	sub    ecx,DWORD PTR [ecx+ebx*1]
  423ab3:	mov    DWORD PTR [esp+0x30],edi
  423ab7:	or     DWORD PTR ds:0x42a16f,0x565
  423ac1:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  423ac9:	mov    DWORD PTR ds:0x42a143,0x78c3
  423ad3:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423adb:	or     ebx,ecx
  423add:	lea    eax,[esp+0x3c]
  423ae1:	mov    DWORD PTR [esp+0x30],eax
  423ae5:	add    ebx,edi
  423ae7:	lea    eax,[esp+0x38]
  423aeb:	mov    edi,DWORD PTR ds:0x42a1e3
  423af1:	mov    ecx,DWORD PTR ds:0x42a21f
  423af7:	sub    edi,ecx
  423af9:	and    edi,DWORD PTR [edi+ecx*1]
  423afc:	mov    DWORD PTR [esp+0x10],eax
  423b00:	and    DWORD PTR ds:0x42a17b,0x5d3c
  423b0a:	mov    eax,ds:0x42942f
  423b0f:	xor    ebx,ebx
  423b11:	xor    ebx,DWORD PTR ds:0x42a18b
  423b17:	sbb    DWORD PTR ds:0x42a1bf,ebx
  423b1d:	mov    eax,DWORD PTR [eax+0x1c8]
  423b23:	sbb    edi,DWORD PTR ds:0x42a1cf
  423b29:	mov    eax,DWORD PTR [eax]
  423b2b:	and    DWORD PTR ds:0x42a173,0x0
  423b35:	mov    edi,DWORD PTR ds:0x42a173
  423b3b:	inc    edi
  423b3c:	mov    DWORD PTR ds:0x42a173,edi
  423b42:	cmp    DWORD PTR ds:0x42a173,0xf
  423b49:	jl     0x423b8e
  423b4f:	jmp    0x423b67
  423b54:	push   DWORD PTR [ebp-0x1c]
  423b57:	push   0x42a127
  423b5c:	push   0x25af
  423b61:	call   DWORD PTR ds:0x42a2ab
  423b67:	cmp    DWORD PTR ds:0x42a173,0xe
  423b6e:	jne    0x423b81
  423b74:	mov    edi,DWORD PTR ds:0x42a173
  423b7a:	inc    edi
  423b7b:	mov    DWORD PTR ds:0x42a173,edi
  423b81:	cmp    DWORD PTR ds:0x42a173,0x1d
  423b88:	jb     0x423b35
  423b8e:	mov    ecx,DWORD PTR [esp+0x10]
  423b92:	and    ebx,DWORD PTR ds:0x42a1ab
  423b98:	mov    edi,0x75108a8
  423b9d:	xor    ebx,DWORD PTR ds:0x42a173
  423ba3:	xor    eax,edi
  423ba5:	mov    ebx,DWORD PTR ds:0x42a18b
  423bab:	or     DWORD PTR ds:0x42a13f,ebx
  423bb1:	mov    ebx,0x3272ef
  423bb6:	add    eax,ebx
  423bb8:	mov    DWORD PTR ds:0x42a1c3,0x4871
  423bc2:	mov    DWORD PTR [ecx],eax
  423bc4:	mov    eax,ds:0x42a193
  423bc9:	mov    eax,ds:0x429feb
  423bce:	cmp    eax,0x445cecf9
  423bd3:	jne    0x423c53
  423bd9:	sbb    ecx,0x3851
  423bdf:	mov    eax,DWORD PTR [esp+0x20]
  423be3:	sub    DWORD PTR ds:0x42a16b,edi
  423be9:	mov    ecx,DWORD PTR ds:0x42942f
  423bef:	mov    ecx,DWORD PTR [ecx+0x198]
  423bf5:	adc    DWORD PTR ds:0x42a14b,0x1545
  423bff:	xor    eax,edi
  423c01:	add    eax,ebx
  423c03:	mov    DWORD PTR [ecx],eax
  423c05:	xor    eax,DWORD PTR ds:0x42a19f
  423c0b:	mov    eax,DWORD PTR [esp+0x20]
  423c0f:	sub    DWORD PTR ds:0x42a13f,0x2657
  423c19:	xor    eax,edi
  423c1b:	add    eax,ebx
  423c1d:	mov    ds:0x429feb,eax
  423c22:	dec    DWORD PTR ds:0x42a18b
  423c28:	mov    eax,DWORD PTR [esp+0x20]
  423c2c:	xor    DWORD PTR ds:0x42a15b,0x42a1af
  423c36:	xor    eax,edi
  423c38:	sbb    DWORD PTR ds:0x42a157,0xceb
  423c42:	add    eax,ebx
  423c44:	sbb    DWORD PTR ds:0x42a177,0x42a19f
  423c4e:	mov    ds:0x429527,eax
  423c53:	sub    eax,0xfb3
  423c58:	mov    eax,ds:0x42942f
  423c5d:	not    DWORD PTR ds:0x42a1a3
  423c63:	mov    eax,DWORD PTR [eax+0x18c]
  423c69:	sub    DWORD PTR ds:0x42a133,0x42a19b
  423c73:	mov    eax,DWORD PTR [eax]
  423c75:	not    DWORD PTR ds:0x42a133
  423c7b:	mov    DWORD PTR [esp+0x60],eax
  423c7f:	adc    DWORD PTR ds:0x42a1c7,0x42a1af
  423c89:	mov    eax,0xf89c85bd
  423c8e:	mov    DWORD PTR [esp+0x18],eax
  423c92:	sbb    DWORD PTR ds:0x42a17f,0x42a177
  423c9c:	mov    DWORD PTR [esp+0x18],eax
  423ca0:	sub    DWORD PTR ds:0x42a143,0x5dcc
  423caa:	mov    DWORD PTR [esp+0x18],eax
  423cae:	mov    DWORD PTR [esp+0x18],0xf89c85b9
  423cb6:	sbb    DWORD PTR ds:0x42a1a3,0x2005
  423cc0:	mov    DWORD PTR [esp+0x10],eax
  423cc4:	mov    DWORD PTR ds:0x42a1a7,0x202e
  423cce:	mov    DWORD PTR [esp+0x10],0xf89c85b1
  423cd6:	mov    eax,DWORD PTR [esp+0x20]
  423cda:	add    DWORD PTR ds:0x42a187,0x42a19f
  423ce4:	xor    eax,edi
  423ce6:	or     DWORD PTR ds:0x42a15b,0x42a163
  423cf0:	add    eax,ebx
  423cf2:	jmp    0x423fa2
  423cf7:	dec    DWORD PTR ds:0x42a143
  423cfd:	lea    eax,[esp+0x44]
  423d01:	adc    DWORD PTR ds:0x42a16f,0x2f79
  423d0b:	push   eax
  423d0c:	xor    DWORD PTR ds:0x42a13b,0x2364
  423d16:	push   0x4295ef
  423d1b:	push   0x429603
  423d20:	push   0x42962b
  423d25:	sub    DWORD PTR ds:0x42a16b,0x2bd1
  423d2f:	call   esi
  423d31:	mov    DWORD PTR ds:0x42a147,0x6294
  423d3b:	shl    eax,0x15
  423d3e:	cmp    eax,0x1000000
  423d43:	jne    0x423a00
  423d49:	dec    DWORD PTR ds:0x42a163
  423d4f:	push   0x429653
  423d54:	adc    DWORD PTR ds:0x42a1cb,0x42a1af
  423d5e:	call   DWORD PTR ds:0x42a29f
  423d64:	add    DWORD PTR ds:0x42a14b,0x6241
  423d6e:	test   eax,eax
  423d70:	jne    0x423a00
  423d76:	or     DWORD PTR ds:0x42a133,0x259a
  423d80:	lea    eax,[esp+0x78]
  423d84:	push   eax
  423d85:	push   0x42966f
  423d8a:	xor    DWORD PTR ds:0x42a17b,0x66c
  423d94:	call   DWORD PTR ds:0x42a2bb
  423d9a:	cmp    eax,0xffffffff
  423d9d:	mov    DWORD PTR ds:0x42a187,0x7420
  423da7:	jne    0x423a00
  423dad:	and    DWORD PTR ds:0x42a167,0x0
  423db7:	mov    eax,ds:0x42a167
  423dbc:	inc    eax
  423dbd:	mov    ds:0x42a167,eax
  423dc2:	cmp    DWORD PTR ds:0x42a167,0x5
  423dc9:	jl     0x423e11
  423dcf:	jmp    0x423dec
  423dd4:	push   0x38f5
  423dd9:	push   DWORD PTR [ebp-0x10]
  423ddc:	push   0x7b72
  423de1:	push   0x6a40
  423de6:	call   DWORD PTR ds:0x42a2af
  423dec:	cmp    DWORD PTR ds:0x42a167,0x4
  423df3:	jne    0x423e04
  423df9:	mov    eax,ds:0x42a167
  423dfe:	inc    eax
  423dff:	mov    ds:0x42a167,eax
  423e04:	cmp    DWORD PTR ds:0x42a167,0x12
  423e0b:	jb     0x423db7
  423e11:	mov    eax,DWORD PTR [esp+0xc]
  423e15:	mov    ecx,DWORD PTR [esp+0x10]
  423e19:	dec    DWORD PTR ds:0x42a15f
  423e1f:	xor    eax,edi
  423e21:	sub    DWORD PTR ds:0x42a1a7,0x2267
  423e2b:	lea    eax,[eax+ecx*1+0x3272ef]
  423e32:	sbb    DWORD PTR ds:0x42a1bb,0x1a84
  423e3c:	push   eax
  423e3d:	and    DWORD PTR ds:0x42a15f,0x0
  423e47:	jmp    0x423e57
  423e4c:	mov    eax,ds:0x42a15f
  423e51:	inc    eax
  423e52:	mov    ds:0x42a15f,eax
  423e57:	cmp    DWORD PTR ds:0x42a15f,0x12
  423e5e:	jae    0x423e8f
  423e64:	cmp    DWORD PTR ds:0x42a15f,0x21
  423e6b:	jb     0x423e8f
  423e71:	jmp    0x423e8a
  423e76:	push   DWORD PTR [ebp-0x24]
  423e79:	push   DWORD PTR [ebp-0xc]
  423e7c:	push   0x42a1af
  423e81:	push   DWORD PTR [ebp-0x14]
  423e84:	call   DWORD PTR ds:0x42a2b3
  423e8a:	jmp    0x423e4c
  423e8f:	mov    eax,DWORD PTR [esp+0x1c]
  423e93:	add    DWORD PTR ds:0x42a1c3,0x42a19f
  423e9d:	xor    eax,edi
  423e9f:	adc    DWORD PTR ds:0x42a147,0x3c17
  423ea9:	lea    eax,[ebp+eax*1+0x3272f7]
  423eb0:	and    DWORD PTR ds:0x42a18b,0x7df0
  423eba:	push   eax
  423ebb:	mov    eax,ds:0x42a12b
  423ec0:	xor    DWORD PTR ds:0x42a1ab,eax
  423ec6:	mov    eax,ds:0x42942f
  423ecb:	xor    DWORD PTR ds:0x42a147,0x5716
  423ed5:	push   DWORD PTR [eax+0x1bc]
  423edb:	inc    DWORD PTR ds:0x42a1c3
  423ee1:	call   0x424ad1
  423ee6:	add    DWORD PTR ds:0x42a18f,ebx
  423eec:	mov    eax,DWORD PTR [esp+0xc]
  423ef0:	and    DWORD PTR ds:0x42a18f,0x0
  423efa:	mov    ecx,DWORD PTR ds:0x42a18f
  423f00:	inc    ecx
  423f01:	mov    DWORD PTR ds:0x42a18f,ecx
  423f07:	cmp    DWORD PTR ds:0x42a18f,0x23
  423f0e:	jg     0x423f40
  423f14:	jmp    0x423f33
  423f19:	push   0x42a137
  423f1e:	push   0x3da7
  423f23:	push   0x4290e5
  423f28:	push   0x42912b
  423f2d:	call   DWORD PTR ds:0x42a2b7
  423f33:	cmp    DWORD PTR ds:0x42a18f,0x1c
  423f3a:	jb     0x423efa
  423f40:	mov    ecx,DWORD PTR [esp+0x10]
  423f44:	and    DWORD PTR ds:0x42a1a3,0x0
  423f4e:	jmp    0x423f60
  423f53:	mov    edx,DWORD PTR ds:0x42a1a3
  423f59:	inc    edx
  423f5a:	mov    DWORD PTR ds:0x42a1a3,edx
  423f60:	cmp    DWORD PTR ds:0x42a1a3,0x15
  423f67:	jae    0x423f8f
  423f6d:	cmp    DWORD PTR ds:0x42a1a3,0x23
  423f74:	jl     0x423f8f
  423f7a:	jmp    0x423f8a
  423f7f:	push   0x2b36
  423f84:	call   DWORD PTR ds:0x42a2bf
  423f8a:	jmp    0x423f53
  423f8f:	xor    eax,edi
  423f91:	add    DWORD PTR ds:0x42a15b,0x498
  423f9b:	lea    eax,[ecx+eax*1+0x3272ef]
  423fa2:	add    DWORD PTR ds:0x42a1d3,0x5749
  423fac:	mov    ecx,DWORD PTR [esp+0xc]
  423fb0:	and    DWORD PTR ds:0x42a18f,ecx
  423fb6:	mov    edx,DWORD PTR [esp+0xc]
  423fba:	xor    edx,edi
  423fbc:	xor    ecx,edi
  423fbe:	add    ecx,edx
  423fc0:	mov    edx,DWORD PTR [esp+0xc]
  423fc4:	xor    edx,edi
  423fc6:	mov    DWORD PTR ds:0x42a15f,0x7e75
  423fd0:	lea    ecx,[ecx+edx*1+0x9758cd]
  423fd7:	mov    DWORD PTR ds:0x42a14b,0x16f9
  423fe1:	mov    DWORD PTR [esp+0x10],eax
  423fe5:	push   0xf
  423fe7:	mov    DWORD PTR ds:0x42a1bb,0x175a
  423ff1:	cmp    eax,ecx
  423ff3:	mov    DWORD PTR ds:0x42a15f,0x2b18
  423ffd:	jbe    0x423cf7
  424003:	mov    eax,DWORD PTR [ebp+0xc]
  424006:	add    ecx,DWORD PTR ds:0x42a173
  42400c:	mov    ds:0x4292b3,eax
  424011:	mov    eax,DWORD PTR [ebp+0x10]
  424014:	xor    ecx,ecx
  424016:	xor    ecx,DWORD PTR ds:0x42a1b3
  42401c:	sbb    DWORD PTR ds:0x42a1cb,ecx
  424022:	mov    ds:0x42950f,eax
  424027:	mov    eax,ds:0x4292b3
  42402c:	mov    ecx,DWORD PTR ds:0x42a12f
  424032:	or     ecx,DWORD PTR ds:0x42a15f
  424038:	mov    DWORD PTR ds:0x42a12f,ecx
  42403e:	mov    ecx,DWORD PTR [esp+0x34]
  424042:	adc    DWORD PTR ds:0x42a1c7,0x192d
  42404c:	sub    eax,ebx
  42404e:	xor    eax,edi
  424050:	or     DWORD PTR ds:0x42a1af,0x42a1cb
  42405a:	mov    DWORD PTR [ecx],eax
  42405c:	sub    DWORD PTR ds:0x42a187,0x2768
  424066:	lea    eax,[esp+0x30]
  42406a:	and    DWORD PTR ds:0x42a17b,0x51d9
  424074:	mov    DWORD PTR [esp+0x74],eax
  424078:	lea    eax,[ebp+0x4]
  42407b:	mov    DWORD PTR [esp+0x30],eax
  42407f:	lea    eax,[esp+0x44]
  424083:	xor    DWORD PTR ds:0x42a1ab,0x6aa
  42408d:	push   eax
  42408e:	sub    DWORD PTR ds:0x42a137,0x42a18b
  424098:	push   0x42968b
  42409d:	push   0x42969f
  4240a2:	sub    DWORD PTR ds:0x42a12f,0x6538
  4240ac:	push   0x4296c7
  4240b1:	add    DWORD PTR ds:0x42a17f,0x42a1cf
  4240bb:	call   esi
  4240bd:	shl    eax,0x15
  4240c0:	mov    DWORD PTR ds:0x42a1bf,0x1cd6
  4240ca:	cmp    eax,0x1000000
  4240cf:	mov    DWORD PTR ds:0x42a193,0x32c8
  4240d9:	jne    0x423a00
  4240df:	push   0x4296ef
  4240e4:	call   DWORD PTR ds:0x42a29f
  4240ea:	xor    DWORD PTR ds:0x42a16f,0x42a177
  4240f4:	test   eax,eax
  4240f6:	jne    0x423a00
  4240fc:	adc    DWORD PTR ds:0x42a16f,0x7895
  424106:	lea    eax,[esp+0x78]
  42410a:	push   eax
  42410b:	push   0x42970b
  424110:	call   DWORD PTR ds:0x42a2bb
  424116:	cmp    eax,0xffffffff
  424119:	jne    0x423a00
  42411f:	push   0xf
  424121:	lea    eax,[esp+0x44]
  424125:	push   eax
  424126:	sub    DWORD PTR ds:0x42a19b,0x42a167
  424130:	push   0x429727
  424135:	sbb    DWORD PTR ds:0x42a18b,0x654e
  42413f:	push   0x42973b
  424144:	push   0x429763
  424149:	add    DWORD PTR ds:0x42a15f,0x4c0a
  424153:	call   esi
  424155:	shl    eax,0x15
  424158:	mov    DWORD PTR ds:0x42a17b,0x49de
  424162:	cmp    eax,0x1000000
  424167:	mov    DWORD PTR ds:0x42a1a7,0x39fb
  424171:	jne    0x423a00
  424177:	sbb    DWORD PTR ds:0x42a1bb,0x7658
  424181:	push   0x42978b
  424186:	call   DWORD PTR ds:0x42a29f
  42418c:	test   eax,eax
  42418e:	jne    0x423a00
  424194:	lea    eax,[esp+0x78]
  424198:	adc    DWORD PTR ds:0x42a14f,0x33c9
  4241a2:	push   eax
  4241a3:	push   0x4297a7
  4241a8:	and    DWORD PTR ds:0x42a187,0x42a1c3
  4241b2:	call   DWORD PTR ds:0x42a2bb
  4241b8:	cmp    eax,0xffffffff
  4241bb:	jne    0x423a00
  4241c1:	add    DWORD PTR ds:0x42a14f,0x42a1b3
  4241cb:	push   0xf
  4241cd:	adc    DWORD PTR ds:0x42a14f,0x42a17b
  4241d7:	lea    eax,[esp+0x44]
  4241db:	adc    DWORD PTR ds:0x42a197,0x4372
  4241e5:	push   eax
  4241e6:	sub    DWORD PTR ds:0x42a1c3,0x57ed
  4241f0:	push   0x4297c3
  4241f5:	push   0x4297d7
  4241fa:	push   0x4297ff
  4241ff:	sbb    DWORD PTR ds:0x42a143,0x42a1d3
  424209:	call   esi
  42420b:	shl    eax,0x15
  42420e:	cmp    eax,0x1000000
  424213:	mov    DWORD PTR ds:0x42a1bb,0x7ab0
  42421d:	jne    0x423a00
  424223:	and    DWORD PTR ds:0x42a1b7,0x42a16b
  42422d:	push   0x429827
  424232:	neg    DWORD PTR ds:0x42a13f
  424238:	call   DWORD PTR ds:0x42a29f
  42423e:	test   eax,eax
  424240:	mov    DWORD PTR ds:0x42a183,0x529e
  42424a:	jne    0x423a00
  424250:	or     DWORD PTR ds:0x42a173,0x42a13f
  42425a:	lea    eax,[esp+0x78]
  42425e:	push   eax
  42425f:	adc    DWORD PTR ds:0x42a14b,0x42a183
  424269:	push   0x429843
  42426e:	call   DWORD PTR ds:0x42a2bb
  424274:	mov    DWORD PTR ds:0x42a167,0x1720
  42427e:	cmp    eax,0xffffffff
  424281:	mov    DWORD PTR ds:0x42a1b3,0x34b9
  42428b:	jne    0x423a00
  424291:	xor    DWORD PTR ds:0x42a127,0x42a193
  42429b:	push   0xf
  42429d:	lea    eax,[esp+0x44]
  4242a1:	push   eax
  4242a2:	push   0x42985f
  4242a7:	sbb    DWORD PTR ds:0x42a13f,0x42a14b
  4242b1:	push   0x429873
  4242b6:	push   0x42989b
  4242bb:	call   esi
  4242bd:	mov    DWORD PTR ds:0x42a183,0x7c87
  4242c7:	shl    eax,0x15
  4242ca:	cmp    eax,0x1000000
  4242cf:	jne    0x423a00
  4242d5:	sub    DWORD PTR ds:0x42a14f,0x1b5
  4242df:	push   0x4298c3
  4242e4:	adc    DWORD PTR ds:0x42a15f,0x2d72
  4242ee:	call   DWORD PTR ds:0x42a29f
  4242f4:	test   eax,eax
  4242f6:	jne    0x423a00
  4242fc:	xor    DWORD PTR ds:0x42a177,0x5023
  424306:	lea    eax,[esp+0x78]
  42430a:	add    DWORD PTR ds:0x42a19b,0x39d
  424314:	push   eax
  424315:	push   0x4298df
  42431a:	call   DWORD PTR ds:0x42a2bb
  424320:	mov    DWORD PTR ds:0x42a16f,0xd24
  42432a:	cmp    eax,0xffffffff
  42432d:	jne    0x423a00
  424333:	not    DWORD PTR ds:0x42a157
  424339:	push   0xf
  42433b:	mov    DWORD PTR ds:0x42a197,0x1e5a
  424345:	lea    eax,[esp+0x44]
  424349:	push   eax
  42434a:	push   0x4298fb
  42434f:	push   0x42990f
  424354:	push   0x429937
  424359:	add    DWORD PTR ds:0x42a17f,0x42a1a7
  424363:	call   esi
  424365:	mov    DWORD PTR ds:0x42a19f,0x41c3
  42436f:	shl    eax,0x15
  424372:	cmp    eax,0x1000000
  424377:	jne    0x423a00
  42437d:	sub    DWORD PTR ds:0x42a137,0x2237
  424387:	push   0x42995f
  42438c:	xor    DWORD PTR ds:0x42a15b,0x42a1d3
  424396:	call   DWORD PTR ds:0x42a29f
  42439c:	test   eax,eax
  42439e:	mov    DWORD PTR ds:0x42a167,0x62c6
  4243a8:	jne    0x423a00
  4243ae:	and    DWORD PTR ds:0x42a1af,0x5eb4
  4243b8:	lea    eax,[esp+0x78]
  4243bc:	adc    DWORD PTR ds:0x42a15b,0x4918
  4243c6:	push   eax
  4243c7:	or     DWORD PTR ds:0x42a177,0x42a12f
  4243d1:	push   0x42997b
  4243d6:	sbb    DWORD PTR ds:0x42a173,0x42a133
  4243e0:	call   DWORD PTR ds:0x42a2bb
  4243e6:	mov    DWORD PTR ds:0x42a12b,0x13e7
  4243f0:	cmp    eax,0xffffffff
  4243f3:	mov    DWORD PTR ds:0x42a1ab,0xa62
  4243fd:	jne    0x423a00
  424403:	xor    DWORD PTR ds:0x42a137,0x42a197
  42440d:	push   0xf
  42440f:	lea    eax,[esp+0x44]
  424413:	or     DWORD PTR ds:0x42a18f,0x2cef
  42441d:	push   eax
  42441e:	push   0x429997
  424423:	push   0x4299ab
  424428:	sub    DWORD PTR ds:0x42a17f,0x42a16b
  424432:	push   0x4299d3
  424437:	call   esi
  424439:	shl    eax,0x15
  42443c:	mov    DWORD PTR ds:0x42a16f,0x43ec
  424446:	cmp    eax,0x1000000
  42444b:	mov    DWORD PTR ds:0x42a1a3,0x18cb
  424455:	jne    0x423a00
  42445b:	add    DWORD PTR ds:0x42a18b,0x5057
  424465:	push   0x4299fb
  42446a:	or     DWORD PTR ds:0x42a19f,0x48df
  424474:	call   DWORD PTR ds:0x42a29f
  42447a:	and    DWORD PTR ds:0x42a1bf,0x7c0c
  424484:	test   eax,eax
  424486:	mov    DWORD PTR ds:0x42a187,0x257b
  424490:	jne    0x423a00
  424496:	xor    DWORD PTR ds:0x42a1cb,0x42a1c7
  4244a0:	lea    eax,[esp+0x78]
  4244a4:	add    DWORD PTR ds:0x42a197,0x4894
  4244ae:	push   eax
  4244af:	or     DWORD PTR ds:0x42a12b,0x42a19f
  4244b9:	push   0x429a17
  4244be:	sbb    DWORD PTR ds:0x42a127,0x42a14f
  4244c8:	call   DWORD PTR ds:0x42a2bb
  4244ce:	cmp    eax,0xffffffff
  4244d1:	mov    DWORD PTR ds:0x42a177,0xc3a
  4244db:	jne    0x423a00
  4244e1:	push   0xf
  4244e3:	lea    eax,[esp+0x44]
  4244e7:	inc    DWORD PTR ds:0x42a1cb
  4244ed:	push   eax
  4244ee:	push   0x429a33
  4244f3:	push   0x429a47
  4244f8:	sub    DWORD PTR ds:0x42a13b,0x42a14f
  424502:	push   0x429a6f
  424507:	xor    DWORD PTR ds:0x42a15f,0x6779
  424511:	call   esi
  424513:	mov    DWORD PTR ds:0x42a1b7,0x68bf
  42451d:	shl    eax,0x15
  424520:	mov    DWORD PTR ds:0x42a13b,0x5b0c
  42452a:	cmp    eax,0x1000000
  42452f:	mov    DWORD PTR ds:0x42a133,0x4026
  424539:	jne    0x423a00
  42453f:	push   0x429a97
  424544:	and    DWORD PTR ds:0x42a1b7,0x42a147
  42454e:	call   DWORD PTR ds:0x42a29f
  424554:	test   eax,eax
  424556:	jne    0x423a00
  42455c:	lea    eax,[esp+0x78]
  424560:	push   eax
  424561:	push   0x429ab3
  424566:	call   DWORD PTR ds:0x42a2bb
  42456c:	mov    DWORD PTR ds:0x42a1b7,0xded
  424576:	cmp    eax,0xffffffff
  424579:	mov    DWORD PTR ds:0x42a13b,0x163f
  424583:	jne    0x423a00
  424589:	or     DWORD PTR ds:0x42a1cf,0x42a13b
  424593:	push   0xf
  424595:	lea    eax,[esp+0x44]
  424599:	push   eax
  42459a:	push   0x429acf
  42459f:	push   0x429ae3
  4245a4:	add    DWORD PTR ds:0x42a167,0x42a1c7
  4245ae:	push   0x429b0b
  4245b3:	or     DWORD PTR ds:0x42a157,0x42a1a3
  4245bd:	call   esi
  4245bf:	shl    eax,0x15
  4245c2:	mov    DWORD PTR ds:0x42a1a7,0x724c
  4245cc:	cmp    eax,0x1000000
  4245d1:	mov    DWORD PTR ds:0x42a13b,0x4087
  4245db:	jne    0x423a00
  4245e1:	xor    DWORD PTR ds:0x42a163,0x42a13b
  4245eb:	push   0x429b33
  4245f0:	or     DWORD PTR ds:0x42a143,0x1c84
  4245fa:	call   DWORD PTR ds:0x42a29f
  424600:	xor    DWORD PTR ds:0x42a193,0x1623
  42460a:	test   eax,eax
  42460c:	mov    DWORD PTR ds:0x42a15f,0x197f
  424616:	jne    0x423a00
  42461c:	lea    eax,[esp+0x78]
  424620:	inc    DWORD PTR ds:0x42a137
  424626:	push   eax
  424627:	push   0x429b4f
  42462c:	xor    DWORD PTR ds:0x42a1bb,0x42a1b7
  424636:	call   DWORD PTR ds:0x42a2bb
  42463c:	mov    DWORD PTR ds:0x42a16f,0x1cd6
  424646:	cmp    eax,0xffffffff
  424649:	jne    0x423a00
  42464f:	sbb    DWORD PTR ds:0x42a17f,0x4eb9
  424659:	push   0xf
  42465b:	lea    eax,[esp+0x44]
  42465f:	or     DWORD PTR ds:0x42a1d3,0x42a193
  424669:	push   eax
  42466a:	sub    DWORD PTR ds:0x42a17b,0x42a1bb
  424674:	push   0x429b6b
  424679:	add    DWORD PTR ds:0x42a16b,0x35f5
  424683:	push   0x429b7f
  424688:	push   0x429ba7
  42468d:	sbb    DWORD PTR ds:0x42a1a7,0x42a167
  424697:	call   esi
  424699:	shl    eax,0x15
  42469c:	cmp    eax,0x1000000
  4246a1:	jne    0x423a00
  4246a7:	push   0x429bcf
  4246ac:	call   DWORD PTR ds:0x42a29f
  4246b2:	test   eax,eax
  4246b4:	jne    0x423a00
  4246ba:	lea    eax,[esp+0x78]
  4246be:	push   eax
  4246bf:	push   0x429beb
  4246c4:	call   DWORD PTR ds:0x42a2bb
  4246ca:	cmp    eax,0xffffffff
  4246cd:	jne    0x423a00
  4246d3:	push   0xf
  4246d5:	lea    eax,[esp+0x44]
  4246d9:	push   eax
  4246da:	push   0x429c07
  4246df:	push   0x429c1b
  4246e4:	push   0x429c43
  4246e9:	call   esi
  4246eb:	shl    eax,0x15
  4246ee:	cmp    eax,0x1000000
  4246f3:	jne    0x423a00
  4246f9:	push   0x429c6b
  4246fe:	call   DWORD PTR ds:0x42a29f
  424704:	test   eax,eax
  424706:	jne    0x423a00
  42470c:	lea    eax,[esp+0x78]
  424710:	push   eax
  424711:	push   0x429c87
  424716:	call   DWORD PTR ds:0x42a2bb
  42471c:	cmp    eax,0xffffffff
  42471f:	jne    0x423a00
  424725:	push   0xf
  424727:	lea    eax,[esp+0x44]
  42472b:	push   eax
  42472c:	push   0x429ca3
  424731:	push   0x429cb7
  424736:	push   0x429cdf
  42473b:	call   esi
  42473d:	shl    eax,0x15
  424740:	cmp    eax,0x1000000
  424745:	jne    0x423a00
  42474b:	push   0x429d07
  424750:	call   DWORD PTR ds:0x42a29f
  424756:	test   eax,eax
  424758:	jne    0x423a00
  42475e:	lea    eax,[esp+0x78]
  424762:	push   eax
  424763:	push   0x429d23
  424768:	call   DWORD PTR ds:0x42a2bb
  42476e:	cmp    eax,0xffffffff
  424771:	jne    0x423a00
  424777:	push   0xf
  424779:	lea    eax,[esp+0x44]
  42477d:	push   eax
  42477e:	push   0x429d3f
  424783:	push   0x429d53
  424788:	push   0x429d7b
  42478d:	call   esi
  42478f:	shl    eax,0x15
  424792:	cmp    eax,0x1000000
  424797:	jne    0x423a00
  42479d:	push   0x429da3
  4247a2:	call   DWORD PTR ds:0x42a29f
  4247a8:	test   eax,eax
  4247aa:	jne    0x423a00
  4247b0:	lea    eax,[esp+0x78]
  4247b4:	push   eax
  4247b5:	push   0x429dbf
  4247ba:	call   DWORD PTR ds:0x42a2bb
  4247c0:	cmp    eax,0xffffffff
  4247c3:	jne    0x423a00
  4247c9:	mov    eax,DWORD PTR [esp+0x3c]
  4247cd:	cmp    eax,0xf89c85ba
  4247d2:	je     0x424831
  4247d8:	mov    eax,DWORD PTR [esp+0x20]
  4247dc:	mov    ecx,DWORD PTR [esp+0x38]
  4247e0:	xor    eax,edi
  4247e2:	add    eax,ebx
  4247e4:	cmp    eax,ecx
  4247e6:	je     0x424831
  4247ec:	mov    eax,ds:0x42942f
  4247f1:	mov    eax,DWORD PTR [eax+0x194]
  4247f7:	mov    ecx,DWORD PTR [eax]
  4247f9:	mov    eax,DWORD PTR [ecx+0x3c]
  4247fc:	push   DWORD PTR ds:0x42950f
  424802:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424806:	push   DWORD PTR ds:0x4292b3
  42480c:	add    eax,ecx
  42480e:	mov    ecx,DWORD PTR ds:0x42942f
  424814:	mov    ecx,DWORD PTR [ecx+0x194]
  42481a:	push   DWORD PTR [ecx]
  42481c:	call   eax
  42481e:	mov    ecx,DWORD PTR ds:0x42942f
  424824:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42482a:	mov    DWORD PTR [ecx],eax
  42482c:	jmp    0x424a55
  424831:	mov    eax,DWORD PTR [esp+0x20]
  424835:	mov    ecx,DWORD PTR [esp+0x60]
  424839:	xor    eax,edi
  42483b:	add    eax,ebx
  42483d:	cmp    eax,ecx
  42483f:	jne    0x4248a8
  424845:	mov    eax,DWORD PTR [esp+0x20]
  424849:	mov    ecx,DWORD PTR ds:0x42942f
  42484f:	mov    ecx,DWORD PTR [ecx+0x198]
  424855:	xor    eax,edi
  424857:	add    eax,ebx
  424859:	cmp    eax,DWORD PTR [ecx]
  42485b:	jne    0x424881
  424861:	mov    eax,DWORD PTR [esp+0x20]
  424865:	push   0xf89c85b9
  42486a:	xor    eax,edi
  42486c:	add    eax,ebx
  42486e:	push   eax
  42486f:	push   0xf89c85bd
  424874:	push   DWORD PTR [esp+0x18]
  424878:	push   DWORD PTR [esp+0x30]
  42487c:	call   0x420148
  424881:	push   DWORD PTR [esp+0xc]
  424885:	push   DWORD PTR [esp+0x24]
  424889:	call   0x401000
  42488e:	mov    eax,DWORD PTR [esp+0x20]
  424892:	xor    eax,edi
  424894:	add    eax,ebx
  424896:	mov    ds:0x4294bb,eax
  42489b:	mov    eax,DWORD PTR [esp+0x20]
  42489f:	xor    eax,edi
  4248a1:	add    eax,ebx
  4248a3:	mov    ds:0x4294b3,eax
  4248a8:	mov    eax,DWORD PTR [esp+0x2c]
  4248ac:	test   eax,eax
  4248ae:	je     0x424a55
  4248b4:	push   0xf
  4248b6:	lea    eax,[esp+0x44]
  4248ba:	push   eax
  4248bb:	push   0x429ddb
  4248c0:	mov    DWORD PTR [esp+0x70],0xf152c32
  4248c8:	push   0x429def
  4248cd:	mov    DWORD PTR [esp+0x7c],0x712ed2f
  4248d5:	mov    DWORD PTR [esp+0x84],0x373fc01
  4248e0:	push   0x429e17
  4248e5:	mov    DWORD PTR [esp+0x7c],0x72670ad1
  4248ed:	call   esi
  4248ef:	shl    eax,0x15
  4248f2:	cmp    eax,0x1000000
  4248f7:	jne    0x423a00
  4248fd:	push   0x429e3f
  424902:	call   DWORD PTR ds:0x42a29f
  424908:	test   eax,eax
  42490a:	jne    0x423a00
  424910:	lea    eax,[esp+0x78]
  424914:	push   eax
  424915:	push   0x429e5b
  42491a:	call   DWORD PTR ds:0x42a2bb
  424920:	cmp    eax,0xffffffff
  424923:	jne    0x423a00
  424929:	call   0x41da00
  42492e:	mov    eax,DWORD PTR [esp+0x34]
  424932:	mov    eax,DWORD PTR [esp+0xc]
  424936:	mov    DWORD PTR [esp+0x30],eax
  42493a:	mov    eax,DWORD PTR [esp+0x20]
  42493e:	mov    DWORD PTR [esp+0xc],eax
  424942:	mov    eax,eax
  424944:	mov    eax,ds:0x42942f
  424949:	mov    ecx,DWORD PTR [eax+0x1c0]
  42494f:	mov    edx,DWORD PTR [ecx]
  424951:	and    DWORD PTR [esp+0x1c],0x0
  424956:	mov    esi,0xfabdbeda
  42495b:	add    edx,esi
  42495d:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424962:	mov    ecx,0x8a29a13b
  424967:	xor    edx,ecx
  424969:	mov    DWORD PTR [esp+0x10],edx
  42496d:	mov    edx,DWORD PTR [esp+0x1c]
  424971:	xor    edx,0x0
  424974:	cmp    DWORD PTR [esp+0x10],0x70941fe0
  42497c:	mov    DWORD PTR [esp+0x14],edx
  424980:	jne    0x42498f
  424986:	cmp    edx,0xffffffff
  424989:	je     0x4249f8
  42498f:	mov    eax,DWORD PTR [eax+0x1c8]
  424995:	mov    eax,DWORD PTR [eax]
  424997:	cdq    
  424998:	add    eax,esi
  42499a:	adc    edx,0xffffffff
  42499d:	and    DWORD PTR [esp+0x1c],0x0
  4249a2:	xor    edx,0x0
  4249a5:	mov    DWORD PTR [esp+0x24],edx
  4249a9:	mov    edx,DWORD PTR [esp+0xc]
  4249ad:	mov    DWORD PTR [esp+0x18],edx
  4249b1:	xor    eax,ecx
  4249b3:	add    DWORD PTR [esp+0x18],esi
  4249b7:	mov    edx,DWORD PTR [esp+0x18]
  4249bb:	adc    DWORD PTR [esp+0x1c],0xffffffff
  4249c0:	xor    edx,ecx
  4249c2:	mov    DWORD PTR [esp+0x10],edx
  4249c6:	mov    edx,DWORD PTR [esp+0x1c]
  4249ca:	xor    edx,0x0
  4249cd:	mov    DWORD PTR [esp+0x14],edx
  4249d1:	cmp    DWORD PTR [esp+0x10],eax
  4249d5:	jne    0x4249e7
  4249db:	mov    eax,DWORD PTR [esp+0x24]
  4249df:	cmp    edx,eax
  4249e1:	je     0x4249f8
  4249e7:	mov    eax,DWORD PTR [esp+0xc]
  4249eb:	add    eax,DWORD PTR [esp+0x30]
  4249ef:	mov    DWORD PTR [esp+0xc],eax
  4249f3:	jmp    0x424a55
  4249f8:	mov    eax,ds:0x4294b3
  4249fd:	mov    edx,DWORD PTR ds:0x4294bb
  424a03:	xor    eax,edx
  424a05:	mov    ds:0x4294b3,eax
  424a0a:	mov    edx,DWORD PTR ds:0x4294b3
  424a10:	mov    eax,DWORD PTR [esp+0x2c]
  424a14:	add    DWORD PTR [eax],edx
  424a16:	mov    edx,DWORD PTR [esp+0xc]
  424a1a:	mov    eax,ds:0x4294b3
  424a1f:	xor    edx,edi
  424a21:	add    edx,ebx
  424a23:	xor    ebx,ebx
  424a25:	add    edx,esi
  424a27:	adc    ebx,0xffffffff
  424a2a:	xor    edi,edi
  424a2c:	xor    edx,ecx
  424a2e:	xor    ebx,0x0
  424a31:	add    eax,esi
  424a33:	adc    edi,0xffffffff
  424a36:	xor    eax,ecx
  424a38:	xor    edi,0x0
  424a3b:	cmp    eax,edx
  424a3d:	jne    0x424a55
  424a43:	cmp    edi,ebx
  424a45:	jne    0x424a55
  424a4b:	mov    eax,ds:0x4294b3
  424a50:	mov    ds:0x4294bb,eax
  424a55:	push   0xf
  424a57:	lea    eax,[esp+0x44]
  424a5b:	push   eax
  424a5c:	push   0x429e77
  424a61:	push   0x429e8b
  424a66:	push   0x429eb3
  424a6b:	call   DWORD PTR ds:0x42a2cb
  424a71:	shl    eax,0x15
  424a74:	cmp    eax,0x1000000
  424a79:	jne    0x423a00
  424a7f:	push   0x429edb
  424a84:	call   DWORD PTR ds:0x42a29f
  424a8a:	test   eax,eax
  424a8c:	jne    0x423a00
  424a92:	lea    eax,[esp+0x78]
  424a96:	push   eax
  424a97:	push   0x429ef7
  424a9c:	call   DWORD PTR ds:0x42a2bb
  424aa2:	cmp    eax,0xffffffff
  424aa5:	jne    0x423a00
  424aab:	mov    eax,ds:0x42942f
  424ab0:	push   0x4
  424ab2:	add    eax,0x1cc
  424ab7:	push   eax
  424ab8:	lea    eax,[esp+0x3c]
  424abc:	push   eax
  424abd:	call   0x424ad1
  424ac2:	mov    eax,DWORD PTR [esp+0x34]
  424ac6:	mov    eax,DWORD PTR [eax]
  424ac8:	pop    edi
  424ac9:	pop    esi
  424aca:	pop    ebx
  424acb:	mov    esp,ebp
  424acd:	pop    ebp
  424ace:	ret    0xc
  424ad1:	push   ebp
  424ad2:	mov    ebp,esp
  424ad4:	sub    esp,0x10
  424ad7:	and    DWORD PTR ds:0x42a17f,0x0
  424ae1:	xor    edx,edx
  424ae3:	add    edx,DWORD PTR ds:0x42a17f
  424ae9:	inc    edx
  424aea:	mov    DWORD PTR ds:0x42a17f,edx
  424af0:	cmp    DWORD PTR ds:0x42a17f,0xc
  424af7:	jb     0x424b37
  424afd:	jmp    0x424b10
  424b02:	push   DWORD PTR [ebp-0xc]
  424b05:	push   0x4b82
  424b0a:	call   DWORD PTR ds:0x42a2c3
  424b10:	cmp    DWORD PTR ds:0x42a17f,0xb
  424b17:	jne    0x424b2a
  424b1d:	mov    edx,DWORD PTR ds:0x42a17f
  424b23:	inc    edx
  424b24:	mov    DWORD PTR ds:0x42a17f,edx
  424b2a:	cmp    DWORD PTR ds:0x42a17f,0x16
  424b31:	jb     0x424ae1
  424b37:	mov    eax,0xf89c85b9
  424b3c:	mov    DWORD PTR [ebp-0x4],eax
  424b3f:	sbb    ecx,edx
  424b41:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424b48:	mov    ecx,DWORD PTR [ebp-0x4]
  424b4b:	mov    DWORD PTR ds:0x42a1bb,0x13
  424b55:	cmp    DWORD PTR ds:0x42a1bb,0x0
  424b5c:	je     0x424b96
  424b62:	cmp    DWORD PTR ds:0x42a1bb,0x1e
  424b69:	jbe    0x424b96
  424b6f:	jmp    0x424b84
  424b74:	push   0x5b3a
  424b79:	push   0x40cb
  424b7e:	call   DWORD PTR ds:0x42a2c7
  424b84:	mov    edx,DWORD PTR ds:0x42a1bb
  424b8a:	dec    edx
  424b8b:	mov    DWORD PTR ds:0x42a1bb,edx
  424b91:	jmp    0x424b55
  424b96:	push   esi
  424b97:	sub    DWORD PTR ds:0x42a1c7,ecx
  424b9d:	mov    edx,0x75108a8
  424ba2:	add    DWORD PTR ds:0x42a197,edi
  424ba8:	xor    ecx,edx
  424baa:	neg    esi
  424bac:	mov    esi,0x3272ef
  424bb1:	adc    DWORD PTR ds:0x42a133,0x42a12f
  424bbb:	push   edi
  424bbc:	mov    edi,DWORD PTR [ebp+0x10]
  424bbf:	add    ecx,esi
  424bc1:	mov    DWORD PTR ds:0x42a1a7,0x8eb
  424bcb:	cmp    ecx,edi
  424bcd:	mov    DWORD PTR ds:0x42a1a7,0x4f38
  424bd7:	je     0x424d08
  424bdd:	mov    DWORD PTR ds:0x42a1c7,0x14
  424be7:	cmp    DWORD PTR ds:0x42a1c7,0x0
  424bee:	je     0x424c49
  424bf4:	cmp    DWORD PTR ds:0x42a1c7,0xb
  424bfb:	jle    0x424c49
  424c01:	jmp    0x424c1b
  424c06:	push   0x7f3b
  424c0b:	push   0x42a1bb
  424c10:	push   0x400000
  424c15:	call   DWORD PTR ds:0x42a2cf
  424c1b:	cmp    DWORD PTR ds:0x42a1c7,0xc
  424c22:	jne    0x424c35
  424c28:	mov    ecx,DWORD PTR ds:0x42a1c7
  424c2e:	dec    ecx
  424c2f:	mov    DWORD PTR ds:0x42a1c7,ecx
  424c35:	xor    ecx,ecx
  424c37:	add    ecx,DWORD PTR ds:0x42a1c7
  424c3d:	dec    ecx
  424c3e:	mov    DWORD PTR ds:0x42a1c7,ecx
  424c44:	jmp    0x424be7
  424c49:	mov    ecx,DWORD PTR [ebp-0x4]
  424c4c:	mov    edi,DWORD PTR [ebp+0x10]
  424c4f:	xor    eax,eax
  424c51:	xor    ecx,edx
  424c53:	add    ecx,esi
  424c55:	add    edi,0xfabdbeda
  424c5b:	adc    eax,0xffffffff
  424c5e:	xor    eax,0x0
  424c61:	mov    DWORD PTR [ebp-0xc],eax
  424c64:	push   ebx
  424c65:	xor    ebx,ebx
  424c67:	xor    edi,0x8a29a13b
  424c6d:	mov    eax,ecx
  424c6f:	add    eax,0xfabdbeda
  424c74:	adc    ebx,0xffffffff
  424c77:	xor    eax,0x8a29a13b
  424c7c:	xor    ebx,0x0
  424c7f:	cmp    eax,edi
  424c81:	jne    0x424c9a
  424c87:	cmp    ebx,DWORD PTR [ebp-0xc]
  424c8a:	je     0x424d02
  424c90:	jmp    0x424c9a
  424c95:	mov    esi,0x3272ef
  424c9a:	mov    eax,DWORD PTR [ebp-0x4]
  424c9d:	mov    edi,DWORD PTR [ebp-0x8]
  424ca0:	xor    edi,edx
  424ca2:	add    edi,esi
  424ca4:	mov    esi,DWORD PTR [ebp+0x8]
  424ca7:	imul   edi,ecx
  424caa:	mov    ebx,DWORD PTR [ebp+0xc]
  424cad:	xor    eax,edx
  424caf:	add    eax,ecx
  424cb1:	mov    al,BYTE PTR [ebx+eax*1+0x3272ef]
  424cb8:	mov    BYTE PTR [edi+esi*1],al
  424cbb:	mov    eax,DWORD PTR [ebp-0x8]
  424cbe:	mov    esi,DWORD PTR [ebp+0x10]
  424cc1:	xor    eax,edx
  424cc3:	xor    ebx,ebx
  424cc5:	add    esi,0xfabdbeda
  424ccb:	adc    ebx,0xffffffff
  424cce:	lea    ecx,[ecx+eax*1+0x3272ef]
  424cd5:	xor    edi,edi
  424cd7:	xor    esi,0x8a29a13b
  424cdd:	xor    ebx,0x0
  424ce0:	mov    eax,ecx
  424ce2:	add    eax,0xfabdbeda
  424ce7:	adc    edi,0xffffffff
  424cea:	xor    eax,0x8a29a13b
  424cef:	xor    edi,0x0
  424cf2:	cmp    eax,esi
  424cf4:	jne    0x424c95
  424cfa:	cmp    edi,ebx
  424cfc:	jne    0x424c95
  424d02:	mov    eax,0xf89c85ba
  424d07:	pop    ebx
  424d08:	pop    edi
  424d09:	pop    esi
  424d0a:	leave  
  424d0b:	ret    0xc
  424d0e:	push   ebp
  424d0f:	mov    ebp,esp
  424d11:	push   ecx
  424d12:	and    edx,DWORD PTR ds:0x42a15b
  424d18:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  424d1f:	mov    DWORD PTR ds:0x42a14b,0x1b
  424d29:	cmp    DWORD PTR ds:0x42a14b,0x0
  424d30:	je     0x424d80
  424d36:	cmp    DWORD PTR ds:0x42a14b,0xe
  424d3d:	ja     0x424d80
  424d43:	jmp    0x424d58
  424d48:	push   0x42a14f
  424d4d:	push   0x85a8
  424d52:	call   DWORD PTR ds:0x42a2d3
  424d58:	cmp    DWORD PTR ds:0x42a14b,0xf
  424d5f:	jne    0x424d70
  424d65:	mov    eax,ds:0x42a14b
  424d6a:	dec    eax
  424d6b:	mov    ds:0x42a14b,eax
  424d70:	mov    eax,ds:0x42a14b
  424d75:	dec    eax
  424d76:	mov    ds:0x42a14b,eax
  424d7b:	jmp    0x424d29
  424d80:	mov    eax,DWORD PTR [ebp+0x8]
  424d83:	and    DWORD PTR ds:0x42a19b,0x0
  424d8d:	mov    edx,DWORD PTR ds:0x42a19b
  424d93:	inc    edx
  424d94:	mov    DWORD PTR ds:0x42a19b,edx
  424d9a:	cmp    DWORD PTR ds:0x42a19b,0x19
  424da1:	jbe    0x424dbf
  424da7:	jmp    0x424db2
  424dac:	call   DWORD PTR ds:0x42a293
  424db2:	cmp    DWORD PTR ds:0x42a19b,0x13
  424db9:	jb     0x424d8d
  424dbf:	movsx  eax,BYTE PTR [eax]
  424dc2:	mov    edx,0x3272ef
  424dc7:	sub    eax,edx
  424dc9:	mov    ecx,0x75108a8
  424dce:	xor    eax,ecx
  424dd0:	cmp    eax,0xf89c85f6
  424dd5:	jne    0x424e04
  424ddb:	mov    eax,DWORD PTR [ebp+0x8]
  424dde:	push   esi
  424ddf:	mov    esi,DWORD PTR [ebp+0x8]
  424de2:	add    esi,DWORD PTR [eax+0x3c]
  424de5:	mov    DWORD PTR [ebp+0x8],esi
  424de8:	mov    eax,DWORD PTR [ebp-0x4]
  424deb:	mov    esi,DWORD PTR [ebp+0x8]
  424dee:	xor    eax,ecx
  424df0:	add    eax,edx
  424df2:	cmp    DWORD PTR [esi+0x54],eax
  424df5:	pop    esi
  424df6:	je     0x424e04
  424dfc:	mov    eax,DWORD PTR [ebp+0x8]
  424dff:	jmp    0x424e0b
  424e04:	mov    eax,DWORD PTR [ebp-0x4]
  424e07:	xor    eax,ecx
  424e09:	add    eax,edx
  424e0b:	leave  
  424e0c:	ret    0x4
  424e0f:	push   ebp
  424e10:	mov    ebp,esp
  424e12:	sub    esp,0xc
  424e15:	sub    edx,edx
  424e17:	push   esi
  424e18:	mov    DWORD PTR ds:0x42a14b,0x4414
  424e22:	mov    esi,0xf89c85b9
  424e27:	and    DWORD PTR ds:0x42a147,0x2b27
  424e31:	mov    DWORD PTR [ebp-0x8],esi
  424e34:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  424e3b:	adc    ecx,ecx
  424e3d:	push   edi
  424e3e:	mov    eax,eax
  424e40:	neg    ecx
  424e42:	mov    eax,DWORD PTR [ebp-0x4]
  424e45:	and    DWORD PTR ds:0x42a173,0x0
  424e4f:	jmp    0x424e63
  424e54:	xor    edi,edi
  424e56:	add    edi,DWORD PTR ds:0x42a173
  424e5c:	inc    edi
  424e5d:	mov    DWORD PTR ds:0x42a173,edi
  424e63:	cmp    DWORD PTR ds:0x42a173,0x17
  424e6a:	jae    0x424eb7
  424e70:	cmp    DWORD PTR ds:0x42a173,0xb
  424e77:	jle    0x424eb7
  424e7d:	jmp    0x424e98
  424e82:	push   DWORD PTR [ebp-0x14]
  424e85:	push   DWORD PTR [ebp-0x24]
  424e88:	push   0x4290b2
  424e8d:	push   0x400000
  424e92:	call   DWORD PTR ds:0x42a297
  424e98:	cmp    DWORD PTR ds:0x42a173,0xa
  424e9f:	jne    0x424eb2
  424ea5:	mov    edi,DWORD PTR ds:0x42a173
  424eab:	inc    edi
  424eac:	mov    DWORD PTR ds:0x42a173,edi
  424eb2:	jmp    0x424e54
  424eb7:	mov    edi,DWORD PTR [ebp-0x8]
  424eba:	mov    ecx,0x75108a8
  424ebf:	xor    eax,ecx
  424ec1:	adc    DWORD PTR ds:0x42a183,0x7f13
  424ecb:	xor    edi,ecx
  424ecd:	mov    edx,0x3272ef
  424ed2:	sub    DWORD PTR ds:0x42a183,0x42a13f
  424edc:	add    edi,edx
  424ede:	add    eax,edx
  424ee0:	imul   eax,edi
  424ee3:	not    edi
  424ee5:	mov    edi,DWORD PTR [ebp+0xc]
  424ee8:	mov    DWORD PTR ds:0x42a163,0x324
  424ef2:	cmp    edi,eax
  424ef4:	je     0x424f50
  424efa:	and    DWORD PTR ds:0x42a177,edx
  424f00:	mov    DWORD PTR [ebp-0xc],esi
  424f03:	mov    eax,DWORD PTR [ebp-0xc]
  424f06:	inc    esi
  424f07:	mov    esi,DWORD PTR [ebp+0xc]
  424f0a:	xor    eax,ecx
  424f0c:	lea    eax,[eax*8+0x19397f0]
  424f13:	mov    eax,DWORD PTR [esi+eax*1]
  424f16:	mov    DWORD PTR [ebp+0xc],eax
  424f19:	mov    eax,DWORD PTR [ebp-0x4]
  424f1c:	mov    esi,DWORD PTR [ebp-0x8]
  424f1f:	xor    eax,ecx
  424f21:	xor    esi,ecx
  424f23:	add    esi,edx
  424f25:	add    eax,edx
  424f27:	imul   eax,esi
  424f2a:	mov    esi,DWORD PTR [ebp+0xc]
  424f2d:	cmp    esi,eax
  424f2f:	je     0x424f50
  424f35:	mov    eax,DWORD PTR [ebp-0x4]
  424f38:	xor    eax,ecx
  424f3a:	mov    ecx,DWORD PTR [ebp+0xc]
  424f3d:	add    eax,edx
  424f3f:	imul   eax,ecx
  424f42:	add    eax,DWORD PTR [ebp+0x8]
  424f45:	mov    DWORD PTR [ebp+0xc],eax
  424f48:	mov    eax,DWORD PTR [ebp+0xc]
  424f4b:	jmp    0x424f61
  424f50:	mov    eax,DWORD PTR [ebp-0x4]
  424f53:	mov    esi,DWORD PTR [ebp-0x8]
  424f56:	xor    esi,ecx
  424f58:	xor    eax,ecx
  424f5a:	add    esi,edx
  424f5c:	add    eax,edx
  424f5e:	imul   eax,esi
  424f61:	pop    edi
  424f62:	pop    esi
  424f63:	leave  
  424f64:	ret    0x8
	...
  424f73:	add    BYTE PTR [ebp+0x4de645],dh
  424f79:	add    BYTE PTR [eax],al
  424f7b:	add    BYTE PTR [edx],al
  424f7d:	add    BYTE PTR [eax],al
  424f7f:	add    BYTE PTR [eax],dh
  424f81:	add    BYTE PTR [eax],al
  424f83:	add    BYTE PTR [eax-0x6ffffdb1],dl
  424f89:	inc    ebx
  424f8a:	add    al,BYTE PTR [eax]
  424f8c:	add    BYTE PTR [eax],al
  424f8e:	add    BYTE PTR [eax],al
  424f90:	push   edx
  424f91:	push   ebx
  424f92:	inc    esp
  424f93:	push   ebx
  424f94:	fs ret 0x213c
  424f98:	inc    ebp
  424f99:	popf   
  424f9a:	add    ecx,DWORD PTR [ecx-0x73]
  424f9d:	repz mov ch,0xce
  424fa0:	inc    eax
  424fa1:	cmp    DWORD PTR ds:0x164,esi
  424fa7:	add    BYTE PTR [esi+0x3a],al
  424faa:	pop    esp
  424fab:	push   edi
  424fac:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  424fb3:	inc    esp
  424fb4:	imul   esi,DWORD PTR [edx+0x5c],0x656c6946
  424fbb:	inc    ebp
  424fbc:	js     0x425023
  424fbe:	arpl   WORD PTR [eax],ax
  424fc0:	mov    edx,DWORD PTR [ebp-0x14]
  424fc3:	sub    esp,0x108
  424fc9:	push   ebx
  424fca:	mov    eax,ebx
  424fcc:	xchg   ecx,eax
  424fcd:	mov    eax,DWORD PTR [ebp+0x8]
  424fd0:	cmp    eax,0xf89c85b9
  424fd5:	jne    0x425497
  424fdb:	mov    eax,DWORD PTR [ebp+0xc]
  424fde:	cmp    eax,0xf89c85ba
  424fe3:	jne    0x425497
  424fe9:	mov    eax,DWORD PTR [ebp+0x24]
  424fec:	mov    DWORD PTR [ebp-0x4],eax
  424fef:	mov    eax,DWORD PTR [ebp-0x4]
  424ff2:	mov    eax,DWORD PTR [eax+0x1d8]
  424ff8:	mov    eax,DWORD PTR [eax]
  424ffa:	mov    eax,DWORD PTR [eax]
  424ffc:	mov    DWORD PTR [ebp-0x8],eax
  424fff:	mov    BYTE PTR [ebp-0x18],0x13
  425003:	mov    BYTE PTR [ebp-0x17],0x1e
  425007:	mov    BYTE PTR [ebp-0x16],0x11
  42500b:	mov    BYTE PTR [ebp-0x15],0x4f
  42500f:	mov    BYTE PTR [ebp-0x14],0x48
  425013:	mov    BYTE PTR [ebp-0x13],0x7a
  425017:	mov    BYTE PTR [ebp-0x20],0xd
  42501b:	mov    BYTE PTR [ebp-0x1f],0xf
  42501f:	mov    BYTE PTR [ebp-0x1e],0x1d
  425023:	mov    BYTE PTR [ebp-0x1d],0x8
  425027:	mov    BYTE PTR [ebp-0x1c],0x4f
  42502b:	mov    BYTE PTR [ebp-0x1b],0x48
  42502f:	mov    BYTE PTR [ebp-0x1a],0x7a
  425033:	mov    BYTE PTR [ebp-0x28],0xf
  425037:	mov    BYTE PTR [ebp-0x27],0x12
  42503b:	mov    BYTE PTR [ebp-0x26],0x16
  42503f:	mov    BYTE PTR [ebp-0x25],0x3
  425043:	mov    BYTE PTR [ebp-0x24],0x19
  425047:	push   esi
  425048:	mov    BYTE PTR [ebp-0x23],0xa
  42504c:	mov    BYTE PTR [ebp-0x22],0x11
  425050:	push   edi
  425051:	mov    BYTE PTR [ebp-0x21],0x7a
  425055:	xor    esi,esi
  425057:	mov    eax,0xff
  42505c:	lea    ecx,[ebp+esi*1-0x18]
  425060:	movzx  edx,BYTE PTR [ecx]
  425063:	xor    edx,0x7b
  425066:	add    edx,eax
  425068:	inc    esi
  425069:	mov    BYTE PTR [ecx],dl
  42506b:	cmp    esi,0x6
  42506e:	jb     0x42505c
  425070:	xor    esi,esi
  425072:	lea    ecx,[ebp+esi*1-0x20]
  425076:	movzx  edx,BYTE PTR [ecx]
  425079:	xor    edx,0x7b
  42507c:	add    edx,eax
  42507e:	inc    esi
  42507f:	mov    BYTE PTR [ecx],dl
  425081:	cmp    esi,0x7
  425084:	jb     0x425072
  425086:	xor    esi,esi
  425088:	lea    ecx,[ebp+esi*1-0x28]
  42508c:	movzx  edx,BYTE PTR [ecx]
  42508f:	xor    edx,0x7b
  425092:	add    edx,eax
  425094:	inc    esi
  425095:	mov    BYTE PTR [ecx],dl
  425097:	cmp    esi,0x8
  42509a:	jb     0x425088
  42509c:	lea    eax,[ebp-0x2c]
  42509f:	mov    DWORD PTR [ebp-0x8],eax
  4250a2:	mov    ecx,DWORD PTR [ebp-0x8]
  4250a5:	mov    eax,0x7113fccf
  4250aa:	mov    DWORD PTR [ecx],eax
  4250ac:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250af:	mov    esi,0x4e31
  4250b4:	mov    ebx,0x3272ef
  4250b9:	cmp    ecx,eax
  4250bb:	jne    0x425186
  4250c1:	lea    eax,[esi+0x35]
  4250c4:	mov    WORD PTR [ebp-0x78],ax
  4250c8:	mov    eax,esi
  4250ca:	mov    WORD PTR [ebp-0x76],ax
  4250ce:	add    eax,0x4b
  4250d1:	mov    WORD PTR [ebp-0x74],ax
  4250d5:	lea    eax,[esi+0xe]
  4250d8:	mov    WORD PTR [ebp-0x72],ax
  4250dc:	add    eax,0x3f
  4250df:	mov    ecx,eax
  4250e1:	lea    eax,[esi-0xd]
  4250e4:	mov    WORD PTR [ebp-0x66],ax
  4250e8:	mov    eax,esi
  4250ea:	mov    WORD PTR [ebp-0x64],ax
  4250ee:	add    eax,0xfffffff4
  4250f1:	mov    WORD PTR [ebp-0x62],ax
  4250f5:	mov    eax,0x44a
  4250fa:	mov    WORD PTR [ebp-0x60],ax
  4250fe:	mov    eax,0x567b
  425103:	mov    WORD PTR [ebp-0x5e],ax
  425107:	mov    eax,0x611b
  42510c:	mov    WORD PTR [ebp-0x5c],ax
  425110:	lea    eax,[ebp-0xe0]
  425116:	push   eax
  425117:	mov    eax,DWORD PTR [ebp+0xc]
  42511a:	mov    edi,0x75108a8
  42511f:	xor    eax,edi
  425121:	add    eax,ebx
  425123:	push   eax
  425124:	mov    WORD PTR [ebp-0x70],cx
  425128:	lea    ecx,[esi+0xa]
  42512b:	mov    edx,ecx
  42512d:	lea    eax,[ebp-0x78]
  425130:	push   eax
  425131:	mov    eax,DWORD PTR [ebp-0x4]
  425134:	mov    eax,DWORD PTR [eax+0x198]
  42513a:	mov    WORD PTR [ebp-0x6e],dx
  42513e:	mov    edx,0x4f85
  425143:	mov    WORD PTR [ebp-0x6c],dx
  425147:	mov    DWORD PTR [ebp-0x6a],0x4e7e4e38
  42514e:	mov    DWORD PTR [ebp-0x5a],0x4e3bf1e9
  425155:	mov    DWORD PTR [ebp-0xe0],0x1
  42515f:	mov    DWORD PTR [ebp-0xdc],0x255
  425169:	push   DWORD PTR [eax]
  42516b:	mov    eax,DWORD PTR [ebp+0x10]
  42516e:	call   eax
  425170:	mov    DWORD PTR [ebp-0x8],eax
  425173:	mov    eax,DWORD PTR [ebp-0x8]
  425176:	test   eax,eax
  425178:	je     0x42518b
  42517a:	xor    DWORD PTR ds:0x76586876,0x87687666
  425184:	jmp    0x42518b
  425186:	mov    edi,0x75108a8
  42518b:	mov    eax,DWORD PTR [ebp-0x4]
  42518e:	mov    ecx,DWORD PTR [eax+0x18c]
  425194:	xor    eax,eax
  425196:	cmp    DWORD PTR [ecx],eax
  425198:	jne    0x42540a
  42519e:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a1:	mov    ecx,DWORD PTR [ecx+0x17c]
  4251a7:	mov    DWORD PTR [ecx],eax
  4251a9:	mov    ecx,DWORD PTR [ebp-0x4]
  4251ac:	mov    ecx,DWORD PTR [ecx+0x180]
  4251b2:	mov    DWORD PTR [ecx],eax
  4251b4:	mov    eax,0x4e6c
  4251b9:	mov    WORD PTR [ebp-0x9c],ax
  4251c0:	mov    eax,esi
  4251c2:	mov    WORD PTR [ebp-0x9a],ax
  4251c9:	mov    eax,0x4e7c
  4251ce:	mov    WORD PTR [ebp-0x98],ax
  4251d5:	add    eax,0xffffffc0
  4251d8:	mov    WORD PTR [ebp-0x96],ax
  4251df:	mov    eax,0x4f81
  4251e4:	mov    WORD PTR [ebp-0x94],ax
  4251eb:	mov    eax,0x4e3d
  4251f0:	mov    WORD PTR [ebp-0x92],ax
  4251f7:	add    eax,0x41
  4251fa:	mov    WORD PTR [ebp-0x90],ax
  425201:	mov    eax,0x4e3b
  425206:	mov    WORD PTR [ebp-0x8e],ax
  42520d:	mov    eax,esi
  42520f:	mov    WORD PTR [ebp-0x8c],ax
  425216:	mov    eax,0x4e38
  42521b:	mov    WORD PTR [ebp-0x8a],ax
  425222:	mov    eax,0x99fc
  425227:	mov    WORD PTR [ebp-0x88],ax
  42522e:	mov    eax,0x8d6d
  425233:	mov    WORD PTR [ebp-0x86],ax
  42523a:	mov    eax,0xd66e
  42523f:	mov    WORD PTR [ebp-0x84],ax
  425246:	mov    eax,0xd78a
  42524b:	mov    WORD PTR [ebp-0x82],ax
  425252:	mov    eax,0x278b
  425257:	mov    WORD PTR [ebp-0x80],ax
  42525b:	mov    eax,0x478b
  425260:	mov    WORD PTR [ebp-0x7e],ax
  425264:	mov    eax,0x4e3a
  425269:	push   0x8
  42526b:	mov    WORD PTR [ebp-0x7c],ax
  42526f:	mov    DWORD PTR [ebp-0x10],0x316120f
  425276:	mov    DWORD PTR [ebp-0xc],0x7a110a19
  42527d:	lea    eax,[ebp-0x10]
  425280:	pop    ecx
  425281:	mov    dl,BYTE PTR [eax]
  425283:	xor    dl,0x7b
  425286:	dec    dl
  425288:	mov    BYTE PTR [eax],dl
  42528a:	inc    eax
  42528b:	dec    ecx
  42528c:	jne    0x425281
  42528e:	lea    eax,[ebp-0x10]
  425291:	mov    DWORD PTR [ebp-0xdc],eax
  425297:	lea    eax,[ebp-0xe0]
  42529d:	push   eax
  42529e:	mov    eax,DWORD PTR [ebp+0xc]
  4252a1:	xor    eax,edi
  4252a3:	add    eax,ebx
  4252a5:	push   eax
  4252a6:	mov    eax,DWORD PTR [ebp-0x4]
  4252a9:	add    eax,0x66
  4252ac:	push   eax
  4252ad:	mov    eax,DWORD PTR [ebp-0x4]
  4252b0:	mov    eax,DWORD PTR [eax+0x198]
  4252b6:	mov    DWORD PTR [ebp-0xe0],0x1
  4252c0:	push   DWORD PTR [eax]
  4252c2:	mov    eax,DWORD PTR [ebp+0x10]
  4252c5:	call   eax
  4252c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ca:	xor    ecx,edi
  4252cc:	add    ecx,ebx
  4252ce:	mov    DWORD PTR [ebp-0x8],eax
  4252d1:	cmp    eax,ecx
  4252d3:	jne    0x4252ee
  4252d5:	mov    eax,ds:0x33730bc0
  4252da:	or     eax,0x22150bcf
  4252df:	mov    ds:0x33730bc0,eax
  4252e4:	add    eax,0x3372e92f
  4252e9:	mov    ds:0x33730bc0,eax
  4252ee:	mov    ecx,0x4e69
  4252f3:	mov    eax,ecx
  4252f5:	mov    WORD PTR [ebp-0x40],ax
  4252f9:	add    eax,0xfffffff9
  4252fc:	mov    edx,eax
  4252fe:	mov    WORD PTR [ebp-0x3e],dx
  425302:	mov    edx,0x4f9a
  425307:	mov    WORD PTR [ebp-0x3c],dx
  42530b:	add    edx,0xffffffe8
  42530e:	mov    WORD PTR [ebp-0x3a],dx
  425312:	mov    edx,0x4f80
  425317:	mov    WORD PTR [ebp-0x38],dx
  42531b:	add    edx,0xf
  42531e:	mov    WORD PTR [ebp-0x36],dx
  425322:	mov    edx,0x4fb6
  425327:	mov    WORD PTR [ebp-0x34],dx
  42532b:	mov    WORD PTR [ebp-0x32],cx
  42532f:	mov    ecx,esi
  425331:	mov    WORD PTR [ebp-0x30],cx
  425335:	lea    ecx,[edx-0x2d]
  425338:	mov    edx,ecx
  42533a:	mov    WORD PTR [ebp-0x54],dx
  42533e:	mov    edx,eax
  425340:	mov    WORD PTR [ebp-0x52],dx
  425344:	mov    edx,0x4e7a
  425349:	mov    WORD PTR [ebp-0x50],dx
  42534d:	mov    WORD PTR [ebp-0x4e],ax
  425351:	lea    eax,[edx-0x1a]
  425354:	mov    WORD PTR [ebp-0x4c],ax
  425358:	add    eax,0xf
  42535b:	mov    WORD PTR [ebp-0x4a],ax
  42535f:	lea    eax,[ecx+0xd]
  425362:	mov    WORD PTR [ebp-0x48],ax
  425366:	mov    WORD PTR [ebp-0x46],cx
  42536a:	mov    WORD PTR [ebp-0x44],si
  42536e:	mov    eax,DWORD PTR [ebp+0x8]
  425371:	movzx  ecx,WORD PTR [ebp-0x54]
  425375:	xor    eax,edi
  425377:	add    eax,ebx
  425379:	xor    eax,ecx
  42537b:	mov    WORD PTR [ebp-0x54],ax
  42537f:	mov    eax,DWORD PTR [ebp+0x8]
  425382:	movzx  ecx,WORD PTR [ebp-0x40]
  425386:	xor    eax,edi
  425388:	add    eax,ebx
  42538a:	xor    eax,ecx
  42538c:	mov    WORD PTR [ebp-0x40],ax
  425390:	xor    eax,eax
  425392:	mov    WORD PTR [ebp-0xf4],ax
  425399:	mov    WORD PTR [ebp-0x108],ax
  4253a0:	mov    edi,DWORD PTR [ebp+0x24]
  4253a3:	lea    eax,[ebp-0xf4]
  4253a9:	lea    edx,[ebp-0x54]
  4253ac:	mov    DWORD PTR [ebp-0xe0],0x2
  4253b6:	mov    DWORD PTR [ebp-0xdc],eax
  4253bc:	call   0x427df3
  4253c1:	mov    DWORD PTR [ebp-0xd8],eax
  4253c7:	lea    eax,[ebp-0xe0]
  4253cd:	push   eax
  4253ce:	mov    eax,DWORD PTR [ebp+0xc]
  4253d1:	xor    eax,0x75108a8
  4253d6:	add    eax,ebx
  4253d8:	push   eax
  4253d9:	lea    eax,[ebp-0x9c]
  4253df:	push   eax
  4253e0:	push   DWORD PTR [ebp-0x8]
  4253e3:	mov    eax,DWORD PTR [ebp+0x10]
  4253e6:	call   eax
  4253e8:	mov    edi,DWORD PTR [ebp+0x24]
  4253eb:	lea    eax,[ebp-0x108]
  4253f1:	lea    edx,[ebp-0x40]
  4253f4:	mov    DWORD PTR [ebp-0xdc],eax
  4253fa:	call   0x427df3
  4253ff:	mov    DWORD PTR [ebp-0xd8],eax
  425405:	mov    edi,0x75108a8
  42540a:	mov    eax,DWORD PTR [ebp+0x14]
  42540d:	push   DWORD PTR [ebp-0x4]
  425410:	push   DWORD PTR [ebp+0x20]
  425413:	push   DWORD PTR [ebp+0x1c]
  425416:	push   DWORD PTR [ebp+0x18]
  425419:	push   DWORD PTR [ebp+0x10]
  42541c:	push   DWORD PTR [ebp+0x8]
  42541f:	push   DWORD PTR [ebp+0xc]
  425422:	call   0x426694
  425427:	test   eax,eax
  425429:	je     0x42546d
  42542b:	add    DWORD PTR [ebp-0x4],eax
  42542e:	push   DWORD PTR [ebp-0x4]
  425431:	lea    esi,[ebp+0x4]
  425434:	call   0x425885
  425439:	mov    eax,DWORD PTR [ebp-0x4]
  42543c:	mov    eax,DWORD PTR [eax+0x1c8]
  425442:	mov    eax,DWORD PTR [eax]
  425444:	xor    eax,edi
  425446:	add    eax,ebx
  425448:	mov    eax,DWORD PTR [ebp-0x4]
  42544b:	jne    0x425463
  42544d:	mov    ecx,DWORD PTR [ebp-0x4]
  425450:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425456:	push   DWORD PTR [ecx]
  425458:	mov    eax,DWORD PTR [eax+0x1e0]
  42545e:	call   DWORD PTR [eax+0x28]
  425461:	jmp    0x42546d
  425463:	mov    eax,DWORD PTR [eax+0x17c]
  425469:	mov    eax,DWORD PTR [eax]
  42546b:	add    DWORD PTR [esi],eax
  42546d:	mov    eax,DWORD PTR [ebp-0x4]
  425470:	mov    eax,DWORD PTR [eax+0x1dc]
  425476:	dec    DWORD PTR [eax]
  425478:	mov    ecx,DWORD PTR [ebp-0x4]
  42547b:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425481:	mov    eax,DWORD PTR [eax]
  425483:	lea    eax,[ecx+eax*4]
  425486:	mov    ecx,DWORD PTR [ebp-0x4]
  425489:	mov    ecx,DWORD PTR [ecx+0x17c]
  42548f:	mov    eax,DWORD PTR [eax]
  425491:	mov    ecx,DWORD PTR [ecx]
  425493:	add    DWORD PTR [eax],ecx
  425495:	pop    edi
  425496:	pop    esi
  425497:	pop    ebx
  425498:	leave  
  425499:	ret    0x20
  42549c:	push   edi
  42549d:	push   esi
  42549e:	push   ebx
  42549f:	push   ebp
  4254a0:	mov    ebp,esp
  4254a2:	mov    eax,DWORD PTR [ebp+0x24]
  4254a5:	add    DWORD PTR [ebp+0x28],eax
  4254a8:	push   eax
  4254a9:	cld    
  4254aa:	mov    esi,DWORD PTR [ebp+0x18]
  4254ad:	add    DWORD PTR [ebp+0x1c],esi
  4254b0:	push   esi
  4254b1:	mov    esi,DWORD PTR [ebp+0x14]
  4254b4:	lods   eax,DWORD PTR ds:[esi]
  4254b5:	xchg   edx,eax
  4254b6:	push   edx
  4254b7:	mov    cl,BYTE PTR [esi-0x2]
  4254ba:	or     eax,0xffffffff
  4254bd:	shl    eax,cl
  4254bf:	not    eax
  4254c1:	push   eax
  4254c2:	mov    cl,dh
  4254c4:	or     eax,0xffffffff
  4254c7:	shl    eax,cl
  4254c9:	not    eax
  4254cb:	push   eax
  4254cc:	add    cl,dl
  4254ce:	mov    edi,esi
  4254d0:	sub    esp,0xc
  4254d3:	sub    eax,eax
  4254d5:	inc    eax
  4254d6:	push   eax
  4254d7:	push   eax
  4254d8:	push   eax
  4254d9:	push   eax
  4254da:	push   eax
  4254db:	push   edi
  4254dc:	sub    esi,esi
  4254de:	push   esi
  4254df:	or     ebx,0xffffffff
  4254e2:	mov    eax,0x300
  4254e7:	shl    eax,cl
  4254e9:	lea    ecx,[eax+0x736]
  4254ef:	mov    eax,0x4000400
  4254f4:	shr    ecx,1
  4254f6:	rep stos DWORD PTR es:[edi],eax
  4254f8:	push   0x5
  4254fa:	pop    ecx
  4254fb:	call   0x4257e6
  425500:	loop   0x4254fb
  425502:	lea    esi,[esi]
  425504:	lea    edi,[edi]
  425506:	mov    edi,DWORD PTR [ebp-0x4]
  425509:	mov    eax,DWORD PTR [ebp-0x10]
  42550c:	sub    edi,DWORD PTR [ebp+0x24]
  42550f:	and    eax,edi
  425511:	mov    DWORD PTR [ebp-0x18],eax
  425514:	mov    al,0x0
  425516:	call   0x4257fe
  42551b:	jne    0x4255b6
  425521:	mov    cl,BYTE PTR [ebp-0xc]
  425524:	and    edi,DWORD PTR [ebp-0x14]
  425527:	shl    edi,cl
  425529:	sub    cl,0x8
  42552c:	neg    cl
  42552e:	shr    esi,cl
  425530:	pop    eax
  425531:	add    edi,esi
  425533:	pop    esi
  425534:	lea    edi,[edi+edi*2]
  425537:	shl    edi,0x8
  42553a:	cmp    al,0x7
  42553c:	pop    edx
  42553d:	lea    ecx,[esi+edi*2+0xe6c]
  425544:	push   ecx
  425545:	push   esi
  425546:	mov    esi,0x100
  42554b:	push   eax
  42554c:	mov    al,0x1
  42554e:	jb     0x425584
  425550:	mov    edi,DWORD PTR [ebp-0x4]
  425553:	sub    edi,DWORD PTR [ebp-0x24]
  425556:	movzx  edi,BYTE PTR [edi]
  425559:	mov    ebp,DWORD PTR [ebp-0x34]
  42555c:	shl    edi,1
  42555e:	mov    ecx,esi
  425560:	and    esi,edi
  425562:	add    ecx,esi
  425564:	lea    ebp,[ebp+ecx*2+0x0]
  425568:	call   0x42581d
  42556d:	mov    ecx,eax
  42556f:	shr    esi,0x8
  425572:	and    ecx,0x1
  425575:	cmp    esi,ecx
  425577:	mov    esi,0x100
  42557c:	jne    0x42558c
  42557e:	cmp    eax,esi
  425580:	jb     0x425559
  425582:	jmp    0x425598
  425584:	mov    ebp,DWORD PTR [ebp-0x34]
  425587:	call   0x42581d
  42558c:	inc    eax
  42558d:	inc    esi
  42558e:	sub    eax,0x1
  425591:	sub    esi,0x1
  425594:	cmp    eax,esi
  425596:	jb     0x425584
  425598:	pop    edx
  425599:	inc    edx
  42559a:	cmp    edx,0x5
  42559d:	dec    edx
  42559e:	mov    ecx,edx
  4255a0:	jb     0x4255b1
  4255a2:	inc    edx
  4255a3:	cmp    edx,0xb
  4255a6:	dec    edx
  4255a7:	mov    cl,0x4
  4255a9:	dec    cl
  4255ab:	jb     0x4255b1
  4255ad:	mov    cl,0x7
  4255af:	dec    cl
  4255b1:	sub    edx,ecx
  4255b3:	push   edx
  4255b4:	jmp    0x425605
  4255b6:	mov    al,0xc1
  4255b8:	dec    al
  4255ba:	call   0x42580e
  4255bf:	jne    0x4255d5
  4255c1:	pop    eax
  4255c2:	pop    edi
  4255c3:	pop    edx
  4255c4:	pop    ecx
  4255c5:	pop    edx
  4255c6:	pop    ecx
  4255c7:	push   DWORD PTR [esp]
  4255ca:	push   ecx
  4255cb:	push   edx
  4255cc:	mov    edx,0x664
  4255d1:	mov    cl,0x0
  4255d3:	jmp    0x425648
  4255d5:	mov    al,0xcd
  4255d7:	dec    al
  4255d9:	call   0x42580e
  4255de:	jne    0x42560e
  4255e0:	mov    al,0xf1
  4255e2:	dec    al
  4255e4:	call   0x4257fe
  4255e9:	jne    0x42563e
  4255eb:	pop    eax
  4255ec:	cmp    al,0x7
  4255ee:	mov    al,0x9
  4255f0:	jb     0x4255f4
  4255f2:	mov    al,0xb
  4255f4:	push   eax
  4255f5:	mov    esi,DWORD PTR [ebp-0x4]
  4255f8:	sub    esi,DWORD PTR [ebp-0x24]
  4255fb:	cmp    esi,DWORD PTR [ebp+0x24]
  4255fe:	jb     0x4257d5
  425604:	lods   al,BYTE PTR ds:[esi]
  425605:	mov    edi,DWORD PTR [ebp-0x4]
  425608:	stos   BYTE PTR es:[edi],al
  425609:	jmp    0x42579c
  42560e:	mov    al,0xd8
  425610:	call   0x42580e
  425615:	mov    esi,DWORD PTR [ebp-0x28]
  425618:	je     0x425635
  42561a:	mov    al,0xe4
  42561c:	call   0x42580e
  425621:	mov    esi,DWORD PTR [ebp-0x2c]
  425624:	je     0x42562f
  425626:	mov    esi,DWORD PTR [ebp-0x30]
  425629:	mov    ecx,DWORD PTR [ebp-0x2c]
  42562c:	mov    DWORD PTR [ebp-0x30],ecx
  42562f:	mov    ecx,DWORD PTR [ebp-0x28]
  425632:	mov    DWORD PTR [ebp-0x2c],ecx
  425635:	mov    ecx,DWORD PTR [ebp-0x24]
  425638:	mov    DWORD PTR [ebp-0x28],ecx
  42563b:	mov    DWORD PTR [ebp-0x24],esi
  42563e:	pop    eax
  42563f:	pop    edi
  425640:	pop    ecx
  425641:	mov    edx,0xa68
  425646:	mov    cl,0x8
  425648:	add    edx,edi
  42564a:	push   edx
  42564b:	push   edi
  42564c:	cmp    al,0x7
  42564e:	mov    al,cl
  425650:	jb     0x425654
  425652:	add    al,0x3
  425654:	push   eax
  425655:	mov    ebp,DWORD PTR [ebp-0x34]
  425658:	call   0x42581b
  42565d:	jne    0x425673
  42565f:	mov    eax,DWORD PTR [ebp-0x18]
  425662:	mov    edi,DWORD PTR [ebp-0x34]
  425665:	shl    eax,0x3
  425668:	sub    ecx,ecx
  42566a:	push   0x8
  42566c:	pop    esi
  42566d:	lea    edi,[edi+eax*2+0x4]
  425671:	jmp    0x4256a8
  425673:	mov    ebp,DWORD PTR [ebp-0x34]
  425676:	add    ebp,0x2
  425679:	call   0x42581b
  42567e:	jne    0x425698
  425680:	mov    eax,DWORD PTR [ebp-0x18]
  425683:	mov    edi,DWORD PTR [ebp-0x34]
  425686:	shl    eax,0x3
  425689:	push   0x8
  42568b:	pop    ecx
  42568c:	push   0x8
  42568e:	pop    esi
  42568f:	lea    edi,[edi+eax*2+0x104]
  425696:	jmp    0x4256a8
  425698:	mov    edi,0x204
  42569d:	add    edi,DWORD PTR [ebp-0x34]
  4256a0:	push   0x10
  4256a2:	pop    ecx
  4256a3:	mov    esi,0x100
  4256a8:	mov    DWORD PTR [ebp-0x1c],ecx
  4256ab:	sub    eax,eax
  4256ad:	inc    eax
  4256ae:	mov    ebp,edi
  4256b0:	call   0x42581d
  4256b5:	mov    ecx,eax
  4256b7:	sub    ecx,esi
  4256b9:	jb     0x4256ae
  4256bb:	add    DWORD PTR [ebp-0x1c],ecx
  4256be:	cmp    DWORD PTR [ebp-0x3c],0x4
  4256c2:	jae    0x425778
  4256c8:	add    DWORD PTR [ebp-0x3c],0x7
  4256cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4256cf:	cmp    ecx,0x4
  4256d2:	jb     0x4256d7
  4256d4:	push   0x3
  4256d6:	pop    ecx
  4256d7:	mov    edi,DWORD PTR [ebp-0x38]
  4256da:	shl    ecx,0x6
  4256dd:	sub    eax,eax
  4256df:	inc    eax
  4256e0:	push   0x40
  4256e2:	pop    esi
  4256e3:	lea    edi,[edi+ecx*2+0x360]
  4256ea:	mov    ebp,edi
  4256ec:	call   0x42581d
  4256f1:	mov    ecx,eax
  4256f3:	sub    ecx,esi
  4256f5:	jb     0x4256ea
  4256f7:	mov    DWORD PTR [ebp-0x18],ecx
  4256fa:	mov    DWORD PTR [ebp-0x24],ecx
  4256fd:	cmp    ecx,0x4
  425700:	jb     0x425775
  425702:	mov    esi,ecx
  425704:	and    DWORD PTR [ebp-0x24],0x1
  425708:	shr    esi,1
  42570a:	or     DWORD PTR [ebp-0x24],0x2
  42570e:	dec    esi
  42570f:	cmp    ecx,0xe
  425712:	jae    0x42572d
  425714:	mov    eax,0x2af
  425719:	sub    eax,ecx
  42571b:	mov    ecx,esi
  42571d:	shl    BYTE PTR [ebp-0x24],cl
  425720:	add    eax,DWORD PTR [ebp-0x24]
  425723:	shl    eax,1
  425725:	add    eax,DWORD PTR [ebp-0x38]
  425728:	mov    DWORD PTR [ebp-0x34],eax
  42572b:	jmp    0x42575a
  42572d:	sub    esi,0x4
  425730:	call   0x4257da
  425735:	shr    ebx,1
  425737:	shl    DWORD PTR [ebp-0x24],1
  42573a:	cmp    DWORD PTR [ebp-0x20],ebx
  42573d:	jb     0x425745
  42573f:	inc    DWORD PTR [ebp-0x24]
  425742:	sub    DWORD PTR [ebp-0x20],ebx
  425745:	dec    esi
  425746:	jne    0x425730
  425748:	mov    eax,0x644
  42574d:	add    eax,DWORD PTR [ebp-0x38]
  425750:	mov    DWORD PTR [ebp-0x34],eax
  425753:	shl    DWORD PTR [ebp-0x24],0x4
  425757:	push   0x4
  425759:	pop    esi
  42575a:	sub    edi,edi
  42575c:	inc    edi
  42575d:	mov    eax,edi
  42575f:	mov    ebp,DWORD PTR [ebp-0x34]
  425762:	call   0x42581d
  425767:	test   al,0x1
  425769:	je     0x42576e
  42576b:	or     DWORD PTR [ebp-0x24],edi
  42576e:	shl    edi,1
  425770:	dec    esi
  425771:	jne    0x42575f
  425773:	jmp    0x425775
  425775:	inc    DWORD PTR [ebp-0x24]
  425778:	mov    ecx,DWORD PTR [ebp-0x1c]
  42577b:	add    ecx,0x2
  42577e:	mov    edi,DWORD PTR [ebp-0x4]
  425781:	mov    eax,edi
  425783:	sub    eax,DWORD PTR [ebp+0x24]
  425786:	cmp    DWORD PTR [ebp-0x24],eax
  425789:	ja     0x4257d5
  42578b:	mov    esi,edi
  42578d:	sub    esi,DWORD PTR [ebp-0x24]
  425790:	mov    edx,DWORD PTR [ebp+0x28]
  425793:	lods   al,BYTE PTR ds:[esi]
  425794:	stos   BYTE PTR es:[edi],al
  425795:	cmp    edi,edx
  425797:	jae    0x42579c
  425799:	dec    ecx
  42579a:	jne    0x425793
  42579c:	mov    DWORD PTR [ebp-0x4],edi
  42579f:	movzx  esi,al
  4257a2:	cmp    edi,DWORD PTR [ebp+0x28]
  4257a5:	jb     0x425506
  4257ab:	call   0x4257da
  4257b0:	sub    eax,eax
  4257b2:	lea    ebp,[esp+0x3c]
  4257b6:	mov    edx,DWORD PTR [ebp+0x20]
  4257b9:	mov    esi,DWORD PTR [ebp-0x8]
  4257bc:	sub    esi,DWORD PTR [ebp+0x18]
  4257bf:	mov    DWORD PTR [ebp-0x4d],ecx
  4257c2:	fidiv  DWORD PTR ds:0x31787ab3
  4257c8:	jp     0x4257df
  4257ca:	stos   DWORD PTR es:[edi],eax
  4257cb:	ins    DWORD PTR es:[edi],dx
  4257cc:	lods   al,BYTE PTR ds:[esi]
  4257cd:	repnz inc BYTE PTR [edx]
  4257d0:	nop
  4257d1:	cmc    
  4257d2:	test   esi,edi
  4257d4:	out    0x31,al
  4257d6:	mov    BYTE PTR [esi+0x748be834],al
  4257dc:	test   DWORD PTR [ebp-0x76b1767b],eax
  4257e2:	xchg   esp,eax
  4257e3:	mov    WORD PTR [eiz*4+0x685ab3de],ss
  4257ea:	jno    0x425846
  4257ec:	cmc    
  4257ed:	push   edx
  4257ee:	sbb    BYTE PTR [ebx+0x88c089a],dh
  4257f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257f5:	aaa    
  4257f6:	stos   DWORD PTR es:[edi],eax
  4257f7:	call   0x94fe:0x685aab08
  4257fe:	mov    bl,0xba
  425800:	cwde   
  425801:	rcr    DWORD PTR [edi-0x78],0x8c
  425805:	or     al,0x95
  425807:	xchg   ecx,eax
  425808:	call   0xc19d:0x348c9128
  42580f:	pop    edi
  425810:	mov    BYTE PTR [ecx+0x3ab3989a],dl
  425816:	test   al,0xbb
  425818:	ss call 0x9a36:0xbb883185
  425820:	test   DWORD PTR [ebx-0x7a7a7a8c],ecx
  425826:	mov    DWORD PTR [edx-0xb],edx
  425829:	mov    bl,0xb6
  42582b:	adc    eax,0x15168c65
  425830:	add    eax,0x15b671a5
  425835:	not    BYTE PTR [edx-0x9]
  425838:	scas   eax,DWORD PTR es:[edi]
  425839:	leave  
  42583a:	test   BYTE PTR [esi+0x148c6515],dl
  425840:	or     BYTE PTR [eax-0x74dfdbac],cl
  425846:	retf   
  425847:	movzx  edx,WORD PTR [ebp+0x0]
  42584b:	shr    ecx,0xb
  42584e:	imul   ecx,edx
  425851:	cmp    DWORD PTR [esp+0x20],ecx
  425855:	jae    0x42586e
  425857:	mov    ebx,ecx
  425859:	mov    ecx,0x800
  42585e:	sub    ecx,edx
  425860:	shr    ecx,0x5
  425863:	add    WORD PTR [ebp+0x0],cx
  425867:	add    eax,eax
  425869:	lea    ebp,[esp+0x40]
  42586d:	ret    
  42586e:	shr    edx,0x5
  425871:	sub    DWORD PTR [esp+0x20],ecx
  425875:	sub    ebx,ecx
  425877:	sub    WORD PTR [ebp+0x0],dx
  42587b:	add    eax,eax
  42587d:	add    eax,0x1
  425880:	lea    ebp,[esp+0x40]
  425884:	ret    
  425885:	push   ebp
  425886:	mov    ebp,esp
  425888:	sub    esp,0x12c
  42588e:	push   ebx
  42588f:	push   esi
  425890:	push   edi
  425891:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  425898:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  42589f:	mov    eax,DWORD PTR [ebp+0x8]
  4258a2:	mov    DWORD PTR [ebp+0x8],eax
  4258a5:	mov    ecx,DWORD PTR [ebp-0x10]
  4258a8:	mov    ebx,0x75108a8
  4258ad:	xor    ecx,ebx
  4258af:	mov    eax,0x3272ef
  4258b4:	add    ecx,eax
  4258b6:	mov    DWORD PTR [ebp-0x24],ecx
  4258b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4258bc:	xor    ecx,ebx
  4258be:	add    ecx,eax
  4258c0:	mov    DWORD PTR [ebp-0x40],ecx
  4258c3:	mov    ecx,DWORD PTR [ebp-0x10]
  4258c6:	xor    ecx,ebx
  4258c8:	add    ecx,eax
  4258ca:	mov    DWORD PTR [ebp-0x3c],ecx
  4258cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4258d0:	xor    ecx,ebx
  4258d2:	add    ecx,eax
  4258d4:	mov    DWORD PTR [ebp-0xd8],ecx
  4258da:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  4258e1:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  4258e8:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  4258ef:	push   0x25
  4258f1:	pop    ecx
  4258f2:	mov    DWORD PTR [ebp-0x30],ecx
  4258f5:	mov    DWORD PTR [ebp-0x30],ecx
  4258f8:	push   0x65
  4258fa:	pop    ecx
  4258fb:	mov    DWORD PTR [ebp-0x30],ecx
  4258fe:	mov    DWORD PTR [ebp-0x30],ecx
  425901:	mov    DWORD PTR [ebp-0x30],0x4d
  425908:	mov    DWORD PTR [ebp-0x30],0x43
  42590f:	mov    ecx,DWORD PTR [ebp-0x10]
  425912:	xor    ecx,ebx
  425914:	add    ecx,eax
  425916:	mov    DWORD PTR [ebp-0x30],ecx
  425919:	mov    ecx,DWORD PTR [ebp-0x10]
  42591c:	xor    ecx,ebx
  42591e:	add    ecx,eax
  425920:	mov    DWORD PTR [ebp-0x30],ecx
  425923:	mov    DWORD PTR [ebp-0x28],0x258
  42592a:	mov    DWORD PTR [ebp-0x34],0x36
  425931:	mov    DWORD PTR [ebp-0x14],0x7a
  425938:	lea    edi,[ebp-0x10c]
  42593e:	lea    esi,[ebp-0x12c]
  425944:	call   0x426603
  425949:	dec    DWORD PTR [ebp-0x14]
  42594c:	jne    0x425938
  42594e:	dec    DWORD PTR [ebp-0x34]
  425951:	jne    0x425931
  425953:	dec    DWORD PTR [ebp-0x28]
  425956:	jne    0x42592a
  425958:	mov    DWORD PTR [ebp-0x28],0x400e
  42595f:	mov    eax,DWORD PTR [ebp-0x10]
  425962:	xor    eax,ebx
  425964:	mov    esi,0x3272ef
  425969:	add    eax,esi
  42596b:	mov    DWORD PTR [ebp-0x1c],eax
  42596e:	mov    eax,DWORD PTR [ebp-0x10]
  425971:	and    DWORD PTR [ebp-0x94],0x0
  425978:	xor    eax,ebx
  42597a:	add    eax,esi
  42597c:	mov    DWORD PTR [ebp-0x38],eax
  42597f:	mov    eax,fs:0x18
  425985:	mov    DWORD PTR [ebp-0x94],eax
  42598b:	mov    eax,DWORD PTR [eax+0x30]
  42598e:	mov    DWORD PTR [ebp-0xcc],eax
  425994:	mov    eax,DWORD PTR [eax+0xc]
  425997:	mov    DWORD PTR [ebp-0xc0],eax
  42599d:	mov    eax,DWORD PTR [ebp+0x8]
  4259a0:	lea    ecx,[ebp-0x94]
  4259a6:	mov    DWORD PTR [eax+0x1a0],ecx
  4259ac:	mov    eax,DWORD PTR [ebp+0x8]
  4259af:	lea    ecx,[ebp-0xcc]
  4259b5:	mov    DWORD PTR [eax+0x1a4],ecx
  4259bb:	mov    eax,DWORD PTR [ebp+0x8]
  4259be:	push   DWORD PTR [ebp+0x8]
  4259c1:	lea    ecx,[ebp-0xc0]
  4259c7:	mov    DWORD PTR [eax+0x1a8],ecx
  4259cd:	call   0x427dc4
  4259d2:	mov    ecx,DWORD PTR [ebp-0x10]
  4259d5:	xor    ecx,ebx
  4259d7:	add    ecx,esi
  4259d9:	cmp    ecx,eax
  4259db:	je     0x425d5e
  4259e1:	mov    eax,DWORD PTR [ebp+0x8]
  4259e4:	mov    eax,DWORD PTR [eax+0x194]
  4259ea:	mov    ecx,DWORD PTR [eax]
  4259ec:	mov    eax,DWORD PTR [ebp+0x8]
  4259ef:	mov    eax,DWORD PTR [eax+0x194]
  4259f5:	mov    eax,DWORD PTR [eax]
  4259f7:	add    eax,DWORD PTR [ecx+0x3c]
  4259fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4259fd:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425a03:	lea    edx,[ebp-0xec]
  425a09:	push   edx
  425a0a:	mov    edx,DWORD PTR [ebp+0x8]
  425a0d:	mov    edx,DWORD PTR [edx+0x18c]
  425a13:	mov    edx,DWORD PTR [edx]
  425a15:	add    edx,DWORD PTR [eax+0x88]
  425a1b:	push   0x4
  425a1d:	push   DWORD PTR [eax+0x8c]
  425a23:	push   edx
  425a24:	call   DWORD PTR [ecx+0x1c]
  425a27:	push   DWORD PTR [ebp+0x8]
  425a2a:	xor    eax,eax
  425a2c:	mov    DWORD PTR [ebp-0xa8],0x123f0f31
  425a36:	mov    DWORD PTR [ebp-0xa4],0xb360819
  425a40:	mov    DWORD PTR [ebp-0xa0],0x39081d03
  425a4a:	mov    BYTE PTR [ebp-0x9c],0x7a
  425a51:	lea    edi,[ebp-0x9b]
  425a57:	stos   DWORD PTR es:[edi],eax
  425a58:	stos   WORD PTR es:[edi],ax
  425a5a:	stos   BYTE PTR es:[edi],al
  425a5b:	xor    eax,eax
  425a5d:	mov    DWORD PTR [ebp-0xbc],0x123f0f31
  425a67:	mov    DWORD PTR [ebp-0xb8],0xb360819
  425a71:	mov    DWORD PTR [ebp-0xb4],0x23081d03
  425a7b:	mov    BYTE PTR [ebp-0xb0],0x7a
  425a82:	lea    edi,[ebp-0xaf]
  425a88:	stos   DWORD PTR es:[edi],eax
  425a89:	stos   WORD PTR es:[edi],ax
  425a8b:	stos   BYTE PTR es:[edi],al
  425a8c:	mov    edi,DWORD PTR [ebp+0x8]
  425a8f:	mov    eax,DWORD PTR [ebp+0x8]
  425a92:	mov    edx,DWORD PTR [eax+0x1b8]
  425a98:	mov    DWORD PTR [ebp-0x68],0x80e0f16
  425a9f:	mov    DWORD PTR [ebp-0x64],0x110a151f
  425aa6:	mov    WORD PTR [ebp-0x60],0x7a39
  425aac:	mov    DWORD PTR [ebp-0x90],0x123f0f31
  425ab6:	mov    DWORD PTR [ebp-0x8c],0x16390819
  425ac0:	mov    DWORD PTR [ebp-0x88],0x3419120a
  425aca:	mov    DWORD PTR [ebp-0x84],0x81d150d
  425ad4:	mov    DWORD PTR [ebp-0x80],0x7a391f11
  425adb:	mov    DWORD PTR [ebp-0x7c],0x123f0f31
  425ae2:	mov    DWORD PTR [ebp-0x78],0x16390819
  425ae9:	mov    DWORD PTR [ebp-0x74],0x3419120a
  425af0:	mov    DWORD PTR [ebp-0x70],0x81d150d
  425af7:	mov    DWORD PTR [ebp-0x6c],0x7a231f11
  425afe:	call   0x427df3
  425b03:	push   eax
  425b04:	mov    eax,DWORD PTR [ebp+0x8]
  425b07:	mov    eax,DWORD PTR [eax+0x1a8]
  425b0d:	push   DWORD PTR [eax]
  425b0f:	call   0x427a94
  425b14:	test   eax,eax
  425b16:	jne    0x425b68
  425b18:	mov    eax,DWORD PTR [ebp+0x8]
  425b1b:	mov    eax,DWORD PTR [eax+0x1e0]
  425b21:	mov    edi,DWORD PTR [ebp+0x8]
  425b24:	add    eax,0x4
  425b27:	mov    DWORD PTR [ebp-0x20],eax
  425b2a:	mov    eax,DWORD PTR [ebp+0x8]
  425b2d:	mov    edx,DWORD PTR [eax+0x1b8]
  425b33:	call   0x427df3
  425b38:	push   eax
  425b39:	mov    eax,DWORD PTR [ebp-0x20]
  425b3c:	call   DWORD PTR [eax]
  425b3e:	test   eax,eax
  425b40:	jne    0x425b68
  425b42:	mov    eax,DWORD PTR [ebp+0x8]
  425b45:	mov    eax,DWORD PTR [eax+0x1e0]
  425b4b:	mov    edi,DWORD PTR [ebp+0x8]
  425b4e:	add    eax,0x10
  425b51:	mov    DWORD PTR [ebp-0x20],eax
  425b54:	mov    eax,DWORD PTR [ebp+0x8]
  425b57:	mov    edx,DWORD PTR [eax+0x1b8]
  425b5d:	call   0x427df3
  425b62:	push   eax
  425b63:	mov    eax,DWORD PTR [ebp-0x20]
  425b66:	call   DWORD PTR [eax]
  425b68:	mov    eax,DWORD PTR [ebp-0x10]
  425b6b:	mov    ecx,DWORD PTR [ebp-0x28]
  425b6e:	xor    eax,ebx
  425b70:	add    eax,esi
  425b72:	cmp    eax,ecx
  425b74:	je     0x425d37
  425b7a:	mov    eax,DWORD PTR [ebp-0x18]
  425b7d:	xor    eax,ebx
  425b7f:	mov    ecx,0xffcd8d11
  425b84:	sub    ecx,eax
  425b86:	add    ecx,DWORD PTR [ebp-0x28]
  425b89:	mov    eax,DWORD PTR [ebp-0x1c]
  425b8c:	cmp    eax,ecx
  425b8e:	ja     0x425d37
  425b94:	mov    DWORD PTR [ebp-0x34],0x0
  425b9b:	push   DWORD PTR [ebp+0x8]
  425b9e:	mov    edi,DWORD PTR [ebp+0x8]
  425ba1:	mov    eax,DWORD PTR [ebp+0x8]
  425ba4:	mov    edx,DWORD PTR [eax+0x1b4]
  425baa:	call   0x427df3
  425baf:	push   eax
  425bb0:	mov    eax,DWORD PTR [ebp+0x8]
  425bb3:	mov    eax,DWORD PTR [eax+0x1a8]
  425bb9:	push   DWORD PTR [eax]
  425bbb:	call   0x427a94
  425bc0:	mov    ecx,DWORD PTR [ebp+0x8]
  425bc3:	mov    ecx,DWORD PTR [ecx+0x19c]
  425bc9:	mov    DWORD PTR [ecx],eax
  425bcb:	mov    eax,DWORD PTR [ebp+0x8]
  425bce:	mov    edi,DWORD PTR [eax+0x1e0]
  425bd4:	mov    esi,DWORD PTR [ebp+0x8]
  425bd7:	xor    eax,eax
  425bd9:	lea    edx,[ebp-0x7c]
  425bdc:	call   0x427e29
  425be1:	push   eax
  425be2:	mov    eax,DWORD PTR [ebp+0x8]
  425be5:	mov    eax,DWORD PTR [eax+0x19c]
  425beb:	push   DWORD PTR [eax]
  425bed:	call   DWORD PTR [edi+0x8]
  425bf0:	mov    DWORD PTR [ebp-0x20],eax
  425bf3:	mov    eax,DWORD PTR [ebp+0x8]
  425bf6:	mov    edi,DWORD PTR [eax+0x1e0]
  425bfc:	mov    esi,DWORD PTR [ebp+0x8]
  425bff:	xor    eax,eax
  425c01:	lea    edx,[ebp-0x90]
  425c07:	call   0x427e29
  425c0c:	push   eax
  425c0d:	mov    eax,DWORD PTR [ebp+0x8]
  425c10:	mov    eax,DWORD PTR [eax+0x19c]
  425c16:	push   DWORD PTR [eax]
  425c18:	call   DWORD PTR [edi+0x8]
  425c1b:	mov    eax,DWORD PTR [ebp+0x8]
  425c1e:	mov    edi,DWORD PTR [eax+0x1e0]
  425c24:	mov    esi,DWORD PTR [ebp+0x8]
  425c27:	xor    eax,eax
  425c29:	lea    edx,[ebp-0xa8]
  425c2f:	call   0x427e29
  425c34:	push   eax
  425c35:	mov    eax,DWORD PTR [ebp+0x8]
  425c38:	mov    eax,DWORD PTR [eax+0x19c]
  425c3e:	push   DWORD PTR [eax]
  425c40:	call   DWORD PTR [edi+0x8]
  425c43:	and    DWORD PTR [ebp-0x8],0x0
  425c47:	mov    DWORD PTR [ebp-0x48],eax
  425c4a:	mov    eax,DWORD PTR [ebp-0x8]
  425c4d:	and    eax,0x7
  425c50:	add    eax,0x31
  425c53:	push   eax
  425c54:	call   DWORD PTR [ebp-0x20]
  425c57:	test   eax,eax
  425c59:	je     0x425c9d
  425c5b:	mov    eax,DWORD PTR [ebp-0x8]
  425c5e:	push   0x19
  425c60:	xor    edx,edx
  425c62:	pop    ecx
  425c63:	div    ecx
  425c65:	add    dl,0x41
  425c68:	movzx  eax,dl
  425c6b:	push   eax
  425c6c:	call   DWORD PTR [ebp-0x48]
  425c6f:	test   eax,eax
  425c71:	jne    0x425c9d
  425c73:	mov    eax,DWORD PTR [ebp+0x8]
  425c76:	mov    edi,DWORD PTR [eax+0x1e0]
  425c7c:	mov    esi,DWORD PTR [ebp+0x8]
  425c7f:	xor    eax,eax
  425c81:	lea    edx,[ebp-0x68]
  425c84:	call   0x427e29
  425c89:	push   eax
  425c8a:	mov    eax,DWORD PTR [ebp+0x8]
  425c8d:	mov    eax,DWORD PTR [eax+0x198]
  425c93:	push   DWORD PTR [eax]
  425c95:	call   DWORD PTR [edi+0x8]
  425c98:	mov    DWORD PTR [ebp-0x14],eax
  425c9b:	jmp    0x425ca1
  425c9d:	and    DWORD PTR [ebp-0x14],0x0
  425ca1:	inc    DWORD PTR [ebp-0x8]
  425ca4:	cmp    DWORD PTR [ebp-0x8],0x10
  425ca8:	jb     0x425c4a
  425caa:	mov    eax,DWORD PTR [ebp-0x18]
  425cad:	mov    esi,DWORD PTR [ebp+0x8]
  425cb0:	xor    eax,ebx
  425cb2:	mov    edi,0x3272ef
  425cb7:	add    eax,edi
  425cb9:	lea    edx,[ebp-0x10c]
  425cbf:	call   0x427e29
  425cc4:	push   eax
  425cc5:	mov    eax,DWORD PTR [ebp-0x10]
  425cc8:	mov    esi,DWORD PTR [ebp+0x8]
  425ccb:	xor    eax,ebx
  425ccd:	add    eax,edi
  425ccf:	lea    edx,[ebp-0x12c]
  425cd5:	call   0x427e29
  425cda:	push   eax
  425cdb:	call   DWORD PTR [ebp-0x14]
  425cde:	mov    ecx,DWORD PTR [ebp-0x10]
  425ce1:	xor    ecx,ebx
  425ce3:	add    ecx,edi
  425ce5:	cmp    ecx,eax
  425ce7:	jne    0x425cf0
  425ce9:	mov    DWORD PTR [ebp-0x34],0x1
  425cf0:	mov    eax,DWORD PTR [ebp-0x18]
  425cf3:	mov    ecx,DWORD PTR [ebp-0x1c]
  425cf6:	xor    eax,ebx
  425cf8:	lea    eax,[eax+ecx*1+0x3272ef]
  425cff:	mov    DWORD PTR [ebp-0x1c],eax
  425d02:	mov    eax,DWORD PTR [ebp-0x34]
  425d05:	test   eax,eax
  425d07:	je     0x425d1b
  425d09:	mov    eax,DWORD PTR [ebp-0x18]
  425d0c:	mov    ecx,DWORD PTR [ebp-0x38]
  425d0f:	xor    eax,ebx
  425d11:	lea    eax,[eax+ecx*1+0x3272ef]
  425d18:	mov    DWORD PTR [ebp-0x38],eax
  425d1b:	mov    eax,DWORD PTR [ebp-0x18]
  425d1e:	xor    eax,ebx
  425d20:	mov    ecx,0xffcd8d11
  425d25:	sub    ecx,eax
  425d27:	add    ecx,DWORD PTR [ebp-0x28]
  425d2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425d2d:	cmp    eax,ecx
  425d2f:	jbe    0x425b94
  425d35:	mov    esi,edi
  425d37:	mov    eax,DWORD PTR [ebp-0x38]
  425d3a:	mov    ecx,DWORD PTR [ebp-0x1c]
  425d3d:	cmp    ecx,eax
  425d3f:	jne    0x425d52
  425d41:	push   DWORD PTR [ebp+0x8]
  425d44:	lea    eax,[ebp-0x40]
  425d47:	push   eax
  425d48:	call   0x428896
  425d4d:	mov    DWORD PTR [ebp-0x24],eax
  425d50:	jmp    0x425d5e
  425d52:	mov    eax,DWORD PTR [ebp-0x24]
  425d55:	mov    ecx,DWORD PTR [ebp-0x18]
  425d58:	xor    ecx,ebx
  425d5a:	add    ecx,esi
  425d5c:	xor    DWORD PTR [eax],ecx
  425d5e:	mov    eax,DWORD PTR [ebp-0x10]
  425d61:	mov    ecx,DWORD PTR [ebp-0x24]
  425d64:	xor    eax,ebx
  425d66:	add    eax,esi
  425d68:	cmp    eax,ecx
  425d6a:	je     0x4264e1
  425d70:	mov    eax,DWORD PTR [ebp-0x10]
  425d73:	mov    ecx,DWORD PTR [ebp-0x40]
  425d76:	xor    eax,ebx
  425d78:	add    eax,esi
  425d7a:	cmp    eax,ecx
  425d7c:	je     0x4264e1
  425d82:	mov    eax,DWORD PTR [ebp-0x10]
  425d85:	xor    eax,ebx
  425d87:	add    eax,esi
  425d89:	jmp    0x425da7
  425d8b:	mov    edi,DWORD PTR [ebp-0x24]
  425d8e:	mov    cl,al
  425d90:	and    cl,0x1f
  425d93:	or     dl,0xff
  425d96:	sub    dl,cl
  425d98:	add    BYTE PTR [edi+eax*1],dl
  425d9b:	mov    ecx,DWORD PTR [ebp-0x18]
  425d9e:	xor    ecx,ebx
  425da0:	lea    eax,[eax+ecx*1+0x3272ef]
  425da7:	mov    ecx,DWORD PTR [ebp-0x40]
  425daa:	cmp    eax,ecx
  425dac:	jb     0x425d8b
  425dae:	mov    eax,DWORD PTR [ebp-0x40]
  425db1:	mov    DWORD PTR [ebp-0x28],eax
  425db4:	mov    eax,DWORD PTR [ebp-0x24]
  425db7:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  425dbe:	mov    DWORD PTR [ebp-0xd4],eax
  425dc4:	mov    edi,0xf89c85ba
  425dc9:	mov    DWORD PTR [ebp-0x2c],edi
  425dcc:	mov    eax,DWORD PTR [ebp-0x38]
  425dcf:	xor    eax,ebx
  425dd1:	add    eax,esi
  425dd3:	mov    DWORD PTR [ebp-0xc],eax
  425dd6:	mov    eax,DWORD PTR [ebp-0x38]
  425dd9:	xor    eax,ebx
  425ddb:	add    eax,esi
  425ddd:	mov    DWORD PTR [ebp-0x8],eax
  425de0:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  425de7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  425dee:	mov    eax,DWORD PTR [ebp-0x38]
  425df1:	mov    ecx,DWORD PTR [ebp-0x28]
  425df4:	xor    eax,ebx
  425df6:	add    eax,esi
  425df8:	cmp    ecx,eax
  425dfa:	je     0x425ff9
  425e00:	jmp    0x425fd5
  425e05:	mov    ecx,DWORD PTR [ebp-0xc]
  425e08:	mov    eax,DWORD PTR [ebp-0x28]
  425e0b:	sub    eax,ecx
  425e0d:	mov    ecx,DWORD PTR [ebp-0x48]
  425e10:	xor    ecx,ebx
  425e12:	add    ecx,esi
  425e14:	xor    edx,edx
  425e16:	div    ecx
  425e18:	mov    DWORD PTR [ebp-0x8],eax
  425e1b:	mov    eax,DWORD PTR [ebp-0x4c]
  425e1e:	mov    ecx,DWORD PTR [ebp-0x8]
  425e21:	xor    eax,ebx
  425e23:	add    eax,esi
  425e25:	cmp    ecx,eax
  425e27:	jbe    0x425e33
  425e29:	mov    eax,DWORD PTR [ebp-0x4c]
  425e2c:	xor    eax,ebx
  425e2e:	add    eax,esi
  425e30:	mov    DWORD PTR [ebp-0x8],eax
  425e33:	mov    eax,DWORD PTR [ebp-0x48]
  425e36:	mov    ecx,DWORD PTR [ebp-0x8]
  425e39:	xor    eax,ebx
  425e3b:	add    eax,esi
  425e3d:	imul   eax,ecx
  425e40:	mov    DWORD PTR [ebp-0x8],eax
  425e43:	mov    eax,DWORD PTR [ebp-0x38]
  425e46:	mov    ecx,DWORD PTR [ebp-0x8]
  425e49:	xor    eax,ebx
  425e4b:	add    eax,esi
  425e4d:	cmp    ecx,eax
  425e4f:	je     0x425fc3
  425e55:	mov    eax,DWORD PTR [ebp-0x8]
  425e58:	mov    DWORD PTR [ebp-0x14],eax
  425e5b:	mov    eax,DWORD PTR [ebp-0xc]
  425e5e:	add    eax,DWORD PTR [ebp-0xd4]
  425e64:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  425e6b:	mov    DWORD PTR [ebp-0x34],edi
  425e6e:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  425e78:	mov    DWORD PTR [ebp-0x8],eax
  425e7b:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  425e82:	mov    DWORD PTR [ebp-0x1c],edi
  425e85:	mov    eax,DWORD PTR [ebp-0x20]
  425e88:	xor    eax,ebx
  425e8a:	add    eax,esi
  425e8c:	jmp    0x425f82
  425e91:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425e9b:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425ea5:	mov    eax,DWORD PTR [ebp-0x1c]
  425ea8:	mov    ecx,DWORD PTR [ebp-0x44]
  425eab:	xor    eax,ebx
  425ead:	add    eax,esi
  425eaf:	imul   eax,ecx
  425eb2:	mov    ecx,DWORD PTR [ebp-0x8]
  425eb5:	mov    al,BYTE PTR [eax+ecx*1]
  425eb8:	mov    BYTE PTR [ebp-0x2],al
  425ebb:	mov    eax,DWORD PTR [ebp-0x1c]
  425ebe:	mov    ecx,DWORD PTR [ebp-0x44]
  425ec1:	xor    eax,ebx
  425ec3:	add    eax,esi
  425ec5:	imul   eax,ecx
  425ec8:	mov    ecx,DWORD PTR [ebp-0xe8]
  425ece:	xor    ecx,ebx
  425ed0:	add    eax,ecx
  425ed2:	mov    ecx,DWORD PTR [ebp-0x8]
  425ed5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  425edd:	mov    ecx,DWORD PTR [ebp-0xe0]
  425ee3:	xor    ecx,ebx
  425ee5:	lea    eax,[ecx+eax*1+0x3272ef]
  425eec:	movzx  ecx,BYTE PTR [ebp-0x2]
  425ef0:	xor    ecx,eax
  425ef2:	mov    BYTE PTR [ebp-0x2],cl
  425ef5:	mov    al,BYTE PTR [ebp-0x2]
  425ef8:	mov    ecx,DWORD PTR [ebp-0x1c]
  425efb:	mov    edx,DWORD PTR [ebp-0x44]
  425efe:	xor    ecx,ebx
  425f00:	add    ecx,esi
  425f02:	imul   ecx,edx
  425f05:	mov    edx,DWORD PTR [ebp-0x8]
  425f08:	mov    BYTE PTR [ecx+edx*1],al
  425f0b:	mov    eax,DWORD PTR [ebp-0x1c]
  425f0e:	mov    ecx,DWORD PTR [ebp-0x44]
  425f11:	xor    eax,ebx
  425f13:	add    eax,esi
  425f15:	imul   eax,ecx
  425f18:	mov    ecx,DWORD PTR [ebp-0x8]
  425f1b:	mov    al,BYTE PTR [eax+ecx*1]
  425f1e:	mov    BYTE PTR [ebp-0x2],al
  425f21:	mov    eax,DWORD PTR [ebp-0x1c]
  425f24:	mov    ecx,DWORD PTR [ebp-0x44]
  425f27:	xor    eax,ebx
  425f29:	add    eax,esi
  425f2b:	imul   eax,ecx
  425f2e:	mov    ecx,DWORD PTR [ebp-0x34]
  425f31:	xor    ecx,ebx
  425f33:	add    eax,ecx
  425f35:	mov    ecx,DWORD PTR [ebp-0x8]
  425f38:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  425f40:	mov    ecx,DWORD PTR [ebp-0xc4]
  425f46:	xor    ecx,ebx
  425f48:	lea    eax,[ecx+eax*1+0x3272ef]
  425f4f:	movzx  ecx,BYTE PTR [ebp-0x2]
  425f53:	xor    ecx,eax
  425f55:	mov    BYTE PTR [ebp-0x2],cl
  425f58:	mov    al,BYTE PTR [ebp-0x2]
  425f5b:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f5e:	mov    edx,DWORD PTR [ebp-0x44]
  425f61:	xor    ecx,ebx
  425f63:	add    ecx,esi
  425f65:	imul   ecx,edx
  425f68:	mov    edx,DWORD PTR [ebp-0x8]
  425f6b:	mov    BYTE PTR [ecx+edx*1],al
  425f6e:	mov    eax,DWORD PTR [ebp-0x30]
  425f71:	mov    ecx,DWORD PTR [ebp-0x34]
  425f74:	xor    eax,ebx
  425f76:	xor    ecx,ebx
  425f78:	add    eax,esi
  425f7a:	add    ecx,esi
  425f7c:	imul   eax,ecx
  425f7f:	add    eax,DWORD PTR [ebp-0x44]
  425f82:	mov    DWORD PTR [ebp-0x44],eax
  425f85:	mov    eax,DWORD PTR [ebp-0x44]
  425f88:	mov    ecx,DWORD PTR [ebp-0x14]
  425f8b:	cmp    ecx,eax
  425f8d:	jb     0x425e91
  425f93:	mov    eax,DWORD PTR [ebp-0x34]
  425f96:	mov    ecx,DWORD PTR [ebp-0x14]
  425f99:	xor    eax,ebx
  425f9b:	add    eax,esi
  425f9d:	imul   eax,ecx
  425fa0:	mov    ecx,DWORD PTR [ebp-0x20]
  425fa3:	xor    ecx,ebx
  425fa5:	add    ecx,esi
  425fa7:	or     eax,ecx
  425fa9:	mov    ecx,DWORD PTR [ebp-0x2c]
  425fac:	xor    ecx,ebx
  425fae:	add    eax,ecx
  425fb0:	mov    ecx,DWORD PTR [ebp-0x2c]
  425fb3:	xor    ecx,ebx
  425fb5:	add    eax,ecx
  425fb7:	mov    ecx,DWORD PTR [ebp-0xc]
  425fba:	lea    eax,[eax+ecx*1+0x64e5de]
  425fc1:	jmp    0x425fd2
  425fc3:	mov    eax,DWORD PTR [ebp-0x2c]
  425fc6:	mov    ecx,DWORD PTR [ebp-0xc]
  425fc9:	xor    eax,ebx
  425fcb:	lea    eax,[eax+ecx*1+0x3272ef]
  425fd2:	mov    DWORD PTR [ebp-0xc],eax
  425fd5:	mov    eax,DWORD PTR [ebp-0x2c]
  425fd8:	xor    eax,ebx
  425fda:	mov    ecx,0xffcd8d11
  425fdf:	sub    ecx,eax
  425fe1:	add    ecx,DWORD PTR [ebp-0x28]
  425fe4:	mov    eax,DWORD PTR [ebp-0x2c]
  425fe7:	mov    edx,DWORD PTR [ebp-0xc]
  425fea:	xor    eax,ebx
  425fec:	add    eax,esi
  425fee:	imul   eax,edx
  425ff1:	cmp    eax,ecx
  425ff3:	jbe    0x425e05
  425ff9:	mov    eax,DWORD PTR [ebp-0x10]
  425ffc:	mov    ecx,DWORD PTR [ebp-0x40]
  425fff:	mov    eax,DWORD PTR [ebp+0x8]
  426002:	mov    edx,DWORD PTR [ebp-0x54]
  426005:	mov    eax,DWORD PTR [eax+0x1e0]
  42600b:	xor    edx,ebx
  42600d:	add    edx,esi
  42600f:	push   edx
  426010:	mov    edx,DWORD PTR [ebp-0x3c]
  426013:	xor    edx,ebx
  426015:	add    edx,esi
  426017:	push   edx
  426018:	push   ecx
  426019:	mov    DWORD PTR [ebp-0x30],ecx
  42601c:	mov    ecx,DWORD PTR [ebp-0x10]
  42601f:	xor    ecx,ebx
  426021:	add    ecx,esi
  426023:	push   ecx
  426024:	call   DWORD PTR [eax+0x14]
  426027:	mov    edi,eax
  426029:	mov    eax,DWORD PTR [ebp-0x10]
  42602c:	xor    eax,ebx
  42602e:	add    eax,esi
  426030:	cmp    eax,edi
  426032:	je     0x42608d
  426034:	mov    eax,DWORD PTR [ebp-0x10]
  426037:	jmp    0x42605a
  426039:	mov    ecx,DWORD PTR [ebp-0x24]
  42603c:	xor    eax,ebx
  42603e:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ef]
  426045:	mov    BYTE PTR [eax+edi*1+0x3272ef],cl
  42604c:	mov    ecx,DWORD PTR [ebp-0x18]
  42604f:	xor    ecx,ebx
  426051:	lea    eax,[ecx+eax*1+0x3272ef]
  426058:	xor    eax,ebx
  42605a:	mov    ecx,DWORD PTR [ebp-0x40]
  42605d:	sub    ecx,esi
  42605f:	xor    ecx,ebx
  426061:	cmp    eax,ecx
  426063:	jne    0x426039
  426065:	mov    eax,DWORD PTR [ebp+0x8]
  426068:	mov    ecx,DWORD PTR [ebp-0x50]
  42606b:	mov    eax,DWORD PTR [eax+0x1e0]
  426071:	xor    ecx,ebx
  426073:	add    ecx,esi
  426075:	push   ecx
  426076:	mov    ecx,DWORD PTR [ebp-0x10]
  426079:	xor    ecx,ebx
  42607b:	add    ecx,esi
  42607d:	push   ecx
  42607e:	push   DWORD PTR [ebp-0x24]
  426081:	call   DWORD PTR [eax+0x18]
  426084:	mov    eax,DWORD PTR [ebp-0x30]
  426087:	mov    DWORD PTR [ebp-0x24],edi
  42608a:	mov    DWORD PTR [ebp-0x40],eax
  42608d:	mov    edi,DWORD PTR [ebp-0x24]
  426090:	mov    eax,DWORD PTR [ebp-0x18]
  426093:	mov    ecx,DWORD PTR [ebp-0x10]
  426096:	xor    eax,ebx
  426098:	mov    DWORD PTR [ebp-0x30],edi
  42609b:	add    eax,esi
  42609d:	mov    DWORD PTR [ebp-0x5c],0x39222a22
  4260a4:	mov    DWORD PTR [ebp-0x58],0x37223f22
  4260ab:	jmp    0x4260de
  4260ad:	xor    ecx,ebx
  4260af:	mov    dl,BYTE PTR [ebp+ecx*1+0x327293]
  4260b6:	xor    dl,0x7b
  4260b9:	dec    dl
  4260bb:	mov    DWORD PTR [ebp-0x3c],ecx
  4260be:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272ef]
  4260c6:	movzx  edx,dl
  4260c9:	cmp    ecx,edx
  4260cb:	jne    0x4260e8
  4260cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4260d0:	mov    edx,DWORD PTR [ebp-0x3c]
  4260d3:	xor    ecx,ebx
  4260d5:	lea    ecx,[ecx+edx*1+0x3272ef]
  4260dc:	xor    ecx,ebx
  4260de:	cmp    ecx,0xf89c85b1
  4260e4:	jne    0x4260ad
  4260e6:	jmp    0x4260ef
  4260e8:	mov    eax,DWORD PTR [ebp-0x10]
  4260eb:	xor    eax,ebx
  4260ed:	add    eax,esi
  4260ef:	mov    ecx,DWORD PTR [ebp-0x10]
  4260f2:	xor    ecx,ebx
  4260f4:	add    ecx,esi
  4260f6:	cmp    ecx,eax
  4260f8:	je     0x42626b
  4260fe:	mov    eax,DWORD PTR [edi+0x8]
  426101:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426108:	mov    DWORD PTR [ebp-0x3c],0xf89cc328
  42610f:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  426116:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  42611d:	mov    DWORD PTR [ebp-0x14],eax
  426120:	mov    eax,DWORD PTR [ebp+0x8]
  426123:	mov    ecx,DWORD PTR [ebp-0x20]
  426126:	xor    ecx,ebx
  426128:	add    ecx,esi
  42612a:	push   ecx
  42612b:	mov    ecx,DWORD PTR [ebp-0x48]
  42612e:	mov    eax,DWORD PTR [eax+0x1e0]
  426134:	xor    ecx,ebx
  426136:	add    ecx,esi
  426138:	push   ecx
  426139:	mov    ecx,DWORD PTR [ebp-0x3c]
  42613c:	xor    ecx,ebx
  42613e:	add    ecx,esi
  426140:	push   ecx
  426141:	mov    ecx,DWORD PTR [ebp-0xc]
  426144:	xor    ecx,ebx
  426146:	add    ecx,esi
  426148:	push   ecx
  426149:	call   DWORD PTR [eax+0x14]
  42614c:	mov    edi,eax
  42614e:	mov    eax,DWORD PTR [ebp+0x8]
  426151:	mov    ecx,DWORD PTR [ebp-0x20]
  426154:	mov    eax,DWORD PTR [eax+0x1e0]
  42615a:	xor    ecx,ebx
  42615c:	add    ecx,esi
  42615e:	push   ecx
  42615f:	mov    ecx,DWORD PTR [ebp-0x48]
  426162:	xor    ecx,ebx
  426164:	add    ecx,esi
  426166:	push   ecx
  426167:	mov    ecx,DWORD PTR [ebp-0xc]
  42616a:	push   DWORD PTR [ebp-0x14]
  42616d:	xor    ecx,ebx
  42616f:	add    ecx,esi
  426171:	push   ecx
  426172:	call   DWORD PTR [eax+0x14]
  426175:	mov    ecx,DWORD PTR [ebp-0xc]
  426178:	xor    ecx,ebx
  42617a:	add    ecx,esi
  42617c:	mov    DWORD PTR [ebp-0x20],eax
  42617f:	cmp    ecx,edi
  426181:	je     0x42650e
  426187:	mov    ecx,DWORD PTR [ebp-0xc]
  42618a:	xor    ecx,ebx
  42618c:	add    ecx,esi
  42618e:	cmp    ecx,eax
  426190:	je     0x42650e
  426196:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  42619d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4261a4:	mov    ecx,DWORD PTR [ebp-0x3c]
  4261a7:	xor    cl,0xa8
  4261aa:	sub    cl,0x11
  4261ad:	mov    BYTE PTR [edi],cl
  4261af:	mov    ecx,DWORD PTR [ebp-0xc]
  4261b2:	xor    cl,0xa8
  4261b5:	sub    cl,0x11
  4261b8:	mov    BYTE PTR [edi+0x1],cl
  4261bb:	mov    ecx,DWORD PTR [ebp-0x54]
  4261be:	xor    cl,0xa8
  4261c1:	sub    cl,0x11
  4261c4:	mov    BYTE PTR [edi+0x2],cl
  4261c7:	and    DWORD PTR [ebp-0xc8],0x0
  4261ce:	and    DWORD PTR [ebp-0xdc],0x0
  4261d5:	lea    ecx,[ebp-0xdc]
  4261db:	push   ecx
  4261dc:	push   DWORD PTR [ebp-0x14]
  4261df:	push   eax
  4261e0:	lea    eax,[ebp-0xc8]
  4261e6:	push   eax
  4261e7:	mov    eax,DWORD PTR [ebp-0x30]
  4261ea:	push   DWORD PTR [eax+0xc]
  4261ed:	mov    eax,DWORD PTR [ebp-0x24]
  4261f0:	add    eax,0x10
  4261f3:	push   eax
  4261f4:	push   edi
  4261f5:	call   0x42549c
  4261fa:	mov    DWORD PTR [ebp-0x3c],eax
  4261fd:	mov    eax,DWORD PTR [ebp+0x8]
  426200:	mov    ecx,DWORD PTR [ebp-0x50]
  426203:	mov    eax,DWORD PTR [eax+0x1e0]
  426209:	xor    ecx,ebx
  42620b:	add    ecx,esi
  42620d:	push   ecx
  42620e:	mov    ecx,DWORD PTR [ebp-0xc]
  426211:	xor    ecx,ebx
  426213:	add    ecx,esi
  426215:	push   ecx
  426216:	push   edi
  426217:	call   DWORD PTR [eax+0x18]
  42621a:	mov    eax,DWORD PTR [ebp-0x3c]
  42621d:	add    eax,0xffcd8d11
  426222:	xor    eax,ebx
  426224:	cmp    eax,0xf89c85b9
  426229:	mov    eax,DWORD PTR [ebp+0x8]
  42622c:	mov    eax,DWORD PTR [eax+0x1e0]
  426232:	mov    ecx,DWORD PTR [ebp-0x50]
  426235:	jne    0x426258
  426237:	xor    ecx,ebx
  426239:	add    ecx,esi
  42623b:	push   ecx
  42623c:	mov    ecx,DWORD PTR [ebp-0xc]
  42623f:	xor    ecx,ebx
  426241:	add    ecx,esi
  426243:	push   ecx
  426244:	push   DWORD PTR [ebp-0x24]
  426247:	call   DWORD PTR [eax+0x18]
  42624a:	mov    eax,DWORD PTR [ebp-0x20]
  42624d:	mov    DWORD PTR [ebp-0x24],eax
  426250:	mov    eax,DWORD PTR [ebp-0x14]
  426253:	mov    DWORD PTR [ebp-0x40],eax
  426256:	jmp    0x42626b
  426258:	xor    ecx,ebx
  42625a:	add    ecx,esi
  42625c:	push   ecx
  42625d:	mov    ecx,DWORD PTR [ebp-0xc]
  426260:	xor    ecx,ebx
  426262:	add    ecx,esi
  426264:	push   ecx
  426265:	push   DWORD PTR [ebp-0x20]
  426268:	call   DWORD PTR [eax+0x18]
  42626b:	mov    eax,DWORD PTR [ebp-0x40]
  42626e:	mov    DWORD PTR [ebp-0x38],eax
  426271:	mov    eax,DWORD PTR [ebp-0x24]
  426274:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  42627b:	mov    DWORD PTR [ebp-0x3c],eax
  42627e:	mov    edi,0xf89c85ba
  426283:	mov    DWORD PTR [ebp-0x2c],edi
  426286:	mov    eax,DWORD PTR [ebp-0x28]
  426289:	xor    eax,ebx
  42628b:	add    eax,esi
  42628d:	mov    DWORD PTR [ebp-0xc],eax
  426290:	mov    eax,DWORD PTR [ebp-0x28]
  426293:	xor    eax,ebx
  426295:	add    eax,esi
  426297:	mov    DWORD PTR [ebp-0x14],eax
  42629a:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  4262a1:	mov    DWORD PTR [ebp-0x20],0xf89c85b0
  4262a8:	mov    eax,DWORD PTR [ebp-0x28]
  4262ab:	mov    ecx,DWORD PTR [ebp-0x38]
  4262ae:	xor    eax,ebx
  4262b0:	add    eax,esi
  4262b2:	cmp    ecx,eax
  4262b4:	je     0x4264aa
  4262ba:	jmp    0x426486
  4262bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4262c2:	mov    eax,DWORD PTR [ebp-0x38]
  4262c5:	sub    eax,ecx
  4262c7:	mov    ecx,DWORD PTR [ebp-0x48]
  4262ca:	xor    ecx,ebx
  4262cc:	add    ecx,esi
  4262ce:	xor    edx,edx
  4262d0:	div    ecx
  4262d2:	mov    DWORD PTR [ebp-0x14],eax
  4262d5:	mov    eax,DWORD PTR [ebp-0x20]
  4262d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4262db:	xor    eax,ebx
  4262dd:	add    eax,esi
  4262df:	cmp    ecx,eax
  4262e1:	jbe    0x4262ed
  4262e3:	mov    eax,DWORD PTR [ebp-0x20]
  4262e6:	xor    eax,ebx
  4262e8:	add    eax,esi
  4262ea:	mov    DWORD PTR [ebp-0x14],eax
  4262ed:	mov    eax,DWORD PTR [ebp-0x48]
  4262f0:	mov    ecx,DWORD PTR [ebp-0x14]
  4262f3:	xor    eax,ebx
  4262f5:	add    eax,esi
  4262f7:	imul   eax,ecx
  4262fa:	mov    DWORD PTR [ebp-0x14],eax
  4262fd:	mov    eax,DWORD PTR [ebp-0x28]
  426300:	mov    ecx,DWORD PTR [ebp-0x14]
  426303:	xor    eax,ebx
  426305:	add    eax,esi
  426307:	cmp    ecx,eax
  426309:	je     0x426474
  42630f:	mov    eax,DWORD PTR [ebp-0x14]
  426312:	mov    DWORD PTR [ebp-0x34],eax
  426315:	mov    eax,DWORD PTR [ebp-0xc]
  426318:	add    eax,DWORD PTR [ebp-0x3c]
  42631b:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  426322:	mov    DWORD PTR [ebp-0x14],edi
  426325:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  42632c:	mov    DWORD PTR [ebp-0x1c],eax
  42632f:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  426336:	mov    DWORD PTR [ebp-0x8],edi
  426339:	mov    eax,DWORD PTR [ebp-0x4c]
  42633c:	xor    eax,ebx
  42633e:	add    eax,esi
  426340:	jmp    0x426433
  426345:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42634f:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426359:	mov    eax,DWORD PTR [ebp-0x8]
  42635c:	mov    ecx,DWORD PTR [ebp-0x18]
  42635f:	xor    eax,ebx
  426361:	add    eax,esi
  426363:	imul   eax,ecx
  426366:	mov    ecx,DWORD PTR [ebp-0x1c]
  426369:	mov    al,BYTE PTR [eax+ecx*1]
  42636c:	mov    BYTE PTR [ebp-0x1],al
  42636f:	mov    eax,DWORD PTR [ebp-0x8]
  426372:	mov    ecx,DWORD PTR [ebp-0x18]
  426375:	xor    eax,ebx
  426377:	add    eax,esi
  426379:	imul   eax,ecx
  42637c:	mov    ecx,DWORD PTR [ebp-0x54]
  42637f:	xor    ecx,ebx
  426381:	add    eax,ecx
  426383:	mov    ecx,DWORD PTR [ebp-0x1c]
  426386:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  42638e:	mov    ecx,DWORD PTR [ebp-0xe4]
  426394:	xor    ecx,ebx
  426396:	lea    eax,[ecx+eax*1+0x3272ef]
  42639d:	movzx  ecx,BYTE PTR [ebp-0x1]
  4263a1:	xor    ecx,eax
  4263a3:	mov    BYTE PTR [ebp-0x1],cl
  4263a6:	mov    al,BYTE PTR [ebp-0x1]
  4263a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4263ac:	mov    edx,DWORD PTR [ebp-0x18]
  4263af:	xor    ecx,ebx
  4263b1:	add    ecx,esi
  4263b3:	imul   ecx,edx
  4263b6:	mov    edx,DWORD PTR [ebp-0x1c]
  4263b9:	mov    BYTE PTR [ecx+edx*1],al
  4263bc:	mov    eax,DWORD PTR [ebp-0x8]
  4263bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4263c2:	xor    eax,ebx
  4263c4:	add    eax,esi
  4263c6:	imul   eax,ecx
  4263c9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4263cc:	mov    al,BYTE PTR [eax+ecx*1]
  4263cf:	mov    BYTE PTR [ebp-0x1],al
  4263d2:	mov    eax,DWORD PTR [ebp-0x8]
  4263d5:	mov    ecx,DWORD PTR [ebp-0x18]
  4263d8:	xor    eax,ebx
  4263da:	add    eax,esi
  4263dc:	imul   eax,ecx
  4263df:	mov    ecx,DWORD PTR [ebp-0x14]
  4263e2:	xor    ecx,ebx
  4263e4:	add    eax,ecx
  4263e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4263e9:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  4263f1:	mov    ecx,DWORD PTR [ebp-0xd0]
  4263f7:	xor    ecx,ebx
  4263f9:	lea    eax,[ecx+eax*1+0x3272ef]
  426400:	movzx  ecx,BYTE PTR [ebp-0x1]
  426404:	xor    ecx,eax
  426406:	mov    BYTE PTR [ebp-0x1],cl
  426409:	mov    al,BYTE PTR [ebp-0x1]
  42640c:	mov    ecx,DWORD PTR [ebp-0x8]
  42640f:	mov    edx,DWORD PTR [ebp-0x18]
  426412:	xor    ecx,ebx
  426414:	add    ecx,esi
  426416:	imul   ecx,edx
  426419:	mov    edx,DWORD PTR [ebp-0x1c]
  42641c:	mov    BYTE PTR [ecx+edx*1],al
  42641f:	mov    eax,DWORD PTR [ebp-0x30]
  426422:	mov    ecx,DWORD PTR [ebp-0x14]
  426425:	xor    eax,ebx
  426427:	xor    ecx,ebx
  426429:	add    eax,esi
  42642b:	add    ecx,esi
  42642d:	imul   eax,ecx
  426430:	add    eax,DWORD PTR [ebp-0x18]
  426433:	mov    DWORD PTR [ebp-0x18],eax
  426436:	mov    eax,DWORD PTR [ebp-0x18]
  426439:	mov    ecx,DWORD PTR [ebp-0x34]
  42643c:	cmp    ecx,eax
  42643e:	jb     0x426345
  426444:	mov    eax,DWORD PTR [ebp-0x14]
  426447:	mov    ecx,DWORD PTR [ebp-0x34]
  42644a:	xor    eax,ebx
  42644c:	add    eax,esi
  42644e:	imul   eax,ecx
  426451:	mov    ecx,DWORD PTR [ebp-0x4c]
  426454:	xor    ecx,ebx
  426456:	add    ecx,esi
  426458:	or     eax,ecx
  42645a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42645d:	xor    ecx,ebx
  42645f:	add    eax,ecx
  426461:	mov    ecx,DWORD PTR [ebp-0x2c]
  426464:	xor    ecx,ebx
  426466:	add    eax,ecx
  426468:	mov    ecx,DWORD PTR [ebp-0xc]
  42646b:	lea    eax,[eax+ecx*1+0x64e5de]
  426472:	jmp    0x426483
  426474:	mov    eax,DWORD PTR [ebp-0x2c]
  426477:	mov    ecx,DWORD PTR [ebp-0xc]
  42647a:	xor    eax,ebx
  42647c:	lea    eax,[eax+ecx*1+0x3272ef]
  426483:	mov    DWORD PTR [ebp-0xc],eax
  426486:	mov    eax,DWORD PTR [ebp-0x2c]
  426489:	xor    eax,ebx
  42648b:	mov    ecx,0xffcd8d11
  426490:	sub    ecx,eax
  426492:	add    ecx,DWORD PTR [ebp-0x38]
  426495:	mov    eax,DWORD PTR [ebp-0x2c]
  426498:	mov    edx,DWORD PTR [ebp-0xc]
  42649b:	xor    eax,ebx
  42649d:	add    eax,esi
  42649f:	imul   eax,edx
  4264a2:	cmp    eax,ecx
  4264a4:	jbe    0x4262bf
  4264aa:	push   DWORD PTR [ebp+0x8]
  4264ad:	mov    eax,DWORD PTR [ebp+0x8]
  4264b0:	push   DWORD PTR [eax+0x1cc]
  4264b6:	lea    eax,[ebp-0xd8]
  4264bc:	push   eax
  4264bd:	mov    eax,DWORD PTR [ebp+0x8]
  4264c0:	mov    eax,DWORD PTR [eax+0x1c4]
  4264c6:	push   DWORD PTR [eax]
  4264c8:	mov    eax,DWORD PTR [ebp+0x8]
  4264cb:	mov    eax,DWORD PTR [eax+0x1c0]
  4264d1:	push   DWORD PTR [eax]
  4264d3:	push   DWORD PTR [ebp-0x40]
  4264d6:	push   DWORD PTR [ebp-0x24]
  4264d9:	call   0x426f70
  4264de:	mov    DWORD PTR [ebp-0x3c],eax
  4264e1:	mov    eax,DWORD PTR [ebp-0x10]
  4264e4:	mov    ecx,DWORD PTR [ebp-0x24]
  4264e7:	xor    eax,ebx
  4264e9:	add    eax,esi
  4264eb:	cmp    eax,ecx
  4264ed:	je     0x42650e
  4264ef:	mov    eax,DWORD PTR [ebp+0x8]
  4264f2:	mov    ecx,DWORD PTR [ebp-0x50]
  4264f5:	mov    eax,DWORD PTR [eax+0x1e0]
  4264fb:	xor    ecx,ebx
  4264fd:	add    ecx,esi
  4264ff:	push   ecx
  426500:	mov    ecx,DWORD PTR [ebp-0x10]
  426503:	xor    ecx,ebx
  426505:	add    ecx,esi
  426507:	push   ecx
  426508:	push   DWORD PTR [ebp-0x24]
  42650b:	call   DWORD PTR [eax+0x18]
  42650e:	pop    edi
  42650f:	pop    esi
  426510:	pop    ebx
  426511:	leave  
  426512:	ret    0x4
  426515:	push   ebp
  426516:	mov    ebp,esp
  426518:	push   ecx
  426519:	push   ecx
  42651a:	lea    eax,[ebp-0x8]
  42651d:	mov    DWORD PTR [ebp-0x4],eax
  426520:	push   esi
  426521:	mov    esi,DWORD PTR [ebp-0x4]
  426524:	mov    eax,0xf881ba2f
  426529:	mov    DWORD PTR [esi],eax
  42652b:	mov    esi,DWORD PTR [ebp-0x8]
  42652e:	cmp    esi,eax
  426530:	pop    esi
  426531:	jne    0x42653b
  426533:	mov    BYTE PTR [ecx+0xa],0x7a
  426537:	mov    BYTE PTR [edx+0x8],0x2f
  42653b:	mov    BYTE PTR [edx+0xa],0x7a
  42653f:	mov    BYTE PTR [ecx+0x2],0x14
  426543:	leave  
  426544:	ret    
  426545:	push   ebp
  426546:	mov    ebp,esp
  426548:	push   ecx
  426549:	push   ecx
  42654a:	lea    eax,[ebp-0x8]
  42654d:	mov    DWORD PTR [ebp-0x4],eax
  426550:	mov    edx,DWORD PTR [ebp-0x4]
  426553:	mov    eax,0xf88b0bc3
  426558:	mov    DWORD PTR [edx],eax
  42655a:	mov    edx,DWORD PTR [ebp-0x8]
  42655d:	cmp    edx,eax
  42655f:	jne    0x426570
  426561:	mov    eax,DWORD PTR [ebp+0x8]
  426564:	mov    BYTE PTR [ecx+0x9],0xe
  426568:	mov    BYTE PTR [eax+0x7],0x57
  42656c:	mov    BYTE PTR [ecx+0x6],0xf
  426570:	mov    BYTE PTR [ecx+0x3],0x1e
  426574:	leave  
  426575:	ret    0x4
  426578:	push   ebp
  426579:	mov    ebp,esp
  42657b:	push   ecx
  42657c:	push   ecx
  42657d:	lea    eax,[ebp-0x8]
  426580:	mov    DWORD PTR [ebp-0x4],eax
  426583:	mov    edx,DWORD PTR [ebp-0x4]
  426586:	mov    eax,0x7e0da2f
  42658b:	mov    DWORD PTR [edx],eax
  42658d:	mov    edx,DWORD PTR [ebp-0x8]
  426590:	cmp    edx,eax
  426592:	jne    0x426598
  426594:	mov    BYTE PTR [ecx+0x7],0x57
  426598:	mov    eax,DWORD PTR [ebp+0x8]
  42659b:	mov    BYTE PTR [ecx+0x1],0x11
  42659f:	mov    BYTE PTR [eax+0x9],0x2e
  4265a3:	leave  
  4265a4:	ret    0x4
  4265a7:	push   ebp
  4265a8:	mov    ebp,esp
  4265aa:	push   ecx
  4265ab:	push   ecx
  4265ac:	lea    eax,[ebp-0x8]
  4265af:	mov    DWORD PTR [ebp-0x4],eax
  4265b2:	push   esi
  4265b3:	mov    esi,DWORD PTR [ebp-0x4]
  4265b6:	mov    eax,0x7060e30
  4265bb:	mov    DWORD PTR [esi],eax
  4265bd:	mov    esi,DWORD PTR [ebp-0x8]
  4265c0:	cmp    esi,eax
  4265c2:	pop    esi
  4265c3:	jne    0x4265cf
  4265c5:	mov    BYTE PTR [edx+0x4],0xb
  4265c9:	mov    WORD PTR [ecx+0x3],0xb1e
  4265cf:	mov    BYTE PTR [edx],0x3f
  4265d2:	leave  
  4265d3:	ret    
  4265d4:	push   ebp
  4265d5:	mov    ebp,esp
  4265d7:	push   ecx
  4265d8:	push   ecx
  4265d9:	lea    eax,[ebp-0x8]
  4265dc:	mov    DWORD PTR [ebp-0x4],eax
  4265df:	mov    edx,DWORD PTR [ebp-0x4]
  4265e2:	mov    eax,0xf8870b3f
  4265e7:	mov    DWORD PTR [edx],eax
  4265e9:	mov    edx,DWORD PTR [ebp-0x8]
  4265ec:	cmp    edx,eax
  4265ee:	jne    0x4265fb
  4265f0:	mov    eax,DWORD PTR [ebp+0x8]
  4265f3:	mov    BYTE PTR [ecx+0x8],0xf
  4265f7:	mov    BYTE PTR [eax+0x1],0x11
  4265fb:	mov    BYTE PTR [ecx+0x5],0x3
  4265ff:	leave  
  426600:	ret    0x4
  426603:	push   esi
  426604:	mov    ecx,edi
  426606:	call   0x4265d4
  42660b:	mov    edx,edi
  42660d:	mov    ecx,esi
  42660f:	mov    BYTE PTR [esi],0x1f
  426612:	call   0x4265a7
  426617:	push   esi
  426618:	mov    ecx,edi
  42661a:	mov    BYTE PTR [esi+0x5],0x3
  42661e:	call   0x426578
  426623:	push   esi
  426624:	mov    BYTE PTR [esi+0x6],0xf
  426628:	call   0x426545
  42662d:	mov    BYTE PTR [esi+0x2],0x14
  426631:	mov    edx,esi
  426633:	jmp    0x426515
  426638:	push   ebp
  426639:	mov    ebp,esp
  42663b:	push   ecx
  42663c:	mov    ecx,DWORD PTR [edx+0x194]
  426642:	push   esi
  426643:	mov    esi,DWORD PTR [ebp+0x8]
  426646:	mov    esi,DWORD PTR [esi]
  426648:	mov    DWORD PTR [ecx],esi
  42664a:	mov    ecx,DWORD PTR [edx+0x194]
  426650:	mov    ecx,DWORD PTR [ecx]
  426652:	mov    esi,DWORD PTR [edx+0x190]
  426658:	mov    DWORD PTR [esi],ecx
  42665a:	mov    eax,DWORD PTR [edx+0x194]
  426660:	mov    ecx,DWORD PTR [eax]
  426662:	mov    ecx,DWORD PTR [ecx+0x3c]
  426665:	add    ecx,DWORD PTR [eax]
  426667:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  42666e:	mov    eax,DWORD PTR [ebp-0x4]
  426671:	movzx  ecx,WORD PTR [ecx+0x16]
  426675:	xor    eax,0x75108a8
  42667a:	add    eax,0x3272ef
  42667f:	pop    esi
  426680:	test   ecx,eax
  426682:	je     0x426690
  426684:	mov    eax,DWORD PTR [edx+0x1c8]
  42668a:	mov    DWORD PTR [eax],0xf89c85ba
  426690:	leave  
  426691:	ret    0x4
  426694:	push   ebp
  426695:	mov    ebp,esp
  426697:	sub    esp,0x70
  42669a:	and    DWORD PTR [ebp-0x20],0x0
  42669e:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  4266a5:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  4266ac:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  4266b3:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4266ba:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  4266c1:	mov    eax,DWORD PTR [ebp+0x20]
  4266c4:	mov    eax,DWORD PTR [eax+0x194]
  4266ca:	mov    DWORD PTR [ebp-0xc],eax
  4266cd:	mov    eax,DWORD PTR [ebp+0x20]
  4266d0:	push   ebx
  4266d1:	push   esi
  4266d2:	mov    esi,DWORD PTR [eax+0x190]
  4266d8:	mov    eax,DWORD PTR [ebp+0x20]
  4266db:	mov    eax,DWORD PTR [eax+0x18c]
  4266e1:	mov    DWORD PTR [ebp-0x8],eax
  4266e4:	mov    eax,DWORD PTR [eax]
  4266e6:	push   edi
  4266e7:	mov    DWORD PTR [ebp-0x4],esi
  4266ea:	test   eax,eax
  4266ec:	jne    0x4266f9
  4266ee:	push   DWORD PTR [ebp+0x1c]
  4266f1:	mov    edx,DWORD PTR [ebp+0x20]
  4266f4:	call   0x426638
  4266f9:	mov    eax,DWORD PTR [esi]
  4266fb:	mov    ebx,DWORD PTR [esi]
  4266fd:	add    ebx,DWORD PTR [eax+0x3c]
  426700:	mov    eax,DWORD PTR [ebp+0xc]
  426703:	mov    ecx,DWORD PTR [ebp-0x8]
  426706:	mov    ecx,DWORD PTR [ecx]
  426708:	mov    esi,0x75108a8
  42670d:	xor    eax,esi
  42670f:	mov    edi,0x3272ef
  426714:	add    eax,edi
  426716:	cmp    eax,ecx
  426718:	jne    0x426950
  42671e:	mov    eax,DWORD PTR [ebp-0xc]
  426721:	mov    eax,DWORD PTR [eax]
  426723:	mov    DWORD PTR [ebp-0x10],eax
  426726:	mov    eax,DWORD PTR [ebx+0x50]
  426729:	mov    DWORD PTR [ebp-0x68],eax
  42672c:	mov    eax,DWORD PTR [ebp-0x18]
  42672f:	xor    eax,esi
  426731:	add    eax,edi
  426733:	mov    DWORD PTR [ebp-0x64],eax
  426736:	mov    eax,DWORD PTR [ebp-0x14]
  426739:	and    DWORD PTR [ebp-0x6c],0x0
  42673d:	xor    eax,esi
  42673f:	add    eax,edi
  426741:	mov    DWORD PTR [ebp-0x60],eax
  426744:	lea    eax,[ebp-0x70]
  426747:	push   eax
  426748:	mov    eax,DWORD PTR [ebp+0x8]
  42674b:	xor    eax,esi
  42674d:	add    eax,edi
  42674f:	push   eax
  426750:	mov    eax,DWORD PTR [ebp+0x20]
  426753:	add    eax,0xaa
  426758:	push   eax
  426759:	mov    eax,DWORD PTR [ebp+0x20]
  42675c:	mov    eax,DWORD PTR [eax+0x198]
  426762:	mov    DWORD PTR [ebp-0x70],0x4
  426769:	push   DWORD PTR [eax]
  42676b:	mov    eax,DWORD PTR [ebp+0x10]
  42676e:	call   eax
  426770:	mov    ecx,DWORD PTR [ebp-0xc]
  426773:	mov    ecx,DWORD PTR [ecx]
  426775:	mov    edx,DWORD PTR [ebp-0x8]
  426778:	mov    DWORD PTR [ebp-0x6c],eax
  42677b:	mov    DWORD PTR [ebp+0x1c],eax
  42677e:	mov    DWORD PTR [edx],ecx
  426780:	mov    ecx,DWORD PTR [ebp-0x4]
  426783:	mov    DWORD PTR [ecx],eax
  426785:	mov    eax,DWORD PTR [ebx+0x50]
  426788:	mov    DWORD PTR [ebp-0x68],eax
  42678b:	mov    eax,DWORD PTR [ebp-0x1c]
  42678e:	xor    eax,esi
  426790:	add    eax,edi
  426792:	mov    DWORD PTR [ebp-0x64],eax
  426795:	lea    eax,[ebp-0x20]
  426798:	mov    DWORD PTR [ebp-0x60],eax
  42679b:	lea    eax,[ebp-0x70]
  42679e:	push   eax
  42679f:	mov    eax,DWORD PTR [ebp+0x8]
  4267a2:	xor    eax,esi
  4267a4:	add    eax,edi
  4267a6:	push   eax
  4267a7:	mov    eax,DWORD PTR [ebp+0x20]
  4267aa:	add    eax,0xee
  4267af:	push   eax
  4267b0:	mov    eax,DWORD PTR [ebp+0x20]
  4267b3:	mov    eax,DWORD PTR [eax+0x198]
  4267b9:	mov    DWORD PTR [ebp-0x70],0x4
  4267c0:	push   DWORD PTR [eax]
  4267c2:	mov    eax,DWORD PTR [ebp+0x10]
  4267c5:	call   eax
  4267c7:	test   eax,eax
  4267c9:	je     0x4267ee
  4267cb:	and    DWORD PTR [ebp+0xc],0x0
  4267cf:	cmp    DWORD PTR [ebx+0x50],0x0
  4267d3:	jbe    0x4267ee
  4267d5:	mov    eax,DWORD PTR [ebp+0x1c]
  4267d8:	mov    ecx,DWORD PTR [ebp-0x10]
  4267db:	sub    ecx,eax
  4267dd:	mov    dl,BYTE PTR [ecx+eax*1]
  4267e0:	inc    DWORD PTR [ebp+0xc]
  4267e3:	mov    BYTE PTR [eax],dl
  4267e5:	mov    edx,DWORD PTR [ebp+0xc]
  4267e8:	inc    eax
  4267e9:	cmp    edx,DWORD PTR [ebx+0x50]
  4267ec:	jb     0x4267dd
  4267ee:	mov    edx,DWORD PTR [ebp+0x1c]
  4267f1:	mov    ecx,DWORD PTR [edx+0x3c]
  4267f4:	add    ecx,edx
  4267f6:	mov    eax,DWORD PTR [ecx+0xa0]
  4267fc:	mov    ebx,DWORD PTR [ecx+0x28]
  4267ff:	add    eax,edx
  426801:	sub    edx,DWORD PTR [ebp-0x10]
  426804:	add    ebx,DWORD PTR [ebp+0x1c]
  426807:	mov    DWORD PTR [ebp+0xc],edx
  42680a:	mov    DWORD PTR [ebp-0x2c],ecx
  42680d:	mov    DWORD PTR [ebp-0x14],ebx
  426810:	mov    DWORD PTR [ebp-0x8],0x0
  426817:	jmp    0x426893
  426819:	add    edx,0xfffffff8
  42681c:	shr    edx,1
  42681e:	mov    DWORD PTR [ebp-0x18],edx
  426821:	je     0x42687f
  426823:	lea    edx,[eax+0x8]
  426826:	mov    DWORD PTR [ebp-0x4],edx
  426829:	mov    edx,DWORD PTR [ebp-0x18]
  42682c:	mov    DWORD PTR [ebp-0x18],edx
  42682f:	mov    edx,DWORD PTR [ebp-0x4]
  426832:	movzx  edx,WORD PTR [edx]
  426835:	mov    DWORD PTR [ebp-0x24],edx
  426838:	and    edx,0xfff
  42683e:	mov    DWORD PTR [ebp-0x28],edx
  426841:	mov    edx,DWORD PTR [ebp-0x24]
  426844:	shr    edx,0xc
  426847:	add    edx,0xffcd8d11
  42684d:	xor    edx,esi
  42684f:	cmp    edx,0xf89c85bc
  426855:	jne    0x426876
  426857:	mov    edx,DWORD PTR [ebp-0x28]
  42685a:	add    edx,DWORD PTR [ebp+0x1c]
  42685d:	mov    ebx,DWORD PTR [eax]
  42685f:	cmp    DWORD PTR [ebx+edx*1],0x0
  426863:	je     0x426873
  426865:	mov    ecx,DWORD PTR [ebp+0xc]
  426868:	add    ecx,DWORD PTR [ebx+edx*1]
  42686b:	mov    ebx,DWORD PTR [eax]
  42686d:	mov    DWORD PTR [edx+ebx*1],ecx
  426870:	mov    ecx,DWORD PTR [ebp-0x2c]
  426873:	mov    ebx,DWORD PTR [ebp-0x14]
  426876:	add    DWORD PTR [ebp-0x4],0x2
  42687a:	dec    DWORD PTR [ebp-0x18]
  42687d:	jne    0x42682f
  42687f:	mov    edx,DWORD PTR [ebp-0xc]
  426882:	add    DWORD PTR [ebp-0x8],edx
  426885:	mov    edx,DWORD PTR [ebp-0x8]
  426888:	cmp    edx,DWORD PTR [ecx+0xa4]
  42688e:	jae    0x4268a1
  426890:	add    eax,DWORD PTR [ebp-0xc]
  426893:	mov    edx,DWORD PTR [eax+0x4]
  426896:	mov    DWORD PTR [ebp-0xc],edx
  426899:	test   edx,edx
  42689b:	jne    0x426819
  4268a1:	mov    eax,DWORD PTR [ebp-0x10]
  4268a4:	mov    DWORD PTR [ebp-0x6c],eax
  4268a7:	mov    DWORD PTR [ebp-0x70],0x4
  4268ae:	mov    eax,DWORD PTR [ecx+0x50]
  4268b1:	mov    DWORD PTR [ebp-0x68],eax
  4268b4:	mov    eax,DWORD PTR [ebp-0x1c]
  4268b7:	xor    eax,esi
  4268b9:	add    eax,edi
  4268bb:	mov    DWORD PTR [ebp-0x64],eax
  4268be:	lea    eax,[ebp-0x20]
  4268c1:	mov    DWORD PTR [ebp-0x60],eax
  4268c4:	lea    eax,[ebp-0x70]
  4268c7:	push   eax
  4268c8:	mov    eax,DWORD PTR [ebp+0x8]
  4268cb:	xor    eax,esi
  4268cd:	add    eax,edi
  4268cf:	push   eax
  4268d0:	mov    eax,DWORD PTR [ebp+0x20]
  4268d3:	add    eax,0xee
  4268d8:	push   eax
  4268d9:	mov    eax,DWORD PTR [ebp+0x20]
  4268dc:	mov    eax,DWORD PTR [eax+0x198]
  4268e2:	push   DWORD PTR [eax]
  4268e4:	mov    eax,DWORD PTR [ebp+0x10]
  4268e7:	call   eax
  4268e9:	mov    eax,DWORD PTR [ebp+0x20]
  4268ec:	mov    eax,DWORD PTR [eax+0x180]
  4268f2:	add    eax,DWORD PTR [ebp+0xc]
  4268f5:	mov    ecx,DWORD PTR [ebp+0xc]
  4268f8:	push   DWORD PTR [ebp+0x18]
  4268fb:	mov    DWORD PTR [eax],ecx
  4268fd:	push   DWORD PTR [ebp+0x14]
  426900:	push   DWORD PTR [ebp+0x1c]
  426903:	call   ebx
  426905:	mov    ecx,DWORD PTR [ebp+0xc]
  426908:	add    ecx,DWORD PTR [ebp+0x20]
  42690b:	lea    eax,[ebp+0x4]
  42690e:	mov    DWORD PTR [ebp+0x20],ecx
  426911:	mov    ecx,DWORD PTR [ebp+0x20]
  426914:	mov    ecx,DWORD PTR [ebp+0x20]
  426917:	mov    edx,DWORD PTR [ecx+0x190]
  42691d:	mov    ecx,DWORD PTR [ebp+0x20]
  426920:	mov    ecx,DWORD PTR [ecx+0x18c]
  426926:	mov    esi,DWORD PTR [ecx]
  426928:	cmp    DWORD PTR [eax],esi
  42692a:	jb     0x42694b
  42692c:	mov    esi,DWORD PTR [edx]
  42692e:	mov    edi,DWORD PTR [edx]
  426930:	mov    esi,DWORD PTR [esi+0x3c]
  426933:	lea    esi,[edi+esi*1+0x50]
  426937:	mov    edi,DWORD PTR [ecx]
  426939:	add    edi,DWORD PTR [esi]
  42693b:	cmp    DWORD PTR [eax],edi
  42693d:	jae    0x42694b
  42693f:	mov    esi,DWORD PTR [ecx]
  426941:	mov    ecx,DWORD PTR [eax]
  426943:	mov    edx,DWORD PTR [edx]
  426945:	sub    ecx,esi
  426947:	add    edx,ecx
  426949:	mov    DWORD PTR [eax],edx
  42694b:	mov    eax,DWORD PTR [ebp+0xc]
  42694e:	jmp    0x426952
  426950:	xor    eax,eax
  426952:	pop    edi
  426953:	pop    esi
  426954:	pop    ebx
  426955:	leave  
  426956:	ret    0x1c
  426959:	push   ebp
  42695a:	mov    ebp,esp
  42695c:	sub    esp,0x1c
  42695f:	push   esi
  426960:	mov    esi,eax
  426962:	mov    eax,DWORD PTR [ecx+0x190]
  426968:	cmp    DWORD PTR [eax],0x0
  42696b:	je     0x426a7b
  426971:	test   edx,edx
  426973:	je     0x426a7b
  426979:	test   esi,esi
  42697b:	je     0x426a7b
  426981:	mov    eax,DWORD PTR [esi+0x88]
  426987:	test   eax,eax
  426989:	je     0x426a76
  42698f:	cmp    DWORD PTR [esi+0x8c],0x10
  426996:	je     0x426a76
  42699c:	cmp    DWORD PTR [esi+0x34],edx
  42699f:	je     0x426a76
  4269a5:	mov    esi,DWORD PTR [ecx+0x18c]
  4269ab:	and    DWORD PTR [ebp-0x10],0x0
  4269af:	mov    ecx,edx
  4269b1:	sub    ecx,DWORD PTR [esi]
  4269b3:	add    eax,edx
  4269b5:	movzx  edx,WORD PTR [eax+0xc]
  4269b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4269bc:	movzx  ecx,WORD PTR [eax+0xe]
  4269c0:	add    ecx,edx
  4269c2:	je     0x426a76
  4269c8:	lea    ecx,[eax+0x14]
  4269cb:	push   ebx
  4269cc:	mov    DWORD PTR [ebp-0x18],ecx
  4269cf:	mov    esi,0x7fffffff
  4269d4:	push   edi
  4269d5:	test   DWORD PTR [ecx],esi
  4269d7:	je     0x426a58
  4269d9:	mov    edx,DWORD PTR [ecx]
  4269db:	and    DWORD PTR [ebp-0xc],0x0
  4269df:	and    edx,esi
  4269e1:	add    edx,eax
  4269e3:	movzx  edi,WORD PTR [edx+0xe]
  4269e7:	movzx  ebx,WORD PTR [edx+0xc]
  4269eb:	add    edi,ebx
  4269ed:	je     0x426a58
  4269ef:	lea    ecx,[edx+0x14]
  4269f2:	mov    DWORD PTR [ebp-0x14],ecx
  4269f5:	test   DWORD PTR [ecx],esi
  4269f7:	je     0x426a3a
  4269f9:	mov    ecx,DWORD PTR [ecx]
  4269fb:	and    DWORD PTR [ebp-0x8],0x0
  4269ff:	and    ecx,esi
  426a01:	add    ecx,eax
  426a03:	movzx  edi,WORD PTR [ecx+0xe]
  426a07:	movzx  ebx,WORD PTR [ecx+0xc]
  426a0b:	add    edi,ebx
  426a0d:	je     0x426a3a
  426a0f:	lea    edi,[ecx+0x14]
  426a12:	mov    DWORD PTR [ebp-0x4],edi
  426a15:	mov    edi,DWORD PTR [ebp-0x4]
  426a18:	mov    edi,DWORD PTR [edi]
  426a1a:	test   edi,edi
  426a1c:	je     0x426a24
  426a1e:	mov    ebx,DWORD PTR [ebp-0x1c]
  426a21:	add    DWORD PTR [edi+eax*1],ebx
  426a24:	movzx  edi,WORD PTR [ecx+0xe]
  426a28:	movzx  ebx,WORD PTR [ecx+0xc]
  426a2c:	inc    DWORD PTR [ebp-0x8]
  426a2f:	add    DWORD PTR [ebp-0x4],0x8
  426a33:	add    edi,ebx
  426a35:	cmp    DWORD PTR [ebp-0x8],edi
  426a38:	jb     0x426a15
  426a3a:	movzx  edi,WORD PTR [edx+0xe]
  426a3e:	movzx  ebx,WORD PTR [edx+0xc]
  426a42:	mov    ecx,DWORD PTR [ebp-0x14]
  426a45:	inc    DWORD PTR [ebp-0xc]
  426a48:	add    ecx,0x8
  426a4b:	add    edi,ebx
  426a4d:	mov    DWORD PTR [ebp-0x14],ecx
  426a50:	cmp    DWORD PTR [ebp-0xc],edi
  426a53:	jb     0x4269f5
  426a55:	mov    ecx,DWORD PTR [ebp-0x18]
  426a58:	movzx  edx,WORD PTR [eax+0xe]
  426a5c:	movzx  edi,WORD PTR [eax+0xc]
  426a60:	inc    DWORD PTR [ebp-0x10]
  426a63:	add    ecx,0x8
  426a66:	add    edx,edi
  426a68:	mov    DWORD PTR [ebp-0x18],ecx
  426a6b:	cmp    DWORD PTR [ebp-0x10],edx
  426a6e:	jb     0x4269d5
  426a74:	pop    edi
  426a75:	pop    ebx
  426a76:	xor    eax,eax
  426a78:	inc    eax
  426a79:	jmp    0x426a7d
  426a7b:	xor    eax,eax
  426a7d:	pop    esi
  426a7e:	leave  
  426a7f:	ret    
  426a80:	push   ebp
  426a81:	mov    ebp,esp
  426a83:	mov    ecx,DWORD PTR [ecx+0x190]
  426a89:	mov    eax,DWORD PTR [ebp+0xc]
  426a8c:	sub    esp,0x10
  426a8f:	push   ebx
  426a90:	xor    ebx,ebx
  426a92:	push   esi
  426a93:	push   edi
  426a94:	cmp    DWORD PTR [ecx],ebx
  426a96:	je     0x426b1e
  426a9c:	cmp    eax,ebx
  426a9e:	je     0x426b1e
  426aa0:	cmp    DWORD PTR [eax+0x78],ebx
  426aa3:	jne    0x426aaa
  426aa5:	xor    eax,eax
  426aa7:	inc    eax
  426aa8:	jmp    0x426b20
  426aaa:	mov    eax,DWORD PTR [eax+0x78]
  426aad:	add    eax,DWORD PTR [ebp+0x8]
  426ab0:	mov    ecx,DWORD PTR [eax+0x1c]
  426ab3:	mov    edx,DWORD PTR [eax+0x24]
  426ab6:	mov    esi,DWORD PTR [eax+0x14]
  426ab9:	mov    edi,DWORD PTR [eax+0x18]
  426abc:	add    ecx,DWORD PTR [ebp+0x8]
  426abf:	add    edx,DWORD PTR [ebp+0x8]
  426ac2:	mov    DWORD PTR [ebp-0x4],esi
  426ac5:	cmp    esi,edi
  426ac7:	ja     0x426acc
  426ac9:	mov    DWORD PTR [ebp-0x4],edi
  426acc:	mov    DWORD PTR [ebp-0x8],ebx
  426acf:	cmp    DWORD PTR [ebp-0x4],ebx
  426ad2:	jbe    0x426aa5
  426ad4:	cmp    ebx,DWORD PTR [eax+0x14]
  426ad7:	jae    0x426adf
  426ad9:	movzx  esi,WORD PTR [edx+ebx*2]
  426add:	jmp    0x426ae1
  426adf:	mov    esi,ebx
  426ae1:	lea    esi,[ecx+esi*4]
  426ae4:	mov    edi,DWORD PTR [esi]
  426ae6:	test   edi,edi
  426ae8:	je     0x426b13
  426aea:	add    edi,DWORD PTR [ebp+0x8]
  426aed:	mov    DWORD PTR [ebp-0x10],edi
  426af0:	cmp    edi,eax
  426af2:	jbe    0x426b04
  426af4:	mov    ebx,DWORD PTR [ebp+0xc]
  426af7:	mov    ebx,DWORD PTR [ebx+0x7c]
  426afa:	add    ebx,eax
  426afc:	cmp    edi,ebx
  426afe:	jae    0x426b04
  426b00:	mov    esi,DWORD PTR [esi]
  426b02:	jmp    0x426b0c
  426b04:	sub    edi,DWORD PTR [ebp+0x8]
  426b07:	mov    DWORD PTR [esi],edi
  426b09:	mov    esi,DWORD PTR [ebp-0x10]
  426b0c:	test   esi,esi
  426b0e:	je     0x426b1e
  426b10:	mov    ebx,DWORD PTR [ebp-0x8]
  426b13:	inc    ebx
  426b14:	mov    DWORD PTR [ebp-0x8],ebx
  426b17:	cmp    ebx,DWORD PTR [ebp-0x4]
  426b1a:	jb     0x426ad4
  426b1c:	jmp    0x426aa5
  426b1e:	xor    eax,eax
  426b20:	pop    edi
  426b21:	pop    esi
  426b22:	pop    ebx
  426b23:	leave  
  426b24:	ret    0x8
  426b27:	push   ebp
  426b28:	mov    ebp,esp
  426b2a:	sub    esp,0x2c
  426b2d:	mov    edx,0xf89c85b9
  426b32:	mov    DWORD PTR [ebp-0x4],edx
  426b35:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426b3c:	mov    eax,DWORD PTR [ebp-0x4]
  426b3f:	mov    ecx,DWORD PTR [ebp-0x4]
  426b42:	mov    ecx,DWORD PTR [ebp-0x4]
  426b45:	mov    ecx,DWORD PTR [ebp-0x4]
  426b48:	mov    ecx,DWORD PTR [ebp-0x4]
  426b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  426b4e:	push   ebx
  426b4f:	mov    ebx,DWORD PTR [ebp+0x10]
  426b52:	push   esi
  426b53:	mov    esi,0x75108a8
  426b58:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426b5f:	mov    ecx,DWORD PTR [ebp-0x4]
  426b62:	mov    ebx,DWORD PTR [ebx+0x190]
  426b68:	push   edi
  426b69:	mov    edi,0x3272ef
  426b6e:	xor    ecx,esi
  426b70:	xor    eax,esi
  426b72:	add    eax,edi
  426b74:	add    ecx,edi
  426b76:	mov    DWORD PTR [ebp-0x18],eax
  426b79:	cmp    ecx,DWORD PTR [ebx]
  426b7b:	je     0x426dfc
  426b81:	mov    ebx,DWORD PTR [ebp-0x4]
  426b84:	mov    ecx,DWORD PTR [ebp+0xc]
  426b87:	xor    ebx,esi
  426b89:	add    ebx,edi
  426b8b:	cmp    ebx,ecx
  426b8d:	je     0x426dfc
  426b93:	mov    ebx,DWORD PTR [ebp-0x4]
  426b96:	mov    ecx,DWORD PTR [ecx+0x80]
  426b9c:	xor    ebx,esi
  426b9e:	add    ebx,edi
  426ba0:	cmp    ecx,ebx
  426ba2:	je     0x426df7
  426ba8:	add    ecx,DWORD PTR [ebp+0x8]
  426bab:	mov    DWORD PTR [ebp-0x2c],ecx
  426bae:	mov    ebx,edx
  426bb0:	xor    ebx,esi
  426bb2:	add    ebx,edi
  426bb4:	mov    DWORD PTR [ebp-0x10],ebx
  426bb7:	mov    ebx,DWORD PTR [ebp-0x10]
  426bba:	cmp    ebx,edx
  426bbc:	je     0x426bd0
  426bbe:	mov    edx,DWORD PTR [ebp-0x10]
  426bc1:	mov    ebx,DWORD PTR [ebp-0x4]
  426bc4:	imul   edx,edx,0x14
  426bc7:	xor    ebx,esi
  426bc9:	add    ebx,edi
  426bcb:	cmp    DWORD PTR [edx+ecx*1],ebx
  426bce:	jne    0x426be7
  426bd0:	mov    edx,DWORD PTR [ebp-0x10]
  426bd3:	mov    ebx,DWORD PTR [ebp-0x4]
  426bd6:	imul   edx,edx,0x14
  426bd9:	xor    ebx,esi
  426bdb:	add    ebx,edi
  426bdd:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426be1:	je     0x426de9
  426be7:	mov    eax,DWORD PTR [ebp-0x4]
  426bea:	mov    ebx,DWORD PTR [ebp-0x4]
  426bed:	mov    eax,DWORD PTR [ebp-0x10]
  426bf0:	imul   eax,eax,0x14
  426bf3:	add    eax,ecx
  426bf5:	mov    ecx,DWORD PTR [eax+0x10]
  426bf8:	add    ecx,DWORD PTR [ebp+0x8]
  426bfb:	xor    ebx,esi
  426bfd:	mov    DWORD PTR [ebp-0x1c],ecx
  426c00:	mov    ecx,DWORD PTR [ebp-0x4]
  426c03:	mov    edx,DWORD PTR [ebp-0x4]
  426c06:	xor    ecx,esi
  426c08:	add    ecx,edi
  426c0a:	xor    edx,esi
  426c0c:	mov    DWORD PTR [ebp-0x24],ecx
  426c0f:	mov    ecx,DWORD PTR [eax]
  426c11:	add    edx,edi
  426c13:	add    ebx,edi
  426c15:	cmp    ecx,edx
  426c17:	je     0x426c1f
  426c19:	add    ecx,DWORD PTR [ebp+0x8]
  426c1c:	mov    DWORD PTR [ebp-0x24],ecx
  426c1f:	mov    ecx,DWORD PTR [ebp-0x4]
  426c22:	xor    ecx,esi
  426c24:	add    ecx,DWORD PTR [eax+0xc]
  426c27:	mov    eax,DWORD PTR [ebp+0x8]
  426c2a:	lea    eax,[ecx+eax*1+0x3272ef]
  426c31:	mov    DWORD PTR [ebp+0xc],eax
  426c34:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426c3b:	mov    eax,DWORD PTR [ebp+0x10]
  426c3e:	push   DWORD PTR [ebp+0xc]
  426c41:	mov    eax,DWORD PTR [eax+0x1e0]
  426c47:	call   DWORD PTR [eax]
  426c49:	mov    ecx,DWORD PTR [ebp-0x4]
  426c4c:	xor    ecx,esi
  426c4e:	add    ecx,edi
  426c50:	mov    DWORD PTR [ebp-0xc],eax
  426c53:	cmp    ecx,eax
  426c55:	jne    0x426c69
  426c57:	mov    eax,DWORD PTR [ebp+0x10]
  426c5a:	push   DWORD PTR [ebp+0xc]
  426c5d:	mov    eax,DWORD PTR [eax+0x1e0]
  426c63:	call   DWORD PTR [eax+0xc]
  426c66:	mov    DWORD PTR [ebp-0xc],eax
  426c69:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426c70:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426c77:	mov    eax,DWORD PTR [ebp-0x4]
  426c7a:	xor    eax,esi
  426c7c:	add    eax,edi
  426c7e:	cmp    eax,DWORD PTR [ebp-0xc]
  426c81:	jne    0x426ca6
  426c83:	mov    eax,DWORD PTR [ebp-0x8]
  426c86:	mov    ecx,DWORD PTR [ebp-0x20]
  426c89:	xor    eax,esi
  426c8b:	xor    ecx,esi
  426c8d:	lea    ebx,[ebx+eax*1+0x3272ef]
  426c94:	mov    eax,DWORD PTR [ebp+0x10]
  426c97:	mov    eax,DWORD PTR [eax+0x1e0]
  426c9d:	add    ecx,edi
  426c9f:	imul   ecx,ebx
  426ca2:	push   ecx
  426ca3:	call   DWORD PTR [eax+0x24]
  426ca6:	mov    eax,DWORD PTR [ebp-0x4]
  426ca9:	xor    eax,esi
  426cab:	add    eax,edi
  426cad:	cmp    eax,DWORD PTR [ebp-0xc]
  426cb0:	jne    0x426cc1
  426cb2:	mov    eax,DWORD PTR [ebp-0x28]
  426cb5:	xor    eax,esi
  426cb7:	add    eax,edi
  426cb9:	cmp    ebx,eax
  426cbb:	jbe    0x426c3b
  426cc1:	mov    eax,DWORD PTR [ebp-0x4]
  426cc4:	xor    eax,esi
  426cc6:	add    eax,edi
  426cc8:	cmp    eax,DWORD PTR [ebp-0xc]
  426ccb:	jne    0x426ce4
  426ccd:	mov    eax,DWORD PTR [ebp-0x8]
  426cd0:	mov    ecx,DWORD PTR [ebp-0x18]
  426cd3:	xor    eax,esi
  426cd5:	lea    eax,[ecx+eax*1+0x3272ef]
  426cdc:	mov    DWORD PTR [ebp-0x18],eax
  426cdf:	jmp    0x426dd3
  426ce4:	mov    DWORD PTR [ebp-0x14],0x1121b21
  426ceb:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  426cf2:	mov    ebx,DWORD PTR [ebp-0x4]
  426cf5:	xor    ebx,esi
  426cf7:	add    ebx,edi
  426cf9:	jmp    0x426dc0
  426cfe:	mov    eax,DWORD PTR [ebp-0x4]
  426d01:	xor    eax,esi
  426d03:	add    eax,edi
  426d05:	mov    DWORD PTR [ebp-0x14],eax
  426d08:	mov    eax,DWORD PTR [ebp-0x4]
  426d0b:	xor    eax,esi
  426d0d:	add    eax,edi
  426d0f:	mov    DWORD PTR [ebp+0xc],eax
  426d12:	mov    ecx,DWORD PTR [ebp-0x4]
  426d15:	mov    eax,DWORD PTR [ebp-0x24]
  426d18:	xor    ecx,esi
  426d1a:	add    ecx,edi
  426d1c:	cmp    ecx,eax
  426d1e:	je     0x426d26
  426d20:	mov    eax,DWORD PTR [eax+ebx*4]
  426d23:	mov    DWORD PTR [ebp-0x14],eax
  426d26:	mov    eax,DWORD PTR [ebp-0x1c]
  426d29:	mov    eax,DWORD PTR [eax+ebx*4]
  426d2c:	mov    DWORD PTR [ebp+0xc],eax
  426d2f:	mov    eax,DWORD PTR [ebp-0x4]
  426d32:	mov    ecx,DWORD PTR [ebp-0x14]
  426d35:	xor    eax,esi
  426d37:	add    eax,edi
  426d39:	cmp    eax,ecx
  426d3b:	je     0x426d66
  426d3d:	mov    eax,DWORD PTR [ebp-0x4]
  426d40:	mov    ecx,DWORD PTR [ebp-0x14]
  426d43:	xor    eax,esi
  426d45:	add    eax,edi
  426d47:	shr    ecx,0x1f
  426d4a:	cmp    eax,ecx
  426d4c:	je     0x426d66
  426d4e:	mov    ecx,DWORD PTR [ebp-0x14]
  426d51:	mov    eax,DWORD PTR [ebp+0x10]
  426d54:	mov    eax,DWORD PTR [eax+0x1e0]
  426d5a:	movzx  ecx,cx
  426d5d:	push   ecx
  426d5e:	push   DWORD PTR [ebp-0xc]
  426d61:	call   DWORD PTR [eax+0x8]
  426d64:	jmp    0x426d7f
  426d66:	mov    eax,DWORD PTR [ebp+0xc]
  426d69:	add    eax,DWORD PTR [ebp+0x8]
  426d6c:	mov    ecx,DWORD PTR [ebp+0x10]
  426d6f:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426d75:	add    eax,0x2
  426d78:	push   eax
  426d79:	push   DWORD PTR [ebp-0xc]
  426d7c:	call   DWORD PTR [ecx+0x8]
  426d7f:	mov    DWORD PTR [ebp+0xc],eax
  426d82:	mov    eax,DWORD PTR [ebp-0x4]
  426d85:	mov    ecx,DWORD PTR [ebp+0xc]
  426d88:	xor    eax,esi
  426d8a:	add    eax,edi
  426d8c:	cmp    eax,ecx
  426d8e:	mov    eax,DWORD PTR [ebp-0x8]
  426d91:	jne    0x426da4
  426d93:	mov    ecx,DWORD PTR [ebp-0x18]
  426d96:	xor    eax,esi
  426d98:	lea    eax,[ecx+eax*1+0x3272ef]
  426d9f:	mov    DWORD PTR [ebp-0x18],eax
  426da2:	jmp    0x426db4
  426da4:	mov    ecx,DWORD PTR [ebp+0xc]
  426da7:	xor    eax,esi
  426da9:	add    eax,edi
  426dab:	imul   eax,ecx
  426dae:	mov    ecx,DWORD PTR [ebp-0x1c]
  426db1:	mov    DWORD PTR [ecx+ebx*4],eax
  426db4:	mov    eax,DWORD PTR [ebp-0x8]
  426db7:	xor    eax,esi
  426db9:	lea    ebx,[ebx+eax*1+0x3272ef]
  426dc0:	mov    eax,DWORD PTR [ebp-0x4]
  426dc3:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dc6:	xor    eax,esi
  426dc8:	add    eax,edi
  426dca:	cmp    DWORD PTR [ecx+ebx*4],eax
  426dcd:	jne    0x426cfe
  426dd3:	mov    edx,DWORD PTR [ebp-0x10]
  426dd6:	mov    ecx,DWORD PTR [ebp-0x2c]
  426dd9:	mov    eax,DWORD PTR [ebp-0x18]
  426ddc:	sub    edx,0x3272ee
  426de2:	xor    edx,esi
  426de4:	jmp    0x426bae
  426de9:	mov    ecx,DWORD PTR [ebp-0x4]
  426dec:	xor    ecx,esi
  426dee:	add    ecx,edi
  426df0:	cmp    eax,ecx
  426df2:	mov    eax,DWORD PTR [ebp-0x4]
  426df5:	jne    0x426dff
  426df7:	mov    eax,DWORD PTR [ebp-0x8]
  426dfa:	jmp    0x426dff
  426dfc:	mov    eax,DWORD PTR [ebp-0x4]
  426dff:	xor    eax,esi
  426e01:	add    eax,edi
  426e03:	pop    edi
  426e04:	pop    esi
  426e05:	pop    ebx
  426e06:	leave  
  426e07:	ret    0xc
  426e0a:	push   ebp
  426e0b:	mov    ebp,esp
  426e0d:	sub    esp,0x28
  426e10:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426e17:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  426e1e:	mov    eax,DWORD PTR [ebp+0xc]
  426e21:	mov    DWORD PTR [ebp+0xc],eax
  426e24:	push   esi
  426e25:	mov    eax,eax
  426e27:	mov    eax,DWORD PTR [ebp-0x4]
  426e2a:	mov    esi,DWORD PTR [ebp+0x8]
  426e2d:	mov    ecx,0x75108a8
  426e32:	xor    eax,ecx
  426e34:	mov    edx,0x3272ef
  426e39:	add    eax,edx
  426e3b:	cmp    esi,eax
  426e3d:	je     0x426f64
  426e43:	mov    eax,DWORD PTR [ebp+0x8]
  426e46:	mov    esi,DWORD PTR [ebp+0x8]
  426e49:	add    esi,DWORD PTR [eax+0x3c]
  426e4c:	push   edi
  426e4d:	mov    DWORD PTR [ebp+0xc],esi
  426e50:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426e57:	mov    eax,DWORD PTR [ebp-0x1c]
  426e5a:	mov    esi,DWORD PTR [ebp-0x4]
  426e5d:	mov    edi,DWORD PTR [ebp+0xc]
  426e60:	xor    esi,ecx
  426e62:	xor    eax,ecx
  426e64:	add    esi,edx
  426e66:	cmp    DWORD PTR [edi+eax*8+0x19397f0],esi
  426e6d:	je     0x426f5e
  426e73:	mov    esi,DWORD PTR [ebp+0xc]
  426e76:	mov    eax,DWORD PTR [ebp+0x8]
  426e79:	add    eax,DWORD PTR [esi+0xa0]
  426e7f:	mov    esi,DWORD PTR [ebp+0x8]
  426e82:	mov    edi,DWORD PTR [ebp+0xc]
  426e85:	sub    esi,DWORD PTR [edi+0x34]
  426e88:	mov    edi,DWORD PTR [ebp-0x4]
  426e8b:	xor    edi,ecx
  426e8d:	add    edi,edx
  426e8f:	mov    DWORD PTR [ebp-0x24],esi
  426e92:	cmp    esi,edi
  426e94:	je     0x426f5e
  426e9a:	mov    esi,DWORD PTR [ebp-0x4]
  426e9d:	xor    esi,ecx
  426e9f:	add    esi,edx
  426ea1:	mov    DWORD PTR [ebp-0x8],esi
  426ea4:	push   ebx
  426ea5:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426eac:	jmp    0x426f48
  426eb1:	mov    esi,DWORD PTR [ebp-0x4]
  426eb4:	xor    esi,ecx
  426eb6:	lea    edi,[ebx-0x8]
  426eb9:	add    esi,edx
  426ebb:	shr    edi,1
  426ebd:	cmp    esi,edi
  426ebf:	jae    0x426f2e
  426ec1:	sub    edi,esi
  426ec3:	lea    ebx,[eax+esi*2+0x8]
  426ec7:	mov    DWORD PTR [ebp-0x18],edi
  426eca:	movzx  esi,WORD PTR [ebx]
  426ecd:	and    esi,0xfff
  426ed3:	mov    DWORD PTR [ebp-0x14],esi
  426ed6:	mov    edi,DWORD PTR [ebp-0x14]
  426ed9:	mov    esi,DWORD PTR [eax]
  426edb:	sub    esi,edx
  426edd:	add    edi,esi
  426edf:	movzx  esi,WORD PTR [ebx]
  426ee2:	shr    esi,0xc
  426ee5:	xor    edi,ecx
  426ee7:	mov    DWORD PTR [ebp-0x20],edi
  426eea:	mov    DWORD PTR [ebp-0x14],esi
  426eed:	mov    esi,DWORD PTR [ebp-0x20]
  426ef0:	mov    edi,DWORD PTR [ebp+0x8]
  426ef3:	xor    esi,ecx
  426ef5:	lea    esi,[esi+edi*1+0x3272ef]
  426efc:	mov    DWORD PTR [ebp-0x20],esi
  426eff:	mov    esi,DWORD PTR [ebp-0x10]
  426f02:	mov    edi,DWORD PTR [ebp-0x14]
  426f05:	xor    esi,ecx
  426f07:	add    esi,edx
  426f09:	cmp    edi,esi
  426f0b:	jne    0x426f23
  426f0d:	mov    esi,DWORD PTR [ebp-0x10]
  426f10:	mov    edi,DWORD PTR [ebp-0x14]
  426f13:	xor    esi,ecx
  426f15:	add    esi,edx
  426f17:	cmp    edi,esi
  426f19:	jne    0x426f23
  426f1b:	mov    esi,DWORD PTR [ebp-0x20]
  426f1e:	mov    edi,DWORD PTR [ebp-0x24]
  426f21:	add    DWORD PTR [esi],edi
  426f23:	add    ebx,0x2
  426f26:	dec    DWORD PTR [ebp-0x18]
  426f29:	jne    0x426eca
  426f2b:	mov    ebx,DWORD PTR [ebp-0xc]
  426f2e:	add    DWORD PTR [ebp-0x8],ebx
  426f31:	mov    esi,DWORD PTR [ebp-0x1c]
  426f34:	mov    edi,DWORD PTR [ebp-0x8]
  426f37:	mov    ebx,DWORD PTR [ebp+0xc]
  426f3a:	xor    esi,ecx
  426f3c:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397f4]
  426f43:	jae    0x426f5d
  426f45:	add    eax,DWORD PTR [ebp-0xc]
  426f48:	mov    esi,DWORD PTR [ebp-0x4]
  426f4b:	mov    ebx,DWORD PTR [eax+0x4]
  426f4e:	xor    esi,ecx
  426f50:	add    esi,edx
  426f52:	mov    DWORD PTR [ebp-0xc],ebx
  426f55:	cmp    ebx,esi
  426f57:	jne    0x426eb1
  426f5d:	pop    ebx
  426f5e:	mov    eax,DWORD PTR [ebp-0x28]
  426f61:	pop    edi
  426f62:	jmp    0x426f67
  426f64:	mov    eax,DWORD PTR [ebp-0x4]
  426f67:	xor    eax,ecx
  426f69:	add    eax,edx
  426f6b:	pop    esi
  426f6c:	leave  
  426f6d:	ret    0x8
  426f70:	push   ebp
  426f71:	mov    ebp,esp
  426f73:	sub    esp,0xd8
  426f79:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426f80:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  426f87:	mov    eax,DWORD PTR [ebp-0x4]
  426f8a:	push   ebx
  426f8b:	push   esi
  426f8c:	mov    esi,0x75108a8
  426f91:	xor    eax,esi
  426f93:	push   edi
  426f94:	mov    edi,0x3272ef
  426f99:	add    eax,edi
  426f9b:	mov    DWORD PTR [ebp-0x18],eax
  426f9e:	mov    eax,DWORD PTR [ebp-0x4]
  426fa1:	xor    eax,esi
  426fa3:	add    eax,edi
  426fa5:	mov    DWORD PTR [ebp-0x8],eax
  426fa8:	mov    ebx,DWORD PTR [ebp+0x20]
  426fab:	mov    eax,DWORD PTR [ebp-0x1c]
  426fae:	mov    ecx,DWORD PTR [ebp-0x1c]
  426fb1:	xor    eax,ecx
  426fb3:	mov    DWORD PTR [ebp-0x1c],eax
  426fb6:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  426fbd:	mov    eax,DWORD PTR [ebp-0xc]
  426fc0:	mov    ecx,DWORD PTR [ebp-0xc]
  426fc3:	xor    eax,ecx
  426fc5:	mov    DWORD PTR [ebp-0xc],eax
  426fc8:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426fcf:	mov    eax,DWORD PTR [ebp-0x10]
  426fd2:	mov    ecx,DWORD PTR [ebp-0x10]
  426fd5:	xor    eax,ecx
  426fd7:	mov    DWORD PTR [ebp-0x10],eax
  426fda:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426fe1:	mov    eax,DWORD PTR [ebp-0x28]
  426fe4:	mov    ecx,DWORD PTR [ebp-0x28]
  426fe7:	xor    eax,ecx
  426fe9:	mov    DWORD PTR [ebp-0x28],eax
  426fec:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  426ff3:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  426ffa:	mov    eax,DWORD PTR [ebp+0x8]
  426ffd:	test   eax,eax
  426fff:	je     0x427488
  427005:	mov    eax,DWORD PTR [ebp+0xc]
  427008:	test   eax,eax
  42700a:	je     0x427488
  427010:	mov    eax,DWORD PTR [ebp+0x18]
  427013:	test   eax,eax
  427015:	je     0x427488
  42701b:	mov    eax,DWORD PTR [ebp+0x20]
  42701e:	mov    ecx,DWORD PTR [ebp+0x8]
  427021:	xor    eax,0x8a8
  427026:	add    eax,0x72ef
  42702b:	cmp    WORD PTR [ecx],ax
  42702e:	jne    0x427488
  427034:	mov    eax,DWORD PTR [ebp-0x4]
  427037:	xor    eax,esi
  427039:	add    eax,edi
  42703b:	mov    DWORD PTR [ebp-0x30],eax
  42703e:	mov    eax,DWORD PTR [ebp-0x4]
  427041:	mov    ecx,DWORD PTR [ebp+0x8]
  427044:	mov    eax,DWORD PTR [ebp+0x8]
  427047:	add    eax,DWORD PTR [ecx+0x3c]
  42704a:	mov    DWORD PTR [ebp+0xc],eax
  42704d:	mov    eax,DWORD PTR [eax+0x50]
  427050:	test   eax,eax
  427052:	je     0x427488
  427058:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  42705f:	mov    eax,DWORD PTR [ebp-0x2c]
  427062:	xor    eax,esi
  427064:	add    eax,edi
  427066:	mov    DWORD PTR [ebp-0x2c],eax
  427069:	mov    eax,DWORD PTR [ebp-0x4]
  42706c:	mov    eax,DWORD PTR [ebx+0x190]
  427072:	mov    ecx,DWORD PTR [eax]
  427074:	mov    ecx,DWORD PTR [ecx+0x3c]
  427077:	add    ecx,DWORD PTR [eax]
  427079:	mov    eax,DWORD PTR [ebp-0x4]
  42707c:	mov    eax,DWORD PTR [ebx+0x18c]
  427082:	mov    edx,DWORD PTR [eax]
  427084:	mov    DWORD PTR [ebp-0x20],ecx
  427087:	mov    DWORD PTR [ebp+0x20],edx
  42708a:	cmp    edx,edx
  42708c:	jne    0x4270c0
  42708e:	mov    eax,DWORD PTR [ebx+0x1e0]
  427094:	lea    edx,[ebp-0x18]
  427097:	push   edx
  427098:	mov    edx,DWORD PTR [ebp-0xc]
  42709b:	xor    edx,esi
  42709d:	add    edx,edi
  42709f:	push   edx
  4270a0:	push   DWORD PTR [ecx+0x50]
  4270a3:	push   DWORD PTR [ebp+0x20]
  4270a6:	call   DWORD PTR [eax+0x1c]
  4270a9:	mov    eax,DWORD PTR [ebp-0x20]
  4270ac:	mov    ecx,DWORD PTR [eax+0x54]
  4270af:	mov    eax,DWORD PTR [eax+0x50]
  4270b2:	sub    eax,ecx
  4270b4:	add    ecx,DWORD PTR [ebp+0x20]
  4270b7:	push   ecx
  4270b8:	call   0x427a23
  4270bd:	mov    edx,DWORD PTR [ebp+0x20]
  4270c0:	mov    eax,DWORD PTR [ebx+0x194]
  4270c6:	mov    DWORD PTR [eax],edx
  4270c8:	mov    eax,DWORD PTR [ebp+0xc]
  4270cb:	push   DWORD PTR [eax+0x54]
  4270ce:	push   DWORD PTR [ebp+0x8]
  4270d1:	push   edx
  4270d2:	call   0x427919
  4270d7:	mov    ecx,DWORD PTR [ebp+0x20]
  4270da:	mov    eax,DWORD PTR [ecx+0x3c]
  4270dd:	add    eax,ecx
  4270df:	movzx  ecx,WORD PTR [eax+0x14]
  4270e3:	lea    ecx,[ecx+eax*1+0x18]
  4270e7:	mov    DWORD PTR [ebp+0x18],ecx
  4270ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4270ed:	movzx  edx,WORD PTR [eax+0x6]
  4270f1:	xor    ecx,esi
  4270f3:	add    ecx,edi
  4270f5:	mov    DWORD PTR [ebp+0xc],eax
  4270f8:	cmp    edx,ecx
  4270fa:	je     0x4271a7
  427100:	mov    ecx,DWORD PTR [ebp-0x4]
  427103:	xor    ecx,esi
  427105:	add    ecx,edi
  427107:	mov    DWORD PTR [ebp-0x8],ecx
  42710a:	mov    ecx,DWORD PTR [ebp-0x24]
  42710d:	movzx  edx,WORD PTR [eax+0x6]
  427111:	xor    ecx,esi
  427113:	sub    edx,ecx
  427115:	sub    edx,edi
  427117:	cmp    DWORD PTR [ebp-0x8],edx
  42711a:	ja     0x4271a7
  427120:	mov    edx,DWORD PTR [ebp+0x18]
  427123:	add    edx,0x8
  427126:	mov    DWORD PTR [ebp+0x18],edx
  427129:	jmp    0x42712e
  42712b:	mov    edx,DWORD PTR [ebp+0x18]
  42712e:	mov    eax,DWORD PTR [eax+0x38]
  427131:	lea    ecx,[eax-0x1]
  427134:	mov    DWORD PTR [ebp-0x38],eax
  427137:	mov    eax,DWORD PTR [edx]
  427139:	test   eax,ecx
  42713b:	je     0x427144
  42713d:	not    ecx
  42713f:	and    eax,ecx
  427141:	add    eax,DWORD PTR [ebp-0x38]
  427144:	mov    ecx,DWORD PTR [edx+0x4]
  427147:	add    ecx,DWORD PTR [ebp+0x20]
  42714a:	push   ecx
  42714b:	call   0x427a23
  427150:	mov    edx,DWORD PTR [ebp-0x4]
  427153:	mov    eax,DWORD PTR [ebp+0x18]
  427156:	mov    ecx,DWORD PTR [eax+0x8]
  427159:	xor    edx,esi
  42715b:	add    edx,edi
  42715d:	cmp    ecx,edx
  42715f:	je     0x427178
  427161:	push   ecx
  427162:	mov    ecx,DWORD PTR [ebp+0x8]
  427165:	add    ecx,DWORD PTR [eax+0xc]
  427168:	mov    eax,DWORD PTR [eax+0x4]
  42716b:	add    eax,DWORD PTR [ebp+0x20]
  42716e:	push   ecx
  42716f:	push   eax
  427170:	call   0x427919
  427175:	mov    eax,DWORD PTR [ebp+0x18]
  427178:	mov    ecx,DWORD PTR [ebp-0x24]
  42717b:	mov    edx,DWORD PTR [ebp-0x8]
  42717e:	add    eax,0x28
  427181:	xor    ecx,esi
  427183:	lea    ecx,[edx+ecx*1+0x3272ef]
  42718a:	mov    edx,DWORD PTR [ebp+0xc]
  42718d:	mov    DWORD PTR [ebp+0x18],eax
  427190:	mov    eax,DWORD PTR [ebp-0x24]
  427193:	movzx  edx,WORD PTR [edx+0x6]
  427197:	xor    eax,esi
  427199:	sub    edx,eax
  42719b:	mov    eax,DWORD PTR [ebp+0xc]
  42719e:	sub    edx,edi
  4271a0:	mov    DWORD PTR [ebp-0x8],ecx
  4271a3:	cmp    ecx,edx
  4271a5:	jbe    0x42712b
  4271a7:	mov    edx,DWORD PTR [ebx+0x18c]
  4271ad:	mov    ecx,DWORD PTR [ebp+0x20]
  4271b0:	cmp    ecx,DWORD PTR [edx]
  4271b2:	jne    0x4271db
  4271b4:	mov    eax,DWORD PTR [ebx+0x1e0]
  4271ba:	lea    edx,[ebp-0x18]
  4271bd:	push   edx
  4271be:	mov    edx,DWORD PTR [ebp-0x10]
  4271c1:	xor    edx,esi
  4271c3:	add    edx,edi
  4271c5:	push   edx
  4271c6:	mov    edx,DWORD PTR [ebp-0x20]
  4271c9:	push   DWORD PTR [edx+0x54]
  4271cc:	push   ecx
  4271cd:	call   DWORD PTR [eax+0x1c]
  4271d0:	test   eax,eax
  4271d2:	je     0x427479
  4271d8:	mov    eax,DWORD PTR [ebp+0xc]
  4271db:	mov    ecx,DWORD PTR [ebx+0x1c8]
  4271e1:	mov    ecx,DWORD PTR [ecx]
  4271e3:	xor    ecx,esi
  4271e5:	add    ecx,edi
  4271e7:	je     0x4273a4
  4271ed:	mov    eax,DWORD PTR [ebp-0x4]
  4271f0:	xor    eax,esi
  4271f2:	add    eax,edi
  4271f4:	and    DWORD PTR [ebp+0x8],0x0
  4271f8:	mov    DWORD PTR [ebp-0x14],eax
  4271fb:	mov    eax,0xf89c85dd
  427200:	lea    ecx,[eax-0x8]
  427203:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  42720a:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  427211:	mov    DWORD PTR [ebp-0x50],eax
  427214:	mov    DWORD PTR [ebp-0x4c],ecx
  427217:	mov    DWORD PTR [ebp-0x48],ecx
  42721a:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  427221:	mov    edx,DWORD PTR [ebp+0x8]
  427224:	mov    ecx,0x8a8
  427229:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  42722e:	mov    edx,0x72ef
  427233:	add    cx,dx
  427236:	mov    edx,DWORD PTR [ebp+0x8]
  427239:	inc    DWORD PTR [ebp+0x8]
  42723c:	cmp    DWORD PTR [ebp+0x8],0x6
  427240:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427248:	jb     0x427221
  42724a:	mov    ecx,0xf89c852b
  42724f:	mov    DWORD PTR [ebp-0xb0],eax
  427255:	mov    DWORD PTR [ebp-0x9c],eax
  42725b:	mov    DWORD PTR [ebp-0x74],eax
  42725e:	mov    DWORD PTR [ebp-0x70],eax
  427261:	lea    eax,[ecx+0x1]
  427264:	mov    edx,0xf89c85ff
  427269:	mov    DWORD PTR [ebp-0x64],eax
  42726c:	mov    DWORD PTR [ebp-0x60],eax
  42726f:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  427279:	mov    DWORD PTR [ebp-0xac],ecx
  42727f:	mov    DWORD PTR [ebp-0xa8],edx
  427285:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  42728f:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427299:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  4272a3:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  4272ad:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  4272b7:	mov    DWORD PTR [ebp-0x8c],ecx
  4272bd:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  4272c7:	mov    DWORD PTR [ebp-0x84],edx
  4272cd:	mov    DWORD PTR [ebp-0x80],0xf89c8528
  4272d4:	mov    DWORD PTR [ebp-0x7c],ecx
  4272d7:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  4272de:	mov    DWORD PTR [ebp-0x6c],ecx
  4272e1:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4272e8:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  4272ef:	xor    eax,eax
  4272f1:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4272f8:	xor    cl,0xa8
  4272fb:	sub    cl,0x11
  4272fe:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427305:	inc    eax
  427306:	cmp    eax,0x17
  427309:	jb     0x4272f1
  42730b:	mov    eax,DWORD PTR [ebx+0x1e0]
  427311:	lea    ecx,[ebp-0xc0]
  427317:	push   ecx
  427318:	call   DWORD PTR [eax+0x4]
  42731b:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427321:	lea    edx,[ebp-0xd8]
  427327:	push   edx
  427328:	push   eax
  427329:	call   DWORD PTR [ecx+0x8]
  42732c:	mov    DWORD PTR [ebp-0x40],eax
  42732f:	lea    eax,[ebp-0x14]
  427332:	push   eax
  427333:	mov    eax,DWORD PTR [ebx+0x18c]
  427339:	push   DWORD PTR [eax]
  42733b:	mov    eax,DWORD PTR [ebp-0x40]
  42733e:	call   eax
  427340:	mov    eax,DWORD PTR [ebp-0x4]
  427343:	xor    eax,esi
  427345:	add    eax,edi
  427347:	mov    DWORD PTR [ebp-0x34],eax
  42734a:	mov    ecx,DWORD PTR [ebp-0x4]
  42734d:	mov    eax,DWORD PTR [ebp-0x14]
  427350:	xor    ecx,esi
  427352:	add    ecx,edi
  427354:	cmp    eax,ecx
  427356:	je     0x4273a1
  427358:	mov    DWORD PTR [ebp-0x3c],eax
  42735b:	jmp    0x42736c
  42735d:	mov    eax,DWORD PTR [eax]
  42735f:	mov    ecx,DWORD PTR [ebp-0x3c]
  427362:	mov    DWORD PTR [ebp-0x14],eax
  427365:	mov    eax,DWORD PTR [ebp-0x14]
  427368:	cmp    eax,ecx
  42736a:	je     0x427379
  42736c:	mov    edx,DWORD PTR [eax+0x18]
  42736f:	mov    ecx,DWORD PTR [ebx+0x18c]
  427375:	cmp    edx,DWORD PTR [ecx]
  427377:	jne    0x42735d
  427379:	mov    ecx,DWORD PTR [ebx+0x18c]
  42737f:	mov    edx,DWORD PTR [eax+0x18]
  427382:	cmp    edx,DWORD PTR [ecx]
  427384:	jne    0x4273a1
  427386:	mov    ecx,DWORD PTR [ebx+0x190]
  42738c:	mov    edx,DWORD PTR [ebp-0x20]
  42738f:	mov    edx,DWORD PTR [edx+0x28]
  427392:	add    edx,DWORD PTR [ecx]
  427394:	mov    DWORD PTR [eax+0x1c],edx
  427397:	mov    eax,DWORD PTR [ebp-0x24]
  42739a:	xor    eax,esi
  42739c:	add    eax,edi
  42739e:	mov    DWORD PTR [ebp-0x34],eax
  4273a1:	mov    eax,DWORD PTR [ebp+0xc]
  4273a4:	push   ebx
  4273a5:	push   eax
  4273a6:	push   DWORD PTR [ebp+0x20]
  4273a9:	call   0x426b27
  4273ae:	test   eax,eax
  4273b0:	je     0x427479
  4273b6:	push   DWORD PTR [ebp+0xc]
  4273b9:	mov    ecx,ebx
  4273bb:	push   DWORD PTR [ebp+0x20]
  4273be:	call   0x426a80
  4273c3:	test   eax,eax
  4273c5:	je     0x427479
  4273cb:	mov    eax,DWORD PTR [ebp+0xc]
  4273ce:	mov    edx,DWORD PTR [ebp+0x20]
  4273d1:	mov    ecx,ebx
  4273d3:	call   0x426959
  4273d8:	test   eax,eax
  4273da:	je     0x427479
  4273e0:	push   ebx
  4273e1:	push   DWORD PTR [ebp+0x20]
  4273e4:	call   0x426e0a
  4273e9:	test   eax,eax
  4273eb:	je     0x427479
  4273f1:	mov    eax,DWORD PTR [ebx+0x18c]
  4273f7:	mov    edx,DWORD PTR [ebp+0x20]
  4273fa:	cmp    edx,DWORD PTR [eax]
  4273fc:	jne    0x427418
  4273fe:	mov    eax,DWORD PTR [ebx+0x1e0]
  427404:	lea    ecx,[ebp-0x18]
  427407:	push   ecx
  427408:	push   DWORD PTR [ebp-0x18]
  42740b:	mov    ecx,DWORD PTR [ebp-0x20]
  42740e:	push   DWORD PTR [ecx+0x54]
  427411:	push   edx
  427412:	call   DWORD PTR [eax+0x1c]
  427415:	mov    edx,DWORD PTR [ebp+0x20]
  427418:	mov    eax,DWORD PTR [ebx+0x1c8]
  42741e:	mov    eax,DWORD PTR [eax]
  427420:	xor    eax,esi
  427422:	add    eax,edi
  427424:	je     0x42745d
  427426:	mov    ecx,DWORD PTR [ebp+0xc]
  427429:	mov    eax,DWORD PTR [ecx+0x28]
  42742c:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  427433:	mov    esi,DWORD PTR [ebp+0x8]
  427436:	push   DWORD PTR [ebp+0x14]
  427439:	xor    esi,0x8a8
  42743f:	push   DWORD PTR [ebp+0x10]
  427442:	add    esi,0x72ef
  427448:	or     WORD PTR [ecx+0x16],si
  42744c:	add    eax,edx
  42744e:	push   edx
  42744f:	call   eax
  427451:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  42745b:	jmp    0x427467
  42745d:	mov    eax,DWORD PTR [ebp+0xc]
  427460:	mov    eax,DWORD PTR [eax+0x28]
  427463:	add    eax,edx
  427465:	call   eax
  427467:	mov    DWORD PTR [ebp-0x8],eax
  42746a:	mov    eax,DWORD PTR [ebp-0x8]
  42746d:	mov    ecx,DWORD PTR [ebp+0x1c]
  427470:	mov    DWORD PTR [ecx],eax
  427472:	mov    DWORD PTR [ebp-0x30],0x1
  427479:	cmp    DWORD PTR [ebp-0x30],0x0
  42747d:	jne    0x427483
  42747f:	and    DWORD PTR [ebp+0x20],0x0
  427483:	mov    eax,DWORD PTR [ebp+0x20]
  427486:	jmp    0x42748a
  427488:	xor    eax,eax
  42748a:	pop    edi
  42748b:	pop    esi
  42748c:	pop    ebx
  42748d:	leave  
  42748e:	ret    0x1c
  427491:	push   ebp
  427492:	mov    ebp,esp
  427494:	movzx  edx,WORD PTR [ecx+0x6]
  427498:	movzx  eax,WORD PTR [ecx+0x14]
  42749c:	push   ebx
  42749d:	push   edi
  42749e:	xor    edi,edi
  4274a0:	lea    eax,[eax+ecx*1+0x18]
  4274a4:	test   edx,edx
  4274a6:	je     0x4274c7
  4274a8:	mov    ecx,DWORD PTR [eax+0xc]
  4274ab:	lea    ebx,[ecx+esi*1]
  4274ae:	cmp    DWORD PTR [ebp+0x8],ebx
  4274b1:	jb     0x4274bf
  4274b3:	mov    ebx,DWORD PTR [eax+0x8]
  4274b6:	add    ebx,ecx
  4274b8:	add    ebx,esi
  4274ba:	cmp    DWORD PTR [ebp+0x8],ebx
  4274bd:	jb     0x4274c9
  4274bf:	add    eax,0x28
  4274c2:	inc    edi
  4274c3:	cmp    edi,edx
  4274c5:	jb     0x4274a8
  4274c7:	xor    eax,eax
  4274c9:	pop    edi
  4274ca:	pop    ebx
  4274cb:	pop    ebp
  4274cc:	ret    0x4
  4274cf:	push   ebp
  4274d0:	mov    ebp,esp
  4274d2:	sub    esp,0x34
  4274d5:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  4274dc:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  4274e3:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  4274ea:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  4274f1:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  4274f8:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  4274ff:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  427506:	mov    DWORD PTR [ebp-0x10],eax
  427509:	mov    eax,DWORD PTR [ebp+0x8]
  42750c:	mov    DWORD PTR [ebp-0x14],eax
  42750f:	mov    eax,DWORD PTR [ebp-0xc]
  427512:	push   ebx
  427513:	mov    ecx,0x75108a8
  427518:	xor    eax,ecx
  42751a:	push   esi
  42751b:	mov    esi,DWORD PTR [ebp-0x10]
  42751e:	mov    edx,0x3272ef
  427523:	add    eax,edx
  427525:	push   edi
  427526:	cmp    esi,eax
  427528:	je     0x427707
  42752e:	mov    eax,DWORD PTR [ebp-0xc]
  427531:	mov    esi,DWORD PTR [ebp-0x14]
  427534:	xor    eax,ecx
  427536:	add    eax,edx
  427538:	cmp    esi,eax
  42753a:	je     0x427707
  427540:	mov    eax,DWORD PTR [ebp-0xc]
  427543:	xor    eax,ecx
  427545:	add    eax,edx
  427547:	mov    DWORD PTR [ebp-0x24],eax
  42754a:	mov    eax,DWORD PTR [ebp-0xc]
  42754d:	xor    eax,ecx
  42754f:	add    eax,edx
  427551:	mov    DWORD PTR [ebp-0x28],eax
  427554:	mov    edi,DWORD PTR [ebp-0x20]
  427557:	mov    ebx,DWORD PTR [ebp-0x8]
  42755a:	mov    esi,0x8a8
  42755f:	xor    edi,esi
  427561:	mov    eax,0x72ef
  427566:	xor    ebx,esi
  427568:	add    edi,eax
  42756a:	add    ebx,eax
  42756c:	sub    ebx,edi
  42756e:	mov    WORD PTR [ebp-0x8],bx
  427572:	jmp    0x427637
  427577:	mov    edi,DWORD PTR [ebp-0xc]
  42757a:	mov    bx,WORD PTR [ebp-0x4]
  42757e:	xor    edi,esi
  427580:	add    edi,eax
  427582:	cmp    bx,di
  427585:	je     0x427679
  42758b:	mov    edi,DWORD PTR [ebp-0xc]
  42758e:	mov    ebx,DWORD PTR [ebp+0xc]
  427591:	xor    edi,ecx
  427593:	add    edi,edx
  427595:	cmp    ebx,edi
  427597:	mov    di,WORD PTR [ebp-0x4]
  42759b:	mov    bx,WORD PTR [ebp+0x8]
  42759f:	je     0x42760a
  4275a1:	cmp    bx,di
  4275a4:	je     0x427613
  4275a6:	mov    edi,DWORD PTR [ebp-0x20]
  4275a9:	mov    bx,WORD PTR [ebp+0x8]
  4275ad:	xor    edi,esi
  4275af:	add    edi,eax
  4275b1:	cmp    bx,di
  4275b4:	jb     0x4275d4
  4275b6:	mov    edi,DWORD PTR [ebp-0x2c]
  4275b9:	mov    bx,WORD PTR [ebp+0x8]
  4275bd:	xor    edi,esi
  4275bf:	add    edi,eax
  4275c1:	cmp    bx,di
  4275c4:	ja     0x4275d4
  4275c6:	movzx  edi,WORD PTR [ebp+0x8]
  4275ca:	movzx  ebx,WORD PTR [ebp-0x8]
  4275ce:	add    edi,ebx
  4275d0:	mov    WORD PTR [ebp+0x8],di
  4275d4:	mov    edi,DWORD PTR [ebp-0x20]
  4275d7:	mov    bx,WORD PTR [ebp-0x4]
  4275db:	xor    edi,esi
  4275dd:	add    edi,eax
  4275df:	cmp    bx,di
  4275e2:	jb     0x427602
  4275e4:	mov    edi,DWORD PTR [ebp-0x2c]
  4275e7:	mov    bx,WORD PTR [ebp-0x4]
  4275eb:	xor    edi,esi
  4275ed:	add    edi,eax
  4275ef:	cmp    bx,di
  4275f2:	ja     0x427602
  4275f4:	movzx  edi,WORD PTR [ebp-0x4]
  4275f8:	movzx  ebx,WORD PTR [ebp-0x8]
  4275fc:	add    edi,ebx
  4275fe:	mov    WORD PTR [ebp-0x4],di
  427602:	mov    di,WORD PTR [ebp-0x4]
  427606:	mov    bx,WORD PTR [ebp+0x8]
  42760a:	cmp    bx,di
  42760d:	jne    0x427707
  427613:	mov    edi,DWORD PTR [ebp-0x1c]
  427616:	mov    ebx,DWORD PTR [ebp-0x10]
  427619:	xor    edi,ecx
  42761b:	lea    edi,[edi+ebx*1+0x3272ef]
  427622:	mov    DWORD PTR [ebp-0x10],edi
  427625:	mov    edi,DWORD PTR [ebp-0x1c]
  427628:	mov    ebx,DWORD PTR [ebp-0x14]
  42762b:	xor    edi,ecx
  42762d:	lea    edi,[edi+ebx*1+0x3272ef]
  427634:	mov    DWORD PTR [ebp-0x14],edi
  427637:	mov    edi,DWORD PTR [ebp-0x24]
  42763a:	mov    ebx,DWORD PTR [ebp-0x10]
  42763d:	mov    di,WORD PTR [ebx+edi*2]
  427641:	mov    WORD PTR [ebp+0x8],di
  427645:	mov    edi,DWORD PTR [ebp-0x28]
  427648:	mov    ebx,DWORD PTR [ebp-0x14]
  42764b:	mov    di,WORD PTR [ebx+edi*2]
  42764f:	mov    WORD PTR [ebp-0x4],di
  427653:	mov    edi,DWORD PTR [ebp-0xc]
  427656:	mov    bx,WORD PTR [ebp+0x8]
  42765a:	xor    edi,esi
  42765c:	add    edi,eax
  42765e:	cmp    bx,di
  427661:	jne    0x427577
  427667:	mov    eax,DWORD PTR [ebp-0x18]
  42766a:	mov    esi,DWORD PTR [ebp-0xc]
  42766d:	xor    eax,ecx
  42766f:	add    eax,edx
  427671:	imul   eax,esi
  427674:	mov    DWORD PTR [ebp-0xc],eax
  427677:	jmp    0x42768b
  427679:	mov    eax,DWORD PTR [ebp-0xc]
  42767c:	mov    esi,DWORD PTR [ebp-0x18]
  42767f:	xor    eax,ecx
  427681:	lea    eax,[eax+esi*1+0x3272ef]
  427688:	mov    DWORD PTR [ebp-0x18],eax
  42768b:	mov    eax,DWORD PTR [ebp-0x24]
  42768e:	sub    eax,edx
  427690:	xor    eax,ecx
  427692:	mov    DWORD PTR [ebp-0x30],eax
  427695:	mov    eax,DWORD PTR [ebp-0x28]
  427698:	sub    eax,edx
  42769a:	xor    eax,ecx
  42769c:	mov    DWORD PTR [ebp-0x34],eax
  42769f:	mov    eax,DWORD PTR [ebp-0x34]
  4276a2:	mov    esi,DWORD PTR [ebp-0x1c]
  4276a5:	xor    esi,ecx
  4276a7:	add    esi,edx
  4276a9:	xor    eax,ecx
  4276ab:	add    eax,0x3272ef
  4276b0:	imul   esi,eax
  4276b3:	mov    eax,DWORD PTR [ebp-0x14]
  4276b6:	movzx  eax,WORD PTR [esi+eax*1]
  4276ba:	mov    esi,DWORD PTR [ebp-0x30]
  4276bd:	mov    edi,DWORD PTR [ebp-0x1c]
  4276c0:	xor    esi,ecx
  4276c2:	add    esi,edx
  4276c4:	xor    edi,ecx
  4276c6:	add    edi,edx
  4276c8:	imul   edi,esi
  4276cb:	mov    esi,DWORD PTR [ebp-0x10]
  4276ce:	movzx  esi,WORD PTR [edi+esi*1]
  4276d2:	sub    eax,edx
  4276d4:	sub    esi,edx
  4276d6:	xor    eax,ecx
  4276d8:	xor    esi,ecx
  4276da:	cmp    esi,eax
  4276dc:	jne    0x427707
  4276de:	mov    eax,DWORD PTR [ebp-0x30]
  4276e1:	mov    esi,DWORD PTR [ebp-0x1c]
  4276e4:	xor    eax,ecx
  4276e6:	add    eax,0x3272ef
  4276eb:	xor    esi,ecx
  4276ed:	add    esi,edx
  4276ef:	imul   esi,eax
  4276f2:	mov    eax,DWORD PTR [ebp-0x10]
  4276f5:	movzx  eax,WORD PTR [esi+eax*1]
  4276f9:	mov    esi,DWORD PTR [ebp-0xc]
  4276fc:	sub    eax,edx
  4276fe:	xor    eax,ecx
  427700:	cmp    eax,esi
  427702:	mov    eax,DWORD PTR [ebp-0xc]
  427705:	je     0x42770a
  427707:	mov    eax,DWORD PTR [ebp-0x18]
  42770a:	pop    edi
  42770b:	xor    eax,ecx
  42770d:	pop    esi
  42770e:	add    eax,edx
  427710:	pop    ebx
  427711:	leave  
  427712:	ret    0x8
  427715:	push   ebp
  427716:	mov    ebp,esp
  427718:	push   ecx
  427719:	mov    cx,WORD PTR [eax]
  42771c:	push   esi
  42771d:	mov    esi,0x3b59
  427722:	sub    cx,si
  427725:	mov    esi,0x8a96
  42772a:	xor    cx,si
  42772d:	mov    esi,0x4e31
  427732:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  427739:	mov    edx,0xf89c85b9
  42773e:	cmp    cx,si
  427741:	je     0x4277a0
  427743:	push   ebx
  427744:	push   edi
  427745:	movzx  ecx,cx
  427748:	mov    edi,0xffcd8d11
  42774d:	mov    esi,0x75108a8
  427752:	mov    ebx,0x4f95
  427757:	cmp    cx,bx
  42775a:	jne    0x42775f
  42775c:	mov    DWORD PTR [ebp-0x4],edx
  42775f:	lea    edx,[edi+0x1]
  427762:	xor    edx,esi
  427764:	mov    edi,edx
  427766:	xor    edi,esi
  427768:	mov    cx,WORD PTR [eax+edi*2+0x64e5de]
  427770:	mov    ebx,0x3b59
  427775:	sub    cx,bx
  427778:	mov    ebx,0x8a96
  42777d:	xor    cx,bx
  427780:	mov    ebx,0x4e31
  427785:	cmp    cx,bx
  427788:	jne    0x427752
  42778a:	mov    ecx,DWORD PTR [ebp-0x4]
  42778d:	pop    edi
  42778e:	pop    ebx
  42778f:	cmp    ecx,0xf89c85b8
  427795:	je     0x4277a0
  427797:	xor    ecx,esi
  427799:	lea    eax,[eax+ecx*2+0x64e5e0]
  4277a0:	pop    esi
  4277a1:	leave  
  4277a2:	ret    
  4277a3:	push   ebp
  4277a4:	mov    ebp,esp
  4277a6:	push   ecx
  4277a7:	push   esi
  4277a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4277af:	mov    esi,0xf89c85b9
  4277b4:	call   0x427715
  4277b9:	mov    cl,BYTE PTR [eax]
  4277bb:	inc    cl
  4277bd:	xor    cl,0x7b
  4277c0:	cmp    cl,0x7a
  4277c3:	je     0x427828
  4277c5:	push   ebx
  4277c6:	push   edi
  4277c7:	mov    edx,eax
  4277c9:	mov    edi,0xffcd8d11
  4277ce:	mov    ecx,0x75108a8
  4277d3:	mov    dx,WORD PTR [edx]
  4277d6:	mov    ebx,0x3b59
  4277db:	sub    dx,bx
  4277de:	mov    ebx,0x8a96
  4277e3:	xor    dx,bx
  4277e6:	mov    ebx,0x4e43
  4277eb:	cmp    dx,bx
  4277ee:	jne    0x4277f3
  4277f0:	mov    DWORD PTR [ebp-0x4],esi
  4277f3:	lea    esi,[edi+0x1]
  4277f6:	xor    esi,ecx
  4277f8:	mov    edi,esi
  4277fa:	xor    edi,ecx
  4277fc:	lea    edx,[eax+edi*2+0x64e5de]
  427803:	mov    bl,BYTE PTR [edx]
  427805:	inc    bl
  427807:	xor    bl,0x7b
  42780a:	cmp    bl,0x7a
  42780d:	jne    0x4277d3
  42780f:	mov    edx,DWORD PTR [ebp-0x4]
  427812:	pop    edi
  427813:	pop    ebx
  427814:	cmp    edx,0xf89c85b8
  42781a:	je     0x427828
  42781c:	xor    edx,ecx
  42781e:	xor    ecx,ecx
  427820:	mov    WORD PTR [eax+edx*2+0x64e5de],cx
  427828:	pop    esi
  427829:	leave  
  42782a:	ret    
  42782b:	push   ebp
  42782c:	mov    ebp,esp
  42782e:	push   ecx
  42782f:	push   esi
  427830:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  427837:	mov    esi,0xf89c85b9
  42783c:	call   0x427715
  427841:	mov    cx,WORD PTR [eax]
  427844:	mov    edx,0x3b59
  427849:	sub    cx,dx
  42784c:	mov    edx,0x8a96
  427851:	xor    cx,dx
  427854:	mov    edx,0x4e31
  427859:	cmp    cx,dx
  42785c:	je     0x4278b5
  42785e:	push   ebx
  42785f:	push   edi
  427860:	movzx  ecx,cx
  427863:	mov    edx,0xffcd8d11
  427868:	mov    edi,0x75108a8
  42786d:	mov    ebx,0x4e43
  427872:	cmp    cx,bx
  427875:	jne    0x42787a
  427877:	mov    DWORD PTR [ebp-0x4],esi
  42787a:	lea    esi,[edx+0x1]
  42787d:	xor    esi,edi
  42787f:	mov    edx,esi
  427881:	xor    edx,edi
  427883:	mov    cx,WORD PTR [eax+edx*2+0x64e5de]
  42788b:	mov    ebx,0x3b59
  427890:	sub    cx,bx
  427893:	mov    ebx,0x8a96
  427898:	xor    cx,bx
  42789b:	mov    ebx,0x4e31
  4278a0:	cmp    cx,bx
  4278a3:	jne    0x42786d
  4278a5:	cmp    DWORD PTR [ebp-0x4],0xf89c85b8
  4278ac:	pop    edi
  4278ad:	pop    ebx
  4278ae:	je     0x4278b5
  4278b0:	xor    eax,eax
  4278b2:	inc    eax
  4278b3:	jmp    0x4278b7
  4278b5:	xor    eax,eax
  4278b7:	pop    esi
  4278b8:	leave  
  4278b9:	ret    
  4278ba:	push   ebp
  4278bb:	mov    ebp,esp
  4278bd:	push   ecx
  4278be:	mov    eax,DWORD PTR [ebp+0x8]
  4278c1:	movzx  ecx,WORD PTR [eax]
  4278c4:	push   esi
  4278c5:	lea    eax,[ecx-0x3b59]
  4278cb:	mov    esi,0x8a96
  4278d0:	push   edi
  4278d1:	xor    eax,esi
  4278d3:	mov    edi,0x4e31
  4278d8:	mov    DWORD PTR [ebp-0x4],edx
  4278db:	cmp    ax,di
  4278de:	je     0x42790b
  4278e0:	mov    eax,DWORD PTR [ebp+0x8]
  4278e3:	sub    eax,edx
  4278e5:	mov    DWORD PTR [ebp+0x8],eax
  4278e8:	jmp    0x4278ed
  4278ea:	mov    eax,DWORD PTR [ebp+0x8]
  4278ed:	mov    WORD PTR [edx],cx
  4278f0:	add    edx,0x2
  4278f3:	movzx  edi,WORD PTR [eax+edx*1]
  4278f7:	mov    ecx,edi
  4278f9:	add    edi,0xffffc4a7
  4278ff:	xor    edi,esi
  427901:	mov    eax,0x4e31
  427906:	cmp    di,ax
  427909:	jne    0x4278ea
  42790b:	xor    eax,eax
  42790d:	pop    edi
  42790e:	mov    WORD PTR [edx],ax
  427911:	mov    eax,DWORD PTR [ebp-0x4]
  427914:	pop    esi
  427915:	leave  
  427916:	ret    0x4
  427919:	push   ebp
  42791a:	mov    ebp,esp
  42791c:	sub    esp,0x18
  42791f:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  427926:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  42792d:	mov    ecx,DWORD PTR [ebp-0x8]
  427930:	push   esi
  427931:	mov    eax,0x75108a8
  427936:	xor    ecx,eax
  427938:	mov    esi,0x3272ef
  42793d:	add    ecx,esi
  42793f:	mov    DWORD PTR [ebp-0x4],ecx
  427942:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427949:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  427950:	push   edi
  427951:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427958:	jmp    0x4279f9
  42795d:	mov    ecx,DWORD PTR [ebp-0x4]
  427960:	mov    edx,DWORD PTR [ebp+0x10]
  427963:	sub    edx,ecx
  427965:	mov    ecx,DWORD PTR [ebp-0xc]
  427968:	xor    ecx,eax
  42796a:	add    ecx,esi
  42796c:	cmp    edx,ecx
  42796e:	jbe    0x42798b
  427970:	mov    edx,DWORD PTR [ebp-0x4]
  427973:	add    edx,DWORD PTR [ebp+0x8]
  427976:	mov    ecx,DWORD PTR [ebp-0x4]
  427979:	add    ecx,DWORD PTR [ebp+0xc]
  42797c:	mov    edi,DWORD PTR [ecx]
  42797e:	mov    DWORD PTR [edx],edi
  427980:	mov    ecx,DWORD PTR [ecx+0x4]
  427983:	mov    DWORD PTR [edx+0x4],ecx
  427986:	mov    ecx,DWORD PTR [ebp-0xc]
  427989:	jmp    0x4279d8
  42798b:	mov    ecx,DWORD PTR [ebp-0x4]
  42798e:	mov    edx,DWORD PTR [ebp+0x10]
  427991:	sub    edx,ecx
  427993:	mov    ecx,DWORD PTR [ebp-0x10]
  427996:	xor    ecx,eax
  427998:	add    ecx,esi
  42799a:	cmp    edx,ecx
  42799c:	mov    ecx,DWORD PTR [ebp-0x4]
  42799f:	jbe    0x4279b3
  4279a1:	add    ecx,DWORD PTR [ebp+0x8]
  4279a4:	mov    edx,DWORD PTR [ebp-0x4]
  4279a7:	add    edx,DWORD PTR [ebp+0xc]
  4279aa:	mov    edx,DWORD PTR [edx]
  4279ac:	mov    DWORD PTR [ecx],edx
  4279ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4279b1:	jmp    0x4279d8
  4279b3:	mov    edx,DWORD PTR [ebp+0x10]
  4279b6:	sub    edx,ecx
  4279b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4279bb:	xor    ecx,eax
  4279bd:	add    ecx,esi
  4279bf:	cmp    edx,ecx
  4279c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4279c4:	jbe    0x4279e9
  4279c6:	add    ecx,DWORD PTR [ebp+0x8]
  4279c9:	mov    edx,DWORD PTR [ebp-0x4]
  4279cc:	add    edx,DWORD PTR [ebp+0xc]
  4279cf:	mov    dx,WORD PTR [edx]
  4279d2:	mov    WORD PTR [ecx],dx
  4279d5:	mov    ecx,DWORD PTR [ebp-0x14]
  4279d8:	mov    edx,DWORD PTR [ebp-0x4]
  4279db:	xor    ecx,eax
  4279dd:	lea    ecx,[ecx+edx*1+0x3272ef]
  4279e4:	mov    DWORD PTR [ebp-0x4],ecx
  4279e7:	jmp    0x4279f9
  4279e9:	add    ecx,DWORD PTR [ebp+0x8]
  4279ec:	mov    edx,DWORD PTR [ebp-0x4]
  4279ef:	add    edx,DWORD PTR [ebp+0xc]
  4279f2:	mov    dl,BYTE PTR [edx]
  4279f4:	mov    BYTE PTR [ecx],dl
  4279f6:	inc    DWORD PTR [ebp-0x4]
  4279f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4279fc:	mov    edx,DWORD PTR [ebp+0x10]
  4279ff:	xor    ecx,eax
  427a01:	add    ecx,esi
  427a03:	imul   ecx,edx
  427a06:	mov    edx,DWORD PTR [ebp-0x8]
  427a09:	mov    edi,DWORD PTR [ebp-0x4]
  427a0c:	xor    edx,eax
  427a0e:	lea    edx,[edx+edi*1+0x3272ef]
  427a15:	cmp    edx,ecx
  427a17:	jb     0x42795d
  427a1d:	pop    edi
  427a1e:	pop    esi
  427a1f:	leave  
  427a20:	ret    0xc
  427a23:	push   ebp
  427a24:	mov    ebp,esp
  427a26:	sub    esp,0xc
  427a29:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  427a30:	push   esi
  427a31:	mov    esi,eax
  427a33:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427a3a:	mov    edx,DWORD PTR [ebp-0x4]
  427a3d:	mov    eax,0x75108a8
  427a42:	xor    edx,eax
  427a44:	mov    ecx,0x3272ef
  427a49:	add    edx,ecx
  427a4b:	cmp    esi,edx
  427a4d:	je     0x427a8f
  427a4f:	push   ebx
  427a50:	push   edi
  427a51:	mov    edx,DWORD PTR [ebp-0x8]
  427a54:	mov    ebx,DWORD PTR [ebp+0x8]
  427a57:	xor    edx,eax
  427a59:	mov    edi,0xffcd8d11
  427a5e:	sub    edi,edx
  427a60:	add    esi,edi
  427a62:	lea    edx,[esi-0x3272ef]
  427a68:	xor    edx,eax
  427a6a:	mov    DWORD PTR [ebp-0xc],edx
  427a6d:	mov    edx,DWORD PTR [ebp-0x4]
  427a70:	mov    edi,DWORD PTR [ebp-0xc]
  427a73:	xor    dl,0xa8
  427a76:	sub    dl,0x11
  427a79:	xor    edi,eax
  427a7b:	mov    BYTE PTR [edi+ebx*1+0x3272ef],dl
  427a82:	mov    edx,DWORD PTR [ebp-0x4]
  427a85:	xor    edx,eax
  427a87:	add    edx,ecx
  427a89:	cmp    esi,edx
  427a8b:	jne    0x427a51
  427a8d:	pop    edi
  427a8e:	pop    ebx
  427a8f:	pop    esi
  427a90:	leave  
  427a91:	ret    0x4
  427a94:	push   ebp
  427a95:	mov    ebp,esp
  427a97:	sub    esp,0x21c
  427a9d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  427aa4:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427aab:	mov    eax,DWORD PTR [ebp+0x10]
  427aae:	mov    eax,DWORD PTR [ebp-0x4]
  427ab1:	mov    ecx,DWORD PTR [ebp+0x8]
  427ab4:	push   esi
  427ab5:	push   edi
  427ab6:	mov    edi,0x75108a8
  427abb:	xor    eax,edi
  427abd:	mov    esi,0x3272ef
  427ac2:	add    eax,esi
  427ac4:	cmp    eax,ecx
  427ac6:	mov    eax,DWORD PTR [ebp-0x4]
  427ac9:	jne    0x427ad4
  427acb:	xor    eax,edi
  427acd:	add    eax,esi
  427acf:	jmp    0x427b80
  427ad4:	mov    ecx,DWORD PTR [ebp+0xc]
  427ad7:	xor    eax,edi
  427ad9:	add    eax,esi
  427adb:	cmp    eax,ecx
  427add:	jne    0x427ae4
  427adf:	mov    eax,DWORD PTR [ebp-0x4]
  427ae2:	jmp    0x427acb
  427ae4:	lea    eax,[ebp-0x21c]
  427aea:	mov    DWORD PTR [ebp-0x8],eax
  427aed:	mov    eax,DWORD PTR [ebp+0xc]
  427af0:	mov    DWORD PTR [ebp-0x10],eax
  427af3:	mov    eax,DWORD PTR [ebp-0x4]
  427af6:	xor    eax,edi
  427af8:	add    eax,esi
  427afa:	mov    DWORD PTR [ebp+0x10],eax
  427afd:	mov    eax,DWORD PTR [ebp+0xc]
  427b00:	push   ebx
  427b01:	call   0x42782b
  427b06:	mov    ebx,eax
  427b08:	mov    eax,DWORD PTR [ebp+0x8]
  427b0b:	mov    eax,DWORD PTR [eax+0x14]
  427b0e:	jmp    0x427b68
  427b10:	mov    eax,DWORD PTR [ebp+0xc]
  427b13:	sub    eax,0x8
  427b16:	mov    DWORD PTR [ebp-0xc],eax
  427b19:	mov    eax,DWORD PTR [ebp-0xc]
  427b1c:	mov    eax,DWORD PTR [eax+0x28]
  427b1f:	call   0x427715
  427b24:	mov    DWORD PTR [ebp+0x10],eax
  427b27:	push   DWORD PTR [ebp+0x10]
  427b2a:	mov    edx,DWORD PTR [ebp-0x8]
  427b2d:	call   0x4278ba
  427b32:	mov    eax,DWORD PTR [ebp-0x4]
  427b35:	xor    eax,edi
  427b37:	add    eax,esi
  427b39:	cmp    eax,ebx
  427b3b:	jne    0x427b45
  427b3d:	mov    eax,DWORD PTR [ebp-0x8]
  427b40:	call   0x4277a3
  427b45:	mov    eax,DWORD PTR [ebp-0x14]
  427b48:	xor    eax,edi
  427b4a:	add    eax,esi
  427b4c:	push   eax
  427b4d:	push   DWORD PTR [ebp-0x10]
  427b50:	mov    eax,DWORD PTR [ebp-0x8]
  427b53:	call   0x4274cf
  427b58:	mov    ecx,DWORD PTR [ebp-0x4]
  427b5b:	xor    ecx,edi
  427b5d:	add    ecx,esi
  427b5f:	cmp    eax,ecx
  427b61:	je     0x427b86
  427b63:	mov    eax,DWORD PTR [ebp+0xc]
  427b66:	mov    eax,DWORD PTR [eax]
  427b68:	mov    DWORD PTR [ebp+0xc],eax
  427b6b:	mov    eax,DWORD PTR [ebp+0x8]
  427b6e:	mov    ecx,DWORD PTR [ebp+0xc]
  427b71:	add    eax,0x14
  427b74:	cmp    ecx,eax
  427b76:	jne    0x427b10
  427b78:	mov    eax,DWORD PTR [ebp-0x4]
  427b7b:	xor    eax,edi
  427b7d:	add    eax,esi
  427b7f:	pop    ebx
  427b80:	pop    edi
  427b81:	pop    esi
  427b82:	leave  
  427b83:	ret    0xc
  427b86:	mov    eax,DWORD PTR [ebp-0xc]
  427b89:	mov    eax,DWORD PTR [eax+0x18]
  427b8c:	jmp    0x427b7f
  427b8e:	push   ebp
  427b8f:	mov    ebp,esp
  427b91:	mov    eax,DWORD PTR [ebp+0xc]
  427b94:	sub    esp,0x10
  427b97:	cmp    DWORD PTR [ebp+0x8],0x0
  427b9b:	push   ebx
  427b9c:	push   esi
  427b9d:	push   edi
  427b9e:	je     0x427c53
  427ba4:	test   eax,eax
  427ba6:	je     0x427c53
  427bac:	movzx  eax,WORD PTR [eax+0x20]
  427bb0:	mov    ecx,eax
  427bb2:	mov    DWORD PTR [ebp-0x10],eax
  427bb5:	xor    edx,edx
  427bb7:	and    DWORD PTR [ebp-0x8],edx
  427bba:	mov    eax,0x8a96
  427bbf:	xor    ecx,eax
  427bc1:	add    ecx,0x3b59
  427bc7:	mov    DWORD PTR [ebp-0xc],ecx
  427bca:	and    DWORD PTR [ebp-0x4],0x0
  427bce:	xor    ecx,ecx
  427bd0:	push   0x78
  427bd2:	pop    edi
  427bd3:	cmp    cx,WORD PTR [ebp-0xc]
  427bd7:	jae    0x427c3d
  427bd9:	lea    esi,[edx-0x3b59]
  427bdf:	xor    esi,eax
  427be1:	movzx  ecx,WORD PTR [ebp-0x4]
  427be5:	mov    ebx,DWORD PTR [ebp+0xc]
  427be8:	lea    ecx,[ebx+ecx*4]
  427beb:	cmp    WORD PTR [ecx+0x2],si
  427bef:	jne    0x427c28
  427bf1:	movzx  ecx,WORD PTR [ecx]
  427bf4:	mov    edi,0x4e31
  427bf9:	cmp    cx,di
  427bfc:	jne    0x427c0a
  427bfe:	mov    ebx,DWORD PTR [ebp+0x8]
  427c01:	movzx  edi,dx
  427c04:	cmp    BYTE PTR [edi+ebx*1],0x0
  427c08:	je     0x427c37
  427c0a:	mov    ebx,DWORD PTR [ebp+0x8]
  427c0d:	movzx  edi,dx
  427c10:	movsx  di,BYTE PTR [edi+ebx*1]
  427c15:	mov    ebx,0x3b59
  427c1a:	sub    di,bx
  427c1d:	xor    di,ax
  427c20:	cmp    cx,di
  427c23:	je     0x427c37
  427c25:	push   0x7a
  427c27:	pop    edi
  427c28:	inc    DWORD PTR [ebp-0x4]
  427c2b:	mov    cx,WORD PTR [ebp-0xc]
  427c2f:	cmp    WORD PTR [ebp-0x4],cx
  427c33:	jb     0x427be1
  427c35:	jmp    0x427c3d
  427c37:	inc    DWORD PTR [ebp-0x8]
  427c3a:	push   0x79
  427c3c:	pop    edi
  427c3d:	mov    esi,DWORD PTR [ebp+0x8]
  427c40:	movzx  ecx,dx
  427c43:	cmp    BYTE PTR [ecx+esi*1],0x0
  427c47:	je     0x427c5c
  427c49:	inc    edx
  427c4a:	cmp    edi,0x7a
  427c4d:	jne    0x427bca
  427c53:	xor    eax,eax
  427c55:	pop    edi
  427c56:	pop    esi
  427c57:	pop    ebx
  427c58:	leave  
  427c59:	ret    0x8
  427c5c:	mov    ecx,DWORD PTR [ebp-0x8]
  427c5f:	add    ecx,0xffffc4a7
  427c65:	xor    cx,ax
  427c68:	xor    eax,eax
  427c6a:	cmp    cx,WORD PTR [ebp-0x10]
  427c6e:	sete   al
  427c71:	jmp    0x427c55
  427c73:	push   ebp
  427c74:	mov    ebp,esp
  427c76:	sub    esp,0x50
  427c79:	push   edi
  427c7a:	mov    edi,eax
  427c7c:	mov    eax,DWORD PTR [edi+0x1a8]
  427c82:	cmp    DWORD PTR [eax],0x0
  427c85:	jne    0x427c8e
  427c87:	xor    eax,eax
  427c89:	jmp    0x427dbf
  427c8e:	push   DWORD PTR [ebp+0x8]
  427c91:	push   0x2c
  427c93:	pop    eax
  427c94:	call   0x427a23
  427c99:	mov    edx,DWORD PTR [edi+0x1ac]
  427c9f:	lea    eax,[edi+0x22]
  427ca2:	mov    DWORD PTR [ebp-0x4c],eax
  427ca5:	lea    eax,[edi+0x44]
  427ca8:	mov    DWORD PTR [ebp-0x48],eax
  427cab:	lea    eax,[edi+0x66]
  427cae:	mov    DWORD PTR [ebp-0x44],eax
  427cb1:	lea    eax,[edi+0x88]
  427cb7:	mov    DWORD PTR [ebp-0x40],eax
  427cba:	lea    eax,[edi+0xaa]
  427cc0:	mov    DWORD PTR [ebp-0x3c],eax
  427cc3:	lea    eax,[edi+0xcc]
  427cc9:	mov    DWORD PTR [ebp-0x38],eax
  427ccc:	lea    eax,[edi+0xee]
  427cd2:	mov    DWORD PTR [ebp-0x34],eax
  427cd5:	lea    eax,[edi+0x110]
  427cdb:	mov    DWORD PTR [ebp-0x30],eax
  427cde:	lea    eax,[edi+0x132]
  427ce4:	mov    DWORD PTR [ebp-0x2c],eax
  427ce7:	lea    eax,[edi+0x154]
  427ced:	push   edi
  427cee:	mov    DWORD PTR [ebp-0x50],edi
  427cf1:	mov    DWORD PTR [ebp-0x28],eax
  427cf4:	call   0x427df3
  427cf9:	push   eax
  427cfa:	mov    eax,DWORD PTR [edi+0x1a8]
  427d00:	push   DWORD PTR [eax]
  427d02:	call   0x427a94
  427d07:	mov    DWORD PTR [ebp-0x10],eax
  427d0a:	test   eax,eax
  427d0c:	je     0x427dbf
  427d12:	mov    ecx,DWORD PTR [eax+0x3c]
  427d15:	push   ebx
  427d16:	push   esi
  427d17:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  427d1b:	add    esi,eax
  427d1d:	mov    edi,DWORD PTR [esi+0x24]
  427d20:	mov    ecx,DWORD PTR [esi+0x1c]
  427d23:	mov    edx,DWORD PTR [esi+0x20]
  427d26:	mov    ebx,DWORD PTR [esi+0x18]
  427d29:	add    edi,eax
  427d2b:	mov    DWORD PTR [ebp-0x20],edi
  427d2e:	mov    edi,DWORD PTR [esi+0x14]
  427d31:	add    ecx,eax
  427d33:	add    edx,eax
  427d35:	mov    DWORD PTR [ebp-0xc],ecx
  427d38:	mov    DWORD PTR [ebp-0x1c],edx
  427d3b:	mov    DWORD PTR [ebp-0x8],edi
  427d3e:	cmp    edi,ebx
  427d40:	ja     0x427d45
  427d42:	mov    DWORD PTR [ebp-0x8],ebx
  427d45:	xor    ebx,ebx
  427d47:	mov    DWORD PTR [ebp-0x18],ebx
  427d4a:	cmp    DWORD PTR [ebp-0x8],ebx
  427d4d:	jbe    0x427dbd
  427d4f:	jmp    0x427d54
  427d51:	mov    edx,DWORD PTR [ebp-0x1c]
  427d54:	mov    edi,DWORD PTR [ebp-0x20]
  427d57:	movzx  edi,WORD PTR [edi+ebx*2]
  427d5b:	cmp    ebx,DWORD PTR [esi+0x18]
  427d5e:	jae    0x427dbd
  427d60:	cmp    edi,DWORD PTR [esi+0x14]
  427d63:	jae    0x427dbd
  427d65:	mov    ebx,DWORD PTR [edx+ebx*4]
  427d68:	mov    edx,DWORD PTR [ebp+0x8]
  427d6b:	mov    edi,DWORD PTR [ecx+edi*4]
  427d6e:	mov    DWORD PTR [ebp-0x4],edx
  427d71:	lea    edx,[ebp-0x50]
  427d74:	add    ebx,eax
  427d76:	add    edi,eax
  427d78:	sub    edx,DWORD PTR [ebp+0x8]
  427d7b:	mov    DWORD PTR [ebp-0x14],0xb
  427d82:	mov    DWORD PTR [ebp-0x24],edx
  427d85:	mov    edx,DWORD PTR [ebp-0x4]
  427d88:	cmp    DWORD PTR [edx],0x0
  427d8b:	jne    0x427da8
  427d8d:	mov    eax,DWORD PTR [ebp-0x24]
  427d90:	push   DWORD PTR [eax+edx*1]
  427d93:	push   ebx
  427d94:	call   0x427b8e
  427d99:	mov    ecx,DWORD PTR [ebp-0xc]
  427d9c:	test   eax,eax
  427d9e:	je     0x427da5
  427da0:	mov    eax,DWORD PTR [ebp-0x4]
  427da3:	mov    DWORD PTR [eax],edi
  427da5:	mov    eax,DWORD PTR [ebp-0x10]
  427da8:	add    DWORD PTR [ebp-0x4],0x4
  427dac:	dec    DWORD PTR [ebp-0x14]
  427daf:	jne    0x427d85
  427db1:	mov    ebx,DWORD PTR [ebp-0x18]
  427db4:	inc    ebx
  427db5:	mov    DWORD PTR [ebp-0x18],ebx
  427db8:	cmp    ebx,DWORD PTR [ebp-0x8]
  427dbb:	jb     0x427d51
  427dbd:	pop    esi
  427dbe:	pop    ebx
  427dbf:	pop    edi
  427dc0:	leave  
  427dc1:	ret    0x4
  427dc4:	push   ebp
  427dc5:	mov    ebp,esp
  427dc7:	mov    eax,DWORD PTR [ebp+0x8]
  427dca:	push   esi
  427dcb:	push   DWORD PTR [eax+0x1e0]
  427dd1:	lea    esi,[eax+0x198]
  427dd7:	mov    eax,DWORD PTR [ebp+0x8]
  427dda:	call   0x427c73
  427ddf:	mov    ecx,DWORD PTR [esi]
  427de1:	mov    DWORD PTR [ecx],eax
  427de3:	mov    eax,DWORD PTR [esi]
  427de5:	xor    ecx,ecx
  427de7:	cmp    DWORD PTR [eax],ecx
  427de9:	pop    esi
  427dea:	setne  cl
  427ded:	mov    eax,ecx
  427def:	pop    ebp
  427df0:	ret    0x4
  427df3:	mov    ecx,DWORD PTR [edi+0x188]
  427df9:	push   ebx
  427dfa:	jmp    0x427e0f
  427dfc:	xor    eax,0x8a96
  427e01:	add    eax,0x3b59
  427e06:	mov    WORD PTR [ecx],ax
  427e09:	add    ecx,0x2
  427e0c:	add    edx,0x2
  427e0f:	movzx  eax,WORD PTR [edx]
  427e12:	mov    ebx,0x4e31
  427e17:	cmp    ax,bx
  427e1a:	jne    0x427dfc
  427e1c:	xor    eax,eax
  427e1e:	mov    WORD PTR [ecx],ax
  427e21:	mov    eax,DWORD PTR [edi+0x188]
  427e27:	pop    ebx
  427e28:	ret    
  427e29:	push   edi
  427e2a:	mov    edi,eax
  427e2c:	mov    eax,DWORD PTR [esi+0x188]
  427e32:	shl    edi,0x6
  427e35:	add    eax,edi
  427e37:	jmp    0x427e42
  427e39:	xor    cl,0x7b
  427e3c:	dec    cl
  427e3e:	mov    BYTE PTR [eax],cl
  427e40:	inc    eax
  427e41:	inc    edx
  427e42:	mov    cl,BYTE PTR [edx]
  427e44:	cmp    cl,0x7a
  427e47:	jne    0x427e39
  427e49:	mov    BYTE PTR [eax],0x0
  427e4c:	mov    eax,DWORD PTR [esi+0x188]
  427e52:	add    eax,edi
  427e54:	pop    edi
  427e55:	ret    
  427e56:	push   ebp
  427e57:	mov    ebp,esp
  427e59:	sub    esp,0x14
  427e5c:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427e63:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  427e6a:	mov    eax,DWORD PTR [ebx]
  427e6c:	mov    DWORD PTR [ebp-0x8],eax
  427e6f:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427e76:	push   esi
  427e77:	push   edi
  427e78:	mov    DWORD PTR [ebp-0x14],0xead71899
  427e7f:	mov    edi,DWORD PTR [ebp-0x4]
  427e82:	mov    ecx,DWORD PTR [ebp-0x10]
  427e85:	mov    eax,0x75108a8
  427e8a:	xor    edi,eax
  427e8c:	mov    edx,0x3272ef
  427e91:	xor    ecx,eax
  427e93:	add    edi,edx
  427e95:	add    ecx,edx
  427e97:	imul   edi,ecx
  427e9a:	jmp    0x427ee2
  427e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  427e9f:	mov    esi,DWORD PTR [ebp-0x4]
  427ea2:	xor    ecx,eax
  427ea4:	xor    esi,eax
  427ea6:	add    ecx,edx
  427ea8:	add    esi,edx
  427eaa:	test   esi,ecx
  427eac:	mov    esi,DWORD PTR [ebp-0x8]
  427eaf:	mov    ecx,DWORD PTR [ebp-0x4]
  427eb2:	je     0x427ec9
  427eb4:	xor    ecx,eax
  427eb6:	xor    esi,eax
  427eb8:	add    ecx,edx
  427eba:	add    esi,edx
  427ebc:	shr    esi,cl
  427ebe:	mov    ecx,DWORD PTR [ebp-0x14]
  427ec1:	xor    ecx,eax
  427ec3:	add    ecx,edx
  427ec5:	xor    esi,ecx
  427ec7:	jmp    0x427ed3
  427ec9:	xor    esi,eax
  427ecb:	xor    ecx,eax
  427ecd:	add    esi,edx
  427ecf:	add    ecx,edx
  427ed1:	shr    esi,cl
  427ed3:	mov    DWORD PTR [ebp-0x8],esi
  427ed6:	mov    ecx,DWORD PTR [ebp-0x4]
  427ed9:	xor    ecx,eax
  427edb:	lea    edi,[edi+ecx*1+0x3272ef]
  427ee2:	mov    ecx,DWORD PTR [ebp-0xc]
  427ee5:	mov    esi,DWORD PTR [ebp-0x4]
  427ee8:	xor    esi,eax
  427eea:	xor    ecx,eax
  427eec:	sub    ecx,esi
  427eee:	cmp    edi,ecx
  427ef0:	jbe    0x427e9c
  427ef2:	mov    eax,DWORD PTR [ebp-0x8]
  427ef5:	pop    edi
  427ef6:	mov    DWORD PTR [ebx],eax
  427ef8:	mov    eax,DWORD PTR [ebp-0x8]
  427efb:	pop    esi
  427efc:	leave  
  427efd:	ret    
  427efe:	push   ebp
  427eff:	mov    ebp,esp
  427f01:	sub    esp,0x38
  427f04:	push   ebx
  427f05:	mov    ebx,0xf89c85b9
  427f0a:	mov    DWORD PTR [ebp-0x4],ebx
  427f0d:	lea    ecx,[ebx+0x1]
  427f10:	mov    DWORD PTR [ebp-0x24],ecx
  427f13:	mov    eax,DWORD PTR [ebp-0x4]
  427f16:	mov    edx,DWORD PTR [ebp+0x8]
  427f19:	push   esi
  427f1a:	mov    esi,0x75108a8
  427f1f:	xor    eax,esi
  427f21:	push   edi
  427f22:	mov    edi,0x3272ef
  427f27:	add    eax,edi
  427f29:	cmp    edx,eax
  427f2b:	mov    eax,DWORD PTR [ebp-0x4]
  427f2e:	je     0x428092
  427f34:	mov    edx,DWORD PTR [ebp+0xc]
  427f37:	xor    eax,esi
  427f39:	add    eax,edi
  427f3b:	cmp    edx,eax
  427f3d:	je     0x42808f
  427f43:	mov    eax,DWORD PTR [ebp+0x10]
  427f46:	mov    edx,DWORD PTR [ebp+0xc]
  427f49:	mov    DWORD PTR [ebp-0x14],eax
  427f4c:	mov    eax,DWORD PTR [ebp+0x8]
  427f4f:	mov    DWORD PTR [ebp-0x18],0xf89c853e
  427f56:	mov    DWORD PTR [ebp-0xc],eax
  427f59:	lea    eax,[ebx+0x2]
  427f5c:	mov    DWORD PTR [ebp-0x1c],eax
  427f5f:	mov    DWORD PTR [ebp-0x10],ebx
  427f62:	mov    DWORD PTR [ebp+0xc],ecx
  427f65:	mov    DWORD PTR [ebp+0x10],eax
  427f68:	mov    eax,DWORD PTR [ebp+0xc]
  427f6b:	xor    eax,esi
  427f6d:	mov    DWORD PTR [ebp-0x20],edx
  427f70:	sub    edx,eax
  427f72:	sub    edx,edi
  427f74:	mov    DWORD PTR [ebp+0x8],edx
  427f77:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  427f7e:	jmp    0x42807f
  427f83:	mov    eax,DWORD PTR [ebp+0xc]
  427f86:	mov    ecx,DWORD PTR [ebp+0xc]
  427f89:	xor    eax,esi
  427f8b:	xor    ecx,esi
  427f8d:	lea    ecx,[eax+ecx*1+0x64e5de]
  427f94:	mov    eax,DWORD PTR [ebp+0x8]
  427f97:	xor    edx,edx
  427f99:	div    ecx
  427f9b:	mov    eax,DWORD PTR [ebp+0x10]
  427f9e:	mov    ecx,DWORD PTR [ebp+0xc]
  427fa1:	xor    eax,esi
  427fa3:	xor    ecx,esi
  427fa5:	sub    eax,ecx
  427fa7:	cmp    edx,eax
  427fa9:	jne    0x42803e
  427faf:	mov    eax,DWORD PTR [ebp+0x8]
  427fb2:	mov    ecx,DWORD PTR [ebp-0xc]
  427fb5:	mov    dl,BYTE PTR [eax+ecx*1]
  427fb8:	mov    eax,DWORD PTR [ebp-0x10]
  427fbb:	mov    ecx,DWORD PTR [ebp-0x8]
  427fbe:	xor    eax,esi
  427fc0:	xor    ecx,esi
  427fc2:	add    eax,edi
  427fc4:	add    ecx,edi
  427fc6:	cmp    eax,ecx
  427fc8:	jae    0x428010
  427fca:	lea    ecx,[eax-0x3272ef]
  427fd0:	mov    DWORD PTR [ebp-0x4],ecx
  427fd3:	mov    ebx,DWORD PTR [ebp-0x4]
  427fd6:	xor    ebx,esi
  427fd8:	add    ebx,0x7f55d8fb
  427fde:	lea    ecx,[ebp+eax*4-0x38]
  427fe2:	mov    DWORD PTR [ecx],ebx
  427fe4:	mov    ebx,DWORD PTR [ecx]
  427fe6:	cmp    ebx,0x244ecb9c
  427fec:	jbe    0x427ff6
  427fee:	add    DWORD PTR [ecx],0x405fcdd
  427ff4:	jmp    0x427ffc
  427ff6:	add    DWORD PTR [ecx],0xfdaf4323
  427ffc:	mov    ecx,DWORD PTR [ebp-0x8]
  427fff:	xor    ecx,esi
  428001:	inc    eax
  428002:	inc    DWORD PTR [ebp-0x4]
  428005:	add    ecx,edi
  428007:	cmp    eax,ecx
  428009:	jb     0x427fd3
  42800b:	mov    ebx,0xf89c85b9
  428010:	cmp    DWORD PTR [ebp-0x14],0x0
  428014:	jne    0x42801d
  428016:	xor    dl,0x7b
  428019:	dec    dl
  42801b:	jmp    0x428033
  42801d:	mov    eax,DWORD PTR [ebp-0x18]
  428020:	xor    al,0xa8
  428022:	mov    cl,0x11
  428024:	sub    cl,al
  428026:	add    dl,cl
  428028:	mov    ecx,DWORD PTR [ebp-0x1c]
  42802b:	xor    cl,0xa8
  42802e:	sub    cl,0x11
  428031:	ror    dl,cl
  428033:	xor    eax,eax
  428035:	mov    eax,DWORD PTR [ebp+0x8]
  428038:	mov    ecx,DWORD PTR [ebp-0xc]
  42803b:	mov    BYTE PTR [eax+ecx*1],dl
  42803e:	mov    eax,DWORD PTR [ebp+0x8]
  428041:	mov    ecx,DWORD PTR [ebp-0x10]
  428044:	sub    eax,edi
  428046:	xor    eax,esi
  428048:	cmp    eax,ecx
  42804a:	jne    0x42806d
  42804c:	mov    eax,DWORD PTR [ebp+0x10]
  42804f:	mov    ecx,DWORD PTR [ebp+0xc]
  428052:	xor    eax,esi
  428054:	xor    ecx,esi
  428056:	sub    eax,ecx
  428058:	mov    ecx,DWORD PTR [ebp-0x20]
  42805b:	sub    eax,edi
  42805d:	xor    eax,esi
  42805f:	mov    DWORD PTR [ebp+0x10],eax
  428062:	mov    eax,DWORD PTR [ebp+0xc]
  428065:	xor    eax,esi
  428067:	sub    ecx,eax
  428069:	sub    ecx,edi
  42806b:	jmp    0x42807c
  42806d:	mov    eax,DWORD PTR [ebp+0xc]
  428070:	xor    eax,esi
  428072:	mov    ecx,0xffcd8d11
  428077:	sub    ecx,eax
  428079:	add    ecx,DWORD PTR [ebp+0x8]
  42807c:	mov    DWORD PTR [ebp+0x8],ecx
  42807f:	mov    eax,DWORD PTR [ebp+0x10]
  428082:	cmp    eax,ebx
  428084:	jne    0x427f83
  42808a:	mov    eax,DWORD PTR [ebp-0x24]
  42808d:	jmp    0x428092
  42808f:	mov    eax,DWORD PTR [ebp-0x4]
  428092:	xor    eax,esi
  428094:	add    eax,edi
  428096:	pop    edi
  428097:	pop    esi
  428098:	pop    ebx
  428099:	leave  
  42809a:	ret    0xc
  42809d:	push   ebp
  42809e:	mov    ebp,esp
  4280a0:	sub    esp,0x420
  4280a6:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4280ad:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  4280b4:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  4280bb:	push   ebx
  4280bc:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4280c3:	mov    eax,DWORD PTR [ebp-0x14]
  4280c6:	push   esi
  4280c7:	mov    esi,0x75108a8
  4280cc:	push   edi
  4280cd:	xor    eax,esi
  4280cf:	mov    edi,0x3272ef
  4280d4:	add    eax,edi
  4280d6:	mov    DWORD PTR [ebp-0x8],eax
  4280d9:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  4280e0:	mov    DWORD PTR [ebp-0x4],0xead71899
  4280e7:	mov    DWORD PTR [ebp-0x10],0x8
  4280ee:	mov    ecx,ecx
  4280f0:	mov    eax,DWORD PTR [ebp-0xc]
  4280f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4280f6:	xor    eax,esi
  4280f8:	xor    ecx,esi
  4280fa:	add    eax,edi
  4280fc:	add    ecx,edi
  4280fe:	imul   eax,ecx
  428101:	jmp    0x428134
  428103:	mov    eax,DWORD PTR [ebp-0x4]
  428106:	sub    eax,edi
  428108:	xor    eax,esi
  42810a:	mov    DWORD PTR [ebp-0x8],eax
  42810d:	lea    ebx,[ebp-0x8]
  428110:	call   0x427e56
  428115:	mov    DWORD PTR [ebp-0x8],eax
  428118:	mov    eax,DWORD PTR [ebp-0x8]
  42811b:	mov    ecx,DWORD PTR [ebp-0x4]
  42811e:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428125:	mov    eax,DWORD PTR [ebp-0xc]
  428128:	mov    ecx,DWORD PTR [ebp-0x4]
  42812b:	xor    eax,esi
  42812d:	lea    eax,[eax+ecx*1+0x3272ef]
  428134:	mov    DWORD PTR [ebp-0x4],eax
  428137:	mov    eax,DWORD PTR [ebp-0x18]
  42813a:	mov    ecx,DWORD PTR [ebp-0xc]
  42813d:	xor    ecx,esi
  42813f:	xor    eax,esi
  428141:	sub    eax,ecx
  428143:	mov    ecx,DWORD PTR [ebp-0x4]
  428146:	cmp    ecx,eax
  428148:	jbe    0x428103
  42814a:	mov    eax,DWORD PTR [ebp-0x1c]
  42814d:	xor    eax,esi
  42814f:	add    eax,edi
  428151:	mov    DWORD PTR [ebp-0x8],eax
  428154:	mov    DWORD PTR [ebp-0x18],0xf89c86b8
  42815b:	mov    ebx,ebx
  42815d:	jmp    0x4281c0
  42815f:	mov    ecx,DWORD PTR [ebp-0x20]
  428162:	mov    eax,DWORD PTR [ebp-0x8]
  428165:	xor    ecx,esi
  428167:	add    ecx,edi
  428169:	shr    eax,cl
  42816b:	mov    DWORD PTR [ebp-0x4],eax
  42816e:	mov    eax,DWORD PTR [ebp+0x8]
  428171:	mov    cl,BYTE PTR [eax]
  428173:	mov    BYTE PTR [ebp+0xb],cl
  428176:	mov    cl,BYTE PTR [ebp+0xb]
  428179:	mov    edx,DWORD PTR [ebp-0x8]
  42817c:	movzx  ecx,cl
  42817f:	xor    ecx,edx
  428181:	mov    DWORD PTR [ebp+0x8],ecx
  428184:	mov    ecx,DWORD PTR [ebp-0x18]
  428187:	mov    edx,DWORD PTR [ebp+0x8]
  42818a:	xor    ecx,esi
  42818c:	add    ecx,edi
  42818e:	and    ecx,edx
  428190:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428197:	mov    edx,DWORD PTR [ebp-0x4]
  42819a:	xor    ecx,edx
  42819c:	mov    DWORD PTR [ebp-0x8],ecx
  42819f:	mov    ecx,DWORD PTR [ebp-0xc]
  4281a2:	xor    ecx,esi
  4281a4:	lea    eax,[eax+ecx*1+0x3272ef]
  4281ab:	mov    DWORD PTR [ebp+0x8],eax
  4281ae:	mov    eax,DWORD PTR [ebp-0xc]
  4281b1:	xor    eax,esi
  4281b3:	mov    ecx,0xffcd8d11
  4281b8:	sub    ecx,eax
  4281ba:	add    ecx,DWORD PTR [ebp-0x10]
  4281bd:	mov    DWORD PTR [ebp-0x10],ecx
  4281c0:	mov    eax,DWORD PTR [ebp-0x14]
  4281c3:	mov    ecx,DWORD PTR [ebp-0x10]
  4281c6:	xor    eax,esi
  4281c8:	add    eax,edi
  4281ca:	cmp    ecx,eax
  4281cc:	jne    0x42815f
  4281ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4281d1:	mov    ecx,DWORD PTR [ebp-0x8]
  4281d4:	xor    eax,esi
  4281d6:	add    eax,edi
  4281d8:	pop    edi
  4281d9:	pop    esi
  4281da:	xor    eax,ecx
  4281dc:	pop    ebx
  4281dd:	leave  
  4281de:	ret    0x4
  4281e1:	push   ebp
  4281e2:	mov    ebp,esp
  4281e4:	mov    eax,DWORD PTR [ebp+0x1c]
  4281e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4281ea:	mov    edx,DWORD PTR [ebp+0x10]
  4281ed:	mov    eax,DWORD PTR [eax+0x190]
  4281f3:	mov    eax,DWORD PTR [eax]
  4281f5:	sub    esp,0x64
  4281f8:	push   ebx
  4281f9:	push   esi
  4281fa:	push   edi
  4281fb:	mov    edi,0x75108a8
  428200:	xor    ecx,edi
  428202:	mov    ebx,0x3272ef
  428207:	add    ecx,ebx
  428209:	cmp    ecx,edx
  42820b:	jne    0x42821c
  42820d:	or     DWORD PTR ds:0x3750c3f,0x4263eb20
  428217:	jmp    0x428718
  42821c:	mov    ecx,DWORD PTR [ebp+0x8]
  42821f:	mov    esi,DWORD PTR [ebp+0x14]
  428222:	mov    edx,DWORD PTR [esi]
  428224:	xor    ecx,edi
  428226:	add    ecx,ebx
  428228:	cmp    edx,ecx
  42822a:	je     0x4286d3
  428230:	mov    ecx,DWORD PTR [ebp+0x1c]
  428233:	mov    DWORD PTR [ebp-0x1c],eax
  428236:	mov    DWORD PTR [ebp+0x1c],ecx
  428239:	mov    ecx,DWORD PTR [ebp+0x18]
  42823c:	mov    eax,DWORD PTR [esi]
  42823e:	mov    DWORD PTR [ebp-0x20],eax
  428241:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  428248:	mov    edx,0xf89c85ba
  42824d:	mov    DWORD PTR [ebp-0x8],edx
  428250:	mov    eax,DWORD PTR [ebp+0x1c]
  428253:	mov    DWORD PTR [ebp+0x1c],eax
  428256:	mov    eax,DWORD PTR [ebp+0x1c]
  428259:	mov    eax,DWORD PTR [eax+0x190]
  42825f:	mov    eax,DWORD PTR [eax]
  428261:	mov    DWORD PTR [ebp-0x24],ecx
  428264:	mov    ecx,DWORD PTR [ebp+0x1c]
  428267:	mov    ecx,DWORD PTR [ecx+0x190]
  42826d:	mov    ecx,DWORD PTR [ecx]
  42826f:	add    ecx,DWORD PTR [eax+0x3c]
  428272:	mov    DWORD PTR [ebp+0x10],ecx
  428275:	mov    eax,DWORD PTR [ebp+0x8]
  428278:	xor    eax,edi
  42827a:	add    eax,ebx
  42827c:	mov    DWORD PTR [ebp-0x4],eax
  42827f:	mov    eax,DWORD PTR [ebp+0x8]
  428282:	xor    eax,edi
  428284:	add    eax,ebx
  428286:	mov    DWORD PTR [ebp+0x18],eax
  428289:	mov    eax,DWORD PTR [ebp+0x10]
  42828c:	mov    eax,DWORD PTR [eax+0x50]
  42828f:	sub    eax,0xc
  428292:	mov    DWORD PTR [ebp-0x28],eax
  428295:	mov    eax,DWORD PTR [ebp+0x10]
  428298:	mov    eax,DWORD PTR [eax+0x38]
  42829b:	mov    ecx,DWORD PTR [ebp+0x10]
  42829e:	dec    eax
  42829f:	test   DWORD PTR [ecx+0x54],eax
  4282a2:	mov    eax,DWORD PTR [ebp+0x10]
  4282a5:	je     0x4282bf
  4282a7:	mov    eax,DWORD PTR [eax+0x38]
  4282aa:	mov    ecx,DWORD PTR [ebp+0x10]
  4282ad:	mov    ecx,DWORD PTR [ecx+0x54]
  4282b0:	dec    eax
  4282b1:	not    eax
  4282b3:	and    ecx,eax
  4282b5:	mov    eax,DWORD PTR [ebp+0x10]
  4282b8:	mov    eax,DWORD PTR [eax+0x38]
  4282bb:	add    eax,ecx
  4282bd:	jmp    0x4282c2
  4282bf:	mov    eax,DWORD PTR [eax+0x54]
  4282c2:	mov    DWORD PTR [ebp+0x1c],eax
  4282c5:	mov    eax,DWORD PTR [ebp+0x8]
  4282c8:	xor    eax,edi
  4282ca:	add    eax,ebx
  4282cc:	mov    DWORD PTR [ebp+0x18],eax
  4282cf:	mov    eax,DWORD PTR [ebp+0x8]
  4282d2:	xor    eax,edi
  4282d4:	add    eax,ebx
  4282d6:	mov    DWORD PTR [ebp+0x18],eax
  4282d9:	mov    eax,DWORD PTR [ebp+0x8]
  4282dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4282df:	xor    eax,edi
  4282e1:	add    eax,ebx
  4282e3:	mov    DWORD PTR [ecx],eax
  4282e5:	mov    DWORD PTR [ebp+0x18],edx
  4282e8:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  4282ef:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4282f6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4282fd:	mov    eax,DWORD PTR [ebp-0x8]
  428300:	mov    ecx,DWORD PTR [ebp+0x1c]
  428303:	xor    eax,edi
  428305:	add    eax,ebx
  428307:	imul   eax,ecx
  42830a:	mov    ecx,DWORD PTR [ebp+0x8]
  42830d:	mov    edx,DWORD PTR [ebp-0x28]
  428310:	xor    ecx,edi
  428312:	lea    ecx,[ecx+edx*1+0x3272ef]
  428319:	cmp    eax,ecx
  42831b:	jae    0x4286cc
  428321:	mov    eax,DWORD PTR [ebp+0x8]
  428324:	xor    eax,edi
  428326:	add    eax,ebx
  428328:	mov    DWORD PTR [ebp+0x18],eax
  42832b:	mov    eax,DWORD PTR [ebp+0x1c]
  42832e:	add    eax,DWORD PTR [ebp-0x1c]
  428331:	mov    DWORD PTR [ebp-0x4],eax
  428334:	push   DWORD PTR [ebp-0x4]
  428337:	mov    esi,DWORD PTR [ebp-0x1c]
  42833a:	mov    ecx,DWORD PTR [ebp+0x10]
  42833d:	call   0x427491
  428342:	mov    DWORD PTR [ebp+0xc],eax
  428345:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  42834c:	mov    eax,DWORD PTR [ebp-0x18]
  42834f:	xor    eax,edi
  428351:	lea    ecx,[ebp-0x40]
  428354:	add    eax,ebx
  428356:	push   ecx
  428357:	call   0x427a23
  42835c:	mov    eax,DWORD PTR [ebp+0xc]
  42835f:	test   eax,eax
  428361:	je     0x4283b1
  428363:	mov    eax,DWORD PTR [ebp-0x18]
  428366:	xor    eax,edi
  428368:	add    eax,ebx
  42836a:	push   eax
  42836b:	push   DWORD PTR [ebp+0xc]
  42836e:	lea    eax,[ebp-0x40]
  428371:	push   eax
  428372:	call   0x427919
  428377:	mov    eax,DWORD PTR [ebp-0x4]
  42837a:	mov    DWORD PTR [ebp-0x18],eax
  42837d:	mov    eax,DWORD PTR [ebp-0x18]
  428380:	mov    ecx,DWORD PTR [ebp-0x1c]
  428383:	sub    eax,ecx
  428385:	mov    DWORD PTR [ebp-0x18],eax
  428388:	mov    eax,DWORD PTR [ebp+0xc]
  42838b:	mov    ecx,DWORD PTR [ebp+0xc]
  42838e:	mov    eax,DWORD PTR [eax+0x10]
  428391:	add    eax,DWORD PTR [ecx+0xc]
  428394:	mov    ecx,DWORD PTR [ebp-0x18]
  428397:	cmp    ecx,eax
  428399:	jb     0x4283b1
  42839b:	mov    eax,DWORD PTR [ebp+0xc]
  42839e:	mov    eax,DWORD PTR [eax+0xc]
  4283a1:	mov    ecx,DWORD PTR [ebp+0xc]
  4283a4:	add    eax,DWORD PTR [ecx+0x8]
  4283a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4283aa:	sub    eax,ecx
  4283ac:	jmp    0x42869f
  4283b1:	push   0xc
  4283b3:	push   DWORD PTR [ebp-0x4]
  4283b6:	lea    eax,[ebp-0x4c]
  4283b9:	push   eax
  4283ba:	call   0x427919
  4283bf:	mov    eax,0xf89c85b9
  4283c4:	mov    DWORD PTR [ebp-0x2c],eax
  4283c7:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4283ce:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4283d5:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  4283dc:	lea    ecx,[ebp-0x2c]
  4283df:	mov    DWORD PTR [ebp-0xc],ecx
  4283e2:	lea    ecx,[ebp-0x30]
  4283e5:	mov    DWORD PTR [ebp-0x10],ecx
  4283e8:	lea    ecx,[ebp-0x34]
  4283eb:	mov    DWORD PTR [ebp+0xc],ecx
  4283ee:	lea    ecx,[ebp-0x38]
  4283f1:	mov    DWORD PTR [ebp-0x14],ecx
  4283f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4283f7:	xor    ecx,edi
  4283f9:	add    ecx,ebx
  4283fb:	mov    DWORD PTR [ebp-0x18],ecx
  4283fe:	jmp    0x4285fa
  428403:	cmp    eax,0xf89c85bb
  428408:	je     0x42860c
  42840e:	mov    ecx,DWORD PTR [ebp-0x8]
  428411:	xor    ecx,edi
  428413:	mov    esi,eax
  428415:	add    ecx,ebx
  428417:	mov    DWORD PTR [ebp+0x18],ecx
  42841a:	mov    eax,DWORD PTR [ebp-0x18]
  42841d:	xor    esi,edi
  42841f:	lea    eax,[eax+esi*1+0x3272ef]
  428426:	mov    DWORD PTR [ebp-0x18],eax
  428429:	mov    eax,DWORD PTR [ebp-0x8]
  42842c:	mov    ecx,DWORD PTR [ebp-0x18]
  42842f:	xor    eax,edi
  428431:	add    eax,ebx
  428433:	cmp    ecx,eax
  428435:	jne    0x42844a
  428437:	mov    eax,DWORD PTR [ebp+0x8]
  42843a:	xor    eax,edi
  42843c:	add    eax,ebx
  42843e:	push   eax
  42843f:	push   0xc
  428441:	lea    eax,[ebp-0x4c]
  428444:	push   eax
  428445:	call   0x427efe
  42844a:	mov    eax,DWORD PTR [ebp-0xc]
  42844d:	mov    eax,DWORD PTR [eax]
  42844f:	xor    eax,edi
  428451:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428458:	mov    ecx,DWORD PTR [ebp+0x8]
  42845b:	xor    ecx,edi
  42845d:	movzx  eax,al
  428460:	add    ecx,ebx
  428462:	cmp    eax,ecx
  428464:	je     0x4285e2
  42846a:	mov    eax,DWORD PTR [ebp-0x10]
  42846d:	mov    eax,DWORD PTR [eax]
  42846f:	xor    eax,edi
  428471:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428478:	mov    ecx,DWORD PTR [ebp+0x8]
  42847b:	xor    ecx,edi
  42847d:	movzx  eax,al
  428480:	add    ecx,ebx
  428482:	cmp    eax,ecx
  428484:	je     0x4285e2
  42848a:	mov    eax,DWORD PTR [ebp+0xc]
  42848d:	mov    eax,DWORD PTR [eax]
  42848f:	xor    eax,edi
  428491:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428498:	mov    ecx,DWORD PTR [ebp+0x8]
  42849b:	xor    ecx,edi
  42849d:	movzx  eax,al
  4284a0:	add    ecx,ebx
  4284a2:	cmp    eax,ecx
  4284a4:	je     0x4285e2
  4284aa:	mov    eax,DWORD PTR [ebp-0x14]
  4284ad:	mov    eax,DWORD PTR [eax]
  4284af:	xor    eax,edi
  4284b1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4284b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4284bb:	xor    ecx,edi
  4284bd:	movzx  eax,al
  4284c0:	add    ecx,ebx
  4284c2:	cmp    eax,ecx
  4284c4:	je     0x4285e2
  4284ca:	mov    eax,DWORD PTR [ebp-0x10]
  4284cd:	mov    eax,DWORD PTR [eax]
  4284cf:	xor    eax,edi
  4284d1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4284d8:	mov    ecx,DWORD PTR [ebp-0xc]
  4284db:	mov    ecx,DWORD PTR [ecx]
  4284dd:	xor    ecx,edi
  4284df:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4284e6:	xor    al,cl
  4284e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4284eb:	mov    ecx,DWORD PTR [ecx]
  4284ed:	xor    ecx,edi
  4284ef:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4284f6:	or     al,cl
  4284f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4284fb:	mov    ecx,DWORD PTR [ecx]
  4284fd:	xor    ecx,edi
  4284ff:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  428506:	cmp    cl,al
  428508:	jne    0x4285e2
  42850e:	mov    eax,DWORD PTR [ebp+0xc]
  428511:	mov    eax,DWORD PTR [eax]
  428513:	xor    eax,edi
  428515:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  42851c:	mov    ecx,DWORD PTR [ebp-0x10]
  42851f:	mov    ecx,DWORD PTR [ecx]
  428521:	xor    ecx,edi
  428523:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42852a:	xor    al,cl
  42852c:	mov    ecx,DWORD PTR [ebp-0x14]
  42852f:	mov    ecx,DWORD PTR [ecx]
  428531:	xor    ecx,edi
  428533:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42853a:	or     al,cl
  42853c:	mov    ecx,DWORD PTR [ebp-0x10]
  42853f:	mov    ecx,DWORD PTR [ecx]
  428541:	xor    ecx,edi
  428543:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  42854a:	cmp    cl,al
  42854c:	jne    0x4285e2
  428552:	mov    eax,DWORD PTR [ebp-0x14]
  428555:	mov    eax,DWORD PTR [eax]
  428557:	xor    eax,edi
  428559:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428560:	mov    ecx,DWORD PTR [ebp+0xc]
  428563:	mov    ecx,DWORD PTR [ecx]
  428565:	xor    ecx,edi
  428567:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42856e:	xor    al,cl
  428570:	mov    ecx,DWORD PTR [ebp-0xc]
  428573:	mov    ecx,DWORD PTR [ecx]
  428575:	xor    ecx,edi
  428577:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42857e:	or     al,cl
  428580:	mov    ecx,DWORD PTR [ebp+0xc]
  428583:	mov    ecx,DWORD PTR [ecx]
  428585:	xor    ecx,edi
  428587:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  42858e:	cmp    cl,al
  428590:	jne    0x4285e2
  428592:	mov    eax,DWORD PTR [ebp-0x14]
  428595:	mov    eax,DWORD PTR [eax]
  428597:	xor    eax,edi
  428599:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4285a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4285a3:	mov    ecx,DWORD PTR [ecx]
  4285a5:	xor    ecx,edi
  4285a7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4285ae:	xor    al,cl
  4285b0:	mov    ecx,DWORD PTR [ebp-0x10]
  4285b3:	mov    ecx,DWORD PTR [ecx]
  4285b5:	xor    ecx,edi
  4285b7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4285be:	or     al,cl
  4285c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4285c3:	mov    ecx,DWORD PTR [ecx]
  4285c5:	xor    ecx,edi
  4285c7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4285ce:	cmp    cl,al
  4285d0:	jne    0x4285e2
  4285d2:	lea    eax,[ebp-0x4c]
  4285d5:	push   eax
  4285d6:	call   0x42809d
  4285db:	mov    ecx,DWORD PTR [ebp-0x44]
  4285de:	cmp    eax,ecx
  4285e0:	je     0x4285ec
  4285e2:	mov    eax,DWORD PTR [ebp+0x8]
  4285e5:	xor    eax,edi
  4285e7:	add    eax,ebx
  4285e9:	mov    DWORD PTR [ebp+0x18],eax
  4285ec:	mov    eax,DWORD PTR [ebp-0x8]
  4285ef:	xor    eax,edi
  4285f1:	lea    eax,[eax+esi*1+0x3272ef]
  4285f8:	xor    eax,edi
  4285fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4285fd:	mov    edx,DWORD PTR [ebp+0x18]
  428600:	xor    ecx,edi
  428602:	add    ecx,ebx
  428604:	cmp    edx,ecx
  428606:	je     0x428403
  42860c:	mov    eax,DWORD PTR [ebp+0x8]
  42860f:	mov    ecx,DWORD PTR [ebp+0x18]
  428612:	xor    eax,edi
  428614:	add    eax,ebx
  428616:	cmp    ecx,eax
  428618:	jne    0x42862b
  42861a:	mov    eax,DWORD PTR [ebp-0x8]
  42861d:	mov    ecx,DWORD PTR [ebp+0x1c]
  428620:	xor    eax,edi
  428622:	lea    eax,[eax+ecx*1+0x3272ef]
  428629:	jmp    0x4286a2
  42862b:	push   0x18
  42862d:	push   DWORD PTR [ebp-0x4]
  428630:	lea    eax,[ebp-0x64]
  428633:	push   eax
  428634:	call   0x427919
  428639:	mov    eax,DWORD PTR [ebp+0x8]
  42863c:	mov    ecx,DWORD PTR [ebp-0x18]
  42863f:	xor    eax,edi
  428641:	add    eax,ebx
  428643:	cmp    eax,ecx
  428645:	je     0x42865a
  428647:	mov    eax,DWORD PTR [ebp+0x8]
  42864a:	xor    eax,edi
  42864c:	add    eax,ebx
  42864e:	push   eax
  42864f:	push   0x18
  428651:	lea    eax,[ebp-0x64]
  428654:	push   eax
  428655:	call   0x427efe
  42865a:	mov    eax,DWORD PTR [ebp-0x4]
  42865d:	add    eax,0x18
  428660:	mov    DWORD PTR [ebp+0x18],eax
  428663:	push   DWORD PTR [ebp-0x50]
  428666:	push   DWORD PTR [ebp+0x18]
  428669:	mov    eax,DWORD PTR [ebp-0x54]
  42866c:	add    eax,DWORD PTR [ebp-0x20]
  42866f:	push   eax
  428670:	call   0x427919
  428675:	mov    eax,DWORD PTR [ebp+0x8]
  428678:	mov    ecx,DWORD PTR [ebp-0x18]
  42867b:	xor    eax,edi
  42867d:	add    eax,ebx
  42867f:	cmp    eax,ecx
  428681:	je     0x428694
  428683:	push   0x0
  428685:	push   DWORD PTR [ebp-0x50]
  428688:	mov    eax,DWORD PTR [ebp-0x54]
  42868b:	add    eax,DWORD PTR [ebp-0x20]
  42868e:	push   eax
  42868f:	call   0x427efe
  428694:	mov    eax,DWORD PTR [ebp-0x24]
  428697:	mov    ecx,DWORD PTR [ebp-0x50]
  42869a:	add    DWORD PTR [eax],ecx
  42869c:	mov    eax,DWORD PTR [ebp-0x50]
  42869f:	add    eax,DWORD PTR [ebp+0x1c]
  4286a2:	mov    DWORD PTR [ebp+0x1c],eax
  4286a5:	mov    eax,DWORD PTR [ebp-0x8]
  4286a8:	mov    ecx,DWORD PTR [ebp+0x1c]
  4286ab:	xor    eax,edi
  4286ad:	add    eax,ebx
  4286af:	imul   eax,ecx
  4286b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4286b5:	mov    edx,DWORD PTR [ebp-0x28]
  4286b8:	xor    ecx,edi
  4286ba:	lea    ecx,[ecx+edx*1+0x3272ef]
  4286c1:	cmp    eax,ecx
  4286c3:	jb     0x428321
  4286c9:	mov    esi,DWORD PTR [ebp+0x14]
  4286cc:	mov    eax,DWORD PTR [ebp-0x20]
  4286cf:	mov    DWORD PTR [esi],eax
  4286d1:	jmp    0x428718
  4286d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4286d6:	mov    edx,DWORD PTR [ebp+0xc]
  4286d9:	xor    ecx,edi
  4286db:	xor    edx,edi
  4286dd:	add    ecx,ebx
  4286df:	add    edx,ebx
  4286e1:	cmp    ecx,edx
  4286e3:	jne    0x4286f7
  4286e5:	mov    eax,ds:0x7f642dd0
  4286ea:	imul   eax,eax,0x9f15fccf
  4286f0:	mov    ds:0x7f642dd0,eax
  4286f5:	jmp    0x428718
  4286f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4286fa:	xor    ecx,edi
  4286fc:	add    ecx,ebx
  4286fe:	cmp    eax,ecx
  428700:	je     0x42870e
  428702:	sub    DWORD PTR ds:0xf861e30,0x709bead0
  42870c:	jmp    0x428718
  42870e:	and    DWORD PTR ds:0x3343fad0,0x5265ec3f
  428718:	pop    edi
  428719:	pop    esi
  42871a:	pop    ebx
  42871b:	leave  
  42871c:	ret    0x18
  42871f:	push   ebp
  428720:	mov    ebp,esp
  428722:	and    esp,0xfffffff8
  428725:	mov    eax,DWORD PTR [ebp+0x20]
  428728:	sub    esp,0x14
  42872b:	push   ebx
  42872c:	mov    ebx,DWORD PTR [ebp+0x14]
  42872f:	push   esi
  428730:	push   edi
  428731:	cmp    eax,0xf89c85b9
  428736:	jne    0x428742
  428738:	push   0xf89c85ba
  42873d:	jmp    0x428874
  428742:	mov    eax,DWORD PTR [ebp+0x20]
  428745:	cmp    eax,0xf89c85ba
  42874a:	jne    0x428756
  42874c:	push   0xf89c85bb
  428751:	jmp    0x428874
  428756:	mov    eax,DWORD PTR [ebp+0x20]
  428759:	cmp    eax,0xf89c85bb
  42875e:	jne    0x42876a
  428760:	push   0xf89c85bc
  428765:	jmp    0x428874
  42876a:	mov    eax,DWORD PTR [ebp+0x20]
  42876d:	cmp    eax,0xf89c85bc
  428772:	jne    0x42877e
  428774:	push   0xf89c85bd
  428779:	jmp    0x428874
  42877e:	mov    ecx,DWORD PTR [ebp+0x20]
  428781:	mov    eax,0xf89c85b0
  428786:	cmp    ecx,eax
  428788:	jne    0x428844
  42878e:	mov    eax,DWORD PTR [ebp+0x10]
  428791:	mov    DWORD PTR [esp+0xc],eax
  428795:	mov    eax,DWORD PTR [ebp+0x18]
  428798:	mov    DWORD PTR [esp+0x14],eax
  42879c:	mov    eax,DWORD PTR [ebp+0xc]
  42879f:	mov    DWORD PTR [esp+0x18],eax
  4287a3:	mov    eax,DWORD PTR [ebp+0x8]
  4287a6:	mov    DWORD PTR [esp+0x10],eax
  4287aa:	mov    eax,DWORD PTR [esp+0x10]
  4287ae:	mov    ecx,DWORD PTR [esp+0x14]
  4287b2:	mov    edi,0x75108a8
  4287b7:	xor    eax,edi
  4287b9:	mov    esi,0x3272ef
  4287be:	add    eax,esi
  4287c0:	mov    DWORD PTR [ecx],eax
  4287c2:	mov    eax,DWORD PTR [esp+0xc]
  4287c6:	mov    eax,DWORD PTR [eax+0x194]
  4287cc:	mov    ecx,DWORD PTR [eax]
  4287ce:	mov    eax,DWORD PTR [esp+0xc]
  4287d2:	mov    eax,DWORD PTR [eax+0x194]
  4287d8:	mov    eax,DWORD PTR [eax]
  4287da:	add    eax,DWORD PTR [ecx+0x3c]
  4287dd:	mov    ecx,DWORD PTR [esp+0xc]
  4287e1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4287e7:	mov    ecx,DWORD PTR [ecx+0x14]
  4287ea:	push   0x4
  4287ec:	push   0x3000
  4287f1:	push   DWORD PTR [eax+0x50]
  4287f4:	push   0x0
  4287f6:	call   ecx
  4287f8:	mov    DWORD PTR [ebx],eax
  4287fa:	mov    eax,DWORD PTR [esp+0x10]
  4287fe:	push   DWORD PTR [esp+0xc]
  428802:	xor    eax,edi
  428804:	add    eax,esi
  428806:	mov    DWORD PTR [esp+0x20],eax
  42880a:	lea    eax,[esp+0x20]
  42880e:	push   eax
  42880f:	push   ebx
  428810:	push   DWORD PTR [esp+0x20]
  428814:	push   DWORD PTR [esp+0x28]
  428818:	push   DWORD PTR [esp+0x24]
  42881c:	call   0x4281e1
  428821:	mov    eax,DWORD PTR [esp+0x10]
  428825:	mov    ecx,DWORD PTR [ebx]
  428827:	xor    eax,edi
  428829:	add    eax,esi
  42882b:	cmp    ecx,eax
  42882d:	je     0x42888b
  42882f:	mov    eax,DWORD PTR [esp+0x18]
  428833:	mov    ecx,DWORD PTR [esp+0x14]
  428837:	xor    eax,edi
  428839:	add    eax,esi
  42883b:	imul   eax,DWORD PTR [esp+0x1c]
  428840:	mov    DWORD PTR [ecx],eax
  428842:	jmp    0x42888b
  428844:	mov    ecx,DWORD PTR [ebp+0x20]
  428847:	cmp    ecx,0xf89c85bd
  42884d:	jne    0x428856
  42884f:	push   0xf89c85be
  428854:	jmp    0x428874
  428856:	mov    ecx,DWORD PTR [ebp+0x20]
  428859:	cmp    ecx,0xf89c85be
  42885f:	jne    0x428868
  428861:	push   0xf89c85bf
  428866:	jmp    0x428874
  428868:	mov    ecx,DWORD PTR [ebp+0x20]
  42886b:	cmp    ecx,0xf89c85bf
  428871:	jne    0x42888b
  428873:	push   eax
  428874:	push   DWORD PTR [ebp+0x1c]
  428877:	push   DWORD PTR [ebp+0x18]
  42887a:	push   ebx
  42887b:	push   DWORD PTR [ebp+0x10]
  42887e:	push   DWORD PTR [ebp+0xc]
  428881:	push   DWORD PTR [ebp+0x8]
  428884:	call   0x42871f
  428889:	mov    DWORD PTR [ebx],eax
  42888b:	mov    eax,DWORD PTR [ebx]
  42888d:	pop    edi
  42888e:	pop    esi
  42888f:	pop    ebx
  428890:	mov    esp,ebp
  428892:	pop    ebp
  428893:	ret    0x1c
  428896:	push   ebp
  428897:	mov    ebp,esp
  428899:	sub    esp,0xc
  42889c:	mov    eax,0xf89c85b9
  4288a1:	mov    DWORD PTR [ebp-0x8],eax
  4288a4:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  4288ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4288ae:	xor    ecx,0x75108a8
  4288b4:	add    ecx,0x3272ef
  4288ba:	mov    DWORD PTR [ebp-0x4],ecx
  4288bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4288c0:	push   eax
  4288c1:	mov    DWORD PTR [ebp+0xc],ecx
  4288c4:	push   DWORD PTR [ebp+0xc]
  4288c7:	lea    eax,[ebp-0x4]
  4288ca:	push   DWORD PTR [ebp+0x8]
  4288cd:	push   eax
  4288ce:	push   DWORD PTR [ebp+0xc]
  4288d1:	push   DWORD PTR [ebp-0xc]
  4288d4:	push   DWORD PTR [ebp-0x8]
  4288d7:	call   0x42871f
  4288dc:	mov    DWORD PTR [ebp-0x4],eax
  4288df:	mov    eax,DWORD PTR [ebp-0x4]
  4288e2:	leave  
  4288e3:	ret    0x8
