
436c2a5b8f6ef881cd9db29793785c453849adc2f73a199c12a1ce3463b7f1e0.exe:     file format pei-i386


Disassembly of section .text:

65001000 <.text>:
65001000:	mov    eax,DWORD PTR [ecx+0x4]
65001003:	push   ebp
65001004:	push   esi
65001005:	mov    esi,DWORD PTR [eax+0x4]
65001008:	cmp    BYTE PTR [esi+0x45],0x0
6500100c:	mov    ebp,eax
6500100e:	jne    0x65001056
65001010:	push   ebx
65001011:	push   edi
65001012:	mov    edi,DWORD PTR [esp+0x14]
65001016:	lea    ebx,[edi+0x4]
65001019:	lea    esp,[esp+0x0]
65001020:	cmp    DWORD PTR [edi+0x18],0x8
65001024:	mov    edx,DWORD PTR [edi+0x14]
65001027:	lea    ecx,[esi+0xc]
6500102a:	jb     0x65001030
6500102c:	mov    eax,DWORD PTR [ebx]
6500102e:	jmp    0x65001032
65001030:	mov    eax,ebx
65001032:	push   edx
65001033:	push   eax
65001034:	mov    eax,DWORD PTR [ecx+0x14]
65001037:	push   eax
65001038:	push   0x0
6500103a:	call   0x6500a250
6500103f:	test   eax,eax
65001041:	jge    0x65001048
65001043:	mov    esi,DWORD PTR [esi+0x8]
65001046:	jmp    0x6500104c
65001048:	mov    ebp,esi
6500104a:	mov    esi,DWORD PTR [esi]
6500104c:	cmp    BYTE PTR [esi+0x45],0x0
65001050:	je     0x65001020
65001052:	pop    edi
65001053:	mov    eax,ebp
65001055:	pop    ebx
65001056:	pop    esi
65001057:	pop    ebp
65001058:	ret    0x4
6500105b:	int3   
6500105c:	int3   
6500105d:	int3   
6500105e:	int3   
6500105f:	int3   
65001060:	mov    DWORD PTR [ecx],0x65024bf8
65001066:	jmp    0x65012036
6500106b:	int3   
6500106c:	int3   
6500106d:	int3   
6500106e:	int3   
6500106f:	int3   
65001070:	push   esi
65001071:	mov    esi,ecx
65001073:	mov    DWORD PTR [esi],0x65024bf8
65001079:	call   0x65012036
6500107e:	test   BYTE PTR [esp+0x8],0x1
65001083:	je     0x6500108e
65001085:	push   esi
65001086:	call   0x65011f62
6500108b:	add    esp,0x4
6500108e:	mov    eax,esi
65001090:	pop    esi
65001091:	ret    0x4
65001094:	int3   
65001095:	int3   
65001096:	int3   
65001097:	int3   
65001098:	int3   
65001099:	int3   
6500109a:	int3   
6500109b:	int3   
6500109c:	int3   
6500109d:	int3   
6500109e:	int3   
6500109f:	int3   
650010a0:	mov    eax,DWORD PTR [esp+0x4]
650010a4:	push   0x65029e14
650010a9:	lea    ecx,[esp+0x8]
650010ad:	push   ecx
650010ae:	mov    DWORD PTR [esp+0xc],eax
650010b2:	call   0x65012366
650010b7:	int3   
650010b8:	int3   
650010b9:	int3   
650010ba:	int3   
650010bb:	int3   
650010bc:	int3   
650010bd:	int3   
650010be:	int3   
650010bf:	int3   
650010c0:	push   ecx
650010c1:	push   ebx
650010c2:	push   esi
650010c3:	push   edi
650010c4:	push   0x2710
650010c9:	call   DWORD PTR ds:0x6502404c
650010cf:	mov    esi,DWORD PTR [esp+0x14]
650010d3:	mov    ebx,DWORD PTR ds:0x65024088
650010d9:	mov    DWORD PTR [esp+0xc],0x0
650010e1:	xor    edi,edi
650010e3:	push   0x0
650010e5:	lea    eax,[esp+0x18]
650010e9:	push   eax
650010ea:	push   0x4
650010ec:	lea    ecx,[esp+0x18]
650010f0:	push   ecx
650010f1:	push   esi
650010f2:	call   ebx
650010f4:	test   eax,eax
650010f6:	je     0x65001100
650010f8:	add    edi,0x1
650010fb:	cmp    edi,0xa
650010fe:	jne    0x650010e3
65001100:	test   esi,esi
65001102:	je     0x6500111a
65001104:	call   DWORD PTR ds:0x65024044
6500110a:	push   esi
6500110b:	mov    edi,eax
6500110d:	call   DWORD PTR ds:0x65024040
65001113:	push   edi
65001114:	call   DWORD PTR ds:0x6502405c
6500111a:	pop    edi
6500111b:	pop    esi
6500111c:	xor    eax,eax
6500111e:	pop    ebx
6500111f:	pop    ecx
65001120:	ret    0x4
65001123:	int3   
65001124:	int3   
65001125:	int3   
65001126:	int3   
65001127:	int3   
65001128:	int3   
65001129:	int3   
6500112a:	int3   
6500112b:	int3   
6500112c:	int3   
6500112d:	int3   
6500112e:	int3   
6500112f:	int3   
65001130:	sub    esp,0x14
65001133:	push   ebx
65001134:	mov    ebx,DWORD PTR ds:0x65024048
6500113a:	push   esi
6500113b:	mov    esi,DWORD PTR [esp+0x20]
6500113f:	push   edi
65001140:	mov    edi,DWORD PTR [esi+0xc]
65001143:	push   0x2
65001145:	push   0x0
65001147:	push   0x0
65001149:	lea    eax,[esp+0x18]
6500114d:	push   eax
6500114e:	mov    DWORD PTR [esp+0x1c],0x0
65001156:	call   ebx
65001158:	push   eax
65001159:	push   edi
6500115a:	call   ebx
6500115c:	push   eax
6500115d:	call   DWORD PTR ds:0x6502407c
65001163:	test   eax,eax
65001165:	je     0x650011f9
6500116b:	mov    ecx,DWORD PTR [esp+0xc]
6500116f:	push   0x0
65001171:	push   0x0
65001173:	push   ecx
65001174:	push   0x650010c0
65001179:	push   0x0
6500117b:	push   0x0
6500117d:	call   DWORD PTR ds:0x6502406c
65001183:	push   0x0
65001185:	lea    edx,[esp+0x18]
65001189:	push   edx
6500118a:	push   0x4
6500118c:	mov    edi,eax
6500118e:	mov    eax,DWORD PTR [esi+0x8]
65001191:	lea    ecx,[esp+0x30]
65001195:	push   ecx
65001196:	push   eax
65001197:	mov    DWORD PTR [esp+0x24],edi
6500119b:	mov    DWORD PTR [esp+0x38],0x0
650011a3:	call   DWORD PTR ds:0x65024080
650011a9:	test   eax,eax
650011ab:	je     0x650011df
650011ad:	cmp    DWORD PTR [esp+0x14],0x4
650011b2:	jne    0x650011df
650011b4:	mov    edx,DWORD PTR [esp+0x24]
650011b8:	mov    eax,DWORD PTR [esi+0x4]
650011bb:	push   0x0
650011bd:	lea    ecx,[esp+0x20]
650011c1:	push   ecx
650011c2:	mov    DWORD PTR [esp+0x20],edx
650011c6:	push   0x4
650011c8:	lea    edx,[esp+0x24]
650011cc:	push   edx
650011cd:	push   eax
650011ce:	call   DWORD PTR ds:0x65024088
650011d4:	lea    ecx,[esp+0x10]
650011d8:	call   0x650016e0
650011dd:	jmp    0x650011f9
650011df:	test   edi,edi
650011e1:	je     0x650011f9
650011e3:	call   DWORD PTR ds:0x65024044
650011e9:	push   edi
650011ea:	mov    ebx,eax
650011ec:	call   DWORD PTR ds:0x65024040
650011f2:	push   ebx
650011f3:	call   DWORD PTR ds:0x6502405c
650011f9:	call   0x65001730
650011fe:	push   esi
650011ff:	call   0x65011f62
65001204:	add    esp,0x4
65001207:	pop    edi
65001208:	pop    esi
65001209:	xor    eax,eax
6500120b:	pop    ebx
6500120c:	add    esp,0x14
6500120f:	ret    0x4
65001212:	int3   
65001213:	int3   
65001214:	int3   
65001215:	int3   
65001216:	int3   
65001217:	int3   
65001218:	int3   
65001219:	int3   
6500121a:	int3   
6500121b:	int3   
6500121c:	int3   
6500121d:	int3   
6500121e:	int3   
6500121f:	int3   
65001220:	push   0xffffffff
65001222:	push   0x65022599
65001227:	mov    eax,fs:0x0
6500122d:	push   eax
6500122e:	sub    esp,0x30
65001231:	mov    eax,ds:0x6502c09c
65001236:	xor    eax,esp
65001238:	mov    DWORD PTR [esp+0x2c],eax
6500123c:	push   ebx
6500123d:	push   ebp
6500123e:	push   esi
6500123f:	push   edi
65001240:	mov    eax,ds:0x6502c09c
65001245:	xor    eax,esp
65001247:	push   eax
65001248:	lea    eax,[esp+0x44]
6500124c:	mov    fs:0x0,eax
65001252:	mov    esi,ecx
65001254:	xor    ebx,ebx
65001256:	mov    DWORD PTR [esp+0x1c],ebx
6500125a:	mov    edi,edx
6500125c:	mov    DWORD PTR [esi+0x18],0xf
65001263:	mov    DWORD PTR [esi+0x14],ebx
65001266:	mov    DWORD PTR [esp+0x20],esi
6500126a:	mov    DWORD PTR [esp+0x18],edi
6500126e:	mov    BYTE PTR [esi+0x4],bl
65001271:	mov    DWORD PTR [esp+0x4c],ebx
65001275:	mov    ebp,0x1
6500127a:	mov    DWORD PTR [esp+0x1c],ebp
6500127e:	call   DWORD PTR ds:0x65024084
65001284:	xor    ecx,ecx
65001286:	cmp    ecx,ebx
65001288:	jle    0x65001297
6500128a:	cmp    WORD PTR [eax+ecx*2-0x2],bx
6500128f:	jne    0x65001297
65001291:	cmp    WORD PTR [eax+ecx*2],bx
65001295:	je     0x6500129b
65001297:	add    ecx,ebp
65001299:	jmp    0x65001286
6500129b:	add    ecx,ecx
6500129d:	push   ecx
6500129e:	push   eax
6500129f:	lea    ecx,[esp+0x2c]
650012a3:	mov    DWORD PTR [esp+0x44],0xf
650012ab:	mov    DWORD PTR [esp+0x40],ebx
650012af:	mov    BYTE PTR [esp+0x30],bl
650012b3:	call   0x650018c0
650012b8:	push   ebx
650012b9:	lea    edx,[esp+0x28]
650012bd:	push   edx
650012be:	or     eax,0xffffffff
650012c1:	mov    DWORD PTR [esp+0x54],ebp
650012c5:	call   0x65001a30
650012ca:	mov    BYTE PTR [esp+0x4c],bl
650012ce:	cmp    DWORD PTR [esp+0x3c],0x10
650012d3:	jb     0x650012e2
650012d5:	mov    eax,DWORD PTR [esp+0x28]
650012d9:	push   eax
650012da:	call   0x65011f62
650012df:	add    esp,0x4
650012e2:	mov    edx,DWORD PTR ds:0x6502d560
650012e8:	mov    eax,DWORD PTR [edx+0xc]
650012eb:	mov    ecx,0x6502d560
650012f0:	call   eax
650012f2:	add    eax,0x10
650012f5:	mov    DWORD PTR [esp+0x14],eax
650012f9:	mov    DWORD PTR [esp+0x4c],0x2
65001301:	mov    eax,DWORD PTR [edi]
65001303:	push   eax
65001304:	lea    ecx,[esp+0x18]
65001308:	push   0x650266b0
6500130d:	push   ecx
6500130e:	call   0x65001da0
65001313:	mov    edi,DWORD PTR [esp+0x20]
65001317:	mov    ebp,DWORD PTR [edi-0xc]
6500131a:	add    esp,0xc
6500131d:	cmp    DWORD PTR [edi-0x4],0x1
65001321:	jle    0x65001333
65001323:	mov    edx,ebp
65001325:	push   edx
65001326:	lea    ecx,[esp+0x18]
6500132a:	call   0x650019b0
6500132f:	mov    edi,DWORD PTR [esp+0x14]
65001333:	lea    eax,[ebp+ebp*1+0x2]
65001337:	push   eax
65001338:	push   edi
65001339:	lea    ecx,[esp+0x2c]
6500133d:	mov    DWORD PTR [esp+0x44],0xf
65001345:	mov    DWORD PTR [esp+0x40],ebx
65001349:	mov    BYTE PTR [esp+0x30],bl
6500134d:	call   0x650018c0
65001352:	push   ebx
65001353:	lea    ecx,[esp+0x28]
65001357:	push   ecx
65001358:	or     eax,0xffffffff
6500135b:	mov    BYTE PTR [esp+0x54],0x3
65001360:	call   0x65001a30
65001365:	cmp    DWORD PTR [esp+0x3c],0x10
6500136a:	jb     0x65001379
6500136c:	mov    edx,DWORD PTR [esp+0x28]
65001370:	push   edx
65001371:	call   0x65011f62
65001376:	add    esp,0x4
65001379:	add    edi,0xfffffff0
6500137c:	mov    DWORD PTR [esp+0x3c],0xf
65001384:	mov    DWORD PTR [esp+0x38],ebx
65001388:	mov    BYTE PTR [esp+0x28],bl
6500138c:	mov    BYTE PTR [esp+0x4c],bl
65001390:	lea    eax,[edi+0xc]
65001393:	or     ecx,0xffffffff
65001396:	lock xadd DWORD PTR [eax],ecx
6500139a:	dec    ecx
6500139b:	test   ecx,ecx
6500139d:	jg     0x650013a9
6500139f:	mov    ecx,DWORD PTR [edi]
650013a1:	mov    edx,DWORD PTR [ecx]
650013a3:	mov    eax,DWORD PTR [edx+0x4]
650013a6:	push   edi
650013a7:	call   eax
650013a9:	mov    edx,DWORD PTR ds:0x6502d560
650013af:	mov    eax,DWORD PTR [edx+0xc]
650013b2:	mov    ecx,0x6502d560
650013b7:	call   eax
650013b9:	add    eax,0x10
650013bc:	mov    DWORD PTR [esp+0x14],eax
650013c0:	mov    ecx,DWORD PTR [esp+0x18]
650013c4:	mov    DWORD PTR [esp+0x4c],0x4
650013cc:	mov    eax,DWORD PTR [ecx+0xc]
650013cf:	push   eax
650013d0:	lea    edx,[esp+0x18]
650013d4:	push   0x650266bc
650013d9:	push   edx
650013da:	call   0x65001da0
650013df:	mov    edi,DWORD PTR [esp+0x20]
650013e3:	mov    ebp,DWORD PTR [edi-0xc]
650013e6:	add    esp,0xc
650013e9:	cmp    DWORD PTR [edi-0x4],0x1
650013ed:	jle    0x650013ff
650013ef:	mov    eax,ebp
650013f1:	push   eax
650013f2:	lea    ecx,[esp+0x18]
650013f6:	call   0x650019b0
650013fb:	mov    edi,DWORD PTR [esp+0x14]
650013ff:	lea    ecx,[ebp+ebp*1+0x2]
65001403:	push   ecx
65001404:	push   edi
65001405:	lea    ecx,[esp+0x2c]
65001409:	mov    DWORD PTR [esp+0x44],0xf
65001411:	mov    DWORD PTR [esp+0x40],ebx
65001415:	mov    BYTE PTR [esp+0x30],bl
65001419:	call   0x650018c0
6500141e:	push   ebx
6500141f:	lea    edx,[esp+0x28]
65001423:	push   edx
65001424:	or     eax,0xffffffff
65001427:	mov    BYTE PTR [esp+0x54],0x5
6500142c:	call   0x65001a30
65001431:	cmp    DWORD PTR [esp+0x3c],0x10
65001436:	jb     0x65001445
65001438:	mov    eax,DWORD PTR [esp+0x28]
6500143c:	push   eax
6500143d:	call   0x65011f62
65001442:	add    esp,0x4
65001445:	mov    ebp,0xf
6500144a:	add    edi,0xfffffff0
6500144d:	mov    DWORD PTR [esp+0x3c],ebp
65001451:	mov    DWORD PTR [esp+0x38],ebx
65001455:	mov    BYTE PTR [esp+0x28],bl
65001459:	mov    BYTE PTR [esp+0x4c],bl
6500145d:	lea    ecx,[edi+0xc]
65001460:	or     edx,0xffffffff
65001463:	lock xadd DWORD PTR [ecx],edx
65001467:	dec    edx
65001468:	test   edx,edx
6500146a:	jg     0x65001476
6500146c:	mov    ecx,DWORD PTR [edi]
6500146e:	mov    eax,DWORD PTR [ecx]
65001470:	mov    edx,DWORD PTR [eax+0x4]
65001473:	push   edi
65001474:	call   edx
65001476:	push   0x2
65001478:	push   0x650266c8
6500147d:	lea    eax,[esp+0x30]
65001481:	push   ebp
65001482:	push   eax
65001483:	mov    DWORD PTR [esp+0x4c],ebp
65001487:	mov    DWORD PTR [esp+0x48],ebx
6500148b:	mov    BYTE PTR [esp+0x38],bl
6500148f:	call   0x650120d3
65001494:	mov    eax,DWORD PTR [esp+0x38]
65001498:	mov    edi,0x10
6500149d:	add    esp,0x10
650014a0:	cmp    DWORD PTR [esp+0x3c],edi
650014a4:	mov    DWORD PTR [esp+0x38],0x2
650014ac:	jae    0x650014b2
650014ae:	lea    eax,[esp+0x28]
650014b2:	mov    BYTE PTR [eax+0x2],bl
650014b5:	push   ebx
650014b6:	lea    ecx,[esp+0x28]
650014ba:	push   ecx
650014bb:	or     eax,0xffffffff
650014be:	mov    DWORD PTR [esp+0x54],0x6
650014c6:	call   0x65001a30
650014cb:	cmp    DWORD PTR [esp+0x3c],edi
650014cf:	jb     0x650014de
650014d1:	mov    edx,DWORD PTR [esp+0x28]
650014d5:	push   edx
650014d6:	call   0x65011f62
650014db:	add    esp,0x4
650014de:	mov    eax,esi
650014e0:	mov    ecx,DWORD PTR [esp+0x44]
650014e4:	mov    DWORD PTR fs:0x0,ecx
650014eb:	pop    ecx
650014ec:	pop    edi
650014ed:	pop    esi
650014ee:	pop    ebp
650014ef:	pop    ebx
650014f0:	mov    ecx,DWORD PTR [esp+0x2c]
650014f4:	xor    ecx,esp
650014f6:	call   0x650127bc
650014fb:	add    esp,0x3c
650014fe:	ret    
650014ff:	int3   
65001500:	push   0xffffffff
65001502:	push   0x65022708
65001507:	mov    eax,fs:0x0
6500150d:	push   eax
6500150e:	sub    esp,0x24
65001511:	push   ebx
65001512:	push   ebp
65001513:	push   esi
65001514:	push   edi
65001515:	mov    eax,ds:0x6502c09c
6500151a:	xor    eax,esp
6500151c:	push   eax
6500151d:	lea    eax,[esp+0x38]
65001521:	mov    fs:0x0,eax
65001527:	mov    eax,DWORD PTR [esp+0x48]
6500152b:	xor    edi,edi
6500152d:	push   0x10
6500152f:	mov    DWORD PTR [esp+0x28],eax
65001533:	mov    DWORD PTR [esp+0x18],edi
65001537:	call   0x650122fc
6500153c:	add    esp,0x4
6500153f:	cmp    eax,edi
65001541:	je     0x65001552
65001543:	mov    DWORD PTR [eax],edi
65001545:	mov    DWORD PTR [eax+0x4],edi
65001548:	mov    DWORD PTR [eax+0x8],edi
6500154b:	mov    DWORD PTR [eax+0xc],edi
6500154e:	mov    esi,eax
65001550:	jmp    0x65001554
65001552:	xor    esi,esi
65001554:	mov    DWORD PTR [esp+0x34],esi
65001558:	push   edi
65001559:	lea    ecx,[esp+0x2c]
6500155d:	push   ecx
6500155e:	mov    DWORD PTR [esp+0x48],edi
65001562:	lea    edx,[esp+0x24]
65001566:	push   edx
65001567:	lea    eax,[esp+0x2c]
6500156b:	push   eax
6500156c:	mov    DWORD PTR [esp+0x38],0xc
65001574:	mov    DWORD PTR [esp+0x40],0x1
6500157c:	mov    DWORD PTR [esp+0x3c],edi
65001580:	mov    DWORD PTR [esp+0x30],edi
65001584:	mov    DWORD PTR [esp+0x2c],edi
65001588:	call   DWORD PTR ds:0x65024078
6500158e:	test   eax,eax
65001590:	mov    ebx,DWORD PTR ds:0x65024044
65001596:	mov    ebp,DWORD PTR ds:0x65024040
6500159c:	je     0x650015f4
6500159e:	mov    edi,DWORD PTR [esi+0x8]
650015a1:	test   edi,edi
650015a3:	mov    ecx,DWORD PTR [esp+0x20]
650015a7:	mov    DWORD PTR [esp+0x14],ecx
650015ab:	je     0x650015c1
650015ad:	call   ebx
650015af:	push   edi
650015b0:	mov    DWORD PTR [esp+0x1c],eax
650015b4:	call   ebp
650015b6:	mov    edx,DWORD PTR [esp+0x18]
650015ba:	push   edx
650015bb:	call   DWORD PTR ds:0x6502405c
650015c1:	mov    eax,DWORD PTR [esp+0x14]
650015c5:	mov    DWORD PTR [esi+0x8],eax
650015c8:	mov    edi,DWORD PTR [esi+0xc]
650015cb:	test   edi,edi
650015cd:	mov    ecx,DWORD PTR [esp+0x1c]
650015d1:	mov    DWORD PTR [esp+0x18],ecx
650015d5:	je     0x650015eb
650015d7:	call   ebx
650015d9:	push   edi
650015da:	mov    DWORD PTR [esp+0x18],eax
650015de:	call   ebp
650015e0:	mov    edx,DWORD PTR [esp+0x14]
650015e4:	push   edx
650015e5:	call   DWORD PTR ds:0x6502405c
650015eb:	mov    eax,DWORD PTR [esp+0x18]
650015ef:	mov    DWORD PTR [esi+0xc],eax
650015f2:	xor    edi,edi
650015f4:	push   edi
650015f5:	lea    ecx,[esp+0x2c]
650015f9:	push   ecx
650015fa:	lea    edx,[esp+0x24]
650015fe:	push   edx
650015ff:	lea    eax,[esp+0x2c]
65001603:	push   eax
65001604:	call   DWORD PTR ds:0x65024078
6500160a:	test   eax,eax
6500160c:	je     0x65001662
6500160e:	mov    edi,DWORD PTR [esi]
65001610:	test   edi,edi
65001612:	mov    ecx,DWORD PTR [esp+0x20]
65001616:	mov    DWORD PTR [esp+0x18],ecx
6500161a:	je     0x65001630
6500161c:	call   ebx
6500161e:	push   edi
6500161f:	mov    DWORD PTR [esp+0x18],eax
65001623:	call   ebp
65001625:	mov    edx,DWORD PTR [esp+0x14]
65001629:	push   edx
6500162a:	call   DWORD PTR ds:0x6502405c
65001630:	mov    eax,DWORD PTR [esp+0x18]
65001634:	mov    DWORD PTR [esi],eax
65001636:	mov    edi,DWORD PTR [esi+0x4]
65001639:	test   edi,edi
6500163b:	mov    ecx,DWORD PTR [esp+0x1c]
6500163f:	mov    DWORD PTR [esp+0x18],ecx
65001643:	je     0x65001659
65001645:	call   ebx
65001647:	push   edi
65001648:	mov    DWORD PTR [esp+0x18],eax
6500164c:	call   ebp
6500164e:	mov    edx,DWORD PTR [esp+0x14]
65001652:	push   edx
65001653:	call   DWORD PTR ds:0x6502405c
65001659:	mov    eax,DWORD PTR [esp+0x18]
6500165d:	mov    DWORD PTR [esi+0x4],eax
65001660:	xor    edi,edi
65001662:	mov    ecx,DWORD PTR [esp+0x24]
65001666:	mov    edx,esi
65001668:	call   0x65001220
6500166d:	push   edi
6500166e:	push   edi
6500166f:	push   esi
65001670:	push   0x65001130
65001675:	push   edi
65001676:	push   edi
65001677:	call   DWORD PTR ds:0x6502406c
6500167d:	mov    esi,eax
6500167f:	cmp    esi,edi
65001681:	je     0x65001691
65001683:	call   ebx
65001685:	push   esi
65001686:	mov    edi,eax
65001688:	call   ebp
6500168a:	push   edi
6500168b:	call   DWORD PTR ds:0x6502405c
65001691:	mov    eax,DWORD PTR [esp+0x24]
65001695:	mov    ecx,DWORD PTR [esp+0x38]
65001699:	mov    DWORD PTR fs:0x0,ecx
650016a0:	pop    ecx
650016a1:	pop    edi
650016a2:	pop    esi
650016a3:	pop    ebp
650016a4:	pop    ebx
650016a5:	add    esp,0x30
650016a8:	ret    
650016a9:	int3   
650016aa:	int3   
650016ab:	int3   
650016ac:	int3   
650016ad:	int3   
650016ae:	int3   
650016af:	int3   
650016b0:	push   esi
650016b1:	mov    esi,ecx
650016b3:	cmp    DWORD PTR [esi+0x18],0x10
650016b7:	jb     0x650016c5
650016b9:	mov    eax,DWORD PTR [esi+0x4]
650016bc:	push   eax
650016bd:	call   0x65011f62
650016c2:	add    esp,0x4
650016c5:	xor    eax,eax
650016c7:	mov    DWORD PTR [esi+0x18],0xf
650016ce:	mov    DWORD PTR [esi+0x14],eax
650016d1:	mov    BYTE PTR [esi+0x4],al
650016d4:	pop    esi
650016d5:	ret    
650016d6:	int3   
650016d7:	int3   
650016d8:	int3   
650016d9:	int3   
650016da:	int3   
650016db:	int3   
650016dc:	int3   
650016dd:	int3   
650016de:	int3   
650016df:	int3   
650016e0:	push   esi
650016e1:	mov    esi,ecx
650016e3:	push   edi
650016e4:	mov    edi,DWORD PTR [esi]
650016e6:	test   edi,edi
650016e8:	je     0x65001702
650016ea:	push   ebx
650016eb:	call   DWORD PTR ds:0x65024044
650016f1:	push   edi
650016f2:	mov    ebx,eax
650016f4:	call   DWORD PTR ds:0x65024040
650016fa:	push   ebx
650016fb:	call   DWORD PTR ds:0x6502405c
65001701:	pop    ebx
65001702:	pop    edi
65001703:	mov    DWORD PTR [esi],0x0
65001709:	pop    esi
6500170a:	ret    
6500170b:	int3   
6500170c:	int3   
6500170d:	int3   
6500170e:	int3   
6500170f:	int3   
65001710:	push   esi
65001711:	mov    esi,DWORD PTR [eax]
65001713:	test   esi,esi
65001715:	je     0x65001725
65001717:	call   0x65001730
6500171c:	push   esi
6500171d:	call   0x65011f62
65001722:	add    esp,0x4
65001725:	pop    esi
65001726:	ret    
65001727:	int3   
65001728:	int3   
65001729:	int3   
6500172a:	int3   
6500172b:	int3   
6500172c:	int3   
6500172d:	int3   
6500172e:	int3   
6500172f:	int3   
65001730:	sub    esp,0x8
65001733:	mov    eax,DWORD PTR [esi+0xc]
65001736:	test   eax,eax
65001738:	push   ebx
65001739:	mov    ebx,DWORD PTR ds:0x65024040
6500173f:	push   ebp
65001740:	mov    ebp,DWORD PTR ds:0x6502405c
65001746:	push   edi
65001747:	mov    edi,DWORD PTR ds:0x65024044
6500174d:	mov    DWORD PTR [esp+0xc],eax
65001751:	je     0x65001767
65001753:	call   edi
65001755:	mov    DWORD PTR [esp+0x10],eax
65001759:	mov    eax,DWORD PTR [esp+0xc]
6500175d:	push   eax
6500175e:	call   ebx
65001760:	mov    ecx,DWORD PTR [esp+0x10]
65001764:	push   ecx
65001765:	call   ebp
65001767:	mov    DWORD PTR [esi+0xc],0x0
6500176e:	mov    eax,DWORD PTR [esi+0x8]
65001771:	test   eax,eax
65001773:	mov    DWORD PTR [esp+0x10],eax
65001777:	je     0x6500178d
65001779:	call   edi
6500177b:	mov    edx,DWORD PTR [esp+0x10]
6500177f:	push   edx
65001780:	mov    DWORD PTR [esp+0x10],eax
65001784:	call   ebx
65001786:	mov    eax,DWORD PTR [esp+0xc]
6500178a:	push   eax
6500178b:	call   ebp
6500178d:	mov    DWORD PTR [esi+0x8],0x0
65001794:	mov    eax,DWORD PTR [esi+0x4]
65001797:	test   eax,eax
65001799:	mov    DWORD PTR [esp+0x10],eax
6500179d:	je     0x650017b3
6500179f:	call   edi
650017a1:	mov    ecx,DWORD PTR [esp+0x10]
650017a5:	push   ecx
650017a6:	mov    DWORD PTR [esp+0x10],eax
650017aa:	call   ebx
650017ac:	mov    edx,DWORD PTR [esp+0xc]
650017b0:	push   edx
650017b1:	call   ebp
650017b3:	mov    DWORD PTR [esi+0x4],0x0
650017ba:	mov    eax,DWORD PTR [esi]
650017bc:	test   eax,eax
650017be:	mov    DWORD PTR [esp+0x10],eax
650017c2:	je     0x650017d2
650017c4:	call   edi
650017c6:	mov    edi,eax
650017c8:	mov    eax,DWORD PTR [esp+0x10]
650017cc:	push   eax
650017cd:	call   ebx
650017cf:	push   edi
650017d0:	call   ebp
650017d2:	pop    edi
650017d3:	pop    ebp
650017d4:	mov    DWORD PTR [esi],0x0
650017da:	pop    ebx
650017db:	add    esp,0x8
650017de:	ret    
650017df:	int3   
650017e0:	push   ebx
650017e1:	mov    ebx,DWORD PTR [esp+0x8]
650017e5:	push   ebp
650017e6:	mov    ebp,DWORD PTR [esp+0x10]
650017ea:	cmp    DWORD PTR [ebx+0x14],ebp
650017ed:	push   esi
650017ee:	push   edi
650017ef:	mov    esi,ecx
650017f1:	jae    0x650017f8
650017f3:	call   0x65011f1e
650017f8:	mov    edi,DWORD PTR [ebx+0x14]
650017fb:	mov    eax,DWORD PTR [esp+0x1c]
650017ff:	sub    edi,ebp
65001801:	cmp    eax,edi
65001803:	jae    0x65001807
65001805:	mov    edi,eax
65001807:	cmp    esi,ebx
65001809:	jne    0x6500182a
6500180b:	push   0xffffffff
6500180d:	add    edi,ebp
6500180f:	push   edi
65001810:	mov    ecx,esi
65001812:	call   0x65001b20
65001817:	push   ebp
65001818:	push   0x0
6500181a:	mov    ecx,esi
6500181c:	call   0x65001b20
65001821:	pop    edi
65001822:	mov    eax,esi
65001824:	pop    esi
65001825:	pop    ebp
65001826:	pop    ebx
65001827:	ret    0xc
6500182a:	cmp    edi,0xfffffffe
6500182d:	jbe    0x65001834
6500182f:	call   0x65011edf
65001834:	mov    eax,DWORD PTR [esi+0x18]
65001837:	cmp    eax,edi
65001839:	jae    0x65001856
6500183b:	mov    eax,DWORD PTR [esi+0x14]
6500183e:	push   eax
6500183f:	push   edi
65001840:	mov    ecx,esi
65001842:	call   0x65001bc0
65001847:	test   edi,edi
65001849:	jbe    0x650018b1
6500184b:	cmp    DWORD PTR [ebx+0x18],0x10
6500184f:	jb     0x65001880
65001851:	mov    edx,DWORD PTR [ebx+0x4]
65001854:	jmp    0x65001883
65001856:	test   edi,edi
65001858:	jne    0x65001849
6500185a:	cmp    eax,0x10
6500185d:	mov    DWORD PTR [esi+0x14],edi
65001860:	jb     0x65001871
65001862:	mov    eax,DWORD PTR [esi+0x4]
65001865:	pop    edi
65001866:	mov    BYTE PTR [eax],0x0
65001869:	mov    eax,esi
6500186b:	pop    esi
6500186c:	pop    ebp
6500186d:	pop    ebx
6500186e:	ret    0xc
65001871:	lea    eax,[esi+0x4]
65001874:	pop    edi
65001875:	mov    BYTE PTR [eax],0x0
65001878:	mov    eax,esi
6500187a:	pop    esi
6500187b:	pop    ebp
6500187c:	pop    ebx
6500187d:	ret    0xc
65001880:	lea    edx,[ebx+0x4]
65001883:	mov    ecx,DWORD PTR [esi+0x18]
65001886:	cmp    ecx,0x10
65001889:	lea    ebx,[esi+0x4]
6500188c:	jb     0x65001892
6500188e:	mov    eax,DWORD PTR [ebx]
65001890:	jmp    0x65001894
65001892:	mov    eax,ebx
65001894:	push   edi
65001895:	add    edx,ebp
65001897:	push   edx
65001898:	push   ecx
65001899:	push   eax
6500189a:	call   0x650120d3
6500189f:	add    esp,0x10
650018a2:	cmp    DWORD PTR [esi+0x18],0x10
650018a6:	mov    DWORD PTR [esi+0x14],edi
650018a9:	jb     0x650018ad
650018ab:	mov    ebx,DWORD PTR [ebx]
650018ad:	mov    BYTE PTR [ebx+edi*1],0x0
650018b1:	pop    edi
650018b2:	mov    eax,esi
650018b4:	pop    esi
650018b5:	pop    ebp
650018b6:	pop    ebx
650018b7:	ret    0xc
650018ba:	int3   
650018bb:	int3   
650018bc:	int3   
650018bd:	int3   
650018be:	int3   
650018bf:	int3   
650018c0:	push   ebx
650018c1:	push   ebp
650018c2:	push   esi
650018c3:	mov    esi,ecx
650018c5:	mov    ecx,DWORD PTR [esi+0x18]
650018c8:	cmp    ecx,0x10
650018cb:	lea    ebx,[esi+0x4]
650018ce:	jb     0x650018d4
650018d0:	mov    eax,DWORD PTR [ebx]
650018d2:	jmp    0x650018d6
650018d4:	mov    eax,ebx
650018d6:	mov    ebp,DWORD PTR [esp+0x10]
650018da:	cmp    ebp,eax
650018dc:	jb     0x6500190f
650018de:	cmp    ecx,0x10
650018e1:	jb     0x650018e7
650018e3:	mov    eax,DWORD PTR [ebx]
650018e5:	jmp    0x650018e9
650018e7:	mov    eax,ebx
650018e9:	mov    edx,DWORD PTR [esi+0x14]
650018ec:	add    edx,eax
650018ee:	cmp    edx,ebp
650018f0:	jbe    0x6500190f
650018f2:	cmp    ecx,0x10
650018f5:	jb     0x650018f9
650018f7:	mov    ebx,DWORD PTR [ebx]
650018f9:	mov    eax,DWORD PTR [esp+0x14]
650018fd:	push   eax
650018fe:	sub    ebp,ebx
65001900:	push   ebp
65001901:	push   esi
65001902:	mov    ecx,esi
65001904:	call   0x650017e0
65001909:	pop    esi
6500190a:	pop    ebp
6500190b:	pop    ebx
6500190c:	ret    0x8
6500190f:	push   edi
65001910:	mov    edi,DWORD PTR [esp+0x18]
65001914:	cmp    edi,0xfffffffe
65001917:	jbe    0x6500191e
65001919:	call   0x65011edf
6500191e:	mov    eax,DWORD PTR [esi+0x18]
65001921:	cmp    eax,edi
65001923:	jae    0x65001941
65001925:	mov    ecx,DWORD PTR [esi+0x14]
65001928:	push   ecx
65001929:	push   edi
6500192a:	mov    ecx,esi
6500192c:	call   0x65001bc0
65001931:	test   edi,edi
65001933:	jbe    0x65001978
65001935:	mov    ecx,DWORD PTR [esi+0x18]
65001938:	cmp    ecx,0x10
6500193b:	jb     0x6500195b
6500193d:	mov    eax,DWORD PTR [ebx]
6500193f:	jmp    0x6500195d
65001941:	test   edi,edi
65001943:	jne    0x65001933
65001945:	cmp    eax,0x10
65001948:	mov    DWORD PTR [esi+0x14],edi
6500194b:	jb     0x6500194f
6500194d:	mov    ebx,DWORD PTR [ebx]
6500194f:	pop    edi
65001950:	mov    eax,esi
65001952:	pop    esi
65001953:	pop    ebp
65001954:	mov    BYTE PTR [ebx],0x0
65001957:	pop    ebx
65001958:	ret    0x8
6500195b:	mov    eax,ebx
6500195d:	push   edi
6500195e:	push   ebp
6500195f:	push   ecx
65001960:	push   eax
65001961:	call   0x650120d3
65001966:	add    esp,0x10
65001969:	cmp    DWORD PTR [esi+0x18],0x10
6500196d:	mov    DWORD PTR [esi+0x14],edi
65001970:	jb     0x65001974
65001972:	mov    ebx,DWORD PTR [ebx]
65001974:	mov    BYTE PTR [ebx+edi*1],0x0
65001978:	pop    edi
65001979:	mov    eax,esi
6500197b:	pop    esi
6500197c:	pop    ebp
6500197d:	pop    ebx
6500197e:	ret    0x8
65001981:	int3   
65001982:	int3   
65001983:	int3   
65001984:	int3   
65001985:	int3   
65001986:	int3   
65001987:	int3   
65001988:	int3   
65001989:	int3   
6500198a:	int3   
6500198b:	int3   
6500198c:	int3   
6500198d:	int3   
6500198e:	int3   
6500198f:	int3   
65001990:	mov    eax,DWORD PTR [ecx]
65001992:	sub    eax,0x10
65001995:	lea    ecx,[eax+0xc]
65001998:	or     edx,0xffffffff
6500199b:	lock xadd DWORD PTR [ecx],edx
6500199f:	dec    edx
650019a0:	test   edx,edx
650019a2:	jg     0x650019ae
650019a4:	mov    ecx,DWORD PTR [eax]
650019a6:	mov    edx,DWORD PTR [ecx]
650019a8:	push   eax
650019a9:	mov    eax,DWORD PTR [edx+0x4]
650019ac:	call   eax
650019ae:	ret    
650019af:	int3   
650019b0:	push   ecx
650019b1:	push   ebx
650019b2:	push   ebp
650019b3:	push   esi
650019b4:	mov    esi,DWORD PTR [ecx]
650019b6:	mov    ebx,DWORD PTR [esi-0xc]
650019b9:	sub    esi,0x10
650019bc:	mov    DWORD PTR [esp+0xc],ecx
650019c0:	mov    ecx,DWORD PTR [esi]
650019c2:	mov    eax,DWORD PTR [ecx]
650019c4:	mov    edx,DWORD PTR [eax+0x10]
650019c7:	push   edi
650019c8:	call   edx
650019ca:	mov    edx,DWORD PTR [eax]
650019cc:	mov    ebp,DWORD PTR [esp+0x18]
650019d0:	push   0x2
650019d2:	mov    ecx,eax
650019d4:	mov    eax,DWORD PTR [edx]
650019d6:	push   ebp
650019d7:	call   eax
650019d9:	mov    edi,eax
650019db:	test   edi,edi
650019dd:	jne    0x650019e4
650019df:	call   0x65001bb0
650019e4:	cmp    ebx,ebp
650019e6:	jge    0x650019ea
650019e8:	mov    ebp,ebx
650019ea:	lea    eax,[ebp+ebp*1+0x2]
650019ee:	push   eax
650019ef:	lea    ecx,[esi+0x10]
650019f2:	push   ecx
650019f3:	push   eax
650019f4:	lea    ebp,[edi+0x10]
650019f7:	push   ebp
650019f8:	call   0x650120d3
650019fd:	add    esp,0x10
65001a00:	mov    DWORD PTR [edi+0x4],ebx
65001a03:	lea    edx,[esi+0xc]
65001a06:	or     eax,0xffffffff
65001a09:	lock xadd DWORD PTR [edx],eax
65001a0d:	dec    eax
65001a0e:	test   eax,eax
65001a10:	jg     0x65001a1c
65001a12:	mov    ecx,DWORD PTR [esi]
65001a14:	mov    edx,DWORD PTR [ecx]
65001a16:	mov    eax,DWORD PTR [edx+0x4]
65001a19:	push   esi
65001a1a:	call   eax
65001a1c:	mov    ecx,DWORD PTR [esp+0x10]
65001a20:	pop    edi
65001a21:	pop    esi
65001a22:	mov    DWORD PTR [ecx],ebp
65001a24:	pop    ebp
65001a25:	pop    ebx
65001a26:	pop    ecx
65001a27:	ret    0x4
65001a2a:	int3   
65001a2b:	int3   
65001a2c:	int3   
65001a2d:	int3   
65001a2e:	int3   
65001a2f:	int3   
65001a30:	push   ebx
65001a31:	push   ebp
65001a32:	mov    ebp,DWORD PTR [esp+0xc]
65001a36:	push   edi
65001a37:	mov    edi,DWORD PTR [esp+0x14]
65001a3b:	cmp    DWORD PTR [ebp+0x14],edi
65001a3e:	mov    ebx,eax
65001a40:	jae    0x65001a47
65001a42:	call   0x65011f1e
65001a47:	mov    eax,DWORD PTR [ebp+0x14]
65001a4a:	sub    eax,edi
65001a4c:	cmp    eax,ebx
65001a4e:	jae    0x65001a52
65001a50:	mov    ebx,eax
65001a52:	mov    eax,DWORD PTR [esi+0x14]
65001a55:	or     ecx,0xffffffff
65001a58:	sub    ecx,eax
65001a5a:	cmp    ecx,ebx
65001a5c:	jbe    0x65001a65
65001a5e:	lea    edx,[eax+ebx*1]
65001a61:	cmp    edx,eax
65001a63:	jae    0x65001a6a
65001a65:	call   0x65011edf
65001a6a:	test   ebx,ebx
65001a6c:	jbe    0x65001b16
65001a72:	mov    edi,DWORD PTR [esi+0x14]
65001a75:	add    edi,ebx
65001a77:	cmp    edi,0xfffffffe
65001a7a:	jbe    0x65001a81
65001a7c:	call   0x65011edf
65001a81:	mov    eax,DWORD PTR [esi+0x18]
65001a84:	cmp    eax,edi
65001a86:	jae    0x65001aa3
65001a88:	mov    eax,DWORD PTR [esi+0x14]
65001a8b:	push   eax
65001a8c:	push   edi
65001a8d:	mov    ecx,esi
65001a8f:	call   0x65001bc0
65001a94:	test   edi,edi
65001a96:	jbe    0x65001b16
65001a98:	cmp    DWORD PTR [ebp+0x18],0x10
65001a9c:	jb     0x65001acb
65001a9e:	mov    ebp,DWORD PTR [ebp+0x4]
65001aa1:	jmp    0x65001ace
65001aa3:	test   edi,edi
65001aa5:	jne    0x65001a96
65001aa7:	cmp    eax,0x10
65001aaa:	mov    DWORD PTR [esi+0x14],edi
65001aad:	jb     0x65001abd
65001aaf:	mov    eax,DWORD PTR [esi+0x4]
65001ab2:	pop    edi
65001ab3:	pop    ebp
65001ab4:	mov    BYTE PTR [eax],0x0
65001ab7:	mov    eax,esi
65001ab9:	pop    ebx
65001aba:	ret    0x8
65001abd:	pop    edi
65001abe:	lea    eax,[esi+0x4]
65001ac1:	pop    ebp
65001ac2:	mov    BYTE PTR [eax],0x0
65001ac5:	mov    eax,esi
65001ac7:	pop    ebx
65001ac8:	ret    0x8
65001acb:	add    ebp,0x4
65001ace:	mov    eax,DWORD PTR [esi+0x18]
65001ad1:	cmp    eax,0x10
65001ad4:	jb     0x65001adb
65001ad6:	mov    edx,DWORD PTR [esi+0x4]
65001ad9:	jmp    0x65001ade
65001adb:	lea    edx,[esi+0x4]
65001ade:	mov    ecx,DWORD PTR [esi+0x14]
65001ae1:	push   ebx
65001ae2:	mov    ebx,DWORD PTR [esp+0x18]
65001ae6:	add    ebp,ebx
65001ae8:	sub    eax,ecx
65001aea:	push   ebp
65001aeb:	push   eax
65001aec:	add    ecx,edx
65001aee:	push   ecx
65001aef:	call   0x650120d3
65001af4:	add    esp,0x10
65001af7:	cmp    DWORD PTR [esi+0x18],0x10
65001afb:	mov    DWORD PTR [esi+0x14],edi
65001afe:	jb     0x65001b0f
65001b00:	mov    eax,DWORD PTR [esi+0x4]
65001b03:	mov    BYTE PTR [eax+edi*1],0x0
65001b07:	pop    edi
65001b08:	pop    ebp
65001b09:	mov    eax,esi
65001b0b:	pop    ebx
65001b0c:	ret    0x8
65001b0f:	lea    eax,[esi+0x4]
65001b12:	mov    BYTE PTR [eax+edi*1],0x0
65001b16:	pop    edi
65001b17:	pop    ebp
65001b18:	mov    eax,esi
65001b1a:	pop    ebx
65001b1b:	ret    0x8
65001b1e:	int3   
65001b1f:	int3   
65001b20:	push   ebx
65001b21:	mov    ebx,DWORD PTR [esp+0x8]
65001b25:	push   esi
65001b26:	mov    esi,ecx
65001b28:	cmp    DWORD PTR [esi+0x14],ebx
65001b2b:	push   edi
65001b2c:	jae    0x65001b33
65001b2e:	call   0x65011f1e
65001b33:	mov    eax,DWORD PTR [esi+0x14]
65001b36:	mov    edi,DWORD PTR [esp+0x14]
65001b3a:	sub    eax,ebx
65001b3c:	cmp    eax,edi
65001b3e:	jae    0x65001b42
65001b40:	mov    edi,eax
65001b42:	test   edi,edi
65001b44:	jbe    0x65001b9b
65001b46:	mov    ecx,DWORD PTR [esi+0x18]
65001b49:	cmp    ecx,0x10
65001b4c:	push   ebp
65001b4d:	lea    ebp,[esi+0x4]
65001b50:	jb     0x65001b5b
65001b52:	mov    edx,DWORD PTR [ebp+0x0]
65001b55:	mov    DWORD PTR [esp+0x14],edx
65001b59:	jmp    0x65001b5f
65001b5b:	mov    DWORD PTR [esp+0x14],ebp
65001b5f:	cmp    ecx,0x10
65001b62:	jb     0x65001b69
65001b64:	mov    edx,DWORD PTR [ebp+0x0]
65001b67:	jmp    0x65001b6b
65001b69:	mov    edx,ebp
65001b6b:	sub    eax,edi
65001b6d:	push   eax
65001b6e:	mov    eax,DWORD PTR [esp+0x18]
65001b72:	add    eax,ebx
65001b74:	add    eax,edi
65001b76:	push   eax
65001b77:	sub    ecx,ebx
65001b79:	push   ecx
65001b7a:	add    edx,ebx
65001b7c:	push   edx
65001b7d:	call   0x6501214e
65001b82:	mov    eax,DWORD PTR [esi+0x14]
65001b85:	sub    eax,edi
65001b87:	add    esp,0x10
65001b8a:	cmp    DWORD PTR [esi+0x18],0x10
65001b8e:	mov    DWORD PTR [esi+0x14],eax
65001b91:	jb     0x65001b96
65001b93:	mov    ebp,DWORD PTR [ebp+0x0]
65001b96:	mov    BYTE PTR [eax+ebp*1],0x0
65001b9a:	pop    ebp
65001b9b:	pop    edi
65001b9c:	mov    eax,esi
65001b9e:	pop    esi
65001b9f:	pop    ebx
65001ba0:	ret    0x8
65001ba3:	int3   
65001ba4:	int3   
65001ba5:	int3   
65001ba6:	int3   
65001ba7:	int3   
65001ba8:	int3   
65001ba9:	int3   
65001baa:	int3   
65001bab:	int3   
65001bac:	int3   
65001bad:	int3   
65001bae:	int3   
65001baf:	int3   
65001bb0:	push   0x8007000e
65001bb5:	call   0x650010a0
65001bba:	int3   
65001bbb:	int3   
65001bbc:	int3   
65001bbd:	int3   
65001bbe:	int3   
65001bbf:	int3   
65001bc0:	push   ebp
65001bc1:	mov    ebp,esp
65001bc3:	push   0xffffffff
65001bc5:	push   0x65022250
65001bca:	mov    eax,fs:0x0
65001bd0:	push   eax
65001bd1:	sub    esp,0x1c
65001bd4:	push   ebx
65001bd5:	push   esi
65001bd6:	push   edi
65001bd7:	mov    eax,ds:0x6502c09c
65001bdc:	xor    eax,ebp
65001bde:	push   eax
65001bdf:	lea    eax,[ebp-0xc]
65001be2:	mov    fs:0x0,eax
65001be8:	mov    DWORD PTR [ebp-0x10],esp
65001beb:	mov    edi,ecx
65001bed:	mov    DWORD PTR [ebp-0x14],edi
65001bf0:	mov    eax,DWORD PTR [ebp+0x8]
65001bf3:	mov    esi,eax
65001bf5:	or     esi,0xf
65001bf8:	cmp    esi,0xfffffffe
65001bfb:	jbe    0x65001c01
65001bfd:	mov    esi,eax
65001bff:	jmp    0x65001c23
65001c01:	mov    ebx,DWORD PTR [edi+0x18]
65001c04:	mov    eax,0xaaaaaaab
65001c09:	mul    esi
65001c0b:	mov    ecx,ebx
65001c0d:	shr    ecx,1
65001c0f:	shr    edx,1
65001c11:	cmp    edx,ecx
65001c13:	jae    0x65001c23
65001c15:	mov    eax,0xfffffffe
65001c1a:	sub    eax,ecx
65001c1c:	cmp    ebx,eax
65001c1e:	ja     0x65001c23
65001c20:	lea    esi,[ecx+ebx*1]
65001c23:	xor    ebx,ebx
65001c25:	lea    ecx,[esi+0x1]
65001c28:	cmp    ecx,ebx
65001c2a:	mov    DWORD PTR [ebp-0x4],ebx
65001c2d:	ja     0x65001c3f
65001c2f:	xor    ecx,ecx
65001c31:	push   ecx
65001c32:	call   0x650122fc
65001c37:	add    esp,0x4
65001c3a:	mov    DWORD PTR [ebp+0x8],eax
65001c3d:	jmp    0x65001c97
65001c3f:	or     eax,0xffffffff
65001c42:	xor    edx,edx
65001c44:	div    ecx
65001c46:	cmp    eax,0x1
65001c49:	jae    0x65001c31
65001c4b:	lea    ecx,[ebp-0x18]
65001c4e:	push   ecx
65001c4f:	lea    ecx,[ebp-0x28]
65001c52:	mov    DWORD PTR [ebp-0x18],ebx
65001c55:	call   0x65011f78
65001c5a:	push   0x65029e4c
65001c5f:	lea    edx,[ebp-0x28]
65001c62:	push   edx
65001c63:	mov    DWORD PTR [ebp-0x28],0x65024bf8
65001c6a:	call   0x65012366
65001c6f:	mov    eax,DWORD PTR [ebp+0x8]
65001c72:	mov    ecx,DWORD PTR [ebp-0x14]
65001c75:	mov    DWORD PTR [ebp-0x1c],eax
65001c78:	add    eax,0x1
65001c7b:	mov    DWORD PTR [ebp-0x10],esp
65001c7e:	push   eax
65001c7f:	mov    BYTE PTR [ebp-0x4],0x2
65001c83:	call   0x65001d40
65001c88:	mov    DWORD PTR [ebp+0x8],eax
65001c8b:	mov    eax,0x65001c91
65001c90:	ret    
65001c91:	mov    edi,DWORD PTR [ebp-0x14]
65001c94:	mov    esi,DWORD PTR [ebp-0x1c]
65001c97:	mov    ebx,DWORD PTR [ebp+0xc]
65001c9a:	test   ebx,ebx
65001c9c:	jbe    0x65001cbe
65001c9e:	cmp    DWORD PTR [edi+0x18],0x10
65001ca2:	jb     0x65001ca9
65001ca4:	mov    eax,DWORD PTR [edi+0x4]
65001ca7:	jmp    0x65001cac
65001ca9:	lea    eax,[edi+0x4]
65001cac:	mov    ecx,DWORD PTR [ebp+0x8]
65001caf:	push   ebx
65001cb0:	push   eax
65001cb1:	lea    eax,[esi+0x1]
65001cb4:	push   eax
65001cb5:	push   ecx
65001cb6:	call   0x650120d3
65001cbb:	add    esp,0x10
65001cbe:	cmp    DWORD PTR [edi+0x18],0x10
65001cc2:	jb     0x65001cd0
65001cc4:	mov    edx,DWORD PTR [edi+0x4]
65001cc7:	push   edx
65001cc8:	call   0x65011f62
65001ccd:	add    esp,0x4
65001cd0:	cmp    esi,0x10
65001cd3:	mov    ecx,DWORD PTR [ebp+0x8]
65001cd6:	lea    eax,[edi+0x4]
65001cd9:	mov    BYTE PTR [eax],0x0
65001cdc:	mov    DWORD PTR [eax],ecx
65001cde:	mov    DWORD PTR [edi+0x18],esi
65001ce1:	mov    DWORD PTR [edi+0x14],ebx
65001ce4:	jb     0x65001ce8
65001ce6:	mov    eax,ecx
65001ce8:	mov    BYTE PTR [eax+ebx*1],0x0
65001cec:	mov    ecx,DWORD PTR [ebp-0xc]
65001cef:	mov    DWORD PTR fs:0x0,ecx
65001cf6:	pop    ecx
65001cf7:	pop    edi
65001cf8:	pop    esi
65001cf9:	pop    ebx
65001cfa:	mov    esp,ebp
65001cfc:	pop    ebp
65001cfd:	ret    0x8
65001d00:	mov    esi,DWORD PTR [ebp-0x14]
65001d03:	cmp    DWORD PTR [esi+0x18],0x10
65001d07:	jb     0x65001d15
65001d09:	mov    eax,DWORD PTR [esi+0x4]
65001d0c:	push   eax
65001d0d:	call   0x65011f62
65001d12:	add    esp,0x4
65001d15:	push   0x0
65001d17:	mov    DWORD PTR [esi+0x18],0xf
65001d1e:	mov    DWORD PTR [esi+0x14],0x0
65001d25:	push   0x0
65001d27:	mov    BYTE PTR [esi+0x4],0x0
65001d2b:	call   0x65012366
65001d30:	int3   
65001d31:	int3   
65001d32:	int3   
65001d33:	int3   
65001d34:	int3   
65001d35:	int3   
65001d36:	int3   
65001d37:	int3   
65001d38:	int3   
65001d39:	int3   
65001d3a:	int3   
65001d3b:	int3   
65001d3c:	int3   
65001d3d:	int3   
65001d3e:	int3   
65001d3f:	int3   
65001d40:	mov    ecx,DWORD PTR [esp+0x4]
65001d44:	sub    esp,0xc
65001d47:	test   ecx,ecx
65001d49:	ja     0x65001d5c
65001d4b:	xor    ecx,ecx
65001d4d:	push   ecx
65001d4e:	call   0x650122fc
65001d53:	add    esp,0x4
65001d56:	add    esp,0xc
65001d59:	ret    0x4
65001d5c:	or     eax,0xffffffff
65001d5f:	xor    edx,edx
65001d61:	div    ecx
65001d63:	cmp    eax,0x1
65001d66:	jae    0x65001d4d
65001d68:	lea    eax,[esp+0x10]
65001d6c:	push   eax
65001d6d:	lea    ecx,[esp+0x4]
65001d71:	mov    DWORD PTR [esp+0x14],0x0
65001d79:	call   0x65011f78
65001d7e:	push   0x65029e4c
65001d83:	lea    ecx,[esp+0x4]
65001d87:	push   ecx
65001d88:	mov    DWORD PTR [esp+0x8],0x65024bf8
65001d90:	call   0x65012366
65001d95:	int3   
65001d96:	int3   
65001d97:	int3   
65001d98:	int3   
65001d99:	int3   
65001d9a:	int3   
65001d9b:	int3   
65001d9c:	int3   
65001d9d:	int3   
65001d9e:	int3   
65001d9f:	int3   
65001da0:	mov    ecx,DWORD PTR [esp+0x8]
65001da4:	lea    eax,[esp+0xc]
65001da8:	push   eax
65001da9:	push   ecx
65001daa:	mov    ecx,DWORD PTR [esp+0xc]
65001dae:	call   0x65001de0
65001db3:	ret    
65001db4:	int3   
65001db5:	int3   
65001db6:	int3   
65001db7:	int3   
65001db8:	int3   
65001db9:	int3   
65001dba:	int3   
65001dbb:	int3   
65001dbc:	int3   
65001dbd:	int3   
65001dbe:	int3   
65001dbf:	int3   
65001dc0:	mov    eax,DWORD PTR [esp+0x4]
65001dc4:	push   esi
65001dc5:	push   eax
65001dc6:	mov    esi,ecx
65001dc8:	call   0x65011fde
65001dcd:	mov    DWORD PTR [esi],0x65024bf8
65001dd3:	mov    eax,esi
65001dd5:	pop    esi
65001dd6:	ret    0x4
65001dd9:	int3   
65001dda:	int3   
65001ddb:	int3   
65001ddc:	int3   
65001ddd:	int3   
65001dde:	int3   
65001ddf:	int3   
65001de0:	push   ebx
65001de1:	mov    ebx,DWORD PTR [esp+0x8]
65001de5:	test   ebx,ebx
65001de7:	push   edi
65001de8:	mov    edi,ecx
65001dea:	jne    0x65001df6
65001dec:	push   0x80070057
65001df1:	call   0x650010a0
65001df6:	push   ebp
65001df7:	mov    ebp,DWORD PTR [esp+0x14]
65001dfb:	push   esi
65001dfc:	push   ebp
65001dfd:	push   ebx
65001dfe:	call   0x65012a36
65001e03:	mov    esi,eax
65001e05:	mov    eax,DWORD PTR [edi]
65001e07:	mov    edx,DWORD PTR [eax-0x8]
65001e0a:	sub    eax,0x10
65001e0d:	mov    ecx,0x1
65001e12:	sub    ecx,DWORD PTR [eax+0xc]
65001e15:	sub    edx,esi
65001e17:	add    esp,0x8
65001e1a:	or     ecx,edx
65001e1c:	jge    0x65001e26
65001e1e:	push   esi
65001e1f:	mov    ecx,edi
65001e21:	call   0x65001e60
65001e26:	mov    ecx,DWORD PTR [edi]
65001e28:	push   ebp
65001e29:	push   ebx
65001e2a:	lea    eax,[esi+0x1]
65001e2d:	push   eax
65001e2e:	push   ecx
65001e2f:	call   0x65012bcb
65001e34:	add    esp,0x10
65001e37:	test   esi,esi
65001e39:	jl     0x65001e54
65001e3b:	mov    eax,DWORD PTR [edi]
65001e3d:	cmp    esi,DWORD PTR [eax-0x8]
65001e40:	jg     0x65001e54
65001e42:	mov    DWORD PTR [eax-0xc],esi
65001e45:	mov    edx,DWORD PTR [edi]
65001e47:	mov    WORD PTR [edx+esi*2],0x0
65001e4d:	pop    esi
65001e4e:	pop    ebp
65001e4f:	pop    edi
65001e50:	pop    ebx
65001e51:	ret    0x8
65001e54:	push   0x80070057
65001e59:	call   0x650010a0
65001e5e:	int3   
65001e5f:	int3   
65001e60:	mov    eax,DWORD PTR [ecx]
65001e62:	mov    edx,DWORD PTR [esp+0x4]
65001e66:	sub    eax,0x10
65001e69:	push   esi
65001e6a:	mov    esi,DWORD PTR [eax+0x4]
65001e6d:	cmp    esi,edx
65001e6f:	jle    0x65001e73
65001e71:	mov    edx,esi
65001e73:	cmp    DWORD PTR [eax+0xc],0x1
65001e77:	pop    esi
65001e78:	jle    0x65001e83
65001e7a:	mov    DWORD PTR [esp+0x4],edx
65001e7e:	jmp    0x650019b0
65001e83:	mov    eax,DWORD PTR [eax+0x8]
65001e86:	cmp    eax,edx
65001e88:	jge    0x65001ea9
65001e8a:	cmp    eax,0x400
65001e8f:	jle    0x65001e98
65001e91:	add    eax,0x400
65001e96:	jmp    0x65001e9a
65001e98:	add    eax,eax
65001e9a:	cmp    eax,edx
65001e9c:	jge    0x65001ea0
65001e9e:	mov    eax,edx
65001ea0:	mov    DWORD PTR [esp+0x4],eax
65001ea4:	jmp    0x65001eb0
65001ea9:	ret    0x4
65001eac:	int3   
65001ead:	int3   
65001eae:	int3   
65001eaf:	int3   
65001eb0:	mov    edx,DWORD PTR [esp+0x4]
65001eb4:	push   esi
65001eb5:	mov    esi,ecx
65001eb7:	mov    eax,DWORD PTR [esi]
65001eb9:	mov    ecx,DWORD PTR [eax-0x10]
65001ebc:	sub    eax,0x10
65001ebf:	cmp    DWORD PTR [eax+0x8],edx
65001ec2:	jge    0x65001ed9
65001ec4:	test   edx,edx
65001ec6:	jle    0x65001ed9
65001ec8:	push   edi
65001ec9:	mov    edi,DWORD PTR [ecx]
65001ecb:	push   0x2
65001ecd:	push   edx
65001ece:	push   eax
65001ecf:	mov    eax,DWORD PTR [edi+0x8]
65001ed2:	call   eax
65001ed4:	test   eax,eax
65001ed6:	pop    edi
65001ed7:	jne    0x65001ede
65001ed9:	call   0x65001bb0
65001ede:	add    eax,0x10
65001ee1:	mov    DWORD PTR [esi],eax
65001ee3:	pop    esi
65001ee4:	ret    0x4
65001ee7:	int3   
65001ee8:	int3   
65001ee9:	int3   
65001eea:	int3   
65001eeb:	int3   
65001eec:	int3   
65001eed:	int3   
65001eee:	int3   
65001eef:	int3   
65001ef0:	mov    eax,DWORD PTR [esp+0x4]
65001ef4:	cmp    eax,0x50
65001ef7:	ja     0x65001f1b
65001ef9:	movzx  ecx,BYTE PTR [eax+0x65001f38]
65001f00:	jmp    DWORD PTR [ecx*4+0x65001f28]
65001f07:	push   0x8007000e
65001f0c:	call   0x650010a0
65001f11:	push   0x80070057
65001f16:	call   0x650010a0
65001f1b:	push   0x80004005
65001f20:	call   0x650010a0
65001f25:	ret    
65001f26:	mov    edi,edi
65001f28:	and    eax,0x765001f
65001f2d:	pop    ds
65001f2e:	add    BYTE PTR [ebp+0x11],ah
65001f31:	pop    ds
65001f32:	add    BYTE PTR [ebp+0x1b],ah
65001f35:	pop    ds
65001f36:	add    BYTE PTR [ebp+0x0],ah
65001f39:	add    eax,DWORD PTR [ebx]
65001f3b:	add    eax,DWORD PTR [ebx]
65001f3d:	add    eax,DWORD PTR [ebx]
65001f3f:	add    eax,DWORD PTR [ebx]
65001f41:	add    eax,DWORD PTR [ebx]
65001f43:	add    eax,DWORD PTR [ecx]
65001f45:	add    eax,DWORD PTR [ebx]
65001f47:	add    eax,DWORD PTR [ebx]
65001f49:	add    eax,DWORD PTR [ebx]
65001f4b:	add    eax,DWORD PTR [ebx]
65001f4d:	add    eax,DWORD PTR [edx]
65001f4f:	add    eax,DWORD PTR [ebx]
65001f51:	add    eax,DWORD PTR [ebx]
65001f53:	add    eax,DWORD PTR [ebx]
65001f55:	add    eax,DWORD PTR [ebx]
65001f57:	add    eax,DWORD PTR [ebx]
65001f59:	add    eax,DWORD PTR [edx]
65001f5b:	add    eax,DWORD PTR [ebx]
65001f5d:	add    eax,DWORD PTR [ebx]
65001f5f:	add    eax,DWORD PTR [ebx]
65001f61:	add    eax,DWORD PTR [ebx]
65001f63:	add    eax,DWORD PTR [ebx]
65001f65:	add    eax,DWORD PTR [ebx]
65001f67:	add    eax,DWORD PTR [ebx]
65001f69:	add    eax,DWORD PTR [ebx]
65001f6b:	add    eax,DWORD PTR [ebx]
65001f6d:	add    eax,DWORD PTR [ebx]
65001f6f:	add    eax,DWORD PTR [ebx]
65001f71:	add    eax,DWORD PTR [ebx]
65001f73:	add    eax,DWORD PTR [ebx]
65001f75:	add    eax,DWORD PTR [ebx]
65001f77:	add    eax,DWORD PTR [ebx]
65001f79:	add    eax,DWORD PTR [ebx]
65001f7b:	add    eax,DWORD PTR [ebx]
65001f7d:	add    eax,DWORD PTR [ebx]
65001f7f:	add    eax,DWORD PTR [ebx]
65001f81:	add    eax,DWORD PTR [ebx]
65001f83:	add    eax,DWORD PTR [ebx]
65001f85:	add    eax,DWORD PTR [ebx]
65001f87:	add    eax,DWORD PTR [eax]
65001f89:	int3   
65001f8a:	int3   
65001f8b:	int3   
65001f8c:	int3   
65001f8d:	int3   
65001f8e:	int3   
65001f8f:	int3   
65001f90:	push   ebx
65001f91:	mov    ebx,DWORD PTR [esp+0x8]
65001f95:	push   edi
65001f96:	mov    edi,DWORD PTR [esp+0x10]
65001f9a:	push   edi
65001f9b:	push   ebx
65001f9c:	call   DWORD PTR ds:0x65024034
65001fa2:	test   eax,eax
65001fa4:	jne    0x65001fa9
65001fa6:	pop    edi
65001fa7:	pop    ebx
65001fa8:	ret    
65001fa9:	push   esi
65001faa:	push   eax
65001fab:	call   DWORD PTR ds:0x65024030
65001fb1:	mov    esi,eax
65001fb3:	test   esi,esi
65001fb5:	je     0x65001fe4
65001fb7:	push   edi
65001fb8:	push   ebx
65001fb9:	call   DWORD PTR ds:0x6502402c
65001fbf:	mov    ecx,DWORD PTR [esp+0x18]
65001fc3:	add    eax,esi
65001fc5:	and    ecx,0xf
65001fc8:	jbe    0x65001fe0
65001fca:	lea    ebx,[ebx+0x0]
65001fd0:	cmp    esi,eax
65001fd2:	jae    0x65001fe4
65001fd4:	sub    ecx,0x1
65001fd7:	movzx  edx,WORD PTR [esi]
65001fda:	lea    esi,[esi+edx*2+0x2]
65001fde:	jne    0x65001fd0
65001fe0:	cmp    esi,eax
65001fe2:	jb     0x65001fea
65001fe4:	pop    esi
65001fe5:	pop    edi
65001fe6:	xor    eax,eax
65001fe8:	pop    ebx
65001fe9:	ret    
65001fea:	mov    ax,WORD PTR [esi]
65001fed:	neg    ax
65001ff0:	sbb    eax,eax
65001ff2:	and    eax,esi
65001ff4:	pop    esi
65001ff5:	pop    edi
65001ff6:	pop    ebx
65001ff7:	ret    
65001ff8:	int3   
65001ff9:	int3   
65001ffa:	int3   
65001ffb:	int3   
65001ffc:	int3   
65001ffd:	int3   
65001ffe:	int3   
65001fff:	int3   
65002000:	push   ebx
65002001:	push   ebp
65002002:	push   esi
65002003:	push   edi
65002004:	xor    edi,edi
65002006:	push   edi
65002007:	mov    ecx,0x6502d4ec
6500200c:	call   0x65011b91
65002011:	mov    esi,eax
65002013:	test   esi,esi
65002015:	lea    ebp,[edi+0x1]
65002018:	je     0x65002067
6500201a:	mov    ebx,DWORD PTR [esp+0x14]
6500201e:	mov    edi,edi
65002020:	test   edi,edi
65002022:	jne    0x65002067
65002024:	mov    eax,DWORD PTR [esp+0x18]
65002028:	mov    ecx,ebx
6500202a:	shr    ecx,0x4
6500202d:	add    ecx,0x1
65002030:	push   eax
65002031:	movzx  edx,cx
65002034:	push   edx
65002035:	push   0x6
65002037:	push   esi
65002038:	call   DWORD PTR ds:0x6502403c
6500203e:	test   eax,eax
65002040:	je     0x65002053
65002042:	push   ebx
65002043:	push   eax
65002044:	push   esi
65002045:	call   0x65001f90
6500204a:	mov    edi,eax
6500204c:	add    esp,0xc
6500204f:	test   edi,edi
65002051:	jne    0x6500206e
65002053:	push   ebp
65002054:	mov    ecx,0x6502d4ec
65002059:	call   0x65011b91
6500205e:	mov    esi,eax
65002060:	add    ebp,0x1
65002063:	test   esi,esi
65002065:	jne    0x65002020
65002067:	pop    edi
65002068:	pop    esi
65002069:	pop    ebp
6500206a:	xor    eax,eax
6500206c:	pop    ebx
6500206d:	ret    
6500206e:	pop    edi
6500206f:	mov    eax,esi
65002071:	pop    esi
65002072:	pop    ebp
65002073:	pop    ebx
65002074:	ret    
65002075:	int3   
65002076:	int3   
65002077:	int3   
65002078:	int3   
65002079:	int3   
6500207a:	int3   
6500207b:	int3   
6500207c:	int3   
6500207d:	int3   
6500207e:	int3   
6500207f:	int3   
65002080:	push   0xffffffff
65002082:	push   0x65022528
65002087:	mov    eax,fs:0x0
6500208d:	push   eax
6500208e:	push   ecx
6500208f:	push   esi
65002090:	mov    eax,ds:0x6502c09c
65002095:	xor    eax,esp
65002097:	push   eax
65002098:	lea    eax,[esp+0xc]
6500209c:	mov    fs:0x0,eax
650020a2:	mov    esi,ecx
650020a4:	mov    DWORD PTR [esp+0x8],esi
650020a8:	call   0x65011f67
650020ad:	xor    eax,eax
650020af:	mov    DWORD PTR [esp+0x14],eax
650020b3:	lea    ecx,[esi+0xc]
650020b6:	mov    DWORD PTR [esi],0x650266dc
650020bc:	push   0xffffffff
650020be:	mov    DWORD PTR [ecx+0x14],eax
650020c1:	mov    DWORD PTR [ecx+0x18],0xf
650020c8:	push   eax
650020c9:	mov    BYTE PTR [ecx+0x4],al
650020cc:	mov    eax,DWORD PTR [esp+0x24]
650020d0:	push   eax
650020d1:	call   0x650017e0
650020d6:	mov    eax,esi
650020d8:	mov    ecx,DWORD PTR [esp+0xc]
650020dc:	mov    DWORD PTR fs:0x0,ecx
650020e3:	pop    ecx
650020e4:	pop    esi
650020e5:	add    esp,0x10
650020e8:	ret    0x4
650020eb:	int3   
650020ec:	int3   
650020ed:	int3   
650020ee:	int3   
650020ef:	int3   
650020f0:	push   esi
650020f1:	mov    esi,ecx
650020f3:	mov    DWORD PTR [esi],0x650266dc
650020f9:	cmp    DWORD PTR [esi+0x24],0x10
650020fd:	jb     0x6500210b
650020ff:	mov    eax,DWORD PTR [esi+0x10]
65002102:	push   eax
65002103:	call   0x65011f62
65002108:	add    esp,0x4
6500210b:	xor    eax,eax
6500210d:	mov    DWORD PTR [esi+0x24],0xf
65002114:	mov    DWORD PTR [esi+0x20],eax
65002117:	mov    ecx,esi
65002119:	mov    BYTE PTR [esi+0x10],al
6500211c:	call   0x65012036
65002121:	test   BYTE PTR [esp+0x8],0x1
65002126:	je     0x65002131
65002128:	push   esi
65002129:	call   0x65011f62
6500212e:	add    esp,0x4
65002131:	mov    eax,esi
65002133:	pop    esi
65002134:	ret    0x4
65002137:	int3   
65002138:	int3   
65002139:	int3   
6500213a:	int3   
6500213b:	int3   
6500213c:	int3   
6500213d:	int3   
6500213e:	int3   
6500213f:	int3   
65002140:	push   0xffffffff
65002142:	push   0x650224f8
65002147:	mov    eax,fs:0x0
6500214d:	push   eax
6500214e:	push   ecx
6500214f:	push   esi
65002150:	push   edi
65002151:	mov    eax,ds:0x6502c09c
65002156:	xor    eax,esp
65002158:	push   eax
65002159:	lea    eax,[esp+0x10]
6500215d:	mov    fs:0x0,eax
65002163:	mov    esi,ecx
65002165:	mov    DWORD PTR [esp+0xc],esi
65002169:	mov    edi,DWORD PTR [esp+0x20]
6500216d:	push   edi
6500216e:	call   0x65011fde
65002173:	xor    edx,edx
65002175:	mov    DWORD PTR [esp+0x18],edx
65002179:	push   0xffffffff
6500217b:	lea    ecx,[esi+0xc]
6500217e:	mov    DWORD PTR [esi],0x650266dc
65002184:	lea    eax,[edi+0xc]
65002187:	push   edx
65002188:	mov    DWORD PTR [ecx+0x18],0xf
6500218f:	mov    DWORD PTR [ecx+0x14],edx
65002192:	push   eax
65002193:	mov    BYTE PTR [ecx+0x4],dl
65002196:	call   0x650017e0
6500219b:	mov    eax,esi
6500219d:	mov    ecx,DWORD PTR [esp+0x10]
650021a1:	mov    DWORD PTR fs:0x0,ecx
650021a8:	pop    ecx
650021a9:	pop    edi
650021aa:	pop    esi
650021ab:	add    esp,0x10
650021ae:	ret    0x4
650021b1:	int3   
650021b2:	int3   
650021b3:	int3   
650021b4:	int3   
650021b5:	int3   
650021b6:	int3   
650021b7:	int3   
650021b8:	int3   
650021b9:	int3   
650021ba:	int3   
650021bb:	int3   
650021bc:	int3   
650021bd:	int3   
650021be:	int3   
650021bf:	int3   
650021c0:	push   ebp
650021c1:	mov    ebp,esp
650021c3:	and    esp,0xfffffff8
650021c6:	push   0xffffffff
650021c8:	push   0x65022dcb
650021cd:	mov    eax,fs:0x0
650021d3:	push   eax
650021d4:	sub    esp,0x428
650021da:	mov    eax,ds:0x6502c09c
650021df:	xor    eax,esp
650021e1:	mov    DWORD PTR [esp+0x420],eax
650021e8:	push   ebx
650021e9:	push   esi
650021ea:	push   edi
650021eb:	mov    eax,ds:0x6502c09c
650021f0:	xor    eax,esp
650021f2:	push   eax
650021f3:	lea    eax,[esp+0x438]
650021fa:	mov    fs:0x0,eax
65002200:	mov    eax,DWORD PTR [ebp+0x10]
65002203:	mov    esi,DWORD PTR [ebp+0x8]
65002206:	mov    ebx,DWORD PTR [ebp+0xc]
65002209:	lea    ecx,[esp+0x224]
65002210:	push   ecx
65002211:	push   0x100
65002216:	mov    DWORD PTR [esp+0x1c],esi
6500221a:	mov    DWORD PTR [esp+0x20],eax
6500221e:	mov    DWORD PTR [esp+0x18],0x0
65002226:	call   0x6500e1b0
6500222b:	call   eax
6500222d:	cmp    eax,0x100
65002232:	jbe    0x65002245
65002234:	push   0x650266cc
65002239:	mov    ecx,esi
6500223b:	call   0x650025b0
65002240:	jmp    0x650023d7
65002245:	lea    edx,[esp+0x1c]
65002249:	push   edx
6500224a:	push   0x0
6500224c:	lea    eax,[esp+0x22c]
65002253:	push   0x650266d0
65002258:	push   eax
65002259:	call   0x6500e230
6500225e:	call   eax
65002260:	test   eax,eax
65002262:	je     0x65002234
65002264:	mov    edi,DWORD PTR ds:0x6502404c
6500226a:	xor    esi,esi
6500226c:	lea    esp,[esp+0x0]
65002270:	cmp    esi,0x708
65002276:	je     0x65002355
6500227c:	lea    ecx,[esp+0x1c]
65002280:	push   ecx
65002281:	call   0x6500e090
65002286:	call   eax
65002288:	test   eax,eax
6500228a:	jne    0x6500229d
6500228c:	push   esi
6500228d:	call   edi
6500228f:	add    esi,0xc8
65002295:	cmp    esi,0x7d0
6500229b:	jne    0x65002270
6500229d:	xor    esi,esi
6500229f:	cmp    esi,0x708
650022a5:	je     0x65002355
650022ab:	lea    edx,[esp+0x1c]
650022af:	push   0x0
650022b1:	push   edx
650022b2:	call   0x6500e2b0
650022b7:	call   eax
650022b9:	test   eax,eax
650022bb:	jne    0x650022ce
650022bd:	push   esi
650022be:	call   edi
650022c0:	add    esi,0xc8
650022c6:	cmp    esi,0x7d0
650022cc:	jne    0x6500229f
650022ce:	lea    eax,[esp+0x1c]
650022d2:	lea    edx,[eax+0x2]
650022d5:	mov    cx,WORD PTR [eax]
650022d8:	add    eax,0x2
650022db:	test   cx,cx
650022de:	jne    0x650022d5
650022e0:	mov    ecx,DWORD PTR [esp+0x18]
650022e4:	sub    eax,edx
650022e6:	sar    eax,1
650022e8:	push   eax
650022e9:	lea    eax,[esp+0x20]
650022ed:	push   eax
650022ee:	call   0x65002b00
650022f3:	lea    ecx,[esp+0x1c]
650022f7:	push   ecx
650022f8:	lea    ecx,[esp+0x14]
650022fc:	call   0x650025b0
65002301:	push   0x650266d8
65002306:	lea    ecx,[esp+0x14]
6500230a:	mov    DWORD PTR [esp+0x444],0x0
65002315:	call   0x65002680
6500231a:	mov    eax,DWORD PTR [ebx]
6500231c:	mov    ecx,DWORD PTR [eax-0xc]
6500231f:	push   ecx
65002320:	push   eax
65002321:	lea    ecx,[esp+0x18]
65002325:	call   0x65002a00
6500232a:	mov    esi,DWORD PTR [esp+0x10]
6500232e:	mov    ecx,DWORD PTR [esi-0x10]
65002331:	mov    edx,DWORD PTR [ecx]
65002333:	mov    eax,DWORD PTR [edx+0x10]
65002336:	add    esi,0xfffffff0
65002339:	call   eax
6500233b:	cmp    DWORD PTR [esi+0xc],0x0
6500233f:	lea    edx,[esi+0xc]
65002342:	jl     0x65002367
65002344:	cmp    eax,DWORD PTR [esi]
65002346:	jne    0x65002367
65002348:	mov    edi,esi
6500234a:	mov    ecx,0x1
6500234f:	lock xadd DWORD PTR [edx],ecx
65002353:	jmp    0x650023a3
65002355:	mov    esi,DWORD PTR [esp+0x14]
65002359:	push   0x650266cc
6500235e:	mov    ecx,esi
65002360:	call   0x650025b0
65002365:	jmp    0x650023d7
65002367:	mov    ecx,DWORD PTR [esi+0x4]
6500236a:	mov    edx,DWORD PTR [eax]
6500236c:	mov    edx,DWORD PTR [edx]
6500236e:	push   0x2
65002370:	push   ecx
65002371:	mov    ecx,eax
65002373:	call   edx
65002375:	mov    edi,eax
65002377:	test   edi,edi
65002379:	jne    0x65002380
6500237b:	jmp    0x65001bb0
65002380:	mov    eax,DWORD PTR [esi+0x4]
65002383:	mov    DWORD PTR [edi+0x4],eax
65002386:	mov    eax,DWORD PTR [esi+0x4]
65002389:	lea    ecx,[eax+eax*1+0x2]
6500238d:	push   ecx
6500238e:	add    esi,0x10
65002391:	lea    edx,[eax+eax*1+0x2]
65002395:	push   esi
65002396:	push   edx
65002397:	lea    eax,[edi+0x10]
6500239a:	push   eax
6500239b:	call   0x650120d3
650023a0:	add    esp,0x10
650023a3:	mov    esi,DWORD PTR [esp+0x14]
650023a7:	mov    DWORD PTR [esp+0x440],0xffffffff
650023b2:	mov    eax,DWORD PTR [esp+0x10]
650023b6:	add    edi,0x10
650023b9:	add    eax,0xfffffff0
650023bc:	mov    DWORD PTR [esi],edi
650023be:	lea    ecx,[eax+0xc]
650023c1:	or     edx,0xffffffff
650023c4:	lock xadd DWORD PTR [ecx],edx
650023c8:	dec    edx
650023c9:	test   edx,edx
650023cb:	jg     0x650023d7
650023cd:	mov    ecx,DWORD PTR [eax]
650023cf:	mov    edx,DWORD PTR [ecx]
650023d1:	push   eax
650023d2:	mov    eax,DWORD PTR [edx+0x4]
650023d5:	call   eax
650023d7:	mov    eax,esi
650023d9:	mov    ecx,DWORD PTR [esp+0x438]
650023e0:	mov    DWORD PTR fs:0x0,ecx
650023e7:	pop    ecx
650023e8:	pop    edi
650023e9:	pop    esi
650023ea:	pop    ebx
650023eb:	mov    ecx,DWORD PTR [esp+0x420]
650023f2:	xor    ecx,esp
650023f4:	call   0x650127bc
650023f9:	mov    esp,ebp
650023fb:	pop    ebp
650023fc:	ret    
650023fd:	int3   
650023fe:	int3   
650023ff:	int3   
65002400:	push   0xffffffff
65002402:	push   0x65022da0
65002407:	mov    eax,fs:0x0
6500240d:	push   eax
6500240e:	sub    esp,0x4c
65002411:	push   ebx
65002412:	push   esi
65002413:	push   edi
65002414:	mov    eax,ds:0x6502c09c
65002419:	xor    eax,esp
6500241b:	push   eax
6500241c:	lea    eax,[esp+0x5c]
65002420:	mov    fs:0x0,eax
65002426:	xor    ebx,ebx
65002428:	push   ebx
65002429:	push   0x80
6500242e:	push   0x2
65002430:	push   ebx
65002431:	push   ebx
65002432:	mov    DWORD PTR [esp+0x78],ebx
65002436:	mov    edi,DWORD PTR [esp+0x80]
6500243d:	push   0x40000000
65002442:	push   edi
65002443:	call   0x6500e120
65002448:	call   eax
6500244a:	mov    esi,eax
6500244c:	mov    DWORD PTR [esp+0x10],esi
65002450:	cmp    esi,0xffffffff
65002453:	mov    BYTE PTR [esp+0x64],0x1
65002458:	push   ebx
65002459:	jne    0x6500249b
6500245b:	push   0x650266ce
65002460:	lea    ecx,[esp+0x20]
65002464:	mov    DWORD PTR [esp+0x38],0xf
6500246c:	mov    DWORD PTR [esp+0x34],ebx
65002470:	mov    BYTE PTR [esp+0x24],bl
65002474:	call   0x650018c0
65002479:	lea    eax,[esp+0x18]
6500247d:	push   eax
6500247e:	lea    ecx,[esp+0x38]
65002482:	mov    BYTE PTR [esp+0x68],0x2
65002487:	call   0x65002080
6500248c:	push   0x65029e84
65002491:	lea    ecx,[esp+0x38]
65002495:	push   ecx
65002496:	call   0x65012366
6500249b:	mov    eax,DWORD PTR [esp+0x78]
6500249f:	mov    ecx,DWORD PTR [esp+0x74]
650024a3:	lea    edx,[esp+0x18]
650024a7:	push   edx
650024a8:	push   eax
650024a9:	push   ecx
650024aa:	push   esi
650024ab:	call   DWORD PTR ds:0x65024088
650024b1:	test   eax,eax
650024b3:	jne    0x650024f6
650024b5:	push   ebx
650024b6:	push   0x650266ce
650024bb:	lea    ecx,[esp+0x20]
650024bf:	mov    DWORD PTR [esp+0x38],0xf
650024c7:	mov    DWORD PTR [esp+0x34],ebx
650024cb:	mov    BYTE PTR [esp+0x24],bl
650024cf:	call   0x650018c0
650024d4:	lea    edx,[esp+0x18]
650024d8:	push   edx
650024d9:	lea    ecx,[esp+0x38]
650024dd:	mov    BYTE PTR [esp+0x68],0x3
650024e2:	call   0x65002080
650024e7:	push   0x65029e84
650024ec:	lea    eax,[esp+0x38]
650024f0:	push   eax
650024f1:	call   0x65012366
650024f6:	cmp    esi,ebx
650024f8:	je     0x65002510
650024fa:	call   DWORD PTR ds:0x65024044
65002500:	push   esi
65002501:	mov    ebx,eax
65002503:	call   DWORD PTR ds:0x65024040
65002509:	push   ebx
6500250a:	call   DWORD PTR ds:0x6502405c
65002510:	lea    eax,[edi-0x10]
65002513:	mov    DWORD PTR [esp+0x64],0xffffffff
6500251b:	lea    ecx,[eax+0xc]
6500251e:	or     edx,0xffffffff
65002521:	lock xadd DWORD PTR [ecx],edx
65002525:	dec    edx
65002526:	test   edx,edx
65002528:	jg     0x65002534
6500252a:	mov    ecx,DWORD PTR [eax]
6500252c:	mov    edx,DWORD PTR [ecx]
6500252e:	push   eax
6500252f:	mov    eax,DWORD PTR [edx+0x4]
65002532:	call   eax
65002534:	mov    ecx,DWORD PTR [esp+0x5c]
65002538:	mov    DWORD PTR fs:0x0,ecx
6500253f:	pop    ecx
65002540:	pop    edi
65002541:	pop    esi
65002542:	pop    ebx
65002543:	add    esp,0x58
65002546:	ret    
65002547:	int3   
65002548:	int3   
65002549:	int3   
6500254a:	int3   
6500254b:	int3   
6500254c:	int3   
6500254d:	int3   
6500254e:	int3   
6500254f:	int3   
65002550:	sub    esp,0x8
65002553:	mov    DWORD PTR [esp],0x0
6500255a:	mov    DWORD PTR [esp+0x4],0x0
65002562:	call   DWORD PTR ds:0x6502c06c
65002568:	mov    eax,DWORD PTR [esp+0x10]
6500256c:	mov    eax,DWORD PTR [eax]
6500256e:	lea    ecx,[esp+0x4]
65002572:	push   ecx
65002573:	push   0x0
65002575:	lea    edx,[esp+0x8]
65002579:	push   edx
6500257a:	push   0x0
6500257c:	push   0x0
6500257e:	push   0x5
65002580:	push   0x1
65002582:	push   eax
65002583:	call   0x6500e560
65002588:	call   eax
6500258a:	test   eax,eax
6500258c:	jne    0x650025aa
6500258e:	mov    ecx,DWORD PTR [esp]
65002591:	mov    eax,DWORD PTR [esp+0xc]
65002595:	mov    eax,DWORD PTR [eax]
65002597:	push   0x0
65002599:	push   ecx
6500259a:	push   0x0
6500259c:	push   0x0
6500259e:	push   0x4
650025a0:	push   0x1
650025a2:	push   eax
650025a3:	call   0x6500e5f0
650025a8:	call   eax
650025aa:	add    esp,0x8
650025ad:	ret    
650025ae:	int3   
650025af:	int3   
650025b0:	push   0xffffffff
650025b2:	push   0x65022a68
650025b7:	mov    eax,fs:0x0
650025bd:	push   eax
650025be:	push   ecx
650025bf:	push   esi
650025c0:	push   edi
650025c1:	mov    eax,ds:0x6502c09c
650025c6:	xor    eax,esp
650025c8:	push   eax
650025c9:	lea    eax,[esp+0x10]
650025cd:	mov    fs:0x0,eax
650025d3:	mov    edi,ecx
650025d5:	mov    DWORD PTR [esp+0xc],edi
650025d9:	mov    eax,ds:0x6502d560
650025de:	mov    edx,DWORD PTR [eax+0xc]
650025e1:	mov    ecx,0x6502d560
650025e6:	call   edx
650025e8:	add    eax,0x10
650025eb:	mov    DWORD PTR [edi],eax
650025ed:	mov    edx,DWORD PTR [esp+0x20]
650025f1:	test   edx,edx
650025f3:	mov    DWORD PTR [esp+0x18],0x0
650025fb:	je     0x65002622
650025fd:	test   edx,0xffff0000
65002603:	jne    0x65002626
65002605:	movzx  esi,dx
65002608:	push   0x0
6500260a:	push   esi
6500260b:	call   0x65002000
65002610:	add    esp,0x8
65002613:	test   eax,eax
65002615:	je     0x65002648
65002617:	push   esi
65002618:	push   eax
65002619:	mov    ecx,edi
6500261b:	call   0x65002930
65002620:	jmp    0x65002648
65002622:	xor    eax,eax
65002624:	jmp    0x6500263f
65002626:	mov    eax,edx
65002628:	lea    esi,[eax+0x2]
6500262b:	jmp    0x65002630
6500262d:	lea    ecx,[ecx+0x0]
65002630:	mov    cx,WORD PTR [eax]
65002633:	add    eax,0x2
65002636:	test   cx,cx
65002639:	jne    0x65002630
6500263b:	sub    eax,esi
6500263d:	sar    eax,1
6500263f:	push   eax
65002640:	push   edx
65002641:	mov    ecx,edi
65002643:	call   0x65002b00
65002648:	mov    eax,edi
6500264a:	mov    ecx,DWORD PTR [esp+0x10]
6500264e:	mov    DWORD PTR fs:0x0,ecx
65002655:	pop    ecx
65002656:	pop    edi
65002657:	pop    esi
65002658:	add    esp,0x10
6500265b:	ret    0x4
6500265e:	int3   
6500265f:	int3   
65002660:	mov    eax,DWORD PTR [esp+0x4]
65002664:	mov    eax,DWORD PTR [eax]
65002666:	push   esi
65002667:	mov    esi,ecx
65002669:	mov    ecx,DWORD PTR [eax-0xc]
6500266c:	push   ecx
6500266d:	push   eax
6500266e:	mov    ecx,esi
65002670:	call   0x65002a00
65002675:	mov    eax,esi
65002677:	pop    esi
65002678:	ret    0x4
6500267b:	int3   
6500267c:	int3   
6500267d:	int3   
6500267e:	int3   
6500267f:	int3   
65002680:	push   0xffffffff
65002682:	push   0x65022a38
65002687:	mov    eax,fs:0x0
6500268d:	push   eax
6500268e:	push   ecx
6500268f:	push   esi
65002690:	mov    eax,ds:0x6502c09c
65002695:	xor    eax,esp
65002697:	push   eax
65002698:	lea    eax,[esp+0xc]
6500269c:	mov    fs:0x0,eax
650026a2:	mov    esi,ecx
650026a4:	mov    eax,DWORD PTR [esi]
650026a6:	mov    ecx,DWORD PTR [eax-0x10]
650026a9:	test   ecx,ecx
650026ab:	je     0x650026b8
650026ad:	mov    edx,DWORD PTR [ecx]
650026af:	mov    eax,DWORD PTR [edx+0x10]
650026b2:	call   eax
650026b4:	test   eax,eax
650026b6:	jne    0x650026c8
650026b8:	mov    edx,DWORD PTR ds:0x6502d560
650026be:	mov    eax,DWORD PTR [edx+0x10]
650026c1:	mov    ecx,0x6502d560
650026c6:	call   eax
650026c8:	mov    ecx,DWORD PTR [esp+0x1c]
650026cc:	push   eax
650026cd:	push   ecx
650026ce:	lea    ecx,[esp+0x10]
650026d2:	call   0x65002780
650026d7:	mov    DWORD PTR [esp+0x14],0x0
650026df:	mov    eax,DWORD PTR [esp+0x8]
650026e3:	mov    ecx,DWORD PTR [eax-0xc]
650026e6:	push   ecx
650026e7:	push   eax
650026e8:	mov    ecx,esi
650026ea:	call   0x65002a00
650026ef:	mov    DWORD PTR [esp+0x14],0xffffffff
650026f7:	mov    eax,DWORD PTR [esp+0x8]
650026fb:	add    eax,0xfffffff0
650026fe:	lea    edx,[eax+0xc]
65002701:	or     ecx,0xffffffff
65002704:	lock xadd DWORD PTR [edx],ecx
65002708:	dec    ecx
65002709:	test   ecx,ecx
6500270b:	jg     0x65002717
6500270d:	mov    ecx,DWORD PTR [eax]
6500270f:	mov    edx,DWORD PTR [ecx]
65002711:	push   eax
65002712:	mov    eax,DWORD PTR [edx+0x4]
65002715:	call   eax
65002717:	mov    eax,esi
65002719:	mov    ecx,DWORD PTR [esp+0xc]
6500271d:	mov    DWORD PTR fs:0x0,ecx
65002724:	pop    ecx
65002725:	pop    esi
65002726:	add    esp,0x10
65002729:	ret    0x4
6500272c:	int3   
6500272d:	int3   
6500272e:	int3   
6500272f:	int3   
65002730:	mov    edx,DWORD PTR [esp+0x4]
65002734:	push   esi
65002735:	mov    esi,ecx
65002737:	mov    eax,edx
65002739:	push   edi
6500273a:	mov    DWORD PTR [esi+0x18],0xf
65002741:	mov    DWORD PTR [esi+0x14],0x0
65002748:	mov    BYTE PTR [esi+0x4],0x0
6500274c:	lea    edi,[eax+0x1]
6500274f:	nop
65002750:	mov    cl,BYTE PTR [eax]
65002752:	add    eax,0x1
65002755:	test   cl,cl
65002757:	jne    0x65002750
65002759:	sub    eax,edi
6500275b:	push   eax
6500275c:	push   edx
6500275d:	mov    ecx,esi
6500275f:	call   0x650018c0
65002764:	pop    edi
65002765:	mov    eax,esi
65002767:	pop    esi
65002768:	ret    0x4
6500276b:	int3   
6500276c:	int3   
6500276d:	int3   
6500276e:	int3   
6500276f:	int3   
65002770:	mov    eax,DWORD PTR [ecx]
65002772:	push   eax
65002773:	call   0x65011f62
65002778:	pop    ecx
65002779:	ret    
6500277a:	int3   
6500277b:	int3   
6500277c:	int3   
6500277d:	int3   
6500277e:	int3   
6500277f:	int3   
65002780:	push   0xffffffff
65002782:	push   0x65022a08
65002787:	mov    eax,fs:0x0
6500278d:	push   eax
6500278e:	push   ecx
6500278f:	push   esi
65002790:	push   edi
65002791:	mov    eax,ds:0x6502c09c
65002796:	xor    eax,esp
65002798:	push   eax
65002799:	lea    eax,[esp+0x10]
6500279d:	mov    fs:0x0,eax
650027a3:	mov    esi,ecx
650027a5:	mov    DWORD PTR [esp+0xc],esi
650027a9:	mov    ecx,DWORD PTR [esp+0x24]
650027ad:	xor    eax,eax
650027af:	test   ecx,ecx
650027b1:	setne  al
650027b4:	test   eax,eax
650027b6:	jne    0x650027c2
650027b8:	push   0x80004005
650027bd:	call   0x650010a0
650027c2:	mov    eax,DWORD PTR [ecx]
650027c4:	mov    edx,DWORD PTR [eax+0xc]
650027c7:	call   edx
650027c9:	add    eax,0x10
650027cc:	mov    DWORD PTR [esi],eax
650027ce:	mov    eax,DWORD PTR [esp+0x20]
650027d2:	test   eax,eax
650027d4:	mov    DWORD PTR [esp+0x18],0x0
650027dc:	je     0x65002802
650027de:	test   eax,0xffff0000
650027e3:	jne    0x65002802
650027e5:	movzx  edi,ax
650027e8:	push   0x0
650027ea:	push   edi
650027eb:	call   0x65002000
650027f0:	add    esp,0x8
650027f3:	test   eax,eax
650027f5:	je     0x6500280a
650027f7:	push   edi
650027f8:	push   eax
650027f9:	mov    ecx,esi
650027fb:	call   0x65002930
65002800:	jmp    0x6500280a
65002802:	push   eax
65002803:	mov    ecx,esi
65002805:	call   0x65002820
6500280a:	mov    eax,esi
6500280c:	mov    ecx,DWORD PTR [esp+0x10]
65002810:	mov    DWORD PTR fs:0x0,ecx
65002817:	pop    ecx
65002818:	pop    edi
65002819:	pop    esi
6500281a:	add    esp,0x10
6500281d:	ret    0x8
65002820:	push   ebx
65002821:	mov    ebx,DWORD PTR [esp+0x8]
65002825:	test   ebx,ebx
65002827:	push   ebp
65002828:	push   esi
65002829:	push   edi
6500282a:	mov    edi,ecx
6500282c:	je     0x650028a4
6500282e:	call   DWORD PTR ds:0x6502c06c
65002834:	mov    ebp,DWORD PTR ds:0x65024024
6500283a:	push   0x0
6500283c:	push   0x0
6500283e:	push   0xffffffff
65002840:	push   ebx
65002841:	push   0x0
65002843:	push   eax
65002844:	call   ebp
65002846:	mov    esi,eax
65002848:	sub    esi,0x1
6500284b:	test   esi,esi
6500284d:	jle    0x650028a4
6500284f:	mov    eax,DWORD PTR [edi]
65002851:	mov    edx,DWORD PTR [eax-0x8]
65002854:	sub    eax,0x10
65002857:	mov    ecx,0x1
6500285c:	sub    ecx,DWORD PTR [eax+0xc]
6500285f:	sub    edx,esi
65002861:	or     ecx,edx
65002863:	jge    0x6500286d
65002865:	push   esi
65002866:	mov    ecx,edi
65002868:	call   0x65001e60
6500286d:	mov    eax,DWORD PTR [edi]
6500286f:	push   esi
65002870:	push   eax
65002871:	push   0xffffffff
65002873:	push   ebx
65002874:	push   0x0
65002876:	call   DWORD PTR ds:0x6502c06c
6500287c:	push   eax
6500287d:	call   ebp
6500287f:	mov    eax,DWORD PTR [edi]
65002881:	cmp    esi,DWORD PTR [eax-0x8]
65002884:	jg     0x6500289a
65002886:	mov    DWORD PTR [eax-0xc],esi
65002889:	mov    eax,DWORD PTR [edi]
6500288b:	mov    WORD PTR [eax+esi*2],0x0
65002891:	mov    eax,edi
65002893:	pop    edi
65002894:	pop    esi
65002895:	pop    ebp
65002896:	pop    ebx
65002897:	ret    0x4
6500289a:	push   0x80070057
6500289f:	call   0x650010a0
650028a4:	mov    ecx,edi
650028a6:	call   0x65002a90
650028ab:	mov    eax,edi
650028ad:	pop    edi
650028ae:	pop    esi
650028af:	pop    ebp
650028b0:	pop    ebx
650028b1:	ret    0x4
650028b4:	int3   
650028b5:	int3   
650028b6:	int3   
650028b7:	int3   
650028b8:	int3   
650028b9:	int3   
650028ba:	int3   
650028bb:	int3   
650028bc:	int3   
650028bd:	int3   
650028be:	int3   
650028bf:	int3   
650028c0:	push   esi
650028c1:	mov    esi,DWORD PTR [esp+0x8]
650028c5:	mov    ecx,DWORD PTR [esi]
650028c7:	mov    eax,DWORD PTR [ecx]
650028c9:	mov    edx,DWORD PTR [eax+0x10]
650028cc:	push   edi
650028cd:	call   edx
650028cf:	cmp    DWORD PTR [esi+0xc],0x0
650028d3:	lea    ecx,[esi+0xc]
650028d6:	jl     0x650028ec
650028d8:	cmp    eax,DWORD PTR [esi]
650028da:	jne    0x650028ec
650028dc:	mov    edi,esi
650028de:	mov    eax,0x1
650028e3:	lock xadd DWORD PTR [ecx],eax
650028e7:	mov    eax,edi
650028e9:	pop    edi
650028ea:	pop    esi
650028eb:	ret    
650028ec:	mov    ecx,DWORD PTR [esi+0x4]
650028ef:	mov    edx,DWORD PTR [eax]
650028f1:	mov    edx,DWORD PTR [edx]
650028f3:	push   0x2
650028f5:	push   ecx
650028f6:	mov    ecx,eax
650028f8:	call   edx
650028fa:	mov    edi,eax
650028fc:	test   edi,edi
650028fe:	jne    0x65002905
65002900:	jmp    0x65001bb0
65002905:	mov    eax,DWORD PTR [esi+0x4]
65002908:	mov    DWORD PTR [edi+0x4],eax
6500290b:	mov    eax,DWORD PTR [esi+0x4]
6500290e:	lea    eax,[eax+eax*1+0x2]
65002912:	push   eax
65002913:	add    esi,0x10
65002916:	push   esi
65002917:	push   eax
65002918:	lea    ecx,[edi+0x10]
6500291b:	push   ecx
6500291c:	call   0x650120d3
65002921:	add    esp,0x10
65002924:	mov    eax,edi
65002926:	pop    edi
65002927:	pop    esi
65002928:	ret    
65002929:	int3   
6500292a:	int3   
6500292b:	int3   
6500292c:	int3   
6500292d:	int3   
6500292e:	int3   
6500292f:	int3   
65002930:	push   ebx
65002931:	push   esi
65002932:	mov    esi,DWORD PTR [esp+0x10]
65002936:	mov    eax,esi
65002938:	shr    eax,0x4
6500293b:	push   edi
6500293c:	mov    edi,DWORD PTR [esp+0x10]
65002940:	add    eax,0x1
65002943:	mov    ebx,ecx
65002945:	movzx  ecx,ax
65002948:	push   0x6
6500294a:	push   ecx
6500294b:	push   edi
6500294c:	call   DWORD PTR ds:0x65024038
65002952:	test   eax,eax
65002954:	je     0x65002967
65002956:	push   esi
65002957:	push   eax
65002958:	push   edi
65002959:	call   0x65001f90
6500295e:	mov    esi,eax
65002960:	add    esp,0xc
65002963:	test   esi,esi
65002965:	jne    0x6500296f
65002967:	pop    edi
65002968:	pop    esi
65002969:	xor    eax,eax
6500296b:	pop    ebx
6500296c:	ret    0x8
6500296f:	mov    eax,DWORD PTR [ebx]
65002971:	movzx  edi,WORD PTR [esi]
65002974:	sub    eax,0x10
65002977:	mov    edx,0x1
6500297c:	sub    edx,DWORD PTR [eax+0xc]
6500297f:	mov    eax,DWORD PTR [eax+0x8]
65002982:	sub    eax,edi
65002984:	or     edx,eax
65002986:	jge    0x65002990
65002988:	push   edi
65002989:	mov    ecx,ebx
6500298b:	call   0x65001e60
65002990:	movzx  eax,WORD PTR [esi]
65002993:	cmp    eax,0xffffffff
65002996:	push   ebp
65002997:	mov    ebp,DWORD PTR [ebx]
65002999:	lea    edx,[esi+0x2]
6500299c:	jne    0x650029b5
6500299e:	mov    eax,edx
650029a0:	lea    esi,[eax+0x2]
650029a3:	mov    cx,WORD PTR [eax]
650029a6:	add    eax,0x2
650029a9:	test   cx,cx
650029ac:	jne    0x650029a3
650029ae:	sub    eax,esi
650029b0:	sar    eax,1
650029b2:	add    eax,0x1
650029b5:	lea    ecx,[eax+eax*1]
650029b8:	push   ecx
650029b9:	push   edx
650029ba:	lea    esi,[edi+edi*1]
650029bd:	push   esi
650029be:	push   ebp
650029bf:	call   0x650120d3
650029c4:	push   eax
650029c5:	call   0x65001ef0
650029ca:	add    esp,0x14
650029cd:	test   edi,edi
650029cf:	pop    ebp
650029d0:	jl     0x650029ef
650029d2:	mov    eax,DWORD PTR [ebx]
650029d4:	cmp    edi,DWORD PTR [eax-0x8]
650029d7:	jg     0x650029ef
650029d9:	mov    DWORD PTR [eax-0xc],edi
650029dc:	mov    edx,DWORD PTR [ebx]
650029de:	pop    edi
650029df:	mov    WORD PTR [esi+edx*1],0x0
650029e5:	pop    esi
650029e6:	mov    eax,0x1
650029eb:	pop    ebx
650029ec:	ret    0x8
650029ef:	push   0x80070057
650029f4:	call   0x650010a0
650029f9:	int3   
650029fa:	int3   
650029fb:	int3   
650029fc:	int3   
650029fd:	int3   
650029fe:	int3   
650029ff:	int3   
65002a00:	push   ebx
65002a01:	push   ebp
65002a02:	push   esi
65002a03:	mov    esi,DWORD PTR [esp+0x10]
65002a07:	mov    ebp,ecx
65002a09:	mov    eax,DWORD PTR [ebp+0x0]
65002a0c:	mov    ebx,DWORD PTR [eax-0xc]
65002a0f:	mov    ecx,DWORD PTR [esp+0x14]
65002a13:	sub    esi,eax
65002a15:	mov    edx,0x1
65002a1a:	sub    edx,DWORD PTR [eax-0x4]
65002a1d:	mov    eax,DWORD PTR [eax-0x8]
65002a20:	push   edi
65002a21:	lea    edi,[ebx+ecx*1]
65002a24:	sub    eax,edi
65002a26:	sar    esi,1
65002a28:	or     edx,eax
65002a2a:	jge    0x65002a34
65002a2c:	push   edi
65002a2d:	mov    ecx,ebp
65002a2f:	call   0x65001e60
65002a34:	cmp    esi,ebx
65002a36:	mov    ecx,DWORD PTR [ebp+0x0]
65002a39:	ja     0x65002a42
65002a3b:	lea    edx,[ecx+esi*2]
65002a3e:	mov    DWORD PTR [esp+0x14],edx
65002a42:	mov    eax,DWORD PTR [esp+0x18]
65002a46:	mov    edx,DWORD PTR [esp+0x14]
65002a4a:	add    eax,eax
65002a4c:	push   eax
65002a4d:	push   edx
65002a4e:	push   eax
65002a4f:	lea    eax,[ecx+ebx*2]
65002a52:	push   eax
65002a53:	call   0x650120d3
65002a58:	add    esp,0x10
65002a5b:	test   edi,edi
65002a5d:	jl     0x65002a7a
65002a5f:	mov    eax,DWORD PTR [ebp+0x0]
65002a62:	cmp    edi,DWORD PTR [eax-0x8]
65002a65:	jg     0x65002a7a
65002a67:	mov    DWORD PTR [eax-0xc],edi
65002a6a:	mov    ecx,DWORD PTR [ebp+0x0]
65002a6d:	mov    WORD PTR [ecx+edi*2],0x0
65002a73:	pop    edi
65002a74:	pop    esi
65002a75:	pop    ebp
65002a76:	pop    ebx
65002a77:	ret    0x8
65002a7a:	push   0x80070057
65002a7f:	call   0x650010a0
65002a84:	int3   
65002a85:	int3   
65002a86:	int3   
65002a87:	int3   
65002a88:	int3   
65002a89:	int3   
65002a8a:	int3   
65002a8b:	int3   
65002a8c:	int3   
65002a8d:	int3   
65002a8e:	int3   
65002a8f:	int3   
65002a90:	push   esi
65002a91:	mov    esi,ecx
65002a93:	mov    ecx,DWORD PTR [esi]
65002a95:	cmp    DWORD PTR [ecx-0xc],0x0
65002a99:	lea    eax,[ecx-0x10]
65002a9c:	push   edi
65002a9d:	mov    edi,DWORD PTR [eax]
65002a9f:	je     0x65002aef
65002aa1:	cmp    DWORD PTR [eax+0xc],0x0
65002aa5:	lea    edx,[eax+0xc]
65002aa8:	jge    0x65002acb
65002aaa:	cmp    DWORD PTR [ecx-0x8],0x0
65002aae:	jge    0x65002aba
65002ab0:	push   0x80070057
65002ab5:	call   0x650010a0
65002aba:	mov    DWORD PTR [ecx-0xc],0x0
65002ac1:	mov    eax,DWORD PTR [esi]
65002ac3:	pop    edi
65002ac4:	mov    WORD PTR [eax],0x0
65002ac9:	pop    esi
65002aca:	ret    
65002acb:	or     ecx,0xffffffff
65002ace:	lock xadd DWORD PTR [edx],ecx
65002ad2:	dec    ecx
65002ad3:	test   ecx,ecx
65002ad5:	jg     0x65002ae1
65002ad7:	mov    ecx,DWORD PTR [eax]
65002ad9:	mov    edx,DWORD PTR [ecx]
65002adb:	push   eax
65002adc:	mov    eax,DWORD PTR [edx+0x4]
65002adf:	call   eax
65002ae1:	mov    edx,DWORD PTR [edi]
65002ae3:	mov    eax,DWORD PTR [edx+0xc]
65002ae6:	mov    ecx,edi
65002ae8:	call   eax
65002aea:	add    eax,0x10
65002aed:	mov    DWORD PTR [esi],eax
65002aef:	pop    edi
65002af0:	pop    esi
65002af1:	ret    
65002af2:	int3   
65002af3:	int3   
65002af4:	int3   
65002af5:	int3   
65002af6:	int3   
65002af7:	int3   
65002af8:	int3   
65002af9:	int3   
65002afa:	int3   
65002afb:	int3   
65002afc:	int3   
65002afd:	int3   
65002afe:	int3   
65002aff:	int3   
65002b00:	push   ebx
65002b01:	mov    ebx,DWORD PTR [esp+0xc]
65002b05:	test   ebx,ebx
65002b07:	push   ebp
65002b08:	mov    ebp,ecx
65002b0a:	jne    0x65002b16
65002b0c:	call   0x65002a90
65002b11:	pop    ebp
65002b12:	pop    ebx
65002b13:	ret    0x8
65002b16:	push   esi
65002b17:	mov    esi,DWORD PTR [esp+0x10]
65002b1b:	test   esi,esi
65002b1d:	jne    0x65002b29
65002b1f:	push   0x80070057
65002b24:	call   0x650010a0
65002b29:	mov    eax,DWORD PTR [ebp+0x0]
65002b2c:	mov    edx,DWORD PTR [eax-0x8]
65002b2f:	mov    ecx,0x1
65002b34:	sub    ecx,DWORD PTR [eax-0x4]
65002b37:	sub    esi,eax
65002b39:	sub    edx,ebx
65002b3b:	sar    esi,1
65002b3d:	or     ecx,edx
65002b3f:	push   edi
65002b40:	mov    edi,DWORD PTR [eax-0xc]
65002b43:	jge    0x65002b4d
65002b45:	push   ebx
65002b46:	mov    ecx,ebp
65002b48:	call   0x65001e60
65002b4d:	mov    eax,DWORD PTR [ebp+0x0]
65002b50:	cmp    esi,edi
65002b52:	lea    edi,[ebx+ebx*1]
65002b55:	push   edi
65002b56:	ja     0x65002b65
65002b58:	lea    ecx,[eax+esi*2]
65002b5b:	push   ecx
65002b5c:	push   edi
65002b5d:	push   eax
65002b5e:	call   0x6501214e
65002b63:	jmp    0x65002b71
65002b65:	mov    edx,DWORD PTR [esp+0x18]
65002b69:	push   edx
65002b6a:	push   edi
65002b6b:	push   eax
65002b6c:	call   0x650120d3
65002b71:	add    esp,0x10
65002b74:	test   ebx,ebx
65002b76:	jl     0x65002b93
65002b78:	mov    eax,DWORD PTR [ebp+0x0]
65002b7b:	cmp    ebx,DWORD PTR [eax-0x8]
65002b7e:	jg     0x65002b93
65002b80:	mov    DWORD PTR [eax-0xc],ebx
65002b83:	mov    eax,DWORD PTR [ebp+0x0]
65002b86:	mov    WORD PTR [edi+eax*1],0x0
65002b8c:	pop    edi
65002b8d:	pop    esi
65002b8e:	pop    ebp
65002b8f:	pop    ebx
65002b90:	ret    0x8
65002b93:	push   0x80070057
65002b98:	call   0x650010a0
65002b9d:	int3   
65002b9e:	int3   
65002b9f:	int3   
65002ba0:	push   esi
65002ba1:	mov    esi,DWORD PTR [esp+0x8]
65002ba5:	test   esi,esi
65002ba7:	je     0x65002bd8
65002ba9:	mov    eax,DWORD PTR [esp+0xc]
65002bad:	test   eax,eax
65002baf:	je     0x65002bd8
65002bb1:	mov    ecx,DWORD PTR [esp+0x10]
65002bb5:	mov    edx,DWORD PTR [esp+0x14]
65002bb9:	push   0x0
65002bbb:	push   0x0
65002bbd:	push   ecx
65002bbe:	push   esi
65002bbf:	push   0xffffffff
65002bc1:	push   eax
65002bc2:	push   0x0
65002bc4:	push   edx
65002bc5:	mov    BYTE PTR [esi],0x0
65002bc8:	call   DWORD PTR ds:0x65024028
65002bce:	neg    eax
65002bd0:	sbb    eax,eax
65002bd2:	and    eax,esi
65002bd4:	pop    esi
65002bd5:	ret    0x10
65002bd8:	xor    eax,eax
65002bda:	pop    esi
65002bdb:	ret    0x10
65002bde:	int3   
65002bdf:	int3   
65002be0:	mov    eax,DWORD PTR [esi]
65002be2:	test   eax,eax
65002be4:	je     0x65002bf3
65002be6:	push   eax
65002be7:	call   DWORD PTR ds:0x65024000
65002bed:	mov    DWORD PTR [esi],0x0
65002bf3:	ret    
65002bf4:	int3   
65002bf5:	int3   
65002bf6:	int3   
65002bf7:	int3   
65002bf8:	int3   
65002bf9:	int3   
65002bfa:	int3   
65002bfb:	int3   
65002bfc:	int3   
65002bfd:	int3   
65002bfe:	int3   
65002bff:	int3   
65002c00:	push   ecx
65002c01:	mov    eax,DWORD PTR [edi]
65002c03:	lea    ecx,[esp]
65002c06:	push   ecx
65002c07:	mov    ecx,DWORD PTR [esp+0xc]
65002c0b:	push   esi
65002c0c:	add    eax,eax
65002c0e:	lea    edx,[esp+0x14]
65002c12:	push   edx
65002c13:	mov    DWORD PTR [esp+0xc],eax
65002c17:	mov    eax,DWORD PTR [esp+0x18]
65002c1b:	push   0x0
65002c1d:	mov    DWORD PTR [edi],0x0
65002c23:	mov    edx,DWORD PTR [ecx]
65002c25:	push   eax
65002c26:	push   edx
65002c27:	call   DWORD PTR ds:0x65024008
65002c2d:	test   eax,eax
65002c2f:	jne    0x65002c6e
65002c31:	mov    eax,DWORD PTR [esp+0xc]
65002c35:	cmp    eax,0x1
65002c38:	je     0x65002c3f
65002c3a:	cmp    eax,0x2
65002c3d:	jne    0x65002c5a
65002c3f:	test   esi,esi
65002c41:	mov    eax,DWORD PTR [esp]
65002c44:	je     0x65002c68
65002c46:	test   eax,eax
65002c48:	je     0x65002c63
65002c4a:	test   al,0x1
65002c4c:	jne    0x65002c5a
65002c4e:	mov    ecx,eax
65002c50:	shr    ecx,1
65002c52:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
65002c58:	je     0x65002c68
65002c5a:	mov    eax,0xd
65002c5f:	pop    ecx
65002c60:	ret    0x8
65002c63:	mov    WORD PTR [esi],0x0
65002c68:	shr    eax,1
65002c6a:	mov    DWORD PTR [edi],eax
65002c6c:	xor    eax,eax
65002c6e:	pop    ecx
65002c6f:	ret    0x8
65002c72:	int3   
65002c73:	int3   
65002c74:	int3   
65002c75:	int3   
65002c76:	int3   
65002c77:	int3   
65002c78:	int3   
65002c79:	int3   
65002c7a:	int3   
65002c7b:	int3   
65002c7c:	int3   
65002c7d:	int3   
65002c7e:	int3   
65002c7f:	int3   
65002c80:	ret    
65002c81:	int3   
65002c82:	int3   
65002c83:	int3   
65002c84:	int3   
65002c85:	int3   
65002c86:	int3   
65002c87:	int3   
65002c88:	int3   
65002c89:	int3   
65002c8a:	int3   
65002c8b:	int3   
65002c8c:	int3   
65002c8d:	int3   
65002c8e:	int3   
65002c8f:	int3   
65002c90:	mov    eax,DWORD PTR [esp+0xc]
65002c94:	cmp    eax,0x4
65002c97:	mov    ecx,DWORD PTR [esp+0x8]
65002c9b:	mov    edx,DWORD PTR [esp+0x4]
65002c9f:	push   esi
65002ca0:	push   edi
65002ca1:	jb     0x65002cb7
65002ca3:	mov    esi,DWORD PTR [edx]
65002ca5:	cmp    esi,DWORD PTR [ecx]
65002ca7:	jne    0x65002cbb
65002ca9:	sub    eax,0x4
65002cac:	add    ecx,0x4
65002caf:	add    edx,0x4
65002cb2:	cmp    eax,0x4
65002cb5:	jae    0x65002ca3
65002cb7:	test   eax,eax
65002cb9:	je     0x65002d19
65002cbb:	movzx  esi,BYTE PTR [edx]
65002cbe:	movzx  edi,BYTE PTR [ecx]
65002cc1:	sub    esi,edi
65002cc3:	jne    0x65002d0a
65002cc5:	sub    eax,0x1
65002cc8:	add    ecx,0x1
65002ccb:	add    edx,0x1
65002cce:	test   eax,eax
65002cd0:	je     0x65002d19
65002cd2:	movzx  esi,BYTE PTR [edx]
65002cd5:	movzx  edi,BYTE PTR [ecx]
65002cd8:	sub    esi,edi
65002cda:	jne    0x65002d0a
65002cdc:	sub    eax,0x1
65002cdf:	add    ecx,0x1
65002ce2:	add    edx,0x1
65002ce5:	test   eax,eax
65002ce7:	je     0x65002d19
65002ce9:	movzx  esi,BYTE PTR [edx]
65002cec:	movzx  edi,BYTE PTR [ecx]
65002cef:	sub    esi,edi
65002cf1:	jne    0x65002d0a
65002cf3:	sub    eax,0x1
65002cf6:	add    ecx,0x1
65002cf9:	add    edx,0x1
65002cfc:	test   eax,eax
65002cfe:	je     0x65002d19
65002d00:	movzx  esi,BYTE PTR [edx]
65002d03:	movzx  eax,BYTE PTR [ecx]
65002d06:	sub    esi,eax
65002d08:	je     0x65002d19
65002d0a:	test   esi,esi
65002d0c:	mov    eax,0x1
65002d11:	jg     0x65002d1b
65002d13:	pop    edi
65002d14:	or     eax,0xffffffff
65002d17:	pop    esi
65002d18:	ret    
65002d19:	xor    eax,eax
65002d1b:	pop    edi
65002d1c:	pop    esi
65002d1d:	ret    
65002d1e:	int3   
65002d1f:	int3   
65002d20:	push   0xffffffff
65002d22:	push   0x650224c8
65002d27:	mov    eax,fs:0x0
65002d2d:	push   eax
65002d2e:	push   ecx
65002d2f:	push   esi
65002d30:	mov    eax,ds:0x6502c09c
65002d35:	xor    eax,esp
65002d37:	push   eax
65002d38:	lea    eax,[esp+0xc]
65002d3c:	mov    fs:0x0,eax
65002d42:	mov    esi,ecx
65002d44:	mov    DWORD PTR [esp+0x8],esi
65002d48:	call   0x65011f67
65002d4d:	xor    eax,eax
65002d4f:	mov    DWORD PTR [esp+0x14],eax
65002d53:	lea    ecx,[esi+0xc]
65002d56:	mov    DWORD PTR [esi],0x65024c04
65002d5c:	push   0xffffffff
65002d5e:	mov    DWORD PTR [ecx+0x14],eax
65002d61:	mov    DWORD PTR [ecx+0x18],0xf
65002d68:	push   eax
65002d69:	mov    BYTE PTR [ecx+0x4],al
65002d6c:	mov    eax,DWORD PTR [esp+0x24]
65002d70:	push   eax
65002d71:	call   0x650017e0
65002d76:	mov    eax,esi
65002d78:	mov    ecx,DWORD PTR [esp+0xc]
65002d7c:	mov    DWORD PTR fs:0x0,ecx
65002d83:	pop    ecx
65002d84:	pop    esi
65002d85:	add    esp,0x10
65002d88:	ret    0x4
65002d8b:	int3   
65002d8c:	int3   
65002d8d:	int3   
65002d8e:	int3   
65002d8f:	int3   
65002d90:	cmp    DWORD PTR [ecx+0x24],0x10
65002d94:	jb     0x65002d9a
65002d96:	mov    eax,DWORD PTR [ecx+0x10]
65002d99:	ret    
65002d9a:	lea    eax,[ecx+0x10]
65002d9d:	ret    
65002d9e:	int3   
65002d9f:	int3   
65002da0:	push   esi
65002da1:	mov    esi,ecx
65002da3:	mov    DWORD PTR [esi],0x65024c04
65002da9:	cmp    DWORD PTR [esi+0x24],0x10
65002dad:	jb     0x65002dbb
65002daf:	mov    eax,DWORD PTR [esi+0x10]
65002db2:	push   eax
65002db3:	call   0x65011f62
65002db8:	add    esp,0x4
65002dbb:	xor    eax,eax
65002dbd:	mov    DWORD PTR [esi+0x24],0xf
65002dc4:	mov    DWORD PTR [esi+0x20],eax
65002dc7:	mov    BYTE PTR [esi+0x10],al
65002dca:	mov    ecx,esi
65002dcc:	pop    esi
65002dcd:	jmp    0x65012036
65002dd2:	int3   
65002dd3:	int3   
65002dd4:	int3   
65002dd5:	int3   
65002dd6:	int3   
65002dd7:	int3   
65002dd8:	int3   
65002dd9:	int3   
65002dda:	int3   
65002ddb:	int3   
65002ddc:	int3   
65002ddd:	int3   
65002dde:	int3   
65002ddf:	int3   
65002de0:	push   esi
65002de1:	mov    esi,ecx
65002de3:	mov    DWORD PTR [esi],0x65024c04
65002de9:	cmp    DWORD PTR [esi+0x24],0x10
65002ded:	jb     0x65002dfb
65002def:	mov    eax,DWORD PTR [esi+0x10]
65002df2:	push   eax
65002df3:	call   0x65011f62
65002df8:	add    esp,0x4
65002dfb:	xor    eax,eax
65002dfd:	mov    DWORD PTR [esi+0x24],0xf
65002e04:	mov    DWORD PTR [esi+0x20],eax
65002e07:	mov    ecx,esi
65002e09:	mov    BYTE PTR [esi+0x10],al
65002e0c:	call   0x65012036
65002e11:	test   BYTE PTR [esp+0x8],0x1
65002e16:	je     0x65002e21
65002e18:	push   esi
65002e19:	call   0x65011f62
65002e1e:	add    esp,0x4
65002e21:	mov    eax,esi
65002e23:	pop    esi
65002e24:	ret    0x4
65002e27:	int3   
65002e28:	int3   
65002e29:	int3   
65002e2a:	int3   
65002e2b:	int3   
65002e2c:	int3   
65002e2d:	int3   
65002e2e:	int3   
65002e2f:	int3   
65002e30:	mov    eax,DWORD PTR [esp+0x4]
65002e34:	push   esi
65002e35:	push   eax
65002e36:	mov    esi,ecx
65002e38:	call   0x65002e50
65002e3d:	mov    DWORD PTR [esi],0x65024c1c
65002e43:	mov    eax,esi
65002e45:	pop    esi
65002e46:	ret    0x4
65002e49:	int3   
65002e4a:	int3   
65002e4b:	int3   
65002e4c:	int3   
65002e4d:	int3   
65002e4e:	int3   
65002e4f:	int3   
65002e50:	push   0xffffffff
65002e52:	push   0x65022498
65002e57:	mov    eax,fs:0x0
65002e5d:	push   eax
65002e5e:	push   ecx
65002e5f:	push   esi
65002e60:	push   edi
65002e61:	mov    eax,ds:0x6502c09c
65002e66:	xor    eax,esp
65002e68:	push   eax
65002e69:	lea    eax,[esp+0x10]
65002e6d:	mov    fs:0x0,eax
65002e73:	mov    esi,ecx
65002e75:	mov    DWORD PTR [esp+0xc],esi
65002e79:	mov    edi,DWORD PTR [esp+0x20]
65002e7d:	push   edi
65002e7e:	call   0x65011fde
65002e83:	xor    edx,edx
65002e85:	mov    DWORD PTR [esp+0x18],edx
65002e89:	push   0xffffffff
65002e8b:	lea    ecx,[esi+0xc]
65002e8e:	mov    DWORD PTR [esi],0x65024c04
65002e94:	lea    eax,[edi+0xc]
65002e97:	push   edx
65002e98:	mov    DWORD PTR [ecx+0x18],0xf
65002e9f:	mov    DWORD PTR [ecx+0x14],edx
65002ea2:	push   eax
65002ea3:	mov    BYTE PTR [ecx+0x4],dl
65002ea6:	call   0x650017e0
65002eab:	mov    eax,esi
65002ead:	mov    ecx,DWORD PTR [esp+0x10]
65002eb1:	mov    DWORD PTR fs:0x0,ecx
65002eb8:	pop    ecx
65002eb9:	pop    edi
65002eba:	pop    esi
65002ebb:	add    esp,0x10
65002ebe:	ret    0x4
65002ec1:	int3   
65002ec2:	int3   
65002ec3:	int3   
65002ec4:	int3   
65002ec5:	int3   
65002ec6:	int3   
65002ec7:	int3   
65002ec8:	int3   
65002ec9:	int3   
65002eca:	int3   
65002ecb:	int3   
65002ecc:	int3   
65002ecd:	int3   
65002ece:	int3   
65002ecf:	int3   
65002ed0:	sub    esp,0x6c
65002ed3:	mov    eax,ds:0x6502c09c
65002ed8:	xor    eax,esp
65002eda:	mov    DWORD PTR [esp+0x68],eax
65002ede:	mov    eax,DWORD PTR [esp+0x74]
65002ee2:	movzx  ecx,BYTE PTR [eax+0xf]
65002ee6:	movzx  edx,BYTE PTR [eax+0xe]
65002eea:	push   esi
65002eeb:	push   ecx
65002eec:	movzx  ecx,BYTE PTR [eax+0xd]
65002ef0:	push   edx
65002ef1:	movzx  edx,BYTE PTR [eax+0xc]
65002ef5:	push   ecx
65002ef6:	movzx  ecx,BYTE PTR [eax+0xb]
65002efa:	push   edx
65002efb:	movzx  edx,BYTE PTR [eax+0xa]
65002eff:	mov    esi,DWORD PTR [esp+0x84]
65002f06:	push   ecx
65002f07:	movzx  ecx,BYTE PTR [eax+0x9]
65002f0b:	push   edx
65002f0c:	movzx  edx,BYTE PTR [eax+0x8]
65002f10:	push   ecx
65002f11:	movzx  ecx,WORD PTR [eax+0x6]
65002f15:	push   edx
65002f16:	movzx  edx,WORD PTR [eax+0x4]
65002f1a:	mov    eax,DWORD PTR [eax]
65002f1c:	push   ecx
65002f1d:	push   edx
65002f1e:	push   eax
65002f1f:	push   0x650266e4
65002f24:	push   0x32
65002f26:	push   0x6502671c
65002f2b:	mov    DWORD PTR [esp+0x3c],0x0
65002f33:	call   0x65006a80
65002f38:	add    esp,0xc
65002f3b:	push   eax
65002f3c:	lea    ecx,[esp+0x38]
65002f40:	push   0x64
65002f42:	push   ecx
65002f43:	call   0x6501330d
65002f48:	add    esp,0x38
65002f4b:	lea    edx,[esp+0x8]
65002f4f:	push   edx
65002f50:	mov    ecx,esi
65002f52:	call   0x650067e0
65002f57:	mov    ecx,DWORD PTR [esp+0x6c]
65002f5b:	mov    eax,esi
65002f5d:	pop    esi
65002f5e:	xor    ecx,esp
65002f60:	call   0x650127bc
65002f65:	add    esp,0x6c
65002f68:	ret    
65002f69:	int3   
65002f6a:	int3   
65002f6b:	int3   
65002f6c:	int3   
65002f6d:	int3   
65002f6e:	int3   
65002f6f:	int3   
65002f70:	push   0xffffffff
65002f72:	push   0x650229d8
65002f77:	mov    eax,fs:0x0
65002f7d:	push   eax
65002f7e:	sub    esp,0x24
65002f81:	mov    eax,ds:0x6502c09c
65002f86:	xor    eax,esp
65002f88:	mov    DWORD PTR [esp+0x20],eax
65002f8c:	push   ebx
65002f8d:	push   ebp
65002f8e:	push   edi
65002f8f:	mov    eax,ds:0x6502c09c
65002f94:	xor    eax,esp
65002f96:	push   eax
65002f97:	lea    eax,[esp+0x34]
65002f9b:	mov    fs:0x0,eax
65002fa1:	mov    DWORD PTR [esp+0x3c],0x0
65002fa9:	call   DWORD PTR ds:0x6502c06c
65002faf:	mov    eax,ds:0x65024b98
65002fb4:	mov    ecx,DWORD PTR ds:0x65024b9c
65002fba:	mov    edx,DWORD PTR ds:0x65024ba0
65002fc0:	mov    DWORD PTR [esp+0x20],eax
65002fc4:	mov    eax,ds:0x65024ba4
65002fc9:	mov    DWORD PTR [esp+0x2c],eax
65002fcd:	mov    eax,DWORD PTR [esp+0x44]
65002fd1:	mov    DWORD PTR [esp+0x24],ecx
65002fd5:	mov    DWORD PTR [esp+0x28],edx
65002fd9:	cmp    DWORD PTR [eax-0xc],0x0
65002fdd:	jle    0x65002ffd
65002fdf:	lea    ebx,[esp+0x44]
65002fe3:	call   0x650069b0
65002fe8:	mov    edi,ebx
65002fea:	call   0x65007370
65002fef:	call   0x65006930
65002ff4:	call   0x65007370
65002ff9:	mov    eax,DWORD PTR [esp+0x44]
65002ffd:	cmp    DWORD PTR [eax-0x4],0x1
65003001:	jle    0x65003014
65003003:	mov    ecx,DWORD PTR [eax-0xc]
65003006:	push   ecx
65003007:	lea    ecx,[esp+0x48]
6500300b:	call   0x650019b0
65003010:	mov    eax,DWORD PTR [esp+0x44]
65003014:	lea    edx,[esp+0x20]
65003018:	push   edx
65003019:	push   eax
6500301a:	call   DWORD PTR ds:0x650241ac
65003020:	test   eax,eax
65003022:	je     0x65003041
65003024:	mov    eax,ds:0x65024ba4
65003029:	mov    edi,DWORD PTR ds:0x65024b98
6500302f:	mov    ebx,DWORD PTR ds:0x65024b9c
65003035:	mov    ebp,DWORD PTR ds:0x65024ba0
6500303b:	mov    DWORD PTR [esp+0x1c],eax
6500303f:	jmp    0x65003055
65003041:	mov    edx,DWORD PTR [esp+0x2c]
65003045:	mov    edi,DWORD PTR [esp+0x20]
65003049:	mov    ebx,DWORD PTR [esp+0x24]
6500304d:	mov    ebp,DWORD PTR [esp+0x28]
65003051:	mov    DWORD PTR [esp+0x1c],edx
65003055:	mov    DWORD PTR [esp+0x3c],0xffffffff
6500305d:	mov    eax,DWORD PTR [esp+0x44]
65003061:	add    eax,0xfffffff0
65003064:	or     edx,0xffffffff
65003067:	lea    ecx,[eax+0xc]
6500306a:	lock xadd DWORD PTR [ecx],edx
6500306e:	dec    edx
6500306f:	test   edx,edx
65003071:	jg     0x6500307d
65003073:	mov    ecx,DWORD PTR [eax]
65003075:	mov    edx,DWORD PTR [ecx]
65003077:	push   eax
65003078:	mov    eax,DWORD PTR [edx+0x4]
6500307b:	call   eax
6500307d:	mov    ecx,DWORD PTR [esp+0x1c]
65003081:	mov    DWORD PTR [esi],edi
65003083:	mov    DWORD PTR [esi+0x4],ebx
65003086:	mov    DWORD PTR [esi+0x8],ebp
65003089:	mov    eax,esi
6500308b:	mov    DWORD PTR [esi+0xc],ecx
6500308e:	mov    ecx,DWORD PTR [esp+0x34]
65003092:	mov    DWORD PTR fs:0x0,ecx
65003099:	pop    ecx
6500309a:	pop    edi
6500309b:	pop    ebp
6500309c:	pop    ebx
6500309d:	mov    ecx,DWORD PTR [esp+0x20]
650030a1:	xor    ecx,esp
650030a3:	call   0x650127bc
650030a8:	add    esp,0x30
650030ab:	ret    
650030ac:	int3   
650030ad:	int3   
650030ae:	int3   
650030af:	int3   
650030b0:	push   ebp
650030b1:	mov    ebp,esp
650030b3:	sub    esp,0x18
650030b6:	mov    eax,ds:0x6502c09c
650030bb:	xor    eax,ebp
650030bd:	mov    DWORD PTR [ebp-0x4],eax
650030c0:	mov    eax,DWORD PTR [ebp+0x8]
650030c3:	push   ebx
650030c4:	push   esi
650030c5:	push   edi
650030c6:	mov    DWORD PTR [ebp-0x14],eax
650030c9:	mov    DWORD PTR [ebp-0x18],0x0
650030d0:	call   DWORD PTR ds:0x6502c06c
650030d6:	movzx  ecx,BYTE PTR [ebp+0xc]
650030da:	push   ecx
650030db:	push   0x65026750
650030e0:	push   0x6
650030e2:	push   0x65026780
650030e7:	mov    ebx,eax
650030e9:	call   0x65006a80
650030ee:	add    esp,0xc
650030f1:	push   eax
650030f2:	lea    edx,[ebp-0x10]
650030f5:	push   edx
650030f6:	call   0x65013292
650030fb:	add    esp,0xc
650030fe:	lea    eax,[ebp-0x10]
65003101:	push   eax
65003102:	call   DWORD PTR ds:0x65024054
65003108:	mov    esi,eax
6500310a:	add    esi,0x1
6500310d:	cmp    esi,0x3fffffff
65003113:	jg     0x65003141
65003115:	lea    eax,[esi+esi*1]
65003118:	call   0x65012ec0
6500311d:	mov    edi,esp
6500311f:	test   edi,edi
65003121:	je     0x65003141
65003123:	push   esi
65003124:	push   edi
65003125:	push   0xffffffff
65003127:	lea    ecx,[ebp-0x10]
6500312a:	push   ecx
6500312b:	push   0x0
6500312d:	push   ebx
6500312e:	mov    WORD PTR [edi],0x0
65003133:	call   DWORD PTR ds:0x65024024
65003139:	neg    eax
6500313b:	sbb    eax,eax
6500313d:	and    eax,edi
6500313f:	jmp    0x65003143
65003141:	xor    eax,eax
65003143:	mov    esi,DWORD PTR [ebp-0x14]
65003146:	push   eax
65003147:	mov    ecx,esi
65003149:	call   0x650025b0
6500314e:	mov    eax,esi
65003150:	lea    esp,[ebp-0x24]
65003153:	pop    edi
65003154:	pop    esi
65003155:	pop    ebx
65003156:	mov    ecx,DWORD PTR [ebp-0x4]
65003159:	xor    ecx,ebp
6500315b:	call   0x650127bc
65003160:	mov    esp,ebp
65003162:	pop    ebp
65003163:	ret    
65003164:	int3   
65003165:	int3   
65003166:	int3   
65003167:	int3   
65003168:	int3   
65003169:	int3   
6500316a:	int3   
6500316b:	int3   
6500316c:	int3   
6500316d:	int3   
6500316e:	int3   
6500316f:	int3   
65003170:	push   0xffffffff
65003172:	push   0x65023299
65003177:	mov    eax,fs:0x0
6500317d:	push   eax
6500317e:	sub    esp,0x20
65003181:	push   ebx
65003182:	push   ebp
65003183:	push   esi
65003184:	push   edi
65003185:	mov    eax,ds:0x6502c09c
6500318a:	xor    eax,esp
6500318c:	push   eax
6500318d:	lea    eax,[esp+0x34]
65003191:	mov    fs:0x0,eax
65003197:	xor    ebx,ebx
65003199:	mov    DWORD PTR [esp+0x3c],ebx
6500319d:	mov    DWORD PTR [esp+0x18],ebx
650031a1:	mov    eax,ds:0x6502d560
650031a6:	mov    edx,DWORD PTR [eax+0xc]
650031a9:	mov    ecx,0x6502d560
650031ae:	call   edx
650031b0:	mov    edi,DWORD PTR [esp+0x44]
650031b4:	add    eax,0x10
650031b7:	mov    DWORD PTR [edi],eax
650031b9:	mov    esi,DWORD PTR [esp+0x48]
650031bd:	mov    DWORD PTR [esp+0x3c],ebx
650031c1:	mov    eax,DWORD PTR [esi]
650031c3:	mov    ecx,0x1
650031c8:	sub    eax,0x10
650031cb:	cmp    DWORD PTR [eax+0xc],ecx
650031ce:	mov    DWORD PTR [esp+0x18],ecx
650031d2:	jle    0x650031df
650031d4:	mov    eax,DWORD PTR [eax+0x4]
650031d7:	push   eax
650031d8:	mov    ecx,esi
650031da:	call   0x650019b0
650031df:	mov    ebp,DWORD PTR [esi]
650031e1:	movzx  eax,WORD PTR [ebp+0x0]
650031e5:	cmp    ax,bx
650031e8:	je     0x65003489
650031ee:	cmp    ax,0x41
650031f2:	jb     0x650031fe
650031f4:	cmp    ax,0x5a
650031f8:	jbe    0x6500342f
650031fe:	cmp    ax,0x61
65003202:	jb     0x6500320e
65003204:	cmp    ax,0x7a
65003208:	jbe    0x6500342f
6500320e:	cmp    ax,0x30
65003212:	jb     0x65003229
65003214:	cmp    ax,0x39
65003218:	ja     0x65003229
6500321a:	movzx  ecx,BYTE PTR [ebp+0x0]
6500321e:	push   ecx
6500321f:	call   0x65006870
65003224:	jmp    0x65003479
65003229:	cmp    ax,0x20
6500322d:	jne    0x6500327b
6500322f:	mov    eax,DWORD PTR [edi]
65003231:	mov    ebx,DWORD PTR [eax-0xc]
65003234:	mov    ecx,0x1
65003239:	sub    ecx,DWORD PTR [eax-0x4]
6500323c:	mov    eax,DWORD PTR [eax-0x8]
6500323f:	lea    esi,[ebx+0x1]
65003242:	sub    eax,esi
65003244:	or     eax,ecx
65003246:	jge    0x65003250
65003248:	push   esi
65003249:	mov    ecx,edi
6500324b:	call   0x65001e60
65003250:	test   esi,esi
65003252:	mov    eax,DWORD PTR [edi]
65003254:	mov    WORD PTR [eax+ebx*2],0x2b
6500325a:	jl     0x6500349f
65003260:	mov    eax,DWORD PTR [edi]
65003262:	cmp    esi,DWORD PTR [eax-0x8]
65003265:	jg     0x6500349f
6500326b:	mov    DWORD PTR [eax-0xc],esi
6500326e:	mov    edx,DWORD PTR [edi]
65003270:	mov    WORD PTR [edx+esi*2],0x0
65003276:	jmp    0x65003479
6500327b:	cmp    ax,0x2d
6500327f:	je     0x6500342f
65003285:	cmp    ax,0x5f
65003289:	je     0x6500342f
6500328f:	cmp    ax,0x2e
65003293:	je     0x6500342f
65003299:	cmp    ax,0x21
6500329d:	je     0x6500342f
650032a3:	cmp    ax,0x7e
650032a7:	je     0x6500342f
650032ad:	cmp    ax,0x2a
650032b1:	je     0x6500342f
650032b7:	cmp    ax,0x27
650032bb:	je     0x6500342f
650032c1:	cmp    ax,0x28
650032c5:	je     0x6500342f
650032cb:	cmp    ax,0x29
650032cf:	je     0x6500342f
650032d5:	cmp    ax,0x7f
650032d9:	ja     0x65003310
650032db:	movzx  eax,BYTE PTR [ebp+0x0]
650032df:	push   eax
650032e0:	lea    ecx,[esp+0x20]
650032e4:	push   ecx
650032e5:	call   0x650030b0
650032ea:	add    esp,0x8
650032ed:	push   eax
650032ee:	mov    ecx,edi
650032f0:	mov    DWORD PTR [esp+0x40],0x1
650032f8:	call   0x65002660
650032fd:	lea    ecx,[esp+0x1c]
65003301:	mov    BYTE PTR [esp+0x3c],0x0
65003306:	call   0x65001990
6500330b:	jmp    0x65003479
65003310:	cmp    ax,0x7ff
65003314:	ja     0x65003385
65003316:	shr    eax,0x6
65003319:	or     eax,0xffffffc0
6500331c:	push   eax
6500331d:	lea    edx,[esp+0x24]
65003321:	push   edx
65003322:	call   0x650030b0
65003327:	add    esp,0x8
6500332a:	push   eax
6500332b:	mov    ecx,edi
6500332d:	mov    DWORD PTR [esp+0x40],0x2
65003335:	call   0x65002660
6500333a:	lea    ecx,[esp+0x20]
6500333e:	mov    BYTE PTR [esp+0x3c],0x0
65003343:	call   0x65001990
65003348:	movzx  eax,BYTE PTR [ebp+0x0]
6500334c:	and    eax,0xffffff3f
65003351:	or     eax,0xffffff80
65003354:	push   eax
65003355:	lea    ecx,[esp+0x28]
65003359:	push   ecx
6500335a:	call   0x650030b0
6500335f:	add    esp,0x8
65003362:	push   eax
65003363:	mov    ecx,edi
65003365:	mov    DWORD PTR [esp+0x40],0x3
6500336d:	call   0x65002660
65003372:	lea    ecx,[esp+0x24]
65003376:	mov    BYTE PTR [esp+0x3c],0x0
6500337b:	call   0x65001990
65003380:	jmp    0x65003479
65003385:	shr    ax,0xc
65003389:	lea    edx,[esp+0x28]
6500338d:	or     eax,0xffffffe0
65003390:	push   eax
65003391:	push   edx
65003392:	call   0x650030b0
65003397:	add    esp,0x8
6500339a:	push   eax
6500339b:	mov    ecx,edi
6500339d:	mov    DWORD PTR [esp+0x40],0x4
650033a5:	call   0x65002660
650033aa:	lea    ecx,[esp+0x28]
650033ae:	mov    BYTE PTR [esp+0x3c],0x0
650033b3:	call   0x65001990
650033b8:	movzx  eax,WORD PTR [ebp+0x0]
650033bc:	shr    ax,0x6
650033c0:	lea    ecx,[esp+0x2c]
650033c4:	and    eax,0xffffff3f
650033c9:	or     eax,0xffffff80
650033cc:	push   eax
650033cd:	push   ecx
650033ce:	call   0x650030b0
650033d3:	add    esp,0x8
650033d6:	push   eax
650033d7:	mov    ecx,edi
650033d9:	mov    DWORD PTR [esp+0x40],0x5
650033e1:	call   0x65002660
650033e6:	lea    ecx,[esp+0x2c]
650033ea:	mov    BYTE PTR [esp+0x3c],0x0
650033ef:	call   0x65001990
650033f4:	movzx  edx,BYTE PTR [ebp+0x0]
650033f8:	and    edx,0xffffff3f
650033fe:	or     edx,0xffffff80
65003401:	push   edx
65003402:	lea    eax,[esp+0x34]
65003406:	push   eax
65003407:	call   0x650030b0
6500340c:	add    esp,0x8
6500340f:	push   eax
65003410:	mov    ecx,edi
65003412:	mov    DWORD PTR [esp+0x40],0x6
6500341a:	call   0x65002660
6500341f:	lea    ecx,[esp+0x30]
65003423:	mov    BYTE PTR [esp+0x3c],0x0
65003428:	call   0x65001990
6500342d:	jmp    0x65003479
6500342f:	mov    cl,BYTE PTR [ebp+0x0]
65003432:	mov    eax,DWORD PTR [edi]
65003434:	mov    ebx,DWORD PTR [eax-0xc]
65003437:	mov    BYTE PTR [esp+0x14],cl
6500343b:	mov    ecx,0x1
65003440:	sub    ecx,DWORD PTR [eax-0x4]
65003443:	mov    eax,DWORD PTR [eax-0x8]
65003446:	lea    esi,[ebx+0x1]
65003449:	sub    eax,esi
6500344b:	or     eax,ecx
6500344d:	jge    0x65003457
6500344f:	push   esi
65003450:	mov    ecx,edi
65003452:	call   0x65001e60
65003457:	test   esi,esi
65003459:	movsx  dx,BYTE PTR [esp+0x14]
6500345f:	mov    eax,DWORD PTR [edi]
65003461:	mov    WORD PTR [eax+ebx*2],dx
65003465:	jl     0x6500349f
65003467:	mov    eax,DWORD PTR [edi]
65003469:	cmp    esi,DWORD PTR [eax-0x8]
6500346c:	jg     0x6500349f
6500346e:	mov    DWORD PTR [eax-0xc],esi
65003471:	mov    eax,DWORD PTR [edi]
65003473:	mov    WORD PTR [eax+esi*2],0x0
65003479:	movzx  eax,WORD PTR [ebp+0x2]
6500347d:	add    ebp,0x2
65003480:	test   ax,ax
65003483:	jne    0x650031ee
65003489:	mov    eax,edi
6500348b:	mov    ecx,DWORD PTR [esp+0x34]
6500348f:	mov    DWORD PTR fs:0x0,ecx
65003496:	pop    ecx
65003497:	pop    edi
65003498:	pop    esi
65003499:	pop    ebp
6500349a:	pop    ebx
6500349b:	add    esp,0x2c
6500349e:	ret    
6500349f:	push   0x80070057
650034a4:	call   0x650010a0
650034a9:	int3   
650034aa:	int3   
650034ab:	int3   
650034ac:	int3   
650034ad:	int3   
650034ae:	int3   
650034af:	int3   
650034b0:	push   0xffffffff
650034b2:	push   0x65022d59
650034b7:	mov    eax,fs:0x0
650034bd:	push   eax
650034be:	sub    esp,0x48
650034c1:	push   ebx
650034c2:	push   esi
650034c3:	push   edi
650034c4:	mov    eax,ds:0x6502c09c
650034c9:	xor    eax,esp
650034cb:	push   eax
650034cc:	lea    eax,[esp+0x58]
650034d0:	mov    fs:0x0,eax
650034d6:	xor    ebx,ebx
650034d8:	mov    DWORD PTR [esp+0x60],ebx
650034dc:	mov    DWORD PTR [esp+0x10],ebx
650034e0:	mov    eax,ds:0x6502d560
650034e5:	mov    edx,DWORD PTR [eax+0xc]
650034e8:	mov    ecx,0x6502d560
650034ed:	call   edx
650034ef:	mov    edi,DWORD PTR [esp+0x68]
650034f3:	add    eax,0x10
650034f6:	mov    DWORD PTR [edi],eax
650034f8:	mov    DWORD PTR [esp+0x60],ebx
650034fc:	mov    ecx,0x1
65003501:	sub    ecx,DWORD PTR [eax-0x4]
65003504:	mov    eax,DWORD PTR [eax-0x8]
65003507:	sub    eax,0x800
6500350c:	cmp    BYTE PTR [esp+0x6c],bl
65003510:	mov    DWORD PTR [esp+0x10],0x1
65003518:	je     0x650035ab
6500351e:	or     eax,ecx
65003520:	jge    0x6500352e
65003522:	push   0x800
65003527:	mov    ecx,edi
65003529:	call   0x65001e60
6500352e:	mov    eax,DWORD PTR [edi]
65003530:	push   0x800
65003535:	push   eax
65003536:	call   0x6500e3c0
6500353b:	call   eax
6500353d:	test   eax,eax
6500353f:	jne    0x65003632
65003545:	push   0x65026788
6500354a:	push   0x22
6500354c:	push   0x650267c0
65003551:	call   0x65006a80
65003556:	mov    ecx,eax
65003558:	add    esp,0xc
6500355b:	mov    DWORD PTR [esp+0x2c],0xf
65003563:	mov    DWORD PTR [esp+0x28],ebx
65003567:	mov    BYTE PTR [esp+0x18],bl
6500356b:	lea    esi,[ecx+0x1]
6500356e:	mov    edi,edi
65003570:	mov    dl,BYTE PTR [ecx]
65003572:	add    ecx,0x1
65003575:	cmp    dl,bl
65003577:	jne    0x65003570
65003579:	sub    ecx,esi
6500357b:	push   ecx
6500357c:	push   eax
6500357d:	lea    ecx,[esp+0x1c]
65003581:	call   0x650018c0
65003586:	lea    eax,[esp+0x14]
6500358a:	push   eax
6500358b:	lea    ecx,[esp+0x34]
6500358f:	mov    DWORD PTR [esp+0x64],0x1
65003597:	call   0x65002080
6500359c:	push   0x65029e84
650035a1:	lea    ecx,[esp+0x34]
650035a5:	push   ecx
650035a6:	call   0x65012366
650035ab:	or     eax,ecx
650035ad:	jge    0x650035bb
650035af:	push   0x800
650035b4:	mov    ecx,edi
650035b6:	call   0x65001e60
650035bb:	mov    eax,DWORD PTR [edi]
650035bd:	push   0x800
650035c2:	push   eax
650035c3:	call   0x6500ded0
650035c8:	call   eax
650035ca:	test   eax,eax
650035cc:	jne    0x65003632
650035ce:	push   0x650267e4
650035d3:	push   0x1c
650035d5:	push   0x65026810
650035da:	call   0x65006a80
650035df:	mov    ecx,eax
650035e1:	add    esp,0xc
650035e4:	mov    DWORD PTR [esp+0x2c],0xf
650035ec:	mov    DWORD PTR [esp+0x28],ebx
650035f0:	mov    BYTE PTR [esp+0x18],bl
650035f4:	lea    esi,[ecx+0x1]
650035f7:	mov    dl,BYTE PTR [ecx]
650035f9:	add    ecx,0x1
650035fc:	cmp    dl,bl
650035fe:	jne    0x650035f7
65003600:	sub    ecx,esi
65003602:	push   ecx
65003603:	push   eax
65003604:	lea    ecx,[esp+0x1c]
65003608:	call   0x650018c0
6500360d:	lea    edx,[esp+0x14]
65003611:	push   edx
65003612:	lea    ecx,[esp+0x34]
65003616:	mov    DWORD PTR [esp+0x64],0x2
6500361e:	call   0x65002080
65003623:	push   0x65029e84
65003628:	lea    eax,[esp+0x34]
6500362c:	push   eax
6500362d:	call   0x65012366
65003632:	mov    edx,DWORD PTR [edi]
65003634:	cmp    edx,ebx
65003636:	jne    0x6500363c
65003638:	xor    eax,eax
6500363a:	jmp    0x65003652
6500363c:	mov    eax,edx
6500363e:	lea    esi,[eax+0x2]
65003641:	mov    cx,WORD PTR [eax]
65003644:	add    eax,0x2
65003647:	cmp    cx,bx
6500364a:	jne    0x65003641
6500364c:	sub    eax,esi
6500364e:	sar    eax,1
65003650:	js     0x65003694
65003652:	cmp    eax,DWORD PTR [edx-0x8]
65003655:	jg     0x65003694
65003657:	mov    DWORD PTR [edx-0xc],eax
6500365a:	mov    ecx,DWORD PTR [edi]
6500365c:	mov    WORD PTR [ecx+eax*2],bx
65003660:	mov    ecx,DWORD PTR [edi]
65003662:	mov    edx,DWORD PTR [ecx-0xc]
65003665:	lea    eax,[edx-0x1]
65003668:	cmp    eax,ebx
6500366a:	jl     0x65003694
6500366c:	cmp    eax,edx
6500366e:	jg     0x65003694
65003670:	movzx  eax,WORD PTR [ecx+eax*2]
65003674:	cmp    ax,0x5c
65003678:	je     0x6500367f
6500367a:	call   0x650068d0
6500367f:	mov    eax,edi
65003681:	mov    ecx,DWORD PTR [esp+0x58]
65003685:	mov    DWORD PTR fs:0x0,ecx
6500368c:	pop    ecx
6500368d:	pop    edi
6500368e:	pop    esi
6500368f:	pop    ebx
65003690:	add    esp,0x54
65003693:	ret    
65003694:	push   0x80070057
65003699:	call   0x650010a0
6500369e:	int3   
6500369f:	int3   
650036a0:	push   0xffffffff
650036a2:	push   0x65023231
650036a7:	mov    eax,fs:0x0
650036ad:	push   eax
650036ae:	sub    esp,0x48
650036b1:	push   ebx
650036b2:	push   ebp
650036b3:	push   esi
650036b4:	push   edi
650036b5:	mov    eax,ds:0x6502c09c
650036ba:	xor    eax,esp
650036bc:	push   eax
650036bd:	lea    eax,[esp+0x5c]
650036c1:	mov    fs:0x0,eax
650036c7:	mov    esi,DWORD PTR [esp+0x6c]
650036cb:	xor    ebx,ebx
650036cd:	push   ebx
650036ce:	mov    DWORD PTR [esp+0x68],ebx
650036d2:	push   esi
650036d3:	mov    DWORD PTR [esp+0x1c],ebx
650036d7:	call   0x650034b0
650036dc:	add    esp,0x8
650036df:	mov    DWORD PTR [esp+0x64],ebx
650036e3:	mov    eax,DWORD PTR [esi]
650036e5:	mov    ebp,0x1
650036ea:	sub    eax,0x10
650036ed:	cmp    DWORD PTR [eax+0xc],ebp
650036f0:	mov    DWORD PTR [esp+0x14],ebp
650036f4:	jle    0x65003701
650036f6:	mov    eax,DWORD PTR [eax+0x4]
650036f9:	push   eax
650036fa:	mov    ecx,esi
650036fc:	call   0x650019b0
65003701:	mov    eax,DWORD PTR [esi]
65003703:	push   0x5c
65003705:	push   eax
65003706:	call   0x6501320b
6500370b:	mov    edi,eax
6500370d:	add    esp,0x8
65003710:	cmp    edi,ebx
65003712:	jne    0x65003776
65003714:	push   0x65026830
65003719:	push   0x18
6500371b:	push   0x65026870
65003720:	call   0x65006a80
65003725:	mov    ecx,eax
65003727:	add    esp,0xc
6500372a:	mov    DWORD PTR [esp+0x30],0xf
65003732:	mov    DWORD PTR [esp+0x2c],ebx
65003736:	mov    BYTE PTR [esp+0x1c],bl
6500373a:	lea    esi,[ecx+0x1]
6500373d:	lea    ecx,[ecx+0x0]
65003740:	mov    dl,BYTE PTR [ecx]
65003742:	add    ecx,ebp
65003744:	cmp    dl,bl
65003746:	jne    0x65003740
65003748:	sub    ecx,esi
6500374a:	push   ecx
6500374b:	push   eax
6500374c:	lea    ecx,[esp+0x20]
65003750:	call   0x650018c0
65003755:	lea    ecx,[esp+0x18]
65003759:	push   ecx
6500375a:	lea    ecx,[esp+0x38]
6500375e:	mov    DWORD PTR [esp+0x68],ebp
65003762:	call   0x65002080
65003767:	push   0x65029e84
6500376c:	lea    edx,[esp+0x38]
65003770:	push   edx
65003771:	call   0x65012366
65003776:	mov    eax,DWORD PTR [esi]
65003778:	sub    eax,0x10
6500377b:	cmp    DWORD PTR [eax+0xc],ebp
6500377e:	jle    0x6500378b
65003780:	mov    eax,DWORD PTR [eax+0x4]
65003783:	push   eax
65003784:	mov    ecx,esi
65003786:	call   0x650019b0
6500378b:	mov    ecx,DWORD PTR [esi]
6500378d:	sub    edi,ecx
6500378f:	sar    edi,1
65003791:	add    edi,ebp
65003793:	cmp    ecx,ebx
65003795:	jne    0x6500379b
65003797:	xor    eax,eax
65003799:	jmp    0x650037b6
6500379b:	mov    eax,ecx
6500379d:	lea    ebp,[eax+0x2]
650037a0:	mov    dx,WORD PTR [eax]
650037a3:	add    eax,0x2
650037a6:	cmp    dx,bx
650037a9:	jne    0x650037a0
650037ab:	sub    eax,ebp
650037ad:	sar    eax,1
650037af:	js     0x65003809
650037b1:	mov    ebp,0x1
650037b6:	cmp    eax,DWORD PTR [ecx-0x8]
650037b9:	jg     0x65003809
650037bb:	mov    DWORD PTR [ecx-0xc],eax
650037be:	mov    ecx,DWORD PTR [esi]
650037c0:	mov    WORD PTR [ecx+eax*2],bx
650037c4:	mov    eax,DWORD PTR [esi]
650037c6:	sub    eax,0x10
650037c9:	mov    ecx,ebp
650037cb:	sub    ecx,DWORD PTR [eax+0xc]
650037ce:	mov    eax,DWORD PTR [eax+0x8]
650037d1:	sub    eax,edi
650037d3:	or     eax,ecx
650037d5:	jge    0x650037df
650037d7:	push   edi
650037d8:	mov    ecx,esi
650037da:	call   0x65001e60
650037df:	cmp    edi,ebx
650037e1:	jl     0x65003809
650037e3:	mov    eax,DWORD PTR [esi]
650037e5:	cmp    edi,DWORD PTR [eax-0x8]
650037e8:	jg     0x65003809
650037ea:	mov    DWORD PTR [eax-0xc],edi
650037ed:	mov    edx,DWORD PTR [esi]
650037ef:	mov    WORD PTR [edx+edi*2],bx
650037f3:	mov    eax,esi
650037f5:	mov    ecx,DWORD PTR [esp+0x5c]
650037f9:	mov    DWORD PTR fs:0x0,ecx
65003800:	pop    ecx
65003801:	pop    edi
65003802:	pop    esi
65003803:	pop    ebp
65003804:	pop    ebx
65003805:	add    esp,0x54
65003808:	ret    
65003809:	push   0x80070057
6500380e:	call   0x650010a0
65003813:	int3   
65003814:	int3   
65003815:	int3   
65003816:	int3   
65003817:	int3   
65003818:	int3   
65003819:	int3   
6500381a:	int3   
6500381b:	int3   
6500381c:	int3   
6500381d:	int3   
6500381e:	int3   
6500381f:	int3   
65003820:	push   ebp
65003821:	lea    ebp,[esp-0x78]
65003825:	sub    esp,0x78
65003828:	push   0xffffffff
6500382a:	push   0x65023349
6500382f:	mov    eax,fs:0x0
65003835:	push   eax
65003836:	sub    esp,0xb4
6500383c:	mov    eax,ds:0x6502c09c
65003841:	xor    eax,ebp
65003843:	mov    DWORD PTR [ebp+0x74],eax
65003846:	push   ebx
65003847:	push   esi
65003848:	push   edi
65003849:	push   eax
6500384a:	lea    eax,[ebp-0xc]
6500384d:	mov    fs:0x0,eax
65003853:	call   DWORD PTR ds:0x6502c06c
65003859:	mov    ebx,eax
6500385b:	lea    eax,[ebp+0xc]
6500385e:	push   eax
6500385f:	call   0x650036a0
65003864:	add    esp,0x4
65003867:	push   0x0
65003869:	push   0x0
6500386b:	lea    ecx,[ebp+0x0]
6500386e:	push   ecx
6500386f:	lea    edx,[ebp+0x4]
65003872:	push   edx
65003873:	lea    eax,[ebp+0x8]
65003876:	push   eax
65003877:	push   0x0
65003879:	mov    DWORD PTR [ebp-0x4],0x0
65003880:	mov    ecx,DWORD PTR [ebp+0xc]
65003883:	push   0x0
65003885:	push   ecx
65003886:	call   0x6500e330
6500388b:	call   eax
6500388d:	test   eax,eax
6500388f:	jne    0x650039a0
65003895:	call   DWORD PTR ds:0x65024044
6500389b:	push   0xa
6500389d:	lea    edx,[ebp+0x10]
650038a0:	push   edx
650038a1:	push   eax
650038a2:	call   0x6501326d
650038a7:	mov    eax,DWORD PTR [ebp+0xc]
650038aa:	add    esp,0xc
650038ad:	test   eax,eax
650038af:	mov    edi,eax
650038b1:	je     0x650038df
650038b3:	push   eax
650038b4:	call   DWORD PTR ds:0x65024050
650038ba:	add    eax,0x1
650038bd:	cmp    eax,0x3fffffff
650038c2:	jle    0x650038c8
650038c4:	xor    edi,edi
650038c6:	jmp    0x650038df
650038c8:	lea    esi,[eax+eax*1]
650038cb:	mov    eax,esi
650038cd:	call   0x65012ec0
650038d2:	mov    eax,esp
650038d4:	push   ebx
650038d5:	push   esi
650038d6:	push   edi
650038d7:	push   eax
650038d8:	call   0x65002ba0
650038dd:	mov    edi,eax
650038df:	push   0x650268d0
650038e4:	push   0x21
650038e6:	push   0x65026904
650038eb:	call   0x65006a80
650038f0:	mov    ecx,eax
650038f2:	add    esp,0xc
650038f5:	mov    DWORD PTR [ebp-0x10],0xf
650038fc:	mov    DWORD PTR [ebp-0x14],0x0
65003903:	mov    BYTE PTR [ebp-0x24],0x0
65003907:	lea    esi,[ecx+0x1]
6500390a:	lea    ebx,[ebx+0x0]
65003910:	mov    dl,BYTE PTR [ecx]
65003912:	add    ecx,0x1
65003915:	test   dl,dl
65003917:	jne    0x65003910
65003919:	sub    ecx,esi
6500391b:	push   ecx
6500391c:	push   eax
6500391d:	lea    ecx,[ebp-0x28]
65003920:	call   0x650018c0
65003925:	lea    eax,[ebp-0x28]
65003928:	push   eax
65003929:	lea    esi,[ebp-0x6c]
6500392c:	mov    BYTE PTR [ebp-0x4],0x1
65003930:	call   0x65009e60
65003935:	mov    esi,eax
65003937:	push   0x65026890
6500393c:	push   0x7
6500393e:	push   0x650268c8
65003943:	mov    BYTE PTR [ebp-0x4],0x2
65003947:	call   0x65006a80
6500394c:	push   esi
6500394d:	mov    edi,eax
6500394f:	lea    esi,[ebp-0x88]
65003955:	call   0x65009e60
6500395a:	push   eax
6500395b:	lea    edi,[ebp+0x10]
6500395e:	lea    esi,[ebp-0xc0]
65003964:	mov    BYTE PTR [ebp-0x4],0x3
65003968:	call   0x65009e60
6500396d:	push   eax
6500396e:	mov    edi,0x6502688c
65003973:	lea    esi,[ebp-0xa4]
65003979:	mov    BYTE PTR [ebp-0x4],0x4
6500397d:	call   0x65009e60
65003982:	add    esp,0x1c
65003985:	push   eax
65003986:	lea    ecx,[ebp-0x50]
65003989:	mov    BYTE PTR [ebp-0x4],0x5
6500398d:	call   0x65002080
65003992:	push   0x65029e84
65003997:	lea    ecx,[ebp-0x50]
6500399a:	push   ecx
6500399b:	call   0x65012366
650039a0:	mov    esi,DWORD PTR [ebp+0x8]
650039a3:	mov    DWORD PTR [ebp-0x4],0xffffffff
650039aa:	mov    eax,DWORD PTR [ebp+0xc]
650039ad:	add    eax,0xfffffff0
650039b0:	lea    edx,[eax+0xc]
650039b3:	or     ecx,0xffffffff
650039b6:	lock xadd DWORD PTR [edx],ecx
650039ba:	dec    ecx
650039bb:	test   ecx,ecx
650039bd:	jg     0x650039c9
650039bf:	mov    ecx,DWORD PTR [eax]
650039c1:	mov    edx,DWORD PTR [ecx]
650039c3:	push   eax
650039c4:	mov    eax,DWORD PTR [edx+0x4]
650039c7:	call   eax
650039c9:	mov    eax,esi
650039cb:	lea    esp,[ebp-0xd0]
650039d1:	mov    ecx,DWORD PTR [ebp-0xc]
650039d4:	mov    DWORD PTR fs:0x0,ecx
650039db:	pop    ecx
650039dc:	pop    edi
650039dd:	pop    esi
650039de:	pop    ebx
650039df:	mov    ecx,DWORD PTR [ebp+0x74]
650039e2:	xor    ecx,ebp
650039e4:	call   0x650127bc
650039e9:	add    ebp,0x78
650039ec:	mov    esp,ebp
650039ee:	pop    ebp
650039ef:	ret    
650039f0:	push   ebp
650039f1:	mov    ebp,esp
650039f3:	and    esp,0xfffffff8
650039f6:	push   0xffffffff
650039f8:	push   0x65022cf6
650039fd:	mov    eax,fs:0x0
65003a03:	push   eax
65003a04:	sub    esp,0x840
65003a0a:	mov    eax,ds:0x6502c09c
65003a0f:	xor    eax,esp
65003a11:	mov    DWORD PTR [esp+0x838],eax
65003a18:	push   ebx
65003a19:	push   esi
65003a1a:	push   edi
65003a1b:	mov    eax,ds:0x6502c09c
65003a20:	xor    eax,esp
65003a22:	push   eax
65003a23:	lea    eax,[esp+0x850]
65003a2a:	mov    fs:0x0,eax
65003a30:	xor    eax,eax
65003a32:	xor    ebx,ebx
65003a34:	mov    DWORD PTR [esp+0x34],ebx
65003a38:	mov    DWORD PTR [esp+0x38],eax
65003a3c:	mov    DWORD PTR [esp+0x3c],eax
65003a40:	mov    DWORD PTR [esp+0x40],eax
65003a44:	mov    DWORD PTR [esp+0x1c],ebx
65003a48:	push   0x65026928
65003a4d:	push   0x1f
65003a4f:	push   0x65026950
65003a54:	mov    DWORD PTR [esp+0x864],ebx
65003a5b:	call   0x65006d70
65003a60:	add    esp,0xc
65003a63:	lea    ecx,[esp+0x18]
65003a67:	push   ecx
65003a68:	push   0x20019
65003a6d:	push   ebx
65003a6e:	push   eax
65003a6f:	push   0x80000002
65003a74:	mov    DWORD PTR [esp+0x2c],ebx
65003a78:	call   DWORD PTR ds:0x6502400c
65003a7e:	cmp    eax,ebx
65003a80:	jne    0x65003af7
65003a82:	mov    edx,DWORD PTR [esp+0x18]
65003a86:	push   0x65026990
65003a8b:	push   0xb
65003a8d:	push   0x650269bc
65003a92:	mov    DWORD PTR [esp+0x28],edx
65003a96:	mov    DWORD PTR [esp+0x2c],0x400
65003a9e:	call   0x65006d70
65003aa3:	add    esp,0xc
65003aa6:	push   eax
65003aa7:	lea    eax,[esp+0x20]
65003aab:	push   eax
65003aac:	lea    edi,[esp+0x28]
65003ab0:	lea    esi,[esp+0x4c]
65003ab4:	call   0x65002c00
65003ab9:	test   eax,eax
65003abb:	je     0x65003b1a
65003abd:	mov    eax,DWORD PTR [esp+0x18]
65003ac1:	test   eax,eax
65003ac3:	mov    ecx,DWORD PTR [esp+0x40]
65003ac7:	mov    esi,DWORD PTR [esp+0x34]
65003acb:	mov    edi,DWORD PTR [esp+0x38]
65003acf:	mov    ebx,DWORD PTR [esp+0x3c]
65003ad3:	mov    DWORD PTR [esp+0x30],ecx
65003ad7:	je     0x65003ae0
65003ad9:	push   eax
65003ada:	call   DWORD PTR ds:0x65024000
65003ae0:	mov    eax,DWORD PTR [ebp+0x8]
65003ae3:	mov    edx,DWORD PTR [esp+0x30]
65003ae7:	mov    DWORD PTR [eax],esi
65003ae9:	mov    DWORD PTR [eax+0x4],edi
65003aec:	mov    DWORD PTR [eax+0x8],ebx
65003aef:	mov    DWORD PTR [eax+0xc],edx
65003af2:	jmp    0x65003be9
65003af7:	mov    eax,DWORD PTR [ebp+0x8]
65003afa:	mov    ecx,DWORD PTR [esp+0x34]
65003afe:	mov    edx,DWORD PTR [esp+0x38]
65003b02:	mov    DWORD PTR [eax],ecx
65003b04:	mov    ecx,DWORD PTR [esp+0x3c]
65003b08:	mov    DWORD PTR [eax+0x4],edx
65003b0b:	mov    edx,DWORD PTR [esp+0x40]
65003b0f:	mov    DWORD PTR [eax+0x8],ecx
65003b12:	mov    DWORD PTR [eax+0xc],edx
65003b15:	jmp    0x65003be9
65003b1a:	push   0x650269d4
65003b1f:	lea    ecx,[esp+0x18]
65003b23:	call   0x650025b0
65003b28:	lea    eax,[esp+0x44]
65003b2c:	mov    BYTE PTR [esp+0x858],0x1
65003b34:	lea    edx,[eax+0x2]
65003b37:	mov    cx,WORD PTR [eax]
65003b3a:	add    eax,0x2
65003b3d:	cmp    cx,bx
65003b40:	jne    0x65003b37
65003b42:	sub    eax,edx
65003b44:	sar    eax,1
65003b46:	push   eax
65003b47:	lea    eax,[esp+0x48]
65003b4b:	push   eax
65003b4c:	lea    ecx,[esp+0x1c]
65003b50:	call   0x65002a00
65003b55:	push   0x1
65003b57:	push   0x650269d8
65003b5c:	lea    ecx,[esp+0x1c]
65003b60:	call   0x65002a00
65003b65:	mov    eax,DWORD PTR [esp+0x14]
65003b69:	cmp    DWORD PTR [eax-0x4],0x1
65003b6d:	jle    0x65003b80
65003b6f:	mov    ecx,DWORD PTR [eax-0xc]
65003b72:	push   ecx
65003b73:	lea    ecx,[esp+0x18]
65003b77:	call   0x650019b0
65003b7c:	mov    eax,DWORD PTR [esp+0x14]
65003b80:	lea    edx,[esp+0x34]
65003b84:	push   edx
65003b85:	push   eax
65003b86:	call   DWORD PTR ds:0x650241d8
65003b8c:	mov    eax,DWORD PTR [esp+0x40]
65003b90:	mov    esi,DWORD PTR [esp+0x34]
65003b94:	mov    edi,DWORD PTR [esp+0x38]
65003b98:	mov    ebx,DWORD PTR [esp+0x3c]
65003b9c:	mov    DWORD PTR [esp+0x30],eax
65003ba0:	mov    BYTE PTR [esp+0x858],0x0
65003ba8:	mov    eax,DWORD PTR [esp+0x14]
65003bac:	add    eax,0xfffffff0
65003baf:	lea    ecx,[eax+0xc]
65003bb2:	or     edx,0xffffffff
65003bb5:	lock xadd DWORD PTR [ecx],edx
65003bb9:	dec    edx
65003bba:	test   edx,edx
65003bbc:	jg     0x65003bc8
65003bbe:	mov    ecx,DWORD PTR [eax]
65003bc0:	mov    edx,DWORD PTR [ecx]
65003bc2:	push   eax
65003bc3:	mov    eax,DWORD PTR [edx+0x4]
65003bc6:	call   eax
65003bc8:	mov    eax,DWORD PTR [esp+0x18]
65003bcc:	test   eax,eax
65003bce:	je     0x65003bd7
65003bd0:	push   eax
65003bd1:	call   DWORD PTR ds:0x65024000
65003bd7:	mov    eax,DWORD PTR [ebp+0x8]
65003bda:	mov    ecx,DWORD PTR [esp+0x30]
65003bde:	mov    DWORD PTR [eax],esi
65003be0:	mov    DWORD PTR [eax+0x4],edi
65003be3:	mov    DWORD PTR [eax+0x8],ebx
65003be6:	mov    DWORD PTR [eax+0xc],ecx
65003be9:	mov    ecx,DWORD PTR [esp+0x850]
65003bf0:	mov    DWORD PTR fs:0x0,ecx
65003bf7:	pop    ecx
65003bf8:	pop    edi
65003bf9:	pop    esi
65003bfa:	pop    ebx
65003bfb:	mov    ecx,DWORD PTR [esp+0x838]
65003c02:	xor    ecx,esp
65003c04:	call   0x650127bc
65003c09:	mov    esp,ebp
65003c0b:	pop    ebp
65003c0c:	ret    
65003c0d:	int3   
65003c0e:	int3   
65003c0f:	int3   
65003c10:	push   ebp
65003c11:	mov    ebp,esp
65003c13:	and    esp,0xfffffff8
65003c16:	push   0xffffffff
65003c18:	push   0x65022ca4
65003c1d:	mov    eax,fs:0x0
65003c23:	push   eax
65003c24:	sub    esp,0x460
65003c2a:	mov    eax,ds:0x6502c09c
65003c2f:	xor    eax,esp
65003c31:	mov    DWORD PTR [esp+0x458],eax
65003c38:	push   ebx
65003c39:	push   esi
65003c3a:	push   edi
65003c3b:	mov    eax,ds:0x6502c09c
65003c40:	xor    eax,esp
65003c42:	push   eax
65003c43:	lea    eax,[esp+0x470]
65003c4a:	mov    fs:0x0,eax
65003c50:	mov    eax,DWORD PTR [ebp+0x8]
65003c53:	xor    ebx,ebx
65003c55:	test   BYTE PTR ds:0x650303dc,0x1
65003c5c:	mov    esi,ecx
65003c5e:	mov    DWORD PTR [esp+0x18],eax
65003c62:	mov    DWORD PTR [esp+0x14],esi
65003c66:	mov    DWORD PTR [esp+0x38],ebx
65003c6a:	jne    0x65003cbd
65003c6c:	or     DWORD PTR ds:0x650303dc,0x1
65003c73:	mov    DWORD PTR [esp+0x478],ebx
65003c7a:	call   0x65008440
65003c7f:	mov    ds:0x650303d4,eax
65003c84:	mov    BYTE PTR [eax+0x29],0x1
65003c88:	mov    eax,ds:0x650303d4
65003c8d:	mov    DWORD PTR [eax+0x4],eax
65003c90:	mov    eax,ds:0x650303d4
65003c95:	mov    DWORD PTR [eax],eax
65003c97:	mov    eax,ds:0x650303d4
65003c9c:	mov    DWORD PTR [eax+0x8],eax
65003c9f:	push   0x65023400
65003ca4:	mov    DWORD PTR ds:0x650303d8,ebx
65003caa:	call   0x650128ef
65003caf:	add    esp,0x4
65003cb2:	mov    DWORD PTR [esp+0x478],0xffffffff
65003cbd:	mov    eax,DWORD PTR [esi+0x4]
65003cc0:	mov    esi,DWORD PTR [eax]
65003cc2:	mov    eax,DWORD PTR [esp+0x14]
65003cc6:	cmp    esi,DWORD PTR [eax+0x4]
65003cc9:	je     0x65003e2e
65003ccf:	cmp    DWORD PTR [esi+0x24],0x10
65003cd3:	lea    edi,[esi+0xc]
65003cd6:	jb     0x65003cdd
65003cd8:	mov    ecx,DWORD PTR [edi+0x4]
65003cdb:	jmp    0x65003ce0
65003cdd:	lea    ecx,[edi+0x4]
65003ce0:	lea    edx,[esp+0x64]
65003ce4:	mov    al,BYTE PTR [ecx]
65003ce6:	mov    BYTE PTR [edx],al
65003ce8:	add    ecx,0x1
65003ceb:	add    edx,0x1
65003cee:	cmp    al,bl
65003cf0:	jne    0x65003ce4
65003cf2:	mov    ecx,DWORD PTR [esp+0x14]
65003cf6:	cmp    esi,DWORD PTR [ecx+0x4]
65003cf9:	jne    0x65003d00
65003cfb:	call   0x650122d3
65003d00:	push   0xffffffff
65003d02:	push   ebx
65003d03:	push   edi
65003d04:	lea    ecx,[esp+0x54]
65003d08:	mov    DWORD PTR [esp+0x6c],0xf
65003d10:	mov    DWORD PTR [esp+0x68],ebx
65003d14:	mov    BYTE PTR [esp+0x58],bl
65003d18:	call   0x650017e0
65003d1d:	lea    edx,[esp+0x64]
65003d21:	push   edx
65003d22:	mov    DWORD PTR [esp+0x47c],0x1
65003d2d:	call   0x6501eb55
65003d32:	lea    eax,[esp+0x68]
65003d36:	add    esp,0x4
65003d39:	mov    DWORD PTR [esp+0x34],0xf
65003d41:	mov    DWORD PTR [esp+0x30],ebx
65003d45:	mov    BYTE PTR [esp+0x20],bl
65003d49:	lea    edx,[eax+0x1]
65003d4c:	lea    esp,[esp+0x0]
65003d50:	mov    cl,BYTE PTR [eax]
65003d52:	add    eax,0x1
65003d55:	cmp    cl,bl
65003d57:	jne    0x65003d50
65003d59:	sub    eax,edx
65003d5b:	push   eax
65003d5c:	lea    eax,[esp+0x68]
65003d60:	push   eax
65003d61:	lea    ecx,[esp+0x24]
65003d65:	call   0x650018c0
65003d6a:	lea    ecx,[esp+0x1c]
65003d6e:	push   ecx
65003d6f:	lea    edx,[esp+0x40]
65003d73:	push   edx
65003d74:	push   0x650303d0
65003d79:	mov    BYTE PTR [esp+0x484],0x2
65003d81:	call   0x65007130
65003d86:	mov    edi,0x10
65003d8b:	cmp    DWORD PTR [esp+0x34],edi
65003d8f:	jb     0x65003d9e
65003d91:	mov    eax,DWORD PTR [esp+0x20]
65003d95:	push   eax
65003d96:	call   0x65011f62
65003d9b:	add    esp,0x4
65003d9e:	mov    DWORD PTR [esp+0x478],0xffffffff
65003da9:	cmp    DWORD PTR [esp+0x60],edi
65003dad:	mov    DWORD PTR [esp+0x34],0xf
65003db5:	mov    DWORD PTR [esp+0x30],ebx
65003db9:	mov    BYTE PTR [esp+0x20],bl
65003dbd:	jb     0x65003dcc
65003dbf:	mov    ecx,DWORD PTR [esp+0x4c]
65003dc3:	push   ecx
65003dc4:	call   0x65011f62
65003dc9:	add    esp,0x4
65003dcc:	cmp    BYTE PTR [esi+0x29],bl
65003dcf:	mov    DWORD PTR [esp+0x60],0xf
65003dd7:	mov    DWORD PTR [esp+0x5c],ebx
65003ddb:	mov    BYTE PTR [esp+0x4c],bl
65003ddf:	je     0x65003deb
65003de1:	call   0x650122d3
65003de6:	jmp    0x65003cc2
65003deb:	mov    ecx,DWORD PTR [esi+0x8]
65003dee:	cmp    BYTE PTR [ecx+0x29],bl
65003df1:	jne    0x65003e10
65003df3:	mov    eax,DWORD PTR [ecx]
65003df5:	cmp    BYTE PTR [eax+0x29],bl
65003df8:	jne    0x65003e09
65003dfa:	lea    ebx,[ebx+0x0]
65003e00:	mov    ecx,eax
65003e02:	mov    eax,DWORD PTR [ecx]
65003e04:	cmp    BYTE PTR [eax+0x29],bl
65003e07:	je     0x65003e00
65003e09:	mov    esi,ecx
65003e0b:	jmp    0x65003cc2
65003e10:	mov    eax,DWORD PTR [esi+0x4]
65003e13:	cmp    BYTE PTR [eax+0x29],bl
65003e16:	jne    0x65003e27
65003e18:	cmp    esi,DWORD PTR [eax+0x8]
65003e1b:	jne    0x65003e27
65003e1d:	mov    esi,eax
65003e1f:	mov    eax,DWORD PTR [eax+0x4]
65003e22:	cmp    BYTE PTR [eax+0x29],bl
65003e25:	je     0x65003e18
65003e27:	mov    esi,eax
65003e29:	jmp    0x65003cc2
65003e2e:	mov    esi,DWORD PTR [esp+0x18]
65003e32:	push   esi
65003e33:	call   0x65007060
65003e38:	mov    eax,esi
65003e3a:	mov    ecx,DWORD PTR [esp+0x470]
65003e41:	mov    DWORD PTR fs:0x0,ecx
65003e48:	pop    ecx
65003e49:	pop    edi
65003e4a:	pop    esi
65003e4b:	pop    ebx
65003e4c:	mov    ecx,DWORD PTR [esp+0x458]
65003e53:	xor    ecx,esp
65003e55:	call   0x650127bc
65003e5a:	mov    esp,ebp
65003e5c:	pop    ebp
65003e5d:	ret    
65003e5e:	int3   
65003e5f:	int3   
65003e60:	push   ecx
65003e61:	call   0x65007b10
65003e66:	pop    ecx
65003e67:	ret    
65003e68:	int3   
65003e69:	int3   
65003e6a:	int3   
65003e6b:	int3   
65003e6c:	int3   
65003e6d:	int3   
65003e6e:	int3   
65003e6f:	int3   
65003e70:	push   ebp
65003e71:	lea    ebp,[esp-0x404]
65003e78:	sub    esp,0x404
65003e7e:	push   0xffffffff
65003e80:	push   0x650231e1
65003e85:	mov    eax,fs:0x0
65003e8b:	push   eax
65003e8c:	sub    esp,0x3c
65003e8f:	mov    eax,ds:0x6502c09c
65003e94:	xor    eax,ebp
65003e96:	mov    DWORD PTR [ebp+0x400],eax
65003e9c:	push   ebx
65003e9d:	push   esi
65003e9e:	push   edi
65003e9f:	push   eax
65003ea0:	lea    eax,[ebp-0xc]
65003ea3:	mov    fs:0x0,eax
65003ea9:	xor    ebx,ebx
65003eab:	mov    DWORD PTR [ebp-0x4],ebx
65003eae:	test   BYTE PTR ds:0x650303fc,0x1
65003eb5:	jne    0x65003efd
65003eb7:	or     DWORD PTR ds:0x650303fc,0x1
65003ebe:	mov    BYTE PTR [ebp-0x4],0x1
65003ec2:	call   0x65008440
65003ec7:	mov    ds:0x650303f4,eax
65003ecc:	mov    BYTE PTR [eax+0x29],0x1
65003ed0:	mov    eax,ds:0x650303f4
65003ed5:	mov    DWORD PTR [eax+0x4],eax
65003ed8:	mov    eax,ds:0x650303f4
65003edd:	mov    DWORD PTR [eax],eax
65003edf:	mov    eax,ds:0x650303f4
65003ee4:	mov    DWORD PTR [eax+0x8],eax
65003ee7:	push   0x65023410
65003eec:	mov    DWORD PTR ds:0x650303f8,ebx
65003ef2:	call   0x650128ef
65003ef7:	add    esp,0x4
65003efa:	mov    BYTE PTR [ebp-0x4],bl
65003efd:	cmp    DWORD PTR ds:0x650303f8,ebx
65003f03:	jne    0x65004cc9
65003f09:	call   0x65008440
65003f0e:	mov    DWORD PTR [ebp-0x30],eax
65003f11:	mov    BYTE PTR [eax+0x29],0x1
65003f15:	mov    eax,DWORD PTR [ebp-0x30]
65003f18:	mov    DWORD PTR [eax+0x4],eax
65003f1b:	mov    eax,DWORD PTR [ebp-0x30]
65003f1e:	mov    DWORD PTR [eax],eax
65003f20:	mov    eax,DWORD PTR [ebp-0x30]
65003f23:	mov    DWORD PTR [eax+0x8],eax
65003f26:	mov    DWORD PTR [ebp-0x2c],ebx
65003f29:	push   0x650269dc
65003f2e:	push   0x3
65003f30:	push   0x65026a18
65003f35:	mov    BYTE PTR [ebp-0x4],0x2
65003f39:	call   0x65006a80
65003f3e:	mov    esi,eax
65003f40:	mov    ecx,esi
65003f42:	add    esp,0xc
65003f45:	mov    DWORD PTR [ebp-0x10],0xf
65003f4c:	mov    DWORD PTR [ebp-0x14],ebx
65003f4f:	mov    BYTE PTR [ebp-0x24],bl
65003f52:	lea    edi,[ecx+0x1]
65003f55:	mov    al,BYTE PTR [ecx]
65003f57:	add    ecx,0x1
65003f5a:	cmp    al,bl
65003f5c:	jne    0x65003f55
65003f5e:	sub    ecx,edi
65003f60:	push   ecx
65003f61:	push   esi
65003f62:	lea    ecx,[ebp-0x28]
65003f65:	call   0x650018c0
65003f6a:	lea    eax,[ebp-0x28]
65003f6d:	push   eax
65003f6e:	lea    ecx,[ebp-0x40]
65003f71:	push   ecx
65003f72:	lea    edx,[ebp-0x34]
65003f75:	push   edx
65003f76:	mov    BYTE PTR [ebp-0x4],0x3
65003f7a:	call   0x65007130
65003f7f:	mov    BYTE PTR [ebp-0x4],0x2
65003f83:	cmp    DWORD PTR [ebp-0x10],0x10
65003f87:	jb     0x65003f95
65003f89:	mov    eax,DWORD PTR [ebp-0x24]
65003f8c:	push   eax
65003f8d:	call   0x65011f62
65003f92:	add    esp,0x4
65003f95:	push   0x65026a1c
65003f9a:	push   0x8
65003f9c:	push   0x65026a48
65003fa1:	call   0x65006a80
65003fa6:	mov    esi,eax
65003fa8:	mov    ecx,esi
65003faa:	add    esp,0xc
65003fad:	mov    DWORD PTR [ebp-0x10],0xf
65003fb4:	mov    DWORD PTR [ebp-0x14],ebx
65003fb7:	mov    BYTE PTR [ebp-0x24],bl
65003fba:	lea    edx,[ecx+0x1]
65003fbd:	lea    ecx,[ecx+0x0]
65003fc0:	mov    al,BYTE PTR [ecx]
65003fc2:	add    ecx,0x1
65003fc5:	cmp    al,bl
65003fc7:	jne    0x65003fc0
65003fc9:	sub    ecx,edx
65003fcb:	push   ecx
65003fcc:	push   esi
65003fcd:	lea    ecx,[ebp-0x28]
65003fd0:	call   0x650018c0
65003fd5:	lea    ecx,[ebp-0x28]
65003fd8:	push   ecx
65003fd9:	lea    edx,[ebp-0x40]
65003fdc:	push   edx
65003fdd:	lea    eax,[ebp-0x34]
65003fe0:	push   eax
65003fe1:	mov    BYTE PTR [ebp-0x4],0x4
65003fe5:	call   0x65007130
65003fea:	mov    edi,0x10
65003fef:	mov    BYTE PTR [ebp-0x4],0x2
65003ff3:	cmp    DWORD PTR [ebp-0x10],edi
65003ff6:	jb     0x65004004
65003ff8:	mov    ecx,DWORD PTR [ebp-0x24]
65003ffb:	push   ecx
65003ffc:	call   0x65011f62
65004001:	add    esp,0x4
65004004:	push   0x65026a54
65004009:	push   0x8
6500400b:	push   0x65026a8c
65004010:	call   0x65006a80
65004015:	mov    esi,eax
65004017:	mov    ecx,esi
65004019:	add    esp,0xc
6500401c:	mov    DWORD PTR [ebp-0x10],0xf
65004023:	mov    DWORD PTR [ebp-0x14],ebx
65004026:	mov    BYTE PTR [ebp-0x24],bl
65004029:	lea    edx,[ecx+0x1]
6500402c:	lea    esp,[esp+0x0]
65004030:	mov    al,BYTE PTR [ecx]
65004032:	add    ecx,0x1
65004035:	cmp    al,bl
65004037:	jne    0x65004030
65004039:	sub    ecx,edx
6500403b:	push   ecx
6500403c:	push   esi
6500403d:	lea    ecx,[ebp-0x28]
65004040:	call   0x650018c0
65004045:	lea    edx,[ebp-0x28]
65004048:	push   edx
65004049:	lea    eax,[ebp-0x40]
6500404c:	push   eax
6500404d:	lea    ecx,[ebp-0x34]
65004050:	push   ecx
65004051:	mov    BYTE PTR [ebp-0x4],0x5
65004055:	call   0x65007130
6500405a:	mov    BYTE PTR [ebp-0x4],0x2
6500405e:	cmp    DWORD PTR [ebp-0x10],edi
65004061:	jb     0x6500406f
65004063:	mov    edx,DWORD PTR [ebp-0x24]
65004066:	push   edx
65004067:	call   0x65011f62
6500406c:	add    esp,0x4
6500406f:	push   0x65026a98
65004074:	push   0xa
65004076:	push   0x65026ac0
6500407b:	call   0x65006a80
65004080:	mov    esi,eax
65004082:	mov    ecx,esi
65004084:	add    esp,0xc
65004087:	mov    DWORD PTR [ebp-0x10],0xf
6500408e:	mov    DWORD PTR [ebp-0x14],ebx
65004091:	mov    BYTE PTR [ebp-0x24],bl
65004094:	lea    edx,[ecx+0x1]
65004097:	mov    al,BYTE PTR [ecx]
65004099:	add    ecx,0x1
6500409c:	cmp    al,bl
6500409e:	jne    0x65004097
650040a0:	sub    ecx,edx
650040a2:	push   ecx
650040a3:	push   esi
650040a4:	lea    ecx,[ebp-0x28]
650040a7:	call   0x650018c0
650040ac:	lea    eax,[ebp-0x28]
650040af:	push   eax
650040b0:	lea    ecx,[ebp-0x40]
650040b3:	push   ecx
650040b4:	lea    edx,[ebp-0x34]
650040b7:	push   edx
650040b8:	mov    BYTE PTR [ebp-0x4],0x6
650040bc:	call   0x65007130
650040c1:	mov    BYTE PTR [ebp-0x4],0x2
650040c5:	cmp    DWORD PTR [ebp-0x10],edi
650040c8:	jb     0x650040d6
650040ca:	mov    eax,DWORD PTR [ebp-0x24]
650040cd:	push   eax
650040ce:	call   0x65011f62
650040d3:	add    esp,0x4
650040d6:	push   0x65026acc
650040db:	push   0x4
650040dd:	push   0x65026b00
650040e2:	call   0x65006a80
650040e7:	mov    esi,eax
650040e9:	mov    ecx,esi
650040eb:	add    esp,0xc
650040ee:	mov    DWORD PTR [ebp-0x10],0xf
650040f5:	mov    DWORD PTR [ebp-0x14],ebx
650040f8:	mov    BYTE PTR [ebp-0x24],bl
650040fb:	lea    edx,[ecx+0x1]
650040fe:	mov    edi,edi
65004100:	mov    al,BYTE PTR [ecx]
65004102:	add    ecx,0x1
65004105:	cmp    al,bl
65004107:	jne    0x65004100
65004109:	sub    ecx,edx
6500410b:	push   ecx
6500410c:	push   esi
6500410d:	lea    ecx,[ebp-0x28]
65004110:	call   0x650018c0
65004115:	lea    ecx,[ebp-0x28]
65004118:	push   ecx
65004119:	lea    edx,[ebp-0x40]
6500411c:	push   edx
6500411d:	lea    eax,[ebp-0x34]
65004120:	push   eax
65004121:	mov    BYTE PTR [ebp-0x4],0x7
65004125:	call   0x65007130
6500412a:	mov    BYTE PTR [ebp-0x4],0x2
6500412e:	cmp    DWORD PTR [ebp-0x10],edi
65004131:	jb     0x6500413f
65004133:	mov    ecx,DWORD PTR [ebp-0x24]
65004136:	push   ecx
65004137:	call   0x65011f62
6500413c:	add    esp,0x4
6500413f:	push   0x65026b08
65004144:	push   0x8
65004146:	push   0x65026b34
6500414b:	call   0x65006a80
65004150:	mov    esi,eax
65004152:	mov    ecx,esi
65004154:	add    esp,0xc
65004157:	mov    DWORD PTR [ebp-0x10],0xf
6500415e:	mov    DWORD PTR [ebp-0x14],ebx
65004161:	mov    BYTE PTR [ebp-0x24],bl
65004164:	lea    edx,[ecx+0x1]
65004167:	mov    al,BYTE PTR [ecx]
65004169:	add    ecx,0x1
6500416c:	cmp    al,bl
6500416e:	jne    0x65004167
65004170:	sub    ecx,edx
65004172:	push   ecx
65004173:	push   esi
65004174:	lea    ecx,[ebp-0x28]
65004177:	call   0x650018c0
6500417c:	lea    edx,[ebp-0x28]
6500417f:	push   edx
65004180:	lea    eax,[ebp-0x40]
65004183:	push   eax
65004184:	lea    ecx,[ebp-0x34]
65004187:	push   ecx
65004188:	mov    BYTE PTR [ebp-0x4],0x8
6500418c:	call   0x65007130
65004191:	mov    BYTE PTR [ebp-0x4],0x2
65004195:	cmp    DWORD PTR [ebp-0x10],edi
65004198:	jb     0x650041a6
6500419a:	mov    edx,DWORD PTR [ebp-0x24]
6500419d:	push   edx
6500419e:	call   0x65011f62
650041a3:	add    esp,0x4
650041a6:	push   0x65026b40
650041ab:	push   0x5
650041ad:	push   0x65026b68
650041b2:	call   0x65006a80
650041b7:	mov    esi,eax
650041b9:	mov    ecx,esi
650041bb:	add    esp,0xc
650041be:	mov    DWORD PTR [ebp-0x10],0xf
650041c5:	mov    DWORD PTR [ebp-0x14],ebx
650041c8:	mov    BYTE PTR [ebp-0x24],bl
650041cb:	lea    edx,[ecx+0x1]
650041ce:	mov    edi,edi
650041d0:	mov    al,BYTE PTR [ecx]
650041d2:	add    ecx,0x1
650041d5:	cmp    al,bl
650041d7:	jne    0x650041d0
650041d9:	sub    ecx,edx
650041db:	push   ecx
650041dc:	push   esi
650041dd:	lea    ecx,[ebp-0x28]
650041e0:	call   0x650018c0
650041e5:	lea    eax,[ebp-0x28]
650041e8:	push   eax
650041e9:	lea    ecx,[ebp-0x40]
650041ec:	push   ecx
650041ed:	lea    edx,[ebp-0x34]
650041f0:	push   edx
650041f1:	mov    BYTE PTR [ebp-0x4],0x9
650041f5:	call   0x65007130
650041fa:	mov    BYTE PTR [ebp-0x4],0x2
650041fe:	cmp    DWORD PTR [ebp-0x10],edi
65004201:	jb     0x6500420f
65004203:	mov    eax,DWORD PTR [ebp-0x24]
65004206:	push   eax
65004207:	call   0x65011f62
6500420c:	add    esp,0x4
6500420f:	push   0x65026b70
65004214:	push   0x8
65004216:	push   0x65026bac
6500421b:	call   0x65006a80
65004220:	mov    esi,eax
65004222:	mov    ecx,esi
65004224:	add    esp,0xc
65004227:	mov    DWORD PTR [ebp-0x10],0xf
6500422e:	mov    DWORD PTR [ebp-0x14],ebx
65004231:	mov    BYTE PTR [ebp-0x24],bl
65004234:	lea    edx,[ecx+0x1]
65004237:	mov    al,BYTE PTR [ecx]
65004239:	add    ecx,0x1
6500423c:	cmp    al,bl
6500423e:	jne    0x65004237
65004240:	sub    ecx,edx
65004242:	push   ecx
65004243:	push   esi
65004244:	lea    ecx,[ebp-0x28]
65004247:	call   0x650018c0
6500424c:	lea    ecx,[ebp-0x28]
6500424f:	push   ecx
65004250:	lea    edx,[ebp-0x40]
65004253:	push   edx
65004254:	lea    eax,[ebp-0x34]
65004257:	push   eax
65004258:	mov    BYTE PTR [ebp-0x4],0xa
6500425c:	call   0x65007130
65004261:	mov    BYTE PTR [ebp-0x4],0x2
65004265:	cmp    DWORD PTR [ebp-0x10],edi
65004268:	jb     0x65004276
6500426a:	mov    ecx,DWORD PTR [ebp-0x24]
6500426d:	push   ecx
6500426e:	call   0x65011f62
65004273:	add    esp,0x4
65004276:	push   0x65026bb8
6500427b:	push   0xb
6500427d:	push   0x65026bf0
65004282:	call   0x65006a80
65004287:	mov    esi,eax
65004289:	mov    ecx,esi
6500428b:	add    esp,0xc
6500428e:	mov    DWORD PTR [ebp-0x10],0xf
65004295:	mov    DWORD PTR [ebp-0x14],ebx
65004298:	mov    BYTE PTR [ebp-0x24],bl
6500429b:	lea    edx,[ecx+0x1]
6500429e:	mov    edi,edi
650042a0:	mov    al,BYTE PTR [ecx]
650042a2:	add    ecx,0x1
650042a5:	cmp    al,bl
650042a7:	jne    0x650042a0
650042a9:	sub    ecx,edx
650042ab:	push   ecx
650042ac:	push   esi
650042ad:	lea    ecx,[ebp-0x28]
650042b0:	call   0x650018c0
650042b5:	lea    edx,[ebp-0x28]
650042b8:	push   edx
650042b9:	lea    eax,[ebp-0x40]
650042bc:	push   eax
650042bd:	lea    ecx,[ebp-0x34]
650042c0:	push   ecx
650042c1:	mov    BYTE PTR [ebp-0x4],0xb
650042c5:	call   0x65007130
650042ca:	mov    BYTE PTR [ebp-0x4],0x2
650042ce:	cmp    DWORD PTR [ebp-0x10],edi
650042d1:	jb     0x650042df
650042d3:	mov    edx,DWORD PTR [ebp-0x24]
650042d6:	push   edx
650042d7:	call   0x65011f62
650042dc:	add    esp,0x4
650042df:	push   0x65026bfc
650042e4:	push   0x1e
650042e6:	push   0x65026c30
650042eb:	call   0x65006a80
650042f0:	mov    esi,eax
650042f2:	mov    ecx,esi
650042f4:	add    esp,0xc
650042f7:	mov    DWORD PTR [ebp-0x10],0xf
650042fe:	mov    DWORD PTR [ebp-0x14],ebx
65004301:	mov    BYTE PTR [ebp-0x24],bl
65004304:	lea    edx,[ecx+0x1]
65004307:	mov    al,BYTE PTR [ecx]
65004309:	add    ecx,0x1
6500430c:	cmp    al,bl
6500430e:	jne    0x65004307
65004310:	sub    ecx,edx
65004312:	push   ecx
65004313:	push   esi
65004314:	lea    ecx,[ebp-0x28]
65004317:	call   0x650018c0
6500431c:	lea    eax,[ebp-0x28]
6500431f:	push   eax
65004320:	lea    ecx,[ebp-0x40]
65004323:	push   ecx
65004324:	lea    edx,[ebp-0x34]
65004327:	push   edx
65004328:	mov    BYTE PTR [ebp-0x4],0xc
6500432c:	call   0x65007130
65004331:	mov    BYTE PTR [ebp-0x4],0x2
65004335:	cmp    DWORD PTR [ebp-0x10],edi
65004338:	jb     0x65004346
6500433a:	mov    eax,DWORD PTR [ebp-0x24]
6500433d:	push   eax
6500433e:	call   0x65011f62
65004343:	add    esp,0x4
65004346:	push   0x65026c50
6500434b:	push   0x7
6500434d:	push   0x65026c74
65004352:	call   0x65006a80
65004357:	mov    esi,eax
65004359:	mov    ecx,esi
6500435b:	add    esp,0xc
6500435e:	mov    DWORD PTR [ebp-0x10],0xf
65004365:	mov    DWORD PTR [ebp-0x14],ebx
65004368:	mov    BYTE PTR [ebp-0x24],bl
6500436b:	lea    edx,[ecx+0x1]
6500436e:	mov    edi,edi
65004370:	mov    al,BYTE PTR [ecx]
65004372:	add    ecx,0x1
65004375:	cmp    al,bl
65004377:	jne    0x65004370
65004379:	sub    ecx,edx
6500437b:	push   ecx
6500437c:	push   esi
6500437d:	lea    ecx,[ebp-0x28]
65004380:	call   0x650018c0
65004385:	lea    ecx,[ebp-0x28]
65004388:	push   ecx
65004389:	lea    edx,[ebp-0x40]
6500438c:	push   edx
6500438d:	lea    eax,[ebp-0x34]
65004390:	push   eax
65004391:	mov    BYTE PTR [ebp-0x4],0xd
65004395:	call   0x65007130
6500439a:	mov    BYTE PTR [ebp-0x4],0x2
6500439e:	cmp    DWORD PTR [ebp-0x10],edi
650043a1:	jb     0x650043af
650043a3:	mov    ecx,DWORD PTR [ebp-0x24]
650043a6:	push   ecx
650043a7:	call   0x65011f62
650043ac:	add    esp,0x4
650043af:	push   0x65026c7c
650043b4:	push   0xc
650043b6:	push   0x65026ca4
650043bb:	call   0x65006a80
650043c0:	mov    esi,eax
650043c2:	mov    ecx,esi
650043c4:	add    esp,0xc
650043c7:	mov    DWORD PTR [ebp-0x10],0xf
650043ce:	mov    DWORD PTR [ebp-0x14],ebx
650043d1:	mov    BYTE PTR [ebp-0x24],bl
650043d4:	lea    edx,[ecx+0x1]
650043d7:	mov    al,BYTE PTR [ecx]
650043d9:	add    ecx,0x1
650043dc:	cmp    al,bl
650043de:	jne    0x650043d7
650043e0:	sub    ecx,edx
650043e2:	push   ecx
650043e3:	push   esi
650043e4:	lea    ecx,[ebp-0x28]
650043e7:	call   0x650018c0
650043ec:	lea    edx,[ebp-0x28]
650043ef:	push   edx
650043f0:	lea    eax,[ebp-0x40]
650043f3:	push   eax
650043f4:	lea    ecx,[ebp-0x34]
650043f7:	push   ecx
650043f8:	mov    BYTE PTR [ebp-0x4],0xe
650043fc:	call   0x65007130
65004401:	mov    BYTE PTR [ebp-0x4],0x2
65004405:	cmp    DWORD PTR [ebp-0x10],edi
65004408:	jb     0x65004416
6500440a:	mov    edx,DWORD PTR [ebp-0x24]
6500440d:	push   edx
6500440e:	call   0x65011f62
65004413:	add    esp,0x4
65004416:	push   0x65026cb4
6500441b:	push   0x11
6500441d:	push   0x65026ce0
65004422:	call   0x65006a80
65004427:	mov    esi,eax
65004429:	mov    ecx,esi
6500442b:	add    esp,0xc
6500442e:	mov    DWORD PTR [ebp-0x10],0xf
65004435:	mov    DWORD PTR [ebp-0x14],ebx
65004438:	mov    BYTE PTR [ebp-0x24],bl
6500443b:	lea    edx,[ecx+0x1]
6500443e:	mov    edi,edi
65004440:	mov    al,BYTE PTR [ecx]
65004442:	add    ecx,0x1
65004445:	cmp    al,bl
65004447:	jne    0x65004440
65004449:	sub    ecx,edx
6500444b:	push   ecx
6500444c:	push   esi
6500444d:	lea    ecx,[ebp-0x28]
65004450:	call   0x650018c0
65004455:	lea    eax,[ebp-0x28]
65004458:	push   eax
65004459:	lea    ecx,[ebp-0x40]
6500445c:	push   ecx
6500445d:	lea    edx,[ebp-0x34]
65004460:	push   edx
65004461:	mov    BYTE PTR [ebp-0x4],0xf
65004465:	call   0x65007130
6500446a:	mov    BYTE PTR [ebp-0x4],0x2
6500446e:	cmp    DWORD PTR [ebp-0x10],edi
65004471:	jb     0x6500447f
65004473:	mov    eax,DWORD PTR [ebp-0x24]
65004476:	push   eax
65004477:	call   0x65011f62
6500447c:	add    esp,0x4
6500447f:	push   0x65026cf4
65004484:	push   0x7
65004486:	push   0x65026d2c
6500448b:	call   0x65006a80
65004490:	mov    esi,eax
65004492:	mov    ecx,esi
65004494:	add    esp,0xc
65004497:	mov    DWORD PTR [ebp-0x10],0xf
6500449e:	mov    DWORD PTR [ebp-0x14],ebx
650044a1:	mov    BYTE PTR [ebp-0x24],bl
650044a4:	lea    edx,[ecx+0x1]
650044a7:	mov    al,BYTE PTR [ecx]
650044a9:	add    ecx,0x1
650044ac:	cmp    al,bl
650044ae:	jne    0x650044a7
650044b0:	sub    ecx,edx
650044b2:	push   ecx
650044b3:	push   esi
650044b4:	lea    ecx,[ebp-0x28]
650044b7:	call   0x650018c0
650044bc:	lea    ecx,[ebp-0x28]
650044bf:	push   ecx
650044c0:	lea    edx,[ebp-0x40]
650044c3:	push   edx
650044c4:	lea    eax,[ebp-0x34]
650044c7:	push   eax
650044c8:	mov    BYTE PTR [ebp-0x4],0x10
650044cc:	call   0x65007130
650044d1:	mov    BYTE PTR [ebp-0x4],0x2
650044d5:	cmp    DWORD PTR [ebp-0x10],edi
650044d8:	jb     0x650044e6
650044da:	mov    ecx,DWORD PTR [ebp-0x24]
650044dd:	push   ecx
650044de:	call   0x65011f62
650044e3:	add    esp,0x4
650044e6:	push   0x65026d34
650044eb:	push   0x6
650044ed:	push   0x65026d70
650044f2:	call   0x65006a80
650044f7:	mov    esi,eax
650044f9:	mov    ecx,esi
650044fb:	add    esp,0xc
650044fe:	mov    DWORD PTR [ebp-0x10],0xf
65004505:	mov    DWORD PTR [ebp-0x14],ebx
65004508:	mov    BYTE PTR [ebp-0x24],bl
6500450b:	lea    edx,[ecx+0x1]
6500450e:	mov    edi,edi
65004510:	mov    al,BYTE PTR [ecx]
65004512:	add    ecx,0x1
65004515:	cmp    al,bl
65004517:	jne    0x65004510
65004519:	sub    ecx,edx
6500451b:	push   ecx
6500451c:	push   esi
6500451d:	lea    ecx,[ebp-0x28]
65004520:	call   0x650018c0
65004525:	lea    edx,[ebp-0x28]
65004528:	push   edx
65004529:	lea    eax,[ebp-0x40]
6500452c:	push   eax
6500452d:	lea    ecx,[ebp-0x34]
65004530:	push   ecx
65004531:	mov    BYTE PTR [ebp-0x4],0x11
65004535:	call   0x65007130
6500453a:	mov    BYTE PTR [ebp-0x4],0x2
6500453e:	cmp    DWORD PTR [ebp-0x10],edi
65004541:	jb     0x6500454f
65004543:	mov    edx,DWORD PTR [ebp-0x24]
65004546:	push   edx
65004547:	call   0x65011f62
6500454c:	add    esp,0x4
6500454f:	push   0x65026d78
65004554:	push   0x3
65004556:	push   0x65026db8
6500455b:	call   0x65006a80
65004560:	mov    esi,eax
65004562:	mov    ecx,esi
65004564:	add    esp,0xc
65004567:	mov    DWORD PTR [ebp-0x10],0xf
6500456e:	mov    DWORD PTR [ebp-0x14],ebx
65004571:	mov    BYTE PTR [ebp-0x24],bl
65004574:	lea    edx,[ecx+0x1]
65004577:	mov    al,BYTE PTR [ecx]
65004579:	add    ecx,0x1
6500457c:	cmp    al,bl
6500457e:	jne    0x65004577
65004580:	sub    ecx,edx
65004582:	push   ecx
65004583:	push   esi
65004584:	lea    ecx,[ebp-0x28]
65004587:	call   0x650018c0
6500458c:	lea    eax,[ebp-0x28]
6500458f:	push   eax
65004590:	lea    ecx,[ebp-0x40]
65004593:	push   ecx
65004594:	lea    edx,[ebp-0x34]
65004597:	push   edx
65004598:	mov    BYTE PTR [ebp-0x4],0x12
6500459c:	call   0x65007130
650045a1:	mov    BYTE PTR [ebp-0x4],0x2
650045a5:	cmp    DWORD PTR [ebp-0x10],edi
650045a8:	jb     0x650045b6
650045aa:	mov    eax,DWORD PTR [ebp-0x24]
650045ad:	push   eax
650045ae:	call   0x65011f62
650045b3:	add    esp,0x4
650045b6:	push   0x65026dbc
650045bb:	push   0x8
650045bd:	push   0x65026df4
650045c2:	call   0x65006a80
650045c7:	mov    esi,eax
650045c9:	mov    ecx,esi
650045cb:	add    esp,0xc
650045ce:	mov    DWORD PTR [ebp-0x10],0xf
650045d5:	mov    DWORD PTR [ebp-0x14],ebx
650045d8:	mov    BYTE PTR [ebp-0x24],bl
650045db:	lea    edx,[ecx+0x1]
650045de:	mov    edi,edi
650045e0:	mov    al,BYTE PTR [ecx]
650045e2:	add    ecx,0x1
650045e5:	cmp    al,bl
650045e7:	jne    0x650045e0
650045e9:	sub    ecx,edx
650045eb:	push   ecx
650045ec:	push   esi
650045ed:	lea    ecx,[ebp-0x28]
650045f0:	call   0x650018c0
650045f5:	lea    ecx,[ebp-0x28]
650045f8:	push   ecx
650045f9:	lea    edx,[ebp-0x40]
650045fc:	push   edx
650045fd:	lea    eax,[ebp-0x34]
65004600:	push   eax
65004601:	mov    BYTE PTR [ebp-0x4],0x13
65004605:	call   0x65007130
6500460a:	mov    BYTE PTR [ebp-0x4],0x2
6500460e:	cmp    DWORD PTR [ebp-0x10],edi
65004611:	jb     0x6500461f
65004613:	mov    ecx,DWORD PTR [ebp-0x24]
65004616:	push   ecx
65004617:	call   0x65011f62
6500461c:	add    esp,0x4
6500461f:	push   0x65026e00
65004624:	push   0xb
65004626:	push   0x65026e28
6500462b:	call   0x65006a80
65004630:	mov    esi,eax
65004632:	mov    ecx,esi
65004634:	add    esp,0xc
65004637:	mov    DWORD PTR [ebp-0x10],0xf
6500463e:	mov    DWORD PTR [ebp-0x14],ebx
65004641:	mov    BYTE PTR [ebp-0x24],bl
65004644:	lea    edx,[ecx+0x1]
65004647:	mov    al,BYTE PTR [ecx]
65004649:	add    ecx,0x1
6500464c:	cmp    al,bl
6500464e:	jne    0x65004647
65004650:	sub    ecx,edx
65004652:	push   ecx
65004653:	push   esi
65004654:	lea    ecx,[ebp-0x28]
65004657:	call   0x650018c0
6500465c:	lea    edx,[ebp-0x28]
6500465f:	push   edx
65004660:	lea    eax,[ebp-0x40]
65004663:	push   eax
65004664:	lea    ecx,[ebp-0x34]
65004667:	push   ecx
65004668:	mov    BYTE PTR [ebp-0x4],0x14
6500466c:	call   0x65007130
65004671:	mov    BYTE PTR [ebp-0x4],0x2
65004675:	cmp    DWORD PTR [ebp-0x10],edi
65004678:	jb     0x65004686
6500467a:	mov    edx,DWORD PTR [ebp-0x24]
6500467d:	push   edx
6500467e:	call   0x65011f62
65004683:	add    esp,0x4
65004686:	push   0x65026e34
6500468b:	push   edi
6500468c:	push   0x65026e6c
65004691:	call   0x65006a80
65004696:	mov    esi,eax
65004698:	mov    ecx,esi
6500469a:	add    esp,0xc
6500469d:	mov    DWORD PTR [ebp-0x10],0xf
650046a4:	mov    DWORD PTR [ebp-0x14],ebx
650046a7:	mov    BYTE PTR [ebp-0x24],bl
650046aa:	lea    edx,[ecx+0x1]
650046ad:	lea    ecx,[ecx+0x0]
650046b0:	mov    al,BYTE PTR [ecx]
650046b2:	add    ecx,0x1
650046b5:	cmp    al,bl
650046b7:	jne    0x650046b0
650046b9:	sub    ecx,edx
650046bb:	push   ecx
650046bc:	push   esi
650046bd:	lea    ecx,[ebp-0x28]
650046c0:	call   0x650018c0
650046c5:	lea    eax,[ebp-0x28]
650046c8:	push   eax
650046c9:	lea    ecx,[ebp-0x40]
650046cc:	push   ecx
650046cd:	lea    edx,[ebp-0x34]
650046d0:	push   edx
650046d1:	mov    BYTE PTR [ebp-0x4],0x15
650046d5:	call   0x65007130
650046da:	mov    BYTE PTR [ebp-0x4],0x2
650046de:	cmp    DWORD PTR [ebp-0x10],edi
650046e1:	jb     0x650046ef
650046e3:	mov    eax,DWORD PTR [ebp-0x24]
650046e6:	push   eax
650046e7:	call   0x65011f62
650046ec:	add    esp,0x4
650046ef:	push   0x65026e80
650046f4:	push   0x5
650046f6:	push   0x65026ea8
650046fb:	call   0x65006a80
65004700:	mov    esi,eax
65004702:	mov    ecx,esi
65004704:	add    esp,0xc
65004707:	mov    DWORD PTR [ebp-0x10],0xf
6500470e:	mov    DWORD PTR [ebp-0x14],ebx
65004711:	mov    BYTE PTR [ebp-0x24],bl
65004714:	lea    edx,[ecx+0x1]
65004717:	mov    al,BYTE PTR [ecx]
65004719:	add    ecx,0x1
6500471c:	cmp    al,bl
6500471e:	jne    0x65004717
65004720:	sub    ecx,edx
65004722:	push   ecx
65004723:	push   esi
65004724:	lea    ecx,[ebp-0x28]
65004727:	call   0x650018c0
6500472c:	lea    ecx,[ebp-0x28]
6500472f:	push   ecx
65004730:	lea    edx,[ebp-0x40]
65004733:	push   edx
65004734:	lea    eax,[ebp-0x34]
65004737:	push   eax
65004738:	mov    BYTE PTR [ebp-0x4],0x16
6500473c:	call   0x65007130
65004741:	mov    BYTE PTR [ebp-0x4],0x2
65004745:	cmp    DWORD PTR [ebp-0x10],edi
65004748:	jb     0x65004756
6500474a:	mov    ecx,DWORD PTR [ebp-0x24]
6500474d:	push   ecx
6500474e:	call   0x65011f62
65004753:	add    esp,0x4
65004756:	push   0x65026eb0
6500475b:	push   0x5
6500475d:	push   0x65026ed4
65004762:	call   0x65006a80
65004767:	mov    esi,eax
65004769:	mov    ecx,esi
6500476b:	add    esp,0xc
6500476e:	mov    DWORD PTR [ebp-0x10],0xf
65004775:	mov    DWORD PTR [ebp-0x14],ebx
65004778:	mov    BYTE PTR [ebp-0x24],bl
6500477b:	lea    edx,[ecx+0x1]
6500477e:	mov    edi,edi
65004780:	mov    al,BYTE PTR [ecx]
65004782:	add    ecx,0x1
65004785:	cmp    al,bl
65004787:	jne    0x65004780
65004789:	sub    ecx,edx
6500478b:	push   ecx
6500478c:	push   esi
6500478d:	lea    ecx,[ebp-0x28]
65004790:	call   0x650018c0
65004795:	lea    edx,[ebp-0x28]
65004798:	push   edx
65004799:	lea    eax,[ebp-0x40]
6500479c:	push   eax
6500479d:	lea    ecx,[ebp-0x34]
650047a0:	push   ecx
650047a1:	mov    BYTE PTR [ebp-0x4],0x17
650047a5:	call   0x65007130
650047aa:	mov    BYTE PTR [ebp-0x4],0x2
650047ae:	cmp    DWORD PTR [ebp-0x10],edi
650047b1:	jb     0x650047bf
650047b3:	mov    edx,DWORD PTR [ebp-0x24]
650047b6:	push   edx
650047b7:	call   0x65011f62
650047bc:	add    esp,0x4
650047bf:	push   0x65026edc
650047c4:	push   0x8
650047c6:	push   0x65026f10
650047cb:	call   0x65006a80
650047d0:	mov    esi,eax
650047d2:	mov    ecx,esi
650047d4:	add    esp,0xc
650047d7:	mov    DWORD PTR [ebp-0x10],0xf
650047de:	mov    DWORD PTR [ebp-0x14],ebx
650047e1:	mov    BYTE PTR [ebp-0x24],bl
650047e4:	lea    edx,[ecx+0x1]
650047e7:	mov    al,BYTE PTR [ecx]
650047e9:	add    ecx,0x1
650047ec:	cmp    al,bl
650047ee:	jne    0x650047e7
650047f0:	sub    ecx,edx
650047f2:	push   ecx
650047f3:	push   esi
650047f4:	lea    ecx,[ebp-0x28]
650047f7:	call   0x650018c0
650047fc:	lea    eax,[ebp-0x28]
650047ff:	push   eax
65004800:	lea    ecx,[ebp-0x40]
65004803:	push   ecx
65004804:	lea    edx,[ebp-0x34]
65004807:	push   edx
65004808:	mov    BYTE PTR [ebp-0x4],0x18
6500480c:	call   0x65007130
65004811:	mov    BYTE PTR [ebp-0x4],0x2
65004815:	cmp    DWORD PTR [ebp-0x10],edi
65004818:	jb     0x65004826
6500481a:	mov    eax,DWORD PTR [ebp-0x24]
6500481d:	push   eax
6500481e:	call   0x65011f62
65004823:	add    esp,0x4
65004826:	push   0x65026f1c
6500482b:	push   0x8
6500482d:	push   0x65026f4c
65004832:	call   0x65006a80
65004837:	add    esp,0xc
6500483a:	push   eax
6500483b:	lea    ecx,[ebp-0x28]
6500483e:	call   0x65002730
65004843:	lea    ecx,[ebp-0x28]
65004846:	push   ecx
65004847:	lea    edx,[ebp-0x40]
6500484a:	push   edx
6500484b:	lea    eax,[ebp-0x34]
6500484e:	push   eax
6500484f:	mov    BYTE PTR [ebp-0x4],0x19
65004853:	call   0x65007130
65004858:	mov    BYTE PTR [ebp-0x4],0x2
6500485c:	cmp    DWORD PTR [ebp-0x10],edi
6500485f:	jb     0x6500486d
65004861:	mov    ecx,DWORD PTR [ebp-0x24]
65004864:	push   ecx
65004865:	call   0x65011f62
6500486a:	add    esp,0x4
6500486d:	push   0x65026f58
65004872:	push   0x4
65004874:	push   0x65026f98
65004879:	call   0x65006a80
6500487e:	add    esp,0xc
65004881:	push   eax
65004882:	lea    ecx,[ebp-0x28]
65004885:	call   0x65002730
6500488a:	lea    edx,[ebp-0x28]
6500488d:	push   edx
6500488e:	lea    eax,[ebp-0x40]
65004891:	push   eax
65004892:	lea    ecx,[ebp-0x34]
65004895:	push   ecx
65004896:	mov    BYTE PTR [ebp-0x4],0x1a
6500489a:	call   0x65007130
6500489f:	mov    BYTE PTR [ebp-0x4],0x2
650048a3:	cmp    DWORD PTR [ebp-0x10],edi
650048a6:	jb     0x650048b4
650048a8:	mov    edx,DWORD PTR [ebp-0x24]
650048ab:	push   edx
650048ac:	call   0x65011f62
650048b1:	add    esp,0x4
650048b4:	push   0x65026fa0
650048b9:	push   0xc
650048bb:	push   0x65026fc8
650048c0:	call   0x65006a80
650048c5:	add    esp,0xc
650048c8:	push   eax
650048c9:	lea    ecx,[ebp-0x28]
650048cc:	call   0x65002730
650048d1:	lea    eax,[ebp-0x28]
650048d4:	push   eax
650048d5:	lea    ecx,[ebp-0x40]
650048d8:	push   ecx
650048d9:	lea    edx,[ebp-0x34]
650048dc:	push   edx
650048dd:	mov    BYTE PTR [ebp-0x4],0x1b
650048e1:	call   0x65007130
650048e6:	mov    BYTE PTR [ebp-0x4],0x2
650048ea:	cmp    DWORD PTR [ebp-0x10],edi
650048ed:	jb     0x650048fb
650048ef:	mov    eax,DWORD PTR [ebp-0x24]
650048f2:	push   eax
650048f3:	call   0x65011f62
650048f8:	add    esp,0x4
650048fb:	push   0x65026fd8
65004900:	push   edi
65004901:	push   0x65027010
65004906:	call   0x65006a80
6500490b:	add    esp,0xc
6500490e:	push   eax
6500490f:	lea    ecx,[ebp-0x28]
65004912:	call   0x65002730
65004917:	lea    ecx,[ebp-0x28]
6500491a:	push   ecx
6500491b:	lea    edx,[ebp-0x40]
6500491e:	push   edx
6500491f:	lea    eax,[ebp-0x34]
65004922:	push   eax
65004923:	mov    BYTE PTR [ebp-0x4],0x1c
65004927:	call   0x65007130
6500492c:	mov    BYTE PTR [ebp-0x4],0x2
65004930:	cmp    DWORD PTR [ebp-0x10],edi
65004933:	jb     0x65004941
65004935:	mov    ecx,DWORD PTR [ebp-0x24]
65004938:	push   ecx
65004939:	call   0x65011f62
6500493e:	add    esp,0x4
65004941:	push   0x65027024
65004946:	push   0x7
65004948:	push   0x65027050
6500494d:	call   0x65006a80
65004952:	add    esp,0xc
65004955:	push   eax
65004956:	lea    ecx,[ebp-0x28]
65004959:	call   0x65002730
6500495e:	lea    edx,[ebp-0x28]
65004961:	push   edx
65004962:	lea    eax,[ebp-0x40]
65004965:	push   eax
65004966:	lea    ecx,[ebp-0x34]
65004969:	push   ecx
6500496a:	mov    BYTE PTR [ebp-0x4],0x1d
6500496e:	call   0x65007130
65004973:	mov    BYTE PTR [ebp-0x4],0x2
65004977:	cmp    DWORD PTR [ebp-0x10],edi
6500497a:	jb     0x65004988
6500497c:	mov    edx,DWORD PTR [ebp-0x24]
6500497f:	push   edx
65004980:	call   0x65011f62
65004985:	add    esp,0x4
65004988:	push   0x65027058
6500498d:	push   0x9
6500498f:	push   0x65027090
65004994:	call   0x65006a80
65004999:	add    esp,0xc
6500499c:	push   eax
6500499d:	lea    ecx,[ebp-0x28]
650049a0:	call   0x65002730
650049a5:	lea    eax,[ebp-0x28]
650049a8:	push   eax
650049a9:	lea    ecx,[ebp-0x40]
650049ac:	push   ecx
650049ad:	lea    edx,[ebp-0x34]
650049b0:	push   edx
650049b1:	mov    BYTE PTR [ebp-0x4],0x1e
650049b5:	call   0x65007130
650049ba:	mov    BYTE PTR [ebp-0x4],0x2
650049be:	cmp    DWORD PTR [ebp-0x10],edi
650049c1:	jb     0x650049cf
650049c3:	mov    eax,DWORD PTR [ebp-0x24]
650049c6:	push   eax
650049c7:	call   0x65011f62
650049cc:	add    esp,0x4
650049cf:	push   0x6502709c
650049d4:	push   0x7
650049d6:	push   0x650270d4
650049db:	call   0x65006a80
650049e0:	add    esp,0xc
650049e3:	push   eax
650049e4:	lea    ecx,[ebp-0x28]
650049e7:	call   0x65002730
650049ec:	lea    ecx,[ebp-0x28]
650049ef:	push   ecx
650049f0:	lea    edx,[ebp-0x40]
650049f3:	push   edx
650049f4:	lea    eax,[ebp-0x34]
650049f7:	push   eax
650049f8:	mov    BYTE PTR [ebp-0x4],0x1f
650049fc:	call   0x65007130
65004a01:	mov    BYTE PTR [ebp-0x4],0x2
65004a05:	cmp    DWORD PTR [ebp-0x10],edi
65004a08:	jb     0x65004a16
65004a0a:	mov    ecx,DWORD PTR [ebp-0x24]
65004a0d:	push   ecx
65004a0e:	call   0x65011f62
65004a13:	add    esp,0x4
65004a16:	push   0x650270dc
65004a1b:	push   0xb
65004a1d:	push   0x65027108
65004a22:	call   0x65006a80
65004a27:	add    esp,0xc
65004a2a:	push   eax
65004a2b:	lea    ecx,[ebp-0x28]
65004a2e:	call   0x65002730
65004a33:	lea    edx,[ebp-0x28]
65004a36:	push   edx
65004a37:	lea    eax,[ebp-0x40]
65004a3a:	push   eax
65004a3b:	lea    ecx,[ebp-0x34]
65004a3e:	push   ecx
65004a3f:	mov    BYTE PTR [ebp-0x4],0x20
65004a43:	call   0x65007130
65004a48:	mov    BYTE PTR [ebp-0x4],0x2
65004a4c:	cmp    DWORD PTR [ebp-0x10],edi
65004a4f:	jb     0x65004a5d
65004a51:	mov    edx,DWORD PTR [ebp-0x24]
65004a54:	push   edx
65004a55:	call   0x65011f62
65004a5a:	add    esp,0x4
65004a5d:	push   0x65027114
65004a62:	push   0x6
65004a64:	push   0x6502713c
65004a69:	call   0x65006a80
65004a6e:	add    esp,0xc
65004a71:	push   eax
65004a72:	lea    ecx,[ebp-0x28]
65004a75:	call   0x65002730
65004a7a:	lea    eax,[ebp-0x28]
65004a7d:	push   eax
65004a7e:	lea    ecx,[ebp-0x40]
65004a81:	push   ecx
65004a82:	lea    edx,[ebp-0x34]
65004a85:	push   edx
65004a86:	mov    BYTE PTR [ebp-0x4],0x21
65004a8a:	call   0x65007130
65004a8f:	mov    BYTE PTR [ebp-0x4],0x2
65004a93:	cmp    DWORD PTR [ebp-0x10],edi
65004a96:	jb     0x65004aa4
65004a98:	mov    eax,DWORD PTR [ebp-0x24]
65004a9b:	push   eax
65004a9c:	call   0x65011f62
65004aa1:	add    esp,0x4
65004aa4:	push   0x65027144
65004aa9:	push   0x6
65004aab:	push   0x65027184
65004ab0:	call   0x65006a80
65004ab5:	add    esp,0xc
65004ab8:	push   eax
65004ab9:	lea    ecx,[ebp-0x28]
65004abc:	call   0x65002730
65004ac1:	lea    ecx,[ebp-0x28]
65004ac4:	push   ecx
65004ac5:	lea    edx,[ebp-0x40]
65004ac8:	push   edx
65004ac9:	lea    eax,[ebp-0x34]
65004acc:	push   eax
65004acd:	mov    BYTE PTR [ebp-0x4],0x22
65004ad1:	call   0x65007130
65004ad6:	mov    BYTE PTR [ebp-0x4],0x2
65004ada:	cmp    DWORD PTR [ebp-0x10],edi
65004add:	jb     0x65004aeb
65004adf:	mov    ecx,DWORD PTR [ebp-0x24]
65004ae2:	push   ecx
65004ae3:	call   0x65011f62
65004ae8:	add    esp,0x4
65004aeb:	push   0x6502718c
65004af0:	push   0x7
65004af2:	push   0x650271bc
65004af7:	call   0x65006a80
65004afc:	add    esp,0xc
65004aff:	push   eax
65004b00:	lea    ecx,[ebp-0x28]
65004b03:	call   0x65002730
65004b08:	lea    edx,[ebp-0x28]
65004b0b:	push   edx
65004b0c:	lea    eax,[ebp-0x40]
65004b0f:	push   eax
65004b10:	lea    ecx,[ebp-0x34]
65004b13:	push   ecx
65004b14:	mov    BYTE PTR [ebp-0x4],0x23
65004b18:	call   0x65007130
65004b1d:	mov    BYTE PTR [ebp-0x4],0x2
65004b21:	cmp    DWORD PTR [ebp-0x10],edi
65004b24:	jb     0x65004b32
65004b26:	mov    edx,DWORD PTR [ebp-0x24]
65004b29:	push   edx
65004b2a:	call   0x65011f62
65004b2f:	add    esp,0x4
65004b32:	push   0x650271c4
65004b37:	push   0x9
65004b39:	push   0x650271f8
65004b3e:	call   0x65006a80
65004b43:	add    esp,0xc
65004b46:	push   eax
65004b47:	lea    ecx,[ebp-0x28]
65004b4a:	call   0x65002730
65004b4f:	lea    eax,[ebp-0x28]
65004b52:	push   eax
65004b53:	lea    ecx,[ebp-0x40]
65004b56:	push   ecx
65004b57:	lea    edx,[ebp-0x34]
65004b5a:	push   edx
65004b5b:	mov    BYTE PTR [ebp-0x4],0x24
65004b5f:	call   0x65007130
65004b64:	mov    BYTE PTR [ebp-0x4],0x2
65004b68:	cmp    DWORD PTR [ebp-0x10],edi
65004b6b:	jb     0x65004b79
65004b6d:	mov    eax,DWORD PTR [ebp-0x24]
65004b70:	push   eax
65004b71:	call   0x65011f62
65004b76:	add    esp,0x4
65004b79:	push   0x65027204
65004b7e:	push   0x7
65004b80:	push   0x65027244
65004b85:	call   0x65006a80
65004b8a:	add    esp,0xc
65004b8d:	push   eax
65004b8e:	lea    ecx,[ebp-0x28]
65004b91:	call   0x65002730
65004b96:	lea    ecx,[ebp-0x28]
65004b99:	push   ecx
65004b9a:	lea    edx,[ebp-0x40]
65004b9d:	push   edx
65004b9e:	lea    eax,[ebp-0x34]
65004ba1:	push   eax
65004ba2:	mov    BYTE PTR [ebp-0x4],0x25
65004ba6:	call   0x65007130
65004bab:	mov    BYTE PTR [ebp-0x4],0x2
65004baf:	cmp    DWORD PTR [ebp-0x10],edi
65004bb2:	jb     0x65004bc0
65004bb4:	mov    ecx,DWORD PTR [ebp-0x24]
65004bb7:	push   ecx
65004bb8:	call   0x65011f62
65004bbd:	add    esp,0x4
65004bc0:	push   0x6502724c
65004bc5:	push   0x6
65004bc7:	push   0x65027288
65004bcc:	call   0x65006a80
65004bd1:	add    esp,0xc
65004bd4:	push   eax
65004bd5:	lea    ecx,[ebp-0x28]
65004bd8:	call   0x65002730
65004bdd:	lea    edx,[ebp-0x28]
65004be0:	push   edx
65004be1:	lea    eax,[ebp-0x40]
65004be4:	push   eax
65004be5:	lea    ecx,[ebp-0x34]
65004be8:	push   ecx
65004be9:	mov    BYTE PTR [ebp-0x4],0x26
65004bed:	call   0x65007130
65004bf2:	mov    BYTE PTR [ebp-0x4],0x2
65004bf6:	cmp    DWORD PTR [ebp-0x10],edi
65004bf9:	jb     0x65004c07
65004bfb:	mov    edx,DWORD PTR [ebp-0x24]
65004bfe:	push   edx
65004bff:	call   0x65011f62
65004c04:	add    esp,0x4
65004c07:	push   0x65027290
65004c0c:	push   0x8
65004c0e:	push   0x650272c4
65004c13:	call   0x65006a80
65004c18:	add    esp,0xc
65004c1b:	push   eax
65004c1c:	lea    ecx,[ebp-0x28]
65004c1f:	call   0x65002730
65004c24:	lea    eax,[ebp-0x28]
65004c27:	push   eax
65004c28:	lea    ecx,[ebp-0x40]
65004c2b:	push   ecx
65004c2c:	lea    edx,[ebp-0x34]
65004c2f:	push   edx
65004c30:	mov    BYTE PTR [ebp-0x4],0x27
65004c34:	call   0x65007130
65004c39:	mov    BYTE PTR [ebp-0x4],0x2
65004c3d:	cmp    DWORD PTR [ebp-0x10],edi
65004c40:	jb     0x65004c4e
65004c42:	mov    eax,DWORD PTR [ebp-0x24]
65004c45:	push   eax
65004c46:	call   0x65011f62
65004c4b:	add    esp,0x4
65004c4e:	push   0x650272d0
65004c53:	push   0x6
65004c55:	push   0x6502730c
65004c5a:	call   0x65006a80
65004c5f:	add    esp,0xc
65004c62:	push   eax
65004c63:	lea    ecx,[ebp-0x28]
65004c66:	call   0x65002730
65004c6b:	lea    ecx,[ebp-0x28]
65004c6e:	push   ecx
65004c6f:	lea    edx,[ebp-0x40]
65004c72:	push   edx
65004c73:	lea    eax,[ebp-0x34]
65004c76:	push   eax
65004c77:	mov    BYTE PTR [ebp-0x4],0x28
65004c7b:	call   0x65007130
65004c80:	mov    BYTE PTR [ebp-0x4],0x2
65004c84:	cmp    DWORD PTR [ebp-0x10],edi
65004c87:	jb     0x65004c95
65004c89:	mov    ecx,DWORD PTR [ebp-0x24]
65004c8c:	push   ecx
65004c8d:	call   0x65011f62
65004c92:	add    esp,0x4
65004c95:	lea    edx,[ebp-0x40]
65004c98:	push   edx
65004c99:	lea    ecx,[ebp-0x34]
65004c9c:	call   0x65003c10
65004ca1:	add    esp,0x4
65004ca4:	mov    ecx,0x650303f0
65004ca9:	mov    BYTE PTR [ebp-0x4],0x29
65004cad:	call   0x650070f0
65004cb2:	lea    eax,[ebp-0x40]
65004cb5:	mov    BYTE PTR [ebp-0x4],0x2
65004cb9:	call   0x65007b10
65004cbe:	lea    eax,[ebp-0x34]
65004cc1:	mov    BYTE PTR [ebp-0x4],bl
65004cc4:	call   0x65007b10
65004cc9:	call   DWORD PTR ds:0x6502c06c
65004ccf:	mov    edi,DWORD PTR [ebp+0x40c]
65004cd5:	cmp    DWORD PTR [edi-0x4],0x1
65004cd9:	mov    DWORD PTR [ebp-0x48],eax
65004cdc:	jle    0x65004cf3
65004cde:	mov    eax,DWORD PTR [edi-0xc]
65004ce1:	push   eax
65004ce2:	lea    ecx,[ebp+0x40c]
65004ce8:	call   0x650019b0
65004ced:	mov    edi,DWORD PTR [ebp+0x40c]
65004cf3:	cmp    edi,ebx
65004cf5:	jne    0x65004cfb
65004cf7:	xor    eax,eax
65004cf9:	jmp    0x65004d28
65004cfb:	push   edi
65004cfc:	call   DWORD PTR ds:0x65024050
65004d02:	add    eax,0x1
65004d05:	cmp    eax,0x3fffffff
65004d0a:	jle    0x65004d10
65004d0c:	xor    eax,eax
65004d0e:	jmp    0x65004d28
65004d10:	lea    esi,[eax+eax*1]
65004d13:	mov    eax,esi
65004d15:	call   0x65012ec0
65004d1a:	mov    ecx,DWORD PTR [ebp-0x48]
65004d1d:	mov    eax,esp
65004d1f:	push   ecx
65004d20:	push   esi
65004d21:	push   edi
65004d22:	push   eax
65004d23:	call   0x65002ba0
65004d28:	lea    edx,[ebp+0x0]
65004d2b:	jmp    0x65004d30
65004d2d:	lea    ecx,[ecx+0x0]
65004d30:	mov    cl,BYTE PTR [eax]
65004d32:	mov    BYTE PTR [edx],cl
65004d34:	add    eax,0x1
65004d37:	add    edx,0x1
65004d3a:	cmp    cl,bl
65004d3c:	jne    0x65004d30
65004d3e:	lea    edx,[ebp+0x0]
65004d41:	push   edx
65004d42:	call   0x6501eb55
65004d47:	add    esp,0x4
65004d4a:	lea    eax,[ebp+0x0]
65004d4d:	push   eax
65004d4e:	lea    ecx,[ebp-0x28]
65004d51:	call   0x65002730
65004d56:	lea    eax,[ebp-0x28]
65004d59:	mov    esi,0x650303f0
65004d5e:	mov    BYTE PTR [ebp-0x4],0x2a
65004d62:	call   0x650072c0
65004d67:	test   eax,eax
65004d69:	setne  BYTE PTR [ebp-0x41]
65004d6d:	cmp    DWORD PTR [ebp-0x10],0x10
65004d71:	jb     0x65004d7f
65004d73:	mov    ecx,DWORD PTR [ebp-0x24]
65004d76:	push   ecx
65004d77:	call   0x65011f62
65004d7c:	add    esp,0x4
65004d7f:	lea    eax,[edi-0x10]
65004d82:	mov    DWORD PTR [ebp-0x10],0xf
65004d89:	mov    DWORD PTR [ebp-0x14],ebx
65004d8c:	mov    BYTE PTR [ebp-0x24],bl
65004d8f:	mov    DWORD PTR [ebp-0x4],0xffffffff
65004d96:	lea    edx,[eax+0xc]
65004d99:	or     ecx,0xffffffff
65004d9c:	lock xadd DWORD PTR [edx],ecx
65004da0:	dec    ecx
65004da1:	test   ecx,ecx
65004da3:	jg     0x65004daf
65004da5:	mov    ecx,DWORD PTR [eax]
65004da7:	mov    edx,DWORD PTR [ecx]
65004da9:	push   eax
65004daa:	mov    eax,DWORD PTR [edx+0x4]
65004dad:	call   eax
65004daf:	mov    al,BYTE PTR [ebp-0x41]
65004db2:	lea    esp,[ebp-0x58]
65004db5:	mov    ecx,DWORD PTR [ebp-0xc]
65004db8:	mov    DWORD PTR fs:0x0,ecx
65004dbf:	pop    ecx
65004dc0:	pop    edi
65004dc1:	pop    esi
65004dc2:	pop    ebx
65004dc3:	mov    ecx,DWORD PTR [ebp+0x400]
65004dc9:	xor    ecx,ebp
65004dcb:	call   0x650127bc
65004dd0:	add    ebp,0x404
65004dd6:	mov    esp,ebp
65004dd8:	pop    ebp
65004dd9:	ret    
65004dda:	int3   
65004ddb:	int3   
65004ddc:	int3   
65004ddd:	int3   
65004dde:	int3   
65004ddf:	int3   
65004de0:	int3   
65004de1:	int3   
65004de2:	int3   
65004de3:	int3   
65004de4:	int3   
65004de5:	int3   
65004de6:	int3   
65004de7:	int3   
65004de8:	int3   
65004de9:	int3   
65004dea:	int3   
65004deb:	int3   
65004dec:	int3   
65004ded:	int3   
65004dee:	int3   
65004def:	int3   
65004df0:	push   ebp
65004df1:	lea    ebp,[esp-0x404]
65004df8:	sub    esp,0x404
65004dfe:	push   0xffffffff
65004e00:	push   0x65023049
65004e05:	mov    eax,fs:0x0
65004e0b:	push   eax
65004e0c:	sub    esp,0x3c
65004e0f:	mov    eax,ds:0x6502c09c
65004e14:	xor    eax,ebp
65004e16:	mov    DWORD PTR [ebp+0x400],eax
65004e1c:	push   ebx
65004e1d:	push   esi
65004e1e:	push   edi
65004e1f:	push   eax
65004e20:	lea    eax,[ebp-0xc]
65004e23:	mov    fs:0x0,eax
65004e29:	xor    ebx,ebx
65004e2b:	mov    DWORD PTR [ebp-0x4],ebx
65004e2e:	test   BYTE PTR ds:0x650303ec,0x1
65004e35:	jne    0x65004e7d
65004e37:	or     DWORD PTR ds:0x650303ec,0x1
65004e3e:	mov    BYTE PTR [ebp-0x4],0x1
65004e42:	call   0x65008440
65004e47:	mov    ds:0x650303e4,eax
65004e4c:	mov    BYTE PTR [eax+0x29],0x1
65004e50:	mov    eax,ds:0x650303e4
65004e55:	mov    DWORD PTR [eax+0x4],eax
65004e58:	mov    eax,ds:0x650303e4
65004e5d:	mov    DWORD PTR [eax],eax
65004e5f:	mov    eax,ds:0x650303e4
65004e64:	mov    DWORD PTR [eax+0x8],eax
65004e67:	push   0x65023420
65004e6c:	mov    DWORD PTR ds:0x650303e8,ebx
65004e72:	call   0x650128ef
65004e77:	add    esp,0x4
65004e7a:	mov    BYTE PTR [ebp-0x4],bl
65004e7d:	cmp    DWORD PTR ds:0x650303e8,ebx
65004e83:	mov    edi,0x10
65004e88:	jne    0x650061ea
65004e8e:	call   0x65008440
65004e93:	mov    DWORD PTR [ebp-0x30],eax
65004e96:	mov    BYTE PTR [eax+0x29],0x1
65004e9a:	mov    eax,DWORD PTR [ebp-0x30]
65004e9d:	mov    DWORD PTR [eax+0x4],eax
65004ea0:	mov    eax,DWORD PTR [ebp-0x30]
65004ea3:	mov    DWORD PTR [eax],eax
65004ea5:	mov    eax,DWORD PTR [ebp-0x30]
65004ea8:	mov    DWORD PTR [eax+0x8],eax
65004eab:	mov    DWORD PTR [ebp-0x2c],ebx
65004eae:	push   0x65027314
65004eb3:	push   0xd
65004eb5:	push   0x65027354
65004eba:	mov    BYTE PTR [ebp-0x4],0x2
65004ebe:	call   0x65006a80
65004ec3:	mov    ecx,eax
65004ec5:	add    esp,0xc
65004ec8:	mov    DWORD PTR [ebp-0x10],0xf
65004ecf:	mov    DWORD PTR [ebp-0x14],ebx
65004ed2:	mov    BYTE PTR [ebp-0x24],bl
65004ed5:	lea    esi,[ecx+0x1]
65004ed8:	mov    dl,BYTE PTR [ecx]
65004eda:	add    ecx,0x1
65004edd:	cmp    dl,bl
65004edf:	jne    0x65004ed8
65004ee1:	sub    ecx,esi
65004ee3:	push   ecx
65004ee4:	push   eax
65004ee5:	lea    ecx,[ebp-0x28]
65004ee8:	call   0x650018c0
65004eed:	lea    eax,[ebp-0x28]
65004ef0:	push   eax
65004ef1:	lea    ecx,[ebp-0x40]
65004ef4:	push   ecx
65004ef5:	lea    edx,[ebp-0x34]
65004ef8:	push   edx
65004ef9:	mov    BYTE PTR [ebp-0x4],0x3
65004efd:	call   0x65007130
65004f02:	mov    BYTE PTR [ebp-0x4],0x2
65004f06:	cmp    DWORD PTR [ebp-0x10],0x10
65004f0a:	jb     0x65004f18
65004f0c:	mov    eax,DWORD PTR [ebp-0x24]
65004f0f:	push   eax
65004f10:	call   0x65011f62
65004f15:	add    esp,0x4
65004f18:	push   0x65027364
65004f1d:	push   0x5
65004f1f:	push   0x650273a4
65004f24:	call   0x65006a80
65004f29:	mov    ecx,eax
65004f2b:	add    esp,0xc
65004f2e:	mov    DWORD PTR [ebp-0x10],0xf
65004f35:	mov    DWORD PTR [ebp-0x14],ebx
65004f38:	mov    BYTE PTR [ebp-0x24],bl
65004f3b:	lea    esi,[ecx+0x1]
65004f3e:	mov    edi,edi
65004f40:	mov    dl,BYTE PTR [ecx]
65004f42:	add    ecx,0x1
65004f45:	cmp    dl,bl
65004f47:	jne    0x65004f40
65004f49:	sub    ecx,esi
65004f4b:	push   ecx
65004f4c:	push   eax
65004f4d:	lea    ecx,[ebp-0x28]
65004f50:	call   0x650018c0
65004f55:	lea    ecx,[ebp-0x28]
65004f58:	push   ecx
65004f59:	lea    edx,[ebp-0x40]
65004f5c:	push   edx
65004f5d:	lea    eax,[ebp-0x34]
65004f60:	push   eax
65004f61:	mov    BYTE PTR [ebp-0x4],0x4
65004f65:	call   0x65007130
65004f6a:	mov    BYTE PTR [ebp-0x4],0x2
65004f6e:	cmp    DWORD PTR [ebp-0x10],0x10
65004f72:	jb     0x65004f80
65004f74:	mov    ecx,DWORD PTR [ebp-0x24]
65004f77:	push   ecx
65004f78:	call   0x65011f62
65004f7d:	add    esp,0x4
65004f80:	push   0x650273ac
65004f85:	push   0x5
65004f87:	push   0x650273d8
65004f8c:	call   0x65006a80
65004f91:	mov    ecx,eax
65004f93:	add    esp,0xc
65004f96:	mov    DWORD PTR [ebp-0x10],0xf
65004f9d:	mov    DWORD PTR [ebp-0x14],ebx
65004fa0:	mov    BYTE PTR [ebp-0x24],bl
65004fa3:	lea    esi,[ecx+0x1]
65004fa6:	mov    dl,BYTE PTR [ecx]
65004fa8:	add    ecx,0x1
65004fab:	cmp    dl,bl
65004fad:	jne    0x65004fa6
65004faf:	sub    ecx,esi
65004fb1:	push   ecx
65004fb2:	push   eax
65004fb3:	lea    ecx,[ebp-0x28]
65004fb6:	call   0x650018c0
65004fbb:	lea    edx,[ebp-0x28]
65004fbe:	push   edx
65004fbf:	lea    eax,[ebp-0x40]
65004fc2:	push   eax
65004fc3:	lea    ecx,[ebp-0x34]
65004fc6:	push   ecx
65004fc7:	mov    BYTE PTR [ebp-0x4],0x5
65004fcb:	call   0x65007130
65004fd0:	mov    BYTE PTR [ebp-0x4],0x2
65004fd4:	cmp    DWORD PTR [ebp-0x10],0x10
65004fd8:	jb     0x65004fe6
65004fda:	mov    edx,DWORD PTR [ebp-0x24]
65004fdd:	push   edx
65004fde:	call   0x65011f62
65004fe3:	add    esp,0x4
65004fe6:	push   0x650273e0
65004feb:	push   0x11
65004fed:	push   0x65027410
65004ff2:	call   0x65006a80
65004ff7:	mov    ecx,eax
65004ff9:	add    esp,0xc
65004ffc:	mov    DWORD PTR [ebp-0x10],0xf
65005003:	mov    DWORD PTR [ebp-0x14],ebx
65005006:	mov    BYTE PTR [ebp-0x24],bl
65005009:	lea    esi,[ecx+0x1]
6500500c:	lea    esp,[esp+0x0]
65005010:	mov    dl,BYTE PTR [ecx]
65005012:	add    ecx,0x1
65005015:	cmp    dl,bl
65005017:	jne    0x65005010
65005019:	sub    ecx,esi
6500501b:	push   ecx
6500501c:	push   eax
6500501d:	lea    ecx,[ebp-0x28]
65005020:	call   0x650018c0
65005025:	lea    eax,[ebp-0x28]
65005028:	push   eax
65005029:	lea    ecx,[ebp-0x40]
6500502c:	push   ecx
6500502d:	lea    edx,[ebp-0x34]
65005030:	push   edx
65005031:	mov    BYTE PTR [ebp-0x4],0x6
65005035:	call   0x65007130
6500503a:	mov    BYTE PTR [ebp-0x4],0x2
6500503e:	cmp    DWORD PTR [ebp-0x10],0x10
65005042:	jb     0x65005050
65005044:	mov    eax,DWORD PTR [ebp-0x24]
65005047:	push   eax
65005048:	call   0x65011f62
6500504d:	add    esp,0x4
65005050:	push   0x65027424
65005055:	push   0x6
65005057:	push   0x65027454
6500505c:	call   0x65006a80
65005061:	mov    ecx,eax
65005063:	add    esp,0xc
65005066:	mov    DWORD PTR [ebp-0x10],0xf
6500506d:	mov    DWORD PTR [ebp-0x14],ebx
65005070:	mov    BYTE PTR [ebp-0x24],bl
65005073:	lea    esi,[ecx+0x1]
65005076:	mov    dl,BYTE PTR [ecx]
65005078:	add    ecx,0x1
6500507b:	cmp    dl,bl
6500507d:	jne    0x65005076
6500507f:	sub    ecx,esi
65005081:	push   ecx
65005082:	push   eax
65005083:	lea    ecx,[ebp-0x28]
65005086:	call   0x650018c0
6500508b:	lea    ecx,[ebp-0x28]
6500508e:	push   ecx
6500508f:	lea    edx,[ebp-0x40]
65005092:	push   edx
65005093:	lea    eax,[ebp-0x34]
65005096:	push   eax
65005097:	mov    BYTE PTR [ebp-0x4],0x7
6500509b:	call   0x65007130
650050a0:	mov    BYTE PTR [ebp-0x4],0x2
650050a4:	cmp    DWORD PTR [ebp-0x10],0x10
650050a8:	jb     0x650050b6
650050aa:	mov    ecx,DWORD PTR [ebp-0x24]
650050ad:	push   ecx
650050ae:	call   0x65011f62
650050b3:	add    esp,0x4
650050b6:	push   0x65027460
650050bb:	push   0x5
650050bd:	push   0x650274a0
650050c2:	call   0x65006a80
650050c7:	mov    ecx,eax
650050c9:	add    esp,0xc
650050cc:	mov    DWORD PTR [ebp-0x10],0xf
650050d3:	mov    DWORD PTR [ebp-0x14],ebx
650050d6:	mov    BYTE PTR [ebp-0x24],bl
650050d9:	lea    esi,[ecx+0x1]
650050dc:	lea    esp,[esp+0x0]
650050e0:	mov    dl,BYTE PTR [ecx]
650050e2:	add    ecx,0x1
650050e5:	cmp    dl,bl
650050e7:	jne    0x650050e0
650050e9:	sub    ecx,esi
650050eb:	push   ecx
650050ec:	push   eax
650050ed:	lea    ecx,[ebp-0x28]
650050f0:	call   0x650018c0
650050f5:	lea    edx,[ebp-0x28]
650050f8:	push   edx
650050f9:	lea    eax,[ebp-0x40]
650050fc:	push   eax
650050fd:	lea    ecx,[ebp-0x34]
65005100:	push   ecx
65005101:	mov    BYTE PTR [ebp-0x4],0x8
65005105:	call   0x65007130
6500510a:	mov    BYTE PTR [ebp-0x4],0x2
6500510e:	cmp    DWORD PTR [ebp-0x10],0x10
65005112:	jb     0x65005120
65005114:	mov    edx,DWORD PTR [ebp-0x24]
65005117:	push   edx
65005118:	call   0x65011f62
6500511d:	add    esp,0x4
65005120:	push   0x650274a8
65005125:	push   0x8
65005127:	push   0x650274d0
6500512c:	call   0x65006a80
65005131:	mov    esi,eax
65005133:	mov    edi,0xf
65005138:	mov    ecx,esi
6500513a:	add    esp,0xc
6500513d:	mov    DWORD PTR [ebp-0x10],edi
65005140:	mov    DWORD PTR [ebp-0x14],ebx
65005143:	mov    BYTE PTR [ebp-0x24],bl
65005146:	lea    edx,[ecx+0x1]
65005149:	lea    esp,[esp+0x0]
65005150:	mov    al,BYTE PTR [ecx]
65005152:	add    ecx,0x1
65005155:	cmp    al,bl
65005157:	jne    0x65005150
65005159:	sub    ecx,edx
6500515b:	push   ecx
6500515c:	push   esi
6500515d:	lea    ecx,[ebp-0x28]
65005160:	call   0x650018c0
65005165:	lea    eax,[ebp-0x28]
65005168:	push   eax
65005169:	lea    ecx,[ebp-0x40]
6500516c:	push   ecx
6500516d:	lea    edx,[ebp-0x34]
65005170:	push   edx
65005171:	mov    BYTE PTR [ebp-0x4],0x9
65005175:	call   0x65007130
6500517a:	mov    BYTE PTR [ebp-0x4],0x2
6500517e:	cmp    DWORD PTR [ebp-0x10],0x10
65005182:	jb     0x65005190
65005184:	mov    eax,DWORD PTR [ebp-0x24]
65005187:	push   eax
65005188:	call   0x65011f62
6500518d:	add    esp,0x4
65005190:	push   0x650274dc
65005195:	push   0x7
65005197:	push   0x6502751c
6500519c:	call   0x65006a80
650051a1:	mov    ecx,eax
650051a3:	add    esp,0xc
650051a6:	mov    DWORD PTR [ebp-0x10],edi
650051a9:	mov    DWORD PTR [ebp-0x14],ebx
650051ac:	mov    BYTE PTR [ebp-0x24],bl
650051af:	lea    esi,[ecx+0x1]
650051b2:	mov    dl,BYTE PTR [ecx]
650051b4:	add    ecx,0x1
650051b7:	cmp    dl,bl
650051b9:	jne    0x650051b2
650051bb:	sub    ecx,esi
650051bd:	push   ecx
650051be:	push   eax
650051bf:	lea    ecx,[ebp-0x28]
650051c2:	call   0x650018c0
650051c7:	lea    ecx,[ebp-0x28]
650051ca:	push   ecx
650051cb:	lea    edx,[ebp-0x40]
650051ce:	push   edx
650051cf:	lea    eax,[ebp-0x34]
650051d2:	push   eax
650051d3:	mov    BYTE PTR [ebp-0x4],0xa
650051d7:	call   0x65007130
650051dc:	mov    BYTE PTR [ebp-0x4],0x2
650051e0:	cmp    DWORD PTR [ebp-0x10],0x10
650051e4:	jb     0x650051f2
650051e6:	mov    ecx,DWORD PTR [ebp-0x24]
650051e9:	push   ecx
650051ea:	call   0x65011f62
650051ef:	add    esp,0x4
650051f2:	push   0x65027524
650051f7:	push   0x5
650051f9:	push   0x65027554
650051fe:	call   0x65006a80
65005203:	mov    ecx,eax
65005205:	add    esp,0xc
65005208:	mov    DWORD PTR [ebp-0x10],0xf
6500520f:	mov    DWORD PTR [ebp-0x14],ebx
65005212:	mov    BYTE PTR [ebp-0x24],bl
65005215:	lea    esi,[ecx+0x1]
65005218:	mov    dl,BYTE PTR [ecx]
6500521a:	add    ecx,0x1
6500521d:	cmp    dl,bl
6500521f:	jne    0x65005218
65005221:	sub    ecx,esi
65005223:	push   ecx
65005224:	push   eax
65005225:	lea    ecx,[ebp-0x28]
65005228:	call   0x650018c0
6500522d:	lea    edx,[ebp-0x28]
65005230:	push   edx
65005231:	lea    eax,[ebp-0x40]
65005234:	push   eax
65005235:	lea    ecx,[ebp-0x34]
65005238:	push   ecx
65005239:	mov    BYTE PTR [ebp-0x4],0xb
6500523d:	call   0x65007130
65005242:	mov    BYTE PTR [ebp-0x4],0x2
65005246:	cmp    DWORD PTR [ebp-0x10],0x10
6500524a:	jb     0x65005258
6500524c:	mov    edx,DWORD PTR [ebp-0x24]
6500524f:	push   edx
65005250:	call   0x65011f62
65005255:	add    esp,0x4
65005258:	push   0x65027560
6500525d:	push   0x5
6500525f:	push   0x650275a0
65005264:	call   0x65006a80
65005269:	mov    ecx,eax
6500526b:	add    esp,0xc
6500526e:	mov    DWORD PTR [ebp-0x10],0xf
65005275:	mov    DWORD PTR [ebp-0x14],ebx
65005278:	mov    BYTE PTR [ebp-0x24],bl
6500527b:	lea    esi,[ecx+0x1]
6500527e:	mov    edi,edi
65005280:	mov    dl,BYTE PTR [ecx]
65005282:	add    ecx,0x1
65005285:	cmp    dl,bl
65005287:	jne    0x65005280
65005289:	sub    ecx,esi
6500528b:	push   ecx
6500528c:	push   eax
6500528d:	lea    ecx,[ebp-0x28]
65005290:	call   0x650018c0
65005295:	lea    eax,[ebp-0x28]
65005298:	push   eax
65005299:	lea    ecx,[ebp-0x40]
6500529c:	push   ecx
6500529d:	lea    edx,[ebp-0x34]
650052a0:	push   edx
650052a1:	mov    BYTE PTR [ebp-0x4],0xc
650052a5:	call   0x65007130
650052aa:	mov    BYTE PTR [ebp-0x4],0x2
650052ae:	cmp    DWORD PTR [ebp-0x10],0x10
650052b2:	jb     0x650052c0
650052b4:	mov    eax,DWORD PTR [ebp-0x24]
650052b7:	push   eax
650052b8:	call   0x65011f62
650052bd:	add    esp,0x4
650052c0:	push   0x650275a8
650052c5:	push   0xe
650052c7:	push   0x650275e4
650052cc:	call   0x65006a80
650052d1:	mov    ecx,eax
650052d3:	add    esp,0xc
650052d6:	mov    DWORD PTR [ebp-0x10],0xf
650052dd:	mov    DWORD PTR [ebp-0x14],ebx
650052e0:	mov    BYTE PTR [ebp-0x24],bl
650052e3:	lea    esi,[ecx+0x1]
650052e6:	mov    dl,BYTE PTR [ecx]
650052e8:	add    ecx,0x1
650052eb:	cmp    dl,bl
650052ed:	jne    0x650052e6
650052ef:	sub    ecx,esi
650052f1:	push   ecx
650052f2:	push   eax
650052f3:	lea    ecx,[ebp-0x28]
650052f6:	call   0x650018c0
650052fb:	lea    ecx,[ebp-0x28]
650052fe:	push   ecx
650052ff:	lea    edx,[ebp-0x40]
65005302:	push   edx
65005303:	lea    eax,[ebp-0x34]
65005306:	push   eax
65005307:	mov    BYTE PTR [ebp-0x4],0xd
6500530b:	call   0x65007130
65005310:	mov    BYTE PTR [ebp-0x4],0x2
65005314:	cmp    DWORD PTR [ebp-0x10],0x10
65005318:	jb     0x65005326
6500531a:	mov    ecx,DWORD PTR [ebp-0x24]
6500531d:	push   ecx
6500531e:	call   0x65011f62
65005323:	add    esp,0x4
65005326:	push   0x650275f4
6500532b:	push   0x6
6500532d:	push   0x65027618
65005332:	call   0x65006a80
65005337:	mov    ecx,eax
65005339:	add    esp,0xc
6500533c:	mov    DWORD PTR [ebp-0x10],0xf
65005343:	mov    DWORD PTR [ebp-0x14],ebx
65005346:	mov    BYTE PTR [ebp-0x24],bl
65005349:	lea    esi,[ecx+0x1]
6500534c:	lea    esp,[esp+0x0]
65005350:	mov    dl,BYTE PTR [ecx]
65005352:	add    ecx,0x1
65005355:	cmp    dl,bl
65005357:	jne    0x65005350
65005359:	sub    ecx,esi
6500535b:	push   ecx
6500535c:	push   eax
6500535d:	lea    ecx,[ebp-0x28]
65005360:	call   0x650018c0
65005365:	lea    edx,[ebp-0x28]
65005368:	push   edx
65005369:	lea    eax,[ebp-0x40]
6500536c:	push   eax
6500536d:	lea    ecx,[ebp-0x34]
65005370:	push   ecx
65005371:	mov    BYTE PTR [ebp-0x4],0xe
65005375:	call   0x65007130
6500537a:	mov    BYTE PTR [ebp-0x4],0x2
6500537e:	cmp    DWORD PTR [ebp-0x10],0x10
65005382:	jb     0x65005390
65005384:	mov    edx,DWORD PTR [ebp-0x24]
65005387:	push   edx
65005388:	call   0x65011f62
6500538d:	add    esp,0x4
65005390:	push   0x65027620
65005395:	push   0x3
65005397:	push   0x65027658
6500539c:	call   0x65006a80
650053a1:	mov    ecx,eax
650053a3:	add    esp,0xc
650053a6:	mov    DWORD PTR [ebp-0x10],0xf
650053ad:	mov    DWORD PTR [ebp-0x14],ebx
650053b0:	mov    BYTE PTR [ebp-0x24],bl
650053b3:	lea    esi,[ecx+0x1]
650053b6:	mov    dl,BYTE PTR [ecx]
650053b8:	add    ecx,0x1
650053bb:	cmp    dl,bl
650053bd:	jne    0x650053b6
650053bf:	sub    ecx,esi
650053c1:	push   ecx
650053c2:	push   eax
650053c3:	lea    ecx,[ebp-0x28]
650053c6:	call   0x650018c0
650053cb:	lea    eax,[ebp-0x28]
650053ce:	push   eax
650053cf:	lea    ecx,[ebp-0x40]
650053d2:	push   ecx
650053d3:	lea    edx,[ebp-0x34]
650053d6:	push   edx
650053d7:	mov    BYTE PTR [ebp-0x4],0xf
650053db:	call   0x65007130
650053e0:	mov    BYTE PTR [ebp-0x4],0x2
650053e4:	cmp    DWORD PTR [ebp-0x10],0x10
650053e8:	jb     0x650053f6
650053ea:	mov    eax,DWORD PTR [ebp-0x24]
650053ed:	push   eax
650053ee:	call   0x65011f62
650053f3:	add    esp,0x4
650053f6:	push   0x6502765c
650053fb:	push   0x3
650053fd:	push   0x65027698
65005402:	call   0x65006a80
65005407:	mov    esi,eax
65005409:	mov    edi,0xf
6500540e:	mov    ecx,esi
65005410:	add    esp,0xc
65005413:	mov    DWORD PTR [ebp-0x10],edi
65005416:	mov    DWORD PTR [ebp-0x14],ebx
65005419:	mov    BYTE PTR [ebp-0x24],bl
6500541c:	lea    edx,[ecx+0x1]
6500541f:	nop
65005420:	mov    al,BYTE PTR [ecx]
65005422:	add    ecx,0x1
65005425:	cmp    al,bl
65005427:	jne    0x65005420
65005429:	sub    ecx,edx
6500542b:	push   ecx
6500542c:	push   esi
6500542d:	lea    ecx,[ebp-0x28]
65005430:	call   0x650018c0
65005435:	lea    ecx,[ebp-0x28]
65005438:	push   ecx
65005439:	lea    edx,[ebp-0x40]
6500543c:	push   edx
6500543d:	lea    eax,[ebp-0x34]
65005440:	push   eax
65005441:	mov    BYTE PTR [ebp-0x4],0x10
65005445:	call   0x65007130
6500544a:	mov    BYTE PTR [ebp-0x4],0x2
6500544e:	cmp    DWORD PTR [ebp-0x10],0x10
65005452:	jb     0x65005460
65005454:	mov    ecx,DWORD PTR [ebp-0x24]
65005457:	push   ecx
65005458:	call   0x65011f62
6500545d:	add    esp,0x4
65005460:	push   0x6502769c
65005465:	push   0x3
65005467:	push   0x650276d8
6500546c:	call   0x65006a80
65005471:	mov    ecx,eax
65005473:	add    esp,0xc
65005476:	mov    DWORD PTR [ebp-0x10],edi
65005479:	mov    DWORD PTR [ebp-0x14],ebx
6500547c:	mov    BYTE PTR [ebp-0x24],bl
6500547f:	lea    esi,[ecx+0x1]
65005482:	mov    dl,BYTE PTR [ecx]
65005484:	add    ecx,0x1
65005487:	cmp    dl,bl
65005489:	jne    0x65005482
6500548b:	sub    ecx,esi
6500548d:	push   ecx
6500548e:	push   eax
6500548f:	lea    ecx,[ebp-0x28]
65005492:	call   0x650018c0
65005497:	lea    edx,[ebp-0x28]
6500549a:	push   edx
6500549b:	lea    eax,[ebp-0x40]
6500549e:	push   eax
6500549f:	lea    ecx,[ebp-0x34]
650054a2:	push   ecx
650054a3:	mov    BYTE PTR [ebp-0x4],0x11
650054a7:	call   0x65007130
650054ac:	mov    BYTE PTR [ebp-0x4],0x2
650054b0:	cmp    DWORD PTR [ebp-0x10],0x10
650054b4:	jb     0x650054c2
650054b6:	mov    edx,DWORD PTR [ebp-0x24]
650054b9:	push   edx
650054ba:	call   0x65011f62
650054bf:	add    esp,0x4
650054c2:	push   0x650276dc
650054c7:	push   0x4
650054c9:	push   0x65027708
650054ce:	call   0x65006a80
650054d3:	mov    ecx,eax
650054d5:	add    esp,0xc
650054d8:	mov    DWORD PTR [ebp-0x10],0xf
650054df:	mov    DWORD PTR [ebp-0x14],ebx
650054e2:	mov    BYTE PTR [ebp-0x24],bl
650054e5:	lea    esi,[ecx+0x1]
650054e8:	mov    dl,BYTE PTR [ecx]
650054ea:	add    ecx,0x1
650054ed:	cmp    dl,bl
650054ef:	jne    0x650054e8
650054f1:	sub    ecx,esi
650054f3:	push   ecx
650054f4:	push   eax
650054f5:	lea    ecx,[ebp-0x28]
650054f8:	call   0x650018c0
650054fd:	lea    eax,[ebp-0x28]
65005500:	push   eax
65005501:	lea    ecx,[ebp-0x40]
65005504:	push   ecx
65005505:	lea    edx,[ebp-0x34]
65005508:	push   edx
65005509:	mov    BYTE PTR [ebp-0x4],0x12
6500550d:	call   0x65007130
65005512:	mov    BYTE PTR [ebp-0x4],0x2
65005516:	cmp    DWORD PTR [ebp-0x10],0x10
6500551a:	jb     0x65005528
6500551c:	mov    eax,DWORD PTR [ebp-0x24]
6500551f:	push   eax
65005520:	call   0x65011f62
65005525:	add    esp,0x4
65005528:	push   0x65027710
6500552d:	push   0x5
6500552f:	push   0x65027750
65005534:	call   0x65006a80
65005539:	mov    esi,eax
6500553b:	mov    edi,0xf
65005540:	mov    ecx,esi
65005542:	add    esp,0xc
65005545:	mov    DWORD PTR [ebp-0x10],edi
65005548:	mov    DWORD PTR [ebp-0x14],ebx
6500554b:	mov    BYTE PTR [ebp-0x24],bl
6500554e:	lea    edx,[ecx+0x1]
65005551:	mov    al,BYTE PTR [ecx]
65005553:	add    ecx,0x1
65005556:	cmp    al,bl
65005558:	jne    0x65005551
6500555a:	sub    ecx,edx
6500555c:	push   ecx
6500555d:	push   esi
6500555e:	lea    ecx,[ebp-0x28]
65005561:	call   0x650018c0
65005566:	lea    ecx,[ebp-0x28]
65005569:	push   ecx
6500556a:	lea    edx,[ebp-0x40]
6500556d:	push   edx
6500556e:	lea    eax,[ebp-0x34]
65005571:	push   eax
65005572:	mov    BYTE PTR [ebp-0x4],0x13
65005576:	call   0x65007130
6500557b:	mov    BYTE PTR [ebp-0x4],0x2
6500557f:	cmp    DWORD PTR [ebp-0x10],0x10
65005583:	jb     0x65005591
65005585:	mov    ecx,DWORD PTR [ebp-0x24]
65005588:	push   ecx
65005589:	call   0x65011f62
6500558e:	add    esp,0x4
65005591:	push   0x65027758
65005596:	push   0x8
65005598:	push   0x65027784
6500559d:	call   0x65006a80
650055a2:	mov    esi,eax
650055a4:	mov    ecx,esi
650055a6:	add    esp,0xc
650055a9:	mov    DWORD PTR [ebp-0x10],edi
650055ac:	mov    DWORD PTR [ebp-0x14],ebx
650055af:	mov    BYTE PTR [ebp-0x24],bl
650055b2:	lea    edx,[ecx+0x1]
650055b5:	mov    al,BYTE PTR [ecx]
650055b7:	add    ecx,0x1
650055ba:	cmp    al,bl
650055bc:	jne    0x650055b5
650055be:	sub    ecx,edx
650055c0:	push   ecx
650055c1:	push   esi
650055c2:	lea    ecx,[ebp-0x28]
650055c5:	call   0x650018c0
650055ca:	lea    edx,[ebp-0x28]
650055cd:	push   edx
650055ce:	lea    eax,[ebp-0x40]
650055d1:	push   eax
650055d2:	lea    ecx,[ebp-0x34]
650055d5:	push   ecx
650055d6:	mov    BYTE PTR [ebp-0x4],0x14
650055da:	call   0x65007130
650055df:	mov    BYTE PTR [ebp-0x4],0x2
650055e3:	cmp    DWORD PTR [ebp-0x10],0x10
650055e7:	jb     0x650055f5
650055e9:	mov    edx,DWORD PTR [ebp-0x24]
650055ec:	push   edx
650055ed:	call   0x65011f62
650055f2:	add    esp,0x4
650055f5:	push   0x65027790
650055fa:	push   0x4
650055fc:	push   0x650277b4
65005601:	call   0x65006a80
65005606:	mov    esi,eax
65005608:	mov    ecx,esi
6500560a:	add    esp,0xc
6500560d:	mov    DWORD PTR [ebp-0x10],edi
65005610:	mov    DWORD PTR [ebp-0x14],ebx
65005613:	mov    BYTE PTR [ebp-0x24],bl
65005616:	lea    edx,[ecx+0x1]
65005619:	lea    esp,[esp+0x0]
65005620:	mov    al,BYTE PTR [ecx]
65005622:	add    ecx,0x1
65005625:	cmp    al,bl
65005627:	jne    0x65005620
65005629:	sub    ecx,edx
6500562b:	push   ecx
6500562c:	push   esi
6500562d:	lea    ecx,[ebp-0x28]
65005630:	call   0x650018c0
65005635:	lea    eax,[ebp-0x28]
65005638:	push   eax
65005639:	lea    ecx,[ebp-0x40]
6500563c:	push   ecx
6500563d:	lea    edx,[ebp-0x34]
65005640:	push   edx
65005641:	mov    BYTE PTR [ebp-0x4],0x15
65005645:	call   0x65007130
6500564a:	mov    BYTE PTR [ebp-0x4],0x2
6500564e:	cmp    DWORD PTR [ebp-0x10],0x10
65005652:	jb     0x65005660
65005654:	mov    eax,DWORD PTR [ebp-0x24]
65005657:	push   eax
65005658:	call   0x65011f62
6500565d:	add    esp,0x4
65005660:	push   0x650277c0
65005665:	push   0x5
65005667:	push   0x65027800
6500566c:	call   0x65006a80
65005671:	mov    ecx,eax
65005673:	add    esp,0xc
65005676:	mov    DWORD PTR [ebp-0x10],edi
65005679:	mov    DWORD PTR [ebp-0x14],ebx
6500567c:	mov    BYTE PTR [ebp-0x24],bl
6500567f:	lea    esi,[ecx+0x1]
65005682:	mov    dl,BYTE PTR [ecx]
65005684:	add    ecx,0x1
65005687:	cmp    dl,bl
65005689:	jne    0x65005682
6500568b:	sub    ecx,esi
6500568d:	push   ecx
6500568e:	push   eax
6500568f:	lea    ecx,[ebp-0x28]
65005692:	call   0x650018c0
65005697:	lea    ecx,[ebp-0x28]
6500569a:	push   ecx
6500569b:	lea    edx,[ebp-0x40]
6500569e:	push   edx
6500569f:	lea    eax,[ebp-0x34]
650056a2:	push   eax
650056a3:	mov    BYTE PTR [ebp-0x4],0x16
650056a7:	call   0x65007130
650056ac:	mov    BYTE PTR [ebp-0x4],0x2
650056b0:	cmp    DWORD PTR [ebp-0x10],0x10
650056b4:	jb     0x650056c2
650056b6:	mov    ecx,DWORD PTR [ebp-0x24]
650056b9:	push   ecx
650056ba:	call   0x65011f62
650056bf:	add    esp,0x4
650056c2:	push   0x65027808
650056c7:	push   0x5
650056c9:	push   0x65027840
650056ce:	call   0x65006a80
650056d3:	mov    ecx,eax
650056d5:	add    esp,0xc
650056d8:	mov    DWORD PTR [ebp-0x10],0xf
650056df:	mov    DWORD PTR [ebp-0x14],ebx
650056e2:	mov    BYTE PTR [ebp-0x24],bl
650056e5:	lea    esi,[ecx+0x1]
650056e8:	mov    dl,BYTE PTR [ecx]
650056ea:	add    ecx,0x1
650056ed:	cmp    dl,bl
650056ef:	jne    0x650056e8
650056f1:	sub    ecx,esi
650056f3:	push   ecx
650056f4:	push   eax
650056f5:	lea    ecx,[ebp-0x28]
650056f8:	call   0x650018c0
650056fd:	lea    edx,[ebp-0x28]
65005700:	push   edx
65005701:	lea    eax,[ebp-0x40]
65005704:	push   eax
65005705:	lea    ecx,[ebp-0x34]
65005708:	push   ecx
65005709:	mov    BYTE PTR [ebp-0x4],0x17
6500570d:	call   0x65007130
65005712:	mov    edi,0x10
65005717:	mov    BYTE PTR [ebp-0x4],0x2
6500571b:	cmp    DWORD PTR [ebp-0x10],edi
6500571e:	jb     0x6500572c
65005720:	mov    edx,DWORD PTR [ebp-0x24]
65005723:	push   edx
65005724:	call   0x65011f62
65005729:	add    esp,0x4
6500572c:	push   0x65027848
65005731:	push   0x4
65005733:	push   0x65027870
65005738:	call   0x65006a80
6500573d:	add    esp,0xc
65005740:	push   eax
65005741:	lea    ecx,[ebp-0x28]
65005744:	call   0x65002730
65005749:	lea    eax,[ebp-0x28]
6500574c:	push   eax
6500574d:	lea    ecx,[ebp-0x40]
65005750:	push   ecx
65005751:	lea    edx,[ebp-0x34]
65005754:	push   edx
65005755:	mov    BYTE PTR [ebp-0x4],0x18
65005759:	call   0x65007130
6500575e:	mov    BYTE PTR [ebp-0x4],0x2
65005762:	cmp    DWORD PTR [ebp-0x10],edi
65005765:	jb     0x65005773
65005767:	mov    eax,DWORD PTR [ebp-0x24]
6500576a:	push   eax
6500576b:	call   0x65011f62
65005770:	add    esp,0x4
65005773:	push   0x65027878
65005778:	push   0x8
6500577a:	push   0x650278a0
6500577f:	call   0x65006a80
65005784:	add    esp,0xc
65005787:	push   eax
65005788:	lea    ecx,[ebp-0x28]
6500578b:	call   0x65002730
65005790:	lea    ecx,[ebp-0x28]
65005793:	push   ecx
65005794:	lea    edx,[ebp-0x40]
65005797:	push   edx
65005798:	lea    eax,[ebp-0x34]
6500579b:	push   eax
6500579c:	mov    BYTE PTR [ebp-0x4],0x19
650057a0:	call   0x65007130
650057a5:	mov    BYTE PTR [ebp-0x4],0x2
650057a9:	cmp    DWORD PTR [ebp-0x10],edi
650057ac:	jb     0x650057ba
650057ae:	mov    ecx,DWORD PTR [ebp-0x24]
650057b1:	push   ecx
650057b2:	call   0x65011f62
650057b7:	add    esp,0x4
650057ba:	push   0x650278ac
650057bf:	push   0x6
650057c1:	push   0x650278d8
650057c6:	call   0x65006a80
650057cb:	add    esp,0xc
650057ce:	push   eax
650057cf:	lea    ecx,[ebp-0x28]
650057d2:	call   0x65002730
650057d7:	lea    edx,[ebp-0x28]
650057da:	push   edx
650057db:	lea    eax,[ebp-0x40]
650057de:	push   eax
650057df:	lea    ecx,[ebp-0x34]
650057e2:	push   ecx
650057e3:	mov    BYTE PTR [ebp-0x4],0x1a
650057e7:	call   0x65007130
650057ec:	mov    BYTE PTR [ebp-0x4],0x2
650057f0:	cmp    DWORD PTR [ebp-0x10],edi
650057f3:	jb     0x65005801
650057f5:	mov    edx,DWORD PTR [ebp-0x24]
650057f8:	push   edx
650057f9:	call   0x65011f62
650057fe:	add    esp,0x4
65005801:	push   0x650278e0
65005806:	push   0x8
65005808:	push   0x65027904
6500580d:	call   0x65006a80
65005812:	add    esp,0xc
65005815:	push   eax
65005816:	lea    ecx,[ebp-0x28]
65005819:	call   0x65002730
6500581e:	lea    eax,[ebp-0x28]
65005821:	push   eax
65005822:	lea    ecx,[ebp-0x40]
65005825:	push   ecx
65005826:	lea    edx,[ebp-0x34]
65005829:	push   edx
6500582a:	mov    BYTE PTR [ebp-0x4],0x1b
6500582e:	call   0x65007130
65005833:	mov    BYTE PTR [ebp-0x4],0x2
65005837:	cmp    DWORD PTR [ebp-0x10],edi
6500583a:	jb     0x65005848
6500583c:	mov    eax,DWORD PTR [ebp-0x24]
6500583f:	push   eax
65005840:	call   0x65011f62
65005845:	add    esp,0x4
65005848:	push   0x65027910
6500584d:	push   0x6
6500584f:	push   0x65027944
65005854:	call   0x65006a80
65005859:	add    esp,0xc
6500585c:	push   eax
6500585d:	lea    ecx,[ebp-0x28]
65005860:	call   0x65002730
65005865:	lea    ecx,[ebp-0x28]
65005868:	push   ecx
65005869:	lea    edx,[ebp-0x40]
6500586c:	push   edx
6500586d:	lea    eax,[ebp-0x34]
65005870:	push   eax
65005871:	mov    BYTE PTR [ebp-0x4],0x1c
65005875:	call   0x65007130
6500587a:	mov    BYTE PTR [ebp-0x4],0x2
6500587e:	cmp    DWORD PTR [ebp-0x10],edi
65005881:	jb     0x6500588f
65005883:	mov    ecx,DWORD PTR [ebp-0x24]
65005886:	push   ecx
65005887:	call   0x65011f62
6500588c:	add    esp,0x4
6500588f:	push   0x6502794c
65005894:	push   0x7
65005896:	push   0x65027984
6500589b:	call   0x65006a80
650058a0:	add    esp,0xc
650058a3:	push   eax
650058a4:	lea    ecx,[ebp-0x28]
650058a7:	call   0x65002730
650058ac:	lea    edx,[ebp-0x28]
650058af:	push   edx
650058b0:	lea    eax,[ebp-0x40]
650058b3:	push   eax
650058b4:	lea    ecx,[ebp-0x34]
650058b7:	push   ecx
650058b8:	mov    BYTE PTR [ebp-0x4],0x1d
650058bc:	call   0x65007130
650058c1:	mov    BYTE PTR [ebp-0x4],0x2
650058c5:	cmp    DWORD PTR [ebp-0x10],edi
650058c8:	jb     0x650058d6
650058ca:	mov    edx,DWORD PTR [ebp-0x24]
650058cd:	push   edx
650058ce:	call   0x65011f62
650058d3:	add    esp,0x4
650058d6:	push   0x6502798c
650058db:	push   0x5
650058dd:	push   0x650279b0
650058e2:	call   0x65006a80
650058e7:	add    esp,0xc
650058ea:	push   eax
650058eb:	lea    ecx,[ebp-0x28]
650058ee:	call   0x65002730
650058f3:	lea    eax,[ebp-0x28]
650058f6:	push   eax
650058f7:	lea    ecx,[ebp-0x40]
650058fa:	push   ecx
650058fb:	lea    edx,[ebp-0x34]
650058fe:	push   edx
650058ff:	mov    BYTE PTR [ebp-0x4],0x1e
65005903:	call   0x65007130
65005908:	mov    BYTE PTR [ebp-0x4],0x2
6500590c:	cmp    DWORD PTR [ebp-0x10],edi
6500590f:	jb     0x6500591d
65005911:	mov    eax,DWORD PTR [ebp-0x24]
65005914:	push   eax
65005915:	call   0x65011f62
6500591a:	add    esp,0x4
6500591d:	push   0x650279b8
65005922:	push   0x5
65005924:	push   0x650279ec
65005929:	call   0x65006a80
6500592e:	add    esp,0xc
65005931:	push   eax
65005932:	lea    ecx,[ebp-0x28]
65005935:	call   0x65002730
6500593a:	lea    ecx,[ebp-0x28]
6500593d:	push   ecx
6500593e:	lea    edx,[ebp-0x40]
65005941:	push   edx
65005942:	lea    eax,[ebp-0x34]
65005945:	push   eax
65005946:	mov    BYTE PTR [ebp-0x4],0x1f
6500594a:	call   0x65007130
6500594f:	mov    BYTE PTR [ebp-0x4],0x2
65005953:	cmp    DWORD PTR [ebp-0x10],edi
65005956:	jb     0x65005964
65005958:	mov    ecx,DWORD PTR [ebp-0x24]
6500595b:	push   ecx
6500595c:	call   0x65011f62
65005961:	add    esp,0x4
65005964:	push   0x650279f4
65005969:	push   0x7
6500596b:	push   0x65027a24
65005970:	call   0x65006a80
65005975:	add    esp,0xc
65005978:	push   eax
65005979:	lea    ecx,[ebp-0x28]
6500597c:	call   0x65002730
65005981:	lea    edx,[ebp-0x28]
65005984:	push   edx
65005985:	lea    eax,[ebp-0x40]
65005988:	push   eax
65005989:	lea    ecx,[ebp-0x34]
6500598c:	push   ecx
6500598d:	mov    BYTE PTR [ebp-0x4],0x20
65005991:	call   0x65007130
65005996:	mov    BYTE PTR [ebp-0x4],0x2
6500599a:	cmp    DWORD PTR [ebp-0x10],edi
6500599d:	jb     0x650059ab
6500599f:	mov    edx,DWORD PTR [ebp-0x24]
650059a2:	push   edx
650059a3:	call   0x65011f62
650059a8:	add    esp,0x4
650059ab:	push   0x65027a2c
650059b0:	push   0x6
650059b2:	push   0x65027a54
650059b7:	call   0x65006a80
650059bc:	add    esp,0xc
650059bf:	push   eax
650059c0:	lea    ecx,[ebp-0x28]
650059c3:	call   0x65002730
650059c8:	lea    eax,[ebp-0x28]
650059cb:	push   eax
650059cc:	lea    ecx,[ebp-0x40]
650059cf:	push   ecx
650059d0:	lea    edx,[ebp-0x34]
650059d3:	push   edx
650059d4:	mov    BYTE PTR [ebp-0x4],0x21
650059d8:	call   0x65007130
650059dd:	mov    BYTE PTR [ebp-0x4],0x2
650059e1:	cmp    DWORD PTR [ebp-0x10],edi
650059e4:	jb     0x650059f2
650059e6:	mov    eax,DWORD PTR [ebp-0x24]
650059e9:	push   eax
650059ea:	call   0x65011f62
650059ef:	add    esp,0x4
650059f2:	push   0x65027a5c
650059f7:	push   0xe
650059f9:	push   0x65027a90
650059fe:	call   0x65006a80
65005a03:	add    esp,0xc
65005a06:	push   eax
65005a07:	lea    ecx,[ebp-0x28]
65005a0a:	call   0x65002730
65005a0f:	lea    ecx,[ebp-0x28]
65005a12:	push   ecx
65005a13:	lea    edx,[ebp-0x40]
65005a16:	push   edx
65005a17:	lea    eax,[ebp-0x34]
65005a1a:	push   eax
65005a1b:	mov    BYTE PTR [ebp-0x4],0x22
65005a1f:	call   0x65007130
65005a24:	mov    BYTE PTR [ebp-0x4],0x2
65005a28:	cmp    DWORD PTR [ebp-0x10],edi
65005a2b:	jb     0x65005a39
65005a2d:	mov    ecx,DWORD PTR [ebp-0x24]
65005a30:	push   ecx
65005a31:	call   0x65011f62
65005a36:	add    esp,0x4
65005a39:	push   0x65027aa0
65005a3e:	push   0x12
65005a40:	push   0x65027ae0
65005a45:	call   0x65006a80
65005a4a:	add    esp,0xc
65005a4d:	push   eax
65005a4e:	lea    ecx,[ebp-0x28]
65005a51:	call   0x65002730
65005a56:	lea    edx,[ebp-0x28]
65005a59:	push   edx
65005a5a:	lea    eax,[ebp-0x40]
65005a5d:	push   eax
65005a5e:	lea    ecx,[ebp-0x34]
65005a61:	push   ecx
65005a62:	mov    BYTE PTR [ebp-0x4],0x23
65005a66:	call   0x65007130
65005a6b:	mov    BYTE PTR [ebp-0x4],0x2
65005a6f:	cmp    DWORD PTR [ebp-0x10],edi
65005a72:	jb     0x65005a80
65005a74:	mov    edx,DWORD PTR [ebp-0x24]
65005a77:	push   edx
65005a78:	call   0x65011f62
65005a7d:	add    esp,0x4
65005a80:	push   0x65027af4
65005a85:	push   0x17
65005a87:	push   0x65027b1c
65005a8c:	call   0x65006a80
65005a91:	add    esp,0xc
65005a94:	push   eax
65005a95:	lea    ecx,[ebp-0x28]
65005a98:	call   0x65002730
65005a9d:	lea    eax,[ebp-0x28]
65005aa0:	push   eax
65005aa1:	lea    ecx,[ebp-0x40]
65005aa4:	push   ecx
65005aa5:	lea    edx,[ebp-0x34]
65005aa8:	push   edx
65005aa9:	mov    BYTE PTR [ebp-0x4],0x24
65005aad:	call   0x65007130
65005ab2:	mov    BYTE PTR [ebp-0x4],0x2
65005ab6:	cmp    DWORD PTR [ebp-0x10],edi
65005ab9:	jb     0x65005ac7
65005abb:	mov    eax,DWORD PTR [ebp-0x24]
65005abe:	push   eax
65005abf:	call   0x65011f62
65005ac4:	add    esp,0x4
65005ac7:	push   0x65027b34
65005acc:	push   0x11
65005ace:	push   0x65027b60
65005ad3:	call   0x65006a80
65005ad8:	add    esp,0xc
65005adb:	push   eax
65005adc:	lea    ecx,[ebp-0x28]
65005adf:	call   0x65002730
65005ae4:	lea    ecx,[ebp-0x28]
65005ae7:	push   ecx
65005ae8:	lea    edx,[ebp-0x40]
65005aeb:	push   edx
65005aec:	lea    eax,[ebp-0x34]
65005aef:	push   eax
65005af0:	mov    BYTE PTR [ebp-0x4],0x25
65005af4:	call   0x65007130
65005af9:	mov    BYTE PTR [ebp-0x4],0x2
65005afd:	cmp    DWORD PTR [ebp-0x10],edi
65005b00:	jb     0x65005b0e
65005b02:	mov    ecx,DWORD PTR [ebp-0x24]
65005b05:	push   ecx
65005b06:	call   0x65011f62
65005b0b:	add    esp,0x4
65005b0e:	push   0x65027b74
65005b13:	push   0x8
65005b15:	push   0x65027b9c
65005b1a:	call   0x65006a80
65005b1f:	add    esp,0xc
65005b22:	push   eax
65005b23:	lea    ecx,[ebp-0x28]
65005b26:	call   0x65002730
65005b2b:	lea    edx,[ebp-0x28]
65005b2e:	push   edx
65005b2f:	lea    eax,[ebp-0x40]
65005b32:	push   eax
65005b33:	lea    ecx,[ebp-0x34]
65005b36:	push   ecx
65005b37:	mov    BYTE PTR [ebp-0x4],0x26
65005b3b:	call   0x65007130
65005b40:	mov    BYTE PTR [ebp-0x4],0x2
65005b44:	cmp    DWORD PTR [ebp-0x10],edi
65005b47:	jb     0x65005b55
65005b49:	mov    edx,DWORD PTR [ebp-0x24]
65005b4c:	push   edx
65005b4d:	call   0x65011f62
65005b52:	add    esp,0x4
65005b55:	push   0x65027ba8
65005b5a:	push   0x6
65005b5c:	push   0x65027be4
65005b61:	call   0x65006a80
65005b66:	add    esp,0xc
65005b69:	push   eax
65005b6a:	lea    ecx,[ebp-0x28]
65005b6d:	call   0x65002730
65005b72:	lea    eax,[ebp-0x28]
65005b75:	push   eax
65005b76:	lea    ecx,[ebp-0x40]
65005b79:	push   ecx
65005b7a:	lea    edx,[ebp-0x34]
65005b7d:	push   edx
65005b7e:	mov    BYTE PTR [ebp-0x4],0x27
65005b82:	call   0x65007130
65005b87:	mov    BYTE PTR [ebp-0x4],0x2
65005b8b:	cmp    DWORD PTR [ebp-0x10],edi
65005b8e:	jb     0x65005b9c
65005b90:	mov    eax,DWORD PTR [ebp-0x24]
65005b93:	push   eax
65005b94:	call   0x65011f62
65005b99:	add    esp,0x4
65005b9c:	push   0x65027bec
65005ba1:	push   0x6
65005ba3:	push   0x65027c10
65005ba8:	call   0x65006a80
65005bad:	add    esp,0xc
65005bb0:	push   eax
65005bb1:	lea    ecx,[ebp-0x28]
65005bb4:	call   0x65002730
65005bb9:	lea    ecx,[ebp-0x28]
65005bbc:	push   ecx
65005bbd:	lea    edx,[ebp-0x40]
65005bc0:	push   edx
65005bc1:	lea    eax,[ebp-0x34]
65005bc4:	push   eax
65005bc5:	mov    BYTE PTR [ebp-0x4],0x28
65005bc9:	call   0x65007130
65005bce:	mov    BYTE PTR [ebp-0x4],0x2
65005bd2:	cmp    DWORD PTR [ebp-0x10],edi
65005bd5:	jb     0x65005be3
65005bd7:	mov    ecx,DWORD PTR [ebp-0x24]
65005bda:	push   ecx
65005bdb:	call   0x65011f62
65005be0:	add    esp,0x4
65005be3:	push   0x65027c18
65005be8:	push   0x8
65005bea:	push   0x65027c48
65005bef:	call   0x65006a80
65005bf4:	add    esp,0xc
65005bf7:	push   eax
65005bf8:	lea    ecx,[ebp-0x28]
65005bfb:	call   0x65002730
65005c00:	lea    edx,[ebp-0x28]
65005c03:	push   edx
65005c04:	lea    eax,[ebp-0x40]
65005c07:	push   eax
65005c08:	lea    ecx,[ebp-0x34]
65005c0b:	push   ecx
65005c0c:	mov    BYTE PTR [ebp-0x4],0x29
65005c10:	call   0x65007130
65005c15:	mov    BYTE PTR [ebp-0x4],0x2
65005c19:	cmp    DWORD PTR [ebp-0x10],edi
65005c1c:	jb     0x65005c2a
65005c1e:	mov    edx,DWORD PTR [ebp-0x24]
65005c21:	push   edx
65005c22:	call   0x65011f62
65005c27:	add    esp,0x4
65005c2a:	push   0x65027c54
65005c2f:	push   0x6
65005c31:	push   0x65027c7c
65005c36:	call   0x65006a80
65005c3b:	add    esp,0xc
65005c3e:	push   eax
65005c3f:	lea    ecx,[ebp-0x28]
65005c42:	call   0x65002730
65005c47:	lea    eax,[ebp-0x28]
65005c4a:	push   eax
65005c4b:	lea    ecx,[ebp-0x40]
65005c4e:	push   ecx
65005c4f:	lea    edx,[ebp-0x34]
65005c52:	push   edx
65005c53:	mov    BYTE PTR [ebp-0x4],0x2a
65005c57:	call   0x65007130
65005c5c:	mov    BYTE PTR [ebp-0x4],0x2
65005c60:	cmp    DWORD PTR [ebp-0x10],edi
65005c63:	jb     0x65005c71
65005c65:	mov    eax,DWORD PTR [ebp-0x24]
65005c68:	push   eax
65005c69:	call   0x65011f62
65005c6e:	add    esp,0x4
65005c71:	push   0x65027c84
65005c76:	push   0x7
65005c78:	push   0x65027cb4
65005c7d:	call   0x65006a80
65005c82:	add    esp,0xc
65005c85:	push   eax
65005c86:	lea    ecx,[ebp-0x28]
65005c89:	call   0x65002730
65005c8e:	lea    ecx,[ebp-0x28]
65005c91:	push   ecx
65005c92:	lea    edx,[ebp-0x40]
65005c95:	push   edx
65005c96:	lea    eax,[ebp-0x34]
65005c99:	push   eax
65005c9a:	mov    BYTE PTR [ebp-0x4],0x2b
65005c9e:	call   0x65007130
65005ca3:	mov    BYTE PTR [ebp-0x4],0x2
65005ca7:	cmp    DWORD PTR [ebp-0x10],edi
65005caa:	jb     0x65005cb8
65005cac:	mov    ecx,DWORD PTR [ebp-0x24]
65005caf:	push   ecx
65005cb0:	call   0x65011f62
65005cb5:	add    esp,0x4
65005cb8:	push   0x65027cbc
65005cbd:	push   0x6
65005cbf:	push   0x65027cec
65005cc4:	call   0x65006a80
65005cc9:	add    esp,0xc
65005ccc:	push   eax
65005ccd:	lea    ecx,[ebp-0x28]
65005cd0:	call   0x65002730
65005cd5:	lea    edx,[ebp-0x28]
65005cd8:	push   edx
65005cd9:	lea    eax,[ebp-0x40]
65005cdc:	push   eax
65005cdd:	lea    ecx,[ebp-0x34]
65005ce0:	push   ecx
65005ce1:	mov    BYTE PTR [ebp-0x4],0x2c
65005ce5:	call   0x65007130
65005cea:	mov    BYTE PTR [ebp-0x4],0x2
65005cee:	cmp    DWORD PTR [ebp-0x10],edi
65005cf1:	jb     0x65005cff
65005cf3:	mov    edx,DWORD PTR [ebp-0x24]
65005cf6:	push   edx
65005cf7:	call   0x65011f62
65005cfc:	add    esp,0x4
65005cff:	push   0x65027cf4
65005d04:	push   0x6
65005d06:	push   0x65027d24
65005d0b:	call   0x65006a80
65005d10:	add    esp,0xc
65005d13:	push   eax
65005d14:	lea    ecx,[ebp-0x28]
65005d17:	call   0x65002730
65005d1c:	lea    eax,[ebp-0x28]
65005d1f:	push   eax
65005d20:	lea    ecx,[ebp-0x40]
65005d23:	push   ecx
65005d24:	lea    edx,[ebp-0x34]
65005d27:	push   edx
65005d28:	mov    BYTE PTR [ebp-0x4],0x2d
65005d2c:	call   0x65007130
65005d31:	mov    BYTE PTR [ebp-0x4],0x2
65005d35:	cmp    DWORD PTR [ebp-0x10],edi
65005d38:	jb     0x65005d46
65005d3a:	mov    eax,DWORD PTR [ebp-0x24]
65005d3d:	push   eax
65005d3e:	call   0x65011f62
65005d43:	add    esp,0x4
65005d46:	push   0x65027d2c
65005d4b:	push   0x5
65005d4d:	push   0x65027d58
65005d52:	call   0x65006a80
65005d57:	add    esp,0xc
65005d5a:	push   eax
65005d5b:	lea    ecx,[ebp-0x28]
65005d5e:	call   0x65002730
65005d63:	lea    ecx,[ebp-0x28]
65005d66:	push   ecx
65005d67:	lea    edx,[ebp-0x40]
65005d6a:	push   edx
65005d6b:	lea    eax,[ebp-0x34]
65005d6e:	push   eax
65005d6f:	mov    BYTE PTR [ebp-0x4],0x2e
65005d73:	call   0x65007130
65005d78:	mov    BYTE PTR [ebp-0x4],0x2
65005d7c:	cmp    DWORD PTR [ebp-0x10],edi
65005d7f:	jb     0x65005d8d
65005d81:	mov    ecx,DWORD PTR [ebp-0x24]
65005d84:	push   ecx
65005d85:	call   0x65011f62
65005d8a:	add    esp,0x4
65005d8d:	push   0x65027d60
65005d92:	push   0x6
65005d94:	push   0x65027d9c
65005d99:	call   0x65006a80
65005d9e:	add    esp,0xc
65005da1:	push   eax
65005da2:	lea    ecx,[ebp-0x28]
65005da5:	call   0x65002730
65005daa:	lea    edx,[ebp-0x28]
65005dad:	push   edx
65005dae:	lea    eax,[ebp-0x40]
65005db1:	push   eax
65005db2:	lea    ecx,[ebp-0x34]
65005db5:	push   ecx
65005db6:	mov    BYTE PTR [ebp-0x4],0x2f
65005dba:	call   0x65007130
65005dbf:	mov    BYTE PTR [ebp-0x4],0x2
65005dc3:	cmp    DWORD PTR [ebp-0x10],edi
65005dc6:	jb     0x65005dd4
65005dc8:	mov    edx,DWORD PTR [ebp-0x24]
65005dcb:	push   edx
65005dcc:	call   0x65011f62
65005dd1:	add    esp,0x4
65005dd4:	push   0x65027da4
65005dd9:	push   0xa
65005ddb:	push   0x65027ddc
65005de0:	call   0x65006a80
65005de5:	add    esp,0xc
65005de8:	push   eax
65005de9:	lea    ecx,[ebp-0x28]
65005dec:	call   0x65002730
65005df1:	lea    eax,[ebp-0x28]
65005df4:	push   eax
65005df5:	lea    ecx,[ebp-0x40]
65005df8:	push   ecx
65005df9:	lea    edx,[ebp-0x34]
65005dfc:	push   edx
65005dfd:	mov    BYTE PTR [ebp-0x4],0x30
65005e01:	call   0x65007130
65005e06:	mov    BYTE PTR [ebp-0x4],0x2
65005e0a:	cmp    DWORD PTR [ebp-0x10],edi
65005e0d:	jb     0x65005e1b
65005e0f:	mov    eax,DWORD PTR [ebp-0x24]
65005e12:	push   eax
65005e13:	call   0x65011f62
65005e18:	add    esp,0x4
65005e1b:	push   0x65027de8
65005e20:	push   0xf
65005e22:	push   0x65027e1c
65005e27:	call   0x65006a80
65005e2c:	add    esp,0xc
65005e2f:	push   eax
65005e30:	lea    ecx,[ebp-0x28]
65005e33:	call   0x65002730
65005e38:	lea    ecx,[ebp-0x28]
65005e3b:	push   ecx
65005e3c:	lea    edx,[ebp-0x40]
65005e3f:	push   edx
65005e40:	lea    eax,[ebp-0x34]
65005e43:	push   eax
65005e44:	mov    BYTE PTR [ebp-0x4],0x31
65005e48:	call   0x65007130
65005e4d:	mov    BYTE PTR [ebp-0x4],0x2
65005e51:	cmp    DWORD PTR [ebp-0x10],edi
65005e54:	jb     0x65005e62
65005e56:	mov    ecx,DWORD PTR [ebp-0x24]
65005e59:	push   ecx
65005e5a:	call   0x65011f62
65005e5f:	add    esp,0x4
65005e62:	push   0x65027e2c
65005e67:	push   0xa
65005e69:	push   0x65027e64
65005e6e:	call   0x65006a80
65005e73:	add    esp,0xc
65005e76:	push   eax
65005e77:	lea    ecx,[ebp-0x28]
65005e7a:	call   0x65002730
65005e7f:	lea    edx,[ebp-0x28]
65005e82:	push   edx
65005e83:	lea    eax,[ebp-0x40]
65005e86:	push   eax
65005e87:	lea    ecx,[ebp-0x34]
65005e8a:	push   ecx
65005e8b:	mov    BYTE PTR [ebp-0x4],0x32
65005e8f:	call   0x65007130
65005e94:	mov    BYTE PTR [ebp-0x4],0x2
65005e98:	cmp    DWORD PTR [ebp-0x10],edi
65005e9b:	jb     0x65005ea9
65005e9d:	mov    edx,DWORD PTR [ebp-0x24]
65005ea0:	push   edx
65005ea1:	call   0x65011f62
65005ea6:	add    esp,0x4
65005ea9:	push   0x65027e70
65005eae:	push   0xb
65005eb0:	push   0x65027eb0
65005eb5:	call   0x65006a80
65005eba:	add    esp,0xc
65005ebd:	push   eax
65005ebe:	lea    ecx,[ebp-0x28]
65005ec1:	call   0x65002730
65005ec6:	lea    eax,[ebp-0x28]
65005ec9:	push   eax
65005eca:	lea    ecx,[ebp-0x40]
65005ecd:	push   ecx
65005ece:	lea    edx,[ebp-0x34]
65005ed1:	push   edx
65005ed2:	mov    BYTE PTR [ebp-0x4],0x33
65005ed6:	call   0x65007130
65005edb:	mov    BYTE PTR [ebp-0x4],0x2
65005edf:	cmp    DWORD PTR [ebp-0x10],edi
65005ee2:	jb     0x65005ef0
65005ee4:	mov    eax,DWORD PTR [ebp-0x24]
65005ee7:	push   eax
65005ee8:	call   0x65011f62
65005eed:	add    esp,0x4
65005ef0:	push   0x65027ebc
65005ef5:	push   0x1e
65005ef7:	push   0x65027ee0
65005efc:	call   0x65006a80
65005f01:	add    esp,0xc
65005f04:	push   eax
65005f05:	lea    ecx,[ebp-0x28]
65005f08:	call   0x65002730
65005f0d:	lea    ecx,[ebp-0x28]
65005f10:	push   ecx
65005f11:	lea    edx,[ebp-0x40]
65005f14:	push   edx
65005f15:	lea    eax,[ebp-0x34]
65005f18:	push   eax
65005f19:	mov    BYTE PTR [ebp-0x4],0x34
65005f1d:	call   0x65007130
65005f22:	mov    BYTE PTR [ebp-0x4],0x2
65005f26:	cmp    DWORD PTR [ebp-0x10],edi
65005f29:	jb     0x65005f37
65005f2b:	mov    ecx,DWORD PTR [ebp-0x24]
65005f2e:	push   ecx
65005f2f:	call   0x65011f62
65005f34:	add    esp,0x4
65005f37:	push   0x65027f00
65005f3c:	push   0x16
65005f3e:	push   0x65027f34
65005f43:	call   0x65006a80
65005f48:	add    esp,0xc
65005f4b:	push   eax
65005f4c:	lea    ecx,[ebp-0x28]
65005f4f:	call   0x65002730
65005f54:	lea    edx,[ebp-0x28]
65005f57:	push   edx
65005f58:	lea    eax,[ebp-0x40]
65005f5b:	push   eax
65005f5c:	lea    ecx,[ebp-0x34]
65005f5f:	push   ecx
65005f60:	mov    BYTE PTR [ebp-0x4],0x35
65005f64:	call   0x65007130
65005f69:	mov    BYTE PTR [ebp-0x4],0x2
65005f6d:	cmp    DWORD PTR [ebp-0x10],edi
65005f70:	jb     0x65005f7e
65005f72:	mov    edx,DWORD PTR [ebp-0x24]
65005f75:	push   edx
65005f76:	call   0x65011f62
65005f7b:	add    esp,0x4
65005f7e:	push   0x65027f4c
65005f83:	push   0x19
65005f85:	push   0x65027f74
65005f8a:	call   0x65006a80
65005f8f:	add    esp,0xc
65005f92:	push   eax
65005f93:	lea    ecx,[ebp-0x28]
65005f96:	call   0x65002730
65005f9b:	lea    eax,[ebp-0x28]
65005f9e:	push   eax
65005f9f:	lea    ecx,[ebp-0x40]
65005fa2:	push   ecx
65005fa3:	lea    edx,[ebp-0x34]
65005fa6:	push   edx
65005fa7:	mov    BYTE PTR [ebp-0x4],0x36
65005fab:	call   0x65007130
65005fb0:	mov    BYTE PTR [ebp-0x4],0x2
65005fb4:	cmp    DWORD PTR [ebp-0x10],edi
65005fb7:	jb     0x65005fc5
65005fb9:	mov    eax,DWORD PTR [ebp-0x24]
65005fbc:	push   eax
65005fbd:	call   0x65011f62
65005fc2:	add    esp,0x4
65005fc5:	push   0x65027f90
65005fca:	push   0x7
65005fcc:	push   0x65027fb4
65005fd1:	call   0x65006a80
65005fd6:	add    esp,0xc
65005fd9:	push   eax
65005fda:	lea    ecx,[ebp-0x28]
65005fdd:	call   0x65002730
65005fe2:	lea    ecx,[ebp-0x28]
65005fe5:	push   ecx
65005fe6:	lea    edx,[ebp-0x40]
65005fe9:	push   edx
65005fea:	lea    eax,[ebp-0x34]
65005fed:	push   eax
65005fee:	mov    BYTE PTR [ebp-0x4],0x37
65005ff2:	call   0x65007130
65005ff7:	mov    BYTE PTR [ebp-0x4],0x2
65005ffb:	cmp    DWORD PTR [ebp-0x10],edi
65005ffe:	jb     0x6500600c
65006000:	mov    ecx,DWORD PTR [ebp-0x24]
65006003:	push   ecx
65006004:	call   0x65011f62
65006009:	add    esp,0x4
6500600c:	push   0x65027fbc
65006011:	push   0x5
65006013:	push   0x65027fe4
65006018:	call   0x65006a80
6500601d:	add    esp,0xc
65006020:	push   eax
65006021:	lea    ecx,[ebp-0x28]
65006024:	call   0x65002730
65006029:	lea    edx,[ebp-0x28]
6500602c:	push   edx
6500602d:	lea    eax,[ebp-0x40]
65006030:	push   eax
65006031:	lea    ecx,[ebp-0x34]
65006034:	push   ecx
65006035:	mov    BYTE PTR [ebp-0x4],0x38
65006039:	call   0x65007130
6500603e:	mov    BYTE PTR [ebp-0x4],0x2
65006042:	cmp    DWORD PTR [ebp-0x10],edi
65006045:	jb     0x65006053
65006047:	mov    edx,DWORD PTR [ebp-0x24]
6500604a:	push   edx
6500604b:	call   0x65011f62
65006050:	add    esp,0x4
65006053:	push   0x65027fec
65006058:	push   0xb
6500605a:	push   0x65028020
6500605f:	call   0x65006a80
65006064:	add    esp,0xc
65006067:	push   eax
65006068:	lea    ecx,[ebp-0x28]
6500606b:	call   0x65002730
65006070:	lea    eax,[ebp-0x28]
65006073:	push   eax
65006074:	lea    ecx,[ebp-0x40]
65006077:	push   ecx
65006078:	lea    edx,[ebp-0x34]
6500607b:	push   edx
6500607c:	mov    BYTE PTR [ebp-0x4],0x39
65006080:	call   0x65007130
65006085:	mov    BYTE PTR [ebp-0x4],0x2
65006089:	cmp    DWORD PTR [ebp-0x10],edi
6500608c:	jb     0x6500609a
6500608e:	mov    eax,DWORD PTR [ebp-0x24]
65006091:	push   eax
65006092:	call   0x65011f62
65006097:	add    esp,0x4
6500609a:	push   0x6502802c
6500609f:	push   0xc
650060a1:	push   0x65028064
650060a6:	call   0x65006a80
650060ab:	add    esp,0xc
650060ae:	push   eax
650060af:	lea    ecx,[ebp-0x28]
650060b2:	call   0x65002730
650060b7:	lea    ecx,[ebp-0x28]
650060ba:	push   ecx
650060bb:	lea    edx,[ebp-0x40]
650060be:	push   edx
650060bf:	lea    eax,[ebp-0x34]
650060c2:	push   eax
650060c3:	mov    BYTE PTR [ebp-0x4],0x3a
650060c7:	call   0x65007130
650060cc:	mov    BYTE PTR [ebp-0x4],0x2
650060d0:	cmp    DWORD PTR [ebp-0x10],edi
650060d3:	jb     0x650060e1
650060d5:	mov    ecx,DWORD PTR [ebp-0x24]
650060d8:	push   ecx
650060d9:	call   0x65011f62
650060de:	add    esp,0x4
650060e1:	push   0x65028074
650060e6:	push   0x8
650060e8:	push   0x6502809c
650060ed:	call   0x65006a80
650060f2:	add    esp,0xc
650060f5:	push   eax
650060f6:	lea    ecx,[ebp-0x28]
650060f9:	call   0x65002730
650060fe:	lea    edx,[ebp-0x28]
65006101:	push   edx
65006102:	lea    eax,[ebp-0x40]
65006105:	push   eax
65006106:	lea    ecx,[ebp-0x34]
65006109:	push   ecx
6500610a:	mov    BYTE PTR [ebp-0x4],0x3b
6500610e:	call   0x65007130
65006113:	mov    BYTE PTR [ebp-0x4],0x2
65006117:	cmp    DWORD PTR [ebp-0x10],edi
6500611a:	jb     0x65006128
6500611c:	mov    edx,DWORD PTR [ebp-0x24]
6500611f:	push   edx
65006120:	call   0x65011f62
65006125:	add    esp,0x4
65006128:	push   0x650280a8
6500612d:	push   0xc
6500612f:	push   0x650280d0
65006134:	call   0x65006a80
65006139:	add    esp,0xc
6500613c:	push   eax
6500613d:	lea    ecx,[ebp-0x28]
65006140:	call   0x65002730
65006145:	lea    eax,[ebp-0x28]
65006148:	push   eax
65006149:	lea    ecx,[ebp-0x40]
6500614c:	push   ecx
6500614d:	lea    edx,[ebp-0x34]
65006150:	push   edx
65006151:	mov    BYTE PTR [ebp-0x4],0x3c
65006155:	call   0x65007130
6500615a:	mov    BYTE PTR [ebp-0x4],0x2
6500615e:	cmp    DWORD PTR [ebp-0x10],edi
65006161:	jb     0x6500616f
65006163:	mov    eax,DWORD PTR [ebp-0x24]
65006166:	push   eax
65006167:	call   0x65011f62
6500616c:	add    esp,0x4
6500616f:	push   0x650280e0
65006174:	push   0xa
65006176:	push   0x65028114
6500617b:	call   0x65006a80
65006180:	add    esp,0xc
65006183:	push   eax
65006184:	lea    ecx,[ebp-0x28]
65006187:	call   0x65002730
6500618c:	lea    ecx,[ebp-0x28]
6500618f:	push   ecx
65006190:	lea    edx,[ebp-0x40]
65006193:	push   edx
65006194:	lea    eax,[ebp-0x34]
65006197:	push   eax
65006198:	mov    BYTE PTR [ebp-0x4],0x3d
6500619c:	call   0x65007130
650061a1:	mov    BYTE PTR [ebp-0x4],0x2
650061a5:	cmp    DWORD PTR [ebp-0x10],edi
650061a8:	jb     0x650061b6
650061aa:	mov    ecx,DWORD PTR [ebp-0x24]
650061ad:	push   ecx
650061ae:	call   0x65011f62
650061b3:	add    esp,0x4
650061b6:	lea    edx,[ebp-0x40]
650061b9:	push   edx
650061ba:	lea    ecx,[ebp-0x34]
650061bd:	call   0x65003c10
650061c2:	add    esp,0x4
650061c5:	mov    ecx,0x650303e0
650061ca:	mov    BYTE PTR [ebp-0x4],0x3e
650061ce:	call   0x650070f0
650061d3:	lea    eax,[ebp-0x40]
650061d6:	mov    BYTE PTR [ebp-0x4],0x2
650061da:	call   0x65007b10
650061df:	lea    eax,[ebp-0x34]
650061e2:	mov    BYTE PTR [ebp-0x4],bl
650061e5:	call   0x65007b10
650061ea:	call   DWORD PTR ds:0x6502c06c
650061f0:	mov    DWORD PTR [ebp-0x48],eax
650061f3:	mov    eax,DWORD PTR [ebp+0x40c]
650061f9:	cmp    DWORD PTR [eax-0x4],0x1
650061fd:	jle    0x65006214
650061ff:	mov    eax,DWORD PTR [eax-0xc]
65006202:	push   eax
65006203:	lea    ecx,[ebp+0x40c]
65006209:	call   0x650019b0
6500620e:	mov    eax,DWORD PTR [ebp+0x40c]
65006214:	cmp    eax,ebx
65006216:	jne    0x6500621c
65006218:	xor    eax,eax
6500621a:	jmp    0x6500624f
6500621c:	push   eax
6500621d:	call   DWORD PTR ds:0x65024050
65006223:	add    eax,0x1
65006226:	cmp    eax,0x3fffffff
6500622b:	jle    0x65006231
6500622d:	xor    eax,eax
6500622f:	jmp    0x6500624f
65006231:	lea    esi,[eax+eax*1]
65006234:	mov    eax,esi
65006236:	call   0x65012ec0
6500623b:	mov    ecx,DWORD PTR [ebp-0x48]
6500623e:	mov    edx,DWORD PTR [ebp+0x40c]
65006244:	mov    eax,esp
65006246:	push   ecx
65006247:	push   esi
65006248:	push   edx
65006249:	push   eax
6500624a:	call   0x65002ba0
6500624f:	lea    edx,[ebp+0x0]
65006252:	mov    cl,BYTE PTR [eax]
65006254:	mov    BYTE PTR [edx],cl
65006256:	add    eax,0x1
65006259:	add    edx,0x1
6500625c:	cmp    cl,bl
6500625e:	jne    0x65006252
65006260:	lea    eax,[ebp+0x0]
65006263:	push   eax
65006264:	call   0x6501eb55
65006269:	add    esp,0x4
6500626c:	lea    ecx,[ebp+0x0]
6500626f:	push   ecx
65006270:	lea    ecx,[ebp-0x28]
65006273:	call   0x65002730
65006278:	lea    eax,[ebp-0x28]
6500627b:	mov    esi,0x650303e0
65006280:	mov    BYTE PTR [ebp-0x4],0x3f
65006284:	call   0x650072c0
65006289:	test   eax,eax
6500628b:	setne  BYTE PTR [ebp-0x41]
6500628f:	cmp    DWORD PTR [ebp-0x10],edi
65006292:	jb     0x650062a0
65006294:	mov    edx,DWORD PTR [ebp-0x24]
65006297:	push   edx
65006298:	call   0x65011f62
6500629d:	add    esp,0x4
650062a0:	mov    DWORD PTR [ebp-0x4],0xffffffff
650062a7:	mov    eax,DWORD PTR [ebp+0x40c]
650062ad:	add    eax,0xfffffff0
650062b0:	mov    DWORD PTR [ebp-0x10],0xf
650062b7:	mov    DWORD PTR [ebp-0x14],ebx
650062ba:	mov    BYTE PTR [ebp-0x24],bl
650062bd:	lea    ecx,[eax+0xc]
650062c0:	or     edx,0xffffffff
650062c3:	lock xadd DWORD PTR [ecx],edx
650062c7:	dec    edx
650062c8:	test   edx,edx
650062ca:	jg     0x650062d6
650062cc:	mov    ecx,DWORD PTR [eax]
650062ce:	mov    edx,DWORD PTR [ecx]
650062d0:	push   eax
650062d1:	mov    eax,DWORD PTR [edx+0x4]
650062d4:	call   eax
650062d6:	mov    al,BYTE PTR [ebp-0x41]
650062d9:	lea    esp,[ebp-0x58]
650062dc:	mov    ecx,DWORD PTR [ebp-0xc]
650062df:	mov    DWORD PTR fs:0x0,ecx
650062e6:	pop    ecx
650062e7:	pop    edi
650062e8:	pop    esi
650062e9:	pop    ebx
650062ea:	mov    ecx,DWORD PTR [ebp+0x400]
650062f0:	xor    ecx,ebp
650062f2:	call   0x650127bc
650062f7:	add    ebp,0x404
650062fd:	mov    esp,ebp
650062ff:	pop    ebp
65006300:	ret    
65006301:	int3   
65006302:	int3   
65006303:	int3   
65006304:	int3   
65006305:	int3   
65006306:	int3   
65006307:	int3   
65006308:	int3   
65006309:	int3   
6500630a:	int3   
6500630b:	int3   
6500630c:	int3   
6500630d:	int3   
6500630e:	int3   
6500630f:	int3   
65006310:	push   0xffffffff
65006312:	push   0x650232e9
65006317:	mov    eax,fs:0x0
6500631d:	push   eax
6500631e:	sub    esp,0x44
65006321:	push   ebx
65006322:	push   ebp
65006323:	push   esi
65006324:	push   edi
65006325:	mov    eax,ds:0x6502c09c
6500632a:	xor    eax,esp
6500632c:	push   eax
6500632d:	lea    eax,[esp+0x58]
65006331:	mov    fs:0x0,eax
65006337:	xor    edi,edi
65006339:	mov    DWORD PTR [esp+0x60],edi
6500633d:	mov    DWORD PTR [esp+0x28],edi
65006341:	call   DWORD PTR ds:0x6502c06c
65006347:	mov    eax,ds:0x6502d560
6500634c:	mov    edx,DWORD PTR [eax+0xc]
6500634f:	mov    ecx,0x6502d560
65006354:	call   edx
65006356:	mov    ebx,DWORD PTR [esp+0x68]
6500635a:	add    eax,0x10
6500635d:	mov    DWORD PTR [ebx],eax
6500635f:	push   0x4
65006361:	push   edi
65006362:	mov    DWORD PTR [esp+0x68],edi
65006366:	push   edi
65006367:	mov    DWORD PTR [esp+0x34],0x1
6500636f:	call   0x6500e700
65006374:	call   eax
65006376:	cmp    eax,edi
65006378:	mov    DWORD PTR [esp+0x1c],eax
6500637c:	je     0x65006504
65006382:	mov    ebp,DWORD PTR ds:0x65024004
65006388:	lea    ecx,[esp+0x20]
6500638c:	push   ecx
6500638d:	lea    edx,[esp+0x1c]
65006391:	push   edx
65006392:	lea    ecx,[esp+0x2c]
65006396:	push   ecx
65006397:	push   0x24
65006399:	lea    edx,[esp+0x44]
6500639d:	push   edx
6500639e:	push   0x3
650063a0:	push   0x13f
650063a5:	push   eax
650063a6:	mov    DWORD PTR [esp+0x40],edi
650063aa:	call   ebp
650063ac:	mov    esi,eax
650063ae:	call   DWORD PTR ds:0x65024044
650063b4:	cmp    esi,edi
650063b6:	je     0x650063bf
650063b8:	cmp    eax,0xea
650063bd:	jne    0x65006404
650063bf:	mov    esi,DWORD PTR [esp+0x24]
650063c3:	add    esi,0x24
650063c6:	xor    ecx,ecx
650063c8:	mov    eax,esi
650063ca:	mov    edx,0x24
650063cf:	mul    edx
650063d1:	seto   cl
650063d4:	neg    ecx
650063d6:	or     ecx,eax
650063d8:	push   ecx
650063d9:	call   0x65011f5d
650063de:	add    esp,0x4
650063e1:	mov    edi,eax
650063e3:	lea    eax,[esp+0x20]
650063e7:	push   eax
650063e8:	mov    eax,DWORD PTR [esp+0x20]
650063ec:	lea    ecx,[esp+0x1c]
650063f0:	push   ecx
650063f1:	lea    edx,[esp+0x2c]
650063f5:	push   edx
650063f6:	push   esi
650063f7:	push   edi
650063f8:	push   0x3
650063fa:	push   0x13f
650063ff:	push   eax
65006400:	call   ebp
65006402:	jmp    0x65006408
65006404:	mov    edi,DWORD PTR [esp+0x2c]
65006408:	xor    ebp,ebp
6500640a:	cmp    DWORD PTR [esp+0x18],ebp
6500640e:	jbe    0x65006500
65006414:	mov    ecx,DWORD PTR [edi]
65006416:	push   ecx
65006417:	lea    ecx,[esp+0x18]
6500641b:	call   0x650025b0
65006420:	mov    DWORD PTR [esp+0x60],0x1
65006428:	mov    eax,DWORD PTR [esp+0x14]
6500642c:	push   ecx
6500642d:	add    eax,0xfffffff0
65006430:	mov    DWORD PTR [esp+0x34],esp
65006434:	mov    esi,esp
65006436:	push   eax
65006437:	call   0x650028c0
6500643c:	add    eax,0x10
6500643f:	add    esp,0x4
65006442:	cmp    BYTE PTR [esp+0x70],0x0
65006447:	mov    DWORD PTR [esi],eax
65006449:	je     0x65006459
6500644b:	call   0x65004df0
65006450:	add    esp,0x4
65006453:	test   al,al
65006455:	jne    0x65006465
65006457:	jmp    0x650064cb
65006459:	call   0x65003e70
6500645e:	add    esp,0x4
65006461:	test   al,al
65006463:	jne    0x650064cb
65006465:	push   0x65028120
6500646a:	push   0x4
6500646c:	push   0x65028154
65006471:	call   0x65006a80
65006476:	add    esp,0xc
65006479:	push   eax
6500647a:	mov    ecx,ebx
6500647c:	call   0x65002680
65006481:	lea    edx,[esp+0x14]
65006485:	push   edx
65006486:	lea    eax,[esp+0x30]
6500648a:	push   eax
6500648b:	call   0x65003170
65006490:	add    esp,0x8
65006493:	mov    BYTE PTR [esp+0x60],0x2
65006498:	mov    eax,DWORD PTR [eax]
6500649a:	mov    ecx,DWORD PTR [eax-0xc]
6500649d:	push   ecx
6500649e:	push   eax
6500649f:	mov    ecx,ebx
650064a1:	call   0x65002a00
650064a6:	mov    BYTE PTR [esp+0x60],0x1
650064ab:	mov    eax,DWORD PTR [esp+0x2c]
650064af:	add    eax,0xfffffff0
650064b2:	lea    ecx,[eax+0xc]
650064b5:	or     edx,0xffffffff
650064b8:	lock xadd DWORD PTR [ecx],edx
650064bc:	dec    edx
650064bd:	test   edx,edx
650064bf:	jg     0x650064cb
650064c1:	mov    ecx,DWORD PTR [eax]
650064c3:	mov    edx,DWORD PTR [ecx]
650064c5:	push   eax
650064c6:	mov    eax,DWORD PTR [edx+0x4]
650064c9:	call   eax
650064cb:	mov    BYTE PTR [esp+0x60],0x0
650064d0:	mov    eax,DWORD PTR [esp+0x14]
650064d4:	add    eax,0xfffffff0
650064d7:	lea    ecx,[eax+0xc]
650064da:	or     edx,0xffffffff
650064dd:	lock xadd DWORD PTR [ecx],edx
650064e1:	dec    edx
650064e2:	test   edx,edx
650064e4:	jg     0x650064f0
650064e6:	mov    ecx,DWORD PTR [eax]
650064e8:	mov    edx,DWORD PTR [ecx]
650064ea:	push   eax
650064eb:	mov    eax,DWORD PTR [edx+0x4]
650064ee:	call   eax
650064f0:	add    ebp,0x1
650064f3:	add    edi,0x24
650064f6:	cmp    ebp,DWORD PTR [esp+0x18]
650064fa:	jb     0x65006414
65006500:	mov    eax,DWORD PTR [esp+0x1c]
65006504:	push   eax
65006505:	call   0x6500e790
6500650a:	call   eax
6500650c:	mov    eax,ebx
6500650e:	mov    ecx,DWORD PTR [esp+0x58]
65006512:	mov    DWORD PTR fs:0x0,ecx
65006519:	pop    ecx
6500651a:	pop    edi
6500651b:	pop    esi
6500651c:	pop    ebp
6500651d:	pop    ebx
6500651e:	add    esp,0x50
65006521:	ret    
65006522:	int3   
65006523:	int3   
65006524:	int3   
65006525:	int3   
65006526:	int3   
65006527:	int3   
65006528:	int3   
65006529:	int3   
6500652a:	int3   
6500652b:	int3   
6500652c:	int3   
6500652d:	int3   
6500652e:	int3   
6500652f:	int3   
65006530:	push   ebp
65006531:	mov    ebp,esp
65006533:	push   0xffffffff
65006535:	push   0x65022c50
6500653a:	mov    eax,fs:0x0
65006540:	push   eax
65006541:	sub    esp,0x15c
65006547:	mov    eax,ds:0x6502c09c
6500654c:	xor    eax,ebp
6500654e:	mov    DWORD PTR [ebp-0x14],eax
65006551:	push   ebx
65006552:	push   esi
65006553:	push   edi
65006554:	push   eax
65006555:	lea    eax,[ebp-0xc]
65006558:	mov    fs:0x0,eax
6500655e:	mov    DWORD PTR [ebp-0x10],esp
65006561:	mov    edi,DWORD PTR [ebp+0x8]
65006564:	push   0xa0
65006569:	lea    eax,[ebp-0x154]
6500656f:	push   eax
65006570:	push   0x7d0
65006575:	push   0x65000000
6500657a:	mov    DWORD PTR [ebp-0x4],0x0
65006581:	call   DWORD PTR ds:0x650241b4
65006587:	test   eax,eax
65006589:	je     0x650065d0
6500658b:	push   ecx
6500658c:	lea    edx,[ebp-0x154]
65006592:	mov    ecx,esp
65006594:	mov    DWORD PTR [ebp-0x158],esp
6500659a:	push   edx
6500659b:	call   0x650025b0
650065a0:	lea    esi,[ebp-0x168]
650065a6:	call   0x65002f70
650065ab:	mov    ecx,DWORD PTR [eax]
650065ad:	mov    DWORD PTR [edi],ecx
650065af:	mov    edx,DWORD PTR [eax+0x4]
650065b2:	mov    DWORD PTR [edi+0x4],edx
650065b5:	mov    ecx,DWORD PTR [eax+0x8]
650065b8:	mov    DWORD PTR [edi+0x8],ecx
650065bb:	mov    edx,DWORD PTR [eax+0xc]
650065be:	add    esp,0x4
650065c1:	mov    DWORD PTR [edi+0xc],edx
650065c4:	mov    al,0x1
650065c6:	jmp    0x650065f3
650065c8:	mov    eax,0x650065ce
650065cd:	ret    
650065ce:	jmp    0x650065f1
650065d0:	mov    eax,ds:0x65024b98
650065d5:	mov    DWORD PTR [edi],eax
650065d7:	mov    ecx,DWORD PTR ds:0x65024b9c
650065dd:	mov    DWORD PTR [edi+0x4],ecx
650065e0:	mov    edx,DWORD PTR ds:0x65024ba0
650065e6:	mov    DWORD PTR [edi+0x8],edx
650065e9:	mov    eax,ds:0x65024ba4
650065ee:	mov    DWORD PTR [edi+0xc],eax
650065f1:	xor    al,al
650065f3:	mov    ecx,DWORD PTR [ebp-0xc]
650065f6:	mov    DWORD PTR fs:0x0,ecx
650065fd:	pop    ecx
650065fe:	pop    edi
650065ff:	pop    esi
65006600:	pop    ebx
65006601:	mov    ecx,DWORD PTR [ebp-0x14]
65006604:	xor    ecx,ebp
65006606:	call   0x650127bc
6500660b:	mov    esp,ebp
6500660d:	pop    ebp
6500660e:	ret    
6500660f:	int3   
65006610:	sub    esp,0x118
65006616:	mov    eax,ds:0x6502c09c
6500661b:	xor    eax,esp
6500661d:	mov    DWORD PTR [esp+0x114],eax
65006624:	push   esi
65006625:	push   0x110
6500662a:	lea    eax,[esp+0xc]
6500662e:	push   0x0
65006630:	push   eax
65006631:	call   0x65012e40
65006636:	mov    edx,DWORD PTR ds:0x6502d560
6500663c:	mov    eax,DWORD PTR [edx+0xc]
6500663f:	add    esp,0xc
65006642:	mov    ecx,0x6502d560
65006647:	mov    DWORD PTR [esp+0x4],0x114
6500664f:	call   eax
65006651:	lea    ecx,[esp+0x4]
65006655:	mov    esi,eax
65006657:	push   ecx
65006658:	add    esi,0x10
6500665b:	call   DWORD PTR ds:0x65024068
65006661:	test   eax,eax
65006663:	je     0x650066a5
65006665:	mov    edx,DWORD PTR [esp+0x8]
65006669:	mov    eax,DWORD PTR [esp+0xc]
6500666d:	mov    DWORD PTR [edi],edx
6500666f:	mov    DWORD PTR [ebx],eax
65006671:	lea    eax,[esi-0x10]
65006674:	lea    ecx,[eax+0xc]
65006677:	or     edx,0xffffffff
6500667a:	lock xadd DWORD PTR [ecx],edx
6500667e:	dec    edx
6500667f:	test   edx,edx
65006681:	jg     0x6500668d
65006683:	mov    ecx,DWORD PTR [eax]
65006685:	mov    edx,DWORD PTR [ecx]
65006687:	push   eax
65006688:	mov    eax,DWORD PTR [edx+0x4]
6500668b:	call   eax
6500668d:	mov    al,0x1
6500668f:	pop    esi
65006690:	mov    ecx,DWORD PTR [esp+0x114]
65006697:	xor    ecx,esp
65006699:	call   0x650127bc
6500669e:	add    esp,0x118
650066a4:	ret    
650066a5:	lea    eax,[esi-0x10]
650066a8:	lea    ecx,[eax+0xc]
650066ab:	or     edx,0xffffffff
650066ae:	lock xadd DWORD PTR [ecx],edx
650066b2:	dec    edx
650066b3:	test   edx,edx
650066b5:	jg     0x650066c1
650066b7:	mov    ecx,DWORD PTR [eax]
650066b9:	mov    edx,DWORD PTR [ecx]
650066bb:	push   eax
650066bc:	mov    eax,DWORD PTR [edx+0x4]
650066bf:	call   eax
650066c1:	mov    ecx,DWORD PTR [esp+0x118]
650066c8:	pop    esi
650066c9:	xor    ecx,esp
650066cb:	xor    al,al
650066cd:	call   0x650127bc
650066d2:	add    esp,0x118
650066d8:	ret    
650066d9:	int3   
650066da:	int3   
650066db:	int3   
650066dc:	int3   
650066dd:	int3   
650066de:	int3   
650066df:	int3   
650066e0:	push   ebp
650066e1:	mov    ebp,esp
650066e3:	and    esp,0xfffffff8
650066e6:	push   0xffffffff
650066e8:	push   0x65022c28
650066ed:	mov    eax,fs:0x0
650066f3:	push   eax
650066f4:	sub    esp,0x14
650066f7:	push   ebx
650066f8:	push   edi
650066f9:	mov    eax,ds:0x6502c09c
650066fe:	xor    eax,esp
65006700:	push   eax
65006701:	lea    eax,[esp+0x20]
65006705:	mov    fs:0x0,eax
6500670b:	cmp    DWORD PTR ds:0x65030368,0x0
65006712:	jne    0x650067c5
65006718:	push   0x6502815c
6500671d:	push   0x12
6500671f:	push   0x65028198
65006724:	mov    DWORD PTR ds:0x65030368,0xc
6500672e:	mov    DWORD PTR ds:0x65030370,0x0
65006738:	call   0x65006d70
6500673d:	add    esp,0xc
65006740:	push   eax
65006741:	lea    ecx,[esp+0x14]
65006745:	call   0x650025b0
6500674a:	lea    ebx,[esp+0x18]
6500674e:	lea    edi,[esp+0x14]
65006752:	mov    DWORD PTR [esp+0x28],0x0
6500675a:	call   0x65006610
6500675f:	test   al,al
65006761:	je     0x65006788
65006763:	cmp    DWORD PTR [esp+0x14],0x6
65006768:	jb     0x65006788
6500676a:	push   0x650281c0
6500676f:	push   0xf
65006771:	push   0x650281e4
65006776:	call   0x65006d70
6500677b:	add    esp,0xc
6500677e:	push   eax
6500677f:	lea    ecx,[esp+0x14]
65006783:	call   0x65006a40
65006788:	mov    eax,DWORD PTR [esp+0x10]
6500678c:	push   0x0
6500678e:	push   0x6503036c
65006793:	push   0x1
65006795:	push   eax
65006796:	call   0x6500e680
6500679b:	call   eax
6500679d:	mov    DWORD PTR [esp+0x28],0xffffffff
650067a5:	mov    eax,DWORD PTR [esp+0x10]
650067a9:	add    eax,0xfffffff0
650067ac:	lea    ecx,[eax+0xc]
650067af:	or     edx,0xffffffff
650067b2:	lock xadd DWORD PTR [ecx],edx
650067b6:	dec    edx
650067b7:	test   edx,edx
650067b9:	jg     0x650067c5
650067bb:	mov    ecx,DWORD PTR [eax]
650067bd:	mov    edx,DWORD PTR [ecx]
650067bf:	push   eax
650067c0:	mov    eax,DWORD PTR [edx+0x4]
650067c3:	call   eax
650067c5:	mov    eax,0x65030368
650067ca:	mov    ecx,DWORD PTR [esp+0x20]
650067ce:	mov    DWORD PTR fs:0x0,ecx
650067d5:	pop    ecx
650067d6:	pop    edi
650067d7:	pop    ebx
650067d8:	mov    esp,ebp
650067da:	pop    ebp
650067db:	ret    
650067dc:	int3   
650067dd:	int3   
650067de:	int3   
650067df:	int3   
650067e0:	push   0xffffffff
650067e2:	push   0x65022bf8
650067e7:	mov    eax,fs:0x0
650067ed:	push   eax
650067ee:	push   ecx
650067ef:	push   esi
650067f0:	push   edi
650067f1:	mov    eax,ds:0x6502c09c
650067f6:	xor    eax,esp
650067f8:	push   eax
650067f9:	lea    eax,[esp+0x10]
650067fd:	mov    fs:0x0,eax
65006803:	mov    esi,ecx
65006805:	mov    DWORD PTR [esp+0xc],esi
65006809:	mov    eax,ds:0x6502d560
6500680e:	mov    edx,DWORD PTR [eax+0xc]
65006811:	mov    ecx,0x6502d560
65006816:	call   edx
65006818:	add    eax,0x10
6500681b:	mov    DWORD PTR [esi],eax
6500681d:	mov    eax,DWORD PTR [esp+0x20]
65006821:	test   eax,eax
65006823:	mov    DWORD PTR [esp+0x18],0x0
6500682b:	je     0x65006851
6500682d:	test   eax,0xffff0000
65006832:	jne    0x65006851
65006834:	movzx  edi,ax
65006837:	push   0x0
65006839:	push   edi
6500683a:	call   0x65002000
6500683f:	add    esp,0x8
65006842:	test   eax,eax
65006844:	je     0x65006859
65006846:	push   edi
65006847:	push   eax
65006848:	mov    ecx,esi
6500684a:	call   0x65002930
6500684f:	jmp    0x65006859
65006851:	push   eax
65006852:	mov    ecx,esi
65006854:	call   0x65002820
65006859:	mov    eax,esi
6500685b:	mov    ecx,DWORD PTR [esp+0x10]
6500685f:	mov    DWORD PTR fs:0x0,ecx
65006866:	pop    ecx
65006867:	pop    edi
65006868:	pop    esi
65006869:	add    esp,0x10
6500686c:	ret    0x4
6500686f:	int3   
65006870:	mov    eax,DWORD PTR [edi]
65006872:	mov    edx,DWORD PTR [eax-0x8]
65006875:	push   ebx
65006876:	mov    ebx,DWORD PTR [eax-0xc]
65006879:	push   esi
6500687a:	mov    ecx,0x1
6500687f:	sub    ecx,DWORD PTR [eax-0x4]
65006882:	lea    esi,[ebx+0x1]
65006885:	sub    edx,esi
65006887:	or     ecx,edx
65006889:	jge    0x65006893
6500688b:	push   esi
6500688c:	mov    ecx,edi
6500688e:	call   0x65001e60
65006893:	test   esi,esi
65006895:	movsx  ax,BYTE PTR [esp+0xc]
6500689b:	mov    ecx,DWORD PTR [edi]
6500689d:	mov    WORD PTR [ecx+ebx*2],ax
650068a1:	jl     0x650068bc
650068a3:	mov    eax,DWORD PTR [edi]
650068a5:	cmp    esi,DWORD PTR [eax-0x8]
650068a8:	jg     0x650068bc
650068aa:	mov    DWORD PTR [eax-0xc],esi
650068ad:	mov    edx,DWORD PTR [edi]
650068af:	mov    WORD PTR [edx+esi*2],0x0
650068b5:	pop    esi
650068b6:	mov    eax,edi
650068b8:	pop    ebx
650068b9:	ret    0x4
650068bc:	push   0x80070057
650068c1:	call   0x650010a0
650068c6:	int3   
650068c7:	int3   
650068c8:	int3   
650068c9:	int3   
650068ca:	int3   
650068cb:	int3   
650068cc:	int3   
650068cd:	int3   
650068ce:	int3   
650068cf:	int3   
650068d0:	mov    eax,DWORD PTR [edi]
650068d2:	mov    edx,DWORD PTR [eax-0x8]
650068d5:	push   ebx
650068d6:	mov    ebx,DWORD PTR [eax-0xc]
650068d9:	push   esi
650068da:	mov    ecx,0x1
650068df:	sub    ecx,DWORD PTR [eax-0x4]
650068e2:	lea    esi,[ebx+0x1]
650068e5:	sub    edx,esi
650068e7:	or     ecx,edx
650068e9:	jge    0x650068f3
650068eb:	push   esi
650068ec:	mov    ecx,edi
650068ee:	call   0x65001e60
650068f3:	test   esi,esi
650068f5:	mov    eax,DWORD PTR [edi]
650068f7:	mov    WORD PTR [eax+ebx*2],0x5c
650068fd:	jl     0x65006916
650068ff:	mov    eax,DWORD PTR [edi]
65006901:	cmp    esi,DWORD PTR [eax-0x8]
65006904:	jg     0x65006916
65006906:	mov    DWORD PTR [eax-0xc],esi
65006909:	mov    ecx,DWORD PTR [edi]
6500690b:	mov    WORD PTR [ecx+esi*2],0x0
65006911:	pop    esi
65006912:	mov    eax,edi
65006914:	pop    ebx
65006915:	ret    
65006916:	push   0x80070057
6500691b:	call   0x650010a0
65006920:	int3   
65006921:	int3   
65006922:	int3   
65006923:	int3   
65006924:	int3   
65006925:	int3   
65006926:	int3   
65006927:	int3   
65006928:	int3   
65006929:	int3   
6500692a:	int3   
6500692b:	int3   
6500692c:	int3   
6500692d:	int3   
6500692e:	int3   
6500692f:	int3   
65006930:	push   esi
65006931:	push   edi
65006932:	mov    edi,DWORD PTR [ebx]
65006934:	mov    ecx,edi
65006936:	movzx  eax,WORD PTR [ecx]
65006939:	xor    edx,edx
6500693b:	test   ax,ax
6500693e:	je     0x65006995
65006940:	cmp    ax,0x7d
65006944:	jne    0x6500694e
65006946:	test   edx,edx
65006948:	jne    0x65006950
6500694a:	mov    edx,ecx
6500694c:	jmp    0x65006950
6500694e:	xor    edx,edx
65006950:	movzx  eax,WORD PTR [ecx+0x2]
65006954:	add    ecx,0x2
65006957:	test   ax,ax
6500695a:	jne    0x65006940
6500695c:	test   edx,edx
6500695e:	je     0x65006995
65006960:	mov    ecx,DWORD PTR [edi-0x8]
65006963:	sub    edx,edi
65006965:	sar    edx,1
65006967:	mov    eax,0x1
6500696c:	sub    eax,DWORD PTR [edi-0x4]
6500696f:	mov    esi,edx
65006971:	sub    ecx,esi
65006973:	or     eax,ecx
65006975:	jge    0x6500697f
65006977:	push   esi
65006978:	mov    ecx,ebx
6500697a:	call   0x65001e60
6500697f:	test   esi,esi
65006981:	jl     0x6500699a
65006983:	mov    eax,DWORD PTR [ebx]
65006985:	cmp    esi,DWORD PTR [eax-0x8]
65006988:	jg     0x6500699a
6500698a:	mov    DWORD PTR [eax-0xc],esi
6500698d:	mov    edx,DWORD PTR [ebx]
6500698f:	mov    WORD PTR [edx+esi*2],0x0
65006995:	pop    edi
65006996:	mov    eax,ebx
65006998:	pop    esi
65006999:	ret    
6500699a:	push   0x80070057
6500699f:	call   0x650010a0
650069a4:	int3   
650069a5:	int3   
650069a6:	int3   
650069a7:	int3   
650069a8:	int3   
650069a9:	int3   
650069aa:	int3   
650069ab:	int3   
650069ac:	int3   
650069ad:	int3   
650069ae:	int3   
650069af:	int3   
650069b0:	mov    ecx,DWORD PTR [ebx]
650069b2:	mov    eax,ecx
650069b4:	cmp    WORD PTR [eax],0x7b
650069b8:	jne    0x650069c9
650069ba:	lea    ebx,[ebx+0x0]
650069c0:	add    eax,0x2
650069c3:	cmp    WORD PTR [eax],0x7b
650069c7:	je     0x650069c0
650069c9:	cmp    eax,ecx
650069cb:	push   esi
650069cc:	je     0x65006a28
650069ce:	sub    eax,ecx
650069d0:	sar    eax,1
650069d2:	push   edi
650069d3:	mov    edx,0x1
650069d8:	sub    edx,DWORD PTR [ecx-0x4]
650069db:	mov    edi,eax
650069dd:	mov    eax,DWORD PTR [ecx-0xc]
650069e0:	mov    ecx,DWORD PTR [ecx-0x8]
650069e3:	sub    ecx,eax
650069e5:	or     edx,ecx
650069e7:	jge    0x650069f1
650069e9:	push   eax
650069ea:	mov    ecx,ebx
650069ec:	call   0x65001e60
650069f1:	mov    eax,DWORD PTR [ebx]
650069f3:	mov    esi,DWORD PTR [eax-0xc]
650069f6:	sub    esi,edi
650069f8:	lea    ecx,[esi+esi*1+0x2]
650069fc:	push   ecx
650069fd:	lea    edx,[eax+edi*2]
65006a00:	push   edx
65006a01:	push   ecx
65006a02:	push   eax
65006a03:	call   0x6501214e
65006a08:	push   eax
65006a09:	call   0x65001ef0
65006a0e:	add    esp,0x14
65006a11:	test   esi,esi
65006a13:	pop    edi
65006a14:	jl     0x65006a2c
65006a16:	mov    eax,DWORD PTR [ebx]
65006a18:	cmp    esi,DWORD PTR [eax-0x8]
65006a1b:	jg     0x65006a2c
65006a1d:	mov    DWORD PTR [eax-0xc],esi
65006a20:	mov    eax,DWORD PTR [ebx]
65006a22:	mov    WORD PTR [eax+esi*2],0x0
65006a28:	mov    eax,ebx
65006a2a:	pop    esi
65006a2b:	ret    
65006a2c:	push   0x80070057
65006a31:	call   0x650010a0
65006a36:	int3   
65006a37:	int3   
65006a38:	int3   
65006a39:	int3   
65006a3a:	int3   
65006a3b:	int3   
65006a3c:	int3   
65006a3d:	int3   
65006a3e:	int3   
65006a3f:	int3   
65006a40:	push   esi
65006a41:	mov    esi,DWORD PTR [esp+0x8]
65006a45:	test   esi,esi
65006a47:	jne    0x65006a56
65006a49:	xor    eax,eax
65006a4b:	push   eax
65006a4c:	push   esi
65006a4d:	call   0x65002a00
65006a52:	pop    esi
65006a53:	ret    0x4
65006a56:	mov    eax,esi
65006a58:	push   edi
65006a59:	lea    edi,[eax+0x2]
65006a5c:	lea    esp,[esp+0x0]
65006a60:	mov    dx,WORD PTR [eax]
65006a63:	add    eax,0x2
65006a66:	test   dx,dx
65006a69:	jne    0x65006a60
65006a6b:	sub    eax,edi
65006a6d:	pop    edi
65006a6e:	sar    eax,1
65006a70:	push   eax
65006a71:	push   esi
65006a72:	call   0x65002a00
65006a77:	pop    esi
65006a78:	ret    0x4
65006a7b:	int3   
65006a7c:	int3   
65006a7d:	int3   
65006a7e:	int3   
65006a7f:	int3   
65006a80:	push   ebp
65006a81:	mov    ebp,esp
65006a83:	and    esp,0xfffffff8
65006a86:	push   0xffffffff
65006a88:	push   0x650229a1
65006a8d:	mov    eax,fs:0x0
65006a93:	push   eax
65006a94:	sub    esp,0xd0
65006a9a:	mov    eax,ds:0x6502c09c
65006a9f:	xor    eax,esp
65006aa1:	mov    DWORD PTR [esp+0xc8],eax
65006aa8:	push   ebx
65006aa9:	push   esi
65006aaa:	push   edi
65006aab:	mov    eax,ds:0x6502c09c
65006ab0:	xor    eax,esp
65006ab2:	push   eax
65006ab3:	lea    eax,[esp+0xe0]
65006aba:	mov    fs:0x0,eax
65006ac0:	mov    eax,ds:0x65030290
65006ac5:	mov    esi,DWORD PTR [ebp+0x8]
65006ac8:	xor    ebx,ebx
65006aca:	cmp    eax,ebx
65006acc:	mov    DWORD PTR [esp+0x28],esi
65006ad0:	jne    0x65006ae0
65006ad2:	push   ebx
65006ad3:	push   ebx
65006ad4:	push   ebx
65006ad5:	call   DWORD PTR ds:0x65024060
65006adb:	mov    ds:0x65030290,eax
65006ae0:	push   0xffffffff
65006ae2:	push   eax
65006ae3:	call   DWORD PTR ds:0x650240b4
65006ae9:	test   eax,eax
65006aeb:	je     0x65006af4
65006aed:	mov    eax,esi
65006aef:	jmp    0x65006d3f
65006af4:	mov    eax,DWORD PTR [ebp+0xc]
65006af7:	push   eax
65006af8:	mov    edi,0xf
65006afd:	push   esi
65006afe:	lea    ecx,[esp+0xa8]
65006b05:	mov    DWORD PTR [esp+0xc0],edi
65006b0c:	mov    DWORD PTR [esp+0xbc],ebx
65006b13:	mov    BYTE PTR [esp+0xac],bl
65006b1a:	call   0x650018c0
65006b1f:	lea    ecx,[esp+0xa0]
65006b26:	push   ecx
65006b27:	lea    edx,[esp+0x18]
65006b2b:	push   edx
65006b2c:	mov    DWORD PTR [esp+0xf0],ebx
65006b33:	call   0x65007450
65006b38:	mov    ecx,eax
65006b3a:	call   0x65007d50
65006b3f:	call   0x65007450
65006b44:	mov    esi,DWORD PTR [esp+0x14]
65006b48:	cmp    esi,ebx
65006b4a:	mov    ecx,DWORD PTR [eax+0x4]
65006b4d:	mov    DWORD PTR [esp+0x20],ecx
65006b51:	je     0x65006b57
65006b53:	cmp    esi,eax
65006b55:	je     0x65006b5c
65006b57:	call   0x650122d3
65006b5c:	mov    edx,DWORD PTR [esp+0x20]
65006b60:	cmp    DWORD PTR [esp+0x18],edx
65006b64:	jne    0x65006c68
65006b6a:	sub    esp,0x1c
65006b6d:	mov    ecx,esp
65006b6f:	mov    DWORD PTR [esp+0x48],esp
65006b73:	push   0xffffffff
65006b75:	push   ebx
65006b76:	lea    eax,[esp+0xc4]
65006b7d:	mov    DWORD PTR [ecx+0x18],edi
65006b80:	mov    DWORD PTR [ecx+0x14],ebx
65006b83:	push   eax
65006b84:	mov    BYTE PTR [ecx+0x4],bl
65006b87:	call   0x650017e0
65006b8c:	lea    ecx,[esp+0xd8]
65006b93:	push   ecx
65006b94:	call   0x650074e0
65006b99:	add    esp,0x4
65006b9c:	mov    ecx,esp
65006b9e:	mov    BYTE PTR [esp+0x104],0x1
65006ba6:	mov    DWORD PTR [esp+0x48],esp
65006baa:	push   0xffffffff
65006bac:	push   ebx
65006bad:	lea    edx,[esp+0xe0]
65006bb4:	mov    DWORD PTR [ecx+0x18],edi
65006bb7:	mov    DWORD PTR [ecx+0x14],ebx
65006bba:	push   edx
65006bbb:	mov    BYTE PTR [ecx+0x4],bl
65006bbe:	call   0x650017e0
65006bc3:	sub    esp,0x1c
65006bc6:	mov    ecx,esp
65006bc8:	mov    BYTE PTR [esp+0x120],0x2
65006bd0:	mov    DWORD PTR [esp+0x54],esp
65006bd4:	push   0xffffffff
65006bd6:	push   ebx
65006bd7:	lea    eax,[esp+0xe0]
65006bde:	mov    DWORD PTR [ecx+0x18],edi
65006be1:	mov    DWORD PTR [ecx+0x14],ebx
65006be4:	push   eax
65006be5:	mov    BYTE PTR [ecx+0x4],bl
65006be8:	call   0x650017e0
65006bed:	lea    ecx,[esp+0xa0]
65006bf4:	push   ecx
65006bf5:	mov    BYTE PTR [esp+0x124],0x1
65006bfd:	call   0x65009f10
65006c02:	add    esp,0x3c
65006c05:	push   eax
65006c06:	lea    ecx,[esp+0x34]
65006c0a:	mov    BYTE PTR [esp+0xec],0x3
65006c12:	call   0x65009fb0
65006c17:	lea    edx,[esp+0x30]
65006c1b:	push   edx
65006c1c:	lea    eax,[esp+0x20]
65006c20:	push   eax
65006c21:	mov    BYTE PTR [esp+0xf0],0x4
65006c29:	call   0x65007450
65006c2e:	mov    ecx,eax
65006c30:	call   0x65007bc0
65006c35:	lea    ecx,[esp+0x30]
65006c39:	call   0x6500f820
65006c3e:	lea    ecx,[esp+0x68]
65006c42:	call   0x6500f820
65006c47:	mov    BYTE PTR [esp+0xe8],bl
65006c4e:	cmp    DWORD PTR [esp+0xd4],0x10
65006c56:	jb     0x65006c68
65006c58:	mov    ecx,DWORD PTR [esp+0xc0]
65006c5f:	push   ecx
65006c60:	call   0x65011f62
65006c65:	add    esp,0x4
65006c68:	mov    edx,DWORD PTR [ebp+0x10]
65006c6b:	movzx  eax,BYTE PTR [edx]
65006c6e:	cmp    eax,0x100
65006c73:	jge    0x65006c97
65006c75:	lea    ecx,[esp+0xa0]
65006c7c:	push   ecx
65006c7d:	lea    edx,[esp+0x20]
65006c81:	push   edx
65006c82:	call   0x65007450
65006c87:	mov    ecx,eax
65006c89:	call   0x65007d50
65006c8e:	mov    esi,DWORD PTR [eax]
65006c90:	mov    eax,DWORD PTR [eax+0x4]
65006c93:	mov    DWORD PTR [esp+0x18],eax
65006c97:	call   0x65007450
65006c9c:	cmp    esi,ebx
65006c9e:	mov    ecx,DWORD PTR [eax+0x4]
65006ca1:	mov    DWORD PTR [esp+0x20],ecx
65006ca5:	je     0x65006cab
65006ca7:	cmp    esi,eax
65006ca9:	je     0x65006cb0
65006cab:	call   0x650122d3
65006cb0:	mov    edi,DWORD PTR [esp+0x18]
65006cb4:	cmp    edi,DWORD PTR [esp+0x20]
65006cb8:	je     0x65006cdd
65006cba:	cmp    esi,ebx
65006cbc:	jne    0x65006cc3
65006cbe:	call   0x650122d3
65006cc3:	cmp    edi,DWORD PTR [esi+0x4]
65006cc6:	jne    0x65006ccd
65006cc8:	call   0x650122d3
65006ccd:	cmp    DWORD PTR [edi+0x40],0x10
65006cd1:	jb     0x65006cd8
65006cd3:	mov    edi,DWORD PTR [edi+0x2c]
65006cd6:	jmp    0x65006ce1
65006cd8:	add    edi,0x2c
65006cdb:	jmp    0x65006ce1
65006cdd:	mov    edi,DWORD PTR [esp+0x28]
65006ce1:	cmp    DWORD PTR ds:0x6502e060,ebx
65006ce7:	jne    0x65006d05
65006ce9:	push   0x65026630
65006cee:	push   0x65026640
65006cf3:	call   DWORD PTR ds:0x65024074
65006cf9:	push   eax
65006cfa:	call   DWORD PTR ds:0x65024014
65006d00:	mov    ds:0x6502e060,eax
65006d05:	mov    eax,ds:0x65030290
65006d0a:	cmp    eax,ebx
65006d0c:	jne    0x65006d1c
65006d0e:	push   ebx
65006d0f:	push   ebx
65006d10:	push   ebx
65006d11:	call   DWORD PTR ds:0x65024060
65006d17:	mov    ds:0x65030290,eax
65006d1c:	push   eax
65006d1d:	call   DWORD PTR ds:0x6502e060
65006d23:	cmp    DWORD PTR [esp+0xb8],0x10
65006d2b:	jb     0x65006d3d
65006d2d:	mov    edx,DWORD PTR [esp+0xa4]
65006d34:	push   edx
65006d35:	call   0x65011f62
65006d3a:	add    esp,0x4
65006d3d:	mov    eax,edi
65006d3f:	mov    ecx,DWORD PTR [esp+0xe0]
65006d46:	mov    DWORD PTR fs:0x0,ecx
65006d4d:	pop    ecx
65006d4e:	pop    edi
65006d4f:	pop    esi
65006d50:	pop    ebx
65006d51:	mov    ecx,DWORD PTR [esp+0xc8]
65006d58:	xor    ecx,esp
65006d5a:	call   0x650127bc
65006d5f:	mov    esp,ebp
65006d61:	pop    ebp
65006d62:	ret    
65006d63:	int3   
65006d64:	int3   
65006d65:	int3   
65006d66:	int3   
65006d67:	int3   
65006d68:	int3   
65006d69:	int3   
65006d6a:	int3   
65006d6b:	int3   
65006d6c:	int3   
65006d6d:	int3   
65006d6e:	int3   
65006d6f:	int3   
65006d70:	push   ebp
65006d71:	mov    ebp,esp
65006d73:	and    esp,0xfffffff8
65006d76:	push   0xffffffff
65006d78:	push   0x65022941
65006d7d:	mov    eax,fs:0x0
65006d83:	push   eax
65006d84:	sub    esp,0xd0
65006d8a:	mov    eax,ds:0x6502c09c
65006d8f:	xor    eax,esp
65006d91:	mov    DWORD PTR [esp+0xc8],eax
65006d98:	push   ebx
65006d99:	push   esi
65006d9a:	push   edi
65006d9b:	mov    eax,ds:0x6502c09c
65006da0:	xor    eax,esp
65006da2:	push   eax
65006da3:	lea    eax,[esp+0xe0]
65006daa:	mov    fs:0x0,eax
65006db0:	mov    eax,ds:0x65030290
65006db5:	mov    esi,DWORD PTR [ebp+0x8]
65006db8:	xor    ebx,ebx
65006dba:	cmp    eax,ebx
65006dbc:	mov    DWORD PTR [esp+0x28],esi
65006dc0:	jne    0x65006dd0
65006dc2:	push   ebx
65006dc3:	push   ebx
65006dc4:	push   ebx
65006dc5:	call   DWORD PTR ds:0x65024060
65006dcb:	mov    ds:0x65030290,eax
65006dd0:	push   0xffffffff
65006dd2:	push   eax
65006dd3:	call   DWORD PTR ds:0x650240b4
65006dd9:	test   eax,eax
65006ddb:	je     0x65006de4
65006ddd:	mov    eax,esi
65006ddf:	jmp    0x65007033
65006de4:	mov    eax,DWORD PTR [ebp+0xc]
65006de7:	push   eax
65006de8:	mov    edi,0x7
65006ded:	push   esi
65006dee:	lea    ecx,[esp+0xa8]
65006df5:	mov    DWORD PTR [esp+0xc0],edi
65006dfc:	mov    DWORD PTR [esp+0xbc],ebx
65006e03:	mov    WORD PTR [esp+0xac],bx
65006e0b:	call   0x65008870
65006e10:	lea    ecx,[esp+0xa0]
65006e17:	push   ecx
65006e18:	lea    edx,[esp+0x18]
65006e1c:	push   edx
65006e1d:	mov    DWORD PTR [esp+0xf0],ebx
65006e24:	call   0x650075b0
65006e29:	mov    ecx,eax
65006e2b:	call   0x65007f10
65006e30:	call   0x650075b0
65006e35:	mov    esi,DWORD PTR [esp+0x14]
65006e39:	cmp    esi,ebx
65006e3b:	mov    ecx,DWORD PTR [eax+0x4]
65006e3e:	mov    DWORD PTR [esp+0x20],ecx
65006e42:	je     0x65006e48
65006e44:	cmp    esi,eax
65006e46:	je     0x65006e4d
65006e48:	call   0x650122d3
65006e4d:	mov    edx,DWORD PTR [esp+0x20]
65006e51:	cmp    DWORD PTR [esp+0x18],edx
65006e55:	jne    0x65006f5c
65006e5b:	sub    esp,0x1c
65006e5e:	mov    ecx,esp
65006e60:	mov    DWORD PTR [esp+0x48],esp
65006e64:	push   0xffffffff
65006e66:	push   ebx
65006e67:	lea    eax,[esp+0xc4]
65006e6e:	mov    DWORD PTR [ecx+0x18],edi
65006e71:	mov    DWORD PTR [ecx+0x14],ebx
65006e74:	push   eax
65006e75:	mov    WORD PTR [ecx+0x4],bx
65006e79:	call   0x65008780
65006e7e:	lea    ecx,[esp+0xd8]
65006e85:	push   ecx
65006e86:	call   0x65007640
65006e8b:	add    esp,0x4
65006e8e:	mov    ecx,esp
65006e90:	mov    BYTE PTR [esp+0x104],0x1
65006e98:	mov    DWORD PTR [esp+0x48],esp
65006e9c:	push   0xffffffff
65006e9e:	push   ebx
65006e9f:	lea    edx,[esp+0xe0]
65006ea6:	mov    DWORD PTR [ecx+0x18],edi
65006ea9:	mov    DWORD PTR [ecx+0x14],ebx
65006eac:	push   edx
65006ead:	mov    WORD PTR [ecx+0x4],bx
65006eb1:	call   0x65008780
65006eb6:	sub    esp,0x1c
65006eb9:	mov    ecx,esp
65006ebb:	mov    BYTE PTR [esp+0x120],0x2
65006ec3:	mov    DWORD PTR [esp+0x54],esp
65006ec7:	push   0xffffffff
65006ec9:	push   ebx
65006eca:	lea    eax,[esp+0xe0]
65006ed1:	mov    DWORD PTR [ecx+0x18],edi
65006ed4:	mov    DWORD PTR [ecx+0x14],ebx
65006ed7:	push   eax
65006ed8:	mov    WORD PTR [ecx+0x4],bx
65006edc:	call   0x65008780
65006ee1:	lea    ecx,[esp+0xa0]
65006ee8:	push   ecx
65006ee9:	mov    BYTE PTR [esp+0x124],0x1
65006ef1:	call   0x6500a030
65006ef6:	add    esp,0x3c
65006ef9:	push   eax
65006efa:	lea    ecx,[esp+0x34]
65006efe:	mov    BYTE PTR [esp+0xec],0x3
65006f06:	call   0x6500a0d0
65006f0b:	lea    edx,[esp+0x30]
65006f0f:	push   edx
65006f10:	lea    eax,[esp+0x20]
65006f14:	push   eax
65006f15:	mov    BYTE PTR [esp+0xf0],0x4
65006f1d:	call   0x650075b0
65006f22:	mov    ecx,eax
65006f24:	call   0x65007e00
65006f29:	lea    ecx,[esp+0x30]
65006f2d:	call   0x65007320
65006f32:	lea    ecx,[esp+0x68]
65006f36:	call   0x65007320
65006f3b:	mov    BYTE PTR [esp+0xe8],bl
65006f42:	cmp    DWORD PTR [esp+0xd4],0x8
65006f4a:	jb     0x65006f5c
65006f4c:	mov    ecx,DWORD PTR [esp+0xc0]
65006f53:	push   ecx
65006f54:	call   0x65011f62
65006f59:	add    esp,0x4
65006f5c:	mov    edx,DWORD PTR [ebp+0x10]
65006f5f:	movzx  eax,BYTE PTR [edx]
65006f62:	cmp    eax,0x100
65006f67:	jge    0x65006f8b
65006f69:	lea    ecx,[esp+0xa0]
65006f70:	push   ecx
65006f71:	lea    edx,[esp+0x20]
65006f75:	push   edx
65006f76:	call   0x650075b0
65006f7b:	mov    ecx,eax
65006f7d:	call   0x65007f10
65006f82:	mov    esi,DWORD PTR [eax]
65006f84:	mov    eax,DWORD PTR [eax+0x4]
65006f87:	mov    DWORD PTR [esp+0x18],eax
65006f8b:	call   0x650075b0
65006f90:	cmp    esi,ebx
65006f92:	mov    ecx,DWORD PTR [eax+0x4]
65006f95:	mov    DWORD PTR [esp+0x20],ecx
65006f99:	je     0x65006f9f
65006f9b:	cmp    esi,eax
65006f9d:	je     0x65006fa4
65006f9f:	call   0x650122d3
65006fa4:	mov    edi,DWORD PTR [esp+0x18]
65006fa8:	cmp    edi,DWORD PTR [esp+0x20]
65006fac:	je     0x65006fd1
65006fae:	cmp    esi,ebx
65006fb0:	jne    0x65006fb7
65006fb2:	call   0x650122d3
65006fb7:	cmp    edi,DWORD PTR [esi+0x4]
65006fba:	jne    0x65006fc1
65006fbc:	call   0x650122d3
65006fc1:	cmp    DWORD PTR [edi+0x40],0x8
65006fc5:	jb     0x65006fcc
65006fc7:	mov    edi,DWORD PTR [edi+0x2c]
65006fca:	jmp    0x65006fd5
65006fcc:	add    edi,0x2c
65006fcf:	jmp    0x65006fd5
65006fd1:	mov    edi,DWORD PTR [esp+0x28]
65006fd5:	cmp    DWORD PTR ds:0x6502e060,ebx
65006fdb:	jne    0x65006ff9
65006fdd:	push   0x65026630
65006fe2:	push   0x65026640
65006fe7:	call   DWORD PTR ds:0x65024074
65006fed:	push   eax
65006fee:	call   DWORD PTR ds:0x65024014
65006ff4:	mov    ds:0x6502e060,eax
65006ff9:	mov    eax,ds:0x65030290
65006ffe:	cmp    eax,ebx
65007000:	jne    0x65007010
65007002:	push   ebx
65007003:	push   ebx
65007004:	push   ebx
65007005:	call   DWORD PTR ds:0x65024060
6500700b:	mov    ds:0x65030290,eax
65007010:	push   eax
65007011:	call   DWORD PTR ds:0x6502e060
65007017:	cmp    DWORD PTR [esp+0xb8],0x8
6500701f:	jb     0x65007031
65007021:	mov    edx,DWORD PTR [esp+0xa4]
65007028:	push   edx
65007029:	call   0x65011f62
6500702e:	add    esp,0x4
65007031:	mov    eax,edi
65007033:	mov    ecx,DWORD PTR [esp+0xe0]
6500703a:	mov    DWORD PTR fs:0x0,ecx
65007041:	pop    ecx
65007042:	pop    edi
65007043:	pop    esi
65007044:	pop    ebx
65007045:	mov    ecx,DWORD PTR [esp+0xc8]
6500704c:	xor    ecx,esp
6500704e:	call   0x650127bc
65007053:	mov    esp,ebp
65007055:	pop    ebp
65007056:	ret    
65007057:	int3   
65007058:	int3   
65007059:	int3   
6500705a:	int3   
6500705b:	int3   
6500705c:	int3   
6500705d:	int3   
6500705e:	int3   
6500705f:	int3   
65007060:	push   ebp
65007061:	mov    ebp,esp
65007063:	push   0xffffffff
65007065:	push   0x65022bd0
6500706a:	mov    eax,fs:0x0
65007070:	push   eax
65007071:	push   ecx
65007072:	push   ebx
65007073:	push   esi
65007074:	push   edi
65007075:	mov    eax,ds:0x6502c09c
6500707a:	xor    eax,ebp
6500707c:	push   eax
6500707d:	lea    eax,[ebp-0xc]
65007080:	mov    fs:0x0,eax
65007086:	mov    DWORD PTR [ebp-0x10],esp
65007089:	mov    esi,DWORD PTR [ebp+0x8]
6500708c:	call   0x65008440
65007091:	mov    DWORD PTR [esi+0x4],eax
65007094:	mov    BYTE PTR [eax+0x29],0x1
65007098:	mov    eax,DWORD PTR [esi+0x4]
6500709b:	mov    DWORD PTR [eax+0x4],eax
6500709e:	mov    eax,DWORD PTR [esi+0x4]
650070a1:	mov    DWORD PTR [eax],eax
650070a3:	mov    eax,DWORD PTR [esi+0x4]
650070a6:	mov    DWORD PTR [eax+0x8],eax
650070a9:	mov    ebx,0x650303d0
650070ae:	mov    eax,esi
650070b0:	mov    DWORD PTR [esi+0x8],0x0
650070b7:	mov    DWORD PTR [ebp-0x4],0x0
650070be:	call   0x65007820
650070c3:	mov    eax,esi
650070c5:	mov    ecx,DWORD PTR [ebp-0xc]
650070c8:	mov    DWORD PTR fs:0x0,ecx
650070cf:	pop    ecx
650070d0:	pop    edi
650070d1:	pop    esi
650070d2:	pop    ebx
650070d3:	mov    esp,ebp
650070d5:	pop    ebp
650070d6:	ret    0x4
650070d9:	mov    eax,DWORD PTR [ebp+0x8]
650070dc:	call   0x65007b10
650070e1:	push   0x0
650070e3:	push   0x0
650070e5:	call   0x65012366
650070ea:	int3   
650070eb:	int3   
650070ec:	int3   
650070ed:	int3   
650070ee:	int3   
650070ef:	int3   
650070f0:	push   ebp
650070f1:	mov    ebp,esp
650070f3:	and    esp,0xfffffff8
650070f6:	sub    esp,0x8
650070f9:	push   ebx
650070fa:	push   edi
650070fb:	mov    ebx,eax
650070fd:	mov    edi,ecx
650070ff:	cmp    edi,ebx
65007101:	je     0x6500711d
65007103:	mov    eax,DWORD PTR [edi+0x4]
65007106:	mov    ecx,DWORD PTR [eax]
65007108:	push   eax
65007109:	push   edi
6500710a:	push   ecx
6500710b:	push   edi
6500710c:	lea    eax,[esp+0x18]
65007110:	push   eax
65007111:	call   0x65007710
65007116:	mov    eax,edi
65007118:	call   0x65007820
6500711d:	mov    eax,edi
6500711f:	pop    edi
65007120:	pop    ebx
65007121:	mov    esp,ebp
65007123:	pop    ebp
65007124:	ret    
65007125:	int3   
65007126:	int3   
65007127:	int3   
65007128:	int3   
65007129:	int3   
6500712a:	int3   
6500712b:	int3   
6500712c:	int3   
6500712d:	int3   
6500712e:	int3   
6500712f:	int3   
65007130:	push   ebp
65007131:	mov    ebp,esp
65007133:	and    esp,0xfffffff8
65007136:	sub    esp,0x1c
65007139:	mov    ecx,DWORD PTR [ebp+0x8]
6500713c:	mov    eax,DWORD PTR [ecx+0x4]
6500713f:	push   ebx
65007140:	push   esi
65007141:	mov    esi,DWORD PTR [eax+0x4]
65007144:	cmp    BYTE PTR [esi+0x29],0x0
65007148:	mov    ebx,eax
6500714a:	mov    al,0x1
6500714c:	push   edi
6500714d:	mov    BYTE PTR [esp+0x10],al
65007151:	jne    0x650071f2
65007157:	mov    edx,DWORD PTR [ebp+0x10]
6500715a:	mov    eax,DWORD PTR [edx+0x14]
6500715d:	mov    ecx,DWORD PTR [edx+0x18]
65007160:	mov    DWORD PTR [esp+0x18],eax
65007164:	mov    DWORD PTR [esp+0x14],eax
65007168:	mov    DWORD PTR [esp+0x1c],ecx
6500716c:	jmp    0x65007177
6500716e:	mov    edi,edi
65007170:	mov    edx,DWORD PTR [ebp+0x10]
65007173:	mov    eax,DWORD PTR [esp+0x14]
65007177:	cmp    DWORD PTR [esi+0x24],0x10
6500717b:	mov    ebx,DWORD PTR [esi+0x20]
6500717e:	mov    DWORD PTR [esp+0x20],esi
65007182:	jb     0x65007189
65007184:	mov    ecx,DWORD PTR [esi+0x10]
65007187:	jmp    0x6500718c
65007189:	lea    ecx,[esi+0x10]
6500718c:	mov    edi,DWORD PTR [esp+0x18]
65007190:	cmp    eax,edi
65007192:	mov    DWORD PTR [esp+0xc],ecx
65007196:	jae    0x6500719a
65007198:	mov    edi,eax
6500719a:	cmp    edi,ebx
6500719c:	mov    ecx,edi
6500719e:	jb     0x650071a2
650071a0:	mov    ecx,ebx
650071a2:	cmp    DWORD PTR [esp+0x1c],0x10
650071a7:	lea    eax,[edx+0x4]
650071aa:	jb     0x650071ae
650071ac:	mov    eax,DWORD PTR [eax]
650071ae:	mov    edx,DWORD PTR [esp+0xc]
650071b2:	push   ecx
650071b3:	push   edx
650071b4:	push   eax
650071b5:	call   0x65002c90
650071ba:	add    esp,0xc
650071bd:	test   eax,eax
650071bf:	jne    0x650071d3
650071c1:	cmp    edi,ebx
650071c3:	jae    0x650071ca
650071c5:	or     eax,0xffffffff
650071c8:	jmp    0x650071d1
650071ca:	xor    eax,eax
650071cc:	cmp    edi,ebx
650071ce:	setne  al
650071d1:	test   eax,eax
650071d3:	setl   al
650071d6:	test   al,al
650071d8:	mov    BYTE PTR [esp+0x10],al
650071dc:	je     0x650071e2
650071de:	mov    esi,DWORD PTR [esi]
650071e0:	jmp    0x650071e5
650071e2:	mov    esi,DWORD PTR [esi+0x8]
650071e5:	cmp    BYTE PTR [esi+0x29],0x0
650071e9:	je     0x65007170
650071eb:	mov    ebx,DWORD PTR [esp+0x20]
650071ef:	mov    ecx,DWORD PTR [ebp+0x8]
650071f2:	test   al,al
650071f4:	mov    esi,ebx
650071f6:	mov    DWORD PTR [esp+0x24],esi
650071fa:	mov    DWORD PTR [esp+0x20],ecx
650071fe:	je     0x65007243
65007200:	mov    eax,DWORD PTR [ecx+0x4]
65007203:	cmp    ebx,DWORD PTR [eax]
65007205:	jne    0x65007236
65007207:	mov    edx,DWORD PTR [ebp+0x10]
6500720a:	push   edx
6500720b:	push   0x1
6500720d:	lea    eax,[esp+0x28]
65007211:	push   eax
65007212:	push   ecx
65007213:	mov    ecx,ebx
65007215:	call   0x65007890
6500721a:	mov    edx,DWORD PTR [eax]
6500721c:	mov    ecx,DWORD PTR [ebp+0xc]
6500721f:	mov    eax,DWORD PTR [eax+0x4]
65007222:	mov    DWORD PTR [ecx+0x4],eax
65007225:	mov    DWORD PTR [ecx],edx
65007227:	mov    BYTE PTR [ecx+0x8],0x1
6500722b:	mov    eax,ecx
6500722d:	pop    edi
6500722e:	pop    esi
6500722f:	pop    ebx
65007230:	mov    esp,ebp
65007232:	pop    ebp
65007233:	ret    0xc
65007236:	lea    esi,[esp+0x20]
6500723a:	call   0x65008d30
6500723f:	mov    esi,DWORD PTR [esp+0x24]
65007243:	mov    edi,DWORD PTR [ebp+0x10]
65007246:	cmp    DWORD PTR [edi+0x18],0x10
6500724a:	mov    edx,DWORD PTR [edi+0x14]
6500724d:	lea    ecx,[esi+0xc]
65007250:	jb     0x65007257
65007252:	mov    eax,DWORD PTR [edi+0x4]
65007255:	jmp    0x6500725a
65007257:	lea    eax,[edi+0x4]
6500725a:	push   edx
6500725b:	mov    edx,DWORD PTR [ecx+0x14]
6500725e:	push   eax
6500725f:	push   edx
65007260:	push   0x0
65007262:	call   0x650073e0
65007267:	test   eax,eax
65007269:	jge    0x6500729d
6500726b:	mov    eax,DWORD PTR [esp+0x10]
6500726f:	mov    edx,DWORD PTR [ebp+0x8]
65007272:	push   edi
65007273:	push   eax
65007274:	lea    ecx,[esp+0x28]
65007278:	push   ecx
65007279:	push   edx
6500727a:	mov    ecx,ebx
6500727c:	call   0x65007890
65007281:	mov    edx,DWORD PTR [eax]
65007283:	mov    ecx,DWORD PTR [ebp+0xc]
65007286:	mov    eax,DWORD PTR [eax+0x4]
65007289:	mov    DWORD PTR [ecx+0x4],eax
6500728c:	mov    DWORD PTR [ecx],edx
6500728e:	mov    BYTE PTR [ecx+0x8],0x1
65007292:	mov    eax,ecx
65007294:	pop    edi
65007295:	pop    esi
65007296:	pop    ebx
65007297:	mov    esp,ebp
65007299:	pop    ebp
6500729a:	ret    0xc
6500729d:	mov    eax,DWORD PTR [ebp+0xc]
650072a0:	mov    ecx,DWORD PTR [esp+0x20]
650072a4:	pop    edi
650072a5:	mov    DWORD PTR [eax+0x4],esi
650072a8:	pop    esi
650072a9:	mov    DWORD PTR [eax],ecx
650072ab:	mov    BYTE PTR [eax+0x8],0x0
650072af:	pop    ebx
650072b0:	mov    esp,ebp
650072b2:	pop    ebp
650072b3:	ret    0xc
650072b6:	int3   
650072b7:	int3   
650072b8:	int3   
650072b9:	int3   
650072ba:	int3   
650072bb:	int3   
650072bc:	int3   
650072bd:	int3   
650072be:	int3   
650072bf:	int3   
650072c0:	push   ebp
650072c1:	mov    ebp,esp
650072c3:	and    esp,0xfffffff8
650072c6:	sub    esp,0x8
650072c9:	push   ebx
650072ca:	push   edi
650072cb:	mov    ecx,esi
650072cd:	mov    edi,eax
650072cf:	call   0x65008c90
650072d4:	test   esi,esi
650072d6:	mov    ebx,eax
650072d8:	jne    0x650072df
650072da:	call   0x650122d3
650072df:	mov    ecx,edi
650072e1:	mov    eax,esi
650072e3:	call   0x65008c00
650072e8:	test   esi,esi
650072ea:	mov    edi,eax
650072ec:	jne    0x650072f3
650072ee:	call   0x650122d3
650072f3:	mov    DWORD PTR [esp+0xc],0x0
650072fb:	mov    eax,DWORD PTR [esp+0xc]
650072ff:	push   eax
65007300:	push   ebx
65007301:	push   esi
65007302:	push   edi
65007303:	push   esi
65007304:	lea    ebx,[esp+0x20]
65007308:	call   0x6500a3d0
6500730d:	mov    eax,DWORD PTR [esp+0x20]
65007311:	add    esp,0x14
65007314:	pop    edi
65007315:	pop    ebx
65007316:	mov    esp,ebp
65007318:	pop    ebp
65007319:	ret    
6500731a:	int3   
6500731b:	int3   
6500731c:	int3   
6500731d:	int3   
6500731e:	int3   
6500731f:	int3   
65007320:	push   esi
65007321:	mov    esi,ecx
65007323:	cmp    DWORD PTR [esi+0x34],0x8
65007327:	push   edi
65007328:	jb     0x65007336
6500732a:	mov    eax,DWORD PTR [esi+0x20]
6500732d:	push   eax
6500732e:	call   0x65011f62
65007333:	add    esp,0x4
65007336:	xor    edi,edi
65007338:	mov    DWORD PTR [esi+0x34],0x7
6500733f:	mov    DWORD PTR [esi+0x30],edi
65007342:	mov    WORD PTR [esi+0x20],di
65007346:	cmp    DWORD PTR [esi+0x18],0x8
6500734a:	jb     0x65007358
6500734c:	mov    ecx,DWORD PTR [esi+0x4]
6500734f:	push   ecx
65007350:	call   0x65011f62
65007355:	add    esp,0x4
65007358:	mov    DWORD PTR [esi+0x14],edi
6500735b:	mov    DWORD PTR [esi+0x18],0x7
65007362:	mov    WORD PTR [esi+0x4],di
65007366:	pop    edi
65007367:	pop    esi
65007368:	ret    
65007369:	int3   
6500736a:	int3   
6500736b:	int3   
6500736c:	int3   
6500736d:	int3   
6500736e:	int3   
6500736f:	int3   
65007370:	mov    ecx,DWORD PTR [eax]
65007372:	push   esi
65007373:	mov    esi,DWORD PTR [edi]
65007375:	lea    eax,[ecx-0x10]
65007378:	sub    esi,0x10
6500737b:	cmp    eax,esi
6500737d:	je     0x650073cd
6500737f:	cmp    DWORD PTR [esi+0xc],0x0
65007383:	push   ebx
65007384:	lea    ebx,[esi+0xc]
65007387:	jl     0x650073bc
65007389:	mov    edx,DWORD PTR [eax]
6500738b:	cmp    edx,DWORD PTR [esi]
6500738d:	jne    0x650073bc
6500738f:	push   ebp
65007390:	push   eax
65007391:	call   0x650028c0
65007396:	mov    ebp,eax
65007398:	add    esp,0x4
6500739b:	or     eax,0xffffffff
6500739e:	lock xadd DWORD PTR [ebx],eax
650073a2:	dec    eax
650073a3:	test   eax,eax
650073a5:	jg     0x650073b1
650073a7:	mov    ecx,DWORD PTR [esi]
650073a9:	mov    edx,DWORD PTR [ecx]
650073ab:	mov    eax,DWORD PTR [edx+0x4]
650073ae:	push   esi
650073af:	call   eax
650073b1:	add    ebp,0x10
650073b4:	mov    DWORD PTR [edi],ebp
650073b6:	pop    ebp
650073b7:	pop    ebx
650073b8:	mov    eax,edi
650073ba:	pop    esi
650073bb:	ret    
650073bc:	mov    edx,DWORD PTR [ecx-0xc]
650073bf:	push   edx
650073c0:	push   ecx
650073c1:	mov    ecx,edi
650073c3:	call   0x65002b00
650073c8:	pop    ebx
650073c9:	mov    eax,edi
650073cb:	pop    esi
650073cc:	ret    
650073cd:	mov    eax,edi
650073cf:	pop    esi
650073d0:	ret    
650073d1:	int3   
650073d2:	int3   
650073d3:	int3   
650073d4:	int3   
650073d5:	int3   
650073d6:	int3   
650073d7:	int3   
650073d8:	int3   
650073d9:	int3   
650073da:	int3   
650073db:	int3   
650073dc:	int3   
650073dd:	int3   
650073de:	int3   
650073df:	int3   
650073e0:	push   ebx
650073e1:	push   ebp
650073e2:	mov    ebp,DWORD PTR [esp+0xc]
650073e6:	push   esi
650073e7:	push   edi
650073e8:	mov    edi,ecx
650073ea:	cmp    DWORD PTR [edi+0x14],ebp
650073ed:	jae    0x650073f4
650073ef:	call   0x65011f1e
650073f4:	mov    eax,DWORD PTR [edi+0x14]
650073f7:	mov    esi,DWORD PTR [esp+0x18]
650073fb:	sub    eax,ebp
650073fd:	cmp    eax,esi
650073ff:	jae    0x65007403
65007401:	mov    esi,eax
65007403:	mov    ebx,DWORD PTR [esp+0x20]
65007407:	cmp    esi,ebx
65007409:	mov    eax,esi
6500740b:	jb     0x6500740f
6500740d:	mov    eax,ebx
6500740f:	cmp    DWORD PTR [edi+0x18],0x10
65007413:	jb     0x6500741a
65007415:	mov    edi,DWORD PTR [edi+0x4]
65007418:	jmp    0x6500741d
6500741a:	add    edi,0x4
6500741d:	push   eax
6500741e:	mov    eax,DWORD PTR [esp+0x20]
65007422:	push   eax
65007423:	add    edi,ebp
65007425:	push   edi
65007426:	call   0x65002c90
6500742b:	add    esp,0xc
6500742e:	test   eax,eax
65007430:	jne    0x65007447
65007432:	cmp    esi,ebx
65007434:	jae    0x65007440
65007436:	pop    edi
65007437:	pop    esi
65007438:	pop    ebp
65007439:	or     eax,0xffffffff
6500743c:	pop    ebx
6500743d:	ret    0x10
65007440:	xor    eax,eax
65007442:	cmp    esi,ebx
65007444:	setne  al
65007447:	pop    edi
65007448:	pop    esi
65007449:	pop    ebp
6500744a:	pop    ebx
6500744b:	ret    0x10
6500744e:	int3   
6500744f:	int3   
65007450:	push   0xffffffff
65007452:	push   0x650228ee
65007457:	mov    eax,fs:0x0
6500745d:	push   eax
6500745e:	mov    eax,ds:0x6502c09c
65007463:	xor    eax,esp
65007465:	push   eax
65007466:	lea    eax,[esp+0x4]
6500746a:	mov    fs:0x0,eax
65007470:	test   BYTE PTR ds:0x65030364,0x1
65007477:	jne    0x650074c9
65007479:	or     DWORD PTR ds:0x65030364,0x1
65007480:	mov    ecx,0x65030348
65007485:	mov    DWORD PTR [esp+0xc],0x0
6500748d:	call   0x650098f0
65007492:	mov    ds:0x6503034c,eax
65007497:	mov    BYTE PTR [eax+0x45],0x1
6500749b:	mov    eax,ds:0x6503034c
650074a0:	mov    DWORD PTR [eax+0x4],eax
650074a3:	mov    eax,ds:0x6503034c
650074a8:	mov    DWORD PTR [eax],eax
650074aa:	mov    eax,ds:0x6503034c
650074af:	mov    DWORD PTR [eax+0x8],eax
650074b2:	push   0x65023480
650074b7:	mov    DWORD PTR ds:0x65030350,0x0
650074c1:	call   0x650128ef
650074c6:	add    esp,0x4
650074c9:	mov    eax,0x65030348
650074ce:	mov    ecx,DWORD PTR [esp+0x4]
650074d2:	mov    DWORD PTR fs:0x0,ecx
650074d9:	pop    ecx
650074da:	add    esp,0xc
650074dd:	ret    
650074de:	int3   
650074df:	int3   
650074e0:	push   0xffffffff
650074e2:	push   0x65022468
650074e7:	mov    eax,fs:0x0
650074ed:	push   eax
650074ee:	push   ecx
650074ef:	push   ebx
650074f0:	push   ebp
650074f1:	push   esi
650074f2:	push   edi
650074f3:	mov    eax,ds:0x6502c09c
650074f8:	xor    eax,esp
650074fa:	push   eax
650074fb:	lea    eax,[esp+0x18]
650074ff:	mov    fs:0x0,eax
65007505:	mov    esi,DWORD PTR [esp+0x28]
65007509:	xor    eax,eax
6500750b:	mov    DWORD PTR [esp+0x14],eax
6500750f:	mov    DWORD PTR [esp+0x20],eax
65007513:	push   0xffffffff
65007515:	mov    DWORD PTR [esi+0x14],eax
65007518:	mov    DWORD PTR [esi+0x18],0xf
6500751f:	lea    ebp,[esi+0x4]
65007522:	push   eax
65007523:	mov    BYTE PTR [ebp+0x0],al
65007526:	lea    eax,[esp+0x34]
6500752a:	push   eax
6500752b:	mov    ecx,esi
6500752d:	call   0x650017e0
65007532:	mov    eax,DWORD PTR [esi+0x14]
65007535:	mov    edi,0x1
6500753a:	cmp    eax,edi
6500753c:	jbe    0x6500757d
6500753e:	cmp    edi,eax
65007540:	jbe    0x65007547
65007542:	call   0x650122d3
65007547:	cmp    DWORD PTR [esi+0x18],0x10
6500754b:	jb     0x65007552
6500754d:	mov    ebx,DWORD PTR [ebp+0x0]
65007550:	jmp    0x65007554
65007552:	mov    ebx,ebp
65007554:	lea    ecx,[edi-0x1]
65007557:	cmp    ecx,DWORD PTR [esi+0x14]
6500755a:	jbe    0x65007561
6500755c:	call   0x650122d3
65007561:	cmp    DWORD PTR [esi+0x18],0x10
65007565:	jb     0x6500756c
65007567:	mov    eax,DWORD PTR [ebp+0x0]
6500756a:	jmp    0x6500756e
6500756c:	mov    eax,ebp
6500756e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
65007572:	xor    BYTE PTR [ebx+edi*1],dl
65007575:	add    edi,0x1
65007578:	cmp    edi,DWORD PTR [esi+0x14]
6500757b:	jb     0x65007547
6500757d:	cmp    DWORD PTR [esp+0x44],0x10
65007582:	jb     0x65007591
65007584:	mov    eax,DWORD PTR [esp+0x30]
65007588:	push   eax
65007589:	call   0x65011f62
6500758e:	add    esp,0x4
65007591:	mov    eax,esi
65007593:	mov    ecx,DWORD PTR [esp+0x18]
65007597:	mov    DWORD PTR fs:0x0,ecx
6500759e:	pop    ecx
6500759f:	pop    edi
650075a0:	pop    esi
650075a1:	pop    ebp
650075a2:	pop    ebx
650075a3:	add    esp,0x10
650075a6:	ret    
650075a7:	int3   
650075a8:	int3   
650075a9:	int3   
650075aa:	int3   
650075ab:	int3   
650075ac:	int3   
650075ad:	int3   
650075ae:	int3   
650075af:	int3   
650075b0:	push   0xffffffff
650075b2:	push   0x650228be
650075b7:	mov    eax,fs:0x0
650075bd:	push   eax
650075be:	mov    eax,ds:0x6502c09c
650075c3:	xor    eax,esp
650075c5:	push   eax
650075c6:	lea    eax,[esp+0x4]
650075ca:	mov    fs:0x0,eax
650075d0:	test   BYTE PTR ds:0x65030360,0x1
650075d7:	jne    0x65007629
650075d9:	or     DWORD PTR ds:0x65030360,0x1
650075e0:	mov    ecx,0x65030354
650075e5:	mov    DWORD PTR [esp+0xc],0x0
650075ed:	call   0x650098f0
650075f2:	mov    ds:0x65030358,eax
650075f7:	mov    BYTE PTR [eax+0x45],0x1
650075fb:	mov    eax,ds:0x65030358
65007600:	mov    DWORD PTR [eax+0x4],eax
65007603:	mov    eax,ds:0x65030358
65007608:	mov    DWORD PTR [eax],eax
6500760a:	mov    eax,ds:0x65030358
6500760f:	mov    DWORD PTR [eax+0x8],eax
65007612:	push   0x65023430
65007617:	mov    DWORD PTR ds:0x6503035c,0x0
65007621:	call   0x650128ef
65007626:	add    esp,0x4
65007629:	mov    eax,0x65030354
6500762e:	mov    ecx,DWORD PTR [esp+0x4]
65007632:	mov    DWORD PTR fs:0x0,ecx
65007639:	pop    ecx
6500763a:	add    esp,0xc
6500763d:	ret    
6500763e:	int3   
6500763f:	int3   
65007640:	push   0xffffffff
65007642:	push   0x65022438
65007647:	mov    eax,fs:0x0
6500764d:	push   eax
6500764e:	push   ecx
6500764f:	push   ebx
65007650:	push   ebp
65007651:	push   esi
65007652:	push   edi
65007653:	mov    eax,ds:0x6502c09c
65007658:	xor    eax,esp
6500765a:	push   eax
6500765b:	lea    eax,[esp+0x18]
6500765f:	mov    fs:0x0,eax
65007665:	mov    esi,DWORD PTR [esp+0x28]
65007669:	xor    eax,eax
6500766b:	mov    DWORD PTR [esp+0x14],eax
6500766f:	mov    DWORD PTR [esp+0x20],eax
65007673:	push   0xffffffff
65007675:	mov    DWORD PTR [esi+0x14],eax
65007678:	mov    DWORD PTR [esi+0x18],0x7
6500767f:	lea    ebp,[esi+0x4]
65007682:	push   eax
65007683:	mov    WORD PTR [ebp+0x0],ax
65007687:	lea    eax,[esp+0x34]
6500768b:	push   eax
6500768c:	mov    ecx,esi
6500768e:	call   0x65008780
65007693:	mov    eax,DWORD PTR [esi+0x14]
65007696:	mov    edi,0x1
6500769b:	cmp    eax,edi
6500769d:	jbe    0x650076e0
6500769f:	cmp    edi,eax
650076a1:	jbe    0x650076a8
650076a3:	call   0x650122d3
650076a8:	cmp    DWORD PTR [esi+0x18],0x8
650076ac:	jb     0x650076b3
650076ae:	mov    ebx,DWORD PTR [ebp+0x0]
650076b1:	jmp    0x650076b5
650076b3:	mov    ebx,ebp
650076b5:	lea    ecx,[edi-0x1]
650076b8:	cmp    ecx,DWORD PTR [esi+0x14]
650076bb:	jbe    0x650076c2
650076bd:	call   0x650122d3
650076c2:	cmp    DWORD PTR [esi+0x18],0x8
650076c6:	jb     0x650076cd
650076c8:	mov    eax,DWORD PTR [ebp+0x0]
650076cb:	jmp    0x650076cf
650076cd:	mov    eax,ebp
650076cf:	mov    dx,WORD PTR [eax+edi*2-0x2]
650076d4:	xor    WORD PTR [ebx+edi*2],dx
650076d8:	add    edi,0x1
650076db:	cmp    edi,DWORD PTR [esi+0x14]
650076de:	jb     0x650076a8
650076e0:	cmp    DWORD PTR [esp+0x44],0x8
650076e5:	jb     0x650076f4
650076e7:	mov    eax,DWORD PTR [esp+0x30]
650076eb:	push   eax
650076ec:	call   0x65011f62
650076f1:	add    esp,0x4
650076f4:	mov    eax,esi
650076f6:	mov    ecx,DWORD PTR [esp+0x18]
650076fa:	mov    DWORD PTR fs:0x0,ecx
65007701:	pop    ecx
65007702:	pop    edi
65007703:	pop    esi
65007704:	pop    ebp
65007705:	pop    ebx
65007706:	add    esp,0x10
65007709:	ret    
6500770a:	int3   
6500770b:	int3   
6500770c:	int3   
6500770d:	int3   
6500770e:	int3   
6500770f:	int3   
65007710:	mov    eax,DWORD PTR [edi+0x4]
65007713:	sub    esp,0xc
65007716:	push   ebx
65007717:	mov    ebx,DWORD PTR [eax]
65007719:	push   ebp
6500771a:	mov    ebp,DWORD PTR [esp+0x1c]
6500771e:	test   ebp,ebp
65007720:	push   esi
65007721:	je     0x65007727
65007723:	cmp    ebp,edi
65007725:	je     0x6500772c
65007727:	call   0x650122d3
6500772c:	mov    esi,DWORD PTR [esp+0x24]
65007730:	cmp    esi,ebx
65007732:	jne    0x65007790
65007734:	mov    eax,DWORD PTR [esp+0x28]
65007738:	test   eax,eax
6500773a:	mov    ebx,DWORD PTR [edi+0x4]
6500773d:	je     0x65007743
6500773f:	cmp    eax,edi
65007741:	je     0x65007748
65007743:	call   0x650122d3
65007748:	cmp    DWORD PTR [esp+0x2c],ebx
6500774c:	jne    0x65007790
6500774e:	mov    ecx,DWORD PTR [edi+0x4]
65007751:	mov    edx,DWORD PTR [ecx+0x4]
65007754:	push   edx
65007755:	mov    ecx,edi
65007757:	call   0x65008ba0
6500775c:	mov    eax,DWORD PTR [edi+0x4]
6500775f:	mov    DWORD PTR [eax+0x4],eax
65007762:	mov    eax,DWORD PTR [edi+0x4]
65007765:	mov    DWORD PTR [edi+0x8],0x0
6500776c:	mov    DWORD PTR [eax],eax
6500776e:	mov    eax,DWORD PTR [edi+0x4]
65007771:	mov    DWORD PTR [eax+0x8],eax
65007774:	mov    eax,DWORD PTR [edi+0x4]
65007777:	mov    ecx,DWORD PTR [eax]
65007779:	mov    eax,DWORD PTR [esp+0x1c]
6500777d:	mov    DWORD PTR [eax+0x4],ecx
65007780:	mov    DWORD PTR [eax],edi
65007782:	pop    esi
65007783:	pop    ebp
65007784:	pop    ebx
65007785:	add    esp,0xc
65007788:	ret    0x14
6500778b:	jmp    0x65007790
6500778d:	lea    ecx,[ecx+0x0]
65007790:	test   ebp,ebp
65007792:	je     0x6500779a
65007794:	cmp    ebp,DWORD PTR [esp+0x28]
65007798:	je     0x6500779f
6500779a:	call   0x650122d3
6500779f:	cmp    esi,DWORD PTR [esp+0x2c]
650077a3:	je     0x6500780c
650077a5:	test   ebp,ebp
650077a7:	mov    DWORD PTR [esp+0x24],esi
650077ab:	jne    0x650077b2
650077ad:	call   0x650122d3
650077b2:	cmp    BYTE PTR [esi+0x29],0x0
650077b6:	je     0x650077bf
650077b8:	call   0x650122d3
650077bd:	jmp    0x650077f9
650077bf:	mov    eax,DWORD PTR [esi+0x8]
650077c2:	cmp    BYTE PTR [eax+0x29],0x0
650077c6:	jne    0x650077de
650077c8:	mov    esi,eax
650077ca:	mov    eax,DWORD PTR [esi]
650077cc:	cmp    BYTE PTR [eax+0x29],0x0
650077d0:	jne    0x650077f9
650077d2:	mov    esi,eax
650077d4:	mov    eax,DWORD PTR [esi]
650077d6:	cmp    BYTE PTR [eax+0x29],0x0
650077da:	je     0x650077d2
650077dc:	jmp    0x650077f9
650077de:	mov    eax,DWORD PTR [esi+0x4]
650077e1:	cmp    BYTE PTR [eax+0x29],0x0
650077e5:	jne    0x650077f7
650077e7:	cmp    esi,DWORD PTR [eax+0x8]
650077ea:	jne    0x650077f7
650077ec:	mov    esi,eax
650077ee:	mov    eax,DWORD PTR [eax+0x4]
650077f1:	cmp    BYTE PTR [eax+0x29],0x0
650077f5:	je     0x650077e7
650077f7:	mov    esi,eax
650077f9:	mov    edx,DWORD PTR [esp+0x24]
650077fd:	push   edx
650077fe:	push   ebp
650077ff:	lea    eax,[esp+0x18]
65007803:	push   eax
65007804:	push   edi
65007805:	call   0x65007fb0
6500780a:	jmp    0x65007790
6500780c:	mov    eax,DWORD PTR [esp+0x1c]
65007810:	mov    DWORD PTR [eax+0x4],esi
65007813:	pop    esi
65007814:	mov    DWORD PTR [eax],ebp
65007816:	pop    ebp
65007817:	pop    ebx
65007818:	add    esp,0xc
6500781b:	ret    0x14
6500781e:	int3   
6500781f:	int3   
65007820:	push   esi
65007821:	mov    esi,eax
65007823:	mov    eax,DWORD PTR [ebx+0x4]
65007826:	push   edi
65007827:	mov    edi,DWORD PTR [esi+0x4]
6500782a:	add    eax,0x4
6500782d:	mov    eax,DWORD PTR [eax]
6500782f:	push   edi
65007830:	push   eax
65007831:	mov    ecx,esi
65007833:	call   0x650082c0
65007838:	mov    DWORD PTR [edi+0x4],eax
6500783b:	mov    ecx,DWORD PTR [ebx+0x8]
6500783e:	mov    edx,DWORD PTR [esi+0x4]
65007841:	mov    DWORD PTR [esi+0x8],ecx
65007844:	mov    eax,DWORD PTR [edx+0x4]
65007847:	cmp    BYTE PTR [eax+0x29],0x0
6500784b:	jne    0x65007881
6500784d:	mov    ecx,DWORD PTR [eax]
6500784f:	cmp    BYTE PTR [ecx+0x29],0x0
65007853:	jne    0x6500785f
65007855:	mov    eax,ecx
65007857:	mov    ecx,DWORD PTR [eax]
65007859:	cmp    BYTE PTR [ecx+0x29],0x0
6500785d:	je     0x65007855
6500785f:	mov    DWORD PTR [edx],eax
65007861:	mov    esi,DWORD PTR [esi+0x4]
65007864:	mov    ecx,DWORD PTR [esi+0x4]
65007867:	mov    eax,DWORD PTR [ecx+0x8]
6500786a:	cmp    BYTE PTR [eax+0x29],0x0
6500786e:	jne    0x6500787b
65007870:	mov    ecx,eax
65007872:	mov    eax,DWORD PTR [ecx+0x8]
65007875:	cmp    BYTE PTR [eax+0x29],0x0
65007879:	je     0x65007870
6500787b:	pop    edi
6500787c:	mov    DWORD PTR [esi+0x8],ecx
6500787f:	pop    esi
65007880:	ret    
65007881:	mov    DWORD PTR [edx],edx
65007883:	mov    esi,DWORD PTR [esi+0x4]
65007886:	pop    edi
65007887:	mov    DWORD PTR [esi+0x8],esi
6500788a:	pop    esi
6500788b:	ret    
6500788c:	int3   
6500788d:	int3   
6500788e:	int3   
6500788f:	int3   
65007890:	push   0xffffffff
65007892:	push   0x65022888
65007897:	mov    eax,fs:0x0
6500789d:	push   eax
6500789e:	sub    esp,0x44
650078a1:	push   ebx
650078a2:	push   ebp
650078a3:	push   esi
650078a4:	push   edi
650078a5:	mov    eax,ds:0x6502c09c
650078aa:	xor    eax,esp
650078ac:	push   eax
650078ad:	lea    eax,[esp+0x58]
650078b1:	mov    fs:0x0,eax
650078b7:	mov    esi,ecx
650078b9:	mov    ebp,DWORD PTR [esp+0x68]
650078bd:	xor    ebx,ebx
650078bf:	cmp    DWORD PTR [ebp+0x8],0x9249248
650078c6:	jb     0x65007911
650078c8:	push   0x13
650078ca:	push   0x65028204
650078cf:	lea    ecx,[esp+0x1c]
650078d3:	mov    DWORD PTR [esp+0x34],0xf
650078db:	mov    DWORD PTR [esp+0x30],ebx
650078df:	mov    BYTE PTR [esp+0x20],bl
650078e3:	call   0x650018c0
650078e8:	lea    eax,[esp+0x14]
650078ec:	push   eax
650078ed:	lea    ecx,[esp+0x34]
650078f1:	mov    DWORD PTR [esp+0x64],ebx
650078f5:	call   0x65002d20
650078fa:	push   0x65029f18
650078ff:	lea    ecx,[esp+0x34]
65007903:	push   ecx
65007904:	mov    DWORD PTR [esp+0x38],0x65024c10
6500790c:	call   0x65012366
65007911:	mov    edx,DWORD PTR [esp+0x74]
65007915:	mov    eax,DWORD PTR [ebp+0x4]
65007918:	push   ebx
65007919:	push   edx
6500791a:	push   eax
6500791b:	push   esi
6500791c:	push   eax
6500791d:	call   0x65008480
65007922:	mov    ecx,DWORD PTR [ebp+0x4]
65007925:	mov    edx,eax
65007927:	mov    eax,0x1
6500792c:	add    DWORD PTR [ebp+0x8],eax
6500792f:	cmp    esi,ecx
65007931:	mov    DWORD PTR [esp+0x68],edx
65007935:	jne    0x65007944
65007937:	mov    DWORD PTR [ecx+0x4],edx
6500793a:	mov    ecx,DWORD PTR [ebp+0x4]
6500793d:	mov    DWORD PTR [ecx],edx
6500793f:	mov    ecx,DWORD PTR [ebp+0x4]
65007942:	jmp    0x65007962
65007944:	cmp    BYTE PTR [esp+0x70],bl
65007948:	je     0x65007957
6500794a:	mov    DWORD PTR [esi],edx
6500794c:	mov    ecx,DWORD PTR [ebp+0x4]
6500794f:	cmp    esi,DWORD PTR [ecx]
65007951:	jne    0x65007965
65007953:	mov    DWORD PTR [ecx],edx
65007955:	jmp    0x65007965
65007957:	mov    DWORD PTR [esi+0x8],edx
6500795a:	mov    ecx,DWORD PTR [ebp+0x4]
6500795d:	cmp    esi,DWORD PTR [ecx+0x8]
65007960:	jne    0x65007965
65007962:	mov    DWORD PTR [ecx+0x8],edx
65007965:	mov    esi,DWORD PTR [edx+0x4]
65007968:	cmp    BYTE PTR [esi+0x28],bl
6500796b:	lea    ecx,[edx+0x4]
6500796e:	jne    0x65007ae6
65007974:	mov    esi,DWORD PTR [ecx]
65007976:	mov    edi,DWORD PTR [esi+0x4]
65007979:	cmp    esi,DWORD PTR [edi]
6500797b:	jne    0x65007a27
65007981:	mov    edi,DWORD PTR [edi+0x8]
65007984:	cmp    BYTE PTR [edi+0x28],bl
65007987:	je     0x65007a2e
6500798d:	cmp    edx,DWORD PTR [esi+0x8]
65007990:	jne    0x650079cd
65007992:	mov    edx,esi
65007994:	mov    esi,DWORD PTR [edx+0x8]
65007997:	mov    ecx,DWORD PTR [esi]
65007999:	mov    DWORD PTR [edx+0x8],ecx
6500799c:	mov    ecx,DWORD PTR [esi]
6500799e:	cmp    BYTE PTR [ecx+0x29],bl
650079a1:	jne    0x650079a6
650079a3:	mov    DWORD PTR [ecx+0x4],edx
650079a6:	mov    edi,DWORD PTR [edx+0x4]
650079a9:	lea    ecx,[edx+0x4]
650079ac:	mov    DWORD PTR [esi+0x4],edi
650079af:	mov    edi,DWORD PTR [ebp+0x4]
650079b2:	cmp    edx,DWORD PTR [edi+0x4]
650079b5:	jne    0x650079bc
650079b7:	mov    DWORD PTR [edi+0x4],esi
650079ba:	jmp    0x650079c9
650079bc:	mov    edi,DWORD PTR [ecx]
650079be:	cmp    edx,DWORD PTR [edi]
650079c0:	jne    0x650079c6
650079c2:	mov    DWORD PTR [edi],esi
650079c4:	jmp    0x650079c9
650079c6:	mov    DWORD PTR [edi+0x8],esi
650079c9:	mov    DWORD PTR [esi],edx
650079cb:	mov    DWORD PTR [ecx],esi
650079cd:	mov    esi,DWORD PTR [ecx]
650079cf:	mov    BYTE PTR [esi+0x28],al
650079d2:	mov    esi,DWORD PTR [ecx]
650079d4:	mov    esi,DWORD PTR [esi+0x4]
650079d7:	mov    BYTE PTR [esi+0x28],bl
650079da:	mov    ecx,DWORD PTR [ecx]
650079dc:	mov    ecx,DWORD PTR [ecx+0x4]
650079df:	mov    esi,DWORD PTR [ecx]
650079e1:	mov    edi,DWORD PTR [esi+0x8]
650079e4:	mov    DWORD PTR [ecx],edi
650079e6:	mov    edi,DWORD PTR [esi+0x8]
650079e9:	cmp    BYTE PTR [edi+0x29],bl
650079ec:	jne    0x650079f1
650079ee:	mov    DWORD PTR [edi+0x4],ecx
650079f1:	mov    edi,DWORD PTR [ecx+0x4]
650079f4:	mov    DWORD PTR [esi+0x4],edi
650079f7:	mov    edi,DWORD PTR [ebp+0x4]
650079fa:	cmp    ecx,DWORD PTR [edi+0x4]
650079fd:	jne    0x65007a0a
650079ff:	mov    DWORD PTR [edi+0x4],esi
65007a02:	mov    DWORD PTR [esi+0x8],ecx
65007a05:	jmp    0x65007ad0
65007a0a:	mov    edi,DWORD PTR [ecx+0x4]
65007a0d:	cmp    ecx,DWORD PTR [edi+0x8]
65007a10:	jne    0x65007a1d
65007a12:	mov    DWORD PTR [edi+0x8],esi
65007a15:	mov    DWORD PTR [esi+0x8],ecx
65007a18:	jmp    0x65007ad0
65007a1d:	mov    DWORD PTR [edi],esi
65007a1f:	mov    DWORD PTR [esi+0x8],ecx
65007a22:	jmp    0x65007ad0
65007a27:	mov    edi,DWORD PTR [edi]
65007a29:	cmp    BYTE PTR [edi+0x28],bl
65007a2c:	jne    0x65007a48
65007a2e:	mov    edx,esi
65007a30:	mov    BYTE PTR [edx+0x28],al
65007a33:	mov    BYTE PTR [edi+0x28],al
65007a36:	mov    edx,DWORD PTR [ecx]
65007a38:	mov    edx,DWORD PTR [edx+0x4]
65007a3b:	mov    BYTE PTR [edx+0x28],bl
65007a3e:	mov    ecx,DWORD PTR [ecx]
65007a40:	mov    edx,DWORD PTR [ecx+0x4]
65007a43:	jmp    0x65007ad3
65007a48:	cmp    edx,DWORD PTR [esi]
65007a4a:	jne    0x65007a89
65007a4c:	mov    edx,esi
65007a4e:	mov    esi,DWORD PTR [edx]
65007a50:	mov    ecx,DWORD PTR [esi+0x8]
65007a53:	mov    DWORD PTR [edx],ecx
65007a55:	mov    ecx,DWORD PTR [esi+0x8]
65007a58:	cmp    BYTE PTR [ecx+0x29],bl
65007a5b:	jne    0x65007a60
65007a5d:	mov    DWORD PTR [ecx+0x4],edx
65007a60:	mov    edi,DWORD PTR [edx+0x4]
65007a63:	lea    ecx,[edx+0x4]
65007a66:	mov    DWORD PTR [esi+0x4],edi
65007a69:	mov    edi,DWORD PTR [ebp+0x4]
65007a6c:	cmp    edx,DWORD PTR [edi+0x4]
65007a6f:	jne    0x65007a76
65007a71:	mov    DWORD PTR [edi+0x4],esi
65007a74:	jmp    0x65007a84
65007a76:	mov    edi,DWORD PTR [ecx]
65007a78:	cmp    edx,DWORD PTR [edi+0x8]
65007a7b:	jne    0x65007a82
65007a7d:	mov    DWORD PTR [edi+0x8],esi
65007a80:	jmp    0x65007a84
65007a82:	mov    DWORD PTR [edi],esi
65007a84:	mov    DWORD PTR [esi+0x8],edx
65007a87:	mov    DWORD PTR [ecx],esi
65007a89:	mov    esi,DWORD PTR [ecx]
65007a8b:	mov    BYTE PTR [esi+0x28],al
65007a8e:	mov    esi,DWORD PTR [ecx]
65007a90:	mov    esi,DWORD PTR [esi+0x4]
65007a93:	mov    BYTE PTR [esi+0x28],bl
65007a96:	mov    ecx,DWORD PTR [ecx]
65007a98:	mov    ecx,DWORD PTR [ecx+0x4]
65007a9b:	mov    esi,DWORD PTR [ecx+0x8]
65007a9e:	mov    edi,DWORD PTR [esi]
65007aa0:	mov    DWORD PTR [ecx+0x8],edi
65007aa3:	mov    edi,DWORD PTR [esi]
65007aa5:	cmp    BYTE PTR [edi+0x29],bl
65007aa8:	jne    0x65007aad
65007aaa:	mov    DWORD PTR [edi+0x4],ecx
65007aad:	mov    edi,DWORD PTR [ecx+0x4]
65007ab0:	mov    DWORD PTR [esi+0x4],edi
65007ab3:	mov    edi,DWORD PTR [ebp+0x4]
65007ab6:	cmp    ecx,DWORD PTR [edi+0x4]
65007ab9:	jne    0x65007ac0
65007abb:	mov    DWORD PTR [edi+0x4],esi
65007abe:	jmp    0x65007ace
65007ac0:	mov    edi,DWORD PTR [ecx+0x4]
65007ac3:	cmp    ecx,DWORD PTR [edi]
65007ac5:	jne    0x65007acb
65007ac7:	mov    DWORD PTR [edi],esi
65007ac9:	jmp    0x65007ace
65007acb:	mov    DWORD PTR [edi+0x8],esi
65007ace:	mov    DWORD PTR [esi],ecx
65007ad0:	mov    DWORD PTR [ecx+0x4],esi
65007ad3:	mov    esi,DWORD PTR [edx+0x4]
65007ad6:	cmp    BYTE PTR [esi+0x28],bl
65007ad9:	lea    ecx,[edx+0x4]
65007adc:	je     0x65007974
65007ae2:	mov    edx,DWORD PTR [esp+0x68]
65007ae6:	mov    ecx,DWORD PTR [ebp+0x4]
65007ae9:	mov    ecx,DWORD PTR [ecx+0x4]
65007aec:	mov    BYTE PTR [ecx+0x28],al
65007aef:	mov    ecx,DWORD PTR [esp+0x6c]
65007af3:	mov    DWORD PTR [ecx+0x4],edx
65007af6:	mov    DWORD PTR [ecx],ebp
65007af8:	mov    eax,ecx
65007afa:	mov    ecx,DWORD PTR [esp+0x58]
65007afe:	mov    DWORD PTR fs:0x0,ecx
65007b05:	pop    ecx
65007b06:	pop    edi
65007b07:	pop    esi
65007b08:	pop    ebp
65007b09:	pop    ebx
65007b0a:	add    esp,0x50
65007b0d:	ret    0x10
65007b10:	push   ebp
65007b11:	mov    ebp,esp
65007b13:	and    esp,0xfffffff8
65007b16:	sub    esp,0xc
65007b19:	push   edi
65007b1a:	mov    edi,eax
65007b1c:	mov    eax,DWORD PTR [edi+0x4]
65007b1f:	mov    ecx,DWORD PTR [eax]
65007b21:	push   eax
65007b22:	push   edi
65007b23:	push   ecx
65007b24:	push   edi
65007b25:	lea    eax,[esp+0x18]
65007b29:	push   eax
65007b2a:	call   0x65007710
65007b2f:	mov    ecx,DWORD PTR [edi+0x4]
65007b32:	push   ecx
65007b33:	call   0x65011f62
65007b38:	add    esp,0x4
65007b3b:	xor    eax,eax
65007b3d:	mov    DWORD PTR [edi+0x4],eax
65007b40:	mov    DWORD PTR [edi+0x8],eax
65007b43:	pop    edi
65007b44:	mov    esp,ebp
65007b46:	pop    ebp
65007b47:	ret    
65007b48:	int3   
65007b49:	int3   
65007b4a:	int3   
65007b4b:	int3   
65007b4c:	int3   
65007b4d:	int3   
65007b4e:	int3   
65007b4f:	int3   
65007b50:	cmp    DWORD PTR [esi],0x0
65007b53:	jne    0x65007b5a
65007b55:	call   0x650122d3
65007b5a:	mov    eax,DWORD PTR [esi+0x4]
65007b5d:	cmp    BYTE PTR [eax+0x29],0x0
65007b61:	je     0x65007b68
65007b63:	jmp    0x650122d3
65007b68:	mov    ecx,DWORD PTR [eax+0x8]
65007b6b:	cmp    BYTE PTR [ecx+0x29],0x0
65007b6f:	jne    0x65007b8e
65007b71:	mov    eax,DWORD PTR [ecx]
65007b73:	cmp    BYTE PTR [eax+0x29],0x0
65007b77:	jne    0x65007b8a
65007b79:	lea    esp,[esp+0x0]
65007b80:	mov    ecx,eax
65007b82:	mov    eax,DWORD PTR [ecx]
65007b84:	cmp    BYTE PTR [eax+0x29],0x0
65007b88:	je     0x65007b80
65007b8a:	mov    DWORD PTR [esi+0x4],ecx
65007b8d:	ret    
65007b8e:	mov    eax,DWORD PTR [eax+0x4]
65007b91:	cmp    BYTE PTR [eax+0x29],0x0
65007b95:	jne    0x65007bad
65007b97:	mov    ecx,DWORD PTR [esi+0x4]
65007b9a:	cmp    ecx,DWORD PTR [eax+0x8]
65007b9d:	jne    0x65007bad
65007b9f:	mov    DWORD PTR [esi+0x4],eax
65007ba2:	mov    edx,eax
65007ba4:	mov    eax,DWORD PTR [edx+0x4]
65007ba7:	cmp    BYTE PTR [eax+0x29],0x0
65007bab:	je     0x65007b97
65007bad:	mov    DWORD PTR [esi+0x4],eax
65007bb0:	ret    
65007bb1:	int3   
65007bb2:	int3   
65007bb3:	int3   
65007bb4:	int3   
65007bb5:	int3   
65007bb6:	int3   
65007bb7:	int3   
65007bb8:	int3   
65007bb9:	int3   
65007bba:	int3   
65007bbb:	int3   
65007bbc:	int3   
65007bbd:	int3   
65007bbe:	int3   
65007bbf:	int3   
65007bc0:	push   ebp
65007bc1:	mov    ebp,esp
65007bc3:	and    esp,0xfffffff8
65007bc6:	sub    esp,0x24
65007bc9:	push   ebx
65007bca:	push   esi
65007bcb:	push   edi
65007bcc:	mov    edi,ecx
65007bce:	mov    eax,DWORD PTR [edi+0x4]
65007bd1:	mov    esi,DWORD PTR [eax+0x4]
65007bd4:	cmp    BYTE PTR [esi+0x45],0x0
65007bd8:	mov    ecx,eax
65007bda:	mov    al,0x1
65007bdc:	mov    DWORD PTR [esp+0x28],edi
65007be0:	mov    DWORD PTR [esp+0x10],ecx
65007be4:	mov    BYTE PTR [esp+0x18],al
65007be8:	jne    0x65007c88
65007bee:	mov    edx,DWORD PTR [ebp+0xc]
65007bf1:	mov    eax,DWORD PTR [edx+0x14]
65007bf4:	mov    ecx,DWORD PTR [edx+0x18]
65007bf7:	mov    DWORD PTR [esp+0x20],eax
65007bfb:	mov    DWORD PTR [esp+0x1c],eax
65007bff:	mov    DWORD PTR [esp+0x24],ecx
65007c03:	jmp    0x65007c0c
65007c05:	mov    edx,DWORD PTR [ebp+0xc]
65007c08:	mov    eax,DWORD PTR [esp+0x1c]
65007c0c:	cmp    DWORD PTR [esi+0x24],0x10
65007c10:	mov    ebx,DWORD PTR [esi+0x20]
65007c13:	mov    DWORD PTR [esp+0x10],esi
65007c17:	jb     0x65007c1e
65007c19:	mov    ecx,DWORD PTR [esi+0x10]
65007c1c:	jmp    0x65007c21
65007c1e:	lea    ecx,[esi+0x10]
65007c21:	mov    edi,DWORD PTR [esp+0x20]
65007c25:	cmp    eax,edi
65007c27:	mov    DWORD PTR [esp+0x14],ecx
65007c2b:	jae    0x65007c2f
65007c2d:	mov    edi,eax
65007c2f:	cmp    edi,ebx
65007c31:	mov    ecx,edi
65007c33:	jb     0x65007c37
65007c35:	mov    ecx,ebx
65007c37:	cmp    DWORD PTR [esp+0x24],0x10
65007c3c:	lea    eax,[edx+0x4]
65007c3f:	jb     0x65007c43
65007c41:	mov    eax,DWORD PTR [eax]
65007c43:	mov    edx,DWORD PTR [esp+0x14]
65007c47:	push   ecx
65007c48:	push   edx
65007c49:	push   eax
65007c4a:	call   0x65002c90
65007c4f:	add    esp,0xc
65007c52:	test   eax,eax
65007c54:	jne    0x65007c68
65007c56:	cmp    edi,ebx
65007c58:	jae    0x65007c5f
65007c5a:	or     eax,0xffffffff
65007c5d:	jmp    0x65007c66
65007c5f:	xor    eax,eax
65007c61:	cmp    edi,ebx
65007c63:	setne  al
65007c66:	test   eax,eax
65007c68:	setl   al
65007c6b:	test   al,al
65007c6d:	mov    BYTE PTR [esp+0x18],al
65007c71:	je     0x65007c77
65007c73:	mov    esi,DWORD PTR [esi]
65007c75:	jmp    0x65007c7a
65007c77:	mov    esi,DWORD PTR [esi+0x8]
65007c7a:	cmp    BYTE PTR [esi+0x45],0x0
65007c7e:	je     0x65007c05
65007c80:	mov    edi,DWORD PTR [esp+0x28]
65007c84:	mov    ecx,DWORD PTR [esp+0x10]
65007c88:	test   al,al
65007c8a:	mov    esi,ecx
65007c8c:	mov    DWORD PTR [esp+0x2c],esi
65007c90:	mov    DWORD PTR [esp+0x28],edi
65007c94:	je     0x65007cd9
65007c96:	mov    eax,DWORD PTR [edi+0x4]
65007c99:	cmp    ecx,DWORD PTR [eax]
65007c9b:	jne    0x65007ccc
65007c9d:	mov    edx,DWORD PTR [ebp+0xc]
65007ca0:	push   edx
65007ca1:	push   ecx
65007ca2:	push   0x1
65007ca4:	lea    eax,[esp+0x34]
65007ca8:	push   eax
65007ca9:	mov    ecx,edi
65007cab:	call   0x65008530
65007cb0:	mov    ecx,eax
65007cb2:	mov    edx,DWORD PTR [ecx]
65007cb4:	mov    eax,DWORD PTR [ebp+0x8]
65007cb7:	mov    ecx,DWORD PTR [ecx+0x4]
65007cba:	mov    DWORD PTR [eax+0x4],ecx
65007cbd:	mov    BYTE PTR [eax+0x8],0x1
65007cc1:	mov    DWORD PTR [eax],edx
65007cc3:	pop    edi
65007cc4:	pop    esi
65007cc5:	pop    ebx
65007cc6:	mov    esp,ebp
65007cc8:	pop    ebp
65007cc9:	ret    0x8
65007ccc:	lea    ecx,[esp+0x28]
65007cd0:	call   0x650091e0
65007cd5:	mov    esi,DWORD PTR [esp+0x2c]
65007cd9:	mov    ebx,DWORD PTR [ebp+0xc]
65007cdc:	cmp    DWORD PTR [ebx+0x18],0x10
65007ce0:	mov    edx,DWORD PTR [ebx+0x14]
65007ce3:	lea    ecx,[esi+0xc]
65007ce6:	jb     0x65007ced
65007ce8:	mov    eax,DWORD PTR [ebx+0x4]
65007ceb:	jmp    0x65007cf0
65007ced:	lea    eax,[ebx+0x4]
65007cf0:	push   edx
65007cf1:	mov    edx,DWORD PTR [ecx+0x14]
65007cf4:	push   eax
65007cf5:	push   edx
65007cf6:	push   0x0
65007cf8:	call   0x650073e0
65007cfd:	test   eax,eax
65007cff:	jge    0x65007d34
65007d01:	mov    eax,DWORD PTR [esp+0x10]
65007d05:	mov    ecx,DWORD PTR [esp+0x18]
65007d09:	push   ebx
65007d0a:	push   eax
65007d0b:	push   ecx
65007d0c:	lea    edx,[esp+0x34]
65007d10:	push   edx
65007d11:	mov    ecx,edi
65007d13:	call   0x65008530
65007d18:	mov    ecx,eax
65007d1a:	mov    edx,DWORD PTR [ecx]
65007d1c:	mov    eax,DWORD PTR [ebp+0x8]
65007d1f:	mov    ecx,DWORD PTR [ecx+0x4]
65007d22:	mov    DWORD PTR [eax+0x4],ecx
65007d25:	mov    BYTE PTR [eax+0x8],0x1
65007d29:	mov    DWORD PTR [eax],edx
65007d2b:	pop    edi
65007d2c:	pop    esi
65007d2d:	pop    ebx
65007d2e:	mov    esp,ebp
65007d30:	pop    ebp
65007d31:	ret    0x8
65007d34:	mov    eax,DWORD PTR [ebp+0x8]
65007d37:	mov    edx,DWORD PTR [esp+0x28]
65007d3b:	pop    edi
65007d3c:	mov    DWORD PTR [eax+0x4],esi
65007d3f:	pop    esi
65007d40:	mov    BYTE PTR [eax+0x8],0x0
65007d44:	mov    DWORD PTR [eax],edx
65007d46:	pop    ebx
65007d47:	mov    esp,ebp
65007d49:	pop    ebp
65007d4a:	ret    0x8
65007d4d:	int3   
65007d4e:	int3   
65007d4f:	int3   
65007d50:	sub    esp,0x18
65007d53:	push   ebx
65007d54:	mov    ebx,DWORD PTR [esp+0x24]
65007d58:	push   esi
65007d59:	push   edi
65007d5a:	push   ebx
65007d5b:	mov    esi,ecx
65007d5d:	call   0x65008db0
65007d62:	test   esi,esi
65007d64:	mov    edi,eax
65007d66:	mov    DWORD PTR [esp+0x14],edi
65007d6a:	jne    0x65007d71
65007d6c:	call   0x650122d3
65007d71:	cmp    edi,DWORD PTR [esi+0x4]
65007d74:	mov    DWORD PTR [esp+0x10],esi
65007d78:	je     0x65007da4
65007d7a:	cmp    DWORD PTR [edi+0x24],0x10
65007d7e:	mov    eax,DWORD PTR [edi+0x20]
65007d81:	jb     0x65007d88
65007d83:	mov    edi,DWORD PTR [edi+0x10]
65007d86:	jmp    0x65007d8b
65007d88:	add    edi,0x10
65007d8b:	push   eax
65007d8c:	mov    eax,DWORD PTR [ebx+0x14]
65007d8f:	push   edi
65007d90:	push   eax
65007d91:	push   0x0
65007d93:	mov    ecx,ebx
65007d95:	call   0x650073e0
65007d9a:	test   eax,eax
65007d9c:	jl     0x65007da4
65007d9e:	lea    ecx,[esp+0x10]
65007da2:	jmp    0x65007db3
65007da4:	mov    ecx,DWORD PTR [esi+0x4]
65007da7:	mov    DWORD PTR [esp+0x1c],ecx
65007dab:	mov    DWORD PTR [esp+0x18],esi
65007daf:	lea    ecx,[esp+0x18]
65007db3:	mov    edx,DWORD PTR [ecx]
65007db5:	mov    eax,DWORD PTR [esp+0x28]
65007db9:	mov    ecx,DWORD PTR [ecx+0x4]
65007dbc:	pop    edi
65007dbd:	pop    esi
65007dbe:	mov    DWORD PTR [eax],edx
65007dc0:	mov    DWORD PTR [eax+0x4],ecx
65007dc3:	pop    ebx
65007dc4:	add    esp,0x18
65007dc7:	ret    0x8
65007dca:	int3   
65007dcb:	int3   
65007dcc:	int3   
65007dcd:	int3   
65007dce:	int3   
65007dcf:	int3   
65007dd0:	push   esi
65007dd1:	mov    esi,ecx
65007dd3:	cmp    DWORD PTR [esi+0x18],0x8
65007dd7:	jb     0x65007de5
65007dd9:	mov    eax,DWORD PTR [esi+0x4]
65007ddc:	push   eax
65007ddd:	call   0x65011f62
65007de2:	add    esp,0x4
65007de5:	xor    eax,eax
65007de7:	mov    DWORD PTR [esi+0x18],0x7
65007dee:	mov    DWORD PTR [esi+0x14],eax
65007df1:	mov    WORD PTR [esi+0x4],ax
65007df5:	pop    esi
65007df6:	ret    
65007df7:	int3   
65007df8:	int3   
65007df9:	int3   
65007dfa:	int3   
65007dfb:	int3   
65007dfc:	int3   
65007dfd:	int3   
65007dfe:	int3   
65007dff:	int3   
65007e00:	push   ebp
65007e01:	mov    ebp,esp
65007e03:	and    esp,0xfffffff8
65007e06:	sub    esp,0x14
65007e09:	mov    eax,DWORD PTR [ecx+0x4]
65007e0c:	push   ebx
65007e0d:	push   esi
65007e0e:	mov    esi,DWORD PTR [eax+0x4]
65007e11:	cmp    BYTE PTR [esi+0x45],0x0
65007e15:	mov    ebx,eax
65007e17:	mov    al,0x1
65007e19:	push   edi
65007e1a:	mov    edi,DWORD PTR [ebp+0xc]
65007e1d:	mov    DWORD PTR [esp+0x14],ecx
65007e21:	mov    BYTE PTR [esp+0x10],al
65007e25:	jne    0x65007e67
65007e27:	cmp    DWORD PTR [esi+0x24],0x8
65007e2b:	mov    ecx,DWORD PTR [esi+0x20]
65007e2e:	mov    ebx,esi
65007e30:	jb     0x65007e37
65007e32:	mov    eax,DWORD PTR [esi+0x10]
65007e35:	jmp    0x65007e3a
65007e37:	lea    eax,[esi+0x10]
65007e3a:	push   ecx
65007e3b:	push   eax
65007e3c:	mov    eax,DWORD PTR [edi+0x14]
65007e3f:	push   eax
65007e40:	push   0x0
65007e42:	mov    ecx,edi
65007e44:	call   0x6500a250
65007e49:	test   eax,eax
65007e4b:	setl   al
65007e4e:	test   al,al
65007e50:	mov    BYTE PTR [esp+0x10],al
65007e54:	je     0x65007e5a
65007e56:	mov    esi,DWORD PTR [esi]
65007e58:	jmp    0x65007e5d
65007e5a:	mov    esi,DWORD PTR [esi+0x8]
65007e5d:	cmp    BYTE PTR [esi+0x45],0x0
65007e61:	je     0x65007e27
65007e63:	mov    ecx,DWORD PTR [esp+0x14]
65007e67:	test   al,al
65007e69:	mov    esi,ebx
65007e6b:	mov    DWORD PTR [esp+0x1c],esi
65007e6f:	mov    DWORD PTR [esp+0x18],ecx
65007e73:	je     0x65007eb3
65007e75:	mov    edx,DWORD PTR [ecx+0x4]
65007e78:	cmp    ebx,DWORD PTR [edx]
65007e7a:	jne    0x65007ea6
65007e7c:	push   edi
65007e7d:	push   ebx
65007e7e:	push   0x1
65007e80:	lea    eax,[esp+0x24]
65007e84:	push   eax
65007e85:	call   0x65008950
65007e8a:	mov    ecx,eax
65007e8c:	mov    edx,DWORD PTR [ecx]
65007e8e:	mov    eax,DWORD PTR [ebp+0x8]
65007e91:	mov    ecx,DWORD PTR [ecx+0x4]
65007e94:	mov    DWORD PTR [eax+0x4],ecx
65007e97:	mov    BYTE PTR [eax+0x8],0x1
65007e9b:	mov    DWORD PTR [eax],edx
65007e9d:	pop    edi
65007e9e:	pop    esi
65007e9f:	pop    ebx
65007ea0:	mov    esp,ebp
65007ea2:	pop    ebp
65007ea3:	ret    0x8
65007ea6:	lea    ecx,[esp+0x18]
65007eaa:	call   0x650091e0
65007eaf:	mov    esi,DWORD PTR [esp+0x1c]
65007eb3:	cmp    DWORD PTR [edi+0x18],0x8
65007eb7:	mov    edx,DWORD PTR [edi+0x14]
65007eba:	lea    ecx,[esi+0xc]
65007ebd:	jb     0x65007ec4
65007ebf:	mov    eax,DWORD PTR [edi+0x4]
65007ec2:	jmp    0x65007ec7
65007ec4:	lea    eax,[edi+0x4]
65007ec7:	push   edx
65007ec8:	mov    edx,DWORD PTR [ecx+0x14]
65007ecb:	push   eax
65007ecc:	push   edx
65007ecd:	push   0x0
65007ecf:	call   0x6500a250
65007ed4:	test   eax,eax
65007ed6:	jge    0x65007eea
65007ed8:	mov    eax,DWORD PTR [esp+0x10]
65007edc:	push   edi
65007edd:	push   ebx
65007ede:	lea    ecx,[esp+0x20]
65007ee2:	push   eax
65007ee3:	push   ecx
65007ee4:	mov    ecx,DWORD PTR [esp+0x24]
65007ee8:	jmp    0x65007e85
65007eea:	mov    eax,DWORD PTR [ebp+0x8]
65007eed:	mov    edx,DWORD PTR [esp+0x18]
65007ef1:	pop    edi
65007ef2:	mov    DWORD PTR [eax+0x4],esi
65007ef5:	pop    esi
65007ef6:	mov    BYTE PTR [eax+0x8],0x0
65007efa:	mov    DWORD PTR [eax],edx
65007efc:	pop    ebx
65007efd:	mov    esp,ebp
65007eff:	pop    ebp
65007f00:	ret    0x8
65007f03:	int3   
65007f04:	int3   
65007f05:	int3   
65007f06:	int3   
65007f07:	int3   
65007f08:	int3   
65007f09:	int3   
65007f0a:	int3   
65007f0b:	int3   
65007f0c:	int3   
65007f0d:	int3   
65007f0e:	int3   
65007f0f:	int3   
65007f10:	sub    esp,0x18
65007f13:	push   ebx
65007f14:	mov    ebx,DWORD PTR [esp+0x24]
65007f18:	push   esi
65007f19:	push   edi
65007f1a:	push   ebx
65007f1b:	mov    esi,ecx
65007f1d:	call   0x65001000
65007f22:	test   esi,esi
65007f24:	mov    edi,eax
65007f26:	mov    DWORD PTR [esp+0x14],edi
65007f2a:	jne    0x65007f31
65007f2c:	call   0x650122d3
65007f31:	cmp    edi,DWORD PTR [esi+0x4]
65007f34:	mov    DWORD PTR [esp+0x10],esi
65007f38:	je     0x65007f64
65007f3a:	cmp    DWORD PTR [edi+0x24],0x8
65007f3e:	mov    eax,DWORD PTR [edi+0x20]
65007f41:	jb     0x65007f48
65007f43:	mov    edi,DWORD PTR [edi+0x10]
65007f46:	jmp    0x65007f4b
65007f48:	add    edi,0x10
65007f4b:	push   eax
65007f4c:	mov    eax,DWORD PTR [ebx+0x14]
65007f4f:	push   edi
65007f50:	push   eax
65007f51:	push   0x0
65007f53:	mov    ecx,ebx
65007f55:	call   0x6500a250
65007f5a:	test   eax,eax
65007f5c:	jl     0x65007f64
65007f5e:	lea    ecx,[esp+0x10]
65007f62:	jmp    0x65007f73
65007f64:	mov    ecx,DWORD PTR [esi+0x4]
65007f67:	mov    DWORD PTR [esp+0x1c],ecx
65007f6b:	mov    DWORD PTR [esp+0x18],esi
65007f6f:	lea    ecx,[esp+0x18]
65007f73:	mov    edx,DWORD PTR [ecx]
65007f75:	mov    eax,DWORD PTR [esp+0x28]
65007f79:	mov    ecx,DWORD PTR [ecx+0x4]
65007f7c:	pop    edi
65007f7d:	pop    esi
65007f7e:	mov    DWORD PTR [eax],edx
65007f80:	mov    DWORD PTR [eax+0x4],ecx
65007f83:	pop    ebx
65007f84:	add    esp,0x18
65007f87:	ret    0x8
65007f8a:	int3   
65007f8b:	int3   
65007f8c:	int3   
65007f8d:	int3   
65007f8e:	int3   
65007f8f:	int3   
65007f90:	mov    eax,DWORD PTR [esp+0x4]
65007f94:	push   esi
65007f95:	push   eax
65007f96:	mov    esi,ecx
65007f98:	call   0x65002e50
65007f9d:	mov    DWORD PTR [esi],0x65024c10
65007fa3:	mov    eax,esi
65007fa5:	pop    esi
65007fa6:	ret    0x4
65007fa9:	int3   
65007faa:	int3   
65007fab:	int3   
65007fac:	int3   
65007fad:	int3   
65007fae:	int3   
65007faf:	int3   
65007fb0:	push   0xffffffff
65007fb2:	push   0x65022858
65007fb7:	mov    eax,fs:0x0
65007fbd:	push   eax
65007fbe:	sub    esp,0x44
65007fc1:	push   ebx
65007fc2:	push   ebp
65007fc3:	push   esi
65007fc4:	push   edi
65007fc5:	mov    eax,ds:0x6502c09c
65007fca:	xor    eax,esp
65007fcc:	push   eax
65007fcd:	lea    eax,[esp+0x58]
65007fd1:	mov    fs:0x0,eax
65007fd7:	mov    eax,DWORD PTR [esp+0x74]
65007fdb:	cmp    BYTE PTR [eax+0x29],0x0
65007fdf:	je     0x6500802d
65007fe1:	push   0x1b
65007fe3:	xor    esi,esi
65007fe5:	push   0x65028218
65007fea:	lea    ecx,[esp+0x1c]
65007fee:	mov    DWORD PTR [esp+0x34],0xf
65007ff6:	mov    DWORD PTR [esp+0x30],esi
65007ffa:	mov    BYTE PTR [esp+0x20],0x0
65007fff:	call   0x650018c0
65008004:	lea    eax,[esp+0x14]
65008008:	push   eax
65008009:	lea    ecx,[esp+0x34]
6500800d:	mov    DWORD PTR [esp+0x64],esi
65008011:	call   0x65002d20
65008016:	push   0x65029edc
6500801b:	lea    ecx,[esp+0x34]
6500801f:	push   ecx
65008020:	mov    DWORD PTR [esp+0x38],0x65024c1c
65008028:	call   0x65012366
6500802d:	lea    esi,[esp+0x70]
65008031:	mov    ebp,eax
65008033:	call   0x65007b50
65008038:	mov    eax,DWORD PTR [ebp+0x0]
6500803b:	cmp    BYTE PTR [eax+0x29],0x0
6500803f:	je     0x65008046
65008041:	mov    edi,DWORD PTR [ebp+0x8]
65008044:	jmp    0x6500805e
65008046:	mov    edx,DWORD PTR [ebp+0x8]
65008049:	cmp    BYTE PTR [edx+0x29],0x0
6500804d:	je     0x65008053
6500804f:	mov    edi,eax
65008051:	jmp    0x6500805e
65008053:	mov    ecx,DWORD PTR [esp+0x74]
65008057:	cmp    ecx,ebp
65008059:	mov    edi,DWORD PTR [ecx+0x8]
6500805c:	jne    0x650080d2
6500805e:	cmp    BYTE PTR [edi+0x29],0x0
65008062:	mov    esi,DWORD PTR [ebp+0x4]
65008065:	jne    0x6500806a
65008067:	mov    DWORD PTR [edi+0x4],esi
6500806a:	mov    ecx,DWORD PTR [esp+0x68]
6500806e:	mov    eax,DWORD PTR [ecx+0x4]
65008071:	cmp    DWORD PTR [eax+0x4],ebp
65008074:	jne    0x6500807b
65008076:	mov    DWORD PTR [eax+0x4],edi
65008079:	jmp    0x65008086
6500807b:	cmp    DWORD PTR [esi],ebp
6500807d:	jne    0x65008083
6500807f:	mov    DWORD PTR [esi],edi
65008081:	jmp    0x65008086
65008083:	mov    DWORD PTR [esi+0x8],edi
65008086:	mov    edx,DWORD PTR [ecx+0x4]
65008089:	cmp    DWORD PTR [edx],ebp
6500808b:	jne    0x650080ad
6500808d:	cmp    BYTE PTR [edi+0x29],0x0
65008091:	je     0x65008097
65008093:	mov    ecx,esi
65008095:	jmp    0x650080ab
65008097:	mov    eax,DWORD PTR [edi]
65008099:	cmp    BYTE PTR [eax+0x29],0x0
6500809d:	mov    ecx,edi
6500809f:	jne    0x650080ab
650080a1:	mov    ecx,eax
650080a3:	mov    eax,DWORD PTR [ecx]
650080a5:	cmp    BYTE PTR [eax+0x29],0x0
650080a9:	je     0x650080a1
650080ab:	mov    DWORD PTR [edx],ecx
650080ad:	mov    eax,DWORD PTR [esp+0x68]
650080b1:	mov    ebx,DWORD PTR [eax+0x4]
650080b4:	cmp    DWORD PTR [ebx+0x8],ebp
650080b7:	jne    0x6500812e
650080b9:	cmp    BYTE PTR [edi+0x29],0x0
650080bd:	je     0x650080c6
650080bf:	mov    eax,esi
650080c1:	mov    DWORD PTR [ebx+0x8],eax
650080c4:	jmp    0x6500812e
650080c6:	mov    eax,edi
650080c8:	call   0x650083d0
650080cd:	mov    DWORD PTR [ebx+0x8],eax
650080d0:	jmp    0x6500812e
650080d2:	mov    DWORD PTR [eax+0x4],ecx
650080d5:	mov    edx,DWORD PTR [ebp+0x0]
650080d8:	mov    DWORD PTR [ecx],edx
650080da:	cmp    ecx,DWORD PTR [ebp+0x8]
650080dd:	jne    0x650080e3
650080df:	mov    esi,ecx
650080e1:	jmp    0x650080fd
650080e3:	cmp    BYTE PTR [edi+0x29],0x0
650080e7:	mov    esi,DWORD PTR [ecx+0x4]
650080ea:	jne    0x650080ef
650080ec:	mov    DWORD PTR [edi+0x4],esi
650080ef:	mov    DWORD PTR [esi],edi
650080f1:	mov    eax,DWORD PTR [ebp+0x8]
650080f4:	mov    DWORD PTR [ecx+0x8],eax
650080f7:	mov    edx,DWORD PTR [ebp+0x8]
650080fa:	mov    DWORD PTR [edx+0x4],ecx
650080fd:	mov    eax,DWORD PTR [esp+0x68]
65008101:	mov    eax,DWORD PTR [eax+0x4]
65008104:	cmp    DWORD PTR [eax+0x4],ebp
65008107:	jne    0x6500810e
65008109:	mov    DWORD PTR [eax+0x4],ecx
6500810c:	jmp    0x6500811c
6500810e:	mov    eax,DWORD PTR [ebp+0x4]
65008111:	cmp    DWORD PTR [eax],ebp
65008113:	jne    0x65008119
65008115:	mov    DWORD PTR [eax],ecx
65008117:	jmp    0x6500811c
65008119:	mov    DWORD PTR [eax+0x8],ecx
6500811c:	mov    edx,DWORD PTR [ebp+0x4]
6500811f:	mov    DWORD PTR [ecx+0x4],edx
65008122:	mov    dl,BYTE PTR [ebp+0x28]
65008125:	mov    al,BYTE PTR [ecx+0x28]
65008128:	mov    BYTE PTR [ecx+0x28],dl
6500812b:	mov    BYTE PTR [ebp+0x28],al
6500812e:	mov    bl,0x1
65008130:	cmp    BYTE PTR [ebp+0x28],bl
65008133:	jne    0x6500825a
65008139:	mov    eax,DWORD PTR [esp+0x68]
6500813d:	mov    ecx,DWORD PTR [eax+0x4]
65008140:	cmp    edi,DWORD PTR [ecx+0x4]
65008143:	je     0x65008257
65008149:	lea    esp,[esp+0x0]
65008150:	cmp    BYTE PTR [edi+0x28],bl
65008153:	jne    0x65008257
65008159:	mov    ecx,DWORD PTR [esi]
6500815b:	cmp    edi,ecx
6500815d:	jne    0x650081d5
6500815f:	mov    ecx,DWORD PTR [esi+0x8]
65008162:	cmp    BYTE PTR [ecx+0x28],0x0
65008166:	jne    0x6500817e
65008168:	mov    edx,DWORD PTR [esp+0x68]
6500816c:	mov    BYTE PTR [ecx+0x28],bl
6500816f:	push   edx
65008170:	mov    ecx,esi
65008172:	mov    BYTE PTR [esi+0x28],0x0
65008176:	call   0x65008380
6500817b:	mov    ecx,DWORD PTR [esi+0x8]
6500817e:	cmp    BYTE PTR [ecx+0x29],0x0
65008182:	jne    0x65008209
65008188:	mov    eax,DWORD PTR [ecx]
6500818a:	cmp    BYTE PTR [eax+0x28],bl
6500818d:	jne    0x65008197
6500818f:	mov    edx,DWORD PTR [ecx+0x8]
65008192:	cmp    BYTE PTR [edx+0x28],bl
65008195:	je     0x65008205
65008197:	mov    eax,DWORD PTR [ecx+0x8]
6500819a:	cmp    BYTE PTR [eax+0x28],bl
6500819d:	jne    0x650081b5
6500819f:	mov    edx,DWORD PTR [ecx]
650081a1:	mov    eax,DWORD PTR [esp+0x68]
650081a5:	mov    BYTE PTR [edx+0x28],bl
650081a8:	push   eax
650081a9:	mov    BYTE PTR [ecx+0x28],0x0
650081ad:	call   0x650083f0
650081b2:	mov    ecx,DWORD PTR [esi+0x8]
650081b5:	mov    dl,BYTE PTR [esi+0x28]
650081b8:	mov    BYTE PTR [ecx+0x28],dl
650081bb:	mov    BYTE PTR [esi+0x28],bl
650081be:	mov    eax,DWORD PTR [ecx+0x8]
650081c1:	mov    ecx,DWORD PTR [esp+0x68]
650081c5:	push   ecx
650081c6:	mov    ecx,esi
650081c8:	mov    BYTE PTR [eax+0x28],bl
650081cb:	call   0x65008380
650081d0:	jmp    0x65008257
650081d5:	cmp    BYTE PTR [ecx+0x28],0x0
650081d9:	jne    0x650081f0
650081db:	mov    eax,DWORD PTR [esp+0x68]
650081df:	mov    BYTE PTR [ecx+0x28],bl
650081e2:	push   eax
650081e3:	mov    ecx,esi
650081e5:	mov    BYTE PTR [esi+0x28],0x0
650081e9:	call   0x650083f0
650081ee:	mov    ecx,DWORD PTR [esi]
650081f0:	cmp    BYTE PTR [ecx+0x29],0x0
650081f4:	jne    0x65008209
650081f6:	mov    edx,DWORD PTR [ecx+0x8]
650081f9:	cmp    BYTE PTR [edx+0x28],bl
650081fc:	jne    0x65008220
650081fe:	mov    eax,DWORD PTR [ecx]
65008200:	cmp    BYTE PTR [eax+0x28],bl
65008203:	jne    0x65008220
65008205:	mov    BYTE PTR [ecx+0x28],0x0
65008209:	mov    ecx,DWORD PTR [esp+0x68]
6500820d:	mov    edx,DWORD PTR [ecx+0x4]
65008210:	mov    edi,esi
65008212:	cmp    edi,DWORD PTR [edx+0x4]
65008215:	mov    esi,DWORD PTR [esi+0x4]
65008218:	jne    0x65008150
6500821e:	jmp    0x65008257
65008220:	mov    edx,DWORD PTR [ecx]
65008222:	cmp    BYTE PTR [edx+0x28],bl
65008225:	jne    0x6500823d
65008227:	mov    eax,DWORD PTR [ecx+0x8]
6500822a:	mov    edx,DWORD PTR [esp+0x68]
6500822e:	mov    BYTE PTR [eax+0x28],bl
65008231:	push   edx
65008232:	mov    BYTE PTR [ecx+0x28],0x0
65008236:	call   0x65008380
6500823b:	mov    ecx,DWORD PTR [esi]
6500823d:	mov    al,BYTE PTR [esi+0x28]
65008240:	mov    edx,DWORD PTR [esp+0x68]
65008244:	mov    BYTE PTR [ecx+0x28],al
65008247:	mov    BYTE PTR [esi+0x28],bl
6500824a:	mov    ecx,DWORD PTR [ecx]
6500824c:	mov    BYTE PTR [ecx+0x28],bl
6500824f:	push   edx
65008250:	mov    ecx,esi
65008252:	call   0x650083f0
65008257:	mov    BYTE PTR [edi+0x28],bl
6500825a:	cmp    DWORD PTR [ebp+0x24],0x10
6500825e:	jb     0x6500826c
65008260:	mov    eax,DWORD PTR [ebp+0x10]
65008263:	push   eax
65008264:	call   0x65011f62
65008269:	add    esp,0x4
6500826c:	mov    DWORD PTR [ebp+0x24],0xf
65008273:	mov    DWORD PTR [ebp+0x20],0x0
6500827a:	push   ebp
6500827b:	mov    BYTE PTR [ebp+0x10],0x0
6500827f:	call   0x65011f62
65008284:	mov    ecx,DWORD PTR [esp+0x6c]
65008288:	mov    eax,DWORD PTR [ecx+0x8]
6500828b:	add    esp,0x4
6500828e:	test   eax,eax
65008290:	jbe    0x65008298
65008292:	add    eax,0xffffffff
65008295:	mov    DWORD PTR [ecx+0x8],eax
65008298:	mov    eax,DWORD PTR [esp+0x6c]
6500829c:	mov    ecx,DWORD PTR [esp+0x70]
650082a0:	mov    edx,DWORD PTR [esp+0x74]
650082a4:	mov    DWORD PTR [eax],ecx
650082a6:	mov    DWORD PTR [eax+0x4],edx
650082a9:	mov    ecx,DWORD PTR [esp+0x58]
650082ad:	mov    DWORD PTR fs:0x0,ecx
650082b4:	pop    ecx
650082b5:	pop    edi
650082b6:	pop    esi
650082b7:	pop    ebp
650082b8:	pop    ebx
650082b9:	add    esp,0x50
650082bc:	ret    0x10
650082bf:	int3   
650082c0:	push   ebp
650082c1:	mov    ebp,esp
650082c3:	push   0xffffffff
650082c5:	push   0x65022410
650082ca:	mov    eax,fs:0x0
650082d0:	push   eax
650082d1:	sub    esp,0xc
650082d4:	push   ebx
650082d5:	push   esi
650082d6:	push   edi
650082d7:	mov    eax,ds:0x6502c09c
650082dc:	xor    eax,ebp
650082de:	push   eax
650082df:	lea    eax,[ebp-0xc]
650082e2:	mov    fs:0x0,eax
650082e8:	mov    DWORD PTR [ebp-0x10],esp
650082eb:	mov    ebx,ecx
650082ed:	mov    DWORD PTR [ebp-0x18],ebx
650082f0:	mov    edi,DWORD PTR [ebp+0x8]
650082f3:	cmp    BYTE PTR [edi+0x29],0x0
650082f7:	mov    eax,DWORD PTR [ebx+0x4]
650082fa:	mov    DWORD PTR [ebp-0x14],eax
650082fd:	jne    0x65008344
650082ff:	movzx  ecx,BYTE PTR [edi+0x28]
65008303:	push   ecx
65008304:	mov    ecx,DWORD PTR [ebp+0xc]
65008307:	lea    edx,[edi+0xc]
6500830a:	push   edx
6500830b:	push   eax
6500830c:	push   ecx
6500830d:	push   eax
6500830e:	call   0x65008480
65008313:	mov    edx,DWORD PTR [ebp-0x14]
65008316:	cmp    BYTE PTR [edx+0x29],0x0
6500831a:	mov    esi,eax
6500831c:	je     0x65008321
6500831e:	mov    DWORD PTR [ebp-0x14],esi
65008321:	mov    DWORD PTR [ebp-0x4],0x0
65008328:	mov    eax,DWORD PTR [edi]
6500832a:	push   esi
6500832b:	push   eax
6500832c:	mov    ecx,ebx
6500832e:	call   0x650082c0
65008333:	mov    DWORD PTR [esi],eax
65008335:	mov    ecx,DWORD PTR [edi+0x8]
65008338:	push   esi
65008339:	push   ecx
6500833a:	mov    ecx,ebx
6500833c:	call   0x650082c0
65008341:	mov    DWORD PTR [esi+0x8],eax
65008344:	mov    eax,DWORD PTR [ebp-0x14]
65008347:	mov    ecx,DWORD PTR [ebp-0xc]
6500834a:	mov    DWORD PTR fs:0x0,ecx
65008351:	pop    ecx
65008352:	pop    edi
65008353:	pop    esi
65008354:	pop    ebx
65008355:	mov    esp,ebp
65008357:	pop    ebp
65008358:	ret    0x8
6500835b:	mov    edx,DWORD PTR [ebp-0x14]
6500835e:	mov    ecx,DWORD PTR [ebp-0x18]
65008361:	push   edx
65008362:	call   0x65008ba0
65008367:	push   0x0
65008369:	push   0x0
6500836b:	call   0x65012366
65008370:	int3   
65008371:	int3   
65008372:	int3   
65008373:	int3   
65008374:	int3   
65008375:	int3   
65008376:	int3   
65008377:	int3   
65008378:	int3   
65008379:	int3   
6500837a:	int3   
6500837b:	int3   
6500837c:	int3   
6500837d:	int3   
6500837e:	int3   
6500837f:	int3   
65008380:	mov    eax,DWORD PTR [ecx+0x8]
65008383:	mov    edx,DWORD PTR [eax]
65008385:	mov    DWORD PTR [ecx+0x8],edx
65008388:	mov    edx,DWORD PTR [eax]
6500838a:	cmp    BYTE PTR [edx+0x29],0x0
6500838e:	jne    0x65008393
65008390:	mov    DWORD PTR [edx+0x4],ecx
65008393:	mov    edx,DWORD PTR [ecx+0x4]
65008396:	mov    DWORD PTR [eax+0x4],edx
65008399:	mov    edx,DWORD PTR [esp+0x4]
6500839d:	mov    edx,DWORD PTR [edx+0x4]
650083a0:	cmp    ecx,DWORD PTR [edx+0x4]
650083a3:	jne    0x650083b0
650083a5:	mov    DWORD PTR [edx+0x4],eax
650083a8:	mov    DWORD PTR [eax],ecx
650083aa:	mov    DWORD PTR [ecx+0x4],eax
650083ad:	ret    0x4
650083b0:	mov    edx,DWORD PTR [ecx+0x4]
650083b3:	cmp    ecx,DWORD PTR [edx]
650083b5:	jne    0x650083c1
650083b7:	mov    DWORD PTR [edx],eax
650083b9:	mov    DWORD PTR [eax],ecx
650083bb:	mov    DWORD PTR [ecx+0x4],eax
650083be:	ret    0x4
650083c1:	mov    DWORD PTR [edx+0x8],eax
650083c4:	mov    DWORD PTR [eax],ecx
650083c6:	mov    DWORD PTR [ecx+0x4],eax
650083c9:	ret    0x4
650083cc:	int3   
650083cd:	int3   
650083ce:	int3   
650083cf:	int3   
650083d0:	mov    ecx,DWORD PTR [eax+0x8]
650083d3:	cmp    BYTE PTR [ecx+0x29],0x0
650083d7:	jne    0x650083eb
650083d9:	lea    esp,[esp+0x0]
650083e0:	mov    eax,ecx
650083e2:	mov    ecx,DWORD PTR [eax+0x8]
650083e5:	cmp    BYTE PTR [ecx+0x29],0x0
650083e9:	je     0x650083e0
650083eb:	ret    
650083ec:	int3   
650083ed:	int3   
650083ee:	int3   
650083ef:	int3   
650083f0:	mov    eax,DWORD PTR [ecx]
650083f2:	mov    edx,DWORD PTR [eax+0x8]
650083f5:	mov    DWORD PTR [ecx],edx
650083f7:	mov    edx,DWORD PTR [eax+0x8]
650083fa:	cmp    BYTE PTR [edx+0x29],0x0
650083fe:	jne    0x65008403
65008400:	mov    DWORD PTR [edx+0x4],ecx
65008403:	mov    edx,DWORD PTR [ecx+0x4]
65008406:	mov    DWORD PTR [eax+0x4],edx
65008409:	mov    edx,DWORD PTR [esp+0x4]
6500840d:	mov    edx,DWORD PTR [edx+0x4]
65008410:	cmp    ecx,DWORD PTR [edx+0x4]
65008413:	jne    0x65008421
65008415:	mov    DWORD PTR [edx+0x4],eax
65008418:	mov    DWORD PTR [eax+0x8],ecx
6500841b:	mov    DWORD PTR [ecx+0x4],eax
6500841e:	ret    0x4
65008421:	mov    edx,DWORD PTR [ecx+0x4]
65008424:	cmp    ecx,DWORD PTR [edx+0x8]
65008427:	jne    0x65008435
65008429:	mov    DWORD PTR [edx+0x8],eax
6500842c:	mov    DWORD PTR [eax+0x8],ecx
6500842f:	mov    DWORD PTR [ecx+0x4],eax
65008432:	ret    0x4
65008435:	mov    DWORD PTR [edx],eax
65008437:	mov    DWORD PTR [eax+0x8],ecx
6500843a:	mov    DWORD PTR [ecx+0x4],eax
6500843d:	ret    0x4
65008440:	push   0x2c
65008442:	call   0x650122fc
65008447:	add    esp,0x4
6500844a:	test   eax,eax
6500844c:	je     0x65008454
6500844e:	mov    DWORD PTR [eax],0x0
65008454:	lea    ecx,[eax+0x4]
65008457:	test   ecx,ecx
65008459:	je     0x65008461
6500845b:	mov    DWORD PTR [ecx],0x0
65008461:	lea    ecx,[eax+0x8]
65008464:	test   ecx,ecx
65008466:	je     0x6500846e
65008468:	mov    DWORD PTR [ecx],0x0
6500846e:	mov    BYTE PTR [eax+0x28],0x1
65008472:	mov    BYTE PTR [eax+0x29],0x0
65008476:	ret    
65008477:	int3   
65008478:	int3   
65008479:	int3   
6500847a:	int3   
6500847b:	int3   
6500847c:	int3   
6500847d:	int3   
6500847e:	int3   
6500847f:	int3   
65008480:	push   ebp
65008481:	mov    ebp,esp
65008483:	push   0xffffffff
65008485:	push   0x650223f1
6500848a:	mov    eax,fs:0x0
65008490:	push   eax
65008491:	sub    esp,0xc
65008494:	push   ebx
65008495:	push   esi
65008496:	push   edi
65008497:	mov    eax,ds:0x6502c09c
6500849c:	xor    eax,ebp
6500849e:	push   eax
6500849f:	lea    eax,[ebp-0xc]
650084a2:	mov    fs:0x0,eax
650084a8:	mov    DWORD PTR [ebp-0x10],esp
650084ab:	push   0x2c
650084ad:	call   0x650122fc
650084b2:	mov    esi,eax
650084b4:	xor    ebx,ebx
650084b6:	mov    DWORD PTR [ebp-0x4],ebx
650084b9:	add    esp,0x4
650084bc:	mov    DWORD PTR [ebp-0x14],esi
650084bf:	mov    DWORD PTR [ebp-0x18],esi
650084c2:	cmp    esi,ebx
650084c4:	mov    BYTE PTR [ebp-0x4],0x1
650084c8:	je     0x65008500
650084ca:	mov    eax,DWORD PTR [ebp+0x8]
650084cd:	mov    ecx,DWORD PTR [ebp+0xc]
650084d0:	mov    edx,DWORD PTR [ebp+0x10]
650084d3:	mov    DWORD PTR [esi],eax
650084d5:	mov    eax,DWORD PTR [ebp+0x14]
650084d8:	mov    DWORD PTR [esi+0x4],ecx
650084db:	push   0xffffffff
650084dd:	lea    ecx,[esi+0xc]
650084e0:	mov    DWORD PTR [esi+0x8],edx
650084e3:	push   ebx
650084e4:	mov    DWORD PTR [ecx+0x18],0xf
650084eb:	mov    DWORD PTR [ecx+0x14],ebx
650084ee:	push   eax
650084ef:	mov    BYTE PTR [ecx+0x4],bl
650084f2:	call   0x650017e0
650084f7:	mov    cl,BYTE PTR [ebp+0x18]
650084fa:	mov    BYTE PTR [esi+0x28],cl
650084fd:	mov    BYTE PTR [esi+0x29],bl
65008500:	mov    eax,esi
65008502:	mov    ecx,DWORD PTR [ebp-0xc]
65008505:	mov    DWORD PTR fs:0x0,ecx
6500850c:	pop    ecx
6500850d:	pop    edi
6500850e:	pop    esi
6500850f:	pop    ebx
65008510:	mov    esp,ebp
65008512:	pop    ebp
65008513:	ret    0x14
65008516:	mov    edx,DWORD PTR [ebp-0x14]
65008519:	push   edx
6500851a:	call   0x65011f62
6500851f:	add    esp,0x4
65008522:	xor    ebx,ebx
65008524:	push   ebx
65008525:	push   ebx
65008526:	call   0x65012366
6500852b:	int3   
6500852c:	int3   
6500852d:	int3   
6500852e:	int3   
6500852f:	int3   
65008530:	push   ebp
65008531:	mov    ebp,esp
65008533:	and    esp,0xfffffff8
65008536:	push   0xffffffff
65008538:	push   0x65022828
6500853d:	mov    eax,fs:0x0
65008543:	push   eax
65008544:	sub    esp,0x50
65008547:	push   ebx
65008548:	push   esi
65008549:	push   edi
6500854a:	mov    eax,ds:0x6502c09c
6500854f:	xor    eax,esp
65008551:	push   eax
65008552:	lea    eax,[esp+0x60]
65008556:	mov    fs:0x0,eax
6500855c:	mov    edi,ecx
6500855e:	xor    ebx,ebx
65008560:	cmp    DWORD PTR [edi+0x8],0x4924923
65008567:	jb     0x650085b2
65008569:	push   0x13
6500856b:	push   0x65028204
65008570:	lea    ecx,[esp+0x20]
65008574:	mov    DWORD PTR [esp+0x38],0xf
6500857c:	mov    DWORD PTR [esp+0x34],ebx
65008580:	mov    BYTE PTR [esp+0x24],bl
65008584:	call   0x650018c0
65008589:	lea    eax,[esp+0x18]
6500858d:	push   eax
6500858e:	lea    ecx,[esp+0x38]
65008592:	mov    DWORD PTR [esp+0x6c],ebx
65008596:	call   0x65002d20
6500859b:	push   0x65029f18
650085a0:	lea    ecx,[esp+0x38]
650085a4:	push   ecx
650085a5:	mov    DWORD PTR [esp+0x3c],0x65024c10
650085ad:	call   0x65012366
650085b2:	mov    edx,DWORD PTR [ebp+0x14]
650085b5:	mov    eax,DWORD PTR [edi+0x4]
650085b8:	mov    esi,DWORD PTR [ebp+0x10]
650085bb:	push   ebx
650085bc:	push   edx
650085bd:	push   eax
650085be:	push   esi
650085bf:	push   eax
650085c0:	call   0x65008e90
650085c5:	add    DWORD PTR [edi+0x8],0x1
650085c9:	mov    ecx,eax
650085cb:	mov    eax,DWORD PTR [edi+0x4]
650085ce:	cmp    esi,eax
650085d0:	mov    DWORD PTR [esp+0x14],ecx
650085d4:	jne    0x650085e6
650085d6:	mov    DWORD PTR [eax+0x4],ecx
650085d9:	mov    eax,DWORD PTR [edi+0x4]
650085dc:	mov    DWORD PTR [eax],ecx
650085de:	mov    edx,DWORD PTR [edi+0x4]
650085e1:	mov    DWORD PTR [edx+0x8],ecx
650085e4:	jmp    0x65008606
650085e6:	cmp    BYTE PTR [ebp+0xc],bl
650085e9:	je     0x650085f8
650085eb:	mov    DWORD PTR [esi],ecx
650085ed:	mov    eax,DWORD PTR [edi+0x4]
650085f0:	cmp    esi,DWORD PTR [eax]
650085f2:	jne    0x65008606
650085f4:	mov    DWORD PTR [eax],ecx
650085f6:	jmp    0x65008606
650085f8:	mov    DWORD PTR [esi+0x8],ecx
650085fb:	mov    eax,DWORD PTR [edi+0x4]
650085fe:	cmp    esi,DWORD PTR [eax+0x8]
65008601:	jne    0x65008606
65008603:	mov    DWORD PTR [eax+0x8],ecx
65008606:	mov    edx,DWORD PTR [ecx+0x4]
65008609:	cmp    BYTE PTR [edx+0x44],bl
6500860c:	lea    eax,[ecx+0x4]
6500860f:	mov    esi,ecx
65008611:	jne    0x65008752
65008617:	mov    ecx,DWORD PTR [eax]
65008619:	mov    edx,DWORD PTR [ecx+0x4]
6500861c:	cmp    ecx,DWORD PTR [edx]
6500861e:	jne    0x650086c5
65008624:	mov    edx,DWORD PTR [edx+0x8]
65008627:	cmp    BYTE PTR [edx+0x44],bl
6500862a:	je     0x650086cc
65008630:	cmp    esi,DWORD PTR [ecx+0x8]
65008633:	jne    0x65008670
65008635:	mov    esi,ecx
65008637:	mov    ecx,DWORD PTR [esi+0x8]
6500863a:	mov    eax,DWORD PTR [ecx]
6500863c:	mov    DWORD PTR [esi+0x8],eax
6500863f:	mov    eax,DWORD PTR [ecx]
65008641:	cmp    BYTE PTR [eax+0x45],bl
65008644:	jne    0x65008649
65008646:	mov    DWORD PTR [eax+0x4],esi
65008649:	mov    edx,DWORD PTR [esi+0x4]
6500864c:	lea    eax,[esi+0x4]
6500864f:	mov    DWORD PTR [ecx+0x4],edx
65008652:	mov    edx,DWORD PTR [edi+0x4]
65008655:	cmp    esi,DWORD PTR [edx+0x4]
65008658:	jne    0x6500865f
6500865a:	mov    DWORD PTR [edx+0x4],ecx
6500865d:	jmp    0x6500866c
6500865f:	mov    edx,DWORD PTR [eax]
65008661:	cmp    esi,DWORD PTR [edx]
65008663:	jne    0x65008669
65008665:	mov    DWORD PTR [edx],ecx
65008667:	jmp    0x6500866c
65008669:	mov    DWORD PTR [edx+0x8],ecx
6500866c:	mov    DWORD PTR [ecx],esi
6500866e:	mov    DWORD PTR [eax],ecx
65008670:	mov    ecx,DWORD PTR [eax]
65008672:	mov    BYTE PTR [ecx+0x44],0x1
65008676:	mov    edx,DWORD PTR [eax]
65008678:	mov    ecx,DWORD PTR [edx+0x4]
6500867b:	mov    BYTE PTR [ecx+0x44],bl
6500867e:	mov    edx,DWORD PTR [eax]
65008680:	mov    eax,DWORD PTR [edx+0x4]
65008683:	mov    ecx,DWORD PTR [eax]
65008685:	mov    edx,DWORD PTR [ecx+0x8]
65008688:	mov    DWORD PTR [eax],edx
6500868a:	mov    edx,DWORD PTR [ecx+0x8]
6500868d:	cmp    BYTE PTR [edx+0x45],bl
65008690:	jne    0x65008695
65008692:	mov    DWORD PTR [edx+0x4],eax
65008695:	mov    edx,DWORD PTR [eax+0x4]
65008698:	mov    DWORD PTR [ecx+0x4],edx
6500869b:	mov    edx,DWORD PTR [edi+0x4]
6500869e:	cmp    eax,DWORD PTR [edx+0x4]
650086a1:	jne    0x650086ae
650086a3:	mov    DWORD PTR [edx+0x4],ecx
650086a6:	mov    DWORD PTR [ecx+0x8],eax
650086a9:	jmp    0x6500873c
650086ae:	mov    edx,DWORD PTR [eax+0x4]
650086b1:	cmp    eax,DWORD PTR [edx+0x8]
650086b4:	jne    0x650086be
650086b6:	mov    DWORD PTR [edx+0x8],ecx
650086b9:	mov    DWORD PTR [ecx+0x8],eax
650086bc:	jmp    0x6500873c
650086be:	mov    DWORD PTR [edx],ecx
650086c0:	mov    DWORD PTR [ecx+0x8],eax
650086c3:	jmp    0x6500873c
650086c5:	mov    edx,DWORD PTR [edx]
650086c7:	cmp    BYTE PTR [edx+0x44],bl
650086ca:	jne    0x650086e3
650086cc:	mov    BYTE PTR [ecx+0x44],0x1
650086d0:	mov    BYTE PTR [edx+0x44],0x1
650086d4:	mov    edx,DWORD PTR [eax]
650086d6:	mov    ecx,DWORD PTR [edx+0x4]
650086d9:	mov    BYTE PTR [ecx+0x44],bl
650086dc:	mov    edx,DWORD PTR [eax]
650086de:	mov    esi,DWORD PTR [edx+0x4]
650086e1:	jmp    0x6500873f
650086e3:	cmp    esi,DWORD PTR [ecx]
650086e5:	jne    0x650086f1
650086e7:	mov    esi,ecx
650086e9:	push   esi
650086ea:	mov    ecx,edi
650086ec:	call   0x65008fd0
650086f1:	mov    eax,DWORD PTR [esi+0x4]
650086f4:	mov    BYTE PTR [eax+0x44],0x1
650086f8:	mov    ecx,DWORD PTR [esi+0x4]
650086fb:	mov    edx,DWORD PTR [ecx+0x4]
650086fe:	mov    BYTE PTR [edx+0x44],bl
65008701:	mov    eax,DWORD PTR [esi+0x4]
65008704:	mov    eax,DWORD PTR [eax+0x4]
65008707:	mov    ecx,DWORD PTR [eax+0x8]
6500870a:	mov    edx,DWORD PTR [ecx]
6500870c:	mov    DWORD PTR [eax+0x8],edx
6500870f:	mov    edx,DWORD PTR [ecx]
65008711:	cmp    BYTE PTR [edx+0x45],bl
65008714:	jne    0x65008719
65008716:	mov    DWORD PTR [edx+0x4],eax
65008719:	mov    edx,DWORD PTR [eax+0x4]
6500871c:	mov    DWORD PTR [ecx+0x4],edx
6500871f:	mov    edx,DWORD PTR [edi+0x4]
65008722:	cmp    eax,DWORD PTR [edx+0x4]
65008725:	jne    0x6500872c
65008727:	mov    DWORD PTR [edx+0x4],ecx
6500872a:	jmp    0x6500873a
6500872c:	mov    edx,DWORD PTR [eax+0x4]
6500872f:	cmp    eax,DWORD PTR [edx]
65008731:	jne    0x65008737
65008733:	mov    DWORD PTR [edx],ecx
65008735:	jmp    0x6500873a
65008737:	mov    DWORD PTR [edx+0x8],ecx
6500873a:	mov    DWORD PTR [ecx],eax
6500873c:	mov    DWORD PTR [eax+0x4],ecx
6500873f:	mov    ecx,DWORD PTR [esi+0x4]
65008742:	cmp    BYTE PTR [ecx+0x44],bl
65008745:	lea    eax,[esi+0x4]
65008748:	je     0x65008617
6500874e:	mov    ecx,DWORD PTR [esp+0x14]
65008752:	mov    edx,DWORD PTR [edi+0x4]
65008755:	mov    eax,DWORD PTR [edx+0x4]
65008758:	mov    BYTE PTR [eax+0x44],0x1
6500875c:	mov    eax,DWORD PTR [ebp+0x8]
6500875f:	mov    DWORD PTR [eax+0x4],ecx
65008762:	mov    DWORD PTR [eax],edi
65008764:	mov    ecx,DWORD PTR [esp+0x60]
65008768:	mov    DWORD PTR fs:0x0,ecx
6500876f:	pop    ecx
65008770:	pop    edi
65008771:	pop    esi
65008772:	pop    ebx
65008773:	mov    esp,ebp
65008775:	pop    ebp
65008776:	ret    0x10
65008779:	int3   
6500877a:	int3   
6500877b:	int3   
6500877c:	int3   
6500877d:	int3   
6500877e:	int3   
6500877f:	int3   
65008780:	push   ebx
65008781:	mov    ebx,DWORD PTR [esp+0xc]
65008785:	push   ebp
65008786:	mov    ebp,DWORD PTR [esp+0xc]
6500878a:	cmp    DWORD PTR [ebp+0x14],ebx
6500878d:	push   esi
6500878e:	push   edi
6500878f:	mov    esi,ecx
65008791:	jae    0x65008798
65008793:	call   0x65011f1e
65008798:	mov    edi,DWORD PTR [ebp+0x14]
6500879b:	mov    eax,DWORD PTR [esp+0x1c]
6500879f:	sub    edi,ebx
650087a1:	cmp    eax,edi
650087a3:	jae    0x650087a7
650087a5:	mov    edi,eax
650087a7:	cmp    esi,ebp
650087a9:	jne    0x650087ca
650087ab:	push   0xffffffff
650087ad:	add    edi,ebx
650087af:	push   edi
650087b0:	mov    ecx,esi
650087b2:	call   0x65008f30
650087b7:	push   ebx
650087b8:	push   0x0
650087ba:	mov    ecx,esi
650087bc:	call   0x65008f30
650087c1:	pop    edi
650087c2:	mov    eax,esi
650087c4:	pop    esi
650087c5:	pop    ebp
650087c6:	pop    ebx
650087c7:	ret    0xc
650087ca:	cmp    edi,0x7ffffffe
650087d0:	jbe    0x650087d7
650087d2:	call   0x65011edf
650087d7:	mov    eax,DWORD PTR [esi+0x18]
650087da:	cmp    eax,edi
650087dc:	jae    0x650087f9
650087de:	mov    eax,DWORD PTR [esi+0x14]
650087e1:	push   eax
650087e2:	push   edi
650087e3:	mov    ecx,esi
650087e5:	call   0x65009270
650087ea:	test   edi,edi
650087ec:	jbe    0x65008866
650087ee:	cmp    DWORD PTR [ebp+0x18],0x8
650087f2:	jb     0x65008825
650087f4:	mov    ecx,DWORD PTR [ebp+0x4]
650087f7:	jmp    0x65008828
650087f9:	test   edi,edi
650087fb:	jne    0x650087ec
650087fd:	cmp    eax,0x8
65008800:	mov    DWORD PTR [esi+0x14],edi
65008803:	jb     0x65008814
65008805:	mov    eax,DWORD PTR [esi+0x4]
65008808:	mov    WORD PTR [eax],di
6500880b:	pop    edi
6500880c:	mov    eax,esi
6500880e:	pop    esi
6500880f:	pop    ebp
65008810:	pop    ebx
65008811:	ret    0xc
65008814:	lea    eax,[esi+0x4]
65008817:	pop    edi
65008818:	mov    WORD PTR [eax],0x0
6500881d:	mov    eax,esi
6500881f:	pop    esi
65008820:	pop    ebp
65008821:	pop    ebx
65008822:	ret    0xc
65008825:	lea    ecx,[ebp+0x4]
65008828:	cmp    DWORD PTR [esi+0x18],0x8
6500882c:	lea    ebp,[esi+0x4]
6500882f:	jb     0x65008836
65008831:	mov    eax,DWORD PTR [ebp+0x0]
65008834:	jmp    0x65008838
65008836:	mov    eax,ebp
65008838:	mov    edx,DWORD PTR [esp+0x18]
6500883c:	lea    ecx,[ecx+edx*2]
6500883f:	lea    ebx,[edi+edi*1]
65008842:	push   ebx
65008843:	push   ecx
65008844:	mov    ecx,DWORD PTR [esi+0x18]
65008847:	lea    edx,[ecx+ecx*1]
6500884a:	push   edx
6500884b:	push   eax
6500884c:	call   0x650120d3
65008851:	add    esp,0x10
65008854:	cmp    DWORD PTR [esi+0x18],0x8
65008858:	mov    DWORD PTR [esi+0x14],edi
6500885b:	jb     0x65008860
6500885d:	mov    ebp,DWORD PTR [ebp+0x0]
65008860:	mov    WORD PTR [ebx+ebp*1],0x0
65008866:	pop    edi
65008867:	mov    eax,esi
65008869:	pop    esi
6500886a:	pop    ebp
6500886b:	pop    ebx
6500886c:	ret    0xc
6500886f:	int3   
65008870:	push   ebp
65008871:	push   esi
65008872:	mov    esi,ecx
65008874:	mov    edx,DWORD PTR [esi+0x18]
65008877:	cmp    edx,0x8
6500887a:	push   edi
6500887b:	lea    ebp,[esi+0x4]
6500887e:	jb     0x65008885
65008880:	mov    ecx,DWORD PTR [ebp+0x0]
65008883:	jmp    0x65008887
65008885:	mov    ecx,ebp
65008887:	mov    eax,DWORD PTR [esp+0x10]
6500888b:	cmp    eax,ecx
6500888d:	jb     0x650088c5
6500888f:	cmp    edx,0x8
65008892:	jb     0x65008899
65008894:	mov    ecx,DWORD PTR [ebp+0x0]
65008897:	jmp    0x6500889b
65008899:	mov    ecx,ebp
6500889b:	mov    edi,DWORD PTR [esi+0x14]
6500889e:	lea    ecx,[ecx+edi*2]
650088a1:	cmp    ecx,eax
650088a3:	jbe    0x650088c5
650088a5:	cmp    edx,0x8
650088a8:	jb     0x650088ad
650088aa:	mov    ebp,DWORD PTR [ebp+0x0]
650088ad:	mov    edx,DWORD PTR [esp+0x14]
650088b1:	sub    eax,ebp
650088b3:	push   edx
650088b4:	sar    eax,1
650088b6:	push   eax
650088b7:	push   esi
650088b8:	mov    ecx,esi
650088ba:	call   0x65008780
650088bf:	pop    edi
650088c0:	pop    esi
650088c1:	pop    ebp
650088c2:	ret    0x8
650088c5:	mov    edi,DWORD PTR [esp+0x14]
650088c9:	cmp    edi,0x7ffffffe
650088cf:	jbe    0x650088d6
650088d1:	call   0x65011edf
650088d6:	mov    eax,DWORD PTR [esi+0x18]
650088d9:	cmp    eax,edi
650088db:	jae    0x650088fa
650088dd:	mov    eax,DWORD PTR [esi+0x14]
650088e0:	push   eax
650088e1:	push   edi
650088e2:	mov    ecx,esi
650088e4:	call   0x65009270
650088e9:	test   edi,edi
650088eb:	jbe    0x65008942
650088ed:	mov    ecx,DWORD PTR [esi+0x18]
650088f0:	cmp    ecx,0x8
650088f3:	jb     0x65008917
650088f5:	mov    eax,DWORD PTR [ebp+0x0]
650088f8:	jmp    0x65008919
650088fa:	test   edi,edi
650088fc:	jne    0x650088eb
650088fe:	cmp    eax,0x8
65008901:	mov    DWORD PTR [esi+0x14],edi
65008904:	jb     0x65008909
65008906:	mov    ebp,DWORD PTR [ebp+0x0]
65008909:	pop    edi
6500890a:	mov    eax,esi
6500890c:	pop    esi
6500890d:	mov    WORD PTR [ebp+0x0],0x0
65008913:	pop    ebp
65008914:	ret    0x8
65008917:	mov    eax,ebp
65008919:	mov    edx,DWORD PTR [esp+0x10]
6500891d:	push   ebx
6500891e:	lea    ebx,[edi+edi*1]
65008921:	push   ebx
65008922:	push   edx
65008923:	add    ecx,ecx
65008925:	push   ecx
65008926:	push   eax
65008927:	call   0x650120d3
6500892c:	add    esp,0x10
6500892f:	cmp    DWORD PTR [esi+0x18],0x8
65008933:	mov    DWORD PTR [esi+0x14],edi
65008936:	jb     0x6500893b
65008938:	mov    ebp,DWORD PTR [ebp+0x0]
6500893b:	mov    WORD PTR [ebx+ebp*1],0x0
65008941:	pop    ebx
65008942:	pop    edi
65008943:	mov    eax,esi
65008945:	pop    esi
65008946:	pop    ebp
65008947:	ret    0x8
6500894a:	int3   
6500894b:	int3   
6500894c:	int3   
6500894d:	int3   
6500894e:	int3   
6500894f:	int3   
65008950:	push   ebp
65008951:	mov    ebp,esp
65008953:	and    esp,0xfffffff8
65008956:	push   0xffffffff
65008958:	push   0x650227f8
6500895d:	mov    eax,fs:0x0
65008963:	push   eax
65008964:	sub    esp,0x50
65008967:	push   ebx
65008968:	push   esi
65008969:	push   edi
6500896a:	mov    eax,ds:0x6502c09c
6500896f:	xor    eax,esp
65008971:	push   eax
65008972:	lea    eax,[esp+0x60]
65008976:	mov    fs:0x0,eax
6500897c:	mov    edi,ecx
6500897e:	xor    ebx,ebx
65008980:	cmp    DWORD PTR [edi+0x8],0x4924923
65008987:	jb     0x650089d2
65008989:	push   0x13
6500898b:	push   0x65028204
65008990:	lea    ecx,[esp+0x20]
65008994:	mov    DWORD PTR [esp+0x38],0xf
6500899c:	mov    DWORD PTR [esp+0x34],ebx
650089a0:	mov    BYTE PTR [esp+0x24],bl
650089a4:	call   0x650018c0
650089a9:	lea    eax,[esp+0x18]
650089ad:	push   eax
650089ae:	lea    ecx,[esp+0x38]
650089b2:	mov    DWORD PTR [esp+0x6c],ebx
650089b6:	call   0x65002d20
650089bb:	push   0x65029f18
650089c0:	lea    ecx,[esp+0x38]
650089c4:	push   ecx
650089c5:	mov    DWORD PTR [esp+0x3c],0x65024c10
650089cd:	call   0x65012366
650089d2:	mov    edx,DWORD PTR [ebp+0x14]
650089d5:	mov    eax,DWORD PTR [edi+0x4]
650089d8:	mov    esi,DWORD PTR [ebp+0x10]
650089db:	push   ebx
650089dc:	push   edx
650089dd:	push   eax
650089de:	push   esi
650089df:	push   eax
650089e0:	call   0x65009030
650089e5:	add    DWORD PTR [edi+0x8],0x1
650089e9:	mov    ecx,eax
650089eb:	mov    eax,DWORD PTR [edi+0x4]
650089ee:	cmp    esi,eax
650089f0:	mov    DWORD PTR [esp+0x14],ecx
650089f4:	jne    0x65008a06
650089f6:	mov    DWORD PTR [eax+0x4],ecx
650089f9:	mov    eax,DWORD PTR [edi+0x4]
650089fc:	mov    DWORD PTR [eax],ecx
650089fe:	mov    edx,DWORD PTR [edi+0x4]
65008a01:	mov    DWORD PTR [edx+0x8],ecx
65008a04:	jmp    0x65008a26
65008a06:	cmp    BYTE PTR [ebp+0xc],bl
65008a09:	je     0x65008a18
65008a0b:	mov    DWORD PTR [esi],ecx
65008a0d:	mov    eax,DWORD PTR [edi+0x4]
65008a10:	cmp    esi,DWORD PTR [eax]
65008a12:	jne    0x65008a26
65008a14:	mov    DWORD PTR [eax],ecx
65008a16:	jmp    0x65008a26
65008a18:	mov    DWORD PTR [esi+0x8],ecx
65008a1b:	mov    eax,DWORD PTR [edi+0x4]
65008a1e:	cmp    esi,DWORD PTR [eax+0x8]
65008a21:	jne    0x65008a26
65008a23:	mov    DWORD PTR [eax+0x8],ecx
65008a26:	mov    edx,DWORD PTR [ecx+0x4]
65008a29:	cmp    BYTE PTR [edx+0x44],bl
65008a2c:	lea    eax,[ecx+0x4]
65008a2f:	mov    esi,ecx
65008a31:	jne    0x65008b72
65008a37:	mov    ecx,DWORD PTR [eax]
65008a39:	mov    edx,DWORD PTR [ecx+0x4]
65008a3c:	cmp    ecx,DWORD PTR [edx]
65008a3e:	jne    0x65008ae5
65008a44:	mov    edx,DWORD PTR [edx+0x8]
65008a47:	cmp    BYTE PTR [edx+0x44],bl
65008a4a:	je     0x65008aec
65008a50:	cmp    esi,DWORD PTR [ecx+0x8]
65008a53:	jne    0x65008a90
65008a55:	mov    esi,ecx
65008a57:	mov    ecx,DWORD PTR [esi+0x8]
65008a5a:	mov    eax,DWORD PTR [ecx]
65008a5c:	mov    DWORD PTR [esi+0x8],eax
65008a5f:	mov    eax,DWORD PTR [ecx]
65008a61:	cmp    BYTE PTR [eax+0x45],bl
65008a64:	jne    0x65008a69
65008a66:	mov    DWORD PTR [eax+0x4],esi
65008a69:	mov    edx,DWORD PTR [esi+0x4]
65008a6c:	lea    eax,[esi+0x4]
65008a6f:	mov    DWORD PTR [ecx+0x4],edx
65008a72:	mov    edx,DWORD PTR [edi+0x4]
65008a75:	cmp    esi,DWORD PTR [edx+0x4]
65008a78:	jne    0x65008a7f
65008a7a:	mov    DWORD PTR [edx+0x4],ecx
65008a7d:	jmp    0x65008a8c
65008a7f:	mov    edx,DWORD PTR [eax]
65008a81:	cmp    esi,DWORD PTR [edx]
65008a83:	jne    0x65008a89
65008a85:	mov    DWORD PTR [edx],ecx
65008a87:	jmp    0x65008a8c
65008a89:	mov    DWORD PTR [edx+0x8],ecx
65008a8c:	mov    DWORD PTR [ecx],esi
65008a8e:	mov    DWORD PTR [eax],ecx
65008a90:	mov    ecx,DWORD PTR [eax]
65008a92:	mov    BYTE PTR [ecx+0x44],0x1
65008a96:	mov    edx,DWORD PTR [eax]
65008a98:	mov    ecx,DWORD PTR [edx+0x4]
65008a9b:	mov    BYTE PTR [ecx+0x44],bl
65008a9e:	mov    edx,DWORD PTR [eax]
65008aa0:	mov    eax,DWORD PTR [edx+0x4]
65008aa3:	mov    ecx,DWORD PTR [eax]
65008aa5:	mov    edx,DWORD PTR [ecx+0x8]
65008aa8:	mov    DWORD PTR [eax],edx
65008aaa:	mov    edx,DWORD PTR [ecx+0x8]
65008aad:	cmp    BYTE PTR [edx+0x45],bl
65008ab0:	jne    0x65008ab5
65008ab2:	mov    DWORD PTR [edx+0x4],eax
65008ab5:	mov    edx,DWORD PTR [eax+0x4]
65008ab8:	mov    DWORD PTR [ecx+0x4],edx
65008abb:	mov    edx,DWORD PTR [edi+0x4]
65008abe:	cmp    eax,DWORD PTR [edx+0x4]
65008ac1:	jne    0x65008ace
65008ac3:	mov    DWORD PTR [edx+0x4],ecx
65008ac6:	mov    DWORD PTR [ecx+0x8],eax
65008ac9:	jmp    0x65008b5c
65008ace:	mov    edx,DWORD PTR [eax+0x4]
65008ad1:	cmp    eax,DWORD PTR [edx+0x8]
65008ad4:	jne    0x65008ade
65008ad6:	mov    DWORD PTR [edx+0x8],ecx
65008ad9:	mov    DWORD PTR [ecx+0x8],eax
65008adc:	jmp    0x65008b5c
65008ade:	mov    DWORD PTR [edx],ecx
65008ae0:	mov    DWORD PTR [ecx+0x8],eax
65008ae3:	jmp    0x65008b5c
65008ae5:	mov    edx,DWORD PTR [edx]
65008ae7:	cmp    BYTE PTR [edx+0x44],bl
65008aea:	jne    0x65008b03
65008aec:	mov    BYTE PTR [ecx+0x44],0x1
65008af0:	mov    BYTE PTR [edx+0x44],0x1
65008af4:	mov    edx,DWORD PTR [eax]
65008af6:	mov    ecx,DWORD PTR [edx+0x4]
65008af9:	mov    BYTE PTR [ecx+0x44],bl
65008afc:	mov    edx,DWORD PTR [eax]
65008afe:	mov    esi,DWORD PTR [edx+0x4]
65008b01:	jmp    0x65008b5f
65008b03:	cmp    esi,DWORD PTR [ecx]
65008b05:	jne    0x65008b11
65008b07:	mov    esi,ecx
65008b09:	push   esi
65008b0a:	mov    ecx,edi
65008b0c:	call   0x65008fd0
65008b11:	mov    eax,DWORD PTR [esi+0x4]
65008b14:	mov    BYTE PTR [eax+0x44],0x1
65008b18:	mov    ecx,DWORD PTR [esi+0x4]
65008b1b:	mov    edx,DWORD PTR [ecx+0x4]
65008b1e:	mov    BYTE PTR [edx+0x44],bl
65008b21:	mov    eax,DWORD PTR [esi+0x4]
65008b24:	mov    eax,DWORD PTR [eax+0x4]
65008b27:	mov    ecx,DWORD PTR [eax+0x8]
65008b2a:	mov    edx,DWORD PTR [ecx]
65008b2c:	mov    DWORD PTR [eax+0x8],edx
65008b2f:	mov    edx,DWORD PTR [ecx]
65008b31:	cmp    BYTE PTR [edx+0x45],bl
65008b34:	jne    0x65008b39
65008b36:	mov    DWORD PTR [edx+0x4],eax
65008b39:	mov    edx,DWORD PTR [eax+0x4]
65008b3c:	mov    DWORD PTR [ecx+0x4],edx
65008b3f:	mov    edx,DWORD PTR [edi+0x4]
65008b42:	cmp    eax,DWORD PTR [edx+0x4]
65008b45:	jne    0x65008b4c
65008b47:	mov    DWORD PTR [edx+0x4],ecx
65008b4a:	jmp    0x65008b5a
65008b4c:	mov    edx,DWORD PTR [eax+0x4]
65008b4f:	cmp    eax,DWORD PTR [edx]
65008b51:	jne    0x65008b57
65008b53:	mov    DWORD PTR [edx],ecx
65008b55:	jmp    0x65008b5a
65008b57:	mov    DWORD PTR [edx+0x8],ecx
65008b5a:	mov    DWORD PTR [ecx],eax
65008b5c:	mov    DWORD PTR [eax+0x4],ecx
65008b5f:	mov    ecx,DWORD PTR [esi+0x4]
65008b62:	cmp    BYTE PTR [ecx+0x44],bl
65008b65:	lea    eax,[esi+0x4]
65008b68:	je     0x65008a37
65008b6e:	mov    ecx,DWORD PTR [esp+0x14]
65008b72:	mov    edx,DWORD PTR [edi+0x4]
65008b75:	mov    eax,DWORD PTR [edx+0x4]
65008b78:	mov    BYTE PTR [eax+0x44],0x1
65008b7c:	mov    eax,DWORD PTR [ebp+0x8]
65008b7f:	mov    DWORD PTR [eax+0x4],ecx
65008b82:	mov    DWORD PTR [eax],edi
65008b84:	mov    ecx,DWORD PTR [esp+0x60]
65008b88:	mov    DWORD PTR fs:0x0,ecx
65008b8f:	pop    ecx
65008b90:	pop    edi
65008b91:	pop    esi
65008b92:	pop    ebx
65008b93:	mov    esp,ebp
65008b95:	pop    ebp
65008b96:	ret    0x10
65008b99:	int3   
65008b9a:	int3   
65008b9b:	int3   
65008b9c:	int3   
65008b9d:	int3   
65008b9e:	int3   
65008b9f:	int3   
65008ba0:	push   ebx
65008ba1:	push   ebp
65008ba2:	push   esi
65008ba3:	mov    esi,DWORD PTR [esp+0x10]
65008ba7:	xor    ebx,ebx
65008ba9:	cmp    BYTE PTR [esi+0x29],bl
65008bac:	push   edi
65008bad:	mov    ebp,ecx
65008baf:	mov    edi,esi
65008bb1:	jne    0x65008bef
65008bb3:	mov    eax,DWORD PTR [edi+0x8]
65008bb6:	push   eax
65008bb7:	mov    ecx,ebp
65008bb9:	call   0x65008ba0
65008bbe:	cmp    DWORD PTR [esi+0x24],0x10
65008bc2:	mov    edi,DWORD PTR [edi]
65008bc4:	jb     0x65008bd2
65008bc6:	mov    ecx,DWORD PTR [esi+0x10]
65008bc9:	push   ecx
65008bca:	call   0x65011f62
65008bcf:	add    esp,0x4
65008bd2:	mov    DWORD PTR [esi+0x24],0xf
65008bd9:	mov    DWORD PTR [esi+0x20],ebx
65008bdc:	push   esi
65008bdd:	mov    BYTE PTR [esi+0x10],bl
65008be0:	call   0x65011f62
65008be5:	add    esp,0x4
65008be8:	cmp    BYTE PTR [edi+0x29],bl
65008beb:	mov    esi,edi
65008bed:	je     0x65008bb3
65008bef:	pop    edi
65008bf0:	pop    esi
65008bf1:	pop    ebp
65008bf2:	pop    ebx
65008bf3:	ret    0x4
65008bf6:	int3   
65008bf7:	int3   
65008bf8:	int3   
65008bf9:	int3   
65008bfa:	int3   
65008bfb:	int3   
65008bfc:	int3   
65008bfd:	int3   
65008bfe:	int3   
65008bff:	int3   
65008c00:	sub    esp,0x8
65008c03:	mov    eax,DWORD PTR [eax+0x4]
65008c06:	push   esi
65008c07:	mov    esi,DWORD PTR [eax+0x4]
65008c0a:	cmp    BYTE PTR [esi+0x29],0x0
65008c0e:	mov    DWORD PTR [esp+0x4],eax
65008c12:	jne    0x65008c85
65008c14:	mov    edx,DWORD PTR [ecx+0x18]
65008c17:	push   ebx
65008c18:	mov    ebx,DWORD PTR [ecx+0x14]
65008c1b:	push   ebp
65008c1c:	push   edi
65008c1d:	mov    DWORD PTR [esp+0x14],edx
65008c21:	lea    ebp,[ecx+0x4]
65008c24:	cmp    DWORD PTR [esp+0x14],0x10
65008c29:	jb     0x65008c30
65008c2b:	mov    edx,DWORD PTR [ebp+0x0]
65008c2e:	jmp    0x65008c32
65008c30:	mov    edx,ebp
65008c32:	mov    edi,DWORD PTR [esi+0x20]
65008c35:	mov    eax,edi
65008c37:	cmp    eax,edi
65008c39:	jae    0x65008c3b
65008c3b:	cmp    edi,ebx
65008c3d:	mov    ecx,edi
65008c3f:	jb     0x65008c43
65008c41:	mov    ecx,ebx
65008c43:	cmp    DWORD PTR [esi+0x24],0x10
65008c47:	jb     0x65008c4e
65008c49:	mov    eax,DWORD PTR [esi+0x10]
65008c4c:	jmp    0x65008c51
65008c4e:	lea    eax,[esi+0x10]
65008c51:	push   ecx
65008c52:	push   edx
65008c53:	push   eax
65008c54:	call   0x65002c90
65008c59:	add    esp,0xc
65008c5c:	test   eax,eax
65008c5e:	jne    0x65008c6b
65008c60:	cmp    edi,ebx
65008c62:	jb     0x65008c6d
65008c64:	cmp    edi,ebx
65008c66:	setne  al
65008c69:	test   eax,eax
65008c6b:	jge    0x65008c72
65008c6d:	mov    esi,DWORD PTR [esi+0x8]
65008c70:	jmp    0x65008c78
65008c72:	mov    DWORD PTR [esp+0x10],esi
65008c76:	mov    esi,DWORD PTR [esi]
65008c78:	cmp    BYTE PTR [esi+0x29],0x0
65008c7c:	je     0x65008c24
65008c7e:	mov    eax,DWORD PTR [esp+0x10]
65008c82:	pop    edi
65008c83:	pop    ebp
65008c84:	pop    ebx
65008c85:	pop    esi
65008c86:	add    esp,0x8
65008c89:	ret    
65008c8a:	int3   
65008c8b:	int3   
65008c8c:	int3   
65008c8d:	int3   
65008c8e:	int3   
65008c8f:	int3   
65008c90:	sub    esp,0x10
65008c93:	mov    ecx,DWORD PTR [ecx+0x4]
65008c96:	push   edi
65008c97:	mov    edi,DWORD PTR [ecx+0x4]
65008c9a:	cmp    BYTE PTR [edi+0x29],0x0
65008c9e:	mov    DWORD PTR [esp+0x8],ecx
65008ca2:	jne    0x65008d21
65008ca4:	mov    edx,DWORD PTR [eax+0x14]
65008ca7:	mov    ecx,DWORD PTR [eax+0x18]
65008caa:	push   ebx
65008cab:	push   ebp
65008cac:	add    eax,0x4
65008caf:	push   esi
65008cb0:	mov    ebp,edx
65008cb2:	mov    DWORD PTR [esp+0x1c],ecx
65008cb6:	mov    DWORD PTR [esp+0x10],eax
65008cba:	lea    ebx,[ebx+0x0]
65008cc0:	cmp    DWORD PTR [edi+0x24],0x10
65008cc4:	mov    ebx,DWORD PTR [edi+0x20]
65008cc7:	jb     0x65008cce
65008cc9:	mov    edx,DWORD PTR [edi+0x10]
65008ccc:	jmp    0x65008cd1
65008cce:	lea    edx,[edi+0x10]
65008cd1:	mov    esi,ebp
65008cd3:	cmp    esi,ebx
65008cd5:	mov    ecx,esi
65008cd7:	jb     0x65008cdb
65008cd9:	mov    ecx,ebx
65008cdb:	cmp    DWORD PTR [esp+0x1c],0x10
65008ce0:	mov    eax,DWORD PTR [esp+0x10]
65008ce4:	jb     0x65008ce8
65008ce6:	mov    eax,DWORD PTR [eax]
65008ce8:	push   ecx
65008ce9:	push   edx
65008cea:	push   eax
65008ceb:	call   0x65002c90
65008cf0:	add    esp,0xc
65008cf3:	test   eax,eax
65008cf5:	jne    0x65008d02
65008cf7:	cmp    esi,ebx
65008cf9:	jb     0x65008d04
65008cfb:	cmp    esi,ebx
65008cfd:	setne  al
65008d00:	test   eax,eax
65008d02:	jge    0x65008d0c
65008d04:	mov    DWORD PTR [esp+0x14],edi
65008d08:	mov    edi,DWORD PTR [edi]
65008d0a:	jmp    0x65008d0f
65008d0c:	mov    edi,DWORD PTR [edi+0x8]
65008d0f:	cmp    BYTE PTR [edi+0x29],0x0
65008d13:	je     0x65008cc0
65008d15:	mov    eax,DWORD PTR [esp+0x14]
65008d19:	pop    esi
65008d1a:	pop    ebp
65008d1b:	pop    ebx
65008d1c:	pop    edi
65008d1d:	add    esp,0x10
65008d20:	ret    
65008d21:	mov    eax,ecx
65008d23:	pop    edi
65008d24:	add    esp,0x10
65008d27:	ret    
65008d28:	int3   
65008d29:	int3   
65008d2a:	int3   
65008d2b:	int3   
65008d2c:	int3   
65008d2d:	int3   
65008d2e:	int3   
65008d2f:	int3   
65008d30:	cmp    DWORD PTR [esi],0x0
65008d33:	jne    0x65008d3a
65008d35:	call   0x650122d3
65008d3a:	mov    eax,DWORD PTR [esi+0x4]
65008d3d:	cmp    BYTE PTR [eax+0x29],0x0
65008d41:	je     0x65008d54
65008d43:	mov    eax,DWORD PTR [eax+0x8]
65008d46:	mov    DWORD PTR [esi+0x4],eax
65008d49:	cmp    BYTE PTR [eax+0x29],0x0
65008d4d:	je     0x65008da6
65008d4f:	jmp    0x650122d3
65008d54:	mov    ecx,DWORD PTR [eax]
65008d56:	cmp    BYTE PTR [ecx+0x29],0x0
65008d5a:	jne    0x65008d74
65008d5c:	mov    eax,DWORD PTR [ecx+0x8]
65008d5f:	cmp    BYTE PTR [eax+0x29],0x0
65008d63:	jne    0x65008d70
65008d65:	mov    ecx,eax
65008d67:	mov    eax,DWORD PTR [ecx+0x8]
65008d6a:	cmp    BYTE PTR [eax+0x29],0x0
65008d6e:	je     0x65008d65
65008d70:	mov    DWORD PTR [esi+0x4],ecx
65008d73:	ret    
65008d74:	mov    eax,DWORD PTR [eax+0x4]
65008d77:	cmp    BYTE PTR [eax+0x29],0x0
65008d7b:	jne    0x65008d95
65008d7d:	lea    ecx,[ecx+0x0]
65008d80:	mov    ecx,DWORD PTR [esi+0x4]
65008d83:	cmp    ecx,DWORD PTR [eax]
65008d85:	jne    0x65008d95
65008d87:	mov    DWORD PTR [esi+0x4],eax
65008d8a:	mov    edx,eax
65008d8c:	mov    eax,DWORD PTR [edx+0x4]
65008d8f:	cmp    BYTE PTR [eax+0x29],0x0
65008d93:	je     0x65008d80
65008d95:	mov    ecx,DWORD PTR [esi+0x4]
65008d98:	cmp    BYTE PTR [ecx+0x29],0x0
65008d9c:	je     0x65008da3
65008d9e:	jmp    0x650122d3
65008da3:	mov    DWORD PTR [esi+0x4],eax
65008da6:	ret    
65008da7:	int3   
65008da8:	int3   
65008da9:	int3   
65008daa:	int3   
65008dab:	int3   
65008dac:	int3   
65008dad:	int3   
65008dae:	int3   
65008daf:	int3   
65008db0:	push   ecx
65008db1:	mov    eax,DWORD PTR [ecx+0x4]
65008db4:	push   esi
65008db5:	mov    esi,DWORD PTR [eax+0x4]
65008db8:	cmp    BYTE PTR [esi+0x45],0x0
65008dbc:	mov    DWORD PTR [esp+0x4],eax
65008dc0:	jne    0x65008e37
65008dc2:	mov    eax,DWORD PTR [esp+0xc]
65008dc6:	mov    ecx,DWORD PTR [eax+0x18]
65008dc9:	push   ebx
65008dca:	mov    ebx,DWORD PTR [eax+0x14]
65008dcd:	push   ebp
65008dce:	push   edi
65008dcf:	mov    DWORD PTR [esp+0x18],ecx
65008dd3:	lea    ebp,[eax+0x4]
65008dd6:	cmp    DWORD PTR [esp+0x18],0x10
65008ddb:	jb     0x65008de2
65008ddd:	mov    edx,DWORD PTR [ebp+0x0]
65008de0:	jmp    0x65008de4
65008de2:	mov    edx,ebp
65008de4:	mov    edi,DWORD PTR [esi+0x20]
65008de7:	mov    eax,edi
65008de9:	cmp    eax,edi
65008deb:	jae    0x65008ded
65008ded:	cmp    edi,ebx
65008def:	mov    ecx,edi
65008df1:	jb     0x65008df5
65008df3:	mov    ecx,ebx
65008df5:	cmp    DWORD PTR [esi+0x24],0x10
65008df9:	jb     0x65008e00
65008dfb:	mov    eax,DWORD PTR [esi+0x10]
65008dfe:	jmp    0x65008e03
65008e00:	lea    eax,[esi+0x10]
65008e03:	push   ecx
65008e04:	push   edx
65008e05:	push   eax
65008e06:	call   0x65002c90
65008e0b:	add    esp,0xc
65008e0e:	test   eax,eax
65008e10:	jne    0x65008e1d
65008e12:	cmp    edi,ebx
65008e14:	jb     0x65008e1f
65008e16:	cmp    edi,ebx
65008e18:	setne  al
65008e1b:	test   eax,eax
65008e1d:	jge    0x65008e24
65008e1f:	mov    esi,DWORD PTR [esi+0x8]
65008e22:	jmp    0x65008e2a
65008e24:	mov    DWORD PTR [esp+0x10],esi
65008e28:	mov    esi,DWORD PTR [esi]
65008e2a:	cmp    BYTE PTR [esi+0x45],0x0
65008e2e:	je     0x65008dd6
65008e30:	mov    eax,DWORD PTR [esp+0x10]
65008e34:	pop    edi
65008e35:	pop    ebp
65008e36:	pop    ebx
65008e37:	pop    esi
65008e38:	pop    ecx
65008e39:	ret    0x4
65008e3c:	int3   
65008e3d:	int3   
65008e3e:	int3   
65008e3f:	int3   
65008e40:	mov    edx,DWORD PTR [esp+0x4]
65008e44:	mov    eax,DWORD PTR [edx+0x8]
65008e47:	push   esi
65008e48:	mov    esi,DWORD PTR [eax]
65008e4a:	mov    DWORD PTR [edx+0x8],esi
65008e4d:	mov    esi,DWORD PTR [eax]
65008e4f:	cmp    BYTE PTR [esi+0x45],0x0
65008e53:	jne    0x65008e58
65008e55:	mov    DWORD PTR [esi+0x4],edx
65008e58:	mov    esi,DWORD PTR [edx+0x4]
65008e5b:	mov    DWORD PTR [eax+0x4],esi
65008e5e:	mov    ecx,DWORD PTR [ecx+0x4]
65008e61:	cmp    edx,DWORD PTR [ecx+0x4]
65008e64:	pop    esi
65008e65:	jne    0x65008e72
65008e67:	mov    DWORD PTR [ecx+0x4],eax
65008e6a:	mov    DWORD PTR [eax],edx
65008e6c:	mov    DWORD PTR [edx+0x4],eax
65008e6f:	ret    0x4
65008e72:	mov    ecx,DWORD PTR [edx+0x4]
65008e75:	cmp    edx,DWORD PTR [ecx]
65008e77:	jne    0x65008e83
65008e79:	mov    DWORD PTR [ecx],eax
65008e7b:	mov    DWORD PTR [eax],edx
65008e7d:	mov    DWORD PTR [edx+0x4],eax
65008e80:	ret    0x4
65008e83:	mov    DWORD PTR [ecx+0x8],eax
65008e86:	mov    DWORD PTR [eax],edx
65008e88:	mov    DWORD PTR [edx+0x4],eax
65008e8b:	ret    0x4
65008e8e:	int3   
65008e8f:	int3   
65008e90:	push   ebp
65008e91:	mov    ebp,esp
65008e93:	push   0xffffffff
65008e95:	push   0x650223c1
65008e9a:	mov    eax,fs:0x0
65008ea0:	push   eax
65008ea1:	sub    esp,0xc
65008ea4:	push   ebx
65008ea5:	push   esi
65008ea6:	push   edi
65008ea7:	mov    eax,ds:0x6502c09c
65008eac:	xor    eax,ebp
65008eae:	push   eax
65008eaf:	lea    eax,[ebp-0xc]
65008eb2:	mov    fs:0x0,eax
65008eb8:	mov    DWORD PTR [ebp-0x10],esp
65008ebb:	push   0x48
65008ebd:	call   0x650122fc
65008ec2:	mov    esi,eax
65008ec4:	mov    DWORD PTR [ebp-0x4],0x0
65008ecb:	add    esp,0x4
65008ece:	mov    DWORD PTR [ebp-0x14],esi
65008ed1:	mov    DWORD PTR [ebp-0x18],esi
65008ed4:	test   esi,esi
65008ed6:	mov    BYTE PTR [ebp-0x4],0x1
65008eda:	je     0x65008f03
65008edc:	mov    eax,DWORD PTR [ebp+0x8]
65008edf:	mov    ecx,DWORD PTR [ebp+0xc]
65008ee2:	mov    edx,DWORD PTR [ebp+0x10]
65008ee5:	mov    DWORD PTR [esi],eax
65008ee7:	mov    eax,DWORD PTR [ebp+0x14]
65008eea:	mov    DWORD PTR [esi+0x4],ecx
65008eed:	push   eax
65008eee:	lea    ecx,[esi+0xc]
65008ef1:	mov    DWORD PTR [esi+0x8],edx
65008ef4:	call   0x650094d0
65008ef9:	mov    cl,BYTE PTR [ebp+0x18]
65008efc:	mov    BYTE PTR [esi+0x44],cl
65008eff:	mov    BYTE PTR [esi+0x45],0x0
65008f03:	mov    eax,esi
65008f05:	mov    ecx,DWORD PTR [ebp-0xc]
65008f08:	mov    DWORD PTR fs:0x0,ecx
65008f0f:	pop    ecx
65008f10:	pop    edi
65008f11:	pop    esi
65008f12:	pop    ebx
65008f13:	mov    esp,ebp
65008f15:	pop    ebp
65008f16:	ret    0x14
65008f19:	mov    edx,DWORD PTR [ebp-0x14]
65008f1c:	push   edx
65008f1d:	call   0x65011f62
65008f22:	add    esp,0x4
65008f25:	push   0x0
65008f27:	push   0x0
65008f29:	call   0x65012366
65008f2e:	int3   
65008f2f:	int3   
65008f30:	push   ebx
65008f31:	mov    ebx,DWORD PTR [esp+0x8]
65008f35:	push   esi
65008f36:	mov    esi,ecx
65008f38:	cmp    DWORD PTR [esi+0x14],ebx
65008f3b:	push   edi
65008f3c:	jae    0x65008f43
65008f3e:	call   0x65011f1e
65008f43:	mov    eax,DWORD PTR [esi+0x14]
65008f46:	mov    edi,DWORD PTR [esp+0x14]
65008f4a:	sub    eax,ebx
65008f4c:	cmp    eax,edi
65008f4e:	jae    0x65008f52
65008f50:	mov    edi,eax
65008f52:	test   edi,edi
65008f54:	jbe    0x65008fbf
65008f56:	mov    ecx,DWORD PTR [esi+0x18]
65008f59:	cmp    ecx,0x8
65008f5c:	push   ebp
65008f5d:	lea    ebp,[esi+0x4]
65008f60:	jb     0x65008f6b
65008f62:	mov    edx,DWORD PTR [ebp+0x0]
65008f65:	mov    DWORD PTR [esp+0x14],edx
65008f69:	jmp    0x65008f6f
65008f6b:	mov    DWORD PTR [esp+0x14],ebp
65008f6f:	cmp    ecx,0x8
65008f72:	jb     0x65008f7d
65008f74:	mov    edx,DWORD PTR [ebp+0x0]
65008f77:	mov    DWORD PTR [esp+0x18],edx
65008f7b:	jmp    0x65008f81
65008f7d:	mov    DWORD PTR [esp+0x18],ebp
65008f81:	mov    edx,DWORD PTR [esp+0x14]
65008f85:	sub    eax,edi
65008f87:	add    eax,eax
65008f89:	push   eax
65008f8a:	lea    eax,[ebx+edi*1]
65008f8d:	lea    eax,[edx+eax*2]
65008f90:	sub    ecx,ebx
65008f92:	push   eax
65008f93:	add    ecx,ecx
65008f95:	push   ecx
65008f96:	mov    ecx,DWORD PTR [esp+0x24]
65008f9a:	lea    edx,[ecx+ebx*2]
65008f9d:	push   edx
65008f9e:	call   0x6501214e
65008fa3:	mov    eax,DWORD PTR [esi+0x14]
65008fa6:	sub    eax,edi
65008fa8:	add    esp,0x10
65008fab:	cmp    DWORD PTR [esi+0x18],0x8
65008faf:	mov    DWORD PTR [esi+0x14],eax
65008fb2:	jb     0x65008fb7
65008fb4:	mov    ebp,DWORD PTR [ebp+0x0]
65008fb7:	mov    WORD PTR [ebp+eax*2+0x0],0x0
65008fbe:	pop    ebp
65008fbf:	pop    edi
65008fc0:	mov    eax,esi
65008fc2:	pop    esi
65008fc3:	pop    ebx
65008fc4:	ret    0x8
65008fc7:	int3   
65008fc8:	int3   
65008fc9:	int3   
65008fca:	int3   
65008fcb:	int3   
65008fcc:	int3   
65008fcd:	int3   
65008fce:	int3   
65008fcf:	int3   
65008fd0:	mov    edx,DWORD PTR [esp+0x4]
65008fd4:	mov    eax,DWORD PTR [edx]
65008fd6:	push   esi
65008fd7:	mov    esi,DWORD PTR [eax+0x8]
65008fda:	mov    DWORD PTR [edx],esi
65008fdc:	mov    esi,DWORD PTR [eax+0x8]
65008fdf:	cmp    BYTE PTR [esi+0x45],0x0
65008fe3:	jne    0x65008fe8
65008fe5:	mov    DWORD PTR [esi+0x4],edx
65008fe8:	mov    esi,DWORD PTR [edx+0x4]
65008feb:	mov    DWORD PTR [eax+0x4],esi
65008fee:	mov    ecx,DWORD PTR [ecx+0x4]
65008ff1:	cmp    edx,DWORD PTR [ecx+0x4]
65008ff4:	pop    esi
65008ff5:	jne    0x65009003
65008ff7:	mov    DWORD PTR [ecx+0x4],eax
65008ffa:	mov    DWORD PTR [eax+0x8],edx
65008ffd:	mov    DWORD PTR [edx+0x4],eax
65009000:	ret    0x4
65009003:	mov    ecx,DWORD PTR [edx+0x4]
65009006:	cmp    edx,DWORD PTR [ecx+0x8]
65009009:	jne    0x65009017
6500900b:	mov    DWORD PTR [ecx+0x8],eax
6500900e:	mov    DWORD PTR [eax+0x8],edx
65009011:	mov    DWORD PTR [edx+0x4],eax
65009014:	ret    0x4
65009017:	mov    DWORD PTR [ecx],eax
65009019:	mov    DWORD PTR [eax+0x8],edx
6500901c:	mov    DWORD PTR [edx+0x4],eax
6500901f:	ret    0x4
65009022:	int3   
65009023:	int3   
65009024:	int3   
65009025:	int3   
65009026:	int3   
65009027:	int3   
65009028:	int3   
65009029:	int3   
6500902a:	int3   
6500902b:	int3   
6500902c:	int3   
6500902d:	int3   
6500902e:	int3   
6500902f:	int3   
65009030:	push   ebp
65009031:	mov    ebp,esp
65009033:	push   0xffffffff
65009035:	push   0x650226e1
6500903a:	mov    eax,fs:0x0
65009040:	push   eax
65009041:	sub    esp,0xc
65009044:	push   ebx
65009045:	push   esi
65009046:	push   edi
65009047:	mov    eax,ds:0x6502c09c
6500904c:	xor    eax,ebp
6500904e:	push   eax
6500904f:	lea    eax,[ebp-0xc]
65009052:	mov    fs:0x0,eax
65009058:	mov    DWORD PTR [ebp-0x10],esp
6500905b:	push   0x48
6500905d:	call   0x650122fc
65009062:	mov    esi,eax
65009064:	mov    DWORD PTR [ebp-0x4],0x0
6500906b:	add    esp,0x4
6500906e:	mov    DWORD PTR [ebp-0x14],esi
65009071:	mov    DWORD PTR [ebp-0x18],esi
65009074:	test   esi,esi
65009076:	mov    BYTE PTR [ebp-0x4],0x1
6500907a:	je     0x650090a3
6500907c:	mov    eax,DWORD PTR [ebp+0x8]
6500907f:	mov    ecx,DWORD PTR [ebp+0xc]
65009082:	mov    edx,DWORD PTR [ebp+0x10]
65009085:	mov    DWORD PTR [esi],eax
65009087:	mov    eax,DWORD PTR [ebp+0x14]
6500908a:	mov    DWORD PTR [esi+0x4],ecx
6500908d:	push   eax
6500908e:	lea    ecx,[esi+0xc]
65009091:	mov    DWORD PTR [esi+0x8],edx
65009094:	call   0x65009550
65009099:	mov    cl,BYTE PTR [ebp+0x18]
6500909c:	mov    BYTE PTR [esi+0x44],cl
6500909f:	mov    BYTE PTR [esi+0x45],0x0
650090a3:	mov    eax,esi
650090a5:	mov    ecx,DWORD PTR [ebp-0xc]
650090a8:	mov    DWORD PTR fs:0x0,ecx
650090af:	pop    ecx
650090b0:	pop    edi
650090b1:	pop    esi
650090b2:	pop    ebx
650090b3:	mov    esp,ebp
650090b5:	pop    ebp
650090b6:	ret    0x14
650090b9:	mov    edx,DWORD PTR [ebp-0x14]
650090bc:	push   edx
650090bd:	call   0x65011f62
650090c2:	add    esp,0x4
650090c5:	push   0x0
650090c7:	push   0x0
650090c9:	call   0x65012366
650090ce:	int3   
650090cf:	int3   
650090d0:	push   ebp
650090d1:	mov    ebp,esp
650090d3:	and    esp,0xfffffff8
650090d6:	sub    esp,0x14
650090d9:	push   ebx
650090da:	push   esi
650090db:	push   edi
650090dc:	mov    edi,ecx
650090de:	mov    eax,DWORD PTR [edi+0x4]
650090e1:	mov    ebx,DWORD PTR [eax]
650090e3:	mov    eax,DWORD PTR [ebp+0xc]
650090e6:	test   eax,eax
650090e8:	je     0x650090ee
650090ea:	cmp    eax,edi
650090ec:	je     0x650090f3
650090ee:	call   0x650122d3
650090f3:	mov    esi,DWORD PTR [ebp+0x10]
650090f6:	cmp    esi,ebx
650090f8:	jne    0x65009150
650090fa:	mov    eax,DWORD PTR [ebp+0x14]
650090fd:	test   eax,eax
650090ff:	mov    ebx,DWORD PTR [edi+0x4]
65009102:	je     0x65009108
65009104:	cmp    eax,edi
65009106:	je     0x6500910d
65009108:	call   0x650122d3
6500910d:	cmp    DWORD PTR [ebp+0x18],ebx
65009110:	jne    0x65009150
65009112:	mov    ecx,DWORD PTR [edi+0x4]
65009115:	mov    edx,DWORD PTR [ecx+0x4]
65009118:	push   edx
65009119:	mov    ecx,edi
6500911b:	call   0x65009cd0
65009120:	mov    eax,DWORD PTR [edi+0x4]
65009123:	mov    DWORD PTR [eax+0x4],eax
65009126:	mov    eax,DWORD PTR [edi+0x4]
65009129:	mov    DWORD PTR [edi+0x8],0x0
65009130:	mov    DWORD PTR [eax],eax
65009132:	mov    eax,DWORD PTR [edi+0x4]
65009135:	mov    DWORD PTR [eax+0x8],eax
65009138:	mov    eax,DWORD PTR [edi+0x4]
6500913b:	mov    ecx,DWORD PTR [eax]
6500913d:	mov    eax,DWORD PTR [ebp+0x8]
65009140:	mov    DWORD PTR [eax+0x4],ecx
65009143:	mov    DWORD PTR [eax],edi
65009145:	pop    edi
65009146:	pop    esi
65009147:	pop    ebx
65009148:	mov    esp,ebp
6500914a:	pop    ebp
6500914b:	ret    0x14
6500914e:	mov    edi,edi
65009150:	mov    ebx,DWORD PTR [ebp+0xc]
65009153:	test   ebx,ebx
65009155:	je     0x6500915c
65009157:	cmp    ebx,DWORD PTR [ebp+0x14]
6500915a:	je     0x65009161
6500915c:	call   0x650122d3
65009161:	cmp    esi,DWORD PTR [ebp+0x18]
65009164:	je     0x650091ce
65009166:	test   ebx,ebx
65009168:	mov    DWORD PTR [esp+0x14],esi
6500916c:	jne    0x65009173
6500916e:	call   0x650122d3
65009173:	cmp    BYTE PTR [esi+0x45],0x0
65009177:	je     0x65009180
65009179:	call   0x650122d3
6500917e:	jmp    0x650091ba
65009180:	mov    eax,DWORD PTR [esi+0x8]
65009183:	cmp    BYTE PTR [eax+0x45],0x0
65009187:	jne    0x6500919f
65009189:	mov    esi,eax
6500918b:	mov    eax,DWORD PTR [esi]
6500918d:	cmp    BYTE PTR [eax+0x45],0x0
65009191:	jne    0x650091ba
65009193:	mov    esi,eax
65009195:	mov    eax,DWORD PTR [esi]
65009197:	cmp    BYTE PTR [eax+0x45],0x0
6500919b:	je     0x65009193
6500919d:	jmp    0x650091ba
6500919f:	mov    eax,DWORD PTR [esi+0x4]
650091a2:	cmp    BYTE PTR [eax+0x45],0x0
650091a6:	jne    0x650091b8
650091a8:	cmp    esi,DWORD PTR [eax+0x8]
650091ab:	jne    0x650091b8
650091ad:	mov    esi,eax
650091af:	mov    eax,DWORD PTR [eax+0x4]
650091b2:	cmp    BYTE PTR [eax+0x45],0x0
650091b6:	je     0x650091a8
650091b8:	mov    esi,eax
650091ba:	mov    edx,DWORD PTR [esp+0x14]
650091be:	push   edx
650091bf:	push   ebx
650091c0:	lea    eax,[esp+0x20]
650091c4:	push   eax
650091c5:	mov    ecx,edi
650091c7:	call   0x650095d0
650091cc:	jmp    0x65009150
650091ce:	mov    eax,DWORD PTR [ebp+0x8]
650091d1:	pop    edi
650091d2:	mov    DWORD PTR [eax+0x4],esi
650091d5:	pop    esi
650091d6:	mov    DWORD PTR [eax],ebx
650091d8:	pop    ebx
650091d9:	mov    esp,ebp
650091db:	pop    ebp
650091dc:	ret    0x14
650091df:	int3   
650091e0:	push   esi
650091e1:	mov    esi,ecx
650091e3:	cmp    DWORD PTR [esi],0x0
650091e6:	jne    0x650091ed
650091e8:	call   0x650122d3
650091ed:	mov    eax,DWORD PTR [esi+0x4]
650091f0:	cmp    BYTE PTR [eax+0x45],0x0
650091f4:	je     0x65009208
650091f6:	mov    eax,DWORD PTR [eax+0x8]
650091f9:	mov    DWORD PTR [esi+0x4],eax
650091fc:	cmp    BYTE PTR [eax+0x45],0x0
65009200:	je     0x65009267
65009202:	pop    esi
65009203:	jmp    0x650122d3
65009208:	mov    ecx,DWORD PTR [eax]
6500920a:	cmp    BYTE PTR [ecx+0x45],0x0
6500920e:	jne    0x65009230
65009210:	mov    eax,DWORD PTR [ecx+0x8]
65009213:	cmp    BYTE PTR [eax+0x45],0x0
65009217:	jne    0x6500922b
65009219:	lea    esp,[esp+0x0]
65009220:	mov    ecx,eax
65009222:	mov    eax,DWORD PTR [ecx+0x8]
65009225:	cmp    BYTE PTR [eax+0x45],0x0
65009229:	je     0x65009220
6500922b:	mov    DWORD PTR [esi+0x4],ecx
6500922e:	pop    esi
6500922f:	ret    
65009230:	mov    eax,DWORD PTR [eax+0x4]
65009233:	cmp    BYTE PTR [eax+0x45],0x0
65009237:	jne    0x65009255
65009239:	lea    esp,[esp+0x0]
65009240:	mov    ecx,DWORD PTR [esi+0x4]
65009243:	cmp    ecx,DWORD PTR [eax]
65009245:	jne    0x65009255
65009247:	mov    DWORD PTR [esi+0x4],eax
6500924a:	mov    edx,eax
6500924c:	mov    eax,DWORD PTR [edx+0x4]
6500924f:	cmp    BYTE PTR [eax+0x45],0x0
65009253:	je     0x65009240
65009255:	mov    ecx,DWORD PTR [esi+0x4]
65009258:	cmp    BYTE PTR [ecx+0x45],0x0
6500925c:	je     0x65009264
6500925e:	pop    esi
6500925f:	jmp    0x650122d3
65009264:	mov    DWORD PTR [esi+0x4],eax
65009267:	pop    esi
65009268:	ret    
65009269:	int3   
6500926a:	int3   
6500926b:	int3   
6500926c:	int3   
6500926d:	int3   
6500926e:	int3   
6500926f:	int3   
65009270:	push   ebp
65009271:	mov    ebp,esp
65009273:	push   0xffffffff
65009275:	push   0x65022390
6500927a:	mov    eax,fs:0x0
65009280:	push   eax
65009281:	sub    esp,0xc
65009284:	push   ebx
65009285:	push   esi
65009286:	push   edi
65009287:	mov    eax,ds:0x6502c09c
6500928c:	xor    eax,ebp
6500928e:	push   eax
6500928f:	lea    eax,[ebp-0xc]
65009292:	mov    fs:0x0,eax
65009298:	mov    DWORD PTR [ebp-0x10],esp
6500929b:	mov    edi,ecx
6500929d:	mov    DWORD PTR [ebp-0x14],edi
650092a0:	mov    eax,DWORD PTR [ebp+0x8]
650092a3:	mov    esi,eax
650092a5:	or     esi,0x7
650092a8:	cmp    esi,0x7ffffffe
650092ae:	jbe    0x650092b4
650092b0:	mov    esi,eax
650092b2:	jmp    0x650092d6
650092b4:	mov    ebx,DWORD PTR [edi+0x18]
650092b7:	mov    eax,0xaaaaaaab
650092bc:	mul    esi
650092be:	mov    ecx,ebx
650092c0:	shr    ecx,1
650092c2:	shr    edx,1
650092c4:	cmp    edx,ecx
650092c6:	jae    0x650092d6
650092c8:	mov    eax,0x7ffffffe
650092cd:	sub    eax,ecx
650092cf:	cmp    ebx,eax
650092d1:	ja     0x650092d6
650092d3:	lea    esi,[ecx+ebx*1]
650092d6:	lea    ecx,[esi+0x1]
650092d9:	push   ecx
650092da:	mov    ecx,edi
650092dc:	mov    DWORD PTR [ebp-0x4],0x0
650092e3:	call   0x65009930
650092e8:	mov    DWORD PTR [ebp+0x8],eax
650092eb:	jmp    0x65009315
650092ed:	mov    eax,DWORD PTR [ebp+0x8]
650092f0:	mov    ecx,DWORD PTR [ebp-0x14]
650092f3:	mov    DWORD PTR [ebp-0x18],eax
650092f6:	add    eax,0x1
650092f9:	mov    DWORD PTR [ebp-0x10],esp
650092fc:	push   eax
650092fd:	mov    BYTE PTR [ebp-0x4],0x2
65009301:	call   0x65009930
65009306:	mov    DWORD PTR [ebp+0x8],eax
65009309:	mov    eax,0x6500930f
6500930e:	ret    
6500930f:	mov    edi,DWORD PTR [ebp-0x14]
65009312:	mov    esi,DWORD PTR [ebp-0x18]
65009315:	mov    ebx,DWORD PTR [ebp+0xc]
65009318:	test   ebx,ebx
6500931a:	jbe    0x65009340
6500931c:	cmp    DWORD PTR [edi+0x18],0x8
65009320:	jb     0x65009327
65009322:	mov    eax,DWORD PTR [edi+0x4]
65009325:	jmp    0x6500932a
65009327:	lea    eax,[edi+0x4]
6500932a:	mov    ecx,DWORD PTR [ebp+0x8]
6500932d:	lea    edx,[ebx+ebx*1]
65009330:	push   edx
65009331:	push   eax
65009332:	lea    eax,[esi+esi*1+0x2]
65009336:	push   eax
65009337:	push   ecx
65009338:	call   0x650120d3
6500933d:	add    esp,0x10
65009340:	cmp    DWORD PTR [edi+0x18],0x8
65009344:	jb     0x65009352
65009346:	mov    edx,DWORD PTR [edi+0x4]
65009349:	push   edx
6500934a:	call   0x65011f62
6500934f:	add    esp,0x4
65009352:	cmp    esi,0x8
65009355:	mov    ecx,DWORD PTR [ebp+0x8]
65009358:	lea    eax,[edi+0x4]
6500935b:	mov    WORD PTR [eax],0x0
65009360:	mov    DWORD PTR [eax],ecx
65009362:	mov    DWORD PTR [edi+0x18],esi
65009365:	mov    DWORD PTR [edi+0x14],ebx
65009368:	jb     0x6500936c
6500936a:	mov    eax,ecx
6500936c:	mov    WORD PTR [eax+ebx*2],0x0
65009372:	mov    ecx,DWORD PTR [ebp-0xc]
65009375:	mov    DWORD PTR fs:0x0,ecx
6500937c:	pop    ecx
6500937d:	pop    edi
6500937e:	pop    esi
6500937f:	pop    ebx
65009380:	mov    esp,ebp
65009382:	pop    ebp
65009383:	ret    0x8
65009386:	mov    esi,DWORD PTR [ebp-0x14]
65009389:	cmp    DWORD PTR [esi+0x18],0x8
6500938d:	jb     0x6500939b
6500938f:	mov    eax,DWORD PTR [esi+0x4]
65009392:	push   eax
65009393:	call   0x65011f62
65009398:	add    esp,0x4
6500939b:	xor    eax,eax
6500939d:	push   eax
6500939e:	mov    DWORD PTR [esi+0x18],0x7
650093a5:	mov    DWORD PTR [esi+0x14],eax
650093a8:	push   eax
650093a9:	mov    WORD PTR [esi+0x4],ax
650093ad:	call   0x65012366
650093b2:	int3   
650093b3:	int3   
650093b4:	int3   
650093b5:	int3   
650093b6:	int3   
650093b7:	int3   
650093b8:	int3   
650093b9:	int3   
650093ba:	int3   
650093bb:	int3   
650093bc:	int3   
650093bd:	int3   
650093be:	int3   
650093bf:	int3   
650093c0:	push   ebp
650093c1:	mov    ebp,esp
650093c3:	and    esp,0xfffffff8
650093c6:	sub    esp,0x14
650093c9:	push   ebx
650093ca:	push   esi
650093cb:	push   edi
650093cc:	mov    edi,ecx
650093ce:	mov    eax,DWORD PTR [edi+0x4]
650093d1:	mov    ebx,DWORD PTR [eax]
650093d3:	mov    eax,DWORD PTR [ebp+0xc]
650093d6:	test   eax,eax
650093d8:	je     0x650093de
650093da:	cmp    eax,edi
650093dc:	je     0x650093e3
650093de:	call   0x650122d3
650093e3:	mov    esi,DWORD PTR [ebp+0x10]
650093e6:	cmp    esi,ebx
650093e8:	jne    0x65009440
650093ea:	mov    eax,DWORD PTR [ebp+0x14]
650093ed:	test   eax,eax
650093ef:	mov    ebx,DWORD PTR [edi+0x4]
650093f2:	je     0x650093f8
650093f4:	cmp    eax,edi
650093f6:	je     0x650093fd
650093f8:	call   0x650122d3
650093fd:	cmp    DWORD PTR [ebp+0x18],ebx
65009400:	jne    0x65009440
65009402:	mov    ecx,DWORD PTR [edi+0x4]
65009405:	mov    edx,DWORD PTR [ecx+0x4]
65009408:	push   edx
65009409:	mov    ecx,edi
6500940b:	call   0x65009d50
65009410:	mov    eax,DWORD PTR [edi+0x4]
65009413:	mov    DWORD PTR [eax+0x4],eax
65009416:	mov    eax,DWORD PTR [edi+0x4]
65009419:	mov    DWORD PTR [edi+0x8],0x0
65009420:	mov    DWORD PTR [eax],eax
65009422:	mov    eax,DWORD PTR [edi+0x4]
65009425:	mov    DWORD PTR [eax+0x8],eax
65009428:	mov    eax,DWORD PTR [edi+0x4]
6500942b:	mov    ecx,DWORD PTR [eax]
6500942d:	mov    eax,DWORD PTR [ebp+0x8]
65009430:	mov    DWORD PTR [eax+0x4],ecx
65009433:	mov    DWORD PTR [eax],edi
65009435:	pop    edi
65009436:	pop    esi
65009437:	pop    ebx
65009438:	mov    esp,ebp
6500943a:	pop    ebp
6500943b:	ret    0x14
6500943e:	mov    edi,edi
65009440:	mov    ebx,DWORD PTR [ebp+0xc]
65009443:	test   ebx,ebx
65009445:	je     0x6500944c
65009447:	cmp    ebx,DWORD PTR [ebp+0x14]
6500944a:	je     0x65009451
6500944c:	call   0x650122d3
65009451:	cmp    esi,DWORD PTR [ebp+0x18]
65009454:	je     0x650094be
65009456:	test   ebx,ebx
65009458:	mov    DWORD PTR [esp+0x14],esi
6500945c:	jne    0x65009463
6500945e:	call   0x650122d3
65009463:	cmp    BYTE PTR [esi+0x45],0x0
65009467:	je     0x65009470
65009469:	call   0x650122d3
6500946e:	jmp    0x650094aa
65009470:	mov    eax,DWORD PTR [esi+0x8]
65009473:	cmp    BYTE PTR [eax+0x45],0x0
65009477:	jne    0x6500948f
65009479:	mov    esi,eax
6500947b:	mov    eax,DWORD PTR [esi]
6500947d:	cmp    BYTE PTR [eax+0x45],0x0
65009481:	jne    0x650094aa
65009483:	mov    esi,eax
65009485:	mov    eax,DWORD PTR [esi]
65009487:	cmp    BYTE PTR [eax+0x45],0x0
6500948b:	je     0x65009483
6500948d:	jmp    0x650094aa
6500948f:	mov    eax,DWORD PTR [esi+0x4]
65009492:	cmp    BYTE PTR [eax+0x45],0x0
65009496:	jne    0x650094a8
65009498:	cmp    esi,DWORD PTR [eax+0x8]
6500949b:	jne    0x650094a8
6500949d:	mov    esi,eax
6500949f:	mov    eax,DWORD PTR [eax+0x4]
650094a2:	cmp    BYTE PTR [eax+0x45],0x0
650094a6:	je     0x65009498
650094a8:	mov    esi,eax
650094aa:	mov    edx,DWORD PTR [esp+0x14]
650094ae:	push   edx
650094af:	push   ebx
650094b0:	lea    eax,[esp+0x20]
650094b4:	push   eax
650094b5:	mov    ecx,edi
650094b7:	call   0x65009990
650094bc:	jmp    0x65009440
650094be:	mov    eax,DWORD PTR [ebp+0x8]
650094c1:	pop    edi
650094c2:	mov    DWORD PTR [eax+0x4],esi
650094c5:	pop    esi
650094c6:	mov    DWORD PTR [eax],ebx
650094c8:	pop    ebx
650094c9:	mov    esp,ebp
650094cb:	pop    ebp
650094cc:	ret    0x14
650094cf:	int3   
650094d0:	push   0xffffffff
650094d2:	push   0x65022368
650094d7:	mov    eax,fs:0x0
650094dd:	push   eax
650094de:	push   ecx
650094df:	push   ebx
650094e0:	push   esi
650094e1:	push   edi
650094e2:	mov    eax,ds:0x6502c09c
650094e7:	xor    eax,esp
650094e9:	push   eax
650094ea:	lea    eax,[esp+0x14]
650094ee:	mov    fs:0x0,eax
650094f4:	mov    esi,ecx
650094f6:	mov    DWORD PTR [esp+0x10],esi
650094fa:	mov    edi,DWORD PTR [esp+0x24]
650094fe:	xor    ebx,ebx
65009500:	push   0xffffffff
65009502:	push   ebx
65009503:	mov    DWORD PTR [esi+0x18],0xf
6500950a:	mov    DWORD PTR [esi+0x14],ebx
6500950d:	push   edi
6500950e:	mov    BYTE PTR [esi+0x4],bl
65009511:	call   0x650017e0
65009516:	push   0xffffffff
65009518:	lea    ecx,[esi+0x1c]
6500951b:	mov    DWORD PTR [esp+0x20],ebx
6500951f:	lea    eax,[edi+0x1c]
65009522:	push   ebx
65009523:	mov    DWORD PTR [ecx+0x18],0xf
6500952a:	mov    DWORD PTR [ecx+0x14],ebx
6500952d:	push   eax
6500952e:	mov    BYTE PTR [ecx+0x4],bl
65009531:	call   0x650017e0
65009536:	mov    eax,esi
65009538:	mov    ecx,DWORD PTR [esp+0x14]
6500953c:	mov    DWORD PTR fs:0x0,ecx
65009543:	pop    ecx
65009544:	pop    edi
65009545:	pop    esi
65009546:	pop    ebx
65009547:	add    esp,0x10
6500954a:	ret    0x4
6500954d:	int3   
6500954e:	int3   
6500954f:	int3   
65009550:	push   0xffffffff
65009552:	push   0x650226a8
65009557:	mov    eax,fs:0x0
6500955d:	push   eax
6500955e:	push   ecx
6500955f:	push   ebx
65009560:	push   esi
65009561:	push   edi
65009562:	mov    eax,ds:0x6502c09c
65009567:	xor    eax,esp
65009569:	push   eax
6500956a:	lea    eax,[esp+0x14]
6500956e:	mov    fs:0x0,eax
65009574:	mov    esi,ecx
65009576:	mov    DWORD PTR [esp+0x10],esi
6500957a:	mov    ebx,DWORD PTR [esp+0x24]
6500957e:	xor    edi,edi
65009580:	push   0xffffffff
65009582:	push   edi
65009583:	mov    DWORD PTR [esi+0x18],0x7
6500958a:	mov    DWORD PTR [esi+0x14],edi
6500958d:	push   ebx
6500958e:	mov    WORD PTR [esi+0x4],di
65009592:	call   0x65008780
65009597:	push   0xffffffff
65009599:	lea    ecx,[esi+0x1c]
6500959c:	mov    DWORD PTR [esp+0x20],edi
650095a0:	lea    eax,[ebx+0x1c]
650095a3:	push   edi
650095a4:	mov    DWORD PTR [ecx+0x18],0x7
650095ab:	mov    DWORD PTR [ecx+0x14],edi
650095ae:	push   eax
650095af:	mov    WORD PTR [ecx+0x4],di
650095b3:	call   0x65008780
650095b8:	mov    eax,esi
650095ba:	mov    ecx,DWORD PTR [esp+0x14]
650095be:	mov    DWORD PTR fs:0x0,ecx
650095c5:	pop    ecx
650095c6:	pop    edi
650095c7:	pop    esi
650095c8:	pop    ebx
650095c9:	add    esp,0x10
650095cc:	ret    0x4
650095cf:	int3   
650095d0:	push   ebp
650095d1:	mov    ebp,esp
650095d3:	and    esp,0xfffffff8
650095d6:	push   0xffffffff
650095d8:	push   0x650227c8
650095dd:	mov    eax,fs:0x0
650095e3:	push   eax
650095e4:	sub    esp,0x50
650095e7:	push   ebx
650095e8:	push   esi
650095e9:	push   edi
650095ea:	mov    eax,ds:0x6502c09c
650095ef:	xor    eax,esp
650095f1:	push   eax
650095f2:	lea    eax,[esp+0x60]
650095f6:	mov    fs:0x0,eax
650095fc:	mov    DWORD PTR [esp+0x14],ecx
65009600:	mov    edi,DWORD PTR [ebp+0x10]
65009603:	cmp    BYTE PTR [edi+0x45],0x0
65009607:	je     0x65009655
65009609:	push   0x1b
6500960b:	xor    esi,esi
6500960d:	push   0x65028218
65009612:	lea    ecx,[esp+0x20]
65009616:	mov    DWORD PTR [esp+0x38],0xf
6500961e:	mov    DWORD PTR [esp+0x34],esi
65009622:	mov    BYTE PTR [esp+0x24],0x0
65009627:	call   0x650018c0
6500962c:	lea    eax,[esp+0x18]
65009630:	push   eax
65009631:	lea    ecx,[esp+0x38]
65009635:	mov    DWORD PTR [esp+0x6c],esi
65009639:	call   0x65002d20
6500963e:	push   0x65029edc
65009643:	lea    ecx,[esp+0x38]
65009647:	push   ecx
65009648:	mov    DWORD PTR [esp+0x3c],0x65024c1c
65009650:	call   0x65012366
65009655:	lea    ecx,[ebp+0xc]
65009658:	call   0x65009df0
6500965d:	mov    ecx,DWORD PTR [edi]
6500965f:	cmp    BYTE PTR [ecx+0x45],0x0
65009663:	je     0x6500966a
65009665:	mov    ebx,DWORD PTR [edi+0x8]
65009668:	jmp    0x65009681
6500966a:	mov    edx,DWORD PTR [edi+0x8]
6500966d:	cmp    BYTE PTR [edx+0x45],0x0
65009671:	je     0x65009677
65009673:	mov    ebx,ecx
65009675:	jmp    0x65009681
65009677:	mov    eax,DWORD PTR [ebp+0x10]
6500967a:	cmp    eax,edi
6500967c:	mov    ebx,DWORD PTR [eax+0x8]
6500967f:	jne    0x650096fd
65009681:	cmp    BYTE PTR [ebx+0x45],0x0
65009685:	mov    esi,DWORD PTR [edi+0x4]
65009688:	jne    0x6500968d
6500968a:	mov    DWORD PTR [ebx+0x4],esi
6500968d:	mov    ecx,DWORD PTR [esp+0x14]
65009691:	mov    eax,DWORD PTR [ecx+0x4]
65009694:	cmp    DWORD PTR [eax+0x4],edi
65009697:	jne    0x6500969e
65009699:	mov    DWORD PTR [eax+0x4],ebx
6500969c:	jmp    0x650096a9
6500969e:	cmp    DWORD PTR [esi],edi
650096a0:	jne    0x650096a6
650096a2:	mov    DWORD PTR [esi],ebx
650096a4:	jmp    0x650096a9
650096a6:	mov    DWORD PTR [esi+0x8],ebx
650096a9:	mov    eax,DWORD PTR [ecx+0x4]
650096ac:	cmp    DWORD PTR [eax],edi
650096ae:	jne    0x650096cc
650096b0:	cmp    BYTE PTR [ebx+0x45],0x0
650096b4:	je     0x650096ba
650096b6:	mov    eax,esi
650096b8:	jmp    0x650096c7
650096ba:	push   ebx
650096bb:	call   0x65009dd0
650096c0:	mov    ecx,DWORD PTR [esp+0x18]
650096c4:	add    esp,0x4
650096c7:	mov    edx,DWORD PTR [ecx+0x4]
650096ca:	mov    DWORD PTR [edx],eax
650096cc:	mov    eax,DWORD PTR [ecx+0x4]
650096cf:	cmp    DWORD PTR [eax+0x8],edi
650096d2:	jne    0x6500975c
650096d8:	cmp    BYTE PTR [ebx+0x45],0x0
650096dc:	je     0x650096e8
650096de:	mov    edx,DWORD PTR [ecx+0x4]
650096e1:	mov    eax,esi
650096e3:	mov    DWORD PTR [edx+0x8],eax
650096e6:	jmp    0x6500975c
650096e8:	push   ebx
650096e9:	call   0x65009cb0
650096ee:	mov    ecx,DWORD PTR [esp+0x18]
650096f2:	mov    edx,DWORD PTR [ecx+0x4]
650096f5:	add    esp,0x4
650096f8:	mov    DWORD PTR [edx+0x8],eax
650096fb:	jmp    0x6500975c
650096fd:	mov    DWORD PTR [ecx+0x4],eax
65009700:	mov    ecx,DWORD PTR [edi]
65009702:	mov    DWORD PTR [eax],ecx
65009704:	cmp    eax,DWORD PTR [edi+0x8]
65009707:	jne    0x6500970d
65009709:	mov    esi,eax
6500970b:	jmp    0x65009727
6500970d:	cmp    BYTE PTR [ebx+0x45],0x0
65009711:	mov    esi,DWORD PTR [eax+0x4]
65009714:	jne    0x65009719
65009716:	mov    DWORD PTR [ebx+0x4],esi
65009719:	mov    DWORD PTR [esi],ebx
6500971b:	mov    edx,DWORD PTR [edi+0x8]
6500971e:	mov    DWORD PTR [eax+0x8],edx
65009721:	mov    ecx,DWORD PTR [edi+0x8]
65009724:	mov    DWORD PTR [ecx+0x4],eax
65009727:	mov    edx,DWORD PTR [esp+0x14]
6500972b:	mov    ecx,DWORD PTR [edx+0x4]
6500972e:	cmp    DWORD PTR [ecx+0x4],edi
65009731:	jne    0x65009738
65009733:	mov    DWORD PTR [ecx+0x4],eax
65009736:	jmp    0x65009746
65009738:	mov    ecx,DWORD PTR [edi+0x4]
6500973b:	cmp    DWORD PTR [ecx],edi
6500973d:	jne    0x65009743
6500973f:	mov    DWORD PTR [ecx],eax
65009741:	jmp    0x65009746
65009743:	mov    DWORD PTR [ecx+0x8],eax
65009746:	mov    ecx,DWORD PTR [edi+0x4]
65009749:	mov    DWORD PTR [eax+0x4],ecx
6500974c:	mov    cl,BYTE PTR [eax+0x44]
6500974f:	mov    dl,BYTE PTR [edi+0x44]
65009752:	mov    BYTE PTR [eax+0x44],dl
65009755:	mov    BYTE PTR [edi+0x44],cl
65009758:	mov    ecx,DWORD PTR [esp+0x14]
6500975c:	cmp    BYTE PTR [edi+0x44],0x1
65009760:	jne    0x65009871
65009766:	mov    eax,DWORD PTR [ecx+0x4]
65009769:	cmp    ebx,DWORD PTR [eax+0x4]
6500976c:	je     0x6500986d
65009772:	cmp    BYTE PTR [ebx+0x44],0x1
65009776:	jne    0x6500986d
6500977c:	mov    eax,DWORD PTR [esi]
6500977e:	cmp    ebx,eax
65009780:	jne    0x650097f0
65009782:	mov    eax,DWORD PTR [esi+0x8]
65009785:	cmp    BYTE PTR [eax+0x44],0x0
65009789:	jne    0x650097a0
6500978b:	mov    BYTE PTR [eax+0x44],0x1
6500978f:	push   esi
65009790:	mov    BYTE PTR [esi+0x44],0x0
65009794:	call   0x65008e40
65009799:	mov    eax,DWORD PTR [esi+0x8]
6500979c:	mov    ecx,DWORD PTR [esp+0x14]
650097a0:	cmp    BYTE PTR [eax+0x45],0x0
650097a4:	jne    0x65009825
650097a6:	mov    edx,DWORD PTR [eax]
650097a8:	cmp    BYTE PTR [edx+0x44],0x1
650097ac:	jne    0x650097b7
650097ae:	mov    edx,DWORD PTR [eax+0x8]
650097b1:	cmp    BYTE PTR [edx+0x44],0x1
650097b5:	je     0x65009821
650097b7:	mov    edx,DWORD PTR [eax+0x8]
650097ba:	cmp    BYTE PTR [edx+0x44],0x1
650097be:	jne    0x650097d7
650097c0:	mov    edx,DWORD PTR [eax]
650097c2:	mov    BYTE PTR [edx+0x44],0x1
650097c6:	push   eax
650097c7:	mov    BYTE PTR [eax+0x44],0x0
650097cb:	call   0x65008fd0
650097d0:	mov    eax,DWORD PTR [esi+0x8]
650097d3:	mov    ecx,DWORD PTR [esp+0x14]
650097d7:	mov    dl,BYTE PTR [esi+0x44]
650097da:	mov    BYTE PTR [eax+0x44],dl
650097dd:	mov    BYTE PTR [esi+0x44],0x1
650097e1:	mov    eax,DWORD PTR [eax+0x8]
650097e4:	push   esi
650097e5:	mov    BYTE PTR [eax+0x44],0x1
650097e9:	call   0x65008e40
650097ee:	jmp    0x6500986d
650097f0:	cmp    BYTE PTR [eax+0x44],0x0
650097f4:	jne    0x6500980a
650097f6:	mov    BYTE PTR [eax+0x44],0x1
650097fa:	push   esi
650097fb:	mov    BYTE PTR [esi+0x44],0x0
650097ff:	call   0x65008fd0
65009804:	mov    eax,DWORD PTR [esi]
65009806:	mov    ecx,DWORD PTR [esp+0x14]
6500980a:	cmp    BYTE PTR [eax+0x45],0x0
6500980e:	jne    0x65009825
65009810:	mov    edx,DWORD PTR [eax+0x8]
65009813:	cmp    BYTE PTR [edx+0x44],0x1
65009817:	jne    0x65009838
65009819:	mov    edx,DWORD PTR [eax]
6500981b:	cmp    BYTE PTR [edx+0x44],0x1
6500981f:	jne    0x65009838
65009821:	mov    BYTE PTR [eax+0x44],0x0
65009825:	mov    eax,DWORD PTR [ecx+0x4]
65009828:	mov    ebx,esi
6500982a:	cmp    ebx,DWORD PTR [eax+0x4]
6500982d:	mov    esi,DWORD PTR [esi+0x4]
65009830:	jne    0x65009772
65009836:	jmp    0x6500986d
65009838:	mov    edx,DWORD PTR [eax]
6500983a:	cmp    BYTE PTR [edx+0x44],0x1
6500983e:	jne    0x65009857
65009840:	mov    edx,DWORD PTR [eax+0x8]
65009843:	mov    BYTE PTR [edx+0x44],0x1
65009847:	push   eax
65009848:	mov    BYTE PTR [eax+0x44],0x0
6500984c:	call   0x65008e40
65009851:	mov    eax,DWORD PTR [esi]
65009853:	mov    ecx,DWORD PTR [esp+0x14]
65009857:	mov    dl,BYTE PTR [esi+0x44]
6500985a:	mov    BYTE PTR [eax+0x44],dl
6500985d:	mov    BYTE PTR [esi+0x44],0x1
65009861:	mov    eax,DWORD PTR [eax]
65009863:	push   esi
65009864:	mov    BYTE PTR [eax+0x44],0x1
65009868:	call   0x65008fd0
6500986d:	mov    BYTE PTR [ebx+0x44],0x1
65009871:	cmp    DWORD PTR [edi+0x40],0x10
65009875:	jb     0x65009883
65009877:	mov    ecx,DWORD PTR [edi+0x2c]
6500987a:	push   ecx
6500987b:	call   0x65011f62
65009880:	add    esp,0x4
65009883:	xor    esi,esi
65009885:	mov    ebx,0xf
6500988a:	mov    DWORD PTR [edi+0x40],ebx
6500988d:	mov    DWORD PTR [edi+0x3c],esi
65009890:	mov    BYTE PTR [edi+0x2c],0x0
65009894:	cmp    DWORD PTR [edi+0x24],0x10
65009898:	jb     0x650098a6
6500989a:	mov    edx,DWORD PTR [edi+0x10]
6500989d:	push   edx
6500989e:	call   0x65011f62
650098a3:	add    esp,0x4
650098a6:	mov    DWORD PTR [edi+0x24],ebx
650098a9:	mov    DWORD PTR [edi+0x20],esi
650098ac:	push   edi
650098ad:	mov    BYTE PTR [edi+0x10],0x0
650098b1:	call   0x65011f62
650098b6:	mov    ecx,DWORD PTR [esp+0x18]
650098ba:	mov    eax,DWORD PTR [ecx+0x8]
650098bd:	add    esp,0x4
650098c0:	cmp    eax,esi
650098c2:	jbe    0x650098ca
650098c4:	add    eax,0xffffffff
650098c7:	mov    DWORD PTR [ecx+0x8],eax
650098ca:	mov    eax,DWORD PTR [ebp+0x8]
650098cd:	mov    ecx,DWORD PTR [ebp+0xc]
650098d0:	mov    edx,DWORD PTR [ebp+0x10]
650098d3:	mov    DWORD PTR [eax],ecx
650098d5:	mov    DWORD PTR [eax+0x4],edx
650098d8:	mov    ecx,DWORD PTR [esp+0x60]
650098dc:	mov    DWORD PTR fs:0x0,ecx
650098e3:	pop    ecx
650098e4:	pop    edi
650098e5:	pop    esi
650098e6:	pop    ebx
650098e7:	mov    esp,ebp
650098e9:	pop    ebp
650098ea:	ret    0xc
650098ed:	int3   
650098ee:	int3   
650098ef:	int3   
650098f0:	push   0x48
650098f2:	call   0x650122fc
650098f7:	add    esp,0x4
650098fa:	test   eax,eax
650098fc:	je     0x65009904
650098fe:	mov    DWORD PTR [eax],0x0
65009904:	lea    ecx,[eax+0x4]
65009907:	test   ecx,ecx
65009909:	je     0x65009911
6500990b:	mov    DWORD PTR [ecx],0x0
65009911:	lea    ecx,[eax+0x8]
65009914:	test   ecx,ecx
65009916:	je     0x6500991e
65009918:	mov    DWORD PTR [ecx],0x0
6500991e:	mov    BYTE PTR [eax+0x44],0x1
65009922:	mov    BYTE PTR [eax+0x45],0x0
65009926:	ret    
65009927:	int3   
65009928:	int3   
65009929:	int3   
6500992a:	int3   
6500992b:	int3   
6500992c:	int3   
6500992d:	int3   
6500992e:	int3   
6500992f:	int3   
65009930:	mov    ecx,DWORD PTR [esp+0x4]
65009934:	sub    esp,0xc
65009937:	test   ecx,ecx
65009939:	ja     0x6500994f
6500993b:	xor    ecx,ecx
6500993d:	lea    edx,[ecx+ecx*1]
65009940:	push   edx
65009941:	call   0x650122fc
65009946:	add    esp,0x4
65009949:	add    esp,0xc
6500994c:	ret    0x4
6500994f:	or     eax,0xffffffff
65009952:	xor    edx,edx
65009954:	div    ecx
65009956:	cmp    eax,0x2
65009959:	jae    0x6500993d
6500995b:	lea    eax,[esp+0x10]
6500995f:	push   eax
65009960:	lea    ecx,[esp+0x4]
65009964:	mov    DWORD PTR [esp+0x14],0x0
6500996c:	call   0x65011f78
65009971:	push   0x65029e4c
65009976:	lea    ecx,[esp+0x4]
6500997a:	push   ecx
6500997b:	mov    DWORD PTR [esp+0x8],0x65024bf8
65009983:	call   0x65012366
65009988:	int3   
65009989:	int3   
6500998a:	int3   
6500998b:	int3   
6500998c:	int3   
6500998d:	int3   
6500998e:	int3   
6500998f:	int3   
65009990:	push   ebp
65009991:	mov    ebp,esp
65009993:	and    esp,0xfffffff8
65009996:	push   0xffffffff
65009998:	push   0x65022798
6500999d:	mov    eax,fs:0x0
650099a3:	push   eax
650099a4:	sub    esp,0x50
650099a7:	push   ebx
650099a8:	push   esi
650099a9:	push   edi
650099aa:	mov    eax,ds:0x6502c09c
650099af:	xor    eax,esp
650099b1:	push   eax
650099b2:	lea    eax,[esp+0x60]
650099b6:	mov    fs:0x0,eax
650099bc:	mov    DWORD PTR [esp+0x14],ecx
650099c0:	mov    edi,DWORD PTR [ebp+0x10]
650099c3:	cmp    BYTE PTR [edi+0x45],0x0
650099c7:	je     0x65009a15
650099c9:	push   0x1b
650099cb:	xor    esi,esi
650099cd:	push   0x65028218
650099d2:	lea    ecx,[esp+0x20]
650099d6:	mov    DWORD PTR [esp+0x38],0xf
650099de:	mov    DWORD PTR [esp+0x34],esi
650099e2:	mov    BYTE PTR [esp+0x24],0x0
650099e7:	call   0x650018c0
650099ec:	lea    eax,[esp+0x18]
650099f0:	push   eax
650099f1:	lea    ecx,[esp+0x38]
650099f5:	mov    DWORD PTR [esp+0x6c],esi
650099f9:	call   0x65002d20
650099fe:	push   0x65029edc
65009a03:	lea    ecx,[esp+0x38]
65009a07:	push   ecx
65009a08:	mov    DWORD PTR [esp+0x3c],0x65024c1c
65009a10:	call   0x65012366
65009a15:	lea    ecx,[ebp+0xc]
65009a18:	call   0x65009df0
65009a1d:	mov    ecx,DWORD PTR [edi]
65009a1f:	cmp    BYTE PTR [ecx+0x45],0x0
65009a23:	je     0x65009a2a
65009a25:	mov    ebx,DWORD PTR [edi+0x8]
65009a28:	jmp    0x65009a41
65009a2a:	mov    edx,DWORD PTR [edi+0x8]
65009a2d:	cmp    BYTE PTR [edx+0x45],0x0
65009a31:	je     0x65009a37
65009a33:	mov    ebx,ecx
65009a35:	jmp    0x65009a41
65009a37:	mov    eax,DWORD PTR [ebp+0x10]
65009a3a:	cmp    eax,edi
65009a3c:	mov    ebx,DWORD PTR [eax+0x8]
65009a3f:	jne    0x65009abd
65009a41:	cmp    BYTE PTR [ebx+0x45],0x0
65009a45:	mov    esi,DWORD PTR [edi+0x4]
65009a48:	jne    0x65009a4d
65009a4a:	mov    DWORD PTR [ebx+0x4],esi
65009a4d:	mov    ecx,DWORD PTR [esp+0x14]
65009a51:	mov    eax,DWORD PTR [ecx+0x4]
65009a54:	cmp    DWORD PTR [eax+0x4],edi
65009a57:	jne    0x65009a5e
65009a59:	mov    DWORD PTR [eax+0x4],ebx
65009a5c:	jmp    0x65009a69
65009a5e:	cmp    DWORD PTR [esi],edi
65009a60:	jne    0x65009a66
65009a62:	mov    DWORD PTR [esi],ebx
65009a64:	jmp    0x65009a69
65009a66:	mov    DWORD PTR [esi+0x8],ebx
65009a69:	mov    eax,DWORD PTR [ecx+0x4]
65009a6c:	cmp    DWORD PTR [eax],edi
65009a6e:	jne    0x65009a8c
65009a70:	cmp    BYTE PTR [ebx+0x45],0x0
65009a74:	je     0x65009a7a
65009a76:	mov    eax,esi
65009a78:	jmp    0x65009a87
65009a7a:	push   ebx
65009a7b:	call   0x65009dd0
65009a80:	mov    ecx,DWORD PTR [esp+0x18]
65009a84:	add    esp,0x4
65009a87:	mov    edx,DWORD PTR [ecx+0x4]
65009a8a:	mov    DWORD PTR [edx],eax
65009a8c:	mov    eax,DWORD PTR [ecx+0x4]
65009a8f:	cmp    DWORD PTR [eax+0x8],edi
65009a92:	jne    0x65009b1c
65009a98:	cmp    BYTE PTR [ebx+0x45],0x0
65009a9c:	je     0x65009aa8
65009a9e:	mov    edx,DWORD PTR [ecx+0x4]
65009aa1:	mov    eax,esi
65009aa3:	mov    DWORD PTR [edx+0x8],eax
65009aa6:	jmp    0x65009b1c
65009aa8:	push   ebx
65009aa9:	call   0x65009cb0
65009aae:	mov    ecx,DWORD PTR [esp+0x18]
65009ab2:	mov    edx,DWORD PTR [ecx+0x4]
65009ab5:	add    esp,0x4
65009ab8:	mov    DWORD PTR [edx+0x8],eax
65009abb:	jmp    0x65009b1c
65009abd:	mov    DWORD PTR [ecx+0x4],eax
65009ac0:	mov    ecx,DWORD PTR [edi]
65009ac2:	mov    DWORD PTR [eax],ecx
65009ac4:	cmp    eax,DWORD PTR [edi+0x8]
65009ac7:	jne    0x65009acd
65009ac9:	mov    esi,eax
65009acb:	jmp    0x65009ae7
65009acd:	cmp    BYTE PTR [ebx+0x45],0x0
65009ad1:	mov    esi,DWORD PTR [eax+0x4]
65009ad4:	jne    0x65009ad9
65009ad6:	mov    DWORD PTR [ebx+0x4],esi
65009ad9:	mov    DWORD PTR [esi],ebx
65009adb:	mov    edx,DWORD PTR [edi+0x8]
65009ade:	mov    DWORD PTR [eax+0x8],edx
65009ae1:	mov    ecx,DWORD PTR [edi+0x8]
65009ae4:	mov    DWORD PTR [ecx+0x4],eax
65009ae7:	mov    edx,DWORD PTR [esp+0x14]
65009aeb:	mov    ecx,DWORD PTR [edx+0x4]
65009aee:	cmp    DWORD PTR [ecx+0x4],edi
65009af1:	jne    0x65009af8
65009af3:	mov    DWORD PTR [ecx+0x4],eax
65009af6:	jmp    0x65009b06
65009af8:	mov    ecx,DWORD PTR [edi+0x4]
65009afb:	cmp    DWORD PTR [ecx],edi
65009afd:	jne    0x65009b03
65009aff:	mov    DWORD PTR [ecx],eax
65009b01:	jmp    0x65009b06
65009b03:	mov    DWORD PTR [ecx+0x8],eax
65009b06:	mov    ecx,DWORD PTR [edi+0x4]
65009b09:	mov    DWORD PTR [eax+0x4],ecx
65009b0c:	mov    cl,BYTE PTR [eax+0x44]
65009b0f:	mov    dl,BYTE PTR [edi+0x44]
65009b12:	mov    BYTE PTR [eax+0x44],dl
65009b15:	mov    BYTE PTR [edi+0x44],cl
65009b18:	mov    ecx,DWORD PTR [esp+0x14]
65009b1c:	cmp    BYTE PTR [edi+0x44],0x1
65009b20:	jne    0x65009c31
65009b26:	mov    eax,DWORD PTR [ecx+0x4]
65009b29:	cmp    ebx,DWORD PTR [eax+0x4]
65009b2c:	je     0x65009c2d
65009b32:	cmp    BYTE PTR [ebx+0x44],0x1
65009b36:	jne    0x65009c2d
65009b3c:	mov    eax,DWORD PTR [esi]
65009b3e:	cmp    ebx,eax
65009b40:	jne    0x65009bb0
65009b42:	mov    eax,DWORD PTR [esi+0x8]
65009b45:	cmp    BYTE PTR [eax+0x44],0x0
65009b49:	jne    0x65009b60
65009b4b:	mov    BYTE PTR [eax+0x44],0x1
65009b4f:	push   esi
65009b50:	mov    BYTE PTR [esi+0x44],0x0
65009b54:	call   0x65008e40
65009b59:	mov    eax,DWORD PTR [esi+0x8]
65009b5c:	mov    ecx,DWORD PTR [esp+0x14]
65009b60:	cmp    BYTE PTR [eax+0x45],0x0
65009b64:	jne    0x65009be5
65009b66:	mov    edx,DWORD PTR [eax]
65009b68:	cmp    BYTE PTR [edx+0x44],0x1
65009b6c:	jne    0x65009b77
65009b6e:	mov    edx,DWORD PTR [eax+0x8]
65009b71:	cmp    BYTE PTR [edx+0x44],0x1
65009b75:	je     0x65009be1
65009b77:	mov    edx,DWORD PTR [eax+0x8]
65009b7a:	cmp    BYTE PTR [edx+0x44],0x1
65009b7e:	jne    0x65009b97
65009b80:	mov    edx,DWORD PTR [eax]
65009b82:	mov    BYTE PTR [edx+0x44],0x1
65009b86:	push   eax
65009b87:	mov    BYTE PTR [eax+0x44],0x0
65009b8b:	call   0x65008fd0
65009b90:	mov    eax,DWORD PTR [esi+0x8]
65009b93:	mov    ecx,DWORD PTR [esp+0x14]
65009b97:	mov    dl,BYTE PTR [esi+0x44]
65009b9a:	mov    BYTE PTR [eax+0x44],dl
65009b9d:	mov    BYTE PTR [esi+0x44],0x1
65009ba1:	mov    eax,DWORD PTR [eax+0x8]
65009ba4:	push   esi
65009ba5:	mov    BYTE PTR [eax+0x44],0x1
65009ba9:	call   0x65008e40
65009bae:	jmp    0x65009c2d
65009bb0:	cmp    BYTE PTR [eax+0x44],0x0
65009bb4:	jne    0x65009bca
65009bb6:	mov    BYTE PTR [eax+0x44],0x1
65009bba:	push   esi
65009bbb:	mov    BYTE PTR [esi+0x44],0x0
65009bbf:	call   0x65008fd0
65009bc4:	mov    eax,DWORD PTR [esi]
65009bc6:	mov    ecx,DWORD PTR [esp+0x14]
65009bca:	cmp    BYTE PTR [eax+0x45],0x0
65009bce:	jne    0x65009be5
65009bd0:	mov    edx,DWORD PTR [eax+0x8]
65009bd3:	cmp    BYTE PTR [edx+0x44],0x1
65009bd7:	jne    0x65009bf8
65009bd9:	mov    edx,DWORD PTR [eax]
65009bdb:	cmp    BYTE PTR [edx+0x44],0x1
65009bdf:	jne    0x65009bf8
65009be1:	mov    BYTE PTR [eax+0x44],0x0
65009be5:	mov    eax,DWORD PTR [ecx+0x4]
65009be8:	mov    ebx,esi
65009bea:	cmp    ebx,DWORD PTR [eax+0x4]
65009bed:	mov    esi,DWORD PTR [esi+0x4]
65009bf0:	jne    0x65009b32
65009bf6:	jmp    0x65009c2d
65009bf8:	mov    edx,DWORD PTR [eax]
65009bfa:	cmp    BYTE PTR [edx+0x44],0x1
65009bfe:	jne    0x65009c17
65009c00:	mov    edx,DWORD PTR [eax+0x8]
65009c03:	mov    BYTE PTR [edx+0x44],0x1
65009c07:	push   eax
65009c08:	mov    BYTE PTR [eax+0x44],0x0
65009c0c:	call   0x65008e40
65009c11:	mov    eax,DWORD PTR [esi]
65009c13:	mov    ecx,DWORD PTR [esp+0x14]
65009c17:	mov    dl,BYTE PTR [esi+0x44]
65009c1a:	mov    BYTE PTR [eax+0x44],dl
65009c1d:	mov    BYTE PTR [esi+0x44],0x1
65009c21:	mov    eax,DWORD PTR [eax]
65009c23:	push   esi
65009c24:	mov    BYTE PTR [eax+0x44],0x1
65009c28:	call   0x65008fd0
65009c2d:	mov    BYTE PTR [ebx+0x44],0x1
65009c31:	cmp    DWORD PTR [edi+0x40],0x8
65009c35:	jb     0x65009c43
65009c37:	mov    ecx,DWORD PTR [edi+0x2c]
65009c3a:	push   ecx
65009c3b:	call   0x65011f62
65009c40:	add    esp,0x4
65009c43:	xor    esi,esi
65009c45:	mov    ebx,0x7
65009c4a:	mov    DWORD PTR [edi+0x40],ebx
65009c4d:	mov    DWORD PTR [edi+0x3c],esi
65009c50:	mov    WORD PTR [edi+0x2c],si
65009c54:	cmp    DWORD PTR [edi+0x24],0x8
65009c58:	jb     0x65009c66
65009c5a:	mov    edx,DWORD PTR [edi+0x10]
65009c5d:	push   edx
65009c5e:	call   0x65011f62
65009c63:	add    esp,0x4
65009c66:	mov    DWORD PTR [edi+0x24],ebx
65009c69:	mov    DWORD PTR [edi+0x20],esi
65009c6c:	push   edi
65009c6d:	mov    WORD PTR [edi+0x10],si
65009c71:	call   0x65011f62
65009c76:	mov    ecx,DWORD PTR [esp+0x18]
65009c7a:	mov    eax,DWORD PTR [ecx+0x8]
65009c7d:	add    esp,0x4
65009c80:	cmp    eax,esi
65009c82:	jbe    0x65009c8a
65009c84:	add    eax,0xffffffff
65009c87:	mov    DWORD PTR [ecx+0x8],eax
65009c8a:	mov    eax,DWORD PTR [ebp+0x8]
65009c8d:	mov    ecx,DWORD PTR [ebp+0xc]
65009c90:	mov    edx,DWORD PTR [ebp+0x10]
65009c93:	mov    DWORD PTR [eax],ecx
65009c95:	mov    DWORD PTR [eax+0x4],edx
65009c98:	mov    ecx,DWORD PTR [esp+0x60]
65009c9c:	mov    DWORD PTR fs:0x0,ecx
65009ca3:	pop    ecx
65009ca4:	pop    edi
65009ca5:	pop    esi
65009ca6:	pop    ebx
65009ca7:	mov    esp,ebp
65009ca9:	pop    ebp
65009caa:	ret    0xc
65009cad:	int3   
65009cae:	int3   
65009caf:	int3   
65009cb0:	mov    eax,DWORD PTR [esp+0x4]
65009cb4:	mov    ecx,DWORD PTR [eax+0x8]
65009cb7:	cmp    BYTE PTR [ecx+0x45],0x0
65009cbb:	jne    0x65009ccb
65009cbd:	lea    ecx,[ecx+0x0]
65009cc0:	mov    eax,ecx
65009cc2:	mov    ecx,DWORD PTR [eax+0x8]
65009cc5:	cmp    BYTE PTR [ecx+0x45],0x0
65009cc9:	je     0x65009cc0
65009ccb:	ret    
65009ccc:	int3   
65009ccd:	int3   
65009cce:	int3   
65009ccf:	int3   
65009cd0:	push   ecx
65009cd1:	push   ebx
65009cd2:	push   esi
65009cd3:	mov    esi,DWORD PTR [esp+0x10]
65009cd7:	xor    ebx,ebx
65009cd9:	cmp    BYTE PTR [esi+0x45],bl
65009cdc:	push   edi
65009cdd:	mov    DWORD PTR [esp+0xc],ecx
65009ce1:	mov    edi,esi
65009ce3:	jne    0x65009d46
65009ce5:	push   ebp
65009ce6:	lea    ebp,[ebx+0xf]
65009ce9:	lea    esp,[esp+0x0]
65009cf0:	mov    eax,DWORD PTR [edi+0x8]
65009cf3:	mov    ecx,DWORD PTR [esp+0x10]
65009cf7:	push   eax
65009cf8:	call   0x65009cd0
65009cfd:	cmp    DWORD PTR [esi+0x40],0x10
65009d01:	mov    edi,DWORD PTR [edi]
65009d03:	jb     0x65009d11
65009d05:	mov    ecx,DWORD PTR [esi+0x2c]
65009d08:	push   ecx
65009d09:	call   0x65011f62
65009d0e:	add    esp,0x4
65009d11:	mov    DWORD PTR [esi+0x40],ebp
65009d14:	mov    DWORD PTR [esi+0x3c],ebx
65009d17:	mov    BYTE PTR [esi+0x2c],bl
65009d1a:	cmp    DWORD PTR [esi+0x24],0x10
65009d1e:	jb     0x65009d2c
65009d20:	mov    edx,DWORD PTR [esi+0x10]
65009d23:	push   edx
65009d24:	call   0x65011f62
65009d29:	add    esp,0x4
65009d2c:	mov    DWORD PTR [esi+0x24],ebp
65009d2f:	mov    DWORD PTR [esi+0x20],ebx
65009d32:	push   esi
65009d33:	mov    BYTE PTR [esi+0x10],bl
65009d36:	call   0x65011f62
65009d3b:	add    esp,0x4
65009d3e:	cmp    BYTE PTR [edi+0x45],bl
65009d41:	mov    esi,edi
65009d43:	je     0x65009cf0
65009d45:	pop    ebp
65009d46:	pop    edi
65009d47:	pop    esi
65009d48:	pop    ebx
65009d49:	pop    ecx
65009d4a:	ret    0x4
65009d4d:	int3   
65009d4e:	int3   
65009d4f:	int3   
65009d50:	push   ecx
65009d51:	push   ebx
65009d52:	push   esi
65009d53:	mov    esi,DWORD PTR [esp+0x10]
65009d57:	xor    ebx,ebx
65009d59:	cmp    BYTE PTR [esi+0x45],bl
65009d5c:	push   edi
65009d5d:	mov    DWORD PTR [esp+0xc],ecx
65009d61:	mov    edi,esi
65009d63:	jne    0x65009dc8
65009d65:	push   ebp
65009d66:	lea    ebp,[ebx+0x7]
65009d69:	lea    esp,[esp+0x0]
65009d70:	mov    eax,DWORD PTR [edi+0x8]
65009d73:	mov    ecx,DWORD PTR [esp+0x10]
65009d77:	push   eax
65009d78:	call   0x65009d50
65009d7d:	cmp    DWORD PTR [esi+0x40],0x8
65009d81:	mov    edi,DWORD PTR [edi]
65009d83:	jb     0x65009d91
65009d85:	mov    ecx,DWORD PTR [esi+0x2c]
65009d88:	push   ecx
65009d89:	call   0x65011f62
65009d8e:	add    esp,0x4
65009d91:	mov    DWORD PTR [esi+0x40],ebp
65009d94:	mov    DWORD PTR [esi+0x3c],ebx
65009d97:	mov    WORD PTR [esi+0x2c],bx
65009d9b:	cmp    DWORD PTR [esi+0x24],0x8
65009d9f:	jb     0x65009dad
65009da1:	mov    edx,DWORD PTR [esi+0x10]
65009da4:	push   edx
65009da5:	call   0x65011f62
65009daa:	add    esp,0x4
65009dad:	mov    DWORD PTR [esi+0x24],ebp
65009db0:	mov    DWORD PTR [esi+0x20],ebx
65009db3:	push   esi
65009db4:	mov    WORD PTR [esi+0x10],bx
65009db8:	call   0x65011f62
65009dbd:	add    esp,0x4
65009dc0:	cmp    BYTE PTR [edi+0x45],bl
65009dc3:	mov    esi,edi
65009dc5:	je     0x65009d70
65009dc7:	pop    ebp
65009dc8:	pop    edi
65009dc9:	pop    esi
65009dca:	pop    ebx
65009dcb:	pop    ecx
65009dcc:	ret    0x4
65009dcf:	int3   
65009dd0:	mov    eax,DWORD PTR [esp+0x4]
65009dd4:	mov    ecx,DWORD PTR [eax]
65009dd6:	cmp    BYTE PTR [ecx+0x45],0x0
65009dda:	jne    0x65009dea
65009ddc:	lea    esp,[esp+0x0]
65009de0:	mov    eax,ecx
65009de2:	mov    ecx,DWORD PTR [eax]
65009de4:	cmp    BYTE PTR [ecx+0x45],0x0
65009de8:	je     0x65009de0
65009dea:	ret    
65009deb:	int3   
65009dec:	int3   
65009ded:	int3   
65009dee:	int3   
65009def:	int3   
65009df0:	push   esi
65009df1:	mov    esi,ecx
65009df3:	cmp    DWORD PTR [esi],0x0
65009df6:	jne    0x65009dfd
65009df8:	call   0x650122d3
65009dfd:	mov    eax,DWORD PTR [esi+0x4]
65009e00:	cmp    BYTE PTR [eax+0x45],0x0
65009e04:	je     0x65009e0c
65009e06:	pop    esi
65009e07:	jmp    0x650122d3
65009e0c:	mov    ecx,DWORD PTR [eax+0x8]
65009e0f:	cmp    BYTE PTR [ecx+0x45],0x0
65009e13:	jne    0x65009e2f
65009e15:	mov    eax,DWORD PTR [ecx]
65009e17:	cmp    BYTE PTR [eax+0x45],0x0
65009e1b:	jne    0x65009e2a
65009e1d:	lea    ecx,[ecx+0x0]
65009e20:	mov    ecx,eax
65009e22:	mov    eax,DWORD PTR [ecx]
65009e24:	cmp    BYTE PTR [eax+0x45],0x0
65009e28:	je     0x65009e20
65009e2a:	mov    DWORD PTR [esi+0x4],ecx
65009e2d:	pop    esi
65009e2e:	ret    
65009e2f:	mov    eax,DWORD PTR [eax+0x4]
65009e32:	cmp    BYTE PTR [eax+0x45],0x0
65009e36:	jne    0x65009e4e
65009e38:	mov    ecx,DWORD PTR [esi+0x4]
65009e3b:	cmp    ecx,DWORD PTR [eax+0x8]
65009e3e:	jne    0x65009e4e
65009e40:	mov    DWORD PTR [esi+0x4],eax
65009e43:	mov    edx,eax
65009e45:	mov    eax,DWORD PTR [edx+0x4]
65009e48:	cmp    BYTE PTR [eax+0x45],0x0
65009e4c:	je     0x65009e38
65009e4e:	mov    DWORD PTR [esi+0x4],eax
65009e51:	pop    esi
65009e52:	ret    
65009e53:	int3   
65009e54:	int3   
65009e55:	int3   
65009e56:	int3   
65009e57:	int3   
65009e58:	int3   
65009e59:	int3   
65009e5a:	int3   
65009e5b:	int3   
65009e5c:	int3   
65009e5d:	int3   
65009e5e:	int3   
65009e5f:	int3   
65009e60:	push   0xffffffff
65009e62:	push   0x65022338
65009e67:	mov    eax,fs:0x0
65009e6d:	push   eax
65009e6e:	sub    esp,0x20
65009e71:	push   ebx
65009e72:	push   ebp
65009e73:	mov    eax,ds:0x6502c09c
65009e78:	xor    eax,esp
65009e7a:	push   eax
65009e7b:	lea    eax,[esp+0x2c]
65009e7f:	mov    fs:0x0,eax
65009e85:	mov    eax,DWORD PTR [esp+0x3c]
65009e89:	xor    ebx,ebx
65009e8b:	push   0xffffffff
65009e8d:	push   ebx
65009e8e:	push   eax
65009e8f:	lea    ecx,[esp+0x1c]
65009e93:	mov    DWORD PTR [esp+0x18],ebx
65009e97:	mov    DWORD PTR [esp+0x34],0xf
65009e9f:	mov    DWORD PTR [esp+0x30],ebx
65009ea3:	mov    BYTE PTR [esp+0x20],bl
65009ea7:	call   0x650017e0
65009eac:	mov    eax,edi
65009eae:	mov    DWORD PTR [esp+0x34],ebx
65009eb2:	lea    ebp,[eax+0x1]
65009eb5:	mov    cl,BYTE PTR [eax]
65009eb7:	add    eax,0x1
65009eba:	cmp    cl,bl
65009ebc:	jne    0x65009eb5
65009ebe:	sub    eax,ebp
65009ec0:	push   eax
65009ec1:	push   edi
65009ec2:	lea    eax,[esp+0x18]
65009ec6:	call   0x6500a2e0
65009ecb:	push   0xffffffff
65009ecd:	push   ebx
65009ece:	mov    DWORD PTR [esi+0x18],0xf
65009ed5:	mov    DWORD PTR [esi+0x14],ebx
65009ed8:	push   eax
65009ed9:	mov    ecx,esi
65009edb:	mov    BYTE PTR [esi+0x4],bl
65009ede:	call   0x650017e0
65009ee3:	cmp    DWORD PTR [esp+0x28],0x10
65009ee8:	jb     0x65009ef7
65009eea:	mov    ecx,DWORD PTR [esp+0x14]
65009eee:	push   ecx
65009eef:	call   0x65011f62
65009ef4:	add    esp,0x4
65009ef7:	mov    eax,esi
65009ef9:	mov    ecx,DWORD PTR [esp+0x2c]
65009efd:	mov    DWORD PTR fs:0x0,ecx
65009f04:	pop    ecx
65009f05:	pop    ebp
65009f06:	pop    ebx
65009f07:	add    esp,0x2c
65009f0a:	ret    
65009f0b:	int3   
65009f0c:	int3   
65009f0d:	int3   
65009f0e:	int3   
65009f0f:	int3   
65009f10:	push   0xffffffff
65009f12:	push   0x65022310
65009f17:	mov    eax,fs:0x0
65009f1d:	push   eax
65009f1e:	push   ecx
65009f1f:	push   esi
65009f20:	mov    eax,ds:0x6502c09c
65009f25:	xor    eax,esp
65009f27:	push   eax
65009f28:	lea    eax,[esp+0xc]
65009f2c:	mov    fs:0x0,eax
65009f32:	mov    esi,DWORD PTR [esp+0x1c]
65009f36:	mov    DWORD PTR [esp+0x8],0x0
65009f3e:	lea    eax,[esp+0x3c]
65009f42:	push   eax
65009f43:	lea    ecx,[esp+0x24]
65009f47:	push   ecx
65009f48:	mov    ecx,esi
65009f4a:	mov    DWORD PTR [esp+0x1c],0x1
65009f52:	call   0x6500a150
65009f57:	cmp    DWORD PTR [esp+0x38],0x10
65009f5c:	jb     0x65009f6b
65009f5e:	mov    edx,DWORD PTR [esp+0x24]
65009f62:	push   edx
65009f63:	call   0x65011f62
65009f68:	add    esp,0x4
65009f6b:	cmp    DWORD PTR [esp+0x54],0x10
65009f70:	mov    DWORD PTR [esp+0x38],0xf
65009f78:	mov    DWORD PTR [esp+0x34],0x0
65009f80:	mov    BYTE PTR [esp+0x24],0x0
65009f85:	jb     0x65009f94
65009f87:	mov    eax,DWORD PTR [esp+0x40]
65009f8b:	push   eax
65009f8c:	call   0x65011f62
65009f91:	add    esp,0x4
65009f94:	mov    eax,esi
65009f96:	mov    ecx,DWORD PTR [esp+0xc]
65009f9a:	mov    DWORD PTR fs:0x0,ecx
65009fa1:	pop    ecx
65009fa2:	pop    esi
65009fa3:	add    esp,0x10
65009fa6:	ret    
65009fa7:	int3   
65009fa8:	int3   
65009fa9:	int3   
65009faa:	int3   
65009fab:	int3   
65009fac:	int3   
65009fad:	int3   
65009fae:	int3   
65009faf:	int3   
65009fb0:	push   0xffffffff
65009fb2:	push   0x650222d8
65009fb7:	mov    eax,fs:0x0
65009fbd:	push   eax
65009fbe:	push   ecx
65009fbf:	push   ebx
65009fc0:	push   esi
65009fc1:	push   edi
65009fc2:	mov    eax,ds:0x6502c09c
65009fc7:	xor    eax,esp
65009fc9:	push   eax
65009fca:	lea    eax,[esp+0x14]
65009fce:	mov    fs:0x0,eax
65009fd4:	mov    esi,ecx
65009fd6:	mov    DWORD PTR [esp+0x10],esi
65009fda:	mov    edi,DWORD PTR [esp+0x24]
65009fde:	xor    ebx,ebx
65009fe0:	push   0xffffffff
65009fe2:	push   ebx
65009fe3:	mov    DWORD PTR [esi+0x18],0xf
65009fea:	mov    DWORD PTR [esi+0x14],ebx
65009fed:	push   edi
65009fee:	mov    BYTE PTR [esi+0x4],bl
65009ff1:	call   0x650017e0
65009ff6:	push   0xffffffff
65009ff8:	lea    ecx,[esi+0x1c]
65009ffb:	mov    DWORD PTR [esp+0x20],ebx
65009fff:	lea    eax,[edi+0x1c]
6500a002:	push   ebx
6500a003:	mov    DWORD PTR [ecx+0x18],0xf
6500a00a:	mov    DWORD PTR [ecx+0x14],ebx
6500a00d:	push   eax
6500a00e:	mov    BYTE PTR [ecx+0x4],bl
6500a011:	call   0x650017e0
6500a016:	mov    eax,esi
6500a018:	mov    ecx,DWORD PTR [esp+0x14]
6500a01c:	mov    DWORD PTR fs:0x0,ecx
6500a023:	pop    ecx
6500a024:	pop    edi
6500a025:	pop    esi
6500a026:	pop    ebx
6500a027:	add    esp,0x10
6500a02a:	ret    0x4
6500a02d:	int3   
6500a02e:	int3   
6500a02f:	int3   
6500a030:	push   0xffffffff
6500a032:	push   0x65022680
6500a037:	mov    eax,fs:0x0
6500a03d:	push   eax
6500a03e:	push   ecx
6500a03f:	push   esi
6500a040:	mov    eax,ds:0x6502c09c
6500a045:	xor    eax,esp
6500a047:	push   eax
6500a048:	lea    eax,[esp+0xc]
6500a04c:	mov    fs:0x0,eax
6500a052:	mov    esi,DWORD PTR [esp+0x1c]
6500a056:	mov    DWORD PTR [esp+0x8],0x0
6500a05e:	lea    eax,[esp+0x3c]
6500a062:	push   eax
6500a063:	lea    ecx,[esp+0x24]
6500a067:	push   ecx
6500a068:	mov    ecx,esi
6500a06a:	mov    DWORD PTR [esp+0x1c],0x1
6500a072:	call   0x6500a1d0
6500a077:	cmp    DWORD PTR [esp+0x38],0x8
6500a07c:	jb     0x6500a08b
6500a07e:	mov    edx,DWORD PTR [esp+0x24]
6500a082:	push   edx
6500a083:	call   0x65011f62
6500a088:	add    esp,0x4
6500a08b:	cmp    DWORD PTR [esp+0x54],0x8
6500a090:	mov    DWORD PTR [esp+0x38],0x7
6500a098:	mov    DWORD PTR [esp+0x34],0x0
6500a0a0:	mov    WORD PTR [esp+0x24],0x0
6500a0a7:	jb     0x6500a0b6
6500a0a9:	mov    eax,DWORD PTR [esp+0x40]
6500a0ad:	push   eax
6500a0ae:	call   0x65011f62
6500a0b3:	add    esp,0x4
6500a0b6:	mov    eax,esi
6500a0b8:	mov    ecx,DWORD PTR [esp+0xc]
6500a0bc:	mov    DWORD PTR fs:0x0,ecx
6500a0c3:	pop    ecx
6500a0c4:	pop    esi
6500a0c5:	add    esp,0x10
6500a0c8:	ret    
6500a0c9:	int3   
6500a0ca:	int3   
6500a0cb:	int3   
6500a0cc:	int3   
6500a0cd:	int3   
6500a0ce:	int3   
6500a0cf:	int3   
6500a0d0:	push   0xffffffff
6500a0d2:	push   0x65022648
6500a0d7:	mov    eax,fs:0x0
6500a0dd:	push   eax
6500a0de:	push   ecx
6500a0df:	push   ebx
6500a0e0:	push   esi
6500a0e1:	push   edi
6500a0e2:	mov    eax,ds:0x6502c09c
6500a0e7:	xor    eax,esp
6500a0e9:	push   eax
6500a0ea:	lea    eax,[esp+0x14]
6500a0ee:	mov    fs:0x0,eax
6500a0f4:	mov    esi,ecx
6500a0f6:	mov    DWORD PTR [esp+0x10],esi
6500a0fa:	mov    ebx,DWORD PTR [esp+0x24]
6500a0fe:	xor    edi,edi
6500a100:	push   0xffffffff
6500a102:	push   edi
6500a103:	mov    DWORD PTR [esi+0x18],0x7
6500a10a:	mov    DWORD PTR [esi+0x14],edi
6500a10d:	push   ebx
6500a10e:	mov    WORD PTR [esi+0x4],di
6500a112:	call   0x65008780
6500a117:	push   0xffffffff
6500a119:	lea    ecx,[esi+0x1c]
6500a11c:	mov    DWORD PTR [esp+0x20],edi
6500a120:	lea    eax,[ebx+0x1c]
6500a123:	push   edi
6500a124:	mov    DWORD PTR [ecx+0x18],0x7
6500a12b:	mov    DWORD PTR [ecx+0x14],edi
6500a12e:	push   eax
6500a12f:	mov    WORD PTR [ecx+0x4],di
6500a133:	call   0x65008780
6500a138:	mov    eax,esi
6500a13a:	mov    ecx,DWORD PTR [esp+0x14]
6500a13e:	mov    DWORD PTR fs:0x0,ecx
6500a145:	pop    ecx
6500a146:	pop    edi
6500a147:	pop    esi
6500a148:	pop    ebx
6500a149:	add    esp,0x10
6500a14c:	ret    0x4
6500a14f:	int3   
6500a150:	push   0xffffffff
6500a152:	push   0x650222a8
6500a157:	mov    eax,fs:0x0
6500a15d:	push   eax
6500a15e:	push   ecx
6500a15f:	push   ebx
6500a160:	push   esi
6500a161:	mov    eax,ds:0x6502c09c
6500a166:	xor    eax,esp
6500a168:	push   eax
6500a169:	lea    eax,[esp+0x10]
6500a16d:	mov    fs:0x0,eax
6500a173:	mov    esi,ecx
6500a175:	mov    DWORD PTR [esp+0xc],esi
6500a179:	mov    eax,DWORD PTR [esp+0x20]
6500a17d:	xor    ebx,ebx
6500a17f:	push   0xffffffff
6500a181:	push   ebx
6500a182:	mov    DWORD PTR [esi+0x18],0xf
6500a189:	mov    DWORD PTR [esi+0x14],ebx
6500a18c:	push   eax
6500a18d:	mov    BYTE PTR [esi+0x4],bl
6500a190:	call   0x650017e0
6500a195:	mov    edx,DWORD PTR [esp+0x24]
6500a199:	push   0xffffffff
6500a19b:	lea    ecx,[esi+0x1c]
6500a19e:	mov    DWORD PTR [esp+0x1c],ebx
6500a1a2:	push   ebx
6500a1a3:	mov    DWORD PTR [ecx+0x18],0xf
6500a1aa:	mov    DWORD PTR [ecx+0x14],ebx
6500a1ad:	push   edx
6500a1ae:	mov    BYTE PTR [ecx+0x4],bl
6500a1b1:	call   0x650017e0
6500a1b6:	mov    eax,esi
6500a1b8:	mov    ecx,DWORD PTR [esp+0x10]
6500a1bc:	mov    DWORD PTR fs:0x0,ecx
6500a1c3:	pop    ecx
6500a1c4:	pop    esi
6500a1c5:	pop    ebx
6500a1c6:	add    esp,0x10
6500a1c9:	ret    0x8
6500a1cc:	int3   
6500a1cd:	int3   
6500a1ce:	int3   
6500a1cf:	int3   
6500a1d0:	push   0xffffffff
6500a1d2:	push   0x65022618
6500a1d7:	mov    eax,fs:0x0
6500a1dd:	push   eax
6500a1de:	push   ecx
6500a1df:	push   esi
6500a1e0:	push   edi
6500a1e1:	mov    eax,ds:0x6502c09c
6500a1e6:	xor    eax,esp
6500a1e8:	push   eax
6500a1e9:	lea    eax,[esp+0x10]
6500a1ed:	mov    fs:0x0,eax
6500a1f3:	mov    esi,ecx
6500a1f5:	mov    DWORD PTR [esp+0xc],esi
6500a1f9:	mov    eax,DWORD PTR [esp+0x20]
6500a1fd:	xor    edi,edi
6500a1ff:	push   0xffffffff
6500a201:	push   edi
6500a202:	mov    DWORD PTR [esi+0x18],0x7
6500a209:	mov    DWORD PTR [esi+0x14],edi
6500a20c:	push   eax
6500a20d:	mov    WORD PTR [esi+0x4],di
6500a211:	call   0x65008780
6500a216:	mov    edx,DWORD PTR [esp+0x24]
6500a21a:	push   0xffffffff
6500a21c:	lea    ecx,[esi+0x1c]
6500a21f:	mov    DWORD PTR [esp+0x1c],edi
6500a223:	push   edi
6500a224:	mov    DWORD PTR [ecx+0x18],0x7
6500a22b:	mov    DWORD PTR [ecx+0x14],edi
6500a22e:	push   edx
6500a22f:	mov    WORD PTR [ecx+0x4],di
6500a233:	call   0x65008780
6500a238:	mov    eax,esi
6500a23a:	mov    ecx,DWORD PTR [esp+0x10]
6500a23e:	mov    DWORD PTR fs:0x0,ecx
6500a245:	pop    ecx
6500a246:	pop    edi
6500a247:	pop    esi
6500a248:	add    esp,0x10
6500a24b:	ret    0x8
6500a24e:	int3   
6500a24f:	int3   
6500a250:	push   ebx
6500a251:	push   ebp
6500a252:	push   esi
6500a253:	push   edi
6500a254:	mov    edi,DWORD PTR [esp+0x14]
6500a258:	mov    esi,ecx
6500a25a:	cmp    DWORD PTR [esi+0x14],edi
6500a25d:	jae    0x6500a264
6500a25f:	call   0x65011f1e
6500a264:	mov    eax,DWORD PTR [esi+0x14]
6500a267:	mov    ebx,DWORD PTR [esp+0x18]
6500a26b:	sub    eax,edi
6500a26d:	cmp    eax,ebx
6500a26f:	jae    0x6500a273
6500a271:	mov    ebx,eax
6500a273:	mov    ebp,DWORD PTR [esp+0x20]
6500a277:	cmp    ebx,ebp
6500a279:	mov    edx,ebx
6500a27b:	jb     0x6500a27f
6500a27d:	mov    edx,ebp
6500a27f:	cmp    DWORD PTR [esi+0x18],0x8
6500a283:	jb     0x6500a28a
6500a285:	mov    eax,DWORD PTR [esi+0x4]
6500a288:	jmp    0x6500a28d
6500a28a:	lea    eax,[esi+0x4]
6500a28d:	test   edx,edx
6500a28f:	mov    ecx,DWORD PTR [esp+0x1c]
6500a293:	lea    eax,[eax+edi*2]
6500a296:	jbe    0x6500a2bd
6500a298:	mov    si,WORD PTR [eax]
6500a29b:	cmp    si,WORD PTR [ecx]
6500a29e:	jne    0x6500a2ad
6500a2a0:	add    eax,0x2
6500a2a3:	add    ecx,0x2
6500a2a6:	sub    edx,0x1
6500a2a9:	jne    0x6500a298
6500a2ab:	jmp    0x6500a2bd
6500a2ad:	movzx  eax,WORD PTR [eax]
6500a2b0:	cmp    ax,WORD PTR [ecx]
6500a2b3:	sbb    eax,eax
6500a2b5:	and    eax,0xfffffffe
6500a2b8:	add    eax,0x1
6500a2bb:	jne    0x6500a2d2
6500a2bd:	cmp    ebx,ebp
6500a2bf:	jae    0x6500a2cb
6500a2c1:	pop    edi
6500a2c2:	pop    esi
6500a2c3:	pop    ebp
6500a2c4:	or     eax,0xffffffff
6500a2c7:	pop    ebx
6500a2c8:	ret    0x10
6500a2cb:	xor    eax,eax
6500a2cd:	cmp    ebx,ebp
6500a2cf:	setne  al
6500a2d2:	pop    edi
6500a2d3:	pop    esi
6500a2d4:	pop    ebp
6500a2d5:	pop    ebx
6500a2d6:	ret    0x10
6500a2d9:	int3   
6500a2da:	int3   
6500a2db:	int3   
6500a2dc:	int3   
6500a2dd:	int3   
6500a2de:	int3   
6500a2df:	int3   
6500a2e0:	mov    ecx,DWORD PTR [esp+0x4]
6500a2e4:	push   ebx
6500a2e5:	push   ebp
6500a2e6:	mov    ebp,DWORD PTR [esp+0x10]
6500a2ea:	push   esi
6500a2eb:	mov    esi,eax
6500a2ed:	mov    edx,DWORD PTR [esi+0x18]
6500a2f0:	cmp    edx,0x10
6500a2f3:	push   edi
6500a2f4:	lea    ebx,[esi+0x4]
6500a2f7:	jb     0x6500a2fd
6500a2f9:	mov    eax,DWORD PTR [ebx]
6500a2fb:	jmp    0x6500a2ff
6500a2fd:	mov    eax,ebx
6500a2ff:	cmp    ecx,eax
6500a301:	jb     0x6500a330
6500a303:	cmp    edx,0x10
6500a306:	jb     0x6500a30c
6500a308:	mov    eax,DWORD PTR [ebx]
6500a30a:	jmp    0x6500a30e
6500a30c:	mov    eax,ebx
6500a30e:	mov    edi,DWORD PTR [esi+0x14]
6500a311:	add    edi,eax
6500a313:	cmp    edi,ecx
6500a315:	jbe    0x6500a330
6500a317:	cmp    edx,0x10
6500a31a:	jb     0x6500a31e
6500a31c:	mov    ebx,DWORD PTR [ebx]
6500a31e:	sub    ecx,ebx
6500a320:	push   ecx
6500a321:	push   esi
6500a322:	mov    eax,ebp
6500a324:	call   0x65001a30
6500a329:	pop    edi
6500a32a:	pop    esi
6500a32b:	pop    ebp
6500a32c:	pop    ebx
6500a32d:	ret    0x8
6500a330:	mov    eax,DWORD PTR [esi+0x14]
6500a333:	or     ecx,0xffffffff
6500a336:	sub    ecx,eax
6500a338:	cmp    ecx,ebp
6500a33a:	jbe    0x6500a343
6500a33c:	lea    edx,[eax+ebp*1]
6500a33f:	cmp    edx,eax
6500a341:	jae    0x6500a348
6500a343:	call   0x65011edf
6500a348:	test   ebp,ebp
6500a34a:	jbe    0x6500a3c0
6500a34c:	mov    edi,DWORD PTR [esi+0x14]
6500a34f:	add    edi,ebp
6500a351:	cmp    edi,0xfffffffe
6500a354:	jbe    0x6500a35b
6500a356:	call   0x65011edf
6500a35b:	mov    eax,DWORD PTR [esi+0x18]
6500a35e:	cmp    eax,edi
6500a360:	jae    0x6500a37e
6500a362:	mov    eax,DWORD PTR [esi+0x14]
6500a365:	push   eax
6500a366:	push   edi
6500a367:	mov    ecx,esi
6500a369:	call   0x65001bc0
6500a36e:	test   edi,edi
6500a370:	jbe    0x6500a3c0
6500a372:	mov    eax,DWORD PTR [esi+0x18]
6500a375:	cmp    eax,0x10
6500a378:	jb     0x6500a398
6500a37a:	mov    edx,DWORD PTR [ebx]
6500a37c:	jmp    0x6500a39a
6500a37e:	test   edi,edi
6500a380:	jne    0x6500a370
6500a382:	cmp    eax,0x10
6500a385:	mov    DWORD PTR [esi+0x14],edi
6500a388:	jb     0x6500a38c
6500a38a:	mov    ebx,DWORD PTR [ebx]
6500a38c:	pop    edi
6500a38d:	mov    eax,esi
6500a38f:	pop    esi
6500a390:	pop    ebp
6500a391:	mov    BYTE PTR [ebx],0x0
6500a394:	pop    ebx
6500a395:	ret    0x8
6500a398:	mov    edx,ebx
6500a39a:	mov    ecx,DWORD PTR [esi+0x14]
6500a39d:	push   ebp
6500a39e:	mov    ebp,DWORD PTR [esp+0x18]
6500a3a2:	sub    eax,ecx
6500a3a4:	push   ebp
6500a3a5:	push   eax
6500a3a6:	add    ecx,edx
6500a3a8:	push   ecx
6500a3a9:	call   0x650120d3
6500a3ae:	add    esp,0x10
6500a3b1:	cmp    DWORD PTR [esi+0x18],0x10
6500a3b5:	mov    DWORD PTR [esi+0x14],edi
6500a3b8:	jb     0x6500a3bc
6500a3ba:	mov    ebx,DWORD PTR [ebx]
6500a3bc:	mov    BYTE PTR [ebx+edi*1],0x0
6500a3c0:	pop    edi
6500a3c1:	mov    eax,esi
6500a3c3:	pop    esi
6500a3c4:	pop    ebp
6500a3c5:	pop    ebx
6500a3c6:	ret    0x8
6500a3c9:	int3   
6500a3ca:	int3   
6500a3cb:	int3   
6500a3cc:	int3   
6500a3cd:	int3   
6500a3ce:	int3   
6500a3cf:	int3   
6500a3d0:	push   ebp
6500a3d1:	mov    ebp,DWORD PTR [esp+0x14]
6500a3d5:	push   esi
6500a3d6:	mov    esi,DWORD PTR [esp+0x10]
6500a3da:	push   edi
6500a3db:	mov    edi,DWORD PTR [esp+0x10]
6500a3df:	nop
6500a3e0:	test   edi,edi
6500a3e2:	je     0x6500a3ea
6500a3e4:	cmp    edi,DWORD PTR [esp+0x18]
6500a3e8:	je     0x6500a3ef
6500a3ea:	call   0x650122d3
6500a3ef:	cmp    esi,ebp
6500a3f1:	je     0x6500a44b
6500a3f3:	add    DWORD PTR [ebx],0x1
6500a3f6:	test   edi,edi
6500a3f8:	jne    0x6500a3ff
6500a3fa:	call   0x650122d3
6500a3ff:	cmp    BYTE PTR [esi+0x29],0x0
6500a403:	je     0x6500a40c
6500a405:	call   0x650122d3
6500a40a:	jmp    0x6500a3e0
6500a40c:	mov    ecx,DWORD PTR [esi+0x8]
6500a40f:	cmp    BYTE PTR [ecx+0x29],0x0
6500a413:	jne    0x6500a42e
6500a415:	mov    eax,DWORD PTR [ecx]
6500a417:	cmp    BYTE PTR [eax+0x29],0x0
6500a41b:	jne    0x6500a42a
6500a41d:	lea    ecx,[ecx+0x0]
6500a420:	mov    ecx,eax
6500a422:	mov    eax,DWORD PTR [ecx]
6500a424:	cmp    BYTE PTR [eax+0x29],0x0
6500a428:	je     0x6500a420
6500a42a:	mov    esi,ecx
6500a42c:	jmp    0x6500a3e0
6500a42e:	mov    eax,DWORD PTR [esi+0x4]
6500a431:	cmp    BYTE PTR [eax+0x29],0x0
6500a435:	jne    0x6500a447
6500a437:	cmp    esi,DWORD PTR [eax+0x8]
6500a43a:	jne    0x6500a447
6500a43c:	mov    esi,eax
6500a43e:	mov    eax,DWORD PTR [eax+0x4]
6500a441:	cmp    BYTE PTR [eax+0x29],0x0
6500a445:	je     0x6500a437
6500a447:	mov    esi,eax
6500a449:	jmp    0x6500a3e0
6500a44b:	pop    edi
6500a44c:	pop    esi
6500a44d:	pop    ebp
6500a44e:	ret    
6500a44f:	int3   
6500a450:	push   esi
6500a451:	mov    esi,ecx
6500a453:	call   0x6500dd20
6500a458:	call   eax
6500a45a:	mov    DWORD PTR [esi],eax
6500a45c:	mov    eax,esi
6500a45e:	pop    esi
6500a45f:	ret    
6500a460:	mov    eax,DWORD PTR [ecx]
6500a462:	push   eax
6500a463:	call   0x6500ddb0
6500a468:	call   eax
6500a46a:	ret    
6500a46b:	int3   
6500a46c:	int3   
6500a46d:	int3   
6500a46e:	int3   
6500a46f:	int3   
6500a470:	push   ebp
6500a471:	mov    ebp,esp
6500a473:	and    esp,0xfffffff8
6500a476:	push   0xffffffff
6500a478:	push   0x65022ba0
6500a47d:	mov    eax,fs:0x0
6500a483:	push   eax
6500a484:	sub    esp,0x68
6500a487:	mov    eax,ds:0x6502c09c
6500a48c:	xor    eax,esp
6500a48e:	mov    DWORD PTR [esp+0x60],eax
6500a492:	push   ebx
6500a493:	push   esi
6500a494:	push   edi
6500a495:	mov    eax,ds:0x6502c09c
6500a49a:	xor    eax,esp
6500a49c:	push   eax
6500a49d:	lea    eax,[esp+0x78]
6500a4a1:	mov    fs:0x0,eax
6500a4a7:	mov    eax,DWORD PTR [ebp+0x14]
6500a4aa:	mov    ebx,DWORD PTR [ebp+0xc]
6500a4ad:	mov    DWORD PTR [esp+0x1c],ecx
6500a4b1:	mov    DWORD PTR [esp+0x18],eax
6500a4b5:	call   DWORD PTR ds:0x65024058
6500a4bb:	lea    ecx,[esp+0x44]
6500a4bf:	push   ecx
6500a4c0:	mov    DWORD PTR [esp+0x24],eax
6500a4c4:	call   0x6500e820
6500a4c9:	call   eax
6500a4cb:	xor    edi,edi
6500a4cd:	mov    DWORD PTR [esp+0x6c],0xf
6500a4d5:	mov    DWORD PTR [esp+0x68],edi
6500a4d9:	mov    BYTE PTR [esp+0x58],0x0
6500a4de:	mov    ecx,DWORD PTR [ebp+0x10]
6500a4e1:	mov    eax,0x8d3dcb09
6500a4e6:	mul    ecx
6500a4e8:	mov    esi,edx
6500a4ea:	shr    esi,0x8
6500a4ed:	lea    eax,[esi+0x1]
6500a4f0:	cmp    eax,edi
6500a4f2:	mov    DWORD PTR [esp+0x80],edi
6500a4f9:	mov    BYTE PTR [esp+0x13],0x1
6500a4fe:	je     0x6500a5c4
6500a504:	mov    edx,0x1d0
6500a509:	sub    edx,ebx
6500a50b:	mov    DWORD PTR [esp+0x14],ebx
6500a50f:	mov    DWORD PTR [esp+0x24],edx
6500a513:	mov    eax,DWORD PTR [esp+0x14]
6500a517:	add    eax,edx
6500a519:	cmp    eax,ecx
6500a51b:	jb     0x6500a616
6500a521:	mov    eax,esi
6500a523:	imul   eax,eax,0x1d0
6500a529:	mov    ebx,ecx
6500a52b:	sub    ebx,eax
6500a52d:	test   ebx,ebx
6500a52f:	je     0x6500a5ac
6500a531:	or     ecx,0xffffffff
6500a534:	cmp    DWORD PTR [ebp+0x18],ecx
6500a537:	je     0x6500a550
6500a539:	call   DWORD PTR ds:0x65024058
6500a53f:	sub    eax,DWORD PTR [esp+0x20]
6500a543:	mov    ecx,DWORD PTR [ebp+0x18]
6500a546:	cmp    eax,ecx
6500a548:	ja     0x6500a620
6500a54e:	sub    ecx,eax
6500a550:	mov    edx,DWORD PTR [esp+0x44]
6500a554:	sub    esp,0x10
6500a557:	mov    eax,esp
6500a559:	mov    DWORD PTR [eax],edx
6500a55b:	mov    edx,DWORD PTR [esp+0x58]
6500a55f:	mov    DWORD PTR [eax+0x4],edx
6500a562:	mov    edx,DWORD PTR [esp+0x5c]
6500a566:	mov    DWORD PTR [eax+0x8],edx
6500a569:	mov    edx,DWORD PTR [esp+0x60]
6500a56d:	mov    DWORD PTR [eax+0xc],edx
6500a570:	mov    edx,DWORD PTR [esp+0x24]
6500a574:	test   edi,edi
6500a576:	setne  al
6500a579:	cmp    edi,esi
6500a57b:	push   eax
6500a57c:	mov    eax,DWORD PTR [ebp+0x8]
6500a57f:	push   ecx
6500a580:	setb   cl
6500a583:	push   ecx
6500a584:	mov    ecx,DWORD PTR [esp+0x38]
6500a588:	push   edi
6500a589:	push   ebx
6500a58a:	push   edx
6500a58b:	push   eax
6500a58c:	push   ecx
6500a58d:	lea    edx,[esp+0x43]
6500a591:	lea    ecx,[esp+0x84]
6500a598:	call   0x6500a7b0
6500a59d:	test   al,al
6500a59f:	je     0x6500a63b
6500a5a5:	mov    ecx,DWORD PTR [ebp+0x10]
6500a5a8:	mov    edx,DWORD PTR [esp+0x24]
6500a5ac:	add    DWORD PTR [esp+0x14],0x1d0
6500a5b4:	add    edi,0x1
6500a5b7:	lea    eax,[esi+0x1]
6500a5ba:	cmp    edi,eax
6500a5bc:	jne    0x6500a513
6500a5c2:	xor    edi,edi
6500a5c4:	mov    esi,DWORD PTR [esp+0x18]
6500a5c8:	push   edi
6500a5c9:	lea    ecx,[esp+0x58]
6500a5cd:	push   ecx
6500a5ce:	or     eax,0xffffffff
6500a5d1:	call   0x65001a30
6500a5d6:	cmp    BYTE PTR [esp+0x13],0x0
6500a5db:	je     0x6500a76b
6500a5e1:	mov    DWORD PTR [esp+0x14],0xfffffffe
6500a5e9:	lea    esp,[esp+0x0]
6500a5f0:	mov    esi,0xf
6500a5f5:	mov    DWORD PTR [esp+0x40],esi
6500a5f9:	mov    DWORD PTR [esp+0x3c],edi
6500a5fd:	mov    BYTE PTR [esp+0x2c],0x0
6500a602:	mov    ebx,DWORD PTR [ebp+0x18]
6500a605:	cmp    ebx,0xffffffff
6500a608:	mov    BYTE PTR [esp+0x80],0x1
6500a610:	jne    0x6500a656
6500a612:	or     ecx,ebx
6500a614:	jmp    0x6500a66c
6500a616:	mov    ebx,0x1d0
6500a61b:	jmp    0x6500a531
6500a620:	cmp    DWORD PTR [esp+0x6c],0x10
6500a625:	jb     0x6500a634
6500a627:	mov    edx,DWORD PTR [esp+0x58]
6500a62b:	push   edx
6500a62c:	call   0x65011f62
6500a631:	add    esp,0x4
6500a634:	xor    al,al
6500a636:	jmp    0x6500a781
6500a63b:	cmp    DWORD PTR [esp+0x6c],0x10
6500a640:	jb     0x6500a634
6500a642:	mov    eax,DWORD PTR [esp+0x58]
6500a646:	push   eax
6500a647:	call   0x65011f62
6500a64c:	add    esp,0x4
6500a64f:	xor    al,al
6500a651:	jmp    0x6500a781
6500a656:	call   DWORD PTR ds:0x65024058
6500a65c:	sub    eax,DWORD PTR [esp+0x20]
6500a660:	cmp    eax,ebx
6500a662:	ja     0x6500a6fb
6500a668:	mov    ecx,ebx
6500a66a:	sub    ecx,eax
6500a66c:	mov    edx,DWORD PTR [esp+0x44]
6500a670:	sub    esp,0x10
6500a673:	mov    eax,esp
6500a675:	mov    DWORD PTR [eax],edx
6500a677:	mov    edx,DWORD PTR [esp+0x58]
6500a67b:	mov    DWORD PTR [eax+0x4],edx
6500a67e:	mov    edx,DWORD PTR [esp+0x5c]
6500a682:	push   0x1
6500a684:	push   ecx
6500a685:	mov    ecx,DWORD PTR [ebp+0x8]
6500a688:	mov    DWORD PTR [eax+0x8],edx
6500a68b:	mov    edx,DWORD PTR [esp+0x68]
6500a68f:	push   edi
6500a690:	mov    DWORD PTR [eax+0xc],edx
6500a693:	mov    eax,DWORD PTR [esp+0x30]
6500a697:	mov    edx,DWORD PTR [esp+0x38]
6500a69b:	push   eax
6500a69c:	push   edi
6500a69d:	push   edi
6500a69e:	push   ecx
6500a69f:	push   edx
6500a6a0:	lea    edx,[esp+0x43]
6500a6a4:	lea    ecx,[esp+0x58]
6500a6a8:	call   0x6500a7b0
6500a6ad:	test   al,al
6500a6af:	je     0x6500a729
6500a6b1:	cmp    DWORD PTR [esp+0x3c],edi
6500a6b5:	je     0x6500a757
6500a6bb:	mov    esi,DWORD PTR [esp+0x18]
6500a6bf:	push   edi
6500a6c0:	lea    eax,[esp+0x2c]
6500a6c4:	push   eax
6500a6c5:	or     eax,0xffffffff
6500a6c8:	call   0x65001a30
6500a6cd:	mov    BYTE PTR [esp+0x80],0x0
6500a6d5:	cmp    DWORD PTR [esp+0x40],0x10
6500a6da:	jb     0x6500a6e9
6500a6dc:	mov    ecx,DWORD PTR [esp+0x2c]
6500a6e0:	push   ecx
6500a6e1:	call   0x65011f62
6500a6e6:	add    esp,0x4
6500a6e9:	sub    DWORD PTR [esp+0x14],0x1
6500a6ee:	cmp    BYTE PTR [esp+0x13],0x0
6500a6f3:	jne    0x6500a5f0
6500a6f9:	jmp    0x6500a76b
6500a6fb:	mov    ebx,0x10
6500a700:	cmp    DWORD PTR [esp+0x40],ebx
6500a704:	jb     0x6500a713
6500a706:	mov    edx,DWORD PTR [esp+0x2c]
6500a70a:	push   edx
6500a70b:	call   0x65011f62
6500a710:	add    esp,0x4
6500a713:	cmp    DWORD PTR [esp+0x6c],ebx
6500a717:	mov    DWORD PTR [esp+0x40],esi
6500a71b:	mov    DWORD PTR [esp+0x3c],edi
6500a71f:	mov    BYTE PTR [esp+0x2c],0x0
6500a724:	jmp    0x6500a640
6500a729:	mov    ebx,0x10
6500a72e:	cmp    DWORD PTR [esp+0x40],ebx
6500a732:	jb     0x6500a741
6500a734:	mov    ecx,DWORD PTR [esp+0x2c]
6500a738:	push   ecx
6500a739:	call   0x65011f62
6500a73e:	add    esp,0x4
6500a741:	cmp    DWORD PTR [esp+0x6c],ebx
6500a745:	mov    DWORD PTR [esp+0x40],esi
6500a749:	mov    DWORD PTR [esp+0x3c],edi
6500a74d:	mov    BYTE PTR [esp+0x2c],0x0
6500a752:	jmp    0x6500a625
6500a757:	cmp    DWORD PTR [esp+0x40],0x10
6500a75c:	jb     0x6500a76b
6500a75e:	mov    eax,DWORD PTR [esp+0x2c]
6500a762:	push   eax
6500a763:	call   0x65011f62
6500a768:	add    esp,0x4
6500a76b:	cmp    DWORD PTR [esp+0x6c],0x10
6500a770:	jb     0x6500a77f
6500a772:	mov    ecx,DWORD PTR [esp+0x58]
6500a776:	push   ecx
6500a777:	call   0x65011f62
6500a77c:	add    esp,0x4
6500a77f:	mov    al,0x1
6500a781:	mov    ecx,DWORD PTR [esp+0x78]
6500a785:	mov    DWORD PTR fs:0x0,ecx
6500a78c:	pop    ecx
6500a78d:	pop    edi
6500a78e:	pop    esi
6500a78f:	pop    ebx
6500a790:	mov    ecx,DWORD PTR [esp+0x60]
6500a794:	xor    ecx,esp
6500a796:	call   0x650127bc
6500a79b:	mov    esp,ebp
6500a79d:	pop    ebp
6500a79e:	ret    0x14
6500a7a1:	int3   
6500a7a2:	int3   
6500a7a3:	int3   
6500a7a4:	int3   
6500a7a5:	int3   
6500a7a6:	int3   
6500a7a7:	int3   
6500a7a8:	int3   
6500a7a9:	int3   
6500a7aa:	int3   
6500a7ab:	int3   
6500a7ac:	int3   
6500a7ad:	int3   
6500a7ae:	int3   
6500a7af:	int3   
6500a7b0:	push   0xffffffff
6500a7b2:	push   0x65022b5c
6500a7b7:	mov    eax,fs:0x0
6500a7bd:	push   eax
6500a7be:	mov    eax,0x10074
6500a7c3:	call   0x65018030
6500a7c8:	mov    eax,ds:0x6502c09c
6500a7cd:	xor    eax,esp
6500a7cf:	mov    DWORD PTR [esp+0x10070],eax
6500a7d6:	push   ebx
6500a7d7:	push   ebp
6500a7d8:	push   esi
6500a7d9:	push   edi
6500a7da:	mov    eax,ds:0x6502c09c
6500a7df:	xor    eax,esp
6500a7e1:	push   eax
6500a7e2:	lea    eax,[esp+0x10088]
6500a7e9:	mov    fs:0x0,eax
6500a7ef:	mov    eax,DWORD PTR [esp+0x10098]
6500a7f6:	mov    esi,DWORD PTR [esp+0x100a0]
6500a7fd:	mov    ebp,DWORD PTR ds:0x650241c0
6500a803:	mov    DWORD PTR [esp+0x18],eax
6500a807:	mov    eax,DWORD PTR [esp+0x100b8]
6500a80e:	mov    DWORD PTR [esp+0x2c],ecx
6500a812:	mov    ecx,DWORD PTR [esp+0x100bc]
6500a819:	mov    DWORD PTR [esp+0x28],edx
6500a81d:	mov    edx,DWORD PTR [esp+0x100c0]
6500a824:	mov    DWORD PTR [esp+0x54],eax
6500a828:	mov    eax,DWORD PTR [esp+0x100c4]
6500a82f:	xor    ebx,ebx
6500a831:	mov    DWORD PTR [esp+0x1c],esi
6500a835:	mov    DWORD PTR [esp+0x58],ecx
6500a839:	mov    DWORD PTR [esp+0x5c],edx
6500a83d:	mov    DWORD PTR [esp+0x60],eax
6500a841:	mov    BYTE PTR [esp+0x17],bl
6500a845:	xor    edi,edi
6500a847:	jmp    0x6500a850
6500a849:	lea    esp,[esp+0x0]
6500a850:	mov    DWORD PTR [esp+0x50],0xf
6500a858:	mov    DWORD PTR [esp+0x4c],ebx
6500a85c:	mov    BYTE PTR [esp+0x3c],bl
6500a860:	mov    DWORD PTR [esp+0x10090],ebx
6500a867:	mov    edx,DWORD PTR [esp+0x58]
6500a86b:	mov    eax,DWORD PTR [esp+0x5c]
6500a86f:	mov    ecx,DWORD PTR [esp+0x54]
6500a873:	mov    DWORD PTR [esp+0x70],eax
6500a877:	mov    eax,DWORD PTR [esp+0x100a8]
6500a87e:	mov    DWORD PTR [esp+0x68],ecx
6500a882:	mov    ecx,DWORD PTR [esp+0x60]
6500a886:	mov    DWORD PTR [esp+0x6c],edx
6500a88a:	mov    dl,BYTE PTR [esp+0x100ac]
6500a891:	push   eax
6500a892:	mov    DWORD PTR [esp+0x78],ecx
6500a896:	mov    DWORD PTR [esp+0x7c],eax
6500a89a:	mov    DWORD PTR [esp+0x80],edi
6500a8a1:	mov    BYTE PTR [esp+0x84],dl
6500a8a8:	call   ebp
6500a8aa:	mov    DWORD PTR [esp+0x78],eax
6500a8ae:	mov    eax,DWORD PTR [esp+0x7c]
6500a8b2:	push   eax
6500a8b3:	call   ebp
6500a8b5:	push   0x19
6500a8b7:	lea    ecx,[esp+0x6c]
6500a8bb:	mov    DWORD PTR [esp+0x80],eax
6500a8c2:	push   ecx
6500a8c3:	lea    eax,[esp+0x40]
6500a8c7:	call   0x6500a2e0
6500a8cc:	cmp    esi,ebx
6500a8ce:	je     0x6500a8e2
6500a8d0:	mov    edx,DWORD PTR [esp+0x100a4]
6500a8d7:	push   edx
6500a8d8:	push   esi
6500a8d9:	lea    eax,[esp+0x40]
6500a8dd:	call   0x6500a2e0
6500a8e2:	cmp    DWORD PTR [esp+0x50],0x10
6500a8e7:	mov    eax,DWORD PTR [esp+0x3c]
6500a8eb:	jae    0x6500a8f1
6500a8ed:	lea    eax,[esp+0x3c]
6500a8f1:	mov    ecx,DWORD PTR [esp+0x4c]
6500a8f5:	push   ecx
6500a8f6:	push   eax
6500a8f7:	lea    ecx,[esp+0x2c]
6500a8fb:	lea    ebx,[esp+0x38]
6500a8ff:	call   0x6500da70
6500a904:	mov    edx,DWORD PTR [eax]
6500a906:	mov    esi,edx
6500a908:	mov    DWORD PTR [eax],0x0
6500a90e:	mov    DWORD PTR [esp+0x28],esi
6500a912:	mov    BYTE PTR [esp+0x10098],0x1
6500a91a:	mov    eax,DWORD PTR [esp+0x38]
6500a91e:	push   eax
6500a91f:	call   0x65011f62
6500a924:	add    esp,0xc
6500a927:	lea    ecx,[esp+0x34]
6500a92b:	push   0x0
6500a92d:	push   ecx
6500a92e:	mov    DWORD PTR [esp+0x3c],0x0
6500a936:	call   0x6500e4d0
6500a93b:	call   eax
6500a93d:	test   eax,eax
6500a93f:	je     0x6500a9ce
6500a945:	mov    eax,DWORD PTR [esp+0x100b0]
6500a94c:	cmp    eax,0x1388
6500a951:	jb     0x6500a958
6500a953:	mov    eax,0x1388
6500a958:	mov    ecx,DWORD PTR [esp+0x1009c]
6500a95f:	push   eax
6500a960:	mov    eax,DWORD PTR [esp+0x28]
6500a964:	push   0xffff
6500a969:	lea    edx,[esp+0x8c]
6500a970:	push   edx
6500a971:	mov    edx,DWORD PTR [esp+0x24]
6500a975:	push   0x0
6500a977:	push   eax
6500a978:	mov    eax,DWORD PTR [edx]
6500a97a:	push   esi
6500a97b:	push   ecx
6500a97c:	push   eax
6500a97d:	call   0x6500dca0
6500a982:	call   eax
6500a984:	mov    ebx,eax
6500a986:	test   ebx,ebx
6500a988:	jne    0x6500a9d1
6500a98a:	push   esi
6500a98b:	call   0x65011f62
6500a990:	add    esp,0x4
6500a993:	cmp    BYTE PTR [esp+0x100b4],bl
6500a99a:	mov    DWORD PTR [esp+0x10090],0xffffffff
6500a9a5:	je     0x6500a9f3
6500a9a7:	cmp    DWORD PTR [esp+0x50],0x10
6500a9ac:	jb     0x6500a9bb
6500a9ae:	mov    ecx,DWORD PTR [esp+0x3c]
6500a9b2:	push   ecx
6500a9b3:	call   0x65011f62
6500a9b8:	add    esp,0x4
6500a9bb:	add    edi,0x1
6500a9be:	cmp    edi,0x5
6500a9c1:	je     0x6500aa07
6500a9c3:	mov    esi,DWORD PTR [esp+0x1c]
6500a9c7:	xor    ebx,ebx
6500a9c9:	jmp    0x6500a850
6500a9ce:	or     ebx,0xffffffff
6500a9d1:	push   esi
6500a9d2:	call   0x65011f62
6500a9d7:	add    esp,0x4
6500a9da:	mov    DWORD PTR [esp+0x10090],0xffffffff
6500a9e5:	cmp    DWORD PTR [esp+0x50],0x10
6500a9ea:	jb     0x6500aa07
6500a9ec:	mov    edx,DWORD PTR [esp+0x3c]
6500a9f0:	push   edx
6500a9f1:	jmp    0x6500a9ff
6500a9f3:	cmp    DWORD PTR [esp+0x50],0x10
6500a9f8:	jb     0x6500aa07
6500a9fa:	mov    eax,DWORD PTR [esp+0x3c]
6500a9fe:	push   eax
6500a9ff:	call   0x65011f62
6500aa04:	add    esp,0x4
6500aa07:	test   ebx,ebx
6500aa09:	je     0x6500abaf
6500aa0f:	mov    ax,WORD PTR [esp+0x90]
6500aa17:	test   ax,ax
6500aa1a:	je     0x6500aba3
6500aa20:	lea    ecx,[esp+0x24]
6500aa24:	push   ecx
6500aa25:	lea    edx,[esp+0xa4]
6500aa2c:	movzx  ebx,ax
6500aa2f:	push   edx
6500aa30:	lea    edi,[esp+0x24]
6500aa34:	call   0x6500dba0
6500aa39:	mov    ecx,DWORD PTR [eax]
6500aa3b:	mov    ebp,ecx
6500aa3d:	xor    ebx,ebx
6500aa3f:	mov    DWORD PTR [eax],ebx
6500aa41:	mov    DWORD PTR [esp+0x28],ebp
6500aa45:	mov    DWORD PTR [esp+0x10098],0x2
6500aa50:	mov    edx,DWORD PTR [esp+0x24]
6500aa54:	push   edx
6500aa55:	call   0x65011f62
6500aa5a:	add    esp,0xc
6500aa5d:	cmp    ebp,ebx
6500aa5f:	je     0x6500ab92
6500aa65:	mov    eax,DWORD PTR [ebp+0x10]
6500aa68:	push   eax
6500aa69:	call   DWORD PTR ds:0x650241c4
6500aa6f:	cmp    BYTE PTR [esp+0x100ac],bl
6500aa76:	mov    DWORD PTR [esp+0x18],eax
6500aa7a:	mov    DWORD PTR [ebp+0x10],eax
6500aa7d:	jne    0x6500aa8f
6500aa7f:	cmp    DWORD PTR [esp+0x100a8],ebx
6500aa86:	jle    0x6500aa8f
6500aa88:	mov    DWORD PTR [esp+0x100a8],ebx
6500aa8f:	mov    ecx,0x10
6500aa94:	lea    edx,[esp+0x54]
6500aa98:	mov    esi,ebp
6500aa9a:	lea    ebx,[ebx+0x0]
6500aaa0:	mov    eax,DWORD PTR [esi]
6500aaa2:	cmp    eax,DWORD PTR [edx]
6500aaa4:	jne    0x6500aab8
6500aaa6:	sub    ecx,0x4
6500aaa9:	add    edx,0x4
6500aaac:	add    esi,0x4
6500aaaf:	cmp    ecx,0x4
6500aab2:	jae    0x6500aaa0
6500aab4:	cmp    ecx,ebx
6500aab6:	je     0x6500ab15
6500aab8:	movzx  edi,BYTE PTR [esi]
6500aabb:	movzx  eax,BYTE PTR [edx]
6500aabe:	sub    edi,eax
6500aac0:	jne    0x6500ab07
6500aac2:	sub    ecx,0x1
6500aac5:	add    edx,0x1
6500aac8:	add    esi,0x1
6500aacb:	cmp    ecx,ebx
6500aacd:	je     0x6500ab15
6500aacf:	movzx  edi,BYTE PTR [esi]
6500aad2:	movzx  eax,BYTE PTR [edx]
6500aad5:	sub    edi,eax
6500aad7:	jne    0x6500ab07
6500aad9:	sub    ecx,0x1
6500aadc:	add    edx,0x1
6500aadf:	add    esi,0x1
6500aae2:	cmp    ecx,ebx
6500aae4:	je     0x6500ab15
6500aae6:	movzx  edi,BYTE PTR [esi]
6500aae9:	movzx  eax,BYTE PTR [edx]
6500aaec:	sub    edi,eax
6500aaee:	jne    0x6500ab07
6500aaf0:	sub    ecx,0x1
6500aaf3:	add    edx,0x1
6500aaf6:	add    esi,0x1
6500aaf9:	cmp    ecx,ebx
6500aafb:	je     0x6500ab15
6500aafd:	movzx  edi,BYTE PTR [esi]
6500ab00:	movzx  ecx,BYTE PTR [edx]
6500ab03:	sub    edi,ecx
6500ab05:	je     0x6500ab15
6500ab07:	cmp    edi,ebx
6500ab09:	mov    ecx,0x1
6500ab0e:	jg     0x6500ab17
6500ab10:	or     ecx,0xffffffff
6500ab13:	jmp    0x6500ab17
6500ab15:	xor    ecx,ecx
6500ab17:	cmp    ecx,ebx
6500ab19:	jne    0x6500ab92
6500ab1b:	mov    edx,DWORD PTR [esp+0x100a8]
6500ab22:	cmp    DWORD PTR [esp+0x18],edx
6500ab26:	jne    0x6500ab92
6500ab28:	mov    al,BYTE PTR [ebp+0x14]
6500ab2b:	mov    ecx,DWORD PTR [esp+0x28]
6500ab2f:	mov    BYTE PTR [ecx],al
6500ab31:	mov    eax,DWORD PTR [esp+0x24]
6500ab35:	add    eax,0xffffffeb
6500ab38:	push   eax
6500ab39:	lea    edx,[ebp+0x15]
6500ab3c:	push   edx
6500ab3d:	lea    ecx,[esp+0x40]
6500ab41:	mov    DWORD PTR [esp+0x58],0xf
6500ab49:	mov    DWORD PTR [esp+0x54],ebx
6500ab4d:	mov    BYTE PTR [esp+0x44],bl
6500ab51:	call   0x650018c0
6500ab56:	mov    ecx,DWORD PTR [esp+0x2c]
6500ab5a:	push   0xffffffff
6500ab5c:	push   ebx
6500ab5d:	lea    eax,[esp+0x40]
6500ab61:	push   eax
6500ab62:	mov    BYTE PTR [esp+0x1009c],0x3
6500ab6a:	call   0x650017e0
6500ab6f:	cmp    DWORD PTR [esp+0x50],0x10
6500ab74:	jb     0x6500ab83
6500ab76:	mov    ecx,DWORD PTR [esp+0x3c]
6500ab7a:	push   ecx
6500ab7b:	call   0x65011f62
6500ab80:	add    esp,0x4
6500ab83:	push   ebp
6500ab84:	mov    bl,0x1
6500ab86:	call   0x65011f62
6500ab8b:	add    esp,0x4
6500ab8e:	mov    al,bl
6500ab90:	jmp    0x6500abb3
6500ab92:	mov    bl,BYTE PTR [esp+0x17]
6500ab96:	push   ebp
6500ab97:	call   0x65011f62
6500ab9c:	add    esp,0x4
6500ab9f:	mov    al,bl
6500aba1:	jmp    0x6500abb3
6500aba3:	cmp    BYTE PTR [esp+0x100ac],0x0
6500abab:	mov    al,0x1
6500abad:	jne    0x6500abb3
6500abaf:	mov    al,BYTE PTR [esp+0x17]
6500abb3:	mov    ecx,DWORD PTR [esp+0x10088]
6500abba:	mov    DWORD PTR fs:0x0,ecx
6500abc1:	pop    ecx
6500abc2:	pop    edi
6500abc3:	pop    esi
6500abc4:	pop    ebp
6500abc5:	pop    ebx
6500abc6:	mov    ecx,DWORD PTR [esp+0x10070]
6500abcd:	xor    ecx,esp
6500abcf:	call   0x650127bc
6500abd4:	add    esp,0x10080
6500abda:	ret    0x30
6500abdd:	int3   
6500abde:	int3   
6500abdf:	int3   
6500abe0:	push   0xffffffff
6500abe2:	push   0x6502214b
6500abe7:	mov    eax,fs:0x0
6500abed:	push   eax
6500abee:	push   ecx
6500abef:	push   esi
6500abf0:	mov    eax,ds:0x6502c09c
6500abf5:	xor    eax,esp
6500abf7:	push   eax
6500abf8:	lea    eax,[esp+0xc]
6500abfc:	mov    fs:0x0,eax
6500ac02:	push   0xc
6500ac04:	call   0x650122fc
6500ac09:	mov    esi,eax
6500ac0b:	add    esp,0x4
6500ac0e:	mov    DWORD PTR [esp+0x8],esi
6500ac12:	test   esi,esi
6500ac14:	mov    DWORD PTR [esp+0x14],0x0
6500ac1c:	je     0x6500ac3a
6500ac1e:	mov    eax,DWORD PTR [esp+0x1c]
6500ac22:	push   eax
6500ac23:	mov    DWORD PTR [esi+0x4],0x0
6500ac2a:	mov    DWORD PTR [esi+0x8],0x1
6500ac31:	call   0x6501e700
6500ac36:	mov    DWORD PTR [esi],eax
6500ac38:	jmp    0x6500ac3c
6500ac3a:	xor    esi,esi
6500ac3c:	test   esi,esi
6500ac3e:	mov    DWORD PTR [esp+0x14],0xffffffff
6500ac46:	mov    DWORD PTR [ebx],esi
6500ac48:	jne    0x6500ac54
6500ac4a:	push   0x8007000e
6500ac4f:	call   0x6501e6f0
6500ac54:	mov    eax,ebx
6500ac56:	mov    ecx,DWORD PTR [esp+0xc]
6500ac5a:	mov    DWORD PTR fs:0x0,ecx
6500ac61:	pop    ecx
6500ac62:	pop    esi
6500ac63:	add    esp,0x10
6500ac66:	ret    0x4
6500ac69:	int3   
6500ac6a:	int3   
6500ac6b:	int3   
6500ac6c:	int3   
6500ac6d:	int3   
6500ac6e:	int3   
6500ac6f:	int3   
6500ac70:	push   0xffffffff
6500ac72:	push   0x6502211b
6500ac77:	mov    eax,fs:0x0
6500ac7d:	push   eax
6500ac7e:	push   ebp
6500ac7f:	push   esi
6500ac80:	mov    eax,ds:0x6502c09c
6500ac85:	xor    eax,esp
6500ac87:	push   eax
6500ac88:	lea    eax,[esp+0xc]
6500ac8c:	mov    fs:0x0,eax
6500ac92:	mov    ebp,DWORD PTR [esp+0x1c]
6500ac96:	push   0xc
6500ac98:	call   0x650122fc
6500ac9d:	mov    esi,eax
6500ac9f:	add    esp,0x4
6500aca2:	mov    DWORD PTR [esp+0x1c],esi
6500aca6:	test   esi,esi
6500aca8:	mov    DWORD PTR [esp+0x14],0x0
6500acb0:	je     0x6500acdd
6500acb2:	push   edi
6500acb3:	mov    DWORD PTR [esi+0x4],0x0
6500acba:	mov    DWORD PTR [esi+0x8],0x1
6500acc1:	call   DWORD PTR ds:0x65024198
6500acc7:	test   eax,eax
6500acc9:	mov    DWORD PTR [esi],eax
6500accb:	jne    0x6500acdf
6500accd:	test   edi,edi
6500accf:	je     0x6500acdf
6500acd1:	push   0x8007000e
6500acd6:	call   0x6501e6f0
6500acdb:	jmp    0x6500acdf
6500acdd:	xor    esi,esi
6500acdf:	test   esi,esi
6500ace1:	mov    DWORD PTR [esp+0x14],0xffffffff
6500ace9:	mov    DWORD PTR [ebp+0x0],esi
6500acec:	jne    0x6500acf8
6500acee:	push   0x8007000e
6500acf3:	call   0x6501e6f0
6500acf8:	mov    eax,ebp
6500acfa:	mov    ecx,DWORD PTR [esp+0xc]
6500acfe:	mov    DWORD PTR fs:0x0,ecx
6500ad05:	pop    ecx
6500ad06:	pop    esi
6500ad07:	pop    ebp
6500ad08:	add    esp,0xc
6500ad0b:	ret    0x4
6500ad0e:	int3   
6500ad0f:	int3   
6500ad10:	push   esi
6500ad11:	mov    esi,DWORD PTR [edi]
6500ad13:	test   esi,esi
6500ad15:	je     0x6500ad55
6500ad17:	lea    eax,[esi+0x8]
6500ad1a:	push   eax
6500ad1b:	call   DWORD PTR ds:0x65024098
6500ad21:	test   eax,eax
6500ad23:	jne    0x6500ad4f
6500ad25:	test   esi,esi
6500ad27:	je     0x6500ad4f
6500ad29:	mov    eax,DWORD PTR [esi]
6500ad2b:	test   eax,eax
6500ad2d:	je     0x6500ad36
6500ad2f:	push   eax
6500ad30:	call   DWORD PTR ds:0x650241a0
6500ad36:	mov    eax,DWORD PTR [esi+0x4]
6500ad39:	test   eax,eax
6500ad3b:	je     0x6500ad46
6500ad3d:	push   eax
6500ad3e:	call   0x65012e3a
6500ad43:	add    esp,0x4
6500ad46:	push   esi
6500ad47:	call   0x65011f62
6500ad4c:	add    esp,0x4
6500ad4f:	mov    DWORD PTR [edi],0x0
6500ad55:	pop    esi
6500ad56:	ret    
6500ad57:	int3   
6500ad58:	int3   
6500ad59:	int3   
6500ad5a:	int3   
6500ad5b:	int3   
6500ad5c:	int3   
6500ad5d:	int3   
6500ad5e:	int3   
6500ad5f:	int3   
6500ad60:	push   0xffffffff
6500ad62:	push   0x650220eb
6500ad67:	mov    eax,fs:0x0
6500ad6d:	push   eax
6500ad6e:	push   ebp
6500ad6f:	push   esi
6500ad70:	mov    eax,ds:0x6502c09c
6500ad75:	xor    eax,esp
6500ad77:	push   eax
6500ad78:	lea    eax,[esp+0xc]
6500ad7c:	mov    fs:0x0,eax
6500ad82:	mov    ebp,DWORD PTR [esp+0x1c]
6500ad86:	test   ebp,ebp
6500ad88:	je     0x6500ad9e
6500ad8a:	mov    eax,DWORD PTR [ebx]
6500ad8c:	test   eax,eax
6500ad8e:	je     0x6500ad94
6500ad90:	mov    eax,DWORD PTR [eax]
6500ad92:	jmp    0x6500ad96
6500ad94:	xor    eax,eax
6500ad96:	cmp    eax,ebp
6500ad98:	je     0x6500ae43
6500ad9e:	mov    esi,DWORD PTR [ebx]
6500ada0:	test   esi,esi
6500ada2:	je     0x6500ade2
6500ada4:	lea    eax,[esi+0x8]
6500ada7:	push   eax
6500ada8:	call   DWORD PTR ds:0x65024098
6500adae:	test   eax,eax
6500adb0:	jne    0x6500addc
6500adb2:	test   esi,esi
6500adb4:	je     0x6500addc
6500adb6:	mov    eax,DWORD PTR [esi]
6500adb8:	test   eax,eax
6500adba:	je     0x6500adc3
6500adbc:	push   eax
6500adbd:	call   DWORD PTR ds:0x650241a0
6500adc3:	mov    eax,DWORD PTR [esi+0x4]
6500adc6:	test   eax,eax
6500adc8:	je     0x6500add3
6500adca:	push   eax
6500adcb:	call   0x65012e3a
6500add0:	add    esp,0x4
6500add3:	push   esi
6500add4:	call   0x65011f62
6500add9:	add    esp,0x4
6500addc:	mov    DWORD PTR [ebx],0x0
6500ade2:	push   0xc
6500ade4:	call   0x650122fc
6500ade9:	mov    esi,eax
6500adeb:	add    esp,0x4
6500adee:	mov    DWORD PTR [esp+0x1c],esi
6500adf2:	test   esi,esi
6500adf4:	mov    DWORD PTR [esp+0x14],0x0
6500adfc:	je     0x6500ae29
6500adfe:	push   ebp
6500adff:	mov    DWORD PTR [esi+0x4],0x0
6500ae06:	mov    DWORD PTR [esi+0x8],0x1
6500ae0d:	call   DWORD PTR ds:0x65024198
6500ae13:	test   eax,eax
6500ae15:	mov    DWORD PTR [esi],eax
6500ae17:	jne    0x6500ae2b
6500ae19:	test   ebp,ebp
6500ae1b:	je     0x6500ae2b
6500ae1d:	push   0x8007000e
6500ae22:	call   0x6501e6f0
6500ae27:	jmp    0x6500ae2b
6500ae29:	xor    esi,esi
6500ae2b:	test   esi,esi
6500ae2d:	mov    DWORD PTR [esp+0x14],0xffffffff
6500ae35:	mov    DWORD PTR [ebx],esi
6500ae37:	jne    0x6500ae43
6500ae39:	push   0x8007000e
6500ae3e:	call   0x6501e6f0
6500ae43:	mov    eax,ebx
6500ae45:	mov    ecx,DWORD PTR [esp+0xc]
6500ae49:	mov    DWORD PTR fs:0x0,ecx
6500ae50:	pop    ecx
6500ae51:	pop    esi
6500ae52:	pop    ebp
6500ae53:	add    esp,0xc
6500ae56:	ret    0x4
6500ae59:	int3   
6500ae5a:	int3   
6500ae5b:	int3   
6500ae5c:	int3   
6500ae5d:	int3   
6500ae5e:	int3   
6500ae5f:	int3   
6500ae60:	push   0xffffffff
6500ae62:	push   0x6502217b
6500ae67:	mov    eax,fs:0x0
6500ae6d:	push   eax
6500ae6e:	push   ecx
6500ae6f:	push   esi
6500ae70:	push   edi
6500ae71:	mov    eax,ds:0x6502c09c
6500ae76:	xor    eax,esp
6500ae78:	push   eax
6500ae79:	lea    eax,[esp+0x10]
6500ae7d:	mov    fs:0x0,eax
6500ae83:	push   0xc
6500ae85:	call   0x650122fc
6500ae8a:	add    esp,0x4
6500ae8d:	mov    DWORD PTR [esp+0xc],eax
6500ae91:	test   eax,eax
6500ae93:	mov    DWORD PTR [esp+0x18],0x0
6500ae9b:	je     0x6500aeae
6500ae9d:	mov    ecx,DWORD PTR [esp+0x20]
6500aea1:	push   ecx
6500aea2:	push   ebx
6500aea3:	mov    edi,eax
6500aea5:	call   0x6500afc0
6500aeaa:	mov    edi,eax
6500aeac:	jmp    0x6500aeb0
6500aeae:	xor    edi,edi
6500aeb0:	test   edi,edi
6500aeb2:	mov    DWORD PTR [esp+0x18],0xffffffff
6500aeba:	jne    0x6500aec8
6500aebc:	push   0x8007000e
6500aec1:	call   0x6501e6f0
6500aec6:	jmp    0x6500af0e
6500aec8:	mov    esi,DWORD PTR [ebx]
6500aeca:	test   esi,esi
6500aecc:	je     0x6500af0c
6500aece:	lea    edx,[esi+0x8]
6500aed1:	push   edx
6500aed2:	call   DWORD PTR ds:0x65024098
6500aed8:	test   eax,eax
6500aeda:	jne    0x6500af06
6500aedc:	test   esi,esi
6500aede:	je     0x6500af06
6500aee0:	mov    eax,DWORD PTR [esi]
6500aee2:	test   eax,eax
6500aee4:	je     0x6500aeed
6500aee6:	push   eax
6500aee7:	call   DWORD PTR ds:0x650241a0
6500aeed:	mov    eax,DWORD PTR [esi+0x4]
6500aef0:	test   eax,eax
6500aef2:	je     0x6500aefd
6500aef4:	push   eax
6500aef5:	call   0x65012e3a
6500aefa:	add    esp,0x4
6500aefd:	push   esi
6500aefe:	call   0x65011f62
6500af03:	add    esp,0x4
6500af06:	mov    DWORD PTR [ebx],0x0
6500af0c:	mov    DWORD PTR [ebx],edi
6500af0e:	mov    eax,ebx
6500af10:	mov    ecx,DWORD PTR [esp+0x10]
6500af14:	mov    DWORD PTR fs:0x0,ecx
6500af1b:	pop    ecx
6500af1c:	pop    edi
6500af1d:	pop    esi
6500af1e:	add    esp,0x10
6500af21:	ret    0x4
6500af24:	int3   
6500af25:	int3   
6500af26:	int3   
6500af27:	int3   
6500af28:	int3   
6500af29:	int3   
6500af2a:	int3   
6500af2b:	int3   
6500af2c:	int3   
6500af2d:	int3   
6500af2e:	int3   
6500af2f:	int3   
6500af30:	push   0xffffffff
6500af32:	push   0x65022229
6500af37:	mov    eax,fs:0x0
6500af3d:	push   eax
6500af3e:	push   ecx
6500af3f:	push   ebx
6500af40:	mov    eax,ds:0x6502c09c
6500af45:	xor    eax,esp
6500af47:	push   eax
6500af48:	lea    eax,[esp+0xc]
6500af4c:	mov    fs:0x0,eax
6500af52:	mov    ebx,DWORD PTR [esp+0x20]
6500af56:	mov    eax,DWORD PTR [esp+0x1c]
6500af5a:	mov    DWORD PTR [esp+0x8],0x0
6500af62:	mov    eax,DWORD PTR [eax]
6500af64:	test   eax,eax
6500af66:	mov    DWORD PTR [ebx],eax
6500af68:	je     0x6500af74
6500af6a:	add    eax,0x8
6500af6d:	push   eax
6500af6e:	call   DWORD PTR ds:0x65024020
6500af74:	mov    ecx,DWORD PTR [esp+0x24]
6500af78:	mov    DWORD PTR [esp+0x14],0x0
6500af80:	push   ecx
6500af81:	mov    DWORD PTR [esp+0xc],0x1
6500af89:	call   0x6500ae60
6500af8e:	mov    eax,ebx
6500af90:	mov    ecx,DWORD PTR [esp+0xc]
6500af94:	mov    DWORD PTR fs:0x0,ecx
6500af9b:	pop    ecx
6500af9c:	pop    ebx
6500af9d:	add    esp,0x10
6500afa0:	ret    0xc
6500afa3:	int3   
6500afa4:	int3   
6500afa5:	int3   
6500afa6:	int3   
6500afa7:	int3   
6500afa8:	int3   
6500afa9:	int3   
6500afaa:	int3   
6500afab:	int3   
6500afac:	int3   
6500afad:	int3   
6500afae:	int3   
6500afaf:	int3   
6500afb0:	mov    eax,DWORD PTR [eax]
6500afb2:	test   eax,eax
6500afb4:	je     0x6500afb9
6500afb6:	mov    eax,DWORD PTR [eax]
6500afb8:	ret    
6500afb9:	xor    eax,eax
6500afbb:	ret    
6500afbc:	int3   
6500afbd:	int3   
6500afbe:	int3   
6500afbf:	int3   
6500afc0:	mov    eax,DWORD PTR [esp+0x4]
6500afc4:	push   ebx
6500afc5:	xor    ebx,ebx
6500afc7:	mov    DWORD PTR [edi+0x4],ebx
6500afca:	mov    DWORD PTR [edi+0x8],0x1
6500afd1:	mov    eax,DWORD PTR [eax]
6500afd3:	cmp    eax,ebx
6500afd5:	push   ebp
6500afd6:	push   esi
6500afd7:	mov    esi,DWORD PTR ds:0x6502418c
6500afdd:	je     0x6500afec
6500afdf:	mov    eax,DWORD PTR [eax]
6500afe1:	cmp    eax,ebx
6500afe3:	je     0x6500afec
6500afe5:	push   eax
6500afe6:	call   esi
6500afe8:	mov    ebp,eax
6500afea:	jmp    0x6500afee
6500afec:	xor    ebp,ebp
6500afee:	mov    ecx,DWORD PTR [esp+0x14]
6500aff2:	mov    eax,DWORD PTR [ecx]
6500aff4:	cmp    eax,ebx
6500aff6:	je     0x6500b003
6500aff8:	mov    eax,DWORD PTR [eax]
6500affa:	cmp    eax,ebx
6500affc:	je     0x6500b003
6500affe:	push   eax
6500afff:	call   esi
6500b001:	mov    ebx,eax
6500b003:	lea    esi,[ebx+ebp*1]
6500b006:	add    esi,esi
6500b008:	push   esi
6500b009:	push   0x0
6500b00b:	call   DWORD PTR ds:0x6502419c
6500b011:	test   eax,eax
6500b013:	mov    DWORD PTR [edi],eax
6500b015:	jne    0x6500b029
6500b017:	push   0x8007000e
6500b01c:	call   0x6501e6f0
6500b021:	pop    esi
6500b022:	pop    ebp
6500b023:	mov    eax,edi
6500b025:	pop    ebx
6500b026:	ret    0x8
6500b029:	mov    edx,DWORD PTR [esp+0x10]
6500b02d:	mov    ecx,DWORD PTR [edx]
6500b02f:	test   ecx,ecx
6500b031:	je     0x6500b04c
6500b033:	mov    ecx,DWORD PTR [ecx]
6500b035:	test   ecx,ecx
6500b037:	je     0x6500b04c
6500b039:	lea    edx,[ebp+ebp*1+0x2]
6500b03d:	push   edx
6500b03e:	push   ecx
6500b03f:	add    esi,0x2
6500b042:	push   esi
6500b043:	push   eax
6500b044:	call   0x650120d3
6500b049:	add    esp,0x10
6500b04c:	mov    eax,DWORD PTR [esp+0x14]
6500b050:	mov    eax,DWORD PTR [eax]
6500b052:	test   eax,eax
6500b054:	je     0x6500b071
6500b056:	mov    ecx,DWORD PTR [eax]
6500b058:	test   ecx,ecx
6500b05a:	je     0x6500b071
6500b05c:	lea    eax,[ebx+ebx*1+0x2]
6500b060:	push   eax
6500b061:	push   ecx
6500b062:	mov    ecx,DWORD PTR [edi]
6500b064:	push   eax
6500b065:	lea    edx,[ecx+ebp*2]
6500b068:	push   edx
6500b069:	call   0x650120d3
6500b06e:	add    esp,0x10
6500b071:	pop    esi
6500b072:	pop    ebp
6500b073:	mov    eax,edi
6500b075:	pop    ebx
6500b076:	ret    0x8
6500b079:	int3   
6500b07a:	int3   
6500b07b:	int3   
6500b07c:	int3   
6500b07d:	int3   
6500b07e:	int3   
6500b07f:	int3   
6500b080:	push   ecx
6500b081:	call   DWORD PTR ds:0x650241a4
6500b087:	ret    
6500b088:	int3   
6500b089:	int3   
6500b08a:	int3   
6500b08b:	int3   
6500b08c:	int3   
6500b08d:	int3   
6500b08e:	int3   
6500b08f:	int3   
6500b090:	push   0xffffffff
6500b092:	push   0x650221e8
6500b097:	mov    eax,fs:0x0
6500b09d:	push   eax
6500b09e:	sub    esp,0x18
6500b0a1:	push   ebx
6500b0a2:	mov    eax,ds:0x6502c09c
6500b0a7:	xor    eax,esp
6500b0a9:	push   eax
6500b0aa:	lea    eax,[esp+0x20]
6500b0ae:	mov    fs:0x0,eax
6500b0b4:	mov    ebx,ecx
6500b0b6:	cmp    WORD PTR [esi],0x8
6500b0ba:	jne    0x6500b0d8
6500b0bc:	mov    eax,DWORD PTR [esi+0x8]
6500b0bf:	push   eax
6500b0c0:	call   0x6500ad60
6500b0c5:	mov    eax,ebx
6500b0c7:	mov    ecx,DWORD PTR [esp+0x20]
6500b0cb:	mov    DWORD PTR fs:0x0,ecx
6500b0d2:	pop    ecx
6500b0d3:	pop    ebx
6500b0d4:	add    esp,0x24
6500b0d7:	ret    
6500b0d8:	lea    ecx,[esp+0xc]
6500b0dc:	push   ecx
6500b0dd:	call   DWORD PTR ds:0x65024190
6500b0e3:	lea    edx,[esp+0xc]
6500b0e7:	cmp    edx,esi
6500b0e9:	mov    DWORD PTR [esp+0x28],0x0
6500b0f1:	jne    0x6500b0fb
6500b0f3:	cmp    WORD PTR [esp+0xc],0x8
6500b0f9:	je     0x6500b115
6500b0fb:	push   0x8
6500b0fd:	push   0x0
6500b0ff:	push   esi
6500b100:	lea    eax,[esp+0x18]
6500b104:	push   eax
6500b105:	call   DWORD PTR ds:0x65024194
6500b10b:	test   eax,eax
6500b10d:	jge    0x6500b115
6500b10f:	push   eax
6500b110:	call   0x6501e6f0
6500b115:	mov    ecx,DWORD PTR [esp+0x14]
6500b119:	push   ecx
6500b11a:	call   0x6500ad60
6500b11f:	lea    edx,[esp+0xc]
6500b123:	push   edx
6500b124:	call   DWORD PTR ds:0x650241a4
6500b12a:	mov    eax,ebx
6500b12c:	mov    ecx,DWORD PTR [esp+0x20]
6500b130:	mov    DWORD PTR fs:0x0,ecx
6500b137:	pop    ecx
6500b138:	pop    ebx
6500b139:	add    esp,0x24
6500b13c:	ret    
6500b13d:	int3   
6500b13e:	int3   
6500b13f:	int3   
6500b140:	sub    esp,0x8
6500b143:	test   eax,eax
6500b145:	mov    BYTE PTR [edi],0x0
6500b148:	jle    0x6500b29e
6500b14e:	push   ebx
6500b14f:	push   ebp
6500b150:	push   esi
6500b151:	xor    esi,esi
6500b153:	add    eax,ecx
6500b155:	mov    BYTE PTR [esp+0xf],0x0
6500b15a:	mov    BYTE PTR [edi],0x0
6500b15d:	mov    DWORD PTR [esp+0x10],eax
6500b161:	mov    ebp,eax
6500b163:	mov    al,BYTE PTR [ebp+0x0]
6500b166:	test   al,al
6500b168:	je     0x6500b214
6500b16e:	movsx  edx,al
6500b171:	push   edx
6500b172:	call   0x650135af
6500b177:	mov    bl,al
6500b179:	movsx  eax,bl
6500b17c:	push   eax
6500b17d:	call   0x650133f0
6500b182:	add    esp,0x8
6500b185:	test   eax,eax
6500b187:	je     0x6500b18b
6500b189:	mov    bl,0x30
6500b18b:	shl    BYTE PTR [esi+edi*1],0x4
6500b18f:	add    BYTE PTR [esp+0xf],0x1
6500b194:	mov    cl,BYTE PTR [esi+edi*1]
6500b197:	mov    al,bl
6500b199:	sub    al,0x30
6500b19b:	cmp    al,0x9
6500b19d:	ja     0x6500b1a6
6500b19f:	or     al,cl
6500b1a1:	mov    BYTE PTR [esi+edi*1],al
6500b1a4:	jmp    0x6500b1b8
6500b1a6:	mov    dl,bl
6500b1a8:	sub    dl,0x61
6500b1ab:	cmp    dl,0x5
6500b1ae:	ja     0x6500b1ea
6500b1b0:	sub    bl,0x57
6500b1b3:	or     bl,cl
6500b1b5:	mov    BYTE PTR [esi+edi*1],bl
6500b1b8:	cmp    BYTE PTR [esp+0xf],0x2
6500b1bd:	jne    0x6500b1e2
6500b1bf:	mov    al,BYTE PTR [esi+edi*1]
6500b1c2:	test   al,al
6500b1c4:	je     0x6500b1d6
6500b1c6:	movsx  eax,al
6500b1c9:	push   eax
6500b1ca:	call   0x6501346d
6500b1cf:	add    esp,0x4
6500b1d2:	test   eax,eax
6500b1d4:	je     0x6500b1ea
6500b1d6:	add    esi,0x1
6500b1d9:	mov    BYTE PTR [esp+0xf],0x0
6500b1de:	mov    BYTE PTR [esi+edi*1],0x0
6500b1e2:	add    ebp,0x1
6500b1e5:	jmp    0x6500b163
6500b1ea:	mov    ebp,DWORD PTR [esp+0x10]
6500b1ee:	xor    esi,esi
6500b1f0:	mov    bl,BYTE PTR [ebp+0x0]
6500b1f3:	test   bl,bl
6500b1f5:	je     0x6500b214
6500b1f7:	movsx  ecx,bl
6500b1fa:	push   ecx
6500b1fb:	call   0x6501346d
6500b200:	add    esp,0x4
6500b203:	test   eax,eax
6500b205:	je     0x6500b212
6500b207:	mov    BYTE PTR [esi+edi*1],bl
6500b20a:	add    esi,0x1
6500b20d:	add    ebp,0x1
6500b210:	jmp    0x6500b1f0
6500b212:	xor    esi,esi
6500b214:	cmp    DWORD PTR [esp+0x18],0x0
6500b219:	mov    BYTE PTR [esi+edi*1],0x0
6500b21d:	je     0x6500b242
6500b21f:	test   esi,esi
6500b221:	jle    0x6500b242
6500b223:	add    esi,0xffffffff
6500b226:	shr    esi,1
6500b228:	lea    eax,[edi+0x1]
6500b22b:	add    esi,0x1
6500b22e:	mov    edi,edi
6500b230:	mov    cl,BYTE PTR [eax-0x1]
6500b233:	mov    dl,BYTE PTR [eax]
6500b235:	mov    BYTE PTR [eax-0x1],dl
6500b238:	mov    BYTE PTR [eax],cl
6500b23a:	add    eax,0x2
6500b23d:	sub    esi,0x1
6500b240:	jne    0x6500b230
6500b242:	or     ebx,0xffffffff
6500b245:	or     ebp,ebx
6500b247:	xor    esi,esi
6500b249:	cmp    BYTE PTR [edi],0x0
6500b24c:	je     0x6500b29b
6500b24e:	mov    edi,edi
6500b250:	movsx  eax,BYTE PTR [esi+edi*1]
6500b254:	push   eax
6500b255:	call   0x650133f0
6500b25a:	add    esp,0x4
6500b25d:	test   eax,eax
6500b25f:	jne    0x6500b269
6500b261:	test   ebp,ebp
6500b263:	jge    0x6500b267
6500b265:	mov    ebp,esi
6500b267:	mov    ebx,esi
6500b269:	add    esi,0x1
6500b26c:	cmp    BYTE PTR [esi+edi*1],0x0
6500b270:	jne    0x6500b250
6500b272:	test   ebp,ebp
6500b274:	jl     0x6500b29b
6500b276:	test   ebx,ebx
6500b278:	jl     0x6500b29b
6500b27a:	cmp    ebp,ebx
6500b27c:	mov    eax,ebp
6500b27e:	jg     0x6500b295
6500b280:	mov    edx,edi
6500b282:	sub    edx,ebp
6500b284:	mov    cl,BYTE PTR [eax+edi*1]
6500b287:	test   cl,cl
6500b289:	je     0x6500b295
6500b28b:	mov    BYTE PTR [edx+eax*1],cl
6500b28e:	add    eax,0x1
6500b291:	cmp    eax,ebx
6500b293:	jle    0x6500b284
6500b295:	sub    eax,ebp
6500b297:	mov    BYTE PTR [eax+edi*1],0x0
6500b29b:	pop    esi
6500b29c:	pop    ebp
6500b29d:	pop    ebx
6500b29e:	mov    eax,edi
6500b2a0:	add    esp,0x8
6500b2a3:	ret    
6500b2a4:	int3   
6500b2a5:	int3   
6500b2a6:	int3   
6500b2a7:	int3   
6500b2a8:	int3   
6500b2a9:	int3   
6500b2aa:	int3   
6500b2ab:	int3   
6500b2ac:	int3   
6500b2ad:	int3   
6500b2ae:	int3   
6500b2af:	int3   
6500b2b0:	push   ebp
6500b2b1:	mov    ebp,esp
6500b2b3:	and    esp,0xfffffff8
6500b2b6:	mov    eax,0x2f34
6500b2bb:	call   0x65018030
6500b2c0:	mov    eax,ds:0x6502c09c
6500b2c5:	xor    eax,esp
6500b2c7:	mov    DWORD PTR [esp+0x2f30],eax
6500b2ce:	push   ebx
6500b2cf:	mov    eax,DWORD PTR [ebp+0x8]
6500b2d2:	mov    ecx,DWORD PTR [ebp+0xc]
6500b2d5:	mov    ebx,DWORD PTR [ebp+0x10]
6500b2d8:	push   esi
6500b2d9:	push   edi
6500b2da:	xor    edi,edi
6500b2dc:	push   edi
6500b2dd:	push   edi
6500b2de:	push   0x3
6500b2e0:	push   edi
6500b2e1:	push   0x3
6500b2e3:	push   edi
6500b2e4:	push   0x65028234
6500b2e9:	push   0x12
6500b2eb:	push   0x65028264
6500b2f0:	mov    DWORD PTR [esp+0x3c],eax
6500b2f4:	mov    DWORD PTR [esp+0x40],ecx
6500b2f8:	mov    BYTE PTR [esp+0x37],0x0
6500b2fd:	call   0x65006d70
6500b302:	add    esp,0xc
6500b305:	push   eax
6500b306:	call   0x6500e120
6500b30b:	call   eax
6500b30d:	mov    esi,eax
6500b30f:	cmp    esi,0xffffffff
6500b312:	jne    0x6500b32b
6500b314:	xor    al,al
6500b316:	pop    edi
6500b317:	pop    esi
6500b318:	pop    ebx
6500b319:	mov    ecx,DWORD PTR [esp+0x2f30]
6500b320:	xor    ecx,esp
6500b322:	call   0x650127bc
6500b327:	mov    esp,ebp
6500b329:	pop    ebp
6500b32a:	ret    
6500b32b:	xor    eax,eax
6500b32d:	push   0x2710
6500b332:	lea    edx,[esp+0x82c]
6500b339:	push   edi
6500b33a:	mov    DWORD PTR [esp+0x2c],eax
6500b33e:	mov    DWORD PTR [esp+0x30],eax
6500b342:	push   edx
6500b343:	mov    DWORD PTR [esp+0x20],edi
6500b347:	mov    DWORD PTR [esp+0x38],eax
6500b34b:	mov    DWORD PTR [esp+0x30],edi
6500b34f:	mov    DWORD PTR [esp+0x34],edi
6500b353:	call   0x65012e40
6500b358:	add    esp,0xc
6500b35b:	push   edi
6500b35c:	lea    eax,[esp+0x18]
6500b360:	push   eax
6500b361:	push   0x2710
6500b366:	lea    ecx,[esp+0x834]
6500b36d:	push   ecx
6500b36e:	push   0xc
6500b370:	lea    edx,[esp+0x38]
6500b374:	push   edx
6500b375:	push   0x2d1400
6500b37a:	push   esi
6500b37b:	call   0x6500e450
6500b380:	call   eax
6500b382:	test   eax,eax
6500b384:	je     0x6500b3e4
6500b386:	mov    eax,DWORD PTR [esp+0x838]
6500b38d:	push   edi
6500b38e:	lea    edi,[esp+0x444]
6500b395:	lea    ecx,[esp+0x82c]
6500b39c:	call   0x6500b140
6500b3a1:	mov    eax,DWORD PTR [esp+0x844]
6500b3a8:	add    esp,0x4
6500b3ab:	push   0x1
6500b3ad:	lea    edi,[esp+0x5c]
6500b3b1:	lea    ecx,[esp+0x82c]
6500b3b8:	call   0x6500b140
6500b3bd:	mov    ecx,DWORD PTR [esp+0x1c]
6500b3c1:	add    esp,0x4
6500b3c4:	mov    eax,edi
6500b3c6:	push   eax
6500b3c7:	call   0x65002820
6500b3cc:	lea    ecx,[esp+0x440]
6500b3d3:	push   ecx
6500b3d4:	mov    ecx,DWORD PTR [esp+0x20]
6500b3d8:	call   0x65002820
6500b3dd:	mov    BYTE PTR [esp+0x13],0x1
6500b3e2:	xor    edi,edi
6500b3e4:	xor    eax,eax
6500b3e6:	push   edi
6500b3e7:	lea    edx,[esp+0x24]
6500b3eb:	push   edx
6500b3ec:	push   0x28
6500b3ee:	mov    DWORD PTR [esp+0x40],eax
6500b3f2:	mov    DWORD PTR [esp+0x44],eax
6500b3f6:	mov    DWORD PTR [esp+0x48],eax
6500b3fa:	mov    DWORD PTR [esp+0x4c],eax
6500b3fe:	mov    DWORD PTR [esp+0x50],eax
6500b402:	mov    DWORD PTR [esp+0x54],eax
6500b406:	mov    DWORD PTR [esp+0x58],eax
6500b40a:	mov    DWORD PTR [esp+0x5c],eax
6500b40e:	mov    DWORD PTR [esp+0x60],eax
6500b412:	lea    eax,[esp+0x3c]
6500b416:	push   eax
6500b417:	push   edi
6500b418:	push   edi
6500b419:	push   0x700a0
6500b41e:	push   esi
6500b41f:	mov    DWORD PTR [esp+0x50],edi
6500b423:	mov    DWORD PTR [ebx],edi
6500b425:	mov    DWORD PTR [ebx+0x4],edi
6500b428:	call   0x6500e450
6500b42d:	call   eax
6500b42f:	test   eax,eax
6500b431:	je     0x6500b440
6500b433:	mov    ecx,DWORD PTR [esp+0x48]
6500b437:	mov    edx,DWORD PTR [esp+0x4c]
6500b43b:	mov    DWORD PTR [ebx],ecx
6500b43d:	mov    DWORD PTR [ebx+0x4],edx
6500b440:	push   esi
6500b441:	call   DWORD PTR ds:0x65024040
6500b447:	mov    ecx,DWORD PTR [esp+0x2f3c]
6500b44e:	mov    al,BYTE PTR [esp+0x13]
6500b452:	pop    edi
6500b453:	pop    esi
6500b454:	pop    ebx
6500b455:	xor    ecx,esp
6500b457:	call   0x650127bc
6500b45c:	mov    esp,ebp
6500b45e:	pop    ebp
6500b45f:	ret    
6500b460:	push   ebp
6500b461:	lea    ebp,[esp-0x28c]
6500b468:	sub    esp,0x28c
6500b46e:	push   0xffffffff
6500b470:	push   0x65022b00
6500b475:	mov    eax,fs:0x0
6500b47b:	push   eax
6500b47c:	sub    esp,0x34
6500b47f:	mov    eax,ds:0x6502c09c
6500b484:	xor    eax,ebp
6500b486:	mov    DWORD PTR [ebp+0x288],eax
6500b48c:	push   ebx
6500b48d:	push   esi
6500b48e:	push   edi
6500b48f:	push   eax
6500b490:	lea    eax,[ebp-0xc]
6500b493:	mov    fs:0x0,eax
6500b499:	mov    eax,DWORD PTR [ebp+0x294]
6500b49f:	lea    ecx,[ebp-0x14]
6500b4a2:	push   ecx
6500b4a3:	lea    edx,[ebp+0x0]
6500b4a6:	push   edx
6500b4a7:	mov    DWORD PTR [ebp-0x20],eax
6500b4aa:	mov    DWORD PTR [ebp-0x14],0x1
6500b4b1:	call   0x6500de40
6500b4b6:	call   eax
6500b4b8:	cmp    eax,0x6f
6500b4bb:	jne    0x6500b691
6500b4c1:	mov    eax,DWORD PTR [ebp-0x14]
6500b4c4:	push   eax
6500b4c5:	call   0x65011f5d
6500b4ca:	mov    ebx,eax
6500b4cc:	add    esp,0x4
6500b4cf:	mov    DWORD PTR [ebp-0x24],ebx
6500b4d2:	lea    ecx,[ebp-0x14]
6500b4d5:	push   ecx
6500b4d6:	push   ebx
6500b4d7:	mov    DWORD PTR [ebp-0x4],0x0
6500b4de:	call   0x6500de40
6500b4e3:	call   eax
6500b4e5:	test   eax,eax
6500b4e7:	je     0x6500b4ef
6500b4e9:	push   ebx
6500b4ea:	jmp    0x6500b689
6500b4ef:	call   DWORD PTR ds:0x6502c06c
6500b4f5:	mov    edx,DWORD PTR ds:0x6502d560
6500b4fb:	mov    DWORD PTR [ebp-0x1c],eax
6500b4fe:	mov    eax,DWORD PTR [edx+0xc]
6500b501:	mov    ecx,0x6502d560
6500b506:	call   eax
6500b508:	lea    edi,[eax+0x10]
6500b50b:	mov    DWORD PTR [ebp-0x10],edi
6500b50e:	xor    esi,esi
6500b510:	mov    BYTE PTR [ebp-0x4],0x1
6500b514:	cmp    DWORD PTR [ebx+0x190],esi
6500b51a:	je     0x6500b5a2
6500b520:	mov    edx,DWORD PTR ds:0x6502d560
6500b526:	mov    eax,DWORD PTR [edx+0xc]
6500b529:	mov    ecx,0x6502d560
6500b52e:	call   eax
6500b530:	add    eax,0x10
6500b533:	mov    DWORD PTR [ebp-0x18],eax
6500b536:	mov    BYTE PTR [ebp-0x4],0x2
6500b53a:	movzx  ecx,BYTE PTR [ebx+esi*1+0x194]
6500b542:	push   ecx
6500b543:	push   0x65028290
6500b548:	push   0x4
6500b54a:	push   0x650282d0
6500b54f:	call   0x65006d70
6500b554:	add    esp,0xc
6500b557:	push   eax
6500b558:	lea    edx,[ebp-0x18]
6500b55b:	push   edx
6500b55c:	call   0x65001da0
6500b561:	mov    edi,DWORD PTR [ebp-0x18]
6500b564:	mov    eax,DWORD PTR [edi-0xc]
6500b567:	add    esp,0xc
6500b56a:	push   eax
6500b56b:	push   edi
6500b56c:	lea    ecx,[ebp-0x10]
6500b56f:	call   0x65002a00
6500b574:	lea    eax,[edi-0x10]
6500b577:	mov    BYTE PTR [ebp-0x4],0x1
6500b57b:	lea    ecx,[eax+0xc]
6500b57e:	or     edx,0xffffffff
6500b581:	lock xadd DWORD PTR [ecx],edx
6500b585:	dec    edx
6500b586:	test   edx,edx
6500b588:	jg     0x6500b594
6500b58a:	mov    ecx,DWORD PTR [eax]
6500b58c:	mov    edx,DWORD PTR [ecx]
6500b58e:	push   eax
6500b58f:	mov    eax,DWORD PTR [edx+0x4]
6500b592:	call   eax
6500b594:	add    esi,0x1
6500b597:	cmp    esi,DWORD PTR [ebx+0x190]
6500b59d:	jne    0x6500b520
6500b59f:	mov    edi,DWORD PTR [ebp-0x10]
6500b5a2:	cmp    DWORD PTR [edi-0x4],0x1
6500b5a6:	jle    0x6500b5b7
6500b5a8:	mov    ecx,DWORD PTR [edi-0xc]
6500b5ab:	push   ecx
6500b5ac:	lea    ecx,[ebp-0x10]
6500b5af:	call   0x650019b0
6500b5b4:	mov    edi,DWORD PTR [ebp-0x10]
6500b5b7:	test   edi,edi
6500b5b9:	jne    0x6500b5bf
6500b5bb:	xor    esi,esi
6500b5bd:	jmp    0x6500b60d
6500b5bf:	push   edi
6500b5c0:	call   DWORD PTR ds:0x65024050
6500b5c6:	add    eax,0x1
6500b5c9:	cmp    eax,0x3fffffff
6500b5ce:	jg     0x6500b609
6500b5d0:	lea    edi,[eax+eax*1]
6500b5d3:	mov    eax,edi
6500b5d5:	call   0x65012ec0
6500b5da:	mov    esi,esp
6500b5dc:	test   esi,esi
6500b5de:	je     0x6500b606
6500b5e0:	mov    edx,DWORD PTR [ebp-0x10]
6500b5e3:	mov    eax,DWORD PTR [ebp-0x1c]
6500b5e6:	push   0x0
6500b5e8:	push   0x0
6500b5ea:	push   edi
6500b5eb:	push   esi
6500b5ec:	push   0xffffffff
6500b5ee:	push   edx
6500b5ef:	push   0x0
6500b5f1:	push   eax
6500b5f2:	mov    BYTE PTR [esi],0x0
6500b5f5:	call   DWORD PTR ds:0x65024028
6500b5fb:	mov    edi,DWORD PTR [ebp-0x10]
6500b5fe:	neg    eax
6500b600:	sbb    eax,eax
6500b602:	and    eax,esi
6500b604:	jmp    0x6500b60b
6500b606:	mov    edi,DWORD PTR [ebp-0x10]
6500b609:	xor    eax,eax
6500b60b:	mov    esi,eax
6500b60d:	mov    eax,esi
6500b60f:	mov    DWORD PTR [ebp-0x28],0xf
6500b616:	mov    DWORD PTR [ebp-0x2c],0x0
6500b61d:	mov    BYTE PTR [ebp-0x3c],0x0
6500b621:	lea    edx,[eax+0x1]
6500b624:	mov    cl,BYTE PTR [eax]
6500b626:	add    eax,0x1
6500b629:	test   cl,cl
6500b62b:	jne    0x6500b624
6500b62d:	sub    eax,edx
6500b62f:	push   eax
6500b630:	push   esi
6500b631:	lea    ecx,[ebp-0x40]
6500b634:	call   0x650018c0
6500b639:	mov    esi,DWORD PTR [ebp-0x20]
6500b63c:	lea    ecx,[ebp-0x40]
6500b63f:	push   ecx
6500b640:	mov    BYTE PTR [ebp-0x4],0x3
6500b644:	call   0x6500bbb0
6500b649:	cmp    DWORD PTR [ebp-0x28],0x10
6500b64d:	jb     0x6500b65b
6500b64f:	mov    edx,DWORD PTR [ebp-0x3c]
6500b652:	push   edx
6500b653:	call   0x65011f62
6500b658:	add    esp,0x4
6500b65b:	mov    ebx,DWORD PTR [ebx]
6500b65d:	lea    eax,[edi-0x10]
6500b660:	mov    BYTE PTR [ebp-0x4],0x0
6500b664:	lea    ecx,[eax+0xc]
6500b667:	or     edx,0xffffffff
6500b66a:	lock xadd DWORD PTR [ecx],edx
6500b66e:	dec    edx
6500b66f:	test   edx,edx
6500b671:	jg     0x6500b67d
6500b673:	mov    ecx,DWORD PTR [eax]
6500b675:	mov    edx,DWORD PTR [ecx]
6500b677:	push   eax
6500b678:	mov    eax,DWORD PTR [edx+0x4]
6500b67b:	call   eax
6500b67d:	test   ebx,ebx
6500b67f:	jne    0x6500b4ef
6500b685:	mov    ecx,DWORD PTR [ebp-0x24]
6500b688:	push   ecx
6500b689:	call   0x65011f62
6500b68e:	add    esp,0x4
6500b691:	lea    esp,[ebp-0x50]
6500b694:	mov    ecx,DWORD PTR [ebp-0xc]
6500b697:	mov    DWORD PTR fs:0x0,ecx
6500b69e:	pop    ecx
6500b69f:	pop    edi
6500b6a0:	pop    esi
6500b6a1:	pop    ebx
6500b6a2:	mov    ecx,DWORD PTR [ebp+0x288]
6500b6a8:	xor    ecx,ebp
6500b6aa:	call   0x650127bc
6500b6af:	add    ebp,0x28c
6500b6b5:	mov    esp,ebp
6500b6b7:	pop    ebp
6500b6b8:	ret    
6500b6b9:	int3   
6500b6ba:	int3   
6500b6bb:	int3   
6500b6bc:	int3   
6500b6bd:	int3   
6500b6be:	int3   
6500b6bf:	int3   
6500b6c0:	push   0xffffffff
6500b6c2:	push   0x65022ac0
6500b6c7:	mov    eax,fs:0x0
6500b6cd:	push   eax
6500b6ce:	sub    esp,0x50
6500b6d1:	push   ebx
6500b6d2:	push   ebp
6500b6d3:	push   esi
6500b6d4:	push   edi
6500b6d5:	mov    eax,ds:0x6502c09c
6500b6da:	xor    eax,esp
6500b6dc:	push   eax
6500b6dd:	lea    eax,[esp+0x64]
6500b6e1:	mov    fs:0x0,eax
6500b6e7:	mov    ebp,DWORD PTR [esp+0x74]
6500b6eb:	lea    eax,[esp+0x18]
6500b6ef:	xor    ebx,ebx
6500b6f1:	push   eax
6500b6f2:	mov    edi,0x650266cc
6500b6f7:	mov    DWORD PTR [esp+0x3c],ebx
6500b6fb:	call   0x6500ac70
6500b700:	push   ebx
6500b701:	push   ebx
6500b702:	mov    DWORD PTR [esp+0x74],ebx
6500b706:	call   DWORD PTR ds:0x650241d0
6500b70c:	test   eax,eax
6500b70e:	jge    0x6500b763
6500b710:	mov    esi,DWORD PTR [esp+0x18]
6500b714:	cmp    esi,ebx
6500b716:	mov    DWORD PTR [ebp+0x0],esi
6500b719:	je     0x6500ba03
6500b71f:	lea    edi,[esi+0x8]
6500b722:	push   edi
6500b723:	call   DWORD PTR ds:0x65024020
6500b729:	push   edi
6500b72a:	call   DWORD PTR ds:0x65024098
6500b730:	test   eax,eax
6500b732:	jne    0x6500ba03
6500b738:	mov    eax,DWORD PTR [esi]
6500b73a:	cmp    eax,ebx
6500b73c:	je     0x6500b745
6500b73e:	push   eax
6500b73f:	call   DWORD PTR ds:0x650241a0
6500b745:	mov    eax,DWORD PTR [esi+0x4]
6500b748:	cmp    eax,ebx
6500b74a:	je     0x6500b755
6500b74c:	push   eax
6500b74d:	call   0x65012e3a
6500b752:	add    esp,0x4
6500b755:	push   esi
6500b756:	call   0x65011f62
6500b75b:	add    esp,0x4
6500b75e:	jmp    0x6500ba03
6500b763:	lea    ecx,[esp+0x20]
6500b767:	push   ecx
6500b768:	push   0x65024a08
6500b76d:	push   0x1
6500b76f:	push   ebx
6500b770:	push   0x65024ad8
6500b775:	mov    DWORD PTR [esp+0x34],ebx
6500b779:	call   DWORD PTR ds:0x650241d4
6500b77f:	cmp    eax,ebx
6500b781:	jl     0x6500b9df
6500b787:	push   0x650282dc
6500b78c:	push   0xa
6500b78e:	push   0x65028300
6500b793:	mov    DWORD PTR [esp+0x28],ebx
6500b797:	call   0x65006d70
6500b79c:	add    esp,0xc
6500b79f:	lea    edx,[esp+0x30]
6500b7a3:	push   edx
6500b7a4:	mov    edi,eax
6500b7a6:	call   0x6500ac70
6500b7ab:	mov    BYTE PTR [esp+0x6c],0x1
6500b7b0:	mov    eax,DWORD PTR [eax]
6500b7b2:	cmp    eax,ebx
6500b7b4:	je     0x6500b7ba
6500b7b6:	mov    eax,DWORD PTR [eax]
6500b7b8:	jmp    0x6500b7bc
6500b7ba:	xor    eax,eax
6500b7bc:	mov    ecx,DWORD PTR [esp+0x20]
6500b7c0:	mov    edx,DWORD PTR [ecx]
6500b7c2:	lea    esi,[esp+0x1c]
6500b7c6:	push   esi
6500b7c7:	push   ebx
6500b7c8:	push   ebx
6500b7c9:	push   ebx
6500b7ca:	push   ebx
6500b7cb:	push   ebx
6500b7cc:	push   ebx
6500b7cd:	push   eax
6500b7ce:	mov    eax,DWORD PTR [edx+0xc]
6500b7d1:	push   ecx
6500b7d2:	call   eax
6500b7d4:	lea    edi,[esp+0x30]
6500b7d8:	mov    esi,eax
6500b7da:	mov    BYTE PTR [esp+0x6c],bl
6500b7de:	call   0x6500ad10
6500b7e3:	cmp    esi,ebx
6500b7e5:	jge    0x6500b7f0
6500b7e7:	mov    eax,DWORD PTR [esp+0x20]
6500b7eb:	jmp    0x6500b9d7
6500b7f0:	mov    eax,DWORD PTR [esp+0x1c]
6500b7f4:	push   ebx
6500b7f5:	push   ebx
6500b7f6:	push   0x3
6500b7f8:	push   0x3
6500b7fa:	push   ebx
6500b7fb:	push   ebx
6500b7fc:	push   0xa
6500b7fe:	push   eax
6500b7ff:	call   0x6500e8a0
6500b804:	call   eax
6500b806:	cmp    eax,ebx
6500b808:	jge    0x6500b81f
6500b80a:	mov    eax,DWORD PTR [esp+0x1c]
6500b80e:	mov    ecx,DWORD PTR [eax]
6500b810:	mov    edx,DWORD PTR [ecx+0x8]
6500b813:	push   eax
6500b814:	call   edx
6500b816:	mov    eax,DWORD PTR [esp+0x20]
6500b81a:	jmp    0x6500b9d7
6500b81f:	push   0x65028318
6500b824:	push   0xe
6500b826:	push   0x65028344
6500b82b:	mov    DWORD PTR [esp+0x30],ebx
6500b82f:	call   0x65006a80
6500b834:	add    esp,0xc
6500b837:	push   eax
6500b838:	lea    ebx,[esp+0x3c]
6500b83c:	call   0x6500abe0
6500b841:	mov    ecx,DWORD PTR [esp+0x78]
6500b845:	push   ecx
6500b846:	lea    edx,[esp+0x38]
6500b84a:	push   edx
6500b84b:	push   eax
6500b84c:	mov    BYTE PTR [esp+0x78],0x2
6500b851:	call   0x6500af30
6500b856:	mov    esi,eax
6500b858:	push   0x65028354
6500b85d:	push   0x3
6500b85f:	push   0x6502837c
6500b864:	mov    BYTE PTR [esp+0x78],0x3
6500b869:	call   0x65006a80
6500b86e:	add    esp,0xc
6500b871:	push   eax
6500b872:	lea    ebx,[esp+0x34]
6500b876:	call   0x6500abe0
6500b87b:	mov    BYTE PTR [esp+0x6c],0x4
6500b880:	mov    ecx,DWORD PTR [esi]
6500b882:	xor    ebx,ebx
6500b884:	cmp    ecx,ebx
6500b886:	je     0x6500b88c
6500b888:	mov    ecx,DWORD PTR [ecx]
6500b88a:	jmp    0x6500b88e
6500b88c:	xor    ecx,ecx
6500b88e:	mov    eax,DWORD PTR [eax]
6500b890:	cmp    eax,ebx
6500b892:	je     0x6500b898
6500b894:	mov    edx,DWORD PTR [eax]
6500b896:	jmp    0x6500b89a
6500b898:	xor    edx,edx
6500b89a:	mov    eax,DWORD PTR [esp+0x1c]
6500b89e:	mov    esi,DWORD PTR [eax]
6500b8a0:	lea    edi,[esp+0x24]
6500b8a4:	push   edi
6500b8a5:	push   ebx
6500b8a6:	push   0x30
6500b8a8:	push   ecx
6500b8a9:	push   edx
6500b8aa:	push   eax
6500b8ab:	mov    eax,DWORD PTR [esi+0x50]
6500b8ae:	call   eax
6500b8b0:	lea    edi,[esp+0x30]
6500b8b4:	mov    esi,eax
6500b8b6:	call   0x6500ad10
6500b8bb:	lea    edi,[esp+0x34]
6500b8bf:	call   0x6500ad10
6500b8c4:	lea    edi,[esp+0x38]
6500b8c8:	mov    BYTE PTR [esp+0x6c],bl
6500b8cc:	call   0x6500ad10
6500b8d1:	cmp    esi,ebx
6500b8d3:	jge    0x6500b8ea
6500b8d5:	mov    eax,DWORD PTR [esp+0x1c]
6500b8d9:	mov    ecx,DWORD PTR [eax]
6500b8db:	mov    edx,DWORD PTR [ecx+0x8]
6500b8de:	push   eax
6500b8df:	call   edx
6500b8e1:	mov    eax,DWORD PTR [esp+0x20]
6500b8e5:	jmp    0x6500b9d7
6500b8ea:	mov    eax,DWORD PTR [esp+0x24]
6500b8ee:	cmp    eax,ebx
6500b8f0:	mov    DWORD PTR [esp+0x2c],ebx
6500b8f4:	je     0x6500b9af
6500b8fa:	mov    edi,DWORD PTR ds:0x650241a4
6500b900:	mov    ecx,DWORD PTR [eax]
6500b902:	lea    edx,[esp+0x2c]
6500b906:	push   edx
6500b907:	lea    edx,[esp+0x2c]
6500b90b:	push   edx
6500b90c:	push   0x1
6500b90e:	push   0xffffffff
6500b910:	push   eax
6500b911:	mov    eax,DWORD PTR [ecx+0x10]
6500b914:	call   eax
6500b916:	cmp    DWORD PTR [esp+0x2c],ebx
6500b91a:	je     0x6500b9af
6500b920:	mov    esi,DWORD PTR [esp+0x28]
6500b924:	mov    eax,DWORD PTR [esp+0x7c]
6500b928:	mov    ebp,DWORD PTR [esi]
6500b92a:	push   ebx
6500b92b:	push   ebx
6500b92c:	lea    ecx,[esp+0x44]
6500b930:	push   ecx
6500b931:	push   ebx
6500b932:	call   0x6500afb0
6500b937:	mov    edx,DWORD PTR [ebp+0x10]
6500b93a:	push   eax
6500b93b:	push   esi
6500b93c:	call   edx
6500b93e:	cmp    eax,ebx
6500b940:	jl     0x6500b94a
6500b942:	cmp    WORD PTR [esp+0x3c],0x8
6500b948:	je     0x6500b96b
6500b94a:	lea    eax,[esp+0x3c]
6500b94e:	push   eax
6500b94f:	call   edi
6500b951:	mov    eax,DWORD PTR [esp+0x28]
6500b955:	mov    ecx,DWORD PTR [eax]
6500b957:	mov    edx,DWORD PTR [ecx+0x8]
6500b95a:	push   eax
6500b95b:	call   edx
6500b95d:	mov    eax,DWORD PTR [esp+0x24]
6500b961:	cmp    eax,ebx
6500b963:	mov    ebp,DWORD PTR [esp+0x74]
6500b967:	jne    0x6500b900
6500b969:	jmp    0x6500b9af
6500b96b:	lea    eax,[esp+0x4c]
6500b96f:	push   eax
6500b970:	call   DWORD PTR ds:0x65024190
6500b976:	lea    ecx,[esp+0x3c]
6500b97a:	push   ecx
6500b97b:	lea    edx,[esp+0x50]
6500b97f:	push   edx
6500b980:	call   DWORD PTR ds:0x65024188
6500b986:	cmp    eax,ebx
6500b988:	jge    0x6500b990
6500b98a:	push   eax
6500b98b:	call   0x6501e6f0
6500b990:	lea    esi,[esp+0x4c]
6500b994:	lea    ecx,[esp+0x18]
6500b998:	mov    BYTE PTR [esp+0x6c],0x5
6500b99d:	call   0x6500b090
6500b9a2:	mov    eax,esi
6500b9a4:	push   eax
6500b9a5:	mov    BYTE PTR [esp+0x70],bl
6500b9a9:	call   edi
6500b9ab:	mov    ebp,DWORD PTR [esp+0x74]
6500b9af:	mov    eax,DWORD PTR [esp+0x1c]
6500b9b3:	mov    ecx,DWORD PTR [eax]
6500b9b5:	mov    edx,DWORD PTR [ecx+0x8]
6500b9b8:	push   eax
6500b9b9:	call   edx
6500b9bb:	mov    eax,DWORD PTR [esp+0x20]
6500b9bf:	mov    ecx,DWORD PTR [eax]
6500b9c1:	mov    edx,DWORD PTR [ecx+0x8]
6500b9c4:	push   eax
6500b9c5:	call   edx
6500b9c7:	mov    eax,DWORD PTR [esp+0x24]
6500b9cb:	mov    ecx,DWORD PTR [eax]
6500b9cd:	mov    edx,DWORD PTR [ecx+0x8]
6500b9d0:	push   eax
6500b9d1:	call   edx
6500b9d3:	mov    eax,DWORD PTR [esp+0x28]
6500b9d7:	mov    ecx,DWORD PTR [eax]
6500b9d9:	mov    edx,DWORD PTR [ecx+0x8]
6500b9dc:	push   eax
6500b9dd:	call   edx
6500b9df:	call   DWORD PTR ds:0x650241dc
6500b9e5:	mov    eax,DWORD PTR [esp+0x18]
6500b9e9:	cmp    eax,ebx
6500b9eb:	mov    DWORD PTR [ebp+0x0],eax
6500b9ee:	je     0x6500b9fa
6500b9f0:	add    eax,0x8
6500b9f3:	push   eax
6500b9f4:	call   DWORD PTR ds:0x65024020
6500b9fa:	lea    edi,[esp+0x18]
6500b9fe:	call   0x6500ad10
6500ba03:	mov    eax,ebp
6500ba05:	mov    ecx,DWORD PTR [esp+0x64]
6500ba09:	mov    DWORD PTR fs:0x0,ecx
6500ba10:	pop    ecx
6500ba11:	pop    edi
6500ba12:	pop    esi
6500ba13:	pop    ebp
6500ba14:	pop    ebx
6500ba15:	add    esp,0x5c
6500ba18:	ret    
6500ba19:	int3   
6500ba1a:	int3   
6500ba1b:	int3   
6500ba1c:	int3   
6500ba1d:	int3   
6500ba1e:	int3   
6500ba1f:	int3   
6500ba20:	push   ebp
6500ba21:	mov    ebp,esp
6500ba23:	and    esp,0xfffffff8
6500ba26:	push   0xffffffff
6500ba28:	push   0x65022e18
6500ba2d:	mov    eax,fs:0x0
6500ba33:	push   eax
6500ba34:	sub    esp,0x14
6500ba37:	push   esi
6500ba38:	push   edi
6500ba39:	mov    eax,ds:0x6502c09c
6500ba3e:	xor    eax,esp
6500ba40:	push   eax
6500ba41:	lea    eax,[esp+0x20]
6500ba45:	mov    fs:0x0,eax
6500ba4b:	mov    DWORD PTR [esp+0x18],0x0
6500ba53:	call   DWORD PTR ds:0x6502c06c
6500ba59:	push   0x65028380
6500ba5e:	push   0xc
6500ba60:	push   0x650283ac
6500ba65:	call   0x65006d70
6500ba6a:	add    esp,0xc
6500ba6d:	lea    ecx,[esp+0x14]
6500ba71:	push   ecx
6500ba72:	mov    edi,eax
6500ba74:	call   0x6500ac70
6500ba79:	push   0x650283c8
6500ba7e:	push   0x15
6500ba80:	push   0x650283ec
6500ba85:	mov    DWORD PTR [esp+0x34],0x0
6500ba8d:	call   0x65006d70
6500ba92:	add    esp,0xc
6500ba95:	lea    edx,[esp+0x10]
6500ba99:	push   edx
6500ba9a:	mov    edi,eax
6500ba9c:	call   0x6500ac70
6500baa1:	lea    eax,[esp+0x14]
6500baa5:	push   eax
6500baa6:	lea    ecx,[esp+0x14]
6500baaa:	push   ecx
6500baab:	lea    edx,[esp+0x20]
6500baaf:	push   edx
6500bab0:	mov    BYTE PTR [esp+0x34],0x1
6500bab5:	call   0x6500b6c0
6500baba:	add    esp,0xc
6500babd:	mov    esi,DWORD PTR [esp+0x10]
6500bac1:	test   esi,esi
6500bac3:	je     0x6500baf9
6500bac5:	lea    eax,[esi+0x8]
6500bac8:	push   eax
6500bac9:	call   DWORD PTR ds:0x65024098
6500bacf:	test   eax,eax
6500bad1:	jne    0x6500baf9
6500bad3:	mov    eax,DWORD PTR [esi]
6500bad5:	test   eax,eax
6500bad7:	je     0x6500bae0
6500bad9:	push   eax
6500bada:	call   DWORD PTR ds:0x650241a0
6500bae0:	mov    eax,DWORD PTR [esi+0x4]
6500bae3:	test   eax,eax
6500bae5:	je     0x6500baf0
6500bae7:	push   eax
6500bae8:	call   0x65012e3a
6500baed:	add    esp,0x4
6500baf0:	push   esi
6500baf1:	call   0x65011f62
6500baf6:	add    esp,0x4
6500baf9:	mov    BYTE PTR [esp+0x28],0x4
6500bafe:	mov    esi,DWORD PTR [esp+0x14]
6500bb02:	test   esi,esi
6500bb04:	je     0x6500bb3a
6500bb06:	lea    ecx,[esi+0x8]
6500bb09:	push   ecx
6500bb0a:	call   DWORD PTR ds:0x65024098
6500bb10:	test   eax,eax
6500bb12:	jne    0x6500bb3a
6500bb14:	mov    eax,DWORD PTR [esi]
6500bb16:	test   eax,eax
6500bb18:	je     0x6500bb21
6500bb1a:	push   eax
6500bb1b:	call   DWORD PTR ds:0x650241a0
6500bb21:	mov    eax,DWORD PTR [esi+0x4]
6500bb24:	test   eax,eax
6500bb26:	je     0x6500bb31
6500bb28:	push   eax
6500bb29:	call   0x65012e3a
6500bb2e:	add    esp,0x4
6500bb31:	push   esi
6500bb32:	call   0x65011f62
6500bb37:	add    esp,0x4
6500bb3a:	mov    esi,DWORD PTR [esp+0x18]
6500bb3e:	test   esi,esi
6500bb40:	je     0x6500bb46
6500bb42:	mov    eax,DWORD PTR [esi]
6500bb44:	jmp    0x6500bb48
6500bb46:	xor    eax,eax
6500bb48:	mov    edi,DWORD PTR [ebp+0x8]
6500bb4b:	push   eax
6500bb4c:	mov    ecx,edi
6500bb4e:	call   0x650025b0
6500bb53:	test   esi,esi
6500bb55:	je     0x6500bb8b
6500bb57:	lea    edx,[esi+0x8]
6500bb5a:	push   edx
6500bb5b:	call   DWORD PTR ds:0x65024098
6500bb61:	test   eax,eax
6500bb63:	jne    0x6500bb8b
6500bb65:	mov    eax,DWORD PTR [esi]
6500bb67:	test   eax,eax
6500bb69:	je     0x6500bb72
6500bb6b:	push   eax
6500bb6c:	call   DWORD PTR ds:0x650241a0
6500bb72:	mov    eax,DWORD PTR [esi+0x4]
6500bb75:	test   eax,eax
6500bb77:	je     0x6500bb82
6500bb79:	push   eax
6500bb7a:	call   0x65012e3a
6500bb7f:	add    esp,0x4
6500bb82:	push   esi
6500bb83:	call   0x65011f62
6500bb88:	add    esp,0x4
6500bb8b:	mov    eax,edi
6500bb8d:	mov    ecx,DWORD PTR [esp+0x20]
6500bb91:	mov    DWORD PTR fs:0x0,ecx
6500bb98:	pop    ecx
6500bb99:	pop    edi
6500bb9a:	pop    esi
6500bb9b:	mov    esp,ebp
6500bb9d:	pop    ebp
6500bb9e:	ret    
6500bb9f:	int3   
6500bba0:	mov    ecx,DWORD PTR [eax]
6500bba2:	push   ecx
6500bba3:	call   0x65011f62
6500bba8:	pop    ecx
6500bba9:	ret    
6500bbaa:	int3   
6500bbab:	int3   
6500bbac:	int3   
6500bbad:	int3   
6500bbae:	int3   
6500bbaf:	int3   
6500bbb0:	push   ebp
6500bbb1:	mov    ebp,esp
6500bbb3:	and    esp,0xfffffff8
6500bbb6:	sub    esp,0x8
6500bbb9:	push   ebx
6500bbba:	mov    ebx,DWORD PTR [esi+0x4]
6500bbbd:	test   ebx,ebx
6500bbbf:	push   edi
6500bbc0:	jne    0x6500bbc6
6500bbc2:	xor    edi,edi
6500bbc4:	jmp    0x6500bbde
6500bbc6:	mov    ecx,DWORD PTR [esi+0x8]
6500bbc9:	sub    ecx,ebx
6500bbcb:	mov    eax,0x92492493
6500bbd0:	imul   ecx
6500bbd2:	add    edx,ecx
6500bbd4:	sar    edx,0x4
6500bbd7:	mov    edi,edx
6500bbd9:	shr    edi,0x1f
6500bbdc:	add    edi,edx
6500bbde:	test   ebx,ebx
6500bbe0:	je     0x6500bc31
6500bbe2:	mov    ecx,DWORD PTR [esi+0xc]
6500bbe5:	sub    ecx,ebx
6500bbe7:	mov    eax,0x92492493
6500bbec:	imul   ecx
6500bbee:	add    edx,ecx
6500bbf0:	sar    edx,0x4
6500bbf3:	mov    eax,edx
6500bbf5:	shr    eax,0x1f
6500bbf8:	add    eax,edx
6500bbfa:	cmp    edi,eax
6500bbfc:	jae    0x6500bc31
6500bbfe:	mov    edx,DWORD PTR [ebp+0x8]
6500bc01:	mov    edi,DWORD PTR [esi+0x8]
6500bc04:	mov    BYTE PTR [esp+0x8],0x0
6500bc09:	mov    eax,DWORD PTR [esp+0x8]
6500bc0d:	mov    ecx,DWORD PTR [esp+0x8]
6500bc11:	push   eax
6500bc12:	push   ecx
6500bc13:	push   esi
6500bc14:	push   edx
6500bc15:	push   edi
6500bc16:	mov    ecx,0x1
6500bc1b:	call   0x6500c250
6500bc20:	add    esp,0x14
6500bc23:	add    edi,0x1c
6500bc26:	mov    DWORD PTR [esi+0x8],edi
6500bc29:	pop    edi
6500bc2a:	pop    ebx
6500bc2b:	mov    esp,ebp
6500bc2d:	pop    ebp
6500bc2e:	ret    0x4
6500bc31:	mov    edi,DWORD PTR [esi+0x8]
6500bc34:	cmp    ebx,edi
6500bc36:	jbe    0x6500bc3d
6500bc38:	call   0x650122d3
6500bc3d:	mov    eax,DWORD PTR [ebp+0x8]
6500bc40:	push   edi
6500bc41:	push   esi
6500bc42:	push   eax
6500bc43:	lea    ecx,[esp+0x14]
6500bc47:	push   ecx
6500bc48:	mov    eax,esi
6500bc4a:	call   0x6500bc90
6500bc4f:	pop    edi
6500bc50:	pop    ebx
6500bc51:	mov    esp,ebp
6500bc53:	pop    ebp
6500bc54:	ret    0x4
6500bc57:	int3   
6500bc58:	int3   
6500bc59:	int3   
6500bc5a:	int3   
6500bc5b:	int3   
6500bc5c:	int3   
6500bc5d:	int3   
6500bc5e:	int3   
6500bc5f:	int3   
6500bc60:	mov    eax,DWORD PTR [ecx+0x4]
6500bc63:	test   eax,eax
6500bc65:	jne    0x6500bc68
6500bc67:	ret    
6500bc68:	mov    ecx,DWORD PTR [ecx+0x8]
6500bc6b:	sub    ecx,eax
6500bc6d:	mov    eax,0x92492493
6500bc72:	imul   ecx
6500bc74:	add    edx,ecx
6500bc76:	sar    edx,0x4
6500bc79:	mov    eax,edx
6500bc7b:	shr    eax,0x1f
6500bc7e:	add    eax,edx
6500bc80:	ret    
6500bc81:	int3   
6500bc82:	int3   
6500bc83:	int3   
6500bc84:	int3   
6500bc85:	int3   
6500bc86:	int3   
6500bc87:	int3   
6500bc88:	int3   
6500bc89:	int3   
6500bc8a:	int3   
6500bc8b:	int3   
6500bc8c:	int3   
6500bc8d:	int3   
6500bc8e:	int3   
6500bc8f:	int3   
6500bc90:	push   ecx
6500bc91:	push   ebx
6500bc92:	push   ebp
6500bc93:	mov    ebp,DWORD PTR [esp+0x1c]
6500bc97:	push   esi
6500bc98:	mov    esi,eax
6500bc9a:	push   edi
6500bc9b:	mov    edi,DWORD PTR [esi+0x4]
6500bc9e:	test   edi,edi
6500bca0:	je     0x6500bcbe
6500bca2:	mov    ebx,DWORD PTR [esi+0x8]
6500bca5:	mov    ecx,ebx
6500bca7:	sub    ecx,edi
6500bca9:	mov    eax,0x92492493
6500bcae:	imul   ecx
6500bcb0:	add    edx,ecx
6500bcb2:	sar    edx,0x4
6500bcb5:	mov    eax,edx
6500bcb7:	shr    eax,0x1f
6500bcba:	add    eax,edx
6500bcbc:	jne    0x6500bcc6
6500bcbe:	mov    ebx,DWORD PTR [esp+0x20]
6500bcc2:	xor    edi,edi
6500bcc4:	jmp    0x6500bcf7
6500bcc6:	cmp    edi,ebx
6500bcc8:	jbe    0x6500bccf
6500bcca:	call   0x650122d3
6500bccf:	mov    ebx,DWORD PTR [esp+0x20]
6500bcd3:	test   ebx,ebx
6500bcd5:	je     0x6500bcdb
6500bcd7:	cmp    ebx,esi
6500bcd9:	je     0x6500bce0
6500bcdb:	call   0x650122d3
6500bce0:	mov    ecx,ebp
6500bce2:	sub    ecx,edi
6500bce4:	mov    eax,0x92492493
6500bce9:	imul   ecx
6500bceb:	add    edx,ecx
6500bced:	sar    edx,0x4
6500bcf0:	mov    edi,edx
6500bcf2:	shr    edi,0x1f
6500bcf5:	add    edi,edx
6500bcf7:	mov    ecx,DWORD PTR [esp+0x1c]
6500bcfb:	push   ebp
6500bcfc:	push   ebx
6500bcfd:	push   ecx
6500bcfe:	mov    ecx,esi
6500bd00:	call   0x6500bd80
6500bd05:	mov    ebx,DWORD PTR [esi+0x4]
6500bd08:	cmp    ebx,DWORD PTR [esi+0x8]
6500bd0b:	jbe    0x6500bd12
6500bd0d:	call   0x650122d3
6500bd12:	lea    edx,[edi*8+0x0]
6500bd19:	sub    edx,edi
6500bd1b:	lea    edi,[ebx+edx*4]
6500bd1e:	cmp    edi,DWORD PTR [esi+0x8]
6500bd21:	mov    DWORD PTR [esp+0x24],ebx
6500bd25:	ja     0x6500bd2c
6500bd27:	cmp    edi,DWORD PTR [esi+0x4]
6500bd2a:	jae    0x6500bd31
6500bd2c:	call   0x650122d3
6500bd31:	mov    eax,DWORD PTR [esp+0x18]
6500bd35:	mov    DWORD PTR [eax+0x4],edi
6500bd38:	pop    edi
6500bd39:	mov    DWORD PTR [eax],esi
6500bd3b:	pop    esi
6500bd3c:	pop    ebp
6500bd3d:	pop    ebx
6500bd3e:	pop    ecx
6500bd3f:	ret    0x10
6500bd42:	int3   
6500bd43:	int3   
6500bd44:	int3   
6500bd45:	int3   
6500bd46:	int3   
6500bd47:	int3   
6500bd48:	int3   
6500bd49:	int3   
6500bd4a:	int3   
6500bd4b:	int3   
6500bd4c:	int3   
6500bd4d:	int3   
6500bd4e:	int3   
6500bd4f:	int3   
6500bd50:	push   ecx
6500bd51:	mov    ecx,DWORD PTR [esp+0x8]
6500bd55:	mov    BYTE PTR [esp],0x0
6500bd59:	mov    eax,DWORD PTR [esp]
6500bd5c:	push   eax
6500bd5d:	mov    eax,DWORD PTR [esp+0xc]
6500bd61:	push   ecx
6500bd62:	push   edx
6500bd63:	push   eax
6500bd64:	push   edi
6500bd65:	mov    ecx,esi
6500bd67:	call   0x6500c250
6500bd6c:	lea    ecx,[esi*8+0x0]
6500bd73:	sub    ecx,esi
6500bd75:	lea    eax,[edi+ecx*4]
6500bd78:	add    esp,0x18
6500bd7b:	ret    0x4
6500bd7e:	int3   
6500bd7f:	int3   
6500bd80:	push   ebp
6500bd81:	mov    ebp,esp
6500bd83:	push   0xffffffff
6500bd85:	push   0x65022768
6500bd8a:	mov    eax,fs:0x0
6500bd90:	push   eax
6500bd91:	sub    esp,0x34
6500bd94:	mov    eax,ds:0x6502c09c
6500bd99:	xor    eax,ebp
6500bd9b:	mov    DWORD PTR [ebp-0x14],eax
6500bd9e:	push   ebx
6500bd9f:	push   esi
6500bda0:	push   edi
6500bda1:	push   eax
6500bda2:	lea    eax,[ebp-0xc]
6500bda5:	mov    fs:0x0,eax
6500bdab:	mov    DWORD PTR [ebp-0x10],esp
6500bdae:	mov    eax,DWORD PTR [ebp+0x8]
6500bdb1:	push   0xffffffff
6500bdb3:	xor    edi,edi
6500bdb5:	mov    ebx,ecx
6500bdb7:	push   edi
6500bdb8:	push   eax
6500bdb9:	lea    ecx,[ebp-0x30]
6500bdbc:	mov    DWORD PTR [ebp-0x3c],ebx
6500bdbf:	mov    DWORD PTR [ebp-0x18],0xf
6500bdc6:	mov    DWORD PTR [ebp-0x1c],edi
6500bdc9:	mov    BYTE PTR [ebp-0x2c],0x0
6500bdcd:	call   0x650017e0
6500bdd2:	mov    DWORD PTR [ebp-0x4],edi
6500bdd5:	mov    ecx,DWORD PTR [ebx+0x4]
6500bdd8:	cmp    ecx,edi
6500bdda:	je     0x6500bdf4
6500bddc:	mov    esi,DWORD PTR [ebx+0xc]
6500bddf:	sub    esi,ecx
6500bde1:	mov    eax,0x92492493
6500bde6:	imul   esi
6500bde8:	add    edx,esi
6500bdea:	sar    edx,0x4
6500bded:	mov    edi,edx
6500bdef:	shr    edi,0x1f
6500bdf2:	add    edi,edx
6500bdf4:	test   ecx,ecx
6500bdf6:	jne    0x6500bdfc
6500bdf8:	xor    eax,eax
6500bdfa:	jmp    0x6500be14
6500bdfc:	mov    esi,DWORD PTR [ebx+0x8]
6500bdff:	sub    esi,ecx
6500be01:	mov    eax,0x92492493
6500be06:	imul   esi
6500be08:	add    edx,esi
6500be0a:	sar    edx,0x4
6500be0d:	mov    eax,edx
6500be0f:	shr    eax,0x1f
6500be12:	add    eax,edx
6500be14:	mov    edx,0x9249249
6500be19:	sub    edx,eax
6500be1b:	cmp    edx,0x1
6500be1e:	jae    0x6500be25
6500be20:	call   0x6500c0c0
6500be25:	test   ecx,ecx
6500be27:	jne    0x6500be2d
6500be29:	xor    eax,eax
6500be2b:	jmp    0x6500be45
6500be2d:	mov    esi,DWORD PTR [ebx+0x8]
6500be30:	sub    esi,ecx
6500be32:	mov    eax,0x92492493
6500be37:	imul   esi
6500be39:	add    edx,esi
6500be3b:	sar    edx,0x4
6500be3e:	mov    eax,edx
6500be40:	shr    eax,0x1f
6500be43:	add    eax,edx
6500be45:	add    eax,0x1
6500be48:	cmp    edi,eax
6500be4a:	jae    0x6500bfa6
6500be50:	mov    eax,edi
6500be52:	shr    eax,1
6500be54:	mov    edx,0x9249249
6500be59:	sub    edx,eax
6500be5b:	cmp    edx,edi
6500be5d:	jae    0x6500be63
6500be5f:	xor    edi,edi
6500be61:	jmp    0x6500be65
6500be63:	add    edi,eax
6500be65:	test   ecx,ecx
6500be67:	jne    0x6500be6d
6500be69:	xor    eax,eax
6500be6b:	jmp    0x6500be85
6500be6d:	mov    esi,DWORD PTR [ebx+0x8]
6500be70:	sub    esi,ecx
6500be72:	mov    eax,0x92492493
6500be77:	imul   esi
6500be79:	add    edx,esi
6500be7b:	sar    edx,0x4
6500be7e:	mov    eax,edx
6500be80:	shr    eax,0x1f
6500be83:	add    eax,edx
6500be85:	add    eax,0x1
6500be88:	cmp    edi,eax
6500be8a:	jae    0x6500be98
6500be8c:	mov    ecx,ebx
6500be8e:	call   0x6500bc60
6500be93:	mov    edi,eax
6500be95:	add    edi,0x1
6500be98:	push   0x0
6500be9a:	push   edi
6500be9b:	call   0x6500c1e0
6500bea0:	mov    BYTE PTR [ebp-0x4],0x1
6500bea4:	mov    ecx,DWORD PTR [ebx+0x4]
6500bea7:	mov    BYTE PTR [ebp-0x34],0x0
6500beab:	mov    edx,DWORD PTR [ebp-0x34]
6500beae:	push   edx
6500beaf:	mov    edx,DWORD PTR [ebp-0x34]
6500beb2:	push   edx
6500beb3:	mov    edx,DWORD PTR [ebp+0x10]
6500beb6:	push   ebx
6500beb7:	push   edx
6500beb8:	mov    edx,eax
6500beba:	mov    DWORD PTR [ebp-0x40],eax
6500bebd:	mov    DWORD PTR [ebp-0x38],eax
6500bec0:	call   0x6500c370
6500bec5:	add    esp,0x18
6500bec8:	mov    esi,eax
6500beca:	mov    BYTE PTR [ebp-0x34],0x0
6500bece:	mov    eax,DWORD PTR [ebp-0x34]
6500bed1:	mov    ecx,DWORD PTR [ebp-0x34]
6500bed4:	push   eax
6500bed5:	push   ecx
6500bed6:	push   ebx
6500bed7:	lea    edx,[ebp-0x30]
6500beda:	push   edx
6500bedb:	push   esi
6500bedc:	mov    ecx,0x1
6500bee1:	mov    DWORD PTR [ebp-0x38],esi
6500bee4:	call   0x6500c250
6500bee9:	mov    eax,DWORD PTR [ebx+0x8]
6500beec:	add    esp,0x14
6500beef:	mov    BYTE PTR [ebp-0x34],0x0
6500bef3:	mov    ecx,DWORD PTR [ebp-0x34]
6500bef6:	mov    edx,DWORD PTR [ebp-0x34]
6500bef9:	push   ecx
6500befa:	mov    ecx,DWORD PTR [ebp+0x10]
6500befd:	push   edx
6500befe:	add    esi,0x1c
6500bf01:	push   ebx
6500bf02:	push   eax
6500bf03:	mov    edx,esi
6500bf05:	mov    DWORD PTR [ebp-0x38],esi
6500bf08:	call   0x6500c370
6500bf0d:	mov    esi,DWORD PTR [ebx+0x4]
6500bf10:	add    esp,0x10
6500bf13:	test   esi,esi
6500bf15:	jne    0x6500bf1b
6500bf17:	xor    eax,eax
6500bf19:	jmp    0x6500bf33
6500bf1b:	mov    ecx,DWORD PTR [ebx+0x8]
6500bf1e:	sub    ecx,esi
6500bf20:	mov    eax,0x92492493
6500bf25:	imul   ecx
6500bf27:	add    edx,ecx
6500bf29:	sar    edx,0x4
6500bf2c:	mov    eax,edx
6500bf2e:	shr    eax,0x1f
6500bf31:	add    eax,edx
6500bf33:	add    eax,0x1
6500bf36:	test   esi,esi
6500bf38:	mov    DWORD PTR [ebp-0x34],eax
6500bf3b:	je     0x6500bf5b
6500bf3d:	mov    eax,DWORD PTR [ebp-0x34]
6500bf40:	mov    ecx,DWORD PTR [ebx+0x8]
6500bf43:	push   eax
6500bf44:	push   ebx
6500bf45:	push   ecx
6500bf46:	push   esi
6500bf47:	call   0x6500c300
6500bf4c:	mov    edx,DWORD PTR [ebx+0x4]
6500bf4f:	push   edx
6500bf50:	call   0x65011f62
6500bf55:	mov    eax,DWORD PTR [ebp-0x34]
6500bf58:	add    esp,0x14
6500bf5b:	mov    ecx,DWORD PTR [ebp-0x40]
6500bf5e:	lea    edx,[edi*8+0x0]
6500bf65:	sub    edx,edi
6500bf67:	lea    edx,[ecx+edx*4]
6500bf6a:	mov    DWORD PTR [ebx+0xc],edx
6500bf6d:	lea    edx,[eax*8+0x0]
6500bf74:	sub    edx,eax
6500bf76:	lea    eax,[ecx+edx*4]
6500bf79:	mov    DWORD PTR [ebx+0x8],eax
6500bf7c:	mov    DWORD PTR [ebx+0x4],ecx
6500bf7f:	jmp    0x6500c062
6500bf84:	mov    ecx,DWORD PTR [ebp-0x38]
6500bf87:	mov    esi,DWORD PTR [ebp-0x40]
6500bf8a:	push   ecx
6500bf8b:	mov    ecx,DWORD PTR [ebp-0x3c]
6500bf8e:	push   esi
6500bf8f:	call   0x6500c0a0
6500bf94:	push   esi
6500bf95:	call   0x65011f62
6500bf9a:	add    esp,0x4
6500bf9d:	push   0x0
6500bf9f:	push   0x0
6500bfa1:	call   0x65012366
6500bfa6:	mov    edi,DWORD PTR [ebx+0x8]
6500bfa9:	mov    esi,DWORD PTR [ebp+0x10]
6500bfac:	mov    ecx,edi
6500bfae:	sub    ecx,esi
6500bfb0:	mov    eax,0x92492493
6500bfb5:	imul   ecx
6500bfb7:	add    edx,ecx
6500bfb9:	sar    edx,0x4
6500bfbc:	mov    eax,edx
6500bfbe:	shr    eax,0x1f
6500bfc1:	add    eax,edx
6500bfc3:	cmp    eax,0x1
6500bfc6:	mov    edx,ebx
6500bfc8:	jae    0x6500c03a
6500bfca:	lea    ecx,[esi+0x1c]
6500bfcd:	push   ecx
6500bfce:	push   edi
6500bfcf:	push   esi
6500bfd0:	call   0x6500c140
6500bfd5:	mov    BYTE PTR [ebp-0x4],0x3
6500bfd9:	mov    edi,DWORD PTR [ebx+0x8]
6500bfdc:	lea    edx,[ebp-0x30]
6500bfdf:	push   edx
6500bfe0:	mov    ecx,edi
6500bfe2:	sub    ecx,esi
6500bfe4:	mov    eax,0x92492493
6500bfe9:	imul   ecx
6500bfeb:	add    edx,ecx
6500bfed:	sar    edx,0x4
6500bff0:	mov    eax,edx
6500bff2:	shr    eax,0x1f
6500bff5:	add    eax,edx
6500bff7:	mov    esi,0x1
6500bffc:	sub    esi,eax
6500bffe:	mov    edx,ebx
6500c000:	call   0x6500bd50
6500c005:	mov    eax,DWORD PTR [ebp+0x10]
6500c008:	mov    DWORD PTR [ebp-0x4],0x0
6500c00f:	add    DWORD PTR [ebx+0x8],0x1c
6500c013:	mov    ebx,DWORD PTR [ebx+0x8]
6500c016:	lea    edi,[ebx-0x1c]
6500c019:	jmp    0x6500c05a
6500c01b:	mov    ecx,DWORD PTR [ebp-0x3c]
6500c01e:	mov    edx,DWORD PTR [ecx+0x8]
6500c021:	mov    eax,DWORD PTR [ebp+0x10]
6500c024:	add    edx,0x1c
6500c027:	push   edx
6500c028:	add    eax,0x1c
6500c02b:	push   eax
6500c02c:	call   0x6500c0a0
6500c031:	push   0x0
6500c033:	push   0x0
6500c035:	call   0x65012366
6500c03a:	push   edi
6500c03b:	lea    eax,[edi-0x1c]
6500c03e:	push   edi
6500c03f:	push   eax
6500c040:	mov    DWORD PTR [ebp-0x34],eax
6500c043:	call   0x6500c140
6500c048:	mov    DWORD PTR [ebx+0x8],eax
6500c04b:	mov    eax,DWORD PTR [ebp-0x34]
6500c04e:	mov    ebx,esi
6500c050:	call   0x6500c190
6500c055:	lea    edi,[esi+0x1c]
6500c058:	mov    eax,esi
6500c05a:	lea    ebx,[ebp-0x30]
6500c05d:	call   0x6500c170
6500c062:	cmp    DWORD PTR [ebp-0x18],0x10
6500c066:	jb     0x6500c074
6500c068:	mov    ecx,DWORD PTR [ebp-0x2c]
6500c06b:	push   ecx
6500c06c:	call   0x65011f62
6500c071:	add    esp,0x4
6500c074:	mov    ecx,DWORD PTR [ebp-0xc]
6500c077:	mov    DWORD PTR fs:0x0,ecx
6500c07e:	pop    ecx
6500c07f:	pop    edi
6500c080:	pop    esi
6500c081:	pop    ebx
6500c082:	mov    ecx,DWORD PTR [ebp-0x14]
6500c085:	xor    ecx,ebp
6500c087:	call   0x650127bc
6500c08c:	mov    esp,ebp
6500c08e:	pop    ebp
6500c08f:	ret    0xc
6500c092:	int3   
6500c093:	int3   
6500c094:	int3   
6500c095:	int3   
6500c096:	int3   
6500c097:	int3   
6500c098:	int3   
6500c099:	int3   
6500c09a:	int3   
6500c09b:	int3   
6500c09c:	int3   
6500c09d:	int3   
6500c09e:	int3   
6500c09f:	int3   
6500c0a0:	mov    eax,DWORD PTR [esp+0x8]
6500c0a4:	mov    edx,DWORD PTR [esp+0x4]
6500c0a8:	push   eax
6500c0a9:	push   ecx
6500c0aa:	mov    ecx,DWORD PTR [esp+0x10]
6500c0ae:	push   ecx
6500c0af:	push   edx
6500c0b0:	call   0x6500c300
6500c0b5:	add    esp,0x10
6500c0b8:	ret    0x8
6500c0bb:	int3   
6500c0bc:	int3   
6500c0bd:	int3   
6500c0be:	int3   
6500c0bf:	int3   
6500c0c0:	push   ebp
6500c0c1:	mov    ebp,esp
6500c0c3:	and    esp,0xfffffff8
6500c0c6:	push   0xffffffff
6500c0c8:	push   0x65022738
6500c0cd:	mov    eax,fs:0x0
6500c0d3:	push   eax
6500c0d4:	sub    esp,0x4c
6500c0d7:	mov    eax,ds:0x6502c09c
6500c0dc:	xor    eax,esp
6500c0de:	push   eax
6500c0df:	lea    eax,[esp+0x50]
6500c0e3:	mov    fs:0x0,eax
6500c0e9:	push   0x12
6500c0eb:	push   0x65028418
6500c0f0:	lea    ecx,[esp+0x10]
6500c0f4:	mov    DWORD PTR [esp+0x28],0xf
6500c0fc:	mov    DWORD PTR [esp+0x24],0x0
6500c104:	mov    BYTE PTR [esp+0x14],0x0
6500c109:	call   0x650018c0
6500c10e:	lea    eax,[esp+0x8]
6500c112:	push   eax
6500c113:	lea    ecx,[esp+0x28]
6500c117:	mov    DWORD PTR [esp+0x5c],0x0
6500c11f:	call   0x65002d20
6500c124:	push   0x65029f18
6500c129:	lea    ecx,[esp+0x28]
6500c12d:	push   ecx
6500c12e:	mov    DWORD PTR [esp+0x2c],0x65024c10
6500c136:	call   0x65012366
6500c13b:	int3   
6500c13c:	int3   
6500c13d:	int3   
6500c13e:	int3   
6500c13f:	int3   
6500c140:	push   ecx
6500c141:	mov    ecx,DWORD PTR [esp+0xc]
6500c145:	mov    BYTE PTR [esp],0x0
6500c149:	mov    eax,DWORD PTR [esp]
6500c14c:	push   eax
6500c14d:	mov    eax,DWORD PTR [esp+0x10]
6500c151:	push   ecx
6500c152:	mov    ecx,DWORD PTR [esp+0x10]
6500c156:	push   edx
6500c157:	mov    edx,DWORD PTR [esp+0x1c]
6500c15b:	push   eax
6500c15c:	call   0x6500c370
6500c161:	add    esp,0x14
6500c164:	ret    0xc
6500c167:	int3   
6500c168:	int3   
6500c169:	int3   
6500c16a:	int3   
6500c16b:	int3   
6500c16c:	int3   
6500c16d:	int3   
6500c16e:	int3   
6500c16f:	int3   
6500c170:	push   esi
6500c171:	mov    esi,eax
6500c173:	cmp    esi,edi
6500c175:	je     0x6500c18a
6500c177:	push   0xffffffff
6500c179:	push   0x0
6500c17b:	push   ebx
6500c17c:	mov    ecx,esi
6500c17e:	call   0x650017e0
6500c183:	add    esi,0x1c
6500c186:	cmp    esi,edi
6500c188:	jne    0x6500c177
6500c18a:	pop    esi
6500c18b:	ret    
6500c18c:	int3   
6500c18d:	int3   
6500c18e:	int3   
6500c18f:	int3   
6500c190:	push   ecx
6500c191:	push   esi
6500c192:	mov    esi,eax
6500c194:	mov    BYTE PTR [esp+0x4],0x0
6500c199:	mov    eax,DWORD PTR [esp+0x4]
6500c19d:	mov    ecx,DWORD PTR [esp+0x4]
6500c1a1:	mov    edx,DWORD PTR [esp+0x4]
6500c1a5:	push   eax
6500c1a6:	push   ecx
6500c1a7:	push   edx
6500c1a8:	push   edi
6500c1a9:	push   ebx
6500c1aa:	mov    ecx,esi
6500c1ac:	call   0x6500c4b0
6500c1b1:	sub    esi,ebx
6500c1b3:	mov    eax,0x92492493
6500c1b8:	imul   esi
6500c1ba:	add    edx,esi
6500c1bc:	sar    edx,0x4
6500c1bf:	mov    eax,edx
6500c1c1:	shr    eax,0x1f
6500c1c4:	add    eax,edx
6500c1c6:	lea    ecx,[eax*8+0x0]
6500c1cd:	sub    ecx,eax
6500c1cf:	add    ecx,ecx
6500c1d1:	add    esp,0x14
6500c1d4:	add    ecx,ecx
6500c1d6:	mov    eax,edi
6500c1d8:	sub    eax,ecx
6500c1da:	pop    esi
6500c1db:	pop    ecx
6500c1dc:	ret    
6500c1dd:	int3   
6500c1de:	int3   
6500c1df:	int3   
6500c1e0:	mov    ecx,DWORD PTR [esp+0x4]
6500c1e4:	sub    esp,0xc
6500c1e7:	test   ecx,ecx
6500c1e9:	ja     0x6500c207
6500c1eb:	xor    ecx,ecx
6500c1ed:	lea    edx,[ecx*8+0x0]
6500c1f4:	sub    edx,ecx
6500c1f6:	add    edx,edx
6500c1f8:	add    edx,edx
6500c1fa:	push   edx
6500c1fb:	call   0x650122fc
6500c200:	add    esp,0x4
6500c203:	add    esp,0xc
6500c206:	ret    
6500c207:	or     eax,0xffffffff
6500c20a:	xor    edx,edx
6500c20c:	div    ecx
6500c20e:	cmp    eax,0x1c
6500c211:	jae    0x6500c1ed
6500c213:	lea    eax,[esp+0x10]
6500c217:	push   eax
6500c218:	lea    ecx,[esp+0x4]
6500c21c:	mov    DWORD PTR [esp+0x14],0x0
6500c224:	call   0x65011f78
6500c229:	push   0x65029e4c
6500c22e:	lea    ecx,[esp+0x4]
6500c232:	push   ecx
6500c233:	mov    DWORD PTR [esp+0x8],0x65024bf8
6500c23b:	call   0x65012366
6500c240:	int3   
6500c241:	int3   
6500c242:	int3   
6500c243:	int3   
6500c244:	int3   
6500c245:	int3   
6500c246:	int3   
6500c247:	int3   
6500c248:	int3   
6500c249:	int3   
6500c24a:	int3   
6500c24b:	int3   
6500c24c:	int3   
6500c24d:	int3   
6500c24e:	int3   
6500c24f:	int3   
6500c250:	push   ebp
6500c251:	mov    ebp,esp
6500c253:	push   0xffffffff
6500c255:	push   0x65022281
6500c25a:	mov    eax,fs:0x0
6500c260:	push   eax
6500c261:	sub    esp,0x10
6500c264:	push   ebx
6500c265:	push   esi
6500c266:	push   edi
6500c267:	mov    eax,ds:0x6502c09c
6500c26c:	xor    eax,ebp
6500c26e:	push   eax
6500c26f:	lea    eax,[ebp-0xc]
6500c272:	mov    fs:0x0,eax
6500c278:	mov    DWORD PTR [ebp-0x10],esp
6500c27b:	mov    edi,ecx
6500c27d:	mov    esi,DWORD PTR [ebp+0x8]
6500c280:	xor    ebx,ebx
6500c282:	mov    DWORD PTR [ebp-0x14],esi
6500c285:	mov    DWORD PTR [ebp-0x4],ebx
6500c288:	cmp    edi,ebx
6500c28a:	jbe    0x6500c2e8
6500c28c:	mov    DWORD PTR [ebp-0x18],esi
6500c28f:	mov    DWORD PTR [ebp-0x1c],esi
6500c292:	cmp    esi,ebx
6500c294:	mov    BYTE PTR [ebp-0x4],0x1
6500c298:	je     0x6500c2b5
6500c29a:	mov    eax,DWORD PTR [ebp+0xc]
6500c29d:	push   0xffffffff
6500c29f:	push   ebx
6500c2a0:	mov    DWORD PTR [esi+0x18],0xf
6500c2a7:	mov    DWORD PTR [esi+0x14],ebx
6500c2aa:	push   eax
6500c2ab:	mov    ecx,esi
6500c2ad:	mov    BYTE PTR [esi+0x4],bl
6500c2b0:	call   0x650017e0
6500c2b5:	sub    edi,0x1
6500c2b8:	add    esi,0x1c
6500c2bb:	mov    BYTE PTR [ebp-0x4],bl
6500c2be:	mov    DWORD PTR [ebp+0x8],esi
6500c2c1:	jmp    0x6500c288
6500c2c3:	mov    esi,DWORD PTR [ebp-0x14]
6500c2c6:	mov    edi,DWORD PTR [ebp+0x8]
6500c2c9:	cmp    esi,edi
6500c2cb:	je     0x6500c2df
6500c2cd:	mov    ebx,DWORD PTR [ebp+0x10]
6500c2d0:	push   esi
6500c2d1:	mov    ecx,ebx
6500c2d3:	call   0x6500c340
6500c2d8:	add    esi,0x1c
6500c2db:	cmp    esi,edi
6500c2dd:	jne    0x6500c2d0
6500c2df:	xor    ebx,ebx
6500c2e1:	push   ebx
6500c2e2:	push   ebx
6500c2e3:	call   0x65012366
6500c2e8:	mov    ecx,DWORD PTR [ebp-0xc]
6500c2eb:	mov    DWORD PTR fs:0x0,ecx
6500c2f2:	pop    ecx
6500c2f3:	pop    edi
6500c2f4:	pop    esi
6500c2f5:	pop    ebx
6500c2f6:	mov    esp,ebp
6500c2f8:	pop    ebp
6500c2f9:	ret    
6500c2fa:	int3   
6500c2fb:	int3   
6500c2fc:	int3   
6500c2fd:	int3   
6500c2fe:	int3   
6500c2ff:	int3   
6500c300:	push   esi
6500c301:	mov    esi,DWORD PTR [esp+0x8]
6500c305:	push   edi
6500c306:	mov    edi,DWORD PTR [esp+0x10]
6500c30a:	cmp    esi,edi
6500c30c:	je     0x6500c338
6500c30e:	push   ebx
6500c30f:	xor    ebx,ebx
6500c311:	cmp    DWORD PTR [esi+0x18],0x10
6500c315:	jb     0x6500c323
6500c317:	mov    eax,DWORD PTR [esi+0x4]
6500c31a:	push   eax
6500c31b:	call   0x65011f62
6500c320:	add    esp,0x4
6500c323:	mov    DWORD PTR [esi+0x18],0xf
6500c32a:	mov    DWORD PTR [esi+0x14],ebx
6500c32d:	mov    BYTE PTR [esi+0x4],bl
6500c330:	add    esi,0x1c
6500c333:	cmp    esi,edi
6500c335:	jne    0x6500c311
6500c337:	pop    ebx
6500c338:	pop    edi
6500c339:	pop    esi
6500c33a:	ret    
6500c33b:	int3   
6500c33c:	int3   
6500c33d:	int3   
6500c33e:	int3   
6500c33f:	int3   
6500c340:	push   esi
6500c341:	mov    esi,DWORD PTR [esp+0x8]
6500c345:	cmp    DWORD PTR [esi+0x18],0x10
6500c349:	jb     0x6500c357
6500c34b:	mov    eax,DWORD PTR [esi+0x4]
6500c34e:	push   eax
6500c34f:	call   0x65011f62
6500c354:	add    esp,0x4
6500c357:	xor    eax,eax
6500c359:	mov    DWORD PTR [esi+0x18],0xf
6500c360:	mov    DWORD PTR [esi+0x14],eax
6500c363:	mov    BYTE PTR [esi+0x4],al
6500c366:	pop    esi
6500c367:	ret    0x4
6500c36a:	int3   
6500c36b:	int3   
6500c36c:	int3   
6500c36d:	int3   
6500c36e:	int3   
6500c36f:	int3   
6500c370:	push   ebp
6500c371:	mov    ebp,esp
6500c373:	push   0xffffffff
6500c375:	push   0x650225e9
6500c37a:	mov    eax,fs:0x0
6500c380:	push   eax
6500c381:	sub    esp,0x44
6500c384:	mov    eax,ds:0x6502c09c
6500c389:	xor    eax,ebp
6500c38b:	mov    DWORD PTR [ebp-0x14],eax
6500c38e:	push   ebx
6500c38f:	push   esi
6500c390:	push   edi
6500c391:	push   eax
6500c392:	lea    eax,[ebp-0xc]
6500c395:	mov    fs:0x0,eax
6500c39b:	mov    DWORD PTR [ebp-0x10],esp
6500c39e:	mov    esi,edx
6500c3a0:	xor    eax,eax
6500c3a2:	mov    edi,ecx
6500c3a4:	mov    DWORD PTR [ebp-0x44],esi
6500c3a7:	mov    DWORD PTR [ebp-0x48],esi
6500c3aa:	mov    DWORD PTR [ebp-0x18],0xf
6500c3b1:	mov    DWORD PTR [ebp-0x1c],eax
6500c3b4:	mov    BYTE PTR [ebp-0x2c],al
6500c3b7:	mov    DWORD PTR [ebp-0x4],eax
6500c3ba:	mov    BYTE PTR [ebp-0x4],0x1
6500c3be:	mov    edi,edi
6500c3c0:	cmp    edi,DWORD PTR [ebp+0x8]
6500c3c3:	je     0x6500c479
6500c3c9:	mov    DWORD PTR [ebp-0x4c],esi
6500c3cc:	mov    DWORD PTR [ebp-0x50],esi
6500c3cf:	cmp    esi,eax
6500c3d1:	mov    BYTE PTR [ebp-0x4],0x2
6500c3d5:	je     0x6500c3f2
6500c3d7:	push   0xffffffff
6500c3d9:	mov    DWORD PTR [esi+0x14],eax
6500c3dc:	mov    DWORD PTR [esi+0x18],0xf
6500c3e3:	push   eax
6500c3e4:	mov    BYTE PTR [esi+0x4],al
6500c3e7:	lea    eax,[ebp-0x30]
6500c3ea:	push   eax
6500c3eb:	mov    ecx,esi
6500c3ed:	call   0x650017e0
6500c3f2:	mov    BYTE PTR [ebp-0x4],0x1
6500c3f6:	mov    ebx,DWORD PTR [esi+0x10]
6500c3f9:	mov    eax,DWORD PTR [esi+0x4]
6500c3fc:	mov    ecx,DWORD PTR [esi+0x8]
6500c3ff:	mov    edx,DWORD PTR [esi+0xc]
6500c402:	mov    DWORD PTR [ebp-0x34],ebx
6500c405:	mov    ebx,DWORD PTR [edi+0x4]
6500c408:	mov    DWORD PTR [esi+0x4],ebx
6500c40b:	mov    ebx,DWORD PTR [edi+0x8]
6500c40e:	mov    DWORD PTR [esi+0x8],ebx
6500c411:	mov    ebx,DWORD PTR [edi+0xc]
6500c414:	mov    DWORD PTR [esi+0xc],ebx
6500c417:	mov    ebx,DWORD PTR [edi+0x10]
6500c41a:	mov    DWORD PTR [esi+0x10],ebx
6500c41d:	mov    DWORD PTR [edi+0x4],eax
6500c420:	mov    DWORD PTR [edi+0x8],ecx
6500c423:	mov    ecx,DWORD PTR [ebp-0x34]
6500c426:	mov    DWORD PTR [edi+0xc],edx
6500c429:	mov    edx,DWORD PTR [edi+0x14]
6500c42c:	mov    DWORD PTR [edi+0x10],ecx
6500c42f:	mov    eax,DWORD PTR [esi+0x14]
6500c432:	mov    DWORD PTR [esi+0x14],edx
6500c435:	mov    ecx,DWORD PTR [edi+0x18]
6500c438:	mov    DWORD PTR [edi+0x14],eax
6500c43b:	mov    eax,DWORD PTR [esi+0x18]
6500c43e:	mov    DWORD PTR [esi+0x18],ecx
6500c441:	mov    DWORD PTR [edi+0x18],eax
6500c444:	add    esi,0x1c
6500c447:	add    edi,0x1c
6500c44a:	mov    DWORD PTR [ebp-0x44],esi
6500c44d:	xor    eax,eax
6500c44f:	jmp    0x6500c3c0
6500c454:	mov    esi,DWORD PTR [ebp-0x48]
6500c457:	mov    edi,DWORD PTR [ebp-0x44]
6500c45a:	cmp    esi,edi
6500c45c:	je     0x6500c470
6500c45e:	mov    ebx,DWORD PTR [ebp+0xc]
6500c461:	push   esi
6500c462:	mov    ecx,ebx
6500c464:	call   0x6500c340
6500c469:	add    esi,0x1c
6500c46c:	cmp    esi,edi
6500c46e:	jne    0x6500c461
6500c470:	push   0x0
6500c472:	push   0x0
6500c474:	call   0x65012366
6500c479:	cmp    DWORD PTR [ebp-0x18],0x10
6500c47d:	jb     0x6500c48b
6500c47f:	mov    edx,DWORD PTR [ebp-0x2c]
6500c482:	push   edx
6500c483:	call   0x65011f62
6500c488:	add    esp,0x4
6500c48b:	mov    eax,esi
6500c48d:	mov    ecx,DWORD PTR [ebp-0xc]
6500c490:	mov    DWORD PTR fs:0x0,ecx
6500c497:	pop    ecx
6500c498:	pop    edi
6500c499:	pop    esi
6500c49a:	pop    ebx
6500c49b:	mov    ecx,DWORD PTR [ebp-0x14]
6500c49e:	xor    ecx,ebp
6500c4a0:	call   0x650127bc
6500c4a5:	mov    esp,ebp
6500c4a7:	pop    ebp
6500c4a8:	ret    
6500c4a9:	int3   
6500c4aa:	int3   
6500c4ab:	int3   
6500c4ac:	int3   
6500c4ad:	int3   
6500c4ae:	int3   
6500c4af:	int3   
6500c4b0:	push   ecx
6500c4b1:	mov    eax,ds:0x6502c09c
6500c4b6:	xor    eax,esp
6500c4b8:	mov    DWORD PTR [esp],eax
6500c4bb:	cmp    DWORD PTR [esp+0x8],ecx
6500c4bf:	mov    eax,DWORD PTR [esp+0xc]
6500c4c3:	je     0x6500c528
6500c4c5:	push   ebx
6500c4c6:	push   ebp
6500c4c7:	push   esi
6500c4c8:	push   edi
6500c4c9:	lea    esp,[esp+0x0]
6500c4d0:	mov    ebp,DWORD PTR [ecx-0x18]
6500c4d3:	mov    edx,DWORD PTR [eax-0x18]
6500c4d6:	mov    esi,DWORD PTR [eax-0x14]
6500c4d9:	mov    edi,DWORD PTR [eax-0x10]
6500c4dc:	mov    ebx,DWORD PTR [eax-0xc]
6500c4df:	sub    ecx,0x1c
6500c4e2:	sub    eax,0x1c
6500c4e5:	cmp    ecx,DWORD PTR [esp+0x18]
6500c4e9:	mov    DWORD PTR [eax+0x4],ebp
6500c4ec:	mov    ebp,DWORD PTR [ecx+0x8]
6500c4ef:	mov    DWORD PTR [eax+0x8],ebp
6500c4f2:	mov    ebp,DWORD PTR [ecx+0xc]
6500c4f5:	mov    DWORD PTR [eax+0xc],ebp
6500c4f8:	mov    ebp,DWORD PTR [ecx+0x10]
6500c4fb:	mov    DWORD PTR [eax+0x10],ebp
6500c4fe:	mov    DWORD PTR [ecx+0x4],edx
6500c501:	mov    DWORD PTR [ecx+0x8],esi
6500c504:	mov    esi,DWORD PTR [ecx+0x14]
6500c507:	mov    DWORD PTR [ecx+0xc],edi
6500c50a:	mov    DWORD PTR [ecx+0x10],ebx
6500c50d:	mov    edx,DWORD PTR [eax+0x14]
6500c510:	mov    DWORD PTR [eax+0x14],esi
6500c513:	mov    esi,DWORD PTR [ecx+0x18]
6500c516:	mov    DWORD PTR [ecx+0x14],edx
6500c519:	mov    edx,DWORD PTR [eax+0x18]
6500c51c:	mov    DWORD PTR [eax+0x18],esi
6500c51f:	mov    DWORD PTR [ecx+0x18],edx
6500c522:	jne    0x6500c4d0
6500c524:	pop    edi
6500c525:	pop    esi
6500c526:	pop    ebp
6500c527:	pop    ebx
6500c528:	mov    ecx,DWORD PTR [esp]
6500c52b:	xor    ecx,esp
6500c52d:	call   0x650127bc
6500c532:	pop    ecx
6500c533:	ret    
6500c534:	int3   
6500c535:	int3   
6500c536:	int3   
6500c537:	int3   
6500c538:	int3   
6500c539:	int3   
6500c53a:	int3   
6500c53b:	int3   
6500c53c:	int3   
6500c53d:	int3   
6500c53e:	int3   
6500c53f:	int3   
6500c540:	sub    esp,0x800
6500c546:	push   ebx
6500c547:	push   ebp
6500c548:	xor    ecx,ecx
6500c54a:	push   esi
6500c54b:	lea    eax,[ecx+0x1]
6500c54e:	push   edi
6500c54f:	nop
6500c550:	mov    edx,eax
6500c552:	and    dl,0x80
6500c555:	neg    dl
6500c557:	lea    esi,[eax+eax*1]
6500c55a:	mov    DWORD PTR [esp+ecx*4+0x410],eax
6500c561:	mov    DWORD PTR [esp+eax*4+0x10],ecx
6500c565:	sbb    edx,edx
6500c567:	and    edx,0x1b
6500c56a:	xor    edx,esi
6500c56c:	xor    edx,eax
6500c56e:	and    edx,0xff
6500c574:	add    ecx,0x1
6500c577:	cmp    ecx,0x100
6500c57d:	mov    eax,edx
6500c57f:	jl     0x6500c550
6500c581:	mov    eax,0x1
6500c586:	mov    ecx,0x6502e968
6500c58b:	jmp    0x6500c590
6500c58d:	lea    ecx,[ecx+0x0]
6500c590:	mov    edx,eax
6500c592:	and    dl,0x80
6500c595:	neg    dl
6500c597:	mov    DWORD PTR [ecx],eax
6500c599:	sbb    edx,edx
6500c59b:	and    edx,0x1b
6500c59e:	add    eax,eax
6500c5a0:	xor    edx,eax
6500c5a2:	and    edx,0xff
6500c5a8:	add    ecx,0x4
6500c5ab:	cmp    ecx,0x6502e990
6500c5b1:	mov    eax,edx
6500c5b3:	jl     0x6500c590
6500c5b5:	mov    BYTE PTR ds:0x6502e068,0x63
6500c5bc:	mov    BYTE PTR ds:0x650301f3,0x0
6500c5c3:	mov    ebx,0x1
6500c5c8:	mov    ecx,DWORD PTR [esp+ebx*4+0x10]
6500c5cc:	add    ecx,ecx
6500c5ce:	add    ecx,ecx
6500c5d0:	lea    edx,[esp+0x80c]
6500c5d7:	sub    edx,ecx
6500c5d9:	mov    eax,DWORD PTR [edx]
6500c5db:	mov    ecx,eax
6500c5dd:	sar    ecx,0x7
6500c5e0:	lea    edx,[eax+eax*1]
6500c5e3:	or     ecx,edx
6500c5e5:	and    ecx,0xff
6500c5eb:	xor    eax,ecx
6500c5ed:	mov    edx,ecx
6500c5ef:	sar    edx,0x7
6500c5f2:	add    ecx,ecx
6500c5f4:	or     edx,ecx
6500c5f6:	and    edx,0xff
6500c5fc:	xor    eax,edx
6500c5fe:	mov    ecx,edx
6500c600:	add    edx,edx
6500c602:	sar    ecx,0x7
6500c605:	or     ecx,edx
6500c607:	and    ecx,0xff
6500c60d:	xor    eax,ecx
6500c60f:	mov    edx,ecx
6500c611:	sar    edx,0x7
6500c614:	add    ecx,ecx
6500c616:	or     edx,ecx
6500c618:	xor    edx,0x63
6500c61b:	and    edx,0xff
6500c621:	xor    eax,edx
6500c623:	mov    BYTE PTR [ebx+0x6502e068],al
6500c629:	mov    BYTE PTR [eax+0x65030190],bl
6500c62f:	add    ebx,0x1
6500c632:	cmp    ebx,0x100
6500c638:	jl     0x6500c5c8
6500c63a:	xor    ecx,ecx
6500c63c:	lea    esp,[esp+0x0]
6500c640:	movzx  edx,BYTE PTR [ecx+0x6502e068]
6500c647:	mov    eax,edx
6500c649:	and    al,0x80
6500c64b:	neg    al
6500c64d:	lea    esi,[edx+edx*1]
6500c650:	sbb    eax,eax
6500c652:	and    eax,0x1b
6500c655:	xor    eax,esi
6500c657:	and    eax,0xff
6500c65c:	mov    esi,eax
6500c65e:	xor    eax,edx
6500c660:	shl    eax,0x8
6500c663:	xor    eax,edx
6500c665:	shl    eax,0x8
6500c668:	xor    eax,edx
6500c66a:	shl    eax,0x8
6500c66d:	xor    eax,esi
6500c66f:	mov    DWORD PTR [ecx*4+0x6502fd90],eax
6500c676:	rol    eax,0x8
6500c679:	mov    DWORD PTR [ecx*4+0x6502f990],eax
6500c680:	rol    eax,0x8
6500c683:	mov    DWORD PTR [ecx*4+0x6502f590],eax
6500c68a:	rol    eax,0x8
6500c68d:	mov    DWORD PTR [ecx*4+0x6502f190],eax
6500c694:	movzx  eax,BYTE PTR [ecx+0x65030190]
6500c69b:	test   eax,eax
6500c69d:	je     0x6500c6f1
6500c69f:	mov    esi,DWORD PTR [esp+eax*4+0x10]
6500c6a3:	mov    edx,DWORD PTR [esp+0x48]
6500c6a7:	lea    eax,[esi+edx*1]
6500c6aa:	cdq    
6500c6ab:	mov    edi,0xff
6500c6b0:	idiv   edi
6500c6b2:	mov    eax,DWORD PTR [esp+0x34]
6500c6b6:	add    eax,esi
6500c6b8:	mov    ebp,DWORD PTR [esp+edx*4+0x410]
6500c6bf:	cdq    
6500c6c0:	idiv   edi
6500c6c2:	mov    ebx,DWORD PTR [esp+edx*4+0x410]
6500c6c9:	mov    edx,DWORD PTR [esp+0x44]
6500c6cd:	lea    eax,[esi+edx*1]
6500c6d0:	cdq    
6500c6d1:	idiv   edi
6500c6d3:	mov    eax,DWORD PTR [esp+0x3c]
6500c6d7:	add    eax,esi
6500c6d9:	mov    esi,0xff
6500c6de:	mov    edi,DWORD PTR [esp+edx*4+0x410]
6500c6e5:	cdq    
6500c6e6:	idiv   esi
6500c6e8:	mov    edx,DWORD PTR [esp+edx*4+0x410]
6500c6ef:	jmp    0x6500c6f9
6500c6f1:	xor    ebp,ebp
6500c6f3:	xor    ebx,ebx
6500c6f5:	xor    edi,edi
6500c6f7:	xor    edx,edx
6500c6f9:	shl    edx,0x8
6500c6fc:	xor    edx,edi
6500c6fe:	shl    edx,0x8
6500c701:	xor    edx,ebx
6500c703:	shl    edx,0x8
6500c706:	xor    edx,ebp
6500c708:	mov    DWORD PTR [ecx*4+0x6502ed90],edx
6500c70f:	rol    edx,0x8
6500c712:	mov    DWORD PTR [ecx*4+0x6502e990],edx
6500c719:	rol    edx,0x8
6500c71c:	mov    DWORD PTR [ecx*4+0x6502e568],edx
6500c723:	rol    edx,0x8
6500c726:	mov    DWORD PTR [ecx*4+0x6502e168],edx
6500c72d:	add    ecx,0x1
6500c730:	cmp    ecx,0x100
6500c736:	jl     0x6500c640
6500c73c:	pop    edi
6500c73d:	pop    esi
6500c73e:	pop    ebp
6500c73f:	pop    ebx
6500c740:	add    esp,0x800
6500c746:	ret    
6500c747:	int3   
6500c748:	int3   
6500c749:	int3   
6500c74a:	int3   
6500c74b:	int3   
6500c74c:	int3   
6500c74d:	int3   
6500c74e:	int3   
6500c74f:	int3   
6500c750:	cmp    DWORD PTR ds:0x65030294,0x0
6500c757:	push   ebx
6500c758:	push   esi
6500c759:	push   edi
6500c75a:	mov    edi,eax
6500c75c:	jne    0x6500c76d
6500c75e:	call   0x6500c540
6500c763:	mov    DWORD PTR ds:0x65030294,0x1
6500c76d:	lea    eax,[edi+0x8]
6500c770:	mov    ecx,0x6502d38a
6500c775:	mov    esi,eax
6500c777:	mov    DWORD PTR [edi],0xa
6500c77d:	mov    DWORD PTR [edi+0x4],eax
6500c780:	sub    esi,ecx
6500c782:	movzx  ebx,BYTE PTR [ecx-0x1]
6500c786:	xor    edx,edx
6500c788:	mov    dh,BYTE PTR [ecx+0x1]
6500c78b:	add    ecx,0x4
6500c78e:	mov    dl,BYTE PTR [ecx-0x4]
6500c791:	shl    edx,0x8
6500c794:	or     edx,ebx
6500c796:	movzx  ebx,BYTE PTR [ecx-0x6]
6500c79a:	shl    edx,0x8
6500c79d:	or     edx,ebx
6500c79f:	cmp    ecx,0x6502d39a
6500c7a5:	mov    DWORD PTR [esi+ecx*1-0x4],edx
6500c7a9:	jl     0x6500c782
6500c7ab:	mov    edi,DWORD PTR [edi]
6500c7ad:	sub    edi,0xa
6500c7b0:	je     0x6500ca6c
6500c7b6:	sub    edi,0x2
6500c7b9:	je     0x6500c89f
6500c7bf:	sub    edi,0x2
6500c7c2:	jne    0x6500cc4f
6500c7c8:	push   ebp
6500c7c9:	mov    ebp,0x6502e968
6500c7ce:	mov    edi,edi
6500c7d0:	mov    edi,DWORD PTR [eax+0x1c]
6500c7d3:	xor    edx,edx
6500c7d5:	mov    ecx,edi
6500c7d7:	and    ecx,0xff
6500c7dd:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500c7e3:	movzx  ecx,BYTE PTR [eax+0x1f]
6500c7e7:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c7ee:	xor    edx,ecx
6500c7f0:	movzx  ecx,BYTE PTR [eax+0x1e]
6500c7f4:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c7fb:	shl    edx,0x8
6500c7fe:	xor    edx,ecx
6500c800:	movzx  ecx,BYTE PTR [eax+0x1d]
6500c804:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c80b:	mov    esi,DWORD PTR [eax+0x8]
6500c80e:	shl    edx,0x8
6500c811:	xor    edx,ecx
6500c813:	xor    edx,DWORD PTR [eax]
6500c815:	xor    ebx,ebx
6500c817:	mov    ecx,edx
6500c819:	xor    ecx,DWORD PTR [ebp+0x0]
6500c81c:	mov    edx,DWORD PTR [eax+0x4]
6500c81f:	xor    edx,ecx
6500c821:	mov    DWORD PTR [eax+0x20],ecx
6500c824:	mov    ecx,DWORD PTR [eax+0xc]
6500c827:	xor    esi,edx
6500c829:	xor    ecx,esi
6500c82b:	mov    DWORD PTR [eax+0x2c],ecx
6500c82e:	mov    DWORD PTR [eax+0x24],edx
6500c831:	movzx  edx,BYTE PTR [eax+0x2f]
6500c835:	mov    DWORD PTR [eax+0x28],esi
6500c838:	mov    bh,BYTE PTR [edx+0x6502e068]
6500c83e:	movzx  edx,BYTE PTR [eax+0x2e]
6500c842:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c849:	xor    ebx,edx
6500c84b:	movzx  edx,BYTE PTR [eax+0x2d]
6500c84f:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c856:	and    ecx,0xff
6500c85c:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c863:	shl    ebx,0x8
6500c866:	xor    ebx,edx
6500c868:	mov    edx,DWORD PTR [eax+0x14]
6500c86b:	shl    ebx,0x8
6500c86e:	xor    ecx,ebx
6500c870:	xor    ecx,DWORD PTR [eax+0x10]
6500c873:	add    ebp,0x4
6500c876:	xor    edx,ecx
6500c878:	mov    DWORD PTR [eax+0x30],ecx
6500c87b:	mov    ecx,DWORD PTR [eax+0x18]
6500c87e:	xor    ecx,edx
6500c880:	mov    DWORD PTR [eax+0x38],ecx
6500c883:	xor    ecx,edi
6500c885:	mov    DWORD PTR [eax+0x34],edx
6500c888:	mov    DWORD PTR [eax+0x3c],ecx
6500c88b:	add    eax,0x20
6500c88e:	cmp    ebp,0x6502e984
6500c894:	jl     0x6500c7d0
6500c89a:	pop    ebp
6500c89b:	pop    edi
6500c89c:	pop    esi
6500c89d:	pop    ebx
6500c89e:	ret    
6500c89f:	mov    esi,0x6502e96c
6500c8a4:	mov    edi,DWORD PTR [eax+0x14]
6500c8a7:	xor    ecx,ecx
6500c8a9:	mov    edx,edi
6500c8ab:	and    edx,0xff
6500c8b1:	mov    ch,BYTE PTR [edx+0x6502e068]
6500c8b7:	movzx  edx,BYTE PTR [eax+0x17]
6500c8bb:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c8c2:	xor    ecx,edx
6500c8c4:	movzx  edx,BYTE PTR [eax+0x16]
6500c8c8:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c8cf:	shl    ecx,0x8
6500c8d2:	xor    ecx,edx
6500c8d4:	movzx  edx,BYTE PTR [eax+0x15]
6500c8d8:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c8df:	shl    ecx,0x8
6500c8e2:	xor    ecx,edx
6500c8e4:	xor    ecx,DWORD PTR [esi-0x4]
6500c8e7:	mov    edx,DWORD PTR [eax+0x4]
6500c8ea:	xor    ecx,DWORD PTR [eax]
6500c8ec:	xor    edx,ecx
6500c8ee:	mov    DWORD PTR [eax+0x18],ecx
6500c8f1:	mov    ecx,DWORD PTR [eax+0x8]
6500c8f4:	xor    ecx,edx
6500c8f6:	mov    DWORD PTR [eax+0x1c],edx
6500c8f9:	mov    edx,DWORD PTR [eax+0xc]
6500c8fc:	xor    edx,ecx
6500c8fe:	mov    DWORD PTR [eax+0x20],ecx
6500c901:	mov    ecx,DWORD PTR [eax+0x10]
6500c904:	xor    ecx,edx
6500c906:	mov    DWORD PTR [eax+0x28],ecx
6500c909:	mov    DWORD PTR [eax+0x24],edx
6500c90c:	xor    ecx,edi
6500c90e:	mov    DWORD PTR [eax+0x2c],ecx
6500c911:	and    ecx,0xff
6500c917:	xor    edx,edx
6500c919:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500c91f:	movzx  ecx,BYTE PTR [eax+0x2f]
6500c923:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c92a:	xor    edx,ecx
6500c92c:	movzx  ecx,BYTE PTR [eax+0x2e]
6500c930:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c937:	shl    edx,0x8
6500c93a:	xor    edx,ecx
6500c93c:	movzx  ecx,BYTE PTR [eax+0x2d]
6500c940:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c947:	mov    edi,DWORD PTR [eax+0x28]
6500c94a:	shl    edx,0x8
6500c94d:	xor    edx,ecx
6500c94f:	xor    edx,DWORD PTR [eax+0x18]
6500c952:	mov    ecx,edx
6500c954:	xor    ecx,DWORD PTR [esi]
6500c956:	mov    edx,DWORD PTR [eax+0x1c]
6500c959:	xor    edx,ecx
6500c95b:	mov    DWORD PTR [eax+0x30],ecx
6500c95e:	mov    ecx,DWORD PTR [eax+0x20]
6500c961:	xor    ecx,edx
6500c963:	mov    DWORD PTR [eax+0x34],edx
6500c966:	mov    edx,DWORD PTR [eax+0x24]
6500c969:	xor    edx,ecx
6500c96b:	mov    DWORD PTR [eax+0x38],ecx
6500c96e:	mov    ecx,DWORD PTR [eax+0x2c]
6500c971:	xor    edi,edx
6500c973:	mov    DWORD PTR [eax+0x3c],edx
6500c976:	xor    ecx,edi
6500c978:	mov    DWORD PTR [eax+0x44],ecx
6500c97b:	and    ecx,0xff
6500c981:	xor    edx,edx
6500c983:	mov    DWORD PTR [eax+0x40],edi
6500c986:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500c98c:	movzx  ecx,BYTE PTR [eax+0x47]
6500c990:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c997:	xor    edx,ecx
6500c999:	movzx  ecx,BYTE PTR [eax+0x46]
6500c99d:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c9a4:	shl    edx,0x8
6500c9a7:	xor    edx,ecx
6500c9a9:	movzx  ecx,BYTE PTR [eax+0x45]
6500c9ad:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c9b4:	shl    edx,0x8
6500c9b7:	xor    edx,ecx
6500c9b9:	xor    edx,DWORD PTR [esi+0x4]
6500c9bc:	mov    ecx,edx
6500c9be:	xor    ecx,DWORD PTR [eax+0x30]
6500c9c1:	mov    edx,DWORD PTR [eax+0x34]
6500c9c4:	xor    edx,ecx
6500c9c6:	mov    DWORD PTR [eax+0x48],ecx
6500c9c9:	mov    ecx,DWORD PTR [eax+0x38]
6500c9cc:	xor    ecx,edx
6500c9ce:	mov    DWORD PTR [eax+0x4c],edx
6500c9d1:	mov    edx,DWORD PTR [eax+0x3c]
6500c9d4:	xor    edx,ecx
6500c9d6:	mov    DWORD PTR [eax+0x50],ecx
6500c9d9:	mov    ecx,DWORD PTR [eax+0x44]
6500c9dc:	xor    edi,edx
6500c9de:	mov    DWORD PTR [eax+0x54],edx
6500c9e1:	xor    ecx,edi
6500c9e3:	mov    DWORD PTR [eax+0x5c],ecx
6500c9e6:	and    ecx,0xff
6500c9ec:	xor    edx,edx
6500c9ee:	mov    DWORD PTR [eax+0x58],edi
6500c9f1:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500c9f7:	movzx  ecx,BYTE PTR [eax+0x5f]
6500c9fb:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500ca02:	xor    edx,ecx
6500ca04:	movzx  ecx,BYTE PTR [eax+0x5e]
6500ca08:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500ca0f:	shl    edx,0x8
6500ca12:	xor    edx,ecx
6500ca14:	movzx  ecx,BYTE PTR [eax+0x5d]
6500ca18:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500ca1f:	shl    edx,0x8
6500ca22:	xor    edx,ecx
6500ca24:	xor    edx,DWORD PTR [esi+0x8]
6500ca27:	add    esi,0x10
6500ca2a:	mov    ecx,edx
6500ca2c:	xor    ecx,DWORD PTR [eax+0x48]
6500ca2f:	mov    edx,DWORD PTR [eax+0x4c]
6500ca32:	xor    edx,ecx
6500ca34:	mov    DWORD PTR [eax+0x60],ecx
6500ca37:	mov    ecx,DWORD PTR [eax+0x50]
6500ca3a:	xor    ecx,edx
6500ca3c:	mov    DWORD PTR [eax+0x64],edx
6500ca3f:	mov    edx,DWORD PTR [eax+0x54]
6500ca42:	xor    edx,ecx
6500ca44:	mov    DWORD PTR [eax+0x68],ecx
6500ca47:	mov    DWORD PTR [eax+0x6c],edx
6500ca4a:	mov    ecx,edi
6500ca4c:	xor    ecx,edx
6500ca4e:	mov    edx,DWORD PTR [eax+0x5c]
6500ca51:	xor    edx,ecx
6500ca53:	mov    DWORD PTR [eax+0x70],ecx
6500ca56:	mov    DWORD PTR [eax+0x74],edx
6500ca59:	add    eax,0x60
6500ca5c:	cmp    esi,0x6502e98c
6500ca62:	jl     0x6500c8a4
6500ca68:	pop    edi
6500ca69:	pop    esi
6500ca6a:	pop    ebx
6500ca6b:	ret    
6500ca6c:	mov    ecx,0x6502e96c
6500ca71:	mov    esi,DWORD PTR [eax+0xc]
6500ca74:	mov    edx,esi
6500ca76:	and    edx,0xff
6500ca7c:	xor    ebx,ebx
6500ca7e:	mov    bh,BYTE PTR [edx+0x6502e068]
6500ca84:	movzx  edx,BYTE PTR [eax+0xf]
6500ca88:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500ca8f:	xor    ebx,edx
6500ca91:	movzx  edx,BYTE PTR [eax+0xe]
6500ca95:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500ca9c:	mov    edi,DWORD PTR [eax+0x4]
6500ca9f:	shl    ebx,0x8
6500caa2:	xor    ebx,edx
6500caa4:	movzx  edx,BYTE PTR [eax+0xd]
6500caa8:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500caaf:	shl    ebx,0x8
6500cab2:	xor    ebx,edx
6500cab4:	xor    ebx,DWORD PTR [ecx-0x4]
6500cab7:	mov    edx,ebx
6500cab9:	xor    edx,DWORD PTR [eax]
6500cabb:	mov    DWORD PTR [eax+0x10],edx
6500cabe:	xor    edi,edx
6500cac0:	mov    edx,DWORD PTR [eax+0x8]
6500cac3:	xor    edx,edi
6500cac5:	xor    esi,edx
6500cac7:	mov    DWORD PTR [eax+0x18],edx
6500caca:	mov    DWORD PTR [eax+0x1c],esi
6500cacd:	and    esi,0xff
6500cad3:	xor    edx,edx
6500cad5:	mov    DWORD PTR [eax+0x14],edi
6500cad8:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cade:	movzx  esi,BYTE PTR [eax+0x1f]
6500cae2:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cae9:	xor    edx,esi
6500caeb:	movzx  esi,BYTE PTR [eax+0x1e]
6500caef:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500caf6:	shl    edx,0x8
6500caf9:	xor    edx,esi
6500cafb:	movzx  esi,BYTE PTR [eax+0x1d]
6500caff:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb06:	shl    edx,0x8
6500cb09:	xor    edx,esi
6500cb0b:	xor    edx,DWORD PTR [ecx]
6500cb0d:	mov    esi,edi
6500cb0f:	xor    edx,DWORD PTR [eax+0x10]
6500cb12:	xor    esi,edx
6500cb14:	mov    DWORD PTR [eax+0x20],edx
6500cb17:	mov    edx,DWORD PTR [eax+0x18]
6500cb1a:	xor    edx,esi
6500cb1c:	mov    DWORD PTR [eax+0x24],esi
6500cb1f:	mov    esi,DWORD PTR [eax+0x1c]
6500cb22:	xor    esi,edx
6500cb24:	mov    DWORD PTR [eax+0x28],edx
6500cb27:	mov    DWORD PTR [eax+0x2c],esi
6500cb2a:	and    esi,0xff
6500cb30:	xor    edx,edx
6500cb32:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cb38:	movzx  esi,BYTE PTR [eax+0x2f]
6500cb3c:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb43:	xor    edx,esi
6500cb45:	movzx  esi,BYTE PTR [eax+0x2e]
6500cb49:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb50:	shl    edx,0x8
6500cb53:	xor    edx,esi
6500cb55:	movzx  esi,BYTE PTR [eax+0x2d]
6500cb59:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb60:	shl    edx,0x8
6500cb63:	xor    edx,esi
6500cb65:	xor    edx,DWORD PTR [ecx+0x4]
6500cb68:	mov    esi,DWORD PTR [eax+0x24]
6500cb6b:	xor    edx,DWORD PTR [eax+0x20]
6500cb6e:	xor    esi,edx
6500cb70:	mov    DWORD PTR [eax+0x30],edx
6500cb73:	mov    edx,DWORD PTR [eax+0x28]
6500cb76:	xor    edx,esi
6500cb78:	mov    DWORD PTR [eax+0x34],esi
6500cb7b:	mov    esi,DWORD PTR [eax+0x2c]
6500cb7e:	xor    esi,edx
6500cb80:	mov    DWORD PTR [eax+0x3c],esi
6500cb83:	mov    DWORD PTR [eax+0x38],edx
6500cb86:	and    esi,0xff
6500cb8c:	xor    edx,edx
6500cb8e:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cb94:	movzx  esi,BYTE PTR [eax+0x3f]
6500cb98:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb9f:	xor    edx,esi
6500cba1:	movzx  esi,BYTE PTR [eax+0x3e]
6500cba5:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cbac:	shl    edx,0x8
6500cbaf:	xor    edx,esi
6500cbb1:	movzx  esi,BYTE PTR [eax+0x3d]
6500cbb5:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cbbc:	shl    edx,0x8
6500cbbf:	xor    edx,esi
6500cbc1:	xor    edx,DWORD PTR [ecx+0x8]
6500cbc4:	mov    esi,DWORD PTR [eax+0x34]
6500cbc7:	xor    edx,DWORD PTR [eax+0x30]
6500cbca:	add    ecx,0x14
6500cbcd:	xor    esi,edx
6500cbcf:	mov    DWORD PTR [eax+0x40],edx
6500cbd2:	mov    edx,DWORD PTR [eax+0x38]
6500cbd5:	xor    edx,esi
6500cbd7:	mov    DWORD PTR [eax+0x44],esi
6500cbda:	mov    esi,DWORD PTR [eax+0x3c]
6500cbdd:	xor    esi,edx
6500cbdf:	mov    DWORD PTR [eax+0x48],edx
6500cbe2:	mov    DWORD PTR [eax+0x4c],esi
6500cbe5:	and    esi,0xff
6500cbeb:	xor    edx,edx
6500cbed:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cbf3:	movzx  esi,BYTE PTR [eax+0x4f]
6500cbf7:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cbfe:	xor    edx,esi
6500cc00:	movzx  esi,BYTE PTR [eax+0x4e]
6500cc04:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cc0b:	shl    edx,0x8
6500cc0e:	xor    edx,esi
6500cc10:	movzx  esi,BYTE PTR [eax+0x4d]
6500cc14:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cc1b:	shl    edx,0x8
6500cc1e:	xor    edx,esi
6500cc20:	xor    edx,DWORD PTR [ecx-0x8]
6500cc23:	mov    esi,DWORD PTR [eax+0x44]
6500cc26:	xor    edx,DWORD PTR [eax+0x40]
6500cc29:	add    eax,0x50
6500cc2c:	xor    esi,edx
6500cc2e:	mov    DWORD PTR [eax],edx
6500cc30:	mov    edx,DWORD PTR [eax-0x8]
6500cc33:	xor    edx,esi
6500cc35:	mov    DWORD PTR [eax+0x4],esi
6500cc38:	mov    esi,DWORD PTR [eax-0x4]
6500cc3b:	xor    esi,edx
6500cc3d:	cmp    ecx,0x6502e994
6500cc43:	mov    DWORD PTR [eax+0x8],edx
6500cc46:	mov    DWORD PTR [eax+0xc],esi
6500cc49:	jl     0x6500ca71
6500cc4f:	pop    edi
6500cc50:	pop    esi
6500cc51:	pop    ebx
6500cc52:	ret    
6500cc53:	int3   
6500cc54:	int3   
6500cc55:	int3   
6500cc56:	int3   
6500cc57:	int3   
6500cc58:	int3   
6500cc59:	int3   
6500cc5a:	int3   
6500cc5b:	int3   
6500cc5c:	int3   
6500cc5d:	int3   
6500cc5e:	int3   
6500cc5f:	int3   
6500cc60:	sub    esp,0x11c
6500cc66:	push   esi
6500cc67:	push   edi
6500cc68:	mov    edi,eax
6500cc6a:	lea    esi,[edi+0x8]
6500cc6d:	lea    eax,[esp+0x8]
6500cc71:	mov    DWORD PTR [edi],0xa
6500cc77:	mov    DWORD PTR [edi+0x4],esi
6500cc7a:	call   0x6500c750
6500cc7f:	mov    eax,DWORD PTR [esp+0x8]
6500cc83:	shl    eax,0x4
6500cc86:	add    eax,DWORD PTR [esp+0xc]
6500cc8a:	add    esi,0x4
6500cc8d:	mov    ecx,DWORD PTR [eax]
6500cc8f:	mov    DWORD PTR [esi-0x4],ecx
6500cc92:	mov    edx,DWORD PTR [eax+0x4]
6500cc95:	add    eax,0x4
6500cc98:	mov    DWORD PTR [esi],edx
6500cc9a:	mov    ecx,DWORD PTR [eax+0x4]
6500cc9d:	add    eax,0x4
6500cca0:	add    esi,0x4
6500cca3:	mov    DWORD PTR [esi],ecx
6500cca5:	mov    edx,DWORD PTR [eax+0x4]
6500cca8:	add    eax,0x4
6500ccab:	add    esi,0x4
6500ccae:	mov    DWORD PTR [esi],edx
6500ccb0:	mov    ecx,DWORD PTR [edi]
6500ccb2:	sub    ecx,0x1
6500ccb5:	add    esi,0x4
6500ccb8:	sub    eax,0x1c
6500ccbb:	test   ecx,ecx
6500ccbd:	jle    0x6500ce15
6500ccc3:	movzx  edx,BYTE PTR [eax+0x3]
6500ccc7:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500ccce:	mov    edx,DWORD PTR [edx*4+0x6502e168]
6500ccd5:	movzx  edi,BYTE PTR [eax+0x2]
6500ccd9:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cce0:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500cce7:	movzx  edi,BYTE PTR [eax+0x1]
6500cceb:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500ccf2:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500ccf9:	mov    edi,DWORD PTR [eax]
6500ccfb:	and    edi,0xff
6500cd01:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd08:	xor    edx,DWORD PTR [edi*4+0x6502ed90]
6500cd0f:	add    eax,0x10
6500cd12:	mov    DWORD PTR [esi],edx
6500cd14:	mov    edx,DWORD PTR [eax-0xc]
6500cd17:	movzx  edi,BYTE PTR [eax-0x9]
6500cd1b:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd22:	and    edx,0xff
6500cd28:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500cd2f:	mov    edx,DWORD PTR [edx*4+0x6502ed90]
6500cd36:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500cd3d:	movzx  edi,BYTE PTR [eax-0xa]
6500cd41:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd48:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500cd4f:	movzx  edi,BYTE PTR [eax-0xb]
6500cd53:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd5a:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500cd61:	sub    ecx,0x1
6500cd64:	mov    DWORD PTR [esi+0x4],edx
6500cd67:	mov    edx,DWORD PTR [eax-0x8]
6500cd6a:	movzx  edi,BYTE PTR [eax-0x5]
6500cd6e:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd75:	and    edx,0xff
6500cd7b:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500cd82:	mov    edx,DWORD PTR [edx*4+0x6502ed90]
6500cd89:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500cd90:	movzx  edi,BYTE PTR [eax-0x6]
6500cd94:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd9b:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500cda2:	movzx  edi,BYTE PTR [eax-0x7]
6500cda6:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cdad:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500cdb4:	add    esi,0x10
6500cdb7:	mov    DWORD PTR [esi-0x8],edx
6500cdba:	mov    edx,DWORD PTR [eax-0x4]
6500cdbd:	movzx  edi,BYTE PTR [eax-0x1]
6500cdc1:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cdc8:	and    edx,0xff
6500cdce:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500cdd5:	mov    edx,DWORD PTR [edx*4+0x6502ed90]
6500cddc:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500cde3:	movzx  edi,BYTE PTR [eax-0x2]
6500cde7:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cdee:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500cdf5:	movzx  edi,BYTE PTR [eax-0x3]
6500cdf9:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500ce00:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500ce07:	sub    eax,0x20
6500ce0a:	test   ecx,ecx
6500ce0c:	mov    DWORD PTR [esi-0x4],edx
6500ce0f:	jg     0x6500ccc3
6500ce15:	mov    ecx,DWORD PTR [eax]
6500ce17:	mov    DWORD PTR [esi],ecx
6500ce19:	mov    edx,DWORD PTR [eax+0x4]
6500ce1c:	add    esi,0x4
6500ce1f:	add    eax,0x4
6500ce22:	mov    DWORD PTR [esi],edx
6500ce24:	mov    ecx,DWORD PTR [eax+0x4]
6500ce27:	add    esi,0x4
6500ce2a:	add    eax,0x4
6500ce2d:	mov    DWORD PTR [esi],ecx
6500ce2f:	mov    edx,DWORD PTR [eax+0x4]
6500ce32:	pop    edi
6500ce33:	mov    DWORD PTR [esi+0x4],edx
6500ce36:	pop    esi
6500ce37:	add    esp,0x11c
6500ce3d:	ret    
6500ce3e:	int3   
6500ce3f:	int3   
6500ce40:	sub    esp,0x10
6500ce43:	xor    ecx,ecx
6500ce45:	push   ebx
6500ce46:	push   ebp
6500ce47:	mov    ebp,DWORD PTR [esp+0x1c]
6500ce4b:	push   esi
6500ce4c:	push   edi
6500ce4d:	mov    edi,eax
6500ce4f:	mov    ch,BYTE PTR [edi+0x3]
6500ce52:	movzx  edx,BYTE PTR [edi+0x1]
6500ce56:	mov    eax,DWORD PTR [ebp+0x4]
6500ce59:	movzx  esi,BYTE PTR [edi+0x9]
6500ce5d:	mov    cl,BYTE PTR [edi+0x2]
6500ce60:	movzx  ebx,BYTE PTR [edi+0xd]
6500ce64:	add    eax,0x4
6500ce67:	add    eax,0x4
6500ce6a:	add    eax,0x4
6500ce6d:	shl    ecx,0x8
6500ce70:	or     ecx,edx
6500ce72:	movzx  edx,BYTE PTR [edi]
6500ce75:	shl    ecx,0x8
6500ce78:	or     ecx,edx
6500ce7a:	xor    ecx,DWORD PTR [eax-0xc]
6500ce7d:	movzx  edx,BYTE PTR [edi+0x5]
6500ce81:	mov    DWORD PTR [esp+0x24],ecx
6500ce85:	xor    ecx,ecx
6500ce87:	mov    ch,BYTE PTR [edi+0x7]
6500ce8a:	add    eax,0x4
6500ce8d:	mov    cl,BYTE PTR [edi+0x6]
6500ce90:	shl    ecx,0x8
6500ce93:	or     ecx,edx
6500ce95:	movzx  edx,BYTE PTR [edi+0x4]
6500ce99:	shl    ecx,0x8
6500ce9c:	or     ecx,edx
6500ce9e:	xor    edx,edx
6500cea0:	mov    dh,BYTE PTR [edi+0xb]
6500cea3:	xor    ecx,DWORD PTR [eax-0xc]
6500cea6:	mov    dl,BYTE PTR [edi+0xa]
6500cea9:	shl    edx,0x8
6500ceac:	or     edx,esi
6500ceae:	movzx  esi,BYTE PTR [edi+0x8]
6500ceb2:	shl    edx,0x8
6500ceb5:	or     edx,esi
6500ceb7:	xor    edx,DWORD PTR [eax-0x8]
6500ceba:	mov    esi,edx
6500cebc:	xor    edx,edx
6500cebe:	mov    dh,BYTE PTR [edi+0xf]
6500cec1:	mov    DWORD PTR [esp+0x10],esi
6500cec5:	mov    dl,BYTE PTR [edi+0xe]
6500cec8:	movzx  edi,BYTE PTR [edi+0xc]
6500cecc:	shl    edx,0x8
6500cecf:	or     edx,ebx
6500ced1:	shl    edx,0x8
6500ced4:	or     edx,edi
6500ced6:	xor    edx,DWORD PTR [eax-0x4]
6500ced9:	cmp    DWORD PTR [esp+0x28],0x0
6500cede:	jne    0x6500d379
6500cee4:	mov    ebp,DWORD PTR [ebp+0x0]
6500cee7:	sar    ebp,1
6500cee9:	sub    ebp,0x1
6500ceec:	test   ebp,ebp
6500ceee:	jle    0x6500d11f
6500cef4:	mov    ebx,esi
6500cef6:	movzx  edi,dh
6500cef9:	mov    esi,DWORD PTR [edi*4+0x6502e990]
6500cf00:	mov    edi,ecx
6500cf02:	shr    edi,0x18
6500cf05:	shr    ebx,0x10
6500cf08:	and    ebx,0xff
6500cf0e:	xor    esi,DWORD PTR [ebx*4+0x6502e568]
6500cf15:	add    eax,0x4
6500cf18:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500cf1f:	mov    edi,DWORD PTR [esp+0x24]
6500cf23:	and    edi,0xff
6500cf29:	mov    DWORD PTR [esp+0x28],esi
6500cf2d:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500cf34:	movzx  edi,BYTE PTR [esp+0x25]
6500cf39:	xor    esi,DWORD PTR [eax-0x4]
6500cf3c:	add    eax,0x4
6500cf3f:	mov    DWORD PTR [esp+0x14],esi
6500cf43:	mov    esi,edx
6500cf45:	shr    esi,0x10
6500cf48:	and    esi,0xff
6500cf4e:	mov    esi,DWORD PTR [esi*4+0x6502e568]
6500cf55:	xor    esi,DWORD PTR [edi*4+0x6502e990]
6500cf5c:	mov    edi,DWORD PTR [esp+0x10]
6500cf60:	shr    edi,0x18
6500cf63:	mov    DWORD PTR [esp+0x28],esi
6500cf67:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500cf6e:	mov    edi,ecx
6500cf70:	and    edi,0xff
6500cf76:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500cf7d:	mov    edi,DWORD PTR [esp+0x24]
6500cf81:	xor    esi,DWORD PTR [eax-0x4]
6500cf84:	shr    edi,0x10
6500cf87:	mov    DWORD PTR [esp+0x18],esi
6500cf8b:	movzx  esi,ch
6500cf8e:	mov    esi,DWORD PTR [esi*4+0x6502e990]
6500cf95:	and    edi,0xff
6500cf9b:	xor    esi,DWORD PTR [edi*4+0x6502e568]
6500cfa2:	mov    edi,edx
6500cfa4:	shr    edi,0x18
6500cfa7:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500cfae:	mov    edi,DWORD PTR [esp+0x10]
6500cfb2:	and    edi,0xff
6500cfb8:	mov    DWORD PTR [esp+0x28],esi
6500cfbc:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500cfc3:	shr    ecx,0x10
6500cfc6:	xor    esi,DWORD PTR [eax]
6500cfc8:	and    ecx,0xff
6500cfce:	mov    DWORD PTR [esp+0x28],esi
6500cfd2:	movzx  esi,BYTE PTR [esp+0x11]
6500cfd7:	mov    ebx,DWORD PTR [esi*4+0x6502e990]
6500cfde:	xor    ebx,DWORD PTR [ecx*4+0x6502e568]
6500cfe5:	mov    ecx,DWORD PTR [esp+0x24]
6500cfe9:	mov    esi,DWORD PTR [esp+0x28]
6500cfed:	shr    ecx,0x18
6500cff0:	xor    ebx,DWORD PTR [ecx*4+0x6502e168]
6500cff7:	and    edx,0xff
6500cffd:	xor    ebx,DWORD PTR [edx*4+0x6502ed90]
6500d004:	add    eax,0x4
6500d007:	xor    ebx,DWORD PTR [eax]
6500d009:	mov    ecx,esi
6500d00b:	shr    ecx,0x10
6500d00e:	and    ecx,0xff
6500d014:	movzx  edx,bh
6500d017:	mov    edi,DWORD PTR [edx*4+0x6502e990]
6500d01e:	xor    edi,DWORD PTR [ecx*4+0x6502e568]
6500d025:	mov    edx,DWORD PTR [esp+0x18]
6500d029:	mov    ecx,edx
6500d02b:	shr    ecx,0x18
6500d02e:	xor    edi,DWORD PTR [ecx*4+0x6502e168]
6500d035:	mov    ecx,DWORD PTR [esp+0x14]
6500d039:	and    ecx,0xff
6500d03f:	xor    edi,DWORD PTR [ecx*4+0x6502ed90]
6500d046:	add    eax,0x4
6500d049:	xor    edi,DWORD PTR [eax]
6500d04b:	mov    ecx,ebx
6500d04d:	shr    ecx,0x10
6500d050:	mov    DWORD PTR [esp+0x24],edi
6500d054:	movzx  edi,BYTE PTR [esp+0x15]
6500d059:	add    eax,0x4
6500d05c:	and    ecx,0xff
6500d062:	mov    ecx,DWORD PTR [ecx*4+0x6502e568]
6500d069:	xor    ecx,DWORD PTR [edi*4+0x6502e990]
6500d070:	shr    esi,0x18
6500d073:	xor    ecx,DWORD PTR [esi*4+0x6502e168]
6500d07a:	mov    esi,edx
6500d07c:	and    esi,0xff
6500d082:	xor    ecx,DWORD PTR [esi*4+0x6502ed90]
6500d089:	mov    esi,DWORD PTR [esp+0x14]
6500d08d:	xor    ecx,DWORD PTR [eax]
6500d08f:	movzx  edx,dh
6500d092:	mov    edx,DWORD PTR [edx*4+0x6502e990]
6500d099:	mov    edi,DWORD PTR [esp+0x18]
6500d09d:	shr    esi,0x10
6500d0a0:	and    esi,0xff
6500d0a6:	xor    edx,DWORD PTR [esi*4+0x6502e568]
6500d0ad:	mov    esi,ebx
6500d0af:	shr    esi,0x18
6500d0b2:	xor    edx,DWORD PTR [esi*4+0x6502e168]
6500d0b9:	mov    esi,DWORD PTR [esp+0x28]
6500d0bd:	and    esi,0xff
6500d0c3:	xor    edx,DWORD PTR [esi*4+0x6502ed90]
6500d0ca:	add    eax,0x4
6500d0cd:	xor    edx,DWORD PTR [eax]
6500d0cf:	shr    edi,0x10
6500d0d2:	mov    esi,edx
6500d0d4:	movzx  edx,BYTE PTR [esp+0x29]
6500d0d9:	mov    edx,DWORD PTR [edx*4+0x6502e990]
6500d0e0:	and    edi,0xff
6500d0e6:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500d0ed:	mov    edi,DWORD PTR [esp+0x14]
6500d0f1:	shr    edi,0x18
6500d0f4:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500d0fb:	and    ebx,0xff
6500d101:	xor    edx,DWORD PTR [ebx*4+0x6502ed90]
6500d108:	add    eax,0x4
6500d10b:	xor    edx,DWORD PTR [eax]
6500d10d:	sub    ebp,0x1
6500d110:	add    eax,0x4
6500d113:	test   ebp,ebp
6500d115:	mov    DWORD PTR [esp+0x10],esi
6500d119:	jg     0x6500cef4
6500d11f:	mov    ebx,esi
6500d121:	movzx  edi,dh
6500d124:	mov    esi,DWORD PTR [edi*4+0x6502e990]
6500d12b:	mov    edi,ecx
6500d12d:	shr    edi,0x18
6500d130:	shr    ebx,0x10
6500d133:	and    ebx,0xff
6500d139:	xor    esi,DWORD PTR [ebx*4+0x6502e568]
6500d140:	add    eax,0x4
6500d143:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500d14a:	mov    edi,DWORD PTR [esp+0x24]
6500d14e:	mov    DWORD PTR [esp+0x28],esi
6500d152:	and    edi,0xff
6500d158:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500d15f:	movzx  edi,BYTE PTR [esp+0x25]
6500d164:	xor    esi,DWORD PTR [eax-0x4]
6500d167:	add    eax,0x4
6500d16a:	mov    DWORD PTR [esp+0x14],esi
6500d16e:	mov    esi,edx
6500d170:	shr    esi,0x10
6500d173:	and    esi,0xff
6500d179:	mov    esi,DWORD PTR [esi*4+0x6502e568]
6500d180:	xor    esi,DWORD PTR [edi*4+0x6502e990]
6500d187:	mov    edi,DWORD PTR [esp+0x10]
6500d18b:	shr    edi,0x18
6500d18e:	mov    DWORD PTR [esp+0x28],esi
6500d192:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500d199:	mov    edi,ecx
6500d19b:	and    edi,0xff
6500d1a1:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500d1a8:	mov    edi,DWORD PTR [esp+0x24]
6500d1ac:	xor    esi,DWORD PTR [eax-0x4]
6500d1af:	shr    edi,0x10
6500d1b2:	mov    DWORD PTR [esp+0x18],esi
6500d1b6:	movzx  esi,ch
6500d1b9:	mov    esi,DWORD PTR [esi*4+0x6502e990]
6500d1c0:	and    edi,0xff
6500d1c6:	xor    esi,DWORD PTR [edi*4+0x6502e568]
6500d1cd:	mov    edi,edx
6500d1cf:	shr    edi,0x18
6500d1d2:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500d1d9:	mov    edi,DWORD PTR [esp+0x10]
6500d1dd:	mov    DWORD PTR [esp+0x28],esi
6500d1e1:	and    edi,0xff
6500d1e7:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500d1ee:	shr    ecx,0x10
6500d1f1:	xor    esi,DWORD PTR [eax]
6500d1f3:	and    ecx,0xff
6500d1f9:	mov    DWORD PTR [esp+0x28],esi
6500d1fd:	movzx  esi,BYTE PTR [esp+0x11]
6500d202:	mov    ebx,DWORD PTR [esi*4+0x6502e990]
6500d209:	xor    ebx,DWORD PTR [ecx*4+0x6502e568]
6500d210:	mov    ecx,DWORD PTR [esp+0x24]
6500d214:	mov    edi,DWORD PTR [esp+0x28]
6500d218:	shr    ecx,0x18
6500d21b:	xor    ebx,DWORD PTR [ecx*4+0x6502e168]
6500d222:	mov    ecx,DWORD PTR [esp+0x18]
6500d226:	and    edx,0xff
6500d22c:	xor    ebx,DWORD PTR [edx*4+0x6502ed90]
6500d233:	add    eax,0x4
6500d236:	xor    ebx,DWORD PTR [eax]
6500d238:	add    eax,0x4
6500d23b:	shr    ecx,0x18
6500d23e:	mov    DWORD PTR [esp+0x1c],eax
6500d242:	xor    eax,eax
6500d244:	mov    ah,BYTE PTR [ecx+0x65030190]
6500d24a:	mov    edx,edi
6500d24c:	shr    edx,0x10
6500d24f:	and    edx,0xff
6500d255:	movzx  edx,BYTE PTR [edx+0x65030190]
6500d25c:	movzx  ecx,bh
6500d25f:	movzx  ecx,BYTE PTR [ecx+0x65030190]
6500d266:	xor    edx,eax
6500d268:	shl    edx,0x8
6500d26b:	xor    edx,ecx
6500d26d:	mov    ecx,DWORD PTR [esp+0x14]
6500d271:	and    ecx,0xff
6500d277:	movzx  ecx,BYTE PTR [ecx+0x65030190]
6500d27e:	shl    edx,0x8
6500d281:	mov    DWORD PTR [esp+0x24],ebx
6500d285:	xor    edx,ecx
6500d287:	xor    ecx,ecx
6500d289:	shr    edi,0x18
6500d28c:	mov    ch,BYTE PTR [edi+0x65030190]
6500d292:	mov    eax,DWORD PTR [esp+0x1c]
6500d296:	xor    edx,DWORD PTR [eax]
6500d298:	shr    ebx,0x10
6500d29b:	and    ebx,0xff
6500d2a1:	movzx  esi,BYTE PTR [ebx+0x65030190]
6500d2a8:	xor    esi,ecx
6500d2aa:	mov    ecx,DWORD PTR [esp+0x14]
6500d2ae:	shl    esi,0x8
6500d2b1:	movzx  edi,ch
6500d2b4:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d2bb:	xor    esi,edi
6500d2bd:	mov    edi,DWORD PTR [esp+0x18]
6500d2c1:	shl    esi,0x8
6500d2c4:	and    edi,0xff
6500d2ca:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d2d1:	xor    esi,edi
6500d2d3:	xor    esi,DWORD PTR [eax+0x4]
6500d2d6:	shr    ecx,0x10
6500d2d9:	mov    DWORD PTR [esp+0x1c],esi
6500d2dd:	and    ecx,0xff
6500d2e3:	movzx  esi,BYTE PTR [ecx+0x65030190]
6500d2ea:	mov    ecx,DWORD PTR [esp+0x24]
6500d2ee:	add    eax,0x4
6500d2f1:	shr    ecx,0x18
6500d2f4:	xor    ebx,ebx
6500d2f6:	mov    bh,BYTE PTR [ecx+0x65030190]
6500d2fc:	mov    ecx,DWORD PTR [esp+0x18]
6500d300:	movzx  edi,ch
6500d303:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d30a:	xor    esi,ebx
6500d30c:	shl    esi,0x8
6500d30f:	xor    esi,edi
6500d311:	mov    edi,DWORD PTR [esp+0x28]
6500d315:	shl    esi,0x8
6500d318:	and    edi,0xff
6500d31e:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d325:	xor    esi,edi
6500d327:	xor    esi,DWORD PTR [eax+0x4]
6500d32a:	add    eax,0x4
6500d32d:	mov    DWORD PTR [esp+0x10],esi
6500d331:	mov    esi,DWORD PTR [esp+0x14]
6500d335:	shr    esi,0x18
6500d338:	shr    ecx,0x10
6500d33b:	xor    ebx,ebx
6500d33d:	mov    bh,BYTE PTR [esi+0x65030190]
6500d343:	movzx  esi,BYTE PTR [esp+0x29]
6500d348:	movzx  esi,BYTE PTR [esi+0x65030190]
6500d34f:	and    ecx,0xff
6500d355:	movzx  ecx,BYTE PTR [ecx+0x65030190]
6500d35c:	xor    ecx,ebx
6500d35e:	shl    ecx,0x8
6500d361:	xor    ecx,esi
6500d363:	mov    esi,DWORD PTR [esp+0x24]
6500d367:	and    esi,0xff
6500d36d:	movzx  esi,BYTE PTR [esi+0x65030190]
6500d374:	jmp    0x6500d80c
6500d379:	mov    edi,DWORD PTR [ebp+0x0]
6500d37c:	sar    edi,1
6500d37e:	sub    edi,0x1
6500d381:	test   edi,edi
6500d383:	mov    DWORD PTR [esp+0x1c],edi
6500d387:	jle    0x6500d5c3
6500d38d:	lea    ecx,[ecx+0x0]
6500d390:	shr    esi,0x10
6500d393:	and    esi,0xff
6500d399:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d3a0:	movzx  edi,ch
6500d3a3:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d3aa:	mov    edi,edx
6500d3ac:	shr    edi,0x18
6500d3af:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d3b6:	mov    edi,DWORD PTR [esp+0x24]
6500d3ba:	mov    DWORD PTR [esp+0x28],esi
6500d3be:	and    edi,0xff
6500d3c4:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d3cb:	movzx  edi,BYTE PTR [esp+0x11]
6500d3d0:	xor    esi,DWORD PTR [eax]
6500d3d2:	add    eax,0x4
6500d3d5:	mov    DWORD PTR [esp+0x14],esi
6500d3d9:	mov    esi,edx
6500d3db:	shr    esi,0x10
6500d3de:	and    esi,0xff
6500d3e4:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d3eb:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d3f2:	mov    edi,DWORD PTR [esp+0x24]
6500d3f6:	mov    DWORD PTR [esp+0x28],esi
6500d3fa:	shr    edi,0x18
6500d3fd:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d404:	mov    edi,ecx
6500d406:	and    edi,0xff
6500d40c:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d413:	mov    edi,DWORD PTR [esp+0x24]
6500d417:	xor    esi,DWORD PTR [eax]
6500d419:	shr    edi,0x10
6500d41c:	mov    DWORD PTR [esp+0x18],esi
6500d420:	and    edi,0xff
6500d426:	movzx  esi,dh
6500d429:	mov    esi,DWORD PTR [esi*4+0x6502f990]
6500d430:	xor    esi,DWORD PTR [edi*4+0x6502f590]
6500d437:	mov    edi,ecx
6500d439:	shr    edi,0x18
6500d43c:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d443:	mov    edi,DWORD PTR [esp+0x10]
6500d447:	mov    DWORD PTR [esp+0x28],esi
6500d44b:	and    edi,0xff
6500d451:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d458:	add    eax,0x4
6500d45b:	xor    esi,DWORD PTR [eax]
6500d45d:	shr    ecx,0x10
6500d460:	mov    DWORD PTR [esp+0x28],esi
6500d464:	movzx  esi,BYTE PTR [esp+0x25]
6500d469:	and    ecx,0xff
6500d46f:	mov    ebx,DWORD PTR [ecx*4+0x6502f590]
6500d476:	xor    ebx,DWORD PTR [esi*4+0x6502f990]
6500d47d:	mov    ecx,DWORD PTR [esp+0x10]
6500d481:	shr    ecx,0x18
6500d484:	xor    ebx,DWORD PTR [ecx*4+0x6502f190]
6500d48b:	mov    ecx,DWORD PTR [esp+0x18]
6500d48f:	and    edx,0xff
6500d495:	xor    ebx,DWORD PTR [edx*4+0x6502fd90]
6500d49c:	mov    edx,DWORD PTR [esp+0x28]
6500d4a0:	xor    ebx,DWORD PTR [eax+0x4]
6500d4a3:	add    eax,0x4
6500d4a6:	mov    esi,edx
6500d4a8:	shr    esi,0x10
6500d4ab:	and    esi,0xff
6500d4b1:	mov    ebp,DWORD PTR [esi*4+0x6502f590]
6500d4b8:	movzx  edi,ch
6500d4bb:	xor    ebp,DWORD PTR [edi*4+0x6502f990]
6500d4c2:	mov    esi,ebx
6500d4c4:	shr    esi,0x18
6500d4c7:	xor    ebp,DWORD PTR [esi*4+0x6502f190]
6500d4ce:	mov    esi,DWORD PTR [esp+0x14]
6500d4d2:	mov    edi,esi
6500d4d4:	and    edi,0xff
6500d4da:	xor    ebp,DWORD PTR [edi*4+0x6502fd90]
6500d4e1:	add    eax,0x4
6500d4e4:	xor    ebp,DWORD PTR [eax]
6500d4e6:	mov    edi,ebx
6500d4e8:	shr    edi,0x10
6500d4eb:	add    eax,0x4
6500d4ee:	mov    DWORD PTR [esp+0x24],ebp
6500d4f2:	and    edi,0xff
6500d4f8:	movzx  edx,dh
6500d4fb:	mov    edi,DWORD PTR [edi*4+0x6502f590]
6500d502:	xor    edi,DWORD PTR [edx*4+0x6502f990]
6500d509:	mov    edx,esi
6500d50b:	shr    edx,0x18
6500d50e:	xor    edi,DWORD PTR [edx*4+0x6502f190]
6500d515:	shr    esi,0x10
6500d518:	and    esi,0xff
6500d51e:	movzx  edx,bh
6500d521:	mov    edx,DWORD PTR [edx*4+0x6502f990]
6500d528:	xor    edx,DWORD PTR [esi*4+0x6502f590]
6500d52f:	mov    esi,DWORD PTR [esp+0x18]
6500d533:	shr    esi,0x18
6500d536:	xor    edx,DWORD PTR [esi*4+0x6502f190]
6500d53d:	mov    esi,DWORD PTR [esp+0x28]
6500d541:	and    ecx,0xff
6500d547:	xor    edi,DWORD PTR [ecx*4+0x6502fd90]
6500d54e:	and    esi,0xff
6500d554:	xor    edi,DWORD PTR [eax]
6500d556:	xor    edx,DWORD PTR [esi*4+0x6502fd90]
6500d55d:	mov    ecx,edi
6500d55f:	xor    edx,DWORD PTR [eax+0x4]
6500d562:	mov    edi,DWORD PTR [esp+0x18]
6500d566:	add    eax,0x4
6500d569:	shr    edi,0x10
6500d56c:	and    edi,0xff
6500d572:	mov    ebp,DWORD PTR [edi*4+0x6502f590]
6500d579:	mov    edi,DWORD PTR [esp+0x28]
6500d57d:	mov    esi,edx
6500d57f:	movzx  edx,BYTE PTR [esp+0x15]
6500d584:	xor    ebp,DWORD PTR [edx*4+0x6502f990]
6500d58b:	shr    edi,0x18
6500d58e:	xor    ebp,DWORD PTR [edi*4+0x6502f190]
6500d595:	mov    edi,DWORD PTR [esp+0x1c]
6500d599:	and    ebx,0xff
6500d59f:	xor    ebp,DWORD PTR [ebx*4+0x6502fd90]
6500d5a6:	add    eax,0x4
6500d5a9:	xor    ebp,DWORD PTR [eax]
6500d5ab:	sub    edi,0x1
6500d5ae:	add    eax,0x4
6500d5b1:	test   edi,edi
6500d5b3:	mov    DWORD PTR [esp+0x10],esi
6500d5b7:	mov    edx,ebp
6500d5b9:	mov    DWORD PTR [esp+0x1c],edi
6500d5bd:	jg     0x6500d390
6500d5c3:	shr    esi,0x10
6500d5c6:	and    esi,0xff
6500d5cc:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d5d3:	movzx  edi,ch
6500d5d6:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d5dd:	mov    edi,edx
6500d5df:	shr    edi,0x18
6500d5e2:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d5e9:	mov    edi,DWORD PTR [esp+0x24]
6500d5ed:	mov    DWORD PTR [esp+0x28],esi
6500d5f1:	and    edi,0xff
6500d5f7:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d5fe:	movzx  edi,BYTE PTR [esp+0x11]
6500d603:	xor    esi,DWORD PTR [eax]
6500d605:	add    eax,0x4
6500d608:	mov    DWORD PTR [esp+0x14],esi
6500d60c:	mov    esi,edx
6500d60e:	shr    esi,0x10
6500d611:	and    esi,0xff
6500d617:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d61e:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d625:	mov    edi,DWORD PTR [esp+0x24]
6500d629:	shr    edi,0x18
6500d62c:	mov    DWORD PTR [esp+0x28],esi
6500d630:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d637:	mov    edi,ecx
6500d639:	and    edi,0xff
6500d63f:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d646:	mov    edi,DWORD PTR [esp+0x24]
6500d64a:	xor    esi,DWORD PTR [eax]
6500d64c:	shr    edi,0x10
6500d64f:	mov    DWORD PTR [esp+0x18],esi
6500d653:	movzx  esi,dh
6500d656:	mov    esi,DWORD PTR [esi*4+0x6502f990]
6500d65d:	and    edi,0xff
6500d663:	xor    esi,DWORD PTR [edi*4+0x6502f590]
6500d66a:	mov    edi,ecx
6500d66c:	shr    edi,0x18
6500d66f:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d676:	mov    edi,DWORD PTR [esp+0x10]
6500d67a:	mov    DWORD PTR [esp+0x28],esi
6500d67e:	and    edi,0xff
6500d684:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d68b:	movzx  edi,BYTE PTR [esp+0x25]
6500d690:	xor    esi,DWORD PTR [eax+0x4]
6500d693:	shr    ecx,0x10
6500d696:	and    ecx,0xff
6500d69c:	add    eax,0x4
6500d69f:	mov    DWORD PTR [esp+0x28],esi
6500d6a3:	mov    esi,DWORD PTR [ecx*4+0x6502f590]
6500d6aa:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d6b1:	mov    ecx,DWORD PTR [esp+0x10]
6500d6b5:	and    edx,0xff
6500d6bb:	shr    ecx,0x18
6500d6be:	xor    esi,DWORD PTR [ecx*4+0x6502f190]
6500d6c5:	add    eax,0x4
6500d6c8:	xor    esi,DWORD PTR [edx*4+0x6502fd90]
6500d6cf:	mov    edx,DWORD PTR [esp+0x28]
6500d6d3:	xor    esi,DWORD PTR [eax]
6500d6d5:	shr    edx,0x10
6500d6d8:	and    edx,0xff
6500d6de:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500d6e5:	mov    ecx,esi
6500d6e7:	shr    ecx,0x18
6500d6ea:	xor    ebx,ebx
6500d6ec:	mov    bh,BYTE PTR [ecx+0x6502e068]
6500d6f2:	movzx  ecx,BYTE PTR [esp+0x19]
6500d6f7:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d6fe:	xor    edx,ebx
6500d700:	shl    edx,0x8
6500d703:	xor    edx,ecx
6500d705:	mov    ecx,DWORD PTR [esp+0x14]
6500d709:	mov    edi,ecx
6500d70b:	and    edi,0xff
6500d711:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500d718:	shl    edx,0x8
6500d71b:	add    eax,0x4
6500d71e:	xor    edx,edi
6500d720:	xor    edx,DWORD PTR [eax]
6500d722:	mov    DWORD PTR [esp+0x24],esi
6500d726:	add    eax,0x4
6500d729:	shr    esi,0x10
6500d72c:	and    esi,0xff
6500d732:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d739:	shr    ecx,0x18
6500d73c:	xor    ebx,ebx
6500d73e:	mov    bh,BYTE PTR [ecx+0x6502e068]
6500d744:	movzx  ecx,BYTE PTR [esp+0x29]
6500d749:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d750:	xor    esi,ebx
6500d752:	shl    esi,0x8
6500d755:	xor    esi,ecx
6500d757:	mov    ecx,DWORD PTR [esp+0x18]
6500d75b:	mov    edi,ecx
6500d75d:	shl    esi,0x8
6500d760:	and    edi,0xff
6500d766:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500d76d:	xor    esi,edi
6500d76f:	xor    esi,DWORD PTR [eax]
6500d771:	mov    edi,DWORD PTR [esp+0x28]
6500d775:	mov    DWORD PTR [esp+0x1c],esi
6500d779:	mov    esi,DWORD PTR [esp+0x14]
6500d77d:	shr    ecx,0x18
6500d780:	shr    esi,0x10
6500d783:	and    esi,0xff
6500d789:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d790:	xor    ebx,ebx
6500d792:	mov    bh,BYTE PTR [ecx+0x6502e068]
6500d798:	movzx  ecx,BYTE PTR [esp+0x25]
6500d79d:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d7a4:	xor    esi,ebx
6500d7a6:	shl    esi,0x8
6500d7a9:	xor    esi,ecx
6500d7ab:	mov    ecx,edi
6500d7ad:	and    ecx,0xff
6500d7b3:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d7ba:	shl    esi,0x8
6500d7bd:	xor    esi,ecx
6500d7bf:	xor    esi,DWORD PTR [eax+0x4]
6500d7c2:	mov    ecx,DWORD PTR [esp+0x18]
6500d7c6:	shr    ecx,0x10
6500d7c9:	xor    ebx,ebx
6500d7cb:	add    eax,0x4
6500d7ce:	shr    edi,0x18
6500d7d1:	mov    bh,BYTE PTR [edi+0x6502e068]
6500d7d7:	and    ecx,0xff
6500d7dd:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d7e4:	mov    DWORD PTR [esp+0x10],esi
6500d7e8:	movzx  esi,BYTE PTR [esp+0x15]
6500d7ed:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d7f4:	xor    ecx,ebx
6500d7f6:	shl    ecx,0x8
6500d7f9:	xor    ecx,esi
6500d7fb:	mov    esi,DWORD PTR [esp+0x24]
6500d7ff:	and    esi,0xff
6500d805:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d80c:	shl    ecx,0x8
6500d80f:	xor    ecx,esi
6500d811:	xor    ecx,DWORD PTR [eax+0x4]
6500d814:	mov    esi,DWORD PTR [esp+0x2c]
6500d818:	mov    eax,edx
6500d81a:	shr    eax,0x8
6500d81d:	mov    BYTE PTR [esi+0x1],al
6500d820:	mov    eax,edx
6500d822:	mov    BYTE PTR [esi],dl
6500d824:	shr    edx,0x18
6500d827:	shr    eax,0x10
6500d82a:	mov    BYTE PTR [esi+0x3],dl
6500d82d:	mov    BYTE PTR [esi+0x2],al
6500d830:	mov    eax,DWORD PTR [esp+0x1c]
6500d834:	mov    edx,eax
6500d836:	shr    edx,0x8
6500d839:	mov    BYTE PTR [esi+0x5],dl
6500d83c:	mov    BYTE PTR [esi+0x4],al
6500d83f:	mov    edx,eax
6500d841:	shr    edx,0x10
6500d844:	shr    eax,0x18
6500d847:	mov    BYTE PTR [esi+0x6],dl
6500d84a:	mov    BYTE PTR [esi+0x7],al
6500d84d:	mov    eax,DWORD PTR [esp+0x10]
6500d851:	mov    edx,eax
6500d853:	shr    edx,0x8
6500d856:	mov    BYTE PTR [esi+0x9],dl
6500d859:	mov    edx,eax
6500d85b:	mov    BYTE PTR [esi+0x8],al
6500d85e:	shr    edx,0x10
6500d861:	shr    eax,0x18
6500d864:	mov    BYTE PTR [esi+0xa],dl
6500d867:	mov    BYTE PTR [esi+0xb],al
6500d86a:	mov    eax,ecx
6500d86c:	mov    edx,ecx
6500d86e:	mov    BYTE PTR [esi+0xc],cl
6500d871:	shr    eax,0x8
6500d874:	shr    edx,0x10
6500d877:	pop    edi
6500d878:	shr    ecx,0x18
6500d87b:	mov    BYTE PTR [esi+0xd],al
6500d87e:	mov    BYTE PTR [esi+0xe],dl
6500d881:	mov    BYTE PTR [esi+0xf],cl
6500d884:	pop    esi
6500d885:	pop    ebp
6500d886:	pop    ebx
6500d887:	add    esp,0x10
6500d88a:	ret    
6500d88b:	int3   
6500d88c:	int3   
6500d88d:	int3   
6500d88e:	int3   
6500d88f:	int3   
6500d890:	sub    esp,0x30
6500d893:	mov    eax,ds:0x6502c09c
6500d898:	xor    eax,esp
6500d89a:	mov    DWORD PTR [esp+0x2c],eax
6500d89e:	cmp    DWORD PTR [esp+0x38],0x0
6500d8a3:	mov    eax,DWORD PTR [esp+0x34]
6500d8a7:	push   ebx
6500d8a8:	push   ebp
6500d8a9:	mov    ebp,DWORD PTR [esp+0x44]
6500d8ad:	push   esi
6500d8ae:	mov    esi,DWORD PTR [esp+0x4c]
6500d8b2:	push   edi
6500d8b3:	mov    edi,edx
6500d8b5:	mov    DWORD PTR [esp+0x24],eax
6500d8b9:	jne    0x6500d977
6500d8bf:	test   ecx,ecx
6500d8c1:	jle    0x6500da56
6500d8c7:	lea    eax,[ecx-0x1]
6500d8ca:	mov    ebx,ebp
6500d8cc:	shr    eax,0x4
6500d8cf:	sub    ebx,esi
6500d8d1:	add    eax,0x1
6500d8d4:	mov    DWORD PTR [esp+0x10],eax
6500d8d8:	mov    edx,DWORD PTR [edi+0x4]
6500d8db:	mov    ecx,DWORD PTR [edi]
6500d8dd:	mov    eax,DWORD PTR [edi+0x8]
6500d8e0:	push   esi
6500d8e1:	mov    DWORD PTR [esp+0x34],edx
6500d8e5:	mov    edx,DWORD PTR [esp+0x28]
6500d8e9:	mov    DWORD PTR [esp+0x30],ecx
6500d8ed:	mov    ecx,DWORD PTR [edi+0xc]
6500d8f0:	mov    DWORD PTR [esp+0x38],eax
6500d8f4:	push   0x0
6500d8f6:	push   edx
6500d8f7:	mov    eax,edi
6500d8f9:	mov    DWORD PTR [esp+0x44],ecx
6500d8fd:	call   0x6500ce40
6500d902:	mov    eax,esi
6500d904:	add    esp,0xc
6500d907:	lea    ecx,[ebp+0x2]
6500d90a:	mov    esi,0x4
6500d90f:	nop
6500d910:	movzx  edx,BYTE PTR [ebx+eax*1]
6500d914:	xor    BYTE PTR [eax],dl
6500d916:	movzx  edx,BYTE PTR [ecx-0x1]
6500d91a:	xor    BYTE PTR [eax+0x1],dl
6500d91d:	movzx  edx,BYTE PTR [ecx]
6500d920:	xor    BYTE PTR [eax+0x2],dl
6500d923:	movzx  edx,BYTE PTR [ecx+0x1]
6500d927:	xor    BYTE PTR [eax+0x3],dl
6500d92a:	add    eax,0x4
6500d92d:	add    ecx,0x4
6500d930:	sub    esi,0x1
6500d933:	jne    0x6500d910
6500d935:	mov    ecx,DWORD PTR [esp+0x2c]
6500d939:	mov    edx,DWORD PTR [esp+0x30]
6500d93d:	mov    DWORD PTR [ebp+0x0],ecx
6500d940:	mov    ecx,DWORD PTR [esp+0x34]
6500d944:	mov    DWORD PTR [ebp+0x4],edx
6500d947:	mov    edx,DWORD PTR [esp+0x38]
6500d94b:	add    edi,0x10
6500d94e:	sub    ebx,0x10
6500d951:	sub    DWORD PTR [esp+0x10],0x1
6500d956:	mov    DWORD PTR [ebp+0x8],ecx
6500d959:	mov    DWORD PTR [ebp+0xc],edx
6500d95c:	mov    esi,eax
6500d95e:	jne    0x6500d8d8
6500d964:	pop    edi
6500d965:	pop    esi
6500d966:	pop    ebp
6500d967:	pop    ebx
6500d968:	mov    ecx,DWORD PTR [esp+0x2c]
6500d96c:	xor    ecx,esp
6500d96e:	call   0x650127bc
6500d973:	add    esp,0x30
6500d976:	ret    
6500d977:	test   ecx,ecx
6500d979:	jle    0x6500da56
6500d97f:	mov    eax,ebp
6500d981:	sub    eax,esi
6500d983:	mov    DWORD PTR [esp+0x10],eax
6500d987:	mov    eax,ebp
6500d989:	sub    eax,edi
6500d98b:	mov    DWORD PTR [esp+0x14],eax
6500d98f:	lea    eax,[ecx-0x1]
6500d992:	shr    eax,0x4
6500d995:	add    eax,0x1
6500d998:	mov    DWORD PTR [esp+0x1c],eax
6500d99c:	lea    esp,[esp+0x0]
6500d9a0:	lea    eax,[ebp+0x3]
6500d9a3:	mov    edx,esi
6500d9a5:	sub    edx,edi
6500d9a7:	mov    DWORD PTR [esp+0x20],eax
6500d9ab:	lea    ecx,[esi+0x1]
6500d9ae:	mov    eax,edi
6500d9b0:	mov    DWORD PTR [esp+0x28],edx
6500d9b4:	mov    DWORD PTR [esp+0x18],0x4
6500d9bc:	jmp    0x6500d9c4
6500d9be:	mov    edi,edi
6500d9c0:	mov    edx,DWORD PTR [esp+0x28]
6500d9c4:	mov    ebx,DWORD PTR [esp+0x14]
6500d9c8:	movzx  ebx,BYTE PTR [eax+ebx*1]
6500d9cc:	xor    bl,BYTE PTR [eax]
6500d9ce:	add    eax,0x4
6500d9d1:	mov    BYTE PTR [edx+eax*1-0x4],bl
6500d9d5:	mov    edx,DWORD PTR [esp+0x10]
6500d9d9:	mov    dl,BYTE PTR [ecx+edx*1]
6500d9dc:	xor    dl,BYTE PTR [eax-0x3]
6500d9df:	add    ecx,0x4
6500d9e2:	mov    BYTE PTR [ecx-0x4],dl
6500d9e5:	movzx  ebx,BYTE PTR [eax-0x2]
6500d9e9:	mov    edx,DWORD PTR [esp+0x20]
6500d9ed:	xor    bl,BYTE PTR [edx-0x1]
6500d9f0:	add    edx,0x4
6500d9f3:	mov    BYTE PTR [ecx-0x3],bl
6500d9f6:	movzx  ebx,BYTE PTR [eax-0x1]
6500d9fa:	xor    bl,BYTE PTR [edx-0x4]
6500d9fd:	mov    DWORD PTR [esp+0x20],edx
6500da01:	mov    BYTE PTR [ecx-0x2],bl
6500da04:	mov    ebx,0x1
6500da09:	sub    DWORD PTR [esp+0x18],ebx
6500da0d:	jne    0x6500d9c0
6500da0f:	mov    eax,DWORD PTR [esp+0x48]
6500da13:	mov    ecx,DWORD PTR [esp+0x24]
6500da17:	push   esi
6500da18:	push   eax
6500da19:	push   ecx
6500da1a:	mov    eax,esi
6500da1c:	call   0x6500ce40
6500da21:	mov    edx,DWORD PTR [esi]
6500da23:	mov    DWORD PTR [ebp+0x0],edx
6500da26:	mov    eax,DWORD PTR [esi+0x4]
6500da29:	mov    DWORD PTR [ebp+0x4],eax
6500da2c:	mov    ecx,DWORD PTR [esi+0x8]
6500da2f:	mov    eax,0x10
6500da34:	sub    DWORD PTR [esp+0x20],eax
6500da38:	sub    DWORD PTR [esp+0x1c],eax
6500da3c:	mov    DWORD PTR [ebp+0x8],ecx
6500da3f:	mov    edx,DWORD PTR [esi+0xc]
6500da42:	add    esp,0xc
6500da45:	add    edi,eax
6500da47:	add    esi,eax
6500da49:	sub    DWORD PTR [esp+0x1c],ebx
6500da4d:	mov    DWORD PTR [ebp+0xc],edx
6500da50:	jne    0x6500d9a0
6500da56:	mov    ecx,DWORD PTR [esp+0x3c]
6500da5a:	pop    edi
6500da5b:	pop    esi
6500da5c:	pop    ebp
6500da5d:	pop    ebx
6500da5e:	xor    ecx,esp
6500da60:	call   0x650127bc
6500da65:	add    esp,0x30
6500da68:	ret    
6500da69:	int3   
6500da6a:	int3   
6500da6b:	int3   
6500da6c:	int3   
6500da6d:	int3   
6500da6e:	int3   
6500da6f:	int3   
6500da70:	push   0xffffffff
6500da72:	push   0x650221ab
6500da77:	mov    eax,fs:0x0
6500da7d:	push   eax
6500da7e:	sub    esp,0x138
6500da84:	mov    eax,ds:0x6502c09c
6500da89:	xor    eax,esp
6500da8b:	mov    DWORD PTR [esp+0x134],eax
6500da92:	push   ebp
6500da93:	push   esi
6500da94:	push   edi
6500da95:	mov    eax,ds:0x6502c09c
6500da9a:	xor    eax,esp
6500da9c:	push   eax
6500da9d:	lea    eax,[esp+0x148]
6500daa4:	mov    fs:0x0,eax
6500daaa:	mov    ebp,DWORD PTR [esp+0x15c]
6500dab1:	mov    eax,DWORD PTR [esp+0x158]
6500dab8:	mov    DWORD PTR [esp+0x14],eax
6500dabc:	lea    esi,[ebp+0x8]
6500dabf:	mov    eax,esi
6500dac1:	and    eax,0xf
6500dac4:	mov    DWORD PTR [esp+0x18],ecx
6500dac8:	mov    DWORD PTR [esp+0x10],0x0
6500dad0:	je     0x6500dadb
6500dad2:	mov    edx,0x10
6500dad7:	sub    edx,eax
6500dad9:	add    esi,edx
6500dadb:	push   esi
6500dadc:	call   0x65011f5d
6500dae1:	mov    edi,eax
6500dae3:	mov    DWORD PTR [esp+0x14],edi
6500dae7:	push   esi
6500dae8:	mov    DWORD PTR [esp+0x158],0x0
6500daf3:	call   0x65011f5d
6500daf8:	push   esi
6500daf9:	push   0x0
6500dafb:	push   edi
6500dafc:	mov    DWORD PTR [ebx],eax
6500dafe:	call   0x65012e40
6500db03:	mov    eax,DWORD PTR [esp+0x28]
6500db07:	push   ebp
6500db08:	push   eax
6500db09:	lea    ecx,[edi+0x8]
6500db0c:	mov    DWORD PTR [edi],0x52514f4b
6500db12:	push   ecx
6500db13:	mov    DWORD PTR [edi+0x4],ebp
6500db16:	call   0x65014060
6500db1b:	xor    eax,eax
6500db1d:	mov    DWORD PTR [esp+0x154],eax
6500db24:	mov    DWORD PTR [esp+0x158],eax
6500db2b:	mov    DWORD PTR [esp+0x15c],eax
6500db32:	mov    DWORD PTR [esp+0x160],eax
6500db39:	lea    eax,[esp+0x3c]
6500db3d:	call   0x6500c750
6500db42:	mov    eax,DWORD PTR [ebx]
6500db44:	push   eax
6500db45:	lea    edx,[esp+0x158]
6500db4c:	push   edx
6500db4d:	lea    eax,[esp+0x44]
6500db51:	push   0x1
6500db53:	push   eax
6500db54:	mov    edx,edi
6500db56:	mov    ecx,esi
6500db58:	call   0x6500d890
6500db5d:	mov    ecx,DWORD PTR [esp+0x48]
6500db61:	push   0x0
6500db63:	mov    DWORD PTR [ecx],esi
6500db65:	call   0x65011f62
6500db6a:	push   edi
6500db6b:	call   0x65011f62
6500db70:	add    esp,0x38
6500db73:	mov    eax,ebx
6500db75:	mov    ecx,DWORD PTR [esp+0x148]
6500db7c:	mov    DWORD PTR fs:0x0,ecx
6500db83:	pop    ecx
6500db84:	pop    edi
6500db85:	pop    esi
6500db86:	pop    ebp
6500db87:	mov    ecx,DWORD PTR [esp+0x134]
6500db8e:	xor    ecx,esp
6500db90:	call   0x650127bc
6500db95:	add    esp,0x144
6500db9b:	ret    
6500db9c:	int3   
6500db9d:	int3   
6500db9e:	int3   
6500db9f:	int3   
6500dba0:	sub    esp,0x13c
6500dba6:	mov    eax,ds:0x6502c09c
6500dbab:	xor    eax,esp
6500dbad:	mov    DWORD PTR [esp+0x134],eax
6500dbb4:	mov    eax,DWORD PTR [esp+0x144]
6500dbbb:	push   ebp
6500dbbc:	mov    ebp,DWORD PTR [esp+0x144]
6500dbc3:	mov    DWORD PTR [esp+0x8],eax
6500dbc7:	xor    eax,eax
6500dbc9:	test   bl,0xf
6500dbcc:	push   esi
6500dbcd:	mov    DWORD PTR [esp+0x8],eax
6500dbd1:	je     0x6500dbdf
6500dbd3:	mov    DWORD PTR [esp+0x8],eax
6500dbd7:	mov    DWORD PTR [edi],eax
6500dbd9:	push   eax
6500dbda:	jmp    0x6500dc7f
6500dbdf:	push   ebx
6500dbe0:	call   0x65011f5d
6500dbe5:	mov    esi,eax
6500dbe7:	xor    eax,eax
6500dbe9:	mov    DWORD PTR [esp+0x130],eax
6500dbf0:	mov    DWORD PTR [esp+0x134],eax
6500dbf7:	mov    DWORD PTR [esp+0x138],eax
6500dbfe:	mov    DWORD PTR [esp+0x13c],eax
6500dc05:	add    esp,0x4
6500dc08:	lea    eax,[esp+0x10]
6500dc0c:	call   0x6500cc60
6500dc11:	push   esi
6500dc12:	lea    ecx,[esp+0x130]
6500dc19:	push   ecx
6500dc1a:	lea    edx,[esp+0x18]
6500dc1e:	push   0x0
6500dc20:	push   edx
6500dc21:	mov    edx,ebp
6500dc23:	mov    ecx,ebx
6500dc25:	call   0x6500d890
6500dc2a:	add    esp,0x10
6500dc2d:	cmp    DWORD PTR [esi],0x52534f4b
6500dc33:	je     0x6500dc5a
6500dc35:	push   0x0
6500dc37:	mov    DWORD PTR [esp+0xc],0x0
6500dc3f:	mov    DWORD PTR [edi],0x0
6500dc45:	call   0x65011f62
6500dc4a:	add    esp,0x4
6500dc4d:	push   0x0
6500dc4f:	call   0x65011f62
6500dc54:	add    esp,0x4
6500dc57:	push   esi
6500dc58:	jmp    0x6500dc7f
6500dc5a:	mov    eax,DWORD PTR [esi+0x4]
6500dc5d:	mov    ecx,DWORD PTR [esp+0xc]
6500dc61:	push   eax
6500dc62:	lea    edx,[esi+0x8]
6500dc65:	push   edx
6500dc66:	push   esi
6500dc67:	mov    DWORD PTR [ecx],eax
6500dc69:	call   0x65013780
6500dc6e:	add    esp,0xc
6500dc71:	push   0x0
6500dc73:	mov    DWORD PTR [edi],esi
6500dc75:	call   0x65011f62
6500dc7a:	add    esp,0x4
6500dc7d:	push   0x0
6500dc7f:	call   0x65011f62
6500dc84:	mov    ecx,DWORD PTR [esp+0x140]
6500dc8b:	add    esp,0x4
6500dc8e:	pop    esi
6500dc8f:	pop    ebp
6500dc90:	xor    ecx,esp
6500dc92:	mov    eax,edi
6500dc94:	call   0x650127bc
6500dc99:	add    esp,0x13c
6500dc9f:	ret    
6500dca0:	push   esi
6500dca1:	push   0x0
6500dca3:	push   0x1
6500dca5:	push   0x65030298
6500dcaa:	call   DWORD PTR ds:0x6502408c
6500dcb0:	test   eax,eax
6500dcb2:	jne    0x6500dd0c
6500dcb4:	push   0x6502842c
6500dcb9:	push   0xc
6500dcbb:	push   0x6502846c
6500dcc0:	call   0x65006a80
6500dcc5:	push   0x6502847c
6500dcca:	push   0x8
6500dccc:	push   0x650284a4
6500dcd1:	mov    esi,eax
6500dcd3:	call   0x65006d70
6500dcd8:	add    esp,0x18
6500dcdb:	push   eax
6500dcdc:	call   DWORD PTR ds:0x65024018
6500dce2:	add    DWORD PTR ds:0x6502d37c,0x1
6500dce9:	test   eax,eax
6500dceb:	je     0x6500dd03
6500dced:	push   esi
6500dcee:	push   eax
6500dcef:	call   DWORD PTR ds:0x65024014
6500dcf5:	add    DWORD PTR ds:0x6502d380,0x1
6500dcfc:	mov    ds:0x65030374,eax
6500dd01:	pop    esi
6500dd02:	ret    
6500dd03:	xor    eax,eax
6500dd05:	mov    ds:0x65030374,eax
6500dd0a:	pop    esi
6500dd0b:	ret    
6500dd0c:	mov    eax,ds:0x65030374
6500dd11:	pop    esi
6500dd12:	ret    
6500dd13:	int3   
6500dd14:	int3   
6500dd15:	int3   
6500dd16:	int3   
6500dd17:	int3   
6500dd18:	int3   
6500dd19:	int3   
6500dd1a:	int3   
6500dd1b:	int3   
6500dd1c:	int3   
6500dd1d:	int3   
6500dd1e:	int3   
6500dd1f:	int3   
6500dd20:	push   ebp
6500dd21:	mov    ebp,esp
6500dd23:	and    esp,0xfffffff8
6500dd26:	push   ecx
6500dd27:	push   esi
6500dd28:	push   0x0
6500dd2a:	push   0x1
6500dd2c:	push   0x6503029c
6500dd31:	call   DWORD PTR ds:0x6502408c
6500dd37:	test   eax,eax
6500dd39:	jne    0x6500dd99
6500dd3b:	push   0x650284b8
6500dd40:	push   0xe
6500dd42:	push   0x650284e0
6500dd47:	call   0x65006a80
6500dd4c:	push   0x650284f0
6500dd51:	push   0x8
6500dd53:	push   0x650284a4
6500dd58:	mov    esi,eax
6500dd5a:	call   0x65006d70
6500dd5f:	add    esp,0x18
6500dd62:	push   eax
6500dd63:	call   DWORD PTR ds:0x65024018
6500dd69:	add    DWORD PTR ds:0x6502d37c,0x1
6500dd70:	test   eax,eax
6500dd72:	je     0x6500dd8d
6500dd74:	push   esi
6500dd75:	push   eax
6500dd76:	call   DWORD PTR ds:0x65024014
6500dd7c:	add    DWORD PTR ds:0x6502d380,0x1
6500dd83:	mov    ds:0x65030378,eax
6500dd88:	pop    esi
6500dd89:	mov    esp,ebp
6500dd8b:	pop    ebp
6500dd8c:	ret    
6500dd8d:	xor    eax,eax
6500dd8f:	mov    ds:0x65030378,eax
6500dd94:	pop    esi
6500dd95:	mov    esp,ebp
6500dd97:	pop    ebp
6500dd98:	ret    
6500dd99:	mov    eax,ds:0x65030378
6500dd9e:	pop    esi
6500dd9f:	mov    esp,ebp
6500dda1:	pop    ebp
6500dda2:	ret    
6500dda3:	int3   
6500dda4:	int3   
6500dda5:	int3   
6500dda6:	int3   
6500dda7:	int3   
6500dda8:	int3   
6500dda9:	int3   
6500ddaa:	int3   
6500ddab:	int3   
6500ddac:	int3   
6500ddad:	int3   
6500ddae:	int3   
6500ddaf:	int3   
6500ddb0:	push   ebp
6500ddb1:	mov    ebp,esp
6500ddb3:	and    esp,0xfffffff8
6500ddb6:	push   ecx
6500ddb7:	push   esi
6500ddb8:	push   0x0
6500ddba:	push   0x1
6500ddbc:	push   0x650302a0
6500ddc1:	call   DWORD PTR ds:0x6502408c
6500ddc7:	test   eax,eax
6500ddc9:	jne    0x6500de29
6500ddcb:	push   0x65028518
6500ddd0:	push   0xf
6500ddd2:	push   0x65028550
6500ddd7:	call   0x65006a80
6500dddc:	push   0x65028560
6500dde1:	push   0x8
6500dde3:	push   0x650284a4
6500dde8:	mov    esi,eax
6500ddea:	call   0x65006d70
6500ddef:	add    esp,0x18
6500ddf2:	push   eax
6500ddf3:	call   DWORD PTR ds:0x65024018
6500ddf9:	add    DWORD PTR ds:0x6502d37c,0x1
6500de00:	test   eax,eax
6500de02:	je     0x6500de1d
6500de04:	push   esi
6500de05:	push   eax
6500de06:	call   DWORD PTR ds:0x65024014
6500de0c:	add    DWORD PTR ds:0x6502d380,0x1
6500de13:	mov    ds:0x6503037c,eax
6500de18:	pop    esi
6500de19:	mov    esp,ebp
6500de1b:	pop    ebp
6500de1c:	ret    
6500de1d:	xor    eax,eax
6500de1f:	mov    ds:0x6503037c,eax
6500de24:	pop    esi
6500de25:	mov    esp,ebp
6500de27:	pop    ebp
6500de28:	ret    
6500de29:	mov    eax,ds:0x6503037c
6500de2e:	pop    esi
6500de2f:	mov    esp,ebp
6500de31:	pop    ebp
6500de32:	ret    
6500de33:	int3   
6500de34:	int3   
6500de35:	int3   
6500de36:	int3   
6500de37:	int3   
6500de38:	int3   
6500de39:	int3   
6500de3a:	int3   
6500de3b:	int3   
6500de3c:	int3   
6500de3d:	int3   
6500de3e:	int3   
6500de3f:	int3   
6500de40:	push   ebp
6500de41:	mov    ebp,esp
6500de43:	and    esp,0xfffffff8
6500de46:	push   ecx
6500de47:	push   esi
6500de48:	push   0x0
6500de4a:	push   0x1
6500de4c:	push   0x650302a4
6500de51:	call   DWORD PTR ds:0x6502408c
6500de57:	test   eax,eax
6500de59:	jne    0x6500deb9
6500de5b:	push   0x65028588
6500de60:	push   0xf
6500de62:	push   0x650285ac
6500de67:	call   0x65006a80
6500de6c:	push   0x650285bc
6500de71:	push   0x8
6500de73:	push   0x650284a4
6500de78:	mov    esi,eax
6500de7a:	call   0x65006d70
6500de7f:	add    esp,0x18
6500de82:	push   eax
6500de83:	call   DWORD PTR ds:0x65024018
6500de89:	add    DWORD PTR ds:0x6502d37c,0x1
6500de90:	test   eax,eax
6500de92:	je     0x6500dead
6500de94:	push   esi
6500de95:	push   eax
6500de96:	call   DWORD PTR ds:0x65024014
6500de9c:	add    DWORD PTR ds:0x6502d380,0x1
6500dea3:	mov    ds:0x65030380,eax
6500dea8:	pop    esi
6500dea9:	mov    esp,ebp
6500deab:	pop    ebp
6500deac:	ret    
6500dead:	xor    eax,eax
6500deaf:	mov    ds:0x65030380,eax
6500deb4:	pop    esi
6500deb5:	mov    esp,ebp
6500deb7:	pop    ebp
6500deb8:	ret    
6500deb9:	mov    eax,ds:0x65030380
6500debe:	pop    esi
6500debf:	mov    esp,ebp
6500dec1:	pop    ebp
6500dec2:	ret    
6500dec3:	int3   
6500dec4:	int3   
6500dec5:	int3   
6500dec6:	int3   
6500dec7:	int3   
6500dec8:	int3   
6500dec9:	int3   
6500deca:	int3   
6500decb:	int3   
6500decc:	int3   
6500decd:	int3   
6500dece:	int3   
6500decf:	int3   
6500ded0:	push   ebp
6500ded1:	mov    ebp,esp
6500ded3:	and    esp,0xfffffff8
6500ded6:	push   ecx
6500ded7:	push   esi
6500ded8:	push   0x0
6500deda:	push   0x1
6500dedc:	push   0x650302a8
6500dee1:	call   DWORD PTR ds:0x6502408c
6500dee7:	test   eax,eax
6500dee9:	jne    0x6500df49
6500deeb:	push   0x650285f4
6500def0:	push   0x13
6500def2:	push   0x65028618
6500def7:	call   0x65006a80
6500defc:	push   0x6502862c
6500df01:	push   0x8
6500df03:	push   0x6502866c
6500df08:	mov    esi,eax
6500df0a:	call   0x65006d70
6500df0f:	add    esp,0x18
6500df12:	push   eax
6500df13:	call   DWORD PTR ds:0x65024018
6500df19:	add    DWORD PTR ds:0x6502d37c,0x1
6500df20:	test   eax,eax
6500df22:	je     0x6500df3d
6500df24:	push   esi
6500df25:	push   eax
6500df26:	call   DWORD PTR ds:0x65024014
6500df2c:	add    DWORD PTR ds:0x6502d380,0x1
6500df33:	mov    ds:0x65030384,eax
6500df38:	pop    esi
6500df39:	mov    esp,ebp
6500df3b:	pop    ebp
6500df3c:	ret    
6500df3d:	xor    eax,eax
6500df3f:	mov    ds:0x65030384,eax
6500df44:	pop    esi
6500df45:	mov    esp,ebp
6500df47:	pop    ebp
6500df48:	ret    
6500df49:	mov    eax,ds:0x65030384
6500df4e:	pop    esi
6500df4f:	mov    esp,ebp
6500df51:	pop    ebp
6500df52:	ret    
6500df53:	int3   
6500df54:	int3   
6500df55:	int3   
6500df56:	int3   
6500df57:	int3   
6500df58:	int3   
6500df59:	int3   
6500df5a:	int3   
6500df5b:	int3   
6500df5c:	int3   
6500df5d:	int3   
6500df5e:	int3   
6500df5f:	int3   
6500df60:	push   ebp
6500df61:	mov    ebp,esp
6500df63:	and    esp,0xfffffff8
6500df66:	push   ecx
6500df67:	push   esi
6500df68:	push   0x0
6500df6a:	push   0x1
6500df6c:	push   0x650302ac
6500df71:	call   DWORD PTR ds:0x6502408c
6500df77:	test   eax,eax
6500df79:	jne    0x6500dfd9
6500df7b:	push   0x65028680
6500df80:	push   0xe
6500df82:	push   0x650286a8
6500df87:	call   0x65006a80
6500df8c:	push   0x650286b8
6500df91:	push   0x8
6500df93:	push   0x6502866c
6500df98:	mov    esi,eax
6500df9a:	call   0x65006d70
6500df9f:	add    esp,0x18
6500dfa2:	push   eax
6500dfa3:	call   DWORD PTR ds:0x65024018
6500dfa9:	add    DWORD PTR ds:0x6502d37c,0x1
6500dfb0:	test   eax,eax
6500dfb2:	je     0x6500dfcd
6500dfb4:	push   esi
6500dfb5:	push   eax
6500dfb6:	call   DWORD PTR ds:0x65024014
6500dfbc:	add    DWORD PTR ds:0x6502d380,0x1
6500dfc3:	mov    ds:0x65030388,eax
6500dfc8:	pop    esi
6500dfc9:	mov    esp,ebp
6500dfcb:	pop    ebp
6500dfcc:	ret    
6500dfcd:	xor    eax,eax
6500dfcf:	mov    ds:0x65030388,eax
6500dfd4:	pop    esi
6500dfd5:	mov    esp,ebp
6500dfd7:	pop    ebp
6500dfd8:	ret    
6500dfd9:	mov    eax,ds:0x65030388
6500dfde:	pop    esi
6500dfdf:	mov    esp,ebp
6500dfe1:	pop    ebp
6500dfe2:	ret    
6500dfe3:	int3   
6500dfe4:	int3   
6500dfe5:	int3   
6500dfe6:	int3   
6500dfe7:	int3   
6500dfe8:	int3   
6500dfe9:	int3   
6500dfea:	int3   
6500dfeb:	int3   
6500dfec:	int3   
6500dfed:	int3   
6500dfee:	int3   
6500dfef:	int3   
6500dff0:	int3   
6500dff1:	int3   
6500dff2:	int3   
6500dff3:	int3   
6500dff4:	int3   
6500dff5:	int3   
6500dff6:	int3   
6500dff7:	int3   
6500dff8:	int3   
6500dff9:	int3   
6500dffa:	int3   
6500dffb:	int3   
6500dffc:	int3   
6500dffd:	int3   
6500dffe:	int3   
6500dfff:	int3   
6500e000:	push   ebp
6500e001:	mov    ebp,esp
6500e003:	and    esp,0xfffffff8
6500e006:	push   ecx
6500e007:	push   esi
6500e008:	push   0x0
6500e00a:	push   0x1
6500e00c:	push   0x650302b0
6500e011:	call   DWORD PTR ds:0x6502408c
6500e017:	test   eax,eax
6500e019:	jne    0x6500e079
6500e01b:	push   0x650286e0
6500e020:	push   0xb
6500e022:	push   0x65028718
6500e027:	call   0x65006a80
6500e02c:	push   0x65028724
6500e031:	push   0x8
6500e033:	push   0x6502866c
6500e038:	mov    esi,eax
6500e03a:	call   0x65006d70
6500e03f:	add    esp,0x18
6500e042:	push   eax
6500e043:	call   DWORD PTR ds:0x65024018
6500e049:	add    DWORD PTR ds:0x6502d37c,0x1
6500e050:	test   eax,eax
6500e052:	je     0x6500e06d
6500e054:	push   esi
6500e055:	push   eax
6500e056:	call   DWORD PTR ds:0x65024014
6500e05c:	add    DWORD PTR ds:0x6502d380,0x1
6500e063:	mov    ds:0x6503038c,eax
6500e068:	pop    esi
6500e069:	mov    esp,ebp
6500e06b:	pop    ebp
6500e06c:	ret    
6500e06d:	xor    eax,eax
6500e06f:	mov    ds:0x6503038c,eax
6500e074:	pop    esi
6500e075:	mov    esp,ebp
6500e077:	pop    ebp
6500e078:	ret    
6500e079:	mov    eax,ds:0x6503038c
6500e07e:	pop    esi
6500e07f:	mov    esp,ebp
6500e081:	pop    ebp
6500e082:	ret    
6500e083:	int3   
6500e084:	int3   
6500e085:	int3   
6500e086:	int3   
6500e087:	int3   
6500e088:	int3   
6500e089:	int3   
6500e08a:	int3   
6500e08b:	int3   
6500e08c:	int3   
6500e08d:	int3   
6500e08e:	int3   
6500e08f:	int3   
6500e090:	push   ebp
6500e091:	mov    ebp,esp
6500e093:	and    esp,0xfffffff8
6500e096:	push   ecx
6500e097:	push   esi
6500e098:	push   0x0
6500e09a:	push   0x1
6500e09c:	push   0x650302b4
6500e0a1:	call   DWORD PTR ds:0x6502408c
6500e0a7:	test   eax,eax
6500e0a9:	jne    0x6500e109
6500e0ab:	push   0x65028764
6500e0b0:	push   0xb
6500e0b2:	push   0x6502878c
6500e0b7:	call   0x65006a80
6500e0bc:	push   0x65028798
6500e0c1:	push   0x8
6500e0c3:	push   0x6502866c
6500e0c8:	mov    esi,eax
6500e0ca:	call   0x65006d70
6500e0cf:	add    esp,0x18
6500e0d2:	push   eax
6500e0d3:	call   DWORD PTR ds:0x65024018
6500e0d9:	add    DWORD PTR ds:0x6502d37c,0x1
6500e0e0:	test   eax,eax
6500e0e2:	je     0x6500e0fd
6500e0e4:	push   esi
6500e0e5:	push   eax
6500e0e6:	call   DWORD PTR ds:0x65024014
6500e0ec:	add    DWORD PTR ds:0x6502d380,0x1
6500e0f3:	mov    ds:0x65030390,eax
6500e0f8:	pop    esi
6500e0f9:	mov    esp,ebp
6500e0fb:	pop    ebp
6500e0fc:	ret    
6500e0fd:	xor    eax,eax
6500e0ff:	mov    ds:0x65030390,eax
6500e104:	pop    esi
6500e105:	mov    esp,ebp
6500e107:	pop    ebp
6500e108:	ret    
6500e109:	mov    eax,ds:0x65030390
6500e10e:	pop    esi
6500e10f:	mov    esp,ebp
6500e111:	pop    ebp
6500e112:	ret    
6500e113:	int3   
6500e114:	int3   
6500e115:	int3   
6500e116:	int3   
6500e117:	int3   
6500e118:	int3   
6500e119:	int3   
6500e11a:	int3   
6500e11b:	int3   
6500e11c:	int3   
6500e11d:	int3   
6500e11e:	int3   
6500e11f:	int3   
6500e120:	push   ebp
6500e121:	mov    ebp,esp
6500e123:	and    esp,0xfffffff8
6500e126:	push   ecx
6500e127:	push   esi
6500e128:	push   0x0
6500e12a:	push   0x1
6500e12c:	push   0x650302b8
6500e131:	call   DWORD PTR ds:0x6502408c
6500e137:	test   eax,eax
6500e139:	jne    0x6500e199
6500e13b:	push   0x650287c0
6500e140:	push   0xb
6500e142:	push   0x650287ec
6500e147:	call   0x65006a80
6500e14c:	push   0x650287f8
6500e151:	push   0x8
6500e153:	push   0x6502866c
6500e158:	mov    esi,eax
6500e15a:	call   0x65006d70
6500e15f:	add    esp,0x18
6500e162:	push   eax
6500e163:	call   DWORD PTR ds:0x65024018
6500e169:	add    DWORD PTR ds:0x6502d37c,0x1
6500e170:	test   eax,eax
6500e172:	je     0x6500e18d
6500e174:	push   esi
6500e175:	push   eax
6500e176:	call   DWORD PTR ds:0x65024014
6500e17c:	add    DWORD PTR ds:0x6502d380,0x1
6500e183:	mov    ds:0x65030394,eax
6500e188:	pop    esi
6500e189:	mov    esp,ebp
6500e18b:	pop    ebp
6500e18c:	ret    
6500e18d:	xor    eax,eax
6500e18f:	mov    ds:0x65030394,eax
6500e194:	pop    esi
6500e195:	mov    esp,ebp
6500e197:	pop    ebp
6500e198:	ret    
6500e199:	mov    eax,ds:0x65030394
6500e19e:	pop    esi
6500e19f:	mov    esp,ebp
6500e1a1:	pop    ebp
6500e1a2:	ret    
6500e1a3:	int3   
6500e1a4:	int3   
6500e1a5:	int3   
6500e1a6:	int3   
6500e1a7:	int3   
6500e1a8:	int3   
6500e1a9:	int3   
6500e1aa:	int3   
6500e1ab:	int3   
6500e1ac:	int3   
6500e1ad:	int3   
6500e1ae:	int3   
6500e1af:	int3   
6500e1b0:	push   esi
6500e1b1:	push   0x0
6500e1b3:	push   0x1
6500e1b5:	push   0x650302bc
6500e1ba:	call   DWORD PTR ds:0x6502408c
6500e1c0:	test   eax,eax
6500e1c2:	jne    0x6500e21c
6500e1c4:	push   0x65028830
6500e1c9:	push   0xc
6500e1cb:	push   0x65028858
6500e1d0:	call   0x65006a80
6500e1d5:	push   0x65028868
6500e1da:	push   0x8
6500e1dc:	push   0x6502866c
6500e1e1:	mov    esi,eax
6500e1e3:	call   0x65006d70
6500e1e8:	add    esp,0x18
6500e1eb:	push   eax
6500e1ec:	call   DWORD PTR ds:0x65024018
6500e1f2:	add    DWORD PTR ds:0x6502d37c,0x1
6500e1f9:	test   eax,eax
6500e1fb:	je     0x6500e213
6500e1fd:	push   esi
6500e1fe:	push   eax
6500e1ff:	call   DWORD PTR ds:0x65024014
6500e205:	add    DWORD PTR ds:0x6502d380,0x1
6500e20c:	mov    ds:0x65030398,eax
6500e211:	pop    esi
6500e212:	ret    
6500e213:	xor    eax,eax
6500e215:	mov    ds:0x65030398,eax
6500e21a:	pop    esi
6500e21b:	ret    
6500e21c:	mov    eax,ds:0x65030398
6500e221:	pop    esi
6500e222:	ret    
6500e223:	int3   
6500e224:	int3   
6500e225:	int3   
6500e226:	int3   
6500e227:	int3   
6500e228:	int3   
6500e229:	int3   
6500e22a:	int3   
6500e22b:	int3   
6500e22c:	int3   
6500e22d:	int3   
6500e22e:	int3   
6500e22f:	int3   
6500e230:	push   esi
6500e231:	push   0x0
6500e233:	push   0x1
6500e235:	push   0x650302c0
6500e23a:	call   DWORD PTR ds:0x6502408c
6500e240:	test   eax,eax
6500e242:	jne    0x6500e29c
6500e244:	push   0x650288a8
6500e249:	push   0x10
6500e24b:	push   0x650288e0
6500e250:	call   0x65006a80
6500e255:	push   0x650288f4
6500e25a:	push   0x8
6500e25c:	push   0x6502866c
6500e261:	mov    esi,eax
6500e263:	call   0x65006d70
6500e268:	add    esp,0x18
6500e26b:	push   eax
6500e26c:	call   DWORD PTR ds:0x65024018
6500e272:	add    DWORD PTR ds:0x6502d37c,0x1
6500e279:	test   eax,eax
6500e27b:	je     0x6500e293
6500e27d:	push   esi
6500e27e:	push   eax
6500e27f:	call   DWORD PTR ds:0x65024014
6500e285:	add    DWORD PTR ds:0x6502d380,0x1
6500e28c:	mov    ds:0x6503039c,eax
6500e291:	pop    esi
6500e292:	ret    
6500e293:	xor    eax,eax
6500e295:	mov    ds:0x6503039c,eax
6500e29a:	pop    esi
6500e29b:	ret    
6500e29c:	mov    eax,ds:0x6503039c
6500e2a1:	pop    esi
6500e2a2:	ret    
6500e2a3:	int3   
6500e2a4:	int3   
6500e2a5:	int3   
6500e2a6:	int3   
6500e2a7:	int3   
6500e2a8:	int3   
6500e2a9:	int3   
6500e2aa:	int3   
6500e2ab:	int3   
6500e2ac:	int3   
6500e2ad:	int3   
6500e2ae:	int3   
6500e2af:	int3   
6500e2b0:	push   esi
6500e2b1:	push   0x0
6500e2b3:	push   0x1
6500e2b5:	push   0x650302c4
6500e2ba:	call   DWORD PTR ds:0x6502408c
6500e2c0:	test   eax,eax
6500e2c2:	jne    0x6500e31c
6500e2c4:	push   0x65028928
6500e2c9:	push   0x10
6500e2cb:	push   0x65028954
6500e2d0:	call   0x65006a80
6500e2d5:	push   0x65028968
6500e2da:	push   0x8
6500e2dc:	push   0x6502866c
6500e2e1:	mov    esi,eax
6500e2e3:	call   0x65006d70
6500e2e8:	add    esp,0x18
6500e2eb:	push   eax
6500e2ec:	call   DWORD PTR ds:0x65024018
6500e2f2:	add    DWORD PTR ds:0x6502d37c,0x1
6500e2f9:	test   eax,eax
6500e2fb:	je     0x6500e313
6500e2fd:	push   esi
6500e2fe:	push   eax
6500e2ff:	call   DWORD PTR ds:0x65024014
6500e305:	add    DWORD PTR ds:0x6502d380,0x1
6500e30c:	mov    ds:0x650303a0,eax
6500e311:	pop    esi
6500e312:	ret    
6500e313:	xor    eax,eax
6500e315:	mov    ds:0x650303a0,eax
6500e31a:	pop    esi
6500e31b:	ret    
6500e31c:	mov    eax,ds:0x650303a0
6500e321:	pop    esi
6500e322:	ret    
6500e323:	int3   
6500e324:	int3   
6500e325:	int3   
6500e326:	int3   
6500e327:	int3   
6500e328:	int3   
6500e329:	int3   
6500e32a:	int3   
6500e32b:	int3   
6500e32c:	int3   
6500e32d:	int3   
6500e32e:	int3   
6500e32f:	int3   
6500e330:	push   ebp
6500e331:	mov    ebp,esp
6500e333:	and    esp,0xfffffff8
6500e336:	push   ecx
6500e337:	push   esi
6500e338:	push   0x0
6500e33a:	push   0x1
6500e33c:	push   0x650302c8
6500e341:	call   DWORD PTR ds:0x6502408c
6500e347:	test   eax,eax
6500e349:	jne    0x6500e3a9
6500e34b:	push   0x650289a8
6500e350:	push   0x15
6500e352:	push   0x650289d8
6500e357:	call   0x65006a80
6500e35c:	push   0x650289f0
6500e361:	push   0x8
6500e363:	push   0x6502866c
6500e368:	mov    esi,eax
6500e36a:	call   0x65006d70
6500e36f:	add    esp,0x18
6500e372:	push   eax
6500e373:	call   DWORD PTR ds:0x65024018
6500e379:	add    DWORD PTR ds:0x6502d37c,0x1
6500e380:	test   eax,eax
6500e382:	je     0x6500e39d
6500e384:	push   esi
6500e385:	push   eax
6500e386:	call   DWORD PTR ds:0x65024014
6500e38c:	add    DWORD PTR ds:0x6502d380,0x1
6500e393:	mov    ds:0x650303a4,eax
6500e398:	pop    esi
6500e399:	mov    esp,ebp
6500e39b:	pop    ebp
6500e39c:	ret    
6500e39d:	xor    eax,eax
6500e39f:	mov    ds:0x650303a4,eax
6500e3a4:	pop    esi
6500e3a5:	mov    esp,ebp
6500e3a7:	pop    ebp
6500e3a8:	ret    
6500e3a9:	mov    eax,ds:0x650303a4
6500e3ae:	pop    esi
6500e3af:	mov    esp,ebp
6500e3b1:	pop    ebp
6500e3b2:	ret    
6500e3b3:	int3   
6500e3b4:	int3   
6500e3b5:	int3   
6500e3b6:	int3   
6500e3b7:	int3   
6500e3b8:	int3   
6500e3b9:	int3   
6500e3ba:	int3   
6500e3bb:	int3   
6500e3bc:	int3   
6500e3bd:	int3   
6500e3be:	int3   
6500e3bf:	int3   
6500e3c0:	push   ebp
6500e3c1:	mov    ebp,esp
6500e3c3:	and    esp,0xfffffff8
6500e3c6:	push   ecx
6500e3c7:	push   esi
6500e3c8:	push   0x0
6500e3ca:	push   0x1
6500e3cc:	push   0x650302cc
6500e3d1:	call   DWORD PTR ds:0x6502408c
6500e3d7:	test   eax,eax
6500e3d9:	jne    0x6500e439
6500e3db:	push   0x65028a14
6500e3e0:	push   0x18
6500e3e2:	push   0x65028a3c
6500e3e7:	call   0x65006a80
6500e3ec:	push   0x65028a58
6500e3f1:	push   0x8
6500e3f3:	push   0x6502866c
6500e3f8:	mov    esi,eax
6500e3fa:	call   0x65006d70
6500e3ff:	add    esp,0x18
6500e402:	push   eax
6500e403:	call   DWORD PTR ds:0x65024018
6500e409:	add    DWORD PTR ds:0x6502d37c,0x1
6500e410:	test   eax,eax
6500e412:	je     0x6500e42d
6500e414:	push   esi
6500e415:	push   eax
6500e416:	call   DWORD PTR ds:0x65024014
6500e41c:	add    DWORD PTR ds:0x6502d380,0x1
6500e423:	mov    ds:0x650303a8,eax
6500e428:	pop    esi
6500e429:	mov    esp,ebp
6500e42b:	pop    ebp
6500e42c:	ret    
6500e42d:	xor    eax,eax
6500e42f:	mov    ds:0x650303a8,eax
6500e434:	pop    esi
6500e435:	mov    esp,ebp
6500e437:	pop    ebp
6500e438:	ret    
6500e439:	mov    eax,ds:0x650303a8
6500e43e:	pop    esi
6500e43f:	mov    esp,ebp
6500e441:	pop    ebp
6500e442:	ret    
6500e443:	int3   
6500e444:	int3   
6500e445:	int3   
6500e446:	int3   
6500e447:	int3   
6500e448:	int3   
6500e449:	int3   
6500e44a:	int3   
6500e44b:	int3   
6500e44c:	int3   
6500e44d:	int3   
6500e44e:	int3   
6500e44f:	int3   
6500e450:	push   esi
6500e451:	push   0x0
6500e453:	push   0x1
6500e455:	push   0x650302d0
6500e45a:	call   DWORD PTR ds:0x6502408c
6500e460:	test   eax,eax
6500e462:	jne    0x6500e4bc
6500e464:	push   0x65028a90
6500e469:	push   0xf
6500e46b:	push   0x65028ac4
6500e470:	call   0x65006a80
6500e475:	push   0x65028ad4
6500e47a:	push   0x8
6500e47c:	push   0x6502866c
6500e481:	mov    esi,eax
6500e483:	call   0x65006d70
6500e488:	add    esp,0x18
6500e48b:	push   eax
6500e48c:	call   DWORD PTR ds:0x65024018
6500e492:	add    DWORD PTR ds:0x6502d37c,0x1
6500e499:	test   eax,eax
6500e49b:	je     0x6500e4b3
6500e49d:	push   esi
6500e49e:	push   eax
6500e49f:	call   DWORD PTR ds:0x65024014
6500e4a5:	add    DWORD PTR ds:0x6502d380,0x1
6500e4ac:	mov    ds:0x650303ac,eax
6500e4b1:	pop    esi
6500e4b2:	ret    
6500e4b3:	xor    eax,eax
6500e4b5:	mov    ds:0x650303ac,eax
6500e4ba:	pop    esi
6500e4bb:	ret    
6500e4bc:	mov    eax,ds:0x650303ac
6500e4c1:	pop    esi
6500e4c2:	ret    
6500e4c3:	int3   
6500e4c4:	int3   
6500e4c5:	int3   
6500e4c6:	int3   
6500e4c7:	int3   
6500e4c8:	int3   
6500e4c9:	int3   
6500e4ca:	int3   
6500e4cb:	int3   
6500e4cc:	int3   
6500e4cd:	int3   
6500e4ce:	int3   
6500e4cf:	int3   
6500e4d0:	push   ebp
6500e4d1:	mov    ebp,esp
6500e4d3:	and    esp,0xfffffff8
6500e4d6:	push   ecx
6500e4d7:	push   esi
6500e4d8:	push   0x0
6500e4da:	push   0x1
6500e4dc:	push   0x650302ec
6500e4e1:	call   DWORD PTR ds:0x6502408c
6500e4e7:	test   eax,eax
6500e4e9:	jne    0x6500e549
6500e4eb:	push   0x65028b04
6500e4f0:	push   0x19
6500e4f2:	push   0x65028b44
6500e4f7:	call   0x65006a80
6500e4fc:	push   0x65028b60
6500e501:	push   0x7
6500e503:	push   0x65028b84
6500e508:	mov    esi,eax
6500e50a:	call   0x65006d70
6500e50f:	add    esp,0x18
6500e512:	push   eax
6500e513:	call   DWORD PTR ds:0x65024018
6500e519:	add    DWORD PTR ds:0x6502d37c,0x1
6500e520:	test   eax,eax
6500e522:	je     0x6500e53d
6500e524:	push   esi
6500e525:	push   eax
6500e526:	call   DWORD PTR ds:0x65024014
6500e52c:	add    DWORD PTR ds:0x6502d380,0x1
6500e533:	mov    ds:0x650303b0,eax
6500e538:	pop    esi
6500e539:	mov    esp,ebp
6500e53b:	pop    ebp
6500e53c:	ret    
6500e53d:	xor    eax,eax
6500e53f:	mov    ds:0x650303b0,eax
6500e544:	pop    esi
6500e545:	mov    esp,ebp
6500e547:	pop    ebp
6500e548:	ret    
6500e549:	mov    eax,ds:0x650303b0
6500e54e:	pop    esi
6500e54f:	mov    esp,ebp
6500e551:	pop    ebp
6500e552:	ret    
6500e553:	int3   
6500e554:	int3   
6500e555:	int3   
6500e556:	int3   
6500e557:	int3   
6500e558:	int3   
6500e559:	int3   
6500e55a:	int3   
6500e55b:	int3   
6500e55c:	int3   
6500e55d:	int3   
6500e55e:	int3   
6500e55f:	int3   
6500e560:	push   ebp
6500e561:	mov    ebp,esp
6500e563:	and    esp,0xfffffff8
6500e566:	push   ecx
6500e567:	push   esi
6500e568:	push   0x0
6500e56a:	push   0x1
6500e56c:	push   0x650302f4
6500e571:	call   DWORD PTR ds:0x6502408c
6500e577:	test   eax,eax
6500e579:	jne    0x6500e5d9
6500e57b:	push   0x65028ba8
6500e580:	push   0x15
6500e582:	push   0x65028be8
6500e587:	call   0x65006a80
6500e58c:	push   0x65028c00
6500e591:	push   0x8
6500e593:	push   0x65028b94
6500e598:	mov    esi,eax
6500e59a:	call   0x65006d70
6500e59f:	add    esp,0x18
6500e5a2:	push   eax
6500e5a3:	call   DWORD PTR ds:0x65024018
6500e5a9:	add    DWORD PTR ds:0x6502d37c,0x1
6500e5b0:	test   eax,eax
6500e5b2:	je     0x6500e5cd
6500e5b4:	push   esi
6500e5b5:	push   eax
6500e5b6:	call   DWORD PTR ds:0x65024014
6500e5bc:	add    DWORD PTR ds:0x6502d380,0x1
6500e5c3:	mov    ds:0x650303b4,eax
6500e5c8:	pop    esi
6500e5c9:	mov    esp,ebp
6500e5cb:	pop    ebp
6500e5cc:	ret    
6500e5cd:	xor    eax,eax
6500e5cf:	mov    ds:0x650303b4,eax
6500e5d4:	pop    esi
6500e5d5:	mov    esp,ebp
6500e5d7:	pop    ebp
6500e5d8:	ret    
6500e5d9:	mov    eax,ds:0x650303b4
6500e5de:	pop    esi
6500e5df:	mov    esp,ebp
6500e5e1:	pop    ebp
6500e5e2:	ret    
6500e5e3:	int3   
6500e5e4:	int3   
6500e5e5:	int3   
6500e5e6:	int3   
6500e5e7:	int3   
6500e5e8:	int3   
6500e5e9:	int3   
6500e5ea:	int3   
6500e5eb:	int3   
6500e5ec:	int3   
6500e5ed:	int3   
6500e5ee:	int3   
6500e5ef:	int3   
6500e5f0:	push   ebp
6500e5f1:	mov    ebp,esp
6500e5f3:	and    esp,0xfffffff8
6500e5f6:	push   ecx
6500e5f7:	push   esi
6500e5f8:	push   0x0
6500e5fa:	push   0x1
6500e5fc:	push   0x650302f8
6500e601:	call   DWORD PTR ds:0x6502408c
6500e607:	test   eax,eax
6500e609:	jne    0x6500e669
6500e60b:	push   0x65028c34
6500e610:	push   0x15
6500e612:	push   0x65028c58
6500e617:	call   0x65006a80
6500e61c:	push   0x65028c70
6500e621:	push   0x8
6500e623:	push   0x65028b94
6500e628:	mov    esi,eax
6500e62a:	call   0x65006d70
6500e62f:	add    esp,0x18
6500e632:	push   eax
6500e633:	call   DWORD PTR ds:0x65024018
6500e639:	add    DWORD PTR ds:0x6502d37c,0x1
6500e640:	test   eax,eax
6500e642:	je     0x6500e65d
6500e644:	push   esi
6500e645:	push   eax
6500e646:	call   DWORD PTR ds:0x65024014
6500e64c:	add    DWORD PTR ds:0x6502d380,0x1
6500e653:	mov    ds:0x650303b8,eax
6500e658:	pop    esi
6500e659:	mov    esp,ebp
6500e65b:	pop    ebp
6500e65c:	ret    
6500e65d:	xor    eax,eax
6500e65f:	mov    ds:0x650303b8,eax
6500e664:	pop    esi
6500e665:	mov    esp,ebp
6500e667:	pop    ebp
6500e668:	ret    
6500e669:	mov    eax,ds:0x650303b8
6500e66e:	pop    esi
6500e66f:	mov    esp,ebp
6500e671:	pop    ebp
6500e672:	ret    
6500e673:	int3   
6500e674:	int3   
6500e675:	int3   
6500e676:	int3   
6500e677:	int3   
6500e678:	int3   
6500e679:	int3   
6500e67a:	int3   
6500e67b:	int3   
6500e67c:	int3   
6500e67d:	int3   
6500e67e:	int3   
6500e67f:	int3   
6500e680:	push   esi
6500e681:	push   0x0
6500e683:	push   0x1
6500e685:	push   0x650302fc
6500e68a:	call   DWORD PTR ds:0x6502408c
6500e690:	test   eax,eax
6500e692:	jne    0x6500e6ec
6500e694:	push   0x65028ca8
6500e699:	push   0x34
6500e69b:	push   0x65028ccc
6500e6a0:	call   0x65006a80
6500e6a5:	push   0x65028d04
6500e6aa:	push   0x8
6500e6ac:	push   0x65028b94
6500e6b1:	mov    esi,eax
6500e6b3:	call   0x65006d70
6500e6b8:	add    esp,0x18
6500e6bb:	push   eax
6500e6bc:	call   DWORD PTR ds:0x65024018
6500e6c2:	add    DWORD PTR ds:0x6502d37c,0x1
6500e6c9:	test   eax,eax
6500e6cb:	je     0x6500e6e3
6500e6cd:	push   esi
6500e6ce:	push   eax
6500e6cf:	call   DWORD PTR ds:0x65024014
6500e6d5:	add    DWORD PTR ds:0x6502d380,0x1
6500e6dc:	mov    ds:0x650303bc,eax
6500e6e1:	pop    esi
6500e6e2:	ret    
6500e6e3:	xor    eax,eax
6500e6e5:	mov    ds:0x650303bc,eax
6500e6ea:	pop    esi
6500e6eb:	ret    
6500e6ec:	mov    eax,ds:0x650303bc
6500e6f1:	pop    esi
6500e6f2:	ret    
6500e6f3:	int3   
6500e6f4:	int3   
6500e6f5:	int3   
6500e6f6:	int3   
6500e6f7:	int3   
6500e6f8:	int3   
6500e6f9:	int3   
6500e6fa:	int3   
6500e6fb:	int3   
6500e6fc:	int3   
6500e6fd:	int3   
6500e6fe:	int3   
6500e6ff:	int3   
6500e700:	push   ebp
6500e701:	mov    ebp,esp
6500e703:	and    esp,0xfffffff8
6500e706:	push   ecx
6500e707:	push   esi
6500e708:	push   0x0
6500e70a:	push   0x1
6500e70c:	push   0x65030308
6500e711:	call   DWORD PTR ds:0x6502408c
6500e717:	test   eax,eax
6500e719:	jne    0x6500e779
6500e71b:	push   0x65028d44
6500e720:	push   0xe
6500e722:	push   0x65028d74
6500e727:	call   0x65006a80
6500e72c:	push   0x65028d84
6500e731:	push   0x8
6500e733:	push   0x65028b94
6500e738:	mov    esi,eax
6500e73a:	call   0x65006d70
6500e73f:	add    esp,0x18
6500e742:	push   eax
6500e743:	call   DWORD PTR ds:0x65024018
6500e749:	add    DWORD PTR ds:0x6502d37c,0x1
6500e750:	test   eax,eax
6500e752:	je     0x6500e76d
6500e754:	push   esi
6500e755:	push   eax
6500e756:	call   DWORD PTR ds:0x65024014
6500e75c:	add    DWORD PTR ds:0x6502d380,0x1
6500e763:	mov    ds:0x650303c0,eax
6500e768:	pop    esi
6500e769:	mov    esp,ebp
6500e76b:	pop    ebp
6500e76c:	ret    
6500e76d:	xor    eax,eax
6500e76f:	mov    ds:0x650303c0,eax
6500e774:	pop    esi
6500e775:	mov    esp,ebp
6500e777:	pop    ebp
6500e778:	ret    
6500e779:	mov    eax,ds:0x650303c0
6500e77e:	pop    esi
6500e77f:	mov    esp,ebp
6500e781:	pop    ebp
6500e782:	ret    
6500e783:	int3   
6500e784:	int3   
6500e785:	int3   
6500e786:	int3   
6500e787:	int3   
6500e788:	int3   
6500e789:	int3   
6500e78a:	int3   
6500e78b:	int3   
6500e78c:	int3   
6500e78d:	int3   
6500e78e:	int3   
6500e78f:	int3   
6500e790:	push   ebp
6500e791:	mov    ebp,esp
6500e793:	and    esp,0xfffffff8
6500e796:	push   ecx
6500e797:	push   esi
6500e798:	push   0x0
6500e79a:	push   0x1
6500e79c:	push   0x6503031c
6500e7a1:	call   DWORD PTR ds:0x6502408c
6500e7a7:	test   eax,eax
6500e7a9:	jne    0x6500e809
6500e7ab:	push   0x65028db0
6500e7b0:	push   0x12
6500e7b2:	push   0x65028de0
6500e7b7:	call   0x65006a80
6500e7bc:	push   0x65028df4
6500e7c1:	push   0x8
6500e7c3:	push   0x65028b94
6500e7c8:	mov    esi,eax
6500e7ca:	call   0x65006d70
6500e7cf:	add    esp,0x18
6500e7d2:	push   eax
6500e7d3:	call   DWORD PTR ds:0x65024018
6500e7d9:	add    DWORD PTR ds:0x6502d37c,0x1
6500e7e0:	test   eax,eax
6500e7e2:	je     0x6500e7fd
6500e7e4:	push   esi
6500e7e5:	push   eax
6500e7e6:	call   DWORD PTR ds:0x65024014
6500e7ec:	add    DWORD PTR ds:0x6502d380,0x1
6500e7f3:	mov    ds:0x650303c4,eax
6500e7f8:	pop    esi
6500e7f9:	mov    esp,ebp
6500e7fb:	pop    ebp
6500e7fc:	ret    
6500e7fd:	xor    eax,eax
6500e7ff:	mov    ds:0x650303c4,eax
6500e804:	pop    esi
6500e805:	mov    esp,ebp
6500e807:	pop    ebp
6500e808:	ret    
6500e809:	mov    eax,ds:0x650303c4
6500e80e:	pop    esi
6500e80f:	mov    esp,ebp
6500e811:	pop    ebp
6500e812:	ret    
6500e813:	int3   
6500e814:	int3   
6500e815:	int3   
6500e816:	int3   
6500e817:	int3   
6500e818:	int3   
6500e819:	int3   
6500e81a:	int3   
6500e81b:	int3   
6500e81c:	int3   
6500e81d:	int3   
6500e81e:	int3   
6500e81f:	int3   
6500e820:	push   esi
6500e821:	push   0x0
6500e823:	push   0x1
6500e825:	push   0x6503033c
6500e82a:	call   DWORD PTR ds:0x6502408c
6500e830:	test   eax,eax
6500e832:	jne    0x6500e88c
6500e834:	push   0x65028e30
6500e839:	push   0xc
6500e83b:	push   0x65028e58
6500e840:	call   0x65006a80
6500e845:	push   0x65028e68
6500e84a:	push   0x5
6500e84c:	push   0x65028e90
6500e851:	mov    esi,eax
6500e853:	call   0x65006d70
6500e858:	add    esp,0x18
6500e85b:	push   eax
6500e85c:	call   DWORD PTR ds:0x65024018
6500e862:	add    DWORD PTR ds:0x6502d37c,0x1
6500e869:	test   eax,eax
6500e86b:	je     0x6500e883
6500e86d:	push   esi
6500e86e:	push   eax
6500e86f:	call   DWORD PTR ds:0x65024014
6500e875:	add    DWORD PTR ds:0x6502d380,0x1
6500e87c:	mov    ds:0x650303c8,eax
6500e881:	pop    esi
6500e882:	ret    
6500e883:	xor    eax,eax
6500e885:	mov    ds:0x650303c8,eax
6500e88a:	pop    esi
6500e88b:	ret    
6500e88c:	mov    eax,ds:0x650303c8
6500e891:	pop    esi
6500e892:	ret    
6500e893:	int3   
6500e894:	int3   
6500e895:	int3   
6500e896:	int3   
6500e897:	int3   
6500e898:	int3   
6500e899:	int3   
6500e89a:	int3   
6500e89b:	int3   
6500e89c:	int3   
6500e89d:	int3   
6500e89e:	int3   
6500e89f:	int3   
6500e8a0:	push   esi
6500e8a1:	push   0x0
6500e8a3:	push   0x1
6500e8a5:	push   0x65030340
6500e8aa:	call   DWORD PTR ds:0x6502408c
6500e8b0:	test   eax,eax
6500e8b2:	jne    0x6500e90c
6500e8b4:	push   0x65028e9c
6500e8b9:	push   0x11
6500e8bb:	push   0x65028ed0
6500e8c0:	call   0x65006a80
6500e8c5:	push   0x65028ee4
6500e8ca:	push   0x5
6500e8cc:	push   0x65028e90
6500e8d1:	mov    esi,eax
6500e8d3:	call   0x65006d70
6500e8d8:	add    esp,0x18
6500e8db:	push   eax
6500e8dc:	call   DWORD PTR ds:0x65024018
6500e8e2:	add    DWORD PTR ds:0x6502d37c,0x1
6500e8e9:	test   eax,eax
6500e8eb:	je     0x6500e903
6500e8ed:	push   esi
6500e8ee:	push   eax
6500e8ef:	call   DWORD PTR ds:0x65024014
6500e8f5:	add    DWORD PTR ds:0x6502d380,0x1
6500e8fc:	mov    ds:0x650303cc,eax
6500e901:	pop    esi
6500e902:	ret    
6500e903:	xor    eax,eax
6500e905:	mov    ds:0x650303cc,eax
6500e90a:	pop    esi
6500e90b:	ret    
6500e90c:	mov    eax,ds:0x650303cc
6500e911:	pop    esi
6500e912:	ret    
6500e913:	int3   
6500e914:	int3   
6500e915:	int3   
6500e916:	int3   
6500e917:	int3   
6500e918:	int3   
6500e919:	int3   
6500e91a:	int3   
6500e91b:	int3   
6500e91c:	int3   
6500e91d:	int3   
6500e91e:	int3   
6500e91f:	int3   
6500e920:	push   esi
6500e921:	push   edi
6500e922:	mov    edi,DWORD PTR [esp+0xc]
6500e926:	mov    esi,DWORD PTR [edi+0xc]
6500e929:	cmp    esi,DWORD PTR [edi+0x14]
6500e92c:	je     0x6500e944
6500e92e:	mov    edi,edi
6500e930:	mov    eax,DWORD PTR [esi-0x4]
6500e933:	mov    ecx,DWORD PTR [esi-0x8]
6500e936:	push   eax
6500e937:	call   ecx
6500e939:	add    esi,0xfffffff8
6500e93c:	add    esp,0x4
6500e93f:	cmp    esi,DWORD PTR [edi+0x14]
6500e942:	jne    0x6500e930
6500e944:	mov    edx,DWORD PTR [edi+0x14]
6500e947:	push   edx
6500e948:	call   0x650135d6
6500e94d:	mov    edi,DWORD PTR [edi+0x8]
6500e950:	mov    esi,DWORD PTR [edi]
6500e952:	push   edi
6500e953:	call   0x650135d6
6500e958:	add    esp,0x8
6500e95b:	test   esi,esi
6500e95d:	je     0x6500e971
6500e95f:	nop
6500e960:	mov    eax,esi
6500e962:	mov    esi,DWORD PTR [esi]
6500e964:	push   eax
6500e965:	call   0x650135d6
6500e96a:	add    esp,0x4
6500e96d:	test   esi,esi
6500e96f:	jne    0x6500e960
6500e971:	pop    edi
6500e972:	pop    esi
6500e973:	ret    
6500e974:	int3   
6500e975:	int3   
6500e976:	int3   
6500e977:	int3   
6500e978:	int3   
6500e979:	int3   
6500e97a:	int3   
6500e97b:	int3   
6500e97c:	int3   
6500e97d:	int3   
6500e97e:	int3   
6500e97f:	int3   
6500e980:	push   esi
6500e981:	mov    esi,DWORD PTR [esp+0x8]
6500e985:	push   edi
6500e986:	mov    edi,DWORD PTR [esp+0x10]
6500e98a:	lea    eax,[edi+0x4]
6500e98d:	push   eax
6500e98e:	mov    DWORD PTR [esi+0x18],edi
6500e991:	call   0x650136b3
6500e996:	xor    ecx,ecx
6500e998:	add    esp,0x4
6500e99b:	cmp    eax,ecx
6500e99d:	je     0x6500e9ba
6500e99f:	mov    DWORD PTR [esi+0x8],eax
6500e9a2:	mov    DWORD PTR [esi],edi
6500e9a4:	lea    edx,[eax+0x4]
6500e9a7:	mov    DWORD PTR [esi+0x4],edx
6500e9aa:	mov    DWORD PTR [eax],ecx
6500e9ac:	pop    edi
6500e9ad:	mov    DWORD PTR [esi+0xc],ecx
6500e9b0:	mov    DWORD PTR [esi+0x10],ecx
6500e9b3:	mov    DWORD PTR [esi+0x14],ecx
6500e9b6:	mov    al,0x1
6500e9b8:	pop    esi
6500e9b9:	ret    
6500e9ba:	pop    edi
6500e9bb:	xor    al,al
6500e9bd:	pop    esi
6500e9be:	ret    
6500e9bf:	int3   
6500e9c0:	mov    ecx,DWORD PTR [ebx]
6500e9c2:	push   esi
6500e9c3:	mov    esi,eax
6500e9c5:	add    esi,0x3
6500e9c8:	and    esi,0xfffffffc
6500e9cb:	cmp    ecx,esi
6500e9cd:	jae    0x6500ea03
6500e9cf:	push   edi
6500e9d0:	mov    edi,DWORD PTR [ebx+0x18]
6500e9d3:	cmp    edi,esi
6500e9d5:	jae    0x6500e9dd
6500e9d7:	add    edi,edi
6500e9d9:	cmp    edi,esi
6500e9db:	jb     0x6500e9d7
6500e9dd:	lea    eax,[edi+0x4]
6500e9e0:	push   eax
6500e9e1:	call   0x650136b3
6500e9e6:	mov    edx,DWORD PTR [ebx+0x8]
6500e9e9:	mov    DWORD PTR [eax],edx
6500e9eb:	add    esp,0x4
6500e9ee:	sub    edi,esi
6500e9f0:	lea    ecx,[eax+0x4]
6500e9f3:	mov    DWORD PTR [ebx+0x8],eax
6500e9f6:	lea    eax,[ecx+esi*1]
6500e9f9:	mov    DWORD PTR [ebx],edi
6500e9fb:	pop    edi
6500e9fc:	mov    DWORD PTR [ebx+0x4],eax
6500e9ff:	mov    eax,ecx
6500ea01:	pop    esi
6500ea02:	ret    
6500ea03:	mov    eax,DWORD PTR [ebx+0x4]
6500ea06:	sub    ecx,esi
6500ea08:	mov    DWORD PTR [ebx],ecx
6500ea0a:	lea    ecx,[eax+esi*1]
6500ea0d:	mov    DWORD PTR [ebx+0x4],ecx
6500ea10:	pop    esi
6500ea11:	ret    
6500ea12:	int3   
6500ea13:	int3   
6500ea14:	int3   
6500ea15:	int3   
6500ea16:	int3   
6500ea17:	int3   
6500ea18:	int3   
6500ea19:	int3   
6500ea1a:	int3   
6500ea1b:	int3   
6500ea1c:	int3   
6500ea1d:	int3   
6500ea1e:	int3   
6500ea1f:	int3   
6500ea20:	push   ebx
6500ea21:	mov    DWORD PTR [esi],0x6
6500ea27:	mov    DWORD PTR [esi+0x8],0x0
6500ea2e:	mov    ebx,DWORD PTR [ecx]
6500ea30:	shl    eax,0x4
6500ea33:	call   0x6500e9c0
6500ea38:	mov    DWORD PTR [esi+0xc],eax
6500ea3b:	neg    eax
6500ea3d:	sbb    eax,eax
6500ea3f:	neg    eax
6500ea41:	sub    eax,0x1
6500ea44:	pop    ebx
6500ea45:	ret    
6500ea46:	int3   
6500ea47:	int3   
6500ea48:	int3   
6500ea49:	int3   
6500ea4a:	int3   
6500ea4b:	int3   
6500ea4c:	int3   
6500ea4d:	int3   
6500ea4e:	int3   
6500ea4f:	int3   
6500ea50:	push   ebx
6500ea51:	mov    DWORD PTR [esi],0x7
6500ea57:	mov    DWORD PTR [esi+0x8],0x0
6500ea5e:	mov    ebx,DWORD PTR [ecx]
6500ea60:	shl    eax,0x5
6500ea63:	call   0x6500e9c0
6500ea68:	mov    DWORD PTR [esi+0xc],eax
6500ea6b:	neg    eax
6500ea6d:	sbb    eax,eax
6500ea6f:	neg    eax
6500ea71:	sub    eax,0x1
6500ea74:	pop    ebx
6500ea75:	ret    
6500ea76:	int3   
6500ea77:	int3   
6500ea78:	int3   
6500ea79:	int3   
6500ea7a:	int3   
6500ea7b:	int3   
6500ea7c:	int3   
6500ea7d:	int3   
6500ea7e:	int3   
6500ea7f:	int3   
6500ea80:	sub    esp,0x44
6500ea83:	mov    eax,DWORD PTR [esp+0x54]
6500ea87:	mov    edx,DWORD PTR [esp+0x4c]
6500ea8b:	mov    ecx,DWORD PTR [esp+0x48]
6500ea8f:	mov    eax,DWORD PTR [eax]
6500ea91:	push   ebx
6500ea92:	push   ebp
6500ea93:	push   esi
6500ea94:	mov    esi,DWORD PTR [esp+0x5c]
6500ea98:	add    eax,edx
6500ea9a:	add    edx,esi
6500ea9c:	mov    esi,DWORD PTR [ecx+0xc]
6500ea9f:	mov    DWORD PTR [esp+0x18],esi
6500eaa3:	mov    esi,DWORD PTR [ecx+0x8]
6500eaa6:	mov    ecx,DWORD PTR [ecx+0x10]
6500eaa9:	push   edi
6500eaaa:	xor    edi,edi
6500eaac:	cmp    eax,edx
6500eaae:	mov    DWORD PTR [esp+0x60],ecx
6500eab2:	mov    DWORD PTR [esp+0x14],eax
6500eab6:	mov    DWORD PTR [esp+0x20],edx
6500eaba:	mov    DWORD PTR [esp+0x18],esi
6500eabe:	lea    ecx,[edi+0x20]
6500eac1:	je     0x6500f341
6500eac7:	mov    ebp,DWORD PTR [esp+0x38]
6500eacb:	jmp    0x6500ead0
6500eacd:	lea    ecx,[ecx+0x0]
6500ead0:	mov    eax,DWORD PTR [esp+0x18]
6500ead4:	test   eax,eax
6500ead6:	mov    ebx,DWORD PTR [esp+0x14]
6500eada:	jne    0x6500ebef
6500eae0:	mov    al,BYTE PTR [ebx]
6500eae2:	cmp    al,0x7f
6500eae4:	ja     0x6500eafa
6500eae6:	movzx  eax,al
6500eae9:	cdq    
6500eaea:	mov    ebx,0x2
6500eaef:	mov    ebp,eax
6500eaf1:	mov    DWORD PTR [esp+0x3c],edx
6500eaf5:	jmp    0x6500f1cc
6500eafa:	cmp    al,0xe0
6500eafc:	jb     0x6500eb22
6500eafe:	cmp    al,0xff
6500eb00:	ja     0x6500eb22
6500eb02:	test   al,al
6500eb04:	movsx  eax,al
6500eb07:	cdq    
6500eb08:	mov    ebp,eax
6500eb0a:	mov    DWORD PTR [esp+0x3c],edx
6500eb0e:	mov    DWORD PTR [esp+0x38],ebp
6500eb12:	jl     0x6500ee2b
6500eb18:	mov    ebx,0x2
6500eb1d:	jmp    0x6500f1d0
6500eb22:	cmp    al,0xc0
6500eb24:	jb     0x6500ebbe
6500eb2a:	cmp    al,0xdf
6500eb2c:	ja     0x6500ebbe
6500eb32:	movzx  eax,al
6500eb35:	lea    ecx,[eax-0xc0]
6500eb3b:	cmp    ecx,0x1f
6500eb3e:	ja     0x6500f345
6500eb44:	movzx  ecx,BYTE PTR [ecx+0x6500f390]
6500eb4b:	jmp    DWORD PTR [ecx*4+0x6500f378]
6500eb52:	xor    ebx,ebx
6500eb54:	jmp    0x6500f1d0
6500eb59:	mov    BYTE PTR [esp+0x38],0x0
6500eb5e:	mov    ebp,DWORD PTR [esp+0x38]
6500eb62:	mov    ebx,0x1
6500eb67:	jmp    0x6500f1d0
6500eb6c:	mov    ebx,0x1
6500eb71:	mov    BYTE PTR [esp+0x38],bl
6500eb75:	mov    ebp,DWORD PTR [esp+0x38]
6500eb79:	jmp    0x6500f1d0
6500eb7e:	mov    ecx,eax
6500eb80:	and    ecx,0x3
6500eb83:	mov    esi,0x1
6500eb88:	shl    esi,cl
6500eb8a:	and    eax,0x1f
6500eb8d:	add    ebx,0x1
6500eb90:	mov    DWORD PTR [esp+0x18],eax
6500eb94:	mov    DWORD PTR [esp+0x1c],esi
6500eb98:	mov    DWORD PTR [esp+0x14],ebx
6500eb9c:	jmp    0x6500ebf3
6500eb9e:	mov    ecx,eax
6500eba0:	and    ecx,0x1
6500eba3:	mov    esi,0x2
6500eba8:	shl    esi,cl
6500ebaa:	and    eax,0x1f
6500ebad:	add    ebx,0x1
6500ebb0:	mov    DWORD PTR [esp+0x18],eax
6500ebb4:	mov    DWORD PTR [esp+0x1c],esi
6500ebb8:	mov    DWORD PTR [esp+0x14],ebx
6500ebbc:	jmp    0x6500ebf3
6500ebbe:	cmp    al,0xa0
6500ebc0:	jb     0x6500f122
6500ebc6:	cmp    al,0xbf
6500ebc8:	ja     0x6500f122
6500ebce:	and    eax,0x1f
6500ebd1:	mov    esi,eax
6500ebd3:	mov    DWORD PTR [esp+0x1c],esi
6500ebd7:	je     0x6500eecd
6500ebdd:	mov    eax,0x20
6500ebe2:	add    ebx,0x1
6500ebe5:	mov    DWORD PTR [esp+0x18],eax
6500ebe9:	mov    DWORD PTR [esp+0x14],ebx
6500ebed:	jmp    0x6500ebf3
6500ebef:	mov    esi,DWORD PTR [esp+0x1c]
6500ebf3:	mov    ecx,edx
6500ebf5:	sub    ecx,ebx
6500ebf7:	cmp    ecx,esi
6500ebf9:	jb     0x6500f341
6500ebff:	mov    edi,ebx
6500ec01:	add    eax,0xfffffff6
6500ec04:	cmp    eax,0x16
6500ec07:	lea    ebx,[ebx+esi*1-0x1]
6500ec0b:	mov    DWORD PTR [esp+0x14],ebx
6500ec0f:	ja     0x6500f345
6500ec15:	jmp    DWORD PTR [eax*4+0x6500f3b0]
6500ec1c:	xor    eax,eax
6500ec1e:	mov    ah,BYTE PTR [edi]
6500ec20:	mov    al,BYTE PTR [edi+0x1]
6500ec23:	mov    esi,eax
6500ec25:	test   esi,esi
6500ec27:	jmp    0x6500ebd3
6500ec29:	movzx  eax,BYTE PTR [edi+0x2]
6500ec2d:	xor    ecx,ecx
6500ec2f:	mov    ch,BYTE PTR [edi]
6500ec31:	mov    cl,BYTE PTR [edi+0x1]
6500ec34:	shl    ecx,0x8
6500ec37:	or     ecx,eax
6500ec39:	movzx  eax,BYTE PTR [edi+0x3]
6500ec3d:	shl    ecx,0x8
6500ec40:	or     ecx,eax
6500ec42:	mov    esi,ecx
6500ec44:	jmp    0x6500ebd3
6500ec46:	movzx  edx,BYTE PTR [edi+0x2]
6500ec4a:	movzx  eax,BYTE PTR [edi+0x3]
6500ec4e:	xor    ecx,ecx
6500ec50:	mov    ch,BYTE PTR [edi]
6500ec52:	mov    ebx,0x4
6500ec57:	mov    cl,BYTE PTR [edi+0x1]
6500ec5a:	shl    ecx,0x8
6500ec5d:	or     ecx,edx
6500ec5f:	shl    ecx,0x8
6500ec62:	or     ecx,eax
6500ec64:	mov    DWORD PTR [esp+0x24],ecx
6500ec68:	fld    DWORD PTR [esp+0x24]
6500ec6c:	fstp   QWORD PTR [esp+0x38]
6500ec70:	mov    ebp,DWORD PTR [esp+0x38]
6500ec74:	jmp    0x6500f1d0
6500ec79:	movzx  eax,BYTE PTR [edi]
6500ec7c:	cdq    
6500ec7d:	shld   edx,eax,0x8
6500ec81:	shl    eax,0x8
6500ec84:	mov    ecx,eax
6500ec86:	movzx  eax,BYTE PTR [edi+0x1]
6500ec8a:	mov    esi,edx
6500ec8c:	cdq    
6500ec8d:	or     ecx,eax
6500ec8f:	movzx  eax,BYTE PTR [edi+0x2]
6500ec93:	or     esi,edx
6500ec95:	shld   esi,ecx,0x8
6500ec99:	shl    ecx,0x8
6500ec9c:	cdq    
6500ec9d:	or     ecx,eax
6500ec9f:	movzx  eax,BYTE PTR [edi+0x3]
6500eca3:	or     esi,edx
6500eca5:	shld   esi,ecx,0x8
6500eca9:	shl    ecx,0x8
6500ecac:	cdq    
6500ecad:	or     ecx,eax
6500ecaf:	movzx  eax,BYTE PTR [edi+0x4]
6500ecb3:	or     esi,edx
6500ecb5:	shld   esi,ecx,0x8
6500ecb9:	shl    ecx,0x8
6500ecbc:	cdq    
6500ecbd:	or     ecx,eax
6500ecbf:	movzx  eax,BYTE PTR [edi+0x5]
6500ecc3:	or     esi,edx
6500ecc5:	shld   esi,ecx,0x8
6500ecc9:	shl    ecx,0x8
6500eccc:	cdq    
6500eccd:	or     ecx,eax
6500eccf:	movzx  eax,BYTE PTR [edi+0x6]
6500ecd3:	or     esi,edx
6500ecd5:	shld   esi,ecx,0x8
6500ecd9:	shl    ecx,0x8
6500ecdc:	cdq    
6500ecdd:	or     ecx,eax
6500ecdf:	movzx  eax,BYTE PTR [edi+0x7]
6500ece3:	or     esi,edx
6500ece5:	shld   esi,ecx,0x8
6500ece9:	cdq    
6500ecea:	shl    ecx,0x8
6500eced:	or     ecx,eax
6500ecef:	or     esi,edx
6500ecf1:	mov    DWORD PTR [esp+0x28],ecx
6500ecf5:	mov    DWORD PTR [esp+0x2c],esi
6500ecf9:	mov    ebx,0x4
6500ecfe:	fld    QWORD PTR [esp+0x28]
6500ed02:	fstp   QWORD PTR [esp+0x38]
6500ed06:	mov    ebp,DWORD PTR [esp+0x38]
6500ed0a:	jmp    0x6500f1d0
6500ed0f:	movzx  eax,BYTE PTR [edi]
6500ed12:	cdq    
6500ed13:	mov    ebx,0x2
6500ed18:	mov    ebp,eax
6500ed1a:	mov    DWORD PTR [esp+0x3c],edx
6500ed1e:	jmp    0x6500f1cc
6500ed23:	xor    edx,edx
6500ed25:	mov    dh,BYTE PTR [edi]
6500ed27:	mov    ebx,0x2
6500ed2c:	mov    dl,BYTE PTR [edi+0x1]
6500ed2f:	movzx  eax,dx
6500ed32:	cdq    
6500ed33:	mov    ebp,eax
6500ed35:	mov    DWORD PTR [esp+0x3c],edx
6500ed39:	jmp    0x6500f1cc
6500ed3e:	movzx  ecx,BYTE PTR [edi+0x2]
6500ed42:	movzx  edx,BYTE PTR [edi+0x3]
6500ed46:	xor    eax,eax
6500ed48:	mov    ah,BYTE PTR [edi]
6500ed4a:	mov    ebx,0x2
6500ed4f:	mov    DWORD PTR [esp+0x3c],0x0
6500ed57:	mov    al,BYTE PTR [edi+0x1]
6500ed5a:	shl    eax,0x8
6500ed5d:	or     eax,ecx
6500ed5f:	shl    eax,0x8
6500ed62:	or     eax,edx
6500ed64:	mov    ebp,eax
6500ed66:	jmp    0x6500f1cc
6500ed6b:	movzx  eax,BYTE PTR [edi]
6500ed6e:	cdq    
6500ed6f:	shld   edx,eax,0x8
6500ed73:	shl    eax,0x8
6500ed76:	mov    ecx,eax
6500ed78:	movzx  eax,BYTE PTR [edi+0x1]
6500ed7c:	mov    esi,edx
6500ed7e:	cdq    
6500ed7f:	or     ecx,eax
6500ed81:	movzx  eax,BYTE PTR [edi+0x2]
6500ed85:	or     esi,edx
6500ed87:	shld   esi,ecx,0x8
6500ed8b:	shl    ecx,0x8
6500ed8e:	cdq    
6500ed8f:	or     ecx,eax
6500ed91:	movzx  eax,BYTE PTR [edi+0x3]
6500ed95:	or     esi,edx
6500ed97:	shld   esi,ecx,0x8
6500ed9b:	shl    ecx,0x8
6500ed9e:	cdq    
6500ed9f:	or     ecx,eax
6500eda1:	movzx  eax,BYTE PTR [edi+0x4]
6500eda5:	or     esi,edx
6500eda7:	shld   esi,ecx,0x8
6500edab:	shl    ecx,0x8
6500edae:	cdq    
6500edaf:	or     ecx,eax
6500edb1:	movzx  eax,BYTE PTR [edi+0x5]
6500edb5:	or     esi,edx
6500edb7:	shld   esi,ecx,0x8
6500edbb:	shl    ecx,0x8
6500edbe:	cdq    
6500edbf:	or     ecx,eax
6500edc1:	movzx  eax,BYTE PTR [edi+0x6]
6500edc5:	or     esi,edx
6500edc7:	shld   esi,ecx,0x8
6500edcb:	cdq    
6500edcc:	shl    ecx,0x8
6500edcf:	or     ecx,eax
6500edd1:	movzx  eax,BYTE PTR [edi+0x7]
6500edd5:	or     esi,edx
6500edd7:	mov    ebp,ecx
6500edd9:	mov    ecx,esi
6500eddb:	shld   ecx,ebp,0x8
6500eddf:	cdq    
6500ede0:	shl    ebp,0x8
6500ede3:	or     ebp,eax
6500ede5:	mov    ebx,0x2
6500edea:	or     ecx,edx
6500edec:	jmp    0x6500f1c8
6500edf1:	mov    al,BYTE PTR [edi]
6500edf3:	jmp    0x6500eb02
6500edf8:	xor    edx,edx
6500edfa:	mov    dh,BYTE PTR [edi]
6500edfc:	mov    dl,BYTE PTR [edi+0x1]
6500edff:	movzx  eax,dx
6500ee02:	test   ax,ax
6500ee05:	movsx  eax,ax
6500ee08:	jmp    0x6500eb07
6500ee0d:	movzx  ecx,BYTE PTR [edi+0x2]
6500ee11:	movzx  edx,BYTE PTR [edi+0x3]
6500ee15:	xor    eax,eax
6500ee17:	mov    ah,BYTE PTR [edi]
6500ee19:	mov    al,BYTE PTR [edi+0x1]
6500ee1c:	shl    eax,0x8
6500ee1f:	or     eax,ecx
6500ee21:	shl    eax,0x8
6500ee24:	or     eax,edx
6500ee26:	jmp    0x6500eb07
6500ee2b:	mov    ebx,0x3
6500ee30:	jmp    0x6500f1d0
6500ee35:	movzx  eax,BYTE PTR [edi]
6500ee38:	cdq    
6500ee39:	shld   edx,eax,0x8
6500ee3d:	shl    eax,0x8
6500ee40:	mov    ecx,eax
6500ee42:	movzx  eax,BYTE PTR [edi+0x1]
6500ee46:	mov    esi,edx
6500ee48:	cdq    
6500ee49:	or     ecx,eax
6500ee4b:	movzx  eax,BYTE PTR [edi+0x2]
6500ee4f:	or     esi,edx
6500ee51:	shld   esi,ecx,0x8
6500ee55:	shl    ecx,0x8
6500ee58:	cdq    
6500ee59:	or     ecx,eax
6500ee5b:	movzx  eax,BYTE PTR [edi+0x3]
6500ee5f:	or     esi,edx
6500ee61:	shld   esi,ecx,0x8
6500ee65:	shl    ecx,0x8
6500ee68:	cdq    
6500ee69:	or     ecx,eax
6500ee6b:	movzx  eax,BYTE PTR [edi+0x4]
6500ee6f:	or     esi,edx
6500ee71:	shld   esi,ecx,0x8
6500ee75:	shl    ecx,0x8
6500ee78:	cdq    
6500ee79:	or     ecx,eax
6500ee7b:	movzx  eax,BYTE PTR [edi+0x5]
6500ee7f:	or     esi,edx
6500ee81:	shld   esi,ecx,0x8
6500ee85:	shl    ecx,0x8
6500ee88:	cdq    
6500ee89:	or     ecx,eax
6500ee8b:	movzx  eax,BYTE PTR [edi+0x6]
6500ee8f:	or     esi,edx
6500ee91:	shld   esi,ecx,0x8
6500ee95:	cdq    
6500ee96:	shl    ecx,0x8
6500ee99:	or     ecx,eax
6500ee9b:	movzx  eax,BYTE PTR [edi+0x7]
6500ee9f:	or     esi,edx
6500eea1:	mov    ebp,ecx
6500eea3:	mov    ecx,esi
6500eea5:	shld   ecx,ebp,0x8
6500eea9:	cdq    
6500eeaa:	shl    ebp,0x8
6500eead:	or     ebp,eax
6500eeaf:	or     ecx,edx
6500eeb1:	jl     0x6500eec3
6500eeb3:	jg     0x6500eeb9
6500eeb5:	test   ebp,ebp
6500eeb7:	jb     0x6500eec3
6500eeb9:	mov    ebx,0x2
6500eebe:	jmp    0x6500f1c8
6500eec3:	mov    ebx,0x3
6500eec8:	jmp    0x6500f1c8
6500eecd:	mov    edx,DWORD PTR [esp+0x58]
6500eed1:	mov    ebx,0x5
6500eed6:	mov    DWORD PTR [esp+0x3c],edi
6500eeda:	mov    ebp,esi
6500eedc:	mov    BYTE PTR [edx+0x4],0x1
6500eee0:	jmp    0x6500f1cc
6500eee5:	cmp    DWORD PTR [esp+0x60],0x20
6500eeea:	jae    0x6500f345
6500eef0:	mov    eax,DWORD PTR [esp+0x60]
6500eef4:	mov    ecx,DWORD PTR [esp+0x58]
6500eef8:	lea    eax,[eax+eax*4]
6500eefb:	lea    esi,[ecx+eax*8+0x18]
6500eeff:	xor    eax,eax
6500ef01:	mov    ah,BYTE PTR [edi]
6500ef03:	mov    al,BYTE PTR [edi+0x1]
6500ef06:	mov    DWORD PTR [esi],0x6
6500ef0c:	mov    DWORD PTR [esi+0x8],0x0
6500ef13:	mov    ebx,DWORD PTR [ecx]
6500ef15:	shl    eax,0x4
6500ef18:	call   0x6500e9c0
6500ef1d:	test   eax,eax
6500ef1f:	mov    DWORD PTR [esi+0xc],eax
6500ef22:	je     0x6500f345
6500ef28:	xor    ecx,ecx
6500ef2a:	mov    ch,BYTE PTR [edi]
6500ef2c:	mov    cl,BYTE PTR [edi+0x1]
6500ef2f:	test   cx,cx
6500ef32:	jne    0x6500ef49
6500ef34:	mov    edx,DWORD PTR [esi+0x4]
6500ef37:	mov    ebx,DWORD PTR [esi]
6500ef39:	mov    ebp,DWORD PTR [esi+0x8]
6500ef3c:	mov    DWORD PTR [esp+0x34],edx
6500ef40:	mov    DWORD PTR [esp+0x3c],eax
6500ef44:	jmp    0x6500f1cc
6500ef49:	xor    ecx,ecx
6500ef4b:	add    DWORD PTR [esp+0x60],0x1
6500ef50:	mov    DWORD PTR [esi+0x14],0x0
6500ef57:	mov    ch,BYTE PTR [edi]
6500ef59:	mov    cl,BYTE PTR [edi+0x1]
6500ef5c:	mov    DWORD PTR [esi+0x10],ecx
6500ef5f:	jmp    0x6500f2fa
6500ef64:	cmp    DWORD PTR [esp+0x60],0x20
6500ef69:	jae    0x6500f345
6500ef6f:	mov    eax,DWORD PTR [esp+0x60]
6500ef73:	mov    ecx,DWORD PTR [esp+0x58]
6500ef77:	lea    edx,[eax+eax*4]
6500ef7a:	xor    eax,eax
6500ef7c:	mov    ah,BYTE PTR [edi]
6500ef7e:	lea    esi,[ecx+edx*8+0x18]
6500ef82:	movzx  edx,BYTE PTR [edi+0x2]
6500ef86:	mov    al,BYTE PTR [edi+0x1]
6500ef89:	shl    eax,0x8
6500ef8c:	or     eax,edx
6500ef8e:	movzx  edx,BYTE PTR [edi+0x3]
6500ef92:	shl    eax,0x8
6500ef95:	or     eax,edx
6500ef97:	mov    DWORD PTR [esi],0x6
6500ef9d:	mov    DWORD PTR [esi+0x8],0x0
6500efa4:	mov    ebx,DWORD PTR [ecx]
6500efa6:	shl    eax,0x4
6500efa9:	call   0x6500e9c0
6500efae:	test   eax,eax
6500efb0:	mov    DWORD PTR [esi+0xc],eax
6500efb3:	je     0x6500f345
6500efb9:	movzx  ecx,BYTE PTR [edi+0x2]
6500efbd:	movzx  edx,BYTE PTR [edi+0x3]
6500efc1:	xor    eax,eax
6500efc3:	mov    ah,BYTE PTR [edi]
6500efc5:	mov    al,BYTE PTR [edi+0x1]
6500efc8:	shl    eax,0x8
6500efcb:	or     eax,ecx
6500efcd:	shl    eax,0x8
6500efd0:	or     eax,edx
6500efd2:	je     0x6500f1b9
6500efd8:	xor    edx,edx
6500efda:	mov    DWORD PTR [esi+0x14],0x0
6500efe1:	mov    dh,BYTE PTR [edi]
6500efe3:	movzx  eax,BYTE PTR [edi+0x2]
6500efe7:	movzx  ecx,BYTE PTR [edi+0x3]
6500efeb:	mov    dl,BYTE PTR [edi+0x1]
6500efee:	shl    edx,0x8
6500eff1:	or     edx,eax
6500eff3:	shl    edx,0x8
6500eff6:	or     edx,ecx
6500eff8:	add    DWORD PTR [esp+0x60],0x1
6500effd:	jmp    0x6500f2f7
6500f002:	cmp    DWORD PTR [esp+0x60],0x20
6500f007:	jae    0x6500f345
6500f00d:	mov    eax,DWORD PTR [esp+0x60]
6500f011:	mov    ecx,DWORD PTR [esp+0x58]
6500f015:	lea    edx,[eax+eax*4]
6500f018:	xor    eax,eax
6500f01a:	mov    ah,BYTE PTR [edi]
6500f01c:	lea    esi,[ecx+edx*8+0x18]
6500f020:	mov    al,BYTE PTR [edi+0x1]
6500f023:	mov    DWORD PTR [esi],0x7
6500f029:	mov    DWORD PTR [esi+0x8],0x0
6500f030:	mov    ebx,DWORD PTR [ecx]
6500f032:	shl    eax,0x5
6500f035:	call   0x6500e9c0
6500f03a:	test   eax,eax
6500f03c:	mov    DWORD PTR [esi+0xc],eax
6500f03f:	je     0x6500f345
6500f045:	xor    eax,eax
6500f047:	mov    ah,BYTE PTR [edi]
6500f049:	mov    al,BYTE PTR [edi+0x1]
6500f04c:	test   ax,ax
6500f04f:	jne    0x6500f069
6500f051:	mov    ecx,DWORD PTR [esi+0x4]
6500f054:	mov    edx,DWORD PTR [esi+0xc]
6500f057:	mov    ebx,DWORD PTR [esi]
6500f059:	mov    ebp,DWORD PTR [esi+0x8]
6500f05c:	mov    DWORD PTR [esp+0x34],ecx
6500f060:	mov    DWORD PTR [esp+0x3c],edx
6500f064:	jmp    0x6500f1cc
6500f069:	xor    ecx,ecx
6500f06b:	mov    eax,0x1
6500f070:	add    DWORD PTR [esp+0x60],eax
6500f074:	mov    DWORD PTR [esi+0x14],eax
6500f077:	mov    ch,BYTE PTR [edi]
6500f079:	mov    cl,BYTE PTR [edi+0x1]
6500f07c:	mov    DWORD PTR [esi+0x10],ecx
6500f07f:	jmp    0x6500f2fa
6500f084:	cmp    DWORD PTR [esp+0x60],0x20
6500f089:	jae    0x6500f345
6500f08f:	mov    eax,DWORD PTR [esp+0x60]
6500f093:	mov    ecx,DWORD PTR [esp+0x58]
6500f097:	lea    edx,[eax+eax*4]
6500f09a:	xor    eax,eax
6500f09c:	mov    ah,BYTE PTR [edi]
6500f09e:	lea    esi,[ecx+edx*8+0x18]
6500f0a2:	movzx  edx,BYTE PTR [edi+0x2]
6500f0a6:	mov    al,BYTE PTR [edi+0x1]
6500f0a9:	shl    eax,0x8
6500f0ac:	or     eax,edx
6500f0ae:	movzx  edx,BYTE PTR [edi+0x3]
6500f0b2:	shl    eax,0x8
6500f0b5:	or     eax,edx
6500f0b7:	mov    DWORD PTR [esi],0x7
6500f0bd:	mov    DWORD PTR [esi+0x8],0x0
6500f0c4:	mov    ebx,DWORD PTR [ecx]
6500f0c6:	shl    eax,0x5
6500f0c9:	call   0x6500e9c0
6500f0ce:	test   eax,eax
6500f0d0:	mov    DWORD PTR [esi+0xc],eax
6500f0d3:	je     0x6500f345
6500f0d9:	movzx  ecx,BYTE PTR [edi+0x2]
6500f0dd:	movzx  edx,BYTE PTR [edi+0x3]
6500f0e1:	xor    eax,eax
6500f0e3:	mov    ah,BYTE PTR [edi]
6500f0e5:	mov    al,BYTE PTR [edi+0x1]
6500f0e8:	shl    eax,0x8
6500f0eb:	or     eax,ecx
6500f0ed:	shl    eax,0x8
6500f0f0:	or     eax,edx
6500f0f2:	je     0x6500f1b9
6500f0f8:	xor    edx,edx
6500f0fa:	mov    eax,0x1
6500f0ff:	mov    DWORD PTR [esi+0x14],eax
6500f102:	mov    dh,BYTE PTR [edi]
6500f104:	movzx  ecx,BYTE PTR [edi+0x2]
6500f108:	mov    dl,BYTE PTR [edi+0x1]
6500f10b:	shl    edx,0x8
6500f10e:	or     edx,ecx
6500f110:	movzx  ecx,BYTE PTR [edi+0x3]
6500f114:	shl    edx,0x8
6500f117:	or     edx,ecx
6500f119:	add    DWORD PTR [esp+0x60],eax
6500f11d:	jmp    0x6500f2f7
6500f122:	cmp    al,0x90
6500f124:	jb     0x6500f173
6500f126:	cmp    al,0x9f
6500f128:	ja     0x6500f173
6500f12a:	cmp    DWORD PTR [esp+0x60],ecx
6500f12e:	jae    0x6500f345
6500f134:	mov    ecx,DWORD PTR [esp+0x60]
6500f138:	lea    edx,[ecx+ecx*4]
6500f13b:	mov    ecx,DWORD PTR [esp+0x58]
6500f13f:	lea    esi,[ecx+edx*8+0x18]
6500f143:	and    eax,0xf
6500f146:	call   0x6500ea20
6500f14b:	test   eax,eax
6500f14d:	jl     0x6500f345
6500f153:	mov    eax,DWORD PTR [esp+0x14]
6500f157:	test   BYTE PTR [eax],0xf
6500f15a:	je     0x6500f1b9
6500f15c:	mov    DWORD PTR [esi+0x14],0x0
6500f163:	movzx  edx,BYTE PTR [eax]
6500f166:	and    edx,0xf
6500f169:	add    DWORD PTR [esp+0x60],0x1
6500f16e:	jmp    0x6500f2f7
6500f173:	cmp    al,0x80
6500f175:	jb     0x6500f345
6500f17b:	cmp    al,0x8f
6500f17d:	ja     0x6500f345
6500f183:	cmp    DWORD PTR [esp+0x60],ecx
6500f187:	jae    0x6500f345
6500f18d:	mov    ecx,DWORD PTR [esp+0x60]
6500f191:	lea    edx,[ecx+ecx*4]
6500f194:	mov    ecx,DWORD PTR [esp+0x58]
6500f198:	lea    esi,[ecx+edx*8+0x18]
6500f19c:	and    eax,0xf
6500f19f:	call   0x6500ea50
6500f1a4:	test   eax,eax
6500f1a6:	jl     0x6500f345
6500f1ac:	mov    eax,DWORD PTR [esp+0x14]
6500f1b0:	test   BYTE PTR [eax],0xf
6500f1b3:	jne    0x6500f2e5
6500f1b9:	mov    eax,DWORD PTR [esi+0x4]
6500f1bc:	mov    ecx,DWORD PTR [esi+0xc]
6500f1bf:	mov    ebp,DWORD PTR [esi+0x8]
6500f1c2:	mov    ebx,DWORD PTR [esi]
6500f1c4:	mov    DWORD PTR [esp+0x34],eax
6500f1c8:	mov    DWORD PTR [esp+0x3c],ecx
6500f1cc:	mov    DWORD PTR [esp+0x38],ebp
6500f1d0:	mov    eax,DWORD PTR [esp+0x60]
6500f1d4:	lea    edx,[eax+eax*4]
6500f1d7:	mov    eax,DWORD PTR [esp+0x58]
6500f1db:	lea    edx,[eax+edx*8+0x18]
6500f1df:	lea    eax,[edx-0x28]
6500f1e2:	add    edx,0xfffffff0
6500f1e5:	mov    esi,0x1
6500f1ea:	lea    ebx,[ebx+0x0]
6500f1f0:	cmp    DWORD PTR [esp+0x60],0x0
6500f1f5:	je     0x6500f321
6500f1fb:	mov    ecx,DWORD PTR [eax+0x14]
6500f1fe:	sub    ecx,0x0
6500f201:	je     0x6500f27d
6500f203:	sub    ecx,esi
6500f205:	je     0x6500f2c8
6500f20b:	sub    ecx,esi
6500f20d:	jne    0x6500f345
6500f213:	mov    ecx,DWORD PTR [edx+0x4]
6500f216:	mov    esi,DWORD PTR [edx]
6500f218:	mov    DWORD PTR [esp+0x44],ecx
6500f21c:	mov    ecx,DWORD PTR [edx+0x8]
6500f21f:	mov    DWORD PTR [esp+0x48],ecx
6500f223:	mov    ecx,DWORD PTR [edx+0xc]
6500f226:	mov    DWORD PTR [esp+0x4c],ecx
6500f22a:	mov    ecx,DWORD PTR [eax+0x8]
6500f22d:	shl    ecx,0x5
6500f230:	add    ecx,DWORD PTR [eax+0xc]
6500f233:	mov    DWORD PTR [ecx],esi
6500f235:	mov    esi,DWORD PTR [esp+0x44]
6500f239:	mov    DWORD PTR [ecx+0x4],esi
6500f23c:	mov    esi,DWORD PTR [esp+0x48]
6500f240:	mov    DWORD PTR [ecx+0x8],esi
6500f243:	mov    esi,DWORD PTR [esp+0x4c]
6500f247:	mov    DWORD PTR [ecx+0xc],esi
6500f24a:	mov    ecx,DWORD PTR [eax+0x8]
6500f24d:	mov    esi,DWORD PTR [eax+0xc]
6500f250:	shl    ecx,0x5
6500f253:	lea    ecx,[ecx+esi*1+0x10]
6500f257:	mov    esi,DWORD PTR [esp+0x34]
6500f25b:	mov    DWORD PTR [ecx],ebx
6500f25d:	mov    DWORD PTR [ecx+0x4],esi
6500f260:	mov    esi,DWORD PTR [esp+0x3c]
6500f264:	mov    DWORD PTR [ecx+0x8],ebp
6500f267:	mov    DWORD PTR [ecx+0xc],esi
6500f26a:	mov    esi,0x1
6500f26f:	add    DWORD PTR [eax+0x8],esi
6500f272:	add    DWORD PTR [eax+0x10],0xffffffff
6500f276:	je     0x6500f2a2
6500f278:	mov    DWORD PTR [eax+0x14],esi
6500f27b:	jmp    0x6500f2fa
6500f27d:	mov    ecx,DWORD PTR [eax+0x8]
6500f280:	shl    ecx,0x4
6500f283:	add    ecx,DWORD PTR [eax+0xc]
6500f286:	mov    DWORD PTR [ecx],ebx
6500f288:	mov    ebx,DWORD PTR [esp+0x34]
6500f28c:	mov    DWORD PTR [ecx+0x4],ebx
6500f28f:	mov    ebx,DWORD PTR [esp+0x3c]
6500f293:	mov    DWORD PTR [ecx+0x8],ebp
6500f296:	mov    DWORD PTR [ecx+0xc],ebx
6500f299:	add    DWORD PTR [eax+0x8],esi
6500f29c:	add    DWORD PTR [eax+0x10],0xffffffff
6500f2a0:	jne    0x6500f2fa
6500f2a2:	mov    ecx,DWORD PTR [eax+0x4]
6500f2a5:	mov    ebp,DWORD PTR [eax+0x8]
6500f2a8:	mov    ebx,DWORD PTR [eax]
6500f2aa:	sub    DWORD PTR [esp+0x60],esi
6500f2ae:	mov    DWORD PTR [esp+0x34],ecx
6500f2b2:	mov    ecx,DWORD PTR [eax+0xc]
6500f2b5:	sub    eax,0x28
6500f2b8:	mov    DWORD PTR [esp+0x38],ebp
6500f2bc:	mov    DWORD PTR [esp+0x3c],ecx
6500f2c0:	sub    edx,0x28
6500f2c3:	jmp    0x6500f1f0
6500f2c8:	mov    edx,DWORD PTR [esp+0x34]
6500f2cc:	mov    ecx,DWORD PTR [esp+0x3c]
6500f2d0:	mov    DWORD PTR [eax+0x18],ebx
6500f2d3:	mov    DWORD PTR [eax+0x1c],edx
6500f2d6:	mov    DWORD PTR [eax+0x20],ebp
6500f2d9:	mov    DWORD PTR [eax+0x24],ecx
6500f2dc:	mov    DWORD PTR [eax+0x14],0x2
6500f2e3:	jmp    0x6500f2fa
6500f2e5:	mov    ecx,0x1
6500f2ea:	mov    DWORD PTR [esi+0x14],ecx
6500f2ed:	movzx  edx,BYTE PTR [eax]
6500f2f0:	and    edx,0xf
6500f2f3:	add    DWORD PTR [esp+0x60],ecx
6500f2f7:	mov    DWORD PTR [esi+0x10],edx
6500f2fa:	mov    eax,DWORD PTR [esp+0x14]
6500f2fe:	add    eax,0x1
6500f301:	cmp    eax,DWORD PTR [esp+0x20]
6500f305:	mov    DWORD PTR [esp+0x18],0x0
6500f30d:	mov    DWORD PTR [esp+0x14],eax
6500f311:	je     0x6500f341
6500f313:	mov    edx,DWORD PTR [esp+0x20]
6500f317:	mov    ecx,0x20
6500f31c:	jmp    0x6500ead0
6500f321:	mov    eax,DWORD PTR [esp+0x58]
6500f325:	mov    ecx,DWORD PTR [esp+0x34]
6500f329:	mov    edx,DWORD PTR [esp+0x3c]
6500f32d:	add    DWORD PTR [esp+0x14],esi
6500f331:	mov    DWORD PTR [eax+0x18],ebx
6500f334:	mov    DWORD PTR [eax+0x1c],ecx
6500f337:	mov    DWORD PTR [eax+0x20],ebp
6500f33a:	mov    DWORD PTR [eax+0x24],edx
6500f33d:	mov    eax,esi
6500f33f:	jmp    0x6500f348
6500f341:	xor    eax,eax
6500f343:	jmp    0x6500f348
6500f345:	or     eax,0xffffffff
6500f348:	mov    ecx,DWORD PTR [esp+0x58]
6500f34c:	mov    edx,DWORD PTR [esp+0x18]
6500f350:	mov    DWORD PTR [ecx+0x8],edx
6500f353:	mov    edx,DWORD PTR [esp+0x1c]
6500f357:	mov    DWORD PTR [ecx+0xc],edx
6500f35a:	mov    edx,DWORD PTR [esp+0x60]
6500f35e:	mov    DWORD PTR [ecx+0x10],edx
6500f361:	mov    ecx,DWORD PTR [esp+0x14]
6500f365:	sub    ecx,DWORD PTR [esp+0x5c]
6500f369:	mov    edx,DWORD PTR [esp+0x64]
6500f36d:	pop    edi
6500f36e:	pop    esi
6500f36f:	pop    ebp
6500f370:	mov    DWORD PTR [edx],ecx
6500f372:	pop    ebx
6500f373:	add    esp,0x44
6500f376:	ret    
6500f377:	nop
6500f378:	push   edx
6500f379:	jmp    0x6500f37b
6500f37b:	gs pop ecx
6500f37d:	jmp    0x6500f37f
6500f37f:	gs ins BYTE PTR es:[edi],dx
6500f381:	jmp    0x6500f383
6500f383:	gs jle 0x6500f371
6500f386:	add    BYTE PTR [ebp-0x62],ah
6500f389:	jmp    0x6500f38b
6500f38b:	gs inc ebp
6500f38d:	repz add BYTE PTR [ebp+0x0],ah
6500f391:	add    eax,0x5050201
6500f396:	add    eax,0x3050505
6500f39b:	add    eax,DWORD PTR [ebx]
6500f39d:	add    eax,DWORD PTR [ebx]
6500f39f:	add    eax,DWORD PTR [ebx]
6500f3a1:	add    eax,DWORD PTR [ebx]
6500f3a3:	add    eax,DWORD PTR ds:0x5050505
6500f3a9:	add    eax,0x4040404
6500f3ae:	add    al,0x4
6500f3b0:	inc    esi
6500f3b1:	in     al,dx
6500f3b2:	add    BYTE PTR [ebp+0x79],ah
6500f3b5:	in     al,dx
6500f3b6:	add    BYTE PTR [ebp+0xf],ah
6500f3b9:	in     eax,dx
6500f3ba:	add    BYTE PTR [ebp+0x23],ah
6500f3bd:	in     eax,dx
6500f3be:	add    BYTE PTR [ebp+0x3e],ah
6500f3c1:	in     eax,dx
6500f3c2:	add    BYTE PTR [ebp+0x6b],ah
6500f3c5:	in     eax,dx
6500f3c6:	add    BYTE PTR [ebp-0xf],ah
6500f3c9:	in     eax,dx
6500f3ca:	add    BYTE PTR [ebp-0x8],ah
6500f3cd:	in     eax,dx
6500f3ce:	add    BYTE PTR [ebp+0xd],ah
6500f3d1:	out    dx,al
6500f3d2:	add    BYTE PTR [ebp+0x35],ah
6500f3d5:	out    dx,al
6500f3d6:	add    BYTE PTR [ebp+0x45],ah
6500f3d9:	repz add BYTE PTR [ebp+0x45],ah
6500f3dd:	repz add BYTE PTR [ebp+0x45],ah
6500f3e1:	repz add BYTE PTR [ebp+0x45],ah
6500f3e5:	repz add BYTE PTR [ebp+0x45],ah
6500f3e9:	repz add BYTE PTR [ebp+0x45],ah
6500f3ed:	repz add BYTE PTR [ebp+0x1c],ah
6500f3f1:	in     al,dx
6500f3f2:	add    BYTE PTR [ebp+0x29],ah
6500f3f5:	in     al,dx
6500f3f6:	add    BYTE PTR [ebp-0x1b],ah
6500f3f9:	out    dx,al
6500f3fa:	add    BYTE PTR [ebp+0x64],ah
6500f3fd:	out    dx,eax
6500f3fe:	add    BYTE PTR [ebp+0x2],ah
6500f401:	lock add BYTE PTR [ebp-0x7c],ah
6500f405:	lock add BYTE PTR [ebp-0x33],ah
6500f409:	out    dx,al
6500f40a:	add    BYTE PTR [ebp-0x34],ah
6500f40d:	int3   
6500f40e:	int3   
6500f40f:	int3   
6500f410:	push   ebp
6500f411:	mov    ebp,esp
6500f413:	and    esp,0xfffffff8
6500f416:	sub    esp,0x51c
6500f41c:	push   ebx
6500f41d:	push   esi
6500f41e:	mov    esi,DWORD PTR [ebp+0x10]
6500f421:	xor    ebx,ebx
6500f423:	xor    eax,eax
6500f425:	cmp    esi,ebx
6500f427:	push   edi
6500f428:	mov    DWORD PTR [esp+0xc],eax
6500f42c:	je     0x6500f434
6500f42e:	mov    eax,DWORD PTR [esi]
6500f430:	mov    DWORD PTR [esp+0xc],eax
6500f434:	mov    edi,DWORD PTR [ebp+0xc]
6500f437:	cmp    edi,eax
6500f439:	ja     0x6500f444
6500f43b:	xor    eax,eax
6500f43d:	pop    edi
6500f43e:	pop    esi
6500f43f:	pop    ebx
6500f440:	mov    esp,ebp
6500f442:	pop    ebp
6500f443:	ret    
6500f444:	mov    edx,DWORD PTR [ebp+0x8]
6500f447:	xor    eax,eax
6500f449:	lea    ecx,[esp+0xc]
6500f44d:	push   ecx
6500f44e:	mov    DWORD PTR [esp+0x2c],eax
6500f452:	mov    DWORD PTR [esp+0x30],eax
6500f456:	mov    DWORD PTR [esp+0x34],eax
6500f45a:	mov    DWORD PTR [esp+0x38],eax
6500f45e:	mov    eax,DWORD PTR [ebp+0x14]
6500f461:	push   edi
6500f462:	mov    DWORD PTR [esp+0x18],eax
6500f466:	push   edx
6500f467:	lea    eax,[esp+0x1c]
6500f46b:	push   eax
6500f46c:	mov    DWORD PTR [esp+0x28],ebx
6500f470:	mov    DWORD PTR [esp+0x2c],ebx
6500f474:	mov    DWORD PTR [esp+0x30],ebx
6500f478:	mov    BYTE PTR [esp+0x24],bl
6500f47c:	call   0x6500ea80
6500f481:	add    esp,0x10
6500f484:	cmp    eax,ebx
6500f486:	jge    0x6500f492
6500f488:	or     eax,0xffffffff
6500f48b:	pop    edi
6500f48c:	pop    esi
6500f48d:	pop    ebx
6500f48e:	mov    esp,ebp
6500f490:	pop    ebp
6500f491:	ret    
6500f492:	cmp    esi,ebx
6500f494:	mov    ecx,DWORD PTR [esp+0xc]
6500f498:	je     0x6500f49c
6500f49a:	mov    DWORD PTR [esi],ecx
6500f49c:	cmp    eax,ebx
6500f49e:	je     0x6500f43b
6500f4a0:	mov    eax,DWORD PTR [ebp+0x18]
6500f4a3:	mov    edx,DWORD PTR [esp+0x28]
6500f4a7:	mov    DWORD PTR [eax],edx
6500f4a9:	mov    edx,DWORD PTR [esp+0x2c]
6500f4ad:	mov    DWORD PTR [eax+0x4],edx
6500f4b0:	mov    edx,DWORD PTR [esp+0x30]
6500f4b4:	mov    DWORD PTR [eax+0x8],edx
6500f4b7:	mov    edx,DWORD PTR [esp+0x34]
6500f4bb:	cmp    ecx,edi
6500f4bd:	pop    edi
6500f4be:	mov    DWORD PTR [eax+0xc],edx
6500f4c1:	sbb    eax,eax
6500f4c3:	pop    esi
6500f4c4:	add    eax,0x2
6500f4c7:	pop    ebx
6500f4c8:	mov    esp,ebp
6500f4ca:	pop    ebp
6500f4cb:	ret    
6500f4cc:	int3   
6500f4cd:	int3   
6500f4ce:	int3   
6500f4cf:	int3   
6500f4d0:	mov    eax,DWORD PTR [esp+0x8]
6500f4d4:	sub    eax,0x1
6500f4d7:	jne    0x6500f4e2
6500f4d9:	mov    eax,DWORD PTR [esp+0x4]
6500f4dd:	mov    ds:0x6502d4c4,eax
6500f4e2:	mov    eax,0x1
6500f4e7:	ret    0xc
6500f4ea:	int3   
6500f4eb:	int3   
6500f4ec:	int3   
6500f4ed:	int3   
6500f4ee:	int3   
6500f4ef:	int3   
6500f4f0:	cmp    BYTE PTR ds:0x6502d4c0,0x0
6500f4f7:	jne    0x6500f556
6500f4f9:	push   esi
6500f4fa:	push   edi
6500f4fb:	push   0x650242e4
6500f500:	mov    BYTE PTR ds:0x6502d4c0,0x1
6500f507:	call   DWORD PTR ds:0x65024018
6500f50d:	push   0x650242b4
6500f512:	push   0xb
6500f514:	push   0x650242a8
6500f519:	mov    esi,eax
6500f51b:	call   0x65006a80
6500f520:	mov    edi,DWORD PTR ds:0x65024014
6500f526:	add    esp,0xc
6500f529:	push   eax
6500f52a:	push   esi
6500f52b:	call   edi
6500f52d:	push   0x65024274
6500f532:	push   0x19
6500f534:	push   0x65024258
6500f539:	mov    ds:0x6502d4b8,eax
6500f53e:	call   0x65006a80
6500f543:	add    esp,0xc
6500f546:	push   eax
6500f547:	push   esi
6500f548:	call   edi
6500f54a:	pop    edi
6500f54b:	mov    ds:0x6502d4bc,eax
6500f550:	pop    esi
6500f551:	jmp    0x65011900
6500f556:	ret    
6500f557:	int3   
6500f558:	int3   
6500f559:	int3   
6500f55a:	int3   
6500f55b:	int3   
6500f55c:	int3   
6500f55d:	int3   
6500f55e:	int3   
6500f55f:	int3   
6500f560:	call   0x6500f4f0
6500f565:	mov    eax,ds:0x6502d4b8
6500f56a:	test   eax,eax
6500f56c:	je     0x6500f570
6500f56e:	jmp    eax
6500f570:	ret    0x8
6500f573:	int3   
6500f574:	int3   
6500f575:	int3   
6500f576:	int3   
6500f577:	int3   
6500f578:	int3   
6500f579:	int3   
6500f57a:	int3   
6500f57b:	int3   
6500f57c:	int3   
6500f57d:	int3   
6500f57e:	int3   
6500f57f:	int3   
6500f580:	call   0x6500f4f0
6500f585:	mov    eax,ds:0x6502d4bc
6500f58a:	test   eax,eax
6500f58c:	je     0x6500f590
6500f58e:	jmp    eax
6500f590:	ret    0x4
6500f593:	int3   
6500f594:	int3   
6500f595:	int3   
6500f596:	int3   
6500f597:	int3   
6500f598:	int3   
6500f599:	int3   
6500f59a:	int3   
6500f59b:	int3   
6500f59c:	int3   
6500f59d:	int3   
6500f59e:	int3   
6500f59f:	int3   
6500f5a0:	mov    eax,DWORD PTR [esp+0x4]
6500f5a4:	mov    edx,DWORD PTR [ecx]
6500f5a6:	mov    DWORD PTR [eax],edx
6500f5a8:	mov    edx,DWORD PTR [ecx+0x4]
6500f5ab:	mov    DWORD PTR [eax+0x4],edx
6500f5ae:	mov    edx,DWORD PTR [ecx+0x8]
6500f5b1:	mov    ecx,DWORD PTR [ecx+0xc]
6500f5b4:	mov    DWORD PTR [eax+0x8],edx
6500f5b7:	mov    DWORD PTR [eax+0xc],ecx
6500f5ba:	ret    0x4
6500f5bd:	int3   
6500f5be:	int3   
6500f5bf:	int3   
6500f5c0:	jmp    0x6501208a
6500f5c5:	int3   
6500f5c6:	int3   
6500f5c7:	int3   
6500f5c8:	int3   
6500f5c9:	int3   
6500f5ca:	int3   
6500f5cb:	int3   
6500f5cc:	int3   
6500f5cd:	int3   
6500f5ce:	int3   
6500f5cf:	int3   
6500f5d0:	push   esi
6500f5d1:	mov    esi,ecx
6500f5d3:	call   0x6501208a
6500f5d8:	test   BYTE PTR [esp+0x8],0x1
6500f5dd:	je     0x6500f5e8
6500f5df:	push   esi
6500f5e0:	call   0x65011f62
6500f5e5:	add    esp,0x4
6500f5e8:	mov    eax,esi
6500f5ea:	pop    esi
6500f5eb:	ret    0x4
6500f5ee:	int3   
6500f5ef:	int3   
6500f5f0:	push   ebx
6500f5f1:	mov    ebx,DWORD PTR ds:0x6502404c
6500f5f7:	push   esi
6500f5f8:	push   edi
6500f5f9:	mov    edi,DWORD PTR [esp+0x10]
6500f5fd:	xor    esi,esi
6500f5ff:	nop
6500f600:	lea    eax,[esp+0x10]
6500f604:	push   0x0
6500f606:	push   eax
6500f607:	mov    DWORD PTR [esp+0x18],0x0
6500f60f:	call   0x6500e4d0
6500f614:	call   eax
6500f616:	test   eax,eax
6500f618:	je     0x6500f629
6500f61a:	cmp    edi,0xffffffff
6500f61d:	je     0x6500f629
6500f61f:	add    esi,0x3e8
6500f625:	cmp    esi,edi
6500f627:	ja     0x6500f632
6500f629:	push   0x3e8
6500f62e:	call   ebx
6500f630:	jmp    0x6500f600
6500f632:	pop    edi
6500f633:	pop    esi
6500f634:	mov    al,0x1
6500f636:	pop    ebx
6500f637:	ret    
6500f638:	int3   
6500f639:	int3   
6500f63a:	int3   
6500f63b:	int3   
6500f63c:	int3   
6500f63d:	int3   
6500f63e:	int3   
6500f63f:	int3   
6500f640:	mov    ecx,DWORD PTR [esp+0x4]
6500f644:	sub    esp,0xc
6500f647:	test   ecx,ecx
6500f649:	ja     0x6500f661
6500f64b:	xor    ecx,ecx
6500f64d:	lea    edx,[ecx*4+0x0]
6500f654:	push   edx
6500f655:	call   0x650122fc
6500f65a:	add    esp,0x4
6500f65d:	add    esp,0xc
6500f660:	ret    
6500f661:	or     eax,0xffffffff
6500f664:	xor    edx,edx
6500f666:	div    ecx
6500f668:	cmp    eax,0x4
6500f66b:	jae    0x6500f64d
6500f66d:	lea    eax,[esp+0x10]
6500f671:	push   eax
6500f672:	lea    ecx,[esp+0x4]
6500f676:	mov    DWORD PTR [esp+0x14],0x0
6500f67e:	call   0x65011f78
6500f683:	push   0x65029e4c
6500f688:	lea    ecx,[esp+0x4]
6500f68c:	push   ecx
6500f68d:	mov    DWORD PTR [esp+0x8],0x65024bf8
6500f695:	call   0x65012366
6500f69a:	int3   
6500f69b:	int3   
6500f69c:	int3   
6500f69d:	int3   
6500f69e:	int3   
6500f69f:	int3   
6500f6a0:	push   esi
6500f6a1:	mov    esi,DWORD PTR [ecx]
6500f6a3:	test   esi,esi
6500f6a5:	je     0x6500f6b6
6500f6a7:	push   esi
6500f6a8:	call   0x6500e920
6500f6ad:	push   esi
6500f6ae:	call   0x65011f62
6500f6b3:	add    esp,0x8
6500f6b6:	pop    esi
6500f6b7:	ret    
6500f6b8:	int3   
6500f6b9:	int3   
6500f6ba:	int3   
6500f6bb:	int3   
6500f6bc:	int3   
6500f6bd:	int3   
6500f6be:	int3   
6500f6bf:	int3   
6500f6c0:	push   esi
6500f6c1:	mov    esi,DWORD PTR [ecx+0x10]
6500f6c4:	test   esi,esi
6500f6c6:	je     0x6500f6d7
6500f6c8:	push   esi
6500f6c9:	call   0x6500e920
6500f6ce:	push   esi
6500f6cf:	call   0x65011f62
6500f6d4:	add    esp,0x8
6500f6d7:	pop    esi
6500f6d8:	ret    
6500f6d9:	int3   
6500f6da:	int3   
6500f6db:	int3   
6500f6dc:	int3   
6500f6dd:	int3   
6500f6de:	int3   
6500f6df:	int3   
6500f6e0:	mov    ecx,DWORD PTR [esp+0x8]
6500f6e4:	test   ecx,ecx
6500f6e6:	jne    0x6500f6f2
6500f6e8:	push   0x80004005
6500f6ed:	call   0x650010a0
6500f6f2:	mov    eax,DWORD PTR [esp+0x4]
6500f6f6:	mov    eax,DWORD PTR [eax]
6500f6f8:	mov    dx,WORD PTR [eax]
6500f6fb:	cmp    dx,WORD PTR [ecx]
6500f6fe:	jne    0x6500f726
6500f700:	test   dx,dx
6500f703:	je     0x6500f71a
6500f705:	mov    dx,WORD PTR [eax+0x2]
6500f709:	cmp    dx,WORD PTR [ecx+0x2]
6500f70d:	jne    0x6500f726
6500f70f:	add    eax,0x4
6500f712:	add    ecx,0x4
6500f715:	test   dx,dx
6500f718:	jne    0x6500f6f8
6500f71a:	xor    eax,eax
6500f71c:	xor    ecx,ecx
6500f71e:	test   eax,eax
6500f720:	setne  cl
6500f723:	mov    al,cl
6500f725:	ret    
6500f726:	sbb    eax,eax
6500f728:	sbb    eax,0xffffffff
6500f72b:	xor    ecx,ecx
6500f72d:	test   eax,eax
6500f72f:	setne  cl
6500f732:	mov    al,cl
6500f734:	ret    
6500f735:	int3   
6500f736:	int3   
6500f737:	int3   
6500f738:	int3   
6500f739:	int3   
6500f73a:	int3   
6500f73b:	int3   
6500f73c:	int3   
6500f73d:	int3   
6500f73e:	int3   
6500f73f:	int3   
6500f740:	mov    eax,DWORD PTR [esp+0x4]
6500f744:	mov    ecx,DWORD PTR [esp+0x8]
6500f748:	cmp    eax,ecx
6500f74a:	je     0x6500f75d
6500f74c:	mov    edx,DWORD PTR [esp+0xc]
6500f750:	push   esi
6500f751:	mov    esi,DWORD PTR [edx]
6500f753:	mov    DWORD PTR [eax],esi
6500f755:	add    eax,0x4
6500f758:	cmp    eax,ecx
6500f75a:	jne    0x6500f751
6500f75c:	pop    esi
6500f75d:	ret    
6500f75e:	int3   
6500f75f:	int3   
6500f760:	mov    eax,DWORD PTR [esp+0x8]
6500f764:	mov    edx,DWORD PTR [esp+0x4]
6500f768:	sub    eax,edx
6500f76a:	sar    eax,0x2
6500f76d:	push   esi
6500f76e:	mov    esi,DWORD PTR [esp+0x10]
6500f772:	lea    ecx,[eax*4+0x0]
6500f779:	sub    esi,ecx
6500f77b:	test   eax,eax
6500f77d:	jle    0x6500f78b
6500f77f:	push   ecx
6500f780:	push   edx
6500f781:	push   ecx
6500f782:	push   esi
6500f783:	call   0x6501214e
6500f788:	add    esp,0x10
6500f78b:	mov    eax,esi
6500f78d:	pop    esi
6500f78e:	ret    
6500f78f:	int3   
6500f790:	mov    eax,DWORD PTR [esp+0x14]
6500f794:	push   ebp
6500f795:	mov    ebp,DWORD PTR [esp+0x8]
6500f799:	push   esi
6500f79a:	mov    esi,DWORD PTR [esp+0x14]
6500f79e:	push   edi
6500f79f:	lea    edi,[esi+eax*1]
6500f7a2:	mov    eax,DWORD PTR [ebp+0x0]
6500f7a5:	mov    edx,DWORD PTR [eax-0x8]
6500f7a8:	sub    eax,0x10
6500f7ab:	mov    ecx,0x1
6500f7b0:	sub    ecx,DWORD PTR [eax+0xc]
6500f7b3:	sub    edx,edi
6500f7b5:	or     ecx,edx
6500f7b7:	jge    0x6500f7c1
6500f7b9:	push   edi
6500f7ba:	mov    ecx,ebp
6500f7bc:	call   0x65001e60
6500f7c1:	mov    eax,DWORD PTR [esp+0x14]
6500f7c5:	push   ebx
6500f7c6:	mov    ebx,DWORD PTR [ebp+0x0]
6500f7c9:	add    esi,esi
6500f7cb:	push   esi
6500f7cc:	push   eax
6500f7cd:	push   esi
6500f7ce:	push   ebx
6500f7cf:	call   0x650120d3
6500f7d4:	mov    eax,DWORD PTR [esp+0x34]
6500f7d8:	mov    ecx,DWORD PTR [esp+0x30]
6500f7dc:	add    eax,eax
6500f7de:	push   eax
6500f7df:	push   ecx
6500f7e0:	push   eax
6500f7e1:	add    esi,ebx
6500f7e3:	push   esi
6500f7e4:	call   0x650120d3
6500f7e9:	add    esp,0x20
6500f7ec:	test   edi,edi
6500f7ee:	pop    ebx
6500f7ef:	jl     0x6500f809
6500f7f1:	mov    eax,DWORD PTR [ebp+0x0]
6500f7f4:	cmp    edi,DWORD PTR [eax-0x8]
6500f7f7:	jg     0x6500f809
6500f7f9:	mov    DWORD PTR [eax-0xc],edi
6500f7fc:	mov    edx,DWORD PTR [ebp+0x0]
6500f7ff:	mov    WORD PTR [edx+edi*2],0x0
6500f805:	pop    edi
6500f806:	pop    esi
6500f807:	pop    ebp
6500f808:	ret    
6500f809:	push   0x80070057
6500f80e:	call   0x650010a0
6500f813:	int3   
6500f814:	int3   
6500f815:	int3   
6500f816:	int3   
6500f817:	int3   
6500f818:	int3   
6500f819:	int3   
6500f81a:	int3   
6500f81b:	int3   
6500f81c:	int3   
6500f81d:	int3   
6500f81e:	int3   
6500f81f:	int3   
6500f820:	push   ebx
6500f821:	push   esi
6500f822:	mov    esi,ecx
6500f824:	cmp    DWORD PTR [esi+0x34],0x10
6500f828:	jb     0x6500f836
6500f82a:	mov    eax,DWORD PTR [esi+0x20]
6500f82d:	push   eax
6500f82e:	call   0x65011f62
6500f833:	add    esp,0x4
6500f836:	xor    ebx,ebx
6500f838:	mov    DWORD PTR [esi+0x34],0xf
6500f83f:	mov    DWORD PTR [esi+0x30],ebx
6500f842:	mov    BYTE PTR [esi+0x20],bl
6500f845:	cmp    DWORD PTR [esi+0x18],0x10
6500f849:	jb     0x6500f857
6500f84b:	mov    ecx,DWORD PTR [esi+0x4]
6500f84e:	push   ecx
6500f84f:	call   0x65011f62
6500f854:	add    esp,0x4
6500f857:	mov    DWORD PTR [esi+0x14],ebx
6500f85a:	mov    DWORD PTR [esi+0x18],0xf
6500f861:	mov    BYTE PTR [esi+0x4],bl
6500f864:	pop    esi
6500f865:	pop    ebx
6500f866:	ret    
6500f867:	int3   
6500f868:	int3   
6500f869:	int3   
6500f86a:	int3   
6500f86b:	int3   
6500f86c:	int3   
6500f86d:	int3   
6500f86e:	int3   
6500f86f:	int3   
6500f870:	push   0xffffffff
6500f872:	push   0x65021d09
6500f877:	mov    eax,fs:0x0
6500f87d:	push   eax
6500f87e:	push   ecx
6500f87f:	push   esi
6500f880:	push   edi
6500f881:	mov    eax,ds:0x6502c09c
6500f886:	xor    eax,esp
6500f888:	push   eax
6500f889:	lea    eax,[esp+0x10]
6500f88d:	mov    fs:0x0,eax
6500f893:	mov    edi,DWORD PTR [esp+0x24]
6500f897:	mov    DWORD PTR [esp+0xc],0x0
6500f89f:	mov    eax,DWORD PTR [edi]
6500f8a1:	mov    ecx,DWORD PTR [eax-0x10]
6500f8a4:	test   ecx,ecx
6500f8a6:	mov    DWORD PTR [esp+0x18],0x0
6500f8ae:	je     0x6500f8bb
6500f8b0:	mov    edx,DWORD PTR [ecx]
6500f8b2:	mov    eax,DWORD PTR [edx+0x10]
6500f8b5:	call   eax
6500f8b7:	test   eax,eax
6500f8b9:	jne    0x6500f8cb
6500f8bb:	mov    edx,DWORD PTR ds:0x6502d560
6500f8c1:	mov    eax,DWORD PTR [edx+0x10]
6500f8c4:	mov    ecx,0x6502d560
6500f8c9:	call   eax
6500f8cb:	xor    ecx,ecx
6500f8cd:	test   eax,eax
6500f8cf:	setne  cl
6500f8d2:	test   ecx,ecx
6500f8d4:	jne    0x6500f8e0
6500f8d6:	push   0x80004005
6500f8db:	call   0x650010a0
6500f8e0:	mov    edx,DWORD PTR [eax]
6500f8e2:	mov    ecx,eax
6500f8e4:	mov    eax,DWORD PTR [edx+0xc]
6500f8e7:	call   eax
6500f8e9:	mov    esi,DWORD PTR [esp+0x20]
6500f8ed:	add    eax,0x10
6500f8f0:	mov    DWORD PTR [esi],eax
6500f8f2:	mov    ecx,DWORD PTR [esp+0x28]
6500f8f6:	mov    eax,DWORD PTR [ecx]
6500f8f8:	mov    edx,DWORD PTR [eax-0xc]
6500f8fb:	mov    ecx,DWORD PTR [edi]
6500f8fd:	mov    edi,DWORD PTR [ecx-0xc]
6500f900:	push   edx
6500f901:	push   eax
6500f902:	push   edi
6500f903:	push   ecx
6500f904:	push   esi
6500f905:	mov    DWORD PTR [esp+0x2c],0x0
6500f90d:	mov    DWORD PTR [esp+0x20],0x1
6500f915:	call   0x6500f790
6500f91a:	add    esp,0x14
6500f91d:	mov    eax,esi
6500f91f:	mov    ecx,DWORD PTR [esp+0x10]
6500f923:	mov    DWORD PTR fs:0x0,ecx
6500f92a:	pop    ecx
6500f92b:	pop    edi
6500f92c:	pop    esi
6500f92d:	add    esp,0x10
6500f930:	ret    
6500f931:	int3   
6500f932:	int3   
6500f933:	int3   
6500f934:	int3   
6500f935:	int3   
6500f936:	int3   
6500f937:	int3   
6500f938:	int3   
6500f939:	int3   
6500f93a:	int3   
6500f93b:	int3   
6500f93c:	int3   
6500f93d:	int3   
6500f93e:	int3   
6500f93f:	int3   
6500f940:	push   0xffffffff
6500f942:	push   0x65021d49
6500f947:	mov    eax,fs:0x0
6500f94d:	push   eax
6500f94e:	push   ecx
6500f94f:	push   ebp
6500f950:	push   esi
6500f951:	push   edi
6500f952:	mov    eax,ds:0x6502c09c
6500f957:	xor    eax,esp
6500f959:	push   eax
6500f95a:	lea    eax,[esp+0x14]
6500f95e:	mov    fs:0x0,eax
6500f964:	mov    ebp,DWORD PTR [esp+0x28]
6500f968:	mov    DWORD PTR [esp+0x10],0x0
6500f970:	mov    eax,DWORD PTR [ebp+0x0]
6500f973:	mov    ecx,DWORD PTR [eax-0x10]
6500f976:	test   ecx,ecx
6500f978:	mov    DWORD PTR [esp+0x1c],0x0
6500f980:	je     0x6500f98d
6500f982:	mov    edx,DWORD PTR [ecx]
6500f984:	mov    eax,DWORD PTR [edx+0x10]
6500f987:	call   eax
6500f989:	test   eax,eax
6500f98b:	jne    0x6500f99d
6500f98d:	mov    edx,DWORD PTR ds:0x6502d560
6500f993:	mov    eax,DWORD PTR [edx+0x10]
6500f996:	mov    ecx,0x6502d560
6500f99b:	call   eax
6500f99d:	xor    ecx,ecx
6500f99f:	test   eax,eax
6500f9a1:	setne  cl
6500f9a4:	test   ecx,ecx
6500f9a6:	jne    0x6500f9b2
6500f9a8:	push   0x80004005
6500f9ad:	call   0x650010a0
6500f9b2:	mov    edx,DWORD PTR [eax]
6500f9b4:	mov    ecx,eax
6500f9b6:	mov    eax,DWORD PTR [edx+0xc]
6500f9b9:	call   eax
6500f9bb:	mov    esi,DWORD PTR [esp+0x24]
6500f9bf:	add    eax,0x10
6500f9c2:	mov    DWORD PTR [esi],eax
6500f9c4:	mov    edi,DWORD PTR [esp+0x2c]
6500f9c8:	test   edi,edi
6500f9ca:	mov    DWORD PTR [esp+0x1c],0x0
6500f9d2:	mov    DWORD PTR [esp+0x10],0x1
6500f9da:	jne    0x6500f9e0
6500f9dc:	xor    eax,eax
6500f9de:	jmp    0x6500f9f4
6500f9e0:	mov    eax,edi
6500f9e2:	lea    edx,[eax+0x2]
6500f9e5:	mov    cx,WORD PTR [eax]
6500f9e8:	add    eax,0x2
6500f9eb:	test   cx,cx
6500f9ee:	jne    0x6500f9e5
6500f9f0:	sub    eax,edx
6500f9f2:	sar    eax,1
6500f9f4:	mov    ecx,DWORD PTR [ebp+0x0]
6500f9f7:	mov    edx,DWORD PTR [ecx-0xc]
6500f9fa:	push   eax
6500f9fb:	push   edi
6500f9fc:	push   edx
6500f9fd:	push   ecx
6500f9fe:	push   esi
6500f9ff:	call   0x6500f790
6500fa04:	add    esp,0x14
6500fa07:	mov    eax,esi
6500fa09:	mov    ecx,DWORD PTR [esp+0x14]
6500fa0d:	mov    DWORD PTR fs:0x0,ecx
6500fa14:	pop    ecx
6500fa15:	pop    edi
6500fa16:	pop    esi
6500fa17:	pop    ebp
6500fa18:	add    esp,0x10
6500fa1b:	ret    
6500fa1c:	int3   
6500fa1d:	int3   
6500fa1e:	int3   
6500fa1f:	int3   
6500fa20:	mov    eax,DWORD PTR [esp+0x8]
6500fa24:	mov    ecx,DWORD PTR [esp+0x4]
6500fa28:	mov    edx,DWORD PTR [esp+0xc]
6500fa2c:	sub    eax,ecx
6500fa2e:	sar    eax,0x2
6500fa31:	lea    eax,[eax*4+0x0]
6500fa38:	push   esi
6500fa39:	lea    esi,[eax+edx*1]
6500fa3c:	je     0x6500fa4a
6500fa3e:	push   eax
6500fa3f:	push   ecx
6500fa40:	push   eax
6500fa41:	push   edx
6500fa42:	call   0x6501214e
6500fa47:	add    esp,0x10
6500fa4a:	mov    eax,esi
6500fa4c:	pop    esi
6500fa4d:	ret    0xc
6500fa50:	push   esi
6500fa51:	mov    esi,DWORD PTR [esp+0xc]
6500fa55:	test   esi,esi
6500fa57:	push   edi
6500fa58:	mov    edi,DWORD PTR [esp+0xc]
6500fa5c:	mov    eax,esi
6500fa5e:	mov    ecx,edi
6500fa60:	jbe    0x6500fa76
6500fa62:	mov    edx,DWORD PTR [esp+0x14]
6500fa66:	push   ebx
6500fa67:	mov    ebx,DWORD PTR [edx]
6500fa69:	mov    DWORD PTR [ecx],ebx
6500fa6b:	sub    eax,0x1
6500fa6e:	add    ecx,0x4
6500fa71:	test   eax,eax
6500fa73:	ja     0x6500fa67
6500fa75:	pop    ebx
6500fa76:	lea    eax,[edi+esi*4]
6500fa79:	pop    edi
6500fa7a:	pop    esi
6500fa7b:	ret    0xc
6500fa7e:	int3   
6500fa7f:	int3   
6500fa80:	mov    eax,DWORD PTR [esp+0x4]
6500fa84:	push   esi
6500fa85:	push   eax
6500fa86:	mov    esi,ecx
6500fa88:	call   0x65012072
6500fa8d:	mov    DWORD PTR [esi],0x6502431c
6500fa93:	mov    eax,esi
6500fa95:	pop    esi
6500fa96:	ret    0x4
6500fa99:	int3   
6500fa9a:	int3   
6500fa9b:	int3   
6500fa9c:	int3   
6500fa9d:	int3   
6500fa9e:	int3   
6500fa9f:	int3   
6500faa0:	push   esi
6500faa1:	mov    esi,ecx
6500faa3:	mov    DWORD PTR [esi],0x650266dc
6500faa9:	cmp    DWORD PTR [esi+0x24],0x10
6500faad:	jb     0x6500fabb
6500faaf:	mov    eax,DWORD PTR [esi+0x10]
6500fab2:	push   eax
6500fab3:	call   0x65011f62
6500fab8:	add    esp,0x4
6500fabb:	xor    eax,eax
6500fabd:	mov    DWORD PTR [esi+0x24],0xf
6500fac4:	mov    DWORD PTR [esi+0x20],eax
6500fac7:	mov    BYTE PTR [esi+0x10],al
6500faca:	mov    ecx,esi
6500facc:	pop    esi
6500facd:	jmp    0x65012036
6500fad2:	int3   
6500fad3:	int3   
6500fad4:	int3   
6500fad5:	int3   
6500fad6:	int3   
6500fad7:	int3   
6500fad8:	int3   
6500fad9:	int3   
6500fada:	int3   
6500fadb:	int3   
6500fadc:	int3   
6500fadd:	int3   
6500fade:	int3   
6500fadf:	int3   
6500fae0:	push   0xffffffff
6500fae2:	push   0x65021d78
6500fae7:	mov    eax,fs:0x0
6500faed:	push   eax
6500faee:	sub    esp,0x44
6500faf1:	mov    eax,ds:0x6502c09c
6500faf6:	xor    eax,esp
6500faf8:	push   eax
6500faf9:	lea    eax,[esp+0x48]
6500fafd:	mov    fs:0x0,eax
6500fb03:	push   0x12
6500fb05:	push   0x65028418
6500fb0a:	lea    ecx,[esp+0xc]
6500fb0e:	mov    DWORD PTR [esp+0x24],0xf
6500fb16:	mov    DWORD PTR [esp+0x20],0x0
6500fb1e:	mov    BYTE PTR [esp+0x10],0x0
6500fb23:	call   0x650018c0
6500fb28:	lea    eax,[esp+0x4]
6500fb2c:	push   eax
6500fb2d:	lea    ecx,[esp+0x24]
6500fb31:	mov    DWORD PTR [esp+0x54],0x0
6500fb39:	call   0x65002d20
6500fb3e:	push   0x65029f18
6500fb43:	lea    ecx,[esp+0x24]
6500fb47:	push   ecx
6500fb48:	mov    DWORD PTR [esp+0x28],0x65024c10
6500fb50:	call   0x65012366
6500fb55:	int3   
6500fb56:	int3   
6500fb57:	int3   
6500fb58:	int3   
6500fb59:	int3   
6500fb5a:	int3   
6500fb5b:	int3   
6500fb5c:	int3   
6500fb5d:	int3   
6500fb5e:	int3   
6500fb5f:	int3   
6500fb60:	sub    esp,0x10
6500fb63:	mov    edx,DWORD PTR [ecx+0x4]
6500fb66:	mov    eax,DWORD PTR [ecx]
6500fb68:	cmp    eax,0x5
6500fb6b:	mov    DWORD PTR [esp+0x4],edx
6500fb6f:	mov    edx,DWORD PTR [ecx+0x8]
6500fb72:	mov    ecx,DWORD PTR [ecx+0xc]
6500fb75:	je     0x6500fb9c
6500fb77:	push   0x65024324
6500fb7c:	lea    ecx,[esp+0x4]
6500fb80:	call   0x65012059
6500fb85:	push   0x650293c8
6500fb8a:	lea    eax,[esp+0x4]
6500fb8e:	push   eax
6500fb8f:	mov    DWORD PTR [esp+0x8],0x6502431c
6500fb97:	call   0x65012366
6500fb9c:	push   edx
6500fb9d:	push   ecx
6500fb9e:	mov    ecx,DWORD PTR [esp+0x1c]
6500fba2:	call   0x650018c0
6500fba7:	add    esp,0x10
6500fbaa:	ret    0x4
6500fbad:	int3   
6500fbae:	int3   
6500fbaf:	int3   
6500fbb0:	push   0xffffffff
6500fbb2:	push   0x65021dbe
6500fbb7:	mov    eax,fs:0x0
6500fbbd:	push   eax
6500fbbe:	sub    esp,0x9c
6500fbc4:	push   ebx
6500fbc5:	push   ebp
6500fbc6:	push   edi
6500fbc7:	mov    eax,ds:0x6502c09c
6500fbcc:	xor    eax,esp
6500fbce:	push   eax
6500fbcf:	lea    eax,[esp+0xac]
6500fbd6:	mov    fs:0x0,eax
6500fbdc:	xor    ebx,ebx
6500fbde:	push   0x1c
6500fbe0:	mov    DWORD PTR [esp+0x14],ebx
6500fbe4:	call   0x650122fc
6500fbe9:	mov    edi,eax
6500fbeb:	add    esp,0x4
6500fbee:	cmp    edi,ebx
6500fbf0:	je     0x6500fc02
6500fbf2:	push   0x2000
6500fbf7:	push   edi
6500fbf8:	call   0x6500e980
6500fbfd:	add    esp,0x8
6500fc00:	jmp    0x6500fc04
6500fc02:	xor    edi,edi
6500fc04:	mov    DWORD PTR [esp+0x20],edi
6500fc08:	mov    ecx,DWORD PTR [esp+0xc4]
6500fc0f:	mov    edx,DWORD PTR [esp+0xc0]
6500fc16:	lea    eax,[esp+0x10]
6500fc1a:	push   eax
6500fc1b:	mov    eax,DWORD PTR [esp+0xc0]
6500fc22:	push   edi
6500fc23:	push   ecx
6500fc24:	push   edx
6500fc25:	push   eax
6500fc26:	mov    DWORD PTR [esp+0xc8],ebx
6500fc2d:	call   0x6500f410
6500fc32:	add    esp,0x14
6500fc35:	sub    eax,ebx
6500fc37:	je     0x6500fd06
6500fc3d:	sub    eax,0x1
6500fc40:	je     0x6500fce9
6500fc46:	sub    eax,0x1
6500fc49:	je     0x6500fc98
6500fc4b:	push   0xb
6500fc4d:	push   0x6502434c
6500fc52:	lea    ecx,[esp+0x2c]
6500fc56:	mov    DWORD PTR [esp+0x44],0xf
6500fc5e:	mov    DWORD PTR [esp+0x40],ebx
6500fc62:	mov    BYTE PTR [esp+0x30],bl
6500fc66:	call   0x650018c0
6500fc6b:	lea    ecx,[esp+0x24]
6500fc6f:	push   ecx
6500fc70:	lea    ecx,[esp+0x60]
6500fc74:	mov    BYTE PTR [esp+0xb8],0x2
6500fc7c:	call   0x65002080
6500fc81:	push   0x6502944c
6500fc86:	lea    edx,[esp+0x60]
6500fc8a:	push   edx
6500fc8b:	mov    DWORD PTR [esp+0x64],0x65024330
6500fc93:	call   0x65012366
6500fc98:	mov    eax,DWORD PTR [esp+0x10]
6500fc9c:	mov    ecx,DWORD PTR [esp+0x14]
6500fca0:	mov    edx,DWORD PTR [esp+0x18]
6500fca4:	mov    DWORD PTR [esi],eax
6500fca6:	mov    eax,DWORD PTR [esp+0x1c]
6500fcaa:	mov    DWORD PTR [esi+0x4],ecx
6500fcad:	mov    DWORD PTR [esi+0x8],edx
6500fcb0:	mov    DWORD PTR [esi+0xc],eax
6500fcb3:	mov    ebp,DWORD PTR [esi+0x10]
6500fcb6:	cmp    edi,ebp
6500fcb8:	je     0x6500fccd
6500fcba:	cmp    ebp,ebx
6500fcbc:	je     0x6500fccd
6500fcbe:	push   ebp
6500fcbf:	call   0x6500e920
6500fcc4:	push   ebp
6500fcc5:	call   0x65011f62
6500fcca:	add    esp,0x8
6500fccd:	mov    DWORD PTR [esi+0x10],edi
6500fcd0:	mov    ecx,DWORD PTR [esp+0xac]
6500fcd7:	mov    DWORD PTR fs:0x0,ecx
6500fcde:	pop    ecx
6500fcdf:	pop    edi
6500fce0:	pop    ebp
6500fce1:	pop    ebx
6500fce2:	add    esp,0xa8
6500fce8:	ret    
6500fce9:	mov    ecx,DWORD PTR [esp+0x10]
6500fced:	mov    edx,DWORD PTR [esp+0x14]
6500fcf1:	mov    eax,DWORD PTR [esp+0x18]
6500fcf5:	mov    DWORD PTR [esi],ecx
6500fcf7:	mov    ecx,DWORD PTR [esp+0x1c]
6500fcfb:	mov    DWORD PTR [esi+0x4],edx
6500fcfe:	mov    DWORD PTR [esi+0x8],eax
6500fd01:	mov    DWORD PTR [esi+0xc],ecx
6500fd04:	jmp    0x6500fcb3
6500fd06:	push   0x12
6500fd08:	push   0x65024338
6500fd0d:	lea    ecx,[esp+0x48]
6500fd11:	mov    DWORD PTR [esp+0x60],0xf
6500fd19:	mov    DWORD PTR [esp+0x5c],ebx
6500fd1d:	mov    BYTE PTR [esp+0x4c],bl
6500fd21:	call   0x650018c0
6500fd26:	lea    edx,[esp+0x40]
6500fd2a:	push   edx
6500fd2b:	lea    ecx,[esp+0x88]
6500fd32:	mov    BYTE PTR [esp+0xb8],0x1
6500fd3a:	call   0x65002080
6500fd3f:	push   0x6502944c
6500fd44:	lea    eax,[esp+0x88]
6500fd4b:	push   eax
6500fd4c:	mov    DWORD PTR [esp+0x8c],0x65024330
6500fd57:	call   0x65012366
6500fd5c:	int3   
6500fd5d:	int3   
6500fd5e:	int3   
6500fd5f:	int3   
6500fd60:	mov    eax,DWORD PTR [esp+0x4]
6500fd64:	push   esi
6500fd65:	push   eax
6500fd66:	mov    esi,ecx
6500fd68:	call   0x65002140
6500fd6d:	mov    DWORD PTR [esi],0x65024330
6500fd73:	mov    eax,esi
6500fd75:	pop    esi
6500fd76:	ret    0x4
6500fd79:	int3   
6500fd7a:	int3   
6500fd7b:	int3   
6500fd7c:	int3   
6500fd7d:	int3   
6500fd7e:	int3   
6500fd7f:	int3   
6500fd80:	cmp    DWORD PTR [esp+0x4],0x6
6500fd85:	push   esi
6500fd86:	mov    esi,ecx
6500fd88:	je     0x6500fdaf
6500fd8a:	push   0x65024324
6500fd8f:	lea    ecx,[esp+0xc]
6500fd93:	call   0x65012059
6500fd98:	push   0x650293c8
6500fd9d:	lea    eax,[esp+0xc]
6500fda1:	push   eax
6500fda2:	mov    DWORD PTR [esp+0x10],0x6502431c
6500fdaa:	call   0x65012366
6500fdaf:	push   ebx
6500fdb0:	mov    ebx,DWORD PTR [esp+0x14]
6500fdb4:	test   ebx,ebx
6500fdb6:	jbe    0x6500fdd9
6500fdb8:	mov    ecx,DWORD PTR [esi]
6500fdba:	push   edi
6500fdbb:	mov    edi,DWORD PTR [esp+0x1c]
6500fdbf:	push   ecx
6500fdc0:	mov    ecx,edi
6500fdc2:	call   0x6500fb60
6500fdc7:	cmp    ebx,0x1
6500fdca:	jbe    0x6500fdd8
6500fdcc:	mov    edx,DWORD PTR [esi+0x4]
6500fdcf:	push   edx
6500fdd0:	lea    ecx,[edi+0x10]
6500fdd3:	call   0x6500fb60
6500fdd8:	pop    edi
6500fdd9:	pop    ebx
6500fdda:	pop    esi
6500fddb:	ret    0x10
6500fdde:	int3   
6500fddf:	int3   
6500fde0:	mov    eax,DWORD PTR [esp+0x10]
6500fde4:	push   ebx
6500fde5:	push   esi
6500fde6:	mov    esi,ecx
6500fde8:	mov    ecx,DWORD PTR [eax]
6500fdea:	mov    DWORD PTR [esp+0x18],ecx
6500fdee:	mov    ecx,DWORD PTR [esi+0x4]
6500fdf1:	test   ecx,ecx
6500fdf3:	push   edi
6500fdf4:	jne    0x6500fdfa
6500fdf6:	xor    edi,edi
6500fdf8:	jmp    0x6500fe02
6500fdfa:	mov    edi,DWORD PTR [esi+0xc]
6500fdfd:	sub    edi,ecx
6500fdff:	sar    edi,0x2
6500fe02:	mov    ebx,DWORD PTR [esp+0x18]
6500fe06:	test   ebx,ebx
6500fe08:	je     0x6500ff8f
6500fe0e:	test   ecx,ecx
6500fe10:	jne    0x6500fe16
6500fe12:	xor    eax,eax
6500fe14:	jmp    0x6500fe1e
6500fe16:	mov    eax,DWORD PTR [esi+0x8]
6500fe19:	sub    eax,ecx
6500fe1b:	sar    eax,0x2
6500fe1e:	mov    edx,0x3fffffff
6500fe23:	sub    edx,eax
6500fe25:	cmp    edx,ebx
6500fe27:	jae    0x6500fe2e
6500fe29:	call   0x6500fae0
6500fe2e:	test   ecx,ecx
6500fe30:	jne    0x6500fe36
6500fe32:	xor    eax,eax
6500fe34:	jmp    0x6500fe3e
6500fe36:	mov    eax,DWORD PTR [esi+0x8]
6500fe39:	sub    eax,ecx
6500fe3b:	sar    eax,0x2
6500fe3e:	add    eax,ebx
6500fe40:	cmp    edi,eax
6500fe42:	push   ebp
6500fe43:	jae    0x6500fefd
6500fe49:	mov    eax,edi
6500fe4b:	shr    eax,1
6500fe4d:	mov    edx,0x3fffffff
6500fe52:	sub    edx,eax
6500fe54:	cmp    edx,edi
6500fe56:	jae    0x6500fe5c
6500fe58:	xor    edi,edi
6500fe5a:	jmp    0x6500fe5e
6500fe5c:	add    edi,eax
6500fe5e:	test   ecx,ecx
6500fe60:	jne    0x6500fe66
6500fe62:	xor    eax,eax
6500fe64:	jmp    0x6500fe6e
6500fe66:	mov    eax,DWORD PTR [esi+0x8]
6500fe69:	sub    eax,ecx
6500fe6b:	sar    eax,0x2
6500fe6e:	add    eax,ebx
6500fe70:	cmp    edi,eax
6500fe72:	jae    0x6500fe86
6500fe74:	test   ecx,ecx
6500fe76:	jne    0x6500fe7c
6500fe78:	xor    edi,edi
6500fe7a:	jmp    0x6500fe84
6500fe7c:	mov    edi,DWORD PTR [esi+0x8]
6500fe7f:	sub    edi,ecx
6500fe81:	sar    edi,0x2
6500fe84:	add    edi,ebx
6500fe86:	push   0x0
6500fe88:	push   edi
6500fe89:	call   0x6500f640
6500fe8e:	mov    ecx,DWORD PTR [esi+0x4]
6500fe91:	add    esp,0x8
6500fe94:	mov    ebp,eax
6500fe96:	mov    eax,DWORD PTR [esp+0x18]
6500fe9a:	push   ebp
6500fe9b:	push   eax
6500fe9c:	push   ecx
6500fe9d:	mov    ecx,esi
6500fe9f:	call   0x6500fa20
6500fea4:	lea    edx,[esp+0x20]
6500fea8:	push   edx
6500fea9:	push   ebx
6500feaa:	push   eax
6500feab:	mov    ecx,esi
6500fead:	call   0x6500fa50
6500feb2:	mov    ecx,DWORD PTR [esp+0x18]
6500feb6:	push   eax
6500feb7:	mov    eax,DWORD PTR [esi+0x8]
6500feba:	push   eax
6500febb:	push   ecx
6500febc:	mov    ecx,esi
6500febe:	call   0x6500fa20
6500fec3:	mov    eax,DWORD PTR [esi+0x4]
6500fec6:	test   eax,eax
6500fec8:	jne    0x6500fece
6500feca:	xor    ecx,ecx
6500fecc:	jmp    0x6500fed6
6500fece:	mov    ecx,DWORD PTR [esi+0x8]
6500fed1:	sub    ecx,eax
6500fed3:	sar    ecx,0x2
6500fed6:	add    ebx,ecx
6500fed8:	test   eax,eax
6500feda:	je     0x6500fee5
6500fedc:	push   eax
6500fedd:	call   0x65011f62
6500fee2:	add    esp,0x4
6500fee5:	lea    edx,[ebp+edi*4+0x0]
6500fee9:	lea    eax,[ebp+ebx*4+0x0]
6500feed:	mov    DWORD PTR [esi+0x4],ebp
6500fef0:	pop    ebp
6500fef1:	pop    edi
6500fef2:	mov    DWORD PTR [esi+0xc],edx
6500fef5:	mov    DWORD PTR [esi+0x8],eax
6500fef8:	pop    esi
6500fef9:	pop    ebx
6500fefa:	ret    0x10
6500fefd:	mov    ebp,DWORD PTR [esi+0x8]
6500ff00:	mov    edi,DWORD PTR [esp+0x18]
6500ff04:	mov    ecx,ebp
6500ff06:	sub    ecx,edi
6500ff08:	sar    ecx,0x2
6500ff0b:	lea    eax,[ebx*4+0x0]
6500ff12:	cmp    ecx,ebx
6500ff14:	mov    DWORD PTR [esp+0x1c],eax
6500ff18:	mov    ecx,esi
6500ff1a:	jae    0x6500ff62
6500ff1c:	add    eax,edi
6500ff1e:	push   eax
6500ff1f:	push   ebp
6500ff20:	push   edi
6500ff21:	call   0x6500fa20
6500ff26:	mov    eax,DWORD PTR [esi+0x8]
6500ff29:	mov    ecx,eax
6500ff2b:	sub    ecx,edi
6500ff2d:	sar    ecx,0x2
6500ff30:	lea    edx,[esp+0x20]
6500ff34:	push   edx
6500ff35:	sub    ebx,ecx
6500ff37:	push   ebx
6500ff38:	push   eax
6500ff39:	mov    ecx,esi
6500ff3b:	call   0x6500fa50
6500ff40:	mov    eax,DWORD PTR [esp+0x1c]
6500ff44:	add    DWORD PTR [esi+0x8],eax
6500ff47:	mov    esi,DWORD PTR [esi+0x8]
6500ff4a:	lea    edx,[esp+0x20]
6500ff4e:	push   edx
6500ff4f:	sub    esi,eax
6500ff51:	push   esi
6500ff52:	push   edi
6500ff53:	call   0x6500f740
6500ff58:	add    esp,0xc
6500ff5b:	pop    ebp
6500ff5c:	pop    edi
6500ff5d:	pop    esi
6500ff5e:	pop    ebx
6500ff5f:	ret    0x10
6500ff62:	push   ebp
6500ff63:	mov    ebx,ebp
6500ff65:	sub    ebx,eax
6500ff67:	push   ebp
6500ff68:	push   ebx
6500ff69:	call   0x6500fa20
6500ff6e:	push   ebp
6500ff6f:	push   ebx
6500ff70:	push   edi
6500ff71:	mov    DWORD PTR [esi+0x8],eax
6500ff74:	call   0x6500f760
6500ff79:	mov    ecx,DWORD PTR [esp+0x28]
6500ff7d:	lea    eax,[esp+0x2c]
6500ff81:	push   eax
6500ff82:	add    ecx,edi
6500ff84:	push   ecx
6500ff85:	push   edi
6500ff86:	call   0x6500f740
6500ff8b:	add    esp,0x18
6500ff8e:	pop    ebp
6500ff8f:	pop    edi
6500ff90:	pop    esi
6500ff91:	pop    ebx
6500ff92:	ret    0x10
6500ff95:	int3   
6500ff96:	int3   
6500ff97:	int3   
6500ff98:	int3   
6500ff99:	int3   
6500ff9a:	int3   
6500ff9b:	int3   
6500ff9c:	int3   
6500ff9d:	int3   
6500ff9e:	int3   
6500ff9f:	int3   
6500ffa0:	push   ecx
6500ffa1:	push   ebx
6500ffa2:	push   ebp
6500ffa3:	mov    ebp,DWORD PTR [esp+0x14]
6500ffa7:	push   esi
6500ffa8:	mov    esi,ecx
6500ffaa:	push   edi
6500ffab:	mov    edi,DWORD PTR [esi+0x4]
6500ffae:	test   edi,edi
6500ffb0:	je     0x6500ffbe
6500ffb2:	mov    eax,DWORD PTR [esi+0x8]
6500ffb5:	mov    ecx,eax
6500ffb7:	sub    ecx,edi
6500ffb9:	sar    ecx,0x2
6500ffbc:	jne    0x6500ffc2
6500ffbe:	xor    ebx,ebx
6500ffc0:	jmp    0x6500ffe1
6500ffc2:	cmp    edi,eax
6500ffc4:	jbe    0x6500ffcb
6500ffc6:	call   0x650122d3
6500ffcb:	test   ebp,ebp
6500ffcd:	je     0x6500ffd3
6500ffcf:	cmp    ebp,esi
6500ffd1:	je     0x6500ffd8
6500ffd3:	call   0x650122d3
6500ffd8:	mov    ebx,DWORD PTR [esp+0x20]
6500ffdc:	sub    ebx,edi
6500ffde:	sar    ebx,0x2
6500ffe1:	mov    edx,DWORD PTR [esp+0x24]
6500ffe5:	mov    eax,DWORD PTR [esp+0x20]
6500ffe9:	push   edx
6500ffea:	push   0x1
6500ffec:	push   eax
6500ffed:	push   ebp
6500ffee:	mov    ecx,esi
6500fff0:	call   0x6500fde0
6500fff5:	mov    edi,DWORD PTR [esi+0x4]
6500fff8:	cmp    edi,DWORD PTR [esi+0x8]
6500fffb:	jbe    0x65010002
6500fffd:	call   0x650122d3
65010002:	mov    DWORD PTR [esp+0x20],edi
65010006:	lea    edi,[edi+ebx*4]
65010009:	cmp    edi,DWORD PTR [esi+0x8]
6501000c:	ja     0x65010013
6501000e:	cmp    edi,DWORD PTR [esi+0x4]
65010011:	jae    0x65010018
65010013:	call   0x650122d3
65010018:	mov    eax,DWORD PTR [esp+0x18]
6501001c:	mov    DWORD PTR [eax+0x4],edi
6501001f:	pop    edi
65010020:	mov    DWORD PTR [eax],esi
65010022:	pop    esi
65010023:	pop    ebp
65010024:	pop    ebx
65010025:	pop    ecx
65010026:	ret    0x10
65010029:	int3   
6501002a:	int3   
6501002b:	int3   
6501002c:	int3   
6501002d:	int3   
6501002e:	int3   
6501002f:	int3   
65010030:	sub    esp,0x8
65010033:	push   esi
65010034:	mov    esi,ecx
65010036:	mov    edx,DWORD PTR [esi+0x4]
65010039:	test   edx,edx
6501003b:	jne    0x65010041
6501003d:	xor    ecx,ecx
6501003f:	jmp    0x65010049
65010041:	mov    ecx,DWORD PTR [esi+0x8]
65010044:	sub    ecx,edx
65010046:	sar    ecx,0x2
65010049:	test   edx,edx
6501004b:	je     0x65010071
6501004d:	mov    eax,DWORD PTR [esi+0xc]
65010050:	sub    eax,edx
65010052:	sar    eax,0x2
65010055:	cmp    ecx,eax
65010057:	jae    0x65010071
65010059:	mov    eax,DWORD PTR [esi+0x8]
6501005c:	mov    ecx,DWORD PTR [esp+0x10]
65010060:	mov    edx,DWORD PTR [ecx]
65010062:	mov    DWORD PTR [eax],edx
65010064:	add    eax,0x4
65010067:	mov    DWORD PTR [esi+0x8],eax
6501006a:	pop    esi
6501006b:	add    esp,0x8
6501006e:	ret    0x4
65010071:	push   edi
65010072:	mov    edi,DWORD PTR [esi+0x8]
65010075:	cmp    edx,edi
65010077:	jbe    0x6501007e
65010079:	call   0x650122d3
6501007e:	mov    eax,DWORD PTR [esp+0x14]
65010082:	push   eax
65010083:	push   edi
65010084:	push   esi
65010085:	lea    ecx,[esp+0x14]
65010089:	push   ecx
6501008a:	mov    ecx,esi
6501008c:	call   0x6500ffa0
65010091:	pop    edi
65010092:	pop    esi
65010093:	add    esp,0x8
65010096:	ret    0x4
65010099:	int3   
6501009a:	int3   
6501009b:	int3   
6501009c:	int3   
6501009d:	int3   
6501009e:	int3   
6501009f:	int3   
650100a0:	sub    esp,0x20
650100a3:	mov    eax,DWORD PTR [ecx]
650100a5:	mov    edx,DWORD PTR [ecx+0x4]
650100a8:	mov    DWORD PTR [esp],eax
650100ab:	mov    eax,DWORD PTR [ecx+0x8]
650100ae:	mov    ecx,DWORD PTR [ecx+0xc]
650100b1:	mov    DWORD PTR [esp+0x4],edx
650100b5:	lea    edx,[esp+0x10]
650100b9:	mov    DWORD PTR [esp+0xc],ecx
650100bd:	push   edx
650100be:	lea    ecx,[esp+0x4]
650100c2:	mov    DWORD PTR [esp+0xc],eax
650100c6:	call   0x6500f5a0
650100cb:	mov    ecx,DWORD PTR [esp+0x24]
650100cf:	lea    edx,[ecx+0x1c]
650100d2:	mov    DWORD PTR [esp],edx
650100d5:	mov    edx,DWORD PTR [eax]
650100d7:	mov    DWORD PTR [esp+0x4],ecx
650100db:	sub    esp,0x10
650100de:	mov    ecx,esp
650100e0:	mov    DWORD PTR [ecx],edx
650100e2:	mov    edx,DWORD PTR [eax+0x4]
650100e5:	mov    DWORD PTR [ecx+0x4],edx
650100e8:	mov    edx,DWORD PTR [eax+0x8]
650100eb:	mov    eax,DWORD PTR [eax+0xc]
650100ee:	mov    DWORD PTR [ecx+0x8],edx
650100f1:	mov    DWORD PTR [ecx+0xc],eax
650100f4:	lea    ecx,[esp+0x10]
650100f8:	call   0x6500fd80
650100fd:	add    esp,0x20
65010100:	ret    0x4
65010103:	int3   
65010104:	int3   
65010105:	int3   
65010106:	int3   
65010107:	int3   
65010108:	int3   
65010109:	int3   
6501010a:	int3   
6501010b:	int3   
6501010c:	int3   
6501010d:	int3   
6501010e:	int3   
6501010f:	int3   
65010110:	push   ebp
65010111:	lea    ebp,[esp-0x74]
65010115:	sub    esp,0x74
65010118:	push   0xffffffff
6501011a:	push   0x65021e28
6501011f:	mov    eax,fs:0x0
65010125:	push   eax
65010126:	sub    esp,0x70
65010129:	mov    eax,ds:0x6502c09c
6501012e:	xor    eax,ebp
65010130:	mov    DWORD PTR [ebp+0x70],eax
65010133:	push   ebx
65010134:	push   esi
65010135:	push   edi
65010136:	push   eax
65010137:	lea    eax,[ebp-0xc]
6501013a:	mov    fs:0x0,eax
65010140:	mov    DWORD PTR [ebp-0x10],esp
65010143:	mov    eax,DWORD PTR [ebp+0x7c]
65010146:	mov    ecx,0xf
6501014b:	xor    edi,edi
6501014d:	mov    DWORD PTR [ebp+0x50],ecx
65010150:	mov    DWORD PTR [ebp+0x4c],edi
65010153:	mov    BYTE PTR [ebp+0x3c],0x0
65010157:	mov    DWORD PTR [ebp+0x6c],ecx
6501015a:	mov    DWORD PTR [ebp+0x68],edi
6501015d:	mov    BYTE PTR [ebp+0x58],0x0
65010161:	mov    DWORD PTR [ebp-0x4],edi
65010164:	mov    DWORD PTR [ebp-0x38],edi
65010167:	mov    DWORD PTR [ebp-0x28],edi
6501016a:	mov    ecx,DWORD PTR [eax+0x14]
6501016d:	mov    ebx,0x10
65010172:	cmp    DWORD PTR [eax+0x18],ebx
65010175:	mov    BYTE PTR [ebp-0x4],0x2
65010179:	jb     0x65010180
6501017b:	mov    eax,DWORD PTR [eax+0x4]
6501017e:	jmp    0x65010183
65010180:	add    eax,0x4
65010183:	push   edi
65010184:	push   ecx
65010185:	push   eax
65010186:	lea    esi,[ebp-0x38]
65010189:	call   0x6500fbb0
6501018e:	add    esp,0xc
65010191:	lea    eax,[ebp+0x38]
65010194:	push   eax
65010195:	mov    ecx,esi
65010197:	call   0x650100a0
6501019c:	mov    DWORD PTR [ebp-0x4],0x1
650101a3:	call   DWORD PTR ds:0x6502c06c
650101a9:	cmp    DWORD PTR [ebp+0x6c],ebx
650101ac:	mov    DWORD PTR [ebp+0x0],eax
650101af:	mov    BYTE PTR [ebp-0x4],0x4
650101b3:	jb     0x650101c0
650101b5:	mov    ebx,DWORD PTR [ebp+0x58]
650101b8:	cmp    ebx,edi
650101ba:	jne    0x650101c3
650101bc:	xor    eax,eax
650101be:	jmp    0x6501020a
650101c0:	lea    ebx,[ebp+0x58]
650101c3:	push   ebx
650101c4:	call   DWORD PTR ds:0x65024054
650101ca:	mov    edi,eax
650101cc:	add    edi,0x1
650101cf:	cmp    edi,0x3fffffff
650101d5:	jg     0x65010206
650101d7:	lea    eax,[edi+edi*1]
650101da:	call   0x65012ec0
650101df:	mov    esi,esp
650101e1:	test   esi,esi
650101e3:	mov    DWORD PTR [ebp-0x10],esp
650101e6:	je     0x65010206
650101e8:	mov    ecx,DWORD PTR [ebp+0x0]
650101eb:	push   edi
650101ec:	push   esi
650101ed:	push   0xffffffff
650101ef:	push   ebx
650101f0:	push   0x0
650101f2:	push   ecx
650101f3:	mov    WORD PTR [esi],0x0
650101f8:	call   DWORD PTR ds:0x65024024
650101fe:	neg    eax
65010200:	sbb    eax,eax
65010202:	and    eax,esi
65010204:	jmp    0x65010208
65010206:	xor    eax,eax
65010208:	xor    edi,edi
6501020a:	push   eax
6501020b:	lea    ecx,[ebp+0x10]
6501020e:	call   0x650025b0
65010213:	mov    edx,DWORD PTR ds:0x6502d560
65010219:	mov    eax,DWORD PTR [edx+0xc]
6501021c:	mov    ecx,0x6502d560
65010221:	mov    BYTE PTR [ebp-0x4],0x5
65010225:	call   eax
65010227:	add    eax,0x10
6501022a:	mov    DWORD PTR [ebp+0x14],eax
6501022d:	lea    ecx,[ebp+0x14]
65010230:	push   ecx
65010231:	lea    edx,[ebp+0x10]
65010234:	push   edx
65010235:	lea    eax,[ebp+0x18]
65010238:	push   eax
65010239:	mov    BYTE PTR [ebp-0x4],0x6
6501023d:	call   0x650021c0
65010242:	add    esp,0xc
65010245:	lea    ecx,[ebp+0x18]
65010248:	push   0x650266cc
6501024d:	push   ecx
6501024e:	mov    BYTE PTR [ebp-0x4],0x7
65010252:	call   0x6500f6e0
65010257:	add    esp,0x8
6501025a:	test   al,al
6501025c:	je     0x65010434
65010262:	mov    esi,DWORD PTR [ebp+0x14]
65010265:	call   0x6500e090
6501026a:	push   esi
6501026b:	call   eax
6501026d:	cmp    DWORD PTR [ebp+0x50],0x10
65010271:	mov    edx,DWORD PTR [ebp+0x4c]
65010274:	mov    eax,DWORD PTR [ebp+0x3c]
65010277:	push   edx
65010278:	jae    0x6501027d
6501027a:	lea    eax,[ebp+0x3c]
6501027d:	push   eax
6501027e:	mov    eax,DWORD PTR [ebp+0x18]
65010281:	push   ecx
65010282:	add    eax,0xfffffff0
65010285:	mov    DWORD PTR [ebp+0xc],esp
65010288:	mov    esi,esp
6501028a:	push   eax
6501028b:	call   0x650028c0
65010290:	add    eax,0x10
65010293:	add    esp,0x4
65010296:	mov    DWORD PTR [esi],eax
65010298:	call   0x65002400
6501029d:	add    esp,0xc
650102a0:	lea    eax,[ebp+0xc]
650102a3:	push   edi
650102a4:	push   eax
650102a5:	call   0x650034b0
650102aa:	add    esp,0x8
650102ad:	push   0x65024358
650102b2:	push   eax
650102b3:	lea    ecx,[ebp+0x8]
650102b6:	push   ecx
650102b7:	mov    BYTE PTR [ebp-0x4],0x8
650102bb:	call   0x6500f940
650102c0:	add    esp,0xc
650102c3:	mov    eax,DWORD PTR [ebp+0xc]
650102c6:	add    eax,0xfffffff0
650102c9:	mov    BYTE PTR [ebp-0x4],0xa
650102cd:	lea    edx,[eax+0xc]
650102d0:	or     ecx,0xffffffff
650102d3:	lock xadd DWORD PTR [edx],ecx
650102d7:	dec    ecx
650102d8:	test   ecx,ecx
650102da:	jg     0x650102e6
650102dc:	mov    ecx,DWORD PTR [eax]
650102de:	mov    edx,DWORD PTR [ecx]
650102e0:	push   eax
650102e1:	mov    eax,DWORD PTR [edx+0x4]
650102e4:	call   eax
650102e6:	mov    eax,DWORD PTR [ebp+0x18]
650102e9:	cmp    eax,edi
650102eb:	mov    ebx,eax
650102ed:	jne    0x650102f3
650102ef:	xor    eax,eax
650102f1:	jmp    0x65010323
650102f3:	push   eax
650102f4:	call   DWORD PTR ds:0x65024050
650102fa:	add    eax,0x1
650102fd:	cmp    eax,0x3fffffff
65010302:	jle    0x65010308
65010304:	xor    eax,eax
65010306:	jmp    0x65010323
65010308:	lea    esi,[eax+eax*1]
6501030b:	mov    eax,esi
6501030d:	call   0x65012ec0
65010312:	mov    ecx,DWORD PTR [ebp+0x0]
65010315:	mov    DWORD PTR [ebp-0x10],esp
65010318:	mov    eax,esp
6501031a:	push   ecx
6501031b:	push   esi
6501031c:	push   ebx
6501031d:	push   eax
6501031e:	call   0x65002ba0
65010323:	push   eax
65010324:	lea    ecx,[ebp+0x4]
65010327:	call   0x650067e0
6501032c:	lea    edx,[ebp+0x8]
6501032f:	push   edx
65010330:	lea    eax,[ebp+0x4]
65010333:	push   eax
65010334:	mov    BYTE PTR [ebp-0x4],0xb
65010338:	call   0x65002550
6501033d:	mov    eax,DWORD PTR [ebp+0x4]
65010340:	add    eax,0xfffffff0
65010343:	add    esp,0x8
65010346:	mov    BYTE PTR [ebp-0x4],0xa
6501034a:	lea    ecx,[eax+0xc]
6501034d:	or     edx,0xffffffff
65010350:	lock xadd DWORD PTR [ecx],edx
65010354:	dec    edx
65010355:	test   edx,edx
65010357:	jg     0x65010363
65010359:	mov    ecx,DWORD PTR [eax]
6501035b:	mov    edx,DWORD PTR [ecx]
6501035d:	push   eax
6501035e:	mov    eax,DWORD PTR [edx+0x4]
65010361:	call   eax
65010363:	push   0x40
65010365:	xor    eax,eax
65010367:	lea    ecx,[ebp-0x78]
6501036a:	push   edi
6501036b:	push   ecx
6501036c:	mov    DWORD PTR [ebp-0x20],edi
6501036f:	mov    DWORD PTR [ebp-0x1c],eax
65010372:	mov    DWORD PTR [ebp-0x18],eax
65010375:	mov    DWORD PTR [ebp-0x14],eax
65010378:	call   0x65012e40
6501037d:	lea    edx,[ebp+0x1c]
65010380:	push   edx
65010381:	mov    DWORD PTR [ebp-0x7c],0x44
65010388:	call   0x65001500
6501038d:	add    esp,0x10
65010390:	cmp    DWORD PTR [ebp+0x34],0x10
65010394:	mov    ebx,DWORD PTR [ebp+0x20]
65010397:	mov    BYTE PTR [ebp-0x4],0xc
6501039b:	jae    0x650103a0
6501039d:	lea    ebx,[ebp+0x20]
650103a0:	mov    esi,DWORD PTR [ebp+0x18]
650103a3:	call   0x6500df60
650103a8:	lea    ecx,[ebp-0x20]
650103ab:	push   ecx
650103ac:	lea    edx,[ebp-0x7c]
650103af:	push   edx
650103b0:	push   edi
650103b1:	push   ebx
650103b2:	push   0x400
650103b7:	push   0x1
650103b9:	push   edi
650103ba:	push   edi
650103bb:	push   edi
650103bc:	push   esi
650103bd:	call   eax
650103bf:	cmp    eax,edi
650103c1:	je     0x650103d5
650103c3:	mov    eax,DWORD PTR [ebp-0x1c]
650103c6:	mov    esi,DWORD PTR ds:0x65024040
650103cc:	push   eax
650103cd:	call   esi
650103cf:	mov    ecx,DWORD PTR [ebp-0x20]
650103d2:	push   ecx
650103d3:	call   esi
650103d5:	mov    esi,DWORD PTR [ebp+0x18]
650103d8:	call   0x6500e000
650103dd:	push   0x4
650103df:	push   edi
650103e0:	push   esi
650103e1:	call   eax
650103e3:	mov    esi,DWORD PTR [ebp+0x14]
650103e6:	call   0x6500e000
650103eb:	push   0x4
650103ed:	push   edi
650103ee:	push   esi
650103ef:	call   eax
650103f1:	cmp    DWORD PTR [ebp+0x34],0x10
650103f5:	jb     0x65010403
650103f7:	mov    edx,DWORD PTR [ebp+0x20]
650103fa:	push   edx
650103fb:	call   0x65011f62
65010400:	add    esp,0x4
65010403:	mov    eax,DWORD PTR [ebp+0x8]
65010406:	add    eax,0xfffffff0
65010409:	mov    DWORD PTR [ebp+0x34],0xf
65010410:	mov    DWORD PTR [ebp+0x30],edi
65010413:	mov    BYTE PTR [ebp+0x20],0x0
65010417:	mov    BYTE PTR [ebp-0x4],0x7
6501041b:	lea    ecx,[eax+0xc]
6501041e:	or     edx,0xffffffff
65010421:	lock xadd DWORD PTR [ecx],edx
65010425:	dec    edx
65010426:	test   edx,edx
65010428:	jg     0x65010434
6501042a:	mov    ecx,DWORD PTR [eax]
6501042c:	mov    edx,DWORD PTR [ecx]
6501042e:	push   eax
6501042f:	mov    eax,DWORD PTR [edx+0x4]
65010432:	call   eax
65010434:	mov    eax,DWORD PTR [ebp+0x18]
65010437:	add    eax,0xfffffff0
6501043a:	mov    BYTE PTR [ebp-0x4],0x6
6501043e:	lea    ecx,[eax+0xc]
65010441:	or     edx,0xffffffff
65010444:	lock xadd DWORD PTR [ecx],edx
65010448:	dec    edx
65010449:	test   edx,edx
6501044b:	jg     0x65010457
6501044d:	mov    ecx,DWORD PTR [eax]
6501044f:	mov    edx,DWORD PTR [ecx]
65010451:	push   eax
65010452:	mov    eax,DWORD PTR [edx+0x4]
65010455:	call   eax
65010457:	mov    eax,DWORD PTR [ebp+0x14]
6501045a:	add    eax,0xfffffff0
6501045d:	mov    BYTE PTR [ebp-0x4],0x5
65010461:	lea    ecx,[eax+0xc]
65010464:	or     edx,0xffffffff
65010467:	lock xadd DWORD PTR [ecx],edx
6501046b:	dec    edx
6501046c:	test   edx,edx
6501046e:	jg     0x6501047a
65010470:	mov    ecx,DWORD PTR [eax]
65010472:	mov    edx,DWORD PTR [ecx]
65010474:	push   eax
65010475:	mov    eax,DWORD PTR [edx+0x4]
65010478:	call   eax
6501047a:	mov    eax,DWORD PTR [ebp+0x10]
6501047d:	add    eax,0xfffffff0
65010480:	mov    BYTE PTR [ebp-0x4],0x4
65010484:	lea    ecx,[eax+0xc]
65010487:	or     edx,0xffffffff
6501048a:	lock xadd DWORD PTR [ecx],edx
6501048e:	dec    edx
6501048f:	test   edx,edx
65010491:	jg     0x650104a7
65010493:	mov    ecx,DWORD PTR [eax]
65010495:	mov    edx,DWORD PTR [ecx]
65010497:	push   eax
65010498:	mov    eax,DWORD PTR [edx+0x4]
6501049b:	call   eax
6501049d:	jmp    0x650104a7
6501049f:	mov    eax,0x650104a5
650104a4:	ret    
650104a5:	xor    edi,edi
650104a7:	mov    esi,DWORD PTR [ebp-0x28]
650104aa:	cmp    esi,edi
650104ac:	je     0x650104bd
650104ae:	push   esi
650104af:	call   0x6500e920
650104b4:	push   esi
650104b5:	call   0x65011f62
650104ba:	add    esp,0x8
650104bd:	mov    esi,0x10
650104c2:	cmp    DWORD PTR [ebp+0x6c],esi
650104c5:	jb     0x650104d3
650104c7:	mov    ecx,DWORD PTR [ebp+0x58]
650104ca:	push   ecx
650104cb:	call   0x65011f62
650104d0:	add    esp,0x4
650104d3:	cmp    DWORD PTR [ebp+0x50],esi
650104d6:	mov    DWORD PTR [ebp+0x6c],0xf
650104dd:	mov    DWORD PTR [ebp+0x68],edi
650104e0:	mov    BYTE PTR [ebp+0x58],0x0
650104e4:	jb     0x6501050a
650104e6:	mov    edx,DWORD PTR [ebp+0x3c]
650104e9:	push   edx
650104ea:	call   0x65011f62
650104ef:	add    esp,0x4
650104f2:	jmp    0x6501050a
650104f4:	mov    eax,0x650104fa
650104f9:	ret    
650104fa:	lea    ecx,[ebp-0x38]
650104fd:	call   0x6500f6c0
65010502:	lea    ecx,[ebp+0x38]
65010505:	call   0x6500f820
6501050a:	lea    esp,[ebp-0x8c]
65010510:	mov    ecx,DWORD PTR [ebp-0xc]
65010513:	mov    DWORD PTR fs:0x0,ecx
6501051a:	pop    ecx
6501051b:	pop    edi
6501051c:	pop    esi
6501051d:	pop    ebx
6501051e:	mov    ecx,DWORD PTR [ebp+0x70]
65010521:	xor    ecx,ebp
65010523:	call   0x650127bc
65010528:	add    ebp,0x74
6501052b:	mov    esp,ebp
6501052d:	pop    ebp
6501052e:	ret    
6501052f:	int3   
65010530:	push   ecx
65010531:	push   esi
65010532:	mov    esi,ecx
65010534:	mov    eax,DWORD PTR [esi+0x4]
65010537:	test   eax,eax
65010539:	je     0x65010557
6501053b:	mov    ecx,DWORD PTR [esp+0x4]
6501053f:	mov    edx,DWORD PTR [esi+0x8]
65010542:	push   ecx
65010543:	push   esi
65010544:	push   edx
65010545:	push   eax
65010546:	call   0x6500c300
6501054b:	mov    eax,DWORD PTR [esi+0x4]
6501054e:	push   eax
6501054f:	call   0x65011f62
65010554:	add    esp,0x14
65010557:	mov    DWORD PTR [esi+0x4],0x0
6501055e:	mov    DWORD PTR [esi+0x8],0x0
65010565:	mov    DWORD PTR [esi+0xc],0x0
6501056c:	pop    esi
6501056d:	pop    ecx
6501056e:	ret    
6501056f:	int3   
65010570:	push   0xffffffff
65010572:	push   0x65021e5e
65010577:	mov    eax,fs:0x0
6501057d:	push   eax
6501057e:	push   ecx
6501057f:	push   ebx
65010580:	push   esi
65010581:	push   edi
65010582:	mov    eax,ds:0x6502c09c
65010587:	xor    eax,esp
65010589:	push   eax
6501058a:	lea    eax,[esp+0x14]
6501058e:	mov    fs:0x0,eax
65010594:	mov    eax,0x1
65010599:	test   BYTE PTR ds:0x6502d4e8,al
6501059f:	jne    0x650105da
650105a1:	or     DWORD PTR ds:0x6502d4e8,eax
650105a7:	push   0x650234d0
650105ac:	mov    DWORD PTR ds:0x6502d4dc,0x0
650105b6:	mov    DWORD PTR ds:0x6502d4e0,0x0
650105c0:	mov    DWORD PTR ds:0x6502d4e4,0x0
650105ca:	call   0x650128ef
650105cf:	add    esp,0x4
650105d2:	mov    DWORD PTR [esp+0x1c],0xffffffff
650105da:	mov    esi,DWORD PTR ds:0x6502d4dc
650105e0:	test   esi,esi
650105e2:	je     0x650105f7
650105e4:	mov    edi,DWORD PTR ds:0x6502d4e0
650105ea:	mov    eax,edi
650105ec:	sub    eax,esi
650105ee:	sar    eax,0x2
650105f1:	jne    0x6501070d
650105f7:	push   0x6502447c
650105fc:	push   0xc
650105fe:	push   0x6502446c
65010603:	call   0x65006a80
65010608:	mov    esi,DWORD PTR ds:0x650241c8
6501060e:	add    esp,0xc
65010611:	push   eax
65010612:	call   esi
65010614:	lea    ecx,[esp+0x10]
65010618:	push   ecx
65010619:	mov    ecx,0x6502d4d8
6501061e:	mov    DWORD PTR [esp+0x14],eax
65010622:	call   0x65010030
65010627:	push   0x65024430
6501062c:	push   0xc
6501062e:	push   0x65024420
65010633:	call   0x65006a80
65010638:	add    esp,0xc
6501063b:	push   eax
6501063c:	call   esi
6501063e:	lea    edx,[esp+0x10]
65010642:	push   edx
65010643:	mov    ecx,0x6502d4d8
65010648:	mov    DWORD PTR [esp+0x14],eax
6501064c:	call   0x65010030
65010651:	push   0x650243e8
65010656:	push   0xc
65010658:	push   0x65024420
6501065d:	call   0x65006a80
65010662:	add    esp,0xc
65010665:	push   eax
65010666:	call   esi
65010668:	mov    DWORD PTR [esp+0x10],eax
6501066c:	lea    eax,[esp+0x10]
65010670:	push   eax
65010671:	mov    ecx,0x6502d4d8
65010676:	call   0x65010030
6501067b:	push   0x650243b8
65010680:	push   0xc
65010682:	push   0x650243a8
65010687:	call   0x65006a80
6501068c:	add    esp,0xc
6501068f:	push   eax
65010690:	call   esi
65010692:	lea    ecx,[esp+0x10]
65010696:	push   ecx
65010697:	mov    ecx,0x6502d4d8
6501069c:	mov    DWORD PTR [esp+0x14],eax
650106a0:	call   0x65010030
650106a5:	push   0x65024370
650106aa:	push   0xc
650106ac:	push   0x650243a8
650106b1:	call   0x65006a80
650106b6:	add    esp,0xc
650106b9:	push   eax
650106ba:	call   esi
650106bc:	lea    edx,[esp+0x10]
650106c0:	push   edx
650106c1:	mov    ecx,0x6502d4d8
650106c6:	mov    DWORD PTR [esp+0x14],eax
650106ca:	call   0x65010030
650106cf:	call   DWORD PTR ds:0x65024058
650106d5:	push   eax
650106d6:	call   0x65012eec
650106db:	mov    eax,ds:0x6502d4dc
650106e0:	add    esp,0x4
650106e3:	test   eax,eax
650106e5:	jne    0x650106eb
650106e7:	xor    esi,esi
650106e9:	jmp    0x650106f6
650106eb:	mov    esi,DWORD PTR ds:0x6502d4e0
650106f1:	sub    esi,eax
650106f3:	sar    esi,0x2
650106f6:	call   0x65012ef9
650106fb:	mov    edi,DWORD PTR ds:0x6502d4e0
65010701:	xor    edx,edx
65010703:	div    esi
65010705:	mov    esi,DWORD PTR ds:0x6502d4dc
6501070b:	jmp    0x65010713
6501070d:	mov    edx,DWORD PTR ds:0x6502d4d4
65010713:	test   esi,esi
65010715:	jne    0x6501071b
65010717:	xor    ecx,ecx
65010719:	jmp    0x65010722
6501071b:	mov    ecx,edi
6501071d:	sub    ecx,esi
6501071f:	sar    ecx,0x2
65010722:	lea    eax,[edx+0x1]
65010725:	xor    edx,edx
65010727:	div    ecx
65010729:	test   esi,esi
6501072b:	mov    DWORD PTR ds:0x6502d4d4,edx
65010731:	mov    ebx,edx
65010733:	je     0x6501073e
65010735:	sub    edi,esi
65010737:	sar    edi,0x2
6501073a:	cmp    edx,edi
6501073c:	jb     0x6501075e
6501073e:	call   0x650122d3
65010743:	mov    eax,ds:0x6502d4dc
65010748:	mov    eax,DWORD PTR [eax+ebx*4]
6501074b:	mov    ecx,DWORD PTR [esp+0x14]
6501074f:	mov    DWORD PTR fs:0x0,ecx
65010756:	pop    ecx
65010757:	pop    edi
65010758:	pop    esi
65010759:	pop    ebx
6501075a:	add    esp,0x10
6501075d:	ret    
6501075e:	mov    eax,DWORD PTR [esi+ebx*4]
65010761:	mov    ecx,DWORD PTR [esp+0x14]
65010765:	mov    DWORD PTR fs:0x0,ecx
6501076c:	pop    ecx
6501076d:	pop    edi
6501076e:	pop    esi
6501076f:	pop    ebx
65010770:	add    esp,0x10
65010773:	ret    
65010774:	int3   
65010775:	int3   
65010776:	int3   
65010777:	int3   
65010778:	int3   
65010779:	int3   
6501077a:	int3   
6501077b:	int3   
6501077c:	int3   
6501077d:	int3   
6501077e:	int3   
6501077f:	int3   
65010780:	push   ebp
65010781:	mov    ebp,esp
65010783:	push   0xffffffff
65010785:	push   0x65021e88
6501078a:	mov    eax,fs:0x0
65010790:	push   eax
65010791:	sub    esp,0x8
65010794:	push   ebx
65010795:	push   esi
65010796:	push   edi
65010797:	mov    eax,ds:0x6502c09c
6501079c:	xor    eax,ebp
6501079e:	push   eax
6501079f:	lea    eax,[ebp-0xc]
650107a2:	mov    fs:0x0,eax
650107a8:	mov    DWORD PTR [ebp-0x10],esp
650107ab:	xor    ebx,ebx
650107ad:	mov    DWORD PTR [ebp-0x4],ebx
650107b0:	call   0x65010570
650107b5:	lea    ecx,[ebp-0x14]
650107b8:	mov    edi,eax
650107ba:	call   0x6500a450
650107bf:	mov    eax,DWORD PTR [ebp+0x8]
650107c2:	cmp    DWORD PTR [eax+0x18],0x10
650107c6:	mov    ecx,DWORD PTR [eax+0x14]
650107c9:	mov    BYTE PTR [ebp-0x4],0x1
650107cd:	jb     0x650107d4
650107cf:	mov    eax,DWORD PTR [eax+0x4]
650107d2:	jmp    0x650107d7
650107d4:	add    eax,0x4
650107d7:	mov    esi,DWORD PTR [ebp+0xc]
650107da:	push   0xffffffff
650107dc:	push   esi
650107dd:	add    ecx,0x1
650107e0:	push   ecx
650107e1:	push   eax
650107e2:	push   edi
650107e3:	lea    ecx,[ebp-0x14]
650107e6:	call   0x6500a470
650107eb:	cmp    al,bl
650107ed:	je     0x6501080e
650107ef:	lea    ecx,[ebp-0x14]
650107f2:	mov    BYTE PTR [ebp-0x4],bl
650107f5:	call   0x6500a460
650107fa:	mov    al,0x1
650107fc:	mov    ecx,DWORD PTR [ebp-0xc]
650107ff:	mov    DWORD PTR fs:0x0,ecx
65010806:	pop    ecx
65010807:	pop    edi
65010808:	pop    esi
65010809:	pop    ebx
6501080a:	mov    esp,ebp
6501080c:	pop    ebp
6501080d:	ret    
6501080e:	push   ebx
6501080f:	push   0x650266ce
65010814:	mov    ecx,esi
65010816:	call   0x650018c0
6501081b:	lea    ecx,[ebp-0x14]
6501081e:	mov    BYTE PTR [ebp-0x4],bl
65010821:	call   0x6500a460
65010826:	xor    al,al
65010828:	mov    ecx,DWORD PTR [ebp-0xc]
6501082b:	mov    DWORD PTR fs:0x0,ecx
65010832:	pop    ecx
65010833:	pop    edi
65010834:	pop    esi
65010835:	pop    ebx
65010836:	mov    esp,ebp
65010838:	pop    ebp
65010839:	ret    
6501083a:	mov    eax,0x65010826
6501083f:	ret    
65010840:	push   ecx
65010841:	push   esi
65010842:	push   0x650244c0
65010847:	push   0x17
65010849:	push   0x650244a8
6501084e:	mov    DWORD PTR [esp+0x10],0x0
65010856:	call   0x65006a80
6501085b:	mov    esi,DWORD PTR [esp+0x18]
6501085f:	add    esp,0xc
65010862:	push   eax
65010863:	mov    ecx,esi
65010865:	call   0x650067e0
6501086a:	mov    eax,esi
6501086c:	pop    esi
6501086d:	pop    ecx
6501086e:	ret    
6501086f:	int3   
65010870:	push   0xffffffff
65010872:	push   0x65021eb8
65010877:	mov    eax,fs:0x0
6501087d:	push   eax
6501087e:	push   ecx
6501087f:	push   esi
65010880:	mov    eax,ds:0x6502c09c
65010885:	xor    eax,esp
65010887:	push   eax
65010888:	lea    eax,[esp+0xc]
6501088c:	mov    fs:0x0,eax
65010892:	lea    eax,[esp+0x8]
65010896:	push   eax
65010897:	call   0x65010840
6501089c:	add    esp,0x4
6501089f:	mov    eax,DWORD PTR [eax]
650108a1:	push   eax
650108a2:	push   0x0
650108a4:	mov    DWORD PTR [esp+0x1c],0x0
650108ac:	call   0x650066e0
650108b1:	push   eax
650108b2:	call   DWORD PTR ds:0x65024060
650108b8:	mov    esi,eax
650108ba:	mov    eax,DWORD PTR [esp+0x8]
650108be:	add    eax,0xfffffff0
650108c1:	mov    DWORD PTR [esp+0x14],0xffffffff
650108c9:	lea    ecx,[eax+0xc]
650108cc:	or     edx,0xffffffff
650108cf:	lock xadd DWORD PTR [ecx],edx
650108d3:	dec    edx
650108d4:	test   edx,edx
650108d6:	jg     0x650108e2
650108d8:	mov    ecx,DWORD PTR [eax]
650108da:	mov    edx,DWORD PTR [ecx]
650108dc:	push   eax
650108dd:	mov    eax,DWORD PTR [edx+0x4]
650108e0:	call   eax
650108e2:	test   esi,esi
650108e4:	jne    0x650108f9
650108e6:	xor    al,al
650108e8:	mov    ecx,DWORD PTR [esp+0xc]
650108ec:	mov    DWORD PTR fs:0x0,ecx
650108f3:	pop    ecx
650108f4:	pop    esi
650108f5:	add    esp,0x10
650108f8:	ret    
650108f9:	push   0x0
650108fb:	push   esi
650108fc:	call   DWORD PTR ds:0x650240b4
65010902:	test   eax,eax
65010904:	sete   al
65010907:	mov    ecx,DWORD PTR [esp+0xc]
6501090b:	mov    DWORD PTR fs:0x0,ecx
65010912:	pop    ecx
65010913:	pop    esi
65010914:	add    esp,0x10
65010917:	ret    
65010918:	int3   
65010919:	int3   
6501091a:	int3   
6501091b:	int3   
6501091c:	int3   
6501091d:	int3   
6501091e:	int3   
6501091f:	int3   
65010920:	push   0xffffffff
65010922:	push   0x65021ef0
65010927:	mov    eax,fs:0x0
6501092d:	push   eax
6501092e:	sub    esp,0x8
65010931:	push   ebx
65010932:	push   esi
65010933:	push   edi
65010934:	mov    eax,ds:0x6502c09c
65010939:	xor    eax,esp
6501093b:	push   eax
6501093c:	lea    eax,[esp+0x18]
65010940:	mov    fs:0x0,eax
65010946:	xor    ebx,ebx
65010948:	mov    DWORD PTR [esp+0x14],ebx
6501094c:	push   0x6502451c
65010951:	push   0xf
65010953:	push   0x650244fc
65010958:	mov    DWORD PTR [esp+0x2c],ebx
6501095c:	call   0x65006d70
65010961:	add    esp,0xc
65010964:	push   eax
65010965:	lea    ecx,[esp+0x14]
65010969:	call   0x650025b0
6501096e:	mov    eax,DWORD PTR [esp+0x10]
65010972:	push   ebx
65010973:	push   ebx
65010974:	push   0x3
65010976:	push   ebx
65010977:	push   ebx
65010978:	push   0xc0000000
6501097d:	push   eax
6501097e:	mov    BYTE PTR [esp+0x3c],0x1
65010983:	call   0x6500e120
65010988:	call   eax
6501098a:	mov    esi,eax
6501098c:	mov    eax,DWORD PTR [esp+0x10]
65010990:	add    eax,0xfffffff0
65010993:	mov    DWORD PTR [esp+0x14],esi
65010997:	mov    BYTE PTR [esp+0x20],bl
6501099b:	or     edx,0xffffffff
6501099e:	lea    ecx,[eax+0xc]
650109a1:	lock xadd DWORD PTR [ecx],edx
650109a5:	dec    edx
650109a6:	cmp    esi,0xffffffff
650109a9:	je     0x650109e8
650109ab:	test   edx,edx
650109ad:	jg     0x650109b9
650109af:	mov    ecx,DWORD PTR [eax]
650109b1:	mov    edx,DWORD PTR [ecx]
650109b3:	push   eax
650109b4:	mov    eax,DWORD PTR [edx+0x4]
650109b7:	call   eax
650109b9:	cmp    esi,ebx
650109bb:	je     0x650109d3
650109bd:	call   DWORD PTR ds:0x65024044
650109c3:	push   esi
650109c4:	mov    edi,eax
650109c6:	call   DWORD PTR ds:0x65024040
650109cc:	push   edi
650109cd:	call   DWORD PTR ds:0x6502405c
650109d3:	mov    al,0x1
650109d5:	mov    ecx,DWORD PTR [esp+0x18]
650109d9:	mov    DWORD PTR fs:0x0,ecx
650109e0:	pop    ecx
650109e1:	pop    edi
650109e2:	pop    esi
650109e3:	pop    ebx
650109e4:	add    esp,0x14
650109e7:	ret    
650109e8:	test   edx,edx
650109ea:	jg     0x650109f6
650109ec:	mov    ecx,DWORD PTR [eax]
650109ee:	mov    edx,DWORD PTR [ecx]
650109f0:	push   eax
650109f1:	mov    eax,DWORD PTR [edx+0x4]
650109f4:	call   eax
650109f6:	call   DWORD PTR ds:0x65024044
650109fc:	push   0xffffffff
650109fe:	mov    esi,eax
65010a00:	call   DWORD PTR ds:0x65024040
65010a06:	push   esi
65010a07:	call   DWORD PTR ds:0x6502405c
65010a0d:	xor    al,al
65010a0f:	mov    ecx,DWORD PTR [esp+0x18]
65010a13:	mov    DWORD PTR fs:0x0,ecx
65010a1a:	pop    ecx
65010a1b:	pop    edi
65010a1c:	pop    esi
65010a1d:	pop    ebx
65010a1e:	add    esp,0x14
65010a21:	ret    
65010a22:	int3   
65010a23:	int3   
65010a24:	int3   
65010a25:	int3   
65010a26:	int3   
65010a27:	int3   
65010a28:	int3   
65010a29:	int3   
65010a2a:	int3   
65010a2b:	int3   
65010a2c:	int3   
65010a2d:	int3   
65010a2e:	int3   
65010a2f:	int3   
65010a30:	push   ebp
65010a31:	lea    ebp,[esp-0x128]
65010a38:	sub    esp,0x128
65010a3e:	push   0xffffffff
65010a40:	push   0x65022011
65010a45:	mov    eax,fs:0x0
65010a4b:	push   eax
65010a4c:	sub    esp,0x90
65010a52:	mov    eax,ds:0x6502c09c
65010a57:	xor    eax,ebp
65010a59:	mov    DWORD PTR [ebp+0x124],eax
65010a5f:	push   ebx
65010a60:	push   esi
65010a61:	push   edi
65010a62:	push   eax
65010a63:	lea    eax,[ebp-0xc]
65010a66:	mov    fs:0x0,eax
65010a6c:	mov    esi,DWORD PTR [ebp+0x130]
65010a72:	xor    ebx,ebx
65010a74:	mov    DWORD PTR [ebp-0x4],ebx
65010a77:	mov    DWORD PTR [ebp-0x58],esi
65010a7a:	mov    DWORD PTR [ebp-0x50],ebx
65010a7d:	call   DWORD PTR ds:0x6502c06c
65010a83:	mov    eax,ds:0x6502d560
65010a88:	mov    edx,DWORD PTR [eax+0xc]
65010a8b:	mov    ecx,0x6502d560
65010a90:	call   edx
65010a92:	add    eax,0x10
65010a95:	mov    DWORD PTR [esi],eax
65010a97:	push   0x65024970
65010a9c:	push   0xd
65010a9e:	mov    edi,0x1
65010aa3:	push   0x65024960
65010aa8:	mov    DWORD PTR [ebp-0x4],ebx
65010aab:	mov    DWORD PTR [ebp-0x50],edi
65010aae:	call   0x65006a80
65010ab3:	add    esp,0xc
65010ab6:	push   eax
65010ab7:	mov    ecx,esi
65010ab9:	call   0x65002680
65010abe:	push   0x65024934
65010ac3:	push   0x3
65010ac5:	push   0x65024930
65010aca:	call   0x65006a80
65010acf:	add    esp,0xc
65010ad2:	push   eax
65010ad3:	mov    ecx,esi
65010ad5:	call   0x65002680
65010ada:	push   0x65024924
65010adf:	mov    ecx,esi
65010ae1:	call   0x65002680
65010ae6:	push   0x65024900
65010aeb:	push   0x3
65010aed:	push   0x650248fc
65010af2:	call   0x65006a80
65010af7:	add    esp,0xc
65010afa:	push   eax
65010afb:	mov    ecx,esi
65010afd:	call   0x65002680
65010b02:	push   0x650248f4
65010b07:	mov    ecx,esi
65010b09:	call   0x65002680
65010b0e:	mov    eax,ds:0x6502d560
65010b13:	mov    edx,DWORD PTR [eax+0xc]
65010b16:	mov    ecx,0x6502d560
65010b1b:	call   edx
65010b1d:	add    eax,0x10
65010b20:	mov    DWORD PTR [ebp-0x4c],eax
65010b23:	mov    eax,ds:0x6502d560
65010b28:	mov    edx,DWORD PTR [eax+0xc]
65010b2b:	mov    ecx,0x6502d560
65010b30:	mov    DWORD PTR [ebp-0x4],edi
65010b33:	call   edx
65010b35:	add    eax,0x10
65010b38:	mov    DWORD PTR [ebp-0x54],eax
65010b3b:	lea    eax,[ebp+0x114]
65010b41:	push   eax
65010b42:	mov    BYTE PTR [ebp-0x4],0x2
65010b46:	call   0x65006530
65010b4b:	add    esp,0x4
65010b4e:	test   al,al
65010b50:	je     0x65010bf0
65010b56:	push   0x650248b8
65010b5b:	push   0x4
65010b5d:	push   0x650248b0
65010b62:	call   0x65006a80
65010b67:	add    esp,0xc
65010b6a:	push   eax
65010b6b:	lea    ecx,[ebp-0x10]
65010b6e:	call   0x650067e0
65010b73:	mov    eax,DWORD PTR [eax]
65010b75:	mov    ecx,DWORD PTR [eax-0xc]
65010b78:	push   ecx
65010b79:	push   eax
65010b7a:	mov    ecx,esi
65010b7c:	mov    BYTE PTR [ebp-0x4],0x3
65010b80:	call   0x65002a00
65010b85:	mov    eax,DWORD PTR [ebp-0x10]
65010b88:	add    eax,0xfffffff0
65010b8b:	mov    BYTE PTR [ebp-0x4],0x2
65010b8f:	lea    ecx,[eax+0xc]
65010b92:	or     edx,0xffffffff
65010b95:	lock xadd DWORD PTR [ecx],edx
65010b99:	dec    edx
65010b9a:	test   edx,edx
65010b9c:	jg     0x65010ba8
65010b9e:	mov    ecx,DWORD PTR [eax]
65010ba0:	mov    edx,DWORD PTR [ecx]
65010ba2:	push   eax
65010ba3:	mov    eax,DWORD PTR [edx+0x4]
65010ba6:	call   eax
65010ba8:	lea    ecx,[ebp+0x114]
65010bae:	push   ecx
65010baf:	lea    edx,[ebp-0x10]
65010bb2:	push   edx
65010bb3:	call   0x65002ed0
65010bb8:	add    esp,0x8
65010bbb:	mov    eax,DWORD PTR [eax]
65010bbd:	mov    ecx,DWORD PTR [eax-0xc]
65010bc0:	push   ecx
65010bc1:	push   eax
65010bc2:	mov    ecx,esi
65010bc4:	mov    BYTE PTR [ebp-0x4],0x4
65010bc8:	call   0x65002a00
65010bcd:	mov    eax,DWORD PTR [ebp-0x10]
65010bd0:	add    eax,0xfffffff0
65010bd3:	mov    BYTE PTR [ebp-0x4],0x2
65010bd7:	lea    ecx,[eax+0xc]
65010bda:	or     edx,0xffffffff
65010bdd:	lock xadd DWORD PTR [ecx],edx
65010be1:	dec    edx
65010be2:	test   edx,edx
65010be4:	jg     0x65010bf0
65010be6:	mov    ecx,DWORD PTR [eax]
65010be8:	mov    edx,DWORD PTR [ecx]
65010bea:	push   eax
65010beb:	mov    eax,DWORD PTR [edx+0x4]
65010bee:	call   eax
65010bf0:	push   0x65024878
65010bf5:	push   0x7
65010bf7:	push   0x65024870
65010bfc:	call   0x65006a80
65010c01:	add    esp,0xc
65010c04:	push   eax
65010c05:	mov    ecx,esi
65010c07:	call   0x65002680
65010c0c:	call   0x65010920
65010c11:	test   al,al
65010c13:	je     0x65010c31
65010c15:	push   0x65024830
65010c1a:	push   0x6
65010c1c:	push   0x65024828
65010c21:	call   0x65006a80
65010c26:	add    esp,0xc
65010c29:	push   eax
65010c2a:	mov    ecx,esi
65010c2c:	call   0x65002680
65010c31:	mov    edx,DWORD PTR ds:0x6502d560
65010c37:	mov    eax,DWORD PTR [edx+0xc]
65010c3a:	mov    ecx,0x6502d560
65010c3f:	call   eax
65010c41:	add    eax,0x10
65010c44:	mov    DWORD PTR [ebp-0x28],eax
65010c47:	mov    edx,DWORD PTR ds:0x6502d560
65010c4d:	mov    eax,DWORD PTR [edx+0xc]
65010c50:	mov    ecx,0x6502d560
65010c55:	mov    BYTE PTR [ebp-0x4],0x5
65010c59:	call   eax
65010c5b:	add    eax,0x10
65010c5e:	mov    DWORD PTR [ebp-0x48],eax
65010c61:	mov    edx,DWORD PTR ds:0x6502d560
65010c67:	mov    eax,DWORD PTR [edx+0xc]
65010c6a:	mov    ecx,0x6502d560
65010c6f:	mov    BYTE PTR [ebp-0x4],0x6
65010c73:	call   eax
65010c75:	add    eax,0x10
65010c78:	mov    DWORD PTR [ebp-0x24],eax
65010c7b:	lea    ecx,[ebp-0x44]
65010c7e:	push   ecx
65010c7f:	lea    edx,[ebp-0x24]
65010c82:	push   edx
65010c83:	lea    eax,[ebp-0x28]
65010c86:	push   eax
65010c87:	mov    BYTE PTR [ebp-0x4],0x7
65010c8b:	mov    DWORD PTR [ebp-0x44],ebx
65010c8e:	mov    DWORD PTR [ebp-0x40],ebx
65010c91:	call   0x6500b2b0
65010c96:	add    esp,0xc
65010c99:	test   al,al
65010c9b:	je     0x65010edc
65010ca1:	lea    ecx,[ebp-0x24]
65010ca4:	push   ecx
65010ca5:	lea    edx,[ebp-0x14]
65010ca8:	push   edx
65010ca9:	call   0x65003170
65010cae:	mov    edi,eax
65010cb0:	push   0x65024804
65010cb5:	push   0x5
65010cb7:	mov    bl,0x8
65010cb9:	push   0x650247fc
65010cbe:	mov    BYTE PTR [ebp-0x4],bl
65010cc1:	call   0x65006a80
65010cc6:	add    esp,0x14
65010cc9:	push   eax
65010cca:	lea    ecx,[ebp-0x18]
65010ccd:	call   0x650067e0
65010cd2:	push   edi
65010cd3:	push   eax
65010cd4:	lea    eax,[ebp-0x10]
65010cd7:	push   eax
65010cd8:	mov    BYTE PTR [ebp-0x4],0x9
65010cdc:	call   0x6500f870
65010ce1:	add    esp,0xc
65010ce4:	mov    eax,DWORD PTR [eax]
65010ce6:	mov    ecx,DWORD PTR [eax-0xc]
65010ce9:	push   ecx
65010cea:	push   eax
65010ceb:	mov    ecx,esi
65010ced:	mov    BYTE PTR [ebp-0x4],0xa
65010cf1:	call   0x65002a00
65010cf6:	mov    eax,DWORD PTR [ebp-0x10]
65010cf9:	add    eax,0xfffffff0
65010cfc:	mov    BYTE PTR [ebp-0x4],0x9
65010d00:	lea    ecx,[eax+0xc]
65010d03:	or     edx,0xffffffff
65010d06:	lock xadd DWORD PTR [ecx],edx
65010d0a:	dec    edx
65010d0b:	test   edx,edx
65010d0d:	jg     0x65010d19
65010d0f:	mov    ecx,DWORD PTR [eax]
65010d11:	mov    edx,DWORD PTR [ecx]
65010d13:	push   eax
65010d14:	mov    eax,DWORD PTR [edx+0x4]
65010d17:	call   eax
65010d19:	mov    eax,DWORD PTR [ebp-0x18]
65010d1c:	add    eax,0xfffffff0
65010d1f:	mov    BYTE PTR [ebp-0x4],bl
65010d22:	lea    ecx,[eax+0xc]
65010d25:	or     edx,0xffffffff
65010d28:	lock xadd DWORD PTR [ecx],edx
65010d2c:	dec    edx
65010d2d:	test   edx,edx
65010d2f:	jg     0x65010d3b
65010d31:	mov    ecx,DWORD PTR [eax]
65010d33:	mov    edx,DWORD PTR [ecx]
65010d35:	push   eax
65010d36:	mov    eax,DWORD PTR [edx+0x4]
65010d39:	call   eax
65010d3b:	mov    eax,DWORD PTR [ebp-0x14]
65010d3e:	add    eax,0xfffffff0
65010d41:	mov    BYTE PTR [ebp-0x4],0x7
65010d45:	lea    ecx,[eax+0xc]
65010d48:	or     edx,0xffffffff
65010d4b:	lock xadd DWORD PTR [ecx],edx
65010d4f:	dec    edx
65010d50:	test   edx,edx
65010d52:	jg     0x65010d5e
65010d54:	mov    ecx,DWORD PTR [eax]
65010d56:	mov    edx,DWORD PTR [ecx]
65010d58:	push   eax
65010d59:	mov    eax,DWORD PTR [edx+0x4]
65010d5c:	call   eax
65010d5e:	lea    ecx,[ebp-0x28]
65010d61:	push   ecx
65010d62:	lea    edx,[ebp-0x10]
65010d65:	push   edx
65010d66:	call   0x65003170
65010d6b:	mov    edi,eax
65010d6d:	push   0x650247bc
65010d72:	push   0x7
65010d74:	mov    bl,0xb
65010d76:	push   0x650247b4
65010d7b:	mov    BYTE PTR [ebp-0x4],bl
65010d7e:	call   0x65006a80
65010d83:	add    esp,0x14
65010d86:	push   eax
65010d87:	lea    ecx,[ebp-0x18]
65010d8a:	call   0x650067e0
65010d8f:	push   edi
65010d90:	push   eax
65010d91:	lea    eax,[ebp-0x14]
65010d94:	push   eax
65010d95:	mov    BYTE PTR [ebp-0x4],0xc
65010d99:	call   0x6500f870
65010d9e:	add    esp,0xc
65010da1:	mov    eax,DWORD PTR [eax]
65010da3:	mov    ecx,DWORD PTR [eax-0xc]
65010da6:	push   ecx
65010da7:	push   eax
65010da8:	mov    ecx,esi
65010daa:	mov    BYTE PTR [ebp-0x4],0xd
65010dae:	call   0x65002a00
65010db3:	mov    eax,DWORD PTR [ebp-0x14]
65010db6:	add    eax,0xfffffff0
65010db9:	mov    BYTE PTR [ebp-0x4],0xc
65010dbd:	lea    ecx,[eax+0xc]
65010dc0:	or     edx,0xffffffff
65010dc3:	lock xadd DWORD PTR [ecx],edx
65010dc7:	dec    edx
65010dc8:	test   edx,edx
65010dca:	jg     0x65010dd6
65010dcc:	mov    ecx,DWORD PTR [eax]
65010dce:	mov    edx,DWORD PTR [ecx]
65010dd0:	push   eax
65010dd1:	mov    eax,DWORD PTR [edx+0x4]
65010dd4:	call   eax
65010dd6:	mov    eax,DWORD PTR [ebp-0x18]
65010dd9:	add    eax,0xfffffff0
65010ddc:	mov    BYTE PTR [ebp-0x4],bl
65010ddf:	lea    ecx,[eax+0xc]
65010de2:	or     edx,0xffffffff
65010de5:	lock xadd DWORD PTR [ecx],edx
65010de9:	dec    edx
65010dea:	test   edx,edx
65010dec:	jg     0x65010df8
65010dee:	mov    ecx,DWORD PTR [eax]
65010df0:	mov    edx,DWORD PTR [ecx]
65010df2:	push   eax
65010df3:	mov    eax,DWORD PTR [edx+0x4]
65010df6:	call   eax
65010df8:	mov    eax,DWORD PTR [ebp-0x10]
65010dfb:	add    eax,0xfffffff0
65010dfe:	mov    BYTE PTR [ebp-0x4],0x7
65010e02:	lea    ecx,[eax+0xc]
65010e05:	or     edx,0xffffffff
65010e08:	lock xadd DWORD PTR [ecx],edx
65010e0c:	dec    edx
65010e0d:	test   edx,edx
65010e0f:	jg     0x65010e1b
65010e11:	mov    ecx,DWORD PTR [eax]
65010e13:	mov    edx,DWORD PTR [ecx]
65010e15:	push   eax
65010e16:	mov    eax,DWORD PTR [edx+0x4]
65010e19:	call   eax
65010e1b:	mov    edx,DWORD PTR ds:0x6502d560
65010e21:	mov    eax,DWORD PTR [edx+0xc]
65010e24:	mov    ecx,0x6502d560
65010e29:	call   eax
65010e2b:	add    eax,0x10
65010e2e:	mov    DWORD PTR [ebp-0x10],eax
65010e31:	mov    ecx,DWORD PTR [ebp-0x40]
65010e34:	mov    edx,DWORD PTR [ebp-0x44]
65010e37:	push   ecx
65010e38:	push   edx
65010e39:	push   0x65024790
65010e3e:	push   0xc
65010e40:	push   0x65024774
65010e45:	mov    BYTE PTR [ebp-0x4],0xe
65010e49:	call   0x65006d70
65010e4e:	add    esp,0xc
65010e51:	push   eax
65010e52:	lea    eax,[ebp-0x10]
65010e55:	push   eax
65010e56:	call   0x65001da0
65010e5b:	add    esp,0x10
65010e5e:	call   DWORD PTR ds:0x6502c06c
65010e64:	mov    edi,DWORD PTR [ebp-0x10]
65010e67:	cmp    DWORD PTR [edi-0x4],0x1
65010e6b:	mov    DWORD PTR [ebp-0x14],eax
65010e6e:	jle    0x65010e7f
65010e70:	mov    ecx,DWORD PTR [edi-0xc]
65010e73:	push   ecx
65010e74:	lea    ecx,[ebp-0x10]
65010e77:	call   0x650019b0
65010e7c:	mov    edi,DWORD PTR [ebp-0x10]
65010e7f:	test   edi,edi
65010e81:	jne    0x65010e87
65010e83:	xor    eax,eax
65010e85:	jmp    0x65010eb4
65010e87:	push   edi
65010e88:	call   DWORD PTR ds:0x65024050
65010e8e:	add    eax,0x1
65010e91:	cmp    eax,0x3fffffff
65010e96:	jle    0x65010e9c
65010e98:	xor    eax,eax
65010e9a:	jmp    0x65010eb4
65010e9c:	lea    ebx,[eax+eax*1]
65010e9f:	mov    eax,ebx
65010ea1:	call   0x65012ec0
65010ea6:	mov    edx,DWORD PTR [ebp-0x14]
65010ea9:	mov    eax,esp
65010eab:	push   edx
65010eac:	push   ebx
65010ead:	push   edi
65010eae:	push   eax
65010eaf:	call   0x65002ba0
65010eb4:	push   eax
65010eb5:	mov    ecx,esi
65010eb7:	call   0x65002680
65010ebc:	add    edi,0xfffffff0
65010ebf:	mov    BYTE PTR [ebp-0x4],0x7
65010ec3:	lea    eax,[edi+0xc]
65010ec6:	or     ecx,0xffffffff
65010ec9:	lock xadd DWORD PTR [eax],ecx
65010ecd:	dec    ecx
65010ece:	test   ecx,ecx
65010ed0:	jg     0x65010edc
65010ed2:	mov    ecx,DWORD PTR [edi]
65010ed4:	mov    edx,DWORD PTR [ecx]
65010ed6:	mov    eax,DWORD PTR [edx+0x4]
65010ed9:	push   edi
65010eda:	call   eax
65010edc:	xor    edi,edi
65010ede:	mov    DWORD PTR [ebp-0x38],edi
65010ee1:	mov    DWORD PTR [ebp-0x34],edi
65010ee4:	mov    DWORD PTR [ebp-0x30],edi
65010ee7:	lea    ecx,[ebp-0x3c]
65010eea:	push   ecx
65010eeb:	mov    BYTE PTR [ebp-0x4],0xf
65010eef:	call   0x6500b460
65010ef4:	add    esp,0x4
65010ef7:	mov    DWORD PTR [ebp-0x10],edi
65010efa:	xor    ebx,ebx
65010efc:	lea    esp,[esp+0x0]
65010f00:	mov    eax,DWORD PTR [ebp-0x38]
65010f03:	cmp    eax,edi
65010f05:	jne    0x65010f0b
65010f07:	xor    eax,eax
65010f09:	jmp    0x65010f23
65010f0b:	mov    ecx,DWORD PTR [ebp-0x34]
65010f0e:	sub    ecx,eax
65010f10:	mov    eax,0x92492493
65010f15:	imul   ecx
65010f17:	add    edx,ecx
65010f19:	sar    edx,0x4
65010f1c:	mov    eax,edx
65010f1e:	shr    eax,0x1f
65010f21:	add    eax,edx
65010f23:	cmp    DWORD PTR [ebp-0x10],eax
65010f26:	je     0x65010fd1
65010f2c:	push   0x6502473c
65010f31:	push   0x5
65010f33:	push   0x65024734
65010f38:	call   0x65006a80
65010f3d:	add    esp,0xc
65010f40:	push   eax
65010f41:	lea    ecx,[ebp-0x14]
65010f44:	call   0x650067e0
65010f49:	mov    eax,DWORD PTR [eax]
65010f4b:	mov    ecx,DWORD PTR [eax-0xc]
65010f4e:	push   ecx
65010f4f:	push   eax
65010f50:	mov    ecx,esi
65010f52:	mov    BYTE PTR [ebp-0x4],0x10
65010f56:	call   0x65002a00
65010f5b:	mov    eax,DWORD PTR [ebp-0x14]
65010f5e:	add    eax,0xfffffff0
65010f61:	mov    BYTE PTR [ebp-0x4],0xf
65010f65:	lea    edx,[eax+0xc]
65010f68:	or     ecx,0xffffffff
65010f6b:	lock xadd DWORD PTR [edx],ecx
65010f6f:	dec    ecx
65010f70:	test   ecx,ecx
65010f72:	jg     0x65010f7e
65010f74:	mov    ecx,DWORD PTR [eax]
65010f76:	mov    edx,DWORD PTR [ecx]
65010f78:	push   eax
65010f79:	mov    eax,DWORD PTR [edx+0x4]
65010f7c:	call   eax
65010f7e:	mov    edi,DWORD PTR [ebp-0x38]
65010f81:	test   edi,edi
65010f83:	je     0x65010fa2
65010f85:	mov    ecx,DWORD PTR [ebp-0x34]
65010f88:	sub    ecx,edi
65010f8a:	mov    eax,0x92492493
65010f8f:	imul   ecx
65010f91:	add    edx,ecx
65010f93:	sar    edx,0x4
65010f96:	mov    eax,edx
65010f98:	shr    eax,0x1f
65010f9b:	add    eax,edx
65010f9d:	cmp    DWORD PTR [ebp-0x10],eax
65010fa0:	jb     0x65010faa
65010fa2:	call   0x650122d3
65010fa7:	mov    edi,DWORD PTR [ebp-0x38]
65010faa:	cmp    DWORD PTR [ebx+edi*1+0x18],0x10
65010faf:	jb     0x65010fb7
65010fb1:	mov    edi,DWORD PTR [ebx+edi*1+0x4]
65010fb5:	jmp    0x65010fbb
65010fb7:	lea    edi,[ebx+edi*1+0x4]
65010fbb:	push   edi
65010fbc:	mov    ecx,esi
65010fbe:	call   0x65002680
65010fc3:	add    DWORD PTR [ebp-0x10],0x1
65010fc7:	add    ebx,0x1c
65010fca:	xor    edi,edi
65010fcc:	jmp    0x65010f00
65010fd1:	call   DWORD PTR ds:0x6502c06c
65010fd7:	push   0x110
65010fdc:	lea    ecx,[ebp+0x4]
65010fdf:	push   edi
65010fe0:	push   ecx
65010fe1:	mov    DWORD PTR [ebp-0x14],eax
65010fe4:	call   0x65012e40
65010fe9:	mov    edx,DWORD PTR ds:0x6502d560
65010fef:	mov    eax,DWORD PTR [edx+0xc]
65010ff2:	add    esp,0xc
65010ff5:	mov    ecx,0x6502d560
65010ffa:	mov    DWORD PTR [ebp+0x0],0x114
65011001:	call   eax
65011003:	add    eax,0x10
65011006:	mov    DWORD PTR [ebp-0x10],eax
65011009:	lea    ecx,[ebp+0x0]
6501100c:	push   ecx
6501100d:	mov    BYTE PTR [ebp-0x4],0x11
65011011:	call   DWORD PTR ds:0x65024068
65011017:	test   eax,eax
65011019:	je     0x65011046
6501101b:	mov    edx,DWORD PTR [ebp+0x8]
6501101e:	mov    eax,DWORD PTR [ebp+0x4]
65011021:	push   edx
65011022:	push   eax
65011023:	push   0x65024704
65011028:	push   0x12
6501102a:	push   0x650246dc
6501102f:	call   0x65006d70
65011034:	add    esp,0xc
65011037:	push   eax
65011038:	lea    ecx,[ebp-0x10]
6501103b:	push   ecx
6501103c:	call   0x65001da0
65011041:	add    esp,0x10
65011044:	jmp    0x65011055
65011046:	push   0xc
65011048:	push   0x650246c0
6501104d:	lea    ecx,[ebp-0x10]
65011050:	call   0x65002b00
65011055:	xor    eax,eax
65011057:	lea    edx,[ebp-0x8c]
6501105d:	push   edx
6501105e:	mov    DWORD PTR [ebp-0x8c],edi
65011064:	mov    DWORD PTR [ebp-0x88],eax
6501106a:	mov    DWORD PTR [ebp-0x84],eax
65011070:	mov    DWORD PTR [ebp-0x80],eax
65011073:	mov    DWORD PTR [ebp-0x7c],eax
65011076:	mov    DWORD PTR [ebp-0x78],eax
65011079:	mov    DWORD PTR [ebp-0x74],eax
6501107c:	mov    DWORD PTR [ebp-0x70],eax
6501107f:	mov    DWORD PTR [ebp-0x6c],eax
65011082:	call   DWORD PTR ds:0x65024064
65011088:	movzx  eax,WORD PTR [ebp-0x8c]
6501108f:	cmp    eax,edi
65011091:	je     0x650110cd
65011093:	cmp    eax,0x9
65011096:	jne    0x65011109
65011098:	push   0x6502468c
6501109d:	push   0x4
6501109f:	push   0x65024680
650110a4:	call   0x65006d70
650110a9:	add    esp,0xc
650110ac:	cmp    eax,edi
650110ae:	jne    0x650110b4
650110b0:	xor    ecx,ecx
650110b2:	jmp    0x650110ff
650110b4:	mov    ecx,eax
650110b6:	lea    edi,[ecx+0x2]
650110b9:	lea    esp,[esp+0x0]
650110c0:	mov    dx,WORD PTR [ecx]
650110c3:	add    ecx,0x2
650110c6:	test   dx,dx
650110c9:	jne    0x650110c0
650110cb:	jmp    0x650110fb
650110cd:	push   0x65024648
650110d2:	push   0x4
650110d4:	push   0x6502463c
650110d9:	call   0x65006d70
650110de:	add    esp,0xc
650110e1:	cmp    eax,edi
650110e3:	jne    0x650110e9
650110e5:	xor    ecx,ecx
650110e7:	jmp    0x650110ff
650110e9:	mov    ecx,eax
650110eb:	lea    edi,[ecx+0x2]
650110ee:	mov    edi,edi
650110f0:	mov    dx,WORD PTR [ecx]
650110f3:	add    ecx,0x2
650110f6:	test   dx,dx
650110f9:	jne    0x650110f0
650110fb:	sub    ecx,edi
650110fd:	sar    ecx,1
650110ff:	push   ecx
65011100:	push   eax
65011101:	lea    ecx,[ebp-0x10]
65011104:	call   0x65002a00
65011109:	mov    edi,DWORD PTR [ebp-0x10]
6501110c:	test   edi,edi
6501110e:	jne    0x65011114
65011110:	xor    eax,eax
65011112:	jmp    0x6501115d
65011114:	push   edi
65011115:	call   DWORD PTR ds:0x65024050
6501111b:	add    eax,0x1
6501111e:	cmp    eax,0x3fffffff
65011123:	jg     0x65011158
65011125:	lea    ebx,[eax+eax*1]
65011128:	mov    eax,ebx
6501112a:	call   0x65012ec0
6501112f:	mov    edi,esp
65011131:	test   edi,edi
65011133:	je     0x65011158
65011135:	mov    eax,DWORD PTR [ebp-0x10]
65011138:	mov    ecx,DWORD PTR [ebp-0x14]
6501113b:	push   0x0
6501113d:	push   0x0
6501113f:	push   ebx
65011140:	push   edi
65011141:	push   0xffffffff
65011143:	push   eax
65011144:	push   0x0
65011146:	push   ecx
65011147:	mov    BYTE PTR [edi],0x0
6501114a:	call   DWORD PTR ds:0x65024028
65011150:	neg    eax
65011152:	sbb    eax,eax
65011154:	and    eax,edi
65011156:	jmp    0x6501115a
65011158:	xor    eax,eax
6501115a:	mov    edi,DWORD PTR [ebp-0x10]
6501115d:	push   eax
6501115e:	mov    ecx,esi
65011160:	call   0x65002680
65011165:	lea    eax,[edi-0x10]
65011168:	mov    BYTE PTR [ebp-0x4],0xf
6501116c:	lea    edx,[eax+0xc]
6501116f:	or     ecx,0xffffffff
65011172:	lock xadd DWORD PTR [edx],ecx
65011176:	dec    ecx
65011177:	test   ecx,ecx
65011179:	jg     0x65011185
6501117b:	mov    ecx,DWORD PTR [eax]
6501117d:	mov    edx,DWORD PTR [ecx]
6501117f:	push   eax
65011180:	mov    eax,DWORD PTR [edx+0x4]
65011183:	call   eax
65011185:	lea    ecx,[ebp-0x20]
65011188:	push   ecx
65011189:	call   0x6500ba20
6501118e:	push   eax
6501118f:	lea    edx,[ebp-0x10]
65011192:	push   edx
65011193:	mov    BYTE PTR [ebp-0x4],0x12
65011197:	call   0x65003170
6501119c:	mov    edi,eax
6501119e:	push   0x650245fc
650111a3:	push   0x7
650111a5:	push   0x650245f4
650111aa:	mov    BYTE PTR [ebp-0x4],0x13
650111ae:	call   0x65006a80
650111b3:	add    esp,0x18
650111b6:	push   eax
650111b7:	lea    ecx,[ebp-0x18]
650111ba:	call   0x650067e0
650111bf:	push   edi
650111c0:	push   eax
650111c1:	lea    eax,[ebp-0x14]
650111c4:	mov    bl,0x14
650111c6:	push   eax
650111c7:	mov    BYTE PTR [ebp-0x4],bl
650111ca:	call   0x6500f870
650111cf:	add    esp,0xc
650111d2:	mov    eax,DWORD PTR [eax]
650111d4:	mov    ecx,DWORD PTR [eax-0xc]
650111d7:	push   ecx
650111d8:	push   eax
650111d9:	mov    ecx,esi
650111db:	mov    BYTE PTR [ebp-0x4],0x15
650111df:	call   0x65002a00
650111e4:	mov    eax,DWORD PTR [ebp-0x14]
650111e7:	add    eax,0xfffffff0
650111ea:	mov    BYTE PTR [ebp-0x4],bl
650111ed:	lea    ecx,[eax+0xc]
650111f0:	or     edx,0xffffffff
650111f3:	lock xadd DWORD PTR [ecx],edx
650111f7:	dec    edx
650111f8:	test   edx,edx
650111fa:	jg     0x65011206
650111fc:	mov    ecx,DWORD PTR [eax]
650111fe:	mov    edx,DWORD PTR [ecx]
65011200:	push   eax
65011201:	mov    eax,DWORD PTR [edx+0x4]
65011204:	call   eax
65011206:	mov    eax,DWORD PTR [ebp-0x18]
65011209:	add    eax,0xfffffff0
6501120c:	mov    BYTE PTR [ebp-0x4],0x13
65011210:	lea    ecx,[eax+0xc]
65011213:	or     edx,0xffffffff
65011216:	lock xadd DWORD PTR [ecx],edx
6501121a:	dec    edx
6501121b:	test   edx,edx
6501121d:	jg     0x65011229
6501121f:	mov    ecx,DWORD PTR [eax]
65011221:	mov    edx,DWORD PTR [ecx]
65011223:	push   eax
65011224:	mov    eax,DWORD PTR [edx+0x4]
65011227:	call   eax
65011229:	mov    eax,DWORD PTR [ebp-0x10]
6501122c:	add    eax,0xfffffff0
6501122f:	mov    BYTE PTR [ebp-0x4],0x12
65011233:	lea    ecx,[eax+0xc]
65011236:	or     edx,0xffffffff
65011239:	lock xadd DWORD PTR [ecx],edx
6501123d:	dec    edx
6501123e:	test   edx,edx
65011240:	jg     0x6501124c
65011242:	mov    ecx,DWORD PTR [eax]
65011244:	mov    edx,DWORD PTR [ecx]
65011246:	push   eax
65011247:	mov    eax,DWORD PTR [edx+0x4]
6501124a:	call   eax
6501124c:	mov    eax,DWORD PTR [ebp-0x20]
6501124f:	add    eax,0xfffffff0
65011252:	mov    BYTE PTR [ebp-0x4],0xf
65011256:	lea    ecx,[eax+0xc]
65011259:	or     edx,0xffffffff
6501125c:	lock xadd DWORD PTR [ecx],edx
65011260:	dec    edx
65011261:	test   edx,edx
65011263:	jg     0x6501126f
65011265:	mov    ecx,DWORD PTR [eax]
65011267:	mov    edx,DWORD PTR [ecx]
65011269:	push   eax
6501126a:	mov    eax,DWORD PTR [edx+0x4]
6501126d:	call   eax
6501126f:	call   DWORD PTR ds:0x6502c06c
65011275:	mov    edx,DWORD PTR ds:0x6502d560
6501127b:	mov    DWORD PTR [ebp-0x14],eax
6501127e:	mov    eax,DWORD PTR [edx+0xc]
65011281:	mov    ecx,0x6502d560
65011286:	call   eax
65011288:	add    eax,0x10
6501128b:	mov    DWORD PTR [ebp-0x10],eax
6501128e:	mov    BYTE PTR [ebp-0x4],0x16
65011292:	call   0x65003820
65011297:	push   eax
65011298:	push   0x650245c4
6501129d:	push   0x4
6501129f:	push   0x650245b8
650112a4:	call   0x65006d70
650112a9:	add    esp,0xc
650112ac:	push   eax
650112ad:	lea    ecx,[ebp-0x10]
650112b0:	push   ecx
650112b1:	call   0x65001da0
650112b6:	mov    ebx,DWORD PTR [ebp-0x10]
650112b9:	mov    eax,DWORD PTR [ebx-0x8]
650112bc:	mov    ecx,0x1
650112c1:	sub    ecx,DWORD PTR [ebx-0x4]
650112c4:	add    eax,0x1
650112c7:	add    esp,0xc
650112ca:	or     eax,ecx
650112cc:	jge    0x650112db
650112ce:	push   0xffffffff
650112d0:	lea    ecx,[ebp-0x10]
650112d3:	call   0x65001e60
650112d8:	mov    ebx,DWORD PTR [ebp-0x10]
650112db:	test   ebx,ebx
650112dd:	je     0x65011323
650112df:	push   ebx
650112e0:	call   DWORD PTR ds:0x65024050
650112e6:	add    eax,0x1
650112e9:	cmp    eax,0x3fffffff
650112ee:	jg     0x65011323
650112f0:	add    eax,eax
650112f2:	mov    DWORD PTR [ebp-0x20],eax
650112f5:	call   0x65012ec0
650112fa:	mov    edi,esp
650112fc:	test   edi,edi
650112fe:	je     0x65011323
65011300:	mov    edx,DWORD PTR [ebp-0x20]
65011303:	mov    eax,DWORD PTR [ebp-0x14]
65011306:	push   0x0
65011308:	push   0x0
6501130a:	push   edx
6501130b:	push   edi
6501130c:	push   0xffffffff
6501130e:	push   ebx
6501130f:	push   0x0
65011311:	push   eax
65011312:	mov    BYTE PTR [edi],0x0
65011315:	call   DWORD PTR ds:0x65024028
6501131b:	neg    eax
6501131d:	sbb    eax,eax
6501131f:	and    eax,edi
65011321:	jmp    0x65011325
65011323:	xor    eax,eax
65011325:	push   eax
65011326:	lea    ecx,[ebp-0x1c]
65011329:	call   0x650067e0
6501132e:	mov    edi,eax
65011330:	push   0x65024590
65011335:	push   0x5
65011337:	push   0x65024588
6501133c:	mov    BYTE PTR [ebp-0x4],0x17
65011340:	call   0x65006a80
65011345:	add    esp,0xc
65011348:	push   eax
65011349:	lea    ecx,[ebp-0x2c]
6501134c:	call   0x650067e0
65011351:	push   edi
65011352:	push   eax
65011353:	lea    ecx,[ebp-0x18]
65011356:	push   ecx
65011357:	mov    BYTE PTR [ebp-0x4],0x18
6501135b:	call   0x6500f870
65011360:	add    esp,0xc
65011363:	mov    eax,DWORD PTR [eax]
65011365:	mov    ecx,DWORD PTR [eax-0xc]
65011368:	push   ecx
65011369:	push   eax
6501136a:	mov    ecx,esi
6501136c:	mov    BYTE PTR [ebp-0x4],0x19
65011370:	call   0x65002a00
65011375:	mov    eax,DWORD PTR [ebp-0x18]
65011378:	add    eax,0xfffffff0
6501137b:	mov    BYTE PTR [ebp-0x4],0x18
6501137f:	lea    edx,[eax+0xc]
65011382:	or     ecx,0xffffffff
65011385:	lock xadd DWORD PTR [edx],ecx
65011389:	dec    ecx
6501138a:	test   ecx,ecx
6501138c:	jg     0x65011398
6501138e:	mov    ecx,DWORD PTR [eax]
65011390:	mov    edx,DWORD PTR [ecx]
65011392:	push   eax
65011393:	mov    eax,DWORD PTR [edx+0x4]
65011396:	call   eax
65011398:	mov    eax,DWORD PTR [ebp-0x2c]
6501139b:	add    eax,0xfffffff0
6501139e:	mov    BYTE PTR [ebp-0x4],0x17
650113a2:	lea    ecx,[eax+0xc]
650113a5:	or     edx,0xffffffff
650113a8:	lock xadd DWORD PTR [ecx],edx
650113ac:	dec    edx
650113ad:	test   edx,edx
650113af:	jg     0x650113bb
650113b1:	mov    ecx,DWORD PTR [eax]
650113b3:	mov    edx,DWORD PTR [ecx]
650113b5:	push   eax
650113b6:	mov    eax,DWORD PTR [edx+0x4]
650113b9:	call   eax
650113bb:	mov    eax,DWORD PTR [ebp-0x1c]
650113be:	add    eax,0xfffffff0
650113c1:	mov    BYTE PTR [ebp-0x4],0x16
650113c5:	lea    ecx,[eax+0xc]
650113c8:	or     edx,0xffffffff
650113cb:	lock xadd DWORD PTR [ecx],edx
650113cf:	dec    edx
650113d0:	test   edx,edx
650113d2:	jg     0x650113de
650113d4:	mov    ecx,DWORD PTR [eax]
650113d6:	mov    edx,DWORD PTR [ecx]
650113d8:	push   eax
650113d9:	mov    eax,DWORD PTR [edx+0x4]
650113dc:	call   eax
650113de:	add    ebx,0xfffffff0
650113e1:	mov    BYTE PTR [ebp-0x4],0xf
650113e5:	lea    ecx,[ebx+0xc]
650113e8:	or     edx,0xffffffff
650113eb:	lock xadd DWORD PTR [ecx],edx
650113ef:	dec    edx
650113f0:	test   edx,edx
650113f2:	jg     0x650113fe
650113f4:	mov    ecx,DWORD PTR [ebx]
650113f6:	mov    eax,DWORD PTR [ecx]
650113f8:	mov    edx,DWORD PTR [eax+0x4]
650113fb:	push   ebx
650113fc:	call   edx
650113fe:	lea    eax,[ebp-0x9c]
65011404:	push   eax
65011405:	call   0x650039f0
6501140a:	mov    ecx,DWORD PTR [eax]
6501140c:	mov    DWORD PTR [ebp-0x68],ecx
6501140f:	mov    edx,DWORD PTR [eax+0x4]
65011412:	mov    DWORD PTR [ebp-0x64],edx
65011415:	mov    ecx,DWORD PTR [eax+0x8]
65011418:	push   0x65024558
6501141d:	mov    DWORD PTR [ebp-0x60],ecx
65011420:	mov    edx,DWORD PTR [eax+0xc]
65011423:	push   0x5
65011425:	push   0x65024550
6501142a:	mov    DWORD PTR [ebp-0x5c],edx
6501142d:	call   0x65006a80
65011432:	add    esp,0x10
65011435:	push   eax
65011436:	lea    ecx,[ebp-0x10]
65011439:	call   0x650067e0
6501143e:	lea    eax,[ebp-0x68]
65011441:	push   eax
65011442:	lea    ecx,[ebp-0x2c]
65011445:	push   ecx
65011446:	mov    BYTE PTR [ebp-0x4],0x1a
6501144a:	call   0x65002ed0
6501144f:	push   eax
65011450:	lea    edx,[ebp-0x10]
65011453:	push   edx
65011454:	lea    eax,[ebp-0x1c]
65011457:	mov    bl,0x1b
65011459:	push   eax
6501145a:	mov    BYTE PTR [ebp-0x4],bl
6501145d:	call   0x6500f870
65011462:	add    esp,0x14
65011465:	mov    eax,DWORD PTR [eax]
65011467:	mov    ecx,DWORD PTR [eax-0xc]
6501146a:	push   ecx
6501146b:	push   eax
6501146c:	mov    ecx,esi
6501146e:	mov    BYTE PTR [ebp-0x4],0x1c
65011472:	call   0x65002a00
65011477:	mov    eax,DWORD PTR [ebp-0x1c]
6501147a:	add    eax,0xfffffff0
6501147d:	mov    BYTE PTR [ebp-0x4],bl
65011480:	lea    ecx,[eax+0xc]
65011483:	or     edx,0xffffffff
65011486:	lock xadd DWORD PTR [ecx],edx
6501148a:	dec    edx
6501148b:	test   edx,edx
6501148d:	jg     0x65011499
6501148f:	mov    ecx,DWORD PTR [eax]
65011491:	mov    edx,DWORD PTR [ecx]
65011493:	push   eax
65011494:	mov    eax,DWORD PTR [edx+0x4]
65011497:	call   eax
65011499:	mov    eax,DWORD PTR [ebp-0x2c]
6501149c:	add    eax,0xfffffff0
6501149f:	mov    BYTE PTR [ebp-0x4],0x1a
650114a3:	lea    ecx,[eax+0xc]
650114a6:	or     edx,0xffffffff
650114a9:	lock xadd DWORD PTR [ecx],edx
650114ad:	dec    edx
650114ae:	test   edx,edx
650114b0:	jg     0x650114bc
650114b2:	mov    ecx,DWORD PTR [eax]
650114b4:	mov    edx,DWORD PTR [ecx]
650114b6:	push   eax
650114b7:	mov    eax,DWORD PTR [edx+0x4]
650114ba:	call   eax
650114bc:	mov    eax,DWORD PTR [ebp-0x10]
650114bf:	add    eax,0xfffffff0
650114c2:	mov    BYTE PTR [ebp-0x4],0xf
650114c6:	lea    ecx,[eax+0xc]
650114c9:	or     edx,0xffffffff
650114cc:	lock xadd DWORD PTR [ecx],edx
650114d0:	dec    edx
650114d1:	test   edx,edx
650114d3:	jg     0x650114df
650114d5:	mov    ecx,DWORD PTR [eax]
650114d7:	mov    edx,DWORD PTR [ecx]
650114d9:	push   eax
650114da:	mov    eax,DWORD PTR [edx+0x4]
650114dd:	call   eax
650114df:	lea    ecx,[ebp-0x1c]
650114e2:	push   0x1
650114e4:	push   ecx
650114e5:	call   0x65006310
650114ea:	add    esp,0x8
650114ed:	mov    eax,DWORD PTR [eax]
650114ef:	mov    ecx,DWORD PTR [eax-0xc]
650114f2:	push   ecx
650114f3:	push   eax
650114f4:	mov    ecx,esi
650114f6:	mov    BYTE PTR [ebp-0x4],0x1d
650114fa:	call   0x65002a00
650114ff:	mov    eax,DWORD PTR [ebp-0x1c]
65011502:	add    eax,0xfffffff0
65011505:	mov    BYTE PTR [ebp-0x4],0xf
65011509:	lea    edx,[eax+0xc]
6501150c:	or     ecx,0xffffffff
6501150f:	lock xadd DWORD PTR [edx],ecx
65011513:	dec    ecx
65011514:	test   ecx,ecx
65011516:	jg     0x65011522
65011518:	mov    ecx,DWORD PTR [eax]
6501151a:	mov    edx,DWORD PTR [ecx]
6501151c:	push   eax
6501151d:	mov    eax,DWORD PTR [edx+0x4]
65011520:	call   eax
65011522:	mov    eax,DWORD PTR [ebp-0x38]
65011525:	xor    edi,edi
65011527:	cmp    eax,edi
65011529:	je     0x65011549
6501152b:	mov    ecx,DWORD PTR [ebp-0x58]
6501152e:	push   ecx
6501152f:	mov    ecx,DWORD PTR [ebp-0x34]
65011532:	lea    edx,[ebp-0x3c]
65011535:	push   edx
65011536:	push   ecx
65011537:	push   eax
65011538:	call   0x6500c300
6501153d:	mov    edx,DWORD PTR [ebp-0x38]
65011540:	push   edx
65011541:	call   0x65011f62
65011546:	add    esp,0x14
65011549:	mov    eax,DWORD PTR [ebp-0x24]
6501154c:	add    eax,0xfffffff0
6501154f:	mov    DWORD PTR [ebp-0x38],edi
65011552:	mov    DWORD PTR [ebp-0x34],edi
65011555:	mov    DWORD PTR [ebp-0x30],edi
65011558:	mov    BYTE PTR [ebp-0x4],0x6
6501155c:	lea    ecx,[eax+0xc]
6501155f:	or     edx,0xffffffff
65011562:	lock xadd DWORD PTR [ecx],edx
65011566:	dec    edx
65011567:	test   edx,edx
65011569:	jg     0x65011575
6501156b:	mov    ecx,DWORD PTR [eax]
6501156d:	mov    edx,DWORD PTR [ecx]
6501156f:	push   eax
65011570:	mov    eax,DWORD PTR [edx+0x4]
65011573:	call   eax
65011575:	mov    eax,DWORD PTR [ebp-0x48]
65011578:	add    eax,0xfffffff0
6501157b:	mov    BYTE PTR [ebp-0x4],0x5
6501157f:	lea    ecx,[eax+0xc]
65011582:	or     edx,0xffffffff
65011585:	lock xadd DWORD PTR [ecx],edx
65011589:	dec    edx
6501158a:	test   edx,edx
6501158c:	jg     0x65011598
6501158e:	mov    ecx,DWORD PTR [eax]
65011590:	mov    edx,DWORD PTR [ecx]
65011592:	push   eax
65011593:	mov    eax,DWORD PTR [edx+0x4]
65011596:	call   eax
65011598:	mov    eax,DWORD PTR [ebp-0x28]
6501159b:	add    eax,0xfffffff0
6501159e:	mov    BYTE PTR [ebp-0x4],0x2
650115a2:	lea    ecx,[eax+0xc]
650115a5:	or     edx,0xffffffff
650115a8:	lock xadd DWORD PTR [ecx],edx
650115ac:	dec    edx
650115ad:	test   edx,edx
650115af:	jg     0x650115bb
650115b1:	mov    ecx,DWORD PTR [eax]
650115b3:	mov    edx,DWORD PTR [ecx]
650115b5:	push   eax
650115b6:	mov    eax,DWORD PTR [edx+0x4]
650115b9:	call   eax
650115bb:	mov    eax,DWORD PTR [ebp-0x54]
650115be:	add    eax,0xfffffff0
650115c1:	mov    BYTE PTR [ebp-0x4],0x1
650115c5:	lea    ecx,[eax+0xc]
650115c8:	or     edx,0xffffffff
650115cb:	lock xadd DWORD PTR [ecx],edx
650115cf:	dec    edx
650115d0:	test   edx,edx
650115d2:	jg     0x650115de
650115d4:	mov    ecx,DWORD PTR [eax]
650115d6:	mov    edx,DWORD PTR [ecx]
650115d8:	push   eax
650115d9:	mov    eax,DWORD PTR [edx+0x4]
650115dc:	call   eax
650115de:	mov    eax,DWORD PTR [ebp-0x4c]
650115e1:	add    eax,0xfffffff0
650115e4:	mov    BYTE PTR [ebp-0x4],0x0
650115e8:	lea    ecx,[eax+0xc]
650115eb:	or     edx,0xffffffff
650115ee:	lock xadd DWORD PTR [ecx],edx
650115f2:	dec    edx
650115f3:	test   edx,edx
650115f5:	jg     0x65011601
650115f7:	mov    ecx,DWORD PTR [eax]
650115f9:	mov    edx,DWORD PTR [ecx]
650115fb:	push   eax
650115fc:	mov    eax,DWORD PTR [edx+0x4]
650115ff:	call   eax
65011601:	mov    eax,esi
65011603:	lea    esp,[ebp-0xac]
65011609:	mov    ecx,DWORD PTR [ebp-0xc]
6501160c:	mov    DWORD PTR fs:0x0,ecx
65011613:	pop    ecx
65011614:	pop    edi
65011615:	pop    esi
65011616:	pop    ebx
65011617:	mov    ecx,DWORD PTR [ebp+0x124]
6501161d:	xor    ecx,ebp
6501161f:	call   0x650127bc
65011624:	add    ebp,0x128
6501162a:	mov    esp,ebp
6501162c:	pop    ebp
6501162d:	ret    
6501162e:	int3   
6501162f:	int3   
65011630:	push   ebp
65011631:	mov    ebp,esp
65011633:	push   0xffffffff
65011635:	push   0x65022058
6501163a:	mov    eax,fs:0x0
65011640:	push   eax
65011641:	sub    esp,0x50
65011644:	mov    eax,ds:0x6502c09c
65011649:	xor    eax,ebp
6501164b:	mov    DWORD PTR [ebp-0x10],eax
6501164e:	push   ebx
6501164f:	push   esi
65011650:	push   edi
65011651:	push   eax
65011652:	lea    eax,[ebp-0xc]
65011655:	mov    fs:0x0,eax
6501165b:	call   DWORD PTR ds:0x6502c06c
65011661:	push   0xea60
65011666:	mov    DWORD PTR [ebp-0x3c],eax
65011669:	call   0x6500f5f0
6501166e:	add    esp,0x4
65011671:	mov    DWORD PTR [ebp-0x34],0x0
65011678:	lea    eax,[ebp-0x30]
6501167b:	push   eax
6501167c:	call   0x65010a30
65011681:	add    esp,0x4
65011684:	xor    esi,esi
65011686:	mov    DWORD PTR [ebp-0x4],esi
65011689:	mov    DWORD PTR [ebp-0x14],0xf
65011690:	mov    DWORD PTR [ebp-0x18],esi
65011693:	mov    BYTE PTR [ebp-0x28],0x0
65011697:	mov    eax,DWORD PTR [ebp-0x30]
6501169a:	cmp    eax,esi
6501169c:	mov    BYTE PTR [ebp-0x4],0x1
650116a0:	mov    ebx,eax
650116a2:	jne    0x650116a8
650116a4:	xor    ecx,ecx
650116a6:	jmp    0x650116ef
650116a8:	push   eax
650116a9:	call   DWORD PTR ds:0x65024050
650116af:	add    eax,0x1
650116b2:	cmp    eax,0x3fffffff
650116b7:	jg     0x650116e9
650116b9:	lea    edi,[eax+eax*1]
650116bc:	mov    eax,edi
650116be:	call   0x65012ec0
650116c3:	mov    esi,esp
650116c5:	test   esi,esi
650116c7:	je     0x650116e9
650116c9:	mov    ecx,DWORD PTR [ebp-0x3c]
650116cc:	push   0x0
650116ce:	push   0x0
650116d0:	push   edi
650116d1:	push   esi
650116d2:	push   0xffffffff
650116d4:	push   ebx
650116d5:	push   0x0
650116d7:	push   ecx
650116d8:	mov    BYTE PTR [esi],0x0
650116db:	call   DWORD PTR ds:0x65024028
650116e1:	neg    eax
650116e3:	sbb    eax,eax
650116e5:	and    eax,esi
650116e7:	jmp    0x650116eb
650116e9:	xor    eax,eax
650116eb:	mov    ecx,eax
650116ed:	xor    esi,esi
650116ef:	mov    eax,ecx
650116f1:	mov    DWORD PTR [ebp-0x48],esi
650116f4:	mov    DWORD PTR [ebp-0x44],0xf
650116fb:	mov    BYTE PTR [ebp-0x58],0x0
650116ff:	lea    esi,[eax+0x1]
65011702:	mov    dl,BYTE PTR [eax]
65011704:	add    eax,0x1
65011707:	test   dl,dl
65011709:	jne    0x65011702
6501170b:	sub    eax,esi
6501170d:	push   eax
6501170e:	push   ecx
6501170f:	lea    ecx,[ebp-0x5c]
65011712:	call   0x650018c0
65011717:	lea    edx,[ebp-0x2c]
6501171a:	push   edx
6501171b:	lea    eax,[ebp-0x5c]
6501171e:	push   eax
6501171f:	mov    BYTE PTR [ebp-0x4],0x2
65011723:	call   0x65010780
65011728:	mov    edi,0x10
6501172d:	add    esp,0x8
65011730:	cmp    DWORD PTR [ebp-0x44],edi
65011733:	mov    bl,al
65011735:	mov    BYTE PTR [ebp-0x4],0x1
65011739:	jb     0x65011747
6501173b:	mov    ecx,DWORD PTR [ebp-0x58]
6501173e:	push   ecx
6501173f:	call   0x65011f62
65011744:	add    esp,0x4
65011747:	test   bl,bl
65011749:	jne    0x650117dc
6501174f:	xor    ebx,ebx
65011751:	xor    esi,esi
65011753:	lea    edx,[ebp-0x38]
65011756:	push   ebx
65011757:	push   edx
65011758:	mov    DWORD PTR [ebp-0x38],ebx
6501175b:	call   0x6500e4d0
65011760:	call   eax
65011762:	test   eax,eax
65011764:	je     0x65011774
65011766:	add    esi,0x3e8
6501176c:	cmp    esi,0x493e0
65011772:	ja     0x65011781
65011774:	push   0x3e8
65011779:	call   DWORD PTR ds:0x6502404c
6501177f:	jmp    0x65011753
65011781:	cmp    DWORD PTR [ebp-0x14],edi
65011784:	jb     0x65011792
65011786:	mov    eax,DWORD PTR [ebp-0x28]
65011789:	push   eax
6501178a:	call   0x65011f62
6501178f:	add    esp,0x4
65011792:	mov    eax,DWORD PTR [ebp-0x30]
65011795:	add    eax,0xfffffff0
65011798:	mov    DWORD PTR [ebp-0x14],0xf
6501179f:	mov    DWORD PTR [ebp-0x18],ebx
650117a2:	mov    BYTE PTR [ebp-0x28],0x0
650117a6:	mov    DWORD PTR [ebp-0x4],0xffffffff
650117ad:	lea    ecx,[eax+0xc]
650117b0:	or     edx,0xffffffff
650117b3:	lock xadd DWORD PTR [ecx],edx
650117b7:	dec    edx
650117b8:	test   edx,edx
650117ba:	jg     0x650117c6
650117bc:	mov    ecx,DWORD PTR [eax]
650117be:	mov    edx,DWORD PTR [ecx]
650117c0:	push   eax
650117c1:	mov    eax,DWORD PTR [edx+0x4]
650117c4:	call   eax
650117c6:	mov    eax,DWORD PTR [ebp-0x34]
650117c9:	add    eax,0x1
650117cc:	cmp    eax,0x3
650117cf:	mov    DWORD PTR [ebp-0x34],eax
650117d2:	jne    0x65011678
650117d8:	xor    ebx,ebx
650117da:	jmp    0x65011834
650117dc:	xor    ebx,ebx
650117de:	cmp    DWORD PTR [ebp-0x18],ebx
650117e1:	je     0x650117ef
650117e3:	lea    ecx,[ebp-0x2c]
650117e6:	push   ecx
650117e7:	call   0x65010110
650117ec:	add    esp,0x4
650117ef:	cmp    DWORD PTR [ebp-0x14],edi
650117f2:	jb     0x65011800
650117f4:	mov    edx,DWORD PTR [ebp-0x28]
650117f7:	push   edx
650117f8:	call   0x65011f62
650117fd:	add    esp,0x4
65011800:	mov    eax,DWORD PTR [ebp-0x30]
65011803:	add    eax,0xfffffff0
65011806:	mov    DWORD PTR [ebp-0x14],0xf
6501180d:	mov    DWORD PTR [ebp-0x18],ebx
65011810:	mov    BYTE PTR [ebp-0x28],0x0
65011814:	mov    DWORD PTR [ebp-0x4],0xffffffff
6501181b:	lea    ecx,[eax+0xc]
6501181e:	or     edx,0xffffffff
65011821:	lock xadd DWORD PTR [ecx],edx
65011825:	dec    edx
65011826:	test   edx,edx
65011828:	jg     0x65011834
6501182a:	mov    ecx,DWORD PTR [eax]
6501182c:	mov    edx,DWORD PTR [ecx]
6501182e:	push   eax
6501182f:	mov    eax,DWORD PTR [edx+0x4]
65011832:	call   eax
65011834:	xor    esi,esi
65011836:	lea    ecx,[ebp-0x40]
65011839:	push   ebx
6501183a:	push   ecx
6501183b:	mov    DWORD PTR [ebp-0x40],ebx
6501183e:	call   0x6500e4d0
65011843:	call   eax
65011845:	test   eax,eax
65011847:	je     0x6501185b
65011849:	add    esi,0x3e8
6501184f:	cmp    esi,0x12e1fc0
65011855:	ja     0x65011671
6501185b:	push   0x3e8
65011860:	call   DWORD PTR ds:0x6502404c
65011866:	jmp    0x65011836
65011868:	int3   
65011869:	int3   
6501186a:	int3   
6501186b:	int3   
6501186c:	int3   
6501186d:	int3   
6501186e:	int3   
6501186f:	int3   
65011870:	sub    esp,0x20c
65011876:	mov    eax,ds:0x6502c09c
6501187b:	xor    eax,esp
6501187d:	mov    DWORD PTR [esp+0x208],eax
65011884:	push   0x208
65011889:	lea    eax,[esp+0x4]
6501188d:	push   eax
6501188e:	push   0x0
65011890:	call   DWORD PTR ds:0x65024070
65011896:	test   eax,eax
65011898:	je     0x650118e7
6501189a:	lea    ecx,[esp]
6501189d:	push   0x104
650118a2:	push   ecx
650118a3:	call   0x65012e27
650118a8:	lea    edx,[esp+0x8]
650118ac:	push   0x650249a0
650118b1:	push   edx
650118b2:	call   0x65012901
650118b7:	add    esp,0x10
650118ba:	test   eax,eax
650118bc:	je     0x650118e7
650118be:	call   0x65010870
650118c3:	test   al,al
650118c5:	je     0x650118e7
650118c7:	push   0x0
650118c9:	push   0x0
650118cb:	push   0x0
650118cd:	push   0x65011630
650118d2:	push   0x0
650118d4:	push   0x0
650118d6:	call   DWORD PTR ds:0x6502406c
650118dc:	test   eax,eax
650118de:	je     0x650118e7
650118e0:	push   eax
650118e1:	call   DWORD PTR ds:0x65024040
650118e7:	mov    ecx,DWORD PTR [esp+0x208]
650118ee:	xor    ecx,esp
650118f0:	xor    eax,eax
650118f2:	call   0x650127bc
650118f7:	add    esp,0x20c
650118fd:	ret    0x4
65011900:	push   0x0
65011902:	push   0x0
65011904:	push   0x0
65011906:	push   0x65011870
6501190b:	push   0x0
6501190d:	push   0x0
6501190f:	call   DWORD PTR ds:0x6502406c
65011915:	ret    
65011916:	push   ebp
65011917:	mov    ebp,esp
65011919:	sub    esp,0xc
6501191c:	mov    eax,ds:0x6502c09c
65011921:	xor    eax,ebp
65011923:	mov    DWORD PTR [ebp-0x4],eax
65011926:	push   esi
65011927:	xor    esi,esi
65011929:	call   DWORD PTR ds:0x650240e4
6501192f:	push   0x7
65011931:	lea    ecx,[ebp-0xc]
65011934:	push   ecx
65011935:	push   0x1004
6501193a:	push   eax
6501193b:	call   DWORD PTR ds:0x650240e0
65011941:	test   eax,eax
65011943:	je     0x65011964
65011945:	mov    cl,BYTE PTR [ebp-0xc]
65011948:	test   cl,cl
6501194a:	lea    eax,[ebp-0xc]
6501194d:	je     0x65011964
6501194f:	imul   esi,esi,0xa
65011952:	movsx  ecx,cl
65011955:	inc    eax
65011956:	lea    esi,[esi+ecx*1-0x30]
6501195a:	mov    cl,BYTE PTR [eax]
6501195c:	test   cl,cl
6501195e:	jne    0x6501194f
65011960:	test   esi,esi
65011962:	jne    0x6501196c
65011964:	call   DWORD PTR ds:0x650240dc
6501196a:	mov    esi,eax
6501196c:	mov    ecx,DWORD PTR [ebp-0x4]
6501196f:	mov    eax,esi
65011971:	xor    ecx,ebp
65011973:	pop    esi
65011974:	call   0x650127bc
65011979:	leave  
6501197a:	ret    
6501197b:	push   0x3
6501197d:	pop    eax
6501197e:	ret    
6501197f:	push   ebp
65011980:	mov    ebp,esp
65011982:	sub    esp,0x98
65011988:	mov    eax,ds:0x6502c09c
6501198d:	xor    eax,ebp
6501198f:	mov    DWORD PTR [ebp-0x4],eax
65011992:	lea    eax,[ebp-0x98]
65011998:	push   eax
65011999:	mov    DWORD PTR [ebp-0x98],0x94
650119a3:	call   DWORD PTR ds:0x650240e8
650119a9:	cmp    DWORD PTR [ebp-0x88],0x2
650119b0:	jne    0x650119c0
650119b2:	cmp    DWORD PTR [ebp-0x94],0x5
650119b9:	mov    eax,0x6501197b
650119be:	jae    0x650119c5
650119c0:	mov    eax,0x65011916
650119c5:	push   eax
650119c6:	push   0x6502c06c
650119cb:	call   DWORD PTR ds:0x650240d8
650119d1:	call   DWORD PTR ds:0x6502c06c
650119d7:	mov    ecx,DWORD PTR [ebp-0x4]
650119da:	xor    ecx,ebp
650119dc:	call   0x650127bc
650119e1:	leave  
650119e2:	ret    
650119e3:	push   esi
650119e4:	mov    esi,ecx
650119e6:	mov    eax,DWORD PTR [esi]
650119e8:	test   eax,eax
650119ea:	je     0x650119f6
650119ec:	push   eax
650119ed:	call   0x650135d6
650119f2:	and    DWORD PTR [esi],0x0
650119f5:	pop    ecx
650119f6:	and    DWORD PTR [esi+0x4],0x0
650119fa:	and    DWORD PTR [esi+0x8],0x0
650119fe:	pop    esi
650119ff:	ret    
65011a00:	push   esi
65011a01:	push   0x18
65011a03:	mov    esi,ecx
65011a05:	push   0x0
65011a07:	push   esi
65011a08:	call   0x65012e40
65011a0d:	add    esp,0xc
65011a10:	mov    eax,esi
65011a12:	pop    esi
65011a13:	ret    
65011a14:	push   0xc
65011a16:	push   0x650297e0
65011a1b:	call   0x65013d00
65011a20:	and    DWORD PTR [ebp-0x4],0x0
65011a24:	push   ecx
65011a25:	call   DWORD PTR ds:0x6502401c
65011a2b:	and    DWORD PTR [ebp-0x1c],0x0
65011a2f:	jmp    0x65011a4f
65011a31:	mov    eax,DWORD PTR [ebp-0x14]
65011a34:	mov    eax,DWORD PTR [eax]
65011a36:	mov    eax,DWORD PTR [eax]
65011a38:	xor    ecx,ecx
65011a3a:	cmp    eax,0xc0000017
65011a3f:	sete   cl
65011a42:	mov    eax,ecx
65011a44:	ret    
65011a45:	mov    esp,DWORD PTR [ebp-0x18]
65011a48:	mov    DWORD PTR [ebp-0x1c],0x8007000e
65011a4f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65011a56:	mov    eax,DWORD PTR [ebp-0x1c]
65011a59:	call   0x65013d45
65011a5e:	ret    
65011a5f:	mov    eax,DWORD PTR [esp+0x4]
65011a63:	test   eax,eax
65011a65:	jne    0x65011a6e
65011a67:	mov    eax,0x80070057
65011a6c:	jmp    0x65011a7f
65011a6e:	cmp    DWORD PTR [eax],0x2c
65011a71:	jne    0x65011a67
65011a73:	and    DWORD PTR [eax+0x1c],0x0
65011a77:	lea    ecx,[eax+0x4]
65011a7a:	call   0x65011a14
65011a7f:	ret    0x4
65011a82:	mov    eax,DWORD PTR [esp+0x4]
65011a86:	test   eax,eax
65011a88:	jl     0x65011a97
65011a8a:	cmp    eax,DWORD PTR [ecx+0x4]
65011a8d:	jge    0x65011a97
65011a8f:	mov    ecx,DWORD PTR [ecx]
65011a91:	lea    eax,[ecx+eax*2]
65011a94:	ret    0x4
65011a97:	push   0x0
65011a99:	push   0x0
65011a9b:	push   0x1
65011a9d:	push   0xc000008c
65011aa2:	call   DWORD PTR ds:0x650240ec
65011aa8:	int3   
65011aa9:	mov    eax,DWORD PTR [esp+0x4]
65011aad:	test   eax,eax
65011aaf:	jl     0x65011abe
65011ab1:	cmp    eax,DWORD PTR [ecx+0x4]
65011ab4:	jge    0x65011abe
65011ab6:	mov    ecx,DWORD PTR [ecx]
65011ab8:	lea    eax,[ecx+eax*4]
65011abb:	ret    0x4
65011abe:	push   0x0
65011ac0:	push   0x0
65011ac2:	push   0x1
65011ac4:	push   0xc000008c
65011ac9:	call   DWORD PTR ds:0x650240ec
65011acf:	int3   
65011ad0:	push   esi
65011ad1:	mov    esi,ecx
65011ad3:	lea    ecx,[esi+0x4]
65011ad6:	call   0x65011a00
65011adb:	xor    eax,eax
65011add:	mov    DWORD PTR [esi+0x20],eax
65011ae0:	mov    DWORD PTR [esi+0x24],eax
65011ae3:	mov    DWORD PTR [esi+0x28],eax
65011ae6:	mov    eax,esi
65011ae8:	pop    esi
65011ae9:	ret    
65011aea:	push   esi
65011aeb:	mov    esi,DWORD PTR [esp+0x8]
65011aef:	test   esi,esi
65011af1:	jne    0x65011afa
65011af3:	mov    eax,0x80070057
65011af8:	jmp    0x65011b46
65011afa:	mov    eax,DWORD PTR [esi]
65011afc:	test   eax,eax
65011afe:	je     0x65011b44
65011b00:	cmp    eax,0x2c
65011b03:	jne    0x65011af3
65011b05:	push   edi
65011b06:	xor    edi,edi
65011b08:	cmp    DWORD PTR [esi+0x24],edi
65011b0b:	jle    0x65011b2e
65011b0d:	push   ebx
65011b0e:	lea    ebx,[esi+0x20]
65011b11:	push   edi
65011b12:	mov    ecx,ebx
65011b14:	call   0x65011a82
65011b19:	movzx  eax,WORD PTR [eax]
65011b1c:	push   DWORD PTR [esp+0x14]
65011b20:	push   eax
65011b21:	call   DWORD PTR ds:0x650241b8
65011b27:	inc    edi
65011b28:	cmp    edi,DWORD PTR [esi+0x24]
65011b2b:	jl     0x65011b11
65011b2d:	pop    ebx
65011b2e:	lea    ecx,[esi+0x20]
65011b31:	call   0x650119e3
65011b36:	lea    eax,[esi+0x4]
65011b39:	push   eax
65011b3a:	call   DWORD PTR ds:0x650240a4
65011b40:	and    DWORD PTR [esi],0x0
65011b43:	pop    edi
65011b44:	xor    eax,eax
65011b46:	pop    esi
65011b47:	ret    0x8
65011b4a:	push   esi
65011b4b:	mov    esi,ecx
65011b4d:	cmp    BYTE PTR [esi+0x4],0x0
65011b51:	je     0x65011b5f
65011b53:	push   DWORD PTR [esi]
65011b55:	call   DWORD PTR ds:0x650240a0
65011b5b:	mov    BYTE PTR [esi+0x4],0x0
65011b5f:	pop    esi
65011b60:	ret    
65011b61:	push   esi
65011b62:	mov    esi,ecx
65011b64:	lea    ecx,[esi+0x18]
65011b67:	call   0x65011a00
65011b6c:	xor    eax,eax
65011b6e:	mov    DWORD PTR [esi+0x30],eax
65011b71:	mov    DWORD PTR [esi+0x34],eax
65011b74:	mov    DWORD PTR [esi+0x38],eax
65011b77:	mov    eax,esi
65011b79:	pop    esi
65011b7a:	ret    
65011b7b:	push   esi
65011b7c:	mov    esi,ecx
65011b7e:	lea    eax,[esi+0x18]
65011b81:	push   eax
65011b82:	call   DWORD PTR ds:0x650240a4
65011b88:	lea    ecx,[esi+0x30]
65011b8b:	pop    esi
65011b8c:	jmp    0x650119e3
65011b91:	push   ebp
65011b92:	mov    ebp,esp
65011b94:	push   ecx
65011b95:	push   ecx
65011b96:	push   esi
65011b97:	mov    esi,ecx
65011b99:	lea    eax,[esi+0x18]
65011b9c:	push   eax
65011b9d:	mov    DWORD PTR [ebp-0x8],eax
65011ba0:	call   DWORD PTR ds:0x6502409c
65011ba6:	mov    eax,DWORD PTR [esi+0x34]
65011ba9:	mov    ecx,DWORD PTR [ebp+0x8]
65011bac:	cmp    ecx,eax
65011bae:	mov    BYTE PTR [ebp-0x4],0x1
65011bb2:	jg     0x65011bd8
65011bb4:	test   ecx,ecx
65011bb6:	jl     0x65011bd8
65011bb8:	cmp    ecx,eax
65011bba:	jne    0x65011bcb
65011bbc:	mov    esi,DWORD PTR [esi+0x8]
65011bbf:	lea    ecx,[ebp-0x8]
65011bc2:	call   0x65011b4a
65011bc7:	mov    eax,esi
65011bc9:	jmp    0x65011be2
65011bcb:	push   ecx
65011bcc:	lea    ecx,[esi+0x30]
65011bcf:	call   0x65011aa9
65011bd4:	mov    esi,DWORD PTR [eax]
65011bd6:	jmp    0x65011bbf
65011bd8:	lea    ecx,[ebp-0x8]
65011bdb:	call   0x65011b4a
65011be0:	xor    eax,eax
65011be2:	pop    esi
65011be3:	leave  
65011be4:	ret    0x4
65011be7:	push   esi
65011be8:	mov    esi,ecx
65011bea:	call   0x65011ad0
65011bef:	push   esi
65011bf0:	mov    DWORD PTR [esi],0x2c
65011bf6:	call   0x65011a5f
65011bfb:	test   eax,eax
65011bfd:	jge    0x65011c09
65011bff:	mov    BYTE PTR ds:0x65030344,0x1
65011c06:	and    DWORD PTR [esi],0x0
65011c09:	mov    eax,esi
65011c0b:	pop    esi
65011c0c:	ret    
65011c0d:	push   ebp
65011c0e:	lea    ebp,[esp-0x78]
65011c12:	sub    esp,0x98
65011c18:	mov    eax,ds:0x6502c09c
65011c1d:	xor    eax,ebp
65011c1f:	mov    DWORD PTR [ebp+0x74],eax
65011c22:	push   esi
65011c23:	mov    esi,ecx
65011c25:	call   0x65011b61
65011c2a:	mov    eax,0x65000000
65011c2f:	push   0x94
65011c34:	mov    DWORD PTR [esi+0x8],eax
65011c37:	mov    DWORD PTR [esi+0x4],eax
65011c3a:	lea    eax,[ebp-0x20]
65011c3d:	push   0x0
65011c3f:	push   eax
65011c40:	mov    DWORD PTR [esi],0x3c
65011c46:	mov    BYTE PTR [esi+0xc],0x0
65011c4a:	call   0x65012e40
65011c4f:	add    esp,0xc
65011c52:	lea    eax,[ebp-0x20]
65011c55:	push   eax
65011c56:	mov    DWORD PTR [ebp-0x20],0x94
65011c5d:	call   DWORD PTR ds:0x650240e8
65011c63:	cmp    DWORD PTR [ebp-0x10],0x2
65011c67:	jne    0x65011c71
65011c69:	cmp    DWORD PTR [ebp-0x1c],0x5
65011c6d:	jb     0x65011c89
65011c6f:	jmp    0x65011c85
65011c71:	cmp    DWORD PTR [ebp-0x10],0x1
65011c75:	jne    0x65011c89
65011c77:	cmp    DWORD PTR [ebp-0x1c],0x4
65011c7b:	ja     0x65011c85
65011c7d:	jne    0x65011c89
65011c7f:	cmp    DWORD PTR [ebp-0x18],0x0
65011c83:	jbe    0x65011c89
65011c85:	mov    BYTE PTR [esi+0xc],0x1
65011c89:	lea    ecx,[esi+0x18]
65011c8c:	mov    DWORD PTR [esi+0x10],0x800
65011c93:	mov    DWORD PTR [esi+0x14],0x65024bb8
65011c9a:	call   0x65011a14
65011c9f:	test   eax,eax
65011ca1:	jge    0x65011caa
65011ca3:	mov    BYTE PTR ds:0x65030344,0x1
65011caa:	mov    ecx,DWORD PTR [ebp+0x74]
65011cad:	mov    eax,esi
65011caf:	xor    ecx,ebp
65011cb1:	pop    esi
65011cb2:	call   0x650127bc
65011cb7:	add    ebp,0x78
65011cba:	leave  
65011cbb:	ret    
65011cbc:	push   esi
65011cbd:	push   DWORD PTR ds:0x6502d4f0
65011cc3:	mov    esi,ecx
65011cc5:	push   esi
65011cc6:	call   0x65011aea
65011ccb:	lea    ecx,[esi+0x20]
65011cce:	pop    esi
65011ccf:	jmp    0x650119e3
65011cd4:	cmp    BYTE PTR [ecx+0x8],0x0
65011cd8:	mov    DWORD PTR [ecx],0x65024bc8
65011cde:	je     0x65011cee
65011ce0:	mov    ecx,DWORD PTR [ecx+0x4]
65011ce3:	test   ecx,ecx
65011ce5:	je     0x65011cee
65011ce7:	push   ecx
65011ce8:	call   DWORD PTR ds:0x650240f0
65011cee:	ret    
65011cef:	push   DWORD PTR [esp+0x4]
65011cf3:	push   0x0
65011cf5:	push   DWORD PTR [ecx+0x4]
65011cf8:	call   DWORD PTR ds:0x650240f4
65011cfe:	ret    0x4
65011d01:	cmp    DWORD PTR [esp+0x4],0x0
65011d06:	je     0x65011d17
65011d08:	push   DWORD PTR [esp+0x4]
65011d0c:	push   0x0
65011d0e:	push   DWORD PTR [ecx+0x4]
65011d11:	call   DWORD PTR ds:0x650240f8
65011d17:	ret    0x4
65011d1a:	push   ebp
65011d1b:	mov    ebp,esp
65011d1d:	xor    eax,eax
65011d1f:	cmp    DWORD PTR [ebp+0x8],eax
65011d22:	jne    0x65011d2d
65011d24:	push   DWORD PTR [ebp+0xc]
65011d27:	mov    eax,DWORD PTR [ecx]
65011d29:	call   DWORD PTR [eax]
65011d2b:	jmp    0x65011d4e
65011d2d:	cmp    DWORD PTR [ebp+0xc],eax
65011d30:	jne    0x65011d3e
65011d32:	push   DWORD PTR [ebp+0x8]
65011d35:	mov    eax,DWORD PTR [ecx]
65011d37:	call   DWORD PTR [eax+0x4]
65011d3a:	xor    eax,eax
65011d3c:	jmp    0x65011d4e
65011d3e:	push   DWORD PTR [ebp+0xc]
65011d41:	push   DWORD PTR [ebp+0x8]
65011d44:	push   eax
65011d45:	push   DWORD PTR [ecx+0x4]
65011d48:	call   DWORD PTR ds:0x650240fc
65011d4e:	pop    ebp
65011d4f:	ret    0x8
65011d52:	push   DWORD PTR [esp+0x4]
65011d56:	push   0x0
65011d58:	push   DWORD PTR [ecx+0x4]
65011d5b:	call   DWORD PTR ds:0x65024100
65011d61:	ret    0x4
65011d64:	push   esi
65011d65:	mov    esi,ecx
65011d67:	call   0x65011cd4
65011d6c:	test   BYTE PTR [esp+0x8],0x1
65011d71:	je     0x65011d7a
65011d73:	push   esi
65011d74:	call   0x65011f62
65011d79:	pop    ecx
65011d7a:	mov    eax,esi
65011d7c:	pop    esi
65011d7d:	ret    0x4
65011d80:	mov    eax,ecx
65011d82:	mov    ecx,DWORD PTR [esp+0x4]
65011d86:	mov    DWORD PTR [eax+0x4],ecx
65011d89:	mov    DWORD PTR [eax],0x65024bdc
65011d8f:	xor    ecx,ecx
65011d91:	mov    DWORD PTR [eax+0x14],0x2
65011d98:	mov    DWORD PTR [eax+0xc],ecx
65011d9b:	mov    DWORD PTR [eax+0x10],ecx
65011d9e:	mov    WORD PTR [eax+0x18],cx
65011da2:	mov    WORD PTR [eax+0x1a],cx
65011da6:	mov    DWORD PTR [eax+0x8],eax
65011da9:	ret    0x4
65011dac:	mov    eax,DWORD PTR [esp+0x8]
65011db0:	mul    DWORD PTR [esp+0xc]
65011db4:	test   edx,edx
65011db6:	ja     0x65011dbd
65011db8:	cmp    eax,0xffffffff
65011dbb:	jbe    0x65011dc3
65011dbd:	mov    eax,0x80070057
65011dc2:	ret    
65011dc3:	mov    ecx,DWORD PTR [esp+0x4]
65011dc7:	mov    DWORD PTR [ecx],eax
65011dc9:	xor    eax,eax
65011dcb:	ret    
65011dcc:	mov    ecx,DWORD PTR [ecx+0x4]
65011dcf:	mov    eax,DWORD PTR [ecx]
65011dd1:	jmp    DWORD PTR [eax+0x4]
65011dd4:	xor    edx,edx
65011dd6:	lea    eax,[ecx+0x14]
65011dd9:	inc    edx
65011dda:	lock xadd DWORD PTR [eax],edx
65011dde:	lea    eax,[ecx+0x8]
65011de1:	ret    
65011de2:	mov    eax,ecx
65011de4:	ret    
65011de5:	test   BYTE PTR [esp+0x4],0x1
65011dea:	push   esi
65011deb:	mov    esi,ecx
65011ded:	mov    DWORD PTR [esi],0x65024bdc
65011df3:	je     0x65011dfc
65011df5:	push   esi
65011df6:	call   0x65011f62
65011dfb:	pop    ecx
65011dfc:	mov    eax,esi
65011dfe:	pop    esi
65011dff:	ret    0x4
65011e02:	mov    eax,DWORD PTR [esp+0x8]
65011e06:	mov    ecx,DWORD PTR [esp+0xc]
65011e0a:	or     edx,0xffffffff
65011e0d:	sub    edx,eax
65011e0f:	cmp    edx,ecx
65011e11:	jae    0x65011e19
65011e13:	mov    eax,0x80070057
65011e18:	ret    
65011e19:	add    eax,ecx
65011e1b:	mov    ecx,DWORD PTR [esp+0x4]
65011e1f:	mov    DWORD PTR [ecx],eax
65011e21:	xor    eax,eax
65011e23:	ret    
65011e24:	push   ebp
65011e25:	mov    ebp,esp
65011e27:	push   esi
65011e28:	mov    esi,DWORD PTR [ebp+0x8]
65011e2b:	push   edi
65011e2c:	push   DWORD PTR [ebp+0xc]
65011e2f:	add    esi,0x8
65011e32:	and    esi,0xfffffff8
65011e35:	lea    eax,[ebp+0x8]
65011e38:	push   esi
65011e39:	push   eax
65011e3a:	mov    edi,ecx
65011e3c:	call   0x65011dac
65011e41:	add    esp,0xc
65011e44:	test   eax,eax
65011e46:	jl     0x65011e7e
65011e48:	push   DWORD PTR [ebp+0x8]
65011e4b:	lea    eax,[ebp+0x8]
65011e4e:	push   0x10
65011e50:	push   eax
65011e51:	call   0x65011e02
65011e56:	add    esp,0xc
65011e59:	test   eax,eax
65011e5b:	jl     0x65011e7e
65011e5d:	mov    ecx,DWORD PTR [edi+0x4]
65011e60:	push   DWORD PTR [ebp+0x8]
65011e63:	mov    eax,DWORD PTR [ecx]
65011e65:	call   DWORD PTR [eax]
65011e67:	test   eax,eax
65011e69:	je     0x65011e7e
65011e6b:	dec    esi
65011e6c:	and    DWORD PTR [eax+0x4],0x0
65011e70:	mov    DWORD PTR [eax],edi
65011e72:	mov    DWORD PTR [eax+0xc],0x1
65011e79:	mov    DWORD PTR [eax+0x8],esi
65011e7c:	jmp    0x65011e80
65011e7e:	xor    eax,eax
65011e80:	pop    edi
65011e81:	pop    esi
65011e82:	pop    ebp
65011e83:	ret    0x8
65011e86:	push   ebp
65011e87:	mov    ebp,esp
65011e89:	push   esi
65011e8a:	mov    esi,DWORD PTR [ebp+0xc]
65011e8d:	push   edi
65011e8e:	push   DWORD PTR [ebp+0x10]
65011e91:	add    esi,0x8
65011e94:	and    esi,0xfffffff8
65011e97:	lea    eax,[ebp+0xc]
65011e9a:	push   esi
65011e9b:	push   eax
65011e9c:	mov    edi,ecx
65011e9e:	call   0x65011dac
65011ea3:	add    esp,0xc
65011ea6:	test   eax,eax
65011ea8:	jl     0x65011ed7
65011eaa:	push   DWORD PTR [ebp+0xc]
65011ead:	lea    eax,[ebp+0xc]
65011eb0:	push   0x10
65011eb2:	push   eax
65011eb3:	call   0x65011e02
65011eb8:	add    esp,0xc
65011ebb:	test   eax,eax
65011ebd:	jl     0x65011ed7
65011ebf:	push   DWORD PTR [ebp+0xc]
65011ec2:	mov    ecx,DWORD PTR [edi+0x4]
65011ec5:	push   DWORD PTR [ebp+0x8]
65011ec8:	mov    eax,DWORD PTR [ecx]
65011eca:	call   DWORD PTR [eax+0x8]
65011ecd:	test   eax,eax
65011ecf:	je     0x65011ed7
65011ed1:	dec    esi
65011ed2:	mov    DWORD PTR [eax+0x8],esi
65011ed5:	jmp    0x65011ed9
65011ed7:	xor    eax,eax
65011ed9:	pop    edi
65011eda:	pop    esi
65011edb:	pop    ebp
65011edc:	ret    0xc
65011edf:	push   0x44
65011ee1:	mov    eax,0x65022085
65011ee6:	call   0x65013f8b
65011eeb:	push   0x65024c24
65011ef0:	lea    ecx,[ebp-0x28]
65011ef3:	call   0x65002730
65011ef8:	and    DWORD PTR [ebp-0x4],0x0
65011efc:	lea    eax,[ebp-0x28]
65011eff:	push   eax
65011f00:	lea    ecx,[ebp-0x50]
65011f03:	call   0x65002d20
65011f08:	push   0x65029f18
65011f0d:	lea    eax,[ebp-0x50]
65011f10:	push   eax
65011f11:	mov    DWORD PTR [ebp-0x50],0x65024c10
65011f18:	call   0x65012366
65011f1d:	int3   
65011f1e:	push   0x44
65011f20:	mov    eax,0x650220a8
65011f25:	call   0x65013f8b
65011f2a:	push   0x65024c34
65011f2f:	lea    ecx,[ebp-0x28]
65011f32:	call   0x65002730
65011f37:	and    DWORD PTR [ebp-0x4],0x0
65011f3b:	lea    eax,[ebp-0x28]
65011f3e:	push   eax
65011f3f:	lea    ecx,[ebp-0x50]
65011f42:	call   0x65002d20
65011f47:	push   0x65029edc
65011f4c:	lea    eax,[ebp-0x50]
65011f4f:	push   eax
65011f50:	mov    DWORD PTR [ebp-0x50],0x65024c1c
65011f57:	call   0x65012366
65011f5c:	int3   
65011f5d:	jmp    0x650122fc
65011f62:	jmp    0x650135d6
65011f67:	mov    eax,ecx
65011f69:	and    DWORD PTR [eax+0x4],0x0
65011f6d:	and    DWORD PTR [eax+0x8],0x0
65011f71:	mov    DWORD PTR [eax],0x65024c50
65011f77:	ret    
65011f78:	push   ebx
65011f79:	mov    ebx,DWORD PTR [esp+0x8]
65011f7d:	push   esi
65011f7e:	push   edi
65011f7f:	mov    edi,ecx
65011f81:	mov    DWORD PTR [edi],0x65024c50
65011f87:	mov    eax,DWORD PTR [ebx]
65011f89:	test   eax,eax
65011f8b:	je     0x65011fb3
65011f8d:	push   eax
65011f8e:	call   0x65013f00
65011f93:	mov    esi,eax
65011f95:	inc    esi
65011f96:	push   esi
65011f97:	call   0x650136b3
65011f9c:	test   eax,eax
65011f9e:	pop    ecx
65011f9f:	pop    ecx
65011fa0:	mov    DWORD PTR [edi+0x4],eax
65011fa3:	je     0x65011fb7
65011fa5:	push   DWORD PTR [ebx]
65011fa7:	push   esi
65011fa8:	push   eax
65011fa9:	call   0x65013ff4
65011fae:	add    esp,0xc
65011fb1:	jmp    0x65011fb7
65011fb3:	and    DWORD PTR [edi+0x4],0x0
65011fb7:	mov    DWORD PTR [edi+0x8],0x1
65011fbe:	mov    eax,edi
65011fc0:	pop    edi
65011fc1:	pop    esi
65011fc2:	pop    ebx
65011fc3:	ret    0x4
65011fc6:	mov    eax,ecx
65011fc8:	mov    ecx,DWORD PTR [esp+0x4]
65011fcc:	mov    DWORD PTR [eax],0x65024c50
65011fd2:	mov    ecx,DWORD PTR [ecx]
65011fd4:	and    DWORD PTR [eax+0x8],0x0
65011fd8:	mov    DWORD PTR [eax+0x4],ecx
65011fdb:	ret    0x8
65011fde:	push   ebx
65011fdf:	mov    ebx,DWORD PTR [esp+0x8]
65011fe3:	push   esi
65011fe4:	mov    esi,ecx
65011fe6:	mov    DWORD PTR [esi],0x65024c50
65011fec:	mov    eax,DWORD PTR [ebx+0x8]
65011fef:	mov    DWORD PTR [esi+0x8],eax
65011ff2:	test   eax,eax
65011ff4:	mov    eax,DWORD PTR [ebx+0x4]
65011ff7:	push   edi
65011ff8:	je     0x6501202b
65011ffa:	test   eax,eax
65011ffc:	je     0x65012025
65011ffe:	push   eax
65011fff:	call   0x65013f00
65012004:	mov    edi,eax
65012006:	inc    edi
65012007:	push   edi
65012008:	call   0x650136b3
6501200d:	test   eax,eax
6501200f:	pop    ecx
65012010:	pop    ecx
65012011:	mov    DWORD PTR [esi+0x4],eax
65012014:	je     0x6501202e
65012016:	push   DWORD PTR [ebx+0x4]
65012019:	push   edi
6501201a:	push   eax
6501201b:	call   0x65013ff4
65012020:	add    esp,0xc
65012023:	jmp    0x6501202e
65012025:	and    DWORD PTR [esi+0x4],0x0
65012029:	jmp    0x6501202e
6501202b:	mov    DWORD PTR [esi+0x4],eax
6501202e:	pop    edi
6501202f:	mov    eax,esi
65012031:	pop    esi
65012032:	pop    ebx
65012033:	ret    0x4
65012036:	cmp    DWORD PTR [ecx+0x8],0x0
6501203a:	mov    DWORD PTR [ecx],0x65024c50
65012040:	je     0x6501204b
65012042:	push   DWORD PTR [ecx+0x4]
65012045:	call   0x650135d6
6501204a:	pop    ecx
6501204b:	ret    
6501204c:	mov    eax,DWORD PTR [ecx+0x4]
6501204f:	test   eax,eax
65012051:	jne    0x65012058
65012053:	mov    eax,0x65024c58
65012058:	ret    
65012059:	push   esi
6501205a:	lea    eax,[esp+0x8]
6501205e:	push   eax
6501205f:	mov    esi,ecx
65012061:	call   0x65011f78
65012066:	mov    DWORD PTR [esi],0x65024c70
6501206c:	mov    eax,esi
6501206e:	pop    esi
6501206f:	ret    0x4
65012072:	push   esi
65012073:	push   DWORD PTR [esp+0x8]
65012077:	mov    esi,ecx
65012079:	call   0x65011fde
6501207e:	mov    DWORD PTR [esi],0x65024c70
65012084:	mov    eax,esi
65012086:	pop    esi
65012087:	ret    0x4
6501208a:	mov    DWORD PTR [ecx],0x65024c70
65012090:	jmp    0x65012036
65012095:	push   esi
65012096:	mov    esi,ecx
65012098:	call   0x65012036
6501209d:	test   BYTE PTR [esp+0x8],0x1
650120a2:	je     0x650120ab
650120a4:	push   esi
650120a5:	call   0x65011f62
650120aa:	pop    ecx
650120ab:	mov    eax,esi
650120ad:	pop    esi
650120ae:	ret    0x4
650120b1:	push   esi
650120b2:	mov    esi,ecx
650120b4:	mov    DWORD PTR [esi],0x65024c70
650120ba:	call   0x65012036
650120bf:	test   BYTE PTR [esp+0x8],0x1
650120c4:	je     0x650120cd
650120c6:	push   esi
650120c7:	call   0x65011f62
650120cc:	pop    ecx
650120cd:	mov    eax,esi
650120cf:	pop    esi
650120d0:	ret    0x4
650120d3:	push   ebp
650120d4:	mov    ebp,esp
650120d6:	push   esi
650120d7:	mov    esi,DWORD PTR [ebp+0x14]
650120da:	push   edi
650120db:	xor    edi,edi
650120dd:	cmp    esi,edi
650120df:	jne    0x650120e5
650120e1:	xor    eax,eax
650120e3:	jmp    0x6501214a
650120e5:	cmp    DWORD PTR [ebp+0x8],edi
650120e8:	jne    0x65012105
650120ea:	call   0x65014400
650120ef:	push   0x16
650120f1:	pop    esi
650120f2:	mov    DWORD PTR [eax],esi
650120f4:	push   edi
650120f5:	push   edi
650120f6:	push   edi
650120f7:	push   edi
650120f8:	push   edi
650120f9:	call   0x650122af
650120fe:	add    esp,0x14
65012101:	mov    eax,esi
65012103:	jmp    0x6501214a
65012105:	cmp    DWORD PTR [ebp+0x10],edi
65012108:	je     0x65012120
6501210a:	cmp    DWORD PTR [ebp+0xc],esi
6501210d:	jb     0x65012120
6501210f:	push   esi
65012110:	push   DWORD PTR [ebp+0x10]
65012113:	push   DWORD PTR [ebp+0x8]
65012116:	call   0x65014060
6501211b:	add    esp,0xc
6501211e:	jmp    0x650120e1
65012120:	push   DWORD PTR [ebp+0xc]
65012123:	push   edi
65012124:	push   DWORD PTR [ebp+0x8]
65012127:	call   0x65012e40
6501212c:	add    esp,0xc
6501212f:	cmp    DWORD PTR [ebp+0x10],edi
65012132:	je     0x650120ea
65012134:	cmp    DWORD PTR [ebp+0xc],esi
65012137:	jae    0x65012147
65012139:	call   0x65014400
6501213e:	push   0x22
65012140:	pop    ecx
65012141:	mov    DWORD PTR [eax],ecx
65012143:	mov    esi,ecx
65012145:	jmp    0x650120f4
65012147:	push   0x16
65012149:	pop    eax
6501214a:	pop    edi
6501214b:	pop    esi
6501214c:	pop    ebp
6501214d:	ret    
6501214e:	push   ebp
6501214f:	mov    ebp,esp
65012151:	mov    eax,DWORD PTR [ebp+0x14]
65012154:	push   esi
65012155:	push   edi
65012156:	xor    edi,edi
65012158:	cmp    eax,edi
6501215a:	je     0x650121a3
6501215c:	cmp    DWORD PTR [ebp+0x8],edi
6501215f:	jne    0x6501217c
65012161:	call   0x65014400
65012166:	push   0x16
65012168:	pop    esi
65012169:	mov    DWORD PTR [eax],esi
6501216b:	push   edi
6501216c:	push   edi
6501216d:	push   edi
6501216e:	push   edi
6501216f:	push   edi
65012170:	call   0x650122af
65012175:	add    esp,0x14
65012178:	mov    eax,esi
6501217a:	jmp    0x650121a5
6501217c:	cmp    DWORD PTR [ebp+0x10],edi
6501217f:	je     0x65012161
65012181:	cmp    DWORD PTR [ebp+0xc],eax
65012184:	jae    0x65012194
65012186:	call   0x65014400
6501218b:	push   0x22
6501218d:	pop    ecx
6501218e:	mov    DWORD PTR [eax],ecx
65012190:	mov    esi,ecx
65012192:	jmp    0x6501216b
65012194:	push   eax
65012195:	push   DWORD PTR [ebp+0x10]
65012198:	push   DWORD PTR [ebp+0x8]
6501219b:	call   0x65013780
650121a0:	add    esp,0xc
650121a3:	xor    eax,eax
650121a5:	pop    edi
650121a6:	pop    esi
650121a7:	pop    ebp
650121a8:	ret    
650121a9:	mov    eax,DWORD PTR [esp+0x4]
650121ad:	mov    ds:0x6502d57c,eax
650121b2:	ret    
650121b3:	push   ebp
650121b4:	lea    ebp,[esp-0x2a8]
650121bb:	sub    esp,0x328
650121c1:	mov    eax,ds:0x6502c09c
650121c6:	xor    eax,ebp
650121c8:	mov    DWORD PTR [ebp+0x2a4],eax
650121ce:	push   esi
650121cf:	mov    DWORD PTR [ebp+0x88],eax
650121d5:	mov    DWORD PTR [ebp+0x84],ecx
650121db:	mov    DWORD PTR [ebp+0x80],edx
650121e1:	mov    DWORD PTR [ebp+0x7c],ebx
650121e4:	mov    DWORD PTR [ebp+0x78],esi
650121e7:	mov    DWORD PTR [ebp+0x74],edi
650121ea:	data16 mov WORD PTR [ebp+0xa0],ss
650121f1:	data16 mov WORD PTR [ebp+0x94],cs
650121f8:	data16 mov WORD PTR [ebp+0x70],ds
650121fc:	data16 mov WORD PTR [ebp+0x6c],es
65012200:	data16 mov WORD PTR [ebp+0x68],fs
65012204:	data16 mov WORD PTR [ebp+0x64],gs
65012208:	pushf  
65012209:	pop    DWORD PTR [ebp+0x98]
6501220f:	mov    esi,DWORD PTR [ebp+0x2ac]
65012215:	lea    eax,[ebp+0x2ac]
6501221b:	mov    DWORD PTR [ebp+0x9c],eax
65012221:	mov    DWORD PTR [ebp-0x28],0x10001
65012228:	mov    DWORD PTR [ebp+0x90],esi
6501222e:	mov    eax,DWORD PTR [eax-0x4]
65012231:	push   0x50
65012233:	mov    DWORD PTR [ebp+0x8c],eax
65012239:	lea    eax,[ebp-0x80]
6501223c:	push   0x0
6501223e:	push   eax
6501223f:	call   0x65012e40
65012244:	lea    eax,[ebp-0x80]
65012247:	mov    DWORD PTR [ebp-0x30],eax
6501224a:	lea    eax,[ebp-0x28]
6501224d:	add    esp,0xc
65012250:	mov    DWORD PTR [ebp-0x80],0xc000000d
65012257:	mov    DWORD PTR [ebp-0x74],esi
6501225a:	mov    DWORD PTR [ebp-0x2c],eax
6501225d:	call   DWORD PTR ds:0x65024114
65012263:	push   0x0
65012265:	mov    esi,eax
65012267:	call   DWORD PTR ds:0x65024110
6501226d:	lea    eax,[ebp-0x30]
65012270:	push   eax
65012271:	call   DWORD PTR ds:0x6502410c
65012277:	test   eax,eax
65012279:	jne    0x65012287
6501227b:	test   esi,esi
6501227d:	jne    0x65012287
6501227f:	push   0x2
65012281:	call   0x65014444
65012286:	pop    ecx
65012287:	push   0xc000000d
6501228c:	call   DWORD PTR ds:0x65024048
65012292:	push   eax
65012293:	call   DWORD PTR ds:0x65024108
65012299:	mov    ecx,DWORD PTR [ebp+0x2a4]
6501229f:	xor    ecx,ebp
650122a1:	pop    esi
650122a2:	call   0x650127bc
650122a7:	add    ebp,0x2a8
650122ad:	leave  
650122ae:	ret    
650122af:	push   ebp
650122b0:	mov    ebp,esp
650122b2:	push   DWORD PTR ds:0x6502d57c
650122b8:	call   0x6501452f
650122bd:	test   eax,eax
650122bf:	pop    ecx
650122c0:	je     0x650122c5
650122c2:	pop    ebp
650122c3:	jmp    eax
650122c5:	push   0x2
650122c7:	call   0x65014444
650122cc:	pop    ecx
650122cd:	pop    ebp
650122ce:	jmp    0x650121b3
650122d3:	xor    eax,eax
650122d5:	push   eax
650122d6:	push   eax
650122d7:	push   eax
650122d8:	push   eax
650122d9:	push   eax
650122da:	call   0x650122af
650122df:	add    esp,0x14
650122e2:	ret    
650122e3:	push   esi
650122e4:	push   0x1
650122e6:	push   0x6502c07c
650122eb:	mov    esi,ecx
650122ed:	call   0x65011fc6
650122f2:	mov    DWORD PTR [esi],0x65024bf8
650122f8:	mov    eax,esi
650122fa:	pop    esi
650122fb:	ret    
650122fc:	push   ebp
650122fd:	mov    ebp,esp
650122ff:	sub    esp,0xc
65012302:	jmp    0x65012311
65012304:	push   DWORD PTR [ebp+0x8]
65012307:	call   0x65014a7b
6501230c:	test   eax,eax
6501230e:	pop    ecx
6501230f:	je     0x65012320
65012311:	push   DWORD PTR [ebp+0x8]
65012314:	call   0x650136b3
65012319:	test   eax,eax
6501231b:	pop    ecx
6501231c:	je     0x65012304
6501231e:	leave  
6501231f:	ret    
65012320:	test   BYTE PTR ds:0x6502d58c,0x1
65012327:	mov    esi,0x6502d580
6501232c:	jne    0x65012347
6501232e:	or     DWORD PTR ds:0x6502d58c,0x1
65012335:	mov    ecx,esi
65012337:	call   0x650122e3
6501233c:	push   0x6502352a
65012341:	call   0x650128ef
65012346:	pop    ecx
65012347:	push   esi
65012348:	lea    ecx,[ebp-0xc]
6501234b:	call   0x65011fde
65012350:	push   0x65029e4c
65012355:	lea    eax,[ebp-0xc]
65012358:	push   eax
65012359:	mov    DWORD PTR [ebp-0xc],0x65024bf8
65012360:	call   0x65012366
65012365:	int3   
65012366:	push   ebp
65012367:	mov    ebp,esp
65012369:	sub    esp,0x20
6501236c:	mov    eax,DWORD PTR [ebp+0x8]
6501236f:	push   esi
65012370:	push   edi
65012371:	push   0x8
65012373:	pop    ecx
65012374:	mov    esi,0x65024c78
65012379:	lea    edi,[ebp-0x20]
6501237c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501237e:	mov    DWORD PTR [ebp-0x8],eax
65012381:	mov    eax,DWORD PTR [ebp+0xc]
65012384:	test   eax,eax
65012386:	pop    edi
65012387:	mov    DWORD PTR [ebp-0x4],eax
6501238a:	pop    esi
6501238b:	je     0x65012399
6501238d:	test   BYTE PTR [eax],0x8
65012390:	je     0x65012399
65012392:	mov    DWORD PTR [ebp-0xc],0x1994000
65012399:	lea    eax,[ebp-0xc]
6501239c:	push   eax
6501239d:	push   DWORD PTR [ebp-0x10]
650123a0:	push   DWORD PTR [ebp-0x1c]
650123a3:	push   DWORD PTR [ebp-0x20]
650123a6:	call   DWORD PTR ds:0x650240ec
650123ac:	leave  
650123ad:	ret    0x8
650123b0:	push   ecx
650123b1:	mov    DWORD PTR [ecx],0x65024c9c
650123b7:	call   0x65014a9d
650123bc:	pop    ecx
650123bd:	ret    
650123be:	push   esi
650123bf:	mov    esi,ecx
650123c1:	call   0x650123b0
650123c6:	test   BYTE PTR [esp+0x8],0x1
650123cb:	je     0x650123d4
650123cd:	push   esi
650123ce:	call   0x65011f62
650123d3:	pop    ecx
650123d4:	mov    eax,esi
650123d6:	pop    esi
650123d7:	ret    0x4
650123da:	mov    eax,DWORD PTR [esp+0x4]
650123de:	add    ecx,0x9
650123e1:	push   ecx
650123e2:	add    eax,0x9
650123e5:	push   eax
650123e6:	call   0x65014b10
650123eb:	neg    eax
650123ed:	pop    ecx
650123ee:	sbb    eax,eax
650123f0:	pop    ecx
650123f1:	inc    eax
650123f2:	ret    0x4
650123f5:	push   ebp
650123f6:	mov    ebp,esp
650123f8:	push   ecx
650123f9:	push   ebx
650123fa:	mov    eax,DWORD PTR [ebp+0xc]
650123fd:	add    eax,0xc
65012400:	mov    DWORD PTR [ebp-0x4],eax
65012403:	mov    ebx,DWORD PTR fs:0x0
6501240a:	mov    eax,DWORD PTR [ebx]
6501240c:	mov    fs:0x0,eax
65012412:	mov    eax,DWORD PTR [ebp+0x8]
65012415:	mov    ebx,DWORD PTR [ebp+0xc]
65012418:	mov    ebp,DWORD PTR [ebp-0x4]
6501241b:	mov    esp,DWORD PTR [ebx-0x4]
6501241e:	jmp    eax
65012420:	pop    ebx
65012421:	leave  
65012422:	ret    0x8
65012425:	pop    eax
65012426:	pop    ecx
65012427:	xchg   DWORD PTR [esp],eax
6501242a:	jmp    eax
6501242c:	push   ebp
6501242d:	mov    ebp,esp
6501242f:	push   ecx
65012430:	push   ecx
65012431:	push   ebx
65012432:	push   esi
65012433:	push   edi
65012434:	mov    esi,DWORD PTR fs:0x0
6501243b:	mov    DWORD PTR [ebp-0x4],esi
6501243e:	mov    DWORD PTR [ebp-0x8],0x65012455
65012445:	push   0x0
65012447:	push   DWORD PTR [ebp+0xc]
6501244a:	push   DWORD PTR [ebp-0x8]
6501244d:	push   DWORD PTR [ebp+0x8]
65012450:	call   0x6501e99c
65012455:	mov    eax,DWORD PTR [ebp+0xc]
65012458:	mov    eax,DWORD PTR [eax+0x4]
6501245b:	and    eax,0xfffffffd
6501245e:	mov    ecx,DWORD PTR [ebp+0xc]
65012461:	mov    DWORD PTR [ecx+0x4],eax
65012464:	mov    edi,DWORD PTR fs:0x0
6501246b:	mov    ebx,DWORD PTR [ebp-0x4]
6501246e:	mov    DWORD PTR [ebx],edi
65012470:	mov    DWORD PTR fs:0x0,ebx
65012477:	pop    edi
65012478:	pop    esi
65012479:	pop    ebx
6501247a:	leave  
6501247b:	ret    0x8
6501247e:	push   ebp
6501247f:	mov    ebp,esp
65012481:	sub    esp,0x8
65012484:	push   ebx
65012485:	push   esi
65012486:	push   edi
65012487:	cld    
65012488:	mov    DWORD PTR [ebp-0x4],eax
6501248b:	xor    eax,eax
6501248d:	push   eax
6501248e:	push   eax
6501248f:	push   eax
65012490:	push   DWORD PTR [ebp-0x4]
65012493:	push   DWORD PTR [ebp+0x14]
65012496:	push   DWORD PTR [ebp+0x10]
65012499:	push   DWORD PTR [ebp+0xc]
6501249c:	push   DWORD PTR [ebp+0x8]
6501249f:	call   0x6501573e
650124a4:	add    esp,0x20
650124a7:	mov    DWORD PTR [ebp-0x8],eax
650124aa:	pop    edi
650124ab:	pop    esi
650124ac:	pop    ebx
650124ad:	mov    eax,DWORD PTR [ebp-0x8]
650124b0:	mov    esp,ebp
650124b2:	pop    ebp
650124b3:	ret    
650124b4:	push   esi
650124b5:	cld    
650124b6:	mov    esi,DWORD PTR [esp+0xc]
650124ba:	mov    ecx,DWORD PTR [esi+0x8]
650124bd:	xor    ecx,esi
650124bf:	call   0x650127bc
650124c4:	push   0x0
650124c6:	push   esi
650124c7:	push   DWORD PTR [esi+0x14]
650124ca:	push   DWORD PTR [esi+0xc]
650124cd:	push   0x0
650124cf:	push   DWORD PTR [esp+0x24]
650124d3:	push   DWORD PTR [esi+0x10]
650124d6:	push   DWORD PTR [esp+0x24]
650124da:	call   0x6501573e
650124df:	add    esp,0x20
650124e2:	pop    esi
650124e3:	ret    
650124e4:	push   ebp
650124e5:	mov    ebp,esp
650124e7:	sub    esp,0x38
650124ea:	push   ebx
650124eb:	cmp    DWORD PTR [ebp+0x8],0x123
650124f2:	jne    0x65012506
650124f4:	mov    eax,0x6501258d
650124f9:	mov    ecx,DWORD PTR [ebp+0xc]
650124fc:	mov    DWORD PTR [ecx],eax
650124fe:	xor    eax,eax
65012500:	inc    eax
65012501:	jmp    0x650125b6
65012506:	and    DWORD PTR [ebp-0x28],0x0
6501250a:	mov    DWORD PTR [ebp-0x24],0x650125b9
65012511:	mov    eax,ds:0x6502c09c
65012516:	lea    ecx,[ebp-0x28]
65012519:	xor    eax,ecx
6501251b:	mov    DWORD PTR [ebp-0x20],eax
6501251e:	mov    eax,DWORD PTR [ebp+0x18]
65012521:	mov    DWORD PTR [ebp-0x1c],eax
65012524:	mov    eax,DWORD PTR [ebp+0xc]
65012527:	mov    DWORD PTR [ebp-0x18],eax
6501252a:	mov    eax,DWORD PTR [ebp+0x1c]
6501252d:	mov    DWORD PTR [ebp-0x14],eax
65012530:	mov    eax,DWORD PTR [ebp+0x20]
65012533:	mov    DWORD PTR [ebp-0x10],eax
65012536:	and    DWORD PTR [ebp-0xc],0x0
6501253a:	and    DWORD PTR [ebp-0x8],0x0
6501253e:	and    DWORD PTR [ebp-0x4],0x0
65012542:	mov    DWORD PTR [ebp-0xc],esp
65012545:	mov    DWORD PTR [ebp-0x8],ebp
65012548:	mov    eax,fs:0x0
6501254e:	mov    DWORD PTR [ebp-0x28],eax
65012551:	lea    eax,[ebp-0x28]
65012554:	mov    fs:0x0,eax
6501255a:	mov    DWORD PTR [ebp-0x38],0x1
65012561:	mov    eax,DWORD PTR [ebp+0x8]
65012564:	mov    DWORD PTR [ebp-0x34],eax
65012567:	mov    eax,DWORD PTR [ebp+0x10]
6501256a:	mov    DWORD PTR [ebp-0x30],eax
6501256d:	call   0x6501474b
65012572:	mov    eax,DWORD PTR [eax+0x80]
65012578:	mov    DWORD PTR [ebp-0x2c],eax
6501257b:	lea    eax,[ebp-0x34]
6501257e:	push   eax
6501257f:	mov    eax,DWORD PTR [ebp+0x8]
65012582:	push   DWORD PTR [eax]
65012584:	call   DWORD PTR [ebp-0x2c]
65012587:	pop    ecx
65012588:	pop    ecx
65012589:	and    DWORD PTR [ebp-0x38],0x0
6501258d:	cmp    DWORD PTR [ebp-0x4],0x0
65012591:	je     0x650125aa
65012593:	mov    ebx,DWORD PTR fs:0x0
6501259a:	mov    eax,DWORD PTR [ebx]
6501259c:	mov    ebx,DWORD PTR [ebp-0x28]
6501259f:	mov    DWORD PTR [ebx],eax
650125a1:	mov    DWORD PTR fs:0x0,ebx
650125a8:	jmp    0x650125b3
650125aa:	mov    eax,DWORD PTR [ebp-0x28]
650125ad:	mov    fs:0x0,eax
650125b3:	mov    eax,DWORD PTR [ebp-0x38]
650125b6:	pop    ebx
650125b7:	leave  
650125b8:	ret    
650125b9:	push   ebp
650125ba:	mov    ebp,esp
650125bc:	push   ecx
650125bd:	push   ebx
650125be:	cld    
650125bf:	mov    eax,DWORD PTR [ebp+0xc]
650125c2:	mov    ecx,DWORD PTR [eax+0x8]
650125c5:	xor    ecx,DWORD PTR [ebp+0xc]
650125c8:	call   0x650127bc
650125cd:	mov    eax,DWORD PTR [ebp+0x8]
650125d0:	mov    eax,DWORD PTR [eax+0x4]
650125d3:	and    eax,0x66
650125d6:	je     0x650125e9
650125d8:	mov    eax,DWORD PTR [ebp+0xc]
650125db:	mov    DWORD PTR [eax+0x24],0x1
650125e2:	xor    eax,eax
650125e4:	inc    eax
650125e5:	jmp    0x65012653
650125e7:	jmp    0x65012653
650125e9:	push   0x1
650125eb:	mov    eax,DWORD PTR [ebp+0xc]
650125ee:	push   DWORD PTR [eax+0x18]
650125f1:	mov    eax,DWORD PTR [ebp+0xc]
650125f4:	push   DWORD PTR [eax+0x14]
650125f7:	mov    eax,DWORD PTR [ebp+0xc]
650125fa:	push   DWORD PTR [eax+0xc]
650125fd:	push   0x0
650125ff:	push   DWORD PTR [ebp+0x10]
65012602:	mov    eax,DWORD PTR [ebp+0xc]
65012605:	push   DWORD PTR [eax+0x10]
65012608:	push   DWORD PTR [ebp+0x8]
6501260b:	call   0x6501573e
65012610:	add    esp,0x20
65012613:	mov    eax,DWORD PTR [ebp+0xc]
65012616:	cmp    DWORD PTR [eax+0x24],0x0
6501261a:	jne    0x65012627
6501261c:	push   DWORD PTR [ebp+0x8]
6501261f:	push   DWORD PTR [ebp+0xc]
65012622:	call   0x6501242c
65012627:	push   0x0
65012629:	push   0x0
6501262b:	push   0x0
6501262d:	push   0x0
6501262f:	push   0x0
65012631:	lea    eax,[ebp-0x4]
65012634:	push   eax
65012635:	push   0x123
6501263a:	call   0x650124e4
6501263f:	add    esp,0x1c
65012642:	mov    eax,DWORD PTR [ebp-0x4]
65012645:	mov    ebx,DWORD PTR [ebp+0xc]
65012648:	mov    esp,DWORD PTR [ebx+0x1c]
6501264b:	mov    ebp,DWORD PTR [ebx+0x20]
6501264e:	jmp    eax
65012650:	xor    eax,eax
65012652:	inc    eax
65012653:	pop    ebx
65012654:	leave  
65012655:	ret    
65012656:	push   ebp
65012657:	mov    ebp,esp
65012659:	push   ecx
6501265a:	push   ebx
6501265b:	push   esi
6501265c:	push   edi
6501265d:	mov    edi,DWORD PTR [ebp+0x8]
65012660:	mov    eax,DWORD PTR [edi+0x10]
65012663:	mov    esi,DWORD PTR [edi+0xc]
65012666:	mov    DWORD PTR [ebp-0x4],eax
65012669:	mov    ebx,esi
6501266b:	jmp    0x6501269a
6501266d:	cmp    esi,0xffffffff
65012670:	jne    0x65012677
65012672:	call   0x6501586e
65012677:	mov    ecx,DWORD PTR [ebp-0x4]
6501267a:	dec    esi
6501267b:	mov    eax,esi
6501267d:	imul   eax,eax,0x14
65012680:	add    eax,ecx
65012682:	mov    ecx,DWORD PTR [ebp+0x10]
65012685:	cmp    DWORD PTR [eax+0x4],ecx
65012688:	jge    0x6501268f
6501268a:	cmp    ecx,DWORD PTR [eax+0x8]
6501268d:	jle    0x65012694
6501268f:	cmp    esi,0xffffffff
65012692:	jne    0x6501269d
65012694:	dec    DWORD PTR [ebp+0xc]
65012697:	mov    ebx,DWORD PTR [ebp+0x8]
6501269a:	mov    DWORD PTR [ebp+0x8],esi
6501269d:	cmp    DWORD PTR [ebp+0xc],0x0
650126a1:	jge    0x6501266d
650126a3:	mov    eax,DWORD PTR [ebp+0x14]
650126a6:	inc    esi
650126a7:	mov    DWORD PTR [eax],esi
650126a9:	mov    eax,DWORD PTR [ebp+0x18]
650126ac:	mov    DWORD PTR [eax],ebx
650126ae:	cmp    ebx,DWORD PTR [edi+0xc]
650126b1:	ja     0x650126b7
650126b3:	cmp    esi,ebx
650126b5:	jbe    0x650126bc
650126b7:	call   0x6501586e
650126bc:	mov    eax,esi
650126be:	imul   eax,eax,0x14
650126c1:	add    eax,DWORD PTR [ebp-0x4]
650126c4:	pop    edi
650126c5:	pop    esi
650126c6:	pop    ebx
650126c7:	leave  
650126c8:	ret    
650126c9:	mov    eax,DWORD PTR [esp+0x8]
650126cd:	push   esi
650126ce:	mov    esi,DWORD PTR [esp+0x8]
650126d2:	mov    DWORD PTR [esi],eax
650126d4:	call   0x6501474b
650126d9:	mov    eax,DWORD PTR [eax+0x98]
650126df:	mov    DWORD PTR [esi+0x4],eax
650126e2:	call   0x6501474b
650126e7:	mov    DWORD PTR [eax+0x98],esi
650126ed:	mov    eax,esi
650126ef:	pop    esi
650126f0:	ret    
650126f1:	call   0x6501474b
650126f6:	mov    eax,DWORD PTR [eax+0x98]
650126fc:	jmp    0x65012709
650126fe:	mov    ecx,DWORD PTR [eax]
65012700:	cmp    ecx,DWORD PTR [esp+0x4]
65012704:	je     0x6501270f
65012706:	mov    eax,DWORD PTR [eax+0x4]
65012709:	test   eax,eax
6501270b:	jne    0x650126fe
6501270d:	inc    eax
6501270e:	ret    
6501270f:	xor    eax,eax
65012711:	ret    
65012712:	push   esi
65012713:	call   0x6501474b
65012718:	mov    esi,DWORD PTR [esp+0x8]
6501271c:	cmp    esi,DWORD PTR [eax+0x98]
65012722:	jne    0x65012734
65012724:	call   0x6501474b
65012729:	mov    ecx,DWORD PTR [esi+0x4]
6501272c:	mov    DWORD PTR [eax+0x98],ecx
65012732:	pop    esi
65012733:	ret    
65012734:	call   0x6501474b
65012739:	mov    eax,DWORD PTR [eax+0x98]
6501273f:	jmp    0x6501274a
65012741:	mov    ecx,DWORD PTR [eax+0x4]
65012744:	cmp    esi,ecx
65012746:	je     0x65012756
65012748:	mov    eax,ecx
6501274a:	cmp    DWORD PTR [eax+0x4],0x0
6501274e:	jne    0x65012741
65012750:	pop    esi
65012751:	jmp    0x6501586e
65012756:	mov    ecx,DWORD PTR [esi+0x4]
65012759:	mov    DWORD PTR [eax+0x4],ecx
6501275c:	pop    esi
6501275d:	ret    
6501275e:	push   ebp
6501275f:	mov    ebp,esp
65012761:	sub    esp,0x18
65012764:	mov    eax,ds:0x6502c09c
65012769:	and    DWORD PTR [ebp-0x18],0x0
6501276d:	lea    ecx,[ebp-0x18]
65012770:	xor    eax,ecx
65012772:	mov    ecx,DWORD PTR [ebp+0x8]
65012775:	mov    DWORD PTR [ebp-0x10],eax
65012778:	mov    eax,DWORD PTR [ebp+0xc]
6501277b:	mov    DWORD PTR [ebp-0xc],eax
6501277e:	mov    eax,DWORD PTR [ebp+0x14]
65012781:	inc    eax
65012782:	mov    DWORD PTR [ebp-0x14],0x650124b4
65012789:	mov    DWORD PTR [ebp-0x8],ecx
6501278c:	mov    DWORD PTR [ebp-0x4],eax
6501278f:	mov    eax,fs:0x0
65012795:	mov    DWORD PTR [ebp-0x18],eax
65012798:	lea    eax,[ebp-0x18]
6501279b:	mov    fs:0x0,eax
650127a1:	push   DWORD PTR [ebp+0x18]
650127a4:	push   ecx
650127a5:	push   DWORD PTR [ebp+0x10]
650127a8:	call   0x650158c0
650127ad:	mov    ecx,eax
650127af:	mov    eax,DWORD PTR [ebp-0x18]
650127b2:	mov    fs:0x0,eax
650127b8:	mov    eax,ecx
650127ba:	leave  
650127bb:	ret    
650127bc:	cmp    ecx,DWORD PTR ds:0x6502c09c
650127c2:	jne    0x650127c6
650127c4:	repz ret 
650127c6:	jmp    0x6501590c
650127cb:	push   ecx
650127cc:	push   ebx
650127cd:	push   ebp
650127ce:	push   esi
650127cf:	push   edi
650127d0:	push   DWORD PTR ds:0x65031570
650127d6:	call   0x6501452f
650127db:	push   DWORD PTR ds:0x6503156c
650127e1:	mov    esi,eax
650127e3:	mov    DWORD PTR [esp+0x18],esi
650127e7:	call   0x6501452f
650127ec:	mov    edi,eax
650127ee:	cmp    edi,esi
650127f0:	pop    ecx
650127f1:	pop    ecx
650127f2:	jb     0x6501287c
650127f8:	mov    ebx,edi
650127fa:	sub    ebx,esi
650127fc:	lea    ebp,[ebx+0x4]
650127ff:	cmp    ebp,0x4
65012802:	jb     0x6501287c
65012804:	push   esi
65012805:	call   0x65015ae3
6501280a:	mov    esi,eax
6501280c:	cmp    esi,ebp
6501280e:	pop    ecx
6501280f:	jae    0x6501285b
65012811:	mov    eax,0x800
65012816:	cmp    esi,eax
65012818:	jae    0x6501281c
6501281a:	mov    eax,esi
6501281c:	add    eax,esi
6501281e:	cmp    eax,esi
65012820:	jb     0x65012832
65012822:	push   eax
65012823:	push   DWORD PTR [esp+0x14]
65012827:	call   0x65015a98
6501282c:	test   eax,eax
6501282e:	pop    ecx
6501282f:	pop    ecx
65012830:	jne    0x65012849
65012832:	lea    eax,[esi+0x10]
65012835:	cmp    eax,esi
65012837:	jb     0x6501287c
65012839:	push   eax
6501283a:	push   DWORD PTR [esp+0x14]
6501283e:	call   0x65015a98
65012843:	test   eax,eax
65012845:	pop    ecx
65012846:	pop    ecx
65012847:	je     0x6501287c
65012849:	sar    ebx,0x2
6501284c:	push   eax
6501284d:	lea    edi,[eax+ebx*4]
65012850:	call   0x650144b8
65012855:	pop    ecx
65012856:	mov    ds:0x65031570,eax
6501285b:	push   DWORD PTR [esp+0x18]
6501285f:	call   0x650144b8
65012864:	mov    DWORD PTR [edi],eax
65012866:	add    edi,0x4
65012869:	push   edi
6501286a:	call   0x650144b8
6501286f:	pop    ecx
65012870:	mov    ds:0x6503156c,eax
65012875:	mov    eax,DWORD PTR [esp+0x1c]
65012879:	pop    ecx
6501287a:	jmp    0x6501287e
6501287c:	xor    eax,eax
6501287e:	pop    edi
6501287f:	pop    esi
65012880:	pop    ebp
65012881:	pop    ebx
65012882:	pop    ecx
65012883:	ret    
65012884:	push   esi
65012885:	push   0x4
65012887:	push   0x20
65012889:	call   0x65015a50
6501288e:	mov    esi,eax
65012890:	push   esi
65012891:	call   0x650144b8
65012896:	add    esp,0xc
65012899:	test   esi,esi
6501289b:	mov    ds:0x65031570,eax
650128a0:	mov    ds:0x6503156c,eax
650128a5:	jne    0x650128ac
650128a7:	push   0x18
650128a9:	pop    eax
650128aa:	pop    esi
650128ab:	ret    
650128ac:	and    DWORD PTR [esi],0x0
650128af:	xor    eax,eax
650128b1:	pop    esi
650128b2:	ret    
650128b3:	push   0xc
650128b5:	push   0x65029858
650128ba:	call   0x65013d00
650128bf:	call   0x65015be5
650128c4:	and    DWORD PTR [ebp-0x4],0x0
650128c8:	push   DWORD PTR [ebp+0x8]
650128cb:	call   0x650127cb
650128d0:	pop    ecx
650128d1:	mov    DWORD PTR [ebp-0x1c],eax
650128d4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650128db:	call   0x650128e9
650128e0:	mov    eax,DWORD PTR [ebp-0x1c]
650128e3:	call   0x65013d45
650128e8:	ret    
650128e9:	call   0x65015bee
650128ee:	ret    
650128ef:	push   DWORD PTR [esp+0x4]
650128f3:	call   0x650128b3
650128f8:	neg    eax
650128fa:	sbb    eax,eax
650128fc:	neg    eax
650128fe:	pop    ecx
650128ff:	dec    eax
65012900:	ret    
65012901:	mov    eax,DWORD PTR [esp+0x4]
65012905:	push   ebx
65012906:	mov    ebx,DWORD PTR [esp+0xc]
6501290a:	cmp    WORD PTR [ebx],0x0
6501290e:	push   edi
6501290f:	mov    edi,eax
65012911:	je     0x65012958
65012913:	movzx  ecx,WORD PTR [eax]
65012916:	test   cx,cx
65012919:	je     0x65012956
6501291b:	movzx  edx,cx
6501291e:	sub    eax,ebx
65012920:	test   dx,dx
65012923:	mov    ecx,DWORD PTR [esp+0x10]
65012927:	je     0x65012944
65012929:	movzx  edx,WORD PTR [ecx]
6501292c:	test   dx,dx
6501292f:	je     0x6501295b
65012931:	movzx  ebx,WORD PTR [eax+ecx*1]
65012935:	movzx  edx,dx
65012938:	sub    ebx,edx
6501293a:	jne    0x65012944
6501293c:	inc    ecx
6501293d:	inc    ecx
6501293e:	cmp    WORD PTR [eax+ecx*1],bx
65012942:	jne    0x65012929
65012944:	cmp    WORD PTR [ecx],0x0
65012948:	je     0x6501295b
6501294a:	inc    edi
6501294b:	inc    edi
6501294c:	movzx  edx,WORD PTR [edi]
6501294f:	inc    eax
65012950:	inc    eax
65012951:	test   dx,dx
65012954:	jne    0x65012920
65012956:	xor    eax,eax
65012958:	pop    edi
65012959:	pop    ebx
6501295a:	ret    
6501295b:	mov    eax,edi
6501295d:	jmp    0x65012958
6501295f:	mov    eax,DWORD PTR [esp+0x4]
65012963:	test   eax,eax
65012965:	push   esi
65012966:	mov    esi,ecx
65012968:	mov    BYTE PTR [esi+0xc],0x0
6501296c:	jne    0x650129d1
6501296e:	call   0x6501474b
65012973:	mov    DWORD PTR [esi+0x8],eax
65012976:	mov    ecx,DWORD PTR [eax+0x6c]
65012979:	mov    DWORD PTR [esi],ecx
6501297b:	mov    ecx,DWORD PTR [eax+0x68]
6501297e:	mov    DWORD PTR [esi+0x4],ecx
65012981:	mov    ecx,DWORD PTR [esi]
65012983:	cmp    ecx,DWORD PTR ds:0x6502c870
65012989:	je     0x6501299d
6501298b:	mov    ecx,DWORD PTR ds:0x6502c78c
65012991:	test   DWORD PTR [eax+0x70],ecx
65012994:	jne    0x6501299d
65012996:	call   0x650167cf
6501299b:	mov    DWORD PTR [esi],eax
6501299d:	mov    eax,DWORD PTR [esi+0x4]
650129a0:	cmp    eax,DWORD PTR ds:0x6502c690
650129a6:	je     0x650129be
650129a8:	mov    eax,DWORD PTR [esi+0x8]
650129ab:	mov    ecx,DWORD PTR ds:0x6502c78c
650129b1:	test   DWORD PTR [eax+0x70],ecx
650129b4:	jne    0x650129be
650129b6:	call   0x65016090
650129bb:	mov    DWORD PTR [esi+0x4],eax
650129be:	mov    eax,DWORD PTR [esi+0x8]
650129c1:	test   BYTE PTR [eax+0x70],0x2
650129c5:	jne    0x650129db
650129c7:	or     DWORD PTR [eax+0x70],0x2
650129cb:	mov    BYTE PTR [esi+0xc],0x1
650129cf:	jmp    0x650129db
650129d1:	mov    ecx,DWORD PTR [eax]
650129d3:	mov    DWORD PTR [esi],ecx
650129d5:	mov    eax,DWORD PTR [eax+0x4]
650129d8:	mov    DWORD PTR [esi+0x4],eax
650129db:	mov    eax,esi
650129dd:	pop    esi
650129de:	ret    0x4
650129e1:	push   ebp
650129e2:	mov    ebp,esp
650129e4:	sub    esp,0x20
650129e7:	push   esi
650129e8:	xor    esi,esi
650129ea:	cmp    DWORD PTR [ebp+0xc],esi
650129ed:	jne    0x65012a0c
650129ef:	call   0x65014400
650129f4:	push   esi
650129f5:	push   esi
650129f6:	push   esi
650129f7:	push   esi
650129f8:	push   esi
650129f9:	mov    DWORD PTR [eax],0x16
650129ff:	call   0x650122af
65012a04:	add    esp,0x14
65012a07:	or     eax,0xffffffff
65012a0a:	jmp    0x65012a33
65012a0c:	push   DWORD PTR [ebp+0x14]
65012a0f:	lea    eax,[ebp-0x20]
65012a12:	push   DWORD PTR [ebp+0x10]
65012a15:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
65012a1c:	push   DWORD PTR [ebp+0xc]
65012a1f:	mov    DWORD PTR [ebp-0x14],0x42
65012a26:	push   eax
65012a27:	mov    DWORD PTR [ebp-0x18],esi
65012a2a:	mov    DWORD PTR [ebp-0x20],esi
65012a2d:	call   DWORD PTR [ebp+0x8]
65012a30:	add    esp,0x10
65012a33:	pop    esi
65012a34:	leave  
65012a35:	ret    
65012a36:	push   DWORD PTR [esp+0x8]
65012a3a:	push   0x0
65012a3c:	push   DWORD PTR [esp+0xc]
65012a40:	push   0x650169ef
65012a45:	call   0x650129e1
65012a4a:	add    esp,0x10
65012a4d:	ret    
65012a4e:	push   ebp
65012a4f:	mov    ebp,esp
65012a51:	sub    esp,0x20
65012a54:	push   ebx
65012a55:	xor    ebx,ebx
65012a57:	cmp    DWORD PTR [ebp+0x14],ebx
65012a5a:	jne    0x65012a7c
65012a5c:	call   0x65014400
65012a61:	push   ebx
65012a62:	push   ebx
65012a63:	push   ebx
65012a64:	push   ebx
65012a65:	push   ebx
65012a66:	mov    DWORD PTR [eax],0x16
65012a6c:	call   0x650122af
65012a71:	add    esp,0x14
65012a74:	or     eax,0xffffffff
65012a77:	jmp    0x65012b41
65012a7c:	push   esi
65012a7d:	mov    esi,DWORD PTR [ebp+0xc]
65012a80:	push   edi
65012a81:	mov    edi,DWORD PTR [ebp+0x10]
65012a84:	cmp    edi,ebx
65012a86:	je     0x65012aac
65012a88:	cmp    esi,ebx
65012a8a:	jne    0x65012aac
65012a8c:	call   0x65014400
65012a91:	push   ebx
65012a92:	push   ebx
65012a93:	push   ebx
65012a94:	push   ebx
65012a95:	push   ebx
65012a96:	mov    DWORD PTR [eax],0x16
65012a9c:	call   0x650122af
65012aa1:	add    esp,0x14
65012aa4:	or     eax,0xffffffff
65012aa7:	jmp    0x65012b3f
65012aac:	cmp    edi,0x3fffffff
65012ab2:	mov    DWORD PTR [ebp-0x14],0x42
65012ab9:	mov    DWORD PTR [ebp-0x18],esi
65012abc:	mov    DWORD PTR [ebp-0x20],esi
65012abf:	jbe    0x65012aca
65012ac1:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
65012ac8:	jmp    0x65012ad0
65012aca:	lea    eax,[edi+edi*1]
65012acd:	mov    DWORD PTR [ebp-0x1c],eax
65012ad0:	push   DWORD PTR [ebp+0x1c]
65012ad3:	lea    eax,[ebp-0x20]
65012ad6:	push   DWORD PTR [ebp+0x18]
65012ad9:	push   DWORD PTR [ebp+0x14]
65012adc:	push   eax
65012add:	call   DWORD PTR [ebp+0x8]
65012ae0:	add    esp,0x10
65012ae3:	cmp    esi,ebx
65012ae5:	mov    DWORD PTR [ebp+0x14],eax
65012ae8:	je     0x65012b3f
65012aea:	cmp    eax,ebx
65012aec:	jl     0x65012b30
65012aee:	dec    DWORD PTR [ebp-0x1c]
65012af1:	js     0x65012afd
65012af3:	mov    eax,DWORD PTR [ebp-0x20]
65012af6:	mov    BYTE PTR [eax],bl
65012af8:	inc    DWORD PTR [ebp-0x20]
65012afb:	jmp    0x65012b0e
65012afd:	lea    eax,[ebp-0x20]
65012b00:	push   eax
65012b01:	push   ebx
65012b02:	call   0x65016845
65012b07:	cmp    eax,0xffffffff
65012b0a:	pop    ecx
65012b0b:	pop    ecx
65012b0c:	je     0x65012b30
65012b0e:	dec    DWORD PTR [ebp-0x1c]
65012b11:	js     0x65012b1a
65012b13:	mov    eax,DWORD PTR [ebp-0x20]
65012b16:	mov    BYTE PTR [eax],bl
65012b18:	jmp    0x65012b2b
65012b1a:	lea    eax,[ebp-0x20]
65012b1d:	push   eax
65012b1e:	push   ebx
65012b1f:	call   0x65016845
65012b24:	cmp    eax,0xffffffff
65012b27:	pop    ecx
65012b28:	pop    ecx
65012b29:	je     0x65012b30
65012b2b:	mov    eax,DWORD PTR [ebp+0x14]
65012b2e:	jmp    0x65012b3f
65012b30:	xor    eax,eax
65012b32:	cmp    DWORD PTR [ebp-0x1c],ebx
65012b35:	mov    WORD PTR [esi+edi*2-0x2],bx
65012b3a:	setge  al
65012b3d:	dec    eax
65012b3e:	dec    eax
65012b3f:	pop    edi
65012b40:	pop    esi
65012b41:	pop    ebx
65012b42:	leave  
65012b43:	ret    
65012b44:	push   ebp
65012b45:	mov    ebp,esp
65012b47:	push   esi
65012b48:	xor    esi,esi
65012b4a:	cmp    DWORD PTR [ebp+0x10],esi
65012b4d:	jne    0x65012b6c
65012b4f:	call   0x65014400
65012b54:	push   esi
65012b55:	push   esi
65012b56:	push   esi
65012b57:	push   esi
65012b58:	push   esi
65012b59:	mov    DWORD PTR [eax],0x16
65012b5f:	call   0x650122af
65012b64:	add    esp,0x14
65012b67:	or     eax,0xffffffff
65012b6a:	jmp    0x65012bc8
65012b6c:	push   edi
65012b6d:	mov    edi,DWORD PTR [ebp+0x8]
65012b70:	cmp    edi,esi
65012b72:	je     0x65012b79
65012b74:	cmp    DWORD PTR [ebp+0xc],esi
65012b77:	ja     0x65012b86
65012b79:	call   0x65014400
65012b7e:	mov    DWORD PTR [eax],0x16
65012b84:	jmp    0x65012bb7
65012b86:	push   DWORD PTR [ebp+0x18]
65012b89:	push   DWORD PTR [ebp+0x14]
65012b8c:	push   DWORD PTR [ebp+0x10]
65012b8f:	push   DWORD PTR [ebp+0xc]
65012b92:	push   edi
65012b93:	push   0x6501734e
65012b98:	call   0x65012a4e
65012b9d:	add    esp,0x18
65012ba0:	cmp    eax,esi
65012ba2:	jge    0x65012ba7
65012ba4:	mov    WORD PTR [edi],si
65012ba7:	cmp    eax,0xfffffffe
65012baa:	jne    0x65012bc7
65012bac:	call   0x65014400
65012bb1:	mov    DWORD PTR [eax],0x22
65012bb7:	push   esi
65012bb8:	push   esi
65012bb9:	push   esi
65012bba:	push   esi
65012bbb:	push   esi
65012bbc:	call   0x650122af
65012bc1:	add    esp,0x14
65012bc4:	or     eax,0xffffffff
65012bc7:	pop    edi
65012bc8:	pop    esi
65012bc9:	pop    ebp
65012bca:	ret    
65012bcb:	push   DWORD PTR [esp+0x10]
65012bcf:	push   0x0
65012bd1:	push   DWORD PTR [esp+0x14]
65012bd5:	push   DWORD PTR [esp+0x14]
65012bd9:	push   DWORD PTR [esp+0x14]
65012bdd:	call   0x65012b44
65012be2:	add    esp,0x14
65012be5:	ret    
65012be6:	mov    ecx,DWORD PTR [esp+0x4]
65012bea:	push   ebx
65012beb:	push   esi
65012bec:	push   edi
65012bed:	xor    edi,edi
65012bef:	cmp    ecx,edi
65012bf1:	je     0x65012bfb
65012bf3:	mov    ebx,DWORD PTR [esp+0x14]
65012bf7:	cmp    ebx,edi
65012bf9:	ja     0x65012c16
65012bfb:	call   0x65014400
65012c00:	push   0x16
65012c02:	pop    esi
65012c03:	mov    DWORD PTR [eax],esi
65012c05:	push   edi
65012c06:	push   edi
65012c07:	push   edi
65012c08:	push   edi
65012c09:	push   edi
65012c0a:	call   0x650122af
65012c0f:	add    esp,0x14
65012c12:	mov    eax,esi
65012c14:	jmp    0x65012c4e
65012c16:	mov    esi,DWORD PTR [esp+0x18]
65012c1a:	cmp    esi,edi
65012c1c:	jne    0x65012c23
65012c1e:	mov    WORD PTR [ecx],di
65012c21:	jmp    0x65012bfb
65012c23:	mov    edx,ecx
65012c25:	movzx  eax,WORD PTR [esi]
65012c28:	mov    WORD PTR [edx],ax
65012c2b:	inc    edx
65012c2c:	inc    edx
65012c2d:	inc    esi
65012c2e:	inc    esi
65012c2f:	cmp    ax,di
65012c32:	je     0x65012c37
65012c34:	dec    ebx
65012c35:	jne    0x65012c25
65012c37:	cmp    ebx,edi
65012c39:	jne    0x65012c4c
65012c3b:	mov    WORD PTR [ecx],di
65012c3e:	call   0x65014400
65012c43:	push   0x22
65012c45:	pop    ecx
65012c46:	mov    DWORD PTR [eax],ecx
65012c48:	mov    esi,ecx
65012c4a:	jmp    0x65012c05
65012c4c:	xor    eax,eax
65012c4e:	pop    edi
65012c4f:	pop    esi
65012c50:	pop    ebx
65012c51:	ret    
65012c52:	mov    eax,DWORD PTR [esp+0x4]
65012c56:	test   eax,eax
65012c58:	je     0x65012c6c
65012c5a:	sub    eax,0x8
65012c5d:	cmp    DWORD PTR [eax],0xdddd
65012c63:	jne    0x65012c6c
65012c65:	push   eax
65012c66:	call   0x650135d6
65012c6b:	pop    ecx
65012c6c:	ret    
65012c6d:	push   ebp
65012c6e:	mov    ebp,esp
65012c70:	sub    esp,0xc
65012c73:	mov    eax,ds:0x6502c09c
65012c78:	xor    eax,ebp
65012c7a:	mov    DWORD PTR [ebp-0x4],eax
65012c7d:	push   esi
65012c7e:	xor    esi,esi
65012c80:	cmp    ebx,esi
65012c82:	push   edi
65012c83:	jne    0x65012ca3
65012c85:	call   0x65014400
65012c8a:	push   0x16
65012c8c:	pop    edi
65012c8d:	push   esi
65012c8e:	push   esi
65012c8f:	push   esi
65012c90:	push   esi
65012c91:	push   esi
65012c92:	mov    DWORD PTR [eax],edi
65012c94:	call   0x650122af
65012c99:	add    esp,0x14
65012c9c:	mov    eax,edi
65012c9e:	jmp    0x65012de3
65012ca3:	push   DWORD PTR [ebp+0x8]
65012ca6:	push   ebx
65012ca7:	call   0x65017f0b
65012cac:	cmp    eax,DWORD PTR [ebp+0x8]
65012caf:	pop    ecx
65012cb0:	pop    ecx
65012cb1:	jb     0x65012cb8
65012cb3:	mov    WORD PTR [ebx],si
65012cb6:	jmp    0x65012c85
65012cb8:	mov    edx,DWORD PTR [ebp+0xc]
65012cbb:	mov    eax,DWORD PTR [edx]
65012cbd:	mov    ecx,DWORD PTR [eax+0x14]
65012cc0:	cmp    ecx,esi
65012cc2:	jne    0x65012cee
65012cc4:	cmp    WORD PTR [ebx],si
65012cc7:	mov    eax,ebx
65012cc9:	je     0x65012ce7
65012ccb:	movzx  ecx,WORD PTR [eax]
65012cce:	cmp    cx,0x41
65012cd2:	jb     0x65012ce0
65012cd4:	cmp    cx,0x5a
65012cd8:	ja     0x65012ce0
65012cda:	add    ecx,0x20
65012cdd:	mov    WORD PTR [eax],cx
65012ce0:	inc    eax
65012ce1:	inc    eax
65012ce2:	cmp    WORD PTR [eax],si
65012ce5:	jne    0x65012ccb
65012ce7:	xor    eax,eax
65012ce9:	jmp    0x65012de3
65012cee:	push   DWORD PTR [eax+0x4]
65012cf1:	mov    edi,0x100
65012cf6:	push   esi
65012cf7:	push   esi
65012cf8:	push   0xffffffff
65012cfa:	push   ebx
65012cfb:	push   edi
65012cfc:	push   ecx
65012cfd:	push   edx
65012cfe:	call   0x65017ecb
65012d03:	mov    ecx,eax
65012d05:	add    esp,0x20
65012d08:	cmp    ecx,esi
65012d0a:	mov    DWORD PTR [ebp-0xc],ecx
65012d0d:	jne    0x65012d26
65012d0f:	call   0x65014400
65012d14:	mov    DWORD PTR [eax],0x2a
65012d1a:	call   0x65014400
65012d1f:	mov    eax,DWORD PTR [eax]
65012d21:	jmp    0x65012de3
65012d26:	cmp    DWORD PTR [ebp+0x8],ecx
65012d29:	jae    0x65012d3a
65012d2b:	mov    WORD PTR [ebx],si
65012d2e:	call   0x65014400
65012d33:	push   0x22
65012d35:	jmp    0x65012c8c
65012d3a:	cmp    ecx,esi
65012d3c:	jle    0x65012d84
65012d3e:	push   0xffffffe0
65012d40:	xor    edx,edx
65012d42:	pop    eax
65012d43:	div    ecx
65012d45:	cmp    eax,0x2
65012d48:	jb     0x65012d84
65012d4a:	lea    eax,[ecx+ecx*1+0x8]
65012d4e:	cmp    eax,0x400
65012d53:	ja     0x65012d68
65012d55:	call   0x65012ec0
65012d5a:	mov    eax,esp
65012d5c:	cmp    eax,esi
65012d5e:	je     0x65012d7c
65012d60:	mov    DWORD PTR [eax],0xcccc
65012d66:	jmp    0x65012d79
65012d68:	push   eax
65012d69:	call   0x650136b3
65012d6e:	cmp    eax,esi
65012d70:	pop    ecx
65012d71:	je     0x65012d7c
65012d73:	mov    DWORD PTR [eax],0xdddd
65012d79:	add    eax,0x8
65012d7c:	mov    ecx,DWORD PTR [ebp-0xc]
65012d7f:	mov    DWORD PTR [ebp-0x8],eax
65012d82:	jmp    0x65012d87
65012d84:	mov    DWORD PTR [ebp-0x8],esi
65012d87:	cmp    DWORD PTR [ebp-0x8],esi
65012d8a:	jne    0x65012d99
65012d8c:	call   0x65014400
65012d91:	mov    DWORD PTR [eax],0xc
65012d97:	jmp    0x65012d1a
65012d99:	mov    edx,DWORD PTR [ebp+0xc]
65012d9c:	mov    eax,DWORD PTR [edx]
65012d9e:	push   DWORD PTR [eax+0x4]
65012da1:	push   ecx
65012da2:	push   DWORD PTR [ebp-0x8]
65012da5:	push   0xffffffff
65012da7:	push   ebx
65012da8:	push   edi
65012da9:	push   DWORD PTR [eax+0x14]
65012dac:	push   edx
65012dad:	call   0x65017ecb
65012db2:	add    esp,0x20
65012db5:	test   eax,eax
65012db7:	je     0x65012dcc
65012db9:	push   DWORD PTR [ebp-0x8]
65012dbc:	push   DWORD PTR [ebp+0x8]
65012dbf:	push   ebx
65012dc0:	call   0x65012be6
65012dc5:	add    esp,0xc
65012dc8:	mov    esi,eax
65012dca:	jmp    0x65012dd8
65012dcc:	call   0x65014400
65012dd1:	push   0x2a
65012dd3:	pop    ecx
65012dd4:	mov    DWORD PTR [eax],ecx
65012dd6:	mov    esi,ecx
65012dd8:	push   DWORD PTR [ebp-0x8]
65012ddb:	call   0x65012c52
65012de0:	pop    ecx
65012de1:	mov    eax,esi
65012de3:	lea    esp,[ebp-0x14]
65012de6:	pop    edi
65012de7:	pop    esi
65012de8:	mov    ecx,DWORD PTR [ebp-0x4]
65012deb:	xor    ecx,ebp
65012ded:	call   0x650127bc
65012df2:	leave  
65012df3:	ret    
65012df4:	push   ebp
65012df5:	mov    ebp,esp
65012df7:	sub    esp,0x10
65012dfa:	push   ebx
65012dfb:	push   DWORD PTR [ebp+0x10]
65012dfe:	lea    ecx,[ebp-0x10]
65012e01:	call   0x6501295f
65012e06:	mov    ebx,DWORD PTR [ebp+0x8]
65012e09:	lea    eax,[ebp-0x10]
65012e0c:	push   eax
65012e0d:	push   DWORD PTR [ebp+0xc]
65012e10:	call   0x65012c6d
65012e15:	cmp    BYTE PTR [ebp-0x4],0x0
65012e19:	pop    ecx
65012e1a:	pop    ecx
65012e1b:	pop    ebx
65012e1c:	je     0x65012e25
65012e1e:	mov    ecx,DWORD PTR [ebp-0x8]
65012e21:	and    DWORD PTR [ecx+0x70],0xfffffffd
65012e25:	leave  
65012e26:	ret    
65012e27:	push   0x0
65012e29:	push   DWORD PTR [esp+0xc]
65012e2d:	push   DWORD PTR [esp+0xc]
65012e31:	call   0x65012df4
65012e36:	add    esp,0xc
65012e39:	ret    
65012e3a:	jmp    0x65011f62
65012e3f:	int3   
65012e40:	mov    edx,DWORD PTR [esp+0xc]
65012e44:	mov    ecx,DWORD PTR [esp+0x4]
65012e48:	test   edx,edx
65012e4a:	je     0x65012eb5
65012e4c:	xor    eax,eax
65012e4e:	mov    al,BYTE PTR [esp+0x8]
65012e52:	test   al,al
65012e54:	jne    0x65012e6c
65012e56:	cmp    edx,0x100
65012e5c:	jb     0x65012e6c
65012e5e:	cmp    DWORD PTR ds:0x65031564,0x0
65012e65:	je     0x65012e6c
65012e67:	jmp    0x65017f7e
65012e6c:	push   edi
65012e6d:	mov    edi,ecx
65012e6f:	cmp    edx,0x4
65012e72:	jb     0x65012ea5
65012e74:	neg    ecx
65012e76:	and    ecx,0x3
65012e79:	je     0x65012e87
65012e7b:	sub    edx,ecx
65012e7d:	mov    BYTE PTR [edi],al
65012e7f:	add    edi,0x1
65012e82:	sub    ecx,0x1
65012e85:	jne    0x65012e7d
65012e87:	mov    ecx,eax
65012e89:	shl    eax,0x8
65012e8c:	add    eax,ecx
65012e8e:	mov    ecx,eax
65012e90:	shl    eax,0x10
65012e93:	add    eax,ecx
65012e95:	mov    ecx,edx
65012e97:	and    edx,0x3
65012e9a:	shr    ecx,0x2
65012e9d:	je     0x65012ea5
65012e9f:	rep stos DWORD PTR es:[edi],eax
65012ea1:	test   edx,edx
65012ea3:	je     0x65012eaf
65012ea5:	mov    BYTE PTR [edi],al
65012ea7:	add    edi,0x1
65012eaa:	sub    edx,0x1
65012ead:	jne    0x65012ea5
65012eaf:	mov    eax,DWORD PTR [esp+0x8]
65012eb3:	pop    edi
65012eb4:	ret    
65012eb5:	mov    eax,DWORD PTR [esp+0x4]
65012eb9:	ret    
65012eba:	int3   
65012ebb:	int3   
65012ebc:	int3   
65012ebd:	int3   
65012ebe:	int3   
65012ebf:	int3   
65012ec0:	push   ecx
65012ec1:	lea    ecx,[esp+0x8]
65012ec5:	sub    ecx,eax
65012ec7:	and    ecx,0xf
65012eca:	add    eax,ecx
65012ecc:	sbb    ecx,ecx
65012ece:	or     eax,ecx
65012ed0:	pop    ecx
65012ed1:	jmp    0x65018030
65012ed6:	push   ecx
65012ed7:	lea    ecx,[esp+0x8]
65012edb:	sub    ecx,eax
65012edd:	and    ecx,0x7
65012ee0:	add    eax,ecx
65012ee2:	sbb    ecx,ecx
65012ee4:	or     eax,ecx
65012ee6:	pop    ecx
65012ee7:	jmp    0x65018030
65012eec:	call   0x6501474b
65012ef1:	mov    ecx,DWORD PTR [esp+0x4]
65012ef5:	mov    DWORD PTR [eax+0x14],ecx
65012ef8:	ret    
65012ef9:	call   0x6501474b
65012efe:	mov    ecx,DWORD PTR [eax+0x14]
65012f01:	imul   ecx,ecx,0x343fd
65012f07:	add    ecx,0x269ec3
65012f0d:	mov    DWORD PTR [eax+0x14],ecx
65012f10:	mov    eax,ecx
65012f12:	shr    eax,0x10
65012f15:	and    eax,0x7fff
65012f1a:	ret    
65012f1b:	push   ebp
65012f1c:	mov    ebp,esp
65012f1e:	push   ecx
65012f1f:	mov    eax,DWORD PTR [ebp+0xc]
65012f22:	cmp    eax,0x1
65012f25:	push   ebx
65012f26:	push   esi
65012f27:	push   edi
65012f28:	jne    0x65013045
65012f2e:	mov    ebx,DWORD PTR ds:0x65024104
65012f34:	mov    edi,0x94
65012f39:	push   edi
65012f3a:	push   0x0
65012f3c:	call   ebx
65012f3e:	push   eax
65012f3f:	call   DWORD PTR ds:0x650240f4
65012f45:	mov    esi,eax
65012f47:	test   esi,esi
65012f49:	jne    0x65012f52
65012f4b:	xor    eax,eax
65012f4d:	jmp    0x650130ed
65012f52:	push   esi
65012f53:	mov    DWORD PTR [esi],edi
65012f55:	call   DWORD PTR ds:0x650240e8
65012f5b:	test   eax,eax
65012f5d:	push   esi
65012f5e:	push   0x0
65012f60:	jne    0x65012f6d
65012f62:	call   ebx
65012f64:	push   eax
65012f65:	call   DWORD PTR ds:0x650240f8
65012f6b:	jmp    0x65012f4b
65012f6d:	mov    eax,DWORD PTR [esi+0x10]
65012f70:	mov    edi,DWORD PTR [esi+0xc]
65012f73:	mov    DWORD PTR [ebp+0xc],eax
65012f76:	mov    eax,DWORD PTR [esi+0x4]
65012f79:	mov    DWORD PTR [ebp+0x10],eax
65012f7c:	mov    eax,DWORD PTR [esi+0x8]
65012f7f:	mov    DWORD PTR [ebp-0x4],eax
65012f82:	and    edi,0x7fff
65012f88:	call   ebx
65012f8a:	push   eax
65012f8b:	call   DWORD PTR ds:0x650240f8
65012f91:	mov    eax,DWORD PTR [ebp+0xc]
65012f94:	cmp    eax,0x2
65012f97:	je     0x65012f9f
65012f99:	or     edi,0x8000
65012f9f:	mov    ecx,DWORD PTR [ebp-0x4]
65012fa2:	mov    ds:0x6502d8f4,eax
65012fa7:	mov    eax,DWORD PTR [ebp+0x10]
65012faa:	mov    edx,eax
65012fac:	shl    edx,0x8
65012faf:	add    edx,ecx
65012fb1:	push   0x1
65012fb3:	mov    DWORD PTR ds:0x6502d8fc,edx
65012fb9:	mov    ds:0x6502d900,eax
65012fbe:	mov    DWORD PTR ds:0x6502d904,ecx
65012fc4:	mov    DWORD PTR ds:0x6502d8f8,edi
65012fca:	call   0x650187ff
65012fcf:	test   eax,eax
65012fd1:	pop    ecx
65012fd2:	je     0x65012f4b
65012fd8:	call   0x650148ed
65012fdd:	test   eax,eax
65012fdf:	jne    0x65012feb
65012fe1:	call   0x65018859
65012fe6:	jmp    0x65012f4b
65012feb:	call   0x6501875c
65012ff0:	call   DWORD PTR ds:0x65024120
65012ff6:	mov    ds:0x65031580,eax
65012ffb:	call   0x65018627
65013000:	mov    ds:0x6502d594,eax
65013005:	call   0x6501805b
6501300a:	test   eax,eax
6501300c:	jge    0x65013015
6501300e:	call   0x650145d8
65013013:	jmp    0x65012fe1
65013015:	call   0x6501856e
6501301a:	test   eax,eax
6501301c:	jl     0x6501303e
6501301e:	call   0x650182fb
65013023:	test   eax,eax
65013025:	jl     0x6501303e
65013027:	push   0x0
65013029:	call   0x65015ca2
6501302e:	test   eax,eax
65013030:	pop    ecx
65013031:	jne    0x6501303e
65013033:	inc    DWORD PTR ds:0x6502d590
65013039:	jmp    0x650130ea
6501303e:	call   0x650182af
65013043:	jmp    0x6501300e
65013045:	xor    edi,edi
65013047:	cmp    eax,edi
65013049:	jne    0x65013080
6501304b:	cmp    DWORD PTR ds:0x6502d590,edi
65013051:	jle    0x65012f4b
65013057:	dec    DWORD PTR ds:0x6502d590
6501305d:	cmp    DWORD PTR ds:0x6502d930,edi
65013063:	jne    0x6501306a
65013065:	call   0x65015e27
6501306a:	cmp    DWORD PTR [ebp+0x10],edi
6501306d:	jne    0x650130ea
6501306f:	call   0x650182af
65013074:	call   0x650145d8
65013079:	call   0x65018859
6501307e:	jmp    0x650130ea
65013080:	cmp    eax,0x2
65013083:	jne    0x650130de
65013085:	call   0x650145a6
6501308a:	push   0x214
6501308f:	push   0x1
65013091:	call   0x65015a50
65013096:	mov    esi,eax
65013098:	cmp    esi,edi
6501309a:	pop    ecx
6501309b:	pop    ecx
6501309c:	je     0x65012f4b
650130a2:	push   esi
650130a3:	push   DWORD PTR ds:0x6502c220
650130a9:	push   DWORD PTR ds:0x6502d5ac
650130af:	call   0x6501452f
650130b4:	pop    ecx
650130b5:	call   eax
650130b7:	test   eax,eax
650130b9:	je     0x650130d2
650130bb:	push   edi
650130bc:	push   esi
650130bd:	call   0x65014615
650130c2:	pop    ecx
650130c3:	pop    ecx
650130c4:	call   DWORD PTR ds:0x6502411c
650130ca:	or     DWORD PTR [esi+0x4],0xffffffff
650130ce:	mov    DWORD PTR [esi],eax
650130d0:	jmp    0x650130ea
650130d2:	push   esi
650130d3:	call   0x650135d6
650130d8:	pop    ecx
650130d9:	jmp    0x65012f4b
650130de:	cmp    eax,0x3
650130e1:	jne    0x650130ea
650130e3:	push   edi
650130e4:	call   0x65014884
650130e9:	pop    ecx
650130ea:	xor    eax,eax
650130ec:	inc    eax
650130ed:	pop    edi
650130ee:	pop    esi
650130ef:	pop    ebx
650130f0:	leave  
650130f1:	ret    0xc
650130f4:	push   0xc
650130f6:	push   0x65029878
650130fb:	call   0x65013d00
65013100:	mov    edi,ecx
65013102:	mov    esi,edx
65013104:	mov    ebx,DWORD PTR [ebp+0x8]
65013107:	xor    eax,eax
65013109:	inc    eax
6501310a:	mov    DWORD PTR [ebp-0x1c],eax
6501310d:	test   esi,esi
6501310f:	jne    0x6501311d
65013111:	cmp    DWORD PTR ds:0x6502d590,edx
65013117:	je     0x650131e2
6501311d:	and    DWORD PTR [ebp-0x4],0x0
65013121:	cmp    esi,eax
65013123:	je     0x6501312a
65013125:	cmp    esi,0x2
65013128:	jne    0x65013158
6501312a:	mov    eax,ds:0x65024ca0
6501312f:	test   eax,eax
65013131:	je     0x6501313b
65013133:	push   edi
65013134:	push   esi
65013135:	push   ebx
65013136:	call   eax
65013138:	mov    DWORD PTR [ebp-0x1c],eax
6501313b:	cmp    DWORD PTR [ebp-0x1c],0x0
6501313f:	je     0x650131db
65013145:	push   edi
65013146:	push   esi
65013147:	push   ebx
65013148:	call   0x65012f1b
6501314d:	mov    DWORD PTR [ebp-0x1c],eax
65013150:	test   eax,eax
65013152:	je     0x650131db
65013158:	push   edi
65013159:	push   esi
6501315a:	push   ebx
6501315b:	call   0x6500f4d0
65013160:	mov    DWORD PTR [ebp-0x1c],eax
65013163:	cmp    esi,0x1
65013166:	jne    0x6501318c
65013168:	test   eax,eax
6501316a:	jne    0x6501318c
6501316c:	push   edi
6501316d:	push   eax
6501316e:	push   ebx
6501316f:	call   0x6500f4d0
65013174:	push   edi
65013175:	push   0x0
65013177:	push   ebx
65013178:	call   0x65012f1b
6501317d:	mov    eax,ds:0x65024ca0
65013182:	test   eax,eax
65013184:	je     0x6501318c
65013186:	push   edi
65013187:	push   0x0
65013189:	push   ebx
6501318a:	call   eax
6501318c:	test   esi,esi
6501318e:	je     0x65013195
65013190:	cmp    esi,0x3
65013193:	jne    0x650131bb
65013195:	push   edi
65013196:	push   esi
65013197:	push   ebx
65013198:	call   0x65012f1b
6501319d:	test   eax,eax
6501319f:	jne    0x650131a4
650131a1:	and    DWORD PTR [ebp-0x1c],eax
650131a4:	cmp    DWORD PTR [ebp-0x1c],0x0
650131a8:	je     0x650131bb
650131aa:	mov    eax,ds:0x65024ca0
650131af:	test   eax,eax
650131b1:	je     0x650131bb
650131b3:	push   edi
650131b4:	push   esi
650131b5:	push   ebx
650131b6:	call   eax
650131b8:	mov    DWORD PTR [ebp-0x1c],eax
650131bb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650131c2:	mov    eax,DWORD PTR [ebp-0x1c]
650131c5:	jmp    0x650131e4
650131c7:	mov    eax,DWORD PTR [ebp-0x14]
650131ca:	mov    ecx,DWORD PTR [eax]
650131cc:	mov    ecx,DWORD PTR [ecx]
650131ce:	push   eax
650131cf:	push   ecx
650131d0:	call   0x65018a2b
650131d5:	pop    ecx
650131d6:	pop    ecx
650131d7:	ret    
650131d8:	mov    esp,DWORD PTR [ebp-0x18]
650131db:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650131e2:	xor    eax,eax
650131e4:	call   0x65013d45
650131e9:	ret    
650131ea:	cmp    DWORD PTR [esp+0x8],0x1
650131ef:	jne    0x650131f6
650131f1:	call   0x65018a46
650131f6:	push   DWORD PTR [esp+0x4]
650131fa:	mov    ecx,DWORD PTR [esp+0x10]
650131fe:	mov    edx,DWORD PTR [esp+0xc]
65013202:	call   0x650130f4
65013207:	pop    ecx
65013208:	ret    0xc
6501320b:	mov    eax,DWORD PTR [esp+0x4]
6501320f:	mov    dx,WORD PTR [esp+0x8]
65013214:	jmp    0x6501321d
65013216:	cmp    cx,dx
65013219:	je     0x6501322c
6501321b:	inc    eax
6501321c:	inc    eax
6501321d:	movzx  ecx,WORD PTR [eax]
65013220:	test   cx,cx
65013223:	jne    0x65013216
65013225:	cmp    WORD PTR [eax],dx
65013228:	je     0x6501322c
6501322a:	xor    eax,eax
6501322c:	ret    
6501322d:	cmp    DWORD PTR [esp+0x8],0x0
65013232:	je     0x6501323a
65013234:	mov    BYTE PTR [ecx],0x2d
65013237:	inc    ecx
65013238:	neg    eax
6501323a:	push   esi
6501323b:	mov    esi,ecx
6501323d:	xor    edx,edx
6501323f:	div    DWORD PTR [esp+0x8]
65013243:	cmp    edx,0x9
65013246:	jbe    0x6501324d
65013248:	add    dl,0x57
6501324b:	jmp    0x65013250
6501324d:	add    dl,0x30
65013250:	mov    BYTE PTR [ecx],dl
65013252:	inc    ecx
65013253:	test   eax,eax
65013255:	ja     0x6501323d
65013257:	mov    BYTE PTR [ecx],0x0
6501325a:	dec    ecx
6501325b:	mov    dl,BYTE PTR [esi]
6501325d:	mov    al,BYTE PTR [ecx]
6501325f:	mov    BYTE PTR [ecx],dl
65013261:	dec    ecx
65013262:	mov    BYTE PTR [esi],al
65013264:	inc    esi
65013265:	cmp    esi,ecx
65013267:	jb     0x6501325b
65013269:	pop    esi
6501326a:	ret    0x8
6501326d:	push   ebp
6501326e:	mov    ebp,esp
65013270:	xor    eax,eax
65013272:	cmp    DWORD PTR [ebp+0x10],0xa
65013276:	jne    0x6501327e
65013278:	cmp    DWORD PTR [ebp+0x8],eax
6501327b:	jge    0x6501327e
6501327d:	inc    eax
6501327e:	mov    ecx,DWORD PTR [ebp+0xc]
65013281:	push   eax
65013282:	push   DWORD PTR [ebp+0x10]
65013285:	mov    eax,DWORD PTR [ebp+0x8]
65013288:	call   0x6501322d
6501328d:	mov    eax,DWORD PTR [ebp+0xc]
65013290:	pop    ebp
65013291:	ret    
65013292:	push   ebp
65013293:	mov    ebp,esp
65013295:	sub    esp,0x20
65013298:	push   ebx
65013299:	xor    ebx,ebx
6501329b:	cmp    DWORD PTR [ebp+0xc],ebx
6501329e:	jne    0x650132bd
650132a0:	call   0x65014400
650132a5:	push   ebx
650132a6:	push   ebx
650132a7:	push   ebx
650132a8:	push   ebx
650132a9:	push   ebx
650132aa:	mov    DWORD PTR [eax],0x16
650132b0:	call   0x650122af
650132b5:	add    esp,0x14
650132b8:	or     eax,0xffffffff
650132bb:	jmp    0x6501330a
650132bd:	mov    eax,DWORD PTR [ebp+0x8]
650132c0:	cmp    eax,ebx
650132c2:	je     0x650132a0
650132c4:	push   esi
650132c5:	mov    DWORD PTR [ebp-0x18],eax
650132c8:	mov    DWORD PTR [ebp-0x20],eax
650132cb:	lea    eax,[ebp+0x10]
650132ce:	push   eax
650132cf:	push   ebx
650132d0:	push   DWORD PTR [ebp+0xc]
650132d3:	lea    eax,[ebp-0x20]
650132d6:	push   eax
650132d7:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
650132de:	mov    DWORD PTR [ebp-0x14],0x42
650132e5:	call   0x65018bbf
650132ea:	add    esp,0x10
650132ed:	dec    DWORD PTR [ebp-0x1c]
650132f0:	mov    esi,eax
650132f2:	js     0x650132fb
650132f4:	mov    eax,DWORD PTR [ebp-0x20]
650132f7:	mov    BYTE PTR [eax],bl
650132f9:	jmp    0x65013307
650132fb:	lea    eax,[ebp-0x20]
650132fe:	push   eax
650132ff:	push   ebx
65013300:	call   0x65016845
65013305:	pop    ecx
65013306:	pop    ecx
65013307:	mov    eax,esi
65013309:	pop    esi
6501330a:	pop    ebx
6501330b:	leave  
6501330c:	ret    
6501330d:	lea    eax,[esp+0x10]
65013311:	push   eax
65013312:	push   0x0
65013314:	push   DWORD PTR [esp+0x14]
65013318:	push   DWORD PTR [esp+0x14]
6501331c:	push   DWORD PTR [esp+0x14]
65013320:	call   0x6501961d
65013325:	add    esp,0x14
65013328:	ret    
65013329:	push   ebp
6501332a:	mov    ebp,esp
6501332c:	sub    esp,0x10
6501332f:	push   DWORD PTR [ebp+0xc]
65013332:	lea    ecx,[ebp-0x10]
65013335:	call   0x6501295f
6501333a:	mov    eax,DWORD PTR [ebp-0x10]
6501333d:	cmp    DWORD PTR [eax+0xac],0x1
65013344:	jle    0x65013359
65013346:	lea    eax,[ebp-0x10]
65013349:	push   eax
6501334a:	push   0x4
6501334c:	push   DWORD PTR [ebp+0x8]
6501334f:	call   0x650196a3
65013354:	add    esp,0xc
65013357:	jmp    0x65013369
65013359:	mov    eax,DWORD PTR [eax+0xc8]
6501335f:	mov    ecx,DWORD PTR [ebp+0x8]
65013362:	movzx  eax,BYTE PTR [eax+ecx*2]
65013366:	and    eax,0x4
65013369:	cmp    BYTE PTR [ebp-0x4],0x0
6501336d:	je     0x65013376
6501336f:	mov    ecx,DWORD PTR [ebp-0x8]
65013372:	and    DWORD PTR [ecx+0x70],0xfffffffd
65013376:	leave  
65013377:	ret    
65013378:	cmp    DWORD PTR ds:0x6502d954,0x0
6501337f:	jne    0x65013393
65013381:	mov    eax,DWORD PTR [esp+0x4]
65013385:	mov    ecx,DWORD PTR ds:0x6502c860
6501338b:	movzx  eax,BYTE PTR [ecx+eax*2]
6501338f:	and    eax,0x4
65013392:	ret    
65013393:	push   0x0
65013395:	push   DWORD PTR [esp+0x8]
65013399:	call   0x65013329
6501339e:	pop    ecx
6501339f:	pop    ecx
650133a0:	ret    
650133a1:	push   ebp
650133a2:	mov    ebp,esp
650133a4:	sub    esp,0x10
650133a7:	push   DWORD PTR [ebp+0xc]
650133aa:	lea    ecx,[ebp-0x10]
650133ad:	call   0x6501295f
650133b2:	mov    eax,DWORD PTR [ebp-0x10]
650133b5:	cmp    DWORD PTR [eax+0xac],0x1
650133bc:	jle    0x650133d1
650133be:	lea    eax,[ebp-0x10]
650133c1:	push   eax
650133c2:	push   0x8
650133c4:	push   DWORD PTR [ebp+0x8]
650133c7:	call   0x650196a3
650133cc:	add    esp,0xc
650133cf:	jmp    0x650133e1
650133d1:	mov    eax,DWORD PTR [eax+0xc8]
650133d7:	mov    ecx,DWORD PTR [ebp+0x8]
650133da:	movzx  eax,BYTE PTR [eax+ecx*2]
650133de:	and    eax,0x8
650133e1:	cmp    BYTE PTR [ebp-0x4],0x0
650133e5:	je     0x650133ee
650133e7:	mov    ecx,DWORD PTR [ebp-0x8]
650133ea:	and    DWORD PTR [ecx+0x70],0xfffffffd
650133ee:	leave  
650133ef:	ret    
650133f0:	cmp    DWORD PTR ds:0x6502d954,0x0
650133f7:	jne    0x6501340b
650133f9:	mov    eax,DWORD PTR [esp+0x4]
650133fd:	mov    ecx,DWORD PTR ds:0x6502c860
65013403:	movzx  eax,BYTE PTR [ecx+eax*2]
65013407:	and    eax,0x8
6501340a:	ret    
6501340b:	push   0x0
6501340d:	push   DWORD PTR [esp+0x8]
65013411:	call   0x650133a1
65013416:	pop    ecx
65013417:	pop    ecx
65013418:	ret    
65013419:	push   ebp
6501341a:	mov    ebp,esp
6501341c:	sub    esp,0x10
6501341f:	push   DWORD PTR [ebp+0xc]
65013422:	lea    ecx,[ebp-0x10]
65013425:	call   0x6501295f
6501342a:	mov    eax,DWORD PTR [ebp-0x10]
6501342d:	cmp    DWORD PTR [eax+0xac],0x1
65013434:	jle    0x6501344c
65013436:	lea    eax,[ebp-0x10]
65013439:	push   eax
6501343a:	push   0x157
6501343f:	push   DWORD PTR [ebp+0x8]
65013442:	call   0x650196a3
65013447:	add    esp,0xc
6501344a:	jmp    0x6501345e
6501344c:	mov    eax,DWORD PTR [eax+0xc8]
65013452:	mov    ecx,DWORD PTR [ebp+0x8]
65013455:	movzx  eax,WORD PTR [eax+ecx*2]
65013459:	and    eax,0x157
6501345e:	cmp    BYTE PTR [ebp-0x4],0x0
65013462:	je     0x6501346b
65013464:	mov    ecx,DWORD PTR [ebp-0x8]
65013467:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501346b:	leave  
6501346c:	ret    
6501346d:	cmp    DWORD PTR ds:0x6502d954,0x0
65013474:	jne    0x6501348a
65013476:	mov    eax,DWORD PTR [esp+0x4]
6501347a:	mov    ecx,DWORD PTR ds:0x6502c860
65013480:	movzx  eax,WORD PTR [ecx+eax*2]
65013484:	and    eax,0x157
65013489:	ret    
6501348a:	push   0x0
6501348c:	push   DWORD PTR [esp+0x8]
65013490:	call   0x65013419
65013495:	pop    ecx
65013496:	pop    ecx
65013497:	ret    
65013498:	push   ebp
65013499:	mov    ebp,esp
6501349b:	sub    esp,0x18
6501349e:	push   ebx
6501349f:	push   esi
650134a0:	push   DWORD PTR [ebp+0xc]
650134a3:	lea    ecx,[ebp-0x18]
650134a6:	call   0x6501295f
650134ab:	mov    ebx,DWORD PTR [ebp+0x8]
650134ae:	mov    esi,0x100
650134b3:	cmp    ebx,esi
650134b5:	jae    0x6501350b
650134b7:	mov    ecx,DWORD PTR [ebp-0x18]
650134ba:	cmp    DWORD PTR [ecx+0xac],0x1
650134c1:	jle    0x650134d7
650134c3:	lea    eax,[ebp-0x18]
650134c6:	push   eax
650134c7:	push   0x1
650134c9:	push   ebx
650134ca:	call   0x650196a3
650134cf:	mov    ecx,DWORD PTR [ebp-0x18]
650134d2:	add    esp,0xc
650134d5:	jmp    0x650134e4
650134d7:	mov    eax,DWORD PTR [ecx+0xc8]
650134dd:	movzx  eax,BYTE PTR [eax+ebx*2]
650134e1:	and    eax,0x1
650134e4:	test   eax,eax
650134e6:	je     0x650134f7
650134e8:	mov    eax,DWORD PTR [ecx+0xcc]
650134ee:	movzx  eax,BYTE PTR [eax+ebx*1]
650134f2:	jmp    0x6501359e
650134f7:	cmp    BYTE PTR [ebp-0xc],0x0
650134fb:	je     0x65013504
650134fd:	mov    eax,DWORD PTR [ebp-0x10]
65013500:	and    DWORD PTR [eax+0x70],0xfffffffd
65013504:	mov    eax,ebx
65013506:	jmp    0x650135ab
6501350b:	mov    eax,DWORD PTR [ebp-0x18]
6501350e:	cmp    DWORD PTR [eax+0xac],0x1
65013515:	jle    0x65013548
65013517:	mov    DWORD PTR [ebp+0x8],ebx
6501351a:	sar    DWORD PTR [ebp+0x8],0x8
6501351e:	lea    eax,[ebp-0x18]
65013521:	push   eax
65013522:	mov    eax,DWORD PTR [ebp+0x8]
65013525:	and    eax,0xff
6501352a:	push   eax
6501352b:	call   0x65019b3e
65013530:	test   eax,eax
65013532:	pop    ecx
65013533:	pop    ecx
65013534:	je     0x65013548
65013536:	mov    al,BYTE PTR [ebp+0x8]
65013539:	push   0x2
6501353b:	mov    BYTE PTR [ebp-0x4],al
6501353e:	mov    BYTE PTR [ebp-0x3],bl
65013541:	mov    BYTE PTR [ebp-0x2],0x0
65013545:	pop    ecx
65013546:	jmp    0x6501355d
65013548:	call   0x65014400
6501354d:	mov    DWORD PTR [eax],0x2a
65013553:	xor    ecx,ecx
65013555:	mov    BYTE PTR [ebp-0x4],bl
65013558:	mov    BYTE PTR [ebp-0x3],0x0
6501355c:	inc    ecx
6501355d:	mov    eax,DWORD PTR [ebp-0x18]
65013560:	push   0x1
65013562:	push   DWORD PTR [eax+0x4]
65013565:	lea    edx,[ebp-0x8]
65013568:	push   0x3
6501356a:	push   edx
6501356b:	push   ecx
6501356c:	lea    ecx,[ebp-0x4]
6501356f:	push   ecx
65013570:	push   esi
65013571:	push   DWORD PTR [eax+0x14]
65013574:	lea    eax,[ebp-0x18]
65013577:	push   eax
65013578:	call   0x65019afb
6501357d:	add    esp,0x24
65013580:	test   eax,eax
65013582:	je     0x650134f7
65013588:	cmp    eax,0x1
6501358b:	jne    0x65013593
6501358d:	movzx  eax,BYTE PTR [ebp-0x8]
65013591:	jmp    0x6501359e
65013593:	movzx  ecx,BYTE PTR [ebp-0x7]
65013597:	xor    eax,eax
65013599:	mov    ah,BYTE PTR [ebp-0x8]
6501359c:	or     eax,ecx
6501359e:	cmp    BYTE PTR [ebp-0xc],0x0
650135a2:	je     0x650135ab
650135a4:	mov    ecx,DWORD PTR [ebp-0x10]
650135a7:	and    DWORD PTR [ecx+0x70],0xfffffffd
650135ab:	pop    esi
650135ac:	pop    ebx
650135ad:	leave  
650135ae:	ret    
650135af:	cmp    DWORD PTR ds:0x6502d954,0x0
650135b6:	jne    0x650135c8
650135b8:	mov    eax,DWORD PTR [esp+0x4]
650135bc:	lea    ecx,[eax-0x41]
650135bf:	cmp    ecx,0x19
650135c2:	ja     0x650135d5
650135c4:	add    eax,0x20
650135c7:	ret    
650135c8:	push   0x0
650135ca:	push   DWORD PTR [esp+0x8]
650135ce:	call   0x65013498
650135d3:	pop    ecx
650135d4:	pop    ecx
650135d5:	ret    
650135d6:	push   0xc
650135d8:	push   0x65029898
650135dd:	call   0x65013d00
650135e2:	mov    esi,DWORD PTR [ebp+0x8]
650135e5:	test   esi,esi
650135e7:	je     0x6501365e
650135e9:	cmp    DWORD PTR ds:0x6503143c,0x3
650135f0:	jne    0x65013635
650135f2:	push   0x4
650135f4:	call   0x65019cf8
650135f9:	pop    ecx
650135fa:	and    DWORD PTR [ebp-0x4],0x0
650135fe:	push   esi
650135ff:	call   0x65019d71
65013604:	pop    ecx
65013605:	mov    DWORD PTR [ebp-0x1c],eax
65013608:	test   eax,eax
6501360a:	je     0x65013615
6501360c:	push   esi
6501360d:	push   eax
6501360e:	call   0x65019d9c
65013613:	pop    ecx
65013614:	pop    ecx
65013615:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501361c:	call   0x6501362c
65013621:	cmp    DWORD PTR [ebp-0x1c],0x0
65013625:	jne    0x6501365e
65013627:	push   DWORD PTR [ebp+0x8]
6501362a:	jmp    0x65013636
6501362c:	push   0x4
6501362e:	call   0x65019c20
65013633:	pop    ecx
65013634:	ret    
65013635:	push   esi
65013636:	push   0x0
65013638:	push   DWORD PTR ds:0x6502da8c
6501363e:	call   DWORD PTR ds:0x650240f8
65013644:	test   eax,eax
65013646:	jne    0x6501365e
65013648:	call   0x65014400
6501364d:	mov    esi,eax
6501364f:	call   DWORD PTR ds:0x65024044
65013655:	push   eax
65013656:	call   0x650143c5
6501365b:	mov    DWORD PTR [esi],eax
6501365d:	pop    ecx
6501365e:	call   0x65013d45
65013663:	ret    
65013664:	push   0xc
65013666:	push   0x650298b8
6501366b:	call   0x65013d00
65013670:	and    DWORD PTR [ebp-0x1c],0x0
65013674:	mov    esi,DWORD PTR [ebp+0x8]
65013677:	cmp    esi,DWORD PTR ds:0x6503142c
6501367d:	ja     0x650136a1
6501367f:	push   0x4
65013681:	call   0x65019cf8
65013686:	pop    ecx
65013687:	and    DWORD PTR [ebp-0x4],0x0
6501368b:	push   esi
6501368c:	call   0x6501a545
65013691:	pop    ecx
65013692:	mov    DWORD PTR [ebp-0x1c],eax
65013695:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501369c:	call   0x650136aa
650136a1:	mov    eax,DWORD PTR [ebp-0x1c]
650136a4:	call   0x65013d45
650136a9:	ret    
650136aa:	push   0x4
650136ac:	call   0x65019c20
650136b1:	pop    ecx
650136b2:	ret    
650136b3:	push   ebp
650136b4:	mov    ebp,DWORD PTR [esp+0x8]
650136b8:	cmp    ebp,0xffffffe0
650136bb:	ja     0x65013760
650136c1:	push   ebx
650136c2:	mov    ebx,DWORD PTR ds:0x650240f4
650136c8:	push   esi
650136c9:	push   edi
650136ca:	xor    esi,esi
650136cc:	cmp    DWORD PTR ds:0x6502da8c,esi
650136d2:	mov    edi,ebp
650136d4:	jne    0x650136ee
650136d6:	call   0x6501a9c8
650136db:	push   0x1e
650136dd:	call   0x6501a828
650136e2:	push   0xff
650136e7:	call   0x65015bd0
650136ec:	pop    ecx
650136ed:	pop    ecx
650136ee:	mov    eax,ds:0x6503143c
650136f3:	cmp    eax,0x1
650136f6:	jne    0x65013706
650136f8:	cmp    ebp,esi
650136fa:	je     0x65013700
650136fc:	mov    eax,ebp
650136fe:	jmp    0x65013703
65013700:	xor    eax,eax
65013702:	inc    eax
65013703:	push   eax
65013704:	jmp    0x65013724
65013706:	cmp    eax,0x3
65013709:	jne    0x65013716
6501370b:	push   ebp
6501370c:	call   0x65013664
65013711:	cmp    eax,esi
65013713:	pop    ecx
65013714:	jne    0x6501372d
65013716:	cmp    ebp,esi
65013718:	jne    0x6501371d
6501371a:	xor    edi,edi
6501371c:	inc    edi
6501371d:	add    edi,0xf
65013720:	and    edi,0xfffffff0
65013723:	push   edi
65013724:	push   esi
65013725:	push   DWORD PTR ds:0x6502da8c
6501372b:	call   ebx
6501372d:	mov    esi,eax
6501372f:	test   esi,esi
65013731:	jne    0x65013759
65013733:	cmp    DWORD PTR ds:0x6502df04,eax
65013739:	push   0xc
6501373b:	pop    edi
6501373c:	je     0x6501374b
6501373e:	push   ebp
6501373f:	call   0x65014a7b
65013744:	test   eax,eax
65013746:	pop    ecx
65013747:	jne    0x650136ca
65013749:	jmp    0x65013752
6501374b:	call   0x65014400
65013750:	mov    DWORD PTR [eax],edi
65013752:	call   0x65014400
65013757:	mov    DWORD PTR [eax],edi
65013759:	pop    edi
6501375a:	mov    eax,esi
6501375c:	pop    esi
6501375d:	pop    ebx
6501375e:	pop    ebp
6501375f:	ret    
65013760:	push   ebp
65013761:	call   0x65014a7b
65013766:	pop    ecx
65013767:	call   0x65014400
6501376c:	mov    DWORD PTR [eax],0xc
65013772:	xor    eax,eax
65013774:	pop    ebp
65013775:	ret    
65013776:	int3   
65013777:	int3   
65013778:	int3   
65013779:	int3   
6501377a:	int3   
6501377b:	int3   
6501377c:	int3   
6501377d:	int3   
6501377e:	int3   
6501377f:	int3   
65013780:	push   ebp
65013781:	mov    ebp,esp
65013783:	push   edi
65013784:	push   esi
65013785:	mov    esi,DWORD PTR [ebp+0xc]
65013788:	mov    ecx,DWORD PTR [ebp+0x10]
6501378b:	mov    edi,DWORD PTR [ebp+0x8]
6501378e:	mov    eax,ecx
65013790:	mov    edx,ecx
65013792:	add    eax,esi
65013794:	cmp    edi,esi
65013796:	jbe    0x650137a0
65013798:	cmp    edi,eax
6501379a:	jb     0x65013944
650137a0:	cmp    ecx,0x100
650137a6:	jb     0x650137c7
650137a8:	cmp    DWORD PTR ds:0x65031564,0x0
650137af:	je     0x650137c7
650137b1:	push   edi
650137b2:	push   esi
650137b3:	and    edi,0xf
650137b6:	and    esi,0xf
650137b9:	cmp    edi,esi
650137bb:	pop    esi
650137bc:	pop    edi
650137bd:	jne    0x650137c7
650137bf:	pop    esi
650137c0:	pop    edi
650137c1:	pop    ebp
650137c2:	jmp    0x6501aa88
650137c7:	test   edi,0x3
650137cd:	jne    0x650137e4
650137cf:	shr    ecx,0x2
650137d2:	and    edx,0x3
650137d5:	cmp    ecx,0x8
650137d8:	jb     0x65013804
650137da:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650137dc:	jmp    DWORD PTR [edx*4+0x650138f4]
650137e3:	nop
650137e4:	mov    eax,edi
650137e6:	mov    edx,0x3
650137eb:	sub    ecx,0x4
650137ee:	jb     0x650137fc
650137f0:	and    eax,0x3
650137f3:	add    ecx,eax
650137f5:	jmp    DWORD PTR [eax*4+0x65013808]
650137fc:	jmp    DWORD PTR [ecx*4+0x65013904]
65013803:	nop
65013804:	jmp    DWORD PTR [ecx*4+0x65013888]
6501380b:	nop
6501380c:	sbb    BYTE PTR [eax],bh
6501380e:	add    DWORD PTR [ebp+0x44],esp
65013811:	cmp    BYTE PTR [ecx],al
65013813:	gs push 0x23650138
65013819:	ror    DWORD PTR [edx-0x75f877fa],1
6501381f:	inc    esi
65013820:	add    DWORD PTR [eax+0x468a0147],ecx
65013826:	add    al,cl
65013828:	jmp    0x6748c02f
6501382d:	add    esi,0x3
65013830:	add    edi,0x3
65013833:	cmp    ecx,0x8
65013836:	jb     0x65013804
65013838:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501383a:	jmp    DWORD PTR [edx*4+0x650138f4]
65013841:	lea    ecx,[ecx+0x0]
65013844:	and    edx,ecx
65013846:	mov    al,BYTE PTR [esi]
65013848:	mov    BYTE PTR [edi],al
6501384a:	mov    al,BYTE PTR [esi+0x1]
6501384d:	shr    ecx,0x2
65013850:	mov    BYTE PTR [edi+0x1],al
65013853:	add    esi,0x2
65013856:	add    edi,0x2
65013859:	cmp    ecx,0x8
6501385c:	jb     0x65013804
6501385e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65013860:	jmp    DWORD PTR [edx*4+0x650138f4]
65013867:	nop
65013868:	and    edx,ecx
6501386a:	mov    al,BYTE PTR [esi]
6501386c:	mov    BYTE PTR [edi],al
6501386e:	add    esi,0x1
65013871:	shr    ecx,0x2
65013874:	add    edi,0x1
65013877:	cmp    ecx,0x8
6501387a:	jb     0x65013804
6501387c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501387e:	jmp    DWORD PTR [edx*4+0x650138f4]
65013885:	lea    ecx,[ecx+0x0]
65013888:	jmp    0x650138c2
6501388a:	add    DWORD PTR [ebp-0x28],esp
6501388d:	cmp    BYTE PTR [ecx],al
6501388f:	sar    BYTE PTR gs:[eax],1
65013892:	add    DWORD PTR [ebp-0x38],esp
65013895:	cmp    BYTE PTR [ecx],al
65013897:	sar    BYTE PTR gs:[eax],0x1
6501389b:	gs mov eax,0xb0650138
650138a1:	cmp    BYTE PTR [ecx],al
650138a3:	gs test al,0x38
650138a6:	add    DWORD PTR [ebp-0x75],esp
650138a9:	inc    esp
650138aa:	mov    fs,esp
650138ac:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
650138b0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
650138b4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
650138b8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
650138bc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
650138c0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
650138c4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
650138c8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
650138cc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
650138d0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
650138d4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
650138d8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
650138dc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
650138e0:	lea    eax,[ecx*4+0x0]
650138e7:	add    esi,eax
650138e9:	add    edi,eax
650138eb:	jmp    DWORD PTR [edx*4+0x650138f4]
650138f2:	mov    edi,edi
650138f4:	add    al,0x39
650138f6:	add    DWORD PTR [ebp+0xc],esp
650138f9:	cmp    DWORD PTR [ecx],eax
650138fb:	sbb    BYTE PTR gs:[ecx],bh
650138fe:	add    DWORD PTR [ebp+0x2c],esp
65013901:	cmp    DWORD PTR [ecx],eax
65013903:	mov    eax,DWORD PTR gs:[ebp+0x8]
65013907:	pop    esi
65013908:	pop    edi
65013909:	leave  
6501390a:	ret    
6501390b:	nop
6501390c:	mov    al,BYTE PTR [esi]
6501390e:	mov    BYTE PTR [edi],al
65013910:	mov    eax,DWORD PTR [ebp+0x8]
65013913:	pop    esi
65013914:	pop    edi
65013915:	leave  
65013916:	ret    
65013917:	nop
65013918:	mov    al,BYTE PTR [esi]
6501391a:	mov    BYTE PTR [edi],al
6501391c:	mov    al,BYTE PTR [esi+0x1]
6501391f:	mov    BYTE PTR [edi+0x1],al
65013922:	mov    eax,DWORD PTR [ebp+0x8]
65013925:	pop    esi
65013926:	pop    edi
65013927:	leave  
65013928:	ret    
65013929:	lea    ecx,[ecx+0x0]
6501392c:	mov    al,BYTE PTR [esi]
6501392e:	mov    BYTE PTR [edi],al
65013930:	mov    al,BYTE PTR [esi+0x1]
65013933:	mov    BYTE PTR [edi+0x1],al
65013936:	mov    al,BYTE PTR [esi+0x2]
65013939:	mov    BYTE PTR [edi+0x2],al
6501393c:	mov    eax,DWORD PTR [ebp+0x8]
6501393f:	pop    esi
65013940:	pop    edi
65013941:	leave  
65013942:	ret    
65013943:	nop
65013944:	lea    esi,[ecx+esi*1-0x4]
65013948:	lea    edi,[ecx+edi*1-0x4]
6501394c:	test   edi,0x3
65013952:	jne    0x65013978
65013954:	shr    ecx,0x2
65013957:	and    edx,0x3
6501395a:	cmp    ecx,0x8
6501395d:	jb     0x6501396c
6501395f:	std    
65013960:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65013962:	cld    
65013963:	jmp    DWORD PTR [edx*4+0x65013a90]
6501396a:	mov    edi,edi
6501396c:	neg    ecx
6501396e:	jmp    DWORD PTR [ecx*4+0x65013a40]
65013975:	lea    ecx,[ecx+0x0]
65013978:	mov    eax,edi
6501397a:	mov    edx,0x3
6501397f:	cmp    ecx,0x4
65013982:	jb     0x65013990
65013984:	and    eax,0x3
65013987:	sub    ecx,eax
65013989:	jmp    DWORD PTR [eax*4+0x65013994]
65013990:	jmp    DWORD PTR [ecx*4+0x65013a90]
65013997:	nop
65013998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
65013999:	cmp    DWORD PTR [ecx],eax
6501399b:	gs enter 0x139,0x65
650139a0:	lock cmp DWORD PTR [ecx],eax
650139a3:	mov    al,BYTE PTR gs:[esi+0x3]
650139a7:	and    edx,ecx
650139a9:	mov    BYTE PTR [edi+0x3],al
650139ac:	sub    esi,0x1
650139af:	shr    ecx,0x2
650139b2:	sub    edi,0x1
650139b5:	cmp    ecx,0x8
650139b8:	jb     0x6501396c
650139ba:	std    
650139bb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650139bd:	cld    
650139be:	jmp    DWORD PTR [edx*4+0x65013a90]
650139c5:	lea    ecx,[ecx+0x0]
650139c8:	mov    al,BYTE PTR [esi+0x3]
650139cb:	and    edx,ecx
650139cd:	mov    BYTE PTR [edi+0x3],al
650139d0:	mov    al,BYTE PTR [esi+0x2]
650139d3:	shr    ecx,0x2
650139d6:	mov    BYTE PTR [edi+0x2],al
650139d9:	sub    esi,0x2
650139dc:	sub    edi,0x2
650139df:	cmp    ecx,0x8
650139e2:	jb     0x6501396c
650139e4:	std    
650139e5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650139e7:	cld    
650139e8:	jmp    DWORD PTR [edx*4+0x65013a90]
650139ef:	nop
650139f0:	mov    al,BYTE PTR [esi+0x3]
650139f3:	and    edx,ecx
650139f5:	mov    BYTE PTR [edi+0x3],al
650139f8:	mov    al,BYTE PTR [esi+0x2]
650139fb:	mov    BYTE PTR [edi+0x2],al
650139fe:	mov    al,BYTE PTR [esi+0x1]
65013a01:	shr    ecx,0x2
65013a04:	mov    BYTE PTR [edi+0x1],al
65013a07:	sub    esi,0x3
65013a0a:	sub    edi,0x3
65013a0d:	cmp    ecx,0x8
65013a10:	jb     0x6501396c
65013a16:	std    
65013a17:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65013a19:	cld    
65013a1a:	jmp    DWORD PTR [edx*4+0x65013a90]
65013a21:	lea    ecx,[ecx+0x0]
65013a24:	inc    esp
65013a25:	cmp    al,BYTE PTR [ecx]
65013a27:	gs dec esp
65013a29:	cmp    al,BYTE PTR [ecx]
65013a2b:	gs push esp
65013a2d:	cmp    al,BYTE PTR [ecx]
65013a2f:	gs pop esp
65013a31:	cmp    al,BYTE PTR [ecx]
65013a33:	gs cmp al,BYTE PTR fs:[ecx]
65013a37:	gs ins BYTE PTR es:[edi],dx
65013a39:	cmp    al,BYTE PTR [ecx]
65013a3b:	gs je  0x65013a78
65013a3e:	add    DWORD PTR [ebp-0x79],esp
65013a41:	cmp    al,BYTE PTR [ecx]
65013a43:	mov    eax,DWORD PTR gs:[esi+ecx*4+0x1c]
65013a48:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
65013a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
65013a50:	mov    DWORD PTR [edi+ecx*4+0x18],eax
65013a54:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
65013a58:	mov    DWORD PTR [edi+ecx*4+0x14],eax
65013a5c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
65013a60:	mov    DWORD PTR [edi+ecx*4+0x10],eax
65013a64:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
65013a68:	mov    DWORD PTR [edi+ecx*4+0xc],eax
65013a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
65013a70:	mov    DWORD PTR [edi+ecx*4+0x8],eax
65013a74:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
65013a78:	mov    DWORD PTR [edi+ecx*4+0x4],eax
65013a7c:	lea    eax,[ecx*4+0x0]
65013a83:	add    esi,eax
65013a85:	add    edi,eax
65013a87:	jmp    DWORD PTR [edx*4+0x65013a90]
65013a8e:	mov    edi,edi
65013a90:	mov    al,ds:0xa865013a
65013a95:	cmp    al,BYTE PTR [ecx]
65013a97:	gs mov eax,0xcc65013a
65013a9d:	cmp    al,BYTE PTR [ecx]
65013a9f:	mov    eax,DWORD PTR gs:[ebp+0x8]
65013aa3:	pop    esi
65013aa4:	pop    edi
65013aa5:	leave  
65013aa6:	ret    
65013aa7:	nop
65013aa8:	mov    al,BYTE PTR [esi+0x3]
65013aab:	mov    BYTE PTR [edi+0x3],al
65013aae:	mov    eax,DWORD PTR [ebp+0x8]
65013ab1:	pop    esi
65013ab2:	pop    edi
65013ab3:	leave  
65013ab4:	ret    
65013ab5:	lea    ecx,[ecx+0x0]
65013ab8:	mov    al,BYTE PTR [esi+0x3]
65013abb:	mov    BYTE PTR [edi+0x3],al
65013abe:	mov    al,BYTE PTR [esi+0x2]
65013ac1:	mov    BYTE PTR [edi+0x2],al
65013ac4:	mov    eax,DWORD PTR [ebp+0x8]
65013ac7:	pop    esi
65013ac8:	pop    edi
65013ac9:	leave  
65013aca:	ret    
65013acb:	nop
65013acc:	mov    al,BYTE PTR [esi+0x3]
65013acf:	mov    BYTE PTR [edi+0x3],al
65013ad2:	mov    al,BYTE PTR [esi+0x2]
65013ad5:	mov    BYTE PTR [edi+0x2],al
65013ad8:	mov    al,BYTE PTR [esi+0x1]
65013adb:	mov    BYTE PTR [edi+0x1],al
65013ade:	mov    eax,DWORD PTR [ebp+0x8]
65013ae1:	pop    esi
65013ae2:	pop    edi
65013ae3:	leave  
65013ae4:	ret    
65013ae5:	push   0x10
65013ae7:	push   0x650298d8
65013aec:	call   0x65013d00
65013af1:	mov    ebx,DWORD PTR [ebp+0x8]
65013af4:	test   ebx,ebx
65013af6:	jne    0x65013b06
65013af8:	push   DWORD PTR [ebp+0xc]
65013afb:	call   0x650136b3
65013b00:	pop    ecx
65013b01:	jmp    0x65013cd2
65013b06:	mov    esi,DWORD PTR [ebp+0xc]
65013b09:	test   esi,esi
65013b0b:	jne    0x65013b19
65013b0d:	push   ebx
65013b0e:	call   0x650135d6
65013b13:	pop    ecx
65013b14:	jmp    0x65013cd0
65013b19:	cmp    DWORD PTR ds:0x6503143c,0x3
65013b20:	jne    0x65013cb9
65013b26:	xor    edi,edi
65013b28:	mov    DWORD PTR [ebp-0x1c],edi
65013b2b:	cmp    esi,0xffffffe0
65013b2e:	ja     0x65013cbe
65013b34:	push   0x4
65013b36:	call   0x65019cf8
65013b3b:	pop    ecx
65013b3c:	mov    DWORD PTR [ebp-0x4],edi
65013b3f:	push   ebx
65013b40:	call   0x65019d71
65013b45:	pop    ecx
65013b46:	mov    DWORD PTR [ebp-0x20],eax
65013b49:	cmp    eax,edi
65013b4b:	je     0x65013bef
65013b51:	cmp    esi,DWORD PTR ds:0x6503142c
65013b57:	ja     0x65013ba2
65013b59:	push   esi
65013b5a:	push   ebx
65013b5b:	push   eax
65013b5c:	call   0x6501a266
65013b61:	add    esp,0xc
65013b64:	test   eax,eax
65013b66:	je     0x65013b6d
65013b68:	mov    DWORD PTR [ebp-0x1c],ebx
65013b6b:	jmp    0x65013ba2
65013b6d:	push   esi
65013b6e:	call   0x6501a545
65013b73:	pop    ecx
65013b74:	mov    DWORD PTR [ebp-0x1c],eax
65013b77:	cmp    eax,edi
65013b79:	je     0x65013ba2
65013b7b:	mov    eax,DWORD PTR [ebx-0x4]
65013b7e:	dec    eax
65013b7f:	cmp    eax,esi
65013b81:	jb     0x65013b85
65013b83:	mov    eax,esi
65013b85:	push   eax
65013b86:	push   ebx
65013b87:	push   DWORD PTR [ebp-0x1c]
65013b8a:	call   0x65014060
65013b8f:	push   ebx
65013b90:	call   0x65019d71
65013b95:	mov    DWORD PTR [ebp-0x20],eax
65013b98:	push   ebx
65013b99:	push   eax
65013b9a:	call   0x65019d9c
65013b9f:	add    esp,0x18
65013ba2:	cmp    DWORD PTR [ebp-0x1c],edi
65013ba5:	jne    0x65013bef
65013ba7:	cmp    esi,edi
65013ba9:	jne    0x65013bb1
65013bab:	xor    esi,esi
65013bad:	inc    esi
65013bae:	mov    DWORD PTR [ebp+0xc],esi
65013bb1:	add    esi,0xf
65013bb4:	and    esi,0xfffffff0
65013bb7:	mov    DWORD PTR [ebp+0xc],esi
65013bba:	push   esi
65013bbb:	push   edi
65013bbc:	push   DWORD PTR ds:0x6502da8c
65013bc2:	call   DWORD PTR ds:0x650240f4
65013bc8:	mov    DWORD PTR [ebp-0x1c],eax
65013bcb:	cmp    eax,edi
65013bcd:	je     0x65013bef
65013bcf:	mov    eax,DWORD PTR [ebx-0x4]
65013bd2:	dec    eax
65013bd3:	cmp    eax,esi
65013bd5:	jb     0x65013bd9
65013bd7:	mov    eax,esi
65013bd9:	push   eax
65013bda:	push   ebx
65013bdb:	push   DWORD PTR [ebp-0x1c]
65013bde:	call   0x65014060
65013be3:	push   ebx
65013be4:	push   DWORD PTR [ebp-0x20]
65013be7:	call   0x65019d9c
65013bec:	add    esp,0x14
65013bef:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65013bf6:	call   0x65013c29
65013bfb:	cmp    DWORD PTR [ebp-0x20],0x0
65013bff:	jne    0x65013c32
65013c01:	test   esi,esi
65013c03:	jne    0x65013c06
65013c05:	inc    esi
65013c06:	add    esi,0xf
65013c09:	and    esi,0xfffffff0
65013c0c:	mov    DWORD PTR [ebp+0xc],esi
65013c0f:	push   esi
65013c10:	push   ebx
65013c11:	push   0x0
65013c13:	push   DWORD PTR ds:0x6502da8c
65013c19:	call   DWORD PTR ds:0x650240fc
65013c1f:	mov    edi,eax
65013c21:	jmp    0x65013c35
65013c23:	mov    esi,DWORD PTR [ebp+0xc]
65013c26:	mov    ebx,DWORD PTR [ebp+0x8]
65013c29:	push   0x4
65013c2b:	call   0x65019c20
65013c30:	pop    ecx
65013c31:	ret    
65013c32:	mov    edi,DWORD PTR [ebp-0x1c]
65013c35:	test   edi,edi
65013c37:	jne    0x65013cfc
65013c3d:	cmp    DWORD PTR ds:0x6502df04,edi
65013c43:	je     0x65013c71
65013c45:	push   esi
65013c46:	call   0x65014a7b
65013c4b:	pop    ecx
65013c4c:	test   eax,eax
65013c4e:	jne    0x65013b26
65013c54:	call   0x65014400
65013c59:	cmp    DWORD PTR [ebp-0x20],edi
65013c5c:	jne    0x65013cca
65013c5e:	mov    esi,eax
65013c60:	call   DWORD PTR ds:0x65024044
65013c66:	push   eax
65013c67:	call   0x650143c5
65013c6c:	pop    ecx
65013c6d:	mov    DWORD PTR [esi],eax
65013c6f:	jmp    0x65013cd0
65013c71:	test   edi,edi
65013c73:	jne    0x65013cfc
65013c79:	call   0x65014400
65013c7e:	cmp    DWORD PTR [ebp-0x20],edi
65013c81:	je     0x65013ceb
65013c83:	mov    DWORD PTR [eax],0xc
65013c89:	jmp    0x65013cfc
65013c8b:	test   esi,esi
65013c8d:	jne    0x65013c90
65013c8f:	inc    esi
65013c90:	push   esi
65013c91:	push   ebx
65013c92:	push   0x0
65013c94:	push   DWORD PTR ds:0x6502da8c
65013c9a:	call   DWORD PTR ds:0x650240fc
65013ca0:	mov    edi,eax
65013ca2:	test   edi,edi
65013ca4:	jne    0x65013cfc
65013ca6:	cmp    DWORD PTR ds:0x6502df04,eax
65013cac:	je     0x65013ce2
65013cae:	push   esi
65013caf:	call   0x65014a7b
65013cb4:	pop    ecx
65013cb5:	test   eax,eax
65013cb7:	je     0x65013cd8
65013cb9:	cmp    esi,0xffffffe0
65013cbc:	jbe    0x65013c8b
65013cbe:	push   esi
65013cbf:	call   0x65014a7b
65013cc4:	pop    ecx
65013cc5:	call   0x65014400
65013cca:	mov    DWORD PTR [eax],0xc
65013cd0:	xor    eax,eax
65013cd2:	call   0x65013d45
65013cd7:	ret    
65013cd8:	call   0x65014400
65013cdd:	jmp    0x65013c5e
65013ce2:	test   edi,edi
65013ce4:	jne    0x65013cfc
65013ce6:	call   0x65014400
65013ceb:	mov    esi,eax
65013ced:	call   DWORD PTR ds:0x65024044
65013cf3:	push   eax
65013cf4:	call   0x650143c5
65013cf9:	mov    DWORD PTR [esi],eax
65013cfb:	pop    ecx
65013cfc:	mov    eax,edi
65013cfe:	jmp    0x65013cd2
65013d00:	push   0x65013d60
65013d05:	push   DWORD PTR fs:0x0
65013d0c:	mov    eax,DWORD PTR [esp+0x10]
65013d10:	mov    DWORD PTR [esp+0x10],ebp
65013d14:	lea    ebp,[esp+0x10]
65013d18:	sub    esp,eax
65013d1a:	push   ebx
65013d1b:	push   esi
65013d1c:	push   edi
65013d1d:	mov    eax,ds:0x6502c09c
65013d22:	xor    DWORD PTR [ebp-0x4],eax
65013d25:	xor    eax,ebp
65013d27:	push   eax
65013d28:	mov    DWORD PTR [ebp-0x18],esp
65013d2b:	push   DWORD PTR [ebp-0x8]
65013d2e:	mov    eax,DWORD PTR [ebp-0x4]
65013d31:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65013d38:	mov    DWORD PTR [ebp-0x8],eax
65013d3b:	lea    eax,[ebp-0x10]
65013d3e:	mov    fs:0x0,eax
65013d44:	ret    
65013d45:	mov    ecx,DWORD PTR [ebp-0x10]
65013d48:	mov    DWORD PTR fs:0x0,ecx
65013d4f:	pop    ecx
65013d50:	pop    edi
65013d51:	pop    edi
65013d52:	pop    esi
65013d53:	pop    ebx
65013d54:	mov    esp,ebp
65013d56:	pop    ebp
65013d57:	push   ecx
65013d58:	ret    
65013d59:	int3   
65013d5a:	int3   
65013d5b:	int3   
65013d5c:	int3   
65013d5d:	int3   
65013d5e:	int3   
65013d5f:	int3   
65013d60:	sub    esp,0x14
65013d63:	push   ebx
65013d64:	mov    ebx,DWORD PTR [esp+0x20]
65013d68:	push   ebp
65013d69:	push   esi
65013d6a:	mov    esi,DWORD PTR [ebx+0x8]
65013d6d:	xor    esi,DWORD PTR ds:0x6502c09c
65013d73:	push   edi
65013d74:	mov    eax,DWORD PTR [esi]
65013d76:	cmp    eax,0xfffffffe
65013d79:	mov    BYTE PTR [esp+0x13],0x0
65013d7e:	mov    DWORD PTR [esp+0x18],0x1
65013d86:	lea    edi,[ebx+0x10]
65013d89:	je     0x65013d98
65013d8b:	mov    ecx,DWORD PTR [esi+0x4]
65013d8e:	add    ecx,edi
65013d90:	xor    ecx,DWORD PTR [eax+edi*1]
65013d93:	call   0x650127bc
65013d98:	mov    ecx,DWORD PTR [esi+0xc]
65013d9b:	mov    eax,DWORD PTR [esi+0x8]
65013d9e:	add    ecx,edi
65013da0:	xor    ecx,DWORD PTR [eax+edi*1]
65013da3:	call   0x650127bc
65013da8:	mov    eax,DWORD PTR [esp+0x28]
65013dac:	test   BYTE PTR [eax+0x4],0x66
65013db0:	jne    0x65013ed5
65013db6:	mov    ebp,DWORD PTR [ebx+0xc]
65013db9:	cmp    ebp,0xfffffffe
65013dbc:	mov    ecx,DWORD PTR [esp+0x30]
65013dc0:	lea    edx,[esp+0x1c]
65013dc4:	mov    DWORD PTR [esp+0x1c],eax
65013dc8:	mov    DWORD PTR [esp+0x20],ecx
65013dcc:	mov    DWORD PTR [ebx-0x4],edx
65013dcf:	je     0x65013e2f
65013dd1:	lea    eax,[ebp+ebp*2+0x0]
65013dd5:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
65013dd9:	test   ecx,ecx
65013ddb:	lea    ebx,[esi+eax*4+0x10]
65013ddf:	mov    eax,DWORD PTR [ebx]
65013de1:	mov    DWORD PTR [esp+0x14],eax
65013de5:	je     0x65013dfd
65013de7:	mov    edx,edi
65013de9:	call   0x6501ac5e
65013dee:	test   eax,eax
65013df0:	mov    BYTE PTR [esp+0x13],0x1
65013df5:	jl     0x65013e3b
65013df7:	jg     0x65013e45
65013df9:	mov    eax,DWORD PTR [esp+0x14]
65013dfd:	cmp    eax,0xfffffffe
65013e00:	mov    ebp,eax
65013e02:	jne    0x65013dd1
65013e04:	cmp    BYTE PTR [esp+0x13],0x0
65013e09:	je     0x65013e2f
65013e0b:	mov    eax,DWORD PTR [esi]
65013e0d:	cmp    eax,0xfffffffe
65013e10:	je     0x65013e1f
65013e12:	mov    ecx,DWORD PTR [esi+0x4]
65013e15:	add    ecx,edi
65013e17:	xor    ecx,DWORD PTR [eax+edi*1]
65013e1a:	call   0x650127bc
65013e1f:	mov    ecx,DWORD PTR [esi+0xc]
65013e22:	mov    eax,DWORD PTR [esi+0x8]
65013e25:	add    ecx,edi
65013e27:	xor    ecx,DWORD PTR [eax+edi*1]
65013e2a:	call   0x650127bc
65013e2f:	mov    eax,DWORD PTR [esp+0x18]
65013e33:	pop    edi
65013e34:	pop    esi
65013e35:	pop    ebp
65013e36:	pop    ebx
65013e37:	add    esp,0x14
65013e3a:	ret    
65013e3b:	mov    DWORD PTR [esp+0x18],0x0
65013e43:	jmp    0x65013e0b
65013e45:	mov    ecx,DWORD PTR [esp+0x28]
65013e49:	cmp    DWORD PTR [ecx],0xe06d7363
65013e4f:	jne    0x65013e7b
65013e51:	cmp    DWORD PTR ds:0x65024d08,0x0
65013e58:	je     0x65013e7b
65013e5a:	push   0x65024d08
65013e5f:	call   0x6501ad40
65013e64:	add    esp,0x4
65013e67:	test   eax,eax
65013e69:	je     0x65013e7b
65013e6b:	mov    edx,DWORD PTR [esp+0x28]
65013e6f:	push   0x1
65013e71:	push   edx
65013e72:	call   DWORD PTR ds:0x65024d08
65013e78:	add    esp,0x8
65013e7b:	mov    ecx,DWORD PTR [esp+0x2c]
65013e7f:	call   0x6501ac8e
65013e84:	mov    eax,DWORD PTR [esp+0x2c]
65013e88:	cmp    DWORD PTR [eax+0xc],ebp
65013e8b:	je     0x65013ea0
65013e8d:	push   0x6502c09c
65013e92:	push   edi
65013e93:	mov    edx,ebp
65013e95:	mov    ecx,eax
65013e97:	call   0x6501aca8
65013e9c:	mov    eax,DWORD PTR [esp+0x2c]
65013ea0:	mov    ecx,DWORD PTR [esp+0x14]
65013ea4:	mov    DWORD PTR [eax+0xc],ecx
65013ea7:	mov    eax,DWORD PTR [esi]
65013ea9:	cmp    eax,0xfffffffe
65013eac:	je     0x65013ebb
65013eae:	mov    ecx,DWORD PTR [esi+0x4]
65013eb1:	add    ecx,edi
65013eb3:	xor    ecx,DWORD PTR [eax+edi*1]
65013eb6:	call   0x650127bc
65013ebb:	mov    ecx,DWORD PTR [esi+0xc]
65013ebe:	mov    edx,DWORD PTR [esi+0x8]
65013ec1:	add    ecx,edi
65013ec3:	xor    ecx,DWORD PTR [edx+edi*1]
65013ec6:	call   0x650127bc
65013ecb:	mov    ecx,DWORD PTR [ebx+0x8]
65013ece:	mov    edx,edi
65013ed0:	jmp    0x6501ac75
65013ed5:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
65013ed9:	je     0x65013e2f
65013edf:	push   0x6502c09c
65013ee4:	push   edi
65013ee5:	mov    ecx,ebx
65013ee7:	mov    edx,0xfffffffe
65013eec:	call   0x6501aca8
65013ef1:	jmp    0x65013e0b
65013ef6:	int3   
65013ef7:	int3   
65013ef8:	int3   
65013ef9:	int3   
65013efa:	int3   
65013efb:	int3   
65013efc:	int3   
65013efd:	int3   
65013efe:	int3   
65013eff:	int3   
65013f00:	mov    ecx,DWORD PTR [esp+0x4]
65013f04:	test   ecx,0x3
65013f0a:	je     0x65013f30
65013f0c:	mov    al,BYTE PTR [ecx]
65013f0e:	add    ecx,0x1
65013f11:	test   al,al
65013f13:	je     0x65013f63
65013f15:	test   ecx,0x3
65013f1b:	jne    0x65013f0c
65013f1d:	add    eax,0x0
65013f22:	lea    esp,[esp+0x0]
65013f29:	lea    esp,[esp+0x0]
65013f30:	mov    eax,DWORD PTR [ecx]
65013f32:	mov    edx,0x7efefeff
65013f37:	add    edx,eax
65013f39:	xor    eax,0xffffffff
65013f3c:	xor    eax,edx
65013f3e:	add    ecx,0x4
65013f41:	test   eax,0x81010100
65013f46:	je     0x65013f30
65013f48:	mov    eax,DWORD PTR [ecx-0x4]
65013f4b:	test   al,al
65013f4d:	je     0x65013f81
65013f4f:	test   ah,ah
65013f51:	je     0x65013f77
65013f53:	test   eax,0xff0000
65013f58:	je     0x65013f6d
65013f5a:	test   eax,0xff000000
65013f5f:	je     0x65013f63
65013f61:	jmp    0x65013f30
65013f63:	lea    eax,[ecx-0x1]
65013f66:	mov    ecx,DWORD PTR [esp+0x4]
65013f6a:	sub    eax,ecx
65013f6c:	ret    
65013f6d:	lea    eax,[ecx-0x2]
65013f70:	mov    ecx,DWORD PTR [esp+0x4]
65013f74:	sub    eax,ecx
65013f76:	ret    
65013f77:	lea    eax,[ecx-0x3]
65013f7a:	mov    ecx,DWORD PTR [esp+0x4]
65013f7e:	sub    eax,ecx
65013f80:	ret    
65013f81:	lea    eax,[ecx-0x4]
65013f84:	mov    ecx,DWORD PTR [esp+0x4]
65013f88:	sub    eax,ecx
65013f8a:	ret    
65013f8b:	push   eax
65013f8c:	push   DWORD PTR fs:0x0
65013f93:	lea    eax,[esp+0xc]
65013f97:	sub    esp,DWORD PTR [esp+0xc]
65013f9b:	push   ebx
65013f9c:	push   esi
65013f9d:	push   edi
65013f9e:	mov    DWORD PTR [eax],ebp
65013fa0:	mov    ebp,eax
65013fa2:	mov    eax,ds:0x6502c09c
65013fa7:	xor    eax,ebp
65013fa9:	push   eax
65013faa:	push   DWORD PTR [ebp-0x4]
65013fad:	mov    DWORD PTR [ebp-0x4],0xffffffff
65013fb4:	lea    eax,[ebp-0xc]
65013fb7:	mov    fs:0x0,eax
65013fbd:	ret    
65013fbe:	push   eax
65013fbf:	push   DWORD PTR fs:0x0
65013fc6:	lea    eax,[esp+0xc]
65013fca:	sub    esp,DWORD PTR [esp+0xc]
65013fce:	push   ebx
65013fcf:	push   esi
65013fd0:	push   edi
65013fd1:	mov    DWORD PTR [eax],ebp
65013fd3:	mov    ebp,eax
65013fd5:	mov    eax,ds:0x6502c09c
65013fda:	xor    eax,ebp
65013fdc:	push   eax
65013fdd:	mov    DWORD PTR [ebp-0x10],esp
65013fe0:	push   DWORD PTR [ebp-0x4]
65013fe3:	mov    DWORD PTR [ebp-0x4],0xffffffff
65013fea:	lea    eax,[ebp-0xc]
65013fed:	mov    fs:0x0,eax
65013ff3:	ret    
65013ff4:	mov    ecx,DWORD PTR [esp+0x4]
65013ff8:	push   ebx
65013ff9:	xor    ebx,ebx
65013ffb:	cmp    ecx,ebx
65013ffd:	push   esi
65013ffe:	push   edi
65013fff:	je     0x65014009
65014001:	mov    edi,DWORD PTR [esp+0x14]
65014005:	cmp    edi,ebx
65014007:	ja     0x65014024
65014009:	call   0x65014400
6501400e:	push   0x16
65014010:	pop    esi
65014011:	mov    DWORD PTR [eax],esi
65014013:	push   ebx
65014014:	push   ebx
65014015:	push   ebx
65014016:	push   ebx
65014017:	push   ebx
65014018:	call   0x650122af
6501401d:	add    esp,0x14
65014020:	mov    eax,esi
65014022:	jmp    0x65014055
65014024:	mov    esi,DWORD PTR [esp+0x18]
65014028:	cmp    esi,ebx
6501402a:	jne    0x65014030
6501402c:	mov    BYTE PTR [ecx],bl
6501402e:	jmp    0x65014009
65014030:	mov    edx,ecx
65014032:	mov    al,BYTE PTR [esi]
65014034:	mov    BYTE PTR [edx],al
65014036:	inc    edx
65014037:	inc    esi
65014038:	cmp    al,bl
6501403a:	je     0x6501403f
6501403c:	dec    edi
6501403d:	jne    0x65014032
6501403f:	cmp    edi,ebx
65014041:	jne    0x65014053
65014043:	mov    BYTE PTR [ecx],bl
65014045:	call   0x65014400
6501404a:	push   0x22
6501404c:	pop    ecx
6501404d:	mov    DWORD PTR [eax],ecx
6501404f:	mov    esi,ecx
65014051:	jmp    0x65014013
65014053:	xor    eax,eax
65014055:	pop    edi
65014056:	pop    esi
65014057:	pop    ebx
65014058:	ret    
65014059:	int3   
6501405a:	int3   
6501405b:	int3   
6501405c:	int3   
6501405d:	int3   
6501405e:	int3   
6501405f:	int3   
65014060:	push   ebp
65014061:	mov    ebp,esp
65014063:	push   edi
65014064:	push   esi
65014065:	mov    esi,DWORD PTR [ebp+0xc]
65014068:	mov    ecx,DWORD PTR [ebp+0x10]
6501406b:	mov    edi,DWORD PTR [ebp+0x8]
6501406e:	mov    eax,ecx
65014070:	mov    edx,ecx
65014072:	add    eax,esi
65014074:	cmp    edi,esi
65014076:	jbe    0x65014080
65014078:	cmp    edi,eax
6501407a:	jb     0x65014224
65014080:	cmp    ecx,0x100
65014086:	jb     0x650140a7
65014088:	cmp    DWORD PTR ds:0x65031564,0x0
6501408f:	je     0x650140a7
65014091:	push   edi
65014092:	push   esi
65014093:	and    edi,0xf
65014096:	and    esi,0xf
65014099:	cmp    edi,esi
6501409b:	pop    esi
6501409c:	pop    edi
6501409d:	jne    0x650140a7
6501409f:	pop    esi
650140a0:	pop    edi
650140a1:	pop    ebp
650140a2:	jmp    0x6501aa88
650140a7:	test   edi,0x3
650140ad:	jne    0x650140c4
650140af:	shr    ecx,0x2
650140b2:	and    edx,0x3
650140b5:	cmp    ecx,0x8
650140b8:	jb     0x650140e4
650140ba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650140bc:	jmp    DWORD PTR [edx*4+0x650141d4]
650140c3:	nop
650140c4:	mov    eax,edi
650140c6:	mov    edx,0x3
650140cb:	sub    ecx,0x4
650140ce:	jb     0x650140dc
650140d0:	and    eax,0x3
650140d3:	add    ecx,eax
650140d5:	jmp    DWORD PTR [eax*4+0x650140e8]
650140dc:	jmp    DWORD PTR [ecx*4+0x650141e4]
650140e3:	nop
650140e4:	jmp    DWORD PTR [ecx*4+0x65014168]
650140eb:	nop
650140ec:	clc    
650140ed:	inc    eax
650140ee:	add    DWORD PTR [ebp+0x24],esp
650140f1:	inc    ecx
650140f2:	add    DWORD PTR [ebp+0x48],esp
650140f5:	inc    ecx
650140f6:	add    DWORD PTR [ebp+0x23],esp
650140f9:	ror    DWORD PTR [edx-0x75f877fa],1
650140ff:	inc    esi
65014100:	add    DWORD PTR [eax+0x468a0147],ecx
65014106:	add    al,cl
65014108:	jmp    0x6748c90f
6501410d:	add    esi,0x3
65014110:	add    edi,0x3
65014113:	cmp    ecx,0x8
65014116:	jb     0x650140e4
65014118:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501411a:	jmp    DWORD PTR [edx*4+0x650141d4]
65014121:	lea    ecx,[ecx+0x0]
65014124:	and    edx,ecx
65014126:	mov    al,BYTE PTR [esi]
65014128:	mov    BYTE PTR [edi],al
6501412a:	mov    al,BYTE PTR [esi+0x1]
6501412d:	shr    ecx,0x2
65014130:	mov    BYTE PTR [edi+0x1],al
65014133:	add    esi,0x2
65014136:	add    edi,0x2
65014139:	cmp    ecx,0x8
6501413c:	jb     0x650140e4
6501413e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65014140:	jmp    DWORD PTR [edx*4+0x650141d4]
65014147:	nop
65014148:	and    edx,ecx
6501414a:	mov    al,BYTE PTR [esi]
6501414c:	mov    BYTE PTR [edi],al
6501414e:	add    esi,0x1
65014151:	shr    ecx,0x2
65014154:	add    edi,0x1
65014157:	cmp    ecx,0x8
6501415a:	jb     0x650140e4
6501415c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501415e:	jmp    DWORD PTR [edx*4+0x650141d4]
65014165:	lea    ecx,[ecx+0x0]
65014168:	retf   
65014169:	inc    ecx
6501416a:	add    DWORD PTR [ebp-0x48],esp
6501416d:	inc    ecx
6501416e:	add    DWORD PTR [ebp-0x50],esp
65014171:	inc    ecx
65014172:	add    DWORD PTR [ebp-0x58],esp
65014175:	inc    ecx
65014176:	add    DWORD PTR [ebp-0x60],esp
65014179:	inc    ecx
6501417a:	add    DWORD PTR [ebp-0x68],esp
6501417d:	inc    ecx
6501417e:	add    DWORD PTR [ebp-0x70],esp
65014181:	inc    ecx
65014182:	add    DWORD PTR [ebp-0x78],esp
65014185:	inc    ecx
65014186:	add    DWORD PTR [ebp-0x75],esp
65014189:	inc    esp
6501418a:	mov    fs,esp
6501418c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
65014190:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
65014194:	mov    DWORD PTR [edi+ecx*4-0x18],eax
65014198:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6501419c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
650141a0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
650141a4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
650141a8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
650141ac:	mov    DWORD PTR [edi+ecx*4-0xc],eax
650141b0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
650141b4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
650141b8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
650141bc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
650141c0:	lea    eax,[ecx*4+0x0]
650141c7:	add    esi,eax
650141c9:	add    edi,eax
650141cb:	jmp    DWORD PTR [edx*4+0x650141d4]
650141d2:	mov    edi,edi
650141d4:	in     al,0x41
650141d6:	add    DWORD PTR [ebp-0x14],esp
650141d9:	inc    ecx
650141da:	add    DWORD PTR [ebp-0x8],esp
650141dd:	inc    ecx
650141de:	add    DWORD PTR [ebp+0xc],esp
650141e1:	inc    edx
650141e2:	add    DWORD PTR [ebp-0x75],esp
650141e5:	inc    ebp
650141e6:	or     BYTE PTR [esi+0x5f],bl
650141e9:	leave  
650141ea:	ret    
650141eb:	nop
650141ec:	mov    al,BYTE PTR [esi]
650141ee:	mov    BYTE PTR [edi],al
650141f0:	mov    eax,DWORD PTR [ebp+0x8]
650141f3:	pop    esi
650141f4:	pop    edi
650141f5:	leave  
650141f6:	ret    
650141f7:	nop
650141f8:	mov    al,BYTE PTR [esi]
650141fa:	mov    BYTE PTR [edi],al
650141fc:	mov    al,BYTE PTR [esi+0x1]
650141ff:	mov    BYTE PTR [edi+0x1],al
65014202:	mov    eax,DWORD PTR [ebp+0x8]
65014205:	pop    esi
65014206:	pop    edi
65014207:	leave  
65014208:	ret    
65014209:	lea    ecx,[ecx+0x0]
6501420c:	mov    al,BYTE PTR [esi]
6501420e:	mov    BYTE PTR [edi],al
65014210:	mov    al,BYTE PTR [esi+0x1]
65014213:	mov    BYTE PTR [edi+0x1],al
65014216:	mov    al,BYTE PTR [esi+0x2]
65014219:	mov    BYTE PTR [edi+0x2],al
6501421c:	mov    eax,DWORD PTR [ebp+0x8]
6501421f:	pop    esi
65014220:	pop    edi
65014221:	leave  
65014222:	ret    
65014223:	nop
65014224:	lea    esi,[ecx+esi*1-0x4]
65014228:	lea    edi,[ecx+edi*1-0x4]
6501422c:	test   edi,0x3
65014232:	jne    0x65014258
65014234:	shr    ecx,0x2
65014237:	and    edx,0x3
6501423a:	cmp    ecx,0x8
6501423d:	jb     0x6501424c
6501423f:	std    
65014240:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65014242:	cld    
65014243:	jmp    DWORD PTR [edx*4+0x65014370]
6501424a:	mov    edi,edi
6501424c:	neg    ecx
6501424e:	jmp    DWORD PTR [ecx*4+0x65014320]
65014255:	lea    ecx,[ecx+0x0]
65014258:	mov    eax,edi
6501425a:	mov    edx,0x3
6501425f:	cmp    ecx,0x4
65014262:	jb     0x65014270
65014264:	and    eax,0x3
65014267:	sub    ecx,eax
65014269:	jmp    DWORD PTR [eax*4+0x65014274]
65014270:	jmp    DWORD PTR [ecx*4+0x65014370]
65014277:	nop
65014278:	test   BYTE PTR [edx+0x1],al
6501427b:	gs test al,0x42
6501427e:	add    DWORD PTR [ebp-0x30],esp
65014281:	inc    edx
65014282:	add    DWORD PTR [ebp-0x76],esp
65014285:	inc    esi
65014286:	add    esp,DWORD PTR [ebx]
65014288:	ror    DWORD PTR [eax-0x117cfcb9],1
6501428e:	add    ecx,eax
65014290:	jmp    0x66f0c597
65014295:	cmp    ecx,0x8
65014298:	jb     0x6501424c
6501429a:	std    
6501429b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501429d:	cld    
6501429e:	jmp    DWORD PTR [edx*4+0x65014370]
650142a5:	lea    ecx,[ecx+0x0]
650142a8:	mov    al,BYTE PTR [esi+0x3]
650142ab:	and    edx,ecx
650142ad:	mov    BYTE PTR [edi+0x3],al
650142b0:	mov    al,BYTE PTR [esi+0x2]
650142b3:	shr    ecx,0x2
650142b6:	mov    BYTE PTR [edi+0x2],al
650142b9:	sub    esi,0x2
650142bc:	sub    edi,0x2
650142bf:	cmp    ecx,0x8
650142c2:	jb     0x6501424c
650142c4:	std    
650142c5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650142c7:	cld    
650142c8:	jmp    DWORD PTR [edx*4+0x65014370]
650142cf:	nop
650142d0:	mov    al,BYTE PTR [esi+0x3]
650142d3:	and    edx,ecx
650142d5:	mov    BYTE PTR [edi+0x3],al
650142d8:	mov    al,BYTE PTR [esi+0x2]
650142db:	mov    BYTE PTR [edi+0x2],al
650142de:	mov    al,BYTE PTR [esi+0x1]
650142e1:	shr    ecx,0x2
650142e4:	mov    BYTE PTR [edi+0x1],al
650142e7:	sub    esi,0x3
650142ea:	sub    edi,0x3
650142ed:	cmp    ecx,0x8
650142f0:	jb     0x6501424c
650142f6:	std    
650142f7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650142f9:	cld    
650142fa:	jmp    DWORD PTR [edx*4+0x65014370]
65014301:	lea    ecx,[ecx+0x0]
65014304:	and    al,0x43
65014306:	add    DWORD PTR [ebp+0x2c],esp
65014309:	inc    ebx
6501430a:	add    DWORD PTR [ebp+0x34],esp
6501430d:	inc    ebx
6501430e:	add    DWORD PTR [ebp+0x3c],esp
65014311:	inc    ebx
65014312:	add    DWORD PTR [ebp+0x44],esp
65014315:	inc    ebx
65014316:	add    DWORD PTR [ebp+0x4c],esp
65014319:	inc    ebx
6501431a:	add    DWORD PTR [ebp+0x54],esp
6501431d:	inc    ebx
6501431e:	add    DWORD PTR [ebp+0x67],esp
65014321:	inc    ebx
65014322:	add    DWORD PTR [ebp-0x75],esp
65014325:	inc    esp
65014326:	mov    ds,WORD PTR [ecx+ecx*4]
65014329:	inc    esp
6501432a:	(bad)  
6501432b:	sbb    al,0x8b
6501432d:	inc    esp
6501432e:	mov    ds,WORD PTR [eax]
65014330:	mov    DWORD PTR [edi+ecx*4+0x18],eax
65014334:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
65014338:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6501433c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
65014340:	mov    DWORD PTR [edi+ecx*4+0x10],eax
65014344:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
65014348:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6501434c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
65014350:	mov    DWORD PTR [edi+ecx*4+0x8],eax
65014354:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
65014358:	mov    DWORD PTR [edi+ecx*4+0x4],eax
6501435c:	lea    eax,[ecx*4+0x0]
65014363:	add    esi,eax
65014365:	add    edi,eax
65014367:	jmp    DWORD PTR [edx*4+0x65014370]
6501436e:	mov    edi,edi
65014370:	add    BYTE PTR [ebx+0x1],0x65
65014374:	mov    BYTE PTR [ebx+0x1],al
65014377:	gs cwde 
65014379:	inc    ebx
6501437a:	add    DWORD PTR [ebp-0x54],esp
6501437d:	inc    ebx
6501437e:	add    DWORD PTR [ebp-0x75],esp
65014381:	inc    ebp
65014382:	or     BYTE PTR [esi+0x5f],bl
65014385:	leave  
65014386:	ret    
65014387:	nop
65014388:	mov    al,BYTE PTR [esi+0x3]
6501438b:	mov    BYTE PTR [edi+0x3],al
6501438e:	mov    eax,DWORD PTR [ebp+0x8]
65014391:	pop    esi
65014392:	pop    edi
65014393:	leave  
65014394:	ret    
65014395:	lea    ecx,[ecx+0x0]
65014398:	mov    al,BYTE PTR [esi+0x3]
6501439b:	mov    BYTE PTR [edi+0x3],al
6501439e:	mov    al,BYTE PTR [esi+0x2]
650143a1:	mov    BYTE PTR [edi+0x2],al
650143a4:	mov    eax,DWORD PTR [ebp+0x8]
650143a7:	pop    esi
650143a8:	pop    edi
650143a9:	leave  
650143aa:	ret    
650143ab:	nop
650143ac:	mov    al,BYTE PTR [esi+0x3]
650143af:	mov    BYTE PTR [edi+0x3],al
650143b2:	mov    al,BYTE PTR [esi+0x2]
650143b5:	mov    BYTE PTR [edi+0x2],al
650143b8:	mov    al,BYTE PTR [esi+0x1]
650143bb:	mov    BYTE PTR [edi+0x1],al
650143be:	mov    eax,DWORD PTR [ebp+0x8]
650143c1:	pop    esi
650143c2:	pop    edi
650143c3:	leave  
650143c4:	ret    
650143c5:	mov    eax,DWORD PTR [esp+0x4]
650143c9:	xor    ecx,ecx
650143cb:	cmp    eax,DWORD PTR [ecx*8+0x6502c0b0]
650143d2:	je     0x650143e6
650143d4:	inc    ecx
650143d5:	cmp    ecx,0x2d
650143d8:	jb     0x650143cb
650143da:	lea    ecx,[eax-0x13]
650143dd:	cmp    ecx,0x11
650143e0:	ja     0x650143ee
650143e2:	push   0xd
650143e4:	pop    eax
650143e5:	ret    
650143e6:	mov    eax,DWORD PTR [ecx*8+0x6502c0b4]
650143ed:	ret    
650143ee:	add    eax,0xffffff44
650143f3:	push   0xe
650143f5:	pop    ecx
650143f6:	cmp    ecx,eax
650143f8:	sbb    eax,eax
650143fa:	and    eax,ecx
650143fc:	add    eax,0x8
650143ff:	ret    
65014400:	call   0x650146d4
65014405:	test   eax,eax
65014407:	jne    0x6501440f
65014409:	mov    eax,0x6502c218
6501440e:	ret    
6501440f:	add    eax,0x8
65014412:	ret    
65014413:	call   0x650146d4
65014418:	test   eax,eax
6501441a:	jne    0x65014422
6501441c:	mov    eax,0x6502c21c
65014421:	ret    
65014422:	add    eax,0xc
65014425:	ret    
65014426:	push   esi
65014427:	call   0x65014413
6501442c:	mov    ecx,DWORD PTR [esp+0x8]
65014430:	push   ecx
65014431:	mov    DWORD PTR [eax],ecx
65014433:	call   0x650143c5
65014438:	pop    ecx
65014439:	mov    esi,eax
6501443b:	call   0x65014400
65014440:	mov    DWORD PTR [eax],esi
65014442:	pop    esi
65014443:	ret    
65014444:	and    DWORD PTR ds:0x6503157c,0x0
6501444b:	ret    
6501444c:	push   ebp
6501444d:	mov    ebp,esp
6501444f:	push   ecx
65014450:	push   ecx
65014451:	push   ebx
65014452:	push   esi
65014453:	xor    esi,esi
65014455:	lea    eax,[ebp-0x4]
65014458:	inc    esi
65014459:	xor    ebx,ebx
6501445b:	push   eax
6501445c:	mov    DWORD PTR [ebp-0x8],esi
6501445f:	mov    DWORD PTR [ebp-0x4],ebx
65014462:	call   0x65015c66
65014467:	cmp    DWORD PTR [ebp-0x4],0x5
6501446b:	pop    ecx
6501446c:	jle    0x65014472
6501446e:	mov    eax,esi
65014470:	jmp    0x650144b4
65014472:	push   edi
65014473:	push   ebx
65014474:	call   DWORD PTR ds:0x65024124
6501447a:	mov    esi,DWORD PTR [eax+0x3c]
6501447d:	add    esi,eax
6501447f:	cmp    WORD PTR [esi+0x6],bx
65014483:	movzx  eax,WORD PTR [esi+0x14]
65014487:	lea    edi,[eax+esi*1+0x18]
6501448b:	jbe    0x650144b0
6501448d:	push   edi
6501448e:	push   0x65024ca4
65014493:	call   0x65014b10
65014498:	test   eax,eax
6501449a:	pop    ecx
6501449b:	pop    ecx
6501449c:	je     0x650144ac
6501449e:	movzx  eax,WORD PTR [esi+0x6]
650144a2:	inc    ebx
650144a3:	add    edi,0x28
650144a6:	cmp    ebx,eax
650144a8:	jb     0x6501448d
650144aa:	jmp    0x650144b0
650144ac:	and    DWORD PTR [ebp-0x8],0x0
650144b0:	mov    eax,DWORD PTR [ebp-0x8]
650144b3:	pop    edi
650144b4:	pop    esi
650144b5:	pop    ebx
650144b6:	leave  
650144b7:	ret    
650144b8:	push   esi
650144b9:	push   DWORD PTR ds:0x6502c224
650144bf:	mov    esi,DWORD PTR ds:0x65024128
650144c5:	call   esi
650144c7:	test   eax,eax
650144c9:	je     0x650144ec
650144cb:	mov    eax,ds:0x6502c220
650144d0:	cmp    eax,0xffffffff
650144d3:	je     0x650144ec
650144d5:	push   eax
650144d6:	push   DWORD PTR ds:0x6502c224
650144dc:	call   esi
650144de:	call   eax
650144e0:	test   eax,eax
650144e2:	je     0x650144ec
650144e4:	mov    eax,DWORD PTR [eax+0x1f8]
650144ea:	jmp    0x65014512
650144ec:	push   0x65024cbc
650144f1:	call   DWORD PTR ds:0x65024124
650144f7:	mov    esi,eax
650144f9:	test   esi,esi
650144fb:	je     0x65014520
650144fd:	call   0x6501444c
65014502:	test   eax,eax
65014504:	je     0x65014520
65014506:	push   0x65024cac
6501450b:	push   esi
6501450c:	call   DWORD PTR ds:0x65024014
65014512:	test   eax,eax
65014514:	je     0x65014520
65014516:	push   DWORD PTR [esp+0x8]
6501451a:	call   eax
6501451c:	mov    DWORD PTR [esp+0x8],eax
65014520:	mov    eax,DWORD PTR [esp+0x8]
65014524:	pop    esi
65014525:	ret    
65014526:	push   0x0
65014528:	call   0x650144b8
6501452d:	pop    ecx
6501452e:	ret    
6501452f:	push   esi
65014530:	push   DWORD PTR ds:0x6502c224
65014536:	mov    esi,DWORD PTR ds:0x65024128
6501453c:	call   esi
6501453e:	test   eax,eax
65014540:	je     0x65014563
65014542:	mov    eax,ds:0x6502c220
65014547:	cmp    eax,0xffffffff
6501454a:	je     0x65014563
6501454c:	push   eax
6501454d:	push   DWORD PTR ds:0x6502c224
65014553:	call   esi
65014555:	call   eax
65014557:	test   eax,eax
65014559:	je     0x65014563
6501455b:	mov    eax,DWORD PTR [eax+0x1fc]
65014561:	jmp    0x65014589
65014563:	push   0x65024cbc
65014568:	call   DWORD PTR ds:0x65024124
6501456e:	mov    esi,eax
65014570:	test   esi,esi
65014572:	je     0x65014597
65014574:	call   0x6501444c
65014579:	test   eax,eax
6501457b:	je     0x65014597
6501457d:	push   0x65024ccc
65014582:	push   esi
65014583:	call   DWORD PTR ds:0x65024014
65014589:	test   eax,eax
6501458b:	je     0x65014597
6501458d:	push   DWORD PTR [esp+0x8]
65014591:	call   eax
65014593:	mov    DWORD PTR [esp+0x8],eax
65014597:	mov    eax,DWORD PTR [esp+0x8]
6501459b:	pop    esi
6501459c:	ret    
6501459d:	call   DWORD PTR ds:0x6502412c
650145a3:	ret    0x4
650145a6:	push   esi
650145a7:	push   DWORD PTR ds:0x6502c224
650145ad:	call   DWORD PTR ds:0x65024128
650145b3:	mov    esi,eax
650145b5:	test   esi,esi
650145b7:	jne    0x650145d4
650145b9:	push   DWORD PTR ds:0x6502d5a8
650145bf:	call   0x6501452f
650145c4:	pop    ecx
650145c5:	mov    esi,eax
650145c7:	push   esi
650145c8:	push   DWORD PTR ds:0x6502c224
650145ce:	call   DWORD PTR ds:0x65024130
650145d4:	mov    eax,esi
650145d6:	pop    esi
650145d7:	ret    
650145d8:	mov    eax,ds:0x6502c220
650145dd:	cmp    eax,0xffffffff
650145e0:	je     0x650145f8
650145e2:	push   eax
650145e3:	push   DWORD PTR ds:0x6502d5b0
650145e9:	call   0x6501452f
650145ee:	pop    ecx
650145ef:	call   eax
650145f1:	or     DWORD PTR ds:0x6502c220,0xffffffff
650145f8:	mov    eax,ds:0x6502c224
650145fd:	cmp    eax,0xffffffff
65014600:	je     0x65014610
65014602:	push   eax
65014603:	call   DWORD PTR ds:0x65024134
65014609:	or     DWORD PTR ds:0x6502c224,0xffffffff
65014610:	jmp    0x65019bcb
65014615:	push   0xc
65014617:	push   0x650298f8
6501461c:	call   0x65013d00
65014621:	push   0x65024cbc
65014626:	call   DWORD PTR ds:0x65024124
6501462c:	mov    DWORD PTR [ebp-0x1c],eax
6501462f:	mov    esi,DWORD PTR [ebp+0x8]
65014632:	mov    DWORD PTR [esi+0x5c],0x6502c8c8
65014639:	xor    edi,edi
6501463b:	inc    edi
6501463c:	mov    DWORD PTR [esi+0x14],edi
6501463f:	test   eax,eax
65014641:	je     0x65014672
65014643:	call   0x6501444c
65014648:	test   eax,eax
6501464a:	je     0x65014672
6501464c:	push   0x65024cac
65014651:	push   DWORD PTR [ebp-0x1c]
65014654:	mov    ebx,DWORD PTR ds:0x65024014
6501465a:	call   ebx
6501465c:	mov    DWORD PTR [esi+0x1f8],eax
65014662:	push   0x65024ccc
65014667:	push   DWORD PTR [ebp-0x1c]
6501466a:	call   ebx
6501466c:	mov    DWORD PTR [esi+0x1fc],eax
65014672:	mov    DWORD PTR [esi+0x70],edi
65014675:	mov    BYTE PTR [esi+0xc8],0x43
6501467c:	mov    BYTE PTR [esi+0x14b],0x43
65014683:	mov    eax,0x6502c268
65014688:	mov    DWORD PTR [esi+0x68],eax
6501468b:	push   eax
6501468c:	call   DWORD PTR ds:0x65024020
65014692:	push   0xc
65014694:	call   0x65019cf8
65014699:	pop    ecx
6501469a:	and    DWORD PTR [ebp-0x4],0x0
6501469e:	mov    eax,DWORD PTR [ebp+0xc]
650146a1:	mov    DWORD PTR [esi+0x6c],eax
650146a4:	test   eax,eax
650146a6:	jne    0x650146b0
650146a8:	mov    eax,ds:0x6502c870
650146ad:	mov    DWORD PTR [esi+0x6c],eax
650146b0:	push   DWORD PTR [esi+0x6c]
650146b3:	call   0x6501667f
650146b8:	pop    ecx
650146b9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650146c0:	call   0x650146cb
650146c5:	call   0x65013d45
650146ca:	ret    
650146cb:	push   0xc
650146cd:	call   0x65019c20
650146d2:	pop    ecx
650146d3:	ret    
650146d4:	push   esi
650146d5:	push   edi
650146d6:	call   DWORD PTR ds:0x65024044
650146dc:	push   DWORD PTR ds:0x6502c220
650146e2:	mov    edi,eax
650146e4:	call   0x650145a6
650146e9:	call   eax
650146eb:	mov    esi,eax
650146ed:	test   esi,esi
650146ef:	jne    0x6501473f
650146f1:	push   0x214
650146f6:	push   0x1
650146f8:	call   0x65015a50
650146fd:	mov    esi,eax
650146ff:	test   esi,esi
65014701:	pop    ecx
65014702:	pop    ecx
65014703:	je     0x6501473f
65014705:	push   esi
65014706:	push   DWORD PTR ds:0x6502c220
6501470c:	push   DWORD PTR ds:0x6502d5ac
65014712:	call   0x6501452f
65014717:	pop    ecx
65014718:	call   eax
6501471a:	test   eax,eax
6501471c:	je     0x65014736
6501471e:	push   0x0
65014720:	push   esi
65014721:	call   0x65014615
65014726:	pop    ecx
65014727:	pop    ecx
65014728:	call   DWORD PTR ds:0x6502411c
6501472e:	or     DWORD PTR [esi+0x4],0xffffffff
65014732:	mov    DWORD PTR [esi],eax
65014734:	jmp    0x6501473f
65014736:	push   esi
65014737:	call   0x650135d6
6501473c:	pop    ecx
6501473d:	xor    esi,esi
6501473f:	push   edi
65014740:	call   DWORD PTR ds:0x6502405c
65014746:	pop    edi
65014747:	mov    eax,esi
65014749:	pop    esi
6501474a:	ret    
6501474b:	push   esi
6501474c:	call   0x650146d4
65014751:	mov    esi,eax
65014753:	test   esi,esi
65014755:	jne    0x6501475f
65014757:	push   0x10
65014759:	call   0x65015b86
6501475e:	pop    ecx
6501475f:	mov    eax,esi
65014761:	pop    esi
65014762:	ret    
65014763:	push   0x8
65014765:	push   0x65029918
6501476a:	call   0x65013d00
6501476f:	mov    esi,DWORD PTR [ebp+0x8]
65014772:	test   esi,esi
65014774:	je     0x65014864
6501477a:	mov    eax,DWORD PTR [esi+0x24]
6501477d:	test   eax,eax
6501477f:	je     0x65014788
65014781:	push   eax
65014782:	call   0x650135d6
65014787:	pop    ecx
65014788:	mov    eax,DWORD PTR [esi+0x2c]
6501478b:	test   eax,eax
6501478d:	je     0x65014796
6501478f:	push   eax
65014790:	call   0x650135d6
65014795:	pop    ecx
65014796:	mov    eax,DWORD PTR [esi+0x34]
65014799:	test   eax,eax
6501479b:	je     0x650147a4
6501479d:	push   eax
6501479e:	call   0x650135d6
650147a3:	pop    ecx
650147a4:	mov    eax,DWORD PTR [esi+0x3c]
650147a7:	test   eax,eax
650147a9:	je     0x650147b2
650147ab:	push   eax
650147ac:	call   0x650135d6
650147b1:	pop    ecx
650147b2:	mov    eax,DWORD PTR [esi+0x44]
650147b5:	test   eax,eax
650147b7:	je     0x650147c0
650147b9:	push   eax
650147ba:	call   0x650135d6
650147bf:	pop    ecx
650147c0:	mov    eax,DWORD PTR [esi+0x48]
650147c3:	test   eax,eax
650147c5:	je     0x650147ce
650147c7:	push   eax
650147c8:	call   0x650135d6
650147cd:	pop    ecx
650147ce:	mov    eax,DWORD PTR [esi+0x5c]
650147d1:	cmp    eax,0x6502c8c8
650147d6:	je     0x650147df
650147d8:	push   eax
650147d9:	call   0x650135d6
650147de:	pop    ecx
650147df:	push   0xd
650147e1:	call   0x65019cf8
650147e6:	pop    ecx
650147e7:	and    DWORD PTR [ebp-0x4],0x0
650147eb:	mov    edi,DWORD PTR [esi+0x68]
650147ee:	test   edi,edi
650147f0:	je     0x6501480c
650147f2:	push   edi
650147f3:	call   DWORD PTR ds:0x65024098
650147f9:	test   eax,eax
650147fb:	jne    0x6501480c
650147fd:	cmp    edi,0x6502c268
65014803:	je     0x6501480c
65014805:	push   edi
65014806:	call   0x650135d6
6501480b:	pop    ecx
6501480c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014813:	call   0x6501486f
65014818:	push   0xc
6501481a:	call   0x65019cf8
6501481f:	pop    ecx
65014820:	mov    DWORD PTR [ebp-0x4],0x1
65014827:	mov    edi,DWORD PTR [esi+0x6c]
6501482a:	test   edi,edi
6501482c:	je     0x65014851
6501482e:	push   edi
6501482f:	call   0x65016705
65014834:	pop    ecx
65014835:	cmp    edi,DWORD PTR ds:0x6502c870
6501483b:	je     0x65014851
6501483d:	cmp    edi,0x6502c798
65014843:	je     0x65014851
65014845:	cmp    DWORD PTR [edi],0x0
65014848:	jne    0x65014851
6501484a:	push   edi
6501484b:	call   0x6501653f
65014850:	pop    ecx
65014851:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014858:	call   0x6501487b
6501485d:	push   esi
6501485e:	call   0x650135d6
65014863:	pop    ecx
65014864:	call   0x65013d45
65014869:	ret    0x4
6501486c:	mov    esi,DWORD PTR [ebp+0x8]
6501486f:	push   0xd
65014871:	call   0x65019c20
65014876:	pop    ecx
65014877:	ret    
65014878:	mov    esi,DWORD PTR [ebp+0x8]
6501487b:	push   0xc
6501487d:	call   0x65019c20
65014882:	pop    ecx
65014883:	ret    
65014884:	cmp    DWORD PTR ds:0x6502c220,0xffffffff
6501488b:	je     0x650148d9
6501488d:	push   edi
6501488e:	mov    edi,DWORD PTR [esp+0x8]
65014892:	test   edi,edi
65014894:	jne    0x650148bc
65014896:	push   esi
65014897:	push   DWORD PTR ds:0x6502c224
6501489d:	mov    esi,DWORD PTR ds:0x65024128
650148a3:	call   esi
650148a5:	test   eax,eax
650148a7:	je     0x650148bb
650148a9:	push   DWORD PTR ds:0x6502c220
650148af:	push   DWORD PTR ds:0x6502c224
650148b5:	call   esi
650148b7:	call   eax
650148b9:	mov    edi,eax
650148bb:	pop    esi
650148bc:	push   0x0
650148be:	push   DWORD PTR ds:0x6502c220
650148c4:	push   DWORD PTR ds:0x6502d5ac
650148ca:	call   0x6501452f
650148cf:	pop    ecx
650148d0:	call   eax
650148d2:	push   edi
650148d3:	call   0x65014763
650148d8:	pop    edi
650148d9:	mov    eax,ds:0x6502c224
650148de:	cmp    eax,0xffffffff
650148e1:	je     0x650148ec
650148e3:	push   0x0
650148e5:	push   eax
650148e6:	call   DWORD PTR ds:0x65024130
650148ec:	ret    
650148ed:	push   edi
650148ee:	push   0x65024cbc
650148f3:	call   DWORD PTR ds:0x65024124
650148f9:	mov    edi,eax
650148fb:	test   edi,edi
650148fd:	jne    0x65014908
650148ff:	call   0x650145d8
65014904:	xor    eax,eax
65014906:	pop    edi
65014907:	ret    
65014908:	push   esi
65014909:	mov    esi,DWORD PTR ds:0x65024014
6501490f:	push   0x65024cfc
65014914:	push   edi
65014915:	call   esi
65014917:	push   0x65024cf0
6501491c:	push   edi
6501491d:	mov    ds:0x6502d5a4,eax
65014922:	call   esi
65014924:	push   0x65024ce4
65014929:	push   edi
6501492a:	mov    ds:0x6502d5a8,eax
6501492f:	call   esi
65014931:	push   0x65024cdc
65014936:	push   edi
65014937:	mov    ds:0x6502d5ac,eax
6501493c:	call   esi
6501493e:	cmp    DWORD PTR ds:0x6502d5a4,0x0
65014945:	mov    esi,DWORD PTR ds:0x65024130
6501494b:	mov    ds:0x6502d5b0,eax
65014950:	je     0x65014968
65014952:	cmp    DWORD PTR ds:0x6502d5a8,0x0
65014959:	je     0x65014968
6501495b:	cmp    DWORD PTR ds:0x6502d5ac,0x0
65014962:	je     0x65014968
65014964:	test   eax,eax
65014966:	jne    0x6501498c
65014968:	mov    eax,ds:0x65024128
6501496d:	mov    ds:0x6502d5a8,eax
65014972:	mov    eax,ds:0x65024134
65014977:	mov    DWORD PTR ds:0x6502d5a4,0x6501459d
65014981:	mov    DWORD PTR ds:0x6502d5ac,esi
65014987:	mov    ds:0x6502d5b0,eax
6501498c:	call   DWORD PTR ds:0x6502412c
65014992:	cmp    eax,0xffffffff
65014995:	mov    ds:0x6502c224,eax
6501499a:	je     0x65014a6c
650149a0:	push   DWORD PTR ds:0x6502d5a8
650149a6:	push   eax
650149a7:	call   esi
650149a9:	test   eax,eax
650149ab:	je     0x65014a6c
650149b1:	call   0x65015e36
650149b6:	push   DWORD PTR ds:0x6502d5a4
650149bc:	call   0x650144b8
650149c1:	push   DWORD PTR ds:0x6502d5a8
650149c7:	mov    ds:0x6502d5a4,eax
650149cc:	call   0x650144b8
650149d1:	push   DWORD PTR ds:0x6502d5ac
650149d7:	mov    ds:0x6502d5a8,eax
650149dc:	call   0x650144b8
650149e1:	push   DWORD PTR ds:0x6502d5b0
650149e7:	mov    ds:0x6502d5ac,eax
650149ec:	call   0x650144b8
650149f1:	add    esp,0x10
650149f4:	mov    ds:0x6502d5b0,eax
650149f9:	call   0x65019b82
650149fe:	test   eax,eax
65014a00:	je     0x65014a67
65014a02:	push   0x65014763
65014a07:	push   DWORD PTR ds:0x6502d5a4
65014a0d:	call   0x6501452f
65014a12:	pop    ecx
65014a13:	call   eax
65014a15:	cmp    eax,0xffffffff
65014a18:	mov    ds:0x6502c220,eax
65014a1d:	je     0x65014a67
65014a1f:	push   0x214
65014a24:	push   0x1
65014a26:	call   0x65015a50
65014a2b:	mov    esi,eax
65014a2d:	test   esi,esi
65014a2f:	pop    ecx
65014a30:	pop    ecx
65014a31:	je     0x65014a67
65014a33:	push   esi
65014a34:	push   DWORD PTR ds:0x6502c220
65014a3a:	push   DWORD PTR ds:0x6502d5ac
65014a40:	call   0x6501452f
65014a45:	pop    ecx
65014a46:	call   eax
65014a48:	test   eax,eax
65014a4a:	je     0x65014a67
65014a4c:	push   0x0
65014a4e:	push   esi
65014a4f:	call   0x65014615
65014a54:	pop    ecx
65014a55:	pop    ecx
65014a56:	call   DWORD PTR ds:0x6502411c
65014a5c:	or     DWORD PTR [esi+0x4],0xffffffff
65014a60:	mov    DWORD PTR [esi],eax
65014a62:	xor    eax,eax
65014a64:	inc    eax
65014a65:	jmp    0x65014a6e
65014a67:	call   0x650145d8
65014a6c:	xor    eax,eax
65014a6e:	pop    esi
65014a6f:	pop    edi
65014a70:	ret    
65014a71:	mov    eax,DWORD PTR [esp+0x4]
65014a75:	mov    ds:0x6502d5b4,eax
65014a7a:	ret    
65014a7b:	push   DWORD PTR ds:0x6502d5b4
65014a81:	call   0x6501452f
65014a86:	test   eax,eax
65014a88:	pop    ecx
65014a89:	je     0x65014a9a
65014a8b:	push   DWORD PTR [esp+0x4]
65014a8f:	call   eax
65014a91:	test   eax,eax
65014a93:	pop    ecx
65014a94:	je     0x65014a9a
65014a96:	xor    eax,eax
65014a98:	inc    eax
65014a99:	ret    
65014a9a:	xor    eax,eax
65014a9c:	ret    
65014a9d:	push   0xc
65014a9f:	push   0x65029940
65014aa4:	call   0x65013d00
65014aa9:	push   0xe
65014aab:	call   0x65019cf8
65014ab0:	pop    ecx
65014ab1:	and    DWORD PTR [ebp-0x4],0x0
65014ab5:	mov    esi,DWORD PTR [ebp+0x8]
65014ab8:	mov    ecx,DWORD PTR [esi+0x4]
65014abb:	test   ecx,ecx
65014abd:	je     0x65014aee
65014abf:	mov    eax,ds:0x6502d5bc
65014ac4:	mov    edx,0x6502d5b8
65014ac9:	mov    DWORD PTR [ebp-0x1c],eax
65014acc:	test   eax,eax
65014ace:	je     0x65014ae1
65014ad0:	cmp    DWORD PTR [eax],ecx
65014ad2:	jne    0x65014b00
65014ad4:	mov    ecx,DWORD PTR [eax+0x4]
65014ad7:	mov    DWORD PTR [edx+0x4],ecx
65014ada:	push   eax
65014adb:	call   0x650135d6
65014ae0:	pop    ecx
65014ae1:	push   DWORD PTR [esi+0x4]
65014ae4:	call   0x650135d6
65014ae9:	pop    ecx
65014aea:	and    DWORD PTR [esi+0x4],0x0
65014aee:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014af5:	call   0x65014b04
65014afa:	call   0x65013d45
65014aff:	ret    
65014b00:	mov    edx,eax
65014b02:	jmp    0x65014ac9
65014b04:	push   0xe
65014b06:	call   0x65019c20
65014b0b:	pop    ecx
65014b0c:	ret    
65014b0d:	int3   
65014b0e:	int3   
65014b0f:	int3   
65014b10:	mov    edx,DWORD PTR [esp+0x4]
65014b14:	mov    ecx,DWORD PTR [esp+0x8]
65014b18:	test   edx,0x3
65014b1e:	jne    0x65014b5c
65014b20:	mov    eax,DWORD PTR [edx]
65014b22:	cmp    al,BYTE PTR [ecx]
65014b24:	jne    0x65014b54
65014b26:	or     al,al
65014b28:	je     0x65014b50
65014b2a:	cmp    ah,BYTE PTR [ecx+0x1]
65014b2d:	jne    0x65014b54
65014b2f:	or     ah,ah
65014b31:	je     0x65014b50
65014b33:	shr    eax,0x10
65014b36:	cmp    al,BYTE PTR [ecx+0x2]
65014b39:	jne    0x65014b54
65014b3b:	or     al,al
65014b3d:	je     0x65014b50
65014b3f:	cmp    ah,BYTE PTR [ecx+0x3]
65014b42:	jne    0x65014b54
65014b44:	add    ecx,0x4
65014b47:	add    edx,0x4
65014b4a:	or     ah,ah
65014b4c:	jne    0x65014b20
65014b4e:	mov    edi,edi
65014b50:	xor    eax,eax
65014b52:	ret    
65014b53:	nop
65014b54:	sbb    eax,eax
65014b56:	shl    eax,1
65014b58:	add    eax,0x1
65014b5b:	ret    
65014b5c:	test   edx,0x1
65014b62:	je     0x65014b7c
65014b64:	mov    al,BYTE PTR [edx]
65014b66:	add    edx,0x1
65014b69:	cmp    al,BYTE PTR [ecx]
65014b6b:	jne    0x65014b54
65014b6d:	add    ecx,0x1
65014b70:	or     al,al
65014b72:	je     0x65014b50
65014b74:	test   edx,0x2
65014b7a:	je     0x65014b20
65014b7c:	mov    ax,WORD PTR [edx]
65014b7f:	add    edx,0x2
65014b82:	cmp    al,BYTE PTR [ecx]
65014b84:	jne    0x65014b54
65014b86:	or     al,al
65014b88:	je     0x65014b50
65014b8a:	cmp    ah,BYTE PTR [ecx+0x1]
65014b8d:	jne    0x65014b54
65014b8f:	or     ah,ah
65014b91:	je     0x65014b50
65014b93:	add    ecx,0x2
65014b96:	jmp    0x65014b20
65014b98:	mov    DWORD PTR [ecx],0x65024d10
65014b9e:	jmp    0x65012036
65014ba3:	push   esi
65014ba4:	mov    esi,ecx
65014ba6:	mov    DWORD PTR [esi],0x65024d10
65014bac:	call   0x65012036
65014bb1:	test   BYTE PTR [esp+0x8],0x1
65014bb6:	je     0x65014bbf
65014bb8:	push   esi
65014bb9:	call   0x65011f62
65014bbe:	pop    ecx
65014bbf:	mov    eax,esi
65014bc1:	pop    esi
65014bc2:	ret    0x4
65014bc5:	push   esi
65014bc6:	push   edi
65014bc7:	mov    edi,DWORD PTR [esp+0xc]
65014bcb:	mov    eax,DWORD PTR [edi+0x4]
65014bce:	test   eax,eax
65014bd0:	je     0x65014c1b
65014bd2:	lea    edx,[eax+0x8]
65014bd5:	cmp    BYTE PTR [edx],0x0
65014bd8:	je     0x65014c1b
65014bda:	mov    esi,DWORD PTR [esp+0x10]
65014bde:	mov    ecx,DWORD PTR [esi+0x4]
65014be1:	cmp    eax,ecx
65014be3:	je     0x65014bf9
65014be5:	add    ecx,0x8
65014be8:	push   ecx
65014be9:	push   edx
65014bea:	call   0x65014b10
65014bef:	test   eax,eax
65014bf1:	pop    ecx
65014bf2:	pop    ecx
65014bf3:	je     0x65014bf9
65014bf5:	xor    eax,eax
65014bf7:	jmp    0x65014c1e
65014bf9:	test   BYTE PTR [esi],0x2
65014bfc:	je     0x65014c03
65014bfe:	test   BYTE PTR [edi],0x8
65014c01:	je     0x65014bf5
65014c03:	mov    eax,DWORD PTR [esp+0x14]
65014c07:	mov    eax,DWORD PTR [eax]
65014c09:	test   al,0x1
65014c0b:	je     0x65014c12
65014c0d:	test   BYTE PTR [edi],0x1
65014c10:	je     0x65014bf5
65014c12:	test   al,0x2
65014c14:	je     0x65014c1b
65014c16:	test   BYTE PTR [edi],0x2
65014c19:	je     0x65014bf5
65014c1b:	xor    eax,eax
65014c1d:	inc    eax
65014c1e:	pop    edi
65014c1f:	pop    esi
65014c20:	ret    
65014c21:	mov    eax,DWORD PTR [esp+0x4]
65014c25:	mov    eax,DWORD PTR [eax]
65014c27:	mov    eax,DWORD PTR [eax]
65014c29:	cmp    eax,0xe0434f4d
65014c2e:	je     0x65014c48
65014c30:	cmp    eax,0xe06d7363
65014c35:	jne    0x65014c62
65014c37:	call   0x6501474b
65014c3c:	and    DWORD PTR [eax+0x90],0x0
65014c43:	jmp    0x65015822
65014c48:	call   0x6501474b
65014c4d:	cmp    DWORD PTR [eax+0x90],0x0
65014c54:	jle    0x65014c62
65014c56:	call   0x6501474b
65014c5b:	add    eax,0x90
65014c60:	dec    DWORD PTR [eax]
65014c62:	xor    eax,eax
65014c64:	ret    
65014c65:	push   0x10
65014c67:	push   0x65029960
65014c6c:	call   0x65013d00
65014c71:	mov    edi,DWORD PTR [ebp+0x10]
65014c74:	mov    ebx,DWORD PTR [ebp+0x8]
65014c77:	cmp    DWORD PTR [edi+0x4],0x80
65014c7e:	jg     0x65014c86
65014c80:	movsx  esi,BYTE PTR [ebx+0x8]
65014c84:	jmp    0x65014c89
65014c86:	mov    esi,DWORD PTR [ebx+0x8]
65014c89:	mov    DWORD PTR [ebp-0x1c],esi
65014c8c:	call   0x6501474b
65014c91:	add    eax,0x90
65014c96:	inc    DWORD PTR [eax]
65014c98:	and    DWORD PTR [ebp-0x4],0x0
65014c9c:	cmp    esi,DWORD PTR [ebp+0x14]
65014c9f:	je     0x65014d06
65014ca1:	cmp    esi,0xffffffff
65014ca4:	jle    0x65014cab
65014ca6:	cmp    esi,DWORD PTR [edi+0x4]
65014ca9:	jl     0x65014cb0
65014cab:	call   0x6501586e
65014cb0:	mov    eax,esi
65014cb2:	shl    eax,0x3
65014cb5:	mov    ecx,DWORD PTR [edi+0x8]
65014cb8:	add    ecx,eax
65014cba:	mov    esi,DWORD PTR [ecx]
65014cbc:	mov    DWORD PTR [ebp-0x20],esi
65014cbf:	mov    DWORD PTR [ebp-0x4],0x1
65014cc6:	cmp    DWORD PTR [ecx+0x4],0x0
65014cca:	je     0x65014ce1
65014ccc:	mov    DWORD PTR [ebx+0x8],esi
65014ccf:	push   0x103
65014cd4:	push   ebx
65014cd5:	mov    ecx,DWORD PTR [edi+0x8]
65014cd8:	push   DWORD PTR [ecx+eax*1+0x4]
65014cdc:	call   0x650158c0
65014ce1:	and    DWORD PTR [ebp-0x4],0x0
65014ce5:	jmp    0x65014d01
65014ce7:	push   DWORD PTR [ebp-0x14]
65014cea:	call   0x65014c21
65014cef:	pop    ecx
65014cf0:	ret    
65014cf1:	mov    esp,DWORD PTR [ebp-0x18]
65014cf4:	and    DWORD PTR [ebp-0x4],0x0
65014cf8:	mov    edi,DWORD PTR [ebp+0x10]
65014cfb:	mov    ebx,DWORD PTR [ebp+0x8]
65014cfe:	mov    esi,DWORD PTR [ebp-0x20]
65014d01:	mov    DWORD PTR [ebp-0x1c],esi
65014d04:	jmp    0x65014c9c
65014d06:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014d0d:	call   0x65014d2b
65014d12:	cmp    esi,DWORD PTR [ebp+0x14]
65014d15:	je     0x65014d1c
65014d17:	call   0x6501586e
65014d1c:	mov    DWORD PTR [ebx+0x8],esi
65014d1f:	call   0x65013d45
65014d24:	ret    
65014d25:	mov    ebx,DWORD PTR [ebp+0x8]
65014d28:	mov    esi,DWORD PTR [ebp-0x1c]
65014d2b:	call   0x6501474b
65014d30:	cmp    DWORD PTR [eax+0x90],0x0
65014d37:	jle    0x65014d45
65014d39:	call   0x6501474b
65014d3e:	add    eax,0x90
65014d43:	dec    DWORD PTR [eax]
65014d45:	ret    
65014d46:	mov    eax,DWORD PTR [eax]
65014d48:	cmp    DWORD PTR [eax],0xe06d7363
65014d4e:	jne    0x65014d88
65014d50:	cmp    DWORD PTR [eax+0x10],0x3
65014d54:	jne    0x65014d88
65014d56:	mov    ecx,DWORD PTR [eax+0x14]
65014d59:	cmp    ecx,0x19930520
65014d5f:	je     0x65014d71
65014d61:	cmp    ecx,0x19930521
65014d67:	je     0x65014d71
65014d69:	cmp    ecx,0x19930522
65014d6f:	jne    0x65014d88
65014d71:	cmp    DWORD PTR [eax+0x1c],0x0
65014d75:	jne    0x65014d88
65014d77:	call   0x6501474b
65014d7c:	xor    ecx,ecx
65014d7e:	inc    ecx
65014d7f:	mov    DWORD PTR [eax+0x20c],ecx
65014d85:	mov    eax,ecx
65014d87:	ret    
65014d88:	xor    eax,eax
65014d8a:	ret    
65014d8b:	push   0x8
65014d8d:	push   0x65029988
65014d92:	call   0x65013d00
65014d97:	mov    ecx,DWORD PTR [ebp+0x8]
65014d9a:	test   ecx,ecx
65014d9c:	je     0x65014dc8
65014d9e:	cmp    DWORD PTR [ecx],0xe06d7363
65014da4:	jne    0x65014dc8
65014da6:	mov    eax,DWORD PTR [ecx+0x1c]
65014da9:	test   eax,eax
65014dab:	je     0x65014dc8
65014dad:	mov    eax,DWORD PTR [eax+0x4]
65014db0:	test   eax,eax
65014db2:	je     0x65014dc8
65014db4:	and    DWORD PTR [ebp-0x4],0x0
65014db8:	push   eax
65014db9:	push   DWORD PTR [ecx+0x18]
65014dbc:	call   0x65012425
65014dc1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014dc8:	call   0x65013d45
65014dcd:	ret    
65014dce:	xor    eax,eax
65014dd0:	cmp    BYTE PTR [ebp+0xc],al
65014dd3:	setne  al
65014dd6:	ret    
65014dd7:	mov    esp,DWORD PTR [ebp-0x18]
65014dda:	jmp    0x65015822
65014ddf:	mov    ecx,DWORD PTR [esp+0x8]
65014de3:	mov    eax,DWORD PTR [ecx]
65014de5:	push   esi
65014de6:	mov    esi,DWORD PTR [esp+0x8]
65014dea:	add    eax,esi
65014dec:	cmp    DWORD PTR [ecx+0x4],0x0
65014df0:	jl     0x65014e02
65014df2:	mov    edx,DWORD PTR [ecx+0x4]
65014df5:	mov    ecx,DWORD PTR [ecx+0x8]
65014df8:	mov    esi,DWORD PTR [edx+esi*1]
65014dfb:	mov    ecx,DWORD PTR [esi+ecx*1]
65014dfe:	add    ecx,edx
65014e00:	add    eax,ecx
65014e02:	pop    esi
65014e03:	ret    
65014e04:	push   ebp
65014e05:	mov    ebp,esp
65014e07:	sub    esp,0xc
65014e0a:	test   edi,edi
65014e0c:	jne    0x65014e18
65014e0e:	call   0x6501586e
65014e13:	jmp    0x65015822
65014e18:	and    DWORD PTR [ebp-0x8],0x0
65014e1c:	cmp    DWORD PTR [edi],0x0
65014e1f:	mov    BYTE PTR [ebp-0x1],0x0
65014e23:	jle    0x65014e78
65014e25:	push   ebx
65014e26:	push   esi
65014e27:	mov    eax,DWORD PTR [ebp+0x8]
65014e2a:	mov    eax,DWORD PTR [eax+0x1c]
65014e2d:	mov    eax,DWORD PTR [eax+0xc]
65014e30:	mov    ebx,DWORD PTR [eax]
65014e32:	test   ebx,ebx
65014e34:	lea    esi,[eax+0x4]
65014e37:	jle    0x65014e6c
65014e39:	mov    eax,DWORD PTR [ebp-0x8]
65014e3c:	shl    eax,0x4
65014e3f:	mov    DWORD PTR [ebp-0xc],eax
65014e42:	mov    ecx,DWORD PTR [ebp+0x8]
65014e45:	push   DWORD PTR [ecx+0x1c]
65014e48:	mov    eax,DWORD PTR [esi]
65014e4a:	push   eax
65014e4b:	mov    eax,DWORD PTR [edi+0x4]
65014e4e:	add    eax,DWORD PTR [ebp-0xc]
65014e51:	push   eax
65014e52:	call   0x65014bc5
65014e57:	add    esp,0xc
65014e5a:	test   eax,eax
65014e5c:	jne    0x65014e68
65014e5e:	dec    ebx
65014e5f:	add    esi,0x4
65014e62:	test   ebx,ebx
65014e64:	jg     0x65014e42
65014e66:	jmp    0x65014e6c
65014e68:	mov    BYTE PTR [ebp-0x1],0x1
65014e6c:	inc    DWORD PTR [ebp-0x8]
65014e6f:	mov    eax,DWORD PTR [ebp-0x8]
65014e72:	cmp    eax,DWORD PTR [edi]
65014e74:	jl     0x65014e27
65014e76:	pop    esi
65014e77:	pop    ebx
65014e78:	mov    al,BYTE PTR [ebp-0x1]
65014e7b:	leave  
65014e7c:	ret    
65014e7d:	push   0x4
65014e7f:	mov    eax,0x650220c3
65014e84:	call   0x65013fbe
65014e89:	call   0x6501474b
65014e8e:	cmp    DWORD PTR [eax+0x94],0x0
65014e95:	je     0x65014e9c
65014e97:	call   0x6501586e
65014e9c:	and    DWORD PTR [ebp-0x4],0x0
65014ea0:	call   0x6501585b
65014ea5:	or     DWORD PTR [ebp-0x4],0xffffffff
65014ea9:	jmp    0x65015822
65014eae:	call   0x6501474b
65014eb3:	mov    ecx,DWORD PTR [ebp+0x8]
65014eb6:	push   0x0
65014eb8:	push   0x0
65014eba:	mov    DWORD PTR [eax+0x94],ecx
65014ec0:	call   0x65012366
65014ec5:	int3   
65014ec6:	push   0x2c
65014ec8:	push   0x65029a00
65014ecd:	call   0x65013d00
65014ed2:	mov    ebx,ecx
65014ed4:	mov    edi,DWORD PTR [ebp+0xc]
65014ed7:	mov    esi,DWORD PTR [ebp+0x8]
65014eda:	mov    DWORD PTR [ebp-0x1c],ebx
65014edd:	and    DWORD PTR [ebp-0x34],0x0
65014ee1:	mov    eax,DWORD PTR [edi-0x4]
65014ee4:	mov    DWORD PTR [ebp-0x24],eax
65014ee7:	push   DWORD PTR [esi+0x18]
65014eea:	lea    eax,[ebp-0x3c]
65014eed:	push   eax
65014eee:	call   0x650126c9
65014ef3:	pop    ecx
65014ef4:	pop    ecx
65014ef5:	mov    DWORD PTR [ebp-0x28],eax
65014ef8:	call   0x6501474b
65014efd:	mov    eax,DWORD PTR [eax+0x88]
65014f03:	mov    DWORD PTR [ebp-0x2c],eax
65014f06:	call   0x6501474b
65014f0b:	mov    eax,DWORD PTR [eax+0x8c]
65014f11:	mov    DWORD PTR [ebp-0x30],eax
65014f14:	call   0x6501474b
65014f19:	mov    DWORD PTR [eax+0x88],esi
65014f1f:	call   0x6501474b
65014f24:	mov    ecx,DWORD PTR [ebp+0x10]
65014f27:	mov    DWORD PTR [eax+0x8c],ecx
65014f2d:	and    DWORD PTR [ebp-0x4],0x0
65014f31:	xor    eax,eax
65014f33:	inc    eax
65014f34:	mov    DWORD PTR [ebp+0x10],eax
65014f37:	mov    DWORD PTR [ebp-0x4],eax
65014f3a:	push   DWORD PTR [ebp+0x1c]
65014f3d:	push   DWORD PTR [ebp+0x18]
65014f40:	push   ebx
65014f41:	push   DWORD PTR [ebp+0x14]
65014f44:	push   edi
65014f45:	call   0x6501275e
65014f4a:	add    esp,0x14
65014f4d:	mov    DWORD PTR [ebp-0x1c],eax
65014f50:	and    DWORD PTR [ebp-0x4],0x0
65014f54:	jmp    0x65014fc5
65014f56:	mov    eax,DWORD PTR [ebp-0x14]
65014f59:	call   0x65014d46
65014f5e:	ret    
65014f5f:	mov    esp,DWORD PTR [ebp-0x18]
65014f62:	call   0x6501474b
65014f67:	and    DWORD PTR [eax+0x20c],0x0
65014f6e:	mov    esi,DWORD PTR [ebp+0x14]
65014f71:	mov    edi,DWORD PTR [ebp+0xc]
65014f74:	cmp    DWORD PTR [esi+0x4],0x80
65014f7b:	jg     0x65014f83
65014f7d:	movsx  ecx,BYTE PTR [edi+0x8]
65014f81:	jmp    0x65014f86
65014f83:	mov    ecx,DWORD PTR [edi+0x8]
65014f86:	mov    ebx,DWORD PTR [esi+0x10]
65014f89:	and    DWORD PTR [ebp-0x20],0x0
65014f8d:	mov    eax,DWORD PTR [ebp-0x20]
65014f90:	cmp    eax,DWORD PTR [esi+0xc]
65014f93:	jae    0x65014fad
65014f95:	imul   eax,eax,0x14
65014f98:	add    eax,ebx
65014f9a:	mov    edx,DWORD PTR [eax+0x4]
65014f9d:	cmp    ecx,edx
65014f9f:	jle    0x65014fe1
65014fa1:	cmp    ecx,DWORD PTR [eax+0x8]
65014fa4:	jg     0x65014fe1
65014fa6:	mov    eax,DWORD PTR [esi+0x8]
65014fa9:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
65014fad:	push   ecx
65014fae:	push   esi
65014faf:	push   0x0
65014fb1:	push   edi
65014fb2:	call   0x65014c65
65014fb7:	add    esp,0x10
65014fba:	and    DWORD PTR [ebp-0x1c],0x0
65014fbe:	and    DWORD PTR [ebp-0x4],0x0
65014fc2:	mov    esi,DWORD PTR [ebp+0x8]
65014fc5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014fcc:	mov    DWORD PTR [ebp+0x10],0x0
65014fd3:	call   0x65014fec
65014fd8:	mov    eax,DWORD PTR [ebp-0x1c]
65014fdb:	call   0x65013d45
65014fe0:	ret    
65014fe1:	inc    DWORD PTR [ebp-0x20]
65014fe4:	jmp    0x65014f8d
65014fe6:	mov    edi,DWORD PTR [ebp+0xc]
65014fe9:	mov    esi,DWORD PTR [ebp+0x8]
65014fec:	mov    eax,DWORD PTR [ebp-0x24]
65014fef:	mov    DWORD PTR [edi-0x4],eax
65014ff2:	push   DWORD PTR [ebp-0x28]
65014ff5:	call   0x65012712
65014ffa:	pop    ecx
65014ffb:	call   0x6501474b
65015000:	mov    ecx,DWORD PTR [ebp-0x2c]
65015003:	mov    DWORD PTR [eax+0x88],ecx
65015009:	call   0x6501474b
6501500e:	mov    ecx,DWORD PTR [ebp-0x30]
65015011:	mov    DWORD PTR [eax+0x8c],ecx
65015017:	cmp    DWORD PTR [esi],0xe06d7363
6501501d:	jne    0x65015061
6501501f:	cmp    DWORD PTR [esi+0x10],0x3
65015023:	jne    0x65015061
65015025:	mov    eax,DWORD PTR [esi+0x14]
65015028:	cmp    eax,0x19930520
6501502d:	je     0x6501503d
6501502f:	cmp    eax,0x19930521
65015034:	je     0x6501503d
65015036:	cmp    eax,0x19930522
6501503b:	jne    0x65015061
6501503d:	cmp    DWORD PTR [ebp-0x34],0x0
65015041:	jne    0x65015061
65015043:	cmp    DWORD PTR [ebp-0x1c],0x0
65015047:	je     0x65015061
65015049:	push   DWORD PTR [esi+0x18]
6501504c:	call   0x650126f1
65015051:	pop    ecx
65015052:	test   eax,eax
65015054:	je     0x65015061
65015056:	push   DWORD PTR [ebp+0x10]
65015059:	push   esi
6501505a:	call   0x65014d8b
6501505f:	pop    ecx
65015060:	pop    ecx
65015061:	ret    
65015062:	push   0xc
65015064:	push   0x65029a28
65015069:	call   0x65013d00
6501506e:	xor    edx,edx
65015070:	mov    DWORD PTR [ebp-0x1c],edx
65015073:	mov    eax,DWORD PTR [ebp+0x10]
65015076:	mov    ecx,DWORD PTR [eax+0x4]
65015079:	cmp    ecx,edx
6501507b:	je     0x650151d9
65015081:	cmp    BYTE PTR [ecx+0x8],dl
65015084:	je     0x650151d9
6501508a:	mov    ecx,DWORD PTR [eax+0x8]
6501508d:	cmp    ecx,edx
6501508f:	jne    0x6501509d
65015091:	test   DWORD PTR [eax],0x80000000
65015097:	je     0x650151d9
6501509d:	mov    eax,DWORD PTR [eax]
6501509f:	mov    esi,DWORD PTR [ebp+0xc]
650150a2:	test   eax,eax
650150a4:	js     0x650150aa
650150a6:	lea    esi,[ecx+esi*1+0xc]
650150aa:	mov    DWORD PTR [ebp-0x4],edx
650150ad:	xor    ebx,ebx
650150af:	inc    ebx
650150b0:	push   ebx
650150b1:	test   al,0x8
650150b3:	je     0x650150f6
650150b5:	mov    edi,DWORD PTR [ebp+0x8]
650150b8:	push   DWORD PTR [edi+0x18]
650150bb:	call   0x6501adfb
650150c0:	pop    ecx
650150c1:	pop    ecx
650150c2:	test   eax,eax
650150c4:	je     0x650151bc
650150ca:	push   ebx
650150cb:	push   esi
650150cc:	call   0x6501adfb
650150d1:	pop    ecx
650150d2:	pop    ecx
650150d3:	test   eax,eax
650150d5:	je     0x650151bc
650150db:	mov    eax,DWORD PTR [edi+0x18]
650150de:	mov    DWORD PTR [esi],eax
650150e0:	mov    ecx,DWORD PTR [ebp+0x14]
650150e3:	add    ecx,0x8
650150e6:	push   ecx
650150e7:	push   eax
650150e8:	call   0x65014ddf
650150ed:	pop    ecx
650150ee:	pop    ecx
650150ef:	mov    DWORD PTR [esi],eax
650150f1:	jmp    0x650151c1
650150f6:	mov    edi,DWORD PTR [ebp+0x14]
650150f9:	mov    eax,DWORD PTR [ebp+0x8]
650150fc:	push   DWORD PTR [eax+0x18]
650150ff:	test   BYTE PTR [edi],bl
65015101:	je     0x6501514b
65015103:	call   0x6501adfb
65015108:	pop    ecx
65015109:	pop    ecx
6501510a:	test   eax,eax
6501510c:	je     0x650151bc
65015112:	push   ebx
65015113:	push   esi
65015114:	call   0x6501adfb
65015119:	pop    ecx
6501511a:	pop    ecx
6501511b:	test   eax,eax
6501511d:	je     0x650151bc
65015123:	push   DWORD PTR [edi+0x14]
65015126:	mov    eax,DWORD PTR [ebp+0x8]
65015129:	push   DWORD PTR [eax+0x18]
6501512c:	push   esi
6501512d:	call   0x65013780
65015132:	add    esp,0xc
65015135:	cmp    DWORD PTR [edi+0x14],0x4
65015139:	jne    0x650151c1
6501513f:	mov    eax,DWORD PTR [esi]
65015141:	test   eax,eax
65015143:	je     0x650151c1
65015145:	add    edi,0x8
65015148:	push   edi
65015149:	jmp    0x650150e7
6501514b:	cmp    DWORD PTR [edi+0x18],edx
6501514e:	jne    0x65015188
65015150:	call   0x6501adfb
65015155:	pop    ecx
65015156:	pop    ecx
65015157:	test   eax,eax
65015159:	je     0x650151bc
6501515b:	push   ebx
6501515c:	push   esi
6501515d:	call   0x6501adfb
65015162:	pop    ecx
65015163:	pop    ecx
65015164:	test   eax,eax
65015166:	je     0x650151bc
65015168:	push   DWORD PTR [edi+0x14]
6501516b:	add    edi,0x8
6501516e:	push   edi
6501516f:	mov    eax,DWORD PTR [ebp+0x8]
65015172:	push   DWORD PTR [eax+0x18]
65015175:	call   0x65014ddf
6501517a:	pop    ecx
6501517b:	pop    ecx
6501517c:	push   eax
6501517d:	push   esi
6501517e:	call   0x65013780
65015183:	add    esp,0xc
65015186:	jmp    0x650151c1
65015188:	call   0x6501adfb
6501518d:	pop    ecx
6501518e:	pop    ecx
6501518f:	test   eax,eax
65015191:	je     0x650151bc
65015193:	push   ebx
65015194:	push   esi
65015195:	call   0x6501adfb
6501519a:	pop    ecx
6501519b:	pop    ecx
6501519c:	test   eax,eax
6501519e:	je     0x650151bc
650151a0:	push   DWORD PTR [edi+0x18]
650151a3:	call   0x6501adfb
650151a8:	pop    ecx
650151a9:	test   eax,eax
650151ab:	je     0x650151bc
650151ad:	test   BYTE PTR [edi],0x4
650151b0:	push   0x0
650151b2:	pop    eax
650151b3:	setne  al
650151b6:	inc    eax
650151b7:	mov    DWORD PTR [ebp-0x1c],eax
650151ba:	jmp    0x650151c1
650151bc:	call   0x6501586e
650151c1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650151c8:	mov    eax,DWORD PTR [ebp-0x1c]
650151cb:	jmp    0x650151db
650151cd:	xor    eax,eax
650151cf:	inc    eax
650151d0:	ret    
650151d1:	mov    esp,DWORD PTR [ebp-0x18]
650151d4:	jmp    0x65015822
650151d9:	xor    eax,eax
650151db:	call   0x65013d45
650151e0:	ret    
650151e1:	push   0x8
650151e3:	push   0x65029a48
650151e8:	call   0x65013d00
650151ed:	mov    eax,DWORD PTR [ebp+0x10]
650151f0:	test   DWORD PTR [eax],0x80000000
650151f6:	je     0x650151fd
650151f8:	mov    ebx,DWORD PTR [ebp+0xc]
650151fb:	jmp    0x65015207
650151fd:	mov    ecx,DWORD PTR [eax+0x8]
65015200:	mov    edx,DWORD PTR [ebp+0xc]
65015203:	lea    ebx,[ecx+edx*1+0xc]
65015207:	and    DWORD PTR [ebp-0x4],0x0
6501520b:	mov    esi,DWORD PTR [ebp+0x14]
6501520e:	push   esi
6501520f:	push   eax
65015210:	push   DWORD PTR [ebp+0xc]
65015213:	mov    edi,DWORD PTR [ebp+0x8]
65015216:	push   edi
65015217:	call   0x65015062
6501521c:	add    esp,0x10
6501521f:	dec    eax
65015220:	je     0x65015241
65015222:	dec    eax
65015223:	jne    0x65015259
65015225:	push   0x1
65015227:	lea    eax,[esi+0x8]
6501522a:	push   eax
6501522b:	push   DWORD PTR [edi+0x18]
6501522e:	call   0x65014ddf
65015233:	pop    ecx
65015234:	pop    ecx
65015235:	push   eax
65015236:	push   DWORD PTR [esi+0x18]
65015239:	push   ebx
6501523a:	call   0x65012425
6501523f:	jmp    0x65015259
65015241:	lea    eax,[esi+0x8]
65015244:	push   eax
65015245:	push   DWORD PTR [edi+0x18]
65015248:	call   0x65014ddf
6501524d:	pop    ecx
6501524e:	pop    ecx
6501524f:	push   eax
65015250:	push   DWORD PTR [esi+0x18]
65015253:	push   ebx
65015254:	call   0x65012425
65015259:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015260:	call   0x65013d45
65015265:	ret    
65015266:	xor    eax,eax
65015268:	inc    eax
65015269:	ret    
6501526a:	mov    esp,DWORD PTR [ebp-0x18]
6501526d:	jmp    0x65015822
65015272:	push   ebp
65015273:	mov    ebp,esp
65015275:	cmp    DWORD PTR [ebp+0x18],0x0
65015279:	je     0x6501528b
6501527b:	push   DWORD PTR [ebp+0x18]
6501527e:	push   ebx
6501527f:	push   esi
65015280:	push   DWORD PTR [ebp+0x8]
65015283:	call   0x650151e1
65015288:	add    esp,0x10
6501528b:	cmp    DWORD PTR [ebp+0x20],0x0
6501528f:	push   DWORD PTR [ebp+0x8]
65015292:	jne    0x65015297
65015294:	push   esi
65015295:	jmp    0x6501529a
65015297:	push   DWORD PTR [ebp+0x20]
6501529a:	call   0x6501242c
6501529f:	push   DWORD PTR [edi]
650152a1:	push   DWORD PTR [ebp+0x14]
650152a4:	push   DWORD PTR [ebp+0x10]
650152a7:	push   esi
650152a8:	call   0x65014c65
650152ad:	mov    eax,DWORD PTR [edi+0x4]
650152b0:	push   0x100
650152b5:	push   DWORD PTR [ebp+0x1c]
650152b8:	inc    eax
650152b9:	push   DWORD PTR [ebp+0x14]
650152bc:	mov    DWORD PTR [esi+0x8],eax
650152bf:	push   DWORD PTR [ebp+0xc]
650152c2:	mov    ecx,DWORD PTR [ebx+0xc]
650152c5:	push   esi
650152c6:	push   DWORD PTR [ebp+0x8]
650152c9:	call   0x65014ec6
650152ce:	add    esp,0x28
650152d1:	test   eax,eax
650152d3:	je     0x650152dc
650152d5:	push   esi
650152d6:	push   eax
650152d7:	call   0x650123f5
650152dc:	pop    ebp
650152dd:	ret    
650152de:	push   ebp
650152df:	mov    ebp,esp
650152e1:	push   ecx
650152e2:	push   ecx
650152e3:	push   esi
650152e4:	mov    esi,DWORD PTR [ebp+0x8]
650152e7:	cmp    DWORD PTR [esi],0x80000003
650152ed:	je     0x650153cd
650152f3:	push   edi
650152f4:	call   0x6501474b
650152f9:	cmp    DWORD PTR [eax+0x80],0x0
65015300:	je     0x65015341
65015302:	call   0x6501474b
65015307:	lea    edi,[eax+0x80]
6501530d:	call   0x65014526
65015312:	cmp    DWORD PTR [edi],eax
65015314:	je     0x65015341
65015316:	cmp    DWORD PTR [esi],0xe0434f4d
6501531c:	je     0x65015341
6501531e:	push   DWORD PTR [ebp+0x24]
65015321:	push   DWORD PTR [ebp+0x20]
65015324:	push   DWORD PTR [ebp+0x18]
65015327:	push   DWORD PTR [ebp+0x14]
6501532a:	push   DWORD PTR [ebp+0x10]
6501532d:	push   DWORD PTR [ebp+0xc]
65015330:	push   esi
65015331:	call   0x650124e4
65015336:	add    esp,0x1c
65015339:	test   eax,eax
6501533b:	jne    0x650153cc
65015341:	mov    edi,DWORD PTR [ebp+0x18]
65015344:	cmp    DWORD PTR [edi+0xc],0x0
65015348:	jne    0x6501534f
6501534a:	call   0x6501586e
6501534f:	mov    esi,DWORD PTR [ebp+0x1c]
65015352:	lea    eax,[ebp-0x8]
65015355:	push   eax
65015356:	lea    eax,[ebp-0x4]
65015359:	push   eax
6501535a:	push   esi
6501535b:	push   DWORD PTR [ebp+0x20]
6501535e:	push   edi
6501535f:	call   0x65012656
65015364:	mov    edi,eax
65015366:	mov    eax,DWORD PTR [ebp-0x4]
65015369:	add    esp,0x14
6501536c:	cmp    eax,DWORD PTR [ebp-0x8]
6501536f:	jae    0x650153cc
65015371:	push   ebx
65015372:	cmp    esi,DWORD PTR [edi]
65015374:	jl     0x650153bd
65015376:	cmp    esi,DWORD PTR [edi+0x4]
65015379:	jg     0x650153bd
6501537b:	mov    eax,DWORD PTR [edi+0xc]
6501537e:	mov    ecx,DWORD PTR [edi+0x10]
65015381:	shl    eax,0x4
65015384:	add    eax,ecx
65015386:	mov    ecx,DWORD PTR [eax-0xc]
65015389:	test   ecx,ecx
6501538b:	je     0x65015393
6501538d:	cmp    BYTE PTR [ecx+0x8],0x0
65015391:	jne    0x650153bd
65015393:	lea    ebx,[eax-0x10]
65015396:	test   BYTE PTR [ebx],0x40
65015399:	jne    0x650153bd
6501539b:	push   DWORD PTR [ebp+0x24]
6501539e:	mov    esi,DWORD PTR [ebp+0xc]
650153a1:	push   DWORD PTR [ebp+0x20]
650153a4:	push   0x0
650153a6:	push   DWORD PTR [ebp+0x18]
650153a9:	push   DWORD PTR [ebp+0x14]
650153ac:	push   DWORD PTR [ebp+0x10]
650153af:	push   DWORD PTR [ebp+0x8]
650153b2:	call   0x65015272
650153b7:	mov    esi,DWORD PTR [ebp+0x1c]
650153ba:	add    esp,0x1c
650153bd:	inc    DWORD PTR [ebp-0x4]
650153c0:	mov    eax,DWORD PTR [ebp-0x4]
650153c3:	add    edi,0x14
650153c6:	cmp    eax,DWORD PTR [ebp-0x8]
650153c9:	jb     0x65015372
650153cb:	pop    ebx
650153cc:	pop    edi
650153cd:	pop    esi
650153ce:	leave  
650153cf:	ret    
650153d0:	push   ebp
650153d1:	mov    ebp,esp
650153d3:	sub    esp,0x2c
650153d6:	mov    ecx,DWORD PTR [ebp+0xc]
650153d9:	push   ebx
650153da:	mov    ebx,DWORD PTR [ebp+0x18]
650153dd:	mov    eax,DWORD PTR [ebx+0x4]
650153e0:	cmp    eax,0x80
650153e5:	push   esi
650153e6:	push   edi
650153e7:	mov    BYTE PTR [ebp-0x1],0x0
650153eb:	jg     0x650153f3
650153ed:	movsx  ecx,BYTE PTR [ecx+0x8]
650153f1:	jmp    0x650153f6
650153f3:	mov    ecx,DWORD PTR [ecx+0x8]
650153f6:	cmp    ecx,0xffffffff
650153f9:	mov    DWORD PTR [ebp-0x8],ecx
650153fc:	jl     0x65015402
650153fe:	cmp    ecx,eax
65015400:	jl     0x65015407
65015402:	call   0x6501586e
65015407:	mov    esi,DWORD PTR [ebp+0x8]
6501540a:	mov    edi,0xe06d7363
6501540f:	cmp    DWORD PTR [esi],edi
65015411:	jne    0x650156e2
65015417:	cmp    DWORD PTR [esi+0x10],0x3
6501541b:	mov    ebx,0x19930520
65015420:	jne    0x6501554f
65015426:	mov    eax,DWORD PTR [esi+0x14]
65015429:	cmp    eax,ebx
6501542b:	je     0x6501543f
6501542d:	cmp    eax,0x19930521
65015432:	je     0x6501543f
65015434:	cmp    eax,0x19930522
65015439:	jne    0x6501554f
6501543f:	cmp    DWORD PTR [esi+0x1c],0x0
65015443:	jne    0x6501554f
65015449:	call   0x6501474b
6501544e:	cmp    DWORD PTR [eax+0x88],0x0
65015455:	je     0x65015721
6501545b:	call   0x6501474b
65015460:	mov    esi,DWORD PTR [eax+0x88]
65015466:	mov    DWORD PTR [ebp+0x8],esi
65015469:	call   0x6501474b
6501546e:	mov    eax,DWORD PTR [eax+0x8c]
65015474:	push   0x1
65015476:	push   esi
65015477:	mov    DWORD PTR [ebp+0x10],eax
6501547a:	call   0x6501adfb
6501547f:	test   eax,eax
65015481:	pop    ecx
65015482:	pop    ecx
65015483:	jne    0x6501548a
65015485:	call   0x6501586e
6501548a:	cmp    DWORD PTR [esi],edi
6501548c:	jne    0x650154b4
6501548e:	cmp    DWORD PTR [esi+0x10],0x3
65015492:	jne    0x650154b4
65015494:	mov    eax,DWORD PTR [esi+0x14]
65015497:	cmp    eax,ebx
65015499:	je     0x650154a9
6501549b:	cmp    eax,0x19930521
650154a0:	je     0x650154a9
650154a2:	cmp    eax,0x19930522
650154a7:	jne    0x650154b4
650154a9:	cmp    DWORD PTR [esi+0x1c],0x0
650154ad:	jne    0x650154b4
650154af:	call   0x6501586e
650154b4:	call   0x6501474b
650154b9:	cmp    DWORD PTR [eax+0x94],0x0
650154c0:	je     0x6501554f
650154c6:	call   0x6501474b
650154cb:	mov    edi,DWORD PTR [eax+0x94]
650154d1:	call   0x6501474b
650154d6:	push   DWORD PTR [ebp+0x8]
650154d9:	xor    esi,esi
650154db:	mov    DWORD PTR [eax+0x94],esi
650154e1:	call   0x65014e04
650154e6:	test   al,al
650154e8:	pop    ecx
650154e9:	jne    0x65015547
650154eb:	xor    ebx,ebx
650154ed:	cmp    DWORD PTR [edi],ebx
650154ef:	jle    0x6501550e
650154f1:	mov    eax,DWORD PTR [edi+0x4]
650154f4:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
650154f8:	push   0x6502c234
650154fd:	call   0x650123da
65015502:	test   al,al
65015504:	jne    0x65015513
65015506:	inc    esi
65015507:	add    ebx,0x10
6501550a:	cmp    esi,DWORD PTR [edi]
6501550c:	jl     0x650154f1
6501550e:	jmp    0x65015822
65015513:	push   0x1
65015515:	push   DWORD PTR [ebp+0x8]
65015518:	call   0x65014d8b
6501551d:	pop    ecx
6501551e:	pop    ecx
6501551f:	lea    eax,[ebp+0x8]
65015522:	push   eax
65015523:	lea    ecx,[ebp-0x2c]
65015526:	mov    DWORD PTR [ebp+0x8],0x65024d18
6501552d:	call   0x65011f78
65015532:	push   0x65029a64
65015537:	lea    eax,[ebp-0x2c]
6501553a:	push   eax
6501553b:	mov    DWORD PTR [ebp-0x2c],0x65024d10
65015542:	call   0x65012366
65015547:	mov    esi,DWORD PTR [ebp+0x8]
6501554a:	mov    edi,0xe06d7363
6501554f:	cmp    DWORD PTR [esi],edi
65015551:	jne    0x650156df
65015557:	cmp    DWORD PTR [esi+0x10],0x3
6501555b:	jne    0x650156df
65015561:	mov    eax,DWORD PTR [esi+0x14]
65015564:	cmp    eax,ebx
65015566:	je     0x6501557a
65015568:	cmp    eax,0x19930521
6501556d:	je     0x6501557a
6501556f:	cmp    eax,0x19930522
65015574:	jne    0x650156df
6501557a:	mov    edi,DWORD PTR [ebp+0x18]
6501557d:	cmp    DWORD PTR [edi+0xc],0x0
65015581:	jbe    0x65015646
65015587:	lea    eax,[ebp-0x1c]
6501558a:	push   eax
6501558b:	lea    eax,[ebp-0x10]
6501558e:	push   eax
6501558f:	push   DWORD PTR [ebp-0x8]
65015592:	push   DWORD PTR [ebp+0x20]
65015595:	push   edi
65015596:	call   0x65012656
6501559b:	add    esp,0x14
6501559e:	mov    edi,eax
650155a0:	mov    eax,DWORD PTR [ebp-0x10]
650155a3:	cmp    eax,DWORD PTR [ebp-0x1c]
650155a6:	jae    0x65015643
650155ac:	mov    eax,DWORD PTR [ebp-0x8]
650155af:	cmp    DWORD PTR [edi],eax
650155b1:	jg     0x65015638
650155b7:	cmp    eax,DWORD PTR [edi+0x4]
650155ba:	jg     0x65015638
650155bc:	mov    eax,DWORD PTR [edi+0x10]
650155bf:	mov    DWORD PTR [ebp-0xc],eax
650155c2:	mov    eax,DWORD PTR [edi+0xc]
650155c5:	test   eax,eax
650155c7:	mov    DWORD PTR [ebp-0x18],eax
650155ca:	jle    0x65015638
650155cc:	mov    eax,DWORD PTR [esi+0x1c]
650155cf:	mov    eax,DWORD PTR [eax+0xc]
650155d2:	lea    ebx,[eax+0x4]
650155d5:	mov    eax,DWORD PTR [eax]
650155d7:	test   eax,eax
650155d9:	mov    DWORD PTR [ebp-0x14],eax
650155dc:	jle    0x65015601
650155de:	push   DWORD PTR [esi+0x1c]
650155e1:	mov    eax,DWORD PTR [ebx]
650155e3:	push   eax
650155e4:	push   DWORD PTR [ebp-0xc]
650155e7:	mov    DWORD PTR [ebp-0x20],eax
650155ea:	call   0x65014bc5
650155ef:	add    esp,0xc
650155f2:	test   eax,eax
650155f4:	jne    0x65015610
650155f6:	dec    DWORD PTR [ebp-0x14]
650155f9:	add    ebx,0x4
650155fc:	cmp    DWORD PTR [ebp-0x14],eax
650155ff:	jg     0x650155de
65015601:	dec    DWORD PTR [ebp-0x18]
65015604:	add    DWORD PTR [ebp-0xc],0x10
65015608:	cmp    DWORD PTR [ebp-0x18],0x0
6501560c:	jg     0x650155cc
6501560e:	jmp    0x65015638
65015610:	push   DWORD PTR [ebp+0x24]
65015613:	mov    ebx,DWORD PTR [ebp-0xc]
65015616:	push   DWORD PTR [ebp+0x20]
65015619:	mov    BYTE PTR [ebp-0x1],0x1
6501561d:	push   DWORD PTR [ebp-0x20]
65015620:	push   DWORD PTR [ebp+0x18]
65015623:	push   DWORD PTR [ebp+0x14]
65015626:	push   DWORD PTR [ebp+0x10]
65015629:	push   esi
6501562a:	mov    esi,DWORD PTR [ebp+0xc]
6501562d:	call   0x65015272
65015632:	mov    esi,DWORD PTR [ebp+0x8]
65015635:	add    esp,0x1c
65015638:	inc    DWORD PTR [ebp-0x10]
6501563b:	add    edi,0x14
6501563e:	jmp    0x650155a0
65015643:	mov    edi,DWORD PTR [ebp+0x18]
65015646:	cmp    BYTE PTR [ebp+0x1c],0x0
6501564a:	je     0x65015656
6501564c:	push   0x1
6501564e:	push   esi
6501564f:	call   0x65014d8b
65015654:	pop    ecx
65015655:	pop    ecx
65015656:	cmp    BYTE PTR [ebp-0x1],0x0
6501565a:	jne    0x6501570e
65015660:	mov    eax,DWORD PTR [edi]
65015662:	and    eax,0x1fffffff
65015667:	cmp    eax,0x19930521
6501566c:	jb     0x6501570e
65015672:	mov    edi,DWORD PTR [edi+0x1c]
65015675:	test   edi,edi
65015677:	je     0x6501570e
6501567d:	push   esi
6501567e:	call   0x65014e04
65015683:	test   al,al
65015685:	pop    ecx
65015686:	jne    0x6501570e
6501568c:	call   0x6501474b
65015691:	call   0x6501474b
65015696:	call   0x6501474b
6501569b:	mov    DWORD PTR [eax+0x88],esi
650156a1:	call   0x6501474b
650156a6:	cmp    DWORD PTR [ebp+0x24],0x0
650156aa:	mov    ecx,DWORD PTR [ebp+0x10]
650156ad:	mov    DWORD PTR [eax+0x8c],ecx
650156b3:	push   esi
650156b4:	jne    0x650156bb
650156b6:	push   DWORD PTR [ebp+0xc]
650156b9:	jmp    0x650156be
650156bb:	push   DWORD PTR [ebp+0x24]
650156be:	call   0x6501242c
650156c3:	mov    esi,DWORD PTR [ebp+0x18]
650156c6:	push   0xffffffff
650156c8:	push   esi
650156c9:	push   DWORD PTR [ebp+0x14]
650156cc:	push   DWORD PTR [ebp+0xc]
650156cf:	call   0x65014c65
650156d4:	add    esp,0x10
650156d7:	push   DWORD PTR [esi+0x1c]
650156da:	call   0x65014e7d
650156df:	mov    ebx,DWORD PTR [ebp+0x18]
650156e2:	cmp    DWORD PTR [ebx+0xc],0x0
650156e6:	jbe    0x6501570e
650156e8:	cmp    BYTE PTR [ebp+0x1c],0x0
650156ec:	jne    0x6501550e
650156f2:	push   DWORD PTR [ebp+0x24]
650156f5:	push   DWORD PTR [ebp+0x20]
650156f8:	push   DWORD PTR [ebp-0x8]
650156fb:	push   ebx
650156fc:	push   DWORD PTR [ebp+0x14]
650156ff:	push   DWORD PTR [ebp+0x10]
65015702:	push   DWORD PTR [ebp+0xc]
65015705:	push   esi
65015706:	call   0x650152de
6501570b:	add    esp,0x20
6501570e:	call   0x6501474b
65015713:	cmp    DWORD PTR [eax+0x94],0x0
6501571a:	je     0x65015721
6501571c:	call   0x6501586e
65015721:	pop    edi
65015722:	pop    esi
65015723:	pop    ebx
65015724:	leave  
65015725:	ret    
65015726:	push   esi
65015727:	push   DWORD PTR [esp+0x8]
6501572b:	mov    esi,ecx
6501572d:	call   0x65011fde
65015732:	mov    DWORD PTR [esi],0x65024d10
65015738:	mov    eax,esi
6501573a:	pop    esi
6501573b:	ret    0x4
6501573e:	push   ebp
6501573f:	mov    ebp,esp
65015741:	push   ebx
65015742:	push   esi
65015743:	push   edi
65015744:	call   0x6501474b
65015749:	cmp    DWORD PTR [eax+0x20c],0x0
65015750:	mov    eax,DWORD PTR [ebp+0x18]
65015753:	mov    ecx,DWORD PTR [ebp+0x8]
65015756:	mov    edi,0xe06d7363
6501575b:	mov    esi,0x1fffffff
65015760:	mov    ebx,0x19930522
65015765:	jne    0x65015787
65015767:	mov    edx,DWORD PTR [ecx]
65015769:	cmp    edx,edi
6501576b:	je     0x65015787
6501576d:	cmp    edx,0x80000026
65015773:	je     0x65015787
65015775:	mov    edx,DWORD PTR [eax]
65015777:	and    edx,esi
65015779:	cmp    edx,ebx
6501577b:	jb     0x65015787
6501577d:	test   BYTE PTR [eax+0x20],0x1
65015781:	jne    0x6501581a
65015787:	test   BYTE PTR [ecx+0x4],0x66
6501578b:	je     0x650157b0
6501578d:	cmp    DWORD PTR [eax+0x4],0x0
65015791:	je     0x6501581a
65015797:	cmp    DWORD PTR [ebp+0x1c],0x0
6501579b:	jne    0x6501581a
6501579d:	push   0xffffffff
6501579f:	push   eax
650157a0:	push   DWORD PTR [ebp+0x14]
650157a3:	push   DWORD PTR [ebp+0xc]
650157a6:	call   0x65014c65
650157ab:	add    esp,0x10
650157ae:	jmp    0x6501581a
650157b0:	cmp    DWORD PTR [eax+0xc],0x0
650157b4:	jne    0x650157c8
650157b6:	mov    edx,DWORD PTR [eax]
650157b8:	and    edx,esi
650157ba:	cmp    edx,0x19930521
650157c0:	jb     0x6501581a
650157c2:	cmp    DWORD PTR [eax+0x1c],0x0
650157c6:	je     0x6501581a
650157c8:	cmp    DWORD PTR [ecx],edi
650157ca:	jne    0x650157fe
650157cc:	cmp    DWORD PTR [ecx+0x10],0x3
650157d0:	jb     0x650157fe
650157d2:	cmp    DWORD PTR [ecx+0x14],ebx
650157d5:	jbe    0x650157fe
650157d7:	mov    edx,DWORD PTR [ecx+0x1c]
650157da:	mov    edx,DWORD PTR [edx+0x8]
650157dd:	test   edx,edx
650157df:	je     0x650157fe
650157e1:	movzx  esi,BYTE PTR [ebp+0x24]
650157e5:	push   esi
650157e6:	push   DWORD PTR [ebp+0x20]
650157e9:	push   DWORD PTR [ebp+0x1c]
650157ec:	push   eax
650157ed:	push   DWORD PTR [ebp+0x14]
650157f0:	push   DWORD PTR [ebp+0x10]
650157f3:	push   DWORD PTR [ebp+0xc]
650157f6:	push   ecx
650157f7:	call   edx
650157f9:	add    esp,0x20
650157fc:	jmp    0x6501581d
650157fe:	push   DWORD PTR [ebp+0x20]
65015801:	push   DWORD PTR [ebp+0x1c]
65015804:	push   DWORD PTR [ebp+0x24]
65015807:	push   eax
65015808:	push   DWORD PTR [ebp+0x14]
6501580b:	push   DWORD PTR [ebp+0x10]
6501580e:	push   DWORD PTR [ebp+0xc]
65015811:	push   ecx
65015812:	call   0x650153d0
65015817:	add    esp,0x20
6501581a:	xor    eax,eax
6501581c:	inc    eax
6501581d:	pop    edi
6501581e:	pop    esi
6501581f:	pop    ebx
65015820:	pop    ebp
65015821:	ret    
65015822:	push   0x8
65015824:	push   0x65029aa0
65015829:	call   0x65013d00
6501582e:	call   0x6501474b
65015833:	mov    eax,DWORD PTR [eax+0x78]
65015836:	test   eax,eax
65015838:	je     0x65015850
6501583a:	and    DWORD PTR [ebp-0x4],0x0
6501583e:	call   eax
65015840:	jmp    0x65015849
65015842:	xor    eax,eax
65015844:	inc    eax
65015845:	ret    
65015846:	mov    esp,DWORD PTR [ebp-0x18]
65015849:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015850:	call   0x6501ae08
65015855:	call   0x65013d45
6501585a:	ret    
6501585b:	call   0x6501474b
65015860:	mov    eax,DWORD PTR [eax+0x7c]
65015863:	test   eax,eax
65015865:	je     0x65015869
65015867:	call   eax
65015869:	jmp    0x65015822
6501586e:	push   0x8
65015870:	push   0x65029ac0
65015875:	call   0x65013d00
6501587a:	push   DWORD PTR ds:0x6502d5c0
65015880:	call   0x6501452f
65015885:	pop    ecx
65015886:	test   eax,eax
65015888:	je     0x650158a0
6501588a:	and    DWORD PTR [ebp-0x4],0x0
6501588e:	call   eax
65015890:	jmp    0x65015899
65015892:	xor    eax,eax
65015894:	inc    eax
65015895:	ret    
65015896:	mov    esp,DWORD PTR [ebp-0x18]
65015899:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650158a0:	jmp    0x65015822
650158a5:	push   0x65015822
650158aa:	call   0x650144b8
650158af:	pop    ecx
650158b0:	mov    ds:0x6502d5c0,eax
650158b5:	ret    
650158b6:	int3   
650158b7:	int3   
650158b8:	int3   
650158b9:	int3   
650158ba:	int3   
650158bb:	int3   
650158bc:	int3   
650158bd:	int3   
650158be:	int3   
650158bf:	int3   
650158c0:	push   ebp
650158c1:	mov    ebp,esp
650158c3:	sub    esp,0x4
650158c6:	push   ebx
650158c7:	push   ecx
650158c8:	mov    eax,DWORD PTR [ebp+0xc]
650158cb:	add    eax,0xc
650158ce:	mov    DWORD PTR [ebp-0x4],eax
650158d1:	mov    eax,DWORD PTR [ebp+0x8]
650158d4:	push   ebp
650158d5:	push   DWORD PTR [ebp+0x10]
650158d8:	mov    ecx,DWORD PTR [ebp+0x10]
650158db:	mov    ebp,DWORD PTR [ebp-0x4]
650158de:	call   0x6501b008
650158e3:	push   esi
650158e4:	push   edi
650158e5:	call   eax
650158e7:	pop    edi
650158e8:	pop    esi
650158e9:	mov    ebx,ebp
650158eb:	pop    ebp
650158ec:	mov    ecx,DWORD PTR [ebp+0x10]
650158ef:	push   ebp
650158f0:	mov    ebp,ebx
650158f2:	cmp    ecx,0x100
650158f8:	jne    0x650158ff
650158fa:	mov    ecx,0x2
650158ff:	push   ecx
65015900:	call   0x6501b008
65015905:	pop    ebp
65015906:	pop    ecx
65015907:	pop    ebx
65015908:	leave  
65015909:	ret    0xc
6501590c:	push   ebp
6501590d:	mov    ebp,esp
6501590f:	sub    esp,0x328
65015915:	mov    ds:0x6502d6d0,eax
6501591a:	mov    DWORD PTR ds:0x6502d6cc,ecx
65015920:	mov    DWORD PTR ds:0x6502d6c8,edx
65015926:	mov    DWORD PTR ds:0x6502d6c4,ebx
6501592c:	mov    DWORD PTR ds:0x6502d6c0,esi
65015932:	mov    DWORD PTR ds:0x6502d6bc,edi
65015938:	data16 mov WORD PTR ds:0x6502d6e8,ss
6501593f:	data16 mov WORD PTR ds:0x6502d6dc,cs
65015946:	data16 mov WORD PTR ds:0x6502d6b8,ds
6501594d:	data16 mov WORD PTR ds:0x6502d6b4,es
65015954:	data16 mov WORD PTR ds:0x6502d6b0,fs
6501595b:	data16 mov WORD PTR ds:0x6502d6ac,gs
65015962:	pushf  
65015963:	pop    DWORD PTR ds:0x6502d6e0
65015969:	mov    eax,DWORD PTR [ebp+0x0]
6501596c:	mov    ds:0x6502d6d4,eax
65015971:	mov    eax,DWORD PTR [ebp+0x4]
65015974:	mov    ds:0x6502d6d8,eax
65015979:	lea    eax,[ebp+0x8]
6501597c:	mov    ds:0x6502d6e4,eax
65015981:	mov    eax,DWORD PTR [ebp-0x320]
65015987:	mov    DWORD PTR ds:0x6502d620,0x10001
65015991:	mov    eax,ds:0x6502d6d8
65015996:	mov    ds:0x6502d5d4,eax
6501599b:	mov    DWORD PTR ds:0x6502d5c8,0xc0000409
650159a5:	mov    DWORD PTR ds:0x6502d5cc,0x1
650159af:	mov    eax,ds:0x6502c09c
650159b4:	mov    DWORD PTR [ebp-0x328],eax
650159ba:	mov    eax,ds:0x6502c0a0
650159bf:	mov    DWORD PTR [ebp-0x324],eax
650159c5:	call   DWORD PTR ds:0x65024114
650159cb:	mov    ds:0x6502d618,eax
650159d0:	push   0x1
650159d2:	call   0x65014444
650159d7:	pop    ecx
650159d8:	push   0x0
650159da:	call   DWORD PTR ds:0x65024110
650159e0:	push   0x65024d28
650159e5:	call   DWORD PTR ds:0x6502410c
650159eb:	cmp    DWORD PTR ds:0x6502d618,0x0
650159f2:	jne    0x650159fc
650159f4:	push   0x1
650159f6:	call   0x65014444
650159fb:	pop    ecx
650159fc:	push   0xc0000409
65015a01:	call   DWORD PTR ds:0x65024048
65015a07:	push   eax
65015a08:	call   DWORD PTR ds:0x65024108
65015a0e:	leave  
65015a0f:	ret    
65015a10:	push   esi
65015a11:	push   edi
65015a12:	xor    esi,esi
65015a14:	push   DWORD PTR [esp+0xc]
65015a18:	call   0x650136b3
65015a1d:	mov    edi,eax
65015a1f:	test   edi,edi
65015a21:	pop    ecx
65015a22:	jne    0x65015a4b
65015a24:	cmp    DWORD PTR ds:0x6502d8ec,eax
65015a2a:	jbe    0x65015a4b
65015a2c:	push   esi
65015a2d:	call   DWORD PTR ds:0x6502404c
65015a33:	lea    eax,[esi+0x3e8]
65015a39:	cmp    eax,DWORD PTR ds:0x6502d8ec
65015a3f:	jbe    0x65015a44
65015a41:	or     eax,0xffffffff
65015a44:	cmp    eax,0xffffffff
65015a47:	mov    esi,eax
65015a49:	jne    0x65015a14
65015a4b:	mov    eax,edi
65015a4d:	pop    edi
65015a4e:	pop    esi
65015a4f:	ret    
65015a50:	push   esi
65015a51:	push   edi
65015a52:	xor    esi,esi
65015a54:	push   0x0
65015a56:	push   DWORD PTR [esp+0x14]
65015a5a:	push   DWORD PTR [esp+0x14]
65015a5e:	call   0x6501b033
65015a63:	mov    edi,eax
65015a65:	add    esp,0xc
65015a68:	test   edi,edi
65015a6a:	jne    0x65015a93
65015a6c:	cmp    DWORD PTR ds:0x6502d8ec,eax
65015a72:	jbe    0x65015a93
65015a74:	push   esi
65015a75:	call   DWORD PTR ds:0x6502404c
65015a7b:	lea    eax,[esi+0x3e8]
65015a81:	cmp    eax,DWORD PTR ds:0x6502d8ec
65015a87:	jbe    0x65015a8c
65015a89:	or     eax,0xffffffff
65015a8c:	cmp    eax,0xffffffff
65015a8f:	mov    esi,eax
65015a91:	jne    0x65015a54
65015a93:	mov    eax,edi
65015a95:	pop    edi
65015a96:	pop    esi
65015a97:	ret    
65015a98:	push   esi
65015a99:	push   edi
65015a9a:	xor    esi,esi
65015a9c:	push   DWORD PTR [esp+0x10]
65015aa0:	push   DWORD PTR [esp+0x10]
65015aa4:	call   0x65013ae5
65015aa9:	mov    edi,eax
65015aab:	test   edi,edi
65015aad:	pop    ecx
65015aae:	pop    ecx
65015aaf:	jne    0x65015ade
65015ab1:	cmp    DWORD PTR [esp+0x10],eax
65015ab5:	je     0x65015ade
65015ab7:	cmp    DWORD PTR ds:0x6502d8ec,eax
65015abd:	jbe    0x65015ade
65015abf:	push   esi
65015ac0:	call   DWORD PTR ds:0x6502404c
65015ac6:	lea    eax,[esi+0x3e8]
65015acc:	cmp    eax,DWORD PTR ds:0x6502d8ec
65015ad2:	jbe    0x65015ad7
65015ad4:	or     eax,0xffffffff
65015ad7:	cmp    eax,0xffffffff
65015ada:	mov    esi,eax
65015adc:	jne    0x65015a9c
65015ade:	mov    eax,edi
65015ae0:	pop    edi
65015ae1:	pop    esi
65015ae2:	ret    
65015ae3:	push   0x10
65015ae5:	push   0x65029ae0
65015aea:	call   0x65013d00
65015aef:	xor    eax,eax
65015af1:	mov    ebx,DWORD PTR [ebp+0x8]
65015af4:	xor    edi,edi
65015af6:	cmp    ebx,edi
65015af8:	setne  al
65015afb:	cmp    eax,edi
65015afd:	jne    0x65015b1c
65015aff:	call   0x65014400
65015b04:	mov    DWORD PTR [eax],0x16
65015b0a:	push   edi
65015b0b:	push   edi
65015b0c:	push   edi
65015b0d:	push   edi
65015b0e:	push   edi
65015b0f:	call   0x650122af
65015b14:	add    esp,0x14
65015b17:	or     eax,0xffffffff
65015b1a:	jmp    0x65015b6f
65015b1c:	cmp    DWORD PTR ds:0x6503143c,0x3
65015b23:	jne    0x65015b5d
65015b25:	push   0x4
65015b27:	call   0x65019cf8
65015b2c:	pop    ecx
65015b2d:	mov    DWORD PTR [ebp-0x4],edi
65015b30:	push   ebx
65015b31:	call   0x65019d71
65015b36:	pop    ecx
65015b37:	mov    DWORD PTR [ebp-0x20],eax
65015b3a:	cmp    eax,edi
65015b3c:	je     0x65015b49
65015b3e:	mov    esi,DWORD PTR [ebx-0x4]
65015b41:	sub    esi,0x9
65015b44:	mov    DWORD PTR [ebp-0x1c],esi
65015b47:	jmp    0x65015b4c
65015b49:	mov    esi,DWORD PTR [ebp-0x1c]
65015b4c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015b53:	call   0x65015b7d
65015b58:	cmp    DWORD PTR [ebp-0x20],edi
65015b5b:	jne    0x65015b6d
65015b5d:	push   ebx
65015b5e:	push   edi
65015b5f:	push   DWORD PTR ds:0x6502da8c
65015b65:	call   DWORD PTR ds:0x65024100
65015b6b:	mov    esi,eax
65015b6d:	mov    eax,esi
65015b6f:	call   0x65013d45
65015b74:	ret    
65015b75:	xor    edi,edi
65015b77:	mov    ebx,DWORD PTR [ebp+0x8]
65015b7a:	mov    esi,DWORD PTR [ebp-0x1c]
65015b7d:	push   0x4
65015b7f:	call   0x65019c20
65015b84:	pop    ecx
65015b85:	ret    
65015b86:	call   0x6501a9c8
65015b8b:	push   DWORD PTR [esp+0x4]
65015b8f:	call   0x6501a828
65015b94:	push   DWORD PTR ds:0x6502c260
65015b9a:	call   0x6501452f
65015b9f:	push   0xff
65015ba4:	call   eax
65015ba6:	add    esp,0xc
65015ba9:	ret    
65015baa:	push   0x65024d40
65015baf:	call   DWORD PTR ds:0x65024124
65015bb5:	test   eax,eax
65015bb7:	je     0x65015bcf
65015bb9:	push   0x65024d30
65015bbe:	push   eax
65015bbf:	call   DWORD PTR ds:0x65024014
65015bc5:	test   eax,eax
65015bc7:	je     0x65015bcf
65015bc9:	push   DWORD PTR [esp+0x4]
65015bcd:	call   eax
65015bcf:	ret    
65015bd0:	push   DWORD PTR [esp+0x4]
65015bd4:	call   0x65015baa
65015bd9:	pop    ecx
65015bda:	push   DWORD PTR [esp+0x4]
65015bde:	call   DWORD PTR ds:0x65024138
65015be4:	int3   
65015be5:	push   0x8
65015be7:	call   0x65019cf8
65015bec:	pop    ecx
65015bed:	ret    
65015bee:	push   0x8
65015bf0:	call   0x65019c20
65015bf5:	pop    ecx
65015bf6:	ret    
65015bf7:	push   esi
65015bf8:	mov    esi,eax
65015bfa:	jmp    0x65015c07
65015bfc:	mov    eax,DWORD PTR [esi]
65015bfe:	test   eax,eax
65015c00:	je     0x65015c04
65015c02:	call   eax
65015c04:	add    esi,0x4
65015c07:	cmp    esi,DWORD PTR [esp+0x8]
65015c0b:	jb     0x65015bfc
65015c0d:	pop    esi
65015c0e:	ret    
65015c0f:	push   esi
65015c10:	mov    esi,DWORD PTR [esp+0x8]
65015c14:	xor    eax,eax
65015c16:	jmp    0x65015c27
65015c18:	test   eax,eax
65015c1a:	jne    0x65015c2d
65015c1c:	mov    ecx,DWORD PTR [esi]
65015c1e:	test   ecx,ecx
65015c20:	je     0x65015c24
65015c22:	call   ecx
65015c24:	add    esi,0x4
65015c27:	cmp    esi,DWORD PTR [esp+0xc]
65015c2b:	jb     0x65015c18
65015c2d:	pop    esi
65015c2e:	ret    
65015c2f:	mov    ecx,DWORD PTR [esp+0x4]
65015c33:	push   esi
65015c34:	xor    esi,esi
65015c36:	cmp    ecx,esi
65015c38:	jne    0x65015c57
65015c3a:	call   0x65014400
65015c3f:	push   esi
65015c40:	push   esi
65015c41:	push   esi
65015c42:	push   esi
65015c43:	push   esi
65015c44:	mov    DWORD PTR [eax],0x16
65015c4a:	call   0x650122af
65015c4f:	add    esp,0x14
65015c52:	push   0x16
65015c54:	pop    eax
65015c55:	pop    esi
65015c56:	ret    
65015c57:	mov    eax,ds:0x6502d8f4
65015c5c:	cmp    eax,esi
65015c5e:	je     0x65015c3a
65015c60:	mov    DWORD PTR [ecx],eax
65015c62:	xor    eax,eax
65015c64:	pop    esi
65015c65:	ret    
65015c66:	mov    eax,DWORD PTR [esp+0x4]
65015c6a:	push   esi
65015c6b:	xor    esi,esi
65015c6d:	cmp    eax,esi
65015c6f:	jne    0x65015c8e
65015c71:	call   0x65014400
65015c76:	push   esi
65015c77:	push   esi
65015c78:	push   esi
65015c79:	push   esi
65015c7a:	push   esi
65015c7b:	mov    DWORD PTR [eax],0x16
65015c81:	call   0x650122af
65015c86:	add    esp,0x14
65015c89:	push   0x16
65015c8b:	pop    eax
65015c8c:	pop    esi
65015c8d:	ret    
65015c8e:	cmp    DWORD PTR ds:0x6502d8f4,esi
65015c94:	je     0x65015c71
65015c96:	mov    ecx,DWORD PTR ds:0x6502d900
65015c9c:	mov    DWORD PTR [eax],ecx
65015c9e:	xor    eax,eax
65015ca0:	pop    esi
65015ca1:	ret    
65015ca2:	cmp    DWORD PTR ds:0x650265b4,0x0
65015ca9:	je     0x65015cc5
65015cab:	push   0x650265b4
65015cb0:	call   0x6501ad40
65015cb5:	test   eax,eax
65015cb7:	pop    ecx
65015cb8:	je     0x65015cc5
65015cba:	push   DWORD PTR [esp+0x4]
65015cbe:	call   DWORD PTR ds:0x650265b4
65015cc4:	pop    ecx
65015cc5:	call   0x6501b151
65015cca:	push   0x65024218
65015ccf:	push   0x65024200
65015cd4:	call   0x65015c0f
65015cd9:	test   eax,eax
65015cdb:	pop    ecx
65015cdc:	pop    ecx
65015cdd:	jne    0x65015d33
65015cdf:	push   esi
65015ce0:	push   edi
65015ce1:	push   0x65018780
65015ce6:	call   0x650128ef
65015ceb:	mov    esi,0x650241e4
65015cf0:	mov    eax,esi
65015cf2:	mov    edi,0x650241fc
65015cf7:	cmp    eax,edi
65015cf9:	pop    ecx
65015cfa:	jae    0x65015d0b
65015cfc:	mov    eax,DWORD PTR [esi]
65015cfe:	test   eax,eax
65015d00:	je     0x65015d04
65015d02:	call   eax
65015d04:	add    esi,0x4
65015d07:	cmp    esi,edi
65015d09:	jb     0x65015cfc
65015d0b:	cmp    DWORD PTR ds:0x65031578,0x0
65015d12:	pop    edi
65015d13:	pop    esi
65015d14:	je     0x65015d31
65015d16:	push   0x65031578
65015d1b:	call   0x6501ad40
65015d20:	test   eax,eax
65015d22:	pop    ecx
65015d23:	je     0x65015d31
65015d25:	push   0x0
65015d27:	push   0x2
65015d29:	push   0x0
65015d2b:	call   DWORD PTR ds:0x65031578
65015d31:	xor    eax,eax
65015d33:	ret    
65015d34:	push   0x10
65015d36:	push   0x65029b00
65015d3b:	call   0x65013d00
65015d40:	push   0x8
65015d42:	call   0x65019cf8
65015d47:	pop    ecx
65015d48:	xor    edi,edi
65015d4a:	mov    DWORD PTR [ebp-0x4],edi
65015d4d:	xor    ebx,ebx
65015d4f:	inc    ebx
65015d50:	cmp    DWORD PTR ds:0x6502d934,ebx
65015d56:	je     0x65015dd6
65015d58:	mov    DWORD PTR ds:0x6502d930,ebx
65015d5e:	mov    al,BYTE PTR [ebp+0x10]
65015d61:	mov    ds:0x6502d92c,al
65015d66:	cmp    DWORD PTR [ebp+0xc],edi
65015d69:	jne    0x65015dc6
65015d6b:	push   DWORD PTR ds:0x65031570
65015d71:	call   0x6501452f
65015d76:	mov    DWORD PTR [ebp-0x1c],eax
65015d79:	push   DWORD PTR ds:0x6503156c
65015d7f:	call   0x6501452f
65015d84:	pop    ecx
65015d85:	pop    ecx
65015d86:	mov    esi,eax
65015d88:	mov    DWORD PTR [ebp-0x20],esi
65015d8b:	cmp    DWORD PTR [ebp-0x1c],edi
65015d8e:	je     0x65015db6
65015d90:	sub    esi,0x4
65015d93:	mov    DWORD PTR [ebp-0x20],esi
65015d96:	cmp    esi,DWORD PTR [ebp-0x1c]
65015d99:	jb     0x65015db6
65015d9b:	cmp    DWORD PTR [esi],0x0
65015d9e:	je     0x65015d90
65015da0:	mov    edi,DWORD PTR [esi]
65015da2:	call   0x65014526
65015da7:	cmp    edi,eax
65015da9:	je     0x65015d90
65015dab:	push   edi
65015dac:	call   0x6501452f
65015db1:	pop    ecx
65015db2:	call   eax
65015db4:	jmp    0x65015d90
65015db6:	push   0x65024228
65015dbb:	mov    eax,0x6502421c
65015dc0:	call   0x65015bf7
65015dc5:	pop    ecx
65015dc6:	push   0x65024230
65015dcb:	mov    eax,0x6502422c
65015dd0:	call   0x65015bf7
65015dd5:	pop    ecx
65015dd6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015ddd:	call   0x65015e01
65015de2:	cmp    DWORD PTR [ebp+0x10],0x0
65015de6:	jne    0x65015e10
65015de8:	mov    DWORD PTR ds:0x6502d934,ebx
65015dee:	push   0x8
65015df0:	call   0x65019c20
65015df5:	pop    ecx
65015df6:	push   DWORD PTR [ebp+0x8]
65015df9:	call   0x65015bd0
65015dfe:	xor    ebx,ebx
65015e00:	inc    ebx
65015e01:	cmp    DWORD PTR [ebp+0x10],0x0
65015e05:	je     0x65015e0f
65015e07:	push   0x8
65015e09:	call   0x65019c20
65015e0e:	pop    ecx
65015e0f:	ret    
65015e10:	call   0x65013d45
65015e15:	ret    
65015e16:	push   0x0
65015e18:	push   0x1
65015e1a:	push   DWORD PTR [esp+0xc]
65015e1e:	call   0x65015d34
65015e23:	add    esp,0xc
65015e26:	ret    
65015e27:	push   0x1
65015e29:	push   0x0
65015e2b:	push   0x0
65015e2d:	call   0x65015d34
65015e32:	add    esp,0xc
65015e35:	ret    
65015e36:	push   esi
65015e37:	call   0x65014526
65015e3c:	mov    esi,eax
65015e3e:	push   esi
65015e3f:	call   0x65014a71
65015e44:	push   esi
65015e45:	call   0x6501b38e
65015e4a:	push   esi
65015e4b:	call   0x650121a9
65015e50:	push   esi
65015e51:	call   0x6501b384
65015e56:	push   esi
65015e57:	call   0x6501b37a
65015e5c:	push   esi
65015e5d:	call   0x6501b170
65015e62:	push   esi
65015e63:	call   0x6501ebb7
65015e68:	push   esi
65015e69:	call   0x650158a5
65015e6e:	push   0x65015e16
65015e73:	call   0x650144b8
65015e78:	add    esp,0x24
65015e7b:	mov    ds:0x6502c260,eax
65015e80:	pop    esi
65015e81:	ret    
65015e82:	sub    eax,0x3a4
65015e87:	je     0x65015eab
65015e89:	sub    eax,0x4
65015e8c:	je     0x65015ea5
65015e8e:	sub    eax,0xd
65015e91:	je     0x65015e9f
65015e93:	dec    eax
65015e94:	je     0x65015e99
65015e96:	xor    eax,eax
65015e98:	ret    
65015e99:	mov    eax,0x404
65015e9e:	ret    
65015e9f:	mov    eax,0x412
65015ea4:	ret    
65015ea5:	mov    eax,0x804
65015eaa:	ret    
65015eab:	mov    eax,0x411
65015eb0:	ret    
65015eb1:	push   ebx
65015eb2:	push   ebp
65015eb3:	push   esi
65015eb4:	push   edi
65015eb5:	mov    ebp,0x101
65015eba:	mov    esi,eax
65015ebc:	push   ebp
65015ebd:	xor    edi,edi
65015ebf:	lea    ebx,[esi+0x1c]
65015ec2:	push   edi
65015ec3:	push   ebx
65015ec4:	call   0x65012e40
65015ec9:	mov    DWORD PTR [esi+0x4],edi
65015ecc:	mov    DWORD PTR [esi+0x8],edi
65015ecf:	mov    DWORD PTR [esi+0xc],edi
65015ed2:	xor    eax,eax
65015ed4:	lea    edi,[esi+0x10]
65015ed7:	stos   DWORD PTR es:[edi],eax
65015ed8:	stos   DWORD PTR es:[edi],eax
65015ed9:	stos   DWORD PTR es:[edi],eax
65015eda:	mov    eax,0x6502c268
65015edf:	add    esp,0xc
65015ee2:	sub    eax,esi
65015ee4:	mov    cl,BYTE PTR [eax+ebx*1]
65015ee7:	mov    BYTE PTR [ebx],cl
65015ee9:	inc    ebx
65015eea:	dec    ebp
65015eeb:	jne    0x65015ee4
65015eed:	lea    ecx,[esi+0x11d]
65015ef3:	mov    esi,0x100
65015ef8:	mov    dl,BYTE PTR [ecx+eax*1]
65015efb:	mov    BYTE PTR [ecx],dl
65015efd:	inc    ecx
65015efe:	dec    esi
65015eff:	jne    0x65015ef8
65015f01:	pop    edi
65015f02:	pop    esi
65015f03:	pop    ebp
65015f04:	pop    ebx
65015f05:	ret    
65015f06:	push   ebp
65015f07:	lea    ebp,[esp-0x49c]
65015f0e:	sub    esp,0x51c
65015f14:	mov    eax,ds:0x6502c09c
65015f19:	xor    eax,ebp
65015f1b:	mov    DWORD PTR [ebp+0x498],eax
65015f21:	push   ebx
65015f22:	push   edi
65015f23:	lea    eax,[ebp-0x7c]
65015f26:	push   eax
65015f27:	push   DWORD PTR [esi+0x4]
65015f2a:	call   DWORD PTR ds:0x6502413c
65015f30:	test   eax,eax
65015f32:	mov    edi,0x100
65015f37:	je     0x6501602c
65015f3d:	xor    eax,eax
65015f3f:	mov    BYTE PTR [ebp+eax*1+0x398],al
65015f46:	inc    eax
65015f47:	cmp    eax,edi
65015f49:	jb     0x65015f3f
65015f4b:	mov    al,BYTE PTR [ebp-0x76]
65015f4e:	test   al,al
65015f50:	mov    BYTE PTR [ebp+0x398],0x20
65015f57:	je     0x65015f84
65015f59:	lea    ebx,[ebp-0x75]
65015f5c:	movzx  ecx,al
65015f5f:	movzx  eax,BYTE PTR [ebx]
65015f62:	cmp    ecx,eax
65015f64:	ja     0x65015f7c
65015f66:	sub    eax,ecx
65015f68:	inc    eax
65015f69:	push   eax
65015f6a:	lea    edx,[ebp+ecx*1+0x398]
65015f71:	push   0x20
65015f73:	push   edx
65015f74:	call   0x65012e40
65015f79:	add    esp,0xc
65015f7c:	inc    ebx
65015f7d:	mov    al,BYTE PTR [ebx]
65015f7f:	inc    ebx
65015f80:	test   al,al
65015f82:	jne    0x65015f5c
65015f84:	push   0x0
65015f86:	push   DWORD PTR [esi+0xc]
65015f89:	lea    eax,[ebp-0x68]
65015f8c:	push   DWORD PTR [esi+0x4]
65015f8f:	push   eax
65015f90:	push   edi
65015f91:	lea    eax,[ebp+0x398]
65015f97:	push   eax
65015f98:	push   0x1
65015f9a:	push   0x0
65015f9c:	call   0x6501b625
65015fa1:	xor    ebx,ebx
65015fa3:	push   ebx
65015fa4:	push   DWORD PTR [esi+0x4]
65015fa7:	lea    eax,[ebp+0x298]
65015fad:	push   edi
65015fae:	push   eax
65015faf:	push   edi
65015fb0:	lea    eax,[ebp+0x398]
65015fb6:	push   eax
65015fb7:	push   edi
65015fb8:	push   DWORD PTR [esi+0xc]
65015fbb:	push   ebx
65015fbc:	call   0x65019afb
65015fc1:	add    esp,0x44
65015fc4:	push   ebx
65015fc5:	push   DWORD PTR [esi+0x4]
65015fc8:	lea    eax,[ebp+0x198]
65015fce:	push   edi
65015fcf:	push   eax
65015fd0:	push   edi
65015fd1:	lea    eax,[ebp+0x398]
65015fd7:	push   eax
65015fd8:	push   0x200
65015fdd:	push   DWORD PTR [esi+0xc]
65015fe0:	push   ebx
65015fe1:	call   0x65019afb
65015fe6:	add    esp,0x24
65015fe9:	xor    eax,eax
65015feb:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
65015ff0:	test   cl,0x1
65015ff3:	je     0x65016003
65015ff5:	or     BYTE PTR [esi+eax*1+0x1d],0x10
65015ffa:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
65016001:	jmp    0x65016014
65016003:	test   cl,0x2
65016006:	je     0x6501601d
65016008:	or     BYTE PTR [esi+eax*1+0x1d],0x20
6501600d:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
65016014:	mov    BYTE PTR [esi+eax*1+0x11d],cl
6501601b:	jmp    0x65016025
6501601d:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
65016025:	inc    eax
65016026:	cmp    eax,edi
65016028:	jb     0x65015feb
6501602a:	jmp    0x65016079
6501602c:	lea    eax,[esi+0x11d]
65016032:	mov    DWORD PTR [ebp-0x80],0xffffff9f
65016039:	xor    ecx,ecx
6501603b:	sub    DWORD PTR [ebp-0x80],eax
6501603e:	mov    edx,DWORD PTR [ebp-0x80]
65016041:	lea    eax,[esi+ecx*1+0x11d]
65016048:	add    edx,eax
6501604a:	lea    ebx,[edx+0x20]
6501604d:	cmp    ebx,0x19
65016050:	ja     0x6501605e
65016052:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
65016057:	mov    dl,cl
65016059:	add    dl,0x20
6501605c:	jmp    0x6501606d
6501605e:	cmp    edx,0x19
65016061:	ja     0x65016071
65016063:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
65016068:	mov    dl,cl
6501606a:	sub    dl,0x20
6501606d:	mov    BYTE PTR [eax],dl
6501606f:	jmp    0x65016074
65016071:	mov    BYTE PTR [eax],0x0
65016074:	inc    ecx
65016075:	cmp    ecx,edi
65016077:	jb     0x6501603e
65016079:	mov    ecx,DWORD PTR [ebp+0x498]
6501607f:	pop    edi
65016080:	xor    ecx,ebp
65016082:	pop    ebx
65016083:	call   0x650127bc
65016088:	add    ebp,0x49c
6501608e:	leave  
6501608f:	ret    
65016090:	push   0xc
65016092:	push   0x65029b20
65016097:	call   0x65013d00
6501609c:	call   0x6501474b
650160a1:	mov    edi,eax
650160a3:	mov    eax,ds:0x6502c78c
650160a8:	test   DWORD PTR [edi+0x70],eax
650160ab:	je     0x650160ca
650160ad:	cmp    DWORD PTR [edi+0x6c],0x0
650160b1:	je     0x650160ca
650160b3:	mov    esi,DWORD PTR [edi+0x68]
650160b6:	test   esi,esi
650160b8:	jne    0x650160c2
650160ba:	push   0x20
650160bc:	call   0x65015b86
650160c1:	pop    ecx
650160c2:	mov    eax,esi
650160c4:	call   0x65013d45
650160c9:	ret    
650160ca:	push   0xd
650160cc:	call   0x65019cf8
650160d1:	pop    ecx
650160d2:	and    DWORD PTR [ebp-0x4],0x0
650160d6:	mov    esi,DWORD PTR [edi+0x68]
650160d9:	mov    DWORD PTR [ebp-0x1c],esi
650160dc:	cmp    esi,DWORD PTR ds:0x6502c690
650160e2:	je     0x6501611a
650160e4:	test   esi,esi
650160e6:	je     0x65016102
650160e8:	push   esi
650160e9:	call   DWORD PTR ds:0x65024098
650160ef:	test   eax,eax
650160f1:	jne    0x65016102
650160f3:	cmp    esi,0x6502c268
650160f9:	je     0x65016102
650160fb:	push   esi
650160fc:	call   0x650135d6
65016101:	pop    ecx
65016102:	mov    eax,ds:0x6502c690
65016107:	mov    DWORD PTR [edi+0x68],eax
6501610a:	mov    esi,DWORD PTR ds:0x6502c690
65016110:	mov    DWORD PTR [ebp-0x1c],esi
65016113:	push   esi
65016114:	call   DWORD PTR ds:0x65024020
6501611a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65016121:	call   0x6501612b
65016126:	jmp    0x650160b6
65016128:	mov    esi,DWORD PTR [ebp-0x1c]
6501612b:	push   0xd
6501612d:	call   0x65019c20
65016132:	pop    ecx
65016133:	ret    
65016134:	push   ebp
65016135:	mov    ebp,esp
65016137:	sub    esp,0x10
6501613a:	push   ebx
6501613b:	xor    ebx,ebx
6501613d:	push   ebx
6501613e:	lea    ecx,[ebp-0x10]
65016141:	call   0x6501295f
65016146:	cmp    esi,0xfffffffe
65016149:	mov    DWORD PTR ds:0x6502d938,ebx
6501614f:	jne    0x6501616f
65016151:	mov    DWORD PTR ds:0x6502d938,0x1
6501615b:	call   DWORD PTR ds:0x65024140
65016161:	cmp    BYTE PTR [ebp-0x4],bl
65016164:	je     0x650161ab
65016166:	mov    ecx,DWORD PTR [ebp-0x8]
65016169:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501616d:	jmp    0x650161ab
6501616f:	cmp    esi,0xfffffffd
65016172:	jne    0x65016186
65016174:	mov    DWORD PTR ds:0x6502d938,0x1
6501617e:	call   DWORD PTR ds:0x650240dc
65016184:	jmp    0x65016161
65016186:	cmp    esi,0xfffffffc
65016189:	jne    0x6501619d
6501618b:	mov    eax,DWORD PTR [ebp-0x10]
6501618e:	mov    eax,DWORD PTR [eax+0x4]
65016191:	mov    DWORD PTR ds:0x6502d938,0x1
6501619b:	jmp    0x65016161
6501619d:	cmp    BYTE PTR [ebp-0x4],bl
650161a0:	je     0x650161a9
650161a2:	mov    eax,DWORD PTR [ebp-0x8]
650161a5:	and    DWORD PTR [eax+0x70],0xfffffffd
650161a9:	mov    eax,esi
650161ab:	pop    ebx
650161ac:	leave  
650161ad:	ret    
650161ae:	push   ebp
650161af:	mov    ebp,esp
650161b1:	sub    esp,0x20
650161b4:	mov    eax,ds:0x6502c09c
650161b9:	xor    eax,ebp
650161bb:	mov    DWORD PTR [ebp-0x4],eax
650161be:	push   ebx
650161bf:	mov    ebx,DWORD PTR [ebp+0xc]
650161c2:	push   esi
650161c3:	mov    esi,DWORD PTR [ebp+0x8]
650161c6:	push   edi
650161c7:	call   0x65016134
650161cc:	mov    edi,eax
650161ce:	xor    esi,esi
650161d0:	cmp    edi,esi
650161d2:	mov    DWORD PTR [ebp+0x8],edi
650161d5:	jne    0x650161e5
650161d7:	mov    eax,ebx
650161d9:	call   0x65015eb1
650161de:	xor    eax,eax
650161e0:	jmp    0x65016378
650161e5:	mov    DWORD PTR [ebp-0x1c],esi
650161e8:	xor    eax,eax
650161ea:	cmp    DWORD PTR [eax+0x6502c698],edi
650161f0:	je     0x65016287
650161f6:	inc    DWORD PTR [ebp-0x1c]
650161f9:	add    eax,0x30
650161fc:	cmp    eax,0xf0
65016201:	jb     0x650161ea
65016203:	cmp    edi,0xfde8
65016209:	je     0x65016375
6501620f:	cmp    edi,0xfde9
65016215:	je     0x65016375
6501621b:	movzx  eax,di
6501621e:	push   eax
6501621f:	call   DWORD PTR ds:0x65024144
65016225:	test   eax,eax
65016227:	je     0x65016375
6501622d:	lea    eax,[ebp-0x18]
65016230:	push   eax
65016231:	push   edi
65016232:	call   DWORD PTR ds:0x6502413c
65016238:	test   eax,eax
6501623a:	je     0x65016369
65016240:	push   0x101
65016245:	lea    eax,[ebx+0x1c]
65016248:	push   esi
65016249:	push   eax
6501624a:	call   0x65012e40
6501624f:	xor    edx,edx
65016251:	inc    edx
65016252:	add    esp,0xc
65016255:	cmp    DWORD PTR [ebp-0x18],edx
65016258:	mov    DWORD PTR [ebx+0x4],edi
6501625b:	mov    DWORD PTR [ebx+0xc],esi
6501625e:	jbe    0x6501635c
65016264:	cmp    BYTE PTR [ebp-0x12],0x0
65016268:	je     0x6501633d
6501626e:	lea    esi,[ebp-0x11]
65016271:	mov    cl,BYTE PTR [esi]
65016273:	test   cl,cl
65016275:	je     0x6501633d
6501627b:	movzx  eax,BYTE PTR [esi-0x1]
6501627f:	movzx  ecx,cl
65016282:	jmp    0x6501632d
65016287:	push   0x101
6501628c:	lea    eax,[ebx+0x1c]
6501628f:	push   esi
65016290:	push   eax
65016291:	call   0x65012e40
65016296:	mov    ecx,DWORD PTR [ebp-0x1c]
65016299:	add    esp,0xc
6501629c:	imul   ecx,ecx,0x30
6501629f:	mov    DWORD PTR [ebp-0x20],esi
650162a2:	lea    esi,[ecx+0x6502c6a8]
650162a8:	mov    DWORD PTR [ebp-0x1c],esi
650162ab:	jmp    0x650162d7
650162ad:	mov    al,BYTE PTR [esi+0x1]
650162b0:	test   al,al
650162b2:	je     0x650162dc
650162b4:	movzx  edi,BYTE PTR [esi]
650162b7:	movzx  eax,al
650162ba:	jmp    0x650162ce
650162bc:	mov    eax,DWORD PTR [ebp-0x20]
650162bf:	mov    al,BYTE PTR [eax+0x6502c694]
650162c5:	or     BYTE PTR [ebx+edi*1+0x1d],al
650162c9:	movzx  eax,BYTE PTR [esi+0x1]
650162cd:	inc    edi
650162ce:	cmp    edi,eax
650162d0:	jbe    0x650162bc
650162d2:	mov    edi,DWORD PTR [ebp+0x8]
650162d5:	inc    esi
650162d6:	inc    esi
650162d7:	cmp    BYTE PTR [esi],0x0
650162da:	jne    0x650162ad
650162dc:	mov    esi,DWORD PTR [ebp-0x1c]
650162df:	inc    DWORD PTR [ebp-0x20]
650162e2:	add    esi,0x8
650162e5:	cmp    DWORD PTR [ebp-0x20],0x4
650162e9:	mov    DWORD PTR [ebp-0x1c],esi
650162ec:	jb     0x650162d7
650162ee:	mov    eax,edi
650162f0:	mov    DWORD PTR [ebx+0x4],edi
650162f3:	mov    DWORD PTR [ebx+0x8],0x1
650162fa:	call   0x65015e82
650162ff:	push   0x6
65016301:	mov    DWORD PTR [ebx+0xc],eax
65016304:	lea    eax,[ebx+0x10]
65016307:	lea    ecx,[ecx+0x6502c69c]
6501630d:	pop    edx
6501630e:	mov    si,WORD PTR [ecx]
65016311:	inc    ecx
65016312:	mov    WORD PTR [eax],si
65016315:	inc    ecx
65016316:	inc    eax
65016317:	inc    eax
65016318:	dec    edx
65016319:	jne    0x6501630e
6501631b:	mov    esi,ebx
6501631d:	call   0x65015f06
65016322:	jmp    0x650161de
65016327:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
6501632c:	inc    eax
6501632d:	cmp    eax,ecx
6501632f:	jbe    0x65016327
65016331:	inc    esi
65016332:	inc    esi
65016333:	cmp    BYTE PTR [esi-0x1],0x0
65016337:	jne    0x65016271
6501633d:	lea    eax,[ebx+0x1e]
65016340:	mov    ecx,0xfe
65016345:	or     BYTE PTR [eax],0x8
65016348:	inc    eax
65016349:	dec    ecx
6501634a:	jne    0x65016345
6501634c:	mov    eax,DWORD PTR [ebx+0x4]
6501634f:	call   0x65015e82
65016354:	mov    DWORD PTR [ebx+0xc],eax
65016357:	mov    DWORD PTR [ebx+0x8],edx
6501635a:	jmp    0x6501635f
6501635c:	mov    DWORD PTR [ebx+0x8],esi
6501635f:	xor    eax,eax
65016361:	lea    edi,[ebx+0x10]
65016364:	stos   DWORD PTR es:[edi],eax
65016365:	stos   DWORD PTR es:[edi],eax
65016366:	stos   DWORD PTR es:[edi],eax
65016367:	jmp    0x6501631b
65016369:	cmp    DWORD PTR ds:0x6502d938,esi
6501636f:	jne    0x650161d7
65016375:	or     eax,0xffffffff
65016378:	mov    ecx,DWORD PTR [ebp-0x4]
6501637b:	pop    edi
6501637c:	pop    esi
6501637d:	xor    ecx,ebp
6501637f:	pop    ebx
65016380:	call   0x650127bc
65016385:	leave  
65016386:	ret    
65016387:	push   0x14
65016389:	push   0x65029b40
6501638e:	call   0x65013d00
65016393:	or     DWORD PTR [ebp-0x20],0xffffffff
65016397:	call   0x6501474b
6501639c:	mov    edi,eax
6501639e:	mov    DWORD PTR [ebp-0x24],edi
650163a1:	call   0x65016090
650163a6:	mov    ebx,DWORD PTR [edi+0x68]
650163a9:	mov    esi,DWORD PTR [ebp+0x8]
650163ac:	call   0x65016134
650163b1:	mov    DWORD PTR [ebp+0x8],eax
650163b4:	cmp    eax,DWORD PTR [ebx+0x4]
650163b7:	je     0x65016514
650163bd:	push   0x220
650163c2:	call   0x65015a10
650163c7:	pop    ecx
650163c8:	mov    ebx,eax
650163ca:	test   ebx,ebx
650163cc:	je     0x65016518
650163d2:	mov    ecx,0x88
650163d7:	mov    esi,DWORD PTR [edi+0x68]
650163da:	mov    edi,ebx
650163dc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650163de:	and    DWORD PTR [ebx],0x0
650163e1:	push   ebx
650163e2:	push   DWORD PTR [ebp+0x8]
650163e5:	call   0x650161ae
650163ea:	pop    ecx
650163eb:	pop    ecx
650163ec:	mov    DWORD PTR [ebp-0x20],eax
650163ef:	test   eax,eax
650163f1:	jne    0x650164f3
650163f7:	mov    esi,DWORD PTR [ebp-0x24]
650163fa:	push   DWORD PTR [esi+0x68]
650163fd:	call   DWORD PTR ds:0x65024098
65016403:	test   eax,eax
65016405:	jne    0x65016418
65016407:	mov    eax,DWORD PTR [esi+0x68]
6501640a:	cmp    eax,0x6502c268
6501640f:	je     0x65016418
65016411:	push   eax
65016412:	call   0x650135d6
65016417:	pop    ecx
65016418:	mov    DWORD PTR [esi+0x68],ebx
6501641b:	push   ebx
6501641c:	mov    edi,DWORD PTR ds:0x65024020
65016422:	call   edi
65016424:	test   BYTE PTR [esi+0x70],0x2
65016428:	jne    0x65016518
6501642e:	test   BYTE PTR ds:0x6502c78c,0x1
65016435:	jne    0x65016518
6501643b:	push   0xd
6501643d:	call   0x65019cf8
65016442:	pop    ecx
65016443:	and    DWORD PTR [ebp-0x4],0x0
65016447:	mov    eax,DWORD PTR [ebx+0x4]
6501644a:	mov    ds:0x6502d948,eax
6501644f:	mov    eax,DWORD PTR [ebx+0x8]
65016452:	mov    ds:0x6502d94c,eax
65016457:	mov    eax,DWORD PTR [ebx+0xc]
6501645a:	mov    ds:0x6502d950,eax
6501645f:	xor    eax,eax
65016461:	mov    DWORD PTR [ebp-0x1c],eax
65016464:	cmp    eax,0x5
65016467:	jge    0x65016479
65016469:	mov    cx,WORD PTR [ebx+eax*2+0x10]
6501646e:	mov    WORD PTR [eax*2+0x6502d93c],cx
65016476:	inc    eax
65016477:	jmp    0x65016461
65016479:	xor    eax,eax
6501647b:	mov    DWORD PTR [ebp-0x1c],eax
6501647e:	cmp    eax,0x101
65016483:	jge    0x65016492
65016485:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
65016489:	mov    BYTE PTR [eax+0x6502c488],cl
6501648f:	inc    eax
65016490:	jmp    0x6501647b
65016492:	xor    eax,eax
65016494:	mov    DWORD PTR [ebp-0x1c],eax
65016497:	cmp    eax,0x100
6501649c:	jge    0x650164ae
6501649e:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
650164a5:	mov    BYTE PTR [eax+0x6502c590],cl
650164ab:	inc    eax
650164ac:	jmp    0x65016494
650164ae:	push   DWORD PTR ds:0x6502c690
650164b4:	call   DWORD PTR ds:0x65024098
650164ba:	test   eax,eax
650164bc:	jne    0x650164d1
650164be:	mov    eax,ds:0x6502c690
650164c3:	cmp    eax,0x6502c268
650164c8:	je     0x650164d1
650164ca:	push   eax
650164cb:	call   0x650135d6
650164d0:	pop    ecx
650164d1:	mov    DWORD PTR ds:0x6502c690,ebx
650164d7:	push   ebx
650164d8:	call   edi
650164da:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650164e1:	call   0x650164e8
650164e6:	jmp    0x65016518
650164e8:	push   0xd
650164ea:	call   0x65019c20
650164ef:	pop    ecx
650164f0:	ret    
650164f1:	jmp    0x65016518
650164f3:	cmp    eax,0xffffffff
650164f6:	jne    0x65016518
650164f8:	cmp    ebx,0x6502c268
650164fe:	je     0x65016507
65016500:	push   ebx
65016501:	call   0x650135d6
65016506:	pop    ecx
65016507:	call   0x65014400
6501650c:	mov    DWORD PTR [eax],0x16
65016512:	jmp    0x65016518
65016514:	and    DWORD PTR [ebp-0x20],0x0
65016518:	mov    eax,DWORD PTR [ebp-0x20]
6501651b:	call   0x65013d45
65016520:	ret    
65016521:	cmp    DWORD PTR ds:0x65031574,0x0
65016528:	jne    0x6501653c
6501652a:	push   0xfffffffd
6501652c:	call   0x65016387
65016531:	pop    ecx
65016532:	mov    DWORD PTR ds:0x65031574,0x1
6501653c:	xor    eax,eax
6501653e:	ret    
6501653f:	push   ebx
65016540:	push   ebp
65016541:	push   esi
65016542:	mov    esi,DWORD PTR [esp+0x10]
65016546:	mov    eax,DWORD PTR [esi+0xbc]
6501654c:	xor    ebp,ebp
6501654e:	cmp    eax,ebp
65016550:	push   edi
65016551:	je     0x650165c2
65016553:	cmp    eax,0x6502cc38
65016558:	je     0x650165c2
6501655a:	mov    eax,DWORD PTR [esi+0xb0]
65016560:	cmp    eax,ebp
65016562:	je     0x650165c2
65016564:	cmp    DWORD PTR [eax],ebp
65016566:	jne    0x650165c2
65016568:	mov    eax,DWORD PTR [esi+0xb8]
6501656e:	cmp    eax,ebp
65016570:	je     0x65016589
65016572:	cmp    DWORD PTR [eax],ebp
65016574:	jne    0x65016589
65016576:	push   eax
65016577:	call   0x650135d6
6501657c:	push   DWORD PTR [esi+0xbc]
65016582:	call   0x6501b835
65016587:	pop    ecx
65016588:	pop    ecx
65016589:	mov    eax,DWORD PTR [esi+0xb4]
6501658f:	cmp    eax,ebp
65016591:	je     0x650165aa
65016593:	cmp    DWORD PTR [eax],ebp
65016595:	jne    0x650165aa
65016597:	push   eax
65016598:	call   0x650135d6
6501659d:	push   DWORD PTR [esi+0xbc]
650165a3:	call   0x6501b7f5
650165a8:	pop    ecx
650165a9:	pop    ecx
650165aa:	push   DWORD PTR [esi+0xb0]
650165b0:	call   0x650135d6
650165b5:	push   DWORD PTR [esi+0xbc]
650165bb:	call   0x650135d6
650165c0:	pop    ecx
650165c1:	pop    ecx
650165c2:	mov    eax,DWORD PTR [esi+0xc0]
650165c8:	cmp    eax,ebp
650165ca:	je     0x65016610
650165cc:	cmp    DWORD PTR [eax],ebp
650165ce:	jne    0x65016610
650165d0:	mov    eax,DWORD PTR [esi+0xc4]
650165d6:	sub    eax,0xfe
650165db:	push   eax
650165dc:	call   0x650135d6
650165e1:	mov    eax,DWORD PTR [esi+0xcc]
650165e7:	mov    edi,0x80
650165ec:	sub    eax,edi
650165ee:	push   eax
650165ef:	call   0x650135d6
650165f4:	mov    eax,DWORD PTR [esi+0xd0]
650165fa:	sub    eax,edi
650165fc:	push   eax
650165fd:	call   0x650135d6
65016602:	push   DWORD PTR [esi+0xc0]
65016608:	call   0x650135d6
6501660d:	add    esp,0x10
65016610:	lea    edi,[esi+0xd4]
65016616:	mov    eax,DWORD PTR [edi]
65016618:	cmp    eax,0x6502cb78
6501661d:	je     0x65016636
6501661f:	cmp    DWORD PTR [eax+0xb4],ebp
65016625:	jne    0x65016636
65016627:	push   eax
65016628:	call   0x6501b665
6501662d:	push   DWORD PTR [edi]
6501662f:	call   0x650135d6
65016634:	pop    ecx
65016635:	pop    ecx
65016636:	push   0x6
65016638:	lea    edi,[esi+0x50]
6501663b:	pop    ebx
6501663c:	cmp    DWORD PTR [edi-0x8],0x6502c790
65016643:	je     0x65016656
65016645:	mov    eax,DWORD PTR [edi]
65016647:	cmp    eax,ebp
65016649:	je     0x65016656
6501664b:	cmp    DWORD PTR [eax],ebp
6501664d:	jne    0x65016656
6501664f:	push   eax
65016650:	call   0x650135d6
65016655:	pop    ecx
65016656:	cmp    DWORD PTR [edi-0x4],ebp
65016659:	je     0x6501666d
6501665b:	mov    eax,DWORD PTR [edi+0x4]
6501665e:	cmp    eax,ebp
65016660:	je     0x6501666d
65016662:	cmp    DWORD PTR [eax],ebp
65016664:	jne    0x6501666d
65016666:	push   eax
65016667:	call   0x650135d6
6501666c:	pop    ecx
6501666d:	add    edi,0x10
65016670:	dec    ebx
65016671:	jne    0x6501663c
65016673:	push   esi
65016674:	call   0x650135d6
65016679:	pop    ecx
6501667a:	pop    edi
6501667b:	pop    esi
6501667c:	pop    ebp
6501667d:	pop    ebx
6501667e:	ret    
6501667f:	push   ebx
65016680:	push   ebp
65016681:	push   esi
65016682:	mov    esi,DWORD PTR [esp+0x10]
65016686:	push   edi
65016687:	mov    edi,DWORD PTR ds:0x65024020
6501668d:	push   esi
6501668e:	call   edi
65016690:	mov    eax,DWORD PTR [esi+0xb0]
65016696:	test   eax,eax
65016698:	je     0x6501669d
6501669a:	push   eax
6501669b:	call   edi
6501669d:	mov    eax,DWORD PTR [esi+0xb8]
650166a3:	test   eax,eax
650166a5:	je     0x650166aa
650166a7:	push   eax
650166a8:	call   edi
650166aa:	mov    eax,DWORD PTR [esi+0xb4]
650166b0:	test   eax,eax
650166b2:	je     0x650166b7
650166b4:	push   eax
650166b5:	call   edi
650166b7:	mov    eax,DWORD PTR [esi+0xc0]
650166bd:	test   eax,eax
650166bf:	je     0x650166c4
650166c1:	push   eax
650166c2:	call   edi
650166c4:	push   0x6
650166c6:	lea    ebx,[esi+0x50]
650166c9:	pop    ebp
650166ca:	cmp    DWORD PTR [ebx-0x8],0x6502c790
650166d1:	je     0x650166dc
650166d3:	mov    eax,DWORD PTR [ebx]
650166d5:	test   eax,eax
650166d7:	je     0x650166dc
650166d9:	push   eax
650166da:	call   edi
650166dc:	cmp    DWORD PTR [ebx-0x4],0x0
650166e0:	je     0x650166ec
650166e2:	mov    eax,DWORD PTR [ebx+0x4]
650166e5:	test   eax,eax
650166e7:	je     0x650166ec
650166e9:	push   eax
650166ea:	call   edi
650166ec:	add    ebx,0x10
650166ef:	dec    ebp
650166f0:	jne    0x650166ca
650166f2:	mov    eax,DWORD PTR [esi+0xd4]
650166f8:	add    eax,0xb4
650166fd:	push   eax
650166fe:	call   edi
65016700:	pop    edi
65016701:	pop    esi
65016702:	pop    ebp
65016703:	pop    ebx
65016704:	ret    
65016705:	push   esi
65016706:	mov    esi,DWORD PTR [esp+0x8]
6501670a:	test   esi,esi
6501670c:	je     0x6501678d
6501670e:	push   ebx
6501670f:	push   ebp
65016710:	push   edi
65016711:	mov    edi,DWORD PTR ds:0x65024098
65016717:	push   esi
65016718:	call   edi
6501671a:	mov    eax,DWORD PTR [esi+0xb0]
65016720:	test   eax,eax
65016722:	je     0x65016727
65016724:	push   eax
65016725:	call   edi
65016727:	mov    eax,DWORD PTR [esi+0xb8]
6501672d:	test   eax,eax
6501672f:	je     0x65016734
65016731:	push   eax
65016732:	call   edi
65016734:	mov    eax,DWORD PTR [esi+0xb4]
6501673a:	test   eax,eax
6501673c:	je     0x65016741
6501673e:	push   eax
6501673f:	call   edi
65016741:	mov    eax,DWORD PTR [esi+0xc0]
65016747:	test   eax,eax
65016749:	je     0x6501674e
6501674b:	push   eax
6501674c:	call   edi
6501674e:	push   0x6
65016750:	lea    ebx,[esi+0x50]
65016753:	pop    ebp
65016754:	cmp    DWORD PTR [ebx-0x8],0x6502c790
6501675b:	je     0x65016766
6501675d:	mov    eax,DWORD PTR [ebx]
6501675f:	test   eax,eax
65016761:	je     0x65016766
65016763:	push   eax
65016764:	call   edi
65016766:	cmp    DWORD PTR [ebx-0x4],0x0
6501676a:	je     0x65016776
6501676c:	mov    eax,DWORD PTR [ebx+0x4]
6501676f:	test   eax,eax
65016771:	je     0x65016776
65016773:	push   eax
65016774:	call   edi
65016776:	add    ebx,0x10
65016779:	dec    ebp
6501677a:	jne    0x65016754
6501677c:	mov    eax,DWORD PTR [esi+0xd4]
65016782:	add    eax,0xb4
65016787:	push   eax
65016788:	call   edi
6501678a:	pop    edi
6501678b:	pop    ebp
6501678c:	pop    ebx
6501678d:	mov    eax,esi
6501678f:	pop    esi
65016790:	ret    
65016791:	test   edi,edi
65016793:	je     0x650167cc
65016795:	test   eax,eax
65016797:	je     0x650167cc
65016799:	push   esi
6501679a:	mov    esi,DWORD PTR [eax]
6501679c:	cmp    esi,edi
6501679e:	je     0x650167c8
650167a0:	push   edi
650167a1:	mov    DWORD PTR [eax],edi
650167a3:	call   0x6501667f
650167a8:	test   esi,esi
650167aa:	pop    ecx
650167ab:	je     0x650167c8
650167ad:	push   esi
650167ae:	call   0x65016705
650167b3:	cmp    DWORD PTR [esi],0x0
650167b6:	pop    ecx
650167b7:	jne    0x650167c8
650167b9:	cmp    esi,0x6502c798
650167bf:	je     0x650167c8
650167c1:	push   esi
650167c2:	call   0x6501653f
650167c7:	pop    ecx
650167c8:	mov    eax,edi
650167ca:	pop    esi
650167cb:	ret    
650167cc:	xor    eax,eax
650167ce:	ret    
650167cf:	push   0xc
650167d1:	push   0x65029b60
650167d6:	call   0x65013d00
650167db:	call   0x6501474b
650167e0:	mov    esi,eax
650167e2:	mov    eax,ds:0x6502c78c
650167e7:	test   DWORD PTR [esi+0x70],eax
650167ea:	je     0x6501680e
650167ec:	cmp    DWORD PTR [esi+0x6c],0x0
650167f0:	je     0x6501680e
650167f2:	call   0x6501474b
650167f7:	mov    esi,DWORD PTR [eax+0x6c]
650167fa:	test   esi,esi
650167fc:	jne    0x65016806
650167fe:	push   0x20
65016800:	call   0x65015b86
65016805:	pop    ecx
65016806:	mov    eax,esi
65016808:	call   0x65013d45
6501680d:	ret    
6501680e:	push   0xc
65016810:	call   0x65019cf8
65016815:	pop    ecx
65016816:	and    DWORD PTR [ebp-0x4],0x0
6501681a:	lea    eax,[esi+0x6c]
6501681d:	mov    edi,DWORD PTR ds:0x6502c870
65016823:	call   0x65016791
65016828:	mov    DWORD PTR [ebp-0x1c],eax
6501682b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65016832:	call   0x65016839
65016837:	jmp    0x650167fa
65016839:	push   0xc
6501683b:	call   0x65019c20
65016840:	pop    ecx
65016841:	mov    esi,DWORD PTR [ebp-0x1c]
65016844:	ret    
65016845:	push   ebp
65016846:	mov    ebp,esp
65016848:	push   ecx
65016849:	push   esi
6501684a:	mov    esi,DWORD PTR [ebp+0xc]
6501684d:	push   esi
6501684e:	call   0x6501c54d
65016853:	mov    DWORD PTR [ebp+0xc],eax
65016856:	mov    eax,DWORD PTR [esi+0xc]
65016859:	test   al,0x82
6501685b:	pop    ecx
6501685c:	jne    0x65016875
6501685e:	call   0x65014400
65016863:	mov    DWORD PTR [eax],0x9
65016869:	or     DWORD PTR [esi+0xc],0x20
6501686d:	or     eax,0xffffffff
65016870:	jmp    0x650169a2
65016875:	test   al,0x40
65016877:	je     0x65016886
65016879:	call   0x65014400
6501687e:	mov    DWORD PTR [eax],0x22
65016884:	jmp    0x65016869
65016886:	push   ebx
65016887:	xor    ebx,ebx
65016889:	test   al,0x1
6501688b:	je     0x650168a3
6501688d:	test   al,0x10
6501688f:	mov    DWORD PTR [esi+0x4],ebx
65016892:	je     0x6501691d
65016898:	mov    ecx,DWORD PTR [esi+0x8]
6501689b:	and    eax,0xfffffffe
6501689e:	mov    DWORD PTR [esi],ecx
650168a0:	mov    DWORD PTR [esi+0xc],eax
650168a3:	mov    eax,DWORD PTR [esi+0xc]
650168a6:	and    eax,0xffffffef
650168a9:	or     eax,0x2
650168ac:	test   ax,0x10c
650168b0:	mov    DWORD PTR [esi+0xc],eax
650168b3:	mov    DWORD PTR [esi+0x4],ebx
650168b6:	mov    DWORD PTR [ebp-0x4],ebx
650168b9:	jne    0x650168e7
650168bb:	call   0x6501c3ac
650168c0:	add    eax,0x20
650168c3:	cmp    esi,eax
650168c5:	je     0x650168d3
650168c7:	call   0x6501c3ac
650168cc:	add    eax,0x40
650168cf:	cmp    esi,eax
650168d1:	jne    0x650168e0
650168d3:	push   DWORD PTR [ebp+0xc]
650168d6:	call   0x6501c34e
650168db:	test   eax,eax
650168dd:	pop    ecx
650168de:	jne    0x650168e7
650168e0:	push   esi
650168e1:	call   0x6501c30a
650168e6:	pop    ecx
650168e7:	test   WORD PTR [esi+0xc],0x108
650168ed:	push   edi
650168ee:	je     0x65016974
650168f4:	mov    eax,DWORD PTR [esi+0x8]
650168f7:	mov    edi,DWORD PTR [esi]
650168f9:	lea    ecx,[eax+0x1]
650168fc:	mov    DWORD PTR [esi],ecx
650168fe:	mov    ecx,DWORD PTR [esi+0x18]
65016901:	sub    edi,eax
65016903:	dec    ecx
65016904:	cmp    edi,ebx
65016906:	mov    DWORD PTR [esi+0x4],ecx
65016909:	jle    0x65016928
6501690b:	push   edi
6501690c:	push   eax
6501690d:	push   DWORD PTR [ebp+0xc]
65016910:	call   0x6501c22e
65016915:	add    esp,0xc
65016918:	mov    DWORD PTR [ebp-0x4],eax
6501691b:	jmp    0x6501696a
6501691d:	or     eax,0x20
65016920:	mov    DWORD PTR [esi+0xc],eax
65016923:	or     eax,0xffffffff
65016926:	jmp    0x650169a1
65016928:	mov    ecx,DWORD PTR [ebp+0xc]
6501692b:	cmp    ecx,0xffffffff
6501692e:	je     0x6501694b
65016930:	cmp    ecx,0xfffffffe
65016933:	je     0x6501694b
65016935:	mov    eax,ecx
65016937:	and    eax,0x1f
6501693a:	mov    edx,ecx
6501693c:	sar    edx,0x5
6501693f:	shl    eax,0x6
65016942:	add    eax,DWORD PTR [edx*4+0x65031460]
65016949:	jmp    0x65016950
6501694b:	mov    eax,0x6502c880
65016950:	test   BYTE PTR [eax+0x4],0x20
65016954:	je     0x6501696a
65016956:	push   0x2
65016958:	push   ebx
65016959:	push   ebx
6501695a:	push   ecx
6501695b:	call   0x6501baf3
65016960:	and    eax,edx
65016962:	add    esp,0x10
65016965:	cmp    eax,0xffffffff
65016968:	je     0x6501698f
6501696a:	mov    eax,DWORD PTR [esi+0x8]
6501696d:	mov    cl,BYTE PTR [ebp+0x8]
65016970:	mov    BYTE PTR [eax],cl
65016972:	jmp    0x6501698a
65016974:	xor    edi,edi
65016976:	inc    edi
65016977:	push   edi
65016978:	lea    eax,[ebp+0x8]
6501697b:	push   eax
6501697c:	push   DWORD PTR [ebp+0xc]
6501697f:	call   0x6501c22e
65016984:	add    esp,0xc
65016987:	mov    DWORD PTR [ebp-0x4],eax
6501698a:	cmp    DWORD PTR [ebp-0x4],edi
6501698d:	je     0x65016998
6501698f:	or     DWORD PTR [esi+0xc],0x20
65016993:	or     eax,0xffffffff
65016996:	jmp    0x650169a0
65016998:	mov    eax,DWORD PTR [ebp+0x8]
6501699b:	and    eax,0xff
650169a0:	pop    edi
650169a1:	pop    ebx
650169a2:	pop    esi
650169a3:	leave  
650169a4:	ret    
650169a5:	test   BYTE PTR [eax+0xc],0x40
650169a9:	je     0x650169b1
650169ab:	cmp    DWORD PTR [eax+0x8],0x0
650169af:	je     0x650169c7
650169b1:	push   eax
650169b2:	push   DWORD PTR [esp+0x8]
650169b6:	call   0x6501c57a
650169bb:	cmp    ax,0xffff
650169bf:	pop    ecx
650169c0:	pop    ecx
650169c1:	jne    0x650169c7
650169c3:	or     DWORD PTR [esi],0xffffffff
650169c6:	ret    
650169c7:	inc    DWORD PTR [esi]
650169c9:	ret    
650169ca:	push   ebp
650169cb:	mov    ebp,esp
650169cd:	push   esi
650169ce:	mov    esi,eax
650169d0:	jmp    0x650169e6
650169d2:	push   DWORD PTR [ebp+0x8]
650169d5:	mov    eax,DWORD PTR [ebp+0x10]
650169d8:	dec    DWORD PTR [ebp+0xc]
650169db:	call   0x650169a5
650169e0:	cmp    DWORD PTR [esi],0xffffffff
650169e3:	pop    ecx
650169e4:	je     0x650169ec
650169e6:	cmp    DWORD PTR [ebp+0xc],0x0
650169ea:	jg     0x650169d2
650169ec:	pop    esi
650169ed:	pop    ebp
650169ee:	ret    
650169ef:	push   ebp
650169f0:	lea    ebp,[esp-0x3f4]
650169f7:	sub    esp,0x474
650169fd:	mov    eax,ds:0x6502c09c
65016a02:	xor    eax,ebp
65016a04:	mov    DWORD PTR [ebp+0x3f0],eax
65016a0a:	mov    eax,DWORD PTR [ebp+0x3fc]
65016a10:	push   ebx
65016a11:	mov    ebx,DWORD PTR [ebp+0x408]
65016a17:	push   esi
65016a18:	mov    esi,DWORD PTR [ebp+0x400]
65016a1e:	push   edi
65016a1f:	push   DWORD PTR [ebp+0x404]
65016a25:	xor    edi,edi
65016a27:	lea    ecx,[ebp-0x64]
65016a2a:	mov    DWORD PTR [ebp-0x3c],eax
65016a2d:	mov    DWORD PTR [ebp-0x28],ebx
65016a30:	mov    DWORD PTR [ebp-0x54],edi
65016a33:	mov    DWORD PTR [ebp-0x14],edi
65016a36:	mov    DWORD PTR [ebp-0x38],edi
65016a39:	mov    DWORD PTR [ebp-0x18],edi
65016a3c:	mov    DWORD PTR [ebp-0x30],edi
65016a3f:	mov    DWORD PTR [ebp-0x48],edi
65016a42:	mov    DWORD PTR [ebp-0x34],edi
65016a45:	call   0x6501295f
65016a4a:	cmp    DWORD PTR [ebp-0x3c],edi
65016a4d:	jne    0x65016a7c
65016a4f:	call   0x65014400
65016a54:	push   edi
65016a55:	push   edi
65016a56:	push   edi
65016a57:	push   edi
65016a58:	mov    DWORD PTR [eax],0x16
65016a5e:	push   edi
65016a5f:	call   0x650122af
65016a64:	add    esp,0x14
65016a67:	cmp    BYTE PTR [ebp-0x58],0x0
65016a6b:	je     0x65016a74
65016a6d:	mov    eax,DWORD PTR [ebp-0x5c]
65016a70:	and    DWORD PTR [eax+0x70],0xfffffffd
65016a74:	or     eax,0xffffffff
65016a77:	jmp    0x650172c7
65016a7c:	cmp    esi,edi
65016a7e:	je     0x65016a4f
65016a80:	movzx  edx,WORD PTR [esi]
65016a83:	xor    ecx,ecx
65016a85:	cmp    dx,di
65016a88:	mov    DWORD PTR [ebp-0x2c],edi
65016a8b:	mov    DWORD PTR [ebp-0x20],edi
65016a8e:	mov    DWORD PTR [ebp-0x50],edi
65016a91:	mov    DWORD PTR [ebp-0x24],edx
65016a94:	je     0x650172b7
65016a9a:	push   0x2
65016a9c:	pop    edi
65016a9d:	add    esi,edi
65016a9f:	cmp    DWORD PTR [ebp-0x2c],0x0
65016aa3:	mov    DWORD PTR [ebp-0x4c],esi
65016aa6:	jl     0x650172b7
65016aac:	lea    eax,[edx-0x20]
65016aaf:	cmp    ax,0x58
65016ab3:	ja     0x65016ac4
65016ab5:	movzx  eax,dx
65016ab8:	movzx  eax,BYTE PTR [eax+0x65024dd0]
65016abf:	and    eax,0xf
65016ac2:	jmp    0x65016ac6
65016ac4:	xor    eax,eax
65016ac6:	movsx  eax,BYTE PTR [ecx+eax*8+0x65024df0]
65016ace:	push   0x7
65016ad0:	sar    eax,0x4
65016ad3:	pop    ecx
65016ad4:	cmp    eax,ecx
65016ad6:	mov    DWORD PTR [ebp-0x68],eax
65016ad9:	ja     0x65017285
65016adf:	jmp    DWORD PTR [eax*4+0x650172df]
65016ae6:	xor    eax,eax
65016ae8:	or     DWORD PTR [ebp-0x18],0xffffffff
65016aec:	mov    DWORD PTR [ebp-0x6c],eax
65016aef:	mov    DWORD PTR [ebp-0x48],eax
65016af2:	mov    DWORD PTR [ebp-0x38],eax
65016af5:	mov    DWORD PTR [ebp-0x30],eax
65016af8:	mov    DWORD PTR [ebp-0x14],eax
65016afb:	mov    DWORD PTR [ebp-0x34],eax
65016afe:	jmp    0x65017285
65016b03:	movzx  eax,dx
65016b06:	sub    eax,0x20
65016b09:	je     0x65016b49
65016b0b:	sub    eax,0x3
65016b0e:	je     0x65016b3d
65016b10:	sub    eax,0x8
65016b13:	je     0x65016b34
65016b15:	sub    eax,edi
65016b17:	je     0x65016b2b
65016b19:	sub    eax,0x3
65016b1c:	jne    0x65017285
65016b22:	or     DWORD PTR [ebp-0x14],0x8
65016b26:	jmp    0x65017285
65016b2b:	or     DWORD PTR [ebp-0x14],0x4
65016b2f:	jmp    0x65017285
65016b34:	or     DWORD PTR [ebp-0x14],0x1
65016b38:	jmp    0x65017285
65016b3d:	or     DWORD PTR [ebp-0x14],0x80
65016b44:	jmp    0x65017285
65016b49:	or     DWORD PTR [ebp-0x14],edi
65016b4c:	jmp    0x65017285
65016b51:	cmp    dx,0x2a
65016b55:	jne    0x65016b77
65016b57:	add    ebx,0x4
65016b5a:	mov    DWORD PTR [ebp-0x28],ebx
65016b5d:	mov    ebx,DWORD PTR [ebx-0x4]
65016b60:	test   ebx,ebx
65016b62:	mov    DWORD PTR [ebp-0x38],ebx
65016b65:	jge    0x65017285
65016b6b:	or     DWORD PTR [ebp-0x14],0x4
65016b6f:	neg    DWORD PTR [ebp-0x38]
65016b72:	jmp    0x65017285
65016b77:	mov    eax,DWORD PTR [ebp-0x38]
65016b7a:	imul   eax,eax,0xa
65016b7d:	movzx  ecx,dx
65016b80:	lea    eax,[eax+ecx*1-0x30]
65016b84:	mov    DWORD PTR [ebp-0x38],eax
65016b87:	jmp    0x65017285
65016b8c:	and    DWORD PTR [ebp-0x18],0x0
65016b90:	jmp    0x65017285
65016b95:	cmp    dx,0x2a
65016b99:	jne    0x65016bb8
65016b9b:	add    ebx,0x4
65016b9e:	mov    DWORD PTR [ebp-0x28],ebx
65016ba1:	mov    ebx,DWORD PTR [ebx-0x4]
65016ba4:	test   ebx,ebx
65016ba6:	mov    DWORD PTR [ebp-0x18],ebx
65016ba9:	jge    0x65017285
65016baf:	or     DWORD PTR [ebp-0x18],0xffffffff
65016bb3:	jmp    0x65017285
65016bb8:	mov    eax,DWORD PTR [ebp-0x18]
65016bbb:	imul   eax,eax,0xa
65016bbe:	movzx  ecx,dx
65016bc1:	lea    eax,[eax+ecx*1-0x30]
65016bc5:	mov    DWORD PTR [ebp-0x18],eax
65016bc8:	jmp    0x65017285
65016bcd:	movzx  eax,dx
65016bd0:	cmp    eax,0x49
65016bd3:	je     0x65016c1d
65016bd5:	cmp    eax,0x68
65016bd8:	je     0x65016c14
65016bda:	cmp    eax,0x6c
65016bdd:	je     0x65016bf4
65016bdf:	cmp    eax,0x77
65016be2:	jne    0x65017285
65016be8:	or     DWORD PTR [ebp-0x14],0x800
65016bef:	jmp    0x65017285
65016bf4:	cmp    WORD PTR [esi],0x6c
65016bf8:	jne    0x65016c0b
65016bfa:	add    esi,edi
65016bfc:	or     DWORD PTR [ebp-0x14],0x1000
65016c03:	mov    DWORD PTR [ebp-0x4c],esi
65016c06:	jmp    0x65017285
65016c0b:	or     DWORD PTR [ebp-0x14],0x10
65016c0f:	jmp    0x65017285
65016c14:	or     DWORD PTR [ebp-0x14],0x20
65016c18:	jmp    0x65017285
65016c1d:	movzx  eax,WORD PTR [esi]
65016c20:	cmp    ax,0x36
65016c24:	jne    0x65016c3f
65016c26:	cmp    WORD PTR [esi+0x2],0x34
65016c2b:	jne    0x65016c3f
65016c2d:	add    esi,0x4
65016c30:	or     DWORD PTR [ebp-0x14],0x8000
65016c37:	mov    DWORD PTR [ebp-0x4c],esi
65016c3a:	jmp    0x65017285
65016c3f:	cmp    ax,0x33
65016c43:	jne    0x65016c5e
65016c45:	cmp    WORD PTR [esi+0x2],0x32
65016c4a:	jne    0x65016c5e
65016c4c:	add    esi,0x4
65016c4f:	and    DWORD PTR [ebp-0x14],0xffff7fff
65016c56:	mov    DWORD PTR [ebp-0x4c],esi
65016c59:	jmp    0x65017285
65016c5e:	cmp    ax,0x64
65016c62:	je     0x65017285
65016c68:	cmp    ax,0x69
65016c6c:	je     0x65017285
65016c72:	cmp    ax,0x6f
65016c76:	je     0x65017285
65016c7c:	cmp    ax,0x75
65016c80:	je     0x65017285
65016c86:	cmp    ax,0x78
65016c8a:	je     0x65017285
65016c90:	cmp    ax,0x58
65016c94:	je     0x65017285
65016c9a:	and    DWORD PTR [ebp-0x68],0x0
65016c9e:	mov    eax,DWORD PTR [ebp-0x3c]
65016ca1:	push   edx
65016ca2:	lea    esi,[ebp-0x2c]
65016ca5:	mov    DWORD PTR [ebp-0x34],0x1
65016cac:	call   0x650169a5
65016cb1:	jmp    0x65017284
65016cb6:	movzx  eax,dx
65016cb9:	cmp    eax,0x64
65016cbc:	jg     0x65016e69
65016cc2:	je     0x65016ee8
65016cc8:	cmp    eax,0x53
65016ccb:	jg     0x65016da8
65016cd1:	je     0x65016d32
65016cd3:	sub    eax,0x41
65016cd6:	je     0x65016ce8
65016cd8:	sub    eax,edi
65016cda:	je     0x65016d1d
65016cdc:	sub    eax,edi
65016cde:	je     0x65016ce8
65016ce0:	sub    eax,edi
65016ce2:	jne    0x65017169
65016ce8:	add    edx,0x20
65016ceb:	mov    DWORD PTR [ebp-0x6c],0x1
65016cf2:	mov    DWORD PTR [ebp-0x24],edx
65016cf5:	or     DWORD PTR [ebp-0x14],0x40
65016cf9:	cmp    DWORD PTR [ebp-0x18],0x0
65016cfd:	lea    esi,[ebp-0x10]
65016d00:	mov    eax,0x200
65016d05:	mov    DWORD PTR [ebp-0x1c],esi
65016d08:	mov    DWORD PTR [ebp-0x20],eax
65016d0b:	jge    0x65016f0c
65016d11:	mov    DWORD PTR [ebp-0x18],0x6
65016d18:	jmp    0x65016f59
65016d1d:	test   WORD PTR [ebp-0x14],0x830
65016d23:	jne    0x65016dc5
65016d29:	or     DWORD PTR [ebp-0x14],0x20
65016d2d:	jmp    0x65016dc5
65016d32:	test   WORD PTR [ebp-0x14],0x830
65016d38:	jne    0x65016d3e
65016d3a:	or     DWORD PTR [ebp-0x14],0x20
65016d3e:	mov    edi,DWORD PTR [ebp-0x18]
65016d41:	cmp    edi,0xffffffff
65016d44:	jne    0x65016d4b
65016d46:	mov    edi,0x7fffffff
65016d4b:	add    ebx,0x4
65016d4e:	test   BYTE PTR [ebp-0x14],0x20
65016d52:	mov    DWORD PTR [ebp-0x28],ebx
65016d55:	mov    ebx,DWORD PTR [ebx-0x4]
65016d58:	mov    DWORD PTR [ebp-0x1c],ebx
65016d5b:	je     0x6501713c
65016d61:	test   ebx,ebx
65016d63:	jne    0x65016d6d
65016d65:	mov    eax,ds:0x6502c950
65016d6a:	mov    DWORD PTR [ebp-0x1c],eax
65016d6d:	and    DWORD PTR [ebp-0x20],0x0
65016d71:	test   edi,edi
65016d73:	mov    esi,DWORD PTR [ebp-0x1c]
65016d76:	jle    0x65017169
65016d7c:	mov    al,BYTE PTR [esi]
65016d7e:	test   al,al
65016d80:	je     0x65017169
65016d86:	lea    ecx,[ebp-0x64]
65016d89:	movzx  eax,al
65016d8c:	push   ecx
65016d8d:	push   eax
65016d8e:	call   0x65019b3e
65016d93:	test   eax,eax
65016d95:	pop    ecx
65016d96:	pop    ecx
65016d97:	je     0x65016d9a
65016d99:	inc    esi
65016d9a:	inc    esi
65016d9b:	inc    DWORD PTR [ebp-0x20]
65016d9e:	cmp    DWORD PTR [ebp-0x20],edi
65016da1:	jl     0x65016d7c
65016da3:	jmp    0x65017169
65016da8:	sub    eax,0x58
65016dab:	je     0x65016ff4
65016db1:	sub    eax,edi
65016db3:	je     0x65016e1c
65016db5:	sub    eax,ecx
65016db7:	je     0x65016cf5
65016dbd:	sub    eax,edi
65016dbf:	jne    0x65017169
65016dc5:	movzx  eax,WORD PTR [ebx]
65016dc8:	add    ebx,0x4
65016dcb:	xor    esi,esi
65016dcd:	inc    esi
65016dce:	test   BYTE PTR [ebp-0x14],0x20
65016dd2:	mov    DWORD PTR [ebp-0x34],esi
65016dd5:	mov    DWORD PTR [ebp-0x28],ebx
65016dd8:	mov    DWORD PTR [ebp-0x70],eax
65016ddb:	je     0x65016e0a
65016ddd:	mov    BYTE PTR [ebp-0x40],al
65016de0:	lea    eax,[ebp-0x64]
65016de3:	push   eax
65016de4:	mov    eax,DWORD PTR [ebp-0x64]
65016de7:	mov    BYTE PTR [ebp-0x3f],0x0
65016deb:	push   DWORD PTR [eax+0xac]
65016df1:	lea    eax,[ebp-0x40]
65016df4:	push   eax
65016df5:	lea    eax,[ebp-0x10]
65016df8:	push   eax
65016df9:	call   0x6501c76e
65016dfe:	add    esp,0x10
65016e01:	test   eax,eax
65016e03:	jge    0x65016e0e
65016e05:	mov    DWORD PTR [ebp-0x48],esi
65016e08:	jmp    0x65016e0e
65016e0a:	mov    WORD PTR [ebp-0x10],ax
65016e0e:	lea    eax,[ebp-0x10]
65016e11:	mov    DWORD PTR [ebp-0x1c],eax
65016e14:	mov    DWORD PTR [ebp-0x20],esi
65016e17:	jmp    0x65017169
65016e1c:	mov    eax,DWORD PTR [ebx]
65016e1e:	add    ebx,0x4
65016e21:	test   eax,eax
65016e23:	mov    DWORD PTR [ebp-0x28],ebx
65016e26:	je     0x65016e55
65016e28:	mov    ecx,DWORD PTR [eax+0x4]
65016e2b:	test   ecx,ecx
65016e2d:	je     0x65016e55
65016e2f:	test   WORD PTR [ebp-0x14],0x800
65016e35:	movsx  eax,WORD PTR [eax]
65016e38:	mov    DWORD PTR [ebp-0x1c],ecx
65016e3b:	je     0x65016e4c
65016e3d:	cdq    
65016e3e:	sub    eax,edx
65016e40:	mov    DWORD PTR [ebp-0x34],0x1
65016e47:	jmp    0x65017164
65016e4c:	and    DWORD PTR [ebp-0x34],0x0
65016e50:	jmp    0x65017166
65016e55:	mov    eax,ds:0x6502c950
65016e5a:	mov    DWORD PTR [ebp-0x1c],eax
65016e5d:	push   eax
65016e5e:	call   0x65013f00
65016e63:	pop    ecx
65016e64:	jmp    0x65017166
65016e69:	cmp    eax,0x70
65016e6c:	jg     0x65016ff9
65016e72:	je     0x65016fed
65016e78:	cmp    eax,0x65
65016e7b:	jl     0x65017169
65016e81:	cmp    eax,0x67
65016e84:	jle    0x65016cf5
65016e8a:	cmp    eax,0x69
65016e8d:	je     0x65016ee8
65016e8f:	cmp    eax,0x6e
65016e92:	je     0x65016eb3
65016e94:	cmp    eax,0x6f
65016e97:	jne    0x65017169
65016e9d:	test   BYTE PTR [ebp-0x14],0x80
65016ea1:	mov    DWORD PTR [ebp-0x24],0x8
65016ea8:	je     0x65016ef3
65016eaa:	or     DWORD PTR [ebp-0x14],0x200
65016eb1:	jmp    0x65016ef3
65016eb3:	mov    esi,DWORD PTR [ebx]
65016eb5:	add    ebx,0x4
65016eb8:	mov    DWORD PTR [ebp-0x28],ebx
65016ebb:	call   0x6501c758
65016ec0:	test   eax,eax
65016ec2:	je     0x650172a0
65016ec8:	test   BYTE PTR [ebp-0x14],0x20
65016ecc:	je     0x65016ed7
65016ece:	mov    ax,WORD PTR [ebp-0x2c]
65016ed2:	mov    WORD PTR [esi],ax
65016ed5:	jmp    0x65016edc
65016ed7:	mov    eax,DWORD PTR [ebp-0x2c]
65016eda:	mov    DWORD PTR [esi],eax
65016edc:	mov    DWORD PTR [ebp-0x48],0x1
65016ee3:	jmp    0x65017272
65016ee8:	or     DWORD PTR [ebp-0x14],0x40
65016eec:	mov    DWORD PTR [ebp-0x24],0xa
65016ef3:	test   WORD PTR [ebp-0x14],0x8000
65016ef9:	je     0x65017043
65016eff:	mov    eax,DWORD PTR [ebx]
65016f01:	mov    edx,DWORD PTR [ebx+0x4]
65016f04:	add    ebx,0x8
65016f07:	jmp    0x6501707c
65016f0c:	jne    0x65016f1d
65016f0e:	cmp    dx,0x67
65016f12:	jne    0x65016f59
65016f14:	mov    DWORD PTR [ebp-0x18],0x1
65016f1b:	jmp    0x65016f59
65016f1d:	cmp    DWORD PTR [ebp-0x18],eax
65016f20:	jle    0x65016f25
65016f22:	mov    DWORD PTR [ebp-0x18],eax
65016f25:	cmp    DWORD PTR [ebp-0x18],0xa3
65016f2c:	jle    0x65016f59
65016f2e:	mov    edi,DWORD PTR [ebp-0x18]
65016f31:	add    edi,0x15d
65016f37:	push   edi
65016f38:	call   0x65015a10
65016f3d:	test   eax,eax
65016f3f:	mov    edx,DWORD PTR [ebp-0x24]
65016f42:	pop    ecx
65016f43:	mov    DWORD PTR [ebp-0x50],eax
65016f46:	je     0x65016f52
65016f48:	mov    DWORD PTR [ebp-0x1c],eax
65016f4b:	mov    DWORD PTR [ebp-0x20],edi
65016f4e:	mov    esi,eax
65016f50:	jmp    0x65016f59
65016f52:	mov    DWORD PTR [ebp-0x18],0xa3
65016f59:	mov    eax,DWORD PTR [ebx]
65016f5b:	add    ebx,0x8
65016f5e:	mov    DWORD PTR [ebp-0x78],eax
65016f61:	mov    eax,DWORD PTR [ebx-0x4]
65016f64:	mov    DWORD PTR [ebp-0x74],eax
65016f67:	lea    eax,[ebp-0x64]
65016f6a:	push   eax
65016f6b:	push   DWORD PTR [ebp-0x6c]
65016f6e:	movsx  eax,dl
65016f71:	push   DWORD PTR [ebp-0x18]
65016f74:	mov    DWORD PTR [ebp-0x28],ebx
65016f77:	push   eax
65016f78:	push   DWORD PTR [ebp-0x20]
65016f7b:	lea    eax,[ebp-0x78]
65016f7e:	push   esi
65016f7f:	push   eax
65016f80:	push   DWORD PTR ds:0x6502cb5c
65016f86:	call   0x6501452f
65016f8b:	pop    ecx
65016f8c:	call   eax
65016f8e:	mov    ebx,DWORD PTR [ebp-0x14]
65016f91:	add    esp,0x1c
65016f94:	and    ebx,0x80
65016f9a:	je     0x65016fb7
65016f9c:	cmp    DWORD PTR [ebp-0x18],0x0
65016fa0:	jne    0x65016fb7
65016fa2:	lea    eax,[ebp-0x64]
65016fa5:	push   eax
65016fa6:	push   esi
65016fa7:	push   DWORD PTR ds:0x6502cb68
65016fad:	call   0x6501452f
65016fb2:	pop    ecx
65016fb3:	call   eax
65016fb5:	pop    ecx
65016fb6:	pop    ecx
65016fb7:	cmp    WORD PTR [ebp-0x24],0x67
65016fbc:	jne    0x65016fd7
65016fbe:	test   ebx,ebx
65016fc0:	jne    0x65016fd7
65016fc2:	lea    eax,[ebp-0x64]
65016fc5:	push   eax
65016fc6:	push   esi
65016fc7:	push   DWORD PTR ds:0x6502cb64
65016fcd:	call   0x6501452f
65016fd2:	pop    ecx
65016fd3:	call   eax
65016fd5:	pop    ecx
65016fd6:	pop    ecx
65016fd7:	cmp    BYTE PTR [esi],0x2d
65016fda:	jne    0x65016fe7
65016fdc:	or     DWORD PTR [ebp-0x14],0x100
65016fe3:	inc    esi
65016fe4:	mov    DWORD PTR [ebp-0x1c],esi
65016fe7:	push   esi
65016fe8:	jmp    0x65016e5e
65016fed:	mov    DWORD PTR [ebp-0x18],0x8
65016ff4:	mov    DWORD PTR [ebp-0x54],ecx
65016ff7:	jmp    0x6501701a
65016ff9:	sub    eax,0x73
65016ffc:	je     0x65016d3e
65017002:	sub    eax,edi
65017004:	je     0x65016eec
6501700a:	sub    eax,0x3
6501700d:	jne    0x65017169
65017013:	mov    DWORD PTR [ebp-0x54],0x27
6501701a:	test   BYTE PTR [ebp-0x14],0x80
6501701e:	mov    DWORD PTR [ebp-0x24],0x10
65017025:	je     0x65016ef3
6501702b:	mov    eax,DWORD PTR [ebp-0x54]
6501702e:	add    eax,0x51
65017031:	mov    WORD PTR [ebp-0x44],0x30
65017037:	mov    WORD PTR [ebp-0x42],ax
6501703b:	mov    DWORD PTR [ebp-0x30],edi
6501703e:	jmp    0x65016ef3
65017043:	test   WORD PTR [ebp-0x14],0x1000
65017049:	jne    0x65016eff
6501704f:	add    ebx,0x4
65017052:	test   BYTE PTR [ebp-0x14],0x20
65017056:	je     0x6501706e
65017058:	test   BYTE PTR [ebp-0x14],0x40
6501705c:	mov    DWORD PTR [ebp-0x28],ebx
6501705f:	je     0x65017067
65017061:	movsx  eax,WORD PTR [ebx-0x4]
65017065:	jmp    0x6501706b
65017067:	movzx  eax,WORD PTR [ebx-0x4]
6501706b:	cdq    
6501706c:	jmp    0x6501707f
6501706e:	test   BYTE PTR [ebp-0x14],0x40
65017072:	mov    eax,DWORD PTR [ebx-0x4]
65017075:	je     0x6501707a
65017077:	cdq    
65017078:	jmp    0x6501707c
6501707a:	xor    edx,edx
6501707c:	mov    DWORD PTR [ebp-0x28],ebx
6501707f:	test   BYTE PTR [ebp-0x14],0x40
65017083:	je     0x6501709d
65017085:	test   edx,edx
65017087:	jg     0x6501709d
65017089:	jl     0x6501708f
6501708b:	test   eax,eax
6501708d:	jae    0x6501709d
6501708f:	neg    eax
65017091:	adc    edx,0x0
65017094:	neg    edx
65017096:	or     DWORD PTR [ebp-0x14],0x100
6501709d:	test   WORD PTR [ebp-0x14],0x9000
650170a3:	mov    ebx,edx
650170a5:	mov    edi,eax
650170a7:	jne    0x650170ab
650170a9:	xor    ebx,ebx
650170ab:	cmp    DWORD PTR [ebp-0x18],0x0
650170af:	jge    0x650170ba
650170b1:	mov    DWORD PTR [ebp-0x18],0x1
650170b8:	jmp    0x650170cb
650170ba:	and    DWORD PTR [ebp-0x14],0xfffffff7
650170be:	mov    eax,0x200
650170c3:	cmp    DWORD PTR [ebp-0x18],eax
650170c6:	jle    0x650170cb
650170c8:	mov    DWORD PTR [ebp-0x18],eax
650170cb:	mov    eax,edi
650170cd:	or     eax,ebx
650170cf:	jne    0x650170d4
650170d1:	and    DWORD PTR [ebp-0x30],eax
650170d4:	lea    esi,[ebp+0x1ef]
650170da:	mov    eax,DWORD PTR [ebp-0x18]
650170dd:	dec    DWORD PTR [ebp-0x18]
650170e0:	test   eax,eax
650170e2:	jg     0x650170ea
650170e4:	mov    eax,edi
650170e6:	or     eax,ebx
650170e8:	je     0x6501710e
650170ea:	mov    eax,DWORD PTR [ebp-0x24]
650170ed:	cdq    
650170ee:	push   edx
650170ef:	push   eax
650170f0:	push   ebx
650170f1:	push   edi
650170f2:	call   0x65018ae0
650170f7:	add    ecx,0x30
650170fa:	cmp    ecx,0x39
650170fd:	mov    DWORD PTR [ebp-0x7c],ebx
65017100:	mov    edi,eax
65017102:	mov    ebx,edx
65017104:	jle    0x65017109
65017106:	add    ecx,DWORD PTR [ebp-0x54]
65017109:	mov    BYTE PTR [esi],cl
6501710b:	dec    esi
6501710c:	jmp    0x650170da
6501710e:	lea    eax,[ebp+0x1ef]
65017114:	sub    eax,esi
65017116:	inc    esi
65017117:	test   WORD PTR [ebp-0x14],0x200
6501711d:	mov    DWORD PTR [ebp-0x20],eax
65017120:	mov    DWORD PTR [ebp-0x1c],esi
65017123:	je     0x65017169
65017125:	test   eax,eax
65017127:	je     0x65017130
65017129:	mov    ecx,esi
6501712b:	cmp    BYTE PTR [ecx],0x30
6501712e:	je     0x65017169
65017130:	dec    DWORD PTR [ebp-0x1c]
65017133:	mov    ecx,DWORD PTR [ebp-0x1c]
65017136:	mov    BYTE PTR [ecx],0x30
65017139:	inc    eax
6501713a:	jmp    0x65017166
6501713c:	test   ebx,ebx
6501713e:	jne    0x65017148
65017140:	mov    eax,ds:0x6502c954
65017145:	mov    DWORD PTR [ebp-0x1c],eax
65017148:	mov    eax,DWORD PTR [ebp-0x1c]
6501714b:	mov    DWORD PTR [ebp-0x34],0x1
65017152:	jmp    0x6501715d
65017154:	dec    edi
65017155:	cmp    WORD PTR [eax],0x0
65017159:	je     0x65017161
6501715b:	inc    eax
6501715c:	inc    eax
6501715d:	test   edi,edi
6501715f:	jne    0x65017154
65017161:	sub    eax,DWORD PTR [ebp-0x1c]
65017164:	sar    eax,1
65017166:	mov    DWORD PTR [ebp-0x20],eax
65017169:	cmp    DWORD PTR [ebp-0x48],0x0
6501716d:	jne    0x65017272
65017173:	mov    eax,DWORD PTR [ebp-0x14]
65017176:	test   al,0x40
65017178:	je     0x650171a5
6501717a:	test   ax,0x100
6501717e:	je     0x65017188
65017180:	mov    WORD PTR [ebp-0x44],0x2d
65017186:	jmp    0x6501719e
65017188:	test   al,0x1
6501718a:	je     0x65017194
6501718c:	mov    WORD PTR [ebp-0x44],0x2b
65017192:	jmp    0x6501719e
65017194:	test   al,0x2
65017196:	je     0x650171a5
65017198:	mov    WORD PTR [ebp-0x44],0x20
6501719e:	mov    DWORD PTR [ebp-0x30],0x1
650171a5:	mov    ebx,DWORD PTR [ebp-0x38]
650171a8:	mov    esi,DWORD PTR [ebp-0x20]
650171ab:	sub    ebx,esi
650171ad:	sub    ebx,DWORD PTR [ebp-0x30]
650171b0:	test   BYTE PTR [ebp-0x14],0xc
650171b4:	jne    0x650171c7
650171b6:	push   DWORD PTR [ebp-0x3c]
650171b9:	lea    eax,[ebp-0x2c]
650171bc:	push   ebx
650171bd:	push   0x20
650171bf:	call   0x650169ca
650171c4:	add    esp,0xc
650171c7:	push   DWORD PTR [ebp-0x30]
650171ca:	mov    edi,DWORD PTR [ebp-0x3c]
650171cd:	lea    eax,[ebp-0x2c]
650171d0:	lea    ecx,[ebp-0x44]
650171d3:	call   0x650172ff
650171d8:	test   BYTE PTR [ebp-0x14],0x8
650171dc:	pop    ecx
650171dd:	je     0x650171f4
650171df:	test   BYTE PTR [ebp-0x14],0x4
650171e3:	jne    0x650171f4
650171e5:	push   edi
650171e6:	push   ebx
650171e7:	push   0x30
650171e9:	lea    eax,[ebp-0x2c]
650171ec:	call   0x650169ca
650171f1:	add    esp,0xc
650171f4:	cmp    DWORD PTR [ebp-0x34],0x0
650171f8:	jne    0x65017248
650171fa:	test   esi,esi
650171fc:	jle    0x65017248
650171fe:	mov    edi,DWORD PTR [ebp-0x1c]
65017201:	mov    DWORD PTR [ebp-0x24],esi
65017204:	dec    DWORD PTR [ebp-0x24]
65017207:	lea    eax,[ebp-0x64]
6501720a:	push   eax
6501720b:	mov    eax,DWORD PTR [ebp-0x64]
6501720e:	push   DWORD PTR [eax+0xac]
65017214:	lea    eax,[ebp-0x70]
65017217:	push   edi
65017218:	push   eax
65017219:	call   0x6501c76e
6501721e:	add    esp,0x10
65017221:	test   eax,eax
65017223:	mov    DWORD PTR [ebp-0x7c],eax
65017226:	jle    0x65017242
65017228:	push   DWORD PTR [ebp-0x70]
6501722b:	mov    eax,DWORD PTR [ebp-0x3c]
6501722e:	lea    esi,[ebp-0x2c]
65017231:	call   0x650169a5
65017236:	add    edi,DWORD PTR [ebp-0x7c]
65017239:	cmp    DWORD PTR [ebp-0x24],0x0
6501723d:	pop    ecx
6501723e:	jg     0x65017204
65017240:	jmp    0x65017255
65017242:	or     DWORD PTR [ebp-0x2c],0xffffffff
65017246:	jmp    0x65017255
65017248:	mov    ecx,DWORD PTR [ebp-0x1c]
6501724b:	push   esi
6501724c:	lea    eax,[ebp-0x2c]
6501724f:	call   0x650172ff
65017254:	pop    ecx
65017255:	cmp    DWORD PTR [ebp-0x2c],0x0
65017259:	jl     0x65017272
6501725b:	test   BYTE PTR [ebp-0x14],0x4
6501725f:	je     0x65017272
65017261:	push   DWORD PTR [ebp-0x3c]
65017264:	lea    eax,[ebp-0x2c]
65017267:	push   ebx
65017268:	push   0x20
6501726a:	call   0x650169ca
6501726f:	add    esp,0xc
65017272:	cmp    DWORD PTR [ebp-0x50],0x0
65017276:	je     0x65017285
65017278:	push   DWORD PTR [ebp-0x50]
6501727b:	call   0x650135d6
65017280:	and    DWORD PTR [ebp-0x50],0x0
65017284:	pop    ecx
65017285:	mov    esi,DWORD PTR [ebp-0x4c]
65017288:	movzx  eax,WORD PTR [esi]
6501728b:	test   ax,ax
6501728e:	mov    DWORD PTR [ebp-0x24],eax
65017291:	je     0x650172b7
65017293:	mov    ecx,DWORD PTR [ebp-0x68]
65017296:	mov    ebx,DWORD PTR [ebp-0x28]
65017299:	mov    edx,eax
6501729b:	jmp    0x65016a9a
650172a0:	call   0x65014400
650172a5:	mov    DWORD PTR [eax],0x16
650172ab:	xor    eax,eax
650172ad:	push   eax
650172ae:	push   eax
650172af:	push   eax
650172b0:	push   eax
650172b1:	push   eax
650172b2:	jmp    0x65016a5f
650172b7:	cmp    BYTE PTR [ebp-0x58],0x0
650172bb:	je     0x650172c4
650172bd:	mov    eax,DWORD PTR [ebp-0x5c]
650172c0:	and    DWORD PTR [eax+0x70],0xfffffffd
650172c4:	mov    eax,DWORD PTR [ebp-0x2c]
650172c7:	mov    ecx,DWORD PTR [ebp+0x3f0]
650172cd:	pop    edi
650172ce:	pop    esi
650172cf:	xor    ecx,ebp
650172d1:	pop    ebx
650172d2:	call   0x650127bc
650172d7:	add    ebp,0x3f4
650172dd:	leave  
650172de:	ret    
650172df:	sahf   
650172e0:	ins    BYTE PTR es:[edi],dx
650172e1:	add    DWORD PTR [ebp-0x1a],esp
650172e4:	push   0x1
650172e6:	add    ebp,DWORD PTR gs:[ebx+0x1]
650172ea:	gs push ecx
650172ec:	imul   eax,DWORD PTR [ecx],0x65
650172ef:	mov    WORD PTR [ebx+0x1],gs
650172f2:	gs xchg ebp,eax
650172f4:	imul   eax,DWORD PTR [ecx],0x65
650172f7:	int    0x6b
650172f9:	add    DWORD PTR [ebp-0x4a],esp
650172fc:	ins    BYTE PTR es:[edi],dx
650172fd:	add    DWORD PTR [ebp-0xa],esp
65017300:	inc    edi
65017301:	or     al,0x40
65017303:	push   ebx
65017304:	push   esi
65017305:	mov    esi,eax
65017307:	mov    ebx,ecx
65017309:	je     0x65017344
6501730b:	cmp    DWORD PTR [edi+0x8],0x0
6501730f:	jne    0x65017344
65017311:	mov    eax,DWORD PTR [esp+0xc]
65017315:	add    DWORD PTR [esi],eax
65017317:	jmp    0x6501734b
65017319:	movzx  eax,WORD PTR [ebx]
6501731c:	dec    DWORD PTR [esp+0xc]
65017320:	push   eax
65017321:	mov    eax,edi
65017323:	call   0x650169a5
65017328:	inc    ebx
65017329:	inc    ebx
6501732a:	cmp    DWORD PTR [esi],0xffffffff
6501732d:	pop    ecx
6501732e:	jne    0x65017344
65017330:	call   0x65014400
65017335:	cmp    DWORD PTR [eax],0x2a
65017338:	jne    0x6501734b
6501733a:	push   0x3f
6501733c:	mov    eax,edi
6501733e:	call   0x650169a5
65017343:	pop    ecx
65017344:	cmp    DWORD PTR [esp+0xc],0x0
65017349:	jg     0x65017319
6501734b:	pop    esi
6501734c:	pop    ebx
6501734d:	ret    
6501734e:	push   ebp
6501734f:	lea    ebp,[esp-0x3f4]
65017356:	sub    esp,0x474
6501735c:	mov    eax,ds:0x6502c09c
65017361:	xor    eax,ebp
65017363:	mov    DWORD PTR [ebp+0x3f0],eax
65017369:	push   ebx
6501736a:	mov    ebx,DWORD PTR [ebp+0x408]
65017370:	push   esi
65017371:	mov    esi,DWORD PTR [ebp+0x3fc]
65017377:	xor    eax,eax
65017379:	push   edi
6501737a:	push   DWORD PTR [ebp+0x404]
65017380:	mov    edi,DWORD PTR [ebp+0x400]
65017386:	lea    ecx,[ebp-0x58]
65017389:	mov    DWORD PTR [ebp-0x48],esi
6501738c:	mov    DWORD PTR [ebp-0x24],ebx
6501738f:	mov    DWORD PTR [ebp-0x60],eax
65017392:	mov    DWORD PTR [ebp-0x14],eax
65017395:	mov    DWORD PTR [ebp-0x38],eax
65017398:	mov    DWORD PTR [ebp-0x18],eax
6501739b:	mov    DWORD PTR [ebp-0x30],eax
6501739e:	mov    DWORD PTR [ebp-0x5c],eax
650173a1:	mov    DWORD PTR [ebp-0x34],eax
650173a4:	call   0x6501295f
650173a9:	test   esi,esi
650173ab:	jne    0x650173dc
650173ad:	call   0x65014400
650173b2:	mov    DWORD PTR [eax],0x16
650173b8:	xor    eax,eax
650173ba:	push   eax
650173bb:	push   eax
650173bc:	push   eax
650173bd:	push   eax
650173be:	push   eax
650173bf:	call   0x650122af
650173c4:	add    esp,0x14
650173c7:	cmp    BYTE PTR [ebp-0x4c],0x0
650173cb:	je     0x650173d4
650173cd:	mov    eax,DWORD PTR [ebp-0x50]
650173d0:	and    DWORD PTR [eax+0x70],0xfffffffd
650173d4:	or     eax,0xffffffff
650173d7:	jmp    0x65017c32
650173dc:	xor    esi,esi
650173de:	cmp    edi,esi
650173e0:	jne    0x650173f4
650173e2:	call   0x65014400
650173e7:	push   esi
650173e8:	push   esi
650173e9:	push   esi
650173ea:	push   esi
650173eb:	mov    DWORD PTR [eax],0x16
650173f1:	push   esi
650173f2:	jmp    0x650173bf
650173f4:	movzx  ecx,WORD PTR [edi]
650173f7:	cmp    cx,si
650173fa:	mov    DWORD PTR [ebp-0x2c],esi
650173fd:	mov    DWORD PTR [ebp-0x20],esi
65017400:	mov    DWORD PTR [ebp-0x40],esi
65017403:	mov    DWORD PTR [ebp-0x64],esi
65017406:	mov    DWORD PTR [ebp-0x28],ecx
65017409:	je     0x65017c22
6501740f:	push   0x2
65017411:	pop    esi
65017412:	add    edi,esi
65017414:	xor    eax,eax
65017416:	cmp    DWORD PTR [ebp-0x2c],eax
65017419:	mov    DWORD PTR [ebp-0x6c],edi
6501741c:	jl     0x65017c12
65017422:	lea    edx,[ecx-0x20]
65017425:	cmp    dx,0x58
65017429:	ja     0x65017438
6501742b:	movzx  eax,cx
6501742e:	movzx  eax,BYTE PTR [eax+0x65026478]
65017435:	and    eax,0xf
65017438:	mov    edx,DWORD PTR [ebp-0x40]
6501743b:	imul   eax,eax,0x9
6501743e:	movzx  eax,BYTE PTR [eax+edx*1+0x65026498]
65017446:	push   0x8
65017448:	shr    eax,0x4
6501744b:	pop    edx
6501744c:	cmp    eax,edx
6501744e:	mov    DWORD PTR [ebp-0x40],eax
65017451:	je     0x650173ad
65017457:	cmp    eax,0x7
6501745a:	ja     0x65017bfa
65017460:	jmp    DWORD PTR [eax*4+0x65017c4a]
65017467:	xor    eax,eax
65017469:	or     DWORD PTR [ebp-0x18],0xffffffff
6501746d:	mov    DWORD PTR [ebp-0x68],eax
65017470:	mov    DWORD PTR [ebp-0x5c],eax
65017473:	mov    DWORD PTR [ebp-0x38],eax
65017476:	mov    DWORD PTR [ebp-0x30],eax
65017479:	mov    DWORD PTR [ebp-0x14],eax
6501747c:	mov    DWORD PTR [ebp-0x34],eax
6501747f:	jmp    0x65017c00
65017484:	movzx  eax,cx
65017487:	sub    eax,0x20
6501748a:	je     0x650174c8
6501748c:	sub    eax,0x3
6501748f:	je     0x650174bc
65017491:	sub    eax,edx
65017493:	je     0x650174b3
65017495:	sub    eax,esi
65017497:	je     0x650174aa
65017499:	sub    eax,0x3
6501749c:	jne    0x65017bfa
650174a2:	or     DWORD PTR [ebp-0x14],edx
650174a5:	jmp    0x65017c00
650174aa:	or     DWORD PTR [ebp-0x14],0x4
650174ae:	jmp    0x65017c00
650174b3:	or     DWORD PTR [ebp-0x14],0x1
650174b7:	jmp    0x65017c00
650174bc:	or     DWORD PTR [ebp-0x14],0x80
650174c3:	jmp    0x65017c00
650174c8:	or     DWORD PTR [ebp-0x14],esi
650174cb:	jmp    0x65017c00
650174d0:	cmp    cx,0x2a
650174d4:	jne    0x650174f5
650174d6:	mov    eax,DWORD PTR [ebx]
650174d8:	add    ebx,0x4
650174db:	test   eax,eax
650174dd:	mov    DWORD PTR [ebp-0x24],ebx
650174e0:	mov    DWORD PTR [ebp-0x38],eax
650174e3:	jge    0x65017c00
650174e9:	or     DWORD PTR [ebp-0x14],0x4
650174ed:	neg    DWORD PTR [ebp-0x38]
650174f0:	jmp    0x65017c00
650174f5:	mov    eax,DWORD PTR [ebp-0x38]
650174f8:	imul   eax,eax,0xa
650174fb:	movzx  ecx,cx
650174fe:	lea    eax,[eax+ecx*1-0x30]
65017502:	mov    DWORD PTR [ebp-0x38],eax
65017505:	jmp    0x65017c00
6501750a:	and    DWORD PTR [ebp-0x18],0x0
6501750e:	jmp    0x65017c00
65017513:	cmp    cx,0x2a
65017517:	jne    0x65017535
65017519:	mov    eax,DWORD PTR [ebx]
6501751b:	add    ebx,0x4
6501751e:	test   eax,eax
65017520:	mov    DWORD PTR [ebp-0x24],ebx
65017523:	mov    DWORD PTR [ebp-0x18],eax
65017526:	jge    0x65017c00
6501752c:	or     DWORD PTR [ebp-0x18],0xffffffff
65017530:	jmp    0x65017c00
65017535:	mov    eax,DWORD PTR [ebp-0x18]
65017538:	imul   eax,eax,0xa
6501753b:	movzx  ecx,cx
6501753e:	lea    eax,[eax+ecx*1-0x30]
65017542:	mov    DWORD PTR [ebp-0x18],eax
65017545:	jmp    0x65017c00
6501754a:	movzx  eax,cx
6501754d:	cmp    eax,0x49
65017550:	je     0x65017597
65017552:	cmp    eax,0x68
65017555:	je     0x6501758e
65017557:	cmp    eax,0x6c
6501755a:	je     0x65017571
6501755c:	cmp    eax,0x77
6501755f:	jne    0x65017c00
65017565:	or     DWORD PTR [ebp-0x14],0x800
6501756c:	jmp    0x65017c00
65017571:	cmp    WORD PTR [edi],0x6c
65017575:	jne    0x65017585
65017577:	add    edi,esi
65017579:	or     DWORD PTR [ebp-0x14],0x1000
65017580:	jmp    0x65017c00
65017585:	or     DWORD PTR [ebp-0x14],0x10
65017589:	jmp    0x65017c00
6501758e:	or     DWORD PTR [ebp-0x14],0x20
65017592:	jmp    0x65017c00
65017597:	movzx  eax,WORD PTR [edi]
6501759a:	cmp    ax,0x36
6501759e:	jne    0x650175b6
650175a0:	cmp    WORD PTR [edi+0x2],0x34
650175a5:	jne    0x650175b6
650175a7:	add    edi,0x4
650175aa:	or     DWORD PTR [ebp-0x14],0x8000
650175b1:	jmp    0x65017c00
650175b6:	cmp    ax,0x33
650175ba:	jne    0x650175d2
650175bc:	cmp    WORD PTR [edi+0x2],0x32
650175c1:	jne    0x650175d2
650175c3:	add    edi,0x4
650175c6:	and    DWORD PTR [ebp-0x14],0xffff7fff
650175cd:	jmp    0x65017c00
650175d2:	cmp    ax,0x64
650175d6:	je     0x65017c00
650175dc:	cmp    ax,0x69
650175e0:	je     0x65017c00
650175e6:	cmp    ax,0x6f
650175ea:	je     0x65017c00
650175f0:	cmp    ax,0x75
650175f4:	je     0x65017c00
650175fa:	cmp    ax,0x78
650175fe:	je     0x65017c00
65017604:	cmp    ax,0x58
65017608:	je     0x65017c00
6501760e:	and    DWORD PTR [ebp-0x40],0x0
65017612:	mov    eax,DWORD PTR [ebp-0x48]
65017615:	push   ecx
65017616:	lea    esi,[ebp-0x2c]
65017619:	mov    DWORD PTR [ebp-0x34],0x1
65017620:	call   0x650169a5
65017625:	pop    ecx
65017626:	jmp    0x65017c00
6501762b:	movzx  eax,cx
6501762e:	cmp    eax,0x64
65017631:	jg     0x650177df
65017637:	je     0x6501785a
6501763d:	cmp    eax,0x53
65017640:	jg     0x6501771d
65017646:	je     0x650176a7
65017648:	sub    eax,0x41
6501764b:	je     0x6501765d
6501764d:	sub    eax,esi
6501764f:	je     0x65017692
65017651:	sub    eax,esi
65017653:	je     0x6501765d
65017655:	sub    eax,esi
65017657:	jne    0x65017ade
6501765d:	add    ecx,0x20
65017660:	mov    DWORD PTR [ebp-0x68],0x1
65017667:	mov    DWORD PTR [ebp-0x28],ecx
6501766a:	or     DWORD PTR [ebp-0x14],0x40
6501766e:	cmp    DWORD PTR [ebp-0x18],0x0
65017672:	lea    esi,[ebp-0x10]
65017675:	mov    eax,0x200
6501767a:	mov    DWORD PTR [ebp-0x1c],esi
6501767d:	mov    DWORD PTR [ebp-0x20],eax
65017680:	jge    0x6501787e
65017686:	mov    DWORD PTR [ebp-0x18],0x6
6501768d:	jmp    0x650178ce
65017692:	test   WORD PTR [ebp-0x14],0x830
65017698:	jne    0x6501773b
6501769e:	or     DWORD PTR [ebp-0x14],0x20
650176a2:	jmp    0x6501773b
650176a7:	test   WORD PTR [ebp-0x14],0x830
650176ad:	jne    0x650176b3
650176af:	or     DWORD PTR [ebp-0x14],0x20
650176b3:	mov    edi,DWORD PTR [ebp-0x18]
650176b6:	cmp    edi,0xffffffff
650176b9:	jne    0x650176c0
650176bb:	mov    edi,0x7fffffff
650176c0:	add    ebx,0x4
650176c3:	test   BYTE PTR [ebp-0x14],0x20
650176c7:	mov    DWORD PTR [ebp-0x24],ebx
650176ca:	mov    ebx,DWORD PTR [ebx-0x4]
650176cd:	mov    DWORD PTR [ebp-0x1c],ebx
650176d0:	je     0x65017ab1
650176d6:	test   ebx,ebx
650176d8:	jne    0x650176e2
650176da:	mov    eax,ds:0x6502c950
650176df:	mov    DWORD PTR [ebp-0x1c],eax
650176e2:	and    DWORD PTR [ebp-0x20],0x0
650176e6:	test   edi,edi
650176e8:	mov    esi,DWORD PTR [ebp-0x1c]
650176eb:	jle    0x65017ade
650176f1:	mov    al,BYTE PTR [esi]
650176f3:	test   al,al
650176f5:	je     0x65017ade
650176fb:	lea    ecx,[ebp-0x58]
650176fe:	movzx  eax,al
65017701:	push   ecx
65017702:	push   eax
65017703:	call   0x65019b3e
65017708:	test   eax,eax
6501770a:	pop    ecx
6501770b:	pop    ecx
6501770c:	je     0x6501770f
6501770e:	inc    esi
6501770f:	inc    esi
65017710:	inc    DWORD PTR [ebp-0x20]
65017713:	cmp    DWORD PTR [ebp-0x20],edi
65017716:	jl     0x650176f1
65017718:	jmp    0x65017ade
6501771d:	sub    eax,0x58
65017720:	je     0x65017965
65017726:	sub    eax,esi
65017728:	je     0x65017792
6501772a:	sub    eax,0x7
6501772d:	je     0x6501766a
65017733:	sub    eax,esi
65017735:	jne    0x65017ade
6501773b:	movzx  eax,WORD PTR [ebx]
6501773e:	add    ebx,0x4
65017741:	xor    esi,esi
65017743:	inc    esi
65017744:	test   BYTE PTR [ebp-0x14],0x20
65017748:	mov    DWORD PTR [ebp-0x34],esi
6501774b:	mov    DWORD PTR [ebp-0x24],ebx
6501774e:	mov    DWORD PTR [ebp-0x70],eax
65017751:	je     0x65017780
65017753:	mov    BYTE PTR [ebp-0x44],al
65017756:	lea    eax,[ebp-0x58]
65017759:	push   eax
6501775a:	mov    eax,DWORD PTR [ebp-0x58]
6501775d:	mov    BYTE PTR [ebp-0x43],0x0
65017761:	push   DWORD PTR [eax+0xac]
65017767:	lea    eax,[ebp-0x44]
6501776a:	push   eax
6501776b:	lea    eax,[ebp-0x10]
6501776e:	push   eax
6501776f:	call   0x6501c76e
65017774:	add    esp,0x10
65017777:	test   eax,eax
65017779:	jge    0x65017784
6501777b:	mov    DWORD PTR [ebp-0x5c],esi
6501777e:	jmp    0x65017784
65017780:	mov    WORD PTR [ebp-0x10],ax
65017784:	lea    eax,[ebp-0x10]
65017787:	mov    DWORD PTR [ebp-0x1c],eax
6501778a:	mov    DWORD PTR [ebp-0x20],esi
6501778d:	jmp    0x65017ade
65017792:	mov    eax,DWORD PTR [ebx]
65017794:	add    ebx,0x4
65017797:	test   eax,eax
65017799:	mov    DWORD PTR [ebp-0x24],ebx
6501779c:	je     0x650177cb
6501779e:	mov    ecx,DWORD PTR [eax+0x4]
650177a1:	test   ecx,ecx
650177a3:	je     0x650177cb
650177a5:	test   WORD PTR [ebp-0x14],0x800
650177ab:	movsx  eax,WORD PTR [eax]
650177ae:	mov    DWORD PTR [ebp-0x1c],ecx
650177b1:	je     0x650177c2
650177b3:	cdq    
650177b4:	sub    eax,edx
650177b6:	mov    DWORD PTR [ebp-0x34],0x1
650177bd:	jmp    0x65017ad9
650177c2:	and    DWORD PTR [ebp-0x34],0x0
650177c6:	jmp    0x65017adb
650177cb:	mov    eax,ds:0x6502c950
650177d0:	mov    DWORD PTR [ebp-0x1c],eax
650177d3:	push   eax
650177d4:	call   0x65013f00
650177d9:	pop    ecx
650177da:	jmp    0x65017adb
650177df:	cmp    eax,0x70
650177e2:	jg     0x6501796e
650177e8:	je     0x65017962
650177ee:	cmp    eax,0x65
650177f1:	jl     0x65017ade
650177f7:	cmp    eax,0x67
650177fa:	jle    0x6501766a
65017800:	cmp    eax,0x69
65017803:	je     0x6501785a
65017805:	cmp    eax,0x6e
65017808:	je     0x65017825
6501780a:	cmp    eax,0x6f
6501780d:	jne    0x65017ade
65017813:	test   BYTE PTR [ebp-0x14],0x80
65017817:	mov    DWORD PTR [ebp-0x28],edx
6501781a:	je     0x65017865
6501781c:	or     DWORD PTR [ebp-0x14],0x200
65017823:	jmp    0x65017865
65017825:	mov    esi,DWORD PTR [ebx]
65017827:	add    ebx,0x4
6501782a:	mov    DWORD PTR [ebp-0x24],ebx
6501782d:	call   0x6501c758
65017832:	test   eax,eax
65017834:	je     0x650173ad
6501783a:	test   BYTE PTR [ebp-0x14],0x20
6501783e:	je     0x65017849
65017840:	mov    ax,WORD PTR [ebp-0x2c]
65017844:	mov    WORD PTR [esi],ax
65017847:	jmp    0x6501784e
65017849:	mov    eax,DWORD PTR [ebp-0x2c]
6501784c:	mov    DWORD PTR [esi],eax
6501784e:	mov    DWORD PTR [ebp-0x5c],0x1
65017855:	jmp    0x65017be7
6501785a:	or     DWORD PTR [ebp-0x14],0x40
6501785e:	mov    DWORD PTR [ebp-0x28],0xa
65017865:	test   WORD PTR [ebp-0x14],0x8000
6501786b:	je     0x650179b8
65017871:	add    ebx,edx
65017873:	mov    eax,DWORD PTR [ebx-0x8]
65017876:	mov    edx,DWORD PTR [ebx-0x4]
65017879:	jmp    0x650179f1
6501787e:	jne    0x6501788f
65017880:	cmp    cx,0x67
65017884:	jne    0x650178ce
65017886:	mov    DWORD PTR [ebp-0x18],0x1
6501788d:	jmp    0x650178ce
6501788f:	cmp    DWORD PTR [ebp-0x18],eax
65017892:	jle    0x65017897
65017894:	mov    DWORD PTR [ebp-0x18],eax
65017897:	cmp    DWORD PTR [ebp-0x18],0xa3
6501789e:	jle    0x650178ce
650178a0:	mov    edi,DWORD PTR [ebp-0x18]
650178a3:	add    edi,0x15d
650178a9:	push   edi
650178aa:	call   0x65015a10
650178af:	test   eax,eax
650178b1:	pop    ecx
650178b2:	mov    ecx,DWORD PTR [ebp-0x28]
650178b5:	push   0x8
650178b7:	mov    DWORD PTR [ebp-0x64],eax
650178ba:	pop    edx
650178bb:	je     0x650178c7
650178bd:	mov    DWORD PTR [ebp-0x1c],eax
650178c0:	mov    DWORD PTR [ebp-0x20],edi
650178c3:	mov    esi,eax
650178c5:	jmp    0x650178ce
650178c7:	mov    DWORD PTR [ebp-0x18],0xa3
650178ce:	add    ebx,edx
650178d0:	mov    eax,DWORD PTR [ebx-0x8]
650178d3:	mov    DWORD PTR [ebp-0x78],eax
650178d6:	mov    eax,DWORD PTR [ebx-0x4]
650178d9:	mov    DWORD PTR [ebp-0x74],eax
650178dc:	lea    eax,[ebp-0x58]
650178df:	push   eax
650178e0:	push   DWORD PTR [ebp-0x68]
650178e3:	movsx  eax,cl
650178e6:	push   DWORD PTR [ebp-0x18]
650178e9:	mov    DWORD PTR [ebp-0x24],ebx
650178ec:	push   eax
650178ed:	push   DWORD PTR [ebp-0x20]
650178f0:	lea    eax,[ebp-0x78]
650178f3:	push   esi
650178f4:	push   eax
650178f5:	push   DWORD PTR ds:0x6502cb5c
650178fb:	call   0x6501452f
65017900:	pop    ecx
65017901:	call   eax
65017903:	mov    ebx,DWORD PTR [ebp-0x14]
65017906:	add    esp,0x1c
65017909:	and    ebx,0x80
6501790f:	je     0x6501792c
65017911:	cmp    DWORD PTR [ebp-0x18],0x0
65017915:	jne    0x6501792c
65017917:	lea    eax,[ebp-0x58]
6501791a:	push   eax
6501791b:	push   esi
6501791c:	push   DWORD PTR ds:0x6502cb68
65017922:	call   0x6501452f
65017927:	pop    ecx
65017928:	call   eax
6501792a:	pop    ecx
6501792b:	pop    ecx
6501792c:	cmp    WORD PTR [ebp-0x28],0x67
65017931:	jne    0x6501794c
65017933:	test   ebx,ebx
65017935:	jne    0x6501794c
65017937:	lea    eax,[ebp-0x58]
6501793a:	push   eax
6501793b:	push   esi
6501793c:	push   DWORD PTR ds:0x6502cb64
65017942:	call   0x6501452f
65017947:	pop    ecx
65017948:	call   eax
6501794a:	pop    ecx
6501794b:	pop    ecx
6501794c:	cmp    BYTE PTR [esi],0x2d
6501794f:	jne    0x6501795c
65017951:	or     DWORD PTR [ebp-0x14],0x100
65017958:	inc    esi
65017959:	mov    DWORD PTR [ebp-0x1c],esi
6501795c:	push   esi
6501795d:	jmp    0x650177d4
65017962:	mov    DWORD PTR [ebp-0x18],edx
65017965:	mov    DWORD PTR [ebp-0x60],0x7
6501796c:	jmp    0x6501798f
6501796e:	sub    eax,0x73
65017971:	je     0x650176b3
65017977:	sub    eax,esi
65017979:	je     0x6501785e
6501797f:	sub    eax,0x3
65017982:	jne    0x65017ade
65017988:	mov    DWORD PTR [ebp-0x60],0x27
6501798f:	test   BYTE PTR [ebp-0x14],0x80
65017993:	mov    DWORD PTR [ebp-0x28],0x10
6501799a:	je     0x65017865
650179a0:	mov    eax,DWORD PTR [ebp-0x60]
650179a3:	add    eax,0x51
650179a6:	mov    WORD PTR [ebp-0x3c],0x30
650179ac:	mov    WORD PTR [ebp-0x3a],ax
650179b0:	mov    DWORD PTR [ebp-0x30],esi
650179b3:	jmp    0x65017865
650179b8:	test   WORD PTR [ebp-0x14],0x1000
650179be:	jne    0x65017871
650179c4:	add    ebx,0x4
650179c7:	test   BYTE PTR [ebp-0x14],0x20
650179cb:	je     0x650179e3
650179cd:	test   BYTE PTR [ebp-0x14],0x40
650179d1:	mov    DWORD PTR [ebp-0x24],ebx
650179d4:	je     0x650179dc
650179d6:	movsx  eax,WORD PTR [ebx-0x4]
650179da:	jmp    0x650179e0
650179dc:	movzx  eax,WORD PTR [ebx-0x4]
650179e0:	cdq    
650179e1:	jmp    0x650179f4
650179e3:	test   BYTE PTR [ebp-0x14],0x40
650179e7:	mov    eax,DWORD PTR [ebx-0x4]
650179ea:	je     0x650179ef
650179ec:	cdq    
650179ed:	jmp    0x650179f1
650179ef:	xor    edx,edx
650179f1:	mov    DWORD PTR [ebp-0x24],ebx
650179f4:	test   BYTE PTR [ebp-0x14],0x40
650179f8:	je     0x65017a12
650179fa:	test   edx,edx
650179fc:	jg     0x65017a12
650179fe:	jl     0x65017a04
65017a00:	test   eax,eax
65017a02:	jae    0x65017a12
65017a04:	neg    eax
65017a06:	adc    edx,0x0
65017a09:	neg    edx
65017a0b:	or     DWORD PTR [ebp-0x14],0x100
65017a12:	test   WORD PTR [ebp-0x14],0x9000
65017a18:	mov    ebx,edx
65017a1a:	mov    edi,eax
65017a1c:	jne    0x65017a20
65017a1e:	xor    ebx,ebx
65017a20:	cmp    DWORD PTR [ebp-0x18],0x0
65017a24:	jge    0x65017a2f
65017a26:	mov    DWORD PTR [ebp-0x18],0x1
65017a2d:	jmp    0x65017a40
65017a2f:	and    DWORD PTR [ebp-0x14],0xfffffff7
65017a33:	mov    eax,0x200
65017a38:	cmp    DWORD PTR [ebp-0x18],eax
65017a3b:	jle    0x65017a40
65017a3d:	mov    DWORD PTR [ebp-0x18],eax
65017a40:	mov    eax,edi
65017a42:	or     eax,ebx
65017a44:	jne    0x65017a49
65017a46:	and    DWORD PTR [ebp-0x30],eax
65017a49:	lea    esi,[ebp+0x1ef]
65017a4f:	mov    eax,DWORD PTR [ebp-0x18]
65017a52:	dec    DWORD PTR [ebp-0x18]
65017a55:	test   eax,eax
65017a57:	jg     0x65017a5f
65017a59:	mov    eax,edi
65017a5b:	or     eax,ebx
65017a5d:	je     0x65017a83
65017a5f:	mov    eax,DWORD PTR [ebp-0x28]
65017a62:	cdq    
65017a63:	push   edx
65017a64:	push   eax
65017a65:	push   ebx
65017a66:	push   edi
65017a67:	call   0x65018ae0
65017a6c:	add    ecx,0x30
65017a6f:	cmp    ecx,0x39
65017a72:	mov    DWORD PTR [ebp-0x7c],ebx
65017a75:	mov    edi,eax
65017a77:	mov    ebx,edx
65017a79:	jle    0x65017a7e
65017a7b:	add    ecx,DWORD PTR [ebp-0x60]
65017a7e:	mov    BYTE PTR [esi],cl
65017a80:	dec    esi
65017a81:	jmp    0x65017a4f
65017a83:	lea    eax,[ebp+0x1ef]
65017a89:	sub    eax,esi
65017a8b:	inc    esi
65017a8c:	test   WORD PTR [ebp-0x14],0x200
65017a92:	mov    DWORD PTR [ebp-0x20],eax
65017a95:	mov    DWORD PTR [ebp-0x1c],esi
65017a98:	je     0x65017ade
65017a9a:	test   eax,eax
65017a9c:	je     0x65017aa5
65017a9e:	mov    ecx,esi
65017aa0:	cmp    BYTE PTR [ecx],0x30
65017aa3:	je     0x65017ade
65017aa5:	dec    DWORD PTR [ebp-0x1c]
65017aa8:	mov    ecx,DWORD PTR [ebp-0x1c]
65017aab:	mov    BYTE PTR [ecx],0x30
65017aae:	inc    eax
65017aaf:	jmp    0x65017adb
65017ab1:	test   ebx,ebx
65017ab3:	jne    0x65017abd
65017ab5:	mov    eax,ds:0x6502c954
65017aba:	mov    DWORD PTR [ebp-0x1c],eax
65017abd:	mov    eax,DWORD PTR [ebp-0x1c]
65017ac0:	mov    DWORD PTR [ebp-0x34],0x1
65017ac7:	jmp    0x65017ad2
65017ac9:	dec    edi
65017aca:	cmp    WORD PTR [eax],0x0
65017ace:	je     0x65017ad6
65017ad0:	add    eax,esi
65017ad2:	test   edi,edi
65017ad4:	jne    0x65017ac9
65017ad6:	sub    eax,DWORD PTR [ebp-0x1c]
65017ad9:	sar    eax,1
65017adb:	mov    DWORD PTR [ebp-0x20],eax
65017ade:	cmp    DWORD PTR [ebp-0x5c],0x0
65017ae2:	jne    0x65017be7
65017ae8:	mov    eax,DWORD PTR [ebp-0x14]
65017aeb:	test   al,0x40
65017aed:	je     0x65017b1a
65017aef:	test   ax,0x100
65017af3:	je     0x65017afd
65017af5:	mov    WORD PTR [ebp-0x3c],0x2d
65017afb:	jmp    0x65017b13
65017afd:	test   al,0x1
65017aff:	je     0x65017b09
65017b01:	mov    WORD PTR [ebp-0x3c],0x2b
65017b07:	jmp    0x65017b13
65017b09:	test   al,0x2
65017b0b:	je     0x65017b1a
65017b0d:	mov    WORD PTR [ebp-0x3c],0x20
65017b13:	mov    DWORD PTR [ebp-0x30],0x1
65017b1a:	mov    ebx,DWORD PTR [ebp-0x38]
65017b1d:	mov    esi,DWORD PTR [ebp-0x20]
65017b20:	sub    ebx,esi
65017b22:	sub    ebx,DWORD PTR [ebp-0x30]
65017b25:	test   BYTE PTR [ebp-0x14],0xc
65017b29:	jne    0x65017b3c
65017b2b:	push   DWORD PTR [ebp-0x48]
65017b2e:	lea    eax,[ebp-0x2c]
65017b31:	push   ebx
65017b32:	push   0x20
65017b34:	call   0x650169ca
65017b39:	add    esp,0xc
65017b3c:	push   DWORD PTR [ebp-0x30]
65017b3f:	mov    edi,DWORD PTR [ebp-0x48]
65017b42:	lea    eax,[ebp-0x2c]
65017b45:	lea    ecx,[ebp-0x3c]
65017b48:	call   0x650172ff
65017b4d:	test   BYTE PTR [ebp-0x14],0x8
65017b51:	pop    ecx
65017b52:	je     0x65017b69
65017b54:	test   BYTE PTR [ebp-0x14],0x4
65017b58:	jne    0x65017b69
65017b5a:	push   edi
65017b5b:	push   ebx
65017b5c:	push   0x30
65017b5e:	lea    eax,[ebp-0x2c]
65017b61:	call   0x650169ca
65017b66:	add    esp,0xc
65017b69:	cmp    DWORD PTR [ebp-0x34],0x0
65017b6d:	jne    0x65017bbd
65017b6f:	test   esi,esi
65017b71:	jle    0x65017bbd
65017b73:	mov    edi,DWORD PTR [ebp-0x1c]
65017b76:	mov    DWORD PTR [ebp-0x28],esi
65017b79:	dec    DWORD PTR [ebp-0x28]
65017b7c:	lea    eax,[ebp-0x58]
65017b7f:	push   eax
65017b80:	mov    eax,DWORD PTR [ebp-0x58]
65017b83:	push   DWORD PTR [eax+0xac]
65017b89:	lea    eax,[ebp-0x70]
65017b8c:	push   edi
65017b8d:	push   eax
65017b8e:	call   0x6501c76e
65017b93:	add    esp,0x10
65017b96:	test   eax,eax
65017b98:	mov    DWORD PTR [ebp-0x7c],eax
65017b9b:	jle    0x65017bb7
65017b9d:	push   DWORD PTR [ebp-0x70]
65017ba0:	mov    eax,DWORD PTR [ebp-0x48]
65017ba3:	lea    esi,[ebp-0x2c]
65017ba6:	call   0x650169a5
65017bab:	add    edi,DWORD PTR [ebp-0x7c]
65017bae:	cmp    DWORD PTR [ebp-0x28],0x0
65017bb2:	pop    ecx
65017bb3:	jg     0x65017b79
65017bb5:	jmp    0x65017bca
65017bb7:	or     DWORD PTR [ebp-0x2c],0xffffffff
65017bbb:	jmp    0x65017bca
65017bbd:	mov    ecx,DWORD PTR [ebp-0x1c]
65017bc0:	push   esi
65017bc1:	lea    eax,[ebp-0x2c]
65017bc4:	call   0x650172ff
65017bc9:	pop    ecx
65017bca:	cmp    DWORD PTR [ebp-0x2c],0x0
65017bce:	jl     0x65017be7
65017bd0:	test   BYTE PTR [ebp-0x14],0x4
65017bd4:	je     0x65017be7
65017bd6:	push   DWORD PTR [ebp-0x48]
65017bd9:	lea    eax,[ebp-0x2c]
65017bdc:	push   ebx
65017bdd:	push   0x20
65017bdf:	call   0x650169ca
65017be4:	add    esp,0xc
65017be7:	cmp    DWORD PTR [ebp-0x64],0x0
65017beb:	je     0x65017bfa
65017bed:	push   DWORD PTR [ebp-0x64]
65017bf0:	call   0x650135d6
65017bf5:	and    DWORD PTR [ebp-0x64],0x0
65017bf9:	pop    ecx
65017bfa:	mov    edi,DWORD PTR [ebp-0x6c]
65017bfd:	mov    ebx,DWORD PTR [ebp-0x24]
65017c00:	movzx  eax,WORD PTR [edi]
65017c03:	test   ax,ax
65017c06:	mov    DWORD PTR [ebp-0x28],eax
65017c09:	je     0x65017c12
65017c0b:	mov    ecx,eax
65017c0d:	jmp    0x6501740f
65017c12:	cmp    DWORD PTR [ebp-0x40],0x0
65017c16:	je     0x65017c22
65017c18:	cmp    DWORD PTR [ebp-0x40],0x7
65017c1c:	jne    0x650173ad
65017c22:	cmp    BYTE PTR [ebp-0x4c],0x0
65017c26:	je     0x65017c2f
65017c28:	mov    eax,DWORD PTR [ebp-0x50]
65017c2b:	and    DWORD PTR [eax+0x70],0xfffffffd
65017c2f:	mov    eax,DWORD PTR [ebp-0x2c]
65017c32:	mov    ecx,DWORD PTR [ebp+0x3f0]
65017c38:	pop    edi
65017c39:	pop    esi
65017c3a:	xor    ecx,ebp
65017c3c:	pop    ebx
65017c3d:	call   0x650127bc
65017c42:	add    ebp,0x3f4
65017c48:	leave  
65017c49:	ret    
65017c4a:	adc    dh,BYTE PTR [esi+0x1]
65017c4d:	gs addr16 je 0x65017c52
65017c51:	test   BYTE PTR gs:[ecx+eax*1+0x65],dh
65017c56:	shl    BYTE PTR [ecx+eax*1+0x65],1
65017c5a:	or     dh,BYTE PTR [ebp+0x1]
65017c5d:	adc    esi,DWORD PTR gs:[ebp+0x1]
65017c61:	gs dec edx
65017c63:	jne    0x65017c66
65017c65:	sub    esi,DWORD PTR gs:[esi+0x1]
65017c69:	gs push ebp
65017c6b:	mov    ebp,esp
65017c6d:	sub    esp,0x10
65017c70:	mov    eax,ds:0x6502c09c
65017c75:	xor    eax,ebp
65017c77:	mov    DWORD PTR [ebp-0x4],eax
65017c7a:	push   ebx
65017c7b:	push   esi
65017c7c:	mov    esi,DWORD PTR ds:0x6502414c
65017c82:	xor    ebx,ebx
65017c84:	cmp    DWORD PTR ds:0x6502d978,ebx
65017c8a:	push   edi
65017c8b:	mov    edi,ecx
65017c8d:	jne    0x65017cc5
65017c8f:	push   ebx
65017c90:	push   ebx
65017c91:	push   0x1
65017c93:	push   0x650266c8
65017c98:	push   0x100
65017c9d:	push   ebx
65017c9e:	call   esi
65017ca0:	test   eax,eax
65017ca2:	je     0x65017cb0
65017ca4:	mov    DWORD PTR ds:0x6502d978,0x1
65017cae:	jmp    0x65017cc5
65017cb0:	call   DWORD PTR ds:0x65024044
65017cb6:	cmp    eax,0x78
65017cb9:	jne    0x65017cc5
65017cbb:	mov    DWORD PTR ds:0x6502d978,0x2
65017cc5:	cmp    DWORD PTR [ebp+0x14],ebx
65017cc8:	jle    0x65017ce7
65017cca:	mov    ecx,DWORD PTR [ebp+0x14]
65017ccd:	mov    eax,DWORD PTR [ebp+0x10]
65017cd0:	dec    ecx
65017cd1:	cmp    WORD PTR [eax],bx
65017cd4:	je     0x65017cdf
65017cd6:	inc    eax
65017cd7:	inc    eax
65017cd8:	cmp    ecx,ebx
65017cda:	jne    0x65017cd0
65017cdc:	or     ecx,0xffffffff
65017cdf:	or     eax,0xffffffff
65017ce2:	sub    eax,ecx
65017ce4:	add    DWORD PTR [ebp+0x14],eax
65017ce7:	mov    eax,ds:0x6502d978
65017cec:	cmp    eax,0x1
65017cef:	jne    0x65017d0a
65017cf1:	push   DWORD PTR [ebp+0x1c]
65017cf4:	push   DWORD PTR [ebp+0x18]
65017cf7:	push   DWORD PTR [ebp+0x14]
65017cfa:	push   DWORD PTR [ebp+0x10]
65017cfd:	push   DWORD PTR [ebp+0xc]
65017d00:	push   DWORD PTR [ebp+0x8]
65017d03:	call   esi
65017d05:	jmp    0x65017eb9
65017d0a:	cmp    eax,0x2
65017d0d:	je     0x65017d13
65017d0f:	cmp    eax,ebx
65017d11:	jne    0x65017d65
65017d13:	cmp    DWORD PTR [ebp+0x8],ebx
65017d16:	mov    DWORD PTR [ebp-0xc],ebx
65017d19:	jne    0x65017d23
65017d1b:	mov    eax,DWORD PTR [edi]
65017d1d:	mov    eax,DWORD PTR [eax+0x14]
65017d20:	mov    DWORD PTR [ebp+0x8],eax
65017d23:	cmp    DWORD PTR [ebp+0x20],ebx
65017d26:	jne    0x65017d30
65017d28:	mov    eax,DWORD PTR [edi]
65017d2a:	mov    eax,DWORD PTR [eax+0x4]
65017d2d:	mov    DWORD PTR [ebp+0x20],eax
65017d30:	push   DWORD PTR [ebp+0x8]
65017d33:	call   0x6501d29f
65017d38:	cmp    DWORD PTR [ebp+0x20],eax
65017d3b:	pop    ecx
65017d3c:	je     0x65017d46
65017d3e:	cmp    eax,0xffffffff
65017d41:	je     0x65017d46
65017d43:	mov    DWORD PTR [ebp+0x20],eax
65017d46:	mov    esi,DWORD PTR ds:0x65024028
65017d4c:	push   ebx
65017d4d:	push   ebx
65017d4e:	push   ebx
65017d4f:	push   ebx
65017d50:	push   DWORD PTR [ebp+0x14]
65017d53:	push   DWORD PTR [ebp+0x10]
65017d56:	push   ebx
65017d57:	push   DWORD PTR [ebp+0x20]
65017d5a:	call   esi
65017d5c:	mov    edi,eax
65017d5e:	cmp    edi,ebx
65017d60:	mov    DWORD PTR [ebp-0x10],edi
65017d63:	jne    0x65017d6c
65017d65:	xor    eax,eax
65017d67:	jmp    0x65017eb9
65017d6c:	jle    0x65017db0
65017d6e:	push   0xffffffe0
65017d70:	xor    edx,edx
65017d72:	pop    eax
65017d73:	div    edi
65017d75:	cmp    eax,0x1
65017d78:	jb     0x65017db0
65017d7a:	lea    eax,[edi+0x8]
65017d7d:	cmp    eax,0x400
65017d82:	ja     0x65017d97
65017d84:	call   0x65012ec0
65017d89:	mov    eax,esp
65017d8b:	cmp    eax,ebx
65017d8d:	je     0x65017dab
65017d8f:	mov    DWORD PTR [eax],0xcccc
65017d95:	jmp    0x65017da8
65017d97:	push   eax
65017d98:	call   0x650136b3
65017d9d:	cmp    eax,ebx
65017d9f:	pop    ecx
65017da0:	je     0x65017dab
65017da2:	mov    DWORD PTR [eax],0xdddd
65017da8:	add    eax,0x8
65017dab:	mov    DWORD PTR [ebp-0x8],eax
65017dae:	jmp    0x65017db3
65017db0:	mov    DWORD PTR [ebp-0x8],ebx
65017db3:	cmp    DWORD PTR [ebp-0x8],ebx
65017db6:	je     0x65017d65
65017db8:	push   ebx
65017db9:	push   ebx
65017dba:	push   edi
65017dbb:	push   DWORD PTR [ebp-0x8]
65017dbe:	push   DWORD PTR [ebp+0x14]
65017dc1:	push   DWORD PTR [ebp+0x10]
65017dc4:	push   ebx
65017dc5:	push   DWORD PTR [ebp+0x20]
65017dc8:	call   esi
65017dca:	test   eax,eax
65017dcc:	je     0x65017ead
65017dd2:	push   ebx
65017dd3:	push   ebx
65017dd4:	push   edi
65017dd5:	push   DWORD PTR [ebp-0x8]
65017dd8:	mov    edi,DWORD PTR ds:0x65024148
65017dde:	push   DWORD PTR [ebp+0xc]
65017de1:	push   DWORD PTR [ebp+0x8]
65017de4:	call   edi
65017de6:	mov    esi,eax
65017de8:	cmp    esi,ebx
65017dea:	je     0x65017ead
65017df0:	jle    0x65017e31
65017df2:	push   0xffffffe0
65017df4:	xor    edx,edx
65017df6:	pop    eax
65017df7:	div    esi
65017df9:	cmp    eax,0x1
65017dfc:	jb     0x65017e31
65017dfe:	lea    eax,[esi+0x8]
65017e01:	cmp    eax,0x400
65017e06:	ja     0x65017e1b
65017e08:	call   0x65012ec0
65017e0d:	mov    eax,esp
65017e0f:	cmp    eax,ebx
65017e11:	je     0x65017e2f
65017e13:	mov    DWORD PTR [eax],0xcccc
65017e19:	jmp    0x65017e2c
65017e1b:	push   eax
65017e1c:	call   0x650136b3
65017e21:	cmp    eax,ebx
65017e23:	pop    ecx
65017e24:	je     0x65017e2f
65017e26:	mov    DWORD PTR [eax],0xdddd
65017e2c:	add    eax,0x8
65017e2f:	mov    ebx,eax
65017e31:	test   ebx,ebx
65017e33:	je     0x65017ead
65017e35:	push   esi
65017e36:	push   ebx
65017e37:	push   DWORD PTR [ebp-0x10]
65017e3a:	push   DWORD PTR [ebp-0x8]
65017e3d:	push   DWORD PTR [ebp+0xc]
65017e40:	push   DWORD PTR [ebp+0x8]
65017e43:	call   edi
65017e45:	test   eax,eax
65017e47:	je     0x65017ea6
65017e49:	test   WORD PTR [ebp+0xc],0x400
65017e4f:	je     0x65017e85
65017e51:	mov    eax,DWORD PTR [ebp+0x1c]
65017e54:	xor    edi,edi
65017e56:	cmp    eax,edi
65017e58:	mov    DWORD PTR [ebp-0xc],esi
65017e5b:	je     0x65017ea6
65017e5d:	cmp    eax,esi
65017e5f:	jg     0x65017e64
65017e61:	lea    esi,[eax-0x1]
65017e64:	push   esi
65017e65:	push   ebx
65017e66:	push   eax
65017e67:	push   DWORD PTR [ebp+0x18]
65017e6a:	call   0x6501b976
65017e6f:	add    esp,0x10
65017e72:	test   eax,eax
65017e74:	je     0x65017ea6
65017e76:	push   edi
65017e77:	push   edi
65017e78:	push   edi
65017e79:	push   edi
65017e7a:	push   edi
65017e7b:	call   0x650121b3
65017e80:	add    esp,0x14
65017e83:	jmp    0x65017ea6
65017e85:	xor    eax,eax
65017e87:	cmp    DWORD PTR [ebp+0x1c],eax
65017e8a:	jne    0x65017e90
65017e8c:	push   eax
65017e8d:	push   eax
65017e8e:	jmp    0x65017e96
65017e90:	push   DWORD PTR [ebp+0x1c]
65017e93:	push   DWORD PTR [ebp+0x18]
65017e96:	push   esi
65017e97:	push   ebx
65017e98:	push   0x1
65017e9a:	push   DWORD PTR [ebp+0x20]
65017e9d:	call   DWORD PTR ds:0x65024024
65017ea3:	mov    DWORD PTR [ebp-0xc],eax
65017ea6:	push   ebx
65017ea7:	call   0x65012c52
65017eac:	pop    ecx
65017ead:	push   DWORD PTR [ebp-0x8]
65017eb0:	call   0x65012c52
65017eb5:	mov    eax,DWORD PTR [ebp-0xc]
65017eb8:	pop    ecx
65017eb9:	lea    esp,[ebp-0x1c]
65017ebc:	pop    edi
65017ebd:	pop    esi
65017ebe:	pop    ebx
65017ebf:	mov    ecx,DWORD PTR [ebp-0x4]
65017ec2:	xor    ecx,ebp
65017ec4:	call   0x650127bc
65017ec9:	leave  
65017eca:	ret    
65017ecb:	push   ebp
65017ecc:	mov    ebp,esp
65017ece:	sub    esp,0x10
65017ed1:	push   DWORD PTR [ebp+0x8]
65017ed4:	lea    ecx,[ebp-0x10]
65017ed7:	call   0x6501295f
65017edc:	push   DWORD PTR [ebp+0x24]
65017edf:	lea    ecx,[ebp-0x10]
65017ee2:	push   DWORD PTR [ebp+0x20]
65017ee5:	push   DWORD PTR [ebp+0x1c]
65017ee8:	push   DWORD PTR [ebp+0x18]
65017eeb:	push   DWORD PTR [ebp+0x14]
65017eee:	push   DWORD PTR [ebp+0x10]
65017ef1:	push   DWORD PTR [ebp+0xc]
65017ef4:	call   0x65017c6a
65017ef9:	add    esp,0x1c
65017efc:	cmp    BYTE PTR [ebp-0x4],0x0
65017f00:	je     0x65017f09
65017f02:	mov    ecx,DWORD PTR [ebp-0x8]
65017f05:	and    DWORD PTR [ecx+0x70],0xfffffffd
65017f09:	leave  
65017f0a:	ret    
65017f0b:	xor    eax,eax
65017f0d:	cmp    DWORD PTR [esp+0x8],eax
65017f11:	jbe    0x65017f26
65017f13:	mov    ecx,DWORD PTR [esp+0x4]
65017f17:	cmp    WORD PTR [ecx],0x0
65017f1b:	je     0x65017f26
65017f1d:	inc    eax
65017f1e:	inc    ecx
65017f1f:	inc    ecx
65017f20:	cmp    eax,DWORD PTR [esp+0x8]
65017f24:	jb     0x65017f17
65017f26:	ret    
65017f27:	push   ebp
65017f28:	mov    ebp,esp
65017f2a:	sub    esp,0x4
65017f2d:	mov    DWORD PTR [ebp-0x4],edi
65017f30:	mov    edi,DWORD PTR [ebp+0x8]
65017f33:	mov    ecx,DWORD PTR [ebp+0xc]
65017f36:	shr    ecx,0x7
65017f39:	pxor   xmm0,xmm0
65017f3d:	jmp    0x65017f47
65017f3f:	lea    esp,[esp+0x0]
65017f46:	nop
65017f47:	movdqa XMMWORD PTR [edi],xmm0
65017f4b:	movdqa XMMWORD PTR [edi+0x10],xmm0
65017f50:	movdqa XMMWORD PTR [edi+0x20],xmm0
65017f55:	movdqa XMMWORD PTR [edi+0x30],xmm0
65017f5a:	movdqa XMMWORD PTR [edi+0x40],xmm0
65017f5f:	movdqa XMMWORD PTR [edi+0x50],xmm0
65017f64:	movdqa XMMWORD PTR [edi+0x60],xmm0
65017f69:	movdqa XMMWORD PTR [edi+0x70],xmm0
65017f6e:	lea    edi,[edi+0x80]
65017f74:	dec    ecx
65017f75:	jne    0x65017f47
65017f77:	mov    edi,DWORD PTR [ebp-0x4]
65017f7a:	mov    esp,ebp
65017f7c:	pop    ebp
65017f7d:	ret    
65017f7e:	push   ebp
65017f7f:	mov    ebp,esp
65017f81:	sub    esp,0x10
65017f84:	mov    DWORD PTR [ebp-0x4],edi
65017f87:	mov    eax,DWORD PTR [ebp+0x8]
65017f8a:	cdq    
65017f8b:	mov    edi,eax
65017f8d:	xor    edi,edx
65017f8f:	sub    edi,edx
65017f91:	and    edi,0xf
65017f94:	xor    edi,edx
65017f96:	sub    edi,edx
65017f98:	test   edi,edi
65017f9a:	jne    0x65017fd8
65017f9c:	mov    ecx,DWORD PTR [ebp+0x10]
65017f9f:	mov    edx,ecx
65017fa1:	and    edx,0x7f
65017fa4:	mov    DWORD PTR [ebp-0xc],edx
65017fa7:	cmp    ecx,edx
65017fa9:	je     0x65017fbd
65017fab:	sub    ecx,edx
65017fad:	push   ecx
65017fae:	push   eax
65017faf:	call   0x65017f27
65017fb4:	add    esp,0x8
65017fb7:	mov    eax,DWORD PTR [ebp+0x8]
65017fba:	mov    edx,DWORD PTR [ebp-0xc]
65017fbd:	test   edx,edx
65017fbf:	je     0x65018006
65017fc1:	add    eax,DWORD PTR [ebp+0x10]
65017fc4:	sub    eax,edx
65017fc6:	mov    DWORD PTR [ebp-0x8],eax
65017fc9:	xor    eax,eax
65017fcb:	mov    edi,DWORD PTR [ebp-0x8]
65017fce:	mov    ecx,DWORD PTR [ebp-0xc]
65017fd1:	rep stos BYTE PTR es:[edi],al
65017fd3:	mov    eax,DWORD PTR [ebp+0x8]
65017fd6:	jmp    0x65018006
65017fd8:	neg    edi
65017fda:	add    edi,0x10
65017fdd:	mov    DWORD PTR [ebp-0x10],edi
65017fe0:	xor    eax,eax
65017fe2:	mov    edi,DWORD PTR [ebp+0x8]
65017fe5:	mov    ecx,DWORD PTR [ebp-0x10]
65017fe8:	rep stos BYTE PTR es:[edi],al
65017fea:	mov    eax,DWORD PTR [ebp-0x10]
65017fed:	mov    ecx,DWORD PTR [ebp+0x8]
65017ff0:	mov    edx,DWORD PTR [ebp+0x10]
65017ff3:	add    ecx,eax
65017ff5:	sub    edx,eax
65017ff7:	push   edx
65017ff8:	push   0x0
65017ffa:	push   ecx
65017ffb:	call   0x65017f7e
65018000:	add    esp,0xc
65018003:	mov    eax,DWORD PTR [ebp+0x8]
65018006:	mov    edi,DWORD PTR [ebp-0x4]
65018009:	mov    esp,ebp
6501800b:	pop    ebp
6501800c:	ret    
6501800d:	and    DWORD PTR ds:0x65031560,0x0
65018014:	call   0x6501d4e8
65018019:	mov    ds:0x65031560,eax
6501801e:	xor    eax,eax
65018020:	ret    
65018021:	int3   
65018022:	int3   
65018023:	int3   
65018024:	int3   
65018025:	int3   
65018026:	int3   
65018027:	int3   
65018028:	int3   
65018029:	int3   
6501802a:	int3   
6501802b:	int3   
6501802c:	int3   
6501802d:	int3   
6501802e:	int3   
6501802f:	int3   
65018030:	push   ecx
65018031:	lea    ecx,[esp+0x4]
65018035:	sub    ecx,eax
65018037:	sbb    eax,eax
65018039:	not    eax
6501803b:	and    ecx,eax
6501803d:	mov    eax,esp
6501803f:	and    eax,0xfffff000
65018044:	cmp    ecx,eax
65018046:	jb     0x65018052
65018048:	mov    eax,ecx
6501804a:	pop    ecx
6501804b:	xchg   esp,eax
6501804c:	mov    eax,DWORD PTR [eax]
6501804e:	mov    DWORD PTR [esp],eax
65018051:	ret    
65018052:	sub    eax,0x1000
65018057:	test   DWORD PTR [eax],eax
65018059:	jmp    0x65018044
6501805b:	push   0x54
6501805d:	push   0x65029b80
65018062:	call   0x65013d00
65018067:	xor    edi,edi
65018069:	mov    DWORD PTR [ebp-0x4],edi
6501806c:	lea    eax,[ebp-0x64]
6501806f:	push   eax
65018070:	call   DWORD PTR ds:0x6502415c
65018076:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501807d:	push   0x40
6501807f:	push   0x20
65018081:	pop    esi
65018082:	push   esi
65018083:	call   0x65015a50
65018088:	pop    ecx
65018089:	pop    ecx
6501808a:	cmp    eax,edi
6501808c:	je     0x650182a6
65018092:	mov    ds:0x65031460,eax
65018097:	mov    DWORD PTR ds:0x65031440,esi
6501809d:	lea    ecx,[eax+0x800]
650180a3:	jmp    0x650180d5
650180a5:	mov    BYTE PTR [eax+0x4],0x0
650180a9:	or     DWORD PTR [eax],0xffffffff
650180ac:	mov    BYTE PTR [eax+0x5],0xa
650180b0:	mov    DWORD PTR [eax+0x8],edi
650180b3:	mov    BYTE PTR [eax+0x24],0x0
650180b7:	mov    BYTE PTR [eax+0x25],0xa
650180bb:	mov    BYTE PTR [eax+0x26],0xa
650180bf:	mov    DWORD PTR [eax+0x38],edi
650180c2:	mov    BYTE PTR [eax+0x34],0x0
650180c6:	add    eax,0x40
650180c9:	mov    ecx,DWORD PTR ds:0x65031460
650180cf:	add    ecx,0x800
650180d5:	cmp    eax,ecx
650180d7:	jb     0x650180a5
650180d9:	cmp    WORD PTR [ebp-0x32],di
650180dd:	je     0x650181ed
650180e3:	mov    eax,DWORD PTR [ebp-0x30]
650180e6:	cmp    eax,edi
650180e8:	je     0x650181ed
650180ee:	mov    edi,DWORD PTR [eax]
650180f0:	lea    ebx,[eax+0x4]
650180f3:	lea    eax,[ebx+edi*1]
650180f6:	mov    DWORD PTR [ebp-0x1c],eax
650180f9:	mov    esi,0x800
650180fe:	cmp    edi,esi
65018100:	jl     0x65018104
65018102:	mov    edi,esi
65018104:	mov    DWORD PTR [ebp-0x20],0x1
6501810b:	jmp    0x65018168
6501810d:	push   0x40
6501810f:	push   0x20
65018111:	call   0x65015a50
65018116:	pop    ecx
65018117:	pop    ecx
65018118:	test   eax,eax
6501811a:	je     0x65018172
6501811c:	mov    ecx,DWORD PTR [ebp-0x20]
6501811f:	lea    ecx,[ecx*4+0x65031460]
65018126:	mov    DWORD PTR [ecx],eax
65018128:	add    DWORD PTR ds:0x65031440,0x20
6501812f:	lea    edx,[eax+0x800]
65018135:	jmp    0x65018161
65018137:	mov    BYTE PTR [eax+0x4],0x0
6501813b:	or     DWORD PTR [eax],0xffffffff
6501813e:	mov    BYTE PTR [eax+0x5],0xa
65018142:	and    DWORD PTR [eax+0x8],0x0
65018146:	and    BYTE PTR [eax+0x24],0x80
6501814a:	mov    BYTE PTR [eax+0x25],0xa
6501814e:	mov    BYTE PTR [eax+0x26],0xa
65018152:	and    DWORD PTR [eax+0x38],0x0
65018156:	mov    BYTE PTR [eax+0x34],0x0
6501815a:	add    eax,0x40
6501815d:	mov    edx,DWORD PTR [ecx]
6501815f:	add    edx,esi
65018161:	cmp    eax,edx
65018163:	jb     0x65018137
65018165:	inc    DWORD PTR [ebp-0x20]
65018168:	cmp    DWORD PTR ds:0x65031440,edi
6501816e:	jl     0x6501810d
65018170:	jmp    0x65018178
65018172:	mov    edi,DWORD PTR ds:0x65031440
65018178:	and    DWORD PTR [ebp-0x20],0x0
6501817c:	test   edi,edi
6501817e:	jle    0x650181ed
65018180:	mov    eax,DWORD PTR [ebp-0x1c]
65018183:	mov    ecx,DWORD PTR [eax]
65018185:	cmp    ecx,0xffffffff
65018188:	je     0x650181e0
6501818a:	cmp    ecx,0xfffffffe
6501818d:	je     0x650181e0
6501818f:	mov    al,BYTE PTR [ebx]
65018191:	test   al,0x1
65018193:	je     0x650181e0
65018195:	test   al,0x8
65018197:	jne    0x650181a4
65018199:	push   ecx
6501819a:	call   DWORD PTR ds:0x65024158
650181a0:	test   eax,eax
650181a2:	je     0x650181e0
650181a4:	mov    esi,DWORD PTR [ebp-0x20]
650181a7:	mov    eax,esi
650181a9:	sar    eax,0x5
650181ac:	and    esi,0x1f
650181af:	shl    esi,0x6
650181b2:	add    esi,DWORD PTR [eax*4+0x65031460]
650181b9:	mov    eax,DWORD PTR [ebp-0x1c]
650181bc:	mov    eax,DWORD PTR [eax]
650181be:	mov    DWORD PTR [esi],eax
650181c0:	mov    al,BYTE PTR [ebx]
650181c2:	mov    BYTE PTR [esi+0x4],al
650181c5:	push   0xfa0
650181ca:	lea    eax,[esi+0xc]
650181cd:	push   eax
650181ce:	call   0x6501b3a8
650181d3:	pop    ecx
650181d4:	pop    ecx
650181d5:	test   eax,eax
650181d7:	je     0x650182a6
650181dd:	inc    DWORD PTR [esi+0x8]
650181e0:	inc    DWORD PTR [ebp-0x20]
650181e3:	inc    ebx
650181e4:	add    DWORD PTR [ebp-0x1c],0x4
650181e8:	cmp    DWORD PTR [ebp-0x20],edi
650181eb:	jl     0x65018180
650181ed:	xor    ebx,ebx
650181ef:	mov    esi,ebx
650181f1:	shl    esi,0x6
650181f4:	add    esi,DWORD PTR ds:0x65031460
650181fa:	mov    eax,DWORD PTR [esi]
650181fc:	cmp    eax,0xffffffff
650181ff:	je     0x6501820c
65018201:	cmp    eax,0xfffffffe
65018204:	je     0x6501820c
65018206:	or     BYTE PTR [esi+0x4],0x80
6501820a:	jmp    0x6501827e
6501820c:	mov    BYTE PTR [esi+0x4],0x81
65018210:	test   ebx,ebx
65018212:	jne    0x65018219
65018214:	push   0xfffffff6
65018216:	pop    eax
65018217:	jmp    0x65018223
65018219:	mov    eax,ebx
6501821b:	dec    eax
6501821c:	neg    eax
6501821e:	sbb    eax,eax
65018220:	add    eax,0xfffffff5
65018223:	push   eax
65018224:	call   DWORD PTR ds:0x65024154
6501822a:	mov    edi,eax
6501822c:	cmp    edi,0xffffffff
6501822f:	je     0x65018274
65018231:	test   edi,edi
65018233:	je     0x65018274
65018235:	push   edi
65018236:	call   DWORD PTR ds:0x65024158
6501823c:	test   eax,eax
6501823e:	je     0x65018274
65018240:	mov    DWORD PTR [esi],edi
65018242:	and    eax,0xff
65018247:	cmp    eax,0x2
6501824a:	jne    0x65018252
6501824c:	or     BYTE PTR [esi+0x4],0x40
65018250:	jmp    0x6501825b
65018252:	cmp    eax,0x3
65018255:	jne    0x6501825b
65018257:	or     BYTE PTR [esi+0x4],0x8
6501825b:	push   0xfa0
65018260:	lea    eax,[esi+0xc]
65018263:	push   eax
65018264:	call   0x6501b3a8
65018269:	pop    ecx
6501826a:	pop    ecx
6501826b:	test   eax,eax
6501826d:	je     0x650182a6
6501826f:	inc    DWORD PTR [esi+0x8]
65018272:	jmp    0x6501827e
65018274:	or     BYTE PTR [esi+0x4],0x40
65018278:	mov    DWORD PTR [esi],0xfffffffe
6501827e:	inc    ebx
6501827f:	cmp    ebx,0x3
65018282:	jl     0x650181ef
65018288:	push   DWORD PTR ds:0x65031440
6501828e:	call   DWORD PTR ds:0x65024150
65018294:	xor    eax,eax
65018296:	jmp    0x650182a9
65018298:	xor    eax,eax
6501829a:	inc    eax
6501829b:	ret    
6501829c:	mov    esp,DWORD PTR [ebp-0x18]
6501829f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650182a6:	or     eax,0xffffffff
650182a9:	call   0x65013d45
650182ae:	ret    
650182af:	push   esi
650182b0:	push   edi
650182b1:	mov    esi,0x65031460
650182b6:	mov    edi,DWORD PTR [esi]
650182b8:	test   edi,edi
650182ba:	je     0x650182ed
650182bc:	lea    eax,[edi+0x800]
650182c2:	jmp    0x650182de
650182c4:	cmp    DWORD PTR [edi+0x8],0x0
650182c8:	je     0x650182d4
650182ca:	lea    eax,[edi+0xc]
650182cd:	push   eax
650182ce:	call   DWORD PTR ds:0x650240a4
650182d4:	mov    eax,DWORD PTR [esi]
650182d6:	add    edi,0x40
650182d9:	add    eax,0x800
650182de:	cmp    edi,eax
650182e0:	jb     0x650182c4
650182e2:	push   DWORD PTR [esi]
650182e4:	call   0x650135d6
650182e9:	and    DWORD PTR [esi],0x0
650182ec:	pop    ecx
650182ed:	add    esi,0x4
650182f0:	cmp    esi,0x65031560
650182f6:	jl     0x650182b6
650182f8:	pop    edi
650182f9:	pop    esi
650182fa:	ret    
650182fb:	push   ebx
650182fc:	xor    ebx,ebx
650182fe:	cmp    DWORD PTR ds:0x65031574,ebx
65018304:	push   esi
65018305:	push   edi
65018306:	jne    0x6501830d
65018308:	call   0x65016521
6501830d:	mov    esi,DWORD PTR ds:0x6502d594
65018313:	xor    edi,edi
65018315:	cmp    esi,ebx
65018317:	jne    0x65018331
65018319:	or     eax,0xffffffff
6501831c:	jmp    0x650183bc
65018321:	cmp    al,0x3d
65018323:	je     0x65018326
65018325:	inc    edi
65018326:	push   esi
65018327:	call   0x65013f00
6501832c:	pop    ecx
6501832d:	lea    esi,[esi+eax*1+0x1]
65018331:	mov    al,BYTE PTR [esi]
65018333:	cmp    al,bl
65018335:	jne    0x65018321
65018337:	push   0x4
65018339:	inc    edi
6501833a:	push   edi
6501833b:	call   0x65015a50
65018340:	mov    edi,eax
65018342:	cmp    edi,ebx
65018344:	pop    ecx
65018345:	pop    ecx
65018346:	mov    DWORD PTR ds:0x6502d914,edi
6501834c:	je     0x65018319
6501834e:	mov    esi,DWORD PTR ds:0x6502d594
65018354:	push   ebp
65018355:	jmp    0x65018397
65018357:	push   esi
65018358:	call   0x65013f00
6501835d:	mov    ebp,eax
6501835f:	inc    ebp
65018360:	cmp    BYTE PTR [esi],0x3d
65018363:	pop    ecx
65018364:	je     0x65018395
65018366:	push   0x1
65018368:	push   ebp
65018369:	call   0x65015a50
6501836e:	cmp    eax,ebx
65018370:	pop    ecx
65018371:	pop    ecx
65018372:	mov    DWORD PTR [edi],eax
65018374:	je     0x650183c0
65018376:	push   esi
65018377:	push   ebp
65018378:	push   eax
65018379:	call   0x65013ff4
6501837e:	add    esp,0xc
65018381:	test   eax,eax
65018383:	je     0x65018392
65018385:	push   ebx
65018386:	push   ebx
65018387:	push   ebx
65018388:	push   ebx
65018389:	push   ebx
6501838a:	call   0x650121b3
6501838f:	add    esp,0x14
65018392:	add    edi,0x4
65018395:	add    esi,ebp
65018397:	cmp    BYTE PTR [esi],bl
65018399:	jne    0x65018357
6501839b:	push   DWORD PTR ds:0x6502d594
650183a1:	call   0x650135d6
650183a6:	mov    DWORD PTR ds:0x6502d594,ebx
650183ac:	mov    DWORD PTR [edi],ebx
650183ae:	mov    DWORD PTR ds:0x65031568,0x1
650183b8:	xor    eax,eax
650183ba:	pop    ecx
650183bb:	pop    ebp
650183bc:	pop    edi
650183bd:	pop    esi
650183be:	pop    ebx
650183bf:	ret    
650183c0:	push   DWORD PTR ds:0x6502d914
650183c6:	call   0x650135d6
650183cb:	mov    DWORD PTR ds:0x6502d914,ebx
650183d1:	or     eax,0xffffffff
650183d4:	jmp    0x650183ba
650183d6:	push   ebp
650183d7:	mov    ebp,esp
650183d9:	push   ecx
650183da:	mov    ecx,DWORD PTR [ebp+0x10]
650183dd:	push   ebx
650183de:	xor    eax,eax
650183e0:	cmp    DWORD PTR [ebp+0x8],eax
650183e3:	push   esi
650183e4:	mov    DWORD PTR [edi],eax
650183e6:	mov    esi,edx
650183e8:	mov    edx,DWORD PTR [ebp+0xc]
650183eb:	mov    DWORD PTR [ecx],0x1
650183f1:	je     0x650183fc
650183f3:	mov    ebx,DWORD PTR [ebp+0x8]
650183f6:	add    DWORD PTR [ebp+0x8],0x4
650183fa:	mov    DWORD PTR [ebx],edx
650183fc:	mov    DWORD PTR [ebp-0x4],eax
650183ff:	cmp    BYTE PTR [esi],0x22
65018402:	jne    0x65018414
65018404:	xor    eax,eax
65018406:	cmp    DWORD PTR [ebp-0x4],eax
65018409:	mov    bl,0x22
6501840b:	sete   al
6501840e:	inc    esi
6501840f:	mov    DWORD PTR [ebp-0x4],eax
65018412:	jmp    0x65018450
65018414:	inc    DWORD PTR [edi]
65018416:	test   edx,edx
65018418:	je     0x65018422
6501841a:	mov    al,BYTE PTR [esi]
6501841c:	mov    BYTE PTR [edx],al
6501841e:	inc    edx
6501841f:	mov    DWORD PTR [ebp+0xc],edx
65018422:	mov    bl,BYTE PTR [esi]
65018424:	movzx  eax,bl
65018427:	push   eax
65018428:	inc    esi
65018429:	call   0x6501d5a6
6501842e:	test   eax,eax
65018430:	pop    ecx
65018431:	je     0x65018446
65018433:	inc    DWORD PTR [edi]
65018435:	cmp    DWORD PTR [ebp+0xc],0x0
65018439:	je     0x65018445
6501843b:	mov    ecx,DWORD PTR [ebp+0xc]
6501843e:	mov    al,BYTE PTR [esi]
65018440:	inc    DWORD PTR [ebp+0xc]
65018443:	mov    BYTE PTR [ecx],al
65018445:	inc    esi
65018446:	test   bl,bl
65018448:	mov    edx,DWORD PTR [ebp+0xc]
6501844b:	mov    ecx,DWORD PTR [ebp+0x10]
6501844e:	je     0x65018482
65018450:	cmp    DWORD PTR [ebp-0x4],0x0
65018454:	jne    0x650183ff
65018456:	cmp    bl,0x20
65018459:	je     0x65018460
6501845b:	cmp    bl,0x9
6501845e:	jne    0x650183ff
65018460:	test   edx,edx
65018462:	je     0x65018468
65018464:	mov    BYTE PTR [edx-0x1],0x0
65018468:	and    DWORD PTR [ebp-0x4],0x0
6501846c:	cmp    BYTE PTR [esi],0x0
6501846f:	je     0x6501855e
65018475:	mov    al,BYTE PTR [esi]
65018477:	cmp    al,0x20
65018479:	je     0x6501847f
6501847b:	cmp    al,0x9
6501847d:	jne    0x65018485
6501847f:	inc    esi
65018480:	jmp    0x65018475
65018482:	dec    esi
65018483:	jmp    0x65018468
65018485:	cmp    BYTE PTR [esi],0x0
65018488:	je     0x6501855e
6501848e:	cmp    DWORD PTR [ebp+0x8],0x0
65018492:	je     0x6501849d
65018494:	mov    eax,DWORD PTR [ebp+0x8]
65018497:	add    DWORD PTR [ebp+0x8],0x4
6501849b:	mov    DWORD PTR [eax],edx
6501849d:	inc    DWORD PTR [ecx]
6501849f:	xor    ebx,ebx
650184a1:	inc    ebx
650184a2:	xor    ecx,ecx
650184a4:	jmp    0x650184a8
650184a6:	inc    esi
650184a7:	inc    ecx
650184a8:	cmp    BYTE PTR [esi],0x5c
650184ab:	je     0x650184a6
650184ad:	cmp    BYTE PTR [esi],0x22
650184b0:	jne    0x650184d8
650184b2:	test   cl,0x1
650184b5:	jne    0x650184d6
650184b7:	cmp    DWORD PTR [ebp-0x4],0x0
650184bb:	je     0x650184c9
650184bd:	lea    eax,[esi+0x1]
650184c0:	cmp    BYTE PTR [eax],0x22
650184c3:	jne    0x650184c9
650184c5:	mov    esi,eax
650184c7:	jmp    0x650184d6
650184c9:	xor    eax,eax
650184cb:	xor    ebx,ebx
650184cd:	cmp    DWORD PTR [ebp-0x4],eax
650184d0:	sete   al
650184d3:	mov    DWORD PTR [ebp-0x4],eax
650184d6:	shr    ecx,1
650184d8:	test   ecx,ecx
650184da:	je     0x650184ee
650184dc:	dec    ecx
650184dd:	test   edx,edx
650184df:	je     0x650184e5
650184e1:	mov    BYTE PTR [edx],0x5c
650184e4:	inc    edx
650184e5:	inc    DWORD PTR [edi]
650184e7:	test   ecx,ecx
650184e9:	jne    0x650184dc
650184eb:	mov    DWORD PTR [ebp+0xc],edx
650184ee:	mov    al,BYTE PTR [esi]
650184f0:	test   al,al
650184f2:	je     0x65018549
650184f4:	cmp    DWORD PTR [ebp-0x4],0x0
650184f8:	jne    0x65018502
650184fa:	cmp    al,0x20
650184fc:	je     0x65018549
650184fe:	cmp    al,0x9
65018500:	je     0x65018549
65018502:	test   ebx,ebx
65018504:	je     0x65018543
65018506:	test   edx,edx
65018508:	movsx  eax,al
6501850b:	push   eax
6501850c:	je     0x65018531
6501850e:	call   0x6501d5a6
65018513:	test   eax,eax
65018515:	pop    ecx
65018516:	je     0x65018525
65018518:	mov    al,BYTE PTR [esi]
6501851a:	mov    ecx,DWORD PTR [ebp+0xc]
6501851d:	inc    DWORD PTR [ebp+0xc]
65018520:	mov    BYTE PTR [ecx],al
65018522:	inc    esi
65018523:	inc    DWORD PTR [edi]
65018525:	mov    ecx,DWORD PTR [ebp+0xc]
65018528:	mov    al,BYTE PTR [esi]
6501852a:	inc    DWORD PTR [ebp+0xc]
6501852d:	mov    BYTE PTR [ecx],al
6501852f:	jmp    0x6501853e
65018531:	call   0x6501d5a6
65018536:	test   eax,eax
65018538:	pop    ecx
65018539:	je     0x6501853e
6501853b:	inc    esi
6501853c:	inc    DWORD PTR [edi]
6501853e:	inc    DWORD PTR [edi]
65018540:	mov    edx,DWORD PTR [ebp+0xc]
65018543:	inc    esi
65018544:	jmp    0x6501849f
65018549:	test   edx,edx
6501854b:	je     0x65018554
6501854d:	mov    BYTE PTR [edx],0x0
65018550:	inc    edx
65018551:	mov    DWORD PTR [ebp+0xc],edx
65018554:	inc    DWORD PTR [edi]
65018556:	mov    ecx,DWORD PTR [ebp+0x10]
65018559:	jmp    0x6501846c
6501855e:	mov    eax,DWORD PTR [ebp+0x8]
65018561:	test   eax,eax
65018563:	pop    esi
65018564:	pop    ebx
65018565:	je     0x6501856a
65018567:	and    DWORD PTR [eax],0x0
6501856a:	inc    DWORD PTR [ecx]
6501856c:	leave  
6501856d:	ret    
6501856e:	push   ebp
6501856f:	mov    ebp,esp
65018571:	sub    esp,0xc
65018574:	push   ebx
65018575:	xor    ebx,ebx
65018577:	cmp    DWORD PTR ds:0x65031574,ebx
6501857d:	push   esi
6501857e:	push   edi
6501857f:	jne    0x65018586
65018581:	call   0x65016521
65018586:	push   0x104
6501858b:	mov    esi,0x6502d980
65018590:	push   esi
65018591:	push   ebx
65018592:	mov    BYTE PTR ds:0x6502da84,bl
65018598:	call   DWORD PTR ds:0x65024160
6501859e:	mov    eax,ds:0x65031580
650185a3:	cmp    eax,ebx
650185a5:	mov    DWORD PTR ds:0x6502d924,esi
650185ab:	je     0x650185b4
650185ad:	cmp    BYTE PTR [eax],bl
650185af:	mov    DWORD PTR [ebp-0x4],eax
650185b2:	jne    0x650185b7
650185b4:	mov    DWORD PTR [ebp-0x4],esi
650185b7:	mov    edx,DWORD PTR [ebp-0x4]
650185ba:	lea    eax,[ebp-0x8]
650185bd:	push   eax
650185be:	push   ebx
650185bf:	push   ebx
650185c0:	lea    edi,[ebp-0xc]
650185c3:	call   0x650183d6
650185c8:	mov    eax,DWORD PTR [ebp-0x8]
650185cb:	add    esp,0xc
650185ce:	cmp    eax,0x3fffffff
650185d3:	jae    0x6501861f
650185d5:	mov    ecx,DWORD PTR [ebp-0xc]
650185d8:	cmp    ecx,0xffffffff
650185db:	jae    0x6501861f
650185dd:	mov    edi,eax
650185df:	shl    edi,0x2
650185e2:	lea    eax,[edi+ecx*1]
650185e5:	cmp    eax,ecx
650185e7:	jb     0x6501861f
650185e9:	push   eax
650185ea:	call   0x65015a10
650185ef:	mov    esi,eax
650185f1:	cmp    esi,ebx
650185f3:	pop    ecx
650185f4:	je     0x6501861f
650185f6:	mov    edx,DWORD PTR [ebp-0x4]
650185f9:	lea    eax,[ebp-0x8]
650185fc:	push   eax
650185fd:	add    edi,esi
650185ff:	push   edi
65018600:	push   esi
65018601:	lea    edi,[ebp-0xc]
65018604:	call   0x650183d6
65018609:	mov    eax,DWORD PTR [ebp-0x8]
6501860c:	add    esp,0xc
6501860f:	dec    eax
65018610:	mov    ds:0x6502d908,eax
65018615:	mov    DWORD PTR ds:0x6502d90c,esi
6501861b:	xor    eax,eax
6501861d:	jmp    0x65018622
6501861f:	or     eax,0xffffffff
65018622:	pop    edi
65018623:	pop    esi
65018624:	pop    ebx
65018625:	leave  
65018626:	ret    
65018627:	push   ecx
65018628:	push   ecx
65018629:	mov    eax,ds:0x6502da88
6501862e:	push   ebx
6501862f:	push   ebp
65018630:	push   esi
65018631:	push   edi
65018632:	mov    edi,DWORD PTR ds:0x65024084
65018638:	xor    ebx,ebx
6501863a:	xor    esi,esi
6501863c:	cmp    eax,ebx
6501863e:	push   0x2
65018640:	pop    ebp
65018641:	jne    0x65018670
65018643:	call   edi
65018645:	mov    esi,eax
65018647:	cmp    esi,ebx
65018649:	je     0x65018657
6501864b:	mov    DWORD PTR ds:0x6502da88,0x1
65018655:	jmp    0x65018679
65018657:	call   DWORD PTR ds:0x65024044
6501865d:	cmp    eax,0x78
65018660:	jne    0x6501866b
65018662:	mov    eax,ebp
65018664:	mov    ds:0x6502da88,eax
65018669:	jmp    0x65018670
6501866b:	mov    eax,ds:0x6502da88
65018670:	cmp    eax,0x1
65018673:	jne    0x650186fd
65018679:	cmp    esi,ebx
6501867b:	jne    0x6501868c
6501867d:	call   edi
6501867f:	mov    esi,eax
65018681:	cmp    esi,ebx
65018683:	jne    0x6501868c
65018685:	xor    eax,eax
65018687:	jmp    0x65018755
6501868c:	cmp    WORD PTR [esi],bx
6501868f:	mov    eax,esi
65018691:	je     0x650186a1
65018693:	add    eax,ebp
65018695:	cmp    WORD PTR [eax],bx
65018698:	jne    0x65018693
6501869a:	add    eax,ebp
6501869c:	cmp    WORD PTR [eax],bx
6501869f:	jne    0x65018693
650186a1:	mov    edi,DWORD PTR ds:0x65024028
650186a7:	push   ebx
650186a8:	push   ebx
650186a9:	push   ebx
650186aa:	sub    eax,esi
650186ac:	push   ebx
650186ad:	sar    eax,1
650186af:	inc    eax
650186b0:	push   eax
650186b1:	push   esi
650186b2:	push   ebx
650186b3:	push   ebx
650186b4:	mov    DWORD PTR [esp+0x34],eax
650186b8:	call   edi
650186ba:	mov    ebp,eax
650186bc:	cmp    ebp,ebx
650186be:	je     0x650186f2
650186c0:	push   ebp
650186c1:	call   0x65015a10
650186c6:	cmp    eax,ebx
650186c8:	pop    ecx
650186c9:	mov    DWORD PTR [esp+0x10],eax
650186cd:	je     0x650186f2
650186cf:	push   ebx
650186d0:	push   ebx
650186d1:	push   ebp
650186d2:	push   eax
650186d3:	push   DWORD PTR [esp+0x24]
650186d7:	push   esi
650186d8:	push   ebx
650186d9:	push   ebx
650186da:	call   edi
650186dc:	test   eax,eax
650186de:	jne    0x650186ee
650186e0:	push   DWORD PTR [esp+0x10]
650186e4:	call   0x650135d6
650186e9:	pop    ecx
650186ea:	mov    DWORD PTR [esp+0x10],ebx
650186ee:	mov    ebx,DWORD PTR [esp+0x10]
650186f2:	push   esi
650186f3:	call   DWORD PTR ds:0x6502416c
650186f9:	mov    eax,ebx
650186fb:	jmp    0x65018755
650186fd:	cmp    eax,ebp
650186ff:	je     0x65018705
65018701:	cmp    eax,ebx
65018703:	jne    0x65018685
65018705:	call   DWORD PTR ds:0x65024168
6501870b:	mov    esi,eax
6501870d:	cmp    esi,ebx
6501870f:	je     0x65018685
65018715:	cmp    BYTE PTR [esi],bl
65018717:	je     0x65018723
65018719:	inc    eax
6501871a:	cmp    BYTE PTR [eax],bl
6501871c:	jne    0x65018719
6501871e:	inc    eax
6501871f:	cmp    BYTE PTR [eax],bl
65018721:	jne    0x65018719
65018723:	sub    eax,esi
65018725:	inc    eax
65018726:	mov    ebp,eax
65018728:	push   ebp
65018729:	call   0x65015a10
6501872e:	mov    edi,eax
65018730:	cmp    edi,ebx
65018732:	pop    ecx
65018733:	jne    0x65018741
65018735:	push   esi
65018736:	call   DWORD PTR ds:0x65024164
6501873c:	jmp    0x65018685
65018741:	push   ebp
65018742:	push   esi
65018743:	push   edi
65018744:	call   0x65014060
65018749:	add    esp,0xc
6501874c:	push   esi
6501874d:	call   DWORD PTR ds:0x65024164
65018753:	mov    eax,edi
65018755:	pop    edi
65018756:	pop    esi
65018757:	pop    ebp
65018758:	pop    ebx
65018759:	pop    ecx
6501875a:	pop    ecx
6501875b:	ret    
6501875c:	push   esi
6501875d:	push   edi
6501875e:	mov    eax,0x65029360
65018763:	mov    edi,0x65029360
65018768:	cmp    eax,edi
6501876a:	mov    esi,eax
6501876c:	jae    0x6501877d
6501876e:	mov    eax,DWORD PTR [esi]
65018770:	test   eax,eax
65018772:	je     0x65018776
65018774:	call   eax
65018776:	add    esi,0x4
65018779:	cmp    esi,edi
6501877b:	jb     0x6501876e
6501877d:	pop    edi
6501877e:	pop    esi
6501877f:	ret    
65018780:	push   esi
65018781:	push   edi
65018782:	mov    eax,0x65029368
65018787:	mov    edi,0x65029368
6501878c:	cmp    eax,edi
6501878e:	mov    esi,eax
65018790:	jae    0x650187a1
65018792:	mov    eax,DWORD PTR [esi]
65018794:	test   eax,eax
65018796:	je     0x6501879a
65018798:	call   eax
6501879a:	add    esi,0x4
6501879d:	cmp    esi,edi
6501879f:	jb     0x65018792
650187a1:	pop    edi
650187a2:	pop    esi
650187a3:	ret    
650187a4:	push   ebp
650187a5:	mov    ebp,esp
650187a7:	push   ecx
650187a8:	push   ecx
650187a9:	push   esi
650187aa:	lea    eax,[ebp-0x4]
650187ad:	xor    esi,esi
650187af:	push   eax
650187b0:	mov    DWORD PTR [ebp-0x4],esi
650187b3:	mov    DWORD PTR [ebp-0x8],esi
650187b6:	call   0x65015c2f
650187bb:	test   eax,eax
650187bd:	pop    ecx
650187be:	je     0x650187cd
650187c0:	push   esi
650187c1:	push   esi
650187c2:	push   esi
650187c3:	push   esi
650187c4:	push   esi
650187c5:	call   0x650121b3
650187ca:	add    esp,0x14
650187cd:	lea    eax,[ebp-0x8]
650187d0:	push   eax
650187d1:	call   0x65015c66
650187d6:	test   eax,eax
650187d8:	pop    ecx
650187d9:	je     0x650187e8
650187db:	push   esi
650187dc:	push   esi
650187dd:	push   esi
650187de:	push   esi
650187df:	push   esi
650187e0:	call   0x650121b3
650187e5:	add    esp,0x14
650187e8:	cmp    DWORD PTR [ebp-0x4],0x2
650187ec:	pop    esi
650187ed:	jne    0x650187fa
650187ef:	cmp    DWORD PTR [ebp-0x8],0x5
650187f3:	jb     0x650187fa
650187f5:	xor    eax,eax
650187f7:	inc    eax
650187f8:	leave  
650187f9:	ret    
650187fa:	push   0x3
650187fc:	pop    eax
650187fd:	leave  
650187fe:	ret    
650187ff:	xor    eax,eax
65018801:	cmp    DWORD PTR [esp+0x4],eax
65018805:	push   0x0
65018807:	sete   al
6501880a:	push   0x1000
6501880f:	push   eax
65018810:	call   DWORD PTR ds:0x65024170
65018816:	test   eax,eax
65018818:	mov    ds:0x6502da8c,eax
6501881d:	jne    0x65018822
6501881f:	xor    eax,eax
65018821:	ret    
65018822:	call   0x650187a4
65018827:	cmp    eax,0x3
6501882a:	mov    ds:0x6503143c,eax
6501882f:	jne    0x65018855
65018831:	push   0x3f8
65018836:	call   0x65019d29
6501883b:	test   eax,eax
6501883d:	pop    ecx
6501883e:	jne    0x65018855
65018840:	push   DWORD PTR ds:0x6502da8c
65018846:	call   DWORD PTR ds:0x650240f0
6501884c:	and    DWORD PTR ds:0x6502da8c,0x0
65018853:	jmp    0x6501881f
65018855:	xor    eax,eax
65018857:	inc    eax
65018858:	ret    
65018859:	push   ebp
6501885a:	xor    ebp,ebp
6501885c:	cmp    DWORD PTR ds:0x6503143c,0x3
65018863:	jne    0x650188b9
65018865:	push   ebx
65018866:	mov    ebx,DWORD PTR ds:0x650240f8
6501886c:	push   edi
6501886d:	xor    edi,edi
6501886f:	cmp    DWORD PTR ds:0x65031424,ebp
65018875:	jle    0x650188a8
65018877:	push   esi
65018878:	mov    esi,DWORD PTR ds:0x65031428
6501887e:	add    esi,0x10
65018881:	push   0x8000
65018886:	push   ebp
65018887:	push   DWORD PTR [esi-0x4]
6501888a:	call   DWORD PTR ds:0x65024174
65018890:	push   DWORD PTR [esi]
65018892:	push   ebp
65018893:	push   DWORD PTR ds:0x6502da8c
65018899:	call   ebx
6501889b:	add    esi,0x14
6501889e:	inc    edi
6501889f:	cmp    edi,DWORD PTR ds:0x65031424
650188a5:	jl     0x65018881
650188a7:	pop    esi
650188a8:	push   DWORD PTR ds:0x65031428
650188ae:	push   ebp
650188af:	push   DWORD PTR ds:0x6502da8c
650188b5:	call   ebx
650188b7:	pop    edi
650188b8:	pop    ebx
650188b9:	push   DWORD PTR ds:0x6502da8c
650188bf:	call   DWORD PTR ds:0x650240f0
650188c5:	mov    DWORD PTR ds:0x6502da8c,ebp
650188cb:	pop    ebp
650188cc:	ret    
650188cd:	push   ebp
650188ce:	mov    ebp,esp
650188d0:	push   ecx
650188d1:	push   ecx
650188d2:	push   esi
650188d3:	call   0x650146d4
650188d8:	mov    esi,eax
650188da:	test   esi,esi
650188dc:	je     0x65018a28
650188e2:	mov    edx,DWORD PTR [esi+0x5c]
650188e5:	mov    eax,ds:0x6502c94c
650188ea:	push   edi
650188eb:	mov    edi,DWORD PTR [ebp+0x8]
650188ee:	mov    ecx,edx
650188f0:	push   ebx
650188f1:	cmp    DWORD PTR [ecx],edi
650188f3:	je     0x65018903
650188f5:	mov    ebx,eax
650188f7:	imul   ebx,ebx,0xc
650188fa:	add    ecx,0xc
650188fd:	add    ebx,edx
650188ff:	cmp    ecx,ebx
65018901:	jb     0x650188f1
65018903:	imul   eax,eax,0xc
65018906:	add    eax,edx
65018908:	cmp    ecx,eax
6501890a:	jae    0x65018914
6501890c:	cmp    DWORD PTR [ecx],edi
6501890e:	jne    0x65018914
65018910:	mov    eax,ecx
65018912:	jmp    0x65018916
65018914:	xor    eax,eax
65018916:	test   eax,eax
65018918:	je     0x65018924
6501891a:	mov    ebx,DWORD PTR [eax+0x8]
6501891d:	test   ebx,ebx
6501891f:	mov    DWORD PTR [ebp-0x4],ebx
65018922:	jne    0x6501892b
65018924:	xor    eax,eax
65018926:	jmp    0x65018a26
6501892b:	cmp    ebx,0x5
6501892e:	jne    0x6501893c
65018930:	and    DWORD PTR [eax+0x8],0x0
65018934:	xor    eax,eax
65018936:	inc    eax
65018937:	jmp    0x65018a26
6501893c:	cmp    ebx,0x1
6501893f:	je     0x65018a23
65018945:	mov    ecx,DWORD PTR [esi+0x60]
65018948:	mov    DWORD PTR [ebp-0x8],ecx
6501894b:	mov    ecx,DWORD PTR [ebp+0xc]
6501894e:	mov    DWORD PTR [esi+0x60],ecx
65018951:	mov    ecx,DWORD PTR [eax+0x4]
65018954:	cmp    ecx,0x8
65018957:	jne    0x65018a15
6501895d:	mov    ecx,DWORD PTR ds:0x6502c940
65018963:	mov    edi,DWORD PTR ds:0x6502c944
65018969:	mov    edx,ecx
6501896b:	add    edi,ecx
6501896d:	cmp    edx,edi
6501896f:	jge    0x65018995
65018971:	imul   ecx,ecx,0xc
65018974:	mov    edi,DWORD PTR [esi+0x5c]
65018977:	and    DWORD PTR [ecx+edi*1+0x8],0x0
6501897c:	mov    edi,DWORD PTR ds:0x6502c940
65018982:	mov    ebx,DWORD PTR ds:0x6502c944
65018988:	inc    edx
65018989:	add    ebx,edi
6501898b:	add    ecx,0xc
6501898e:	cmp    edx,ebx
65018990:	jl     0x65018974
65018992:	mov    ebx,DWORD PTR [ebp-0x4]
65018995:	mov    eax,DWORD PTR [eax]
65018997:	cmp    eax,0xc000008e
6501899c:	mov    edi,DWORD PTR [esi+0x64]
6501899f:	jne    0x650189aa
650189a1:	mov    DWORD PTR [esi+0x64],0x83
650189a8:	jmp    0x65018a08
650189aa:	cmp    eax,0xc0000090
650189af:	jne    0x650189ba
650189b1:	mov    DWORD PTR [esi+0x64],0x81
650189b8:	jmp    0x65018a08
650189ba:	cmp    eax,0xc0000091
650189bf:	jne    0x650189ca
650189c1:	mov    DWORD PTR [esi+0x64],0x84
650189c8:	jmp    0x65018a08
650189ca:	cmp    eax,0xc0000093
650189cf:	jne    0x650189da
650189d1:	mov    DWORD PTR [esi+0x64],0x85
650189d8:	jmp    0x65018a08
650189da:	cmp    eax,0xc000008d
650189df:	jne    0x650189ea
650189e1:	mov    DWORD PTR [esi+0x64],0x82
650189e8:	jmp    0x65018a08
650189ea:	cmp    eax,0xc000008f
650189ef:	jne    0x650189fa
650189f1:	mov    DWORD PTR [esi+0x64],0x86
650189f8:	jmp    0x65018a08
650189fa:	cmp    eax,0xc0000092
650189ff:	jne    0x65018a08
65018a01:	mov    DWORD PTR [esi+0x64],0x8a
65018a08:	push   DWORD PTR [esi+0x64]
65018a0b:	push   0x8
65018a0d:	call   ebx
65018a0f:	pop    ecx
65018a10:	mov    DWORD PTR [esi+0x64],edi
65018a13:	jmp    0x65018a1c
65018a15:	and    DWORD PTR [eax+0x8],0x0
65018a19:	push   ecx
65018a1a:	call   ebx
65018a1c:	mov    eax,DWORD PTR [ebp-0x8]
65018a1f:	pop    ecx
65018a20:	mov    DWORD PTR [esi+0x60],eax
65018a23:	or     eax,0xffffffff
65018a26:	pop    ebx
65018a27:	pop    edi
65018a28:	pop    esi
65018a29:	leave  
65018a2a:	ret    
65018a2b:	mov    eax,0xe06d7363
65018a30:	cmp    DWORD PTR [esp+0x4],eax
65018a34:	jne    0x65018a43
65018a36:	push   DWORD PTR [esp+0x8]
65018a3a:	push   eax
65018a3b:	call   0x650188cd
65018a40:	pop    ecx
65018a41:	pop    ecx
65018a42:	ret    
65018a43:	xor    eax,eax
65018a45:	ret    
65018a46:	push   ebp
65018a47:	mov    ebp,esp
65018a49:	sub    esp,0x10
65018a4c:	mov    eax,ds:0x6502c09c
65018a51:	and    DWORD PTR [ebp-0x8],0x0
65018a55:	and    DWORD PTR [ebp-0x4],0x0
65018a59:	push   ebx
65018a5a:	push   edi
65018a5b:	mov    edi,0xbb40e64e
65018a60:	cmp    eax,edi
65018a62:	mov    ebx,0xffff0000
65018a67:	je     0x65018a76
65018a69:	test   ebx,eax
65018a6b:	je     0x65018a76
65018a6d:	not    eax
65018a6f:	mov    ds:0x6502c0a0,eax
65018a74:	jmp    0x65018ad6
65018a76:	push   esi
65018a77:	lea    eax,[ebp-0x8]
65018a7a:	push   eax
65018a7b:	call   DWORD PTR ds:0x65024180
65018a81:	mov    esi,DWORD PTR [ebp-0x4]
65018a84:	xor    esi,DWORD PTR [ebp-0x8]
65018a87:	call   DWORD PTR ds:0x6502417c
65018a8d:	xor    esi,eax
65018a8f:	call   DWORD PTR ds:0x6502411c
65018a95:	xor    esi,eax
65018a97:	call   DWORD PTR ds:0x65024058
65018a9d:	xor    esi,eax
65018a9f:	lea    eax,[ebp-0x10]
65018aa2:	push   eax
65018aa3:	call   DWORD PTR ds:0x65024178
65018aa9:	mov    eax,DWORD PTR [ebp-0xc]
65018aac:	xor    eax,DWORD PTR [ebp-0x10]
65018aaf:	xor    esi,eax
65018ab1:	cmp    esi,edi
65018ab3:	jne    0x65018abc
65018ab5:	mov    esi,0xbb40e64f
65018aba:	jmp    0x65018ac7
65018abc:	test   ebx,esi
65018abe:	jne    0x65018ac7
65018ac0:	mov    eax,esi
65018ac2:	shl    eax,0x10
65018ac5:	or     esi,eax
65018ac7:	mov    DWORD PTR ds:0x6502c09c,esi
65018acd:	not    esi
65018acf:	mov    DWORD PTR ds:0x6502c0a0,esi
65018ad5:	pop    esi
65018ad6:	pop    edi
65018ad7:	pop    ebx
65018ad8:	leave  
65018ad9:	ret    
65018ada:	int3   
65018adb:	int3   
65018adc:	int3   
65018add:	int3   
65018ade:	int3   
65018adf:	int3   
65018ae0:	push   esi
65018ae1:	mov    eax,DWORD PTR [esp+0x14]
65018ae5:	or     eax,eax
65018ae7:	jne    0x65018b11
65018ae9:	mov    ecx,DWORD PTR [esp+0x10]
65018aed:	mov    eax,DWORD PTR [esp+0xc]
65018af1:	xor    edx,edx
65018af3:	div    ecx
65018af5:	mov    ebx,eax
65018af7:	mov    eax,DWORD PTR [esp+0x8]
65018afb:	div    ecx
65018afd:	mov    esi,eax
65018aff:	mov    eax,ebx
65018b01:	mul    DWORD PTR [esp+0x10]
65018b05:	mov    ecx,eax
65018b07:	mov    eax,esi
65018b09:	mul    DWORD PTR [esp+0x10]
65018b0d:	add    edx,ecx
65018b0f:	jmp    0x65018b58
65018b11:	mov    ecx,eax
65018b13:	mov    ebx,DWORD PTR [esp+0x10]
65018b17:	mov    edx,DWORD PTR [esp+0xc]
65018b1b:	mov    eax,DWORD PTR [esp+0x8]
65018b1f:	shr    ecx,1
65018b21:	rcr    ebx,1
65018b23:	shr    edx,1
65018b25:	rcr    eax,1
65018b27:	or     ecx,ecx
65018b29:	jne    0x65018b1f
65018b2b:	div    ebx
65018b2d:	mov    esi,eax
65018b2f:	mul    DWORD PTR [esp+0x14]
65018b33:	mov    ecx,eax
65018b35:	mov    eax,DWORD PTR [esp+0x10]
65018b39:	mul    esi
65018b3b:	add    edx,ecx
65018b3d:	jb     0x65018b4d
65018b3f:	cmp    edx,DWORD PTR [esp+0xc]
65018b43:	ja     0x65018b4d
65018b45:	jb     0x65018b56
65018b47:	cmp    eax,DWORD PTR [esp+0x8]
65018b4b:	jbe    0x65018b56
65018b4d:	dec    esi
65018b4e:	sub    eax,DWORD PTR [esp+0x10]
65018b52:	sbb    edx,DWORD PTR [esp+0x14]
65018b56:	xor    ebx,ebx
65018b58:	sub    eax,DWORD PTR [esp+0x8]
65018b5c:	sbb    edx,DWORD PTR [esp+0xc]
65018b60:	neg    edx
65018b62:	neg    eax
65018b64:	sbb    edx,0x0
65018b67:	mov    ecx,edx
65018b69:	mov    edx,ebx
65018b6b:	mov    ebx,ecx
65018b6d:	mov    ecx,eax
65018b6f:	mov    eax,esi
65018b71:	pop    esi
65018b72:	ret    0x10
65018b75:	test   BYTE PTR [edi+0xc],0x40
65018b79:	push   ebx
65018b7a:	push   esi
65018b7b:	mov    esi,eax
65018b7d:	mov    ebx,ecx
65018b7f:	je     0x65018bb5
65018b81:	cmp    DWORD PTR [edi+0x8],0x0
65018b85:	jne    0x65018bb5
65018b87:	mov    eax,DWORD PTR [esp+0xc]
65018b8b:	add    DWORD PTR [esi],eax
65018b8d:	jmp    0x65018bbc
65018b8f:	mov    al,BYTE PTR [ebx]
65018b91:	dec    DWORD PTR [esp+0xc]
65018b95:	mov    ecx,edi
65018b97:	call   0x6501c898
65018b9c:	inc    ebx
65018b9d:	cmp    DWORD PTR [esi],0xffffffff
65018ba0:	jne    0x65018bb5
65018ba2:	call   0x65014400
65018ba7:	cmp    DWORD PTR [eax],0x2a
65018baa:	jne    0x65018bbc
65018bac:	mov    ecx,edi
65018bae:	mov    al,0x3f
65018bb0:	call   0x6501c898
65018bb5:	cmp    DWORD PTR [esp+0xc],0x0
65018bba:	jg     0x65018b8f
65018bbc:	pop    esi
65018bbd:	pop    ebx
65018bbe:	ret    
65018bbf:	push   ebp
65018bc0:	lea    ebp,[esp-0x1f8]
65018bc7:	sub    esp,0x278
65018bcd:	mov    eax,ds:0x6502c09c
65018bd2:	xor    eax,ebp
65018bd4:	mov    DWORD PTR [ebp+0x1f4],eax
65018bda:	mov    eax,DWORD PTR [ebp+0x200]
65018be0:	push   ebx
65018be1:	mov    ebx,DWORD PTR [ebp+0x204]
65018be7:	push   esi
65018be8:	xor    esi,esi
65018bea:	push   edi
65018beb:	mov    edi,DWORD PTR [ebp+0x20c]
65018bf1:	push   DWORD PTR [ebp+0x208]
65018bf7:	lea    ecx,[ebp-0x64]
65018bfa:	mov    DWORD PTR [ebp-0x30],eax
65018bfd:	mov    DWORD PTR [ebp-0x2c],edi
65018c00:	mov    DWORD PTR [ebp-0x4c],esi
65018c03:	mov    DWORD PTR [ebp-0x18],esi
65018c06:	mov    DWORD PTR [ebp-0x40],esi
65018c09:	mov    DWORD PTR [ebp-0x20],esi
65018c0c:	mov    DWORD PTR [ebp-0x3c],esi
65018c0f:	mov    DWORD PTR [ebp-0x50],esi
65018c12:	mov    DWORD PTR [ebp-0x44],esi
65018c15:	call   0x6501295f
65018c1a:	cmp    DWORD PTR [ebp-0x30],esi
65018c1d:	jne    0x65018c4c
65018c1f:	call   0x65014400
65018c24:	push   esi
65018c25:	push   esi
65018c26:	push   esi
65018c27:	push   esi
65018c28:	mov    DWORD PTR [eax],0x16
65018c2e:	push   esi
65018c2f:	call   0x650122af
65018c34:	add    esp,0x14
65018c37:	cmp    BYTE PTR [ebp-0x58],0x0
65018c3b:	je     0x65018c44
65018c3d:	mov    eax,DWORD PTR [ebp-0x5c]
65018c40:	and    DWORD PTR [eax+0x70],0xfffffffd
65018c44:	or     eax,0xffffffff
65018c47:	jmp    0x6501951b
65018c4c:	mov    eax,DWORD PTR [ebp-0x30]
65018c4f:	test   BYTE PTR [eax+0xc],0x40
65018c53:	jne    0x65018cfd
65018c59:	push   eax
65018c5a:	call   0x6501c54d
65018c5f:	cmp    eax,0xffffffff
65018c62:	pop    ecx
65018c63:	je     0x65018c9b
65018c65:	push   DWORD PTR [ebp-0x30]
65018c68:	call   0x6501c54d
65018c6d:	cmp    eax,0xfffffffe
65018c70:	pop    ecx
65018c71:	je     0x65018c9b
65018c73:	push   DWORD PTR [ebp-0x30]
65018c76:	call   0x6501c54d
65018c7b:	push   DWORD PTR [ebp-0x30]
65018c7e:	sar    eax,0x5
65018c81:	lea    esi,[eax*4+0x65031460]
65018c88:	call   0x6501c54d
65018c8d:	and    eax,0x1f
65018c90:	shl    eax,0x6
65018c93:	add    eax,DWORD PTR [esi]
65018c95:	pop    ecx
65018c96:	pop    ecx
65018c97:	xor    esi,esi
65018c99:	jmp    0x65018ca0
65018c9b:	mov    eax,0x6502c880
65018ca0:	test   BYTE PTR [eax+0x24],0x7f
65018ca4:	jne    0x65018c1f
65018caa:	push   DWORD PTR [ebp-0x30]
65018cad:	call   0x6501c54d
65018cb2:	cmp    eax,0xffffffff
65018cb5:	pop    ecx
65018cb6:	je     0x65018cee
65018cb8:	push   DWORD PTR [ebp-0x30]
65018cbb:	call   0x6501c54d
65018cc0:	cmp    eax,0xfffffffe
65018cc3:	pop    ecx
65018cc4:	je     0x65018cee
65018cc6:	push   DWORD PTR [ebp-0x30]
65018cc9:	call   0x6501c54d
65018cce:	push   DWORD PTR [ebp-0x30]
65018cd1:	sar    eax,0x5
65018cd4:	lea    esi,[eax*4+0x65031460]
65018cdb:	call   0x6501c54d
65018ce0:	and    eax,0x1f
65018ce3:	shl    eax,0x6
65018ce6:	add    eax,DWORD PTR [esi]
65018ce8:	pop    ecx
65018ce9:	pop    ecx
65018cea:	xor    esi,esi
65018cec:	jmp    0x65018cf3
65018cee:	mov    eax,0x6502c880
65018cf3:	test   BYTE PTR [eax+0x24],0x80
65018cf7:	jne    0x65018c1f
65018cfd:	cmp    ebx,esi
65018cff:	je     0x65018c1f
65018d05:	mov    dl,BYTE PTR [ebx]
65018d07:	xor    ecx,ecx
65018d09:	test   dl,dl
65018d0b:	mov    DWORD PTR [ebp-0x34],esi
65018d0e:	mov    DWORD PTR [ebp-0x28],esi
65018d11:	mov    DWORD PTR [ebp-0x54],esi
65018d14:	mov    BYTE PTR [ebp-0x19],dl
65018d17:	je     0x6501950b
65018d1d:	inc    ebx
65018d1e:	cmp    DWORD PTR [ebp-0x34],0x0
65018d22:	mov    DWORD PTR [ebp-0x48],ebx
65018d25:	jl     0x6501950b
65018d2b:	mov    al,dl
65018d2d:	sub    al,0x20
65018d2f:	cmp    al,0x58
65018d31:	ja     0x65018d44
65018d33:	movsx  eax,dl
65018d36:	movzx  eax,BYTE PTR [eax+0x65024dd0]
65018d3d:	and    eax,0xf
65018d40:	xor    esi,esi
65018d42:	jmp    0x65018d48
65018d44:	xor    esi,esi
65018d46:	xor    eax,eax
65018d48:	movsx  eax,BYTE PTR [ecx+eax*8+0x65024df0]
65018d50:	push   0x7
65018d52:	sar    eax,0x4
65018d55:	pop    ecx
65018d56:	cmp    eax,ecx
65018d58:	mov    DWORD PTR [ebp-0x74],eax
65018d5b:	ja     0x650194db
65018d61:	jmp    DWORD PTR [eax*4+0x65019533]
65018d68:	or     DWORD PTR [ebp-0x20],0xffffffff
65018d6c:	mov    DWORD PTR [ebp-0x78],esi
65018d6f:	mov    DWORD PTR [ebp-0x50],esi
65018d72:	mov    DWORD PTR [ebp-0x40],esi
65018d75:	mov    DWORD PTR [ebp-0x3c],esi
65018d78:	mov    DWORD PTR [ebp-0x18],esi
65018d7b:	mov    DWORD PTR [ebp-0x44],esi
65018d7e:	jmp    0x650194db
65018d83:	movsx  eax,dl
65018d86:	sub    eax,0x20
65018d89:	je     0x65018dc9
65018d8b:	sub    eax,0x3
65018d8e:	je     0x65018dbd
65018d90:	sub    eax,0x8
65018d93:	je     0x65018db4
65018d95:	dec    eax
65018d96:	dec    eax
65018d97:	je     0x65018dab
65018d99:	sub    eax,0x3
65018d9c:	jne    0x650194db
65018da2:	or     DWORD PTR [ebp-0x18],0x8
65018da6:	jmp    0x650194db
65018dab:	or     DWORD PTR [ebp-0x18],0x4
65018daf:	jmp    0x650194db
65018db4:	or     DWORD PTR [ebp-0x18],0x1
65018db8:	jmp    0x650194db
65018dbd:	or     DWORD PTR [ebp-0x18],0x80
65018dc4:	jmp    0x650194db
65018dc9:	or     DWORD PTR [ebp-0x18],0x2
65018dcd:	jmp    0x650194db
65018dd2:	cmp    dl,0x2a
65018dd5:	jne    0x65018df7
65018dd7:	add    edi,0x4
65018dda:	mov    DWORD PTR [ebp-0x2c],edi
65018ddd:	mov    edi,DWORD PTR [edi-0x4]
65018de0:	cmp    edi,esi
65018de2:	mov    DWORD PTR [ebp-0x40],edi
65018de5:	jge    0x650194db
65018deb:	or     DWORD PTR [ebp-0x18],0x4
65018def:	neg    DWORD PTR [ebp-0x40]
65018df2:	jmp    0x650194db
65018df7:	mov    eax,DWORD PTR [ebp-0x40]
65018dfa:	imul   eax,eax,0xa
65018dfd:	movsx  ecx,dl
65018e00:	lea    eax,[eax+ecx*1-0x30]
65018e04:	mov    DWORD PTR [ebp-0x40],eax
65018e07:	jmp    0x650194db
65018e0c:	mov    DWORD PTR [ebp-0x20],esi
65018e0f:	jmp    0x650194db
65018e14:	cmp    dl,0x2a
65018e17:	jne    0x65018e36
65018e19:	add    edi,0x4
65018e1c:	mov    DWORD PTR [ebp-0x2c],edi
65018e1f:	mov    edi,DWORD PTR [edi-0x4]
65018e22:	cmp    edi,esi
65018e24:	mov    DWORD PTR [ebp-0x20],edi
65018e27:	jge    0x650194db
65018e2d:	or     DWORD PTR [ebp-0x20],0xffffffff
65018e31:	jmp    0x650194db
65018e36:	mov    eax,DWORD PTR [ebp-0x20]
65018e39:	imul   eax,eax,0xa
65018e3c:	movsx  ecx,dl
65018e3f:	lea    eax,[eax+ecx*1-0x30]
65018e43:	mov    DWORD PTR [ebp-0x20],eax
65018e46:	jmp    0x650194db
65018e4b:	cmp    dl,0x49
65018e4e:	je     0x65018e96
65018e50:	cmp    dl,0x68
65018e53:	je     0x65018e8d
65018e55:	cmp    dl,0x6c
65018e58:	je     0x65018e6f
65018e5a:	cmp    dl,0x77
65018e5d:	jne    0x650194db
65018e63:	or     DWORD PTR [ebp-0x18],0x800
65018e6a:	jmp    0x650194db
65018e6f:	cmp    BYTE PTR [ebx],0x6c
65018e72:	jne    0x65018e84
65018e74:	inc    ebx
65018e75:	or     DWORD PTR [ebp-0x18],0x1000
65018e7c:	mov    DWORD PTR [ebp-0x48],ebx
65018e7f:	jmp    0x650194db
65018e84:	or     DWORD PTR [ebp-0x18],0x10
65018e88:	jmp    0x650194db
65018e8d:	or     DWORD PTR [ebp-0x18],0x20
65018e91:	jmp    0x650194db
65018e96:	mov    al,BYTE PTR [ebx]
65018e98:	cmp    al,0x36
65018e9a:	jne    0x65018eb3
65018e9c:	cmp    BYTE PTR [ebx+0x1],0x34
65018ea0:	jne    0x65018eb3
65018ea2:	inc    ebx
65018ea3:	inc    ebx
65018ea4:	or     DWORD PTR [ebp-0x18],0x8000
65018eab:	mov    DWORD PTR [ebp-0x48],ebx
65018eae:	jmp    0x650194db
65018eb3:	cmp    al,0x33
65018eb5:	jne    0x65018ece
65018eb7:	cmp    BYTE PTR [ebx+0x1],0x32
65018ebb:	jne    0x65018ece
65018ebd:	inc    ebx
65018ebe:	inc    ebx
65018ebf:	and    DWORD PTR [ebp-0x18],0xffff7fff
65018ec6:	mov    DWORD PTR [ebp-0x48],ebx
65018ec9:	jmp    0x650194db
65018ece:	cmp    al,0x64
65018ed0:	je     0x650194db
65018ed6:	cmp    al,0x69
65018ed8:	je     0x650194db
65018ede:	cmp    al,0x6f
65018ee0:	je     0x650194db
65018ee6:	cmp    al,0x75
65018ee8:	je     0x650194db
65018eee:	cmp    al,0x78
65018ef0:	je     0x650194db
65018ef6:	cmp    al,0x58
65018ef8:	je     0x650194db
65018efe:	mov    DWORD PTR [ebp-0x74],esi
65018f01:	lea    eax,[ebp-0x64]
65018f04:	push   eax
65018f05:	movzx  eax,dl
65018f08:	push   eax
65018f09:	mov    DWORD PTR [ebp-0x44],esi
65018f0c:	call   0x65019b3e
65018f11:	pop    ecx
65018f12:	test   eax,eax
65018f14:	mov    al,BYTE PTR [ebp-0x19]
65018f17:	pop    ecx
65018f18:	je     0x65018f33
65018f1a:	mov    ecx,DWORD PTR [ebp-0x30]
65018f1d:	lea    esi,[ebp-0x34]
65018f20:	call   0x6501c898
65018f25:	mov    al,BYTE PTR [ebx]
65018f27:	inc    ebx
65018f28:	test   al,al
65018f2a:	mov    DWORD PTR [ebp-0x48],ebx
65018f2d:	je     0x650194f4
65018f33:	mov    ecx,DWORD PTR [ebp-0x30]
65018f36:	lea    esi,[ebp-0x34]
65018f39:	call   0x6501c898
65018f3e:	jmp    0x650194db
65018f43:	movsx  eax,dl
65018f46:	cmp    eax,0x64
65018f49:	jg     0x650190c1
65018f4f:	je     0x65019140
65018f55:	cmp    eax,0x53
65018f58:	jg     0x65019009
65018f5e:	je     0x65018fba
65018f60:	sub    eax,0x41
65018f63:	je     0x65018f75
65018f65:	dec    eax
65018f66:	dec    eax
65018f67:	je     0x65018fa9
65018f69:	dec    eax
65018f6a:	dec    eax
65018f6b:	je     0x65018f75
65018f6d:	dec    eax
65018f6e:	dec    eax
65018f6f:	jne    0x650193c3
65018f75:	add    dl,0x20
65018f78:	mov    DWORD PTR [ebp-0x78],0x1
65018f7f:	mov    BYTE PTR [ebp-0x19],dl
65018f82:	or     DWORD PTR [ebp-0x18],0x40
65018f86:	cmp    DWORD PTR [ebp-0x20],esi
65018f89:	lea    ebx,[ebp-0x14]
65018f8c:	mov    eax,0x200
65018f91:	mov    DWORD PTR [ebp-0x24],ebx
65018f94:	mov    DWORD PTR [ebp-0x68],eax
65018f97:	jge    0x65019164
65018f9d:	mov    DWORD PTR [ebp-0x20],0x6
65018fa4:	jmp    0x650191b2
65018fa9:	test   WORD PTR [ebp-0x18],0x830
65018faf:	jne    0x65019026
65018fb1:	or     DWORD PTR [ebp-0x18],0x800
65018fb8:	jmp    0x65019026
65018fba:	test   WORD PTR [ebp-0x18],0x830
65018fc0:	jne    0x65018fc9
65018fc2:	or     DWORD PTR [ebp-0x18],0x800
65018fc9:	mov    ecx,DWORD PTR [ebp-0x20]
65018fcc:	cmp    ecx,0xffffffff
65018fcf:	jne    0x65018fd6
65018fd1:	mov    ecx,0x7fffffff
65018fd6:	add    edi,0x4
65018fd9:	test   WORD PTR [ebp-0x18],0x810
65018fdf:	mov    DWORD PTR [ebp-0x2c],edi
65018fe2:	mov    edi,DWORD PTR [edi-0x4]
65018fe5:	mov    DWORD PTR [ebp-0x24],edi
65018fe8:	je     0x650193a1
65018fee:	cmp    edi,esi
65018ff0:	jne    0x65018ffa
65018ff2:	mov    eax,ds:0x6502c954
65018ff7:	mov    DWORD PTR [ebp-0x24],eax
65018ffa:	mov    eax,DWORD PTR [ebp-0x24]
65018ffd:	mov    DWORD PTR [ebp-0x44],0x1
65019004:	jmp    0x65019396
65019009:	sub    eax,0x58
6501900c:	je     0x6501924b
65019012:	dec    eax
65019013:	dec    eax
65019014:	je     0x65019073
65019016:	sub    eax,ecx
65019018:	je     0x65018f82
6501901e:	dec    eax
6501901f:	dec    eax
65019020:	jne    0x650193c3
65019026:	add    edi,0x4
65019029:	test   WORD PTR [ebp-0x18],0x810
6501902f:	mov    DWORD PTR [ebp-0x2c],edi
65019032:	je     0x6501905b
65019034:	movzx  eax,WORD PTR [edi-0x4]
65019038:	push   eax
65019039:	push   0x200
6501903e:	lea    eax,[ebp-0x14]
65019041:	push   eax
65019042:	lea    eax,[ebp-0x28]
65019045:	push   eax
65019046:	call   0x6501d718
6501904b:	add    esp,0x10
6501904e:	test   eax,eax
65019050:	je     0x65019068
65019052:	mov    DWORD PTR [ebp-0x50],0x1
65019059:	jmp    0x65019068
6501905b:	mov    al,BYTE PTR [edi-0x4]
6501905e:	mov    BYTE PTR [ebp-0x14],al
65019061:	mov    DWORD PTR [ebp-0x28],0x1
65019068:	lea    eax,[ebp-0x14]
6501906b:	mov    DWORD PTR [ebp-0x24],eax
6501906e:	jmp    0x650193c3
65019073:	mov    eax,DWORD PTR [edi]
65019075:	add    edi,0x4
65019078:	cmp    eax,esi
6501907a:	mov    DWORD PTR [ebp-0x2c],edi
6501907d:	je     0x650190ad
6501907f:	mov    ecx,DWORD PTR [eax+0x4]
65019082:	cmp    ecx,esi
65019084:	je     0x650190ad
65019086:	test   WORD PTR [ebp-0x18],0x800
6501908c:	movsx  eax,WORD PTR [eax]
6501908f:	mov    DWORD PTR [ebp-0x24],ecx
65019092:	je     0x650190a5
65019094:	cdq    
65019095:	sub    eax,edx
65019097:	sar    eax,1
65019099:	mov    DWORD PTR [ebp-0x44],0x1
650190a0:	jmp    0x650193c0
650190a5:	mov    DWORD PTR [ebp-0x44],esi
650190a8:	jmp    0x650193c0
650190ad:	mov    eax,ds:0x6502c950
650190b2:	mov    DWORD PTR [ebp-0x24],eax
650190b5:	push   eax
650190b6:	call   0x65013f00
650190bb:	pop    ecx
650190bc:	jmp    0x650193c0
650190c1:	cmp    eax,0x70
650190c4:	jg     0x65019250
650190ca:	je     0x65019244
650190d0:	cmp    eax,0x65
650190d3:	jl     0x650193c3
650190d9:	cmp    eax,0x67
650190dc:	jle    0x65018f82
650190e2:	cmp    eax,0x69
650190e5:	je     0x65019140
650190e7:	cmp    eax,0x6e
650190ea:	je     0x6501910b
650190ec:	cmp    eax,0x6f
650190ef:	jne    0x650193c3
650190f5:	test   BYTE PTR [ebp-0x18],0x80
650190f9:	mov    DWORD PTR [ebp-0x28],0x8
65019100:	je     0x6501914b
65019102:	or     DWORD PTR [ebp-0x18],0x200
65019109:	jmp    0x6501914b
6501910b:	mov    esi,DWORD PTR [edi]
6501910d:	add    edi,0x4
65019110:	mov    DWORD PTR [ebp-0x2c],edi
65019113:	call   0x6501c758
65019118:	test   eax,eax
6501911a:	je     0x650194f4
65019120:	test   BYTE PTR [ebp-0x18],0x20
65019124:	je     0x6501912f
65019126:	mov    ax,WORD PTR [ebp-0x34]
6501912a:	mov    WORD PTR [esi],ax
6501912d:	jmp    0x65019134
6501912f:	mov    eax,DWORD PTR [ebp-0x34]
65019132:	mov    DWORD PTR [esi],eax
65019134:	mov    DWORD PTR [ebp-0x50],0x1
6501913b:	jmp    0x650194c8
65019140:	or     DWORD PTR [ebp-0x18],0x40
65019144:	mov    DWORD PTR [ebp-0x28],0xa
6501914b:	mov    ecx,DWORD PTR [ebp-0x18]
6501914e:	test   cx,cx
65019151:	jns    0x6501929a
65019157:	mov    eax,DWORD PTR [edi]
65019159:	mov    edx,DWORD PTR [edi+0x4]
6501915c:	add    edi,0x8
6501915f:	jmp    0x650192cf
65019164:	jne    0x65019174
65019166:	cmp    dl,0x67
65019169:	jne    0x650191b2
6501916b:	mov    DWORD PTR [ebp-0x20],0x1
65019172:	jmp    0x650191b2
65019174:	cmp    DWORD PTR [ebp-0x20],eax
65019177:	jle    0x6501917c
65019179:	mov    DWORD PTR [ebp-0x20],eax
6501917c:	cmp    DWORD PTR [ebp-0x20],0xa3
65019183:	jle    0x650191b2
65019185:	mov    esi,DWORD PTR [ebp-0x20]
65019188:	add    esi,0x15d
6501918e:	push   esi
6501918f:	call   0x65015a10
65019194:	test   eax,eax
65019196:	mov    dl,BYTE PTR [ebp-0x19]
65019199:	pop    ecx
6501919a:	mov    DWORD PTR [ebp-0x54],eax
6501919d:	je     0x650191a9
6501919f:	mov    DWORD PTR [ebp-0x24],eax
650191a2:	mov    DWORD PTR [ebp-0x68],esi
650191a5:	mov    ebx,eax
650191a7:	jmp    0x650191b0
650191a9:	mov    DWORD PTR [ebp-0x20],0xa3
650191b0:	xor    esi,esi
650191b2:	mov    eax,DWORD PTR [edi]
650191b4:	add    edi,0x8
650191b7:	mov    DWORD PTR [ebp-0x80],eax
650191ba:	mov    eax,DWORD PTR [edi-0x4]
650191bd:	mov    DWORD PTR [ebp-0x7c],eax
650191c0:	lea    eax,[ebp-0x64]
650191c3:	push   eax
650191c4:	push   DWORD PTR [ebp-0x78]
650191c7:	movsx  eax,dl
650191ca:	push   DWORD PTR [ebp-0x20]
650191cd:	mov    DWORD PTR [ebp-0x2c],edi
650191d0:	push   eax
650191d1:	push   DWORD PTR [ebp-0x68]
650191d4:	lea    eax,[ebp-0x80]
650191d7:	push   ebx
650191d8:	push   eax
650191d9:	push   DWORD PTR ds:0x6502cb5c
650191df:	call   0x6501452f
650191e4:	pop    ecx
650191e5:	call   eax
650191e7:	mov    edi,DWORD PTR [ebp-0x18]
650191ea:	add    esp,0x1c
650191ed:	and    edi,0x80
650191f3:	je     0x6501920f
650191f5:	cmp    DWORD PTR [ebp-0x20],esi
650191f8:	jne    0x6501920f
650191fa:	lea    eax,[ebp-0x64]
650191fd:	push   eax
650191fe:	push   ebx
650191ff:	push   DWORD PTR ds:0x6502cb68
65019205:	call   0x6501452f
6501920a:	pop    ecx
6501920b:	call   eax
6501920d:	pop    ecx
6501920e:	pop    ecx
6501920f:	cmp    BYTE PTR [ebp-0x19],0x67
65019213:	jne    0x6501922e
65019215:	cmp    edi,esi
65019217:	jne    0x6501922e
65019219:	lea    eax,[ebp-0x64]
6501921c:	push   eax
6501921d:	push   ebx
6501921e:	push   DWORD PTR ds:0x6502cb64
65019224:	call   0x6501452f
65019229:	pop    ecx
6501922a:	call   eax
6501922c:	pop    ecx
6501922d:	pop    ecx
6501922e:	cmp    BYTE PTR [ebx],0x2d
65019231:	jne    0x6501923e
65019233:	or     DWORD PTR [ebp-0x18],0x100
6501923a:	inc    ebx
6501923b:	mov    DWORD PTR [ebp-0x24],ebx
6501923e:	push   ebx
6501923f:	jmp    0x650190b6
65019244:	mov    DWORD PTR [ebp-0x20],0x8
6501924b:	mov    DWORD PTR [ebp-0x4c],ecx
6501924e:	jmp    0x65019271
65019250:	sub    eax,0x73
65019253:	je     0x65018fc9
65019259:	dec    eax
6501925a:	dec    eax
6501925b:	je     0x65019144
65019261:	sub    eax,0x3
65019264:	jne    0x650193c3
6501926a:	mov    DWORD PTR [ebp-0x4c],0x27
65019271:	test   BYTE PTR [ebp-0x18],0x80
65019275:	mov    DWORD PTR [ebp-0x28],0x10
6501927c:	je     0x6501914b
65019282:	mov    al,BYTE PTR [ebp-0x4c]
65019285:	add    al,0x51
65019287:	mov    BYTE PTR [ebp-0x38],0x30
6501928b:	mov    BYTE PTR [ebp-0x37],al
6501928e:	mov    DWORD PTR [ebp-0x3c],0x2
65019295:	jmp    0x6501914b
6501929a:	test   cx,0x1000
6501929f:	jne    0x65019157
650192a5:	add    edi,0x4
650192a8:	test   cl,0x20
650192ab:	je     0x650192c2
650192ad:	test   cl,0x40
650192b0:	mov    DWORD PTR [ebp-0x2c],edi
650192b3:	je     0x650192bb
650192b5:	movsx  eax,WORD PTR [edi-0x4]
650192b9:	jmp    0x650192bf
650192bb:	movzx  eax,WORD PTR [edi-0x4]
650192bf:	cdq    
650192c0:	jmp    0x650192d2
650192c2:	test   cl,0x40
650192c5:	mov    eax,DWORD PTR [edi-0x4]
650192c8:	je     0x650192cd
650192ca:	cdq    
650192cb:	jmp    0x650192cf
650192cd:	xor    edx,edx
650192cf:	mov    DWORD PTR [ebp-0x2c],edi
650192d2:	test   cl,0x40
650192d5:	je     0x650192ef
650192d7:	cmp    edx,esi
650192d9:	jg     0x650192ef
650192db:	jl     0x650192e1
650192dd:	cmp    eax,esi
650192df:	jae    0x650192ef
650192e1:	neg    eax
650192e3:	adc    edx,0x0
650192e6:	neg    edx
650192e8:	or     DWORD PTR [ebp-0x18],0x100
650192ef:	test   WORD PTR [ebp-0x18],0x9000
650192f5:	mov    ebx,edx
650192f7:	mov    edi,eax
650192f9:	jne    0x650192fd
650192fb:	xor    ebx,ebx
650192fd:	cmp    DWORD PTR [ebp-0x20],0x0
65019301:	jge    0x6501930c
65019303:	mov    DWORD PTR [ebp-0x20],0x1
6501930a:	jmp    0x6501931d
6501930c:	and    DWORD PTR [ebp-0x18],0xfffffff7
65019310:	mov    eax,0x200
65019315:	cmp    DWORD PTR [ebp-0x20],eax
65019318:	jle    0x6501931d
6501931a:	mov    DWORD PTR [ebp-0x20],eax
6501931d:	mov    eax,edi
6501931f:	or     eax,ebx
65019321:	jne    0x65019326
65019323:	and    DWORD PTR [ebp-0x3c],eax
65019326:	lea    esi,[ebp+0x1eb]
6501932c:	mov    eax,DWORD PTR [ebp-0x20]
6501932f:	dec    DWORD PTR [ebp-0x20]
65019332:	test   eax,eax
65019334:	jg     0x6501933c
65019336:	mov    eax,edi
65019338:	or     eax,ebx
6501933a:	je     0x65019360
6501933c:	mov    eax,DWORD PTR [ebp-0x28]
6501933f:	cdq    
65019340:	push   edx
65019341:	push   eax
65019342:	push   ebx
65019343:	push   edi
65019344:	call   0x65018ae0
65019349:	add    ecx,0x30
6501934c:	cmp    ecx,0x39
6501934f:	mov    DWORD PTR [ebp-0x68],ebx
65019352:	mov    edi,eax
65019354:	mov    ebx,edx
65019356:	jle    0x6501935b
65019358:	add    ecx,DWORD PTR [ebp-0x4c]
6501935b:	mov    BYTE PTR [esi],cl
6501935d:	dec    esi
6501935e:	jmp    0x6501932c
65019360:	lea    eax,[ebp+0x1eb]
65019366:	sub    eax,esi
65019368:	inc    esi
65019369:	test   WORD PTR [ebp-0x18],0x200
6501936f:	mov    DWORD PTR [ebp-0x28],eax
65019372:	mov    DWORD PTR [ebp-0x24],esi
65019375:	je     0x650193c3
65019377:	test   eax,eax
65019379:	je     0x65019382
6501937b:	mov    ecx,esi
6501937d:	cmp    BYTE PTR [ecx],0x30
65019380:	je     0x650193c3
65019382:	dec    DWORD PTR [ebp-0x24]
65019385:	mov    ecx,DWORD PTR [ebp-0x24]
65019388:	mov    BYTE PTR [ecx],0x30
6501938b:	inc    eax
6501938c:	jmp    0x650193c0
6501938e:	dec    ecx
6501938f:	cmp    WORD PTR [eax],si
65019392:	je     0x6501939a
65019394:	inc    eax
65019395:	inc    eax
65019396:	cmp    ecx,esi
65019398:	jne    0x6501938e
6501939a:	sub    eax,DWORD PTR [ebp-0x24]
6501939d:	sar    eax,1
6501939f:	jmp    0x650193c0
650193a1:	cmp    edi,esi
650193a3:	jne    0x650193ad
650193a5:	mov    eax,ds:0x6502c950
650193aa:	mov    DWORD PTR [ebp-0x24],eax
650193ad:	mov    eax,DWORD PTR [ebp-0x24]
650193b0:	jmp    0x650193b9
650193b2:	dec    ecx
650193b3:	cmp    BYTE PTR [eax],0x0
650193b6:	je     0x650193bd
650193b8:	inc    eax
650193b9:	cmp    ecx,esi
650193bb:	jne    0x650193b2
650193bd:	sub    eax,DWORD PTR [ebp-0x24]
650193c0:	mov    DWORD PTR [ebp-0x28],eax
650193c3:	cmp    DWORD PTR [ebp-0x50],0x0
650193c7:	jne    0x650194c8
650193cd:	mov    eax,DWORD PTR [ebp-0x18]
650193d0:	test   al,0x40
650193d2:	je     0x650193f9
650193d4:	test   ax,0x100
650193d8:	je     0x650193e0
650193da:	mov    BYTE PTR [ebp-0x38],0x2d
650193de:	jmp    0x650193f2
650193e0:	test   al,0x1
650193e2:	je     0x650193ea
650193e4:	mov    BYTE PTR [ebp-0x38],0x2b
650193e8:	jmp    0x650193f2
650193ea:	test   al,0x2
650193ec:	je     0x650193f9
650193ee:	mov    BYTE PTR [ebp-0x38],0x20
650193f2:	mov    DWORD PTR [ebp-0x3c],0x1
650193f9:	mov    ebx,DWORD PTR [ebp-0x40]
650193fc:	sub    ebx,DWORD PTR [ebp-0x28]
650193ff:	sub    ebx,DWORD PTR [ebp-0x3c]
65019402:	test   BYTE PTR [ebp-0x18],0xc
65019406:	jne    0x65019419
65019408:	push   DWORD PTR [ebp-0x30]
6501940b:	lea    eax,[ebp-0x34]
6501940e:	push   ebx
6501940f:	push   0x20
65019411:	call   0x6501c8cb
65019416:	add    esp,0xc
65019419:	push   DWORD PTR [ebp-0x3c]
6501941c:	mov    edi,DWORD PTR [ebp-0x30]
6501941f:	lea    eax,[ebp-0x34]
65019422:	lea    ecx,[ebp-0x38]
65019425:	call   0x65018b75
6501942a:	test   BYTE PTR [ebp-0x18],0x8
6501942e:	pop    ecx
6501942f:	je     0x65019446
65019431:	test   BYTE PTR [ebp-0x18],0x4
65019435:	jne    0x65019446
65019437:	push   edi
65019438:	push   ebx
65019439:	push   0x30
6501943b:	lea    eax,[ebp-0x34]
6501943e:	call   0x6501c8cb
65019443:	add    esp,0xc
65019446:	cmp    DWORD PTR [ebp-0x44],0x0
6501944a:	mov    eax,DWORD PTR [ebp-0x28]
6501944d:	je     0x650194a0
6501944f:	test   eax,eax
65019451:	jle    0x650194a0
65019453:	mov    esi,DWORD PTR [ebp-0x24]
65019456:	mov    DWORD PTR [ebp-0x68],eax
65019459:	movzx  eax,WORD PTR [esi]
6501945c:	dec    DWORD PTR [ebp-0x68]
6501945f:	push   eax
65019460:	push   0x6
65019462:	lea    eax,[ebp+0x1ec]
65019468:	push   eax
65019469:	lea    eax,[ebp-0x70]
6501946c:	inc    esi
6501946d:	push   eax
6501946e:	inc    esi
6501946f:	call   0x6501d718
65019474:	add    esp,0x10
65019477:	test   eax,eax
65019479:	jne    0x6501949a
6501947b:	cmp    DWORD PTR [ebp-0x70],eax
6501947e:	je     0x6501949a
65019480:	push   DWORD PTR [ebp-0x70]
65019483:	lea    eax,[ebp-0x34]
65019486:	lea    ecx,[ebp+0x1ec]
6501948c:	call   0x65018b75
65019491:	cmp    DWORD PTR [ebp-0x68],0x0
65019495:	pop    ecx
65019496:	jne    0x65019459
65019498:	jmp    0x650194ad
6501949a:	or     DWORD PTR [ebp-0x34],0xffffffff
6501949e:	jmp    0x650194ad
650194a0:	mov    ecx,DWORD PTR [ebp-0x24]
650194a3:	push   eax
650194a4:	lea    eax,[ebp-0x34]
650194a7:	call   0x65018b75
650194ac:	pop    ecx
650194ad:	cmp    DWORD PTR [ebp-0x34],0x0
650194b1:	jl     0x650194c8
650194b3:	test   BYTE PTR [ebp-0x18],0x4
650194b7:	je     0x650194c8
650194b9:	push   edi
650194ba:	push   ebx
650194bb:	push   0x20
650194bd:	lea    eax,[ebp-0x34]
650194c0:	call   0x6501c8cb
650194c5:	add    esp,0xc
650194c8:	cmp    DWORD PTR [ebp-0x54],0x0
650194cc:	je     0x650194db
650194ce:	push   DWORD PTR [ebp-0x54]
650194d1:	call   0x650135d6
650194d6:	and    DWORD PTR [ebp-0x54],0x0
650194da:	pop    ecx
650194db:	mov    ebx,DWORD PTR [ebp-0x48]
650194de:	mov    al,BYTE PTR [ebx]
650194e0:	test   al,al
650194e2:	mov    BYTE PTR [ebp-0x19],al
650194e5:	je     0x6501950b
650194e7:	mov    ecx,DWORD PTR [ebp-0x74]
650194ea:	mov    edi,DWORD PTR [ebp-0x2c]
650194ed:	mov    dl,al
650194ef:	jmp    0x65018d1d
650194f4:	call   0x65014400
650194f9:	mov    DWORD PTR [eax],0x16
650194ff:	xor    eax,eax
65019501:	push   eax
65019502:	push   eax
65019503:	push   eax
65019504:	push   eax
65019505:	push   eax
65019506:	jmp    0x65018c2f
6501950b:	cmp    BYTE PTR [ebp-0x58],0x0
6501950f:	je     0x65019518
65019511:	mov    eax,DWORD PTR [ebp-0x5c]
65019514:	and    DWORD PTR [eax+0x70],0xfffffffd
65019518:	mov    eax,DWORD PTR [ebp-0x34]
6501951b:	mov    ecx,DWORD PTR [ebp+0x1f4]
65019521:	pop    edi
65019522:	pop    esi
65019523:	xor    ecx,ebp
65019525:	pop    ebx
65019526:	call   0x650127bc
6501952b:	add    ebp,0x1f8
65019531:	leave  
65019532:	ret    
65019533:	add    DWORD PTR [edi-0x72979aff],ecx
65019539:	add    DWORD PTR [ebp-0x7d],esp
6501953c:	lea    eax,[ecx]
6501953e:	ror    BYTE PTR gs:[ebp-0x71f39aff],cl
65019545:	add    DWORD PTR [ebp+0x14],esp
65019548:	mov    es,WORD PTR [ecx]
6501954a:	gs dec ebx
6501954c:	mov    es,WORD PTR [ecx]
6501954e:	gs inc ebx
65019550:	pop    DWORD PTR [ecx]
65019552:	gs push ebp
65019554:	mov    ebp,esp
65019556:	sub    esp,0x20
65019559:	push   ebx
6501955a:	xor    ebx,ebx
6501955c:	cmp    DWORD PTR [ebp+0x14],ebx
6501955f:	jne    0x65019581
65019561:	call   0x65014400
65019566:	push   ebx
65019567:	push   ebx
65019568:	push   ebx
65019569:	push   ebx
6501956a:	push   ebx
6501956b:	mov    DWORD PTR [eax],0x16
65019571:	call   0x650122af
65019576:	add    esp,0x14
65019579:	or     eax,0xffffffff
6501957c:	jmp    0x6501961a
65019581:	push   esi
65019582:	mov    esi,DWORD PTR [ebp+0xc]
65019585:	push   edi
65019586:	mov    edi,DWORD PTR [ebp+0x10]
65019589:	cmp    edi,ebx
6501958b:	je     0x650195ae
6501958d:	cmp    esi,ebx
6501958f:	jne    0x650195ae
65019591:	call   0x65014400
65019596:	push   ebx
65019597:	push   ebx
65019598:	push   ebx
65019599:	push   ebx
6501959a:	push   ebx
6501959b:	mov    DWORD PTR [eax],0x16
650195a1:	call   0x650122af
650195a6:	add    esp,0x14
650195a9:	or     eax,0xffffffff
650195ac:	jmp    0x65019618
650195ae:	mov    eax,0x7fffffff
650195b3:	cmp    edi,eax
650195b5:	mov    DWORD PTR [ebp-0x1c],eax
650195b8:	ja     0x650195bd
650195ba:	mov    DWORD PTR [ebp-0x1c],edi
650195bd:	push   DWORD PTR [ebp+0x1c]
650195c0:	lea    eax,[ebp-0x20]
650195c3:	push   DWORD PTR [ebp+0x18]
650195c6:	mov    DWORD PTR [ebp-0x14],0x42
650195cd:	push   DWORD PTR [ebp+0x14]
650195d0:	mov    DWORD PTR [ebp-0x18],esi
650195d3:	push   eax
650195d4:	mov    DWORD PTR [ebp-0x20],esi
650195d7:	call   DWORD PTR [ebp+0x8]
650195da:	add    esp,0x10
650195dd:	cmp    esi,ebx
650195df:	mov    DWORD PTR [ebp+0x14],eax
650195e2:	je     0x65019618
650195e4:	cmp    eax,ebx
650195e6:	jl     0x6501960a
650195e8:	dec    DWORD PTR [ebp-0x1c]
650195eb:	js     0x650195f4
650195ed:	mov    eax,DWORD PTR [ebp-0x20]
650195f0:	mov    BYTE PTR [eax],bl
650195f2:	jmp    0x65019605
650195f4:	lea    eax,[ebp-0x20]
650195f7:	push   eax
650195f8:	push   ebx
650195f9:	call   0x65016845
650195fe:	cmp    eax,0xffffffff
65019601:	pop    ecx
65019602:	pop    ecx
65019603:	je     0x6501960a
65019605:	mov    eax,DWORD PTR [ebp+0x14]
65019608:	jmp    0x65019618
6501960a:	xor    eax,eax
6501960c:	cmp    DWORD PTR [ebp-0x1c],ebx
6501960f:	mov    BYTE PTR [esi+edi*1-0x1],bl
65019613:	setge  al
65019616:	dec    eax
65019617:	dec    eax
65019618:	pop    edi
65019619:	pop    esi
6501961a:	pop    ebx
6501961b:	leave  
6501961c:	ret    
6501961d:	push   ebp
6501961e:	mov    ebp,esp
65019620:	push   ebx
65019621:	xor    ebx,ebx
65019623:	cmp    DWORD PTR [ebp+0x10],ebx
65019626:	jne    0x65019645
65019628:	call   0x65014400
6501962d:	push   ebx
6501962e:	push   ebx
6501962f:	push   ebx
65019630:	push   ebx
65019631:	push   ebx
65019632:	mov    DWORD PTR [eax],0x16
65019638:	call   0x650122af
6501963d:	add    esp,0x14
65019640:	or     eax,0xffffffff
65019643:	jmp    0x650196a0
65019645:	push   esi
65019646:	mov    esi,DWORD PTR [ebp+0x8]
65019649:	cmp    esi,ebx
6501964b:	je     0x65019652
6501964d:	cmp    DWORD PTR [ebp+0xc],ebx
65019650:	ja     0x6501965f
65019652:	call   0x65014400
65019657:	mov    DWORD PTR [eax],0x16
6501965d:	jmp    0x6501968f
6501965f:	push   DWORD PTR [ebp+0x18]
65019662:	push   DWORD PTR [ebp+0x14]
65019665:	push   DWORD PTR [ebp+0x10]
65019668:	push   DWORD PTR [ebp+0xc]
6501966b:	push   esi
6501966c:	push   0x6501c8ef
65019671:	call   0x65019553
65019676:	add    esp,0x18
65019679:	cmp    eax,ebx
6501967b:	jge    0x6501967f
6501967d:	mov    BYTE PTR [esi],bl
6501967f:	cmp    eax,0xfffffffe
65019682:	jne    0x6501969f
65019684:	call   0x65014400
65019689:	mov    DWORD PTR [eax],0x22
6501968f:	push   ebx
65019690:	push   ebx
65019691:	push   ebx
65019692:	push   ebx
65019693:	push   ebx
65019694:	call   0x650122af
65019699:	add    esp,0x14
6501969c:	or     eax,0xffffffff
6501969f:	pop    esi
650196a0:	pop    ebx
650196a1:	pop    ebp
650196a2:	ret    
650196a3:	push   ebp
650196a4:	mov    ebp,esp
650196a6:	sub    esp,0x18
650196a9:	push   ebx
650196aa:	push   DWORD PTR [ebp+0x10]
650196ad:	lea    ecx,[ebp-0x18]
650196b0:	call   0x6501295f
650196b5:	mov    ebx,DWORD PTR [ebp+0x8]
650196b8:	lea    eax,[ebx+0x1]
650196bb:	cmp    eax,0x100
650196c0:	ja     0x650196d1
650196c2:	mov    eax,DWORD PTR [ebp-0x18]
650196c5:	mov    eax,DWORD PTR [eax+0xc8]
650196cb:	movzx  eax,WORD PTR [eax+ebx*2]
650196cf:	jmp    0x65019746
650196d1:	mov    DWORD PTR [ebp+0x8],ebx
650196d4:	sar    DWORD PTR [ebp+0x8],0x8
650196d8:	lea    eax,[ebp-0x18]
650196db:	push   eax
650196dc:	mov    eax,DWORD PTR [ebp+0x8]
650196df:	and    eax,0xff
650196e4:	push   eax
650196e5:	call   0x65019b3e
650196ea:	test   eax,eax
650196ec:	pop    ecx
650196ed:	pop    ecx
650196ee:	je     0x65019702
650196f0:	mov    al,BYTE PTR [ebp+0x8]
650196f3:	push   0x2
650196f5:	mov    BYTE PTR [ebp-0x8],al
650196f8:	mov    BYTE PTR [ebp-0x7],bl
650196fb:	mov    BYTE PTR [ebp-0x6],0x0
650196ff:	pop    ecx
65019700:	jmp    0x6501970c
65019702:	xor    ecx,ecx
65019704:	mov    BYTE PTR [ebp-0x8],bl
65019707:	mov    BYTE PTR [ebp-0x7],0x0
6501970b:	inc    ecx
6501970c:	mov    eax,DWORD PTR [ebp-0x18]
6501970f:	push   0x1
65019711:	push   DWORD PTR [eax+0x14]
65019714:	push   DWORD PTR [eax+0x4]
65019717:	lea    eax,[ebp-0x4]
6501971a:	push   eax
6501971b:	push   ecx
6501971c:	lea    eax,[ebp-0x8]
6501971f:	push   eax
65019720:	lea    eax,[ebp-0x18]
65019723:	push   0x1
65019725:	push   eax
65019726:	call   0x6501b625
6501972b:	add    esp,0x20
6501972e:	test   eax,eax
65019730:	jne    0x65019742
65019732:	cmp    BYTE PTR [ebp-0xc],al
65019735:	je     0x6501973e
65019737:	mov    eax,DWORD PTR [ebp-0x10]
6501973a:	and    DWORD PTR [eax+0x70],0xfffffffd
6501973e:	xor    eax,eax
65019740:	jmp    0x65019756
65019742:	movzx  eax,WORD PTR [ebp-0x4]
65019746:	and    eax,DWORD PTR [ebp+0xc]
65019749:	cmp    BYTE PTR [ebp-0xc],0x0
6501974d:	je     0x65019756
6501974f:	mov    ecx,DWORD PTR [ebp-0x10]
65019752:	and    DWORD PTR [ecx+0x70],0xfffffffd
65019756:	pop    ebx
65019757:	leave  
65019758:	ret    
65019759:	push   ebp
6501975a:	mov    ebp,esp
6501975c:	sub    esp,0x14
6501975f:	mov    eax,ds:0x6502c09c
65019764:	xor    eax,ebp
65019766:	mov    DWORD PTR [ebp-0x4],eax
65019769:	push   ebx
6501976a:	push   esi
6501976b:	xor    ebx,ebx
6501976d:	cmp    DWORD PTR ds:0x6502da90,ebx
65019773:	push   edi
65019774:	mov    esi,ecx
65019776:	jne    0x650197b0
65019778:	push   ebx
65019779:	push   ebx
6501977a:	xor    edi,edi
6501977c:	inc    edi
6501977d:	push   edi
6501977e:	push   0x650266c8
65019783:	push   0x100
65019788:	push   ebx
65019789:	call   DWORD PTR ds:0x6502414c
6501978f:	test   eax,eax
65019791:	je     0x6501979b
65019793:	mov    DWORD PTR ds:0x6502da90,edi
65019799:	jmp    0x650197b0
6501979b:	call   DWORD PTR ds:0x65024044
650197a1:	cmp    eax,0x78
650197a4:	jne    0x650197b0
650197a6:	mov    DWORD PTR ds:0x6502da90,0x2
650197b0:	cmp    DWORD PTR [ebp+0x14],ebx
650197b3:	jle    0x650197d7
650197b5:	mov    ecx,DWORD PTR [ebp+0x14]
650197b8:	mov    eax,DWORD PTR [ebp+0x10]
650197bb:	dec    ecx
650197bc:	cmp    BYTE PTR [eax],bl
650197be:	je     0x650197c8
650197c0:	inc    eax
650197c1:	cmp    ecx,ebx
650197c3:	jne    0x650197bb
650197c5:	or     ecx,0xffffffff
650197c8:	mov    eax,DWORD PTR [ebp+0x14]
650197cb:	sub    eax,ecx
650197cd:	dec    eax
650197ce:	cmp    eax,DWORD PTR [ebp+0x14]
650197d1:	jge    0x650197d4
650197d3:	inc    eax
650197d4:	mov    DWORD PTR [ebp+0x14],eax
650197d7:	mov    eax,ds:0x6502da90
650197dc:	cmp    eax,0x2
650197df:	je     0x65019990
650197e5:	cmp    eax,ebx
650197e7:	je     0x65019990
650197ed:	cmp    eax,0x1
650197f0:	jne    0x650199c1
650197f6:	cmp    DWORD PTR [ebp+0x20],ebx
650197f9:	mov    DWORD PTR [ebp-0x8],ebx
650197fc:	jne    0x65019806
650197fe:	mov    eax,DWORD PTR [esi]
65019800:	mov    eax,DWORD PTR [eax+0x4]
65019803:	mov    DWORD PTR [ebp+0x20],eax
65019806:	mov    esi,DWORD PTR ds:0x65024024
6501980c:	xor    eax,eax
6501980e:	cmp    DWORD PTR [ebp+0x24],ebx
65019811:	push   ebx
65019812:	push   ebx
65019813:	push   DWORD PTR [ebp+0x14]
65019816:	setne  al
65019819:	push   DWORD PTR [ebp+0x10]
6501981c:	lea    eax,[eax*8+0x1]
65019823:	push   eax
65019824:	push   DWORD PTR [ebp+0x20]
65019827:	call   esi
65019829:	mov    edi,eax
6501982b:	cmp    edi,ebx
6501982d:	je     0x650199c1
65019833:	jle    0x65019878
65019835:	push   0xffffffe0
65019837:	xor    edx,edx
65019839:	pop    eax
6501983a:	div    edi
6501983c:	cmp    eax,0x2
6501983f:	jb     0x65019878
65019841:	lea    eax,[edi+edi*1+0x8]
65019845:	cmp    eax,0x400
6501984a:	ja     0x6501985f
6501984c:	call   0x65012ec0
65019851:	mov    eax,esp
65019853:	cmp    eax,ebx
65019855:	je     0x65019873
65019857:	mov    DWORD PTR [eax],0xcccc
6501985d:	jmp    0x65019870
6501985f:	push   eax
65019860:	call   0x650136b3
65019865:	cmp    eax,ebx
65019867:	pop    ecx
65019868:	je     0x65019873
6501986a:	mov    DWORD PTR [eax],0xdddd
65019870:	add    eax,0x8
65019873:	mov    DWORD PTR [ebp-0xc],eax
65019876:	jmp    0x6501987b
65019878:	mov    DWORD PTR [ebp-0xc],ebx
6501987b:	cmp    DWORD PTR [ebp-0xc],ebx
6501987e:	je     0x650199c1
65019884:	push   edi
65019885:	push   DWORD PTR [ebp-0xc]
65019888:	push   DWORD PTR [ebp+0x14]
6501988b:	push   DWORD PTR [ebp+0x10]
6501988e:	push   0x1
65019890:	push   DWORD PTR [ebp+0x20]
65019893:	call   esi
65019895:	test   eax,eax
65019897:	je     0x6501997f
6501989d:	mov    esi,DWORD PTR ds:0x6502414c
650198a3:	push   ebx
650198a4:	push   ebx
650198a5:	push   edi
650198a6:	push   DWORD PTR [ebp-0xc]
650198a9:	push   DWORD PTR [ebp+0xc]
650198ac:	push   DWORD PTR [ebp+0x8]
650198af:	call   esi
650198b1:	mov    ecx,eax
650198b3:	cmp    ecx,ebx
650198b5:	mov    DWORD PTR [ebp-0x8],ecx
650198b8:	je     0x6501997f
650198be:	test   WORD PTR [ebp+0xc],0x400
650198c4:	je     0x650198ef
650198c6:	cmp    DWORD PTR [ebp+0x1c],ebx
650198c9:	je     0x6501997f
650198cf:	cmp    ecx,DWORD PTR [ebp+0x1c]
650198d2:	jg     0x6501997f
650198d8:	push   DWORD PTR [ebp+0x1c]
650198db:	push   DWORD PTR [ebp+0x18]
650198de:	push   edi
650198df:	push   DWORD PTR [ebp-0xc]
650198e2:	push   DWORD PTR [ebp+0xc]
650198e5:	push   DWORD PTR [ebp+0x8]
650198e8:	call   esi
650198ea:	jmp    0x6501997f
650198ef:	cmp    ecx,ebx
650198f1:	jle    0x65019938
650198f3:	push   0xffffffe0
650198f5:	xor    edx,edx
650198f7:	pop    eax
650198f8:	div    ecx
650198fa:	cmp    eax,0x2
650198fd:	jb     0x65019938
650198ff:	lea    eax,[ecx+ecx*1+0x8]
65019903:	cmp    eax,0x400
65019908:	ja     0x65019920
6501990a:	call   0x65012ec0
6501990f:	mov    esi,esp
65019911:	cmp    esi,ebx
65019913:	je     0x6501997f
65019915:	mov    DWORD PTR [esi],0xcccc
6501991b:	add    esi,0x8
6501991e:	jmp    0x6501993a
65019920:	push   eax
65019921:	call   0x650136b3
65019926:	cmp    eax,ebx
65019928:	pop    ecx
65019929:	je     0x65019934
6501992b:	mov    DWORD PTR [eax],0xdddd
65019931:	add    eax,0x8
65019934:	mov    esi,eax
65019936:	jmp    0x6501993a
65019938:	xor    esi,esi
6501993a:	cmp    esi,ebx
6501993c:	je     0x6501997f
6501993e:	push   DWORD PTR [ebp-0x8]
65019941:	push   esi
65019942:	push   edi
65019943:	push   DWORD PTR [ebp-0xc]
65019946:	push   DWORD PTR [ebp+0xc]
65019949:	push   DWORD PTR [ebp+0x8]
6501994c:	call   DWORD PTR ds:0x6502414c
65019952:	test   eax,eax
65019954:	je     0x65019978
65019956:	cmp    DWORD PTR [ebp+0x1c],ebx
65019959:	push   ebx
6501995a:	push   ebx
6501995b:	jne    0x65019961
6501995d:	push   ebx
6501995e:	push   ebx
6501995f:	jmp    0x65019967
65019961:	push   DWORD PTR [ebp+0x1c]
65019964:	push   DWORD PTR [ebp+0x18]
65019967:	push   DWORD PTR [ebp-0x8]
6501996a:	push   esi
6501996b:	push   ebx
6501996c:	push   DWORD PTR [ebp+0x20]
6501996f:	call   DWORD PTR ds:0x65024028
65019975:	mov    DWORD PTR [ebp-0x8],eax
65019978:	push   esi
65019979:	call   0x65012c52
6501997e:	pop    ecx
6501997f:	push   DWORD PTR [ebp-0xc]
65019982:	call   0x65012c52
65019987:	mov    eax,DWORD PTR [ebp-0x8]
6501998a:	pop    ecx
6501998b:	jmp    0x65019ae9
65019990:	cmp    DWORD PTR [ebp+0x8],ebx
65019993:	mov    DWORD PTR [ebp-0xc],ebx
65019996:	mov    DWORD PTR [ebp-0x10],ebx
65019999:	jne    0x650199a3
6501999b:	mov    eax,DWORD PTR [esi]
6501999d:	mov    eax,DWORD PTR [eax+0x14]
650199a0:	mov    DWORD PTR [ebp+0x8],eax
650199a3:	cmp    DWORD PTR [ebp+0x20],ebx
650199a6:	jne    0x650199b0
650199a8:	mov    eax,DWORD PTR [esi]
650199aa:	mov    eax,DWORD PTR [eax+0x4]
650199ad:	mov    DWORD PTR [ebp+0x20],eax
650199b0:	push   DWORD PTR [ebp+0x8]
650199b3:	call   0x6501d29f
650199b8:	cmp    eax,0xffffffff
650199bb:	pop    ecx
650199bc:	mov    DWORD PTR [ebp-0x14],eax
650199bf:	jne    0x650199c8
650199c1:	xor    eax,eax
650199c3:	jmp    0x65019ae9
650199c8:	cmp    eax,DWORD PTR [ebp+0x20]
650199cb:	je     0x65019aac
650199d1:	push   ebx
650199d2:	push   ebx
650199d3:	lea    ecx,[ebp+0x14]
650199d6:	push   ecx
650199d7:	push   DWORD PTR [ebp+0x10]
650199da:	push   eax
650199db:	push   DWORD PTR [ebp+0x20]
650199de:	call   0x6501d2e6
650199e3:	add    esp,0x18
650199e6:	cmp    eax,ebx
650199e8:	mov    DWORD PTR [ebp-0xc],eax
650199eb:	je     0x650199c1
650199ed:	mov    esi,DWORD PTR ds:0x65024148
650199f3:	push   ebx
650199f4:	push   ebx
650199f5:	push   DWORD PTR [ebp+0x14]
650199f8:	push   eax
650199f9:	push   DWORD PTR [ebp+0xc]
650199fc:	push   DWORD PTR [ebp+0x8]
650199ff:	call   esi
65019a01:	cmp    eax,ebx
65019a03:	mov    DWORD PTR [ebp-0x8],eax
65019a06:	jne    0x65019a0f
65019a08:	xor    esi,esi
65019a0a:	jmp    0x65019ac6
65019a0f:	jle    0x65019a4e
65019a11:	cmp    eax,0xffffffe0
65019a14:	ja     0x65019a4e
65019a16:	add    eax,0x8
65019a19:	cmp    eax,0x400
65019a1e:	ja     0x65019a36
65019a20:	call   0x65012ec0
65019a25:	mov    edi,esp
65019a27:	cmp    edi,ebx
65019a29:	je     0x65019a08
65019a2b:	mov    DWORD PTR [edi],0xcccc
65019a31:	add    edi,0x8
65019a34:	jmp    0x65019a50
65019a36:	push   eax
65019a37:	call   0x650136b3
65019a3c:	cmp    eax,ebx
65019a3e:	pop    ecx
65019a3f:	je     0x65019a4a
65019a41:	mov    DWORD PTR [eax],0xdddd
65019a47:	add    eax,0x8
65019a4a:	mov    edi,eax
65019a4c:	jmp    0x65019a50
65019a4e:	xor    edi,edi
65019a50:	cmp    edi,ebx
65019a52:	je     0x65019a08
65019a54:	push   DWORD PTR [ebp-0x8]
65019a57:	push   ebx
65019a58:	push   edi
65019a59:	call   0x65012e40
65019a5e:	add    esp,0xc
65019a61:	push   DWORD PTR [ebp-0x8]
65019a64:	push   edi
65019a65:	push   DWORD PTR [ebp+0x14]
65019a68:	push   DWORD PTR [ebp-0xc]
65019a6b:	push   DWORD PTR [ebp+0xc]
65019a6e:	push   DWORD PTR [ebp+0x8]
65019a71:	call   esi
65019a73:	cmp    eax,ebx
65019a75:	mov    DWORD PTR [ebp-0x8],eax
65019a78:	jne    0x65019a7e
65019a7a:	xor    esi,esi
65019a7c:	jmp    0x65019aa3
65019a7e:	push   DWORD PTR [ebp+0x1c]
65019a81:	lea    eax,[ebp-0x8]
65019a84:	push   DWORD PTR [ebp+0x18]
65019a87:	push   eax
65019a88:	push   edi
65019a89:	push   DWORD PTR [ebp+0x20]
65019a8c:	push   DWORD PTR [ebp-0x14]
65019a8f:	call   0x6501d2e6
65019a94:	mov    esi,eax
65019a96:	mov    DWORD PTR [ebp-0x10],esi
65019a99:	add    esp,0x18
65019a9c:	neg    esi
65019a9e:	sbb    esi,esi
65019aa0:	and    esi,DWORD PTR [ebp-0x8]
65019aa3:	push   edi
65019aa4:	call   0x65012c52
65019aa9:	pop    ecx
65019aaa:	jmp    0x65019ac6
65019aac:	push   DWORD PTR [ebp+0x1c]
65019aaf:	push   DWORD PTR [ebp+0x18]
65019ab2:	push   DWORD PTR [ebp+0x14]
65019ab5:	push   DWORD PTR [ebp+0x10]
65019ab8:	push   DWORD PTR [ebp+0xc]
65019abb:	push   DWORD PTR [ebp+0x8]
65019abe:	call   DWORD PTR ds:0x65024148
65019ac4:	mov    esi,eax
65019ac6:	cmp    DWORD PTR [ebp-0xc],ebx
65019ac9:	je     0x65019ad4
65019acb:	push   DWORD PTR [ebp-0xc]
65019ace:	call   0x650135d6
65019ad3:	pop    ecx
65019ad4:	mov    eax,DWORD PTR [ebp-0x10]
65019ad7:	cmp    eax,ebx
65019ad9:	je     0x65019ae7
65019adb:	cmp    DWORD PTR [ebp+0x18],eax
65019ade:	je     0x65019ae7
65019ae0:	push   eax
65019ae1:	call   0x650135d6
65019ae6:	pop    ecx
65019ae7:	mov    eax,esi
65019ae9:	lea    esp,[ebp-0x20]
65019aec:	pop    edi
65019aed:	pop    esi
65019aee:	pop    ebx
65019aef:	mov    ecx,DWORD PTR [ebp-0x4]
65019af2:	xor    ecx,ebp
65019af4:	call   0x650127bc
65019af9:	leave  
65019afa:	ret    
65019afb:	push   ebp
65019afc:	mov    ebp,esp
65019afe:	sub    esp,0x10
65019b01:	push   DWORD PTR [ebp+0x8]
65019b04:	lea    ecx,[ebp-0x10]
65019b07:	call   0x6501295f
65019b0c:	push   DWORD PTR [ebp+0x28]
65019b0f:	lea    ecx,[ebp-0x10]
65019b12:	push   DWORD PTR [ebp+0x24]
65019b15:	push   DWORD PTR [ebp+0x20]
65019b18:	push   DWORD PTR [ebp+0x1c]
65019b1b:	push   DWORD PTR [ebp+0x18]
65019b1e:	push   DWORD PTR [ebp+0x14]
65019b21:	push   DWORD PTR [ebp+0x10]
65019b24:	push   DWORD PTR [ebp+0xc]
65019b27:	call   0x65019759
65019b2c:	add    esp,0x20
65019b2f:	cmp    BYTE PTR [ebp-0x4],0x0
65019b33:	je     0x65019b3c
65019b35:	mov    ecx,DWORD PTR [ebp-0x8]
65019b38:	and    DWORD PTR [ecx+0x70],0xfffffffd
65019b3c:	leave  
65019b3d:	ret    
65019b3e:	push   ebp
65019b3f:	mov    ebp,esp
65019b41:	sub    esp,0x10
65019b44:	push   DWORD PTR [ebp+0xc]
65019b47:	lea    ecx,[ebp-0x10]
65019b4a:	call   0x6501295f
65019b4f:	movzx  eax,BYTE PTR [ebp+0x8]
65019b53:	mov    ecx,DWORD PTR [ebp-0x10]
65019b56:	mov    ecx,DWORD PTR [ecx+0xc8]
65019b5c:	movzx  eax,WORD PTR [ecx+eax*2]
65019b60:	and    eax,0x8000
65019b65:	cmp    BYTE PTR [ebp-0x4],0x0
65019b69:	je     0x65019b72
65019b6b:	mov    ecx,DWORD PTR [ebp-0x8]
65019b6e:	and    DWORD PTR [ecx+0x70],0xfffffffd
65019b72:	leave  
65019b73:	ret    
65019b74:	push   0x0
65019b76:	push   DWORD PTR [esp+0x8]
65019b7a:	call   0x65019b3e
65019b7f:	pop    ecx
65019b80:	pop    ecx
65019b81:	ret    
65019b82:	push   esi
65019b83:	push   edi
65019b84:	xor    esi,esi
65019b86:	mov    edi,0x6502da98
65019b8b:	cmp    DWORD PTR [esi*8+0x6502c95c],0x1
65019b93:	jne    0x65019bb3
65019b95:	lea    eax,[esi*8+0x6502c958]
65019b9c:	mov    DWORD PTR [eax],edi
65019b9e:	push   0xfa0
65019ba3:	push   DWORD PTR [eax]
65019ba5:	add    edi,0x18
65019ba8:	call   0x6501b3a8
65019bad:	test   eax,eax
65019baf:	pop    ecx
65019bb0:	pop    ecx
65019bb1:	je     0x65019bbf
65019bb3:	inc    esi
65019bb4:	cmp    esi,0x24
65019bb7:	jl     0x65019b8b
65019bb9:	xor    eax,eax
65019bbb:	inc    eax
65019bbc:	pop    edi
65019bbd:	pop    esi
65019bbe:	ret    
65019bbf:	and    DWORD PTR [esi*8+0x6502c958],0x0
65019bc7:	xor    eax,eax
65019bc9:	jmp    0x65019bbc
65019bcb:	push   ebx
65019bcc:	mov    ebx,DWORD PTR ds:0x650240a4
65019bd2:	push   esi
65019bd3:	mov    esi,0x6502c958
65019bd8:	push   edi
65019bd9:	mov    edi,DWORD PTR [esi]
65019bdb:	test   edi,edi
65019bdd:	je     0x65019bf2
65019bdf:	cmp    DWORD PTR [esi+0x4],0x1
65019be3:	je     0x65019bf2
65019be5:	push   edi
65019be6:	call   ebx
65019be8:	push   edi
65019be9:	call   0x650135d6
65019bee:	and    DWORD PTR [esi],0x0
65019bf1:	pop    ecx
65019bf2:	add    esi,0x8
65019bf5:	cmp    esi,0x6502ca78
65019bfb:	jl     0x65019bd9
65019bfd:	mov    esi,0x6502c958
65019c02:	pop    edi
65019c03:	mov    eax,DWORD PTR [esi]
65019c05:	test   eax,eax
65019c07:	je     0x65019c12
65019c09:	cmp    DWORD PTR [esi+0x4],0x1
65019c0d:	jne    0x65019c12
65019c0f:	push   eax
65019c10:	call   ebx
65019c12:	add    esi,0x8
65019c15:	cmp    esi,0x6502ca78
65019c1b:	jl     0x65019c03
65019c1d:	pop    esi
65019c1e:	pop    ebx
65019c1f:	ret    
65019c20:	push   ebp
65019c21:	mov    ebp,esp
65019c23:	mov    eax,DWORD PTR [ebp+0x8]
65019c26:	push   DWORD PTR [eax*8+0x6502c958]
65019c2d:	call   DWORD PTR ds:0x650240a0
65019c33:	pop    ebp
65019c34:	ret    
65019c35:	push   0xc
65019c37:	push   0x65029ba0
65019c3c:	call   0x65013d00
65019c41:	xor    edi,edi
65019c43:	inc    edi
65019c44:	mov    DWORD PTR [ebp-0x1c],edi
65019c47:	xor    ebx,ebx
65019c49:	cmp    DWORD PTR ds:0x6502da8c,ebx
65019c4f:	jne    0x65019c69
65019c51:	call   0x6501a9c8
65019c56:	push   0x1e
65019c58:	call   0x6501a828
65019c5d:	push   0xff
65019c62:	call   0x65015bd0
65019c67:	pop    ecx
65019c68:	pop    ecx
65019c69:	mov    esi,DWORD PTR [ebp+0x8]
65019c6c:	lea    esi,[esi*8+0x6502c958]
65019c73:	cmp    DWORD PTR [esi],ebx
65019c75:	je     0x65019c7b
65019c77:	mov    eax,edi
65019c79:	jmp    0x65019ce9
65019c7b:	push   0x18
65019c7d:	call   0x65015a10
65019c82:	pop    ecx
65019c83:	mov    edi,eax
65019c85:	cmp    edi,ebx
65019c87:	jne    0x65019c98
65019c89:	call   0x65014400
65019c8e:	mov    DWORD PTR [eax],0xc
65019c94:	xor    eax,eax
65019c96:	jmp    0x65019ce9
65019c98:	push   0xa
65019c9a:	call   0x65019cf8
65019c9f:	pop    ecx
65019ca0:	mov    DWORD PTR [ebp-0x4],ebx
65019ca3:	cmp    DWORD PTR [esi],ebx
65019ca5:	jne    0x65019cd3
65019ca7:	push   0xfa0
65019cac:	push   edi
65019cad:	call   0x6501b3a8
65019cb2:	pop    ecx
65019cb3:	pop    ecx
65019cb4:	test   eax,eax
65019cb6:	jne    0x65019ccf
65019cb8:	push   edi
65019cb9:	call   0x650135d6
65019cbe:	pop    ecx
65019cbf:	call   0x65014400
65019cc4:	mov    DWORD PTR [eax],0xc
65019cca:	mov    DWORD PTR [ebp-0x1c],ebx
65019ccd:	jmp    0x65019cda
65019ccf:	mov    DWORD PTR [esi],edi
65019cd1:	jmp    0x65019cda
65019cd3:	push   edi
65019cd4:	call   0x650135d6
65019cd9:	pop    ecx
65019cda:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65019ce1:	call   0x65019cef
65019ce6:	mov    eax,DWORD PTR [ebp-0x1c]
65019ce9:	call   0x65013d45
65019cee:	ret    
65019cef:	push   0xa
65019cf1:	call   0x65019c20
65019cf6:	pop    ecx
65019cf7:	ret    
65019cf8:	push   ebp
65019cf9:	mov    ebp,esp
65019cfb:	mov    eax,DWORD PTR [ebp+0x8]
65019cfe:	push   esi
65019cff:	lea    esi,[eax*8+0x6502c958]
65019d06:	cmp    DWORD PTR [esi],0x0
65019d09:	jne    0x65019d1e
65019d0b:	push   eax
65019d0c:	call   0x65019c35
65019d11:	test   eax,eax
65019d13:	pop    ecx
65019d14:	jne    0x65019d1e
65019d16:	push   0x11
65019d18:	call   0x65015b86
65019d1d:	pop    ecx
65019d1e:	push   DWORD PTR [esi]
65019d20:	call   DWORD PTR ds:0x6502409c
65019d26:	pop    esi
65019d27:	pop    ebp
65019d28:	ret    
65019d29:	push   0x140
65019d2e:	push   0x0
65019d30:	push   DWORD PTR ds:0x6502da8c
65019d36:	call   DWORD PTR ds:0x650240f4
65019d3c:	test   eax,eax
65019d3e:	mov    ds:0x65031428,eax
65019d43:	jne    0x65019d46
65019d45:	ret    
65019d46:	mov    ecx,DWORD PTR [esp+0x4]
65019d4a:	and    DWORD PTR ds:0x6502dbe8,0x0
65019d51:	and    DWORD PTR ds:0x65031424,0x0
65019d58:	mov    ds:0x65031430,eax
65019d5d:	xor    eax,eax
65019d5f:	mov    DWORD PTR ds:0x6503142c,ecx
65019d65:	mov    DWORD PTR ds:0x65031434,0x10
65019d6f:	inc    eax
65019d70:	ret    
65019d71:	mov    ecx,DWORD PTR ds:0x65031424
65019d77:	mov    eax,ds:0x65031428
65019d7c:	imul   ecx,ecx,0x14
65019d7f:	add    ecx,eax
65019d81:	jmp    0x65019d95
65019d83:	mov    edx,DWORD PTR [esp+0x4]
65019d87:	sub    edx,DWORD PTR [eax+0xc]
65019d8a:	cmp    edx,0x100000
65019d90:	jb     0x65019d9b
65019d92:	add    eax,0x14
65019d95:	cmp    eax,ecx
65019d97:	jb     0x65019d83
65019d99:	xor    eax,eax
65019d9b:	ret    
65019d9c:	push   ebp
65019d9d:	mov    ebp,esp
65019d9f:	sub    esp,0x10
65019da2:	mov    ecx,DWORD PTR [ebp+0x8]
65019da5:	mov    eax,DWORD PTR [ecx+0x10]
65019da8:	push   esi
65019da9:	mov    esi,DWORD PTR [ebp+0xc]
65019dac:	push   edi
65019dad:	mov    edi,esi
65019daf:	sub    edi,DWORD PTR [ecx+0xc]
65019db2:	add    esi,0xfffffffc
65019db5:	shr    edi,0xf
65019db8:	mov    ecx,edi
65019dba:	imul   ecx,ecx,0x204
65019dc0:	lea    ecx,[ecx+eax*1+0x144]
65019dc7:	mov    DWORD PTR [ebp-0x10],ecx
65019dca:	mov    ecx,DWORD PTR [esi]
65019dcc:	dec    ecx
65019dcd:	test   cl,0x1
65019dd0:	mov    DWORD PTR [ebp-0x4],ecx
65019dd3:	jne    0x6501a0ac
65019dd9:	push   ebx
65019dda:	lea    ebx,[ecx+esi*1]
65019ddd:	mov    edx,DWORD PTR [ebx]
65019ddf:	mov    DWORD PTR [ebp-0xc],edx
65019de2:	mov    edx,DWORD PTR [esi-0x4]
65019de5:	mov    DWORD PTR [ebp-0x8],edx
65019de8:	mov    edx,DWORD PTR [ebp-0xc]
65019deb:	test   dl,0x1
65019dee:	mov    DWORD PTR [ebp+0xc],ebx
65019df1:	jne    0x65019e67
65019df3:	sar    edx,0x4
65019df6:	dec    edx
65019df7:	cmp    edx,0x3f
65019dfa:	jbe    0x65019dff
65019dfc:	push   0x3f
65019dfe:	pop    edx
65019dff:	mov    ecx,DWORD PTR [ebx+0x4]
65019e02:	cmp    ecx,DWORD PTR [ebx+0x8]
65019e05:	jne    0x65019e49
65019e07:	cmp    edx,0x20
65019e0a:	mov    ebx,0x80000000
65019e0f:	jae    0x65019e2a
65019e11:	mov    ecx,edx
65019e13:	shr    ebx,cl
65019e15:	lea    ecx,[edx+eax*1+0x4]
65019e19:	not    ebx
65019e1b:	and    DWORD PTR [eax+edi*4+0x44],ebx
65019e1f:	dec    BYTE PTR [ecx]
65019e21:	jne    0x65019e46
65019e23:	mov    ecx,DWORD PTR [ebp+0x8]
65019e26:	and    DWORD PTR [ecx],ebx
65019e28:	jmp    0x65019e46
65019e2a:	lea    ecx,[edx-0x20]
65019e2d:	shr    ebx,cl
65019e2f:	lea    ecx,[edx+eax*1+0x4]
65019e33:	not    ebx
65019e35:	and    DWORD PTR [eax+edi*4+0xc4],ebx
65019e3c:	dec    BYTE PTR [ecx]
65019e3e:	jne    0x65019e46
65019e40:	mov    ecx,DWORD PTR [ebp+0x8]
65019e43:	and    DWORD PTR [ecx+0x4],ebx
65019e46:	mov    ebx,DWORD PTR [ebp+0xc]
65019e49:	mov    edx,DWORD PTR [ebx+0x8]
65019e4c:	mov    ebx,DWORD PTR [ebx+0x4]
65019e4f:	mov    ecx,DWORD PTR [ebp-0x4]
65019e52:	add    ecx,DWORD PTR [ebp-0xc]
65019e55:	mov    DWORD PTR [edx+0x4],ebx
65019e58:	mov    edx,DWORD PTR [ebp+0xc]
65019e5b:	mov    ebx,DWORD PTR [edx+0x4]
65019e5e:	mov    edx,DWORD PTR [edx+0x8]
65019e61:	mov    DWORD PTR [ebx+0x8],edx
65019e64:	mov    DWORD PTR [ebp-0x4],ecx
65019e67:	mov    edx,ecx
65019e69:	sar    edx,0x4
65019e6c:	dec    edx
65019e6d:	cmp    edx,0x3f
65019e70:	jbe    0x65019e75
65019e72:	push   0x3f
65019e74:	pop    edx
65019e75:	mov    ebx,DWORD PTR [ebp-0x8]
65019e78:	and    ebx,0x1
65019e7b:	mov    DWORD PTR [ebp-0xc],ebx
65019e7e:	jne    0x65019f13
65019e84:	sub    esi,DWORD PTR [ebp-0x8]
65019e87:	mov    ebx,DWORD PTR [ebp-0x8]
65019e8a:	sar    ebx,0x4
65019e8d:	push   0x3f
65019e8f:	mov    DWORD PTR [ebp+0xc],esi
65019e92:	dec    ebx
65019e93:	pop    esi
65019e94:	cmp    ebx,esi
65019e96:	jbe    0x65019e9a
65019e98:	mov    ebx,esi
65019e9a:	add    ecx,DWORD PTR [ebp-0x8]
65019e9d:	mov    edx,ecx
65019e9f:	sar    edx,0x4
65019ea2:	dec    edx
65019ea3:	cmp    edx,esi
65019ea5:	mov    DWORD PTR [ebp-0x4],ecx
65019ea8:	jbe    0x65019eac
65019eaa:	mov    edx,esi
65019eac:	cmp    ebx,edx
65019eae:	je     0x65019f0e
65019eb0:	mov    ecx,DWORD PTR [ebp+0xc]
65019eb3:	mov    esi,DWORD PTR [ecx+0x4]
65019eb6:	cmp    esi,DWORD PTR [ecx+0x8]
65019eb9:	jne    0x65019ef6
65019ebb:	cmp    ebx,0x20
65019ebe:	mov    esi,0x80000000
65019ec3:	jae    0x65019edc
65019ec5:	mov    ecx,ebx
65019ec7:	shr    esi,cl
65019ec9:	not    esi
65019ecb:	and    DWORD PTR [eax+edi*4+0x44],esi
65019ecf:	dec    BYTE PTR [ebx+eax*1+0x4]
65019ed3:	jne    0x65019ef6
65019ed5:	mov    ecx,DWORD PTR [ebp+0x8]
65019ed8:	and    DWORD PTR [ecx],esi
65019eda:	jmp    0x65019ef6
65019edc:	lea    ecx,[ebx-0x20]
65019edf:	shr    esi,cl
65019ee1:	not    esi
65019ee3:	and    DWORD PTR [eax+edi*4+0xc4],esi
65019eea:	dec    BYTE PTR [ebx+eax*1+0x4]
65019eee:	jne    0x65019ef6
65019ef0:	mov    ecx,DWORD PTR [ebp+0x8]
65019ef3:	and    DWORD PTR [ecx+0x4],esi
65019ef6:	mov    ecx,DWORD PTR [ebp+0xc]
65019ef9:	mov    esi,DWORD PTR [ecx+0x8]
65019efc:	mov    ecx,DWORD PTR [ecx+0x4]
65019eff:	mov    DWORD PTR [esi+0x4],ecx
65019f02:	mov    ecx,DWORD PTR [ebp+0xc]
65019f05:	mov    esi,DWORD PTR [ecx+0x4]
65019f08:	mov    ecx,DWORD PTR [ecx+0x8]
65019f0b:	mov    DWORD PTR [esi+0x8],ecx
65019f0e:	mov    esi,DWORD PTR [ebp+0xc]
65019f11:	jmp    0x65019f16
65019f13:	mov    ebx,DWORD PTR [ebp+0x8]
65019f16:	cmp    DWORD PTR [ebp-0xc],0x0
65019f1a:	jne    0x65019f24
65019f1c:	cmp    ebx,edx
65019f1e:	je     0x65019fa4
65019f24:	mov    ecx,DWORD PTR [ebp-0x10]
65019f27:	lea    ecx,[ecx+edx*8]
65019f2a:	mov    ebx,DWORD PTR [ecx+0x4]
65019f2d:	mov    DWORD PTR [esi+0x8],ecx
65019f30:	mov    DWORD PTR [esi+0x4],ebx
65019f33:	mov    DWORD PTR [ecx+0x4],esi
65019f36:	mov    ecx,DWORD PTR [esi+0x4]
65019f39:	mov    DWORD PTR [ecx+0x8],esi
65019f3c:	mov    ecx,DWORD PTR [esi+0x4]
65019f3f:	cmp    ecx,DWORD PTR [esi+0x8]
65019f42:	jne    0x65019fa4
65019f44:	mov    cl,BYTE PTR [edx+eax*1+0x4]
65019f48:	mov    BYTE PTR [ebp+0xf],cl
65019f4b:	inc    cl
65019f4d:	cmp    edx,0x20
65019f50:	mov    BYTE PTR [edx+eax*1+0x4],cl
65019f54:	jae    0x65019f7b
65019f56:	cmp    BYTE PTR [ebp+0xf],0x0
65019f5a:	jne    0x65019f6a
65019f5c:	mov    ecx,edx
65019f5e:	mov    ebx,0x80000000
65019f63:	shr    ebx,cl
65019f65:	mov    ecx,DWORD PTR [ebp+0x8]
65019f68:	or     DWORD PTR [ecx],ebx
65019f6a:	mov    ebx,0x80000000
65019f6f:	mov    ecx,edx
65019f71:	shr    ebx,cl
65019f73:	lea    eax,[eax+edi*4+0x44]
65019f77:	or     DWORD PTR [eax],ebx
65019f79:	jmp    0x65019fa4
65019f7b:	cmp    BYTE PTR [ebp+0xf],0x0
65019f7f:	jne    0x65019f91
65019f81:	lea    ecx,[edx-0x20]
65019f84:	mov    ebx,0x80000000
65019f89:	shr    ebx,cl
65019f8b:	mov    ecx,DWORD PTR [ebp+0x8]
65019f8e:	or     DWORD PTR [ecx+0x4],ebx
65019f91:	lea    ecx,[edx-0x20]
65019f94:	mov    edx,0x80000000
65019f99:	shr    edx,cl
65019f9b:	lea    eax,[eax+edi*4+0xc4]
65019fa2:	or     DWORD PTR [eax],edx
65019fa4:	mov    eax,DWORD PTR [ebp-0x4]
65019fa7:	mov    DWORD PTR [esi],eax
65019fa9:	mov    DWORD PTR [eax+esi*1-0x4],eax
65019fad:	mov    eax,DWORD PTR [ebp-0x10]
65019fb0:	dec    DWORD PTR [eax]
65019fb2:	jne    0x6501a0ab
65019fb8:	mov    eax,ds:0x6502dbe8
65019fbd:	test   eax,eax
65019fbf:	je     0x6501a09d
65019fc5:	mov    ecx,DWORD PTR ds:0x65031438
65019fcb:	mov    esi,DWORD PTR ds:0x65024174
65019fd1:	push   0x4000
65019fd6:	shl    ecx,0xf
65019fd9:	add    ecx,DWORD PTR [eax+0xc]
65019fdc:	mov    ebx,0x8000
65019fe1:	push   ebx
65019fe2:	push   ecx
65019fe3:	call   esi
65019fe5:	mov    ecx,DWORD PTR ds:0x65031438
65019feb:	mov    eax,ds:0x6502dbe8
65019ff0:	mov    edx,0x80000000
65019ff5:	shr    edx,cl
65019ff7:	or     DWORD PTR [eax+0x8],edx
65019ffa:	mov    eax,ds:0x6502dbe8
65019fff:	mov    eax,DWORD PTR [eax+0x10]
6501a002:	mov    ecx,DWORD PTR ds:0x65031438
6501a008:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
6501a010:	mov    eax,ds:0x6502dbe8
6501a015:	mov    eax,DWORD PTR [eax+0x10]
6501a018:	dec    BYTE PTR [eax+0x43]
6501a01b:	mov    eax,ds:0x6502dbe8
6501a020:	mov    ecx,DWORD PTR [eax+0x10]
6501a023:	cmp    BYTE PTR [ecx+0x43],0x0
6501a027:	jne    0x6501a032
6501a029:	and    DWORD PTR [eax+0x4],0xfffffffe
6501a02d:	mov    eax,ds:0x6502dbe8
6501a032:	cmp    DWORD PTR [eax+0x8],0xffffffff
6501a036:	jne    0x6501a09d
6501a038:	push   ebx
6501a039:	push   0x0
6501a03b:	push   DWORD PTR [eax+0xc]
6501a03e:	call   esi
6501a040:	mov    eax,ds:0x6502dbe8
6501a045:	push   DWORD PTR [eax+0x10]
6501a048:	push   0x0
6501a04a:	push   DWORD PTR ds:0x6502da8c
6501a050:	call   DWORD PTR ds:0x650240f8
6501a056:	mov    ecx,DWORD PTR ds:0x65031424
6501a05c:	mov    eax,ds:0x6502dbe8
6501a061:	imul   ecx,ecx,0x14
6501a064:	mov    edx,DWORD PTR ds:0x65031428
6501a06a:	sub    ecx,eax
6501a06c:	lea    ecx,[ecx+edx*1-0x14]
6501a070:	push   ecx
6501a071:	lea    ecx,[eax+0x14]
6501a074:	push   ecx
6501a075:	push   eax
6501a076:	call   0x65013780
6501a07b:	mov    eax,DWORD PTR [ebp+0x8]
6501a07e:	add    esp,0xc
6501a081:	dec    DWORD PTR ds:0x65031424
6501a087:	cmp    eax,DWORD PTR ds:0x6502dbe8
6501a08d:	jbe    0x6501a093
6501a08f:	sub    DWORD PTR [ebp+0x8],0x14
6501a093:	mov    eax,ds:0x65031428
6501a098:	mov    ds:0x65031430,eax
6501a09d:	mov    eax,DWORD PTR [ebp+0x8]
6501a0a0:	mov    ds:0x6502dbe8,eax
6501a0a5:	mov    DWORD PTR ds:0x65031438,edi
6501a0ab:	pop    ebx
6501a0ac:	pop    edi
6501a0ad:	pop    esi
6501a0ae:	leave  
6501a0af:	ret    
6501a0b0:	mov    eax,ds:0x65031434
6501a0b5:	push   esi
6501a0b6:	mov    esi,DWORD PTR ds:0x65031424
6501a0bc:	push   edi
6501a0bd:	xor    edi,edi
6501a0bf:	cmp    esi,eax
6501a0c1:	jne    0x6501a0f7
6501a0c3:	add    eax,0x10
6501a0c6:	imul   eax,eax,0x14
6501a0c9:	push   eax
6501a0ca:	push   DWORD PTR ds:0x65031428
6501a0d0:	push   edi
6501a0d1:	push   DWORD PTR ds:0x6502da8c
6501a0d7:	call   DWORD PTR ds:0x650240fc
6501a0dd:	cmp    eax,edi
6501a0df:	jne    0x6501a0e5
6501a0e1:	xor    eax,eax
6501a0e3:	jmp    0x6501a15d
6501a0e5:	add    DWORD PTR ds:0x65031434,0x10
6501a0ec:	mov    esi,DWORD PTR ds:0x65031424
6501a0f2:	mov    ds:0x65031428,eax
6501a0f7:	imul   esi,esi,0x14
6501a0fa:	add    esi,DWORD PTR ds:0x65031428
6501a100:	push   0x41c4
6501a105:	push   0x8
6501a107:	push   DWORD PTR ds:0x6502da8c
6501a10d:	call   DWORD PTR ds:0x650240f4
6501a113:	cmp    eax,edi
6501a115:	mov    DWORD PTR [esi+0x10],eax
6501a118:	je     0x6501a0e1
6501a11a:	push   0x4
6501a11c:	push   0x2000
6501a121:	push   0x100000
6501a126:	push   edi
6501a127:	call   DWORD PTR ds:0x650240c8
6501a12d:	cmp    eax,edi
6501a12f:	mov    DWORD PTR [esi+0xc],eax
6501a132:	jne    0x6501a146
6501a134:	push   DWORD PTR [esi+0x10]
6501a137:	push   edi
6501a138:	push   DWORD PTR ds:0x6502da8c
6501a13e:	call   DWORD PTR ds:0x650240f8
6501a144:	jmp    0x6501a0e1
6501a146:	or     DWORD PTR [esi+0x8],0xffffffff
6501a14a:	mov    DWORD PTR [esi],edi
6501a14c:	mov    DWORD PTR [esi+0x4],edi
6501a14f:	inc    DWORD PTR ds:0x65031424
6501a155:	mov    eax,DWORD PTR [esi+0x10]
6501a158:	or     DWORD PTR [eax],0xffffffff
6501a15b:	mov    eax,esi
6501a15d:	pop    edi
6501a15e:	pop    esi
6501a15f:	ret    
6501a160:	push   ebp
6501a161:	mov    ebp,esp
6501a163:	push   ecx
6501a164:	push   ecx
6501a165:	mov    ecx,DWORD PTR [ebp+0x8]
6501a168:	mov    eax,DWORD PTR [ecx+0x8]
6501a16b:	push   ebx
6501a16c:	push   esi
6501a16d:	mov    esi,DWORD PTR [ecx+0x10]
6501a170:	push   edi
6501a171:	xor    ebx,ebx
6501a173:	jmp    0x6501a178
6501a175:	add    eax,eax
6501a177:	inc    ebx
6501a178:	test   eax,eax
6501a17a:	jge    0x6501a175
6501a17c:	mov    eax,ebx
6501a17e:	imul   eax,eax,0x204
6501a184:	lea    eax,[eax+esi*1+0x144]
6501a18b:	push   0x3f
6501a18d:	mov    DWORD PTR [ebp-0x8],eax
6501a190:	pop    edx
6501a191:	mov    DWORD PTR [eax+0x8],eax
6501a194:	mov    DWORD PTR [eax+0x4],eax
6501a197:	add    eax,0x8
6501a19a:	dec    edx
6501a19b:	jne    0x6501a191
6501a19d:	push   0x4
6501a19f:	mov    edi,ebx
6501a1a1:	push   0x1000
6501a1a6:	shl    edi,0xf
6501a1a9:	add    edi,DWORD PTR [ecx+0xc]
6501a1ac:	push   0x8000
6501a1b1:	push   edi
6501a1b2:	call   DWORD PTR ds:0x650240c8
6501a1b8:	test   eax,eax
6501a1ba:	jne    0x6501a1c4
6501a1bc:	or     eax,0xffffffff
6501a1bf:	jmp    0x6501a261
6501a1c4:	lea    edx,[edi+0x7000]
6501a1ca:	cmp    edi,edx
6501a1cc:	mov    DWORD PTR [ebp-0x4],edx
6501a1cf:	ja     0x6501a214
6501a1d1:	mov    ecx,edx
6501a1d3:	sub    ecx,edi
6501a1d5:	shr    ecx,0xc
6501a1d8:	lea    eax,[edi+0x10]
6501a1db:	inc    ecx
6501a1dc:	or     DWORD PTR [eax-0x8],0xffffffff
6501a1e0:	or     DWORD PTR [eax+0xfec],0xffffffff
6501a1e7:	lea    edx,[eax+0xffc]
6501a1ed:	mov    DWORD PTR [eax],edx
6501a1ef:	lea    edx,[eax-0x1004]
6501a1f5:	mov    DWORD PTR [eax-0x4],0xff0
6501a1fc:	mov    DWORD PTR [eax+0x4],edx
6501a1ff:	mov    DWORD PTR [eax+0xfe8],0xff0
6501a209:	add    eax,0x1000
6501a20e:	dec    ecx
6501a20f:	jne    0x6501a1dc
6501a211:	mov    edx,DWORD PTR [ebp-0x4]
6501a214:	mov    eax,DWORD PTR [ebp-0x8]
6501a217:	add    eax,0x1f8
6501a21c:	lea    ecx,[edi+0xc]
6501a21f:	mov    DWORD PTR [eax+0x4],ecx
6501a222:	mov    DWORD PTR [ecx+0x8],eax
6501a225:	lea    ecx,[edx+0xc]
6501a228:	mov    DWORD PTR [eax+0x8],ecx
6501a22b:	mov    DWORD PTR [ecx+0x4],eax
6501a22e:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6501a233:	xor    edi,edi
6501a235:	inc    edi
6501a236:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6501a23d:	mov    al,BYTE PTR [esi+0x43]
6501a240:	mov    cl,al
6501a242:	inc    cl
6501a244:	test   al,al
6501a246:	mov    eax,DWORD PTR [ebp+0x8]
6501a249:	mov    BYTE PTR [esi+0x43],cl
6501a24c:	jne    0x6501a251
6501a24e:	or     DWORD PTR [eax+0x4],edi
6501a251:	mov    edx,0x80000000
6501a256:	mov    ecx,ebx
6501a258:	shr    edx,cl
6501a25a:	not    edx
6501a25c:	and    DWORD PTR [eax+0x8],edx
6501a25f:	mov    eax,ebx
6501a261:	pop    edi
6501a262:	pop    esi
6501a263:	pop    ebx
6501a264:	leave  
6501a265:	ret    
6501a266:	push   ebp
6501a267:	mov    ebp,esp
6501a269:	sub    esp,0xc
6501a26c:	mov    ecx,DWORD PTR [ebp+0x8]
6501a26f:	mov    eax,DWORD PTR [ecx+0x10]
6501a272:	push   ebx
6501a273:	push   esi
6501a274:	mov    esi,DWORD PTR [ebp+0x10]
6501a277:	push   edi
6501a278:	mov    edi,DWORD PTR [ebp+0xc]
6501a27b:	mov    edx,edi
6501a27d:	sub    edx,DWORD PTR [ecx+0xc]
6501a280:	add    esi,0x17
6501a283:	shr    edx,0xf
6501a286:	mov    ecx,edx
6501a288:	imul   ecx,ecx,0x204
6501a28e:	lea    ecx,[ecx+eax*1+0x144]
6501a295:	mov    DWORD PTR [ebp-0xc],ecx
6501a298:	mov    ecx,DWORD PTR [edi-0x4]
6501a29b:	and    esi,0xfffffff0
6501a29e:	dec    ecx
6501a29f:	cmp    esi,ecx
6501a2a1:	lea    edi,[ecx+edi*1-0x4]
6501a2a5:	mov    ebx,DWORD PTR [edi]
6501a2a7:	mov    DWORD PTR [ebp+0x10],ecx
6501a2aa:	mov    DWORD PTR [ebp-0x4],ebx
6501a2ad:	jle    0x6501a408
6501a2b3:	test   bl,0x1
6501a2b6:	jne    0x6501a401
6501a2bc:	add    ebx,ecx
6501a2be:	cmp    esi,ebx
6501a2c0:	jg     0x6501a401
6501a2c6:	mov    ecx,DWORD PTR [ebp-0x4]
6501a2c9:	sar    ecx,0x4
6501a2cc:	dec    ecx
6501a2cd:	cmp    ecx,0x3f
6501a2d0:	mov    DWORD PTR [ebp-0x8],ecx
6501a2d3:	jbe    0x6501a2db
6501a2d5:	push   0x3f
6501a2d7:	pop    ecx
6501a2d8:	mov    DWORD PTR [ebp-0x8],ecx
6501a2db:	mov    ebx,DWORD PTR [edi+0x4]
6501a2de:	cmp    ebx,DWORD PTR [edi+0x8]
6501a2e1:	jne    0x6501a326
6501a2e3:	cmp    ecx,0x20
6501a2e6:	mov    ebx,0x80000000
6501a2eb:	jae    0x6501a307
6501a2ed:	shr    ebx,cl
6501a2ef:	mov    ecx,DWORD PTR [ebp-0x8]
6501a2f2:	lea    ecx,[ecx+eax*1+0x4]
6501a2f6:	not    ebx
6501a2f8:	and    DWORD PTR [eax+edx*4+0x44],ebx
6501a2fc:	dec    BYTE PTR [ecx]
6501a2fe:	jne    0x6501a326
6501a300:	mov    ecx,DWORD PTR [ebp+0x8]
6501a303:	and    DWORD PTR [ecx],ebx
6501a305:	jmp    0x6501a326
6501a307:	add    ecx,0xffffffe0
6501a30a:	shr    ebx,cl
6501a30c:	mov    ecx,DWORD PTR [ebp-0x8]
6501a30f:	lea    ecx,[ecx+eax*1+0x4]
6501a313:	not    ebx
6501a315:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6501a31c:	dec    BYTE PTR [ecx]
6501a31e:	jne    0x6501a326
6501a320:	mov    ecx,DWORD PTR [ebp+0x8]
6501a323:	and    DWORD PTR [ecx+0x4],ebx
6501a326:	mov    ecx,DWORD PTR [edi+0x8]
6501a329:	mov    ebx,DWORD PTR [edi+0x4]
6501a32c:	mov    DWORD PTR [ecx+0x4],ebx
6501a32f:	mov    ecx,DWORD PTR [edi+0x4]
6501a332:	mov    edi,DWORD PTR [edi+0x8]
6501a335:	mov    DWORD PTR [ecx+0x8],edi
6501a338:	mov    ecx,DWORD PTR [ebp+0x10]
6501a33b:	sub    ecx,esi
6501a33d:	add    DWORD PTR [ebp-0x4],ecx
6501a340:	cmp    DWORD PTR [ebp-0x4],0x0
6501a344:	jle    0x6501a3ef
6501a34a:	mov    edi,DWORD PTR [ebp-0x4]
6501a34d:	mov    ecx,DWORD PTR [ebp+0xc]
6501a350:	sar    edi,0x4
6501a353:	dec    edi
6501a354:	cmp    edi,0x3f
6501a357:	lea    ecx,[ecx+esi*1-0x4]
6501a35b:	jbe    0x6501a360
6501a35d:	push   0x3f
6501a35f:	pop    edi
6501a360:	mov    ebx,DWORD PTR [ebp-0xc]
6501a363:	lea    ebx,[ebx+edi*8]
6501a366:	mov    DWORD PTR [ebp+0x10],ebx
6501a369:	mov    ebx,DWORD PTR [ebx+0x4]
6501a36c:	mov    DWORD PTR [ecx+0x4],ebx
6501a36f:	mov    ebx,DWORD PTR [ebp+0x10]
6501a372:	mov    DWORD PTR [ecx+0x8],ebx
6501a375:	mov    DWORD PTR [ebx+0x4],ecx
6501a378:	mov    ebx,DWORD PTR [ecx+0x4]
6501a37b:	mov    DWORD PTR [ebx+0x8],ecx
6501a37e:	mov    ebx,DWORD PTR [ecx+0x4]
6501a381:	cmp    ebx,DWORD PTR [ecx+0x8]
6501a384:	jne    0x6501a3dd
6501a386:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6501a38a:	mov    BYTE PTR [ebp+0x13],cl
6501a38d:	inc    cl
6501a38f:	cmp    edi,0x20
6501a392:	mov    BYTE PTR [edi+eax*1+0x4],cl
6501a396:	jae    0x6501a3b4
6501a398:	cmp    BYTE PTR [ebp+0x13],0x0
6501a39c:	jne    0x6501a3ac
6501a39e:	mov    ecx,edi
6501a3a0:	mov    ebx,0x80000000
6501a3a5:	shr    ebx,cl
6501a3a7:	mov    ecx,DWORD PTR [ebp+0x8]
6501a3aa:	or     DWORD PTR [ecx],ebx
6501a3ac:	lea    eax,[eax+edx*4+0x44]
6501a3b0:	mov    ecx,edi
6501a3b2:	jmp    0x6501a3d4
6501a3b4:	cmp    BYTE PTR [ebp+0x13],0x0
6501a3b8:	jne    0x6501a3ca
6501a3ba:	lea    ecx,[edi-0x20]
6501a3bd:	mov    ebx,0x80000000
6501a3c2:	shr    ebx,cl
6501a3c4:	mov    ecx,DWORD PTR [ebp+0x8]
6501a3c7:	or     DWORD PTR [ecx+0x4],ebx
6501a3ca:	lea    eax,[eax+edx*4+0xc4]
6501a3d1:	lea    ecx,[edi-0x20]
6501a3d4:	mov    edx,0x80000000
6501a3d9:	shr    edx,cl
6501a3db:	or     DWORD PTR [eax],edx
6501a3dd:	mov    edx,DWORD PTR [ebp+0xc]
6501a3e0:	mov    ecx,DWORD PTR [ebp-0x4]
6501a3e3:	lea    eax,[edx+esi*1-0x4]
6501a3e7:	mov    DWORD PTR [eax],ecx
6501a3e9:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6501a3ed:	jmp    0x6501a3f2
6501a3ef:	mov    edx,DWORD PTR [ebp+0xc]
6501a3f2:	lea    eax,[esi+0x1]
6501a3f5:	mov    DWORD PTR [edx-0x4],eax
6501a3f8:	mov    DWORD PTR [edx+esi*1-0x8],eax
6501a3fc:	jmp    0x6501a53d
6501a401:	xor    eax,eax
6501a403:	jmp    0x6501a540
6501a408:	jge    0x6501a53d
6501a40e:	mov    ebx,DWORD PTR [ebp+0xc]
6501a411:	sub    DWORD PTR [ebp+0x10],esi
6501a414:	lea    ecx,[esi+0x1]
6501a417:	mov    DWORD PTR [ebx-0x4],ecx
6501a41a:	lea    ebx,[ebx+esi*1-0x4]
6501a41e:	mov    esi,DWORD PTR [ebp+0x10]
6501a421:	sar    esi,0x4
6501a424:	dec    esi
6501a425:	cmp    esi,0x3f
6501a428:	mov    DWORD PTR [ebp+0xc],ebx
6501a42b:	mov    DWORD PTR [ebx-0x4],ecx
6501a42e:	jbe    0x6501a433
6501a430:	push   0x3f
6501a432:	pop    esi
6501a433:	test   BYTE PTR [ebp-0x4],0x1
6501a437:	jne    0x6501a4bd
6501a43d:	mov    esi,DWORD PTR [ebp-0x4]
6501a440:	sar    esi,0x4
6501a443:	dec    esi
6501a444:	cmp    esi,0x3f
6501a447:	jbe    0x6501a44c
6501a449:	push   0x3f
6501a44b:	pop    esi
6501a44c:	mov    ecx,DWORD PTR [edi+0x4]
6501a44f:	cmp    ecx,DWORD PTR [edi+0x8]
6501a452:	jne    0x6501a496
6501a454:	cmp    esi,0x20
6501a457:	mov    ebx,0x80000000
6501a45c:	jae    0x6501a477
6501a45e:	mov    ecx,esi
6501a460:	shr    ebx,cl
6501a462:	lea    esi,[esi+eax*1+0x4]
6501a466:	not    ebx
6501a468:	and    DWORD PTR [eax+edx*4+0x44],ebx
6501a46c:	dec    BYTE PTR [esi]
6501a46e:	jne    0x6501a493
6501a470:	mov    ecx,DWORD PTR [ebp+0x8]
6501a473:	and    DWORD PTR [ecx],ebx
6501a475:	jmp    0x6501a493
6501a477:	lea    ecx,[esi-0x20]
6501a47a:	shr    ebx,cl
6501a47c:	lea    ecx,[esi+eax*1+0x4]
6501a480:	not    ebx
6501a482:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6501a489:	dec    BYTE PTR [ecx]
6501a48b:	jne    0x6501a493
6501a48d:	mov    ecx,DWORD PTR [ebp+0x8]
6501a490:	and    DWORD PTR [ecx+0x4],ebx
6501a493:	mov    ebx,DWORD PTR [ebp+0xc]
6501a496:	mov    ecx,DWORD PTR [edi+0x8]
6501a499:	mov    esi,DWORD PTR [edi+0x4]
6501a49c:	mov    DWORD PTR [ecx+0x4],esi
6501a49f:	mov    esi,DWORD PTR [edi+0x8]
6501a4a2:	mov    ecx,DWORD PTR [edi+0x4]
6501a4a5:	mov    DWORD PTR [ecx+0x8],esi
6501a4a8:	mov    esi,DWORD PTR [ebp+0x10]
6501a4ab:	add    esi,DWORD PTR [ebp-0x4]
6501a4ae:	mov    DWORD PTR [ebp+0x10],esi
6501a4b1:	sar    esi,0x4
6501a4b4:	dec    esi
6501a4b5:	cmp    esi,0x3f
6501a4b8:	jbe    0x6501a4bd
6501a4ba:	push   0x3f
6501a4bc:	pop    esi
6501a4bd:	mov    ecx,DWORD PTR [ebp-0xc]
6501a4c0:	lea    ecx,[ecx+esi*8]
6501a4c3:	mov    edi,DWORD PTR [ecx+0x4]
6501a4c6:	mov    DWORD PTR [ebx+0x8],ecx
6501a4c9:	mov    DWORD PTR [ebx+0x4],edi
6501a4cc:	mov    DWORD PTR [ecx+0x4],ebx
6501a4cf:	mov    ecx,DWORD PTR [ebx+0x4]
6501a4d2:	mov    DWORD PTR [ecx+0x8],ebx
6501a4d5:	mov    ecx,DWORD PTR [ebx+0x4]
6501a4d8:	cmp    ecx,DWORD PTR [ebx+0x8]
6501a4db:	jne    0x6501a534
6501a4dd:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6501a4e1:	mov    BYTE PTR [ebp+0xf],cl
6501a4e4:	inc    cl
6501a4e6:	cmp    esi,0x20
6501a4e9:	mov    BYTE PTR [esi+eax*1+0x4],cl
6501a4ed:	jae    0x6501a50b
6501a4ef:	cmp    BYTE PTR [ebp+0xf],0x0
6501a4f3:	jne    0x6501a503
6501a4f5:	mov    ecx,esi
6501a4f7:	mov    edi,0x80000000
6501a4fc:	shr    edi,cl
6501a4fe:	mov    ecx,DWORD PTR [ebp+0x8]
6501a501:	or     DWORD PTR [ecx],edi
6501a503:	lea    eax,[eax+edx*4+0x44]
6501a507:	mov    ecx,esi
6501a509:	jmp    0x6501a52b
6501a50b:	cmp    BYTE PTR [ebp+0xf],0x0
6501a50f:	jne    0x6501a521
6501a511:	lea    ecx,[esi-0x20]
6501a514:	mov    edi,0x80000000
6501a519:	shr    edi,cl
6501a51b:	mov    ecx,DWORD PTR [ebp+0x8]
6501a51e:	or     DWORD PTR [ecx+0x4],edi
6501a521:	lea    eax,[eax+edx*4+0xc4]
6501a528:	lea    ecx,[esi-0x20]
6501a52b:	mov    edx,0x80000000
6501a530:	shr    edx,cl
6501a532:	or     DWORD PTR [eax],edx
6501a534:	mov    eax,DWORD PTR [ebp+0x10]
6501a537:	mov    DWORD PTR [ebx],eax
6501a539:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6501a53d:	xor    eax,eax
6501a53f:	inc    eax
6501a540:	pop    edi
6501a541:	pop    esi
6501a542:	pop    ebx
6501a543:	leave  
6501a544:	ret    
6501a545:	push   ebp
6501a546:	mov    ebp,esp
6501a548:	sub    esp,0x14
6501a54b:	mov    eax,ds:0x65031424
6501a550:	mov    ecx,DWORD PTR [ebp+0x8]
6501a553:	imul   eax,eax,0x14
6501a556:	add    eax,DWORD PTR ds:0x65031428
6501a55c:	add    ecx,0x17
6501a55f:	and    ecx,0xfffffff0
6501a562:	mov    DWORD PTR [ebp-0x10],ecx
6501a565:	sar    ecx,0x4
6501a568:	push   ebx
6501a569:	dec    ecx
6501a56a:	cmp    ecx,0x20
6501a56d:	push   esi
6501a56e:	push   edi
6501a56f:	jge    0x6501a57c
6501a571:	or     esi,0xffffffff
6501a574:	shr    esi,cl
6501a576:	or     DWORD PTR [ebp-0x8],0xffffffff
6501a57a:	jmp    0x6501a589
6501a57c:	add    ecx,0xffffffe0
6501a57f:	or     edx,0xffffffff
6501a582:	xor    esi,esi
6501a584:	shr    edx,cl
6501a586:	mov    DWORD PTR [ebp-0x8],edx
6501a589:	mov    ecx,DWORD PTR ds:0x65031430
6501a58f:	mov    ebx,ecx
6501a591:	jmp    0x6501a5a4
6501a593:	mov    edx,DWORD PTR [ebx+0x4]
6501a596:	mov    edi,DWORD PTR [ebx]
6501a598:	and    edx,DWORD PTR [ebp-0x8]
6501a59b:	and    edi,esi
6501a59d:	or     edx,edi
6501a59f:	jne    0x6501a5ab
6501a5a1:	add    ebx,0x14
6501a5a4:	cmp    ebx,eax
6501a5a6:	mov    DWORD PTR [ebp+0x8],ebx
6501a5a9:	jb     0x6501a593
6501a5ab:	cmp    ebx,eax
6501a5ad:	jne    0x6501a62e
6501a5af:	mov    ebx,DWORD PTR ds:0x65031428
6501a5b5:	jmp    0x6501a5c8
6501a5b7:	mov    edx,DWORD PTR [ebx+0x4]
6501a5ba:	mov    edi,DWORD PTR [ebx]
6501a5bc:	and    edx,DWORD PTR [ebp-0x8]
6501a5bf:	and    edi,esi
6501a5c1:	or     edx,edi
6501a5c3:	jne    0x6501a5cf
6501a5c5:	add    ebx,0x14
6501a5c8:	cmp    ebx,ecx
6501a5ca:	mov    DWORD PTR [ebp+0x8],ebx
6501a5cd:	jb     0x6501a5b7
6501a5cf:	cmp    ebx,ecx
6501a5d1:	jne    0x6501a62e
6501a5d3:	jmp    0x6501a5e1
6501a5d5:	cmp    DWORD PTR [ebx+0x8],0x0
6501a5d9:	jne    0x6501a5e5
6501a5db:	add    ebx,0x14
6501a5de:	mov    DWORD PTR [ebp+0x8],ebx
6501a5e1:	cmp    ebx,eax
6501a5e3:	jb     0x6501a5d5
6501a5e5:	cmp    ebx,eax
6501a5e7:	jne    0x6501a61a
6501a5e9:	mov    ebx,DWORD PTR ds:0x65031428
6501a5ef:	jmp    0x6501a5fa
6501a5f1:	cmp    DWORD PTR [ebx+0x8],0x0
6501a5f5:	jne    0x6501a601
6501a5f7:	add    ebx,0x14
6501a5fa:	cmp    ebx,ecx
6501a5fc:	mov    DWORD PTR [ebp+0x8],ebx
6501a5ff:	jb     0x6501a5f1
6501a601:	cmp    ebx,ecx
6501a603:	jne    0x6501a61a
6501a605:	call   0x6501a0b0
6501a60a:	mov    ebx,eax
6501a60c:	test   ebx,ebx
6501a60e:	mov    DWORD PTR [ebp+0x8],ebx
6501a611:	jne    0x6501a61a
6501a613:	xor    eax,eax
6501a615:	jmp    0x6501a823
6501a61a:	push   ebx
6501a61b:	call   0x6501a160
6501a620:	pop    ecx
6501a621:	mov    ecx,DWORD PTR [ebx+0x10]
6501a624:	mov    DWORD PTR [ecx],eax
6501a626:	mov    eax,DWORD PTR [ebx+0x10]
6501a629:	cmp    DWORD PTR [eax],0xffffffff
6501a62c:	je     0x6501a613
6501a62e:	mov    DWORD PTR ds:0x65031430,ebx
6501a634:	mov    eax,DWORD PTR [ebx+0x10]
6501a637:	mov    edx,DWORD PTR [eax]
6501a639:	cmp    edx,0xffffffff
6501a63c:	mov    DWORD PTR [ebp-0x4],edx
6501a63f:	je     0x6501a655
6501a641:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6501a648:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6501a64c:	and    ecx,DWORD PTR [ebp-0x8]
6501a64f:	and    edi,esi
6501a651:	or     ecx,edi
6501a653:	jne    0x6501a67e
6501a655:	and    DWORD PTR [ebp-0x4],0x0
6501a659:	mov    edx,DWORD PTR [eax+0xc4]
6501a65f:	lea    ecx,[eax+0x44]
6501a662:	mov    edi,DWORD PTR [ecx]
6501a664:	and    edx,DWORD PTR [ebp-0x8]
6501a667:	and    edi,esi
6501a669:	or     edx,edi
6501a66b:	jne    0x6501a67b
6501a66d:	inc    DWORD PTR [ebp-0x4]
6501a670:	mov    edx,DWORD PTR [ecx+0x84]
6501a676:	add    ecx,0x4
6501a679:	jmp    0x6501a662
6501a67b:	mov    edx,DWORD PTR [ebp-0x4]
6501a67e:	mov    ecx,edx
6501a680:	imul   ecx,ecx,0x204
6501a686:	lea    ecx,[ecx+eax*1+0x144]
6501a68d:	mov    DWORD PTR [ebp-0xc],ecx
6501a690:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6501a694:	xor    edi,edi
6501a696:	and    ecx,esi
6501a698:	jne    0x6501a6ac
6501a69a:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6501a6a1:	and    ecx,DWORD PTR [ebp-0x8]
6501a6a4:	push   0x20
6501a6a6:	pop    edi
6501a6a7:	jmp    0x6501a6ac
6501a6a9:	add    ecx,ecx
6501a6ab:	inc    edi
6501a6ac:	test   ecx,ecx
6501a6ae:	jge    0x6501a6a9
6501a6b0:	mov    ecx,DWORD PTR [ebp-0xc]
6501a6b3:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6501a6b7:	mov    ecx,DWORD PTR [edx]
6501a6b9:	sub    ecx,DWORD PTR [ebp-0x10]
6501a6bc:	mov    esi,ecx
6501a6be:	sar    esi,0x4
6501a6c1:	dec    esi
6501a6c2:	cmp    esi,0x3f
6501a6c5:	mov    DWORD PTR [ebp-0x8],ecx
6501a6c8:	jle    0x6501a6cd
6501a6ca:	push   0x3f
6501a6cc:	pop    esi
6501a6cd:	cmp    esi,edi
6501a6cf:	je     0x6501a7d6
6501a6d5:	mov    ecx,DWORD PTR [edx+0x4]
6501a6d8:	cmp    ecx,DWORD PTR [edx+0x8]
6501a6db:	jne    0x6501a739
6501a6dd:	cmp    edi,0x20
6501a6e0:	mov    ebx,0x80000000
6501a6e5:	jge    0x6501a70d
6501a6e7:	mov    ecx,edi
6501a6e9:	shr    ebx,cl
6501a6eb:	mov    ecx,DWORD PTR [ebp-0x4]
6501a6ee:	lea    edi,[eax+edi*1+0x4]
6501a6f2:	not    ebx
6501a6f4:	mov    DWORD PTR [ebp-0x14],ebx
6501a6f7:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6501a6fb:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6501a6ff:	dec    BYTE PTR [edi]
6501a701:	jne    0x6501a736
6501a703:	mov    ecx,DWORD PTR [ebp-0x14]
6501a706:	mov    ebx,DWORD PTR [ebp+0x8]
6501a709:	and    DWORD PTR [ebx],ecx
6501a70b:	jmp    0x6501a739
6501a70d:	lea    ecx,[edi-0x20]
6501a710:	shr    ebx,cl
6501a712:	mov    ecx,DWORD PTR [ebp-0x4]
6501a715:	lea    ecx,[eax+ecx*4+0xc4]
6501a71c:	lea    edi,[eax+edi*1+0x4]
6501a720:	not    ebx
6501a722:	and    DWORD PTR [ecx],ebx
6501a724:	dec    BYTE PTR [edi]
6501a726:	mov    DWORD PTR [ebp-0x14],ebx
6501a729:	jne    0x6501a736
6501a72b:	mov    ebx,DWORD PTR [ebp+0x8]
6501a72e:	mov    ecx,DWORD PTR [ebp-0x14]
6501a731:	and    DWORD PTR [ebx+0x4],ecx
6501a734:	jmp    0x6501a739
6501a736:	mov    ebx,DWORD PTR [ebp+0x8]
6501a739:	cmp    DWORD PTR [ebp-0x8],0x0
6501a73d:	mov    ecx,DWORD PTR [edx+0x8]
6501a740:	mov    edi,DWORD PTR [edx+0x4]
6501a743:	mov    DWORD PTR [ecx+0x4],edi
6501a746:	mov    ecx,DWORD PTR [edx+0x4]
6501a749:	mov    edi,DWORD PTR [edx+0x8]
6501a74c:	mov    DWORD PTR [ecx+0x8],edi
6501a74f:	je     0x6501a7e2
6501a755:	mov    ecx,DWORD PTR [ebp-0xc]
6501a758:	lea    ecx,[ecx+esi*8]
6501a75b:	mov    edi,DWORD PTR [ecx+0x4]
6501a75e:	mov    DWORD PTR [edx+0x8],ecx
6501a761:	mov    DWORD PTR [edx+0x4],edi
6501a764:	mov    DWORD PTR [ecx+0x4],edx
6501a767:	mov    ecx,DWORD PTR [edx+0x4]
6501a76a:	mov    DWORD PTR [ecx+0x8],edx
6501a76d:	mov    ecx,DWORD PTR [edx+0x4]
6501a770:	cmp    ecx,DWORD PTR [edx+0x8]
6501a773:	jne    0x6501a7d3
6501a775:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6501a779:	mov    BYTE PTR [ebp+0xb],cl
6501a77c:	inc    cl
6501a77e:	cmp    esi,0x20
6501a781:	mov    BYTE PTR [esi+eax*1+0x4],cl
6501a785:	jge    0x6501a7aa
6501a787:	cmp    BYTE PTR [ebp+0xb],0x0
6501a78b:	jne    0x6501a798
6501a78d:	mov    edi,0x80000000
6501a792:	mov    ecx,esi
6501a794:	shr    edi,cl
6501a796:	or     DWORD PTR [ebx],edi
6501a798:	mov    ecx,esi
6501a79a:	mov    edi,0x80000000
6501a79f:	shr    edi,cl
6501a7a1:	mov    ecx,DWORD PTR [ebp-0x4]
6501a7a4:	or     DWORD PTR [eax+ecx*4+0x44],edi
6501a7a8:	jmp    0x6501a7d3
6501a7aa:	cmp    BYTE PTR [ebp+0xb],0x0
6501a7ae:	jne    0x6501a7bd
6501a7b0:	lea    ecx,[esi-0x20]
6501a7b3:	mov    edi,0x80000000
6501a7b8:	shr    edi,cl
6501a7ba:	or     DWORD PTR [ebx+0x4],edi
6501a7bd:	mov    ecx,DWORD PTR [ebp-0x4]
6501a7c0:	lea    edi,[eax+ecx*4+0xc4]
6501a7c7:	lea    ecx,[esi-0x20]
6501a7ca:	mov    esi,0x80000000
6501a7cf:	shr    esi,cl
6501a7d1:	or     DWORD PTR [edi],esi
6501a7d3:	mov    ecx,DWORD PTR [ebp-0x8]
6501a7d6:	test   ecx,ecx
6501a7d8:	je     0x6501a7e5
6501a7da:	mov    DWORD PTR [edx],ecx
6501a7dc:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6501a7e0:	jmp    0x6501a7e5
6501a7e2:	mov    ecx,DWORD PTR [ebp-0x8]
6501a7e5:	mov    esi,DWORD PTR [ebp-0x10]
6501a7e8:	add    edx,ecx
6501a7ea:	lea    ecx,[esi+0x1]
6501a7ed:	mov    DWORD PTR [edx],ecx
6501a7ef:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6501a7f3:	mov    esi,DWORD PTR [ebp-0xc]
6501a7f6:	mov    ecx,DWORD PTR [esi]
6501a7f8:	test   ecx,ecx
6501a7fa:	lea    edi,[ecx+0x1]
6501a7fd:	mov    DWORD PTR [esi],edi
6501a7ff:	jne    0x6501a81b
6501a801:	cmp    ebx,DWORD PTR ds:0x6502dbe8
6501a807:	jne    0x6501a81b
6501a809:	mov    ecx,DWORD PTR [ebp-0x4]
6501a80c:	cmp    ecx,DWORD PTR ds:0x65031438
6501a812:	jne    0x6501a81b
6501a814:	and    DWORD PTR ds:0x6502dbe8,0x0
6501a81b:	mov    ecx,DWORD PTR [ebp-0x4]
6501a81e:	mov    DWORD PTR [eax],ecx
6501a820:	lea    eax,[edx+0x4]
6501a823:	pop    edi
6501a824:	pop    esi
6501a825:	pop    ebx
6501a826:	leave  
6501a827:	ret    
6501a828:	push   ecx
6501a829:	push   ebx
6501a82a:	mov    ebx,DWORD PTR [esp+0xc]
6501a82e:	push   esi
6501a82f:	push   edi
6501a830:	xor    esi,esi
6501a832:	xor    edi,edi
6501a834:	cmp    ebx,DWORD PTR [edi*8+0x6502ca78]
6501a83b:	je     0x6501a843
6501a83d:	inc    edi
6501a83e:	cmp    edi,0x17
6501a841:	jb     0x6501a834
6501a843:	cmp    edi,0x17
6501a846:	jae    0x6501a9c3
6501a84c:	push   ebp
6501a84d:	push   0x3
6501a84f:	call   0x6501d8f0
6501a854:	cmp    eax,0x1
6501a857:	pop    ecx
6501a858:	je     0x6501a98f
6501a85e:	push   0x3
6501a860:	call   0x6501d8f0
6501a865:	test   eax,eax
6501a867:	pop    ecx
6501a868:	jne    0x6501a877
6501a86a:	cmp    DWORD PTR ds:0x6502d5a0,0x1
6501a871:	je     0x6501a98f
6501a877:	cmp    ebx,0xfc
6501a87d:	je     0x6501a9c2
6501a883:	push   0x650253f0
6501a888:	mov    ebx,0x314
6501a88d:	push   ebx
6501a88e:	mov    ebp,0x6502dbf0
6501a893:	push   ebp
6501a894:	call   0x65013ff4
6501a899:	add    esp,0xc
6501a89c:	test   eax,eax
6501a89e:	je     0x6501a8ad
6501a8a0:	push   esi
6501a8a1:	push   esi
6501a8a2:	push   esi
6501a8a3:	push   esi
6501a8a4:	push   esi
6501a8a5:	call   0x650121b3
6501a8aa:	add    esp,0x14
6501a8ad:	push   0x104
6501a8b2:	mov    esi,0x6502dc09
6501a8b7:	push   esi
6501a8b8:	push   0x0
6501a8ba:	mov    BYTE PTR ds:0x6502dd0d,0x0
6501a8c1:	call   DWORD PTR ds:0x65024160
6501a8c7:	test   eax,eax
6501a8c9:	jne    0x6501a8f1
6501a8cb:	push   0x650253d8
6501a8d0:	push   0x2fb
6501a8d5:	push   esi
6501a8d6:	call   0x65013ff4
6501a8db:	add    esp,0xc
6501a8de:	test   eax,eax
6501a8e0:	je     0x6501a8f1
6501a8e2:	xor    eax,eax
6501a8e4:	push   eax
6501a8e5:	push   eax
6501a8e6:	push   eax
6501a8e7:	push   eax
6501a8e8:	push   eax
6501a8e9:	call   0x650121b3
6501a8ee:	add    esp,0x14
6501a8f1:	push   esi
6501a8f2:	call   0x65013f00
6501a8f7:	inc    eax
6501a8f8:	cmp    eax,0x3c
6501a8fb:	pop    ecx
6501a8fc:	jbe    0x6501a936
6501a8fe:	push   esi
6501a8ff:	call   0x65013f00
6501a904:	sub    esi,0x3b
6501a907:	add    eax,esi
6501a909:	push   0x3
6501a90b:	mov    ecx,0x6502df04
6501a910:	push   0x650253d4
6501a915:	sub    ecx,eax
6501a917:	push   ecx
6501a918:	push   eax
6501a919:	call   0x6501b976
6501a91e:	add    esp,0x14
6501a921:	test   eax,eax
6501a923:	je     0x6501a936
6501a925:	xor    esi,esi
6501a927:	push   esi
6501a928:	push   esi
6501a929:	push   esi
6501a92a:	push   esi
6501a92b:	push   esi
6501a92c:	call   0x650121b3
6501a931:	add    esp,0x14
6501a934:	jmp    0x6501a938
6501a936:	xor    esi,esi
6501a938:	push   0x650253d0
6501a93d:	push   ebx
6501a93e:	push   ebp
6501a93f:	call   0x6501b8be
6501a944:	add    esp,0xc
6501a947:	test   eax,eax
6501a949:	je     0x6501a958
6501a94b:	push   esi
6501a94c:	push   esi
6501a94d:	push   esi
6501a94e:	push   esi
6501a94f:	push   esi
6501a950:	call   0x650121b3
6501a955:	add    esp,0x14
6501a958:	push   DWORD PTR [edi*8+0x6502ca7c]
6501a95f:	push   ebx
6501a960:	push   ebp
6501a961:	call   0x6501b8be
6501a966:	add    esp,0xc
6501a969:	test   eax,eax
6501a96b:	je     0x6501a97a
6501a96d:	push   esi
6501a96e:	push   esi
6501a96f:	push   esi
6501a970:	push   esi
6501a971:	push   esi
6501a972:	call   0x650121b3
6501a977:	add    esp,0x14
6501a97a:	push   0x12010
6501a97f:	push   0x650253a8
6501a984:	push   ebp
6501a985:	call   0x6501d733
6501a98a:	add    esp,0xc
6501a98d:	jmp    0x6501a9c2
6501a98f:	push   0xfffffff4
6501a991:	call   DWORD PTR ds:0x65024154
6501a997:	mov    ebp,eax
6501a999:	cmp    ebp,esi
6501a99b:	je     0x6501a9c2
6501a99d:	cmp    ebp,0xffffffff
6501a9a0:	je     0x6501a9c2
6501a9a2:	push   0x0
6501a9a4:	lea    eax,[esp+0x14]
6501a9a8:	push   eax
6501a9a9:	lea    esi,[edi*8+0x6502ca7c]
6501a9b0:	push   DWORD PTR [esi]
6501a9b2:	call   0x65013f00
6501a9b7:	pop    ecx
6501a9b8:	push   eax
6501a9b9:	push   DWORD PTR [esi]
6501a9bb:	push   ebp
6501a9bc:	call   DWORD PTR ds:0x65024088
6501a9c2:	pop    ebp
6501a9c3:	pop    edi
6501a9c4:	pop    esi
6501a9c5:	pop    ebx
6501a9c6:	pop    ecx
6501a9c7:	ret    
6501a9c8:	push   0x3
6501a9ca:	call   0x6501d8f0
6501a9cf:	cmp    eax,0x1
6501a9d2:	pop    ecx
6501a9d3:	je     0x6501a9ea
6501a9d5:	push   0x3
6501a9d7:	call   0x6501d8f0
6501a9dc:	test   eax,eax
6501a9de:	pop    ecx
6501a9df:	jne    0x6501aa00
6501a9e1:	cmp    DWORD PTR ds:0x6502d5a0,0x1
6501a9e8:	jne    0x6501aa00
6501a9ea:	push   0xfc
6501a9ef:	call   0x6501a828
6501a9f4:	push   0xff
6501a9f9:	call   0x6501a828
6501a9fe:	pop    ecx
6501a9ff:	pop    ecx
6501aa00:	ret    
6501aa01:	push   ebp
6501aa02:	mov    ebp,esp
6501aa04:	sub    esp,0x8
6501aa07:	mov    DWORD PTR [ebp-0x4],edi
6501aa0a:	mov    DWORD PTR [ebp-0x8],esi
6501aa0d:	mov    esi,DWORD PTR [ebp+0xc]
6501aa10:	mov    edi,DWORD PTR [ebp+0x8]
6501aa13:	mov    ecx,DWORD PTR [ebp+0x10]
6501aa16:	shr    ecx,0x7
6501aa19:	jmp    0x6501aa21
6501aa1b:	lea    ebx,[ebx+0x0]
6501aa21:	movdqa xmm0,XMMWORD PTR [esi]
6501aa25:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6501aa2a:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6501aa2f:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6501aa34:	movdqa XMMWORD PTR [edi],xmm0
6501aa38:	movdqa XMMWORD PTR [edi+0x10],xmm1
6501aa3d:	movdqa XMMWORD PTR [edi+0x20],xmm2
6501aa42:	movdqa XMMWORD PTR [edi+0x30],xmm3
6501aa47:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6501aa4c:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6501aa51:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6501aa56:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6501aa5b:	movdqa XMMWORD PTR [edi+0x40],xmm4
6501aa60:	movdqa XMMWORD PTR [edi+0x50],xmm5
6501aa65:	movdqa XMMWORD PTR [edi+0x60],xmm6
6501aa6a:	movdqa XMMWORD PTR [edi+0x70],xmm7
6501aa6f:	lea    esi,[esi+0x80]
6501aa75:	lea    edi,[edi+0x80]
6501aa7b:	dec    ecx
6501aa7c:	jne    0x6501aa21
6501aa7e:	mov    esi,DWORD PTR [ebp-0x8]
6501aa81:	mov    edi,DWORD PTR [ebp-0x4]
6501aa84:	mov    esp,ebp
6501aa86:	pop    ebp
6501aa87:	ret    
6501aa88:	push   ebp
6501aa89:	mov    ebp,esp
6501aa8b:	sub    esp,0x1c
6501aa8e:	mov    DWORD PTR [ebp-0xc],edi
6501aa91:	mov    DWORD PTR [ebp-0x8],esi
6501aa94:	mov    DWORD PTR [ebp-0x4],ebx
6501aa97:	mov    ebx,DWORD PTR [ebp+0xc]
6501aa9a:	mov    eax,ebx
6501aa9c:	cdq    
6501aa9d:	mov    ecx,eax
6501aa9f:	mov    eax,DWORD PTR [ebp+0x8]
6501aaa2:	xor    ecx,edx
6501aaa4:	sub    ecx,edx
6501aaa6:	and    ecx,0xf
6501aaa9:	xor    ecx,edx
6501aaab:	sub    ecx,edx
6501aaad:	cdq    
6501aaae:	mov    edi,eax
6501aab0:	xor    edi,edx
6501aab2:	sub    edi,edx
6501aab4:	and    edi,0xf
6501aab7:	xor    edi,edx
6501aab9:	sub    edi,edx
6501aabb:	mov    edx,ecx
6501aabd:	or     edx,edi
6501aabf:	jne    0x6501ab0b
6501aac1:	mov    esi,DWORD PTR [ebp+0x10]
6501aac4:	mov    ecx,esi
6501aac6:	and    ecx,0x7f
6501aac9:	mov    DWORD PTR [ebp-0x18],ecx
6501aacc:	cmp    esi,ecx
6501aace:	je     0x6501aae3
6501aad0:	sub    esi,ecx
6501aad2:	push   esi
6501aad3:	push   ebx
6501aad4:	push   eax
6501aad5:	call   0x6501aa01
6501aada:	add    esp,0xc
6501aadd:	mov    eax,DWORD PTR [ebp+0x8]
6501aae0:	mov    ecx,DWORD PTR [ebp-0x18]
6501aae3:	test   ecx,ecx
6501aae5:	je     0x6501ab5e
6501aae7:	mov    ebx,DWORD PTR [ebp+0x10]
6501aaea:	mov    edx,DWORD PTR [ebp+0xc]
6501aaed:	add    edx,ebx
6501aaef:	sub    edx,ecx
6501aaf1:	mov    DWORD PTR [ebp-0x14],edx
6501aaf4:	add    ebx,eax
6501aaf6:	sub    ebx,ecx
6501aaf8:	mov    DWORD PTR [ebp-0x10],ebx
6501aafb:	mov    esi,DWORD PTR [ebp-0x14]
6501aafe:	mov    edi,DWORD PTR [ebp-0x10]
6501ab01:	mov    ecx,DWORD PTR [ebp-0x18]
6501ab04:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6501ab06:	mov    eax,DWORD PTR [ebp+0x8]
6501ab09:	jmp    0x6501ab5e
6501ab0b:	cmp    ecx,edi
6501ab0d:	jne    0x6501ab44
6501ab0f:	neg    ecx
6501ab11:	add    ecx,0x10
6501ab14:	mov    DWORD PTR [ebp-0x1c],ecx
6501ab17:	mov    esi,DWORD PTR [ebp+0xc]
6501ab1a:	mov    edi,DWORD PTR [ebp+0x8]
6501ab1d:	mov    ecx,DWORD PTR [ebp-0x1c]
6501ab20:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6501ab22:	mov    ecx,DWORD PTR [ebp+0x8]
6501ab25:	add    ecx,DWORD PTR [ebp-0x1c]
6501ab28:	mov    edx,DWORD PTR [ebp+0xc]
6501ab2b:	add    edx,DWORD PTR [ebp-0x1c]
6501ab2e:	mov    eax,DWORD PTR [ebp+0x10]
6501ab31:	sub    eax,DWORD PTR [ebp-0x1c]
6501ab34:	push   eax
6501ab35:	push   edx
6501ab36:	push   ecx
6501ab37:	call   0x6501aa88
6501ab3c:	add    esp,0xc
6501ab3f:	mov    eax,DWORD PTR [ebp+0x8]
6501ab42:	jmp    0x6501ab5e
6501ab44:	mov    esi,DWORD PTR [ebp+0xc]
6501ab47:	mov    edi,DWORD PTR [ebp+0x8]
6501ab4a:	mov    ecx,DWORD PTR [ebp+0x10]
6501ab4d:	mov    edx,ecx
6501ab4f:	shr    ecx,0x2
6501ab52:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501ab54:	mov    ecx,edx
6501ab56:	and    ecx,0x3
6501ab59:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6501ab5b:	mov    eax,DWORD PTR [ebp+0x8]
6501ab5e:	mov    ebx,DWORD PTR [ebp-0x4]
6501ab61:	mov    esi,DWORD PTR [ebp-0x8]
6501ab64:	mov    edi,DWORD PTR [ebp-0xc]
6501ab67:	mov    esp,ebp
6501ab69:	pop    ebp
6501ab6a:	ret    
6501ab6b:	int3   
6501ab6c:	push   ebx
6501ab6d:	push   esi
6501ab6e:	push   edi
6501ab6f:	mov    edx,DWORD PTR [esp+0x10]
6501ab73:	mov    eax,DWORD PTR [esp+0x14]
6501ab77:	mov    ecx,DWORD PTR [esp+0x18]
6501ab7b:	push   ebp
6501ab7c:	push   edx
6501ab7d:	push   eax
6501ab7e:	push   ecx
6501ab7f:	push   ecx
6501ab80:	push   0x6501abfc
6501ab85:	push   DWORD PTR fs:0x0
6501ab8c:	mov    eax,ds:0x6502c09c
6501ab91:	xor    eax,esp
6501ab93:	mov    DWORD PTR [esp+0x8],eax
6501ab97:	mov    DWORD PTR fs:0x0,esp
6501ab9e:	mov    eax,DWORD PTR [esp+0x30]
6501aba2:	mov    ebx,DWORD PTR [eax+0x8]
6501aba5:	mov    ecx,DWORD PTR [esp+0x2c]
6501aba9:	xor    ebx,DWORD PTR [ecx]
6501abab:	mov    esi,DWORD PTR [eax+0xc]
6501abae:	cmp    esi,0xfffffffe
6501abb1:	je     0x6501abee
6501abb3:	mov    edx,DWORD PTR [esp+0x34]
6501abb7:	cmp    edx,0xfffffffe
6501abba:	je     0x6501abc0
6501abbc:	cmp    esi,edx
6501abbe:	jbe    0x6501abee
6501abc0:	lea    esi,[esi+esi*2]
6501abc3:	lea    ebx,[ebx+esi*4+0x10]
6501abc7:	mov    ecx,DWORD PTR [ebx]
6501abc9:	mov    DWORD PTR [eax+0xc],ecx
6501abcc:	cmp    DWORD PTR [ebx+0x4],0x0
6501abd0:	jne    0x6501ab9e
6501abd2:	push   0x101
6501abd7:	mov    eax,DWORD PTR [ebx+0x8]
6501abda:	call   0x6501b011
6501abdf:	mov    ecx,0x1
6501abe4:	mov    eax,DWORD PTR [ebx+0x8]
6501abe7:	call   0x6501b030
6501abec:	jmp    0x6501ab9e
6501abee:	pop    DWORD PTR fs:0x0
6501abf5:	add    esp,0x18
6501abf8:	pop    edi
6501abf9:	pop    esi
6501abfa:	pop    ebx
6501abfb:	ret    
6501abfc:	mov    ecx,DWORD PTR [esp+0x4]
6501ac00:	test   DWORD PTR [ecx+0x4],0x6
6501ac07:	mov    eax,0x1
6501ac0c:	je     0x6501ac41
6501ac0e:	mov    eax,DWORD PTR [esp+0x8]
6501ac12:	mov    ecx,DWORD PTR [eax+0x8]
6501ac15:	xor    ecx,eax
6501ac17:	call   0x650127bc
6501ac1c:	push   ebp
6501ac1d:	mov    ebp,DWORD PTR [eax+0x18]
6501ac20:	push   DWORD PTR [eax+0xc]
6501ac23:	push   DWORD PTR [eax+0x10]
6501ac26:	push   DWORD PTR [eax+0x14]
6501ac29:	call   0x6501ab6c
6501ac2e:	add    esp,0xc
6501ac31:	pop    ebp
6501ac32:	mov    eax,DWORD PTR [esp+0x8]
6501ac36:	mov    edx,DWORD PTR [esp+0x10]
6501ac3a:	mov    DWORD PTR [edx],eax
6501ac3c:	mov    eax,0x3
6501ac41:	ret    
6501ac42:	push   ebp
6501ac43:	mov    ecx,DWORD PTR [esp+0x8]
6501ac47:	mov    ebp,DWORD PTR [ecx]
6501ac49:	push   DWORD PTR [ecx+0x1c]
6501ac4c:	push   DWORD PTR [ecx+0x18]
6501ac4f:	push   DWORD PTR [ecx+0x28]
6501ac52:	call   0x6501ab6c
6501ac57:	add    esp,0xc
6501ac5a:	pop    ebp
6501ac5b:	ret    0x4
6501ac5e:	push   ebp
6501ac5f:	push   esi
6501ac60:	push   edi
6501ac61:	push   ebx
6501ac62:	mov    ebp,edx
6501ac64:	xor    eax,eax
6501ac66:	xor    ebx,ebx
6501ac68:	xor    edx,edx
6501ac6a:	xor    esi,esi
6501ac6c:	xor    edi,edi
6501ac6e:	call   ecx
6501ac70:	pop    ebx
6501ac71:	pop    edi
6501ac72:	pop    esi
6501ac73:	pop    ebp
6501ac74:	ret    
6501ac75:	mov    ebp,edx
6501ac77:	mov    esi,ecx
6501ac79:	mov    eax,ecx
6501ac7b:	push   0x1
6501ac7d:	call   0x6501b011
6501ac82:	xor    eax,eax
6501ac84:	xor    ebx,ebx
6501ac86:	xor    ecx,ecx
6501ac88:	xor    edx,edx
6501ac8a:	xor    edi,edi
6501ac8c:	jmp    esi
6501ac8e:	push   ebp
6501ac8f:	mov    ebp,esp
6501ac91:	push   ebx
6501ac92:	push   esi
6501ac93:	push   edi
6501ac94:	push   0x0
6501ac96:	push   0x0
6501ac98:	push   0x6501aca3
6501ac9d:	push   ecx
6501ac9e:	call   0x6501e99c
6501aca3:	pop    edi
6501aca4:	pop    esi
6501aca5:	pop    ebx
6501aca6:	pop    ebp
6501aca7:	ret    
6501aca8:	push   ebp
6501aca9:	mov    ebp,DWORD PTR [esp+0x8]
6501acad:	push   edx
6501acae:	push   ecx
6501acaf:	push   DWORD PTR [esp+0x14]
6501acb3:	call   0x6501ab6c
6501acb8:	add    esp,0xc
6501acbb:	pop    ebp
6501acbc:	ret    0x8
6501acbf:	int3   
6501acc0:	mov    ecx,DWORD PTR [esp+0x4]
6501acc4:	cmp    WORD PTR [ecx],0x5a4d
6501acc9:	je     0x6501acce
6501accb:	xor    eax,eax
6501accd:	ret    
6501acce:	mov    eax,DWORD PTR [ecx+0x3c]
6501acd1:	add    eax,ecx
6501acd3:	cmp    DWORD PTR [eax],0x4550
6501acd9:	jne    0x6501accb
6501acdb:	xor    ecx,ecx
6501acdd:	cmp    WORD PTR [eax+0x18],0x10b
6501ace3:	sete   cl
6501ace6:	mov    eax,ecx
6501ace8:	ret    
6501ace9:	int3   
6501acea:	int3   
6501aceb:	int3   
6501acec:	int3   
6501aced:	int3   
6501acee:	int3   
6501acef:	int3   
6501acf0:	mov    eax,DWORD PTR [esp+0x4]
6501acf4:	mov    ecx,DWORD PTR [eax+0x3c]
6501acf7:	add    ecx,eax
6501acf9:	movzx  eax,WORD PTR [ecx+0x14]
6501acfd:	push   ebx
6501acfe:	push   esi
6501acff:	movzx  esi,WORD PTR [ecx+0x6]
6501ad03:	xor    edx,edx
6501ad05:	test   esi,esi
6501ad07:	push   edi
6501ad08:	lea    eax,[eax+ecx*1+0x18]
6501ad0c:	jbe    0x6501ad2c
6501ad0e:	mov    edi,DWORD PTR [esp+0x14]
6501ad12:	mov    ecx,DWORD PTR [eax+0xc]
6501ad15:	cmp    edi,ecx
6501ad17:	jb     0x6501ad22
6501ad19:	mov    ebx,DWORD PTR [eax+0x8]
6501ad1c:	add    ebx,ecx
6501ad1e:	cmp    edi,ebx
6501ad20:	jb     0x6501ad2e
6501ad22:	add    edx,0x1
6501ad25:	add    eax,0x28
6501ad28:	cmp    edx,esi
6501ad2a:	jb     0x6501ad12
6501ad2c:	xor    eax,eax
6501ad2e:	pop    edi
6501ad2f:	pop    esi
6501ad30:	pop    ebx
6501ad31:	ret    
6501ad32:	int3   
6501ad33:	int3   
6501ad34:	int3   
6501ad35:	int3   
6501ad36:	int3   
6501ad37:	int3   
6501ad38:	int3   
6501ad39:	int3   
6501ad3a:	int3   
6501ad3b:	int3   
6501ad3c:	int3   
6501ad3d:	int3   
6501ad3e:	int3   
6501ad3f:	int3   
6501ad40:	push   ebp
6501ad41:	mov    ebp,esp
6501ad43:	push   0xfffffffe
6501ad45:	push   0x65029bc0
6501ad4a:	push   0x65013d60
6501ad4f:	mov    eax,fs:0x0
6501ad55:	push   eax
6501ad56:	sub    esp,0x8
6501ad59:	push   ebx
6501ad5a:	push   esi
6501ad5b:	push   edi
6501ad5c:	mov    eax,ds:0x6502c09c
6501ad61:	xor    DWORD PTR [ebp-0x8],eax
6501ad64:	xor    eax,ebp
6501ad66:	push   eax
6501ad67:	lea    eax,[ebp-0x10]
6501ad6a:	mov    fs:0x0,eax
6501ad70:	mov    DWORD PTR [ebp-0x18],esp
6501ad73:	mov    DWORD PTR [ebp-0x4],0x0
6501ad7a:	push   0x65000000
6501ad7f:	call   0x6501acc0
6501ad84:	add    esp,0x4
6501ad87:	test   eax,eax
6501ad89:	je     0x6501ade0
6501ad8b:	mov    eax,DWORD PTR [ebp+0x8]
6501ad8e:	sub    eax,0x65000000
6501ad93:	push   eax
6501ad94:	push   0x65000000
6501ad99:	call   0x6501acf0
6501ad9e:	add    esp,0x8
6501ada1:	test   eax,eax
6501ada3:	je     0x6501ade0
6501ada5:	mov    eax,DWORD PTR [eax+0x24]
6501ada8:	shr    eax,0x1f
6501adab:	not    eax
6501adad:	and    eax,0x1
6501adb0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501adb7:	mov    ecx,DWORD PTR [ebp-0x10]
6501adba:	mov    DWORD PTR fs:0x0,ecx
6501adc1:	pop    ecx
6501adc2:	pop    edi
6501adc3:	pop    esi
6501adc4:	pop    ebx
6501adc5:	mov    esp,ebp
6501adc7:	pop    ebp
6501adc8:	ret    
6501adc9:	mov    eax,DWORD PTR [ebp-0x14]
6501adcc:	mov    ecx,DWORD PTR [eax]
6501adce:	mov    eax,DWORD PTR [ecx]
6501add0:	xor    edx,edx
6501add2:	cmp    eax,0xc0000005
6501add7:	sete   dl
6501adda:	mov    eax,edx
6501addc:	ret    
6501addd:	mov    esp,DWORD PTR [ebp-0x18]
6501ade0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501ade7:	xor    eax,eax
6501ade9:	mov    ecx,DWORD PTR [ebp-0x10]
6501adec:	mov    DWORD PTR fs:0x0,ecx
6501adf3:	pop    ecx
6501adf4:	pop    edi
6501adf5:	pop    esi
6501adf6:	pop    ebx
6501adf7:	mov    esp,ebp
6501adf9:	pop    ebp
6501adfa:	ret    
6501adfb:	xor    eax,eax
6501adfd:	inc    eax
6501adfe:	cmp    DWORD PTR [esp+0x4],0x0
6501ae03:	jne    0x6501ae07
6501ae05:	xor    eax,eax
6501ae07:	ret    
6501ae08:	push   ebp
6501ae09:	lea    ebp,[esp-0x2a8]
6501ae10:	sub    esp,0x328
6501ae16:	mov    eax,ds:0x6502c09c
6501ae1b:	xor    eax,ebp
6501ae1d:	mov    DWORD PTR [ebp+0x2a4],eax
6501ae23:	test   BYTE PTR ds:0x6502cb30,0x1
6501ae2a:	push   esi
6501ae2b:	je     0x6501ae35
6501ae2d:	push   0xa
6501ae2f:	call   0x6501a828
6501ae34:	pop    ecx
6501ae35:	call   0x6501b1bd
6501ae3a:	test   eax,eax
6501ae3c:	je     0x6501ae46
6501ae3e:	push   0x16
6501ae40:	call   0x6501b1ca
6501ae45:	pop    ecx
6501ae46:	test   BYTE PTR ds:0x6502cb30,0x2
6501ae4d:	je     0x6501aef3
6501ae53:	mov    DWORD PTR [ebp+0x88],eax
6501ae59:	mov    DWORD PTR [ebp+0x84],ecx
6501ae5f:	mov    DWORD PTR [ebp+0x80],edx
6501ae65:	mov    DWORD PTR [ebp+0x7c],ebx
6501ae68:	mov    DWORD PTR [ebp+0x78],esi
6501ae6b:	mov    DWORD PTR [ebp+0x74],edi
6501ae6e:	data16 mov WORD PTR [ebp+0xa0],ss
6501ae75:	data16 mov WORD PTR [ebp+0x94],cs
6501ae7c:	data16 mov WORD PTR [ebp+0x70],ds
6501ae80:	data16 mov WORD PTR [ebp+0x6c],es
6501ae84:	data16 mov WORD PTR [ebp+0x68],fs
6501ae88:	data16 mov WORD PTR [ebp+0x64],gs
6501ae8c:	pushf  
6501ae8d:	pop    DWORD PTR [ebp+0x98]
6501ae93:	mov    esi,DWORD PTR [ebp+0x2ac]
6501ae99:	lea    eax,[ebp+0x2ac]
6501ae9f:	mov    DWORD PTR [ebp+0x9c],eax
6501aea5:	mov    DWORD PTR [ebp-0x28],0x10001
6501aeac:	mov    DWORD PTR [ebp+0x90],esi
6501aeb2:	mov    eax,DWORD PTR [eax-0x4]
6501aeb5:	push   0x50
6501aeb7:	mov    DWORD PTR [ebp+0x8c],eax
6501aebd:	lea    eax,[ebp-0x80]
6501aec0:	push   0x0
6501aec2:	push   eax
6501aec3:	call   0x65012e40
6501aec8:	lea    eax,[ebp-0x80]
6501aecb:	add    esp,0xc
6501aece:	mov    DWORD PTR [ebp-0x30],eax
6501aed1:	lea    eax,[ebp-0x28]
6501aed4:	push   0x0
6501aed6:	mov    DWORD PTR [ebp-0x80],0x40000015
6501aedd:	mov    DWORD PTR [ebp-0x74],esi
6501aee0:	mov    DWORD PTR [ebp-0x2c],eax
6501aee3:	call   DWORD PTR ds:0x65024110
6501aee9:	lea    eax,[ebp-0x30]
6501aeec:	push   eax
6501aeed:	call   DWORD PTR ds:0x6502410c
6501aef3:	push   0x3
6501aef5:	call   0x65015e16
6501aefa:	int3   
6501aefb:	int3   
6501aefc:	push   ebp
6501aefd:	mov    ebp,esp
6501aeff:	push   ebx
6501af00:	push   esi
6501af01:	push   edi
6501af02:	push   ebp
6501af03:	push   0x0
6501af05:	push   0x0
6501af07:	push   0x6501af14
6501af0c:	push   DWORD PTR [ebp+0x8]
6501af0f:	call   0x6501e99c
6501af14:	pop    ebp
6501af15:	pop    edi
6501af16:	pop    esi
6501af17:	pop    ebx
6501af18:	mov    esp,ebp
6501af1a:	pop    ebp
6501af1b:	ret    
6501af1c:	mov    ecx,DWORD PTR [esp+0x4]
6501af20:	test   DWORD PTR [ecx+0x4],0x6
6501af27:	mov    eax,0x1
6501af2c:	je     0x6501af60
6501af2e:	mov    eax,DWORD PTR [esp+0x14]
6501af32:	mov    ecx,DWORD PTR [eax-0x4]
6501af35:	xor    ecx,eax
6501af37:	call   0x650127bc
6501af3c:	push   ebp
6501af3d:	mov    ebp,DWORD PTR [eax+0x10]
6501af40:	mov    edx,DWORD PTR [eax+0x28]
6501af43:	push   edx
6501af44:	mov    edx,DWORD PTR [eax+0x24]
6501af47:	push   edx
6501af48:	call   0x6501af61
6501af4d:	add    esp,0x8
6501af50:	pop    ebp
6501af51:	mov    eax,DWORD PTR [esp+0x8]
6501af55:	mov    edx,DWORD PTR [esp+0x10]
6501af59:	mov    DWORD PTR [edx],eax
6501af5b:	mov    eax,0x3
6501af60:	ret    
6501af61:	push   ebx
6501af62:	push   esi
6501af63:	push   edi
6501af64:	mov    eax,DWORD PTR [esp+0x10]
6501af68:	push   ebp
6501af69:	push   eax
6501af6a:	push   0xfffffffe
6501af6c:	push   0x6501af1c
6501af71:	push   DWORD PTR fs:0x0
6501af78:	mov    eax,ds:0x6502c09c
6501af7d:	xor    eax,esp
6501af7f:	push   eax
6501af80:	lea    eax,[esp+0x4]
6501af84:	mov    fs:0x0,eax
6501af8a:	mov    eax,DWORD PTR [esp+0x28]
6501af8e:	mov    ebx,DWORD PTR [eax+0x8]
6501af91:	mov    esi,DWORD PTR [eax+0xc]
6501af94:	cmp    esi,0xffffffff
6501af97:	je     0x6501afd3
6501af99:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6501af9e:	je     0x6501afa6
6501afa0:	cmp    esi,DWORD PTR [esp+0x2c]
6501afa4:	jbe    0x6501afd3
6501afa6:	lea    esi,[esi+esi*2]
6501afa9:	mov    ecx,DWORD PTR [ebx+esi*4]
6501afac:	mov    DWORD PTR [esp+0xc],ecx
6501afb0:	mov    DWORD PTR [eax+0xc],ecx
6501afb3:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6501afb8:	jne    0x6501afd1
6501afba:	push   0x101
6501afbf:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6501afc3:	call   0x6501b011
6501afc8:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6501afcc:	call   0x6501b030
6501afd1:	jmp    0x6501af8a
6501afd3:	mov    ecx,DWORD PTR [esp+0x4]
6501afd7:	mov    DWORD PTR fs:0x0,ecx
6501afde:	add    esp,0x18
6501afe1:	pop    edi
6501afe2:	pop    esi
6501afe3:	pop    ebx
6501afe4:	ret    
6501afe5:	xor    eax,eax
6501afe7:	mov    ecx,DWORD PTR fs:0x0
6501afee:	cmp    DWORD PTR [ecx+0x4],0x6501af1c
6501aff5:	jne    0x6501b007
6501aff7:	mov    edx,DWORD PTR [ecx+0xc]
6501affa:	mov    edx,DWORD PTR [edx+0xc]
6501affd:	cmp    DWORD PTR [ecx+0x8],edx
6501b000:	jne    0x6501b007
6501b002:	mov    eax,0x1
6501b007:	ret    
6501b008:	push   ebx
6501b009:	push   ecx
6501b00a:	mov    ebx,0x6502cb34
6501b00f:	jmp    0x6501b01c
6501b011:	push   ebx
6501b012:	push   ecx
6501b013:	mov    ebx,0x6502cb34
6501b018:	mov    ecx,DWORD PTR [esp+0xc]
6501b01c:	mov    DWORD PTR [ebx+0x8],ecx
6501b01f:	mov    DWORD PTR [ebx+0x4],eax
6501b022:	mov    DWORD PTR [ebx+0xc],ebp
6501b025:	push   ebp
6501b026:	push   ecx
6501b027:	push   eax
6501b028:	pop    eax
6501b029:	pop    ecx
6501b02a:	pop    ebp
6501b02b:	pop    ecx
6501b02c:	pop    ebx
6501b02d:	ret    0x4
6501b030:	call   eax
6501b032:	ret    
6501b033:	push   0xc
6501b035:	push   0x65029be0
6501b03a:	call   0x65013d00
6501b03f:	mov    ecx,DWORD PTR [ebp+0x8]
6501b042:	xor    edi,edi
6501b044:	cmp    ecx,edi
6501b046:	jbe    0x6501b076
6501b048:	push   0xffffffe0
6501b04a:	pop    eax
6501b04b:	xor    edx,edx
6501b04d:	div    ecx
6501b04f:	cmp    eax,DWORD PTR [ebp+0xc]
6501b052:	sbb    eax,eax
6501b054:	inc    eax
6501b055:	jne    0x6501b076
6501b057:	call   0x65014400
6501b05c:	mov    DWORD PTR [eax],0xc
6501b062:	push   edi
6501b063:	push   edi
6501b064:	push   edi
6501b065:	push   edi
6501b066:	push   edi
6501b067:	call   0x650122af
6501b06c:	add    esp,0x14
6501b06f:	xor    eax,eax
6501b071:	jmp    0x6501b14b
6501b076:	imul   ecx,DWORD PTR [ebp+0xc]
6501b07a:	mov    esi,ecx
6501b07c:	mov    DWORD PTR [ebp+0x8],esi
6501b07f:	cmp    esi,edi
6501b081:	jne    0x6501b086
6501b083:	xor    esi,esi
6501b085:	inc    esi
6501b086:	xor    ebx,ebx
6501b088:	mov    DWORD PTR [ebp-0x1c],ebx
6501b08b:	cmp    esi,0xffffffe0
6501b08e:	ja     0x6501b0f9
6501b090:	cmp    DWORD PTR ds:0x6503143c,0x3
6501b097:	jne    0x6501b0e4
6501b099:	add    esi,0xf
6501b09c:	and    esi,0xfffffff0
6501b09f:	mov    DWORD PTR [ebp+0xc],esi
6501b0a2:	mov    eax,DWORD PTR [ebp+0x8]
6501b0a5:	cmp    eax,DWORD PTR ds:0x6503142c
6501b0ab:	ja     0x6501b0e4
6501b0ad:	push   0x4
6501b0af:	call   0x65019cf8
6501b0b4:	pop    ecx
6501b0b5:	mov    DWORD PTR [ebp-0x4],edi
6501b0b8:	push   DWORD PTR [ebp+0x8]
6501b0bb:	call   0x6501a545
6501b0c0:	pop    ecx
6501b0c1:	mov    DWORD PTR [ebp-0x1c],eax
6501b0c4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501b0cb:	call   0x6501b12f
6501b0d0:	mov    ebx,DWORD PTR [ebp-0x1c]
6501b0d3:	cmp    ebx,edi
6501b0d5:	je     0x6501b0e8
6501b0d7:	push   DWORD PTR [ebp+0x8]
6501b0da:	push   edi
6501b0db:	push   ebx
6501b0dc:	call   0x65012e40
6501b0e1:	add    esp,0xc
6501b0e4:	cmp    ebx,edi
6501b0e6:	jne    0x6501b149
6501b0e8:	push   esi
6501b0e9:	push   0x8
6501b0eb:	push   DWORD PTR ds:0x6502da8c
6501b0f1:	call   DWORD PTR ds:0x650240f4
6501b0f7:	mov    ebx,eax
6501b0f9:	cmp    ebx,edi
6501b0fb:	jne    0x6501b149
6501b0fd:	cmp    DWORD PTR ds:0x6502df04,edi
6501b103:	je     0x6501b138
6501b105:	push   esi
6501b106:	call   0x65014a7b
6501b10b:	pop    ecx
6501b10c:	test   eax,eax
6501b10e:	jne    0x6501b086
6501b114:	mov    eax,DWORD PTR [ebp+0x10]
6501b117:	cmp    eax,edi
6501b119:	je     0x6501b06f
6501b11f:	mov    DWORD PTR [eax],0xc
6501b125:	jmp    0x6501b06f
6501b12a:	xor    edi,edi
6501b12c:	mov    esi,DWORD PTR [ebp+0xc]
6501b12f:	push   0x4
6501b131:	call   0x65019c20
6501b136:	pop    ecx
6501b137:	ret    
6501b138:	cmp    ebx,edi
6501b13a:	jne    0x6501b149
6501b13c:	mov    eax,DWORD PTR [ebp+0x10]
6501b13f:	cmp    eax,edi
6501b141:	je     0x6501b149
6501b143:	mov    DWORD PTR [eax],0xc
6501b149:	mov    eax,ebx
6501b14b:	call   0x65013d45
6501b150:	ret    
6501b151:	push   esi
6501b152:	push   edi
6501b153:	xor    edi,edi
6501b155:	lea    esi,[edi+0x6502cb44]
6501b15b:	push   DWORD PTR [esi]
6501b15d:	call   0x650144b8
6501b162:	add    edi,0x4
6501b165:	cmp    edi,0x28
6501b168:	pop    ecx
6501b169:	mov    DWORD PTR [esi],eax
6501b16b:	jb     0x6501b155
6501b16d:	pop    edi
6501b16e:	pop    esi
6501b16f:	ret    
6501b170:	mov    eax,DWORD PTR [esp+0x4]
6501b174:	mov    ds:0x6502df44,eax
6501b179:	mov    ds:0x6502df48,eax
6501b17e:	mov    ds:0x6502df4c,eax
6501b183:	mov    ds:0x6502df50,eax
6501b188:	ret    
6501b189:	mov    eax,DWORD PTR [esp+0x4]
6501b18d:	mov    ecx,DWORD PTR ds:0x6502c94c
6501b193:	push   esi
6501b194:	cmp    DWORD PTR [eax+0x4],edx
6501b197:	je     0x6501b1a9
6501b199:	mov    esi,ecx
6501b19b:	imul   esi,esi,0xc
6501b19e:	add    esi,DWORD PTR [esp+0x8]
6501b1a2:	add    eax,0xc
6501b1a5:	cmp    eax,esi
6501b1a7:	jb     0x6501b194
6501b1a9:	imul   ecx,ecx,0xc
6501b1ac:	add    ecx,DWORD PTR [esp+0x8]
6501b1b0:	pop    esi
6501b1b1:	cmp    eax,ecx
6501b1b3:	jae    0x6501b1ba
6501b1b5:	cmp    DWORD PTR [eax+0x4],edx
6501b1b8:	je     0x6501b1bc
6501b1ba:	xor    eax,eax
6501b1bc:	ret    
6501b1bd:	push   DWORD PTR ds:0x6502df4c
6501b1c3:	call   0x6501452f
6501b1c8:	pop    ecx
6501b1c9:	ret    
6501b1ca:	push   0x20
6501b1cc:	push   0x65029c00
6501b1d1:	call   0x65013d00
6501b1d6:	xor    edi,edi
6501b1d8:	mov    DWORD PTR [ebp-0x1c],edi
6501b1db:	mov    DWORD PTR [ebp-0x28],edi
6501b1de:	mov    ebx,DWORD PTR [ebp+0x8]
6501b1e1:	cmp    ebx,0xb
6501b1e4:	jg     0x6501b232
6501b1e6:	je     0x6501b1fd
6501b1e8:	mov    eax,ebx
6501b1ea:	push   0x2
6501b1ec:	pop    ecx
6501b1ed:	sub    eax,ecx
6501b1ef:	je     0x6501b213
6501b1f1:	sub    eax,ecx
6501b1f3:	je     0x6501b1fd
6501b1f5:	sub    eax,ecx
6501b1f7:	je     0x6501b25d
6501b1f9:	sub    eax,ecx
6501b1fb:	jne    0x6501b241
6501b1fd:	call   0x650146d4
6501b202:	mov    edi,eax
6501b204:	mov    DWORD PTR [ebp-0x28],edi
6501b207:	test   edi,edi
6501b209:	jne    0x6501b21f
6501b20b:	or     eax,0xffffffff
6501b20e:	jmp    0x6501b374
6501b213:	mov    esi,0x6502df44
6501b218:	mov    eax,ds:0x6502df44
6501b21d:	jmp    0x6501b27f
6501b21f:	push   DWORD PTR [edi+0x5c]
6501b222:	mov    edx,ebx
6501b224:	call   0x6501b189
6501b229:	mov    esi,eax
6501b22b:	add    esi,0x8
6501b22e:	mov    eax,DWORD PTR [esi]
6501b230:	jmp    0x6501b28c
6501b232:	mov    eax,ebx
6501b234:	sub    eax,0xf
6501b237:	je     0x6501b275
6501b239:	sub    eax,0x6
6501b23c:	je     0x6501b269
6501b23e:	dec    eax
6501b23f:	je     0x6501b25d
6501b241:	call   0x65014400
6501b246:	mov    DWORD PTR [eax],0x16
6501b24c:	xor    eax,eax
6501b24e:	push   eax
6501b24f:	push   eax
6501b250:	push   eax
6501b251:	push   eax
6501b252:	push   eax
6501b253:	call   0x650122af
6501b258:	add    esp,0x14
6501b25b:	jmp    0x6501b20b
6501b25d:	mov    esi,0x6502df4c
6501b262:	mov    eax,ds:0x6502df4c
6501b267:	jmp    0x6501b27f
6501b269:	mov    esi,0x6502df48
6501b26e:	mov    eax,ds:0x6502df48
6501b273:	jmp    0x6501b27f
6501b275:	mov    esi,0x6502df50
6501b27a:	mov    eax,ds:0x6502df50
6501b27f:	mov    DWORD PTR [ebp-0x1c],0x1
6501b286:	push   eax
6501b287:	call   0x6501452f
6501b28c:	mov    DWORD PTR [ebp-0x20],eax
6501b28f:	pop    ecx
6501b290:	xor    eax,eax
6501b292:	cmp    DWORD PTR [ebp-0x20],0x1
6501b296:	je     0x6501b374
6501b29c:	cmp    DWORD PTR [ebp-0x20],eax
6501b29f:	jne    0x6501b2a8
6501b2a1:	push   0x3
6501b2a3:	call   0x65015e16
6501b2a8:	cmp    DWORD PTR [ebp-0x1c],eax
6501b2ab:	je     0x6501b2b4
6501b2ad:	push   eax
6501b2ae:	call   0x65019cf8
6501b2b3:	pop    ecx
6501b2b4:	xor    eax,eax
6501b2b6:	mov    DWORD PTR [ebp-0x4],eax
6501b2b9:	cmp    ebx,0x8
6501b2bc:	je     0x6501b2c8
6501b2be:	cmp    ebx,0xb
6501b2c1:	je     0x6501b2c8
6501b2c3:	cmp    ebx,0x4
6501b2c6:	jne    0x6501b2e3
6501b2c8:	mov    ecx,DWORD PTR [edi+0x60]
6501b2cb:	mov    DWORD PTR [ebp-0x2c],ecx
6501b2ce:	mov    DWORD PTR [edi+0x60],eax
6501b2d1:	cmp    ebx,0x8
6501b2d4:	jne    0x6501b316
6501b2d6:	mov    ecx,DWORD PTR [edi+0x64]
6501b2d9:	mov    DWORD PTR [ebp-0x30],ecx
6501b2dc:	mov    DWORD PTR [edi+0x64],0x8c
6501b2e3:	cmp    ebx,0x8
6501b2e6:	jne    0x6501b316
6501b2e8:	mov    ecx,DWORD PTR ds:0x6502c940
6501b2ee:	mov    DWORD PTR [ebp-0x24],ecx
6501b2f1:	mov    ecx,DWORD PTR ds:0x6502c944
6501b2f7:	mov    edx,DWORD PTR ds:0x6502c940
6501b2fd:	add    ecx,edx
6501b2ff:	cmp    DWORD PTR [ebp-0x24],ecx
6501b302:	jge    0x6501b31d
6501b304:	mov    ecx,DWORD PTR [ebp-0x24]
6501b307:	imul   ecx,ecx,0xc
6501b30a:	mov    edx,DWORD PTR [edi+0x5c]
6501b30d:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6501b311:	inc    DWORD PTR [ebp-0x24]
6501b314:	jmp    0x6501b2f1
6501b316:	call   0x65014526
6501b31b:	mov    DWORD PTR [esi],eax
6501b31d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501b324:	call   0x6501b33e
6501b329:	cmp    ebx,0x8
6501b32c:	jne    0x6501b34d
6501b32e:	push   DWORD PTR [edi+0x64]
6501b331:	push   ebx
6501b332:	call   DWORD PTR [ebp-0x20]
6501b335:	pop    ecx
6501b336:	jmp    0x6501b351
6501b338:	mov    ebx,DWORD PTR [ebp+0x8]
6501b33b:	mov    edi,DWORD PTR [ebp-0x28]
6501b33e:	cmp    DWORD PTR [ebp-0x1c],0x0
6501b342:	je     0x6501b34c
6501b344:	push   0x0
6501b346:	call   0x65019c20
6501b34b:	pop    ecx
6501b34c:	ret    
6501b34d:	push   ebx
6501b34e:	call   DWORD PTR [ebp-0x20]
6501b351:	pop    ecx
6501b352:	cmp    ebx,0x8
6501b355:	je     0x6501b361
6501b357:	cmp    ebx,0xb
6501b35a:	je     0x6501b361
6501b35c:	cmp    ebx,0x4
6501b35f:	jne    0x6501b372
6501b361:	mov    eax,DWORD PTR [ebp-0x2c]
6501b364:	mov    DWORD PTR [edi+0x60],eax
6501b367:	cmp    ebx,0x8
6501b36a:	jne    0x6501b372
6501b36c:	mov    eax,DWORD PTR [ebp-0x30]
6501b36f:	mov    DWORD PTR [edi+0x64],eax
6501b372:	xor    eax,eax
6501b374:	call   0x65013d45
6501b379:	ret    
6501b37a:	mov    eax,DWORD PTR [esp+0x4]
6501b37e:	mov    ds:0x6502df58,eax
6501b383:	ret    
6501b384:	mov    eax,DWORD PTR [esp+0x4]
6501b388:	mov    ds:0x6502df64,eax
6501b38d:	ret    
6501b38e:	mov    eax,DWORD PTR [esp+0x4]
6501b392:	mov    ds:0x6502df68,eax
6501b397:	ret    
6501b398:	push   DWORD PTR [esp+0x4]
6501b39c:	call   DWORD PTR ds:0x6502401c
6501b3a2:	xor    eax,eax
6501b3a4:	inc    eax
6501b3a5:	ret    0x8
6501b3a8:	push   0x14
6501b3aa:	push   0x65029c20
6501b3af:	call   0x65013d00
6501b3b4:	xor    edi,edi
6501b3b6:	mov    DWORD PTR [ebp-0x1c],edi
6501b3b9:	push   DWORD PTR ds:0x6502df68
6501b3bf:	call   0x6501452f
6501b3c4:	pop    ecx
6501b3c5:	mov    esi,eax
6501b3c7:	cmp    esi,edi
6501b3c9:	jne    0x6501b41e
6501b3cb:	lea    eax,[ebp-0x1c]
6501b3ce:	push   eax
6501b3cf:	call   0x65015c2f
6501b3d4:	pop    ecx
6501b3d5:	cmp    eax,edi
6501b3d7:	je     0x6501b3e6
6501b3d9:	push   edi
6501b3da:	push   edi
6501b3db:	push   edi
6501b3dc:	push   edi
6501b3dd:	push   edi
6501b3de:	call   0x650121b3
6501b3e3:	add    esp,0x14
6501b3e6:	cmp    DWORD PTR [ebp-0x1c],0x1
6501b3ea:	je     0x6501b40d
6501b3ec:	push   0x65025b50
6501b3f1:	call   DWORD PTR ds:0x65024124
6501b3f7:	cmp    eax,edi
6501b3f9:	je     0x6501b40d
6501b3fb:	push   0x65025b28
6501b400:	push   eax
6501b401:	call   DWORD PTR ds:0x65024014
6501b407:	mov    esi,eax
6501b409:	cmp    esi,edi
6501b40b:	jne    0x6501b412
6501b40d:	mov    esi,0x6501b398
6501b412:	push   esi
6501b413:	call   0x650144b8
6501b418:	pop    ecx
6501b419:	mov    ds:0x6502df68,eax
6501b41e:	mov    DWORD PTR [ebp-0x4],edi
6501b421:	push   DWORD PTR [ebp+0xc]
6501b424:	push   DWORD PTR [ebp+0x8]
6501b427:	call   esi
6501b429:	mov    DWORD PTR [ebp-0x20],eax
6501b42c:	jmp    0x6501b45d
6501b42e:	mov    eax,DWORD PTR [ebp-0x14]
6501b431:	mov    eax,DWORD PTR [eax]
6501b433:	mov    eax,DWORD PTR [eax]
6501b435:	mov    DWORD PTR [ebp-0x24],eax
6501b438:	xor    ecx,ecx
6501b43a:	cmp    eax,0xc0000017
6501b43f:	sete   cl
6501b442:	mov    eax,ecx
6501b444:	ret    
6501b445:	mov    esp,DWORD PTR [ebp-0x18]
6501b448:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6501b44f:	jne    0x6501b459
6501b451:	push   0x8
6501b453:	call   DWORD PTR ds:0x6502405c
6501b459:	and    DWORD PTR [ebp-0x20],0x0
6501b45d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501b464:	mov    eax,DWORD PTR [ebp-0x20]
6501b467:	call   0x65013d45
6501b46c:	ret    
6501b46d:	push   ebp
6501b46e:	mov    ebp,esp
6501b470:	push   ecx
6501b471:	push   ecx
6501b472:	mov    eax,ds:0x6502c09c
6501b477:	xor    eax,ebp
6501b479:	mov    DWORD PTR [ebp-0x4],eax
6501b47c:	mov    eax,ds:0x6502df6c
6501b481:	push   ebx
6501b482:	push   esi
6501b483:	xor    ebx,ebx
6501b485:	cmp    eax,ebx
6501b487:	push   edi
6501b488:	mov    edi,ecx
6501b48a:	jne    0x6501b4c6
6501b48c:	lea    eax,[ebp-0x8]
6501b48f:	push   eax
6501b490:	xor    esi,esi
6501b492:	inc    esi
6501b493:	push   esi
6501b494:	push   0x650266c8
6501b499:	push   esi
6501b49a:	call   DWORD PTR ds:0x650240bc
6501b4a0:	test   eax,eax
6501b4a2:	je     0x6501b4ac
6501b4a4:	mov    DWORD PTR ds:0x6502df6c,esi
6501b4aa:	jmp    0x6501b4e0
6501b4ac:	call   DWORD PTR ds:0x65024044
6501b4b2:	cmp    eax,0x78
6501b4b5:	jne    0x6501b4c1
6501b4b7:	push   0x2
6501b4b9:	pop    eax
6501b4ba:	mov    ds:0x6502df6c,eax
6501b4bf:	jmp    0x6501b4c6
6501b4c1:	mov    eax,ds:0x6502df6c
6501b4c6:	cmp    eax,0x2
6501b4c9:	je     0x6501b59e
6501b4cf:	cmp    eax,ebx
6501b4d1:	je     0x6501b59e
6501b4d7:	cmp    eax,0x1
6501b4da:	jne    0x6501b5c8
6501b4e0:	cmp    DWORD PTR [ebp+0x18],ebx
6501b4e3:	mov    DWORD PTR [ebp-0x8],ebx
6501b4e6:	jne    0x6501b4f0
6501b4e8:	mov    eax,DWORD PTR [edi]
6501b4ea:	mov    eax,DWORD PTR [eax+0x4]
6501b4ed:	mov    DWORD PTR [ebp+0x18],eax
6501b4f0:	mov    esi,DWORD PTR ds:0x65024024
6501b4f6:	xor    eax,eax
6501b4f8:	cmp    DWORD PTR [ebp+0x20],ebx
6501b4fb:	push   ebx
6501b4fc:	push   ebx
6501b4fd:	push   DWORD PTR [ebp+0x10]
6501b500:	setne  al
6501b503:	push   DWORD PTR [ebp+0xc]
6501b506:	lea    eax,[eax*8+0x1]
6501b50d:	push   eax
6501b50e:	push   DWORD PTR [ebp+0x18]
6501b511:	call   esi
6501b513:	mov    edi,eax
6501b515:	cmp    edi,ebx
6501b517:	je     0x6501b5c8
6501b51d:	jle    0x6501b55b
6501b51f:	cmp    edi,0x7ffffff0
6501b525:	ja     0x6501b55b
6501b527:	lea    eax,[edi+edi*1+0x8]
6501b52b:	cmp    eax,0x400
6501b530:	ja     0x6501b545
6501b532:	call   0x65012ec0
6501b537:	mov    eax,esp
6501b539:	cmp    eax,ebx
6501b53b:	je     0x6501b559
6501b53d:	mov    DWORD PTR [eax],0xcccc
6501b543:	jmp    0x6501b556
6501b545:	push   eax
6501b546:	call   0x650136b3
6501b54b:	cmp    eax,ebx
6501b54d:	pop    ecx
6501b54e:	je     0x6501b559
6501b550:	mov    DWORD PTR [eax],0xdddd
6501b556:	add    eax,0x8
6501b559:	mov    ebx,eax
6501b55b:	test   ebx,ebx
6501b55d:	je     0x6501b5c8
6501b55f:	lea    eax,[edi+edi*1]
6501b562:	push   eax
6501b563:	push   0x0
6501b565:	push   ebx
6501b566:	call   0x65012e40
6501b56b:	add    esp,0xc
6501b56e:	push   edi
6501b56f:	push   ebx
6501b570:	push   DWORD PTR [ebp+0x10]
6501b573:	push   DWORD PTR [ebp+0xc]
6501b576:	push   0x1
6501b578:	push   DWORD PTR [ebp+0x18]
6501b57b:	call   esi
6501b57d:	test   eax,eax
6501b57f:	je     0x6501b592
6501b581:	push   DWORD PTR [ebp+0x14]
6501b584:	push   eax
6501b585:	push   ebx
6501b586:	push   DWORD PTR [ebp+0x8]
6501b589:	call   DWORD PTR ds:0x650240bc
6501b58f:	mov    DWORD PTR [ebp-0x8],eax
6501b592:	push   ebx
6501b593:	call   0x65012c52
6501b598:	mov    eax,DWORD PTR [ebp-0x8]
6501b59b:	pop    ecx
6501b59c:	jmp    0x6501b613
6501b59e:	xor    esi,esi
6501b5a0:	cmp    DWORD PTR [ebp+0x1c],ebx
6501b5a3:	jne    0x6501b5ad
6501b5a5:	mov    eax,DWORD PTR [edi]
6501b5a7:	mov    eax,DWORD PTR [eax+0x14]
6501b5aa:	mov    DWORD PTR [ebp+0x1c],eax
6501b5ad:	cmp    DWORD PTR [ebp+0x18],ebx
6501b5b0:	jne    0x6501b5ba
6501b5b2:	mov    eax,DWORD PTR [edi]
6501b5b4:	mov    eax,DWORD PTR [eax+0x4]
6501b5b7:	mov    DWORD PTR [ebp+0x18],eax
6501b5ba:	push   DWORD PTR [ebp+0x1c]
6501b5bd:	call   0x6501d29f
6501b5c2:	cmp    eax,0xffffffff
6501b5c5:	pop    ecx
6501b5c6:	jne    0x6501b5cc
6501b5c8:	xor    eax,eax
6501b5ca:	jmp    0x6501b613
6501b5cc:	cmp    eax,DWORD PTR [ebp+0x18]
6501b5cf:	je     0x6501b5ef
6501b5d1:	push   ebx
6501b5d2:	push   ebx
6501b5d3:	lea    ecx,[ebp+0x10]
6501b5d6:	push   ecx
6501b5d7:	push   DWORD PTR [ebp+0xc]
6501b5da:	push   eax
6501b5db:	push   DWORD PTR [ebp+0x18]
6501b5de:	call   0x6501d2e6
6501b5e3:	mov    esi,eax
6501b5e5:	add    esp,0x18
6501b5e8:	cmp    esi,ebx
6501b5ea:	je     0x6501b5c8
6501b5ec:	mov    DWORD PTR [ebp+0xc],esi
6501b5ef:	push   DWORD PTR [ebp+0x14]
6501b5f2:	push   DWORD PTR [ebp+0x10]
6501b5f5:	push   DWORD PTR [ebp+0xc]
6501b5f8:	push   DWORD PTR [ebp+0x8]
6501b5fb:	push   DWORD PTR [ebp+0x1c]
6501b5fe:	call   DWORD PTR ds:0x650240c0
6501b604:	cmp    esi,ebx
6501b606:	mov    edi,eax
6501b608:	je     0x6501b611
6501b60a:	push   esi
6501b60b:	call   0x650135d6
6501b610:	pop    ecx
6501b611:	mov    eax,edi
6501b613:	lea    esp,[ebp-0x14]
6501b616:	pop    edi
6501b617:	pop    esi
6501b618:	pop    ebx
6501b619:	mov    ecx,DWORD PTR [ebp-0x4]
6501b61c:	xor    ecx,ebp
6501b61e:	call   0x650127bc
6501b623:	leave  
6501b624:	ret    
6501b625:	push   ebp
6501b626:	mov    ebp,esp
6501b628:	sub    esp,0x10
6501b62b:	push   DWORD PTR [ebp+0x8]
6501b62e:	lea    ecx,[ebp-0x10]
6501b631:	call   0x6501295f
6501b636:	push   DWORD PTR [ebp+0x24]
6501b639:	lea    ecx,[ebp-0x10]
6501b63c:	push   DWORD PTR [ebp+0x20]
6501b63f:	push   DWORD PTR [ebp+0x1c]
6501b642:	push   DWORD PTR [ebp+0x18]
6501b645:	push   DWORD PTR [ebp+0x14]
6501b648:	push   DWORD PTR [ebp+0x10]
6501b64b:	push   DWORD PTR [ebp+0xc]
6501b64e:	call   0x6501b46d
6501b653:	add    esp,0x1c
6501b656:	cmp    BYTE PTR [ebp-0x4],0x0
6501b65a:	je     0x6501b663
6501b65c:	mov    ecx,DWORD PTR [ebp-0x8]
6501b65f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501b663:	leave  
6501b664:	ret    
6501b665:	push   esi
6501b666:	mov    esi,DWORD PTR [esp+0x8]
6501b66a:	test   esi,esi
6501b66c:	je     0x6501b7f3
6501b672:	push   DWORD PTR [esi+0x4]
6501b675:	call   0x650135d6
6501b67a:	push   DWORD PTR [esi+0x8]
6501b67d:	call   0x650135d6
6501b682:	push   DWORD PTR [esi+0xc]
6501b685:	call   0x650135d6
6501b68a:	push   DWORD PTR [esi+0x10]
6501b68d:	call   0x650135d6
6501b692:	push   DWORD PTR [esi+0x14]
6501b695:	call   0x650135d6
6501b69a:	push   DWORD PTR [esi+0x18]
6501b69d:	call   0x650135d6
6501b6a2:	push   DWORD PTR [esi]
6501b6a4:	call   0x650135d6
6501b6a9:	push   DWORD PTR [esi+0x20]
6501b6ac:	call   0x650135d6
6501b6b1:	push   DWORD PTR [esi+0x24]
6501b6b4:	call   0x650135d6
6501b6b9:	push   DWORD PTR [esi+0x28]
6501b6bc:	call   0x650135d6
6501b6c1:	push   DWORD PTR [esi+0x2c]
6501b6c4:	call   0x650135d6
6501b6c9:	push   DWORD PTR [esi+0x30]
6501b6cc:	call   0x650135d6
6501b6d1:	push   DWORD PTR [esi+0x34]
6501b6d4:	call   0x650135d6
6501b6d9:	push   DWORD PTR [esi+0x1c]
6501b6dc:	call   0x650135d6
6501b6e1:	push   DWORD PTR [esi+0x38]
6501b6e4:	call   0x650135d6
6501b6e9:	push   DWORD PTR [esi+0x3c]
6501b6ec:	call   0x650135d6
6501b6f1:	add    esp,0x40
6501b6f4:	push   DWORD PTR [esi+0x40]
6501b6f7:	call   0x650135d6
6501b6fc:	push   DWORD PTR [esi+0x44]
6501b6ff:	call   0x650135d6
6501b704:	push   DWORD PTR [esi+0x48]
6501b707:	call   0x650135d6
6501b70c:	push   DWORD PTR [esi+0x4c]
6501b70f:	call   0x650135d6
6501b714:	push   DWORD PTR [esi+0x50]
6501b717:	call   0x650135d6
6501b71c:	push   DWORD PTR [esi+0x54]
6501b71f:	call   0x650135d6
6501b724:	push   DWORD PTR [esi+0x58]
6501b727:	call   0x650135d6
6501b72c:	push   DWORD PTR [esi+0x5c]
6501b72f:	call   0x650135d6
6501b734:	push   DWORD PTR [esi+0x60]
6501b737:	call   0x650135d6
6501b73c:	push   DWORD PTR [esi+0x64]
6501b73f:	call   0x650135d6
6501b744:	push   DWORD PTR [esi+0x68]
6501b747:	call   0x650135d6
6501b74c:	push   DWORD PTR [esi+0x6c]
6501b74f:	call   0x650135d6
6501b754:	push   DWORD PTR [esi+0x70]
6501b757:	call   0x650135d6
6501b75c:	push   DWORD PTR [esi+0x74]
6501b75f:	call   0x650135d6
6501b764:	push   DWORD PTR [esi+0x78]
6501b767:	call   0x650135d6
6501b76c:	push   DWORD PTR [esi+0x7c]
6501b76f:	call   0x650135d6
6501b774:	add    esp,0x40
6501b777:	push   DWORD PTR [esi+0x80]
6501b77d:	call   0x650135d6
6501b782:	push   DWORD PTR [esi+0x84]
6501b788:	call   0x650135d6
6501b78d:	push   DWORD PTR [esi+0x88]
6501b793:	call   0x650135d6
6501b798:	push   DWORD PTR [esi+0x8c]
6501b79e:	call   0x650135d6
6501b7a3:	push   DWORD PTR [esi+0x90]
6501b7a9:	call   0x650135d6
6501b7ae:	push   DWORD PTR [esi+0x94]
6501b7b4:	call   0x650135d6
6501b7b9:	push   DWORD PTR [esi+0x98]
6501b7bf:	call   0x650135d6
6501b7c4:	push   DWORD PTR [esi+0x9c]
6501b7ca:	call   0x650135d6
6501b7cf:	push   DWORD PTR [esi+0xa0]
6501b7d5:	call   0x650135d6
6501b7da:	push   DWORD PTR [esi+0xa4]
6501b7e0:	call   0x650135d6
6501b7e5:	push   DWORD PTR [esi+0xa8]
6501b7eb:	call   0x650135d6
6501b7f0:	add    esp,0x2c
6501b7f3:	pop    esi
6501b7f4:	ret    
6501b7f5:	push   esi
6501b7f6:	mov    esi,DWORD PTR [esp+0x8]
6501b7fa:	test   esi,esi
6501b7fc:	je     0x6501b833
6501b7fe:	mov    eax,DWORD PTR [esi]
6501b800:	cmp    eax,DWORD PTR ds:0x6502cc38
6501b806:	je     0x6501b80f
6501b808:	push   eax
6501b809:	call   0x650135d6
6501b80e:	pop    ecx
6501b80f:	mov    eax,DWORD PTR [esi+0x4]
6501b812:	cmp    eax,DWORD PTR ds:0x6502cc3c
6501b818:	je     0x6501b821
6501b81a:	push   eax
6501b81b:	call   0x650135d6
6501b820:	pop    ecx
6501b821:	mov    esi,DWORD PTR [esi+0x8]
6501b824:	cmp    esi,DWORD PTR ds:0x6502cc40
6501b82a:	je     0x6501b833
6501b82c:	push   esi
6501b82d:	call   0x650135d6
6501b832:	pop    ecx
6501b833:	pop    esi
6501b834:	ret    
6501b835:	push   esi
6501b836:	mov    esi,DWORD PTR [esp+0x8]
6501b83a:	test   esi,esi
6501b83c:	je     0x6501b8bc
6501b83e:	mov    eax,DWORD PTR [esi+0xc]
6501b841:	cmp    eax,DWORD PTR ds:0x6502cc44
6501b847:	je     0x6501b850
6501b849:	push   eax
6501b84a:	call   0x650135d6
6501b84f:	pop    ecx
6501b850:	mov    eax,DWORD PTR [esi+0x10]
6501b853:	cmp    eax,DWORD PTR ds:0x6502cc48
6501b859:	je     0x6501b862
6501b85b:	push   eax
6501b85c:	call   0x650135d6
6501b861:	pop    ecx
6501b862:	mov    eax,DWORD PTR [esi+0x14]
6501b865:	cmp    eax,DWORD PTR ds:0x6502cc4c
6501b86b:	je     0x6501b874
6501b86d:	push   eax
6501b86e:	call   0x650135d6
6501b873:	pop    ecx
6501b874:	mov    eax,DWORD PTR [esi+0x18]
6501b877:	cmp    eax,DWORD PTR ds:0x6502cc50
6501b87d:	je     0x6501b886
6501b87f:	push   eax
6501b880:	call   0x650135d6
6501b885:	pop    ecx
6501b886:	mov    eax,DWORD PTR [esi+0x1c]
6501b889:	cmp    eax,DWORD PTR ds:0x6502cc54
6501b88f:	je     0x6501b898
6501b891:	push   eax
6501b892:	call   0x650135d6
6501b897:	pop    ecx
6501b898:	mov    eax,DWORD PTR [esi+0x20]
6501b89b:	cmp    eax,DWORD PTR ds:0x6502cc58
6501b8a1:	je     0x6501b8aa
6501b8a3:	push   eax
6501b8a4:	call   0x650135d6
6501b8a9:	pop    ecx
6501b8aa:	mov    esi,DWORD PTR [esi+0x24]
6501b8ad:	cmp    esi,DWORD PTR ds:0x6502cc5c
6501b8b3:	je     0x6501b8bc
6501b8b5:	push   esi
6501b8b6:	call   0x650135d6
6501b8bb:	pop    ecx
6501b8bc:	pop    esi
6501b8bd:	ret    
6501b8be:	mov    eax,DWORD PTR [esp+0x4]
6501b8c2:	push   ebx
6501b8c3:	xor    ebx,ebx
6501b8c5:	cmp    eax,ebx
6501b8c7:	push   esi
6501b8c8:	push   edi
6501b8c9:	je     0x6501b8d3
6501b8cb:	mov    edi,DWORD PTR [esp+0x14]
6501b8cf:	cmp    edi,ebx
6501b8d1:	ja     0x6501b8ee
6501b8d3:	call   0x65014400
6501b8d8:	push   0x16
6501b8da:	pop    esi
6501b8db:	mov    DWORD PTR [eax],esi
6501b8dd:	push   ebx
6501b8de:	push   ebx
6501b8df:	push   ebx
6501b8e0:	push   ebx
6501b8e1:	push   ebx
6501b8e2:	call   0x650122af
6501b8e7:	add    esp,0x14
6501b8ea:	mov    eax,esi
6501b8ec:	jmp    0x6501b92b
6501b8ee:	mov    esi,DWORD PTR [esp+0x18]
6501b8f2:	cmp    esi,ebx
6501b8f4:	jne    0x6501b8fa
6501b8f6:	mov    BYTE PTR [eax],bl
6501b8f8:	jmp    0x6501b8d3
6501b8fa:	mov    edx,eax
6501b8fc:	cmp    BYTE PTR [edx],bl
6501b8fe:	je     0x6501b904
6501b900:	inc    edx
6501b901:	dec    edi
6501b902:	jne    0x6501b8fc
6501b904:	cmp    edi,ebx
6501b906:	je     0x6501b8f6
6501b908:	mov    cl,BYTE PTR [esi]
6501b90a:	mov    BYTE PTR [edx],cl
6501b90c:	inc    edx
6501b90d:	inc    esi
6501b90e:	cmp    cl,bl
6501b910:	je     0x6501b915
6501b912:	dec    edi
6501b913:	jne    0x6501b908
6501b915:	cmp    edi,ebx
6501b917:	jne    0x6501b929
6501b919:	mov    BYTE PTR [eax],bl
6501b91b:	call   0x65014400
6501b920:	push   0x22
6501b922:	pop    ecx
6501b923:	mov    DWORD PTR [eax],ecx
6501b925:	mov    esi,ecx
6501b927:	jmp    0x6501b8dd
6501b929:	xor    eax,eax
6501b92b:	pop    edi
6501b92c:	pop    esi
6501b92d:	pop    ebx
6501b92e:	ret    
6501b92f:	int3   
6501b930:	push   ebp
6501b931:	mov    ebp,esp
6501b933:	push   esi
6501b934:	xor    eax,eax
6501b936:	push   eax
6501b937:	push   eax
6501b938:	push   eax
6501b939:	push   eax
6501b93a:	push   eax
6501b93b:	push   eax
6501b93c:	push   eax
6501b93d:	push   eax
6501b93e:	mov    edx,DWORD PTR [ebp+0xc]
6501b941:	lea    ecx,[ecx+0x0]
6501b944:	mov    al,BYTE PTR [edx]
6501b946:	or     al,al
6501b948:	je     0x6501b953
6501b94a:	add    edx,0x1
6501b94d:	bts    DWORD PTR [esp],eax
6501b951:	jmp    0x6501b944
6501b953:	mov    esi,DWORD PTR [ebp+0x8]
6501b956:	or     ecx,0xffffffff
6501b959:	lea    ecx,[ecx+0x0]
6501b95c:	add    ecx,0x1
6501b95f:	mov    al,BYTE PTR [esi]
6501b961:	or     al,al
6501b963:	je     0x6501b96e
6501b965:	add    esi,0x1
6501b968:	bt     DWORD PTR [esp],eax
6501b96c:	jae    0x6501b95c
6501b96e:	mov    eax,ecx
6501b970:	add    esp,0x20
6501b973:	pop    esi
6501b974:	leave  
6501b975:	ret    
6501b976:	push   ebp
6501b977:	mov    ebp,esp
6501b979:	push   ebx
6501b97a:	push   esi
6501b97b:	mov    esi,DWORD PTR [ebp+0x8]
6501b97e:	xor    ebx,ebx
6501b980:	cmp    DWORD PTR [ebp+0x14],ebx
6501b983:	push   edi
6501b984:	jne    0x6501b996
6501b986:	cmp    esi,ebx
6501b988:	jne    0x6501b99a
6501b98a:	cmp    DWORD PTR [ebp+0xc],ebx
6501b98d:	jne    0x6501b9a1
6501b98f:	xor    eax,eax
6501b991:	pop    edi
6501b992:	pop    esi
6501b993:	pop    ebx
6501b994:	pop    ebp
6501b995:	ret    
6501b996:	cmp    esi,ebx
6501b998:	je     0x6501b9a1
6501b99a:	mov    edi,DWORD PTR [ebp+0xc]
6501b99d:	cmp    edi,ebx
6501b99f:	ja     0x6501b9bc
6501b9a1:	call   0x65014400
6501b9a6:	push   0x16
6501b9a8:	pop    esi
6501b9a9:	mov    DWORD PTR [eax],esi
6501b9ab:	push   ebx
6501b9ac:	push   ebx
6501b9ad:	push   ebx
6501b9ae:	push   ebx
6501b9af:	push   ebx
6501b9b0:	call   0x650122af
6501b9b5:	add    esp,0x14
6501b9b8:	mov    eax,esi
6501b9ba:	jmp    0x6501b991
6501b9bc:	cmp    DWORD PTR [ebp+0x14],ebx
6501b9bf:	jne    0x6501b9c5
6501b9c1:	mov    BYTE PTR [esi],bl
6501b9c3:	jmp    0x6501b98f
6501b9c5:	mov    edx,DWORD PTR [ebp+0x10]
6501b9c8:	cmp    edx,ebx
6501b9ca:	jne    0x6501b9d0
6501b9cc:	mov    BYTE PTR [esi],bl
6501b9ce:	jmp    0x6501b9a1
6501b9d0:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6501b9d4:	mov    eax,esi
6501b9d6:	jne    0x6501b9e7
6501b9d8:	mov    cl,BYTE PTR [edx]
6501b9da:	mov    BYTE PTR [eax],cl
6501b9dc:	inc    eax
6501b9dd:	inc    edx
6501b9de:	cmp    cl,bl
6501b9e0:	je     0x6501ba00
6501b9e2:	dec    edi
6501b9e3:	jne    0x6501b9d8
6501b9e5:	jmp    0x6501ba00
6501b9e7:	mov    cl,BYTE PTR [edx]
6501b9e9:	mov    BYTE PTR [eax],cl
6501b9eb:	inc    eax
6501b9ec:	inc    edx
6501b9ed:	cmp    cl,bl
6501b9ef:	je     0x6501b9f9
6501b9f1:	dec    edi
6501b9f2:	je     0x6501b9f9
6501b9f4:	dec    DWORD PTR [ebp+0x14]
6501b9f7:	jne    0x6501b9e7
6501b9f9:	cmp    DWORD PTR [ebp+0x14],ebx
6501b9fc:	jne    0x6501ba00
6501b9fe:	mov    BYTE PTR [eax],bl
6501ba00:	cmp    edi,ebx
6501ba02:	jne    0x6501b98f
6501ba04:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6501ba08:	jne    0x6501ba19
6501ba0a:	mov    eax,DWORD PTR [ebp+0xc]
6501ba0d:	push   0x50
6501ba0f:	mov    BYTE PTR [esi+eax*1-0x1],bl
6501ba13:	pop    eax
6501ba14:	jmp    0x6501b991
6501ba19:	mov    BYTE PTR [esi],bl
6501ba1b:	call   0x65014400
6501ba20:	push   0x22
6501ba22:	pop    ecx
6501ba23:	mov    DWORD PTR [eax],ecx
6501ba25:	mov    esi,ecx
6501ba27:	jmp    0x6501b9ab
6501ba29:	int3   
6501ba2a:	int3   
6501ba2b:	int3   
6501ba2c:	int3   
6501ba2d:	int3   
6501ba2e:	int3   
6501ba2f:	int3   
6501ba30:	push   ebp
6501ba31:	mov    ebp,esp
6501ba33:	push   esi
6501ba34:	xor    eax,eax
6501ba36:	push   eax
6501ba37:	push   eax
6501ba38:	push   eax
6501ba39:	push   eax
6501ba3a:	push   eax
6501ba3b:	push   eax
6501ba3c:	push   eax
6501ba3d:	push   eax
6501ba3e:	mov    edx,DWORD PTR [ebp+0xc]
6501ba41:	lea    ecx,[ecx+0x0]
6501ba44:	mov    al,BYTE PTR [edx]
6501ba46:	or     al,al
6501ba48:	je     0x6501ba53
6501ba4a:	add    edx,0x1
6501ba4d:	bts    DWORD PTR [esp],eax
6501ba51:	jmp    0x6501ba44
6501ba53:	mov    esi,DWORD PTR [ebp+0x8]
6501ba56:	mov    edi,edi
6501ba58:	mov    al,BYTE PTR [esi]
6501ba5a:	or     al,al
6501ba5c:	je     0x6501ba6a
6501ba5e:	add    esi,0x1
6501ba61:	bt     DWORD PTR [esp],eax
6501ba65:	jae    0x6501ba58
6501ba67:	lea    eax,[esi-0x1]
6501ba6a:	add    esp,0x20
6501ba6d:	pop    esi
6501ba6e:	leave  
6501ba6f:	ret    
6501ba70:	push   ebp
6501ba71:	mov    ebp,esp
6501ba73:	push   ecx
6501ba74:	push   ecx
6501ba75:	mov    eax,DWORD PTR [ebp+0xc]
6501ba78:	push   esi
6501ba79:	mov    esi,DWORD PTR [ebp+0x8]
6501ba7c:	mov    DWORD PTR [ebp-0x8],eax
6501ba7f:	mov    eax,DWORD PTR [ebp+0x10]
6501ba82:	push   edi
6501ba83:	push   esi
6501ba84:	mov    DWORD PTR [ebp-0x4],eax
6501ba87:	call   0x6501da0f
6501ba8c:	or     edi,0xffffffff
6501ba8f:	cmp    eax,edi
6501ba91:	pop    ecx
6501ba92:	jne    0x6501baa5
6501ba94:	call   0x65014400
6501ba99:	mov    DWORD PTR [eax],0x9
6501ba9f:	mov    eax,edi
6501baa1:	mov    edx,edi
6501baa3:	jmp    0x6501baef
6501baa5:	push   DWORD PTR [ebp+0x14]
6501baa8:	lea    ecx,[ebp-0x4]
6501baab:	push   ecx
6501baac:	push   DWORD PTR [ebp-0x8]
6501baaf:	push   eax
6501bab0:	call   DWORD PTR ds:0x650240d4
6501bab6:	cmp    eax,edi
6501bab8:	mov    DWORD PTR [ebp-0x8],eax
6501babb:	jne    0x6501bad0
6501babd:	call   DWORD PTR ds:0x65024044
6501bac3:	test   eax,eax
6501bac5:	je     0x6501bad0
6501bac7:	push   eax
6501bac8:	call   0x65014426
6501bacd:	pop    ecx
6501bace:	jmp    0x6501ba9f
6501bad0:	mov    eax,esi
6501bad2:	sar    eax,0x5
6501bad5:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501badc:	and    esi,0x1f
6501badf:	shl    esi,0x6
6501bae2:	lea    eax,[eax+esi*1+0x4]
6501bae6:	and    BYTE PTR [eax],0xfd
6501bae9:	mov    eax,DWORD PTR [ebp-0x8]
6501baec:	mov    edx,DWORD PTR [ebp-0x4]
6501baef:	pop    edi
6501baf0:	pop    esi
6501baf1:	leave  
6501baf2:	ret    
6501baf3:	push   0x14
6501baf5:	push   0x65029c40
6501bafa:	call   0x65013d00
6501baff:	or     esi,0xffffffff
6501bb02:	mov    DWORD PTR [ebp-0x24],esi
6501bb05:	mov    DWORD PTR [ebp-0x20],esi
6501bb08:	mov    eax,DWORD PTR [ebp+0x8]
6501bb0b:	cmp    eax,0xfffffffe
6501bb0e:	jne    0x6501bb2c
6501bb10:	call   0x65014413
6501bb15:	and    DWORD PTR [eax],0x0
6501bb18:	call   0x65014400
6501bb1d:	mov    DWORD PTR [eax],0x9
6501bb23:	mov    eax,esi
6501bb25:	mov    edx,esi
6501bb27:	jmp    0x6501bbfc
6501bb2c:	xor    edi,edi
6501bb2e:	cmp    eax,edi
6501bb30:	jl     0x6501bb3a
6501bb32:	cmp    eax,DWORD PTR ds:0x65031440
6501bb38:	jb     0x6501bb5b
6501bb3a:	call   0x65014413
6501bb3f:	mov    DWORD PTR [eax],edi
6501bb41:	call   0x65014400
6501bb46:	mov    DWORD PTR [eax],0x9
6501bb4c:	push   edi
6501bb4d:	push   edi
6501bb4e:	push   edi
6501bb4f:	push   edi
6501bb50:	push   edi
6501bb51:	call   0x650122af
6501bb56:	add    esp,0x14
6501bb59:	jmp    0x6501bb23
6501bb5b:	mov    ecx,eax
6501bb5d:	sar    ecx,0x5
6501bb60:	lea    ebx,[ecx*4+0x65031460]
6501bb67:	mov    esi,eax
6501bb69:	and    esi,0x1f
6501bb6c:	shl    esi,0x6
6501bb6f:	mov    ecx,DWORD PTR [ebx]
6501bb71:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6501bb76:	and    ecx,0x1
6501bb79:	jne    0x6501bba1
6501bb7b:	call   0x65014413
6501bb80:	mov    DWORD PTR [eax],edi
6501bb82:	call   0x65014400
6501bb87:	mov    DWORD PTR [eax],0x9
6501bb8d:	push   edi
6501bb8e:	push   edi
6501bb8f:	push   edi
6501bb90:	push   edi
6501bb91:	push   edi
6501bb92:	call   0x650122af
6501bb97:	add    esp,0x14
6501bb9a:	or     edx,0xffffffff
6501bb9d:	mov    eax,edx
6501bb9f:	jmp    0x6501bbfc
6501bba1:	push   eax
6501bba2:	call   0x6501da80
6501bba7:	pop    ecx
6501bba8:	mov    DWORD PTR [ebp-0x4],edi
6501bbab:	mov    eax,DWORD PTR [ebx]
6501bbad:	test   BYTE PTR [eax+esi*1+0x4],0x1
6501bbb2:	je     0x6501bbd0
6501bbb4:	push   DWORD PTR [ebp+0x14]
6501bbb7:	push   DWORD PTR [ebp+0x10]
6501bbba:	push   DWORD PTR [ebp+0xc]
6501bbbd:	push   DWORD PTR [ebp+0x8]
6501bbc0:	call   0x6501ba70
6501bbc5:	add    esp,0x10
6501bbc8:	mov    DWORD PTR [ebp-0x24],eax
6501bbcb:	mov    DWORD PTR [ebp-0x20],edx
6501bbce:	jmp    0x6501bbea
6501bbd0:	call   0x65014400
6501bbd5:	mov    DWORD PTR [eax],0x9
6501bbdb:	call   0x65014413
6501bbe0:	mov    DWORD PTR [eax],edi
6501bbe2:	or     DWORD PTR [ebp-0x24],0xffffffff
6501bbe6:	or     DWORD PTR [ebp-0x20],0xffffffff
6501bbea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501bbf1:	call   0x6501bc02
6501bbf6:	mov    eax,DWORD PTR [ebp-0x24]
6501bbf9:	mov    edx,DWORD PTR [ebp-0x20]
6501bbfc:	call   0x65013d45
6501bc01:	ret    
6501bc02:	push   DWORD PTR [ebp+0x8]
6501bc05:	call   0x6501db20
6501bc0a:	pop    ecx
6501bc0b:	ret    
6501bc0c:	push   ebp
6501bc0d:	lea    ebp,[esp-0x514]
6501bc14:	sub    esp,0x590
6501bc1a:	mov    eax,ds:0x6502c09c
6501bc1f:	xor    eax,ebp
6501bc21:	mov    DWORD PTR [ebp+0x510],eax
6501bc27:	mov    eax,DWORD PTR [ebp+0x520]
6501bc2d:	push   esi
6501bc2e:	xor    esi,esi
6501bc30:	cmp    DWORD PTR [ebp+0x524],esi
6501bc36:	mov    DWORD PTR [ebp-0x64],eax
6501bc39:	mov    DWORD PTR [ebp-0x60],esi
6501bc3c:	mov    DWORD PTR [ebp-0x68],esi
6501bc3f:	jne    0x6501bc48
6501bc41:	xor    eax,eax
6501bc43:	jmp    0x6501c218
6501bc48:	cmp    eax,esi
6501bc4a:	jne    0x6501bc73
6501bc4c:	call   0x65014413
6501bc51:	mov    DWORD PTR [eax],esi
6501bc53:	call   0x65014400
6501bc58:	push   esi
6501bc59:	push   esi
6501bc5a:	push   esi
6501bc5b:	push   esi
6501bc5c:	push   esi
6501bc5d:	mov    DWORD PTR [eax],0x16
6501bc63:	call   0x650122af
6501bc68:	add    esp,0x14
6501bc6b:	or     eax,0xffffffff
6501bc6e:	jmp    0x6501c218
6501bc73:	push   ebx
6501bc74:	push   edi
6501bc75:	mov    edi,DWORD PTR [ebp+0x51c]
6501bc7b:	mov    eax,edi
6501bc7d:	sar    eax,0x5
6501bc80:	lea    esi,[eax*4+0x65031460]
6501bc87:	mov    eax,DWORD PTR [esi]
6501bc89:	and    edi,0x1f
6501bc8c:	shl    edi,0x6
6501bc8f:	add    eax,edi
6501bc91:	mov    bl,BYTE PTR [eax+0x24]
6501bc94:	add    bl,bl
6501bc96:	sar    bl,1
6501bc98:	cmp    bl,0x2
6501bc9b:	mov    DWORD PTR [ebp-0x70],esi
6501bc9e:	mov    BYTE PTR [ebp-0x71],bl
6501bca1:	je     0x6501bca8
6501bca3:	cmp    bl,0x1
6501bca6:	jne    0x6501bcdb
6501bca8:	mov    ecx,DWORD PTR [ebp+0x524]
6501bcae:	not    ecx
6501bcb0:	test   cl,0x1
6501bcb3:	jne    0x6501bcdb
6501bcb5:	call   0x65014413
6501bcba:	xor    esi,esi
6501bcbc:	mov    DWORD PTR [eax],esi
6501bcbe:	call   0x65014400
6501bcc3:	push   esi
6501bcc4:	push   esi
6501bcc5:	push   esi
6501bcc6:	push   esi
6501bcc7:	push   esi
6501bcc8:	mov    DWORD PTR [eax],0x16
6501bcce:	call   0x650122af
6501bcd3:	add    esp,0x14
6501bcd6:	jmp    0x6501c20b
6501bcdb:	test   BYTE PTR [eax+0x4],0x20
6501bcdf:	je     0x6501bcf5
6501bce1:	push   0x2
6501bce3:	push   0x0
6501bce5:	push   0x0
6501bce7:	push   DWORD PTR [ebp+0x51c]
6501bced:	call   0x6501ba70
6501bcf2:	add    esp,0x10
6501bcf5:	push   DWORD PTR [ebp+0x51c]
6501bcfb:	call   0x6501c34e
6501bd00:	test   eax,eax
6501bd02:	pop    ecx
6501bd03:	je     0x6501bf42
6501bd09:	mov    eax,DWORD PTR [esi]
6501bd0b:	test   BYTE PTR [edi+eax*1+0x4],0x80
6501bd10:	je     0x6501bf42
6501bd16:	call   0x6501474b
6501bd1b:	mov    eax,DWORD PTR [eax+0x6c]
6501bd1e:	xor    ecx,ecx
6501bd20:	cmp    DWORD PTR [eax+0x14],ecx
6501bd23:	lea    eax,[ebp-0x7c]
6501bd26:	sete   cl
6501bd29:	push   eax
6501bd2a:	mov    eax,DWORD PTR [esi]
6501bd2c:	push   DWORD PTR [edi+eax*1]
6501bd2f:	mov    DWORD PTR [ebp-0x78],ecx
6501bd32:	call   DWORD PTR ds:0x650240cc
6501bd38:	test   eax,eax
6501bd3a:	je     0x6501bf42
6501bd40:	xor    ecx,ecx
6501bd42:	cmp    DWORD PTR [ebp-0x78],ecx
6501bd45:	je     0x6501bd4f
6501bd47:	test   bl,bl
6501bd49:	je     0x6501bf44
6501bd4f:	call   DWORD PTR ds:0x650240d0
6501bd55:	mov    ebx,DWORD PTR [ebp-0x64]
6501bd58:	mov    DWORD PTR [ebp-0x7c],eax
6501bd5b:	xor    eax,eax
6501bd5d:	cmp    DWORD PTR [ebp+0x524],eax
6501bd63:	mov    DWORD PTR [ebp-0x5c],eax
6501bd66:	jbe    0x6501c1b3
6501bd6c:	mov    DWORD PTR [ebp-0x54],eax
6501bd6f:	mov    al,BYTE PTR [ebp-0x71]
6501bd72:	test   al,al
6501bd74:	jne    0x6501beb7
6501bd7a:	mov    cl,BYTE PTR [ebx]
6501bd7c:	mov    esi,DWORD PTR [ebp-0x70]
6501bd7f:	xor    eax,eax
6501bd81:	cmp    cl,0xa
6501bd84:	sete   al
6501bd87:	mov    DWORD PTR [ebp-0x78],eax
6501bd8a:	mov    eax,DWORD PTR [esi]
6501bd8c:	add    eax,edi
6501bd8e:	cmp    DWORD PTR [eax+0x38],0x0
6501bd92:	je     0x6501bdb2
6501bd94:	mov    dl,BYTE PTR [eax+0x34]
6501bd97:	mov    BYTE PTR [ebp+0x508],dl
6501bd9d:	mov    BYTE PTR [ebp+0x509],cl
6501bda3:	and    DWORD PTR [eax+0x38],0x0
6501bda7:	push   0x2
6501bda9:	lea    eax,[ebp+0x508]
6501bdaf:	push   eax
6501bdb0:	jmp    0x6501bdf7
6501bdb2:	movsx  eax,cl
6501bdb5:	push   eax
6501bdb6:	call   0x65019b74
6501bdbb:	test   eax,eax
6501bdbd:	pop    ecx
6501bdbe:	je     0x6501bdf4
6501bdc0:	mov    ecx,DWORD PTR [ebp-0x64]
6501bdc3:	sub    ecx,ebx
6501bdc5:	add    ecx,DWORD PTR [ebp+0x524]
6501bdcb:	xor    eax,eax
6501bdcd:	inc    eax
6501bdce:	cmp    ecx,eax
6501bdd0:	jbe    0x6501bf2c
6501bdd6:	push   0x2
6501bdd8:	lea    eax,[ebp-0x58]
6501bddb:	push   ebx
6501bddc:	push   eax
6501bddd:	call   0x6501c881
6501bde2:	add    esp,0xc
6501bde5:	cmp    eax,0xffffffff
6501bde8:	je     0x6501c1ad
6501bdee:	inc    ebx
6501bdef:	inc    DWORD PTR [ebp-0x54]
6501bdf2:	jmp    0x6501be0c
6501bdf4:	push   0x1
6501bdf6:	push   ebx
6501bdf7:	lea    eax,[ebp-0x58]
6501bdfa:	push   eax
6501bdfb:	call   0x6501c881
6501be00:	add    esp,0xc
6501be03:	cmp    eax,0xffffffff
6501be06:	je     0x6501c1ad
6501be0c:	xor    eax,eax
6501be0e:	push   eax
6501be0f:	push   eax
6501be10:	push   0x5
6501be12:	lea    ecx,[ebp+0x508]
6501be18:	push   ecx
6501be19:	push   0x1
6501be1b:	lea    ecx,[ebp-0x58]
6501be1e:	push   ecx
6501be1f:	push   eax
6501be20:	push   DWORD PTR [ebp-0x7c]
6501be23:	inc    ebx
6501be24:	inc    DWORD PTR [ebp-0x54]
6501be27:	call   DWORD PTR ds:0x65024028
6501be2d:	mov    esi,eax
6501be2f:	test   esi,esi
6501be31:	je     0x6501c1ad
6501be37:	push   0x0
6501be39:	lea    eax,[ebp-0x5c]
6501be3c:	push   eax
6501be3d:	push   esi
6501be3e:	lea    eax,[ebp+0x508]
6501be44:	push   eax
6501be45:	mov    eax,DWORD PTR [ebp-0x70]
6501be48:	mov    eax,DWORD PTR [eax]
6501be4a:	push   DWORD PTR [edi+eax*1]
6501be4d:	call   DWORD PTR ds:0x65024088
6501be53:	test   eax,eax
6501be55:	je     0x6501c1a4
6501be5b:	mov    eax,DWORD PTR [ebp-0x54]
6501be5e:	mov    ecx,DWORD PTR [ebp-0x68]
6501be61:	add    eax,ecx
6501be63:	cmp    DWORD PTR [ebp-0x5c],esi
6501be66:	mov    DWORD PTR [ebp-0x60],eax
6501be69:	jl     0x6501c1ad
6501be6f:	cmp    DWORD PTR [ebp-0x78],0x0
6501be73:	je     0x6501bf18
6501be79:	push   0x0
6501be7b:	lea    eax,[ebp-0x5c]
6501be7e:	push   eax
6501be7f:	push   0x1
6501be81:	lea    eax,[ebp+0x508]
6501be87:	push   eax
6501be88:	mov    eax,DWORD PTR [ebp-0x70]
6501be8b:	mov    eax,DWORD PTR [eax]
6501be8d:	mov    BYTE PTR [ebp+0x508],0xd
6501be94:	push   DWORD PTR [edi+eax*1]
6501be97:	call   DWORD PTR ds:0x65024088
6501be9d:	test   eax,eax
6501be9f:	je     0x6501c1a4
6501bea5:	cmp    DWORD PTR [ebp-0x5c],0x1
6501bea9:	jl     0x6501c1ad
6501beaf:	inc    DWORD PTR [ebp-0x68]
6501beb2:	inc    DWORD PTR [ebp-0x60]
6501beb5:	jmp    0x6501bf18
6501beb7:	cmp    al,0x1
6501beb9:	je     0x6501bebf
6501bebb:	cmp    al,0x2
6501bebd:	jne    0x6501bed7
6501bebf:	movzx  esi,WORD PTR [ebx]
6501bec2:	xor    ecx,ecx
6501bec4:	cmp    si,0xa
6501bec8:	sete   cl
6501becb:	inc    ebx
6501becc:	inc    ebx
6501becd:	add    DWORD PTR [ebp-0x54],0x2
6501bed1:	mov    DWORD PTR [ebp-0x58],esi
6501bed4:	mov    DWORD PTR [ebp-0x78],ecx
6501bed7:	cmp    al,0x1
6501bed9:	je     0x6501bedf
6501bedb:	cmp    al,0x2
6501bedd:	jne    0x6501bf18
6501bedf:	push   DWORD PTR [ebp-0x58]
6501bee2:	call   0x6501db42
6501bee7:	cmp    ax,WORD PTR [ebp-0x58]
6501beeb:	pop    ecx
6501beec:	jne    0x6501c1a4
6501bef2:	inc    DWORD PTR [ebp-0x60]
6501bef5:	cmp    DWORD PTR [ebp-0x78],0x0
6501bef9:	je     0x6501bf18
6501befb:	push   0xd
6501befd:	pop    eax
6501befe:	push   eax
6501beff:	mov    DWORD PTR [ebp-0x58],eax
6501bf02:	call   0x6501db42
6501bf07:	cmp    ax,WORD PTR [ebp-0x58]
6501bf0b:	pop    ecx
6501bf0c:	jne    0x6501c1a4
6501bf12:	inc    DWORD PTR [ebp-0x60]
6501bf15:	inc    DWORD PTR [ebp-0x68]
6501bf18:	mov    eax,DWORD PTR [ebp+0x524]
6501bf1e:	cmp    DWORD PTR [ebp-0x54],eax
6501bf21:	jb     0x6501bd6f
6501bf27:	jmp    0x6501c1ad
6501bf2c:	mov    ecx,DWORD PTR [esi]
6501bf2e:	mov    dl,BYTE PTR [ebx]
6501bf30:	inc    DWORD PTR [ebp-0x60]
6501bf33:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6501bf37:	mov    ecx,DWORD PTR [esi]
6501bf39:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6501bf3d:	jmp    0x6501c1ad
6501bf42:	xor    ecx,ecx
6501bf44:	mov    eax,DWORD PTR [esi]
6501bf46:	add    eax,edi
6501bf48:	test   BYTE PTR [eax+0x4],0x80
6501bf4c:	je     0x6501c17d
6501bf52:	test   bl,bl
6501bf54:	mov    eax,DWORD PTR [ebp-0x64]
6501bf57:	mov    DWORD PTR [ebp-0x58],ecx
6501bf5a:	jne    0x6501bff6
6501bf60:	cmp    DWORD PTR [ebp+0x524],ecx
6501bf66:	mov    DWORD PTR [ebp-0x5c],eax
6501bf69:	jbe    0x6501c1e3
6501bf6f:	jmp    0x6501bf74
6501bf71:	mov    esi,DWORD PTR [ebp-0x70]
6501bf74:	mov    ecx,DWORD PTR [ebp-0x5c]
6501bf77:	and    DWORD PTR [ebp-0x54],0x0
6501bf7b:	sub    ecx,DWORD PTR [ebp-0x64]
6501bf7e:	lea    eax,[ebp-0x50]
6501bf81:	cmp    ecx,DWORD PTR [ebp+0x524]
6501bf87:	jae    0x6501bfb0
6501bf89:	mov    edx,DWORD PTR [ebp-0x5c]
6501bf8c:	inc    DWORD PTR [ebp-0x5c]
6501bf8f:	mov    dl,BYTE PTR [edx]
6501bf91:	inc    ecx
6501bf92:	cmp    dl,0xa
6501bf95:	jne    0x6501bfa1
6501bf97:	inc    DWORD PTR [ebp-0x68]
6501bf9a:	mov    BYTE PTR [eax],0xd
6501bf9d:	inc    eax
6501bf9e:	inc    DWORD PTR [ebp-0x54]
6501bfa1:	mov    BYTE PTR [eax],dl
6501bfa3:	inc    eax
6501bfa4:	inc    DWORD PTR [ebp-0x54]
6501bfa7:	cmp    DWORD PTR [ebp-0x54],0x400
6501bfae:	jb     0x6501bf81
6501bfb0:	mov    ebx,eax
6501bfb2:	lea    eax,[ebp-0x50]
6501bfb5:	sub    ebx,eax
6501bfb7:	push   0x0
6501bfb9:	lea    eax,[ebp-0x6c]
6501bfbc:	push   eax
6501bfbd:	push   ebx
6501bfbe:	lea    eax,[ebp-0x50]
6501bfc1:	push   eax
6501bfc2:	mov    eax,DWORD PTR [esi]
6501bfc4:	push   DWORD PTR [edi+eax*1]
6501bfc7:	call   DWORD PTR ds:0x65024088
6501bfcd:	test   eax,eax
6501bfcf:	je     0x6501c1a4
6501bfd5:	mov    eax,DWORD PTR [ebp-0x6c]
6501bfd8:	add    DWORD PTR [ebp-0x60],eax
6501bfdb:	cmp    eax,ebx
6501bfdd:	jl     0x6501c1ad
6501bfe3:	mov    eax,DWORD PTR [ebp-0x5c]
6501bfe6:	sub    eax,DWORD PTR [ebp-0x64]
6501bfe9:	cmp    eax,DWORD PTR [ebp+0x524]
6501bfef:	jb     0x6501bf71
6501bff1:	jmp    0x6501c1ad
6501bff6:	cmp    bl,0x2
6501bff9:	mov    DWORD PTR [ebp-0x54],eax
6501bffc:	jne    0x6501c0a5
6501c002:	cmp    DWORD PTR [ebp+0x524],ecx
6501c008:	jbe    0x6501c1e3
6501c00e:	jmp    0x6501c013
6501c010:	mov    esi,DWORD PTR [ebp-0x70]
6501c013:	mov    ecx,DWORD PTR [ebp-0x54]
6501c016:	and    DWORD PTR [ebp-0x5c],0x0
6501c01a:	sub    ecx,DWORD PTR [ebp-0x64]
6501c01d:	lea    eax,[ebp-0x50]
6501c020:	cmp    ecx,DWORD PTR [ebp+0x524]
6501c026:	jae    0x6501c05b
6501c028:	mov    edx,DWORD PTR [ebp-0x54]
6501c02b:	add    DWORD PTR [ebp-0x54],0x2
6501c02f:	movzx  edx,WORD PTR [edx]
6501c032:	inc    ecx
6501c033:	inc    ecx
6501c034:	cmp    dx,0xa
6501c038:	jne    0x6501c049
6501c03a:	add    DWORD PTR [ebp-0x68],0x2
6501c03e:	mov    WORD PTR [eax],0xd
6501c043:	inc    eax
6501c044:	inc    eax
6501c045:	add    DWORD PTR [ebp-0x5c],0x2
6501c049:	add    DWORD PTR [ebp-0x5c],0x2
6501c04d:	mov    WORD PTR [eax],dx
6501c050:	inc    eax
6501c051:	inc    eax
6501c052:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6501c059:	jb     0x6501c020
6501c05b:	mov    ebx,eax
6501c05d:	lea    eax,[ebp-0x50]
6501c060:	sub    ebx,eax
6501c062:	push   0x0
6501c064:	lea    eax,[ebp-0x6c]
6501c067:	push   eax
6501c068:	push   ebx
6501c069:	lea    eax,[ebp-0x50]
6501c06c:	push   eax
6501c06d:	mov    eax,DWORD PTR [esi]
6501c06f:	push   DWORD PTR [edi+eax*1]
6501c072:	call   DWORD PTR ds:0x65024088
6501c078:	test   eax,eax
6501c07a:	je     0x6501c1a4
6501c080:	mov    eax,DWORD PTR [ebp-0x6c]
6501c083:	add    DWORD PTR [ebp-0x60],eax
6501c086:	cmp    eax,ebx
6501c088:	jl     0x6501c1ad
6501c08e:	mov    eax,DWORD PTR [ebp-0x54]
6501c091:	sub    eax,DWORD PTR [ebp-0x64]
6501c094:	cmp    eax,DWORD PTR [ebp+0x524]
6501c09a:	jb     0x6501c010
6501c0a0:	jmp    0x6501c1ad
6501c0a5:	cmp    DWORD PTR [ebp+0x524],ecx
6501c0ab:	jbe    0x6501c1e3
6501c0b1:	mov    ecx,DWORD PTR [ebp-0x54]
6501c0b4:	and    DWORD PTR [ebp-0x5c],0x0
6501c0b8:	sub    ecx,DWORD PTR [ebp-0x64]
6501c0bb:	push   0x2
6501c0bd:	lea    eax,[ebp+0x3b4]
6501c0c3:	pop    esi
6501c0c4:	cmp    ecx,DWORD PTR [ebp+0x524]
6501c0ca:	jae    0x6501c0f8
6501c0cc:	mov    edx,DWORD PTR [ebp-0x54]
6501c0cf:	movzx  edx,WORD PTR [edx]
6501c0d2:	add    DWORD PTR [ebp-0x54],esi
6501c0d5:	add    ecx,esi
6501c0d7:	cmp    dx,0xa
6501c0db:	jne    0x6501c0e7
6501c0dd:	mov    WORD PTR [eax],0xd
6501c0e2:	add    eax,esi
6501c0e4:	add    DWORD PTR [ebp-0x5c],esi
6501c0e7:	add    DWORD PTR [ebp-0x5c],esi
6501c0ea:	mov    WORD PTR [eax],dx
6501c0ed:	add    eax,esi
6501c0ef:	cmp    DWORD PTR [ebp-0x5c],0x152
6501c0f6:	jb     0x6501c0c4
6501c0f8:	xor    esi,esi
6501c0fa:	push   esi
6501c0fb:	push   esi
6501c0fc:	push   0x2ab
6501c101:	lea    ecx,[ebp+0x104]
6501c107:	push   ecx
6501c108:	lea    ecx,[ebp+0x3b4]
6501c10e:	sub    eax,ecx
6501c110:	cdq    
6501c111:	sub    eax,edx
6501c113:	sar    eax,1
6501c115:	push   eax
6501c116:	mov    eax,ecx
6501c118:	push   eax
6501c119:	push   esi
6501c11a:	push   0xfde9
6501c11f:	call   DWORD PTR ds:0x65024028
6501c125:	mov    ebx,eax
6501c127:	cmp    ebx,esi
6501c129:	je     0x6501c1a4
6501c12b:	push   0x0
6501c12d:	lea    eax,[ebp-0x6c]
6501c130:	push   eax
6501c131:	mov    eax,ebx
6501c133:	sub    eax,esi
6501c135:	push   eax
6501c136:	lea    eax,[ebp+esi*1+0x104]
6501c13d:	push   eax
6501c13e:	mov    eax,DWORD PTR [ebp-0x70]
6501c141:	mov    eax,DWORD PTR [eax]
6501c143:	push   DWORD PTR [edi+eax*1]
6501c146:	call   DWORD PTR ds:0x65024088
6501c14c:	test   eax,eax
6501c14e:	je     0x6501c159
6501c150:	add    esi,DWORD PTR [ebp-0x6c]
6501c153:	cmp    ebx,esi
6501c155:	jg     0x6501c12b
6501c157:	jmp    0x6501c162
6501c159:	call   DWORD PTR ds:0x65024044
6501c15f:	mov    DWORD PTR [ebp-0x58],eax
6501c162:	cmp    ebx,esi
6501c164:	jg     0x6501c1ad
6501c166:	mov    eax,DWORD PTR [ebp-0x54]
6501c169:	sub    eax,DWORD PTR [ebp-0x64]
6501c16c:	cmp    eax,DWORD PTR [ebp+0x524]
6501c172:	mov    DWORD PTR [ebp-0x60],eax
6501c175:	jb     0x6501c0b1
6501c17b:	jmp    0x6501c1ad
6501c17d:	push   0x0
6501c17f:	lea    ecx,[ebp-0x6c]
6501c182:	push   ecx
6501c183:	push   DWORD PTR [ebp+0x524]
6501c189:	push   DWORD PTR [ebp-0x64]
6501c18c:	push   DWORD PTR [eax]
6501c18e:	call   DWORD PTR ds:0x65024088
6501c194:	test   eax,eax
6501c196:	je     0x6501c1a4
6501c198:	mov    eax,DWORD PTR [ebp-0x6c]
6501c19b:	and    DWORD PTR [ebp-0x58],0x0
6501c19f:	mov    DWORD PTR [ebp-0x60],eax
6501c1a2:	jmp    0x6501c1ad
6501c1a4:	call   DWORD PTR ds:0x65024044
6501c1aa:	mov    DWORD PTR [ebp-0x58],eax
6501c1ad:	cmp    DWORD PTR [ebp-0x60],0x0
6501c1b1:	jne    0x6501c210
6501c1b3:	cmp    DWORD PTR [ebp-0x58],0x0
6501c1b7:	je     0x6501c1e0
6501c1b9:	push   0x5
6501c1bb:	pop    esi
6501c1bc:	cmp    DWORD PTR [ebp-0x58],esi
6501c1bf:	jne    0x6501c1d5
6501c1c1:	call   0x65014400
6501c1c6:	mov    DWORD PTR [eax],0x9
6501c1cc:	call   0x65014413
6501c1d1:	mov    DWORD PTR [eax],esi
6501c1d3:	jmp    0x6501c20b
6501c1d5:	push   DWORD PTR [ebp-0x58]
6501c1d8:	call   0x65014426
6501c1dd:	pop    ecx
6501c1de:	jmp    0x6501c20b
6501c1e0:	mov    esi,DWORD PTR [ebp-0x70]
6501c1e3:	mov    eax,DWORD PTR [esi]
6501c1e5:	test   BYTE PTR [edi+eax*1+0x4],0x40
6501c1ea:	je     0x6501c1f8
6501c1ec:	mov    eax,DWORD PTR [ebp-0x64]
6501c1ef:	cmp    BYTE PTR [eax],0x1a
6501c1f2:	jne    0x6501c1f8
6501c1f4:	xor    eax,eax
6501c1f6:	jmp    0x6501c216
6501c1f8:	call   0x65014400
6501c1fd:	mov    DWORD PTR [eax],0x1c
6501c203:	call   0x65014413
6501c208:	and    DWORD PTR [eax],0x0
6501c20b:	or     eax,0xffffffff
6501c20e:	jmp    0x6501c216
6501c210:	mov    eax,DWORD PTR [ebp-0x60]
6501c213:	sub    eax,DWORD PTR [ebp-0x68]
6501c216:	pop    edi
6501c217:	pop    ebx
6501c218:	mov    ecx,DWORD PTR [ebp+0x510]
6501c21e:	xor    ecx,ebp
6501c220:	pop    esi
6501c221:	call   0x650127bc
6501c226:	add    ebp,0x514
6501c22c:	leave  
6501c22d:	ret    
6501c22e:	push   0x10
6501c230:	push   0x65029c60
6501c235:	call   0x65013d00
6501c23a:	mov    eax,DWORD PTR [ebp+0x8]
6501c23d:	cmp    eax,0xfffffffe
6501c240:	jne    0x6501c25d
6501c242:	call   0x65014413
6501c247:	and    DWORD PTR [eax],0x0
6501c24a:	call   0x65014400
6501c24f:	mov    DWORD PTR [eax],0x9
6501c255:	or     eax,0xffffffff
6501c258:	jmp    0x6501c2fa
6501c25d:	xor    edi,edi
6501c25f:	cmp    eax,edi
6501c261:	jl     0x6501c26b
6501c263:	cmp    eax,DWORD PTR ds:0x65031440
6501c269:	jb     0x6501c28c
6501c26b:	call   0x65014413
6501c270:	mov    DWORD PTR [eax],edi
6501c272:	call   0x65014400
6501c277:	mov    DWORD PTR [eax],0x9
6501c27d:	push   edi
6501c27e:	push   edi
6501c27f:	push   edi
6501c280:	push   edi
6501c281:	push   edi
6501c282:	call   0x650122af
6501c287:	add    esp,0x14
6501c28a:	jmp    0x6501c255
6501c28c:	mov    ecx,eax
6501c28e:	sar    ecx,0x5
6501c291:	lea    ebx,[ecx*4+0x65031460]
6501c298:	mov    esi,eax
6501c29a:	and    esi,0x1f
6501c29d:	shl    esi,0x6
6501c2a0:	mov    ecx,DWORD PTR [ebx]
6501c2a2:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6501c2a7:	and    ecx,0x1
6501c2aa:	je     0x6501c26b
6501c2ac:	push   eax
6501c2ad:	call   0x6501da80
6501c2b2:	pop    ecx
6501c2b3:	mov    DWORD PTR [ebp-0x4],edi
6501c2b6:	mov    eax,DWORD PTR [ebx]
6501c2b8:	test   BYTE PTR [eax+esi*1+0x4],0x1
6501c2bd:	je     0x6501c2d5
6501c2bf:	push   DWORD PTR [ebp+0x10]
6501c2c2:	push   DWORD PTR [ebp+0xc]
6501c2c5:	push   DWORD PTR [ebp+0x8]
6501c2c8:	call   0x6501bc0c
6501c2cd:	add    esp,0xc
6501c2d0:	mov    DWORD PTR [ebp-0x1c],eax
6501c2d3:	jmp    0x6501c2eb
6501c2d5:	call   0x65014400
6501c2da:	mov    DWORD PTR [eax],0x9
6501c2e0:	call   0x65014413
6501c2e5:	mov    DWORD PTR [eax],edi
6501c2e7:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501c2eb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501c2f2:	call   0x6501c300
6501c2f7:	mov    eax,DWORD PTR [ebp-0x1c]
6501c2fa:	call   0x65013d45
6501c2ff:	ret    
6501c300:	push   DWORD PTR [ebp+0x8]
6501c303:	call   0x6501db20
6501c308:	pop    ecx
6501c309:	ret    
6501c30a:	inc    DWORD PTR ds:0x6502df74
6501c310:	push   0x1000
6501c315:	call   0x65015a10
6501c31a:	test   eax,eax
6501c31c:	pop    ecx
6501c31d:	mov    ecx,DWORD PTR [esp+0x4]
6501c321:	mov    DWORD PTR [ecx+0x8],eax
6501c324:	je     0x6501c333
6501c326:	or     DWORD PTR [ecx+0xc],0x8
6501c32a:	mov    DWORD PTR [ecx+0x18],0x1000
6501c331:	jmp    0x6501c344
6501c333:	or     DWORD PTR [ecx+0xc],0x4
6501c337:	lea    eax,[ecx+0x14]
6501c33a:	mov    DWORD PTR [ecx+0x8],eax
6501c33d:	mov    DWORD PTR [ecx+0x18],0x2
6501c344:	mov    eax,DWORD PTR [ecx+0x8]
6501c347:	and    DWORD PTR [ecx+0x4],0x0
6501c34b:	mov    DWORD PTR [ecx],eax
6501c34d:	ret    
6501c34e:	mov    eax,DWORD PTR [esp+0x4]
6501c352:	cmp    eax,0xfffffffe
6501c355:	jne    0x6501c365
6501c357:	call   0x65014400
6501c35c:	mov    DWORD PTR [eax],0x9
6501c362:	xor    eax,eax
6501c364:	ret    
6501c365:	push   esi
6501c366:	xor    esi,esi
6501c368:	cmp    eax,esi
6501c36a:	jl     0x6501c374
6501c36c:	cmp    eax,DWORD PTR ds:0x65031440
6501c372:	jb     0x6501c390
6501c374:	call   0x65014400
6501c379:	push   esi
6501c37a:	push   esi
6501c37b:	push   esi
6501c37c:	push   esi
6501c37d:	push   esi
6501c37e:	mov    DWORD PTR [eax],0x9
6501c384:	call   0x650122af
6501c389:	add    esp,0x14
6501c38c:	xor    eax,eax
6501c38e:	pop    esi
6501c38f:	ret    
6501c390:	mov    ecx,eax
6501c392:	and    eax,0x1f
6501c395:	sar    ecx,0x5
6501c398:	mov    ecx,DWORD PTR [ecx*4+0x65031460]
6501c39f:	shl    eax,0x6
6501c3a2:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6501c3a7:	and    eax,0x40
6501c3aa:	pop    esi
6501c3ab:	ret    
6501c3ac:	mov    eax,0x6502cc80
6501c3b1:	ret    
6501c3b2:	mov    eax,ds:0x65031420
6501c3b7:	test   eax,eax
6501c3b9:	push   esi
6501c3ba:	push   0x14
6501c3bc:	pop    esi
6501c3bd:	jne    0x6501c3c6
6501c3bf:	mov    eax,0x200
6501c3c4:	jmp    0x6501c3cc
6501c3c6:	cmp    eax,esi
6501c3c8:	jge    0x6501c3d1
6501c3ca:	mov    eax,esi
6501c3cc:	mov    ds:0x65031420,eax
6501c3d1:	push   0x4
6501c3d3:	push   eax
6501c3d4:	call   0x65015a50
6501c3d9:	test   eax,eax
6501c3db:	pop    ecx
6501c3dc:	pop    ecx
6501c3dd:	mov    ds:0x65030400,eax
6501c3e2:	jne    0x6501c402
6501c3e4:	push   0x4
6501c3e6:	push   esi
6501c3e7:	mov    DWORD PTR ds:0x65031420,esi
6501c3ed:	call   0x65015a50
6501c3f2:	test   eax,eax
6501c3f4:	pop    ecx
6501c3f5:	pop    ecx
6501c3f6:	mov    ds:0x65030400,eax
6501c3fb:	jne    0x6501c402
6501c3fd:	push   0x1a
6501c3ff:	pop    eax
6501c400:	pop    esi
6501c401:	ret    
6501c402:	xor    edx,edx
6501c404:	mov    ecx,0x6502cc80
6501c409:	jmp    0x6501c410
6501c40b:	mov    eax,ds:0x65030400
6501c410:	mov    DWORD PTR [edx+eax*1],ecx
6501c413:	add    ecx,0x20
6501c416:	add    edx,0x4
6501c419:	cmp    ecx,0x6502cf00
6501c41f:	jl     0x6501c40b
6501c421:	push   0xfffffffe
6501c423:	pop    esi
6501c424:	xor    edx,edx
6501c426:	mov    ecx,0x6502cc90
6501c42b:	push   edi
6501c42c:	mov    eax,edx
6501c42e:	sar    eax,0x5
6501c431:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501c438:	mov    edi,edx
6501c43a:	and    edi,0x1f
6501c43d:	shl    edi,0x6
6501c440:	mov    eax,DWORD PTR [edi+eax*1]
6501c443:	cmp    eax,0xffffffff
6501c446:	je     0x6501c450
6501c448:	cmp    eax,esi
6501c44a:	je     0x6501c450
6501c44c:	test   eax,eax
6501c44e:	jne    0x6501c452
6501c450:	mov    DWORD PTR [ecx],esi
6501c452:	add    ecx,0x20
6501c455:	inc    edx
6501c456:	cmp    ecx,0x6502ccf0
6501c45c:	jl     0x6501c42c
6501c45e:	pop    edi
6501c45f:	xor    eax,eax
6501c461:	pop    esi
6501c462:	ret    
6501c463:	call   0x6501de21
6501c468:	cmp    BYTE PTR ds:0x6502d92c,0x0
6501c46f:	je     0x6501c476
6501c471:	call   0x6501dc04
6501c476:	push   DWORD PTR ds:0x65030400
6501c47c:	call   0x650135d6
6501c481:	pop    ecx
6501c482:	ret    
6501c483:	push   esi
6501c484:	mov    esi,DWORD PTR [esp+0x8]
6501c488:	mov    eax,0x6502cc80
6501c48d:	cmp    esi,eax
6501c48f:	jb     0x6501c4b3
6501c491:	cmp    esi,0x6502cee0
6501c497:	ja     0x6501c4b3
6501c499:	mov    ecx,esi
6501c49b:	sub    ecx,eax
6501c49d:	sar    ecx,0x5
6501c4a0:	add    ecx,0x10
6501c4a3:	push   ecx
6501c4a4:	call   0x65019cf8
6501c4a9:	or     DWORD PTR [esi+0xc],0x8000
6501c4b0:	pop    ecx
6501c4b1:	pop    esi
6501c4b2:	ret    
6501c4b3:	add    esi,0x20
6501c4b6:	push   esi
6501c4b7:	call   DWORD PTR ds:0x6502409c
6501c4bd:	pop    esi
6501c4be:	ret    
6501c4bf:	mov    eax,DWORD PTR [esp+0x4]
6501c4c3:	cmp    eax,0x14
6501c4c6:	jge    0x6501c4de
6501c4c8:	add    eax,0x10
6501c4cb:	push   eax
6501c4cc:	call   0x65019cf8
6501c4d1:	mov    eax,DWORD PTR [esp+0xc]
6501c4d5:	or     DWORD PTR [eax+0xc],0x8000
6501c4dc:	pop    ecx
6501c4dd:	ret    
6501c4de:	mov    eax,DWORD PTR [esp+0x8]
6501c4e2:	add    eax,0x20
6501c4e5:	push   eax
6501c4e6:	call   DWORD PTR ds:0x6502409c
6501c4ec:	ret    
6501c4ed:	mov    eax,DWORD PTR [esp+0x4]
6501c4f1:	mov    ecx,0x6502cc80
6501c4f6:	cmp    eax,ecx
6501c4f8:	jb     0x6501c518
6501c4fa:	cmp    eax,0x6502cee0
6501c4ff:	ja     0x6501c518
6501c501:	and    DWORD PTR [eax+0xc],0xffff7fff
6501c508:	sub    eax,ecx
6501c50a:	sar    eax,0x5
6501c50d:	add    eax,0x10
6501c510:	push   eax
6501c511:	call   0x65019c20
6501c516:	pop    ecx
6501c517:	ret    
6501c518:	add    eax,0x20
6501c51b:	push   eax
6501c51c:	call   DWORD PTR ds:0x650240a0
6501c522:	ret    
6501c523:	mov    ecx,DWORD PTR [esp+0x4]
6501c527:	cmp    ecx,0x14
6501c52a:	mov    eax,DWORD PTR [esp+0x8]
6501c52e:	jge    0x6501c542
6501c530:	and    DWORD PTR [eax+0xc],0xffff7fff
6501c537:	add    ecx,0x10
6501c53a:	push   ecx
6501c53b:	call   0x65019c20
6501c540:	pop    ecx
6501c541:	ret    
6501c542:	add    eax,0x20
6501c545:	push   eax
6501c546:	call   DWORD PTR ds:0x650240a0
6501c54c:	ret    
6501c54d:	mov    eax,DWORD PTR [esp+0x4]
6501c551:	push   esi
6501c552:	xor    esi,esi
6501c554:	cmp    eax,esi
6501c556:	jne    0x6501c575
6501c558:	call   0x65014400
6501c55d:	push   esi
6501c55e:	push   esi
6501c55f:	push   esi
6501c560:	push   esi
6501c561:	push   esi
6501c562:	mov    DWORD PTR [eax],0x16
6501c568:	call   0x650122af
6501c56d:	add    esp,0x14
6501c570:	or     eax,0xffffffff
6501c573:	pop    esi
6501c574:	ret    
6501c575:	mov    eax,DWORD PTR [eax+0x10]
6501c578:	pop    esi
6501c579:	ret    
6501c57a:	push   ebp
6501c57b:	mov    ebp,esp
6501c57d:	sub    esp,0x10
6501c580:	mov    eax,ds:0x6502c09c
6501c585:	xor    eax,ebp
6501c587:	mov    DWORD PTR [ebp-0x4],eax
6501c58a:	push   ebx
6501c58b:	push   esi
6501c58c:	mov    esi,DWORD PTR [ebp+0xc]
6501c58f:	test   BYTE PTR [esi+0xc],0x40
6501c593:	push   edi
6501c594:	jne    0x6501c729
6501c59a:	push   esi
6501c59b:	call   0x6501c54d
6501c5a0:	cmp    eax,0xffffffff
6501c5a3:	pop    ecx
6501c5a4:	mov    edi,0x6502c880
6501c5a9:	je     0x6501c5d9
6501c5ab:	push   esi
6501c5ac:	call   0x6501c54d
6501c5b1:	cmp    eax,0xfffffffe
6501c5b4:	pop    ecx
6501c5b5:	je     0x6501c5d9
6501c5b7:	push   esi
6501c5b8:	call   0x6501c54d
6501c5bd:	sar    eax,0x5
6501c5c0:	push   esi
6501c5c1:	lea    ebx,[eax*4+0x65031460]
6501c5c8:	call   0x6501c54d
6501c5cd:	and    eax,0x1f
6501c5d0:	pop    ecx
6501c5d1:	shl    eax,0x6
6501c5d4:	add    eax,DWORD PTR [ebx]
6501c5d6:	pop    ecx
6501c5d7:	jmp    0x6501c5db
6501c5d9:	mov    eax,edi
6501c5db:	mov    al,BYTE PTR [eax+0x24]
6501c5de:	and    al,0x7f
6501c5e0:	cmp    al,0x2
6501c5e2:	je     0x6501c729
6501c5e8:	push   esi
6501c5e9:	call   0x6501c54d
6501c5ee:	cmp    eax,0xffffffff
6501c5f1:	pop    ecx
6501c5f2:	je     0x6501c622
6501c5f4:	push   esi
6501c5f5:	call   0x6501c54d
6501c5fa:	cmp    eax,0xfffffffe
6501c5fd:	pop    ecx
6501c5fe:	je     0x6501c622
6501c600:	push   esi
6501c601:	call   0x6501c54d
6501c606:	sar    eax,0x5
6501c609:	push   esi
6501c60a:	lea    ebx,[eax*4+0x65031460]
6501c611:	call   0x6501c54d
6501c616:	and    eax,0x1f
6501c619:	pop    ecx
6501c61a:	shl    eax,0x6
6501c61d:	add    eax,DWORD PTR [ebx]
6501c61f:	pop    ecx
6501c620:	jmp    0x6501c624
6501c622:	mov    eax,edi
6501c624:	mov    al,BYTE PTR [eax+0x24]
6501c627:	and    al,0x7f
6501c629:	cmp    al,0x1
6501c62b:	jne    0x6501c689
6501c62d:	dec    DWORD PTR [esi+0x4]
6501c630:	mov    ebx,DWORD PTR [ebp+0x8]
6501c633:	js     0x6501c643
6501c635:	mov    eax,DWORD PTR [esi]
6501c637:	mov    BYTE PTR [eax],bl
6501c639:	mov    ecx,DWORD PTR [esi]
6501c63b:	movzx  eax,BYTE PTR [ecx]
6501c63e:	inc    ecx
6501c63f:	mov    DWORD PTR [esi],ecx
6501c641:	jmp    0x6501c64f
6501c643:	movsx  eax,bl
6501c646:	push   esi
6501c647:	push   eax
6501c648:	call   0x65016845
6501c64d:	pop    ecx
6501c64e:	pop    ecx
6501c64f:	cmp    eax,0xffffffff
6501c652:	jne    0x6501c65d
6501c654:	or     ax,0xffff
6501c658:	jmp    0x6501c749
6501c65d:	dec    DWORD PTR [esi+0x4]
6501c660:	js     0x6501c670
6501c662:	mov    eax,DWORD PTR [esi]
6501c664:	mov    BYTE PTR [eax],bh
6501c666:	mov    ecx,DWORD PTR [esi]
6501c668:	movzx  eax,BYTE PTR [ecx]
6501c66b:	inc    ecx
6501c66c:	mov    DWORD PTR [esi],ecx
6501c66e:	jmp    0x6501c67c
6501c670:	movsx  eax,bh
6501c673:	push   esi
6501c674:	push   eax
6501c675:	call   0x65016845
6501c67a:	pop    ecx
6501c67b:	pop    ecx
6501c67c:	cmp    eax,0xffffffff
6501c67f:	je     0x6501c654
6501c681:	mov    ax,bx
6501c684:	jmp    0x6501c749
6501c689:	push   esi
6501c68a:	call   0x6501c54d
6501c68f:	cmp    eax,0xffffffff
6501c692:	pop    ecx
6501c693:	je     0x6501c6c3
6501c695:	push   esi
6501c696:	call   0x6501c54d
6501c69b:	cmp    eax,0xfffffffe
6501c69e:	pop    ecx
6501c69f:	je     0x6501c6c3
6501c6a1:	push   esi
6501c6a2:	call   0x6501c54d
6501c6a7:	sar    eax,0x5
6501c6aa:	push   esi
6501c6ab:	lea    ebx,[eax*4+0x65031460]
6501c6b2:	call   0x6501c54d
6501c6b7:	and    eax,0x1f
6501c6ba:	pop    ecx
6501c6bb:	shl    eax,0x6
6501c6be:	add    eax,DWORD PTR [ebx]
6501c6c0:	pop    ecx
6501c6c1:	jmp    0x6501c6c5
6501c6c3:	mov    eax,edi
6501c6c5:	test   BYTE PTR [eax+0x4],0x80
6501c6c9:	je     0x6501c729
6501c6cb:	push   DWORD PTR [ebp+0x8]
6501c6ce:	lea    eax,[ebp-0xc]
6501c6d1:	push   0x5
6501c6d3:	push   eax
6501c6d4:	lea    eax,[ebp-0x10]
6501c6d7:	push   eax
6501c6d8:	call   0x6501d718
6501c6dd:	add    esp,0x10
6501c6e0:	test   eax,eax
6501c6e2:	jne    0x6501c654
6501c6e8:	xor    ebx,ebx
6501c6ea:	cmp    DWORD PTR [ebp-0x10],ebx
6501c6ed:	jle    0x6501c723
6501c6ef:	dec    DWORD PTR [esi+0x4]
6501c6f2:	js     0x6501c706
6501c6f4:	mov    eax,DWORD PTR [esi]
6501c6f6:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
6501c6fa:	mov    BYTE PTR [eax],cl
6501c6fc:	mov    ecx,DWORD PTR [esi]
6501c6fe:	movzx  eax,BYTE PTR [ecx]
6501c701:	inc    ecx
6501c702:	mov    DWORD PTR [esi],ecx
6501c704:	jmp    0x6501c714
6501c706:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
6501c70b:	push   esi
6501c70c:	push   eax
6501c70d:	call   0x65016845
6501c712:	pop    ecx
6501c713:	pop    ecx
6501c714:	cmp    eax,0xffffffff
6501c717:	je     0x6501c654
6501c71d:	inc    ebx
6501c71e:	cmp    ebx,DWORD PTR [ebp-0x10]
6501c721:	jl     0x6501c6ef
6501c723:	mov    ax,WORD PTR [ebp+0x8]
6501c727:	jmp    0x6501c749
6501c729:	add    DWORD PTR [esi+0x4],0xfffffffe
6501c72d:	js     0x6501c73c
6501c72f:	mov    ecx,DWORD PTR [esi]
6501c731:	mov    eax,DWORD PTR [ebp+0x8]
6501c734:	mov    WORD PTR [ecx],ax
6501c737:	add    DWORD PTR [esi],0x2
6501c73a:	jmp    0x6501c749
6501c73c:	movzx  eax,WORD PTR [ebp+0x8]
6501c740:	push   esi
6501c741:	push   eax
6501c742:	call   0x6501de2a
6501c747:	pop    ecx
6501c748:	pop    ecx
6501c749:	mov    ecx,DWORD PTR [ebp-0x4]
6501c74c:	pop    edi
6501c74d:	pop    esi
6501c74e:	xor    ecx,ebp
6501c750:	pop    ebx
6501c751:	call   0x650127bc
6501c756:	leave  
6501c757:	ret    
6501c758:	mov    eax,ds:0x6502c09c
6501c75d:	or     eax,0x1
6501c760:	xor    ecx,ecx
6501c762:	cmp    DWORD PTR ds:0x6502df78,eax
6501c768:	sete   cl
6501c76b:	mov    eax,ecx
6501c76d:	ret    
6501c76e:	push   ebp
6501c76f:	mov    ebp,esp
6501c771:	sub    esp,0x10
6501c774:	push   ebx
6501c775:	push   esi
6501c776:	mov    esi,DWORD PTR [ebp+0xc]
6501c779:	xor    ebx,ebx
6501c77b:	cmp    esi,ebx
6501c77d:	je     0x6501c792
6501c77f:	cmp    DWORD PTR [ebp+0x10],ebx
6501c782:	je     0x6501c792
6501c784:	cmp    BYTE PTR [esi],bl
6501c786:	jne    0x6501c798
6501c788:	mov    eax,DWORD PTR [ebp+0x8]
6501c78b:	cmp    eax,ebx
6501c78d:	je     0x6501c792
6501c78f:	mov    WORD PTR [eax],bx
6501c792:	xor    eax,eax
6501c794:	pop    esi
6501c795:	pop    ebx
6501c796:	leave  
6501c797:	ret    
6501c798:	push   DWORD PTR [ebp+0x14]
6501c79b:	lea    ecx,[ebp-0x10]
6501c79e:	call   0x6501295f
6501c7a3:	mov    eax,DWORD PTR [ebp-0x10]
6501c7a6:	cmp    DWORD PTR [eax+0x14],ebx
6501c7a9:	jne    0x6501c7ca
6501c7ab:	mov    eax,DWORD PTR [ebp+0x8]
6501c7ae:	cmp    eax,ebx
6501c7b0:	je     0x6501c7b9
6501c7b2:	movzx  cx,BYTE PTR [esi]
6501c7b6:	mov    WORD PTR [eax],cx
6501c7b9:	cmp    BYTE PTR [ebp-0x4],bl
6501c7bc:	je     0x6501c7c5
6501c7be:	mov    eax,DWORD PTR [ebp-0x8]
6501c7c1:	and    DWORD PTR [eax+0x70],0xfffffffd
6501c7c5:	xor    eax,eax
6501c7c7:	inc    eax
6501c7c8:	jmp    0x6501c794
6501c7ca:	lea    eax,[ebp-0x10]
6501c7cd:	push   eax
6501c7ce:	movzx  eax,BYTE PTR [esi]
6501c7d1:	push   eax
6501c7d2:	call   0x65019b3e
6501c7d7:	test   eax,eax
6501c7d9:	pop    ecx
6501c7da:	pop    ecx
6501c7db:	je     0x6501c85a
6501c7dd:	mov    eax,DWORD PTR [ebp-0x10]
6501c7e0:	mov    ecx,DWORD PTR [eax+0xac]
6501c7e6:	cmp    ecx,0x1
6501c7e9:	jle    0x6501c810
6501c7eb:	cmp    DWORD PTR [ebp+0x10],ecx
6501c7ee:	jl     0x6501c810
6501c7f0:	xor    edx,edx
6501c7f2:	cmp    DWORD PTR [ebp+0x8],ebx
6501c7f5:	setne  dl
6501c7f8:	push   edx
6501c7f9:	push   DWORD PTR [ebp+0x8]
6501c7fc:	push   ecx
6501c7fd:	push   esi
6501c7fe:	push   0x9
6501c800:	push   DWORD PTR [eax+0x4]
6501c803:	call   DWORD PTR ds:0x65024024
6501c809:	test   eax,eax
6501c80b:	mov    eax,DWORD PTR [ebp-0x10]
6501c80e:	jne    0x6501c820
6501c810:	mov    ecx,DWORD PTR [ebp+0x10]
6501c813:	cmp    ecx,DWORD PTR [eax+0xac]
6501c819:	jb     0x6501c83b
6501c81b:	cmp    BYTE PTR [esi+0x1],bl
6501c81e:	je     0x6501c83b
6501c820:	cmp    BYTE PTR [ebp-0x4],bl
6501c823:	mov    eax,DWORD PTR [eax+0xac]
6501c829:	je     0x6501c794
6501c82f:	mov    ecx,DWORD PTR [ebp-0x8]
6501c832:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501c836:	jmp    0x6501c794
6501c83b:	call   0x65014400
6501c840:	mov    DWORD PTR [eax],0x2a
6501c846:	cmp    BYTE PTR [ebp-0x4],bl
6501c849:	je     0x6501c852
6501c84b:	mov    eax,DWORD PTR [ebp-0x8]
6501c84e:	and    DWORD PTR [eax+0x70],0xfffffffd
6501c852:	or     eax,0xffffffff
6501c855:	jmp    0x6501c794
6501c85a:	xor    eax,eax
6501c85c:	cmp    DWORD PTR [ebp+0x8],ebx
6501c85f:	setne  al
6501c862:	push   eax
6501c863:	push   DWORD PTR [ebp+0x8]
6501c866:	mov    eax,DWORD PTR [ebp-0x10]
6501c869:	push   0x1
6501c86b:	push   esi
6501c86c:	push   0x9
6501c86e:	push   DWORD PTR [eax+0x4]
6501c871:	call   DWORD PTR ds:0x65024024
6501c877:	test   eax,eax
6501c879:	jne    0x6501c7b9
6501c87f:	jmp    0x6501c83b
6501c881:	push   0x0
6501c883:	push   DWORD PTR [esp+0x10]
6501c887:	push   DWORD PTR [esp+0x10]
6501c88b:	push   DWORD PTR [esp+0x10]
6501c88f:	call   0x6501c76e
6501c894:	add    esp,0x10
6501c897:	ret    
6501c898:	test   BYTE PTR [ecx+0xc],0x40
6501c89c:	je     0x6501c8a4
6501c89e:	cmp    DWORD PTR [ecx+0x8],0x0
6501c8a2:	je     0x6501c8c8
6501c8a4:	dec    DWORD PTR [ecx+0x4]
6501c8a7:	js     0x6501c8b4
6501c8a9:	mov    edx,DWORD PTR [ecx]
6501c8ab:	mov    BYTE PTR [edx],al
6501c8ad:	inc    DWORD PTR [ecx]
6501c8af:	movzx  eax,al
6501c8b2:	jmp    0x6501c8c0
6501c8b4:	movsx  eax,al
6501c8b7:	push   ecx
6501c8b8:	push   eax
6501c8b9:	call   0x65016845
6501c8be:	pop    ecx
6501c8bf:	pop    ecx
6501c8c0:	cmp    eax,0xffffffff
6501c8c3:	jne    0x6501c8c8
6501c8c5:	or     DWORD PTR [esi],eax
6501c8c7:	ret    
6501c8c8:	inc    DWORD PTR [esi]
6501c8ca:	ret    
6501c8cb:	push   ebp
6501c8cc:	mov    ebp,esp
6501c8ce:	push   esi
6501c8cf:	mov    esi,eax
6501c8d1:	jmp    0x6501c8e6
6501c8d3:	mov    ecx,DWORD PTR [ebp+0x10]
6501c8d6:	mov    al,BYTE PTR [ebp+0x8]
6501c8d9:	dec    DWORD PTR [ebp+0xc]
6501c8dc:	call   0x6501c898
6501c8e1:	cmp    DWORD PTR [esi],0xffffffff
6501c8e4:	je     0x6501c8ec
6501c8e6:	cmp    DWORD PTR [ebp+0xc],0x0
6501c8ea:	jg     0x6501c8d3
6501c8ec:	pop    esi
6501c8ed:	pop    ebp
6501c8ee:	ret    
6501c8ef:	push   ebp
6501c8f0:	lea    ebp,[esp-0x1f8]
6501c8f7:	sub    esp,0x278
6501c8fd:	mov    eax,ds:0x6502c09c
6501c902:	xor    eax,ebp
6501c904:	mov    DWORD PTR [ebp+0x1f4],eax
6501c90a:	mov    eax,DWORD PTR [ebp+0x200]
6501c910:	push   ebx
6501c911:	mov    ebx,DWORD PTR [ebp+0x204]
6501c917:	push   esi
6501c918:	xor    esi,esi
6501c91a:	push   edi
6501c91b:	mov    edi,DWORD PTR [ebp+0x20c]
6501c921:	push   DWORD PTR [ebp+0x208]
6501c927:	lea    ecx,[ebp-0x5c]
6501c92a:	mov    DWORD PTR [ebp-0x30],eax
6501c92d:	mov    DWORD PTR [ebp-0x2c],edi
6501c930:	mov    DWORD PTR [ebp-0x64],esi
6501c933:	mov    DWORD PTR [ebp-0x18],esi
6501c936:	mov    DWORD PTR [ebp-0x40],esi
6501c939:	mov    DWORD PTR [ebp-0x20],esi
6501c93c:	mov    DWORD PTR [ebp-0x3c],esi
6501c93f:	mov    DWORD PTR [ebp-0x68],esi
6501c942:	mov    DWORD PTR [ebp-0x44],esi
6501c945:	call   0x6501295f
6501c94a:	cmp    DWORD PTR [ebp-0x30],esi
6501c94d:	jne    0x6501c97c
6501c94f:	call   0x65014400
6501c954:	push   esi
6501c955:	push   esi
6501c956:	push   esi
6501c957:	push   esi
6501c958:	mov    DWORD PTR [eax],0x16
6501c95e:	push   esi
6501c95f:	call   0x650122af
6501c964:	add    esp,0x14
6501c967:	cmp    BYTE PTR [ebp-0x50],0x0
6501c96b:	je     0x6501c974
6501c96d:	mov    eax,DWORD PTR [ebp-0x54]
6501c970:	and    DWORD PTR [eax+0x70],0xfffffffd
6501c974:	or     eax,0xffffffff
6501c977:	jmp    0x6501d266
6501c97c:	mov    eax,DWORD PTR [ebp-0x30]
6501c97f:	test   BYTE PTR [eax+0xc],0x40
6501c983:	jne    0x6501ca2d
6501c989:	push   eax
6501c98a:	call   0x6501c54d
6501c98f:	cmp    eax,0xffffffff
6501c992:	pop    ecx
6501c993:	je     0x6501c9cb
6501c995:	push   DWORD PTR [ebp-0x30]
6501c998:	call   0x6501c54d
6501c99d:	cmp    eax,0xfffffffe
6501c9a0:	pop    ecx
6501c9a1:	je     0x6501c9cb
6501c9a3:	push   DWORD PTR [ebp-0x30]
6501c9a6:	call   0x6501c54d
6501c9ab:	push   DWORD PTR [ebp-0x30]
6501c9ae:	sar    eax,0x5
6501c9b1:	lea    esi,[eax*4+0x65031460]
6501c9b8:	call   0x6501c54d
6501c9bd:	and    eax,0x1f
6501c9c0:	shl    eax,0x6
6501c9c3:	add    eax,DWORD PTR [esi]
6501c9c5:	pop    ecx
6501c9c6:	pop    ecx
6501c9c7:	xor    esi,esi
6501c9c9:	jmp    0x6501c9d0
6501c9cb:	mov    eax,0x6502c880
6501c9d0:	test   BYTE PTR [eax+0x24],0x7f
6501c9d4:	jne    0x6501c94f
6501c9da:	push   DWORD PTR [ebp-0x30]
6501c9dd:	call   0x6501c54d
6501c9e2:	cmp    eax,0xffffffff
6501c9e5:	pop    ecx
6501c9e6:	je     0x6501ca1e
6501c9e8:	push   DWORD PTR [ebp-0x30]
6501c9eb:	call   0x6501c54d
6501c9f0:	cmp    eax,0xfffffffe
6501c9f3:	pop    ecx
6501c9f4:	je     0x6501ca1e
6501c9f6:	push   DWORD PTR [ebp-0x30]
6501c9f9:	call   0x6501c54d
6501c9fe:	push   DWORD PTR [ebp-0x30]
6501ca01:	sar    eax,0x5
6501ca04:	lea    esi,[eax*4+0x65031460]
6501ca0b:	call   0x6501c54d
6501ca10:	and    eax,0x1f
6501ca13:	shl    eax,0x6
6501ca16:	add    eax,DWORD PTR [esi]
6501ca18:	pop    ecx
6501ca19:	pop    ecx
6501ca1a:	xor    esi,esi
6501ca1c:	jmp    0x6501ca23
6501ca1e:	mov    eax,0x6502c880
6501ca23:	test   BYTE PTR [eax+0x24],0x80
6501ca27:	jne    0x6501c94f
6501ca2d:	cmp    ebx,esi
6501ca2f:	je     0x6501c94f
6501ca35:	mov    dl,BYTE PTR [ebx]
6501ca37:	test   dl,dl
6501ca39:	mov    DWORD PTR [ebp-0x34],esi
6501ca3c:	mov    DWORD PTR [ebp-0x28],esi
6501ca3f:	mov    DWORD PTR [ebp-0x48],esi
6501ca42:	mov    DWORD PTR [ebp-0x60],esi
6501ca45:	mov    BYTE PTR [ebp-0x19],dl
6501ca48:	je     0x6501d256
6501ca4e:	inc    ebx
6501ca4f:	xor    eax,eax
6501ca51:	cmp    DWORD PTR [ebp-0x34],eax
6501ca54:	mov    DWORD PTR [ebp-0x4c],ebx
6501ca57:	jl     0x6501d245
6501ca5d:	mov    cl,dl
6501ca5f:	sub    cl,0x20
6501ca62:	cmp    cl,0x58
6501ca65:	ja     0x6501ca74
6501ca67:	movsx  eax,dl
6501ca6a:	movzx  eax,BYTE PTR [eax+0x65026478]
6501ca71:	and    eax,0xf
6501ca74:	mov    ecx,DWORD PTR [ebp-0x48]
6501ca77:	imul   eax,eax,0x9
6501ca7a:	movzx  eax,BYTE PTR [eax+ecx*1+0x65026498]
6501ca82:	push   0x8
6501ca84:	shr    eax,0x4
6501ca87:	pop    esi
6501ca88:	cmp    eax,esi
6501ca8a:	mov    DWORD PTR [ebp-0x48],eax
6501ca8d:	je     0x6501d22e
6501ca93:	push   0x7
6501ca95:	pop    ecx
6501ca96:	cmp    eax,ecx
6501ca98:	ja     0x6501d218
6501ca9e:	jmp    DWORD PTR [eax*4+0x6501d27f]
6501caa5:	xor    eax,eax
6501caa7:	or     DWORD PTR [ebp-0x20],0xffffffff
6501caab:	mov    DWORD PTR [ebp-0x74],eax
6501caae:	mov    DWORD PTR [ebp-0x68],eax
6501cab1:	mov    DWORD PTR [ebp-0x40],eax
6501cab4:	mov    DWORD PTR [ebp-0x3c],eax
6501cab7:	mov    DWORD PTR [ebp-0x18],eax
6501caba:	mov    DWORD PTR [ebp-0x44],eax
6501cabd:	jmp    0x6501d218
6501cac2:	movsx  eax,dl
6501cac5:	sub    eax,0x20
6501cac8:	je     0x6501cb06
6501caca:	sub    eax,0x3
6501cacd:	je     0x6501cafa
6501cacf:	sub    eax,esi
6501cad1:	je     0x6501caf1
6501cad3:	dec    eax
6501cad4:	dec    eax
6501cad5:	je     0x6501cae8
6501cad7:	sub    eax,0x3
6501cada:	jne    0x6501d218
6501cae0:	or     DWORD PTR [ebp-0x18],esi
6501cae3:	jmp    0x6501d218
6501cae8:	or     DWORD PTR [ebp-0x18],0x4
6501caec:	jmp    0x6501d218
6501caf1:	or     DWORD PTR [ebp-0x18],0x1
6501caf5:	jmp    0x6501d218
6501cafa:	or     DWORD PTR [ebp-0x18],0x80
6501cb01:	jmp    0x6501d218
6501cb06:	or     DWORD PTR [ebp-0x18],0x2
6501cb0a:	jmp    0x6501d218
6501cb0f:	cmp    dl,0x2a
6501cb12:	jne    0x6501cb34
6501cb14:	add    edi,0x4
6501cb17:	mov    DWORD PTR [ebp-0x2c],edi
6501cb1a:	mov    edi,DWORD PTR [edi-0x4]
6501cb1d:	test   edi,edi
6501cb1f:	mov    DWORD PTR [ebp-0x40],edi
6501cb22:	jge    0x6501d218
6501cb28:	or     DWORD PTR [ebp-0x18],0x4
6501cb2c:	neg    DWORD PTR [ebp-0x40]
6501cb2f:	jmp    0x6501d218
6501cb34:	mov    eax,DWORD PTR [ebp-0x40]
6501cb37:	imul   eax,eax,0xa
6501cb3a:	movsx  ecx,dl
6501cb3d:	lea    eax,[eax+ecx*1-0x30]
6501cb41:	mov    DWORD PTR [ebp-0x40],eax
6501cb44:	jmp    0x6501d218
6501cb49:	and    DWORD PTR [ebp-0x20],0x0
6501cb4d:	jmp    0x6501d218
6501cb52:	cmp    dl,0x2a
6501cb55:	jne    0x6501cb74
6501cb57:	add    edi,0x4
6501cb5a:	mov    DWORD PTR [ebp-0x2c],edi
6501cb5d:	mov    edi,DWORD PTR [edi-0x4]
6501cb60:	test   edi,edi
6501cb62:	mov    DWORD PTR [ebp-0x20],edi
6501cb65:	jge    0x6501d218
6501cb6b:	or     DWORD PTR [ebp-0x20],0xffffffff
6501cb6f:	jmp    0x6501d218
6501cb74:	mov    eax,DWORD PTR [ebp-0x20]
6501cb77:	imul   eax,eax,0xa
6501cb7a:	movsx  ecx,dl
6501cb7d:	lea    eax,[eax+ecx*1-0x30]
6501cb81:	mov    DWORD PTR [ebp-0x20],eax
6501cb84:	jmp    0x6501d218
6501cb89:	cmp    dl,0x49
6501cb8c:	je     0x6501cbd4
6501cb8e:	cmp    dl,0x68
6501cb91:	je     0x6501cbcb
6501cb93:	cmp    dl,0x6c
6501cb96:	je     0x6501cbad
6501cb98:	cmp    dl,0x77
6501cb9b:	jne    0x6501d218
6501cba1:	or     DWORD PTR [ebp-0x18],0x800
6501cba8:	jmp    0x6501d218
6501cbad:	cmp    BYTE PTR [ebx],0x6c
6501cbb0:	jne    0x6501cbc2
6501cbb2:	inc    ebx
6501cbb3:	or     DWORD PTR [ebp-0x18],0x1000
6501cbba:	mov    DWORD PTR [ebp-0x4c],ebx
6501cbbd:	jmp    0x6501d218
6501cbc2:	or     DWORD PTR [ebp-0x18],0x10
6501cbc6:	jmp    0x6501d218
6501cbcb:	or     DWORD PTR [ebp-0x18],0x20
6501cbcf:	jmp    0x6501d218
6501cbd4:	mov    al,BYTE PTR [ebx]
6501cbd6:	cmp    al,0x36
6501cbd8:	jne    0x6501cbf1
6501cbda:	cmp    BYTE PTR [ebx+0x1],0x34
6501cbde:	jne    0x6501cbf1
6501cbe0:	inc    ebx
6501cbe1:	inc    ebx
6501cbe2:	or     DWORD PTR [ebp-0x18],0x8000
6501cbe9:	mov    DWORD PTR [ebp-0x4c],ebx
6501cbec:	jmp    0x6501d218
6501cbf1:	cmp    al,0x33
6501cbf3:	jne    0x6501cc0c
6501cbf5:	cmp    BYTE PTR [ebx+0x1],0x32
6501cbf9:	jne    0x6501cc0c
6501cbfb:	inc    ebx
6501cbfc:	inc    ebx
6501cbfd:	and    DWORD PTR [ebp-0x18],0xffff7fff
6501cc04:	mov    DWORD PTR [ebp-0x4c],ebx
6501cc07:	jmp    0x6501d218
6501cc0c:	cmp    al,0x64
6501cc0e:	je     0x6501d218
6501cc14:	cmp    al,0x69
6501cc16:	je     0x6501d218
6501cc1c:	cmp    al,0x6f
6501cc1e:	je     0x6501d218
6501cc24:	cmp    al,0x75
6501cc26:	je     0x6501d218
6501cc2c:	cmp    al,0x78
6501cc2e:	je     0x6501d218
6501cc34:	cmp    al,0x58
6501cc36:	je     0x6501d218
6501cc3c:	and    DWORD PTR [ebp-0x48],0x0
6501cc40:	and    DWORD PTR [ebp-0x44],0x0
6501cc44:	lea    eax,[ebp-0x5c]
6501cc47:	push   eax
6501cc48:	movzx  eax,dl
6501cc4b:	push   eax
6501cc4c:	call   0x65019b3e
6501cc51:	pop    ecx
6501cc52:	test   eax,eax
6501cc54:	mov    al,BYTE PTR [ebp-0x19]
6501cc57:	pop    ecx
6501cc58:	je     0x6501cc73
6501cc5a:	mov    ecx,DWORD PTR [ebp-0x30]
6501cc5d:	lea    esi,[ebp-0x34]
6501cc60:	call   0x6501c898
6501cc65:	mov    al,BYTE PTR [ebx]
6501cc67:	inc    ebx
6501cc68:	test   al,al
6501cc6a:	mov    DWORD PTR [ebp-0x4c],ebx
6501cc6d:	je     0x6501d22e
6501cc73:	mov    ecx,DWORD PTR [ebp-0x30]
6501cc76:	lea    esi,[ebp-0x34]
6501cc79:	call   0x6501c898
6501cc7e:	jmp    0x6501d218
6501cc83:	movsx  eax,dl
6501cc86:	cmp    eax,0x64
6501cc89:	jg     0x6501ce03
6501cc8f:	je     0x6501ce7e
6501cc95:	cmp    eax,0x53
6501cc98:	jg     0x6501cd4a
6501cc9e:	je     0x6501ccfb
6501cca0:	sub    eax,0x41
6501cca3:	je     0x6501ccb5
6501cca5:	dec    eax
6501cca6:	dec    eax
6501cca7:	je     0x6501ccea
6501cca9:	dec    eax
6501ccaa:	dec    eax
6501ccab:	je     0x6501ccb5
6501ccad:	dec    eax
6501ccae:	dec    eax
6501ccaf:	jne    0x6501d100
6501ccb5:	add    dl,0x20
6501ccb8:	mov    DWORD PTR [ebp-0x74],0x1
6501ccbf:	mov    BYTE PTR [ebp-0x19],dl
6501ccc2:	or     DWORD PTR [ebp-0x18],0x40
6501ccc6:	cmp    DWORD PTR [ebp-0x20],0x0
6501ccca:	lea    ebx,[ebp-0x14]
6501cccd:	mov    eax,0x200
6501ccd2:	mov    DWORD PTR [ebp-0x24],ebx
6501ccd5:	mov    DWORD PTR [ebp-0x6c],eax
6501ccd8:	jge    0x6501cea2
6501ccde:	mov    DWORD PTR [ebp-0x20],0x6
6501cce5:	jmp    0x6501cef1
6501ccea:	test   WORD PTR [ebp-0x18],0x830
6501ccf0:	jne    0x6501cd67
6501ccf2:	or     DWORD PTR [ebp-0x18],0x800
6501ccf9:	jmp    0x6501cd67
6501ccfb:	test   WORD PTR [ebp-0x18],0x830
6501cd01:	jne    0x6501cd0a
6501cd03:	or     DWORD PTR [ebp-0x18],0x800
6501cd0a:	mov    ecx,DWORD PTR [ebp-0x20]
6501cd0d:	cmp    ecx,0xffffffff
6501cd10:	jne    0x6501cd17
6501cd12:	mov    ecx,0x7fffffff
6501cd17:	add    edi,0x4
6501cd1a:	test   WORD PTR [ebp-0x18],0x810
6501cd20:	mov    DWORD PTR [ebp-0x2c],edi
6501cd23:	mov    edi,DWORD PTR [edi-0x4]
6501cd26:	mov    DWORD PTR [ebp-0x24],edi
6501cd29:	je     0x6501d0de
6501cd2f:	test   edi,edi
6501cd31:	jne    0x6501cd3b
6501cd33:	mov    eax,ds:0x6502c954
6501cd38:	mov    DWORD PTR [ebp-0x24],eax
6501cd3b:	mov    eax,DWORD PTR [ebp-0x24]
6501cd3e:	mov    DWORD PTR [ebp-0x44],0x1
6501cd45:	jmp    0x6501d0d3
6501cd4a:	sub    eax,0x58
6501cd4d:	je     0x6501cf87
6501cd53:	dec    eax
6501cd54:	dec    eax
6501cd55:	je     0x6501cdb4
6501cd57:	sub    eax,ecx
6501cd59:	je     0x6501ccc2
6501cd5f:	dec    eax
6501cd60:	dec    eax
6501cd61:	jne    0x6501d100
6501cd67:	add    edi,0x4
6501cd6a:	test   WORD PTR [ebp-0x18],0x810
6501cd70:	mov    DWORD PTR [ebp-0x2c],edi
6501cd73:	je     0x6501cd9c
6501cd75:	movzx  eax,WORD PTR [edi-0x4]
6501cd79:	push   eax
6501cd7a:	push   0x200
6501cd7f:	lea    eax,[ebp-0x14]
6501cd82:	push   eax
6501cd83:	lea    eax,[ebp-0x28]
6501cd86:	push   eax
6501cd87:	call   0x6501d718
6501cd8c:	add    esp,0x10
6501cd8f:	test   eax,eax
6501cd91:	je     0x6501cda9
6501cd93:	mov    DWORD PTR [ebp-0x68],0x1
6501cd9a:	jmp    0x6501cda9
6501cd9c:	mov    al,BYTE PTR [edi-0x4]
6501cd9f:	mov    BYTE PTR [ebp-0x14],al
6501cda2:	mov    DWORD PTR [ebp-0x28],0x1
6501cda9:	lea    eax,[ebp-0x14]
6501cdac:	mov    DWORD PTR [ebp-0x24],eax
6501cdaf:	jmp    0x6501d100
6501cdb4:	mov    eax,DWORD PTR [edi]
6501cdb6:	add    edi,0x4
6501cdb9:	test   eax,eax
6501cdbb:	mov    DWORD PTR [ebp-0x2c],edi
6501cdbe:	je     0x6501cdef
6501cdc0:	mov    ecx,DWORD PTR [eax+0x4]
6501cdc3:	test   ecx,ecx
6501cdc5:	je     0x6501cdef
6501cdc7:	test   WORD PTR [ebp-0x18],0x800
6501cdcd:	movsx  eax,WORD PTR [eax]
6501cdd0:	mov    DWORD PTR [ebp-0x24],ecx
6501cdd3:	je     0x6501cde6
6501cdd5:	cdq    
6501cdd6:	sub    eax,edx
6501cdd8:	sar    eax,1
6501cdda:	mov    DWORD PTR [ebp-0x44],0x1
6501cde1:	jmp    0x6501d0fd
6501cde6:	and    DWORD PTR [ebp-0x44],0x0
6501cdea:	jmp    0x6501d0fd
6501cdef:	mov    eax,ds:0x6502c950
6501cdf4:	mov    DWORD PTR [ebp-0x24],eax
6501cdf7:	push   eax
6501cdf8:	call   0x65013f00
6501cdfd:	pop    ecx
6501cdfe:	jmp    0x6501d0fd
6501ce03:	cmp    eax,0x70
6501ce06:	jg     0x6501cf8c
6501ce0c:	je     0x6501cf84
6501ce12:	cmp    eax,0x65
6501ce15:	jl     0x6501d100
6501ce1b:	cmp    eax,0x67
6501ce1e:	jle    0x6501ccc2
6501ce24:	cmp    eax,0x69
6501ce27:	je     0x6501ce7e
6501ce29:	cmp    eax,0x6e
6501ce2c:	je     0x6501ce49
6501ce2e:	cmp    eax,0x6f
6501ce31:	jne    0x6501d100
6501ce37:	test   BYTE PTR [ebp-0x18],0x80
6501ce3b:	mov    DWORD PTR [ebp-0x28],esi
6501ce3e:	je     0x6501ce89
6501ce40:	or     DWORD PTR [ebp-0x18],0x200
6501ce47:	jmp    0x6501ce89
6501ce49:	mov    esi,DWORD PTR [edi]
6501ce4b:	add    edi,0x4
6501ce4e:	mov    DWORD PTR [ebp-0x2c],edi
6501ce51:	call   0x6501c758
6501ce56:	test   eax,eax
6501ce58:	je     0x6501d22e
6501ce5e:	test   BYTE PTR [ebp-0x18],0x20
6501ce62:	je     0x6501ce6d
6501ce64:	mov    ax,WORD PTR [ebp-0x34]
6501ce68:	mov    WORD PTR [esi],ax
6501ce6b:	jmp    0x6501ce72
6501ce6d:	mov    eax,DWORD PTR [ebp-0x34]
6501ce70:	mov    DWORD PTR [esi],eax
6501ce72:	mov    DWORD PTR [ebp-0x68],0x1
6501ce79:	jmp    0x6501d205
6501ce7e:	or     DWORD PTR [ebp-0x18],0x40
6501ce82:	mov    DWORD PTR [ebp-0x28],0xa
6501ce89:	mov    ecx,DWORD PTR [ebp-0x18]
6501ce8c:	test   cx,cx
6501ce8f:	jns    0x6501cfd6
6501ce95:	add    edi,esi
6501ce97:	mov    eax,DWORD PTR [edi-0x8]
6501ce9a:	mov    edx,DWORD PTR [edi-0x4]
6501ce9d:	jmp    0x6501d00b
6501cea2:	jne    0x6501ceb2
6501cea4:	cmp    dl,0x67
6501cea7:	jne    0x6501cef1
6501cea9:	mov    DWORD PTR [ebp-0x20],0x1
6501ceb0:	jmp    0x6501cef1
6501ceb2:	cmp    DWORD PTR [ebp-0x20],eax
6501ceb5:	jle    0x6501ceba
6501ceb7:	mov    DWORD PTR [ebp-0x20],eax
6501ceba:	cmp    DWORD PTR [ebp-0x20],0xa3
6501cec1:	jle    0x6501cef1
6501cec3:	mov    esi,DWORD PTR [ebp-0x20]
6501cec6:	add    esi,0x15d
6501cecc:	push   esi
6501cecd:	call   0x65015a10
6501ced2:	test   eax,eax
6501ced4:	mov    dl,BYTE PTR [ebp-0x19]
6501ced7:	pop    ecx
6501ced8:	mov    DWORD PTR [ebp-0x60],eax
6501cedb:	push   0x8
6501cedd:	je     0x6501cee9
6501cedf:	mov    DWORD PTR [ebp-0x24],eax
6501cee2:	mov    DWORD PTR [ebp-0x6c],esi
6501cee5:	mov    ebx,eax
6501cee7:	jmp    0x6501cef0
6501cee9:	mov    DWORD PTR [ebp-0x20],0xa3
6501cef0:	pop    esi
6501cef1:	add    edi,esi
6501cef3:	mov    eax,DWORD PTR [edi-0x8]
6501cef6:	mov    DWORD PTR [ebp-0x80],eax
6501cef9:	mov    eax,DWORD PTR [edi-0x4]
6501cefc:	mov    DWORD PTR [ebp-0x7c],eax
6501ceff:	lea    eax,[ebp-0x5c]
6501cf02:	push   eax
6501cf03:	push   DWORD PTR [ebp-0x74]
6501cf06:	movsx  eax,dl
6501cf09:	push   DWORD PTR [ebp-0x20]
6501cf0c:	mov    DWORD PTR [ebp-0x2c],edi
6501cf0f:	push   eax
6501cf10:	push   DWORD PTR [ebp-0x6c]
6501cf13:	lea    eax,[ebp-0x80]
6501cf16:	push   ebx
6501cf17:	push   eax
6501cf18:	push   DWORD PTR ds:0x6502cb5c
6501cf1e:	call   0x6501452f
6501cf23:	pop    ecx
6501cf24:	call   eax
6501cf26:	mov    edi,DWORD PTR [ebp-0x18]
6501cf29:	add    esp,0x1c
6501cf2c:	and    edi,0x80
6501cf32:	je     0x6501cf4f
6501cf34:	cmp    DWORD PTR [ebp-0x20],0x0
6501cf38:	jne    0x6501cf4f
6501cf3a:	lea    eax,[ebp-0x5c]
6501cf3d:	push   eax
6501cf3e:	push   ebx
6501cf3f:	push   DWORD PTR ds:0x6502cb68
6501cf45:	call   0x6501452f
6501cf4a:	pop    ecx
6501cf4b:	call   eax
6501cf4d:	pop    ecx
6501cf4e:	pop    ecx
6501cf4f:	cmp    BYTE PTR [ebp-0x19],0x67
6501cf53:	jne    0x6501cf6e
6501cf55:	test   edi,edi
6501cf57:	jne    0x6501cf6e
6501cf59:	lea    eax,[ebp-0x5c]
6501cf5c:	push   eax
6501cf5d:	push   ebx
6501cf5e:	push   DWORD PTR ds:0x6502cb64
6501cf64:	call   0x6501452f
6501cf69:	pop    ecx
6501cf6a:	call   eax
6501cf6c:	pop    ecx
6501cf6d:	pop    ecx
6501cf6e:	cmp    BYTE PTR [ebx],0x2d
6501cf71:	jne    0x6501cf7e
6501cf73:	or     DWORD PTR [ebp-0x18],0x100
6501cf7a:	inc    ebx
6501cf7b:	mov    DWORD PTR [ebp-0x24],ebx
6501cf7e:	push   ebx
6501cf7f:	jmp    0x6501cdf8
6501cf84:	mov    DWORD PTR [ebp-0x20],esi
6501cf87:	mov    DWORD PTR [ebp-0x64],ecx
6501cf8a:	jmp    0x6501cfad
6501cf8c:	sub    eax,0x73
6501cf8f:	je     0x6501cd0a
6501cf95:	dec    eax
6501cf96:	dec    eax
6501cf97:	je     0x6501ce82
6501cf9d:	sub    eax,0x3
6501cfa0:	jne    0x6501d100
6501cfa6:	mov    DWORD PTR [ebp-0x64],0x27
6501cfad:	test   BYTE PTR [ebp-0x18],0x80
6501cfb1:	mov    DWORD PTR [ebp-0x28],0x10
6501cfb8:	je     0x6501ce89
6501cfbe:	mov    al,BYTE PTR [ebp-0x64]
6501cfc1:	add    al,0x51
6501cfc3:	mov    BYTE PTR [ebp-0x38],0x30
6501cfc7:	mov    BYTE PTR [ebp-0x37],al
6501cfca:	mov    DWORD PTR [ebp-0x3c],0x2
6501cfd1:	jmp    0x6501ce89
6501cfd6:	test   cx,0x1000
6501cfdb:	jne    0x6501ce95
6501cfe1:	add    edi,0x4
6501cfe4:	test   cl,0x20
6501cfe7:	je     0x6501cffe
6501cfe9:	test   cl,0x40
6501cfec:	mov    DWORD PTR [ebp-0x2c],edi
6501cfef:	je     0x6501cff7
6501cff1:	movsx  eax,WORD PTR [edi-0x4]
6501cff5:	jmp    0x6501cffb
6501cff7:	movzx  eax,WORD PTR [edi-0x4]
6501cffb:	cdq    
6501cffc:	jmp    0x6501d00e
6501cffe:	test   cl,0x40
6501d001:	mov    eax,DWORD PTR [edi-0x4]
6501d004:	je     0x6501d009
6501d006:	cdq    
6501d007:	jmp    0x6501d00b
6501d009:	xor    edx,edx
6501d00b:	mov    DWORD PTR [ebp-0x2c],edi
6501d00e:	test   cl,0x40
6501d011:	je     0x6501d02b
6501d013:	test   edx,edx
6501d015:	jg     0x6501d02b
6501d017:	jl     0x6501d01d
6501d019:	test   eax,eax
6501d01b:	jae    0x6501d02b
6501d01d:	neg    eax
6501d01f:	adc    edx,0x0
6501d022:	neg    edx
6501d024:	or     DWORD PTR [ebp-0x18],0x100
6501d02b:	test   WORD PTR [ebp-0x18],0x9000
6501d031:	mov    ebx,edx
6501d033:	mov    edi,eax
6501d035:	jne    0x6501d039
6501d037:	xor    ebx,ebx
6501d039:	cmp    DWORD PTR [ebp-0x20],0x0
6501d03d:	jge    0x6501d048
6501d03f:	mov    DWORD PTR [ebp-0x20],0x1
6501d046:	jmp    0x6501d059
6501d048:	and    DWORD PTR [ebp-0x18],0xfffffff7
6501d04c:	mov    eax,0x200
6501d051:	cmp    DWORD PTR [ebp-0x20],eax
6501d054:	jle    0x6501d059
6501d056:	mov    DWORD PTR [ebp-0x20],eax
6501d059:	mov    eax,edi
6501d05b:	or     eax,ebx
6501d05d:	jne    0x6501d062
6501d05f:	and    DWORD PTR [ebp-0x3c],eax
6501d062:	lea    esi,[ebp+0x1eb]
6501d068:	mov    eax,DWORD PTR [ebp-0x20]
6501d06b:	dec    DWORD PTR [ebp-0x20]
6501d06e:	test   eax,eax
6501d070:	jg     0x6501d078
6501d072:	mov    eax,edi
6501d074:	or     eax,ebx
6501d076:	je     0x6501d09c
6501d078:	mov    eax,DWORD PTR [ebp-0x28]
6501d07b:	cdq    
6501d07c:	push   edx
6501d07d:	push   eax
6501d07e:	push   ebx
6501d07f:	push   edi
6501d080:	call   0x65018ae0
6501d085:	add    ecx,0x30
6501d088:	cmp    ecx,0x39
6501d08b:	mov    DWORD PTR [ebp-0x6c],ebx
6501d08e:	mov    edi,eax
6501d090:	mov    ebx,edx
6501d092:	jle    0x6501d097
6501d094:	add    ecx,DWORD PTR [ebp-0x64]
6501d097:	mov    BYTE PTR [esi],cl
6501d099:	dec    esi
6501d09a:	jmp    0x6501d068
6501d09c:	lea    eax,[ebp+0x1eb]
6501d0a2:	sub    eax,esi
6501d0a4:	inc    esi
6501d0a5:	test   WORD PTR [ebp-0x18],0x200
6501d0ab:	mov    DWORD PTR [ebp-0x28],eax
6501d0ae:	mov    DWORD PTR [ebp-0x24],esi
6501d0b1:	je     0x6501d100
6501d0b3:	test   eax,eax
6501d0b5:	je     0x6501d0be
6501d0b7:	mov    ecx,esi
6501d0b9:	cmp    BYTE PTR [ecx],0x30
6501d0bc:	je     0x6501d100
6501d0be:	dec    DWORD PTR [ebp-0x24]
6501d0c1:	mov    ecx,DWORD PTR [ebp-0x24]
6501d0c4:	mov    BYTE PTR [ecx],0x30
6501d0c7:	inc    eax
6501d0c8:	jmp    0x6501d0fd
6501d0ca:	dec    ecx
6501d0cb:	cmp    WORD PTR [eax],0x0
6501d0cf:	je     0x6501d0d7
6501d0d1:	inc    eax
6501d0d2:	inc    eax
6501d0d3:	test   ecx,ecx
6501d0d5:	jne    0x6501d0ca
6501d0d7:	sub    eax,DWORD PTR [ebp-0x24]
6501d0da:	sar    eax,1
6501d0dc:	jmp    0x6501d0fd
6501d0de:	test   edi,edi
6501d0e0:	jne    0x6501d0ea
6501d0e2:	mov    eax,ds:0x6502c950
6501d0e7:	mov    DWORD PTR [ebp-0x24],eax
6501d0ea:	mov    eax,DWORD PTR [ebp-0x24]
6501d0ed:	jmp    0x6501d0f6
6501d0ef:	dec    ecx
6501d0f0:	cmp    BYTE PTR [eax],0x0
6501d0f3:	je     0x6501d0fa
6501d0f5:	inc    eax
6501d0f6:	test   ecx,ecx
6501d0f8:	jne    0x6501d0ef
6501d0fa:	sub    eax,DWORD PTR [ebp-0x24]
6501d0fd:	mov    DWORD PTR [ebp-0x28],eax
6501d100:	cmp    DWORD PTR [ebp-0x68],0x0
6501d104:	jne    0x6501d205
6501d10a:	mov    eax,DWORD PTR [ebp-0x18]
6501d10d:	test   al,0x40
6501d10f:	je     0x6501d136
6501d111:	test   ax,0x100
6501d115:	je     0x6501d11d
6501d117:	mov    BYTE PTR [ebp-0x38],0x2d
6501d11b:	jmp    0x6501d12f
6501d11d:	test   al,0x1
6501d11f:	je     0x6501d127
6501d121:	mov    BYTE PTR [ebp-0x38],0x2b
6501d125:	jmp    0x6501d12f
6501d127:	test   al,0x2
6501d129:	je     0x6501d136
6501d12b:	mov    BYTE PTR [ebp-0x38],0x20
6501d12f:	mov    DWORD PTR [ebp-0x3c],0x1
6501d136:	mov    ebx,DWORD PTR [ebp-0x40]
6501d139:	sub    ebx,DWORD PTR [ebp-0x28]
6501d13c:	sub    ebx,DWORD PTR [ebp-0x3c]
6501d13f:	test   BYTE PTR [ebp-0x18],0xc
6501d143:	jne    0x6501d156
6501d145:	push   DWORD PTR [ebp-0x30]
6501d148:	lea    eax,[ebp-0x34]
6501d14b:	push   ebx
6501d14c:	push   0x20
6501d14e:	call   0x6501c8cb
6501d153:	add    esp,0xc
6501d156:	push   DWORD PTR [ebp-0x3c]
6501d159:	mov    edi,DWORD PTR [ebp-0x30]
6501d15c:	lea    eax,[ebp-0x34]
6501d15f:	lea    ecx,[ebp-0x38]
6501d162:	call   0x65018b75
6501d167:	test   BYTE PTR [ebp-0x18],0x8
6501d16b:	pop    ecx
6501d16c:	je     0x6501d183
6501d16e:	test   BYTE PTR [ebp-0x18],0x4
6501d172:	jne    0x6501d183
6501d174:	push   edi
6501d175:	push   ebx
6501d176:	push   0x30
6501d178:	lea    eax,[ebp-0x34]
6501d17b:	call   0x6501c8cb
6501d180:	add    esp,0xc
6501d183:	cmp    DWORD PTR [ebp-0x44],0x0
6501d187:	mov    eax,DWORD PTR [ebp-0x28]
6501d18a:	je     0x6501d1dd
6501d18c:	test   eax,eax
6501d18e:	jle    0x6501d1dd
6501d190:	mov    esi,DWORD PTR [ebp-0x24]
6501d193:	mov    DWORD PTR [ebp-0x6c],eax
6501d196:	movzx  eax,WORD PTR [esi]
6501d199:	dec    DWORD PTR [ebp-0x6c]
6501d19c:	push   eax
6501d19d:	push   0x6
6501d19f:	lea    eax,[ebp+0x1ec]
6501d1a5:	push   eax
6501d1a6:	lea    eax,[ebp-0x78]
6501d1a9:	inc    esi
6501d1aa:	push   eax
6501d1ab:	inc    esi
6501d1ac:	call   0x6501d718
6501d1b1:	add    esp,0x10
6501d1b4:	test   eax,eax
6501d1b6:	jne    0x6501d1d7
6501d1b8:	cmp    DWORD PTR [ebp-0x78],eax
6501d1bb:	je     0x6501d1d7
6501d1bd:	push   DWORD PTR [ebp-0x78]
6501d1c0:	lea    eax,[ebp-0x34]
6501d1c3:	lea    ecx,[ebp+0x1ec]
6501d1c9:	call   0x65018b75
6501d1ce:	cmp    DWORD PTR [ebp-0x6c],0x0
6501d1d2:	pop    ecx
6501d1d3:	jne    0x6501d196
6501d1d5:	jmp    0x6501d1ea
6501d1d7:	or     DWORD PTR [ebp-0x34],0xffffffff
6501d1db:	jmp    0x6501d1ea
6501d1dd:	mov    ecx,DWORD PTR [ebp-0x24]
6501d1e0:	push   eax
6501d1e1:	lea    eax,[ebp-0x34]
6501d1e4:	call   0x65018b75
6501d1e9:	pop    ecx
6501d1ea:	cmp    DWORD PTR [ebp-0x34],0x0
6501d1ee:	jl     0x6501d205
6501d1f0:	test   BYTE PTR [ebp-0x18],0x4
6501d1f4:	je     0x6501d205
6501d1f6:	push   edi
6501d1f7:	push   ebx
6501d1f8:	push   0x20
6501d1fa:	lea    eax,[ebp-0x34]
6501d1fd:	call   0x6501c8cb
6501d202:	add    esp,0xc
6501d205:	cmp    DWORD PTR [ebp-0x60],0x0
6501d209:	je     0x6501d218
6501d20b:	push   DWORD PTR [ebp-0x60]
6501d20e:	call   0x650135d6
6501d213:	and    DWORD PTR [ebp-0x60],0x0
6501d217:	pop    ecx
6501d218:	mov    ebx,DWORD PTR [ebp-0x4c]
6501d21b:	mov    al,BYTE PTR [ebx]
6501d21d:	test   al,al
6501d21f:	mov    BYTE PTR [ebp-0x19],al
6501d222:	je     0x6501d245
6501d224:	mov    edi,DWORD PTR [ebp-0x2c]
6501d227:	mov    dl,al
6501d229:	jmp    0x6501ca4e
6501d22e:	call   0x65014400
6501d233:	mov    DWORD PTR [eax],0x16
6501d239:	xor    eax,eax
6501d23b:	push   eax
6501d23c:	push   eax
6501d23d:	push   eax
6501d23e:	push   eax
6501d23f:	push   eax
6501d240:	jmp    0x6501c95f
6501d245:	xor    esi,esi
6501d247:	cmp    DWORD PTR [ebp-0x48],esi
6501d24a:	je     0x6501d256
6501d24c:	cmp    DWORD PTR [ebp-0x48],0x7
6501d250:	jne    0x6501c94f
6501d256:	cmp    BYTE PTR [ebp-0x50],0x0
6501d25a:	je     0x6501d263
6501d25c:	mov    eax,DWORD PTR [ebp-0x54]
6501d25f:	and    DWORD PTR [eax+0x70],0xfffffffd
6501d263:	mov    eax,DWORD PTR [ebp-0x34]
6501d266:	mov    ecx,DWORD PTR [ebp+0x1f4]
6501d26c:	pop    edi
6501d26d:	pop    esi
6501d26e:	xor    ecx,ebp
6501d270:	pop    ebx
6501d271:	call   0x650127bc
6501d276:	add    ebp,0x1f8
6501d27c:	leave  
6501d27d:	ret    
6501d27e:	nop
6501d27f:	inc    eax
6501d280:	int3   
6501d281:	add    DWORD PTR [ebp-0x5b],esp
6501d284:	retf   0x6501
6501d287:	ret    0x1ca
6501d28a:	gs bswap ebx
6501d28d:	add    DWORD PTR [ebp+0x49],esp
6501d290:	retf   
6501d291:	add    DWORD PTR [ebp+0x52],esp
6501d294:	retf   
6501d295:	add    DWORD PTR [ebp-0x77],esp
6501d298:	retf   
6501d299:	add    DWORD PTR [ebp-0x7d],esp
6501d29c:	int3   
6501d29d:	add    DWORD PTR [ebp+0x55],esp
6501d2a0:	mov    ebp,esp
6501d2a2:	sub    esp,0xc
6501d2a5:	mov    eax,ds:0x6502c09c
6501d2aa:	xor    eax,ebp
6501d2ac:	mov    DWORD PTR [ebp-0x4],eax
6501d2af:	push   0x6
6501d2b1:	lea    eax,[ebp-0xc]
6501d2b4:	push   eax
6501d2b5:	push   0x1004
6501d2ba:	push   DWORD PTR [ebp+0x8]
6501d2bd:	mov    BYTE PTR [ebp-0x6],0x0
6501d2c1:	call   DWORD PTR ds:0x650240e0
6501d2c7:	test   eax,eax
6501d2c9:	jne    0x6501d2d0
6501d2cb:	or     eax,0xffffffff
6501d2ce:	jmp    0x6501d2da
6501d2d0:	lea    eax,[ebp-0xc]
6501d2d3:	push   eax
6501d2d4:	call   0x6501d974
6501d2d9:	pop    ecx
6501d2da:	mov    ecx,DWORD PTR [ebp-0x4]
6501d2dd:	xor    ecx,ebp
6501d2df:	call   0x650127bc
6501d2e4:	leave  
6501d2e5:	ret    
6501d2e6:	push   ebp
6501d2e7:	mov    ebp,esp
6501d2e9:	sub    esp,0x34
6501d2ec:	mov    eax,ds:0x6502c09c
6501d2f1:	xor    eax,ebp
6501d2f3:	mov    DWORD PTR [ebp-0x4],eax
6501d2f6:	mov    eax,DWORD PTR [ebp+0x10]
6501d2f9:	mov    ecx,DWORD PTR [ebp+0x18]
6501d2fc:	mov    DWORD PTR [ebp-0x28],eax
6501d2ff:	mov    eax,DWORD PTR [ebp+0x14]
6501d302:	push   ebx
6501d303:	mov    DWORD PTR [ebp-0x30],eax
6501d306:	mov    eax,DWORD PTR [eax]
6501d308:	push   esi
6501d309:	mov    DWORD PTR [ebp-0x24],eax
6501d30c:	mov    eax,DWORD PTR [ebp+0x8]
6501d30f:	push   edi
6501d310:	xor    edi,edi
6501d312:	cmp    eax,DWORD PTR [ebp+0xc]
6501d315:	mov    DWORD PTR [ebp-0x34],ecx
6501d318:	mov    DWORD PTR [ebp-0x20],edi
6501d31b:	mov    DWORD PTR [ebp-0x2c],edi
6501d31e:	je     0x6501d483
6501d324:	mov    esi,DWORD PTR ds:0x6502413c
6501d32a:	lea    ecx,[ebp-0x18]
6501d32d:	push   ecx
6501d32e:	push   eax
6501d32f:	call   esi
6501d331:	test   eax,eax
6501d333:	mov    ebx,DWORD PTR ds:0x65024024
6501d339:	je     0x6501d399
6501d33b:	cmp    DWORD PTR [ebp-0x18],0x1
6501d33f:	jne    0x6501d399
6501d341:	lea    eax,[ebp-0x18]
6501d344:	push   eax
6501d345:	push   DWORD PTR [ebp+0xc]
6501d348:	call   esi
6501d34a:	test   eax,eax
6501d34c:	je     0x6501d399
6501d34e:	cmp    DWORD PTR [ebp-0x18],0x1
6501d352:	jne    0x6501d399
6501d354:	mov    esi,DWORD PTR [ebp-0x24]
6501d357:	cmp    esi,0xffffffff
6501d35a:	mov    DWORD PTR [ebp-0x2c],0x1
6501d361:	jne    0x6501d36f
6501d363:	push   DWORD PTR [ebp-0x28]
6501d366:	call   0x65013f00
6501d36b:	mov    esi,eax
6501d36d:	pop    ecx
6501d36e:	inc    esi
6501d36f:	cmp    esi,edi
6501d371:	jle    0x6501d3ce
6501d373:	cmp    esi,0x7ffffff0
6501d379:	ja     0x6501d3ce
6501d37b:	lea    eax,[esi+esi*1+0x8]
6501d37f:	cmp    eax,0x400
6501d384:	ja     0x6501d3b5
6501d386:	call   0x65012ec0
6501d38b:	mov    eax,esp
6501d38d:	cmp    eax,edi
6501d38f:	je     0x6501d3c9
6501d391:	mov    DWORD PTR [eax],0xcccc
6501d397:	jmp    0x6501d3c6
6501d399:	push   edi
6501d39a:	push   edi
6501d39b:	push   DWORD PTR [ebp-0x24]
6501d39e:	push   DWORD PTR [ebp-0x28]
6501d3a1:	push   0x1
6501d3a3:	push   DWORD PTR [ebp+0x8]
6501d3a6:	call   ebx
6501d3a8:	mov    esi,eax
6501d3aa:	cmp    esi,edi
6501d3ac:	jne    0x6501d371
6501d3ae:	xor    eax,eax
6501d3b0:	jmp    0x6501d486
6501d3b5:	push   eax
6501d3b6:	call   0x650136b3
6501d3bb:	cmp    eax,edi
6501d3bd:	pop    ecx
6501d3be:	je     0x6501d3c9
6501d3c0:	mov    DWORD PTR [eax],0xdddd
6501d3c6:	add    eax,0x8
6501d3c9:	mov    DWORD PTR [ebp-0x1c],eax
6501d3cc:	jmp    0x6501d3d1
6501d3ce:	mov    DWORD PTR [ebp-0x1c],edi
6501d3d1:	cmp    DWORD PTR [ebp-0x1c],edi
6501d3d4:	je     0x6501d3ae
6501d3d6:	lea    eax,[esi+esi*1]
6501d3d9:	push   eax
6501d3da:	push   edi
6501d3db:	push   DWORD PTR [ebp-0x1c]
6501d3de:	call   0x65012e40
6501d3e3:	add    esp,0xc
6501d3e6:	push   esi
6501d3e7:	push   DWORD PTR [ebp-0x1c]
6501d3ea:	push   DWORD PTR [ebp-0x24]
6501d3ed:	push   DWORD PTR [ebp-0x28]
6501d3f0:	push   0x1
6501d3f2:	push   DWORD PTR [ebp+0x8]
6501d3f5:	call   ebx
6501d3f7:	test   eax,eax
6501d3f9:	je     0x6501d47a
6501d3fb:	mov    ebx,DWORD PTR [ebp-0x34]
6501d3fe:	cmp    ebx,edi
6501d400:	je     0x6501d41f
6501d402:	push   edi
6501d403:	push   edi
6501d404:	push   DWORD PTR [ebp+0x1c]
6501d407:	push   ebx
6501d408:	push   esi
6501d409:	push   DWORD PTR [ebp-0x1c]
6501d40c:	push   edi
6501d40d:	push   DWORD PTR [ebp+0xc]
6501d410:	call   DWORD PTR ds:0x65024028
6501d416:	test   eax,eax
6501d418:	je     0x6501d47a
6501d41a:	mov    DWORD PTR [ebp-0x20],ebx
6501d41d:	jmp    0x6501d47a
6501d41f:	cmp    DWORD PTR [ebp-0x2c],edi
6501d422:	mov    ebx,DWORD PTR ds:0x65024028
6501d428:	jne    0x6501d43e
6501d42a:	push   edi
6501d42b:	push   edi
6501d42c:	push   edi
6501d42d:	push   edi
6501d42e:	push   esi
6501d42f:	push   DWORD PTR [ebp-0x1c]
6501d432:	push   edi
6501d433:	push   DWORD PTR [ebp+0xc]
6501d436:	call   ebx
6501d438:	mov    esi,eax
6501d43a:	cmp    esi,edi
6501d43c:	je     0x6501d47a
6501d43e:	push   esi
6501d43f:	push   0x1
6501d441:	call   0x65015a50
6501d446:	cmp    eax,edi
6501d448:	pop    ecx
6501d449:	pop    ecx
6501d44a:	mov    DWORD PTR [ebp-0x20],eax
6501d44d:	je     0x6501d47a
6501d44f:	push   edi
6501d450:	push   edi
6501d451:	push   esi
6501d452:	push   eax
6501d453:	push   esi
6501d454:	push   DWORD PTR [ebp-0x1c]
6501d457:	push   edi
6501d458:	push   DWORD PTR [ebp+0xc]
6501d45b:	call   ebx
6501d45d:	cmp    eax,edi
6501d45f:	jne    0x6501d46f
6501d461:	push   DWORD PTR [ebp-0x20]
6501d464:	call   0x650135d6
6501d469:	pop    ecx
6501d46a:	mov    DWORD PTR [ebp-0x20],edi
6501d46d:	jmp    0x6501d47a
6501d46f:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6501d473:	je     0x6501d47a
6501d475:	mov    ecx,DWORD PTR [ebp-0x30]
6501d478:	mov    DWORD PTR [ecx],eax
6501d47a:	push   DWORD PTR [ebp-0x1c]
6501d47d:	call   0x65012c52
6501d482:	pop    ecx
6501d483:	mov    eax,DWORD PTR [ebp-0x20]
6501d486:	lea    esp,[ebp-0x40]
6501d489:	pop    edi
6501d48a:	pop    esi
6501d48b:	pop    ebx
6501d48c:	mov    ecx,DWORD PTR [ebp-0x4]
6501d48f:	xor    ecx,ebp
6501d491:	call   0x650127bc
6501d496:	leave  
6501d497:	ret    
6501d498:	push   0xc
6501d49a:	push   0x65029c80
6501d49f:	call   0x65013d00
6501d4a4:	and    DWORD PTR [ebp-0x4],0x0
6501d4a8:	movapd xmm0,xmm1
6501d4ac:	mov    DWORD PTR [ebp-0x1c],0x1
6501d4b3:	jmp    0x6501d4d8
6501d4b5:	mov    eax,DWORD PTR [ebp-0x14]
6501d4b8:	mov    eax,DWORD PTR [eax]
6501d4ba:	mov    eax,DWORD PTR [eax]
6501d4bc:	cmp    eax,0xc0000005
6501d4c1:	je     0x6501d4cd
6501d4c3:	cmp    eax,0xc000001d
6501d4c8:	je     0x6501d4cd
6501d4ca:	xor    eax,eax
6501d4cc:	ret    
6501d4cd:	xor    eax,eax
6501d4cf:	inc    eax
6501d4d0:	ret    
6501d4d1:	mov    esp,DWORD PTR [ebp-0x18]
6501d4d4:	and    DWORD PTR [ebp-0x1c],0x0
6501d4d8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501d4df:	mov    eax,DWORD PTR [ebp-0x1c]
6501d4e2:	call   0x65013d45
6501d4e7:	ret    
6501d4e8:	push   ebp
6501d4e9:	mov    ebp,esp
6501d4eb:	sub    esp,0x18
6501d4ee:	xor    eax,eax
6501d4f0:	push   ebx
6501d4f1:	mov    DWORD PTR [ebp-0x4],eax
6501d4f4:	mov    DWORD PTR [ebp-0xc],eax
6501d4f7:	mov    DWORD PTR [ebp-0x8],eax
6501d4fa:	push   ebx
6501d4fb:	pushf  
6501d4fc:	pop    eax
6501d4fd:	mov    ecx,eax
6501d4ff:	xor    eax,0x200000
6501d504:	push   eax
6501d505:	popf   
6501d506:	pushf  
6501d507:	pop    edx
6501d508:	sub    edx,ecx
6501d50a:	je     0x6501d52b
6501d50c:	push   ecx
6501d50d:	popf   
6501d50e:	xor    eax,eax
6501d510:	cpuid  
6501d512:	mov    DWORD PTR [ebp-0xc],eax
6501d515:	mov    DWORD PTR [ebp-0x18],ebx
6501d518:	mov    DWORD PTR [ebp-0x14],edx
6501d51b:	mov    DWORD PTR [ebp-0x10],ecx
6501d51e:	mov    eax,0x1
6501d523:	cpuid  
6501d525:	mov    DWORD PTR [ebp-0x4],edx
6501d528:	mov    DWORD PTR [ebp-0x8],eax
6501d52b:	pop    ebx
6501d52c:	test   DWORD PTR [ebp-0x4],0x4000000
6501d533:	je     0x6501d543
6501d535:	call   0x6501d498
6501d53a:	test   eax,eax
6501d53c:	je     0x6501d543
6501d53e:	xor    eax,eax
6501d540:	inc    eax
6501d541:	jmp    0x6501d545
6501d543:	xor    eax,eax
6501d545:	pop    ebx
6501d546:	leave  
6501d547:	ret    
6501d548:	call   0x6501d4e8
6501d54d:	mov    ds:0x65031564,eax
6501d552:	xor    eax,eax
6501d554:	ret    
6501d555:	push   ebp
6501d556:	mov    ebp,esp
6501d558:	sub    esp,0x10
6501d55b:	push   DWORD PTR [ebp+0x8]
6501d55e:	lea    ecx,[ebp-0x10]
6501d561:	call   0x6501295f
6501d566:	movzx  eax,BYTE PTR [ebp+0xc]
6501d56a:	mov    ecx,DWORD PTR [ebp-0xc]
6501d56d:	mov    dl,BYTE PTR [ebp+0x14]
6501d570:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6501d574:	jne    0x6501d594
6501d576:	cmp    DWORD PTR [ebp+0x10],0x0
6501d57a:	je     0x6501d58e
6501d57c:	mov    ecx,DWORD PTR [ebp-0x10]
6501d57f:	mov    ecx,DWORD PTR [ecx+0xc8]
6501d585:	movzx  eax,WORD PTR [ecx+eax*2]
6501d589:	and    eax,DWORD PTR [ebp+0x10]
6501d58c:	jmp    0x6501d590
6501d58e:	xor    eax,eax
6501d590:	test   eax,eax
6501d592:	je     0x6501d597
6501d594:	xor    eax,eax
6501d596:	inc    eax
6501d597:	cmp    BYTE PTR [ebp-0x4],0x0
6501d59b:	je     0x6501d5a4
6501d59d:	mov    ecx,DWORD PTR [ebp-0x8]
6501d5a0:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501d5a4:	leave  
6501d5a5:	ret    
6501d5a6:	push   0x4
6501d5a8:	push   0x0
6501d5aa:	push   DWORD PTR [esp+0xc]
6501d5ae:	push   0x0
6501d5b0:	call   0x6501d555
6501d5b5:	add    esp,0x10
6501d5b8:	ret    
6501d5b9:	push   ebp
6501d5ba:	mov    ebp,esp
6501d5bc:	sub    esp,0x10
6501d5bf:	push   ebx
6501d5c0:	push   esi
6501d5c1:	mov    esi,DWORD PTR [ebp+0xc]
6501d5c4:	xor    ebx,ebx
6501d5c6:	cmp    esi,ebx
6501d5c8:	push   edi
6501d5c9:	mov    edi,DWORD PTR [ebp+0x10]
6501d5cc:	jne    0x6501d5df
6501d5ce:	cmp    edi,ebx
6501d5d0:	jbe    0x6501d5df
6501d5d2:	mov    eax,DWORD PTR [ebp+0x8]
6501d5d5:	cmp    eax,ebx
6501d5d7:	je     0x6501d5db
6501d5d9:	mov    DWORD PTR [eax],ebx
6501d5db:	xor    eax,eax
6501d5dd:	jmp    0x6501d65e
6501d5df:	mov    eax,DWORD PTR [ebp+0x8]
6501d5e2:	cmp    eax,ebx
6501d5e4:	je     0x6501d5e9
6501d5e6:	or     DWORD PTR [eax],0xffffffff
6501d5e9:	cmp    edi,0x7fffffff
6501d5ef:	jbe    0x6501d60c
6501d5f1:	call   0x65014400
6501d5f6:	push   0x16
6501d5f8:	pop    esi
6501d5f9:	push   ebx
6501d5fa:	push   ebx
6501d5fb:	push   ebx
6501d5fc:	push   ebx
6501d5fd:	push   ebx
6501d5fe:	mov    DWORD PTR [eax],esi
6501d600:	call   0x650122af
6501d605:	add    esp,0x14
6501d608:	mov    eax,esi
6501d60a:	jmp    0x6501d65e
6501d60c:	push   DWORD PTR [ebp+0x18]
6501d60f:	lea    ecx,[ebp-0x10]
6501d612:	call   0x6501295f
6501d617:	mov    eax,DWORD PTR [ebp-0x10]
6501d61a:	cmp    DWORD PTR [eax+0x14],ebx
6501d61d:	jne    0x6501d6b7
6501d623:	mov    ax,WORD PTR [ebp+0x14]
6501d627:	cmp    ax,0xff
6501d62b:	jbe    0x6501d663
6501d62d:	cmp    esi,ebx
6501d62f:	je     0x6501d640
6501d631:	cmp    edi,ebx
6501d633:	jbe    0x6501d640
6501d635:	push   edi
6501d636:	push   ebx
6501d637:	push   esi
6501d638:	call   0x65012e40
6501d63d:	add    esp,0xc
6501d640:	call   0x65014400
6501d645:	mov    DWORD PTR [eax],0x2a
6501d64b:	call   0x65014400
6501d650:	cmp    BYTE PTR [ebp-0x4],bl
6501d653:	mov    eax,DWORD PTR [eax]
6501d655:	je     0x6501d65e
6501d657:	mov    ecx,DWORD PTR [ebp-0x8]
6501d65a:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501d65e:	pop    edi
6501d65f:	pop    esi
6501d660:	pop    ebx
6501d661:	leave  
6501d662:	ret    
6501d663:	cmp    esi,ebx
6501d665:	je     0x6501d695
6501d667:	cmp    edi,ebx
6501d669:	ja     0x6501d693
6501d66b:	call   0x65014400
6501d670:	push   0x22
6501d672:	pop    esi
6501d673:	push   ebx
6501d674:	push   ebx
6501d675:	push   ebx
6501d676:	push   ebx
6501d677:	push   ebx
6501d678:	mov    DWORD PTR [eax],esi
6501d67a:	call   0x650122af
6501d67f:	add    esp,0x14
6501d682:	cmp    BYTE PTR [ebp-0x4],bl
6501d685:	je     0x6501d608
6501d687:	mov    eax,DWORD PTR [ebp-0x8]
6501d68a:	and    DWORD PTR [eax+0x70],0xfffffffd
6501d68e:	jmp    0x6501d608
6501d693:	mov    BYTE PTR [esi],al
6501d695:	mov    eax,DWORD PTR [ebp+0x8]
6501d698:	cmp    eax,ebx
6501d69a:	je     0x6501d6a2
6501d69c:	mov    DWORD PTR [eax],0x1
6501d6a2:	cmp    BYTE PTR [ebp-0x4],bl
6501d6a5:	je     0x6501d5db
6501d6ab:	mov    eax,DWORD PTR [ebp-0x8]
6501d6ae:	and    DWORD PTR [eax+0x70],0xfffffffd
6501d6b2:	jmp    0x6501d5db
6501d6b7:	lea    ecx,[ebp+0xc]
6501d6ba:	push   ecx
6501d6bb:	push   ebx
6501d6bc:	push   edi
6501d6bd:	push   esi
6501d6be:	push   0x1
6501d6c0:	lea    ecx,[ebp+0x14]
6501d6c3:	push   ecx
6501d6c4:	push   ebx
6501d6c5:	mov    DWORD PTR [ebp+0xc],ebx
6501d6c8:	push   DWORD PTR [eax+0x4]
6501d6cb:	call   DWORD PTR ds:0x65024028
6501d6d1:	cmp    eax,ebx
6501d6d3:	je     0x6501d6e9
6501d6d5:	cmp    DWORD PTR [ebp+0xc],ebx
6501d6d8:	jne    0x6501d640
6501d6de:	mov    ecx,DWORD PTR [ebp+0x8]
6501d6e1:	cmp    ecx,ebx
6501d6e3:	je     0x6501d6a2
6501d6e5:	mov    DWORD PTR [ecx],eax
6501d6e7:	jmp    0x6501d6a2
6501d6e9:	call   DWORD PTR ds:0x65024044
6501d6ef:	cmp    eax,0x7a
6501d6f2:	jne    0x6501d640
6501d6f8:	cmp    esi,ebx
6501d6fa:	je     0x6501d66b
6501d700:	cmp    edi,ebx
6501d702:	jbe    0x6501d66b
6501d708:	push   edi
6501d709:	push   ebx
6501d70a:	push   esi
6501d70b:	call   0x65012e40
6501d710:	add    esp,0xc
6501d713:	jmp    0x6501d66b
6501d718:	push   0x0
6501d71a:	push   DWORD PTR [esp+0x14]
6501d71e:	push   DWORD PTR [esp+0x14]
6501d722:	push   DWORD PTR [esp+0x14]
6501d726:	push   DWORD PTR [esp+0x14]
6501d72a:	call   0x6501d5b9
6501d72f:	add    esp,0x14
6501d732:	ret    
6501d733:	push   ebp
6501d734:	mov    ebp,esp
6501d736:	sub    esp,0x20
6501d739:	push   ebx
6501d73a:	push   esi
6501d73b:	push   edi
6501d73c:	call   0x65014526
6501d741:	xor    ebx,ebx
6501d743:	cmp    DWORD PTR ds:0x6502df7c,ebx
6501d749:	mov    DWORD PTR [ebp-0x8],eax
6501d74c:	mov    DWORD PTR [ebp-0x4],ebx
6501d74f:	mov    DWORD PTR [ebp-0xc],ebx
6501d752:	mov    DWORD PTR [ebp-0x10],ebx
6501d755:	jne    0x6501d809
6501d75b:	push   0x65026558
6501d760:	call   DWORD PTR ds:0x650240c4
6501d766:	mov    edi,eax
6501d768:	cmp    edi,ebx
6501d76a:	je     0x6501d8e9
6501d770:	mov    esi,DWORD PTR ds:0x65024014
6501d776:	push   0x6502654c
6501d77b:	push   edi
6501d77c:	call   esi
6501d77e:	cmp    eax,ebx
6501d780:	je     0x6501d8e9
6501d786:	push   eax
6501d787:	call   0x650144b8
6501d78c:	mov    DWORD PTR [esp],0x6502653c
6501d793:	push   edi
6501d794:	mov    ds:0x6502df7c,eax
6501d799:	call   esi
6501d79b:	push   eax
6501d79c:	call   0x650144b8
6501d7a1:	mov    DWORD PTR [esp],0x65026528
6501d7a8:	push   edi
6501d7a9:	mov    ds:0x6502df80,eax
6501d7ae:	call   esi
6501d7b0:	push   eax
6501d7b1:	call   0x650144b8
6501d7b6:	mov    ds:0x6502df84,eax
6501d7bb:	lea    eax,[ebp-0xc]
6501d7be:	push   eax
6501d7bf:	call   0x65015c2f
6501d7c4:	test   eax,eax
6501d7c6:	pop    ecx
6501d7c7:	pop    ecx
6501d7c8:	je     0x6501d7d7
6501d7ca:	push   ebx
6501d7cb:	push   ebx
6501d7cc:	push   ebx
6501d7cd:	push   ebx
6501d7ce:	push   ebx
6501d7cf:	call   0x650121b3
6501d7d4:	add    esp,0x14
6501d7d7:	cmp    DWORD PTR [ebp-0xc],0x2
6501d7db:	jne    0x6501d809
6501d7dd:	push   0x6502650c
6501d7e2:	push   edi
6501d7e3:	call   esi
6501d7e5:	push   eax
6501d7e6:	call   0x650144b8
6501d7eb:	cmp    eax,ebx
6501d7ed:	pop    ecx
6501d7ee:	mov    ds:0x6502df8c,eax
6501d7f3:	je     0x6501d809
6501d7f5:	push   0x650264f4
6501d7fa:	push   edi
6501d7fb:	call   esi
6501d7fd:	push   eax
6501d7fe:	call   0x650144b8
6501d803:	pop    ecx
6501d804:	mov    ds:0x6502df88,eax
6501d809:	mov    eax,ds:0x6502df88
6501d80e:	mov    ecx,DWORD PTR [ebp-0x8]
6501d811:	cmp    eax,ecx
6501d813:	je     0x6501d88e
6501d815:	cmp    DWORD PTR ds:0x6502df8c,ecx
6501d81b:	je     0x6501d88e
6501d81d:	push   eax
6501d81e:	call   0x6501452f
6501d823:	push   DWORD PTR ds:0x6502df8c
6501d829:	mov    esi,eax
6501d82b:	call   0x6501452f
6501d830:	cmp    esi,ebx
6501d832:	pop    ecx
6501d833:	pop    ecx
6501d834:	mov    edi,eax
6501d836:	je     0x6501d88e
6501d838:	cmp    edi,ebx
6501d83a:	je     0x6501d88e
6501d83c:	call   esi
6501d83e:	cmp    eax,ebx
6501d840:	je     0x6501d85b
6501d842:	lea    ecx,[ebp-0x14]
6501d845:	push   ecx
6501d846:	push   0xc
6501d848:	lea    ecx,[ebp-0x20]
6501d84b:	push   ecx
6501d84c:	push   0x1
6501d84e:	push   eax
6501d84f:	call   edi
6501d851:	test   eax,eax
6501d853:	je     0x6501d85b
6501d855:	test   BYTE PTR [ebp-0x18],0x1
6501d859:	jne    0x6501d88e
6501d85b:	lea    eax,[ebp-0x10]
6501d85e:	push   eax
6501d85f:	call   0x65015c66
6501d864:	test   eax,eax
6501d866:	pop    ecx
6501d867:	je     0x6501d876
6501d869:	push   ebx
6501d86a:	push   ebx
6501d86b:	push   ebx
6501d86c:	push   ebx
6501d86d:	push   ebx
6501d86e:	call   0x650121b3
6501d873:	add    esp,0x14
6501d876:	cmp    DWORD PTR [ebp-0x10],0x4
6501d87a:	jb     0x6501d885
6501d87c:	or     DWORD PTR [ebp+0x10],0x200000
6501d883:	jmp    0x6501d8c9
6501d885:	or     DWORD PTR [ebp+0x10],0x40000
6501d88c:	jmp    0x6501d8c9
6501d88e:	mov    eax,ds:0x6502df80
6501d893:	cmp    eax,DWORD PTR [ebp-0x8]
6501d896:	je     0x6501d8c9
6501d898:	push   eax
6501d899:	call   0x6501452f
6501d89e:	cmp    eax,ebx
6501d8a0:	pop    ecx
6501d8a1:	je     0x6501d8c9
6501d8a3:	call   eax
6501d8a5:	cmp    eax,ebx
6501d8a7:	mov    DWORD PTR [ebp-0x4],eax
6501d8aa:	je     0x6501d8c9
6501d8ac:	mov    eax,ds:0x6502df84
6501d8b1:	cmp    eax,DWORD PTR [ebp-0x8]
6501d8b4:	je     0x6501d8c9
6501d8b6:	push   eax
6501d8b7:	call   0x6501452f
6501d8bc:	cmp    eax,ebx
6501d8be:	pop    ecx
6501d8bf:	je     0x6501d8c9
6501d8c1:	push   DWORD PTR [ebp-0x4]
6501d8c4:	call   eax
6501d8c6:	mov    DWORD PTR [ebp-0x4],eax
6501d8c9:	push   DWORD PTR ds:0x6502df7c
6501d8cf:	call   0x6501452f
6501d8d4:	cmp    eax,ebx
6501d8d6:	pop    ecx
6501d8d7:	je     0x6501d8e9
6501d8d9:	push   DWORD PTR [ebp+0x10]
6501d8dc:	push   DWORD PTR [ebp+0xc]
6501d8df:	push   DWORD PTR [ebp+0x8]
6501d8e2:	push   DWORD PTR [ebp-0x4]
6501d8e5:	call   eax
6501d8e7:	jmp    0x6501d8eb
6501d8e9:	xor    eax,eax
6501d8eb:	pop    edi
6501d8ec:	pop    esi
6501d8ed:	pop    ebx
6501d8ee:	leave  
6501d8ef:	ret    
6501d8f0:	mov    ecx,DWORD PTR [esp+0x4]
6501d8f4:	push   esi
6501d8f5:	xor    esi,esi
6501d8f7:	cmp    ecx,esi
6501d8f9:	jl     0x6501d919
6501d8fb:	cmp    ecx,0x2
6501d8fe:	jle    0x6501d90c
6501d900:	cmp    ecx,0x3
6501d903:	jne    0x6501d919
6501d905:	mov    eax,ds:0x6502d59c
6501d90a:	pop    esi
6501d90b:	ret    
6501d90c:	mov    eax,ds:0x6502d59c
6501d911:	mov    DWORD PTR ds:0x6502d59c,ecx
6501d917:	pop    esi
6501d918:	ret    
6501d919:	call   0x65014400
6501d91e:	push   esi
6501d91f:	push   esi
6501d920:	push   esi
6501d921:	push   esi
6501d922:	push   esi
6501d923:	mov    DWORD PTR [eax],0x16
6501d929:	call   0x650122af
6501d92e:	add    esp,0x14
6501d931:	or     eax,0xffffffff
6501d934:	pop    esi
6501d935:	ret    
6501d936:	int3   
6501d937:	int3   
6501d938:	int3   
6501d939:	int3   
6501d93a:	int3   
6501d93b:	int3   
6501d93c:	int3   
6501d93d:	int3   
6501d93e:	int3   
6501d93f:	int3   
6501d940:	mov    eax,DWORD PTR [esp+0x8]
6501d944:	mov    ecx,DWORD PTR [esp+0x10]
6501d948:	or     ecx,eax
6501d94a:	mov    ecx,DWORD PTR [esp+0xc]
6501d94e:	jne    0x6501d959
6501d950:	mov    eax,DWORD PTR [esp+0x4]
6501d954:	mul    ecx
6501d956:	ret    0x10
6501d959:	push   ebx
6501d95a:	mul    ecx
6501d95c:	mov    ebx,eax
6501d95e:	mov    eax,DWORD PTR [esp+0x8]
6501d962:	mul    DWORD PTR [esp+0x14]
6501d966:	add    ebx,eax
6501d968:	mov    eax,DWORD PTR [esp+0x8]
6501d96c:	mul    ecx
6501d96e:	add    edx,ebx
6501d970:	pop    ebx
6501d971:	ret    0x10
6501d974:	push   0xa
6501d976:	push   0x0
6501d978:	push   DWORD PTR [esp+0xc]
6501d97c:	call   0x6501e1c5
6501d981:	add    esp,0xc
6501d984:	ret    
6501d985:	push   0x2
6501d987:	call   0x65015b86
6501d98c:	pop    ecx
6501d98d:	ret    
6501d98e:	mov    ecx,DWORD PTR [esp+0x4]
6501d992:	push   ebx
6501d993:	xor    ebx,ebx
6501d995:	cmp    ecx,ebx
6501d997:	push   esi
6501d998:	push   edi
6501d999:	jl     0x6501d9f6
6501d99b:	cmp    ecx,DWORD PTR ds:0x65031440
6501d9a1:	jae    0x6501d9f6
6501d9a3:	mov    eax,ecx
6501d9a5:	sar    eax,0x5
6501d9a8:	mov    esi,ecx
6501d9aa:	lea    edi,[eax*4+0x65031460]
6501d9b1:	mov    eax,DWORD PTR [edi]
6501d9b3:	and    esi,0x1f
6501d9b6:	shl    esi,0x6
6501d9b9:	add    eax,esi
6501d9bb:	test   BYTE PTR [eax+0x4],0x1
6501d9bf:	je     0x6501d9f6
6501d9c1:	cmp    DWORD PTR [eax],0xffffffff
6501d9c4:	je     0x6501d9f6
6501d9c6:	cmp    DWORD PTR ds:0x6502d5a0,0x1
6501d9cd:	jne    0x6501d9ec
6501d9cf:	sub    ecx,ebx
6501d9d1:	je     0x6501d9e3
6501d9d3:	dec    ecx
6501d9d4:	je     0x6501d9de
6501d9d6:	dec    ecx
6501d9d7:	jne    0x6501d9ec
6501d9d9:	push   ebx
6501d9da:	push   0xfffffff4
6501d9dc:	jmp    0x6501d9e6
6501d9de:	push   ebx
6501d9df:	push   0xfffffff5
6501d9e1:	jmp    0x6501d9e6
6501d9e3:	push   ebx
6501d9e4:	push   0xfffffff6
6501d9e6:	call   DWORD PTR ds:0x650240b8
6501d9ec:	mov    eax,DWORD PTR [edi]
6501d9ee:	or     DWORD PTR [esi+eax*1],0xffffffff
6501d9f2:	xor    eax,eax
6501d9f4:	jmp    0x6501da0b
6501d9f6:	call   0x65014400
6501d9fb:	mov    DWORD PTR [eax],0x9
6501da01:	call   0x65014413
6501da06:	mov    DWORD PTR [eax],ebx
6501da08:	or     eax,0xffffffff
6501da0b:	pop    edi
6501da0c:	pop    esi
6501da0d:	pop    ebx
6501da0e:	ret    
6501da0f:	mov    eax,DWORD PTR [esp+0x4]
6501da13:	cmp    eax,0xfffffffe
6501da16:	jne    0x6501da2f
6501da18:	call   0x65014413
6501da1d:	and    DWORD PTR [eax],0x0
6501da20:	call   0x65014400
6501da25:	mov    DWORD PTR [eax],0x9
6501da2b:	or     eax,0xffffffff
6501da2e:	ret    
6501da2f:	push   esi
6501da30:	xor    esi,esi
6501da32:	cmp    eax,esi
6501da34:	jl     0x6501da58
6501da36:	cmp    eax,DWORD PTR ds:0x65031440
6501da3c:	jae    0x6501da58
6501da3e:	mov    ecx,eax
6501da40:	and    eax,0x1f
6501da43:	sar    ecx,0x5
6501da46:	mov    ecx,DWORD PTR [ecx*4+0x65031460]
6501da4d:	shl    eax,0x6
6501da50:	add    eax,ecx
6501da52:	test   BYTE PTR [eax+0x4],0x1
6501da56:	jne    0x6501da7c
6501da58:	call   0x65014413
6501da5d:	mov    DWORD PTR [eax],esi
6501da5f:	call   0x65014400
6501da64:	push   esi
6501da65:	push   esi
6501da66:	push   esi
6501da67:	push   esi
6501da68:	push   esi
6501da69:	mov    DWORD PTR [eax],0x9
6501da6f:	call   0x650122af
6501da74:	add    esp,0x14
6501da77:	or     eax,0xffffffff
6501da7a:	pop    esi
6501da7b:	ret    
6501da7c:	mov    eax,DWORD PTR [eax]
6501da7e:	pop    esi
6501da7f:	ret    
6501da80:	push   0xc
6501da82:	push   0x65029ca0
6501da87:	call   0x65013d00
6501da8c:	mov    edi,DWORD PTR [ebp+0x8]
6501da8f:	mov    eax,edi
6501da91:	sar    eax,0x5
6501da94:	mov    esi,edi
6501da96:	and    esi,0x1f
6501da99:	shl    esi,0x6
6501da9c:	add    esi,DWORD PTR [eax*4+0x65031460]
6501daa3:	mov    DWORD PTR [ebp-0x1c],0x1
6501daaa:	xor    ebx,ebx
6501daac:	cmp    DWORD PTR [esi+0x8],ebx
6501daaf:	jne    0x6501dae7
6501dab1:	push   0xa
6501dab3:	call   0x65019cf8
6501dab8:	pop    ecx
6501dab9:	mov    DWORD PTR [ebp-0x4],ebx
6501dabc:	cmp    DWORD PTR [esi+0x8],ebx
6501dabf:	jne    0x6501dadb
6501dac1:	push   0xfa0
6501dac6:	lea    eax,[esi+0xc]
6501dac9:	push   eax
6501daca:	call   0x6501b3a8
6501dacf:	pop    ecx
6501dad0:	pop    ecx
6501dad1:	test   eax,eax
6501dad3:	jne    0x6501dad8
6501dad5:	mov    DWORD PTR [ebp-0x1c],ebx
6501dad8:	inc    DWORD PTR [esi+0x8]
6501dadb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501dae2:	call   0x6501db17
6501dae7:	cmp    DWORD PTR [ebp-0x1c],ebx
6501daea:	je     0x6501db09
6501daec:	mov    eax,edi
6501daee:	sar    eax,0x5
6501daf1:	and    edi,0x1f
6501daf4:	shl    edi,0x6
6501daf7:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501dafe:	lea    eax,[eax+edi*1+0xc]
6501db02:	push   eax
6501db03:	call   DWORD PTR ds:0x6502409c
6501db09:	mov    eax,DWORD PTR [ebp-0x1c]
6501db0c:	call   0x65013d45
6501db11:	ret    
6501db12:	xor    ebx,ebx
6501db14:	mov    edi,DWORD PTR [ebp+0x8]
6501db17:	push   0xa
6501db19:	call   0x65019c20
6501db1e:	pop    ecx
6501db1f:	ret    
6501db20:	mov    eax,DWORD PTR [esp+0x4]
6501db24:	mov    ecx,eax
6501db26:	and    eax,0x1f
6501db29:	sar    ecx,0x5
6501db2c:	mov    ecx,DWORD PTR [ecx*4+0x65031460]
6501db33:	shl    eax,0x6
6501db36:	lea    eax,[ecx+eax*1+0xc]
6501db3a:	push   eax
6501db3b:	call   DWORD PTR ds:0x650240a0
6501db41:	ret    
6501db42:	push   ebp
6501db43:	mov    ebp,esp
6501db45:	sub    esp,0x10
6501db48:	mov    eax,ds:0x6502c09c
6501db4d:	xor    eax,ebp
6501db4f:	mov    DWORD PTR [ebp-0x4],eax
6501db52:	push   esi
6501db53:	xor    esi,esi
6501db55:	cmp    DWORD PTR ds:0x6502cfb0,esi
6501db5b:	je     0x6501dbab
6501db5d:	cmp    DWORD PTR ds:0x6502d024,0xfffffffe
6501db64:	jne    0x6501db6b
6501db66:	call   0x6501e251
6501db6b:	mov    eax,ds:0x6502d024
6501db70:	cmp    eax,0xffffffff
6501db73:	jne    0x6501db7b
6501db75:	or     ax,0xffff
6501db79:	jmp    0x6501dbeb
6501db7b:	push   esi
6501db7c:	lea    ecx,[ebp-0x10]
6501db7f:	push   ecx
6501db80:	push   0x1
6501db82:	lea    ecx,[ebp+0x8]
6501db85:	push   ecx
6501db86:	push   eax
6501db87:	call   DWORD PTR ds:0x650240a8
6501db8d:	test   eax,eax
6501db8f:	jne    0x6501dbf8
6501db91:	cmp    DWORD PTR ds:0x6502cfb0,0x2
6501db98:	jne    0x6501db75
6501db9a:	call   DWORD PTR ds:0x65024044
6501dba0:	cmp    eax,0x78
6501dba3:	jne    0x6501db75
6501dba5:	mov    DWORD PTR ds:0x6502cfb0,esi
6501dbab:	push   esi
6501dbac:	push   esi
6501dbad:	push   0x5
6501dbaf:	lea    eax,[ebp-0xc]
6501dbb2:	push   eax
6501dbb3:	push   0x1
6501dbb5:	lea    eax,[ebp+0x8]
6501dbb8:	push   eax
6501dbb9:	push   esi
6501dbba:	call   DWORD PTR ds:0x65024090
6501dbc0:	push   eax
6501dbc1:	call   DWORD PTR ds:0x65024028
6501dbc7:	mov    ecx,DWORD PTR ds:0x6502d024
6501dbcd:	cmp    ecx,0xffffffff
6501dbd0:	je     0x6501db75
6501dbd2:	push   esi
6501dbd3:	lea    edx,[ebp-0x10]
6501dbd6:	push   edx
6501dbd7:	push   eax
6501dbd8:	lea    eax,[ebp-0xc]
6501dbdb:	push   eax
6501dbdc:	push   ecx
6501dbdd:	call   DWORD PTR ds:0x65024094
6501dbe3:	test   eax,eax
6501dbe5:	je     0x6501db75
6501dbe7:	mov    ax,WORD PTR [ebp+0x8]
6501dbeb:	mov    ecx,DWORD PTR [ebp-0x4]
6501dbee:	xor    ecx,ebp
6501dbf0:	pop    esi
6501dbf1:	call   0x650127bc
6501dbf6:	leave  
6501dbf7:	ret    
6501dbf8:	mov    DWORD PTR ds:0x6502cfb0,0x1
6501dc02:	jmp    0x6501dbe7
6501dc04:	push   0x10
6501dc06:	push   0x65029cc0
6501dc0b:	call   0x65013d00
6501dc10:	xor    ebx,ebx
6501dc12:	mov    DWORD PTR [ebp-0x1c],ebx
6501dc15:	push   0x1
6501dc17:	call   0x65019cf8
6501dc1c:	pop    ecx
6501dc1d:	mov    DWORD PTR [ebp-0x4],ebx
6501dc20:	push   0x3
6501dc22:	pop    edi
6501dc23:	mov    DWORD PTR [ebp-0x20],edi
6501dc26:	cmp    edi,DWORD PTR ds:0x65031420
6501dc2c:	jge    0x6501dc85
6501dc2e:	mov    esi,edi
6501dc30:	shl    esi,0x2
6501dc33:	mov    eax,ds:0x65030400
6501dc38:	add    eax,esi
6501dc3a:	cmp    DWORD PTR [eax],ebx
6501dc3c:	je     0x6501dc82
6501dc3e:	mov    eax,DWORD PTR [eax]
6501dc40:	test   BYTE PTR [eax+0xc],0x83
6501dc44:	je     0x6501dc55
6501dc46:	push   eax
6501dc47:	call   0x6501e30f
6501dc4c:	pop    ecx
6501dc4d:	cmp    eax,0xffffffff
6501dc50:	je     0x6501dc55
6501dc52:	inc    DWORD PTR [ebp-0x1c]
6501dc55:	cmp    edi,0x14
6501dc58:	jl     0x6501dc82
6501dc5a:	mov    eax,ds:0x65030400
6501dc5f:	mov    eax,DWORD PTR [esi+eax*1]
6501dc62:	add    eax,0x20
6501dc65:	push   eax
6501dc66:	call   DWORD PTR ds:0x650240a4
6501dc6c:	mov    eax,ds:0x65030400
6501dc71:	push   DWORD PTR [esi+eax*1]
6501dc74:	call   0x650135d6
6501dc79:	pop    ecx
6501dc7a:	mov    eax,ds:0x65030400
6501dc7f:	mov    DWORD PTR [esi+eax*1],ebx
6501dc82:	inc    edi
6501dc83:	jmp    0x6501dc23
6501dc85:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501dc8c:	call   0x6501dc9a
6501dc91:	mov    eax,DWORD PTR [ebp-0x1c]
6501dc94:	call   0x65013d45
6501dc99:	ret    
6501dc9a:	push   0x1
6501dc9c:	call   0x65019c20
6501dca1:	pop    ecx
6501dca2:	ret    
6501dca3:	push   ebx
6501dca4:	push   esi
6501dca5:	mov    esi,DWORD PTR [esp+0xc]
6501dca9:	mov    eax,DWORD PTR [esi+0xc]
6501dcac:	mov    ecx,eax
6501dcae:	and    cl,0x3
6501dcb1:	xor    ebx,ebx
6501dcb3:	cmp    cl,0x2
6501dcb6:	jne    0x6501dcf7
6501dcb8:	test   ax,0x108
6501dcbc:	je     0x6501dcf7
6501dcbe:	mov    eax,DWORD PTR [esi+0x8]
6501dcc1:	push   edi
6501dcc2:	mov    edi,DWORD PTR [esi]
6501dcc4:	sub    edi,eax
6501dcc6:	test   edi,edi
6501dcc8:	jle    0x6501dcf6
6501dcca:	push   edi
6501dccb:	push   eax
6501dccc:	push   esi
6501dccd:	call   0x6501c54d
6501dcd2:	pop    ecx
6501dcd3:	push   eax
6501dcd4:	call   0x6501c22e
6501dcd9:	add    esp,0xc
6501dcdc:	cmp    eax,edi
6501dcde:	jne    0x6501dcef
6501dce0:	mov    eax,DWORD PTR [esi+0xc]
6501dce3:	test   al,al
6501dce5:	jns    0x6501dcf6
6501dce7:	and    eax,0xfffffffd
6501dcea:	mov    DWORD PTR [esi+0xc],eax
6501dced:	jmp    0x6501dcf6
6501dcef:	or     DWORD PTR [esi+0xc],0x20
6501dcf3:	or     ebx,0xffffffff
6501dcf6:	pop    edi
6501dcf7:	mov    eax,DWORD PTR [esi+0x8]
6501dcfa:	and    DWORD PTR [esi+0x4],0x0
6501dcfe:	mov    DWORD PTR [esi],eax
6501dd00:	pop    esi
6501dd01:	mov    eax,ebx
6501dd03:	pop    ebx
6501dd04:	ret    
6501dd05:	push   esi
6501dd06:	mov    esi,DWORD PTR [esp+0x8]
6501dd0a:	test   esi,esi
6501dd0c:	jne    0x6501dd17
6501dd0e:	push   esi
6501dd0f:	call   0x6501dd47
6501dd14:	pop    ecx
6501dd15:	pop    esi
6501dd16:	ret    
6501dd17:	push   esi
6501dd18:	call   0x6501dca3
6501dd1d:	test   eax,eax
6501dd1f:	pop    ecx
6501dd20:	je     0x6501dd27
6501dd22:	or     eax,0xffffffff
6501dd25:	pop    esi
6501dd26:	ret    
6501dd27:	test   WORD PTR [esi+0xc],0x4000
6501dd2d:	je     0x6501dd43
6501dd2f:	push   esi
6501dd30:	call   0x6501c54d
6501dd35:	push   eax
6501dd36:	call   0x6501e38b
6501dd3b:	pop    ecx
6501dd3c:	pop    ecx
6501dd3d:	neg    eax
6501dd3f:	sbb    eax,eax
6501dd41:	pop    esi
6501dd42:	ret    
6501dd43:	xor    eax,eax
6501dd45:	pop    esi
6501dd46:	ret    
6501dd47:	push   0x14
6501dd49:	push   0x65029ce0
6501dd4e:	call   0x65013d00
6501dd53:	xor    edi,edi
6501dd55:	mov    DWORD PTR [ebp-0x1c],edi
6501dd58:	mov    DWORD PTR [ebp-0x24],edi
6501dd5b:	push   0x1
6501dd5d:	call   0x65019cf8
6501dd62:	pop    ecx
6501dd63:	mov    DWORD PTR [ebp-0x4],edi
6501dd66:	xor    esi,esi
6501dd68:	mov    DWORD PTR [ebp-0x20],esi
6501dd6b:	cmp    esi,DWORD PTR ds:0x65031420
6501dd71:	jge    0x6501ddfa
6501dd77:	mov    eax,ds:0x65030400
6501dd7c:	lea    eax,[eax+esi*4]
6501dd7f:	cmp    DWORD PTR [eax],edi
6501dd81:	je     0x6501dde1
6501dd83:	mov    eax,DWORD PTR [eax]
6501dd85:	test   BYTE PTR [eax+0xc],0x83
6501dd89:	je     0x6501dde1
6501dd8b:	push   eax
6501dd8c:	push   esi
6501dd8d:	call   0x6501c4bf
6501dd92:	pop    ecx
6501dd93:	pop    ecx
6501dd94:	xor    edx,edx
6501dd96:	inc    edx
6501dd97:	mov    DWORD PTR [ebp-0x4],edx
6501dd9a:	mov    eax,ds:0x65030400
6501dd9f:	mov    eax,DWORD PTR [eax+esi*4]
6501dda2:	mov    ecx,DWORD PTR [eax+0xc]
6501dda5:	test   cl,0x83
6501dda8:	je     0x6501ddd9
6501ddaa:	cmp    DWORD PTR [ebp+0x8],edx
6501ddad:	jne    0x6501ddc0
6501ddaf:	push   eax
6501ddb0:	call   0x6501dd05
6501ddb5:	pop    ecx
6501ddb6:	cmp    eax,0xffffffff
6501ddb9:	je     0x6501ddd9
6501ddbb:	inc    DWORD PTR [ebp-0x1c]
6501ddbe:	jmp    0x6501ddd9
6501ddc0:	cmp    DWORD PTR [ebp+0x8],edi
6501ddc3:	jne    0x6501ddd9
6501ddc5:	test   cl,0x2
6501ddc8:	je     0x6501ddd9
6501ddca:	push   eax
6501ddcb:	call   0x6501dd05
6501ddd0:	pop    ecx
6501ddd1:	cmp    eax,0xffffffff
6501ddd4:	jne    0x6501ddd9
6501ddd6:	or     DWORD PTR [ebp-0x24],eax
6501ddd9:	mov    DWORD PTR [ebp-0x4],edi
6501dddc:	call   0x6501dde9
6501dde1:	inc    esi
6501dde2:	jmp    0x6501dd68
6501dde4:	xor    edi,edi
6501dde6:	mov    esi,DWORD PTR [ebp-0x20]
6501dde9:	mov    eax,ds:0x65030400
6501ddee:	push   DWORD PTR [eax+esi*4]
6501ddf1:	push   esi
6501ddf2:	call   0x6501c523
6501ddf7:	pop    ecx
6501ddf8:	pop    ecx
6501ddf9:	ret    
6501ddfa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501de01:	call   0x6501de18
6501de06:	cmp    DWORD PTR [ebp+0x8],0x1
6501de0a:	mov    eax,DWORD PTR [ebp-0x1c]
6501de0d:	je     0x6501de12
6501de0f:	mov    eax,DWORD PTR [ebp-0x24]
6501de12:	call   0x65013d45
6501de17:	ret    
6501de18:	push   0x1
6501de1a:	call   0x65019c20
6501de1f:	pop    ecx
6501de20:	ret    
6501de21:	push   0x1
6501de23:	call   0x6501dd47
6501de28:	pop    ecx
6501de29:	ret    
6501de2a:	push   ebp
6501de2b:	mov    ebp,esp
6501de2d:	push   ecx
6501de2e:	push   esi
6501de2f:	mov    esi,DWORD PTR [ebp+0xc]
6501de32:	push   esi
6501de33:	call   0x6501c54d
6501de38:	mov    DWORD PTR [ebp+0xc],eax
6501de3b:	mov    eax,DWORD PTR [esi+0xc]
6501de3e:	test   al,0x82
6501de40:	pop    ecx
6501de41:	jne    0x6501de5c
6501de43:	call   0x65014400
6501de48:	mov    DWORD PTR [eax],0x9
6501de4e:	or     DWORD PTR [esi+0xc],0x20
6501de52:	mov    eax,0xffff
6501de57:	jmp    0x6501df97
6501de5c:	test   al,0x40
6501de5e:	je     0x6501de6d
6501de60:	call   0x65014400
6501de65:	mov    DWORD PTR [eax],0x22
6501de6b:	jmp    0x6501de4e
6501de6d:	test   al,0x1
6501de6f:	je     0x6501de88
6501de71:	and    DWORD PTR [esi+0x4],0x0
6501de75:	test   al,0x10
6501de77:	je     0x6501df08
6501de7d:	mov    ecx,DWORD PTR [esi+0x8]
6501de80:	and    eax,0xfffffffe
6501de83:	mov    DWORD PTR [esi],ecx
6501de85:	mov    DWORD PTR [esi+0xc],eax
6501de88:	mov    eax,DWORD PTR [esi+0xc]
6501de8b:	and    DWORD PTR [esi+0x4],0x0
6501de8f:	and    DWORD PTR [ebp-0x4],0x0
6501de93:	push   ebx
6501de94:	push   0x2
6501de96:	and    eax,0xffffffef
6501de99:	pop    ebx
6501de9a:	or     eax,ebx
6501de9c:	test   ax,0x10c
6501dea0:	mov    DWORD PTR [esi+0xc],eax
6501dea3:	jne    0x6501ded1
6501dea5:	call   0x6501c3ac
6501deaa:	add    eax,0x20
6501dead:	cmp    esi,eax
6501deaf:	je     0x6501debd
6501deb1:	call   0x6501c3ac
6501deb6:	add    eax,0x40
6501deb9:	cmp    esi,eax
6501debb:	jne    0x6501deca
6501debd:	push   DWORD PTR [ebp+0xc]
6501dec0:	call   0x6501c34e
6501dec5:	test   eax,eax
6501dec7:	pop    ecx
6501dec8:	jne    0x6501ded1
6501deca:	push   esi
6501decb:	call   0x6501c30a
6501ded0:	pop    ecx
6501ded1:	test   WORD PTR [esi+0xc],0x108
6501ded7:	push   edi
6501ded8:	je     0x6501df61
6501dede:	mov    eax,DWORD PTR [esi+0x8]
6501dee1:	mov    edi,DWORD PTR [esi]
6501dee3:	lea    ecx,[eax+0x2]
6501dee6:	mov    DWORD PTR [esi],ecx
6501dee8:	mov    ecx,DWORD PTR [esi+0x18]
6501deeb:	sub    edi,eax
6501deed:	sub    ecx,ebx
6501deef:	test   edi,edi
6501def1:	mov    DWORD PTR [esi+0x4],ecx
6501def4:	jle    0x6501df13
6501def6:	push   edi
6501def7:	push   eax
6501def8:	push   DWORD PTR [ebp+0xc]
6501defb:	call   0x6501c22e
6501df00:	add    esp,0xc
6501df03:	mov    DWORD PTR [ebp-0x4],eax
6501df06:	jmp    0x6501df56
6501df08:	or     eax,0x20
6501df0b:	mov    DWORD PTR [esi+0xc],eax
6501df0e:	jmp    0x6501de52
6501df13:	mov    ecx,DWORD PTR [ebp+0xc]
6501df16:	cmp    ecx,0xffffffff
6501df19:	je     0x6501df36
6501df1b:	cmp    ecx,0xfffffffe
6501df1e:	je     0x6501df36
6501df20:	mov    eax,ecx
6501df22:	and    eax,0x1f
6501df25:	mov    edx,ecx
6501df27:	sar    edx,0x5
6501df2a:	shl    eax,0x6
6501df2d:	add    eax,DWORD PTR [edx*4+0x65031460]
6501df34:	jmp    0x6501df3b
6501df36:	mov    eax,0x6502c880
6501df3b:	test   BYTE PTR [eax+0x4],0x20
6501df3f:	je     0x6501df56
6501df41:	push   ebx
6501df42:	push   0x0
6501df44:	push   0x0
6501df46:	push   ecx
6501df47:	call   0x6501baf3
6501df4c:	and    eax,edx
6501df4e:	add    esp,0x10
6501df51:	cmp    eax,0xffffffff
6501df54:	je     0x6501df83
6501df56:	mov    eax,DWORD PTR [esi+0x8]
6501df59:	mov    ebx,DWORD PTR [ebp+0x8]
6501df5c:	mov    WORD PTR [eax],bx
6501df5f:	jmp    0x6501df7e
6501df61:	push   0x2
6501df63:	lea    eax,[ebp-0x4]
6501df66:	push   eax
6501df67:	push   DWORD PTR [ebp+0xc]
6501df6a:	mov    edi,ebx
6501df6c:	mov    ebx,DWORD PTR [ebp+0x8]
6501df6f:	mov    WORD PTR [ebp-0x4],bx
6501df73:	call   0x6501c22e
6501df78:	add    esp,0xc
6501df7b:	mov    DWORD PTR [ebp-0x4],eax
6501df7e:	cmp    DWORD PTR [ebp-0x4],edi
6501df81:	je     0x6501df8e
6501df83:	or     DWORD PTR [esi+0xc],0x20
6501df87:	mov    eax,0xffff
6501df8c:	jmp    0x6501df95
6501df8e:	mov    eax,ebx
6501df90:	and    eax,0xffff
6501df95:	pop    edi
6501df96:	pop    ebx
6501df97:	pop    esi
6501df98:	leave  
6501df99:	ret    
6501df9a:	push   ebp
6501df9b:	mov    ebp,esp
6501df9d:	sub    esp,0x14
6501dfa0:	push   esi
6501dfa1:	push   edi
6501dfa2:	push   DWORD PTR [ebp+0x8]
6501dfa5:	lea    ecx,[ebp-0x14]
6501dfa8:	call   0x6501295f
6501dfad:	mov    eax,DWORD PTR [ebp+0x10]
6501dfb0:	mov    esi,DWORD PTR [ebp+0xc]
6501dfb3:	xor    edi,edi
6501dfb5:	cmp    eax,edi
6501dfb7:	je     0x6501dfbb
6501dfb9:	mov    DWORD PTR [eax],esi
6501dfbb:	cmp    esi,edi
6501dfbd:	jne    0x6501dfeb
6501dfbf:	call   0x65014400
6501dfc4:	push   edi
6501dfc5:	push   edi
6501dfc6:	push   edi
6501dfc7:	push   edi
6501dfc8:	push   edi
6501dfc9:	mov    DWORD PTR [eax],0x16
6501dfcf:	call   0x650122af
6501dfd4:	add    esp,0x14
6501dfd7:	cmp    BYTE PTR [ebp-0x8],0x0
6501dfdb:	je     0x6501dfe4
6501dfdd:	mov    eax,DWORD PTR [ebp-0xc]
6501dfe0:	and    DWORD PTR [eax+0x70],0xfffffffd
6501dfe4:	xor    eax,eax
6501dfe6:	jmp    0x6501e1c1
6501dfeb:	cmp    DWORD PTR [ebp+0x14],edi
6501dfee:	je     0x6501dffc
6501dff0:	cmp    DWORD PTR [ebp+0x14],0x2
6501dff4:	jl     0x6501dfbf
6501dff6:	cmp    DWORD PTR [ebp+0x14],0x24
6501dffa:	jg     0x6501dfbf
6501dffc:	mov    ecx,DWORD PTR [ebp-0x14]
6501dfff:	push   ebx
6501e000:	mov    bl,BYTE PTR [esi]
6501e002:	mov    DWORD PTR [ebp-0x4],edi
6501e005:	lea    edi,[esi+0x1]
6501e008:	cmp    DWORD PTR [ecx+0xac],0x1
6501e00f:	jle    0x6501e028
6501e011:	lea    eax,[ebp-0x14]
6501e014:	push   eax
6501e015:	movzx  eax,bl
6501e018:	push   0x8
6501e01a:	push   eax
6501e01b:	call   0x650196a3
6501e020:	mov    ecx,DWORD PTR [ebp-0x14]
6501e023:	add    esp,0xc
6501e026:	jmp    0x6501e038
6501e028:	mov    edx,DWORD PTR [ecx+0xc8]
6501e02e:	movzx  eax,bl
6501e031:	movzx  eax,BYTE PTR [edx+eax*2]
6501e035:	and    eax,0x8
6501e038:	test   eax,eax
6501e03a:	je     0x6501e041
6501e03c:	mov    bl,BYTE PTR [edi]
6501e03e:	inc    edi
6501e03f:	jmp    0x6501e008
6501e041:	cmp    bl,0x2d
6501e044:	jne    0x6501e04c
6501e046:	or     DWORD PTR [ebp+0x18],0x2
6501e04a:	jmp    0x6501e051
6501e04c:	cmp    bl,0x2b
6501e04f:	jne    0x6501e054
6501e051:	mov    bl,BYTE PTR [edi]
6501e053:	inc    edi
6501e054:	mov    eax,DWORD PTR [ebp+0x14]
6501e057:	test   eax,eax
6501e059:	jl     0x6501e1a8
6501e05f:	cmp    eax,0x1
6501e062:	je     0x6501e1a8
6501e068:	cmp    eax,0x24
6501e06b:	jg     0x6501e1a8
6501e071:	test   eax,eax
6501e073:	jne    0x6501e09f
6501e075:	cmp    bl,0x30
6501e078:	je     0x6501e083
6501e07a:	mov    DWORD PTR [ebp+0x14],0xa
6501e081:	jmp    0x6501e0b7
6501e083:	mov    al,BYTE PTR [edi]
6501e085:	cmp    al,0x78
6501e087:	je     0x6501e096
6501e089:	cmp    al,0x58
6501e08b:	je     0x6501e096
6501e08d:	mov    DWORD PTR [ebp+0x14],0x8
6501e094:	jmp    0x6501e0b7
6501e096:	mov    DWORD PTR [ebp+0x14],0x10
6501e09d:	jmp    0x6501e0a9
6501e09f:	cmp    eax,0x10
6501e0a2:	jne    0x6501e0b7
6501e0a4:	cmp    bl,0x30
6501e0a7:	jne    0x6501e0b7
6501e0a9:	mov    al,BYTE PTR [edi]
6501e0ab:	cmp    al,0x78
6501e0ad:	je     0x6501e0b3
6501e0af:	cmp    al,0x58
6501e0b1:	jne    0x6501e0b7
6501e0b3:	inc    edi
6501e0b4:	mov    bl,BYTE PTR [edi]
6501e0b6:	inc    edi
6501e0b7:	mov    esi,DWORD PTR [ecx+0xc8]
6501e0bd:	or     eax,0xffffffff
6501e0c0:	xor    edx,edx
6501e0c2:	div    DWORD PTR [ebp+0x14]
6501e0c5:	movzx  ecx,bl
6501e0c8:	movzx  ecx,WORD PTR [esi+ecx*2]
6501e0cc:	test   cl,0x4
6501e0cf:	je     0x6501e0d9
6501e0d1:	movsx  ecx,bl
6501e0d4:	sub    ecx,0x30
6501e0d7:	jmp    0x6501e0f3
6501e0d9:	test   cx,0x103
6501e0de:	je     0x6501e111
6501e0e0:	mov    cl,bl
6501e0e2:	sub    cl,0x61
6501e0e5:	cmp    cl,0x19
6501e0e8:	movsx  ecx,bl
6501e0eb:	ja     0x6501e0f0
6501e0ed:	sub    ecx,0x20
6501e0f0:	add    ecx,0xffffffc9
6501e0f3:	cmp    ecx,DWORD PTR [ebp+0x14]
6501e0f6:	jae    0x6501e111
6501e0f8:	or     DWORD PTR [ebp+0x18],0x8
6501e0fc:	cmp    DWORD PTR [ebp-0x4],eax
6501e0ff:	jb     0x6501e128
6501e101:	jne    0x6501e107
6501e103:	cmp    ecx,edx
6501e105:	jbe    0x6501e128
6501e107:	or     DWORD PTR [ebp+0x18],0x4
6501e10b:	cmp    DWORD PTR [ebp+0x10],0x0
6501e10f:	jne    0x6501e134
6501e111:	mov    eax,DWORD PTR [ebp+0x18]
6501e114:	dec    edi
6501e115:	test   al,0x8
6501e117:	jne    0x6501e139
6501e119:	cmp    DWORD PTR [ebp+0x10],0x0
6501e11d:	je     0x6501e122
6501e11f:	mov    edi,DWORD PTR [ebp+0xc]
6501e122:	and    DWORD PTR [ebp-0x4],0x0
6501e126:	jmp    0x6501e184
6501e128:	mov    ebx,DWORD PTR [ebp-0x4]
6501e12b:	imul   ebx,DWORD PTR [ebp+0x14]
6501e12f:	add    ebx,ecx
6501e131:	mov    DWORD PTR [ebp-0x4],ebx
6501e134:	mov    bl,BYTE PTR [edi]
6501e136:	inc    edi
6501e137:	jmp    0x6501e0c5
6501e139:	test   al,0x4
6501e13b:	mov    esi,0x7fffffff
6501e140:	jne    0x6501e15d
6501e142:	test   al,0x1
6501e144:	jne    0x6501e184
6501e146:	and    eax,0x2
6501e149:	je     0x6501e154
6501e14b:	cmp    DWORD PTR [ebp-0x4],0x80000000
6501e152:	ja     0x6501e15d
6501e154:	test   eax,eax
6501e156:	jne    0x6501e184
6501e158:	cmp    DWORD PTR [ebp-0x4],esi
6501e15b:	jbe    0x6501e184
6501e15d:	call   0x65014400
6501e162:	test   BYTE PTR [ebp+0x18],0x1
6501e166:	mov    DWORD PTR [eax],0x22
6501e16c:	je     0x6501e174
6501e16e:	or     DWORD PTR [ebp-0x4],0xffffffff
6501e172:	jmp    0x6501e184
6501e174:	mov    al,BYTE PTR [ebp+0x18]
6501e177:	and    al,0x2
6501e179:	neg    al
6501e17b:	sbb    eax,eax
6501e17d:	neg    eax
6501e17f:	add    eax,esi
6501e181:	mov    DWORD PTR [ebp-0x4],eax
6501e184:	mov    eax,DWORD PTR [ebp+0x10]
6501e187:	test   eax,eax
6501e189:	je     0x6501e18d
6501e18b:	mov    DWORD PTR [eax],edi
6501e18d:	test   BYTE PTR [ebp+0x18],0x2
6501e191:	je     0x6501e196
6501e193:	neg    DWORD PTR [ebp-0x4]
6501e196:	cmp    BYTE PTR [ebp-0x8],0x0
6501e19a:	je     0x6501e1a3
6501e19c:	mov    eax,DWORD PTR [ebp-0xc]
6501e19f:	and    DWORD PTR [eax+0x70],0xfffffffd
6501e1a3:	mov    eax,DWORD PTR [ebp-0x4]
6501e1a6:	jmp    0x6501e1c0
6501e1a8:	mov    eax,DWORD PTR [ebp+0x10]
6501e1ab:	test   eax,eax
6501e1ad:	je     0x6501e1b1
6501e1af:	mov    DWORD PTR [eax],esi
6501e1b1:	cmp    BYTE PTR [ebp-0x8],0x0
6501e1b5:	je     0x6501e1be
6501e1b7:	mov    eax,DWORD PTR [ebp-0xc]
6501e1ba:	and    DWORD PTR [eax+0x70],0xfffffffd
6501e1be:	xor    eax,eax
6501e1c0:	pop    ebx
6501e1c1:	pop    edi
6501e1c2:	pop    esi
6501e1c3:	leave  
6501e1c4:	ret    
6501e1c5:	push   ebp
6501e1c6:	mov    ebp,esp
6501e1c8:	xor    eax,eax
6501e1ca:	cmp    DWORD PTR ds:0x6502d954,eax
6501e1d0:	push   eax
6501e1d1:	push   DWORD PTR [ebp+0x10]
6501e1d4:	push   DWORD PTR [ebp+0xc]
6501e1d7:	push   DWORD PTR [ebp+0x8]
6501e1da:	jne    0x6501e1e3
6501e1dc:	push   0x6502c878
6501e1e1:	jmp    0x6501e1e4
6501e1e3:	push   eax
6501e1e4:	call   0x6501df9a
6501e1e9:	add    esp,0x14
6501e1ec:	pop    ebp
6501e1ed:	ret    
6501e1ee:	int3   
6501e1ef:	int3   
6501e1f0:	push   ebp
6501e1f1:	mov    ebp,esp
6501e1f3:	push   edi
6501e1f4:	push   esi
6501e1f5:	push   ebx
6501e1f6:	mov    ecx,DWORD PTR [ebp+0x10]
6501e1f9:	or     ecx,ecx
6501e1fb:	je     0x6501e24a
6501e1fd:	mov    esi,DWORD PTR [ebp+0x8]
6501e200:	mov    edi,DWORD PTR [ebp+0xc]
6501e203:	mov    bh,0x41
6501e205:	mov    bl,0x5a
6501e207:	mov    dh,0x20
6501e209:	lea    ecx,[ecx+0x0]
6501e20c:	mov    ah,BYTE PTR [esi]
6501e20e:	or     ah,ah
6501e210:	mov    al,BYTE PTR [edi]
6501e212:	je     0x6501e23b
6501e214:	or     al,al
6501e216:	je     0x6501e23b
6501e218:	add    esi,0x1
6501e21b:	add    edi,0x1
6501e21e:	cmp    ah,bh
6501e220:	jb     0x6501e228
6501e222:	cmp    ah,bl
6501e224:	ja     0x6501e228
6501e226:	add    ah,dh
6501e228:	cmp    al,bh
6501e22a:	jb     0x6501e232
6501e22c:	cmp    al,bl
6501e22e:	ja     0x6501e232
6501e230:	add    al,dh
6501e232:	cmp    ah,al
6501e234:	jne    0x6501e241
6501e236:	sub    ecx,0x1
6501e239:	jne    0x6501e20c
6501e23b:	xor    ecx,ecx
6501e23d:	cmp    ah,al
6501e23f:	je     0x6501e24a
6501e241:	mov    ecx,0xffffffff
6501e246:	jb     0x6501e24a
6501e248:	neg    ecx
6501e24a:	mov    eax,ecx
6501e24c:	pop    ebx
6501e24d:	pop    esi
6501e24e:	pop    edi
6501e24f:	leave  
6501e250:	ret    
6501e251:	xor    eax,eax
6501e253:	push   eax
6501e254:	push   eax
6501e255:	push   0x3
6501e257:	push   eax
6501e258:	push   0x3
6501e25a:	push   0x40000000
6501e25f:	push   0x650265a4
6501e264:	call   DWORD PTR ds:0x650240ac
6501e26a:	mov    ds:0x6502d024,eax
6501e26f:	ret    
6501e270:	mov    eax,ds:0x6502d024
6501e275:	cmp    eax,0xffffffff
6501e278:	push   esi
6501e279:	mov    esi,DWORD PTR ds:0x65024040
6501e27f:	je     0x6501e289
6501e281:	cmp    eax,0xfffffffe
6501e284:	je     0x6501e289
6501e286:	push   eax
6501e287:	call   esi
6501e289:	mov    eax,ds:0x6502d020
6501e28e:	cmp    eax,0xffffffff
6501e291:	je     0x6501e29b
6501e293:	cmp    eax,0xfffffffe
6501e296:	je     0x6501e29b
6501e298:	push   eax
6501e299:	call   esi
6501e29b:	pop    esi
6501e29c:	ret    
6501e29d:	push   ebx
6501e29e:	push   esi
6501e29f:	mov    esi,DWORD PTR [esp+0xc]
6501e2a3:	push   edi
6501e2a4:	xor    edi,edi
6501e2a6:	or     ebx,0xffffffff
6501e2a9:	cmp    esi,edi
6501e2ab:	jne    0x6501e2c9
6501e2ad:	call   0x65014400
6501e2b2:	push   edi
6501e2b3:	push   edi
6501e2b4:	push   edi
6501e2b5:	push   edi
6501e2b6:	push   edi
6501e2b7:	mov    DWORD PTR [eax],0x16
6501e2bd:	call   0x650122af
6501e2c2:	add    esp,0x14
6501e2c5:	or     eax,ebx
6501e2c7:	jmp    0x6501e30b
6501e2c9:	test   BYTE PTR [esi+0xc],0x83
6501e2cd:	je     0x6501e306
6501e2cf:	push   esi
6501e2d0:	call   0x6501dca3
6501e2d5:	push   esi
6501e2d6:	mov    ebx,eax
6501e2d8:	call   0x6501e5ea
6501e2dd:	push   esi
6501e2de:	call   0x6501c54d
6501e2e3:	push   eax
6501e2e4:	call   0x6501e51d
6501e2e9:	add    esp,0x10
6501e2ec:	test   eax,eax
6501e2ee:	jge    0x6501e2f5
6501e2f0:	or     ebx,0xffffffff
6501e2f3:	jmp    0x6501e306
6501e2f5:	mov    eax,DWORD PTR [esi+0x1c]
6501e2f8:	cmp    eax,edi
6501e2fa:	je     0x6501e306
6501e2fc:	push   eax
6501e2fd:	call   0x650135d6
6501e302:	pop    ecx
6501e303:	mov    DWORD PTR [esi+0x1c],edi
6501e306:	mov    DWORD PTR [esi+0xc],edi
6501e309:	mov    eax,ebx
6501e30b:	pop    edi
6501e30c:	pop    esi
6501e30d:	pop    ebx
6501e30e:	ret    
6501e30f:	push   0xc
6501e311:	push   0x65029d08
6501e316:	call   0x65013d00
6501e31b:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501e31f:	xor    eax,eax
6501e321:	mov    esi,DWORD PTR [ebp+0x8]
6501e324:	xor    edi,edi
6501e326:	cmp    esi,edi
6501e328:	setne  al
6501e32b:	cmp    eax,edi
6501e32d:	jne    0x6501e34c
6501e32f:	call   0x65014400
6501e334:	mov    DWORD PTR [eax],0x16
6501e33a:	push   edi
6501e33b:	push   edi
6501e33c:	push   edi
6501e33d:	push   edi
6501e33e:	push   edi
6501e33f:	call   0x650122af
6501e344:	add    esp,0x14
6501e347:	or     eax,0xffffffff
6501e34a:	jmp    0x6501e358
6501e34c:	test   BYTE PTR [esi+0xc],0x40
6501e350:	je     0x6501e35e
6501e352:	mov    DWORD PTR [esi+0xc],edi
6501e355:	mov    eax,DWORD PTR [ebp-0x1c]
6501e358:	call   0x65013d45
6501e35d:	ret    
6501e35e:	push   esi
6501e35f:	call   0x6501c483
6501e364:	pop    ecx
6501e365:	mov    DWORD PTR [ebp-0x4],edi
6501e368:	push   esi
6501e369:	call   0x6501e29d
6501e36e:	pop    ecx
6501e36f:	mov    DWORD PTR [ebp-0x1c],eax
6501e372:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e379:	call   0x6501e383
6501e37e:	jmp    0x6501e355
6501e380:	mov    esi,DWORD PTR [ebp+0x8]
6501e383:	push   esi
6501e384:	call   0x6501c4ed
6501e389:	pop    ecx
6501e38a:	ret    
6501e38b:	push   0x10
6501e38d:	push   0x65029d28
6501e392:	call   0x65013d00
6501e397:	mov    eax,DWORD PTR [ebp+0x8]
6501e39a:	cmp    eax,0xfffffffe
6501e39d:	jne    0x6501e3b2
6501e39f:	call   0x65014400
6501e3a4:	mov    DWORD PTR [eax],0x9
6501e3aa:	or     eax,0xffffffff
6501e3ad:	jmp    0x6501e45c
6501e3b2:	xor    ebx,ebx
6501e3b4:	cmp    eax,ebx
6501e3b6:	jl     0x6501e3c0
6501e3b8:	cmp    eax,DWORD PTR ds:0x65031440
6501e3be:	jb     0x6501e3da
6501e3c0:	call   0x65014400
6501e3c5:	mov    DWORD PTR [eax],0x9
6501e3cb:	push   ebx
6501e3cc:	push   ebx
6501e3cd:	push   ebx
6501e3ce:	push   ebx
6501e3cf:	push   ebx
6501e3d0:	call   0x650122af
6501e3d5:	add    esp,0x14
6501e3d8:	jmp    0x6501e3aa
6501e3da:	mov    ecx,eax
6501e3dc:	sar    ecx,0x5
6501e3df:	lea    edi,[ecx*4+0x65031460]
6501e3e6:	mov    esi,eax
6501e3e8:	and    esi,0x1f
6501e3eb:	shl    esi,0x6
6501e3ee:	mov    ecx,DWORD PTR [edi]
6501e3f0:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6501e3f5:	and    ecx,0x1
6501e3f8:	je     0x6501e3c0
6501e3fa:	push   eax
6501e3fb:	call   0x6501da80
6501e400:	pop    ecx
6501e401:	mov    DWORD PTR [ebp-0x4],ebx
6501e404:	mov    eax,DWORD PTR [edi]
6501e406:	test   BYTE PTR [esi+eax*1+0x4],0x1
6501e40b:	je     0x6501e43e
6501e40d:	push   DWORD PTR [ebp+0x8]
6501e410:	call   0x6501da0f
6501e415:	pop    ecx
6501e416:	push   eax
6501e417:	call   DWORD PTR ds:0x650240b0
6501e41d:	test   eax,eax
6501e41f:	jne    0x6501e42c
6501e421:	call   DWORD PTR ds:0x65024044
6501e427:	mov    DWORD PTR [ebp-0x1c],eax
6501e42a:	jmp    0x6501e42f
6501e42c:	mov    DWORD PTR [ebp-0x1c],ebx
6501e42f:	cmp    DWORD PTR [ebp-0x1c],ebx
6501e432:	je     0x6501e44d
6501e434:	call   0x65014413
6501e439:	mov    ecx,DWORD PTR [ebp-0x1c]
6501e43c:	mov    DWORD PTR [eax],ecx
6501e43e:	call   0x65014400
6501e443:	mov    DWORD PTR [eax],0x9
6501e449:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501e44d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e454:	call   0x6501e462
6501e459:	mov    eax,DWORD PTR [ebp-0x1c]
6501e45c:	call   0x65013d45
6501e461:	ret    
6501e462:	push   DWORD PTR [ebp+0x8]
6501e465:	call   0x6501db20
6501e46a:	pop    ecx
6501e46b:	ret    
6501e46c:	xor    eax,eax
6501e46e:	cmp    DWORD PTR [esp+0x8],eax
6501e472:	jbe    0x6501e485
6501e474:	mov    ecx,DWORD PTR [esp+0x4]
6501e478:	cmp    BYTE PTR [ecx],0x0
6501e47b:	je     0x6501e485
6501e47d:	inc    eax
6501e47e:	inc    ecx
6501e47f:	cmp    eax,DWORD PTR [esp+0x8]
6501e483:	jb     0x6501e478
6501e485:	ret    
6501e486:	push   esi
6501e487:	mov    esi,DWORD PTR [esp+0x8]
6501e48b:	push   edi
6501e48c:	push   esi
6501e48d:	call   0x6501da0f
6501e492:	cmp    eax,0xffffffff
6501e495:	pop    ecx
6501e496:	je     0x6501e4e8
6501e498:	cmp    esi,0x1
6501e49b:	mov    eax,ds:0x65031460
6501e4a0:	jne    0x6501e4ab
6501e4a2:	test   BYTE PTR [eax+0x84],0x1
6501e4a9:	jne    0x6501e4b6
6501e4ab:	cmp    esi,0x2
6501e4ae:	jne    0x6501e4cc
6501e4b0:	test   BYTE PTR [eax+0x44],0x1
6501e4b4:	je     0x6501e4cc
6501e4b6:	push   0x2
6501e4b8:	call   0x6501da0f
6501e4bd:	push   0x1
6501e4bf:	mov    edi,eax
6501e4c1:	call   0x6501da0f
6501e4c6:	cmp    eax,edi
6501e4c8:	pop    ecx
6501e4c9:	pop    ecx
6501e4ca:	je     0x6501e4e8
6501e4cc:	push   esi
6501e4cd:	call   0x6501da0f
6501e4d2:	pop    ecx
6501e4d3:	push   eax
6501e4d4:	call   DWORD PTR ds:0x65024040
6501e4da:	test   eax,eax
6501e4dc:	jne    0x6501e4e8
6501e4de:	call   DWORD PTR ds:0x65024044
6501e4e4:	mov    edi,eax
6501e4e6:	jmp    0x6501e4ea
6501e4e8:	xor    edi,edi
6501e4ea:	push   esi
6501e4eb:	call   0x6501d98e
6501e4f0:	mov    eax,esi
6501e4f2:	sar    eax,0x5
6501e4f5:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501e4fc:	and    esi,0x1f
6501e4ff:	shl    esi,0x6
6501e502:	test   edi,edi
6501e504:	pop    ecx
6501e505:	mov    BYTE PTR [eax+esi*1+0x4],0x0
6501e50a:	je     0x6501e518
6501e50c:	push   edi
6501e50d:	call   0x65014426
6501e512:	pop    ecx
6501e513:	or     eax,0xffffffff
6501e516:	jmp    0x6501e51a
6501e518:	xor    eax,eax
6501e51a:	pop    edi
6501e51b:	pop    esi
6501e51c:	ret    
6501e51d:	push   0x10
6501e51f:	push   0x65029d48
6501e524:	call   0x65013d00
6501e529:	mov    eax,DWORD PTR [ebp+0x8]
6501e52c:	cmp    eax,0xfffffffe
6501e52f:	jne    0x6501e54c
6501e531:	call   0x65014413
6501e536:	and    DWORD PTR [eax],0x0
6501e539:	call   0x65014400
6501e53e:	mov    DWORD PTR [eax],0x9
6501e544:	or     eax,0xffffffff
6501e547:	jmp    0x6501e5da
6501e54c:	xor    edi,edi
6501e54e:	cmp    eax,edi
6501e550:	jl     0x6501e55a
6501e552:	cmp    eax,DWORD PTR ds:0x65031440
6501e558:	jb     0x6501e57b
6501e55a:	call   0x65014413
6501e55f:	mov    DWORD PTR [eax],edi
6501e561:	call   0x65014400
6501e566:	mov    DWORD PTR [eax],0x9
6501e56c:	push   edi
6501e56d:	push   edi
6501e56e:	push   edi
6501e56f:	push   edi
6501e570:	push   edi
6501e571:	call   0x650122af
6501e576:	add    esp,0x14
6501e579:	jmp    0x6501e544
6501e57b:	mov    ecx,eax
6501e57d:	sar    ecx,0x5
6501e580:	lea    ebx,[ecx*4+0x65031460]
6501e587:	mov    esi,eax
6501e589:	and    esi,0x1f
6501e58c:	shl    esi,0x6
6501e58f:	mov    ecx,DWORD PTR [ebx]
6501e591:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6501e596:	and    ecx,0x1
6501e599:	je     0x6501e55a
6501e59b:	push   eax
6501e59c:	call   0x6501da80
6501e5a1:	pop    ecx
6501e5a2:	mov    DWORD PTR [ebp-0x4],edi
6501e5a5:	mov    eax,DWORD PTR [ebx]
6501e5a7:	test   BYTE PTR [eax+esi*1+0x4],0x1
6501e5ac:	je     0x6501e5bc
6501e5ae:	push   DWORD PTR [ebp+0x8]
6501e5b1:	call   0x6501e486
6501e5b6:	pop    ecx
6501e5b7:	mov    DWORD PTR [ebp-0x1c],eax
6501e5ba:	jmp    0x6501e5cb
6501e5bc:	call   0x65014400
6501e5c1:	mov    DWORD PTR [eax],0x9
6501e5c7:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501e5cb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e5d2:	call   0x6501e5e0
6501e5d7:	mov    eax,DWORD PTR [ebp-0x1c]
6501e5da:	call   0x65013d45
6501e5df:	ret    
6501e5e0:	push   DWORD PTR [ebp+0x8]
6501e5e3:	call   0x6501db20
6501e5e8:	pop    ecx
6501e5e9:	ret    
6501e5ea:	push   esi
6501e5eb:	mov    esi,DWORD PTR [esp+0x8]
6501e5ef:	mov    eax,DWORD PTR [esi+0xc]
6501e5f2:	test   al,0x83
6501e5f4:	je     0x6501e614
6501e5f6:	test   al,0x8
6501e5f8:	je     0x6501e614
6501e5fa:	push   DWORD PTR [esi+0x8]
6501e5fd:	call   0x650135d6
6501e602:	and    DWORD PTR [esi+0xc],0xfffffbf7
6501e609:	xor    eax,eax
6501e60b:	pop    ecx
6501e60c:	mov    DWORD PTR [esi],eax
6501e60e:	mov    DWORD PTR [esi+0x8],eax
6501e611:	mov    DWORD PTR [esi+0x4],eax
6501e614:	pop    esi
6501e615:	ret    
6501e616:	int3   
6501e617:	int3   
6501e618:	int3   
6501e619:	int3   
6501e61a:	int3   
6501e61b:	int3   
6501e61c:	int3   
6501e61d:	int3   
6501e61e:	int3   
6501e61f:	int3   
6501e620:	lea    eax,[edx-0x1]
6501e623:	pop    ebx
6501e624:	ret    
6501e625:	lea    esp,[esp+0x0]
6501e62c:	lea    esp,[esp+0x0]
6501e630:	xor    eax,eax
6501e632:	mov    al,BYTE PTR [esp+0x8]
6501e636:	push   ebx
6501e637:	mov    ebx,eax
6501e639:	shl    eax,0x8
6501e63c:	mov    edx,DWORD PTR [esp+0x8]
6501e640:	test   edx,0x3
6501e646:	je     0x6501e65d
6501e648:	mov    cl,BYTE PTR [edx]
6501e64a:	add    edx,0x1
6501e64d:	cmp    cl,bl
6501e64f:	je     0x6501e620
6501e651:	test   cl,cl
6501e653:	je     0x6501e6a6
6501e655:	test   edx,0x3
6501e65b:	jne    0x6501e648
6501e65d:	or     ebx,eax
6501e65f:	push   edi
6501e660:	mov    eax,ebx
6501e662:	shl    ebx,0x10
6501e665:	push   esi
6501e666:	or     ebx,eax
6501e668:	mov    ecx,DWORD PTR [edx]
6501e66a:	mov    edi,0x7efefeff
6501e66f:	mov    eax,ecx
6501e671:	mov    esi,edi
6501e673:	xor    ecx,ebx
6501e675:	add    esi,eax
6501e677:	add    edi,ecx
6501e679:	xor    ecx,0xffffffff
6501e67c:	xor    eax,0xffffffff
6501e67f:	xor    ecx,edi
6501e681:	xor    eax,esi
6501e683:	add    edx,0x4
6501e686:	and    ecx,0x81010100
6501e68c:	jne    0x6501e6aa
6501e68e:	and    eax,0x81010100
6501e693:	je     0x6501e668
6501e695:	and    eax,0x1010100
6501e69a:	jne    0x6501e6a4
6501e69c:	and    esi,0x80000000
6501e6a2:	jne    0x6501e668
6501e6a4:	pop    esi
6501e6a5:	pop    edi
6501e6a6:	pop    ebx
6501e6a7:	xor    eax,eax
6501e6a9:	ret    
6501e6aa:	mov    eax,DWORD PTR [edx-0x4]
6501e6ad:	cmp    al,bl
6501e6af:	je     0x6501e6e7
6501e6b1:	test   al,al
6501e6b3:	je     0x6501e6a4
6501e6b5:	cmp    ah,bl
6501e6b7:	je     0x6501e6e0
6501e6b9:	test   ah,ah
6501e6bb:	je     0x6501e6a4
6501e6bd:	shr    eax,0x10
6501e6c0:	cmp    al,bl
6501e6c2:	je     0x6501e6d9
6501e6c4:	test   al,al
6501e6c6:	je     0x6501e6a4
6501e6c8:	cmp    ah,bl
6501e6ca:	je     0x6501e6d2
6501e6cc:	test   ah,ah
6501e6ce:	je     0x6501e6a4
6501e6d0:	jmp    0x6501e668
6501e6d2:	pop    esi
6501e6d3:	pop    edi
6501e6d4:	lea    eax,[edx-0x1]
6501e6d7:	pop    ebx
6501e6d8:	ret    
6501e6d9:	lea    eax,[edx-0x2]
6501e6dc:	pop    esi
6501e6dd:	pop    edi
6501e6de:	pop    ebx
6501e6df:	ret    
6501e6e0:	lea    eax,[edx-0x3]
6501e6e3:	pop    esi
6501e6e4:	pop    edi
6501e6e5:	pop    ebx
6501e6e6:	ret    
6501e6e7:	lea    eax,[edx-0x4]
6501e6ea:	pop    esi
6501e6eb:	pop    edi
6501e6ec:	pop    ebx
6501e6ed:	ret    
6501e6ee:	int3   
6501e6ef:	int3   
6501e6f0:	mov    eax,DWORD PTR [esp+0x4]
6501e6f4:	push   0x0
6501e6f6:	push   eax
6501e6f7:	call   DWORD PTR ds:0x6502d030
6501e6fd:	ret    0x4
6501e700:	push   ebp
6501e701:	mov    ebp,esp
6501e703:	push   0xfffffffe
6501e705:	push   0x65029d68
6501e70a:	push   0x65013d60
6501e70f:	mov    eax,fs:0x0
6501e715:	push   eax
6501e716:	sub    esp,0x18
6501e719:	mov    eax,ds:0x6502c09c
6501e71e:	xor    DWORD PTR [ebp-0x8],eax
6501e721:	xor    eax,ebp
6501e723:	mov    DWORD PTR [ebp-0x1c],eax
6501e726:	push   ebx
6501e727:	push   esi
6501e728:	push   edi
6501e729:	push   eax
6501e72a:	lea    eax,[ebp-0x10]
6501e72d:	mov    fs:0x0,eax
6501e733:	mov    DWORD PTR [ebp-0x18],esp
6501e736:	mov    esi,DWORD PTR [ebp+0x8]
6501e739:	test   esi,esi
6501e73b:	je     0x6501e792
6501e73d:	push   esi
6501e73e:	call   DWORD PTR ds:0x65024054
6501e744:	mov    edi,eax
6501e746:	add    edi,0x1
6501e749:	mov    DWORD PTR [ebp-0x20],edi
6501e74c:	push   0x0
6501e74e:	push   0x0
6501e750:	push   edi
6501e751:	push   esi
6501e752:	push   0x0
6501e754:	push   0x0
6501e756:	call   DWORD PTR ds:0x65024024
6501e75c:	mov    esi,eax
6501e75e:	mov    DWORD PTR [ebp-0x28],esi
6501e761:	test   esi,esi
6501e763:	jne    0x6501e799
6501e765:	mov    esi,DWORD PTR ds:0x65024044
6501e76b:	call   esi
6501e76d:	test   eax,eax
6501e76f:	jg     0x6501e780
6501e771:	call   esi
6501e773:	push   eax
6501e774:	call   0x6501e6f0
6501e779:	xor    eax,eax
6501e77b:	jmp    0x6501e860
6501e780:	call   esi
6501e782:	and    eax,0xffff
6501e787:	or     eax,0x80070000
6501e78c:	push   eax
6501e78d:	call   0x6501e6f0
6501e792:	xor    eax,eax
6501e794:	jmp    0x6501e860
6501e799:	mov    DWORD PTR [ebp-0x4],0x0
6501e7a0:	lea    eax,[esi+esi*1]
6501e7a3:	cmp    esi,0x1000
6501e7a9:	jge    0x6501e7c3
6501e7ab:	call   0x65012ec0
6501e7b0:	mov    DWORD PTR [ebp-0x18],esp
6501e7b3:	mov    eax,esp
6501e7b5:	mov    ebx,eax
6501e7b7:	mov    DWORD PTR [ebp-0x24],ebx
6501e7ba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e7c1:	jmp    0x6501e7f5
6501e7c3:	push   eax
6501e7c4:	call   0x650136b3
6501e7c9:	add    esp,0x4
6501e7cc:	mov    ebx,eax
6501e7ce:	mov    DWORD PTR [ebp-0x24],ebx
6501e7d1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e7d8:	jmp    0x6501e7f5
6501e7da:	mov    eax,0x1
6501e7df:	ret    
6501e7e0:	mov    esp,DWORD PTR [ebp-0x18]
6501e7e3:	xor    ebx,ebx
6501e7e5:	mov    DWORD PTR [ebp-0x24],ebx
6501e7e8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e7ef:	mov    edi,DWORD PTR [ebp-0x20]
6501e7f2:	mov    esi,DWORD PTR [ebp-0x28]
6501e7f5:	test   ebx,ebx
6501e7f7:	jne    0x6501e807
6501e7f9:	push   0x8007000e
6501e7fe:	call   0x6501e6f0
6501e803:	xor    eax,eax
6501e805:	jmp    0x6501e860
6501e807:	push   esi
6501e808:	push   ebx
6501e809:	push   edi
6501e80a:	mov    ecx,DWORD PTR [ebp+0x8]
6501e80d:	push   ecx
6501e80e:	push   0x0
6501e810:	push   0x0
6501e812:	call   DWORD PTR ds:0x65024024
6501e818:	test   eax,eax
6501e81a:	jne    0x6501e836
6501e81c:	cmp    esi,0x1000
6501e822:	jl     0x6501e765
6501e828:	push   ebx
6501e829:	call   0x650135d6
6501e82e:	add    esp,0x4
6501e831:	jmp    0x6501e765
6501e836:	push   ebx
6501e837:	call   DWORD PTR ds:0x65024198
6501e83d:	mov    edi,eax
6501e83f:	cmp    esi,0x1000
6501e845:	jl     0x6501e850
6501e847:	push   ebx
6501e848:	call   0x650135d6
6501e84d:	add    esp,0x4
6501e850:	test   edi,edi
6501e852:	jne    0x6501e85e
6501e854:	push   0x8007000e
6501e859:	call   0x6501e6f0
6501e85e:	mov    eax,edi
6501e860:	lea    esp,[ebp-0x38]
6501e863:	mov    ecx,DWORD PTR [ebp-0x10]
6501e866:	mov    DWORD PTR fs:0x0,ecx
6501e86d:	pop    ecx
6501e86e:	pop    edi
6501e86f:	pop    esi
6501e870:	pop    ebx
6501e871:	mov    ecx,DWORD PTR [ebp-0x1c]
6501e874:	xor    ecx,ebp
6501e876:	call   0x650127bc
6501e87b:	mov    esp,ebp
6501e87d:	pop    ebp
6501e87e:	ret    0x4
6501e881:	int3   
6501e882:	int3   
6501e883:	int3   
6501e884:	int3   
6501e885:	int3   
6501e886:	int3   
6501e887:	int3   
6501e888:	int3   
6501e889:	int3   
6501e88a:	int3   
6501e88b:	int3   
6501e88c:	int3   
6501e88d:	int3   
6501e88e:	int3   
6501e88f:	int3   
6501e890:	push   esi
6501e891:	mov    esi,ecx
6501e893:	mov    eax,DWORD PTR [esi+0x8]
6501e896:	test   eax,eax
6501e898:	mov    DWORD PTR [esi],0x650265b0
6501e89e:	je     0x6501e8a8
6501e8a0:	mov    ecx,DWORD PTR [eax]
6501e8a2:	mov    edx,DWORD PTR [ecx+0x8]
6501e8a5:	push   eax
6501e8a6:	call   edx
6501e8a8:	cmp    DWORD PTR [esi+0xc],0x0
6501e8ac:	je     0x6501e8c5
6501e8ae:	call   DWORD PTR ds:0x65024104
6501e8b4:	test   eax,eax
6501e8b6:	je     0x6501e8c5
6501e8b8:	mov    ecx,DWORD PTR [esi+0xc]
6501e8bb:	push   ecx
6501e8bc:	push   0x0
6501e8be:	push   eax
6501e8bf:	call   DWORD PTR ds:0x650240f8
6501e8c5:	pop    esi
6501e8c6:	ret    
6501e8c7:	int3   
6501e8c8:	int3   
6501e8c9:	int3   
6501e8ca:	int3   
6501e8cb:	int3   
6501e8cc:	int3   
6501e8cd:	int3   
6501e8ce:	int3   
6501e8cf:	int3   
6501e8d0:	sub    esp,0x10
6501e8d3:	mov    eax,DWORD PTR [esp+0x14]
6501e8d7:	mov    ecx,DWORD PTR [esp+0x18]
6501e8db:	push   0x65029d84
6501e8e0:	lea    edx,[esp+0x4]
6501e8e4:	push   edx
6501e8e5:	mov    DWORD PTR [esp+0x8],0x650265b0
6501e8ed:	mov    DWORD PTR [esp+0xc],eax
6501e8f1:	mov    DWORD PTR [esp+0x10],ecx
6501e8f5:	mov    DWORD PTR [esp+0x14],0x0
6501e8fd:	call   0x65012366
6501e902:	int3   
6501e903:	int3   
6501e904:	int3   
6501e905:	int3   
6501e906:	int3   
6501e907:	int3   
6501e908:	int3   
6501e909:	int3   
6501e90a:	int3   
6501e90b:	int3   
6501e90c:	int3   
6501e90d:	int3   
6501e90e:	int3   
6501e90f:	int3   
6501e910:	mov    eax,DWORD PTR [esp+0x4]
6501e914:	push   esi
6501e915:	mov    esi,ecx
6501e917:	mov    DWORD PTR [esi],0x650265b0
6501e91d:	mov    ecx,DWORD PTR [eax+0x4]
6501e920:	mov    DWORD PTR [esi+0x4],ecx
6501e923:	mov    edx,DWORD PTR [eax+0x8]
6501e926:	mov    eax,edx
6501e928:	test   eax,eax
6501e92a:	mov    DWORD PTR [esi+0x8],edx
6501e92d:	mov    DWORD PTR [esi+0xc],0x0
6501e934:	je     0x6501e93e
6501e936:	mov    ecx,DWORD PTR [eax]
6501e938:	mov    edx,DWORD PTR [ecx+0x4]
6501e93b:	push   eax
6501e93c:	call   edx
6501e93e:	mov    eax,esi
6501e940:	pop    esi
6501e941:	ret    0x4
6501e944:	int3   
6501e945:	int3   
6501e946:	int3   
6501e947:	int3   
6501e948:	int3   
6501e949:	int3   
6501e94a:	int3   
6501e94b:	int3   
6501e94c:	int3   
6501e94d:	int3   
6501e94e:	int3   
6501e94f:	int3   
6501e950:	push   esi
6501e951:	mov    esi,ecx
6501e953:	mov    eax,DWORD PTR [esi+0x8]
6501e956:	test   eax,eax
6501e958:	mov    DWORD PTR [esi],0x650265b0
6501e95e:	je     0x6501e968
6501e960:	mov    ecx,DWORD PTR [eax]
6501e962:	mov    edx,DWORD PTR [ecx+0x8]
6501e965:	push   eax
6501e966:	call   edx
6501e968:	cmp    DWORD PTR [esi+0xc],0x0
6501e96c:	je     0x6501e985
6501e96e:	call   DWORD PTR ds:0x65024104
6501e974:	test   eax,eax
6501e976:	je     0x6501e985
6501e978:	mov    ecx,DWORD PTR [esi+0xc]
6501e97b:	push   ecx
6501e97c:	push   0x0
6501e97e:	push   eax
6501e97f:	call   DWORD PTR ds:0x650240f8
6501e985:	test   BYTE PTR [esp+0x8],0x1
6501e98a:	je     0x6501e995
6501e98c:	push   esi
6501e98d:	call   0x65011f62
6501e992:	add    esp,0x4
6501e995:	mov    eax,esi
6501e997:	pop    esi
6501e998:	ret    0x4
6501e99b:	int3   
6501e99c:	jmp    DWORD PTR ds:0x65024118
6501e9a2:	push   ebp
6501e9a3:	mov    ebp,esp
6501e9a5:	sub    esp,0xc
6501e9a8:	mov    eax,ds:0x6502c09c
6501e9ad:	xor    eax,ebp
6501e9af:	mov    DWORD PTR [ebp-0x4],eax
6501e9b2:	push   ebx
6501e9b3:	push   esi
6501e9b4:	push   edi
6501e9b5:	mov    edi,DWORD PTR [ebp+0x8]
6501e9b8:	xor    ebx,ebx
6501e9ba:	cmp    edi,ebx
6501e9bc:	jne    0x6501e9da
6501e9be:	call   0x65014400
6501e9c3:	push   0x16
6501e9c5:	pop    esi
6501e9c6:	push   ebx
6501e9c7:	push   ebx
6501e9c8:	push   ebx
6501e9c9:	push   ebx
6501e9ca:	push   ebx
6501e9cb:	mov    DWORD PTR [eax],esi
6501e9cd:	call   0x650122af
6501e9d2:	add    esp,0x14
6501e9d5:	jmp    0x6501eb0f
6501e9da:	push   DWORD PTR [ebp+0xc]
6501e9dd:	push   edi
6501e9de:	call   0x6501e46c
6501e9e3:	cmp    eax,DWORD PTR [ebp+0xc]
6501e9e6:	pop    ecx
6501e9e7:	pop    ecx
6501e9e8:	jb     0x6501e9ee
6501e9ea:	mov    BYTE PTR [edi],bl
6501e9ec:	jmp    0x6501e9be
6501e9ee:	mov    edx,DWORD PTR [ebp+0x10]
6501e9f1:	mov    eax,DWORD PTR [edx]
6501e9f3:	mov    ecx,DWORD PTR [eax+0x14]
6501e9f6:	cmp    ecx,ebx
6501e9f8:	jne    0x6501ea1a
6501e9fa:	cmp    BYTE PTR [edi],bl
6501e9fc:	mov    ecx,edi
6501e9fe:	je     0x6501ea13
6501ea00:	mov    al,BYTE PTR [ecx]
6501ea02:	cmp    al,0x41
6501ea04:	jl     0x6501ea0e
6501ea06:	cmp    al,0x5a
6501ea08:	jg     0x6501ea0e
6501ea0a:	add    al,0x20
6501ea0c:	mov    BYTE PTR [ecx],al
6501ea0e:	inc    ecx
6501ea0f:	cmp    BYTE PTR [ecx],bl
6501ea11:	jne    0x6501ea00
6501ea13:	xor    eax,eax
6501ea15:	jmp    0x6501eb11
6501ea1a:	push   0x1
6501ea1c:	push   DWORD PTR [eax+0x4]
6501ea1f:	mov    esi,0x100
6501ea24:	push   ebx
6501ea25:	push   ebx
6501ea26:	push   0xffffffff
6501ea28:	push   edi
6501ea29:	push   esi
6501ea2a:	push   ecx
6501ea2b:	push   edx
6501ea2c:	call   0x65019afb
6501ea31:	mov    ecx,eax
6501ea33:	add    esp,0x24
6501ea36:	cmp    ecx,ebx
6501ea38:	mov    DWORD PTR [ebp-0xc],ecx
6501ea3b:	jne    0x6501ea54
6501ea3d:	call   0x65014400
6501ea42:	mov    DWORD PTR [eax],0x2a
6501ea48:	call   0x65014400
6501ea4d:	mov    eax,DWORD PTR [eax]
6501ea4f:	jmp    0x6501eb11
6501ea54:	cmp    DWORD PTR [ebp+0xc],ecx
6501ea57:	jae    0x6501ea67
6501ea59:	mov    BYTE PTR [edi],bl
6501ea5b:	call   0x65014400
6501ea60:	push   0x22
6501ea62:	jmp    0x6501e9c5
6501ea67:	cmp    ecx,ebx
6501ea69:	jle    0x6501eab0
6501ea6b:	push   0xffffffe0
6501ea6d:	xor    edx,edx
6501ea6f:	pop    eax
6501ea70:	div    ecx
6501ea72:	cmp    eax,0x1
6501ea75:	jb     0x6501eab0
6501ea77:	lea    eax,[ecx+0x8]
6501ea7a:	cmp    eax,0x400
6501ea7f:	ja     0x6501ea94
6501ea81:	call   0x65012ec0
6501ea86:	mov    eax,esp
6501ea88:	cmp    eax,ebx
6501ea8a:	je     0x6501eaa8
6501ea8c:	mov    DWORD PTR [eax],0xcccc
6501ea92:	jmp    0x6501eaa5
6501ea94:	push   eax
6501ea95:	call   0x650136b3
6501ea9a:	cmp    eax,ebx
6501ea9c:	pop    ecx
6501ea9d:	je     0x6501eaa8
6501ea9f:	mov    DWORD PTR [eax],0xdddd
6501eaa5:	add    eax,0x8
6501eaa8:	mov    ecx,DWORD PTR [ebp-0xc]
6501eaab:	mov    DWORD PTR [ebp-0x8],eax
6501eaae:	jmp    0x6501eab3
6501eab0:	mov    DWORD PTR [ebp-0x8],ebx
6501eab3:	cmp    DWORD PTR [ebp-0x8],ebx
6501eab6:	jne    0x6501eac5
6501eab8:	call   0x65014400
6501eabd:	mov    DWORD PTR [eax],0xc
6501eac3:	jmp    0x6501ea48
6501eac5:	mov    edx,DWORD PTR [ebp+0x10]
6501eac8:	mov    eax,DWORD PTR [edx]
6501eaca:	push   0x1
6501eacc:	push   DWORD PTR [eax+0x4]
6501eacf:	push   ecx
6501ead0:	push   DWORD PTR [ebp-0x8]
6501ead3:	push   0xffffffff
6501ead5:	push   edi
6501ead6:	push   esi
6501ead7:	push   DWORD PTR [eax+0x14]
6501eada:	push   edx
6501eadb:	call   0x65019afb
6501eae0:	add    esp,0x24
6501eae3:	test   eax,eax
6501eae5:	je     0x6501eafa
6501eae7:	push   DWORD PTR [ebp-0x8]
6501eaea:	push   DWORD PTR [ebp+0xc]
6501eaed:	push   edi
6501eaee:	call   0x65013ff4
6501eaf3:	add    esp,0xc
6501eaf6:	mov    esi,eax
6501eaf8:	jmp    0x6501eb06
6501eafa:	call   0x65014400
6501eaff:	push   0x2a
6501eb01:	pop    ecx
6501eb02:	mov    DWORD PTR [eax],ecx
6501eb04:	mov    esi,ecx
6501eb06:	push   DWORD PTR [ebp-0x8]
6501eb09:	call   0x65012c52
6501eb0e:	pop    ecx
6501eb0f:	mov    eax,esi
6501eb11:	lea    esp,[ebp-0x18]
6501eb14:	pop    edi
6501eb15:	pop    esi
6501eb16:	pop    ebx
6501eb17:	mov    ecx,DWORD PTR [ebp-0x4]
6501eb1a:	xor    ecx,ebp
6501eb1c:	call   0x650127bc
6501eb21:	leave  
6501eb22:	ret    
6501eb23:	push   ebp
6501eb24:	mov    ebp,esp
6501eb26:	sub    esp,0x10
6501eb29:	push   DWORD PTR [ebp+0x10]
6501eb2c:	lea    ecx,[ebp-0x10]
6501eb2f:	call   0x6501295f
6501eb34:	lea    eax,[ebp-0x10]
6501eb37:	push   eax
6501eb38:	push   DWORD PTR [ebp+0xc]
6501eb3b:	push   DWORD PTR [ebp+0x8]
6501eb3e:	call   0x6501e9a2
6501eb43:	add    esp,0xc
6501eb46:	cmp    BYTE PTR [ebp-0x4],0x0
6501eb4a:	je     0x6501eb53
6501eb4c:	mov    ecx,DWORD PTR [ebp-0x8]
6501eb4f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501eb53:	leave  
6501eb54:	ret    
6501eb55:	push   ebx
6501eb56:	xor    ebx,ebx
6501eb58:	cmp    DWORD PTR ds:0x6502d954,ebx
6501eb5e:	jne    0x6501eba2
6501eb60:	mov    eax,DWORD PTR [esp+0x8]
6501eb64:	cmp    eax,ebx
6501eb66:	jne    0x6501eb84
6501eb68:	call   0x65014400
6501eb6d:	push   ebx
6501eb6e:	push   ebx
6501eb6f:	push   ebx
6501eb70:	push   ebx
6501eb71:	push   ebx
6501eb72:	mov    DWORD PTR [eax],0x16
6501eb78:	call   0x650122af
6501eb7d:	add    esp,0x14
6501eb80:	xor    eax,eax
6501eb82:	pop    ebx
6501eb83:	ret    
6501eb84:	cmp    BYTE PTR [eax],bl
6501eb86:	mov    edx,eax
6501eb88:	je     0x6501ebb5
6501eb8a:	mov    cl,BYTE PTR [edx]
6501eb8c:	cmp    cl,0x41
6501eb8f:	jl     0x6501eb9b
6501eb91:	cmp    cl,0x5a
6501eb94:	jg     0x6501eb9b
6501eb96:	add    cl,0x20
6501eb99:	mov    BYTE PTR [edx],cl
6501eb9b:	inc    edx
6501eb9c:	cmp    BYTE PTR [edx],bl
6501eb9e:	jne    0x6501eb8a
6501eba0:	pop    ebx
6501eba1:	ret    
6501eba2:	push   ebx
6501eba3:	push   0xffffffff
6501eba5:	push   DWORD PTR [esp+0x10]
6501eba9:	call   0x6501eb23
6501ebae:	mov    eax,DWORD PTR [esp+0x14]
6501ebb2:	add    esp,0xc
6501ebb5:	pop    ebx
6501ebb6:	ret    
6501ebb7:	ret    
6501ebb8:	mov    eax,0x6501f6c3
6501ebbd:	mov    ds:0x6502cb44,eax
6501ebc2:	mov    DWORD PTR ds:0x6502cb48,0x6501edbf
6501ebcc:	mov    DWORD PTR ds:0x6502cb4c,0x6501ed7d
6501ebd6:	mov    DWORD PTR ds:0x6502cb50,0x6501edb1
6501ebe0:	mov    DWORD PTR ds:0x6502cb54,0x6501ed27
6501ebea:	mov    ds:0x6502cb58,eax
6501ebef:	mov    DWORD PTR ds:0x6502cb5c,0x6501f63d
6501ebf9:	mov    DWORD PTR ds:0x6502cb60,0x6501ed3d
6501ec03:	mov    DWORD PTR ds:0x6502cb64,0x6501eca7
6501ec0d:	mov    DWORD PTR ds:0x6502cb68,0x6501ec36
6501ec17:	ret    
6501ec18:	call   0x6501ebb8
6501ec1d:	call   0x6501f749
6501ec22:	cmp    DWORD PTR [esp+0x4],0x0
6501ec27:	mov    ds:0x6502e054,eax
6501ec2c:	je     0x6501ec33
6501ec2e:	call   0x6501f6e4
6501ec33:	fnclex 
6501ec35:	ret    
6501ec36:	push   ebp
6501ec37:	mov    ebp,esp
6501ec39:	sub    esp,0x10
6501ec3c:	push   esi
6501ec3d:	push   DWORD PTR [ebp+0xc]
6501ec40:	lea    ecx,[ebp-0x10]
6501ec43:	call   0x6501295f
6501ec48:	mov    esi,DWORD PTR [ebp+0x8]
6501ec4b:	movsx  eax,BYTE PTR [esi]
6501ec4e:	push   eax
6501ec4f:	call   0x650135af
6501ec54:	cmp    eax,0x65
6501ec57:	jmp    0x6501ec65
6501ec59:	inc    esi
6501ec5a:	movzx  eax,BYTE PTR [esi]
6501ec5d:	push   eax
6501ec5e:	call   0x65013378
6501ec63:	test   eax,eax
6501ec65:	pop    ecx
6501ec66:	jne    0x6501ec59
6501ec68:	movsx  eax,BYTE PTR [esi]
6501ec6b:	push   eax
6501ec6c:	call   0x650135af
6501ec71:	cmp    eax,0x78
6501ec74:	pop    ecx
6501ec75:	jne    0x6501ec79
6501ec77:	inc    esi
6501ec78:	inc    esi
6501ec79:	mov    ecx,DWORD PTR [ebp-0x10]
6501ec7c:	mov    ecx,DWORD PTR [ecx+0xbc]
6501ec82:	mov    ecx,DWORD PTR [ecx]
6501ec84:	mov    al,BYTE PTR [esi]
6501ec86:	mov    cl,BYTE PTR [ecx]
6501ec88:	mov    BYTE PTR [esi],cl
6501ec8a:	inc    esi
6501ec8b:	mov    cl,BYTE PTR [esi]
6501ec8d:	mov    BYTE PTR [esi],al
6501ec8f:	mov    al,cl
6501ec91:	mov    cl,BYTE PTR [esi]
6501ec93:	inc    esi
6501ec94:	test   cl,cl
6501ec96:	jne    0x6501ec8b
6501ec98:	cmp    BYTE PTR [ebp-0x4],cl
6501ec9b:	pop    esi
6501ec9c:	je     0x6501eca5
6501ec9e:	mov    eax,DWORD PTR [ebp-0x8]
6501eca1:	and    DWORD PTR [eax+0x70],0xfffffffd
6501eca5:	leave  
6501eca6:	ret    
6501eca7:	push   ebp
6501eca8:	mov    ebp,esp
6501ecaa:	sub    esp,0x10
6501ecad:	push   esi
6501ecae:	push   DWORD PTR [ebp+0xc]
6501ecb1:	lea    ecx,[ebp-0x10]
6501ecb4:	call   0x6501295f
6501ecb9:	mov    eax,DWORD PTR [ebp+0x8]
6501ecbc:	mov    cl,BYTE PTR [eax]
6501ecbe:	test   cl,cl
6501ecc0:	mov    esi,DWORD PTR [ebp-0x10]
6501ecc3:	je     0x6501ecda
6501ecc5:	mov    edx,DWORD PTR [esi+0xbc]
6501eccb:	mov    edx,DWORD PTR [edx]
6501eccd:	mov    dl,BYTE PTR [edx]
6501eccf:	cmp    cl,dl
6501ecd1:	je     0x6501ecda
6501ecd3:	inc    eax
6501ecd4:	mov    cl,BYTE PTR [eax]
6501ecd6:	test   cl,cl
6501ecd8:	jne    0x6501eccf
6501ecda:	mov    cl,BYTE PTR [eax]
6501ecdc:	inc    eax
6501ecdd:	test   cl,cl
6501ecdf:	je     0x6501ed17
6501ece1:	jmp    0x6501ecee
6501ece3:	cmp    cl,0x65
6501ece6:	je     0x6501ecf4
6501ece8:	cmp    cl,0x45
6501eceb:	je     0x6501ecf4
6501eced:	inc    eax
6501ecee:	mov    cl,BYTE PTR [eax]
6501ecf0:	test   cl,cl
6501ecf2:	jne    0x6501ece3
6501ecf4:	mov    edx,eax
6501ecf6:	dec    eax
6501ecf7:	cmp    BYTE PTR [eax],0x30
6501ecfa:	je     0x6501ecf6
6501ecfc:	mov    ecx,DWORD PTR [esi+0xbc]
6501ed02:	mov    ecx,DWORD PTR [ecx]
6501ed04:	push   ebx
6501ed05:	mov    bl,BYTE PTR [eax]
6501ed07:	cmp    bl,BYTE PTR [ecx]
6501ed09:	pop    ebx
6501ed0a:	jne    0x6501ed0d
6501ed0c:	dec    eax
6501ed0d:	mov    cl,BYTE PTR [edx]
6501ed0f:	inc    eax
6501ed10:	inc    edx
6501ed11:	test   cl,cl
6501ed13:	mov    BYTE PTR [eax],cl
6501ed15:	jne    0x6501ed0d
6501ed17:	cmp    BYTE PTR [ebp-0x4],0x0
6501ed1b:	pop    esi
6501ed1c:	je     0x6501ed25
6501ed1e:	mov    eax,DWORD PTR [ebp-0x8]
6501ed21:	and    DWORD PTR [eax+0x70],0xfffffffd
6501ed25:	leave  
6501ed26:	ret    
6501ed27:	fldz   
6501ed29:	mov    eax,DWORD PTR [esp+0x4]
6501ed2d:	fcomp  QWORD PTR [eax]
6501ed2f:	fnstsw ax
6501ed31:	test   ah,0x41
6501ed34:	jp     0x6501ed3a
6501ed36:	xor    eax,eax
6501ed38:	inc    eax
6501ed39:	ret    
6501ed3a:	xor    eax,eax
6501ed3c:	ret    
6501ed3d:	push   ebp
6501ed3e:	mov    ebp,esp
6501ed40:	push   ecx
6501ed41:	push   ecx
6501ed42:	cmp    DWORD PTR [ebp+0x8],0x0
6501ed46:	push   DWORD PTR [ebp+0x14]
6501ed49:	push   DWORD PTR [ebp+0x10]
6501ed4c:	je     0x6501ed67
6501ed4e:	lea    eax,[ebp-0x8]
6501ed51:	push   eax
6501ed52:	call   0x6501f7ad
6501ed57:	mov    ecx,DWORD PTR [ebp-0x8]
6501ed5a:	mov    eax,DWORD PTR [ebp+0xc]
6501ed5d:	mov    DWORD PTR [eax],ecx
6501ed5f:	mov    ecx,DWORD PTR [ebp-0x4]
6501ed62:	mov    DWORD PTR [eax+0x4],ecx
6501ed65:	jmp    0x6501ed78
6501ed67:	lea    eax,[ebp+0x8]
6501ed6a:	push   eax
6501ed6b:	call   0x6501f853
6501ed70:	mov    eax,DWORD PTR [ebp+0xc]
6501ed73:	mov    ecx,DWORD PTR [ebp+0x8]
6501ed76:	mov    DWORD PTR [eax],ecx
6501ed78:	add    esp,0xc
6501ed7b:	leave  
6501ed7c:	ret    
6501ed7d:	push   0x0
6501ed7f:	push   DWORD PTR [esp+0x10]
6501ed83:	push   DWORD PTR [esp+0x10]
6501ed87:	push   DWORD PTR [esp+0x10]
6501ed8b:	call   0x6501ed3d
6501ed90:	add    esp,0x10
6501ed93:	ret    
6501ed94:	test   edi,edi
6501ed96:	push   esi
6501ed97:	mov    esi,eax
6501ed99:	je     0x6501edaf
6501ed9b:	push   esi
6501ed9c:	call   0x65013f00
6501eda1:	inc    eax
6501eda2:	push   eax
6501eda3:	push   esi
6501eda4:	add    esi,edi
6501eda6:	push   esi
6501eda7:	call   0x65013780
6501edac:	add    esp,0x10
6501edaf:	pop    esi
6501edb0:	ret    
6501edb1:	push   0x0
6501edb3:	push   DWORD PTR [esp+0x8]
6501edb7:	call   0x6501ec36
6501edbc:	pop    ecx
6501edbd:	pop    ecx
6501edbe:	ret    
6501edbf:	push   0x0
6501edc1:	push   DWORD PTR [esp+0x8]
6501edc5:	call   0x6501eca7
6501edca:	pop    ecx
6501edcb:	pop    ecx
6501edcc:	ret    
6501edcd:	push   ebp
6501edce:	mov    ebp,esp
6501edd0:	sub    esp,0x10
6501edd3:	push   ebx
6501edd4:	push   esi
6501edd5:	push   edi
6501edd6:	push   DWORD PTR [ebp+0x1c]
6501edd9:	lea    ecx,[ebp-0x10]
6501eddc:	mov    ebx,eax
6501edde:	call   0x6501295f
6501ede3:	xor    esi,esi
6501ede5:	cmp    ebx,esi
6501ede7:	jne    0x6501ee14
6501ede9:	call   0x65014400
6501edee:	push   0x16
6501edf0:	pop    edi
6501edf1:	push   esi
6501edf2:	push   esi
6501edf3:	push   esi
6501edf4:	push   esi
6501edf5:	push   esi
6501edf6:	mov    DWORD PTR [eax],edi
6501edf8:	call   0x650122af
6501edfd:	add    esp,0x14
6501ee00:	cmp    BYTE PTR [ebp-0x4],0x0
6501ee04:	je     0x6501ee0d
6501ee06:	mov    eax,DWORD PTR [ebp-0x8]
6501ee09:	and    DWORD PTR [eax+0x70],0xfffffffd
6501ee0d:	mov    eax,edi
6501ee0f:	jmp    0x6501ef35
6501ee14:	cmp    DWORD PTR [ebp+0x8],esi
6501ee17:	jbe    0x6501ede9
6501ee19:	cmp    DWORD PTR [ebp+0xc],esi
6501ee1c:	jle    0x6501ee23
6501ee1e:	mov    eax,DWORD PTR [ebp+0xc]
6501ee21:	jmp    0x6501ee25
6501ee23:	xor    eax,eax
6501ee25:	add    eax,0x9
6501ee28:	cmp    DWORD PTR [ebp+0x8],eax
6501ee2b:	ja     0x6501ee36
6501ee2d:	call   0x65014400
6501ee32:	push   0x22
6501ee34:	jmp    0x6501edf0
6501ee36:	cmp    BYTE PTR [ebp+0x18],0x0
6501ee3a:	je     0x6501ee5a
6501ee3c:	mov    edx,DWORD PTR [ebp+0x14]
6501ee3f:	xor    eax,eax
6501ee41:	cmp    DWORD PTR [ebp+0xc],esi
6501ee44:	setg   al
6501ee47:	xor    ecx,ecx
6501ee49:	cmp    DWORD PTR [edx],0x2d
6501ee4c:	sete   cl
6501ee4f:	mov    edi,eax
6501ee51:	add    ecx,ebx
6501ee53:	mov    eax,ecx
6501ee55:	call   0x6501ed94
6501ee5a:	mov    edi,DWORD PTR [ebp+0x14]
6501ee5d:	cmp    DWORD PTR [edi],0x2d
6501ee60:	mov    esi,ebx
6501ee62:	jne    0x6501ee6a
6501ee64:	mov    BYTE PTR [ebx],0x2d
6501ee67:	lea    esi,[ebx+0x1]
6501ee6a:	cmp    DWORD PTR [ebp+0xc],0x0
6501ee6e:	jle    0x6501ee88
6501ee70:	lea    eax,[esi+0x1]
6501ee73:	mov    cl,BYTE PTR [eax]
6501ee75:	mov    BYTE PTR [esi],cl
6501ee77:	mov    esi,eax
6501ee79:	mov    eax,DWORD PTR [ebp-0x10]
6501ee7c:	mov    eax,DWORD PTR [eax+0xbc]
6501ee82:	mov    eax,DWORD PTR [eax]
6501ee84:	mov    al,BYTE PTR [eax]
6501ee86:	mov    BYTE PTR [esi],al
6501ee88:	xor    eax,eax
6501ee8a:	cmp    BYTE PTR [ebp+0x18],al
6501ee8d:	sete   al
6501ee90:	add    eax,DWORD PTR [ebp+0xc]
6501ee93:	add    esi,eax
6501ee95:	cmp    DWORD PTR [ebp+0x8],0xffffffff
6501ee99:	jne    0x6501eea0
6501ee9b:	or     ebx,0xffffffff
6501ee9e:	jmp    0x6501eea5
6501eea0:	sub    ebx,esi
6501eea2:	add    ebx,DWORD PTR [ebp+0x8]
6501eea5:	push   0x650265c0
6501eeaa:	push   ebx
6501eeab:	push   esi
6501eeac:	call   0x65013ff4
6501eeb1:	add    esp,0xc
6501eeb4:	xor    ebx,ebx
6501eeb6:	test   eax,eax
6501eeb8:	je     0x6501eec7
6501eeba:	push   ebx
6501eebb:	push   ebx
6501eebc:	push   ebx
6501eebd:	push   ebx
6501eebe:	push   ebx
6501eebf:	call   0x650121b3
6501eec4:	add    esp,0x14
6501eec7:	cmp    DWORD PTR [ebp+0x10],ebx
6501eeca:	lea    ecx,[esi+0x2]
6501eecd:	je     0x6501eed2
6501eecf:	mov    BYTE PTR [esi],0x45
6501eed2:	mov    eax,DWORD PTR [edi+0xc]
6501eed5:	inc    esi
6501eed6:	cmp    BYTE PTR [eax],0x30
6501eed9:	je     0x6501ef09
6501eedb:	mov    eax,DWORD PTR [edi+0x4]
6501eede:	dec    eax
6501eedf:	jns    0x6501eee6
6501eee1:	neg    eax
6501eee3:	mov    BYTE PTR [esi],0x2d
6501eee6:	inc    esi
6501eee7:	cmp    eax,0x64
6501eeea:	jl     0x6501eef6
6501eeec:	cdq    
6501eeed:	push   0x64
6501eeef:	pop    edi
6501eef0:	idiv   edi
6501eef2:	add    BYTE PTR [esi],al
6501eef4:	mov    eax,edx
6501eef6:	inc    esi
6501eef7:	cmp    eax,0xa
6501eefa:	jl     0x6501ef06
6501eefc:	cdq    
6501eefd:	push   0xa
6501eeff:	pop    edi
6501ef00:	idiv   edi
6501ef02:	add    BYTE PTR [esi],al
6501ef04:	mov    eax,edx
6501ef06:	add    BYTE PTR [esi+0x1],al
6501ef09:	test   BYTE PTR ds:0x6502e058,0x1
6501ef10:	je     0x6501ef26
6501ef12:	cmp    BYTE PTR [ecx],0x30
6501ef15:	jne    0x6501ef26
6501ef17:	push   0x3
6501ef19:	lea    eax,[ecx+0x1]
6501ef1c:	push   eax
6501ef1d:	push   ecx
6501ef1e:	call   0x65013780
6501ef23:	add    esp,0xc
6501ef26:	cmp    BYTE PTR [ebp-0x4],0x0
6501ef2a:	je     0x6501ef33
6501ef2c:	mov    eax,DWORD PTR [ebp-0x8]
6501ef2f:	and    DWORD PTR [eax+0x70],0xfffffffd
6501ef33:	xor    eax,eax
6501ef35:	pop    edi
6501ef36:	pop    esi
6501ef37:	pop    ebx
6501ef38:	leave  
6501ef39:	ret    
6501ef3a:	push   ebp
6501ef3b:	mov    ebp,esp
6501ef3d:	sub    esp,0x2c
6501ef40:	mov    eax,ds:0x6502c09c
6501ef45:	xor    eax,ebp
6501ef47:	mov    DWORD PTR [ebp-0x4],eax
6501ef4a:	mov    eax,DWORD PTR [ebp+0x8]
6501ef4d:	push   ebx
6501ef4e:	push   esi
6501ef4f:	push   edi
6501ef50:	mov    edi,DWORD PTR [ebp+0xc]
6501ef53:	push   0x16
6501ef55:	pop    esi
6501ef56:	push   esi
6501ef57:	lea    ecx,[ebp-0x1c]
6501ef5a:	push   ecx
6501ef5b:	lea    ecx,[ebp-0x2c]
6501ef5e:	push   ecx
6501ef5f:	push   DWORD PTR [eax+0x4]
6501ef62:	push   DWORD PTR [eax]
6501ef64:	call   0x6501fa71
6501ef69:	xor    ebx,ebx
6501ef6b:	add    esp,0x14
6501ef6e:	cmp    edi,ebx
6501ef70:	jne    0x6501ef8a
6501ef72:	call   0x65014400
6501ef77:	push   ebx
6501ef78:	push   ebx
6501ef79:	push   ebx
6501ef7a:	push   ebx
6501ef7b:	push   ebx
6501ef7c:	mov    DWORD PTR [eax],esi
6501ef7e:	call   0x650122af
6501ef83:	add    esp,0x14
6501ef86:	mov    eax,esi
6501ef88:	jmp    0x6501eff9
6501ef8a:	mov    eax,DWORD PTR [ebp+0x10]
6501ef8d:	cmp    eax,ebx
6501ef8f:	jbe    0x6501ef72
6501ef91:	cmp    eax,0xffffffff
6501ef94:	mov    esi,DWORD PTR [ebp+0x14]
6501ef97:	jne    0x6501ef9e
6501ef99:	or     eax,0xffffffff
6501ef9c:	jmp    0x6501efb2
6501ef9e:	xor    ecx,ecx
6501efa0:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501efa4:	sete   cl
6501efa7:	sub    eax,ecx
6501efa9:	xor    ecx,ecx
6501efab:	cmp    esi,ebx
6501efad:	setg   cl
6501efb0:	sub    eax,ecx
6501efb2:	lea    ecx,[ebp-0x2c]
6501efb5:	push   ecx
6501efb6:	lea    ecx,[esi+0x1]
6501efb9:	push   ecx
6501efba:	push   eax
6501efbb:	xor    eax,eax
6501efbd:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501efc1:	sete   al
6501efc4:	xor    ecx,ecx
6501efc6:	cmp    esi,ebx
6501efc8:	setg   cl
6501efcb:	add    eax,edi
6501efcd:	add    ecx,eax
6501efcf:	push   ecx
6501efd0:	call   0x6501f8f9
6501efd5:	add    esp,0x10
6501efd8:	cmp    eax,ebx
6501efda:	je     0x6501efe0
6501efdc:	mov    BYTE PTR [edi],bl
6501efde:	jmp    0x6501eff9
6501efe0:	push   DWORD PTR [ebp+0x1c]
6501efe3:	lea    eax,[ebp-0x2c]
6501efe6:	push   ebx
6501efe7:	push   eax
6501efe8:	push   DWORD PTR [ebp+0x18]
6501efeb:	mov    eax,edi
6501efed:	push   esi
6501efee:	push   DWORD PTR [ebp+0x10]
6501eff1:	call   0x6501edcd
6501eff6:	add    esp,0x18
6501eff9:	mov    ecx,DWORD PTR [ebp-0x4]
6501effc:	pop    edi
6501effd:	pop    esi
6501effe:	xor    ecx,ebp
6501f000:	pop    ebx
6501f001:	call   0x650127bc
6501f006:	leave  
6501f007:	ret    
6501f008:	push   ebp
6501f009:	mov    ebp,esp
6501f00b:	push   0x0
6501f00d:	push   DWORD PTR [ebp+0x18]
6501f010:	push   DWORD PTR [ebp+0x14]
6501f013:	push   DWORD PTR [ebp+0x10]
6501f016:	push   DWORD PTR [ebp+0xc]
6501f019:	push   DWORD PTR [ebp+0x8]
6501f01c:	call   0x6501ef3a
6501f021:	add    esp,0x18
6501f024:	pop    ebp
6501f025:	ret    
6501f026:	push   ebp
6501f027:	mov    ebp,esp
6501f029:	sub    esp,0x24
6501f02c:	push   esi
6501f02d:	push   edi
6501f02e:	push   DWORD PTR [ebp+0x1c]
6501f031:	lea    ecx,[ebp-0x24]
6501f034:	mov    DWORD PTR [ebp-0x14],0x3ff
6501f03b:	xor    edi,edi
6501f03d:	mov    DWORD PTR [ebp-0x4],0x30
6501f044:	call   0x6501295f
6501f049:	cmp    DWORD PTR [ebp+0x14],edi
6501f04c:	jge    0x6501f051
6501f04e:	mov    DWORD PTR [ebp+0x14],edi
6501f051:	mov    esi,DWORD PTR [ebp+0xc]
6501f054:	cmp    esi,edi
6501f056:	jne    0x6501f083
6501f058:	call   0x65014400
6501f05d:	push   0x16
6501f05f:	pop    esi
6501f060:	push   edi
6501f061:	push   edi
6501f062:	push   edi
6501f063:	push   edi
6501f064:	push   edi
6501f065:	mov    DWORD PTR [eax],esi
6501f067:	call   0x650122af
6501f06c:	add    esp,0x14
6501f06f:	cmp    BYTE PTR [ebp-0x18],0x0
6501f073:	je     0x6501f07c
6501f075:	mov    eax,DWORD PTR [ebp-0x1c]
6501f078:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f07c:	mov    eax,esi
6501f07e:	jmp    0x6501f393
6501f083:	cmp    DWORD PTR [ebp+0x10],edi
6501f086:	jbe    0x6501f058
6501f088:	mov    eax,DWORD PTR [ebp+0x14]
6501f08b:	add    eax,0xb
6501f08e:	cmp    DWORD PTR [ebp+0x10],eax
6501f091:	mov    BYTE PTR [esi],0x0
6501f094:	ja     0x6501f09f
6501f096:	call   0x65014400
6501f09b:	push   0x22
6501f09d:	jmp    0x6501f05f
6501f09f:	mov    edi,DWORD PTR [ebp+0x8]
6501f0a2:	mov    eax,DWORD PTR [edi]
6501f0a4:	mov    DWORD PTR [ebp-0xc],eax
6501f0a7:	mov    eax,DWORD PTR [edi+0x4]
6501f0aa:	mov    ecx,eax
6501f0ac:	shr    ecx,0x14
6501f0af:	mov    edx,0x7ff
6501f0b4:	push   ebx
6501f0b5:	and    ecx,edx
6501f0b7:	xor    ebx,ebx
6501f0b9:	cmp    ecx,edx
6501f0bb:	jne    0x6501f151
6501f0c1:	test   ebx,ebx
6501f0c3:	jne    0x6501f151
6501f0c9:	mov    eax,DWORD PTR [ebp+0x10]
6501f0cc:	cmp    eax,0xffffffff
6501f0cf:	jne    0x6501f0d5
6501f0d1:	or     eax,eax
6501f0d3:	jmp    0x6501f0d8
6501f0d5:	add    eax,0xfffffffe
6501f0d8:	push   0x0
6501f0da:	push   DWORD PTR [ebp+0x14]
6501f0dd:	lea    ebx,[esi+0x2]
6501f0e0:	push   eax
6501f0e1:	push   ebx
6501f0e2:	push   edi
6501f0e3:	call   0x6501f008
6501f0e8:	add    esp,0x14
6501f0eb:	test   eax,eax
6501f0ed:	je     0x6501f108
6501f0ef:	cmp    BYTE PTR [ebp-0x18],0x0
6501f0f3:	mov    BYTE PTR [esi],0x0
6501f0f6:	je     0x6501f392
6501f0fc:	mov    ecx,DWORD PTR [ebp-0x1c]
6501f0ff:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501f103:	jmp    0x6501f392
6501f108:	cmp    BYTE PTR [ebx],0x2d
6501f10b:	jne    0x6501f111
6501f10d:	mov    BYTE PTR [esi],0x2d
6501f110:	inc    esi
6501f111:	mov    BYTE PTR [esi],0x30
6501f114:	inc    esi
6501f115:	cmp    DWORD PTR [ebp+0x18],0x0
6501f119:	push   0x65
6501f11b:	sete   al
6501f11e:	dec    al
6501f120:	and    al,0xe0
6501f122:	add    al,0x78
6501f124:	mov    BYTE PTR [esi],al
6501f126:	inc    esi
6501f127:	push   esi
6501f128:	call   0x6501f780
6501f12d:	test   eax,eax
6501f12f:	pop    ecx
6501f130:	pop    ecx
6501f131:	je     0x6501f383
6501f137:	cmp    DWORD PTR [ebp+0x18],0x0
6501f13b:	sete   cl
6501f13e:	dec    cl
6501f140:	and    cl,0xe0
6501f143:	add    cl,0x70
6501f146:	mov    BYTE PTR [eax],cl
6501f148:	mov    BYTE PTR [eax+0x3],0x0
6501f14c:	jmp    0x6501f383
6501f151:	and    eax,0x80000000
6501f156:	xor    ecx,ecx
6501f158:	or     ecx,eax
6501f15a:	je     0x6501f160
6501f15c:	mov    BYTE PTR [esi],0x2d
6501f15f:	inc    esi
6501f160:	mov    ebx,DWORD PTR [ebp+0x18]
6501f163:	mov    BYTE PTR [esi],0x30
6501f166:	inc    esi
6501f167:	test   ebx,ebx
6501f169:	sete   al
6501f16c:	dec    al
6501f16e:	and    al,0xe0
6501f170:	add    al,0x78
6501f172:	mov    BYTE PTR [esi],al
6501f174:	mov    ecx,DWORD PTR [edi+0x4]
6501f177:	inc    esi
6501f178:	neg    ebx
6501f17a:	sbb    ebx,ebx
6501f17c:	and    ebx,0xffffffe0
6501f17f:	and    ecx,0x7ff00000
6501f185:	xor    eax,eax
6501f187:	add    ebx,0x27
6501f18a:	xor    edx,edx
6501f18c:	or     eax,ecx
6501f18e:	jne    0x6501f1b1
6501f190:	mov    BYTE PTR [esi],0x30
6501f193:	mov    ecx,DWORD PTR [edi+0x4]
6501f196:	mov    eax,DWORD PTR [edi]
6501f198:	and    ecx,0xfffff
6501f19e:	inc    esi
6501f19f:	or     eax,ecx
6501f1a1:	jne    0x6501f1a8
6501f1a3:	mov    DWORD PTR [ebp-0x14],edx
6501f1a6:	jmp    0x6501f1b5
6501f1a8:	mov    DWORD PTR [ebp-0x14],0x3fe
6501f1af:	jmp    0x6501f1b5
6501f1b1:	mov    BYTE PTR [esi],0x31
6501f1b4:	inc    esi
6501f1b5:	mov    eax,esi
6501f1b7:	inc    esi
6501f1b8:	cmp    DWORD PTR [ebp+0x14],edx
6501f1bb:	mov    DWORD PTR [ebp+0xc],eax
6501f1be:	jne    0x6501f1c4
6501f1c0:	mov    BYTE PTR [eax],dl
6501f1c2:	jmp    0x6501f1d3
6501f1c4:	mov    ecx,DWORD PTR [ebp-0x24]
6501f1c7:	mov    ecx,DWORD PTR [ecx+0xbc]
6501f1cd:	mov    ecx,DWORD PTR [ecx]
6501f1cf:	mov    cl,BYTE PTR [ecx]
6501f1d1:	mov    BYTE PTR [eax],cl
6501f1d3:	mov    ecx,DWORD PTR [edi+0x4]
6501f1d6:	mov    eax,DWORD PTR [edi]
6501f1d8:	and    ecx,0xfffff
6501f1de:	mov    DWORD PTR [ebp-0x8],ecx
6501f1e1:	ja     0x6501f1eb
6501f1e3:	cmp    eax,edx
6501f1e5:	jbe    0x6501f2a0
6501f1eb:	mov    DWORD PTR [ebp-0xc],edx
6501f1ee:	mov    DWORD PTR [ebp-0x8],0xf0000
6501f1f5:	cmp    DWORD PTR [ebp+0x14],0x0
6501f1f9:	jle    0x6501f248
6501f1fb:	mov    edx,DWORD PTR [edi+0x4]
6501f1fe:	and    edx,DWORD PTR [ebp-0x8]
6501f201:	mov    eax,DWORD PTR [edi]
6501f203:	movsx  ecx,WORD PTR [ebp-0x4]
6501f207:	and    eax,DWORD PTR [ebp-0xc]
6501f20a:	and    edx,0xfffff
6501f210:	call   0x6501fbe0
6501f215:	add    ax,0x30
6501f219:	movzx  eax,ax
6501f21c:	cmp    ax,0x39
6501f220:	jbe    0x6501f224
6501f222:	add    eax,ebx
6501f224:	mov    ecx,DWORD PTR [ebp-0x8]
6501f227:	sub    DWORD PTR [ebp-0x4],0x4
6501f22b:	mov    BYTE PTR [esi],al
6501f22d:	mov    eax,DWORD PTR [ebp-0xc]
6501f230:	shrd   eax,ecx,0x4
6501f234:	shr    ecx,0x4
6501f237:	inc    esi
6501f238:	dec    DWORD PTR [ebp+0x14]
6501f23b:	cmp    WORD PTR [ebp-0x4],0x0
6501f240:	mov    DWORD PTR [ebp-0xc],eax
6501f243:	mov    DWORD PTR [ebp-0x8],ecx
6501f246:	jge    0x6501f1f5
6501f248:	cmp    WORD PTR [ebp-0x4],0x0
6501f24d:	jl     0x6501f2a0
6501f24f:	mov    edx,DWORD PTR [edi+0x4]
6501f252:	and    edx,DWORD PTR [ebp-0x8]
6501f255:	mov    eax,DWORD PTR [edi]
6501f257:	movsx  ecx,WORD PTR [ebp-0x4]
6501f25b:	and    eax,DWORD PTR [ebp-0xc]
6501f25e:	and    edx,0xfffff
6501f264:	call   0x6501fbe0
6501f269:	cmp    ax,0x8
6501f26d:	jbe    0x6501f2a0
6501f26f:	lea    eax,[esi-0x1]
6501f272:	mov    cl,BYTE PTR [eax]
6501f274:	cmp    cl,0x66
6501f277:	je     0x6501f27e
6501f279:	cmp    cl,0x46
6501f27c:	jne    0x6501f284
6501f27e:	mov    BYTE PTR [eax],0x30
6501f281:	dec    eax
6501f282:	jmp    0x6501f272
6501f284:	cmp    eax,DWORD PTR [ebp+0xc]
6501f287:	je     0x6501f29d
6501f289:	mov    cl,BYTE PTR [eax]
6501f28b:	cmp    cl,0x39
6501f28e:	jne    0x6501f297
6501f290:	add    bl,0x3a
6501f293:	mov    BYTE PTR [eax],bl
6501f295:	jmp    0x6501f2a0
6501f297:	inc    cl
6501f299:	mov    BYTE PTR [eax],cl
6501f29b:	jmp    0x6501f2a0
6501f29d:	inc    BYTE PTR [eax-0x1]
6501f2a0:	cmp    DWORD PTR [ebp+0x14],0x0
6501f2a4:	jle    0x6501f2b7
6501f2a6:	push   DWORD PTR [ebp+0x14]
6501f2a9:	push   0x30
6501f2ab:	push   esi
6501f2ac:	call   0x65012e40
6501f2b1:	add    esp,0xc
6501f2b4:	add    esi,DWORD PTR [ebp+0x14]
6501f2b7:	mov    eax,DWORD PTR [ebp+0xc]
6501f2ba:	cmp    BYTE PTR [eax],0x0
6501f2bd:	jne    0x6501f2c1
6501f2bf:	mov    esi,eax
6501f2c1:	cmp    DWORD PTR [ebp+0x18],0x0
6501f2c5:	mov    cl,0x34
6501f2c7:	sete   al
6501f2ca:	dec    al
6501f2cc:	and    al,0xe0
6501f2ce:	add    al,0x70
6501f2d0:	mov    BYTE PTR [esi],al
6501f2d2:	mov    eax,DWORD PTR [edi]
6501f2d4:	mov    edx,DWORD PTR [edi+0x4]
6501f2d7:	inc    esi
6501f2d8:	call   0x6501fbe0
6501f2dd:	xor    ebx,ebx
6501f2df:	and    eax,0x7ff
6501f2e4:	and    edx,ebx
6501f2e6:	sub    eax,DWORD PTR [ebp-0x14]
6501f2e9:	push   ebx
6501f2ea:	pop    ecx
6501f2eb:	sbb    edx,ecx
6501f2ed:	js     0x6501f2fb
6501f2ef:	jg     0x6501f2f5
6501f2f1:	cmp    eax,ebx
6501f2f3:	jb     0x6501f2fb
6501f2f5:	mov    BYTE PTR [esi],0x2b
6501f2f8:	inc    esi
6501f2f9:	jmp    0x6501f305
6501f2fb:	mov    BYTE PTR [esi],0x2d
6501f2fe:	inc    esi
6501f2ff:	neg    eax
6501f301:	adc    edx,ebx
6501f303:	neg    edx
6501f305:	cmp    edx,ebx
6501f307:	mov    edi,esi
6501f309:	mov    BYTE PTR [esi],0x30
6501f30c:	jl     0x6501f332
6501f30e:	mov    ecx,0x3e8
6501f313:	jg     0x6501f319
6501f315:	cmp    eax,ecx
6501f317:	jb     0x6501f332
6501f319:	push   ebx
6501f31a:	push   ecx
6501f31b:	push   edx
6501f31c:	push   eax
6501f31d:	call   0x6501fb00
6501f322:	add    al,0x30
6501f324:	mov    BYTE PTR [esi],al
6501f326:	inc    esi
6501f327:	cmp    esi,edi
6501f329:	mov    DWORD PTR [ebp-0x10],edx
6501f32c:	mov    eax,ecx
6501f32e:	mov    edx,ebx
6501f330:	jne    0x6501f33d
6501f332:	test   edx,edx
6501f334:	jl     0x6501f354
6501f336:	jg     0x6501f33d
6501f338:	cmp    eax,0x64
6501f33b:	jb     0x6501f354
6501f33d:	push   0x0
6501f33f:	push   0x64
6501f341:	push   edx
6501f342:	push   eax
6501f343:	call   0x6501fb00
6501f348:	add    al,0x30
6501f34a:	mov    BYTE PTR [esi],al
6501f34c:	mov    DWORD PTR [ebp-0x10],edx
6501f34f:	inc    esi
6501f350:	mov    eax,ecx
6501f352:	mov    edx,ebx
6501f354:	cmp    esi,edi
6501f356:	jne    0x6501f363
6501f358:	test   edx,edx
6501f35a:	jl     0x6501f37b
6501f35c:	jg     0x6501f363
6501f35e:	cmp    eax,0xa
6501f361:	jb     0x6501f37b
6501f363:	push   0x0
6501f365:	push   0xa
6501f367:	push   edx
6501f368:	push   eax
6501f369:	call   0x6501fb00
6501f36e:	add    al,0x30
6501f370:	mov    BYTE PTR [esi],al
6501f372:	mov    DWORD PTR [ebp-0x10],edx
6501f375:	inc    esi
6501f376:	mov    eax,ecx
6501f378:	mov    DWORD PTR [ebp-0x10],ebx
6501f37b:	add    al,0x30
6501f37d:	mov    BYTE PTR [esi],al
6501f37f:	mov    BYTE PTR [esi+0x1],0x0
6501f383:	cmp    BYTE PTR [ebp-0x18],0x0
6501f387:	je     0x6501f390
6501f389:	mov    eax,DWORD PTR [ebp-0x1c]
6501f38c:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f390:	xor    eax,eax
6501f392:	pop    ebx
6501f393:	pop    edi
6501f394:	pop    esi
6501f395:	leave  
6501f396:	ret    
6501f397:	push   ebp
6501f398:	mov    ebp,esp
6501f39a:	sub    esp,0x10
6501f39d:	push   ebx
6501f39e:	push   esi
6501f39f:	push   edi
6501f3a0:	push   DWORD PTR [ebp+0x14]
6501f3a3:	mov    ebx,eax
6501f3a5:	mov    esi,DWORD PTR [ebx+0x4]
6501f3a8:	mov    edi,ecx
6501f3aa:	lea    ecx,[ebp-0x10]
6501f3ad:	dec    esi
6501f3ae:	call   0x6501295f
6501f3b3:	test   edi,edi
6501f3b5:	jne    0x6501f3e4
6501f3b7:	call   0x65014400
6501f3bc:	push   0x16
6501f3be:	pop    esi
6501f3bf:	mov    DWORD PTR [eax],esi
6501f3c1:	xor    eax,eax
6501f3c3:	push   eax
6501f3c4:	push   eax
6501f3c5:	push   eax
6501f3c6:	push   eax
6501f3c7:	push   eax
6501f3c8:	call   0x650122af
6501f3cd:	add    esp,0x14
6501f3d0:	cmp    BYTE PTR [ebp-0x4],0x0
6501f3d4:	je     0x6501f3dd
6501f3d6:	mov    eax,DWORD PTR [ebp-0x8]
6501f3d9:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f3dd:	mov    eax,esi
6501f3df:	jmp    0x6501f487
6501f3e4:	cmp    DWORD PTR [ebp+0x8],0x0
6501f3e8:	jbe    0x6501f3b7
6501f3ea:	cmp    BYTE PTR [ebp+0x10],0x0
6501f3ee:	je     0x6501f408
6501f3f0:	cmp    esi,DWORD PTR [ebp+0xc]
6501f3f3:	jne    0x6501f408
6501f3f5:	xor    eax,eax
6501f3f7:	cmp    DWORD PTR [ebx],0x2d
6501f3fa:	sete   al
6501f3fd:	add    eax,esi
6501f3ff:	add    eax,edi
6501f401:	mov    BYTE PTR [eax],0x30
6501f404:	mov    BYTE PTR [eax+0x1],0x0
6501f408:	cmp    DWORD PTR [ebx],0x2d
6501f40b:	mov    esi,edi
6501f40d:	jne    0x6501f415
6501f40f:	mov    BYTE PTR [edi],0x2d
6501f412:	lea    esi,[edi+0x1]
6501f415:	mov    eax,DWORD PTR [ebx+0x4]
6501f418:	xor    edi,edi
6501f41a:	inc    edi
6501f41b:	test   eax,eax
6501f41d:	jg     0x6501f42c
6501f41f:	mov    eax,esi
6501f421:	call   0x6501ed94
6501f426:	mov    BYTE PTR [esi],0x30
6501f429:	inc    esi
6501f42a:	jmp    0x6501f42e
6501f42c:	add    esi,eax
6501f42e:	cmp    DWORD PTR [ebp+0xc],0x0
6501f432:	jle    0x6501f478
6501f434:	mov    eax,esi
6501f436:	call   0x6501ed94
6501f43b:	mov    eax,DWORD PTR [ebp-0x10]
6501f43e:	mov    eax,DWORD PTR [eax+0xbc]
6501f444:	mov    eax,DWORD PTR [eax]
6501f446:	mov    al,BYTE PTR [eax]
6501f448:	mov    BYTE PTR [esi],al
6501f44a:	mov    ebx,DWORD PTR [ebx+0x4]
6501f44d:	inc    esi
6501f44e:	test   ebx,ebx
6501f450:	jge    0x6501f478
6501f452:	neg    ebx
6501f454:	cmp    BYTE PTR [ebp+0x10],0x0
6501f458:	jne    0x6501f45f
6501f45a:	cmp    DWORD PTR [ebp+0xc],ebx
6501f45d:	jl     0x6501f462
6501f45f:	mov    DWORD PTR [ebp+0xc],ebx
6501f462:	mov    edi,DWORD PTR [ebp+0xc]
6501f465:	mov    eax,esi
6501f467:	call   0x6501ed94
6501f46c:	push   edi
6501f46d:	push   0x30
6501f46f:	push   esi
6501f470:	call   0x65012e40
6501f475:	add    esp,0xc
6501f478:	cmp    BYTE PTR [ebp-0x4],0x0
6501f47c:	je     0x6501f485
6501f47e:	mov    eax,DWORD PTR [ebp-0x8]
6501f481:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f485:	xor    eax,eax
6501f487:	pop    edi
6501f488:	pop    esi
6501f489:	pop    ebx
6501f48a:	leave  
6501f48b:	ret    
6501f48c:	push   ebp
6501f48d:	mov    ebp,esp
6501f48f:	sub    esp,0x2c
6501f492:	mov    eax,ds:0x6502c09c
6501f497:	xor    eax,ebp
6501f499:	mov    DWORD PTR [ebp-0x4],eax
6501f49c:	mov    eax,DWORD PTR [ebp+0x8]
6501f49f:	push   ebx
6501f4a0:	push   esi
6501f4a1:	push   edi
6501f4a2:	mov    edi,DWORD PTR [ebp+0xc]
6501f4a5:	push   0x16
6501f4a7:	pop    esi
6501f4a8:	push   esi
6501f4a9:	lea    ecx,[ebp-0x1c]
6501f4ac:	push   ecx
6501f4ad:	lea    ecx,[ebp-0x2c]
6501f4b0:	push   ecx
6501f4b1:	push   DWORD PTR [eax+0x4]
6501f4b4:	push   DWORD PTR [eax]
6501f4b6:	call   0x6501fa71
6501f4bb:	xor    ebx,ebx
6501f4bd:	add    esp,0x14
6501f4c0:	cmp    edi,ebx
6501f4c2:	jne    0x6501f4dc
6501f4c4:	call   0x65014400
6501f4c9:	push   ebx
6501f4ca:	push   ebx
6501f4cb:	push   ebx
6501f4cc:	push   ebx
6501f4cd:	push   ebx
6501f4ce:	mov    DWORD PTR [eax],esi
6501f4d0:	call   0x650122af
6501f4d5:	add    esp,0x14
6501f4d8:	mov    eax,esi
6501f4da:	jmp    0x6501f536
6501f4dc:	mov    eax,DWORD PTR [ebp+0x10]
6501f4df:	cmp    eax,ebx
6501f4e1:	jbe    0x6501f4c4
6501f4e3:	cmp    eax,0xffffffff
6501f4e6:	jne    0x6501f4ec
6501f4e8:	or     eax,eax
6501f4ea:	jmp    0x6501f4f7
6501f4ec:	xor    ecx,ecx
6501f4ee:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501f4f2:	sete   cl
6501f4f5:	sub    eax,ecx
6501f4f7:	mov    esi,DWORD PTR [ebp+0x14]
6501f4fa:	lea    ecx,[ebp-0x2c]
6501f4fd:	push   ecx
6501f4fe:	mov    ecx,DWORD PTR [ebp-0x28]
6501f501:	add    ecx,esi
6501f503:	push   ecx
6501f504:	push   eax
6501f505:	xor    eax,eax
6501f507:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501f50b:	sete   al
6501f50e:	add    eax,edi
6501f510:	push   eax
6501f511:	call   0x6501f8f9
6501f516:	add    esp,0x10
6501f519:	cmp    eax,ebx
6501f51b:	je     0x6501f521
6501f51d:	mov    BYTE PTR [edi],bl
6501f51f:	jmp    0x6501f536
6501f521:	push   DWORD PTR [ebp+0x18]
6501f524:	lea    eax,[ebp-0x2c]
6501f527:	push   ebx
6501f528:	push   esi
6501f529:	push   DWORD PTR [ebp+0x10]
6501f52c:	mov    ecx,edi
6501f52e:	call   0x6501f397
6501f533:	add    esp,0x10
6501f536:	mov    ecx,DWORD PTR [ebp-0x4]
6501f539:	pop    edi
6501f53a:	pop    esi
6501f53b:	xor    ecx,ebp
6501f53d:	pop    ebx
6501f53e:	call   0x650127bc
6501f543:	leave  
6501f544:	ret    
6501f545:	push   ebp
6501f546:	mov    ebp,esp
6501f548:	sub    esp,0x30
6501f54b:	mov    eax,ds:0x6502c09c
6501f550:	xor    eax,ebp
6501f552:	mov    DWORD PTR [ebp-0x4],eax
6501f555:	mov    eax,DWORD PTR [ebp+0x8]
6501f558:	push   ebx
6501f559:	push   esi
6501f55a:	mov    esi,DWORD PTR [ebp+0xc]
6501f55d:	push   edi
6501f55e:	push   0x16
6501f560:	pop    edi
6501f561:	push   edi
6501f562:	lea    ecx,[ebp-0x1c]
6501f565:	push   ecx
6501f566:	lea    ecx,[ebp-0x30]
6501f569:	push   ecx
6501f56a:	push   DWORD PTR [eax+0x4]
6501f56d:	push   DWORD PTR [eax]
6501f56f:	call   0x6501fa71
6501f574:	xor    ebx,ebx
6501f576:	add    esp,0x14
6501f579:	cmp    esi,ebx
6501f57b:	jne    0x6501f598
6501f57d:	call   0x65014400
6501f582:	push   ebx
6501f583:	push   ebx
6501f584:	push   ebx
6501f585:	push   ebx
6501f586:	push   ebx
6501f587:	mov    DWORD PTR [eax],edi
6501f589:	call   0x650122af
6501f58e:	add    esp,0x14
6501f591:	mov    eax,edi
6501f593:	jmp    0x6501f62e
6501f598:	mov    ecx,DWORD PTR [ebp+0x10]
6501f59b:	cmp    ecx,ebx
6501f59d:	jbe    0x6501f57d
6501f59f:	mov    eax,DWORD PTR [ebp-0x2c]
6501f5a2:	dec    eax
6501f5a3:	mov    DWORD PTR [ebp-0x20],eax
6501f5a6:	xor    eax,eax
6501f5a8:	cmp    DWORD PTR [ebp-0x30],0x2d
6501f5ac:	sete   al
6501f5af:	cmp    ecx,0xffffffff
6501f5b2:	lea    edi,[eax+esi*1]
6501f5b5:	jne    0x6501f5bb
6501f5b7:	or     ecx,ecx
6501f5b9:	jmp    0x6501f5bd
6501f5bb:	sub    ecx,eax
6501f5bd:	lea    eax,[ebp-0x30]
6501f5c0:	push   eax
6501f5c1:	push   DWORD PTR [ebp+0x14]
6501f5c4:	push   ecx
6501f5c5:	push   edi
6501f5c6:	call   0x6501f8f9
6501f5cb:	add    esp,0x10
6501f5ce:	cmp    eax,ebx
6501f5d0:	je     0x6501f5d6
6501f5d2:	mov    BYTE PTR [esi],bl
6501f5d4:	jmp    0x6501f62e
6501f5d6:	mov    eax,DWORD PTR [ebp-0x2c]
6501f5d9:	dec    eax
6501f5da:	cmp    DWORD PTR [ebp-0x20],eax
6501f5dd:	setl   cl
6501f5e0:	cmp    eax,0xfffffffc
6501f5e3:	jl     0x6501f612
6501f5e5:	cmp    eax,DWORD PTR [ebp+0x14]
6501f5e8:	jge    0x6501f612
6501f5ea:	cmp    cl,bl
6501f5ec:	je     0x6501f5f8
6501f5ee:	mov    al,BYTE PTR [edi]
6501f5f0:	inc    edi
6501f5f1:	test   al,al
6501f5f3:	jne    0x6501f5ee
6501f5f5:	mov    BYTE PTR [edi-0x2],bl
6501f5f8:	push   DWORD PTR [ebp+0x1c]
6501f5fb:	lea    eax,[ebp-0x30]
6501f5fe:	push   0x1
6501f600:	push   DWORD PTR [ebp+0x14]
6501f603:	mov    ecx,esi
6501f605:	push   DWORD PTR [ebp+0x10]
6501f608:	call   0x6501f397
6501f60d:	add    esp,0x10
6501f610:	jmp    0x6501f62e
6501f612:	push   DWORD PTR [ebp+0x1c]
6501f615:	lea    eax,[ebp-0x30]
6501f618:	push   0x1
6501f61a:	push   eax
6501f61b:	push   DWORD PTR [ebp+0x18]
6501f61e:	mov    eax,esi
6501f620:	push   DWORD PTR [ebp+0x14]
6501f623:	push   DWORD PTR [ebp+0x10]
6501f626:	call   0x6501edcd
6501f62b:	add    esp,0x18
6501f62e:	mov    ecx,DWORD PTR [ebp-0x4]
6501f631:	pop    edi
6501f632:	pop    esi
6501f633:	xor    ecx,ebp
6501f635:	pop    ebx
6501f636:	call   0x650127bc
6501f63b:	leave  
6501f63c:	ret    
6501f63d:	push   ebp
6501f63e:	mov    ebp,esp
6501f640:	mov    eax,DWORD PTR [ebp+0x14]
6501f643:	cmp    eax,0x65
6501f646:	je     0x6501f6a7
6501f648:	cmp    eax,0x45
6501f64b:	je     0x6501f6a7
6501f64d:	cmp    eax,0x66
6501f650:	jne    0x6501f66b
6501f652:	push   DWORD PTR [ebp+0x20]
6501f655:	push   DWORD PTR [ebp+0x18]
6501f658:	push   DWORD PTR [ebp+0x10]
6501f65b:	push   DWORD PTR [ebp+0xc]
6501f65e:	push   DWORD PTR [ebp+0x8]
6501f661:	call   0x6501f48c
6501f666:	add    esp,0x14
6501f669:	pop    ebp
6501f66a:	ret    
6501f66b:	cmp    eax,0x61
6501f66e:	je     0x6501f68e
6501f670:	cmp    eax,0x41
6501f673:	je     0x6501f68e
6501f675:	push   DWORD PTR [ebp+0x20]
6501f678:	push   DWORD PTR [ebp+0x1c]
6501f67b:	push   DWORD PTR [ebp+0x18]
6501f67e:	push   DWORD PTR [ebp+0x10]
6501f681:	push   DWORD PTR [ebp+0xc]
6501f684:	push   DWORD PTR [ebp+0x8]
6501f687:	call   0x6501f545
6501f68c:	jmp    0x6501f6be
6501f68e:	push   DWORD PTR [ebp+0x20]
6501f691:	push   DWORD PTR [ebp+0x1c]
6501f694:	push   DWORD PTR [ebp+0x18]
6501f697:	push   DWORD PTR [ebp+0x10]
6501f69a:	push   DWORD PTR [ebp+0xc]
6501f69d:	push   DWORD PTR [ebp+0x8]
6501f6a0:	call   0x6501f026
6501f6a5:	jmp    0x6501f6be
6501f6a7:	push   DWORD PTR [ebp+0x20]
6501f6aa:	push   DWORD PTR [ebp+0x1c]
6501f6ad:	push   DWORD PTR [ebp+0x18]
6501f6b0:	push   DWORD PTR [ebp+0x10]
6501f6b3:	push   DWORD PTR [ebp+0xc]
6501f6b6:	push   DWORD PTR [ebp+0x8]
6501f6b9:	call   0x6501ef3a
6501f6be:	add    esp,0x18
6501f6c1:	pop    ebp
6501f6c2:	ret    
6501f6c3:	push   ebp
6501f6c4:	mov    ebp,esp
6501f6c6:	push   0x0
6501f6c8:	push   DWORD PTR [ebp+0x1c]
6501f6cb:	push   DWORD PTR [ebp+0x18]
6501f6ce:	push   DWORD PTR [ebp+0x14]
6501f6d1:	push   DWORD PTR [ebp+0x10]
6501f6d4:	push   DWORD PTR [ebp+0xc]
6501f6d7:	push   DWORD PTR [ebp+0x8]
6501f6da:	call   0x6501f63d
6501f6df:	add    esp,0x1c
6501f6e2:	pop    ebp
6501f6e3:	ret    
6501f6e4:	push   esi
6501f6e5:	push   0x30000
6501f6ea:	push   0x10000
6501f6ef:	xor    esi,esi
6501f6f1:	push   esi
6501f6f2:	call   0x6501fbff
6501f6f7:	add    esp,0xc
6501f6fa:	test   eax,eax
6501f6fc:	je     0x6501f70b
6501f6fe:	push   esi
6501f6ff:	push   esi
6501f700:	push   esi
6501f701:	push   esi
6501f702:	push   esi
6501f703:	call   0x650121b3
6501f708:	add    esp,0x14
6501f70b:	pop    esi
6501f70c:	ret    
6501f70d:	push   ebp
6501f70e:	mov    ebp,esp
6501f710:	sub    esp,0x18
6501f713:	fld    QWORD PTR ds:0x650265d0
6501f719:	fstp   QWORD PTR [ebp-0x10]
6501f71c:	fld    QWORD PTR ds:0x650265c8
6501f722:	fstp   QWORD PTR [ebp-0x18]
6501f725:	fld    QWORD PTR [ebp-0x18]
6501f728:	fdiv   QWORD PTR [ebp-0x10]
6501f72b:	fmul   QWORD PTR [ebp-0x10]
6501f72e:	fsubr  QWORD PTR [ebp-0x18]
6501f731:	fstp   QWORD PTR [ebp-0x8]
6501f734:	fld1   
6501f736:	fcomp  QWORD PTR [ebp-0x8]
6501f739:	fnstsw ax
6501f73b:	test   ah,0x5
6501f73e:	jp     0x6501f745
6501f740:	xor    eax,eax
6501f742:	inc    eax
6501f743:	leave  
6501f744:	ret    
6501f745:	xor    eax,eax
6501f747:	leave  
6501f748:	ret    
6501f749:	push   0x650265f4
6501f74e:	call   DWORD PTR ds:0x65024124
6501f754:	test   eax,eax
6501f756:	je     0x6501f76d
6501f758:	push   0x650265d8
6501f75d:	push   eax
6501f75e:	call   DWORD PTR ds:0x65024014
6501f764:	test   eax,eax
6501f766:	je     0x6501f76d
6501f768:	push   0x0
6501f76a:	call   eax
6501f76c:	ret    
6501f76d:	jmp    0x6501f70d
6501f772:	int3   
6501f773:	int3   
6501f774:	int3   
6501f775:	int3   
6501f776:	int3   
6501f777:	int3   
6501f778:	int3   
6501f779:	int3   
6501f77a:	int3   
6501f77b:	int3   
6501f77c:	int3   
6501f77d:	int3   
6501f77e:	int3   
6501f77f:	int3   
6501f780:	push   ebp
6501f781:	mov    ebp,esp
6501f783:	push   edi
6501f784:	mov    edi,DWORD PTR [ebp+0x8]
6501f787:	xor    eax,eax
6501f789:	or     ecx,0xffffffff
6501f78c:	repnz scas al,BYTE PTR es:[edi]
6501f78e:	add    ecx,0x1
6501f791:	neg    ecx
6501f793:	sub    edi,0x1
6501f796:	mov    al,BYTE PTR [ebp+0xc]
6501f799:	std    
6501f79a:	repnz scas al,BYTE PTR es:[edi]
6501f79c:	add    edi,0x1
6501f79f:	cmp    BYTE PTR [edi],al
6501f7a1:	je     0x6501f7a7
6501f7a3:	xor    eax,eax
6501f7a5:	jmp    0x6501f7a9
6501f7a7:	mov    eax,edi
6501f7a9:	cld    
6501f7aa:	pop    edi
6501f7ab:	leave  
6501f7ac:	ret    
6501f7ad:	push   ebp
6501f7ae:	mov    ebp,esp
6501f7b0:	sub    esp,0x28
6501f7b3:	mov    eax,ds:0x6502c09c
6501f7b8:	xor    eax,ebp
6501f7ba:	mov    DWORD PTR [ebp-0x4],eax
6501f7bd:	push   ebx
6501f7be:	push   esi
6501f7bf:	mov    esi,DWORD PTR [ebp+0x8]
6501f7c2:	push   edi
6501f7c3:	push   DWORD PTR [ebp+0x10]
6501f7c6:	mov    edi,DWORD PTR [ebp+0xc]
6501f7c9:	lea    ecx,[ebp-0x24]
6501f7cc:	call   0x6501295f
6501f7d1:	lea    eax,[ebp-0x24]
6501f7d4:	push   eax
6501f7d5:	xor    ebx,ebx
6501f7d7:	push   ebx
6501f7d8:	push   ebx
6501f7d9:	push   ebx
6501f7da:	push   ebx
6501f7db:	push   edi
6501f7dc:	lea    eax,[ebp-0x28]
6501f7df:	push   eax
6501f7e0:	lea    eax,[ebp-0x10]
6501f7e3:	push   eax
6501f7e4:	call   0x650206ed
6501f7e9:	mov    DWORD PTR [ebp-0x14],eax
6501f7ec:	lea    eax,[ebp-0x10]
6501f7ef:	push   esi
6501f7f0:	push   eax
6501f7f1:	call   0x6501fc69
6501f7f6:	add    esp,0x28
6501f7f9:	test   BYTE PTR [ebp-0x14],0x3
6501f7fd:	jne    0x6501f82a
6501f7ff:	cmp    eax,0x1
6501f802:	jne    0x6501f815
6501f804:	cmp    BYTE PTR [ebp-0x18],bl
6501f807:	je     0x6501f810
6501f809:	mov    eax,DWORD PTR [ebp-0x1c]
6501f80c:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f810:	push   0x3
6501f812:	pop    eax
6501f813:	jmp    0x6501f844
6501f815:	cmp    eax,0x2
6501f818:	jne    0x6501f836
6501f81a:	cmp    BYTE PTR [ebp-0x18],bl
6501f81d:	je     0x6501f826
6501f81f:	mov    eax,DWORD PTR [ebp-0x1c]
6501f822:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f826:	push   0x4
6501f828:	jmp    0x6501f812
6501f82a:	test   BYTE PTR [ebp-0x14],0x1
6501f82e:	jne    0x6501f81a
6501f830:	test   BYTE PTR [ebp-0x14],0x2
6501f834:	jne    0x6501f804
6501f836:	cmp    BYTE PTR [ebp-0x18],bl
6501f839:	je     0x6501f842
6501f83b:	mov    eax,DWORD PTR [ebp-0x1c]
6501f83e:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f842:	xor    eax,eax
6501f844:	mov    ecx,DWORD PTR [ebp-0x4]
6501f847:	pop    edi
6501f848:	pop    esi
6501f849:	xor    ecx,ebp
6501f84b:	pop    ebx
6501f84c:	call   0x650127bc
6501f851:	leave  
6501f852:	ret    
6501f853:	push   ebp
6501f854:	mov    ebp,esp
6501f856:	sub    esp,0x28
6501f859:	mov    eax,ds:0x6502c09c
6501f85e:	xor    eax,ebp
6501f860:	mov    DWORD PTR [ebp-0x4],eax
6501f863:	push   ebx
6501f864:	push   esi
6501f865:	mov    esi,DWORD PTR [ebp+0x8]
6501f868:	push   edi
6501f869:	push   DWORD PTR [ebp+0x10]
6501f86c:	mov    edi,DWORD PTR [ebp+0xc]
6501f86f:	lea    ecx,[ebp-0x24]
6501f872:	call   0x6501295f
6501f877:	lea    eax,[ebp-0x24]
6501f87a:	push   eax
6501f87b:	xor    ebx,ebx
6501f87d:	push   ebx
6501f87e:	push   ebx
6501f87f:	push   ebx
6501f880:	push   ebx
6501f881:	push   edi
6501f882:	lea    eax,[ebp-0x28]
6501f885:	push   eax
6501f886:	lea    eax,[ebp-0x10]
6501f889:	push   eax
6501f88a:	call   0x650206ed
6501f88f:	mov    DWORD PTR [ebp-0x14],eax
6501f892:	lea    eax,[ebp-0x10]
6501f895:	push   esi
6501f896:	push   eax
6501f897:	call   0x650201ab
6501f89c:	add    esp,0x28
6501f89f:	test   BYTE PTR [ebp-0x14],0x3
6501f8a3:	jne    0x6501f8d0
6501f8a5:	cmp    eax,0x1
6501f8a8:	jne    0x6501f8bb
6501f8aa:	cmp    BYTE PTR [ebp-0x18],bl
6501f8ad:	je     0x6501f8b6
6501f8af:	mov    eax,DWORD PTR [ebp-0x1c]
6501f8b2:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f8b6:	push   0x3
6501f8b8:	pop    eax
6501f8b9:	jmp    0x6501f8ea
6501f8bb:	cmp    eax,0x2
6501f8be:	jne    0x6501f8dc
6501f8c0:	cmp    BYTE PTR [ebp-0x18],bl
6501f8c3:	je     0x6501f8cc
6501f8c5:	mov    eax,DWORD PTR [ebp-0x1c]
6501f8c8:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f8cc:	push   0x4
6501f8ce:	jmp    0x6501f8b8
6501f8d0:	test   BYTE PTR [ebp-0x14],0x1
6501f8d4:	jne    0x6501f8c0
6501f8d6:	test   BYTE PTR [ebp-0x14],0x2
6501f8da:	jne    0x6501f8aa
6501f8dc:	cmp    BYTE PTR [ebp-0x18],bl
6501f8df:	je     0x6501f8e8
6501f8e1:	mov    eax,DWORD PTR [ebp-0x1c]
6501f8e4:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f8e8:	xor    eax,eax
6501f8ea:	mov    ecx,DWORD PTR [ebp-0x4]
6501f8ed:	pop    edi
6501f8ee:	pop    esi
6501f8ef:	xor    ecx,ebp
6501f8f1:	pop    ebx
6501f8f2:	call   0x650127bc
6501f8f7:	leave  
6501f8f8:	ret    
6501f8f9:	push   ebp
6501f8fa:	mov    ebp,esp
6501f8fc:	mov    ecx,DWORD PTR [ebp+0x14]
6501f8ff:	push   ebx
6501f900:	push   esi
6501f901:	mov    esi,DWORD PTR [ebp+0x8]
6501f904:	xor    ebx,ebx
6501f906:	cmp    esi,ebx
6501f908:	push   edi
6501f909:	mov    edi,DWORD PTR [ecx+0xc]
6501f90c:	jne    0x6501f92c
6501f90e:	call   0x65014400
6501f913:	push   0x16
6501f915:	pop    esi
6501f916:	mov    DWORD PTR [eax],esi
6501f918:	push   ebx
6501f919:	push   ebx
6501f91a:	push   ebx
6501f91b:	push   ebx
6501f91c:	push   ebx
6501f91d:	call   0x650122af
6501f922:	add    esp,0x14
6501f925:	mov    eax,esi
6501f927:	jmp    0x6501f9b1
6501f92c:	cmp    DWORD PTR [ebp+0xc],ebx
6501f92f:	jbe    0x6501f90e
6501f931:	mov    edx,DWORD PTR [ebp+0x10]
6501f934:	cmp    edx,ebx
6501f936:	mov    BYTE PTR [esi],bl
6501f938:	jle    0x6501f93e
6501f93a:	mov    eax,edx
6501f93c:	jmp    0x6501f940
6501f93e:	xor    eax,eax
6501f940:	inc    eax
6501f941:	cmp    DWORD PTR [ebp+0xc],eax
6501f944:	ja     0x6501f954
6501f946:	call   0x65014400
6501f94b:	push   0x22
6501f94d:	pop    ecx
6501f94e:	mov    DWORD PTR [eax],ecx
6501f950:	mov    esi,ecx
6501f952:	jmp    0x6501f918
6501f954:	cmp    edx,ebx
6501f956:	mov    BYTE PTR [esi],0x30
6501f959:	lea    eax,[esi+0x1]
6501f95c:	jle    0x6501f978
6501f95e:	mov    cl,BYTE PTR [edi]
6501f960:	cmp    cl,bl
6501f962:	je     0x6501f96a
6501f964:	movsx  ecx,cl
6501f967:	inc    edi
6501f968:	jmp    0x6501f96d
6501f96a:	push   0x30
6501f96c:	pop    ecx
6501f96d:	mov    BYTE PTR [eax],cl
6501f96f:	inc    eax
6501f970:	dec    edx
6501f971:	cmp    edx,ebx
6501f973:	jg     0x6501f95e
6501f975:	mov    ecx,DWORD PTR [ebp+0x14]
6501f978:	cmp    edx,ebx
6501f97a:	mov    BYTE PTR [eax],bl
6501f97c:	jl     0x6501f990
6501f97e:	cmp    BYTE PTR [edi],0x35
6501f981:	jl     0x6501f990
6501f983:	jmp    0x6501f988
6501f985:	mov    BYTE PTR [eax],0x30
6501f988:	dec    eax
6501f989:	cmp    BYTE PTR [eax],0x39
6501f98c:	je     0x6501f985
6501f98e:	inc    BYTE PTR [eax]
6501f990:	cmp    BYTE PTR [esi],0x31
6501f993:	jne    0x6501f99a
6501f995:	inc    DWORD PTR [ecx+0x4]
6501f998:	jmp    0x6501f9af
6501f99a:	lea    edi,[esi+0x1]
6501f99d:	push   edi
6501f99e:	call   0x65013f00
6501f9a3:	inc    eax
6501f9a4:	push   eax
6501f9a5:	push   edi
6501f9a6:	push   esi
6501f9a7:	call   0x65013780
6501f9ac:	add    esp,0x10
6501f9af:	xor    eax,eax
6501f9b1:	pop    edi
6501f9b2:	pop    esi
6501f9b3:	pop    ebx
6501f9b4:	pop    ebp
6501f9b5:	ret    
6501f9b6:	push   ebp
6501f9b7:	mov    ebp,esp
6501f9b9:	push   ecx
6501f9ba:	mov    edx,DWORD PTR [ebp+0xc]
6501f9bd:	movzx  eax,WORD PTR [edx+0x6]
6501f9c1:	push   ebx
6501f9c2:	mov    ecx,eax
6501f9c4:	push   esi
6501f9c5:	push   edi
6501f9c6:	shr    ecx,0x4
6501f9c9:	and    eax,0x8000
6501f9ce:	mov    edi,0x7ff
6501f9d3:	and    ecx,edi
6501f9d5:	mov    DWORD PTR [ebp+0xc],eax
6501f9d8:	mov    eax,DWORD PTR [edx+0x4]
6501f9db:	mov    edx,DWORD PTR [edx]
6501f9dd:	movzx  ebx,cx
6501f9e0:	mov    esi,0x80000000
6501f9e5:	and    eax,0xfffff
6501f9ea:	test   ebx,ebx
6501f9ec:	mov    DWORD PTR [ebp-0x4],esi
6501f9ef:	je     0x6501fa04
6501f9f1:	cmp    ebx,edi
6501f9f3:	je     0x6501f9fd
6501f9f5:	add    ecx,0x3c00
6501f9fb:	jmp    0x6501fa25
6501f9fd:	mov    edi,0x7fff
6501fa02:	jmp    0x6501fa28
6501fa04:	xor    ebx,ebx
6501fa06:	cmp    eax,ebx
6501fa08:	jne    0x6501fa1c
6501fa0a:	cmp    edx,ebx
6501fa0c:	jne    0x6501fa1c
6501fa0e:	mov    eax,DWORD PTR [ebp+0x8]
6501fa11:	mov    cx,WORD PTR [ebp+0xc]
6501fa15:	mov    DWORD PTR [eax+0x4],ebx
6501fa18:	mov    DWORD PTR [eax],ebx
6501fa1a:	jmp    0x6501fa68
6501fa1c:	add    ecx,0x3c01
6501fa22:	mov    DWORD PTR [ebp-0x4],ebx
6501fa25:	movzx  edi,cx
6501fa28:	mov    ecx,edx
6501fa2a:	shr    ecx,0x15
6501fa2d:	shl    eax,0xb
6501fa30:	or     ecx,eax
6501fa32:	or     ecx,DWORD PTR [ebp-0x4]
6501fa35:	mov    eax,DWORD PTR [ebp+0x8]
6501fa38:	shl    edx,0xb
6501fa3b:	test   esi,ecx
6501fa3d:	mov    DWORD PTR [eax+0x4],ecx
6501fa40:	mov    DWORD PTR [eax],edx
6501fa42:	jne    0x6501fa63
6501fa44:	mov    ecx,DWORD PTR [eax]
6501fa46:	mov    edx,DWORD PTR [eax+0x4]
6501fa49:	mov    ebx,ecx
6501fa4b:	add    edx,edx
6501fa4d:	shr    ebx,0x1f
6501fa50:	or     edx,ebx
6501fa52:	add    ecx,ecx
6501fa54:	add    edi,0xffff
6501fa5a:	test   esi,edx
6501fa5c:	mov    DWORD PTR [eax+0x4],edx
6501fa5f:	mov    DWORD PTR [eax],ecx
6501fa61:	je     0x6501fa44
6501fa63:	mov    ecx,DWORD PTR [ebp+0xc]
6501fa66:	or     ecx,edi
6501fa68:	pop    edi
6501fa69:	pop    esi
6501fa6a:	mov    WORD PTR [eax+0x8],cx
6501fa6e:	pop    ebx
6501fa6f:	leave  
6501fa70:	ret    
6501fa71:	push   ebp
6501fa72:	mov    ebp,esp
6501fa74:	sub    esp,0x30
6501fa77:	mov    eax,ds:0x6502c09c
6501fa7c:	xor    eax,ebp
6501fa7e:	mov    DWORD PTR [ebp-0x4],eax
6501fa81:	mov    eax,DWORD PTR [ebp+0x14]
6501fa84:	push   ebx
6501fa85:	mov    ebx,DWORD PTR [ebp+0x10]
6501fa88:	push   esi
6501fa89:	mov    DWORD PTR [ebp-0x30],eax
6501fa8c:	push   edi
6501fa8d:	lea    eax,[ebp+0x8]
6501fa90:	push   eax
6501fa91:	lea    eax,[ebp-0x10]
6501fa94:	push   eax
6501fa95:	call   0x6501f9b6
6501fa9a:	pop    ecx
6501fa9b:	pop    ecx
6501fa9c:	lea    eax,[ebp-0x2c]
6501fa9f:	push   eax
6501faa0:	push   0x0
6501faa2:	push   0x11
6501faa4:	sub    esp,0xc
6501faa7:	lea    esi,[ebp-0x10]
6501faaa:	mov    edi,esp
6501faac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501faad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501faae:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6501fab0:	call   0x65020dad
6501fab5:	mov    esi,DWORD PTR [ebp-0x30]
6501fab8:	mov    DWORD PTR [ebx+0x8],eax
6501fabb:	movsx  eax,BYTE PTR [ebp-0x2a]
6501fabf:	mov    DWORD PTR [ebx],eax
6501fac1:	movsx  eax,WORD PTR [ebp-0x2c]
6501fac5:	mov    DWORD PTR [ebx+0x4],eax
6501fac8:	lea    eax,[ebp-0x28]
6501facb:	push   eax
6501facc:	push   DWORD PTR [ebp+0x18]
6501facf:	push   esi
6501fad0:	call   0x65013ff4
6501fad5:	add    esp,0x24
6501fad8:	test   eax,eax
6501fada:	je     0x6501faeb
6501fadc:	xor    eax,eax
6501fade:	push   eax
6501fadf:	push   eax
6501fae0:	push   eax
6501fae1:	push   eax
6501fae2:	push   eax
6501fae3:	call   0x650121b3
6501fae8:	add    esp,0x14
6501faeb:	mov    ecx,DWORD PTR [ebp-0x4]
6501faee:	pop    edi
6501faef:	mov    DWORD PTR [ebx+0xc],esi
6501faf2:	pop    esi
6501faf3:	mov    eax,ebx
6501faf5:	xor    ecx,ebp
6501faf7:	pop    ebx
6501faf8:	call   0x650127bc
6501fafd:	leave  
6501fafe:	ret    
6501faff:	int3   
6501fb00:	push   edi
6501fb01:	push   esi
6501fb02:	push   ebp
6501fb03:	xor    edi,edi
6501fb05:	xor    ebp,ebp
6501fb07:	mov    eax,DWORD PTR [esp+0x14]
6501fb0b:	or     eax,eax
6501fb0d:	jge    0x6501fb24
6501fb0f:	inc    edi
6501fb10:	inc    ebp
6501fb11:	mov    edx,DWORD PTR [esp+0x10]
6501fb15:	neg    eax
6501fb17:	neg    edx
6501fb19:	sbb    eax,0x0
6501fb1c:	mov    DWORD PTR [esp+0x14],eax
6501fb20:	mov    DWORD PTR [esp+0x10],edx
6501fb24:	mov    eax,DWORD PTR [esp+0x1c]
6501fb28:	or     eax,eax
6501fb2a:	jge    0x6501fb40
6501fb2c:	inc    edi
6501fb2d:	mov    edx,DWORD PTR [esp+0x18]
6501fb31:	neg    eax
6501fb33:	neg    edx
6501fb35:	sbb    eax,0x0
6501fb38:	mov    DWORD PTR [esp+0x1c],eax
6501fb3c:	mov    DWORD PTR [esp+0x18],edx
6501fb40:	or     eax,eax
6501fb42:	jne    0x6501fb6c
6501fb44:	mov    ecx,DWORD PTR [esp+0x18]
6501fb48:	mov    eax,DWORD PTR [esp+0x14]
6501fb4c:	xor    edx,edx
6501fb4e:	div    ecx
6501fb50:	mov    ebx,eax
6501fb52:	mov    eax,DWORD PTR [esp+0x10]
6501fb56:	div    ecx
6501fb58:	mov    esi,eax
6501fb5a:	mov    eax,ebx
6501fb5c:	mul    DWORD PTR [esp+0x18]
6501fb60:	mov    ecx,eax
6501fb62:	mov    eax,esi
6501fb64:	mul    DWORD PTR [esp+0x18]
6501fb68:	add    edx,ecx
6501fb6a:	jmp    0x6501fbb3
6501fb6c:	mov    ebx,eax
6501fb6e:	mov    ecx,DWORD PTR [esp+0x18]
6501fb72:	mov    edx,DWORD PTR [esp+0x14]
6501fb76:	mov    eax,DWORD PTR [esp+0x10]
6501fb7a:	shr    ebx,1
6501fb7c:	rcr    ecx,1
6501fb7e:	shr    edx,1
6501fb80:	rcr    eax,1
6501fb82:	or     ebx,ebx
6501fb84:	jne    0x6501fb7a
6501fb86:	div    ecx
6501fb88:	mov    esi,eax
6501fb8a:	mul    DWORD PTR [esp+0x1c]
6501fb8e:	mov    ecx,eax
6501fb90:	mov    eax,DWORD PTR [esp+0x18]
6501fb94:	mul    esi
6501fb96:	add    edx,ecx
6501fb98:	jb     0x6501fba8
6501fb9a:	cmp    edx,DWORD PTR [esp+0x14]
6501fb9e:	ja     0x6501fba8
6501fba0:	jb     0x6501fbb1
6501fba2:	cmp    eax,DWORD PTR [esp+0x10]
6501fba6:	jbe    0x6501fbb1
6501fba8:	dec    esi
6501fba9:	sub    eax,DWORD PTR [esp+0x18]
6501fbad:	sbb    edx,DWORD PTR [esp+0x1c]
6501fbb1:	xor    ebx,ebx
6501fbb3:	sub    eax,DWORD PTR [esp+0x10]
6501fbb7:	sbb    edx,DWORD PTR [esp+0x14]
6501fbbb:	dec    ebp
6501fbbc:	jns    0x6501fbc5
6501fbbe:	neg    edx
6501fbc0:	neg    eax
6501fbc2:	sbb    edx,0x0
6501fbc5:	mov    ecx,edx
6501fbc7:	mov    edx,ebx
6501fbc9:	mov    ebx,ecx
6501fbcb:	mov    ecx,eax
6501fbcd:	mov    eax,esi
6501fbcf:	dec    edi
6501fbd0:	jne    0x6501fbd9
6501fbd2:	neg    edx
6501fbd4:	neg    eax
6501fbd6:	sbb    edx,0x0
6501fbd9:	pop    ebp
6501fbda:	pop    esi
6501fbdb:	pop    edi
6501fbdc:	ret    0x10
6501fbdf:	int3   
6501fbe0:	cmp    cl,0x40
6501fbe3:	jae    0x6501fbfa
6501fbe5:	cmp    cl,0x20
6501fbe8:	jae    0x6501fbf0
6501fbea:	shrd   eax,edx,cl
6501fbed:	shr    edx,cl
6501fbef:	ret    
6501fbf0:	mov    eax,edx
6501fbf2:	xor    edx,edx
6501fbf4:	and    cl,0x1f
6501fbf7:	shr    eax,cl
6501fbf9:	ret    
6501fbfa:	xor    eax,eax
6501fbfc:	xor    edx,edx
6501fbfe:	ret    
6501fbff:	push   ebp
6501fc00:	mov    ebp,esp
6501fc02:	mov    eax,DWORD PTR [ebp+0x10]
6501fc05:	mov    ecx,DWORD PTR [ebp+0xc]
6501fc08:	and    eax,0xfff7ffff
6501fc0d:	and    ecx,eax
6501fc0f:	test   ecx,0xfcf0fce0
6501fc15:	push   esi
6501fc16:	je     0x6501fc49
6501fc18:	push   edi
6501fc19:	mov    edi,DWORD PTR [ebp+0x8]
6501fc1c:	xor    esi,esi
6501fc1e:	cmp    edi,esi
6501fc20:	je     0x6501fc2d
6501fc22:	push   esi
6501fc23:	push   esi
6501fc24:	call   0x650217a1
6501fc29:	pop    ecx
6501fc2a:	pop    ecx
6501fc2b:	mov    DWORD PTR [edi],eax
6501fc2d:	call   0x65014400
6501fc32:	push   0x16
6501fc34:	pop    edi
6501fc35:	push   esi
6501fc36:	push   esi
6501fc37:	push   esi
6501fc38:	push   esi
6501fc39:	push   esi
6501fc3a:	mov    DWORD PTR [eax],edi
6501fc3c:	call   0x650122af
6501fc41:	add    esp,0x14
6501fc44:	mov    eax,edi
6501fc46:	pop    edi
6501fc47:	jmp    0x6501fc66
6501fc49:	mov    esi,DWORD PTR [ebp+0x8]
6501fc4c:	test   esi,esi
6501fc4e:	push   eax
6501fc4f:	push   DWORD PTR [ebp+0xc]
6501fc52:	je     0x6501fc5d
6501fc54:	call   0x650217a1
6501fc59:	mov    DWORD PTR [esi],eax
6501fc5b:	jmp    0x6501fc62
6501fc5d:	call   0x650217a1
6501fc62:	pop    ecx
6501fc63:	pop    ecx
6501fc64:	xor    eax,eax
6501fc66:	pop    esi
6501fc67:	pop    ebp
6501fc68:	ret    
6501fc69:	push   ebp
6501fc6a:	mov    ebp,esp
6501fc6c:	sub    esp,0x2c
6501fc6f:	mov    eax,DWORD PTR [ebp+0x8]
6501fc72:	movzx  ecx,WORD PTR [eax+0xa]
6501fc76:	push   ebx
6501fc77:	mov    ebx,ecx
6501fc79:	and    ecx,0x8000
6501fc7f:	mov    DWORD PTR [ebp-0x14],ecx
6501fc82:	mov    ecx,DWORD PTR [eax+0x6]
6501fc85:	mov    DWORD PTR [ebp-0x20],ecx
6501fc88:	mov    ecx,DWORD PTR [eax+0x2]
6501fc8b:	movzx  eax,WORD PTR [eax]
6501fc8e:	and    ebx,0x7fff
6501fc94:	sub    ebx,0x3fff
6501fc9a:	shl    eax,0x10
6501fc9d:	cmp    ebx,0xffffc001
6501fca3:	push   edi
6501fca4:	mov    DWORD PTR [ebp-0x1c],ecx
6501fca7:	mov    DWORD PTR [ebp-0x18],eax
6501fcaa:	jne    0x6501fcd3
6501fcac:	xor    ebx,ebx
6501fcae:	xor    eax,eax
6501fcb0:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6501fcb4:	jne    0x6501fcc3
6501fcb6:	inc    eax
6501fcb7:	cmp    eax,0x3
6501fcba:	jl     0x6501fcb0
6501fcbc:	xor    eax,eax
6501fcbe:	jmp    0x65020168
6501fcc3:	xor    eax,eax
6501fcc5:	lea    edi,[ebp-0x20]
6501fcc8:	stos   DWORD PTR es:[edi],eax
6501fcc9:	stos   DWORD PTR es:[edi],eax
6501fcca:	push   0x2
6501fccc:	stos   DWORD PTR es:[edi],eax
6501fccd:	pop    eax
6501fcce:	jmp    0x65020168
6501fcd3:	and    DWORD PTR [ebp+0x8],0x0
6501fcd7:	push   esi
6501fcd8:	lea    esi,[ebp-0x20]
6501fcdb:	lea    edi,[ebp-0x2c]
6501fcde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fcdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fce1:	mov    esi,DWORD PTR ds:0x6502d078
6501fce7:	dec    esi
6501fce8:	lea    ecx,[esi+0x1]
6501fceb:	mov    eax,ecx
6501fced:	cdq    
6501fcee:	and    edx,0x1f
6501fcf1:	add    eax,edx
6501fcf3:	sar    eax,0x5
6501fcf6:	mov    edx,ecx
6501fcf8:	and    edx,0x8000001f
6501fcfe:	mov    DWORD PTR [ebp-0x10],ebx
6501fd01:	mov    DWORD PTR [ebp-0xc],eax
6501fd04:	jns    0x6501fd0b
6501fd06:	dec    edx
6501fd07:	or     edx,0xffffffe0
6501fd0a:	inc    edx
6501fd0b:	lea    edi,[ebp+eax*4-0x20]
6501fd0f:	push   0x1f
6501fd11:	xor    eax,eax
6501fd13:	pop    ecx
6501fd14:	sub    ecx,edx
6501fd16:	inc    eax
6501fd17:	shl    eax,cl
6501fd19:	mov    DWORD PTR [ebp-0x8],ecx
6501fd1c:	test   DWORD PTR [edi],eax
6501fd1e:	je     0x6501fdb1
6501fd24:	mov    eax,DWORD PTR [ebp-0xc]
6501fd27:	or     edx,0xffffffff
6501fd2a:	shl    edx,cl
6501fd2c:	not    edx
6501fd2e:	test   DWORD PTR [ebp+eax*4-0x20],edx
6501fd32:	jmp    0x6501fd39
6501fd34:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6501fd39:	jne    0x6501fd43
6501fd3b:	inc    eax
6501fd3c:	cmp    eax,0x3
6501fd3f:	jl     0x6501fd34
6501fd41:	jmp    0x6501fdb1
6501fd43:	mov    eax,esi
6501fd45:	cdq    
6501fd46:	push   0x1f
6501fd48:	pop    ecx
6501fd49:	and    edx,ecx
6501fd4b:	add    eax,edx
6501fd4d:	sar    eax,0x5
6501fd50:	and    esi,0x8000001f
6501fd56:	jns    0x6501fd5d
6501fd58:	dec    esi
6501fd59:	or     esi,0xffffffe0
6501fd5c:	inc    esi
6501fd5d:	and    DWORD PTR [ebp-0x4],0x0
6501fd61:	sub    ecx,esi
6501fd63:	xor    edx,edx
6501fd65:	inc    edx
6501fd66:	shl    edx,cl
6501fd68:	lea    ecx,[ebp+eax*4-0x20]
6501fd6c:	mov    esi,DWORD PTR [ecx]
6501fd6e:	add    esi,edx
6501fd70:	mov    DWORD PTR [ebp+0x8],esi
6501fd73:	mov    esi,DWORD PTR [ecx]
6501fd75:	cmp    DWORD PTR [ebp+0x8],esi
6501fd78:	jb     0x6501fd9c
6501fd7a:	cmp    DWORD PTR [ebp+0x8],edx
6501fd7d:	jmp    0x6501fd9a
6501fd7f:	test   ecx,ecx
6501fd81:	je     0x6501fdae
6501fd83:	and    DWORD PTR [ebp-0x4],0x0
6501fd87:	lea    ecx,[ebp+eax*4-0x20]
6501fd8b:	mov    edx,DWORD PTR [ecx]
6501fd8d:	lea    esi,[edx+0x1]
6501fd90:	cmp    esi,edx
6501fd92:	mov    DWORD PTR [ebp+0x8],esi
6501fd95:	jb     0x6501fd9c
6501fd97:	cmp    esi,0x1
6501fd9a:	jae    0x6501fda3
6501fd9c:	mov    DWORD PTR [ebp-0x4],0x1
6501fda3:	dec    eax
6501fda4:	mov    edx,DWORD PTR [ebp+0x8]
6501fda7:	mov    DWORD PTR [ecx],edx
6501fda9:	mov    ecx,DWORD PTR [ebp-0x4]
6501fdac:	jns    0x6501fd7f
6501fdae:	mov    DWORD PTR [ebp+0x8],ecx
6501fdb1:	mov    ecx,DWORD PTR [ebp-0x8]
6501fdb4:	or     eax,0xffffffff
6501fdb7:	shl    eax,cl
6501fdb9:	and    DWORD PTR [edi],eax
6501fdbb:	mov    eax,DWORD PTR [ebp-0xc]
6501fdbe:	inc    eax
6501fdbf:	cmp    eax,0x3
6501fdc2:	jge    0x6501fdd1
6501fdc4:	push   0x3
6501fdc6:	pop    ecx
6501fdc7:	lea    edi,[ebp+eax*4-0x20]
6501fdcb:	sub    ecx,eax
6501fdcd:	xor    eax,eax
6501fdcf:	rep stos DWORD PTR es:[edi],eax
6501fdd1:	cmp    DWORD PTR [ebp+0x8],0x0
6501fdd5:	je     0x6501fdd8
6501fdd7:	inc    ebx
6501fdd8:	mov    eax,ds:0x6502d074
6501fddd:	mov    ecx,eax
6501fddf:	sub    ecx,DWORD PTR ds:0x6502d078
6501fde5:	cmp    ebx,ecx
6501fde7:	jge    0x6501fdf6
6501fde9:	xor    eax,eax
6501fdeb:	lea    edi,[ebp-0x20]
6501fdee:	stos   DWORD PTR es:[edi],eax
6501fdef:	stos   DWORD PTR es:[edi],eax
6501fdf0:	stos   DWORD PTR es:[edi],eax
6501fdf1:	jmp    0x65020003
6501fdf6:	cmp    ebx,eax
6501fdf8:	jg     0x6502000d
6501fdfe:	sub    eax,DWORD PTR [ebp-0x10]
6501fe01:	lea    esi,[ebp-0x2c]
6501fe04:	mov    ecx,eax
6501fe06:	lea    edi,[ebp-0x20]
6501fe09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fe0a:	cdq    
6501fe0b:	and    edx,0x1f
6501fe0e:	add    eax,edx
6501fe10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fe11:	mov    edx,ecx
6501fe13:	sar    eax,0x5
6501fe16:	and    edx,0x8000001f
6501fe1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fe1d:	jns    0x6501fe24
6501fe1f:	dec    edx
6501fe20:	or     edx,0xffffffe0
6501fe23:	inc    edx
6501fe24:	and    DWORD PTR [ebp-0xc],0x0
6501fe28:	and    DWORD PTR [ebp+0x8],0x0
6501fe2c:	or     edi,0xffffffff
6501fe2f:	mov    ecx,edx
6501fe31:	shl    edi,cl
6501fe33:	mov    DWORD PTR [ebp-0x4],0x20
6501fe3a:	sub    DWORD PTR [ebp-0x4],edx
6501fe3d:	not    edi
6501fe3f:	mov    ebx,DWORD PTR [ebp+0x8]
6501fe42:	lea    ebx,[ebp+ebx*4-0x20]
6501fe46:	mov    esi,DWORD PTR [ebx]
6501fe48:	mov    ecx,esi
6501fe4a:	and    ecx,edi
6501fe4c:	mov    DWORD PTR [ebp-0x10],ecx
6501fe4f:	mov    ecx,edx
6501fe51:	shr    esi,cl
6501fe53:	mov    ecx,DWORD PTR [ebp-0x4]
6501fe56:	or     esi,DWORD PTR [ebp-0xc]
6501fe59:	mov    DWORD PTR [ebx],esi
6501fe5b:	mov    esi,DWORD PTR [ebp-0x10]
6501fe5e:	shl    esi,cl
6501fe60:	inc    DWORD PTR [ebp+0x8]
6501fe63:	cmp    DWORD PTR [ebp+0x8],0x3
6501fe67:	mov    DWORD PTR [ebp-0xc],esi
6501fe6a:	jl     0x6501fe3f
6501fe6c:	mov    esi,eax
6501fe6e:	push   0x2
6501fe70:	shl    esi,0x2
6501fe73:	lea    ecx,[ebp-0x18]
6501fe76:	pop    edx
6501fe77:	sub    ecx,esi
6501fe79:	cmp    edx,eax
6501fe7b:	jl     0x6501fe85
6501fe7d:	mov    esi,DWORD PTR [ecx]
6501fe7f:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6501fe83:	jmp    0x6501fe8a
6501fe85:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6501fe8a:	dec    edx
6501fe8b:	sub    ecx,0x4
6501fe8e:	test   edx,edx
6501fe90:	jge    0x6501fe79
6501fe92:	mov    esi,DWORD PTR ds:0x6502d078
6501fe98:	dec    esi
6501fe99:	lea    ecx,[esi+0x1]
6501fe9c:	mov    eax,ecx
6501fe9e:	cdq    
6501fe9f:	and    edx,0x1f
6501fea2:	add    eax,edx
6501fea4:	sar    eax,0x5
6501fea7:	mov    edx,ecx
6501fea9:	and    edx,0x8000001f
6501feaf:	mov    DWORD PTR [ebp-0xc],eax
6501feb2:	jns    0x6501feb9
6501feb4:	dec    edx
6501feb5:	or     edx,0xffffffe0
6501feb8:	inc    edx
6501feb9:	push   0x1f
6501febb:	pop    ecx
6501febc:	sub    ecx,edx
6501febe:	xor    edx,edx
6501fec0:	inc    edx
6501fec1:	shl    edx,cl
6501fec3:	lea    ebx,[ebp+eax*4-0x20]
6501fec7:	mov    DWORD PTR [ebp-0x10],ecx
6501feca:	test   DWORD PTR [ebx],edx
6501fecc:	je     0x6501ff54
6501fed2:	or     edx,0xffffffff
6501fed5:	shl    edx,cl
6501fed7:	not    edx
6501fed9:	test   DWORD PTR [ebp+eax*4-0x20],edx
6501fedd:	jmp    0x6501fee4
6501fedf:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6501fee4:	jne    0x6501feee
6501fee6:	inc    eax
6501fee7:	cmp    eax,0x3
6501feea:	jl     0x6501fedf
6501feec:	jmp    0x6501ff54
6501feee:	mov    eax,esi
6501fef0:	cdq    
6501fef1:	push   0x1f
6501fef3:	pop    ecx
6501fef4:	and    edx,ecx
6501fef6:	add    eax,edx
6501fef8:	sar    eax,0x5
6501fefb:	and    esi,0x8000001f
6501ff01:	jns    0x6501ff08
6501ff03:	dec    esi
6501ff04:	or     esi,0xffffffe0
6501ff07:	inc    esi
6501ff08:	and    DWORD PTR [ebp+0x8],0x0
6501ff0c:	xor    edx,edx
6501ff0e:	sub    ecx,esi
6501ff10:	inc    edx
6501ff11:	shl    edx,cl
6501ff13:	lea    ecx,[ebp+eax*4-0x20]
6501ff17:	mov    esi,DWORD PTR [ecx]
6501ff19:	lea    edi,[esi+edx*1]
6501ff1c:	cmp    edi,esi
6501ff1e:	jb     0x6501ff24
6501ff20:	cmp    edi,edx
6501ff22:	jae    0x6501ff2b
6501ff24:	mov    DWORD PTR [ebp+0x8],0x1
6501ff2b:	mov    DWORD PTR [ecx],edi
6501ff2d:	mov    ecx,DWORD PTR [ebp+0x8]
6501ff30:	jmp    0x6501ff51
6501ff32:	test   ecx,ecx
6501ff34:	je     0x6501ff54
6501ff36:	lea    ecx,[ebp+eax*4-0x20]
6501ff3a:	mov    edx,DWORD PTR [ecx]
6501ff3c:	lea    esi,[edx+0x1]
6501ff3f:	xor    edi,edi
6501ff41:	cmp    esi,edx
6501ff43:	jb     0x6501ff4a
6501ff45:	cmp    esi,0x1
6501ff48:	jae    0x6501ff4d
6501ff4a:	xor    edi,edi
6501ff4c:	inc    edi
6501ff4d:	mov    DWORD PTR [ecx],esi
6501ff4f:	mov    ecx,edi
6501ff51:	dec    eax
6501ff52:	jns    0x6501ff32
6501ff54:	mov    ecx,DWORD PTR [ebp-0x10]
6501ff57:	or     eax,0xffffffff
6501ff5a:	shl    eax,cl
6501ff5c:	and    DWORD PTR [ebx],eax
6501ff5e:	mov    eax,DWORD PTR [ebp-0xc]
6501ff61:	inc    eax
6501ff62:	cmp    eax,0x3
6501ff65:	jge    0x6501ff74
6501ff67:	push   0x3
6501ff69:	pop    ecx
6501ff6a:	lea    edi,[ebp+eax*4-0x20]
6501ff6e:	sub    ecx,eax
6501ff70:	xor    eax,eax
6501ff72:	rep stos DWORD PTR es:[edi],eax
6501ff74:	mov    ecx,DWORD PTR ds:0x6502d07c
6501ff7a:	inc    ecx
6501ff7b:	mov    eax,ecx
6501ff7d:	cdq    
6501ff7e:	and    edx,0x1f
6501ff81:	add    eax,edx
6501ff83:	mov    edx,ecx
6501ff85:	sar    eax,0x5
6501ff88:	and    edx,0x8000001f
6501ff8e:	jns    0x6501ff95
6501ff90:	dec    edx
6501ff91:	or     edx,0xffffffe0
6501ff94:	inc    edx
6501ff95:	and    DWORD PTR [ebp-0xc],0x0
6501ff99:	and    DWORD PTR [ebp+0x8],0x0
6501ff9d:	or     edi,0xffffffff
6501ffa0:	mov    ecx,edx
6501ffa2:	shl    edi,cl
6501ffa4:	mov    DWORD PTR [ebp-0x4],0x20
6501ffab:	sub    DWORD PTR [ebp-0x4],edx
6501ffae:	not    edi
6501ffb0:	mov    ebx,DWORD PTR [ebp+0x8]
6501ffb3:	lea    ebx,[ebp+ebx*4-0x20]
6501ffb7:	mov    esi,DWORD PTR [ebx]
6501ffb9:	mov    ecx,esi
6501ffbb:	and    ecx,edi
6501ffbd:	mov    DWORD PTR [ebp-0x10],ecx
6501ffc0:	mov    ecx,edx
6501ffc2:	shr    esi,cl
6501ffc4:	mov    ecx,DWORD PTR [ebp-0x4]
6501ffc7:	or     esi,DWORD PTR [ebp-0xc]
6501ffca:	mov    DWORD PTR [ebx],esi
6501ffcc:	mov    esi,DWORD PTR [ebp-0x10]
6501ffcf:	shl    esi,cl
6501ffd1:	inc    DWORD PTR [ebp+0x8]
6501ffd4:	cmp    DWORD PTR [ebp+0x8],0x3
6501ffd8:	mov    DWORD PTR [ebp-0xc],esi
6501ffdb:	jl     0x6501ffb0
6501ffdd:	mov    esi,eax
6501ffdf:	push   0x2
6501ffe1:	shl    esi,0x2
6501ffe4:	lea    ecx,[ebp-0x18]
6501ffe7:	pop    edx
6501ffe8:	sub    ecx,esi
6501ffea:	cmp    edx,eax
6501ffec:	jl     0x6501fff6
6501ffee:	mov    esi,DWORD PTR [ecx]
6501fff0:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6501fff4:	jmp    0x6501fffb
6501fff6:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6501fffb:	dec    edx
6501fffc:	sub    ecx,0x4
6501ffff:	test   edx,edx
65020001:	jge    0x6501ffea
65020003:	push   0x2
65020005:	xor    ebx,ebx
65020007:	pop    eax
65020008:	jmp    0x65020167
6502000d:	cmp    ebx,DWORD PTR ds:0x6502d070
65020013:	mov    ecx,DWORD PTR ds:0x6502d07c
65020019:	jl     0x650200cc
6502001f:	xor    eax,eax
65020021:	lea    edi,[ebp-0x20]
65020024:	stos   DWORD PTR es:[edi],eax
65020025:	stos   DWORD PTR es:[edi],eax
65020026:	stos   DWORD PTR es:[edi],eax
65020027:	or     DWORD PTR [ebp-0x20],0x80000000
6502002e:	mov    eax,ecx
65020030:	cdq    
65020031:	and    edx,0x1f
65020034:	add    eax,edx
65020036:	mov    edx,ecx
65020038:	sar    eax,0x5
6502003b:	and    edx,0x8000001f
65020041:	jns    0x65020048
65020043:	dec    edx
65020044:	or     edx,0xffffffe0
65020047:	inc    edx
65020048:	and    DWORD PTR [ebp-0xc],0x0
6502004c:	and    DWORD PTR [ebp+0x8],0x0
65020050:	or     edi,0xffffffff
65020053:	mov    ecx,edx
65020055:	shl    edi,cl
65020057:	mov    DWORD PTR [ebp-0x4],0x20
6502005e:	sub    DWORD PTR [ebp-0x4],edx
65020061:	not    edi
65020063:	mov    ebx,DWORD PTR [ebp+0x8]
65020066:	lea    ebx,[ebp+ebx*4-0x20]
6502006a:	mov    esi,DWORD PTR [ebx]
6502006c:	mov    ecx,esi
6502006e:	and    ecx,edi
65020070:	mov    DWORD PTR [ebp-0x10],ecx
65020073:	mov    ecx,edx
65020075:	shr    esi,cl
65020077:	mov    ecx,DWORD PTR [ebp-0x4]
6502007a:	or     esi,DWORD PTR [ebp-0xc]
6502007d:	mov    DWORD PTR [ebx],esi
6502007f:	mov    esi,DWORD PTR [ebp-0x10]
65020082:	shl    esi,cl
65020084:	inc    DWORD PTR [ebp+0x8]
65020087:	cmp    DWORD PTR [ebp+0x8],0x3
6502008b:	mov    DWORD PTR [ebp-0xc],esi
6502008e:	jl     0x65020063
65020090:	mov    esi,eax
65020092:	push   0x2
65020094:	shl    esi,0x2
65020097:	lea    ecx,[ebp-0x18]
6502009a:	pop    edx
6502009b:	sub    ecx,esi
6502009d:	cmp    edx,eax
6502009f:	jl     0x650200a9
650200a1:	mov    esi,DWORD PTR [ecx]
650200a3:	mov    DWORD PTR [ebp+edx*4-0x20],esi
650200a7:	jmp    0x650200ae
650200a9:	and    DWORD PTR [ebp+edx*4-0x20],0x0
650200ae:	dec    edx
650200af:	sub    ecx,0x4
650200b2:	test   edx,edx
650200b4:	jge    0x6502009d
650200b6:	mov    eax,ds:0x6502d070
650200bb:	mov    ecx,DWORD PTR ds:0x6502d084
650200c1:	lea    ebx,[ecx+eax*1]
650200c4:	xor    eax,eax
650200c6:	inc    eax
650200c7:	jmp    0x65020167
650200cc:	mov    eax,ds:0x6502d084
650200d1:	and    DWORD PTR [ebp-0x20],0x7fffffff
650200d8:	add    ebx,eax
650200da:	mov    eax,ecx
650200dc:	cdq    
650200dd:	and    edx,0x1f
650200e0:	add    eax,edx
650200e2:	mov    edx,ecx
650200e4:	sar    eax,0x5
650200e7:	and    edx,0x8000001f
650200ed:	jns    0x650200f4
650200ef:	dec    edx
650200f0:	or     edx,0xffffffe0
650200f3:	inc    edx
650200f4:	and    DWORD PTR [ebp-0xc],0x0
650200f8:	and    DWORD PTR [ebp+0x8],0x0
650200fc:	or     esi,0xffffffff
650200ff:	mov    ecx,edx
65020101:	shl    esi,cl
65020103:	mov    DWORD PTR [ebp-0x4],0x20
6502010a:	sub    DWORD PTR [ebp-0x4],edx
6502010d:	not    esi
6502010f:	mov    ecx,DWORD PTR [ebp+0x8]
65020112:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
65020116:	mov    ecx,edi
65020118:	and    ecx,esi
6502011a:	mov    DWORD PTR [ebp-0x10],ecx
6502011d:	mov    ecx,edx
6502011f:	shr    edi,cl
65020121:	mov    ecx,DWORD PTR [ebp+0x8]
65020124:	or     edi,DWORD PTR [ebp-0xc]
65020127:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6502012b:	mov    edi,DWORD PTR [ebp-0x10]
6502012e:	mov    ecx,DWORD PTR [ebp-0x4]
65020131:	shl    edi,cl
65020133:	inc    DWORD PTR [ebp+0x8]
65020136:	cmp    DWORD PTR [ebp+0x8],0x3
6502013a:	mov    DWORD PTR [ebp-0xc],edi
6502013d:	jl     0x6502010f
6502013f:	mov    esi,eax
65020141:	push   0x2
65020143:	shl    esi,0x2
65020146:	lea    ecx,[ebp-0x18]
65020149:	pop    edx
6502014a:	sub    ecx,esi
6502014c:	cmp    edx,eax
6502014e:	jl     0x65020158
65020150:	mov    esi,DWORD PTR [ecx]
65020152:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020156:	jmp    0x6502015d
65020158:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502015d:	dec    edx
6502015e:	sub    ecx,0x4
65020161:	test   edx,edx
65020163:	jge    0x6502014c
65020165:	xor    eax,eax
65020167:	pop    esi
65020168:	push   0x1f
6502016a:	pop    ecx
6502016b:	sub    ecx,DWORD PTR ds:0x6502d07c
65020171:	shl    ebx,cl
65020173:	mov    ecx,DWORD PTR [ebp-0x14]
65020176:	neg    ecx
65020178:	sbb    ecx,ecx
6502017a:	and    ecx,0x80000000
65020180:	or     ebx,ecx
65020182:	mov    ecx,DWORD PTR ds:0x6502d080
65020188:	or     ebx,DWORD PTR [ebp-0x20]
6502018b:	cmp    ecx,0x40
6502018e:	jne    0x6502019d
65020190:	mov    ecx,DWORD PTR [ebp+0xc]
65020193:	mov    edx,DWORD PTR [ebp-0x1c]
65020196:	mov    DWORD PTR [ecx+0x4],ebx
65020199:	mov    DWORD PTR [ecx],edx
6502019b:	jmp    0x650201a7
6502019d:	cmp    ecx,0x20
650201a0:	jne    0x650201a7
650201a2:	mov    ecx,DWORD PTR [ebp+0xc]
650201a5:	mov    DWORD PTR [ecx],ebx
650201a7:	pop    edi
650201a8:	pop    ebx
650201a9:	leave  
650201aa:	ret    
650201ab:	push   ebp
650201ac:	mov    ebp,esp
650201ae:	sub    esp,0x2c
650201b1:	mov    eax,DWORD PTR [ebp+0x8]
650201b4:	movzx  ecx,WORD PTR [eax+0xa]
650201b8:	push   ebx
650201b9:	mov    ebx,ecx
650201bb:	and    ecx,0x8000
650201c1:	mov    DWORD PTR [ebp-0x14],ecx
650201c4:	mov    ecx,DWORD PTR [eax+0x6]
650201c7:	mov    DWORD PTR [ebp-0x20],ecx
650201ca:	mov    ecx,DWORD PTR [eax+0x2]
650201cd:	movzx  eax,WORD PTR [eax]
650201d0:	and    ebx,0x7fff
650201d6:	sub    ebx,0x3fff
650201dc:	shl    eax,0x10
650201df:	cmp    ebx,0xffffc001
650201e5:	push   edi
650201e6:	mov    DWORD PTR [ebp-0x1c],ecx
650201e9:	mov    DWORD PTR [ebp-0x18],eax
650201ec:	jne    0x65020215
650201ee:	xor    ebx,ebx
650201f0:	xor    eax,eax
650201f2:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
650201f6:	jne    0x65020205
650201f8:	inc    eax
650201f9:	cmp    eax,0x3
650201fc:	jl     0x650201f2
650201fe:	xor    eax,eax
65020200:	jmp    0x650206aa
65020205:	xor    eax,eax
65020207:	lea    edi,[ebp-0x20]
6502020a:	stos   DWORD PTR es:[edi],eax
6502020b:	stos   DWORD PTR es:[edi],eax
6502020c:	push   0x2
6502020e:	stos   DWORD PTR es:[edi],eax
6502020f:	pop    eax
65020210:	jmp    0x650206aa
65020215:	and    DWORD PTR [ebp+0x8],0x0
65020219:	push   esi
6502021a:	lea    esi,[ebp-0x20]
6502021d:	lea    edi,[ebp-0x2c]
65020220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020223:	mov    esi,DWORD PTR ds:0x6502d090
65020229:	dec    esi
6502022a:	lea    ecx,[esi+0x1]
6502022d:	mov    eax,ecx
6502022f:	cdq    
65020230:	and    edx,0x1f
65020233:	add    eax,edx
65020235:	sar    eax,0x5
65020238:	mov    edx,ecx
6502023a:	and    edx,0x8000001f
65020240:	mov    DWORD PTR [ebp-0x10],ebx
65020243:	mov    DWORD PTR [ebp-0xc],eax
65020246:	jns    0x6502024d
65020248:	dec    edx
65020249:	or     edx,0xffffffe0
6502024c:	inc    edx
6502024d:	lea    edi,[ebp+eax*4-0x20]
65020251:	push   0x1f
65020253:	xor    eax,eax
65020255:	pop    ecx
65020256:	sub    ecx,edx
65020258:	inc    eax
65020259:	shl    eax,cl
6502025b:	mov    DWORD PTR [ebp-0x8],ecx
6502025e:	test   DWORD PTR [edi],eax
65020260:	je     0x650202f3
65020266:	mov    eax,DWORD PTR [ebp-0xc]
65020269:	or     edx,0xffffffff
6502026c:	shl    edx,cl
6502026e:	not    edx
65020270:	test   DWORD PTR [ebp+eax*4-0x20],edx
65020274:	jmp    0x6502027b
65020276:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6502027b:	jne    0x65020285
6502027d:	inc    eax
6502027e:	cmp    eax,0x3
65020281:	jl     0x65020276
65020283:	jmp    0x650202f3
65020285:	mov    eax,esi
65020287:	cdq    
65020288:	push   0x1f
6502028a:	pop    ecx
6502028b:	and    edx,ecx
6502028d:	add    eax,edx
6502028f:	sar    eax,0x5
65020292:	and    esi,0x8000001f
65020298:	jns    0x6502029f
6502029a:	dec    esi
6502029b:	or     esi,0xffffffe0
6502029e:	inc    esi
6502029f:	and    DWORD PTR [ebp-0x4],0x0
650202a3:	sub    ecx,esi
650202a5:	xor    edx,edx
650202a7:	inc    edx
650202a8:	shl    edx,cl
650202aa:	lea    ecx,[ebp+eax*4-0x20]
650202ae:	mov    esi,DWORD PTR [ecx]
650202b0:	add    esi,edx
650202b2:	mov    DWORD PTR [ebp+0x8],esi
650202b5:	mov    esi,DWORD PTR [ecx]
650202b7:	cmp    DWORD PTR [ebp+0x8],esi
650202ba:	jb     0x650202de
650202bc:	cmp    DWORD PTR [ebp+0x8],edx
650202bf:	jmp    0x650202dc
650202c1:	test   ecx,ecx
650202c3:	je     0x650202f0
650202c5:	and    DWORD PTR [ebp-0x4],0x0
650202c9:	lea    ecx,[ebp+eax*4-0x20]
650202cd:	mov    edx,DWORD PTR [ecx]
650202cf:	lea    esi,[edx+0x1]
650202d2:	cmp    esi,edx
650202d4:	mov    DWORD PTR [ebp+0x8],esi
650202d7:	jb     0x650202de
650202d9:	cmp    esi,0x1
650202dc:	jae    0x650202e5
650202de:	mov    DWORD PTR [ebp-0x4],0x1
650202e5:	dec    eax
650202e6:	mov    edx,DWORD PTR [ebp+0x8]
650202e9:	mov    DWORD PTR [ecx],edx
650202eb:	mov    ecx,DWORD PTR [ebp-0x4]
650202ee:	jns    0x650202c1
650202f0:	mov    DWORD PTR [ebp+0x8],ecx
650202f3:	mov    ecx,DWORD PTR [ebp-0x8]
650202f6:	or     eax,0xffffffff
650202f9:	shl    eax,cl
650202fb:	and    DWORD PTR [edi],eax
650202fd:	mov    eax,DWORD PTR [ebp-0xc]
65020300:	inc    eax
65020301:	cmp    eax,0x3
65020304:	jge    0x65020313
65020306:	push   0x3
65020308:	pop    ecx
65020309:	lea    edi,[ebp+eax*4-0x20]
6502030d:	sub    ecx,eax
6502030f:	xor    eax,eax
65020311:	rep stos DWORD PTR es:[edi],eax
65020313:	cmp    DWORD PTR [ebp+0x8],0x0
65020317:	je     0x6502031a
65020319:	inc    ebx
6502031a:	mov    eax,ds:0x6502d08c
6502031f:	mov    ecx,eax
65020321:	sub    ecx,DWORD PTR ds:0x6502d090
65020327:	cmp    ebx,ecx
65020329:	jge    0x65020338
6502032b:	xor    eax,eax
6502032d:	lea    edi,[ebp-0x20]
65020330:	stos   DWORD PTR es:[edi],eax
65020331:	stos   DWORD PTR es:[edi],eax
65020332:	stos   DWORD PTR es:[edi],eax
65020333:	jmp    0x65020545
65020338:	cmp    ebx,eax
6502033a:	jg     0x6502054f
65020340:	sub    eax,DWORD PTR [ebp-0x10]
65020343:	lea    esi,[ebp-0x2c]
65020346:	mov    ecx,eax
65020348:	lea    edi,[ebp-0x20]
6502034b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6502034c:	cdq    
6502034d:	and    edx,0x1f
65020350:	add    eax,edx
65020352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020353:	mov    edx,ecx
65020355:	sar    eax,0x5
65020358:	and    edx,0x8000001f
6502035e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6502035f:	jns    0x65020366
65020361:	dec    edx
65020362:	or     edx,0xffffffe0
65020365:	inc    edx
65020366:	and    DWORD PTR [ebp-0xc],0x0
6502036a:	and    DWORD PTR [ebp+0x8],0x0
6502036e:	or     edi,0xffffffff
65020371:	mov    ecx,edx
65020373:	shl    edi,cl
65020375:	mov    DWORD PTR [ebp-0x4],0x20
6502037c:	sub    DWORD PTR [ebp-0x4],edx
6502037f:	not    edi
65020381:	mov    ebx,DWORD PTR [ebp+0x8]
65020384:	lea    ebx,[ebp+ebx*4-0x20]
65020388:	mov    esi,DWORD PTR [ebx]
6502038a:	mov    ecx,esi
6502038c:	and    ecx,edi
6502038e:	mov    DWORD PTR [ebp-0x10],ecx
65020391:	mov    ecx,edx
65020393:	shr    esi,cl
65020395:	mov    ecx,DWORD PTR [ebp-0x4]
65020398:	or     esi,DWORD PTR [ebp-0xc]
6502039b:	mov    DWORD PTR [ebx],esi
6502039d:	mov    esi,DWORD PTR [ebp-0x10]
650203a0:	shl    esi,cl
650203a2:	inc    DWORD PTR [ebp+0x8]
650203a5:	cmp    DWORD PTR [ebp+0x8],0x3
650203a9:	mov    DWORD PTR [ebp-0xc],esi
650203ac:	jl     0x65020381
650203ae:	mov    esi,eax
650203b0:	push   0x2
650203b2:	shl    esi,0x2
650203b5:	lea    ecx,[ebp-0x18]
650203b8:	pop    edx
650203b9:	sub    ecx,esi
650203bb:	cmp    edx,eax
650203bd:	jl     0x650203c7
650203bf:	mov    esi,DWORD PTR [ecx]
650203c1:	mov    DWORD PTR [ebp+edx*4-0x20],esi
650203c5:	jmp    0x650203cc
650203c7:	and    DWORD PTR [ebp+edx*4-0x20],0x0
650203cc:	dec    edx
650203cd:	sub    ecx,0x4
650203d0:	test   edx,edx
650203d2:	jge    0x650203bb
650203d4:	mov    esi,DWORD PTR ds:0x6502d090
650203da:	dec    esi
650203db:	lea    ecx,[esi+0x1]
650203de:	mov    eax,ecx
650203e0:	cdq    
650203e1:	and    edx,0x1f
650203e4:	add    eax,edx
650203e6:	sar    eax,0x5
650203e9:	mov    edx,ecx
650203eb:	and    edx,0x8000001f
650203f1:	mov    DWORD PTR [ebp-0xc],eax
650203f4:	jns    0x650203fb
650203f6:	dec    edx
650203f7:	or     edx,0xffffffe0
650203fa:	inc    edx
650203fb:	push   0x1f
650203fd:	pop    ecx
650203fe:	sub    ecx,edx
65020400:	xor    edx,edx
65020402:	inc    edx
65020403:	shl    edx,cl
65020405:	lea    ebx,[ebp+eax*4-0x20]
65020409:	mov    DWORD PTR [ebp-0x10],ecx
6502040c:	test   DWORD PTR [ebx],edx
6502040e:	je     0x65020496
65020414:	or     edx,0xffffffff
65020417:	shl    edx,cl
65020419:	not    edx
6502041b:	test   DWORD PTR [ebp+eax*4-0x20],edx
6502041f:	jmp    0x65020426
65020421:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
65020426:	jne    0x65020430
65020428:	inc    eax
65020429:	cmp    eax,0x3
6502042c:	jl     0x65020421
6502042e:	jmp    0x65020496
65020430:	mov    eax,esi
65020432:	cdq    
65020433:	push   0x1f
65020435:	pop    ecx
65020436:	and    edx,ecx
65020438:	add    eax,edx
6502043a:	sar    eax,0x5
6502043d:	and    esi,0x8000001f
65020443:	jns    0x6502044a
65020445:	dec    esi
65020446:	or     esi,0xffffffe0
65020449:	inc    esi
6502044a:	and    DWORD PTR [ebp+0x8],0x0
6502044e:	xor    edx,edx
65020450:	sub    ecx,esi
65020452:	inc    edx
65020453:	shl    edx,cl
65020455:	lea    ecx,[ebp+eax*4-0x20]
65020459:	mov    esi,DWORD PTR [ecx]
6502045b:	lea    edi,[esi+edx*1]
6502045e:	cmp    edi,esi
65020460:	jb     0x65020466
65020462:	cmp    edi,edx
65020464:	jae    0x6502046d
65020466:	mov    DWORD PTR [ebp+0x8],0x1
6502046d:	mov    DWORD PTR [ecx],edi
6502046f:	mov    ecx,DWORD PTR [ebp+0x8]
65020472:	jmp    0x65020493
65020474:	test   ecx,ecx
65020476:	je     0x65020496
65020478:	lea    ecx,[ebp+eax*4-0x20]
6502047c:	mov    edx,DWORD PTR [ecx]
6502047e:	lea    esi,[edx+0x1]
65020481:	xor    edi,edi
65020483:	cmp    esi,edx
65020485:	jb     0x6502048c
65020487:	cmp    esi,0x1
6502048a:	jae    0x6502048f
6502048c:	xor    edi,edi
6502048e:	inc    edi
6502048f:	mov    DWORD PTR [ecx],esi
65020491:	mov    ecx,edi
65020493:	dec    eax
65020494:	jns    0x65020474
65020496:	mov    ecx,DWORD PTR [ebp-0x10]
65020499:	or     eax,0xffffffff
6502049c:	shl    eax,cl
6502049e:	and    DWORD PTR [ebx],eax
650204a0:	mov    eax,DWORD PTR [ebp-0xc]
650204a3:	inc    eax
650204a4:	cmp    eax,0x3
650204a7:	jge    0x650204b6
650204a9:	push   0x3
650204ab:	pop    ecx
650204ac:	lea    edi,[ebp+eax*4-0x20]
650204b0:	sub    ecx,eax
650204b2:	xor    eax,eax
650204b4:	rep stos DWORD PTR es:[edi],eax
650204b6:	mov    ecx,DWORD PTR ds:0x6502d094
650204bc:	inc    ecx
650204bd:	mov    eax,ecx
650204bf:	cdq    
650204c0:	and    edx,0x1f
650204c3:	add    eax,edx
650204c5:	mov    edx,ecx
650204c7:	sar    eax,0x5
650204ca:	and    edx,0x8000001f
650204d0:	jns    0x650204d7
650204d2:	dec    edx
650204d3:	or     edx,0xffffffe0
650204d6:	inc    edx
650204d7:	and    DWORD PTR [ebp-0xc],0x0
650204db:	and    DWORD PTR [ebp+0x8],0x0
650204df:	or     edi,0xffffffff
650204e2:	mov    ecx,edx
650204e4:	shl    edi,cl
650204e6:	mov    DWORD PTR [ebp-0x4],0x20
650204ed:	sub    DWORD PTR [ebp-0x4],edx
650204f0:	not    edi
650204f2:	mov    ebx,DWORD PTR [ebp+0x8]
650204f5:	lea    ebx,[ebp+ebx*4-0x20]
650204f9:	mov    esi,DWORD PTR [ebx]
650204fb:	mov    ecx,esi
650204fd:	and    ecx,edi
650204ff:	mov    DWORD PTR [ebp-0x10],ecx
65020502:	mov    ecx,edx
65020504:	shr    esi,cl
65020506:	mov    ecx,DWORD PTR [ebp-0x4]
65020509:	or     esi,DWORD PTR [ebp-0xc]
6502050c:	mov    DWORD PTR [ebx],esi
6502050e:	mov    esi,DWORD PTR [ebp-0x10]
65020511:	shl    esi,cl
65020513:	inc    DWORD PTR [ebp+0x8]
65020516:	cmp    DWORD PTR [ebp+0x8],0x3
6502051a:	mov    DWORD PTR [ebp-0xc],esi
6502051d:	jl     0x650204f2
6502051f:	mov    esi,eax
65020521:	push   0x2
65020523:	shl    esi,0x2
65020526:	lea    ecx,[ebp-0x18]
65020529:	pop    edx
6502052a:	sub    ecx,esi
6502052c:	cmp    edx,eax
6502052e:	jl     0x65020538
65020530:	mov    esi,DWORD PTR [ecx]
65020532:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020536:	jmp    0x6502053d
65020538:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502053d:	dec    edx
6502053e:	sub    ecx,0x4
65020541:	test   edx,edx
65020543:	jge    0x6502052c
65020545:	push   0x2
65020547:	xor    ebx,ebx
65020549:	pop    eax
6502054a:	jmp    0x650206a9
6502054f:	cmp    ebx,DWORD PTR ds:0x6502d088
65020555:	mov    ecx,DWORD PTR ds:0x6502d094
6502055b:	jl     0x6502060e
65020561:	xor    eax,eax
65020563:	lea    edi,[ebp-0x20]
65020566:	stos   DWORD PTR es:[edi],eax
65020567:	stos   DWORD PTR es:[edi],eax
65020568:	stos   DWORD PTR es:[edi],eax
65020569:	or     DWORD PTR [ebp-0x20],0x80000000
65020570:	mov    eax,ecx
65020572:	cdq    
65020573:	and    edx,0x1f
65020576:	add    eax,edx
65020578:	mov    edx,ecx
6502057a:	sar    eax,0x5
6502057d:	and    edx,0x8000001f
65020583:	jns    0x6502058a
65020585:	dec    edx
65020586:	or     edx,0xffffffe0
65020589:	inc    edx
6502058a:	and    DWORD PTR [ebp-0xc],0x0
6502058e:	and    DWORD PTR [ebp+0x8],0x0
65020592:	or     edi,0xffffffff
65020595:	mov    ecx,edx
65020597:	shl    edi,cl
65020599:	mov    DWORD PTR [ebp-0x4],0x20
650205a0:	sub    DWORD PTR [ebp-0x4],edx
650205a3:	not    edi
650205a5:	mov    ebx,DWORD PTR [ebp+0x8]
650205a8:	lea    ebx,[ebp+ebx*4-0x20]
650205ac:	mov    esi,DWORD PTR [ebx]
650205ae:	mov    ecx,esi
650205b0:	and    ecx,edi
650205b2:	mov    DWORD PTR [ebp-0x10],ecx
650205b5:	mov    ecx,edx
650205b7:	shr    esi,cl
650205b9:	mov    ecx,DWORD PTR [ebp-0x4]
650205bc:	or     esi,DWORD PTR [ebp-0xc]
650205bf:	mov    DWORD PTR [ebx],esi
650205c1:	mov    esi,DWORD PTR [ebp-0x10]
650205c4:	shl    esi,cl
650205c6:	inc    DWORD PTR [ebp+0x8]
650205c9:	cmp    DWORD PTR [ebp+0x8],0x3
650205cd:	mov    DWORD PTR [ebp-0xc],esi
650205d0:	jl     0x650205a5
650205d2:	mov    esi,eax
650205d4:	push   0x2
650205d6:	shl    esi,0x2
650205d9:	lea    ecx,[ebp-0x18]
650205dc:	pop    edx
650205dd:	sub    ecx,esi
650205df:	cmp    edx,eax
650205e1:	jl     0x650205eb
650205e3:	mov    esi,DWORD PTR [ecx]
650205e5:	mov    DWORD PTR [ebp+edx*4-0x20],esi
650205e9:	jmp    0x650205f0
650205eb:	and    DWORD PTR [ebp+edx*4-0x20],0x0
650205f0:	dec    edx
650205f1:	sub    ecx,0x4
650205f4:	test   edx,edx
650205f6:	jge    0x650205df
650205f8:	mov    eax,ds:0x6502d088
650205fd:	mov    ecx,DWORD PTR ds:0x6502d09c
65020603:	lea    ebx,[ecx+eax*1]
65020606:	xor    eax,eax
65020608:	inc    eax
65020609:	jmp    0x650206a9
6502060e:	mov    eax,ds:0x6502d09c
65020613:	and    DWORD PTR [ebp-0x20],0x7fffffff
6502061a:	add    ebx,eax
6502061c:	mov    eax,ecx
6502061e:	cdq    
6502061f:	and    edx,0x1f
65020622:	add    eax,edx
65020624:	mov    edx,ecx
65020626:	sar    eax,0x5
65020629:	and    edx,0x8000001f
6502062f:	jns    0x65020636
65020631:	dec    edx
65020632:	or     edx,0xffffffe0
65020635:	inc    edx
65020636:	and    DWORD PTR [ebp-0xc],0x0
6502063a:	and    DWORD PTR [ebp+0x8],0x0
6502063e:	or     esi,0xffffffff
65020641:	mov    ecx,edx
65020643:	shl    esi,cl
65020645:	mov    DWORD PTR [ebp-0x4],0x20
6502064c:	sub    DWORD PTR [ebp-0x4],edx
6502064f:	not    esi
65020651:	mov    ecx,DWORD PTR [ebp+0x8]
65020654:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
65020658:	mov    ecx,edi
6502065a:	and    ecx,esi
6502065c:	mov    DWORD PTR [ebp-0x10],ecx
6502065f:	mov    ecx,edx
65020661:	shr    edi,cl
65020663:	mov    ecx,DWORD PTR [ebp+0x8]
65020666:	or     edi,DWORD PTR [ebp-0xc]
65020669:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6502066d:	mov    edi,DWORD PTR [ebp-0x10]
65020670:	mov    ecx,DWORD PTR [ebp-0x4]
65020673:	shl    edi,cl
65020675:	inc    DWORD PTR [ebp+0x8]
65020678:	cmp    DWORD PTR [ebp+0x8],0x3
6502067c:	mov    DWORD PTR [ebp-0xc],edi
6502067f:	jl     0x65020651
65020681:	mov    esi,eax
65020683:	push   0x2
65020685:	shl    esi,0x2
65020688:	lea    ecx,[ebp-0x18]
6502068b:	pop    edx
6502068c:	sub    ecx,esi
6502068e:	cmp    edx,eax
65020690:	jl     0x6502069a
65020692:	mov    esi,DWORD PTR [ecx]
65020694:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020698:	jmp    0x6502069f
6502069a:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502069f:	dec    edx
650206a0:	sub    ecx,0x4
650206a3:	test   edx,edx
650206a5:	jge    0x6502068e
650206a7:	xor    eax,eax
650206a9:	pop    esi
650206aa:	push   0x1f
650206ac:	pop    ecx
650206ad:	sub    ecx,DWORD PTR ds:0x6502d094
650206b3:	shl    ebx,cl
650206b5:	mov    ecx,DWORD PTR [ebp-0x14]
650206b8:	neg    ecx
650206ba:	sbb    ecx,ecx
650206bc:	and    ecx,0x80000000
650206c2:	or     ebx,ecx
650206c4:	mov    ecx,DWORD PTR ds:0x6502d098
650206ca:	or     ebx,DWORD PTR [ebp-0x20]
650206cd:	cmp    ecx,0x40
650206d0:	jne    0x650206df
650206d2:	mov    ecx,DWORD PTR [ebp+0xc]
650206d5:	mov    edx,DWORD PTR [ebp-0x1c]
650206d8:	mov    DWORD PTR [ecx+0x4],ebx
650206db:	mov    DWORD PTR [ecx],edx
650206dd:	jmp    0x650206e9
650206df:	cmp    ecx,0x20
650206e2:	jne    0x650206e9
650206e4:	mov    ecx,DWORD PTR [ebp+0xc]
650206e7:	mov    DWORD PTR [ecx],ebx
650206e9:	pop    edi
650206ea:	pop    ebx
650206eb:	leave  
650206ec:	ret    
650206ed:	push   ebp
650206ee:	mov    ebp,esp
650206f0:	sub    esp,0x7c
650206f3:	mov    eax,ds:0x6502c09c
650206f8:	xor    eax,ebp
650206fa:	mov    DWORD PTR [ebp-0x4],eax
650206fd:	mov    eax,DWORD PTR [ebp+0x8]
65020700:	push   ebx
65020701:	xor    ebx,ebx
65020703:	push   esi
65020704:	xor    esi,esi
65020706:	mov    DWORD PTR [ebp-0x7c],eax
65020709:	mov    eax,DWORD PTR [ebp+0xc]
6502070c:	inc    esi
6502070d:	xor    ecx,ecx
6502070f:	cmp    DWORD PTR [ebp+0x24],ebx
65020712:	push   edi
65020713:	mov    DWORD PTR [ebp-0x70],eax
65020716:	lea    edi,[ebp-0x20]
65020719:	mov    DWORD PTR [ebp-0x74],ebx
6502071c:	mov    DWORD PTR [ebp-0x68],esi
6502071f:	mov    DWORD PTR [ebp-0x4c],ebx
65020722:	mov    DWORD PTR [ebp-0x58],ebx
65020725:	mov    DWORD PTR [ebp-0x5c],ebx
65020728:	mov    DWORD PTR [ebp-0x60],ebx
6502072b:	mov    DWORD PTR [ebp-0x64],ebx
6502072e:	mov    DWORD PTR [ebp-0x50],ebx
65020731:	mov    DWORD PTR [ebp-0x6c],ebx
65020734:	jne    0x65020755
65020736:	call   0x65014400
6502073b:	push   ebx
6502073c:	push   ebx
6502073d:	push   ebx
6502073e:	push   ebx
6502073f:	push   ebx
65020740:	mov    DWORD PTR [eax],0x16
65020746:	call   0x650122af
6502074b:	add    esp,0x14
6502074e:	xor    eax,eax
65020750:	jmp    0x65020d6e
65020755:	mov    edx,DWORD PTR [ebp+0x10]
65020758:	mov    DWORD PTR [ebp-0x54],edx
6502075b:	mov    al,BYTE PTR [edx]
6502075d:	cmp    al,0x20
6502075f:	je     0x6502076d
65020761:	cmp    al,0x9
65020763:	je     0x6502076d
65020765:	cmp    al,0xa
65020767:	je     0x6502076d
65020769:	cmp    al,0xd
6502076b:	jne    0x65020770
6502076d:	inc    edx
6502076e:	jmp    0x6502075b
65020770:	mov    bl,0x30
65020772:	mov    al,BYTE PTR [edx]
65020774:	inc    edx
65020775:	cmp    ecx,0xb
65020778:	ja     0x650209ad
6502077e:	jmp    DWORD PTR [ecx*4+0x65020d7d]
65020785:	mov    cl,al
65020787:	sub    cl,0x31
6502078a:	cmp    cl,0x8
6502078d:	ja     0x65020795
6502078f:	push   0x3
65020791:	pop    ecx
65020792:	dec    edx
65020793:	jmp    0x65020772
65020795:	mov    ecx,DWORD PTR [ebp+0x24]
65020798:	mov    ecx,DWORD PTR [ecx]
6502079a:	mov    ecx,DWORD PTR [ecx+0xbc]
650207a0:	mov    ecx,DWORD PTR [ecx]
650207a2:	cmp    al,BYTE PTR [ecx]
650207a4:	jne    0x650207ab
650207a6:	push   0x5
650207a8:	pop    ecx
650207a9:	jmp    0x65020772
650207ab:	movsx  eax,al
650207ae:	sub    eax,0x2b
650207b1:	je     0x650207d0
650207b3:	dec    eax
650207b4:	dec    eax
650207b5:	je     0x650207c4
650207b7:	sub    eax,0x3
650207ba:	jne    0x6502094b
650207c0:	mov    ecx,esi
650207c2:	jmp    0x65020772
650207c4:	push   0x2
650207c6:	pop    ecx
650207c7:	mov    DWORD PTR [ebp-0x74],0x8000
650207ce:	jmp    0x65020772
650207d0:	and    DWORD PTR [ebp-0x74],0x0
650207d4:	push   0x2
650207d6:	pop    ecx
650207d7:	jmp    0x65020772
650207d9:	mov    cl,al
650207db:	sub    cl,0x31
650207de:	cmp    cl,0x8
650207e1:	mov    DWORD PTR [ebp-0x58],esi
650207e4:	jbe    0x6502078f
650207e6:	mov    ecx,DWORD PTR [ebp+0x24]
650207e9:	mov    ecx,DWORD PTR [ecx]
650207eb:	mov    ecx,DWORD PTR [ecx+0xbc]
650207f1:	mov    ecx,DWORD PTR [ecx]
650207f3:	cmp    al,BYTE PTR [ecx]
650207f5:	jne    0x650207fb
650207f7:	push   0x4
650207f9:	jmp    0x650207a8
650207fb:	cmp    al,0x2b
650207fd:	je     0x65020827
650207ff:	cmp    al,0x2d
65020801:	je     0x65020827
65020803:	cmp    al,bl
65020805:	je     0x650207c0
65020807:	cmp    al,0x43
65020809:	jle    0x6502094b
6502080f:	cmp    al,0x45
65020811:	jle    0x65020823
65020813:	cmp    al,0x63
65020815:	jle    0x6502094b
6502081b:	cmp    al,0x65
6502081d:	jg     0x6502094b
65020823:	push   0x6
65020825:	jmp    0x650207a8
65020827:	dec    edx
65020828:	push   0xb
6502082a:	jmp    0x650207a8
6502082f:	mov    cl,al
65020831:	sub    cl,0x31
65020834:	cmp    cl,0x8
65020837:	jbe    0x6502078f
6502083d:	mov    ecx,DWORD PTR [ebp+0x24]
65020840:	mov    ecx,DWORD PTR [ecx]
65020842:	mov    ecx,DWORD PTR [ecx+0xbc]
65020848:	mov    ecx,DWORD PTR [ecx]
6502084a:	cmp    al,BYTE PTR [ecx]
6502084c:	je     0x650207a6
65020852:	cmp    al,bl
65020854:	je     0x650207c0
6502085a:	mov    edx,DWORD PTR [ebp-0x54]
6502085d:	jmp    0x65020976
65020862:	mov    DWORD PTR [ebp-0x58],esi
65020865:	jmp    0x65020881
65020867:	cmp    al,0x39
65020869:	jg     0x65020885
6502086b:	cmp    DWORD PTR [ebp-0x4c],0x19
6502086f:	jae    0x6502087b
65020871:	inc    DWORD PTR [ebp-0x4c]
65020874:	sub    al,bl
65020876:	mov    BYTE PTR [edi],al
65020878:	inc    edi
65020879:	jmp    0x6502087e
6502087b:	inc    DWORD PTR [ebp-0x50]
6502087e:	mov    al,BYTE PTR [edx]
65020880:	inc    edx
65020881:	cmp    al,bl
65020883:	jge    0x65020867
65020885:	mov    ecx,DWORD PTR [ebp+0x24]
65020888:	mov    ecx,DWORD PTR [ecx]
6502088a:	mov    ecx,DWORD PTR [ecx+0xbc]
65020890:	mov    ecx,DWORD PTR [ecx]
65020892:	cmp    al,BYTE PTR [ecx]
65020894:	je     0x650207f7
6502089a:	cmp    al,0x2b
6502089c:	je     0x65020827
6502089e:	cmp    al,0x2d
650208a0:	je     0x65020827
650208a2:	jmp    0x65020807
650208a7:	cmp    DWORD PTR [ebp-0x4c],0x0
650208ab:	mov    DWORD PTR [ebp-0x58],esi
650208ae:	mov    DWORD PTR [ebp-0x5c],esi
650208b1:	jne    0x650208d9
650208b3:	jmp    0x650208bb
650208b5:	dec    DWORD PTR [ebp-0x50]
650208b8:	mov    al,BYTE PTR [edx]
650208ba:	inc    edx
650208bb:	cmp    al,bl
650208bd:	je     0x650208b5
650208bf:	jmp    0x650208d9
650208c1:	cmp    al,0x39
650208c3:	jg     0x6502089a
650208c5:	cmp    DWORD PTR [ebp-0x4c],0x19
650208c9:	jae    0x650208d6
650208cb:	inc    DWORD PTR [ebp-0x4c]
650208ce:	sub    al,bl
650208d0:	mov    BYTE PTR [edi],al
650208d2:	inc    edi
650208d3:	dec    DWORD PTR [ebp-0x50]
650208d6:	mov    al,BYTE PTR [edx]
650208d8:	inc    edx
650208d9:	cmp    al,bl
650208db:	jge    0x650208c1
650208dd:	jmp    0x6502089a
650208df:	sub    al,bl
650208e1:	cmp    al,0x9
650208e3:	mov    DWORD PTR [ebp-0x5c],esi
650208e6:	ja     0x6502085a
650208ec:	push   0x4
650208ee:	jmp    0x65020791
650208f3:	lea    ecx,[edx-0x2]
650208f6:	mov    DWORD PTR [ebp-0x54],ecx
650208f9:	mov    cl,al
650208fb:	sub    cl,0x31
650208fe:	cmp    cl,0x8
65020901:	ja     0x6502090a
65020903:	push   0x9
65020905:	jmp    0x65020791
6502090a:	movsx  eax,al
6502090d:	sub    eax,0x2b
65020910:	je     0x65020932
65020912:	dec    eax
65020913:	dec    eax
65020914:	je     0x65020926
65020916:	sub    eax,0x3
65020919:	jne    0x6502085a
6502091f:	push   0x8
65020921:	jmp    0x650207a8
65020926:	or     DWORD PTR [ebp-0x68],0xffffffff
6502092a:	push   0x7
6502092c:	pop    ecx
6502092d:	jmp    0x65020772
65020932:	push   0x7
65020934:	jmp    0x650207a8
65020939:	mov    DWORD PTR [ebp-0x60],esi
6502093c:	jmp    0x65020941
6502093e:	mov    al,BYTE PTR [edx]
65020940:	inc    edx
65020941:	cmp    al,bl
65020943:	je     0x6502093e
65020945:	sub    al,0x31
65020947:	cmp    al,0x8
65020949:	jbe    0x65020903
6502094b:	dec    edx
6502094c:	jmp    0x65020976
6502094e:	mov    cl,al
65020950:	sub    cl,0x31
65020953:	cmp    cl,0x8
65020956:	jbe    0x65020903
65020958:	cmp    al,bl
6502095a:	jmp    0x65020919
6502095c:	cmp    DWORD PTR [ebp+0x20],0x0
65020960:	je     0x650209a9
65020962:	movsx  eax,al
65020965:	sub    eax,0x2b
65020968:	lea    ecx,[edx-0x1]
6502096b:	mov    DWORD PTR [ebp-0x54],ecx
6502096e:	je     0x65020932
65020970:	dec    eax
65020971:	dec    eax
65020972:	je     0x65020926
65020974:	mov    edx,ecx
65020976:	cmp    DWORD PTR [ebp-0x58],0x0
6502097a:	mov    eax,DWORD PTR [ebp-0x70]
6502097d:	mov    DWORD PTR [eax],edx
6502097f:	je     0x65020d29
65020985:	push   0x18
65020987:	pop    eax
65020988:	cmp    DWORD PTR [ebp-0x4c],eax
6502098b:	jbe    0x6502099d
6502098d:	cmp    BYTE PTR [ebp-0x9],0x5
65020991:	jl     0x65020996
65020993:	inc    BYTE PTR [ebp-0x9]
65020996:	dec    edi
65020997:	inc    DWORD PTR [ebp-0x50]
6502099a:	mov    DWORD PTR [ebp-0x4c],eax
6502099d:	cmp    DWORD PTR [ebp-0x4c],0x0
650209a1:	jbe    0x65020d50
650209a7:	jmp    0x65020a02
650209a9:	push   0xa
650209ab:	pop    ecx
650209ac:	dec    edx
650209ad:	cmp    ecx,0xa
650209b0:	jne    0x65020772
650209b6:	jmp    0x65020976
650209b8:	mov    DWORD PTR [ebp-0x60],esi
650209bb:	xor    ecx,ecx
650209bd:	jmp    0x650209d8
650209bf:	cmp    al,0x39
650209c1:	jg     0x650209e3
650209c3:	imul   ecx,ecx,0xa
650209c6:	movsx  esi,al
650209c9:	lea    ecx,[ecx+esi*1-0x30]
650209cd:	cmp    ecx,0x1450
650209d3:	jg     0x650209de
650209d5:	mov    al,BYTE PTR [edx]
650209d7:	inc    edx
650209d8:	cmp    al,bl
650209da:	jge    0x650209bf
650209dc:	jmp    0x650209e3
650209de:	mov    ecx,0x1451
650209e3:	mov    DWORD PTR [ebp-0x64],ecx
650209e6:	jmp    0x650209f3
650209e8:	cmp    al,0x39
650209ea:	jg     0x6502094b
650209f0:	mov    al,BYTE PTR [edx]
650209f2:	inc    edx
650209f3:	cmp    al,bl
650209f5:	jge    0x650209e8
650209f7:	jmp    0x6502094b
650209fc:	dec    DWORD PTR [ebp-0x4c]
650209ff:	inc    DWORD PTR [ebp-0x50]
65020a02:	dec    edi
65020a03:	cmp    BYTE PTR [edi],0x0
65020a06:	je     0x650209fc
65020a08:	lea    eax,[ebp-0x3c]
65020a0b:	push   eax
65020a0c:	push   DWORD PTR [ebp-0x4c]
65020a0f:	lea    eax,[ebp-0x20]
65020a12:	push   eax
65020a13:	call   0x65021aa4
65020a18:	mov    eax,DWORD PTR [ebp-0x64]
65020a1b:	xor    ecx,ecx
65020a1d:	add    esp,0xc
65020a20:	cmp    DWORD PTR [ebp-0x68],ecx
65020a23:	jge    0x65020a27
65020a25:	neg    eax
65020a27:	add    eax,DWORD PTR [ebp-0x50]
65020a2a:	cmp    DWORD PTR [ebp-0x60],ecx
65020a2d:	jne    0x65020a32
65020a2f:	add    eax,DWORD PTR [ebp+0x18]
65020a32:	cmp    DWORD PTR [ebp-0x5c],ecx
65020a35:	jne    0x65020a3a
65020a37:	sub    eax,DWORD PTR [ebp+0x1c]
65020a3a:	cmp    eax,0x1450
65020a3f:	jg     0x65020d32
65020a45:	cmp    eax,0xffffebb0
65020a4a:	jl     0x65020d49
65020a50:	mov    esi,0x6502d0a0
65020a55:	sub    esi,0x60
65020a58:	cmp    eax,ecx
65020a5a:	mov    DWORD PTR [ebp-0x54],eax
65020a5d:	je     0x65020d17
65020a63:	jge    0x65020a72
65020a65:	neg    eax
65020a67:	mov    esi,0x6502d200
65020a6c:	mov    DWORD PTR [ebp-0x54],eax
65020a6f:	sub    esi,0x60
65020a72:	cmp    DWORD PTR [ebp+0x14],ecx
65020a75:	jne    0x65020a7b
65020a77:	mov    WORD PTR [ebp-0x3c],cx
65020a7b:	cmp    DWORD PTR [ebp-0x54],ecx
65020a7e:	je     0x65020d17
65020a84:	mov    eax,DWORD PTR [ebp-0x54]
65020a87:	sar    DWORD PTR [ebp-0x54],0x3
65020a8b:	add    esi,0x54
65020a8e:	and    eax,0x7
65020a91:	test   eax,eax
65020a93:	mov    DWORD PTR [ebp-0x4c],esi
65020a96:	je     0x65020d0d
65020a9c:	imul   eax,eax,0xc
65020a9f:	add    eax,esi
65020aa1:	mov    ebx,eax
65020aa3:	cmp    WORD PTR [ebx],0x8000
65020aa8:	mov    DWORD PTR [ebp-0x70],ebx
65020aab:	jb     0x65020ac1
65020aad:	mov    esi,ebx
65020aaf:	lea    edi,[ebp-0x48]
65020ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020ab5:	dec    DWORD PTR [ebp-0x46]
65020ab8:	mov    esi,DWORD PTR [ebp-0x4c]
65020abb:	lea    ebx,[ebp-0x48]
65020abe:	mov    DWORD PTR [ebp-0x70],ebx
65020ac1:	movzx  edx,WORD PTR [ebx+0xa]
65020ac5:	mov    ecx,DWORD PTR [ebp-0x32]
65020ac8:	xor    eax,eax
65020aca:	mov    DWORD PTR [ebp-0x50],eax
65020acd:	mov    DWORD PTR [ebp-0x2c],eax
65020ad0:	mov    DWORD PTR [ebp-0x28],eax
65020ad3:	mov    DWORD PTR [ebp-0x24],eax
65020ad6:	mov    eax,edx
65020ad8:	mov    edi,0x7fff
65020add:	xor    eax,ecx
65020adf:	and    ecx,edi
65020ae1:	and    edx,edi
65020ae3:	and    eax,0x8000
65020ae8:	cmp    cx,0x7fff
65020aed:	lea    edi,[edx+ecx*1]
65020af0:	movzx  edi,di
65020af3:	jae    0x65020cf3
65020af9:	cmp    dx,0x7fff
65020afe:	jae    0x65020cf3
65020b04:	cmp    di,0xbffd
65020b09:	ja     0x65020cf3
65020b0f:	cmp    di,0x3fbf
65020b14:	ja     0x65020b23
65020b16:	xor    eax,eax
65020b18:	mov    DWORD PTR [ebp-0x38],eax
65020b1b:	mov    DWORD PTR [ebp-0x3c],eax
65020b1e:	jmp    0x65020d0a
65020b23:	test   cx,cx
65020b26:	jne    0x65020b47
65020b28:	inc    edi
65020b29:	test   DWORD PTR [ebp-0x34],0x7fffffff
65020b30:	jne    0x65020b47
65020b32:	cmp    DWORD PTR [ebp-0x38],0x0
65020b36:	jne    0x65020b47
65020b38:	cmp    DWORD PTR [ebp-0x3c],0x0
65020b3c:	jne    0x65020b47
65020b3e:	and    WORD PTR [ebp-0x32],cx
65020b42:	jmp    0x65020d0d
65020b47:	xor    ecx,ecx
65020b49:	cmp    dx,cx
65020b4c:	jne    0x65020b6f
65020b4e:	inc    edi
65020b4f:	test   DWORD PTR [ebx+0x8],0x7fffffff
65020b56:	jne    0x65020b6f
65020b58:	cmp    DWORD PTR [ebx+0x4],ecx
65020b5b:	jne    0x65020b6f
65020b5d:	cmp    DWORD PTR [ebx],ecx
65020b5f:	jne    0x65020b6f
65020b61:	mov    DWORD PTR [ebp-0x34],ecx
65020b64:	mov    DWORD PTR [ebp-0x38],ecx
65020b67:	mov    DWORD PTR [ebp-0x3c],ecx
65020b6a:	jmp    0x65020d0d
65020b6f:	and    DWORD PTR [ebp-0x68],ecx
65020b72:	lea    esi,[ebp-0x28]
65020b75:	mov    DWORD PTR [ebp-0x58],0x5
65020b7c:	mov    ecx,DWORD PTR [ebp-0x68]
65020b7f:	mov    edx,DWORD PTR [ebp-0x58]
65020b82:	add    ecx,ecx
65020b84:	test   edx,edx
65020b86:	mov    DWORD PTR [ebp-0x64],edx
65020b89:	jle    0x65020be0
65020b8b:	lea    ecx,[ebp+ecx*1-0x3c]
65020b8f:	add    ebx,0x8
65020b92:	mov    DWORD PTR [ebp-0x5c],ecx
65020b95:	mov    DWORD PTR [ebp-0x60],ebx
65020b98:	mov    ecx,DWORD PTR [ebp-0x60]
65020b9b:	mov    edx,DWORD PTR [ebp-0x5c]
65020b9e:	movzx  edx,WORD PTR [edx]
65020ba1:	movzx  ecx,WORD PTR [ecx]
65020ba4:	and    DWORD PTR [ebp-0x78],0x0
65020ba8:	imul   ecx,edx
65020bab:	mov    edx,DWORD PTR [esi-0x4]
65020bae:	lea    ebx,[edx+ecx*1]
65020bb1:	cmp    ebx,edx
65020bb3:	jb     0x65020bb9
65020bb5:	cmp    ebx,ecx
65020bb7:	jae    0x65020bc0
65020bb9:	mov    DWORD PTR [ebp-0x78],0x1
65020bc0:	cmp    DWORD PTR [ebp-0x78],0x0
65020bc4:	mov    DWORD PTR [esi-0x4],ebx
65020bc7:	je     0x65020bcc
65020bc9:	inc    WORD PTR [esi]
65020bcc:	add    DWORD PTR [ebp-0x5c],0x2
65020bd0:	sub    DWORD PTR [ebp-0x60],0x2
65020bd4:	dec    DWORD PTR [ebp-0x64]
65020bd7:	cmp    DWORD PTR [ebp-0x64],0x0
65020bdb:	jg     0x65020b98
65020bdd:	mov    ebx,DWORD PTR [ebp-0x70]
65020be0:	inc    esi
65020be1:	inc    esi
65020be2:	inc    DWORD PTR [ebp-0x68]
65020be5:	dec    DWORD PTR [ebp-0x58]
65020be8:	cmp    DWORD PTR [ebp-0x58],0x0
65020bec:	jg     0x65020b7c
65020bee:	add    edi,0xc002
65020bf4:	test   di,di
65020bf7:	jle    0x65020c34
65020bf9:	test   DWORD PTR [ebp-0x24],0x80000000
65020c00:	jne    0x65020c2f
65020c02:	mov    esi,DWORD PTR [ebp-0x28]
65020c05:	mov    ecx,DWORD PTR [ebp-0x2c]
65020c08:	shl    DWORD PTR [ebp-0x2c],1
65020c0b:	shr    ecx,0x1f
65020c0e:	mov    edx,esi
65020c10:	add    esi,esi
65020c12:	or     esi,ecx
65020c14:	mov    ecx,DWORD PTR [ebp-0x24]
65020c17:	shr    edx,0x1f
65020c1a:	add    ecx,ecx
65020c1c:	or     ecx,edx
65020c1e:	add    edi,0xffff
65020c24:	test   di,di
65020c27:	mov    DWORD PTR [ebp-0x28],esi
65020c2a:	mov    DWORD PTR [ebp-0x24],ecx
65020c2d:	jg     0x65020bf9
65020c2f:	test   di,di
65020c32:	jg     0x65020c81
65020c34:	add    edi,0xffff
65020c3a:	test   di,di
65020c3d:	jge    0x65020c81
65020c3f:	mov    ecx,edi
65020c41:	neg    ecx
65020c43:	movzx  esi,cx
65020c46:	add    edi,esi
65020c48:	test   BYTE PTR [ebp-0x2c],0x1
65020c4c:	je     0x65020c51
65020c4e:	inc    DWORD PTR [ebp-0x50]
65020c51:	mov    ecx,DWORD PTR [ebp-0x24]
65020c54:	mov    ebx,DWORD PTR [ebp-0x28]
65020c57:	mov    edx,DWORD PTR [ebp-0x28]
65020c5a:	shr    DWORD PTR [ebp-0x24],1
65020c5d:	shl    ecx,0x1f
65020c60:	shr    ebx,1
65020c62:	or     ebx,ecx
65020c64:	mov    ecx,DWORD PTR [ebp-0x2c]
65020c67:	shl    edx,0x1f
65020c6a:	shr    ecx,1
65020c6c:	or     ecx,edx
65020c6e:	dec    esi
65020c6f:	mov    DWORD PTR [ebp-0x28],ebx
65020c72:	mov    DWORD PTR [ebp-0x2c],ecx
65020c75:	jne    0x65020c48
65020c77:	cmp    DWORD PTR [ebp-0x50],esi
65020c7a:	je     0x65020c81
65020c7c:	or     WORD PTR [ebp-0x2c],0x1
65020c81:	cmp    WORD PTR [ebp-0x2c],0x8000
65020c87:	ja     0x65020c9a
65020c89:	mov    ecx,DWORD PTR [ebp-0x2c]
65020c8c:	and    ecx,0x1ffff
65020c92:	cmp    ecx,0x18000
65020c98:	jne    0x65020ccd
65020c9a:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
65020c9e:	jne    0x65020cca
65020ca0:	and    DWORD PTR [ebp-0x2a],0x0
65020ca4:	cmp    DWORD PTR [ebp-0x26],0xffffffff
65020ca8:	jne    0x65020cc5
65020caa:	and    DWORD PTR [ebp-0x26],0x0
65020cae:	cmp    WORD PTR [ebp-0x22],0xffff
65020cb4:	jne    0x65020cbf
65020cb6:	mov    WORD PTR [ebp-0x22],0x8000
65020cbc:	inc    edi
65020cbd:	jmp    0x65020ccd
65020cbf:	inc    WORD PTR [ebp-0x22]
65020cc3:	jmp    0x65020ccd
65020cc5:	inc    DWORD PTR [ebp-0x26]
65020cc8:	jmp    0x65020ccd
65020cca:	inc    DWORD PTR [ebp-0x2a]
65020ccd:	cmp    di,0x7fff
65020cd2:	mov    esi,DWORD PTR [ebp-0x4c]
65020cd5:	jae    0x65020cf3
65020cd7:	mov    cx,WORD PTR [ebp-0x2a]
65020cdb:	mov    WORD PTR [ebp-0x3c],cx
65020cdf:	mov    ecx,DWORD PTR [ebp-0x28]
65020ce2:	mov    DWORD PTR [ebp-0x3a],ecx
65020ce5:	mov    ecx,DWORD PTR [ebp-0x24]
65020ce8:	or     edi,eax
65020cea:	mov    DWORD PTR [ebp-0x36],ecx
65020ced:	mov    WORD PTR [ebp-0x32],di
65020cf1:	jmp    0x65020d0d
65020cf3:	neg    ax
65020cf6:	sbb    eax,eax
65020cf8:	and    DWORD PTR [ebp-0x38],0x0
65020cfc:	and    eax,0x80000000
65020d01:	add    eax,0x7fff8000
65020d06:	and    DWORD PTR [ebp-0x3c],0x0
65020d0a:	mov    DWORD PTR [ebp-0x34],eax
65020d0d:	cmp    DWORD PTR [ebp-0x54],0x0
65020d11:	jne    0x65020a84
65020d17:	mov    eax,DWORD PTR [ebp-0x34]
65020d1a:	movzx  ecx,WORD PTR [ebp-0x3c]
65020d1e:	mov    esi,DWORD PTR [ebp-0x3a]
65020d21:	mov    edx,DWORD PTR [ebp-0x36]
65020d24:	shr    eax,0x10
65020d27:	jmp    0x65020d58
65020d29:	mov    DWORD PTR [ebp-0x6c],0x4
65020d30:	jmp    0x65020d50
65020d32:	xor    esi,esi
65020d34:	mov    eax,0x7fff
65020d39:	mov    edx,0x80000000
65020d3e:	xor    ecx,ecx
65020d40:	mov    DWORD PTR [ebp-0x6c],0x2
65020d47:	jmp    0x65020d58
65020d49:	mov    DWORD PTR [ebp-0x6c],0x1
65020d50:	xor    ecx,ecx
65020d52:	xor    eax,eax
65020d54:	xor    edx,edx
65020d56:	xor    esi,esi
65020d58:	mov    edi,DWORD PTR [ebp-0x7c]
65020d5b:	or     eax,DWORD PTR [ebp-0x74]
65020d5e:	mov    WORD PTR [edi],cx
65020d61:	mov    WORD PTR [edi+0xa],ax
65020d65:	mov    eax,DWORD PTR [ebp-0x6c]
65020d68:	mov    DWORD PTR [edi+0x2],esi
65020d6b:	mov    DWORD PTR [edi+0x6],edx
65020d6e:	mov    ecx,DWORD PTR [ebp-0x4]
65020d71:	pop    edi
65020d72:	pop    esi
65020d73:	xor    ecx,ebp
65020d75:	pop    ebx
65020d76:	call   0x650127bc
65020d7b:	leave  
65020d7c:	ret    
65020d7d:	test   DWORD PTR [edi],eax
65020d7f:	add    ah,BYTE PTR [ebp-0x27]
65020d82:	pop    es
65020d83:	add    ah,BYTE PTR [ebp+0x2f]
65020d86:	or     BYTE PTR [edx],al
65020d88:	bound  ecx,QWORD PTR gs:[eax]
65020d8b:	add    ah,BYTE PTR [ebp-0x59]
65020d8e:	or     BYTE PTR [edx],al
65020d90:	fisttp WORD PTR gs:[eax]
65020d93:	add    ah,BYTE PTR [ebp-0xd]
65020d96:	or     BYTE PTR [edx],al
65020d98:	gs dec esi
65020d9a:	or     DWORD PTR [edx],eax
65020d9c:	cmp    DWORD PTR gs:[ecx],ecx
65020d9f:	add    ah,BYTE PTR [ebp-0x48]
65020da2:	or     DWORD PTR [edx],eax
65020da4:	lods   eax,DWORD PTR gs:[esi]
65020da6:	or     DWORD PTR [edx],eax
65020da8:	gs pop esp
65020daa:	or     DWORD PTR [edx],eax
65020dac:	gs push ebp
65020dae:	mov    ebp,esp
65020db0:	sub    esp,0x74
65020db3:	mov    eax,ds:0x6502c09c
65020db8:	xor    eax,ebp
65020dba:	mov    DWORD PTR [ebp-0x4],eax
65020dbd:	push   ebx
65020dbe:	mov    ebx,DWORD PTR [ebp+0x1c]
65020dc1:	push   esi
65020dc2:	push   edi
65020dc3:	lea    esi,[ebp+0x8]
65020dc6:	lea    edi,[ebp-0x10]
65020dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020dcb:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
65020dcd:	mov    edx,DWORD PTR [ebp-0x8]
65020dd0:	mov    ecx,edx
65020dd2:	mov    eax,0x8000
65020dd7:	and    ecx,eax
65020dd9:	and    edx,0x7fff
65020ddf:	test   cx,cx
65020de2:	mov    DWORD PTR [ebp-0x60],ebx
65020de5:	mov    BYTE PTR [ebp-0x30],0xcc
65020de9:	mov    BYTE PTR [ebp-0x2f],0xcc
65020ded:	mov    BYTE PTR [ebp-0x2e],0xcc
65020df1:	mov    BYTE PTR [ebp-0x2d],0xcc
65020df5:	mov    BYTE PTR [ebp-0x2c],0xcc
65020df9:	mov    BYTE PTR [ebp-0x2b],0xcc
65020dfd:	mov    BYTE PTR [ebp-0x2a],0xcc
65020e01:	mov    BYTE PTR [ebp-0x29],0xcc
65020e05:	mov    BYTE PTR [ebp-0x28],0xcc
65020e09:	mov    BYTE PTR [ebp-0x27],0xcc
65020e0d:	mov    BYTE PTR [ebp-0x26],0xfb
65020e11:	mov    BYTE PTR [ebp-0x25],0x3f
65020e15:	mov    DWORD PTR [ebp-0x74],0x1
65020e1c:	mov    DWORD PTR [ebp-0x6c],ecx
65020e1f:	je     0x65020e27
65020e21:	mov    BYTE PTR [ebx+0x2],0x2d
65020e25:	jmp    0x65020e2b
65020e27:	mov    BYTE PTR [ebx+0x2],0x20
65020e2b:	test   dx,dx
65020e2e:	mov    esi,DWORD PTR [ebp-0xc]
65020e31:	mov    edi,DWORD PTR [ebp-0x10]
65020e34:	jne    0x65020e64
65020e36:	test   esi,esi
65020e38:	jne    0x65020e64
65020e3a:	test   edi,edi
65020e3c:	jne    0x65020e64
65020e3e:	and    WORD PTR [ebx],di
65020e41:	cmp    cx,ax
65020e44:	setne  al
65020e47:	dec    al
65020e49:	and    al,0xd
65020e4b:	add    al,0x20
65020e4d:	mov    BYTE PTR [ebx+0x2],al
65020e50:	mov    BYTE PTR [ebx+0x3],0x1
65020e54:	mov    BYTE PTR [ebx+0x4],0x30
65020e58:	mov    BYTE PTR [ebx+0x5],0x0
65020e5c:	xor    eax,eax
65020e5e:	inc    eax
65020e5f:	jmp    0x6502162b
65020e64:	cmp    dx,0x7fff
65020e69:	jne    0x65020f0d
65020e6f:	mov    eax,0x80000000
65020e74:	cmp    esi,eax
65020e76:	mov    WORD PTR [ebx],0x1
65020e7b:	jne    0x65020e81
65020e7d:	test   edi,edi
65020e7f:	je     0x65020e90
65020e81:	test   esi,0x40000000
65020e87:	jne    0x65020e90
65020e89:	push   0x65026618
65020e8e:	jmp    0x65020ee1
65020e90:	test   cx,cx
65020e93:	je     0x65020ea8
65020e95:	cmp    esi,0xc0000000
65020e9b:	jne    0x65020ea8
65020e9d:	test   edi,edi
65020e9f:	jne    0x65020edc
65020ea1:	push   0x65026610
65020ea6:	jmp    0x65020eb5
65020ea8:	cmp    esi,eax
65020eaa:	jne    0x65020edc
65020eac:	test   edi,edi
65020eae:	jne    0x65020edc
65020eb0:	push   0x65026608
65020eb5:	lea    eax,[ebx+0x4]
65020eb8:	push   0x16
65020eba:	push   eax
65020ebb:	call   0x65013ff4
65020ec0:	add    esp,0xc
65020ec3:	xor    esi,esi
65020ec5:	test   eax,eax
65020ec7:	je     0x65020ed6
65020ec9:	push   esi
65020eca:	push   esi
65020ecb:	push   esi
65020ecc:	push   esi
65020ecd:	push   esi
65020ece:	call   0x650121b3
65020ed3:	add    esp,0x14
65020ed6:	mov    BYTE PTR [ebx+0x3],0x5
65020eda:	jmp    0x65020f06
65020edc:	push   0x65026600
65020ee1:	lea    eax,[ebx+0x4]
65020ee4:	push   0x16
65020ee6:	push   eax
65020ee7:	call   0x65013ff4
65020eec:	add    esp,0xc
65020eef:	xor    esi,esi
65020ef1:	test   eax,eax
65020ef3:	je     0x65020f02
65020ef5:	push   esi
65020ef6:	push   esi
65020ef7:	push   esi
65020ef8:	push   esi
65020ef9:	push   esi
65020efa:	call   0x650121b3
65020eff:	add    esp,0x14
65020f02:	mov    BYTE PTR [ebx+0x3],0x6
65020f06:	xor    eax,eax
65020f08:	jmp    0x6502162b
65020f0d:	movzx  ecx,dx
65020f10:	mov    ebx,ecx
65020f12:	imul   ecx,ecx,0x4d10
65020f18:	shr    ebx,0x8
65020f1b:	mov    eax,esi
65020f1d:	shr    eax,0x18
65020f20:	lea    eax,[ebx+eax*2]
65020f23:	imul   eax,eax,0x4d
65020f26:	lea    eax,[eax+ecx*1-0x134312f4]
65020f2d:	sar    eax,0x10
65020f30:	movzx  ecx,ax
65020f33:	movsx  ebx,cx
65020f36:	mov    DWORD PTR [ebp-0x4c],ecx
65020f39:	xor    eax,eax
65020f3b:	mov    ecx,0x6502d0a0
65020f40:	neg    ebx
65020f42:	sub    ecx,0x60
65020f45:	cmp    ebx,eax
65020f47:	mov    WORD PTR [ebp-0x16],dx
65020f4b:	mov    DWORD PTR [ebp-0x1a],esi
65020f4e:	mov    DWORD PTR [ebp-0x1e],edi
65020f51:	mov    WORD PTR [ebp-0x20],ax
65020f55:	mov    DWORD PTR [ebp-0x68],ecx
65020f58:	je     0x6502120c
65020f5e:	jge    0x65020f6d
65020f60:	mov    ecx,0x6502d200
65020f65:	neg    ebx
65020f67:	sub    ecx,0x60
65020f6a:	mov    DWORD PTR [ebp-0x68],ecx
65020f6d:	cmp    ebx,eax
65020f6f:	je     0x6502120c
65020f75:	add    DWORD PTR [ebp-0x68],0x54
65020f79:	mov    ecx,ebx
65020f7b:	and    ecx,0x7
65020f7e:	sar    ebx,0x3
65020f81:	test   ecx,ecx
65020f83:	je     0x65021202
65020f89:	imul   ecx,ecx,0xc
65020f8c:	add    ecx,DWORD PTR [ebp-0x68]
65020f8f:	cmp    WORD PTR [ecx],0x8000
65020f94:	mov    DWORD PTR [ebp-0x64],ecx
65020f97:	jb     0x65020fac
65020f99:	mov    esi,ecx
65020f9b:	lea    edi,[ebp-0x3c]
65020f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020fa0:	lea    eax,[ebp-0x3c]
65020fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020fa4:	dec    DWORD PTR [ebp-0x3a]
65020fa7:	mov    DWORD PTR [ebp-0x64],eax
65020faa:	mov    ecx,eax
65020fac:	movzx  edi,WORD PTR [ecx+0xa]
65020fb0:	mov    edx,DWORD PTR [ebp-0x16]
65020fb3:	xor    eax,eax
65020fb5:	mov    ecx,edi
65020fb7:	mov    esi,0x7fff
65020fbc:	xor    ecx,edx
65020fbe:	and    edx,esi
65020fc0:	and    edi,esi
65020fc2:	mov    DWORD PTR [ebp-0x48],eax
65020fc5:	mov    DWORD PTR [ebp-0x10],eax
65020fc8:	mov    DWORD PTR [ebp-0xc],eax
65020fcb:	mov    DWORD PTR [ebp-0x8],eax
65020fce:	and    ecx,0x8000
65020fd4:	cmp    dx,si
65020fd7:	lea    eax,[edi+edx*1]
65020fda:	movzx  eax,ax
65020fdd:	jae    0x650211e6
65020fe3:	cmp    di,si
65020fe6:	jae    0x650211e6
65020fec:	cmp    ax,0xbffd
65020ff0:	ja     0x650211e6
65020ff6:	cmp    ax,0x3fbf
65020ffa:	ja     0x6502100c
65020ffc:	xor    eax,eax
65020ffe:	mov    DWORD PTR [ebp-0x18],eax
65021001:	mov    DWORD PTR [ebp-0x1c],eax
65021004:	mov    DWORD PTR [ebp-0x20],eax
65021007:	jmp    0x65021202
6502100c:	xor    esi,esi
6502100e:	cmp    dx,si
65021011:	jne    0x65021030
65021013:	inc    eax
65021014:	test   DWORD PTR [ebp-0x18],0x7fffffff
6502101b:	jne    0x65021030
6502101d:	cmp    DWORD PTR [ebp-0x1c],esi
65021020:	jne    0x65021030
65021022:	cmp    DWORD PTR [ebp-0x20],esi
65021025:	jne    0x65021030
65021027:	mov    WORD PTR [ebp-0x16],si
6502102b:	jmp    0x65021202
65021030:	cmp    di,si
65021033:	jne    0x65021059
65021035:	mov    edx,DWORD PTR [ebp-0x64]
65021038:	inc    eax
65021039:	test   DWORD PTR [edx+0x8],0x7fffffff
65021040:	jne    0x65021059
65021042:	cmp    DWORD PTR [edx+0x4],esi
65021045:	jne    0x65021059
65021047:	cmp    DWORD PTR [edx],esi
65021049:	jne    0x65021059
6502104b:	mov    DWORD PTR [ebp-0x18],esi
6502104e:	mov    DWORD PTR [ebp-0x1c],esi
65021051:	mov    DWORD PTR [ebp-0x20],esi
65021054:	jmp    0x65021202
65021059:	lea    edi,[ebp-0xc]
6502105c:	mov    DWORD PTR [ebp-0x5c],esi
6502105f:	mov    DWORD PTR [ebp-0x44],edi
65021062:	mov    DWORD PTR [ebp-0x40],0x5
65021069:	mov    edx,DWORD PTR [ebp-0x5c]
6502106c:	mov    esi,DWORD PTR [ebp-0x40]
6502106f:	add    edx,edx
65021071:	test   esi,esi
65021073:	mov    DWORD PTR [ebp-0x50],esi
65021076:	jle    0x650210d0
65021078:	lea    edx,[ebp+edx*1-0x20]
6502107c:	mov    DWORD PTR [ebp-0x58],edx
6502107f:	mov    edx,DWORD PTR [ebp-0x64]
65021082:	add    edx,0x8
65021085:	mov    DWORD PTR [ebp-0x54],edx
65021088:	mov    edx,DWORD PTR [ebp-0x58]
6502108b:	mov    esi,DWORD PTR [ebp-0x54]
6502108e:	movzx  esi,WORD PTR [esi]
65021091:	movzx  edx,WORD PTR [edx]
65021094:	mov    edi,DWORD PTR [edi-0x4]
65021097:	imul   edx,esi
6502109a:	and    DWORD PTR [ebp-0x70],0x0
6502109e:	lea    esi,[edi+edx*1]
650210a1:	cmp    esi,edi
650210a3:	jb     0x650210a9
650210a5:	cmp    esi,edx
650210a7:	jae    0x650210b0
650210a9:	mov    DWORD PTR [ebp-0x70],0x1
650210b0:	cmp    DWORD PTR [ebp-0x70],0x0
650210b4:	mov    edi,DWORD PTR [ebp-0x44]
650210b7:	mov    DWORD PTR [edi-0x4],esi
650210ba:	je     0x650210bf
650210bc:	inc    WORD PTR [edi]
650210bf:	add    DWORD PTR [ebp-0x58],0x2
650210c3:	sub    DWORD PTR [ebp-0x54],0x2
650210c7:	dec    DWORD PTR [ebp-0x50]
650210ca:	cmp    DWORD PTR [ebp-0x50],0x0
650210ce:	jg     0x65021088
650210d0:	inc    edi
650210d1:	inc    edi
650210d2:	inc    DWORD PTR [ebp-0x5c]
650210d5:	dec    DWORD PTR [ebp-0x40]
650210d8:	cmp    DWORD PTR [ebp-0x40],0x0
650210dc:	mov    DWORD PTR [ebp-0x44],edi
650210df:	jg     0x65021069
650210e1:	add    eax,0xc002
650210e6:	test   ax,ax
650210e9:	jle    0x65021126
650210eb:	test   DWORD PTR [ebp-0x8],0x80000000
650210f2:	jne    0x65021121
650210f4:	mov    edx,DWORD PTR [ebp-0x10]
650210f7:	mov    edi,DWORD PTR [ebp-0xc]
650210fa:	mov    esi,DWORD PTR [ebp-0xc]
650210fd:	shl    DWORD PTR [ebp-0x10],1
65021100:	shr    edx,0x1f
65021103:	add    edi,edi
65021105:	or     edi,edx
65021107:	mov    edx,DWORD PTR [ebp-0x8]
6502110a:	shr    esi,0x1f
6502110d:	add    edx,edx
6502110f:	or     edx,esi
65021111:	add    eax,0xffff
65021116:	test   ax,ax
65021119:	mov    DWORD PTR [ebp-0xc],edi
6502111c:	mov    DWORD PTR [ebp-0x8],edx
6502111f:	jg     0x650210eb
65021121:	test   ax,ax
65021124:	jg     0x65021178
65021126:	add    eax,0xffff
6502112b:	test   ax,ax
6502112e:	jge    0x65021178
65021130:	mov    edx,eax
65021132:	neg    edx
65021134:	movzx  edx,dx
65021137:	mov    DWORD PTR [ebp-0x44],edx
6502113a:	add    eax,edx
6502113c:	test   BYTE PTR [ebp-0x10],0x1
65021140:	je     0x65021145
65021142:	inc    DWORD PTR [ebp-0x48]
65021145:	mov    edx,DWORD PTR [ebp-0x8]
65021148:	mov    edi,DWORD PTR [ebp-0xc]
6502114b:	mov    esi,DWORD PTR [ebp-0xc]
6502114e:	shr    DWORD PTR [ebp-0x8],1
65021151:	shl    edx,0x1f
65021154:	shr    edi,1
65021156:	or     edi,edx
65021158:	mov    edx,DWORD PTR [ebp-0x10]
6502115b:	shl    esi,0x1f
6502115e:	shr    edx,1
65021160:	or     edx,esi
65021162:	dec    DWORD PTR [ebp-0x44]
65021165:	mov    DWORD PTR [ebp-0xc],edi
65021168:	mov    DWORD PTR [ebp-0x10],edx
6502116b:	jne    0x6502113c
6502116d:	cmp    DWORD PTR [ebp-0x48],0x0
65021171:	je     0x65021178
65021173:	or     WORD PTR [ebp-0x10],0x1
65021178:	cmp    WORD PTR [ebp-0x10],0x8000
6502117e:	ja     0x65021191
65021180:	mov    edx,DWORD PTR [ebp-0x10]
65021183:	and    edx,0x1ffff
65021189:	cmp    edx,0x18000
6502118f:	jne    0x650211c4
65021191:	cmp    DWORD PTR [ebp-0xe],0xffffffff
65021195:	jne    0x650211c1
65021197:	and    DWORD PTR [ebp-0xe],0x0
6502119b:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6502119f:	jne    0x650211bc
650211a1:	and    DWORD PTR [ebp-0xa],0x0
650211a5:	cmp    WORD PTR [ebp-0x6],0xffff
650211ab:	jne    0x650211b6
650211ad:	mov    WORD PTR [ebp-0x6],0x8000
650211b3:	inc    eax
650211b4:	jmp    0x650211c4
650211b6:	inc    WORD PTR [ebp-0x6]
650211ba:	jmp    0x650211c4
650211bc:	inc    DWORD PTR [ebp-0xa]
650211bf:	jmp    0x650211c4
650211c1:	inc    DWORD PTR [ebp-0xe]
650211c4:	cmp    ax,0x7fff
650211c8:	jae    0x650211e6
650211ca:	mov    dx,WORD PTR [ebp-0xe]
650211ce:	mov    WORD PTR [ebp-0x20],dx
650211d2:	mov    edx,DWORD PTR [ebp-0xc]
650211d5:	mov    DWORD PTR [ebp-0x1e],edx
650211d8:	mov    edx,DWORD PTR [ebp-0x8]
650211db:	or     eax,ecx
650211dd:	mov    DWORD PTR [ebp-0x1a],edx
650211e0:	mov    WORD PTR [ebp-0x16],ax
650211e4:	jmp    0x65021202
650211e6:	neg    cx
650211e9:	sbb    ecx,ecx
650211eb:	and    DWORD PTR [ebp-0x1c],0x0
650211ef:	and    ecx,0x80000000
650211f5:	add    ecx,0x7fff8000
650211fb:	and    DWORD PTR [ebp-0x20],0x0
650211ff:	mov    DWORD PTR [ebp-0x18],ecx
65021202:	test   ebx,ebx
65021204:	jne    0x65020f75
6502120a:	xor    eax,eax
6502120c:	mov    ecx,DWORD PTR [ebp-0x18]
6502120f:	shr    ecx,0x10
65021212:	cmp    cx,0x3fff
65021217:	mov    ebx,0x7fff
6502121c:	jb     0x6502146a
65021222:	mov    esi,DWORD PTR [ebp-0x26]
65021225:	inc    DWORD PTR [ebp-0x4c]
65021228:	movzx  edx,cx
6502122b:	mov    ecx,esi
6502122d:	xor    ecx,edx
6502122f:	and    edx,ebx
65021231:	and    esi,ebx
65021233:	and    ecx,0x8000
65021239:	cmp    dx,bx
6502123c:	lea    edi,[esi+edx*1]
6502123f:	mov    DWORD PTR [ebp-0x58],eax
65021242:	mov    DWORD PTR [ebp-0x10],eax
65021245:	mov    DWORD PTR [ebp-0xc],eax
65021248:	mov    DWORD PTR [ebp-0x8],eax
6502124b:	movzx  edi,di
6502124e:	jae    0x65021450
65021254:	cmp    si,bx
65021257:	jae    0x65021450
6502125d:	cmp    di,0xbffd
65021262:	ja     0x65021450
65021268:	cmp    di,0x3fbf
6502126d:	ja     0x65021277
6502126f:	mov    DWORD PTR [ebp-0x18],eax
65021272:	jmp    0x65021464
65021277:	cmp    dx,ax
6502127a:	jne    0x65021299
6502127c:	inc    edi
6502127d:	test   DWORD PTR [ebp-0x18],0x7fffffff
65021284:	jne    0x65021299
65021286:	cmp    DWORD PTR [ebp-0x1c],eax
65021289:	jne    0x65021299
6502128b:	cmp    DWORD PTR [ebp-0x20],eax
6502128e:	jne    0x65021299
65021290:	mov    WORD PTR [ebp-0x16],ax
65021294:	jmp    0x6502146a
65021299:	cmp    si,ax
6502129c:	jne    0x650212b2
6502129e:	inc    edi
6502129f:	test   DWORD PTR [ebp-0x28],0x7fffffff
650212a6:	jne    0x650212b2
650212a8:	cmp    DWORD PTR [ebp-0x2c],eax
650212ab:	jne    0x650212b2
650212ad:	cmp    DWORD PTR [ebp-0x30],eax
650212b0:	je     0x6502126f
650212b2:	and    DWORD PTR [ebp-0x54],0x0
650212b6:	lea    eax,[ebp-0xc]
650212b9:	mov    DWORD PTR [ebp-0x40],0x5
650212c0:	mov    edx,DWORD PTR [ebp-0x54]
650212c3:	mov    esi,DWORD PTR [ebp-0x40]
650212c6:	add    edx,edx
650212c8:	test   esi,esi
650212ca:	mov    DWORD PTR [ebp-0x50],esi
650212cd:	jle    0x65021321
650212cf:	lea    esi,[ebp-0x28]
650212d2:	lea    edx,[ebp+edx*1-0x20]
650212d6:	mov    DWORD PTR [ebp-0x5c],esi
650212d9:	mov    DWORD PTR [ebp-0x48],edx
650212dc:	mov    edx,DWORD PTR [ebp-0x5c]
650212df:	mov    esi,DWORD PTR [ebp-0x48]
650212e2:	movzx  esi,WORD PTR [esi]
650212e5:	movzx  edx,WORD PTR [edx]
650212e8:	and    DWORD PTR [ebp-0x44],0x0
650212ec:	imul   edx,esi
650212ef:	mov    esi,DWORD PTR [eax-0x4]
650212f2:	lea    ebx,[esi+edx*1]
650212f5:	cmp    ebx,esi
650212f7:	jb     0x650212fd
650212f9:	cmp    ebx,edx
650212fb:	jae    0x65021304
650212fd:	mov    DWORD PTR [ebp-0x44],0x1
65021304:	cmp    DWORD PTR [ebp-0x44],0x0
65021308:	mov    DWORD PTR [eax-0x4],ebx
6502130b:	je     0x65021310
6502130d:	inc    WORD PTR [eax]
65021310:	add    DWORD PTR [ebp-0x48],0x2
65021314:	sub    DWORD PTR [ebp-0x5c],0x2
65021318:	dec    DWORD PTR [ebp-0x50]
6502131b:	cmp    DWORD PTR [ebp-0x50],0x0
6502131f:	jg     0x650212dc
65021321:	inc    eax
65021322:	inc    eax
65021323:	inc    DWORD PTR [ebp-0x54]
65021326:	dec    DWORD PTR [ebp-0x40]
65021329:	cmp    DWORD PTR [ebp-0x40],0x0
6502132d:	jg     0x650212c0
6502132f:	add    edi,0xc002
65021335:	xor    eax,eax
65021337:	cmp    di,ax
6502133a:	jle    0x65021378
6502133c:	test   DWORD PTR [ebp-0x8],0x80000000
65021343:	jne    0x65021373
65021345:	mov    edx,DWORD PTR [ebp-0x10]
65021348:	mov    ebx,DWORD PTR [ebp-0xc]
6502134b:	mov    esi,DWORD PTR [ebp-0xc]
6502134e:	shl    DWORD PTR [ebp-0x10],1
65021351:	shr    edx,0x1f
65021354:	add    ebx,ebx
65021356:	or     ebx,edx
65021358:	mov    edx,DWORD PTR [ebp-0x8]
6502135b:	shr    esi,0x1f
6502135e:	add    edx,edx
65021360:	or     edx,esi
65021362:	add    edi,0xffff
65021368:	cmp    di,ax
6502136b:	mov    DWORD PTR [ebp-0xc],ebx
6502136e:	mov    DWORD PTR [ebp-0x8],edx
65021371:	jg     0x6502133c
65021373:	cmp    di,ax
65021376:	jg     0x650213c5
65021378:	add    edi,0xffff
6502137e:	cmp    di,ax
65021381:	jge    0x650213c5
65021383:	mov    eax,edi
65021385:	neg    eax
65021387:	movzx  eax,ax
6502138a:	add    edi,eax
6502138c:	test   BYTE PTR [ebp-0x10],0x1
65021390:	je     0x65021395
65021392:	inc    DWORD PTR [ebp-0x58]
65021395:	mov    edx,DWORD PTR [ebp-0x8]
65021398:	mov    ebx,DWORD PTR [ebp-0xc]
6502139b:	mov    esi,DWORD PTR [ebp-0xc]
6502139e:	shr    DWORD PTR [ebp-0x8],1
650213a1:	shl    edx,0x1f
650213a4:	shr    ebx,1
650213a6:	or     ebx,edx
650213a8:	mov    edx,DWORD PTR [ebp-0x10]
650213ab:	shl    esi,0x1f
650213ae:	shr    edx,1
650213b0:	or     edx,esi
650213b2:	dec    eax
650213b3:	mov    DWORD PTR [ebp-0xc],ebx
650213b6:	mov    DWORD PTR [ebp-0x10],edx
650213b9:	jne    0x6502138c
650213bb:	cmp    DWORD PTR [ebp-0x58],eax
650213be:	je     0x650213c5
650213c0:	or     WORD PTR [ebp-0x10],0x1
650213c5:	cmp    WORD PTR [ebp-0x10],0x8000
650213cb:	ja     0x650213de
650213cd:	mov    edx,DWORD PTR [ebp-0x10]
650213d0:	and    edx,0x1ffff
650213d6:	cmp    edx,0x18000
650213dc:	jne    0x6502140f
650213de:	cmp    DWORD PTR [ebp-0xe],0xffffffff
650213e2:	jne    0x6502140c
650213e4:	cmp    DWORD PTR [ebp-0xa],0xffffffff
650213e8:	mov    DWORD PTR [ebp-0xe],eax
650213eb:	jne    0x65021407
650213ed:	cmp    WORD PTR [ebp-0x6],0xffff
650213f3:	mov    DWORD PTR [ebp-0xa],eax
650213f6:	jne    0x65021401
650213f8:	mov    WORD PTR [ebp-0x6],0x8000
650213fe:	inc    edi
650213ff:	jmp    0x6502140f
65021401:	inc    WORD PTR [ebp-0x6]
65021405:	jmp    0x6502140f
65021407:	inc    DWORD PTR [ebp-0xa]
6502140a:	jmp    0x6502140f
6502140c:	inc    DWORD PTR [ebp-0xe]
6502140f:	cmp    di,0x7fff
65021414:	jb     0x65021434
65021416:	neg    cx
65021419:	mov    DWORD PTR [ebp-0x1c],eax
6502141c:	mov    DWORD PTR [ebp-0x20],eax
6502141f:	sbb    ecx,ecx
65021421:	and    ecx,0x80000000
65021427:	add    ecx,0x7fff8000
6502142d:	mov    DWORD PTR [ebp-0x18],ecx
65021430:	xor    eax,eax
65021432:	jmp    0x6502146a
65021434:	mov    ax,WORD PTR [ebp-0xe]
65021438:	mov    WORD PTR [ebp-0x20],ax
6502143c:	mov    eax,DWORD PTR [ebp-0xc]
6502143f:	mov    DWORD PTR [ebp-0x1e],eax
65021442:	mov    eax,DWORD PTR [ebp-0x8]
65021445:	or     edi,ecx
65021447:	mov    DWORD PTR [ebp-0x1a],eax
6502144a:	mov    WORD PTR [ebp-0x16],di
6502144e:	jmp    0x65021430
65021450:	neg    cx
65021453:	sbb    ecx,ecx
65021455:	and    ecx,0x80000000
6502145b:	add    ecx,0x7fff8000
65021461:	mov    DWORD PTR [ebp-0x18],ecx
65021464:	mov    DWORD PTR [ebp-0x1c],eax
65021467:	mov    DWORD PTR [ebp-0x20],eax
6502146a:	test   BYTE PTR [ebp+0x18],0x1
6502146e:	mov    edx,DWORD PTR [ebp-0x60]
65021471:	mov    ecx,DWORD PTR [ebp-0x4c]
65021474:	mov    WORD PTR [edx],cx
65021477:	je     0x650214ab
65021479:	movsx  ecx,cx
6502147c:	add    DWORD PTR [ebp+0x14],ecx
6502147f:	cmp    DWORD PTR [ebp+0x14],eax
65021482:	jg     0x650214ab
65021484:	and    WORD PTR [edx],0x0
65021488:	cmp    WORD PTR [ebp-0x6c],0x8000
6502148e:	mov    BYTE PTR [edx+0x3],0x1
65021492:	setne  al
65021495:	dec    al
65021497:	and    al,0xd
65021499:	add    al,0x20
6502149b:	mov    BYTE PTR [edx+0x2],al
6502149e:	mov    BYTE PTR [edx+0x4],0x30
650214a2:	mov    BYTE PTR [edx+0x5],0x0
650214a6:	jmp    0x65020e5c
650214ab:	push   0x15
650214ad:	pop    ecx
650214ae:	cmp    DWORD PTR [ebp+0x14],ecx
650214b1:	jle    0x650214b6
650214b3:	mov    DWORD PTR [ebp+0x14],ecx
650214b6:	mov    esi,DWORD PTR [ebp-0x18]
650214b9:	shr    esi,0x10
650214bc:	push   0x8
650214be:	sub    esi,0x3ffe
650214c4:	mov    WORD PTR [ebp-0x16],ax
650214c8:	pop    ebx
650214c9:	mov    eax,DWORD PTR [ebp-0x20]
650214cc:	mov    edi,DWORD PTR [ebp-0x1c]
650214cf:	mov    ecx,DWORD PTR [ebp-0x1c]
650214d2:	shl    DWORD PTR [ebp-0x20],1
650214d5:	shr    eax,0x1f
650214d8:	add    edi,edi
650214da:	or     edi,eax
650214dc:	mov    eax,DWORD PTR [ebp-0x18]
650214df:	shr    ecx,0x1f
650214e2:	add    eax,eax
650214e4:	or     eax,ecx
650214e6:	dec    ebx
650214e7:	mov    DWORD PTR [ebp-0x1c],edi
650214ea:	mov    DWORD PTR [ebp-0x18],eax
650214ed:	jne    0x650214c9
650214ef:	test   esi,esi
650214f1:	jge    0x65021525
650214f3:	neg    esi
650214f5:	and    esi,0xff
650214fb:	jle    0x65021525
650214fd:	mov    eax,DWORD PTR [ebp-0x18]
65021500:	mov    edi,DWORD PTR [ebp-0x1c]
65021503:	mov    ecx,DWORD PTR [ebp-0x1c]
65021506:	shr    DWORD PTR [ebp-0x18],1
65021509:	shl    eax,0x1f
6502150c:	shr    edi,1
6502150e:	or     edi,eax
65021510:	mov    eax,DWORD PTR [ebp-0x20]
65021513:	shl    ecx,0x1f
65021516:	shr    eax,1
65021518:	or     eax,ecx
6502151a:	dec    esi
6502151b:	test   esi,esi
6502151d:	mov    DWORD PTR [ebp-0x1c],edi
65021520:	mov    DWORD PTR [ebp-0x20],eax
65021523:	jg     0x650214fd
65021525:	mov    eax,DWORD PTR [ebp+0x14]
65021528:	inc    eax
65021529:	test   eax,eax
6502152b:	lea    ebx,[edx+0x4]
6502152e:	mov    DWORD PTR [ebp-0x40],ebx
65021531:	mov    DWORD PTR [ebp-0x4c],eax
65021534:	jle    0x650215ef
6502153a:	mov    edx,DWORD PTR [ebp-0x20]
6502153d:	mov    eax,DWORD PTR [ebp-0x1c]
65021540:	lea    esi,[ebp-0x20]
65021543:	lea    edi,[ebp-0x3c]
65021546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021549:	shl    DWORD PTR [ebp-0x20],1
6502154c:	mov    edi,DWORD PTR [ebp-0x20]
6502154f:	shl    DWORD PTR [ebp-0x20],1
65021552:	shr    edx,0x1f
65021555:	lea    ecx,[eax+eax*1]
65021558:	or     ecx,edx
6502155a:	mov    edx,DWORD PTR [ebp-0x18]
6502155d:	mov    esi,eax
6502155f:	shr    esi,0x1f
65021562:	add    edx,edx
65021564:	or     edx,esi
65021566:	mov    eax,ecx
65021568:	lea    esi,[ecx+ecx*1]
6502156b:	shr    eax,0x1f
6502156e:	lea    ecx,[edx+edx*1]
65021571:	mov    edx,DWORD PTR [ebp-0x3c]
65021574:	shr    edi,0x1f
65021577:	or     ecx,eax
65021579:	mov    eax,DWORD PTR [ebp-0x20]
6502157c:	or     esi,edi
6502157e:	lea    edi,[edx+eax*1]
65021581:	cmp    edi,eax
65021583:	jb     0x65021589
65021585:	cmp    edi,edx
65021587:	jae    0x650215a1
65021589:	lea    eax,[esi+0x1]
6502158c:	xor    edx,edx
6502158e:	cmp    eax,esi
65021590:	jb     0x65021597
65021592:	cmp    eax,0x1
65021595:	jae    0x6502159a
65021597:	xor    edx,edx
65021599:	inc    edx
6502159a:	test   edx,edx
6502159c:	mov    esi,eax
6502159e:	je     0x650215a1
650215a0:	inc    ecx
650215a1:	mov    eax,DWORD PTR [ebp-0x38]
650215a4:	lea    edx,[eax+esi*1]
650215a7:	cmp    edx,esi
650215a9:	mov    DWORD PTR [ebp-0x44],edx
650215ac:	jb     0x650215b2
650215ae:	cmp    edx,eax
650215b0:	jae    0x650215b3
650215b2:	inc    ecx
650215b3:	add    ecx,DWORD PTR [ebp-0x34]
650215b6:	shr    edx,0x1f
650215b9:	add    ecx,ecx
650215bb:	or     ecx,edx
650215bd:	lea    esi,[edi+edi*1]
650215c0:	mov    DWORD PTR [ebp-0x20],esi
650215c3:	mov    esi,DWORD PTR [ebp-0x44]
650215c6:	mov    DWORD PTR [ebp-0x18],ecx
650215c9:	shr    ecx,0x18
650215cc:	add    esi,esi
650215ce:	add    cl,0x30
650215d1:	mov    eax,edi
650215d3:	shr    eax,0x1f
650215d6:	or     esi,eax
650215d8:	mov    BYTE PTR [ebx],cl
650215da:	inc    ebx
650215db:	dec    DWORD PTR [ebp-0x4c]
650215de:	cmp    DWORD PTR [ebp-0x4c],0x0
650215e2:	mov    DWORD PTR [ebp-0x1c],esi
650215e5:	mov    BYTE PTR [ebp-0x15],0x0
650215e9:	jg     0x6502153a
650215ef:	dec    ebx
650215f0:	mov    al,BYTE PTR [ebx]
650215f2:	dec    ebx
650215f3:	cmp    al,0x35
650215f5:	jge    0x65021605
650215f7:	mov    ecx,DWORD PTR [ebp-0x40]
650215fa:	jmp    0x65021640
650215fc:	cmp    BYTE PTR [ebx],0x39
650215ff:	jne    0x6502160a
65021601:	mov    BYTE PTR [ebx],0x30
65021604:	dec    ebx
65021605:	cmp    ebx,DWORD PTR [ebp-0x40]
65021608:	jae    0x650215fc
6502160a:	cmp    ebx,DWORD PTR [ebp-0x40]
6502160d:	mov    eax,DWORD PTR [ebp-0x60]
65021610:	jae    0x65021616
65021612:	inc    ebx
65021613:	inc    WORD PTR [eax]
65021616:	inc    BYTE PTR [ebx]
65021618:	sub    bl,al
6502161a:	sub    bl,0x3
6502161d:	movsx  ecx,bl
65021620:	mov    BYTE PTR [eax+0x3],bl
65021623:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
65021628:	mov    eax,DWORD PTR [ebp-0x74]
6502162b:	mov    ecx,DWORD PTR [ebp-0x4]
6502162e:	pop    edi
6502162f:	pop    esi
65021630:	xor    ecx,ebp
65021632:	pop    ebx
65021633:	call   0x650127bc
65021638:	leave  
65021639:	ret    
6502163a:	cmp    BYTE PTR [ebx],0x30
6502163d:	jne    0x65021644
6502163f:	dec    ebx
65021640:	cmp    ebx,ecx
65021642:	jae    0x6502163a
65021644:	cmp    ebx,ecx
65021646:	mov    eax,DWORD PTR [ebp-0x60]
65021649:	jae    0x65021618
6502164b:	and    WORD PTR [eax],0x0
6502164f:	cmp    WORD PTR [ebp-0x6c],0x8000
65021655:	mov    BYTE PTR [eax+0x3],0x1
65021659:	setne  dl
6502165c:	dec    dl
6502165e:	and    dl,0xd
65021661:	add    dl,0x20
65021664:	mov    BYTE PTR [eax+0x2],dl
65021667:	mov    BYTE PTR [ecx],0x30
6502166a:	mov    BYTE PTR [eax+0x5],0x0
6502166e:	jmp    0x65020e5c
65021673:	xor    eax,eax
65021675:	test   bl,0x10
65021678:	je     0x6502167b
6502167a:	inc    eax
6502167b:	test   bl,0x8
6502167e:	je     0x65021683
65021680:	or     eax,0x4
65021683:	test   bl,0x4
65021686:	je     0x6502168b
65021688:	or     eax,0x8
6502168b:	test   bl,0x2
6502168e:	je     0x65021693
65021690:	or     eax,0x10
65021693:	test   bl,0x1
65021696:	je     0x6502169b
65021698:	or     eax,0x20
6502169b:	test   ebx,0x80000
650216a1:	je     0x650216a6
650216a3:	or     eax,0x2
650216a6:	mov    ecx,ebx
650216a8:	mov    edx,0x300
650216ad:	and    ecx,edx
650216af:	push   esi
650216b0:	mov    esi,0x200
650216b5:	je     0x650216da
650216b7:	cmp    ecx,0x100
650216bd:	je     0x650216d5
650216bf:	cmp    ecx,esi
650216c1:	je     0x650216ce
650216c3:	cmp    ecx,edx
650216c5:	jne    0x650216da
650216c7:	or     eax,0xc00
650216cc:	jmp    0x650216da
650216ce:	or     eax,0x800
650216d3:	jmp    0x650216da
650216d5:	or     eax,0x400
650216da:	mov    ecx,ebx
650216dc:	and    ecx,0x30000
650216e2:	je     0x650216f0
650216e4:	cmp    ecx,0x10000
650216ea:	jne    0x650216f2
650216ec:	or     eax,esi
650216ee:	jmp    0x650216f2
650216f0:	or     eax,edx
650216f2:	test   ebx,0x40000
650216f8:	pop    esi
650216f9:	je     0x65021700
650216fb:	or     eax,0x1000
65021700:	ret    
65021701:	xor    eax,eax
65021703:	test   dl,0x10
65021706:	je     0x6502170d
65021708:	mov    eax,0x80
6502170d:	test   dl,0x8
65021710:	push   ebx
65021711:	push   esi
65021712:	push   edi
65021713:	mov    ebx,0x200
65021718:	je     0x6502171c
6502171a:	or     eax,ebx
6502171c:	test   dl,0x4
6502171f:	je     0x65021726
65021721:	or     eax,0x400
65021726:	test   dl,0x2
65021729:	je     0x65021730
6502172b:	or     eax,0x800
65021730:	test   dl,0x1
65021733:	je     0x6502173a
65021735:	or     eax,0x1000
6502173a:	test   edx,0x80000
65021740:	mov    edi,0x100
65021745:	je     0x65021749
65021747:	or     eax,edi
65021749:	mov    ecx,edx
6502174b:	mov    esi,0x300
65021750:	and    ecx,esi
65021752:	je     0x65021773
65021754:	cmp    ecx,edi
65021756:	je     0x6502176e
65021758:	cmp    ecx,ebx
6502175a:	je     0x65021767
6502175c:	cmp    ecx,esi
6502175e:	jne    0x65021773
65021760:	or     eax,0x6000
65021765:	jmp    0x65021773
65021767:	or     eax,0x4000
6502176c:	jmp    0x65021773
6502176e:	or     eax,0x2000
65021773:	mov    ecx,0x3000000
65021778:	pop    edi
65021779:	and    edx,ecx
6502177b:	cmp    edx,0x1000000
65021781:	pop    esi
65021782:	pop    ebx
65021783:	je     0x6502179b
65021785:	cmp    edx,0x2000000
6502178b:	je     0x65021797
6502178d:	cmp    edx,ecx
6502178f:	jne    0x650217a0
65021791:	or     eax,0x8000
65021796:	ret    
65021797:	or     eax,0x40
6502179a:	ret    
6502179b:	or     eax,0x8040
650217a0:	ret    
650217a1:	sub    esp,0x10
650217a4:	push   ebx
650217a5:	push   ebp
650217a6:	push   esi
650217a7:	push   edi
650217a8:	fstcw  WORD PTR [esp+0x14]
650217ad:	mov    ebx,DWORD PTR [esp+0x14]
650217b1:	xor    edx,edx
650217b3:	test   bl,0x1
650217b6:	je     0x650217bb
650217b8:	push   0x10
650217ba:	pop    edx
650217bb:	test   bl,0x4
650217be:	je     0x650217c3
650217c0:	or     edx,0x8
650217c3:	test   bl,0x8
650217c6:	je     0x650217cb
650217c8:	or     edx,0x4
650217cb:	test   bl,0x10
650217ce:	je     0x650217d3
650217d0:	or     edx,0x2
650217d3:	test   bl,0x20
650217d6:	je     0x650217db
650217d8:	or     edx,0x1
650217db:	test   bl,0x2
650217de:	je     0x650217e6
650217e0:	or     edx,0x80000
650217e6:	movzx  ecx,bx
650217e9:	mov    eax,ecx
650217eb:	mov    edi,0xc00
650217f0:	and    eax,edi
650217f2:	mov    ebp,0x300
650217f7:	mov    esi,0x200
650217fc:	je     0x6502181e
650217fe:	cmp    eax,0x400
65021803:	je     0x65021818
65021805:	cmp    eax,0x800
6502180a:	je     0x65021814
6502180c:	cmp    eax,edi
6502180e:	jne    0x6502181e
65021810:	or     edx,ebp
65021812:	jmp    0x6502181e
65021814:	or     edx,esi
65021816:	jmp    0x6502181e
65021818:	or     edx,0x100
6502181e:	and    ecx,ebp
65021820:	je     0x6502182e
65021822:	cmp    ecx,esi
65021824:	jne    0x65021834
65021826:	or     edx,0x10000
6502182c:	jmp    0x65021834
6502182e:	or     edx,0x20000
65021834:	test   bx,0x1000
65021839:	je     0x65021841
6502183b:	or     edx,0x40000
65021841:	mov    esi,DWORD PTR [esp+0x28]
65021845:	mov    ecx,DWORD PTR [esp+0x24]
65021849:	mov    eax,esi
6502184b:	not    eax
6502184d:	and    eax,edx
6502184f:	and    ecx,esi
65021851:	or     eax,ecx
65021853:	cmp    eax,edx
65021855:	mov    DWORD PTR [esp+0x1c],eax
65021859:	je     0x65021909
6502185f:	mov    ebx,eax
65021861:	call   0x65021673
65021866:	movzx  eax,ax
65021869:	mov    DWORD PTR [esp+0x10],eax
6502186d:	fldcw  WORD PTR [esp+0x10]
65021871:	fstcw  WORD PTR [esp+0x10]
65021876:	mov    ebx,DWORD PTR [esp+0x10]
6502187a:	xor    edx,edx
6502187c:	test   bl,0x1
6502187f:	je     0x65021884
65021881:	push   0x10
65021883:	pop    edx
65021884:	test   bl,0x4
65021887:	je     0x6502188c
65021889:	or     edx,0x8
6502188c:	test   bl,0x8
6502188f:	je     0x65021894
65021891:	or     edx,0x4
65021894:	test   bl,0x10
65021897:	je     0x6502189c
65021899:	or     edx,0x2
6502189c:	test   bl,0x20
6502189f:	je     0x650218a4
650218a1:	or     edx,0x1
650218a4:	test   bl,0x2
650218a7:	je     0x650218af
650218a9:	or     edx,0x80000
650218af:	movzx  ecx,bx
650218b2:	mov    eax,ecx
650218b4:	and    eax,edi
650218b6:	je     0x650218dc
650218b8:	cmp    eax,0x400
650218bd:	je     0x650218d6
650218bf:	cmp    eax,0x800
650218c4:	je     0x650218ce
650218c6:	cmp    eax,edi
650218c8:	jne    0x650218dc
650218ca:	or     edx,ebp
650218cc:	jmp    0x650218dc
650218ce:	or     edx,0x200
650218d4:	jmp    0x650218dc
650218d6:	or     edx,0x100
650218dc:	and    ecx,ebp
650218de:	je     0x650218f0
650218e0:	cmp    ecx,0x200
650218e6:	jne    0x650218f6
650218e8:	or     edx,0x10000
650218ee:	jmp    0x650218f6
650218f0:	or     edx,0x20000
650218f6:	test   bx,0x1000
650218fb:	je     0x65021903
650218fd:	or     edx,0x40000
65021903:	mov    eax,edx
65021905:	mov    DWORD PTR [esp+0x1c],edx
65021909:	cmp    DWORD PTR ds:0x65031564,0x0
65021910:	je     0x65021a9c
65021916:	and    esi,0x308031f
6502191c:	mov    edi,esi
6502191e:	stmxcsr DWORD PTR [esp+0x18]
65021923:	mov    eax,DWORD PTR [esp+0x18]
65021927:	xor    esi,esi
65021929:	test   al,al
6502192b:	jns    0x65021930
6502192d:	push   0x10
6502192f:	pop    esi
65021930:	test   ax,0x200
65021934:	je     0x65021939
65021936:	or     esi,0x8
65021939:	test   ax,0x400
6502193d:	je     0x65021942
6502193f:	or     esi,0x4
65021942:	test   ax,0x800
65021946:	je     0x6502194b
65021948:	or     esi,0x2
6502194b:	test   ax,0x1000
6502194f:	je     0x65021954
65021951:	or     esi,0x1
65021954:	test   ax,0x100
65021958:	je     0x65021960
6502195a:	or     esi,0x80000
65021960:	mov    ecx,eax
65021962:	mov    ebp,0x6000
65021967:	and    ecx,ebp
65021969:	je     0x65021995
6502196b:	cmp    ecx,0x2000
65021971:	je     0x6502198f
65021973:	cmp    ecx,0x4000
65021979:	je     0x65021987
6502197b:	cmp    ecx,ebp
6502197d:	jne    0x65021995
6502197f:	or     esi,0x300
65021985:	jmp    0x65021995
65021987:	or     esi,0x200
6502198d:	jmp    0x65021995
6502198f:	or     esi,0x100
65021995:	mov    ebx,0x8040
6502199a:	and    eax,ebx
6502199c:	sub    eax,0x40
6502199f:	je     0x650219bd
650219a1:	sub    eax,0x7fc0
650219a6:	je     0x650219b5
650219a8:	sub    eax,0x40
650219ab:	jne    0x650219c3
650219ad:	or     esi,0x1000000
650219b3:	jmp    0x650219c3
650219b5:	or     esi,0x3000000
650219bb:	jmp    0x650219c3
650219bd:	or     esi,0x2000000
650219c3:	mov    edx,edi
650219c5:	and    edi,DWORD PTR [esp+0x24]
650219c9:	not    edx
650219cb:	and    edx,esi
650219cd:	or     edx,edi
650219cf:	cmp    edx,esi
650219d1:	jne    0x650219da
650219d3:	mov    eax,esi
650219d5:	jmp    0x65021a85
650219da:	call   0x65021701
650219df:	push   eax
650219e0:	mov    DWORD PTR [esp+0x2c],eax
650219e4:	call   0x65021c70
650219e9:	pop    ecx
650219ea:	stmxcsr DWORD PTR [esp+0x28]
650219ef:	mov    eax,DWORD PTR [esp+0x28]
650219f3:	xor    edx,edx
650219f5:	test   al,al
650219f7:	jns    0x650219fc
650219f9:	push   0x10
650219fb:	pop    edx
650219fc:	mov    edi,0x200
65021a01:	test   edi,eax
65021a03:	je     0x65021a08
65021a05:	or     edx,0x8
65021a08:	test   ax,0x400
65021a0c:	je     0x65021a11
65021a0e:	or     edx,0x4
65021a11:	test   ax,0x800
65021a15:	je     0x65021a1a
65021a17:	or     edx,0x2
65021a1a:	test   ax,0x1000
65021a1e:	je     0x65021a23
65021a20:	or     edx,0x1
65021a23:	mov    esi,0x100
65021a28:	test   esi,eax
65021a2a:	je     0x65021a32
65021a2c:	or     edx,0x80000
65021a32:	mov    ecx,eax
65021a34:	and    ecx,ebp
65021a36:	je     0x65021a5a
65021a38:	cmp    ecx,0x2000
65021a3e:	je     0x65021a58
65021a40:	cmp    ecx,0x4000
65021a46:	je     0x65021a54
65021a48:	cmp    ecx,ebp
65021a4a:	jne    0x65021a5a
65021a4c:	or     edx,0x300
65021a52:	jmp    0x65021a5a
65021a54:	or     edx,edi
65021a56:	jmp    0x65021a5a
65021a58:	or     edx,esi
65021a5a:	and    eax,ebx
65021a5c:	sub    eax,0x40
65021a5f:	je     0x65021a7d
65021a61:	sub    eax,0x7fc0
65021a66:	je     0x65021a75
65021a68:	sub    eax,0x40
65021a6b:	jne    0x65021a83
65021a6d:	or     edx,0x1000000
65021a73:	jmp    0x65021a83
65021a75:	or     edx,0x3000000
65021a7b:	jmp    0x65021a83
65021a7d:	or     edx,0x2000000
65021a83:	mov    eax,edx
65021a85:	mov    ecx,DWORD PTR [esp+0x1c]
65021a89:	mov    edx,eax
65021a8b:	xor    edx,ecx
65021a8d:	or     eax,ecx
65021a8f:	test   edx,0x8031f
65021a95:	je     0x65021a9c
65021a97:	or     eax,0x80000000
65021a9c:	pop    edi
65021a9d:	pop    esi
65021a9e:	pop    ebp
65021a9f:	pop    ebx
65021aa0:	add    esp,0x10
65021aa3:	ret    
65021aa4:	push   ebp
65021aa5:	mov    ebp,esp
65021aa7:	sub    esp,0x18
65021aaa:	mov    eax,ds:0x6502c09c
65021aaf:	xor    eax,ebp
65021ab1:	mov    DWORD PTR [ebp-0x4],eax
65021ab4:	mov    eax,DWORD PTR [ebp+0x10]
65021ab7:	push   ebx
65021ab8:	push   esi
65021ab9:	xor    esi,esi
65021abb:	cmp    DWORD PTR [ebp+0xc],esi
65021abe:	push   edi
65021abf:	mov    DWORD PTR [ebp-0x18],0x404e
65021ac6:	mov    DWORD PTR [eax],esi
65021ac8:	mov    DWORD PTR [eax+0x4],esi
65021acb:	mov    DWORD PTR [eax+0x8],esi
65021ace:	jbe    0x65021c1a
65021ad4:	mov    edx,DWORD PTR [eax]
65021ad6:	mov    ebx,DWORD PTR [eax+0x4]
65021ad9:	mov    esi,eax
65021adb:	lea    edi,[ebp-0x10]
65021ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021ae1:	mov    ecx,edx
65021ae3:	shr    ecx,0x1f
65021ae6:	lea    edi,[edx+edx*1]
65021ae9:	lea    edx,[ebx+ebx*1]
65021aec:	or     edx,ecx
65021aee:	mov    ecx,DWORD PTR [eax+0x8]
65021af1:	mov    esi,ebx
65021af3:	shr    esi,0x1f
65021af6:	add    ecx,ecx
65021af8:	or     ecx,esi
65021afa:	mov    DWORD PTR [ebp-0x14],edi
65021afd:	mov    esi,edi
65021aff:	and    DWORD PTR [ebp-0x14],0x0
65021b03:	mov    ebx,edx
65021b05:	shr    ebx,0x1f
65021b08:	add    ecx,ecx
65021b0a:	shr    edi,0x1f
65021b0d:	or     ecx,ebx
65021b0f:	mov    ebx,DWORD PTR [ebp-0x10]
65021b12:	add    esi,esi
65021b14:	add    edx,edx
65021b16:	or     edx,edi
65021b18:	lea    edi,[esi+ebx*1]
65021b1b:	cmp    edi,esi
65021b1d:	mov    DWORD PTR [eax],esi
65021b1f:	mov    DWORD PTR [eax+0x4],edx
65021b22:	mov    DWORD PTR [eax+0x8],ecx
65021b25:	jb     0x65021b2b
65021b27:	cmp    edi,ebx
65021b29:	jae    0x65021b32
65021b2b:	mov    DWORD PTR [ebp-0x14],0x1
65021b32:	xor    ebx,ebx
65021b34:	cmp    DWORD PTR [ebp-0x14],ebx
65021b37:	mov    DWORD PTR [eax],edi
65021b39:	je     0x65021b55
65021b3b:	lea    esi,[edx+0x1]
65021b3e:	cmp    esi,edx
65021b40:	jb     0x65021b47
65021b42:	cmp    esi,0x1
65021b45:	jae    0x65021b4a
65021b47:	xor    ebx,ebx
65021b49:	inc    ebx
65021b4a:	test   ebx,ebx
65021b4c:	mov    DWORD PTR [eax+0x4],esi
65021b4f:	je     0x65021b55
65021b51:	inc    ecx
65021b52:	mov    DWORD PTR [eax+0x8],ecx
65021b55:	mov    ecx,DWORD PTR [eax+0x4]
65021b58:	mov    edx,DWORD PTR [ebp-0xc]
65021b5b:	lea    ebx,[ecx+edx*1]
65021b5e:	xor    esi,esi
65021b60:	cmp    ebx,ecx
65021b62:	jb     0x65021b68
65021b64:	cmp    ebx,edx
65021b66:	jae    0x65021b6b
65021b68:	xor    esi,esi
65021b6a:	inc    esi
65021b6b:	test   esi,esi
65021b6d:	mov    DWORD PTR [eax+0x4],ebx
65021b70:	je     0x65021b75
65021b72:	inc    DWORD PTR [eax+0x8]
65021b75:	mov    ecx,DWORD PTR [ebp-0x8]
65021b78:	add    DWORD PTR [eax+0x8],ecx
65021b7b:	and    DWORD PTR [ebp-0x14],0x0
65021b7f:	lea    ecx,[edi+edi*1]
65021b82:	mov    edx,edi
65021b84:	shr    edx,0x1f
65021b87:	lea    edi,[ebx+ebx*1]
65021b8a:	or     edi,edx
65021b8c:	mov    edx,DWORD PTR [eax+0x8]
65021b8f:	mov    esi,ebx
65021b91:	shr    esi,0x1f
65021b94:	lea    ebx,[edx+edx*1]
65021b97:	mov    edx,DWORD PTR [ebp+0x8]
65021b9a:	or     ebx,esi
65021b9c:	mov    DWORD PTR [eax],ecx
65021b9e:	mov    DWORD PTR [eax+0x4],edi
65021ba1:	mov    DWORD PTR [eax+0x8],ebx
65021ba4:	movsx  edx,BYTE PTR [edx]
65021ba7:	lea    esi,[ecx+edx*1]
65021baa:	cmp    esi,ecx
65021bac:	mov    DWORD PTR [ebp-0x10],edx
65021baf:	jb     0x65021bb5
65021bb1:	cmp    esi,edx
65021bb3:	jae    0x65021bbc
65021bb5:	mov    DWORD PTR [ebp-0x14],0x1
65021bbc:	cmp    DWORD PTR [ebp-0x14],0x0
65021bc0:	mov    DWORD PTR [eax],esi
65021bc2:	je     0x65021be0
65021bc4:	lea    ecx,[edi+0x1]
65021bc7:	xor    edx,edx
65021bc9:	cmp    ecx,edi
65021bcb:	jb     0x65021bd2
65021bcd:	cmp    ecx,0x1
65021bd0:	jae    0x65021bd5
65021bd2:	xor    edx,edx
65021bd4:	inc    edx
65021bd5:	test   edx,edx
65021bd7:	mov    DWORD PTR [eax+0x4],ecx
65021bda:	je     0x65021be0
65021bdc:	inc    ebx
65021bdd:	mov    DWORD PTR [eax+0x8],ebx
65021be0:	dec    DWORD PTR [ebp+0xc]
65021be3:	inc    DWORD PTR [ebp+0x8]
65021be6:	cmp    DWORD PTR [ebp+0xc],0x0
65021bea:	ja     0x65021ad4
65021bf0:	xor    esi,esi
65021bf2:	jmp    0x65021c1a
65021bf4:	mov    ecx,DWORD PTR [eax+0x4]
65021bf7:	mov    edx,ecx
65021bf9:	shr    edx,0x10
65021bfc:	mov    DWORD PTR [eax+0x8],edx
65021bff:	mov    edx,DWORD PTR [eax]
65021c01:	mov    edi,edx
65021c03:	shl    ecx,0x10
65021c06:	shr    edi,0x10
65021c09:	or     ecx,edi
65021c0b:	shl    edx,0x10
65021c0e:	add    DWORD PTR [ebp-0x18],0xfff0
65021c15:	mov    DWORD PTR [eax+0x4],ecx
65021c18:	mov    DWORD PTR [eax],edx
65021c1a:	cmp    DWORD PTR [eax+0x8],esi
65021c1d:	je     0x65021bf4
65021c1f:	mov    ebx,0x8000
65021c24:	test   DWORD PTR [eax+0x8],ebx
65021c27:	jne    0x65021c59
65021c29:	mov    esi,DWORD PTR [eax]
65021c2b:	mov    edi,DWORD PTR [eax+0x4]
65021c2e:	add    DWORD PTR [ebp-0x18],0xffff
65021c35:	mov    ecx,esi
65021c37:	add    esi,esi
65021c39:	shr    ecx,0x1f
65021c3c:	mov    DWORD PTR [eax],esi
65021c3e:	lea    esi,[edi+edi*1]
65021c41:	or     esi,ecx
65021c43:	mov    ecx,DWORD PTR [eax+0x8]
65021c46:	mov    edx,edi
65021c48:	shr    edx,0x1f
65021c4b:	add    ecx,ecx
65021c4d:	or     ecx,edx
65021c4f:	test   ebx,ecx
65021c51:	mov    DWORD PTR [eax+0x4],esi
65021c54:	mov    DWORD PTR [eax+0x8],ecx
65021c57:	je     0x65021c29
65021c59:	mov    cx,WORD PTR [ebp-0x18]
65021c5d:	mov    WORD PTR [eax+0xa],cx
65021c61:	mov    ecx,DWORD PTR [ebp-0x4]
65021c64:	pop    edi
65021c65:	pop    esi
65021c66:	xor    ecx,ebp
65021c68:	pop    ebx
65021c69:	call   0x650127bc
65021c6e:	leave  
65021c6f:	ret    
65021c70:	push   0x8
65021c72:	push   0x65029db8
65021c77:	call   0x65013d00
65021c7c:	xor    eax,eax
65021c7e:	cmp    DWORD PTR ds:0x65031564,eax
65021c84:	je     0x65021cdc
65021c86:	test   BYTE PTR [ebp+0x8],0x40
65021c8a:	je     0x65021cd4
65021c8c:	cmp    DWORD PTR ds:0x6502d374,eax
65021c92:	je     0x65021cd4
65021c94:	mov    DWORD PTR [ebp-0x4],eax
65021c97:	ldmxcsr DWORD PTR [ebp+0x8]
65021c9b:	jmp    0x65021ccb
65021c9d:	mov    eax,DWORD PTR [ebp-0x14]
65021ca0:	mov    eax,DWORD PTR [eax]
65021ca2:	mov    eax,DWORD PTR [eax]
65021ca4:	cmp    eax,0xc0000005
65021ca9:	je     0x65021cb5
65021cab:	cmp    eax,0xc000001d
65021cb0:	je     0x65021cb5
65021cb2:	xor    eax,eax
65021cb4:	ret    
65021cb5:	xor    eax,eax
65021cb7:	inc    eax
65021cb8:	ret    
65021cb9:	mov    esp,DWORD PTR [ebp-0x18]
65021cbc:	and    DWORD PTR ds:0x6502d374,0x0
65021cc3:	and    DWORD PTR [ebp+0x8],0xffffffbf
65021cc7:	ldmxcsr DWORD PTR [ebp+0x8]
65021ccb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65021cd2:	jmp    0x65021cdc
65021cd4:	and    DWORD PTR [ebp+0x8],0xffffffbf
65021cd8:	ldmxcsr DWORD PTR [ebp+0x8]
65021cdc:	call   0x65013d45
65021ce1:	ret    
65021ce2:	int3   
65021ce3:	int3   
65021ce4:	int3   
65021ce5:	int3   
65021ce6:	int3   
65021ce7:	int3   
65021ce8:	int3   
65021ce9:	int3   
65021cea:	int3   
65021ceb:	int3   
65021cec:	int3   
65021ced:	int3   
65021cee:	int3   
65021cef:	int3   
65021cf0:	mov    eax,DWORD PTR [ebp-0x10]
65021cf3:	and    eax,0x1
65021cf6:	je     0x65021d08
65021cfc:	and    DWORD PTR [ebp-0x10],0xfffffffe
65021d00:	mov    ecx,DWORD PTR [ebp+0x4]
65021d03:	jmp    0x65001990
65021d08:	ret    
65021d09:	mov    edx,DWORD PTR [esp+0x8]
65021d0d:	lea    eax,[edx-0xc]
65021d10:	mov    ecx,DWORD PTR [edx-0x10]
65021d13:	xor    ecx,eax
65021d15:	call   0x650127bc
65021d1a:	mov    eax,0x65029378
65021d1f:	jmp    0x6501247e
65021d24:	int3   
65021d25:	int3   
65021d26:	int3   
65021d27:	int3   
65021d28:	int3   
65021d29:	int3   
65021d2a:	int3   
65021d2b:	int3   
65021d2c:	int3   
65021d2d:	int3   
65021d2e:	int3   
65021d2f:	int3   
65021d30:	mov    eax,DWORD PTR [ebp-0x10]
65021d33:	and    eax,0x1
65021d36:	je     0x65021d48
65021d3c:	and    DWORD PTR [ebp-0x10],0xfffffffe
65021d40:	mov    ecx,DWORD PTR [ebp+0x4]
65021d43:	jmp    0x65001990
65021d48:	ret    
65021d49:	mov    edx,DWORD PTR [esp+0x8]
65021d4d:	lea    eax,[edx-0x10]
65021d50:	mov    ecx,DWORD PTR [edx-0x14]
65021d53:	xor    ecx,eax
65021d55:	call   0x650127bc
65021d5a:	mov    eax,0x650293a4
65021d5f:	jmp    0x6501247e
65021d64:	int3   
65021d65:	int3   
65021d66:	int3   
65021d67:	int3   
65021d68:	int3   
65021d69:	int3   
65021d6a:	int3   
65021d6b:	int3   
65021d6c:	int3   
65021d6d:	int3   
65021d6e:	int3   
65021d6f:	int3   
65021d70:	lea    ecx,[ebp-0x50]
65021d73:	jmp    0x650016b0
65021d78:	mov    edx,DWORD PTR [esp+0x8]
65021d7c:	lea    eax,[edx-0x44]
65021d7f:	mov    ecx,DWORD PTR [edx-0x48]
65021d82:	xor    ecx,eax
65021d84:	call   0x650127bc
65021d89:	mov    eax,0x65029428
65021d8e:	jmp    0x6501247e
65021d93:	int3   
65021d94:	int3   
65021d95:	int3   
65021d96:	int3   
65021d97:	int3   
65021d98:	int3   
65021d99:	int3   
65021d9a:	int3   
65021d9b:	int3   
65021d9c:	int3   
65021d9d:	int3   
65021d9e:	int3   
65021d9f:	int3   
65021da0:	lea    ecx,[ebp-0x98]
65021da6:	jmp    0x6500f6a0
65021dab:	lea    ecx,[ebp-0x94]
65021db1:	jmp    0x650016b0
65021db6:	lea    ecx,[ebp-0x78]
65021db9:	jmp    0x650016b0
65021dbe:	mov    edx,DWORD PTR [esp+0x8]
65021dc2:	lea    eax,[edx-0xa8]
65021dc8:	mov    ecx,DWORD PTR [edx-0xac]
65021dce:	xor    ecx,eax
65021dd0:	call   0x650127bc
65021dd5:	mov    eax,0x65029474
65021dda:	jmp    0x6501247e
65021ddf:	int3   
65021de0:	lea    ecx,[ebp+0x38]
65021de3:	jmp    0x6500f820
65021de8:	lea    ecx,[ebp-0x38]
65021deb:	jmp    0x6500f6c0
65021df0:	lea    ecx,[ebp+0x10]
65021df3:	jmp    0x65001990
65021df8:	lea    ecx,[ebp+0x14]
65021dfb:	jmp    0x65001990
65021e00:	lea    ecx,[ebp+0x18]
65021e03:	jmp    0x65001990
65021e08:	lea    ecx,[ebp+0xc]
65021e0b:	jmp    0x65001990
65021e10:	lea    ecx,[ebp+0x8]
65021e13:	jmp    0x65001990
65021e18:	lea    ecx,[ebp+0x4]
65021e1b:	jmp    0x65001990
65021e20:	lea    ecx,[ebp+0x1c]
65021e23:	jmp    0x650016b0
65021e28:	mov    edx,DWORD PTR [esp+0x8]
65021e2c:	lea    eax,[edx+0xc]
65021e2f:	mov    ecx,DWORD PTR [edx-0x80]
65021e32:	xor    ecx,eax
65021e34:	call   0x650127bc
65021e39:	mov    ecx,DWORD PTR [edx+0x7c]
65021e3c:	xor    ecx,eax
65021e3e:	call   0x650127bc
65021e43:	mov    eax,0x650294e4
65021e48:	jmp    0x6501247e
65021e4d:	int3   
65021e4e:	int3   
65021e4f:	int3   
65021e50:	mov    eax,ds:0x6502d4e8
65021e55:	and    eax,0xfffffffe
65021e58:	mov    ds:0x6502d4e8,eax
65021e5d:	ret    
65021e5e:	mov    edx,DWORD PTR [esp+0x8]
65021e62:	lea    eax,[edx-0x10]
65021e65:	mov    ecx,DWORD PTR [edx-0x14]
65021e68:	xor    ecx,eax
65021e6a:	call   0x650127bc
65021e6f:	mov    eax,0x650295a8
65021e74:	jmp    0x6501247e
65021e79:	int3   
65021e7a:	int3   
65021e7b:	int3   
65021e7c:	int3   
65021e7d:	int3   
65021e7e:	int3   
65021e7f:	int3   
65021e80:	lea    ecx,[ebp-0x14]
65021e83:	jmp    0x6500a460
65021e88:	mov    edx,DWORD PTR [esp+0x8]
65021e8c:	lea    eax,[edx+0xc]
65021e8f:	mov    ecx,DWORD PTR [edx-0x18]
65021e92:	xor    ecx,eax
65021e94:	call   0x650127bc
65021e99:	mov    eax,0x65029608
65021e9e:	jmp    0x6501247e
65021ea3:	int3   
65021ea4:	int3   
65021ea5:	int3   
65021ea6:	int3   
65021ea7:	int3   
65021ea8:	int3   
65021ea9:	int3   
65021eaa:	int3   
65021eab:	int3   
65021eac:	int3   
65021ead:	int3   
65021eae:	int3   
65021eaf:	int3   
65021eb0:	lea    ecx,[ebp-0x10]
65021eb3:	jmp    0x65001990
65021eb8:	mov    edx,DWORD PTR [esp+0x8]
65021ebc:	lea    eax,[edx-0x8]
65021ebf:	mov    ecx,DWORD PTR [edx-0xc]
65021ec2:	xor    ecx,eax
65021ec4:	call   0x650127bc
65021ec9:	mov    eax,0x65029634
65021ece:	jmp    0x6501247e
65021ed3:	int3   
65021ed4:	int3   
65021ed5:	int3   
65021ed6:	int3   
65021ed7:	int3   
65021ed8:	int3   
65021ed9:	int3   
65021eda:	int3   
65021edb:	int3   
65021edc:	int3   
65021edd:	int3   
65021ede:	int3   
65021edf:	int3   
65021ee0:	lea    ecx,[ebp-0x10]
65021ee3:	jmp    0x650016e0
65021ee8:	lea    ecx,[ebp-0x14]
65021eeb:	jmp    0x65001990
65021ef0:	mov    edx,DWORD PTR [esp+0x8]
65021ef4:	lea    eax,[edx-0x14]
65021ef7:	mov    ecx,DWORD PTR [edx-0x18]
65021efa:	xor    ecx,eax
65021efc:	call   0x650127bc
65021f01:	mov    eax,0x65029668
65021f06:	jmp    0x6501247e
65021f0b:	int3   
65021f0c:	int3   
65021f0d:	int3   
65021f0e:	int3   
65021f0f:	int3   
65021f10:	mov    eax,DWORD PTR [ebp-0x50]
65021f13:	and    eax,0x1
65021f16:	je     0x65021f28
65021f1c:	and    DWORD PTR [ebp-0x50],0xfffffffe
65021f20:	mov    ecx,DWORD PTR [ebp-0x58]
65021f23:	jmp    0x65001990
65021f28:	ret    
65021f29:	lea    ecx,[ebp-0x4c]
65021f2c:	jmp    0x65001990
65021f31:	lea    ecx,[ebp-0x54]
65021f34:	jmp    0x65001990
65021f39:	lea    ecx,[ebp-0x10]
65021f3c:	jmp    0x65001990
65021f41:	lea    ecx,[ebp-0x10]
65021f44:	jmp    0x65001990
65021f49:	lea    ecx,[ebp-0x28]
65021f4c:	jmp    0x65001990
65021f51:	lea    ecx,[ebp-0x48]
65021f54:	jmp    0x65001990
65021f59:	lea    ecx,[ebp-0x24]
65021f5c:	jmp    0x65001990
65021f61:	lea    ecx,[ebp-0x14]
65021f64:	jmp    0x65001990
65021f69:	lea    ecx,[ebp-0x18]
65021f6c:	jmp    0x65001990
65021f71:	lea    ecx,[ebp-0x10]
65021f74:	jmp    0x65001990
65021f79:	lea    ecx,[ebp-0x10]
65021f7c:	jmp    0x65001990
65021f81:	lea    ecx,[ebp-0x18]
65021f84:	jmp    0x65001990
65021f89:	lea    ecx,[ebp-0x14]
65021f8c:	jmp    0x65001990
65021f91:	lea    ecx,[ebp-0x10]
65021f94:	jmp    0x65001990
65021f99:	lea    ecx,[ebp-0x3c]
65021f9c:	jmp    0x65010530
65021fa1:	lea    ecx,[ebp-0x14]
65021fa4:	jmp    0x65001990
65021fa9:	lea    ecx,[ebp-0x10]
65021fac:	jmp    0x65001990
65021fb1:	lea    ecx,[ebp-0x20]
65021fb4:	jmp    0x65001990
65021fb9:	lea    ecx,[ebp-0x10]
65021fbc:	jmp    0x65001990
65021fc1:	lea    ecx,[ebp-0x18]
65021fc4:	jmp    0x65001990
65021fc9:	lea    ecx,[ebp-0x14]
65021fcc:	jmp    0x65001990
65021fd1:	lea    ecx,[ebp-0x10]
65021fd4:	jmp    0x65001990
65021fd9:	lea    ecx,[ebp-0x1c]
65021fdc:	jmp    0x65001990
65021fe1:	lea    ecx,[ebp-0x2c]
65021fe4:	jmp    0x65001990
65021fe9:	lea    ecx,[ebp-0x18]
65021fec:	jmp    0x65001990
65021ff1:	lea    ecx,[ebp-0x10]
65021ff4:	jmp    0x65001990
65021ff9:	lea    ecx,[ebp-0x2c]
65021ffc:	jmp    0x65001990
65022001:	lea    ecx,[ebp-0x1c]
65022004:	jmp    0x65001990
65022009:	lea    ecx,[ebp-0x1c]
6502200c:	jmp    0x65001990
65022011:	mov    edx,DWORD PTR [esp+0x8]
65022015:	lea    eax,[edx+0xc]
65022018:	mov    ecx,DWORD PTR [edx-0xa0]
6502201e:	xor    ecx,eax
65022020:	call   0x650127bc
65022025:	mov    ecx,DWORD PTR [edx+0x130]
6502202b:	xor    ecx,eax
6502202d:	call   0x650127bc
65022032:	mov    eax,0x6502968c
65022037:	jmp    0x6501247e
6502203c:	int3   
6502203d:	int3   
6502203e:	int3   
6502203f:	int3   
65022040:	lea    ecx,[ebp-0x30]
65022043:	jmp    0x65001990
65022048:	lea    ecx,[ebp-0x2c]
6502204b:	jmp    0x650016b0
65022050:	lea    ecx,[ebp-0x5c]
65022053:	jmp    0x650016b0
65022058:	mov    edx,DWORD PTR [esp+0x8]
6502205c:	lea    eax,[edx+0xc]
6502205f:	mov    ecx,DWORD PTR [edx-0x60]
65022062:	xor    ecx,eax
65022064:	call   0x650127bc
65022069:	mov    ecx,DWORD PTR [edx-0x4]
6502206c:	xor    ecx,eax
6502206e:	call   0x650127bc
65022073:	mov    eax,0x650297b8
65022078:	jmp    0x6501247e
6502207d:	lea    ecx,[ebp-0x28]
65022080:	jmp    0x650016b0
65022085:	mov    edx,DWORD PTR [esp+0x8]
65022089:	lea    eax,[edx+0xc]
6502208c:	mov    ecx,DWORD PTR [edx-0x54]
6502208f:	xor    ecx,eax
65022091:	call   0x650127bc
65022096:	mov    eax,0x65029804
6502209b:	jmp    0x6501247e
650220a0:	lea    ecx,[ebp-0x28]
650220a3:	jmp    0x650016b0
650220a8:	mov    edx,DWORD PTR [esp+0x8]
650220ac:	lea    eax,[edx+0xc]
650220af:	mov    ecx,DWORD PTR [edx-0x54]
650220b2:	xor    ecx,eax
650220b4:	call   0x650127bc
650220b9:	mov    eax,0x65029830
650220be:	jmp    0x6501247e
650220c3:	mov    edx,DWORD PTR [esp+0x8]
650220c7:	lea    eax,[edx+0xc]
650220ca:	mov    ecx,DWORD PTR [edx-0x14]
650220cd:	xor    ecx,eax
650220cf:	call   0x650127bc
650220d4:	mov    eax,0x650299d8
650220d9:	jmp    0x6501247e
650220de:	int3   
650220df:	int3   
650220e0:	mov    eax,DWORD PTR [ebp+0x4]
650220e3:	push   eax
650220e4:	call   0x65011f62
650220e9:	pop    ecx
650220ea:	ret    
650220eb:	mov    edx,DWORD PTR [esp+0x8]
650220ef:	lea    eax,[edx-0x8]
650220f2:	mov    ecx,DWORD PTR [edx-0xc]
650220f5:	xor    ecx,eax
650220f7:	call   0x650127bc
650220fc:	mov    eax,0x65029f30
65022101:	jmp    0x6501247e
65022106:	int3   
65022107:	int3   
65022108:	int3   
65022109:	int3   
6502210a:	int3   
6502210b:	int3   
6502210c:	int3   
6502210d:	int3   
6502210e:	int3   
6502210f:	int3   
65022110:	mov    eax,DWORD PTR [ebp+0x4]
65022113:	push   eax
65022114:	call   0x65011f62
65022119:	pop    ecx
6502211a:	ret    
6502211b:	mov    edx,DWORD PTR [esp+0x8]
6502211f:	lea    eax,[edx-0x8]
65022122:	mov    ecx,DWORD PTR [edx-0xc]
65022125:	xor    ecx,eax
65022127:	call   0x650127bc
6502212c:	mov    eax,0x65029f5c
65022131:	jmp    0x6501247e
65022136:	int3   
65022137:	int3   
65022138:	int3   
65022139:	int3   
6502213a:	int3   
6502213b:	int3   
6502213c:	int3   
6502213d:	int3   
6502213e:	int3   
6502213f:	int3   
65022140:	mov    eax,DWORD PTR [ebp-0x10]
65022143:	push   eax
65022144:	call   0x65011f62
65022149:	pop    ecx
6502214a:	ret    
6502214b:	mov    edx,DWORD PTR [esp+0x8]
6502214f:	lea    eax,[edx-0x8]
65022152:	mov    ecx,DWORD PTR [edx-0xc]
65022155:	xor    ecx,eax
65022157:	call   0x650127bc
6502215c:	mov    eax,0x65029f88
65022161:	jmp    0x6501247e
65022166:	int3   
65022167:	int3   
65022168:	int3   
65022169:	int3   
6502216a:	int3   
6502216b:	int3   
6502216c:	int3   
6502216d:	int3   
6502216e:	int3   
6502216f:	int3   
65022170:	mov    eax,DWORD PTR [ebp-0x10]
65022173:	push   eax
65022174:	call   0x65011f62
65022179:	pop    ecx
6502217a:	ret    
6502217b:	mov    edx,DWORD PTR [esp+0x8]
6502217f:	lea    eax,[edx-0xc]
65022182:	mov    ecx,DWORD PTR [edx-0x10]
65022185:	xor    ecx,eax
65022187:	call   0x650127bc
6502218c:	mov    eax,0x65029fb4
65022191:	jmp    0x6501247e
65022196:	int3   
65022197:	int3   
65022198:	int3   
65022199:	int3   
6502219a:	int3   
6502219b:	int3   
6502219c:	int3   
6502219d:	int3   
6502219e:	int3   
6502219f:	int3   
650221a0:	lea    ecx,[ebp-0x144]
650221a6:	jmp    0x65002770
650221ab:	mov    edx,DWORD PTR [esp+0x8]
650221af:	lea    eax,[edx-0x144]
650221b5:	mov    ecx,DWORD PTR [edx-0x148]
650221bb:	xor    ecx,eax
650221bd:	call   0x650127bc
650221c2:	add    eax,0xc
650221c5:	mov    ecx,DWORD PTR [edx-0x4]
650221c8:	xor    ecx,eax
650221ca:	call   0x650127bc
650221cf:	mov    eax,0x65029fe0
650221d4:	jmp    0x6501247e
650221d9:	int3   
650221da:	int3   
650221db:	int3   
650221dc:	int3   
650221dd:	int3   
650221de:	int3   
650221df:	int3   
650221e0:	lea    ecx,[ebp-0x20]
650221e3:	jmp    0x6500b080
650221e8:	mov    edx,DWORD PTR [esp+0x8]
650221ec:	lea    eax,[edx-0x1c]
650221ef:	mov    ecx,DWORD PTR [edx-0x20]
650221f2:	xor    ecx,eax
650221f4:	call   0x650127bc
650221f9:	mov    eax,0x6502a00c
650221fe:	jmp    0x6501247e
65022203:	int3   
65022204:	int3   
65022205:	int3   
65022206:	int3   
65022207:	int3   
65022208:	int3   
65022209:	int3   
6502220a:	int3   
6502220b:	int3   
6502220c:	int3   
6502220d:	int3   
6502220e:	int3   
6502220f:	int3   
65022210:	mov    eax,DWORD PTR [ebp-0x10]
65022213:	and    eax,0x1
65022216:	je     0x65022228
6502221c:	and    DWORD PTR [ebp-0x10],0xfffffffe
65022220:	mov    edi,DWORD PTR [ebp+0x8]
65022223:	jmp    0x6500ad10
65022228:	ret    
65022229:	mov    edx,DWORD PTR [esp+0x8]
6502222d:	lea    eax,[edx-0x8]
65022230:	mov    ecx,DWORD PTR [edx-0xc]
65022233:	xor    ecx,eax
65022235:	call   0x650127bc
6502223a:	mov    eax,0x6502a038
6502223f:	jmp    0x6501247e
65022244:	int3   
65022245:	int3   
65022246:	int3   
65022247:	int3   
65022248:	int3   
65022249:	int3   
6502224a:	int3   
6502224b:	int3   
6502224c:	int3   
6502224d:	int3   
6502224e:	int3   
6502224f:	int3   
65022250:	mov    edx,DWORD PTR [esp+0x8]
65022254:	lea    eax,[edx+0xc]
65022257:	mov    ecx,DWORD PTR [edx-0x2c]
6502225a:	xor    ecx,eax
6502225c:	call   0x650127bc
65022261:	mov    eax,0x6502a0c4
65022266:	jmp    0x6501247e
6502226b:	int3   
6502226c:	int3   
6502226d:	int3   
6502226e:	int3   
6502226f:	int3   
65022270:	mov    eax,DWORD PTR [ebp-0x18]
65022273:	push   eax
65022274:	mov    ecx,DWORD PTR [ebp-0x1c]
65022277:	push   ecx
65022278:	call   0x65002c80
6502227d:	add    esp,0x8
65022280:	ret    
65022281:	mov    edx,DWORD PTR [esp+0x8]
65022285:	lea    eax,[edx+0xc]
65022288:	mov    ecx,DWORD PTR [edx-0x20]
6502228b:	xor    ecx,eax
6502228d:	call   0x650127bc
65022292:	mov    eax,0x6502a124
65022297:	jmp    0x6501247e
6502229c:	int3   
6502229d:	int3   
6502229e:	int3   
6502229f:	int3   
650222a0:	mov    ecx,DWORD PTR [ebp-0x10]
650222a3:	jmp    0x650016b0
650222a8:	mov    edx,DWORD PTR [esp+0x8]
650222ac:	lea    eax,[edx-0xc]
650222af:	mov    ecx,DWORD PTR [edx-0x10]
650222b2:	xor    ecx,eax
650222b4:	call   0x650127bc
650222b9:	mov    eax,0x6502a150
650222be:	jmp    0x6501247e
650222c3:	int3   
650222c4:	int3   
650222c5:	int3   
650222c6:	int3   
650222c7:	int3   
650222c8:	int3   
650222c9:	int3   
650222ca:	int3   
650222cb:	int3   
650222cc:	int3   
650222cd:	int3   
650222ce:	int3   
650222cf:	int3   
650222d0:	mov    ecx,DWORD PTR [ebp-0x10]
650222d3:	jmp    0x650016b0
650222d8:	mov    edx,DWORD PTR [esp+0x8]
650222dc:	lea    eax,[edx-0x10]
650222df:	mov    ecx,DWORD PTR [edx-0x14]
650222e2:	xor    ecx,eax
650222e4:	call   0x650127bc
650222e9:	mov    eax,0x6502a17c
650222ee:	jmp    0x6501247e
650222f3:	int3   
650222f4:	int3   
650222f5:	int3   
650222f6:	int3   
650222f7:	int3   
650222f8:	int3   
650222f9:	int3   
650222fa:	int3   
650222fb:	int3   
650222fc:	int3   
650222fd:	int3   
650222fe:	int3   
650222ff:	int3   
65022300:	lea    ecx,[ebp+0x24]
65022303:	jmp    0x650016b0
65022308:	lea    ecx,[ebp+0x8]
6502230b:	jmp    0x650016b0
65022310:	mov    edx,DWORD PTR [esp+0x8]
65022314:	lea    eax,[edx-0x8]
65022317:	mov    ecx,DWORD PTR [edx-0xc]
6502231a:	xor    ecx,eax
6502231c:	call   0x650127bc
65022321:	mov    eax,0x6502a1b0
65022326:	jmp    0x6501247e
6502232b:	int3   
6502232c:	int3   
6502232d:	int3   
6502232e:	int3   
6502232f:	int3   
65022330:	lea    ecx,[ebp-0x28]
65022333:	jmp    0x650016b0
65022338:	mov    edx,DWORD PTR [esp+0x8]
6502233c:	lea    eax,[edx-0x28]
6502233f:	mov    ecx,DWORD PTR [edx-0x2c]
65022342:	xor    ecx,eax
65022344:	call   0x650127bc
65022349:	mov    eax,0x6502a1dc
6502234e:	jmp    0x6501247e
65022353:	int3   
65022354:	int3   
65022355:	int3   
65022356:	int3   
65022357:	int3   
65022358:	int3   
65022359:	int3   
6502235a:	int3   
6502235b:	int3   
6502235c:	int3   
6502235d:	int3   
6502235e:	int3   
6502235f:	int3   
65022360:	mov    ecx,DWORD PTR [ebp-0x10]
65022363:	jmp    0x650016b0
65022368:	mov    edx,DWORD PTR [esp+0x8]
6502236c:	lea    eax,[edx-0x10]
6502236f:	mov    ecx,DWORD PTR [edx-0x14]
65022372:	xor    ecx,eax
65022374:	call   0x650127bc
65022379:	mov    eax,0x6502a208
6502237e:	jmp    0x6501247e
65022383:	int3   
65022384:	int3   
65022385:	int3   
65022386:	int3   
65022387:	int3   
65022388:	int3   
65022389:	int3   
6502238a:	int3   
6502238b:	int3   
6502238c:	int3   
6502238d:	int3   
6502238e:	int3   
6502238f:	int3   
65022390:	mov    edx,DWORD PTR [esp+0x8]
65022394:	lea    eax,[edx+0xc]
65022397:	mov    ecx,DWORD PTR [edx-0x1c]
6502239a:	xor    ecx,eax
6502239c:	call   0x650127bc
650223a1:	mov    eax,0x6502a294
650223a6:	jmp    0x6501247e
650223ab:	int3   
650223ac:	int3   
650223ad:	int3   
650223ae:	int3   
650223af:	int3   
650223b0:	mov    eax,DWORD PTR [ebp-0x14]
650223b3:	push   eax
650223b4:	mov    ecx,DWORD PTR [ebp-0x18]
650223b7:	push   ecx
650223b8:	call   0x65002c80
650223bd:	add    esp,0x8
650223c0:	ret    
650223c1:	mov    edx,DWORD PTR [esp+0x8]
650223c5:	lea    eax,[edx+0xc]
650223c8:	mov    ecx,DWORD PTR [edx-0x1c]
650223cb:	xor    ecx,eax
650223cd:	call   0x650127bc
650223d2:	mov    eax,0x6502a2f4
650223d7:	jmp    0x6501247e
650223dc:	int3   
650223dd:	int3   
650223de:	int3   
650223df:	int3   
650223e0:	mov    eax,DWORD PTR [ebp-0x14]
650223e3:	push   eax
650223e4:	mov    ecx,DWORD PTR [ebp-0x18]
650223e7:	push   ecx
650223e8:	call   0x65002c80
650223ed:	add    esp,0x8
650223f0:	ret    
650223f1:	mov    edx,DWORD PTR [esp+0x8]
650223f5:	lea    eax,[edx+0xc]
650223f8:	mov    ecx,DWORD PTR [edx-0x1c]
650223fb:	xor    ecx,eax
650223fd:	call   0x650127bc
65022402:	mov    eax,0x6502a354
65022407:	jmp    0x6501247e
6502240c:	int3   
6502240d:	int3   
6502240e:	int3   
6502240f:	int3   
65022410:	mov    edx,DWORD PTR [esp+0x8]
65022414:	lea    eax,[edx+0xc]
65022417:	mov    ecx,DWORD PTR [edx-0x1c]
6502241a:	xor    ecx,eax
6502241c:	call   0x650127bc
65022421:	mov    eax,0x6502a3ac
65022426:	jmp    0x6501247e
6502242b:	int3   
6502242c:	int3   
6502242d:	int3   
6502242e:	int3   
6502242f:	int3   
65022430:	lea    ecx,[ebp+0x8]
65022433:	jmp    0x65007dd0
65022438:	mov    edx,DWORD PTR [esp+0x8]
6502243c:	lea    eax,[edx-0x14]
6502243f:	mov    ecx,DWORD PTR [edx-0x18]
65022442:	xor    ecx,eax
65022444:	call   0x650127bc
65022449:	mov    eax,0x6502a3d8
6502244e:	jmp    0x6501247e
65022453:	int3   
65022454:	int3   
65022455:	int3   
65022456:	int3   
65022457:	int3   
65022458:	int3   
65022459:	int3   
6502245a:	int3   
6502245b:	int3   
6502245c:	int3   
6502245d:	int3   
6502245e:	int3   
6502245f:	int3   
65022460:	lea    ecx,[ebp+0x8]
65022463:	jmp    0x650016b0
65022468:	mov    edx,DWORD PTR [esp+0x8]
6502246c:	lea    eax,[edx-0x14]
6502246f:	mov    ecx,DWORD PTR [edx-0x18]
65022472:	xor    ecx,eax
65022474:	call   0x650127bc
65022479:	mov    eax,0x6502a404
6502247e:	jmp    0x6501247e
65022483:	int3   
65022484:	int3   
65022485:	int3   
65022486:	int3   
65022487:	int3   
65022488:	int3   
65022489:	int3   
6502248a:	int3   
6502248b:	int3   
6502248c:	int3   
6502248d:	int3   
6502248e:	int3   
6502248f:	int3   
65022490:	mov    ecx,DWORD PTR [ebp-0x10]
65022493:	jmp    0x65012036
65022498:	mov    edx,DWORD PTR [esp+0x8]
6502249c:	lea    eax,[edx-0xc]
6502249f:	mov    ecx,DWORD PTR [edx-0x10]
650224a2:	xor    ecx,eax
650224a4:	call   0x650127bc
650224a9:	mov    eax,0x6502a430
650224ae:	jmp    0x6501247e
650224b3:	int3   
650224b4:	int3   
650224b5:	int3   
650224b6:	int3   
650224b7:	int3   
650224b8:	int3   
650224b9:	int3   
650224ba:	int3   
650224bb:	int3   
650224bc:	int3   
650224bd:	int3   
650224be:	int3   
650224bf:	int3   
650224c0:	mov    ecx,DWORD PTR [ebp-0x10]
650224c3:	jmp    0x65012036
650224c8:	mov    edx,DWORD PTR [esp+0x8]
650224cc:	lea    eax,[edx-0x8]
650224cf:	mov    ecx,DWORD PTR [edx-0xc]
650224d2:	xor    ecx,eax
650224d4:	call   0x650127bc
650224d9:	mov    eax,0x6502a45c
650224de:	jmp    0x6501247e
650224e3:	int3   
650224e4:	int3   
650224e5:	int3   
650224e6:	int3   
650224e7:	int3   
650224e8:	int3   
650224e9:	int3   
650224ea:	int3   
650224eb:	int3   
650224ec:	int3   
650224ed:	int3   
650224ee:	int3   
650224ef:	int3   
650224f0:	mov    ecx,DWORD PTR [ebp-0x10]
650224f3:	jmp    0x65012036
650224f8:	mov    edx,DWORD PTR [esp+0x8]
650224fc:	lea    eax,[edx-0xc]
650224ff:	mov    ecx,DWORD PTR [edx-0x10]
65022502:	xor    ecx,eax
65022504:	call   0x650127bc
65022509:	mov    eax,0x6502a488
6502250e:	jmp    0x6501247e
65022513:	int3   
65022514:	int3   
65022515:	int3   
65022516:	int3   
65022517:	int3   
65022518:	int3   
65022519:	int3   
6502251a:	int3   
6502251b:	int3   
6502251c:	int3   
6502251d:	int3   
6502251e:	int3   
6502251f:	int3   
65022520:	mov    ecx,DWORD PTR [ebp-0x10]
65022523:	jmp    0x65012036
65022528:	mov    edx,DWORD PTR [esp+0x8]
6502252c:	lea    eax,[edx-0x8]
6502252f:	mov    ecx,DWORD PTR [edx-0xc]
65022532:	xor    ecx,eax
65022534:	call   0x650127bc
65022539:	mov    eax,0x6502a4b4
6502253e:	jmp    0x6501247e
65022543:	int3   
65022544:	int3   
65022545:	int3   
65022546:	int3   
65022547:	int3   
65022548:	int3   
65022549:	int3   
6502254a:	int3   
6502254b:	int3   
6502254c:	int3   
6502254d:	int3   
6502254e:	int3   
6502254f:	int3   
65022550:	mov    eax,DWORD PTR [ebp-0x34]
65022553:	and    eax,0x1
65022556:	je     0x65022568
6502255c:	and    DWORD PTR [ebp-0x34],0xfffffffe
65022560:	mov    ecx,DWORD PTR [ebp-0x30]
65022563:	jmp    0x650016b0
65022568:	ret    
65022569:	lea    ecx,[ebp-0x2c]
6502256c:	jmp    0x650016b0
65022571:	lea    ecx,[ebp-0x3c]
65022574:	jmp    0x65001990
65022579:	lea    ecx,[ebp-0x2c]
6502257c:	jmp    0x650016b0
65022581:	lea    ecx,[ebp-0x3c]
65022584:	jmp    0x65001990
65022589:	lea    ecx,[ebp-0x2c]
6502258c:	jmp    0x650016b0
65022591:	lea    ecx,[ebp-0x2c]
65022594:	jmp    0x650016b0
65022599:	mov    edx,DWORD PTR [esp+0x8]
6502259d:	lea    eax,[edx-0x40]
650225a0:	mov    ecx,DWORD PTR [edx-0x44]
650225a3:	xor    ecx,eax
650225a5:	call   0x650127bc
650225aa:	add    eax,0x10
650225ad:	mov    ecx,DWORD PTR [edx-0x4]
650225b0:	xor    ecx,eax
650225b2:	call   0x650127bc
650225b7:	mov    eax,0x6502a510
650225bc:	jmp    0x6501247e
650225c1:	int3   
650225c2:	int3   
650225c3:	int3   
650225c4:	int3   
650225c5:	int3   
650225c6:	int3   
650225c7:	int3   
650225c8:	int3   
650225c9:	int3   
650225ca:	int3   
650225cb:	int3   
650225cc:	int3   
650225cd:	int3   
650225ce:	int3   
650225cf:	int3   
650225d0:	lea    ecx,[ebp-0x30]
650225d3:	jmp    0x650016b0
650225d8:	mov    eax,DWORD PTR [ebp-0x4c]
650225db:	push   eax
650225dc:	mov    ecx,DWORD PTR [ebp-0x50]
650225df:	push   ecx
650225e0:	call   0x65002c80
650225e5:	add    esp,0x8
650225e8:	ret    
650225e9:	mov    edx,DWORD PTR [esp+0x8]
650225ed:	lea    eax,[edx+0xc]
650225f0:	mov    ecx,DWORD PTR [edx-0x54]
650225f3:	xor    ecx,eax
650225f5:	call   0x650127bc
650225fa:	mov    ecx,DWORD PTR [edx-0x8]
650225fd:	xor    ecx,eax
650225ff:	call   0x650127bc
65022604:	mov    eax,0x6502a580
65022609:	jmp    0x6501247e
6502260e:	int3   
6502260f:	int3   
65022610:	mov    ecx,DWORD PTR [ebp-0x10]
65022613:	jmp    0x65007dd0
65022618:	mov    edx,DWORD PTR [esp+0x8]
6502261c:	lea    eax,[edx-0xc]
6502261f:	mov    ecx,DWORD PTR [edx-0x10]
65022622:	xor    ecx,eax
65022624:	call   0x650127bc
65022629:	mov    eax,0x6502a5ac
6502262e:	jmp    0x6501247e
65022633:	int3   
65022634:	int3   
65022635:	int3   
65022636:	int3   
65022637:	int3   
65022638:	int3   
65022639:	int3   
6502263a:	int3   
6502263b:	int3   
6502263c:	int3   
6502263d:	int3   
6502263e:	int3   
6502263f:	int3   
65022640:	mov    ecx,DWORD PTR [ebp-0x10]
65022643:	jmp    0x65007dd0
65022648:	mov    edx,DWORD PTR [esp+0x8]
6502264c:	lea    eax,[edx-0x10]
6502264f:	mov    ecx,DWORD PTR [edx-0x14]
65022652:	xor    ecx,eax
65022654:	call   0x650127bc
65022659:	mov    eax,0x6502a5d8
6502265e:	jmp    0x6501247e
65022663:	int3   
65022664:	int3   
65022665:	int3   
65022666:	int3   
65022667:	int3   
65022668:	int3   
65022669:	int3   
6502266a:	int3   
6502266b:	int3   
6502266c:	int3   
6502266d:	int3   
6502266e:	int3   
6502266f:	int3   
65022670:	lea    ecx,[ebp+0x24]
65022673:	jmp    0x65007dd0
65022678:	lea    ecx,[ebp+0x8]
6502267b:	jmp    0x65007dd0
65022680:	mov    edx,DWORD PTR [esp+0x8]
65022684:	lea    eax,[edx-0x8]
65022687:	mov    ecx,DWORD PTR [edx-0xc]
6502268a:	xor    ecx,eax
6502268c:	call   0x650127bc
65022691:	mov    eax,0x6502a60c
65022696:	jmp    0x6501247e
6502269b:	int3   
6502269c:	int3   
6502269d:	int3   
6502269e:	int3   
6502269f:	int3   
650226a0:	mov    ecx,DWORD PTR [ebp-0x10]
650226a3:	jmp    0x65007dd0
650226a8:	mov    edx,DWORD PTR [esp+0x8]
650226ac:	lea    eax,[edx-0x10]
650226af:	mov    ecx,DWORD PTR [edx-0x14]
650226b2:	xor    ecx,eax
650226b4:	call   0x650127bc
650226b9:	mov    eax,0x6502a638
650226be:	jmp    0x6501247e
650226c3:	int3   
650226c4:	int3   
650226c5:	int3   
650226c6:	int3   
650226c7:	int3   
650226c8:	int3   
650226c9:	int3   
650226ca:	int3   
650226cb:	int3   
650226cc:	int3   
650226cd:	int3   
650226ce:	int3   
650226cf:	int3   
650226d0:	mov    eax,DWORD PTR [ebp-0x14]
650226d3:	push   eax
650226d4:	mov    ecx,DWORD PTR [ebp-0x18]
650226d7:	push   ecx
650226d8:	call   0x65002c80
650226dd:	add    esp,0x8
650226e0:	ret    
650226e1:	mov    edx,DWORD PTR [esp+0x8]
650226e5:	lea    eax,[edx+0xc]
650226e8:	mov    ecx,DWORD PTR [edx-0x1c]
650226eb:	xor    ecx,eax
650226ed:	call   0x650127bc
650226f2:	mov    eax,0x6502a698
650226f7:	jmp    0x6501247e
650226fc:	int3   
650226fd:	int3   
650226fe:	int3   
650226ff:	int3   
65022700:	lea    eax,[ebp-0x10]
65022703:	jmp    0x65001710
65022708:	mov    edx,DWORD PTR [esp+0x8]
6502270c:	lea    eax,[edx-0x34]
6502270f:	mov    ecx,DWORD PTR [edx-0x38]
65022712:	xor    ecx,eax
65022714:	call   0x650127bc
65022719:	mov    eax,0x6502a6c4
6502271e:	jmp    0x6501247e
65022723:	int3   
65022724:	int3   
65022725:	int3   
65022726:	int3   
65022727:	int3   
65022728:	int3   
65022729:	int3   
6502272a:	int3   
6502272b:	int3   
6502272c:	int3   
6502272d:	int3   
6502272e:	int3   
6502272f:	int3   
65022730:	lea    ecx,[ebp-0x54]
65022733:	jmp    0x650016b0
65022738:	mov    edx,DWORD PTR [esp+0x8]
6502273c:	lea    eax,[edx-0x4c]
6502273f:	mov    ecx,DWORD PTR [edx-0x50]
65022742:	xor    ecx,eax
65022744:	call   0x650127bc
65022749:	mov    eax,0x6502a6f0
6502274e:	jmp    0x6501247e
65022753:	int3   
65022754:	int3   
65022755:	int3   
65022756:	int3   
65022757:	int3   
65022758:	int3   
65022759:	int3   
6502275a:	int3   
6502275b:	int3   
6502275c:	int3   
6502275d:	int3   
6502275e:	int3   
6502275f:	int3   
65022760:	lea    ecx,[ebp-0x30]
65022763:	jmp    0x650016b0
65022768:	mov    edx,DWORD PTR [esp+0x8]
6502276c:	lea    eax,[edx+0xc]
6502276f:	mov    ecx,DWORD PTR [edx-0x44]
65022772:	xor    ecx,eax
65022774:	call   0x650127bc
65022779:	mov    ecx,DWORD PTR [edx-0x8]
6502277c:	xor    ecx,eax
6502277e:	call   0x650127bc
65022783:	mov    eax,0x6502a784
65022788:	jmp    0x6501247e
6502278d:	int3   
6502278e:	int3   
6502278f:	int3   
65022790:	lea    ecx,[ebp-0x54]
65022793:	jmp    0x650016b0
65022798:	mov    edx,DWORD PTR [esp+0x8]
6502279c:	lea    eax,[edx-0x5c]
6502279f:	mov    ecx,DWORD PTR [edx-0x60]
650227a2:	xor    ecx,eax
650227a4:	call   0x650127bc
650227a9:	mov    eax,0x6502a7b0
650227ae:	jmp    0x6501247e
650227b3:	int3   
650227b4:	int3   
650227b5:	int3   
650227b6:	int3   
650227b7:	int3   
650227b8:	int3   
650227b9:	int3   
650227ba:	int3   
650227bb:	int3   
650227bc:	int3   
650227bd:	int3   
650227be:	int3   
650227bf:	int3   
650227c0:	lea    ecx,[ebp-0x54]
650227c3:	jmp    0x650016b0
650227c8:	mov    edx,DWORD PTR [esp+0x8]
650227cc:	lea    eax,[edx-0x5c]
650227cf:	mov    ecx,DWORD PTR [edx-0x60]
650227d2:	xor    ecx,eax
650227d4:	call   0x650127bc
650227d9:	mov    eax,0x6502a7dc
650227de:	jmp    0x6501247e
650227e3:	int3   
650227e4:	int3   
650227e5:	int3   
650227e6:	int3   
650227e7:	int3   
650227e8:	int3   
650227e9:	int3   
650227ea:	int3   
650227eb:	int3   
650227ec:	int3   
650227ed:	int3   
650227ee:	int3   
650227ef:	int3   
650227f0:	lea    ecx,[ebp-0x54]
650227f3:	jmp    0x650016b0
650227f8:	mov    edx,DWORD PTR [esp+0x8]
650227fc:	lea    eax,[edx-0x5c]
650227ff:	mov    ecx,DWORD PTR [edx-0x60]
65022802:	xor    ecx,eax
65022804:	call   0x650127bc
65022809:	mov    eax,0x6502a808
6502280e:	jmp    0x6501247e
65022813:	int3   
65022814:	int3   
65022815:	int3   
65022816:	int3   
65022817:	int3   
65022818:	int3   
65022819:	int3   
6502281a:	int3   
6502281b:	int3   
6502281c:	int3   
6502281d:	int3   
6502281e:	int3   
6502281f:	int3   
65022820:	lea    ecx,[ebp-0x54]
65022823:	jmp    0x650016b0
65022828:	mov    edx,DWORD PTR [esp+0x8]
6502282c:	lea    eax,[edx-0x5c]
6502282f:	mov    ecx,DWORD PTR [edx-0x60]
65022832:	xor    ecx,eax
65022834:	call   0x650127bc
65022839:	mov    eax,0x6502a834
6502283e:	jmp    0x6501247e
65022843:	int3   
65022844:	int3   
65022845:	int3   
65022846:	int3   
65022847:	int3   
65022848:	int3   
65022849:	int3   
6502284a:	int3   
6502284b:	int3   
6502284c:	int3   
6502284d:	int3   
6502284e:	int3   
6502284f:	int3   
65022850:	lea    ecx,[ebp-0x50]
65022853:	jmp    0x650016b0
65022858:	mov    edx,DWORD PTR [esp+0x8]
6502285c:	lea    eax,[edx-0x54]
6502285f:	mov    ecx,DWORD PTR [edx-0x58]
65022862:	xor    ecx,eax
65022864:	call   0x650127bc
65022869:	mov    eax,0x6502a860
6502286e:	jmp    0x6501247e
65022873:	int3   
65022874:	int3   
65022875:	int3   
65022876:	int3   
65022877:	int3   
65022878:	int3   
65022879:	int3   
6502287a:	int3   
6502287b:	int3   
6502287c:	int3   
6502287d:	int3   
6502287e:	int3   
6502287f:	int3   
65022880:	lea    ecx,[ebp-0x50]
65022883:	jmp    0x650016b0
65022888:	mov    edx,DWORD PTR [esp+0x8]
6502288c:	lea    eax,[edx-0x54]
6502288f:	mov    ecx,DWORD PTR [edx-0x58]
65022892:	xor    ecx,eax
65022894:	call   0x650127bc
65022899:	mov    eax,0x6502a88c
6502289e:	jmp    0x6501247e
650228a3:	int3   
650228a4:	int3   
650228a5:	int3   
650228a6:	int3   
650228a7:	int3   
650228a8:	int3   
650228a9:	int3   
650228aa:	int3   
650228ab:	int3   
650228ac:	int3   
650228ad:	int3   
650228ae:	int3   
650228af:	int3   
650228b0:	mov    eax,ds:0x65030360
650228b5:	and    eax,0xfffffffe
650228b8:	mov    ds:0x65030360,eax
650228bd:	ret    
650228be:	mov    edx,DWORD PTR [esp+0x8]
650228c2:	lea    eax,[edx]
650228c4:	mov    ecx,DWORD PTR [edx-0x4]
650228c7:	xor    ecx,eax
650228c9:	call   0x650127bc
650228ce:	mov    eax,0x6502a8b8
650228d3:	jmp    0x6501247e
650228d8:	int3   
650228d9:	int3   
650228da:	int3   
650228db:	int3   
650228dc:	int3   
650228dd:	int3   
650228de:	int3   
650228df:	int3   
650228e0:	mov    eax,ds:0x65030364
650228e5:	and    eax,0xfffffffe
650228e8:	mov    ds:0x65030364,eax
650228ed:	ret    
650228ee:	mov    edx,DWORD PTR [esp+0x8]
650228f2:	lea    eax,[edx]
650228f4:	mov    ecx,DWORD PTR [edx-0x4]
650228f7:	xor    ecx,eax
650228f9:	call   0x650127bc
650228fe:	mov    eax,0x6502a8e4
65022903:	jmp    0x6501247e
65022908:	int3   
65022909:	int3   
6502290a:	int3   
6502290b:	int3   
6502290c:	int3   
6502290d:	int3   
6502290e:	int3   
6502290f:	int3   
65022910:	lea    ecx,[ebp-0x4c]
65022913:	jmp    0x65007dd0
65022918:	lea    ecx,[ebp-0x30]
6502291b:	jmp    0x65007dd0
65022920:	mov    ecx,DWORD PTR [ebp-0xc0]
65022926:	jmp    0x65007dd0
6502292b:	lea    ecx,[ebp-0x84]
65022931:	jmp    0x65007320
65022936:	lea    ecx,[ebp-0xbc]
6502293c:	jmp    0x65007320
65022941:	mov    edx,DWORD PTR [esp+0x8]
65022945:	lea    eax,[edx-0xdc]
6502294b:	mov    ecx,DWORD PTR [edx-0xe0]
65022951:	xor    ecx,eax
65022953:	call   0x650127bc
65022958:	add    eax,0xc
6502295b:	mov    ecx,DWORD PTR [edx-0x8]
6502295e:	xor    ecx,eax
65022960:	call   0x650127bc
65022965:	mov    eax,0x6502a930
6502296a:	jmp    0x6501247e
6502296f:	int3   
65022970:	lea    ecx,[ebp-0x4c]
65022973:	jmp    0x650016b0
65022978:	lea    ecx,[ebp-0x30]
6502297b:	jmp    0x650016b0
65022980:	mov    ecx,DWORD PTR [ebp-0xc0]
65022986:	jmp    0x650016b0
6502298b:	lea    ecx,[ebp-0x84]
65022991:	jmp    0x6500f820
65022996:	lea    ecx,[ebp-0xbc]
6502299c:	jmp    0x6500f820
650229a1:	mov    edx,DWORD PTR [esp+0x8]
650229a5:	lea    eax,[edx-0xdc]
650229ab:	mov    ecx,DWORD PTR [edx-0xe0]
650229b1:	xor    ecx,eax
650229b3:	call   0x650127bc
650229b8:	add    eax,0xc
650229bb:	mov    ecx,DWORD PTR [edx-0x8]
650229be:	xor    ecx,eax
650229c0:	call   0x650127bc
650229c5:	mov    eax,0x6502a97c
650229ca:	jmp    0x6501247e
650229cf:	int3   
650229d0:	lea    ecx,[ebp+0x4]
650229d3:	jmp    0x65001990
650229d8:	mov    edx,DWORD PTR [esp+0x8]
650229dc:	lea    eax,[edx-0x30]
650229df:	mov    ecx,DWORD PTR [edx-0x34]
650229e2:	xor    ecx,eax
650229e4:	call   0x650127bc
650229e9:	add    eax,0xc
650229ec:	mov    ecx,DWORD PTR [edx-0x4]
650229ef:	xor    ecx,eax
650229f1:	call   0x650127bc
650229f6:	mov    eax,0x6502a9a8
650229fb:	jmp    0x6501247e
65022a00:	mov    ecx,DWORD PTR [ebp-0x10]
65022a03:	jmp    0x65001990
65022a08:	mov    edx,DWORD PTR [esp+0x8]
65022a0c:	lea    eax,[edx-0xc]
65022a0f:	mov    ecx,DWORD PTR [edx-0x10]
65022a12:	xor    ecx,eax
65022a14:	call   0x650127bc
65022a19:	mov    eax,0x6502a9d4
65022a1e:	jmp    0x6501247e
65022a23:	int3   
65022a24:	int3   
65022a25:	int3   
65022a26:	int3   
65022a27:	int3   
65022a28:	int3   
65022a29:	int3   
65022a2a:	int3   
65022a2b:	int3   
65022a2c:	int3   
65022a2d:	int3   
65022a2e:	int3   
65022a2f:	int3   
65022a30:	lea    ecx,[ebp-0x10]
65022a33:	jmp    0x65001990
65022a38:	mov    edx,DWORD PTR [esp+0x8]
65022a3c:	lea    eax,[edx-0x8]
65022a3f:	mov    ecx,DWORD PTR [edx-0xc]
65022a42:	xor    ecx,eax
65022a44:	call   0x650127bc
65022a49:	mov    eax,0x6502aa00
65022a4e:	jmp    0x6501247e
65022a53:	int3   
65022a54:	int3   
65022a55:	int3   
65022a56:	int3   
65022a57:	int3   
65022a58:	int3   
65022a59:	int3   
65022a5a:	int3   
65022a5b:	int3   
65022a5c:	int3   
65022a5d:	int3   
65022a5e:	int3   
65022a5f:	int3   
65022a60:	mov    ecx,DWORD PTR [ebp-0x10]
65022a63:	jmp    0x65001990
65022a68:	mov    edx,DWORD PTR [esp+0x8]
65022a6c:	lea    eax,[edx-0xc]
65022a6f:	mov    ecx,DWORD PTR [edx-0x10]
65022a72:	xor    ecx,eax
65022a74:	call   0x650127bc
65022a79:	mov    eax,0x6502aa2c
65022a7e:	jmp    0x6501247e
65022a83:	int3   
65022a84:	int3   
65022a85:	int3   
65022a86:	int3   
65022a87:	int3   
65022a88:	int3   
65022a89:	int3   
65022a8a:	int3   
65022a8b:	int3   
65022a8c:	int3   
65022a8d:	int3   
65022a8e:	int3   
65022a8f:	int3   
65022a90:	lea    edi,[ebp-0x58]
65022a93:	jmp    0x6500ad10
65022a98:	lea    edi,[ebp-0x40]
65022a9b:	jmp    0x6500ad10
65022aa0:	lea    edi,[ebp-0x38]
65022aa3:	jmp    0x6500ad10
65022aa8:	lea    edi,[ebp-0x3c]
65022aab:	jmp    0x6500ad10
65022ab0:	lea    edi,[ebp-0x40]
65022ab3:	jmp    0x6500ad10
65022ab8:	lea    ecx,[ebp-0x24]
65022abb:	jmp    0x6500b080
65022ac0:	mov    edx,DWORD PTR [esp+0x8]
65022ac4:	lea    eax,[edx-0x60]
65022ac7:	mov    ecx,DWORD PTR [edx-0x64]
65022aca:	xor    ecx,eax
65022acc:	call   0x650127bc
65022ad1:	mov    eax,0x6502aa80
65022ad6:	jmp    0x6501247e
65022adb:	int3   
65022adc:	int3   
65022add:	int3   
65022ade:	int3   
65022adf:	int3   
65022ae0:	lea    eax,[ebp-0x24]
65022ae3:	jmp    0x6500bba0
65022ae8:	lea    ecx,[ebp-0x10]
65022aeb:	jmp    0x65001990
65022af0:	lea    ecx,[ebp-0x18]
65022af3:	jmp    0x65001990
65022af8:	lea    ecx,[ebp-0x40]
65022afb:	jmp    0x650016b0
65022b00:	mov    edx,DWORD PTR [esp+0x8]
65022b04:	lea    eax,[edx+0xc]
65022b07:	mov    ecx,DWORD PTR [edx-0x44]
65022b0a:	xor    ecx,eax
65022b0c:	call   0x650127bc
65022b11:	mov    ecx,DWORD PTR [edx+0x294]
65022b17:	xor    ecx,eax
65022b19:	call   0x650127bc
65022b1e:	mov    eax,0x6502aac4
65022b23:	jmp    0x6501247e
65022b28:	int3   
65022b29:	int3   
65022b2a:	int3   
65022b2b:	int3   
65022b2c:	int3   
65022b2d:	int3   
65022b2e:	int3   
65022b2f:	int3   
65022b30:	lea    ecx,[ebp-0x1005c]
65022b36:	jmp    0x650016b0
65022b3b:	lea    ecx,[ebp-0x10074]
65022b41:	jmp    0x65002770
65022b46:	lea    ecx,[ebp-0x10074]
65022b4c:	jmp    0x65002770
65022b51:	lea    ecx,[ebp-0x1005c]
65022b57:	jmp    0x650016b0
65022b5c:	mov    edx,DWORD PTR [esp+0x8]
65022b60:	lea    eax,[edx-0x10084]
65022b66:	mov    ecx,DWORD PTR [edx-0x10088]
65022b6c:	xor    ecx,eax
65022b6e:	call   0x650127bc
65022b73:	add    eax,0x10
65022b76:	mov    ecx,DWORD PTR [edx-0x4]
65022b79:	xor    ecx,eax
65022b7b:	call   0x650127bc
65022b80:	mov    eax,0x6502ab08
65022b85:	jmp    0x6501247e
65022b8a:	int3   
65022b8b:	int3   
65022b8c:	int3   
65022b8d:	int3   
65022b8e:	int3   
65022b8f:	int3   
65022b90:	lea    ecx,[ebp-0x30]
65022b93:	jmp    0x650016b0
65022b98:	lea    ecx,[ebp-0x5c]
65022b9b:	jmp    0x650016b0
65022ba0:	mov    edx,DWORD PTR [esp+0x8]
65022ba4:	lea    eax,[edx-0x74]
65022ba7:	mov    ecx,DWORD PTR [edx-0x78]
65022baa:	xor    ecx,eax
65022bac:	call   0x650127bc
65022bb1:	add    eax,0xc
65022bb4:	mov    ecx,DWORD PTR [edx-0x8]
65022bb7:	xor    ecx,eax
65022bb9:	call   0x650127bc
65022bbe:	mov    eax,0x6502ab3c
65022bc3:	jmp    0x6501247e
65022bc8:	int3   
65022bc9:	int3   
65022bca:	int3   
65022bcb:	int3   
65022bcc:	int3   
65022bcd:	int3   
65022bce:	int3   
65022bcf:	int3   
65022bd0:	mov    edx,DWORD PTR [esp+0x8]
65022bd4:	lea    eax,[edx+0xc]
65022bd7:	mov    ecx,DWORD PTR [edx-0x14]
65022bda:	xor    ecx,eax
65022bdc:	call   0x650127bc
65022be1:	mov    eax,0x6502ab94
65022be6:	jmp    0x6501247e
65022beb:	int3   
65022bec:	int3   
65022bed:	int3   
65022bee:	int3   
65022bef:	int3   
65022bf0:	mov    ecx,DWORD PTR [ebp-0x10]
65022bf3:	jmp    0x65001990
65022bf8:	mov    edx,DWORD PTR [esp+0x8]
65022bfc:	lea    eax,[edx-0xc]
65022bff:	mov    ecx,DWORD PTR [edx-0x10]
65022c02:	xor    ecx,eax
65022c04:	call   0x650127bc
65022c09:	mov    eax,0x6502abc0
65022c0e:	jmp    0x6501247e
65022c13:	int3   
65022c14:	int3   
65022c15:	int3   
65022c16:	int3   
65022c17:	int3   
65022c18:	int3   
65022c19:	int3   
65022c1a:	int3   
65022c1b:	int3   
65022c1c:	int3   
65022c1d:	int3   
65022c1e:	int3   
65022c1f:	int3   
65022c20:	lea    ecx,[ebp-0x1c]
65022c23:	jmp    0x65001990
65022c28:	mov    edx,DWORD PTR [esp+0x8]
65022c2c:	lea    eax,[edx-0x1c]
65022c2f:	mov    ecx,DWORD PTR [edx-0x20]
65022c32:	xor    ecx,eax
65022c34:	call   0x650127bc
65022c39:	mov    eax,0x6502abec
65022c3e:	jmp    0x6501247e
65022c43:	int3   
65022c44:	int3   
65022c45:	int3   
65022c46:	int3   
65022c47:	int3   
65022c48:	int3   
65022c49:	int3   
65022c4a:	int3   
65022c4b:	int3   
65022c4c:	int3   
65022c4d:	int3   
65022c4e:	int3   
65022c4f:	int3   
65022c50:	mov    edx,DWORD PTR [esp+0x8]
65022c54:	lea    eax,[edx+0xc]
65022c57:	mov    ecx,DWORD PTR [edx-0x16c]
65022c5d:	xor    ecx,eax
65022c5f:	call   0x650127bc
65022c64:	mov    ecx,DWORD PTR [edx-0x8]
65022c67:	xor    ecx,eax
65022c69:	call   0x650127bc
65022c6e:	mov    eax,0x6502ac44
65022c73:	jmp    0x6501247e
65022c78:	int3   
65022c79:	int3   
65022c7a:	int3   
65022c7b:	int3   
65022c7c:	int3   
65022c7d:	int3   
65022c7e:	int3   
65022c7f:	int3   
65022c80:	mov    eax,ds:0x650303dc
65022c85:	and    eax,0xfffffffe
65022c88:	mov    ds:0x650303dc,eax
65022c8d:	ret    
65022c8e:	lea    ecx,[ebp-0x434]
65022c94:	jmp    0x650016b0
65022c99:	lea    ecx,[ebp-0x460]
65022c9f:	jmp    0x650016b0
65022ca4:	mov    edx,DWORD PTR [esp+0x8]
65022ca8:	lea    eax,[edx-0x46c]
65022cae:	mov    ecx,DWORD PTR [edx-0x470]
65022cb4:	xor    ecx,eax
65022cb6:	call   0x650127bc
65022cbb:	add    eax,0xc
65022cbe:	mov    ecx,DWORD PTR [edx-0x8]
65022cc1:	xor    ecx,eax
65022cc3:	call   0x650127bc
65022cc8:	mov    eax,0x6502ac80
65022ccd:	jmp    0x6501247e
65022cd2:	int3   
65022cd3:	int3   
65022cd4:	int3   
65022cd5:	int3   
65022cd6:	int3   
65022cd7:	int3   
65022cd8:	int3   
65022cd9:	int3   
65022cda:	int3   
65022cdb:	int3   
65022cdc:	int3   
65022cdd:	int3   
65022cde:	int3   
65022cdf:	int3   
65022ce0:	lea    esi,[ebp-0x840]
65022ce6:	jmp    0x65002be0
65022ceb:	lea    ecx,[ebp-0x848]
65022cf1:	jmp    0x65001990
65022cf6:	mov    edx,DWORD PTR [esp+0x8]
65022cfa:	lea    eax,[edx-0x84c]
65022d00:	mov    ecx,DWORD PTR [edx-0x850]
65022d06:	xor    ecx,eax
65022d08:	call   0x650127bc
65022d0d:	add    eax,0xc
65022d10:	mov    ecx,DWORD PTR [edx-0x8]
65022d13:	xor    ecx,eax
65022d15:	call   0x650127bc
65022d1a:	mov    eax,0x6502acb4
65022d1f:	jmp    0x6501247e
65022d24:	int3   
65022d25:	int3   
65022d26:	int3   
65022d27:	int3   
65022d28:	int3   
65022d29:	int3   
65022d2a:	int3   
65022d2b:	int3   
65022d2c:	int3   
65022d2d:	int3   
65022d2e:	int3   
65022d2f:	int3   
65022d30:	mov    eax,DWORD PTR [ebp-0x54]
65022d33:	and    eax,0x1
65022d36:	je     0x65022d48
65022d3c:	and    DWORD PTR [ebp-0x54],0xfffffffe
65022d40:	mov    ecx,DWORD PTR [ebp+0x4]
65022d43:	jmp    0x65001990
65022d48:	ret    
65022d49:	lea    ecx,[ebp-0x50]
65022d4c:	jmp    0x650016b0
65022d51:	lea    ecx,[ebp-0x50]
65022d54:	jmp    0x650016b0
65022d59:	mov    edx,DWORD PTR [esp+0x8]
65022d5d:	lea    eax,[edx-0x54]
65022d60:	mov    ecx,DWORD PTR [edx-0x58]
65022d63:	xor    ecx,eax
65022d65:	call   0x650127bc
65022d6a:	mov    eax,0x6502acf0
65022d6f:	jmp    0x6501247e
65022d74:	int3   
65022d75:	int3   
65022d76:	int3   
65022d77:	int3   
65022d78:	int3   
65022d79:	int3   
65022d7a:	int3   
65022d7b:	int3   
65022d7c:	int3   
65022d7d:	int3   
65022d7e:	int3   
65022d7f:	int3   
65022d80:	lea    ecx,[ebp+0x4]
65022d83:	jmp    0x65001990
65022d88:	lea    ecx,[ebp-0x58]
65022d8b:	jmp    0x650016e0
65022d90:	lea    ecx,[ebp-0x50]
65022d93:	jmp    0x650016b0
65022d98:	lea    ecx,[ebp-0x50]
65022d9b:	jmp    0x650016b0
65022da0:	mov    edx,DWORD PTR [esp+0x8]
65022da4:	lea    eax,[edx-0x58]
65022da7:	mov    ecx,DWORD PTR [edx-0x5c]
65022daa:	xor    ecx,eax
65022dac:	call   0x650127bc
65022db1:	mov    eax,0x6502ad34
65022db6:	jmp    0x6501247e
65022dbb:	int3   
65022dbc:	int3   
65022dbd:	int3   
65022dbe:	int3   
65022dbf:	int3   
65022dc0:	lea    ecx,[ebp-0x434]
65022dc6:	jmp    0x65001990
65022dcb:	mov    edx,DWORD PTR [esp+0x8]
65022dcf:	lea    eax,[edx-0x434]
65022dd5:	mov    ecx,DWORD PTR [edx-0x438]
65022ddb:	xor    ecx,eax
65022ddd:	call   0x650127bc
65022de2:	add    eax,0xc
65022de5:	mov    ecx,DWORD PTR [edx-0x8]
65022de8:	xor    ecx,eax
65022dea:	call   0x650127bc
65022def:	mov    eax,0x6502ad60
65022df4:	jmp    0x6501247e
65022df9:	int3   
65022dfa:	int3   
65022dfb:	int3   
65022dfc:	int3   
65022dfd:	int3   
65022dfe:	int3   
65022dff:	int3   
65022e00:	lea    edi,[ebp-0x18]
65022e03:	jmp    0x6500ad10
65022e08:	lea    edi,[ebp-0x1c]
65022e0b:	jmp    0x6500ad10
65022e10:	lea    edi,[ebp-0x14]
65022e13:	jmp    0x6500ad10
65022e18:	mov    edx,DWORD PTR [esp+0x8]
65022e1c:	lea    eax,[edx-0x1c]
65022e1f:	mov    ecx,DWORD PTR [edx-0x20]
65022e22:	xor    ecx,eax
65022e24:	call   0x650127bc
65022e29:	mov    eax,0x6502adac
65022e2e:	jmp    0x6501247e
65022e33:	int3   
65022e34:	int3   
65022e35:	int3   
65022e36:	int3   
65022e37:	int3   
65022e38:	int3   
65022e39:	int3   
65022e3a:	int3   
65022e3b:	int3   
65022e3c:	int3   
65022e3d:	int3   
65022e3e:	int3   
65022e3f:	int3   
65022e40:	lea    ecx,[ebp+0x40c]
65022e46:	jmp    0x65001990
65022e4b:	mov    eax,ds:0x650303ec
65022e50:	and    eax,0xfffffffe
65022e53:	mov    ds:0x650303ec,eax
65022e58:	ret    
65022e59:	lea    eax,[ebp-0x34]
65022e5c:	jmp    0x65003e60
65022e61:	lea    ecx,[ebp-0x28]
65022e64:	jmp    0x650016b0
65022e69:	lea    ecx,[ebp-0x28]
65022e6c:	jmp    0x650016b0
65022e71:	lea    ecx,[ebp-0x28]
65022e74:	jmp    0x650016b0
65022e79:	lea    ecx,[ebp-0x28]
65022e7c:	jmp    0x650016b0
65022e81:	lea    ecx,[ebp-0x28]
65022e84:	jmp    0x650016b0
65022e89:	lea    ecx,[ebp-0x28]
65022e8c:	jmp    0x650016b0
65022e91:	lea    ecx,[ebp-0x28]
65022e94:	jmp    0x650016b0
65022e99:	lea    ecx,[ebp-0x28]
65022e9c:	jmp    0x650016b0
65022ea1:	lea    ecx,[ebp-0x28]
65022ea4:	jmp    0x650016b0
65022ea9:	lea    ecx,[ebp-0x28]
65022eac:	jmp    0x650016b0
65022eb1:	lea    ecx,[ebp-0x28]
65022eb4:	jmp    0x650016b0
65022eb9:	lea    ecx,[ebp-0x28]
65022ebc:	jmp    0x650016b0
65022ec1:	lea    ecx,[ebp-0x28]
65022ec4:	jmp    0x650016b0
65022ec9:	lea    ecx,[ebp-0x28]
65022ecc:	jmp    0x650016b0
65022ed1:	lea    ecx,[ebp-0x28]
65022ed4:	jmp    0x650016b0
65022ed9:	lea    ecx,[ebp-0x28]
65022edc:	jmp    0x650016b0
65022ee1:	lea    ecx,[ebp-0x28]
65022ee4:	jmp    0x650016b0
65022ee9:	lea    ecx,[ebp-0x28]
65022eec:	jmp    0x650016b0
65022ef1:	lea    ecx,[ebp-0x28]
65022ef4:	jmp    0x650016b0
65022ef9:	lea    ecx,[ebp-0x28]
65022efc:	jmp    0x650016b0
65022f01:	lea    ecx,[ebp-0x28]
65022f04:	jmp    0x650016b0
65022f09:	lea    ecx,[ebp-0x28]
65022f0c:	jmp    0x650016b0
65022f11:	lea    ecx,[ebp-0x28]
65022f14:	jmp    0x650016b0
65022f19:	lea    ecx,[ebp-0x28]
65022f1c:	jmp    0x650016b0
65022f21:	lea    ecx,[ebp-0x28]
65022f24:	jmp    0x650016b0
65022f29:	lea    ecx,[ebp-0x28]
65022f2c:	jmp    0x650016b0
65022f31:	lea    ecx,[ebp-0x28]
65022f34:	jmp    0x650016b0
65022f39:	lea    ecx,[ebp-0x28]
65022f3c:	jmp    0x650016b0
65022f41:	lea    ecx,[ebp-0x28]
65022f44:	jmp    0x650016b0
65022f49:	lea    ecx,[ebp-0x28]
65022f4c:	jmp    0x650016b0
65022f51:	lea    ecx,[ebp-0x28]
65022f54:	jmp    0x650016b0
65022f59:	lea    ecx,[ebp-0x28]
65022f5c:	jmp    0x650016b0
65022f61:	lea    ecx,[ebp-0x28]
65022f64:	jmp    0x650016b0
65022f69:	lea    ecx,[ebp-0x28]
65022f6c:	jmp    0x650016b0
65022f71:	lea    ecx,[ebp-0x28]
65022f74:	jmp    0x650016b0
65022f79:	lea    ecx,[ebp-0x28]
65022f7c:	jmp    0x650016b0
65022f81:	lea    ecx,[ebp-0x28]
65022f84:	jmp    0x650016b0
65022f89:	lea    ecx,[ebp-0x28]
65022f8c:	jmp    0x650016b0
65022f91:	lea    ecx,[ebp-0x28]
65022f94:	jmp    0x650016b0
65022f99:	lea    ecx,[ebp-0x28]
65022f9c:	jmp    0x650016b0
65022fa1:	lea    ecx,[ebp-0x28]
65022fa4:	jmp    0x650016b0
65022fa9:	lea    ecx,[ebp-0x28]
65022fac:	jmp    0x650016b0
65022fb1:	lea    ecx,[ebp-0x28]
65022fb4:	jmp    0x650016b0
65022fb9:	lea    ecx,[ebp-0x28]
65022fbc:	jmp    0x650016b0
65022fc1:	lea    ecx,[ebp-0x28]
65022fc4:	jmp    0x650016b0
65022fc9:	lea    ecx,[ebp-0x28]
65022fcc:	jmp    0x650016b0
65022fd1:	lea    ecx,[ebp-0x28]
65022fd4:	jmp    0x650016b0
65022fd9:	lea    ecx,[ebp-0x28]
65022fdc:	jmp    0x650016b0
65022fe1:	lea    ecx,[ebp-0x28]
65022fe4:	jmp    0x650016b0
65022fe9:	lea    ecx,[ebp-0x28]
65022fec:	jmp    0x650016b0
65022ff1:	lea    ecx,[ebp-0x28]
65022ff4:	jmp    0x650016b0
65022ff9:	lea    ecx,[ebp-0x28]
65022ffc:	jmp    0x650016b0
65023001:	lea    ecx,[ebp-0x28]
65023004:	jmp    0x650016b0
65023009:	lea    ecx,[ebp-0x28]
6502300c:	jmp    0x650016b0
65023011:	lea    ecx,[ebp-0x28]
65023014:	jmp    0x650016b0
65023019:	lea    ecx,[ebp-0x28]
6502301c:	jmp    0x650016b0
65023021:	lea    ecx,[ebp-0x28]
65023024:	jmp    0x650016b0
65023029:	lea    ecx,[ebp-0x28]
6502302c:	jmp    0x650016b0
65023031:	lea    ecx,[ebp-0x28]
65023034:	jmp    0x650016b0
65023039:	lea    eax,[ebp-0x40]
6502303c:	jmp    0x65003e60
65023041:	lea    ecx,[ebp-0x28]
65023044:	jmp    0x650016b0
65023049:	mov    edx,DWORD PTR [esp+0x8]
6502304d:	lea    eax,[edx+0xc]
65023050:	mov    ecx,DWORD PTR [edx-0x4c]
65023053:	xor    ecx,eax
65023055:	call   0x650127bc
6502305a:	mov    ecx,DWORD PTR [edx+0x40c]
65023060:	xor    ecx,eax
65023062:	call   0x650127bc
65023067:	mov    eax,0x6502afd0
6502306c:	jmp    0x6501247e
65023071:	int3   
65023072:	int3   
65023073:	int3   
65023074:	int3   
65023075:	int3   
65023076:	int3   
65023077:	int3   
65023078:	int3   
65023079:	int3   
6502307a:	int3   
6502307b:	int3   
6502307c:	int3   
6502307d:	int3   
6502307e:	int3   
6502307f:	int3   
65023080:	lea    ecx,[ebp+0x40c]
65023086:	jmp    0x65001990
6502308b:	mov    eax,ds:0x650303fc
65023090:	and    eax,0xfffffffe
65023093:	mov    ds:0x650303fc,eax
65023098:	ret    
65023099:	lea    eax,[ebp-0x34]
6502309c:	jmp    0x65003e60
650230a1:	lea    ecx,[ebp-0x28]
650230a4:	jmp    0x650016b0
650230a9:	lea    ecx,[ebp-0x28]
650230ac:	jmp    0x650016b0
650230b1:	lea    ecx,[ebp-0x28]
650230b4:	jmp    0x650016b0
650230b9:	lea    ecx,[ebp-0x28]
650230bc:	jmp    0x650016b0
650230c1:	lea    ecx,[ebp-0x28]
650230c4:	jmp    0x650016b0
650230c9:	lea    ecx,[ebp-0x28]
650230cc:	jmp    0x650016b0
650230d1:	lea    ecx,[ebp-0x28]
650230d4:	jmp    0x650016b0
650230d9:	lea    ecx,[ebp-0x28]
650230dc:	jmp    0x650016b0
650230e1:	lea    ecx,[ebp-0x28]
650230e4:	jmp    0x650016b0
650230e9:	lea    ecx,[ebp-0x28]
650230ec:	jmp    0x650016b0
650230f1:	lea    ecx,[ebp-0x28]
650230f4:	jmp    0x650016b0
650230f9:	lea    ecx,[ebp-0x28]
650230fc:	jmp    0x650016b0
65023101:	lea    ecx,[ebp-0x28]
65023104:	jmp    0x650016b0
65023109:	lea    ecx,[ebp-0x28]
6502310c:	jmp    0x650016b0
65023111:	lea    ecx,[ebp-0x28]
65023114:	jmp    0x650016b0
65023119:	lea    ecx,[ebp-0x28]
6502311c:	jmp    0x650016b0
65023121:	lea    ecx,[ebp-0x28]
65023124:	jmp    0x650016b0
65023129:	lea    ecx,[ebp-0x28]
6502312c:	jmp    0x650016b0
65023131:	lea    ecx,[ebp-0x28]
65023134:	jmp    0x650016b0
65023139:	lea    ecx,[ebp-0x28]
6502313c:	jmp    0x650016b0
65023141:	lea    ecx,[ebp-0x28]
65023144:	jmp    0x650016b0
65023149:	lea    ecx,[ebp-0x28]
6502314c:	jmp    0x650016b0
65023151:	lea    ecx,[ebp-0x28]
65023154:	jmp    0x650016b0
65023159:	lea    ecx,[ebp-0x28]
6502315c:	jmp    0x650016b0
65023161:	lea    ecx,[ebp-0x28]
65023164:	jmp    0x650016b0
65023169:	lea    ecx,[ebp-0x28]
6502316c:	jmp    0x650016b0
65023171:	lea    ecx,[ebp-0x28]
65023174:	jmp    0x650016b0
65023179:	lea    ecx,[ebp-0x28]
6502317c:	jmp    0x650016b0
65023181:	lea    ecx,[ebp-0x28]
65023184:	jmp    0x650016b0
65023189:	lea    ecx,[ebp-0x28]
6502318c:	jmp    0x650016b0
65023191:	lea    ecx,[ebp-0x28]
65023194:	jmp    0x650016b0
65023199:	lea    ecx,[ebp-0x28]
6502319c:	jmp    0x650016b0
650231a1:	lea    ecx,[ebp-0x28]
650231a4:	jmp    0x650016b0
650231a9:	lea    ecx,[ebp-0x28]
650231ac:	jmp    0x650016b0
650231b1:	lea    ecx,[ebp-0x28]
650231b4:	jmp    0x650016b0
650231b9:	lea    ecx,[ebp-0x28]
650231bc:	jmp    0x650016b0
650231c1:	lea    ecx,[ebp-0x28]
650231c4:	jmp    0x650016b0
650231c9:	lea    ecx,[ebp-0x28]
650231cc:	jmp    0x650016b0
650231d1:	lea    eax,[ebp-0x40]
650231d4:	jmp    0x65003e60
650231d9:	lea    ecx,[ebp-0x28]
650231dc:	jmp    0x650016b0
650231e1:	mov    edx,DWORD PTR [esp+0x8]
650231e5:	lea    eax,[edx+0xc]
650231e8:	mov    ecx,DWORD PTR [edx-0x4c]
650231eb:	xor    ecx,eax
650231ed:	call   0x650127bc
650231f2:	mov    ecx,DWORD PTR [edx+0x40c]
650231f8:	xor    ecx,eax
650231fa:	call   0x650127bc
650231ff:	mov    eax,0x6502b150
65023204:	jmp    0x6501247e
65023209:	int3   
6502320a:	int3   
6502320b:	int3   
6502320c:	int3   
6502320d:	int3   
6502320e:	int3   
6502320f:	int3   
65023210:	mov    eax,DWORD PTR [ebp-0x54]
65023213:	and    eax,0x1
65023216:	je     0x65023228
6502321c:	and    DWORD PTR [ebp-0x54],0xfffffffe
65023220:	mov    ecx,DWORD PTR [ebp+0x4]
65023223:	jmp    0x65001990
65023228:	ret    
65023229:	lea    ecx,[ebp-0x50]
6502322c:	jmp    0x650016b0
65023231:	mov    edx,DWORD PTR [esp+0x8]
65023235:	lea    eax,[edx-0x58]
65023238:	mov    ecx,DWORD PTR [edx-0x5c]
6502323b:	xor    ecx,eax
6502323d:	call   0x650127bc
65023242:	mov    eax,0x6502b184
65023247:	jmp    0x6501247e
6502324c:	int3   
6502324d:	int3   
6502324e:	int3   
6502324f:	int3   
65023250:	mov    eax,DWORD PTR [ebp-0x28]
65023253:	and    eax,0x1
65023256:	je     0x65023268
6502325c:	and    DWORD PTR [ebp-0x28],0xfffffffe
65023260:	mov    ecx,DWORD PTR [ebp+0x4]
65023263:	jmp    0x65001990
65023268:	ret    
65023269:	lea    ecx,[ebp-0x24]
6502326c:	jmp    0x65001990
65023271:	lea    ecx,[ebp-0x20]
65023274:	jmp    0x65001990
65023279:	lea    ecx,[ebp-0x1c]
6502327c:	jmp    0x65001990
65023281:	lea    ecx,[ebp-0x18]
65023284:	jmp    0x65001990
65023289:	lea    ecx,[ebp-0x14]
6502328c:	jmp    0x65001990
65023291:	lea    ecx,[ebp-0x10]
65023294:	jmp    0x65001990
65023299:	mov    edx,DWORD PTR [esp+0x8]
6502329d:	lea    eax,[edx-0x30]
650232a0:	mov    ecx,DWORD PTR [edx-0x34]
650232a3:	xor    ecx,eax
650232a5:	call   0x650127bc
650232aa:	mov    eax,0x6502b1e0
650232af:	jmp    0x6501247e
650232b4:	int3   
650232b5:	int3   
650232b6:	int3   
650232b7:	int3   
650232b8:	int3   
650232b9:	int3   
650232ba:	int3   
650232bb:	int3   
650232bc:	int3   
650232bd:	int3   
650232be:	int3   
650232bf:	int3   
650232c0:	mov    eax,DWORD PTR [ebp-0x3c]
650232c3:	and    eax,0x1
650232c6:	je     0x650232d8
650232cc:	and    DWORD PTR [ebp-0x3c],0xfffffffe
650232d0:	mov    ecx,DWORD PTR [ebp+0x4]
650232d3:	jmp    0x65001990
650232d8:	ret    
650232d9:	lea    ecx,[ebp-0x50]
650232dc:	jmp    0x65001990
650232e1:	lea    ecx,[ebp-0x38]
650232e4:	jmp    0x65001990
650232e9:	mov    edx,DWORD PTR [esp+0x8]
650232ed:	lea    eax,[edx-0x54]
650232f0:	mov    ecx,DWORD PTR [edx-0x58]
650232f3:	xor    ecx,eax
650232f5:	call   0x650127bc
650232fa:	mov    eax,0x6502b21c
650232ff:	jmp    0x6501247e
65023304:	int3   
65023305:	int3   
65023306:	int3   
65023307:	int3   
65023308:	int3   
65023309:	int3   
6502330a:	int3   
6502330b:	int3   
6502330c:	int3   
6502330d:	int3   
6502330e:	int3   
6502330f:	int3   
65023310:	lea    ecx,[ebp+0xc]
65023313:	jmp    0x65001990
65023318:	lea    ecx,[ebp-0x28]
6502331b:	jmp    0x650016b0
65023320:	lea    ecx,[ebp-0x6c]
65023323:	jmp    0x650016b0
65023328:	lea    ecx,[ebp-0x88]
6502332e:	jmp    0x650016b0
65023333:	lea    ecx,[ebp-0xc0]
65023339:	jmp    0x650016b0
6502333e:	lea    ecx,[ebp-0xa4]
65023344:	jmp    0x650016b0
65023349:	mov    edx,DWORD PTR [esp+0x8]
6502334d:	lea    eax,[edx+0xc]
65023350:	mov    ecx,DWORD PTR [edx-0xc4]
65023356:	xor    ecx,eax
65023358:	call   0x650127bc
6502335d:	mov    ecx,DWORD PTR [edx+0x80]
65023363:	xor    ecx,eax
65023365:	call   0x650127bc
6502336a:	mov    eax,0x6502b270
6502336f:	jmp    0x6501247e
65023374:	int3   
65023375:	int3   
65023376:	int3   
65023377:	int3   
65023378:	int3   
65023379:	int3   
6502337a:	int3   
6502337b:	int3   
6502337c:	int3   
6502337d:	int3   
6502337e:	int3   
6502337f:	int3   
65023380:	mov    ecx,0x6502d4ec
65023385:	call   0x65011c0d
6502338a:	push   0x65023501
6502338f:	call   0x650128ef
65023394:	pop    ecx
65023395:	ret    
65023396:	mov    ecx,0x6502d528
6502339b:	call   0x65011be7
650233a0:	push   0x6502350b
650233a5:	call   0x650128ef
650233aa:	pop    ecx
650233ab:	ret    
650233ac:	call   DWORD PTR ds:0x65024104
650233b2:	push   0x65023515
650233b7:	mov    DWORD PTR ds:0x6502d554,0x65024bc8
650233c1:	mov    ds:0x6502d558,eax
650233c6:	mov    BYTE PTR ds:0x6502d55c,0x0
650233cd:	call   0x650128ef
650233d2:	pop    ecx
650233d3:	ret    
650233d4:	push   0x6502d554
650233d9:	mov    ecx,0x6502d560
650233de:	call   0x65011d80
650233e3:	push   0x6502351f
650233e8:	call   0x650128ef
650233ed:	pop    ecx
650233ee:	ret    
650233ef:	int3   
650233f0:	push   0x65023540
650233f5:	call   0x650128ef
650233fa:	pop    ecx
650233fb:	ret    
650233fc:	int3   
650233fd:	int3   
650233fe:	int3   
650233ff:	int3   
65023400:	push   ecx
65023401:	mov    eax,0x650303d0
65023406:	call   0x65007b10
6502340b:	pop    ecx
6502340c:	ret    
6502340d:	int3   
6502340e:	int3   
6502340f:	int3   
65023410:	mov    eax,0x650303f0
65023415:	jmp    0x65007b10
6502341a:	int3   
6502341b:	int3   
6502341c:	int3   
6502341d:	int3   
6502341e:	int3   
6502341f:	int3   
65023420:	mov    eax,0x650303e0
65023425:	jmp    0x65007b10
6502342a:	int3   
6502342b:	int3   
6502342c:	int3   
6502342d:	int3   
6502342e:	int3   
6502342f:	int3   
65023430:	push   ebp
65023431:	mov    ebp,esp
65023433:	and    esp,0xfffffff8
65023436:	mov    eax,ds:0x65030358
6502343b:	mov    edx,DWORD PTR [eax]
6502343d:	sub    esp,0xc
65023440:	push   esi
65023441:	push   eax
65023442:	mov    ecx,0x65030354
65023447:	push   ecx
65023448:	push   edx
65023449:	mov    esi,ecx
6502344b:	push   esi
6502344c:	lea    eax,[esp+0x18]
65023450:	push   eax
65023451:	call   0x650093c0
65023456:	mov    ecx,DWORD PTR ds:0x65030358
6502345c:	push   ecx
6502345d:	call   0x65011f62
65023462:	add    esp,0x4
65023465:	xor    eax,eax
65023467:	mov    ds:0x65030358,eax
6502346c:	mov    ds:0x6503035c,eax
65023471:	pop    esi
65023472:	mov    esp,ebp
65023474:	pop    ebp
65023475:	ret    
65023476:	int3   
65023477:	int3   
65023478:	int3   
65023479:	int3   
6502347a:	int3   
6502347b:	int3   
6502347c:	int3   
6502347d:	int3   
6502347e:	int3   
6502347f:	int3   
65023480:	push   ebp
65023481:	mov    ebp,esp
65023483:	and    esp,0xfffffff8
65023486:	mov    eax,ds:0x6503034c
6502348b:	mov    edx,DWORD PTR [eax]
6502348d:	sub    esp,0xc
65023490:	push   esi
65023491:	push   eax
65023492:	mov    ecx,0x65030348
65023497:	push   ecx
65023498:	push   edx
65023499:	mov    esi,ecx
6502349b:	push   esi
6502349c:	lea    eax,[esp+0x18]
650234a0:	push   eax
650234a1:	call   0x650090d0
650234a6:	mov    ecx,DWORD PTR ds:0x6503034c
650234ac:	push   ecx
650234ad:	call   0x65011f62
650234b2:	add    esp,0x4
650234b5:	xor    eax,eax
650234b7:	mov    ds:0x6503034c,eax
650234bc:	mov    ds:0x65030350,eax
650234c1:	pop    esi
650234c2:	mov    esp,ebp
650234c4:	pop    ebp
650234c5:	ret    
650234c6:	int3   
650234c7:	int3   
650234c8:	int3   
650234c9:	int3   
650234ca:	int3   
650234cb:	int3   
650234cc:	int3   
650234cd:	int3   
650234ce:	int3   
650234cf:	int3   
650234d0:	mov    eax,ds:0x6502d4dc
650234d5:	test   eax,eax
650234d7:	je     0x650234e2
650234d9:	push   eax
650234da:	call   0x65011f62
650234df:	add    esp,0x4
650234e2:	mov    DWORD PTR ds:0x6502d4dc,0x0
650234ec:	mov    DWORD PTR ds:0x6502d4e0,0x0
650234f6:	mov    DWORD PTR ds:0x6502d4e4,0x0
65023500:	ret    
65023501:	mov    ecx,0x6502d4ec
65023506:	jmp    0x65011b7b
6502350b:	mov    ecx,0x6502d528
65023510:	jmp    0x65011cbc
65023515:	mov    ecx,0x6502d554
6502351a:	jmp    0x65011cd4
6502351f:	mov    DWORD PTR ds:0x6502d560,0x65024bdc
65023529:	ret    
6502352a:	mov    DWORD PTR ds:0x6502d580,0x65024bf8
65023534:	mov    ecx,0x6502d580
65023539:	jmp    0x65012036
6502353e:	int3   
6502353f:	int3   
65023540:	push   0x6502d038
65023545:	call   DWORD PTR ds:0x650241a4
6502354b:	ret    
