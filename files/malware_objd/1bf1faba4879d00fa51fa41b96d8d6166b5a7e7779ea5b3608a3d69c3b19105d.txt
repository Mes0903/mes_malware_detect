
1bf1faba4879d00fa51fa41b96d8d6166b5a7e7779ea5b3608a3d69c3b19105d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0xbe55e01a
  402b89:	push   es
  402b8a:	inc    edi
  402b8b:	push   esi
  402b8c:	jp     0x402c08
  402b8e:	jp     0x402c0a
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0x6b],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x142f8bf
  402c38:	xchg   ebx,eax
  402c39:	mov    edi,0x54277196
  402c3e:	daa    
  402c3f:	data16 sbb ah,BYTE PTR [ebx-0x4249e817]
  402c46:	lock add esi,DWORD PTR ds:0xb6d96736
  402c4d:	loope  0x402cc9
  402c4f:	stc    
  402c50:	mov    edx,0x4216f331
  402c55:	(bad)  
  402c56:	(bad)  
  402c57:	nop
  402c58:	retf   
  402c59:	sub    cl,BYTE PTR [edi+0x1f7e778a]
  402c5f:	and    eax,0x1c771856
  402c64:	daa    
  402c65:	push   esp
  402c66:	xor    al,0x4d
  402c68:	pop    edi
  402c69:	or     bh,ch
  402c6b:	iret   
  402c6c:	ret    
  402c6d:	lock inc eax
  402c6f:	push   edx
  402c70:	push   0x4c6cced0
  402c75:	cmc    
  402c76:	mov    ebx,0x99c6280f
  402c7b:	mov    ds,WORD PTR [ebx]
  402c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c7e:	push   ss
  402c7f:	mov    es,WORD PTR [ebx-0x2812ed77]
  402c85:	mov    ah,0x89
  402c87:	shl    edi,1
  402c89:	pop    ebx
  402c8a:	test   eax,0x3d331d3
  402c8f:	pop    ds
  402c90:	retf   0x8d0a
  402c93:	ss sub eax,0xcc42d1ed
  402c99:	scas   eax,DWORD PTR es:[edi]
  402c9a:	mov    bl,0x53
  402c9c:	xor    dh,BYTE PTR [eax-0x645ed1f1]
  402ca2:	loope  0x402cfb
  402ca4:	jbe    0x402cf8
  402ca6:	in     al,dx
  402ca7:	inc    esp
  402ca8:	repz mov edx,0xd785178b
  402cae:	jae    0x402d0f
  402cb0:	jne    0x402ca7
  402cb2:	sar    BYTE PTR [ecx+0x3f06f26b],1
  402cb8:	imul   ebx,DWORD PTR [edi-0x76b912d3],0x5f
  402cbf:	push   ss
  402cc0:	inc    ebx
  402cc1:	rcr    DWORD PTR [esi+edx*8],cl
  402cc4:	cmp    edi,esp
  402cc6:	retf   0xc0e8
  402cc9:	and    DWORD PTR ds:0x60ba49f,ecx
  402ccf:	aas    
  402cd0:	pop    ebp
  402cd1:	fild   WORD PTR [ebx-0x266fea95]
  402cd7:	xchg   DWORD PTR [ebx],esi
  402cd9:	in     eax,dx
  402cda:	and    al,BYTE PTR [ecx-0x36a162a8]
  402ce0:	xchg   edx,eax
  402ce1:	pop    edi
  402ce2:	int3   
  402ce3:	cwde   
  402ce4:	mov    dh,0x19
  402ce6:	xchg   ebx,eax
  402ce7:	cmp    edx,eax
  402ce9:	add    esi,DWORD PTR ds:0x9681bacb
  402cef:	ret    0xdfbf
  402cf2:	sti    
  402cf3:	test   DWORD PTR [ecx+0x1a],0x1807d5bf
  402cfa:	jmp    0x7928:0xbfa609a8
  402d01:	push   0x906a8a04
  402d06:	outs   dx,BYTE PTR ds:[esi]
  402d07:	sbb    eax,0xf1474d9a
  402d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d0d:	pushf  
  402d0e:	ret    
  402d0f:	inc    esp
  402d10:	pop    ss
  402d11:	stc    
  402d12:	mov    ds:0x26bf57be,eax
  402d17:	push   es
  402d18:	cdq    
  402d19:	leave  
  402d1a:	jno    0x402d74
  402d1c:	pop    edx
  402d1d:	int3   
  402d1e:	adc    eax,0xa61432bd
  402d23:	popa   
  402d24:	dec    eax
  402d25:	out    dx,eax
  402d26:	out    0x53,al
  402d28:	xor    al,0xca
  402d2a:	push   ebp
  402d2b:	out    dx,al
  402d2c:	mov    al,ds:0x1844a609
  402d31:	icebp  
  402d32:	retf   
  402d33:	leave  
  402d34:	xchg   BYTE PTR [eax+ebp*4],bh
  402d37:	and    esi,esi
  402d39:	stos   DWORD PTR es:[edi],eax
  402d3a:	out    dx,eax
  402d3b:	push   esi
  402d3c:	inc    edx
  402d3d:	push   0x496bd49b
  402d42:	mov    dh,0x1b
  402d44:	ficom  WORD PTR [esp+ebp*1-0x7d]
  402d48:	and    eax,0x3ba0b935
  402d4d:	and    ebx,DWORD PTR [edi]
  402d4f:	in     al,dx
  402d50:	mov    ds:0x6962f5b,eax
  402d55:	loope  0x402d93
  402d57:	retf   0x6703
  402d5a:	sbb    eax,0x810babbf
  402d5f:	pushfw 
  402d61:	out    0x8f,al
  402d63:	retf   
  402d64:	loopne 0x402d30
  402d66:	push   bx
  402d68:	dec    edi
  402d69:	push   cs
  402d6a:	sbb    bl,cl
  402d6c:	hlt    
  402d6d:	addr16 jo 0x402dee
  402d70:	cmc    
  402d71:	and    ah,BYTE PTR [ebp+eiz*1+0x74]
  402d75:	mov    ebx,0xf40fce8c
  402d7a:	sbb    BYTE PTR [esi+0x31],al
  402d7d:	mov    eax,0x7bf27429
  402d82:	fidivr DWORD PTR [edx]
  402d84:	test   al,0x3a
  402d86:	scas   al,BYTE PTR es:[edi]
  402d87:	dec    edi
  402d88:	in     al,dx
  402d89:	push   eax
  402d8a:	adc    DWORD PTR ds:0xdac5d53e,ebx
  402d90:	jb     0x402db4
  402d92:	hlt    
  402d93:	dec    ebp
  402d94:	gs dec ecx
  402d96:	jns    0x402dd6
  402d98:	xchg   edx,eax
  402d99:	mov    es,ebx
  402d9b:	sahf   
  402d9c:	xchg   ebp,eax
  402d9d:	test   eax,0x91a5a1c0
  402da2:	jle    0x402dca
  402da4:	hlt    
  402da5:	adc    DWORD PTR [edx-0x3a],0xe8ed94c6
  402dac:	js     0x402db5
  402dae:	stos   BYTE PTR es:[edi],al
  402daf:	dec    ebx
  402db0:	in     eax,0x62
  402db2:	data16 cld 
  402db4:	add    al,0x5c
  402db6:	jmp    0xdbea:0x22d55a0f
  402dbd:	pop    es
  402dbe:	daa    
  402dbf:	pop    edi
  402dc0:	jp     0x402d87
  402dc2:	push   0x62
  402dc4:	xchg   ebx,eax
  402dc5:	mov    ds:0x6665c513,al
  402dca:	rcl    BYTE PTR cs:[ebx+0x30],0x93
  402dcf:	imul   ebp,DWORD PTR [ebp-0x74],0x57
  402dd3:	inc    esi
  402dd4:	add    BYTE PTR [edx],al
  402dd6:	shr    ebx,1
  402dd8:	ins    DWORD PTR es:[edi],dx
  402dd9:	xor    dh,dh
  402ddb:	add    ch,dh
  402ddd:	cmp    esi,DWORD PTR [ecx+0x6f34732c]
  402de3:	jmp    0x402e3e
  402de5:	xchg   DWORD PTR [eax-0x6faeac4],edx
  402deb:	cdq    
  402dec:	and    DWORD PTR [esi],ebp
  402dee:	push   edi
  402def:	or     BYTE PTR [eax-0x79],dl
  402df2:	popa   
  402df3:	sbb    esi,edx
  402df5:	sub    edi,DWORD PTR [eax+0x6]
  402df8:	mov    edi,0xbce300d3
  402dfd:	pop    esi
  402dfe:	mov    ?,WORD PTR [edi-0x46373791]
  402e04:	pushf  
  402e05:	jl     0x402e4f
  402e07:	retf   0x96a5
  402e0a:	or     eax,0xab617575
  402e0f:	loop   0x402dfa
  402e11:	or     DWORD PTR [ecx-0x40122286],ebp
  402e17:	cmp    al,0x69
  402e19:	and    BYTE PTR [ebx],bh
  402e1b:	or     ebp,esp
  402e1d:	inc    ebp
  402e1e:	xchg   bh,dh
  402e20:	ret    
  402e21:	sbb    al,0xed
  402e23:	push   0x1a6f6a88
  402e28:	call   0x65496ee3
  402e2d:	out    dx,al
  402e2e:	fsub   st,st(7)
  402e30:	add    BYTE PTR [ebx+ebp*2-0x7b1d9f81],bl
  402e37:	inc    ecx
  402e38:	es xor cl,ch
  402e3b:	dec    esp
  402e3c:	sub    bl,bh
  402e3e:	fcmovu st,st(0)
  402e40:	je     0x402e95
  402e42:	or     BYTE PTR ds:0xa7a7cd34,0x2d
  402e49:	add    DWORD PTR [esi-0x6e851c6c],edi
  402e4f:	jne    0x402e32
  402e51:	gs and al,0xb4
  402e54:	icebp  
  402e55:	lea    edi,[ebx]
  402e57:	lahf   
  402e58:	push   edx
  402e59:	mov    dh,0x4c
  402e5b:	jo     0x402e6b
  402e5d:	inc    ecx
  402e5e:	adc    BYTE PTR [edi+eiz*1],al
  402e61:	sbb    BYTE PTR [esi],0xbb
  402e64:	xor    BYTE PTR [eax-0x78],cl
  402e67:	outs   dx,DWORD PTR ds:[esi]
  402e68:	out    dx,al
  402e69:	test   eax,0x55e48c51
  402e6e:	outs   dx,BYTE PTR ds:[esi]
  402e6f:	push   esp
  402e70:	xor    al,0xd0
  402e72:	out    dx,eax
  402e73:	bound  ecx,QWORD PTR [edx+ebp*2]
  402e76:	mov    DWORD PTR [edx+edi*4],edi
  402e79:	lea    ebp,[eax-0x5e83d738]
  402e7f:	adc    al,0xb6
  402e81:	mov    eax,0x5dd3130d
  402e86:	ficomp WORD PTR [edx]
  402e88:	scas   al,BYTE PTR es:[edi]
  402e89:	mov    bh,0xb3
  402e8b:	mov    edi,0x7b36495d
  402e90:	fld    TBYTE PTR [edx+eax*4-0x3b]
  402e94:	inc    esi
  402e95:	mov    ecx,0x938741f4
  402e9a:	ret    
  402e9b:	mov    dl,cl
  402e9d:	lods   al,BYTE PTR ds:[esi]
  402e9e:	jns    0x402f1b
  402ea0:	loopne 0x402e6b
  402ea2:	shr    ah,0xe6
  402ea5:	imul   ecx,DWORD PTR [ebx+0x31efd24],0x3
  402eac:	xor    al,0x12
  402eae:	imul   edi,ebx,0xffffffcf
  402eb1:	add    esp,DWORD PTR [ebp+0x6c]
  402eb4:	xchg   esi,eax
  402eb5:	cmp    ebx,ebx
  402eb7:	ins    BYTE PTR es:[edi],dx
  402eb8:	jmp    0x1c9784f7
  402ebd:	push   ds
  402ebe:	sar    DWORD PTR [esi],1
  402ec0:	mov    DWORD PTR [ebx-0xc406fa6],edi
  402ec6:	xchg   ebx,eax
  402ec7:	push   edx
  402ec8:	ret    
  402ec9:	(bad)  
  402eca:	rol    DWORD PTR [ecx],1
  402ecc:	aad    0xe1
  402ece:	into   
  402ecf:	jge    0x402ed8
  402ed1:	jne    0x402f29
  402ed3:	add    al,0xee
  402ed5:	div    DWORD PTR [ecx-0x7f4a2a46]
  402edb:	cmp    dl,al
  402edd:	sbb    eax,0xd2634803
  402ee2:	xor    eax,0x71270b7f
  402ee7:	pop    ds
  402ee8:	repnz xchg edi,eax
  402eea:	call   0x71d1:0x375b6902
  402ef1:	jbe    0x402f00
  402ef3:	inc    ebx
  402ef4:	add    DWORD PTR [ebx+ecx*1-0x6a],0xb
  402ef9:	sbb    ah,BYTE PTR [ebx+esi*2]
  402efc:	sub    DWORD PTR [ecx],ecx
  402efe:	xchg   edi,eax
  402eff:	xchg   ebp,eax
  402f00:	out    0x66,al
  402f02:	inc    esp
  402f03:	push   ebx
  402f04:	inc    ebp
  402f05:	loope  0x402f1b
  402f07:	inc    ebp
  402f08:	loope  0x402f57
  402f0a:	xor    BYTE PTR [esi],0x34
  402f0d:	sti    
  402f0e:	xchg   esi,eax
  402f0f:	(bad)  [ebp-0x4a400561]
  402f15:	test   al,0xb
  402f17:	sub    dl,BYTE PTR [eax+0x1e]
  402f1a:	dec    ebx
  402f1b:	retf   
  402f1c:	jns    0x402f3c
  402f1e:	in     eax,dx
  402f1f:	or     ah,al
  402f21:	jge    0x402f4e
  402f23:	jmp    0x9a6fc4bf
  402f28:	mov    ecx,0x80e2583f
  402f2d:	xchg   DWORD PTR [eax],ebp
  402f2f:	into   
  402f30:	mov    esi,0xdece7fc8
  402f35:	dec    ecx
  402f36:	sti    
  402f37:	cmp    BYTE PTR [ebp-0x450214ef],ah
  402f3d:	ficomp WORD PTR [edx]
  402f3f:	test   BYTE PTR [edx-0x54],bh
  402f42:	mov    eax,0xdacbfb67
  402f47:	pop    ebx
  402f48:	and    BYTE PTR [esi+edi*2-0x3b],0xeb
  402f4d:	hlt    
  402f4e:	dec    eax
  402f4f:	lods   al,BYTE PTR ds:[esi]
  402f50:	xchg   BYTE PTR [esi-0x61296b1b],bl
  402f56:	popa   
  402f57:	ins    BYTE PTR es:[edi],dx
  402f58:	shl    al,cl
  402f5a:	and    ebp,ebp
  402f5c:	jl     0x402fc5
  402f5e:	cmp    DWORD PTR [edx+0x60],esi
  402f61:	pop    ss
  402f62:	into   
  402f63:	jmp    0xc588:0x78088655
  402f6a:	pop    es
  402f6b:	add    DWORD PTR [ebx+eax*8],ebp
  402f6e:	sbb    ebp,esi
  402f70:	pop    ds
  402f71:	in     al,0xdb
  402f73:	(bad)  
  402f75:	sti    
  402f76:	(bad)  
  402f77:	jmp    0xea407d4c
  402f7c:	xchg   ecx,eax
  402f7d:	pop    esi
  402f7e:	jno    0x402fb7
  402f80:	das    
  402f81:	fild   QWORD PTR [esi+0x7d]
  402f84:	adc    DWORD PTR [ebx],eax
  402f86:	pop    ebx
  402f87:	imul   ebx,eax,0x57a36afc
  402f8d:	jae    0x402f33
  402f8f:	sub    BYTE PTR [esi+edx*1],ch
  402f92:	shl    ah,cl
  402f94:	pushf  
  402f95:	dec    ebx
  402f96:	jmp    0xe87:0xc736fdd6
  402f9d:	jo     0x402f49
  402f9f:	adc    ah,BYTE PTR [ebp+0x76]
  402fa2:	(bad)  
  402fa3:	out    0xd7,eax
  402fa5:	xor    al,0x49
  402fa7:	or     eax,0xf63f37b2
  402fac:	hlt    
  402fad:	std    
  402fae:	xor    DWORD PTR [ebx-0x63d7e03c],edi
  402fb4:	(bad)  
  402fb5:	(bad)  
  402fb6:	xor    ebx,DWORD PTR [eax]
  402fb8:	int    0xbb
  402fba:	fwait
  402fbb:	xchg   BYTE PTR [ecx+esi*1],dh
  402fbe:	sbb    DWORD PTR [ebx],0xeee73252
  402fc4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc6:	pusha  
  402fc7:	(bad)  
  402fc8:	clc    
  402fc9:	out    dx,al
  402fca:	mov    edx,0xe6e9ee89
  402fcf:	pop    ds
  402fd0:	loopne 0x403006
  402fd2:	rcr    bh,cl
  402fd4:	fcomp  DWORD PTR [ebx+0x79]
  402fd7:	dec    ebx
  402fd8:	dec    ebx
  402fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fda:	dec    ebx
  402fdb:	enter  0x6a6f,0xb0
  402fdf:	and    DWORD PTR [edi],edx
  402fe1:	mov    DWORD PTR [eax+0x3b],0x62a45d29
  402fe8:	in     eax,dx
  402fe9:	addr16 aam 0x2a
  402fec:	xchg   ebp,eax
  402fed:	jg     0x402faa
  402fef:	sbb    al,0xb7
  402ff1:	fisub  WORD PTR [ebx+0x378bc063]
  402ff7:	imul   ebx,DWORD PTR [eax-0x15873df0],0x7ff5ce47
  403001:	outs   dx,DWORD PTR ds:[esi]
  403002:	mov    esp,DWORD PTR [esp+ebx*2+0x3bfa17a]
  403009:	call   0xb296:0x3a7b1366
  403010:	mov    dh,0xc0
  403012:	jle    0x402fb2
  403014:	imul   ecx,ebx,0xffffff96
  403017:	xchg   ebp,ebx
  403019:	and    al,0xae
  40301b:	les    esi,FWORD PTR [esi+0x3e932b1d]
  403021:	and    BYTE PTR [edx],0x70
  403024:	jmp    0x403089
  403026:	mov    esi,0x8fcabd19
  40302b:	cld    
  40302c:	jp     0x403021
  40302e:	push   ebx
  40302f:	jns    0x403048
  403031:	jno    0x4030ae
  403033:	or     al,0xc1
  403035:	mov    BYTE PTR [eax],dh
  403037:	and    al,0xf5
  403039:	jae    0x402ffb
  40303b:	push   es
  40303c:	mov    WORD PTR [ebp-0x4908a335],cs
  403042:	add    al,0x61
  403044:	dec    esi
  403045:	cdq    
  403046:	or     eax,0x6954749e
  40304b:	pop    edi
  40304c:	add    edi,DWORD PTR ds:0x16d3a395
  403052:	icebp  
  403053:	rcr    BYTE PTR [edx-0x3a6c806c],cl
  403059:	mov    esp,0xedec15b2
  40305e:	add    cl,ch
  403060:	in     eax,dx
  403061:	dec    ebx
  403062:	adc    esi,esi
  403064:	pop    esi
  403065:	sub    eax,edx
  403067:	jecxz  0x40306a
  403069:	pop    ecx
  40306a:	daa    
  40306b:	mov    cl,0x2e
  40306d:	push   ss
  40306e:	scas   eax,DWORD PTR es:[edi]
  40306f:	sub    DWORD PTR [ebx+eax*4+0x5c],esp
  403073:	xor    eax,eax
  403075:	ss mov cl,0x31
  403078:	das    
  403079:	adc    al,BYTE PTR [ebx-0x3]
  40307c:	in     al,dx
  40307d:	inc    ebp
  40307e:	je     0x403006
  403080:	pushf  
  403081:	ins    DWORD PTR es:[edi],dx
  403082:	pop    ds
  403083:	sub    ebp,ebx
  403085:	add    eax,ebx
  403087:	jmp    0xe9c4ff7d
  40308c:	ins    DWORD PTR es:[edi],dx
  40308d:	cmp    cl,BYTE PTR [esi+0x17a8884e]
  403093:	lods   eax,DWORD PTR ds:[esi]
  403094:	out    dx,al
  403095:	pop    esp
  403096:	leave  
  403097:	and    bh,BYTE PTR [edi+0x1ad096a]
  40309d:	mov    cl,0x5
  40309f:	lds    ebp,FWORD PTR [eax+edx*2+0x37]
  4030a3:	popa   
  4030a4:	mov    dl,BYTE PTR [ebx-0x21230f64]
  4030aa:	cld    
  4030ab:	push   edi
  4030ac:	aam    0x7e
  4030ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030af:	(bad)  
  4030b0:	and    eax,0x7b6fecdc
  4030b5:	xchg   esi,eax
  4030b7:	inc    ecx
  4030b8:	ds loopne 0x40307a
  4030bb:	aam    0xf3
  4030bd:	xchg   edi,eax
  4030be:	mov    ecx,0x509f9a4f
  4030c3:	adc    eax,0x590ded22
  4030c8:	push   0x565a9557
  4030cd:	push   esi
  4030ce:	ds inc esp
  4030d0:	and    eax,0x7159f339
  4030d5:	and    edx,DWORD PTR [edx]
  4030d7:	jb     0x403094
  4030d9:	and    eax,0x8649ce36
  4030de:	ret    
  4030df:	mul    DWORD PTR [edx-0x67]
  4030e2:	fnsave [ecx]
  4030e4:	inc    DWORD PTR [ebx+0x5f26011c]
  4030ea:	das    
  4030eb:	stos   BYTE PTR es:[edi],al
  4030ec:	mov    fs,WORD PTR [ecx+ebx*4]
  4030ef:	xchg   edi,eax
  4030f0:	mov    BYTE PTR [ebp+eax*4-0x22],ah
  4030f4:	push   esp
  4030f5:	outs   dx,BYTE PTR ds:[esi]
  4030f6:	je     0x40307c
  4030f8:	adc    al,0x4
  4030fa:	adc    edi,ebx
  4030fc:	int3   
  4030fd:	mov    eax,0x9a17f54b
  403102:	mov    ebp,0xa46c3807
  403107:	clc    
  403108:	jbe    0x40314c
  40310a:	data16 jge 0x40316e
  40310d:	repnz test ebx,edi
  403110:	mov    ch,0xe
  403112:	xchg   esp,eax
  403113:	sub    eax,0xe891505a
  403118:	loop   0x4030b4
  40311a:	std    
  40311b:	adc    cl,BYTE PTR [ecx+0x61]
  40311e:	push   ds
  40311f:	dec    ebp
  403120:	jle    0x40310b
  403122:	mov    al,ds:0x543d43d2
  403127:	pop    ss
  403128:	jge    0x4030d1
  40312a:	push   esi
  40312b:	inc    ebp
  40312c:	cwde   
  40312d:	mov    ds:0xa3595aa6,al
  403132:	or     dh,BYTE PTR ds:0x60aff150
  403138:	xchg   ecx,eax
  403139:	xchg   ebx,eax
  40313a:	mov    esp,edx
  40313c:	and    DWORD PTR [esi+0x40],edi
  40313f:	xchg   ecx,ebx
  403141:	jp     0x4030eb
  403143:	push   es
  403144:	xor    al,0x19
  403146:	mov    edi,esi
  403148:	idiv   BYTE PTR [ebp-0x42]
  40314b:	out    0x47,eax
  40314d:	les    eax,FWORD PTR [edi]
  40314f:	jnp    0x4030e3
  403151:	mov    ds:0xf943045c,al
  403156:	fld    DWORD PTR [esi+0x5da7844a]
  40315c:	xor    bl,al
  40315e:	cs push edi
  403160:	jge    0x4030e9
  403162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403163:	stos   BYTE PTR es:[edi],al
  403164:	aas    
  403165:	retf   0x8d97
  403168:	xor    eax,0x119ff6aa
  40316d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40316e:	outs   dx,BYTE PTR ds:[esi]
  40316f:	aaa    
  403170:	(bad)  
  403171:	in     eax,0xdf
  403173:	in     eax,dx
  403174:	xor    eax,0x8610ff48
  403179:	jo     0x4031bd
  40317b:	mov    ds:0xc08499f0,al
  403180:	mov    ds,WORD PTR [ecx]
  403182:	push   edx
  403183:	jns    0x4031dc
  403185:	mov    edx,0x36f132ee
  40318a:	retf   0x7d87
  40318d:	push   esi
  40318e:	xchg   esi,eax
  40318f:	dec    edx
  403190:	and    bl,BYTE PTR [ebp-0x20da7592]
  403196:	jne    0x403161
  403198:	adc    al,0x38
  40319a:	mov    eax,ds:0x24507825
  40319f:	dec    esi
  4031a0:	push   ecx
  4031a1:	imul   esi,DWORD PTR [edx],0x6d
  4031a4:	or     al,0x58
  4031a6:	lods   al,BYTE PTR ds:[esi]
  4031a7:	daa    
  4031a8:	push   ecx
  4031a9:	and    DWORD PTR [eax],esi
  4031ab:	mov    BYTE PTR [ebx+0x376d6914],ah
  4031b1:	mov    ss,WORD PTR [edx]
  4031b3:	add    al,0x63
  4031b5:	repnz mov ch,0xdc
  4031b8:	inc    ebx
  4031b9:	add    ch,cl
  4031bb:	lock mov dl,0xa2
  4031be:	push   ss
  4031bf:	lds    eax,FWORD PTR [esi+0x45]
  4031c2:	imul   ebx,DWORD PTR [ebp-0x15d15249],0xffffffb7
  4031c9:	sahf   
  4031ca:	xchg   edx,eax
  4031cb:	div    BYTE PTR [edx+esi*4+0x3a]
  4031cf:	push   ss
  4031d0:	aad    0x2e
  4031d2:	push   ds
  4031d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031d4:	sti    
  4031d5:	xor    ecx,DWORD PTR [ecx-0x4a]
  4031d8:	leave  
  4031d9:	mov    eax,0x49ed91ae
  4031de:	adc    esp,0xa6aacaa8
  4031e4:	ror    dh,cl
  4031e6:	mov    bh,0x21
  4031e8:	xchg   ebp,eax
  4031e9:	cmc    
  4031ea:	sub    al,0x55
  4031ec:	lds    ebx,FWORD PTR [eax]
  4031ee:	xchg   BYTE PTR [edi-0x7],ch
  4031f1:	lea    bx,[edx-0x5e]
  4031f5:	cwde   
  4031f6:	psrlw  mm3,QWORD PTR [edx-0x47]
  4031fa:	inc    ebp
  4031fb:	push   0xdd5b09f2
  403200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403201:	mov    ds:0x600c3222,eax
  403206:	popa   
  403207:	xchg   edi,eax
  403208:	das    
  403209:	ret    
  40320a:	jg     0x40319b
  40320c:	(bad)  
  40320d:	mov    al,0x8a
  40320f:	pop    edx
  403210:	jbe    0x403229
  403212:	xchg   ecx,eax
  403213:	mov    eax,0x15b7eaad
  403218:	data16 stc 
  40321a:	adc    DWORD PTR [edx],esi
  40321c:	sar    DWORD PTR [esi],cl
  40321e:	ret    0xe0a
  403221:	ret    
  403222:	and    cl,BYTE PTR [ebx]
  403224:	and    eax,0x755af3f0
  403229:	sub    al,0x4a
  40322b:	call   0xd31882cc
  403230:	out    0xbc,al
  403232:	in     eax,0xbc
  403234:	mov    bl,0x52
  403236:	adc    dh,BYTE PTR [ecx+0xdf4948e]
  40323c:	pop    esp
  40323d:	data16 sahf 
  40323f:	retf   
  403240:	jp     0x4031c4
  403242:	out    0x3d,eax
  403244:	loope  0x403246
  403246:	les    eax,FWORD PTR [edi-0x2a]
  403249:	sbb    eax,0x43b748b3
  40324e:	sar    DWORD PTR [eax-0x57],cl
  403251:	test   eax,0x7f73929f
  403256:	xchg   ebx,eax
  403257:	push   0xffffff82
  403259:	test   eax,0xad615bcc
  40325e:	and    al,0x3f
  403260:	(bad)  
  403261:	xor    dl,BYTE PTR [ebx]
  403263:	aam    0x52
  403265:	adc    al,0xd0
  403267:	and    ch,bl
  403269:	mov    esp,DWORD PTR [ebx]
  40326b:	out    dx,eax
  40326c:	mov    cl,0x8f
  40326e:	lods   al,BYTE PTR ds:[esi]
  40326f:	cmp    ebx,esi
  403271:	fisttp DWORD PTR [ebx]
  403273:	repnz sbb eax,0x603bb134
  403279:	xchg   esp,eax
  40327a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40327b:	es dec ebp
  40327d:	popf   
  40327e:	inc    esp
  40327f:	adc    DWORD PTR [edi-0x1766618c],esp
  403285:	(bad)  
  403286:	rcl    BYTE PTR [edi+0xa],1
  403289:	pop    ecx
  40328a:	scas   al,BYTE PTR es:[edi]
  40328b:	lea    esp,[edi]
  40328d:	mov    al,0xff
  40328f:	xchg   esp,eax
  403290:	mov    ebp,0xea97ef26
  403295:	mov    ?,WORD PTR [edx+esi*2+0x4d]
  403299:	pop    ds
  40329a:	sbb    eax,0xedd59f7e
  40329f:	mov    eax,ds:0x6876fb1d
  4032a4:	idiv   DWORD PTR [ebx]
  4032a6:	jge    0x40330d
  4032a8:	sbb    BYTE PTR [ecx+0x30ebfd29],al
  4032ae:	outs   dx,BYTE PTR ds:[esi]
  4032af:	ins    DWORD PTR es:[edi],dx
  4032b0:	pushf  
  4032b1:	imul   esp,DWORD PTR [ecx-0x40],0x33939019
  4032b8:	xchg   ebx,eax
  4032b9:	sbb    eax,DWORD PTR [edx+0x6870007e]
  4032bf:	fwait
  4032c0:	or     al,0xf7
  4032c2:	daa    
  4032c3:	and    DWORD PTR [esi],ebx
  4032c5:	inc    ebp
  4032c6:	cmp    al,BYTE PTR [edi]
  4032c8:	push   cs
  4032c9:	ins    BYTE PTR es:[edi],dx
  4032ca:	ins    BYTE PTR es:[edi],dx
  4032cb:	xchg   eax,esp
  4032cd:	mov    dh,0xe9
  4032cf:	mov    ds:0x6b0400ab,eax
  4032d4:	loope  0x4032cf
  4032d6:	xor    esp,esp
  4032d8:	cwde   
  4032d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032da:	sub    eax,0x595ead73
  4032df:	ret    0x8f44
  4032e2:	or     eax,edx
  4032e4:	inc    ebp
  4032e5:	xor    al,0xa0
  4032e7:	fnsave [esi+0x381796b7]
  4032ed:	stc    
  4032ee:	mov    ebp,0x1a5d1abc
  4032f3:	lods   al,BYTE PTR ds:[esi]
  4032f4:	dec    eax
  4032f5:	adc    DWORD PTR [edi-0x3e950267],esi
  4032fb:	pmaddwd mm7,QWORD PTR [ebx+edx*2-0x2a6a2d31]
  403303:	sub    DWORD PTR [edi+0xc],edi
  403306:	adc    dh,ah
  403308:	out    dx,al
  403309:	push   esp
  40330a:	jmp    0x403348
  40330c:	push   edi
  40330d:	in     eax,0x9a
  40330f:	fs cmp eax,0xb6c8e25a
  403315:	or     al,BYTE PTR [ebp+0x3c3aba5d]
  40331b:	popa   
  40331c:	es aad 0xcc
  40331f:	retf   
  403320:	mov    ah,0xd8
  403322:	fisubr DWORD PTR [esi]
  403324:	fwait
  403325:	not    bh
  403327:	jnp    0x403382
  403329:	pop    ds
  40332a:	popa   
  40332b:	add    DWORD PTR [ebx],eax
  40332d:	mov    ds:0x3e0088bc,al
  403332:	fiadd  WORD PTR [edx+0x76ac6f5b]
  403338:	in     al,dx
  403339:	push   es
  40333a:	cdq    
  40333b:	mov    ds:0x5fd6fce8,eax
  403340:	enter  0x8300,0x12
  403344:	mov    dl,0x25
  403346:	stos   DWORD PTR es:[edi],eax
  403347:	push   ebp
  403348:	add    edi,ebp
  40334a:	sub    eax,0x5501e593
  40334f:	ins    BYTE PTR es:[edi],dx
  403350:	and    al,0xf8
  403352:	and    BYTE PTR [esp+esi*2-0x54],bh
  403356:	aam    0x87
  403358:	inc    esp
  403359:	adc    bh,BYTE PTR [edx+0x3]
  40335c:	push   esp
  40335d:	add    ch,ch
  40335f:	ins    BYTE PTR es:[edi],dx
  403360:	dec    ebp
  403361:	test   eax,0x2ec5bcae
  403366:	into   
  403367:	into   
  403368:	aas    
  403369:	out    dx,eax
  40336a:	lods   eax,DWORD PTR ds:[esi]
  40336b:	jl     0x403397
  40336d:	push   0xffffff96
  40336f:	jnp    0x403389
  403371:	mov    ebx,0xad5a2bcf
  403376:	add    eax,0x55efc0bf
  40337b:	adc    al,0x3
  40337d:	cmp    BYTE PTR [esi+0x14854ec3],bh
  403383:	mov    edi,0xcfaef0b6
  403388:	xor    ch,bh
  40338a:	sti    
  40338b:	sub    DWORD PTR [eax+0x5d],0x53
  40338f:	popf   
  403390:	cli    
  403391:	pop    ebp
  403392:	scas   eax,DWORD PTR es:[edi]
  403393:	daa    
  403394:	pop    ss
  403395:	and    DWORD PTR [esi-0x3743188b],eax
  40339b:	sub    eax,0xd40b0f0f
  4033a0:	(bad)  
  4033a1:	jmp    0xce420373
  4033a6:	inc    eax
  4033a7:	mov    ecx,0xe902bf85
  4033ac:	cdq    
  4033ad:	adc    DWORD PTR [eax],ebp
  4033af:	jge    0x403358
  4033b1:	or     BYTE PTR [edi],0x6e
  4033b4:	dec    ebp
  4033b5:	outs   dx,DWORD PTR ds:[esi]
  4033b6:	fcmovnbe st,st(6)
  4033b8:	xor    al,0x76
  4033ba:	mov    dl,0x57
  4033bc:	shl    dh,0x5b
  4033bf:	(bad)  
  4033c0:	pop    edx
  4033c1:	fld    TBYTE PTR [eax+ecx*8-0x1ce31b6d]
  4033c8:	push   ecx
  4033c9:	cld    
  4033ca:	jle    0x403406
  4033cc:	outs   dx,BYTE PTR ds:[esi]
  4033cd:	jge    0x4033b3
  4033cf:	xchg   edx,eax
  4033d0:	(bad)  
  4033d1:	(bad)  
  4033d2:	mov    DWORD PTR [eax-0x129c027b],esi
  4033d8:	aam    0x65
  4033da:	loopne 0x403380
  4033dc:	or     DWORD PTR [ecx+ebp*2],eax
  4033df:	inc    BYTE PTR gs:[ecx]
  4033e2:	test   bl,cl
  4033e4:	cs enter 0x3447,0x8a
  4033e9:	cmp    edx,DWORD PTR [edx]
  4033eb:	push   edx
  4033ec:	repnz imul esi,DWORD PTR [ebx+0x36],0x4f
  4033f1:	jno    0x40342f
  4033f3:	mov    es,ebx
  4033f5:	dec    eax
  4033f6:	mov    WORD PTR [edi],cs
  4033f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033f9:	shl    ebp,1
  4033fb:	pop    es
  4033fc:	jns    0x4033bd
  4033fe:	std    
  4033ff:	fsubr  QWORD PTR [esi]
  403401:	xchg   edi,eax
  403402:	push   cs
  403403:	or     ebx,DWORD PTR [esi+0xae15818]
  403409:	mov    esp,cs
  40340b:	mov    eax,0xfa5cbbc6
  403410:	jmp    DWORD PTR [edi+0x3d]
  403413:	mov    eax,ds:0x1fef462d
  403418:	mov    bl,cl
  40341a:	sbb    BYTE PTR ds:0xe54461f7,0x2
  403421:	mov    eax,0xd75383a2
  403426:	or     bh,BYTE PTR [ebx+0x6a5a8eca]
  40342c:	push   0xcae39f23
  403431:	or     ebx,DWORD PTR [ecx-0xbce62cb]
  403437:	adc    ebp,DWORD PTR [esi]
  403439:	or     cl,BYTE PTR [esi+ecx*2-0x50]
  40343d:	enter  0x2d55,0x67
  403441:	sbb    DWORD PTR [edi],0xa2af593e
  403447:	dec    ecx
  403448:	in     eax,dx
  403449:	imul   esp,DWORD PTR [esi-0x34],0xafd25b62
  403450:	inc    ebx
  403451:	test   BYTE PTR [ebp+0x3de0e8bf],0x84
  403458:	inc    esi
  403459:	xchg   BYTE PTR [edx],dl
  40345b:	xchg   ebx,eax
  40345c:	loop   0x403498
  40345e:	scas   eax,DWORD PTR es:[edi]
  40345f:	mov    dh,0xf8
  403461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403462:	adc    dl,bl
  403464:	mov    ch,0x2e
  403466:	or     DWORD PTR gs:[esi],edx
  403469:	dec    edi
  40346a:	and    BYTE PTR [ebx-0x40578a44],bl
  403470:	(bad)  
  403471:	push   ss
  403472:	sar    BYTE PTR [eax],cl
  403474:	jecxz  0x4033fd
  403476:	out    dx,al
  403477:	call   0xd2716d3f
  40347c:	or     BYTE PTR [ebp+ebp*2+0x797dee1c],0x2e
  403484:	adc    ebp,eax
  403486:	mov    edx,0xb97e80f6
  40348b:	pusha  
  40348c:	mov    al,0xb3
  40348e:	sahf   
  40348f:	ficomp DWORD PTR [ebp+0x37]
  403492:	add    BYTE PTR [edx+0x2292f9bf],dh
  403498:	aas    
  403499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40349a:	push   ebp
  40349b:	cld    
  40349c:	inc    esi
  40349d:	inc    esi
  40349e:	dec    esp
  40349f:	clc    
  4034a0:	test   BYTE PTR [ebp+0x4f633301],ah
  4034a6:	fsubr  DWORD PTR [eax+0x7c]
  4034a9:	adc    esp,DWORD PTR [ecx+0x46cc77de]
  4034af:	sub    bh,BYTE PTR [ecx-0x19]
  4034b2:	jecxz  0x403512
  4034b4:	jecxz  0x4034d7
  4034b6:	pop    es
  4034b7:	push   ss
  4034b8:	fldpi  
  4034ba:	mov    dh,BYTE PTR ds:[esi]
  4034bd:	pop    ds
  4034be:	mov    edx,0xdd567cbd
  4034c3:	inc    ebp
  4034c4:	jno    0x403544
  4034c6:	mov    edi,0x4a9307c7
  4034cb:	pop    eax
  4034cc:	scas   al,BYTE PTR es:[edi]
  4034cd:	push   esi
  4034ce:	push   ebx
  4034cf:	in     al,0x60
  4034d1:	ret    
  4034d2:	cs jnp 0x403550
  4034d5:	fs ins BYTE PTR es:[edi],dx
  4034d7:	test   al,0x83
  4034d9:	jne    0x40354f
  4034db:	cmp    BYTE PTR [ebp-0x54],ch
  4034de:	dec    esp
  4034df:	adc    al,0x9c
  4034e1:	push   esp
  4034e2:	mov    eax,ds:0xdc23e411
  4034e7:	loopne 0x4034f3
  4034e9:	rcl    esp,0xd2
  4034ec:	(bad)  
  4034ed:	call   0x11c93db6
  4034f2:	pop    ss
  4034f3:	jno    0x4034b6
  4034f5:	dec    ebx
  4034f6:	inc    eax
  4034f7:	or     ah,BYTE PTR [edx+esi*2-0x68d58c1f]
  4034fe:	xchg   esp,eax
  4034ff:	aas    
  403500:	or     BYTE PTR [esi-0x2b86f557],dh
  403506:	cmp    DWORD PTR [edi],ebx
  403508:	mov    ds:0x60fea064,al
  40350d:	or     al,0x70
  40350f:	leave  
  403510:	data16 mov al,ds:0xf2cc090a
  403516:	inc    edx
  403517:	aam    0x7
  403519:	sbb    ebx,DWORD PTR [edi+0x83db2ec]
  40351f:	jp     0x40351d
  403521:	ins    BYTE PTR es:[edi],dx
  403522:	loop   0x403580
  403524:	jno    0x4034c8
  403526:	jae    0x4034f6
  403528:	or     eax,0xe4aa45d6
  40352d:	fst    DWORD PTR [edx]
  40352f:	jo     0x40350c
  403531:	lea    esi,[eax]
  403533:	mov    ebx,0x93175b65
  403538:	or     BYTE PTR [ebx+0x488fce6d],bh
  40353e:	sub    bh,dl
  403540:	mov    dl,0x89
  403542:	mov    al,ds:0xdeee41d5
  403547:	sub    ebx,DWORD PTR [ecx-0x4f]
  40354a:	dec    esi
  40354b:	cmp    al,0x5e
  40354d:	fwait
  40354e:	nop
  40354f:	mov    ecx,0xe52932e
  403554:	addr16 inc ebp
  403556:	push   eax
  403557:	aaa    
  403558:	or     ah,BYTE PTR [edx-0x77]
  40355b:	push   es
  40355c:	dec    eax
  40355d:	lock pop ebx
  40355f:	mov    eax,ds:0x5daf8239
  403564:	push   ebp
  403565:	or     BYTE PTR [ebp+0x75],ch
  403568:	call   0x7350fe3f
  40356d:	mov    eax,edi
  40356f:	xor    al,0xed
  403571:	push   ebx
  403572:	mov    ecx,0xf5339997
  403577:	xchg   ebx,eax
  403578:	pushf  
  403579:	xchg   BYTE PTR [edx+0x2],al
  40357c:	ror    dl,0x1f
  40357f:	bound  edx,QWORD PTR [edi+0x79]
  403582:	ins    BYTE PTR es:[edi],dx
  403583:	sti    
  403584:	push   0x3cdba396
  403589:	nop
  40358a:	push   0x6d92b374
  40358f:	cmp    edi,DWORD PTR [esi+ebp*2-0x14]
  403593:	out    0x73,eax
  403595:	aam    0xb4
  403597:	xchg   esp,eax
  403598:	loope  0x40353f
  40359a:	call   0x2f6d:0x686eaaa6
  4035a1:	in     al,0x38
  4035a3:	stc    
  4035a4:	mov    esi,esp
  4035a6:	dec    ecx
  4035a7:	push   eax
  4035a8:	push   ebx
  4035a9:	push   esi
  4035aa:	mov    bh,dh
  4035ac:	in     al,dx
  4035ad:	push   0xb6288796
  4035b2:	sar    al,0xb8
  4035b5:	or     DWORD PTR [edx+edx*2-0x64f34563],esp
  4035bc:	jmp    0x7c366f18
  4035c1:	clc    
  4035c2:	dec    ebp
  4035c3:	xor    edx,DWORD PTR ds:0x89818524
  4035c9:	mov    es,WORD PTR [edi+0x337010b7]
  4035cf:	clc    
  4035d0:	jg     0x4035c3
  4035d2:	and    DWORD PTR [ebx+0x5e],esp
  4035d5:	jb     0x403627
  4035d7:	loopne 0x403593
  4035d9:	push   ebp
  4035da:	jle    0x4035e0
  4035dc:	sub    eax,0x3eee5437
  4035e1:	cmp    eax,0x1f35862b
  4035e6:	mov    al,0x25
  4035e8:	clc    
  4035e9:	adc    eax,0xb82ee27d
  4035ee:	push   ss
  4035ef:	sub    esi,DWORD PTR [edx+edx*8]
  4035f2:	std    
  4035f3:	aas    
  4035f4:	cwde   
  4035f5:	loopne 0x403579
  4035f7:	xchg   BYTE PTR [ebx-0x5a],bh
  4035fa:	or     ch,0x7
  4035fd:	mov    esp,0x66817279
  403602:	aas    
  403603:	(bad)  [ebx+0x460d84fe]
  403609:	fisubr WORD PTR [edx+ecx*1+0x4479ffb0]
  403610:	jae    0x40359e
  403612:	js     0x403669
  403614:	and    DWORD PTR [esi],0x964f583e
  40361a:	ins    BYTE PTR es:[edi],dx
  40361b:	add    bl,BYTE PTR [esi-0x1]
  40361e:	jno    0x4035af
  403620:	stos   BYTE PTR es:[edi],al
  403621:	ret    
  403622:	fdiv   st(6),st
  403624:	mov    bl,0xd3
  403626:	jl     0x4035da
  403628:	js     0x4035b8
  40362a:	or     DWORD PTR [esi-0x1077d00c],edi
  403630:	(bad)  
  403631:	test   BYTE PTR [esp+edi*2],0x28
  403635:	mov    WORD PTR [ebp-0x5ec280eb],es
  40363b:	xor    eax,esp
  40363d:	aaa    
  40363e:	aaa    
  40363f:	dec    esi
  403640:	pusha  
  403641:	jb     0x4036b7
  403643:	in     al,dx
  403644:	cdq    
  403645:	mov    ds,WORD PTR [edi]
  403647:	pushf  
  403648:	dec    ecx
  403649:	lock (bad) 
  40364b:	mov    DWORD PTR [edx+0x43],0x9bbbf1d0
  403652:	inc    ecx
  403653:	mov    cl,0x48
  403655:	mov    ecx,0xe286f969
  40365a:	lgs    dx,DWORD PTR ss:[edi+0x5af9f614]
  403663:	loope  0x40368f
  403665:	std    
  403666:	neg    bl
  403668:	cmp    al,0xba
  40366a:	icebp  
  40366b:	inc    ebp
  40366c:	jb     0x4036a3
  40366e:	xchg   ecx,eax
  40366f:	les    esp,FWORD PTR [eax-0x77]
  403672:	push   ds
  403673:	icebp  
  403674:	dec    esi
  403675:	dec    ecx
  403676:	shl    DWORD PTR [edi],cl
  403678:	test   DWORD PTR [eax+0x3bbcd898],ebp
  40367e:	sar    edi,0xf5
  403681:	aad    0x45
  403683:	cdq    
  403684:	loopne 0x4036e3
  403686:	loope  0x4036b8
  403688:	xchg   ecx,eax
  403689:	sbb    DWORD PTR [esi+0x73a7d758],ebp
  40368f:	je     0x40363a
  403691:	jno    0x4036c4
  403693:	dec    eax
  403694:	std    
  403695:	cmp    BYTE PTR [eax-0x62c7caa4],ah
  40369b:	ja     0x4036f6
  40369d:	fwait
  40369e:	fs ins BYTE PTR es:[edi],dx
  4036a0:	inc    ecx
  4036a1:	int3   
  4036a2:	ss mov edx,0x6b76dd46
  4036a8:	cmp    eax,0xc89e6190
  4036ad:	adc    eax,0x760c3b15
  4036b2:	push   0x78f58e86
  4036b7:	cmp    bl,dl
  4036b9:	jecxz  0x40366a
  4036bb:	loopne 0x403722
  4036bd:	ror    eax,cl
  4036bf:	call   0xbb32:0x66192cfd
  4036c6:	clc    
  4036c7:	jecxz  0x403682
  4036c9:	fwait
  4036ca:	mov    ds:0x59164cc,al
  4036cf:	push   ss
  4036d0:	inc    esi
  4036d1:	enter  0x7bf3,0x2
  4036d5:	inc    esp
  4036d6:	mov    cl,0x22
  4036d8:	loop   0x4036c1
  4036da:	shr    DWORD PTR [ebx+0x45b4826a],1
  4036e0:	repz xor ebx,DWORD PTR ds:[ebx+edx*8]
  4036e5:	fcmovnu st,st(0)
  4036e7:	dec    edx
  4036e8:	jmp    DWORD PTR [edi-0x4]
  4036eb:	mov    esi,DWORD PTR [edi-0x6d]
  4036ee:	dec    edi
  4036ef:	adc    eax,0xf55db0ec
  4036f4:	push   ebp
  4036f5:	jae    0x40374f
  4036f7:	pusha  
  4036f8:	ins    BYTE PTR es:[edi],dx
  4036f9:	out    dx,eax
  4036fa:	jmp    0x40376f
  4036fc:	lods   al,BYTE PTR ds:[esi]
  4036fd:	test   edx,0xf2ba034f
  403703:	ins    BYTE PTR es:[edi],dx
  403704:	dec    eax
  403705:	mov    dh,0x9b
  403707:	leave  
  403708:	loope  0x403720
  40370a:	pop    ds
  40370b:	sub    edx,eax
  40370d:	jne    0x40377b
  40370f:	in     eax,0x90
  403711:	pop    ss
  403712:	dec    ecx
  403713:	jno    0x403756
  403715:	fucomi st,st(3)
  403717:	shl    BYTE PTR [edx],0xb1
  40371a:	les    esi,FWORD PTR cs:[edi-0xa91238e]
  403721:	xor    ecx,DWORD PTR [ebp-0x6d]
  403724:	sbb    eax,0x875224f0
  403729:	fsubr  DWORD PTR [ebx+0x45]
  40372c:	push   esi
  40372d:	pop    edx
  40372e:	stc    
  40372f:	repnz into 
  403731:	leave  
  403732:	retf   0x9ab4
  403735:	jl     0x403793
  403737:	push   esi
  403738:	(bad)  
  403739:	fwait
  40373a:	outs   dx,DWORD PTR ds:[esi]
  40373b:	push   eax
  40373c:	add    bh,BYTE PTR [ecx+0x110acfad]
  403742:	(bad)  
  403744:	ret    
  403745:	into   
  403746:	std    
  403747:	jno    0x40374a
  403749:	xor    ah,BYTE PTR [esi+0x2f7d33ca]
  40374f:	in     al,0x12
  403751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403752:	mov    ecx,eax
  403754:	xchg   ebx,ebx
  403756:	in     al,dx
  403757:	jl     0x403741
  403759:	mov    ah,0xe8
  40375b:	adc    BYTE PTR [eax],bl
  40375d:	lods   al,BYTE PTR ds:[esi]
  40375e:	loope  0x403727
  403760:	mov    eax,0x378c1f4c
  403765:	test   ch,al
  403767:	add    ebx,DWORD PTR [edx+0x4327e397]
  40376d:	inc    ebp
  40376e:	pop    esp
  40376f:	pop    esi
  403770:	in     eax,0xdb
  403772:	mov    eax,ds:0xb20a6026
  403777:	nop
  403778:	add    edx,esp
  40377a:	fld    TBYTE PTR [edx-0x75]
  40377d:	lods   al,BYTE PTR ds:[esi]
  40377e:	cld    
  40377f:	(bad)  
  403780:	loop   0x403724
  403782:	or     DWORD PTR gs:[ecx+0x4],edx
  403786:	and    BYTE PTR ds:0x428f4abf,bl
  40378c:	sbb    cl,BYTE PTR [edi]
  40378e:	sahf   
  40378f:	mov    ds:0xeb893494,al
  403794:	pop    eax
  403795:	cmp    al,0xb3
  403797:	mov    ecx,DWORD PTR [edi]
  403799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40379a:	jo     0x40372a
  40379c:	jbe    0x403805
  40379e:	cdq    
  40379f:	inc    ebx
  4037a0:	(bad)  
  4037a1:	popf   
  4037a2:	mov    edx,0x4de6ab6f
  4037a7:	and    bh,0x2b
  4037aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ab:	scas   al,BYTE PTR es:[edi]
  4037ac:	mov    ebp,0x20569d41
  4037b1:	adc    BYTE PTR [ebx*8+0x225c04c9],dh
  4037b8:	fadd   st(6),st
  4037ba:	sti    
  4037bb:	mov    ah,0xf0
  4037bd:	dec    ecx
  4037be:	pop    esp
  4037bf:	add    DWORD PTR [ecx+0x68],edx
  4037c2:	xchg   edx,eax
  4037c3:	jnp    0x403815
  4037c5:	test   DWORD PTR [edi+ebx*4+0x6],edi
  4037c9:	add    esp,DWORD PTR [ecx-0x46ffa05c]
  4037cf:	ret    
  4037d0:	pop    eax
  4037d1:	adc    bl,BYTE PTR [edx-0x7a]
  4037d4:	push   esi
  4037d5:	clc    
  4037d6:	cmp    dl,BYTE PTR [ebx]
  4037d8:	inc    edx
  4037d9:	and    eax,0xf9211217
  4037de:	push   esi
  4037df:	(bad)  
  4037e0:	clc    
  4037e1:	and    ecx,DWORD PTR [eax+0x5a86f521]
  4037e7:	xor    DWORD PTR [ecx+0x3528634b],edi
  4037ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ee:	in     eax,dx
  4037ef:	push   es
  4037f0:	es adc ch,ah
  4037f3:	mov    eax,0xb7a95a3a
  4037f8:	sbb    dh,BYTE PTR [eax+0x12]
  4037fb:	xchg   ecx,eax
  4037fc:	xor    dl,0x33
  4037ff:	mov    ds:0xccf37491,eax
  403804:	aaa    
  403805:	mov    edx,0xfd755c4e
  40380a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40380c:	push   eax
  40380d:	sub    al,0x22
  40380f:	fcom   st(7)
  403811:	push   es
  403812:	test   DWORD PTR [esi],eax
  403814:	idiv   BYTE PTR [ebx-0x2b898b53]
  40381a:	lock dec edi
  40381c:	mov    WORD PTR [ebp+ebx*1-0x1a],ss
  403820:	xor    al,0x91
  403822:	xchg   esp,eax
  403823:	nop
  403824:	cmp    esi,0xffffffbf
  403827:	add    dl,ch
  403829:	jecxz  0x4037ed
  40382b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40382c:	inc    ecx
  40382d:	jo     0x403821
  40382f:	jbe    0x4037f4
  403831:	ins    DWORD PTR es:[edi],dx
  403832:	jmp    0x1b3d:0x1fb62901
  403839:	cmp    DWORD PTR [ecx],ebp
  40383b:	dec    esi
  40383c:	fwait
  40383d:	pop    ebx
  40383e:	xchg   DWORD PTR [edx+0x4d1bd1dc],ebx
  403844:	aad    0x47
  403846:	xchg   esi,eax
  403847:	cmc    
  403848:	imul   esi,DWORD PTR [ebx],0xf41ebb5b
  40384e:	cmp    esp,0x39
  403851:	dec    ecx
  403852:	std    
  403853:	and    ch,0x75
  403856:	adc    eax,0xa21b3380
  40385b:	fist   WORD PTR [ebp+0x22f3c70b]
  403861:	or     al,0xa4
  403863:	push   ebx
  403864:	inc    ecx
  403865:	lods   eax,DWORD PTR ds:[esi]
  403866:	ins    DWORD PTR es:[edi],dx
  403867:	ds jmp 0x1ed3a63f
  40386d:	(bad)  
  40386e:	(bad)
  403873:	dec    esp
  403874:	jp     0x403877
  403876:	mov    ah,0xe9
  403878:	inc    esp
  403879:	fmul   st,st(4)
  40387b:	mov    ds:0xaae74606,eax
  403880:	ins    DWORD PTR es:[edi],dx
  403881:	in     eax,0x36
  403883:	jg     0x403898
  403885:	ja     0x403811
  403887:	pop    ebp
  403888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403889:	jg     0x403848
  40388b:	sbb    al,0x8c
  40388d:	test   eax,0x2e376d03
  403892:	ror    esp,1
  403894:	mov    dl,0x91
  403896:	jb     0x403877
  403898:	sbb    eax,0x819763fb
  40389d:	push   ebp
  40389e:	adc    BYTE PTR [ebp+0x6a],bh
  4038a1:	and    al,0xce
  4038a3:	adc    esp,0xffffff8c
  4038a6:	lock push ds
  4038a8:	sbb    eax,0xd232a437
  4038ad:	jb     0x4038ed
  4038af:	inc    edi
  4038b0:	mov    ebp,esp
  4038b2:	xchg   esi,eax
  4038b3:	push   esi
  4038b4:	push   ebp
  4038b5:	pop    ds
  4038b6:	and    ah,BYTE PTR [edx]
  4038b8:	stos   BYTE PTR es:[edi],al
  4038b9:	int    0x79
  4038bb:	pushf  
  4038bc:	popf   
  4038bd:	jle    0x403840
  4038bf:	xchg   ah,cl
  4038c1:	mov    esp,?
  4038c3:	xor    esp,ecx
  4038c5:	sbb    eax,0x2f3ecc5d
  4038ca:	push   ebx
  4038cb:	xchg   ebx,eax
  4038cc:	push   ecx
  4038cd:	and    DWORD PTR fs:[edi+0x55],ebp
  4038d1:	mov    esi,0x9875e3db
  4038d6:	ja     0x4038a8
  4038d8:	xor    eax,0x3dd41eb6
  4038dd:	popa   
  4038de:	popf   
  4038df:	jle    0x403867
  4038e1:	push   ebx
  4038e2:	dec    esp
  4038e3:	cmp    BYTE PTR [eax],ch
  4038e5:	sbb    esp,DWORD PTR ds:0x81b6fb25
  4038eb:	fimul  DWORD PTR [esi+0x7a149c7d]
  4038f1:	(bad)  
  4038f2:	adc    cl,BYTE PTR [eax-0x6b25b0a6]
  4038f8:	jmp    0x16cfef61
  4038fd:	out    dx,al
  4038fe:	es mov ecx,0xfd19ffd2
  403904:	retf   0xa7d4
  403907:	cmp    eax,0x417765b9
  40390c:	xchg   esp,eax
  40390d:	xor    ecx,DWORD PTR [eax]
  40390f:	out    0x11,eax
  403911:	sbb    DWORD PTR [edi+edi*2-0x72c1f791],0xf6ea396a
  40391c:	mov    WORD PTR ds:0x1cd09749,?
  403922:	push   esi
  403923:	rcl    BYTE PTR [esi+0x2d1eb489],1
  403929:	push   esp
  40392a:	in     al,0xc3
  40392c:	mov    bh,0xfb
  40392e:	iret   
  40392f:	and    eax,DWORD PTR [ebx-0x58456c14]
  403935:	not    ebx
  403937:	pop    edx
  403938:	or     edi,ecx
  40393a:	clc    
  40393b:	xor    DWORD PTR [ebp-0x55],eax
  40393e:	repz iret 
  403940:	popa   
  403941:	test   esp,esp
  403943:	pop    edx
  403944:	pop    ebp
  403945:	cdq    
  403946:	inc    eax
  403947:	mov    ecx,edi
  403949:	xor    DWORD PTR [ebp-0x79],esi
  40394c:	ret    0x6aba
  40394f:	das    
  403950:	sbb    eax,0xf5a0f2c9
  403955:	leave  
  403956:	jae    0x403911
  403958:	pop    ebx
  403959:	sbb    ebx,ecx
  40395b:	(bad)  
  40395d:	in     eax,dx
  40395e:	(bad)  
  40395f:	inc    edx
  403960:	fcom   DWORD PTR [ebp+0x5e]
  403964:	outs   dx,DWORD PTR ds:[esi]
  403965:	(bad)  
  403966:	aam    0xb1
  403968:	push   esp
  403969:	shl    DWORD PTR [ebx-0x35483bac],0xc8
  403970:	cld    
  403971:	or     ebp,DWORD PTR [edx+0x797daa59]
  403977:	sbb    cl,BYTE PTR [eax]
  403979:	ins    BYTE PTR es:[edi],dx
  40397a:	scas   eax,DWORD PTR es:[edi]
  40397b:	mov    cl,BYTE PTR [edx+0x32]
  40397e:	jo     0x4039d0
  403980:	xchg   ebp,eax
  403981:	or     al,0x11
  403983:	jge    0x403995
  403985:	enter  0x5947,0xea
  403989:	pop    esp
  40398a:	sub    BYTE PTR [ecx+0x67],cl
  40398d:	rol    BYTE PTR [ebp+0x56],0x9e
  403991:	pop    esp
  403992:	or     al,BYTE PTR [ebx-0x716187b6]
  403998:	int    0x2c
  40399a:	fstp   TBYTE PTR [edx+0x27]
  40399d:	jns    0x4039e7
  40399f:	xchg   edx,eax
  4039a0:	pusha  
  4039a1:	dec    DWORD PTR [ebp-0x4e]
  4039a4:	outs   dx,BYTE PTR ds:[esi]
  4039a5:	aas    
  4039a6:	mov    ch,0xb0
  4039a8:	pop    ecx
  4039a9:	cmp    BYTE PTR [eax-0x4bb1f15e],bl
  4039af:	add    eax,0xbc3de345
  4039b4:	cmp    eax,0xbb3b0476
  4039b9:	jg     0x4039fa
  4039bb:	ret    0x361c
  4039be:	leave  
  4039bf:	adc    eax,DWORD PTR [edx-0x270be9ef]
  4039c5:	sub    eax,0xf0d62e30
  4039ca:	sub    ah,cl
  4039cc:	jecxz  0x403984
  4039ce:	cmp    al,0xf2
  4039d0:	scas   al,BYTE PTR es:[edi]
  4039d1:	mov    al,ds:0xad87d149
  4039d6:	mov    ebp,0xa5bb4bc4
  4039db:	test   BYTE PTR [ebx-0x67731c90],al
  4039e1:	sbb    dh,0x8
  4039e4:	push   eax
  4039e5:	inc    ecx
  4039e6:	or     eax,0x7b06bb38
  4039eb:	popf   
  4039ec:	and    DWORD PTR [ebx-0x438f4bba],esi
  4039f2:	int3   
  4039f3:	and    cl,BYTE PTR [eax-0xee47da0]
  4039f9:	push   esp
  4039fa:	leave  
  4039fb:	dec    edi
  4039fc:	xchg   ecx,eax
  4039fd:	sbb    DWORD PTR [edx-0x58],ebx
  403a00:	push   ebx
  403a01:	cld    
  403a02:	and    BYTE PTR [ebp-0x79c3124e],bl
  403a08:	inc    esp
  403a09:	stos   BYTE PTR es:[edi],al
  403a0a:	pop    ebx
  403a0b:	out    0x50,eax
  403a0d:	addr16 push cs
  403a0f:	or     eax,DWORD PTR ds:0xc28e630c
  403a15:	leave  
  403a16:	enter  0xb5a9,0x28
  403a1a:	mov    edx,0xb709072d
  403a1f:	mov    edi,0x915fef08
  403a24:	arpl   WORD PTR [ebx+edi*8],bp
  403a27:	dec    edx
  403a28:	jge    0x403a26
  403a2a:	shl    DWORD PTR [ecx],1
  403a2c:	xchg   ebx,eax
  403a2d:	mov    ebx,0xf7dd97bb
  403a32:	push   cs
  403a33:	xor    dl,al
  403a35:	pop    edi
  403a37:	outs   dx,BYTE PTR ds:[esi]
  403a38:	shr    BYTE PTR [edi],cl
  403a3a:	gs sub al,0x65
  403a3d:	sub    BYTE PTR [esi+edi*4-0x6f],0x9a
  403a42:	(bad)  
  403a43:	gs clc 
  403a45:	inc    edi
  403a46:	imul   ecx,DWORD PTR [ecx],0x86e76b3e
  403a4c:	add    cl,BYTE PTR [ecx+0x8a978b1]
  403a52:	aad    0xcf
  403a54:	aad    0x52
  403a56:	daa    
  403a57:	nop
  403a58:	push   0xffffffab
  403a5a:	ja     0x403ad5
  403a5c:	sbb    BYTE PTR [esi-0x58c2be67],ch
  403a62:	push   ecx
  403a63:	aas    
  403a64:	es xor al,0x4d
  403a67:	rol    BYTE PTR [esi+0xd],1
  403a6a:	or     eax,edi
  403a6c:	rcr    BYTE PTR [edx+eiz*8+0x618747d7],cl
  403a73:	inc    edi
  403a74:	retf   0xdc76
  403a77:	mov    edx,0x36a76747
  403a7c:	loopne 0x403a80
  403a7e:	add    BYTE PTR [eax+ebp*1+0x5a4c38f9],dl
  403a85:	(bad)  
  403a86:	jbe    0x403aaf
  403a88:	inc    edi
  403a89:	cli    
  403a8a:	mov    ch,0xc5
  403a8c:	inc    edi
  403a8d:	jp     0x403a22
  403a8f:	scas   al,BYTE PTR es:[edi]
  403a90:	push   ss
  403a91:	jmp    0x403a15
  403a93:	sbb    BYTE PTR [edi+0x7e],bh
  403a96:	inc    edi
  403a97:	int    0x4c
  403a99:	inc    edi
  403a9a:	jo     0x403aa5
  403a9c:	push   esp
  403a9d:	cli    
  403a9e:	add    DWORD PTR [esi+edi*2],edi
  403aa1:	mov    ds,WORD PTR [esi]
  403aa3:	xchg   ebp,eax
  403aa4:	xchg   ecx,eax
  403aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aa6:	xor    al,0xb5
  403aa8:	push   es
  403aa9:	retf   
  403aaa:	mov    ch,0xe6
  403aac:	out    dx,eax
  403aad:	mov    al,0x25
  403aaf:	adc    al,0xa5
  403ab1:	(bad)  
  403ab2:	je     0x403acc
  403ab4:	cmp    eax,DWORD PTR [eax*1-0xf68a039]
  403abb:	mov    edx,0x691f45d0
  403ac0:	adc    BYTE PTR [edi-0x553a5fae],ah
  403ac6:	dec    edx
  403ac7:	lock lods al,BYTE PTR ds:[esi]
  403ac9:	aas    
  403aca:	and    eax,0xed9065a0
  403acf:	fadd   DWORD PTR [esi-0x58731ad8]
  403ad5:	push   ds
  403ad6:	repnz mov dl,0xba
  403ad9:	pop    ecx
  403ada:	push   eax
  403adb:	std    
  403adc:	int    0xe4
  403ade:	jae    0x403a7f
  403ae0:	mov    ds:0x56be63e,eax
  403ae5:	in     eax,dx
  403ae6:	ret    0x7461
  403ae9:	mov    dl,0xad
  403aeb:	enter  0x6a3d,0x71
  403aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403af0:	call   0xb6e4:0xefb19195
  403af7:	pop    edi
  403af8:	hlt    
  403af9:	shr    dl,cl
  403afb:	push   0x350bc16c
  403b00:	mov    edx,0x5d0f31ad
  403b05:	cwde   
  403b06:	jns    0x403b86
  403b08:	xor    eax,0x16703a1d
  403b0d:	aaa    
  403b0e:	xor    eax,0xaa06f041
  403b13:	sub    bh,cl
  403b15:	adc    eax,0x2dec5af4
  403b1a:	mov    ebx,0xe6b89b9d
  403b1f:	mov    eax,ds:0xc6fb9f96
  403b24:	sub    al,0x77
  403b26:	pop    edx
  403b27:	out    0xd2,al
  403b29:	mov    dl,0xaa
  403b2b:	out    0xf3,al
  403b2d:	out    0x9f,al
  403b2f:	cs (bad) 
  403b32:	mov    ebp,0x4a2a40fe
  403b37:	sbb    eax,0x661bada9
  403b3c:	push   ebx
  403b3d:	mul    BYTE PTR [ebx]
  403b3f:	xchg   esi,eax
  403b40:	sub    ebp,edi
  403b42:	retf   
  403b43:	fnstsw WORD PTR [edx]
  403b45:	push   cs
  403b46:	inc    edi
  403b47:	sbb    bh,BYTE PTR [ebx+edi*4-0x196592dd]
  403b4e:	pop    ds
  403b4f:	adc    al,0xbf
  403b51:	xchg   ebp,eax
  403b52:	pop    ebp
  403b53:	inc    esi
  403b54:	fidiv  WORD PTR [ebx-0x6e236b9f]
  403b5a:	(bad)  
  403b5b:	movaps xmm0,xmm2
  403b5e:	and    ah,BYTE PTR [esi+0x77521c1]
  403b64:	retf   0xe101
  403b67:	stos   DWORD PTR es:[edi],eax
  403b68:	adc    DWORD PTR ds:0x91c59c44,ebx
  403b6e:	pop    ebx
  403b6f:	jo     0x403b15
  403b71:	mov    ah,0x63
  403b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b74:	scas   al,BYTE PTR es:[edi]
  403b75:	or     ebp,DWORD PTR [eax-0x1d37c739]
  403b7b:	pop    ebx
  403b7c:	pop    edx
  403b7d:	out    0x61,al
  403b7f:	xchg   edi,eax
  403b80:	push   edi
  403b81:	call   0xfbfedf79
  403b86:	daa    
  403b87:	jmp    0x403bd4
  403b89:	scas   eax,DWORD PTR es:[edi]
  403b8a:	aam    0xb8
  403b8c:	mov    esi,0xf0a5c592
  403b91:	mov    bh,0xb0
  403b93:	pop    ss
  403b94:	adc    eax,0xf4f644b5
  403b99:	jge    0x403b91
  403b9b:	mov    bl,0x12
  403b9d:	cmp    eax,0x3ed8c487
  403ba2:	das    
  403ba3:	push   ecx
  403ba4:	stos   DWORD PTR es:[edi],eax
  403ba5:	or     BYTE PTR [esi],0xa8
  403ba8:	pop    esp
  403ba9:	adc    BYTE PTR [ebx+0x44],bl
  403bac:	sub    eax,0x5116f11a
  403bb1:	jl     0x403bb2
  403bb3:	nop
  403bb4:	imul   BYTE PTR [eax]
  403bb6:	cdq    
  403bb7:	rol    DWORD PTR [edi+0x1a],0xc
  403bbb:	fistp  WORD PTR [eax-0xb2e4fbd]
  403bc1:	enter  0x93c2,0xd1
  403bc5:	mov    bl,0x15
  403bc7:	pushf  
  403bc8:	pop    eax
  403bc9:	cmp    ebx,DWORD PTR [edx]
  403bcb:	mov    ecx,0xc07a2187
  403bd0:	pop    ebp
  403bd1:	xor    BYTE PTR [ebx+ebx*2+0x4a],bl
  403bd5:	aad    0x5d
  403bd7:	mov    BYTE PTR [edx+0x6919e24a],ch
  403bdd:	mov    dh,0x97
  403bdf:	xchg   edi,eax
  403be0:	xor    edi,ecx
  403be2:	push   edx
  403be3:	je     0x403bf2
  403be5:	daa    
  403be6:	test   BYTE PTR [edx+0x6ce54383],0x1b
  403bed:	pop    ss
  403bee:	test   BYTE PTR [ebp+0x53],bl
  403bf1:	adc    DWORD PTR [esi+edx*1+0x4c],esp
  403bf5:	out    0xd7,eax
  403bf7:	(bad)  
  403bf8:	xchg   edx,eax
  403bf9:	test   al,0x62
  403bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bfc:	leave  
  403bfd:	icebp  
  403bfe:	(bad)  
  403bff:	jo     0x403bd3
  403c01:	add    ah,BYTE PTR [esi+0x57f75d1d]
  403c07:	retf   0xb343
  403c0a:	setbe  BYTE PTR [esp+ebx*8-0xd]
  403c0f:	push   edi
  403c10:	cmp    edx,ebx
  403c12:	cmp    al,0xe9
  403c14:	repz mov edi,0x5393b017
  403c1a:	test   bl,dh
  403c1c:	fisttp WORD PTR [eax-0x4f]
  403c1f:	retf   0xe401
  403c22:	hlt    
  403c23:	jl     0x403c34
  403c25:	jl     0x403bc7
  403c27:	dec    ebx
  403c28:	add    BYTE PTR [eax+0x113cd468],0x4
  403c2f:	xchg   ecx,eax
  403c30:	pop    eax
  403c31:	pop    ss
  403c32:	neg    DWORD PTR [ecx]
  403c34:	mov    bl,0x48
  403c36:	pop    esi
  403c37:	mov    dl,0x9
  403c3a:	jle    0x403bc3
  403c3c:	rol    ch,cl
  403c3e:	dec    ebp
  403c3f:	ins    DWORD PTR es:[edi],dx
  403c40:	and    esp,DWORD PTR ds:0xf205b722
  403c46:	adc    eax,0xcbe5b8df
  403c4b:	xor    al,0xe9
  403c4d:	cmp    BYTE PTR [esp+eax*4+0x72a448f9],dl
  403c54:	mov    edx,DWORD PTR [edi]
  403c56:	xor    al,0x5c
  403c58:	push   0xffffffbf
  403c5a:	je     0x403c4a
  403c5c:	(bad)  
  403c5d:	(bad)  
  403c5e:	call   0xc8a1598e
  403c63:	jle    0x403c28
  403c65:	loope  0x403c0a
  403c67:	cmp    BYTE PTR [ecx],dh
  403c69:	test   al,0x5
  403c6b:	inc    eax
  403c6c:	icebp  
  403c6d:	(bad)
  403c70:	sbb    bh,dh
  403c72:	popf   
  403c73:	mov    ebp,ss
  403c75:	rcr    DWORD PTR [esi-0x4998fe6e],cl
  403c7b:	jno    0x403cf7
  403c7d:	addr16 mov ebp,0xeaae2353
  403c83:	mul    BYTE PTR [edi]
  403c85:	inc    ebx
  403c86:	push   ebx
  403c87:	inc    esp
  403c88:	and    ebp,DWORD PTR [edx]
  403c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c8b:	rcr    DWORD PTR [eax],1
  403c8d:	mov    al,0xe2
  403c8f:	test   eax,0xdc716684
  403c94:	sbb    dl,dl
  403c96:	jmp    0xd4a8:0xcd99bbd6
  403c9d:	mov    bh,0x76
  403c9f:	and    cl,BYTE PTR [edi]
  403ca1:	lods   eax,DWORD PTR ds:[esi]
  403ca2:	pop    ebx
  403ca3:	adc    DWORD PTR ds:0x5bb28346,0x17b77dd9
  403cad:	loop   0x403c83
  403caf:	popf   
  403cb0:	mov    bl,ah
  403cb2:	mov    bh,0x77
  403cb4:	pushf  
  403cb5:	sbb    al,0xcd
  403cb7:	leave  
  403cb8:	mov    ch,0x66
  403cba:	or     ebp,ebp
  403cbc:	xor    ecx,DWORD PTR [esi+ebx*4]
  403cbf:	clc    
  403cc0:	sbb    edx,DWORD PTR ds:0xd532d9aa
  403cc6:	push   0xffffffc9
  403cc8:	enter  0x7f9f,0x45
  403ccc:	repnz pop esi
  403cce:	add    bl,BYTE PTR [eax]
  403cd0:	xchg   ebx,eax
  403cd1:	sti    
  403cd2:	outs   dx,DWORD PTR ds:[esi]
  403cd3:	jecxz  0x403cba
  403cd5:	or     al,0x7a
  403cd7:	fwait
  403cd8:	(bad)  
  403cd9:	xchg   ebx,eax
  403cda:	aam    0xf5
  403cdc:	jne    0x403c63
  403cde:	je     0x403d35
  403ce0:	loope  0x403d26
  403ce2:	test   DWORD PTR [ebp-0x16],0x8cd95714
  403ce9:	push   ebx
  403cea:	icebp  
  403ceb:	imul   esp,DWORD PTR [esi-0x4b956ee2],0xe538aeef
  403cf5:	dec    edi
  403cf6:	mov    ebx,0x439db0f8
  403cfb:	aad    0x60
  403cfd:	push   edx
  403cfe:	or     al,0x5d
  403d00:	push   ecx
  403d01:	cli    
  403d02:	lock inc edx
  403d04:	jecxz  0x403d1e
  403d06:	jne    0x403cf1
  403d08:	(bad)  
  403d09:	mov    esp,0x4156db31
  403d0e:	add    ebp,esp
  403d10:	xor    BYTE PTR [eax+0x7dbd310d],0xe8
  403d17:	pop    edi
  403d18:	ins    DWORD PTR es:[edi],dx
  403d19:	add    edi,DWORD PTR [edx]
  403d1b:	and    DWORD PTR [eax-0x1f],ebp
  403d1e:	push   ds
  403d1f:	xor    dl,ah
  403d21:	push   0xa
  403d23:	aas    
  403d24:	xchg   esi,eax
  403d25:	sti    
  403d26:	inc    ecx
  403d27:	ja     0x403ccf
  403d29:	mov    ds:0x43cff2fe,al
  403d2e:	inc    ebp
  403d2f:	lahf   
  403d30:	mov    bl,0xee
  403d32:	out    0xb3,eax
  403d34:	push   ebp
  403d35:	add    edx,ecx
  403d37:	jg     0x403d1e
  403d39:	push   ss
  403d3a:	popf   
  403d3b:	(bad)  
  403d3c:	fcmovb st,st(7)
  403d3e:	push   edi
  403d3f:	jb     0x403d01
  403d41:	xchg   ebp,eax
  403d42:	mov    eax,ds:0xaede3087
  403d47:	leave  
  403d48:	cmp    edx,edx
  403d4a:	mov    bh,0x56
  403d4c:	jecxz  0x403dbb
  403d4e:	cmp    bh,bl
  403d50:	lods   eax,DWORD PTR ds:[esi]
  403d51:	ret    
  403d52:	xor    BYTE PTR [esi+0x2d95eb09],0x38
  403d59:	cmp    ch,BYTE PTR [edi-0x6a2fb2aa]
  403d5f:	sub    BYTE PTR [eax],ah
  403d61:	cld    
  403d62:	fdiv   QWORD PTR [edx-0x77]
  403d65:	add    esp,DWORD PTR [ebp+0x5bbeb830]
  403d6b:	add    cl,BYTE PTR [edi]
  403d6d:	and    al,0x78
  403d6f:	and    BYTE PTR [eax+0x44],0x73
  403d73:	leave  
  403d74:	fisttp DWORD PTR [ecx+0x7c]
  403d77:	lock pop ebx
  403d79:	leave  
  403d7a:	pop    eax
  403d7b:	xchg   ecx,eax
  403d7c:	mov    ebp,DWORD PTR [eax+0xe]
  403d7f:	cmp    DWORD PTR [edi+0x615beaf1],esi
  403d85:	push   ecx
  403d86:	push   cs
  403d87:	jmp    FWORD PTR ds:[ecx]
  403d8a:	sub    eax,0x1a1e9caa
  403d8f:	loopne 0x403d54
  403d91:	sbb    eax,0x1c9efa91
  403d96:	xor    BYTE PTR [edx-0x299e96e0],dh
  403d9c:	push   esi
  403d9d:	dec    edi
  403d9e:	loop   0x403d41
  403da0:	hlt    
  403da1:	mov    eax,ds:0xcd98bc7b
  403da6:	ret    0x4122
  403da9:	mov    WORD PTR [edi+0x57345a36],gs
  403daf:	call   0xb2a2:0x6e5967e
  403db6:	sbb    al,0xee
  403db8:	fidivr WORD PTR [esi+0x2a1bae6]
  403dbe:	jge    0x403d5f
  403dc0:	dec    eax
  403dc1:	and    dh,0x27
  403dc4:	in     eax,0x84
  403dc6:	fstp   QWORD PTR [edi]
  403dc8:	je     0x403dd6
  403dca:	add    BYTE PTR [ebx+ecx*4],cl
  403dcd:	imul   edx,DWORD PTR [edi],0xf7895b72
  403dd3:	les    ebp,FWORD PTR [ecx+0x221f7947]
  403dd9:	addr16 sub eax,0xe5cf48fb
  403ddf:	ss xchg esp,eax
  403de1:	jl     0x403d99
  403de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403de4:	or     DWORD PTR [edi+edx*8+0x2968a79],esi
  403deb:	iret   
  403dec:	inc    edx
  403ded:	fsubr  QWORD PTR [ecx-0x48f57ae]
  403df3:	mov    bl,0xb
  403df5:	or     dh,BYTE PTR [eax+esi*1+0x476e4e74]
  403dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dfd:	imul   esi,DWORD PTR [ebx+0x41391890],0xd
  403e04:	mov    esp,0x8ca129b9
  403e09:	inc    eax
  403e0a:	and    DWORD PTR [ecx],edx
  403e0c:	out    0x48,eax
  403e0e:	ds cli 
  403e10:	test   DWORD PTR [ecx+0x7cf46b45],ebp
  403e16:	rcr    BYTE PTR [ecx-0x4b8ae32c],0xeb
  403e1d:	mov    ds:0xd74aa443,eax
  403e22:	pop    ss
  403e23:	cmp    edi,DWORD PTR [edi+0x52]
  403e26:	mov    bh,0x4d
  403e28:	ss and edx,esi
  403e2b:	cmp    ebx,DWORD PTR [ebx+0x74]
  403e2e:	push   ds
  403e2f:	mov    ecx,0x7e723650
  403e34:	ret    0xfe9b
  403e37:	xchg   esp,eax
  403e38:	pop    ss
  403e39:	xor    cl,BYTE PTR [ebp+edx*1+0x2876f58e]
  403e40:	mov    al,0x17
  403e42:	or     eax,0xe79fd9a2
  403e47:	fnstsw WORD PTR [edx-0x5c]
  403e4a:	popf   
  403e4b:	shl    DWORD PTR [ecx-0x1d],cl
  403e4e:	lea    ecx,[esp+eiz*4+0x5a]
  403e52:	and    eax,DWORD PTR [edi-0x743e3f1d]
  403e58:	test   eax,0x6e1c505f
  403e5d:	jmp    0x731d:0xcc9e3617
  403e64:	rcr    DWORD PTR cs:[eax-0x4],0xe
  403e69:	stc    
  403e6a:	mov    al,ds:0x8e232b67
  403e6f:	xchg   al,ch
  403e71:	mov    BYTE PTR [eax+0x4b],0x49
  403e75:	arpl   WORD PTR [esi],cx
  403e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e78:	clc    
  403e79:	adc    ebp,edx
  403e7b:	pop    esp
  403e7c:	jp     0x403eb6
  403e7e:	and    BYTE PTR [edx+0x543f55b7],0xd6
  403e85:	sbb    eax,0xdce46e96
  403e8a:	push   eax
  403e8b:	pop    esp
  403e8c:	popf   
  403e8d:	out    0x77,eax
  403e8f:	mov    bh,0xe7
  403e91:	mov    al,ds:0x837865d1
  403e96:	repnz push ss
  403e98:	and    esp,DWORD PTR [eax]
  403e9a:	adc    edx,DWORD PTR [ebp-0x1c310e3f]
  403ea0:	scas   eax,DWORD PTR es:[edi]
  403ea1:	(bad)  
  403ea2:	jmp    0x9f22:0x7fdc9694
  403ea9:	popf   
  403eaa:	pop    ecx
  403eab:	mov    eax,ds:0x49dd0607
  403eb0:	call   0x1a4f57c7
  403eb5:	sbb    ebp,edx
  403eb7:	jp     0x403eb4
  403eb9:	sub    edi,DWORD PTR [esi]
  403ebb:	dec    edi
  403ebc:	cli    
  403ebd:	(bad)
  403ec1:	dec    ecx
  403ec2:	or     eax,0xe41a874a
  403ec7:	jecxz  0x403f41
  403ec9:	out    dx,eax
  403eca:	sub    BYTE PTR [eax-0x1e],bl
  403ecd:	mul    DWORD PTR [ebx]
  403ecf:	js     0x403e82
  403ed1:	push   eax
  403ed2:	lods   al,BYTE PTR ds:[esi]
  403ed3:	pusha  
  403ed4:	and    BYTE PTR [edx],ah
  403ed6:	mov    ?,WORD PTR [ecx-0x6302fed4]
  403edc:	jg     0x403e9c
  403ede:	xor    ecx,ebx
  403ee0:	and    BYTE PTR [edx-0x6d6aca13],0xbe
  403ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ee8:	scas   al,BYTE PTR es:[edi]
  403ee9:	retf   
  403eea:	pushf  
  403eeb:	or     DWORD PTR [eax],esi
  403eed:	test   BYTE PTR [ecx+0x56],dl
  403ef0:	jo     0x403ef9
  403ef2:	fbld   TBYTE PTR [eax]
  403ef4:	popf   
  403ef5:	push   ds
  403ef6:	out    0x86,eax
  403ef8:	pop    ss
  403ef9:	stos   DWORD PTR es:[edi],eax
  403efa:	call   0xf61fe532
  403eff:	int    0x30
  403f01:	sub    esp,DWORD PTR [edx]
  403f03:	adc    eax,0xeae1ab95
  403f08:	add    ah,BYTE PTR [esi]
  403f0a:	xor    al,0xda
  403f0c:	fimul  WORD PTR [eax+0x3a220026]
  403f12:	stos   BYTE PTR es:[edi],al
  403f13:	clc    
  403f14:	scas   eax,DWORD PTR es:[edi]
  403f15:	mov    DWORD PTR [ecx+0x60],ebp
  403f18:	sar    BYTE PTR [ecx],1
  403f1a:	xchg   esi,eax
  403f1b:	dec    esi
  403f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f1d:	call   0xee41:0xf1dd4a9b
  403f24:	pop    esi
  403f25:	sub    DWORD PTR [ebx],ebx
  403f27:	aam    0xde
  403f29:	scas   eax,DWORD PTR es:[edi]
  403f2a:	fistp  DWORD PTR [edi+0x3cbba10c]
  403f30:	xor    ecx,DWORD PTR [edi-0x1685b97a]
  403f36:	pop    eax
  403f37:	call   0xa8bb336f
  403f3c:	(bad)  
  403f3d:	nop
  403f3e:	outs   dx,BYTE PTR ds:[esi]
  403f3f:	lds    esp,FWORD PTR [edi+0x2af43810]
  403f45:	push   0x35a6801
  403f4a:	leave  
  403f4b:	les    ecx,FWORD PTR [edx-0x79]
  403f4e:	popa   
  403f4f:	enter  0xa74d,0x5a
  403f53:	(bad)  
  403f54:	arpl   bp,cx
  403f56:	xchg   esp,eax
  403f57:	dec    edi
  403f58:	sub    DWORD PTR [ebx+0x19],0xb8e20a0
  403f5f:	loope  0x403ef8
  403f61:	xor    BYTE PTR [ebp+0x3d],dh
  403f64:	out    0x9d,al
  403f66:	iret   
  403f67:	sti    
  403f68:	dec    ebp
  403f69:	stos   DWORD PTR es:[edi],eax
  403f6a:	mov    WORD PTR [ebx],cs
  403f6c:	cmp    BYTE PTR [eax],bl
  403f6e:	push   edx
  403f6f:	sub    eax,0xb78eeacb
  403f74:	mov    esp,0x8632a5bb
  403f79:	xchg   ecx,eax
  403f7a:	outs   dx,BYTE PTR ds:[esi]
  403f7b:	push   esp
  403f7c:	xor    esi,DWORD PTR [ecx+0x317058cd]
  403f82:	test   al,0x80
  403f84:	jno    0x403f20
  403f86:	(bad)  
  403f87:	push   esi
  403f88:	sti    
  403f89:	mov    dh,BYTE PTR [eax+0x2f]
  403f8c:	pop    ss
  403f8d:	loopne 0x403f48
  403f8f:	test   eax,0xa155dcd0
  403f94:	data16 fidivr WORD PTR [edi-0x22b0af65]
  403f9b:	pop    edi
  403f9c:	adc    esi,edx
  403f9e:	outs   dx,DWORD PTR ds:[esi]
  403f9f:	pop    esp
  403fa0:	mov    es,WORD PTR [ebp+0x4c]
  403fa3:	or     ch,dh
  403fa5:	js     0x403f96
  403fa7:	push   ss
  403fa8:	loope  0x404027
  403faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fab:	ins    DWORD PTR es:[edi],dx
  403fac:	xor    eax,0x8d04b76e
  403fb1:	es inc edi
  403fb3:	jg     0x403f66
  403fb5:	adc    BYTE PTR [edi+0x15],al
  403fb8:	adc    al,0x57
  403fba:	pop    es
  403fbb:	bound  ebx,QWORD PTR [eax]
  403fbd:	jecxz  0x403f7d
  403fbf:	mov    ss,WORD PTR [edx+0x6d]
  403fc2:	daa    
  403fc3:	fisubr WORD PTR [ecx]
  403fc5:	mov    WORD PTR [ecx-0x71],ss
  403fc8:	xchg   esi,eax
  403fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fca:	out    dx,al
  403fcb:	cmc    
  403fcc:	scas   ax,WORD PTR es:[edi]
  403fce:	stc    
  403fcf:	ficom  WORD PTR [ebx+0x4e]
  403fd2:	xchg   ebp,eax
  403fd3:	popf   
  403fd4:	scas   eax,DWORD PTR es:[edi]
  403fd5:	sbb    DWORD PTR [ecx+0x74],ecx
  403fd8:	dec    edi
  403fd9:	jno    0x403fc8
  403fdb:	pop    ss
  403fdc:	xchg   edi,eax
  403fdd:	add    DWORD PTR [edx+ebp*1-0x2bcbfbe1],ebx
  403fe4:	adc    ebp,DWORD PTR [eax]
  403fe6:	ret    0x41b3
  403fe9:	mov    BYTE PTR [edx+0x68],bl
  403fec:	mov    bh,BYTE PTR [edi+ebx*1]
  403fef:	dec    edi
  403ff0:	call   0x97581396
  403ff5:	sti    
  403ff6:	xor    eax,DWORD PTR [eax+ebp*4-0xd033297]
  403ffd:	fldenv [ebx]
  403fff:	into   
  404000:	pusha  
  404001:	es dec ebx
  404003:	gs push ds
  404005:	pop    edi
  404006:	ret    
  404007:	xchg   ebx,eax
  404008:	in     al,dx
  404009:	or     edx,DWORD PTR [edi-0x2]
  40400c:	inc    ecx
  40400d:	cmp    bl,bl
  40400f:	push   edx
  404010:	jge    0x403fd5
  404012:	sub    DWORD PTR [esi-0x635d0618],0x44
  404019:	mov    edx,0xc5928f98
  40401e:	jns    0x40404a
  404020:	add    DWORD PTR [esi+0x70571619],edi
  404026:	movlps xmm7,QWORD PTR [eax+0x4a]
  40402a:	and    BYTE PTR [ebx-0xb],ch
  40402d:	adc    BYTE PTR [edi-0x618fa1f0],dh
  404033:	cmp    bh,0x3
  404036:	inc    esp
  404037:	icebp  
  404038:	push   ebx
  404039:	loopne 0x403fd9
  40403b:	hlt    
  40403c:	icebp  
  40403d:	pop    ebp
  40403e:	cmp    eax,0x99e7384
  404043:	int    0x3c
  404045:	sbb    BYTE PTR [edx+0x5d5887b7],al
  40404b:	add    ah,BYTE PTR [esi+edi*1+0x10]
  40404f:	adc    bl,ah
  404051:	mov    ch,0x1f
  404053:	div    BYTE PTR [edi+0x2cfb2826]
  404059:	adc    ebx,ebx
  40405b:	pop    ds
  40405c:	xlat   BYTE PTR ds:[ebx]
  40405d:	ins    BYTE PTR es:[edi],dx
  40405e:	add    al,0x76
  404060:	das    
  404061:	fwait
  404062:	push   ebx
  404063:	sub    dl,dh
  404065:	arpl   WORD PTR [edi-0x3f],sp
  404068:	outs   dx,BYTE PTR ds:[esi]
  404069:	add    BYTE PTR [esi+eax*4],bl
  40406c:	push   ss
  40406d:	cmp    al,0xb1
  40406f:	test   al,0x30
  404071:	je     0x4040ba
  404073:	loop   0x40408e
  404075:	pop    ebx
  404076:	mov    esi,0x2aafd340
  40407b:	sub    DWORD PTR [edx-0x57],esp
  40407e:	mov    dh,0x80
  404080:	jmp    0x59a3:0x311cc636
  404087:	push   ecx
  404088:	cmp    eax,0xd1ba1865
  40408d:	shl    BYTE PTR [edi-0x76],cl
  404090:	xor    dl,BYTE PTR [edi-0x7c]
  404093:	mov    fs,WORD PTR [ebp-0x7e]
  404096:	pop    ebx
  404097:	dec    eax
  404098:	push   ecx
  404099:	ret    
  40409a:	inc    esp
  40409b:	out    dx,eax
  40409c:	mov    DWORD PTR [edx+eax*8],edx
  40409f:	add    DWORD PTR [edx+0x7027598e],ebp
  4040a5:	dec    edx
  4040a6:	push   0xffffffd9
  4040a8:	cwde   
  4040a9:	mov    ah,0x6d
  4040ab:	xor    DWORD PTR [edi+0x59a3cc68],edx
  4040b1:	xchg   esp,eax
  4040b2:	loopne 0x40409d
  4040b4:	pmulhw mm1,QWORD PTR [ebx-0x3ab0ae12]
  4040bb:	int3   
  4040bc:	dec    esp
  4040bd:	jb     0x4040e0
  4040bf:	ret    0x8df9
  4040c2:	jbe    0x40405d
  4040c4:	push   edi
  4040c5:	dec    eax
  4040c6:	pslld  mm1,QWORD PTR [ecx-0x60]
  4040ca:	adc    al,0x29
  4040cc:	daa    
  4040cd:	retf   0xd238
  4040d0:	adc    al,BYTE PTR [ecx-0x79]
  4040d3:	xchg   esi,eax
  4040d4:	sub    al,0x80
  4040d6:	mov    eax,ds:0xfa4c6ad5
  4040db:	pop    ebx
  4040dc:	xchg   edi,eax
  4040dd:	adc    ebp,ecx
  4040df:	mov    eax,0xe473d610
  4040e4:	shl    ecx,0xc7
  4040e7:	mov    bl,0x70
  4040e9:	icebp  
  4040ea:	mov    edi,0x6fe204fe
  4040ef:	les    ebp,FWORD PTR [edi]
  4040f1:	sub    eax,0xaf0bce35
  4040f6:	inc    eax
  4040f7:	cs push 0xf0e7932
  4040fd:	fwait
  4040fe:	sub    BYTE PTR [edx-0x15],0x1
  404102:	push   ebp
  404103:	jo     0x4040a2
  404105:	je     0x40412a
  404107:	std    
  404108:	mov    edx,0x8fa1ad2
  40410d:	add    bl,0x6f
  404110:	mov    dh,0x56
  404112:	mov    ebp,0x98e18927
  404117:	mov    ecx,0x60fccaf2
  40411c:	xchg   ecx,eax
  40411d:	ss jmp 0x9298:0xadee
  404124:	(bad)  
  404125:	adc    ah,BYTE PTR [edi]
  404127:	add    bl,BYTE PTR [ebx]
  404129:	and    ah,BYTE PTR [esi+0x25a4711c]
  40412f:	or     edi,DWORD PTR [eax+eax*1-0x2100f32e]
  404136:	sbb    BYTE PTR [ebp+esi*4+0x7dd3eeff],bh
  40413d:	out    0x17,eax
  40413f:	pushf  
  404140:	jg     0x4040eb
  404142:	fmul   st,st(2)
  404144:	in     eax,0x7e
  404146:	dec    edx
  404147:	leave  
  404148:	ret    
  404149:	cmp    al,0xa
  40414b:	mov    ebp,0x5ac2582d
  404150:	js     0x404193
  404152:	pop    ds
  404153:	inc    ecx
  404154:	lahf   
  404155:	stc    
  404156:	mov    dl,0x8f
  404158:	inc    ecx
  404159:	lock js 0x404177
  40415c:	push   eax
  40415d:	pop    ebp
  40415e:	inc    ecx
  40415f:	xchg   edx,eax
  404160:	pusha  
  404161:	xchg   BYTE PTR [eax],dh
  404163:	add    DWORD PTR [eax+0x19632a93],0xf4f57035
  40416d:	call   0xa31f:0xc820c0f7
  404174:	rcl    DWORD PTR [ebx],cl
  404176:	outs   dx,BYTE PTR ds:[esi]
  404177:	jno    0x404150
  404179:	aad    0x45
  40417b:	in     eax,0x6f
  40417d:	and    DWORD PTR ds:0x99690909,0xffffff90
  404184:	add    eax,0xe96f743f
  404189:	loop   0x40419b
  40418b:	sahf   
  40418c:	popf   
  40418d:	push   esp
  40418e:	lds    edx,FWORD PTR [ecx]
  404190:	inc    edx
  404191:	xchg   ebx,eax
  404192:	mov    bh,0x3
  404194:	imul   ecx,DWORD PTR [edi],0xd6632982
  40419a:	and    DWORD PTR [eax],esp
  40419c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40419d:	fcom   QWORD PTR [edi]
  40419f:	popf   
  4041a0:	fiadd  DWORD PTR [ebx]
  4041a2:	dec    eax
  4041a3:	add    DWORD PTR [esi],ecx
  4041a5:	popa   
  4041a6:	sar    DWORD PTR [ecx],0x2
  4041a9:	or     eax,0x702ee4b5
  4041ae:	pop    es
  4041af:	in     al,0x5c
  4041b1:	cmp    cl,BYTE PTR [edi+0x2d]
  4041b4:	inc    esp
  4041b5:	or     al,0x8b
  4041b7:	mov    bl,0x46
  4041b9:	(bad)  
  4041bb:	popf   
  4041bc:	(bad)  
  4041bd:	ror    BYTE PTR ds:0x5eac2a7e,1
  4041c3:	sub    ebx,DWORD PTR [esi+edx*8]
  4041c6:	clc    
  4041c7:	pop    gs
  4041c9:	aas    
  4041ca:	add    BYTE PTR [esi-0x51943a1d],bh
  4041d0:	dec    ebx
  4041d1:	or     cl,bl
  4041d3:	sbb    DWORD PTR [ebx+0x29],eax
  4041d6:	pop    ecx
  4041d7:	je     0x4041d4
  4041d9:	loope  0x4041fd
  4041db:	fild   WORD PTR [edi-0x55]
  4041de:	call   0xeb26d719
  4041e3:	and    cl,BYTE PTR [eax+0x67]
  4041e6:	push   ebx
  4041e7:	push   eax
  4041e8:	(bad)  
  4041e9:	xor    eax,0xcdd6c0e3
  4041ee:	mov    ah,0xdd
  4041f0:	outs   dx,DWORD PTR ds:[esi]
  4041f1:	push   ds
  4041f2:	jns    0x4041c1
  4041f4:	xlat   BYTE PTR ss:[ebx]
  4041f6:	popa   
  4041f7:	test   eax,0x1b6fb6a2
  4041fc:	inc    eax
  4041fd:	mov    esi,0x25a6e0f5
  404202:	fild   QWORD PTR [edx-0x10]
  404205:	mov    esi,0xf1a08d38
  40420a:	push   0x5ddefe2c
  40420f:	enter  0xb382,0x10
  404213:	mov    WORD PTR [ebp+0x4d],?
  404216:	(bad)  
  404217:	fidivr DWORD PTR [esi-0x3956f5b5]
  40421d:	(bad)  
  40421e:	cs mov cl,0x40
  404221:	lahf   
  404222:	test   BYTE PTR [esp+eax*8-0x68],ah
  404226:	mov    WORD PTR [esi-0x74],fs
  404229:	fimul  DWORD PTR [ebx-0x6ea0801]
  40422f:	pop    edi
  404230:	cld    
  404231:	mov    esi,0xd9f7d34a
  404236:	mov    dl,bh
  404238:	paddw  mm6,QWORD PTR [edx-0x839d049]
  40423f:	(bad)  
  404240:	mov    ch,0xb0
  404242:	call   0x7832cf18
  404247:	out    dx,eax
  404248:	adc    al,0x2
  40424a:	inc    ebx
  40424b:	jg     0x4042a6
  40424d:	dec    eax
  40424e:	and    eax,0xb31acbc6
  404253:	popf   
  404254:	pusha  
  404255:	pop    esi
  404256:	enter  0x1e31,0xb6
  40425a:	lods   eax,DWORD PTR ds:[esi]
  40425b:	lea    esi,[ecx]
  40425d:	push   ss
  40425e:	cmp    ecx,eax
  404260:	add    al,0x4f
  404262:	xor    edi,esp
  404264:	and    BYTE PTR [ebp+0x47],dh
  404267:	mov    eax,0xf5b55fec
  40426c:	das    
  40426d:	xor    esp,0x35
  404270:	jnp    0x40427a
  404272:	out    dx,al
  404273:	aad    0xfa
  404275:	dec    eax
  404276:	push   edx
  404277:	mov    esp,0x512f47dd
  40427c:	bound  ecx,QWORD PTR [eax-0x784b3d41]
  404282:	dec    edx
  404283:	addr16 mov ah,0xbf
  404286:	dec    ebp
  404287:	add    al,ch
  404289:	sbb    al,0xeb
  40428b:	pop    ds
  40428c:	not    BYTE PTR [ebp-0x301d5012]
  404292:	push   edx
  404293:	scas   al,BYTE PTR es:[edi]
  404294:	daa    
  404295:	pop    ebx
  404296:	or     al,0x77
  404298:	inc    edi
  404299:	dec    edi
  40429a:	cld    
  40429b:	sti    
  40429c:	comiss xmm5,xmm5
  40429f:	rcr    DWORD PTR [edi],cl
  4042a1:	rcr    BYTE PTR [ecx+ecx*8+0x4b],cl
  4042a5:	sub    ch,BYTE PTR [ebx+0x54]
  4042a8:	jbe    0x404265
  4042aa:	mov    ch,0x4e
  4042ac:	cmp    BYTE PTR [esi],bl
  4042ae:	inc    esp
  4042af:	or     al,dh
  4042b1:	xchg   BYTE PTR [ebp+0xb],dh
  4042b4:	icebp  
  4042b5:	fcom   QWORD PTR [edi-0x32]
  4042b8:	mov    edi,0x5506ff84
  4042bd:	stos   BYTE PTR es:[edi],al
  4042be:	add    al,BYTE PTR [eax+0x4b014d4c]
  4042c4:	sub    eax,0xe62694ce
  4042c9:	xchg   ecx,eax
  4042ca:	push   edi
  4042cb:	pop    ebx
  4042cc:	xor    edi,DWORD PTR [ecx]
  4042ce:	ret    
  4042cf:	fldcw  WORD PTR [edx+0x1]
  4042d2:	mov    dl,0xb4
  4042d4:	xchg   edx,eax
  4042d5:	xchg   edi,eax
  4042d6:	jmp    0xd96d:0x3ba8b5f7
  4042dd:	sub    bl,dl
  4042df:	ret    0x1613
  4042e2:	xor    esi,edx
  4042e4:	jmp    0xc6d8:0xa5e40e47
  4042eb:	pop    ds
  4042ec:	pop    es
  4042ed:	pop    ebp
  4042ee:	std    
  4042ef:	sahf   
  4042f0:	mov    eax,ds:0xdc90ecca
  4042f5:	ret    
  4042f6:	stc    
  4042f7:	das    
  4042f8:	and    edx,DWORD PTR [eax+edi*1-0x7475d55]
  4042ff:	jbe    0x404319
  404301:	xchg   esi,eax
  404302:	int3   
  404303:	test   DWORD PTR [ebx],ebx
  404305:	adc    BYTE PTR ds:0xc9de525e,dh
  40430b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40430c:	arpl   WORD PTR [esi],sp
  40430e:	enter  0xf1f2,0x50
  404312:	xchg   ebx,eax
  404313:	shr    BYTE PTR [edi+0x62413c55],1
  404319:	scas   eax,DWORD PTR es:[edi]
  40431a:	mov    ?,WORD PTR [esi+0x6b]
  40431d:	hlt    
  40431e:	addr16 mov esp,0x47b94f42
  404324:	mov    DWORD PTR es:[edx],edi
  404327:	or     edi,DWORD PTR [ebp+0x3e]
  40432a:	out    dx,eax
  40432b:	loope  0x40436d
  40432d:	xchg   esi,eax
  40432e:	out    0x2,al
  404330:	push   edi
  404331:	mov    dh,0xfb
  404333:	outs   dx,DWORD PTR ds:[esi]
  404334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404335:	stos   BYTE PTR es:[edi],al
  404336:	pushf  
  404337:	push   esp
  404338:	daa    
  404339:	sbb    al,0x3c
  40433b:	mov    esi,0x349dc583
  404340:	dec    edx
  404341:	enter  0xe472,0xd9
  404345:	inc    eax
  404346:	jns    0x4042fe
  404348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404349:	fwait
  40434a:	inc    edi
  40434b:	mov    ebp,edi
  40434d:	or     BYTE PTR [ecx+0x5],dl
  404350:	push   eax
  404351:	push   ss
  404352:	jns    0x40437d
  404354:	push   cs
  404355:	inc    esi
  404356:	js     0x404353
  404358:	add    BYTE PTR [ebx+0x6be2eaff],dl
  40435e:	enter  0x964b,0x64
  404362:	cld    
  404363:	leave  
  404364:	in     eax,dx
  404365:	mov    BYTE PTR [ebx],ch
  404367:	ror    DWORD PTR [edx+0x24],1
  40436a:	es into 
  40436c:	sbb    dh,BYTE PTR [ebx+ecx*8-0xc]
  404370:	mov    esi,0xa1555e9d
  404375:	in     eax,dx
  404376:	pop    ds
  404377:	mov    WORD PTR [eax+edi*4],cs
  40437a:	fld    TBYTE PTR [edi]
  40437c:	fs xchg ebx,eax
  40437e:	push   ds
  40437f:	mov    ecx,0x283e8223
  404384:	imul   edi,edx,0xfe191b2b
  40438a:	jnp    0x40437d
  40438c:	into   
  40438d:	adc    al,0xe6
  40438f:	mov    ds:0x6b48851b,eax
  404394:	jecxz  0x404357
  404396:	push   ebx
  404397:	cmc    
  404398:	jns    0x40432e
  40439a:	aaa    
  40439b:	outs   dx,BYTE PTR ds:[esi]
  40439c:	xor    al,0xe7
  40439e:	jg     0x40435e
  4043a0:	dec    esi
  4043a1:	stos   BYTE PTR es:[edi],al
  4043a2:	rol    DWORD PTR [ebp+0x39],0xff
  4043a6:	scas   eax,DWORD PTR es:[edi]
  4043a7:	or     dh,BYTE PTR [ebx+0x71fe4b45]
  4043ad:	cmp    al,0x3
  4043af:	imul   esi,DWORD PTR [ecx-0x3a],0xffffffbb
  4043b3:	xchg   edx,eax
  4043b4:	mov    al,ds:0xd0e5f611
  4043b9:	xor    eax,0x3cfc8f51
  4043be:	pop    edi
  4043bf:	jnp    0x4043a1
  4043c1:	jo     0x4043ce
  4043c3:	aam    0xca
  4043c5:	stos   BYTE PTR es:[edi],al
  4043c6:	jecxz  0x4043ff
  4043c8:	xchg   ebx,eax
  4043c9:	mov    ebp,0x57e7289
  4043ce:	mov    ah,0x21
  4043d0:	mov    ah,0x56
  4043d2:	imul   eax,DWORD PTR [esi+eiz*4-0xa],0x33a45109
  4043da:	fstp   TBYTE PTR [eax+0x30b1fc02]
  4043e0:	and    eax,0xb8eee217
  4043e5:	mov    al,0x23
  4043e7:	and    eax,0x1c0efbb6
  4043ec:	je     0x40443e
  4043ee:	pop    ss
  4043ef:	jle    0x404437
  4043f1:	dec    edx
  4043f2:	mov    BYTE PTR [edi],dh
  4043f4:	xchg   ebp,eax
  4043f5:	ror    BYTE PTR [ebx-0x55208786],cl
  4043fb:	mov    bl,0x83
  4043fd:	fucomip st,st(7)
  4043ff:	mov    esp,0x4272911c
  404404:	fwait
  404405:	mov    WORD PTR [ebx-0x27df24f6],fs
  40440b:	or     al,0x6e
  40440d:	sbb    BYTE PTR [eax+0x30],al
  404410:	xchg   ebp,eax
  404411:	push   cs
  404412:	vandnps xmm5,xmm2,xmm1
  404416:	inc    ecx
  404417:	imul   BYTE PTR [esi+ecx*4-0x22]
  40441b:	adc    dh,BYTE PTR [esi-0x5a2b9cf9]
  404421:	pop    edx
  404422:	pushf  
  404423:	lock (bad) 
  404426:	in     al,0x4e
  404428:	pop    ss
  404429:	enter  0x959a,0x35
  40442d:	clc    
  40442e:	push   ss
  40442f:	nop
  404430:	(bad)  
  404431:	fsubr  QWORD PTR [eax+0x6]
  404434:	xchg   ecx,eax
  404435:	dec    edx
  404436:	int    0xae
  404438:	imul   ebx,DWORD PTR [ecx],0x3c
  40443b:	imul   esp,DWORD PTR [ebx+0x73],0xffffffb4
  40443f:	sub    DWORD PTR [edx],esp
  404441:	mov    ds:0x5814c2f0,al
  404446:	int    0x68
  404448:	ins    DWORD PTR es:[edi],dx
  404449:	sbb    DWORD PTR [ebx+0x5998b8ab],0x5791767c
  404453:	gs jns 0x4043d6
  404456:	xchg   ecx,eax
  404457:	jmp    0x4211:0x94de567a
  40445e:	jge    0x4044b9
  404460:	(bad)  [eax]
  404462:	and    DWORD PTR ds:0xcb91a1c0,ecx
  404468:	outs   dx,DWORD PTR ds:[esi]
  404469:	push   ecx
  40446a:	fcmove st,st(5)
  40446c:	das    
  40446d:	jge    0x404453
  40446f:	sar    bl,0xe7
  404472:	inc    ebx
  404473:	mov    edi,0x9618260d
  404478:	(bad)  
  404479:	jbe    0x4044a3
  40447b:	icebp  
  40447c:	mov    bh,0x63
  40447e:	mov    ah,0xf2
  404480:	cmp    al,0xc6
  404482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404483:	retf   
  404484:	mov    ch,0xcd
  404486:	dec    eax
  404487:	js     0x404441
  404489:	sbb    esp,DWORD PTR [eax-0x80]
  40448c:	loop   0x4044fe
  40448e:	(bad)  
  404490:	cmp    esp,DWORD PTR [eax-0x4]
  404493:	jl     0x4044c2
  404495:	pop    ds
  404496:	pop    eax
  404497:	or     bh,al
  404499:	sub    eax,0x8d7ed3a
  40449e:	push   cs
  40449f:	mov    edx,0xc1b9b60
  4044a4:	pop    ecx
  4044a5:	ror    BYTE PTR [ecx-0x35],1
  4044a8:	jg     0x404441
  4044aa:	scas   eax,DWORD PTR es:[edi]
  4044ab:	mov    esi,0x95009500
  4044b0:	fstp   QWORD PTR [esi+0x4e]
  4044b3:	jo     0x40451e
  4044b5:	push   edx
  4044b6:	jns    0x4044af
  4044b8:	jbe    0x4044ba
  4044ba:	retf   
  4044bb:	adc    al,0x21
  4044bd:	sar    DWORD PTR [eax],cl
  4044bf:	(bad)  
  4044c1:	addr16 aad 0xe
  4044c4:	inc    edx
  4044c5:	frstor [ebp-0x4056bb7c]
  4044cb:	mov    eax,0xecd3ab06
  4044d0:	leave  
  4044d1:	out    0x4c,al
  4044d3:	pop    ebp
  4044d4:	sbb    eax,0xba085240
  4044d9:	lock mov ecx,0x4f75d17a
  4044df:	mov    esp,0x3c6ae429
  4044e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044e5:	cmp    al,0x60
  4044e7:	into   
  4044e8:	std    
  4044e9:	mov    ch,0xd5
  4044eb:	mov    edi,0xa6c4422e
  4044f0:	repz pushf 
  4044f2:	repz (bad) 
  4044f4:	ret    0x1530
  4044f7:	das    
  4044f8:	adc    eax,0x6fc13aa6
  4044fd:	nop
  4044fe:	adc    BYTE PTR [ebp-0x4a],cl
  404501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404502:	sub    al,0xc9
  404504:	inc    esi
  404505:	out    0xbb,al
  404507:	std    
  404508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404509:	sbb    ch,BYTE PTR [esi-0x58]
  40450c:	sbb    DWORD PTR [esi+0x3c],edx
  40450f:	fbstp  TBYTE PTR [eax+0x2b3749a9]
  404515:	out    0xd8,al
  404517:	xor    BYTE PTR [ebp-0x66],dh
  40451a:	and    BYTE PTR [edi],al
  40451c:	dec    esp
  40451d:	cmp    bh,BYTE PTR [edx+0x5a3dda52]
  404523:	ins    DWORD PTR es:[edi],dx
  404524:	loopne 0x40451a
  404526:	xor    ebp,DWORD PTR [edx-0x27]
  404529:	inc    edi
  40452a:	aad    0x48
  40452c:	sti    
  40452d:	(bad)  
  40452e:	std    
  40452f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404530:	push   ds
  404531:	xchg   ecx,eax
  404532:	mov    edx,0x968f6271
  404537:	xchg   ebp,eax
  404538:	pop    esp
  404539:	retf   0xadc9
  40453c:	rol    bl,0xd9
  40453f:	sub    dl,BYTE PTR [eax-0x320399a7]
  404545:	sbb    eax,0x1c1931f4
  40454a:	adc    BYTE PTR [eax],bl
  40454c:	aaa    
  40454d:	xchg   BYTE PTR [edx+0x191ef28e],al
  404553:	loop   0x404537
  404555:	push   ss
  404556:	das    
  404557:	cmc    
  404558:	outs   dx,WORD PTR gs:[esi]
  40455b:	dec    DWORD PTR [eax-0x6]
  40455e:	xchg   esp,eax
  40455f:	lds    edi,FWORD PTR [esi]
  404561:	or     ecx,DWORD PTR [eax-0x4d]
  404564:	cmp    eax,0xcb232068
  404569:	cli    
  40456a:	es mov al,0x7a
  40456d:	inc    esi
  40456e:	jae    0x4045e8
  404570:	push   edi
  404571:	xor    BYTE PTR [ebp+0xe],cl
  404574:	ror    BYTE PTR [ecx+ecx*8-0x70],1
  404578:	outs   dx,BYTE PTR ds:[esi]
  404579:	xchg   BYTE PTR [eax],bl
  40457b:	mov    cl,0xe7
  40457d:	in     al,dx
  40457e:	sub    DWORD PTR [esi],0x464910
  404584:	ss popa 
  404586:	adc    bh,BYTE PTR fs:[edi]
  404589:	dec    ecx
  40458a:	(bad)  ds:0xbb7b73ee
  404590:	test   al,0x1e
  404592:	xchg   ecx,eax
  404593:	out    0x65,al
  404595:	xlat   BYTE PTR ds:[ebx]
  404596:	daa    
  404597:	push   edi
  404598:	dec    esi
  404599:	mov    gs,ebp
  40459b:	push   edi
  40459c:	int    0xee
  40459e:	ds pop ss
  4045a0:	dec    esp
  4045a1:	push   es
  4045a2:	repz rcr BYTE PTR [edx+0x11],0x1b
  4045a7:	adc    BYTE PTR [ecx],0xa5
  4045aa:	sbb    DWORD PTR [edx-0x7c],0xffffffa1
  4045ae:	push   ds
  4045af:	xor    al,0x7b
  4045b1:	cmp    BYTE PTR [ebp+ebx*8+0x62],0xfa
  4045b6:	pop    ebp
  4045b7:	das    
  4045b8:	scas   al,BYTE PTR es:[edi]
  4045b9:	mov    dh,0xeb
  4045bb:	inc    esp
  4045bc:	(bad)  
  4045bd:	in     eax,0x88
  4045bf:	das    
  4045c0:	inc    edx
  4045c1:	or     edi,DWORD PTR [ecx]
  4045c3:	dec    edi
  4045c4:	aam    0x8
  4045c6:	and    edx,DWORD PTR [eax]
  4045c8:	inc    ebp
  4045c9:	jne    0x51ebf31a
  4045cf:	call   0xf0eaaea4
  4045d4:	loop   0x4045c9
  4045d6:	(bad)
  4045d9:	dec    esi
  4045da:	pop    ecx
  4045db:	call   0x19b8:0x1f05f5ea
  4045e2:	imul   ebp,ecx,0x5db2c805
  4045e8:	gs jb  0x4045e2
  4045eb:	imul   esp,esi,0x3bb3d459
  4045f1:	repnz mov dh,0x9d
  4045f4:	mov    ds:0xc6eb75b8,al
  4045f9:	jns    0x404674
  4045fb:	cld    
  4045fc:	(bad)  
  4045fd:	stos   BYTE PTR es:[edi],al
  4045fe:	imul   eax,DWORD PTR [edx],0xffffffec
  404601:	fld    QWORD PTR [eax-0xee2edd4]
  404607:	push   esp
  404608:	sar    BYTE PTR [esi+0x2d],0x83
  40460c:	imul   esp,DWORD PTR [edx+0x27c51ea3],0x812c1134
  404616:	pop    ecx
  404618:	lahf   
  404619:	out    dx,eax
  40461a:	fwait
  40461b:	test   edx,esi
  40461d:	xchg   edi,eax
  40461e:	add    esi,esp
  404620:	lock loop 0x4045f8
  404623:	test   ecx,edi
  404625:	shl    DWORD PTR ds:0x7ea178bf,cl
  40462b:	sub    esp,esp
  40462d:	jl     0x4045f7
  40462f:	cmc    
  404630:	sub    edi,DWORD PTR [esi]
  404632:	pusha  
  404633:	pop    es
  404634:	push   edi
  404635:	in     al,0x66
  404637:	lahf   
  404638:	xchg   esi,eax
  404639:	sbb    dh,BYTE PTR [ecx]
  40463b:	cwde   
  40463c:	mov    cl,0x47
  40463e:	sub    ah,BYTE PTR [edx-0x4e49ca4f]
  404644:	repnz mov ebx,0xa671a405
  40464a:	enter  0x5cc0,0xb2
  40464e:	push   es
  40464f:	mov    dl,0x78
  404651:	fnstsw WORD PTR [esi-0x19]
  404654:	es mov esi,0x28d09d8b
  40465a:	inc    esi
  40465b:	scas   al,BYTE PTR es:[edi]
  40465c:	add    ch,BYTE PTR [esi+eiz*2-0x575ed3ec]
  404663:	jb     0x404601
  404665:	add    eax,0x69254d62
  40466a:	inc    edi
  40466b:	cmp    BYTE PTR [esi],dh
  40466d:	inc    eax
  40466e:	push   0xe33ff3fd
  404673:	add    al,dh
  404675:	or     eax,0x53937570
  40467a:	xchg   edi,eax
  40467b:	pop    ebp
  40467c:	popf   
  40467d:	pop    es
  40467e:	jbe    0x404608
  404680:	cmp    al,0x1
  404682:	lea    esp,[ecx+0x76e6336f]
  404688:	push   ss
  404689:	push   ss
  40468a:	mov    esp,0xe3629121
  40468f:	cli    
  404690:	jl     0x40465b
  404692:	sbb    edx,DWORD PTR [ebx-0x16]
  404695:	or     ecx,DWORD PTR [eax-0x45]
  404698:	dec    ebx
  404699:	jmp    0x4cc23f80
  40469e:	jne    0x4046f3
  4046a0:	out    dx,eax
  4046a1:	push   ebp
  4046a2:	mov    ebx,DWORD PTR [edx+0x35b4ca51]
  4046a8:	(bad)  
  4046a9:	stos   DWORD PTR es:[edi],eax
  4046aa:	daa    
  4046ab:	or     BYTE PTR ds:0xe5fa8d8f,ah
  4046b1:	xchg   BYTE PTR [ebx-0x5d],al
  4046b4:	ins    BYTE PTR es:[edi],dx
  4046b5:	bound  edx,QWORD PTR [ebp-0x44104001]
  4046bb:	lods   eax,DWORD PTR ds:[esi]
  4046bc:	dec    edi
  4046bd:	in     al,0x72
  4046bf:	fmulp  st(5),st
  4046c1:	mov    esp,DWORD PTR [edi]
  4046c3:	int    0xb6
  4046c5:	pop    ebx
  4046c6:	popf   
  4046c7:	mov    bh,0xcf
  4046c9:	lods   eax,DWORD PTR ds:[esi]
  4046ca:	out    dx,al
  4046cb:	pusha  
  4046cc:	ror    DWORD PTR [esi],0x5c
  4046cf:	pop    ss
  4046d0:	std    
  4046d1:	push   cs
  4046d2:	fwait
  4046d3:	jae    0x404679
  4046d5:	inc    esp
  4046d6:	or     bl,BYTE PTR [edi]
  4046d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046d9:	scas   al,BYTE PTR es:[edi]
  4046da:	jne    0x40470e
  4046dc:	pop    ebp
  4046dd:	mov    al,ds:0xaa26f963
  4046e2:	jmp    0xa350:0x89a6b6a6
  4046e9:	div    BYTE PTR [eax+0x3da5b30f]
  4046ef:	into   
  4046f0:	lahf   
  4046f1:	mov    esi,0x409c80ce
  4046f6:	jmp    0xda45:0x5c4d18a2
  4046fd:	or     esi,esp
  4046ff:	data16 in al,0x33
  404702:	pop    eax
  404703:	stc    
  404704:	sub    eax,0x37fda086
  404709:	(bad)  
  40470a:	iret   
  40470b:	stos   BYTE PTR es:[edi],al
  40470c:	push   esp
  40470d:	iret   
  40470e:	(bad)  
  40470f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404710:	ja     0x404777
  404712:	jno    0x404715
  404714:	into   
  404715:	test   eax,0xbc0299f2
  40471a:	lea    edx,[edx]
  40471c:	dec    eax
  40471d:	leave  
  40471e:	cmp    al,ah
  404720:	in     al,0xb8
  404722:	dec    BYTE PTR [ebx-0x14]
  404725:	ret    
  404726:	mov    edx,0xc314e1ee
  40472b:	and    DWORD PTR [ebp+0x2],esi
  40472e:	xor    DWORD PTR [edx-0x7f],edi
  404731:	test   al,al
  404733:	sbb    esi,esi
  404735:	add    BYTE PTR [ebp-0x791a1c14],0x30
  40473c:	(bad)  [esi]
  40473e:	in     eax,dx
  40473f:	inc    ebx
  404740:	sub    DWORD PTR [esi],esi
  404742:	outs   dx,DWORD PTR ds:[esi]
  404743:	xor    al,0xff
  404745:	xchg   ecx,eax
  404746:	xchg   ebx,eax
  404747:	fs stos DWORD PTR es:[edi],eax
  404749:	push   cs
  40474a:	adc    eax,0xf3d3d882
  40474f:	loop   0x40474c
  404751:	push   ecx
  404752:	fwait
  404753:	rol    BYTE PTR [ecx-0x13],1
  404756:	mov    dl,0x65
  404758:	ss jne 0x404742
  40475b:	xchg   esp,eax
  40475c:	cld    
  40475d:	sbb    edx,edx
  40475f:	loop   0x404794
  404761:	gs xchg dh,ah
  404764:	cmp    cl,BYTE PTR [edx+ecx*1]
  404767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404768:	sahf   
  404769:	fwait
  40476a:	sar    DWORD PTR [ebp+0x25],0x52
  40476e:	mov    edx,0x366c75ff
  404773:	arpl   WORD PTR [edi+0x65e029fb],cx
  404779:	icebp  
  40477a:	add    eax,0x4562238f
  40477f:	jae    0x4047d1
  404781:	icebp  
  404782:	dec    ebx
  404783:	or     ebp,DWORD PTR [ebp-0x51]
  404786:	pusha  
  404787:	div    BYTE PTR [edx]
  404789:	imul   esi,DWORD PTR [ebp+0x354d59ea],0xf0e6f0
  404793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404794:	mov    ecx,DWORD PTR [edx+esi*4]
  404797:	stos   BYTE PTR es:[edi],al
  404798:	scas   al,BYTE PTR es:[edi]
  404799:	iret   
  40479a:	sbb    ch,0xd4
  40479d:	pop    ebx
  40479e:	cmc    
  40479f:	add    al,0xd6
  4047a1:	sbb    eax,0xa42cb006
  4047a6:	or     DWORD PTR [edx-0x196d82ec],0x59
  4047ad:	cmc    
  4047ae:	dec    ebp
  4047af:	push   0x9b4c5b
  4047b4:	mov    dh,0xe7
  4047b6:	fadd   DWORD PTR cs:[ebp-0x2d]
  4047ba:	pop    esi
  4047bb:	inc    ebp
  4047bc:	ret    0x1478
  4047bf:	addr16 push edi
  4047c1:	cdq    
  4047c2:	aaa    
  4047c3:	adc    eax,0xb9e641e7
  4047c8:	daa    
  4047c9:	test   BYTE PTR [edx],bh
  4047cb:	adc    BYTE PTR [edi+edi*8-0x3f],bh
  4047cf:	add    al,0x70
  4047d1:	data16 out dx,al
  4047d3:	rep lods al,BYTE PTR ds:[esi]
  4047d5:	mov    eax,0x544fee7c
  4047da:	xchg   esp,ecx
  4047dc:	sub    esp,edx
  4047de:	out    0x49,eax
  4047e0:	(bad)  
  4047e1:	mov    edi,0x9da4a08b
  4047e6:	xchg   DWORD PTR [bx-0x927],esi
  4047eb:	or     al,0x3c
  4047ed:	or     esi,DWORD PTR [edi-0x424ea828]
  4047f3:	cmp    ebp,ebx
  4047f5:	xor    eax,0x3ab33d48
  4047fa:	pop    ss
  4047fb:	shl    DWORD PTR [esi-0x7269f280],0xcc
  404802:	mov    edx,0xa8164e12
  404807:	jnp    0x404853
  404809:	fstp   QWORD PTR [edx+eax*4]
  40480c:	xchg   ecx,eax
  40480d:	hlt    
  40480e:	jmp    0x9d373d8f
  404813:	call   0x2c775c50
  404818:	in     al,0x11
  40481a:	mov    eax,ds:0x14f9579
  40481f:	fcom   QWORD PTR [ebp+0x23]
  404822:	dec    ecx
  404823:	out    0xeb,eax
  404825:	adc    eax,0xb6a8bfd
  40482a:	mov    bl,0xd0
  40482c:	jle    0x404808
  40482e:	enter  0x3ce1,0x10
  404832:	pusha  
  404833:	push   0xcdd28eb9
  404838:	sub    al,BYTE PTR [ebp-0x54235349]
  40483e:	mov    cl,BYTE PTR [esi-0x22d1e17f]
  404844:	pop    ebp
  404845:	adc    esp,ecx
  404847:	repnz out 0x5,al
  40484a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40484c:	test   esp,esp
  40484e:	rol    BYTE PTR [eax-0x19],cl
  404851:	ret    
  404852:	loopne 0x4048b4
  404854:	cld    
  404855:	cmp    edi,0xffffffb7
  404858:	outs   dx,BYTE PTR ds:[esi]
  404859:	ins    BYTE PTR es:[edi],dx
  40485a:	hlt    
  40485b:	int    0x4
  40485d:	adc    DWORD PTR [ebp+0x75],eax
  404860:	dec    edi
  404861:	lds    esi,FWORD PTR [ebx+0x7ff6e135]
  404867:	sbb    ebx,DWORD PTR [ebx+0x30]
  40486a:	fwait
  40486b:	mov    dh,0x4e
  40486d:	or     al,0x70
  40486f:	sbb    al,0xc
  404871:	push   0x863ea756
  404876:	xor    al,0x25
  404878:	adc    esi,edi
  40487a:	inc    esp
  40487b:	jae    0x404808
  40487d:	push   esi
  40487e:	cwde   
  40487f:	pop    edi
  404880:	adc    BYTE PTR [ebx+0x70],bh
  404883:	xchg   esp,eax
  404885:	fld    DWORD PTR [eax+0x1c]
  404888:	ret    0x6dc9
  40488b:	xlat   BYTE PTR ds:[ebx]
  40488c:	jg     0x4048b4
  40488e:	sbb    eax,0x406c1c69
  404893:	iret   
  404894:	push   0xfe7d9b19
  404899:	(bad)  
  40489a:	mov    ecx,0x7d2a1b75
  40489f:	sbb    al,0x86
  4048a1:	sub    ecx,DWORD PTR [ebp-0x74fd9b9d]
  4048a7:	dec    ebx
  4048a8:	shl    DWORD PTR ds:0x126d9f19,cl
  4048ae:	mov    ecx,0xbe15857b
  4048b3:	sub    bl,dl
  4048b5:	in     eax,0xc2
  4048b7:	ds idiv edi
  4048ba:	cld    
  4048bb:	jbe    0x404939
  4048bd:	enter  0xcdcf,0xb8
  4048c1:	pand   mm4,QWORD PTR [ebp+ebx*8-0x55]
  4048c6:	push   es
  4048c7:	sub    ah,BYTE PTR [ecx]
  4048c9:	test   al,0xe2
  4048cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048cc:	adc    DWORD PTR [edi-0x2d],ebx
  4048cf:	scas   eax,DWORD PTR es:[edi]
  4048d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048d1:	lock mov edx,DWORD PTR [esi-0x17516733]
  4048d8:	pop    esi
  4048d9:	(bad)  
  4048db:	or     al,0x8f
  4048dd:	push   ebp
  4048de:	jbe    0x4048d6
  4048e0:	arpl   WORD PTR [ebx],bp
  4048e2:	ret    
  4048e3:	pop    ds
  4048e4:	pop    ecx
  4048e5:	lds    edx,FWORD PTR [esi]
  4048e7:	or     al,0xcc
  4048e9:	xchg   ecx,eax
  4048ea:	lea    edi,[esi]
  4048ec:	sbb    al,0x46
  4048ee:	gs stos BYTE PTR es:[edi],al
  4048f0:	mov    ch,0x4b
  4048f2:	fldenv [edi+0x42]
  4048f5:	dec    esp
  4048f6:	xlat   BYTE PTR ds:[ebx]
  4048f7:	aad    0xec
  4048f9:	iret   
  4048fa:	adc    eax,0x1ac95b65
  4048ff:	add    BYTE PTR [ecx+edi*1],bh
  404902:	stc    
  404903:	lods   al,BYTE PTR ds:[esi]
  404904:	push   esi
  404905:	or     ecx,DWORD PTR [edi]
  404907:	and    bl,BYTE PTR [eax+edx*1+0xf08420d]
  40490e:	mov    ebp,0xdac7a5cf
  404913:	sbb    DWORD PTR [ecx],ebx
  404915:	mov    bh,0x13
  404917:	fs push eax
  404919:	(bad)  
  40491a:	push   0xfffffff3
  40491c:	xor    al,0x5e
  40491e:	imul   esp,DWORD PTR [ebx+0x74],0xffffff9a
  404922:	ja     0x404926
  404924:	dec    edi
  404925:	pop    edx
  404926:	popf   
  404927:	es daa 
  404929:	cmp    BYTE PTR [edi+eiz*8+0x78],bl
  40492d:	add    eax,0xb4548c6
  404932:	ins    BYTE PTR es:[edi],dx
  404933:	in     eax,0xa7
  404935:	ja     0x404951
  404937:	in     eax,0x9a
  404939:	sub    al,0x5c
  40493b:	mov    ch,0x99
  40493d:	ds out dx,al
  40493f:	fbld   TBYTE PTR [ebx-0x1]
  404942:	fsubr  DWORD PTR [ecx-0x752077c]
  404948:	inc    edi
  404949:	dec    esp
  40494a:	(bad)  
  40494b:	cld    
  40494c:	jo     0x4048cf
  40494e:	nop
  40494f:	mov    dl,0x6c
  404951:	inc    edx
  404952:	push   ebx
  404953:	out    dx,eax
  404954:	jmp    0x34d8:0xe2c513ee
  40495b:	rcr    al,1
  40495d:	loopne 0x404959
  40495f:	jae    0x404983
  404961:	sub    dl,BYTE PTR ss:[ecx+ebp*4]
  404965:	pop    ss
  404966:	adc    dh,0xd5
  404969:	call   0x5af5:0x42c67dc8
  404970:	retf   0xf9e6
  404973:	inc    edx
  404974:	and    ecx,DWORD PTR [ecx+edi*2-0x61965309]
  40497b:	mov    al,ds:0x759f46af
  404980:	int3   
  404981:	rol    BYTE PTR [ecx+eax*1+0x62],0x7c
  404986:	mov    esi,0xa9be22e6
  40498b:	into   
  40498c:	je     0x404960
  40498e:	xor    al,0x10
  404990:	add    esp,DWORD PTR [ecx]
  404992:	not    ch
  404994:	nop
  404995:	pushf  
  404996:	mov    dl,0xfa
  404998:	jmp    0xdca1:0x32241be8
  40499f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049a0:	fisubr WORD PTR [ebx-0x1a]
  4049a3:	fsubr  DWORD PTR [eax-0x8e84c53]
  4049a9:	and    ecx,DWORD PTR [edi-0x74]
  4049ac:	retf   0xf1ad
  4049af:	mov    ebp,0x87f81a75
  4049b4:	mov    ds:0xe90531d7,eax
  4049b9:	imul   edi,edx,0x34
  4049bc:	xchg   ecx,eax
  4049bd:	mov    edx,0x229079b1
  4049c2:	lods   al,BYTE PTR ds:[esi]
  4049c3:	in     al,0x14
  4049c5:	jl     0x404a12
  4049c7:	cld    
  4049c8:	jle    0x4049c5
  4049ca:	or     ebx,DWORD PTR [eax+0x66]
  4049cd:	or     DWORD PTR [edx],esp
  4049cf:	fwait
  4049d0:	mov    ch,0xab
  4049d2:	push   ds
  4049d3:	push   ss
  4049d4:	mov    cs,WORD PTR [eax-0x26a56cf7]
  4049da:	add    ebx,DWORD PTR [edi-0x59f66ec6]
  4049e0:	cmc    
  4049e1:	cs mov edi,0xb1d65fd1
  4049e7:	mov    bh,0x6
  4049e9:	pusha  
  4049ea:	out    0xc6,eax
  4049ec:	les    ebp,FWORD PTR [ecx-0xf55cdba]
  4049f2:	fs dec esp
  4049f4:	mov    dl,0x29
  4049f6:	adc    eax,0xb78f2623
  4049fb:	push   esi
  4049fc:	sahf   
  4049fd:	jle    0x404a40
  4049ff:	cmc    
  404a00:	dec    eax
  404a01:	jl     0x404a79
  404a03:	test   DWORD PTR [edi],edi
  404a05:	or     bh,BYTE PTR [edx-0x531147ad]
  404a0b:	sbb    eax,0xd5ec82d4
  404a10:	outs   dx,DWORD PTR ds:[esi]
  404a11:	cmp    al,0x15
  404a13:	pop    ss
  404a14:	(bad)  
  404a15:	jmp    0x2c3732fc
  404a1a:	jp     0x404a55
  404a1c:	xchg   esp,eax
  404a1d:	pusha  
  404a1e:	(bad)  [esi+0x2f]
  404a21:	mov    DWORD PTR [edi+0x741c94c3],esi
  404a27:	jecxz  0x404a61
  404a29:	sbb    dl,cl
  404a2b:	dec    esi
  404a2c:	outs   dx,DWORD PTR ds:[esi]
  404a2d:	cwde   
  404a2e:	outs   dx,BYTE PTR ds:[esi]
  404a2f:	push   ecx
  404a30:	dec    ebp
  404a31:	jbe    0x404a44
  404a33:	popa   
  404a34:	scas   eax,DWORD PTR es:[edi]
  404a35:	mov    bh,0x11
  404a37:	sub    bl,al
  404a39:	cmc    
  404a3a:	in     al,0x3
  404a3c:	push   edi
  404a3d:	pop    ebx
  404a3e:	jne    0x404a48
  404a40:	cmp    DWORD PTR [ebx],esi
  404a42:	in     al,dx
  404a43:	sbb    DWORD PTR [ebx],edi
  404a45:	jnp    0x404a51
  404a47:	out    0xc9,al
  404a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a4a:	arpl   WORD PTR [eax-0x5e],di
  404a4d:	pop    edx
  404a4e:	dec    ebx
  404a4f:	mov    ah,0x8f
  404a51:	mov    al,0xae
  404a53:	arpl   WORD PTR [esi],si
  404a55:	mov    al,ds:0xd2a16997
  404a5a:	loopne 0x404a9f
  404a5c:	mov    edx,0x6f85c392
  404a61:	jno    0x4049fd
  404a63:	dec    ebp
  404a64:	mov    al,ds:0xa0dbea7f
  404a69:	aaa    
  404a6a:	sbb    ebp,DWORD PTR [ecx-0x44]
  404a6d:	popa   
  404a6e:	cld    
  404a6f:	int3   
  404a70:	xor    al,0xf8
  404a72:	push   0x26260dbb
  404a77:	rcr    BYTE PTR [edi-0x4005d76e],0xb7
  404a7e:	jae    0x404a48
  404a80:	sbb    eax,0xb467ae8f
  404a85:	sub    al,0xfc
  404a87:	cmp    eax,0xae89c978
  404a8c:	mov    ecx,0x3e927ed8
  404a91:	pop    ebx
  404a92:	and    DWORD PTR [edx+0xd1034f3],ecx
  404a98:	cmc    
  404a99:	adc    cl,BYTE PTR [edi+0x3907894b]
  404a9f:	retf   0xa1fb
  404aa2:	mov    ebp,0xd97ee743
  404aa7:	pop    ss
  404aa8:	mov    esi,ebp
  404aaa:	leave  
  404aab:	cmp    BYTE PTR [esi-0x7d],ah
  404aae:	dec    esp
  404aaf:	shl    DWORD PTR [edi],cl
  404ab1:	push   0xe22c5e7f
  404ab6:	test   eax,0x3e719d4a
  404abb:	fcomp  QWORD PTR [eax+0x5f]
  404abe:	aam    0x78
  404ac0:	add    eax,0x769042cc
  404ac5:	inc    ecx
  404ac6:	in     eax,dx
  404ac7:	sbb    ebx,edx
  404ac9:	jae    0x404a81
  404acb:	mov    edi,0x89027311
  404ad0:	(bad)  
  404ad1:	mov    bl,0xe7
  404ad3:	outs   dx,DWORD PTR ds:[esi]
  404ad4:	(bad)  
  404ad5:	pop    esp
  404ad6:	out    dx,eax
  404ad7:	mov    edx,0x3b8a095
  404adc:	add    ah,ah
  404ade:	xchg   ecx,eax
  404adf:	mov    dl,0xbf
  404ae1:	cmp    BYTE PTR [edi+0x1cbaf8e3],ch
  404ae7:	sbb    BYTE PTR [ebx-0x73ce8b80],dl
  404aed:	pop    ebx
  404aee:	dec    ebx
  404aef:	int3   
  404af0:	nop
  404af1:	pop    ecx
  404af2:	inc    DWORD PTR [ebp-0x2c]
  404af5:	test   eax,0x8c813ef
  404afa:	xlat   BYTE PTR ds:[ebx]
  404afb:	inc    edx
  404afc:	inc    edx
  404afd:	mov    bl,BYTE PTR [ebx+eiz*4]
  404b00:	jge    0x404abc
  404b02:	sti    
  404b03:	xchg   ch,dh
  404b05:	push   ds
  404b06:	mov    al,0xdd
  404b08:	adc    bh,ch
  404b0a:	jo     0x404b11
  404b0c:	nop
  404b0d:	sti    
  404b0e:	sub    BYTE PTR ds:0xdbcf4eba,dh
  404b14:	cmp    bh,bh
  404b16:	jbe    0x404b12
  404b18:	pop    esi
  404b19:	sbb    ebx,DWORD PTR [ebp+0x2fe640a9]
  404b1f:	rol    BYTE PTR [esi-0x4bc6af1b],cl
  404b25:	dec    ebp
  404b26:	cmp    eax,0x8c7c6741
  404b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b2c:	outs   dx,BYTE PTR ds:[esi]
  404b2d:	inc    eax
  404b2e:	fcmovnu st,st(3)
  404b30:	add    DWORD PTR [ebp-0x7496b5a0],ebx
  404b36:	mov    ch,0xfc
  404b38:	aas    
  404b39:	repnz aaa 
  404b3b:	xor    eax,DWORD PTR [ecx+0x69245b2a]
  404b41:	mov    cl,BYTE PTR [edx+0x3088b508]
  404b47:	lds    ebx,FWORD PTR [edi+0x61613f43]
  404b4d:	(bad)  
  404b4f:	lods   al,BYTE PTR ds:[esi]
  404b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b51:	icebp  
  404b52:	lods   eax,DWORD PTR ds:[esi]
  404b53:	jp     0x404b7e
  404b55:	mov    dh,0x39
  404b57:	repz inc ebp
  404b59:	enter  0xee96,0xf3
  404b5d:	jns    0x404b81
  404b5f:	pop    ds
  404b60:	pop    edx
  404b61:	mov    esi,0x9e7f473
  404b66:	in     al,dx
  404b67:	mov    ds:0xd2d9f3ab,al
  404b6c:	rol    DWORD PTR [esi-0x7d],1
  404b6f:	ins    BYTE PTR es:[edi],dx
  404b70:	std    
  404b71:	je     0x404bc4
  404b73:	ss mov cl,0xdd
  404b76:	adc    al,0x11
  404b78:	gs xchg esi,eax
  404b7a:	cwde   
  404b7b:	out    dx,eax
  404b7c:	in     eax,dx
  404b7d:	adc    DWORD PTR [edx-0x466b0af2],ebp
  404b83:	aaa    
  404b84:	add    BYTE PTR [eax+0x4d7012b5],dh
  404b8a:	pop    ebp
  404b8b:	adc    esi,esp
  404b8d:	mov    BYTE PTR [ebx+ecx*2-0x684929a7],al
  404b94:	jbe    0x404b32
  404b96:	call   FWORD PTR gs:[ebx+0x50]
  404b9a:	fdiv   QWORD PTR [ebx+eiz*2]
  404b9d:	or     eax,0xce4f015f
  404ba2:	push   cs
  404ba3:	icebp  
  404ba4:	xlat   BYTE PTR ds:[ebx]
  404ba5:	ss xorps xmm0,xmm1
  404ba9:	inc    ebx
  404baa:	mov    al,ds:0x6d109cc
  404baf:	adc    al,BYTE PTR [ebp-0x56dd8142]
  404bb5:	cmp    ch,BYTE PTR [ecx+0x52]
  404bb8:	mov    esp,0x1677aad3
  404bbd:	nop
  404bbe:	inc    esi
  404bbf:	cmp    BYTE PTR [edx],bl
  404bc1:	shl    BYTE PTR [ebx-0x5],cl
  404bc4:	jbe    0x404b61
  404bc6:	shl    BYTE PTR [ecx-0x60f0401],1
  404bcc:	xlat   BYTE PTR ds:[ebx]
  404bcd:	neg    DWORD PTR [ecx+0x33c98085]
  404bd3:	or     ebx,DWORD PTR [ecx]
  404bd5:	leave  
  404bd6:	outs   dx,BYTE PTR ds:[esi]
  404bd7:	sbb    BYTE PTR [esp+eax*8-0x8],al
  404bdb:	imul   esi,DWORD PTR [edi],0xffffffb7
  404bde:	pop    esi
  404bdf:	xlat   BYTE PTR ds:[ebx]
  404be0:	pop    esi
  404be1:	shl    BYTE PTR [ecx],1
  404be3:	repnz mov ebx,0x1b952ef0
  404be9:	call   0xcfd05283
  404bee:	ss jle 0x404c0d
  404bf1:	out    0x89,eax
  404bf3:	fiadd  WORD PTR cs:[esi-0x7b]
  404bf7:	cmp    dl,BYTE PTR [ecx-0x4f62ec7f]
  404bfd:	mov    eax,0xaf3692c4
  404c02:	ror    DWORD PTR [edi+0x39605a8e],cl
  404c08:	pop    ss
  404c09:	jmp    0x9fba:0x4ed0c4d7
  404c10:	mov    ecx,0xc9d9d8d2
  404c15:	jns    0x404c2e
  404c17:	xlat   BYTE PTR ds:[ebx]
  404c18:	cmp    ch,BYTE PTR [esi-0x62]
  404c1b:	cmc    
  404c1c:	mov    esi,0x84d1cf16
  404c21:	dec    esp
  404c22:	pop    ds
  404c23:	loopne 0x404bee
  404c25:	imul   edi,DWORD PTR [edx+0x21],0x5c
  404c29:	les    ebp,FWORD PTR [eax+0x77]
  404c2c:	mov    ebp,0xc560d108
  404c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c32:	pushf  
  404c33:	ja     0x404c7f
  404c35:	and    al,0x80
  404c37:	imul   esp,DWORD PTR [ecx+0x2c],0xe37b72ad
  404c3e:	stc    
  404c3f:	jnp    0x404c54
  404c41:	xchg   edi,eax
  404c42:	jle    0x404be7
  404c44:	icebp  
  404c45:	xor    eax,DWORD PTR [edi]
  404c47:	jb     0x404ca3
  404c49:	sub    cl,BYTE PTR [edx]
  404c4b:	popf   
  404c4c:	daa    
  404c4d:	mov    al,0x4d
  404c4f:	addr16 jnp 0x404c13
  404c52:	add    ebp,DWORD PTR [ecx+0x5d259c5]
  404c58:	outs   dx,DWORD PTR ds:[esi]
  404c59:	sub    ebp,DWORD PTR [ecx-0xe]
  404c5c:	adc    eax,0xdf46a885
  404c61:	pop    es
  404c62:	(bad)  
  404c63:	and    ch,bh
  404c65:	loop   0x404c21
  404c67:	ret    
  404c68:	dec    esi
  404c69:	xchg   DWORD PTR [ebx-0x40c66fb],ecx
  404c6f:	cmp    DWORD PTR [edx],ebx
  404c71:	dec    edi
  404c72:	mov    ebx,0xc6a9dbd8
  404c77:	into   
  404c78:	and    al,0xa
  404c7a:	in     eax,dx
  404c7b:	jno    0x404cc8
  404c7d:	cwde   
  404c7e:	pop    edx
  404c7f:	mov    ebp,0xb4189899
  404c84:	test   eax,0x835f1058
  404c89:	inc    esi
  404c8a:	mov    bh,0x9
  404c8c:	fnstcw WORD PTR [ebp+0x7c999686]
  404c92:	setge  bl
  404c95:	push   ebx
  404c96:	dec    esp
  404c97:	xchg   esp,eax
  404c98:	mov    ecx,DWORD PTR [edi+0x51a25770]
  404c9e:	cs scas eax,DWORD PTR es:[edi]
  404ca0:	xchg   esi,eax
  404ca1:	or     eax,0x1b2b5c5b
  404ca6:	add    ebp,DWORD PTR [edx+0xedeced5]
  404cac:	lock mov esp,0xa2218030
  404cb2:	jmp    0x591b:0x89ee10e0
  404cb9:	(bad)
  404cbc:	cmp    ebp,DWORD PTR [ebx+0x56f2a99]
  404cc2:	xchg   esi,eax
  404cc3:	cmc    
  404cc4:	ret    0x6875
  404cc7:	push   ds
  404cc8:	push   esp
  404cc9:	jnp    0x404cae
  404ccb:	cdq    
  404ccc:	es enter 0xc7b5,0x66
  404cd1:	mov    al,0xb0
  404cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd4:	jns    0x404cf2
  404cd6:	pop    ecx
  404cd7:	out    0xfd,al
  404cd9:	lods   al,BYTE PTR ds:[esi]
  404cda:	sub    DWORD PTR ds:0xdca559a4,0x7c
  404ce1:	or     bh,BYTE PTR [eax+0x76513fcb]
  404ce7:	in     eax,dx
  404ce8:	retf   
  404ce9:	je     0x404c76
  404ceb:	and    al,0x15
  404ced:	push   ebp
  404cee:	sar    DWORD PTR [ebx+0x10],cl
  404cf1:	fist   DWORD PTR [ebx-0x78]
  404cf4:	test   al,0xe3
  404cf6:	pusha  
  404cf7:	cmp    esp,DWORD PTR fs:[ebx]
  404cfa:	das    
  404cfb:	cld    
  404cfc:	cmc    
  404cfd:	mov    al,0xb0
  404cff:	call   0x6be0:0x3a665377
  404d06:	mov    ah,0xbb
  404d08:	aam    0x2b
  404d0a:	fbld   TBYTE PTR [edi+0x5a]
  404d0d:	stos   BYTE PTR es:[edi],al
  404d0e:	pushf  
  404d0f:	retf   0x9972
  404d12:	sbb    al,dh
  404d14:	(bad)
  404d18:	fneni(8087 only) 
  404d1a:	push   0xffffffda
  404d1c:	call   0xde67:0x96b64819
  404d23:	repnz xor eax,0x1c979b71
  404d29:	jns    0x404cd8
  404d2b:	jl     0x404d33
  404d2d:	imul   edi,ebx,0xffffff92
  404d30:	in     al,0x6e
  404d32:	(bad)  
  404d33:	adc    eax,edx
  404d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d36:	shl    BYTE PTR [ecx-0x3c],cl
  404d39:	retf   
  404d3a:	popa   
  404d3b:	xchg   edi,eax
  404d3c:	scas   al,BYTE PTR es:[edi]
  404d3d:	(bad)  
  404d3f:	push   eax
  404d40:	mov    ch,0x6
  404d42:	fldenv [eax+0x2e]
  404d45:	neg    BYTE PTR [ecx]
  404d47:	adc    al,0xea
  404d49:	adc    DWORD PTR [ecx],edi
  404d4b:	sub    eax,0x87788080
  404d50:	xor    ah,BYTE PTR [eax+0x77]
  404d53:	adc    BYTE PTR [ebp+0x48],dl
  404d56:	sub    BYTE PTR [ecx+0x38854694],ah
  404d5c:	or     esp,DWORD PTR [edx+ebx*4]
  404d5f:	mov    ds:0xf4d0e5fc,al
  404d64:	xor    dh,ah
  404d66:	adc    bl,BYTE PTR [edx-0x49]
  404d69:	dec    ebp
  404d6a:	(bad)  
  404d6b:	ins    DWORD PTR es:[edi],dx
  404d6c:	mov    esp,0x9cd25d6
  404d71:	in     al,0x1c
  404d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d74:	jmp    DWORD PTR [edi-0x15f1a455]
  404d7a:	arpl   WORD PTR [eax+0x383fb60],ax
  404d80:	mov    esi,0x97ec27b6
  404d85:	push   es
  404d86:	outs   dx,DWORD PTR ds:[esi]
  404d87:	jp     0x404d17
  404d89:	mov    al,ds:0xe68317b8
  404d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d8f:	jbe    0x404d1d
  404d91:	or     eax,0x2849b40c
  404d96:	push   edi
  404d97:	data16 rol ah,cl
  404d9a:	sub    al,0x6d
  404d9c:	test   al,0xc
  404d9e:	jecxz  0x404d9f
  404da0:	and    ah,BYTE PTR [edx-0xbd9131a]
  404da6:	or     al,0xdd
  404da8:	in     eax,0xd1
  404daa:	mov    al,ds:0xade05dda
  404daf:	sbb    DWORD PTR [edi+ebx*8+0x4f693dca],edx
  404db6:	xor    al,0x31
  404db8:	pusha  
  404db9:	popa   
  404dba:	sub    esp,edi
  404dbc:	jno    0x404dcd
  404dbe:	xchg   DWORD PTR [ebx-0x1d0a6f59],ecx
  404dc4:	jb     0x404e1c
  404dc6:	jle    0x404e2f
  404dc8:	xchg   ebp,eax
  404dc9:	jmp    0x5f30e01e
  404dce:	std    
  404dcf:	ret    
  404dd0:	loopne 0x404db3
  404dd2:	or     BYTE PTR [ebx-0x1e8f9390],bh
  404dd8:	loop   0x404e3f
  404dda:	(bad)
  404dde:	rcr    cl,cl
  404de0:	and    BYTE PTR [edi+0x6f10c5b6],0x39
  404de7:	adc    BYTE PTR [edx-0x33],bl
  404dea:	push   edi
  404deb:	push   0xffffff92
  404ded:	aaa    
  404dee:	gs mov ebp,0xd3ea29c5
  404df4:	retf   0x6405
  404df7:	push   0xf4167a65
  404dfc:	push   esi
  404dfd:	sub    al,0x30
  404dff:	test   eax,0x316f5afe
  404e04:	imul   esp,DWORD PTR [ebx],0xfffffffd
  404e07:	ret    
  404e08:	pusha  
  404e09:	fwait
  404e0a:	mov    eax,ds:0xf1bb7c77
  404e0f:	xchg   edx,eax
  404e10:	mov    ah,0x7d
  404e12:	sbb    ah,BYTE PTR [edx+eiz*2+0x4a]
  404e16:	push   eax
  404e17:	mov    edx,DWORD PTR [edx]
  404e19:	mov    ds:0xc174f0be,eax
  404e1e:	jge    0x404df1
  404e20:	and    eax,DWORD PTR [ebx-0x6386b929]
  404e26:	push   cs
  404e27:	(bad)  
  404e28:	hlt    
  404e29:	ss xor ebx,esp
  404e2c:	lods   al,BYTE PTR ds:[esi]
  404e2d:	mov    ebx,0x6fead39b
  404e32:	shl    DWORD PTR [ebp-0x60],0x2
  404e36:	jmp    0x33f1:0x8519f333
  404e3d:	mov    ecx,0x5069cf2c
  404e42:	cmp    eax,DWORD PTR [edi+edi*1-0x69]
  404e46:	push   ss
  404e47:	and    eax,0xe16474d6
  404e4c:	jo     0x404e9e
  404e4e:	adc    eax,0xdc2fccbd
  404e53:	retf   0xbaad
  404e56:	in     al,0x4f
  404e58:	pusha  
  404e59:	add    cl,al
  404e5b:	and    BYTE PTR [eax-0x7d],dh
  404e5e:	les    esi,FWORD PTR [ebp-0x2b5fdc7]
  404e64:	jmp    0x5c73b4c8
  404e69:	push   ds
  404e6a:	cli    
  404e6b:	int3   
  404e6c:	inc    edx
  404e6d:	pop    edi
  404e6e:	rcl    DWORD PTR [esi+0xb],1
  404e71:	and    ch,BYTE PTR [ebx]
  404e73:	ret    
  404e74:	adc    dl,BYTE PTR [esi+0x69]
  404e77:	call   0x2919cd94
  404e7c:	in     al,dx
  404e7d:	xor    bh,BYTE PTR ds:0xe5aff175
  404e83:	leave  
  404e84:	dec    esi
  404e85:	rol    esi,0x26
  404e88:	pop    esi
  404e89:	ret    0x25e9
  404e8c:	fisttp WORD PTR [edi+0x57]
  404e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e90:	or     cl,dl
  404e92:	not    DWORD PTR [ecx+0x16]
  404e95:	icebp  
  404e96:	sbb    al,dl
  404e98:	les    edx,FWORD PTR fs:[eax+0x7a]
  404e9c:	stos   BYTE PTR es:[edi],al
  404e9d:	call   0xbbe8b536
  404ea2:	loope  0x404eba
  404ea4:	sti    
  404ea5:	out    0x7e,al
  404ea7:	les    ecx,FWORD PTR [ebp-0x701542fa]
  404ead:	or     ch,dl
  404eaf:	iret   
  404eb0:	and    DWORD PTR [ecx],esi
  404eb2:	aas    
  404eb3:	loope  0x404ed8
  404eb5:	int3   
  404eb6:	fcomp  DWORD PTR [ebx-0xf]
  404eb9:	ss pop ss
  404ebb:	and    ch,BYTE PTR [ebp-0x38]
  404ebe:	nop
  404ebf:	cwde   
  404ec0:	sub    dh,bl
  404ec2:	call   0x7711:0xa89fff25
  404ec9:	sub    DWORD PTR [edx+0x53],esi
  404ecc:	cli    
  404ecd:	mov    ah,0x6d
  404ecf:	mov    esi,0x96921ff4
  404ed4:	sar    esi,cl
  404ed6:	or     eax,DWORD PTR [esi-0x30470f5]
  404edc:	or     al,0x99
  404ede:	xchg   ebp,eax
  404edf:	in     al,0xa9
  404ee1:	mov    edx,0xa66b9ab
  404ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ee7:	add    ebp,ecx
  404ee9:	test   BYTE PTR [edx+ebp*1-0x5],al
  404eed:	scas   eax,DWORD PTR es:[edi]
  404eee:	inc    edi
  404eef:	aam    0x57
  404ef1:	push   cs
  404ef2:	and    ebp,ecx
  404ef4:	and    eax,0xfcfb5f79
  404ef9:	mov    edi,0x3dcc89b3
  404efe:	sar    DWORD PTR [ecx-0x794a0e7f],1
  404f04:	cmp    BYTE PTR [esi+eiz*2],bl
  404f07:	das    
  404f08:	sbb    DWORD PTR [edx+ebp*8+0x6b],0xc66ba583
  404f10:	sub    ebp,edx
  404f12:	scas   al,BYTE PTR es:[edi]
  404f13:	sbb    WORD PTR [eax+esi*8],0x60ef
  404f19:	push   ecx
  404f1a:	jo     0x404f8a
  404f1c:	(bad)
  404f20:	arpl   WORD PTR [edi+eax*8],bp
  404f23:	out    dx,eax
  404f24:	fst    DWORD PTR fs:[ecx]
  404f27:	push   es
  404f28:	dec    ebx
  404f29:	sahf   
  404f2a:	mov    eax,ds:0xae8f3662
  404f2f:	mov    eax,DWORD PTR [ebp-0x4]
  404f32:	mov    edi,DWORD PTR [ebp-0x8]
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0xe6f8f58a
  405700:	fsub   DWORD PTR [edi+edx*8+0x377a7a5f]
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	std    
  40570b:	mov    esi,0xee8863f6
  405710:	xchg   ebp,eax
  405711:	mov    ch,0x0
  405713:	cmp    BYTE PTR [edi],bl
  405715:	inc    eax
  405716:	stos   BYTE PTR es:[edi],al
  405717:	mov    edx,0x7be61c7c
  40571c:	mov    ebx,0xd67369c5
  405721:	std    
  405722:	rcr    BYTE PTR [edx+0x27],1
  405725:	cmp    eax,0x37aee611
  40572a:	cmp    al,0x40
  40572c:	mov    ch,0xee
  40572e:	imul   edi,DWORD PTR [edx+0x1d6ee747],0xffffff9c
  405735:	ficom  WORD PTR [ecx+0x1d]
  405738:	mov    al,bl
  40573a:	in     al,dx
  40573b:	xchg   ebp,eax
  40573c:	loopne 0x40573e
  40573e:	imul   ebp,DWORD PTR [ebx],0x2092aba
  405744:	add    al,0x56
  405746:	xchg   esp,eax
  405747:	fst    QWORD PTR [edi+ebp*4+0x1]
  40574b:	test   al,0x0
  40574d:	jno    0x405761
  40574f:	pop    edx
  405750:	and    eax,0xe3f6a449
  405755:	pop    edi
  405756:	fwait
  405757:	cli    
  405758:	jmp    0x3928:0x4a6b1725
  40575f:	nop
  405760:	loopne 0x405723
  405762:	(bad)  
  405764:	(bad)  
  405765:	cli    
  405766:	xor    al,0x2e
  405768:	push   ds
  405769:	test   BYTE PTR [ecx+0x7ef3bf4],dl
  40576f:	mov    cl,0xe2
  405771:	push   ss
  405772:	sbb    eax,0xd3574f70
  405777:	scas   al,BYTE PTR es:[edi]
  405778:	push   ss
  405779:	daa    
  40577a:	push   esp
  40577b:	call   0x2b7064e7
  405780:	pop    es
  405781:	dec    esp
  405782:	test   BYTE PTR [ecx+0x48c1637f],0x33
  405789:	aam    0xf4
  40578b:	out    0x5a,eax
  40578d:	mov    ds:0x1b2edc5f,al
  405792:	loopne 0x4057ea
  405794:	push   ebp
  405795:	inc    ecx
  405796:	push   ebp
  405797:	mov    al,ds:0xed69657f
  40579c:	add    BYTE PTR [eax-0x56],dh
  40579f:	xchg   DWORD PTR [edi-0xe],edx
  4057a2:	push   0xb
  4057a4:	call   0xfac17692
  4057a9:	sbb    DWORD PTR [esi+0x34d82caa],ebp
  4057af:	loope  0x405731
  4057b1:	xchg   ecx,eax
  4057b2:	pop    esi
  4057b3:	pop    ss
  4057b4:	jl     0x405792
  4057b6:	outs   dx,DWORD PTR ds:[esi]
  4057b7:	mov    edi,0xd9b3d20f
  4057bc:	push   eax
  4057bd:	push   edx
  4057be:	cs iret 
  4057c0:	ins    DWORD PTR es:[edi],dx
  4057c1:	mov    eax,ds:0xd4f8aa43
  4057c6:	out    0xb9,eax
  4057c8:	push   ecx
  4057c9:	xor    edx,esp
  4057cb:	rcr    BYTE PTR [ecx+ebx*2-0x4e],0x83
  4057d0:	inc    edi
  4057d1:	mov    eax,ds:0x6827570b
  4057d6:	in     eax,dx
  4057d7:	das    
  4057d8:	daa    
  4057d9:	std    
  4057da:	inc    esi
  4057db:	test   BYTE PTR [edi+0x79],bh
  4057de:	and    dh,BYTE PTR gs:[eax+0x5a]
  4057e2:	mov    BYTE PTR [eax-0x53725080],dl
  4057e8:	in     al,dx
  4057e9:	push   es
  4057ea:	xlat   BYTE PTR ds:[ebx]
  4057eb:	imul   ebp
  4057ed:	push   edi
  4057ee:	(bad)  
  4057ef:	fild   DWORD PTR [ecx+esi*2]
  4057f2:	cld    
  4057f3:	ins    DWORD PTR es:[edi],dx
  4057f4:	mov    ebp,0xab88b461
  4057f9:	(bad)  
  4057fa:	aam    0x39
  4057fc:	jo     0x4057e5
  4057fe:	aad    0xad
  405800:	jmp    0xd7eb8262
  405805:	xchg   edx,eax
  405806:	inc    esi
  405807:	push   ebp
  405808:	in     eax,0x18
  40580a:	imul   ebx,DWORD PTR [edx],0x77c16f62
  405810:	and    DWORD PTR [eax],esp
  405812:	imul   ecx,DWORD PTR [ecx+0x2d],0xd48bbc95
  405819:	jmp    0x42543708
  40581e:	imul   ebx,DWORD PTR [eax-0x18a8d794],0x18a47f3f
  405828:	mov    dh,0xd2
  40582a:	inc    edx
  40582b:	repz adc BYTE PTR [esp+eiz*8],ch
  40582f:	out    0xb8,al
  405831:	push   ss
  405832:	aas    
  405833:	icebp  
  405834:	add    DWORD PTR [esi],esp
  405836:	shl    BYTE PTR [ecx+0x12649482],1
  40583c:	nop
  40583d:	xor    eax,DWORD PTR [ebx-0x6f]
  405840:	add    eax,DWORD PTR [esi-0x19]
  405843:	xchg   edx,eax
  405844:	stos   BYTE PTR es:[edi],al
  405845:	inc    edx
  405846:	mov    edx,0x7fa23ee6
  40584b:	(bad)  
  40584c:	stos   DWORD PTR es:[edi],eax
  40584d:	daa    
  40584e:	sahf   
  40584f:	xchg   edx,eax
  405850:	fucomp st(5)
  405852:	retf   0xd9d9
  405855:	imul   BYTE PTR [ebp+0x2944026c]
  40585b:	icebp  
  40585c:	mov    esp,0xd3dd21b
  405861:	inc    edi
  405862:	bound  ecx,QWORD PTR [eax-0x17]
  405865:	arpl   WORD PTR [ebx],si
  405867:	cld    
  405868:	arpl   WORD PTR [esi],bp
  40586a:	ret    0xb60f
  40586d:	xor    al,0xa8
  40586f:	mov    ecx,0x95cb0e5e
  405874:	js     0x4058e1
  405876:	cmp    esi,DWORD PTR [ecx-0x5]
  405879:	sar    DWORD PTR [eax+eax*2+0x36],1
  40587d:	aad    0x56
  40587f:	inc    eax
  405880:	sub    DWORD PTR [ebx-0x5e9be7d5],0x7684155
  40588a:	jp     0x40581f
  40588c:	mov    dh,0x50
  40588e:	jmp    eax
  405890:	inc    eax
  405891:	scas   eax,DWORD PTR es:[edi]
  405892:	ds dec eax
  405894:	push   ecx
  405895:	fwait
  405896:	xor    ch,BYTE PTR ds:0x25dc8840
  40589c:	dec    ecx
  40589d:	jle    0x40591c
  40589f:	mov    ebp,0xf8348c24
  4058a4:	loope  0x405900
  4058a6:	mov    edx,ebp
  4058a8:	cwde   
  4058a9:	sub    al,0xed
  4058ab:	(bad)  
  4058ac:	sti    
  4058ad:	daa    
  4058ae:	pop    es
  4058af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b0:	xlat   BYTE PTR ds:[ebx]
  4058b1:	mov    ds:0x1b7fdf7d,al
  4058b6:	call   0xf958:0xf18a956a
  4058bd:	push   edx
  4058be:	call   0x7481edda
  4058c3:	push   ecx
  4058c4:	inc    edx
  4058c5:	mov    ah,0xf7
  4058c7:	fisubr WORD PTR ds:0xc76a91a2
  4058cd:	cs inc esp
  4058cf:	sub    DWORD PTR [edi+0x466f8f4b],0xffffffbf
  4058d6:	fs int 0xd0
  4058d9:	stc    
  4058da:	retf   0x4235
  4058dd:	pop    esp
  4058de:	lods   al,BYTE PTR ds:[esi]
  4058df:	cdq    
  4058e0:	sub    BYTE PTR [eax-0x33],bl
  4058e3:	dec    ebp
  4058e4:	cld    
  4058e5:	or     al,0x18
  4058e7:	adc    al,0x3a
  4058e9:	stos   DWORD PTR es:[di],eax
  4058eb:	fbld   TBYTE PTR [ecx-0x2904163a]
  4058f1:	ins    DWORD PTR es:[edi],dx
  4058f2:	aaa    
  4058f3:	push   es
  4058f4:	and    bl,BYTE PTR [esi+edi*4-0x34]
  4058f8:	or     al,0x1f
  4058fa:	(bad)  
  4058fb:	ja     0x4058b4
  4058fd:	jb     0x405967
  4058ff:	sbb    cl,bh
  405901:	fist   DWORD PTR [ebx+0x153e983e]
  405907:	(bad)  
  405908:	sub    BYTE PTR [eax-0x5ad6f220],al
  40590e:	and    BYTE PTR [esi+0x5998daac],dl
  405914:	test   BYTE PTR [esi+0x2c09747c],0x7e
  40591b:	and    al,0x59
  40591d:	pop    ebp
  40591e:	inc    esi
  40591f:	xor    al,0xd8
  405921:	push   0x67f3a670
  405926:	push   ss
  405927:	popf   
  405928:	sub    eax,0x3bb8fa0
  40592d:	mov    esi,0xa5fea2ee
  405932:	inc    eax
  405933:	inc    edx
  405934:	inc    esi
  405935:	mov    bh,0xcd
  405937:	inc    ecx
  405938:	pushf  
  405939:	cld    
  40593a:	push   ss
  40593b:	xchg   ecx,eax
  40593c:	clc    
  40593d:	imul   esp,DWORD PTR [ecx+0x52c1e5c7],0x28
  405944:	rol    BYTE PTR [edx-0x3cf4c360],0x33
  40594b:	ror    DWORD PTR [eax],1
  40594d:	mov    edx,0x851d7fa0
  405952:	pop    esi
  405953:	pop    ss
  405954:	inc    ecx
  405955:	mov    edi,0xa4d6c6be
  40595a:	js     0x405922
  40595c:	xor    BYTE PTR [ebx-0x3543d9d1],0x78
  405963:	loope  0x40590b
  405965:	stos   BYTE PTR es:[edi],al
  405966:	inc    esi
  405967:	mov    dl,0xde
  405969:	enter  0xbf1f,0xc0
  40596d:	dec    edx
  40596e:	and    eax,0xb0160e49
  405973:	pop    ecx
  405974:	inc    ebx
  405975:	scas   eax,DWORD PTR es:[edi]
  405976:	dec    ecx
  405977:	xchg   ecx,eax
  405978:	das    
  405979:	test   al,0x55
  40597b:	cmp    al,0x7
  40597d:	jecxz  0x4059ed
  40597f:	lds    ecx,FWORD PTR [ebx]
  405981:	test   eax,0xb8719881
  405986:	sbb    dh,BYTE PTR [esi+ecx*2+0x7c]
  40598a:	pop    esp
  40598b:	push   ebp
  40598c:	stos   DWORD PTR es:[edi],eax
  40598d:	xor    BYTE PTR [esi+eiz*8+0x371fb28],0xc
  405995:	das    
  405996:	xor    eax,DWORD PTR [edi+0x7]
  405999:	or     bl,bl
  40599b:	ins    DWORD PTR es:[edi],dx
  40599c:	mov    WORD PTR [edi],?
  40599e:	enter  0x294a,0x5b
  4059a2:	lods   eax,DWORD PTR ds:[esi]
  4059a3:	cmp    al,0x17
  4059a5:	jo     0x405979
  4059a7:	xchg   esi,eax
  4059a8:	aaa    
  4059a9:	jecxz  0x405941
  4059ab:	inc    ebx
  4059ac:	mov    dh,0x50
  4059ae:	add    eax,0x919628a0
  4059b3:	inc    ebx
  4059b4:	out    0xa1,al
  4059b6:	inc    esp
  4059b7:	ja     0x4059de
  4059b9:	(bad)  
  4059ba:	mov    ch,ch
  4059bc:	fmul   DWORD PTR [esi]
  4059be:	pop    esi
  4059bf:	dec    ebp
  4059c0:	or     BYTE PTR [edi-0x701df6d],ch
  4059c6:	ss scas al,BYTE PTR es:[edi]
  4059c8:	pop    edx
  4059c9:	push   edx
  4059ca:	mov    bh,0x24
  4059cc:	pop    edx
  4059cd:	mov    edx,0x8694982a
  4059d2:	pop    ebp
  4059d3:	jmp    0x5cc406dd
  4059d8:	push   ebx
  4059d9:	stos   DWORD PTR es:[edi],eax
  4059da:	cmp    ecx,DWORD PTR [ecx-0x3d64d286]
  4059e0:	mov    ch,0xaa
  4059e2:	lahf   
  4059e3:	xchg   esp,eax
  4059e4:	test   ebx,ecx
  4059e6:	cmp    edx,DWORD PTR [ebx+0x16ad76ae]
  4059ec:	cmp    DWORD PTR [edx-0x3c10774f],0xc09127db
  4059f6:	std    
  4059f7:	jge    0x405a56
  4059f9:	les    ecx,FWORD PTR [ecx+0x4b]
  4059fc:	and    cl,cl
  4059fe:	cli    
  4059ff:	(bad)  
  405a00:	xchg   BYTE PTR [edi-0x5c],bh
  405a03:	adc    BYTE PTR [edx+ecx*8+0x2ad7e0db],0xc7
  405a0b:	push   edx
  405a0c:	and    eax,0xc606db56
  405a11:	test   eax,0x7577c731
  405a16:	jnp    0x405a60
  405a18:	or     ebp,DWORD PTR [ebx-0x38709907]
  405a1e:	pop    ss
  405a1f:	pop    esi
  405a20:	int    0x97
  405a22:	sub    dh,BYTE PTR [eax+0x2e893768]
  405a28:	push   edx
  405a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a2a:	mov    dh,0x2f
  405a2c:	pop    edi
  405a2d:	and    DWORD PTR [eax+0x15],ecx
  405a30:	sti    
  405a31:	adc    ecx,edi
  405a33:	cwde   
  405a34:	and    edx,DWORD PTR [ecx+0x66]
  405a37:	fdecstp 
  405a39:	aad    0xf0
  405a3b:	dec    esp
  405a3c:	in     eax,0x5f
  405a3e:	int3   
  405a3f:	out    0x15,al
  405a41:	test   BYTE PTR ds:0x567c653b,ah
  405a47:	scas   eax,DWORD PTR es:[edi]
  405a48:	loope  0x405a6d
  405a4a:	xor    bl,al
  405a4c:	mov    ebp,0x58fdc8c2
  405a51:	add    DWORD PTR [ecx-0x37],ebp
  405a54:	sti    
  405a55:	xchg   ebx,eax
  405a56:	xchg   ebp,eax
  405a57:	outs   dx,DWORD PTR ds:[esi]
  405a58:	(bad)  
  405a59:	jb     0x405aa1
  405a5b:	pop    es
  405a5c:	aaa    
  405a5d:	repz dec esp
  405a5f:	sahf   
  405a60:	jg     0x405a77
  405a62:	adc    ch,bl
  405a64:	sub    DWORD PTR [edi-0x13],esi
  405a67:	(bad)  
  405a68:	mov    ecx,0x2cd4ab90
  405a6d:	sbb    al,0xdd
  405a6f:	retf   0x4e74
  405a72:	in     eax,0x93
  405a74:	les    ebp,FWORD PTR [ecx+0x5a509c0d]
  405a7a:	into   
  405a7b:	dec    ebp
  405a7c:	div    DWORD PTR [ecx+0x7a]
  405a7f:	(bad)  
  405a80:	in     eax,0x95
  405a82:	pop    esp
  405a83:	ins    BYTE PTR es:[edi],dx
  405a84:	ds out 0x2,eax
  405a87:	imul   esp,DWORD PTR [edx+ecx*2+0x333ec27e],0xffffffaf
  405a8f:	in     al,0xef
  405a91:	frstpm(287 only) 
  405a93:	mov    eax,0x307f04f2
  405a98:	(bad)  
  405a99:	mov    ebp,0xaff44014
  405a9e:	call   DWORD PTR [esi-0x53]
  405aa1:	dec    esp
  405aa2:	push   0x69
  405aa4:	fisubr DWORD PTR [ebx+0x14]
  405aa7:	popa   
  405aa8:	xchg   ecx,eax
  405aa9:	xor    BYTE PTR [ebp+esi*4-0x56050aa9],ah
  405ab0:	or     eax,0x5c63e066
  405ab5:	pop    esp
  405ab6:	inc    eax
  405ab7:	jecxz  0x405a9c
  405ab9:	mov    ah,ch
  405abb:	mov    WORD PTR [edx],es
  405abd:	inc    ebx
  405abe:	pop    ebx
  405abf:	or     al,0x14
  405ac1:	repz jmp 0x405ac1
  405ac4:	lea    esp,[esi]
  405ac6:	lds    esi,FWORD PTR [edi]
  405ac8:	test   eax,0x91413d14
  405acd:	sub    eax,0x8853ef17
  405ad2:	push   esi
  405ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ad4:	(bad)  
  405ad5:	jecxz  0x405b22
  405ad7:	loopne 0x405ae4
  405ad9:	sbb    DWORD PTR [edx+0xe],edx
  405adc:	jp     0x405ab0
  405ade:	enter  0xccda,0x50
  405ae2:	shl    BYTE PTR [esi],0xa5
  405ae5:	aaa    
  405ae6:	bound  edx,QWORD PTR [ebp-0x6523b879]
  405aec:	sbb    eax,0x4e2122b8
  405af1:	daa    
  405af2:	loope  0x405b24
  405af4:	cmp    edi,ebx
  405af6:	sahf   
  405af7:	fist   DWORD PTR [ebx+0x59921553]
  405afd:	push   ebp
  405afe:	mov    bh,0x19
  405b00:	fwait
  405b01:	lock repz jne 0x405aa2
  405b05:	shr    BYTE PTR [ebp+0x45],0xdf
  405b09:	pop    ebp
  405b0a:	(bad)
  405b0f:	lahf   
  405b10:	inc    edx
  405b11:	idiv   DWORD PTR cs:[eax]
  405b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b15:	xchg   esp,eax
  405b16:	xor    edi,DWORD PTR [edx]
  405b18:	fs daa 
  405b1a:	stos   DWORD PTR es:[edi],eax
  405b1b:	imul   ebp,DWORD PTR [eax-0x55c9b3f7],0x41
  405b22:	sub    eax,0x12ce466b
  405b27:	mov    bl,0xf0
  405b29:	leave  
  405b2a:	jns    0x405b7e
  405b2c:	push   edi
  405b2d:	xchg   ebx,eax
  405b2e:	sbb    eax,0x593738d6
  405b33:	and    ch,BYTE PTR [ecx]
  405b35:	js     0x405ac5
  405b37:	jmp    FWORD PTR [ebx+0x18cebd92]
  405b3d:	or     dl,BYTE PTR [esi-0x5e]
  405b40:	daa    
  405b41:	jo     0x405b33
  405b43:	test   eax,0x1a8a265f
  405b48:	push   ebx
  405b49:	in     eax,dx
  405b4a:	xor    cl,BYTE PTR [ecx-0x6ccc2964]
  405b50:	and    DWORD PTR [ebp+0x6caa028b],esp
  405b56:	ret    0xf88f
  405b59:	xchg   DWORD PTR [ebx],eax
  405b5b:	xchg   edx,esi
  405b5d:	rcl    DWORD PTR [edx+edi*1-0x75],1
  405b61:	cld    
  405b62:	cwde   
  405b63:	mov    BYTE PTR ds:0xb5a17bc8,dh
  405b69:	icebp  
  405b6a:	xchg   BYTE PTR [eax+0x6b10c623],al
  405b70:	jne    0x405bbd
  405b72:	inc    esi
  405b73:	mov    ebp,DWORD PTR [esi+ebx*1+0x501ce6fc]
  405b7a:	fadd   st,st(4)
  405b7c:	and    BYTE PTR [ecx-0x5a],dl
  405b7f:	scas   eax,DWORD PTR es:[edi]
  405b80:	ds cdq 
  405b82:	jno    0x405b7a
  405b84:	dec    ecx
  405b85:	xor    DWORD PTR [eax+0x309325b5],esi
  405b8b:	pop    edx
  405b8c:	in     al,0x3
  405b8e:	leave  
  405b8f:	and    BYTE PTR [esp+edi*2-0x3],al
  405b93:	xor    al,0x94
  405b95:	mov    bh,0x17
  405b97:	mov    ?,WORD PTR [ecx+edx*8-0x6ae081c2]
  405b9e:	mov    BYTE PTR [esi+edx*1],cl
  405ba1:	and    al,0x3a
  405ba3:	cwde   
  405ba4:	jmp    0x763b7392
  405ba9:	cs mov esi,0xeb54993d
  405baf:	add    eax,0xc2374d8f
  405bb4:	dec    ebp
  405bb5:	hlt    
  405bb6:	(bad)
  405bba:	add    al,0xe3
  405bbc:	lods   eax,DWORD PTR ds:[si]
  405bbe:	mov    eax,ds:0xb704ff66
  405bc3:	hlt    
  405bc4:	xchg   esp,eax
  405bc5:	dec    edi
  405bc6:	sub    BYTE PTR [esi-0x2f05f74f],0xa8
  405bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bce:	push   ebp
  405bcf:	clc    
  405bd0:	cli    
  405bd1:	cmp    dl,0xb5
  405bd4:	pop    esi
  405bd5:	test   al,0xab
  405bd7:	or     DWORD PTR [ebx+0x28],ebx
  405bda:	sbb    BYTE PTR [esi],al
  405bdc:	sub    DWORD PTR ds:0xdbaf7a1b,edx
  405be2:	jl     0x405be1
  405be4:	jnp    0x405b7a
  405be6:	or     DWORD PTR [eax],ebp
  405be8:	fidivr WORD PTR [edi]
  405bea:	adc    ebx,DWORD PTR [edx-0x1]
  405bed:	mov    gs,WORD PTR [esi-0x6a223efd]
  405bf3:	add    al,0x39
  405bf5:	std    
  405bf6:	cmp    al,0x42
  405bf8:	out    dx,al
  405bf9:	cld    
  405bfa:	cmc    
  405bfb:	or     esp,DWORD PTR [eax-0x28]
  405bfe:	mov    eax,ds:0xc75fa9c5
  405c03:	xchg   ecx,eax
  405c04:	sub    eax,0x89bd7484
  405c09:	in     eax,dx
  405c0a:	stos   DWORD PTR es:[edi],eax
  405c0b:	out    0x60,eax
  405c0d:	(bad)  
  405c0e:	pop    ds
  405c0f:	std    
  405c10:	or     BYTE PTR [edi],bh
  405c12:	mov    bh,0x42
  405c14:	jle    0x405be8
  405c16:	inc    esi
  405c17:	retf   0xf0e9
  405c1a:	aas    
  405c1b:	rol    edi,1
  405c1d:	cmp    esi,DWORD PTR [ecx+0x2c4fd926]
  405c23:	xchg   edi,eax
  405c24:	mov    ebp,0xcd40236f
  405c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c2a:	sti    
  405c2b:	mov    BYTE PTR ds:0x880172e0,al
  405c31:	and    edi,DWORD PTR [ebp+ebx*8-0x63]
  405c35:	mov    WORD PTR [edx+eax*2-0x5b222285],fs
  405c3c:	inc    esi
  405c3d:	add    eax,0x5482077
  405c42:	xlat   BYTE PTR ds:[ebx]
  405c43:	add    al,0x53
  405c45:	imul   edx,DWORD PTR [edi+edx*2+0x71],0xffffff93
  405c4a:	lock add eax,esi
  405c4d:	pop    esp
  405c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c4f:	xchg   BYTE PTR [edx-0x43],al
  405c52:	sub    DWORD PTR [edi],esp
  405c54:	xchg   ecx,eax
  405c55:	or     al,0xd4
  405c57:	(bad)  
  405c58:	fwait
  405c59:	jae    0x405c26
  405c5b:	fsubr  QWORD PTR [edi-0x4a5bea5b]
  405c61:	outs   dx,DWORD PTR ds:[esi]
  405c62:	out    0x58,eax
  405c64:	mov    cl,BYTE PTR [edx-0x4f232b49]
  405c6a:	jbe    0x405c64
  405c6c:	adc    eax,0xbba3420b
  405c71:	dec    edi
  405c72:	adc    DWORD PTR [edi-0x14],ebp
  405c75:	in     eax,dx
  405c76:	sbb    eax,0x103c60f5
  405c7b:	push   0x4e787c90
  405c80:	push   ebx
  405c81:	cmp    eax,0x8360bcfc
  405c86:	push   cs
  405c87:	jge    0x405d00
  405c89:	aad    0x48
  405c8b:	xor    edx,esp
  405c8d:	sub    DWORD PTR [eax+0x41],0x16
  405c91:	inc    esp
  405c92:	cmp    BYTE PTR [edi],bl
  405c94:	ins    BYTE PTR es:[edi],dx
  405c95:	dec    esp
  405c96:	push   0xffffffea
  405c98:	cmp    BYTE PTR [eax+0x6eb5d9cd],dh
  405c9e:	test   al,0x87
  405ca0:	outs   dx,BYTE PTR ds:[esi]
  405ca1:	arpl   WORD PTR [edi+0x45],dx
  405ca4:	xchg   ebp,eax
  405ca5:	sub    BYTE PTR [ebp-0xaf22965],cl
  405cab:	inc    edi
  405cac:	mov    ecx,0x7b56cb53
  405cb1:	out    0x1c,eax
  405cb3:	mov    edx,0x882d3b
  405cb8:	pop    ss
  405cb9:	sbb    al,0x68
  405cbb:	mov    BYTE PTR [edx-0x784b8023],dh
  405cc1:	fmul   st,st(1)
  405cc3:	rol    DWORD PTR [edi+0xb],cl
  405cc6:	pop    ebx
  405cc7:	cmp    edi,DWORD PTR [edi-0x4c58ca25]
  405ccd:	xchg   esi,eax
  405cce:	std    
  405ccf:	sbb    bh,bl
  405cd1:	or     DWORD PTR ds:[eax],ecx
  405cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cd5:	call   0x99021717
  405cda:	add    DWORD PTR [edi+0x378aa6cc],edi
  405ce0:	repz test al,0x33
  405ce3:	xor    esp,DWORD PTR [esi+0x6a5e326f]
  405ce9:	sub    DWORD PTR [eax+edx*8],eax
  405cec:	loopne 0x405ce0
  405cee:	dec    ecx
  405cef:	mov    bh,0x78
  405cf1:	ja     0x405cb7
  405cf3:	ret    
  405cf4:	(bad)  
  405cf5:	xor    esp,DWORD PTR [ebx]
  405cf7:	pop    esp
  405cf8:	loopne 0x405cf2
  405cfa:	cmp    DWORD PTR [edx+ebp*1],edx
  405cfd:	es out dx,eax
  405cff:	mov    esp,0x73edc4bb
  405d04:	retf   0x426f
  405d07:	stc    
  405d08:	clc    
  405d09:	lahf   
  405d0a:	nop
  405d0b:	xor    edi,DWORD PTR [ecx+eax*2]
  405d0e:	xchg   edx,eax
  405d0f:	dec    esi
  405d10:	push   ss
  405d11:	inc    esp
  405d12:	pop    es
  405d13:	inc    ebx
  405d14:	fwait
  405d15:	or     ebp,DWORD PTR [edi+ecx*1]
  405d18:	into   
  405d19:	add    eax,edx
  405d1b:	or     eax,esp
  405d1d:	or     DWORD PTR [edi+0x2f9db5db],eax
  405d23:	jbe    0x405d0d
  405d25:	push   edx
  405d26:	mov    ebp,0x9ff8ecd1
  405d2b:	add    eax,0x37e13f05
  405d30:	push   eax
  405d31:	mov    eax,0x380eddd2
  405d36:	or     dh,0x89
  405d39:	sahf   
  405d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d3b:	loop   0x405d7a
  405d3d:	xor    al,0xb6
  405d3f:	jae    0x405d9d
  405d41:	call   0x754dce4
  405d46:	in     eax,0x40
  405d48:	hlt    
  405d49:	sub    BYTE PTR [edi-0x528e1d11],0x38
  405d50:	clc    
  405d51:	jmp    0x405d31
  405d53:	jp     0x405d19
  405d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d56:	(bad)  
  405d57:	jbe    0x405d19
  405d59:	xchg   BYTE PTR ds:0x1d0ce58e,bl
  405d5f:	push   es
  405d60:	jle    0x405dde
  405d62:	push   ecx
  405d63:	mov    esp,0x9789b190
  405d68:	ss test eax,0x563a5b9c
  405d6e:	sbb    dh,BYTE PTR [eax-0x62]
  405d71:	xchg   ebx,eax
  405d72:	cmp    eax,0xb40a603b
  405d77:	ror    edi,1
  405d79:	adc    al,0x47
  405d7b:	cmp    eax,0xbc774976
  405d80:	pushf  
  405d81:	cli    
  405d82:	cs jb  0x405d24
  405d85:	xchg   edx,eax
  405d86:	inc    ecx
  405d87:	fstp   QWORD PTR [esi-0x6fff6b5a]
  405d8d:	xchg   ebp,eax
  405d8e:	pop    ss
  405d8f:	neg    DWORD PTR [esi-0x1a]
  405d92:	xchg   ebp,eax
  405d93:	lds    edi,FWORD PTR [esi-0x4]
  405d96:	mov    ch,0xa9
  405d98:	jo     0x405d41
  405d9a:	add    DWORD PTR [edx+0x61],edi
  405d9d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  405d9f:	inc    ecx
  405da0:	repz out 0xc3,al
  405da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da4:	(bad)  
  405da5:	icebp  
  405da6:	xchg   ebx,eax
  405da7:	ret    
  405da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405da9:	pop    ebp
  405daa:	es jge 0x405db8
  405dad:	pop    ds
  405dae:	push   ss
  405daf:	leave  
  405db0:	popf   
  405db1:	cli    
  405db2:	xor    DWORD PTR [eax-0x12],edi
  405db5:	call   0x3a1d3002
  405dba:	cmp    eax,0x342f15e7
  405dbf:	push   ecx
  405dc0:	push   ecx
  405dc1:	cmp    dl,BYTE PTR [ebp+0x30]
  405dc4:	test   BYTE PTR [ecx+0x50],ah
  405dc7:	add    al,0x2c
  405dc9:	push   ebx
  405dca:	test   edx,ebp
  405dcc:	cmp    DWORD PTR [ebp+0x55],ebx
  405dcf:	int3   
  405dd0:	dec    edx
  405dd1:	ret    0x410b
  405dd4:	mov    ebp,0x2782a113
  405dd9:	out    dx,al
  405dda:	push   ebx
  405ddb:	dec    esi
  405ddc:	std    
  405ddd:	jo     0x405dca
  405ddf:	sahf   
  405de0:	inc    edi
  405de1:	mov    dh,BYTE PTR [ebx]
  405de3:	mov    ecx,0x9ce0548
  405de8:	or     DWORD PTR [edx+0x368d510],ebx
  405dee:	push   es
  405def:	lods   al,BYTE PTR ds:[esi]
  405df0:	xchg   esi,esi
  405df2:	jp     0x405e0c
  405df4:	test   al,0x1f
  405df6:	jno    0x405e3e
  405df8:	push   0x490b11aa
  405dfd:	lods   al,BYTE PTR ds:[esi]
  405dfe:	call   0x12bc6b24
  405e03:	scas   eax,DWORD PTR es:[edi]
  405e04:	mov    esi,0x5b7f39c9
  405e09:	loop   0x405e58
  405e0b:	(bad)  
  405e0c:	push   esp
  405e0d:	fbld   TBYTE PTR [ecx]
  405e0f:	and    BYTE PTR [ebx],al
  405e11:	add    bl,BYTE PTR [esi]
  405e13:	ror    DWORD PTR [edx],cl
  405e15:	(bad)  
  405e16:	pusha  
  405e17:	pop    ebp
  405e18:	push   es
  405e19:	cmp    BYTE PTR [eax+eiz*2],bh
  405e1c:	xchg   ebx,eax
  405e1d:	push   ss
  405e1e:	cmp    DWORD PTR [ecx+0x127c69f3],eax
  405e24:	adc    edx,DWORD PTR [esi+eax*4+0x441df8fd]
  405e2b:	or     DWORD PTR [edi],edx
  405e2d:	shr    BYTE PTR [esi],0x91
  405e30:	fild   DWORD PTR fs:[ecx]
  405e33:	out    dx,eax
  405e34:	retf   
  405e35:	in     eax,0xa1
  405e37:	jmp    DWORD PTR [ebx+esi*8]
  405e3a:	jge    0x405e7b
  405e3c:	sub    al,0xce
  405e3e:	pop    eax
  405e3f:	jecxz  0x405dee
  405e41:	loopne 0x405ea8
  405e43:	mov    al,ds:0x6d18c66b
  405e48:	adc    DWORD PTR [eax-0x1a00105],esp
  405e4e:	shl    BYTE PTR [esi-0x5d],1
  405e51:	loope  0x405e9a
  405e53:	outs   dx,DWORD PTR ds:[esi]
  405e54:	inc    esp
  405e55:	stc    
  405e56:	stos   BYTE PTR es:[edi],al
  405e57:	or     eax,0x4a2caff4
  405e5c:	(bad)  
  405e5d:	rcr    DWORD PTR [ecx+0x5168d2cb],1
  405e63:	lea    ebp,[edi]
  405e65:	mov    WORD PTR [esi+0x205a09e0],cs
  405e6b:	cs stc 
  405e6d:	(bad)  
  405e6e:	aad    0x7
  405e70:	adc    BYTE PTR [ebx],al
  405e72:	add    eax,0x985a156d
  405e77:	lock sti 
  405e79:	repz fwait
  405e7b:	mov    eax,0xd243ee4f
  405e80:	stc    
  405e81:	pop    eax
  405e82:	push   0xedb32709
  405e87:	lods   al,BYTE PTR ds:[esi]
  405e88:	inc    ebp
  405e89:	mov    edx,0x80af6a07
  405e8e:	cmp    esi,DWORD PTR [esi-0x4c]
  405e91:	sub    DWORD PTR [ecx+eax*4],esi
  405e94:	adc    bl,BYTE PTR [esp+edi*4+0x1ccd70b5]
  405e9b:	mov    gs,eax
  405e9d:	pop    edi
  405e9e:	lods   al,BYTE PTR ds:[esi]
  405e9f:	inc    esp
  405ea0:	lock xor al,0xba
  405ea3:	inc    ebx
  405ea4:	dec    ebp
  405ea5:	sbb    eax,0x4609aaca
  405eaa:	mov    ds:0xce70dfa0,eax
  405eaf:	ret    
  405eb0:	sbb    BYTE PTR [ebp-0x59879fb5],bh
  405eb6:	jp     0x405e8f
  405eb8:	push   es
  405eb9:	loope  0x405e62
  405ebb:	fcom   st(6)
  405ebd:	cld    
  405ebe:	cs in  eax,dx
  405ec0:	ficomp DWORD PTR [edi-0x10]
  405ec3:	bound  eax,QWORD PTR [ebp+0x2a5e837b]
  405ec9:	jle    0x405f34
  405ecb:	sahf   
  405ecc:	mov    eax,0xe47ff535
  405ed1:	int    0x74
  405ed3:	scas   eax,DWORD PTR es:[edi]
  405ed4:	enter  0xc48e,0xee
  405ed8:	cwde   
  405ed9:	lar    edx,WORD PTR [edi-0x36]
  405edd:	fdivp  st(3),st
  405edf:	sub    eax,0xe9ea8497
  405ee4:	dec    ebp
  405ee5:	mov    ch,0xb1
  405ee7:	add    al,0x88
  405ee9:	les    edi,FWORD PTR ss:[edx]
  405eec:	jmp    0x3985c7b8
  405ef1:	(bad)  
  405ef2:	(bad)  
  405ef4:	pop    ss
  405ef5:	cmc    
  405ef6:	cmp    DWORD PTR [edx+esi*1],ebp
  405ef9:	xor    dh,bl
  405efb:	stc    
  405efc:	add    ebp,esi
  405efe:	xchg   ebp,eax
  405eff:	add    al,0x79
  405f01:	jp     0x405eb3
  405f03:	jg     0x405ed3
  405f05:	mov    ebp,0xde6d117b
  405f0a:	rcr    BYTE PTR [edx],0xfd
  405f0d:	lds    esi,FWORD PTR [ecx+0x11]
  405f10:	adc    dh,BYTE PTR [edx-0xc2172ca]
  405f16:	mov    dl,0xb8
  405f18:	cmp    eax,DWORD PTR [edx+0x2e]
  405f1b:	bound  edi,QWORD PTR [esi+ebp*2-0x632b2028]
  405f22:	pop    ebp
  405f23:	xchg   BYTE PTR [ebp+0x4894f1fe],al
  405f29:	pop    esi
  405f2a:	push   esp
  405f2b:	xchg   DWORD PTR [ecx-0xb],ebp
  405f2e:	sbb    eax,0x559fc547
  405f33:	rol    bh,0x60
  405f36:	inc    ebp
  405f37:	sbb    dh,BYTE PTR [eax]
  405f39:	push   ebx
  405f3a:	out    0x56,eax
  405f3c:	rep ins DWORD PTR es:[edi],dx
  405f3e:	inc    edi
  405f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f40:	addr16 clc 
  405f42:	xor    al,0x88
  405f44:	xchg   esp,eax
  405f45:	fcomp  QWORD PTR [eax+0x4049a2ce]
  405f4b:	fist   DWORD PTR [ebp+0x1e]
  405f4e:	addr16 out dx,al
  405f50:	pop    ebp
  405f51:	mov    ebx,0x723e8cf1
  405f56:	cmp    al,0x68
  405f58:	xchg   edx,eax
  405f59:	and    al,0x99
  405f5b:	in     eax,dx
  405f5c:	cli    
  405f5d:	push   ecx
  405f5e:	aaa    
  405f5f:	xor    DWORD PTR [edi],eax
  405f61:	or     eax,ebx
  405f63:	pop    ebp
  405f64:	mov    ch,BYTE PTR [edx+0x73]
  405f67:	mov    edi,0xbee9e5a
  405f6c:	mul    DWORD PTR [edx]
  405f6e:	push   ebx
  405f6f:	sbb    ah,dl
  405f71:	(bad)  
  405f72:	jmp    0x405f49
  405f74:	cwde   
  405f75:	data16 mov bl,0x21
  405f78:	pop    es
  405f79:	mov    WORD PTR [esi],?
  405f7b:	aas    
  405f7c:	jl     0x405ff1
  405f7e:	mov    al,ds:0x9e13c15
  405f83:	out    dx,eax
  405f84:	dec    edx
  405f85:	stos   DWORD PTR es:[edi],eax
  405f86:	test   DWORD PTR [ebx-0x50],esi
  405f89:	lds    ecx,FWORD PTR [eax+eiz*1+0x52]
  405f8d:	shl    eax,0xd2
  405f90:	push   ecx
  405f91:	outs   dx,DWORD PTR ds:[esi]
  405f92:	aaa    
  405f93:	fwait
  405f94:	jae    0x405f9d
  405f96:	data16 daa 
  405f98:	(bad)  
  405f99:	mov    WORD PTR [esi-0x7d],es
  405f9c:	shr    DWORD PTR [edx+0x0],1
  405f9f:	(bad)  
  405fa0:	fstp   DWORD PTR [esi+esi*2+0x56]
  405fa4:	mov    eax,0x18c4af72
  405fa9:	lods   eax,DWORD PTR ds:[esi]
  405faa:	dec    BYTE PTR [edi]
  405fac:	call   0xac33:0x4a0ff2be
  405fb3:	sub    al,dl
  405fb5:	pop    ds
  405fb6:	(bad)  
  405fb7:	adc    dl,BYTE PTR [edi+0x2830cb39]
  405fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fbe:	cmc    
  405fbf:	data16 xchg BYTE PTR [esi+0x49],al
  405fc3:	idiv   DWORD PTR [esi+0x5262f9e9]
  405fc9:	pop    ss
  405fca:	push   ds
  405fcb:	inc    edi
  405fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fcd:	dec    esi
  405fce:	rol    DWORD PTR [edx],1
  405fd0:	inc    esp
  405fd1:	imul   edi,DWORD PTR [esi],0x11
  405fd4:	xor    BYTE PTR [edx],al
  405fd6:	jge    0x405f60
  405fd8:	cs mov cl,0x2f
  405fdb:	adc    BYTE PTR [eax+0x75],al
  405fde:	push   0xfffffffb
  405fe0:	or     esp,DWORD PTR [ebp-0x5fd062a6]
  405fe6:	or     eax,0xce4d392a
  405feb:	mov    edx,0x8730faf6
  405ff0:	das    
  405ff1:	mov    ebx,0xf23bb843
  405ff6:	test   esp,esp
  405ff8:	fisubr DWORD PTR [ecx+0x56]
  405ffb:	sub    edx,esp
  405ffd:	cs mov dh,0xa9
  406000:	lods   eax,DWORD PTR ds:[esi]
  406001:	xchg   edi,eax
  406002:	cmp    eax,DWORD PTR [esp+ebx*8-0x6]
  406006:	mov    edx,0x15dd60c0
  40600b:	cmp    eax,0x9bc2e711
  406010:	bound  edi,QWORD PTR [ebp-0x48e1a211]
  406016:	cmp    eax,0x514869da
  40601b:	gs and eax,0xee550a33
  406021:	shl    DWORD PTR [esi-0x5e],1
  406024:	adc    DWORD PTR [edi+0x4c],esi
  406027:	add    ecx,eax
  406029:	pop    ds
  40602a:	sub    eax,0x57a8e64e
  40602f:	mov    DWORD PTR [edx-0x5ae19808],esi
  406035:	push   cs
  406036:	loope  0x40605d
  406038:	and    ah,bh
  40603a:	or     DWORD PTR [ebp+0x7f],ebx
  40603d:	xor    ch,dh
  40603f:	pop    ss
  406040:	and    eax,0xf5b9dd1c
  406045:	xlat   BYTE PTR ds:[ebx]
  406046:	dec    edx
  406047:	jg     0x40605f
  406049:	sbb    eax,0x8938611a
  40604e:	das    
  40604f:	xchg   edi,eax
  406050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406051:	or     DWORD PTR [esi-0x6e2e02af],ecx
  406057:	mov    eax,0x84ad8bda
  40605c:	jae    0x406037
  40605e:	test   ah,ch
  406060:	mov    WORD PTR [esi+0x21],?
  406063:	retf   
  406064:	jmp    0x8ba0:0xb5cd8c5b
  40606b:	jmp    0x4060a2
  40606d:	add    al,0xc5
  40606f:	aas    
  406070:	jp     0x406006
  406072:	cdq    
  406073:	xchg   BYTE PTR [ebx-0x5c],dh
  406076:	pop    edi
  406077:	jmp    0x4060d6
  406079:	sbb    ebx,ebx
  40607b:	lahf   
  40607c:	pop    ecx
  40607d:	jae    0x406045
  40607f:	add    edx,DWORD PTR [esi-0x3c]
  406082:	das    
  406083:	mov    ebx,0xff6cd91d
  406088:	mov    ds:0x7a034ab3,eax
  40608d:	les    esi,FWORD PTR [esi+0x6f]
  406090:	adc    dh,BYTE PTR [edx+0x19e3cd64]
  406096:	adc    ah,BYTE PTR [ecx+0x39]
  406099:	xchg   ebx,eax
  40609a:	jecxz  0x40606c
  40609c:	pop    edx
  40609d:	aad    0x67
  40609f:	dec    esp
  4060a0:	test   dl,dl
  4060a2:	xchg   ebx,eax
  4060a3:	or     eax,0x16620c97
  4060a8:	xor    BYTE PTR [esi+eiz*4-0x3dac2f42],cl
  4060af:	repnz outs dx,BYTE PTR ds:[esi]
  4060b1:	jmp    0x406072
  4060b3:	jl     0x40604b
  4060b5:	jg     0x40603d
  4060b7:	push   0x12
  4060b9:	pop    ebx
  4060ba:	fnsave [eax-0x35b5e44c]
  4060c0:	jnp    0x40610f
  4060c2:	addr16 push ebp
  4060c4:	cs out dx,al
  4060c6:	add    BYTE PTR [eax-0x25],al
  4060c9:	cmc    
  4060ca:	dec    BYTE PTR [eax+ecx*8]
  4060cd:	loope  0x406146
  4060cf:	into   
  4060d0:	inc    eax
  4060d1:	outs   dx,BYTE PTR ds:[esi]
  4060d2:	cmc    
  4060d3:	jnp    0x40610f
  4060d5:	shr    ch,cl
  4060d7:	jg     0x4060d9
  4060d9:	lahf   
  4060da:	stc    
  4060db:	in     al,dx
  4060dc:	(bad)  
  4060dd:	repnz lahf 
  4060df:	int    0xf4
  4060e1:	int3   
  4060e2:	loope  0x4060a7
  4060e4:	pop    ds
  4060e5:	test   edi,esi
  4060e7:	dec    ebx
  4060e8:	xchg   edx,eax
  4060e9:	aas    
  4060ea:	mov    ebx,0x11ad252e
  4060ef:	cwde   
  4060f0:	fldcw  WORD PTR [edi+0x709fa54e]
  4060f6:	fst    DWORD PTR [ecx]
  4060f8:	pushf  
  4060f9:	mov    DWORD PTR [eax],ecx
  4060fb:	push   ebx
  4060fc:	mov    esi,0x2b17595e
  406101:	inc    eax
  406102:	xor    DWORD PTR [ecx+0xc2a2d23],ebx
  406108:	loope  0x40614b
  40610a:	xlat   BYTE PTR ds:[ebx]
  40610b:	mov    DWORD PTR [ecx+edx*2+0x128884b7],esi
  406112:	sbb    DWORD PTR [eax-0x7a],ebx
  406115:	mov    bh,0xb8
  406117:	call   0x6d81:0x45761499
  40611e:	sub    al,0xfe
  406120:	push   eax
  406121:	mov    ds:0x9b87c60f,al
  406126:	repz ss or eax,0x305aac79
  40612d:	xchg   ecx,eax
  40612e:	scas   al,BYTE PTR es:[edi]
  40612f:	imul   eax,DWORD PTR [ecx+0x1ea8121d],0xa214cc5e
  406139:	mov    edx,ebx
  40613b:	mov    ebp,0x3e1b2c96
  406140:	lods   al,BYTE PTR ds:[esi]
  406141:	jno    0x406196
  406143:	lods   eax,DWORD PTR ds:[esi]
  406144:	add    ah,BYTE PTR [ecx+0x4cfba8b9]
  40614a:	pop    es
  40614b:	pop    edx
  40614c:	push   cs
  40614d:	in     eax,0xc9
  40614f:	stos   BYTE PTR es:[edi],al
  406150:	add    edx,DWORD PTR [ebx+0x79]
  406153:	cmp    DWORD PTR [ebx+ebp*4+0x951ee9d],0xffffffcf
  40615b:	xchg   edi,eax
  40615c:	(bad)  
  40615e:	scas   eax,DWORD PTR es:[edi]
  40615f:	jge    0x406160
  406161:	je     0x4061cf
  406163:	fcom   DWORD PTR [esi+0x5cc6fb5]
  406169:	mov    al,0x95
  40616b:	xor    DWORD PTR [eax+0x58880e2a],0x1c
  406172:	mov    al,0x61
  406174:	in     eax,0x5e
  406176:	jo     0x406159
  406178:	scas   eax,DWORD PTR es:[edi]
  406179:	mov    ds:0xd83e1555,al
  40617e:	or     eax,eax
  406180:	sub    DWORD PTR [edx-0x6c],eax
  406183:	jl     0x4061b2
  406185:	adc    al,0x1c
  406187:	inc    edi
  406188:	fidiv  WORD PTR [ebp+0x7d]
  40618b:	mov    WORD PTR [ebx],cs
  40618d:	jp     0x406195
  40618f:	dec    eax
  406190:	cmp    eax,0x85968fc9
  406195:	jb     0x40611f
  406197:	sub    BYTE PTR [esp+ecx*8+0x5bfcf029],ah
  40619e:	mov    BYTE PTR [esi+0x30],ch
  4061a1:	out    0x65,al
  4061a3:	gs cli 
  4061a5:	call   0x1229:0xd3131458
  4061ac:	dec    edx
  4061ad:	imul   ebx,DWORD PTR [eax-0x1d3c0b73],0x53f4bdb6
  4061b7:	aam    0x7
  4061b9:	push   es
  4061ba:	dec    ebx
  4061bb:	xchg   edx,eax
  4061bc:	popf   
  4061bd:	add    ch,BYTE PTR [edx-0x7e18f5cf]
  4061c3:	(bad)  
  4061c4:	aas    
  4061c5:	xor    DWORD PTR [ebx+0x22b195a8],ebp
  4061cb:	out    0x15,eax
  4061cd:	popf   
  4061ce:	lock or ch,BYTE PTR ds:0x9802cff2
  4061d5:	sub    al,0x7f
  4061d7:	into   
  4061d8:	sti    
  4061d9:	jbe    0x406233
  4061db:	fdivp  st(2),st
  4061dd:	fisttp DWORD PTR [ebx-0x38668a4]
  4061e3:	dec    esp
  4061e4:	mov    dh,0x62
  4061e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061e7:	dec    ebx
  4061e8:	pop    ss
  4061e9:	mov    dl,0xe0
  4061eb:	and    eax,0xa6a02a33
  4061f0:	lahf   
  4061f1:	push   ds
  4061f2:	cmp    al,0x58
  4061f4:	(bad)  
  4061f6:	dec    esp
  4061f7:	je     0x406225
  4061f9:	jae    0x4061ec
  4061fb:	jne    0x40619a
  4061fd:	in     al,dx
  4061fe:	xlat   BYTE PTR ds:[ebx]
  4061ff:	sub    ebp,DWORD PTR [edx+0x3b]
  406202:	cld    
  406203:	adc    bh,BYTE PTR [ecx]
  406205:	arpl   WORD PTR [edx],sp
  406207:	test   BYTE PTR [ebx-0x7047c5fc],cl
  40620d:	and    ebx,DWORD PTR cs:[esi-0x3d]
  406211:	add    BYTE PTR [esi+0x5d],ch
  406214:	mov    cl,ah
  406216:	dec    esi
  406217:	stos   DWORD PTR es:[edi],eax
  406218:	xor    BYTE PTR [edi-0x1f791116],al
  40621e:	mov    eax,0x6be0a89b
  406223:	push   edi
  406224:	repnz clc 
  406226:	sub    bh,BYTE PTR [eax+0x3e]
  406229:	shr    BYTE PTR [ecx],cl
  40622b:	fist   DWORD PTR [edi-0x5ebdf85b]
  406231:	sahf   
  406232:	scas   al,BYTE PTR es:[edi]
  406233:	ret    0xfb1a
  406236:	mov    BYTE PTR [eax+0xf733593],dh
  40623c:	je     0x4061de
  40623e:	pop    edi
  40623f:	mov    dh,0xd
  406241:	lahf   
  406242:	dec    eax
  406243:	aaa    
  406244:	loopne 0x406278
  406246:	inc    edx
  406247:	rcr    eax,1
  406249:	test   eax,0xd672017a
  40624e:	call   0x3e9a:0x5de4aa8e
  406255:	mov    WORD PTR [esi+0x2d7dc967],es
  40625b:	adc    ecx,edx
  40625d:	add    al,0x9d
  40625f:	dec    edx
  406260:	(bad)  
  406261:	(bad)  
  406262:	mov    esi,0x8134d2c3
  406267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406268:	ss adc eax,0x5067976c
  40626e:	inc    edx
  40626f:	dec    eax
  406270:	mov    BYTE PTR [ecx],ah
  406272:	popf   
  406273:	jge    0x406217
  406275:	mul    al
  406277:	sbb    DWORD PTR [ebx-0x5b9c37eb],0xffffffae
  40627e:	dec    ebx
  40627f:	sar    BYTE PTR [ecx+0x3ab1f8ba],cl
  406285:	test   BYTE PTR ds:0xd1ecc109,dl
  40628b:	das    
  40628c:	test   eax,0xe09a6847
  406291:	aad    0x95
  406293:	pop    edi
  406294:	mov    ecx,0x200e7104
  406299:	in     al,dx
  40629a:	ret    0xf754
  40629d:	stc    
  40629e:	pusha  
  40629f:	lds    edi,FWORD PTR [ecx+eiz*4-0x4c]
  4062a3:	popf   
  4062a4:	aad    0x62
  4062a6:	or     edx,0x515ee01e
  4062ac:	cwde   
  4062ad:	pop    ss
  4062ae:	pop    ebx
  4062af:	inc    ecx
  4062b0:	inc    esi
  4062b1:	loop   0x406261
  4062b3:	sahf   
  4062b4:	ja     0x40628d
  4062b6:	or     ebp,esp
  4062b8:	data16 in al,0x47
  4062bb:	mov    ah,0xc9
  4062bd:	fild   DWORD PTR [edx-0x53e1ad71]
  4062c3:	out    dx,eax
  4062c4:	xchg   DWORD PTR [esi+eiz*1],edi
  4062c7:	mov    ax,ds:0x87141723
  4062cd:	cmp    eax,0x29b882a
  4062d2:	cmp    edx,DWORD PTR [ecx]
  4062d4:	enter  0xdc4f,0x87
  4062d8:	mov    ch,0xc6
  4062da:	mov    ds:0x891ed319,eax
  4062df:	cmp    DWORD PTR [esp+eax*2],0x4f
  4062e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062e4:	and    al,BYTE PTR [ecx+0x51]
  4062e7:	(bad)  
  4062e8:	pushf  
  4062e9:	pop    edi
  4062ea:	repnz sub edi,DWORD PTR [eax+0x4a]
  4062ee:	stc    
  4062ef:	fnstsw WORD PTR [ebx]
  4062f1:	jge    0x4062da
  4062f3:	sub    eax,DWORD PTR [edx+0x7f4c9847]
  4062f9:	lock sub ebp,esp
  4062fc:	xchg   ebx,ebp
  4062fe:	lea    ebx,[edx+ebp*8+0x24]
  406302:	imul   ebp,edi,0x5033bd9d
  406308:	xor    ch,bl
  40630a:	xchg   ebp,eax
  40630b:	out    0x22,eax
  40630d:	push   ebp
  40630e:	and    bl,BYTE PTR [edx+eiz*8-0x31bfb06a]
  406315:	mov    esi,0x17684f3c
  40631a:	ins    BYTE PTR es:[edi],dx
  40631b:	call   0x7b73ec89
  406320:	iret   
  406321:	lock mov ah,0x47
  406324:	xchg   DWORD PTR [esi+0x5f],ebp
  406327:	ret    0x6d2e
  40632a:	ffree  st(0)
  40632c:	cmp    eax,0x40b6bfa4
  406331:	sar    esp,0xdf
  406334:	in     eax,dx
  406335:	rol    DWORD PTR [eax],1
  406337:	nop
  406338:	and    DWORD PTR [eax+0x6],edi
  40633b:	mov    BYTE PTR [ebx],dh
  40633d:	pushf  
  40633e:	cmp    DWORD PTR [edi+0x1f5134c0],esi
  406344:	xchg   edi,eax
  406345:	cmp    BYTE PTR [eax+0x6c089109],dh
  40634b:	retf   
  40634c:	or     ebx,esp
  40634e:	ror    bh,cl
  406350:	sar    esp,0x57
  406353:	ret    
  406354:	mov    bl,0x72
  406356:	push   ecx
  406357:	jp     0x406341
  406359:	lds    ebx,FWORD PTR [ebp-0x35dd1bd4]
  40635f:	icebp  
  406360:	mov    ch,0x5a
  406362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406363:	or     BYTE PTR [eax-0x17a9bd22],dl
  406369:	sahf   
  40636a:	das    
  40636b:	xchg   ebp,eax
  40636c:	jle    0x4063dd
  40636e:	je     0x4063b9
  406370:	(bad)  
  406371:	(bad)  [esi]
  406373:	imul   ecx,DWORD PTR [ecx],0x8e187109
  406379:	mov    edi,0xfccf56f8
  40637e:	inc    eax
  40637f:	(bad)  
  406380:	xchg   ebp,eax
  406381:	xor    al,0x33
  406383:	in     eax,dx
  406384:	ins    DWORD PTR es:[edi],dx
  406385:	jge    0x4063e7
  406387:	fdivr  DWORD PTR [eax-0x6784a17d]
  40638d:	inc    DWORD PTR [ebp-0x50]
  406390:	add    al,0xf0
  406392:	(bad)  
  406394:	adc    esp,DWORD PTR [edi]
  406396:	sbb    eax,0xf2861de0
  40639b:	add    esi,esp
  40639d:	call   0xf2b1:0x665e3764
  4063a4:	jp     0x406378
  4063a6:	cmp    eax,0x20c85348
  4063ab:	dec    edx
  4063ac:	not    DWORD PTR [eax-0x66]
  4063af:	pop    ebx
  4063b0:	xor    eax,0x52b8b6c7
  4063b5:	dec    ebx
  4063b6:	mov    edi,0x2a409fbf
  4063bb:	adc    DWORD PTR [esi-0x2e8ea668],0xb0b14d3e
  4063c5:	mov    ebx,0xaef74a6f
  4063ca:	pop    ebx
  4063cb:	mov    BYTE PTR [ecx+0x5f],al
  4063ce:	push   es
  4063cf:	sub    ecx,DWORD PTR [ebx]
  4063d1:	scas   eax,DWORD PTR es:[edi]
  4063d2:	xchg   BYTE PTR [ebx],ch
  4063d4:	fldcw  WORD PTR [edi-0x26]
  4063d7:	mov    edx,0xca843a3b
  4063dc:	pop    edi
  4063dd:	rcr    DWORD PTR [ebp+0x732c0430],1
  4063e3:	out    0xce,al
  4063e5:	jno    0x4063d8
  4063e7:	call   0x7c66cc2e
  4063ec:	and    eax,0x730b4b6c
  4063f1:	inc    eax
  4063f2:	and    eax,0xb7b62937
  4063f7:	out    dx,al
  4063f8:	outs   dx,BYTE PTR ds:[esi]
  4063f9:	pushf  
  4063fa:	jnp    0x4063be
  4063fc:	scas   eax,DWORD PTR es:[edi]
  4063fd:	jo     0x4063b6
  4063ff:	jmp    0x8934:0xb39ee1ce
  406406:	add    DWORD PTR [ebx-0x21a37f46],esi
  40640c:	dec    edi
  40640d:	pusha  
  40640e:	pop    ecx
  40640f:	inc    ebx
  406410:	bound  ebx,QWORD PTR ds:0xf1b5bf1d
  406416:	lods   al,BYTE PTR ds:[esi]
  406417:	test   eax,ebx
  406419:	(bad)  
  40641b:	in     eax,0xd7
  40641d:	inc    edx
  40641e:	xor    al,BYTE PTR [edi]
  406420:	mov    edi,0xdb52a684
  406425:	mov    ch,0x76
  406427:	in     al,0xac
  406429:	imul   ebx,DWORD PTR [esi-0x314114da],0x6a
  406430:	jae    0x4063e8
  406432:	adc    bh,cl
  406434:	call   0xb84d:0xeea36113
  40643b:	adc    al,0x71
  40643d:	nop
  40643e:	lahf   
  40643f:	(bad)  
  406441:	fcomi  st,st(1)
  406443:	mov    eax,0x8d78ce01
  406448:	cmp    DWORD PTR [ebx+ebp*1-0x113fa6c0],ebx
  40644f:	xlat   BYTE PTR ds:[ebx]
  406450:	mov    eax,0x2b047dec
  406455:	dec    edi
  406456:	dec    esi
  406457:	cvttps2pi mm6,QWORD PTR [ebp+eax*2-0x22]
  40645c:	mov    al,0xd6
  40645e:	and    eax,0xf2036e51
  406463:	cmp    ebx,esp
  406465:	ret    0x3eb9
  406468:	out    dx,eax
  406469:	repz pop edi
  40646b:	loopne 0x4064e2
  40646d:	rcl    ebx,1
  40646f:	ja     0x406461
  406471:	int    0xe8
  406473:	ss fnstsw ax
  406476:	mov    eax,ds:0x54427016
  40647b:	sub    BYTE PTR [ecx+0x29fae961],ah
  406481:	add    BYTE PTR ds:0x87f5f768,cl
  406487:	mov    ch,0x2d
  406489:	xor    al,al
  40648b:	jne    0x406466
  40648d:	nop
  40648e:	add    ecx,DWORD PTR [edi-0x58]
  406491:	sbb    eax,0x58da54b6
  406496:	sar    BYTE PTR [ecx],cl
  406498:	jb     0x406422
  40649a:	stos   BYTE PTR es:[edi],al
  40649b:	mov    ecx,0x12eec2f2
  4064a0:	or     eax,0xcd0a32e6
  4064a5:	loop   0x4064f8
  4064a7:	div    cl
  4064a9:	jmp    0x40644b
  4064ab:	faddp  st(4),st
  4064ad:	push   ecx
  4064ae:	sar    BYTE PTR [edi],0xce
  4064b1:	inc    esp
  4064b2:	jle    0x406521
  4064b4:	jl     0x4064e5
  4064b6:	repnz test eax,0x6580cdbc
  4064bc:	and    DWORD PTR [ecx+0xf],0x1b3212d7
  4064c3:	inc    ebx
  4064c4:	shl    BYTE PTR [edx+0x44],0xd4
  4064c8:	and    BYTE PTR [ecx-0x1a],0x73
  4064cc:	dec    edi
  4064cd:	dec    eax
  4064ce:	or     al,0x92
  4064d0:	test   eax,0xe5833bbb
  4064d5:	stos   DWORD PTR es:[edi],eax
  4064d6:	add    ah,BYTE PTR [esi+0x6bbb64a7]
  4064dc:	and    al,0xda
  4064de:	(bad)  
  4064df:	retf   0xdd86
  4064e2:	sub    esp,ebx
  4064e4:	mov    edx,0x64d72891
  4064e9:	sbb    DWORD PTR [ebx-0x6b],ebp
  4064ec:	into   
  4064ed:	stos   DWORD PTR es:[edi],eax
  4064ee:	es clc 
  4064f0:	lods   al,BYTE PTR ds:[esi]
  4064f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064f2:	arpl   WORD PTR [ecx-0xd78642f],bp
  4064f8:	in     eax,dx
  4064f9:	xor    DWORD PTR [eax-0x28],edi
  4064fc:	jae    0x406495
  4064fe:	int    0xcc
  406500:	lods   al,BYTE PTR ds:[esi]
  406501:	xor    al,0x66
  406503:	push   0xc7aba5fa
  406508:	dec    eax
  406509:	sub    dh,BYTE PTR [ebx-0x5e1bd53c]
  40650f:	std    
  406510:	cli    
  406511:	push   ds
  406512:	add    BYTE PTR [eax-0x3c],bh
  406515:	and    esp,DWORD PTR [ebx+0x1db6d18a]
  40651b:	jnp    0x406564
  40651d:	retf   0x4046
  406520:	or     DWORD PTR [esp+esi*2],ebp
  406523:	shl    BYTE PTR [edi],0xf9
  406526:	jno    0x40657e
  406528:	add    al,0x6a
  40652a:	rcl    BYTE PTR [ecx-0x7],1
  40652d:	jno    0x406550
  40652f:	cmp    DWORD PTR [edi+0x4a],esi
  406532:	lods   eax,DWORD PTR ds:[esi]
  406533:	pop    ebx
  406534:	push   ecx
  406535:	xchg   esi,eax
  406536:	imul   esp,esi,0xffffffa9
  406539:	jb     0x4065b1
  40653b:	sbb    eax,0x9d1c6528
  406540:	sbb    eax,0xf291fdd1
  406545:	mov    eax,ds:0x85b282f4
  40654a:	repnz leave 
  40654c:	call   0xdabb27bb
  406551:	jge    0x40654b
  406553:	mov    dh,0xe
  406555:	jae    0x406569
  406557:	add    DWORD PTR [edi+0x32],ecx
  40655a:	pop    ecx
  40655b:	xchg   esp,eax
  40655c:	outs   dx,DWORD PTR ds:[esi]
  40655d:	mov    WORD PTR [eax-0x7e21227f],ss
  406563:	inc    ecx
  406564:	dec    edx
  406565:	pop    edx
  406566:	add    DWORD PTR [esi-0x43c868de],edx
  40656c:	dec    edx
  40656d:	pop    esp
  40656e:	sub    dh,ah
  406570:	std    
  406571:	sbb    edi,esp
  406573:	pop    ds
  406574:	fdivp  st(3),st
  406576:	mov    ebp,0xbb006442
  40657b:	out    0x2c,al
  40657d:	stos   BYTE PTR es:[edi],al
  40657e:	xchg   ecx,eax
  40657f:	mov    eax,ds:0x79b065c2
  406584:	test   al,0x91
  406586:	test   edi,esp
  406588:	aaa    
  406589:	push   ss
  40658a:	mov    BYTE PTR [ebx+0x468267e7],al
  406590:	(bad)  
  406591:	push   0x6f
  406593:	jge    0x406571
  406595:	dec    edi
  406596:	xchg   edx,eax
  406597:	push   DWORD PTR [ecx+0x7b081c69]
  40659d:	push   es
  40659e:	pop    ecx
  40659f:	std    
  4065a0:	test   al,0x17
  4065a2:	dec    ebx
  4065a3:	popf   
  4065a4:	sbb    ebx,DWORD PTR [edx+0x4f97c996]
  4065aa:	ret    
  4065ab:	ret    
  4065ac:	dec    eax
  4065ad:	ret    
  4065ae:	push   DWORD PTR [ebp+0x4071a036]
  4065b4:	xor    BYTE PTR [esi+0x64bb8ac0],0xef
  4065bb:	hlt    
  4065bc:	sbb    al,0x71
  4065be:	dec    esp
  4065bf:	jle    0x4065eb
  4065c1:	inc    ebx
  4065c2:	ds sub eax,0xcb67af1d
  4065c8:	lahf   
  4065c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065ca:	(bad)  
  4065cb:	pop    ebp
  4065cc:	loope  0x4065a5
  4065ce:	sub    esi,DWORD PTR [esp+edx*8-0x243f42b]
  4065d5:	add    DWORD PTR [edi-0x44b89e20],esp
  4065db:	in     eax,dx
  4065dc:	imul   ecx,ecx,0x2ce905e3
  4065e2:	ss push ebp
  4065e4:	call   0x1518617f
  4065e9:	add    BYTE PTR [esi+esi*2+0x15],ch
  4065ed:	mov    cl,0xe2
  4065ef:	stc    
  4065f0:	into   
  4065f1:	jmp    ecx
  4065f3:	loop   0x406584
  4065f5:	mov    eax,0x9b11a443
  4065fa:	cmp    esp,DWORD PTR [esi+0x7d00487f]
  406600:	pop    esi
  406601:	shr    DWORD PTR [eax+0x30],1
  406604:	jmp    0xff261b0
  406609:	jb     0x406635
  40660b:	cld    
  40660c:	lock and esi,DWORD PTR [bx+di]
  406610:	mov    eax,0x2f9ed978
  406615:	(bad)  
  406616:	xchg   edx,eax
  406617:	sbb    edi,edx
  406619:	(bad)  [ebp-0x25]
  40661c:	rcl    BYTE PTR [esi-0x2568ecc7],0x5b
  406623:	cwde   
  406624:	jp     0x40666d
  406626:	inc    ebx
  406627:	ret    
  406628:	add    ebx,DWORD PTR [ecx]
  40662a:	adc    eax,edi
  40662c:	retf   0xaeab
  40662f:	(bad)  
  406630:	in     eax,0x6c
  406632:	data16 sti 
  406634:	and    ebx,DWORD PTR [edx]
  406636:	pop    ss
  406637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406638:	inc    ebx
  406639:	cmp    esp,ebp
  40663b:	inc    ecx
  40663c:	mov    bh,0x67
  40663e:	call   0xc30f:0x75b6c0
  406645:	mov    ch,0x33
  406647:	jecxz  0x406625
  406649:	cli    
  40664a:	cli    
  40664b:	inc    esi
  40664c:	in     al,dx
  40664d:	shl    BYTE PTR [eax-0x7569df2c],cl
  406653:	fsubr  DWORD PTR [ebx+ecx*8-0x1]
  406657:	or     al,0xa2
  406659:	xor    BYTE PTR ds:0xe8b8c228,ah
  40665f:	(bad)  
  406660:	out    dx,eax
  406661:	leave  
  406662:	lock sub eax,0x89ebb004
  406668:	mov    ?,WORD PTR [edx+0x5c7b2842]
  40666e:	lods   al,BYTE PTR ds:[esi]
  40666f:	jns    0x40667c
  406671:	sbb    eax,0xa57d772b
  406676:	inc    edi
  406677:	xchg   ebp,eax
  406678:	push   ecx
  406679:	int3   
  40667a:	fisubr DWORD PTR [ebp-0x4aba7d25]
  406680:	xor    bh,BYTE PTR [edi+edi*1]
  406683:	lods   al,BYTE PTR ds:[esi]
  406684:	sbb    bl,dl
  406686:	call   0x4c155808
  40668b:	jmp    0x406696
  40668d:	mov    ds:0x19455faa,eax
  406692:	aad    0xad
  406694:	mov    bh,0xf1
  406696:	jg     0x406683
  406698:	jb     0x40669c
  40669a:	cmp    BYTE PTR [esi],0x6e
  40669d:	in     al,0x96
  40669f:	sbb    eax,0xbd2c8a0
  4066a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066a5:	fidiv  WORD PTR [edx]
  4066a7:	lahf   
  4066a8:	dec    ebx
  4066a9:	loopne 0x406666
  4066ab:	add    esp,DWORD PTR [esi+eax*2]
  4066ae:	aad    0x88
  4066b0:	xor    al,0xb4
  4066b2:	in     eax,0xd3
  4066b4:	push   ds
  4066b5:	cdq    
  4066b6:	(bad)  
  4066b7:	in     eax,dx
  4066b8:	gs fstp st(3)
  4066bb:	dec    esi
  4066bc:	out    dx,al
  4066bd:	mov    ch,0xf2
  4066bf:	test   DWORD PTR [edx-0x6ce3c0e],ebx
  4066c5:	push   cs
  4066c6:	mov    esp,0xe81e4fc0
  4066cb:	mov    ebx,0xd7571502
  4066d0:	inc    BYTE PTR [esi]
  4066d2:	dec    edi
  4066d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d4:	nop
  4066d5:	aaa    
  4066d6:	pop    ecx
  4066d7:	dec    ecx
  4066d8:	pusha  
  4066d9:	cmp    DWORD PTR [esi-0x59],0xdc1bb6b2
  4066e0:	mov    edi,0xeaa1789e
  4066e5:	push   ds
  4066e6:	mov    dh,0x1f
  4066e8:	(bad)  
  4066e9:	out    dx,al
  4066ea:	retf   0xde73
  4066ed:	xchg   BYTE PTR [edi],ch
  4066ef:	rcr    BYTE PTR [edx-0x74],cl
  4066f2:	mov    al,ds:0xe4dbc3f8
  4066f7:	lea    eax,[edi+0x6c]
  4066fa:	aam    0xee
  4066fc:	mov    al,ds:0xd018d3ff
  406701:	in     al,dx
  406702:	clc    
  406703:	aad    0x15
  406705:	test   ah,bh
  406707:	push   edi
  406708:	test   al,0xb8
  40670a:	imul   esi,DWORD PTR [ecx+0x1eaecf10],0xbf3517d3
  406714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406715:	xor    ah,BYTE PTR [edx]
  406717:	jmp    0xbeac:0xbc00051
  40671e:	ror    BYTE PTR [edx],0x73
  406721:	in     al,0xf4
  406723:	push   edx
  406724:	jnp    0x4066e5
  406726:	test   BYTE PTR ds:0xf22d2922,dh
  40672c:	pop    edi
  40672d:	into   
  40672e:	inc    edi
  40672f:	rcl    DWORD PTR ds:0xd5675d78,cl
  406735:	jb     0x406781
  406737:	xchg   edi,eax
  406738:	sub    BYTE PTR [ebp+0x7eb971f6],dh
  40673e:	push   edi
  40673f:	fdiv   DWORD PTR [eax]
  406741:	in     eax,dx
  406742:	add    BYTE PTR [ebx],bl
  406744:	mov    eax,esi
  406746:	mov    ds:0xb265976d,al
  40674b:	jne    0x40676c
  40674d:	cmp    BYTE PTR [esi+0x10],dl
  406750:	out    0x2b,eax
  406752:	shr    BYTE PTR [esi-0x6ff55a6a],0xb6
  406759:	out    0xc8,eax
  40675b:	mov    esi,0x9aa8ddcf
  406760:	xchg   ecx,eax
  406761:	mov    ah,0x54
  406763:	sub    BYTE PTR [edi],bl
  406765:	push   0xa9a8ddec
  40676a:	adc    al,dh
  40676c:	ins    BYTE PTR es:[edi],dx
  40676d:	or     al,0x8a
  40676f:	lea    ebx,[eax-0x62bb3546]
  406775:	and    al,al
  406777:	nop
  406778:	(bad)  
  406779:	retf   0xa473
  40677c:	into   
  40677d:	and    eax,0x332051b3
  406782:	push   ebp
  406783:	ds adc eax,0x25680cc3
  406789:	xchg   edx,eax
  40678a:	mov    ah,0xc2
  40678c:	dec    edx
  40678d:	push   edi
  40678e:	sub    al,0xc8
  406790:	into   
  406791:	iret   
  406792:	cmc    
  406793:	lods   al,BYTE PTR ds:[esi]
  406794:	and    ecx,eax
  406796:	xchg   edx,eax
  406797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406798:	push   edx
  406799:	inc    esp
  40679a:	aas    
  40679b:	outs   dx,BYTE PTR ds:[esi]
  40679c:	(bad)  [ebp-0x675007bd]
  4067a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067a3:	aas    
  4067a4:	sbb    al,0xa8
  4067a6:	loope  0x4067cb
  4067a8:	into   
  4067a9:	mov    cl,0xbd
  4067ab:	bound  edx,QWORD PTR [edx+0x6c]
  4067ae:	std    
  4067af:	pusha  
  4067b0:	add    al,0x69
  4067b2:	sub    al,0xbc
  4067b4:	dec    edx
  4067b5:	mov    ebx,0x8e62a85d
  4067ba:	mov    dh,0xa8
  4067bc:	jmp    0x86a7c1ea
  4067c1:	push   esp
  4067c2:	mov    ch,0xf2
  4067c4:	push   esp
  4067c5:	inc    esp
  4067c6:	xor    esi,DWORD PTR [edx*4+0x7df3a79a]
  4067cd:	add    eax,0xfbe463da
  4067d2:	prefetch (bad)
  4067d3:	or     eax,0x698191f7
  4067d8:	rcr    DWORD PTR [ebx+0x1],0x5
  4067dc:	lods   al,BYTE PTR ds:[esi]
  4067dd:	inc    edi
  4067de:	inc    ebx
  4067df:	mov    bh,0xa0
  4067e1:	aad    0x2a
  4067e3:	mov    ah,0x6a
  4067e5:	cmp    al,0xe5
  4067e7:	adc    al,0xd0
  4067e9:	enter  0x2017,0xdc
  4067ed:	jno    0x4067f5
  4067ef:	inc    eax
  4067f0:	xchg   eax,ebx
  4067f2:	inc    edx
  4067f3:	adc    BYTE PTR [ebx+0x57a41b68],bh
  4067f9:	sub    ebp,DWORD PTR [ebx-0x7a]
  4067fc:	xlat   BYTE PTR ds:[ebx]
  4067fd:	cmp    eax,0xb29aeec8
  406802:	mov    eax,0xf62bcf18
  406807:	mov    DWORD PTR [ebx+ebp*1+0x3a0098a8],ebx
  40680e:	(bad)  
  40680f:	jno    0x406817
  406811:	stos   DWORD PTR es:[edi],eax
  406812:	xchg   DWORD PTR [edi],eax
  406814:	push   edi
  406815:	cwde   
  406816:	and    bh,BYTE PTR [ebp-0x39c902e0]
  40681c:	fld    TBYTE PTR [ebx+eiz*8+0x7a]
  406820:	lods   eax,DWORD PTR ds:[esi]
  406821:	ss aad 0xe4
  406824:	push   edx
  406825:	push   edx
  406826:	jnp    0x40688d
  406828:	ins    DWORD PTR es:[edi],dx
  406829:	sub    al,0x1d
  40682b:	push   0x7c6975c5
  406830:	hlt    
  406831:	les    eax,FWORD PTR [edi+esi*1+0x5fa37a3e]
  406838:	ret    0xb50c
  40683b:	or     al,0xc4
  40683d:	je     0x4068bc
  40683f:	call   0x4c09bad0
  406844:	xchg   edx,eax
  406845:	or     BYTE PTR ds:0xc1fa0311,0xa
  40684c:	adc    eax,0xfe95a347
  406851:	in     ax,dx
  406853:	sahf   
  406854:	mov    dh,0xa1
  406856:	stc    
  406857:	xchg   ebp,eax
  406858:	pop    ds
  406859:	or     edi,DWORD PTR [esi-0x28800361]
  40685f:	jl     0x4067f9
  406861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406862:	je     0x406841
  406864:	nop
  406865:	idiv   DWORD PTR [edx+0x46]
  406868:	push   0xffffffed
  40686a:	sbb    ah,BYTE PTR [ebp+0x2f]
  40686d:	fdiv   QWORD PTR [ebp-0x5a1537b3]
  406873:	or     ebp,DWORD PTR [ebx]
  406875:	out    dx,al
  406876:	add    DWORD PTR [ecx+0x46],0xd34077c9
  40687d:	pushf  
  40687e:	stc    
  40687f:	shl    BYTE PTR [edx-0x63],cl
  406882:	pop    es
  406883:	int    0xe8
  406885:	mov    ah,0xf0
  406887:	xchg   DWORD PTR ds:0x380ec3fc,esi
  40688d:	into   
  40688e:	test   BYTE PTR [ecx+0x4],0x16
  406892:	jno    0x4068d4
  406894:	sub    DWORD PTR [ecx-0x8a64f9d],0x71
  40689b:	push   es
  40689c:	into   
  40689d:	or     BYTE PTR [ebp-0x4aaf8f58],bh
  4068a3:	int    0xef
  4068a5:	and    bh,ah
  4068a7:	cmc    
  4068a8:	hlt    
  4068a9:	pop    eax
  4068aa:	frstor [ecx-0x14]
  4068ad:	push   ebx
  4068ae:	mov    cl,0x9b
  4068b0:	repz and BYTE PTR [eax+0x3a820702],0xb1
  4068b8:	retf   
  4068b9:	dec    edi
  4068ba:	fld    QWORD PTR [edi]
  4068bc:	data16 jnp 0x40688b
  4068bf:	mov    ah,0xf8
  4068c1:	arpl   WORD PTR [ecx],dx
  4068c3:	scas   al,BYTE PTR es:[edi]
  4068c4:	retf   
  4068c5:	cs mov ebx,ebp
  4068c8:	fadd   st,st(0)
  4068ca:	xchg   ah,bh
  4068cc:	sbb    cl,BYTE PTR [eax]
  4068ce:	cmp    eax,0x63e9e5c8
  4068d3:	pusha  
  4068d4:	nop    DWORD PTR [ebx+0xdeb2214]
  4068db:	dec    ebx
  4068dc:	dec    ecx
  4068dd:	cli    
  4068de:	in     eax,0x12
  4068e0:	outs   dx,DWORD PTR ds:[esi]
  4068e1:	sub    eax,0xceaf2be2
  4068e6:	lds    esi,FWORD PTR [eax+0x44]
  4068e9:	int    0x1a
  4068eb:	dec    ebp
  4068ec:	and    eax,0xcb5b28f7
  4068f1:	je     0x406917
  4068f3:	scas   al,BYTE PTR es:[edi]
  4068f4:	mov    ds:0xc0e5ddf9,al
  4068f9:	push   edi
  4068fa:	outs   dx,DWORD PTR ds:[esi]
  4068fb:	call   0xd0d2:0x4adc2405
  406902:	dec    esi
  406903:	inc    edx
  406904:	xchg   edi,eax
  406905:	ins    DWORD PTR es:[edi],dx
  406906:	hlt    
  406907:	aaa    
  406908:	test   al,0xc8
  40690a:	jmp    0xa011a421
  40690f:	or     BYTE PTR [ecx+0x7f33be8d],0x67
  406916:	pop    ebx
  406917:	aaa    
  406918:	shl    DWORD PTR [edi-0x6ff2c838],1
  40691e:	aam    0x7d
  406920:	repnz xchg eax,edx
  406923:	pop    ecx
  406924:	int    0xf3
  406926:	and    eax,0x691e1f98
  40692b:	xor    bl,BYTE PTR [edi+0x66cb838d]
  406931:	inc    esi
  406932:	cld    
  406933:	popf   
  406934:	loopne 0x406963
  406936:	and    ecx,DWORD PTR [edx]
  406938:	inc    esp
  406939:	hlt    
  40693a:	jg     0x406990
  40693c:	jb     0x40690d
  40693e:	cmp    dl,BYTE PTR [edi]
  406940:	test   BYTE PTR [ebp-0x4184e02a],0x14
  406947:	pop    eax
  406948:	test   eax,0xe108ef29
  40694d:	adc    BYTE PTR [edx+0x68],0x93
  406951:	and    BYTE PTR ds:0xdc8b7c31,dl
  406957:	jnp    0x406992
  406959:	xor    BYTE PTR [ecx+0x24df0ed3],ah
  40695f:	aad    0x45
  406961:	(bad)  
  406962:	ds pushf 
  406964:	imul   eax,DWORD PTR [ebp+0x756cc96f],0x2a
  40696b:	scas   eax,DWORD PTR es:[edi]
  40696c:	scas   eax,DWORD PTR es:[edi]
  40696d:	in     eax,dx
  40696e:	repz jmp 0x40693c
  406971:	fwait
  406972:	pop    es
  406973:	ins    DWORD PTR es:[edi],dx
  406974:	adc    eax,0x9b615762
  406979:	and    al,0x4b
  40697b:	out    0x3f,al
  40697d:	jnp    0x40697c
  40697f:	imul   esp,DWORD PTR [edx+0x69],0xd5f162d1
  406986:	stos   DWORD PTR es:[edi],eax
  406987:	jmp    0xbb5b422e
  40698c:	dec    ecx
  40698d:	jb     0x406a0d
  40698f:	and    al,bl
  406991:	sbb    ah,BYTE PTR [edi-0x5d]
  406994:	(bad)  
  406995:	mov    cl,0xeb
  406997:	push   eax
  406998:	xlat   BYTE PTR ds:[ebx]
  406999:	rcl    DWORD PTR [ecx+0x7e],0x27
  40699d:	leave  
  40699e:	cld    
  40699f:	mov    edi,0x3ca07fb6
  4069a4:	pop    ebx
  4069a5:	test   BYTE PTR [ecx+ebp*1],dh
  4069a8:	stos   DWORD PTR es:[edi],eax
  4069a9:	mov    ecx,0xa1bcb725
  4069ae:	push   0xffffffe6
  4069b0:	sub    BYTE PTR [esi],bh
  4069b2:	rcl    BYTE PTR [edx+ebx*8],1
  4069b5:	mov    esi,0x52ccc6c0
  4069ba:	xor    BYTE PTR ds:0xc51bfeb0,0x35
  4069c1:	repz into 
  4069c3:	push   ebx
  4069c4:	jecxz  0x4069bc
  4069c6:	inc    esi
  4069c7:	shr    esp,0x18
  4069ca:	leave  
  4069cb:	sub    esp,esi
  4069cd:	sti    
  4069ce:	out    dx,al
  4069cf:	retf   0x56b
  4069d2:	sbb    BYTE PTR [ecx],cl
  4069d4:	push   ecx
  4069d5:	retf   
  4069d6:	sar    ch,1
  4069d8:	sub    BYTE PTR [edi-0x5c],cl
  4069db:	xor    al,0x8e
  4069dd:	jnp    0x406a2d
  4069df:	push   esp
  4069e0:	stos   DWORD PTR es:[edi],eax
  4069e1:	xchg   edx,eax
  4069e2:	push   ebx
  4069e3:	dec    ebx
  4069e4:	es mov bl,0xdb
  4069e7:	dec    DWORD PTR [edi+0x26]
  4069ea:	mov    ah,0xb
  4069ec:	scas   al,BYTE PTR es:[edi]
  4069ed:	in     al,0x18
  4069ef:	inc    edx
  4069f0:	add    ch,ah
  4069f2:	adc    BYTE PTR [ebx+0x4f62ccaf],ch
  4069f8:	sub    cl,dl
  4069fa:	mov    esp,0xc8f71bdf
  4069ff:	cld    
  406a00:	arpl   WORD PTR [eax+edx*8],cx
  406a03:	ja     0x4069f1
  406a05:	inc    ebx
  406a06:	push   esi
  406a07:	ret    
  406a08:	sbb    eax,0xf8bd4c3f
  406a0d:	out    dx,eax
  406a0e:	pop    esi
  406a0f:	sub    al,0x91
  406a11:	je     0x406a2b
  406a13:	jge    0x406a29
  406a15:	ins    DWORD PTR es:[edi],dx
  406a16:	ins    BYTE PTR es:[edi],dx
  406a17:	ja     0x406a98
  406a19:	movaps xmm6,XMMWORD PTR ds:0xb3dbf58c
  406a20:	sbb    al,0xf1
  406a22:	jge    0x406a24
  406a24:	and    BYTE PTR [edx+0x3ff39bb],cl
  406a2a:	or     eax,eax
  406a2c:	dec    edx
  406a2d:	sahf   
  406a2e:	xchg   esi,eax
  406a2f:	(bad)  
  406a30:	sti    
  406a31:	inc    ecx
  406a32:	fadd   st,st(4)
  406a34:	into   
  406a35:	and    BYTE PTR [edi],ah
  406a37:	ficom  WORD PTR [ebx]
  406a39:	add    al,0x72
  406a3b:	sbb    esp,ebx
  406a3d:	lds    ebx,FWORD PTR [eax]
  406a3f:	int    0x18
  406a41:	out    dx,eax
  406a42:	jg     0x406a70
  406a44:	jge    0x406a43
  406a46:	into   
  406a47:	sbb    ah,dh
  406a49:	or     al,0xf1
  406a4b:	xchg   ebp,eax
  406a4c:	cmp    eax,edx
  406a4e:	inc    ecx
  406a4f:	pop    edi
  406a50:	pop    ds
  406a51:	test   BYTE PTR [edx+0x7],dh
  406a54:	push   edx
  406a55:	mov    BYTE PTR [eax],ah
  406a57:	adc    DWORD PTR [ecx+0x2d],esi
  406a5a:	iret   
  406a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a5c:	pop    ebx
  406a5d:	push   esp
  406a5e:	pop    eax
  406a5f:	mov    ds:0x1c87778c,al
  406a64:	pop    esp
  406a65:	loop   0x406a11
  406a67:	fisubr DWORD PTR [ebx]
  406a6a:	cmp    bh,dh
  406a6c:	gs test eax,0xbb7a2a50
  406a72:	push   ds
  406a73:	ffree  st(4)
  406a75:	or     al,0xd
  406a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a78:	in     al,0xd6
  406a7a:	aas    
  406a7b:	xor    BYTE PTR [esi+0x609461d7],cl
  406a81:	adc    eax,0xc313fbb9
  406a86:	pop    esp
  406a87:	dec    ecx
  406a88:	retf   
  406a89:	jl     0x406a83
  406a8b:	mov    al,ds:0xf7b36c9c
  406a90:	int3   
  406a91:	sbb    al,0x66
  406a93:	jg     0x406acc
  406a95:	in     eax,0x51
  406a97:	scas   eax,DWORD PTR es:[edi]
  406a98:	out    0xb3,al
  406a9a:	xchg   dh,dh
  406a9c:	fdiv   st(7),st
  406a9e:	adc    bl,BYTE PTR [ecx]
  406aa0:	stos   BYTE PTR es:[edi],al
  406aa1:	mov    bh,dl
  406aa3:	mov    ds:0xc3b67140,al
  406aa8:	cs jo  0x406ac5
  406aab:	dec    ebp
  406aac:	loopne 0x406b06
  406aae:	stc    
  406aaf:	push   ecx
  406ab0:	or     eax,0x82854fc3
  406ab5:	mov    ebx,0x3f13a4f5
  406aba:	jecxz  0x406a52
  406abc:	inc    edi
  406abd:	sbb    eax,0xf2e11b0b
  406ac2:	add    edi,0xea192a86
  406ac8:	icebp  
  406ac9:	ret    
  406aca:	dec    eax
  406acb:	mov    esp,0xa23d79e0
  406ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ad1:	shr    DWORD PTR [ebx-0x4acd66c4],1
  406ad7:	scas   eax,DWORD PTR es:[edi]
  406ad8:	jp     0x406aa2
  406ada:	sub    ah,dh
  406adc:	jbe    0x406a96
  406ade:	dec    ecx
  406adf:	pop    ebx
  406ae0:	and    DWORD PTR [ecx+0xd278e4],ebp
  406ae6:	fisttp QWORD PTR [ecx+0x76]
  406ae9:	xor    DWORD PTR [edx+0x2d2d69e7],edx
  406aef:	cwde   
  406af0:	xor    al,0x97
  406af2:	loop   0x406a9f
  406af4:	xor    eax,0x4af7ca7c
  406af9:	outs   dx,BYTE PTR ds:[esi]
  406afa:	dec    esi
  406afb:	sti    
  406afc:	psubusb mm4,QWORD PTR [ecx-0x47726091]
  406b03:	data16 js 0x406aef
  406b06:	push   ecx
  406b07:	sbb    eax,0x9ce0eae
  406b0c:	ret    
  406b0d:	xchg   DWORD PTR [edx],edi
  406b0f:	cmp    BYTE PTR [ebp+0x76bfcb1],ch
  406b15:	mov    ecx,esi
  406b17:	or     eax,DWORD PTR [edi-0x2fcb5c8e]
  406b1d:	outs   dx,BYTE PTR ds:[esi]
  406b1e:	out    0xd0,eax
  406b20:	nop
  406b21:	test   BYTE PTR [ecx],bh
  406b23:	out    0xf2,al
  406b25:	and    al,0x91
  406b27:	mov    ah,0xd7
  406b29:	sbb    al,0x99
  406b2b:	dec    ecx
  406b2c:	xor    al,0x6a
  406b2e:	or     BYTE PTR [edx],ch
  406b30:	aaa    
  406b31:	adc    BYTE PTR [edi-0x43],ah
  406b34:	daa    
  406b35:	push   0x51
  406b37:	jge    0x406aed
  406b39:	fistp  DWORD PTR [esi]
  406b3b:	and    ebx,DWORD PTR [ebx+0x281a43fb]
  406b41:	adc    eax,0xc00995ff
  406b46:	outs   dx,DWORD PTR ds:[esi]
  406b47:	pop    ds
  406b48:	in     eax,0xa2
  406b4a:	es sub bh,ah
  406b4d:	test   ah,al
  406b4f:	xor    DWORD PTR [ebx+0x75],eax
  406b52:	jmp    0x7f59:0x83ccc710
  406b59:	sbb    eax,0xac8ad8e5
  406b5e:	mov    edx,0x1f62d63f
  406b63:	dec    eax
  406b64:	enter  0x6953,0x72
  406b68:	aam    0x94
  406b6a:	inc    ebp
  406b6b:	call   0xa706f8da
  406b70:	mov    esp,DWORD PTR [eax+0xe3e185]
  406b76:	imul   ebx,DWORD PTR [ebp-0xa4d3da0],0xffffffc6
  406b7d:	js     0x406bd8
  406b7f:	ins    BYTE PTR es:[edi],dx
  406b80:	push   edi
  406b81:	add    eax,0x380c4580
  406b86:	push   cs
  406b87:	mov    esi,0x62f222af
  406b8c:	retf   
  406b8d:	push   0x452a099e
  406b92:	es call 0x748535e0
  406b98:	out    0x93,eax
  406b9a:	lds    eax,FWORD PTR [eax+ecx*1-0x64e9ac52]
  406ba1:	inc    esp
  406ba2:	mov    WORD PTR [esi+esi*2-0x42],ds
  406ba6:	mov    al,0x28
  406ba8:	add    al,0x10
  406baa:	mov    bh,ah
  406bac:	sub    BYTE PTR [eax],al
  406bae:	sub    al,0x5
  406bb0:	mov    edx,0x3b10a75
  406bb5:	dec    ebx
  406bb6:	in     eax,dx
  406bb7:	or     eax,DWORD PTR [ecx+ebp*2+0x2fcd3942]
  406bbe:	out    0x62,ax
  406bc1:	sbb    bh,cl
  406bc3:	mov    bh,0xfd
  406bc5:	hlt    
  406bc6:	je     0x406b51
  406bc8:	bound  ebp,QWORD PTR [ebp-0x21d61c42]
  406bce:	xchg   edx,eax
  406bcf:	sub    BYTE PTR [edi-0x5f687cf6],dh
  406bd5:	rcl    dl,1
  406bd7:	xchg   edi,eax
  406bd8:	stos   BYTE PTR es:[edi],al
  406bd9:	cwde   
  406bda:	out    dx,eax
  406bdb:	out    dx,al
  406bdc:	ja     0x406beb
  406bde:	mov    ds,esp
  406be0:	dec    edx
  406be1:	sahf   
  406be2:	gs push esp
  406be4:	sbb    ecx,DWORD PTR [esi-0x2d94ab17]
  406bea:	adc    eax,DWORD PTR [esp+ebp*4-0x3446fd15]
  406bf1:	call   0x4e12:0x1197b488
  406bf8:	jl     0x406c40
  406bfa:	and    edi,DWORD PTR [esi-0x5b]
  406bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bfe:	out    0xeb,eax
  406c00:	cmp    dl,0x70
  406c03:	jno    0x406c1e
  406c05:	jle    0x406baf
  406c07:	fisttp DWORD PTR [ebx-0x314a7e57]
  406c0d:	dec    esi
  406c0e:	aad    0x8c
  406c10:	imul   ecx,edi,0xffffffbf
  406c13:	arpl   WORD PTR [eax+0x4e],di
  406c16:	xchg   edx,eax
  406c17:	in     eax,dx
  406c18:	ja     0x406c52
  406c1a:	mov    al,0x22
  406c1c:	or     ah,BYTE PTR [ebx+0x739f6d7d]
  406c22:	rcr    BYTE PTR [esi],0xf8
  406c25:	mov    ss,WORD PTR [ebx-0x58a0b505]
  406c2b:	fs in  al,dx
  406c2d:	xor    DWORD PTR [ecx+eax*8-0x33],esi
  406c31:	(bad)  
  406c32:	jecxz  0x406bdc
  406c34:	inc    esi
  406c35:	push   es
  406c36:	bound  eax,QWORD PTR [esi+ecx*1+0x12055c48]
  406c3d:	jmp    0x6774dffe
  406c42:	mov    bh,0xc8
  406c44:	mov    ecx,0xbf920dfa
  406c49:	push   eax
  406c4a:	dec    edi
  406c4b:	repnz ins DWORD PTR es:[edi],dx
  406c4d:	js     0x406c6c
  406c4f:	cli    
  406c50:	push   ebp
  406c51:	cmc    
  406c52:	shr    BYTE PTR ds:0xda7cabde,0xeb
  406c59:	(bad)  
  406c5a:	out    dx,al
  406c5b:	xchg   BYTE PTR [ebp+0x3d64562a],al
  406c61:	ss push ebx
  406c63:	icebp  
  406c64:	scas   eax,DWORD PTR es:[edi]
  406c65:	mov    al,dh
  406c67:	fidivr DWORD PTR [edi+0x36fe5a17]
  406c6d:	jbe    0x406c50
  406c6f:	iret   
  406c70:	call   0xf5a8:0xedf53f1
  406c77:	sbb    esi,DWORD PTR [ecx]
  406c79:	in     al,dx
  406c7a:	imul   esp,ebx,0x63c19ec8
  406c80:	inc    esp
  406c81:	dec    DWORD PTR [edx]
  406c83:	repnz retf 0x558a
  406c87:	mov    ebp,0x769d01cf
  406c8c:	fistp  WORD PTR [eax+ebp*4]
  406c8f:	pop    ds
  406c90:	mov    ecx,0x5c5d332c
  406c95:	pminub mm0,QWORD PTR [edx+0xe9648a0]
  406c9c:	push   eax
  406c9d:	inc    esi
  406c9e:	in     eax,0xa0
  406ca0:	jl     0x406c4d
  406ca2:	js     0x406cb5
  406ca4:	sub    eax,0x3c367f2
  406ca9:	rcr    DWORD PTR [ecx-0x66686464],cl
  406caf:	mov    BYTE PTR [esi-0x4d],cl
  406cb2:	out    0xe8,al
  406cb4:	test   eax,0x6c3d2cad
  406cb9:	outs   dx,DWORD PTR ds:[esi]
  406cba:	sub    BYTE PTR [esi],dh
  406cbc:	inc    edi
  406cbd:	sbb    DWORD PTR [ebp+0x299882df],ebp
  406cc3:	sub    al,0xb8
  406cc5:	scas   al,BYTE PTR es:[edi]
  406cc6:	xlat   BYTE PTR ds:[ebx]
  406cc7:	mov    ebx,0xb36985c2
  406ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ccd:	jnp    0x406c71
  406ccf:	retf   
  406cd0:	out    0xef,al
  406cd2:	stos   DWORD PTR es:[edi],eax
  406cd3:	inc    ecx
  406cd4:	lds    esi,FWORD PTR [esi-0x3267adbf]
  406cda:	xchg   edi,eax
  406cdb:	pop    ds
  406cdc:	or     ah,BYTE PTR [eax+edx*2+0x41]
  406ce0:	sbb    cl,bl
  406ce2:	sub    BYTE PTR [ebp+0x22],al
  406ce5:	xlat   BYTE PTR ds:[ebx]
  406ce6:	jae    0x406d39
  406ce8:	sub    ecx,DWORD PTR [esi-0x4c929584]
  406cee:	hlt    
  406cef:	xor    DWORD PTR ds:0xe8db81c,ecx
  406cf5:	mov    ah,0xc0
  406cf7:	adc    eax,0xae45a7fc
  406cfc:	test   DWORD PTR [ecx],ecx
  406cfe:	sub    eax,0xd321ee95
  406d03:	sti    
  406d04:	neg    DWORD PTR [edi]
  406d06:	xor    ah,0x28
  406d09:	pop    ds
  406d0a:	or     BYTE PTR [edi+0x13],cl
  406d0d:	iret   
  406d0e:	sub    ebx,DWORD PTR [eax]
  406d10:	fimul  DWORD PTR [edi+0x54]
  406d13:	adc    ecx,DWORD PTR [ebp+edx*2+0x3e63b761]
  406d1a:	xchg   edi,eax
  406d1b:	dec    edx
  406d1c:	fistp  QWORD PTR ds:0x57230572
  406d22:	pop    ds
  406d23:	push   edx
  406d24:	mov    eax,ds:0xa135542
  406d29:	in     eax,dx
  406d2a:	cs in  al,dx
  406d2c:	or     edi,DWORD PTR [edx+0x65977adf]
  406d32:	sub    DWORD PTR [edx],ebp
  406d34:	sbb    BYTE PTR [ebp-0x5b],cl
  406d37:	cwde   
  406d38:	jle    0x406d75
  406d3a:	adc    DWORD PTR [ecx],esi
  406d3c:	pop    ss
  406d3d:	mov    edx,0x900eb35e
  406d42:	mov    bl,0x26
  406d44:	neg    ah
  406d46:	cwde   
  406d47:	mov    bh,0xb3
  406d49:	pushf  
  406d4a:	mov    esi,0x66072663
  406d4f:	fisub  DWORD PTR [eax]
  406d51:	push   ebp
  406d52:	iret   
  406d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d54:	test   eax,0x558a23ce
  406d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d5a:	mov    ch,0x14
  406d5c:	jnp    0x406d31
  406d5e:	std    
  406d5f:	mov    ah,0x8d
  406d61:	mov    al,ds:0x1888d5c3
  406d66:	mov    al,0xff
  406d68:	sti    
  406d69:	mov    esp,0x63ec486d
  406d6e:	fsubrp st(1),st
  406d70:	imul   edx,DWORD PTR [ebp+0xa],0x8667a08d
  406d77:	sar    BYTE PTR [eax+edi*8],cl
  406d7a:	push   cs
  406d7b:	dec    edi
  406d7c:	mov    WORD PTR [ebp-0x5ba94634],ss
  406d82:	mov    eax,0x8dd3f8eb
  406d87:	jmp    0x6c87945f
  406d8c:	jmp    0xbeb3:0x453b07fc
  406d93:	xor    eax,0xfb6c0eee
  406d98:	push   ss
  406d99:	cmp    ebp,DWORD PTR [edi]
  406d9b:	mov    edi,0xcead6829
  406da0:	xor    dh,BYTE PTR [edi+0x66]
  406da3:	xlat   BYTE PTR ds:[ebx]
  406da4:	arpl   WORD PTR [edx-0x4b0bec2],bx
  406daa:	mov    esp,0x4ab0156
  406daf:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  406db1:	sub    al,0x9a
  406db3:	jb     0x406d86
  406db5:	inc    edx
  406db6:	sbb    cl,BYTE PTR [edx]
  406db8:	mov    DWORD PTR [ecx],0x6980f394
  406dbe:	inc    BYTE PTR [esi-0x15f38924]
  406dc4:	add    dl,ah
  406dc6:	(bad)  
  406dc7:	mov    ebx,0xb3e664cc
  406dcc:	or     BYTE PTR [edi],cl
  406dce:	imul   ebx,esi,0x270a2428
  406dd4:	push   ebx
  406dd5:	sub    eax,DWORD PTR [edx+ebx*8]
  406dd8:	cli    
  406dd9:	mov    esp,0xe056dd6c
  406dde:	sbb    eax,0x3bfe9b7
  406de3:	js     0x406dfb
  406de5:	aad    0x7f
  406de7:	push   esp
  406de8:	sub    esi,DWORD PTR [eax-0x22b9b9a0]
  406dee:	cmovne edx,DWORD PTR [eax+0x3104973]
  406df5:	dec    edi
  406df6:	mov    esi,0x28b77a0c
  406dfb:	push   esi
  406dfc:	add    dh,BYTE PTR [edi-0x7b6472f7]
  406e02:	fldcw  WORD PTR [eax]
  406e04:	or     BYTE PTR [esi+0x71],0xbc
  406e08:	in     eax,dx
  406e09:	ret    0x94ac
  406e0c:	mov    bh,BYTE PTR [edx+ebx*1+0x7e]
  406e10:	outs   dx,DWORD PTR ds:[esi]
  406e11:	fist   WORD PTR [eax]
  406e13:	mov    ds:0xf8bb3f76,eax
  406e18:	scas   al,BYTE PTR es:[edi]
  406e19:	into   
  406e1a:	or     ecx,esi
  406e1c:	int    0xab
  406e1e:	out    0x5b,al
  406e20:	add    al,BYTE PTR [esi+0x17]
  406e23:	xchg   ebx,eax
  406e24:	(bad)  
  406e25:	leave  
  406e26:	outs   dx,DWORD PTR ds:[esi]
  406e27:	outs   dx,DWORD PTR ds:[esi]
  406e28:	mov    esp,0x6e0397cd
  406e2d:	repnz enter 0x99c2,0x1f
  406e32:	xchg   ebp,eax
  406e33:	or     bl,bl
  406e35:	pop    eax
  406e36:	xchg   DWORD PTR [ebx],edi
  406e38:	sub    bh,0x5c
  406e3b:	fcmovbe st,st(0)
  406e3d:	or     BYTE PTR [esi+0x48e2a203],ch
  406e43:	sub    BYTE PTR [ebx+0x1073766c],bh
  406e49:	push   ebp
  406e4a:	ret    0xf7a7
  406e4d:	pop    ebp
  406e4e:	enter  0xf81e,0x32
  406e52:	mov    BYTE PTR [ebp+0x8],bl
  406e55:	cs loop 0x406ddb
  406e58:	cmp    BYTE PTR [eax],al
  406e5a:	sbb    al,0x2a
  406e5c:	mov    esi,0x1f8dc24d
  406e61:	pop    ds
  406e62:	dec    ebx
  406e63:	mov    esi,0x583d3991
  406e68:	pop    edi
  406e69:	cld    
  406e6a:	mov    eax,0x9ff3f5c8
  406e6f:	and    BYTE PTR [ebx-0x2e949e52],al
  406e75:	push   0x2c2d2b0e
  406e7a:	mov    ebx,0xb97f3bbf
  406e7f:	and    al,0x27
  406e81:	inc    ecx
  406e82:	into   
  406e83:	ja     0x406e7e
  406e85:	mov    esi,0x8e2256f2
  406e8a:	loopne 0x406e71
  406e8c:	push   ss
  406e8d:	jecxz  0x406e20
  406e8f:	inc    edx
  406e90:	mov    eax,0x69715a85
  406e95:	or     ebx,edi
  406e97:	mov    eax,ds:0x47ddb959
  406e9c:	lahf   
  406e9d:	les    edi,FWORD PTR [esi+0x6852bfbb]
  406ea3:	imul   ebp,DWORD PTR [ecx-0x2d],0x279c6fb
  406eaa:	jne    0x406edf
  406eac:	mov    eax,0x51aab25e
  406eb1:	mov    cl,dh
  406eb3:	and    eax,edi
  406eb5:	repnz icebp 
  406eb7:	mov    edi,eax
  406eb9:	pop    eax
  406eba:	mov    dh,0x56
  406ebc:	ror    DWORD PTR [ebp+0x28b3e4b2],cl
  406ec2:	pop    ebp
  406ec3:	push   edi
  406ec4:	ins    DWORD PTR es:[edi],dx
  406ec5:	repz jmp 0x59502197
  406ecb:	cld    
  406ecc:	nop
  406ecd:	out    dx,al
  406ece:	dec    ebx
  406ecf:	push   ecx
  406ed0:	jg     0x406f47
  406ed2:	stc    
  406ed3:	int    0x3d
  406ed5:	scas   eax,DWORD PTR es:[edi]
  406ed6:	inc    ecx
  406ed7:	aad    0xde
  406ed9:	sub    al,0x74
  406edb:	imul   edx,DWORD PTR [edx-0x116c552a],0xe446e2e5
  406ee5:	adc    DWORD PTR [esi-0x4e],esp
  406ee8:	fsub   DWORD PTR [ebp-0x7]
  406eeb:	loop   0x406ed8
  406eed:	fisub  DWORD PTR [ecx+0x63]
  406ef0:	call   0x902a35f1
  406ef5:	jle    0x406e87
  406ef7:	inc    ecx
  406ef8:	sbb    eax,DWORD PTR [esi+0x3f]
  406efb:	xchg   BYTE PTR [ebx+ebp*4-0x48],bh
  406eff:	xor    ecx,DWORD PTR [ebx]
  406f01:	pop    ebp
  406f02:	shl    BYTE PTR [eax],0x2
  406f05:	cld    
  406f06:	pop    ss
  406f07:	(bad)  
  406f08:	sti    
  406f09:	jle    0x406eb5
  406f0b:	bound  esi,QWORD PTR [edi]
  406f0d:	jns    0x406f43
  406f0f:	scas   al,BYTE PTR es:[edi]
  406f10:	cdq    
  406f11:	fwait
  406f12:	push   esi
  406f13:	fild   WORD PTR [esi]
  406f15:	rcr    DWORD PTR [ecx],1
  406f17:	les    ebp,FWORD PTR [edx]
  406f19:	add    bl,ch
  406f1b:	xor    bl,ch
  406f1d:	(bad)  
  406f1e:	adc    eax,0x23b921a7
  406f23:	nop
  406f24:	xchg   DWORD PTR [eax+0x1c],eax
  406f27:	jb     0x406ebd
  406f29:	mov    ch,0x16
  406f2b:	ss inc edi
  406f2d:	or     eax,0x3aa4765c
  406f32:	outs   dx,BYTE PTR ds:[esi]
  406f33:	ret    0xbb7e
  406f36:	fwait
  406f37:	(bad)
  406f3a:	dec    ecx
  406f3b:	pop    ss
  406f3c:	mov    ecx,DWORD PTR cs:[ebp+0xbfbc5dc]
  406f43:	pusha  
  406f44:	pop    edx
  406f45:	pop    ss
  406f46:	cmp    eax,0x67128b28
  406f4b:	adc    ebx,DWORD PTR [eax]
  406f4d:	inc    ebx
  406f4e:	inc    esi
  406f4f:	mov    ds:0x3b14767d,al
  406f54:	xchg   edx,eax
  406f55:	cmc    
  406f56:	adc    DWORD PTR [ebx+0x3e],ebp
  406f59:	leave  
  406f5a:	xchg   edx,eax
  406f5b:	mov    al,ds:0xf4cde750
  406f60:	mov    eax,0x6883f390
  406f65:	mov    eax,ds:0x885965f1
  406f6a:	adc    ah,BYTE PTR [esi-0x25]
  406f6d:	sahf   
  406f6e:	and    al,BYTE PTR [esi]
  406f70:	xor    BYTE PTR [eax+0x54234007],bl
  406f76:	jg     0x406fa1
  406f78:	in     eax,0xf9
  406f7a:	pop    esi
  406f7b:	push   ebp
  406f7c:	dec    esp
  406f7d:	dec    esp
  406f7e:	cs and eax,0x35b66886
  406f84:	inc    edx
  406f85:	(bad)  
  406f86:	lods   eax,DWORD PTR ds:[esi]
  406f87:	mov    ecx,0x33212a81
  406f8c:	xchg   ecx,eax
  406f8d:	xchg   edx,eax
  406f8e:	lods   al,BYTE PTR ds:[esi]
  406f8f:	jle    0x406f26
  406f91:	and    edi,DWORD PTR [ecx-0x69b8c095]
  406f97:	sbb    cl,dh
  406f99:	(bad)  
  406f9a:	jnp    0x406fea
  406f9c:	xlat   BYTE PTR ds:[ebx]
  406f9d:	les    edx,FWORD PTR [ebx+ebx*2+0x3a]
  406fa1:	scas   al,BYTE PTR es:[edi]
  406fa2:	pop    ecx
  406fa3:	push   edx
  406fa4:	aaa    
  406fa5:	pushf  
  406fa6:	std    
  406fa7:	cmp    bh,BYTE PTR [edi+0x7089d1f4]
  406fad:	retf   
  406fae:	addr16 push 0xdcf1a996
  406fb4:	pop    esi
  406fb5:	mov    eax,ds:0x671e6dd9
  406fba:	shl    DWORD PTR [edi+0x3373aec8],0xdd
  406fc1:	cmp    eax,0x2b28b166
  406fc6:	ret    0xdc1a
  406fc9:	not    BYTE PTR [edi+0x4f]
  406fcc:	push   edi
  406fcd:	sar    BYTE PTR ds:0x36456705,0x66
  406fd4:	leave  
  406fd5:	shl    BYTE PTR [edi+0x614f710],0xbe
  406fdc:	push   ecx
  406fde:	jbe    0x406ff4
  406fe0:	cmp    al,0x85
  406fe2:	mov    bl,0xb0
  406fe4:	ret    0xa2ce
  406fe7:	sbb    al,0xce
  406fe9:	out    dx,al
  406fea:	xor    al,0x6c
  406fec:	out    0xc2,al
  406fee:	sbb    BYTE PTR [eax-0x3d],ch
  406ff1:	push   eax
  406ff2:	leave  
  406ff3:	jne    0x406ff7
  406ff5:	aaa    
  406ff6:	fwait
  406ff7:	out    0xa0,eax
  406ff9:	cmp    al,0x75
  406ffb:	dec    edi
  406ffc:	aas    
  406ffd:	xchg   ecx,eax
  406ffe:	or     al,0x7b
  407000:	and    ebp,DWORD PTR [edx-0x69]
  407003:	mov    al,ds:0x32cc8c25
  407008:	mov    ecx,0x72c423d8
  40700d:	push   0x55
  40700f:	mov    bl,0x30
  407011:	mov    bl,0x56
  407013:	lods   eax,DWORD PTR ds:[esi]
  407014:	sub    ch,al
  407016:	jne    0x40703d
  407018:	out    0xa5,eax
  40701a:	jmp    0x130f1091
  40701f:	jecxz  0x40704c
  407021:	xor    al,0x88
  407023:	jl     0x407056
  407025:	add    BYTE PTR [ecx],al
  407027:	pop    es
  407028:	push   ds
  407029:	clc    
  40702a:	jmp    0x98a9:0x9a7af3a0
  407031:	dec    esp
  407032:	push   ds
  407033:	int3   
  407034:	jp     0x407008
  407036:	sub    DWORD PTR [ecx+0x23],esi
  407039:	xchg   edx,ebp
  40703b:	pop    edx
  40703c:	pop    ecx
  40703d:	fld    TBYTE PTR [edx-0x6a4903a9]
  407043:	cmc    
  407044:	test   BYTE PTR [ebx+0x28],dh
  407047:	add    DWORD PTR [ebx+ebp*1],ebp
  40704a:	pop    esp
  40704b:	inc    edx
  40704c:	aam    0xaf
  40704e:	mov    ch,0x2a
  407050:	fist   WORD PTR [esi]
  407052:	xor    al,BYTE PTR [ebp+0x4a]
  407055:	js     0x4070cf
  407057:	jbe    0x407070
  407059:	scas   al,BYTE PTR es:[edi]
  40705a:	adc    edi,DWORD PTR [ecx-0x6]
  40705d:	fiadd  WORD PTR [ebp-0x61]
  407060:	and    al,0x42
  407062:	mov    cl,0x1f
  407064:	pop    esi
  407065:	scas   eax,DWORD PTR es:[edi]
  407066:	loop   0x40708b
  407068:	and    ebp,ebx
  40706a:	add    eax,0x4e61be65
  40706f:	ins    BYTE PTR es:[edi],dx
  407070:	ret    
  407071:	mov    dl,0x2f
  407073:	sar    ebx,cl
  407075:	int    0xb2
  407077:	aad    0x14
  407079:	out    0xf4,eax
  40707b:	mov    dh,0x5f
  40707d:	ss push esi
  40707f:	in     eax,dx
  407080:	divps  xmm1,XMMWORD PTR [edi]
  407083:	sbb    eax,0xc6c9458
  407088:	mov    edi,0x5a80376e
  40708d:	scas   eax,DWORD PTR es:[edi]
  40708e:	xor    BYTE PTR [ecx+0x53d16303],ah
  407094:	fst    DWORD PTR [eax+0x33]
  407097:	mov    cl,0xad
  407099:	ror    bh,cl
  40709b:	pushf  
  40709c:	or     eax,0xf44b8739
  4070a1:	in     al,dx
  4070a2:	pop    ds
  4070a3:	xor    edi,ecx
  4070a5:	lock mov dh,BYTE PTR [ebx]
  4070a8:	xor    bh,BYTE PTR [esi-0x43]
  4070ab:	out    0x5c,eax
  4070ad:	and    DWORD PTR [ebx+0x5f067cb2],esp
  4070b3:	mov    bl,dl
  4070b5:	push   esp
  4070b6:	(bad)  
  4070b7:	jmp    0x407124
  4070b9:	pop    es
  4070ba:	mov    al,0x63
  4070bc:	push   ebx
  4070bd:	jmp    0xc57dff1f
  4070c2:	cmc    
  4070c3:	hlt    
  4070c4:	add    DWORD PTR [eax],ebp
  4070c6:	push   0x5d3a0859
  4070cb:	push   ss
  4070cc:	lods   eax,DWORD PTR ds:[esi]
  4070cd:	fdivr  DWORD PTR [esi]
  4070cf:	ins    BYTE PTR es:[edi],dx
  4070d0:	call   0x7fd0:0xb8936cbd
  4070d7:	mov    dl,0x26
  4070d9:	fs repz push esi
  4070dc:	dec    ebx
  4070dd:	dec    edi
  4070de:	cmp    BYTE PTR [esi-0x174214ba],dh
  4070e4:	xor    DWORD PTR [esi+0x62ea877a],edx
  4070ea:	pop    ecx
  4070eb:	mov    bh,0x14
  4070ed:	gs jnp 0x40709d
  4070f0:	xchg   ebx,eax
  4070f1:	mov    edx,0x6288aca0
  4070f6:	inc    edx
  4070f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070f8:	push   es
  4070f9:	push   eax
  4070fa:	sub    eax,0xcca71d8c
  4070ff:	xor    bl,BYTE PTR ds:0x1af9efd7
  407105:	pop    edx
  407106:	push   0x7df95677
  40710b:	(bad)  
  40710c:	xchg   esi,eax
  40710d:	inc    edi
  40710e:	xchg   edx,eax
  40710f:	cmp    cl,0xb
  407112:	and    eax,0x7c568a32
  407117:	adc    eax,0x46cbdf4
  40711c:	jb     0x40716c
  40711e:	(bad)  
  40711f:	jmp    0xe574:0x37e6d85c
  407126:	sbb    al,0xa5
  407128:	gs xchg dh,dl
  40712b:	pop    ds
  40712c:	and    ebp,0x29d9b401
  407132:	inc    edi
  407133:	fnsave [eax]
  407135:	pusha  
  407136:	cli    
  407137:	xor    eax,0x27b35374
  40713c:	cs xchg ecx,eax
  40713e:	jecxz  0x4071b5
  407140:	(bad)  [ecx+0x21]
  407143:	mov    ?,WORD PTR [edi+0x41]
  407146:	out    0x16,al
  407148:	jae    0x4071b4
  40714a:	aaa    
  40714b:	aas    
  40714c:	sbb    eax,0x96426a97
  407151:	in     eax,0xc9
  407153:	mov    WORD PTR [eax-0x50397b8c],gs
  407159:	add    BYTE PTR [ebp-0x7a2afc87],cl
  40715f:	ret    0x7606
  407162:	or     DWORD PTR [edi],esi
  407164:	or     DWORD PTR [edi],0xe0be751e
  40716a:	add    ch,al
  40716c:	aam    0xdc
  40716e:	xchg   ebx,eax
  40716f:	mov    gs,WORD PTR [esi]
  407171:	fstp   DWORD PTR [eax+0x56]
  407174:	aad    0xec
  407176:	add    al,0xb0
  407178:	je     0x4071ba
  40717a:	inc    esp
  40717b:	dec    ebp
  40717c:	js     0x407134
  40717e:	mov    ecx,0x5c1ab1c5
  407183:	aaa    
  407184:	jp     0x407142
  407186:	mov    bl,0x2c
  407188:	push   eax
  407189:	sbb    eax,0x4aa6375d
  40718e:	sbb    esi,DWORD PTR [ebx]
  407190:	push   es
  407191:	xchg   esi,eax
  407192:	mov    eax,0x8f38d965
  407197:	arpl   WORD PTR [esi],bp
  407199:	rcl    DWORD PTR [edx],0x4
  40719c:	jge    0x407134
  40719e:	int3   
  40719f:	adc    bl,bh
  4071a1:	outs   dx,BYTE PTR ds:[esi]
  4071a2:	into   
  4071a3:	outs   dx,DWORD PTR ds:[esi]
  4071a4:	jl     0x407208
  4071a6:	test   eax,0x3afda2e6
  4071ab:	cmp    al,0xc1
  4071ad:	test   eax,0xf2bb08b4
  4071b2:	inc    ecx
  4071b3:	or     ch,BYTE PTR [esi+0x45]
  4071b6:	loopne 0x40717e
  4071b8:	loopne 0x4071cc
  4071ba:	push   esi
  4071bb:	inc    esi
  4071bc:	fmul   QWORD PTR [ebx+0x3958559c]
  4071c2:	jns    0x4071fe
  4071c4:	push   0xffffffad
  4071c6:	rcl    BYTE PTR [esi-0x2f],cl
  4071c9:	ins    DWORD PTR es:[edi],dx
  4071ca:	fild   QWORD PTR ds:0x307e1fea
  4071d0:	nop
  4071d1:	add    dh,BYTE PTR [bx+si+0x1b]
  4071d5:	in     eax,dx
  4071d6:	outs   dx,DWORD PTR ds:[esi]
  4071d7:	mov    esi,DWORD PTR [ecx-0x7e]
  4071da:	rol    ch,1
  4071dc:	add    BYTE PTR [edx-0x2e],cl
  4071df:	cli    
  4071e0:	and    DWORD PTR [bx+si-0x32b4],ecx
  4071e5:	or     BYTE PTR [eax+0x6c],dh
  4071e8:	sub    ah,BYTE PTR [ecx+eiz*1-0x9]
  4071ec:	push   ds
  4071ed:	inc    esp
  4071ee:	sahf   
  4071ef:	mov    ds:0x34b810f7,al
  4071f4:	dec    eax
  4071f5:	mov    edi,ebp
  4071f7:	je     0x407243
  4071f9:	leave  
  4071fa:	(bad)  
  4071fb:	cmc    
  4071fc:	adc    al,BYTE PTR [eax-0x56ae4508]
  407202:	cmp    BYTE PTR [esi+0x70],al
  407205:	call   0xa15d:0x458077c8
  40720c:	inc    bh
  40720e:	mov    ah,0x98
  407210:	push   edx
  407211:	xchg   ebp,eax
  407212:	mov    bl,0x42
  407214:	ds loope 0x40721c
  407217:	and    DWORD PTR ds:0x1c7a1141,ebx
  40721d:	mov    DWORD PTR [ecx+0x784b335c],edx
  407223:	shl    DWORD PTR [edx],cl
  407225:	stos   DWORD PTR es:[edi],eax
  407226:	jle    0x4071e3
  407228:	out    dx,eax
  407229:	sub    DWORD PTR [edx-0x6351fd7f],ebp
  40722f:	cmp    al,0x44
  407231:	fcmovnb st,st(0)
  407233:	push   0x90cdc31
  407238:	in     al,dx
  407239:	xchg   esi,eax
  40723a:	jmp    0x17ae92ba
  40723f:	sbb    cl,BYTE PTR [edx+0x79e3887b]
  407245:	int    0xde
  407247:	(bad)  
  407248:	jmp    0xec50:0xdcc796ec
  40724f:	xchg   esi,eax
  407250:	daa    
  407251:	neg    BYTE PTR [eax]
  407253:	cwde   
  407254:	xor    esi,DWORD PTR [eax+0xb]
  407257:	maskmovq mm7,(bad)
  407258:	idiv   DWORD PTR [ebp+0x4]
  40725b:	pop    ebx
  40725c:	sbb    dh,BYTE PTR [edx+0x2b]
  40725f:	mov    al,0x0
  407261:	jo     0x4071e4
  407263:	scas   eax,DWORD PTR es:[edi]
  407264:	and    eax,0x82e4da1f
  407269:	xchg   BYTE PTR [esi-0x3fb78fed],ah
  40726f:	scas   eax,DWORD PTR es:[edi]
  407270:	adc    ch,BYTE PTR [esp+edi*4-0x74]
  407274:	sub    DWORD PTR [esi],ebx
  407276:	sbb    al,0xd5
  407278:	clc    
  407279:	(bad)  
  40727a:	sar    DWORD PTR [edi-0x60],1
  40727d:	call   0xa1dfd519
  407282:	mov    edi,0xad57a0a
  407287:	xchg   ebx,eax
  407288:	xlat   BYTE PTR ds:[ebx]
  407289:	mov    ch,0x76
  40728b:	jbe    0x407229
  40728d:	cmp    al,0xdd
  40728f:	jb     0x4072e3
  407291:	out    dx,al
  407292:	gs adc eax,0x7ca1d50f
  407298:	scas   eax,DWORD PTR es:[edi]
  407299:	in     eax,dx
  40729a:	mov    ebp,0xe680694
  40729f:	pop    esi
  4072a0:	retf   
  4072a1:	push   es
  4072a2:	js     0x40723e
  4072a4:	fistp  WORD PTR [edi]
  4072a6:	adc    dl,BYTE PTR [ebx+0x61]
  4072a9:	pop    edi
  4072aa:	(bad)  
  4072ab:	pop    edi
  4072ac:	cmp    ecx,DWORD PTR [ecx-0x1]
  4072af:	mov    bh,0x5
  4072b1:	adc    ebp,esi
  4072b3:	or     al,0xff
  4072b5:	sbb    DWORD PTR [esi+0x7e],edx
  4072b8:	mov    esi,0x79654131
  4072bd:	retf   
  4072be:	inc    edx
  4072bf:	xchg   esi,eax
  4072c0:	ins    DWORD PTR es:[edi],dx
  4072c1:	or     ebx,DWORD PTR [edi]
  4072c3:	cmp    eax,DWORD PTR [edx-0x6a0ba37]
  4072c9:	or     edx,DWORD PTR [ebx+0xc8547f5]
  4072cf:	cmc    
  4072d0:	aas    
  4072d1:	hlt    
  4072d2:	fistp  WORD PTR [edx+0x37adbedf]
  4072d8:	aaa    
  4072d9:	mov    al,ds:0xbc84f38a
  4072de:	in     al,0x32
  4072e0:	jo     0x407342
  4072e2:	sbb    DWORD PTR [ebp+0x57],ebp
  4072e5:	scas   eax,DWORD PTR es:[edi]
  4072e6:	jns    0x407365
  4072e8:	mov    ss,edx
  4072ea:	adc    al,0x44
  4072ec:	cmp    cl,dh
  4072ee:	aam    0x8e
  4072f0:	xor    DWORD PTR [edx+0x5b4a306d],0xfffffff9
  4072f7:	ret    0x7110
  4072fa:	mov    ecx,0x37debf09
  4072ff:	inc    esi
  407300:	arpl   sp,sp
  407302:	rcl    BYTE PTR [ebx+ebx*1],1
  407305:	ret    0x564d
  407308:	lahf   
  407309:	pop    edx
  40730a:	rol    BYTE PTR [edx+0xe],cl
  40730d:	mov    edx,0xeb8643f1
  407312:	lods   al,BYTE PTR ds:[esi]
  407313:	repz sti 
  407315:	xor    ch,al
  407317:	xor    esp,ecx
  407319:	push   esp
  40731a:	scas   al,BYTE PTR es:[edi]
  40731b:	scas   al,BYTE PTR es:[edi]
  40731c:	std    
  40731d:	xchg   esp,eax
  40731e:	mov    bh,0x55
  407320:	hlt    
  407321:	push   0x10
  407323:	push   es
  407324:	mov    eax,0xb65a99bf
  407329:	mov    edi,0x4dd76463
  40732e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40732f:	sahf   
  407330:	dec    eax
  407331:	sub    DWORD PTR [edi+0x6f77c0b2],esi
  407337:	js     0x4072cb
  407339:	(bad)  
  40733b:	int3   
  40733c:	loop   0x4073b8
  40733e:	mov    bl,0x7f
  407340:	dec    ebx
  407341:	pushf  
  407342:	add    DWORD PTR [ebp-0x538beab7],ebx
  407348:	inc    esi
  407349:	in     eax,0x98
  40734b:	inc    esi
  40734c:	jle    0x4072ea
  40734e:	push   ds
  40734f:	mov    ?,WORD PTR [edx+0x9]
  407352:	aam    0xfa
  407354:	sbb    edx,DWORD PTR ds:0xf7a0f1a9
  40735a:	imul   ecx,DWORD PTR ds:0xaba1f8a3,0xd61889dd
  407364:	jnp    0x4072fb
  407366:	xchg   ecx,eax
  407367:	ins    DWORD PTR es:[edi],dx
  407368:	xchg   ecx,eax
  407369:	sbb    al,0xb9
  40736b:	mov    esi,0xe01f1552
  407370:	mov    bl,0xb7
  407372:	fadd   DWORD PTR [edi-0x73ba9fa2]
  407378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407379:	jae    0x407354
  40737b:	test   DWORD PTR [ebp-0x295941d],ebp
  407381:	into   
  407382:	mov    DWORD PTR [ebp+0x3c],ebp
  407385:	mov    fs,edx
  407387:	add    DWORD PTR [edi+0x19de6665],esi
  40738d:	clc    
  40738e:	stos   BYTE PTR es:[edi],al
  40738f:	sub    BYTE PTR [edi+0x78],bh
  407392:	out    dx,al
  407393:	mov    dh,0x23
  407395:	mov    al,0xc4
  407397:	mov    bh,0x4b
  407399:	call   0x895bd070
  40739e:	aam    0x4a
  4073a0:	sahf   
  4073a1:	cld    
  4073a2:	out    dx,al
  4073a3:	rcl    esp,1
  4073a5:	xchg   esp,eax
  4073a6:	les    edi,FWORD PTR [bp+di+0x4212]
  4073ab:	gs dec eax
  4073ad:	hlt    
  4073ae:	xchg   esi,eax
  4073af:	shl    DWORD PTR [ecx-0x5b],cl
  4073b2:	scas   al,BYTE PTR es:[edi]
  4073b3:	pop    esp
  4073b4:	inc    esi
  4073b5:	xor    ecx,eax
  4073b7:	ja     0x407396
  4073b9:	shl    DWORD PTR cs:[ecx+ebx*8-0x66],0xf1
  4073bf:	loop   0x407369
  4073c1:	addr16 sbb eax,0xb1b1090d
  4073c7:	add    al,0xf
  4073c9:	and    bl,BYTE PTR [ebx-0x1d1eb742]
  4073cf:	ss stos DWORD PTR es:[edi],eax
  4073d1:	das    
  4073d2:	add    dh,BYTE PTR [ecx+0x41e7bca2]
  4073d8:	jg     0x40739f
  4073da:	test   BYTE PTR [ebp+0x38bcd201],bl
  4073e0:	ss mov dh,0x62
  4073e3:	fnstenv [edi]
  4073e5:	loope  0x4073b5
  4073e7:	dec    eax
  4073e8:	enter  0x3481,0x53
  4073ec:	mov    ecx,0x1e0aa685
  4073f1:	and    al,0xc9
  4073f3:	xor    bl,bl
  4073f5:	ja     0x407443
  4073f7:	mov    bl,0xe9
  4073f9:	add    edx,0x1fa448c4
  4073ff:	jbe    0x407437
  407401:	push   ebx
  407402:	mov    ebp,0x2dc0b8fb
  407407:	sbb    eax,0x71a205e0
  40740c:	sahf   
  40740d:	sub    al,0x5c
  40740f:	or     dh,BYTE PTR [eax-0x64]
  407412:	loope  0x407464
  407414:	mov    dl,0xaa
  407416:	dec    edx
  407417:	and    DWORD PTR ds:0x412670c0,0xfffffffd
  40741e:	ficom  WORD PTR [eax]
  407420:	add    BYTE PTR [ebx-0x49],cl
  407423:	and    edi,DWORD PTR [esp+edi*8+0xc]
  407427:	mov    al,0x99
  407429:	cmp    BYTE PTR [esi*1-0x57508a23],0x59
  407431:	stc    
  407432:	xor    DWORD PTR ds:0xf40fcc3b,esi
  407438:	or     bh,bl
  40743a:	push   ss
  40743b:	ins    BYTE PTR es:[edi],dx
  40743c:	pop    edx
  40743d:	xchg   ebp,eax
  40743e:	or     DWORD PTR [ebp+0x5429261],ebp
  407444:	xor    DWORD PTR [edi+0x51],0x16
  407448:	mov    ch,0x36
  40744a:	dec    ebx
  40744b:	arpl   WORD PTR [ebp+0x27478600],bp
  407451:	cmp    dl,0xa2
  407454:	cs pop edx
  407456:	mov    cl,0x3a
  407458:	add    al,0x1
  40745a:	dec    esp
  40745b:	pop    esi
  40745c:	call   0xf117a847
  407461:	mov    edi,0x7f5c2387
  407466:	je     0x4074be
  407468:	pop    ebp
  407469:	fsubr  DWORD PTR [ebx]
  40746b:	test   eax,0xe4ac00b9
  407470:	and    bl,BYTE PTR [edi]
  407472:	enter  0x418c,0x7f
  407476:	pop    ecx
  407477:	add    BYTE PTR [ebx-0x2b6d22ff],bh
  40747d:	pop    edi
  40747e:	sub    cl,dl
  407480:	std    
  407481:	icebp  
  407482:	outs   dx,DWORD PTR ds:[esi]
  407483:	jno    0x40740f
  407485:	cmp    DWORD PTR [eax-0x1d39ca03],edx
  40748b:	stos   DWORD PTR es:[edi],eax
  40748c:	xchg   ebp,eax
  40748d:	loopne 0x407459
  40748f:	cmp    BYTE PTR [esi],bl
  407491:	xor    al,0x2c
  407493:	jl     0x4074f2
  407495:	jmp    0xe4003bf2
  40749a:	adc    DWORD PTR [edx-0x79fa4f4d],edi
  4074a0:	pop    es
  4074a1:	in     al,dx
  4074a2:	fbstp  TBYTE PTR [edx]
  4074a4:	jge    0x40742c
  4074a6:	int3   
  4074a7:	out    dx,al
  4074a8:	push   cs
  4074a9:	leave  
  4074aa:	lods   eax,DWORD PTR ds:[esi]
  4074ab:	inc    edi
  4074ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ad:	js     0x4074d4
  4074af:	cs scas eax,DWORD PTR es:[edi]
  4074b1:	je     0x4074a2
  4074b3:	inc    edi
  4074b4:	ret    0x4283
  4074b7:	pusha  
  4074b8:	nop
  4074b9:	inc    ebp
  4074ba:	data16 aam 0x66
  4074bd:	cmp    al,0xbd
  4074bf:	cmp    bh,bl
  4074c1:	outs   dx,BYTE PTR ds:[esi]
  4074c2:	lea    ebx,[eax]
  4074c4:	sbb    DWORD PTR [edi+0x41],edx
  4074c7:	shl    BYTE PTR [edi+ecx*2+0x60681382],0xc1
  4074cf:	mov    eax,0xe45bb20e
  4074d4:	xchg   edi,eax
  4074d5:	arpl   WORD PTR [ebx+edx*2+0x52],si
  4074d9:	dec    esi
  4074da:	dec    edx
  4074db:	sar    DWORD PTR [eax-0x71],cl
  4074de:	je     0x407494
  4074e0:	cmp    al,0x8c
  4074e2:	mov    eax,0x4717a6ba
  4074e7:	sub    DWORD PTR [ecx-0x71ab1816],edx
  4074ed:	pop    DWORD PTR [ebx-0x4923a621]
  4074f3:	mov    ds:0x8a671769,eax
  4074f8:	aam    0xdb
  4074fa:	es popf 
  4074fc:	push   edx
  4074fd:	dec    ecx
  4074fe:	inc    edi
  4074ff:	iret   
  407500:	inc    edx
  407501:	setnp  BYTE PTR [ecx+0x58]
  407505:	jb     0x407495
  407507:	imul   eax,DWORD PTR [edi+0x5f5f6536],0xfffffff7
  40750e:	cmovp  eax,DWORD PTR [esi]
  407511:	repnz daa 
  407513:	jno    0x407507
  407515:	enter  0x1910,0x4d
  407519:	fcomp  QWORD PTR [esi+0x3fd0e4a7]
  40751f:	repnz mov esi,0x9d18cf37
  407525:	jnp    0x40750c
  407527:	add    eax,0xd77d35f5
  40752c:	into   
  40752d:	(bad)  
  40752f:	pop    ebx
  407530:	int3   
  407531:	push   edx
  407532:	fcomip st,st(5)
  407534:	jp     0x40759e
  407536:	push   ebp
  407537:	loopne 0x407505
  407539:	nop
  40753a:	jbe    0x4074ff
  40753c:	in     eax,dx
  40753d:	std    
  40753e:	fist   DWORD PTR [ebx+ebp*8+0x39]
  407542:	out    dx,eax
  407543:	jns    0x4074ca
  407545:	sbb    al,0xd2
  407547:	and    DWORD PTR [esi-0xa],esp
  40754a:	mov    ah,0x48
  40754c:	imul   esp,DWORD PTR [edi-0x57],0x457f74a5
  407553:	mov    ah,0x9
  407555:	mov    al,ds:0x122cac79
  40755a:	outs   dx,DWORD PTR ds:[esi]
  40755b:	mov    bl,0x86
  40755d:	mov    al,0x27
  40755f:	and    al,0x2f
  407561:	adc    BYTE PTR [edx+0x41],dl
  407564:	jg     0x407580
  407566:	repnz push eax
  407568:	ret    0x145e
  40756b:	ret    0x3604
  40756e:	ds mov ah,0xe7
  407571:	in     al,0xc1
  407573:	inc    edx
  407574:	xor    esi,DWORD PTR [edx+0x40]
  407577:	ss or  al,0x49
  40757a:	xchg   BYTE PTR [esi+0x9],cl
  40757d:	adc    BYTE PTR [eax-0x72eb1851],ah
  407583:	jp     0x40759a
  407585:	add    ah,BYTE PTR [edx-0x26]
  407588:	jecxz  0x40755b
  40758a:	out    dx,al
  40758b:	lods   eax,DWORD PTR ds:[esi]
  40758c:	cmc    
  40758d:	imul   edi,ecx,0xa820fd8e
  407593:	mov    BYTE PTR [edx+esi*2-0x3b],dh
  407597:	and    eax,esp
  407599:	popf   
  40759a:	fdivr  st(5),st
  40759c:	push   cs
  40759d:	mov    ah,0x8f
  40759f:	retf   0x3e0c
  4075a2:	inc    edi
  4075a3:	fcom   QWORD PTR [ecx+0x343c7d18]
  4075a9:	ror    dl,cl
  4075ab:	in     al,dx
  4075ac:	arpl   bp,bx
  4075ae:	stos   BYTE PTR es:[edi],al
  4075af:	xchg   esi,eax
  4075b0:	push   cs
  4075b1:	mov    ecx,0x13162d62
  4075b6:	adc    DWORD PTR [edi-0x39f444c9],eax
  4075bc:	mov    esp,0xb0b16006
  4075c1:	cmp    al,0xa2
  4075c3:	xchg   esi,eax
  4075c4:	scas   eax,DWORD PTR es:[edi]
  4075c5:	inc    edi
  4075c6:	mov    eax,ds:0xe96ac588
  4075cb:	pop    edx
  4075cc:	mov    cl,0x1a
  4075ce:	sbb    esi,DWORD PTR [eax+0x3a]
  4075d1:	push   esi
  4075d2:	dec    eax
  4075d3:	and    BYTE PTR es:[esi],dl
  4075d6:	jl     0x407630
  4075d8:	es call 0xc57c:0x8d9c0990
  4075e0:	jbe    0x407581
  4075e2:	data16 aaa 
  4075e4:	dec    ebx
  4075e5:	sub    eax,0xa869ebd9
  4075ea:	cmp    ch,BYTE PTR [ebp+0x22]
  4075ed:	sub    BYTE PTR [esp+edx*1-0x69],ah
  4075f1:	rcr    edx,cl
  4075f3:	jge    0x4075db
  4075f5:	in     eax,dx
  4075f6:	jge    0x407658
  4075f8:	push   ss
  4075f9:	stos   DWORD PTR es:[edi],eax
  4075fa:	ins    BYTE PTR es:[edi],dx
  4075fb:	sbb    eax,0x450244b0
  407600:	sbb    al,0x77
  407602:	call   0xec56870f
  407607:	das    
  407608:	and    al,0x79
  40760a:	push   esp
  40760b:	jb     0x4075d5
  40760d:	loope  0x4075dc
  40760f:	das    
  407610:	fwait
  407611:	push   eax
  407612:	inc    ebx
  407613:	mov    edx,0xecd2f50a
  407618:	fimul  WORD PTR [bx+di]
  40761b:	mov    edx,0xb4b124d6
  407620:	mov    edi,0x1203fe19
  407625:	adc    DWORD PTR [esi+0x32],ebx
  407628:	imul   eax,DWORD PTR [edx-0x5a153487],0xd2476850
  407632:	repnz retf 
  407634:	sbb    eax,0x5fb49a4c
  407639:	scas   eax,DWORD PTR es:[edi]
  40763a:	sub    al,0x39
  40763c:	fisttp DWORD PTR [esi-0x4ac9e9de]
  407642:	scas   eax,DWORD PTR es:[edi]
  407643:	fimul  WORD PTR [edx-0x66]
  407646:	fnsave [edx-0x450aa177]
  40764c:	adc    edi,eax
  40764e:	mov    esp,0x8a00c6bc
  407653:	cmp    ah,BYTE PTR [ebp-0x4b24b505]
  407659:	out    0x7e,al
  40765b:	test   eax,0x8c18745d
  407660:	pop    ecx
  407661:	mov    esi,0x4c613297
  407666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407667:	push   edi
  407668:	int3   
  407669:	dec    eax
  40766a:	vunpckhps ymm0,ymm4,YMMWORD PTR [ebx+0x30c312b2]
  407672:	into   
  407673:	push   0x14
  407675:	mov    ecx,0xd2f40f60
  40767a:	sub    DWORD PTR [esi+eiz*4],edx
  40767d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40767e:	push   0x1c
  407680:	fiadd  WORD PTR [eax+0x3e56dae4]
  407686:	out    dx,eax
  407687:	add    dh,BYTE PTR [edi]
  407689:	aaa    
  40768a:	call   0x7705:0x8e4f79b0
  407691:	call   0x37489273
  407696:	xor    eax,0xdc26b5e6
  40769b:	push   edi
  40769c:	adc    dl,BYTE PTR [esi+ebp*2-0xc]
  4076a0:	dec    ebp
  4076a1:	xchg   BYTE PTR [eax-0x65],ah
  4076a4:	imul   esi,DWORD PTR [eax],0x958c9d6e
  4076aa:	push   ecx
  4076ab:	jnp    0x407692
  4076ad:	mov    al,ds:0x65c81cdb
  4076b2:	dec    ebp
  4076b3:	push   es
  4076b4:	in     al,dx
  4076b5:	ins    DWORD PTR es:[edi],dx
  4076b6:	jo     0x4076a6
  4076b8:	loopne 0x40770c
  4076ba:	repz hlt 
  4076bc:	xor    edi,ecx
  4076be:	leave  
  4076bf:	push   ebp
  4076c0:	jne    0x4076f3
  4076c2:	xchg   esp,eax
  4076c3:	test   al,0x54
  4076c5:	out    dx,al
  4076c6:	scas   eax,DWORD PTR es:[edi]
  4076c7:	and    al,ch
  4076c9:	js     0x4076fe
  4076cb:	(bad)  
  4076cd:	or     al,0xcb
  4076cf:	imul   BYTE PTR [ebx-0x3e]
  4076d2:	mov    ebp,0xd48b0627
  4076d7:	mov    ecx,0xa5b71dfe
  4076dc:	clc    
  4076dd:	ror    ebx,cl
  4076df:	mov    bh,0x17
  4076e1:	xor    bl,BYTE PTR [ebp-0xb]
  4076e4:	scas   eax,DWORD PTR es:[edi]
  4076e5:	push   0xffffffdf
  4076e7:	xchg   ecx,eax
  4076e8:	fs dec eax
  4076ea:	pop    ebx
  4076eb:	ffreep st(0)
  4076ed:	mov    es,WORD PTR [edi-0x6b241fc9]
  4076f3:	scas   eax,DWORD PTR es:[edi]
  4076f4:	scas   al,BYTE PTR es:[edi]
  4076f5:	xlat   BYTE PTR ds:[ebx]
  4076f6:	pop    edx
  4076f7:	bswap  eax
  4076f9:	pop    ebx
  4076fa:	fwait
  4076fb:	mov    cl,0x1
  4076fd:	dec    edx
  4076fe:	dec    ebx
  4076ff:	sub    al,0xd2
  407701:	mov    BYTE PTR [eax-0x34631b62],cl
  407707:	cmp    DWORD PTR [ebx-0x5eba982e],edx
  40770d:	and    eax,0x56e869f1
  407712:	mov    ds:0x37783436,eax
  407717:	sub    ch,BYTE PTR [eax-0x35af71ba]
  40771d:	fcomp  st(0)
  40771f:	loopne 0x4076ca
  407721:	test   dh,ah
  407723:	sub    cl,cl
  407725:	dec    ecx
  407726:	js     0x407741
  407728:	ins    BYTE PTR es:[edi],dx
  407729:	repnz adc BYTE PTR [ebx-0x64350fda],ch
  407730:	adc    ebx,ecx
  407732:	push   eax
  407733:	dec    esi
  407734:	or     dl,BYTE PTR ds:[edi-0x6549a8a1]
  40773b:	push   ebp
  40773c:	sbb    DWORD PTR [ecx],esp
  40773e:	mov    ds:0xa0c4efb9,eax
  407743:	les    esi,FWORD PTR [ecx-0x377091e9]
  407749:	ja     0x407752
  40774b:	les    eax,FWORD PTR [ebp-0x78ff7a3a]
  407751:	les    esp,FWORD PTR [edi]
  407753:	mov    ebx,0x675926c1
  407758:	and    edi,DWORD PTR [edx]
  40775a:	mov    cl,BYTE PTR [edi]
  40775c:	jmp    0x407798
  40775e:	dec    esp
  40775f:	les    ecx,FWORD PTR [ecx-0x48]
  407762:	sbb    dl,BYTE PTR [ecx-0x73204194]
  407768:	pushf  
  407769:	call   0x4147a57d
  40776e:	into   
  40776f:	lods   al,BYTE PTR ds:[esi]
  407770:	mov    edx,0xc26ba670
  407775:	pop    ss
  407776:	pop    ebx
  407777:	xchg   DWORD PTR ds:0xdba6ab73,ebx
  40777d:	or     eax,0x19fa9fbd
  407782:	(bad)  
  407783:	call   0x201637ca
  407788:	mov    ch,0x73
  40778a:	int3   
  40778b:	je     0x40770d
  40778d:	cmp    dl,cl
  40778f:	dec    edx
  407790:	push   cs
  407791:	repz xor eax,0x4db32ac6
  407797:	ja     0x4077c0
  407799:	and    eax,0xf6485288
  40779e:	push   edi
  40779f:	popf   
  4077a0:	(bad)  
  4077a1:	loopne 0x407814
  4077a3:	jg     0x4077b3
  4077a5:	add    edi,DWORD PTR [eax]
  4077a7:	shr    DWORD PTR [ebx+ebx*8],1
  4077aa:	ja     0x407762
  4077ac:	mov    eax,ds:0xcffbaaea
  4077b1:	popa   
  4077b2:	mov    DWORD PTR ds:0xa772b90f,edx
  4077b8:	(bad)  
  4077ba:	ror    BYTE PTR [eax+0x30],1
  4077bd:	cmp    dl,BYTE PTR [ecx+ecx*4+0x27]
  4077c1:	retf   0xdd4d
  4077c4:	test   DWORD PTR [ebp+0x7185114e],0x2db74a26
  4077ce:	dec    esp
  4077cf:	mov    ebp,0xcb1addf6
  4077d4:	lods   eax,DWORD PTR ds:[esi]
  4077d5:	mov    dl,0x27
  4077d7:	pop    ebx
  4077d8:	xlat   BYTE PTR ds:[ebx]
  4077d9:	sar    BYTE PTR [eax],0x7b
  4077dc:	adc    DWORD PTR [ebx],edx
  4077de:	xor    DWORD PTR [ecx-0x2eded683],eax
  4077e4:	pop    edx
  4077e5:	(bad)  
  4077e6:	dec    ebx
  4077e7:	and    eax,0x7aed059e
  4077ec:	inc    ebx
  4077ed:	int3   
  4077ee:	daa    
  4077ef:	test   eax,0xb5314d2c
  4077f4:	cli    
  4077f5:	gs and al,0xf5
  4077f8:	mov    ah,0x42
  4077fa:	cmp    DWORD PTR [ebx],edi
  4077fc:	sbb    al,0x90
  4077fe:	mov    ds:0x61dbc23,eax
  407803:	mov    ch,0xdf
  407805:	dec    esi
  407806:	cmp    BYTE PTR [edi],ch
  407808:	sar    DWORD PTR [edx],cl
  40780a:	dec    esp
  40780b:	addr16 dec edi
  40780d:	cmp    eax,0xa1e8fc1e
  407812:	mov    ebx,0x229ec699
  407817:	mov    DWORD PTR [ecx-0x44710b69],ebp
  40781d:	inc    eax
  40781e:	and    BYTE PTR [ebx+ebp*1],cl
  407821:	xor    BYTE PTR [eax+0x3],0xcc
  407825:	ins    DWORD PTR es:[edi],dx
  407826:	mov    esp,0xe4db33d6
  40782b:	add    al,0xa7
  40782d:	lods   al,BYTE PTR ds:[esi]
  40782e:	jmp    0xbe79:0x6e70f35
  407835:	sbb    eax,DWORD PTR [ecx+0x7d74bb87]
  40783b:	dec    eax
  40783c:	cli    
  40783d:	int    0xc7
  40783f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407840:	or     bl,dl
  407842:	inc    ecx
  407843:	(bad)  
  407845:	sub    al,0xd4
  407847:	xchg   esi,eax
  407848:	jge    0x407861
  40784a:	repnz ror BYTE PTR [edx],0xb4
  40784e:	xor    BYTE PTR [ecx],al
  407850:	sti    
  407851:	clc    
  407852:	je     0x4078cd
  407854:	jg     0x40781f
  407856:	inc    edx
  407857:	xor    BYTE PTR [esi-0x2e],ah
  40785a:	mov    edi,0xd7881aaf
  40785f:	cmp    BYTE PTR [edi-0x7487a17d],dl
  407865:	ficom  DWORD PTR [ebx+edx*4-0x263f21f6]
  40786c:	lods   al,BYTE PTR ds:[esi]
  40786d:	(bad)  [ebx-0x40]
  407870:	adc    BYTE PTR [edi-0x55],ch
  407873:	sub    bh,bl
  407875:	retf   0x5264
  407878:	mov    cs,WORD PTR [ebx+ebp*2-0x5be68cd3]
  40787f:	ret    
  407880:	inc    DWORD PTR [ebp+0x280c68b0]
  407886:	cmp    eax,0xee9f1b42
  40788b:	cs sbb ch,0xeb
  40788f:	mov    ah,0x96
  407891:	mov    DWORD PTR [ebx],esi
  407893:	enter  0xb84b,0xa7
  407897:	dec    edx
  407898:	jl     0x8c860f54
  40789e:	ja     0x407904
  4078a0:	and    ebp,ebp
  4078a2:	add    al,0xbe
  4078a4:	cmc    
  4078a5:	aaa    
  4078a6:	test   dh,ch
  4078a8:	pop    ss
  4078a9:	cmp    eax,0x468d2730
  4078ae:	stos   BYTE PTR es:[edi],al
  4078af:	mov    bh,0xcb
  4078b1:	inc    ebp
  4078b2:	pusha  
  4078b3:	cli    
  4078b4:	push   esp
  4078b5:	cwde   
  4078b6:	push   0x68
  4078b8:	in     eax,0x77
  4078ba:	into   
  4078bb:	push   eax
  4078bc:	push   ebx
  4078bd:	xor    BYTE PTR [esi],dh
  4078bf:	or     ah,ah
  4078c1:	hlt    
  4078c2:	jmp    0x4078c7
  4078c4:	jle    0x40786d
  4078c6:	mov    dh,0x8c
  4078c8:	inc    edi
  4078c9:	push   ecx
  4078ca:	jg     0x40784c
  4078cc:	xor    eax,0xdb381881
  4078d1:	test   eax,0xfd3f65b8
  4078d6:	pop    es
  4078d7:	imul   BYTE PTR [esi-0x11b1fd51]
  4078dd:	data16 jns 0x4078c2
  4078e0:	call   0x3d2bf46d
  4078e5:	mov    ds:0xd12d4bdf,al
  4078ea:	mov    ds:0xf345cdd4,al
  4078ef:	shl    DWORD PTR [esp+eax*1+0x53d54a14],1
  4078f6:	je     0x407918
  4078f8:	jno    0x4078c3
  4078fa:	mov    ds:0x4672d1a0,al
  4078ff:	fst    QWORD PTR [ebx+0x73]
  407902:	sub    eax,0x1e926c56
  407907:	mov    DWORD PTR [eax+edx*4+0x6b],esp
  40790b:	xor    DWORD PTR [ecx+0x1c],esp
  40790e:	data16 ins BYTE PTR es:[edi],dx
  407910:	dec    esp
  407911:	jae    0x4078b2
  407913:	neg    dl
  407915:	and    cl,BYTE PTR [ecx]
  407917:	(bad)  
  407918:	adc    ebp,DWORD PTR [ecx-0x7aa95313]
  40791e:	push   es
  40791f:	out    0x7a,eax
  407921:	and    DWORD PTR [ecx+0x6bf6cc44],0x4b
  407928:	jo     0x4078b4
  40792a:	mov    ds:0x21a05351,eax
  40792f:	(bad)  
  407930:	fisttp DWORD PTR [ebx+0x774a80bd]
  407936:	mov    WORD PTR [eax+0x17],es
  407939:	aam    0xb4
  40793b:	push   0xe
  40793d:	fbld   TBYTE PTR [ebp+0x4e]
  407940:	jmp    0x4d81:0x249ca091
  407947:	sub    DWORD PTR [edx+0x3a4cc7fa],ecx
  40794d:	shl    DWORD PTR [ebx-0x65],cl
  407950:	je     0x407920
  407952:	ja     0x40797c
  407954:	and    ch,bl
  407956:	ins    BYTE PTR es:[edi],dx
  407957:	test   eax,0x7ed66f6f
  40795c:	ins    BYTE PTR es:[edi],dx
  40795d:	shl    DWORD PTR [eax],0xd5
  407960:	push   ebp
  407961:	ficom  WORD PTR [ecx]
  407963:	inc    eax
  407964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407965:	jb     0x407935
  407967:	fisttp QWORD PTR [edi+0x66]
  40796a:	jp     0x4079b8
  40796c:	std    
  40796d:	into   
  40796e:	mov    al,ds:0xf60387c6
  407973:	lea    ebp,[esi]
  407975:	rcr    BYTE PTR [ebx-0xb6b7963],cl
  40797b:	sub    BYTE PTR [esi-0x5b],ch
  40797e:	push   eax
  40797f:	jae    0x4079ef
  407981:	call   0x6fa2:0xf729ac5c
  407988:	rcr    BYTE PTR [ebx+0x75],cl
  40798b:	xchg   esp,eax
  40798c:	or     eax,0x71c1da66
  407991:	sbb    al,0xae
  407993:	retf   
  407994:	mov    eax,0x3e712825
  407999:	push   ecx
  40799b:	jle    0x407997
  40799d:	fwait
  40799e:	and    eax,0xef945355
  4079a3:	shl    edx,1
  4079a5:	aam    0xb7
  4079a7:	inc    esi
  4079a8:	adc    ch,BYTE PTR [ebx-0x4a]
  4079ab:	push   esp
  4079ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ad:	inc    ecx
  4079ae:	inc    esi
  4079af:	push   edi
  4079b0:	xchg   si,ax
  4079b2:	lods   al,BYTE PTR ds:[esi]
  4079b3:	aad    0x17
  4079b5:	outs   dx,BYTE PTR ds:[esi]
  4079b6:	stc    
  4079b7:	pop    ebp
  4079b8:	lahf   
  4079b9:	cmp    BYTE PTR [ecx],ah
  4079bb:	lds    edx,FWORD PTR cs:[esi-0x7d]
  4079bf:	mov    ds:0xb871fcd,al
  4079c4:	add    bl,dh
  4079c6:	add    eax,0xeb3caac2
  4079cb:	lds    esp,FWORD PTR [edx+ebp*4]
  4079ce:	(bad)  
  4079cf:	rol    esi,cl
  4079d1:	jmpw   0x7bf8
  4079d5:	ret    
  4079d6:	mov    al,cs:0x636660a3
  4079dc:	call   0x78c96657
  4079e1:	or     eax,0x8b7aae2
  4079e6:	sahf   
  4079e7:	sbb    cl,BYTE PTR [ebp+0xd]
  4079ea:	or     ebp,ebp
  4079ec:	and    BYTE PTR ds:0x47afe2fa,bh
  4079f2:	icebp  
  4079f3:	sbb    esp,DWORD PTR [ebx-0x7fdf356]
  4079f9:	dec    ebp
  4079fa:	sbb    ebp,esp
  4079fc:	sub    eax,0x28107423
  407a01:	pushf  
  407a02:	stos   BYTE PTR es:[edi],al
  407a03:	repz ja 0x407a5b
  407a06:	push   eax
  407a07:	pop    ecx
  407a08:	jmp    DWORD PTR [edx-0x5ecb00bf]
  407a0e:	push   edx
  407a0f:	in     eax,dx
  407a10:	sub    al,0x26
  407a12:	arpl   dx,cx
  407a14:	adc    esp,DWORD PTR [edi+0x24]
  407a17:	jge    0x4079b6
  407a19:	ficomp DWORD PTR [edx-0x44]
  407a1c:	loope  0x407a68
  407a1e:	pop    ebx
  407a1f:	pop    edi
  407a20:	mov    ah,0x71
  407a22:	into   
  407a23:	xor    eax,0x2844df88
  407a28:	inc    eax
  407a29:	adc    BYTE PTR [edi+0x7a],0xfa
  407a2d:	xchg   ecx,eax
  407a2e:	lods   al,BYTE PTR ds:[esi]
  407a2f:	sbb    ecx,eax
  407a31:	sbb    al,0x3c
  407a33:	push   0xffffff86
  407a35:	cmp    BYTE PTR [edx+0x30],ch
  407a38:	mov    ecx,cs
  407a3a:	inc    eax
  407a3b:	aas    
  407a3c:	jg     0x407a65
  407a3e:	mov    eax,0xd82b8a20
  407a43:	dec    ecx
  407a44:	popf   
  407a45:	mov    ecx,DWORD PTR [ebp-0x4]
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0xdae739d2
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	xchg   esp,eax
  407b36:	and    esi,DWORD PTR [ebx-0x4a7f5508]
  407b3c:	scas   al,BYTE PTR es:[edi]
  407b3d:	mov    cs,WORD PTR [eax+0x2a]
  407b40:	data16 aam 0xea
  407b43:	(bad)  
  407b44:	addr16 push 0x45ccbc15
  407b4a:	dec    ecx
  407b4b:	test   eax,0xf6c3c37
  407b50:	add    edi,DWORD PTR [ebx]
  407b52:	jmp    0x39c8c315
  407b57:	or     BYTE PTR [ebx+0x4d],bh
  407b5a:	mov    cl,0xa3
  407b5c:	in     al,0x60
  407b5e:	sub    cl,BYTE PTR [eax]
  407b60:	out    0x48,al
  407b62:	push   ecx
  407b63:	aaa    
  407b64:	imul   esp,DWORD PTR [edx-0x202f9de7],0x6ff3013f
  407b6e:	xchg   edi,eax
  407b6f:	lock rcr BYTE PTR [ecx-0x779c4fc5],0xba
  407b77:	dec    ebp
  407b78:	fidiv  DWORD PTR ds:0x943ef3ab
  407b7e:	enter  0xcbc5,0xd1
  407b82:	push   ecx
  407b83:	adc    edx,DWORD PTR [eax]
  407b85:	test   eax,0x4f5df1b9
  407b8a:	xchg   ebp,eax
  407b8c:	add    ebp,DWORD PTR [edi]
  407b8e:	pusha  
  407b8f:	stc    
  407b90:	sbb    BYTE PTR [edx-0x70],ch
  407b93:	loopne 0x407bbc
  407b95:	scas   al,BYTE PTR es:[edi]
  407b96:	or     al,0x46
  407b98:	(bad)  
  407b99:	fiadd  WORD PTR [ebx-0x50]
  407b9c:	jle    0x407b44
  407b9e:	into   
  407b9f:	sub    ecx,ecx
  407ba1:	cli    
  407ba2:	(bad)  
  407ba5:	stos   DWORD PTR es:[edi],eax
  407ba6:	into   
  407ba7:	addr16 pop ds
  407ba9:	cmp    dl,BYTE PTR [esi+0x32]
  407bac:	popa   
  407bad:	cmc    
  407bae:	xor    BYTE PTR [esp+eiz*2-0xa51d188],ah
  407bb5:	jmp    0x5823:0xec6f5da7
  407bbc:	sbb    BYTE PTR [eax-0x4ad55c0f],0x7e
  407bc3:	int    0x73
  407bc5:	or     ebp,0x2a0a8f57
  407bcb:	add    eax,0xd422587b
  407bd0:	inc    ebp
  407bd1:	loopne 0x407b72
  407bd3:	jbe    0x407baf
  407bd5:	fs iret 
  407bd7:	sub    BYTE PTR [edi-0x5edcc9a2],bl
  407bdd:	cld    
  407bde:	popf   
  407bdf:	sbb    DWORD PTR [ecx-0x45],esi
  407be2:	jecxz  0x407c0f
  407be4:	scas   al,BYTE PTR es:[edi]
  407be5:	(bad)  
  407be6:	js     0x407c3d
  407be8:	nop
  407be9:	lods   al,BYTE PTR ds:[esi]
  407bea:	cdq    
  407beb:	iret   
  407bec:	aas    
  407bed:	hlt    
  407bee:	arpl   WORD PTR [ecx-0x50e074f5],ax
  407bf4:	cwde   
  407bf5:	adc    DWORD PTR [eax+eiz*4+0x4a128d44],0x70
  407bfd:	les    edi,FWORD PTR [ecx]
  407bff:	jo     0x407bd4
  407c01:	xlat   BYTE PTR ds:[ebx]
  407c02:	mov    cl,0x58
  407c04:	sbb    al,0x64
  407c06:	clc    
  407c07:	shl    BYTE PTR [edi],cl
  407c09:	aaa    
  407c0a:	cs jnp 0x407ba9
  407c0d:	jmp    0x5249c7d9
  407c12:	mov    ds:0xe8f618c2,eax
  407c17:	mov    esp,0x9a317558
  407c1c:	sbb    dh,ah
  407c1e:	std    
  407c1f:	or     eax,0xf20f313d
  407c24:	arpl   WORD PTR [edi],bx
  407c26:	icebp  
  407c27:	les    esi,FWORD PTR [ecx]
  407c29:	cdq    
  407c2a:	stos   DWORD PTR es:[edi],eax
  407c2b:	xchg   ebp,eax
  407c2c:	or     al,bl
  407c2e:	inc    edx
  407c2f:	fistp  WORD PTR [ecx+edi*4-0x7]
  407c33:	jl     0x407cb2
  407c35:	push   0x3967fa1e
  407c3a:	cmc    
  407c3b:	lods   eax,DWORD PTR ds:[esi]
  407c3c:	push   ebp
  407c3d:	adc    eax,0xc8a17dd
  407c42:	or     edi,ebx
  407c44:	mov    DWORD PTR [esi],ebx
  407c46:	inc    edx
  407c47:	jae    0x407c55
  407c49:	add    ah,ah
  407c4b:	call   FWORD PTR [esi-0x66]
  407c4e:	inc    ebx
  407c4f:	aaa    
  407c50:	iret   
  407c51:	push   ds
  407c52:	xchg   ebx,eax
  407c53:	ins    DWORD PTR es:[edi],dx
  407c54:	or     al,0xc0
  407c56:	(bad)  
  407c57:	mov    esi,0x8e4c27f3
  407c5c:	sbb    eax,0x415dc640
  407c61:	pop    ss
  407c62:	jmp    0xb1d1ecb6
  407c67:	ret    
  407c68:	jp     0x407c4c
  407c6a:	dec    ecx
  407c6b:	xchg   ecx,eax
  407c6c:	or     al,0x5a
  407c6e:	mov    bl,0xb3
  407c70:	sbb    dl,BYTE PTR [ebx]
  407c72:	xchg   esi,eax
  407c73:	add    BYTE PTR [eax+0x71],bl
  407c76:	cld    
  407c77:	lods   al,BYTE PTR ds:[esi]
  407c78:	and    al,0xfc
  407c7a:	xlat   BYTE PTR ds:[ebx]
  407c7b:	push   cs
  407c7c:	jb     0x407ca4
  407c7e:	push   esi
  407c7f:	fimul  WORD PTR [ebp+0x76b7d34]
  407c85:	and    eax,0x7a8f437a
  407c8a:	adc    al,0x73
  407c8c:	jecxz  0x407cc7
  407c8e:	fdiv   QWORD PTR [ebx]
  407c90:	sbb    DWORD PTR [ecx-0x1abd6726],edx
  407c96:	or     esi,DWORD PTR [edx-0x7b]
  407c99:	jns    0x407cae
  407c9b:	call   ebp
  407c9d:	dec    edx
  407c9e:	fild   WORD PTR [eax-0x3d04e140]
  407ca4:	(bad)  
  407ca5:	clc    
  407ca6:	leave  
  407ca7:	(bad)  
  407ca8:	out    dx,al
  407ca9:	ret    0x1c6
  407cac:	jmp    0x2eb7:0xe70aee21
  407cb3:	stos   BYTE PTR es:[di],al
  407cb5:	sub    al,ah
  407cb7:	fimul  DWORD PTR [edi-0x9]
  407cba:	les    esp,FWORD PTR ds:0x5e7c3c3e
  407cc0:	jmp    0x407c44
  407cc2:	shl    DWORD PTR [edx+ebp*4+0x12],1
  407cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cc7:	out    dx,al
  407cc8:	lea    esi,[ebp+0x44]
  407ccb:	test   DWORD PTR ds:0x67fea492,ecx
  407cd1:	outs   dx,BYTE PTR ds:[esi]
  407cd2:	push   ds
  407cd3:	mov    dh,0x9d
  407cd5:	cmp    esp,esp
  407cd7:	mov    esp,0xf770c8c
  407cdc:	or     ah,BYTE PTR [esi-0x65]
  407cdf:	call   0x6a22:0xefb2fe6d
  407ce6:	push   ebp
  407ce7:	lods   eax,DWORD PTR ds:[esi]
  407ce8:	mov    eax,ds:0x187124bf
  407ced:	sar    bh,1
  407cef:	popf   
  407cf0:	icebp  
  407cf1:	sbb    DWORD PTR [eax+esi*1],eax
  407cf4:	sbb    eax,0x62023235
  407cf9:	fs jo  0x407cf5
  407cfc:	outs   dx,BYTE PTR ds:[esi]
  407cfd:	xchg   BYTE PTR [eax+0x19],dh
  407d00:	add    cl,dl
  407d02:	and    DWORD PTR [edi+0x71d53ead],0xffffffc6
  407d09:	mov    ebx,0xb079438d
  407d0e:	mov    DWORD PTR [edi-0x2e465d7e],eax
  407d14:	mov    eax,DWORD PTR [edi+0x75dc1c11]
  407d1a:	push   ss
  407d1b:	cmp    BYTE PTR [edx+0x36],0xee
  407d1f:	mov    al,ds:0xeb580ea4
  407d24:	sbb    BYTE PTR [edi+0x3934e711],bl
  407d2a:	cmp    ah,0x51
  407d2d:	(bad)  
  407d2e:	out    dx,al
  407d2f:	mov    bl,0xee
  407d31:	inc    DWORD PTR [edx+0x30]
  407d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d35:	rcr    ecx,1
  407d37:	mov    dh,BYTE PTR [edi+edi*4-0x57]
  407d3b:	push   ss
  407d3c:	int    0x3d
  407d3e:	cdq    
  407d3f:	test   BYTE PTR [edi],cl
  407d41:	mov    ecx,DWORD PTR ss:[ebx+0x17]
  407d45:	das    
  407d46:	cmp    esp,DWORD PTR [edx]
  407d48:	add    DWORD PTR [edx-0x1c],0x2f
  407d4c:	dec    edi
  407d4d:	push   esi
  407d4e:	mov    bh,0xf9
  407d50:	add    dh,BYTE PTR [esi+0x10]
  407d53:	fild   DWORD PTR [esi+eax*8-0x467143c1]
  407d5a:	sub    eax,0xf0c40c1b
  407d5f:	sub    al,0x28
  407d61:	inc    ebp
  407d62:	lods   eax,DWORD PTR ds:[esi]
  407d63:	lds    ebp,FWORD PTR [edi-0x1c]
  407d66:	adc    DWORD PTR [esi],ebp
  407d68:	les    edx,FWORD PTR [ebx+eax*1-0x5a]
  407d6c:	xchg   edi,eax
  407d6d:	push   edx
  407d6e:	rcl    dl,0xa8
  407d71:	or     BYTE PTR [edi+eiz*2],0xf9
  407d75:	sbb    eax,0x5588a69d
  407d7a:	ret    0xee4d
  407d7d:	nop
  407d7e:	scas   eax,DWORD PTR es:[edi]
  407d7f:	jno    0x407dee
  407d81:	mov    ds:0x6bee0874,al
  407d86:	inc    edx
  407d87:	adc    dh,bl
  407d89:	mov    ecx,0x78372e39
  407d8e:	inc    edx
  407d8f:	mov    ch,0xde
  407d91:	out    dx,al
  407d92:	sar    DWORD PTR [edi-0x5d],0xcd
  407d96:	rol    DWORD PTR [edi],1
  407d98:	fwait
  407d99:	in     eax,dx
  407d9a:	push   0xe012e4ef
  407d9f:	xchg   DWORD PTR [esi],edi
  407da1:	clc    
  407da2:	nop
  407da3:	mov    dl,0x51
  407da5:	(bad)  
  407da6:	(bad)  
  407da7:	rcl    ah,1
  407da9:	xchg   edx,eax
  407daa:	inc    ebp
  407dab:	jg     0x407e02
  407dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dae:	es add eax,edi
  407db1:	out    dx,eax
  407db2:	or     eax,0xd21072d0
  407db7:	rol    DWORD PTR [esi+0x3d8387ad],cl
  407dbd:	out    dx,eax
  407dbe:	jnp    0x407e32
  407dc0:	test   al,0xad
  407dc2:	mov    ebp,0x18878519
  407dc7:	or     DWORD PTR [ecx+0x4b],0x3edbd039
  407dce:	mov    bh,0x1d
  407dd0:	ret    
  407dd1:	mov    esi,0x1a593870
  407dd6:	pop    ds
  407dd7:	inc    esi
  407dd8:	int3   
  407dd9:	jns    0x407de5
  407ddb:	mov    ebp,0x91abb4f3
  407de0:	mov    cl,BYTE PTR [ebp+eax*1+0x26]
  407de4:	dec    ebp
  407de5:	cli    
  407de6:	cmc    
  407de7:	or     al,0xd2
  407de9:	or     dh,BYTE PTR [ebp+ebx*2-0xd]
  407ded:	jl     0x407e40
  407def:	mov    cl,0x1b
  407df1:	data16 aas 
  407df3:	xchg   ebx,eax
  407df4:	push   es
  407df5:	cmp    BYTE PTR [esi],dl
  407df7:	test   eax,0x94f05f60
  407dfc:	loop   0x407e23
  407dfe:	call   0xefdb:0x2c1b204e
  407e05:	test   DWORD PTR [ecx+edi*1+0xa1ac23c],ebp
  407e0c:	leave  
  407e0d:	jmp    FWORD PTR ds:0xdca5f327
  407e13:	fisub  DWORD PTR [ebx-0x25ac46b4]
  407e19:	pop    edi
  407e1a:	push   ss
  407e1b:	retf   
  407e1c:	enter  0x8ff4,0x7f
  407e20:	jns    0x407e0d
  407e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e23:	arpl   WORD PTR [edx-0x6df2cc47],cx
  407e29:	jae    0x407e74
  407e2b:	pop    esp
  407e2c:	push   DWORD PTR [eax-0x201285f6]
  407e32:	js     0x407e36
  407e34:	pop    edi
  407e35:	out    0xe3,al
  407e37:	dec    edx
  407e38:	in     al,dx
  407e39:	lods   al,BYTE PTR ds:[esi]
  407e3a:	sub    edx,DWORD PTR gs:[esi]
  407e3d:	test   al,0xbc
  407e3f:	shl    BYTE PTR [esi],1
  407e41:	ss dec ebp
  407e43:	mov    ch,0x61
  407e45:	sbb    edx,esi
  407e47:	fs jns 0x407e81
  407e4a:	push   ss
  407e4b:	xchg   edi,eax
  407e4c:	mov    BYTE PTR [esi+eax*1],0x83
  407e50:	outs   dx,BYTE PTR ds:[esi]
  407e51:	call   0x84acb295
  407e56:	mov    esi,0x4101109d
  407e5b:	leave  
  407e5c:	lock sbb cl,BYTE PTR [ecx+ebx*4-0xe]
  407e61:	mov    ds:0xf7b8eff9,eax
  407e66:	inc    edx
  407e67:	add    al,0x2d
  407e69:	push   esp
  407e6a:	mov    ah,al
  407e6c:	shl    BYTE PTR [esi],0x7c
  407e6f:	add    ebx,ecx
  407e71:	mov    DWORD PTR gs:[ebx],edx
  407e74:	(bad)  
  407e76:	js     0x407dfd
  407e78:	lods   eax,DWORD PTR ds:[esi]
  407e79:	mov    ebp,0xb47eee17
  407e7e:	mov    edx,0x72026613
  407e83:	push   eax
  407e84:	leave  
  407e85:	mov    DWORD PTR [eax],ebx
  407e87:	lea    ebp,[edx-0x5b]
  407e8a:	test   DWORD PTR [ebx+ebp*1-0x5ee48ee5],edi
  407e91:	in     eax,dx
  407e92:	and    ecx,DWORD PTR [edi+0x3d]
  407e95:	sbb    edi,edi
  407e97:	ja     0x407e60
  407e99:	jle    0x407eec
  407e9b:	mov    bl,0xab
  407e9d:	mov    eax,DWORD PTR [edi+0x1a7298b5]
  407ea3:	jns    0x407eb4
  407ea5:	fmulp  st(0),st
  407ea7:	loop   0x407e3b
  407ea9:	pop    edi
  407eaa:	icebp  
  407eab:	inc    esi
  407eac:	inc    ebx
  407ead:	jnp    0x407e9e
  407eaf:	in     eax,dx
  407eb0:	(bad)  
  407eb1:	adc    al,cl
  407eb3:	sbb    eax,0xdadb0df
  407eb8:	das    
  407eb9:	cmp    esi,DWORD PTR [ebx+0x62]
  407ebc:	xchg   bh,ah
  407ebe:	add    esi,esp
  407ec0:	mov    esi,DWORD PTR [ecx-0x27]
  407ec3:	sti    
  407ec4:	retf   
  407ec5:	aad    0x11
  407ec7:	loope  0x407ea5
  407ec9:	xchg   DWORD PTR [ebx-0xa46e408],ebp
  407ecf:	loopne 0x407e8f
  407ed1:	and    eax,0x89ea15f6
  407ed6:	sahf   
  407ed7:	push   0x8b1d5d92
  407edc:	xor    edi,esp
  407ede:	fwait
  407edf:	push   ecx
  407ee0:	mov    BYTE PTR [edi-0x1f],bh
  407ee3:	mov    ch,bh
  407ee5:	jge    0x407ee6
  407ee7:	and    dh,bl
  407ee9:	mov    dh,0x18
  407eeb:	jae    0x407f03
  407eed:	loopne 0x407f29
  407eef:	cmp    al,0x11
  407ef1:	shr    esi,1
  407ef3:	scas   al,BYTE PTR es:[edi]
  407ef4:	xor    DWORD PTR [esi+0x274059a5],edi
  407efa:	inc    eax
  407efb:	aaa    
  407efc:	pop    ebp
  407efd:	add    dl,bl
  407eff:	cmp    eax,0xb0f221e1
  407f04:	mov    ah,BYTE PTR [ebx-0x40182e91]
  407f0a:	(bad)  
  407f0b:	test   dh,bl
  407f0d:	push   ss
  407f0e:	adc    al,0xff
  407f10:	xor    al,0xe4
  407f12:	push   esi
  407f13:	jl     0x407ea0
  407f15:	push   esi
  407f16:	scas   al,BYTE PTR es:[edi]
  407f17:	out    0x95,al
  407f19:	or     cl,BYTE PTR [ecx+0x13]
  407f1c:	mov    ?,WORD PTR [eax+0x28f7adbd]
  407f22:	ja     0x407f68
  407f24:	dec    ecx
  407f25:	inc    ebp
  407f26:	xchg   ebx,eax
  407f27:	sbb    eax,0x6e011b5e
  407f2c:	and    edx,DWORD PTR [eax+0x4378502a]
  407f32:	lock push ds
  407f34:	cmp    DWORD PTR [ebp+ebx*8+0x2d],edi
  407f38:	sub    al,BYTE PTR [edi+esi*4+0x1f06e539]
  407f3f:	ja     0xc74f734e
  407f45:	mov    ah,0xa4
  407f47:	cli    
  407f48:	ret    
  407f49:	aaa    
  407f4a:	fwait
  407f4b:	in     eax,dx
  407f4c:	cmp    ebx,DWORD PTR [ebx]
  407f4e:	cmp    eax,0x272a3cca
  407f53:	mov    dl,0xfb
  407f55:	sar    BYTE PTR [eax-0x1c9f16cb],cl
  407f5b:	sbb    eax,0xe0fd6878
  407f60:	es mov bl,0x53
  407f63:	pop    ds
  407f64:	and    eax,0xffc398a4
  407f69:	ss mov bl,0xc2
  407f6c:	push   ebx
  407f6d:	xor    DWORD PTR [edi+edx*8-0x53],edx
  407f71:	popa   
  407f72:	jbe    0x407fa8
  407f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f75:	inc    ebp
  407f76:	mov    ebx,0x97a0ecbe
  407f7b:	cmc    
  407f7c:	call   0x51dd:0x8c4fe0bd
  407f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f84:	rcl    ebp,0xd
  407f87:	adc    esp,DWORD PTR [ecx+0x904cd03]
  407f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f8e:	xchg   ebp,eax
  407f8f:	test   al,0x2e
  407f91:	data16 sub ch,bl
  407f94:	fadd   DWORD PTR [ecx]
  407f96:	sahf   
  407f97:	aaa    
  407f98:	jae    0x407fe1
  407f9a:	mov    al,0xc4
  407f9c:	into   
  407f9d:	aaa    
  407f9e:	les    edi,FWORD PTR [eax+0x2e522eb4]
  407fa4:	test   BYTE PTR [edx],bh
  407fa6:	repnz int3 
  407fa8:	call   0x2008:0x10c55bef
  407faf:	into   
  407fb0:	or     edi,DWORD PTR [ecx+eax*2+0x4d61c83]
  407fb7:	dec    DWORD PTR [esi-0x5f2985bd]
  407fbd:	and    edi,edx
  407fbf:	ins    BYTE PTR es:[edi],dx
  407fc0:	push   eax
  407fc1:	or     edi,edi
  407fc3:	sbb    bh,0x8b
  407fc6:	test   eax,0x119ffb29
  407fcb:	sti    
  407fcc:	mov    ebp,DWORD PTR [edx]
  407fce:	js     0x407fb3
  407fd0:	lods   eax,DWORD PTR ds:[esi]
  407fd1:	ins    DWORD PTR es:[edi],dx
  407fd2:	popa   
  407fd3:	retf   
  407fd4:	push   ecx
  407fd5:	adc    bh,ah
  407fd7:	(bad)  
  407fd8:	mov    bh,0xd2
  407fda:	call   0xd906:0xc28e6a0
  407fe1:	inc    esi
  407fe2:	sub    DWORD PTR [ebx],ebp
  407fe4:	xor    al,0x6c
  407fe6:	xor    BYTE PTR [ebx],bl
  407fe8:	popf   
  407fe9:	push   ebp
  407fea:	or     al,0xa9
  407fec:	in     al,dx
  407fed:	sahf   
  407fee:	adc    esi,DWORD PTR [esi-0x1c]
  407ff1:	sar    BYTE PTR [edx-0x28],1
  407ff4:	mov    BYTE PTR [ebp+0x49],cl
  407ff7:	in     eax,0x83
  407ff9:	ja     0x408011
  407ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ffc:	je     0x407fe7
  407ffe:	lds    esp,FWORD PTR [ecx-0x6753ef20]
  408004:	out    dx,eax
  408005:	add    eax,0x3f6abeae
  40800a:	lahf   
  40800b:	ret    
  40800c:	mov    ds:0xdbd85831,al
  408011:	adc    al,0x8b
  408013:	aas    
  408014:	jo     0x407fc4
  408016:	ins    BYTE PTR es:[edi],dx
  408017:	xor    al,0x6d
  408019:	xor    edx,eax
  40801b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40801c:	pop    edi
  40801d:	adc    eax,0x4a2a647
  408022:	jmp    0x407ff3
  408024:	xchg   DWORD PTR [edx+esi*2+0x1b],edi
  408028:	or     eax,0x5d52d00b
  40802d:	fcmovnbe st,st(1)
  40802f:	pop    edx
  408030:	mov    dh,0x15
  408032:	sub    BYTE PTR [ecx],dl
  408034:	xchg   esi,eax
  408035:	push   ds
  408036:	jno    0x407fc0
  408038:	cmp    BYTE PTR [ebx],0xc9
  40803b:	xchg   edi,eax
  40803c:	or     dh,BYTE PTR [ebp+eax*8+0x1b]
  408040:	out    0x9e,al
  408042:	add    eax,DWORD PTR [edx+0x17]
  408045:	cs push edi
  408047:	inc    ecx
  408048:	xchg   ecx,eax
  408049:	dec    esi
  40804a:	jb     0x407fde
  40804c:	add    eax,0x97ba1e23
  408051:	mov    eax,0xb0c7688d
  408056:	and    al,0x9a
  408058:	(bad)  
  408059:	int    0xba
  40805b:	inc    edx
  40805c:	xor    DWORD PTR [ebp-0x69f832f8],ecx
  408062:	mov    eax,DWORD PTR [edi]
  408064:	rcl    DWORD PTR gs:[esi+0x49a09e98],1
  40806b:	inc    esi
  40806c:	ret    0x2c5
  40806f:	mov    WORD PTR [ecx+ecx*1+0x41357741],?
  408076:	inc    edi
  408077:	ss pushf 
  408079:	push   ebx
  40807a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40807b:	mov    ebp,DWORD PTR [edx+0xbb7ed19]
  408081:	inc    esp
  408082:	pop    ss
  408083:	ret    0xbfaf
  408086:	ret    0x450f
  408089:	shl    BYTE PTR [ebx+0x20d1a29e],0x4a
  408090:	or     DWORD PTR cs:[eax+esi*2+0x69ffdd9d],ebp
  408098:	and    DWORD PTR [ebp-0x3f],eax
  40809b:	cdq    
  40809c:	in     al,0x10
  40809e:	jae    0x408058
  4080a0:	and    BYTE PTR [esi-0x371b4ff],0xb3
  4080a7:	jmp    0xeaa4:0x669195ea
  4080ae:	rcl    DWORD PTR ds:0xd9449af,1
  4080b4:	mov    esi,0xc102f749
  4080b9:	aas    
  4080ba:	xchg   esp,eax
  4080bb:	test   BYTE PTR [esi],dl
  4080bd:	mov    ds:0x235e8fa6,al
  4080c2:	jp     0x408101
  4080c4:	mov    esp,0x63aec9e0
  4080c9:	int3   
  4080ca:	mov    edi,0x8addae59
  4080cf:	adc    dl,BYTE PTR [edx-0x29]
  4080d2:	in     eax,0x29
  4080d4:	stc    
  4080d5:	dec    ebx
  4080d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080d7:	into   
  4080d8:	in     eax,0xba
  4080da:	xor    al,dl
  4080dc:	ja     0x40807f
  4080de:	stos   BYTE PTR es:[edi],al
  4080df:	mov    esi,0x4338ddb6
  4080e4:	addr16 or cl,ch
  4080e7:	pop    ebx
  4080e8:	jge    0x4080c3
  4080ea:	mov    cl,0xbb
  4080ec:	push   ss
  4080ed:	nop
  4080ee:	push   0x5f1ab5a3
  4080f3:	out    dx,al
  4080f4:	test   eax,0xe160ea44
  4080f9:	pop    ecx
  4080fa:	addr16 pop ebp
  4080fc:	inc    edi
  4080fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080fe:	cdq    
  4080ff:	jmp    0xf04ff053
  408104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408105:	popf   
  408106:	pop    edx
  408107:	xchg   esp,eax
  408108:	mov    al,0x91
  40810a:	xor    ah,BYTE PTR [edi-0x72]
  40810d:	mov    bh,0x27
  40810f:	repnz imul edx,DWORD PTR [ecx-0x2e],0xffffffa1
  408114:	outs   dx,BYTE PTR ds:[esi]
  408115:	cld    
  408116:	inc    ebp
  408117:	and    ecx,DWORD PTR [eax]
  408119:	jae    0x40809d
  40811b:	daa    
  40811c:	dec    edi
  40811d:	xor    bh,bl
  40811f:	daa    
  408120:	fnstsw WORD PTR [ebp+0x4c]
  408123:	jnp    0x4080e4
  408125:	std    
  408126:	mov    ds:0xdee08a2f,al
  40812b:	retf   0x8170
  40812e:	std    
  40812f:	push   ebp
  408130:	sub    ebp,edx
  408132:	lahf   
  408133:	sbb    DWORD PTR [ebx],ecx
  408135:	adc    BYTE PTR [ebp+0x79],cl
  408138:	push   ds
  408139:	out    0x46,eax
  40813b:	cmp    al,0xb7
  40813d:	inc    edi
  40813e:	(bad)  
  40813f:	cld    
  408140:	mov    bl,BYTE PTR [esi]
  408142:	iret   
  408143:	dec    esi
  408144:	pop    es
  408145:	pop    edx
  408146:	sub    edx,DWORD PTR [ebx-0x7e]
  408149:	adc    DWORD PTR [edx],esi
  40814b:	jp     0x408115
  40814d:	and    eax,0x317ead76
  408152:	pop    es
  408153:	das    
  408154:	dec    edx
  408155:	inc    ebx
  408156:	test   DWORD PTR fs:[eax],ecx
  408159:	sbb    DWORD PTR [edi+0x71d839dc],eax
  40815f:	inc    eax
  408160:	test   BYTE PTR [edi],bl
  408162:	push   es
  408163:	cmp    al,BYTE PTR [ecx+0x22585ded]
  408169:	fwait
  40816a:	(bad)  
  40816b:	loope  0x4081be
  40816d:	pop    ds
  40816e:	lock add esi,DWORD PTR [edi-0x8b5266a]
  408175:	cmp    al,BYTE PTR [edx+eiz*8]
  408178:	hlt    
  408179:	jl     0x408133
  40817b:	int3   
  40817c:	lock xchg dx,ax
  40817f:	mov    ds:0x4485a6e0,al
  408184:	sbb    bl,BYTE PTR [eax]
  408186:	mov    esp,0x29bd14f7
  40818b:	push   0xf90bf0f8
  408190:	dec    esi
  408191:	sti    
  408192:	or     DWORD PTR [ecx+0x2b],edi
  408195:	fmulp  st(6),st
  408197:	sub    eax,0xa630d8d4
  40819c:	or     BYTE PTR [esi+0x6bfeeb0],0x1f
  4081a3:	shl    DWORD PTR [ebp+0xe783d64],1
  4081a9:	repnz rcl DWORD PTR [eax+edi*8],1
  4081ad:	outs   dx,DWORD PTR ds:[esi]
  4081ae:	rcl    BYTE PTR [edi+0x6f],1
  4081b1:	pop    ecx
  4081b2:	scas   al,BYTE PTR es:[edi]
  4081b3:	add    edi,DWORD PTR ds:0xd85a558a
  4081b9:	jne    0x4081cc
  4081bb:	mov    ecx,0x52bd8acf
  4081c0:	jg     0x4081db
  4081c2:	mov    ds:0x37573156,al
  4081c7:	push   ecx
  4081c8:	inc    eax
  4081c9:	daa    
  4081ca:	dec    edi
  4081cb:	pushw  ds
  4081cd:	jns    0x40818b
  4081cf:	mov    al,0x87
  4081d1:	push   cs
  4081d2:	test   DWORD PTR [ecx-0x2e],ebp
  4081d5:	mov    WORD PTR [edx-0xa],ss
  4081d8:	pop    ds
  4081d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081da:	mov    DWORD PTR [eax+0x35],edi
  4081dd:	jnp    0x40823a
  4081df:	push   esp
  4081e0:	dec    eax
  4081e1:	mov    eax,ds:0x1373c1f6
  4081e6:	fcom   DWORD PTR [esp+eax*4]
  4081e9:	mov    al,0xd9
  4081eb:	jae    0x408267
  4081ed:	scas   eax,DWORD PTR es:[edi]
  4081ee:	xchg   edx,eax
  4081ef:	push   edx
  4081f0:	push   0x5e
  4081f2:	dec    esi
  4081f3:	mov    edx,0xeaa5c139
  4081f8:	cwde   
  4081f9:	adc    dl,BYTE PTR [esi]
  4081fb:	jne    0x408198
  4081fd:	add    BYTE PTR [esi],dl
  4081ff:	aaa    
  408200:	pop    edi
  408201:	(bad)  [eax+ebx*2+0x7a6aa542]
  408208:	loop   0x4081c6
  40820a:	xor    dl,BYTE PTR [ecx]
  40820c:	jno    0x4081b4
  40820e:	mov    esi,DWORD PTR [ebx+0x53]
  408211:	mov    edx,0x96f3c6d5
  408216:	xchg   edi,eax
  408217:	shr    BYTE PTR [eax+0x1b],1
  40821a:	fimul  DWORD PTR [edi+eax*1-0x1e981e2c]
  408221:	aaa    
  408222:	or     esi,DWORD PTR [edi]
  408224:	(bad)  
  408225:	and    eax,0xdcd0493d
  40822a:	cmp    BYTE PTR [edx],dh
  40822c:	repnz adc al,0x0
  40822f:	pushf  
  408230:	add    eax,0x66469e80
  408235:	popf   
  408236:	sub    ch,dh
  408238:	pop    ecx
  408239:	pop    es
  40823a:	dec    eax
  40823b:	cmp    al,0x35
  40823d:	push   edi
  40823e:	call   0x30476bcf
  408243:	mov    edi,0x7797c504
  408248:	call   0xb471:0x61d00b82
  40824f:	mov    ebp,ebp
  408251:	lds    ebp,FWORD PTR [ecx-0x3a9a48ca]
  408257:	stos   DWORD PTR es:[edi],eax
  408258:	scas   ax,WORD PTR es:[edi]
  40825a:	int    0x77
  40825c:	int3   
  40825d:	jmp    0x4081df
  40825f:	rcr    DWORD PTR [edx],cl
  408261:	es and bl,bl
  408264:	out    dx,eax
  408265:	mov    ah,0x67
  408267:	mov    ch,0xd7
  408269:	pop    edx
  40826a:	sbb    al,0xdf
  40826c:	mov    edx,0x7464bb50
  408271:	(bad)  
  408272:	adc    al,0x8e
  408274:	jle    0x40826c
  408276:	jns    0x4082c4
  408278:	xor    ch,dl
  40827a:	sbb    BYTE PTR [ecx],dl
  40827c:	mov    esp,eax
  40827e:	lods   eax,DWORD PTR ds:[esi]
  40827f:	jg     0x40827c
  408281:	test   DWORD PTR [ecx+ebp*2-0x1e],edi
  408285:	outs   dx,BYTE PTR ds:[esi]
  408286:	fldenv [ebx+0xb]
  408289:	hlt    
  40828a:	aas    
  40828b:	xor    edx,DWORD PTR [ebp+0x4d14ce8f]
  408291:	in     eax,0xad
  408293:	outs   dx,DWORD PTR ds:[esi]
  408294:	pop    ds
  408295:	or     DWORD PTR [edx-0x48a9ebc],esp
  40829b:	pop    ecx
  40829c:	shr    bl,1
  40829e:	ficom  WORD PTR [edi+ebp*4]
  4082a1:	jl     0x4082b5
  4082a3:	stc    
  4082a4:	test   BYTE PTR [ebx],0xc1
  4082a7:	ss (bad) 
  4082a9:	lahf   
  4082aa:	shl    DWORD PTR [eax-0x1a9543f],1
  4082b0:	inc    ebx
  4082b1:	push   ecx
  4082b2:	retf   
  4082b3:	mov    ebx,0x3f1aeebc
  4082b8:	outs   dx,BYTE PTR ds:[esi]
  4082b9:	push   0x20
  4082bb:	jns    0x408251
  4082bd:	inc    esi
  4082be:	add    DWORD PTR [edi],esp
  4082c0:	add    eax,0x7828e384
  4082c5:	push   esi
  4082c6:	lods   eax,DWORD PTR ds:[esi]
  4082c7:	repnz enter 0xa288,0xc0
  4082cc:	sti    
  4082cd:	sbb    al,0xd2
  4082cf:	mov    ecx,0x6d78f03e
  4082d4:	in     al,0x30
  4082d6:	mov    eax,ebp
  4082d8:	(bad)  
  4082da:	xor    BYTE PTR [edx+ebp*1+0x31],cl
  4082de:	inc    edx
  4082df:	jmp    0xb838620f
  4082e4:	rol    ecx,cl
  4082e6:	xor    BYTE PTR ds:0x70f5e209,al
  4082ec:	(bad)  
  4082ee:	(bad)  
  4082ef:	xchg   edx,eax
  4082f0:	test   eax,esi
  4082f2:	ret    
  4082f3:	fisttp QWORD PTR [ecx]
  4082f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082f6:	push   ds
  4082f7:	daa    
  4082f8:	xor    dl,BYTE PTR [ebx+0x25]
  4082fb:	xor    ebx,esi
  4082fd:	cmp    BYTE PTR [edi],dl
  4082ff:	mov    ah,0x3a
  408301:	sub    eax,0x2c932a2
  408306:	sbb    BYTE PTR [esi],ch
  408308:	enter  0xe207,0x34
  40830c:	clc    
  40830d:	bound  ebp,QWORD PTR [ebp-0x28]
  408310:	test   al,0xfc
  408312:	or     BYTE PTR [esi-0x5a974ffc],dl
  408318:	shl    BYTE PTR [esi],0xe7
  40831b:	ds sbb al,bl
  40831e:	push   ebp
  40831f:	lods   eax,DWORD PTR ds:[esi]
  408320:	dec    esp
  408321:	mov    dl,0x71
  408323:	das    
  408324:	xchg   ebp,eax
  408325:	sbb    al,dl
  408327:	jp     0x4082e4
  408329:	sti    
  40832a:	sbb    BYTE PTR [ebx-0x26cb370d],bl
  408330:	mov    ds:0xd261989a,al
  408335:	shl    BYTE PTR [edi-0x54],cl
  408338:	pop    eax
  408339:	cmp    al,0x42
  40833b:	or     BYTE PTR ds:0xdefaef77,al
  408341:	fidivr DWORD PTR ds:0xb43446f8
  408347:	stc    
  408348:	icebp  
  408349:	ret    
  40834a:	and    ah,BYTE PTR [ebp+0x2a]
  40834d:	test   BYTE PTR [ebp+esi*2+0x46a05906],0x59
  408355:	jge    0x408357
  408357:	sbb    eax,0x3b26f640
  40835c:	push   edx
  40835d:	cmp    bl,BYTE PTR [eax-0x422e5a61]
  408363:	cli    
  408364:	sub    al,0xd8
  408366:	das    
  408367:	je     0x408323
  408369:	and    BYTE PTR [edx],0x7f
  40836c:	enter  0x3e0a,0xb3
  408370:	mov    bh,0x41
  408372:	dec    BYTE PTR [edx]
  408374:	cmp    al,0x10
  408376:	push   0x45
  408378:	inc    esp
  408379:	adc    bl,BYTE PTR [edx+0x38]
  40837c:	push   ebx
  40837d:	pop    edx
  40837e:	ja     0x4083de
  408380:	out    dx,al
  408381:	sub    esi,DWORD PTR [edx-0x4d5c1730]
  408387:	pop    ebx
  408388:	loop   0x4083a1
  40838a:	or     BYTE PTR [ebp-0x783ff4a3],cl
  408390:	and    dh,BYTE PTR [ecx-0x6e]
  408393:	ins    BYTE PTR es:[edi],dx
  408394:	pcmpeqd mm1,QWORD PTR es:[esi]
  408398:	dec    edi
  408399:	dec    edi
  40839a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40839b:	jae    0x408359
  40839d:	jp     0x4083ae
  40839f:	ds mov eax,0xc1fb84
  4083a5:	popa   
  4083a6:	aaa    
  4083a7:	mov    dl,dl
  4083a9:	xor    esp,DWORD PTR ds:[edi+0x6d]
  4083ad:	les    esi,FWORD PTR [edx]
  4083af:	jbe    0x4083d0
  4083b1:	gs pop ds
  4083b3:	shl    DWORD PTR [ebx-0x1c],0x85
  4083b7:	rcl    BYTE PTR [eax+esi*8+0x5e],1
  4083bb:	lds    ecx,FWORD PTR [ebx-0x5f]
  4083be:	and    ebx,0x99059e0a
  4083c4:	push   esi
  4083c5:	(bad)  
  4083c6:	mov    al,0x7a
  4083c8:	add    eax,0xdae08632
  4083cd:	rcl    WORD PTR [esi+0x69d0d128],0x9c
  4083d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083d6:	int    0xea
  4083d8:	pop    edx
  4083d9:	add    ebx,DWORD PTR [ebp-0x65]
  4083dc:	pop    ds
  4083dd:	mov    bl,0x3e
  4083df:	leave  
  4083e0:	add    esi,edx
  4083e2:	sub    eax,0x1078c7f2
  4083e7:	and    BYTE PTR [edi],0x89
  4083ea:	inc    ecx
  4083eb:	jmp    0xc5a123f3
  4083f0:	fwait
  4083f1:	clc    
  4083f2:	lea    esp,[ebp-0x5a4bd8aa]
  4083f8:	cld    
  4083f9:	icebp  
  4083fa:	mov    ?,si
  4083fd:	js     0x408380
  4083ff:	dec    ebp
  408400:	sub    BYTE PTR ss:[ebx+0x15],0x45
  408405:	jmp    0x13e1dad
  40840a:	dec    edx
  40840b:	xchg   ecx,eax
  40840c:	inc    esp
  40840d:	mov    ebx,0x72de5bdf
  408412:	les    ebx,FWORD PTR [ebx-0x619dda40]
  408418:	xor    DWORD PTR [esi],ebp
  40841a:	loope  0x408425
  40841c:	hlt    
  40841d:	or     al,0x9e
  40841f:	shl    DWORD PTR [edx+0x3c],1
  408422:	jne    0x40843a
  408424:	test   al,0xc2
  408426:	add    dl,BYTE PTR [esi+0x6f125957]
  40842c:	mov    ebp,0x2e9f3fbe
  408431:	out    0x60,eax
  408433:	imul   ebp,DWORD PTR [ebx],0xffffffb6
  408436:	cvtps2pd xmm3,xmm7
  408439:	test   DWORD PTR [eax+0x2a],ebp
  40843c:	call   0xc3d1d510
  408441:	cmp    edx,esp
  408443:	cmp    al,dl
  408445:	sbb    ah,BYTE PTR [ecx-0x56a27bb3]
  40844b:	(bad)  
  40844c:	cmp    eax,0xfd8cb670
  408451:	mov    DWORD PTR [esi+0xcbd0a73],esp
  408457:	push   ss
  408458:	mov    al,ds:0xcc28973
  40845d:	push   esp
  40845e:	scas   eax,DWORD PTR es:[edi]
  40845f:	xlat   BYTE PTR ds:[ebx]
  408460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408461:	mov    edi,0x215a2559
  408466:	rol    DWORD PTR ds:[esi+0x39],0x81
  40846b:	xchg   ebx,eax
  40846c:	lock add BYTE PTR [ebp-0x2fdd4294],0xe2
  408474:	es es test eax,0xde5aedd8
  40847b:	aaa    
  40847c:	mov    ebp,0xf0d84402
  408481:	and    al,0x25
  408483:	in     eax,dx
  408484:	test   DWORD PTR [esp+ecx*8],edi
  408487:	mov    ebx,0x6d469e51
  40848c:	pop    esp
  40848d:	call   0x827c7193
  408492:	fisubr WORD PTR [eax]
  408494:	leave  
  408495:	mov    WORD PTR [edi],ss
  408497:	mov    ds:0x383794b1,al
  40849c:	cmp    al,0x1d
  40849e:	(bad)  
  40849f:	aaa    
  4084a0:	push   ecx
  4084a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a2:	aad    0xd
  4084a4:	inc    esi
  4084a5:	out    0x50,eax
  4084a7:	jb     0x4084da
  4084a9:	push   cs
  4084aa:	xchg   esp,eax
  4084ab:	sbb    DWORD PTR [edx],esp
  4084ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084ae:	mov    eax,ds:0x7bdfc4e4
  4084b3:	mov    al,ds:0x626ba80b
  4084b8:	lods   eax,DWORD PTR ds:[esi]
  4084b9:	into   
  4084ba:	mov    WORD PTR [ebp-0xf],ss
  4084bd:	sub    esp,0x1dab4ce8
  4084c3:	mov    edi,0xc96f4eac
  4084c8:	enter  0x5fbd,0xbe
  4084cc:	jnp    0x408506
  4084ce:	lahf   
  4084cf:	pop    esi
  4084d0:	push   esi
  4084d1:	mov    ecx,0xb61e0abf
  4084d6:	xor    dl,BYTE PTR [eax-0x4]
  4084d9:	add    al,0x6d
  4084db:	xchg   DWORD PTR [edi],ebx
  4084dd:	and    BYTE PTR ds:0x3648c560,ah
  4084e3:	std    
  4084e4:	inc    edx
  4084e5:	aad    0x63
  4084e7:	or     al,0xea
  4084e9:	dec    ecx
  4084ea:	xchg   DWORD PTR [ebx+eiz*2+0x41],ecx
  4084ee:	outs   dx,DWORD PTR ds:[esi]
  4084ef:	mov    esi,0x8f3c78ff
  4084f4:	lods   eax,DWORD PTR ds:[esi]
  4084f5:	loop   0x408550
  4084f7:	fs cli 
  4084f9:	xor    al,0x9d
  4084fb:	imul   eax,esi,0xdd2403be
  408501:	cwde   
  408502:	pop    esp
  408503:	push   esi
  408504:	add    bl,BYTE PTR [esi+ebp*2-0x430ce2a]
  40850b:	enter  0xd7e0,0xa6
  40850f:	adc    eax,0x2d93fdc0
  408514:	and    esp,esp
  408516:	mov    esp,0xb502f0bb
  40851b:	adc    DWORD PTR ds:0x88a65d5b,esi
  408521:	lahf   
  408522:	xchg   ebp,eax
  408523:	out    dx,al
  408524:	call   0xe176:0x783799fa
  40852b:	fwait
  40852c:	lock pop edi
  40852e:	mov    ah,0x9d
  408530:	rol    BYTE PTR [ecx+eax*4-0x10848946],cl
  408537:	popa   
  408538:	stos   BYTE PTR es:[edi],al
  408539:	jnp    0x4085ad
  40853b:	(bad)  
  40853c:	cmp    DWORD PTR [ecx+edx*8-0x4a28c9fc],esp
  408543:	mov    bl,0x88
  408545:	sbb    cl,BYTE PTR [edi]
  408547:	loop   0x4084d9
  408549:	out    dx,al
  40854a:	bound  edx,QWORD PTR [edx]
  40854c:	pop    es
  40854d:	jge    0x40852f
  40854f:	cli    
  408550:	xor    bh,ch
  408552:	inc    ecx
  408553:	push   cs
  408554:	stc    
  408555:	mov    ds:0x305939b2,eax
  40855b:	or     edx,DWORD PTR [ebx+0x6745d419]
  408561:	sbb    eax,0xbbec4aee
  408566:	mov    DWORD PTR [eax+0x13a6d1c6],0xea9bacf6
  408570:	in     al,dx
  408571:	sub    al,0x11
  408573:	or     bl,cl
  408575:	fsub   DWORD PTR [ebx]
  408577:	or     BYTE PTR [ecx],ah
  408579:	clc    
  40857a:	jno    0x40852c
  40857c:	shr    BYTE PTR [ecx-0x6ac14bbe],0xb8
  408583:	(bad)  
  408584:	push   0x9
  408586:	fidivr DWORD PTR [eax+0x4ab0942b]
  40858c:	sbb    al,0x95
  40858e:	stos   DWORD PTR es:[edi],eax
  40858f:	dec    edx
  408590:	jmp    ecx
  408592:	(bad)  
  408593:	stos   DWORD PTR es:[edi],eax
  408594:	int3   
  408595:	lods   eax,DWORD PTR ds:[esi]
  408596:	push   DWORD PTR [edi-0x3c78e394]
  40859c:	fdivr  QWORD PTR [eax-0x12a56983]
  4085a2:	stos   DWORD PTR es:[edi],eax
  4085a3:	adc    DWORD PTR [edi+0xd],edi
  4085a6:	mov    esp,0x224e8c7b
  4085ab:	clc    
  4085ac:	sbb    DWORD PTR [edi+0x35109976],edx
  4085b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085b3:	pop    esp
  4085b4:	loopne 0x408619
  4085b6:	cmp    DWORD PTR ss:[edi],edi
  4085b9:	ffree  st(4)
  4085bb:	into   
  4085bc:	xor    eax,0x4222df59
  4085c1:	in     al,0x70
  4085c3:	and    eax,0x13fc9f6c
  4085c8:	add    eax,0x90a78e84
  4085cd:	adc    cl,BYTE PTR [edi+0x4d1e7340]
  4085d3:	inc    edx
  4085d4:	inc    esp
  4085d5:	sub    al,0x17
  4085d7:	xchg   ebx,eax
  4085d8:	ret    
  4085d9:	pop    ebx
  4085da:	cmp    dl,cl
  4085dc:	jecxz  0x40858a
  4085de:	test   DWORD PTR [eax+edx*2],ebp
  4085e1:	aad    0x61
  4085e3:	mov    eax,ebp
  4085e5:	cmp    bh,ch
  4085e7:	pop    ds
  4085e8:	xchg   ebx,eax
  4085e9:	and    al,0xf7
  4085eb:	pop    esp
  4085ec:	out    dx,al
  4085ed:	mov    dl,0x67
  4085ef:	lods   al,BYTE PTR ds:[esi]
  4085f0:	inc    ebx
  4085f1:	adc    ebx,DWORD PTR [esi+0x36]
  4085f4:	push   ebp
  4085f5:	adc    eax,0x3547dec
  4085fa:	mov    ah,BYTE PTR [ebp-0x4e4953b9]
  408600:	icebp  
  408601:	aas    
  408602:	lock icebp 
  408604:	(bad)  
  408605:	(bad)  
  408606:	(bad)  
  408608:	clc    
  408609:	arpl   WORD PTR [ebp-0x1341cfe5],sp
  40860f:	adc    ah,dl
  408611:	cld    
  408612:	jno    0x4085d6
  408614:	retf   0x501b
  408617:	cmp    eax,0x9037ab4c
  40861c:	push   0x758d54e6
  408621:	xor    ebx,DWORD PTR [ebx+0x6a838c5b]
  408627:	imul   esi,DWORD PTR [ebx+0x2e],0xffffffce
  40862b:	xor    al,0xd
  40862d:	and    DWORD PTR [ecx-0x1277f93b],0x3d
  408634:	les    edi,FWORD PTR [esi]
  408636:	popf   
  408637:	mov    al,ds:0xe51da4a2
  40863c:	ret    0x450d
  40863f:	mov    al,ss:0xd848e2f7
  408645:	(bad)  
  408646:	mov    eax,0xfd13d38b
  40864b:	dec    esi
  40864c:	mov    edi,0xd2f06e0f
  408651:	data16 or al,0x44
  408654:	mov    eax,0x6a3ff617
  408659:	mov    esi,0x4699a735
  40865e:	loop   0x40868d
  408660:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  408662:	mov    cl,0x5a
  408664:	int    0xbd
  408666:	push   edi
  408667:	loop   0x4086b7
  408669:	mov    dh,0x89
  40866b:	sub    DWORD PTR [ebx+0x78],esi
  40866e:	or     ch,dh
  408670:	shr    al,0x98
  408673:	or     bh,dh
  408675:	popf   
  408676:	hlt    
  408677:	ds pop edx
  408679:	mov    cl,BYTE PTR [ebp+0x3aecd0f4]
  40867f:	cmp    eax,0x56368822
  408684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408685:	dec    eax
  408686:	xor    al,0x48
  408688:	test   al,0xb3
  40868a:	jle    0x40866f
  40868c:	mov    esp,0xb88d1831
  408691:	xchg   esp,eax
  408692:	hlt    
  408693:	mov    al,ds:0xca94e268
  408698:	inc    ecx
  408699:	and    ebp,edi
  40869b:	jnp    0x4086f1
  40869d:	jae    0x4086a9
  40869f:	data16 std 
  4086a1:	unpckhps xmm3,XMMWORD PTR [esi-0x76896293]
  4086a8:	lods   al,BYTE PTR ds:[esi]
  4086a9:	loop   0x408651
  4086ab:	dec    eax
  4086ac:	in     al,dx
  4086ad:	inc    eax
  4086ae:	call   0x9886c617
  4086b3:	sub    eax,0xcaf4214c
  4086b8:	jnp    0x4086b8
  4086ba:	dec    edx
  4086bb:	(bad)  
  4086bc:	jg     0x4086ee
  4086be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086bf:	ja     0x4086b2
  4086c1:	hlt    
  4086c2:	(bad)  
  4086c3:	icebp  
  4086c4:	iret   
  4086c5:	cli    
  4086c6:	ss sbb eax,0xbb950e4e
  4086cc:	jge    0x408743
  4086ce:	pop    ebp
  4086cf:	fist   WORD PTR [eax-0xbc3423c]
  4086d5:	cmp    al,0x5d
  4086d7:	rcl    DWORD PTR [ecx],0xa4
  4086da:	cmc    
  4086db:	popf   
  4086dc:	xlat   BYTE PTR ds:[ebx]
  4086dd:	fldenv [edi-0xa]
  4086e0:	pop    esp
  4086e1:	mov    eax,0xcc389863
  4086e6:	xchg   DWORD PTR [ecx-0x12],ecx
  4086e9:	sub    al,0x74
  4086eb:	push   edx
  4086ec:	outs   dx,BYTE PTR ds:[esi]
  4086ed:	clc    
  4086ee:	xor    esi,DWORD PTR [esi+0x7f6237a6]
  4086f4:	xor    BYTE PTR [edx],al
  4086f6:	mov    DWORD PTR [eax+0x2bba6207],ebx
  4086fc:	adc    eax,DWORD PTR [edi*4+0x630bec09]
  408703:	mov    edi,0x1e6357e9
  408708:	sar    BYTE PTR [ecx],cl
  40870a:	icebp  
  40870b:	retf   0x845d
  40870e:	dec    eax
  40870f:	inc    esi
  408710:	cmp    DWORD PTR [edx],ebp
  408712:	jmp    0x4086dc
  408714:	adc    bl,BYTE PTR [eax-0x3442ce56]
  40871a:	shr    BYTE PTR [edx],0xce
  40871d:	push   es
  40871e:	mov    WORD PTR [esi],gs
  408720:	mov    DWORD PTR [edi-0x2e5b3b39],ecx
  408726:	or     eax,0xc7ef6eed
  40872b:	xor    BYTE PTR [edx-0x7b],dh
  40872e:	jecxz  0x4086be
  408730:	jmp    0x408768
  408732:	sbb    DWORD PTR [ebx-0x14],0xffffffa2
  408736:	mov    ah,BYTE PTR [ecx]
  408738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408739:	mov    dh,0x87
  40873b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40873c:	jge    0x408729
  40873e:	xor    DWORD PTR [edx],0x7c
  408741:	imul   cl
  408743:	cli    
  408744:	repnz cmp al,0x5c
  408747:	cmp    eax,0x1f178add
  40874c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40874d:	jo     0x4087a6
  40874f:	jbe    0x4086ed
  408751:	sub    DWORD PTR ds:0xde7eb13e,0x99d9edd4
  40875b:	clc    
  40875c:	mov    bl,BYTE PTR [esp+eiz*8+0x30]
  408760:	jle    0x4086ed
  408762:	mov    ebx,0x306a29c6
  408767:	je     0x4087a5
  408769:	mov    eax,0x728d6f42
  40876e:	outs   dx,BYTE PTR ds:[esi]
  40876f:	hlt    
  408770:	mov    ds:0x7497efd9,eax
  408775:	shr    DWORD PTR [esi],cl
  408777:	cmc    
  408778:	jge    0x4087a3
  40877a:	add    eax,0xd5ff3351
  40877f:	pusha  
  408780:	pushf  
  408781:	out    dx,eax
  408782:	fadd   QWORD PTR [edx+0x78d7b7a5]
  408788:	mov    cl,0xee
  40878a:	add    esp,DWORD PTR [eax-0x6f]
  40878d:	and    eax,0xb432386a
  408792:	mov    bh,0xc9
  408794:	inc    ecx
  408795:	shl    BYTE PTR [esi+esi*8+0x45c05e7f],0x5c
  40879d:	xlat   BYTE PTR ds:[ebx]
  40879e:	dec    ecx
  40879f:	fs nop
  4087a1:	or     cl,al
  4087a3:	sbb    al,0x67
  4087a5:	sbb    eax,0x1ae56a31
  4087aa:	ret    
  4087ab:	shr    ecx,cl
  4087ad:	call   0xf07cf7e6
  4087b2:	and    edi,DWORD PTR [ebp-0x9]
  4087b5:	rol    BYTE PTR [ebx+0x55],cl
  4087b8:	in     al,0x76
  4087ba:	mov    al,ds:0x4d239a33
  4087bf:	jmp    0x40874d
  4087c1:	inc    esi
  4087c2:	mov    bl,0x8a
  4087c4:	outs   dx,BYTE PTR ds:[esi]
  4087c5:	pop    edi
  4087c6:	or     eax,0x50e3aef9
  4087cb:	jle    0x408759
  4087cd:	jecxz  0x4087bc
  4087cf:	loop   0x4087de
  4087d1:	push   ebx
  4087d2:	ror    DWORD PTR [edx+0x45],1
  4087d5:	mov    bl,0x5b
  4087d7:	cmp    al,0x3e
  4087d9:	add    al,0x62
  4087db:	retf   
  4087dc:	clc    
  4087dd:	mov    al,0xb7
  4087df:	repnz mov dh,0xad
  4087e2:	jno    0x408816
  4087e4:	xchg   ecx,eax
  4087e5:	and    eax,0x8ad7f7a4
  4087ea:	je     0x408798
  4087ec:	push   edx
  4087ed:	jl     0x4087f5
  4087ef:	inc    eax
  4087f0:	loop   0x408784
  4087f2:	sbb    bl,BYTE PTR [eax-0x42]
  4087f5:	xor    ecx,edx
  4087f7:	inc    edx
  4087f8:	xchg   BYTE PTR [edi+0x1a58b9f6],bl
  4087fe:	test   al,0xca
  408800:	mov    es,WORD PTR [edi+0x72]
  408803:	adc    al,0xe1
  408805:	adc    esi,DWORD PTR [ebx-0x7b]
  408808:	or     al,0x6f
  40880a:	mov    BYTE PTR [ecx],ch
  40880c:	ret    0x1f29
  40880f:	in     al,dx
  408810:	pop    ds
  408811:	push   cs
  408812:	push   ebx
  408813:	mov    ch,0x5a
  408815:	ror    DWORD PTR [esi+0x32fe66fe],0x53
  40881c:	fdivr  DWORD PTR [ebx-0x34]
  40881f:	xor    BYTE PTR [edi+ecx*8-0x22e660e0],dh
  408826:	ret    
  408827:	and    DWORD PTR [edx+0x6caed380],esp
  40882d:	xchg   DWORD PTR [edx-0x77eff196],ecx
  408833:	lods   al,BYTE PTR ds:[esi]
  408834:	inc    esi
  408835:	mov    ebp,0xa74269c9
  40883a:	push   0xb7ea8a48
  40883f:	dec    eax
  408840:	sub    eax,0x422a2958
  408845:	mov    esp,0xa92520eb
  40884a:	int    0x24
  40884c:	sub    eax,0x8e2af0bc
  408851:	ds sub edi,ebx
  408854:	enter  0xe740,0x63
  408858:	iret   
  408859:	in     eax,dx
  40885a:	or     ecx,DWORD PTR [edi-0x67e09131]
  408860:	mov    ebp,0x28c411ea
  408865:	mov    BYTE PTR [ecx+ebx*2+0x57],ah
  408869:	or     esi,DWORD PTR [ebx+0x8eadf25]
  40886f:	repz add eax,0xc8ad4426
  408875:	popf   
  408876:	jae    0x408838
  408878:	cld    
  408879:	sbb    ebx,DWORD PTR [edx]
  40887b:	ret    0xd698
  40887e:	push   edi
  40887f:	add    bh,BYTE PTR [esi-0x3274d89a]
  408885:	fsub   QWORD PTR [ebx-0x203fcc01]
  40888b:	pop    eax
  40888c:	xor    edi,esp
  40888e:	cld    
  40888f:	adc    DWORD PTR [ecx+ebp*8],0x47
  408893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408894:	jo     0x40884c
  408896:	sub    DWORD PTR [ebx-0x7c],ebx
  408899:	(bad)  
  40889a:	popa   
  40889b:	pop    esp
  40889c:	pop    eax
  40889d:	enter  0xedfc,0x46
  4088a1:	mov    eax,0x3e001729
  4088a6:	mov    ebp,0x8d6310ee
  4088ab:	ss push edi
  4088ad:	cli    
  4088ae:	inc    edi
  4088af:	jge    0x40886c
  4088b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088b2:	popa   
  4088b3:	idiv   cl
  4088b5:	pop    edx
  4088b6:	dec    eax
  4088b7:	ret    0xfee6
  4088ba:	sti    
  4088bb:	xchg   ebx,eax
  4088bc:	inc    ecx
  4088bd:	mov    cl,0x72
  4088bf:	sub    al,0x80
  4088c1:	pop    es
  4088c2:	ficom  WORD PTR [ecx+eax*4+0x4e]
  4088c6:	jp     0x408894
  4088c8:	shl    DWORD PTR [eax+0x2b],0xf8
  4088cc:	mov    dh,0x4b
  4088ce:	lds    edi,FWORD PTR [esi]
  4088d0:	mov    al,ds:0x6bc74ea9
  4088d5:	xchg   DWORD PTR [ebx],esp
  4088d7:	jbe    0x40892a
  4088d9:	mov    edx,0xedef57c5
  4088de:	pop    ss
  4088df:	push   ebp
  4088e0:	add    al,0x6a
  4088e2:	shl    DWORD PTR [edx+0x1434ad48],0xb3
  4088e9:	sub    DWORD PTR [esi+0x5],ecx
  4088ec:	ror    eax,cl
  4088ee:	(bad)  
  4088ef:	sub    DWORD PTR ds:0x441ea7ef,eax
  4088f5:	outs   dx,DWORD PTR ds:[esi]
  4088f6:	xchg   ebx,eax
  4088f7:	outs   dx,BYTE PTR ds:[esi]
  4088f8:	pop    ds
  4088f9:	pushf  
  4088fa:	stos   DWORD PTR es:[edi],eax
  4088fb:	xor    al,bh
  4088fd:	idiv   ecx
  4088ff:	xchg   ecx,eax
  408900:	lods   eax,DWORD PTR ds:[esi]
  408901:	sti    
  408902:	aad    0x8
  408904:	pop    ebx
  408905:	repz push 0xffffffc9
  408908:	pop    ebx
  408909:	sbb    DWORD PTR [ebx-0x64],edx
  40890c:	sub    dl,BYTE PTR [ebp-0x7a9fa710]
  408912:	adc    esi,DWORD PTR [esi+0x5d]
  408915:	jns    0x4088af
  408917:	fwait
  408918:	and    DWORD PTR [edi-0x66],esp
  40891b:	call   0x8258:0x979d781a
  408922:	or     BYTE PTR [eax+0x3a],cl
  408925:	(bad)  
  408926:	adc    cl,ah
  408928:	je     0x408919
  40892a:	mov    cl,0x7e
  40892c:	push   edi
  40892d:	adc    dh,dh
  40892f:	jno    0x408959
  408931:	sbb    eax,0x322e9ee8
  408936:	add    eax,0xc74091e7
  40893b:	xchg   esi,eax
  40893c:	addr16 push 0x5b
  40893f:	mov    BYTE PTR [ecx],cl
  408941:	ss xchg ebp,eax
  408943:	mov    ds:0x1f56eca5,al
  408948:	nop
  408949:	push   esp
  40894a:	jo     0x40895f
  40894c:	dec    esi
  40894d:	sub    dl,dh
  40894f:	sbb    BYTE PTR gs:[ecx+0x15],dl
  408953:	pop    edi
  408954:	pushf  
  408955:	mov    esi,0x3328d91b
  40895a:	out    0x81,al
  40895c:	jmp    0x408995
  40895e:	add    cl,BYTE PTR [ebx+0x62]
  408961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408962:	bound  ebx,QWORD PTR [edx]
  408964:	add    BYTE PTR [ebp+0x49],cl
  408967:	inc    ebp
  408968:	adc    dh,BYTE PTR [ecx-0xf]
  40896b:	sti    
  40896c:	fisubr DWORD PTR [ecx-0x62]
  40896f:	leave  
  408970:	popa   
  408971:	xchg   esi,eax
  408972:	ds mov cl,0x4c
  408975:	jno    0x40891c
  408977:	mov    al,0x3f
  408979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40897a:	int    0xe5
  40897c:	addr16 mov ah,ah
  40897f:	and    ah,BYTE PTR [edx+0x62]
  408982:	lock mov BYTE PTR [esp+edi*1-0x58ed5a73],dh
  40898a:	push   esi
  40898b:	icebp  
  40898c:	pop    esp
  40898d:	push   ebx
  40898e:	stos   BYTE PTR es:[edi],al
  40898f:	std    
  408990:	in     al,dx
  408991:	sbb    ebx,DWORD PTR [eax]
  408993:	sbb    esp,DWORD PTR ds:0x96676c19
  408999:	inc    eax
  40899a:	xchg   edx,eax
  40899b:	hlt    
  40899c:	inc    ecx
  40899d:	aaa    
  40899e:	psubsw mm0,QWORD PTR [ecx+0x1f536471]
  4089a5:	lock or bl,al
  4089a8:	loopne 0x4089fa
  4089aa:	cmp    BYTE PTR [esi-0x3b06cb72],dh
  4089b0:	and    bl,bh
  4089b2:	scas   al,BYTE PTR es:[edi]
  4089b3:	or     al,dh
  4089b5:	cmp    al,0x28
  4089b7:	(bad)  
  4089b8:	loope  0x408946
  4089ba:	lahf   
  4089bb:	lods   eax,DWORD PTR ds:[esi]
  4089bc:	test   eax,0x84f3d712
  4089c1:	hlt    
  4089c2:	js     0x408a01
  4089c4:	mov    eax,ds:0xebf073c0
  4089c9:	jae    0x4089ce
  4089cb:	daa    
  4089cc:	rcr    DWORD PTR [edx],cl
  4089ce:	popa   
  4089cf:	xchg   esi,eax
  4089d0:	push   0xfffffff8
  4089d2:	inc    esp
  4089d3:	and    ch,bl
  4089d5:	out    0xf2,eax
  4089d7:	test   BYTE PTR [eax+0x4a],bh
  4089da:	xchg   edi,eax
  4089db:	dec    esp
  4089dc:	stos   DWORD PTR es:[edi],eax
  4089dd:	push   esi
  4089de:	pop    esi
  4089df:	std    
  4089e0:	popf   
  4089e1:	shl    DWORD PTR [ebp+0x25],cl
  4089e4:	sbb    edx,DWORD PTR [esi-0x5]
  4089e7:	loope  0x4089d7
  4089e9:	dec    edi
  4089ea:	xchg   ebp,eax
  4089eb:	jns    0x408a47
  4089ed:	std    
  4089ee:	(bad)  
  4089ef:	or     ch,BYTE PTR [edi-0x62]
  4089f2:	fisubr DWORD PTR [ecx]
  4089f4:	pop    edi
  4089f5:	out    dx,eax
  4089f6:	nop
  4089f7:	leave  
  4089f8:	push   ebx
  4089f9:	mov    WORD PTR [ecx+0x53374ab2],gs
  4089ff:	dec    edx
  408a00:	scas   eax,DWORD PTR es:[edi]
  408a01:	mov    ecx,0x7aa255ef
  408a06:	push   ecx
  408a07:	push   DWORD PTR ds:0x94a6e25e
  408a0d:	mov    WORD PTR [edi+0x33],ss
  408a10:	adc    DWORD PTR [ebx-0xeeb10bd],0x3a
  408a17:	daa    
  408a18:	push   ds
  408a19:	(bad)  
  408a1a:	les    esp,FWORD PTR [ebx+0x20b51ee7]
  408a20:	jecxz  0x408a96
  408a22:	jecxz  0x408a0b
  408a24:	mov    esp,DWORD PTR [edi+ebx*2]
  408a27:	mov    bh,0xbd
  408a29:	out    dx,al
  408a2a:	lea    esp,[edx-0x39]
  408a2d:	adc    eax,0xca84962c
  408a32:	push   edx
  408a33:	mov    esp,?
  408a35:	test   eax,eax
  408a37:	dec    edi
  408a38:	imul   edx,edi,0x11
  408a3b:	push   edi
  408a3c:	int3   
  408a3d:	jno    0x408a4b
  408a3f:	aad    0x19
  408a41:	dec    esi
  408a42:	jecxz  0x408a6f
  408a44:	pop    ss
  408a45:	jnp    0x408ab8
  408a47:	sbb    DWORD PTR [eax-0x76],0x3c09f798
  408a4e:	pop    edx
  408a4f:	ret    
  408a50:	inc    eax
  408a51:	mov    ebp,0x57e5522e
  408a56:	adc    DWORD PTR [edx-0xf],edx
  408a59:	ins    BYTE PTR es:[edi],dx
  408a5a:	aaa    
  408a5b:	xchg   edi,eax
  408a5c:	dec    ebx
  408a5d:	jmp    0x408a93
  408a5f:	mov    esp,0x7ff49744
  408a64:	adc    al,0xbb
  408a66:	jg     0x408a86
  408a68:	inc    esi
  408a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a6a:	(bad)  
  408a6b:	pop    ss
  408a6c:	cmp    ch,bh
  408a6e:	cld    
  408a6f:	and    BYTE PTR [ecx],bh
  408a71:	add    DWORD PTR [ebp-0x4648b7bd],ebx
  408a77:	push   0x7f
  408a79:	cmp    BYTE PTR [eax+ecx*2+0x6499e5c0],0x89
  408a81:	popf   
  408a82:	pop    ebp
  408a83:	wbinvd 
  408a85:	loopne 0x408a71
  408a87:	lds    esp,FWORD PTR [edi]
  408a89:	push   eax
  408a8a:	dec    ecx
  408a8b:	les    edi,FWORD PTR [ecx]
  408a8d:	in     al,0x4d
  408a8f:	out    dx,al
  408a90:	xchg   edx,eax
  408a91:	test   dl,al
  408a93:	lock sub bl,0x20
  408a97:	xor    edi,DWORD PTR ds:0x7bf0f20a
  408a9d:	lock add edi,edi
  408aa0:	xor    BYTE PTR [ecx+0x5c],dl
  408aa3:	push   ds
  408aa4:	popa   
  408aa5:	mov    dh,0x5
  408aa7:	adc    eax,0x97760007
  408aac:	adc    ebx,DWORD PTR [ecx+edx*2]
  408aaf:	jecxz  0x408b0c
  408ab1:	jae    0x408a47
  408ab3:	cmp    ch,BYTE PTR [edx-0x126b3779]
  408ab9:	mov    esi,0xea0e31d5
  408abe:	inc    ebp
  408abf:	cmp    eax,0xd38947b9
  408ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ac5:	jne    0x408b2e
  408ac7:	sbb    eax,0x3360da3c
  408acc:	out    0x6b,eax
  408ace:	xlat   BYTE PTR ds:[ebx]
  408acf:	dec    eax
  408ad0:	mov    es,WORD PTR [ebx]
  408ad2:	mov    bl,0xe
  408ad4:	das    
  408ad5:	push   esp
  408ad6:	rcl    DWORD PTR [esi+0x56],0x66
  408ada:	sbb    al,0x4
  408adc:	xor    BYTE PTR [ecx-0x71],0xa6
  408ae0:	out    dx,al
  408ae1:	dec    edx
  408ae2:	out    0xb9,al
  408ae4:	lock leave 
  408ae6:	aas    
  408ae7:	into   
  408ae8:	add    dh,0x37
  408aeb:	inc    esi
  408aec:	or     al,0x10
  408aee:	test   BYTE PTR [edx],ch
  408af0:	das    
  408af1:	add    eax,0x60f26996
  408af6:	cld    
  408af7:	fisub  WORD PTR [ecx]
  408af9:	in     eax,0x10
  408afb:	pop    edx
  408afc:	adc    bh,al
  408afe:	mov    dh,0x8d
  408b00:	mov    bl,0x82
  408b02:	pop    ss
  408b03:	mov    BYTE PTR ds:0x62e683f8,bh
  408b09:	xchg   ebp,eax
  408b0a:	sbb    eax,0xa2983d33
  408b0f:	push   es
  408b10:	js     0x408ae3
  408b12:	lods   al,BYTE PTR ds:[esi]
  408b13:	inc    edi
  408b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b15:	nop
  408b16:	(bad)  
  408b17:	cs scas eax,DWORD PTR es:[edi]
  408b19:	pop    esp
  408b1a:	mov    ds:0x42135f06,eax
  408b1f:	xor    DWORD PTR [eax-0x36],esp
  408b22:	dec    esp
  408b23:	adc    BYTE PTR [edi],bl
  408b25:	or     edx,DWORD PTR [edi-0x6]
  408b28:	mov    ds:0x6d5eab94,al
  408b2d:	stos   DWORD PTR es:[edi],eax
  408b2e:	lahf   
  408b2f:	sbb    eax,0x3fb1c230
  408b34:	sub    ch,ch
  408b36:	inc    ebx
  408b37:	mov    ebp,0x75482ff3
  408b3c:	mov    ebp,0xbd7471b2
  408b41:	in     eax,dx
  408b42:	pop    ds
  408b43:	push   ecx
  408b44:	sub    al,0x7a
  408b46:	es xor al,0xba
  408b49:	xchg   ebp,eax
  408b4a:	add    BYTE PTR [ebp-0x33],bh
  408b4d:	add    esp,0x2bbd7367
  408b53:	cmp    BYTE PTR [esp+eax*1-0x794dadc2],bl
  408b5a:	dec    edi
  408b5b:	stos   BYTE PTR es:[edi],al
  408b5c:	js     0x408b4e
  408b5e:	ss add al,0x81
  408b61:	inc    esp
  408b62:	ins    BYTE PTR es:[edi],dx
  408b63:	xor    dl,BYTE PTR [edi]
  408b65:	xor    ebp,DWORD PTR [ebp-0x46128a09]
  408b6b:	mov    cl,0xdb
  408b6d:	scas   eax,DWORD PTR es:[edi]
  408b6e:	sbb    BYTE PTR [ecx],bl
  408b70:	mov    esi,0x9fdcc06f
  408b75:	pusha  
  408b76:	arpl   WORD PTR [ebx],dx
  408b78:	mov    DWORD PTR [esi-0x1e],eax
  408b7b:	(bad)  
  408b7c:	leave  
  408b7d:	retf   0xe2cb
  408b80:	(bad)  
  408b81:	pop    edi
  408b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b83:	xor    eax,esi
  408b85:	adc    dl,BYTE PTR [edi-0x7a30cf3c]
  408b8b:	lds    edi,FWORD PTR [ebx]
  408b8d:	and    ch,al
  408b8f:	mov    WORD PTR [ecx-0x40],es
  408b92:	push   esi
  408b93:	lea    edi,[ecx]
  408b95:	and    bl,BYTE PTR [esp-0x78e1a251]
  408b9c:	shl    BYTE PTR [edi+0x4ec8cf50],cl
  408ba2:	dec    edi
  408ba3:	cli    
  408ba4:	fs call 0x3ce9a8e4
  408baa:	jp     0x408bd6
  408bac:	enter  0xc3e8,0xf8
  408bb0:	(bad)  
  408bb1:	lahf   
  408bb2:	mov    ebx,0xd778518f
  408bb7:	xlat   BYTE PTR ds:[ebx]
  408bb8:	jns    0x408bbf
  408bba:	(bad)  [edx+0x47]
  408bbd:	(bad)  
  408bbe:	(bad)  
  408bbf:	popa   
  408bc0:	pop    ebp
  408bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bc2:	sbb    al,0x7a
  408bc4:	(bad)  
  408bc5:	fsubr  st(4),st
  408bc7:	mov    al,BYTE PTR [ebx]
  408bc9:	push   esi
  408bca:	stc    
  408bcb:	push   edx
  408bcc:	lahf   
  408bcd:	int    0xba
  408bcf:	xchg   BYTE PTR [edx-0x23166c5d],bl
  408bd5:	jbe    0x408bac
  408bd7:	add    DWORD PTR [esp+eax*2],eax
  408bda:	pop    ss
  408bdb:	inc    edi
  408bdc:	popf   
  408bdd:	retf   
  408bde:	jmp    0xc17dfa7d
  408be3:	push   eax
  408be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408be5:	mov    al,ds:0x8a191694
  408bea:	scas   eax,DWORD PTR es:[edi]
  408beb:	stos   DWORD PTR es:[edi],eax
  408bec:	jmp    0x408bbf
  408bee:	out    dx,al
  408bef:	outs   dx,BYTE PTR ds:[esi]
  408bf0:	cdq    
  408bf1:	js     0x408c41
  408bf3:	mov    bl,0x72
  408bf5:	dec    ebp
  408bf6:	mov    bh,0x10
  408bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf9:	imul   ecx,DWORD PTR [eax],0xb5cedc7b
  408bff:	mov    esp,0x6f7adc29
  408c04:	add    esi,eax
  408c06:	inc    edi
  408c07:	fnstenv [edi]
  408c09:	jmp    0x408bce
  408c0b:	cmp    BYTE PTR [ebx+eiz*4],ch
  408c0e:	and    DWORD PTR [edx+0x20],ebp
  408c11:	mov    dl,0x19
  408c13:	in     eax,dx
  408c14:	jb     0x408c8a
  408c16:	dec    edi
  408c17:	pop    edx
  408c18:	or     esi,edi
  408c1a:	jp     0x408c82
  408c1c:	xor    eax,0xfae306f6
  408c21:	pop    ebp
  408c22:	stc    
  408c23:	and    al,0x94
  408c25:	inc    ebx
  408c26:	mov    bh,0x8a
  408c28:	jmp    0x1f85d52c
  408c2d:	(bad)  
  408c2e:	dec    esp
  408c2f:	jmp    0x408c2d
  408c31:	retf   0x5016
  408c34:	in     eax,dx
  408c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c36:	scas   al,BYTE PTR es:[edi]
  408c37:	xchg   BYTE PTR [edi+0x79],ch
  408c3a:	cmp    ebx,DWORD PTR [ebx-0x403860ec]
  408c40:	jle    0x408c15
  408c42:	pusha  
  408c43:	(bad)  
  408c44:	sti    
  408c45:	(bad)  
  408c46:	sbb    DWORD PTR [eax-0x1d],eax
  408c49:	mov    cl,0x84
  408c4b:	xlat   BYTE PTR ds:[ebx]
  408c4c:	fidiv  WORD PTR [ecx+0x25c66ac7]
  408c52:	push   ecx
  408c53:	sub    esp,DWORD PTR [edi+0x7bf9bda7]
  408c59:	dec    edi
  408c5a:	cmc    
  408c5b:	mov    eax,0x8fcfa09b
  408c60:	xor    DWORD PTR [di-0x5154],esp
  408c65:	cwde   
  408c66:	dec    ebp
  408c67:	rcl    edi,1
  408c69:	call   0xf8c361ae
  408c6e:	sub    al,0x49
  408c70:	test   BYTE PTR [ebp+0x39],dl
  408c73:	jns    0x408caf
  408c75:	idiv   edx
  408c77:	push   0xaedaccd4
  408c7c:	sbb    DWORD PTR [ecx],esi
  408c7e:	inc    edx
  408c7f:	dec    edi
  408c80:	inc    ebx
  408c81:	cmp    esi,DWORD PTR [ebp-0x4abba2c4]
  408c87:	xlat   BYTE PTR ds:[ebx]
  408c88:	jg     0x408c38
  408c8a:	rcr    BYTE PTR [edi*1-0x4d52c1fb],cl
  408c91:	fcmovb st,st(2)
  408c93:	std    
  408c94:	xchg   BYTE PTR [ebx+0x79a4e7e6],dh
  408c9a:	ja     0x408c46
  408c9c:	test   dh,0x25
  408c9f:	mov    al,ds:0xc27cbbe2
  408ca4:	popa   
  408ca5:	in     al,0x4c
  408ca7:	mov    eax,0x613f7c6f
  408cac:	in     eax,0x15
  408cae:	mov    ebp,0xa063865
  408cb3:	or     ebp,esp
  408cb5:	(bad)  
  408cb6:	xor    ch,BYTE PTR [edx-0x4c686529]
  408cbc:	stos   BYTE PTR es:[edi],al
  408cbd:	fnsave [edx-0x23]
  408cc0:	mov    WORD PTR gs:[esi+0x5b],cs
  408cc4:	xor    DWORD PTR [eax],esp
  408cc6:	in     eax,0xcf
  408cc8:	rcr    DWORD PTR [ebx+edi*2-0x7d0b7fd2],1
  408ccf:	sub    esp,ebx
  408cd1:	scas   al,BYTE PTR es:[edi]
  408cd2:	dec    edx
  408cd3:	fucom  st(0)
  408cd5:	push   cs
  408cd6:	pop    edx
  408cd7:	popa   
  408cd8:	mov    BYTE PTR ds:0xd40121c5,0xd0
  408cdf:	inc    ebp
  408ce0:	lds    edi,FWORD PTR [eax-0x7]
  408ce3:	add    DWORD PTR [ebx+0x6f],ecx
  408ce6:	dec    ecx
  408ce7:	int    0x4a
  408ce9:	jo     0x408d3b
  408ceb:	sub    eax,0xe92c980
  408cf0:	xor    al,0xbe
  408cf2:	sbb    dh,ch
  408cf4:	fst    QWORD PTR [ecx+0x68ba4669]
  408cfa:	push   ebp
  408cfb:	mov    ebp,0xe5d85db8
  408d00:	push   cs
  408d01:	(bad)  
  408d02:	out    dx,al
  408d03:	cdq    
  408d04:	loope  0x408cdb
  408d06:	enter  0x5b4f,0xda
  408d0a:	loope  0x408ca6
  408d0c:	cmp    cl,BYTE PTR [ecx+0x1b]
  408d0f:	in     al,dx
  408d10:	sbb    al,0x2f
  408d12:	ja     0x408cb7
  408d14:	aas    
  408d15:	xchg   edi,eax
  408d16:	ins    BYTE PTR es:[edi],dx
  408d17:	xchg   ebx,eax
  408d18:	inc    edi
  408d19:	mov    al,0x70
  408d1b:	leave  
  408d1c:	dec    ecx
  408d1d:	adc    al,0x96
  408d1f:	scas   al,BYTE PTR es:[edi]
  408d20:	sub    BYTE PTR fs:[bx+0x3c50],ah
  408d26:	inc    esi
  408d27:	call   0x7fd3:0x44b6b270
  408d2e:	cmp    BYTE PTR [ebx-0x64],dh
  408d31:	dec    esi
  408d32:	cs jae 0x408cbb
  408d35:	retf   
  408d36:	loop   0x408db6
  408d38:	push   0x15777fe1
  408d3d:	sbb    eax,0xd0b3da8
  408d42:	pop    edx
  408d43:	mov    eax,0xfc155744
  408d48:	aam    0x23
  408d4a:	(bad)  
  408d4c:	pop    eax
  408d4d:	dec    esp
  408d4e:	repz loop 0x408dc1
  408d51:	and    BYTE PTR [edx],bh
  408d53:	dec    esi
  408d54:	(bad)  
  408d55:	sub    al,0xab
  408d57:	lods   eax,DWORD PTR ds:[esi]
  408d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d59:	push   ebp
  408d5a:	sub    DWORD PTR [ebx],0x2
  408d5d:	ins    BYTE PTR es:[edi],dx
  408d5e:	imul   edx,DWORD PTR [eax-0x50],0xc0955f62
  408d65:	sub    al,0x2f
  408d67:	scas   eax,DWORD PTR es:[edi]
  408d68:	fdiv   st,st(0)
  408d6a:	dec    edi
  408d6b:	push   ss
  408d6c:	inc    esp
  408d6d:	adc    DWORD PTR [ecx],eax
  408d6f:	sahf   
  408d70:	stos   DWORD PTR es:[edi],eax
  408d71:	ins    DWORD PTR es:[edi],dx
  408d72:	(bad)  
  408d73:	adc    ah,bl
  408d75:	jne    0x408d6c
  408d77:	xor    DWORD PTR [ebx+0x64],esi
  408d7a:	mov    ch,BYTE PTR [ecx+ebx*4]
  408d7d:	iret   
  408d7e:	fbstp  TBYTE PTR [eax+0x360a75d6]
  408d84:	xchg   ecx,eax
  408d85:	data16 adc al,0xb3
  408d88:	es push ebx
  408d8a:	inc    ebx
  408d8b:	arpl   WORD PTR ss:[esi],ax
  408d8e:	jb     0x408d8e
  408d90:	sbb    al,0xce
  408d92:	scas   eax,DWORD PTR es:[edi]
  408d93:	imul   edi,DWORD PTR [ebx+0x6],0xee5f6c1
  408d9a:	loop   0x408df0
  408d9c:	les    edx,FWORD PTR [eax]
  408d9e:	gs cmp eax,0x79d42709
  408da4:	sahf   
  408da5:	out    0x87,al
  408da7:	dec    ebx
  408da8:	dec    esi
  408da9:	ds push ss
  408dab:	or     eax,0xa7484439
  408db0:	xor    dh,0xda
  408db3:	pop    ebp
  408db4:	mov    ebp,0xc3e99d63
  408db9:	pop    ds
  408dba:	push   esp
  408dbb:	pop    ebp
  408dbc:	pushf  
  408dbd:	imul   eax,edi,0xb057b4a6
  408dc3:	and    eax,0xbd3317fa
  408dc8:	jo     0x408d64
  408dca:	pop    ss
  408dcb:	std    
  408dcc:	adc    DWORD PTR [edi],ebx
  408dce:	in     al,0x59
  408dd0:	inc    ebp
  408dd1:	fwait
  408dd2:	loopne 0x408e12
  408dd4:	pop    edi
  408dd5:	or     ecx,eax
  408dd7:	scas   al,BYTE PTR es:[edi]
  408dd8:	push   ecx
  408dd9:	inc    ecx
  408dda:	pop    ecx
  408ddb:	xor    BYTE PTR [ebp+0x5d617aa5],0x52
  408de2:	inc    edi
  408de3:	popf   
  408de4:	adc    DWORD PTR [edi+eax*4-0x25acf995],edx
  408deb:	imul   ebp,DWORD PTR [esp+eiz*8+0x1],0x7ea46ef0
  408df3:	mov    WORD PTR [ecx],gs
  408df5:	fadd   st(4),st
  408df7:	and    esp,eax
  408df9:	adc    al,0xc0
  408dfb:	(bad)  
  408dfc:	out    dx,al
  408dfd:	sub    ecx,DWORD PTR [ebx-0x1af7fd25]
  408e03:	std    
  408e04:	and    bl,ch
  408e06:	adc    BYTE PTR [esi],0xd3
  408e09:	fimul  WORD PTR [ebp-0x78]
  408e0c:	pop    ecx
  408e0d:	repz and ch,BYTE PTR [ecx-0x5c766abd]
  408e14:	jnp    0xcebea000
  408e1a:	call   0x905ec3e8
  408e1f:	mov    ebp,0xc190aec0
  408e24:	inc    eax
  408e25:	fld    DWORD PTR [edi]
  408e27:	jno    0x408e92
  408e29:	in     eax,dx
  408e2a:	xchg   esi,eax
  408e2b:	gs push esi
  408e2d:	inc    ebx
  408e2e:	adc    BYTE PTR [esi+0x74],cl
  408e31:	and    eax,0x61ffe682
  408e36:	in     eax,0xf2
  408e38:	jns    0x408e5b
  408e3a:	out    dx,al
  408e3b:	dec    cl
  408e3d:	adc    bh,BYTE PTR [edi-0x49d9a40f]
  408e43:	gs (bad) 
  408e45:	jge    0x408eaa
  408e47:	push   eax
  408e48:	sub    esi,ebp
  408e4a:	leave  
  408e4b:	or     al,0x6
  408e4d:	jb     0x408e70
  408e4f:	pop    eax
  408e50:	pop    ecx
  408e51:	cld    
  408e52:	xor    eax,0x650debf8
  408e57:	dec    ecx
  408e58:	lods   al,BYTE PTR ds:[esi]
  408e59:	arpl   WORD PTR [ebx+esi*8-0x47c37ef3],bp
  408e60:	ret    
  408e61:	mov    ecx,0x624b7284
  408e66:	jnp    0x408e15
  408e68:	leave  
  408e69:	cmp    DWORD PTR [eax],edx
  408e6b:	dec    edx
  408e6d:	adc    al,0x3e
  408e6f:	(bad)  
  408e70:	das    
  408e71:	jmp    0x44fd:0x2e06a4ee
  408e78:	lods   al,BYTE PTR ds:[esi]
  408e79:	xchg   DWORD PTR [eax+0x38626c75],edx
  408e7f:	mov    cl,0x6c
  408e81:	xor    DWORD PTR [ebx-0x36bde60a],esp
  408e87:	fs je  0x408e69
  408e8a:	add    BYTE PTR [edi+0x6d],dh
  408e8d:	cdq    
  408e8e:	and    DWORD PTR [ebx],ebx
  408e90:	xchg   esi,eax
  408e91:	ins    DWORD PTR es:[edi],dx
  408e92:	sbb    al,0x39
  408e94:	sbb    ch,ah
  408e96:	(bad)  
  408e97:	js     0x408e96
  408e99:	dec    ebp
  408e9a:	xchg   esi,eax
  408e9b:	dec    ebp
  408e9c:	pop    esi
  408e9d:	in     eax,dx
  408e9e:	scas   al,BYTE PTR es:[edi]
  408e9f:	xor    ebp,0x48f4fab5
  408ea5:	out    0xc9,eax
  408ea7:	xor    DWORD PTR [esi],ebp
  408ea9:	push   ebx
  408eaa:	add    BYTE PTR [eax-0x73],cl
  408ead:	hlt    
  408eae:	int    0x81
  408eb0:	mov    eax,ds:0xdb0f772a
  408eb5:	jb     0x408e93
  408eb7:	test   bh,dh
  408eb9:	cmp    edi,DWORD PTR [edi]
  408ebb:	rol    DWORD PTR [ecx],cl
  408ebd:	adc    edi,DWORD PTR [edx-0x21]
  408ec0:	xor    al,0xcf
  408ec2:	inc    edx
  408ec3:	into   
  408ec4:	lea    esp,[ebx+0x78]
  408ec7:	in     al,dx
  408ec8:	clc    
  408ec9:	add    eax,0x878daebb
  408ece:	or     DWORD PTR [edi+0x3e],edx
  408ed1:	push   ds
  408ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ed3:	gs mov bl,0x1e
  408ed6:	push   ds
  408ed7:	jae    0x408f04
  408ed9:	popa   
  408eda:	jbe    0x408ec5
  408edc:	stos   DWORD PTR es:[edi],eax
  408edd:	inc    edi
  408ede:	xor    BYTE PTR [ebx+esi*1],bh
  408ee1:	repnz add eax,0x5e3379a
  408ee7:	sti    
  408ee8:	sbb    eax,0x434d8ab8
  408eed:	and    eax,DWORD PTR ds:0x203e895a
  408ef3:	jecxz  0x408f19
  408ef5:	pop    edi
  408ef6:	mov    dl,0xb0
  408ef8:	lods   eax,DWORD PTR ds:[esi]
  408ef9:	sbb    dh,al
  408efb:	sbb    cl,dl
  408efd:	int    0xac
  408eff:	sbb    al,0xcf
  408f01:	in     eax,dx
  408f02:	(bad)  
  408f03:	stc    
  408f04:	cmp    dl,al
  408f06:	nop
  408f07:	out    dx,al
  408f08:	out    0x0,eax
  408f0a:	adc    DWORD PTR [edi+0x5d68f20a],ebx
  408f10:	cdq    
  408f11:	xlat   BYTE PTR ds:[ebx]
  408f12:	mov    esp,0x49824046
  408f17:	jmp    0x2dfd:0xdb3dc3c9
  408f1e:	pusha  
  408f1f:	scas   al,BYTE PTR es:[edi]
  408f20:	pop    esp
  408f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f22:	or     al,0x2
  408f24:	(bad)  
  408f26:	repz js 0x408f24
  408f29:	hlt    
  408f2a:	xor    al,0xbd
  408f2c:	out    dx,eax
  408f2d:	mov    ebp,0x407ca388
  408f32:	leave  
  408f33:	and    cl,0xc5
  408f36:	or     al,0x33
  408f38:	dec    ebp
  408f39:	push   ebx
  408f3a:	test   eax,0x618024ac
  408f3f:	addr16 xchg edi,eax
  408f41:	push   0x1c
  408f43:	mov    ds:0xc06c98ef,al
  408f48:	dec    ebp
  408f49:	inc    ebx
  408f4a:	imul   BYTE PTR [ecx-0x6dc3c763]
  408f50:	les    eax,FWORD PTR [ebp+0x2491ec0d]
  408f56:	(bad)
  408f59:	mov    cl,0x26
  408f5b:	sti    
  408f5c:	and    edi,DWORD PTR [ebp+0x66908df8]
  408f62:	dec    ebp
  408f63:	cmp    bl,BYTE PTR ds:0x4018c090
  408f69:	cmc    
  408f6a:	dec    BYTE PTR [esi+0x3f03889f]
  408f70:	sub    eax,ecx
  408f72:	bound  edx,QWORD PTR [ebp-0x54]
  408f75:	inc    edi
  408f76:	and    al,0x21
  408f78:	add    DWORD PTR [edi],eax
  408f7a:	mul    BYTE PTR [ecx+0x5af21665]
  408f80:	ror    edx,0x67
  408f83:	pop    eax
  408f84:	mov    ecx,0x2e8b857e
  408f89:	nop
  408f8a:	or     al,BYTE PTR [esp+ebx*4]
  408f8d:	and    al,0x1f
  408f8f:	lahf   
  408f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f91:	and    bh,BYTE PTR [ebx+0x1e]
  408f94:	std    
  408f95:	jno    0x408f23
  408f97:	inc    edi
  408f98:	jae    0x408f6f
  408f9a:	push   ebp
  408f9b:	loopne 0x408f9c
  408f9d:	mov    eax,ds:0xb8525a9d
  408fa2:	shr    DWORD PTR [ebp-0x19],1
  408fa5:	add    DWORD PTR [esi-0x187d06bc],ebx
  408fab:	iret   
  408fac:	icebp  
  408fad:	aam    0x48
  408faf:	pop    esi
  408fb0:	inc    edi
  408fb1:	jo     0x408f5c
  408fb3:	mov    ebx,0xf5e450b3
  408fb8:	mov    edi,ebp
  408fba:	inc    DWORD PTR fs:[edx+0x2d6d7968]
  408fc1:	les    esi,FWORD PTR [edx-0x1dc867be]
  408fc7:	xor    ch,BYTE PTR [esi+ecx*2]
  408fca:	dec    esp
  408fcb:	pop    ebp
  408fcc:	inc    ebx
  408fcd:	in     al,0xc9
  408fcf:	(bad)  
  408fd0:	push   DWORD PTR [ecx+eax*4-0x43cb8d10]
  408fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fd8:	idiv   al
  408fda:	add    eax,0x31c45cd
  408fdf:	out    0xfd,al
  408fe1:	daa    
  408fe2:	inc    ecx
  408fe3:	retf   
  408fe4:	mov    bh,0x64
  408fe6:	jnp    0x409067
  408fe8:	fs ins DWORD PTR es:[edi],dx
  408fea:	adc    eax,0x2c4f69f2
  408fef:	mov    al,0x1f
  408ff1:	stos   DWORD PTR es:[edi],eax
  408ff2:	retf   0xeaf
  408ff5:	mov    bh,0x42
  408ff7:	iret   
  408ff8:	add    al,0xae
  408ffa:	push   eax
  408ffc:	call   0x1ec42b65
  409001:	repz xchg edi,eax
  409003:	and    eax,0xe6c178e8
  409008:	or     BYTE PTR [ebp+0x34d4b17a],dl
  40900e:	inc    edi
  40900f:	mov    DWORD PTR [eax-0x59],ebp
  409012:	ret    
  409013:	mov    BYTE PTR [edx-0x56],0x23
  409017:	aad    0xec
  409019:	adc    cl,BYTE PTR [ecx-0x5e]
  40901c:	or     al,0x89
  40901e:	push   esp
  40901f:	push   edx
  409020:	hlt    
  409021:	fistp  QWORD PTR [edi+0x555b1381]
  409027:	clc    
  409028:	lods   eax,DWORD PTR ds:[esi]
  409029:	adc    eax,0xa9703c75
  40902e:	mov    dl,0x1c
  409030:	adc    BYTE PTR [ebx-0x59618b31],0x68
  409037:	gs sahf 
  409039:	inc    ebx
  40903a:	xchg   ebp,eax
  40903b:	jl     0x408ff3
  40903d:	mov    dh,BYTE PTR [esi]
  40903f:	add    bl,ah
  409041:	push   ss
  409042:	data16 xchg BYTE PTR [ebx],ch
  409045:	stos   BYTE PTR es:[edi],al
  409046:	inc    edi
  409047:	popa   
  409048:	mov    dl,BYTE PTR [ebx+0x16c4723]
  40904e:	ja     0x4090a0
  409050:	or     BYTE PTR [ebx+0x333b1333],dh
  409056:	stos   BYTE PTR es:[edi],al
  409057:	mov    esi,0xdb025bfd
  40905c:	aaa    
  40905d:	or     eax,0x4cac5b28
  409062:	loope  0x408feb
  409064:	adc    bl,ch
  409066:	add    DWORD PTR [ecx-0x3216b183],0x41
  40906d:	push   eax
  40906e:	and    edi,ebp
  409070:	out    0xaa,al
  409072:	aam    0x71
  409074:	dec    ecx
  409075:	inc    edi
  409076:	nop
  409077:	rcl    DWORD PTR ds:0xc0048e66,cl
  40907d:	sub    cl,bh
  40907f:	add    DWORD PTR [ebx],edi
  409081:	cmp    al,0x1c
  409083:	xor    eax,0xb4ccf0d9
  409088:	ffree  st(3)
  40908a:	fdiv   QWORD PTR [esi+0x33]
  40908d:	(bad)  
  40908f:	adc    dl,al
  409091:	xchg   esp,eax
  409092:	cmp    DWORD PTR [esi],ebp
  409094:	xor    al,bl
  409096:	fstp   QWORD PTR [edx]
  409098:	jmp    0x4090d6
  40909a:	cmc    
  40909b:	outs   dx,BYTE PTR ds:[esi]
  40909c:	or     esp,eax
  40909e:	out    dx,eax
  40909f:	adc    DWORD PTR [eax+0x3c4f8ee0],edi
  4090a5:	pop    ebp
  4090a6:	test   BYTE PTR ds:[edi],dl
  4090a9:	sahf   
  4090aa:	stc    
  4090ab:	mov    edi,0xa6459921
  4090b0:	scas   eax,DWORD PTR es:[edi]
  4090b1:	xor    edx,DWORD PTR [esi+edx*2]
  4090b4:	mov    ds:0xc1d10ce1,eax
  4090b9:	out    0x6,eax
  4090bb:	pop    esp
  4090bc:	js     0x4090b7
  4090be:	idiv   BYTE PTR [ebx]
  4090c0:	mov    al,0xfd
  4090c2:	shl    bh,0xc6
  4090c5:	add    BYTE PTR [ebx-0x55],ah
  4090c8:	add    eax,0xdd273cd7
  4090cd:	into   
  4090ce:	aad    0x3d
  4090d0:	clc    
  4090d1:	xchg   esi,eax
  4090d2:	xchg   ebx,eax
  4090d3:	cmp    esi,DWORD PTR [ecx-0x13]
  4090d6:	test   BYTE PTR [edi+0x60c45b8b],ch
  4090dc:	bt     DWORD PTR [edi],0x17
  4090e0:	pop    edx
  4090e1:	and    eax,0x15d95aa8
  4090e6:	adc    DWORD PTR [edi-0x768b81d8],edx
  4090ec:	adc    eax,0xc25676a0
  4090f1:	push   es
  4090f2:	rcl    DWORD PTR [ebx],0xc
  4090f5:	jl     0x4090a1
  4090f7:	call   0x8dc097e0
  4090fc:	jecxz  0x4090ae
  4090fe:	or     al,0xcc
  409100:	lods   al,BYTE PTR ds:[esi]
  409101:	fcomp  QWORD PTR ds:0xf99a93cd
  409107:	sbb    eax,0x594105d2
  40910c:	xchg   edx,eax
  40910d:	sub    eax,0x8aff06eb
  409112:	jecxz  0x409139
  409114:	cmp    DWORD PTR [ebx],ecx
  409116:	and    eax,0x2e55f342
  40911b:	or     al,0xcd
  40911d:	pop    esi
  40911e:	dec    edi
  40911f:	xchg   ebx,eax
  409120:	xor    al,0x25
  409122:	mov    bx,0xb74f
  409126:	out    0x8,al
  409128:	jle    0x4090f3
  40912a:	pusha  
  40912b:	imul   eax,DWORD PTR [ebx+0x450aa3f4],0xf69d49fd
  409135:	inc    edi
  409136:	pushf  
  409137:	pusha  
  409138:	mov    al,ds:0x707a66e
  40913d:	mov    al,0xf
  40913f:	mov    ebx,?
  409141:	popf   
  409142:	inc    esi
  409143:	mov    ebx,0xc6ad2f58
  409148:	sahf   
  409149:	mov    al,0x70
  40914b:	addr16 push ss
  40914d:	mov    ecx,0xd47db379
  409152:	not    BYTE PTR [edx+edx*2]
  409155:	cmp    eax,0x50787ae1
  40915a:	popf   
  40915b:	mov    ecx,0x1b8bc829
  409160:	sub    dh,dl
  409162:	jl     0x40917a
  409164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409165:	nop
  409166:	push   0xffffffdb
  409168:	mov    bh,0x11
  40916a:	pop    edx
  40916b:	int    0x0
  40916d:	push   DWORD PTR [edx-0x10efc3b5]
  409173:	adc    BYTE PTR ds:0x65f95ea3,dl
  409179:	jno    0x40915f
  40917b:	push   ecx
  40917c:	jmp    0x745ee9b2
  409181:	xchg   ebp,eax
  409182:	jne    0x4091b2
  409184:	mov    dh,0x72
  409186:	xlat   BYTE PTR ds:[ebx]
  409187:	xor    al,0x8f
  409189:	outs   dx,BYTE PTR ds:[esi]
  40918a:	sbb    eax,0xc3b891cc
  40918f:	je     0x40911c
  409191:	sahf   
  409192:	aad    0xef
  409194:	push   esi
  409195:	int    0x13
  409197:	lods   eax,DWORD PTR ds:[esi]
  409198:	push   eax
  409199:	lea    eax,[ebx]
  40919b:	jo     0x4091a7
  40919d:	mov    ah,0x64
  40919f:	icebp  
  4091a0:	dec    esi
  4091a1:	repz inc eax
  4091a3:	(bad)  
  4091a4:	je     0x4091c4
  4091a6:	adc    ebp,DWORD PTR [edi-0x65]
  4091a9:	shl    BYTE PTR cs:[ebx-0x20],cl
  4091ad:	aam    0xb0
  4091af:	mov    ds:0xf011b9e3,al
  4091b4:	aas    
  4091b5:	das    
  4091b6:	or     ebp,0xd823fe91
  4091bc:	dec    eax
  4091bd:	loope  0x409143
  4091bf:	in     eax,dx
  4091c0:	je     0x4091c9
  4091c2:	sub    BYTE PTR [edx-0x4656c14a],ah
  4091c8:	int3   
  4091c9:	(bad)  
  4091ca:	adc    al,0xee
  4091cc:	scas   eax,DWORD PTR es:[edi]
  4091cd:	(bad)  
  4091cf:	jns    0x40920a
  4091d1:	(bad)  
  4091d2:	in     al,dx
  4091d3:	js     0x4091bc
  4091d5:	(bad)  
  4091d7:	in     al,0x3e
  4091d9:	add    al,0xb8
  4091db:	push   ecx
  4091dc:	cdq    
  4091dd:	pop    ds
  4091de:	in     eax,dx
  4091df:	jno    0x409251
  4091e1:	scas   eax,DWORD PTR es:[edi]
  4091e2:	mov    WORD PTR [edx],ss
  4091e4:	push   cs
  4091e5:	pushw  ss
  4091e7:	jle    0x409231
  4091e9:	mov    bh,0x5c
  4091eb:	rcl    BYTE PTR [bx-0x373d],1
  4091f0:	jb     0x4091b7
  4091f2:	inc    esi
  4091f3:	and    esi,DWORD PTR [ebx-0x18]
  4091f6:	jmp    0x409205
  4091f8:	(bad)  
  4091f9:	and    DWORD PTR [edi+ecx*2],ebp
  4091fc:	popf   
  4091fd:	push   ss
  4091fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ff:	xor    eax,0x1fba3bd8
  409204:	pop    eax
  409205:	aaa    
  409206:	sbb    esp,DWORD PTR [esp+ebx*8]
  409209:	dec    ecx
  40920a:	in     al,dx
  40920b:	lahf   
  40920c:	pop    eax
  40920d:	inc    edx
  40920e:	je     0x40926d
  409210:	test   eax,0x5b36b0c9
  409215:	iret   
  409216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409218:	sub    dl,BYTE PTR [ebp+0x59d9ba8b]
  40921e:	ret    
  40921f:	sbb    DWORD PTR [esi],esp
  409221:	rcr    DWORD PTR [edx+0x61],1
  409224:	test   eax,ecx
  409226:	or     esi,DWORD PTR [ebp+0x5db171eb]
  40922c:	pop    eax
  40922d:	push   ebp
  40922e:	imul   ebp,esi,0xffffff8d
  409231:	dec    ebx
  409232:	jle    0x409204
  409234:	aad    0xd0
  409236:	addr16 add ebx,ebp
  409239:	pop    ebp
  40923a:	cmc    
  40923b:	pushf  
  40923c:	jae    0x40920c
  40923e:	jb     0x409209
  409240:	push   ecx
  409241:	push   esp
  409242:	ret    0xc910
  409245:	or     al,0xd0
  409247:	mov    ebx,DWORD PTR [ebx]
  409249:	sbb    ah,dl
  40924b:	pop    ecx
  40924c:	lahf   
  40924d:	outs   dx,BYTE PTR ds:[esi]
  40924e:	inc    edi
  40924f:	xchg   esi,eax
  409250:	or     eax,0xc6fbfc8
  409255:	stos   DWORD PTR es:[edi],eax
  409256:	xor    ch,BYTE PTR [ecx-0x17]
  409259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40925a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40925b:	scas   al,BYTE PTR es:[edi]
  40925c:	sahf   
  40925d:	stc    
  40925e:	mov    edx,0xe4e4dcc8
  409263:	(bad)
  409267:	lahf   
  409268:	pop    ss
  409269:	jo     0x409254
  40926b:	push   edx
  40926c:	pop    edx
  40926d:	xor    eax,0xa90f4244
  409272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409273:	mov    eax,0xfc60d666
  409278:	cmp    esi,DWORD PTR [eax+0x7f]
  40927b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40927c:	inc    edi
  40927d:	pop    ds
  40927e:	jmp    0x4092c8
  409280:	lds    ebx,FWORD PTR ds:0x628f4dd1
  409286:	adc    dl,BYTE PTR [esi+0x2b]
  409289:	ret    0x6d2a
  40928c:	imul   ebp,esp,0xfec37deb
  409292:	frstor [ebx]
  409294:	scas   al,BYTE PTR es:[edi]
  409295:	push   0xb1605ce0
  40929a:	pop    ecx
  40929b:	popa   
  40929c:	mov    esp,0xde394da1
  4092a1:	sbb    eax,0xabad0108
  4092a6:	ja     0x4092de
  4092a8:	cmp    bl,dh
  4092aa:	jmp    0x4092dd
  4092ac:	in     eax,dx
  4092ad:	xchg   ebp,eax
  4092ae:	out    dx,al
  4092af:	imul   BYTE PTR [esi+0x70]
  4092b2:	rsm    
  4092b4:	dec    ebp
  4092b5:	sbb    BYTE PTR [edi-0x5c791dda],dh
  4092bb:	out    0xc7,eax
  4092bd:	adc    bh,BYTE PTR [edx+0x75]
  4092c0:	adc    al,0x29
  4092c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092c3:	sub    dl,dh
  4092c5:	data16 cmp BYTE PTR [ebx-0x78],ch
  4092c9:	stos   BYTE PTR es:[edi],al
  4092ca:	pop    ebp
  4092cb:	jo     0x409268
  4092cd:	out    0xc4,al
  4092cf:	sbb    DWORD PTR [ebx+0x7af94a85],ecx
  4092d5:	or     eax,0x4a9f2317
  4092da:	xlat   BYTE PTR ds:[ebx]
  4092db:	jmp    0x40930c
  4092dd:	xor    al,0x88
  4092df:	or     eax,0xa66dcd3f
  4092e4:	retf   0xb106
  4092e7:	mov    ds:0x45a10fbe,eax
  4092ec:	das    
  4092ed:	sbb    ebp,DWORD PTR [edx]
  4092ef:	mov    esi,0xc21d2e41
  4092f4:	clc    
  4092f5:	xchg   edx,eax
  4092f6:	sub    cl,ch
  4092f8:	push   ebx
  4092f9:	loope  0x4092ec
  4092fb:	scas   eax,DWORD PTR es:[edi]
  4092fc:	popa   
  4092fd:	inc    eax
  4092fe:	add    dh,BYTE PTR [esi+0x550cdd9b]
  409304:	jae    0x40932c
  409306:	in     al,0x46
  409308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409309:	sbb    DWORD PTR [ebp-0x9],esi
  40930c:	adc    edx,DWORD PTR [ecx-0x50]
  40930f:	js     0x4092b8
  409311:	retf   0x5404
  409314:	jmp    0x4092f9
  409316:	cmc    
  409317:	addr16 (bad) 
  409319:	mov    bh,0x50
  40931b:	push   ebx
  40931c:	sti    
  40931d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40931e:	gs xchg ebx,eax
  409320:	mov    cl,BYTE PTR [eax+0x6cfbc0c5]
  409326:	imul   ecx,DWORD PTR [edx],0xffffffe0
  409329:	fdivr  QWORD PTR [ecx+0x59]
  40932c:	scas   eax,DWORD PTR es:[edi]
  40932d:	pop    edi
  40932e:	(bad)  
  40932f:	scas   eax,DWORD PTR es:[edi]
  409330:	test   eax,eax
  409332:	or     ebp,ebx
  409334:	add    ch,bl
  409336:	jno    0x40930a
  409338:	adc    ebx,esp
  40933a:	inc    edx
  40933b:	fwait
  40933c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40933d:	push   ss
  40933e:	cmp    DWORD PTR [ebx-0x5a],esp
  409341:	gs push edx
  409343:	or     eax,0x5e169e5c
  409348:	jo     0x40935e
  40934a:	out    dx,al
  40934b:	mov    ebx,0x7f0f46e1
  409350:	stc    
  409351:	cmp    eax,0x26dd3b3e
  409356:	add    cl,BYTE PTR [ebp-0x75ab6b73]
  40935c:	push   edi
  40935d:	in     al,dx
  40935e:	loopne 0x4093b4
  409360:	cmp    al,0xa7
  409362:	(bad)  
  409363:	xchg   ebp,eax
  409364:	int    0xf3
  409366:	cmp    BYTE PTR [ebp-0x38],al
  409369:	sbb    eax,0xa4cc55c
  40936e:	pop    esi
  40936f:	arpl   WORD PTR [ebx],ax
  409371:	test   DWORD PTR ds:0x38bf2aec,0xd590d34e
  40937b:	jl     0x409358
  40937d:	not    BYTE PTR [eax+0x58b0dcdd]
  409383:	sbb    eax,0x740c0cfa
  409388:	mov    ebp,0xa88d1840
  40938d:	fs push cs
  40938f:	mov    dh,0xad
  409391:	and    dl,BYTE PTR [edi-0x72]
  409394:	or     eax,0x80ce90ba
  409399:	mov    eax,0x1a499de9
  40939e:	pop    edi
  40939f:	push   eax
  4093a0:	shr    BYTE PTR [esp+eax*1-0x45696b70],cl
  4093a7:	jne    0x40933e
  4093a9:	xor    DWORD PTR [edx+0x61],eax
  4093ac:	test   DWORD PTR ds:0x8b6c9070,ebx
  4093b2:	sahf   
  4093b3:	jmp    0xd3e3:0xc22e53e9
  4093ba:	pop    ebp
  4093bb:	pop    ebp
  4093bc:	push   esi
  4093bd:	out    0x9e,eax
  4093bf:	and    cl,0xf9
  4093c2:	out    dx,eax
  4093c3:	sbb    BYTE PTR [ebx-0x19],0x65
  4093c7:	mov    WORD PTR [edx+0x7b],ds
  4093ca:	dec    ecx
  4093cb:	jecxz  0x4093a5
  4093cd:	(bad)  
  4093ce:	aad    0xf4
  4093d0:	ror    DWORD PTR [esi-0x1],0x2b
  4093d4:	in     al,dx
  4093d5:	cli    
  4093d6:	xor    dh,BYTE PTR [edi+0x6588b387]
  4093dc:	loope  0x4093f9
  4093de:	jmp    0x86c3:0xad36b928
  4093e5:	push   ecx
  4093e6:	mov    esi,0x15686359
  4093eb:	stos   BYTE PTR es:[edi],al
  4093ec:	sub    DWORD PTR ds:0x8deea8db,0x13
  4093f3:	inc    eax
  4093f4:	cmp    eax,0x28f22ea6
  4093f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093fa:	daa    
  4093fb:	aas    
  4093fc:	call   0xcf0e:0xb6f868c
  409403:	or     DWORD PTR [esi],ebx
  409405:	jmp    0x409481
  409407:	push   esp
  409408:	adc    BYTE PTR [esi+edx*8+0x261172ec],dl
  40940f:	test   al,0x6a
  409411:	das    
  409412:	loopne 0x409482
  409414:	or     eax,0x5e3fc296
  409419:	pop    esi
  40941a:	dec    ebp
  40941b:	inc    edx
  40941c:	daa    
  40941d:	ds push es
  40941f:	dec    ebx
  409420:	arpl   cx,bx
  409422:	mov    dl,0x1b
  409424:	push   cs
  409425:	add    al,BYTE PTR [esi+0x53]
  409428:	cld    
  409429:	das    
  40942a:	(bad)  
  40942b:	(bad)  
  40942c:	cld    
  40942d:	movq   QWORD PTR [edi+0x461064ce],mm7
  409434:	adc    eax,0xafd36393
  409439:	push   ebx
  40943a:	ret    0x9a80
  40943d:	mov    dh,0x4f
  40943f:	mov    al,ds:0xe10ddec1
  409444:	push   0x3697dc97
  409449:	lds    esi,FWORD PTR [esi+0x22]
  40944c:	pop    edi
  40944d:	pop    edi
  40944e:	pop    ebp
  40944f:	and    al,0xfa
  409451:	pushf  
  409452:	inc    ebp
  409453:	aas    
  409454:	inc    esi
  409455:	repnz (bad) 
  409457:	mov    esi,0xc5d1b5f
  40945c:	loop   0x409439
  40945e:	std    
  40945f:	adc    BYTE PTR [eax-0x68c461cd],ch
  409465:	jle    0x40946b
  409467:	int    0x2e
  409469:	shl    DWORD PTR [edx],0xeb
  40946c:	xchg   ebp,eax
  40946d:	inc    ecx
  40946e:	jp     0x409465
  409470:	push   esi
  409471:	lods   al,BYTE PTR ds:[esi]
  409472:	inc    ebp
  409473:	push   ebp
  409474:	push   edx
  409475:	dec    esi
  409476:	inc    edx
  409478:	mov    BYTE PTR [edi+eiz*8-0x7a1eb281],bl
  40947f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409480:	push   es
  409481:	mov    bl,0xd3
  409483:	xchg   edi,eax
  409484:	mov    eax,edi
  409486:	or     DWORD PTR [edx-0x71b6ee69],eax
  40948c:	push   edx
  40948d:	out    0x87,eax
  40948f:	stos   BYTE PTR es:[edi],al
  409490:	clc    
  409491:	lock inc ebp
  409493:	test   eax,0x8831d9f3
  409498:	(bad)  
  409499:	jno    0x409455
  40949b:	mov    bl,0xb7
  40949d:	sub    al,0x41
  40949f:	shl    edx,1
  4094a1:	pop    ebp
  4094a2:	(bad)  
  4094a3:	pop    edx
  4094a4:	fnsave [ebp+edi*2-0x8e77e6f]
  4094ab:	push   es
  4094ac:	or     eax,0xac17075c
  4094b1:	mov    eax,ds:0x9bc8edb0
  4094b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094b7:	(bad)  
  4094b9:	adc    bl,dh
  4094bb:	cs loop 0x409481
  4094be:	jmp    0xeb3a35d0
  4094c3:	and    bh,BYTE PTR ss:[ebp-0x55a6a495]
  4094ca:	adc    BYTE PTR ds:0xdb251032,cl
  4094d0:	push   ss
  4094d1:	and    ebx,ebx
  4094d3:	call   0x90c6:0x515abe2b
  4094da:	jmp    0x40946d
  4094dc:	outs   dx,BYTE PTR ds:[esi]
  4094dd:	outs   dx,DWORD PTR ds:[esi]
  4094de:	shr    ebp,cl
  4094e0:	shl    BYTE PTR [edi],cl
  4094e2:	cmp    DWORD PTR [eax],ebp
  4094e4:	aad    0xd4
  4094e6:	sub    eax,0xee74e0f1
  4094eb:	push   ds
  4094ec:	mov    al,0x80
  4094ee:	push   ebx
  4094ef:	fxch   st(5)
  4094f1:	mov    bh,BYTE PTR [esi]
  4094f3:	inc    esp
  4094f4:	mov    esp,esp
  4094f6:	nop
  4094f7:	in     al,dx
  4094f8:	sar    DWORD PTR [ebx-0x270e6793],cl
  4094fe:	sahf   
  4094ff:	xor    DWORD PTR [esi-0x6cf76bd2],esi
  409505:	xor    al,0x7e
  409507:	sbb    edi,DWORD PTR [edx]
  409509:	inc    ebx
  40950a:	je     0x409497
  40950c:	and    cl,ch
  40950e:	mov    ah,BYTE PTR [ebp+0x6fe905c8]
  409514:	int3   
  409515:	pop    ss
  409516:	and    al,0x33
  409518:	pop    ebx
  409519:	add    bl,BYTE PTR [esi-0x29]
  40951c:	fcmovne st,st(6)
  40951e:	je     0x4094de
  409520:	test   al,0x74
  409522:	imul   ebx,DWORD PTR [esi-0x44d4ea7],0xd620c779
  40952c:	push   edi
  40952d:	arpl   WORD PTR [eax+0xe],bp
  409530:	add    cl,BYTE PTR [esi+edi*1]
  409533:	jae    0x409583
  409535:	pop    eax
  409536:	mov    dl,0xb
  409538:	lods   eax,DWORD PTR ds:[esi]
  409539:	cmp    al,0xcc
  40953b:	mov    dh,0x6a
  40953d:	jno    0x40957b
  40953f:	loop   0x4095a9
  409541:	jne    0x4094cf
  409543:	inc    ebx
  409544:	clc    
  409545:	mov    al,0xea
  409547:	fldenv [eax+0x37d53d30]
  40954d:	test   bl,cl
  40954f:	jmp    0x540c:0x25be09b8
  409556:	imul   ebp,ebp,0xbd6e8f5f
  40955c:	jg     0x409557
  40955e:	leave  
  40955f:	mov    ds:0xd8a26574,eax
  409564:	mov    cl,0xc9
  409566:	das    
  409567:	dec    ebp
  409568:	push   ebx
  409569:	popf   
  40956a:	das    
  40956b:	jge    0x409580
  40956d:	cli    
  40956e:	push   ecx
  40956f:	xor    al,0xdc
  409571:	sub    ebx,DWORD PTR [esi]
  409573:	popa   
  409574:	or     BYTE PTR [esi+0x3d],ch
  409577:	add    ah,dl
  409579:	mov    eax,edx
  40957b:	fimul  DWORD PTR [eax-0x4a6bca96]
  409581:	je     0x409566
  409583:	push   esp
  409584:	and    eax,0x827bc05c
  409589:	cli    
  40958a:	and    DWORD PTR [esi-0x71270c39],esp
  409590:	mov    eax,0xbc584a42
  409595:	pop    edx
  409596:	xor    esp,DWORD PTR [ebx+0x7b]
  409599:	fcomp  DWORD PTR [ecx]
  40959b:	ss adc al,0x99
  40959f:	mov    ebp,0x3e978bc0
  4095a4:	mov    al,0xe2
  4095a6:	xchg   BYTE PTR [esi],bl
  4095a8:	(bad)  
  4095a9:	or     DWORD PTR [ebx],ecx
  4095ab:	sub    ebx,DWORD PTR [esi-0x71bec889]
  4095b1:	mov    eax,0x7e05fd69
  4095b6:	jno    0x40955e
  4095b8:	les    esp,FWORD PTR [ecx+0x5c]
  4095bb:	sbb    eax,0x24c1e841
  4095c0:	std    
  4095c1:	popf   
  4095c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c3:	mov    bl,0x5
  4095c5:	repnz jecxz 0x409556
  4095c8:	sub    eax,0x26f6c9dd
  4095cd:	and    edi,ebx
  4095cf:	js     0x4095a6
  4095d1:	fmul   QWORD PTR [ecx]
  4095d3:	sar    DWORD PTR [ebx+0x696e6eb],1
  4095d9:	stc    
  4095da:	or     bl,BYTE PTR [ecx+0x4ea9cc2a]
  4095e0:	inc    ecx
  4095e1:	sbb    DWORD PTR [esi+esi*8+0x43e832f0],ebp
  4095e8:	adc    al,BYTE PTR [ebp-0x1d]
  4095eb:	in     eax,0xb4
  4095ed:	add    BYTE PTR [edi+0x2b],dl
  4095f0:	ror    dh,1
  4095f2:	mov    eax,ds:0x8bd56497
  4095f7:	push   cs
  4095f8:	je     0x409655
  4095fa:	push   cs
  4095fb:	pusha  
  4095fc:	les    edi,FWORD PTR [edx+0x6d]
  4095ff:	in     eax,dx
  409600:	cdq    
  409601:	mov    dh,0x76
  409603:	imul   eax,DWORD PTR [ebp-0x64],0x432c80e3
  40960a:	ror    bh,1
  40960c:	(bad)  
  40960d:	cmp    DWORD PTR [ebp-0x58],esp
  409610:	add    eax,0x8c64d08f
  409615:	hlt    
  409616:	test   eax,0x3afc134a
  40961b:	mov    esp,0x2f27585e
  409620:	enter  0x1575,0xbe
  409624:	loopne 0x4095c0
  409626:	and    BYTE PTR [eax+0x0],dh
  409629:	mov    eax,ds:0xdefc73f1
  40962e:	arpl   WORD PTR fs:[eax],sp
  409631:	cdq    
  409632:	loopne 0x40963e
  409634:	(bad)  
  409635:	xlat   BYTE PTR ds:[ebx]
  409636:	out    dx,eax
  409637:	cmp    esp,edi
  409639:	jbe    0x4095f2
  40963b:	dec    edx
  40963c:	mov    esp,0xa7501e01
  409641:	jle    0x4096b8
  409643:	ja     0x4095d5
  409645:	sub    ah,0x8c
  409648:	inc    edi
  409649:	fdivr  DWORD PTR [edx+0x27]
  40964c:	mov    ebp,DWORD PTR [ebp-0x18]
  40964f:	test   al,0x81
  409651:	sbb    BYTE PTR [edi+ebx*8],al
  409654:	jmp    0x40962a
  409656:	pop    ecx
  409657:	xor    al,0x77
  409659:	cmp    edi,DWORD PTR [esi]
  40965b:	clc    
  40965c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40965d:	es sbb al,0x66
  409660:	ror    DWORD PTR [edi+0x57854c93],0xb7
  409667:	push   ss
  409668:	jbe    0x40962c
  40966a:	cmp    BYTE PTR [edi-0x61060373],ch
  409670:	cmc    
  409671:	cmp    DWORD PTR ds:0x16ed3ac4,0xffffff8d
  409678:	pop    ds
  409679:	iret   
  40967a:	dec    edi
  40967b:	or     al,ch
  40967d:	ss jl  0x409623
  409680:	les    ebx,FWORD PTR [edi-0x76ba9172]
  409686:	xchg   edi,ebp
  409688:	pop    es
  409689:	adc    al,0xec
  40968b:	das    
  40968c:	ret    0xacfe
  40968f:	mov    al,ds:0xbe9128b1
  409694:	ja     0x409685
  409696:	(bad)  
  409697:	(bad)  
  409698:	into   
  409699:	fs add al,0x3a
  40969c:	mov    ah,0x35
  40969e:	outs   dx,BYTE PTR ds:[esi]
  40969f:	cmp    DWORD PTR [ebp+0x72],esi
  4096a2:	jle    0x4096ca
  4096a4:	sbb    DWORD PTR [ebx+0x555b1efd],esp
  4096aa:	xchg   DWORD PTR [ecx+0x4696b213],ebx
  4096b0:	scas   eax,DWORD PTR es:[edi]
  4096b1:	jle    0x4096b4
  4096b3:	daa    
  4096b4:	adc    edx,ebp
  4096b6:	sahf   
  4096b7:	sub    ebx,0x44f75af1
  4096bd:	aaa    
  4096be:	pop    ss
  4096bf:	(bad)  
  4096c0:	jmp    0x1d8b74b4
  4096c5:	xlat   BYTE PTR ds:[ebx]
  4096c6:	adc    eax,0xe0933027
  4096cb:	in     al,dx
  4096cc:	push   edi
  4096cd:	js     0x4096f7
  4096cf:	or     al,0x98
  4096d1:	xor    eax,0xedf3533a
  4096d6:	mov    ebx,0xb164391e
  4096db:	es push ecx
  4096dd:	lods   al,BYTE PTR ds:[esi]
  4096de:	pop    ss
  4096df:	(bad)  
  4096e0:	mov    ebp,0xf379d298
  4096e5:	push   es
  4096e6:	dec    ecx
  4096e7:	and    ebp,ecx
  4096e9:	jmp    0x60fd6485
  4096ee:	jmp    0x37c7:0x22cafc5a
  4096f5:	mov    esi,0x4bbc6e6c
  4096fa:	xchg   ebp,eax
  4096fb:	adc    BYTE PTR [eax],ah
  4096fd:	xor    ah,BYTE PTR [edi]
  4096ff:	test   edx,ebx
  409701:	bound  edx,QWORD PTR [edx]
  409703:	outs   dx,BYTE PTR ds:[esi]
  409704:	mov    ds:0x9176b6ab,al
  409709:	stos   BYTE PTR es:[edi],al
  40970a:	pop    ds
  40970b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40970c:	push   es
  40970d:	enter  0x4b9f,0xe0
  409711:	aas    
  409712:	pop    edx
  409713:	jb     0x4096e0
  409715:	push   edx
  409716:	sbb    dl,BYTE PTR [edx+0x2e]
  409719:	icebp  
  40971a:	adc    ecx,DWORD PTR [edi]
  40971c:	cli    
  40971d:	xor    al,0xc4
  40971f:	leave  
  409720:	cmp    ebx,DWORD PTR [edi-0x1ee72be4]
  409726:	cwde   
  409727:	mov    bl,0xff
  409729:	jno    0x4096dd
  40972b:	push   cs
  40972c:	scas   ax,WORD PTR es:[edi]
  40972e:	cdq    
  40972f:	cmp    bh,dl
  409731:	mov    fs,WORD PTR [ebp+0x1e]
  409734:	fiadd  WORD PTR [edi-0xf860d12]
  40973a:	dec    eax
  40973b:	cmp    ah,cl
  40973d:	call   0xe36a:0x14f66b62
  409744:	push   ebx
  409745:	mov    edi,DWORD PTR [edx]
  409747:	xchg   ebp,eax
  409748:	fs push edx
  40974a:	mov    ds:0x9cf616ce,al
  40974f:	loopne 0x4096d5
  409751:	xlat   BYTE PTR ds:[ebx]
  409752:	mov    bh,0x9e
  409754:	add    BYTE PTR [eax+0x5f773feb],dh
  40975a:	mov    bh,0xad
  40975c:	xchg   ebx,eax
  40975d:	sub    ebx,edi
  40975f:	imul   ebp
  409761:	leave  
  409762:	xor    BYTE PTR [esi],ch
  409764:	popf   
  409765:	int    0x44
  409767:	(bad)  
  409768:	(bad)  
  409769:	into   
  40976a:	add    BYTE PTR [edi],dh
  40976c:	cmp    BYTE PTR [esi],dl
  40976e:	cli    
  40976f:	sub    ch,BYTE PTR [edi-0x22]
  409772:	fmul   QWORD PTR [edx+0x26]
  409775:	mov    eax,0x5a9b1c89
  40977a:	mov    ecx,DWORD PTR [ecx-0x6]
  40977d:	jmp    0x4097bf
  40977f:	sub    DWORD PTR [ebp+0x7c],0x9395bcc3
  409786:	inc    edx
  409787:	xchg   ebp,eax
  409788:	pop    esi
  409789:	mov    esi,DWORD PTR [ecx+0x7d1e606]
  40978f:	(bad)  
  409790:	mov    ebp,0x4fbf5567
  409795:	shl    ecx,0xa9
  409798:	out    dx,eax
  409799:	dec    eax
  40979a:	ins    BYTE PTR es:[edi],dx
  40979b:	push   eax
  40979c:	mov    eax,0x7d4e43ec
  4097a1:	cli    
  4097a2:	or     cl,dl
  4097a4:	arpl   sp,bp
  4097a6:	nop
  4097a7:	sub    edi,DWORD PTR [eax]
  4097a9:	mov    ebx,0x6b2d2908
  4097ae:	mov    edi,DWORD PTR [ebx-0x39]
  4097b1:	int    0x3e
  4097b3:	jl     0x4097f9
  4097b5:	and    ah,cl
  4097b7:	sub    al,0xca
  4097b9:	in     al,0xa4
  4097bb:	mov    eax,ds:0x4bbea37b
  4097c0:	add    esi,0x350f1e67
  4097c6:	sbb    DWORD PTR [eax-0x6a4d946c],edx
  4097cc:	enter  0x68ef,0xb0
  4097d0:	fild   WORD PTR [esi+0x37fa2a10]
  4097d6:	fld    DWORD PTR [edx+0x45e80cb5]
  4097dc:	mov    ch,0xa4
  4097de:	dec    edi
  4097df:	adc    BYTE PTR [edx+0x1e1db774],bl
  4097e5:	(bad)  
  4097e6:	mov    al,ds:0xaa48b983
  4097eb:	mov    ebp,0x52eedd94
  4097f0:	xchg   esi,ecx
  4097f2:	or     al,0x5c
  4097f4:	(bad)  
  4097f5:	pop    edx
  4097f6:	mov    eax,0x53f03c57
  4097fb:	add    dh,BYTE PTR [esi-0x4dcdcfdd]
  409801:	jns    0x4097ca
  409803:	xor    al,0xeb
  409805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409806:	pop    esi
  409807:	dec    esi
  409808:	in     al,0xc8
  40980a:	xlat   BYTE PTR ds:[ebx]
  40980b:	push   cs
  40980c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40980d:	sbb    esi,DWORD PTR [esi-0x55]
  409810:	rol    BYTE PTR [edi-0x9],0x21
  409814:	fcomp  QWORD PTR [ebx+0x724906ee]
  40981a:	mov    ds:0x979adde8,eax
  40981f:	fstp   QWORD PTR ds:[edi+0xaf8cbaf]
  409826:	lods   al,BYTE PTR ds:[esi]
  409827:	or     BYTE PTR [ecx-0x2c],al
  40982a:	clc    
  40982b:	test   DWORD PTR [esi+0x1d],edx
  40982e:	mov    dl,BYTE PTR [ebp-0xbc19ee1]
  409834:	xor    BYTE PTR [ebx-0xfe33bff],0xbe
  40983b:	xchg   edi,eax
  40983c:	jl     0x4097e5
  40983e:	in     eax,dx
  40983f:	ja     0x4097c2
  409841:	inc    esi
  409842:	cld    
  409843:	dec    edx
  409844:	and    DWORD PTR [ecx],esp
  409846:	lock enter 0xa5d5,0x4
  40984b:	xchg   DWORD PTR [esi+eiz*1+0x15],esi
  40984f:	stos   DWORD PTR es:[edi],eax
  409850:	sbb    BYTE PTR [esi+0x2d9148f4],ah
  409856:	pop    ss
  409857:	dec    esi
  409858:	sbb    ah,bh
  40985a:	xchg   esp,eax
  40985b:	or     DWORD PTR [eax-0x628c76cf],esp
  409861:	addr16 clc 
  409863:	push   ecx
  409864:	out    dx,eax
  409865:	cmp    eax,0xe4abab5d
  40986a:	xchg   DWORD PTR [ecx],edi
  40986c:	fst    DWORD PTR [esi-0x6ef4403b]
  409872:	inc    ecx
  409873:	mov    ch,0x2b
  409875:	and    eax,0x7a5c858a
  40987a:	outs   dx,BYTE PTR ds:[esi]
  40987b:	je     0x4098a6
  40987d:	aam    0x51
  40987f:	or     edi,esi
  409881:	scas   al,BYTE PTR es:[edi]
  409882:	js     0x409854
  409884:	sub    cl,ch
  409886:	mov    dl,0x61
  409888:	lock and di,bp
  40988c:	mov    dl,bl
  40988e:	dec    ebp
  40988f:	ins    DWORD PTR es:[edi],dx
  409890:	stos   DWORD PTR es:[edi],eax
  409891:	dec    ebx
  409892:	add    DWORD PTR [esp+eax*4-0x49],eax
  409896:	into   
  409897:	cmp    al,0xc0
  409899:	pop    eax
  40989a:	leave  
  40989b:	mov    eax,eax
  40989d:	add    eax,0x4f178c32
  4098a2:	aam    0xd1
  4098a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a5:	in     al,dx
  4098a6:	ss in  eax,0x1c
  4098a9:	bound  ebp,QWORD PTR [esi]
  4098ab:	pop    eax
  4098ac:	ds pushf 
  4098ae:	outs   dx,BYTE PTR ds:[esi]
  4098af:	cmp    dh,0x4
  4098b2:	or     al,0xac
  4098b4:	(bad)  
  4098b5:	es sti 
  4098b7:	loope  0x409867
  4098b9:	xchg   ebx,eax
  4098ba:	adc    eax,0x267996d2
  4098bf:	(bad)  
  4098c0:	dec    ebx
  4098c1:	lock push ecx
  4098c3:	fisttp DWORD PTR [ebp-0x3d414df0]
  4098c9:	aas    
  4098ca:	(bad)  
  4098cb:	push   0x9bbca89a
  4098d0:	or     ebp,edx
  4098d2:	shr    ebp,cl
  4098d4:	in     al,0x54
  4098d6:	ror    DWORD PTR [edi+0x7dc9f289],0xb1
  4098dd:	popf   
  4098de:	dec    ebx
  4098df:	push   0x66ce9172
  4098e4:	rcr    BYTE PTR [ebx+0x74407253],cl
  4098ea:	mov    esp,0x5b36f116
  4098ef:	push   eax
  4098f0:	retf   
  4098f1:	cwde   
  4098f2:	rcl    BYTE PTR [edx-0x5304ce15],cl
  4098f8:	dec    esp
  4098f9:	repz pop eax
  4098fb:	add    esi,ebp
  4098fd:	push   0xec09c738
  409902:	adc    esi,DWORD PTR [esi]
  409904:	jmp    0x4098a5
  409906:	sub    ebp,eax
  409908:	imul   DWORD PTR [ecx]
  40990a:	sbb    esp,edx
  40990c:	jmp    0x4098d8
  40990e:	leave  
  40990f:	leave  
  409910:	mov    ah,0xf6
  409912:	pop    DWORD PTR [ebp+eiz*8+0x78854a32]
  409919:	jg     0x4098a8
  40991b:	jbe    0x409955
  40991d:	jle    0x4098aa
  40991f:	mov    ch,0x63
  409921:	lahf   
  409922:	inc    esi
  409923:	mov    ?,WORD PTR [edx-0x4c2d06d3]
  409929:	push   0xffffffaa
  40992b:	in     eax,dx
  40992c:	inc    eax
  40992d:	add    DWORD PTR [esi-0x6eebb982],edx
  409933:	(bad)  
  409935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409936:	(bad)  
  409937:	clc    
  409938:	fimul  WORD PTR [edx]
  40993a:	inc    ecx
  40993b:	cmp    edi,DWORD PTR [edx+0x7541257d]
  409941:	mov    ebp,0xb355b7be
  409946:	lahf   
  409947:	xchg   edi,eax
  409948:	cli    
  409949:	push   ss
  40994a:	xor    eax,0x6b7574e7
  40994f:	test   DWORD PTR [eax-0x23],esp
  409952:	mov    ah,0x93
  409954:	jo     0x4099cc
  409956:	cmp    eax,0x572473e
  40995b:	jmp    DWORD PTR [edi]
  40995d:	div    DWORD PTR [eax-0x7a]
  409960:	scas   al,BYTE PTR es:[edi]
  409961:	push   ebx
  409962:	add    bl,ch
  409964:	ror    DWORD PTR [eax-0x56b8cbc3],1
  40996a:	jb     0x409950
  40996c:	das    
  40996d:	outs   dx,DWORD PTR ds:[esi]
  40996e:	xor    DWORD PTR [ecx-0x4f],ebx
  409971:	jnp    0x40996c
  409973:	pop    ds
  409974:	dec    edi
  409975:	call   0x994920af
  40997a:	push   0xa5385eff
  40997f:	fs xor al,0xbf
  409982:	aas    
  409983:	inc    edi
  409984:	or     BYTE PTR [esi],dl
  409986:	stos   DWORD PTR es:[edi],eax
  409987:	mov    cl,0x7f
  409989:	mov    WORD PTR [ebx+0xf],fs
  40998c:	or     eax,0x994ec8d1
  409991:	mov    cl,0x84
  409993:	push   ss
  409994:	or     edi,DWORD PTR [ebx-0x11afddea]
  40999a:	shl    DWORD PTR [eax],1
  40999c:	cmp    BYTE PTR [ecx],dh
  40999e:	inc    esp
  40999f:	or     BYTE PTR [esi],dl
  4099a1:	add    BYTE PTR [eax],ah
  4099a3:	sar    edi,1
  4099a5:	(bad)  
  4099a6:	icebp  
  4099a7:	jbe    0x409a0c
  4099a9:	adc    eax,0x140716f6
  4099ae:	es dec esp
  4099b0:	inc    ebp
  4099b1:	xchg   esi,eax
  4099b2:	add    eax,ecx
  4099b4:	cmp    eax,0x7250af6e
  4099b9:	test   DWORD PTR [ebp+ebx*1-0x7cffaa2e],esi
  4099c0:	aad    0xc6
  4099c2:	sbb    al,0xf1
  4099c4:	gs int 0x45
  4099c7:	rol    DWORD PTR [ecx-0x702ab08b],1
  4099cd:	pop    edx
  4099ce:	push   es
  4099cf:	mov    dl,0x0
  4099d1:	add    BYTE PTR [eax-0x869dd6b],ch
  4099d7:	lods   eax,DWORD PTR ds:[esi]
  4099d8:	inc    esi
  4099d9:	adc    DWORD PTR ds:0x48f30b22,eax
  4099df:	xchg   edi,eax
  4099e0:	out    0xa6,al
  4099e2:	adc    BYTE PTR [ecx-0x2890b28f],bh
  4099e8:	jne    0x40996d
  4099ea:	jmp    0xef7b:0xd8866ba9
  4099f1:	pop    esp
  4099f2:	push   esi
  4099f3:	inc    esi
  4099f4:	fld    QWORD PTR [ebp-0x5f9d0f60]
  4099fa:	jg     0x4099dc
  4099fc:	test   DWORD PTR [ecx+edx*1+0x6b],0x4413517
  409a04:	outs   dx,DWORD PTR ds:[esi]
  409a05:	(bad)  
  409a06:	scas   eax,DWORD PTR es:[edi]
  409a07:	dec    edi
  409a08:	data16 jno 0x4099cd
  409a0b:	imul   DWORD PTR [edi]
  409a0d:	mov    DWORD PTR [eax-0x73],ebp
  409a10:	fisttp QWORD PTR [edi+edi*4+0x7e]
  409a14:	test   DWORD PTR [eax+0x1e],ecx
  409a17:	fild   WORD PTR [edx+ecx*8+0x7b]
  409a1b:	pop    esp
  409a1c:	adc    DWORD PTR [ebx+0x27041ce9],ebx
  409a22:	cld    
  409a23:	and    dh,BYTE PTR [edx]
  409a25:	stos   DWORD PTR es:[edi],eax
  409a26:	sub    ecx,DWORD PTR [ecx]
  409a28:	cmp    BYTE PTR [esi+0x20823de4],bh
  409a2e:	add    ebp,DWORD PTR [ebp+0x18]
  409a31:	lds    eax,FWORD PTR [esi]
  409a33:	mov    ecx,?
  409a35:	xor    al,0xef
  409a37:	lds    esi,FWORD PTR [edx+0x634aacc1]
  409a3d:	jle    0x4099db
  409a3f:	pop    esp
  409a40:	jmp    0x45bb04d6
  409a45:	dec    edi
  409a46:	les    ebp,FWORD PTR [ebp-0x732cf2d5]
  409a4c:	mov    edi,cs
  409a4e:	ret    
  409a4f:	jbe    0x409a18
  409a51:	add    dl,BYTE PTR [ecx-0x10173bee]
  409a57:	fisttp QWORD PTR [edi-0x3a]
  409a5a:	ror    BYTE PTR [edi],1
  409a5c:	sub    al,0xee
  409a5e:	jb     0x409a8a
  409a60:	mov    DWORD PTR [edi*8+0x71b84b9b],ebx
  409a67:	mov    ds:0xd7d257e3,al
  409a6c:	cmp    ebp,DWORD PTR [ecx-0x1a117f5c]
  409a72:	xchg   ebx,eax
  409a73:	add    esi,DWORD PTR [edx]
  409a75:	mov    WORD PTR ds:0x19a74c8,?
  409a7b:	fdivr  DWORD PTR [edi]
  409a7d:	enter  0x9707,0xa3
  409a81:	or     BYTE PTR [edi],al
  409a83:	daa    
  409a84:	clc    
  409a85:	int3   
  409a86:	jp     0x409ade
  409a88:	fwait
  409a89:	cmp    al,0x8b
  409a8b:	add    BYTE PTR [eax],cl
  409a8d:	pop    ebp
  409a8e:	fist   DWORD PTR [bp+si+0x45d8]
  409a93:	jb     0x409a41
  409a95:	or     BYTE PTR [esp+eax*4+0x194c4b7d],0x9e
  409a9d:	jmp    0x4583dd8b
  409aa2:	mov    cl,0x4d
  409aa4:	neg    DWORD PTR [eax+eax*1+0x6668a58a]
  409aab:	adc    ch,bl
  409aad:	add    al,0x84
  409aaf:	stos   DWORD PTR es:[edi],eax
  409ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ab1:	mov    esp,0xe7d499c7
  409ab6:	and    BYTE PTR [ecx+ebx*8+0x29126a6c],ah
  409abd:	jnp    0x409a8d
  409abf:	mov    eax,0xc1e98152
  409ac4:	in     al,0xfe
  409ac6:	mul    DWORD PTR ds:0xc831e976
  409acc:	mov    edi,0xb78576c5
  409ad1:	scas   eax,DWORD PTR es:[edi]
  409ad2:	rol    DWORD PTR [esp+ebp*4-0x6c],0xd5
  409ad7:	loope  0x409a9a
  409ad9:	(bad)  
  409ada:	aaa    
  409adb:	sbb    BYTE PTR [edi],0xa3
  409ade:	ret    
  409adf:	jmp    0xf4ba:0x5c676a1b
  409ae6:	xchg   esp,eax
  409ae7:	std    
  409ae8:	les    ecx,FWORD PTR [edx]
  409aea:	mov    esi,0x898e4829
  409aef:	sub    eax,0xa0faf65a
  409af4:	push   0xfffffff8
  409af6:	xor    ch,0xdf
  409af9:	outs   dx,BYTE PTR ds:[esi]
  409afa:	mov    edx,0xe4918705
  409aff:	mov    cs,WORD PTR [edi+0x45]
  409b02:	inc    ecx
  409b03:	dec    edi
  409b04:	rcr    DWORD PTR [ebp-0x54],1
  409b07:	jne    0x409b51
  409b09:	dec    ecx
  409b0a:	in     al,0xa0
  409b0c:	dec    ecx
  409b0d:	je     0x409b0b
  409b0f:	test   ch,al
  409b11:	lods   eax,DWORD PTR ds:[esi]
  409b12:	jae    0x409b5a
  409b14:	je     0x409b50
  409b16:	adc    eax,0x6b2cbe17
  409b1b:	sub    edx,esp
  409b1d:	mov    ds:0xad292e27,al
  409b22:	retf   
  409b23:	rcr    DWORD PTR [edi],cl
  409b25:	call   0xa6f4:0xfefdb06f
  409b2c:	inc    edi
  409b2d:	mov    dh,0x51
  409b2f:	or     edi,ecx
  409b31:	div    DWORD PTR [edx+0x23bdc835]
  409b37:	inc    DWORD PTR [edi+0x246d0e5f]
  409b3d:	adc    al,BYTE PTR [eax]
  409b3f:	(bad)  
  409b41:	xor    esi,DWORD PTR [eax+edi*2-0x7e95507e]
  409b48:	xchg   edi,eax
  409b49:	add    esi,edi
  409b4b:	icebp  
  409b4c:	hlt    
  409b4d:	stos   BYTE PTR es:[edi],al
  409b4e:	jecxz  0x409b26
  409b50:	and    bh,BYTE PTR [ebp+0x71]
  409b53:	pushw  es
  409b55:	ror    DWORD PTR [edx+0xb],0x50
  409b59:	out    0xbf,eax
  409b5b:	inc    esp
  409b5c:	xor    esp,DWORD PTR [edx+0x35]
  409b5f:	add    al,0xf6
  409b61:	sbb    al,0x66
  409b63:	scas   al,BYTE PTR es:[edi]
  409b64:	ss das 
  409b66:	mov    ecx,0xc4b08291
  409b6b:	pop    ebp
  409b6c:	sbb    edi,DWORD PTR [ebx]
  409b6e:	jo     0x409b65
  409b70:	mov    bh,0x80
  409b72:	or     eax,edx
  409b74:	mov    ebx,0x3c02fafc
  409b79:	inc    edx
  409b7a:	outs   dx,DWORD PTR ds:[esi]
  409b7b:	pop    ebp
  409b7c:	inc    edx
  409b7d:	inc    esi
  409b7e:	push   ss
  409b7f:	imul   ebx,DWORD PTR [ecx-0x53],0x7bf3321b
  409b86:	jge    0x409bf9
  409b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b89:	fild   WORD PTR ds:0x2696e078
  409b8f:	test   DWORD PTR [ebx+0x77],edx
  409b92:	sub    esi,ecx
  409b94:	push   ds
  409b95:	xchg   edx,eax
  409b96:	repz cmp esi,DWORD PTR [ebx+ecx*1]
  409b9a:	out    dx,al
  409b9b:	das    
  409b9c:	jle    0x409c16
  409b9e:	retf   
  409b9f:	mov    esp,ebx
  409ba1:	push   ds
  409ba2:	mov    edi,0x776670c1
  409ba7:	mov    esp,0xfc3a8e00
  409bac:	mov    ah,0xde
  409bae:	stos   DWORD PTR es:[edi],eax
  409baf:	hlt    
  409bb0:	dec    esp
  409bb1:	(bad)  
  409bb2:	adc    DWORD PTR [edx+0x5236443a],ebp
  409bb8:	(bad)  
  409bb9:	int    0x32
  409bbb:	cmc    
  409bbc:	arpl   WORD PTR [eax-0x3b],cx
  409bbf:	mov    esp,0x8ef168ce
  409bc4:	dec    esi
  409bc5:	or     DWORD PTR [ecx-0x4e2d361b],ecx
  409bcb:	aaa    
  409bcc:	lods   eax,DWORD PTR ds:[esi]
  409bcd:	push   edx
  409bce:	sbb    eax,0x989b787a
  409bd3:	(bad)  
  409bd4:	or     ebx,DWORD PTR [eax-0x44d46599]
  409bda:	fcom   QWORD PTR [ecx*8+0xdc9c71]
  409be1:	test   al,0x87
  409be3:	push   edi
  409be4:	dec    esi
  409be5:	out    0xd0,al
  409be7:	xchg   esp,eax
  409be8:	ficomp DWORD PTR [edx+0x7a]
  409beb:	bound  ebp,QWORD PTR [ecx+eiz*2]
  409bee:	jns    0x409c10
  409bf0:	cwde   
  409bf1:	sbb    ah,dl
  409bf3:	jp     0x409b8e
  409bf5:	jmp    0x52e54b5d
  409bfa:	mov    al,0x1
  409bfc:	sub    DWORD PTR [ebp+0x3d],0xfffffff2
  409c00:	into   
  409c01:	fmul   st(2),st
  409c03:	shl    DWORD PTR [eax-0x1a0ebbd2],0xe6
  409c0a:	jbe    0x409bfc
  409c0c:	dec    ecx
  409c0d:	add    edx,eax
  409c0f:	push   esi
  409c10:	mov    dl,0x9a
  409c12:	xor    eax,DWORD PTR [ebx+ebx*8]
  409c15:	jl     0x409c22
  409c17:	imul   ecx,DWORD PTR [ebx+esi*2-0xc216c69],0x4830ce8d
  409c22:	ds out dx,eax
  409c24:	inc    esi
  409c25:	sub    bh,BYTE PTR [ebx-0x27cc8925]
  409c2b:	and    eax,0xf3f32be3
  409c30:	xchg   ecx,eax
  409c31:	repz jl 0x409c83
  409c34:	push   0x366755ce
  409c39:	xlat   BYTE PTR ds:[ebx]
  409c3a:	std    
  409c3b:	sahf   
  409c3c:	ret    
  409c3d:	xor    BYTE PTR [eax+0x12],bh
  409c40:	addr16 (bad) 
  409c42:	inc    eax
  409c43:	pop    eax
  409c44:	aam    0xc1
  409c46:	aas    
  409c47:	inc    ebx
  409c48:	mov    al,ds:0x89c805d4
  409c4d:	pop    ds
  409c4e:	fisubr WORD PTR [ecx-0x5c]
  409c51:	push   es
  409c52:	rcr    edi,0x54
  409c55:	inc    esp
  409c56:	xchg   esi,eax
  409c57:	lahf   
  409c58:	add    BYTE PTR [edi+0x4f04acf2],bl
  409c5e:	mov    edi,0xc54dfcf3
  409c63:	les    ecx,FWORD PTR [ebx+ebp*4-0x6f4e5d29]
  409c6a:	test   DWORD PTR [eax+0x47],ecx
  409c6d:	adc    bl,BYTE PTR [ebx+0x587a02c7]
  409c73:	push   edi
  409c74:	adc    DWORD PTR [esi],0xffffffd6
  409c77:	sub    eax,0x9b517fb3
  409c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c7d:	btc    DWORD PTR [edx+0x9],edx
  409c81:	inc    ebx
  409c82:	sub    ebx,DWORD PTR [esi-0x70]
  409c85:	cmp    BYTE PTR [esp+edx*8+0x36],0xea
  409c8a:	jmp    0x3cb5:0x809864cc
  409c91:	xchg   bh,dh
  409c93:	je     0x409c45
  409c95:	jecxz  0x409cf5
  409c97:	adc    al,0xa9
  409c99:	mov    esp,0x9692f16
  409c9e:	xchg   ebx,eax
  409c9f:	inc    eax
  409ca0:	pushf  
  409ca1:	jnp    0x409c7e
  409ca3:	icebp  
  409ca4:	ret    0x4194
  409ca7:	call   0xe0ce2007
  409cac:	pop    esi
  409cad:	mov    edi,0x46957f39
  409cb2:	pop    edx
  409cb3:	fistp  DWORD PTR [eax-0x762706c6]
  409cb9:	sbb    DWORD PTR [ecx-0x21],esp
  409cbc:	xor    ebx,DWORD PTR [edx]
  409cbe:	cld    
  409cbf:	mov    bh,0x20
  409cc2:	add    ebp,DWORD PTR [ecx]
  409cc4:	dec    eax
  409cc5:	push   ds
  409cc6:	cmp    ecx,DWORD PTR [ebx]
  409cc8:	sar    BYTE PTR [ebp-0x4c],cl
  409ccb:	inc    eax
  409ccc:	jmp    0x62330c93
  409cd1:	cld    
  409cd2:	inc    esi
  409cd3:	aas    
  409cd4:	and    eax,0x232a9ec5
  409cd9:	popf   
  409cda:	cmp    al,0x32
  409cdc:	xchg   ecx,eax
  409cdd:	(bad)  
  409cde:	hlt    
  409cdf:	leave  
  409ce0:	mov    ch,0xf0
  409ce2:	(bad)  
  409ce3:	or     al,0x55
  409ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ce6:	push   ecx
  409ce7:	out    0x8d,eax
  409ce9:	dec    ebx
  409cea:	and    eax,0xcef4b909
  409cef:	inc    ebp
  409cf0:	mov    dl,0x58
  409cf2:	cld    
  409cf3:	add    dl,bl
  409cf5:	inc    ecx
  409cf6:	adc    DWORD PTR [eax+0x4dd71650],esi
  409cfc:	mov    al,0x40
  409cfe:	mov    ch,0x12
  409d00:	adc    DWORD PTR [edx],0xffffffcb
  409d03:	xor    al,0xdd
  409d05:	jecxz  0x409d03
  409d07:	sub    DWORD PTR [ecx-0x2f6d105f],edi
  409d0d:	mov    ecx,0xa59b1d37
  409d12:	fist   DWORD PTR [ebx]
  409d14:	dec    edx
  409d15:	idiv   BYTE PTR [edi+0x1748d40c]
  409d1b:	rol    edx,cl
  409d1d:	pusha  
  409d1e:	push   ebp
  409d1f:	into   
  409d20:	retf   0xd7fb
  409d23:	add    dh,dh
  409d25:	jns    0x409d33
  409d27:	mov    esp,0x8c704a16
  409d2c:	out    dx,eax
  409d2d:	mov    eax,0x4d036b2
  409d32:	push   ebp
  409d33:	jecxz  0x409cff
  409d35:	xlat   BYTE PTR ds:[ebx]
  409d36:	lods   eax,DWORD PTR ds:[esi]
  409d37:	call   0xb97bd7d4
  409d3c:	pop    ds
  409d3d:	jmp    0x6b6f:0xe3982927
  409d44:	ins    BYTE PTR es:[edi],dx
  409d45:	cdq    
  409d46:	mov    ah,0x3
  409d48:	stc    
  409d49:	sub    edi,DWORD PTR [eax]
  409d4b:	pop    es
  409d4c:	(bad)  
  409d4d:	loop   0x409dc9
  409d4f:	pop    eax
  409d50:	les    ecx,FWORD PTR [ebp+0x7d]
  409d53:	lfs    esp,FWORD PTR [ebp-0x4122cff9]
  409d5a:	fsub   DWORD PTR [ecx-0x2d]
  409d5d:	cmp    dh,BYTE PTR [edx-0x23c51ece]
  409d63:	cwde   
  409d64:	je     0x409d60
  409d66:	nop
  409d67:	jne    0x409d8d
  409d69:	push   ss
  409d6a:	xor    ecx,edx
  409d6c:	mov    dl,0x99
  409d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d6f:	sbb    BYTE PTR [esi+esi*2-0x666a3cb4],dh
  409d76:	in     eax,dx
  409d77:	clc    
  409d78:	(bad)  
  409d79:	out    0x9f,al
  409d7b:	pop    edx
  409d7c:	mov    bl,0x2b
  409d7e:	mov    esi,0xbeed69bf
  409d83:	adc    DWORD PTR [edi+0xf],edx
  409d86:	les    esi,FWORD PTR [edi+ebx*1+0x583d4b8]
  409d8d:	cmp    ecx,esp
  409d8f:	les    eax,FWORD PTR [edi]
  409d91:	jo     0x409d92
  409d93:	cdq    
  409d94:	xchg   ebx,eax
  409d95:	repnz call 0x6ee3:0x2ae42d0d
  409d9d:	push   esi
  409d9e:	mov    eax,ds:0x16f1001b
  409da3:	nop
  409da4:	les    edx,FWORD PTR [ebx]
  409da6:	and    DWORD PTR ds:0x8dda732d,esi
  409dac:	and    eax,ebx
  409dae:	pop    esp
  409daf:	int3   
  409db0:	repz (bad) 
  409db3:	aas    
  409db4:	dec    esi
  409db5:	ins    DWORD PTR es:[edi],dx
  409db6:	jae    0x409d7c
  409db8:	cmp    al,0xbf
  409dba:	cmp    esi,DWORD PTR ds:0xf330c04
  409dc0:	loopne 0x409d52
  409dc2:	outs   dx,DWORD PTR ds:[esi]
  409dc3:	cmp    al,0xc2
  409dc5:	xchg   ebx,eax
  409dc6:	stos   DWORD PTR es:[edi],eax
  409dc7:	nop
  409dc8:	(bad)  
  409dc9:	call   0xa7a0efec
  409dce:	mov    ebx,0x4eb6f7bb
  409dd3:	rcr    ch,cl
  409dd5:	ds sbb al,0xe9
  409dd8:	dec    eax
  409dd9:	and    BYTE PTR ds:0x3321e53c,0x8e
  409de0:	mov    ah,0x4a
  409de2:	xor    bl,al
  409de4:	pop    ss
  409de5:	xor    al,0x42
  409de7:	(bad)  
  409de8:	mov    bh,0x86
  409dea:	into   
  409deb:	outs   dx,BYTE PTR ds:[esi]
  409dec:	test   DWORD PTR [ecx+0x3b932761],edx
  409df2:	aam    0xa
  409df4:	bound  ebp,QWORD PTR [edi+edi*1-0x7f]
  409df8:	mov    al,ds:0x9d603c4b
  409dfd:	adc    edx,DWORD PTR [ebx-0x4b]
  409e00:	in     al,dx
  409e01:	mov    ah,cl
  409e03:	cmp    DWORD PTR [eax+0x36],ecx
  409e06:	xchg   ebp,eax
  409e07:	popf   
  409e08:	adc    BYTE PTR [ebx],dh
  409e0a:	ds ins DWORD PTR es:[edi],dx
  409e0c:	mov    dh,BYTE PTR [esi]
  409e0e:	jmp    0x54f1:0xcd23d7cc
  409e15:	jl     0x409dd7
  409e17:	fsubr  QWORD PTR [ebp+0x4e]
  409e1a:	xlat   BYTE PTR ds:[ebx]
  409e1b:	adc    edx,ecx
  409e1d:	aam    0x4c
  409e1f:	jbe    0x409e59
  409e21:	adc    al,0x96
  409e23:	popa   
  409e24:	call   0x2d13:0xc898ce94
  409e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e2c:	xor    cl,BYTE PTR [ecx+0x5a]
  409e2f:	fild   WORD PTR [esi+edx*8+0x289cc43a]
  409e36:	or     bl,BYTE PTR [edi]
  409e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e39:	pop    eax
  409e3a:	adc    ebx,DWORD PTR [ebx]
  409e3c:	idiv   DWORD PTR [ecx-0x17]
  409e3f:	xchg   edx,eax
  409e40:	fistp  DWORD PTR [eax]
  409e42:	xor    al,0x93
  409e44:	jo     0x409e79
  409e46:	push   eax
  409e47:	pushf  
  409e48:	jns    0x409e3c
  409e4a:	(bad)  [ecx]
  409e4c:	mov    edi,0xfbb85c8e
  409e51:	or     eax,0x9d8b51f2
  409e56:	sub    al,dl
  409e58:	mov    DWORD PTR [eax],ebp
  409e5a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  409e5c:	sub    eax,0xd0c8e8b7
  409e61:	imul   ebx,DWORD PTR [ebx+esi*2+0x66],0x76edaccb
  409e69:	int    0xc7
  409e6b:	rcl    DWORD PTR [ebx-0x3c],0x6
  409e6f:	add    BYTE PTR [edi],cl
  409e71:	scas   eax,DWORD PTR es:[edi]
  409e72:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx-0x4ca83f7d],bl
  40a717:	je     0x40a6f4
  40a719:	cmp    ebp,DWORD PTR [ebp+0x4]
  40a71c:	jp     0x40a798
  40a71e:	out    0x5f,al
  40a720:	jp     0x40a79c
  40a722:	add    al,0xa1
  40a724:	add    eax,0x234cf4e4
  40a729:	mov    esp,0xb3a84e43
  40a72e:	sub    al,0xc9
  40a730:	cmp    eax,0xc8c2c0fe
  40a735:	int    0xd
  40a737:	cmp    ebx,DWORD PTR [ecx+ebp*2]
  40a73a:	push   es
  40a73b:	out    dx,al
  40a73c:	pushf  
  40a73d:	retf   0x531
  40a740:	lahf   
  40a741:	enter  0xe557,0x83
  40a745:	jno    0x40a6f4
  40a747:	mov    ecx,0xbe0fd768
  40a74c:	rcr    DWORD PTR ds:0xa0fb3b0d,1
  40a752:	sbb    BYTE PTR [eax],cl
  40a754:	xchg   ebp,eax
  40a755:	ds jge 0x40a7a4
  40a758:	mov    ebp,0x4ed885fc
  40a75d:	inc    esp
  40a75e:	mov    BYTE PTR [eax+0x55],dh
  40a761:	lock xchg esi,eax
  40a763:	rcl    DWORD PTR [ecx-0x13fede62],cl
  40a769:	dec    edx
  40a76a:	or     al,BYTE PTR [ecx-0x63]
  40a76d:	sub    BYTE PTR [esi+0x3a],dh
  40a770:	dec    edx
  40a771:	mov    bh,0x47
  40a773:	mov    bl,0xd7
  40a775:	add    al,0x31
  40a777:	popa   
  40a778:	push   edx
  40a779:	cdq    
  40a77a:	sbb    ebx,DWORD PTR [ecx-0x77b2ba13]
  40a780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a781:	mov    bl,0x74
  40a783:	xchg   esi,eax
  40a784:	xchg   edi,eax
  40a785:	popa   
  40a786:	in     eax,0x30
  40a788:	ins    DWORD PTR es:[edi],dx
  40a789:	mov    cl,0xe0
  40a78b:	lods   eax,DWORD PTR ds:[esi]
  40a78c:	cmp    edi,ebx
  40a78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a78f:	jb     0x40a7b9
  40a791:	add    eax,0x1ca1d839
  40a796:	sti    
  40a797:	dec    bp
  40a799:	jge    0x40a7cb
  40a79b:	cmp    BYTE PTR [esi],0xf1
  40a79e:	inc    eax
  40a79f:	push   edi
  40a7a0:	adc    BYTE PTR [ebp-0x53b940e9],bh
  40a7a6:	adc    BYTE PTR [edi-0x76],ch
  40a7a9:	jb     0x40a76c
  40a7ab:	mov    cl,0x34
  40a7ad:	jno    0x40a7fd
  40a7af:	nop
  40a7b0:	stc    
  40a7b1:	and    BYTE PTR [ecx+0x14],dl
  40a7b4:	inc    eax
  40a7b5:	mov    al,ds:0xdf659d2f
  40a7ba:	int    0x4b
  40a7bc:	in     eax,0x11
  40a7be:	xchg   ebx,eax
  40a7bf:	push   ebp
  40a7c0:	adc    BYTE PTR [eax],dl
  40a7c2:	ret    
  40a7c3:	(bad)
  40a7c6:	test   DWORD PTR [ecx+0x13],esi
  40a7c9:	frstor [esp+ebp*1-0x34c2b39d]
  40a7d0:	mov    ss,edi
  40a7d2:	stos   WORD PTR es:[edi],ax
  40a7d4:	inc    esi
  40a7d5:	in     eax,dx
  40a7d6:	test   al,0x64
  40a7d8:	cmp    dh,bl
  40a7da:	xor    edx,DWORD PTR [ebp+ebp*1-0x4c]
  40a7de:	addr16 and ch,dh
  40a7e1:	xlat   BYTE PTR ds:[ebx]
  40a7e2:	add    DWORD PTR [ebx+0x472e8c33],esi
  40a7e8:	and    BYTE PTR [edi],bh
  40a7ea:	mov    WORD PTR [eax-0x40b4b010],ds
  40a7f0:	dec    esi
  40a7f1:	jecxz  0x40a7e8
  40a7f3:	es sbb bh,bl
  40a7f6:	nop
  40a7f7:	lods   al,BYTE PTR ds:[esi]
  40a7f8:	xlat   BYTE PTR ds:[ebx]
  40a7f9:	cmp    eax,0xdccd363c
  40a7fe:	mov    bh,0xaa
  40a800:	mov    ebx,0xe788b8e8
  40a805:	lds    ecx,FWORD PTR [ecx]
  40a807:	xchg   edi,eax
  40a808:	dec    esp
  40a809:	mov    ah,0x91
  40a80b:	jo     0x40a7c0
  40a80d:	ss dec ebx
  40a80f:	das    
  40a810:	int3   
  40a811:	cmc    
  40a812:	outs   dx,BYTE PTR ds:[esi]
  40a813:	sub    ebx,DWORD PTR [ecx]
  40a815:	jecxz  0x40a854
  40a817:	push   esp
  40a818:	sbb    bl,BYTE PTR [ebp-0x64]
  40a81b:	(bad)  
  40a81c:	pusha  
  40a81d:	and    al,dh
  40a81f:	jae    0x40a847
  40a821:	fdiv   QWORD PTR [edi+0x470ad48c]
  40a827:	fucomip st,st(1)
  40a829:	loope  0x40a813
  40a82b:	mov    dh,0x77
  40a82d:	sub    dh,BYTE PTR ds:0x7392acec
  40a833:	xchg   ebp,eax
  40a834:	sbb    BYTE PTR [eax],dh
  40a836:	jno    0x40a810
  40a838:	jle    0x40a845
  40a83a:	jmp    0xf671:0xc988a508
  40a841:	dec    ebx
  40a842:	jno    0x40a86b
  40a844:	xchg   ecx,eax
  40a845:	adc    eax,0x52afdd02
  40a84a:	xchg   esp,eax
  40a84b:	pop    esi
  40a84c:	clc    
  40a84d:	retf   
  40a84e:	sbb    edi,esi
  40a850:	or     al,BYTE PTR [edi]
  40a852:	shl    DWORD PTR [edi-0x59a3d5eb],cl
  40a858:	inc    edx
  40a859:	push   ds
  40a85a:	cdq    
  40a85b:	fisub  WORD PTR [edi+edi*2]
  40a85e:	test   BYTE PTR [esi+0x2a84623a],ah
  40a864:	dec    ebx
  40a865:	inc    ebx
  40a866:	xchg   ebp,eax
  40a867:	xchg   esp,eax
  40a868:	ror    BYTE PTR [edi-0x7081dcbd],cl
  40a86e:	call   0xb8021e0e
  40a873:	push   edx
  40a874:	stos   BYTE PTR es:[edi],al
  40a875:	xor    al,0xb1
  40a877:	or     al,0x66
  40a879:	mov    edi,0x4bffadc6
  40a87e:	cli    
  40a87f:	mov    ds:0x84057540,eax
  40a884:	mov    ?,WORD PTR [eax-0x73]
  40a887:	ins    BYTE PTR es:[edi],dx
  40a888:	sbb    esp,DWORD PTR [ebx+edx*2]
  40a88b:	mov    edi,0x3c7908a8
  40a890:	push   0xd24ab55e
  40a895:	ret    0xe164
  40a898:	pop    edx
  40a899:	iret   
  40a89a:	cmp    al,0xc
  40a89c:	into   
  40a89d:	xor    DWORD PTR [esi-0x4d],0xb4010b0
  40a8a4:	jo     0x40a8dd
  40a8a6:	jmp    0x6425735
  40a8ab:	bound  edx,QWORD PTR ds:0x8d1cc4eb
  40a8b1:	fs iret 
  40a8b3:	gs or  al,0x21
  40a8b6:	mov    dh,0x69
  40a8b8:	and    al,0xac
  40a8ba:	iret   
  40a8bb:	sub    al,0x99
  40a8bd:	(bad)  
  40a8be:	outs   dx,BYTE PTR ds:[esi]
  40a8bf:	call   0xdfa732df
  40a8c4:	xchg   ebp,eax
  40a8c5:	and    al,0x69
  40a8c7:	icebp  
  40a8c8:	jp     0x40a89c
  40a8ca:	cli    
  40a8cb:	fisub  WORD PTR [edi]
  40a8cd:	pop    esp
  40a8ce:	out    dx,eax
  40a8cf:	add    DWORD PTR [eax+0x62],ebp
  40a8d2:	dec    BYTE PTR [ecx-0x43636327]
  40a8d8:	clc    
  40a8d9:	adc    al,BYTE PTR [eax]
  40a8db:	into   
  40a8dc:	fiadd  WORD PTR [ebp+0x610f47da]
  40a8e2:	popa   
  40a8e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8e4:	jmp    0x40a8cf
  40a8e6:	push   ecx
  40a8e7:	(bad)  
  40a8e8:	sbb    BYTE PTR [edi],dl
  40a8ea:	pop    edx
  40a8eb:	xor    eax,DWORD PTR [ecx+0x2f136709]
  40a8f1:	jl     0x40a931
  40a8f3:	fdiv   QWORD PTR ds:0x4333f9e7
  40a8f9:	inc    ebx
  40a8fa:	push   esi
  40a8fb:	aad    0x90
  40a8fd:	retf   
  40a8fe:	out    0x8,eax
  40a900:	inc    esp
  40a901:	leave  
  40a902:	inc    esi
  40a903:	sub    DWORD PTR [ecx+0x52],edx
  40a906:	sbb    dh,BYTE PTR [ebx]
  40a908:	pop    ecx
  40a909:	sahf   
  40a90a:	mov    dh,0x9e
  40a90c:	mov    ch,0xc6
  40a90e:	push   ebp
  40a90f:	dec    ecx
  40a910:	nop
  40a911:	and    edx,DWORD PTR [ecx]
  40a913:	ds sahf 
  40a915:	xchg   edi,eax
  40a916:	jge    0x40a8f6
  40a918:	cs leave 
  40a91a:	sbb    dl,BYTE PTR [eax+0x31]
  40a91d:	cs pop eax
  40a91f:	pop    ds
  40a920:	rcl    DWORD PTR [ecx-0x43],1
  40a923:	jl     0x40a961
  40a925:	sub    bh,BYTE PTR [edx-0x19]
  40a928:	cmp    al,0xb8
  40a92a:	cmp    BYTE PTR [eax+0x321a0b25],dh
  40a930:	cmc    
  40a931:	cld    
  40a932:	adc    ecx,DWORD PTR [esi-0x314968ea]
  40a938:	jmp    0x40a93c
  40a93a:	xlat   BYTE PTR ds:[ebx]
  40a93b:	icebp  
  40a93c:	int    0xfc
  40a93e:	add    eax,0xeb6e47a7
  40a943:	les    edi,FWORD PTR [eax-0x36]
  40a946:	unpcklps xmm0,XMMWORD PTR [eax-0x269f4c80]
  40a94d:	xchg   esi,eax
  40a94e:	push   edi
  40a94f:	dec    esi
  40a950:	xchg   BYTE PTR [esi+ebx*4],al
  40a953:	cs mov bh,0xf7
  40a956:	sar    DWORD PTR [edi+0x6b81d2c1],1
  40a95c:	add    DWORD PTR [esi-0x2244f83a],eax
  40a962:	and    bl,ch
  40a964:	cmp    eax,0x4f878d82
  40a969:	add    dl,BYTE PTR [esi-0x69]
  40a96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a96d:	cmp    BYTE PTR [esi],bh
  40a96f:	sub    esi,DWORD PTR [esi]
  40a971:	jecxz  0x40a9cf
  40a973:	adc    DWORD PTR [edx+esi*8+0x5f],ecx
  40a977:	jmp    0x43cb:0xfdd18949
  40a97e:	xchg   DWORD PTR [edx-0x5e731370],eax
  40a984:	sbb    esi,DWORD PTR [ecx+0x12]
  40a987:	in     al,dx
  40a988:	ret    0xf923
  40a98b:	jo     0x40a9b6
  40a98d:	add    ebx,esp
  40a98f:	bound  edi,QWORD PTR [edi]
  40a991:	fdivp  st(6),st
  40a993:	mov    edi,0xbe774a08
  40a998:	pop    es
  40a999:	dec    esp
  40a99a:	stos   DWORD PTR es:[edi],eax
  40a99b:	xchg   ebx,eax
  40a99c:	sbb    esi,edx
  40a99e:	scas   eax,DWORD PTR es:[edi]
  40a99f:	inc    ebx
  40a9a0:	pop    ecx
  40a9a1:	mov    WORD PTR [eax+0x27],?
  40a9a4:	pop    edi
  40a9a5:	mov    BYTE PTR [edx-0x46],al
  40a9a8:	pop    es
  40a9a9:	push   edx
  40a9aa:	mov    edi,0xd2973ed0
  40a9af:	add    dl,BYTE PTR [ebx+0x4f433dc2]
  40a9b5:	popf   
  40a9b6:	fmul   DWORD PTR [edx-0x2e41633e]
  40a9bc:	mov    es,WORD PTR [esi+0x128b9910]
  40a9c2:	dec    ebp
  40a9c3:	outs   dx,BYTE PTR ds:[esi]
  40a9c4:	add    BYTE PTR [edx],bh
  40a9c6:	stos   DWORD PTR es:[edi],eax
  40a9c7:	xchg   ebx,eax
  40a9c8:	and    eax,0x3eeb954c
  40a9cd:	stos   BYTE PTR es:[edi],al
  40a9ce:	xchg   DWORD PTR [ebp+0x72],edi
  40a9d1:	and    DWORD PTR [eax+eax*1],edi
  40a9d4:	icebp  
  40a9d5:	std    
  40a9d6:	mov    BYTE PTR [ecx-0x4b],bh
  40a9d9:	les    eax,FWORD PTR [ebp+0x1930d6db]
  40a9df:	fisubr WORD PTR [edi]
  40a9e1:	push   ebx
  40a9e2:	es repnz pop esp
  40a9e5:	sbb    BYTE PTR [ecx],cl
  40a9e7:	daa    
  40a9e8:	jb     0x40a9b8
  40a9ea:	xchg   DWORD PTR ds:0x4d686d65,ecx
  40a9f0:	pusha  
  40a9f1:	leave  
  40a9f2:	xchg   ebx,eax
  40a9f3:	pop    ebp
  40a9f4:	sti    
  40a9f5:	stc    
  40a9f6:	mov    dl,0x1d
  40a9f8:	mov    bl,0x26
  40a9fa:	test   al,0xf3
  40a9fc:	vaddsubps ymm4,ymm7,YMMWORD PTR ds:0xddaeddb5
  40aa04:	jmp    0xa5975e54
  40aa09:	mov    ebx,0x2d098e78
  40aa0e:	mov    BYTE PTR [ecx-0x77679790],cl
  40aa14:	out    dx,al
  40aa15:	aad    0x3b
  40aa17:	test   DWORD PTR [edi+ebp*1],0xa50ff13e
  40aa1e:	mov    edi,0xc7a9b7da
  40aa23:	dec    ebx
  40aa24:	loope  0x40aa26
  40aa26:	loopne 0x40aa16
  40aa28:	xchg   edi,eax
  40aa29:	inc    edx
  40aa2a:	imul   edi,DWORD PTR [ecx+eax*2],0x30
  40aa2e:	mov    ds:0x2183e022,eax
  40aa33:	sbb    al,0xf1
  40aa35:	in     al,dx
  40aa36:	add    ah,al
  40aa38:	cmp    BYTE PTR [edx-0x32fe561e],ah
  40aa3e:	mov    ds:0x60a4d55b,al
  40aa43:	xlat   BYTE PTR ds:[ebx]
  40aa44:	(bad)  
  40aa45:	sbb    BYTE PTR [ebx],bh
  40aa47:	retf   
  40aa48:	jbe    0x40aa9b
  40aa4a:	xor    al,0x9d
  40aa4c:	imul   ah
  40aa4e:	sti    
  40aa4f:	mul    BYTE PTR [edx+0x21]
  40aa52:	xor    BYTE PTR [eax],0xaf
  40aa55:	xor    edx,DWORD PTR [ebx+eax*4-0x7bb22818]
  40aa5c:	lds    esp,FWORD PTR [edi-0x6b]
  40aa5f:	stos   DWORD PTR es:[edi],eax
  40aa60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa61:	adc    eax,0x87f48743
  40aa66:	shl    DWORD PTR [edi-0x239b47b0],0x54
  40aa6d:	push   ebp
  40aa6e:	jns    0x40a9f8
  40aa70:	sub    bh,BYTE PTR [ebp+0x2fbf63d0]
  40aa76:	ficom  DWORD PTR [ebx]
  40aa78:	scas   al,BYTE PTR es:[edi]
  40aa79:	pop    ebx
  40aa7a:	aam    0x98
  40aa7c:	push   ds
  40aa7d:	jecxz  0x40aaf6
  40aa7f:	add    edx,DWORD PTR [ebx+0x50]
  40aa82:	cld    
  40aa83:	pop    ds
  40aa84:	ins    BYTE PTR es:[edi],dx
  40aa85:	jns    0x40ab06
  40aa87:	push   ecx
  40aa88:	out    dx,eax
  40aa89:	sub    eax,ebp
  40aa8b:	inc    ebx
  40aa8c:	mov    dh,0xd3
  40aa8e:	sbb    bh,BYTE PTR ds:0xc146b0e3
  40aa94:	test   eax,0xab181500
  40aa99:	mov    bl,0xd6
  40aa9b:	or     bl,BYTE PTR [edx+0x4f]
  40aa9e:	std    
  40aa9f:	(bad)  
  40aaa1:	and    al,0x7c
  40aaa3:	ins    DWORD PTR es:[edi],dx
  40aaa4:	mov    WORD PTR [ebx-0x6357fe25],?
  40aaaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaab:	and    ah,0xc7
  40aaae:	and    cl,BYTE PTR [edx+eax*2+0x32]
  40aab2:	in     eax,dx
  40aab3:	fs push es
  40aab5:	nop
  40aab6:	int    0xcf
  40aab8:	inc    ecx
  40aab9:	xchg   edx,eax
  40aaba:	sbb    ebx,esp
  40aabc:	xor    ebp,esi
  40aabe:	sub    eax,0xd1aff407
  40aac3:	aaa    
  40aac4:	and    DWORD PTR [ecx-0x69],esi
  40aac7:	test   eax,0xb213c4aa
  40aacc:	mov    bh,0x53
  40aace:	mov    al,0x33
  40aad0:	mov    esi,ebx
  40aad2:	sub    al,0x50
  40aad4:	cld    
  40aad5:	outs   dx,DWORD PTR ds:[esi]
  40aad6:	add    al,0x50
  40aad8:	inc    eax
  40aad9:	push   eax
  40aada:	push   ss
  40aadb:	mov    al,ds:0xd22c79db
  40aae0:	nop
  40aae1:	add    BYTE PTR [esi-0x6d],ah
  40aae4:	add    DWORD PTR ds:0xff33bcd9,eax
  40aaea:	imul   ebx,DWORD PTR [ebx],0x6d650a77
  40aaf0:	adc    eax,DWORD PTR [ebp+eax*2+0x4d0cbd2f]
  40aaf7:	or     eax,0xe9c7fc67
  40aafc:	push   ebx
  40aafd:	stos   BYTE PTR es:[edi],al
  40aafe:	cdq    
  40aaff:	(bad)  
  40ab00:	adc    DWORD PTR [ecx-0x4f],eax
  40ab03:	inc    esp
  40ab04:	jl     0x40ab2d
  40ab06:	aas    
  40ab07:	stos   DWORD PTR es:[edi],eax
  40ab08:	or     esp,ebx
  40ab0a:	pusha  
  40ab0b:	mov    WORD PTR [esi-0xdc075dc],es
  40ab11:	push   ecx
  40ab12:	in     al,dx
  40ab13:	jp     0x40ab43
  40ab15:	xor    BYTE PTR [eax+0x59],bl
  40ab18:	leave  
  40ab19:	xor    bh,BYTE PTR [edi]
  40ab1b:	stos   DWORD PTR es:[edi],eax
  40ab1c:	push   esi
  40ab1d:	rol    DWORD PTR [ecx],0x89
  40ab20:	gs mov ah,0xa1
  40ab23:	rol    DWORD PTR [ebx+0x23820b27],cl
  40ab29:	pop    edi
  40ab2a:	aas    
  40ab2b:	xor    dl,ch
  40ab2d:	mov    eax,ds:0x22655b93
  40ab32:	or     BYTE PTR [edx-0x4c506763],ch
  40ab38:	outs   dx,DWORD PTR ds:[esi]
  40ab39:	jp     0x40aac2
  40ab3b:	jno    0x40ab2d
  40ab3d:	add    BYTE PTR [ebx*4+0x4900cb38],cl
  40ab44:	add    bh,BYTE PTR ds:0xc418306f
  40ab4a:	test   eax,0x672bc980
  40ab4f:	pop    ebp
  40ab50:	jle    0x40ab1b
  40ab52:	and    DWORD PTR [ebx+0x46],ecx
  40ab55:	and    DWORD PTR ds:0x484d817a,0xffffffab
  40ab5c:	ins    DWORD PTR es:[edi],dx
  40ab5d:	and    ebx,edx
  40ab5f:	mov    bh,0xd9
  40ab61:	mov    ebx,0x794f8e55
  40ab66:	sbb    BYTE PTR ds:0xc5e55ac3,ah
  40ab6c:	loope  0x40ab25
  40ab6e:	dec    ecx
  40ab6f:	shr    DWORD PTR [edi-0x7d],cl
  40ab72:	sub    ch,dh
  40ab74:	and    al,0xa0
  40ab76:	js     0x40ab4a
  40ab78:	imul   edi,ecx,0xffffffc9
  40ab7b:	push   esi
  40ab7c:	xlat   BYTE PTR ds:[ebx]
  40ab7d:	mov    BYTE PTR [esi+0x71c296a2],dl
  40ab83:	push   edi
  40ab84:	push   edx
  40ab85:	and    eax,0x4638e54d
  40ab8a:	and    esp,ecx
  40ab8c:	dec    ecx
  40ab8d:	idiv   BYTE PTR [eax]
  40ab8f:	inc    edx
  40ab90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab91:	cmp    DWORD PTR [edx+0x4701e494],ebx
  40ab97:	fiadd  WORD PTR ds:[edi+0x265ca25c]
  40ab9e:	mov    ah,0xe2
  40aba0:	out    dx,eax
  40aba1:	jo     0x40ab3f
  40aba3:	sbb    ebx,DWORD PTR [ecx-0x12]
  40aba6:	pop    edi
  40aba7:	xchg   BYTE PTR [ecx-0x7b],cl
  40abaa:	(bad)  
  40abab:	nop
  40abac:	inc    esi
  40abad:	push   ss
  40abae:	sbb    BYTE PTR [eax+0x1cf6e6de],bl
  40abb4:	mov    bh,0x84
  40abb6:	inc    esp
  40abb7:	aad    0xdf
  40abb9:	pushf  
  40abba:	dec    ecx
  40abbb:	in     al,dx
  40abbc:	sahf   
  40abbd:	jp     0x40abc6
  40abbf:	in     eax,dx
  40abc0:	sbb    DWORD PTR [edi+0x2e],ebp
  40abc3:	aas    
  40abc4:	jmp    0x40ab85
  40abc6:	mov    al,0xd0
  40abc8:	or     dl,BYTE PTR [esi-0x4b3aef2e]
  40abce:	xchg   ecx,eax
  40abcf:	addr16 mov al,ds:0x20ff
  40abd3:	mov    dh,0xcc
  40abd5:	dec    eax
  40abd6:	dec    edx
  40abd7:	push   cs
  40abd8:	mov    bl,0xf0
  40abda:	jle    0x40ab9c
  40abdc:	cmp    BYTE PTR [esi-0x2a],0xac
  40abe0:	mov    ch,BYTE PTR [edx]
  40abe2:	sub    bh,BYTE PTR [edi+eax*8+0x2e]
  40abe6:	push   ebx
  40abe7:	test   eax,0xe796d91a
  40abec:	scas   al,BYTE PTR es:[edi]
  40abed:	and    al,BYTE PTR [ebx+0x79900358]
  40abf3:	cmp    dl,BYTE PTR fs:0x2e5902b3
  40abfa:	add    BYTE PTR [ecx+eiz*1],ah
  40abfd:	or     al,0xb
  40abff:	imul   ecx,esi,0x1d
  40ac02:	ja     0x40ac16
  40ac04:	cld    
  40ac05:	clc    
  40ac06:	mov    eax,0x5af3e4ac
  40ac0b:	ss adc eax,0x7854551f
  40ac11:	call   0xb184824c
  40ac16:	aaa    
  40ac17:	pop    ds
  40ac18:	adc    BYTE PTR [eax+ebx*8+0x42ba8a78],bl
  40ac1f:	into   
  40ac20:	leave  
  40ac21:	cmp    al,0x7f
  40ac23:	add    DWORD PTR [ebp-0x19aa59d8],eax
  40ac29:	jae    0x40abc8
  40ac2b:	inc    esi
  40ac2c:	clc    
  40ac2d:	scas   eax,DWORD PTR es:[edi]
  40ac2e:	jae    0x40ac1d
  40ac30:	test   BYTE PTR [ebx-0x23],0x15
  40ac34:	mov    al,ds:0x68ee509f
  40ac39:	and    al,0x38
  40ac3b:	xlat   BYTE PTR ds:[ebx]
  40ac3c:	mov    al,ds:0x54f60136
  40ac41:	aaa    
  40ac42:	aam    0x8a
  40ac44:	push   edi
  40ac45:	loop   0x40ac80
  40ac47:	adc    ah,bl
  40ac49:	sete   al
  40ac4c:	mul    DWORD PTR [ebx-0x5433fccf]
  40ac52:	shl    al,1
  40ac54:	std    
  40ac55:	add    al,0x9d
  40ac57:	std    
  40ac58:	imul   DWORD PTR [edx-0x27]
  40ac5b:	cdq    
  40ac5c:	lock aad 0xde
  40ac5f:	pop    eax
  40ac60:	jp     0x40ac8b
  40ac62:	dec    ebx
  40ac63:	loope  0x40acb7
  40ac65:	or     al,0x90
  40ac67:	sbb    al,0x99
  40ac69:	in     eax,0xdc
  40ac6b:	out    0x71,al
  40ac6d:	cmc    
  40ac6e:	loop   0x40acac
  40ac70:	add    bl,BYTE PTR [edi]
  40ac72:	sub    eax,0xe995b49d
  40ac77:	out    0x4c,al
  40ac79:	mov    WORD PTR [edx+0x11],?
  40ac7c:	js     0x40ac14
  40ac7e:	xlat   BYTE PTR ds:[ebx]
  40ac7f:	stos   DWORD PTR es:[edi],eax
  40ac80:	adc    eax,ebx
  40ac82:	loopne 0x40ac76
  40ac84:	imul   edx,ebx,0x666cf95a
  40ac8a:	(bad)  
  40ac8b:	retf   0x157d
  40ac8e:	ret    0x72d3
  40ac91:	push   ecx
  40ac92:	cmp    eax,DWORD PTR [eax-0x544fa976]
  40ac98:	imul   ah
  40ac9a:	sbb    BYTE PTR [eax],cl
  40ac9c:	push   0xffffffb9
  40ac9e:	int3   
  40ac9f:	pop    esi
  40aca0:	mov    BYTE PTR [ecx+ebp*2+0x2488760d],ah
  40aca7:	pop    eax
  40aca8:	inc    ebp
  40aca9:	or     cl,al
  40acab:	int3   
  40acac:	(bad)  
  40acad:	cmp    ebx,DWORD PTR [ebx-0x20]
  40acb0:	ja     0x40ad1a
  40acb2:	jnp    0x40ac73
  40acb4:	(bad)  
  40acb6:	es dec eax
  40acb8:	(bad)  
  40acb9:	jns    0x40ac99
  40acbb:	inc    ebx
  40acbc:	shr    DWORD PTR [ebx+0x42],1
  40acbf:	mov    eax,ds:0x51f230b0
  40acc4:	inc    esp
  40acc5:	fwait
  40acc6:	dec    ecx
  40acc7:	xor    dl,bh
  40acc9:	cwde   
  40acca:	retf   
  40accb:	fisttp WORD PTR [ebp-0x6a]
  40acce:	xor    edx,ecx
  40acd0:	push   ds
  40acd1:	shl    BYTE PTR [edi],0xab
  40acd4:	add    eax,0xf0f7d94
  40acd9:	push   ebx
  40acda:	inc    ebp
  40acdb:	mov    ebx,cs
  40acdd:	in     al,dx
  40acde:	sbb    dh,ah
  40ace0:	ins    DWORD PTR es:[edi],dx
  40ace1:	cmc    
  40ace2:	dec    ecx
  40ace3:	ss mov bl,0x6e
  40ace6:	dec    ebp
  40ace7:	imul   edx,DWORD PTR [edx+eiz*1-0x10],0xd41ec420
  40acef:	cmp    eax,0x44305c88
  40acf4:	pop    esi
  40acf5:	jnp    0x40ac7d
  40acf7:	aaa    
  40acf8:	push   es
  40acf9:	sbb    eax,0xb7b36a78
  40acfe:	data16 jnp 0x40ad54
  40ad01:	addr16 pop edx
  40ad03:	jl     0x40ad61
  40ad05:	inc    esp
  40ad06:	test   BYTE PTR [ebp-0x1f],bl
  40ad09:	adc    DWORD PTR [eax],ebx
  40ad0b:	das    
  40ad0c:	cmp    esi,ebx
  40ad0e:	pop    ebx
  40ad0f:	std    
  40ad10:	rcl    ah,0x64
  40ad13:	cs push ecx
  40ad15:	jnp    0x40ad7b
  40ad17:	test   eax,0xd65070a7
  40ad1c:	scas   al,BYTE PTR es:[edi]
  40ad1d:	test   eax,0x140e4f2
  40ad22:	or     BYTE PTR [edi],bh
  40ad24:	fistp  DWORD PTR [ecx]
  40ad26:	adc    al,BYTE PTR [eax-0x80]
  40ad29:	push   cs
  40ad2a:	jno    0x40acb8
  40ad2c:	or     BYTE PTR [ebp-0x4455437],dl
  40ad32:	lahf   
  40ad33:	sysexit 
  40ad35:	mov    eax,ds:0xc5866c5
  40ad3a:	jo     0x40ad93
  40ad3c:	adc    edx,DWORD PTR [esi]
  40ad3e:	sub    al,ch
  40ad40:	sbb    edi,DWORD PTR [eax+0x75]
  40ad43:	dec    esi
  40ad44:	shl    DWORD PTR [ecx-0x1],0xed
  40ad48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad49:	adc    DWORD PTR [esi+edx*1+0x34ccfb3f],esp
  40ad50:	xlat   BYTE PTR ds:[ebx]
  40ad51:	push   edi
  40ad52:	js     0x40adaa
  40ad54:	push   cs
  40ad55:	and    al,0xa4
  40ad57:	pop    ebx
  40ad58:	mov    bl,0xde
  40ad5a:	mov    bh,0x95
  40ad5c:	mov    bl,0x40
  40ad5e:	or     al,0x3a
  40ad60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad61:	ret    0xf0cf
  40ad64:	(bad)  
  40ad65:	es (bad) 
  40ad67:	xchg   esi,eax
  40ad68:	jle    0x40ad89
  40ad6a:	call   0xef6c5beb
  40ad6f:	lods   eax,DWORD PTR ds:[esi]
  40ad70:	stos   BYTE PTR es:[edi],al
  40ad71:	cmp    BYTE PTR [esi+edx*8-0x74],ah
  40ad75:	or     al,0xf4
  40ad77:	or     dl,BYTE PTR [edi+0x52]
  40ad7a:	xor    al,0xb7
  40ad7c:	pop    ss
  40ad7d:	mov    ah,0x28
  40ad7f:	xor    al,0x4b
  40ad81:	dec    edx
  40ad82:	loopne 0x40adf0
  40ad84:	add    DWORD PTR [esi-0x32],0xffffffbe
  40ad88:	icebp  
  40ad89:	scas   eax,DWORD PTR es:[edi]
  40ad8a:	mov    eax,0xf25ea870
  40ad8f:	ror    BYTE PTR [eax+ebp*2+0x1b85a4e1],cl
  40ad96:	cs inc esp
  40ad98:	xchg   esi,eax
  40ad99:	ror    bl,0x6c
  40ad9c:	ss xchg ebp,eax
  40ad9e:	jns    0x40ae1e
  40ada0:	adc    edi,DWORD PTR [eax+0x64ed5b4d]
  40ada6:	mov    edx,0xdc302784
  40adab:	fldenv [edi-0x7dfe26a6]
  40adb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adb2:	rcl    BYTE PTR [edi],1
  40adb4:	mov    BYTE PTR [ebp-0x19],0x9c
  40adb8:	mov    ebx,0xa92e9707
  40adbd:	out    0x4b,eax
  40adbf:	inc    esp
  40adc0:	push   ds
  40adc1:	jo     0x40ad78
  40adc3:	and    DWORD PTR [eax+0x49880247],edx
  40adc9:	mov    dh,0xaa
  40adcb:	mov    ebp,DWORD PTR [ebp+eiz*1-0x61]
  40adcf:	ret    
  40add0:	in     eax,0x9a
  40add2:	retf   0x42ab
  40add5:	out    0xa5,al
  40add7:	adc    ebp,DWORD PTR [edi-0x6c0f4f52]
  40addd:	adc    eax,0xdcf140e1
  40ade2:	adc    al,0xdf
  40ade4:	jl     0x40ae08
  40ade6:	popf   
  40ade7:	(bad)  
  40ade8:	loope  0x40ae41
  40adea:	xchg   ecx,eax
  40adeb:	ja     0x40ad91
  40aded:	mov    ch,0xfe
  40adef:	sbb    DWORD PTR [ebp-0x4a790234],ebp
  40adf5:	mov    BYTE PTR [ebp+0x58],0xca
  40adf9:	mov    ds:0x2a509a84,al
  40adfe:	lea    esp,[edi]
  40ae00:	xchg   esi,eax
  40ae01:	aaa    
  40ae02:	push   ss
  40ae03:	inc    edx
  40ae04:	adc    ch,ch
  40ae06:	repz aam 0xa9
  40ae09:	mov    al,0x96
  40ae0b:	lock jns 0x40ad9b
  40ae0e:	sub    BYTE PTR [eax],0xaa
  40ae11:	rcr    BYTE PTR [ebx-0x53],0xcc
  40ae15:	fld    QWORD PTR ss:[edi]
  40ae18:	lods   al,BYTE PTR ds:[esi]
  40ae19:	and    al,0xed
  40ae1b:	cmp    DWORD PTR [ecx+0x27],esp
  40ae1e:	mov    esp,DWORD PTR [ecx-0x74be0b7c]
  40ae24:	add    BYTE PTR [eax+0x143505ba],bl
  40ae2a:	add    al,0xba
  40ae2c:	xor    ah,BYTE PTR [edx]
  40ae2e:	adc    esi,ebp
  40ae30:	push   ecx
  40ae31:	hlt    
  40ae32:	cmp    BYTE PTR [esi],dl
  40ae34:	pusha  
  40ae35:	(bad)  
  40ae36:	je     0x40ae72
  40ae38:	nop
  40ae39:	add    eax,0x3875bd8d
  40ae3e:	rcr    DWORD PTR [esi+eax*1+0x4b1626c6],0x89
  40ae46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae47:	xchg   ebx,eax
  40ae48:	and    al,0x85
  40ae4a:	fcomp  QWORD PTR [eax+0x5bfd3e52]
  40ae50:	fistp  WORD PTR [edx+ebp*2-0xe]
  40ae54:	daa    
  40ae55:	jecxz  0x40ae96
  40ae57:	in     eax,dx
  40ae58:	jbe    0x40ae10
  40ae5a:	cs ss test eax,0xa92ecb75
  40ae61:	and    BYTE PTR [edx],ah
  40ae63:	ror    esi,cl
  40ae65:	and    ebp,0xffffffd9
  40ae68:	mov    ebx,0xf49f635f
  40ae6d:	inc    eax
  40ae6e:	jl     0x40ae5c
  40ae70:	jae    0x40ae99
  40ae72:	cmc    
  40ae73:	or     dl,bh
  40ae75:	add    al,0x81
  40ae77:	das    
  40ae78:	pop    ebp
  40ae79:	cmp    DWORD PTR [edx],ebp
  40ae7b:	gs inc ecx
  40ae7d:	loop   0x40aeaf
  40ae7f:	mov    bh,BYTE PTR [edi+0x34]
  40ae82:	rcl    DWORD PTR [ebp-0x6],1
  40ae85:	popa   
  40ae86:	sub    ch,ch
  40ae88:	paddsb mm2,mm6
  40ae8b:	or     eax,0xf5fc8ac8
  40ae90:	adc    ecx,esp
  40ae92:	adc    DWORD PTR [edi],0x2188d4a3
  40ae98:	out    dx,eax
  40ae99:	cmp    DWORD PTR [esi+0x25d7d295],esi
  40ae9f:	xor    BYTE PTR [ebx],bh
  40aea1:	pop    esp
  40aea2:	repnz outs dx,DWORD PTR ds:[esi]
  40aea4:	cmp    DWORD PTR [ebp+0x7fbbb30a],esi
  40aeaa:	xor    dh,bl
  40aeac:	or     ebp,DWORD PTR [ecx+0x5a1007b1]
  40aeb2:	(bad)  
  40aeb3:	xor    bl,BYTE PTR [esi]
  40aeb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeb6:	sub    dl,BYTE PTR [edi-0x5]
  40aeb9:	ficomp WORD PTR [esi+eax*4-0x5a1ee4ff]
  40aec0:	sbb    al,BYTE PTR [eax]
  40aec2:	mov    bl,0x5c
  40aec4:	retf   
  40aec5:	jo     0x40aea0
  40aec7:	pop    ds
  40aec8:	push   ds
  40aec9:	xchg   ecx,eax
  40aeca:	ret    
  40aecb:	in     al,0x7a
  40aecd:	leave  
  40aece:	pop    eax
  40aecf:	out    dx,eax
  40aed0:	and    DWORD PTR [eax+ecx*2-0x7f],esp
  40aed4:	mov    al,0xcd
  40aed6:	into   
  40aed7:	ins    DWORD PTR es:[edi],dx
  40aed8:	inc    ebx
  40aed9:	in     al,dx
  40aeda:	cmp    bh,0x1f
  40aedd:	push   ss
  40aede:	(bad)  
  40aedf:	mov    ds:0x7205f761,al
  40aee4:	icebp  
  40aee5:	int    0x5d
  40aee7:	pop    esp
  40aee8:	int    0x5b
  40aeea:	sub    eax,0xec0e0c95
  40aeef:	xor    cl,BYTE PTR [ecx+eiz*8-0x80]
  40aef3:	xchg   ecx,eax
  40aef4:	or     al,BYTE PTR [ecx+0x48]
  40aef7:	dec    eax
  40aef8:	in     al,dx
  40aef9:	xchg   ebx,eax
  40aefa:	push   esi
  40aefb:	fild   WORD PTR [ebx+esi*1]
  40aefe:	cmp    dh,bh
  40af00:	test   DWORD PTR [edi+0x7ade7bf3],0xabbc2b09
  40af0a:	cli    
  40af0b:	or     edx,DWORD PTR [ebx-0x77a0db77]
  40af11:	stos   DWORD PTR es:[edi],eax
  40af12:	add    BYTE PTR [ebp+0x58caa8b3],cl
  40af18:	xor    al,0x4a
  40af1a:	mov    dl,BYTE PTR [ecx+0x27f8e91a]
  40af20:	ror    edx,cl
  40af22:	sbb    edx,edx
  40af24:	add    bh,bh
  40af26:	mov    DWORD PTR [eax+0x3a6d1be2],edi
  40af2c:	scas   al,BYTE PTR es:[edi]
  40af2d:	aas    
  40af2e:	test   al,0xb0
  40af30:	pop    eax
  40af31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af32:	fisub  WORD PTR [edx+eiz*1]
  40af35:	leave  
  40af36:	sub    BYTE PTR [edx],bh
  40af38:	inc    edi
  40af39:	pop    eax
  40af3a:	fmul   DWORD PTR [edi-0xf295b1b]
  40af40:	sbb    al,0xe7
  40af42:	mov    al,ds:0x36176f0f
  40af47:	jle    0x40af02
  40af49:	(bad)  
  40af4b:	inc    esp
  40af4c:	sbb    eax,0x3610b6de
  40af51:	jne    0x40af06
  40af53:	mov    edi,0x4b54b30c
  40af58:	and    esi,esp
  40af5a:	dec    esi
  40af5b:	mov    bl,BYTE PTR gs:[ebp-0x5c818b26]
  40af62:	inc    ecx
  40af63:	not    DWORD PTR [ebp-0x50f664c9]
  40af69:	jmp    0x3afa:0x20f1e775
  40af70:	mov    cl,BYTE PTR [ecx+0x63]
  40af73:	in     al,dx
  40af74:	stc    
  40af75:	sbb    dl,BYTE PTR ds:[ecx+0x5e4e59ca]
  40af7c:	loop   0x40af7b
  40af7e:	or     BYTE PTR [ebx+0x1d5c4be3],al
  40af84:	and    eax,0xa4e38790
  40af89:	out    dx,al
  40af8a:	mov    bh,0xbb
  40af8c:	lock mov WORD PTR ds:[edi+0x392383b7],gs
  40af94:	lds    ecx,FWORD PTR [ebx]
  40af96:	retf   0x7a85
  40af99:	push   esp
  40af9a:	mov    edx,0xcafc3551
  40af9f:	xor    BYTE PTR [edx],0xf9
  40afa2:	or     DWORD PTR [esi-0x64],edx
  40afa5:	cs pop es
  40afa7:	push   esi
  40afa8:	mov    esi,0xfa68fad3
  40afad:	mov    ah,0xc5
  40afaf:	or     edx,0x8a1a4d0d
  40afb5:	or     DWORD PTR [eax+ecx*4-0x3492bb19],eax
  40afbc:	pop    ss
  40afbd:	into   
  40afbe:	out    0xb8,eax
  40afc0:	(bad)  
  40afc1:	retf   0x8e36
  40afc4:	pop    ds
  40afc5:	in     eax,0xfb
  40afc7:	sub    edi,0x2a
  40afca:	jbe    0x40af83
  40afcc:	scas   eax,DWORD PTR es:[edi]
  40afcd:	xchg   edi,eax
  40afce:	test   BYTE PTR [ecx+esi*4],ah
  40afd1:	imul   edi,DWORD PTR [edx-0x4d],0x58f5e1cc
  40afd8:	daa    
  40afd9:	jl     0x40b028
  40afdb:	sbb    BYTE PTR [eax],cl
  40afdd:	repnz mov eax,0x5493531b
  40afe3:	pop    ebp
  40afe4:	inc    BYTE PTR [eax+edx*2]
  40afe7:	fisubr WORD PTR [edi]
  40afe9:	xchg   ebp,eax
  40afea:	mov    edi,0x67529d3d
  40afef:	sbb    al,0x61
  40aff1:	xor    cl,dl
  40aff3:	call   0x6c25:0x51b1dd53
  40affa:	test   eax,0xabd3c07e
  40afff:	outs   dx,DWORD PTR ds:[esi]
  40b000:	xor    al,0xdb
  40b002:	pushf  
  40b003:	lahf   
  40b004:	dec    edi
  40b005:	enter  0x9cfb,0xb3
  40b009:	or     bh,BYTE PTR [eax+0x3de70f50]
  40b00f:	stos   BYTE PTR es:[edi],al
  40b010:	lods   eax,DWORD PTR ds:[esi]
  40b011:	inc    esi
  40b012:	adc    BYTE PTR [ecx],bh
  40b014:	mov    al,ds:0x8f900c65
  40b019:	or     eax,0xb547169b
  40b01e:	or     dh,cl
  40b020:	int    0x23
  40b022:	cmp    ah,BYTE PTR [eax]
  40b024:	mov    ch,0xad
  40b026:	icebp  
  40b027:	in     eax,0x12
  40b029:	enter  0xab72,0xf6
  40b02d:	and    eax,DWORD PTR [ebx]
  40b02f:	inc    ebx
  40b030:	pop    ebx
  40b031:	mov    edi,0xce22be89
  40b036:	push   edi
  40b037:	push   esi
  40b038:	cwde   
  40b039:	cmp    dl,BYTE PTR [edx+0x30]
  40b03c:	loop   0x40b027
  40b03e:	xchg   ebx,eax
  40b03f:	imul   ebx,DWORD PTR [ebx],0xffffffb0
  40b042:	ficomp WORD PTR ds:0xf7c61893
  40b048:	out    dx,eax
  40b049:	adc    ah,BYTE PTR [ebp+0x6]
  40b04c:	jno    0x40afe5
  40b04e:	and    eax,0xd9b43264
  40b053:	mov    DWORD PTR [eax],ebp
  40b055:	cmp    al,0xf2
  40b057:	retf   
  40b058:	aam    0x17
  40b05a:	sub    al,0xca
  40b05c:	mov    bl,0x9c
  40b05e:	out    dx,eax
  40b05f:	xchg   ebx,eax
  40b060:	cmp    DWORD PTR [esi+0x6b3c5430],ebp
  40b066:	aaa    
  40b067:	dec    ebp
  40b068:	inc    ecx
  40b069:	loop   0x40b03d
  40b06b:	pushf  
  40b06c:	mov    edx,0x79a1d046
  40b071:	sub    al,0xd6
  40b073:	mov    ebx,0x3f0ac3e
  40b078:	(bad)  [edi+0x23aee234]
  40b07e:	loopne 0x40b011
  40b080:	loope  0x40b0a7
  40b082:	clc    
  40b083:	fwait
  40b084:	bound  ebp,QWORD PTR ds:0x2b066bb4
  40b08a:	inc    ecx
  40b08b:	ja     0x40b0f2
  40b08d:	or     dh,bh
  40b08f:	push   ss
  40b090:	das    
  40b091:	cmp    bh,BYTE PTR [edi-0x33]
  40b094:	test   DWORD PTR [ecx-0x6c712b1],edx
  40b09a:	pop    ebp
  40b09b:	ret    0x95fa
  40b09e:	(bad)  
  40b09f:	aam    0xd2
  40b0a1:	and    DWORD PTR [edx-0x2721c948],ebx
  40b0a7:	mov    esp,0xe3ef16ff
  40b0ac:	mov    al,ds:0xf26884eb
  40b0b1:	or     al,0x2b
  40b0b3:	sbb    edx,ecx
  40b0b5:	rcr    BYTE PTR [ecx],cl
  40b0b7:	jne    0x40b063
  40b0b9:	retf   0x62f4
  40b0bc:	xchg   DWORD PTR [edi-0x78],ecx
  40b0bf:	mov    ds:0xe556d483,eax
  40b0c4:	mov    al,ds:0xc2d3413
  40b0c9:	or     al,0x6c
  40b0cb:	mov    cl,0xfd
  40b0cd:	ror    eax,cl
  40b0cf:	sbb    DWORD PTR [ebp-0x20493593],esi
  40b0d5:	pop    ss
  40b0d6:	and    ebx,esi
  40b0d8:	sbb    DWORD PTR [ecx-0x67],esp
  40b0db:	or     bh,BYTE PTR ds:0x3699cc76
  40b0e1:	dec    edx
  40b0e2:	into   
  40b0e3:	push   ebp
  40b0e4:	jbe    0x40b08c
  40b0e6:	cmp    dh,BYTE PTR [ecx+edi*8]
  40b0e9:	loope  0x40b0ca
  40b0eb:	in     al,dx
  40b0ec:	and    edx,edx
  40b0ee:	pusha  
  40b0ef:	mov    edi,esp
  40b0f1:	fwait
  40b0f2:	or     esi,ecx
  40b0f4:	push   0xffffffa6
  40b0f6:	mov    cl,0xa8
  40b0f8:	and    ch,ah
  40b0fa:	std    
  40b0fb:	mov    eax,ds:0x7ff56d89
  40b100:	(bad)  
  40b101:	jbe    0x40b10b
  40b103:	sub    eax,0xff8c868d
  40b108:	dec    ecx
  40b109:	pop    ds
  40b10a:	cld    
  40b10b:	cwde   
  40b10c:	push   edi
  40b10d:	push   esp
  40b10e:	in     eax,dx
  40b10f:	aad    0x4c
  40b111:	ins    BYTE PTR es:[edi],dx
  40b112:	pop    esp
  40b113:	pop    ds
  40b114:	and    ch,ah
  40b116:	push   cs
  40b117:	adc    al,0x58
  40b119:	ja     0x40b0b7
  40b11b:	push   cs
  40b11c:	fmulp  st(7),st
  40b11e:	ret    
  40b11f:	cmp    ebp,DWORD PTR [ecx+0x14]
  40b122:	lock lods al,BYTE PTR ds:[esi]
  40b124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b125:	imul   esp,ebx,0xd3c320c2
  40b12b:	ins    DWORD PTR es:[edi],dx
  40b12c:	sub    BYTE PTR [edx-0x4a5c9cce],ch
  40b132:	out    dx,eax
  40b133:	mov    ecx,es
  40b135:	cwde   
  40b136:	pop    ss
  40b137:	push   ebx
  40b138:	pop    esi
  40b139:	clc    
  40b13a:	add    DWORD PTR [ebp-0x24],eax
  40b13d:	fbld   TBYTE PTR [ecx-0x15ae4a38]
  40b143:	into   
  40b144:	mov    esp,es
  40b146:	std    
  40b147:	add    eax,0x179487ae
  40b14c:	pop    ebp
  40b14d:	lds    ebp,FWORD PTR [edx]
  40b14f:	out    0xd0,al
  40b151:	scas   al,BYTE PTR es:[edi]
  40b152:	gs xchg ebp,eax
  40b154:	or     ch,cl
  40b156:	in     al,0x56
  40b158:	mov    eax,ds:0x6d93913a
  40b15d:	add    BYTE PTR [ecx+0x5d95b73],ch
  40b163:	clc    
  40b164:	fild   QWORD PTR [ebx+ebx*2+0x24]
  40b168:	add    BYTE PTR [edx-0x31],bh
  40b16b:	mov    ebx,edx
  40b16d:	add    bl,BYTE PTR [esi]
  40b16f:	adc    al,0xe8
  40b171:	pop    eax
  40b172:	sbb    eax,0x9913b739
  40b177:	pushf  
  40b178:	loope  0x40b17c
  40b17a:	and    DWORD PTR [esi-0x33df6b4],ebx
  40b180:	and    DWORD PTR [esi+0x1aed096c],ebx
  40b186:	inc    esi
  40b187:	mov    ecx,0x6d5f168d
  40b18c:	mov    bh,0x7c
  40b18e:	gs retf 
  40b190:	xor    DWORD PTR [ebp+0x19870ea6],eax
  40b196:	stos   BYTE PTR es:[edi],al
  40b197:	mov    ebx,0x7819fcdd
  40b19c:	fdivp  st(6),st
  40b19e:	test   edi,ebp
  40b1a0:	xor    ah,BYTE PTR [ecx]
  40b1a2:	pop    esp
  40b1a3:	icebp  
  40b1a4:	std    
  40b1a5:	cli    
  40b1a6:	call   0x7aa5d23f
  40b1ab:	in     eax,0x12
  40b1ad:	out    dx,al
  40b1ae:	enter  0xe847,0x53
  40b1b2:	sbb    ah,dh
  40b1b4:	mov    cl,0x51
  40b1b6:	imul   edx,DWORD PTR [ebp+0x6a4691a4],0x1b0d1e1b
  40b1c0:	int    0x4e
  40b1c2:	jo     0x40b204
  40b1c4:	pop    ss
  40b1c5:	and    ch,BYTE PTR [ebx-0x4d00a46f]
  40b1cb:	(bad)  
  40b1cc:	sbb    cl,BYTE PTR [ebp-0x41]
  40b1cf:	int    0x9
  40b1d1:	xchg   edi,eax
  40b1d2:	dec    BYTE PTR ds:0xe29523cf
  40b1d8:	leave  
  40b1d9:	icebp  
  40b1da:	stos   BYTE PTR es:[edi],al
  40b1db:	aas    
  40b1dc:	shl    DWORD PTR [ecx],1
  40b1de:	jb     0x40b1e1
  40b1e0:	lgs    esp,FWORD PTR [ecx+eax*4]
  40b1e4:	sub    al,0xe7
  40b1e6:	and    bh,BYTE PTR [edx]
  40b1e8:	int    0x46
  40b1ea:	sub    dh,BYTE PTR [edi-0x55b4b2f1]
  40b1f0:	sbb    edi,edx
  40b1f2:	adc    eax,0xc1190291
  40b1f7:	adc    DWORD PTR [edi+0x34b03f2a],edx
  40b1fd:	pop    cx
  40b1ff:	pop    ecx
  40b200:	mov    dl,0x3d
  40b202:	or     eax,0xd523ef05
  40b207:	push   DWORD PTR [edx-0x654bb98b]
  40b20d:	add    ah,dh
  40b20f:	xor    edi,DWORD PTR [edi+ebp*1+0x554f81dd]
  40b216:	jno    0x40b27f
  40b218:	cmp    BYTE PTR [edi],ah
  40b21a:	data16 daa 
  40b21c:	inc    eax
  40b21d:	xchg   dh,dl
  40b21f:	(bad)  
  40b221:	add    BYTE PTR [eax+0x56e997b0],al
  40b227:	adc    bl,BYTE PTR [edi-0xda7f2ab]
  40b22d:	xlat   BYTE PTR ds:[ebx]
  40b22e:	test   DWORD PTR [edi+0x350623c8],ebp
  40b234:	cmp    al,0xdd
  40b237:	jne    0x40b2a8
  40b239:	addr16 repnz push edx
  40b23c:	pop    eax
  40b23d:	shr    esp,1
  40b23f:	mov    dh,0xd1
  40b241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b242:	xor    BYTE PTR [esi],dh
  40b244:	xor    DWORD PTR [eax],0xffffffe4
  40b247:	mov    ecx,0x2e372d2
  40b24c:	xchg   DWORD PTR [edx],ecx
  40b24e:	push   ds
  40b24f:	push   0x2e
  40b251:	xor    dl,BYTE PTR [edx+0x5be8cd47]
  40b257:	add    ah,BYTE PTR [ebx]
  40b259:	int    0x13
  40b25b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b25c:	fs sub cl,al
  40b25f:	ins    DWORD PTR es:[edi],dx
  40b260:	bswap  ebx
  40b262:	jmp    0xd562:0x474837f3
  40b269:	mov    bh,0xe3
  40b26b:	pop    esi
  40b26c:	fsub   st(4),st
  40b26e:	cmc    
  40b26f:	icebp  
  40b270:	aad    0x64
  40b272:	out    0x87,eax
  40b274:	mov    ebp,0xb2072d3d
  40b279:	sbb    ebx,DWORD PTR [esi-0xa]
  40b27c:	mov    edx,0x2bcdfae9
  40b281:	push   edx
  40b282:	and    esi,edi
  40b284:	mov    edx,0x10b64975
  40b289:	jle    0x40b2fa
  40b28b:	jecxz  0x40b2eb
  40b28d:	retf   
  40b28e:	push   edi
  40b28f:	fsubp  st(4),st
  40b291:	in     al,dx
  40b292:	mov    esi,0xf15cb6a5
  40b297:	adc    bh,ch
  40b299:	(bad)  
  40b29a:	mov    ebp,0x293c0342
  40b29f:	xor    edx,DWORD PTR [ebp+0x490b8b82]
  40b2a5:	mov    ah,0xd2
  40b2a7:	push   ebp
  40b2a8:	lahf   
  40b2a9:	xor    eax,0xcc4d2720
  40b2ae:	cs mov edi,0x409cc4b6
  40b2b4:	adc    edi,DWORD PTR [edx]
  40b2b6:	in     al,dx
  40b2b7:	out    0x15,eax
  40b2b9:	adc    BYTE PTR ds:0x7060995,dh
  40b2bf:	sbb    al,0x74
  40b2c1:	dec    esp
  40b2c2:	mov    esi,0x4587fad8
  40b2c7:	dec    ecx
  40b2c8:	add    al,0x3c
  40b2ca:	mov    dl,0xcc
  40b2cc:	adc    BYTE PTR [edi+0x5b],ch
  40b2cf:	cmp    BYTE PTR [ebx+0x6f],ch
  40b2d2:	adc    BYTE PTR [edx],dh
  40b2d4:	leave  
  40b2d5:	adc    al,0xd5
  40b2d7:	add    eax,0x6e8994c2
  40b2dc:	stos   DWORD PTR es:[edi],eax
  40b2dd:	(bad)  
  40b2de:	mov    bh,0xd2
  40b2e0:	(bad)  
  40b2e1:	fdiv   QWORD PTR [ecx]
  40b2e3:	fld    TBYTE PTR ds:0xb5d7ea1d
  40b2e9:	add    DWORD PTR [ecx],edi
  40b2eb:	ss lock inc bx
  40b2ef:	(bad)  
  40b2f0:	xor    BYTE PTR [ecx+0x7f3f74b6],cl
  40b2f6:	loope  0x40b34f
  40b2f8:	in     eax,0x4b
  40b2fa:	jb     0x40b339
  40b2fc:	fisubr DWORD PTR [ebx-0x739bc9b6]
  40b302:	jle    0x40b33d
  40b304:	sub    BYTE PTR [edx],cl
  40b306:	adc    eax,DWORD PTR [esi+0x76781621]
  40b30c:	pop    ebp
  40b30d:	repnz (bad) 
  40b30f:	in     al,0xe9
  40b311:	mov    ds:0x2663ae5e,al
  40b316:	push   edi
  40b317:	lods   eax,DWORD PTR ds:[esi]
  40b318:	adc    bl,BYTE PTR [edi]
  40b31a:	dec    ebx
  40b31b:	(bad)  
  40b31c:	sbb    al,0x20
  40b31e:	loopne 0x40b2fa
  40b320:	inc    eax
  40b321:	mov    DWORD PTR [ebx-0x47320a86],edi
  40b327:	mov    bh,0xef
  40b329:	add    DWORD PTR [esp+eiz*4+0x2f],0x4
  40b32e:	(bad)  
  40b32f:	js     0x40b36c
  40b331:	test   al,0x62
  40b333:	mov    cl,0xab
  40b335:	sar    BYTE PTR [esp+ebx*4-0x51],0xdb
  40b33a:	int3   
  40b33b:	mov    esi,0x3bd1c5d7
  40b340:	retf   
  40b341:	jmp    0x40b386
  40b343:	sti    
  40b344:	pop    esi
  40b345:	fs pop edx
  40b347:	add    ch,bl
  40b349:	mov    DWORD PTR [esi-0x74],0x94775526
  40b350:	mov    ds:0x9ae21c1c,al
  40b355:	xchg   ah,cl
  40b357:	dec    ebx
  40b358:	xchg   ebp,eax
  40b359:	xchg   ecx,eax
  40b35a:	rcr    BYTE PTR [eax+0x3404e7b4],1
  40b360:	mov    esi,0xdc7599a7
  40b365:	pop    edi
  40b366:	inc    edi
  40b367:	cdq    
  40b368:	bnd fs jnp 0x40b347
  40b36c:	and    eax,DWORD PTR [ecx+0x6d]
  40b36f:	test   BYTE PTR [ebx+0x1e9e7731],0x93
  40b376:	jl     0x40b2fb
  40b378:	pop    eax
  40b379:	jmp    0xbe5686e6
  40b37e:	cmp    eax,0x55a2b972
  40b384:	stos   BYTE PTR es:[edi],al
  40b385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b386:	fisubr WORD PTR [esi+0x5e68c813]
  40b38c:	or     eax,0x833aa852
  40b391:	add    cl,cl
  40b393:	loopne 0x40b402
  40b395:	add    al,0xb8
  40b397:	shl    BYTE PTR [eax+ebp*4-0x3c],1
  40b39b:	rcl    DWORD PTR [eax-0x2418c80f],0xf7
  40b3a2:	sub    BYTE PTR [ecx+0x666028a0],al
  40b3a8:	jecxz  0x40b3d2
  40b3aa:	mov    edx,0x4c790459
  40b3af:	scas   eax,DWORD PTR es:[edi]
  40b3b0:	xchg   ecx,eax
  40b3b1:	outs   dx,BYTE PTR ds:[esi]
  40b3b2:	das    
  40b3b3:	sbb    eax,0xf3bb7be3
  40b3b8:	pushf  
  40b3b9:	or     BYTE PTR [eax+0x36e5de2f],cl
  40b3bf:	sbb    BYTE PTR [edi-0xd],ch
  40b3c2:	dec    esi
  40b3c3:	ffree  st(7)
  40b3c5:	adc    bh,BYTE PTR [esi-0x14]
  40b3c8:	dec    esp
  40b3c9:	pop    es
  40b3ca:	dec    ecx
  40b3cb:	sub    DWORD PTR [eax-0x41cbb69c],0xfffffff3
  40b3d2:	xor    edx,DWORD PTR [ebp-0x111f0bb]
  40b3d8:	pusha  
  40b3d9:	cs (bad) 
  40b3dd:	scas   al,BYTE PTR es:[edi]
  40b3de:	out    dx,al
  40b3df:	sub    al,BYTE PTR gs:[ecx+0x63]
  40b3e3:	jb     0x40b3cc
  40b3e5:	retf   0x1b9d
  40b3e8:	test   al,0xe0
  40b3ea:	fdivrp st(5),st
  40b3ec:	or     BYTE PTR [eax+eiz*1],ah
  40b3ef:	fwait
  40b3f0:	repz and BYTE PTR [eax+0x10370af0],0x18
  40b3f8:	es push esi
  40b3fa:	daa    
  40b3fb:	fistp  WORD PTR [esi]
  40b3fd:	adc    al,0xc3
  40b3ff:	jno    0x40b3ef
  40b401:	inc    edi
  40b402:	cmp    edx,DWORD PTR [edx-0x77e050b0]
  40b408:	(bad)  
  40b409:	out    0x1e,al
  40b40b:	fucompp 
  40b40d:	arpl   WORD PTR [eax-0x6a180f4f],ax
  40b413:	lock jge 0x40b3bd
  40b416:	xor    esi,DWORD PTR [ebp+0x63ed8d63]
  40b41c:	xlat   BYTE PTR ds:[ebx]
  40b41d:	jp     0x40b3ef
  40b41f:	add    al,0x8
  40b421:	mov    ?,WORD PTR [esp+ebx*1-0x4d8d7503]
  40b428:	cld    
  40b429:	or     DWORD PTR [ebp-0x3e],ecx
  40b42c:	mov    eax,0x88704900
  40b431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b432:	sub    eax,DWORD PTR [esi]
  40b434:	mov    cl,0xc6
  40b436:	xchg   DWORD PTR [ecx-0x6],esp
  40b439:	fild   DWORD PTR [ecx+0x56]
  40b43c:	in     eax,dx
  40b43d:	pop    esi
  40b43e:	mov    ecx,ds
  40b440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b441:	mov    al,0x91
  40b443:	(bad)  
  40b444:	fisubr WORD PTR [esi+0x2f2f79d9]
  40b44a:	cmp    DWORD PTR [ebx-0x4a],ecx
  40b44d:	cli    
  40b44e:	pop    eax
  40b44f:	cmp    edx,DWORD PTR [edx+esi*2+0x43]
  40b453:	sub    BYTE PTR [edi-0x373d53a7],dh
  40b459:	std    
  40b45a:	jmp    0xd8ad1b70
  40b45f:	pop    edi
  40b460:	push   ss
  40b461:	scas   eax,DWORD PTR es:[edi]
  40b462:	adc    ch,BYTE PTR [edi]
  40b464:	push   edi
  40b465:	mov    esi,0xb389365a
  40b46a:	xchg   esp,eax
  40b46b:	neg    DWORD PTR [eax]
  40b46d:	mov    eax,ds:0xa696696c
  40b472:	cmp    esi,DWORD PTR [edx-0x711d9b31]
  40b478:	imul   esp,DWORD PTR [ebp+0xc14fe0],0xffffffb7
  40b47f:	leave  
  40b480:	mov    esi,0x8b043448
  40b485:	push   0xad5f952e
  40b48a:	pop    DWORD PTR [eax]
  40b48c:	int3   
  40b48d:	mov    ecx,0x22084c29
  40b492:	nop
  40b493:	pop    es
  40b494:	inc    ebx
  40b495:	sub    BYTE PTR [esi+esi*1+0x61c280e3],0x75
  40b49d:	sub    ebp,ebx
  40b49f:	dec    ebp
  40b4a0:	push   ebx
  40b4a1:	(bad)  
  40b4a2:	mov    ds:0x498a40bd,al
  40b4a7:	inc    esi
  40b4a8:	sbb    bl,BYTE PTR [edi+0x10b279ad]
  40b4ae:	dec    esi
  40b4af:	and    al,0xa7
  40b4b1:	test   BYTE PTR [edi+0xb],al
  40b4b4:	xchg   DWORD PTR [ebx+0x6e2befa8],edi
  40b4ba:	jecxz  0x40b467
  40b4bc:	and    ebp,DWORD PTR [esi]
  40b4be:	jb     0x40b4dc
  40b4c0:	popa   
  40b4c1:	inc    ecx
  40b4c2:	test   BYTE PTR [eax-0x6f1f1641],ah
  40b4c8:	mov    bl,0x3a
  40b4ca:	lahf   
  40b4cb:	mov    esp,0x2b2cbc60
  40b4d0:	dec    ecx
  40b4d1:	cmp    BYTE PTR [edx+0x7b],0x1
  40b4d5:	sbb    ch,BYTE PTR [ebx+0x76]
  40b4d8:	mov    esp,0x4e0a8f92
  40b4dd:	and    BYTE PTR [ecx+eiz*2+0x63bd06f2],0x27
  40b4e5:	clc    
  40b4e6:	stc    
  40b4e7:	outs   dx,DWORD PTR ds:[esi]
  40b4e8:	jo     0x40b49d
  40b4ea:	add    ebp,esi
  40b4ec:	dec    ebx
  40b4ed:	xchg   edi,eax
  40b4ee:	jno    0x40b48b
  40b4f0:	das    
  40b4f1:	sar    BYTE PTR [ebp-0x41],0xf8
  40b4f5:	push   ebp
  40b4f6:	add    BYTE PTR [ecx],bl
  40b4f8:	sbb    dh,0xa1
  40b4fb:	int    0xe0
  40b4fd:	adc    eax,0xd64dc77b
  40b502:	adc    esi,DWORD PTR [edi+0x27]
  40b505:	push   esp
  40b506:	and    eax,0xadc435b3
  40b50b:	adc    BYTE PTR [eax-0x60fac9ab],0xd0
  40b512:	jno    0x40b501
  40b514:	aaa    
  40b515:	repz and bl,cl
  40b518:	ss iret 
  40b51a:	cmp    al,BYTE PTR [eax]
  40b51c:	push   eax
  40b51d:	sub    DWORD PTR [esi-0x2f],0x15
  40b521:	mov    ds:0x9d566aea,eax
  40b526:	in     al,0xe1
  40b528:	icebp  
  40b529:	pop    eax
  40b52a:	aaa    
  40b52b:	xchg   ebp,eax
  40b52c:	adc    BYTE PTR [edx-0x3487003a],al
  40b532:	push   ecx
  40b533:	pop    ebx
  40b534:	mov    esp,fs
  40b536:	sbb    al,0x14
  40b538:	jp     0x40b4d5
  40b53a:	out    0x20,al
  40b53c:	leave  
  40b53d:	out    dx,eax
  40b53e:	pop    esi
  40b53f:	pop    eax
  40b540:	pushf  
  40b541:	xchg   esp,eax
  40b542:	inc    ebx
  40b543:	mov    ecx,0xdd063d11
  40b548:	mov    esp,es
  40b54a:	(bad)  
  40b54b:	and    BYTE PTR [edx+0x5903479b],dh
  40b551:	pushf  
  40b552:	fdivr  QWORD PTR [eax-0xdc9151]
  40b558:	sub    edx,DWORD PTR [ebx]
  40b55a:	in     al,0xf7
  40b55c:	nop
  40b55d:	les    edi,FWORD PTR [edi+0x52]
  40b560:	fwait
  40b561:	jns    0x40b4ef
  40b563:	pop    ss
  40b564:	push   esp
  40b565:	repnz xor DWORD PTR [eax+esi*1],edi
  40b569:	loopne 0x40b568
  40b56b:	xchg   esi,eax
  40b56c:	sahf   
  40b56d:	loop   0x40b5e8
  40b56f:	push   es
  40b570:	int3   
  40b571:	and    ecx,ecx
  40b573:	nop
  40b574:	xor    ch,BYTE PTR [eax+0x605cd4ca]
  40b57a:	fdivr  st,st(4)
  40b57c:	add    BYTE PTR [ecx-0x73d1b59d],al
  40b582:	imul   edx,DWORD PTR [bx+di-0x3ff6],0x3f
  40b588:	shl    BYTE PTR [ecx],cl
  40b58a:	or     ax,0x2125
  40b58e:	fdiv   QWORD PTR ds:0x99445a19
  40b594:	dec    ecx
  40b595:	enter  0x7c92,0x19
  40b599:	aad    0x9
  40b59b:	dec    esp
  40b59c:	dec    esi
  40b59d:	pop    ebx
  40b59e:	fucomip st,st(6)
  40b5a0:	std    
  40b5a1:	das    
  40b5a2:	inc    eax
  40b5a3:	lea    esi,[edx-0x57a4c1]
  40b5a9:	retf   
  40b5aa:	jo     0x40b5fc
  40b5ac:	popa   
  40b5ad:	jb     0x40b532
  40b5af:	mov    ch,bh
  40b5b1:	and    BYTE PTR [esi+eiz*8+0x35],dh
  40b5b5:	out    0x51,eax
  40b5b7:	mov    esp,0x27eff705
  40b5bd:	cmp    eax,DWORD PTR [edi-0xb25ab9d]
  40b5c3:	sbb    dh,ch
  40b5c5:	call   DWORD PTR [ebp+0xa]
  40b5c8:	test   eax,0xa43d242f
  40b5cd:	lahf   
  40b5ce:	out    0xbd,al
  40b5d0:	ds pop eax
  40b5d2:	inc    eax
  40b5d3:	mov    DWORD PTR [edi+ebp*1],ebp
  40b5d6:	cmp    dh,ch
  40b5d8:	or     eax,0xc8ca217b
  40b5dd:	sbb    al,0x58
  40b5df:	jo     0x40b56b
  40b5e1:	and    ch,al
  40b5e3:	add    ecx,ecx
  40b5e5:	mov    ds:0xd44a69c6,al
  40b5ea:	and    esi,ebp
  40b5ec:	mov    ch,0x43
  40b5ee:	sbb    ebx,DWORD PTR [eax]
  40b5f0:	cmp    DWORD PTR [edi+eiz*2+0xb],esp
  40b5f4:	pop    ecx
  40b5f5:	dec    eax
  40b5f6:	in     eax,0xa7
  40b5f8:	and    eax,0xa89d6c43
  40b5fd:	cld    
  40b5fe:	lahf   
  40b5ff:	sbb    cl,dl
  40b601:	shr    ah,cl
  40b603:	cld    
  40b604:	adc    BYTE PTR [eax-0x3d],dl
  40b607:	out    0xe9,al
  40b609:	mov    bh,0xfa
  40b60b:	imul   BYTE PTR [ecx-0x236083ee]
  40b611:	xor    eax,0xb891fb93
  40b616:	inc    eax
  40b617:	mov    WORD PTR [edx+0x3129d8e9],es
  40b61d:	dec    ebx
  40b61e:	lds    ecx,FWORD PTR ds:[ecx+0x5c]
  40b622:	and    esi,DWORD PTR [edi+0xd571f3d]
  40b628:	outs   dx,BYTE PTR ds:[esi]
  40b629:	int3   
  40b62a:	daa    
  40b62b:	xlat   BYTE PTR ds:[ebx]
  40b62c:	adc    eax,0x7267f427
  40b631:	xor    al,cl
  40b633:	add    DWORD PTR [edi-0x1b7a40d3],esi
  40b639:	sbb    al,dh
  40b63b:	arpl   WORD PTR [edx-0x42056d82],si
  40b641:	mov    ch,0x72
  40b643:	pop    edx
  40b644:	cmp    ah,dh
  40b646:	dec    esp
  40b647:	sub    BYTE PTR [esi+0x6ea151c1],dl
  40b64d:	stos   BYTE PTR es:[edi],al
  40b64e:	and    al,0xc9
  40b650:	loope  0x40b685
  40b652:	popa   
  40b653:	jno    0x40b620
  40b655:	fcom   st(5)
  40b657:	mov    eax,ds:0x2c4142cf
  40b65c:	lock fisubr DWORD PTR [ecx-0x67]
  40b660:	iret   
  40b661:	outs   dx,BYTE PTR ds:[esi]
  40b662:	scas   al,BYTE PTR es:[edi]
  40b663:	bound  esi,QWORD PTR [edx+edx*1+0x58]
  40b667:	popa   
  40b668:	jns    0x40b6cc
  40b66a:	aaa    
  40b66b:	test   eax,0x17f045c
  40b670:	sbb    BYTE PTR [eax],cl
  40b672:	ret    0xdb92
  40b675:	out    dx,al
  40b676:	test   DWORD PTR [edi-0x29],ecx
  40b679:	or     al,0x6c
  40b67b:	fs call 0x33fe8ffe
  40b681:	xor    cl,dl
  40b683:	jo     0x40b616
  40b685:	mov    eax,ds
  40b687:	jbe    0x40b626
  40b689:	xor    BYTE PTR [edx],0xbb
  40b68c:	(bad)  
  40b68d:	push   0x6
  40b68f:	test   BYTE PTR [ebx],bl
  40b691:	mov    DWORD PTR [edx],esi
  40b693:	sbb    edx,DWORD PTR [edi-0x27]
  40b696:	(bad)  
  40b698:	(bad)  
  40b69a:	inc    eax
  40b69b:	fldcw  WORD PTR [ebp+0x1b]
  40b69e:	or     al,0xa1
  40b6a0:	les    ebx,FWORD PTR [edx-0x5e685175]
  40b6a6:	scas   al,BYTE PTR es:[edi]
  40b6a7:	dec    ebx
  40b6a8:	fimul  DWORD PTR ds:0xd14e173
  40b6ae:	cmp    esp,ebp
  40b6b0:	fs and al,0xa
  40b6b3:	jge    0x40b6f7
  40b6b5:	fucom  st(3)
  40b6b7:	sbb    ebp,DWORD PTR [ebp+0x2b24126c]
  40b6bd:	aaa    
  40b6be:	scas   eax,DWORD PTR es:[edi]
  40b6bf:	test   al,0x70
  40b6c1:	and    ebp,DWORD PTR [ebx+0x40ffeb6b]
  40b6c7:	pop    edi
  40b6c8:	inc    esi
  40b6c9:	clc    
  40b6ca:	xchg   esi,eax
  40b6cb:	inc    esi
  40b6cc:	fcomp  QWORD PTR [ecx+0x76]
  40b6cf:	sbb    BYTE PTR [ebx+0x1c],ch
  40b6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6d3:	jne    0x40b671
  40b6d5:	jns    0x40b6e5
  40b6d7:	inc    ebp
  40b6d8:	rcl    BYTE PTR [eax+ecx*2-0xb8f0e54],cl
  40b6df:	cs dec ecx
  40b6e1:	stos   BYTE PTR es:[edi],al
  40b6e2:	xchg   ecx,eax
  40b6e3:	mov    eax,0x7625a36
  40b6e8:	mov    ds:0x457f43c4,al
  40b6ed:	push   ecx
  40b6ee:	addr16 mov ds:0x59a8,al
  40b6f2:	jae    0x40b67c
  40b6f4:	adc    eax,0x70565b0
  40b6f9:	out    0xd0,al
  40b6fb:	and    eax,0xa45cdf0d
  40b700:	mov    ds:0xbd79190d,al
  40b705:	lds    eax,FWORD PTR [edx-0x55]
  40b708:	pop    esi
  40b709:	xor    edi,DWORD PTR [esp+ebx*4-0x466fc5bc]
  40b710:	jmp    0x9ab1:0x82ac22f5
  40b717:	dec    BYTE PTR [edx-0x4]
  40b71a:	push   edx
  40b71b:	mov    dl,0x63
  40b71d:	das    
  40b71e:	and    DWORD PTR [ebx+0x6d76c137],edi
  40b724:	(bad)  
  40b726:	mov    bl,BYTE PTR [ebp+0x23a71f89]
  40b72c:	jb     0x40b79b
  40b72e:	fucomip st,st(5)
  40b730:	push   ebp
  40b731:	and    al,0x6a
  40b733:	add    eax,0x5603a81a
  40b738:	test   eax,0x2c606db4
  40b73d:	push   edx
  40b73e:	mov    ecx,0x37c858d1
  40b743:	mov    edi,DWORD PTR [ebp+0x4c]
  40b746:	(bad)  
  40b748:	cdq    
  40b749:	cmp    DWORD PTR ds:0x118ee059,eax
  40b74f:	dec    ecx
  40b750:	mov    DWORD PTR [ebx+0x2035cc87],eax
  40b756:	jnp    0x40b6f8
  40b758:	pop    edi
  40b759:	dec    ecx
  40b75a:	gs or  dl,bl
  40b75d:	dec    edx
  40b75e:	inc    esp
  40b75f:	call   FWORD PTR [esi]
  40b761:	and    DWORD PTR [ecx-0x3],ebx
  40b764:	icebp  
  40b765:	lock adc BYTE PTR [edi-0x4],bl
  40b769:	outs   dx,BYTE PTR ds:[esi]
  40b76a:	mov    BYTE PTR [ebx],bl
  40b76c:	call   0xe03c7fe0
  40b771:	fimul  WORD PTR [edx+0x279e3117]
  40b777:	clc    
  40b778:	daa    
  40b779:	inc    ebx
  40b77a:	ins    BYTE PTR es:[edi],dx
  40b77b:	mov    edx,DWORD PTR [ecx+0x21]
  40b77e:	stc    
  40b77f:	xchg   DWORD PTR [ebx],edi
  40b781:	popa   
  40b782:	cdq    
  40b783:	jge    0x40b7eb
  40b785:	test   esi,edx
  40b787:	jae    0x40b712
  40b789:	dec    edx
  40b78a:	adc    DWORD PTR [edi+0x75],ebx
  40b78d:	out    dx,eax
  40b78e:	std    
  40b78f:	or     al,0x65
  40b791:	bound  edi,QWORD PTR ds:0x858e5205
  40b797:	sub    al,0xb1
  40b799:	jp     0x40b724
  40b79b:	xor    cl,BYTE PTR [edi+0x36]
  40b79e:	int    0x69
  40b7a0:	mov    ebx,0x5db0ffc7
  40b7a5:	ins    DWORD PTR es:[edi],dx
  40b7a6:	mov    ebp,DWORD PTR [ebp+0x7c]
  40b7a9:	iret   
  40b7aa:	mov    ds:0x68a114cb,eax
  40b7af:	push   ss
  40b7b0:	or     eax,0xa2ad1d7f
  40b7b5:	test   BYTE PTR [ebp-0x39],ch
  40b7b8:	jle    0x40b7ba
  40b7ba:	add    BYTE PTR [ecx-0x47d5ee1f],bh
  40b7c0:	ret    
  40b7c1:	test   bp,bx
  40b7c4:	mov    bh,0xf5
  40b7c6:	jbe    0x40b7f3
  40b7c8:	std    
  40b7c9:	lods   al,BYTE PTR ds:[esi]
  40b7ca:	or     al,BYTE PTR [ecx+0x1c416b96]
  40b7d0:	repnz (bad) 
  40b7d2:	lods   eax,DWORD PTR ds:[esi]
  40b7d3:	sub    DWORD PTR [ebx-0x3d9288c6],esp
  40b7d9:	cmp    al,0xf5
  40b7db:	sbb    al,0x22
  40b7dd:	fmul   DWORD PTR [edx]
  40b7df:	lods   al,BYTE PTR ds:[esi]
  40b7e0:	mov    al,ds:0x1789430b
  40b7e5:	call   0xdfbf45f9
  40b7ea:	(bad)  
  40b7eb:	sub    eax,0xa607488c
  40b7f0:	push   0xffffffba
  40b7f2:	fiadd  WORD PTR [edx]
  40b7f4:	sub    al,0x73
  40b7f6:	stos   BYTE PTR es:[edi],al
  40b7f7:	imul   edx,edx,0xe9844253
  40b7fd:	adc    BYTE PTR [edx+0x8],ah
  40b800:	xor    edi,ebp
  40b802:	dec    esi
  40b803:	les    esp,FWORD PTR [ecx]
  40b805:	xor    DWORD PTR cs:[esi+0x48],0x41
  40b80a:	js     0x40b81e
  40b80c:	mov    bl,0x1a
  40b80e:	mov    al,ds:0xe2d8a517
  40b813:	stc    
  40b814:	outs   dx,BYTE PTR ds:[esi]
  40b815:	nop
  40b816:	xor    BYTE PTR [esi+0x7d3dbd01],dh
  40b81c:	mov    dl,0x6f
  40b81e:	inc    ebx
  40b81f:	and    dl,0x3
  40b822:	call   FWORD PTR ds:0x9d189464
  40b828:	xor    eax,DWORD PTR [ebp+0x6b4621e5]
  40b82e:	push   esi
  40b82f:	daa    
  40b830:	push   esp
  40b831:	xchg   esp,eax
  40b832:	adc    esp,eax
  40b834:	outs   dx,BYTE PTR ds:[esi]
  40b835:	sub    al,0xb4
  40b837:	xchg   ebp,eax
  40b838:	and    eax,0xc6a83ead
  40b83d:	fwait
  40b83e:	push   ebx
  40b83f:	loop   0x40b809
  40b841:	leave  
  40b842:	pop    ebp
  40b843:	pushf  
  40b844:	das    
  40b845:	push   ds
  40b846:	or     bl,BYTE PTR [edi-0x78e6ec8b]
  40b84c:	bound  edi,QWORD PTR [edx+0x3e80099b]
  40b852:	into   
  40b853:	push   ds
  40b854:	int    0x18
  40b856:	pop    ecx
  40b857:	jbe    0x40b875
  40b859:	neg    BYTE PTR [esi-0x37]
  40b85c:	clc    
  40b85d:	pop    ebp
  40b85e:	scas   al,BYTE PTR es:[edi]
  40b85f:	(bad)  
  40b860:	mov    esp,0xbad1e9fa
  40b865:	or     DWORD PTR [ecx+0x72ee08ae],ecx
  40b86b:	pop    ebp
  40b86c:	inc    esp
  40b86d:	sti    
  40b86e:	mov    bl,0xcf
  40b870:	fcmovu st,st(4)
  40b872:	or     dh,BYTE PTR [edi+edi*2+0x2eed4d9f]
  40b879:	fstp   st(5)
  40b87b:	or     al,0x3e
  40b87d:	sbb    al,0x11
  40b87f:	mov    ah,0x31
  40b881:	mov    ah,0x61
  40b883:	je     0x40b84b
  40b885:	adc    BYTE PTR [edx+0x66417e15],al
  40b88b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b88c:	out    0xc9,al
  40b88e:	jo     0x40b85e
  40b890:	adc    bl,BYTE PTR [edi-0x10a46adc]
  40b896:	sbb    al,0x3f
  40b898:	sbb    al,0x9a
  40b89a:	cmp    eax,0x535335c5
  40b89f:	ret    
  40b8a0:	fwait
  40b8a1:	shl    BYTE PTR [eax-0x4d],0x6e
  40b8a5:	xor    DWORD PTR [esi],ebp
  40b8a7:	aaa    
  40b8a8:	push   0x301f2722
  40b8ad:	xor    esi,esi
  40b8af:	inc    edx
  40b8b0:	in     eax,dx
  40b8b1:	rol    BYTE PTR [ebp-0x52ebf9a5],cl
  40b8b7:	js     0x40b907
  40b8b9:	dec    edi
  40b8ba:	or     dl,0x5d
  40b8bd:	out    0xaf,al
  40b8bf:	mov    BYTE PTR [eax-0x7cae21b0],ch
  40b8c5:	sub    DWORD PTR [ebx],eax
  40b8c7:	xchg   edx,eax
  40b8c8:	mov    ds:0xf2644b3c,eax
  40b8cd:	fdivr  DWORD PTR [edi]
  40b8cf:	mov    bl,0xd4
  40b8d1:	sub    edi,DWORD PTR [edx]
  40b8d3:	test   eax,0xa5501dc5
  40b8d8:	pop    edi
  40b8d9:	repnz out dx,eax
  40b8db:	jnp    0x40b8f9
  40b8dd:	pop    ds
  40b8de:	and    eax,0x2b9ec856
  40b8e3:	addr16 pop ebx
  40b8e5:	and    bh,BYTE PTR [ebx-0x26de5e0e]
  40b8eb:	sub    bl,BYTE PTR [ecx+0x6e]
  40b8ee:	cmp    dh,BYTE PTR [esi-0x29362827]
  40b8f4:	into   
  40b8f5:	dec    ebx
  40b8f6:	xchg   BYTE PTR [eax+0x18232cc4],bh
  40b8fc:	and    BYTE PTR ds:0x7ddf8b00,al
  40b902:	loop   0x40b8f4
  40b904:	fisubr DWORD PTR [edx+0x57223a20]
  40b90a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b90b:	cmp    bl,BYTE PTR [edi+0x55]
  40b90e:	jae    0x40b8c4
  40b910:	add    eax,0x3c9b53b9
  40b915:	jo     0x40b912
  40b917:	fucom  st(2)
  40b919:	ret    0x83cb
  40b91c:	push   esp
  40b91d:	or     eax,0x94c42d
  40b922:	sti    
  40b923:	add    bh,BYTE PTR [edx-0x5c51e1f5]
  40b929:	fmul   DWORD PTR [esi+0xa]
  40b92c:	dec    esi
  40b92d:	jmp    0x40b8e1
  40b92f:	push   ss
  40b930:	out    0x8a,al
  40b932:	mov    edi,0x59fac1f1
  40b937:	mov    bh,0x6
  40b939:	dec    eax
  40b93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b93b:	stc    
  40b93c:	ror    BYTE PTR [ebx+ecx*8+0x40e3f7c6],cl
  40b943:	push   0xdc6203dd
  40b948:	out    dx,al
  40b949:	mov    cl,cl
  40b94b:	sub    al,0x5a
  40b94d:	push   ebp
  40b94e:	pusha  
  40b94f:	xlat   BYTE PTR ds:[ebx]
  40b950:	scas   ax,WORD PTR es:[edi]
  40b952:	mov    DWORD PTR [edi-0x2c],0x3c66b635
  40b959:	add    cl,0x3e
  40b95c:	mov    al,0xbe
  40b95e:	pop    ds
  40b95f:	scas   al,BYTE PTR es:[edi]
  40b960:	fld    st(0)
  40b962:	mov    BYTE PTR [eax+0x5fb6de1f],al
  40b968:	push   edi
  40b969:	cmp    ch,BYTE PTR [ebx+0x37c0f879]
  40b96f:	jnp    0x40b9e2
  40b971:	jl     0x40b91f
  40b973:	(bad)  
  40b974:	cmp    edi,DWORD PTR [ebp-0x42]
  40b977:	fwait
  40b978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b979:	dec    eax
  40b97a:	mul    DWORD PTR [esp+eax*1+0x579762d7]
  40b981:	rcr    BYTE PTR [ecx-0x1803be67],cl
  40b987:	xchg   esp,eax
  40b988:	daa    
  40b989:	pop    eax
  40b98a:	xchg   ebx,eax
  40b98b:	push   cs
  40b98c:	jbe    0x40b9a6
  40b98e:	add    edi,DWORD PTR [esi]
  40b990:	mov    dl,0x1b
  40b992:	dec    ecx
  40b993:	add    eax,0x7ada52ec
  40b998:	mov    ebp,0x5db57c02
  40b99d:	xchg   DWORD PTR [esi-0x67],ebp
  40b9a0:	int3   
  40b9a1:	aam    0x44
  40b9a3:	test   eax,0xde397adc
  40b9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9aa:	mov    ds:0xe3d7f4da,al
  40b9af:	or     eax,0x4a5b96e
  40b9b4:	pusha  
  40b9b5:	sbb    eax,0x28d14d72
  40b9ba:	mov    bh,0xfc
  40b9bc:	ror    DWORD PTR [ebx+0x0],0x94
  40b9c0:	mov    al,al
  40b9c2:	inc    ebp
  40b9c3:	(bad)  
  40b9c5:	xchg   edi,eax
  40b9c6:	pop    edx
  40b9c7:	stc    
  40b9c8:	cmc    
  40b9c9:	out    0x50,eax
  40b9cb:	push   ss
  40b9cc:	test   eax,0xcc7ea88d
  40b9d1:	xchg   edi,eax
  40b9d2:	leave  
  40b9d3:	adc    BYTE PTR [ecx-0x56ff2a7e],al
  40b9d9:	mov    BYTE PTR [eax],0xa3
  40b9dc:	cmp    al,0xef
  40b9de:	inc    edx
  40b9df:	sahf   
  40b9e0:	pusha  
  40b9e1:	dec    edi
  40b9e2:	vprotd xmm5,xmm7,0xa9
  40b9e7:	in     eax,dx
  40b9e8:	fwait
  40b9e9:	pop    ebp
  40b9ea:	or     eax,DWORD PTR [eax]
  40b9ec:	daa    
  40b9ed:	jbe    0x40ba4e
  40b9ef:	mov    ecx,0xe5c152d3
  40b9f4:	and    al,0xff
  40b9f6:	and    ebx,edx
  40b9f8:	sub    DWORD PTR ds:0x86e556b9,edi
  40b9fe:	nop
  40b9ff:	cld    
  40ba00:	xchg   esp,eax
  40ba01:	test   al,0xc6
  40ba03:	pop    es
  40ba04:	mov    eax,0x711c1789
  40ba09:	xchg   esp,eax
  40ba0a:	sti    
  40ba0b:	(bad)  [eax+0x670f104f]
  40ba11:	sub    BYTE PTR gs:[ecx],bl
  40ba14:	lods   eax,DWORD PTR ds:[esi]
  40ba15:	mov    al,0x4c
  40ba17:	ja     0x40b9f2
  40ba19:	nop
  40ba1a:	sub    esi,DWORD PTR [ecx+0x2c]
  40ba1d:	dec    ecx
  40ba1e:	mul    BYTE PTR [ebx-0x10]
  40ba21:	arpl   WORD PTR [eax-0x76],cx
  40ba24:	push   eax
  40ba25:	lock mov eax,ds:0xc22c47c7
  40ba2b:	inc    ebx
  40ba2c:	shl    edx,1
  40ba2e:	fadd   st(3),st
  40ba30:	mov    edx,0xf0984f5f
  40ba35:	xchg   esi,eax
  40ba36:	mov    edi,eax
  40ba38:	(bad)  
  40ba39:	fisttp WORD PTR [esi]
  40ba3b:	xchg   ebp,eax
  40ba3c:	in     eax,dx
  40ba3d:	loopne 0x40b9fc
  40ba3f:	xlat   BYTE PTR ds:[ebx]
  40ba40:	lock es jns 0x40ba42
  40ba44:	ret    
  40ba45:	lahf   
  40ba46:	jg     0x40b9cc
  40ba48:	sbb    dh,bl
  40ba4a:	or     edi,DWORD PTR [ecx+0x3f]
  40ba4d:	xor    BYTE PTR [ecx+0x41430864],dh
  40ba53:	mov    al,0x5a
  40ba55:	pop    es
  40ba56:	rol    BYTE PTR [ebx-0x56],cl
  40ba59:	xchg   BYTE PTR [eax+0x5670c2b1],dl
  40ba5f:	imul   ecx,DWORD PTR [esi+0x63],0x3d
  40ba63:	sub    BYTE PTR [edx+ebp*8+0x7a],0x93
  40ba68:	jp     0x40bab9
  40ba6a:	pop    es
  40ba6b:	jle    0x40bae1
  40ba6d:	aaa    
  40ba6e:	mov    bl,0x22
  40ba70:	xchg   cl,ch
  40ba72:	rcr    edi,1
  40ba74:	fsubr  st,st(5)
  40ba76:	sub    eax,0xbfb560bb
  40ba7b:	inc    edx
  40ba7c:	test   eax,0xb2747e78
  40ba81:	js     0x40ba9d
  40ba83:	stos   BYTE PTR es:[edi],al
  40ba84:	dec    BYTE PTR [ebp+0x7f]
  40ba87:	sti    
  40ba88:	mov    dl,0x53
  40ba8a:	mov    DWORD PTR [di],edi
  40ba8d:	cmp    BYTE PTR [ebx+eax*8],bh
  40ba90:	pop    ss
  40ba91:	repnz lock push esi
  40ba94:	mov    DWORD PTR [eax+0x16],esi
  40ba97:	pop    edi
  40ba98:	adc    BYTE PTR [eax+eiz*8],bh
  40ba9b:	ss or  dl,0x31
  40ba9f:	ret    0xff7e
  40baa2:	lds    edi,FWORD PTR [edi+0x51]
  40baa5:	xor    eax,0x46648ab4
  40baaa:	sub    ebx,edx
  40baac:	int    0xe5
  40baae:	and    dh,BYTE PTR [eax]
  40bab0:	or     DWORD PTR ds:0xbbabaa3e,edx
  40bab6:	ins    DWORD PTR es:[edi],dx
  40bab7:	mov    esp,0xa405666d
  40babc:	push   ss
  40babd:	ins    DWORD PTR es:[edi],dx
  40babe:	add    BYTE PTR [edi],bh
  40bac0:	xor    BYTE PTR [ebp+0x7],bl
  40bac3:	mov    esp,0x4df0754d
  40bac8:	mov    dh,0x63
  40baca:	jns    0x40bb2b
  40bacc:	js     0x40bb45
  40bace:	repz sbb al,0xc8
  40bad1:	xlat   BYTE PTR ds:[ebx]
  40bad2:	push   0xffffffd3
  40bad4:	ins    BYTE PTR es:[edi],dx
  40bad5:	push   0xb66c3f1
  40bada:	mov    ebx,DWORD PTR [ebx-0x31]
  40badd:	pop    eax
  40bade:	push   ebp
  40badf:	(bad)  
  40bae1:	ins    DWORD PTR es:[edi],dx
  40bae2:	dec    edi
  40bae3:	out    0x20,eax
  40bae5:	lds    ecx,FWORD PTR [ebp+0x3890da26]
  40baeb:	loope  0x40bb4e
  40baed:	mov    bh,0x13
  40baef:	stos   BYTE PTR es:[edi],al
  40baf0:	jno    0x40bb3f
  40baf2:	enter  0xc5c5,0x86
  40baf6:	jge    0x40ba9b
  40baf8:	(bad)  
  40baf9:	std    
  40bafa:	dec    eax
  40bafb:	retf   
  40bafc:	fsub   QWORD PTR [esi]
  40bafe:	fwait
  40baff:	mov    al,ds:0xa45393f2
  40bb04:	cs push edi
  40bb06:	test   eax,0xf18ef0bf
  40bb0b:	pop    eax
  40bb0c:	jbe    0x40bad2
  40bb0e:	hlt    
  40bb0f:	push   ebx
  40bb10:	xor    DWORD PTR [edx+0x100c6993],ebx
  40bb16:	(bad)  
  40bb18:	xchg   ecx,eax
  40bb19:	xor    DWORD PTR [eax-0xc],0xb
  40bb1d:	sub    DWORD PTR [ecx],edi
  40bb1f:	aas    
  40bb20:	xlat   BYTE PTR ds:[ebx]
  40bb21:	and    DWORD PTR [ebx+ebp*1-0x63],eax
  40bb25:	pop    esp
  40bb26:	outs   dx,DWORD PTR ds:[esi]
  40bb27:	lock stos BYTE PTR es:[edi],al
  40bb29:	cmp    BYTE PTR fs:[ebx+0x6b],cl
  40bb2d:	add    DWORD PTR [eax-0x551840e5],esp
  40bb33:	stos   DWORD PTR es:[edi],eax
  40bb34:	pop    ds
  40bb35:	cmc    
  40bb36:	fwait
  40bb37:	and    DWORD PTR [esi-0x47139a28],eax
  40bb3d:	xchg   ebp,eax
  40bb3e:	js     0x40baf4
  40bb40:	mov    ebx,esp
  40bb42:	fst    st(3)
  40bb44:	out    0x8d,al
  40bb46:	push   cs
  40bb47:	and    al,0xe4
  40bb49:	and    al,BYTE PTR [ecx+0x59]
  40bb4c:	fidiv  WORD PTR [edi]
  40bb4e:	ins    DWORD PTR es:[edi],dx
  40bb4f:	mov    al,0x30
  40bb51:	fucomip st,st(6)
  40bb53:	aas    
  40bb54:	push   esi
  40bb55:	rcl    BYTE PTR [esi-0x7cfbcbe6],0xf4
  40bb5c:	in     eax,dx
  40bb5d:	ret    
  40bb5e:	aaa    
  40bb5f:	mov    WORD PTR [edx+0x7c],gs
  40bb62:	(bad)  
  40bb63:	test   eax,0xb8eb6f71
  40bb68:	sahf   
  40bb69:	or     al,0x86
  40bb6b:	(bad)  
  40bb6c:	jp     0x40baee
  40bb6e:	cmp    al,0xb4
  40bb70:	shl    BYTE PTR [esi],cl
  40bb72:	in     al,0x6c
  40bb74:	jb     0x40bb60
  40bb76:	mov    ecx,0x4fcbec9a
  40bb7b:	sbb    al,BYTE PTR [ebx-0x1f21f025]
  40bb81:	add    al,0x2
  40bb83:	fucomi st,st(3)
  40bb85:	scas   al,BYTE PTR es:[edi]
  40bb86:	jmp    0xd71e:0xae6cfdc5
  40bb8d:	jbe    0x40bbf4
  40bb8f:	enter  0x3232,0xa2
  40bb93:	ret    0xf2c6
  40bb96:	outs   dx,DWORD PTR ds:[esi]
  40bb97:	scas   al,BYTE PTR es:[edi]
  40bb98:	enter  0xbd69,0x5c
  40bb9c:	pushf  
  40bb9d:	pop    ss
  40bb9e:	push   edx
  40bb9f:	int3   
  40bba0:	pop    ds
  40bba1:	xor    al,0xf9
  40bba3:	sbb    esi,DWORD PTR [esi]
  40bba5:	inc    esi
  40bba6:	outs   dx,DWORD PTR ds:[esi]
  40bba7:	das    
  40bba8:	ins    BYTE PTR es:[edi],dx
  40bba9:	fdiv   QWORD PTR [esi+0x26ea5df1]
  40bbaf:	scas   eax,DWORD PTR es:[edi]
  40bbb0:	fisub  DWORD PTR [ecx-0x15]
  40bbb3:	ja     0x40bb9e
  40bbb5:	mov    esp,0x7f2bf989
  40bbba:	xor    bl,BYTE PTR [esi-0x7fd82d3e]
  40bbc0:	xor    al,0x95
  40bbc2:	xlat   BYTE PTR ds:[ebx]
  40bbc3:	out    dx,al
  40bbc4:	push   ecx
  40bbc5:	data16 test BYTE PTR [ecx+0x3f9de246],cl
  40bbcc:	pop    edi
  40bbcd:	scas   al,BYTE PTR es:[edi]
  40bbce:	sub    eax,0xefdf8f94
  40bbd3:	push   ebx
  40bbd4:	imul   ebx,eax,0xffffffd2
  40bbd7:	js     0x40bbde
  40bbd9:	pop    ss
  40bbda:	leave  
  40bbdb:	jns    0x40bb6e
  40bbdd:	xor    esp,DWORD PTR [ecx-0x21]
  40bbe0:	mov    dh,0x82
  40bbe2:	imul   DWORD PTR [eax+0x52dfffc]
  40bbe8:	cmp    BYTE PTR [ebx],bl
  40bbea:	ret    
  40bbeb:	mov    esp,0xf57ca654
  40bbf0:	(bad)  ds:0x83071e60
  40bbf6:	lods   eax,DWORD PTR ds:[esi]
  40bbf7:	adc    BYTE PTR [edx],bh
  40bbf9:	mov    al,0x74
  40bbfb:	sbb    eax,0xf95615c
  40bc00:	scas   eax,DWORD PTR es:[edi]
  40bc01:	imul   esp,edx,0xffffffef
  40bc04:	push   ds
  40bc05:	add    al,0x19
  40bc07:	mov    bh,0x3f
  40bc09:	and    BYTE PTR [ebx],bl
  40bc0b:	mov    cl,0xa2
  40bc0d:	jp     0x40bbaa
  40bc0f:	test   BYTE PTR [ebx+edx*8],ch
  40bc12:	mov    eax,ds:0x26cad51
  40bc17:	push   es
  40bc18:	repz cmp eax,0x89e999c4
  40bc1e:	and    DWORD PTR [ebx+edx*1+0x2ff1d63b],esi
  40bc25:	jl     0x40bc76
  40bc27:	out    0x7e,eax
  40bc29:	lds    ebp,FWORD PTR [ebx+0x25ada7ae]
  40bc2f:	call   0x87f86598
  40bc34:	inc    edx
  40bc35:	adc    dl,BYTE PTR [edi]
  40bc37:	arpl   WORD PTR [ecx+0x27],sp
  40bc3a:	js     0x40bc4e
  40bc3c:	lods   al,BYTE PTR ds:[esi]
  40bc3d:	xchg   esi,eax
  40bc3e:	(bad)  
  40bc3f:	daa    
  40bc40:	jge    0x40bc0b
  40bc42:	loop   0x40bc54
  40bc44:	je     0x40bbf5
  40bc46:	stos   DWORD PTR es:[edi],eax
  40bc47:	stos   DWORD PTR es:[edi],eax
  40bc48:	jae    0x40bcc1
  40bc4a:	daa    
  40bc4b:	shl    BYTE PTR [eax+0x7c5408e1],0xdc
  40bc52:	jle    0x40bcca
  40bc54:	stc    
  40bc55:	xor    cl,bl
  40bc57:	jb     0x40bbfe
  40bc59:	lods   al,BYTE PTR ds:[esi]
  40bc5a:	scas   eax,DWORD PTR es:[edi]
  40bc5b:	iret   
  40bc5c:	les    esp,FWORD PTR [edx-0x1fbc5241]
  40bc62:	repz and esp,ebx
  40bc65:	sbb    esp,ebp
  40bc67:	cmp    eax,0x11c66dbc
  40bc6c:	jbe    0x40bcb7
  40bc6e:	inc    BYTE PTR [eax+0x7c]
  40bc71:	mov    bh,0x1b
  40bc73:	fsub   st,st(2)
  40bc75:	imul   ecx,DWORD PTR [ebp-0x47113eff],0x18
  40bc7c:	jb     0x40bc72
  40bc7e:	adc    eax,0xc6c71c68
  40bc83:	xor    BYTE PTR [ebx+esi*2-0xa],0x61
  40bc88:	jae    0x40bcb0
  40bc8a:	xchg   esi,eax
  40bc8b:	sub    edi,DWORD PTR [edi+0x3]
  40bc8e:	push   ds
  40bc8f:	dec    edx
  40bc90:	(bad)  
  40bc92:	retf   0x983b
  40bc95:	inc    eax
  40bc96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc97:	mov    dl,0xe9
  40bc99:	mov    al,0xfd
  40bc9b:	xchg   esi,eax
  40bc9c:	mov    DWORD PTR [eax],edx
  40bc9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc9f:	xchg   edi,eax
  40bca0:	xchg   ebp,eax
  40bca1:	push   0x8862ab5c
  40bca6:	inc    ebp
  40bca7:	sub    BYTE PTR [esi+0x3f],dh
  40bcaa:	retf   0x793b
  40bcad:	and    dl,dh
  40bcaf:	(bad)  
  40bcb0:	and    DWORD PTR [edx-0xb],ecx
  40bcb3:	xchg   DWORD PTR [eax-0x4ecf8c3a],eax
  40bcb9:	or     BYTE PTR [ecx],al
  40bcbb:	add    eax,0xbf86b71d
  40bcc0:	fs inc ecx
  40bcc2:	scas   eax,DWORD PTR es:[edi]
  40bcc3:	clc    
  40bcc4:	data16 jp 0x40bce2
  40bcc7:	mov    es,edi
  40bcc9:	inc    esi
  40bcca:	loopne 0x40bc8f
  40bccc:	aam    0xe9
  40bcce:	jne    0x40bcee
  40bcd0:	das    
  40bcd1:	fimul  WORD PTR [edi+0x6b]
  40bcd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcd5:	push   ds
  40bcd6:	sar    DWORD PTR [ebx-0xe3118e],cl
  40bcdc:	mov    bl,0x7b
  40bcde:	outs   dx,DWORD PTR ds:[esi]
  40bcdf:	fsubr  DWORD PTR [ebp+0x23]
  40bce2:	sbb    al,0x4d
  40bce4:	pop    ss
  40bce5:	mov    dl,0x4a
  40bce7:	pusha  
  40bce8:	mov    gs:0x28d53532,al
  40bcee:	xchg   ecx,eax
  40bcef:	mov    DWORD PTR [eiz*8-0x69b9bfe5],0x6f997f90
  40bcfa:	enter  0x551,0xc7
  40bcfe:	mov    al,cl
  40bd00:	fbld   TBYTE PTR ss:[ebp+0x4dfe4998]
  40bd07:	mov    dl,BYTE PTR [edi+0x5fae438]
  40bd0d:	cs pop esp
  40bd0f:	(bad)  
  40bd10:	push   ebx
  40bd11:	and    eax,0xb775f8ef
  40bd16:	dec    esi
  40bd17:	fimul  WORD PTR [esi+0x3]
  40bd1a:	mov    ds:0xe3892631,al
  40bd1f:	mov    BYTE PTR [eax-0x37],0x39
  40bd23:	pop    es
  40bd24:	jge    0x40bd34
  40bd26:	add    eax,0x27c0d688
  40bd2b:	rol    BYTE PTR [edx-0x7db8692e],cl
  40bd31:	outs   dx,DWORD PTR ds:[esi]
  40bd32:	std    
  40bd33:	jp     0x40bd1f
  40bd35:	sti    
  40bd36:	ffree  st(6)
  40bd38:	in     eax,dx
  40bd39:	cmp    BYTE PTR [ecx-0x7732dc36],bl
  40bd3f:	(bad)  
  40bd40:	(bad)  
  40bd41:	int    0x5b
  40bd43:	sub    eax,0x201fed16
  40bd48:	push   0x3ad8168
  40bd4d:	or     esp,edi
  40bd4f:	sbb    DWORD PTR [edi],0xffffff8e
  40bd52:	test   al,0xa2
  40bd54:	in     eax,dx
  40bd55:	out    dx,eax
  40bd56:	mov    ah,0x86
  40bd58:	add    ebp,esp
  40bd5a:	call   0xa01d:0x73de4774
  40bd61:	test   eax,0x63c950f8
  40bd66:	sbb    eax,0x2b30fc71
  40bd6b:	mov    bh,BYTE PTR [ebx+0x4124cd55]
  40bd71:	mov    dl,0x0
  40bd73:	mov    ebp,0xdc1bce8e
  40bd78:	xchg   edx,eax
  40bd79:	out    dx,eax
  40bd7a:	or     eax,0x757c064b
  40bd7f:	cmp    BYTE PTR [edi-0x22e22087],0x31
  40bd86:	ja     0x40bd18
  40bd88:	xor    ch,BYTE PTR [ecx]
  40bd8a:	dec    edx
  40bd8b:	mov    cl,0x9e
  40bd8d:	call   0x2302:0x486c7ff7
  40bd94:	and    DWORD PTR [ecx],0x7d
  40bd97:	sub    BYTE PTR [esi+esi*4-0x5c],dl
  40bd9b:	arpl   dx,di
  40bd9d:	ret    
  40bd9e:	imul   ecx,DWORD PTR [esi+ecx*4],0xa82110bc
  40bda5:	push   0x5e
  40bda7:	xor    DWORD PTR [ecx-0x50],0x73
  40bdab:	(bad)  
  40bdad:	mov    dl,0x90
  40bdaf:	rcr    ebp,cl
  40bdb1:	jmp    0x86bf9bb4
  40bdb6:	cld    
  40bdb7:	in     eax,dx
  40bdb8:	fwait
  40bdb9:	aaa    
  40bdba:	add    al,0xdb
  40bdbc:	push   ebx
  40bdbd:	rcr    esi,1
  40bdbf:	adc    eax,0xbc1f2641
  40bdc4:	adc    bl,BYTE PTR [edi+0x77]
  40bdc7:	push   ds
  40bdc8:	cdq    
  40bdc9:	pop    eax
  40bdca:	ss push ebp
  40bdcc:	hlt    
  40bdcd:	add    al,0xc7
  40bdcf:	fmulp  st(1),st
  40bdd1:	mov    esi,0x2d688713
  40bdd6:	or     eax,0x9f1bab64
  40bddb:	rcl    DWORD PTR ds:0xabba04e7,1
  40bde1:	leave  
  40bde2:	sbb    ebp,DWORD PTR [ecx]
  40bde4:	in     al,dx
  40bde5:	test   eax,0x625ef9e2
  40bdea:	mov    eax,0x77e2958c
  40bdef:	outs   dx,DWORD PTR ds:[esi]
  40bdf0:	or     al,BYTE PTR es:0xaafeb361
  40bdf7:	mov    eax,0x2a87e912
  40bdfc:	xor    ecx,DWORD PTR [edx+edx*8+0xd98c0af]
  40be03:	out    dx,al
  40be04:	push   ecx
  40be05:	outs   dx,BYTE PTR ds:[esi]
  40be06:	sti    
  40be07:	es jbe 0x40bdb4
  40be0a:	stc    
  40be0b:	and    BYTE PTR [esi+edx*1+0x58],bh
  40be0f:	out    0xec,al
  40be11:	fstp   TBYTE PTR [ebx-0x33]
  40be14:	test   al,0x95
  40be16:	push   ss
  40be17:	out    dx,al
  40be18:	jnp    0x40be3c
  40be1a:	test   al,0x7b
  40be1c:	xor    al,0xcc
  40be1e:	mov    ebx,DWORD PTR [esp+eax*8-0x73]
  40be22:	cdq    
  40be23:	sbb    ebp,ebx
  40be25:	cdq    
  40be26:	not    BYTE PTR [edx-0x12ef704d]
  40be2c:	pop    edi
  40be2d:	xchg   esi,eax
  40be2e:	cmp    eax,0xa71ba911
  40be33:	sbb    al,0x8a
  40be35:	adc    dl,BYTE PTR [eax]
  40be37:	icebp  
  40be38:	jmp    0x60347060
  40be3d:	pushf  
  40be3e:	call   0xf861e648
  40be43:	inc    ecx
  40be44:	sahf   
  40be45:	lods   eax,DWORD PTR ds:[esi]
  40be46:	into   
  40be47:	les    edx,FWORD PTR [ecx+0x144ad3f6]
  40be4d:	mov    DWORD PTR [ebp+0x3f],ebp
  40be50:	sbb    eax,0x3aa1a24
  40be55:	adc    al,BYTE PTR [edi+0x15ed94a8]
  40be5b:	xor    al,0xd4
  40be5d:	and    DWORD PTR [esi+eiz*2+0x2b93243e],edi
  40be64:	xchg   esp,eax
  40be65:	sbb    al,0x8c
  40be67:	mov    eax,0xb67ddb3d
  40be6c:	xchg   ebp,eax
  40be6d:	stos   BYTE PTR es:[edi],al
  40be6e:	ins    BYTE PTR es:[edi],dx
  40be6f:	dec    edx
  40be70:	lea    esp,[eax+0x1a]
  40be73:	scas   eax,DWORD PTR es:[edi]
  40be74:	ins    BYTE PTR es:[edi],dx
  40be75:	outs   dx,BYTE PTR ds:[esi]
  40be76:	cmp    DWORD PTR [edx+0x4c],esi
  40be79:	test   eax,0x40a117b5
  40be7e:	add    al,0xbd
  40be81:	cmp    BYTE PTR [edi-0x71],dl
  40be84:	or     esi,DWORD PTR [eax+0x64301a75]
  40be8a:	sbb    al,0xa3
  40be8c:	push   cs
  40be8d:	inc    ecx
  40be8e:	das    
  40be8f:	jno    0x40beb1
  40be91:	xchg   edi,eax
  40be92:	xchg   DWORD PTR [edi],esi
  40be94:	mov    esp,0x5c767926
  40be99:	mov    eax,ds:0x9a46a300
  40be9e:	aad    0x6e
  40bea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bea1:	cmp    BYTE PTR [edx+edx*1-0x6f],0xa5
  40bea6:	shl    BYTE PTR [edi-0x63858e74],cl
  40beac:	cmc    
  40bead:	cmp    DWORD PTR [esi],edi
  40beaf:	jle    0x40bf0b
  40beb1:	inc    esi
  40beb2:	into   
  40beb3:	mov    bh,0x90
  40beb5:	dec    eax
  40beb6:	fild   QWORD PTR [ebx+0x74]
  40beb9:	ror    DWORD PTR [ebx-0x40038008],0x80
  40bec0:	mov    cl,dl
  40bec2:	sub    bh,BYTE PTR [ebp+0x56e90bfa]
  40bec8:	ret    
  40bec9:	icebp  
  40beca:	in     al,0x6
  40becc:	jmp    0x40be80
  40bece:	push   eax
  40becf:	mov    esp,fs
  40bed1:	imul   ebp,DWORD PTR [ebx+0x34],0xfffffffe
  40bed5:	les    ebp,FWORD PTR [esi+eiz*1-0x5d028c5b]
  40bedc:	xor    dh,BYTE PTR [edx]
  40bede:	mov    eax,0x7fdee89b
  40bee3:	jecxz  0x40beb8
  40bee5:	xchg   BYTE PTR [ecx+0x14],dl
  40bee8:	ds add ecx,eax
  40beeb:	xor    BYTE PTR [ecx],0xc1
  40beee:	js     0x40bf4a
  40bef0:	(bad)  
  40bef1:	pusha  
  40bef2:	leave  
  40bef3:	bound  eax,QWORD PTR [edx+0x55e9d4be]
  40bef9:	loopne 0x40be84
  40befb:	and    BYTE PTR [esi-0x2f],0xc8
  40beff:	mov    WORD PTR [edx+0x2],ss
  40bf02:	hlt    
  40bf03:	popf   
  40bf04:	xchg   DWORD PTR [edx],eax
  40bf06:	cmp    DWORD PTR [ebx+0x5604b356],eax
  40bf0c:	mov    ch,0x61
  40bf0e:	mov    esi,0xc7cc2569
  40bf13:	xchg   edi,eax
  40bf14:	xchg   ebx,eax
  40bf15:	add    DWORD PTR [ebx+0x138ad862],eax
  40bf1b:	or     BYTE PTR [ecx],ah
  40bf1d:	das    
  40bf1e:	loopne 0x40beb0
  40bf20:	fucomi st,st(0)
  40bf22:	sbb    eax,0x77a8eef5
  40bf27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf28:	das    
  40bf29:	(bad)  
  40bf2a:	fild   WORD PTR ds:0xdebf7d0e
  40bf30:	test   ah,0x33
  40bf33:	xchg   ebx,eax
  40bf34:	xor    DWORD PTR [ebx+0x34c88efc],ecx
  40bf3a:	ds cli 
  40bf3c:	or     bh,BYTE PTR [eax]
  40bf3e:	es pop ecx
  40bf40:	popa   
  40bf41:	mov    ah,0x9a
  40bf43:	dec    ecx
  40bf44:	call   0x887d2a8e
  40bf49:	into   
  40bf4a:	lods   al,BYTE PTR ds:[esi]
  40bf4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf4c:	adc    BYTE PTR [edi],0x4f
  40bf4f:	inc    ebp
  40bf50:	dec    eax
  40bf51:	cmc    
  40bf52:	xchg   ebp,eax
  40bf53:	es jmp 0x2ebb:0x7b07fefc
  40bf5b:	jg     0x40bfd0
  40bf5d:	loope  0x40bfae
  40bf5f:	sbb    al,0x12
  40bf61:	in     eax,0xfc
  40bf63:	test   al,0x4d
  40bf65:	cmp    ebx,DWORD PTR [ebx+0x3c1e3fd8]
  40bf6b:	push   ss
  40bf6c:	das    
  40bf6d:	mov    DWORD PTR [ecx+0x2b],esp
  40bf70:	and    BYTE PTR [esp+eax*2+0x25],cl
  40bf74:	lods   eax,DWORD PTR ds:[esi]
  40bf75:	sbb    al,0x84
  40bf77:	mov    dh,0xd8
  40bf79:	mov    edi,0xa1048d10
  40bf7e:	int    0x8f
  40bf80:	jl     0x40bf0c
  40bf82:	sub    DWORD PTR [ebp+0x467291a0],edx
  40bf88:	xchg   ebp,eax
  40bf89:	sbb    BYTE PTR [edx-0x7eca13c2],ch
  40bf8f:	out    dx,al
  40bf90:	scas   al,BYTE PTR es:[edi]
  40bf91:	popf   
  40bf92:	adc    eax,0xd8fdfed9
  40bf97:	xchg   edx,eax
  40bf98:	popa   
  40bf99:	ret    
  40bf9a:	jbe    0x40bfdd
  40bf9c:	mov    bl,0x87
  40bf9e:	sub    BYTE PTR [edi+0x426429a4],ch
  40bfa4:	cmp    dh,dl
  40bfa6:	je     0x40bffb
  40bfa8:	jmp    0x40bf6a
  40bfaa:	jge    0x40c007
  40bfac:	add    esi,esp
  40bfae:	inc    ebx
  40bfaf:	xchg   DWORD PTR [edi-0x641d490],edi
  40bfb5:	mov    ebx,0x7b9c769c
  40bfba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfbb:	mov    BYTE PTR [eax],bh
  40bfbd:	fwait
  40bfbe:	add    BYTE PTR [edi-0x21],bh
  40bfc1:	xchg   ebx,eax
  40bfc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfc3:	xchg   edx,eax
  40bfc4:	or     DWORD PTR [ebx],ebx
  40bfc6:	adc    al,0x12
  40bfc8:	jmp    0xd95a9dce
  40bfcd:	or     eax,0x6ea32b78
  40bfd2:	loope  0x40bf55
  40bfd4:	cmp    al,0x58
  40bfd6:	cli    
  40bfd7:	sbb    edi,DWORD PTR [edx+eax*1+0x20]
  40bfdb:	arpl   WORD PTR [edi+0x59],dx
  40bfde:	adc    cl,ah
  40bfe0:	xchg   edi,eax
  40bfe1:	test   DWORD PTR [ecx],0xa21d960d
  40bfe7:	ja     0x40bffa
  40bfe9:	inc    edi
  40bfea:	pop    ebp
  40bfeb:	sub    bl,BYTE PTR [eax-0xa]
  40bfee:	or     bh,BYTE PTR [esi-0x4e]
  40bff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bff2:	push   0x9eb9152e
  40bff7:	lea    ecx,[ecx]
  40bff9:	inc    ecx
  40bffa:	and    DWORD PTR [edx],0x6e8d854e
  40c000:	js     0x40bfa9
  40c002:	jb     0x40bf93
  40c004:	mov    edx,0x90b11dd6
  40c009:	or     cl,bh
  40c00b:	fist   DWORD PTR [esi+edi*8]
  40c00e:	sbb    eax,0x2cd6c482
  40c013:	mov    esp,0xcb7ff196
  40c018:	out    dx,eax
  40c019:	dec    eax
  40c01a:	(bad)
  40c01d:	mov    bh,0xce
  40c01f:	dec    edi
  40c020:	adc    al,0x67
  40c022:	pop    ds
  40c023:	push   edi
  40c024:	xor    eax,0xf000c18f
  40c029:	pushf  
  40c02a:	dec    ecx
  40c02b:	std    
  40c02c:	fisubr WORD PTR [eax+ecx*1+0x65be2f75]
  40c033:	in     eax,dx
  40c034:	mov    ds:0x5d461717,al
  40c039:	enter  0x663f,0xa7
  40c03d:	popa   
  40c03e:	inc    edx
  40c03f:	icebp  
  40c040:	dec    ebp
  40c041:	push   ds
  40c042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c043:	sahf   
  40c044:	test   DWORD PTR [eax+0x5c66a72],edx
  40c04a:	mov    edx,0x60b17437
  40c04f:	emms   
  40c051:	or     esp,edi
  40c053:	(bad)  
  40c055:	sbb    al,0x84
  40c057:	dec    ecx
  40c058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c059:	dec    ebp
  40c05a:	mul    bl
  40c05c:	push   ds
  40c05d:	add    al,0x98
  40c05f:	fs cld 
  40c061:	or     BYTE PTR [ebx+0x3b],cl
  40c064:	push   ss
  40c065:	test   BYTE PTR [esi+0xf354e06],bl
  40c06b:	mov    bh,0x37
  40c06d:	fucomi st,st(5)
  40c06f:	pop    edi
  40c070:	jbe    0x40c07f
  40c072:	das    
  40c073:	(bad)  
  40c074:	mul    BYTE PTR [ebp+ecx*2-0x4a]
  40c078:	jnp    0x40c0f2
  40c07a:	imul   esp,eax,0xde11c84b
  40c080:	pop    esi
  40c081:	jle    0x40c05f
  40c083:	add    DWORD PTR [ebx],edi
  40c085:	add    edx,DWORD PTR [ebp+0x20]
  40c088:	gs push es
  40c08a:	pop    eax
  40c08b:	xchg   ecx,eax
  40c08c:	xchg   ecx,eax
  40c08d:	cld    
  40c08e:	add    ch,ah
  40c090:	xchg   esi,eax
  40c091:	push   DWORD PTR [ebx]
  40c093:	mov    DWORD PTR [edx],edi
  40c095:	in     eax,dx
  40c096:	jl     0x40c10e
  40c098:	faddp  st(3),st
  40c09a:	sahf   
  40c09b:	sbb    esp,DWORD PTR [ebx+0x35]
  40c09e:	cdq    
  40c09f:	mov    WORD PTR [ebx+0xe4fe3b5],?
  40c0a5:	cmp    DWORD PTR ds:0x509da15e,edx
  40c0ab:	call   0x6708:0x4fb1ac8e
  40c0b2:	adc    esp,ecx
  40c0b4:	fidiv  WORD PTR fs:[esi]
  40c0b7:	ins    DWORD PTR es:[edi],dx
  40c0b8:	pop    ss
  40c0b9:	inc    ecx
  40c0ba:	pop    es
  40c0bb:	cld    
  40c0bc:	inc    ebp
  40c0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0be:	jmp    0x85007cc8
  40c0c3:	int    0x72
  40c0c5:	xor    ch,BYTE PTR [edi+ebx*1]
  40c0c8:	loopne 0x40c080
  40c0ca:	lea    ecx,[esi+0x5e894f50]
  40c0d0:	sbb    al,0x67
  40c0d2:	test   BYTE PTR [edi+0x18],bh
  40c0d5:	out    dx,eax
  40c0d6:	jno    0x40c0d3
  40c0d8:	lahf   
  40c0d9:	(bad)  
  40c0da:	sbb    ah,BYTE PTR [ebp-0x266c9bb7]
  40c0e0:	adc    eax,0xe65cbaf7
  40c0e5:	xor    esp,0x114a69c7
  40c0eb:	sahf   
  40c0ec:	jecxz  0x40c07f
  40c0ee:	data16 aas 
  40c0f0:	aas    
  40c0f1:	push   ss
  40c0f2:	(bad)  [edx+esi*8-0x62]
  40c0f6:	push   es
  40c0f7:	cdq    
  40c0f8:	popf   
  40c0f9:	sbb    ebx,DWORD PTR [ecx*8-0x2b1f713e]
  40c100:	idiv   DWORD PTR [ebp+0x1e79a5c9]
  40c106:	pmullw mm4,QWORD PTR [ebp-0x6ee4abf3]
  40c10d:	idiv   BYTE PTR [ebx+edi*8+0x32]
  40c111:	pop    ds
  40c112:	xor    al,0xab
  40c114:	in     al,dx
  40c115:	(bad)  
  40c116:	ficom  DWORD PTR gs:[esi+edx*1]
  40c11a:	rcl    DWORD PTR [esi-0x7aff9c7f],1
  40c120:	or     al,BYTE PTR [edx+0x68854410]
  40c126:	pop    eax
  40c127:	mov    ds:0xc531d666,eax
  40c12c:	mov    ds:0xfc0aaca2,eax
  40c131:	xchg   ebp,eax
  40c132:	mov    ?,WORD PTR [ebx]
  40c134:	repz fdivr QWORD PTR [edx+0x1]
  40c138:	push   ebx
  40c139:	mov    DWORD PTR [edi],edi
  40c13b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c13d:	dec    eax
  40c13e:	push   0xc5c4870b
  40c143:	(bad)  
  40c144:	test   eax,0x111ecb96
  40c149:	imul   esp,DWORD PTR [edi+eax*4+0xc],0xca82889c
  40c151:	lods   eax,DWORD PTR ds:[esi]
  40c152:	add    esp,DWORD PTR [eax-0x57]
  40c155:	int    0x3c
  40c157:	fimul  WORD PTR [eax+0x23]
  40c15a:	jo     0x40c12f
  40c15c:	and    bh,0xd3
  40c15f:	(bad)  
  40c160:	sub    BYTE PTR [ebp+0x78],dl
  40c163:	daa    
  40c164:	sub    ch,BYTE PTR [edx-0x6657ed91]
  40c16a:	hlt    
  40c16b:	push   esp
  40c16c:	call   0x21d0:0x8f745779
  40c173:	inc    eax
  40c174:	xchg   esp,eax
  40c175:	out    dx,al
  40c176:	loope  0x40c130
  40c178:	xor    ch,BYTE PTR [ebx+0x243265ad]
  40c17e:	mov    edi,0xddf8be08
  40c183:	fmul   DWORD PTR [ecx-0x10]
  40c186:	enter  0x75af,0xa2
  40c18a:	pop    esp
  40c18b:	push   0xffffffad
  40c18d:	mov    ds:0x194a5288,eax
  40c192:	shr    DWORD PTR [edi],cl
  40c194:	lods   eax,DWORD PTR ds:[esi]
  40c195:	pop    ebp
  40c196:	mov    dl,0x5b
  40c198:	cmp    al,0x70
  40c19a:	xchg   edx,eax
  40c19b:	pop    ebx
  40c19c:	jp     0x40c1e2
  40c19e:	jo     0x40c1c7
  40c1a0:	add    BYTE PTR [esi-0x1f],al
  40c1a3:	pop    es
  40c1a4:	add    bl,BYTE PTR [esp+eiz*2]
  40c1a7:	and    dh,BYTE PTR [esi+0x6b]
  40c1aa:	push   es
  40c1ab:	mov    ds:0xb2df649d,eax
  40c1b0:	sbb    DWORD PTR [edx+edx*1],ebx
  40c1b3:	add    esp,DWORD PTR [eax+0x4b9a8dbe]
  40c1b9:	nop
  40c1ba:	mov    eax,ds:0xb0dd7833
  40c1bf:	mov    edx,0xdaf9b926
  40c1c4:	aas    
  40c1c5:	call   edi
  40c1c7:	jns    0x40c1ee
  40c1c9:	lock mov dh,0xb3
  40c1cc:	xchg   edi,eax
  40c1cd:	cld    
  40c1ce:	mov    esi,0x58db737f
  40c1d3:	dec    edx
  40c1d4:	push   es
  40c1d5:	pop    ds
  40c1d6:	dec    edi
  40c1d7:	and    BYTE PTR [edx+0x51952404],dh
  40c1dd:	xor    dh,BYTE PTR [ebp+0x1582e71f]
  40c1e3:	leave  
  40c1e4:	out    0x46,al
  40c1e6:	shl    BYTE PTR [edx+0x73ab6d9a],1
  40c1ec:	cmp    BYTE PTR [ebp+ebx*1-0x68a296e0],ah
  40c1f3:	das    
  40c1f4:	test   BYTE PTR [ebp+eax*4-0xc589f34],bl
  40c1fb:	adc    ch,BYTE PTR [ebp+ebx*2-0xf603cd4]
  40c202:	retf   0x3e2
  40c205:	push   ecx
  40c206:	push   esi
  40c207:	aam    0x6c
  40c209:	and    BYTE PTR [edi],cl
  40c20b:	cdq    
  40c20c:	loope  0x40c26d
  40c20e:	(bad)  
  40c20f:	lahf   
  40c210:	inc    eax
  40c211:	cs sbb esi,edi
  40c214:	jmp    0x60ba:0x48450e6e
  40c21b:	mov    bh,0x1d
  40c21d:	ds push esi
  40c21f:	add    al,0x2a
  40c221:	stos   BYTE PTR es:[edi],al
  40c222:	loope  0x40c296
  40c224:	dec    ebp
  40c225:	iret   
  40c226:	fidiv  DWORD PTR [ebx]
  40c228:	jecxz  0x40c1cb
  40c22a:	inc    esi
  40c22b:	fwait
  40c22c:	cmc    
  40c22d:	add    al,0x6
  40c22f:	push   cs
  40c230:	mov    fs,WORD PTR [ebp+ebx*4-0x1a]
  40c234:	sbb    esi,DWORD PTR [ecx+0x13]
  40c237:	lea    edi,[edi+0x7a]
  40c23a:	retf   
  40c23b:	pop    edi
  40c23c:	or     cl,BYTE PTR [edi]
  40c23e:	cld    
  40c23f:	dec    esp
  40c240:	(bad)  
  40c241:	xlat   BYTE PTR ds:[ebx]
  40c242:	jnp    0x40c2b3
  40c244:	ds pop ds
  40c246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c247:	cmp    DWORD PTR [edx],ebx
  40c249:	push   es
  40c24a:	dec    eax
  40c24b:	lahf   
  40c24c:	(bad)  
  40c24d:	adc    bl,BYTE PTR [eax]
  40c24f:	scas   eax,DWORD PTR es:[edi]
  40c250:	jl     0x40c292
  40c252:	mov    dl,0x30
  40c254:	call   0xf5870e33
  40c259:	pop    eax
  40c25a:	push   0xf5a13de7
  40c25f:	add    eax,0x72f2c6b2
  40c264:	aam    0xb
  40c266:	scas   eax,DWORD PTR es:[edi]
  40c267:	push   ebx
  40c268:	mov    cl,0x74
  40c26a:	cli    
  40c26b:	fcos   
  40c26d:	or     ecx,DWORD PTR [ebx]
  40c26f:	add    eax,0x2a051e22
  40c274:	fwait
  40c275:	stc    
  40c276:	int    0x60
  40c278:	mov    ds:0x38f29548,eax
  40c27d:	rcr    BYTE PTR [esi+edx*4+0x5912ef9d],1
  40c284:	pop    ds
  40c285:	(bad)  
  40c286:	fidiv  WORD PTR [ebx+0x5c]
  40c289:	and    DWORD PTR [ebp-0x53a7ecd4],esi
  40c28f:	mov    esp,0x64d7afca
  40c294:	xor    ecx,DWORD PTR [ecx-0x1fa0992d]
  40c29a:	sub    BYTE PTR [ecx],0xf3
  40c29d:	sbb    BYTE PTR ds:0xa539fee0,cl
  40c2a3:	call   0x8a2d:0x8b2e5335
  40c2aa:	xchg   edi,eax
  40c2ab:	xor    BYTE PTR [edx],ch
  40c2ad:	retf   0x1e04
  40c2b0:	(bad)  
  40c2b1:	iret   
  40c2b2:	fnstsw WORD PTR [edx]
  40c2b4:	outs   dx,BYTE PTR ds:[esi]
  40c2b5:	mov    eax,0xe4372fb4
  40c2ba:	sbb    eax,0x6f130202
  40c2bf:	dec    ebp
  40c2c0:	cli    
  40c2c1:	or     al,0x28
  40c2c3:	retf   0x1fb7
  40c2c6:	popf   
  40c2c7:	jno    0x40c285
  40c2c9:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2cb:	sub    DWORD PTR [esi+0x3604fe5f],ecx
  40c2d1:	sub    eax,0xe8c027a2
  40c2d6:	add    DWORD PTR [edi-0x41],ecx
  40c2d9:	(bad)  
  40c2da:	xchg   esp,eax
  40c2db:	mov    bl,0x5d
  40c2dd:	fisttp WORD PTR [ebx]
  40c2df:	mov    ds,WORD PTR [edi-0x7e]
  40c2e2:	jnp    0x40c2a0
  40c2e4:	add    BYTE PTR [edi+0x3f2328a8],0xf3
  40c2eb:	xchg   BYTE PTR [ecx+0x78],bl
  40c2ee:	sub    dl,cl
  40c2f0:	push   0x0
  40c2f2:	jmp    0xb6bb6960
  40c2f7:	gs popf 
  40c2f9:	inc    eax
  40c2fa:	jge    0x40c2a4
  40c2fc:	and    al,0xea
  40c2fe:	dec    esi
  40c2ff:	call   0xf558:0x4fca5394
  40c306:	pop    ds
  40c307:	stc    
  40c308:	(bad)  
  40c309:	shr    DWORD PTR [ecx],1
  40c30b:	xlat   BYTE PTR ds:[ebx]
  40c30c:	push   ebp
  40c30d:	fst    DWORD PTR [edx-0x5ffa4b7b]
  40c313:	(bad)  
  40c314:	jge    0x40c38e
  40c316:	nop
  40c317:	and    bh,BYTE PTR [ecx]
  40c319:	sar    DWORD PTR [edi+eax*4],1
  40c31c:	xchg   esp,eax
  40c31d:	inc    BYTE PTR ds:0xc4d194fa
  40c323:	cmp    eax,0x338b9393
  40c328:	sbb    cl,BYTE PTR [eax]
  40c32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c32b:	mov    ch,0x15
  40c32d:	pop    ebx
  40c32e:	xchg   edi,eax
  40c32f:	jb     0xf13a3b47
  40c335:	(bad)  
  40c336:	js     0x40c3a7
  40c338:	ret    
  40c339:	dec    edi
  40c33a:	data16 aad 0xf0
  40c33d:	leave  
  40c33e:	lock ds and eax,0x62e4f300
  40c345:	jne    0x40c311
  40c347:	nop
  40c348:	mov    dh,0xde
  40c34a:	(bad)  [edi+0x6b]
  40c34d:	inc    edx
  40c34e:	jae    0x40c2e1
  40c350:	or     BYTE PTR cs:[ecx-0x2c9269b1],0xd8
  40c358:	cmp    BYTE PTR [ebx+0x14],bh
  40c35b:	lods   eax,DWORD PTR ds:[esi]
  40c35c:	mov    bl,0x17
  40c35e:	test   al,0xf3
  40c360:	sub    esp,0xffffffd1
  40c363:	(bad)  
  40c364:	xchg   edx,eax
  40c365:	push   ss
  40c366:	dec    ecx
  40c367:	(bad)  
  40c368:	push   0x60
  40c36a:	mov    ds,WORD PTR [ebx]
  40c36c:	fbld   TBYTE PTR [ebp-0x34]
  40c36f:	and    edx,edx
  40c371:	das    
  40c372:	scas   al,BYTE PTR es:[edi]
  40c373:	sub    edx,esi
  40c375:	lock push es
  40c377:	js     0x40c338
  40c379:	add    eax,0xbde7ce65
  40c37e:	fs ins BYTE PTR es:[edi],dx
  40c380:	mov    esp,0x8662d378
  40c385:	jno    0x40c37e
  40c387:	mov    cl,BYTE PTR [ecx-0x1a]
  40c38a:	pop    edi
  40c38b:	or     edx,esi
  40c38d:	cli    
  40c38e:	xchg   ebx,eax
  40c38f:	add    DWORD PTR [eax+0x860eb59],0x4a4198c0
  40c399:	push   edi
  40c39a:	xchg   ecx,eax
  40c39b:	imul   edi,DWORD PTR [ebx+0x4c],0xc60c8c2b
  40c3a2:	push   esp
  40c3a3:	leave  
  40c3a4:	jg     0x40c3c1
  40c3a6:	shl    bl,0x9
  40c3a9:	dec    eax
  40c3aa:	dec    ebx
  40c3ab:	pop    ebp
  40c3ac:	pop    eax
  40c3ad:	cld    
  40c3ae:	in     al,0x9f
  40c3b0:	ss das 
  40c3b2:	test   BYTE PTR [edi+edi*1-0x35],cl
  40c3b6:	pushf  
  40c3b7:	sti    
  40c3b8:	hlt    
  40c3b9:	(bad)  
  40c3ba:	(bad)  
  40c3bc:	nop
  40c3bd:	mov    ecx,0x5c339bdf
  40c3c2:	(bad)  
  40c3c3:	icebp  
  40c3c4:	icebp  
  40c3c5:	xchg   BYTE PTR [edx-0x3e879f27],ch
  40c3cb:	jg     0x40c3eb
  40c3cd:	mov    dh,0x1f
  40c3cf:	or     edx,DWORD PTR ds:0xa3e12be8
  40c3d5:	test   eax,0xfb0c6921
  40c3da:	push   ebx
  40c3db:	lahf   
  40c3dc:	sbb    al,BYTE PTR [edx+ebx*2-0x8]
  40c3e0:	mov    dh,0x38
  40c3e2:	arpl   WORD PTR [ecx-0x2c],bx
  40c3e5:	ins    BYTE PTR es:[edi],dx
  40c3e6:	add    ah,BYTE PTR [esi+0x31f93032]
  40c3ec:	lods   al,BYTE PTR ds:[esi]
  40c3ed:	pop    ecx
  40c3ee:	mov    ds:0xfaaed6c7,al
  40c3f3:	sar    eax,1
  40c3f5:	or     al,0x58
  40c3f7:	aad    0x4
  40c3f9:	mov    eax,0xbee70d15
  40c3fe:	stos   DWORD PTR es:[edi],eax
  40c3ff:	test   al,0xac
  40c401:	xor    al,0x8f
  40c403:	inc    edx
  40c404:	mov    cl,BYTE PTR [edx-0x46629c9b]
  40c40a:	jge    0x40c43a
  40c40c:	inc    ebp
  40c40d:	mov    al,0xe6
  40c40f:	bound  esi,QWORD PTR [ecx]
  40c411:	jne    0x40c396
  40c413:	pusha  
  40c414:	sbb    BYTE PTR [edi-0x7cf547da],cl
  40c41a:	sbb    edi,ebp
  40c41c:	rcr    BYTE PTR [edi-0x2f47697f],1
  40c422:	xchg   ecx,eax
  40c423:	(bad)  
  40c424:	adc    al,0xb
  40c426:	push   ds
  40c427:	xlat   BYTE PTR ds:[ebx]
  40c428:	cmp    eax,0x3b713e13
  40c42d:	mov    ecx,0x4b58e390
  40c432:	xchg   ebp,eax
  40c433:	and    eax,0x229f420
  40c438:	cs jns 0x40c49a
  40c43b:	sub    al,bh
  40c43d:	stos   DWORD PTR es:[edi],eax
  40c43e:	stc    
  40c43f:	nop
  40c440:	mov    esi,0xd95ebdc6
  40c445:	cmp    dl,BYTE PTR [edi-0x51]
  40c448:	pop    es
  40c449:	add    esi,DWORD PTR [ebp+0x11]
  40c44c:	jno    0x40c45d
  40c44e:	in     al,dx
  40c44f:	xor    edi,DWORD PTR ds:0x596ac1b4
  40c455:	jo     0x40c475
  40c457:	loop   0x40c3e9
  40c459:	and    ch,cl
  40c45b:	not    BYTE PTR [edx]
  40c45d:	mov    al,0x15
  40c45f:	jecxz  0x40c3e5
  40c461:	dec    ebx
  40c462:	pop    edi
  40c463:	xchg   edi,eax
  40c464:	push   esi
  40c465:	xor    al,0x6b
  40c467:	int3   
  40c468:	pop    esp
  40c469:	int    0x24
  40c46b:	adc    BYTE PTR [edi+0x22],cl
  40c46e:	fwait
  40c46f:	jl     0x40c433
  40c471:	inc    edx
  40c472:	mov    ebx,ecx
  40c474:	and    BYTE PTR [edi+0x2a],cl
  40c477:	ror    BYTE PTR [esi-0x46],0x44
  40c47b:	rcl    ebx,cl
  40c47d:	scas   eax,DWORD PTR es:[edi]
  40c47e:	jg     0x40c495
  40c480:	iret   
  40c481:	jmp    0x40c48e
  40c483:	pop    eax
  40c484:	(bad)  
  40c485:	fisub  WORD PTR [edx+0x48]
  40c488:	mov    edi,0xc16abdbd
  40c48d:	ror    cl,0xd7
  40c490:	sbb    DWORD PTR [edx+0x74],0x5b9aae96
  40c497:	jmp    0x94d7:0x932d8957
  40c49e:	mov    BYTE PTR [esi],al
  40c4a0:	mov    bh,0x0
  40c4a2:	add    BYTE PTR [ebp*1+0x4b5d45c6],ch
  40c4a9:	fidiv  WORD PTR [edx+0x7]
  40c4ac:	rcr    ebp,0x46
  40c4af:	lea    edx,[esi+0x88cb006]
  40c4b5:	int    0x52
  40c4b7:	pop    ebx
  40c4b8:	pusha  
  40c4b9:	inc    DWORD PTR [ebx+edi*1-0x368af7e0]
  40c4c0:	les    esi,FWORD PTR [ebx+0x54]
  40c4c3:	inc    eax
  40c4c4:	test   BYTE PTR [ecx],0x71
  40c4c7:	cld    
  40c4c8:	ficomp WORD PTR [ebx-0x1dc7153e]
  40c4ce:	adc    bh,ch
  40c4d0:	leave  
  40c4d1:	fmul   DWORD PTR [esi]
  40c4d3:	or     bl,BYTE PTR ds:0x99882770
  40c4d9:	push   0xa
  40c4db:	jle    0x40c464
  40c4dd:	sub    DWORD PTR [esi+0x65],esp
  40c4e0:	mov    bl,0xfa
  40c4e2:	xchg   edi,eax
  40c4e3:	mov    al,0x98
  40c4e5:	xchg   BYTE PTR [ebx],ch
  40c4e7:	test   eax,0xe975736b
  40c4ec:	and    dl,ch
  40c4ee:	ins    BYTE PTR es:[edi],dx
  40c4ef:	std    
  40c4f0:	or     ah,dl
  40c4f2:	aad    0x60
  40c4f4:	test   DWORD PTR [eax-0x3f],0x3a8321ff
  40c4fb:	dec    edx
  40c4fc:	cdq    
  40c4fd:	popf   
  40c4fe:	pop    ecx
  40c4ff:	sbb    DWORD PTR [ebp-0x6f90f0c7],ecx
  40c505:	test   dl,0x10
  40c508:	gs dec edi
  40c50a:	lds    ebp,FWORD PTR [esp+edx*2+0x7f]
  40c50e:	outs   dx,DWORD PTR ds:[esi]
  40c50f:	xor    ch,BYTE PTR [ecx-0x71]
  40c512:	xor    eax,DWORD PTR [edi+0x7525d83f]
  40c518:	xchg   edi,eax
  40c519:	lds    eax,FWORD PTR [edi+0x5]
  40c51c:	cmp    ecx,edi
  40c51e:	test   cl,ch
  40c520:	repnz data16 div BYTE PTR [edx+0x10]
  40c525:	leave  
  40c526:	int    0x31
  40c528:	retf   0xee0a
  40c52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c52d:	sbb    cl,BYTE PTR ds:0xd69606f7
  40c533:	pop    ecx
  40c534:	lods   eax,DWORD PTR ds:[esi]
  40c535:	and    edx,ebp
  40c537:	fwait
  40c538:	mov    dh,0x5e
  40c53a:	stc    
  40c53b:	sub    BYTE PTR [ebx],ch
  40c53d:	(bad)  
  40c53e:	jmp    0xa54f7d16
  40c543:	loope  0x40c5bf
  40c545:	xor    ecx,DWORD PTR [ecx+0xe3813cc]
  40c54b:	jae    0x40c563
  40c54d:	jle    0x40c583
  40c54f:	mov    edx,0xcbab5625
  40c554:	mov    BYTE PTR [ecx+eiz*4-0xca37ccf],ah
  40c55b:	mov    eax,0x817c0c1
  40c560:	ja     0x40c566
  40c562:	adc    ebp,DWORD PTR [edx-0x61]
  40c565:	sub    al,0x44
  40c567:	call   0xe5f7:0x95ace213
  40c56e:	mov    DWORD PTR [esi-0x58],esp
  40c571:	pop    edx
  40c572:	(bad)  
  40c574:	xchg   BYTE PTR [edi],al
  40c576:	dec    eax
  40c577:	int3   
  40c578:	jmp    0xefa183f2
  40c57d:	imul   DWORD PTR [edi-0x7f]
  40c580:	ror    DWORD PTR [eax+0x53],0xfc
  40c584:	adc    dl,al
  40c586:	cs push edi
  40c588:	pop    ebx
  40c589:	sbb    al,0xb4
  40c58b:	out    dx,al
  40c58c:	dec    edi
  40c58d:	popa   
  40c58e:	push   ecx
  40c58f:	mov    edi,0xbc5530d7
  40c594:	data16 sub al,BYTE PTR [ebp-0x13125181]
  40c59b:	and    edx,edi
  40c59d:	mov    al,ds:0xa9cb3196
  40c5a2:	cmp    eax,0xc089a227
  40c5a7:	mov    ecx,0x94e9deff
  40c5ac:	nop
  40c5ad:	mov    edx,0xd1d9015e
  40c5b2:	inc    esi
  40c5b3:	shl    BYTE PTR [ebx+0x16],1
  40c5b6:	mov    ds:0x5b5130ca,al
  40c5bb:	repz sbb cl,BYTE PTR [edx]
  40c5be:	sub    edi,ebx
  40c5c0:	xor    al,bh
  40c5c2:	mov    dl,BYTE PTR [esi]
  40c5c4:	outs   dx,BYTE PTR ds:[esi]
  40c5c5:	nop
  40c5c6:	dec    eax
  40c5c7:	xor    eax,0xd3e9889
  40c5cc:	or     DWORD PTR [edx-0x2],edi
  40c5cf:	(bad)  
  40c5d0:	xchg   edi,eax
  40c5d1:	inc    ebp
  40c5d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d3:	dec    edi
  40c5d4:	aas    
  40c5d5:	xor    ebx,DWORD PTR [edx+0x5c35deba]
  40c5db:	sbb    al,0x23
  40c5dd:	adc    al,0x5d
  40c5df:	pop    ss
  40c5e0:	sbb    bh,BYTE PTR [ebx]
  40c5e2:	or     dh,ah
  40c5e4:	fiadd  WORD PTR [esp+edi*1-0x22]
  40c5e8:	lds    edi,FWORD PTR [ebp-0x4e]
  40c5eb:	mov    dl,0xe7
  40c5ed:	aas    
  40c5ee:	call   0x6f8f:0x4946e681
  40c5f5:	mov    edi,0x2d23a6f1
  40c5fa:	xchg   edi,eax
  40c5fb:	gs sub al,0x61
  40c5fe:	dec    ebx
  40c5ff:	jmp    0xb3cc5c7
  40c604:	es out dx,eax
  40c606:	push   ecx
  40c607:	int3   
  40c608:	mov    ds:0xb16c52b4,al
  40c60d:	data16 out 0xb,al
  40c610:	adc    BYTE PTR [edi+0x50c98ab7],bl
  40c616:	shr    ecx,1
  40c618:	push   eax
  40c619:	push   esi
  40c61a:	push   es
  40c61b:	mov    ebp,0x4931787b
  40c620:	mov    ecx,0xa60fc0be
  40c625:	in     al,0x32
  40c627:	cld    
  40c628:	mov    WORD PTR [ecx-0x50aed86d],es
  40c62e:	mov    dl,0x5b
  40c630:	gs (bad) 
  40c633:	sbb    BYTE PTR [eax+0x25280561],al
  40c639:	fst    DWORD PTR [ecx+ebp*8]
  40c63c:	(bad)  
  40c63d:	pop    edi
  40c63e:	lock (bad) 
  40c640:	cmp    edx,edi
  40c642:	ins    BYTE PTR es:[edi],dx
  40c643:	(bad)  
  40c644:	and    edx,DWORD PTR ds:0x6fbbf36c
  40c64a:	pop    eax
  40c64b:	jnp    0x40c6b2
  40c64d:	and    edi,esp
  40c64f:	rol    dh,0x70
  40c652:	mov    ecx,0xd1e27cf4
  40c657:	dec    esp
  40c658:	xor    DWORD PTR [edi],edx
  40c65a:	outs   dx,BYTE PTR ds:[esi]
  40c65b:	jb     0x40c5f4
  40c65d:	clc    
  40c65e:	sub    DWORD PTR [eax+0x18e5b029],ebp
  40c664:	pusha  
  40c665:	pop    ecx
  40c666:	out    dx,al
  40c667:	push   esi
  40c668:	ss xchg ebp,eax
  40c66a:	arpl   WORD PTR [esi],si
  40c66c:	mov    al,BYTE PTR [esi]
  40c66e:	xor    ch,dl
  40c670:	adc    eax,0x94e4f462
  40c675:	xor    esp,DWORD PTR [edi]
  40c677:	imul   ebp,DWORD PTR [ecx-0x4a114f8e],0xd801d8f4
  40c681:	mov    WORD PTR [eax-0x908d4c],?
  40c687:	mov    al,ds:0x6493cf36
  40c68c:	cmp    DWORD PTR [edi+0x5f9a6594],eax
  40c692:	sti    
  40c693:	jle    0x40c66e
  40c695:	outs   dx,BYTE PTR ds:[esi]
  40c696:	pop    ds
  40c697:	fldenv [eax]
  40c699:	cmp    ebp,esp
  40c69b:	fdiv   DWORD PTR [esi+esi*4+0xa]
  40c69f:	pop    edi
  40c6a0:	cld    
  40c6a1:	pusha  
  40c6a2:	xor    esi,DWORD PTR [eax-0x5c19a191]
  40c6a8:	mov    ds:0x45525b4b,al
  40c6ad:	mov    esi,0xb5f5f50f
  40c6b2:	dec    edi
  40c6b3:	xor    DWORD PTR [edi+ebx*1],ecx
  40c6b6:	mov    al,0x72
  40c6b8:	cli    
  40c6b9:	loop   0x40c733
  40c6bb:	inc    eax
  40c6bc:	xor    BYTE PTR [ebp-0x4e],al
  40c6bf:	int3   
  40c6c0:	add    dh,BYTE PTR [esp+edx*2]
  40c6c3:	add    dl,BYTE PTR [ecx]
  40c6c5:	jmp    0x40c693
  40c6c7:	push   ds
  40c6c8:	ins    DWORD PTR es:[edi],dx
  40c6c9:	cmp    DWORD PTR [ecx+0x20],edx
  40c6cc:	jmp    DWORD PTR [ebp-0x209e0971]
  40c6d2:	fistp  WORD PTR [esi+0x1b]
  40c6d5:	retf   
  40c6d6:	xor    eax,0x1e974918
  40c6db:	rcl    DWORD PTR [esi-0x2a],1
  40c6de:	imul   esp,DWORD PTR [edi+0xfe12f8f],0xffffffb9
  40c6e5:	inc    edx
  40c6e6:	push   esi
  40c6e7:	xor    esp,DWORD PTR [eax]
  40c6e9:	pop    edi
  40c6ea:	and    ebx,edx
  40c6ec:	bound  esi,QWORD PTR [edi-0xef36ca4]
  40c6f2:	out    dx,al
  40c6f3:	mov    ch,0x8f
  40c6f5:	mov    ds:0x7f483fc5,eax
  40c6fa:	adc    BYTE PTR [esi],cl
  40c6fc:	in     al,0xcd
  40c6fe:	pop    esi
  40c6ff:	mov    DWORD PTR [esi+0x72],ebx
  40c702:	xor    dh,BYTE PTR [eax+edx*4]
  40c705:	clc    
  40c706:	(bad)  
  40c707:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c709:	test   al,0x6a
  40c70b:	cwde   
  40c70c:	xlat   BYTE PTR ds:[ebx]
  40c70d:	mov    esp,0xfdf3c83b
  40c712:	out    dx,eax
  40c713:	sbb    al,BYTE PTR [ebp-0x1b7b41aa]
  40c719:	adc    ah,cl
  40c71b:	aas    
  40c71c:	mov    cl,0x6a
  40c71e:	mov    bl,0x35
  40c720:	out    0x2,al
  40c722:	pop    ebx
  40c723:	cmp    al,0x3c
  40c725:	retf   0xf543
  40c728:	and    ebp,DWORD PTR [ecx]
  40c72a:	dec    edx
  40c72b:	add    dl,BYTE PTR fs:[edi+0x11]
  40c72f:	out    dx,al
  40c730:	adc    BYTE PTR [edx+ebp*2+0x6e33d9fb],al
  40c737:	add    ah,al
  40c739:	and    DWORD PTR [ecx-0x3b3a81c0],esp
  40c73f:	fnstenv [edi+0x76f52dc5]
  40c745:	in     eax,0x3d
  40c747:	jle    0x40c756
  40c749:	jmp    0x8a76:0xe048feb7
  40c750:	inc    ebx
  40c751:	retf   0x22d4
  40c754:	xchg   DWORD PTR [eax-0x5c],esi
  40c757:	add    dh,BYTE PTR [esi+eiz*4-0x3da7c225]
  40c75e:	cld    
  40c75f:	dec    esp
  40c760:	xor    eax,0x4923b025
  40c765:	mov    ah,0x9a
  40c767:	cld    
  40c768:	cmp    edx,DWORD PTR [edi+eiz*2]
  40c76b:	sahf   
  40c76c:	aam    0xb8
  40c76e:	lds    ebx,FWORD PTR [edi]
  40c770:	inc    ebx
  40c771:	popf   
  40c772:	lgs    esp,FWORD PTR [eax+0x72144f07]
  40c779:	xor    al,0xbc
  40c77b:	pop    edx
  40c77c:	cmp    al,0x4f
  40c77e:	lds    edi,FWORD PTR [eax+0x5f459b11]
  40c784:	xchg   edx,eax
  40c785:	test   BYTE PTR [edx+0x1a],bh
  40c788:	push   edx
  40c789:	sbb    al,0x5f
  40c78b:	and    edx,DWORD PTR [edx-0xc]
  40c78e:	or     ecx,DWORD PTR [ebp-0x3e]
  40c791:	and    DWORD PTR [ebx],eax
  40c793:	jmp    0xeb286181
  40c798:	in     eax,dx
  40c799:	std    
  40c79a:	cmp    ch,BYTE PTR [eax+0x9]
  40c79d:	jo     0x40c784
  40c79f:	test   eax,0x988ad482
  40c7a4:	stos   DWORD PTR es:[edi],eax
  40c7a5:	cwde   
  40c7a6:	xchg   esp,eax
  40c7a7:	mov    bl,0x53
  40c7a9:	xchg   ecx,eax
  40c7aa:	push   es
  40c7ab:	pop    edi
  40c7ac:	jnp    0x40c812
  40c7ae:	retf   
  40c7af:	repnz div BYTE PTR [edx+0x1a]
  40c7b3:	lods   al,BYTE PTR ds:[esi]
  40c7b4:	pop    es
  40c7b5:	mul    DWORD PTR [ebx-0x55]
  40c7b8:	in     al,0xf2
  40c7ba:	fld    TBYTE PTR [eax+0x2a1f77c8]
  40c7c0:	jno    0x40c7e1
  40c7c2:	popa   
  40c7c3:	ins    BYTE PTR es:[edi],dx
  40c7c4:	lea    esp,ss:[ebp-0x4d9504be]
  40c7cb:	scas   al,BYTE PTR es:[edi]
  40c7cc:	ja     0x40c828
  40c7ce:	sahf   
  40c7cf:	out    0x59,eax
  40c7d1:	daa    
  40c7d2:	mov    ebp,0x53f39eba
  40c7d7:	cdq    
  40c7d8:	(bad)  
  40c7d9:	lods   al,BYTE PTR ds:[esi]
  40c7da:	sub    DWORD PTR [ebx],ebx
  40c7dc:	push   esi
  40c7dd:	push   ds
  40c7de:	adc    DWORD PTR [edi],0xffffff97
  40c7e1:	in     al,dx
  40c7e2:	jnp    0x40c77a
  40c7e4:	or     al,0x17
  40c7e6:	outs   dx,DWORD PTR ds:[esi]
  40c7e7:	ret    
  40c7e8:	aam    0x12
  40c7ea:	mul    DWORD PTR [edi+0x29]
  40c7ed:	pop    ecx
  40c7ee:	stos   DWORD PTR es:[edi],eax
  40c7ef:	lds    edi,FWORD PTR [eax+0x49]
  40c7f2:	push   esp
  40c7f3:	aad    0x26
  40c7f5:	cmc    
  40c7f6:	push   cs
  40c7f7:	pop    esp
  40c7f8:	mov    bl,0x67
  40c7fa:	in     al,dx
  40c7fb:	or     dl,BYTE PTR [edi+eiz*4]
  40c7fe:	add    al,0x8c
  40c800:	ins    BYTE PTR es:[edi],dx
  40c801:	(bad)  
  40c802:	icebp  
  40c803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c804:	fs (bad) 
  40c806:	iret   
  40c807:	outs   dx,DWORD PTR ds:[esi]
  40c808:	ins    DWORD PTR es:[edi],dx
  40c809:	sub    eax,0x8f3e6f66
  40c80e:	imul   esi,DWORD PTR [ebx+0x77fdb10d],0xa3dac28e
  40c818:	mov    bl,0xda
  40c81a:	leave  
  40c81b:	xchg   ebx,eax
  40c81c:	and    BYTE PTR [edi],bh
  40c81e:	pusha  
  40c81f:	xchg   esi,eax
  40c820:	imul   BYTE PTR [esp+eiz*8-0x663c5de4]
  40c827:	or     edx,ebx
  40c829:	mov    ch,0x9
  40c82b:	push   esp
  40c82c:	hlt    
  40c82d:	shl    BYTE PTR [edx-0x31],0xb4
  40c831:	lds    esi,FWORD PTR [ecx-0x236cfe9]
  40c837:	xchg   edi,eax
  40c838:	mov    DWORD PTR [ebx-0x3147968c],edi
  40c83e:	pop    ebx
  40c83f:	stc    
  40c840:	dec    eax
  40c841:	fucomi st,st(7)
  40c843:	mov    ss,WORD PTR es:[edx-0x4e883b2f]
  40c84a:	in     eax,dx
  40c84b:	mov    al,0x77
  40c84d:	add    bh,BYTE PTR [edx-0x55]
  40c850:	xchg   ecx,eax
  40c851:	shl    BYTE PTR [esi+0x6a],cl
  40c854:	dec    edi
  40c855:	mov    ebx,ebx
  40c857:	xor    al,BYTE PTR [edx+0x56733881]
  40c85d:	idiv   DWORD PTR [esi+ecx*1-0x62]
  40c861:	shr    DWORD PTR [ebx+ebp*4+0x36cf75b9],0xfd
  40c869:	js     0x40c8d5
  40c86b:	stc    
  40c86c:	in     al,dx
  40c86d:	std    
  40c86e:	jne    0x40c8b4
  40c870:	popa   
  40c871:	or     eax,ebp
  40c873:	mov    al,ds:0x680714e2
  40c878:	xchg   ebp,eax
  40c879:	push   0x1bd8aeba
  40c87e:	jge    0x40c8d8
  40c880:	sbb    al,0xd5
  40c882:	in     eax,dx
  40c883:	retf   
  40c884:	(bad)  
  40c885:	(bad)  
  40c886:	mov    dh,0x14
  40c888:	sbb    al,0x79
  40c88a:	(bad)  
  40c88b:	scas   al,BYTE PTR es:[edi]
  40c88c:	arpl   WORD PTR [edx],dx
  40c88e:	fs das 
  40c890:	add    eax,0x1a7c7c52
  40c895:	enter  0x7dcc,0xdd
  40c899:	push   ebp
  40c89a:	retf   
  40c89b:	int    0xb2
  40c89d:	push   cs
  40c89e:	int3   
  40c89f:	and    al,0x64
  40c8a1:	xchg   ecx,eax
  40c8a2:	repz fwait
  40c8a4:	std    
  40c8a5:	out    0x24,al
  40c8a7:	xchg   edi,eax
  40c8a8:	mov    ebx,0x9d97f052
  40c8ad:	scas   eax,DWORD PTR es:[edi]
  40c8ae:	or     DWORD PTR [esi],0x9c8148c5
  40c8b4:	daa    
  40c8b5:	and    eax,0xa8037bf0
  40c8ba:	mov    dl,BYTE PTR [ebx]
  40c8bc:	sbb    dl,BYTE PTR ds:[eax+0x1b7ed9ff]
  40c8c3:	mov    ds:0xcf1a65f4,eax
  40c8c8:	adc    esp,edi
  40c8ca:	jo     0x40c8bd
  40c8cc:	cmp    edi,esp
  40c8ce:	dec    edi
  40c8cf:	sbb    edi,DWORD PTR [esi]
  40c8d1:	loope  0x40c92b
  40c8d3:	in     eax,dx
  40c8d4:	xor    ecx,DWORD PTR [edi+0x56b63b19]
  40c8da:	call   DWORD PTR [eax+0x18ed917e]
  40c8e0:	fiadd  WORD PTR [edi]
  40c8e2:	fidiv  DWORD PTR [esi-0x6617ce05]
  40c8e8:	je     0x40c910
  40c8ea:	das    
  40c8eb:	push   0x30
  40c8ed:	retf   0xdc49
  40c8f0:	ror    eax,1
  40c8f2:	sbb    esp,esi
  40c8f4:	test   BYTE PTR [edx-0x1a],0x94
  40c8f8:	loope  0x40c95f
  40c8fa:	and    al,0xb8
  40c8fc:	sbb    DWORD PTR [esi+eax*1],0xdd5fefac
  40c903:	ins    BYTE PTR es:[edi],dx
  40c904:	(bad)  
  40c905:	add    al,0x2c
  40c907:	dec    ebx
  40c908:	jmp    0xb225:0xdcd54f0f
  40c90f:	mov    WORD PTR [esi+0x834df3f],?
  40c915:	call   0xa8e:0xf2cd4fbf
  40c91c:	enter  0x8fce,0x26
  40c920:	sub    BYTE PTR [eax],dh
  40c922:	outs   dx,BYTE PTR ds:[esi]
  40c923:	shl    BYTE PTR [edx-0x35],cl
  40c926:	hlt    
  40c927:	pause  
  40c929:	adc    eax,0x807f16af
  40c92e:	stc    
  40c92f:	push   esp
  40c930:	sub    esp,DWORD PTR [bp+0x609a]
  40c935:	ins    DWORD PTR es:[edi],dx
  40c936:	int3   
  40c937:	test   eax,0xa926910d
  40c93c:	jmp    0xd768ada1
  40c941:	call   0x90fd:0x8898b19f
  40c948:	inc    edx
  40c949:	ds push 0xa42cfe11
  40c94f:	mov    eax,0x5a001de6
  40c954:	adc    eax,0xe8d651c8
  40c959:	(bad)  
  40c95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c95b:	xor    al,0x3f
  40c95d:	xchg   edi,eax
  40c95e:	les    esi,FWORD PTR ds:0x7603f850
  40c964:	mov    edx,0xc48bca4
  40c969:	mov    gs,WORD PTR [edx+esi*1]
  40c96c:	dec    edx
  40c96d:	outs   dx,DWORD PTR ds:[esi]
  40c96e:	(bad)  
  40c96f:	fnsave [esi+ecx*4-0x6d]
  40c973:	ret    0xffa5
  40c976:	xchg   dl,ch
  40c978:	add    DWORD PTR [edi],ecx
  40c97a:	sahf   
  40c97b:	xchg   edi,eax
  40c97c:	data16 int 0x59
  40c97f:	mov    esp,0xbad7f0bd
  40c984:	clc    
  40c985:	xor    eax,0x3bf3a3de
  40c98a:	add    DWORD PTR [ecx+0xe],ebx
  40c98d:	adc    al,dl
  40c98f:	mov    edi,0x5fd652da
  40c994:	and    BYTE PTR [eax+0x28],0xe0
  40c998:	adc    DWORD PTR [edi+edx*8],esi
  40c99b:	cdq    
  40c99c:	stos   DWORD PTR es:[edi],eax
  40c99d:	test   al,0xb4
  40c99f:	push   edi
  40c9a0:	pop    edx
  40c9a1:	pop    eax
  40c9a2:	and    edi,ebx
  40c9a4:	pop    edx
  40c9a5:	jp     0x40ca23
  40c9a7:	push   es
  40c9a8:	aas    
  40c9a9:	cmp    ecx,DWORD PTR [esi+esi*4-0x591c0d9f]
  40c9b0:	bound  edi,QWORD PTR [edx+0x21b68111]
  40c9b6:	mov    ebp,0xb8062a1
  40c9bb:	mov    ss,edi
  40c9bd:	fdivr  QWORD PTR [ecx-0x2b]
  40c9c0:	adc    al,0xc4
  40c9c2:	fs mov ebp,0xc7352f2d
  40c9c8:	sbb    al,0x4a
  40c9ca:	sbb    BYTE PTR [ebx+0x76],al
  40c9cd:	stos   BYTE PTR es:[edi],al
  40c9ce:	jge    0x40ca1b
  40c9d0:	or     ch,dl
  40c9d2:	push   edi
  40c9d3:	ins    BYTE PTR es:[edi],dx
  40c9d4:	pop    ebp
  40c9d5:	loope  0x40c991
  40c9d7:	xchg   esi,eax
  40c9d8:	dec    esp
  40c9d9:	sbb    DWORD PTR [edx+0xd699b47],eax
  40c9df:	pushf  
  40c9e0:	sub    ah,BYTE PTR [eax+0x10]
  40c9e3:	add    dl,0x8a
  40c9e6:	lods   al,BYTE PTR ds:[esi]
  40c9e7:	xchg   ecx,eax
  40c9e8:	dec    ebp
  40c9e9:	and    al,0xf0
  40c9eb:	(bad)  
  40c9ee:	fwait
  40c9ef:	pop    ds
  40c9f0:	jmp    0xdb3a6718
  40c9f5:	std    
  40c9f6:	in     eax,0xc8
  40c9f8:	jbe    0x40ca6c
  40c9fa:	xchg   ebx,eax
  40c9fb:	sahf   
  40c9fc:	sbb    al,0xec
  40c9fe:	or     al,0x8c
  40ca00:	push   edx
  40ca01:	fs mov edx,0x2ada9582
  40ca07:	ret    0x7a2e
  40ca0a:	call   0x82a9:0x73374cd6
  40ca11:	popf   
  40ca12:	aas    
  40ca13:	and    DWORD PTR cs:[edx+0x260200ca],esp
  40ca1a:	push   esi
  40ca1b:	add    eax,0x842e4403
  40ca20:	enter  0xf4e2,0xef
  40ca24:	xchg   edx,eax
  40ca25:	or     ebx,edx
  40ca27:	jl     0x40c9b3
  40ca29:	dec    ebx
  40ca2a:	ret    
  40ca2b:	repz and BYTE PTR [ecx+0x6c],ch
  40ca2f:	or     al,0x74
  40ca31:	out    0xb,eax
  40ca33:	imul   DWORD PTR [ebx]
  40ca35:	push   ss
  40ca36:	cmp    eax,0x66b66946
  40ca3b:	(bad)
  40ca40:	clc    
  40ca41:	shl    bh,1
  40ca43:	mov    al,0x29
  40ca45:	inc    esi
  40ca46:	imul   ebp,DWORD PTR [eax+ebx*1+0x3e],0xffffff9d
  40ca4b:	call   0x9f2:0x5b8ee287
  40ca52:	das    
  40ca53:	jp     0x40cab6
  40ca55:	or     eax,0x58f7c8ed
  40ca5a:	xlat   BYTE PTR ds:[ebx]
  40ca5b:	sbb    DWORD PTR [edi+0x2d],esi
  40ca5e:	mov    eax,ebx
  40ca60:	xchg   edi,eax
  40ca61:	inc    edi
  40ca62:	ja     0x40ca21
  40ca64:	jg     0x40ca61
  40ca66:	jns    0x40ca68
  40ca68:	push   es
  40ca69:	fwait
  40ca6a:	test   al,bl
  40ca6c:	outs   dx,DWORD PTR ds:[esi]
  40ca6d:	fisub  DWORD PTR [esi]
  40ca6f:	cmp    edi,DWORD PTR [eax+0x47eb276f]
  40ca75:	jl     0x40ca2a
  40ca77:	aaa    
  40ca78:	enter  0x229b,0xe8
  40ca7c:	in     al,0xa4
  40ca7e:	jecxz  0x40ca0c
  40ca80:	nop
  40ca81:	mov    BYTE PTR [ecx-0x2a],dh
  40ca84:	xchg   esi,eax
  40ca85:	add    eax,0xb46dc623
  40ca8a:	hlt    
  40ca8b:	addr16 pop ebp
  40ca8d:	adc    ebp,0x3
  40ca90:	jne    0x40cb10
  40ca92:	hlt    
  40ca93:	push   edx
  40ca94:	jmp    0x6c22:0xdae9c6d7
  40ca9b:	push   eax
  40ca9c:	fist   WORD PTR [ebx]
  40ca9e:	cmc    
  40ca9f:	repnz mov cl,0xf1
  40caa2:	inc    esi
  40caa3:	jecxz  0x40caf1
  40caa5:	xchg   edi,eax
  40caa6:	inc    esp
  40caa7:	xor    DWORD PTR [eax],0x1fa88fc9
  40caad:	in     eax,dx
  40caae:	add    DWORD PTR [eax],ebx
  40cab0:	mov    eax,DWORD PTR [ebp-0x4]
  40cab3:	mov    edi,DWORD PTR [ebp-0x8]
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0xce8835e2,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40cdb9
  40cde1:	out    dx,al
  40cde2:	adc    DWORD PTR [ebx+0x1618de8d],esi
  40cde8:	cs jne 0x40ce2d
  40cdeb:	les    ecx,FWORD PTR [esi]
  40cded:	jnp    0x40cd73
  40cdef:	jge    0x40cd8f
  40cdf1:	addr16 popa 
  40cdf3:	ret    
  40cdf4:	test   eax,0x270ce5d5
  40cdf9:	cli    
  40cdfa:	inc    ebp
  40cdfb:	pop    ebx
  40cdfc:	shl    BYTE PTR [eax+0x3b0f422],1
  40ce02:	inc    ebp
  40ce03:	loop   0x40cdc3
  40ce05:	imul   ebx,DWORD PTR [ebx-0x1c],0x7c9cb1a8
  40ce0c:	fisttp QWORD PTR ds:0xefb2f6f
  40ce12:	clc    
  40ce13:	xlat   BYTE PTR ds:[ebx]
  40ce14:	repz fs mov eax,0xdea2c5bf
  40ce1b:	push   ecx
  40ce1c:	jnp    0x40ce74
  40ce1e:	rcr    BYTE PTR [ebp-0x4cdcbd17],cl
  40ce24:	jp     0x40cdf4
  40ce26:	jle    0x40cdcd
  40ce28:	cmp    al,0xba
  40ce2a:	idiv   DWORD PTR ds:0x4aa9ef8
  40ce30:	jne    0x40ce89
  40ce32:	aas    
  40ce33:	sar    BYTE PTR [edx+0x6f],cl
  40ce36:	scas   eax,DWORD PTR es:[edi]
  40ce37:	fmul   QWORD PTR [ebx]
  40ce39:	mov    ch,0xa
  40ce3b:	xor    cl,BYTE PTR [eax+ebx*4]
  40ce3e:	inc    esi
  40ce3f:	js     0x40cdc7
  40ce41:	jae    0x40ce63
  40ce43:	outs   dx,BYTE PTR ds:[esi]
  40ce44:	sti    
  40ce45:	enter  0x866f,0xd1
  40ce49:	mov    bh,0x82
  40ce4b:	mov    esi,DWORD PTR [esi]
  40ce4d:	mov    ebp,0x44ab1d7a
  40ce52:	call   0xb062ed9
  40ce57:	rol    DWORD PTR [ebx+0x50],cl
  40ce5a:	je     0x40ce66
  40ce5c:	pop    esp
  40ce5d:	adc    DWORD PTR [edi+0x67dd5ab0],ebp
  40ce63:	(bad)  
  40ce64:	jo     0x40ceb2
  40ce66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce67:	out    0x7d,eax
  40ce69:	pop    eax
  40ce6a:	mov    cl,0x86
  40ce6c:	fcom   QWORD PTR [ebp+0x440a304d]
  40ce72:	and    eax,0xdb55f055
  40ce77:	(bad)  
  40ce78:	ror    DWORD PTR [eax-0x56],0xdb
  40ce7c:	out    0x41,eax
  40ce7e:	xor    eax,0xc36cde75
  40ce83:	adc    eax,0x5599cb58
  40ce88:	inc    esp
  40ce89:	call   0x2547:0x2563ee5e
  40ce90:	push   esi
  40ce91:	mov    bh,0xd
  40ce93:	adc    eax,0xde2d1f55
  40ce98:	aas    
  40ce99:	out    0x33,al
  40ce9b:	push   ebx
  40ce9c:	ror    BYTE PTR [ebp+0x6b896383],0xa4
  40cea3:	jle    0x40ce8a
  40cea5:	and    dh,BYTE PTR [esi-0x27]
  40cea8:	or     eax,DWORD PTR [edi+esi*4+0x54]
  40ceac:	push   edx
  40cead:	mov    eax,ds:0xe16de889
  40ceb2:	mov    DWORD PTR [edi+0x24],0x2819bbf3
  40ceb9:	fisttp QWORD PTR [edx]
  40cebb:	lods   eax,DWORD PTR ds:[esi]
  40cebc:	(bad)  
  40cebd:	or     BYTE PTR [ebp+0x37f11943],cl
  40cec3:	std    
  40cec4:	(bad)  
  40cec5:	and    BYTE PTR [ebp+edi*8+0x16],ch
  40cec9:	rol    edi,cl
  40cecb:	mov    eax,0x47d523fe
  40ced0:	outs   dx,DWORD PTR ds:[esi]
  40ced1:	int    0xc0
  40ced3:	mov    eax,ds:0x7bd300a7
  40ced8:	mul    DWORD PTR [ebx+0x49926416]
  40cede:	lock outs dx,DWORD PTR ds:[esi]
  40cee0:	pusha  
  40cee1:	xor    al,0xf5
  40cee3:	dec    ecx
  40cee4:	lods   eax,DWORD PTR ds:[esi]
  40cee5:	mov    ebx,0x78ba4651
  40ceea:	test   al,0xcf
  40ceec:	pop    edx
  40ceed:	stos   DWORD PTR es:[di],eax
  40ceef:	stos   DWORD PTR es:[edi],eax
  40cef0:	push   ecx
  40cef1:	add    eax,0x69fcb942
  40cef6:	push   0x818b80f6
  40cefb:	adc    ecx,edi
  40cefd:	das    
  40cefe:	scas   al,BYTE PTR es:[edi]
  40ceff:	aad    0x84
  40cf01:	cmp    cl,BYTE PTR [esi]
  40cf03:	pop    esi
  40cf04:	sbb    esp,eax
  40cf06:	mov    dh,0xab
  40cf08:	ret    0x170e
  40cf0b:	rcl    BYTE PTR [ebx-0x5],cl
  40cf0e:	out    dx,al
  40cf0f:	mov    fs,WORD PTR [edx-0x2a]
  40cf12:	test   eax,0xc1c91afd
  40cf17:	jmp    0x40cecb
  40cf19:	leave  
  40cf1a:	sub    eax,0xc85aa51d
  40cf1f:	push   0xffffffa1
  40cf21:	loop   0x40cf4c
  40cf23:	addr16 mov ch,0x87
  40cf26:	adc    al,0x81
  40cf28:	call   0x806a:0x7462d59
  40cf2f:	stos   DWORD PTR es:[edi],eax
  40cf30:	push   esi
  40cf31:	out    0xbe,eax
  40cf33:	add    BYTE PTR [ecx+eax*8],0x31
  40cf37:	icebp  
  40cf38:	shl    DWORD PTR [eax+0x4cf4cce4],cl
  40cf3e:	jae    0x40cf89
  40cf40:	or     cl,al
  40cf42:	jo     0x40ceda
  40cf44:	outs   dx,BYTE PTR ds:[esi]
  40cf45:	arpl   WORD PTR [ecx-0x64],bp
  40cf48:	repnz (bad) 
  40cf4a:	dec    ecx
  40cf4b:	add    DWORD PTR [ebx],edi
  40cf4d:	pushf  
  40cf4e:	shl    DWORD PTR [eax+0x28],1
  40cf51:	xchg   ecx,eax
  40cf52:	test   BYTE PTR [edi],bl
  40cf54:	arpl   bp,si
  40cf56:	in     al,0x5f
  40cf58:	lea    esi,[esi+0x52cc246f]
  40cf5e:	in     al,0x57
  40cf60:	lods   eax,DWORD PTR ds:[esi]
  40cf61:	jae    0x40cf91
  40cf63:	int    0xde
  40cf65:	push   edi
  40cf66:	rcr    DWORD PTR [ebx+ebp*4-0x210c15a4],1
  40cf6d:	xchg   BYTE PTR [eax+0x37],al
  40cf70:	inc    edi
  40cf71:	pop    ecx
  40cf72:	test   eax,0xaad310c9
  40cf78:	pop    ss
  40cf79:	in     al,dx
  40cf7a:	(bad)  
  40cf7b:	fild   WORD PTR [edx-0x7d]
  40cf7e:	gs push 0xffffffab
  40cf81:	(bad)  
  40cf83:	mov    ah,0xc5
  40cf85:	retf   0xb71
  40cf88:	pop    esp
  40cf89:	call   0xf6ec:0x9787ef9a
  40cf90:	mov    ebx,0x6686b088
  40cf95:	push   cs
  40cf96:	adc    bh,dl
  40cf98:	icebp  
  40cf99:	call   0xd86e:0x9b8cc693
  40cfa0:	mov    cl,0x8
  40cfa2:	repz dec esp
  40cfa4:	outs   dx,BYTE PTR ds:[esi]
  40cfa5:	int    0xe3
  40cfa7:	mov    eax,ds:0xcf0257e3
  40cfac:	jo     0x40cfd1
  40cfae:	xchg   ecx,eax
  40cfaf:	push   eax
  40cfb0:	sar    BYTE PTR [eax],0x88
  40cfb3:	mov    edx,DWORD PTR [edi-0x836bd5a]
  40cfb9:	rcl    DWORD PTR [ecx-0x337a19db],1
  40cfbf:	pop    ss
  40cfc0:	push   ecx
  40cfc1:	(bad)  
  40cfc3:	xor    ecx,DWORD PTR [ecx]
  40cfc5:	mov    ds:0xa979e23e,al
  40cfca:	sahf   
  40cfcb:	out    0x8d,al
  40cfcd:	add    eax,0xdad8ed1
  40cfd2:	stc    
  40cfd3:	dec    edi
  40cfd4:	jne    0x40cfe0
  40cfd6:	daa    
  40cfd7:	call   DWORD PTR [eax+0x490b8bcc]
  40cfdd:	(bad)  [esi]
  40cfdf:	push   ss
  40cfe0:	push   ss
  40cfe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfe2:	hlt    
  40cfe3:	jne    0x40d000
  40cfe5:	adc    dl,BYTE PTR [esi]
  40cfe7:	adc    eax,0xe2ac4c30
  40cfec:	sbb    edi,DWORD PTR [ebx+0x538c57af]
  40cff2:	ss aam 0x45
  40cff5:	fmul   st,st(1)
  40cff7:	pop    ebx
  40cff8:	sub    al,0x64
  40cffa:	pop    ss
  40cffb:	inc    ebx
  40cffc:	push   eax
  40cffd:	dec    eax
  40cffe:	int3   
  40cfff:	cs clc 
  40d001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d002:	jns    0x40d01e
  40d004:	inc    esp
  40d005:	mov    ecx,0xa27fcf63
  40d00a:	cwde   
  40d00b:	push   esi
  40d00c:	dec    ecx
  40d00d:	retf   0x18e5
  40d010:	adc    dh,BYTE PTR [edi+0x46]
  40d013:	mov    DWORD PTR [ecx+0x5c],ebx
  40d016:	rol    BYTE PTR [ebx],0xbd
  40d019:	jnp    0x40d02d
  40d01b:	adc    WORD PTR [edx],sp
  40d01e:	stos   BYTE PTR es:[edi],al
  40d01f:	fisubr WORD PTR [eax+0x6d]
  40d022:	mov    esi,0x47eca6b9
  40d027:	daa    
  40d028:	(bad)  
  40d029:	pop    ebp
  40d02a:	inc    ebp
  40d02b:	jmp    0x40cffa
  40d02d:	push   edx
  40d02e:	icebp  
  40d02f:	xchg   edi,eax
  40d030:	bnd jb 0x40d03d
  40d033:	aas    
  40d034:	sub    eax,0x3f0d054a
  40d039:	mov    ch,0x76
  40d03b:	lods   eax,DWORD PTR ds:[esi]
  40d03c:	call   0x395e:0xc406d6f1
  40d043:	pop    eax
  40d044:	push   esi
  40d045:	ds inc esp
  40d047:	ja     0x40cff3
  40d049:	jns    0x40d02d
  40d04b:	mov    eax,ds:0x74b20838
  40d050:	dec    esi
  40d051:	stos   DWORD PTR es:[edi],eax
  40d052:	out    0x85,eax
  40d054:	pop    ebx
  40d055:	dec    ebp
  40d056:	xor    eax,0x630a8252
  40d05b:	enter  0xa72d,0x7a
  40d05f:	ret    0x73c0
  40d062:	xchg   bx,ax
  40d064:	mov    ah,0xae
  40d066:	xor    dh,BYTE PTR [ebx-0x3a]
  40d069:	lock inc esi
  40d06b:	outs   dx,BYTE PTR cs:[esi]
  40d06d:	clc    
  40d06e:	in     eax,0x39
  40d070:	ds das 
  40d072:	jmp    0x40d0e6
  40d074:	pop    esp
  40d075:	repz xchg ebx,eax
  40d077:	ja     0x40d00c
  40d079:	pop    edi
  40d07a:	nop
  40d07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d07c:	mov    ah,al
  40d07e:	ret    0x92b6
  40d081:	gs xchg ecx,eax
  40d083:	fnstcw WORD PTR [edi]
  40d085:	nop
  40d086:	dec    edi
  40d087:	fdivrp st(2),st
  40d089:	push   0x1b
  40d08b:	dec    edi
  40d08c:	inc    ecx
  40d08d:	inc    esp
  40d08e:	cmp    al,0xf3
  40d090:	and    BYTE PTR [ebx+edx*8-0x11e7d904],0x2e
  40d098:	mov    cl,0x6d
  40d09a:	shl    BYTE PTR [edx],1
  40d09c:	pop    esp
  40d09d:	aaa    
  40d09e:	mov    ebx,0xf64b684
  40d0a3:	ret    0x6961
  40d0a6:	fsub   QWORD PTR [ecx-0x7f4bb39e]
  40d0ac:	mov    ecx,0x1ba630e3
  40d0b1:	add    cl,0xa3
  40d0b4:	xchg   edi,eax
  40d0b5:	xor    dh,BYTE PTR [edi]
  40d0b7:	sub    al,0xed
  40d0b9:	ficom  WORD PTR cs:[ecx-0x26]
  40d0bd:	hlt    
  40d0be:	or     ecx,esp
  40d0c0:	(bad)  
  40d0c1:	iret   
  40d0c2:	out    dx,al
  40d0c3:	dec    ebx
  40d0c4:	xchg   esp,eax
  40d0c5:	xchg   edx,eax
  40d0c6:	data16 aad 0x32
  40d0c9:	cwde   
  40d0ca:	aam    0xce
  40d0cc:	pusha  
  40d0cd:	popa   
  40d0ce:	(bad)  
  40d0cf:	stc    
  40d0d0:	fwait
  40d0d1:	sbb    eax,0xa93e6f97
  40d0d6:	gs gs or dl,cl
  40d0da:	jno    0x40d11d
  40d0dc:	les    edi,FWORD PTR [ecx]
  40d0de:	lds    ebp,FWORD PTR [ebp-0x4ad9cdc8]
  40d0e4:	jne    0x40d0dc
  40d0e6:	inc    ebp
  40d0e7:	xchg   ebx,eax
  40d0e8:	cmc    
  40d0e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0ea:	pusha  
  40d0eb:	jmp    0x40d0ee
  40d0ed:	daa    
  40d0ee:	aas    
  40d0ef:	jmp    0x58cc:0x5f374e87
  40d0f6:	mov    eax,ds:0x5240a612
  40d0fb:	sbb    ebx,eax
  40d0fd:	mov    ecx,0x1f709d69
  40d102:	fimul  DWORD PTR [ebx+ebp*2]
  40d105:	popf   
  40d106:	nop
  40d107:	jmp    DWORD PTR [ebx+0x1c]
  40d10a:	pop    ds
  40d10b:	xchg   esi,eax
  40d10c:	push   ecx
  40d10d:	neg    DWORD PTR [ecx+eax*8+0x3fff0e3f]
  40d114:	sub    DWORD PTR [edx+0x14],0x34ede56b
  40d11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d11c:	retf   0x80a
  40d11f:	push   ebx
  40d120:	xlat   BYTE PTR ds:[ebx]
  40d121:	fmul   QWORD PTR [edx]
  40d123:	jle    0x40d0b5
  40d125:	in     al,0xf0
  40d127:	mov    esp,0x9a624a9a
  40d12c:	xchg   DWORD PTR [ebp-0x77aa806c],esi
  40d132:	mov    BYTE PTR [edx],ah
  40d134:	ficom  DWORD PTR [ecx+0x29f8fd44]
  40d13a:	ret    0x3584
  40d13d:	mov    eax,0xe82494f6
  40d142:	aad    0x43
  40d144:	sti    
  40d145:	dec    esp
  40d146:	sub    DWORD PTR [edx],ebx
  40d148:	sbb    al,0xa9
  40d14a:	shr    BYTE PTR [edi+0x7afda5f3],cl
  40d150:	dec    ecx
  40d151:	cli    
  40d152:	stos   BYTE PTR es:[edi],al
  40d153:	push   ebx
  40d154:	jge    0x40d1a8
  40d156:	mov    eax,ds:0x6d35cd1d
  40d15b:	dec    edi
  40d15c:	adc    edi,eax
  40d15e:	enter  0xc0c5,0x94
  40d162:	popf   
  40d163:	nop
  40d164:	test   eax,0x6cb7e204
  40d169:	outs   dx,BYTE PTR ds:[esi]
  40d16a:	adc    ah,BYTE PTR [edi-0x18]
  40d16d:	xchg   esi,eax
  40d16e:	pop    ss
  40d16f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d170:	scas   al,BYTE PTR es:[edi]
  40d171:	ss pop es
  40d173:	addr16 or esi,esp
  40d176:	daa    
  40d177:	cmp    DWORD PTR [eax+0x548acc6b],edx
  40d17d:	fcom   DWORD PTR [ebp+0x3f]
  40d180:	out    dx,eax
  40d181:	ss inc eax
  40d183:	pop    ss
  40d184:	aam    0x5e
  40d186:	pop    esi
  40d187:	xchg   esp,eax
  40d188:	int    0x1b
  40d18a:	adc    esi,DWORD PTR [ebx-0x4b]
  40d18d:	xor    eax,DWORD PTR [ecx+esi*2]
  40d190:	jecxz  0x40d14a
  40d192:	mov    ds:0xb79511f2,eax
  40d197:	sbb    ebx,edi
  40d199:	(bad)  
  40d19a:	js     0x40d140
  40d19c:	jo     0x40d1fd
  40d19e:	push   ds
  40d19f:	mov    al,BYTE PTR [ebx+0x69541ede]
  40d1a5:	and    dh,BYTE PTR [esi]
  40d1a7:	addr16 retf 
  40d1a9:	mov    ebp,ebx
  40d1ab:	push   0x47
  40d1ad:	and    esi,DWORD PTR [eax]
  40d1af:	bound  edx,QWORD PTR [edx-0x3250d56a]
  40d1b5:	mov    ecx,0x4defd29b
  40d1ba:	neg    BYTE PTR [ebx]
  40d1bc:	dec    ebx
  40d1bd:	add    al,0x1f
  40d1bf:	jo     0x40d16a
  40d1c1:	imul   BYTE PTR [ebp-0xf]
  40d1c4:	push   ebx
  40d1c5:	adc    ecx,esp
  40d1c7:	js     0x40d219
  40d1c9:	(bad)  
  40d1ca:	cmp    dh,BYTE PTR [ebx-0x7a74d114]
  40d1d0:	fmul   DWORD PTR [ebp+0x5c6e0ebb]
  40d1d6:	jns    0x40d22b
  40d1d8:	push   0xf
  40d1da:	ja     0x40d19e
  40d1dc:	outs   dx,DWORD PTR ds:[esi]
  40d1dd:	jno    0x40d193
  40d1df:	lds    esp,FWORD PTR [ebx+edi*2]
  40d1e2:	mov    ds:0xc6184498,eax
  40d1e7:	lds    eax,FWORD PTR [ebx+0xf]
  40d1ea:	les    ebx,FWORD PTR [eax]
  40d1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1ed:	mov    ah,0x56
  40d1ef:	sub    eax,0xd51fa306
  40d1f4:	sub    al,0x10
  40d1f6:	inc    edi
  40d1f7:	cmp    esi,ebx
  40d1f9:	mul    dl
  40d1fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1fc:	ins    BYTE PTR es:[edi],dx
  40d1fd:	mov    ds:0xdbe74c0b,eax
  40d202:	out    0x64,eax
  40d204:	hlt    
  40d205:	adc    eax,0x57924283
  40d20a:	arpl   WORD PTR [esi+eax*2],di
  40d20d:	sub    edi,ecx
  40d20f:	push   ss
  40d210:	pop    ebx
  40d211:	push   es
  40d212:	jae    0x40d1e4
  40d214:	jmp    0x66728082
  40d219:	sub    ah,BYTE PTR [ecx+ecx*4+0x3f]
  40d21d:	fs adc al,0xad
  40d220:	push   ebx
  40d221:	psrld  mm5,0x5a
  40d225:	fidiv  WORD PTR [ebp+0x718487af]
  40d22b:	popa   
  40d22c:	sbb    cl,BYTE PTR [esi-0x3]
  40d22f:	jnp    0x40d1bd
  40d231:	and    cl,al
  40d233:	inc    esp
  40d234:	aam    0x1f
  40d236:	mov    bh,0xdf
  40d238:	(bad)  
  40d239:	dec    ecx
  40d23a:	addr16 repnz cmp bl,dh
  40d23e:	push   esi
  40d23f:	pusha  
  40d240:	adc    ch,0xc
  40d243:	jne    0x40d27a
  40d245:	mov    al,BYTE PTR ds:0x2120e1a0
  40d24b:	outs   dx,DWORD PTR ds:[esi]
  40d24c:	pop    ss
  40d24d:	test   BYTE PTR [ecx-0x2b],ah
  40d250:	nop
  40d251:	and    BYTE PTR [esi-0xb26f27b],dh
  40d257:	stos   DWORD PTR es:[edi],eax
  40d258:	inc    ecx
  40d259:	ds cdq 
  40d25b:	mov    cl,0xad
  40d25d:	jns    0x40d20f
  40d25f:	jecxz  0x40d27f
  40d261:	sbb    al,0x7d
  40d263:	lods   eax,DWORD PTR ds:[esi]
  40d264:	outs   dx,BYTE PTR ds:[esi]
  40d265:	or     esi,DWORD PTR [ebx+0x7acbf419]
  40d26b:	push   edx
  40d26c:	push   ss
  40d26d:	repnz pop es
  40d26f:	and    dh,BYTE PTR [edi]
  40d271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d272:	mov    bl,0x5a
  40d274:	out    0xee,al
  40d276:	pop    DWORD PTR [edi]
  40d278:	ins    DWORD PTR es:[edi],dx
  40d279:	jo     0x40d259
  40d27b:	push   ecx
  40d27c:	pop    ebp
  40d27d:	add    bh,cl
  40d27f:	mov    esp,0xe6e5c0b9
  40d284:	push   esp
  40d285:	or     eax,0xfa94059e
  40d28a:	in     al,0xdb
  40d28c:	les    ebp,FWORD PTR [ecx+0x72]
  40d28f:	dec    ecx
  40d290:	sub    eax,DWORD PTR [ecx+0x5d61e01b]
  40d296:	shl    DWORD PTR [eax],1
  40d298:	inc    DWORD PTR [edx+ebp*4]
  40d29b:	pop    ebp
  40d29c:	in     eax,0xfe
  40d29e:	jmp    0xa3f47de1
  40d2a3:	xchg   ebp,eax
  40d2a4:	shr    BYTE PTR cs:[edi+0xdd4acc4],1
  40d2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2ac:	gs cs cld 
  40d2af:	out    0x5e,al
  40d2b1:	lock push ecx
  40d2b3:	lahf   
  40d2b4:	pop    es
  40d2b5:	cmp    al,0xcf
  40d2b7:	add    al,0x47
  40d2b9:	inc    edi
  40d2ba:	out    dx,al
  40d2bb:	inc    ecx
  40d2bc:	cmc    
  40d2bd:	cmp    eax,DWORD PTR [esi+0x35]
  40d2c0:	adc    DWORD PTR [ecx+0x5717159],edx
  40d2c6:	aaa    
  40d2c7:	int    0x5f
  40d2c9:	dec    edi
  40d2ca:	loop   0x40d31e
  40d2cc:	mov    al,0xf0
  40d2ce:	jmp    0x40d2a2
  40d2d0:	xlat   BYTE PTR ds:[ebx]
  40d2d1:	scas   al,BYTE PTR es:[edi]
  40d2d2:	or     BYTE PTR [ecx+0x7043be82],al
  40d2d8:	int    0xc0
  40d2da:	js     0x40d296
  40d2dc:	push   edi
  40d2dd:	loope  0x40d317
  40d2df:	(bad)  
  40d2e0:	sbb    eax,0x741a469f
  40d2e5:	scas   al,BYTE PTR es:[edi]
  40d2e6:	fcom   QWORD PTR [edx-0x1b24d9de]
  40d2ec:	mov    ebx,0x4a29c542
  40d2f1:	or     dl,BYTE PTR ds:0xeab2a2
  40d2f7:	stos   DWORD PTR es:[edi],eax
  40d2f8:	nop
  40d2f9:	jne    0x40d371
  40d2fb:	sti    
  40d2fc:	das    
  40d2fd:	pop    ecx
  40d2fe:	nop
  40d2ff:	mov    ecx,DWORD PTR [ebx]
  40d301:	nop
  40d302:	push   es
  40d303:	mov    ch,0x71
  40d305:	and    al,BYTE PTR [eax+esi*1]
  40d308:	xor    esp,ebp
  40d30a:	mov    edi,0x9c97f022
  40d30f:	xchg   edi,eax
  40d310:	mov    DWORD PTR [ecx+edx*2+0x79154811],esp
  40d317:	jno    0x40d33b
  40d319:	test   eax,0x9d132245
  40d31e:	rol    DWORD PTR [ebx+0x1c],1
  40d321:	jb     0x40d2e8
  40d323:	mov    ecx,0xf1965195
  40d328:	add    DWORD PTR [esi+0x1952eda8],ebp
  40d32e:	pop    eax
  40d32f:	pop    ds
  40d330:	dec    ecx
  40d331:	cs sub eax,0xe4748718
  40d337:	cmp    al,BYTE PTR [ebx-0xf]
  40d33a:	popa   
  40d33b:	fidiv  DWORD PTR [edi+0x7fd47230]
  40d341:	push   eax
  40d342:	bound  edi,QWORD PTR [ebx-0x7a]
  40d345:	(bad)  
  40d346:	mov    eax,ds:0xfb22d083
  40d34b:	jns    0x40d3c3
  40d34d:	test   eax,0x8aee1cd0
  40d352:	sub    BYTE PTR [ecx-0x3988a2ad],dh
  40d358:	je     0x40d380
  40d35a:	and    edi,DWORD PTR [esi-0x29]
  40d35d:	into   
  40d35e:	jge    0x40d335
  40d360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d361:	(bad)  
  40d363:	(bad)  
  40d365:	mov    cl,0xf3
  40d367:	ja     0x40d32c
  40d369:	and    DWORD PTR [ebx+eiz*1-0x1e49ef19],ebx
  40d370:	ds into 
  40d372:	mov    fs,WORD PTR [edx-0x2128abae]
  40d378:	push   eax
  40d379:	sbb    dh,bh
  40d37b:	pop    ecx
  40d37c:	into   
  40d37d:	xchg   ebp,eax
  40d37e:	sti    
  40d37f:	mov    esi,0x82a67611
  40d384:	fldenv [esi-0x6b]
  40d387:	pushf  
  40d388:	out    dx,eax
  40d389:	cdq    
  40d38a:	clc    
  40d38b:	addr16 pop edi
  40d38d:	sub    DWORD PTR [edx-0x46],ebp
  40d390:	mov    ecx,0xe7de109c
  40d395:	pop    DWORD PTR [eax]
  40d397:	mov    ebp,0x97c1a7d5
  40d39c:	test   DWORD PTR ds:0xe5ae1396,esp
  40d3a2:	xlat   BYTE PTR ds:[ebx]
  40d3a3:	icebp  
  40d3a4:	hlt    
  40d3a5:	sub    ecx,DWORD PTR [edi+esi*2-0x6b]
  40d3a9:	shr    DWORD PTR [edx],1
  40d3ab:	mov    bl,0xe5
  40d3ad:	scas   al,BYTE PTR es:[edi]
  40d3ae:	xor    al,0x7f
  40d3b0:	adc    al,0xb9
  40d3b2:	fs jb  0x40d361
  40d3b5:	adc    al,0x6
  40d3b7:	retf   0x24da
  40d3ba:	fwait
  40d3bb:	std    
  40d3bc:	lahf   
  40d3bd:	jmp    0xea3d:0x188c27f1
  40d3c4:	into   
  40d3c5:	jne    0x40d422
  40d3c7:	or     DWORD PTR [esi],edi
  40d3c9:	mov    ch,0x17
  40d3cb:	outs   dx,BYTE PTR ds:[esi]
  40d3cc:	or     eax,0x50819b03
  40d3d1:	and    cl,bl
  40d3d3:	inc    ecx
  40d3d4:	sbb    BYTE PTR [ecx+ebx*2+0x4ed14f66],0x40
  40d3dc:	xchg   ecx,eax
  40d3dd:	fsub   QWORD PTR [edi+esi*8-0x11]
  40d3e1:	jbe    0x40d416
  40d3e3:	scas   eax,DWORD PTR es:[edi]
  40d3e4:	fcomi  st,st(3)
  40d3e6:	scas   al,BYTE PTR es:[edi]
  40d3e7:	mov    edx,0xca74a968
  40d3ec:	mov    edx,0x80cb639a
  40d3f1:	out    0xcc,al
  40d3f3:	push   cs
  40d3f4:	in     eax,0x2a
  40d3f6:	add    al,0xf4
  40d3f8:	cmp    al,0xec
  40d3fa:	fstp   QWORD PTR [ebx-0x1e]
  40d3fd:	ss sar BYTE PTR es:[ecx+0x29],0xba
  40d403:	iret   
  40d404:	loopne 0x40d442
  40d406:	stc    
  40d407:	test   esi,edi
  40d409:	add    al,0x70
  40d40b:	repnz es xchg esi,eax
  40d40e:	add    al,0x29
  40d410:	xor    al,0x75
  40d412:	fs pop ecx
  40d414:	inc    ebp
  40d415:	stc    
  40d416:	shl    esp,0x2
  40d419:	repz sahf 
  40d41b:	dec    eax
  40d41c:	adc    BYTE PTR [ebp-0x7f],cl
  40d41f:	mov    esi,0x67d8daa2
  40d424:	jmp    0x40d430
  40d426:	add    esi,0x962ae67d
  40d42c:	and    edx,esp
  40d42e:	add    BYTE PTR [ecx],bh
  40d430:	daa    
  40d431:	sbb    al,BYTE PTR [esi+0x6b983546]
  40d437:	adc    ebx,DWORD PTR [ecx+0x13]
  40d43a:	ret    0x96c9
  40d43d:	mov    bh,0xce
  40d43f:	jnp    0x40d3d4
  40d441:	push   ebp
  40d442:	sti    
  40d443:	mov    eax,ds:0xcbc13ef6
  40d448:	push   ds
  40d449:	xor    ebp,DWORD PTR [esi]
  40d44b:	fcmovu st,st(2)
  40d44d:	pop    esi
  40d44e:	pop    ecx
  40d44f:	retf   
  40d450:	in     al,dx
  40d451:	loop   0x40d416
  40d453:	or     eax,0xec90f4d5
  40d458:	aam    0xed
  40d45a:	jnp    0x40d4c6
  40d45c:	dec    edx
  40d45d:	(bad)  
  40d45e:	push   esi
  40d45f:	cmp    eax,DWORD PTR [ebp-0x54]
  40d462:	sbb    DWORD PTR [ebx+0xb],esp
  40d465:	stos   DWORD PTR es:[edi],eax
  40d466:	inc    edi
  40d467:	mov    al,0xe0
  40d469:	(bad)  
  40d46a:	mov    esi,0x52b63d14
  40d46f:	dec    ebx
  40d470:	push   esi
  40d471:	pop    ds
  40d472:	inc    DWORD PTR es:[edx+eax*8]
  40d476:	add    bh,bl
  40d478:	ins    DWORD PTR es:[edi],dx
  40d479:	push   0x7dfdf89e
  40d47e:	and    bh,BYTE PTR [ebp+0x2fcd4955]
  40d484:	xchg   ebp,eax
  40d485:	and    al,0x54
  40d487:	scas   al,BYTE PTR es:[edi]
  40d488:	push   edi
  40d489:	dec    eax
  40d48a:	mov    edi,0x8888d61d
  40d48f:	daa    
  40d490:	int    0x9d
  40d492:	or     bl,BYTE PTR [eax+ebp*4-0x20]
  40d496:	cmp    eax,0xe9a56310
  40d49b:	add    eax,0x3a6da63c
  40d4a0:	ins    DWORD PTR es:[edi],dx
  40d4a1:	rcr    BYTE PTR [edi+0x53aeb0c5],0x85
  40d4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4a9:	ret    
  40d4aa:	jl     0x40d436
  40d4ac:	jl     0x40d4de
  40d4ae:	inc    edi
  40d4af:	lods   al,BYTE PTR ss:[esi]
  40d4b1:	pop    edx
  40d4b2:	or     al,0x95
  40d4b4:	mov    esi,0xe3133d03
  40d4b9:	xchg   esp,eax
  40d4ba:	into   
  40d4bb:	jmp    0x252ac796
  40d4c0:	pop    ebx
  40d4c1:	cmp    eax,0x89ff8038
  40d4c6:	jmp    0x8e6d:0x9597703a
  40d4cd:	ds aas 
  40d4cf:	cld    
  40d4d0:	inc    esi
  40d4d1:	mov    dl,0x58
  40d4d3:	xchg   ah,dh
  40d4d5:	(bad)  [ecx+0x1098a9bb]
  40d4db:	addr16 cmp al,0x70
  40d4de:	mov    al,ds:0x72a078cd
  40d4e3:	dec    eax
  40d4e4:	mov    ebx,0x2dbdf983
  40d4e9:	adc    al,0x75
  40d4eb:	jbe    0x40d531
  40d4ed:	pop    es
  40d4ee:	and    ebx,DWORD PTR [ebp-0x215bb2dd]
  40d4f4:	(bad)  
  40d4f5:	push   esp
  40d4f6:	test   al,0x80
  40d4f8:	inc    ecx
  40d4f9:	test   al,0x99
  40d4fb:	jmp    FWORD PTR [edx-0x61]
  40d4fe:	inc    ebx
  40d4ff:	dec    edx
  40d500:	fisttp QWORD PTR [edi+0x74372507]
  40d506:	inc    ebx
  40d507:	in     eax,0xc5
  40d509:	cdq    
  40d50a:	adc    eax,0x61abfd9a
  40d50f:	mov    ebp,0x4c037289
  40d514:	jno    0x40d516
  40d516:	popf   
  40d517:	xchg   ebp,eax
  40d518:	sub    ah,0x39
  40d51b:	shl    DWORD PTR ds:0x14baef08,0x64
  40d522:	adc    ah,BYTE PTR [ebx]
  40d524:	mov    ecx,0x1fb08020
  40d529:	xor    BYTE PTR [esi-0x50],bl
  40d52c:	mov    eax,0x9bd9dd1b
  40d531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d532:	aam    0x99
  40d534:	in     eax,0xb
  40d536:	clc    
  40d537:	adc    esp,ebp
  40d539:	mov    bh,BYTE PTR ds:0xfc4df343
  40d53f:	push   esi
  40d540:	mov    eax,ds:0xeb93566f
  40d545:	test   DWORD PTR [ecx-0x3e4a2de0],edi
  40d54b:	xor    al,BYTE PTR [esi-0x18]
  40d54e:	cmp    dh,BYTE PTR [ebp+0x6f3d6a57]
  40d554:	dec    edi
  40d555:	clc    
  40d556:	(bad)  
  40d558:	popa   
  40d559:	fs aam 0x6d
  40d55c:	xchg   esp,eax
  40d55d:	or     BYTE PTR [edi-0x14],dl
  40d560:	push   ecx
  40d561:	inc    ecx
  40d562:	sahf   
  40d563:	sub    DWORD PTR [edi-0x2fcc8d55],esp
  40d569:	cmp    BYTE PTR [edi+0x7a],cl
  40d56c:	push   ebx
  40d56d:	jnp    0x40d5e2
  40d56f:	lahf   
  40d570:	and    al,0x8a
  40d572:	mov    bl,0x75
  40d574:	gs xor eax,eax
  40d577:	sub    DWORD PTR [ecx],ecx
  40d579:	popf   
  40d57a:	pop    eax
  40d57b:	and    eax,0x62217582
  40d580:	add    al,0x99
  40d582:	repnz leave 
  40d584:	lods   eax,DWORD PTR ds:[esi]
  40d585:	repz retf 0x4ba2
  40d589:	jp     0x40d604
  40d58b:	sti    
  40d58c:	dec    edx
  40d58d:	and    esp,DWORD PTR [eax+0x1594e21c]
  40d593:	retf   0x2e25
  40d596:	stos   BYTE PTR es:[edi],al
  40d597:	ins    DWORD PTR es:[edi],dx
  40d598:	out    0xf5,eax
  40d59a:	pop    esi
  40d59b:	aad    0xae
  40d59d:	sub    ecx,DWORD PTR [eax-0x112007ef]
  40d5a3:	sbb    BYTE PTR [edi+eiz*4+0x5],0x90
  40d5a8:	je     0x40d5f8
  40d5aa:	jp     0x40d5c5
  40d5ac:	adc    DWORD PTR [edi+esi*1+0x6782dc6d],0xa7a4b12d
  40d5b7:	jge    0x40d638
  40d5b9:	adc    eax,0xd17fe480
  40d5be:	xchg   edx,eax
  40d5bf:	adc    eax,0xbb9ed676
  40d5c4:	jmp    0x40d56a
  40d5c6:	adc    ah,al
  40d5c8:	push   ecx
  40d5c9:	imul   ebx,DWORD PTR [ecx],0xc477fb85
  40d5cf:	xlat   BYTE PTR ds:[ebx]
  40d5d0:	mov    dl,0xcc
  40d5d2:	and    al,0xcb
  40d5d4:	retf   0xf86a
  40d5d7:	mov    esi,0xbb172537
  40d5dc:	inc    edx
  40d5dd:	in     al,dx
  40d5de:	lahf   
  40d5df:	ja     0x40d636
  40d5e1:	mov    DWORD PTR [edi],ecx
  40d5e3:	mov    bl,0x23
  40d5e5:	arpl   WORD PTR [ebx+ecx*8-0x42588446],bx
  40d5ec:	dec    esi
  40d5ed:	je     0x40d60c
  40d5ef:	adc    al,0xdc
  40d5f1:	and    esi,edi
  40d5f3:	dec    ebx
  40d5f4:	xchg   DWORD PTR [edi],eax
  40d5f6:	push   ss
  40d5f7:	(bad)  
  40d5f8:	sub    ah,dl
  40d5fa:	int3   
  40d5fb:	inc    edi
  40d5fc:	mov    ebx,0x17c0dfba
  40d601:	cs pusha 
  40d603:	nop
  40d604:	shr    DWORD PTR [edx-0x4326ddc],1
  40d60a:	push   ecx
  40d60b:	sbb    al,0x83
  40d60d:	in     eax,0x31
  40d60f:	enter  0xe30e,0x4a
  40d613:	je     0x40d5bf
  40d615:	iret   
  40d616:	cmp    ebx,DWORD PTR [esi-0x5e]
  40d619:	or     BYTE PTR [ecx-0x29b1da2c],bh
  40d61f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d620:	and    eax,0x282df5d3
  40d625:	das    
  40d626:	js     0x40d5c7
  40d628:	or     al,0x51
  40d62a:	imul   ebx,eax,0xd7221d10
  40d630:	adc    DWORD PTR [esi+0x37],edx
  40d633:	sub    dh,BYTE PTR [edi+eiz*8-0x68]
  40d637:	rcl    ebp,0x92
  40d63a:	hlt    
  40d63b:	ficomp WORD PTR [edi-0x6e]
  40d63e:	push   0xdebd4b72
  40d643:	loopne 0x40d5e6
  40d645:	retf   
  40d646:	loop   0x40d62c
  40d648:	pusha  
  40d649:	rcr    DWORD PTR [ebx-0x60],cl
  40d64c:	pop    esp
  40d64d:	pop    ebx
  40d64e:	xor    BYTE PTR [eax+0x7a858072],0xd5
  40d655:	push   esp
  40d656:	addr16 icebp 
  40d658:	inc    ecx
  40d659:	mov    DWORD PTR ds:0xa938a622,edi
  40d65f:	in     eax,0x49
  40d661:	pusha  
  40d662:	into   
  40d663:	pop    es
  40d664:	fpatan 
  40d666:	pop    ecx
  40d667:	jge    0x40d602
  40d669:	out    0xdd,eax
  40d66b:	xor    eax,0x3fca9253
  40d670:	std    
  40d671:	mov    edi,0x965635b
  40d676:	xlat   BYTE PTR ds:[ebx]
  40d677:	jne    0x40d615
  40d679:	add    dl,bl
  40d67b:	xchg   esp,eax
  40d67c:	dec    edi
  40d67d:	xchg   BYTE PTR [ecx+0x2e],ah
  40d680:	mov    ds:0xeef4b862,eax
  40d685:	daa    
  40d686:	int    0x12
  40d688:	rcr    BYTE PTR [esi],cl
  40d68a:	and    BYTE PTR [ebx+0x2e],ch
  40d68d:	mov    ds:0x4c636b4b,al
  40d692:	mov    esp,0x85551342
  40d697:	aaa    
  40d698:	test   al,0x1c
  40d69a:	int    0x62
  40d69c:	enter  0xed,0x40
  40d6a0:	(bad)  
  40d6a1:	popa   
  40d6a2:	pushf  
  40d6a3:	mov    eax,ds:0xff03a16a
  40d6a8:	sbb    DWORD PTR [edi-0x610ff7a2],ecx
  40d6ae:	aad    0x3a
  40d6b0:	std    
  40d6b1:	xchg   ebx,eax
  40d6b2:	rcl    DWORD PTR [edi],cl
  40d6b4:	or     BYTE PTR [ebx-0x34],bl
  40d6b7:	lods   al,BYTE PTR ds:[esi]
  40d6b8:	mov    dh,0x9f
  40d6ba:	adc    ebx,ebx
  40d6bc:	in     eax,dx
  40d6bd:	pushf  
  40d6be:	fcmovnu st,st(4)
  40d6c0:	iret   
  40d6c1:	push   edi
  40d6c2:	sub    edx,DWORD PTR [edx-0x284f9d56]
  40d6c8:	push   cs
  40d6c9:	(bad)  
  40d6cb:	popf   
  40d6cc:	fs push es
  40d6ce:	test   eax,0x17364636
  40d6d3:	leave  
  40d6d4:	pop    ss
  40d6d5:	fwait
  40d6d6:	das    
  40d6d7:	ss mov edx,0xba0e3647
  40d6dd:	push   edx
  40d6de:	lock mov ecx,0x13ff1e7
  40d6e4:	ins    DWORD PTR es:[edi],dx
  40d6e5:	idiv   BYTE PTR [esi+0x5c]
  40d6e8:	out    dx,eax
  40d6e9:	adc    al,0x9
  40d6eb:	push   edi
  40d6ec:	jmp    0x40d753
  40d6ee:	shl    BYTE PTR ds:0xf7a37800,cl
  40d6f4:	jg     0x40d68e
  40d6f6:	ror    bl,cl
  40d6f8:	adc    eax,0x82c81cba
  40d6fd:	cmc    
  40d6fe:	jg     0x40d70f
  40d700:	int    0x8c
  40d702:	ja     0x40d6e9
  40d704:	push   eax
  40d705:	sbb    DWORD PTR [esi+ecx*2+0x23332e5],edi
  40d70c:	sbb    BYTE PTR [ebp+0x62],al
  40d70f:	test   eax,0x32397a20
  40d714:	pop    ss
  40d715:	(bad)  
  40d716:	addr16 xchg ecx,eax
  40d718:	push   esp
  40d719:	mov    bh,0xe3
  40d71b:	(bad)  
  40d71c:	sbb    bl,al
  40d71e:	inc    eax
  40d71f:	push   0x57
  40d721:	arpl   WORD PTR [esi+eax*2+0x43cd4ba],si
  40d728:	call   DWORD PTR [eax]
  40d72a:	push   esi
  40d72b:	mov    ch,0x16
  40d72d:	inc    edi
  40d72e:	fistp  QWORD PTR ds:0xa1778eb0
  40d734:	jge    0x40d6ed
  40d736:	stc    
  40d737:	test   DWORD PTR [edi+0xb],ebx
  40d73a:	push   ecx
  40d73b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d73c:	test   DWORD PTR [ebx-0x7d],ebp
  40d73f:	lock ret 0x7e13
  40d743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d744:	icebp  
  40d745:	mov    ebp,0x4e741527
  40d74a:	jecxz  0x40d7a5
  40d74c:	dec    eax
  40d74d:	bound  esi,QWORD PTR [eax+0x669f82d4]
  40d753:	xchg   esp,eax
  40d754:	(bad)  
  40d755:	in     al,dx
  40d756:	fist   WORD PTR [ecx-0x48]
  40d759:	repnz mov dh,BYTE PTR [ebp-0x36]
  40d75d:	adc    BYTE PTR [ecx],ch
  40d75f:	jecxz  0x40d717
  40d761:	fwait
  40d762:	sbb    al,0xf
  40d764:	pop    esp
  40d765:	imul   eax,DWORD PTR ds:0xc6808637,0x431a1f47
  40d76f:	pop    edx
  40d770:	mov    al,ds:0x964ec263
  40d775:	jge    0x40d7b9
  40d777:	jbe    0x40d7b0
  40d779:	aad    0x60
  40d77b:	ror    ch,1
  40d77d:	ja     0x40d702
  40d77f:	mov    ds:0xc81c0ffc,al
  40d784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d785:	fwait
  40d786:	xor    al,0x56
  40d788:	mov    WORD PTR [esi+ecx*1],ss
  40d78b:	or     al,0x43
  40d78d:	mov    es,WORD PTR [ebp+ecx*4+0x74582324]
  40d794:	std    
  40d795:	add    al,0xea
  40d797:	scas   al,BYTE PTR es:[edi]
  40d798:	fldenv [ecx-0x48]
  40d79b:	pop    edx
  40d79c:	sbb    eax,0x1a821897
  40d7a1:	out    0x14,al
  40d7a3:	and    eax,0xed20abf
  40d7a8:	cmp    eax,0x7a793201
  40d7ad:	cli    
  40d7ae:	jmp    0x976f:0x52d4a7ac
  40d7b5:	dec    ecx
  40d7b6:	sbb    eax,0x1d6acfe7
  40d7bb:	call   0xede41efc
  40d7c0:	div    BYTE PTR [ecx-0x20dd7332]
  40d7c6:	xor    BYTE PTR [edx+0x6b],bl
  40d7c9:	and    al,0xee
  40d7cb:	ins    BYTE PTR es:[edi],dx
  40d7cc:	mov    cl,0xc9
  40d7ce:	stc    
  40d7cf:	retf   0xb85c
  40d7d2:	ret    0xe5c5
  40d7d5:	mov    fs,WORD PTR [ebx+0x1fb3371e]
  40d7db:	push   edi
  40d7dc:	mov    BYTE PTR [edi],0xf1
  40d7df:	ficomp DWORD PTR [ecx]
  40d7e1:	dec    esi
  40d7e2:	(bad)  
  40d7e3:	stc    
  40d7e4:	sbb    DWORD PTR [esi],esp
  40d7e6:	mov    ebx,0xdc6465cb
  40d7eb:	mov    al,ds:0xf46ac19b
  40d7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7f1:	xchg   esp,eax
  40d7f2:	bound  eax,QWORD PTR [ecx+0x39eb17c6]
  40d7f8:	sub    BYTE PTR [ecx],0x5e
  40d7fb:	mov    esp,0xf057e6b6
  40d800:	fcmove st,st(4)
  40d802:	ja     0x40d79a
  40d804:	xchg   edi,eax
  40d805:	push   0xeba3ce04
  40d80a:	push   edx
  40d80b:	call   0x3ac1:0xf3ec9c29
  40d812:	inc    edi
  40d813:	mov    esp,0xfc515cb4
  40d818:	out    0x1a,eax
  40d81a:	pop    ecx
  40d81b:	pop    ecx
  40d81c:	sbb    eax,0xa01362ab
  40d821:	shr    BYTE PTR [edi],1
  40d823:	pop    esp
  40d824:	loopne 0x40d80a
  40d826:	inc    DWORD PTR [eax-0x5620abc5]
  40d82c:	mov    ds:0x64f07753,al
  40d831:	test   eax,0x12057
  40d836:	ins    BYTE PTR es:[edi],dx
  40d837:	xor    ecx,esi
  40d839:	imul   esp,DWORD PTR [ebx],0xf4965971
  40d83f:	cmp    BYTE PTR [edx+0x3c15af0e],cl
  40d845:	jmp    0x40d7e8
  40d847:	and    ecx,DWORD PTR [eax+edi*4-0x4e]
  40d84b:	jno    0x40d7d9
  40d84d:	sub    BYTE PTR [edi+0x6],ch
  40d850:	dec    esp
  40d851:	imul   eax,ebp,0x39ebfed0
  40d857:	imul   BYTE PTR [ebp-0x3b]
  40d85a:	dec    esi
  40d85b:	pushf  
  40d85c:	sbb    edi,DWORD PTR [edi+0xb34430b]
  40d862:	pop    esi
  40d863:	addr16 inc esp
  40d865:	neg    BYTE PTR [esi]
  40d867:	xchg   ebp,eax
  40d868:	fdiv   DWORD PTR [ecx]
  40d86a:	sbb    al,0x4b
  40d86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d86d:	mov    ah,0xec
  40d86f:	or     al,0x7c
  40d871:	repnz in eax,dx
  40d873:	pop    edx
  40d874:	xor    eax,0x587323df
  40d879:	and    DWORD PTR [ebx+0x1b],esp
  40d87c:	xchg   ebx,eax
  40d87d:	inc    eax
  40d87e:	xchg   ebx,eax
  40d87f:	lods   eax,DWORD PTR ds:[esi]
  40d880:	cld    
  40d881:	aaa    
  40d882:	cmp    bl,BYTE PTR [edi]
  40d884:	jmp    0xcabcfffb
  40d889:	mov    al,0x9f
  40d88b:	and    ch,BYTE PTR [edi+ecx*4-0x4c37ae8]
  40d892:	ret    
  40d893:	cmp    ecx,DWORD PTR [ebx+eiz*1+0x3]
  40d897:	pop    ds
  40d898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d899:	test   DWORD PTR [ebx-0x5b],ebp
  40d89c:	addr16 push es
  40d89e:	daa    
  40d89f:	scas   eax,DWORD PTR es:[edi]
  40d8a0:	das    
  40d8a1:	pop    ds
  40d8a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a3:	sub    eax,0x547b3ad9
  40d8a8:	scas   al,BYTE PTR es:[edi]
  40d8a9:	fmul   st,st(5)
  40d8ab:	dec    edx
  40d8ac:	sub    BYTE PTR [ecx],bh
  40d8ae:	pop    esi
  40d8b0:	nop
  40d8b1:	repnz dec esi
  40d8b3:	outs   dx,DWORD PTR ds:[esi]
  40d8b4:	gs xor eax,0x31a3d65e
  40d8ba:	jnp    0x40d868
  40d8bc:	cmp    bh,BYTE PTR [ecx-0x39bded48]
  40d8c2:	xchg   edi,eax
  40d8c3:	mov    dl,0xb8
  40d8c5:	mov    BYTE PTR [ebp-0x4b],dl
  40d8c8:	inc    esi
  40d8c9:	push   ebp
  40d8ca:	dec    eax
  40d8cb:	cli    
  40d8cc:	stos   DWORD PTR es:[edi],eax
  40d8cd:	mov    ah,0x8
  40d8cf:	mov    ebx,0x809675aa
  40d8d4:	push   cs
  40d8d5:	(bad)  
  40d8d6:	lock add ebp,esi
  40d8d9:	lods   eax,DWORD PTR ds:[esi]
  40d8da:	mov    edx,?
  40d8dc:	add    cl,cl
  40d8de:	ja     0x40d95a
  40d8e0:	xchg   esp,eax
  40d8e1:	adc    edi,DWORD PTR [ecx+0x16]
  40d8e4:	jb     0x40d8f2
  40d8e6:	pop    esp
  40d8e7:	sub    eax,0xf6cddff9
  40d8ec:	lds    ecx,FWORD PTR [ecx+eiz*8-0x44499640]
  40d8f3:	es popf 
  40d8f5:	jo     0x40d946
  40d8f7:	inc    esp
  40d8f8:	mov    esp,0x3eb2da39
  40d8fd:	retf   0xea91
  40d900:	xchg   DWORD PTR [ebx],eax
  40d902:	retf   
  40d903:	in     eax,dx
  40d904:	or     ecx,DWORD PTR ds:0xb90e1558
  40d90a:	pop    eax
  40d90b:	les    ecx,FWORD PTR [esi+ebx*2-0x42374c34]
  40d912:	in     al,dx
  40d913:	daa    
  40d914:	call   0x5226:0xb0d8e746
  40d91b:	mov    ebp,0x66bd7f1c
  40d920:	inc    esp
  40d921:	mov    edx,0x7188b0dc
  40d926:	xchg   edi,eax
  40d927:	bound  ebx,QWORD PTR [edx+0x2bf6e74c]
  40d92d:	(bad)  
  40d92e:	popa   
  40d92f:	loopne 0x40d8bd
  40d931:	stc    
  40d932:	and    al,cl
  40d934:	xor    esp,eax
  40d936:	cld    
  40d937:	xchg   edi,eax
  40d938:	add    eax,0x11f4bb10
  40d93d:	ret    
  40d93e:	and    al,0x3b
  40d940:	daa    
  40d941:	call   0xadff:0xb4d4fa35
  40d948:	sbb    edi,DWORD PTR [ecx+0x70afecf6]
  40d94e:	mov    esp,DWORD PTR [ebp-0x15]
  40d951:	sub    esi,DWORD PTR [eax+0x5468fa15]
  40d957:	aaa    
  40d958:	(bad)  
  40d959:	xor    ebp,DWORD PTR [ecx]
  40d95b:	dec    esi
  40d95c:	and    al,0xc4
  40d95e:	mov    ch,0x97
  40d960:	mov    cl,0xb6
  40d962:	ds pop ecx
  40d964:	int3   
  40d965:	mov    al,0x90
  40d967:	jmp    0x40d955
  40d969:	pop    ebx
  40d96a:	out    dx,al
  40d96b:	sub    eax,0x811023ad
  40d970:	popa   
  40d971:	mov    al,ds:0x806ee21d
  40d976:	repnz dec esi
  40d978:	push   ecx
  40d979:	jo     0x40d915
  40d97b:	cmp    al,0xd0
  40d97d:	xchg   ebp,eax
  40d97e:	mov    di,0xf016
  40d982:	retf   0x7e8f
  40d985:	pop    esp
  40d986:	icebp  
  40d987:	clts   
  40d989:	mov    ecx,?
  40d98b:	and    cl,BYTE PTR [ecx+edx*8-0x12909d58]
  40d992:	mov    edi,0xd6012b0f
  40d997:	adc    BYTE PTR [edx+esi*1-0x1e33d04e],ah
  40d99e:	test   eax,0xdbcb7686
  40d9a3:	ss in  al,0x44
  40d9a6:	les    esi,FWORD PTR [ebx+ebx*4]
  40d9a9:	pop    ecx
  40d9aa:	mov    dh,0x8f
  40d9ac:	sbb    al,0xec
  40d9ae:	cmp    al,0x5e
  40d9b0:	out    dx,eax
  40d9b1:	push   ss
  40d9b2:	mov    cl,0x15
  40d9b4:	xchg   edx,eax
  40d9b5:	call   0xb4fc:0xd60492d3
  40d9bc:	pop    esp
  40d9bd:	mov    es,WORD PTR [ecx]
  40d9bf:	sbb    DWORD PTR [ebx+0x45a1fa87],esi
  40d9c5:	(bad)  
  40d9c6:	rcl    DWORD PTR [ebx-0x54d1ea8f],1
  40d9cc:	inc    ebp
  40d9cd:	pop    ebx
  40d9ce:	cmp    BYTE PTR [edi+0x417f8f25],ch
  40d9d4:	xor    BYTE PTR [edx-0x34c927f],ah
  40d9da:	mov    ss,WORD PTR [ebx-0x7c]
  40d9dd:	daa    
  40d9de:	pop    eax
  40d9df:	jmp    DWORD PTR [ecx+0x6988a753]
  40d9e5:	fsubp  st(3),st
  40d9e7:	repz arpl WORD PTR [esi+0x3c],di
  40d9eb:	adc    ecx,DWORD PTR [ebx+0x23]
  40d9ee:	lods   eax,DWORD PTR ds:[esi]
  40d9ef:	jo     0x40da45
  40d9f1:	and    edx,DWORD PTR [eax+0x389f9eba]
  40d9f7:	std    
  40d9f8:	adc    DWORD PTR [eax],edi
  40d9fa:	and    eax,0xaaa3562f
  40d9ff:	push   ss
  40da00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da01:	pop    esi
  40da02:	pop    es
  40da03:	fild   DWORD PTR [edx-0x61d4f260]
  40da09:	dec    edx
  40da0a:	mov    dh,0x99
  40da0c:	mov    ebp,0xeb6d5cfb
  40da11:	jge    0x40d9c5
  40da13:	test   BYTE PTR [eax+0x53],al
  40da16:	xor    edx,DWORD PTR [ebx-0x57]
  40da19:	rol    BYTE PTR [ebx],0xda
  40da1c:	lods   eax,DWORD PTR ds:[esi]
  40da1d:	adc    al,0x6a
  40da1f:	retf   
  40da20:	sbb    ch,dh
  40da22:	sub    ebx,edx
  40da24:	mov    ds:0xcd9d81f3,eax
  40da29:	fs jnp 0x40d9b7
  40da2c:	pop    ss
  40da2d:	dec    ebp
  40da2e:	xchg   BYTE PTR [esi+ebp*4],cl
  40da31:	shl    DWORD PTR [esi-0x1f7f5bac],cl
  40da37:	push   esp
  40da38:	xor    al,0xb1
  40da3a:	xor    al,bl
  40da3c:	xlat   BYTE PTR ds:[ebx]
  40da3d:	push   esp
  40da3e:	mov    dl,0xa
  40da40:	xor    eax,0x938f348a
  40da45:	jg     0x40d9cc
  40da47:	jge    0x40daba
  40da49:	xchg   ebp,eax
  40da4a:	frstor [ebp-0xb]
  40da4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da4e:	mov    dl,0x15
  40da50:	(bad)  
  40da51:	stos   DWORD PTR es:[edi],eax
  40da52:	(bad)  
  40da53:	mov    al,0x48
  40da55:	add    al,0x82
  40da57:	adc    al,0xb8
  40da59:	add    dh,bh
  40da5b:	nop
  40da5c:	dec    ebx
  40da5d:	out    0xf7,al
  40da5f:	data16 mov ah,0x1c
  40da62:	out    dx,al
  40da63:	jns    0x40da3e
  40da65:	das    
  40da66:	test   BYTE PTR [ebx],bh
  40da68:	popa   
  40da69:	sub    ebp,0xf76330d7
  40da6f:	in     eax,0x26
  40da71:	mov    DWORD PTR [eax],ebx
  40da73:	push   ebp
  40da74:	arpl   WORD PTR [eax-0x701863d1],si
  40da7a:	ficomp DWORD PTR [ecx]
  40da7c:	shl    BYTE PTR [ecx-0x27aa0479],0x80
  40da83:	ret    
  40da84:	or     eax,0xaf781b3f
  40da89:	shl    DWORD PTR [edi+0x49],1
  40da8c:	in     eax,0x8d
  40da8e:	ror    eax,0xfd
  40da91:	inc    esi
  40da92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da93:	jns    0x40db03
  40da95:	jbe    0x40da70
  40da97:	xor    bh,al
  40da99:	daa    
  40da9a:	leave  
  40da9b:	xchg   DWORD PTR [esi+0x400475d1],esi
  40daa1:	iret   
  40daa2:	push   es
  40daa3:	out    0x7b,eax
  40daa5:	call   0x3ad8d559
  40daaa:	test   edx,0x330eae34
  40dab0:	in     eax,0xe1
  40dab2:	fmul   DWORD PTR [ecx]
  40dab4:	in     eax,dx
  40dab5:	dec    ebp
  40dab6:	inc    ecx
  40dab7:	repnz cmp al,0xe6
  40daba:	ja     0x40da42
  40dabc:	in     al,0x6c
  40dabe:	bound  edi,QWORD PTR [eax]
  40dac0:	jmp    0xd9a1ec0d
  40dac5:	and    esi,DWORD PTR [ebx+0x46]
  40dac8:	ret    
  40dac9:	adc    dh,BYTE PTR [esi+ecx*1-0x764ad178]
  40dad0:	mov    ebp,0x7c37ce92
  40dad5:	cmp    DWORD PTR [esi+0xa],esi
  40dad8:	test   DWORD PTR [edx-0x26],ebx
  40dadb:	les    ebx,FWORD PTR [ebx+0x37]
  40dade:	xchg   DWORD PTR [ecx-0xc4a4e56],esi
  40dae4:	lods   eax,DWORD PTR ds:[esi]
  40dae5:	xor    ch,ch
  40dae7:	cmp    bl,ah
  40dae9:	adc    ah,dl
  40daeb:	jns    0x40daad
  40daed:	fmul   QWORD PTR [ebp-0x6b87d341]
  40daf3:	lods   al,BYTE PTR ds:[esi]
  40daf4:	les    ebp,FWORD PTR [eax-0x3dca9b0f]
  40dafa:	mov    WORD PTR [ebp-0x71],cs
  40dafd:	cmp    eax,0xb300efb3
  40db02:	pop    eax
  40db03:	mov    dl,0x8a
  40db05:	push   es
  40db06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db07:	cmp    DWORD PTR [ecx],esi
  40db09:	push   cs
  40db0a:	mov    DWORD PTR [esi+0x65e059a9],ebp
  40db10:	gs mov dl,0xcf
  40db13:	xchg   edi,eax
  40db14:	repnz aaa 
  40db16:	mov    edx,esp
  40db18:	loopne 0x40db4d
  40db1a:	pop    ss
  40db1b:	dec    ecx
  40db1c:	push   0xe515e4e6
  40db21:	cmp    eax,0xce5da00b
  40db26:	imul   esp,DWORD PTR [esi],0x3ea62371
  40db2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db2d:	mov    ecx,0x53743a76
  40db32:	jns    0x40db50
  40db34:	or     eax,0x43203326
  40db39:	push   ebp
  40db3a:	fst    st(0)
  40db3c:	stc    
  40db3d:	leave  
  40db3e:	outs   dx,DWORD PTR ds:[esi]
  40db3f:	cli    
  40db40:	mov    esp,0x492991fe
  40db45:	xchg   edi,eax
  40db46:	pop    ebp
  40db47:	mov    ebp,0xf7871346
  40db4c:	loopne 0x40db7e
  40db4e:	add    edi,esi
  40db50:	scas   al,BYTE PTR es:[edi]
  40db51:	outs   dx,BYTE PTR ds:[esi]
  40db52:	mov    esi,0xaf77c334
  40db57:	addr16 sahf 
  40db59:	scas   eax,DWORD PTR es:[edi]
  40db5a:	push   ss
  40db5b:	cmp    DWORD PTR [edx+esi*2],0x45
  40db5f:	adc    DWORD PTR [eax+0x57],0x31509e87
  40db66:	lock loopne 0x40db1c
  40db69:	xor    edi,ebx
  40db6b:	inc    esi
  40db6c:	sar    BYTE PTR [eax+0x67],1
  40db6f:	call   0x4ac55e31
  40db74:	inc    ebx
  40db75:	dec    ecx
  40db76:	xlat   BYTE PTR ds:[ebx]
  40db77:	inc    ebx
  40db78:	test   eax,0x162a0445
  40db7d:	push   cs
  40db7e:	mov    ebx,0xa6554997
  40db83:	fcmovu st,st(1)
  40db85:	loope  0x40dba8
  40db87:	push   ss
  40db88:	xor    ch,BYTE PTR [ecx]
  40db8a:	leave  
  40db8b:	xchg   edi,eax
  40db8c:	retf   0x4050
  40db8f:	loop   0x40dbd7
  40db91:	jns    0x40db34
  40db93:	mov    ebx,0xe2b12746
  40db98:	out    0x5e,eax
  40db9a:	dec    ecx
  40db9b:	in     al,0x7e
  40db9d:	std    
  40db9e:	fcmovnbe st,st(6)
  40dba0:	jne    0x40dbb4
  40dba2:	push   ss
  40dba3:	pop    edi
  40dba4:	jg     0x40db4c
  40dba6:	sub    eax,0x90e18f66
  40dbab:	push   edx
  40dbac:	inc    esp
  40dbad:	mov    eax,0x3986da4f
  40dbb2:	mov    al,ds:0xf6c3bc9a
  40dbb7:	repnz dec edi
  40dbb9:	push   ebx
  40dbba:	mov    bl,0xbd
  40dbbc:	jle    0x40dbcd
  40dbbe:	inc    esi
  40dbbf:	jnp    0x40dbad
  40dbc1:	cmp    al,0x5c
  40dbc3:	sub    bh,BYTE PTR ss:[edx-0x18d3484a]
  40dbca:	out    0x15,eax
  40dbcc:	ja     0x40dc0e
  40dbce:	cmc    
  40dbcf:	or     esp,DWORD PTR [esi]
  40dbd1:	pop    ss
  40dbd2:	cli    
  40dbd3:	pop    esp
  40dbd4:	fnstsw WORD PTR [eax-0x184ae0a8]
  40dbda:	jmp    0xc9c8:0xefa4a387
  40dbe1:	pushf  
  40dbe2:	or     eax,0xb12f1645
  40dbe7:	pop    ebp
  40dbe8:	push   cs
  40dbe9:	ror    DWORD PTR [esp+ecx*8-0x53],1
  40dbed:	add    BYTE PTR [eax+0x6c178db0],dl
  40dbf3:	sti    
  40dbf4:	jmp    0x40dc6e
  40dbf6:	cwde   
  40dbf7:	pusha  
  40dbf8:	sub    ebx,DWORD PTR [ebx+0x296f5d49]
  40dbfe:	pop    esi
  40dbff:	outs   dx,DWORD PTR ds:[esi]
  40dc00:	xchg   esi,eax
  40dc01:	pushf  
  40dc02:	mov    ebx,0xef489f99
  40dc07:	and    eax,0xb4625710
  40dc0c:	xchg   ebp,eax
  40dc0d:	lods   eax,DWORD PTR ds:[esi]
  40dc0e:	push   edi
  40dc0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc10:	sub    eax,0x25f70480
  40dc15:	sbb    DWORD PTR ss:[edx],0xab0174c1
  40dc1c:	push   0x3addb448
  40dc21:	xchg   ebx,eax
  40dc22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc23:	inc    DWORD PTR ss:[edi-0x40]
  40dc27:	cli    
  40dc28:	pushf  
  40dc29:	stos   BYTE PTR es:[edi],al
  40dc2a:	(bad)  
  40dc2b:	scas   al,BYTE PTR es:[edi]
  40dc2c:	sub    eax,0xe61eb494
  40dc32:	aaa    
  40dc33:	pushf  
  40dc34:	pop    esi
  40dc35:	xlat   BYTE PTR ds:[ebx]
  40dc36:	adc    BYTE PTR [ecx+0x3a],0xd1
  40dc3a:	push   esp
  40dc3b:	mov    dl,0xbe
  40dc3d:	clc    
  40dc3e:	xlat   BYTE PTR ds:[ebx]
  40dc3f:	or     ebp,ebx
  40dc41:	add    al,0xaf
  40dc43:	fnstsw WORD PTR [edx+esi*1]
  40dc46:	icebp  
  40dc47:	add    al,0x3b
  40dc49:	lock stos BYTE PTR es:[edi],al
  40dc4b:	pop    edx
  40dc4c:	ror    BYTE PTR [eax],cl
  40dc4e:	jne    0x40dbde
  40dc50:	mov    ecx,0xdf757d6a
  40dc55:	shr    ebx,cl
  40dc57:	mov    WORD PTR ds:[ebx],es
  40dc5a:	xor    eax,DWORD PTR [ebx+0x4187ead8]
  40dc60:	loop   0x40dc3e
  40dc62:	mov    cl,0x89
  40dc64:	dec    ecx
  40dc65:	or     BYTE PTR [eax+0x6],bh
  40dc68:	jo     0x40dcdb
  40dc6a:	pop    ss
  40dc6b:	hlt    
  40dc6c:	(bad)  
  40dc6d:	and    dh,BYTE PTR [edi-0x49]
  40dc70:	inc    esi
  40dc71:	arpl   bp,bx
  40dc73:	dec    esp
  40dc74:	int3   
  40dc75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc76:	xchg   esi,eax
  40dc77:	leave  
  40dc78:	jge    0x40dc10
  40dc7a:	aaa    
  40dc7b:	dec    edi
  40dc7c:	xchg   edi,eax
  40dc7d:	mov    bh,0xa1
  40dc7f:	icebp  
  40dc80:	jg     0x40dcd9
  40dc82:	jbe    0x40dcb6
  40dc84:	loop   0x40dc23
  40dc86:	sbb    ecx,DWORD PTR [edi+0x2739c5ec]
  40dc8c:	cs addr16 push ecx
  40dc8f:	ins    DWORD PTR es:[edi],dx
  40dc90:	aad    0xf5
  40dc92:	push   ebp
  40dc93:	pop    es
  40dc94:	sub    al,0xad
  40dc96:	xchg   DWORD PTR [edx],eax
  40dc98:	fiadd  DWORD PTR [ebx+ebx*1+0x215fda18]
  40dc9f:	sbb    al,0x81
  40dca1:	mov    cl,0x1b
  40dca3:	hlt    
  40dca4:	xchg   esp,eax
  40dca5:	cli    
  40dca6:	(bad)  
  40dca7:	jmp    0x7995:0xfba91d1f
  40dcae:	inc    ecx
  40dcaf:	jmp    0x40dcaf
  40dcb1:	test   eax,0xd0a8a3bd
  40dcb6:	sbb    esi,ebx
  40dcb8:	add    DWORD PTR [eax-0x3423e699],eax
  40dcbe:	in     eax,dx
  40dcbf:	(bad)  
  40dcc0:	pop    ecx
  40dcc1:	ret    0x2b30
  40dcc4:	dec    ecx
  40dcc5:	cmp    DWORD PTR [edi+0xacfe5ae],ebx
  40dccb:	test   DWORD PTR [ecx+0x1183afbb],0x4b12faea
  40dcd5:	test   DWORD PTR [ebp-0x162717c7],0x4ff19a34
  40dcdf:	cld    
  40dce0:	push   ecx
  40dce1:	stos   DWORD PTR es:[edi],eax
  40dce2:	in     ax,0xd4
  40dce5:	call   0xe7b2:0x82687e0d
  40dcec:	lahf   
  40dced:	test   eax,0x8dabd82
  40dcf2:	mov    bl,0x6f
  40dcf4:	mov    eax,ds:0x5174a7a0
  40dcf9:	add    bl,bl
  40dcfb:	cdq    
  40dcfc:	sub    ecx,ebp
  40dcfe:	fwait
  40dcff:	sub    ah,BYTE PTR [edx]
  40dd01:	mov    ds:0xead5c8a1,al
  40dd06:	int3   
  40dd07:	(bad)  
  40dd08:	sti    
  40dd09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd0a:	sahf   
  40dd0b:	shl    BYTE PTR [esi-0x7b],0x63
  40dd0f:	pop    ds
  40dd10:	(bad)  
  40dd11:	xchg   edi,eax
  40dd12:	arpl   WORD PTR [ebx],ax
  40dd14:	cli    
  40dd15:	fimul  DWORD PTR [edi]
  40dd17:	int3   
  40dd18:	push   edi
  40dd19:	or     BYTE PTR [ebx],bl
  40dd1b:	(bad)  
  40dd1c:	or     dl,BYTE PTR [ecx]
  40dd1e:	adc    dh,BYTE PTR [esi+0x11740e2c]
  40dd24:	jb     0x40dd67
  40dd26:	test   eax,0x1cab22e9
  40dd2b:	xchg   ebx,eax
  40dd2c:	mov    ds:0x41d91568,al
  40dd31:	and    bh,al
  40dd33:	js     0x40dd13
  40dd35:	sbb    al,0xff
  40dd37:	adc    DWORD PTR [esi+eiz*1],ecx
  40dd3a:	jg     0x40ddab
  40dd3c:	retf   0x9843
  40dd3f:	lods   al,BYTE PTR ds:[esi]
  40dd40:	test   DWORD PTR [edx],ebp
  40dd42:	adc    ch,BYTE PTR [eax]
  40dd44:	push   ss
  40dd45:	push   0xffffffd2
  40dd47:	sbb    al,0xd8
  40dd49:	mov    DWORD PTR [ecx],edi
  40dd4b:	dec    edx
  40dd4c:	sub    eax,0x4b74fb68
  40dd51:	xchg   esp,eax
  40dd52:	pop    edi
  40dd53:	mov    ah,0xf
  40dd55:	sub    ebx,ecx
  40dd57:	scas   eax,DWORD PTR es:[edi]
  40dd58:	xor    ebp,DWORD PTR [edi-0x2c]
  40dd5b:	or     BYTE PTR [ebx],ch
  40dd5d:	lahf   
  40dd5e:	xchg   ecx,eax
  40dd5f:	(bad)  [eax+0x16]
  40dd62:	mov    bh,0x44
  40dd64:	sub    BYTE PTR [ebx+0x32a419b1],ah
  40dd6a:	and    esp,eax
  40dd6c:	test   ebp,0x33d828e4
  40dd72:	mov    edi,DWORD PTR [ecx]
  40dd74:	test   DWORD PTR [ecx+0x66],esi
  40dd77:	loop   0x40dd02
  40dd79:	fcomp  QWORD PTR [ecx]
  40dd7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd7c:	aas    
  40dd7d:	gs (bad) 
  40dd7f:	mov    bh,0x27
  40dd81:	int3   
  40dd82:	adc    DWORD PTR [edx],0x3a
  40dd85:	jne    0x40dddd
  40dd87:	shl    DWORD PTR es:[ecx+0x15],cl
  40dd8b:	loopne 0x40dde0
  40dd8d:	pop    ebx
  40dd8e:	dec    eax
  40dd8f:	mov    ebx,0xfa93f52d
  40dd94:	fisttp DWORD PTR [edx]
  40dd96:	add    bh,dl
  40dd98:	aaa    
  40dd99:	or     DWORD PTR [ebx],esp
  40dd9b:	mov    bl,bh
  40dd9d:	mov    al,0x54
  40dd9f:	frstor [ebx+0x4d039114]
  40dda5:	test   cl,al
  40dda7:	mov    WORD PTR [edx+eiz*8+0x49dcb880],fs
  40ddae:	jl     0x40dd90
  40ddb0:	loopne 0x40ddd1
  40ddb2:	gs int3 
  40ddb4:	inc    esp
  40ddb5:	push   ebx
  40ddb6:	adc    al,0xaa
  40ddb8:	dec    esp
  40ddb9:	fs in  al,dx
  40ddbb:	inc    esi
  40ddbc:	fistp  DWORD PTR [esi]
  40ddbe:	mov    al,ds:0xf63ac0de
  40ddc3:	push   esi
  40ddc4:	sbb    eax,0x16ef002d
  40ddc9:	fidivr WORD PTR [eax]
  40ddcb:	ss xchg esp,eax
  40ddcd:	adc    al,0xa5
  40ddcf:	jns    0x40dde9
  40ddd1:	sbb    eax,0x7da0d740
  40ddd6:	rcl    bh,1
  40ddd8:	in     eax,0x27
  40ddda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dddb:	pushf  
  40dddc:	dec    edx
  40dddd:	sbb    edx,DWORD PTR [ebp-0x6903ad18]
  40dde3:	adc    BYTE PTR [eax],0xfb
  40dde6:	cmp    al,al
  40dde8:	jbe    0x40dd76
  40ddea:	and    eax,0x33a6c690
  40ddef:	int    0xe5
  40ddf1:	inc    esi
  40ddf2:	test   BYTE PTR [ebp+0x7f],cl
  40ddf5:	int3   
  40ddf6:	cdq    
  40ddf7:	fldenv [ebx+0x4c6a9878]
  40ddfd:	fsub   st,st(6)
  40ddff:	(bad)  
  40de00:	or     eax,0xb4cc3eeb
  40de05:	fld    TBYTE PTR [eax+0x51a6377d]
  40de0b:	xlat   BYTE PTR ds:[ebx]
  40de0c:	mov    esp,0x424450e6
  40de11:	xlat   BYTE PTR ds:[ebx]
  40de12:	scas   al,BYTE PTR es:[edi]
  40de13:	mov    ch,0x3b
  40de15:	mov    ah,0xb6
  40de17:	adc    al,0xc8
  40de19:	test   BYTE PTR [ebx-0x632f85f7],dh
  40de1f:	ss lock jle 0x40de90
  40de23:	int    0xb9
  40de25:	out    dx,al
  40de26:	out    dx,eax
  40de27:	fs out dx,al
  40de29:	or     al,0x26
  40de2b:	push   ebp
  40de2c:	xchg   edi,eax
  40de2d:	and    eax,0x9dc2b723
  40de32:	jge    0x40dea3
  40de34:	add    WORD PTR [edx-0x7b06cda1],bp
  40de3b:	int3   
  40de3c:	dec    DWORD PTR [edi-0x36]
  40de3f:	or     BYTE PTR [edx+esi*2-0x2c2f08a4],bh
  40de46:	pop    ebp
  40de47:	outs   dx,BYTE PTR ds:[esi]
  40de48:	(bad)  
  40de49:	ins    BYTE PTR es:[edi],dx
  40de4a:	adc    DWORD PTR [ebp-0x610c410d],edx
  40de50:	loopne 0x40de41
  40de52:	xrelease xchg BYTE PTR [ebp-0x50],ah
  40de56:	mov    WORD PTR [esi+0x1a781b2f],?
  40de5c:	cld    
  40de5d:	pop    esp
  40de5e:	add    BYTE PTR gs:[ebx],ah
  40de61:	adc    DWORD PTR [esi],esp
  40de63:	pop    ebp
  40de64:	xor    BYTE PTR [ecx+0x6d],0x9e
  40de68:	or     DWORD PTR [ebp-0x26],ecx
  40de6b:	aaa    
  40de6c:	adc    al,0x28
  40de6e:	or     al,ch
  40de70:	sub    BYTE PTR [edx],dh
  40de72:	cs js  0x40de6a
  40de75:	sar    DWORD PTR [edi],1
  40de77:	sar    BYTE PTR [ebp+0x51824a71],1
  40de7d:	push   es
  40de7e:	lds    ecx,FWORD PTR [esi+0x1e564b29]
  40de84:	mov    eax,ds:0xb9986fa8
  40de89:	lods   eax,DWORD PTR ds:[esi]
  40de8a:	in     al,0x3e
  40de8c:	out    0xd1,al
  40de8e:	push   esi
  40de8f:	xor    edx,ebx
  40de91:	adc    DWORD PTR [ebp-0xc1ff53],0x4f
  40de98:	inc    edi
  40de99:	xchg   ebx,edi
  40de9b:	jns    0x40de36
  40de9d:	scas   al,BYTE PTR es:[edi]
  40de9e:	(bad)  
  40de9f:	test   eax,0x57f92217
  40dea4:	xchg   edx,eax
  40dea5:	push   ecx
  40dea6:	jb     0x40de3f
  40dea8:	scas   eax,DWORD PTR es:[edi]
  40dea9:	push   ds
  40deaa:	mov    ah,0xe9
  40deac:	(bad)  
  40dead:	aaa    
  40deae:	clc    
  40deaf:	(bad)  
  40deb0:	div    DWORD PTR [edi]
  40deb2:	or     bl,BYTE PTR es:[ebp+0x7627b6bc]
  40deb9:	mov    ds:0x56583294,eax
  40debe:	xor    BYTE PTR es:[ebx],bh
  40dec1:	arpl   cx,bx
  40dec3:	adc    al,0xa6
  40dec5:	fsubp  st(4),st
  40dec7:	mov    bh,0xed
  40dec9:	sub    esp,DWORD PTR [eax-0x7975d34f]
  40decf:	xchg   ecx,eax
  40ded0:	adc    bl,BYTE PTR [esi-0x6bc4d43c]
  40ded6:	ja     0x40df42
  40ded8:	xchg   ebp,eax
  40ded9:	sub    eax,0x1e1f8d09
  40dede:	retf   
  40dedf:	js     0x40df3f
  40dee1:	lock (bad) 
  40dee3:	mov    al,0x84
  40dee5:	popa   
  40dee6:	xchg   ebp,eax
  40dee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dee8:	(bad)  
  40dee9:	fmul   st(5),st
  40deeb:	sub    DWORD PTR [edi+0x41],edx
  40deee:	sub    eax,0x6b73f98e
  40def3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40def4:	bound  esp,QWORD PTR [ebp-0xd]
  40def7:	test   DWORD PTR [ecx],edi
  40def9:	mov    ch,0x66
  40defb:	adc    DWORD PTR [eax-0x5c1a220b],esi
  40df01:	adc    al,0x77
  40df03:	pop    ebx
  40df04:	dec    esp
  40df05:	jb     0x40dedf
  40df07:	test   eax,0x8c744fe2
  40df0c:	xchg   ebx,eax
  40df0d:	das    
  40df0e:	arpl   WORD PTR [ebx],bx
  40df10:	dec    ebx
  40df11:	jmp    0x40df30
  40df13:	or     dh,dh
  40df15:	cmp    BYTE PTR [esi+0x38],0xf0
  40df19:	int    0xa9
  40df1b:	iret   
  40df1c:	jge    0x40df7f
  40df1e:	jecxz  0x40df67
  40df20:	cmp    eax,0x619fcbe9
  40df25:	(bad)  
  40df27:	cmp    eax,0x1632ff57
  40df2c:	cwde   
  40df2d:	pop    esi
  40df2e:	cli    
  40df2f:	in     eax,0xfa
  40df31:	ja     0x40df70
  40df33:	sbb    al,0xd
  40df35:	mov    al,ds:0xe65b4f86
  40df3a:	xchg   edx,edi
  40df3c:	adc    eax,0x234d11c0
  40df41:	ret    0x7c00
  40df44:	cli    
  40df45:	and    eax,0x8a042e36
  40df4a:	iret   
  40df4b:	ror    DWORD PTR [ebp+0x3d9e9967],0xd9
  40df52:	and    ecx,DWORD PTR [ecx+0x3b960125]
  40df58:	push   edi
  40df59:	xor    al,0x1
  40df5b:	pop    edx
  40df5c:	cwde   
  40df5d:	xor    eax,0xf1c0c76d
  40df62:	sub    eax,0x764dd5af
  40df67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df68:	aaa    
  40df69:	rcr    DWORD PTR [ecx-0x617d3f65],cl
  40df6f:	std    
  40df70:	mov    al,0xad
  40df72:	jbe    0x40dfb3
  40df74:	push   ds
  40df75:	add    ch,ch
  40df77:	inc    edx
  40df78:	mov    ds,WORD PTR [eax]
  40df7a:	mov    cl,0x98
  40df7c:	jecxz  0x40df03
  40df7e:	test   al,0x5d
  40df80:	or     eax,0xe94ae6d2
  40df85:	call   0x192dd0ff
  40df8a:	(bad)  
  40df8b:	popa   
  40df8c:	sub    edx,ebx
  40df8e:	ror    ah,0xf6
  40df91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df92:	xlat   BYTE PTR ds:[ebx]
  40df93:	lods   eax,DWORD PTR fs:[esi]
  40df95:	call   ebx
  40df97:	jae    0x40df52
  40df99:	in     eax,dx
  40df9a:	sub    ecx,DWORD PTR [esi+0x5998dc60]
  40dfa0:	xor    eax,0xd92ff1ef
  40dfa5:	and    ch,cl
  40dfa7:	xchg   esi,eax
  40dfa8:	leave  
  40dfa9:	pop    ecx
  40dfaa:	in     eax,dx
  40dfab:	cli    
  40dfac:	(bad)
  40dfb0:	xchg   esi,eax
  40dfb1:	pop    ebp
  40dfb2:	cmp    al,0x3b
  40dfb4:	pop    eax
  40dfb5:	inc    ebp
  40dfb6:	in     eax,dx
  40dfb7:	push   edi
  40dfb8:	lds    eax,FWORD PTR [edi+0x38bee74a]
  40dfbe:	jbe    0x40df5b
  40dfc0:	shl    DWORD PTR [esi-0x44a92d63],1
  40dfc6:	sbb    eax,0x6fbd699a
  40dfcb:	in     eax,0x31
  40dfcd:	push   esi
  40dfce:	pop    esi
  40dfcf:	rol    BYTE PTR [ebx+0x22],1
  40dfd2:	add    dl,BYTE PTR [edi+0x7d1ce6e8]
  40dfd8:	rol    BYTE PTR [eax+0x220a895c],0x49
  40dfdf:	push   eax
  40dfe0:	iret   
  40dfe1:	je     0x40e04e
  40dfe3:	jmp    0xfd378777
  40dfe8:	xor    ebx,DWORD PTR [ebp+0x52727f6b]
  40dfee:	cli    
  40dfef:	stc    
  40dff0:	shl    DWORD PTR [ecx-0x34],0xd6
  40dff4:	xor    dh,cl
  40dff6:	in     al,0xd9
  40dff8:	or     al,0x3f
  40dffa:	inc    eax
  40dffb:	outs   dx,DWORD PTR ds:[esi]
  40dffc:	mov    ds:0x43d2e40,al
  40e001:	(bad)  [esi+0x5a077fc7]
  40e007:	fadd   QWORD PTR [ebx+ecx*4+0x48]
  40e00b:	cwde   
  40e00c:	clc    
  40e00d:	jmp    0x29837cef
  40e012:	test   al,0x71
  40e014:	mov    ch,0x98
  40e016:	jmp    0xcfb48b61
  40e01b:	or     al,dh
  40e01d:	add    DWORD PTR [edi],0x4da58b78
  40e023:	shl    BYTE PTR [edi+0x5b684bce],0x31
  40e02a:	enter  0x7468,0x7
  40e02e:	(bad)  [edx+0x2c]
  40e031:	jl     0x40e0a1
  40e033:	jnp    0x40e020
  40e035:	pop    esi
  40e036:	mov    gs,WORD PTR [esi-0x1]
  40e039:	cmc    
  40e03a:	jb     0x40e08d
  40e03c:	mov    cl,0x4a
  40e03e:	jmp    0x40e034
  40e040:	jmp    edx
  40e042:	xlat   BYTE PTR ds:[ebx]
  40e043:	pop    ss
  40e044:	add    eax,0x489811e5
  40e049:	push   ss
  40e04a:	push   0xffffffe1
  40e04c:	fld    DWORD PTR [eax]
  40e04e:	pop    esi
  40e04f:	sbb    al,0xf3
  40e051:	(bad)  
  40e052:	cmc    
  40e053:	fnstcw WORD PTR [eax-0x10]
  40e056:	int3   
  40e057:	inc    ecx
  40e058:	inc    ebp
  40e059:	or     al,BYTE PTR [eax]
  40e05b:	xchg   ecx,eax
  40e05c:	loopne 0x40e003
  40e05e:	pop    ebx
  40e05f:	lock sub eax,0xb1f9a42a
  40e065:	jns    0x40e032
  40e067:	cmp    ebx,DWORD PTR ds:0x20183d32
  40e06d:	stc    
  40e06e:	fiadd  DWORD PTR [ecx+0x1c095532]
  40e074:	push   esi
  40e075:	idiv   DWORD PTR [edx]
  40e077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e078:	in     eax,dx
  40e079:	cmp    eax,0xb05d8eba
  40e07e:	xchg   BYTE PTR [ebp+0x3db930bd],ah
  40e084:	mov    ?,WORD PTR [eax+0x12807bfe]
  40e08a:	cdq    
  40e08b:	cmp    eax,0x471e6baf
  40e090:	jne    0x40e0ce
  40e092:	mov    al,0xc6
  40e094:	xlat   BYTE PTR ds:[ebx]
  40e095:	push   ebp
  40e096:	dec    ecx
  40e097:	arpl   WORD PTR [ecx],bx
  40e099:	shr    DWORD PTR [ebp+0x5f4f9089],cl
  40e09f:	push   ebp
  40e0a0:	add    DWORD PTR [edi],ebx
  40e0a2:	sbb    DWORD PTR ds:0x3fb107aa,0x93f1bc84
  40e0ac:	inc    ecx
  40e0ad:	jmp    0x40e054
  40e0af:	ds pop edi
  40e0b1:	mov    bl,0xd4
  40e0b3:	xchg   edi,eax
  40e0b4:	pushf  
  40e0b5:	fs cmp eax,0x824e2581
  40e0bb:	mov    BYTE PTR [esi+0x2e],bh
  40e0be:	inc    edi
  40e0bf:	jmp    0x68e1:0x6e4a05eb
  40e0c6:	xchg   ebp,eax
  40e0c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0c8:	sbb    DWORD PTR [ebx+ebp*2],ebx
  40e0cb:	xor    DWORD PTR [ecx-0x36533c06],eax
  40e0d1:	jmp    0xf61e106b
  40e0d6:	lds    esi,FWORD PTR [ecx+0x2c437640]
  40e0dc:	(bad)  
  40e0dd:	in     eax,dx
  40e0de:	test   DWORD PTR [esi+0x325d4b88],0x5b615d10
  40e0e8:	out    dx,eax
  40e0e9:	ret    
  40e0ea:	addr16 sbb BYTE PTR [bp-0x13],bh
  40e0ef:	call   0xb3896366
  40e0f4:	mov    cl,0x22
  40e0f6:	sub    edi,ebx
  40e0f8:	inc    esp
  40e0f9:	pop    edx
  40e0fa:	cli    
  40e0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0fc:	xchg   esp,eax
  40e0fd:	fidivr WORD PTR [ecx]
  40e0ff:	test   eax,0x1f052c59
  40e104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e105:	ror    DWORD PTR [esi-0x6d],0x5d
  40e109:	lods   al,BYTE PTR ds:[esi]
  40e10a:	inc    ebx
  40e10b:	mov    ?,WORD PTR [edx+edx*2]
  40e10e:	hlt    
  40e10f:	xchg   DWORD PTR [edx-0x50],eax
  40e112:	mov    ebp,0x5cd3e662
  40e117:	fld    QWORD PTR [edi]
  40e119:	xor    BYTE PTR [edi+0x30],dl
  40e11c:	pop    esp
  40e11d:	sub    cl,BYTE PTR [edx-0x8b75b9a]
  40e123:	mov    esi,0x8dd5e2ad
  40e128:	and    esp,DWORD PTR [edi]
  40e12a:	test   bl,cl
  40e12c:	test   eax,0xe492b7f3
  40e131:	call   0x44db89da
  40e136:	sbb    ch,BYTE PTR [eax]
  40e138:	aam    0x65
  40e13a:	dec    edx
  40e13b:	push   ebx
  40e13c:	sub    esi,edi
  40e13e:	ja     0x40e0c5
  40e140:	sbb    al,0x73
  40e142:	adc    al,0xd8
  40e144:	pushf  
  40e145:	mov    eax,ds:0x6a11830e
  40e14a:	pop    ebx
  40e14b:	lahf   
  40e14c:	imul   esi,DWORD PTR [ebp-0x15b55be0],0xd08d6c4b
  40e156:	or     al,dl
  40e158:	sub    ebx,ebx
  40e15a:	fistp  DWORD PTR [ebp-0x4b0c9e75]
  40e160:	mov    ebx,0xe402f269
  40e165:	add    BYTE PTR [eax-0x1619adf0],al
  40e16b:	mov    dh,BYTE PTR [esi+0x1c19a584]
  40e171:	xor    bl,ah
  40e173:	call   0xd77f027c
  40e178:	call   FWORD PTR [edi]
  40e17a:	std    
  40e17b:	popf   
  40e17c:	clc    
  40e17d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e17e:	(bad)  
  40e180:	fs test al,0xb1
  40e183:	test   eax,0x1d9bc835
  40e188:	cmc    
  40e189:	mov    cl,0xb
  40e18b:	in     eax,dx
  40e18c:	gs push ecx
  40e18e:	pop    esi
  40e18f:	mov    DWORD PTR [edi-0x39ba546e],esi
  40e195:	push   0x78aecfca
  40e19a:	call   FWORD PTR [ecx]
  40e19c:	mov    edx,0x8b9a1bda
  40e1a1:	sbb    DWORD PTR [eax-0x401b3c08],esi
  40e1a7:	ins    DWORD PTR es:[edi],dx
  40e1a8:	xchg   edx,eax
  40e1a9:	xor    ch,ch
  40e1ab:	das    
  40e1ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1ad:	inc    edi
  40e1ae:	xor    DWORD PTR [esi-0x15],ebp
  40e1b1:	fisub  WORD PTR [ebx-0x70ac0560]
  40e1b7:	xchg   edi,eax
  40e1b8:	mov    ebx,0xa6fb1d3b
  40e1bd:	xor    BYTE PTR fs:0x87415170,0xb4
  40e1c5:	add    esi,edi
  40e1c7:	jne    0x40e187
  40e1c9:	lock int 0x3d
  40e1cc:	test   di,bx
  40e1cf:	fucomp st(4)
  40e1d1:	mov    ds:0x99bef403,eax
  40e1d6:	xchg   esp,eax
  40e1d7:	push   0x70
  40e1d9:	and    BYTE PTR [edx-0x24],dh
  40e1dc:	mov    ebx,0x2dea2e21
  40e1e1:	inc    eax
  40e1e2:	adc    al,0xd7
  40e1e4:	sub    eax,esp
  40e1e6:	mov    bh,0x8c
  40e1e8:	stos   DWORD PTR es:[edi],eax
  40e1e9:	and    al,BYTE PTR [edx-0x4271d2eb]
  40e1ef:	stc    
  40e1f0:	lahf   
  40e1f1:	cdq    
  40e1f2:	xchg   dl,dl
  40e1f4:	push   edi
  40e1f5:	mul    DWORD PTR [esi+0x663ede77]
  40e1fb:	jg     0x40e1e8
  40e1fd:	retf   0x83b
  40e200:	mov    ecx,0xccc37f23
  40e205:	ds mov eax,0x7af436fe
  40e20b:	mov    esp,0xfa5bf336
  40e210:	in     eax,dx
  40e211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e212:	ins    DWORD PTR es:[edi],dx
  40e213:	sbb    BYTE PTR [ebp+0x2b],al
  40e216:	call   0x72d3:0x4aa820b1
  40e21d:	cwde   
  40e21e:	xchg   ebx,eax
  40e21f:	jo     0x40e20a
  40e221:	inc    edi
  40e222:	shl    DWORD PTR [ecx],cl
  40e224:	inc    eax
  40e225:	icebp  
  40e226:	sub    DWORD PTR [edi],ebp
  40e228:	or     esp,esi
  40e22a:	mov    dh,0x4a
  40e22c:	jl     0x40e212
  40e22e:	mov    dl,ah
  40e230:	or     eax,0xee9c1c64
  40e235:	nop
  40e236:	into   
  40e237:	es into 
  40e239:	icebp  
  40e23a:	adc    DWORD PTR [ebp+esi*8+0x204ff4cd],ecx
  40e241:	retf   
  40e242:	mov    cs,WORD PTR [ecx]
  40e244:	stos   DWORD PTR es:[edi],eax
  40e245:	rol    DWORD PTR [ebp+0x3da1ffe9],cl
  40e24b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e24c:	fld    TBYTE PTR [edx+0x77]
  40e24f:	adc    eax,0x13fd66d8
  40e254:	ins    BYTE PTR es:[edi],dx
  40e255:	or     ebx,edx
  40e257:	shl    DWORD PTR [edx+edx*1],cl
  40e25a:	dec    edi
  40e25b:	clc    
  40e25c:	push   es
  40e25d:	mov    cl,BYTE PTR [esi-0x63229124]
  40e263:	repz mov ebp,0xec57ca2e
  40e269:	mov    al,ds:0xf5c3580c
  40e26e:	outs   dx,BYTE PTR ds:[esi]
  40e26f:	fist   WORD PTR [ecx]
  40e271:	fnstcw WORD PTR [eax]
  40e273:	outs   dx,BYTE PTR ds:[esi]
  40e274:	mov    bh,0x43
  40e276:	ret    
  40e277:	retf   0x32b8
  40e27a:	pop    ss
  40e27b:	adc    esi,esi
  40e27d:	mov    ah,0xea
  40e27f:	out    0xdf,eax
  40e281:	(bad)  
  40e282:	mov    bh,0x4d
  40e284:	arpl   WORD PTR [eax],ax
  40e286:	jns    0x40e2d0
  40e288:	or     al,0xc6
  40e28a:	lahf   
  40e28b:	in     al,dx
  40e28c:	std    
  40e28d:	cmp    al,0xdc
  40e28f:	addr16 push 0x5eea2821
  40e295:	shr    DWORD PTR [esi-0x68ca54d2],1
  40e29b:	fisub  DWORD PTR [ecx]
  40e29d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e29e:	jbe    0x40e27a
  40e2a0:	and    edi,eax
  40e2a2:	fst    DWORD PTR [esi]
  40e2a4:	or     bl,BYTE PTR [ecx+0x3b7fac97]
  40e2aa:	mov    ah,0xd8
  40e2ac:	imul   eax,ebx,0x4e
  40e2af:	mov    bh,0x16
  40e2b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2b2:	pop    ecx
  40e2b3:	add    eax,0xa6b4cdf1
  40e2b8:	jge    0x40e2fb
  40e2ba:	dec    esp
  40e2bb:	dec    edi
  40e2bc:	add    ah,bh
  40e2be:	stos   DWORD PTR es:[edi],eax
  40e2bf:	cmp    dh,0xca
  40e2c2:	data16 adc ch,BYTE PTR cs:[ebx-0x7]
  40e2c7:	jg     0x40e32c
  40e2c9:	cli    
  40e2ca:	mov    dl,0xb1
  40e2cc:	jmp    0x40e2de
  40e2ce:	loop   0x40e27c
  40e2d0:	pop    ds
  40e2d1:	xor    DWORD PTR [esi-0x1159fe83],esi
  40e2d7:	ins    BYTE PTR es:[edi],dx
  40e2d8:	sbb    ch,BYTE PTR [edi-0x4b]
  40e2db:	ficom  WORD PTR ds:[ebp+0x71]
  40e2df:	and    DWORD PTR ds:0xf67b1455,edx
  40e2e5:	rcr    DWORD PTR [edx-0x61],cl
  40e2e8:	popa   
  40e2e9:	arpl   WORD PTR [ebp+0x0],ax
  40e2ec:	cmp    al,0xf6
  40e2ee:	das    
  40e2ef:	push   0x88cdd13c
  40e2f4:	pop    edx
  40e2f5:	sbb    al,0x95
  40e2f7:	fld    QWORD PTR [edi]
  40e2f9:	mov    ah,al
  40e2fb:	int3   
  40e2fc:	sbb    al,0x44
  40e2fe:	jbe    0x40e28a
  40e300:	xchg   esi,eax
  40e301:	into   
  40e302:	xor    BYTE PTR [eax+0x787d8e96],bh
  40e308:	add    al,0x92
  40e30a:	dec    edx
  40e30b:	push   0x7
  40e30d:	call   0xa14131b9
  40e312:	cdq    
  40e313:	(bad)  
  40e314:	mov    ecx,0xe118d070
  40e319:	call   0x5f0635a3
  40e31e:	adc    BYTE PTR [ebp+0x47d3f62d],dh
  40e324:	jg     0x40e2db
  40e326:	aaa    
  40e327:	adc    ecx,ebx
  40e329:	push   ebx
  40e32a:	fwait
  40e32b:	icebp  
  40e32c:	mov    eax,0x63fd534f
  40e331:	loopne 0x40e2c5
  40e333:	rdmsr  
  40e335:	mov    WORD PTR [eax],gs
  40e337:	sete   BYTE PTR [esi-0xe1c981f]
  40e33e:	stos   DWORD PTR es:[edi],eax
  40e33f:	lods   eax,DWORD PTR ds:[esi]
  40e340:	xlat   BYTE PTR ds:[ebx]
  40e341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e342:	jmp    0xdc7f:0xcac1d5a6
  40e349:	hlt    
  40e34a:	jnp    0x40e3ab
  40e34c:	out    dx,eax
  40e34d:	inc    esp
  40e34e:	add    al,0xe6
  40e350:	xchg   esp,eax
  40e351:	pop    ebx
  40e352:	mov    esp,0xab18b126
  40e357:	call   0xce31:0xbe579eb
  40e35e:	mov    edi,0x166f4433
  40e363:	push   es
  40e364:	retf   0xa642
  40e367:	mov    eax,fs:0xfdbe01bc
  40e36d:	mov    al,ds:0x2ce39098
  40e372:	cmp    DWORD PTR [ebp-0x53],0xcea0dc89
  40e379:	or     DWORD PTR [edx+0x4d139c8c],edx
  40e37f:	push   ecx
  40e380:	or     eax,0x77c54b9d
  40e385:	add    BYTE PTR [edi+ecx*2-0x65223f5c],0xb8
  40e38d:	mov    edx,0x9b73d391
  40e392:	shl    DWORD PTR [edi],cl
  40e394:	cli    
  40e395:	mov    edx,0x43d94f5d
  40e39a:	outs   dx,BYTE PTR ds:[si]
  40e39c:	jno    0x40e406
  40e39e:	fdiv   DWORD PTR [ebx]
  40e3a0:	inc    ebx
  40e3a1:	xchg   ebp,eax
  40e3a2:	int3   
  40e3a3:	ds es (bad) 
  40e3a7:	and    BYTE PTR [ebp+0x4010057a],ch
  40e3ad:	(bad)  
  40e3ae:	xlat   BYTE PTR ds:[ebx]
  40e3af:	mov    edi,edi
  40e3b1:	adc    DWORD PTR [ebp+0x56],edi
  40e3b4:	mov    esi,0x8b3dfce5
  40e3b9:	sub    dl,BYTE PTR [edi]
  40e3bb:	lock nop
  40e3bd:	in     al,0xf6
  40e3bf:	adc    ah,cl
  40e3c1:	cmp    al,0xc6
  40e3c3:	xchg   esp,eax
  40e3c4:	xor    BYTE PTR [ebx],0xdf
  40e3c7:	arpl   WORD PTR [edi+ebp*1],sp
  40e3ca:	shl    BYTE PTR gs:[ebp-0x1e],1
  40e3ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3cf:	mov    edi,0x1c64174f
  40e3d4:	pushf  
  40e3d5:	dec    edi
  40e3d6:	adc    BYTE PTR [ecx-0x6c071d6a],cl
  40e3dc:	mov    ds:0x195ee271,eax
  40e3e1:	xor    eax,0x9a941255
  40e3e6:	(bad)  
  40e3e7:	jne    0x40e412
  40e3e9:	ds ins BYTE PTR es:[edi],dx
  40e3eb:	inc    ecx
  40e3ec:	jnp    0x40e3e2
  40e3ee:	gs aas 
  40e3f0:	xchg   ebx,eax
  40e3f1:	pop    esi
  40e3f2:	mov    ecx,DWORD PTR [esi+0x1434805d]
  40e3f8:	xchg   esi,eax
  40e3f9:	add    esp,DWORD PTR es:[edi-0x7e]
  40e3fd:	call   0xa356bac6
  40e402:	retf   
  40e403:	bound  esp,QWORD PTR [edx+0x454546a7]
  40e409:	mov    edi,0x13df3dc2
  40e40e:	hlt    
  40e40f:	pop    eax
  40e410:	cmc    
  40e411:	pop    es
  40e412:	mov    edi,0x236e646a
  40e417:	je     0x40e3bd
  40e419:	xchg   edi,eax
  40e41a:	sbb    al,0x6a
  40e41c:	and    al,bl
  40e41e:	mov    al,0x87
  40e420:	mov    edi,0x829b3f9a
  40e425:	repnz add BYTE PTR ds:0xf56501e1,0xdc
  40e42d:	adc    eax,0xaf0caea0
  40e432:	inc    ebx
  40e433:	xor    BYTE PTR fs:0x80cdf3c9,bh
  40e43a:	inc    edi
  40e43b:	xchg   ecx,eax
  40e43c:	ss xor eax,0x7f4cb1cd
  40e442:	test   BYTE PTR [eax+0x26590ee8],ch
  40e448:	popa   
  40e449:	jge    0x40e3e5
  40e44b:	mov    ebp,0xc0f4a118
  40e450:	neg    BYTE PTR [edx-0x37fb18e6]
  40e456:	mov    dh,0xde
  40e458:	imul   BYTE PTR [eax+edx*2-0x31]
  40e45c:	ds lock into 
  40e45f:	fs icebp 
  40e461:	sbb    DWORD PTR [esi],esi
  40e463:	dec    eax
  40e464:	lds    ebx,FWORD PTR [ebx]
  40e466:	nop    esp
  40e469:	shr    ebp,cl
  40e46b:	jb     0x40e4d8
  40e46d:	inc    esi
  40e46e:	sub    BYTE PTR [ebx],0x2b
  40e471:	mov    ebx,0xc059a70c
  40e476:	sbb    BYTE PTR [esi+edx*1],cl
  40e479:	dec    edx
  40e47a:	xor    esi,eax
  40e47c:	(bad)  
  40e47d:	push   cs
  40e47e:	outs   dx,BYTE PTR ds:[esi]
  40e47f:	push   0x62
  40e481:	inc    ebx
  40e482:	mov    bl,0xb4
  40e484:	pop    edx
  40e485:	xor    bh,BYTE PTR [ecx+0x4017d079]
  40e48b:	xchg   ebx,eax
  40e48c:	sbb    eax,0x9853c5e
  40e491:	cs jl  0x40e4d9
  40e494:	dec    edx
  40e495:	xor    edi,DWORD PTR [ecx]
  40e497:	push   ss
  40e498:	aad    0x8b
  40e49a:	je     0x40e4cd
  40e49c:	loope  0x40e4e3
  40e49e:	hlt    
  40e49f:	pop    es
  40e4a0:	repz pop ecx
  40e4a2:	enter  0x2523,0xcc
  40e4a6:	adc    BYTE PTR [ebx+0x56e88a3d],cl
  40e4ac:	out    dx,eax
  40e4ad:	aam    0x3d
  40e4af:	xor    esi,DWORD PTR [eax+eax*1]
  40e4b2:	imul   BYTE PTR [eax+0x46]
  40e4b5:	sub    esi,DWORD PTR [ecx]
  40e4b7:	inc    ebx
  40e4b8:	or     esp,0xffffffe1
  40e4bb:	fwait
  40e4bc:	jo     0x40e464
  40e4be:	jp     0x40e4be
  40e4c0:	loope  0x40e4c0
  40e4c2:	enter  0xcf5c,0x58
  40e4c6:	retf   0x61c8
  40e4c9:	aam    0x9e
  40e4cb:	sub    eax,0xd5907ef8
  40e4d0:	inc    ecx
  40e4d1:	push   ss
  40e4d2:	adc    al,0xb1
  40e4d4:	test   eax,0xafd65e2e
  40e4d9:	pop    ds
  40e4da:	call   0x60bc:0x2fe1275e
  40e4e1:	sub    eax,0x7251cd9b
  40e4e6:	fs push es
  40e4e8:	loopne 0x40e49d
  40e4ea:	fsubr  DWORD PTR fs:[ebp+eax*2+0x2afee273]
  40e4f2:	jl     0x40e4b4
  40e4f4:	and    bh,dl
  40e4f6:	fst    DWORD PTR [ebx]
  40e4f8:	rcr    BYTE PTR [ecx],cl
  40e4fa:	loop   0x40e4e8
  40e4fc:	mov    ecx,0x23b5425c
  40e501:	popa   
  40e502:	and    WORD PTR [edi+0x465161fb],bp
  40e509:	outs   dx,BYTE PTR ds:[esi]
  40e50a:	jbe    0x40e51e
  40e50c:	and    al,al
  40e50e:	push   0xf9d2e7dd
  40e513:	mov    cl,0x49
  40e515:	sti    
  40e516:	ret    0xa529
  40e519:	lds    ebp,FWORD PTR [edx+0x414f7f38]
  40e51f:	and    edi,edi
  40e521:	mov    ecx,0xedb7c180
  40e526:	sbb    edx,esp
  40e528:	and    bl,al
  40e52a:	aas    
  40e52b:	or     ch,BYTE PTR [edx*1+0x61454cd7]
  40e532:	cld    
  40e533:	jecxz  0x40e551
  40e535:	clc    
  40e536:	fsubr  st(7),st
  40e538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e539:	icebp  
  40e53a:	aad    0xb7
  40e53c:	nop
  40e53d:	or     al,0xc8
  40e53f:	sbb    eax,0x286a8d89
  40e544:	(bad)  
  40e545:	fmul   QWORD PTR [ebx+0x3d97e15c]
  40e54b:	or     ebp,edi
  40e54d:	xchg   ecx,eax
  40e54e:	push   esi
  40e54f:	pusha  
  40e550:	xchg   esi,eax
  40e551:	outs   dx,DWORD PTR ds:[esi]
  40e552:	pop    esp
  40e553:	jmp    0x44899961
  40e558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e559:	mov    dl,0x8f
  40e55b:	adc    al,BYTE PTR [edi-0x4dcae137]
  40e561:	jnp    0x40e5ad
  40e563:	jle    0x40e532
  40e565:	pextrw edx,(bad),0xc5
  40e567:	adc    ebx,esi
  40e569:	aas    
  40e56a:	adc    eax,0xad7366d8
  40e56f:	inc    ebx
  40e570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e571:	add    eax,0x950b2d60
  40e576:	in     eax,0x3f
  40e578:	ss (bad) 
  40e57a:	push   eax
  40e57b:	pop    ds
  40e57c:	fimul  DWORD PTR [esi+0x3c]
  40e57f:	or     esi,ecx
  40e581:	retf   
  40e582:	std    
  40e583:	mov    ds:0xda67431f,eax
  40e588:	out    0x22,eax
  40e58a:	icebp  
  40e58b:	push   ebx
  40e58c:	pop    ebx
  40e58d:	or     eax,0x763b6e35
  40e592:	fild   WORD PTR [ecx]
  40e594:	inc    edi
  40e595:	std    
  40e596:	nop
  40e597:	inc    ecx
  40e598:	test   al,0x4c
  40e59a:	(bad)  
  40e59b:	std    
  40e59c:	loop   0x40e5ff
  40e59e:	add    ebp,DWORD PTR ds:0x14b2db01
  40e5a4:	sti    
  40e5a5:	pop    ebx
  40e5a6:	jo     0x40e564
  40e5a8:	dec    edi
  40e5a9:	test   al,0x19
  40e5ab:	cmp    al,0x19
  40e5ad:	aas    
  40e5ae:	and    edx,DWORD PTR [esi+0x2]
  40e5b1:	shr    edx,0x86
  40e5b4:	mov    esp,0x81377897
  40e5b9:	mul    edi
  40e5bb:	mov    ch,0xe3
  40e5bd:	(bad)  
  40e5be:	out    0x99,al
  40e5c0:	and    ch,dl
  40e5c2:	jmp    DWORD PTR cs:[ecx]
  40e5c5:	scas   al,BYTE PTR es:[edi]
  40e5c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5c7:	sbb    eax,0x1dde1be3
  40e5cc:	adc    eax,0xf0a5ef07
  40e5d1:	scas   eax,DWORD PTR es:[edi]
  40e5d2:	ins    DWORD PTR es:[edi],dx
  40e5d3:	xchg   DWORD PTR [esp+edi*4],esp
  40e5d6:	js     0x40e602
  40e5d8:	mov    edi,esp
  40e5da:	mov    esp,0x8ae17dab
  40e5df:	or     edi,esp
  40e5e1:	adc    eax,0xb429a3c9
  40e5e6:	pop    esp
  40e5e7:	cmp    eax,0x6d60a930
  40e5ec:	iretw  
  40e5ee:	dec    ebp
  40e5ef:	add    BYTE PTR [ecx+ebx*8],0x1a
  40e5f3:	cmp    BYTE PTR [edi],bl
  40e5f5:	mov    BYTE PTR [ebx+0x57],ah
  40e5f8:	inc    ecx
  40e5f9:	inc    ebp
  40e5fa:	sti    
  40e5fb:	lock jnp 0x40e648
  40e5fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ff:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40e601:	and    al,0xc
  40e603:	ss inc ebp
  40e605:	mov    bl,0x3b
  40e607:	add    dh,BYTE PTR [edx-0x3be2777c]
  40e60d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e60e:	and    edx,DWORD PTR [eax+0x422e3841]
  40e614:	pop    esi
  40e615:	or     al,BYTE PTR [eax]
  40e617:	add    esi,DWORD PTR [eax-0x7aee48e3]
  40e61d:	push   ss
  40e61e:	cmp    al,ch
  40e620:	nop
  40e621:	in     eax,0x7e
  40e623:	mov    bl,0x70
  40e625:	pusha  
  40e626:	mov    bh,0x9c
  40e628:	outs   dx,BYTE PTR ds:[esi]
  40e629:	test   BYTE PTR [ecx+0x4d],bh
  40e62c:	dec    ecx
  40e62d:	push   ebp
  40e62e:	mov    ebx,0x60ed1417
  40e633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e634:	jle    0x40e5e7
  40e636:	cmc    
  40e637:	and    BYTE PTR [ebx+0x731a592e],dl
  40e63d:	inc    edi
  40e63e:	ds ss dec ecx
  40e641:	and    ebx,0xffffffd5
  40e644:	in     eax,0x36
  40e646:	push   ds
  40e647:	dec    esp
  40e648:	popa   
  40e649:	(bad)  
  40e64a:	sbb    al,0x20
  40e64c:	daa    
  40e64d:	ins    BYTE PTR es:[edi],dx
  40e64e:	pop    edx
  40e64f:	icebp  
  40e650:	fwait
  40e651:	jb     0x40e5d7
  40e653:	and    ax,0x669a
  40e657:	shr    ebp,cl
  40e659:	scas   eax,DWORD PTR es:[edi]
  40e65a:	pusha  
  40e65b:	mov    ds:0x6c1dc91f,eax
  40e660:	aam    0xd0
  40e662:	pusha  
  40e663:	outs   dx,DWORD PTR ds:[esi]
  40e664:	mov    eax,gs:0x239dcf15
  40e66a:	mov    edx,0x74423b61
  40e66f:	cmp    eax,0x99b379d2
  40e674:	xor    ebx,DWORD PTR [edx+esi*1-0x23]
  40e678:	sbb    al,0xea
  40e67a:	(bad)  [esi]
  40e67c:	sub    DWORD PTR [ebx-0x5e],edx
  40e67f:	out    0x2a,al
  40e681:	jl     0x40e6a2
  40e683:	popa   
  40e684:	(bad)  
  40e685:	in     eax,0xf
  40e687:	and    ch,bh
  40e689:	fisub  WORD PTR [ecx+0x24]
  40e68c:	popa   
  40e68d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e68e:	push   esp
  40e68f:	push   ebx
  40e690:	stos   DWORD PTR es:[edi],eax
  40e691:	xor    edx,DWORD PTR [eax]
  40e693:	jns    0x40e629
  40e695:	and    BYTE PTR [edi],bl
  40e697:	out    0x13,al
  40e699:	xchg   esp,eax
  40e69a:	sub    DWORD PTR [edi+0x32],esi
  40e69d:	push   ebp
  40e69e:	adc    al,0x48
  40e6a0:	push   0x34
  40e6a2:	lahf   
  40e6a3:	and    esp,ecx
  40e6a5:	adc    eax,0x746b4b24
  40e6aa:	or     eax,0x9a18d1c4
  40e6af:	into   
  40e6b0:	xor    eax,0x32cf72ef
  40e6b5:	int3   
  40e6b6:	clc    
  40e6b7:	adc    eax,0x815543a5
  40e6bc:	test   ch,ch
  40e6be:	sbb    edi,DWORD PTR [esi]
  40e6c0:	(bad)  
  40e6c1:	cmp    eax,0x372a6e18
  40e6c6:	mov    dh,BYTE PTR [esi-0x4]
  40e6c9:	in     al,0xb6
  40e6cb:	(bad)  
  40e6cc:	and    edx,DWORD PTR [esi+edi*4-0x2]
  40e6d0:	cmp    BYTE PTR [esi],0x65
  40e6d3:	xchg   edx,eax
  40e6d4:	out    dx,al
  40e6d5:	cwde   
  40e6d6:	jecxz  0x40e6aa
  40e6d8:	jnp    0x40e70b
  40e6da:	pop    ebx
  40e6db:	dec    ah
  40e6dd:	jle    0x40e6fe
  40e6df:	or     al,0xd2
  40e6e1:	mov    eax,0xbb84d08b
  40e6e6:	test   al,0x59
  40e6e8:	bound  esp,QWORD PTR [edi-0x1bb9274d]
  40e6ee:	mov    eax,ds:0xe68bf96e
  40e6f3:	gs xor ah,dh
  40e6f6:	adc    bh,BYTE PTR [ecx+0x78]
  40e6f9:	retf   0x934b
  40e6fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6fd:	jb     0x40e68a
  40e6ff:	and    bh,BYTE PTR [ebp+ebp*1+0x15]
  40e703:	add    al,0x47
  40e705:	and    cl,BYTE PTR [edi+edx*8-0x29]
  40e709:	or     BYTE PTR [ebx+0x6762c799],al
  40e70f:	cdq    
  40e710:	rol    DWORD PTR [esi*2-0x797d8248],1
  40e717:	test   DWORD PTR [ecx+eax*2-0x2f],ebp
  40e71b:	xchg   edx,eax
  40e71c:	adc    BYTE PTR [edi-0x6d],bh
  40e71f:	adc    DWORD PTR [esi+0x3b8721e7],ecx
  40e725:	xchg   ecx,eax
  40e726:	les    ebx,FWORD PTR [edx+0x605863e6]
  40e72c:	ins    BYTE PTR es:[edi],dx
  40e72d:	ret    0xc5eb
  40e730:	dec    ebx
  40e731:	adc    DWORD PTR [edi+0x73],0x92c5fc14
  40e738:	add    bh,dl
  40e73a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e73b:	jno    0x40e756
  40e73d:	(bad)  
  40e73e:	mov    ah,0x2a
  40e740:	lahf   
  40e741:	imul   edx,DWORD PTR [esi-0x27],0xffffff84
  40e745:	or     al,0x8a
  40e747:	pop    esi
  40e748:	call   0x57b9:0x46111338
  40e74f:	sub    DWORD PTR [ebx],0xd8514095
  40e755:	(bad)  
  40e756:	out    dx,eax
  40e757:	in     eax,dx
  40e758:	fucom  st(1)
  40e75a:	dec    esp
  40e75b:	std    
  40e75c:	test   BYTE PTR [esi+0xd3cc240],bl
  40e762:	sbb    ah,dl
  40e764:	das    
  40e765:	adc    bh,BYTE PTR [esi-0x63]
  40e768:	mov    edx,0xabd08b5c
  40e76d:	std    
  40e76e:	arpl   WORD PTR [ebp+0x29],ax
  40e771:	dec    edi
  40e772:	jecxz  0x40e735
  40e774:	test   eax,0x60d9dbfd
  40e779:	sbb    ebx,DWORD PTR ds:0x1ec6252e
  40e77f:	push   0xffffffe5
  40e781:	cmc    
  40e782:	push   es
  40e783:	adc    eax,0x4f4d9df1
  40e788:	and    bl,BYTE PTR [edx-0x5e]
  40e78b:	jbe    0x40e7b0
  40e78d:	retf   
  40e78e:	xchg   edi,eax
  40e78f:	scas   al,BYTE PTR es:[edi]
  40e790:	hlt    
  40e791:	cmp    DWORD PTR [edx],0x7693b031
  40e797:	xchg   ecx,eax
  40e798:	mov    dh,0x6d
  40e79a:	rol    DWORD PTR [ebx-0x22461efb],cl
  40e7a0:	dec    edx
  40e7a1:	xor    edi,DWORD PTR [edx+0x55]
  40e7a4:	(bad)  
  40e7a5:	std    
  40e7a6:	loope  0x40e7e4
  40e7a8:	sbb    edi,DWORD PTR [ecx+0x548462bd]
  40e7ae:	cmp    eax,0x8c51e0e5
  40e7b3:	add    esp,edi
  40e7b5:	jbe    0x40e812
  40e7b7:	or     BYTE PTR [ebp+0x59],ah
  40e7ba:	call   0x559933a7
  40e7bf:	rol    DWORD PTR [esi-0x68],1
  40e7c2:	cmp    edi,DWORD PTR [ebx+ebx*1+0x55]
  40e7c6:	add    DWORD PTR [eax+eiz*2-0x40],0xb98df636
  40e7ce:	mov    edx,0xa334709a
  40e7d3:	(bad)  
  40e7d6:	sahf   
  40e7d7:	sbb    BYTE PTR fs:[edi],dh
  40e7da:	stc    
  40e7db:	pop    ebp
  40e7dc:	dec    BYTE PTR cs:[eax+0x3c]
  40e7e0:	or     dh,ch
  40e7e2:	cdq    
  40e7e3:	jae    0x40e850
  40e7e5:	mov    esi,0x9549d815
  40e7ea:	dec    edx
  40e7eb:	add    esp,DWORD PTR [ebx]
  40e7ed:	test   DWORD PTR [ebp-0x1e7c913],edi
  40e7f3:	imul   edi,eax,0x630cb8cd
  40e7f9:	xchg   ebx,eax
  40e7fa:	lds    ebp,FWORD PTR [ebx-0x57be330c]
  40e800:	push   eax
  40e801:	test   eax,0xefa95160
  40e806:	xchg   esi,eax
  40e807:	push   ebp
  40e808:	lahf   
  40e809:	xor    esi,DWORD PTR [eax+eiz*4-0x5df8e79b]
  40e810:	and    BYTE PTR [edx-0x6d],0x1c
  40e814:	enter  0x4999,0x3a
  40e818:	or     al,0xf9
  40e81a:	cmp    esi,DWORD PTR [eax]
  40e81c:	add    al,ch
  40e81e:	mov    bh,0x1f
  40e820:	popf   
  40e821:	push   cs
  40e822:	jno    0x40e7b0
  40e824:	adc    esp,DWORD PTR [edx+0x53f79879]
  40e82a:	and    DWORD PTR [ebp+0x1ec723bf],ebp
  40e830:	in     eax,0x72
  40e832:	xor    eax,0xd92c414a
  40e837:	mov    ecx,0x20d11b1e
  40e83c:	mov    ebp,0x367151d5
  40e841:	ret    
  40e842:	je     0x40e8a0
  40e844:	jecxz  0x40e896
  40e846:	jge    0x40e7f4
  40e848:	shr    DWORD PTR [ecx],cl
  40e84a:	dec    ecx
  40e84b:	int    0x6b
  40e84d:	xchg   edi,eax
  40e84e:	pop    esp
  40e84f:	jmp    0xb8ea64c4
  40e854:	dec    esp
  40e855:	jp     0x40e824
  40e857:	or     BYTE PTR [esi+0x3],ch
  40e85a:	cmc    
  40e85b:	or     ebx,DWORD PTR [ebx-0x381ee3bf]
  40e861:	(bad)  
  40e862:	xchg   ebx,eax
  40e863:	sub    DWORD PTR [edi],ebx
  40e865:	leave  
  40e866:	or     eax,0x4b7713df
  40e86b:	retf   0x846
  40e86e:	dec    esi
  40e86f:	mov    bl,0x33
  40e871:	push   edx
  40e872:	lods   eax,DWORD PTR ds:[esi]
  40e873:	mov    ebx,0x52aa30af
  40e878:	lds    edi,FWORD PTR [ebx]
  40e87a:	mov    ecx,DWORD PTR [esi+0x3d]
  40e87d:	push   eax
  40e87e:	lods   al,BYTE PTR ds:[esi]
  40e87f:	popf   
  40e880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e881:	(bad)  [eax-0x5ecb6962]
  40e887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e888:	aad    0x93
  40e88a:	jbe    0x40e82a
  40e88c:	jo     0x40e8d9
  40e88e:	pusha  
  40e88f:	jecxz  0x40e8ba
  40e891:	jns    0x40e851
  40e893:	jae    0x40e87b
  40e895:	vmaxsd xmm0,xmm6,QWORD PTR [eax-0x525d5e1b]
  40e89d:	es inc ebx
  40e89f:	ja     0x40e8d1
  40e8a1:	push   ebx
  40e8a2:	aam    0x3d
  40e8a4:	adc    BYTE PTR [ebx],dl
  40e8a6:	xor    bh,BYTE PTR [edi+0x7b]
  40e8a9:	pop    es
  40e8aa:	call   0x66d82f54
  40e8af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b0:	mov    ecx,0x88922507
  40e8b5:	xchg   edx,eax
  40e8b6:	jns    0x40e85b
  40e8b8:	cmc    
  40e8b9:	cmp    BYTE PTR [ebx+ecx*1],ah
  40e8bc:	mov    edx,0xd6dd1084
  40e8c1:	cwde   
  40e8c2:	ins    BYTE PTR es:[edi],dx
  40e8c3:	cdq    
  40e8c4:	test   eax,0xb778c890
  40e8c9:	fs loop 0x40e8e0
  40e8cc:	fdiv   st,st(3)
  40e8ce:	pop    esp
  40e8cf:	or     al,bh
  40e8d1:	les    esp,FWORD PTR [esi]
  40e8d3:	adc    esp,DWORD PTR [edi+ebx*4-0x18d8439d]
  40e8da:	or     edx,DWORD PTR [ebx]
  40e8dc:	xor    DWORD PTR [eax],edx
  40e8de:	push   edi
  40e8df:	pop    ebp
  40e8e0:	jb     0x40e894
  40e8e2:	lods   eax,DWORD PTR ds:[esi]
  40e8e3:	sbb    BYTE PTR [eax-0x1a],al
  40e8e6:	ror    DWORD PTR [ecx+0x71686cd9],cl
  40e8ec:	mov    ebx,DWORD PTR [ecx+0xd85e8c5]
  40e8f2:	dec    ecx
  40e8f3:	loop   0x40e8d4
  40e8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8f6:	cmp    ah,dl
  40e8f8:	or     al,0xb5
  40e8fa:	or     ax,0xfce2
  40e8fe:	lods   al,BYTE PTR ds:[esi]
  40e8ff:	add    al,0x81
  40e901:	inc    eax
  40e902:	iret   
  40e903:	pop    ebx
  40e904:	cs xchg ebp,eax
  40e906:	and    eax,0xf3b82f22
  40e90b:	cmp    DWORD PTR [edi-0x19],eax
  40e90e:	or     eax,DWORD PTR [esi-0x1f]
  40e911:	inc    edx
  40e912:	sbb    eax,0x528308ce
  40e917:	push   esi
  40e918:	push   ss
  40e919:	(bad)  
  40e91a:	call   DWORD PTR [edi]
  40e91c:	push   ebx
  40e91d:	nop
  40e91e:	cs add esp,ebx
  40e921:	sbb    eax,0x97783412
  40e926:	or     BYTE PTR [edi+0x19d2628c],al
  40e92c:	shl    edx,1
  40e92e:	cmc    
  40e92f:	inc    esp
  40e930:	cmp    ebp,edi
  40e932:	je     0x40e906
  40e934:	pusha  
  40e935:	dec    ebx
  40e936:	adc    DWORD PTR [edi+ecx*4],edx
  40e939:	hlt    
  40e93a:	and    eax,0xb82ec98e
  40e93f:	sar    BYTE PTR [edx+eax*4-0x59f2743d],0xc3
  40e947:	add    dl,0x1e
  40e94a:	out    dx,eax
  40e94b:	jno    0x40e906
  40e94d:	adc    ah,BYTE PTR [edi-0x232b9eee]
  40e953:	jb     0x40e97a
  40e955:	pop    ebp
  40e956:	jmp    0xd742cdf7
  40e95b:	push   ss
  40e95c:	xor    bl,BYTE PTR [ebp+0x54b0bae6]
  40e962:	lea    edx,[ebx-0x58]
  40e965:	sti    
  40e966:	or     BYTE PTR ds:[edx+0x5b],dh
  40e96a:	cmp    al,0x6d
  40e96c:	xchg   esp,eax
  40e96d:	out    0x2e,al
  40e96f:	jmp    0x40e954
  40e971:	(bad)  
  40e972:	rol    bh,1
  40e974:	and    eax,0xca69095e
  40e979:	push   ds
  40e97a:	inc    edi
  40e97b:	inc    edx
  40e97c:	cmp    DWORD PTR [esi],esp
  40e97e:	push   0x3b
  40e980:	xlat   BYTE PTR ds:[ebx]
  40e981:	add    eax,0x6f573fe0
  40e986:	shr    DWORD PTR [edi-0x77],1
  40e989:	push   ds
  40e98a:	mov    BYTE PTR [ebx],0xe3
  40e98d:	mov    esp,DWORD PTR [eax-0x43]
  40e990:	mov    bl,bl
  40e992:	shl    ecx,1
  40e994:	rol    DWORD PTR [edi-0x59a1634b],0x65
  40e99b:	dec    ecx
  40e99c:	stc    
  40e99d:	jnp    0x40e931
  40e99f:	add    DWORD PTR ds:[ecx+0x7e],eax
  40e9a3:	pop    edi
  40e9a4:	stc    
  40e9a5:	jg     0x40e948
  40e9a7:	cmp    al,0x10
  40e9a9:	arpl   WORD PTR [ecx],sp
  40e9ab:	(bad)  
  40e9ac:	out    dx,al
  40e9ad:	sar    DWORD PTR [eax-0x2a5d8f1b],0xf6
  40e9b4:	pop    ebx
  40e9b5:	xchg   ecx,eax
  40e9b6:	adc    DWORD PTR [eax-0xbd71bfc],0x831e233b
  40e9c0:	add    esi,DWORD PTR [edx-0x68]
  40e9c3:	retf   0xf2ae
  40e9c6:	dec    ebx
  40e9c7:	add    eax,0xaddde2e0
  40e9cc:	leave  
  40e9cd:	stos   BYTE PTR es:[edi],al
  40e9ce:	ror    BYTE PTR [edx+edi*2+0x43ac85ac],0x4
  40e9d6:	inc    ebp
  40e9d7:	popf   
  40e9d8:	sahf   
  40e9d9:	cmp    BYTE PTR [esi+eiz*1+0x42e00eb5],dh
  40e9e0:	pop    eax
  40e9e1:	js     0x40ea14
  40e9e3:	inc    ebp
  40e9e4:	fsubr  QWORD PTR ds:0x955f3552
  40e9ea:	xor    ecx,DWORD PTR [eax-0x5b7d021a]
  40e9f0:	sub    al,0xa5
  40e9f2:	stos   DWORD PTR es:[edi],eax
  40e9f3:	test   BYTE PTR ss:[ebx+0xfecb5],al
  40e9fa:	repz jne 0x40ea1c
  40e9fd:	pop    esi
  40e9fe:	scas   eax,DWORD PTR es:[edi]
  40e9ff:	inc    esi
  40ea00:	mov    ebx,0x19a3c4ad
  40ea05:	inc    edi
  40ea06:	mov    edx,DWORD PTR [eax+0x55]
  40ea09:	sbb    ch,BYTE PTR [edi-0x600f05e1]
  40ea0f:	fst    DWORD PTR [ecx+0x1e]
  40ea12:	cmp    eax,0x625e439e
  40ea17:	sub    DWORD PTR [esi-0x701c6e26],esi
  40ea1d:	xchg   ecx,eax
  40ea1e:	(bad)  
  40ea1f:	rol    esp,1
  40ea21:	daa    
  40ea22:	rol    DWORD PTR [edx+0x54],0xdd
  40ea26:	rdtsc  
  40ea28:	aaa    
  40ea29:	lock nop
  40ea2b:	sub    eax,0x4018f645
  40ea30:	mov    bh,0x43
  40ea32:	mov    esp,0xc1c50747
  40ea37:	xchg   esp,eax
  40ea38:	jbe    0x40eab8
  40ea3a:	jecxz  0x40e9e2
  40ea3c:	sbb    cl,cl
  40ea3e:	fwait
  40ea3f:	cmp    bl,BYTE PTR [esi]
  40ea41:	(bad)  
  40ea42:	mov    bl,0x48
  40ea44:	call   0x1310:0x68208102
  40ea4b:	in     eax,dx
  40ea4c:	mov    cl,0x5f
  40ea4e:	bound  edi,QWORD PTR ds:[esi+0x3b]
  40ea52:	mov    edi,0x11f3457b
  40ea57:	xchg   bh,cl
  40ea59:	das    
  40ea5a:	sbb    al,0x68
  40ea5c:	aad    0x65
  40ea5e:	test   eax,0xf9292eca
  40ea63:	sub    al,0xe5
  40ea65:	xor    DWORD PTR [edx],edi
  40ea67:	sub    BYTE PTR [edi-0x3f6a17a5],0x3d
  40ea6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea6f:	mov    ds:0x459633f5,al
  40ea74:	adc    al,0x55
  40ea76:	xchg   ebx,eax
  40ea77:	mov    WORD PTR [edi+0x70245c5c],es
  40ea7d:	test   ch,0x31
  40ea80:	and    BYTE PTR [eax],ch
  40ea82:	nop
  40ea83:	popf   
  40ea84:	leave  
  40ea85:	neg    DWORD PTR [eax]
  40ea87:	test   DWORD PTR [ebx+edx*1],edx
  40ea8a:	sbb    eax,esi
  40ea8c:	lds    eax,FWORD PTR [edi+0x0]
  40ea8f:	push   edx
  40ea90:	cwde   
  40ea91:	and    al,0xb7
  40ea93:	enter  0x4287,0x76
  40ea97:	addr16 loope 0x40ead1
  40ea9a:	mov    ah,ch
  40ea9c:	rcl    edx,cl
  40ea9e:	add    ecx,DWORD PTR [ecx]
  40eaa0:	je     0x40eaf4
  40eaa2:	neg    BYTE PTR ds:0x23d66ff6
  40eaa8:	loope  0x40eb0a
  40eaaa:	mov    esi,0x9650a226
  40eaaf:	lods   eax,DWORD PTR ds:[esi]
  40eab0:	pop    ebp
  40eab1:	icebp  
  40eab2:	clc    
  40eab3:	cmp    ebx,edi
  40eab5:	leave  
  40eab6:	scas   eax,DWORD PTR es:[edi]
  40eab7:	jo     0x40ea97
  40eab9:	pop    ecx
  40eaba:	test   DWORD PTR [eax],edi
  40eabc:	scas   al,BYTE PTR es:[edi]
  40eabd:	mov    eax,0x35dd9633
  40eac2:	sub    eax,ecx
  40eac4:	xor    al,0x34
  40eac6:	or     BYTE PTR [eax-0x70],bh
  40eac9:	mov    ch,0x50
  40eacb:	mov    eax,ds:0x77b5401c
  40ead0:	sar    DWORD PTR [esi-0x6ed2b428],0xfa
  40ead7:	xor    BYTE PTR [edx+0x4e],dh
  40eada:	sbb    bl,BYTE PTR [edi+0x4de998f]
  40eae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae1:	jnp    0x40eb02
  40eae3:	aad    0xce
  40eae5:	add    ch,BYTE PTR [edi+0x271f612]
  40eaeb:	or     al,0xa6
  40eaed:	jle    0x40eadd
  40eaef:	adc    ecx,esp
  40eaf1:	mov    al,0xda
  40eaf3:	or     BYTE PTR [edx],ah
  40eaf5:	fwait
  40eaf6:	stos   DWORD PTR es:[edi],eax
  40eaf7:	(bad)  
  40eaf8:	jl     0x40eae2
  40eafa:	ret    0x55f9
  40eafd:	aaa    
  40eafe:	data16 scas al,BYTE PTR es:[edi]
  40eb00:	mov    bl,0x6f
  40eb02:	mov    ebx,0x3bce04e0
  40eb07:	rcl    DWORD PTR [ecx],1
  40eb09:	pop    eax
  40eb0a:	sti    
  40eb0b:	sub    al,0x4
  40eb0d:	repnz loope 0x40eb7d
  40eb10:	mov    ds:0x216cb202,al
  40eb15:	sahf   
  40eb16:	call   0xb7e0:0x5345d013
  40eb1d:	in     al,dx
  40eb1e:	xchg   ebx,eax
  40eb1f:	lods   al,BYTE PTR ds:[esi]
  40eb20:	xchg   esi,eax
  40eb21:	xchg   ecx,eax
  40eb22:	pop    ss
  40eb23:	push   0xffffffbf
  40eb25:	or     DWORD PTR [edi],0x6d
  40eb28:	fist   DWORD PTR [ebp+0x36]
  40eb2b:	cmp    DWORD PTR [edx],0x44b0969f
  40eb31:	inc    esi
  40eb32:	jmp    0xa0172921
  40eb37:	dec    edx
  40eb38:	pop    ecx
  40eb39:	dec    eax
  40eb3a:	mov    ebp,0xc2c3e5e6
  40eb3f:	(bad)  
  40eb40:	push   edi
  40eb41:	dec    esp
  40eb42:	inc    ebp
  40eb43:	add    al,0xf7
  40eb45:	mov    BYTE PTR [edi],ch
  40eb47:	dec    ecx
  40eb48:	lods   eax,DWORD PTR ds:[esi]
  40eb49:	mul    BYTE PTR [ebx+0x7e]
  40eb4c:	inc    esp
  40eb4d:	addr16 ret 
  40eb4f:	mov    esp,0x2d7691ff
  40eb54:	push   ebx
  40eb55:	shl    BYTE PTR ds:0x3dee497f,0x8d
  40eb5c:	jge    0x40eb74
  40eb5e:	(bad)  
  40eb5f:	jmp    0x8fcc:0x76a0893f
  40eb66:	push   ss
  40eb67:	xchg   esi,eax
  40eb68:	cli    
  40eb69:	shl    DWORD PTR [esp+edi*4],1
  40eb6c:	aam    0x21
  40eb6e:	jmp    0x40eb4b
  40eb70:	xchg   BYTE PTR [edi+eiz*8+0x11],ch
  40eb74:	cmp    al,0x36
  40eb76:	inc    edi
  40eb77:	popa   
  40eb78:	aaa    
  40eb79:	fnsave [eax+0x68]
  40eb7c:	push   ds
  40eb7d:	push   0xffffff8f
  40eb7f:	stos   DWORD PTR es:[edi],eax
  40eb80:	and    ch,ch
  40eb82:	gs mov eax,0xa0b0ea9d
  40eb88:	stos   DWORD PTR es:[edi],eax
  40eb89:	hlt    
  40eb8a:	imul   ecx,DWORD PTR [eax],0xfd485152
  40eb90:	cmp    DWORD PTR [ebx],esp
  40eb92:	adc    edi,DWORD PTR [edx+0x4de07fe6]
  40eb98:	dec    ecx
  40eb99:	adc    DWORD PTR [eax-0x77171039],esp
  40eb9f:	fsubr  QWORD PTR [ebp+0x19]
  40eba2:	(bad)  
  40eba5:	push   cs
  40eba6:	ficomp DWORD PTR [ecx]
  40eba8:	cmp    edi,DWORD PTR [edx+edi*1-0x20184da9]
  40ebaf:	xor    dh,dl
  40ebb1:	push   eax
  40ebb2:	xchg   edx,eax
  40ebb4:	mov    eax,0x60cd8c06
  40ebb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebba:	xchg   eax,edx
  40ebbc:	xor    eax,DWORD PTR [esi+0x34]
  40ebbf:	push   esp
  40ebc0:	fidiv  WORD PTR ss:[edx-0x3fcc88c9]
  40ebc7:	adc    ch,BYTE PTR [edx-0x3d]
  40ebca:	add    al,0x63
  40ebcc:	out    0x17,al
  40ebce:	cwde   
  40ebcf:	mov    cl,0xf8
  40ebd1:	mov    ds:0xec7da3c8,al
  40ebd6:	push   ss
  40ebd7:	fs mov esp,0xf04e1eb4
  40ebdd:	sti    
  40ebde:	jmp    0x51de1143
  40ebe3:	icebp  
  40ebe4:	jne    0x40eba5
  40ebe6:	mov    ds:0x29f269e2,al
  40ebeb:	dec    edi
  40ebec:	les    ecx,FWORD PTR [edx+0xf]
  40ebef:	sti    
  40ebf0:	cs scas eax,DWORD PTR es:[edi]
  40ebf2:	mov    ecx,0x7d1eec1d
  40ebf7:	das    
  40ebf8:	xor    eax,0x4d456266
  40ebfd:	sub    eax,0x3e0a8f9
  40ec02:	push   ebp
  40ec03:	pop    ecx
  40ec04:	mov    DWORD PTR [ecx],esp
  40ec06:	lods   al,BYTE PTR ds:[esi]
  40ec07:	repz push cs
  40ec09:	data16 es aaa 
  40ec0c:	nop
  40ec0d:	adc    eax,DWORD PTR [ebx+0x4db4d41c]
  40ec13:	xor    DWORD PTR [ebp+0xb],esp
  40ec16:	outs   dx,DWORD PTR ds:[esi]
  40ec17:	jmp    0x40ec84
  40ec19:	xor    eax,0xae5bb75c
  40ec1e:	test   eax,0x54d57aaf
  40ec23:	pusha  
  40ec24:	ds pop edi
  40ec26:	or     DWORD PTR [edx-0x397ee6bd],ecx
  40ec2c:	into   
  40ec2d:	ret    
  40ec2e:	test   eax,0x4146a5e8
  40ec33:	jecxz  0x40ec79
  40ec35:	outs   dx,DWORD PTR ds:[esi]
  40ec36:	mov    esp,0xc943ac49
  40ec3b:	mov    edi,0x6066a941
  40ec40:	ja     0x40ecb1
  40ec42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec43:	cmp    edx,DWORD PTR [esi-0x1a1d3a9b]
  40ec49:	imul   ebx,ebx,0xe56eff97
  40ec4f:	sahf   
  40ec50:	or     DWORD PTR [ebx],ecx
  40ec52:	dec    BYTE PTR [ebx+0x31478d76]
  40ec58:	jmp    0x9d5a:0xfb03ce31
  40ec5f:	jl     0x40ec82
  40ec61:	cs jmp 0x6de7ff6a
  40ec67:	mov    edi,?
  40ec69:	mov    ebp,0x8ec68d40
  40ec6e:	(bad)  
  40ec6f:	xlat   BYTE PTR ds:[ebx]
  40ec70:	aam    0xdd
  40ec72:	mov    ecx,0x59ad59e1
  40ec77:	ja     0x40ec12
  40ec79:	mov    ds:0x16354a04,al
  40ec7e:	push   edx
  40ec7f:	pop    esi
  40ec80:	leave  
  40ec81:	out    0x9a,al
  40ec83:	jecxz  0x40ecc9
  40ec85:	lock adc BYTE PTR [ecx-0x21],ch
  40ec89:	repz mov al,0x46
  40ec8c:	and    esp,esp
  40ec8e:	mov    cs,WORD PTR [edx+0x55]
  40ec91:	sahf   
  40ec92:	mov    bl,0xc2
  40ec94:	sub    al,0xd8
  40ec96:	mov    ecx,0xc4477fb7
  40ec9b:	pop    ebp
  40ec9c:	or     DWORD PTR [ecx-0x49],esp
  40ec9f:	jb     0x40eccf
  40eca1:	lods   al,BYTE PTR ds:[esi]
  40eca2:	adc    bh,BYTE PTR [ecx]
  40eca4:	pop    ecx
  40eca5:	ss scas al,BYTE PTR es:[edi]
  40eca7:	sub    BYTE PTR [esi+0xd],dh
  40ecaa:	cdq    
  40ecab:	(bad)  
  40ecac:	jg     0x40ec85
  40ecae:	icebp  
  40ecaf:	xor    bl,BYTE PTR [edi-0x75]
  40ecb2:	imul   ebp,DWORD PTR [ecx],0x39
  40ecb5:	xchg   BYTE PTR [esp+ebx*8+0x4],ah
  40ecb9:	sahf   
  40ecba:	push   es
  40ecbb:	xor    al,BYTE PTR [edi]
  40ecbd:	push   ebp
  40ecbe:	sub    esp,esp
  40ecc0:	imul   edx,ebx,0x25707664
  40ecc6:	ja     0x40ed38
  40ecc8:	mov    eax,ds:0x5944b063
  40eccd:	add    edi,DWORD PTR [edx+0x3a]
  40ecd0:	mov    eax,ds:0xdc83b222
  40ecd5:	xchg   edx,eax
  40ecd6:	xchg   ecx,eax
  40ecd7:	mov    esi,0x87de98f4
  40ecdc:	js     0x40ed18
  40ecde:	sub    dh,BYTE PTR [ebp+ebx*4-0x1a]
  40ece2:	test   eax,0x4905e076
  40ece7:	sub    ch,BYTE PTR [esi]
  40ece9:	inc    ebp
  40ecea:	and    DWORD PTR es:[ebx],esi
  40eced:	sti    
  40ecee:	mov    edi,0x874f2d2b
  40ecf3:	sahf   
  40ecf4:	jnp    0x40ece3
  40ecf6:	fs push ebp
  40ecf8:	ret    0x1a8b
  40ecfb:	out    0x15,al
  40ecfd:	test   eax,0xb11b3b20
  40ed02:	sti    
  40ed03:	dec    esp
  40ed04:	or     esp,DWORD PTR [ecx+ebp*2-0x13]
  40ed08:	push   edi
  40ed09:	fst    DWORD PTR [ecx+0x3cce45bf]
  40ed0f:	test   ah,cl
  40ed11:	mov    ch,0x7f
  40ed13:	lock dec edx
  40ed15:	xchg   edx,eax
  40ed16:	(bad)  
  40ed17:	imul   esi,DWORD PTR [ebx-0xc],0x35
  40ed1b:	lea    esp,[eax+0x60]
  40ed1e:	ficom  WORD PTR [ebx-0x5c703503]
  40ed24:	sbb    ecx,DWORD PTR [eax-0x27]
  40ed27:	out    dx,eax
  40ed28:	jmp    0xdbff:0xdfa0aea7
  40ed2f:	dec    ecx
  40ed30:	xlat   BYTE PTR ds:[ebx]
  40ed31:	dec    edx
  40ed32:	or     cl,ch
  40ed34:	sbb    BYTE PTR ds:0xa3fe77bf,ah
  40ed3a:	and    al,0xfe
  40ed3c:	out    0x7e,al
  40ed3e:	mov    al,ds:0x56f404e2
  40ed43:	or     BYTE PTR [ecx+0x5c],bh
  40ed46:	call   0xd3a2140d
  40ed4b:	or     eax,0x2f2eff52
  40ed50:	add    al,0xc3
  40ed52:	inc    ebp
  40ed53:	mov    ebp,0x81858158
  40ed58:	xor    al,0xdf
  40ed5a:	int    0x27
  40ed5c:	xor    BYTE PTR [edx],cl
  40ed5e:	dec    edx
  40ed5f:	call   0xe768d8bf
  40ed64:	lods   eax,DWORD PTR ds:[esi]
  40ed65:	out    0x9d,al
  40ed67:	mov    esp,0xb6773db1
  40ed6c:	mov    edi,0xb1a81367
  40ed71:	lods   al,BYTE PTR ds:[esi]
  40ed72:	mov    dl,0x3b
  40ed74:	fisttp WORD PTR [edx]
  40ed76:	lods   eax,DWORD PTR ds:[esi]
  40ed77:	add    BYTE PTR [ebp-0x7b],dh
  40ed7a:	xor    dh,dl
  40ed7c:	mov    bh,0xf2
  40ed7e:	add    eax,0x65c6a773
  40ed83:	jmp    0xf480:0x43174e30
  40ed8a:	fstp   TBYTE PTR [ecx-0x5]
  40ed8d:	out    dx,eax
  40ed8e:	fidiv  DWORD PTR [eax]
  40ed90:	sbb    BYTE PTR [ebx],bl
  40ed92:	das    
  40ed93:	sub    DWORD PTR [edx-0x61b3c4a0],ebp
  40ed99:	lock sub ecx,edi
  40ed9c:	or     bh,BYTE PTR [esi+ebp*4+0x24255290]
  40eda3:	cdq    
  40eda4:	xor    BYTE PTR [esp+ebx*1-0x37471346],ah
  40edab:	stos   DWORD PTR es:[edi],eax
  40edac:	sbb    bl,bl
  40edae:	cmc    
  40edaf:	add    al,0x55
  40edb1:	inc    edx
  40edb2:	inc    edx
  40edb3:	in     eax,0xee
  40edb5:	cmp    eax,DWORD PTR [ecx+0x1]
  40edb8:	pusha  
  40edb9:	fst    DWORD PTR [ebp+0x79]
  40edbc:	cdq    
  40edbd:	cmc    
  40edbe:	out    0xb8,al
  40edc0:	and    al,0x13
  40edc2:	shl    esp,0x32
  40edc5:	adc    al,0x16
  40edc7:	add    al,0xd0
  40edc9:	cmp    BYTE PTR [ebp+0x2f],ah
  40edcc:	pop    esp
  40edcd:	or     bl,BYTE PTR [ecx]
  40edcf:	lea    ebp,[esi+0x204507e]
  40edd5:	jne    0x40ee0f
  40edd7:	push   0x2e
  40edd9:	jg     0x40ed72
  40eddb:	mov    esi,0x9ad548bc
  40ede0:	lods   al,BYTE PTR ds:[esi]
  40ede1:	sub    al,0x3d
  40ede3:	mov    eax,0x9d302e81
  40ede8:	out    dx,al
  40ede9:	scas   al,BYTE PTR es:[edi]
  40edea:	test   DWORD PTR [eax],esp
  40edec:	ins    DWORD PTR es:[edi],dx
  40eded:	jne    0x40ee05
  40edef:	cmp    bh,bh
  40edf1:	cdq    
  40edf2:	call   0x34512d3d
  40edf7:	scas   eax,DWORD PTR es:[edi]
  40edf8:	jecxz  0x40edb5
  40edfa:	mov    esp,DWORD PTR [edi-0x58]
  40edfd:	inc    eax
  40edfe:	retf   
  40edff:	outs   dx,DWORD PTR ds:[esi]
  40ee00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee01:	jb     0x40ed94
  40ee03:	int3   
  40ee04:	test   BYTE PTR [esi+0x2f],0xab
  40ee08:	repz aas 
  40ee0a:	pop    eax
  40ee0b:	mov    BYTE PTR [ebx+0x3f2e7e6a],ah
  40ee11:	retf   0x4174
  40ee14:	or     eax,0xfdc5a6bd
  40ee19:	lea    eax,[ebp-0x1d]
  40ee1c:	cmc    
  40ee1d:	pavgb  mm1,mm5
  40ee20:	mov    eax,0x880d7b55
  40ee25:	fstp   QWORD PTR gs:[esi+edx*1+0x6f]
  40ee2a:	cwde   
  40ee2b:	in     eax,0x22
  40ee2d:	jg     0x40edf4
  40ee2f:	call   0xbef8:0xa71e9cc3
  40ee36:	call   0xc650:0x209318c1
  40ee3d:	inc    edi
  40ee3e:	daa    
  40ee3f:	or     eax,0x607c1e2d
  40ee44:	jp     0x40ee7f
  40ee46:	das    
  40ee47:	sub    eax,0xb17b1d8a
  40ee4c:	and    ecx,ecx
  40ee4e:	scas   al,BYTE PTR es:[edi]
  40ee4f:	inc    dh
  40ee51:	data16 je 0x40edfa
  40ee54:	outs   dx,DWORD PTR ds:[esi]
  40ee55:	scas   eax,DWORD PTR es:[edi]
  40ee56:	retf   0x2114
  40ee59:	pusha  
  40ee5a:	pop    esp
  40ee5b:	jmp    0x6df0d416
  40ee60:	cmp    eax,0x1585731a
  40ee65:	mov    al,ds:0xa8cf9366
  40ee6a:	pop    DWORD PTR [ebp-0x2298b2cc]
  40ee70:	fld    QWORD PTR [edx-0x72]
  40ee73:	sbb    al,0xa
  40ee75:	pop    ebp
  40ee76:	mov    WORD PTR [edi-0x3b214535],fs
  40ee7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee7d:	xchg   ecx,eax
  40ee7e:	adc    ah,dh
  40ee80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee81:	push   esi
  40ee82:	xchg   ecx,eax
  40ee83:	push   es
  40ee84:	pop    ebx
  40ee85:	fistp  QWORD PTR ds:0xe443062b
  40ee8b:	lahf   
  40ee8c:	cmps   DWORD PTR fs:[si],DWORD PTR es:[di]
  40ee8f:	mov    ebx,0x59e053b4
  40ee94:	imul   esi,DWORD PTR ds:0x79b3a019,0xd5340c4b
  40ee9e:	xchg   edx,eax
  40ee9f:	test   BYTE PTR ds:0x269d005d,0x6d
  40eea6:	or     al,BYTE PTR [ecx]
  40eea8:	repz in al,0xa
  40eeab:	std    
  40eeac:	mov    ecx,DWORD PTR [edi-0x52]
  40eeaf:	add    DWORD PTR [ebp+0x44],esi
  40eeb2:	adc    al,0x20
  40eeb4:	aaa    
  40eeb5:	sbb    ah,BYTE PTR [eax+ecx*8+0x12]
  40eeb9:	pusha  
  40eeba:	hlt    
  40eebb:	inc    edx
  40eebc:	sub    al,0x12
  40eebe:	push   0x7b66c9d9
  40eec3:	iret   
  40eec4:	les    eax,FWORD PTR cs:[edi+0x1a]
  40eec8:	pop    esi
  40eec9:	mov    edi,0xc64ec901
  40eece:	into   
  40eecf:	jnp    0x40ef32
  40eed1:	je     0x40ee8f
  40eed3:	adc    BYTE PTR [esi],ah
  40eed5:	enter  0xb607,0xe8
  40eed9:	add    edi,DWORD PTR [eax]
  40eedb:	sahf   
  40eedc:	stos   BYTE PTR es:[edi],al
  40eedd:	call   0x876b1977
  40eee2:	adc    DWORD PTR [ebp+ebp*1+0x68],0x1f
  40eee7:	hlt    
  40eee8:	in     al,0x83
  40eeea:	mov    al,0x11
  40eeec:	rcr    DWORD PTR [esi+0x23967e27],cl
  40eef2:	or     ch,0x29
  40eef5:	je     0x40ef67
  40eef7:	clc    
  40eef8:	idiv   BYTE PTR [ebp+0x605b5a6e]
  40eefe:	dec    edi
  40eeff:	inc    esi
  40ef00:	test   DWORD PTR [ebx+0x6512eaeb],edi
  40ef06:	loop   0x40eee6
  40ef08:	lods   eax,DWORD PTR ds:[esi]
  40ef09:	ins    BYTE PTR es:[edi],dx
  40ef0a:	pop    edi
  40ef0b:	add    ebp,ecx
  40ef0d:	push   ss
  40ef0e:	xor    al,0x93
  40ef10:	push   es
  40ef11:	dec    ecx
  40ef12:	xor    al,0x4a
  40ef14:	xor    eax,0xd6b2884c
  40ef19:	jle    0x40ef13
  40ef1b:	xchg   esp,eax
  40ef1c:	mov    dl,0xd0
  40ef1e:	sar    BYTE PTR [ebx-0x60],1
  40ef21:	dec    edx
  40ef22:	lods   eax,DWORD PTR ds:[esi]
  40ef23:	cmp    BYTE PTR [esi],cl
  40ef25:	ret    0x44f8
  40ef28:	mov    bh,0x42
  40ef2a:	adc    esp,DWORD PTR [edi]
  40ef2c:	push   0xaf330c07
  40ef31:	shl    BYTE PTR [edx],0x8c
  40ef34:	or     DWORD PTR [edi-0x78da9abb],ebx
  40ef3a:	jecxz  0x40ef4a
  40ef3c:	push   es
  40ef3d:	xor    al,0x21
  40ef3f:	aas    
  40ef40:	pop    bx
  40ef42:	stos   BYTE PTR es:[edi],al
  40ef43:	sub    edi,DWORD PTR [edx+0x13]
  40ef46:	dec    esi
  40ef47:	cld    
  40ef48:	push   ss
  40ef49:	es push eax
  40ef4b:	push   esp
  40ef4c:	mov    al,0x2b
  40ef4e:	mov    eax,0x24b78c9a
  40ef53:	or     ch,BYTE PTR [edi]
  40ef55:	nop
  40ef56:	cmc    
  40ef57:	dec    edx
  40ef58:	mov    al,ds:0x706d63df
  40ef5d:	mov    bl,dh
  40ef5f:	adc    dl,BYTE PTR [esp+ebp*2+0x66]
  40ef63:	fmul   DWORD PTR [eax]
  40ef65:	sub    DWORD PTR [ebp-0x63e96d3a],edi
  40ef6b:	pop    eax
  40ef6c:	ror    bh,1
  40ef6e:	jae    0x40ef62
  40ef70:	out    0x83,al
  40ef72:	addr16 mov dl,0xa1
  40ef75:	sti    
  40ef76:	fmul   QWORD PTR [ecx+0x59d1e3b2]
  40ef7c:	adc    ch,dl
  40ef7e:	sub    dl,BYTE PTR ds:0xa92f56c2
  40ef84:	mov    al,ds:0xa90ac344
  40ef89:	mov    esi,DWORD PTR [ecx]
  40ef8b:	fdivr  DWORD PTR [edi-0xae0cff4]
  40ef91:	add    esi,eax
  40ef93:	inc    ecx
  40ef94:	inc    edx
  40ef95:	or     esi,DWORD PTR [edi-0x1665d5ff]
  40ef9b:	add    BYTE PTR [eax+0x7e],bl
  40ef9e:	push   es
  40ef9f:	mov    ah,0x7a
  40efa1:	addr16 sbb eax,0xbd653c2f
  40efa7:	loope  0x40f012
  40efa9:	arpl   WORD PTR [ebp+ecx*2-0x78],sp
  40efad:	dec    ebp
  40efae:	into   
  40efaf:	mov    cl,dl
  40efb1:	fld    DWORD PTR [ebx]
  40efb3:	mov    BYTE PTR [eax+eiz*1],cl
  40efb6:	cs cmc 
  40efb8:	fisub  WORD PTR [eax+0x37]
  40efbb:	es scas al,BYTE PTR es:[edi]
  40efbd:	js     0x40ef90
  40efbf:	cld    
  40efc0:	jmp    0x40efb9
  40efc2:	mov    BYTE PTR [eax],bh
  40efc4:	inc    ecx
  40efc5:	xor    ah,BYTE PTR [ebp+0x428112]
  40efcb:	add    DWORD PTR [ebp-0x250a2f8],ebx
  40efd1:	adc    esp,DWORD PTR [ebx]
  40efd3:	lahf   
  40efd4:	cmc    
  40efd5:	stc    
  40efd6:	xchg   ebp,eax
  40efd7:	ret    0xa0f
  40efda:	mov    bl,BYTE PTR [edi+0x245778a1]
  40efe0:	mov    BYTE PTR [ebp+0x40],al
  40efe3:	sub    bl,BYTE PTR [ecx+edi*4]
  40efe6:	push   esi
  40efe7:	ret    0xc752
  40efea:	dec    eax
  40efeb:	js     0x40f000
  40efed:	xor    ebp,DWORD PTR [ecx]
  40efef:	dec    eax
  40eff0:	push   edi
  40eff1:	mov    edx,gs
  40eff3:	jecxz  0x40ef88
  40eff5:	ror    DWORD PTR [ebx],0x48
  40eff8:	loopne 0x40f03b
  40effa:	pushf  
  40effb:	sbb    eax,DWORD PTR [ecx]
  40effd:	cmp    eax,0xdfb1806
  40f002:	pop    es
  40f003:	int    0x2a
  40f005:	inc    ebx
  40f006:	push   0x5
  40f008:	cld    
  40f009:	pusha  
  40f00a:	pusha  
  40f00b:	adc    DWORD PTR ds:[ebx],ecx
  40f00e:	dec    esi
  40f00f:	stos   DWORD PTR es:[edi],eax
  40f010:	cmp    dh,BYTE PTR [edi+0x55a9be79]
  40f016:	(bad)  
  40f017:	mov    bl,0xec
  40f019:	pop    esp
  40f01a:	lea    ecx,[edx-0x2b]
  40f01d:	jge    0x40f083
  40f01f:	mov    edi,0x8d89edfc
  40f024:	mov    esi,DWORD PTR [edx]
  40f026:	daa    
  40f027:	add    BYTE PTR [ebx+0x1b],bh
  40f02a:	add    eax,0x5fcce6e8
  40f02f:	jno    0x40f08a
  40f031:	jmp    0x389:0x9012b485
  40f038:	in     eax,0x9b
  40f03a:	ret    
  40f03b:	aad    0x7f
  40f03d:	mov    bh,0x1
  40f03f:	mov    dh,0xb7
  40f041:	mov    esp,0x2e7000fc
  40f046:	in     eax,dx
  40f047:	data16 fadd DWORD PTR [ebp+0x3c01a681]
  40f04e:	or     eax,0x82c90b17
  40f053:	jle    0xf42ae3b5
  40f059:	test   eax,0x61fbed8d
  40f05e:	inc    ebx
  40f05f:	add    BYTE PTR [ebp-0x5a27af8d],0xee
  40f066:	add    BYTE PTR [ecx-0x5fee0dc],0xa6
  40f06d:	or     DWORD PTR [edx],ecx
  40f06f:	data16 cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  40f072:	sbb    BYTE PTR [ebp-0x1c563a6c],ch
  40f078:	pop    ebp
  40f079:	arpl   WORD PTR [ecx-0x368dde22],bx
  40f07f:	and    bh,BYTE PTR [edi]
  40f081:	sbb    eax,0xc9a0f6b6
  40f086:	or     eax,0x17ca1e3e
  40f08b:	jns    0x40f107
  40f08d:	cmc    
  40f08e:	outs   dx,DWORD PTR ds:[esi]
  40f08f:	mov    ebp,DWORD PTR [ebx-0x364e50e8]
  40f095:	jne    0x40f111
  40f097:	int3   
  40f098:	mov    esp,DWORD PTR [ebp-0x31]
  40f09b:	mov    BYTE PTR ds:0x2790738b,bl
  40f0a1:	sub    BYTE PTR [eax+0x48],ah
  40f0a4:	outs   dx,DWORD PTR ds:[esi]
  40f0a5:	fstp   st(0)
  40f0a7:	in     al,dx
  40f0a8:	mov    ah,0x28
  40f0aa:	jge    0x40f0a8
  40f0ac:	ds pop edi
  40f0ae:	dec    edx
  40f0af:	push   eax
  40f0b0:	push   ss
  40f0b1:	sub    cl,BYTE PTR [ebx]
  40f0b3:	fsub   QWORD PTR [esi-0x7c2c328f]
  40f0b9:	mov    ds:0x7761856d,eax
  40f0be:	add    BYTE PTR [edi-0x50a105f9],bl
  40f0c4:	and    bl,bh
  40f0c6:	shl    DWORD PTR [edx],1
  40f0c8:	add    ecx,0x2b
  40f0cb:	imul   ebp,DWORD PTR [ebp-0x67adb131],0xfa68fd7e
  40f0d5:	mul    DWORD PTR [ecx]
  40f0d7:	mov    ah,0x59
  40f0d9:	jo     0x40f11d
  40f0db:	pusha  
  40f0dc:	mov    ebx,ds
  40f0de:	lahf   
  40f0df:	jns    0x40f10a
  40f0e1:	pop    esi
  40f0e2:	gs jge 0x40f082
  40f0e5:	add    DWORD PTR [ebx+0x3c9f8806],edi
  40f0eb:	add    DWORD PTR [edi-0x3],eax
  40f0ee:	cmp    BYTE PTR [ecx],ah
  40f0f0:	shl    DWORD PTR [esi-0x4ef5ed37],1
  40f0f6:	rcl    BYTE PTR [ebx],1
  40f0f8:	xor    DWORD PTR [edi],edi
  40f0fa:	mov    al,ds:0x22f2e13e
  40f0ff:	outs   dx,DWORD PTR ds:[esi]
  40f100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f101:	mov    esi,0x61e1d5c5
  40f106:	mov    al,al
  40f108:	pop    esp
  40f109:	xlat   BYTE PTR ds:[ebx]
  40f10a:	push   ds
  40f10b:	aad    0xb4
  40f10d:	(bad)  
  40f10e:	fldcw  WORD PTR [edx]
  40f110:	jp     0x40f0ff
  40f112:	jp     0x40f15e
  40f114:	outs   dx,DWORD PTR ds:[esi]
  40f115:	test   al,0xa5
  40f117:	push   es
  40f118:	lods   al,BYTE PTR ds:[esi]
  40f119:	fadd   QWORD PTR [edx+0x4f]
  40f11c:	mov    ebp,esi
  40f11e:	test   eax,0xc994f279
  40f123:	std    
  40f124:	xchg   BYTE PTR [edx-0x7],cl
  40f127:	cmc    
  40f128:	std    
  40f129:	sub    BYTE PTR [eax],bh
  40f12b:	mov    bl,0x19
  40f12d:	mov    al,ds:0xc9e41bd3
  40f132:	out    0x50,al
  40f134:	pushf  
  40f135:	cmp    ecx,DWORD PTR [ebx-0x665bf962]
  40f13b:	pop    edi
  40f13c:	das    
  40f13d:	mov    esi,DWORD PTR [ebp+0xc]
  40f140:	cmp    esi,eax
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	pop    es
  40fa17:	mov    esp,0xca74cad9
  40fa1c:	jp     0x40fa98
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	sub    BYTE PTR [edi],bh
  40fa24:	xchg   esp,eax
  40fa25:	xchg   edi,eax
  40fa26:	sbb    edx,ebx
  40fa28:	(bad)  
  40fa29:	mov    eax,0xd7ce719c
  40fa2e:	les    ebp,FWORD PTR [ebx]
  40fa30:	fistp  WORD PTR [eax-0x5b8036e8]
  40fa36:	cwde   
  40fa37:	imul   esp,DWORD PTR [ebp+0x688c8d0b],0x7a
  40fa3e:	ror    dh,cl
  40fa40:	call   0x8cea:0xf222cfe5
  40fa47:	aas    
  40fa48:	jnp    0x40fa6c
  40fa4a:	fst    DWORD PTR [ebx-0x67e0dfe9]
  40fa50:	push   ds
  40fa51:	icebp  
  40fa52:	jbe    0x40f9d4
  40fa54:	int3   
  40fa55:	nop
  40fa56:	xlat   BYTE PTR ds:[ebx]
  40fa57:	sub    esp,esp
  40fa59:	mov    ds:0xf9c1b82,eax
  40fa5e:	cld    
  40fa5f:	jmp    0x40fa07
  40fa61:	div    BYTE PTR [ebp-0x6e322722]
  40fa67:	cli    
  40fa68:	cmp    edi,DWORD PTR [edi-0x6c]
  40fa6b:	pop    ecx
  40fa6c:	test   BYTE PTR [ebx+0x20],0x77
  40fa70:	xor    bl,ch
  40fa72:	gs and al,0x34
  40fa75:	cdq    
  40fa76:	imul   eax,DWORD PTR [edx],0xa554efd6
  40fa7c:	push   ebp
  40fa7d:	in     al,dx
  40fa7e:	xlat   BYTE PTR ds:[ebx]
  40fa7f:	jmp    DWORD PTR [edi+ecx*4+0x49]
  40fa83:	pop    eax
  40fa84:	add    BYTE PTR [ebx+ecx*1],0xfa
  40fa88:	cmp    DWORD PTR [eax],esp
  40fa8a:	push   edi
  40fa8b:	xchg   DWORD PTR [ebx+edi*1+0x37],esp
  40fa8f:	xchg   esp,eax
  40fa90:	in     eax,dx
  40fa91:	bound  edx,QWORD PTR [ebx]
  40fa93:	inc    esi
  40fa94:	lods   eax,DWORD PTR ds:[esi]
  40fa95:	mov    ds:0x8182ccc4,eax
  40fa9a:	cdq    
  40fa9b:	ret    
  40fa9c:	out    0xd6,eax
  40fa9e:	add    al,0xd6
  40faa0:	repz or DWORD PTR [eax],0xa78de29a
  40faa7:	sub    edi,ecx
  40faa9:	cwde   
  40faaa:	or     al,0x20
  40faac:	dec    ebp
  40faad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faae:	jge    0x40fa62
  40fab0:	push   ss
  40fab1:	imul   edi,DWORD PTR [eax],0x3e
  40fab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fab5:	inc    ebp
  40fab6:	mov    ds:0xf7859574,al
  40fabb:	es les ecx,FWORD PTR es:[esp+edx*4+0x1f]
  40fac1:	ja     0x40fb12
  40fac3:	mov    ebx,0x885f9c6b
  40fac8:	dec    edi
  40fac9:	hlt    
  40faca:	stos   DWORD PTR es:[edi],eax
  40facb:	mov    eax,ds:0x7c210959
  40fad0:	fldl2t 
  40fad2:	lds    ebp,FWORD PTR [ebx]
  40fad4:	cdq    
  40fad5:	(bad)  
  40fad6:	pop    ecx
  40fad7:	pop    eax
  40fad8:	enter  0xe5dc,0x13
  40fadc:	mov    dl,0x79
  40fade:	cmp    esi,DWORD PTR [edx-0x59]
  40fae1:	and    al,0xd6
  40fae3:	fdiv   QWORD PTR [eax]
  40fae5:	cwde   
  40fae6:	in     eax,0x4
  40fae8:	lea    edx,[esi+0x4393109e]
  40faee:	cwde   
  40faef:	pop    es
  40faf0:	inc    ebp
  40faf1:	out    0xf,eax
  40faf3:	cwde   
  40faf4:	or     bh,ch
  40faf6:	and    eax,0xba243562
  40fafb:	or     BYTE PTR [ecx+eax*1+0x7b],ch
  40faff:	cdq    
  40fb00:	cwde   
  40fb01:	sub    ch,BYTE PTR [ebp+0x5a6b946e]
  40fb07:	inc    ecx
  40fb08:	jbe    0xeece4c0b
  40fb0e:	lea    ebx,[edi]
  40fb10:	lds    esp,FWORD PTR [ebx-0xd374286]
  40fb16:	xor    esi,DWORD PTR [ecx]
  40fb18:	aas    
  40fb19:	data16 (bad) 
  40fb1c:	push   0x4872649e
  40fb21:	idiv   cl
  40fb23:	lahf   
  40fb24:	stc    
  40fb25:	mov    bh,0x5d
  40fb27:	pop    edi
  40fb28:	mov    eax,ds:0x83f75b1a
  40fb2d:	das    
  40fb2e:	mov    ah,0x58
  40fb30:	or     DWORD PTR [ebx*2+0x2c484d26],edx
  40fb37:	jg     0x40fabd
  40fb39:	or     al,0x94
  40fb3b:	add    al,0x75
  40fb3d:	stos   DWORD PTR es:[edi],eax
  40fb3e:	or     ah,BYTE PTR [eax+0x3d]
  40fb41:	inc    edx
  40fb43:	test   BYTE PTR [ebx],0x70
  40fb46:	or     al,0x1
  40fb48:	lds    edi,FWORD PTR [ebp-0x14426ceb]
  40fb4e:	les    ebx,FWORD PTR [eax-0x4a165f53]
  40fb54:	cmp    al,0x72
  40fb56:	mov    esp,0x5df0bd10
  40fb5b:	pop    esp
  40fb5c:	jmp    0x2b71c53b
  40fb61:	jnp    0x40fb1d
  40fb63:	jb     0x40fb3d
  40fb65:	test   al,0x8b
  40fb67:	xlat   BYTE PTR ds:[ebx]
  40fb68:	or     al,0xa0
  40fb6a:	(bad)  
  40fb6b:	out    dx,al
  40fb6c:	les    ebp,FWORD PTR [esp+eiz*2+0x7d7ca704]
  40fb73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb74:	push   0x357ccc5b
  40fb79:	(bad)  
  40fb7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb7b:	mov    dh,0x72
  40fb7d:	fadd   st,st(7)
  40fb7f:	repz popa 
  40fb81:	iret   
  40fb82:	call   0x1556:0xe9a0f63f
  40fb89:	imul   ebp,esp,0x7d
  40fb8c:	sbb    DWORD PTR [eax+0x6061401e],ecx
  40fb92:	pop    edx
  40fb93:	add    eax,0x5d65cc4e
  40fb98:	cs aaa 
  40fb9a:	gs (bad) 
  40fb9c:	mov    dh,dh
  40fb9e:	test   bl,0x48
  40fba1:	out    0x12,al
  40fba3:	or     BYTE PTR ds:0xe332a54a,al
  40fba9:	cmp    al,0x90
  40fbab:	dec    ebx
  40fbac:	test   eax,0x233a6dd1
  40fbb1:	mov    DWORD PTR [edi],ebx
  40fbb3:	xor    al,0xe3
  40fbb5:	mov    dh,0xcd
  40fbb7:	out    0x6,eax
  40fbb9:	push   ss
  40fbba:	mov    bh,0xe7
  40fbbc:	rcl    DWORD PTR [ebp-0x1f538f6b],0x9e
  40fbc3:	pop    esi
  40fbc4:	and    bl,BYTE PTR [ebx]
  40fbc6:	fistp  QWORD PTR [ebp+0x630ce4eb]
  40fbcc:	nop
  40fbcd:	jecxz  0x40fb6d
  40fbcf:	sub    ebx,DWORD PTR [esi-0x67]
  40fbd2:	cmc    
  40fbd3:	sub    BYTE PTR [ebx+eax*2+0x57],ah
  40fbd7:	aaa    
  40fbd8:	mov    ecx,DWORD PTR [eax]
  40fbda:	jmp    0x1d4a:0xa7b4b21a
  40fbe1:	(bad)  
  40fbe2:	or     ecx,esp
  40fbe4:	mov    esp,0x3bc64028
  40fbe9:	mov    esi,0x67991ebb
  40fbee:	xor    eax,DWORD PTR [ebx]
  40fbf0:	jg     0x40fc12
  40fbf2:	xchg   esp,eax
  40fbf3:	outs   dx,DWORD PTR ds:[esi]
  40fbf4:	call   0x6d47:0xafb604d4
  40fbfb:	mov    ebx,0xca035bbb
  40fc00:	sub    al,0xf2
  40fc02:	add    edx,DWORD PTR [edi+0x12a705cb]
  40fc08:	jbe    0x40fc87
  40fc0a:	jecxz  0x40fc0d
  40fc0c:	jmp    0x980c:0x3921d5bb
  40fc13:	push   ds
  40fc14:	loope  0x40fc4e
  40fc16:	adc    BYTE PTR [ebx],dh
  40fc18:	pusha  
  40fc19:	push   esi
  40fc1a:	mov    bh,0x92
  40fc1c:	pop    esi
  40fc1d:	xor    eax,0x74b162cb
  40fc22:	dec    DWORD PTR [ebx]
  40fc24:	mov    BYTE PTR [eax-0x21],al
  40fc27:	js     0x40fc6b
  40fc29:	xchg   esp,eax
  40fc2a:	mov    esi,0x46a95788
  40fc2f:	mov    ah,0x1e
  40fc31:	(bad)  [ebp+0x48]
  40fc34:	mov    dl,0x36
  40fc36:	lds    ebx,FWORD PTR ds:0xcec6f3cc
  40fc3c:	fstp   DWORD PTR [ebp-0x36bc1432]
  40fc42:	fimul  DWORD PTR [esi]
  40fc44:	mov    cl,0x46
  40fc46:	or     bh,cl
  40fc48:	js     0x40fc58
  40fc4a:	sub    ebp,DWORD PTR [edi]
  40fc4c:	mov    DWORD PTR [ebp-0xe],ecx
  40fc4f:	fist   WORD PTR [edx-0x23b1a654]
  40fc55:	out    dx,al
  40fc56:	xchg   esp,eax
  40fc57:	dec    ebx
  40fc58:	js     0x40fc53
  40fc5a:	cdq    
  40fc5b:	sahf   
  40fc5c:	popf   
  40fc5d:	pop    edx
  40fc5e:	pop    ebp
  40fc5f:	aad    0x9b
  40fc61:	xor    al,0x5e
  40fc63:	scas   eax,DWORD PTR es:[edi]
  40fc64:	stos   DWORD PTR es:[edi],eax
  40fc65:	xchg   esp,eax
  40fc66:	cmp    al,al
  40fc68:	xor    ebx,DWORD PTR [eax+0x74]
  40fc6b:	bound  esi,QWORD PTR [edi+ecx*2+0x65dc2776]
  40fc72:	test   BYTE PTR [ecx+0x430f6bb0],dl
  40fc78:	lea    ebx,[esi-0x6a]
  40fc7b:	aam    0x3c
  40fc7d:	cwde   
  40fc7e:	fwait
  40fc7f:	add    edi,DWORD PTR [ebx-0x4ed7c73b]
  40fc85:	or     ah,dl
  40fc87:	loopne 0x40fcc9
  40fc89:	in     al,dx
  40fc8a:	clc    
  40fc8b:	sbb    esi,DWORD PTR [ebx+0x58b7f2a8]
  40fc91:	pop    ebx
  40fc92:	lock push ebp
  40fc94:	mov    eax,0x825bb4ee
  40fc99:	xchg   ebp,eax
  40fc9a:	mov    ebx,0x920c87f0
  40fc9f:	(bad)  
  40fca0:	sub    eax,0xff4806a9
  40fca5:	iret   
  40fca6:	fwait
  40fca7:	shr    DWORD PTR [edx-0x45],0x84
  40fcab:	pop    edx
  40fcac:	mov    eax,ds:0xe77f88fc
  40fcb1:	add    eax,0xfc7d96e9
  40fcb6:	xchg   DWORD PTR [ecx+edi*2+0x1c],edi
  40fcba:	cli    
  40fcbb:	jns    0x40fc4c
  40fcbd:	sub    eax,0xbe5f5626
  40fcc2:	add    ebx,DWORD PTR [esp+ecx*2]
  40fcc5:	cmp    eax,0x2e2a2e18
  40fcca:	loopne 0x40fcc7
  40fccc:	scas   eax,DWORD PTR es:[edi]
  40fccd:	out    dx,eax
  40fcce:	mov    dh,0xfb
  40fcd0:	dec    ebx
  40fcd1:	or     dl,BYTE PTR [edi-0x4f2eb798]
  40fcd7:	adc    eax,0x2c76d2a0
  40fcdc:	mov    BYTE PTR [ebp+0x36],bh
  40fcdf:	push   es
  40fce0:	push   edi
  40fce1:	call   0x91b5:0x55dc910
  40fce8:	push   0x24
  40fcea:	clc    
  40fceb:	xor    ah,bl
  40fced:	jmp    0x40fcc4
  40fcef:	test   al,0xdc
  40fcf1:	mov    edi,0x3194b6dc
  40fcf6:	xchg   edx,eax
  40fcf7:	inc    eax
  40fcf8:	cdq    
  40fcf9:	pushf  
  40fcfa:	mov    es,ebp
  40fcfc:	std    
  40fcfd:	mov    cl,0x19
  40fcff:	jbe    0x40fd5b
  40fd01:	xlat   BYTE PTR ds:[ebx]
  40fd02:	dec    edx
  40fd03:	in     al,0x62
  40fd05:	in     al,0xc
  40fd07:	clc    
  40fd08:	cdq    
  40fd09:	xchg   ecx,eax
  40fd0a:	in     eax,0xe8
  40fd0c:	sbb    dh,ah
  40fd0e:	ret    
  40fd0f:	hlt    
  40fd10:	lea    eax,cs:[ebx+eiz*8+0x47]
  40fd15:	test   al,0x30
  40fd17:	out    0x18,al
  40fd19:	data16 fcmove st,st(3)
  40fd1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd1d:	rol    esp,0xe4
  40fd20:	daa    
  40fd21:	xor    edi,DWORD PTR [edi]
  40fd23:	aad    0x76
  40fd25:	fdiv   st,st(7)
  40fd27:	or     edi,ebp
  40fd29:	out    0xd7,al
  40fd2b:	cmp    eax,0xa5c08852
  40fd30:	push   ds
  40fd31:	push   es
  40fd32:	or     DWORD PTR [esp+edx*4-0x61],ecx
  40fd36:	stos   WORD PTR es:[edi],ax
  40fd38:	pop    ds
  40fd39:	aam    0x1f
  40fd3b:	(bad)  
  40fd3c:	cmp    al,0x78
  40fd3e:	lea    ebp,[edi]
  40fd40:	shr    ch,0xc8
  40fd43:	popa   
  40fd44:	pop    eax
  40fd45:	add    ebx,DWORD PTR [esi+0x51]
  40fd48:	dec    ecx
  40fd49:	cld    
  40fd4a:	pop    eax
  40fd4b:	or     eax,0x77fab3d8
  40fd50:	inc    edx
  40fd51:	jo     0x40fcf9
  40fd53:	(bad)  
  40fd54:	scas   eax,DWORD PTR es:[edi]
  40fd55:	and    DWORD PTR [ecx+eiz*4-0x245eabf2],0x742aaaf
  40fd60:	sub    ch,dh
  40fd62:	mov    eax,0x1e0d0ed1
  40fd67:	pop    ds
  40fd68:	inc    ebx
  40fd69:	sub    al,0xc8
  40fd6b:	pop    esi
  40fd6c:	fimul  DWORD PTR [edx+esi*4-0x39]
  40fd70:	sbb    eax,0x9780bbb0
  40fd75:	mov    ds:0x80e6590,al
  40fd7a:	and    cl,BYTE PTR [esi-0xc]
  40fd7d:	mov    BYTE PTR [ebx-0x2ae6496c],bh
  40fd83:	jg     0x40fdff
  40fd85:	nop
  40fd86:	mov    eax,ds:0x771d62d5
  40fd8b:	mov    cl,0xa
  40fd8d:	xchg   DWORD PTR [esi+0x4d88d79],edx
  40fd93:	(bad)  
  40fd94:	jns    0x40fd5b
  40fd96:	outs   dx,BYTE PTR ds:[esi]
  40fd97:	test   dl,bl
  40fd99:	(bad)  
  40fd9a:	cmp    BYTE PTR [eax+0x3],dh
  40fd9d:	dec    esi
  40fd9e:	jecxz  0x40fd7b
  40fda0:	and    dh,BYTE PTR [ebx+0x56c0727d]
  40fda6:	(bad)  
  40fda7:	mov    ebx,0x7742e54c
  40fdac:	cmp    bh,dl
  40fdae:	jno    0x40fe2c
  40fdb0:	push   esp
  40fdb1:	sbb    eax,0xde4cabbf
  40fdb6:	and    al,0x8b
  40fdb8:	mov    ebp,0xeb34b75e
  40fdbd:	sub    al,0x28
  40fdbf:	and    ebx,eax
  40fdc1:	sub    al,BYTE PTR fs:[eax]
  40fdc4:	imul   edi,DWORD PTR [ecx-0x35],0xffffffb0
  40fdc8:	(bad)  
  40fdc9:	push   ebx
  40fdca:	sbb    cl,BYTE PTR [edi]
  40fdcc:	fcmove st,st(5)
  40fdce:	lods   al,BYTE PTR ds:[esi]
  40fdcf:	add    al,0x80
  40fdd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdd2:	cmp    DWORD PTR [esi+0x23],ecx
  40fdd5:	push   ebx
  40fdd6:	test   eax,0x23662c03
  40fddb:	ins    DWORD PTR es:[edi],dx
  40fddc:	jo     0x40fd64
  40fdde:	dec    ebp
  40fddf:	add    DWORD PTR [ebp-0xbc02ab0],ebx
  40fde5:	sbb    al,0x0
  40fde7:	mov    esi,0xd47f8832
  40fdec:	sbb    edx,DWORD PTR [edx-0xd3ec28a]
  40fdf2:	lods   eax,DWORD PTR ds:[esi]
  40fdf3:	rol    BYTE PTR [ebp-0x5b],cl
  40fdf6:	(bad)  
  40fdf7:	xor    DWORD PTR [edi-0x3d6ac509],esp
  40fdfd:	cmp    ch,BYTE PTR [edi]
  40fdff:	add    al,0x99
  40fe01:	stc    
  40fe02:	iret   
  40fe03:	and    BYTE PTR [ebp-0x61],bh
  40fe06:	dec    ebx
  40fe07:	pop    ebx
  40fe08:	pop    ebp
  40fe09:	ret    0x23ea
  40fe0c:	mov    edx,0xe8eddfa2
  40fe11:	cmp    edi,DWORD PTR [eax-0x50]
  40fe14:	or     eax,0xc570810d
  40fe19:	loop   0x40fe7d
  40fe1b:	xchg   DWORD PTR [edx+0x5cdea08e],esi
  40fe21:	je     0x40fe96
  40fe23:	cmp    al,0x96
  40fe25:	(bad)
  40fe28:	adc    al,0x6e
  40fe2a:	xor    BYTE PTR [ebx+0x3d],ah
  40fe2d:	hlt    
  40fe2e:	and    esp,DWORD PTR [ebx-0x52]
  40fe31:	jmp    0x40fe09
  40fe33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe34:	dec    eax
  40fe35:	push   ecx
  40fe36:	pop    ds
  40fe37:	cmp    BYTE PTR [edx],bl
  40fe39:	sahf   
  40fe3a:	and    BYTE PTR [ebx-0x4b8178f9],0x2d
  40fe41:	cmp    dl,BYTE PTR [ecx-0x6efd59ef]
  40fe47:	inc    ebx
  40fe48:	xor    al,0x5d
  40fe4a:	fwait
  40fe4b:	gs clc 
  40fe4d:	add    al,0xad
  40fe4f:	sbb    DWORD PTR ds:[edi*2-0x3c9cfd59],eax
  40fe57:	inc    edx
  40fe58:	shl    BYTE PTR [eax-0x71ccef77],1
  40fe5e:	out    dx,al
  40fe5f:	out    0xc0,eax
  40fe61:	xchg   esi,eax
  40fe62:	adc    DWORD PTR [esi-0x388b3681],edx
  40fe68:	bound  edx,QWORD PTR [edx]
  40fe6a:	xor    eax,DWORD PTR [eax+0x49f5839c]
  40fe70:	jbe    0x40fe7d
  40fe72:	xchg   esp,eax
  40fe73:	xchg   BYTE PTR [ecx+0x4dfb254f],ah
  40fe79:	std    
  40fe7a:	adc    BYTE PTR [eax+ecx*4],0x52
  40fe7e:	repz xchg ebp,eax
  40fe80:	(bad)  
  40fe81:	and    eax,0xc952d2ee
  40fe86:	jno    0x40fec4
  40fe88:	retf   0xc279
  40fe8b:	pop    ss
  40fe8c:	and    al,0xe0
  40fe8e:	stc    
  40fe8f:	out    0x8e,eax
  40fe91:	cmp    al,0x99
  40fe93:	(bad)  
  40fe95:	leave  
  40fe96:	ins    DWORD PTR es:[edi],dx
  40fe97:	inc    ebx
  40fe98:	xor    eax,DWORD PTR [ebx]
  40fe9a:	fcom   DWORD PTR [edi+0x27e279d6]
  40fea0:	or     eax,0xf6016daf
  40fea5:	adc    edi,DWORD PTR [edx+0x80c981f]
  40feab:	aam    0x18
  40fead:	or     DWORD PTR [ebp+eiz*8-0x43e067d],ecx
  40feb4:	stc    
  40feb5:	(bad)  
  40feb6:	pop    ebx
  40feb7:	cmc    
  40feb8:	in     eax,dx
  40feb9:	out    0x42,eax
  40febb:	xor    BYTE PTR gs:[edi],ah
  40febe:	enter  0x8354,0x35
  40fec2:	mov    ds:0x4a8d0015,al
  40fec7:	push   0xffffffb5
  40fec9:	cs dec eax
  40fecb:	gs pop ss
  40fecd:	or     eax,0x2d4ca5ac
  40fed2:	jmp    0x4d5eba74
  40fed7:	cmp    BYTE PTR [bx+0x4d],0xd5
  40fedc:	fldcw  WORD PTR [edx]
  40fede:	fcomip st,st(5)
  40fee0:	sar    BYTE PTR [ecx+0x2b1a6138],1
  40fee6:	scas   al,BYTE PTR es:[edi]
  40fee7:	add    BYTE PTR [esp+edi*8-0x6efeb633],al
  40feee:	and    esp,edx
  40fef0:	repnz xchg ecx,eax
  40fef2:	shl    BYTE PTR [eax],0xa2
  40fef5:	jns    0x40ff44
  40fef7:	xchg   esp,eax
  40fef8:	xor    eax,0x34854121
  40fefd:	sub    esp,DWORD PTR [eax+0x42ac05ee]
  40ff03:	shl    DWORD PTR [edx],0xb0
  40ff06:	push   ecx
  40ff07:	shl    DWORD PTR [esi-0x2e0a35da],0x82
  40ff0e:	xchg   edx,eax
  40ff0f:	hlt    
  40ff10:	mov    ebp,0x6e481ac1
  40ff15:	js     0x40fedb
  40ff17:	les    edi,FWORD PTR [ecx+0x3f]
  40ff1a:	inc    edi
  40ff1b:	xor    bh,ah
  40ff1d:	xlat   BYTE PTR ds:[ebx]
  40ff1e:	or     eax,0x3c42dcb1
  40ff23:	retf   0xed7e
  40ff26:	(bad)  
  40ff27:	jmp    0xce275bb5
  40ff2c:	lds    esi,FWORD PTR [eax-0x2b]
  40ff2f:	addr16 fdiv st,st(2)
  40ff32:	repnz icebp 
  40ff34:	call   0x2a2c:0xdae9c843
  40ff3b:	mov    ecx,0x67d7f768
  40ff40:	mov    ch,0x2f
  40ff42:	mov    cs,WORD PTR [ebx+0x3d]
  40ff45:	add    al,0x35
  40ff47:	fs mov eax,0xcf50279a
  40ff4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff4e:	dec    ebp
  40ff4f:	jae    0x40feee
  40ff51:	leave  
  40ff52:	cmp    esi,DWORD PTR [eax]
  40ff54:	lods   al,BYTE PTR ds:[esi]
  40ff55:	mov    dl,0x8a
  40ff57:	sub    bl,BYTE PTR [ebx-0x50]
  40ff5a:	cld    
  40ff5b:	nop
  40ff5c:	out    0x1d,eax
  40ff5e:	js     0x40ffa5
  40ff60:	push   esp
  40ff61:	cwde   
  40ff62:	jge    0x40ff77
  40ff64:	aas    
  40ff65:	dec    eax
  40ff66:	xor    ebp,DWORD PTR [edx-0x4]
  40ff69:	sub    dl,BYTE PTR [eax-0x4c]
  40ff6c:	js     0x40ffb7
  40ff6e:	add    eax,0xa9e3024d
  40ff73:	adc    DWORD PTR [esi+0x5d],ebx
  40ff76:	push   ebp
  40ff77:	adc    ch,ah
  40ff79:	add    DWORD PTR [ecx],eax
  40ff7b:	xor    esp,DWORD PTR ds:0x1f6bade7
  40ff81:	popf   
  40ff82:	ss pusha 
  40ff84:	inc    edi
  40ff85:	pusha  
  40ff86:	pop    edx
  40ff87:	ins    WORD PTR es:[di],dx
  40ff8a:	push   esi
  40ff8b:	fisubr WORD PTR [edi+edi*2]
  40ff8e:	or     ch,0x23
  40ff91:	mov    ds:0xfa4f2f9c,eax
  40ff96:	sub    cl,BYTE PTR [esi-0x28504cf2]
  40ff9c:	fild   DWORD PTR [edi-0x6f]
  40ff9f:	push   ebx
  40ffa0:	sub    BYTE PTR [esi+0x9424ac1],ah
  40ffa6:	and    bh,bl
  40ffa8:	mov    eax,ds:0xd9cfa3cc
  40ffad:	pushf  
  40ffae:	adc    eax,0x4ef43615
  40ffb3:	lock int 0x9c
  40ffb6:	ss es (bad) 
  40ffb9:	aad    0xb8
  40ffbb:	retf   
  40ffbc:	inc    edx
  40ffbe:	add    BYTE PTR [eax+0x65],al
  40ffc1:	sbb    al,BYTE PTR [eax]
  40ffc3:	inc    ecx
  40ffc4:	ins    DWORD PTR es:[edi],dx
  40ffc5:	mov    esp,0x80c08ac1
  40ffca:	pop    edx
  40ffcb:	inc    ebp
  40ffcc:	mov    eax,0x1f21ba56
  40ffd1:	xchg   DWORD PTR [edi-0xa],esp
  40ffd4:	sbb    BYTE PTR [ebx+0x65],al
  40ffd7:	aad    0x81
  40ffd9:	pop    esi
  40ffda:	enter  0xb96a,0xd4
  40ffde:	adc    eax,0x39ddef5e
  40ffe3:	cmp    ecx,DWORD PTR [ecx-0x756eca33]
  40ffe9:	or     BYTE PTR [ebx],0xf5
  40ffec:	cdq    
  40ffed:	aas    
  40ffee:	(bad)  
  40ffef:	sub    ebx,DWORD PTR ds:0xffc03cf3
  40fff5:	push   0xc7cc177
  40fffa:	mov    ?,WORD PTR [ecx+0x2ebfb798]
  410000:	sti    
  410001:	cmp    al,0x36
  410003:	ss gs mov ebp,0x92c1aab8
  41000a:	adc    al,0xc2
  41000c:	xrelease xchg BYTE PTR ss:[esi+edi*8-0x55],dl
  410012:	ja     0x40ffb8
  410014:	fwait
  410015:	les    ebx,FWORD PTR [esi-0x32]
  410018:	loopne 0x410085
  41001a:	ds add al,0x7d
  41001d:	retf   
  41001e:	xlat   BYTE PTR ds:[ebx]
  41001f:	sbb    BYTE PTR [ebx-0x5a8898d5],ah
  410025:	(bad)
  410028:	outs   dx,DWORD PTR ds:[esi]
  410029:	nop
  41002a:	add    ch,BYTE PTR [esp+ecx*2-0xa]
  41002e:	adc    al,0x42
  410030:	xlat   BYTE PTR ds:[ebx]
  410031:	inc    edi
  410032:	nop
  410033:	jae    0x4100a2
  410035:	jns    0x40fff0
  410037:	shr    BYTE PTR [eax-0x11],0xab
  41003b:	or     al,0x30
  41003d:	push   eax
  41003e:	in     al,dx
  41003f:	mov    esp,DWORD PTR [eax-0x66d73f6f]
  410045:	ret    
  410046:	in     al,0xcc
  410048:	and    al,0xef
  41004a:	sahf   
  41004b:	lods   al,BYTE PTR ds:[esi]
  41004c:	js     0x410086
  41004e:	mov    ch,0xa4
  410050:	pop    edi
  410051:	fld    st(2)
  410053:	or     ecx,eax
  410055:	rcr    eax,cl
  410057:	jbe    0x410046
  410059:	je     0x410021
  41005b:	and    ecx,edi
  41005d:	dec    esi
  41005e:	popf   
  41005f:	pop    ebp
  410060:	sti    
  410061:	adc    al,0xe3
  410063:	and    ebx,ecx
  410065:	sbb    eax,0xf9d6740f
  41006a:	pop    ds
  41006b:	mov    edx,0xf4c35727
  410070:	loop   0x410038
  410072:	das    
  410073:	dec    ebp
  410074:	loop   0x41006b
  410076:	and    bh,BYTE PTR [esi-0x5a]
  410079:	jge    0x410091
  41007b:	lea    esp,[eax]
  41007d:	inc    esi
  41007e:	xor    BYTE PTR [eax+0x28],bl
  410081:	arpl   ax,bp
  410083:	jmp    0xabc330ee
  410088:	mov    cl,0x48
  41008a:	sbb    BYTE PTR [eax],bh
  41008c:	push   ebp
  41008d:	lods   al,BYTE PTR ds:[esi]
  41008e:	scas   eax,DWORD PTR es:[edi]
  41008f:	clc    
  410090:	loopne 0x410037
  410092:	jae    0x41010c
  410094:	cmp    al,0x8
  410096:	mov    WORD PTR [edx-0x2328154b],ss
  41009c:	xchg   ecx,eax
  41009d:	lahf   
  41009e:	mov    ds:0x4d9f2530,al
  4100a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100a4:	dec    eax
  4100a5:	sbb    al,0x39
  4100a7:	cmp    al,0xbd
  4100a9:	adc    eax,0x3dd59eb
  4100ae:	jns    0x410091
  4100b0:	cmp    al,0x36
  4100b2:	pusha  
  4100b3:	scas   al,BYTE PTR es:[edi]
  4100b4:	pop    es
  4100b5:	dec    eax
  4100b6:	cli    
  4100b7:	mov    dl,0xc7
  4100b9:	pushf  
  4100ba:	dec    ebx
  4100bb:	scas   eax,DWORD PTR es:[edi]
  4100bc:	xor    ebx,DWORD PTR [ebp-0x51]
  4100bf:	lock xchg BYTE PTR [esi-0x22],ah
  4100c3:	inc    esp
  4100c4:	xor    ebp,DWORD PTR [ecx+0x5184b979]
  4100ca:	mov    eax,0xf24030e7
  4100cf:	pop    edx
  4100d0:	ficomp WORD PTR [ecx-0x23]
  4100d3:	(bad)  [ebp+0x1d]
  4100d6:	jae    0x4100ff
  4100d8:	push   ecx
  4100d9:	and    DWORD PTR [eax],eax
  4100db:	mov    ebp,0x90e24bda
  4100e0:	dec    eax
  4100e1:	ins    DWORD PTR es:[edi],dx
  4100e2:	bound  ecx,QWORD PTR [edx-0x70846e1a]
  4100e8:	add    eax,esp
  4100ea:	mov    ebx,esp
  4100ec:	mov    dl,BYTE PTR [ecx]
  4100ee:	fistp  WORD PTR [edx]
  4100f0:	and    edx,ebx
  4100f2:	dec    ebx
  4100f3:	mov    WORD PTR [eax+0x14002b4f],es
  4100f9:	ja     0x4100bf
  4100fb:	sar    BYTE PTR [edx+0x4182befc],0x59
  410102:	or     eax,0xb4faf5d7
  410107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410108:	call   0xa86b:0x5e2db88c
  41010f:	cdq    
  410110:	mov    BYTE PTR [edi],al
  410112:	and    edx,DWORD PTR [edi+0x5fbe572a]
  410118:	daa    
  410119:	mov    dl,0x26
  41011b:	pushf  
  41011c:	(bad)  
  41011d:	cs in  al,dx
  41011f:	rcl    eax,cl
  410121:	push   esi
  410122:	sub    eax,0x683c4999
  410127:	in     eax,0x9d
  410129:	cmp    eax,0x446db3b1
  41012e:	pushf  
  41012f:	aaa    
  410130:	jge    0x41011e
  410132:	mov    cl,cl
  410134:	icebp  
  410135:	cmc    
  410136:	and    bh,cl
  410138:	add    BYTE PTR [ecx],dh
  41013a:	or     BYTE PTR [ebp-0x4ff95981],dl
  410140:	cmp    eax,0xf03353d3
  410145:	pop    es
  410146:	leave  
  410147:	push   edx
  410148:	xchg   BYTE PTR [esi-0x72],dh
  41014b:	out    dx,al
  41014c:	hlt    
  41014d:	ret    0x9373
  410150:	sahf   
  410151:	(bad)  
  410152:	cwde   
  410153:	fdiv   DWORD PTR [edx]
  410155:	(bad)  
  410156:	int    0x3d
  410158:	arpl   bp,dx
  41015a:	sub    esp,DWORD PTR [eax]
  41015c:	xor    eax,0x53577ca3
  410161:	cwde   
  410162:	jae    0x4101b9
  410164:	mov    esi,0xb2c61231
  410169:	ins    DWORD PTR es:[edi],dx
  41016a:	cdq    
  41016b:	pop    esi
  41016c:	loope  0x410136
  41016e:	inc    BYTE PTR [eax+0x72f4daef]
  410174:	push   cs
  410175:	push   edi
  410176:	leave  
  410177:	adc    eax,0xd5947e2f
  41017c:	ins    DWORD PTR es:[edi],dx
  41017d:	cli    
  41017e:	or     DWORD PTR [esi],esi
  410180:	dec    esi
  410181:	mov    ecx,0x9b57a31
  410186:	test   al,0xe0
  410188:	and    ch,bl
  41018a:	mov    ecx,0x539ec3d9
  41018f:	stc    
  410190:	mov    al,0xf2
  410192:	inc    esp
  410193:	je     0x41019d
  410195:	adc    esp,edi
  410197:	out    dx,eax
  410198:	rcl    DWORD PTR [ebp+0x3e5b933],1
  41019e:	scas   al,BYTE PTR es:[edi]
  41019f:	bound  ebx,QWORD PTR [esi+0x5]
  4101a2:	inc    esi
  4101a3:	out    dx,eax
  4101a4:	push   ss
  4101a5:	sbb    al,0xf
  4101a7:	out    dx,al
  4101a8:	sub    esi,eax
  4101aa:	mov    al,0x78
  4101ac:	or     eax,0x8950e5c4
  4101b1:	mov    ebx,0x952aa03
  4101b6:	repnz inc edi
  4101b8:	mov    bl,0x5
  4101ba:	das    
  4101bb:	bound  edx,QWORD PTR [esi-0x42]
  4101be:	pop    edi
  4101bf:	xor    DWORD PTR [ebx+edi*8-0x66],ebp
  4101c3:	xchg   esi,eax
  4101c4:	adc    eax,0xb00903c1
  4101c9:	inc    edi
  4101ca:	inc    ebp
  4101cb:	xor    BYTE PTR ss:[ecx-0x7],0x21
  4101d0:	mov    bh,cl
  4101d2:	cli    
  4101d3:	jo     0x410240
  4101d5:	lods   eax,DWORD PTR ds:[esi]
  4101d6:	scas   eax,DWORD PTR es:[edi]
  4101d7:	clc    
  4101d8:	cmc    
  4101d9:	push   esi
  4101da:	and    eax,0xd0faa39b
  4101df:	inc    ebp
  4101e0:	xchg   DWORD PTR [edx],eax
  4101e2:	pop    eax
  4101e3:	mov    bl,0x38
  4101e5:	data16 lock adc al,0x1d
  4101e9:	jne    0x410261
  4101eb:	jl     0x410254
  4101ed:	pop    ebp
  4101ee:	ins    DWORD PTR es:[edi],dx
  4101ef:	ins    BYTE PTR es:[edi],dx
  4101f0:	sti    
  4101f1:	mov    ebp,0xa81da3c0
  4101f6:	cmp    edx,edx
  4101f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101f9:	lock or BYTE PTR [ebp+0xc10c148],bl
  410200:	test   BYTE PTR [edi],0x7f
  410203:	cmp    al,0xa9
  410205:	shl    BYTE PTR ds:0x41f1883f,cl
  41020b:	xchg   edx,eax
  41020c:	sub    DWORD PTR [ebx-0x7a711ed7],0x21
  410213:	ins    BYTE PTR es:[edi],dx
  410214:	fs xchg ebp,eax
  410216:	inc    ecx
  410217:	mov    bl,0x7
  410219:	mov    ebp,0xcf7e0a63
  41021e:	arpl   WORD PTR ds:0x6b5b1783,bx
  410224:	nop
  410225:	les    edx,FWORD PTR [edx]
  410227:	iret   
  410228:	(bad)  
  410229:	nop
  41022a:	dec    ebx
  41022b:	pushf  
  41022c:	sbb    esp,DWORD PTR [ecx+esi*1+0x6]
  410230:	sti    
  410231:	add    eax,0x3f480bbe
  410236:	pushf  
  410237:	pop    ebp
  410238:	or     BYTE PTR [ebp-0x1a],bl
  41023b:	inc    edi
  41023c:	sti    
  41023d:	xor    al,0x8f
  41023f:	and    eax,0x7371cf4a
  410244:	xor    al,0x9d
  410246:	xor    eax,0xe9e9075e
  41024b:	add    eax,0x4e85433
  410250:	cld    
  410251:	xor    al,ah
  410253:	xacquire xchg BYTE PTR [edx-0x461a9c34],cl
  41025a:	dec    edx
  41025b:	in     eax,0x6f
  41025d:	xchg   esp,eax
  41025e:	xor    al,0x65
  410260:	inc    edi
  410261:	cmp    al,0xc5
  410263:	adc    al,0x55
  410265:	mov    WORD PTR [esi+eax*8+0x2913b7ff],es
  41026c:	adc    edi,DWORD PTR [edx]
  41026e:	and    dh,BYTE PTR [edx+0x9421a15]
  410274:	je     0x410200
  410276:	pop    eax
  410277:	sar    dl,1
  410279:	dec    ebp
  41027a:	push   esp
  41027b:	gs jmp 0xbb:0xb3424b
  410283:	push   es
  410284:	scas   al,BYTE PTR es:[edi]
  410285:	cmp    eax,0x8314d53a
  41028a:	push   edx
  41028b:	xor    al,0xa4
  41028d:	adc    al,0x3b
  41028f:	(bad)  
  410290:	adc    eax,0x56ac9da0
  410295:	lock lds esi,FWORD PTR [eax-0x1f1eccc9]
  41029c:	out    dx,al
  41029d:	pop    ebp
  41029e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41029f:	loop   0x4102ea
  4102a1:	fs mov ebp,0x5deee817
  4102a7:	xor    esp,eax
  4102a9:	loope  0x410240
  4102ab:	or     DWORD PTR [edx],0xb8b36447
  4102b1:	out    dx,eax
  4102b2:	mov    al,ds:0xdfac087b
  4102b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b8:	mov    dh,0x60
  4102ba:	dec    ebp
  4102bb:	pop    ds
  4102bc:	jbe    0x41032b
  4102be:	mov    ebx,0x53e01f73
  4102c3:	mov    cl,0xb9
  4102c5:	mov    dh,0xd9
  4102c7:	inc    esi
  4102c8:	rcl    DWORD PTR [ebx+0x29],cl
  4102cb:	or     al,0x44
  4102cd:	sbb    eax,0x7c5fb82f
  4102d2:	jl     0x410265
  4102d4:	fs aaa 
  4102d6:	lock rcr DWORD PTR [eax-0x2588ea5c],cl
  4102dd:	loopne 0x41031c
  4102df:	push   edx
  4102e0:	rol    BYTE PTR ds:0xc568d451,1
  4102e6:	pusha  
  4102e7:	cwde   
  4102e8:	out    dx,eax
  4102e9:	inc    esp
  4102ea:	mov    bl,0xa6
  4102ec:	loopne 0x410309
  4102ee:	out    dx,eax
  4102ef:	push   0xffffff88
  4102f1:	xlat   BYTE PTR ds:[ebx]
  4102f2:	cmp    al,0x5f
  4102f4:	pop    eax
  4102f5:	cmp    DWORD PTR [edi*4-0x65672535],ecx
  4102fc:	ret    
  4102fd:	or     al,0xaf
  4102ff:	and    eax,edx
  410301:	inc    edx
  410302:	test   esp,esp
  410304:	dec    ecx
  410305:	lea    ecx,[ebp+0x78f36973]
  41030b:	ds idiv dh
  41030e:	in     eax,dx
  41030f:	lahf   
  410310:	mov    bh,0xcb
  410312:	push   ss
  410313:	in     al,dx
  410314:	ja     0x410339
  410316:	nop
  410317:	or     al,0xc0
  410319:	ficomp DWORD PTR [ecx-0x6fe0ce92]
  41031f:	aaa    
  410320:	sbb    al,0x73
  410322:	js     0x410337
  410324:	pop    ds
  410325:	cli    
  410326:	cmp    BYTE PTR [esi],ah
  410328:	cmp    eax,0xf7636785
  41032d:	lods   eax,DWORD PTR ds:[esi]
  41032e:	aas    
  41032f:	retf   0x8fc9
  410332:	(bad)  
  410333:	mov    ds:0xda2242e6,al
  410338:	std    
  410339:	fild   DWORD PTR [ecx+0x3b]
  41033c:	add    BYTE PTR [ecx],dl
  41033e:	mov    ds:0xebe7c18c,eax
  410343:	jle    0x410389
  410345:	xchg   ebp,eax
  410346:	push   esp
  410347:	dec    esp
  410348:	mov    edx,cs
  41034a:	sahf   
  41034b:	fstp   QWORD PTR [ebp-0x477bd11f]
  410351:	pop    edx
  410352:	mov    edi,0xbee98517
  410357:	push   edx
  410358:	enter  0x16fb,0x13
  41035c:	inc    ebx
  41035d:	jge    0x4103c7
  41035f:	xchg   ebp,eax
  410360:	rcl    esp,1
  410362:	fwait
  410363:	add    dh,BYTE PTR cs:[edx]
  410366:	sbb    eax,0xd3bb987d
  41036b:	xor    al,0xa5
  41036d:	rcl    dh,1
  41036f:	icebp  
  410370:	push   edi
  410371:	aas    
  410372:	shl    BYTE PTR [ebx+ebp*4-0x60],0x33
  410377:	std    
  410378:	and    DWORD PTR es:[ebp+0x3e],esp
  41037c:	xchg   dl,ch
  41037e:	xchg   dx,ax
  410380:	call   FWORD PTR [edx-0x26824d4c]
  410386:	out    dx,al
  410387:	jmp    0x2fb636ac
  41038c:	pop    ebx
  41038d:	jno    0x4103a3
  41038f:	dec    ebp
  410390:	xchg   edx,eax
  410391:	push   0xffffff87
  410393:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  410395:	or     BYTE PTR [eax-0x31],al
  410398:	bound  ebx,QWORD PTR [ebx]
  41039a:	out    0x15,al
  41039c:	xor    DWORD PTR [esi+0x11],esp
  41039f:	mov    ds:0xa445318a,al
  4103a4:	cmp    eax,0x6856c674
  4103a9:	or     al,0xb
  4103ab:	push   edi
  4103ac:	mov    al,ds:0x95dc289b
  4103b1:	add    bl,bl
  4103b3:	loope  0x4103fb
  4103b5:	ins    BYTE PTR es:[edi],dx
  4103b6:	dec    esp
  4103b7:	(bad)  
  4103b8:	or     BYTE PTR [eax],ch
  4103ba:	ins    BYTE PTR es:[edi],dx
  4103bb:	stos   BYTE PTR es:[edi],al
  4103bc:	xchg   DWORD PTR [eax-0x25],esi
  4103bf:	push   ebx
  4103c0:	fwait
  4103c1:	push   edi
  4103c2:	scas   eax,DWORD PTR es:[edi]
  4103c3:	(bad)
  4103c6:	xchg   esi,eax
  4103c7:	(bad)  
  4103c8:	ret    0xccf0
  4103cb:	push   ecx
  4103cc:	jns    0x410394
  4103ce:	ret    0x91c
  4103d1:	addr16 add eax,0xf12283fc
  4103d7:	xchg   esp,eax
  4103d8:	push   0x5c225690
  4103dd:	push   ebp
  4103de:	scas   eax,DWORD PTR es:[edi]
  4103df:	jge    0x410428
  4103e1:	xchg   esp,eax
  4103e2:	xchg   esi,eax
  4103e3:	sub    ebp,DWORD PTR [edx-0x7212311]
  4103e9:	sub    dh,dl
  4103eb:	mov    cl,0x3d
  4103ee:	xchg   ebp,eax
  4103ef:	outs   dx,BYTE PTR ds:[esi]
  4103f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103f1:	(bad)  
  4103f2:	sub    BYTE PTR [ecx],bl
  4103f4:	mov    ebx,0x3f437445
  4103f9:	and    ebx,esp
  4103fb:	fs repnz retf 
  4103fe:	repnz dec ebx
  410400:	xchg   ebx,eax
  410401:	dec    ebx
  410402:	dec    edx
  410403:	(bad)  
  410404:	mov    BYTE PTR [ecx],al
  410406:	or     BYTE PTR [ebx+0x4ed04cca],al
  41040c:	xchg   edi,eax
  41040d:	jmp    0x410466
  41040f:	mov    bh,0x8d
  410411:	dec    eax
  410412:	in     eax,dx
  410413:	add    DWORD PTR [ecx+ebx*2-0x66],eax
  410417:	jmp    0x4103b8
  410419:	push   0x7ac139cf
  41041e:	pop    ebx
  41041f:	bound  ebp,QWORD PTR [ebx-0x5b]
  410422:	fdiv   st(5),st
  410424:	pushf  
  410425:	das    
  410426:	cld    
  410427:	ret    
  410428:	push   ebp
  410429:	shr    ebp,cl
  41042b:	test   al,0xad
  41042d:	mov    eax,ds:0x1d3908f0
  410432:	lahf   
  410433:	xor    al,0xb1
  410435:	sbb    ax,0xb93c
  410439:	pushf  
  41043a:	xor    eax,0xf0c21ab2
  41043f:	jmp    0xfe4481bd
  410444:	xchg   edi,eax
  410445:	ret    
  410446:	xor    edx,DWORD PTR [edx]
  410448:	ror    DWORD PTR [ecx-0x61],1
  41044b:	int    0x49
  41044d:	shr    DWORD PTR [edi],0xf9
  410450:	test   ebp,ebx
  410452:	hlt    
  410453:	mov    ds:0xbaf6435b,al
  410458:	xchg   edi,eax
  410459:	loop   0x410422
  41045b:	xchg   ebx,eax
  41045c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41045d:	neg    DWORD PTR [edx-0xc]
  410460:	icebp  
  410461:	push   esi
  410462:	sahf   
  410463:	mov    bh,0xa
  410465:	ins    DWORD PTR es:[edi],dx
  410466:	pop    ss
  410467:	pop    ds
  410468:	and    eax,0xc15ffe35
  41046d:	lahf   
  41046e:	das    
  41046f:	cdq    
  410470:	imul   BYTE PTR [ebp+0x42]
  410473:	iret   
  410474:	popf   
  410475:	out    0xbb,eax
  410477:	mov    ds:0x86af94a1,eax
  41047c:	fild   DWORD PTR ds:0x4b989c67
  410482:	mov    eax,ds:0x1276bcc9
  410487:	rcr    cl,0x93
  41048a:	or     al,0x8c
  41048c:	mov    ds:0xc54fd382,eax
  410491:	sub    al,0xda
  410493:	ds adc edi,ebx
  410496:	jne    0x4104dc
  410498:	loopne 0x4104d3
  41049a:	scas   eax,DWORD PTR es:[edi]
  41049b:	jge    0x41043c
  41049d:	addr16 inc eax
  41049f:	not    DWORD PTR [ebp+0x2bffa75e]
  4104a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104a6:	fsub   QWORD PTR [eax-0x6c]
  4104a9:	(bad)  
  4104aa:	xchg   BYTE PTR [ecx-0x56],ah
  4104ad:	aaa    
  4104ae:	push   edx
  4104af:	lds    ebx,FWORD PTR [ecx]
  4104b1:	push   0x8eb95990
  4104b6:	xchg   ecx,eax
  4104b7:	sub    al,0x44
  4104b9:	(bad)  
  4104bb:	xor    cl,0xb0
  4104be:	shl    BYTE PTR [esp+ecx*4+0x15],cl
  4104c2:	aas    
  4104c3:	jg     0x41053d
  4104c5:	jbe    0x410504
  4104c7:	pop    ebx
  4104c8:	daa    
  4104c9:	mov    esp,0x6a3e62e7
  4104ce:	and    ch,BYTE PTR [ecx+0x111bec6e]
  4104d4:	sbb    dl,BYTE PTR [ecx]
  4104d6:	sub    DWORD PTR [esi-0x312b164e],0x5886bbe0
  4104e0:	jmp    0x41046d
  4104e2:	add    eax,0xff52135
  4104e7:	retf   0x5c6e
  4104ea:	scas   ax,WORD PTR es:[edi]
  4104ec:	jmp    0x18c0:0xf649a4ad
  4104f3:	test   ebp,ebx
  4104f5:	jmp    0xce6c:0xd6e30fb0
  4104fc:	lahf   
  4104fd:	inc    esi
  4104fe:	out    dx,eax
  4104ff:	js     0x41050f
  410501:	jmp    0xc1490419
  410506:	sti    
  410507:	aas    
  410508:	cmc    
  410509:	je     0x41053e
  41050b:	push   ss
  41050c:	xchg   ecx,eax
  41050d:	aam    0x20
  41050f:	push   0x5111ad27
  410514:	mov    ds:0x8ed6f3c,eax
  410519:	(bad)  
  41051b:	scas   eax,DWORD PTR es:[edi]
  41051c:	out    dx,al
  41051d:	mov    ebp,0x9a68099e
  410522:	fimul  DWORD PTR [ecx+eiz*4-0x5d]
  410526:	shr    edi,1
  410528:	xchg   edi,eax
  410529:	popa   
  41052a:	retf   
  41052b:	ins    DWORD PTR es:[edi],dx
  41052c:	adc    ebx,DWORD PTR [esi+0x7e34294e]
  410532:	and    al,0x6e
  410534:	push   0x49
  410536:	mov    ebx,0x97f73b4b
  41053b:	iret   
  41053c:	loopne 0x4104df
  41053e:	imul   esp,edi,0x4f
  410541:	or     ch,BYTE PTR [edi+ebx*1-0x62]
  410545:	stos   BYTE PTR es:[edi],al
  410546:	repnz push cs
  410548:	add    al,BYTE PTR [esi]
  41054a:	cmp    al,0xe5
  41054c:	js     0x4104d5
  41054e:	js     0x4104d2
  410550:	repz and BYTE PTR [edi+0x71],bh
  410554:	and    ch,BYTE PTR ds:[ecx-0x2f]
  410558:	or     di,WORD PTR [edi+0x5bd6120f]
  41055f:	daa    
  410560:	icebp  
  410561:	add    eax,0xcfca4dd
  410567:	out    0x95,al
  410569:	popa   
  41056a:	jge    0x410557
  41056c:	jns    0x4105c3
  41056e:	(bad)  
  41056f:	and    esi,ebx
  410571:	cmp    eax,0xffffffe7
  410574:	sub    BYTE PTR [ebp-0x5],0xb3
  410578:	cmp    eax,0xa4a0b7f7
  41057d:	or     eax,0x5cb70fdb
  410582:	dec    ebp
  410583:	xchg   al,cl
  410585:	popf   
  410586:	mov    BYTE PTR [edx+0x7fe04812],ch
  41058c:	loop   0x410544
  41058e:	push   ecx
  41058f:	xor    ah,dl
  410591:	inc    esp
  410592:	and    esp,DWORD PTR [edx]
  410594:	jns    0x41056d
  410596:	ret    
  410597:	sbb    eax,0xd7ab9530
  41059c:	ror    BYTE PTR [ebp+ebp*4-0x18ad89ca],0x48
  4105a4:	add    edi,DWORD PTR [eax-0x21]
  4105a7:	xchg   ecx,eax
  4105a8:	mov    ah,0xcb
  4105aa:	sar    DWORD PTR [edi-0x78948ac1],cl
  4105b0:	xchg   ebx,eax
  4105b1:	aad    0x72
  4105b3:	mov    cl,0xf5
  4105b5:	mov    ebp,0x9b43ade8
  4105ba:	retf   0xd20e
  4105bd:	pop    eax
  4105be:	out    dx,al
  4105bf:	jmp    DWORD PTR [edx-0x46]
  4105c2:	outs   dx,BYTE PTR ds:[esi]
  4105c3:	push   esi
  4105c4:	hlt    
  4105c5:	xchg   ecx,eax
  4105c6:	or     DWORD PTR [esi],ebx
  4105c8:	push   eax
  4105c9:	sub    cl,al
  4105cb:	pop    edx
  4105cc:	add    al,0xe5
  4105ce:	pop    ss
  4105cf:	xchg   esi,eax
  4105d0:	jle    0x410557
  4105d2:	fstp   DWORD PTR [edi]
  4105d4:	jmp    0x41061f
  4105d6:	xchg   dh,dl
  4105d8:	xchg   edi,eax
  4105d9:	mov    ch,cl
  4105db:	(bad)  
  4105dc:	cmp    ebx,esp
  4105de:	aaa    
  4105df:	ds push edx
  4105e1:	div    DWORD PTR [ebp+0xe]
  4105e4:	mov    ebp,0xbd6fe639
  4105e9:	(bad)  
  4105ea:	adc    BYTE PTR [edx+0x1b],bh
  4105ed:	push   ds
  4105ee:	pop    esi
  4105ef:	inc    esi
  4105f0:	dec    esp
  4105f1:	jbe    0x41058f
  4105f3:	xor    al,0xdc
  4105f5:	mov    esp,DWORD PTR [edi+0x673a2b32]
  4105fb:	xor    DWORD PTR [edi+esi*1],edi
  4105fe:	fs stos DWORD PTR es:[edi],eax
  410600:	mov    edx,0x6d252fb1
  410605:	pop    esi
  410606:	pop    es
  410607:	mov    ah,BYTE PTR [edi-0x7004114d]
  41060d:	sti    
  41060e:	mov    ah,0x12
  410610:	jnp    0x4105a7
  410612:	js     0x41066e
  410614:	out    0x12,eax
  410616:	cmp    cl,bh
  410618:	push   edi
  410619:	mov    ch,0x88
  41061b:	cli    
  41061c:	push   es
  41061d:	sub    ch,ah
  41061f:	and    BYTE PTR [ebx-0x20],cl
  410622:	push   esi
  410623:	iret   
  410624:	into   
  410625:	pop    ss
  410626:	jmp    0x410695
  410628:	in     al,dx
  410629:	xor    DWORD PTR [esp+esi*8+0x789eb0d9],ebx
  410630:	in     eax,0x88
  410632:	rcr    BYTE PTR [esi],1
  410634:	nop
  410635:	arpl   bp,bx
  410637:	fcomp  QWORD PTR [ecx+0x7e6cc517]
  41063d:	nop
  41063e:	aaa    
  41063f:	popa   
  410640:	jnp    0x410604
  410642:	sub    bh,0x2b
  410645:	sub    ah,BYTE PTR [edi+0x44625af6]
  41064b:	xor    BYTE PTR [ebx],ch
  41064d:	sub    al,0x53
  41064f:	dec    ebp
  410650:	dec    ebx
  410651:	jae    0x410664
  410653:	in     eax,0xe8
  410655:	mov    ds:0x410fa6a8,al
  41065a:	and    BYTE PTR gs:[ebx],ch
  41065d:	add    dh,BYTE PTR [edx-0x2c]
  410660:	popf   
  410661:	in     al,0x9a
  410663:	push   eax
  410664:	cli    
  410665:	(bad)  
  410666:	aad    0xdd
  410668:	adc    ebx,edi
  41066a:	fldcw  WORD PTR [eax+0x7c]
  41066d:	pop    ebp
  41066e:	(bad)  
  41066f:	mov    eax,0x9a4135f3
  410674:	push   esi
  410675:	mov    BYTE PTR [ecx+0x5c],0x60
  410679:	pop    ds
  41067a:	test   ebx,0xd45554fe
  410680:	xor    BYTE PTR [esi+0x524fc622],cl
  410686:	jne    0x4106ec
  410688:	add    al,0xb5
  41068a:	adc    al,0x96
  41068c:	cli    
  41068d:	push   ss
  41068e:	mov    eax,0xa4b52221
  410693:	xchg   DWORD PTR [edi],esp
  410695:	(bad)  
  410696:	js     0x41061a
  410698:	mov    bl,BYTE PTR [esi+ebx*1+0x3a0ec8fa]
  41069f:	stos   DWORD PTR es:[edi],eax
  4106a0:	jge    0x4106ac
  4106a2:	cs in  al,dx
  4106a4:	test   al,0x9d
  4106a6:	jmp    0x4106be
  4106a8:	mov    esp,DWORD PTR [eax-0x76d04547]
  4106ae:	fnstcw WORD PTR ds:0xe253a7eb
  4106b4:	shl    DWORD PTR [edi+0x2a],cl
  4106b7:	lock xor DWORD PTR [ebx-0x555aa8b1],0xd828b1f7
  4106c2:	in     eax,0x4a
  4106c4:	sub    al,0x5b
  4106c6:	cld    
  4106c7:	ror    bh,1
  4106c9:	mov    esp,0xcb60db41
  4106ce:	push   ecx
  4106cf:	pop    esi
  4106d0:	xchg   BYTE PTR [edi],bh
  4106d2:	push   0x3b0ed75f
  4106d7:	xchg   esi,eax
  4106d8:	cmp    ch,BYTE PTR [edi+0x2416005b]
  4106de:	push   0x1f
  4106e0:	iret   
  4106e1:	mov    edi,0x52d0000a
  4106e6:	cmp    BYTE PTR [ecx],bh
  4106e8:	mov    ebx,0x17f2d9de
  4106ed:	mov    ebx,0xfdacb26f
  4106f2:	cwde   
  4106f3:	inc    edx
  4106f4:	or     cl,dl
  4106f6:	mov    DWORD PTR [edi-0x336c800e],edi
  4106fc:	pop    edx
  4106fd:	pop    ecx
  4106fe:	cmc    
  4106ff:	mov    DWORD PTR [edi+0x57],eax
  410702:	xlat   BYTE PTR ds:[ebx]
  410703:	stos   DWORD PTR es:[edi],eax
  410704:	out    dx,eax
  410705:	push   cs
  410706:	ficomp DWORD PTR [esi-0x4b]
  410709:	into   
  41070a:	push   esp
  41070b:	loopne 0x41070d
  41070d:	arpl   WORD PTR [edx+0xeb6a766],di
  410713:	fsubr  QWORD PTR [edx]
  410715:	mov    esp,0xcc81925f
  41071a:	stos   DWORD PTR es:[edi],eax
  41071b:	mov    al,0x6a
  41071d:	xor    BYTE PTR [eax],bh
  41071f:	xchg   dx,ax
  410721:	xor    dl,BYTE PTR [ebx]
  410723:	mov    ?,WORD PTR [edx+0x147b7335]
  410729:	outs   dx,BYTE PTR ds:[esi]
  41072a:	jge    0x41077f
  41072c:	pop    esi
  41072d:	jo     0x410742
  41072f:	mov    dh,dl
  410731:	inc    BYTE PTR [edi-0xa]
  410734:	rcl    BYTE PTR [esi],0xcc
  410737:	mov    ah,0xf7
  410739:	xchg   DWORD PTR [eax],esp
  41073b:	mov    dl,0x47
  41073d:	stos   DWORD PTR es:[edi],eax
  41073e:	not    BYTE PTR [esi]
  410740:	sbb    cl,BYTE PTR [ecx]
  410742:	dec    esp
  410743:	lods   al,BYTE PTR ds:[esi]
  410744:	pop    ebx
  410745:	test   BYTE PTR [eax+ecx*4+0x7d6a2a7d],dl
  41074c:	dec    ecx
  41074d:	sbb    esp,esi
  41074f:	(bad)  
  410750:	cmp    esi,DWORD PTR [edi+0x3e]
  410753:	dec    edx
  410754:	adc    eax,0x2b33575a
  410759:	or     al,0x6a
  41075b:	fsub   DWORD PTR [ebx]
  41075d:	pop    ss
  41075e:	idiv   dl
  410760:	aaa    
  410761:	or     eax,edi
  410763:	sub    BYTE PTR [edi+eiz*2],0x78
  410767:	cmp    BYTE PTR [ebp+0x46],bl
  41076a:	pop    ds
  41076b:	ins    DWORD PTR es:[edi],dx
  41076c:	push   ss
  41076d:	fadd   QWORD PTR [edx+0x310bfed4]
  410773:	cs das 
  410775:	dec    esi
  410776:	and    ebx,DWORD PTR [edx-0x46]
  410779:	mov    eax,ds:0x46bbe906
  41077e:	mov    ebx,0x357ac8bd
  410783:	stos   DWORD PTR es:[edi],eax
  410784:	xchg   DWORD PTR ds:0xe2eb5b27,ecx
  41078a:	out    dx,al
  41078b:	std    
  41078c:	cmp    DWORD PTR [eax+0x4132cdc4],ecx
  410792:	out    dx,al
  410793:	arpl   WORD PTR [edx-0x6edade45],di
  410799:	dec    esi
  41079a:	ja     0x410749
  41079c:	ins    BYTE PTR es:[edi],dx
  41079d:	sub    al,0x85
  41079f:	leave  
  4107a0:	shr    edx,0x48
  4107a3:	sahf   
  4107a4:	xchg   BYTE PTR [esi+esi*1-0x3de817b5],ah
  4107ab:	scas   eax,DWORD PTR es:[edi]
  4107ac:	adc    eax,0xc41dde6d
  4107b1:	in     al,dx
  4107b2:	stos   DWORD PTR es:[edi],eax
  4107b3:	xor    eax,0x49a7de2c
  4107b8:	sub    ebx,DWORD PTR [ebp-0x63d7c2c]
  4107be:	mov    edx,0xf75237db
  4107c3:	ror    dl,cl
  4107c5:	bnd jle 0x410832
  4107c8:	lods   al,BYTE PTR ds:[esi]
  4107c9:	jp     0x4107b8
  4107cb:	cmp    al,0xbf
  4107cd:	inc    ebx
  4107ce:	gs jecxz 0x41084b
  4107d1:	xchg   edi,eax
  4107d2:	dec    esi
  4107d3:	fistp  QWORD PTR [ebx]
  4107d5:	inc    eax
  4107d6:	cmp    BYTE PTR [edi-0x3359d086],al
  4107dc:	popf   
  4107dd:	shl    DWORD PTR [ebp+0x3c],cl
  4107e0:	adc    al,0x43
  4107e2:	arpl   WORD PTR [eax+ebx*1+0x19],bx
  4107e6:	test   eax,0x64b51894
  4107eb:	sbb    ebp,DWORD PTR [edi]
  4107ed:	daa    
  4107ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ef:	pushf  
  4107f0:	dec    edi
  4107f1:	gs push edi
  4107f3:	inc    ebx
  4107f4:	or     ecx,DWORD PTR [ecx+0x3fc2fc08]
  4107fa:	pop    ebp
  4107fb:	std    
  4107fc:	out    0x71,al
  4107fe:	pushf  
  4107ff:	jmp    0xbc02f907
  410804:	imul   ecx,esi,0xbb18dd0f
  41080a:	xor    ah,BYTE PTR [ecx]
  41080c:	cmc    
  41080d:	iret   
  41080e:	jg     0x6554e122
  410814:	cdq    
  410815:	mov    al,ds:0x7228ec60
  41081a:	dec    esp
  41081b:	imul   ebp,eax,0x28
  41081e:	fmulp  st(4),st
  410820:	imul   edx,ecx,0x2f547e2b
  410826:	popa   
  410827:	cwde   
  410828:	jge    0x410879
  41082a:	mov    ds:0x6995d59d,eax
  41082f:	cli    
  410830:	jg     0x4107bc
  410832:	dec    eax
  410833:	pop    ss
  410834:	into   
  410835:	pop    esi
  410836:	in     eax,0x3f
  410838:	push   es
  410839:	and    BYTE PTR [ebx],0x5d
  41083c:	test   BYTE PTR [eax+0x38c65d6b],ch
  410842:	mov    al,ds:0xade2f4f7
  410847:	add    ecx,ebp
  410849:	test   esp,edi
  41084b:	push   ebx
  41084c:	mov    ch,0x10
  41084e:	xor    esi,DWORD PTR [eax]
  410850:	loopne 0x410833
  410852:	test   eax,0xc5217550
  410857:	dec    ebp
  410858:	and    bh,bh
  41085a:	or     al,0xd2
  41085c:	mov    ds:0xdc2ce798,al
  410862:	stos   BYTE PTR es:[edi],al
  410863:	sbb    cl,BYTE PTR [ebx-0x6c]
  410866:	xchg   ebx,eax
  410867:	ret    
  410868:	mov    cl,0xf3
  41086a:	cmp    eax,edi
  41086c:	outs   dx,DWORD PTR ds:[esi]
  41086d:	jl     0x410843
  41086f:	mov    WORD PTR ds:[edi],ds
  410872:	pop    ebp
  410873:	cmp    BYTE PTR [ebp+esi*4+0x3d6f0853],bl
  41087a:	adc    al,0x9b
  41087c:	fsub   QWORD PTR [edx+0x72]
  41087f:	jg     0x41087c
  410881:	rol    ebx,cl
  410883:	adc    esi,edi
  410885:	jg     0x41085e
  410887:	adc    DWORD PTR [esi+ecx*2-0x63],eax
  41088b:	push   ds
  41088c:	pop    ds
  41088d:	clc    
  41088e:	mov    bl,0x5f
  410890:	es inc esi
  410892:	add    BYTE PTR [edx-0x52c368cf],cl
  410898:	pop    ecx
  410899:	mul    DWORD PTR [esi]
  41089b:	loope  0x410833
  41089d:	iret   
  41089e:	test   BYTE PTR [edi+ebp*2],ch
  4108a1:	mov    al,0x64
  4108a3:	cmc    
  4108a4:	mov    bh,0xef
  4108a6:	test   BYTE PTR [ebx+0x22],0xae
  4108aa:	sbb    DWORD PTR [ebx+0x37],eax
  4108ad:	outs   dx,DWORD PTR ds:[esi]
  4108ae:	push   ds
  4108af:	mov    cl,0xd5
  4108b1:	test   DWORD PTR [edi],ecx
  4108b3:	jo     0x410929
  4108b5:	(bad)  
  4108b6:	mov    ch,0x1b
  4108b8:	test   DWORD PTR [eax+0x476634c5],0x19bda912
  4108c2:	mov    ch,0xdd
  4108c4:	jo     0x41089c
  4108c6:	sbb    al,0x45
  4108c8:	fisttp QWORD PTR [ebx-0x37]
  4108cb:	xchg   ebp,eax
  4108cc:	loope  0x4108c5
  4108ce:	test   DWORD PTR [ebx+0x72],edx
  4108d1:	scas   eax,DWORD PTR es:[edi]
  4108d2:	dec    edx
  4108d3:	in     eax,0x82
  4108d5:	jmp    0x32dd9ac
  4108da:	mov    bl,BYTE PTR [esi]
  4108dc:	or     ch,BYTE PTR [si-0x2567]
  4108e1:	test   eax,edx
  4108e3:	jae    0x4108c2
  4108e5:	pop    ss
  4108e6:	arpl   WORD PTR [edi+esi*8+0x34bd8795],sp
  4108ed:	sub    dl,BYTE PTR [eax-0x5c]
  4108f0:	mov    WORD PTR [esp+ecx*8-0x6dcd41bd],ds
  4108f7:	xchg   ecx,eax
  4108f8:	mov    dh,0x1c
  4108fa:	fcomp  QWORD PTR [ecx]
  4108fc:	lock pop esi
  4108fe:	pop    ds
  4108ff:	call   0x1fca:0x2f339a0a
  410906:	mov    BYTE PTR [esi],0x51
  410909:	fabs   
  41090b:	or     DWORD PTR [edi-0xa],ebx
  41090e:	outs   dx,BYTE PTR ds:[esi]
  41090f:	add    BYTE PTR [ebp+0x77],dl
  410912:	jo     0x41095e
  410914:	data16 and BYTE PTR [ebx],0xe5
  410918:	test   ah,dh
  41091a:	fdivr  DWORD PTR [eax]
  41091c:	jg     0x410957
  41091e:	out    0xfe,eax
  410920:	jmp    0x5231e37e
  410925:	bound  edi,QWORD PTR [esi]
  410927:	out    0xef,al
  410929:	stc    
  41092a:	cld    
  41092b:	mov    ds,WORD PTR [edx-0x76]
  41092e:	or     DWORD PTR [esi-0x34120247],esp
  410934:	hlt    
  410935:	in     eax,dx
  410936:	nop
  410937:	inc    ebx
  410938:	adc    BYTE PTR [edi],cl
  41093a:	xchg   BYTE PTR [ebx+ebp*2+0x34],bl
  41093e:	mov    eax,ds:0x806a36e9
  410943:	dec    edx
  410944:	lods   al,BYTE PTR ds:[esi]
  410945:	sbb    al,BYTE PTR [ebp+0x19]
  410948:	dec    edi
  410949:	call   0x824317b3
  41094e:	das    
  41094f:	cmp    DWORD PTR [edx],0x4f
  410952:	imul   ebx,edi,0xffffffdd
  410955:	jmp    0x6f00:0x4d64c742
  41095c:	or     eax,0xdff7e1b8
  410961:	inc    edi
  410962:	addr16 or eax,0x43601441
  410968:	int    0x2a
  41096a:	daa    
  41096b:	cmp    DWORD PTR [ebx+0x1da2d1a1],ebp
  410971:	arpl   sp,si
  410973:	mov    esp,0x71e8db3c
  410978:	(bad)  [ebx]
  41097a:	test   al,0x92
  41097c:	dec    ebx
  41097d:	push   ecx
  41097e:	mov    edi,0x533cea45
  410983:	or     ch,BYTE PTR [ecx-0x11]
  410986:	test   eax,0x5496678e
  41098b:	xchg   esp,eax
  41098c:	(bad)  
  41098e:	nop
  41098f:	mov    edx,0x7176d409
  410994:	in     eax,dx
  410995:	push   ebx
  410996:	inc    edx
  410997:	stos   BYTE PTR es:[edi],al
  410998:	inc    eax
  410999:	or     dh,BYTE PTR [ebp-0xaefc558]
  41099f:	mov    ah,0xf7
  4109a1:	inc    edx
  4109a2:	rcl    DWORD PTR [eax],cl
  4109a4:	sbb    eax,0x666a139b
  4109aa:	sbb    ebx,edi
  4109ac:	sbb    ebx,DWORD PTR [edx]
  4109ae:	push   ebp
  4109af:	sub    edi,DWORD PTR [edx-0x1e]
  4109b2:	jae    0x410967
  4109b4:	aam    0xba
  4109b6:	jmp    0x4109db
  4109b8:	add    eax,0x520ac1ae
  4109bd:	mov    eax,0xe13aa336
  4109c2:	ds jne 0x4109af
  4109c5:	(bad)  
  4109c6:	cmp    cl,BYTE PTR [eax+0x62]
  4109c9:	add    al,0x5
  4109cb:	inc    ecx
  4109cc:	cld    
  4109cd:	mov    ah,0xc
  4109cf:	xacquire xchg BYTE PTR [edi+0x59],bh
  4109d3:	daa    
  4109d4:	or     esi,DWORD PTR [esi]
  4109d6:	sub    ah,dl
  4109d8:	xchg   edx,eax
  4109d9:	es jne 0x4109e7
  4109dc:	pop    edx
  4109dd:	(bad)  
  4109df:	inc    edx
  4109e0:	sub    eax,0x26728817
  4109e5:	bound  eax,QWORD PTR [esi-0x71cd9a0f]
  4109eb:	ret    
  4109ec:	aas    
  4109ed:	cs push eax
  4109ef:	nop
  4109f0:	inc    ebp
  4109f1:	out    dx,eax
  4109f2:	xchg   edx,eax
  4109f3:	cmp    al,0x6d
  4109f5:	js     0x410981
  4109f7:	aad    0x78
  4109f9:	mov    ds:0xd2a86658,al
  4109fe:	sbb    al,0xd
  410a00:	fsubr  DWORD PTR [ebx-0xd50123e]
  410a06:	pop    ss
  410a07:	mov    eax,0x763f9a10
  410a0c:	hlt    
  410a0d:	scas   eax,DWORD PTR es:[edi]
  410a0e:	into   
  410a0f:	push   ecx
  410a10:	dec    edx
  410a11:	mov    BYTE PTR [eax],dh
  410a13:	push   edi
  410a14:	mov    dh,0x81
  410a16:	fild   QWORD PTR [ebx]
  410a18:	xor    DWORD PTR [edx+ebp*8-0x4f],ebx
  410a1c:	inc    ecx
  410a1d:	push   eax
  410a1e:	xchg   esp,ebp
  410a20:	aaa    
  410a21:	or     bh,bh
  410a23:	mov    WORD PTR [ecx],ds
  410a25:	idiv   DWORD PTR [edx+0x6d56808f]
  410a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a2c:	jmp    0x1310b991
  410a31:	or     eax,0xf67030a9
  410a36:	int    0xd5
  410a38:	test   DWORD PTR [edx],ebp
  410a3a:	pop    ecx
  410a3b:	mov    esp,0x859daf06
  410a40:	xor    DWORD PTR [eax+0x6ebc2cf3],ebp
  410a46:	or     BYTE PTR [ebp+ebx*1-0xa],0x23
  410a4b:	push   esp
  410a4c:	(bad)  
  410a4e:	inc    ebx
  410a4f:	out    dx,eax
  410a50:	xchg   edx,eax
  410a51:	or     al,0x72
  410a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a54:	push   es
  410a55:	or     DWORD PTR [edi+0x77],ebp
  410a58:	nop
  410a59:	inc    eax
  410a5a:	or     eax,0x3451ab0
  410a5f:	ret    
  410a60:	pop    eax
  410a61:	sub    cl,bl
  410a63:	push   ecx
  410a64:	mov    cl,0x92
  410a66:	bound  edx,QWORD PTR [eax]
  410a68:	call   0x94e5:0x69f6d045
  410a6f:	mov    si,0xa7b4
  410a73:	xor    ecx,DWORD PTR [ecx+0x50]
  410a76:	daa    
  410a77:	cmp    bh,BYTE PTR [edi+0xc]
  410a7a:	pop    ebx
  410a7b:	inc    ebx
  410a7c:	push   esp
  410a7d:	(bad)  
  410a80:	sub    cl,ah
  410a82:	dec    eax
  410a83:	push   ebp
  410a84:	mov    ebp,DWORD PTR [ebp*1+0x5654a83a]
  410a8b:	fild   WORD PTR [ebp-0x51a27e7d]
  410a91:	xchg   dh,cl
  410a93:	mov    eax,ebx
  410a95:	sbb    BYTE PTR [ecx-0x20],bh
  410a98:	fidiv  DWORD PTR [esi+0x6d935603]
  410a9e:	scas   al,BYTE PTR es:[edi]
  410a9f:	jmp    0xbab3b1e0
  410aa4:	hlt    
  410aa5:	adc    BYTE PTR [ebp+0x6bf1a8d9],dh
  410aab:	push   edi
  410aac:	xor    al,BYTE PTR [ecx+0x6e]
  410aaf:	rol    BYTE PTR [ecx],cl
  410ab1:	ins    BYTE PTR es:[edi],dx
  410ab2:	mov    bh,0xb1
  410ab4:	clc    
  410ab5:	xor    BYTE PTR [ecx-0x45],cl
  410ab8:	ss scas al,BYTE PTR es:[edi]
  410aba:	or     BYTE PTR [esi+0x46],dh
  410abd:	inc    edx
  410abe:	add    BYTE PTR [ebx],dh
  410ac0:	fwait
  410ac1:	cmp    al,0x29
  410ac3:	pop    ebx
  410ac4:	or     DWORD PTR [edx+0x7c0cf5ff],ebx
  410aca:	loope  0x410aa5
  410acc:	fnsave [edi+0x7c6fc87f]
  410ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ad3:	icebp  
  410ad4:	sub    eax,0x462e6dea
  410ad9:	adc    al,0xb2
  410adb:	add    dh,bl
  410add:	and    BYTE PTR [esp+ecx*4-0x6f],0x99
  410ae2:	xchg   edi,eax
  410ae3:	xor    ah,BYTE PTR [ebp*2+0x59d6fe8d]
  410aea:	xchg   edx,eax
  410aeb:	enter  0xac7d,0xc8
  410aef:	dec    esi
  410af0:	adc    al,0x6e
  410af2:	and    BYTE PTR [ebx+0x1a],bh
  410af5:	adc    bh,BYTE PTR [ecx+0x4e6b9de3]
  410afb:	mov    ds:0xa8847c43,al
  410b00:	add    BYTE PTR [eax+0x46],bl
  410b03:	push   cs
  410b04:	repz push ds
  410b06:	and    esp,DWORD PTR [eax-0x14dfcb8b]
  410b0c:	fs lock movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  410b10:	or     cl,BYTE PTR [eax+0x20]
  410b13:	jbe    0x410a9e
  410b15:	in     eax,0x17
  410b17:	inc    esp
  410b18:	dec    ebp
  410b19:	xchg   DWORD PTR [ecx-0x3697bcec],ecx
  410b1f:	or     dh,BYTE PTR [ebp-0x66]
  410b22:	fneni(8087 only) 
  410b24:	pop    ecx
  410b25:	js     0x410aca
  410b27:	fistp  QWORD PTR [ebp-0x3f]
  410b2a:	int3   
  410b2b:	add    al,0x18
  410b2d:	fist   DWORD PTR [ebx-0x4c43064e]
  410b33:	mov    ds:0x6749d7b0,al
  410b38:	mov    esi,gs
  410b3a:	jo     0x410b17
  410b3c:	pop    edx
  410b3d:	inc    eax
  410b3e:	ret    
  410b3f:	dec    esp
  410b40:	fxch   st(4)
  410b42:	jp     0x410b6a
  410b44:	ficom  DWORD PTR [esi]
  410b46:	pop    ss
  410b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b48:	mov    dl,0xe0
  410b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b4b:	js     0x410bcb
  410b4d:	fwait
  410b4e:	ror    BYTE PTR [ebx-0x7ba4c83a],1
  410b54:	push   edx
  410b55:	jns    0x410b1b
  410b57:	fnsave [ebx]
  410b59:	scas   eax,DWORD PTR es:[edi]
  410b5a:	or     esp,ecx
  410b5c:	add    ch,BYTE PTR [edx+ecx*1-0xf]
  410b60:	ror    DWORD PTR [ebx],0x83
  410b63:	mov    eax,DWORD PTR [ebx-0x1e]
  410b66:	jp     0x410af1
  410b68:	data16 xor BYTE PTR [eax-0x2fb61247],0xd7
  410b70:	shl    ebx,cl
  410b72:	jo     0x410bb9
  410b74:	add    eax,DWORD PTR [esi]
  410b76:	int    0xf6
  410b78:	push   esp
  410b79:	cmp    ebp,ebp
  410b7b:	imul   ebp,DWORD PTR [eax],0xee6c8dca
  410b81:	js     0x410b63
  410b83:	ss push ds
  410b85:	mov    esp,0x3cdd0953
  410b8a:	mov    edi,0x55faa380
  410b8f:	mov    ebp,0x760d2f9e
  410b94:	(bad)  
  410b95:	retf   0x3aca
  410b98:	sbb    bh,bl
  410b9a:	cmp    edx,ebp
  410b9c:	xlat   BYTE PTR ds:[ebx]
  410b9d:	cmp    eax,ebp
  410b9f:	in     al,0x69
  410ba1:	jmp    0xda:0x85f0fa6d
  410ba8:	jne    0x410bac
  410baa:	aam    0xf6
  410bac:	pop    ecx
  410bad:	xchg   ecx,eax
  410bae:	out    dx,eax
  410baf:	aad    0x63
  410bb1:	fnstcw WORD PTR [ebp+0x2]
  410bb4:	add    eax,0xfef46391
  410bb9:	mov    esi,0x5620048
  410bbe:	jae    0x410b52
  410bc0:	and    esi,ebp
  410bc2:	scas   al,BYTE PTR es:[edi]
  410bc3:	and    eax,DWORD PTR [ebp-0x3]
  410bc6:	pop    ecx
  410bc7:	and    bl,BYTE PTR [ebx]
  410bc9:	imul   esp,DWORD PTR [ebx+0xc],0xf2fb0ad5
  410bd0:	js     0x410c16
  410bd2:	aad    0xe7
  410bd4:	cld    
  410bd5:	ja     0x410c49
  410bd7:	test   DWORD PTR [ebp-0x6ec14146],0xa9462827
  410be1:	test   DWORD PTR [esi-0x6440d82e],ebp
  410be7:	data16 jno 0x410c10
  410bea:	dec    ebp
  410beb:	sbb    esi,ebp
  410bed:	cmp    al,0x38
  410bef:	or     al,0x76
  410bf1:	mov    esp,0xe1ed9f5a
  410bf6:	out    0x1b,eax
  410bf8:	ds data16 sahf 
  410bfb:	mov    eax,ds:0xfa4e36d3
  410c00:	sbb    eax,0x7844f764
  410c05:	cli    
  410c06:	sbb    bh,0x81
  410c09:	dec    ebp
  410c0a:	mov    eax,0xaaee03c6
  410c0f:	and    cl,BYTE PTR [edx]
  410c11:	cmp    ch,BYTE PTR [edx+0x4384f015]
  410c17:	or     eax,0xad1604c
  410c1c:	clc    
  410c1d:	mov    cl,0x61
  410c1f:	sti    
  410c20:	xor    eax,0x3d12d5e0
  410c25:	mov    ah,0x37
  410c27:	fist   WORD PTR [ecx-0x3c]
  410c2a:	test   eax,0x68028f6d
  410c2f:	sbb    al,0x4
  410c31:	inc    ebp
  410c32:	mov    ecx,0x7119b0f
  410c37:	in     al,0xe3
  410c39:	popf   
  410c3a:	arpl   bp,si
  410c3c:	scas   eax,DWORD PTR es:[edi]
  410c3d:	mov    ds:0xf5c159a1,eax
  410c42:	in     eax,dx
  410c43:	loope  0x410c83
  410c45:	not    BYTE PTR [esi-0x419de5ba]
  410c4b:	mov    ecx,0x33638f4a
  410c50:	jae    0x410cb2
  410c52:	pop    ecx
  410c53:	cmp    BYTE PTR [edi],cl
  410c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c56:	push   ds
  410c57:	lock mov al,0x22
  410c5a:	dec    ebx
  410c5b:	(bad)  
  410c5c:	in     al,dx
  410c5d:	inc    eax
  410c5e:	pop    ebp
  410c5f:	push   esi
  410c60:	push   0x2d
  410c62:	repnz push es
  410c64:	ret    
  410c65:	mov    cl,0xbf
  410c67:	fwait
  410c68:	adc    al,0x7b
  410c6a:	push   es
  410c6b:	lds    esi,FWORD PTR [ebx-0x43]
  410c6e:	imul   esi,DWORD PTR [ebx+0x3],0xccdcc40e
  410c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c76:	(bad)  
  410c77:	adc    al,dh
  410c79:	pushf  
  410c7a:	push   edi
  410c7b:	test   eax,0x41562b4d
  410c80:	out    dx,al
  410c81:	pop    esi
  410c82:	push   ebx
  410c83:	test   al,0xc1
  410c85:	mov    edx,0xb378d907
  410c8a:	push   ebx
  410c8b:	jg     0x410c17
  410c8d:	jl     0x410c77
  410c8f:	add    edx,DWORD PTR [edx+eiz*4-0x676c5b5d]
  410c96:	xchg   ecx,eax
  410c97:	sbb    BYTE PTR [edx],bl
  410c99:	mov    edx,0x13418ac6
  410c9e:	ins    BYTE PTR es:[edi],dx
  410c9f:	out    0x21,al
  410ca1:	sub    ebx,DWORD PTR [esi-0xac76ac3]
  410ca7:	pop    ecx
  410ca8:	test   eax,0xf9960746
  410cad:	cmp    esi,DWORD PTR [ebp+ebp*4+0x5c]
  410cb1:	lock cmp eax,0x7c8386ee
  410cb7:	aaa    
  410cb8:	mov    eax,ds:0x2d7acbbd
  410cbd:	cmp    edx,DWORD PTR [esi]
  410cbf:	sbb    ecx,DWORD PTR ds:0x3fd8d66e
  410cc5:	aaa    
  410cc6:	pop    eax
  410cc7:	jno    0x410cd9
  410cc9:	and    ch,bl
  410ccb:	xchg   ecx,eax
  410ccc:	mov    esp,0x51d6b4aa
  410cd1:	mov    esi,0x61e3f38b
  410cd6:	jmp    0xb97ec9df
  410cdb:	int    0xcc
  410cdd:	repnz jmp 0x5ba:0xacb7fd3a
  410ce5:	sbb    ebx,DWORD PTR [eax+0x5bdeb831]
  410ceb:	xchg   DWORD PTR [ecx+ebp*1+0x7c5f0d07],edi
  410cf2:	sbb    DWORD PTR [ecx-0x1ffdbbf4],eax
  410cf8:	imul   eax,DWORD PTR ds:0x33e733ea,0x7c
  410cff:	ret    0x2f62
  410d02:	int3   
  410d03:	and    eax,DWORD PTR [ecx+0x6bd6f6f7]
  410d09:	adc    DWORD PTR [ebp+0x79],ecx
  410d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d0d:	mov    ch,0x15
  410d0f:	fdivr  st(2),st
  410d11:	aas    
  410d12:	adc    al,dh
  410d14:	sub    eax,0xe106a10b
  410d19:	out    0x81,al
  410d1b:	loop   0x410d34
  410d1d:	jg     0x410ccb
  410d1f:	sbb    eax,0xcc02091d
  410d24:	pushf  
  410d25:	sub    BYTE PTR [edx-0xf],al
  410d28:	cmp    eax,0x94164278
  410d2d:	pop    ss
  410d2e:	and    esp,DWORD PTR [edi-0xc]
  410d31:	(bad)  
  410d32:	out    dx,al
  410d33:	outs   dx,BYTE PTR ds:[esi]
  410d34:	push   esp
  410d35:	and    eax,0x6dfd478f
  410d3a:	out    dx,eax
  410d3b:	in     al,0xb8
  410d3d:	jecxz  0x410dae
  410d3f:	(bad)  
  410d41:	mov    ds:0xd0c7d35b,al
  410d46:	fidiv  WORD PTR [edx]
  410d48:	adc    edx,DWORD PTR [esi]
  410d4a:	jns    0x410d03
  410d4c:	cs mov ah,0x6d
  410d4f:	jae    0x410d0a
  410d51:	push   ss
  410d52:	mov    eax,0x5bc7958d
  410d57:	mov    eax,0x45e3519d
  410d5c:	sub    esp,DWORD PTR [ebx+0x49]
  410d5f:	je     0x410da2
  410d61:	ins    DWORD PTR es:[edi],dx
  410d62:	add    bh,BYTE PTR [esi-0x7]
  410d65:	pop    es
  410d66:	(bad)  
  410d68:	ror    ah,0x76
  410d6b:	dec    esi
  410d6c:	adc    eax,0x4610350c
  410d71:	sub    BYTE PTR [eax+0x14e60b9e],ch
  410d77:	dec    esi
  410d78:	adc    DWORD PTR [esp+ebp*2+0x6],0xffffffb9
  410d7d:	in     eax,dx
  410d7e:	pushf  
  410d7f:	pop    esp
  410d80:	enter  0x5626,0xc4
  410d84:	inc    ebx
  410d85:	mov    esp,0x983c90bb
  410d8a:	js     0x410db2
  410d8c:	push   ds
  410d8d:	pop    es
  410d8e:	xchg   ecx,eax
  410d8f:	and    eax,0x590fab2d
  410d94:	outs   dx,BYTE PTR ds:[esi]
  410d95:	sub    BYTE PTR [eax-0x49],cl
  410d98:	cmp    cl,BYTE PTR [ecx+0xabbbe0e]
  410d9e:	ins    BYTE PTR es:[edi],dx
  410d9f:	pop    ss
  410da0:	pop    es
  410da1:	fstp   DWORD PTR [edi]
  410da3:	mov    dl,0xf6
  410da5:	int    0xf3
  410da7:	pop    ss
  410da8:	sub    al,0xcb
  410daa:	mov    ch,0x41
  410dac:	test   eax,0xb69a713c
  410db1:	inc    esp
  410db2:	stc    
  410db3:	repnz imul bh
  410db6:	sti    
  410db7:	pushf  
  410db8:	outs   dx,DWORD PTR ds:[esi]
  410db9:	ficom  DWORD PTR [ecx+0x55856abe]
  410dbf:	xor    ch,bh
  410dc1:	inc    ecx
  410dc2:	push   edi
  410dc3:	rcl    BYTE PTR [eax+edx*1],1
  410dc6:	dec    edi
  410dc7:	aas    
  410dc8:	jecxz  0x410daf
  410dca:	adc    esp,ecx
  410dcc:	aas    
  410dcd:	jle    0x410d58
  410dcf:	leave  
  410dd0:	dec    ebx
  410dd1:	pushf  
  410dd2:	aad    0x6b
  410dd4:	mov    WORD PTR [edx],cs
  410dd6:	xchg   ebx,eax
  410dd7:	nop
  410dd8:	sti    
  410dd9:	cmp    eax,0xad88911
  410dde:	(bad)  
  410ddf:	dec    ebx
  410de0:	leave  
  410de1:	mov    al,0xca
  410de3:	fwait
  410de4:	xchg   edx,eax
  410de5:	inc    ebp
  410de6:	nop
  410de7:	or     edi,edx
  410de9:	xor    eax,0xe698fd4b
  410dee:	jnp    0x410e5c
  410df0:	or     DWORD PTR [edi+0x35],edx
  410df3:	inc    ebx
  410df4:	sti    
  410df5:	faddp  st(3),st
  410df7:	xchg   BYTE PTR [esi-0x3e2abe5b],dl
  410dfd:	mov    ds:0x9cc562b6,al
  410e02:	in     eax,dx
  410e03:	sbb    dh,ch
  410e05:	fdiv   DWORD PTR [ebp+0x48]
  410e08:	mov    bh,0x92
  410e0a:	xchg   DWORD PTR [ecx-0xe2337b7],edx
  410e10:	stos   DWORD PTR es:[edi],eax
  410e11:	add    DWORD PTR [edx+0x19a54492],edi
  410e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e18:	adc    eax,0xf9b99aed
  410e1d:	and    ch,0x87
  410e20:	lahf   
  410e21:	fs push edi
  410e23:	mov    es,WORD PTR fs:[ebx+eiz*8+0x32]
  410e28:	sub    ch,BYTE PTR [esi+0x61]
  410e2b:	pusha  
  410e2c:	sub    esp,edi
  410e2e:	lds    eax,FWORD PTR [edx-0x55]
  410e31:	jmp    0xde6e04b3
  410e36:	jno    0x410e1f
  410e38:	pop    es
  410e39:	div    BYTE PTR [edi+0x27]
  410e3c:	push   ds
  410e3d:	sub    esi,0xa69cd0f
  410e43:	pop    ecx
  410e44:	add    eax,0xb2e4b1dd
  410e49:	inc    ebx
  410e4a:	int3   
  410e4b:	inc    ebx
  410e4c:	add    eax,0x9051e847
  410e51:	js     0x410e88
  410e53:	call   0x2ba3f83b
  410e58:	push   edx
  410e59:	clc    
  410e5a:	jecxz  0x410ded
  410e5c:	out    dx,al
  410e5d:	popf   
  410e5e:	(bad)  
  410e5f:	aaa    
  410e60:	aas    
  410e61:	stos   DWORD PTR es:[edi],eax
  410e62:	cs stos DWORD PTR es:[edi],eax
  410e64:	or     BYTE PTR [ebx],bh
  410e66:	retf   
  410e67:	inc    esp
  410e68:	mov    al,0x2b
  410e6a:	out    dx,al
  410e6b:	aas    
  410e6c:	pop    ss
  410e6d:	jns    0x410ecd
  410e6f:	imul   ebx,DWORD PTR [edi*4-0x641de76b],0xffffffd8
  410e77:	jle    0x410e62
  410e79:	in     al,dx
  410e7a:	(bad)  
  410e7b:	mov    BYTE PTR [di],ah
  410e7e:	cmp    BYTE PTR [ebp+0x11e5b0b],cl
  410e84:	test   BYTE PTR [esi-0x4d],bh
  410e87:	pop    ebx
  410e88:	cli    
  410e89:	push   edx
  410e8a:	call   0xe178f064
  410e8f:	call   0x139e6224
  410e94:	stos   DWORD PTR es:[edi],eax
  410e95:	ss retf 0xa727
  410e99:	add    edx,eax
  410e9b:	sar    esi,1
  410e9d:	add    cl,dh
  410e9f:	and    al,0x23
  410ea1:	loop   0x410e78
  410ea3:	fdiv   DWORD PTR [eax+0x2dc337a1]
  410ea9:	add    DWORD PTR [ecx+0x39],0x23
  410ead:	test   al,0xb8
  410eaf:	or     eax,0x64873d8f
  410eb4:	fisubr DWORD PTR [eax+eax*2-0x6e]
  410eb8:	inc    ebx
  410eb9:	aad    0x29
  410ebb:	and    al,0x70
  410ebd:	push   edi
  410ebe:	mov    ds:0x3e29ea7a,al
  410ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ec4:	outs   dx,DWORD PTR ds:[esi]
  410ec5:	enter  0xb12d,0x51
  410ec9:	adc    al,0x96
  410ecb:	and    eax,0xeda6bb6f
  410ed0:	(bad)  
  410ed1:	lock inc edi
  410ed3:	fistp  QWORD PTR [ebp+0x7a]
  410ed6:	add    eax,ecx
  410ed8:	inc    ebp
  410ed9:	retf   0xda05
  410edc:	push   edi
  410edd:	lock xchg edx,eax
  410edf:	shl    DWORD PTR [edx],1
  410ee1:	dec    ecx
  410ee2:	pop    ebx
  410ee3:	enter  0xd6af,0x1d
  410ee7:	dec    ebx
  410ee8:	and    BYTE PTR [eax-0x66adede3],bh
  410eee:	shl    BYTE PTR [edi],cl
  410ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef1:	or     BYTE PTR [ebx-0x79e4de42],0xf0
  410ef8:	mov    al,ds:0xe2e6894f
  410efd:	mov    edi,0x2ffde029
  410f02:	cmp    DWORD PTR [edi],edx
  410f04:	je     0x410f11
  410f06:	xchg   ebp,eax
  410f07:	arpl   WORD PTR [ebx],sp
  410f09:	daa    
  410f0a:	lds    esp,FWORD PTR [ecx-0x408c24c0]
  410f10:	mov    ebp,0x4845a08c
  410f15:	js     0x410f8d
  410f17:	xchg   ebx,eax
  410f18:	mov    dh,0xe0
  410f1a:	pop    eax
  410f1b:	cwde   
  410f1c:	inc    eax
  410f1d:	in     eax,0x33
  410f1f:	mov    ch,0xba
  410f21:	mov    ebp,0xbcf102b9
  410f26:	retf   
  410f27:	rcl    BYTE PTR [ebx],cl
  410f29:	dec    ecx
  410f2a:	outs   dx,DWORD PTR ds:[esi]
  410f2b:	aaa    
  410f2c:	sar    ah,0x34
  410f2f:	adc    BYTE PTR [edx+0x50d31a3b],al
  410f35:	ds stos DWORD PTR es:[edi],eax
  410f37:	scas   al,BYTE PTR es:[edi]
  410f38:	ficomp DWORD PTR [ebp-0x60]
  410f3b:	sbb    bl,ch
  410f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f3e:	dec    eax
  410f3f:	mov    bh,0x5e
  410f41:	inc    edx
  410f42:	add    cl,bh
  410f44:	xor    BYTE PTR [ebx-0x39],ch
  410f47:	das    
  410f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f49:	jmp    0xf065009c
  410f4e:	call   0x7b02:0x882e6260
  410f55:	out    0x55,al
  410f57:	cmp    BYTE PTR ds:0x1da13927,0x99
  410f5e:	rol    DWORD PTR [ecx-0x2190b728],cl
  410f64:	cmp    eax,0x303aeb4
  410f69:	push   cs
  410f6a:	mov    bh,0xd6
  410f6c:	inc    ebp
  410f6d:	ss dec ebp
  410f6f:	add    DWORD PTR [ecx],edx
  410f71:	xor    cl,BYTE PTR [ecx+0x1de0f699]
  410f77:	xor    al,0xf6
  410f79:	daa    
  410f7a:	loop   0x410fd0
  410f7c:	pop    ebx
  410f7d:	shl    DWORD PTR [ebp-0x3f4dd2b1],0x92
  410f84:	ror    BYTE PTR [ecx+0x15],1
  410f87:	popa   
  410f88:	dec    edi
  410f89:	pop    ecx
  410f8a:	retf   
  410f8b:	ins    BYTE PTR es:[edi],dx
  410f8c:	push   ecx
  410f8d:	test   al,0x73
  410f8f:	das    
  410f90:	mov    dh,0x55
  410f92:	out    dx,al
  410f93:	mov    dh,BYTE PTR [edx+0x34e5b57a]
  410f99:	xchg   ebp,eax
  410f9a:	adc    DWORD PTR [edx],ebp
  410f9c:	jg     0x410fba
  410f9e:	dec    esp
  410f9f:	mov    DWORD PTR ds:[esp+eax*1+0x5907b15c],ebx
  410fa7:	add    DWORD PTR [eax-0x55701b25],0xffffffa6
  410fae:	dec    esi
  410faf:	aas    
  410fb0:	aam    0x99
  410fb2:	sti    
  410fb3:	mov    eax,0x998bb7a2
  410fb8:	fstp   QWORD PTR [ebx]
  410fba:	loop   0x411027
  410fbc:	rol    DWORD PTR [edi-0x69],0x2
  410fc0:	jecxz  0x411020
  410fc2:	pop    edx
  410fc3:	pop    esi
  410fc4:	or     eax,0xb1248c00
  410fc9:	jmp    0x410fa7
  410fcb:	inc    eax
  410fcc:	fsub   st(0),st
  410fce:	sbb    ch,0x8f
  410fd1:	pop    ebx
  410fd2:	daa    
  410fd3:	outs   dx,BYTE PTR ds:[esi]
  410fd4:	mov    ebx,0x8bde14b6
  410fd9:	cld    
  410fda:	xor    DWORD PTR [ebp-0x56d02aa4],0x4bfb6cba
  410fe4:	jae    0x410fc1
  410fe6:	test   BYTE PTR [esi],0x24
  410fe9:	sbb    BYTE PTR [ebx-0xaa3f614],bh
  410fef:	dec    esi
  410ff0:	stos   BYTE PTR es:[edi],al
  410ff1:	pop    edx
  410ff2:	fldenv [edx-0x35]
  410ff5:	pop    ecx
  410ff6:	sbb    eax,0xc3eb8b08
  410ffb:	and    al,0x4e
  410ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ffe:	jl     0x411040
  411000:	lods   al,BYTE PTR ds:[esi]
  411001:	mov    edi,0xbdaf77fb
  411006:	jae    0x411065
  411008:	loope  0x410fa2
  41100a:	test   al,0xcf
  41100c:	lock xchg ebx,eax
  41100e:	jmp    0x1da4b1ed
  411013:	lods   eax,DWORD PTR ds:[esi]
  411014:	cdq    
  411015:	rcr    BYTE PTR [ebx+0x2f],cl
  411018:	or     al,0x99
  41101a:	fidiv  DWORD PTR [edi-0x2a4649a1]
  411020:	and    esp,DWORD PTR ds:0x4490bdd3
  411026:	ss xchg esp,edx
  411029:	arpl   WORD PTR [ecx-0x17cc1333],sp
  41102f:	xor    eax,DWORD PTR [eax-0x6c147fe9]
  411035:	imul   ebp,DWORD PTR [ebx],0xffffff88
  411038:	inc    edx
  411039:	add    eax,0x468a2d25
  41103e:	int    0x9f
  411040:	dec    esp
  411041:	jb     0x411012
  411043:	arpl   WORD PTR [edx-0x1d3cf435],bx
  411049:	fsub   DWORD PTR [edx]
  41104b:	sar    BYTE PTR [edi],0x74
  41104e:	mov    ebp,ebx
  411050:	and    dh,bl
  411052:	ds cmp al,0x2f
  411055:	mov    esi,0xd24b214d
  41105a:	dec    ebx
  41105b:	repnz push ebp
  41105d:	xchg   edi,eax
  41105e:	push   ebx
  41105f:	shl    BYTE PTR [eax+0x67],1
  411062:	dec    esp
  411063:	enter  0xcb44,0xa8
  411067:	in     al,dx
  411068:	pop    edx
  411069:	xor    eax,0xc8fb5d32
  41106e:	gs pop ebx
  411070:	stos   BYTE PTR es:[edi],al
  411071:	call   0xecd7fabe
  411076:	xor    eax,0xdd407e70
  41107b:	or     ecx,DWORD PTR [eax-0x16ec3853]
  411081:	in     al,0x2d
  411083:	lahf   
  411084:	mov    WORD PTR [esi-0x5d89f521],?
  41108a:	jmp    0x41100e
  41108c:	clc    
  41108d:	fist   WORD PTR [ecx-0x1f8077f2]
  411093:	xlat   BYTE PTR ds:[ebx]
  411094:	fs out 0x9b,al
  411097:	ficom  WORD PTR [esp+eax*1+0x77]
  41109b:	mov    ds:0x17e93cf3,al
  4110a0:	es test al,0x7
  4110a3:	inc    ecx
  4110a4:	dec    edx
  4110a5:	and    ch,0xea
  4110a8:	dec    ecx
  4110a9:	sbb    al,0x1b
  4110ab:	popa   
  4110ac:	and    DWORD PTR [esi-0x78],eax
  4110af:	aas    
  4110b0:	add    esi,DWORD PTR [ecx-0x2e2448c4]
  4110b6:	pop    es
  4110b7:	sti    
  4110b8:	rol    edx,0xf
  4110bb:	xchg   esp,eax
  4110bc:	xchg   esi,eax
  4110bd:	mov    eax,ds:0xa2467dfd
  4110c2:	mov    ds:0xab67d2a1,al
  4110c7:	lea    ebx,[edi+0x708fee9b]
  4110cd:	and    eax,DWORD PTR [ecx]
  4110cf:	xchg   ebp,eax
  4110d0:	push   edx
  4110d1:	mov    ds:0x61608344,al
  4110d6:	xor    eax,0xedef44d2
  4110db:	jp     0x411128
  4110dd:	mov    ebx,0x87bbb4b4
  4110e2:	lods   eax,DWORD PTR ds:[esi]
  4110e3:	dec    esi
  4110e4:	adc    al,0xd9
  4110e6:	mov    ah,0xe3
  4110e8:	shl    BYTE PTR [esi],0x70
  4110eb:	into   
  4110ec:	mov    edi,cs
  4110ee:	mov    cl,0x52
  4110f0:	(bad)  [edx+ecx*2]
  4110f3:	iret   
  4110f4:	adc    DWORD PTR [ebx],edi
  4110f6:	mov    WORD PTR [edx],?
  4110f8:	pop    es
  4110f9:	inc    ebp
  4110fa:	leave  
  4110fb:	jo     0x411093
  4110fd:	push   edx
  4110fe:	mov    dh,0x50
  411100:	loope  0x41108a
  411102:	cs push 0x80f2247c
  411108:	push   eax
  411109:	sub    BYTE PTR [eax*1+0x3f94f2c7],ch
  411110:	bound  ebp,QWORD PTR [ebx]
  411112:	cdq    
  411113:	dec    ebx
  411114:	daa    
  411115:	out    0x5b,eax
  411117:	in     al,0x9
  411119:	fwait
  41111a:	xchg   edx,eax
  41111b:	xlat   BYTE PTR ds:[ebx]
  41111c:	add    al,0xb9
  41111e:	jb     0x411107
  411120:	push   ss
  411121:	aas    
  411122:	scas   eax,DWORD PTR es:[edi]
  411123:	jno    0x4110fb
  411125:	test   DWORD PTR ds:0x1ad1db0b,0x493e1af8
  41112f:	call   FWORD PTR [eax+0x1b3f188f]
  411135:	jmp    0x41119e
  411137:	xor    al,0xeb
  411139:	sub    eax,eax
  41113b:	ret    0x13c8
  41113e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41113f:	inc    esp
  411140:	lea    edi,[edx-0x41]
  411143:	mov    bh,0xa6
  411145:	sti    
  411146:	sub    BYTE PTR [esi],0x3
  411149:	inc    edi
  41114a:	stc    
  41114b:	shr    BYTE PTR [ebx+0x2fb71241],1
  411151:	jge    0x411111
  411153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411154:	mov    al,0x59
  411156:	push   edi
  411157:	push   cs
  411158:	loop   0x41114e
  41115a:	cdq    
  41115b:	outs   dx,BYTE PTR ds:[esi]
  41115c:	pop    ebp
  41115d:	jg     0x4111d4
  41115f:	dec    ecx
  411160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411161:	lea    edx,[edx+0x3864c75d]
  411167:	pop    ebx
  411168:	data16 and al,0x24
  41116b:	adc    eax,0xa8f1a5a0
  411170:	(bad)  
  411171:	out    0xbb,eax
  411173:	adc    BYTE PTR [esi],ah
  411175:	nop
  411176:	sbb    dl,BYTE PTR [eax+0x468afd59]
  41117c:	retf   0x89ff
  41117f:	and    ch,BYTE PTR [esi+edi*4+0x4bf6e036]
  411186:	enter  0xa32c,0x71
  41118a:	(bad)  
  41118b:	push   0xe6bbf18c
  411190:	jnp    0x41112d
  411192:	js     0x41111c
  411194:	leave  
  411195:	push   eax
  411196:	lods   al,BYTE PTR ds:[esi]
  411197:	not    DWORD PTR [esi-0x79]
  41119a:	add    al,0x82
  41119c:	xchg   esi,eax
  41119d:	inc    BYTE PTR [edx+0x57]
  4111a0:	call   0x9560:0x309aafbf
  4111a7:	je     0x41116c
  4111a9:	imul   eax,DWORD PTR es:[esi],0x15
  4111ad:	into   
  4111ae:	je     0x4111a1
  4111b0:	stc    
  4111b1:	test   ch,ch
  4111b3:	or     bh,bl
  4111b5:	jae    0x41122a
  4111b7:	inc    ecx
  4111b8:	stos   BYTE PTR es:[edi],al
  4111b9:	cmp    eax,0x4ecb765d
  4111be:	int3   
  4111bf:	test   eax,0xdb7f5f4a
  4111c4:	add    eax,0x3db76b52
  4111c9:	lods   eax,DWORD PTR ds:[esi]
  4111ca:	mov    edx,0xf1b76b6d
  4111cf:	dec    eax
  4111d0:	pushf  
  4111d1:	add    dl,0xd7
  4111d4:	inc    eax
  4111d5:	sub    al,0x1a
  4111d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111d8:	add    BYTE PTR [eax],0x8a
  4111db:	pop    ds
  4111dc:	or     BYTE PTR es:[esi],ah
  4111df:	imul   eax,esi,0x8b50aa8a
  4111e5:	imul   ecx,edi,0x6
  4111e8:	fisubr WORD PTR [eax+0x2f9ac7f5]
  4111ee:	cmp    DWORD PTR [edx+0x6d],ecx
  4111f1:	or     DWORD PTR [esi],ecx
  4111f3:	(bad)  
  4111f5:	pop    ecx
  4111f6:	adc    eax,0x8f56157b
  4111fb:	mov    bl,0x67
  4111fd:	in     al,dx
  4111fe:	fld    TBYTE PTR [esi-0x7fe8e6f8]
  411204:	mov    al,dl
  411206:	fsubr  DWORD PTR [edx+ecx*2-0x2]
  41120a:	mov    al,0xe3
  41120c:	adc    edx,ecx
  41120e:	mov    ebx,0xbf119338
  411213:	adc    eax,0x7264bda2
  411218:	inc    esi
  411219:	jl     0x411208
  41121b:	sub    BYTE PTR [ebp+0xe],0xa
  41121f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411220:	inc    esi
  411221:	mov    eax,0x64c4b891
  411226:	jb     0x41120f
  411228:	ja     0x411261
  41122a:	or     esp,DWORD PTR [ebx]
  41122c:	pop    edx
  41122d:	aaa    
  41122e:	add    DWORD PTR [edx+0x9],eax
  411231:	inc    esp
  411232:	mov    bh,0xe2
  411234:	adc    al,0x83
  411236:	inc    esi
  411237:	dec    ecx
  411238:	mov    ebp,0x8e91ea20
  41123d:	inc    edx
  41123e:	idiv   DWORD PTR [edx]
  411240:	test   DWORD PTR [ebx+0x16],eax
  411243:	rol    DWORD PTR [esi],0x8d
  411246:	addr16 push ss
  411248:	aad    0x6d
  41124a:	xor    al,BYTE PTR [ebx]
  41124c:	jnp    0x411292
  41124e:	stos   BYTE PTR es:[edi],al
  41124f:	int3   
  411250:	rcr    DWORD PTR [eax-0xd],0x2
  411254:	test   BYTE PTR [edx+0x7b5a4d2a],bl
  41125a:	xchg   ebp,ecx
  41125c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41125d:	into   
  41125e:	push   eax
  41125f:	fisttp DWORD PTR [edx+ebx*1+0x21f25064]
  411266:	and    bl,BYTE PTR [edx-0x3e]
  411269:	pop    ecx
  41126a:	jecxz  0x411232
  41126c:	pushf  
  41126d:	hlt    
  41126e:	popf   
  41126f:	fadd   DWORD PTR [ebp+0x4af6659f]
  411275:	xchg   ecx,eax
  411276:	xchg   DWORD PTR [edx],esp
  411278:	loope  0x4111fb
  41127a:	add    edi,ebx
  41127c:	jmp    0x36f5:0x58c35c97
  411283:	fstp   DWORD PTR [esi]
  411285:	jns    0x411244
  411287:	inc    edx
  411288:	fisubr DWORD PTR [ecx+0x3c344e62]
  41128e:	sbb    BYTE PTR [ecx+ecx*2+0x677d8c4],0x98
  411296:	int3   
  411297:	rep ins DWORD PTR es:[edi],dx
  411299:	lea    esp,[ebx-0x27]
  41129c:	push   es
  41129d:	shr    BYTE PTR [ebx],cl
  41129f:	aas    
  4112a0:	rcr    BYTE PTR [ebx-0x4dba247b],cl
  4112a6:	test   DWORD PTR [ebx+eax*4-0x60e223da],ecx
  4112ad:	mov    eax,ds:0x262633d9
  4112b2:	add    BYTE PTR [edx+0x42],bl
  4112b5:	rcr    BYTE PTR [esi+0xee4b73],cl
  4112bb:	into   
  4112bc:	arpl   ax,ax
  4112be:	xchg   ebp,eax
  4112bf:	call   0xdb6a:0xb2b21379
  4112c6:	and    eax,0xb06b6941
  4112cb:	popa   
  4112cc:	sub    al,BYTE PTR [ebx-0x44]
  4112cf:	mov    bl,0x22
  4112d1:	add    DWORD PTR [ebp+0x31],edx
  4112d4:	or     DWORD PTR [esi],ebp
  4112d6:	mov    cl,bl
  4112d8:	cmp    al,bl
  4112da:	dec    ebp
  4112db:	inc    ecx
  4112dc:	pcmpgtb mm1,QWORD PTR [ecx+0x5a23c029]
  4112e3:	outs   dx,BYTE PTR ds:[esi]
  4112e4:	xor    eax,edi
  4112e6:	jg     0x41126e
  4112e8:	jae    0x411360
  4112ea:	or     BYTE PTR [ebp+0x3895348e],al
  4112f0:	sbb    bh,BYTE PTR ds:[ebx+0x7d870380]
  4112f7:	not    BYTE PTR fs:[edx+0x198f770d]
  4112fe:	dec    esi
  4112ff:	push   cs
  411300:	inc    edx
  411301:	sbb    DWORD PTR [ebx+eiz*1-0x78],esp
  411305:	dec    edi
  411306:	fcomi  st,st(2)
  411308:	call   0xec73523f
  41130d:	ja     0x41134c
  41130f:	jp     0x4112f1
  411311:	jbe    0x411305
  411313:	fst    DWORD PTR [ebp-0x86b1d6f]
  411319:	add    BYTE PTR [edx-0x2fd48b5d],al
  41131f:	adc    BYTE PTR [edx],dh
  411321:	aam    0x22
  411323:	add    al,0xba
  411325:	test   DWORD PTR [eax+0x60],esi
  411328:	sbb    DWORD PTR [ecx-0x1e],0xffffffa1
  41132c:	mov    fs,WORD PTR [edi+edx*1-0x6]
  411330:	ficom  DWORD PTR [edi+ecx*8]
  411333:	jno    0x411394
  411335:	cmc    
  411336:	in     eax,0xd7
  411338:	fisttp QWORD PTR [ebp+0x344e5fee]
  41133e:	dec    esp
  41133f:	aam    0x14
  411341:	pop    eax
  411342:	fdivr  QWORD PTR [eax]
  411344:	cwde   
  411345:	shl    dl,1
  411347:	mov    ah,0xe9
  411349:	inc    ebp
  41134a:	sbb    eax,0x5563871b
  41134f:	movsx  edx,WORD PTR [edi]
  411352:	ds push edi
  411354:	mov    WORD PTR [ebx+0x4e],ss
  411357:	jns    0x411328
  411359:	hlt    
  41135a:	mov    edi,0xf832fbe7
  41135f:	ficom  WORD PTR [ecx]
  411362:	nop
  411363:	mov    ds:0x924ab2a2,al
  411368:	sbb    bh,BYTE PTR [eax+0x6f]
  41136b:	ja     0x41135f
  41136d:	test   dl,dl
  41136f:	lahf   
  411370:	out    0x84,al
  411372:	adc    ch,dl
  411374:	in     al,dx
  411375:	daa    
  411376:	push   ebp
  411377:	test   eax,0x55fbc27d
  41137c:	in     al,0xb3
  41137e:	push   ebp
  41137f:	adc    eax,0xc29665a7
  411384:	mul    ah
  411386:	int    0x80
  411388:	and    esp,DWORD PTR [ebx+eiz*4+0x5dad851f]
  41138f:	adc    DWORD PTR [ebp-0x2e39035f],edi
  411395:	xor    DWORD PTR [edx],esi
  411397:	add    DWORD PTR [esi+edi*8+0x39],0xb40b9430
  41139f:	ins    BYTE PTR es:[edi],dx
  4113a0:	and    DWORD PTR [edx],eax
  4113a2:	fs js  0x4113d5
  4113a5:	mov    ah,BYTE PTR [eax+ebx*8]
  4113a8:	nop
  4113a9:	(bad)  
  4113aa:	loope  0x41134c
  4113ac:	pop    esp
  4113ad:	(bad)  
  4113ae:	xchg   ebp,eax
  4113af:	hlt    
  4113b0:	outs   dx,BYTE PTR es:[esi]
  4113b2:	adc    esi,DWORD PTR [esi]
  4113b4:	pop    ecx
  4113b5:	outs   dx,DWORD PTR ds:[esi]
  4113b6:	rol    BYTE PTR [edi],1
  4113b8:	cmp    edx,eax
  4113ba:	rcr    DWORD PTR [ebx+0x5f],0xe7
  4113be:	and    esi,DWORD PTR [ebx]
  4113c0:	fnsave [ebx-0x1b4258ec]
  4113c6:	cmp    dl,al
  4113c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113c9:	sar    BYTE PTR [edx+0x24],cl
  4113cc:	cld    
  4113cd:	add    dh,ah
  4113cf:	or     edi,DWORD PTR [eax-0x3cb9d185]
  4113d5:	ds dec ecx
  4113d7:	aad    0x35
  4113d9:	mov    ds,WORD PTR [esi]
  4113db:	lds    esp,FWORD PTR [esi+0x35d355d5]
  4113e1:	cdq    
  4113e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113e3:	mov    esp,0x5eccf3aa
  4113e8:	ins    DWORD PTR es:[edi],dx
  4113e9:	in     al,0xd6
  4113eb:	xor    eax,0x4056b36
  4113f0:	sub    esp,DWORD PTR [edx-0x2831b605]
  4113f6:	mul    DWORD PTR [ecx+0x69]
  4113f9:	mov    dl,0x3c
  4113fb:	gs enter 0x4e41,0xb7
  411400:	fild   QWORD PTR [ebx+0x23]
  411403:	aas    
  411404:	xor    al,0x54
  411406:	mov    esp,0x3768078c
  41140b:	mov    dh,0x68
  41140d:	xor    ebx,DWORD PTR [ecx-0x61]
  411410:	cmp    dl,BYTE PTR [edi-0x30]
  411413:	mov    eax,0xc3573cca
  411418:	inc    esi
  411419:	mov    dh,0xf5
  41141b:	cmp    ch,ah
  41141d:	inc    dl
  41141f:	cmp    cl,BYTE PTR [eax-0x50]
  411422:	xor    eax,0x5e8550ff
  411427:	push   cs
  411428:	fist   WORD PTR [ecx]
  41142a:	cwde   
  41142b:	shl    eax,cl
  41142d:	jae    0x41140a
  41142f:	(bad)  
  411430:	aam    0x7e
  411432:	lock add BYTE PTR [ecx-0x61eeaf1d],0x42
  41143a:	xacquire xchg DWORD PTR [edi],ecx
  41143d:	cmp    BYTE PTR [edx*1+0x2f692d61],ah
  411444:	adc    edi,edx
  411446:	mov    al,0x45
  411448:	pop    ebx
  411449:	jle    0x411462
  41144b:	retf   0x7baa
  41144e:	add    esi,esi
  411450:	jl     0x4114b5
  411452:	iret   
  411453:	test   al,0x6e
  411455:	mov    bh,0xde
  411457:	fdivrp st(5),st
  411459:	and    DWORD PTR ds:0x8f3f3aca,esp
  41145f:	cdq    
  411460:	mov    ch,0x81
  411462:	mov    bl,0x22
  411464:	test   al,0x0
  411466:	or     al,0x29
  411468:	scas   eax,DWORD PTR es:[edi]
  411469:	push   cs
  41146a:	pop    eax
  41146b:	jle    0x411408
  41146d:	mov    edx,0x224c78bc
  411472:	in     al,dx
  411473:	xor    cl,BYTE PTR [ebx-0x2d]
  411476:	lds    ebp,FWORD PTR [eax-0x5151ab25]
  41147c:	jne    0x41147d
  41147e:	rol    BYTE PTR ds:0x2afffac8,0x9d
  411485:	fadd   QWORD PTR [eax-0x59036128]
  41148b:	sbb    BYTE PTR [edi-0x26],bh
  41148e:	test   eax,0x9a87e536
  411493:	mov    ebx,DWORD PTR [edx]
  411495:	jmp    0x5d5:0x28ba8205
  41149c:	das    
  41149d:	inc    eax
  41149e:	add    ebp,DWORD PTR [ebx+0x78]
  4114a1:	leave  
  4114a2:	test   al,0xec
  4114a4:	or     al,0x2a
  4114a6:	mov    bh,0x4c
  4114a8:	xchg   edi,eax
  4114a9:	nop
  4114aa:	xchg   BYTE PTR ds:0xda83384c,dl
  4114b0:	jp     0x411475
  4114b2:	in     eax,dx
  4114b3:	jg     0x41144d
  4114b5:	sub    dh,BYTE PTR [eax]
  4114b7:	sub    ah,BYTE PTR [edx*2+0x651633b1]
  4114be:	jge    0x4114fc
  4114c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114c1:	mov    dh,0xa3
  4114c3:	ins    BYTE PTR es:[edi],dx
  4114c4:	sub    DWORD PTR [ebx-0x3e],esp
  4114c7:	pop    ecx
  4114c8:	jmp    0x340b824f
  4114cd:	pop    esi
  4114ce:	pushf  
  4114cf:	sbb    eax,0x92dcdcc8
  4114d4:	cmp    eax,0xb9cee709
  4114d9:	icebp  
  4114da:	push   esp
  4114db:	jg     0x41146f
  4114dd:	push   esi
  4114de:	inc    esi
  4114df:	inc    edx
  4114e0:	js     0x4114f0
  4114e2:	pop    edx
  4114e3:	aaa    
  4114e4:	add    al,0xf5
  4114e6:	xlat   BYTE PTR ds:[ebx]
  4114e7:	std    
  4114e8:	sub    BYTE PTR [esi+0x68],cl
  4114eb:	imul   edi,esp,0xe41da89d
  4114f1:	rol    DWORD PTR [esp+eax*2],1
  4114f4:	push   esi
  4114f5:	cwde   
  4114f6:	retf   
  4114f7:	and    al,0xce
  4114f9:	sahf   
  4114fa:	add    al,0xae
  4114fc:	retf   0x175
  4114ff:	lods   eax,DWORD PTR ds:[esi]
  411500:	aam    0x68
  411502:	mov    ch,0xc
  411504:	out    dx,eax
  411505:	add    dh,ch
  411507:	mov    ebp,0x9cbc2fc1
  41150c:	pop    ebx
  41150d:	jl     0x4114c6
  41150f:	mov    edi,0x23aed1ba
  411514:	out    dx,eax
  411515:	iret   
  411516:	adc    al,0x5c
  411518:	aad    0xa3
  41151a:	call   0xa5e1:0x635fa008
  411521:	pop    edx
  411522:	bound  eax,QWORD PTR [ecx]
  411524:	jle    0x41159d
  411526:	iret   
  411527:	bound  eax,QWORD PTR [edi+0x1b]
  41152a:	adc    eax,0x46049011
  41152f:	push   ebp
  411530:	adc    BYTE PTR [ecx+0x74],0xae
  411534:	(bad)
  411537:	adc    eax,0x6006d314
  41153c:	out    dx,eax
  41153d:	mov    ah,0xab
  41153f:	je     0x411540
  411541:	test   BYTE PTR [eax],dh
  411543:	retf   
  411544:	nop
  411545:	imul   ebp,DWORD PTR [ecx-0x2],0x8f7bfa0d
  41154c:	test   DWORD PTR [esi],edx
  41154e:	push   0xffffffe1
  411550:	loope  0x4114f4
  411552:	xor    al,bl
  411554:	(bad)  
  411555:	push   0x535cb93d
  41155a:	ret    
  41155b:	(bad)  
  41155c:	sbb    cl,BYTE PTR [edx-0x7b1c8c92]
  411562:	call   DWORD PTR [edx+0x7e]
  411565:	shl    DWORD PTR fs:[ebx],cl
  411568:	jecxz  0x411581
  41156a:	cli    
  41156b:	mov    al,ds:0x28ceb454
  411570:	pop    esi
  411571:	ins    DWORD PTR es:[edi],dx
  411572:	jmp    0xcb64e07b
  411577:	xchg   edx,eax
  411578:	shr    BYTE PTR [edx-0x644412a],1
  41157e:	popa   
  41157f:	jns    0x41150a
  411581:	das    
  411582:	jmp    0x4115fc
  411584:	mov    cl,0x40
  411586:	pusha  
  411587:	adc    al,0x99
  411589:	out    dx,eax
  41158a:	pop    esp
  41158b:	lods   eax,DWORD PTR ds:[esi]
  41158c:	(bad)  
  41158d:	das    
  41158e:	pusha  
  41158f:	cmp    DWORD PTR [edx],edx
  411591:	dec    edi
  411592:	shr    BYTE PTR [ebx+0x33],0xd
  411596:	cld    
  411597:	mov    eax,0xae40cc40
  41159c:	and    eax,0xa28718b9
  4115a1:	inc    esp
  4115a2:	stos   BYTE PTR es:[edi],al
  4115a3:	xor    edx,esi
  4115a5:	dec    esp
  4115a6:	mov    edi,0x3a370568
  4115ab:	dec    eax
  4115ac:	jle    0x41157c
  4115ae:	int3   
  4115af:	(bad)  
  4115b0:	xor    edx,DWORD PTR [edx+edx*2-0x7a]
  4115b4:	sbb    bl,ch
  4115b6:	mov    cl,0x30
  4115b8:	jae    0x41162f
  4115ba:	lea    edi,[edi-0x17]
  4115bd:	call   0x471e:0xb689ff22
  4115c4:	mov    cl,BYTE PTR [edx+0x56]
  4115c7:	xor    DWORD PTR [ebp-0x69],ebp
  4115ca:	add    dh,BYTE PTR [ebp-0x25e3277d]
  4115d0:	int    0xd3
  4115d2:	popf   
  4115d3:	jle    0x4115d7
  4115d5:	dec    ebx
  4115d6:	dec    esi
  4115d7:	gs loop 0x411573
  4115da:	cwde   
  4115db:	sar    DWORD PTR [esi],0x3c
  4115de:	xor    DWORD PTR [ebp-0x10],esi
  4115e1:	loop   0x411630
  4115e3:	mov    ds,edx
  4115e5:	and    al,0x5d
  4115e7:	(bad)  
  4115e8:	(bad)  
  4115e9:	gs std 
  4115eb:	imul   edi,DWORD PTR [edx+0x3009ab3a],0xdd7cc6e2
  4115f5:	in     eax,dx
  4115f6:	(bad)  
  4115f8:	repnz dec esp
  4115fa:	push   ebp
  4115fb:	mov    ecx,0xfc5bd643
  411600:	call   0xe3ce:0x5f04e2cb
  411607:	mov    eax,eax
  411609:	(bad)  [esi+0x8674565]
  41160f:	sub    DWORD PTR [ecx],eax
  411611:	mov    dh,0x3
  411613:	ja     0x4115aa
  411615:	dec    ebp
  411616:	std    
  411617:	call   0x69a0:0xb51df529
  41161e:	fldcw  WORD PTR [ebx+0x201cf7b]
  411624:	pop    esi
  411625:	pusha  
  411626:	dec    eax
  411627:	sbb    eax,DWORD PTR [ebp+0x347d101a]
  41162d:	add    esp,ebp
  41162f:	sbb    DWORD PTR [edx+0x51],edx
  411632:	shl    BYTE PTR [esi],cl
  411634:	aad    0xc1
  411636:	(bad)  
  411637:	jo     0x4115d8
  411639:	inc    edi
  41163a:	push   esi
  41163b:	jge    0x4116b9
  41163d:	daa    
  41163e:	repz pop esi
  411640:	mov    WORD PTR [edx-0x7ba95d3a],?
  411646:	inc    edi
  411647:	out    0xa9,al
  411649:	lock inc esp
  41164b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41164c:	es dec esi
  41164e:	aad    0x8a
  411650:	cmc    
  411651:	jl     0x411683
  411653:	mov    ebx,0xc2521a4b
  411658:	mov    dh,0xe5
  41165a:	repz xor al,bl
  41165d:	mov    ds:0xcd3aafae,al
  411662:	jnp    0x411637
  411664:	sbb    BYTE PTR [ecx],ah
  411666:	or     bh,ah
  411668:	in     eax,0xda
  41166a:	mov    eax,0x6f47ae45
  41166f:	sub    esi,DWORD PTR [ebx]
  411671:	int    0xf4
  411673:	or     al,0xc3
  411675:	or     ebx,esp
  411677:	daa    
  411678:	push   eax
  411679:	loopne 0x4116f3
  41167b:	and    eax,0x95764cbd
  411680:	pop    ds
  411681:	mov    esi,eax
  411683:	fld    QWORD PTR [edi+0x44]
  411686:	push   eax
  411687:	mov    BYTE PTR [ebx+0x4da7a06f],bl
  41168d:	inc    ebp
  41168e:	call   FWORD PTR [edx+0x70]
  411691:	and    al,0x57
  411693:	adc    ah,0xa4
  411696:	inc    edi
  411697:	push   esp
  411698:	mov    al,0x64
  41169a:	xor    edx,esi
  41169c:	cli    
  41169d:	mov    ebx,0xdaf37bd1
  4116a2:	and    BYTE PTR [ebx-0x49],dh
  4116a5:	add    eax,0xfa4a8a31
  4116aa:	fild   QWORD PTR [esi+0x36]
  4116ad:	test   DWORD PTR [ebx+0x647ac440],ecx
  4116b3:	xchg   ebp,eax
  4116b4:	test   WORD PTR [eax-0x1d9e96d],cx
  4116bb:	cmp    DWORD PTR [ecx+0x32],esp
  4116be:	test   eax,0xd6efd9e0
  4116c3:	inc    esp
  4116c4:	xor    al,BYTE PTR [ecx-0x65]
  4116c7:	sahf   
  4116c8:	push   esp
  4116c9:	mov    ebx,0x1c84c44b
  4116ce:	or     eax,0x32cf7bbe
  4116d3:	ins    DWORD PTR es:[edi],dx
  4116d4:	cdq    
  4116d5:	adc    dl,BYTE PTR [eax-0x5fae5af]
  4116db:	and    eax,0xbdb403c2
  4116e0:	ins    DWORD PTR es:[edi],dx
  4116e1:	sub    DWORD PTR [esi],ebx
  4116e3:	daa    
  4116e4:	mov    edx,0x9ccd44d0
  4116e9:	mov    esi,0x72476a98
  4116ee:	fiadd  WORD PTR [ecx+0x6499d2c8]
  4116f4:	dec    ebp
  4116f5:	or     eax,0xb64a22f
  4116fa:	xchg   edx,eax
  4116fb:	xchg   ecx,eax
  4116fc:	leave  
  4116fd:	fldenv [edx-0x30c1c4c9]
  411703:	xor    ebx,DWORD PTR [esp+eax*4+0x4f]
  411707:	stc    
  411708:	bound  edi,QWORD PTR [ecx-0x41487dc]
  41170e:	pop    edi
  41170f:	gs push 0xd647bddd
  411715:	push   ecx
  411716:	ror    DWORD PTR [eax+0x23f015d5],1
  41171c:	fsub   st(7),st
  41171e:	mov    BYTE PTR [edx],dh
  411720:	pop    edi
  411721:	test   eax,0xe22f8297
  411726:	add    edi,edx
  411728:	or     al,0x5c
  41172a:	add    esi,eax
  41172c:	iret   
  41172d:	xchg   edi,eax
  41172e:	push   ds
  41172f:	adc    eax,DWORD PTR [eax]
  411731:	in     eax,dx
  411732:	rcr    BYTE PTR [eax+0x6b],0x83
  411736:	sti    
  411737:	dec    edi
  411738:	jge    0x41174d
  41173a:	cld    
  41173b:	or     al,0x81
  41173d:	xchg   edi,eax
  41173e:	push   ss
  41173f:	jbe    0x4116e1
  411741:	bound  ebx,QWORD PTR [ecx]
  411743:	mov    bl,0xf4
  411745:	or     eax,0x390a0bdf
  41174a:	mov    bh,0x4c
  41174c:	adc    BYTE PTR [edx-0x73c2d928],al
  411752:	mov    ds:0x89ece5dd,al
  411757:	sbb    esi,edx
  411759:	inc    esi
  41175a:	sbb    al,0xf3
  41175c:	hlt    
  41175d:	aas    
  41175e:	mov    dh,BYTE PTR [eax]
  411760:	ret    0xa066
  411763:	mov    al,0x88
  411765:	dec    edi
  411766:	pop    edi
  411767:	push   eax
  411768:	adc    al,0x66
  41176a:	sub    BYTE PTR [ecx+0x5eca6107],bl
  411770:	and    dl,BYTE PTR [ecx+0x7f]
  411773:	cs dec esp
  411775:	loope  0x41173f
  411777:	xchg   ebp,eax
  411778:	int3   
  411779:	ins    BYTE PTR es:[edi],dx
  41177a:	add    DWORD PTR ds:0x7d6c1d53,esp
  411780:	sbb    DWORD PTR [edi-0x4aebfd85],0x6c541e37
  41178a:	push   es
  41178b:	popf   
  41178c:	push   ss
  41178d:	xchg   edx,eax
  41178e:	push   ebx
  41178f:	cs mov ecx,0xdce6c425
  411795:	(bad)  
  411796:	fdivr  DWORD PTR [eax+0x4eba3cdf]
  41179c:	fucom  st(2)
  41179e:	dec    edx
  41179f:	xor    esp,edi
  4117a1:	mov    dh,0xbe
  4117a3:	inc    ebp
  4117a4:	pop    eax
  4117a5:	test   al,0xfd
  4117a7:	lods   al,BYTE PTR ds:[esi]
  4117a8:	mov    esi,0x64c135cf
  4117ad:	jnp    0x4117f1
  4117af:	cmp    al,0x1d
  4117b1:	mov    ds:0x1429ace4,al
  4117b6:	scas   eax,DWORD PTR es:[edi]
  4117b7:	push   cs
  4117b8:	lahf   
  4117b9:	and    DWORD PTR [eax+esi*8+0x6cab91aa],edx
  4117c0:	sub    al,ah
  4117c2:	test   DWORD PTR [eax],ebx
  4117c4:	xchg   esp,eax
  4117c5:	aaa    
  4117c6:	pop    edi
  4117c7:	add    al,0xad
  4117c9:	sub    esi,esp
  4117cb:	jne    0x411781
  4117cd:	stc    
  4117ce:	cld    
  4117cf:	scas   eax,DWORD PTR es:[edi]
  4117d0:	dec    esi
  4117d1:	aaa    
  4117d2:	push   0x29
  4117d4:	mov    al,0xb7
  4117d6:	add    dl,dh
  4117d8:	sbb    ebx,0x79
  4117db:	or     DWORD PTR [edi-0xaf7b269],esi
  4117e1:	gs push edi
  4117e3:	cmc    
  4117e4:	add    ch,BYTE PTR [eax]
  4117e6:	cmp    al,0x93
  4117e8:	pop    esp
  4117e9:	jnp    0x411843
  4117eb:	xchg   DWORD PTR [eax-0x5650423f],ebp
  4117f1:	out    dx,eax
  4117f2:	xor    ebp,edx
  4117f4:	pop    es
  4117f5:	lahf   
  4117f6:	fsub   QWORD PTR [ebp-0x31]
  4117f9:	std    
  4117fa:	mov    dh,0x8b
  4117fc:	daa    
  4117fd:	inc    esp
  4117fe:	xchg   BYTE PTR [esi],cl
  411800:	test   eax,0x5c32d2d8
  411805:	enter  0xa231,0xa7
  411809:	sub    esi,DWORD PTR ss:[ecx-0x42b84f3]
  411810:	clc    
  411811:	mov    bh,0x85
  411813:	jns    0x411842
  411815:	std    
  411816:	repz inc edi
  411818:	sbb    al,0xfc
  41181a:	mov    ?,WORD PTR [esi+0x7e93941]
  411820:	jne    0x4117fa
  411822:	retf   0x507c
  411825:	das    
  411826:	sar    DWORD PTR [ebx],1
  411828:	mov    ds:0x93bfbdb2,al
  41182d:	int    0x1
  41182f:	cld    
  411830:	cwde   
  411831:	call   0x125b151c
  411836:	pop    ds
  411837:	aas    
  411838:	gs test al,0xc1
  41183b:	inc    sp
  41183d:	scas   al,BYTE PTR es:[edi]
  41183e:	sti    
  41183f:	mov    eax,0x27602460
  411844:	sahf   
  411845:	sbb    BYTE PTR [ecx+0xed4f105],cl
  41184b:	add    al,0xc4
  41184d:	inc    edi
  41184e:	mov    ds:0xba8204e5,al
  411853:	jmp    0x9ea9:0xc13ff8eb
  41185a:	shl    DWORD PTR [ebp+0x7b],cl
  41185d:	push   ebx
  41185e:	mov    al,ds:0x3a1181be
  411863:	test   eax,0x2b7a675f
  411868:	out    dx,al
  411869:	mov    ecx,DWORD PTR [esp+ecx*1]
  41186c:	jne    0x41181a
  41186e:	pop    edx
  41186f:	inc    esp
  411870:	lods   al,BYTE PTR ds:[esi]
  411871:	xchg   esi,eax
  411872:	dec    esp
  411873:	icebp  
  411874:	sub    eax,0x88e97911
  411879:	mov    eax,0x15f55ebe
  41187e:	push   ds
  41187f:	ins    BYTE PTR es:[edi],dx
  411880:	cmc    
  411881:	xor    BYTE PTR [esi+0x153e5877],bh
  411887:	add    BYTE PTR [esi],ah
  411889:	lds    edx,FWORD PTR [esi]
  41188b:	push   es
  41188c:	adc    eax,0xf1d1ce41
  411891:	sbb    edx,edi
  411893:	je     0x4118c0
  411895:	retf   0x8e34
  411898:	adc    DWORD PTR [ecx-0x72],ecx
  41189b:	femms  
  41189d:	sbb    cl,ch
  41189f:	daa    
  4118a0:	add    DWORD PTR [esi+0x78256035],eax
  4118a6:	pusha  
  4118a7:	cmp    BYTE PTR ds:0xf5ed5b78,dh
  4118ad:	adc    ebp,DWORD PTR [edi-0x80]
  4118b0:	mov    cl,0x11
  4118b2:	and    eax,esi
  4118b4:	ja     0x411928
  4118b6:	sti    
  4118b7:	(bad)  [edi+0x44f1172]
  4118bd:	fsubr  QWORD PTR [ebp-0x4f]
  4118c0:	loopne 0x41192c
  4118c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118c3:	push   edx
  4118c4:	add    eax,0xf2c5f559
  4118c9:	les    ecx,FWORD PTR [ebp-0x1a]
  4118cc:	arpl   WORD PTR [bp+si-0x55],di
  4118d0:	in     al,0xd0
  4118d2:	and    ah,cl
  4118d4:	daa    
  4118d5:	pop    ss
  4118d6:	sbb    bl,cl
  4118d8:	mov    ah,0xd0
  4118da:	js     0x411907
  4118dc:	fcom   DWORD PTR [eax-0x45]
  4118df:	cmp    BYTE PTR [eax-0x751ae7b],al
  4118e5:	mov    edi,0x7d06f032
  4118ea:	call   0x1a0c:0x3282a9af
  4118f1:	mov    ecx,0xf13ae82f
  4118f6:	int    0x26
  4118f8:	add    ecx,esi
  4118fa:	popa   
  4118fb:	je     0x411888
  4118fd:	cdq    
  4118fe:	jns    0x41194a
  411900:	push   cs
  411901:	std    
  411902:	lds    edx,FWORD PTR [edx+0x56b1e2b1]
  411908:	cmp    edx,eax
  41190a:	scas   al,BYTE PTR es:[edi]
  41190b:	std    
  41190c:	and    al,0x47
  41190e:	jmp    0x411900
  411910:	sub    dh,bl
  411912:	das    
  411913:	lods   eax,DWORD PTR ds:[esi]
  411914:	inc    ebx
  411915:	mov    esi,0xa4744f30
  41191a:	test   al,0xa0
  41191c:	pusha  
  41191d:	mov    eax,0x8cb1fad7
  411922:	int3   
  411923:	sahf   
  411924:	dec    ebp
  411925:	lock in al,dx
  411927:	ret    0x4bff
  41192a:	xor    BYTE PTR [ebp-0x684d0cb3],al
  411930:	or     BYTE PTR [eax],dh
  411932:	cld    
  411933:	mov    dl,0x18
  411935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411936:	push   es
  411937:	jle    0x411969
  411939:	repz repnz out 0x90,eax
  41193d:	std    
  41193e:	scas   al,BYTE PTR es:[edi]
  41193f:	inc    eax
  411940:	jae    0x4119b1
  411942:	sub    esi,DWORD PTR [eax-0x22]
  411945:	sub    eax,0x79d0df0
  41194a:	sbb    ebp,DWORD PTR [eax-0x51]
  41194d:	clc    
  41194e:	mov    ebp,0xf2cd9e34
  411953:	mov    ebp,0x76efe04a
  411958:	cli    
  411959:	mov    ebp,0x8db8dd1
  41195e:	ins    DWORD PTR es:[edi],dx
  41195f:	outs   dx,DWORD PTR ds:[esi]
  411960:	test   BYTE PTR [ecx],al
  411962:	shl    BYTE PTR [esi+ebx*2],1
  411965:	lock fidiv WORD PTR [ecx]
  411968:	add    DWORD PTR [ebx],0x506df245
  41196e:	lods   al,BYTE PTR ds:[esi]
  41196f:	pushf  
  411970:	pop    ds
  411971:	mov    ecx,fs
  411973:	push   eax
  411974:	dec    DWORD PTR [edx-0x4]
  411977:	mov    eax,ds:0x1a57ba28
  41197c:	not    BYTE PTR [edi+esi*2]
  41197f:	inc    esi
  411980:	dec    esi
  411981:	push   esi
  411982:	sti    
  411983:	aaa    
  411984:	daa    
  411985:	inc    esp
  411986:	lahf   
  411987:	scas   al,BYTE PTR es:[edi]
  411988:	mov    dl,0x4d
  41198a:	xchg   esi,eax
  41198b:	aas    
  41198c:	sbb    eax,0xb4ef3aed
  411991:	clc    
  411992:	dec    esi
  411993:	push   eax
  411994:	xor    esp,eax
  411996:	sub    dl,BYTE PTR [edi]
  411998:	mov    DWORD PTR [ecx*1+0x636969fe],edx
  41199f:	repnz repz mov al,ds:0xa95b01bc
  4119a6:	gs fdivrp st(2),st
  4119a9:	xor    ebx,DWORD PTR cs:[ebx-0x6e]
  4119ad:	loope  0x41199b
  4119af:	loopne 0x4119e5
  4119b1:	dec    eax
  4119b2:	dec    edx
  4119b3:	fwait
  4119b4:	cmp    ah,dh
  4119b6:	data16 xor dl,BYTE PTR [ecx+0x2a4579b9]
  4119bd:	outs   dx,DWORD PTR ds:[esi]
  4119be:	and    edi,esp
  4119c0:	mov    ds:0x38513779,al
  4119c5:	dec    edx
  4119c6:	cmp    dl,dl
  4119c8:	push   edi
  4119c9:	pop    ebx
  4119ca:	stc    
  4119cb:	hlt    
  4119cc:	icebp  
  4119cd:	(bad)  
  4119ce:	out    dx,al
  4119cf:	inc    ecx
  4119d0:	dec    edi
  4119d1:	sar    eax,1
  4119d3:	aas    
  4119d4:	adc    DWORD PTR [edx+0x42fd1946],edx
  4119da:	add    eax,0x8aa503f
  4119df:	fistp  QWORD PTR es:[esi+ebp*8+0xc]
  4119e4:	mov    bh,0x5d
  4119e6:	cs sub al,0x9b
  4119e9:	outs   dx,BYTE PTR ds:[esi]
  4119ea:	xchg   ebp,eax
  4119eb:	push   ss
  4119ec:	sbb    ecx,DWORD PTR [ecx+0x5d755893]
  4119f2:	sbb    DWORD PTR [edx-0x642ada8b],eax
  4119f8:	jno    0x411988
  4119fa:	jnp    0x411a64
  4119fc:	mov    edx,0xa593f61f
  411a01:	pop    edi
  411a02:	push   ebx
  411a03:	lods   eax,DWORD PTR ds:[esi]
  411a04:	dec    ebx
  411a05:	jg     0x411a75
  411a07:	push   eax
  411a08:	les    esp,FWORD PTR [esi-0x55]
  411a0b:	adc    BYTE PTR [ebp-0x4741208a],ch
  411a11:	in     al,0x85
  411a13:	xor    ah,bl
  411a15:	fwait
  411a16:	shl    edi,0xae
  411a19:	sahf   
  411a1a:	nop
  411a1b:	add    eax,0x90f757e9
  411a20:	sbb    ah,BYTE PTR [edx]
  411a22:	pop    edx
  411a23:	mov    bh,0xcb
  411a25:	(bad)  [ecx+0x58e1c88b]
  411a2b:	fiadd  WORD PTR [edi+0xf]
  411a2e:	xor    dh,BYTE PTR [eax+ebp*8+0x42]
  411a32:	and    al,0x65
  411a34:	mov    ebp,0x19a9d314
  411a39:	add    bh,BYTE PTR [ecx]
  411a3b:	jbe    0x4119c3
  411a3d:	and    eax,0xb2723362
  411a42:	inc    edx
  411a43:	sub    al,0x39
  411a45:	(bad)  
  411a46:	cli    
  411a47:	mov    esp,0x316e9298
  411a4c:	dec    ebp
  411a4d:	arpl   sp,sp
  411a4f:	pop    edi
  411a50:	daa    
  411a51:	loop   0x411a73
  411a53:	push   edi
  411a54:	imul   ebp,DWORD PTR [ebx],0xffffffbd
  411a57:	popf   
  411a58:	test   DWORD PTR [ebp-0x4000ff23],edi
  411a5e:	fld    TBYTE PTR [ebp-0x3c96aeca]
  411a64:	jge    0x411a9a
  411a66:	nop
  411a67:	adc    DWORD PTR [ebp-0x49],0x46
  411a6b:	mov    esi,0x18afb89
  411a70:	dec    ebx
  411a71:	int    0x26
  411a73:	sbb    BYTE PTR [esi],ch
  411a75:	(bad)
  411a78:	push   es
  411a79:	hlt    
  411a7a:	xchg   esi,eax
  411a7b:	push   es
  411a7c:	ret    0x22db
  411a7f:	jb     0x411a76
  411a81:	or     al,BYTE PTR [esi]
  411a83:	mov    DWORD PTR [ebx-0x80],ecx
  411a86:	aad    0xb2
  411a88:	out    0xc,al
  411a8a:	sub    BYTE PTR [eax+0x7d],0x42
  411a8e:	or     DWORD PTR [edx-0x4f],ebp
  411a91:	mov    ds:0x2682697a,eax
  411a96:	imul   esp,edx,0xffffff88
  411a99:	jae    0x411aea
  411a9b:	push   edx
  411a9c:	das    
  411a9d:	(bad)  
  411a9e:	aam    0x1
  411aa0:	es jae 0x411a44
  411aa3:	in     al,0x74
  411aa5:	dec    esi
  411aa6:	pop    edi
  411aa7:	pop    ebp
  411aa8:	call   0xa5e5159e
  411aad:	lds    edx,FWORD PTR [edx+ebx*4+0x72dfbaa0]
  411ab4:	jnp    0x411b13
  411ab6:	jb     0x411a94
  411ab8:	pop    edx
  411ab9:	fcomp  QWORD PTR [edx]
  411abb:	mov    esi,0xc9443f81
  411ac0:	out    dx,eax
  411ac1:	sub    DWORD PTR [edi+0x5b],0xcd27de45
  411ac8:	sbb    BYTE PTR [eax+0x8b49bab],dl
  411ace:	sub    BYTE PTR [edi-0x68b5638],ch
  411ad4:	cmp    eax,0x1b33cff
  411ad9:	cmp    eax,0xd73a254b
  411ade:	mov    al,ds:0x30286099
  411ae3:	add    BYTE PTR [ecx+0x35e40c8d],bl
  411ae9:	dec    ebx
  411aea:	or     DWORD PTR [ebp-0x2131329b],eax
  411af0:	add    ch,BYTE PTR [ebx]
  411af2:	sub    BYTE PTR [ebp+eax*4+0x2642f1a0],bh
  411af9:	jnp    0x411b1a
  411afb:	pop    esp
  411afc:	ficom  DWORD PTR [edx+0x1c]
  411aff:	and    eax,0x59453c31
  411b04:	or     esp,DWORD PTR [ebp+0x79]
  411b07:	pop    ecx
  411b08:	mov    edi,0xefbd56f9
  411b0d:	out    0x3f,al
  411b0f:	test   eax,0x64e067e5
  411b14:	add    eax,0x644baeab
  411b19:	dec    eax
  411b1a:	push   esp
  411b1b:	add    esi,DWORD PTR [edx+0x2ce2c699]
  411b21:	aam    0x2f
  411b23:	test   ecx,ecx
  411b25:	ins    DWORD PTR es:[edi],dx
  411b26:	dec    ecx
  411b27:	adc    DWORD PTR [ebp-0x33],ecx
  411b2a:	mov    ecx,0x253dfd7b
  411b2f:	jbe    0x411b39
  411b31:	sub    al,0xeb
  411b33:	and    edi,eax
  411b35:	jne    0x411aee
  411b37:	shl    BYTE PTR [eax+edx*8-0x59],cl
  411b3b:	xor    al,0x2b
  411b3d:	push   ss
  411b3e:	add    BYTE PTR cs:[esi+0x66],ah
  411b42:	xchg   DWORD PTR [eax],ebp
  411b44:	(bad)  
  411b45:	xor    bl,ah
  411b47:	pop    edx
  411b48:	jl     0x411bc4
  411b4a:	push   ebx
  411b4b:	jmp    0x657a:0x842487d1
  411b52:	out    0xbf,eax
  411b54:	mov    esp,0x295cf4eb
  411b59:	mov    ebp,0xafe1ca6b
  411b5e:	sub    BYTE PTR [ecx],ch
  411b60:	scas   al,BYTE PTR es:[edi]
  411b61:	jmp    0x4d1a:0x8d63a4ca
  411b68:	dec    edi
  411b69:	jp     0x411be6
  411b6b:	mov    WORD PTR [ebx],?
  411b6d:	mov    ds:0x63288f72,al
  411b72:	lahf   
  411b73:	xchg   BYTE PTR [edi+0x72a6b0b7],cl
  411b79:	iret   
  411b7a:	test   al,0x67
  411b7c:	jge    0x411b3b
  411b7e:	pop    ss
  411b7f:	sbb    al,0x77
  411b81:	es test eax,0xc11fb3f9
  411b87:	jns    0x411bdd
  411b89:	dec    esi
  411b8a:	inc    edx
  411b8b:	mov    bh,0xf1
  411b8d:	xchg   DWORD PTR [edx-0x48205b80],eax
  411b93:	xor    dl,al
  411b95:	aad    0xd
  411b97:	adc    eax,0xb5299201
  411b9c:	fistp  QWORD PTR [ebx]
  411b9e:	xchg   DWORD PTR [eax+eiz*1],esp
  411ba1:	leave  
  411ba2:	loop   0x411ba2
  411ba4:	sub    eax,0xa9e0006b
  411ba9:	ror    DWORD PTR [ebp+edi*8+0x47],0x33
  411bae:	xchg   ebp,eax
  411baf:	or     ebx,DWORD PTR [ebp+0x15f887cd]
  411bb5:	sub    ah,ah
  411bb7:	dec    ebx
  411bb8:	jbe    0x411b58
  411bba:	(bad)  [ebx+0x1d]
  411bbd:	jns    0x411ba4
  411bbf:	jo     0x411bfd
  411bc1:	pop    ss
  411bc2:	add    esi,edx
  411bc4:	cmp    esi,esi
  411bc6:	ret    
  411bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bc8:	test   eax,0xeacc85a1
  411bcd:	call   0xe181:0x98dd1cc3
  411bd4:	mov    cl,0xb4
  411bd6:	(bad)  
  411bd9:	xchg   BYTE PTR [edi-0x6e],bh
  411bdc:	jb     0x411bf8
  411bde:	or     eax,DWORD PTR [ebx-0x52df49f6]
  411be4:	imul   ebp,DWORD PTR [ebx]
  411be7:	hlt    
  411be8:	mov    eax,0xb5bf18b7
  411bed:	adc    BYTE PTR [edi-0x262cbe6d],bl
  411bf3:	jp     0x411bf3
  411bf5:	inc    ecx
  411bf6:	mov    eax,ds:0xc8b5c5c3
  411bfb:	xor    BYTE PTR [ebp+0x18c1bb2b],bl
  411c01:	pop    esp
  411c02:	and    DWORD PTR [ebp+0x67],ecx
  411c05:	fwait
  411c06:	mov    esi,0x140b6e72
  411c0b:	jo     0x411bd1
  411c0d:	push   cs
  411c0e:	mov    ebp,0xe8cc02e3
  411c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c14:	lea    ebp,[esi-0x13]
  411c17:	and    BYTE PTR [esi+esi*4+0x564be786],0x82
  411c1f:	outs   dx,DWORD PTR ds:[esi]
  411c20:	scas   al,BYTE PTR es:[edi]
  411c21:	ins    DWORD PTR es:[edi],dx
  411c22:	shr    al,0xe1
  411c25:	jnp    0x411c51
  411c27:	jmp    0x611c6db
  411c2c:	push   cs
  411c2d:	stos   DWORD PTR es:[edi],eax
  411c2e:	lahf   
  411c2f:	shl    BYTE PTR [edi-0x3a],cl
  411c32:	dec    esi
  411c33:	gs push edi
  411c35:	mov    esi,0x5ab0c511
  411c3a:	and    DWORD PTR [edi],0x8a239e17
  411c40:	xchg   esi,eax
  411c41:	stc    
  411c42:	cs mov esi,0x666ab969
  411c48:	mov    eax,0x422bbe48
  411c4d:	mov    dl,0xc0
  411c4f:	pop    edx
  411c50:	and    DWORD PTR [eax-0x28],ebx
  411c53:	fld    QWORD PTR [ecx-0x11]
  411c56:	mov    esp,0x63f3b593
  411c5b:	push   0xacb16cb1
  411c60:	sbb    ebx,DWORD PTR [eax-0x4efb153a]
  411c66:	aad    0x95
  411c68:	js     0x411c6f
  411c6a:	add    al,0xe0
  411c6c:	mov    edi,0x767ede90
  411c71:	and    ecx,esi
  411c73:	outs   dx,BYTE PTR ds:[esi]
  411c74:	pop    ds
  411c75:	shl    DWORD PTR [esp+ecx*8-0x5244aff0],0x79
  411c7d:	fs sbb ecx,esp
  411c80:	jnp    0x411cbf
  411c82:	cmp    ebp,DWORD PTR [edx]
  411c84:	pop    esp
  411c85:	or     bh,cl
  411c87:	xchg   bx,ax
  411c89:	push   ss
  411c8a:	inc    eax
  411c8b:	sub    BYTE PTR [edi+esi*8+0x7fa4d52a],bl
  411c92:	sti    
  411c93:	popf   
  411c94:	mov    eax,ds:0xe64745c8
  411c99:	jno    0x411cb0
  411c9b:	xchg   edi,eax
  411c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c9d:	push   edx
  411c9e:	es ds sbb eax,0xabb685d8
  411ca5:	jo     0x411cd6
  411ca7:	xchg   BYTE PTR [ebp+ecx*2+0x68213fed],bh
  411cae:	add    eax,0x2bc6e5fe
  411cb3:	mov    dl,0x50
  411cb5:	mov    ebx,0xc0dd81b5
  411cba:	add    al,0x8c
  411cbc:	test   al,0xbb
  411cbe:	(bad)  
  411cc0:	push   ebx
  411cc1:	push   edx
  411cc2:	repnz in al,0x7a
  411cc5:	and    al,0x51
  411cc7:	mov    ds:0x5e139a6,eax
  411ccc:	mov    bh,0xfd
  411cce:	jge    0x411cff
  411cd0:	or     dl,BYTE PTR [edx+0x7a]
  411cd3:	dec    esp
  411cd4:	lods   al,BYTE PTR ds:[esi]
  411cd5:	mov    al,0xb1
  411cd7:	sbb    bl,ch
  411cd9:	in     eax,0xa8
  411cdb:	xchg   edi,eax
  411cdc:	pop    ebx
  411cdd:	xor    al,0xa0
  411cdf:	(bad)  
  411ce0:	ins    DWORD PTR es:[edi],dx
  411ce1:	mov    sp,0x7c10
  411ce5:	dec    esi
  411ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ce7:	or     al,BYTE PTR [ebx-0x467d8ec5]
  411ced:	div    eax
  411cef:	inc    ebp
  411cf0:	loope  0x411c89
  411cf2:	or     eax,0xc7ba0c75
  411cf7:	xor    eax,0xaae88f9f
  411cfc:	xchg   edi,eax
  411cfd:	cld    
  411cfe:	in     eax,0x28
  411d00:	aaa    
  411d01:	aam    0x26
  411d03:	and    eax,0xe0d286e6
  411d08:	push   eax
  411d09:	mov    eax,ds:0xe6d816bb
  411d0e:	sub    al,0x42
  411d10:	jo     0x411d72
  411d12:	das    
  411d13:	mov    esp,0xe2b7834a
  411d18:	pop    ebp
  411d19:	imul   eax,DWORD PTR [esi],0x21835999
  411d1f:	inc    esi
  411d20:	hlt    
  411d21:	ja     0x411d59
  411d23:	sub    DWORD PTR [ecx+0x1d1d498a],ecx
  411d29:	mov    edx,0x6b12a2af
  411d2e:	fs jb  0x411ce7
  411d31:	inc    ebx
  411d32:	shl    DWORD PTR [ebx+0x78bcc49],cl
  411d38:	push   ebx
  411d39:	sbb    BYTE PTR [ebx-0x7f2cc859],ah
  411d3f:	dec    edx
  411d40:	fmul   DWORD PTR [ecx]
  411d42:	inc    esi
  411d43:	cmc    
  411d44:	xor    BYTE PTR [ebx-0x769a29],ch
  411d4a:	cs je  0x411d04
  411d4d:	sub    dl,BYTE PTR [ebx]
  411d4f:	push   ss
  411d50:	jns    0x411d35
  411d52:	dec    esi
  411d53:	xchg   esi,eax
  411d54:	retf   0x2010
  411d57:	mov    al,0xd6
  411d59:	sbb    dl,al
  411d5b:	kxnorb k1,k0,k7
  411d5f:	jnp    0x411d73
  411d61:	adc    eax,0xb15d1aec
  411d66:	cmovle esp,ebx
  411d69:	cld    
  411d6a:	and    edi,ebp
  411d6c:	push   eax
  411d6d:	mov    bl,0xe4
  411d6f:	and    edi,edi
  411d71:	call   0xdd72ae08
  411d76:	addr16 gs loopne 0x411d0a
  411d7a:	mov    eax,ds:0x53d46573
  411d7f:	loope  0x411d12
  411d81:	dec    eax
  411d82:	xchg   ebx,eax
  411d83:	and    eax,0x17d03857
  411d88:	adc    eax,0xf4e9577
  411d8d:	jecxz  0x411d24
  411d8f:	mov    edi,0x77ab4895
  411d94:	inc    ecx
  411d95:	mov    eax,esi
  411d97:	inc    edi
  411d98:	pop    esi
  411d99:	or     eax,0xb99ad5ee
  411d9e:	(bad)  
  411d9f:	fdiv   QWORD PTR [ebx]
  411da1:	cmp    ecx,edx
  411da3:	jb     0x40f9d0
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	inc    ecx
  412035:	repnz xchg esi,eax
  412037:	inc    edx
  412038:	(bad)  
  412039:	sar    BYTE PTR [eax+0x4a],1
  41203c:	mov    ds:0x82203a4b,eax
  412041:	fstp   DWORD PTR [esp+ebx*8]
  412044:	add    DWORD PTR [eax],eax
  412046:	add    BYTE PTR [eax],al
  412048:	inc    ebx
  412049:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41204d:	jb     0x4120c1
  41204f:	outs   dx,BYTE PTR gs:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	push   0xffffff8e
  415640:	dec    edi
  415641:	cmp    DWORD PTR [ecx-0x2c],edi
  415644:	add    BYTE PTR [eax],al
  415646:	cmc    
  415647:	add    al,0x0
  415649:	add    ah,bh
  41564b:	popf   
  41564c:	in     al,dx
  41564d:	je     0x41561c
  41564f:	jns    0x4155fb
  415651:	inc    ebx
  415652:	rcl    DWORD PTR [edi],cl
  415654:	adc    cl,BYTE PTR [edx+eax*2+0x71381325]
  41565b:	push   esp
  41565c:	xor    al,0x1f
  41565e:	dec    ecx
  41565f:	out    dx,eax
  415660:	dec    ebp
  415661:	(bad)  
  415662:	sbb    esp,esi
  415664:	rcl    DWORD PTR [esi],cl
  415666:	popf   
  415667:	mov    eax,0x410c4a55
  41566c:	mov    ds:0xdd6c6689,eax
  415671:	pop    DWORD PTR [ecx-0x66]
  415674:	lds    esi,FWORD PTR [esi-0x70]
  415677:	xchg   edx,eax
  415678:	jbe    0x415600
  41567a:	xchg   edi,eax
  41567b:	cmp    DWORD PTR [ebp+0x1df28178],ebx
  415681:	dec    esi
  415682:	dec    ecx
  415683:	neg    DWORD PTR [edi]
  415685:	sti    
  415686:	daa    
  415687:	dec    ebp
  415688:	pop    ebp
  415689:	shl    bl,0x43
  41568c:	push   edi
  41568d:	dec    eax
  41568e:	adc    eax,0xd6458470
  415693:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415695:	push   cs
  415696:	xchg   ebx,eax
  415697:	lahf   
  415698:	ss jmp 0x415666
  41569b:	add    eax,0xe232f403
  4156a0:	call   0xc530:0xb7167639
  4156a7:	xor    DWORD PTR [esi+ebp*2+0x44],ecx
  4156ab:	mov    esi,0xee056afe
  4156b0:	adc    BYTE PTR [eax+0x66],dl
  4156b3:	js     0x4156f1
  4156b5:	stos   DWORD PTR es:[edi],eax
  4156b6:	dec    eax
  4156b7:	aam    0x61
  4156b9:	(bad)  
  4156ba:	(bad)  
  4156bc:	repz pop eax
  4156be:	sbb    dl,BYTE PTR [esi+esi*1-0x29]
  4156c2:	jecxz  0x415688
  4156c4:	pushf  
  4156c5:	pop    esp
  4156c6:	mov    BYTE PTR ds:0xe9e8eedb,al
  4156cc:	outs   dx,BYTE PTR ds:[esi]
  4156cd:	or     ebp,DWORD PTR [edi+edi*4-0x3c8157b2]
  4156d4:	cli    
  4156d5:	adc    ch,BYTE PTR [edx]
  4156d7:	cld    
  4156d8:	jecxz  0x4156fd
  4156da:	inc    ecx
  4156db:	and    al,0x8b
  4156dd:	cmc    
  4156de:	xchg   ebp,eax
  4156df:	mov    edx,0xad0269d5
  4156e4:	sbb    eax,0xec81e23f
  4156e9:	xor    ebp,DWORD PTR [edi+eax*8+0x16658ff5]
  4156f0:	(bad)  [eax]
  4156f2:	push   esp
  4156f3:	push   ds
  4156f4:	mov    eax,ds:0x200102f4
  4156f9:	push   eax
  4156fa:	push   ebp
  4156fb:	lds    ecx,FWORD PTR [ecx+edx*2]
  4156fe:	call   0x49b1:0xff9fde44
  415705:	inc    ecx
  415706:	into   
  415707:	adc    BYTE PTR [ecx-0x27],dl
  41570a:	push   ecx
  41570b:	jg     0x4156fa
  41570d:	jp     0x415694
  41570f:	retf   0x1a00
  415712:	push   cs
  415713:	xor    DWORD PTR [edi],ebp
  415715:	dec    ebx
  415716:	inc    ebx
  415717:	mov    edi,0xf93e7e41
  41571c:	and    edi,DWORD PTR [esi+eax*1]
  41571f:	and    edx,0x7dc683ac
  415725:	xchg   esp,eax
  415726:	mov    DWORD PTR [ecx+edi*2-0x411f27c7],ecx
  41572d:	sub    bl,BYTE PTR gs:[esi]
  415730:	lds    ecx,FWORD PTR [edi]
  415732:	adc    al,0x73
  415734:	ret    0xe8dd
  415737:	jmp    0x415761
  415739:	lods   al,BYTE PTR ds:[esi]
  41573a:	arpl   dx,bx
  41573c:	(bad)  
  41573d:	add    al,0x57
  41573f:	lods   al,BYTE PTR ds:[esi]
  415740:	sub    ah,0x69
  415743:	or     eax,0xee30fff4
  415748:	push   ebx
  415749:	and    esp,ebx
  41574b:	cld    
  41574c:	aad    0xb
  41574e:	shl    BYTE PTR [edx-0x2af1345e],0xac
  415755:	fsubr  DWORD PTR [edi]
  415757:	js     0x415719
  415759:	pop    es
  41575a:	scas   eax,DWORD PTR es:[edi]
  41575b:	mul    edi
  41575d:	sbb    cl,ch
  41575f:	xchg   edx,eax
  415760:	pop    edi
  415761:	mov    WORD PTR [edi+0x5eb60400],ss
  415767:	xchg   ebp,eax
  415768:	jne    0x415751
  41576a:	das    
  41576b:	shl    BYTE PTR [esi],0xf4
  41576e:	xor    cl,BYTE PTR [esi+ebp*1]
  415771:	(bad)  
  415772:	nop
  415773:	nop
  415774:	cmp    ebx,DWORD PTR [edi-0x5f]
  415777:	aas    
  415778:	lods   al,BYTE PTR ds:[esi]
  415779:	add    BYTE PTR [ecx+0x4b],bh
  41577c:	(bad)
  41577f:	stos   BYTE PTR es:[edi],al
  415780:	and    ch,BYTE PTR [esi]
  415782:	add    dl,BYTE PTR ds:0x357da410
  415788:	adc    DWORD PTR cs:[ecx-0x55],esp
  41578c:	cmp    eax,0xdc4f3249
  415791:	pop    ss
  415792:	xchg   BYTE PTR [eax-0x43560c15],ah
  415798:	inc    ebx
  415799:	mov    esi,0x344df730
  41579e:	fist   WORD PTR ds:0x82431baf
  4157a4:	cdq    
  4157a5:	hlt    
  4157a6:	scas   al,BYTE PTR es:[edi]
  4157a7:	adc    ah,cl
  4157a9:	push   es
  4157aa:	les    esi,FWORD PTR [ecx+0x458a6aa]
  4157b0:	inc    eax
  4157b1:	push   es
  4157b2:	mov    ds:0x8a342a25,eax
  4157b7:	and    DWORD PTR [eax+0x4b],ebp
  4157ba:	push   ds
  4157bb:	cld    
  4157bc:	dec    edi
  4157bd:	pshufw mm5,QWORD PTR [edi+esi*4-0x21ac9f3b],0xa4
  4157c6:	repz fiadd DWORD PTR [ebp+0x5a]
  4157ca:	sub    cl,BYTE PTR [esi]
  4157cc:	call   0x5a08e823
  4157d1:	push   ds
  4157d2:	mov    esp,0x176caf3b
  4157d7:	in     al,dx
  4157d8:	or     edi,esi
  4157da:	xor    dh,BYTE PTR ds:0xb6d591fb
  4157e0:	das    
  4157e1:	retf   0x163b
  4157e4:	mov    ds:0xa7a5fce7,al
  4157e9:	xchg   esp,eax
  4157ea:	and    BYTE PTR [ebp+0x3be06095],al
  4157f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157f1:	mov    BYTE PTR [ebp+ebp*2+0x1714d65b],ch
  4157f8:	cld    
  4157f9:	cmp    BYTE PTR [ecx-0x4105cd5f],bh
  4157ff:	in     al,dx
  415800:	mov    al,0x95
  415802:	mov    eax,ds:0xc87653c1
  415807:	in     eax,0x45
  415809:	call   0x392e7a0
  41580e:	out    dx,eax
  41580f:	jmp    0x338b:0x669cea09
  415816:	sbb    eax,0xe6325ff0
  41581b:	mov    dh,BYTE PTR [edx+0x5b]
  41581e:	mov    dl,0xde
  415820:	fs stc 
  415822:	scas   eax,DWORD PTR es:[edi]
  415823:	mov    ds:0x68aead84,eax
  415828:	fld    QWORD PTR [ecx+0x61]
  41582b:	add    al,0x48
  41582d:	adc    esi,DWORD PTR [eax+edi*2+0x7bcc6b29]
  415834:	jle    0x41586d
  415836:	push   edi
  415837:	fsubr  st(7),st
  415839:	gs sti 
  41583b:	cmc    
  41583c:	popa   
  41583d:	fist   WORD PTR [ecx+0x4f]
  415840:	ret    
  415841:	aad    0x12
  415843:	stos   BYTE PTR es:[edi],al
  415844:	add    eax,0xd834d255
  415849:	mov    BYTE PTR fs:[esi-0x1a],al
  41584d:	push   ebx
  41584e:	into   
  41584f:	inc    edx
  415850:	je     0x4158bd
  415852:	jnp    0x415845
  415854:	je     0x415827
  415856:	(bad)  
  415857:	fwait
  415858:	xchg   esp,eax
  415859:	popf   
  41585a:	cwde   
  41585b:	jg     0x415815
  41585d:	mov    cl,0x9d
  41585f:	cld    
  415860:	xchg   BYTE PTR [esi-0x32eead2a],dh
  415866:	fdiv   QWORD PTR [edi+0x47db8fb8]
  41586c:	aam    0x74
  41586e:	sete   dl
  415871:	add    BYTE PTR [ebp-0x2d],ch
  415874:	hlt    
  415875:	cld    
  415876:	cmp    esp,DWORD PTR [ecx-0x63]
  415879:	xchg   esp,eax
  41587a:	std    
  41587b:	jae    0x4158b6
  41587d:	cmp    eax,0x3a6f0b84
  415882:	out    0x56,al
  415884:	adc    dl,0xde
  415887:	jp     0x415814
  415889:	sti    
  41588a:	jns    0x41580d
  41588c:	(bad)
  41588f:	cmp    BYTE PTR [eax-0x46],dh
  415892:	dec    ebp
  415893:	mov    ecx,0x63efa8c5
  415898:	inc    ebp
  415899:	cwde   
  41589a:	pop    ebx
  41589b:	retf   0x6ef7
  41589e:	lods   eax,DWORD PTR ds:[esi]
  41589f:	not    BYTE PTR [ecx+0xf]
  4158a2:	lds    ebx,FWORD PTR [ecx+ecx*2+0x15]
  4158a6:	lds    eax,FWORD PTR [edx+0x4e]
  4158a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158aa:	ja     0x415867
  4158ac:	xor    edx,0xffffff86
  4158af:	cmp    al,0x6b
  4158b1:	(bad)  
  4158b2:	fistp  QWORD PTR [esi]
  4158b4:	sub    al,0x6c
  4158b6:	or     bh,cl
  4158b8:	push   esi
  4158b9:	xchg   DWORD PTR [esi-0x38],edx
  4158bc:	pop    ebp
  4158bd:	ja     0x41589e
  4158bf:	lds    eax,FWORD PTR [ecx+esi*8+0x5523ade5]
  4158c6:	ficom  WORD PTR [ecx+0x66]
  4158c9:	cmp    al,0xa4
  4158cb:	fcomi  st,st(6)
  4158cd:	mov    ds,WORD PTR [edx]
  4158cf:	in     eax,dx
  4158d0:	cli    
  4158d1:	dec    edi
  4158d2:	xchg   edx,eax
  4158d3:	jno    0x415878
  4158d5:	sub    ebp,edi
  4158d7:	mov    BYTE PTR [ebx-0x38b461ce],0x6b
  4158de:	jmp    0xe7cee6fa
  4158e3:	dec    ecx
  4158e4:	and    DWORD PTR [esi+0x32],ecx
  4158e7:	and    eax,eax
  4158e9:	and    al,0x59
  4158eb:	out    dx,al
  4158ec:	jecxz  0x4158ab
  4158ee:	lea    ecx,gs:[ebp+ecx*4+0x37cf9d65]
  4158f6:	mov    esp,0x69b28813
  4158fb:	jb     0x4158bb
  4158fd:	push   0xfffffff4
  4158ff:	vmovlps xmm7,xmm5,QWORD PTR [ecx]
  415903:	outs   dx,DWORD PTR ds:[esi]
  415904:	aad    0xce
  415906:	jnp    0x415932
  415908:	lods   eax,DWORD PTR ds:[esi]
  415909:	outs   dx,BYTE PTR ds:[esi]
  41590a:	or     al,0x49
  41590c:	xor    dl,BYTE PTR [edi+esi*2+0x2c]
  415910:	not    BYTE PTR [ebx+0x5a]
  415913:	mul    BYTE PTR [ecx+0x123de8ec]
  415919:	in     al,dx
  41591a:	jno    0x415910
  41591c:	push   0x42
  41591e:	loop   0x41592f
  415920:	cmp    al,0xc3
  415922:	fwait
  415923:	je     0x41598d
  415925:	leave  
  415926:	push   esi
  415927:	jecxz  0x415955
  415929:	repz shl DWORD PTR [ebx+0x1468f575],1
  415930:	stos   DWORD PTR es:[edi],eax
  415931:	hlt    
  415932:	je     0x415965
  415934:	clc    
  415935:	pop    esp
  415936:	ret    0x1a45
  415939:	(bad)  
  41593a:	les    edx,FWORD PTR [ecx-0x1020c54c]
  415940:	mov    WORD PTR [edx-0x7393d2a],cs
  415946:	das    
  415947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415948:	push   edi
  415949:	fldenv ds:0x173c28cf
  41594f:	outs   dx,DWORD PTR ds:[esi]
  415950:	push   edi
  415951:	sti    
  415952:	sbb    DWORD PTR [ebp+0x74c16e43],ebx
  415958:	out    dx,eax
  415959:	mov    edx,eax
  41595b:	push   ss
  41595c:	jne    0x4159cb
  41595e:	jp     0x415944
  415960:	jp     0x415911
  415962:	xchg   eax,ecx
  415964:	dec    eax
  415965:	aam    0x8e
  415967:	out    dx,al
  415968:	xchg   edi,eax
  415969:	adc    eax,0x20b1a5d1
  41596e:	icebp  
  41596f:	add    al,0xc2
  415971:	fsqrt  
  415973:	adc    al,0xed
  415975:	mov    bh,0xc1
  415977:	dec    edi
  415978:	push   ss
  415979:	js     0x415915
  41597b:	sbb    eax,0xd0761e83
  415980:	aam    0x9c
  415982:	mov    BYTE PTR [edx-0x3d1dd3e7],dl
  415988:	mov    esp,0x7d4af723
  41598d:	nop
  41598e:	mov    ?,WORD PTR [ebx+0x71c3bbf5]
  415994:	inc    esi
  415995:	mov    edx,ebx
  415997:	stc    
  415998:	aad    0x5c
  41599a:	cmp    DWORD PTR [esi-0x48506fb5],esp
  4159a0:	push   es
  4159a1:	add    al,0x7
  4159a3:	add    bl,BYTE PTR [ebx-0x7b]
  4159a6:	cdq    
  4159a7:	mov    WORD PTR [eax-0x78],fs
  4159aa:	xchg   ecx,eax
  4159ab:	jmp    0x66fa:0xbc726804
  4159b2:	mov    ds:0x7c93e8f7,eax
  4159b7:	bnd ret 0xda35
  4159bb:	daa    
  4159bc:	inc    eax
  4159bd:	jb     0x4159cb
  4159bf:	inc    ebp
  4159c0:	loope  0x41594c
  4159c2:	pop    edi
  4159c3:	imul   edi,esi,0x1
  4159c6:	add    al,0x76
  4159c8:	pop    ebx
  4159c9:	xor    BYTE PTR [ecx+0x62],dl
  4159cc:	dec    edx
  4159cd:	add    eax,0x8e0d627
  4159d2:	aad    0x2d
  4159d4:	lods   al,BYTE PTR ds:[esi]
  4159d5:	push   0xd8ba533e
  4159da:	clc    
  4159db:	out    dx,eax
  4159dc:	inc    ecx
  4159dd:	xchg   edx,eax
  4159de:	or     BYTE PTR [edx-0x26c3c52b],0x2f
  4159e5:	dec    eax
  4159e6:	push   ecx
  4159e7:	push   ss
  4159e8:	test   BYTE PTR [eax+0x30ebd24f],al
  4159ee:	mov    dl,0xd1
  4159f0:	xchg   edx,eax
  4159f1:	mov    esp,0x6cca4676
  4159f6:	rol    DWORD PTR [edx-0x2c],0x86
  4159fa:	sub    DWORD PTR [edx],ebp
  4159fc:	unpcklps xmm4,xmm4
  4159ff:	fld    DWORD PTR [ebx]
  415a01:	push   edx
  415a02:	outs   dx,DWORD PTR ds:[esi]
  415a03:	mov    ds:0xb23f4fbd,eax
  415a08:	push   ecx
  415a09:	outs   dx,BYTE PTR ds:[esi]
  415a0a:	cmp    cl,BYTE PTR [ebx-0x3c]
  415a0d:	mov    eax,0x751c1e6
  415a12:	std    
  415a13:	(bad)  
  415a14:	sub    al,0x2c
  415a16:	sub    eax,0xe034c92f
  415a1b:	pusha  
  415a1c:	or     edi,DWORD PTR [edx]
  415a1e:	add    eax,0x11226439
  415a23:	jl     0x415a4a
  415a25:	inc    edx
  415a26:	stc    
  415a27:	imul   BYTE PTR [ecx+eiz*4]
  415a2a:	idiv   ch
  415a2c:	push   ds
  415a2d:	xor    esp,DWORD PTR [eax+0x323bba03]
  415a33:	in     al,dx
  415a34:	fwait
  415a35:	int3   
  415a36:	mov    al,0x50
  415a38:	sub    BYTE PTR [edx*4-0x555d0898],0x8
  415a40:	fimul  WORD PTR cs:[ebp-0x5d62ecb3]
  415a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a48:	sbb    esp,DWORD PTR [edx-0x76]
  415a4b:	cmp    DWORD PTR [ecx],0x5377bd8b
  415a51:	popf   
  415a52:	jp     0x415a3c
  415a54:	rcr    DWORD PTR [edi-0x38],0x98
  415a58:	out    0x5b,al
  415a5a:	adc    ebp,esp
  415a5c:	lods   al,BYTE PTR ds:[esi]
  415a5d:	sub    BYTE PTR [ebx-0x79],bh
  415a60:	out    dx,al
  415a61:	xchg   esi,eax
  415a62:	pop    ebx
  415a63:	inc    edi
  415a64:	stos   BYTE PTR es:[edi],al
  415a65:	mov    esp,0x2eae12f5
  415a6a:	cmp    ch,BYTE PTR [esi-0x7f]
  415a6d:	inc    esp
  415a6e:	dec    ebp
  415a6f:	sti    
  415a70:	(bad)  
  415a71:	daa    
  415a72:	enter  0x7bce,0x48
  415a76:	mov    ebp,0x333c539b
  415a7b:	add    dl,BYTE PTR [ebp-0x2]
  415a7e:	jae    0x415a7d
  415a80:	mov    ebp,0x3f075901
  415a85:	fist   WORD PTR ds:0x9ffb8537
  415a8b:	xor    BYTE PTR [edx-0x4f],cl
  415a8e:	shr    BYTE PTR [esi],cl
  415a90:	sub    al,0x66
  415a92:	cmp    DWORD PTR [esi+0xb06559f],esi
  415a98:	dec    ecx
  415a99:	inc    ecx
  415a9a:	outs   dx,DWORD PTR ds:[esi]
  415a9b:	lea    ecx,[edi+ebx*8]
  415a9e:	pop    ebx
  415a9f:	(bad)  
  415aa0:	enter  0x4e03,0x94
  415aa4:	adc    BYTE PTR [ecx],ah
  415aa6:	and    ah,BYTE PTR [esi]
  415aa8:	inc    esp
  415aa9:	inc    edx
  415aaa:	jbe    0x415ac4
  415aac:	mov    BYTE PTR [ecx+0x931b98c],ah
  415ab2:	adc    BYTE PTR [ebx+0x58],0xc1
  415ab6:	ds ins BYTE PTR es:[edi],dx
  415ab8:	cmp    BYTE PTR [edi],dh
  415aba:	jecxz  0x415aa0
  415abc:	inc    ecx
  415abd:	jb     0x415a8c
  415abf:	mov    ebp,ds
  415ac1:	popa   
  415ac2:	shl    DWORD PTR [esi+ecx*4+0x11],cl
  415ac6:	mov    bh,0xc9
  415ac8:	push   0xffffff92
  415aca:	pop    ss
  415acb:	loope  0x415b2c
  415acd:	and    esi,ecx
  415acf:	in     eax,dx
  415ad0:	std    
  415ad1:	add    esi,DWORD PTR [edx+0x1c]
  415ad4:	test   eax,0x58717dfd
  415ad9:	adc    al,0x53
  415adb:	and    ah,BYTE PTR ds:0x2f711774
  415ae1:	xchg   ecx,esi
  415ae3:	jns    0x415afe
  415ae5:	push   ebp
  415ae7:	popa   
  415ae8:	or     BYTE PTR [eax-0x5],cl
  415aeb:	mov    edi,0x97ffeecd
  415af0:	push   ds
  415af1:	mov    BYTE PTR [edx-0x6d917d4d],dh
  415af7:	popf   
  415af8:	mov    WORD PTR [edi-0x7d],es
  415afb:	push   0x5
  415afd:	shl    BYTE PTR [ecx+0x5de7a429],cl
  415b03:	sub    WORD PTR [edx+eax*2],bp
  415b07:	enterw 0xf7e,0x89
  415b0c:	xchg   edx,eax
  415b0d:	iret   
  415b0e:	pusha  
  415b0f:	aaa    
  415b10:	pop    ebx
  415b11:	loopne 0x415add
  415b13:	ja     0x415b44
  415b15:	or     DWORD PTR [edi-0x17],ecx
  415b18:	add    bl,BYTE PTR [esi]
  415b1a:	or     al,0xe7
  415b1c:	push   edi
  415b1d:	mov    ch,BYTE PTR [edx+esi*4+0x7a]
  415b21:	test   BYTE PTR [eax-0x5],bh
  415b24:	dec    edi
  415b25:	pop    edi
  415b26:	sub    esi,ebp
  415b28:	aaa    
  415b29:	call   0x7cf6a0a0
  415b2e:	add    ch,BYTE PTR [edx+0x23a01e36]
  415b34:	xchg   ebp,eax
  415b35:	repnz cs push edi
  415b38:	and    eax,0x94327ca9
  415b3d:	sub    eax,0xc2
  415b42:	rcl    BYTE PTR [esi],0x80
  415b45:	pop    ebx
  415b46:	(bad)  
  415b47:	(bad)  
  415b49:	lahf   
  415b4a:	jg     0x415ae1
  415b4c:	gs fsub st(5),st
  415b4f:	rcr    DWORD PTR [esi+ebx*4+0x6e],cl
  415b53:	fld    DWORD PTR [eax]
  415b55:	add    ch,dh
  415b57:	add    al,0x0
  415b59:	add    dl,ah
  415b5b:	int    0x5d
  415b5d:	inc    eax
  415b5e:	int    0x79
  415b60:	or     al,0x9f
  415b62:	icebp  
  415b63:	js     0x415b20
  415b65:	pusha  
  415b66:	ins    BYTE PTR es:[edi],dx
  415b67:	jno    0x415afa
  415b69:	jmp    0xf1b1:0x82b60f4a
  415b70:	sahf   
  415b71:	in     al,0x58
  415b73:	shr    DWORD PTR [ecx+eiz*4],1
  415b76:	test   DWORD PTR [esp+ebp*1+0xf],ebp
  415b7a:	dec    ecx
  415b7b:	(bad)  
  415b7c:	jl     0x415be3
  415b7e:	mov    cl,0x8
  415b80:	pop    eax
  415b81:	call   DWORD PTR [ebx+0x51df6980]
  415b87:	mov    dh,0x5a
  415b89:	xor    BYTE PTR [ebp+eax*8-0x2492c317],bh
  415b90:	pop    esp
  415b91:	jle    0x415ba2
  415b93:	fs ins BYTE PTR es:[edi],dx
  415b95:	push   cs
  415b96:	sbb    esp,DWORD PTR [edi]
  415b98:	push   edx
  415b99:	cmc    
  415b9a:	inc    ecx
  415b9b:	mov    dl,0x3
  415b9d:	xor    esi,DWORD PTR [edx+0x73]
  415ba0:	(bad)  
  415ba1:	fprem1 
  415ba3:	mov    WORD PTR [esi-0x2f],?
  415ba6:	xchg   edx,eax
  415ba7:	mov    edi,DWORD PTR [ecx-0x78]
  415baa:	popf   
  415bab:	or     BYTE PTR [edi],0xd0
  415bae:	cld    
  415baf:	enter  0x10c2,0xea
  415bb3:	or     DWORD PTR [esi],ebp
  415bb5:	or     ch,BYTE PTR [eax+0x4c3ac63e]
  415bbb:	fcmovbe st,st(1)
  415bbd:	pop    edx
  415bbe:	dec    ecx
  415bbf:	or     eax,DWORD PTR [esi-0xd]
  415bc2:	jle    0x415b59
  415bc4:	fist   DWORD PTR [edx-0x2f]
  415bc7:	rol    DWORD PTR [ebx],1
  415bc9:	pop    ss
  415bca:	dec    eax
  415bcb:	and    BYTE PTR [ecx],bl
  415bcd:	or     al,0x19
  415bcf:	dec    esp
  415bd0:	enter  0xf9f7,0xe5
  415bd4:	fstp   TBYTE PTR [ebx+edx*8-0x5b]
  415bd8:	or     eax,0xe159d7d6
  415bdd:	mov    esp,0xdfdeaeb5
  415be2:	adc    BYTE PTR [eax],ah
  415be4:	(bad)  
  415be5:	xchg   esp,eax
  415be6:	cmp    dl,ch
  415be8:	enter  0x2ee6,0x41
  415bec:	fistp  DWORD PTR [esi]
  415bee:	or     DWORD PTR [ecx],ebx
  415bf0:	pop    ds
  415bf1:	cli    
  415bf2:	push   ebp
  415bf3:	dec    ebx
  415bf4:	jge    0x415be3
  415bf6:	mov    ah,0x63
  415bf8:	into   
  415bf9:	out    0xad,eax
  415bfb:	rcl    BYTE PTR [esi],0xef
  415bfe:	mov    ds:0x8f71a2c2,al
  415c03:	nop
  415c04:	les    esi,FWORD PTR [ebx+0x22]
  415c07:	push   0xb9269611
  415c0c:	into   
  415c0d:	or     al,0x41
  415c0f:	loop   0x415b96
  415c11:	or     ebx,esp
  415c13:	push   esp
  415c14:	xchg   DWORD PTR [edx],ebx
  415c16:	jbe    0x415bd1
  415c18:	loope  0x415bab
  415c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c1b:	ficom  WORD PTR [ebx+0x17db77ea]
  415c21:	jmp    0xe1a2172e
  415c26:	ficomp WORD PTR ds:0x6d2a0514
  415c2c:	push   es
  415c2d:	mov    ah,0x33
  415c2f:	into   
  415c30:	push   ss
  415c31:	pop    ebx
  415c32:	stos   BYTE PTR es:[edi],al
  415c33:	sbb    BYTE PTR [ebp+0x323281a6],bl
  415c39:	fwait
  415c3a:	sar    BYTE PTR [edx+0x7a99d7f4],1
  415c40:	je     0x415c46
  415c42:	in     eax,0xba
  415c44:	inc    eax
  415c45:	xchg   DWORD PTR [ebx],eax
  415c47:	test   ecx,esp
  415c49:	int    0x50
  415c4b:	cmp    dh,cl
  415c4d:	push   ds
  415c4e:	gs clc 
  415c50:	mov    edi,0x1e4da655
  415c55:	mov    ecx,0xcd7d95f4
  415c5a:	pop    ss
  415c5b:	arpl   WORD PTR [ecx-0x4d4a8acc],bx
  415c61:	lock sbb edx,DWORD PTR ss:[esi+0x73]
  415c66:	inc    eax
  415c67:	jmp    0x8356ad7d
  415c6c:	int    0xea
  415c6e:	mov    edi,DWORD PTR [edx]
  415c70:	push   edx
  415c71:	mov    al,ds:0x6994719
  415c76:	jl     0x415c2f
  415c78:	or     dl,BYTE PTR [eax-0xb6e1375]
  415c7e:	jns    0x415c0b
  415c80:	and    edi,DWORD PTR fs:[ebp+0x57]
  415c84:	div    ecx
  415c86:	push   0x4b
  415c88:	dec    edx
  415c89:	sbb    BYTE PTR ss:[edx+0x5dcd4624],dl
  415c90:	(bad)
  415c93:	outs   dx,DWORD PTR ds:[esi]
  415c94:	dec    esp
  415c95:	inc    esi
  415c96:	inc    ecx
  415c97:	fcmovne st,st(6)
  415c99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c9a:	test   eax,0x4bbcb47d
  415c9f:	adc    al,0x7f
  415ca1:	cmp    DWORD PTR [eax+0x5],esi
  415ca4:	repz mov eax,0x9e62afa9
  415caa:	inc    esp
  415cab:	push   edx
  415cac:	sbb    edx,DWORD PTR [edi]
  415cae:	in     eax,0xd5
  415cb0:	or     eax,0x78d91d9c
  415cb5:	int3   
  415cb6:	aas    
  415cb7:	pop    esi
  415cb8:	out    0x5f,al
  415cba:	push   esi
  415cbb:	xchg   eax,edx
  415cbd:	rol    esp,1
  415cbf:	dec    esp
  415cc0:	pop    edx
  415cc2:	hlt    
  415cc3:	cwde   
  415cc4:	js     0x415d05
  415cc6:	loop   0x415c74
  415cc8:	pop    ebx
  415cc9:	inc    edx
  415cca:	loope  0x415cb6
  415ccc:	push   es
  415ccd:	pop    ebx
  415cce:	sbb    BYTE PTR [edi-0x27],bl
  415cd1:	mov    eax,0xc9e2fb6d
  415cd6:	adc    dh,BYTE PTR [edx-0x1ad26bff]
  415cdc:	stos   BYTE PTR es:[edi],al
  415cdd:	mov    WORD PTR [esi+0x1c],cs
  415ce0:	sub    edx,DWORD PTR [ebx]
  415ce2:	push   cx
  415ce4:	repnz fucom st(4)
  415ce7:	jle    0x415cc5
  415ce9:	jo     0x415d34
  415ceb:	inc    eax
  415cec:	fbld   TBYTE PTR [esi+ecx*8-0x5800ac8]
  415cf3:	lea    edx,ds:0xc03e0e52
  415cf9:	iret   
  415cfa:	aaa    
  415cfb:	jae    0x415d1c
  415cfd:	jns    0x415d44
  415cff:	in     al,0xbc
  415d01:	pop    esp
  415d02:	mov    ebp,0x83c679fa
  415d07:	dec    edx
  415d08:	mov    edi,0x38ba2522
  415d0d:	pop    esi
  415d0e:	jo     0x415cf3
  415d10:	in     al,0x5f
  415d12:	shl    DWORD PTR [edi],0x4e
  415d15:	mov    BYTE PTR [ebp+0x41],bh
  415d18:	sbb    ebp,esi
  415d1a:	push   0xf9576404
  415d1f:	fdivr  DWORD PTR [edi]
  415d21:	cmp    al,0xc
  415d23:	dec    ebp
  415d24:	in     eax,dx
  415d25:	dec    eax
  415d26:	xchg   ebx,eax
  415d27:	call   0xa047:0x7a7bba66
  415d2e:	mov    ebp,0x450779c4
  415d33:	inc    esp
  415d34:	clc    
  415d35:	pop    es
  415d36:	jmp    0x415d43
  415d38:	mov    gs,WORD PTR [ebp-0x2581afd0]
  415d3e:	popa   
  415d3f:	adc    eax,0xa22f9d53
  415d44:	repnz fidivr DWORD PTR [ebp-0x44]
  415d48:	outs   dx,BYTE PTR ds:[esi]
  415d49:	inc    eax
  415d4a:	shl    DWORD PTR [ebx+0x6730c434],cl
  415d50:	xor    BYTE PTR [edx-0x4f102c88],0x7e
  415d57:	pop    ecx
  415d58:	dec    esp
  415d59:	cmp    ah,al
  415d5b:	rcl    BYTE PTR [edi-0x3dab5ed8],0xbc
  415d62:	sub    esp,DWORD PTR [edi+edx*8+0x2d14a933]
  415d69:	and    eax,esi
  415d6b:	aad    0x27
  415d6d:	mov    WORD PTR ds:0x589c2a4e,gs
  415d73:	sbb    dh,bl
  415d75:	jb     0x415db0
  415d77:	jae    0x415d04
  415d79:	sbb    DWORD PTR [ebx],eax
  415d7b:	xchg   ebx,eax
  415d7c:	pop    esp
  415d7d:	sbb    DWORD PTR [edx+0x7f766a77],0x61
  415d84:	add    al,0xb9
  415d86:	pop    esi
  415d87:	cli    
  415d88:	pop    esi
  415d89:	shl    DWORD PTR [edi-0x131930f7],1
  415d8f:	lds    eax,FWORD PTR [eax]
  415d91:	outs   dx,BYTE PTR ds:[esi]
  415d92:	push   esp
  415d93:	dec    ecx
  415d94:	neg    DWORD PTR gs:[eax]
  415d97:	lods   eax,DWORD PTR ds:[esi]
  415d98:	es cmp eax,0x8ee9eb33
  415d9e:	jg     0x415df9
  415da0:	loop   0x415e09
  415da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415da3:	icebp  
  415da4:	cs mov cl,0x86
  415da7:	pop    esp
  415da8:	jg     0x415db2
  415daa:	fstp   TBYTE PTR [ebx+0x672a6963]
  415db0:	adc    DWORD PTR [ebp+0x1728b2c0],edx
  415db6:	je     0x415e09
  415db8:	jl     0x415e24
  415dba:	loope  0x415df9
  415dbc:	(bad)  
  415dbd:	dec    ebp
  415dbe:	mov    ah,0x5b
  415dc0:	and    al,BYTE PTR ds:0xfed69d7d
  415dc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dc7:	dec    esp
  415dc8:	cmp    eax,0xd28b3a84
  415dcd:	mov    ebp,0x1f830909
  415dd2:	or     dl,BYTE PTR [esi+eax*2-0x61]
  415dd6:	sub    al,0x3
  415dd8:	push   esi
  415dd9:	xor    BYTE PTR [edi+0x640c47d4],bh
  415ddf:	push   0x4f59f97e
  415de4:	inc    edx
  415de5:	popa   
  415de6:	icebp  
  415de7:	lahf   
  415de8:	cmp    eax,0x8fe38663
  415ded:	mov    ah,0x42
  415def:	aas    
  415df0:	mov    al,BYTE PTR [ecx+edx*2+0x5c3a6410]
  415df7:	cmp    ecx,DWORD PTR [edi+esi*8-0x447b0957]
  415dfe:	xor    BYTE PTR [ebx],dh
  415e00:	xor    BYTE PTR [ecx],ch
  415e02:	into   
  415e03:	cdq    
  415e04:	jle    0x415e0f
  415e06:	sbb    eax,0x54e818a0
  415e0b:	mov    bl,0xb2
  415e0d:	mov    ebx,0x3b5ca009
  415e12:	aaa    
  415e13:	mov    dl,0x8f
  415e15:	jnp    0x415de1
  415e17:	lock mov bh,0x7b
  415e1a:	dec    esp
  415e1b:	scas   eax,DWORD PTR es:[edi]
  415e1c:	js     0x415e6e
  415e1e:	mov    ebp,0x88bc906
  415e23:	xchg   edx,eax
  415e24:	(bad)  
  415e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e26:	adc    DWORD PTR [edx],ebp
  415e28:	int    0x9e
  415e2a:	clc    
  415e2b:	adc    eax,0x1268b141
  415e30:	xor    eax,0x73b1df9b
  415e35:	add    ecx,DWORD PTR ds:0xa7f5765d
  415e3b:	inc    esi
  415e3c:	stos   BYTE PTR es:[edi],al
  415e3d:	stos   BYTE PTR es:[edi],al
  415e3e:	lock add al,0xb1
  415e41:	and    ebx,esi
  415e43:	xchg   ebx,eax
  415e44:	inc    edi
  415e45:	push   ebx
  415e46:	ss jns 0x415e30
  415e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e4a:	add    esp,DWORD PTR [ecx-0x31]
  415e4d:	pop    ebp
  415e4e:	cwde   
  415e4f:	jp     0x415dd7
  415e51:	fdivrp st(3),st
  415e53:	push   ds
  415e54:	pop    ebp
  415e55:	sub    bh,BYTE PTR [edi]
  415e57:	and    DWORD PTR [esi-0x53],ebx
  415e5a:	adc    al,0xb6
  415e5c:	call   0x126b6443
  415e61:	mov    dl,0x93
  415e63:	rcr    DWORD PTR [eax+0x1e537d27],1
  415e69:	sub    ah,BYTE PTR [ecx+0xa]
  415e6c:	adc    BYTE PTR [esi],al
  415e6e:	ss inc ebx
  415e70:	dec    eax
  415e71:	in     al,dx
  415e72:	ds popf 
  415e74:	pop    ds
  415e75:	xchg   ecx,eax
  415e76:	and    DWORD PTR [esi],esi
  415e78:	outs   dx,DWORD PTR ds:[esi]
  415e79:	push   eax
  415e7a:	jo     0x415e5e
  415e7c:	jnp    0x415dfe
  415e7e:	xchg   esi,eax
  415e7f:	cmp    esp,DWORD PTR [ebx]
  415e81:	dec    ebx
  415e82:	cld    
  415e83:	push   ds
  415e84:	repz dec eax
  415e86:	sub    dh,bh
  415e88:	ins    BYTE PTR es:[edi],dx
  415e89:	imul   esi
  415e8b:	or     edx,edi
  415e8d:	loope  0x415e71
  415e8f:	nop
  415e90:	scas   eax,DWORD PTR es:[edi]
  415e91:	stc    
  415e92:	sub    BYTE PTR [ebx+0x2b6b15e3],0x1b
  415e99:	adc    ebp,DWORD PTR [edi-0x1e]
  415e9c:	outs   dx,BYTE PTR ds:[esi]
  415e9d:	or     DWORD PTR gs:[esi],edi
  415ea0:	cmp    DWORD PTR [ebx+esi*4+0x45],ebx
  415ea4:	in     al,dx
  415ea5:	push   esp
  415ea6:	xor    edx,DWORD PTR [ebp+0x4dec33e8]
  415eac:	jnp    0x415f01
  415eae:	jg     0x415ee4
  415eb0:	lds    esp,FWORD PTR [esp+ecx*1+0x629f88d2]
  415eb7:	(bad)  
  415eb8:	xor    BYTE PTR [ecx-0x12],dl
  415ebb:	sub    dh,BYTE PTR [eiz*1-0xa2717fd]
  415ec2:	aas    
  415ec3:	lea    esi,[eax+0x67]
  415ec6:	(bad)  
  415ec7:	mov    ebp,0x395d629
  415ecc:	add    al,0x70
  415ece:	push   cs
  415ecf:	dec    esp
  415ed0:	mov    ds:0xce746572,al
  415ed5:	jge    0x415f04
  415ed7:	cmp    ah,BYTE PTR [esi+0x12fc2f36]
  415edd:	popf   
  415ede:	fwait
  415edf:	test   BYTE PTR [edx],0x4a
  415ee2:	mov    DWORD PTR [eax],0x9e551e89
  415ee8:	xchg   esp,eax
  415ee9:	rcr    BYTE PTR [edi-0x3ffdfa9f],cl
  415eef:	cdq    
  415ef0:	stos   BYTE PTR es:[edi],al
  415ef1:	cmp    DWORD PTR [eax-0x27],eax
  415ef4:	and    cl,0xae
  415ef7:	sub    BYTE PTR ds:0xc9152c0d,bh
  415efd:	mov    dh,BYTE PTR [ecx+0x64]
  415f00:	jl     0x415ed5
  415f02:	and    eax,0xfb951aa3
  415f07:	(bad)  
  415f08:	jb     0x415f88
  415f0a:	mov    cl,0xa2
  415f0c:	call   0x51dde65d
  415f11:	xor    esp,edx
  415f13:	into   
  415f14:	bound  ebx,QWORD PTR [esi+0x2da0b59b]
  415f1a:	test   DWORD PTR [eax-0x3b],edi
  415f1d:	fisubr WORD PTR es:[esi+0x1f]
  415f21:	retf   0x9475
  415f24:	or     dl,bl
  415f26:	mov    ebp,0x6dfb318e
  415f2b:	loope  0x415f7e
  415f2d:	mov    esi,0xe6cd5cd
  415f32:	adc    BYTE PTR [eax+0x4],dl
  415f35:	retf   0xfd3b
  415f38:	aam    0x22
  415f3a:	(bad)  
  415f3b:	jmp    0xb4dbcefa
  415f40:	loope  0x415f50
  415f42:	idiv   DWORD PTR [ecx+eiz*1]
  415f45:	cli    
  415f46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f47:	fdivp  st(7),st
  415f49:	in     al,0x47
  415f4b:	ds ins BYTE PTR es:[edi],dx
  415f4d:	ds inc edx
  415f4f:	mov    eax,0xd4e86bc9
  415f54:	push   0xffffff98
  415f56:	sub    eax,0x407c96ac
  415f5b:	pop    edx
  415f5c:	fdiv   DWORD PTR [ebx]
  415f5e:	xchg   ebx,eax
  415f5f:	or     al,0x1e
  415f61:	fwait
  415f62:	xchg   ebx,eax
  415f63:	push   ebp
  415f64:	sbb    al,BYTE PTR [ecx+0x3d]
  415f67:	xchg   DWORD PTR [ecx-0x79d5795d],esp
  415f6d:	mov    edi,0x8fd04e0
  415f72:	mov    ah,0xc6
  415f74:	mov    WORD PTR [edx],ss
  415f76:	lods   eax,DWORD PTR ds:[esi]
  415f77:	and    edx,ebx
  415f79:	cwde   
  415f7a:	daa    
  415f7b:	push   esp
  415f7c:	and    BYTE PTR [esp+edx*8-0x42],dh
  415f80:	mov    cl,0x7
  415f82:	adc    edx,DWORD PTR fs:[eax-0x2e]
  415f86:	into   
  415f87:	inc    edx
  415f88:	(bad)  
  415f89:	dec    esi
  415f8a:	pop    es
  415f8b:	pusha  
  415f8c:	cmp    DWORD PTR es:[ebp+0xe726ee0],edi
  415f93:	iret   
  415f94:	or     eax,0x6c97985e
  415f99:	inc    ebp
  415f9a:	popa   
  415f9b:	mov    bl,0xff
  415f9d:	icebp  
  415f9e:	dec    ebx
  415f9f:	es stos DWORD PTR es:[edi],eax
  415fa1:	je     0x415fc3
  415fa3:	sub    ch,al
  415fa5:	sbb    al,0xc4
  415fa7:	mov    eax,0x9e2706e3
  415fac:	and    ebp,DWORD PTR [esi+0x687b142]
  415fb2:	jl     0x415f4f
  415fb4:	dec    ebx
  415fb5:	outs   dx,BYTE PTR ds:[esi]
  415fb6:	and    eax,0xfcc26e57
  415fbb:	mov    dh,0x14
  415fbd:	sar    DWORD PTR [edx-0x20],cl
  415fc0:	(bad)  
  415fc1:	cli    
  415fc2:	nop
  415fc3:	pop    ecx
  415fc4:	lods   eax,DWORD PTR ds:[esi]
  415fc5:	mov    ah,0x66
  415fc7:	shl    DWORD PTR [esi],cl
  415fc9:	das    
  415fca:	cmp    eax,DWORD PTR [ecx+0x1ac60df6]
  415fd0:	xchg   esi,eax
  415fd1:	adc    ah,BYTE PTR [edx+eiz*2+0x33]
  415fd5:	push   ecx
  415fd6:	sar    esi,1
  415fd8:	dec    ebx
  415fd9:	clc    
  415fda:	and    al,0x6a
  415fdc:	sbb    edi,DWORD PTR [ebx+0x67b3d787]
  415fe2:	push   0x9
  415fe4:	jno    0x415fb8
  415fe6:	(bad)
  415fe9:	cmp    ecx,esp
  415feb:	dec    eax
  415fec:	xchg   ecx,eax
  415fed:	dec    edi
  415fee:	jae    0x416034
  415ff0:	ja     0x41603c
  415ff2:	sub    BYTE PTR [ebp+eax*2+0x43],ah
  415ff6:	shl    cl,cl
  415ff8:	add    DWORD PTR [esi],0x42
  415ffb:	pop    edi
  415ffc:	dec    esi
  415ffd:	xor    eax,DWORD PTR [eax+0x68]
  416000:	jg     0x416013
  416002:	pop    eax
  416003:	xchg   ecx,eax
  416004:	mov    edx,0x64afd21b
  416009:	clc    
  41600a:	stos   BYTE PTR es:[edi],al
  41600b:	neg    DWORD PTR ds:[edx]
  41600e:	hlt    
  41600f:	bound  ebx,QWORD PTR [eax+0x3a2e62ef]
  416015:	shr    ebp,0xfe
  416018:	into   
  416019:	iret   
  41601a:	inc    esi
  41601b:	adc    BYTE PTR [edx+0x10],dl
  41601e:	mov    dl,0xd6
  416020:	jbe    0x416023
  416022:	add    cl,BYTE PTR [edx+0x1648003e]
  416028:	pop    edx
  416029:	jbe    0x41609a
  41602b:	int    0x36
  41602d:	bound  ebx,QWORD PTR [ebx]
  41602f:	pop    ebp
  416030:	fld    TBYTE PTR [esi]
  416032:	xchg   esp,eax
  416033:	pusha  
  416034:	ins    DWORD PTR es:[edi],dx
  416035:	jo     0x41609b
  416037:	cmc    
  416038:	jp     0x415fe5
  41603a:	xchg   edi,eax
  41603b:	add    esp,edi
  41603d:	fadd   DWORD PTR [eax+eiz*2-0x20]
  416041:	ja     0x41604e
  416043:	pop    esi
  416044:	push   edi
  416045:	js     0x41609a
  416047:	push   ecx
  416048:	jp     0x41601e
  41604a:	aaa    
  41604b:	and    al,0x7
  41604d:	sbb    esp,DWORD PTR [edx]
  41604f:	add    BYTE PTR [eax],al
  416051:	add    BYTE PTR [edx],bh
  416053:	jne    0x416091
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x416090
  41605f:	mov    esi,0xde6349cd
  416064:	add    BYTE PTR [eax],al
  416066:	cmc    
  416067:	add    al,0x0
  416069:	add    ch,bh
  41606b:	lahf   
  41606c:	xchg   esp,eax
  41606d:	dec    esi
  41606e:	ja     0x4160ca
  416070:	out    dx,eax
  416071:	pop    ebx
  416072:	repnz arpl cx,sp
  416075:	sbb    eax,0x42bb72a5
  41607a:	mov    cl,0x9b
  41607c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41607d:	jo     0x41608c
  41607f:	lods   eax,DWORD PTR ds:[esi]
  416080:	pusha  
  416081:	dec    edi
  416082:	cwde   
  416083:	ret    0xb7e2
  416086:	nop
  416087:	out    0x4a,al
  416089:	xor    eax,DWORD PTR [esi]
  41608b:	cmp    cl,bl
  41608d:	or     DWORD PTR [edi],0x5152e52f
  416093:	mov    esp,eax
  416095:	lahf   
  416096:	xor    al,0x2d
  416098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416099:	push   ds
  41609a:	dec    eax
  41609b:	fcom   QWORD PTR [ebx-0x10ce6cff]
  4160a1:	(bad)  
  4160a2:	stos   BYTE PTR es:[edi],al
  4160a3:	add    ebx,ebp
  4160a5:	xchg   edi,eax
  4160a6:	or     dl,BYTE PTR [ecx+0x9]
  4160a9:	mov    dh,0xb5
  4160ab:	mov    esp,DWORD PTR [ebp-0x2f]
  4160ae:	push   edi
  4160af:	push   esi
  4160b0:	push   cs
  4160b1:	iret   
  4160b2:	dec    eax
  4160b3:	and    al,0x99
  4160b5:	mov    al,0xdb
  4160b7:	push   ecx
  4160b8:	aam    0xf7
  4160ba:	stos   BYTE PTR es:[edi],al
  4160bb:	jnp    0x41607e
  4160bd:	inc    edi
  4160be:	and    DWORD PTR [esi],0x7875ec5d
  4160c4:	pop    ds
  4160c5:	int    0xab
  4160c7:	dec    ebp
  4160c8:	dec    edi
  4160c9:	in     eax,dx
  4160ca:	or     al,0xb0
  4160cc:	iret   
  4160cd:	mov    WORD PTR [ecx],?
  4160cf:	aad    0xe9
  4160d1:	jb     0x416059
  4160d3:	aam    0xc0
  4160d5:	call   DWORD PTR [ebp-0x1d620ba]
  4160db:	iret   
  4160dc:	jle    0x41614f
  4160de:	mov    ah,0xa5
  4160e0:	out    0x43,al
  4160e2:	cmp    al,0xc0
  4160e4:	addr16 iret 
  4160e6:	or     eax,0x24a8165d
  4160eb:	(bad)  [ecx-0x74650ff]
  4160f1:	pop    ebp
  4160f2:	and    BYTE PTR [eax*2+0x2eaad26b],dh
  4160f9:	les    edx,FWORD PTR [esi+esi*4]
  4160fc:	mov    esp,0x8d07f730
  416101:	mov    cl,0xf0
  416103:	call   0xc78a:0x5476297b
  41610a:	xor    eax,0x2e7214d1
  41610f:	mov    edx,0xeb77334b
  416114:	and    esp,DWORD PTR [edi+0x2f689af5]
  41611a:	jecxz  0x416180
  41611c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41611d:	add    dl,BYTE PTR [ecx]
  41611f:	icebp  
  416120:	fsubr  DWORD PTR [edi-0xb]
  416123:	mov    dl,0x13
  416125:	cs loop 0x41613e
  416128:	iret   
  416129:	push   edi
  41612a:	outs   dx,BYTE PTR ds:[esi]
  41612b:	shl    esi,cl
  41612d:	mov    dh,0x6b
  41612f:	pop    ecx
  416130:	pop    esi
  416131:	mov    esp,0x5d5396d9
  416136:	mov    BYTE PTR [edi],ch
  416138:	sub    BYTE PTR [eax],0xc2
  41613b:	sbb    DWORD PTR [esi-0xc],esp
  41613e:	aaa    
  41613f:	idiv   eax
  416141:	xor    eax,0xaa572a66
  416146:	jmp    0x41619a
  416148:	jb     0x4160df
  41614a:	mov    bh,al
  41614c:	xchg   ecx,eax
  41614d:	lods   eax,DWORD PTR ds:[esi]
  41614f:	adc    al,bl
  416151:	popf   
  416152:	loop   0x4161b5
  416154:	add    al,0x9
  416156:	fist   DWORD PTR ds:0xf17cf54f
  41615c:	cdq    
  41615d:	fidivr DWORD PTR [edx+0x4d84776a]
  416163:	call   0x6a063c2c
  416168:	js     0x416159
  41616a:	mov    dh,0x4
  41616c:	xchg   ebx,eax
  41616d:	ror    BYTE PTR [ebp+0x68],0x6f
  416171:	or     al,0xa0
  416173:	gs push edi
  416175:	push   edx
  416176:	xchg   DWORD PTR [ebx-0x2d4dd404],esp
  41617c:	xchg   ebp,ebp
  41617e:	adc    al,0x56
  416180:	xor    BYTE PTR [ebx+0x88cadf3],0x46
  416187:	xchg   ebp,eax
  416188:	sar    BYTE PTR [edx-0x10],cl
  41618b:	popa   
  41618c:	cwde   
  41618d:	mov    eax,0x87221f3a
  416192:	and    BYTE PTR [edi+0x2d],0x5a
  416196:	fild   DWORD PTR [ebp-0x4885a2c]
  41619c:	scas   al,BYTE PTR es:[edi]
  41619d:	(bad)  
  41619e:	sar    BYTE PTR [edx+ebp*2],1
  4161a1:	xchg   esi,eax
  4161a2:	hlt    
  4161a3:	out    0xc,al
  4161a5:	ins    DWORD PTR es:[edi],dx
  4161a6:	out    dx,al
  4161a7:	jae    0x41612c
  4161a9:	popf   
  4161aa:	push   es
  4161ab:	mov    esi,0x9c408d96
  4161b0:	popa   
  4161b1:	shl    DWORD PTR [ecx],1
  4161b3:	xchg   ecx,eax
  4161b4:	mov    edx,0x5574d938
  4161b9:	daa    
  4161ba:	test   DWORD PTR [ebx-0x66e4091e],esi
  4161c0:	ficom  DWORD PTR [ebx+eax*4]
  4161c3:	clc    
  4161c4:	(bad)  
  4161c5:	ins    BYTE PTR es:[edi],dx
  4161c6:	jecxz  0x4161f7
  4161c8:	shl    BYTE PTR [edx-0x5c],0xfc
  4161cc:	div    DWORD PTR [esi+ebx*2]
  4161cf:	fisttp QWORD PTR [ebp+0x61]
  4161d2:	cli    
  4161d3:	inc    edi
  4161d4:	sbb    cl,dl
  4161d6:	loope  0x416184
  4161d8:	js     0x4161c5
  4161da:	xchg   ebp,eax
  4161db:	mov    dh,0x52
  4161dd:	fiadd  WORD PTR [ecx-0x5d2b6875]
  4161e3:	adc    al,BYTE PTR [ecx-0x4b]
  4161e6:	pop    edi
  4161e7:	mov    esi,0x7fd6d876
  4161ec:	mov    ds:0x9d29bc76,eax
  4161f1:	adc    DWORD PTR [eax+0x58486d1d],ebp
  4161f7:	adc    ebx,DWORD PTR [edx-0x29]
  4161fa:	fs aaa 
  4161fc:	adc    DWORD PTR [ebx-0x3a4e0265],ebp
  416202:	jl     0x4161ed
  416204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416205:	push   esi
  416206:	imul   ebx,DWORD PTR [edi+0x32559741],0xfffffff3
  41620d:	mov    ebx,0x674296f6
  416212:	aas    
  416213:	pop    ss
  416214:	add    eax,0xc7996665
  416219:	jmp    0x22d7b99f
  41621e:	cmp    DWORD PTR [esp+ebp*2-0x62],ebx
  416222:	xchg   esp,eax
  416223:	data16 test BYTE PTR [edx-0x7127d6bd],bl
  41622a:	inc    ecx
  41622b:	jge    0x41628e
  41622d:	arpl   WORD PTR [eax],bx
  41622f:	pop    ebp
  416230:	mov    bl,0x7d
  416232:	fdivp  st(7),st
  416234:	push   0x3d54127e
  416239:	sbb    al,0x4b
  41623b:	mov    bh,0x28
  41623d:	xor    DWORD PTR [esi+0x22094427],ecx
  416243:	(bad)  
  416244:	dec    esi
  416245:	not    BYTE PTR [edx-0x648a61be]
  41624b:	pop    edx
  41624c:	fptan  
  41624e:	inc    BYTE PTR [esi-0x25]
  416251:	adc    bh,BYTE PTR [ebx+0x4c]
  416254:	inc    edx
  416255:	push   edi
  416256:	mov    ebx,0x7fd57898
  41625b:	les    edx,FWORD PTR [ebp-0x78]
  41625e:	cmp    BYTE PTR [ebx-0x3218bb16],0x21
  416265:	mov    esi,0xd8049192
  41626a:	jne    0x4162aa
  41626c:	lods   al,BYTE PTR ds:[esi]
  41626d:	pusha  
  41626e:	cmp    DWORD PTR [edx-0x3b],ebp
  416271:	add    bh,ah
  416273:	dec    ebp
  416274:	repz std 
  416276:	sub    esp,DWORD PTR ds:0xc73bdee8
  41627c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41627e:	bound  edx,QWORD PTR [esi-0x587faca0]
  416284:	outs   dx,DWORD PTR ds:[esi]
  416285:	push   esi
  416286:	leave  
  416287:	pop    edx
  416288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416289:	inc    edx
  41628a:	xchg   esp,eax
  41628b:	test   DWORD PTR [ebp+ebx*2-0x70],eax
  41628f:	std    
  416290:	inc    edx
  416291:	jecxz  0x4162f7
  416293:	mov    esi,0xab29b45d
  416298:	call   0xf848:0x685e4244
  41629f:	sbb    al,0x7c
  4162a1:	add    esp,esp
  4162a3:	inc    esp
  4162a4:	or     ebp,0x8b42bf7f
  4162aa:	pop    edx
  4162ab:	lea    esp,ds:0x85e9907e
  4162b1:	repz adc cl,BYTE PTR [esi+0x73]
  4162b5:	popf   
  4162b6:	jl     0x4162cf
  4162b8:	cmp    ebx,DWORD PTR ds:0x5f983138
  4162be:	repz cwde 
  4162c0:	pusha  
  4162c1:	jmp    0x416313
  4162c3:	mov    DWORD PTR [edx+eax*8],esi
  4162c6:	(bad)  
  4162c7:	stc    
  4162c8:	mov    ebx,0xd2e3efbc
  4162cd:	cdq    
  4162ce:	xor    BYTE PTR [edi+0x4b],ah
  4162d1:	push   esp
  4162d2:	pop    esi
  4162d3:	fist   WORD PTR ds:0xe8a07ccd
  4162d9:	xor    edx,ecx
  4162db:	xchg   esi,eax
  4162dc:	fdiv   DWORD PTR [ecx+0x33]
  4162df:	call   0xf6df1e3c
  4162e4:	dec    edi
  4162e5:	icebp  
  4162e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162e7:	mov    ebx,0x4925eb1f
  4162ec:	mov    dl,0xa6
  4162ee:	lods   eax,DWORD PTR ds:[esi]
  4162ef:	jecxz  0x416301
  4162f1:	mov    esp,0x5cfff847
  4162f6:	pop    es
  4162f7:	rcl    DWORD PTR [ecx+eiz*4],0x3
  4162fb:	jo     0x416310
  4162fd:	push   ds
  4162fe:	ret    0xbf17
  416301:	push   esi
  416302:	cmp    al,0x34
  416305:	push   cs
  416306:	lahf   
  416307:	xor    BYTE PTR [ebx+0x6d],0x1e
  41630b:	rcr    DWORD PTR [edi-0x17],0xf4
  41630f:	pop    ebx
  416310:	jmp    0xae06:0xaa9c35fb
  416317:	jns    0x41632d
  416319:	icebp  
  41631a:	fwait
  41631b:	sbb    al,bh
  41631d:	pop    esp
  41631e:	sbb    eax,0xe092d4ec
  416323:	push   esp
  416324:	pusha  
  416325:	shr    DWORD PTR [ecx+0x56635204],0x19
  41632c:	popa   
  41632d:	inc    edi
  41632e:	aad    0xf1
  416330:	stc    
  416331:	shld   DWORD PTR [eax+0x54],eax,0x87
  416336:	(bad)  
  416337:	cld    
  416338:	into   
  416339:	jnp    0x41637e
  41633b:	or     DWORD PTR [esp+ebp*4+0x39],ebp
  41633f:	inc    ebx
  416340:	dec    ebx
  416341:	sahf   
  416342:	in     eax,0xb8
  416344:	adc    DWORD PTR [eax-0x506ef2d5],0x17
  41634b:	or     DWORD PTR [esi+ebp*8+0x297eb655],ebx
  416352:	push   edi
  416353:	fstp   QWORD PTR [ebp-0xb65fb90]
  416359:	inc    edi
  41635a:	xchg   DWORD PTR [esi+eax*4-0x1db6d6a0],esi
  416361:	jp     0x4163de
  416363:	sub    ah,BYTE PTR [eax+0x45b41d74]
  416369:	cmp    ebp,DWORD PTR [ebx+0x382e362c]
  41636f:	pop    ecx
  416370:	lahf   
  416371:	sub    ch,BYTE PTR [edi-0x6bf85317]
  416377:	mov    dl,0x4
  416379:	fdiv   QWORD PTR [ecx+edi*4]
  41637c:	pop    ds
  41637d:	(bad)  
  41637f:	push   ecx
  416380:	idiv   DWORD PTR [eax+0x7a]
  416383:	sub    ebx,DWORD PTR [eax+0x45]
  416386:	or     dh,BYTE PTR [eax+0x22fbf5bc]
  41638c:	xor    eax,0x2eb542f7
  416391:	in     eax,dx
  416392:	in     eax,0x9d
  416394:	int    0x50
  416396:	clc    
  416397:	jge    0x4163dc
  416399:	xchg   DWORD PTR [ecx+0x665c8806],edi
  41639f:	pop    DWORD PTR [esi+0x4eba09b1]
  4163a5:	adc    eax,0xee5c7658
  4163aa:	ret    
  4163ab:	les    edi,FWORD PTR [ebx+0x8]
  4163ae:	div    bh
  4163b0:	mov    eax,0x97f59ec8
  4163b5:	cmc    
  4163b6:	int    0x51
  4163b8:	mov    esp,0x6f175ef6
  4163bd:	cmp    ebp,DWORD PTR [ebp+ecx*4+0x37]
  4163c1:	dec    edi
  4163c2:	add    al,0xc3
  4163c4:	xchg   DWORD PTR [ecx],edx
  4163c6:	mov    dl,0x54
  4163c8:	cmp    ah,BYTE PTR [ecx+edi*4]
  4163cb:	(bad)  
  4163cd:	iret   
  4163ce:	mov    ch,0x5a
  4163d0:	sub    ecx,DWORD PTR [esi-0x19]
  4163d3:	push   eax
  4163d4:	pop    ebx
  4163d5:	xor    al,0x71
  4163d7:	ss retf 
  4163d9:	jb     0x4163c1
  4163db:	lods   eax,DWORD PTR ds:[esi]
  4163dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163de:	mov    eax,ds:0x363f2639
  4163e3:	inc    edx
  4163e4:	xor    edi,DWORD PTR [esi]
  4163e6:	addr16 mov esp,0x8d5c25ba
  4163ec:	push   cs
  4163ed:	pop    edi
  4163ee:	loopne 0x4163f3
  4163f0:	mov    al,BYTE PTR [esi-0x78b69b15]
  4163f6:	pop    ss
  4163f7:	pop    ebx
  4163f8:	add    ah,BYTE PTR [ebx]
  4163fa:	dec    eax
  4163fb:	lea    edi,[ebp+0x257f5075]
  416401:	dec    ecx
  416402:	pop    edi
  416403:	in     eax,dx
  416404:	inc    esi
  416405:	lahf   
  416406:	pop    ss
  416407:	xor    BYTE PTR [ecx-0x5f],ch
  41640a:	cdq    
  41640b:	(bad)  
  41640c:	mov    esi,0xb369b9f8
  416411:	push   esi
  416412:	push   ss
  416413:	sub    ebp,DWORD PTR [eax-0x20]
  416416:	stc    
  416417:	add    edx,DWORD PTR [eax-0x67]
  41641a:	inc    edx
  41641b:	xchg   esi,eax
  41641c:	enter  0xaf38,0x79
  416420:	in     eax,dx
  416421:	ss xchg cl,bh
  416424:	jnp    0x416439
  416426:	(bad)  
  416427:	out    0x5e,eax
  416429:	dec    eax
  41642a:	das    
  41642b:	jmp    0x8de9cd86
  416430:	fwait
  416431:	jl     0x416451
  416433:	jb     0x41645b
  416435:	mov    esp,0xe10149b
  41643a:	push   0x5
  41643c:	imul   edx,eax,0x49d4cf95
  416442:	or     ah,ah
  416444:	cmp    eax,0x7f12873e
  416449:	cmp    eax,0xccd19a62
  41644e:	cmp    al,0x3b
  416450:	cmp    ch,0xd1
  416453:	(bad)  
  416454:	lds    edx,FWORD PTR [ebx-0x1f]
  416457:	adc    al,0x42
  416459:	out    dx,al
  41645a:	int3   
  41645b:	push   esi
  41645c:	jo     0x416487
  41645e:	xor    esi,DWORD PTR [edi-0x46]
  416461:	add    al,0x90
  416463:	loope  0x4164da
  416465:	xchg   BYTE PTR [eax],al
  416467:	pop    eax
  416468:	push   es
  416469:	and    bh,0x32
  41646c:	iret   
  41646d:	pop    es
  41646e:	out    dx,al
  41646f:	push   eax
  416470:	push   ebp
  416471:	mov    eax,ds:0x34c2aecc
  416476:	cmp    DWORD PTR [ebx],ebx
  416478:	sbb    eax,0xd049cf96
  41647d:	add    al,dl
  41647f:	lods   eax,DWORD PTR ds:[esi]
  416480:	(bad)  
  416482:	cli    
  416483:	int3   
  416484:	adc    edx,DWORD PTR [esp+ebp*1]
  416487:	out    0xd0,eax
  416489:	mov    bl,0x3a
  41648b:	push   eax
  41648c:	mov    edi,0xdb8da444
  416491:	cdq    
  416492:	repnz push esi
  416494:	(bad)  
  416495:	fisubr WORD PTR [edi+0xb]
  416498:	adc    bl,BYTE PTR [ebp-0x11]
  41649b:	push   0xffffffa9
  41649d:	push   edx
  41649e:	jle    0x4164ed
  4164a0:	and    DWORD PTR [ebx-0x26],esp
  4164a3:	mov    ebp,0x88dc90eb
  4164a8:	push   edi
  4164a9:	je     0x4164d0
  4164ab:	jmp    0x41644b
  4164ad:	test   DWORD PTR [edi+ecx*4+0x29018a63],ebx
  4164b4:	add    DWORD PTR [ecx+0x25f372d9],eax
  4164ba:	aam    0x2f
  4164bc:	jecxz  0x416483
  4164be:	test   DWORD PTR [ecx],ebp
  4164c0:	push   0x858915c5
  4164c5:	cs and al,0xac
  4164c8:	repnz add BYTE PTR [esi-0x7db0109e],al
  4164cf:	(bad)  
  4164d0:	jae    0x41650a
  4164d2:	jmp    FWORD PTR [ebx+esi*1+0x54194498]
  4164d9:	push   edi
  4164da:	dec    edi
  4164db:	loop   0x416529
  4164dd:	push   es
  4164de:	jle    0x416541
  4164e0:	test   al,0x34
  4164e2:	or     bl,BYTE PTR [eax+ebx*1-0x3f]
  4164e6:	jle    0x41648b
  4164e8:	add    al,BYTE PTR [eax]
  4164ea:	addr16 and bh,ch
  4164ed:	ss not esi
  4164f0:	sbb    al,0x9
  4164f2:	fadd   DWORD PTR [esi-0x1fc3be8c]
  4164f8:	inc    eax
  4164f9:	call   0xd1f4555b
  4164fe:	adc    eax,0xe45565e2
  416503:	ficom  DWORD PTR [edx]
  416505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416506:	xchg   edi,eax
  416507:	pop    ebp
  416508:	das    
  416509:	mov    ds:0x42184762,al
  41650e:	dec    edx
  41650f:	xchg   edx,eax
  416510:	mov    ?,WORD PTR [eax]
  416512:	jecxz  0x416531
  416514:	mov    al,ds:0xaae7ecb9
  416519:	xor    eax,0xb9e29126
  41651e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41651f:	mov    ecx,0x31dca7f3
  416524:	adc    DWORD PTR [ecx+ecx*4+0x60],0x21c9c85f
  41652c:	repnz pop ebp
  41652e:	cdq    
  41652f:	inc    ebp
  416530:	in     eax,0x3e
  416532:	ds pop esi
  416534:	cdq    
  416535:	or     BYTE PTR [eax+0x5d],al
  416538:	int    0xf1
  41653a:	push   esi
  41653b:	dec    ecx
  41653c:	sub    edx,DWORD PTR [ebp+eax*1-0x64163eae]
  416543:	jnp    0x416539
  416545:	popf   
  416546:	inc    ebx
  416547:	pusha  
  416548:	xchg   ebp,eax
  416549:	pop    edx
  41654a:	sub    ecx,DWORD PTR [ecx-0x51]
  41654d:	or     edx,DWORD PTR [edx+0x61]
  416550:	dec    ebp
  416551:	rcr    BYTE PTR [eax-0xb8b9c00],0xe1
  416558:	scas   al,BYTE PTR es:[edi]
  416559:	test   al,0x9f
  41655b:	pusha  
  41655c:	jo     0x416520
  41655e:	stos   DWORD PTR es:[edi],eax
  41655f:	add    BYTE PTR [eax],al
  416561:	add    al,bh
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0x5cf1
  41656f:	(bad)  
  416571:	rcr    DWORD PTR [eax-0x1d],0x0
  416575:	add    ch,dh
  416577:	add    al,0x0
  416579:	add    BYTE PTR [ebx+0x41],bh
  41657c:	jg     0x416564
  41657e:	(bad)  
  41657f:	out    dx,al
  416580:	dec    edi
  416581:	fdivr  DWORD PTR [ecx]
  416583:	sbb    bh,dl
  416585:	fild   QWORD PTR [ecx+0x56]
  416588:	pop    eax
  416589:	cmp    esp,DWORD PTR [ebp-0x75]
  41658c:	mov    bh,0x30
  41658e:	push   edx
  41658f:	push   cs
  416590:	push   ds
  416591:	std    
  416592:	jecxz  0x4165e3
  416594:	sub    ebx,DWORD PTR [edi]
  416596:	inc    ecx
  416597:	rcr    ah,1
  416599:	jbe    0x416532
  41659b:	ret    0x1834
  41659e:	cmc    
  41659f:	lods   eax,DWORD PTR ds:[esi]
  4165a0:	push   esi
  4165a1:	jge    0x4165f1
  4165a3:	xchg   BYTE PTR [ecx-0x30],ch
  4165a6:	fisttp QWORD PTR [ebp+eax*1-0x66d520a5]
  4165ad:	and    al,0x7d
  4165af:	mov    cl,0xfe
  4165b1:	jmp    0x416552
  4165b3:	inc    ebp
  4165b4:	xor    ah,BYTE PTR [edx]
  4165b6:	jbe    0x41653b
  4165b8:	fdiv   QWORD PTR [edx-0x1767f289]
  4165be:	je     0x4165b1
  4165c0:	(bad)  
  4165c1:	cs (bad) 
  4165c3:	call   0xc25a:0xb0b74e4e
  4165ca:	or     eax,esp
  4165cc:	mov    DWORD PTR [edi+0x7f],ebx
  4165cf:	sbb    al,0xc3
  4165d1:	xchg   ecx,eax
  4165d2:	hlt    
  4165d3:	jo     0x41664e
  4165d5:	repz sbb al,BYTE PTR [esi+0x4f1c5dd0]
  4165dc:	and    DWORD PTR [eax],eax
  4165de:	leave  
  4165df:	dec    eax
  4165e0:	call   0x8e0c:0xea7519e8
  4165e7:	in     al,0x9d
  4165e9:	repz mov cl,0xcd
  4165ec:	inc    ebp
  4165ed:	test   BYTE PTR ds:0x16e4263b,ah
  4165f3:	mov    eax,0xda390c22
  4165f8:	fwait
  4165f9:	pop    eax
  4165fa:	icebp  
  4165fb:	nop
  4165fc:	sub    eax,0x7270bc47
  416601:	jmp    DWORD PTR [edi-0x6b]
  416604:	jbe    0x4165d5
  416606:	stos   BYTE PTR es:[edi],al
  416607:	lods   al,BYTE PTR ds:[esi]
  416608:	sub    al,0x5f
  41660a:	lahf   
  41660b:	xchg   edi,eax
  41660c:	(bad)  
  41660d:	push   ss
  41660e:	mov    edi,0x566ab5dc
  416613:	xor    ah,dl
  416615:	jmp    FWORD PTR [edx-0x40]
  416618:	inc    BYTE PTR [ebx-0x6c]
  41661b:	sti    
  41661c:	jmp    0x4165d8
  41661e:	popf   
  41661f:	inc    edi
  416620:	nop
  416621:	adc    BYTE PTR [ebp+0x21],0x9f
  416625:	into   
  416626:	cmp    BYTE PTR [ecx-0x41],bh
  416629:	jl     0x41660e
  41662b:	scas   al,BYTE PTR es:[edi]
  41662c:	cmp    dh,BYTE PTR [esi+0x33123787]
  416632:	js     0x4165c1
  416634:	mov    ch,0x7e
  416636:	adc    dl,dh
  416638:	fstp   DWORD PTR [esi]
  41663a:	xor    BYTE PTR [ebp+0x7b],bh
  41663d:	pop    es
  41663e:	in     eax,0xbe
  416640:	add    edi,DWORD PTR [edx-0x40]
  416643:	and    bh,BYTE PTR [ecx+0x6750178]
  416649:	add    ch,BYTE PTR [edi+0x52]
  41664c:	jne    0x416605
  41664e:	repnz scas al,BYTE PTR es:[edi]
  416650:	(bad)  
  416651:	test   eax,0xfffb4137
  416656:	jae    0x4165fe
  416658:	and    esi,DWORD PTR [eax-0x4fc195ef]
  41665e:	pop    esi
  41665f:	push   es
  416660:	pop    esp
  416661:	rcr    BYTE PTR [eax],1
  416663:	xchg   edx,eax
  416664:	cmp    al,0x8d
  416666:	sbb    cl,0x75
  416669:	movups XMMWORD PTR [esi+0x19],xmm7
  41666d:	sbb    ebp,DWORD PTR [ebp+0x6f]
  416670:	push   esi
  416671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416672:	xchg   ebx,eax
  416673:	mov    ch,0x37
  416675:	cdq    
  416676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416677:	add    ax,0xcf58
  41667b:	jecxz  0x41663a
  41667d:	jp     0x416696
  41667f:	push   0xfffffff8
  416681:	aad    0xc7
  416683:	nop
  416684:	sbb    eax,0xe1da27e
  416689:	pop    eax
  41668a:	xchg   BYTE PTR gs:[si+0x3d],dl
  41668f:	retf   0xcb6
  416692:	inc    esp
  416693:	ins    DWORD PTR es:[edi],dx
  416694:	xor    eax,0x9f66f23f
  416699:	jno    0x416646
  41669b:	es jmp 0x23ad:0x19061765
  4166a3:	jno    0x4166eb
  4166a5:	xchg   ch,ah
  4166a7:	into   
  4166a8:	fs xchg ebx,eax
  4166aa:	out    0x98,al
  4166ac:	xchg   bl,bh
  4166ae:	retf   
  4166af:	or     ah,BYTE PTR [ebx+0x624a24e4]
  4166b5:	arpl   WORD PTR [ecx],ax
  4166b7:	std    
  4166b8:	dec    edi
  4166b9:	pushf  
  4166ba:	or     DWORD PTR [ebp*2+0x5d199c7b],0xbbc0b7e6
  4166c5:	pop    ebx
  4166c6:	in     al,dx
  4166c7:	push   es
  4166c8:	dec    edi
  4166c9:	sub    al,0x2d
  4166cb:	aas    
  4166cc:	sub    bl,BYTE PTR [ecx-0x23]
  4166cf:	cmc    
  4166d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166d1:	lods   al,BYTE PTR ds:[esi]
  4166d2:	mov    BYTE PTR [ebx],ah
  4166d4:	sub    ebx,DWORD PTR [eax-0x215d4bd]
  4166da:	adc    eax,0x18c86808
  4166df:	jae    0x416756
  4166e1:	xchg   esi,eax
  4166e2:	push   edx
  4166e3:	xchg   ebp,eax
  4166e4:	inc    eax
  4166e5:	dec    esi
  4166e6:	in     eax,dx
  4166e7:	bound  ebx,QWORD PTR [ebx+0x69d9f31d]
  4166ed:	or     eax,0x991bd208
  4166f2:	repz out 0xaf,eax
  4166f5:	rcl    BYTE PTR [edx],0x3a
  4166f8:	ins    BYTE PTR es:[edi],dx
  4166f9:	rcl    dh,cl
  4166fb:	fwait
  4166fc:	(bad)  
  4166fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166fe:	or     ah,cl
  416700:	retf   0xcfc
  416703:	dec    edi
  416704:	mov    esp,0xc0b3ddac
  416709:	ins    DWORD PTR es:[edi],dx
  41670a:	ror    BYTE PTR cs:[esi],cl
  41670d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41670e:	in     eax,0x9d
  416710:	sub    edi,DWORD PTR [esi+0x40623e0d]
  416716:	leave  
  416717:	push   ds
  416718:	xchg   BYTE PTR [edx+esi*2-0x7041a450],al
  41671f:	aaa    
  416720:	push   edi
  416721:	lahf   
  416722:	jne    0x4166cb
  416724:	mov    bl,0x2
  416726:	mov    edi,0x4ac7ea55
  41672b:	shl    BYTE PTR [ecx+0x23],1
  41672e:	pop    eax
  41672f:	and    ebx,DWORD PTR [ebx-0x7a41210e]
  416735:	push   ds
  416736:	leave  
  416737:	call   0x95ec:0x7072bb7c
  41673e:	or     eax,0xd4037d2a
  416743:	ffree  st(4)
  416745:	pop    esp
  416746:	mov    eax,0x249bd4b2
  41674b:	mov    ebx,0x1670d790
  416750:	clc    
  416751:	div    cl
  416753:	cdq    
  416754:	ret    0xfd46
  416757:	shl    ah,0xaf
  41675a:	(bad)  
  41675b:	pop    esi
  41675c:	fcom   DWORD PTR [edi]
  41675e:	push   0xffffffb5
  416760:	dec    edx
  416761:	in     eax,dx
  416762:	cmp    al,0xd9
  416764:	cmp    ebx,DWORD PTR [eax+0x624cd95b]
  41676a:	test   DWORD PTR [ebx-0x7d41737e],eax
  416770:	adc    bl,cl
  416772:	ret    
  416773:	pop    eax
  416774:	and    DWORD PTR [edi],esp
  416776:	test   dh,dh
  416778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416779:	fwait
  41677a:	add    DWORD PTR [esi],ebx
  41677c:	xchg   ebp,eax
  41677d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41677e:	add    ebx,DWORD PTR [esi]
  416780:	out    dx,eax
  416781:	dec    esp
  416782:	pop    esi
  416783:	(bad)  
  416784:	mov    DWORD PTR [ebx],edi
  416786:	sub    BYTE PTR [edx+0x5e],bl
  416789:	loope  0x416798
  41678b:	sbb    DWORD PTR [ebp-0x124d2ed0],ecx
  416791:	sub    bl,BYTE PTR [esi-0x14b7d86]
  416797:	dec    ebp
  416798:	arpl   WORD PTR [edx-0x4b0f0f6d],sp
  41679e:	mov    BYTE PTR ds:0x22d92c24,al
  4167a4:	xchg   ecx,eax
  4167a5:	gs es sahf 
  4167a8:	jl     0x41674b
  4167aa:	mov    ds:0x3d1f4a62,eax
  4167af:	outs   dx,DWORD PTR ds:[esi]
  4167b0:	fimul  WORD PTR [ebx]
  4167b2:	sub    dl,BYTE PTR [eax+0xc27124d]
  4167b8:	sub    ch,BYTE PTR ds:0x674679e8
  4167be:	icebp  
  4167bf:	imul   esp,esi,0x8
  4167c2:	bound  ecx,QWORD PTR [eax+0x63ce4a6]
  4167c8:	push   ecx
  4167c9:	sub    DWORD PTR [eax-0x5e607f5],esi
  4167cf:	mov    bh,0xd0
  4167d1:	adc    DWORD PTR [edx],edx
  4167d3:	scas   eax,DWORD PTR es:[edi]
  4167d4:	arpl   WORD PTR [edx+edi*2],cx
  4167d7:	dec    ebx
  4167d8:	ss fs aaa 
  4167db:	imul   esi,DWORD PTR [ecx-0x238e9e7a],0x12
  4167e2:	push   edi
  4167e3:	rol    DWORD PTR [edi-0x2652fc22],1
  4167e9:	push   ss
  4167ea:	rol    al,0xb5
  4167ed:	xchg   ebx,eax
  4167ee:	in     al,0x3c
  4167f0:	pushf  
  4167f1:	into   
  4167f2:	jo     0x41686e
  4167f4:	(bad)  
  4167f5:	in     al,dx
  4167f6:	and    cl,BYTE PTR [ecx]
  4167f8:	xor    BYTE PTR [ebx+eiz*1],dh
  4167fb:	das    
  4167fc:	sbb    eax,DWORD PTR [ebx-0x7454188c]
  416802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416803:	gs mov bl,0x8a
  416806:	ins    DWORD PTR es:[edi],dx
  416807:	mov    fs,WORD PTR [esi]
  416809:	jnp    0x4167d0
  41680b:	(bad)  
  41680c:	jge    0x4167c2
  41680e:	cmp    al,0x6
  416810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416811:	and    eax,0xe8fd82a2
  416816:	cmp    eax,0xa9e0aa8b
  41681b:	push   ss
  41681c:	jb     0x416860
  41681e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41681f:	shl    DWORD PTR [edx],cl
  416821:	dec    ebp
  416822:	inc    esp
  416823:	jne    0x4167ec
  416825:	or     ebx,DWORD PTR [eax-0x76a6db94]
  41682b:	sub    eax,0xfb871ef1
  416830:	ret    
  416831:	jae    0x416855
  416833:	stos   BYTE PTR es:[edi],al
  416834:	xor    esi,edx
  416836:	inc    esp
  416837:	repz add eax,0xb62283fb
  41683d:	push   esp
  41683e:	mov    edi,0xe0053d33
  416843:	lods   eax,DWORD PTR ds:[esi]
  416844:	and    eax,0x24bcce2a
  416849:	push   ebp
  41684a:	in     al,0xd
  41684c:	mov    cl,0x4
  41684e:	pusha  
  41684f:	or     bh,BYTE PTR [edx]
  416851:	(bad)  
  416853:	pop    esi
  416854:	cmp    esi,edi
  416856:	inc    edx
  416857:	loope  0x4168d8
  416859:	pop    eax
  41685a:	fstp   DWORD PTR [ecx-0x7f35de0e]
  416860:	es cli 
  416862:	add    BYTE PTR [edx+0x7f77b1dd],0x5
  416869:	popa   
  41686a:	mov    ds:0xe724c4e0,eax
  41686f:	add    bh,bh
  416871:	adc    eax,0x67851d89
  416876:	push   es
  416877:	cmp    al,0xc7
  416879:	cmc    
  41687a:	jl     0x41688b
  41687c:	mov    ebx,0xaac4e5ad
  416881:	jo     0x41689b
  416883:	or     edi,DWORD PTR [ebx-0x742fd5eb]
  416889:	int3   
  41688a:	ja     0x4168a8
  41688c:	lods   eax,DWORD PTR ds:[esi]
  41688d:	and    DWORD PTR [ebx-0x2b],edi
  416890:	push   0xe6620cc7
  416895:	adc    eax,edi
  416897:	jl     0x4168d1
  416899:	shr    edx,1
  41689b:	xchg   DWORD PTR [ebx-0x55e5940e],edi
  4168a1:	sbb    BYTE PTR [ebx],al
  4168a3:	sub    BYTE PTR [eax+0x12],al
  4168a6:	jns    0x41682a
  4168a8:	sub    al,0xa1
  4168aa:	nop
  4168ab:	ins    BYTE PTR es:[edi],dx
  4168ac:	sar    DWORD PTR [edx+0x430733aa],1
  4168b2:	pusha  
  4168b3:	mov    ah,0x4
  4168b5:	inc    esp
  4168b6:	jns    0x41691c
  4168b8:	lea    ebp,[ebx+0x31]
  4168bb:	inc    eax
  4168bc:	sar    ebx,0x73
  4168bf:	aas    
  4168c0:	ins    DWORD PTR es:[edi],dx
  4168c1:	cmp    BYTE PTR [esi-0x41],dh
  4168c4:	mov    edi,0xcbfb3808
  4168c9:	gs jns 0x416944
  4168cc:	jge    0x416944
  4168ce:	lods   eax,DWORD PTR ds:[esi]
  4168cf:	jg     0x41693e
  4168d1:	loop   0x4168b8
  4168d3:	pop    ss
  4168d4:	add    esp,ecx
  4168d6:	jbe    0x4168b0
  4168d8:	call   DWORD PTR [ecx+0x24b0f1e2]
  4168de:	jmp    0xdd05:0x7c13b8a5
  4168e5:	pusha  
  4168e6:	retf   0xcdd
  4168e9:	adc    esi,ebp
  4168eb:	jae    0x41691c
  4168ed:	xchg   esp,eax
  4168ee:	addr16 dec eax
  4168f0:	or     al,0xff
  4168f2:	or     BYTE PTR [ecx],ah
  4168f4:	test   eax,0x34f89767
  4168f9:	xchg   dh,ch
  4168fb:	and    eax,0xc69658af
  416900:	inc    esi
  416901:	add    BYTE PTR [eax+edi*1],ch
  416904:	rcl    DWORD PTR ds:0x3fef97b8,1
  41690a:	mov    edx,0x4ab6fa48
  41690f:	and    DWORD PTR [ebx],0x91f13a30
  416915:	fwait
  416916:	push   ss
  416917:	out    dx,eax
  416918:	arpl   WORD PTR [esi-0x3b],bx
  41691b:	or     cl,0x31
  41691e:	cmp    al,BYTE PTR ds:0xf2d41f73
  416924:	aad    0xdb
  416926:	pushf  
  416927:	dec    edi
  416928:	pop    ds
  416929:	add    ebp,DWORD PTR [esi-0x77]
  41692c:	or     esp,DWORD PTR [edi+0x72287472]
  416932:	daa    
  416933:	(bad)  
  416934:	das    
  416935:	cmp    al,0xf3
  416937:	pop    ds
  416938:	arpl   WORD PTR [esp+eiz*4],ax
  41693b:	mov    esp,0x923b964f
  416940:	ss dec ecx
  416942:	repz mov ah,0xf3
  416945:	xchg   BYTE PTR [ecx-0x4f],dl
  416948:	fscale 
  41694a:	leave  
  41694b:	cmp    BYTE PTR [ecx-0x1c690038],dl
  416951:	(bad)  
  416952:	cmp    esp,ebp
  416954:	repnz pop edi
  416956:	scas   eax,DWORD PTR es:[edi]
  416957:	inc    edx
  416958:	adc    edi,DWORD PTR gs:[eax]
  41695b:	dec    ebx
  41695c:	mov    ecx,esp
  41695e:	jo     0x4168e0
  416960:	and    eax,0x404a7e7d
  416965:	js     0x416901
  416967:	mov    edx,0x70328662
  41696c:	leave  
  41696d:	aas    
  41696e:	enter  0x365c,0xd8
  416972:	inc    edi
  416973:	cmp    bh,BYTE PTR [ecx]
  416975:	xchg   BYTE PTR [ebx-0x7f],ah
  416978:	repnz dec esi
  41697a:	mov    al,ds:0x1b0ad3d9
  41697f:	nop
  416980:	int3   
  416981:	enter  0xa223,0x3c
  416985:	push   esi
  416986:	push   0xfffffff4
  416988:	sbb    eax,0xf791f9ea
  41698d:	mov    eax,ds:0x2a8a19c
  416992:	gs (bad) 
  416994:	ud1    esp,esi
  416997:	ja     0x416a03
  416999:	dec    ecx
  41699a:	push   ds
  41699b:	jecxz  0x416943
  41699d:	and    bl,dl
  41699f:	adc    eax,0xc58ff43d
  4169a4:	add    BYTE PTR [ebx+0x4d],dh
  4169a7:	out    0xf2,eax
  4169a9:	jns    0x416966
  4169ab:	mov    eax,ds:0xe0a8d9bd
  4169b0:	mov    cs,WORD PTR [ebx+0x7b]
  4169b3:	jbe    0x4169d6
  4169b5:	aas    
  4169b6:	bound  esp,QWORD PTR [ebp-0x7c1303c1]
  4169bc:	xrelease mov BYTE PTR [edx-0x5ae37933],0xd0
  4169c4:	dec    esp
  4169c5:	je     0x4169a0
  4169c7:	pop    ebx
  4169c8:	push   0x26f63d34
  4169cd:	sar    ch,cl
  4169cf:	fldcw  WORD PTR [eax+0x23]
  4169d2:	xchg   esi,eax
  4169d3:	iret   
  4169d4:	icebp  
  4169d5:	push   edx
  4169d6:	(bad)  [ecx+eiz*4]
  4169d9:	test   DWORD PTR [ecx+0x36890ac4],0xb7b48f94
  4169e3:	adc    eax,0xe7865c74
  4169e8:	sub    ch,dh
  4169ea:	mov    bl,cl
  4169ec:	mov    esi,0x286e32ec
  4169f1:	je     0x4169ec
  4169f3:	dec    edi
  4169f4:	mov    bl,0x42
  4169f6:	dec    ebp
  4169f7:	arpl   bx,dx
  4169f9:	(bad)  
  4169fa:	fdivr  st(5),st
  4169fc:	adc    BYTE PTR [edi],0x26
  4169ff:	mov    ah,0xce
  416a01:	mov    dh,BYTE PTR [esi+0x683014d6]
  416a07:	pop    esi
  416a08:	sub    esi,DWORD PTR [edi]
  416a0a:	add    BYTE PTR ds:0x71d9272d,dl
  416a10:	pop    eax
  416a11:	sub    BYTE PTR [ebp+0x1e],bl
  416a14:	int    0xd7
  416a16:	add    BYTE PTR [edi+0x6befddf1],bl
  416a1c:	adc    DWORD PTR [edi+0x36cb8eb4],eax
  416a22:	xchg   ecx,eax
  416a23:	int    0xd1
  416a25:	sahf   
  416a26:	rcr    bl,0x5b
  416a29:	or     eax,0x98a7c2cb
  416a2e:	std    
  416a2f:	in     eax,0xf9
  416a31:	jge    0x416aa7
  416a33:	xor    ah,al
  416a35:	mov    bh,0xbe
  416a37:	and    DWORD PTR [esi],esi
  416a39:	and    ch,BYTE PTR [ecx-0x4cc1d068]
  416a3f:	sub    bl,BYTE PTR [edx+0x55d764be]
  416a45:	pop    eax
  416a46:	in     eax,dx
  416a47:	ins    BYTE PTR es:[edi],dx
  416a48:	shl    BYTE PTR [ebx-0x13],cl
  416a4b:	popf   
  416a4c:	jb     0x416a2e
  416a4e:	or     eax,0x68847928
  416a53:	in     eax,0xe7
  416a55:	jns    0x416ad6
  416a57:	loopne 0x416ad3
  416a59:	out    dx,al
  416a5a:	or     DWORD PTR [ebx],ebx
  416a5c:	gs repnz aam 0x53
  416a60:	outs   dx,BYTE PTR ds:[esi]
  416a61:	jecxz  0x416a28
  416a63:	div    bl
  416a65:	rcr    DWORD PTR [esi+0x4e25cdd9],0x33
  416a6c:	pop    esp
  416a6d:	adc    BYTE PTR [edx-0x18000000],bh
  416a73:	xchg   ecx,eax
  416a74:	retf   0xfb3a
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx-0x290c478b],cl
  416a7f:	sbb    DWORD PTR [esi],esi
  416a81:	dec    edi
  416a82:	dec    ebp
  416a83:	call   0x5366a88
  416a88:	add    BYTE PTR [eax],al
  416a8a:	adc    ebx,eax
  416a8c:	scas   eax,DWORD PTR es:[edi]
  416a8d:	(bad)
  416a91:	std    
  416a92:	hlt    
  416a93:	adc    BYTE PTR [edx+0x4d93d62f],al
  416a99:	(bad)  
  416a9a:	adc    DWORD PTR gs:[ecx+0x338ca204],ebp
  416aa1:	test   al,0x4a
  416aa3:	scas   eax,DWORD PTR es:[edi]
  416aa4:	jp     0x416a27
  416aa6:	pop    esi
  416aa7:	stos   BYTE PTR es:[edi],al
  416aa8:	pop    ebx
  416aa9:	inc    esp
  416aaa:	dec    ebx
  416aac:	fs test eax,0x9ac90d6c
  416ab3:	scas   eax,DWORD PTR es:[edi]
  416ab4:	sbb    al,0x55
  416ab6:	popf   
  416ab7:	jecxz  0x416a88
  416ab9:	mov    BYTE PTR [ebx-0x3d20b0e3],ch
  416abf:	frndint 
  416ac1:	push   cs
  416ac2:	mov    ?,WORD PTR [ebp+eax*8+0x6c6a1fe6]
  416ac9:	push   ecx
  416aca:	(bad)  
  416acb:	pop    esi
  416acc:	std    
  416acd:	and    eax,0xd903d6eb
  416ad2:	jns    0x416b35
  416ad4:	mov    edi,0x41e77df4
  416ad9:	pop    ebp
  416ada:	test   bh,ch
  416adc:	or     al,0xf4
  416ade:	sbb    DWORD PTR [edi-0x36],0x88bfbd04
  416ae5:	lock aaa 
  416ae7:	inc    esi
  416ae8:	in     eax,dx
  416ae9:	or     BYTE PTR [ecx],dh
  416aeb:	popf   
  416aec:	push   ds
  416aed:	jecxz  0x416a91
  416aef:	dec    eax
  416af0:	outs   dx,BYTE PTR ds:[esi]
  416af1:	test   al,0xd3
  416af3:	dec    esi
  416af4:	cs loopne 0x416b4f
  416af7:	hlt    
  416af8:	pop    edi
  416af9:	sbb    BYTE PTR [edx],dl
  416afb:	pushf  
  416afc:	cmp    bh,BYTE PTR [esi+ebx*1]
  416aff:	ja     0x416b3e
  416b01:	addr16 mov ds:0xcf46,eax
  416b05:	mov    dh,0x8c
  416b07:	dec    edi
  416b08:	jge    0x416a94
  416b0a:	push   ecx
  416b0b:	dec    esi
  416b0c:	out    0x53,eax
  416b0e:	add    DWORD PTR ds:0x1112d6ac,ebx
  416b14:	in     al,0x8
  416b16:	push   ds
  416b17:	or     dh,dh
  416b19:	mov    WORD PTR ds:[ebx],?
  416b1c:	mov    edi,0x859de93d
  416b21:	or     eax,0x94afa581
  416b26:	jno    0x416aeb
  416b28:	bound  eax,QWORD PTR [edi+0x79]
  416b2b:	out    0xe4,al
  416b2d:	dec    edi
  416b2e:	pop    eax
  416b2f:	add    bh,BYTE PTR [edx-0x1cfbd750]
  416b35:	scas   eax,DWORD PTR es:[edi]
  416b36:	inc    edx
  416b37:	push   ebx
  416b38:	lds    edx,FWORD PTR [edx+edi*1+0x49f6b24f]
  416b3f:	push   ebp
  416b40:	in     eax,0x30
  416b42:	push   0xffffffd6
  416b44:	push   DWORD PTR ds:0x76dd9328
  416b4a:	imul   esp,DWORD PTR [ebp+0x240ca470],0xfa2b7571
  416b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b55:	add    BYTE PTR [esi-0x64],ch
  416b58:	iret   
  416b59:	aam    0xd4
  416b5b:	leave  
  416b5c:	push   esi
  416b5d:	scas   eax,DWORD PTR es:[edi]
  416b5e:	and    ebx,edi
  416b60:	jnp    0x416be0
  416b62:	cmp    DWORD PTR fs:[ecx+eax*1],esp
  416b66:	sub    edi,ebx
  416b68:	xchg   esi,eax
  416b69:	in     al,dx
  416b6a:	enter  0xaf8e,0xdc
  416b6e:	hlt    
  416b6f:	jo     0x416af1
  416b71:	pop    edi
  416b72:	jno    0x416b83
  416b74:	jbe    0x416bd3
  416b76:	in     al,0xcd
  416b78:	mov    ebp,0xc08cbc8a
  416b7d:	pop    es
  416b7e:	int    0x8
  416b80:	div    BYTE PTR [edi-0x231425ee]
  416b86:	and    esi,ecx
  416b88:	jecxz  0x416b6a
  416b8a:	es xchg ebp,eax
  416b8c:	and    DWORD PTR [esi+0xe7bfedf],ebp
  416b92:	pop    eax
  416b93:	(bad)  
  416b94:	fwait
  416b95:	out    0xc5,eax
  416b97:	(bad)  
  416b98:	ret    0xc59d
  416b9b:	ror    DWORD PTR [esi-0x7bafb9eb],cl
  416ba1:	jo     0x416bf0
  416ba3:	je     0x416b76
  416ba5:	pop    ebp
  416ba6:	loope  0x416b99
  416ba8:	test   eax,0x581cebc3
  416bad:	ror    edi,1
  416baf:	daa    
  416bb0:	rcl    BYTE PTR [eax-0x50],cl
  416bb3:	and    edi,DWORD PTR ds:0xaeebbbc5
  416bb9:	lock rcr BYTE PTR [edx-0x12b5018],cl
  416bc0:	repnz sahf 
  416bc2:	inc    edi
  416bc3:	jle    0x416bb1
  416bc5:	jp     0x416b64
  416bc7:	adc    DWORD PTR [ebp-0x19],esi
  416bca:	xor    DWORD PTR [ecx+esi*4-0x77],ebx
  416bce:	mov    ecx,0xc32a01bd
  416bd3:	mov    ds:0x2dc118e,al
  416bd8:	pop    ss
  416bd9:	bound  esp,QWORD PTR [ebp+0x2e48ab96]
  416bdf:	xchg   DWORD PTR ds:[eax+ecx*8+0x47190210],ebx
  416be7:	xchg   DWORD PTR [eax+0x1650cdd1],edi
  416bed:	lods   eax,DWORD PTR ds:[esi]
  416bee:	sahf   
  416bef:	ins    DWORD PTR es:[edi],dx
  416bf0:	leave  
  416bf1:	cmp    edx,esi
  416bf3:	loope  0x416c15
  416bf5:	or     eax,0x16913ec5
  416bfa:	fwait
  416bfb:	jmp    0x416c3a
  416bfd:	loop   0x416c47
  416bff:	adc    al,0x7a
  416c01:	cmp    al,0xe8
  416c03:	imul   ebp,DWORD PTR [edi-0x6c35d32b],0xffffff9a
  416c0a:	ret    0x71db
  416c0d:	push   ss
  416c0e:	xchg   BYTE PTR [edi-0x8e3b512],bl
  416c14:	fsubr  QWORD PTR [edi+0x28]
  416c17:	jg     0x416be7
  416c19:	xchg   esp,eax
  416c1a:	lahf   
  416c1b:	fistp  WORD PTR [esi+0x746fedd7]
  416c21:	jne    0x416bb3
  416c23:	mov    ecx,0x741317cc
  416c28:	dec    edx
  416c29:	lock outs dx,BYTE PTR ds:[esi]
  416c2b:	(bad)  
  416c2c:	out    dx,eax
  416c2d:	add    eax,edx
  416c2f:	je     0x416c24
  416c31:	cld    
  416c32:	mov    DWORD PTR [ebx],0x1db2ed8b
  416c38:	int3   
  416c39:	jno    0x416c88
  416c3b:	in     al,0x7c
  416c3d:	sub    eax,DWORD PTR [ebx+edx*4+0x1f]
  416c41:	and    ebp,DWORD PTR ds:0x33c7b56e
  416c47:	call   0x1039f0bd
  416c4c:	sbb    ah,BYTE PTR [ecx+edi*2]
  416c4f:	xor    bh,BYTE PTR [ebx]
  416c51:	mov    ebx,0x43ca7412
  416c56:	push   ss
  416c57:	adc    ah,BYTE PTR [ecx]
  416c59:	jb     0x416c23
  416c5b:	out    dx,al
  416c5c:	mov    ds:0x4e611c63,eax
  416c61:	mov    ebp,0x5c1b638a
  416c66:	mov    esi,0xaea932a1
  416c6b:	xor    DWORD PTR [esi-0x3a],eax
  416c6e:	adc    edx,DWORD PTR [edi-0x3a]
  416c71:	daa    
  416c72:	mov    ch,0x29
  416c74:	neg    BYTE PTR [ecx+0x4037f146]
  416c7a:	pop    edi
  416c7b:	test   ah,ah
  416c7d:	push   esp
  416c7e:	ins    BYTE PTR es:[di],dx
  416c80:	inc    esi
  416c81:	jp     0x416cfe
  416c83:	xchg   esi,eax
  416c84:	mov    ah,0x2b
  416c86:	xchg   ch,ch
  416c88:	dec    esi
  416c89:	lea    esp,[ecx-0x32]
  416c8c:	es nop
  416c8e:	add    al,0x23
  416c90:	jnp    0x416cde
  416c92:	jecxz  0x416ca6
  416c94:	sub    BYTE PTR [edx+0x40],dl
  416c97:	jl     0x416c70
  416c99:	int3   
  416c9a:	in     eax,0xbf
  416c9c:	addr16 pop ss
  416c9e:	in     al,0xc2
  416ca0:	inc    esi
  416ca1:	in     al,0xa5
  416ca3:	and    ebp,0x650fa693
  416ca9:	add    DWORD PTR [edx-0x6a],edx
  416cac:	sbb    BYTE PTR [edx+0x4e],bl
  416caf:	mov    cl,0x24
  416cb1:	jp     0x416cb7
  416cb3:	sbb    BYTE PTR [ecx],cl
  416cb5:	push   0xffffffeb
  416cb7:	ins    DWORD PTR es:[edi],dx
  416cb8:	mov    ds:0x30580312,al
  416cbd:	fdivr  DWORD PTR [ebx]
  416cbf:	pop    edi
  416cc0:	lds    esi,FWORD PTR [edx-0x728f548f]
  416cc6:	jl     0x416c54
  416cc8:	fdecstp 
  416cca:	xor    BYTE PTR gs:[eax+ebx*1+0x5a063149],cl
  416cd2:	mov    DWORD PTR [ecx],edi
  416cd4:	pop    ds
  416cd5:	les    ebx,FWORD PTR [esi+ecx*1]
  416cd8:	inc    esp
  416cd9:	push   0x3e0d21ac
  416cde:	lahf   
  416cdf:	cmp    al,0x56
  416ce1:	jbe    0x416d61
  416ce3:	add    eax,0x200b4ed8
  416ce8:	inc    ebx
  416ce9:	or     eax,0x4c7d6634
  416cee:	dec    eax
  416cef:	mov    DWORD PTR [edi-0x4ccafb0c],esp
  416cf5:	scas   al,BYTE PTR es:[edi]
  416cf6:	add    DWORD PTR [eax-0x2ed17b55],ecx
  416cfc:	out    0x50,al
  416cfe:	mov    ds:0x95ac1818,al
  416d03:	push   ecx
  416d04:	icebp  
  416d05:	mov    ebp,0x2958143d
  416d0a:	mov    dl,0xd4
  416d0c:	jg     0x416d71
  416d0e:	xchg   ebx,eax
  416d0f:	data16 adc al,0xcf
  416d12:	push   esp
  416d13:	mov    ebx,0x915e112d
  416d18:	outs   dx,DWORD PTR ds:[esi]
  416d19:	mov    ebp,0xba628c0a
  416d1e:	push   ss
  416d1f:	aam    0x59
  416d21:	xacquire xchg DWORD PTR [eax+0x325aa9fe],esp
  416d28:	int    0xde
  416d2a:	and    edi,edx
  416d2c:	nop
  416d2d:	mov    ah,0x9b
  416d2f:	mov    ebp,0x532ec10d
  416d34:	in     al,0xc3
  416d36:	pop    es
  416d37:	xor    BYTE PTR [eax],ch
  416d39:	sbb    eax,0x2d77fd7e
  416d3e:	xor    BYTE PTR ds:0x59ea122f,0xac
  416d45:	xchg   esp,eax
  416d46:	sub    DWORD PTR [ebp-0x68b9a356],edi
  416d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d4d:	in     al,0xcd
  416d4f:	mov    esp,0xd7ae225a
  416d54:	cmc    
  416d55:	and    dh,BYTE PTR [edx+ebx*8-0xb55caf1]
  416d5c:	ins    BYTE PTR es:[edi],dx
  416d5d:	cdq    
  416d5e:	imul   ebp,DWORD PTR [ecx+0x7678de98],0xffffff83
  416d65:	int3   
  416d66:	xchg   esi,eax
  416d67:	jae    0x416d75
  416d69:	not    ah
  416d6b:	inc    ebx
  416d6c:	outs   dx,BYTE PTR ds:[esi]
  416d6d:	mov    dl,BYTE PTR [edx]
  416d6f:	in     al,dx
  416d70:	mov    edi,0x1e9a79d9
  416d75:	mov    cl,0xc8
  416d77:	and    ebp,edi
  416d79:	xchg   edi,eax
  416d7a:	cmp    DWORD PTR [ecx],0x74
  416d7d:	scas   eax,DWORD PTR es:[edi]
  416d7e:	sahf   
  416d7f:	call   0x4c8ba1f3
  416d84:	mov    dl,0xdc
  416d86:	pusha  
  416d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d88:	inc    ecx
  416d89:	in     al,dx
  416d8a:	push   edx
  416d8b:	shl    edi,0x42
  416d8e:	iret   
  416d8f:	sub    eax,0x7290797
  416d94:	popf   
  416d95:	sub    al,al
  416d97:	xor    DWORD PTR [eax],ebx
  416d99:	pop    esp
  416d9a:	jge    0x416dc0
  416d9c:	fwait
  416d9d:	pop    es
  416d9e:	dec    edx
  416d9f:	push   ecx
  416da0:	sbb    eax,0xa6b53c69
  416da5:	xor    DWORD PTR [ecx+0x49],eax
  416da8:	call   0x42178c13
  416dad:	jge    0x416dc7
  416daf:	push   edx
  416db0:	je     0x416de6
  416db2:	pop    ebx
  416db3:	gs inc edx
  416db5:	push   0xffffffd7
  416db7:	pop    ecx
  416db8:	sbb    BYTE PTR [ecx],al
  416dba:	xchg   ecx,eax
  416dbb:	into   
  416dbc:	inc    edx
  416dbd:	jle    0x416df0
  416dbf:	imul   ecx,ebp,0xffffffec
  416dc2:	test   al,0x65
  416dc4:	scas   eax,DWORD PTR es:[edi]
  416dc5:	scas   eax,DWORD PTR es:[edi]
  416dc6:	mov    ds:0x4a32e4c7,eax
  416dcb:	cwde   
  416dcc:	lods   eax,DWORD PTR ds:[esi]
  416dcd:	jbe    0x416e14
  416dcf:	lock test DWORD PTR [esi],ebx
  416dd2:	cli    
  416dd3:	jge    0x416d6f
  416dd5:	pop    ecx
  416dd6:	aam    0xa7
  416dd8:	push   es
  416dd9:	test   al,0xe7
  416ddb:	sbb    eax,0x4f02e23
  416de0:	loopne 0x416dd9
  416de2:	loopne 0x416da6
  416de4:	stos   DWORD PTR es:[edi],eax
  416de5:	jbe    0x416d70
  416de7:	scas   eax,DWORD PTR es:[edi]
  416de8:	pop    ss
  416de9:	push   ds
  416dea:	mov    edi,0x9d08f626
  416def:	retf   0x5501
  416df2:	sub    eax,DWORD PTR [ecx+edi*8+0x74ad1db0]
  416df9:	pop    ss
  416dfa:	in     al,dx
  416dfb:	stos   DWORD PTR es:[edi],eax
  416dfc:	add    eax,0xf9a047da
  416e01:	lods   eax,DWORD PTR ds:[esi]
  416e02:	jge    0x416dd1
  416e04:	loopne 0x416dcb
  416e06:	sub    DWORD PTR [ebp+0x2ac9939b],0xf501f699
  416e10:	jbe    0x416e75
  416e12:	lock icebp 
  416e14:	mov    edi,DWORD PTR [ebx]
  416e16:	hlt    
  416e17:	cmp    eax,0x1fb854a1
  416e1c:	sub    DWORD PTR [edi-0x69],eax
  416e1f:	jns    0x416e68
  416e21:	adc    eax,0x79880fc8
  416e26:	mov    ecx,0x4ad6b8de
  416e2b:	jmp    0x416e9d
  416e2d:	fdivr  DWORD PTR [edi-0x4f]
  416e30:	cmp    DWORD PTR [eax+esi*1-0x1f67c045],edi
  416e37:	cli    
  416e38:	bound  ebp,QWORD PTR [edi-0x4a985030]
  416e3e:	jbe    0x416e6e
  416e40:	xchg   esi,eax
  416e41:	jae    0x416e66
  416e43:	lods   al,BYTE PTR ds:[esi]
  416e44:	imul   DWORD PTR [edx-0x50]
  416e47:	mov    bh,0x5d
  416e49:	jbe    0x416ead
  416e4b:	in     eax,0xd9
  416e4d:	lock xor DWORD PTR [edi+0x6e1dd20],0x56
  416e55:	pop    ebx
  416e56:	or     edi,edi
  416e58:	or     dl,BYTE PTR [ebp-0x6d24706b]
  416e5e:	jl     0x416eb0
  416e60:	lahf   
  416e61:	es sbb eax,ebp
  416e64:	adc    eax,0x6959d6ab
  416e69:	mov    BYTE PTR [edx+edi*4+0x164343ee],ah
  416e70:	cmc    
  416e71:	outs   dx,BYTE PTR ds:[esi]
  416e72:	mov    bl,ch
  416e74:	fdiv   DWORD PTR [edx-0x39fdf940]
  416e7a:	jl     0x416eed
  416e7c:	stc    
  416e7d:	adc    eax,0x6fd18623
  416e82:	cli    
  416e83:	adc    ah,dl
  416e85:	jmp    0x23cf8ba2
  416e8a:	mov    ds:0xb98c70ee,eax
  416e8f:	inc    edi
  416e90:	outs   dx,DWORD PTR ds:[esi]
  416e91:	into   
  416e92:	cmp    al,0xf9
  416e94:	mov    ah,0xf9
  416e96:	xor    BYTE PTR [ebx],ch
  416e98:	in     eax,0x89
  416e9a:	data16 add al,0x3c
  416e9d:	pop    es
  416e9e:	or     al,0x3b
  416ea0:	das    
  416ea1:	jb     0x416e7c
  416ea3:	inc    esi
  416ea4:	inc    eax
  416ea5:	mov    esi,0x44f55365
  416eaa:	test   al,0x9a
  416eac:	adc    al,0x45
  416eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eaf:	and    eax,0x7aa834b3
  416eb4:	adc    al,0xf2
  416eb6:	(bad)  
  416eb8:	inc    eax
  416eb9:	daa    
  416eba:	fimul  WORD PTR [ebx+eiz*2-0x2b7b5696]
  416ec1:	mov    edx,0xf15f6563
  416ec6:	add    esi,DWORD PTR [ebp-0x6f]
  416ec9:	mov    ch,0xd3
  416ecb:	(bad)  
  416ecc:	and    DWORD PTR [ebx+0x4a0f6e7c],esi
  416ed2:	push   ebx
  416ed3:	lock or ebx,DWORD PTR [edi+ecx*8+0x201d7dea]
  416edb:	sbb    edx,DWORD PTR [edi+eax*4+0x63ef63f5]
  416ee2:	out    0xc8,al
  416ee4:	jno    0x416ea6
  416ee6:	(bad)  
  416ee7:	es pop esp
  416ee9:	mov    esp,0xacef841
  416eee:	pusha  
  416eef:	dec    ebp
  416ef0:	fcomp  QWORD PTR [esi+0x22db760e]
  416ef6:	arpl   WORD PTR ds:0x674fe2e4,di
  416efc:	xchg   edx,eax
  416efd:	sub    BYTE PTR [ebp+0x4c5edcfc],dh
  416f03:	hlt    
  416f04:	dec    ebp
  416f05:	mov    edx,0xd8ea62f4
  416f0a:	adc    al,0xac
  416f0c:	fimul  WORD PTR [ebp-0x78b33d7a]
  416f12:	push   edx
  416f13:	pushf  
  416f14:	mov    ecx,0x46ee9542
  416f19:	cwde   
  416f1a:	fwait
  416f1b:	popf   
  416f1c:	sahf   
  416f1d:	popa   
  416f1e:	int    0x2d
  416f20:	popf   
  416f21:	mov    esp,0x2d476d8a
  416f26:	ret    0xb5b5
  416f29:	sub    eax,0xa76e387e
  416f2e:	and    BYTE PTR [edi+0x4c],dl
  416f31:	mov    ebp,0x54562ba1
  416f36:	lods   eax,DWORD PTR ds:[esi]
  416f37:	stos   DWORD PTR es:[edi],eax
  416f38:	dec    esp
  416f39:	inc    edx
  416f3a:	js     0x416f8b
  416f3c:	aam    0xe9
  416f3e:	xor    BYTE PTR [ecx+0x9e78425],cl
  416f44:	test   eax,0xe49daec0
  416f49:	xchg   edi,eax
  416f4a:	xchg   ebp,eax
  416f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f4c:	das    
  416f4d:	test   BYTE PTR [edi-0x67],cl
  416f50:	pop    ebx
  416f51:	fwait
  416f52:	int3   
  416f53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f54:	std    
  416f55:	pop    ds
  416f56:	mov    DWORD PTR [edi+0x6],0x52192232
  416f5d:	add    BYTE PTR [ebp-0x3616533d],bl
  416f63:	call   0xf87f029d
  416f68:	jmp    0x2effdb3e
  416f6d:	xchg   ebp,eax
  416f6e:	ret    
  416f6f:	jmp    0x416f19
  416f71:	out    dx,eax
  416f72:	add    BYTE PTR [eax+0x56],ah
  416f75:	jl     0x416f6a
  416f77:	xor    DWORD PTR [edi+edi*2],edx
  416f7a:	dec    ecx
  416f7b:	gs test eax,0x52b0
  416f81:	add    BYTE PTR [ebp+0x2c],dl
  416f84:	pop    edi
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx-0x62f909da]
  416f90:	outs   dx,BYTE PTR ds:[esi]
  416f91:	adc    eax,DWORD PTR [edx-0x13]
  416f94:	add    BYTE PTR [eax],al
  416f96:	cmc    
  416f97:	add    al,0x0
  416f99:	add    dh,ch
  416f9b:	ret    
  416f9c:	and    DWORD PTR [edi+0x67],eax
  416f9f:	loope  0x41701f
  416fa1:	adc    DWORD PTR [esi+0xd],edx
  416fa4:	retf   0xe99c
  416fa7:	xchg   DWORD PTR [eax-0x2089d0de],ecx
  416fad:	les    ebp,FWORD PTR [ecx-0x565cbe57]
  416fb3:	imul   eax,DWORD PTR [edi],0xaa2213ad
  416fb9:	sar    bl,cl
  416fbb:	sti    
  416fbc:	out    0x8d,al
  416fbe:	mov    ecx,0x3c66d7da
  416fc3:	adc    bl,cl
  416fc5:	mov    BYTE PTR [edi+esi*4-0x21],cl
  416fc9:	adc    DWORD PTR [esi-0x351410d2],esi
  416fcf:	push   edx
  416fd0:	pop    ds
  416fd1:	aad    0xa5
  416fd3:	fucom  st(4)
  416fd5:	in     al,0xa0
  416fd7:	dec    esi
  416fd8:	mov    al,bh
  416fda:	dec    ebx
  416fdb:	cwde   
  416fdc:	push   0xc037e960
  416fe1:	xor    ch,cl
  416fe3:	jns    0x416f9e
  416fe5:	mov    bl,0x15
  416fe7:	sub    eax,0x730c83a1
  416fec:	mov    bl,0xcb
  416fee:	adc    cl,al
  416ff0:	outs   dx,DWORD PTR ds:[esi]
  416ff1:	mov    edx,0x55ccfa20
  416ff6:	xor    ah,BYTE PTR [esi-0xad38cc3]
  416ffc:	ds scas al,BYTE PTR es:[edi]
  416ffe:	jmp    0x89b92250
  417003:	add    BYTE PTR [ebp+0x78c41602],0x74
  41700a:	mov    edi,0xbe03f13
  41700f:	dec    esi
  417010:	fisubr WORD PTR [edx+0x76]
  417013:	or     ah,ah
  417015:	mov    al,ds:0x3de67302
  41701a:	jbe    0x417033
  41701c:	std    
  41701d:	pop    ds
  41701e:	fsubp  st(6),st
  417020:	mov    ebp,eax
  417022:	icebp  
  417023:	dec    ebp
  417024:	test   bl,dh
  417026:	test   eax,0x339d6544
  41702b:	inc    ebp
  41702c:	js     0x41703a
  41702e:	jae    0x416ff5
  417030:	fisubr DWORD PTR [si+0x45]
  417034:	in     al,dx
  417035:	cli    
  417036:	inc    esp
  417037:	push   cs
  417038:	loopne 0x417095
  41703a:	(bad)  
  41703b:	push   DWORD PTR [ebp-0x27]
  41703e:	cli    
  41703f:	sbb    ecx,DWORD PTR ds:0x96fc6301
  417045:	adc    eax,DWORD PTR [edi+esi*8+0x6b]
  417049:	and    ebp,DWORD PTR [ecx]
  41704b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41704c:	arpl   WORD PTR [ebp-0x42471513],ax
  417052:	mov    dl,0x3e
  417054:	shl    BYTE PTR [edi+0x7],0x6d
  417058:	or     BYTE PTR [ebx+edx*1+0x21],bl
  41705c:	sbb    dl,BYTE PTR [eax]
  41705e:	frstor [esi-0x262af283]
  417064:	dec    ebx
  417065:	adc    ah,BYTE PTR [eax+0x6c5e0a24]
  41706b:	jge    0x41707f
  41706d:	in     al,dx
  41706e:	stos   DWORD PTR es:[edi],eax
  41706f:	sbb    BYTE PTR [ebx],bh
  417071:	es dec ecx
  417073:	js     0x41702a
  417075:	xor    ebx,edi
  417077:	(bad)  
  417078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417079:	je     0x417021
  41707b:	dec    esp
  41707c:	imul   ebp,DWORD PTR [edi-0x20],0xf7c4777f
  417083:	stos   BYTE PTR es:[edi],al
  417084:	push   0x7319dd98
  417089:	rcr    DWORD PTR [ebp+eiz*2+0x4e],cl
  41708d:	jge    0x4170be
  41708f:	push   edx
  417090:	icebp  
  417091:	inc    esp
  417092:	inc    edx
  417093:	xlat   BYTE PTR ds:[ebx]
  417094:	cmp    ebx,edx
  417096:	mov    cl,0xd9
  417098:	mov    ebp,0xa5412d45
  41709d:	push   0xffffffbd
  41709f:	dec    esi
  4170a0:	sbb    ebp,eax
  4170a2:	sub    eax,0x29f0ed85
  4170a7:	(bad)  
  4170a8:	push   eax
  4170a9:	inc    ebp
  4170aa:	call   0x1739:0xd18278b3
  4170b1:	dec    ebx
  4170b2:	jno    0x4170e3
  4170b4:	inc    esi
  4170b5:	sub    eax,0x84a52ae5
  4170ba:	aam    0xa
  4170bc:	or     BYTE PTR [edi-0x16],dh
  4170bf:	xchg   edi,eax
  4170c0:	xor    BYTE PTR [edi+0x73437f74],dl
  4170c6:	xchg   BYTE PTR [ecx],dh
  4170c8:	add    eax,0xeb23e67c
  4170cd:	adc    edx,esp
  4170cf:	lods   al,BYTE PTR ds:[esi]
  4170d0:	test   al,0xdf
  4170d2:	ss mov bh,0xd7
  4170d5:	out    dx,eax
  4170d6:	mov    edi,0xa3187bfb
  4170db:	arpl   WORD PTR [eax+0x3d],si
  4170de:	sahf   
  4170df:	cmp    edi,edx
  4170e1:	dec    ecx
  4170e2:	nop
  4170e3:	mov    ebx,0x254f09a1
  4170e8:	dec    edx
  4170e9:	out    dx,eax
  4170ea:	jecxz  0x417162
  4170ec:	test   al,0xa1
  4170ee:	das    
  4170ef:	push   ds
  4170f0:	aas    
  4170f1:	push   ds
  4170f2:	stc    
  4170f3:	sti    
  4170f4:	scas   al,BYTE PTR es:[edi]
  4170f5:	jecxz  0x41713a
  4170f7:	mov    bh,0x99
  4170f9:	outs   dx,BYTE PTR ds:[esi]
  4170fa:	mov    DWORD PTR [eax+0x38a66826],0x803c6f62
  417104:	add    BYTE PTR [eax-0x9b08c4e],al
  41710a:	xor    eax,0xab94955f
  41710f:	mov    dl,0xce
  417111:	shr    DWORD PTR [esi+0x3c],1
  417114:	gs push edi
  417116:	retf   
  417117:	mov    ch,BYTE PTR [edx+0x3a]
  41711a:	popa   
  41711b:	fld    st(7)
  41711d:	stc    
  41711e:	test   DWORD PTR [esi-0x107fa86a],edi
  417124:	nop
  417125:	popf   
  417126:	nop
  417127:	xor    edi,ebp
  417129:	adc    BYTE PTR [esp+ebp*4+0x5190e3b0],bl
  417130:	pop    ss
  417131:	xor    eax,0x5aad1a86
  417136:	fs into 
  417138:	xor    ecx,DWORD PTR [edi-0x34d9822e]
  41713e:	test   al,0x30
  417140:	inc    esp
  417141:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417143:	sub    al,0xd6
  417145:	pop    ss
  417146:	pop    ebx
  417147:	rcr    dl,0x7d
  41714a:	add    DWORD PTR [ecx+ecx*4-0x43409614],esp
  417151:	cmp    edx,DWORD PTR [ebx+0x7]
  417154:	repnz aaa 
  417156:	inc    edx
  417157:	test   BYTE PTR [edi],ch
  417159:	cwde   
  41715a:	les    ebx,FWORD PTR [eax-0x35]
  41715d:	jle    0x41716f
  41715f:	(bad)  [eax-0x2d]
  417162:	outs   dx,DWORD PTR ds:[esi]
  417163:	scas   eax,DWORD PTR es:[edi]
  417164:	retf   
  417165:	inc    eax
  417166:	jbe    0x417135
  417168:	cmp    BYTE PTR [ecx-0x23],cl
  41716b:	pop    es
  41716c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41716d:	leave  
  41716e:	ret    
  41716f:	push   0xd957ec81
  417174:	in     eax,dx
  417175:	push   cs
  417176:	int3   
  417177:	cld    
  417178:	cmp    dl,BYTE PTR [ebp+0x4f]
  41717b:	mov    eax,0x167687a
  417180:	mov    dl,0x5c
  417182:	sbb    BYTE PTR [edi+0x5a849a2b],ch
  417188:	fdiv   st(0),st
  41718a:	push   ebx
  41718b:	dec    ecx
  41718c:	xchg   edi,esp
  41718e:	add    al,0xe7
  417190:	xor    DWORD PTR [ebp+0x4dc8853e],esi
  417196:	loope  0x417163
  417198:	outs   dx,DWORD PTR ds:[esi]
  417199:	js     0x4171b7
  41719b:	ja     0x417174
  41719d:	mov    bh,ch
  41719f:	neg    DWORD PTR [eax]
  4171a1:	shl    DWORD PTR [ecx+0x461b2cb4],cl
  4171a7:	gs push ds
  4171a9:	jbe    0x4171b4
  4171ab:	xor    eax,0x5f4798e9
  4171b0:	push   ebp
  4171b1:	test   eax,0x4cddc74c
  4171b6:	push   es
  4171b7:	mov    edx,0x13f5e53f
  4171bc:	ret    0x3483
  4171bf:	into   
  4171c0:	push   ds
  4171c1:	in     al,0x51
  4171c3:	minps  xmm7,XMMWORD PTR [esi-0x31]
  4171c7:	pop    ecx
  4171c8:	jmp    0x7460:0x27935525
  4171cf:	lods   al,BYTE PTR ds:[esi]
  4171d0:	dec    ecx
  4171d1:	inc    edx
  4171d2:	dec    ebx
  4171d3:	pusha  
  4171d4:	sbb    BYTE PTR [eax-0x39],al
  4171d7:	mov    cl,0x64
  4171d9:	xor    DWORD PTR [esi],eax
  4171db:	cwde   
  4171dc:	lds    esp,FWORD PTR [ebx]
  4171de:	test   al,0xc5
  4171e0:	xor    bh,BYTE PTR [eax-0x419edde]
  4171e6:	mov    ecx,0x2f20b736
  4171eb:	inc    eax
  4171ec:	sub    BYTE PTR [ecx],ah
  4171ee:	sub    dh,BYTE PTR [edx+0x4c4d1679]
  4171f4:	outs   dx,BYTE PTR ds:[esi]
  4171f5:	(bad)  
  4171f6:	jl     0x4171ca
  4171f8:	and    dl,BYTE PTR [eax]
  4171fa:	mul    ah
  4171fc:	fldenv [ebx+0x1348bf77]
  417202:	inc    ebx
  417203:	and    DWORD PTR [eax+0x5c],ebp
  417206:	fadd   QWORD PTR [ecx+0x16]
  417209:	call   DWORD PTR [esi-0x24]
  41720c:	or     DWORD PTR [ebp+0x9],0xffffffd5
  417210:	dec    ecx
  417211:	or     dh,BYTE PTR [edi+0x77474d87]
  417217:	or     edx,DWORD PTR [edx+edi*4-0x55141bfc]
  41721e:	mov    bh,0x99
  417220:	fs repnz pusha 
  417223:	ds and al,0x55
  417226:	jl     0x41729d
  417228:	cmp    dl,BYTE PTR ds:0xe14c4f13
  41722e:	or     BYTE PTR [edi],ah
  417230:	mov    bl,0x6f
  417232:	xchg   ebp,eax
  417233:	fcomp  st(0)
  417235:	test   al,0x36
  417237:	arpl   WORD PTR [ecx-0x21a36952],si
  41723d:	test   BYTE PTR [eax+0x54],0xc7
  417241:	cwde   
  417242:	xchg   esi,eax
  417243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417244:	in     al,0x1d
  417246:	sbb    eax,esp
  417248:	mov    al,ds:0x8d272c28
  41724d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41724e:	nop
  41724f:	leave  
  417250:	mov    esi,0x430cef8c
  417255:	sub    BYTE PTR [edi+0x14],0x45
  417259:	icebp  
  41725a:	stos   DWORD PTR es:[edi],eax
  41725b:	int    0x25
  41725d:	mov    eax,ds:0xeedee18c
  417262:	test   ch,dh
  417264:	(bad)  
  417265:	push   cs
  417266:	or     al,BYTE PTR [ecx]
  417268:	fistp  QWORD PTR [ecx-0x72]
  41726b:	sub    ch,dh
  41726d:	sahf   
  41726e:	mov    WORD PTR [esi-0x12],es
  417271:	pop    ebp
  417272:	dec    ebx
  417273:	dec    ebx
  417274:	add    edx,edx
  417276:	xor    DWORD PTR [edx+ebp*1],ebp
  417279:	mov    edx,0xa83a4469
  41727e:	jmp    0xaecd0a9a
  417283:	and    DWORD PTR [eax],ebx
  417285:	mov    esi,0xdae1f26
  41728a:	stos   BYTE PTR es:[edi],al
  41728b:	inc    ecx
  41728c:	or     esi,DWORD PTR [edx]
  41728e:	mul    BYTE PTR [esi]
  417290:	or     edx,edi
  417292:	xchg   esi,eax
  417293:	es push esi
  417295:	mov    esi,0x433d3aad
  41729a:	(bad)  
  41729c:	scas   eax,DWORD PTR es:[edi]
  41729d:	fwait
  41729e:	inc    edi
  41729f:	pop    ds
  4172a0:	xchg   DWORD PTR [esi+eiz*1+0x6eda98e0],esp
  4172a7:	jne    0x4172a7
  4172a9:	lea    ebp,[ebx-0x2d14eaa8]
  4172af:	repnz es pop edi
  4172b2:	lds    esp,FWORD PTR [edi]
  4172b4:	sbb    DWORD PTR [ecx+0xe],0xffffffd5
  4172b8:	cmp    BYTE PTR [ebx+0x6d1629ea],dh
  4172be:	std    
  4172bf:	sbb    eax,0xf8d099b9
  4172c4:	arpl   sp,ax
  4172c6:	cmp    al,0xf1
  4172c8:	add    esi,DWORD PTR [edx-0x2d]
  4172cb:	push   0xffffffa6
  4172cd:	add    cl,dl
  4172cf:	mov    ebx,0x2caabe55
  4172d4:	jo     0x4172f4
  4172d6:	cmp    eax,DWORD PTR [edx+0x57a93e70]
  4172dc:	sbb    DWORD PTR [edx+esi*2-0x5abb29d1],ebx
  4172e3:	jb     0x4172c1
  4172e5:	cmp    al,0xa0
  4172e7:	push   ebp
  4172e8:	daa    
  4172e9:	and    ah,cl
  4172eb:	(bad)  
  4172ec:	jo     0x417352
  4172ee:	cdq    
  4172ef:	sbb    eax,0xda0fe50a
  4172f4:	or     eax,0xfb5e4629
  4172f9:	inc    ecx
  4172fa:	dec    edi
  4172fb:	je     0x41736e
  4172fd:	sub    ch,ch
  4172ff:	adc    ebx,edi
  417301:	ja     0x41733d
  417303:	dec    esp
  417304:	stc    
  417305:	dec    ebp
  417306:	mov    ebp,0x6c03264d
  41730b:	lods   ax,WORD PTR ds:[esi]
  41730d:	mov    esp,0x5b58804b
  417312:	mov    ebx,0x69c3eba8
  417317:	jne    0x417370
  417319:	(bad)  
  41731b:	int    0x52
  41731d:	call   0x8fcccb02
  417322:	cmp    ch,BYTE PTR [edx+eiz*8-0x3b36bfbe]
  417329:	cmp    ah,BYTE PTR [ecx]
  41732b:	test   DWORD PTR [ebx],ebp
  41732d:	xor    eax,0x1a855965
  417332:	std    
  417333:	jnp    0x417300
  417335:	lds    ebx,FWORD PTR [ebx-0x4f]
  417338:	xor    DWORD PTR [ebx+0x49d11c13],ebp
  41733e:	xor    dh,BYTE PTR [ecx-0x731011b]
  417344:	pushf  
  417345:	jecxz  0x417347
  417347:	adc    DWORD PTR ds:0x4ba0a0e6,edi
  41734d:	xchg   esp,eax
  41734e:	cmp    ch,BYTE PTR [ebx]
  417350:	push   0xffffffd2
  417352:	imul   ebx,eax,0xfffffff7
  417355:	js     0x417325
  417357:	fstp   TBYTE PTR [ebx+0x4d7946ff]
  41735d:	(bad)  
  41735e:	ja     0x41730a
  417360:	mov    ch,0xac
  417362:	inc    ecx
  417363:	dec    edx
  417364:	jnp    0x417387
  417366:	retf   0x5cb7
  417369:	xor    cl,bh
  41736b:	mov    eax,DWORD PTR [eax+0x7eef9927]
  417371:	cwde   
  417372:	popa   
  417373:	xor    DWORD PTR [ebp-0x1c5b1d9e],ebp
  417379:	jnp    0x417363
  41737b:	(bad)  
  41737c:	dec    ebp
  41737d:	aaa    
  41737e:	pop    ebx
  41737f:	out    dx,eax
  417380:	int    0xb6
  417382:	adc    dh,cl
  417384:	out    dx,al
  417385:	sub    DWORD PTR [ebx],ebx
  417387:	stos   DWORD PTR es:[edi],eax
  417388:	shl    BYTE PTR [eax-0x47],0xa9
  41738c:	ins    BYTE PTR es:[edi],dx
  41738d:	sub    eax,0x7c3e0108
  417392:	sub    DWORD PTR [esi],ecx
  417394:	xchg   ebp,eax
  417395:	dec    ecx
  417396:	std    
  417397:	lahf   
  417398:	aas    
  417399:	xlat   BYTE PTR ds:[ebx]
  41739a:	gs xchg ecx,ebp
  41739d:	sub    al,0x64
  41739f:	push   0xfffffff2
  4173a1:	mov    DWORD PTR [ebp+0x30f6ce30],edi
  4173a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173a8:	jl     0x4173a2
  4173aa:	adc    BYTE PTR [edi-0x5f0b14ad],al
  4173b0:	cdq    
  4173b1:	fimul  WORD PTR [esi+0xcb61830]
  4173b7:	jo     0x4173a8
  4173b9:	mov    gs,WORD PTR cs:[ebx]
  4173bc:	cmp    DWORD PTR [ebx-0x3bee8850],0x72
  4173c3:	xor    BYTE PTR [edi+0x2eaf01aa],0xda
  4173ca:	mov    ah,0x2a
  4173cc:	(bad)  
  4173cd:	adc    al,0xa9
  4173cf:	stos   BYTE PTR es:[edi],al
  4173d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d1:	out    dx,eax
  4173d2:	push   edx
  4173d3:	sub    edi,ebx
  4173d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d6:	xor    BYTE PTR ds:0x756a3f41,al
  4173dc:	mov    esi,0x44fd775d
  4173e1:	pop    edx
  4173e2:	gs xor al,0x73
  4173e5:	fidiv  WORD PTR [edi+0x3023cf6d]
  4173eb:	dec    ebx
  4173ec:	push   esi
  4173ed:	add    cl,cl
  4173ef:	outs   dx,DWORD PTR ds:[esi]
  4173f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f1:	fisub  DWORD PTR [ebx+0x4d0625cf]
  4173f7:	sbb    al,0x4f
  4173f9:	into   
  4173fa:	adc    al,0x1a
  4173fc:	cmp    ebx,DWORD PTR [esi+0x65675dba]
  417402:	ret    
  417403:	and    BYTE PTR [eax-0x70],ah
  417406:	and    ah,dl
  417408:	pop    ebx
  417409:	sub    esp,DWORD PTR [eax-0x6f57b369]
  41740f:	push   esp
  417410:	sbb    ecx,edi
  417412:	inc    ebp
  417413:	xchg   ebp,eax
  417414:	(bad)  
  417416:	sbb    esp,DWORD PTR [ebx]
  417418:	mov    edi,0x6f4f6432
  41741d:	mov    esp,0xfc351718
  417422:	sub    dh,bl
  417424:	imul   DWORD PTR [ebx-0x47dd784b]
  41742a:	pop    edx
  41742b:	fld    QWORD PTR [ecx+0x6f]
  41742e:	(bad)  
  41742f:	cmp    al,0xba
  417431:	out    dx,eax
  417432:	pop    esi
  417433:	mov    eax,ds:0xe3f10ea4
  417438:	loopne 0x4174a2
  41743a:	sbb    eax,0x239417f1
  41743f:	dec    ecx
  417440:	dec    ebx
  417441:	out    0xfc,al
  417443:	or     eax,0x6d2ccf00
  417448:	sub    esp,DWORD PTR [edi+ebx*1+0x23]
  41744c:	aaa    
  41744d:	retf   
  41744e:	and    DWORD PTR [edx+0x2d],edi
  417451:	push   ebx
  417452:	push   ds
  417453:	les    eax,FWORD PTR [ebp+0x6d58b42b]
  417459:	xor    esi,DWORD PTR [ebx-0x36]
  41745c:	mov    cl,cl
  41745e:	mov    esi,DWORD PTR [ebx]
  417460:	xchg   ebx,eax
  417461:	sub    dh,BYTE PTR [edx-0x3f]
  417464:	push   cs
  417465:	aad    0x23
  417467:	inc    esp
  417468:	jecxz  0x4174cf
  41746a:	jnp    0x41741e
  41746c:	ret    0xd535
  41746f:	call   0x17f9e1ed
  417474:	mov    dh,0xd1
  417476:	test   al,0x59
  417478:	bound  esi,QWORD PTR [ecx+0x554764ea]
  41747e:	dec    ebp
  41747f:	pop    ss
  417480:	cmp    ch,al
  417482:	xchg   ebp,eax
  417483:	mov    eax,ds:0x6816067a
  417488:	pop    ecx
  417489:	repz jmp 0x41745f
  41748c:	scas   eax,DWORD PTR es:[edi]
  41748d:	fst    QWORD PTR [ebx+0x0]
  417490:	add    BYTE PTR [eax],al
  417492:	fisttp WORD PTR [ebp-0x66]
  417495:	mov    DWORD PTR [edx+0x305fdfdf],ebx
  41749b:	adc    al,0x61
  41749d:	retf   0xba77
  4174a0:	or     ch,ah
  4174a2:	aaa    
  4174a3:	repnz add BYTE PTR [eax],al
  4174a6:	cmc    
  4174a7:	add    al,0x0
  4174a9:	add    BYTE PTR [edx-0x44],cl
  4174ac:	mov    ebx,0x2e9e9237
  4174b1:	mov    ch,0x78
  4174b3:	cwde   
  4174b4:	or     DWORD PTR [esi-0x6c],0x9b6a13c2
  4174bb:	cs andnps xmm3,xmm7
  4174bf:	mov    ss,ecx
  4174c1:	and    BYTE PTR [ecx+eiz*4],al
  4174c4:	loop   0x41748c
  4174c6:	xchg   ebx,eax
  4174c7:	bound  ebp,QWORD PTR [eax+eax*2-0x3de294c3]
  4174ce:	icebp  
  4174cf:	es out dx,al
  4174d1:	jg     0x417457
  4174d3:	jns    0x417509
  4174d5:	es in  ax,0xa4
  4174d9:	push   ss
  4174da:	sti    
  4174db:	lea    eax,[esi+0x6b62e465]
  4174e1:	jne    0x4174f8
  4174e3:	sbb    al,0x82
  4174e5:	dec    esp
  4174e6:	mov    ch,0x66
  4174e8:	push   0x12bad719
  4174ed:	scas   al,BYTE PTR es:[edi]
  4174ee:	in     eax,0x6d
  4174f0:	or     ah,cl
  4174f2:	cmp    al,al
  4174f4:	sub    eax,DWORD PTR [ebp+0x49f31def]
  4174fa:	xor    esp,DWORD PTR [esi-0x15e12a42]
  417500:	aam    0xe0
  417502:	mov    esi,esi
  417504:	(bad)  
  417506:	call   0x6701177c
  41750b:	push   cs
  41750c:	lea    ebp,[ebp-0x73]
  41750f:	mov    ebp,0x22f8f2a3
  417514:	shr    DWORD PTR [edi+0x23],1
  417517:	mov    eax,0xbb7b3ba3
  41751c:	jbe    0x41759b
  41751e:	hlt    
  41751f:	in     eax,0xb0
  417521:	leave  
  417522:	in     eax,0x50
  417524:	je     0x417573
  417526:	xor    eax,0xe84583a3
  41752b:	loop   0x417509
  41752d:	outs   dx,DWORD PTR ds:[esi]
  41752e:	mov    dl,0xf4
  417530:	cmp    al,0x78
  417532:	pop    ebp
  417533:	nop
  417534:	es in  eax,0x3e
  417537:	ins    DWORD PTR es:[edi],dx
  417538:	test   DWORD PTR [ebp+esi*4-0x7dc8e042],esi
  41753f:	pusha  
  417540:	iret   
  417541:	in     al,dx
  417542:	jmp    0x4174e0
  417544:	add    ch,al
  417546:	cdq    
  417547:	inc    ebp
  417548:	retf   
  417549:	outs   dx,DWORD PTR ds:[esi]
  41754a:	adc    esp,DWORD PTR [edx]
  41754c:	lea    esi,[edx]
  41754e:	mov    ch,0xb5
  417550:	dec    eax
  417551:	es cli 
  417553:	adc    ah,ch
  417555:	or     dh,ah
  417557:	(bad)  
  417558:	out    0xff,al
  41755a:	adc    al,0xd9
  41755c:	jmp    0x199:0x882bee09
  417563:	lds    ebp,FWORD PTR gs:[esi+0x6e3fc5d7]
  41756a:	add    al,0x97
  41756c:	xchg   ebp,eax
  41756d:	nop
  41756e:	icebp  
  41756f:	push   ss
  417570:	adc    edi,0x60ca5211
  417576:	arpl   si,di
  417578:	adc    ebp,edi
  41757a:	out    dx,eax
  41757b:	xor    ah,ah
  41757d:	into   
  41757e:	sbb    DWORD PTR [ebx+0x1f],esp
  417581:	mul    edx
  417583:	js     0x417555
  417585:	lock add BYTE PTR [eax+edx*1+0x41],ah
  41758a:	cld    
  41758b:	fcom   DWORD PTR [eax+0x33]
  41758e:	or     eax,0x8f81ff25
  417593:	adc    al,0xbc
  417595:	ins    BYTE PTR es:[edi],dx
  417596:	pop    ebp
  417597:	jnp    0x417609
  417599:	out    0xbb,al
  41759b:	shr    BYTE PTR [esi+ebx*2+0xae2bbdd],1
  4175a2:	push   edx
  4175a3:	loop   0x41756c
  4175a5:	mov    eax,0xa255ccd9
  4175aa:	inc    esi
  4175ab:	ins    DWORD PTR es:[edi],dx
  4175ac:	sbb    al,0xfb
  4175ae:	mov    ah,0x1c
  4175b0:	pop    edx
  4175b1:	push   esp
  4175b2:	mov    dh,0x57
  4175b4:	mov    edi,ecx
  4175b6:	push   0x7
  4175b8:	ins    DWORD PTR es:[edi],dx
  4175b9:	mov    ah,0xc3
  4175bb:	xor    ebx,ebp
  4175bd:	loopne 0x417625
  4175bf:	shl    DWORD PTR [ecx-0x7c],0xd6
  4175c3:	add    BYTE PTR [eax+0x5c81a319],ah
  4175c9:	imul   eax,ebp,0xffffffca
  4175cc:	ret    
  4175cd:	int3   
  4175ce:	adc    edx,eax
  4175d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175d1:	and    ah,BYTE PTR [ebp+0x3c3ab93e]
  4175d7:	aad    0x5e
  4175d9:	ss ret 0x86e2
  4175dd:	lea    esp,[ebx]
  4175df:	dec    eax
  4175e0:	aas    
  4175e1:	jecxz  0x41764f
  4175e3:	adc    ebp,ebx
  4175e5:	repz dec ebx
  4175e7:	pusha  
  4175e8:	mov    DWORD PTR [edi],esi
  4175ea:	lods   eax,DWORD PTR ds:[esi]
  4175eb:	fstp   QWORD PTR [ebx+eiz*2]
  4175ee:	popf   
  4175ef:	and    bl,BYTE PTR [ebx-0x2e]
  4175f2:	fwait
  4175f3:	addr16 mov esp,0x963429ef
  4175f9:	lds    esp,FWORD PTR [ecx+0x3c3141b2]
  4175ff:	pop    es
  417600:	xor    BYTE PTR [ecx+0x4a],al
  417603:	cmp    BYTE PTR [ecx],bl
  417605:	in     eax,dx
  417606:	and    DWORD PTR [ebx-0x80],esp
  417609:	sbb    DWORD PTR [edx+0x0],ecx
  41760c:	fstp   TBYTE PTR [edi]
  41760e:	aaa    
  41760f:	push   0x3b989554
  417614:	mov    bh,0x77
  417616:	adc    BYTE PTR [esi+0x62],bl
  417619:	loop   0x41760b
  41761b:	xchg   ebp,eax
  41761c:	shr    al,cl
  41761e:	out    0x70,eax
  417620:	inc    esi
  417621:	pop    edx
  417622:	idiv   dh
  417624:	dec    ebx
  417625:	jp     0x4176a6
  417627:	push   ecx
  417628:	mov    ah,0xbe
  41762a:	out    dx,eax
  41762b:	lea    esp,[edi-0x2]
  41762e:	cdq    
  41762f:	cmc    
  417630:	in     al,dx
  417631:	pop    esp
  417632:	xor    esi,DWORD PTR [ecx]
  417634:	push   ecx
  417635:	neg    DWORD PTR [esi]
  417637:	and    al,0x4f
  417639:	fdiv   QWORD PTR [eax-0x232a047a]
  41763f:	mov    al,0x7f
  417641:	add    bh,dl
  417643:	push   edx
  417644:	add    DWORD PTR [ecx+0x669f3cb2],edx
  41764a:	lods   eax,DWORD PTR ds:[esi]
  41764b:	push   eax
  41764c:	lock mov ecx,DWORD PTR [edi]
  41764f:	in     al,0x75
  417651:	cmp    BYTE PTR [ebp-0x1d],dh
  417654:	pop    ss
  417655:	cli    
  417656:	add    eax,0x343200dc
  41765b:	inc    ebx
  41765c:	xchg   edi,eax
  41765d:	retf   
  41765e:	popf   
  41765f:	je     0x4176bb
  417661:	push   0xb465b9c3
  417666:	(bad)  
  417667:	mov    eax,0xf24aaf11
  41766c:	xor    esi,DWORD PTR [eax]
  41766e:	setge  cl
  417671:	xor    DWORD PTR [ecx+0x1faa6867],edx
  417677:	jb     0x41767b
  417679:	jbe    0x4176ca
  41767b:	inc    eax
  41767c:	pop    ebp
  41767d:	xor    ah,BYTE PTR [edx+0x1e]
  417680:	in     eax,dx
  417681:	jbe    0x41766a
  417683:	cs or  dh,bl
  417686:	adc    bl,cl
  417688:	adc    ch,BYTE PTR [ebp+0x26f374b4]
  41768e:	fcmovb st,st(1)
  417690:	dec    eax
  417691:	out    dx,eax
  417692:	inc    ebp
  417693:	adc    esp,DWORD PTR [esi+0x4b]
  417696:	and    BYTE PTR [edi+0x7a83769b],0x91
  41769d:	push   ebp
  41769e:	int    0x9c
  4176a0:	xchg   eax,esi
  4176a2:	out    0x90,eax
  4176a4:	fisttp WORD PTR [esi]
  4176a6:	out    dx,eax
  4176a7:	aad    0x7c
  4176a9:	loop   0x417704
  4176ab:	push   ebx
  4176ac:	(bad)  
  4176ad:	push   esp
  4176ae:	inc    edx
  4176af:	add    BYTE PTR [ecx],ch
  4176b1:	arpl   WORD PTR [eax+0x71],dx
  4176b4:	jmp    0x174c:0xc107a4de
  4176bb:	xor    ebx,DWORD PTR [ebx-0x36]
  4176be:	fadd   DWORD PTR [esi+0x61]
  4176c1:	dec    ecx
  4176c2:	lahf   
  4176c3:	fwait
  4176c4:	addr16 test eax,0xc9566b05
  4176ca:	push   esi
  4176cb:	push   ecx
  4176cc:	(bad)  
  4176cd:	mov    ebx,edx
  4176cf:	lds    ebp,FWORD PTR [esi]
  4176d1:	mov    ch,0xa1
  4176d3:	add    al,0xfb
  4176d5:	daa    
  4176d6:	out    0x14,eax
  4176d8:	imul   esi,edi,0xb6a8f406
  4176de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176df:	or     eax,0xaa98776a
  4176e4:	jmp    0xf398:0xcb6f7b60
  4176eb:	jmp    0xb3dc37c5
  4176f0:	push   eax
  4176f1:	sub    eax,0x1f3db032
  4176f6:	and    al,0x72
  4176f8:	cmp    ebx,DWORD PTR [ebx-0x59]
  4176fb:	pop    edi
  4176fc:	cmp    esp,0xffffff9f
  4176ff:	and    bh,ah
  417701:	test   al,0xed
  417703:	outs   dx,BYTE PTR ds:[esi]
  417704:	enter  0x614f,0x1b
  417708:	into   
  417709:	mov    eax,ds:0x6205f681
  41770e:	dec    esp
  41770f:	in     eax,0xa2
  417711:	mov    cl,al
  417713:	pop    edi
  417714:	imul   ebx,DWORD PTR [ebx+0x32],0xbc0d5ea9
  41771b:	mov    ch,0x3
  41771d:	mov    eax,ds:0xb619a700
  417722:	push   esp
  417723:	jo     0x417729
  417725:	push   ds
  417726:	cs into 
  417728:	scas   al,BYTE PTR es:[edi]
  417729:	mov    DWORD PTR [ecx-0x36],ebp
  41772c:	inc    esp
  41772d:	add    dh,BYTE PTR [eax+0x6bc7d02a]
  417733:	push   ebx
  417734:	sub    BYTE PTR [edi-0x57],dl
  417737:	std    
  417738:	fadd   st,st(7)
  41773a:	sbb    BYTE PTR [ebx+0x58],bh
  41773d:	inc    eax
  41773e:	in     al,0xd7
  417740:	loopne 0x4176c2
  417742:	data16 test BYTE PTR [ebp+0x67],ch
  417746:	or     al,0x8e
  417748:	imul   edx,DWORD PTR [ebx-0x5f],0x4a7c0ecf
  41774f:	xchg   ebp,eax
  417750:	fcom   QWORD PTR [ebx]
  417752:	add    edi,DWORD PTR [ecx+0x44d156e8]
  417758:	ins    BYTE PTR es:[edi],dx
  417759:	xor    esi,DWORD PTR [eax+0x72]
  41775c:	or     al,0x51
  41775e:	cmp    al,0xdc
  417760:	leave  
  417761:	pop    ebx
  417762:	jae    0x4177d5
  417764:	pop    ecx
  417765:	mov    al,ds:0xf1e3186b
  41776a:	sahf   
  41776b:	adc    al,BYTE PTR [esi-0x43]
  41776e:	stos   BYTE PTR es:[edi],al
  41776f:	rcl    BYTE PTR [esi],0xc0
  417772:	lods   eax,DWORD PTR ds:[esi]
  417773:	add    DWORD PTR [ecx-0x36],edx
  417776:	fwait
  417777:	sub    ebx,DWORD PTR [ecx+0x3a]
  41777a:	leave  
  41777b:	inc    edi
  41777c:	jae    0x417704
  41777e:	mov    ch,0x12
  417780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417781:	rol    eax,cl
  417783:	xchg   esp,ebx
  417785:	push   ebx
  417786:	nop
  417787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417788:	jmp    0x417783
  41778a:	aad    0x43
  41778c:	aam    0xed
  41778e:	sahf   
  41778f:	jecxz  0x417735
  417791:	jle    0x4177fd
  417793:	cmp    BYTE PTR [ebx-0x93469bc],0x9c
  41779a:	xor    edi,DWORD PTR [edi+0x45bc63]
  4177a0:	mov    al,ds:0xccb70e3e
  4177a5:	jae    0x4177ac
  4177a7:	std    
  4177a8:	xor    al,0x2b
  4177aa:	lods   al,BYTE PTR ds:[esi]
  4177ab:	or     DWORD PTR [ebx+0x4803f05f],ecx
  4177b1:	cmp    eax,0x80553b09
  4177b6:	in     al,dx
  4177b7:	pop    edx
  4177b8:	push   esi
  4177b9:	fucomip st,st(4)
  4177bb:	pop    ecx
  4177bc:	ins    BYTE PTR es:[edi],dx
  4177bd:	mov    bh,0x54
  4177bf:	and    BYTE PTR [ecx-0x74f97b43],0xa0
  4177c6:	pop    es
  4177c7:	imul   edx,DWORD PTR [esi-0x38],0x1d
  4177cb:	sub    DWORD PTR [eax],ebp
  4177cd:	sub    edi,DWORD PTR [esi+0x71]
  4177d0:	loope  0x4177e4
  4177d2:	sbb    DWORD PTR [eax+0x61],0x17
  4177d6:	ds aad 0xfe
  4177d9:	dec    esp
  4177da:	test   al,0x17
  4177dc:	mov    edi,0x8a4d7dcd
  4177e1:	shl    al,0x74
  4177e4:	in     al,dx
  4177e5:	aas    
  4177e6:	push   ebp
  4177e7:	int3   
  4177e8:	inc    ebp
  4177e9:	icebp  
  4177ea:	jno    0x417822
  4177ec:	xor    al,0x30
  4177ee:	dec    esi
  4177ef:	push   es
  4177f0:	ss sbb ecx,ebx
  4177f3:	push   cs
  4177f4:	mov    BYTE PTR [edi+0x5b1b8f6f],cl
  4177fa:	test   BYTE PTR [eax+ecx*1],0x19
  4177fe:	inc    edx
  4177ff:	xchg   ebp,eax
  417800:	(bad)  
  417801:	push   ebp
  417802:	out    0x29,eax
  417804:	xor    eax,DWORD PTR [ebp-0x76bc5d57]
  41780a:	xchg   BYTE PTR [edx+0x632f5ea9],dl
  417810:	xchg   ebp,eax
  417811:	inc    ebx
  417812:	iret   
  417813:	jno    0x41782e
  417815:	push   esp
  417816:	icebp  
  417817:	push   esp
  417818:	outs   dx,DWORD PTR ds:[esi]
  417819:	fisttp WORD PTR [ebp-0x4e]
  41781c:	dec    esi
  41781d:	ins    DWORD PTR es:[edi],dx
  41781e:	imul   esp,DWORD PTR [esi+0x5ca33ac8],0x9c402e02
  417828:	adc    al,0xf
  41782a:	jg     0x4177f6
  41782c:	sbb    eax,0x9b000ae9
  417831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417832:	mov    esp,0x65ea45d0
  417837:	sbb    ebp,DWORD PTR [esi+0xc]
  41783a:	ret    
  41783b:	std    
  41783c:	les    esi,FWORD PTR [edi+0x3ba4cb05]
  417842:	lea    ebp,ds:0x43b227e0
  417848:	pop    ds
  417849:	(bad)  [edi]
  41784b:	sbb    BYTE PTR [ebp-0x31],0xb4
  41784f:	test   DWORD PTR [ecx],edi
  417851:	push   0xffffff81
  417853:	and    BYTE PTR [ecx],ch
  417855:	sahf   
  417856:	cmp    al,ch
  417858:	sbb    al,0x47
  41785a:	jne    0x41782d
  41785c:	lea    ebp,[ecx-0x26]
  41785f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417861:	xor    DWORD PTR [edx-0x40c51148],0x71
  417868:	(bad)  
  417869:	cli    
  41786a:	sub    BYTE PTR [esp+edx*8+0xd3bd21c],bl
  417871:	or     cl,BYTE PTR [edx+eiz*8]
  417874:	pop    ebp
  417875:	cmp    eax,0x326ba833
  41787a:	pop    ebp
  41787b:	repnz loope 0x4178ef
  41787e:	push   ebp
  41787f:	cmp    eax,0x4dc508cf
  417884:	xchg   esi,eax
  417885:	jno    0x41780a
  417887:	retf   0x606c
  41788a:	push   ebp
  41788b:	mov    eax,ds:0x83f4a0b9
  417890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417891:	push   edx
  417892:	sub    al,0xc4
  417894:	(bad)  
  417895:	jmp    0x3df45b6
  41789a:	add    eax,0x75e3e063
  41789f:	popa   
  4178a0:	ficomp DWORD PTR [ecx-0x4b1e08da]
  4178a6:	jmp    0xfd06:0x5bf8dd2d
  4178ad:	cli    
  4178ae:	push   eax
  4178af:	leave  
  4178b0:	adc    al,0x13
  4178b2:	(bad)  
  4178b3:	jl     0x41792f
  4178b5:	sbb    al,0xe9
  4178b7:	repnz mov esi,0xdcde150d
  4178bd:	xchg   cl,dl
  4178bf:	sahf   
  4178c0:	into   
  4178c1:	ret    0xbb70
  4178c4:	(bad)  
  4178c5:	test   al,0x12
  4178c7:	mov    WORD PTR [ebx],?
  4178c9:	sahf   
  4178ca:	xchg   esi,eax
  4178cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178cc:	mov    esp,0x532e680f
  4178d1:	mov    al,0xf7
  4178d3:	jge    0x4178d4
  4178d5:	aas    
  4178d6:	test   BYTE PTR [ecx],bh
  4178d8:	into   
  4178d9:	xor    al,0x18
  4178db:	add    ebp,DWORD PTR [esi+ecx*2+0x6c]
  4178df:	xchg   ebx,eax
  4178e0:	push   eax
  4178e1:	and    edi,edi
  4178e3:	sub    al,0x61
  4178e5:	leave  
  4178e6:	mov    bl,0xa6
  4178e8:	aad    0x28
  4178ea:	fimul  DWORD PTR [edi+ecx*8-0x19]
  4178ee:	sbb    dh,BYTE PTR [edx+0x5c]
  4178f1:	or     esp,DWORD PTR [edi]
  4178f3:	pop    eax
  4178f4:	out    0xc0,al
  4178f6:	(bad)  
  4178f7:	sar    BYTE PTR [ecx+edx*4+0x58],cl
  4178fb:	add    DWORD PTR [ecx],ebx
  4178fd:	and    esi,esi
  4178ff:	adc    al,0x2a
  417901:	(bad)  
  417902:	jmp    0x849e:0x27c2c2fb
  417909:	push   ecx
  41790a:	test   BYTE PTR [ecx-0x66],ch
  41790d:	lds    ebp,FWORD PTR [ecx-0x79abb749]
  417913:	ja     0x4178e9
  417915:	sbb    al,0x86
  417917:	ins    BYTE PTR es:[edi],dx
  417918:	dec    ecx
  417919:	test   al,0x35
  41791b:	loop   0x41794c
  41791d:	pop    ds
  41791e:	ja     0x417909
  417920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417921:	cwde   
  417922:	xor    ecx,DWORD PTR [edi+0x5ddc22c5]
  417928:	stc    
  417929:	push   ecx
  41792a:	test   DWORD PTR [ebp+0x32],edx
  41792d:	dec    esp
  41792e:	mov    ds:0x5668ae4c,al
  417933:	push   0xd9c80b32
  417938:	rcr    BYTE PTR [edi],cl
  41793a:	jmp    0xffab:0x854ca95d
  417941:	outs   dx,BYTE PTR ds:[esi]
  417942:	pushf  
  417943:	cmp    al,0x34
  417945:	adc    cl,BYTE PTR [ebx-0x75]
  417948:	xchg   ebx,eax
  417949:	jmp    0xcc73:0xa1f4f378
  417950:	jge    0x417958
  417952:	xchg   edx,eax
  417953:	add    BYTE PTR [ebx-0x61],ch
  417956:	in     eax,0x8a
  417958:	pmaxub mm6,QWORD PTR [edx+0x208729d2]
  41795f:	in     eax,0xf6
  417961:	aas    
  417962:	rcr    DWORD PTR [eax],1
  417964:	rol    BYTE PTR es:[eax+0x155fb79a],cl
  41796b:	mov    eax,0x71012f37
  417970:	xchg   ebp,eax
  417972:	shl    DWORD PTR [eax+0xd],0x6
  417976:	xchg   ebx,eax
  417977:	mov    esp,ebp
  417979:	sub    bh,BYTE PTR [ebp+0x200b9650]
  41797f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417980:	fwait
  417981:	jno    0x417921
  417983:	fisubr DWORD PTR cs:[esi+0x56]
  417987:	mov    dh,0x77
  417989:	cli    
  41798a:	xlat   BYTE PTR ds:[ebx]
  41798b:	outs   dx,DWORD PTR ds:[esi]
  41798c:	addr16 aad 0xaf
  41798f:	ins    DWORD PTR es:[edi],dx
  417990:	into   
  417991:	jp     0x41794b
  417993:	es pop eax
  417995:	xor    eax,0xa0b369fd
  41799a:	test   BYTE PTR [ecx],al
  41799c:	mov    esi,0x3edb
  4179a1:	add    BYTE PTR [esi],ah
  4179a3:	mov    ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x47c1de75
  4179b1:	fldcw  WORD PTR [edi+esi*8]
  4179b4:	add    BYTE PTR [eax],al
  4179b6:	cmc    
  4179b7:	add    al,0x0
  4179b9:	add    BYTE PTR [eax-0x5c089c8d],bl
  4179bf:	push   eax
  4179c0:	or     cl,cl
  4179c2:	retf   0x6b8d
  4179c5:	xor    esi,eax
  4179c7:	or     al,0x16
  4179c9:	ror    DWORD PTR [edx+0x73872db],1
  4179cf:	and    BYTE PTR [ebx-0x35],al
  4179d2:	cli    
  4179d3:	ficom  WORD PTR [eax+0x75]
  4179d6:	mov    eax,0x68ab614d
  4179db:	ds test al,0x4f
  4179de:	dec    edx
  4179df:	test   BYTE PTR [eax-0x5a4fbcd2],0xea
  4179e6:	js     0x417a0b
  4179e8:	mov    esi,0x1888630e
  4179ed:	imul   eax,esp,0x7f
  4179f0:	test   ebp,0xfaea72d5
  4179f6:	mov    dh,0xd9
  4179f8:	and    BYTE PTR [ebp-0x2b],ah
  4179fb:	pusha  
  4179fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179fd:	dec    ebp
  4179fe:	fidiv  WORD PTR [ebp+edi*2+0x0]
  417a02:	sub    dh,0xde
  417a05:	ds fwait
  417a07:	pusha  
  417a08:	or     DWORD PTR ds:0x7f19f236,eax
  417a0e:	loope  0x4179a1
  417a10:	(bad)  
  417a11:	inc    edi
  417a12:	sti    
  417a13:	fild   QWORD PTR [ebx+0x2396fc67]
  417a19:	imul   ecx,edi,0xa5266e1e
  417a1f:	jbe    0x4179f2
  417a21:	mov    ebx,ebx
  417a23:	sbb    DWORD PTR [ebx+eiz*2],esi
  417a26:	cmp    al,0xef
  417a28:	aas    
  417a29:	sub    BYTE PTR [eax+0x61521084],bl
  417a2f:	out    0x2c,eax
  417a31:	cli    
  417a32:	add    BYTE PTR [eax-0x5b],dl
  417a35:	lods   al,BYTE PTR ds:[esi]
  417a36:	leave  
  417a37:	xchg   ecx,eax
  417a38:	jno    0x4179bd
  417a3a:	xchg   esi,eax
  417a3b:	test   eax,0x778d60a1
  417a40:	mov    ah,0xb2
  417a42:	add    eax,0xe1731b75
  417a47:	jo     0x417a86
  417a49:	xor    eax,0x8f67bf84
  417a4e:	out    0x3,al
  417a50:	cdq    
  417a51:	mov    ch,0xdf
  417a53:	out    dx,eax
  417a54:	(bad)  
  417a55:	sub    eax,0xa8f44501
  417a5a:	mov    cl,0xf7
  417a5c:	dec    edi
  417a5d:	stc    
  417a5e:	(bad)  
  417a5f:	jmp    0x417a6b
  417a61:	std    
  417a62:	test   BYTE PTR [esi+0x52],ch
  417a65:	retf   0xcf1b
  417a68:	mov    esi,0xebd7ca3a
  417a6d:	repnz loopne 0x417ae9
  417a70:	in     al,dx
  417a71:	dec    eax
  417a72:	mov    ebx,0xf17bd0ef
  417a77:	inc    ecx
  417a78:	or     dh,al
  417a7a:	sbb    ecx,0x2e
  417a7d:	or     bh,BYTE PTR [edx]
  417a7f:	sbb    DWORD PTR [ebp-0x21ad060c],0x1d
  417a86:	push   ss
  417a87:	jo     0x417aaf
  417a89:	adc    eax,0xa653bfd4
  417a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a8f:	cs xchg ecx,eax
  417a91:	push   cs
  417a92:	aad    0x87
  417a94:	dec    esi
  417a95:	pushf  
  417a96:	xchg   ecx,eax
  417a97:	add    DWORD PTR [eax-0x1f],ebp
  417a9a:	adc    cl,BYTE PTR [ecx]
  417a9c:	fwait
  417a9d:	sti    
  417a9e:	inc    ebp
  417a9f:	dec    esi
  417aa0:	test   DWORD PTR [ebp+eiz*8+0xd],ecx
  417aa4:	out    0x1c,eax
  417aa6:	push   ebp
  417aa7:	call   0x7b9d:0x9872fe1
  417aae:	retf   0x4b0
  417ab1:	rol    DWORD PTR [edx+ecx*8-0x2e],cl
  417ab5:	add    edx,DWORD PTR [ecx+esi*2+0x57]
  417ab9:	lds    ebp,FWORD PTR [eax+eax*2-0x3c]
  417abd:	or     ecx,DWORD PTR ds:0xc5284162
  417ac3:	sub    ebp,edi
  417ac5:	out    0xce,eax
  417ac7:	in     eax,dx
  417ac8:	add    al,0xb1
  417aca:	mov    ds:0x229a1090,eax
  417acf:	add    DWORD PTR [edi+eax*1],edi
  417ad2:	std    
  417ad3:	push   ds
  417ad4:	mov    ebp,0x21b95ec
  417ad9:	cli    
  417ada:	pop    ds
  417adb:	pop    ecx
  417adc:	mov    cl,0xc
  417ade:	jg     0x417ae7
  417ae0:	ret    
  417ae1:	push   edx
  417ae2:	or     esp,DWORD PTR [ebx]
  417ae4:	arpl   WORD PTR [edi-0x62],sp
  417ae7:	sub    BYTE PTR [ebx+eiz*4-0x60],ah
  417aeb:	test   BYTE PTR [esp+ecx*4-0x80],bl
  417aef:	dec    edx
  417af0:	sub    dl,BYTE PTR [eax+0x33cf642a]
  417af6:	and    al,0x11
  417af8:	retf   0x7e95
  417afb:	rcl    ecx,1
  417afd:	cli    
  417afe:	outs   dx,BYTE PTR ds:[esi]
  417aff:	sub    ah,BYTE PTR [esi]
  417b01:	fcom   QWORD PTR [esi+ebx*1-0x5a]
  417b05:	je     0x417aa6
  417b07:	sbb    BYTE PTR ds:0x2268d377,ah
  417b0d:	enter  0x745f,0x83
  417b11:	add    ecx,0x7a
  417b14:	daa    
  417b15:	jns    0x417b2c
  417b17:	sub    DWORD PTR [eax],edx
  417b19:	push   esi
  417b1a:	dec    ebp
  417b1b:	or     DWORD PTR [eax],edi
  417b1d:	and    edx,esp
  417b1f:	sub    ecx,DWORD PTR [eax-0x4a]
  417b22:	cs push edi
  417b24:	icebp  
  417b25:	mov    edi,0x37e8da82
  417b2a:	fild   WORD PTR [eax+0x24]
  417b2d:	fdiv   st,st(7)
  417b2f:	mov    ebp,0xb04efa67
  417b34:	dec    ecx
  417b35:	jns    0x417b20
  417b37:	ror    DWORD PTR [eax+0x49ef0a05],1
  417b3d:	pop    ebx
  417b3e:	and    ecx,DWORD PTR [eax]
  417b40:	add    ch,BYTE PTR [ecx]
  417b42:	into   
  417b43:	sub    esi,DWORD PTR ds:[ecx-0x55c5309a]
  417b4a:	sar    BYTE PTR [edi+0x44],1
  417b4d:	adc    eax,0x6a5fba4e
  417b52:	sbb    al,0xe5
  417b54:	pop    edi
  417b55:	dec    esp
  417b56:	inc    edi
  417b57:	pop    esp
  417b58:	sbb    eax,ebx
  417b5a:	inc    ebp
  417b5b:	ss pop eax
  417b5d:	je     0x417af5
  417b5f:	rcr    DWORD PTR [ecx+0x10],1
  417b62:	xchg   DWORD PTR [edi],esi
  417b64:	mov    ds:0xf47b6fc9,al
  417b69:	rol    BYTE PTR [edi+0x38744523],cl
  417b6f:	push   cs
  417b70:	xor    esi,esp
  417b72:	fcomip st,st(5)
  417b74:	jnp    0x417be6
  417b76:	ret    0x1e97
  417b79:	mov    ebp,0x15316921
  417b7e:	or     al,0xee
  417b80:	fnstsw WORD PTR [esi+0x42]
  417b83:	mov    edi,0x71ba5ee4
  417b88:	int3   
  417b89:	repz (bad) 
  417b8b:	xor    al,0x7e
  417b8d:	nop
  417b8e:	pop    ecx
  417b8f:	xchg   edi,eax
  417b90:	les    eax,FWORD PTR [eax]
  417b92:	ja     0x417b79
  417b94:	jbe    0x417b4e
  417b96:	inc    edx
  417b98:	mov    WORD PTR [eax+0x49],ss
  417b9b:	push   eax
  417b9c:	inc    esp
  417b9d:	add    DWORD PTR [ebp-0x5c49f83d],ecx
  417ba3:	(bad)  
  417ba4:	xchg   ecx,eax
  417ba5:	(bad)  
  417ba6:	call   0xa33cfc53
  417bab:	jecxz  0x417b3d
  417bad:	sub    DWORD PTR [ebx+0x4a],esp
  417bb0:	sbb    al,0x3f
  417bb2:	retf   0x38ae
  417bb5:	adc    DWORD PTR [ebx+0x3],esp
  417bb8:	aas    
  417bb9:	test   DWORD PTR [ecx+0xf],edx
  417bbc:	out    0xac,al
  417bbe:	sbb    al,0xd
  417bc0:	xchg   ebx,eax
  417bc1:	popa   
  417bc2:	gs cmc 
  417bc4:	stc    
  417bc5:	icebp  
  417bc6:	jge    0x417bd9
  417bc8:	mov    ebx,0x2a664304
  417bcd:	cmp    al,0xd3
  417bcf:	inc    ecx
  417bd0:	sbb    eax,0x47531c74
  417bd5:	iret   
  417bd6:	jns    0x417c41
  417bd8:	dec    edx
  417bd9:	jo     0x417b78
  417bdb:	sub    ch,dl
  417bdd:	cmp    BYTE PTR [edi+0x33],dl
  417be0:	sub    BYTE PTR [esi-0x6b51a945],cl
  417be6:	adc    BYTE PTR [edi+ebp*1],bh
  417be9:	aam    0xf6
  417beb:	jle    0x417c29
  417bed:	(bad)  
  417bef:	mov    eax,ds:0xc3ab70ba
  417bf4:	xchg   edi,eax
  417bf5:	and    ebp,eax
  417bf7:	mov    ah,0x72
  417bf9:	int    0xf1
  417bfb:	test   BYTE PTR [edi-0x5c256a2b],al
  417c01:	shl    BYTE PTR [esi],cl
  417c03:	jne    0x417c12
  417c05:	shl    DWORD PTR [ecx-0x19],cl
  417c08:	push   ebp
  417c09:	iret   
  417c0a:	test   DWORD PTR [esi+0x1a],esp
  417c0d:	push   es
  417c0e:	lods   eax,DWORD PTR ds:[esi]
  417c0f:	dec    eax
  417c10:	(bad)  
  417c11:	jb     0x417b93
  417c13:	pop    esp
  417c14:	das    
  417c15:	and    eax,0x7bca7f7b
  417c1a:	mov    al,ds:0x753d021
  417c1f:	push   ecx
  417c20:	out    0xe7,al
  417c22:	fwait
  417c23:	and    DWORD PTR [esi+0x53],edi
  417c26:	push   0xffffffa1
  417c28:	sbb    BYTE PTR [ecx+eiz*2],bh
  417c2b:	dec    edx
  417c2c:	mov    eax,ss:0x901b7d30
  417c32:	nop
  417c33:	sahf   
  417c34:	mov    esi,0xa50bfc98
  417c39:	jno    0x417c93
  417c3b:	cs aam 0x63
  417c3e:	sbb    BYTE PTR [edx+eax*2],bl
  417c41:	aad    0xf
  417c43:	test   eax,0x81f155e2
  417c48:	and    eax,DWORD PTR [edi-0x43794f63]
  417c4e:	and    bl,BYTE PTR [ecx+0xf]
  417c51:	xchg   edi,eax
  417c52:	(bad)  
  417c53:	fs pop edx
  417c55:	cmp    DWORD PTR [ebp-0x10],ebx
  417c58:	jbe    0x417c4c
  417c5a:	call   0xb04be3c0
  417c5f:	jecxz  0x417c73
  417c61:	outs   dx,DWORD PTR ds:[esi]
  417c62:	pop    ecx
  417c63:	xor    al,0xfc
  417c65:	aam    0x1e
  417c67:	mov    ebp,0xa1a1fd02
  417c6c:	jmp    0x64d7:0x3798b209
  417c73:	sub    al,0xf9
  417c75:	fimul  WORD PTR [ecx+0x2cdc4ced]
  417c7b:	add    al,0x9f
  417c7d:	nop
  417c7e:	xor    BYTE PTR [ebx],0x15
  417c81:	lods   eax,DWORD PTR ds:[esi]
  417c82:	jp     0x417cf5
  417c84:	sar    ch,0xb4
  417c87:	(bad)  
  417c88:	hlt    
  417c89:	clc    
  417c8a:	rcr    esp,cl
  417c8c:	fdiv   st,st(6)
  417c8e:	imul   ecx,DWORD PTR [ecx+0xa641f87],0xaaf9d400
  417c98:	jne    0x417cdd
  417c9a:	test   eax,0xb43a379c
  417c9f:	adc    dh,BYTE PTR [ebx]
  417ca1:	loop   0x417c91
  417ca3:	dec    ebp
  417ca4:	pop    ebx
  417ca6:	fs (bad) 
  417ca8:	adc    dl,dh
  417caa:	mov    ds:0x995425b4,al
  417caf:	xor    al,0x97
  417cb1:	ds into 
  417cb3:	mov    ds:0xab9386f8,eax
  417cb8:	push   ebx
  417cb9:	push   cs
  417cba:	cmp    DWORD PTR [esi],ebp
  417cbc:	sbb    DWORD PTR [edi],0xad727716
  417cc2:	and    BYTE PTR [ecx],cl
  417cc4:	out    dx,eax
  417cc5:	pop    ecx
  417cc6:	sub    DWORD PTR [ecx],0x2c
  417cc9:	mov    edi,0x189b4bdc
  417cce:	aam    0x1
  417cd0:	cmp    al,0x53
  417cd2:	xor    eax,0xfa7f7afb
  417cd7:	mov    esp,0x798c9689
  417cdc:	xchg   ebx,eax
  417cdd:	aas    
  417cde:	push   edx
  417cdf:	pop    edi
  417ce0:	sub    cl,BYTE PTR [esi+0x5b16febf]
  417ce6:	cmp    al,0x18
  417ce8:	cmc    
  417ce9:	push   ss
  417cea:	or     eax,0xe81a2cc5
  417cef:	sub    ah,BYTE PTR [edx]
  417cf1:	or     BYTE PTR [ecx],ch
  417cf3:	xchg   BYTE PTR [edx+0x43],cl
  417cf6:	es gs in eax,0xf
  417cfa:	or     DWORD PTR [esp+ecx*4-0x36605080],ecx
  417d01:	adc    ah,BYTE PTR [ecx]
  417d03:	test   eax,0x271e3b3
  417d08:	jno    0x417d54
  417d0a:	xor    ah,ah
  417d0c:	xchg   esi,eax
  417d0d:	mov    ah,0x45
  417d0f:	mov    ecx,0x3a44a52f
  417d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d15:	test   eax,ecx
  417d17:	jmp    0x417d1e
  417d19:	pop    ebx
  417d1a:	test   BYTE PTR [ebx-0x298efb99],bh
  417d20:	aad    0x2e
  417d22:	gs or  eax,0x33df94ae
  417d28:	dec    ebx
  417d29:	lds    ecx,FWORD PTR [esi]
  417d2b:	sbb    dh,BYTE PTR [ebp-0x2c]
  417d2e:	adc    esp,DWORD PTR [esi]
  417d30:	out    0x3b,al
  417d32:	xchg   edi,eax
  417d33:	(bad)  
  417d34:	inc    esp
  417d35:	add    ebp,DWORD PTR [edx-0x35]
  417d38:	push   edx
  417d39:	cmp    al,0x1e
  417d3b:	shr    BYTE PTR [edx],1
  417d3d:	scas   eax,DWORD PTR es:[edi]
  417d3e:	lock and ecx,0xff70da09
  417d45:	scas   al,BYTE PTR es:[edi]
  417d46:	push   ebx
  417d47:	dec    esi
  417d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d49:	out    dx,eax
  417d4a:	iret   
  417d4b:	inc    edx
  417d4c:	cli    
  417d4d:	call   0x85b1:0x78818d23
  417d54:	fisttp QWORD PTR [esi+0x1]
  417d57:	ret    
  417d58:	in     al,dx
  417d59:	inc    esi
  417d5a:	aas    
  417d5b:	mov    BYTE PTR [edi-0x72],al
  417d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d5f:	sar    DWORD PTR [ecx+eiz*2-0x27],0xe2
  417d64:	repz das 
  417d66:	fwait
  417d67:	adc    al,0x48
  417d69:	pop    ds
  417d6a:	mov    bl,0xa3
  417d6c:	sahf   
  417d6d:	xchg   edi,eax
  417d6e:	ins    BYTE PTR es:[edi],dx
  417d6f:	mov    esp,0xdcdbf473
  417d74:	add    BYTE PTR [eax+0x7b],0xad
  417d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d79:	add    BYTE PTR [ecx],ah
  417d7b:	sahf   
  417d7c:	push   0x8ce66ca8
  417d81:	dec    esi
  417d82:	ins    BYTE PTR es:[edi],dx
  417d83:	in     eax,dx
  417d84:	inc    edi
  417d85:	push   cs
  417d86:	jmp    0x417da6
  417d88:	out    dx,eax
  417d89:	pop    ebx
  417d8a:	fldenv [ebx+0x8274fd9]
  417d90:	mov    ecx,0xf7ca6ccd
  417d95:	(bad)  [esi-0x2317f8e8]
  417d9b:	jo     0x417de5
  417d9d:	out    dx,eax
  417d9e:	ja     0x417dfe
  417da0:	sahf   
  417da1:	push   ebx
  417da2:	xchg   esp,eax
  417da3:	pop    esi
  417da4:	add    dh,BYTE PTR [esi+0x43f3299]
  417daa:	fisttp WORD PTR [ebx]
  417dac:	pop    ebx
  417dad:	adc    al,0xf4
  417daf:	nop
  417db0:	or     edi,ecx
  417db2:	xchg   esi,esp
  417db4:	push   edi
  417db5:	cwde   
  417db6:	xchg   edi,eax
  417db7:	ret    0x92e4
  417dba:	cmp    eax,0xee030cc9
  417dbf:	mov    cl,BYTE PTR [ecx]
  417dc1:	(bad)  
  417dc2:	push   eax
  417dc3:	and    eax,0xc1330751
  417dc8:	ret    0xe5ca
  417dcb:	add    eax,0x3af5732c
  417dd0:	sbb    eax,0x4090dede
  417dd5:	arpl   WORD PTR [edi-0xf],sp
  417dd8:	in     eax,dx
  417dd9:	jl     0x417e22
  417ddb:	push   ebx
  417ddc:	imul   DWORD PTR [eax+0x73]
  417ddf:	push   eax
  417de0:	(bad)  
  417de1:	sbb    esp,esp
  417de3:	adc    al,0x85
  417de5:	mov    dl,0x21
  417de7:	and    al,0xc0
  417de9:	(bad)  
  417dea:	or     al,0x89
  417dec:	fs adc eax,0x48c96bc2
  417df2:	cld    
  417df3:	adc    al,0x1b
  417df5:	into   
  417df6:	fnsave [eax+eiz*8]
  417df9:	add    ebp,eax
  417dfb:	std    
  417dfc:	pop    ds
  417dfd:	aam    0x0
  417dff:	xchg   ebp,eax
  417e00:	call   0x32e3:0xbe478417
  417e07:	xor    DWORD PTR [ebx],edx
  417e09:	push   ecx
  417e0a:	mov    edi,0x563cbeff
  417e0f:	ds push ds
  417e11:	in     al,0x24
  417e13:	mov    bh,0x57
  417e15:	sub    DWORD PTR [ebp-0x456d10a1],ecx
  417e1b:	in     al,0x7d
  417e1d:	leave  
  417e1e:	out    dx,al
  417e1f:	jmp    0x55a7:0xbfc1fc29
  417e26:	and    eax,0xf0d78fb9
  417e2b:	fdiv   QWORD PTR [edi]
  417e2d:	int    0x7b
  417e2f:	adc    edx,edx
  417e31:	in     al,dx
  417e32:	adc    DWORD PTR ds:0x802319d2,ecx
  417e38:	test   edx,esp
  417e3a:	mov    dl,BYTE PTR [esp+edx*4+0x19e9c1fe]
  417e41:	or     al,0x32
  417e43:	dec    eax
  417e44:	dec    edx
  417e45:	mov    esp,0xf7807149
  417e4a:	clc    
  417e4b:	cmp    edx,esp
  417e4d:	pushf  
  417e4e:	mov    cl,0xae
  417e50:	rcr    ebp,1
  417e52:	sub    dh,dh
  417e54:	sub    dh,BYTE PTR [ebp-0x5]
  417e57:	adc    BYTE PTR fs:[eax+ebx*1+0x761a9d85],bl
  417e5f:	ror    BYTE PTR ds:0xcfe31684,1
  417e65:	mov    ds,WORD PTR ds:0x109a9064
  417e6b:	sub    BYTE PTR [esi+0x4d],0x27
  417e6f:	bound  ecx,QWORD PTR [ebx-0x61b10e58]
  417e75:	jge    0x417e7a
  417e77:	fisubr DWORD PTR cs:[ebx]
  417e7a:	aas    
  417e7b:	push   0x7a
  417e7d:	xchg   ecx,eax
  417e7e:	mov    al,ds:0x845dbcb6
  417e83:	or     dl,dh
  417e85:	push   ss
  417e86:	mov    esi,0x30427a94
  417e8b:	lods   eax,DWORD PTR ds:[esi]
  417e8c:	or     DWORD PTR [eax+0x216729b7],0x5dafe5b3
  417e96:	jae    0x417e5f
  417e98:	lock ret 0x3d30
  417e9c:	imul   DWORD PTR [esi-0x39]
  417e9f:	mov    WORD PTR [ebp-0x36e2dff8],?
  417ea5:	and    esp,DWORD PTR [edi]
  417ea7:	lods   eax,DWORD PTR ds:[esi]
  417ea8:	push   ss
  417ea9:	jne    0x417f1d
  417eab:	inc    ebx
  417eac:	or     edi,DWORD PTR [eax+0x81]
  417eb2:	ret    0x939e
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	paddw  mm6,QWORD PTR [edi-0x3dea3c7]
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	cmc    
  417ec7:	add    al,0x0
  417ec9:	add    BYTE PTR [ebx+0x3b9fd7de],bl
  417ecf:	aam    0xad
  417ed1:	or     DWORD PTR [eax-0x195d958c],ebx
  417ed7:	(bad)  
  417ed8:	fcom   QWORD PTR [ecx]
  417eda:	rol    DWORD PTR [edx],0xd5
  417edd:	xchg   edx,eax
  417ede:	mov    ch,0x43
  417ee0:	cld    
  417ee1:	pop    ss
  417ee2:	xlat   BYTE PTR ds:[ebx]
  417ee3:	inc    edi
  417ee4:	inc    ebp
  417ee5:	inc    esi
  417ee6:	cmp    ebx,edx
  417ee8:	jmp    0x417f5e
  417eea:	and    eax,0x161281a6
  417eef:	sub    BYTE PTR [eax+esi*1],al
  417ef2:	dec    ebp
  417ef3:	inc    esp
  417ef4:	adc    eax,ebx
  417ef6:	mov    ds:0x24f064f8,eax
  417efb:	scas   eax,DWORD PTR es:[edi]
  417efc:	lahf   
  417efd:	xor    DWORD PTR [ebx+0x2405377f],esi
  417f03:	js     0x417ea1
  417f05:	into   
  417f06:	ss inc edi
  417f08:	(bad)  
  417f09:	mov    edx,0xb7b9b369
  417f0e:	fdivr  QWORD PTR [ebx+edi*8+0x60715932]
  417f15:	repnz fs mov dh,0xb0
  417f19:	jge    0x417f19
  417f1b:	mov    WORD PTR [esi-0x68],?
  417f1e:	dec    edx
  417f1f:	lahf   
  417f20:	out    dx,al
  417f21:	hlt    
  417f22:	pop    ebx
  417f23:	js     0x417ec9
  417f25:	imul   ebx,DWORD PTR [edi+eiz*8+0x4b],0x82070eba
  417f2d:	cmp    ebp,esi
  417f2f:	pop    esp
  417f30:	mov    dh,0x59
  417f32:	xchg   ebp,eax
  417f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f34:	mov    dl,cl
  417f36:	xchg   edx,eax
  417f37:	xchg   edx,eax
  417f38:	inc    ecx
  417f39:	cmp    BYTE PTR [ecx],bh
  417f3b:	cmp    al,ah
  417f3d:	cmp    eax,0xba1d933e
  417f42:	sti    
  417f43:	stos   BYTE PTR es:[edi],al
  417f44:	mov    cl,0x3
  417f46:	jae    0x417fbe
  417f48:	push   edi
  417f49:	and    ah,0xa4
  417f4c:	push   0xe
  417f4e:	cmp    al,0x2c
  417f50:	ret    
  417f51:	or     eax,0xbf8acf29
  417f56:	mov    ebx,0xb4dd4bf0
  417f5b:	dec    esp
  417f5c:	btr    DWORD PTR [ebp+ecx*8-0x34],ecx
  417f61:	int    0xd3
  417f63:	jge    0x417f01
  417f65:	in     eax,dx
  417f66:	or     eax,esi
  417f68:	test   BYTE PTR [esi],ah
  417f6a:	xor    al,cl
  417f6c:	je     0x417f49
  417f6e:	fistp  DWORD PTR [edx+0x70ccd5db]
  417f74:	into   
  417f75:	cld    
  417f76:	pop    esi
  417f77:	push   ss
  417f78:	sar    BYTE PTR [edx+0x5c0ed135],1
  417f7e:	mov    ds:0x96e672c3,eax
  417f83:	js     0x417ff6
  417f85:	mov    ecx,0x443ee335
  417f8a:	shr    DWORD PTR [ebx+0x4ab75216],1
  417f90:	add    esi,esp
  417f92:	test   BYTE PTR [ecx+0x5e6272dc],cl
  417f98:	out    0x89,eax
  417f9a:	loop   0x418010
  417f9c:	imul   ebp,DWORD PTR [ebx+0xfbe8591],0xdc95ea5c
  417fa6:	test   DWORD PTR [ecx+ecx*4+0x3d],edi
  417faa:	mov    ebx,0xfeb602c2
  417faf:	push   edi
  417fb0:	mov    ds:0x736db374,al
  417fb5:	retf   
  417fb6:	pop    es
  417fb7:	xchg   ecx,eax
  417fb8:	sub    BYTE PTR [edx-0x4d9b2096],0x23
  417fbf:	ja     0x41801e
  417fc1:	imul   sp,WORD PTR [eax+0x76],0x26
  417fc6:	cwde   
  417fc7:	dec    ebx
  417fc8:	push   0x55e80d70
  417fcd:	into   
  417fce:	stc    
  417fcf:	fadd   QWORD PTR [ebp+0x2e20c8b0]
  417fd5:	jmp    0x417fc0
  417fd7:	xor    eax,ecx
  417fd9:	jl     0x418057
  417fdb:	mov    ecx,0xd4231349
  417fe0:	jl     0x417f9b
  417fe2:	lods   eax,DWORD PTR ds:[esi]
  417fe3:	lahf   
  417fe4:	mov    ds:0xdf8a79b1,al
  417fe9:	sbb    eax,0xd54255c8
  417fee:	cs cli 
  417ff0:	mov    edi,eax
  417ff2:	and    DWORD PTR [ebx+ebp*1],edx
  417ff5:	cmp    al,0xdf
  417ff7:	xchg   ebp,eax
  417ff8:	pop    edi
  417ff9:	inc    esp
  417ffa:	enter  0xd28e,0xf7
  417ffe:	cli    
  417fff:	popf   
  418000:	xor    DWORD PTR [ecx+0x2d],0x56
  418004:	pop    edx
  418005:	mul    edi
  418007:	retf   
  418008:	push   cs
  418009:	cmc    
  41800a:	or     al,0x13
  41800c:	xor    al,0x38
  41800e:	fsubr  QWORD PTR [ebx+0x47092476]
  418014:	in     al,dx
  418015:	add    DWORD PTR [edx+0x13b6c3ca],ebx
  41801b:	std    
  41801c:	pop    eax
  41801d:	xchg   ebx,eax
  41801e:	mov    ecx,0xa7057c92
  418023:	sub    BYTE PTR [edx-0x54],al
  418026:	push   es
  418027:	adc    eax,0x9168a2e5
  41802c:	leave  
  41802d:	inc    ecx
  41802e:	(bad)  
  41802f:	sahf   
  418030:	ret    0xa77f
  418033:	aaa    
  418034:	inc    edi
  418035:	call   0x67ed:0x916fdfe1
  41803c:	inc    ebp
  41803d:	pop    ebx
  41803e:	and    BYTE PTR [edx+0x66d8f654],ch
  418044:	and    ah,cl
  418046:	mov    ecx,0xfa773593
  41804b:	aad    0x6e
  41804d:	sub    edi,DWORD PTR [ebp+0x77]
  418050:	and    ch,ch
  418052:	sbb    BYTE PTR [edi+0x3d8dddb4],ch
  418058:	dec    esp
  418059:	retf   
  41805a:	lock mov al,0x3d
  41805d:	xchg   esp,eax
  41805e:	pop    esp
  41805f:	rcl    DWORD PTR [ecx+0x6de8d90a],cl
  418065:	jbe    0x4180e6
  418067:	jae    0x4180a6
  418069:	jmp    0x20f5:0x5952a057
  418070:	repz rol BYTE PTR [edx+0x6f],1
  418074:	leave  
  418075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418076:	jmp    0x2630b6c2
  41807b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41807c:	mov    al,ds:0xf143d6c7
  418081:	pushf  
  418082:	fdivr  DWORD PTR [edx+0x77b53aa6]
  418088:	(bad)  
  418089:	push   ds
  41808a:	pop    ds
  41808b:	imul   ecx,DWORD PTR [eax+0x63],0x49
  41808f:	inc    esi
  418090:	xchg   ebp,edx
  418092:	std    
  418093:	js     0x418052
  418095:	xchg   ebp,eax
  418096:	popa   
  418097:	jne    0x4180b1
  418099:	sbb    eax,0xacb39ba6
  41809e:	call   0xf744:0xc3f4a25d
  4180a5:	dec    esp
  4180a6:	fdivr  QWORD PTR [edx]
  4180a8:	inc    esp
  4180a9:	sti    
  4180aa:	daa    
  4180ab:	dec    ebp
  4180ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ad:	sbb    al,0xd3
  4180af:	cli    
  4180b0:	jmp    0x418057
  4180b2:	ins    BYTE PTR es:[edi],dx
  4180b3:	repz push ecx
  4180b5:	mov    WORD PTR ds:0x23aec234,cs
  4180bb:	jb     0x4180e0
  4180bd:	jnp    0x418084
  4180bf:	fsubr  st,st(2)
  4180c1:	mov    esi,0xf38f70b2
  4180c6:	push   esp
  4180c7:	into   
  4180c8:	or     al,0xcc
  4180ca:	call   0x5a5383e6
  4180cf:	cmovns edi,DWORD PTR [edx+0x397d186c]
  4180d6:	test   eax,0x281679c1
  4180db:	jmp    0x8cb9b71c
  4180e0:	daa    
  4180e1:	inc    ebx
  4180e2:	movzx  ebx,BYTE PTR [edx+edx*2]
  4180e6:	xor    bh,BYTE PTR [esi-0x4]
  4180e9:	mov    ds:0x99f1ca13,al
  4180ee:	rol    DWORD PTR [ebp-0x5e7fec68],0x3a
  4180f5:	sti    
  4180f6:	jl     0x4180c0
  4180f8:	mov    bl,BYTE PTR [esi+0xd558acd]
  4180fe:	jmp    0x269:0x1e54cc98
  418105:	and    esp,DWORD PTR [edx]
  418107:	cmp    DWORD PTR [eax+0x73],eax
  41810a:	mov    dl,0xd1
  41810c:	loop   0x4180e2
  41810e:	cmp    ah,BYTE PTR [edx]
  418110:	pop    ebp
  418111:	push   cs
  418112:	fild   QWORD PTR [ecx+0x3516c967]
  418118:	rol    BYTE PTR [edx-0x77],0xc3
  41811c:	es mov ch,0xb4
  41811f:	add    ecx,DWORD PTR [ecx]
  418121:	mov    eax,DWORD PTR [edx-0x6fcc679b]
  418127:	mov    ds:0x9fe32674,eax
  41812c:	call   0xee44:0x98207710
  418133:	je     0x418182
  418135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418136:	in     eax,dx
  418137:	dec    ebp
  418138:	jb     0x418177
  41813a:	ins    BYTE PTR es:[edi],dx
  41813b:	and    BYTE PTR [ebp-0x43],dl
  41813e:	or     eax,0xd874987d
  418143:	and    BYTE PTR [esp+edi*2-0x27],ah
  418147:	popf   
  418148:	xchg   edx,eax
  418149:	(bad)  
  41814a:	(bad)  
  41814b:	gs push esi
  41814d:	cmp    al,0xf8
  41814f:	pop    esp
  418150:	bound  ecx,QWORD PTR [esi+ecx*1-0x31aeb2f9]
  418157:	pop    es
  418158:	shl    BYTE PTR [edx+0x11],cl
  41815b:	and    edx,DWORD PTR [ebp-0x1ce653d0]
  418161:	(bad)  
  418162:	clc    
  418163:	nop
  418164:	sahf   
  418165:	and    edx,ebp
  418167:	dec    edx
  418168:	xor    bh,BYTE PTR [edx]
  41816a:	int3   
  41816b:	cwde   
  41816c:	cmp    al,BYTE PTR [ebx]
  41816e:	dec    esp
  41816f:	inc    ecx
  418170:	mov    cl,BYTE PTR [eax-0x38d23905]
  418176:	ins    DWORD PTR es:[edi],dx
  418177:	jmp    0x3682:0xf220a71f
  41817e:	retf   
  41817f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418180:	data16 mov al,ds:0xdbd0512a
  418186:	mov    eax,ds:0x5e8d5624
  41818b:	jo     0x4181cc
  41818d:	arpl   WORD PTR [edx+0x14],bp
  418190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418191:	cmp    ebx,DWORD PTR [ecx-0x166af750]
  418197:	jmp    0x9f2f:0xa5be2a0f
  41819e:	jp     0x4181fb
  4181a0:	jb     0x418200
  4181a2:	mov    esi,0xfe1f7cdb
  4181a7:	jbe    0x4181a2
  4181a9:	stos   BYTE PTR es:[edi],al
  4181aa:	push   edi
  4181ab:	xchg   dh,cl
  4181ad:	xor    BYTE PTR ds:0x6d491ff2,bh
  4181b3:	pop    edx
  4181b4:	or     al,0xa1
  4181b6:	mov    dh,0x1d
  4181b8:	into   
  4181b9:	outs   dx,BYTE PTR ds:[esi]
  4181ba:	inc    esp
  4181bb:	fiadd  WORD PTR [edi+0x5d35b01]
  4181c1:	sar    esp,1
  4181c3:	sti    
  4181c4:	dec    edx
  4181c5:	xchg   ebp,eax
  4181c6:	cld    
  4181c7:	inc    ebp
  4181c8:	jg     0x41816e
  4181ca:	mov    ah,0xeb
  4181cc:	mov    BYTE PTR [edx+eiz*2+0x3d],al
  4181d0:	shr    BYTE PTR [ebp+0x17],0xbd
  4181d4:	pop    edi
  4181d5:	adc    al,0x0
  4181d7:	jmp    0x418251
  4181d9:	ret    0x50eb
  4181dc:	jo     0x4181f9
  4181de:	loope  0x4181f1
  4181e0:	jmp    FWORD PTR cs:[ebx+0x10c666ce]
  4181e7:	push   ebp
  4181e8:	and    BYTE PTR [esi+0x243d9d52],dh
  4181ee:	push   eax
  4181ef:	cmp    eax,ebx
  4181f1:	ins    DWORD PTR es:[edi],dx
  4181f2:	lea    ebp,[eax+edx*4+0x47f4e67e]
  4181f9:	out    0xb7,eax
  4181fb:	cmp    BYTE PTR [edx+0x62c08e8f],ah
  418201:	push   0x5f88545a
  418206:	shl    DWORD PTR [ebp+0x6b0a1b2e],0x83
  41820d:	and    DWORD PTR [edi-0x2f],eax
  418210:	jecxz  0x4181ac
  418212:	jmp    0x418240
  418214:	nop
  418215:	sub    dl,dh
  418217:	fmul   st(0),st
  418219:	xor    eax,0xbd179c0a
  41821e:	div    DWORD PTR [ebx-0x219c8ae4]
  418224:	test   DWORD PTR [edi-0x1],0xfb059eee
  41822b:	and    DWORD PTR [esi],0x7dedd707
  418231:	aas    
  418232:	test   eax,0x502356f4
  418237:	dec    ebx
  418238:	fstp   QWORD PTR [bx+di]
  41823b:	lds    ecx,FWORD PTR [ebp-0x2f]
  41823e:	mov    eax,ds:0xce862588
  418243:	xor    DWORD PTR [ecx],esp
  418245:	sbb    eax,0x6f9a5cd9
  41824a:	ret    
  41824b:	enter  0xd3ae,0xb4
  41824f:	rcr    dl,1
  418251:	dec    edx
  418252:	std    
  418253:	out    0xc9,al
  418255:	icebp  
  418256:	push   esi
  418257:	jg     0x41825f
  418259:	adc    al,0x5a
  41825b:	inc    ecx
  41825c:	dec    edi
  41825d:	cli    
  41825e:	out    dx,al
  41825f:	add    edx,DWORD PTR [ecx+0x31]
  418262:	dec    ebp
  418263:	add    BYTE PTR [ebx+0x5],ch
  418266:	fisub  DWORD PTR [eax+0x64]
  418269:	into   
  41826a:	lea    edi,[edi+0x12]
  41826d:	cdq    
  41826e:	call   0x26e6973e
  418273:	mov    eax,0xff490dce
  418278:	adc    DWORD PTR [eax+0x21657cd4],edx
  41827e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41827f:	sub    ch,bl
  418281:	popa   
  418282:	popa   
  418283:	inc    esp
  418284:	jae    0x4182de
  418286:	pusha  
  418287:	into   
  418288:	leave  
  418289:	inc    eax
  41828a:	es xor al,0xd5
  41828d:	mov    eax,0x8f2aa5d2
  418292:	jne    0x418240
  418294:	jnp    0x418283
  418296:	and    eax,0x9f20bad8
  41829b:	cmp    al,0x96
  41829d:	push   ss
  41829e:	mov    al,0xdc
  4182a0:	and    ecx,DWORD PTR [ecx-0x3]
  4182a3:	loope  0x418314
  4182a5:	fcomp  QWORD PTR [edi+ebp*4+0x1f]
  4182a9:	bndstx [esi],(bad)
  4182ac:	cmp    BYTE PTR [edx+0x7a],dh
  4182af:	mov    edx,0x305409af
  4182b4:	or     al,0xb4
  4182b6:	or     DWORD PTR [esi+eax*8+0x29ef7c84],0xffffff8e
  4182be:	es in  al,0x8b
  4182c1:	test   BYTE PTR [edx+0x61b8d569],ah
  4182c7:	outs   dx,BYTE PTR ds:[esi]
  4182c8:	cmp    dh,bh
  4182ca:	pop    esp
  4182cb:	pushf  
  4182cc:	dec    eax
  4182cd:	xor    DWORD PTR [esi+0x2a],eax
  4182d0:	dec    ecx
  4182d1:	mov    ecx,0x9ee86091
  4182d6:	xchg   esi,eax
  4182d7:	push   cs
  4182d8:	xchg   BYTE PTR [esi],ah
  4182da:	xchg   ebx,eax
  4182db:	xchg   edi,eax
  4182dc:	repz jmp 0xb8fe:0x4fb39ac5
  4182e4:	inc    eax
  4182e5:	pop    eax
  4182e6:	call   0xd487:0x47abfc27
  4182ed:	dec    esi
  4182ee:	pushf  
  4182ef:	out    0x8d,al
  4182f1:	fxch   st(4)
  4182f3:	add    eax,0xfd4ea91a
  4182f8:	ficom  WORD PTR [ecx+0x74]
  4182fb:	daa    
  4182fc:	rcl    DWORD PTR ss:[ebp-0x76],0x3b
  418301:	inc    edx
  418302:	into   
  418303:	mov    al,0xe1
  418305:	stos   BYTE PTR es:[edi],al
  418306:	pop    edx
  418307:	stos   DWORD PTR es:[edi],eax
  418308:	mov    cl,0x88
  41830a:	mov    edx,0xe25d2134
  41830f:	test   edx,esi
  418311:	push   ds
  418312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418313:	mov    ebp,esi
  418315:	xchg   BYTE PTR [esi],dl
  418317:	push   0xffffff86
  418319:	cld    
  41831a:	push   ecx
  41831b:	and    al,0x7f
  41831d:	(bad)  
  41831f:	loopne 0x4182f8
  418321:	mov    ebp,0x7bd80910
  418326:	jp     0x4182d5
  418328:	sbb    eax,DWORD PTR [ebp-0x10]
  41832b:	cmp    BYTE PTR [ebx],cl
  41832d:	(bad)  
  41832e:	pop    ecx
  41832f:	push   ss
  418330:	div    BYTE PTR cs:[ebp+edi*2-0x4b337994]
  418338:	sbb    bh,BYTE PTR [esi]
  41833a:	fcmovu st,st(2)
  41833c:	(bad)  
  41833d:	mov    cl,0x98
  41833f:	mov    ch,dh
  418341:	std    
  418342:	xor    DWORD PTR [eax],ebx
  418344:	sub    bh,BYTE PTR [edi-0x3f046711]
  41834a:	out    dx,al
  41834b:	mov    bh,0xaf
  41834d:	popa   
  41834e:	mov    edx,0xbb05106
  418353:	in     al,dx
  418354:	cmp    DWORD PTR [edi+eiz*1],edx
  418357:	mov    WORD PTR [esi+0x5482a6e8],ss
  41835d:	das    
  41835e:	xor    eax,0xb1c43e53
  418363:	cmp    BYTE PTR [ecx],bl
  418365:	shl    BYTE PTR [eax],cl
  418367:	stc    
  418368:	stc    
  418369:	push   ebx
  41836a:	sub    edi,ebp
  41836c:	shr    DWORD PTR [ebx-0x753e350],0xf9
  418373:	xor    al,0x84
  418375:	push   edx
  418376:	inc    ebp
  418377:	retf   
  418378:	inc    ecx
  418379:	mov    ah,0xdb
  41837b:	mov    ah,0xaf
  41837d:	sti    
  41837e:	jbe    0x418314
  418380:	mov    BYTE PTR [ebp-0x30],cl
  418383:	mov    dl,0x7e
  418385:	mul    BYTE PTR [eax+0x60]
  418388:	or     esi,DWORD PTR [ebx+0x47]
  41838b:	repnz push ds
  41838d:	in     eax,0xfd
  41838f:	js     0x41837c
  418391:	mov    eax,0x3e3590b1
  418396:	and    ecx,ebx
  418398:	add    edx,edx
  41839a:	dec    ecx
  41839b:	sub    eax,edx
  41839d:	loop   0x418389
  41839f:	popa   
  4183a0:	mov    al,0x6d
  4183a2:	xlat   BYTE PTR ds:[ebx]
  4183a3:	hlt    
  4183a4:	fisub  WORD PTR [esi]
  4183a6:	inc    eax
  4183a7:	pop    ss
  4183a8:	jp     0x41834e
  4183aa:	add    ch,al
  4183ac:	ret    0x4d2e
  4183af:	adc    eax,0xd70b9ded
  4183b4:	xor    eax,0xe767c708
  4183b9:	push   ebx
  4183ba:	rol    BYTE PTR [esi+0x5c5d82],cl
  4183c0:	add    BYTE PTR [eax],al
  4183c2:	xchg   esi,eax
  4183c3:	cmp    eax,0xffebb562
  4183c8:	xlat   BYTE PTR ds:[ebx]
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	cmp    DWORD PTR [ebx+0x163595f6],0x1
  4183d4:	add    DWORD PTR [eax],eax
  4183d6:	cmc    
  4183d7:	add    al,0x0
  4183d9:	add    BYTE PTR [ecx-0x1b],dl
  4183dc:	xchg   esp,eax
  4183dd:	xchg   esp,eax
  4183de:	or     ecx,0x8c733463
  4183e4:	int3   
  4183e5:	xlat   BYTE PTR ds:[ebx]
  4183e6:	pop    eax
  4183e7:	push   ebp
  4183e8:	xchg   ecx,eax
  4183e9:	and    BYTE PTR [esi-0x33e6d1d6],0x2a
  4183f0:	ret    
  4183f1:	fld    TBYTE PTR [eax]
  4183f3:	inc    ebp
  4183f4:	inc    ecx
  4183f5:	jl     0x4183a7
  4183f7:	fcom   DWORD PTR [edx-0x41]
  4183fa:	xchg   edi,eax
  4183fb:	mov    bl,0x4b
  4183fd:	push   cs
  4183fe:	dec    edi
  4183ff:	and    al,0x74
  418401:	push   ebx
  418402:	(bad)  
  418403:	pop    eax
  418404:	daa    
  418405:	ret    0x4292
  418408:	and    BYTE PTR [ebx],cl
  41840a:	loope  0x41844d
  41840c:	in     al,dx
  41840d:	or     al,0x52
  41840f:	dec    edi
  418410:	xor    ah,BYTE PTR [ecx]
  418412:	cmp    al,0x0
  418414:	(bad)  
  418415:	adc    eax,0x3759b76e
  41841a:	inc    ebx
  41841b:	dec    edi
  41841c:	not    BYTE PTR ds:0xfd7228f9
  418422:	lods   al,BYTE PTR ds:[esi]
  418423:	test   DWORD PTR [esi+0x62df7de4],eax
  418429:	lods   al,BYTE PTR ds:[esi]
  41842a:	int    0x3c
  41842c:	mov    DWORD PTR [ebx-0x325a0df4],ecx
  418432:	sub    al,0x58
  418434:	sbb    eax,0x91326954
  418439:	stc    
  41843a:	cwde   
  41843b:	pop    ds
  41843c:	xor    BYTE PTR [ebp-0x60],bl
  41843f:	push   ebx
  418440:	and    ecx,DWORD PTR [eax]
  418442:	mov    eax,ds:0x2ac27c24
  418447:	cli    
  418448:	push   ebp
  418449:	sub    BYTE PTR [esi+0x53a8c46e],dh
  41844f:	jns    0x4183da
  418451:	dec    esp
  418452:	mov    esp,0x8ffa40
  418457:	loope  0x418426
  418459:	push   ebp
  41845a:	push   ds
  41845b:	enter  0x4b7b,0xd7
  41845f:	xchg   ebp,eax
  418460:	jg     0x4184db
  418462:	sbb    eax,0xd58ce1eb
  418467:	jbe    0x41847b
  418469:	xor    ecx,0x84ba034e
  41846f:	xchg   esp,eax
  418470:	mov    ebp,0xe05fd1f9
  418475:	sub    ah,BYTE PTR [eax]
  418477:	and    eax,0x1f0de1d1
  41847c:	imul   ebx,DWORD PTR [esi+edx*2],0xb
  418480:	les    ebx,FWORD PTR [edi]
  418482:	pushf  
  418483:	ins    DWORD PTR es:[edi],dx
  418484:	sub    BYTE PTR [esi+0x6],bl
  418487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418488:	fidiv  DWORD PTR [ecx+ebx*2+0x7]
  41848c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41848d:	inc    BYTE PTR [edi+ebp*1+0x64]
  418491:	inc    ecx
  418492:	icebp  
  418493:	shl    BYTE PTR ds:0xf852b6b7,cl
  418499:	addr16 pop es
  41849b:	mov    edi,0x1d4edb91
  4184a0:	or     al,0x26
  4184a2:	mov    ebp,0xc6d52e10
  4184a7:	stc    
  4184a8:	and    dh,BYTE PTR [edi+eiz*4+0x4015c130]
  4184af:	xor    eax,0xeb60eb4f
  4184b4:	inc    edx
  4184b5:	leave  
  4184b6:	iret   
  4184b7:	sar    DWORD PTR [ecx+0x1b522ad2],0xbe
  4184be:	cwde   
  4184bf:	in     al,0xaf
  4184c1:	lods   al,BYTE PTR ds:[esi]
  4184c2:	dec    esi
  4184c3:	sbb    DWORD PTR [ecx],eax
  4184c5:	scas   eax,DWORD PTR es:[edi]
  4184c6:	jecxz  0x41847f
  4184c8:	lea    edi,[edx-0xccfdf5f]
  4184ce:	retf   
  4184cf:	aaa    
  4184d0:	lods   al,BYTE PTR ds:[esi]
  4184d1:	dec    ebp
  4184d2:	push   edi
  4184d3:	sbb    al,0xe4
  4184d5:	in     al,dx
  4184d6:	inc    ebx
  4184d7:	jge    0x418509
  4184d9:	xchg   esp,eax
  4184da:	mov    bl,0x3b
  4184dc:	out    dx,eax
  4184dd:	cmp    ch,0x18
  4184e0:	add    bl,al
  4184e2:	(bad)  
  4184e3:	imul   eax,edx,0x55
  4184e6:	fmul   st(1),st
  4184e8:	mov    eax,ds:0x9fd36176
  4184ed:	and    eax,0x51f12691
  4184f2:	push   ecx
  4184f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184f4:	pop    esp
  4184f5:	inc    edx
  4184f6:	xor    BYTE PTR [edi+0x3],0x54
  4184fa:	ret    
  4184fb:	retf   
  4184fc:	fsubr  st,st(6)
  4184fe:	pop    esi
  4184ff:	add    bh,BYTE PTR ds:0xbfa4968b
  418505:	stos   BYTE PTR es:[edi],al
  418506:	aam    0x23
  418508:	mov    bl,0xfb
  41850a:	(bad)  
  41850b:	fdiv   st(4),st
  41850d:	cmp    DWORD PTR [ecx+0x7e],0x3d64bac8
  418514:	sar    DWORD PTR [ebp+0x5bce1918],cl
  41851a:	mov    edi,0xf9f135aa
  41851f:	jae    0x418507
  418521:	pop    ecx
  418522:	push   esp
  418523:	cmp    eax,0x7b767236
  418528:	jb     0x418574
  41852a:	pop    es
  41852b:	repz mov edi,0x6db22b8a
  418531:	add    DWORD PTR [ebp+0x490be787],edx
  418537:	rol    DWORD PTR [edi-0x7c2044dd],1
  41853d:	mov    bh,0x4d
  41853f:	mov    bh,0xe4
  418541:	div    BYTE PTR [eax]
  418543:	test   DWORD PTR [esi+0x72],esp
  418546:	mov    ds:0xdf3577f,eax
  41854b:	daa    
  41854c:	jno    0x418554
  41854e:	scas   al,BYTE PTR es:[edi]
  41854f:	xor    ebx,DWORD PTR [edi]
  418551:	mov    dh,0xc7
  418553:	jae    0x418526
  418555:	mov    ebp,0xb6ddb897
  41855a:	jmp    0xda0cf987
  41855f:	lds    esp,FWORD PTR [esi+0x76]
  418562:	sub    esp,DWORD PTR [esi+ebp*1]
  418565:	es xchg ebp,eax
  418567:	or     bl,BYTE PTR [esi-0x2e]
  41856a:	jne    0x418561
  41856c:	xchg   esi,eax
  41856d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41856e:	cmp    DWORD PTR [ebx+0x19291f58],esp
  418574:	lds    edi,FWORD PTR [ecx]
  418576:	jo     0x418571
  418578:	adc    eax,0x4cb521df
  41857d:	add    edi,DWORD PTR [edi+0x14]
  418580:	stos   BYTE PTR es:[edi],al
  418581:	es adc al,0x90
  418584:	cdq    
  418585:	aad    0xd8
  418587:	lock call 0x35a62105
  41858d:	(bad)  
  41858f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418590:	jo     0x4185f9
  418592:	out    0x59,al
  418594:	stc    
  418595:	add    cl,BYTE PTR [edx]
  418597:	mov    bh,0xed
  418599:	and    DWORD PTR [eax+edx*4],ecx
  41859c:	xlat   BYTE PTR ds:[ebx]
  41859d:	fs pusha 
  41859f:	cs dec ebp
  4185a1:	aas    
  4185a2:	sbb    dh,BYTE PTR [eax+ebx*2]
  4185a5:	sbb    ch,BYTE PTR [ecx-0x5f2b78fa]
  4185ab:	mov    DWORD PTR [edi-0x75f457ea],edx
  4185b1:	xchg   esp,eax
  4185b2:	push   ebx
  4185b3:	add    ebx,DWORD PTR [esi-0x38efdf0a]
  4185b9:	jg     0x418582
  4185bb:	fmul   QWORD PTR [edx+ebp*4+0x2f54bc]
  4185c2:	pop    eax
  4185c3:	shr    DWORD PTR [ecx+ecx*1-0x5b],0xf1
  4185c8:	xor    eax,DWORD PTR [edi-0x126f7b3f]
  4185ce:	jmp    0x41864d
  4185d0:	sub    ah,bh
  4185d2:	test   BYTE PTR [edi-0x2f],dl
  4185d5:	xchg   BYTE PTR [ebp-0x1f],bh
  4185d8:	cld    
  4185d9:	call   0xb50e965
  4185de:	(bad)  
  4185df:	dec    ecx
  4185e0:	stos   BYTE PTR es:[edi],al
  4185e1:	ja     0x41858b
  4185e3:	push   edx
  4185e4:	add    ecx,DWORD PTR [ecx+0x60]
  4185e7:	cdq    
  4185e8:	int    0xed
  4185ea:	mov    al,ds:0x425fbf12
  4185ef:	xchg   edx,eax
  4185f0:	mov    ah,0x8e
  4185f2:	sub    esp,esi
  4185f4:	cld    
  4185f5:	sbb    DWORD PTR [edi+ecx*1+0x637f7347],ebp
  4185fc:	sar    cl,cl
  4185fe:	ja     0x41867a
  418600:	mov    bl,0x7d
  418602:	pop    ss
  418603:	in     eax,dx
  418604:	adc    ebp,DWORD PTR [edx+ebx*2-0x3f]
  418608:	xchg   BYTE PTR [eax],bh
  41860a:	mov    BYTE PTR [ebx-0x67],ch
  41860d:	mov    WORD PTR [esi+0x7ff6fec4],cs
  418613:	mov    eax,ds:0x9ae48ae8
  418618:	stos   DWORD PTR es:[edi],eax
  418619:	adc    esi,ebx
  41861b:	lods   eax,DWORD PTR ds:[esi]
  41861c:	or     ch,BYTE PTR [edi+0x2]
  41861f:	mov    ds:0x60344060,al
  418624:	jno    0x418666
  418626:	xor    BYTE PTR [ecx+0xa],al
  418629:	mov    ecx,0x9f52223e
  41862e:	call   DWORD PTR ds:0x872c7571
  418634:	add    ebp,edi
  418636:	jmp    esi
  418638:	fwait
  418639:	loop   0x418688
  41863b:	sub    al,0xe
  41863d:	sub    bl,BYTE PTR [esi-0x28f6705e]
  418643:	imul   ecx,DWORD PTR [ebp-0x5b],0x47ceaf71
  41864a:	or     DWORD PTR [edi+0x73],ecx
  41864d:	pop    edx
  41864e:	jbe    0x418655
  418650:	mov    bl,0xde
  418652:	scas   al,BYTE PTR es:[edi]
  418653:	aam    0x1
  418655:	je     0x418623
  418657:	cmc    
  418658:	test   DWORD PTR [esi+0x5f17832a],ebx
  41865e:	dec    esp
  41865f:	pop    esp
  418660:	mov    dl,0xa7
  418662:	xor    esi,DWORD PTR [eax+0x7f93a3ed]
  418668:	pop    ss
  418669:	jp     0x41862c
  41866b:	nop
  41866c:	nop
  41866d:	lods   eax,DWORD PTR ds:[esi]
  41866f:	leave  
  418670:	or     ecx,DWORD PTR ds:0x4ffd99f8
  418676:	adc    esi,ebx
  418678:	scas   eax,DWORD PTR es:[edi]
  418679:	loop   0x4186d9
  41867b:	push   cs
  41867c:	cwde   
  41867d:	mov    esi,0xdf9dea40
  418682:	out    0x5d,al
  418684:	test   bl,ah
  418686:	loopne 0x418672
  418688:	adc    edi,DWORD PTR [edi-0xd]
  41868b:	daa    
  41868c:	xor    bl,BYTE PTR [eax]
  41868e:	fsubp  st(5),st
  418690:	add    DWORD PTR [eax+0x7f],ecx
  418693:	xchg   edx,eax
  418694:	xor    esi,DWORD PTR [esi]
  418696:	pop    ebx
  418697:	mov    cl,0xc5
  418699:	jge    0x4186c9
  41869b:	mov    ds:0xc4acad86,al
  4186a0:	pop    ds
  4186a1:	ss mov ah,0x67
  4186a4:	mov    ecx,0x3bd6ee10
  4186a9:	cmp    cl,ah
  4186ab:	and    DWORD PTR [edi-0x27a3e580],eax
  4186b1:	dec    ecx
  4186b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186b3:	xchg   edi,eax
  4186b4:	add    edi,DWORD PTR [esi]
  4186b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186b7:	in     al,dx
  4186b8:	out    0xd3,eax
  4186ba:	ja     0x418657
  4186bc:	imul   ebp,DWORD PTR [ecx+0xa],0xaf744b0b
  4186c3:	dec    edi
  4186c4:	fdivr  DWORD PTR [edi+ecx*2+0x7bd3d1bc]
  4186cb:	jecxz  0x4186af
  4186cd:	inc    eax
  4186ce:	fcmovnb st,st(3)
  4186d1:	shl    cl,cl
  4186d3:	mov    ah,0x4e
  4186d5:	dec    ebp
  4186d6:	popa   
  4186d7:	inc    esp
  4186d8:	(bad)  
  4186d9:	xchg   ebp,eax
  4186da:	mov    cl,0xf
  4186dc:	frstor ds:0x252a5f9a
  4186e2:	sub    eax,0xfab11ff9
  4186e7:	xchg   edi,eax
  4186e8:	ror    BYTE PTR [ecx+0x2a86472c],0x81
  4186ef:	mov    esp,0x25319b1d
  4186f4:	scas   eax,DWORD PTR es:[edi]
  4186f5:	or     esp,DWORD PTR [ebx]
  4186f7:	test   eax,0x6bd2508d
  4186fc:	xchg   ecx,eax
  4186fd:	inc    ebx
  4186fe:	dec    edx
  4186ff:	jnp    0x418759
  418701:	mov    dh,BYTE PTR [ebx]
  418703:	stc    
  418704:	jnp    0x418697
  418706:	pop    ds
  418707:	dec    edx
  418708:	dec    ebx
  418709:	mov    cx,0x6aa0
  41870d:	pop    edx
  41870e:	xchg   ebx,eax
  41870f:	and    BYTE PTR [edi+0x5564e0e4],ah
  418715:	push   edi
  418716:	push   es
  418717:	xor    esi,ebx
  418719:	jo     0x418759
  41871b:	sbb    eax,0xbe3ad5ec
  418720:	scas   al,BYTE PTR es:[edi]
  418721:	dec    esi
  418722:	call   0xe03e35cd
  418727:	xor    al,0x0
  418729:	mov    al,0xfa
  41872b:	fcomp  QWORD PTR [esp+esi*1-0x55693966]
  418732:	int    0x3f
  418734:	pop    ebp
  418735:	ftst   
  418737:	dec    edi
  418738:	push   ecx
  418739:	pusha  
  41873a:	rol    BYTE PTR [eax+0x28955cfa],1
  418740:	clc    
  418741:	pslld  mm0,QWORD PTR [ebp+0x1c683f4a]
  418748:	pop    es
  418749:	mov    ds:0xc4dd8b91,eax
  41874e:	jmp    0x500b:0x1c9d885e
  418755:	add    al,0xac
  418757:	(bad)  
  418758:	pop    edi
  418759:	ins    BYTE PTR es:[edi],dx
  41875a:	push   eax
  41875b:	sti    
  41875c:	inc    esp
  41875d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41875e:	cmp    BYTE PTR [edx],dl
  418760:	adc    dl,ah
  418762:	mov    bl,0xc
  418764:	xor    BYTE PTR [ebp+0x3a],ah
  418767:	add    edx,DWORD PTR [ebx+0x487ae8c2]
  41876d:	icebp  
  41876e:	mov    DWORD PTR [eax+0x5c],ebx
  418771:	dec    ebx
  418772:	jne    0x4187a7
  418774:	ret    
  418775:	fdiv   st,st(1)
  418777:	aaa    
  418778:	pop    ebp
  418779:	add    esp,ebp
  41877b:	mov    al,0x54
  41877d:	mov    edi,0xe7a5bf07
  418782:	xchg   ebx,eax
  418783:	retf   
  418784:	push   eax
  418785:	fisttp QWORD PTR [ecx-0x15d6eb7c]
  41878b:	aaa    
  41878c:	cmovg  edx,edx
  41878f:	aad    0x22
  418791:	ss out 0x88,eax
  418794:	push   es
  418795:	adc    eax,0xf3bb4e7d
  41879a:	push   ds
  41879b:	sub    eax,0xeefa1f54
  4187a0:	mov    ds:0xdb6999ff,eax
  4187a5:	(bad)  
  4187a6:	dec    esp
  4187a7:	out    dx,al
  4187a8:	xlat   BYTE PTR ds:[ebx]
  4187a9:	popa   
  4187aa:	out    dx,al
  4187ab:	stos   BYTE PTR es:[edi],al
  4187ac:	add    eax,DWORD PTR [edi]
  4187ae:	sbb    BYTE PTR [ebx+ebx*2],0x5d
  4187b2:	adc    BYTE PTR [esi+0x57],ch
  4187b5:	dec    ebp
  4187b6:	pop    ss
  4187b7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187b9:	inc    ebp
  4187ba:	inc    edi
  4187bb:	arpl   dx,sp
  4187bd:	lods   eax,DWORD PTR ds:[esi]
  4187be:	xchg   DWORD PTR [ebp-0x1bb0a999],ebp
  4187c4:	pushf  
  4187c5:	pop    ds
  4187c6:	and    eax,0xb9a2b9ff
  4187cb:	xchg   ebx,eax
  4187cc:	cmc    
  4187cd:	popa   
  4187ce:	mov    ebp,0xb36d1153
  4187d3:	or     ebx,DWORD PTR [eax-0xd536baa]
  4187d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187da:	xchg   BYTE PTR [edx],ah
  4187dc:	pop    ss
  4187dd:	test   eax,0xe8f3f70d
  4187e2:	psubd  mm2,mm6
  4187e5:	mov    al,ds:0x2c96633b
  4187ea:	xchg   esi,eax
  4187eb:	sbb    al,0x34
  4187ed:	sahf   
  4187ee:	mov    ds:0xcc45d24e,eax
  4187f3:	jo     0x418874
  4187f5:	pop    ebp
  4187f6:	xor    ch,0xc9
  4187f9:	xchg   ecx,eax
  4187fa:	or     DWORD PTR [esi+edx*1+0x34084348],ebp
  418801:	rcl    BYTE PTR es:[esi],1
  418804:	retf   0x416
  418807:	lods   eax,DWORD PTR ds:[esi]
  418808:	and    eax,esp
  41880a:	popf   
  41880b:	lds    esi,FWORD PTR [edi+0x11259da4]
  418811:	fdiv   DWORD PTR [eax+0x13]
  418814:	cld    
  418815:	mov    ds:0x4180935,al
  41881a:	adc    DWORD PTR [edx+esi*8+0x2b],esi
  41881e:	jmp    0x5126:0x4994aed5
  418825:	stos   DWORD PTR es:[edi],eax
  418826:	lods   al,BYTE PTR ds:[esi]
  418827:	xor    BYTE PTR [ebx],dl
  418829:	push   eax
  41882a:	stc    
  41882b:	inc    edi
  41882c:	xchg   esp,eax
  41882d:	retf   
  41882e:	popf   
  41882f:	lahf   
  418830:	aad    0xc9
  418832:	cmc    
  418833:	jmp    0x75b2:0x36a76521
  41883a:	das    
  41883b:	jecxz  0x4187ec
  41883d:	stos   DWORD PTR es:[edi],eax
  41883e:	addr16 push ds
  418840:	inc    ecx
  418841:	popf   
  418842:	mov    ecx,0xdfc9438e
  418847:	mov    cl,0x48
  418849:	mov    eax,ds:0x90116c92
  41884e:	mov    al,ds:0x973440f0
  418853:	and    ebp,DWORD PTR [eax-0x2e]
  418856:	inc    esp
  418857:	test   esp,ebx
  418859:	out    0xca,eax
  41885b:	js     0x41881d
  41885d:	(bad)  
  41885f:	pusha  
  418860:	in     al,0x65
  418862:	test   BYTE PTR [edi-0x4f790db3],0xaa
  418869:	imul   ebx,DWORD PTR [eax],0x5f
  41886c:	test   DWORD PTR [edx+0x1ace16b],esp
  418872:	sbb    cl,BYTE PTR [eax-0xe148aed]
  418878:	div    DWORD PTR [edx]
  41887a:	xor    BYTE PTR [edx+0x1a],dl
  41887d:	cdq    
  41887e:	cmp    al,BYTE PTR [eax-0x391bce6a]
  418884:	lea    esp,ds:0x428135d1
  41888a:	mov    WORD PTR [ebx-0x2ac311ba],ds
  418890:	aas    
  418891:	jp     0x4188df
  418893:	sbb    bh,dh
  418895:	leave  
  418896:	mov    bl,0x29
  418898:	jns    0x41882b
  41889a:	sar    BYTE PTR [eax+eiz*4+0x4c08a6e8],cl
  4188a1:	add    edi,edi
  4188a3:	jb     0x4188b7
  4188a5:	test   al,0x1d
  4188a7:	xor    esi,DWORD PTR [esi-0x6387160]
  4188ad:	test   dl,dl
  4188af:	or     BYTE PTR [edx+0x38],bh
  4188b2:	xchg   DWORD PTR [edx+ebp*4-0x42569849],ebp
  4188b9:	jmp    0x791e:0xc448df3
  4188c0:	or     al,0x41
  4188c2:	push   esi
  4188c3:	dec    esi
  4188c4:	push   ds
  4188c5:	lea    ebp,es:[edi+0x463d3879]
  4188cc:	or     eax,0xc668
  4188d1:	add    BYTE PTR [esi-0x8290893],bl
  4188d7:	fidivr WORD PTR [edi-0x61f42993]
  4188dd:	int    0xd9
  4188df:	push   edx
  4188e0:	(bad)  [ebx+ecx*1-0xafffefa]
  4188e7:	add    al,0x0
  4188e9:	add    BYTE PTR [ebp-0x7],al
  4188ec:	int    0x17
  4188ee:	dec    edi
  4188ef:	mov    DWORD PTR [edx],edx
  4188f1:	sub    BYTE PTR [ebx+0x504047d0],0xe0
  4188f8:	adc    bl,BYTE PTR [ebp+0x19]
  4188fb:	mov    edx,0x308d918f
  418900:	js     0x418957
  418902:	std    
  418903:	push   ecx
  418904:	sbb    eax,0xbe7d3201
  418909:	in     eax,0xfe
  41890b:	cmp    DWORD PTR [eax+0x39c9a128],ecx
  418911:	ss xchg edx,eax
  418913:	inc    esp
  418914:	jno    0x4188e6
  418916:	sahf   
  418917:	into   
  418918:	and    BYTE PTR [eax],ah
  41891a:	aas    
  41891b:	or     eax,0x56ae162f
  418920:	fist   DWORD PTR [eax]
  418922:	jae    0x418920
  418924:	rcr    DWORD PTR [ebp+0x2bf052c3],1
  41892a:	xchg   ebx,eax
  41892b:	in     al,dx
  41892c:	out    dx,al
  41892d:	mov    dh,0x8a
  41892f:	mov    al,ds:0x5097afc8
  418934:	push   ebp
  418935:	mov    esp,0xdc27b71f
  41893a:	fstp   DWORD PTR [esi]
  41893c:	mov    esp,0x3d29c7e0
  418941:	inc    ebp
  418942:	adc    edx,DWORD PTR [edx+0x3a5556ca]
  418948:	fist   WORD PTR [edx+0x349c8a14]
  41894e:	sahf   
  41894f:	sbb    bl,bh
  418951:	pop    ss
  418952:	pop    ebx
  418953:	jl     0x418910
  418955:	jge    0x4188e7
  418957:	sbb    BYTE PTR [edx-0x512ff5f],ah
  41895d:	outs   dx,BYTE PTR ds:[esi]
  41895e:	fmul   QWORD PTR [ecx-0x42]
  418961:	and    esp,esi
  418963:	add    BYTE PTR [eax-0x47a91e0a],bh
  418969:	retf   0xe197
  41896c:	pop    eax
  41896d:	jle    0x418949
  41896f:	daa    
  418970:	sbb    DWORD PTR [edi+ecx*2+0x17a17bde],esp
  418977:	mov    ds:0xb1030d6b,al
  41897c:	inc    eax
  41897d:	push   ebx
  41897e:	iret   
  41897f:	mov    DWORD PTR ds:0xbb3123bd,ebp
  418985:	cwde   
  418986:	enter  0xa849,0x3a
  41898a:	cmp    al,0xcf
  41898c:	mov    ch,0xcd
  41898e:	mov    esp,0x887b48ba
  418993:	sub    eax,DWORD PTR [edi-0x3a]
  418996:	(bad)  
  418997:	call   0x9e53eaec
  41899c:	enter  0xb368,0x58
  4189a0:	push   eax
  4189a1:	xchg   ebx,eax
  4189a2:	test   al,0x91
  4189a4:	mov    eax,0x4f29abb
  4189a9:	fidivr WORD PTR ds:0xfcc45fa2
  4189af:	xchg   esi,eax
  4189b0:	or     ebx,DWORD PTR [edx+0x7b]
  4189b3:	push   ss
  4189b4:	mov    bh,0xee
  4189b6:	fwait
  4189b7:	sbb    bl,bh
  4189b9:	xchg   ebx,eax
  4189ba:	sbb    DWORD PTR [edx+0x41efbe0f],esp
  4189c0:	ins    BYTE PTR es:[edi],dx
  4189c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189c2:	ficom  DWORD PTR [ecx-0x7c725c7]
  4189c8:	mov    esi,0xf79869e6
  4189cd:	mov    DWORD PTR [esi],ebx
  4189cf:	mov    al,ds:0x31ba3673
  4189d4:	add    ebp,DWORD PTR [ecx+0x985ca2e]
  4189da:	push   esp
  4189db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189dc:	or     al,0xa7
  4189de:	fcmove st,st(1)
  4189e0:	mov    bl,0xce
  4189e2:	aad    0xdb
  4189e4:	mov    ch,0xfe
  4189e6:	jo     0x4189e6
  4189e8:	mov    dh,0x8
  4189ea:	aam    0xdb
  4189ec:	(bad)  
  4189ed:	mov    esi,DWORD PTR [edi+0x38f1acb4]
  4189f3:	nop
  4189f4:	shl    DWORD PTR [esi],1
  4189f6:	adc    DWORD PTR [esi-0x68],0xffffffba
  4189fa:	inc    ecx
  4189fb:	dec    edx
  4189fc:	scas   eax,DWORD PTR es:[edi]
  4189fd:	dec    esi
  4189fe:	cmp    cl,BYTE PTR [edx-0x35a3979e]
  418a04:	xchg   ebx,eax
  418a05:	mov    al,ds:0xea014923
  418a0a:	enter  0x701,0xe3
  418a0e:	fldcw  WORD PTR [esp+edi*4]
  418a11:	nop
  418a12:	into   
  418a13:	je     0x418a59
  418a15:	mov    ds:0xac33696d,eax
  418a1a:	and    eax,0x99631f9f
  418a1f:	mov    bl,0x3d
  418a21:	pop    ss
  418a22:	dec    edi
  418a23:	sbb    al,0x73
  418a25:	cmp    si,WORD PTR [ebx-0xdf22e54]
  418a2c:	pushf  
  418a2d:	rcl    BYTE PTR [ecx-0x4e5a18f5],cl
  418a33:	cld    
  418a34:	or     BYTE PTR [eax-0x48540c46],al
  418a3a:	cs test ebp,0x7944b187
  418a41:	shl    BYTE PTR [edi+0x218abdfc],cl
  418a47:	or     edx,DWORD PTR [eax]
  418a49:	push   ds
  418a4a:	xor    al,ah
  418a4c:	xor    bl,al
  418a4e:	int    0x9f
  418a50:	sub    dl,cl
  418a52:	retf   0x34b1
  418a55:	sub    DWORD PTR [ecx+0x29],esi
  418a58:	jmp    0x405b475b
  418a5d:	push   es
  418a5e:	js     0x418a6c
  418a60:	dec    edx
  418a61:	cmp    ebx,DWORD PTR [edx+0x4bd6c205]
  418a67:	or     esp,0xffffff9b
  418a6a:	adc    cl,al
  418a6c:	sub    DWORD PTR [ebx-0x498f93bc],0xffffff9a
  418a73:	push   ecx
  418a74:	push   cs
  418a75:	ror    DWORD PTR [esi+0x60998219],0x2d
  418a7c:	hlt    
  418a7d:	jle    0x418abb
  418a7f:	mov    bl,0xce
  418a81:	out    0x30,eax
  418a83:	inc    ebp
  418a84:	in     eax,0xd
  418a86:	dec    edi
  418a87:	mov    DWORD PTR [ebp+0x37],ecx
  418a8a:	(bad)  
  418a8b:	or     al,BYTE PTR [ecx-0x69]
  418a8e:	mov    ah,0xcf
  418a91:	gs dec ebx
  418a93:	int    0xe1
  418a95:	sub    esi,DWORD PTR [edx]
  418a97:	pop    esi
  418a98:	cmp    dh,BYTE PTR [esi+ebx*1-0x2e262e8e]
  418a9f:	out    dx,al
  418aa0:	test   esi,0xebd34a23
  418aa6:	into   
  418aa7:	xchg   ebp,eax
  418aa8:	(bad)  
  418aa9:	dec    esi
  418aaa:	inc    ecx
  418aab:	rcr    BYTE PTR [eax],cl
  418aad:	je     0x418aaa
  418aaf:	and    dl,BYTE PTR [edi+0x5c]
  418ab2:	idiv   BYTE PTR [esp+edx*8+0x482f9de4]
  418ab9:	out    0xe0,al
  418abb:	mov    edx,0xb2ddd401
  418ac0:	rol    cl,cl
  418ac2:	fxch   st(5)
  418ac4:	mov    bh,BYTE PTR [edi+0x61]
  418ac7:	push   ss
  418ac8:	and    eax,0x4c9e716
  418acd:	xor    BYTE PTR [edx-0xc86e008],al
  418ad3:	xor    al,0xc9
  418ad5:	mov    ds:0xd6274a4a,eax
  418ada:	inc    ebx
  418adb:	mov    ds:0x9336d74a,al
  418ae0:	and    bl,BYTE PTR [ebx+0x76314787]
  418ae6:	and    al,0xcd
  418ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ae9:	pop    esp
  418aea:	xor    ebx,DWORD PTR [edx]
  418aec:	pop    ss
  418aed:	jmp    DWORD PTR [esi-0xa]
  418af0:	cld    
  418af1:	sbb    DWORD PTR [ecx],esp
  418af3:	ins    DWORD PTR es:[edi],dx
  418af4:	inc    ecx
  418af5:	sub    eax,0x24e386b6
  418afa:	xor    al,BYTE PTR [ecx+eiz*1]
  418afd:	lea    eax,[esi-0x2c]
  418b00:	push   cs
  418b01:	or     bh,BYTE PTR [edi]
  418b03:	push   eax
  418b04:	es push ebx
  418b06:	int3   
  418b07:	xor    esp,DWORD PTR fs:[eax]
  418b0a:	inc    eax
  418b0b:	push   esi
  418b0c:	push   ss
  418b0d:	xchg   ebp,eax
  418b0e:	jmp    0x418b13
  418b10:	sbb    ah,ch
  418b12:	int    0xf0
  418b14:	jmp    0x418b7d
  418b16:	mov    esi,0xf08b815f
  418b1b:	iret   
  418b1c:	mov    gs:0x41fa714e,al
  418b22:	dec    ebx
  418b23:	sub    eax,0x7b1ec918
  418b28:	inc    ecx
  418b29:	xchg   edi,eax
  418b2a:	scas   eax,DWORD PTR es:[edi]
  418b2b:	out    0x13,al
  418b2d:	pop    es
  418b2e:	lahf   
  418b2f:	jmp    0x418b10
  418b31:	in     al,0x96
  418b33:	popf   
  418b34:	lods   al,BYTE PTR ds:[esi]
  418b35:	scas   al,BYTE PTR es:[edi]
  418b36:	imul   esi,DWORD PTR [esi+0x278eec90],0xffffffc3
  418b3d:	mov    dl,0x77
  418b3f:	in     al,0xfc
  418b41:	scas   eax,DWORD PTR es:[edi]
  418b42:	fsub   DWORD PTR [esi]
  418b44:	jne    0x418ae2
  418b46:	je     0x418b9f
  418b48:	hlt    
  418b49:	add    al,0xcb
  418b4b:	push   0xffffffb4
  418b4d:	dec    esp
  418b4e:	in     eax,dx
  418b4f:	mov    ebx,0xb1bc6e9e
  418b54:	pop    ebx
  418b55:	add    ah,BYTE PTR [edx]
  418b57:	mov    ds:0x73c99f28,al
  418b5c:	js     0x418bbd
  418b5e:	int3   
  418b5f:	mov    esi,0x73d1cd63
  418b64:	sbb    edx,eax
  418b66:	inc    ecx
  418b67:	mov    ebx,0x159f8444
  418b6c:	jne    0x418b0b
  418b6e:	and    ecx,DWORD PTR [edi-0x8]
  418b71:	pop    esi
  418b72:	test   eax,ebx
  418b74:	sub    eax,0xc11b6bbf
  418b79:	push   ss
  418b7a:	push   es
  418b7b:	mov    esp,0x4436861b
  418b80:	aaa    
  418b81:	sbb    DWORD PTR [ebp-0x10],0xffffffb6
  418b85:	test   al,0x9d
  418b87:	pop    eax
  418b88:	aas    
  418b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b8a:	lock and DWORD PTR [ecx+eax*4],ecx
  418b8e:	inc    ebp
  418b8f:	fdiv   st,st(3)
  418b91:	mov    bl,BYTE PTR ds:0xda1ee304
  418b97:	jne    0x418bc9
  418b99:	(bad)  
  418b9a:	push   esi
  418b9b:	sub    esi,DWORD PTR [ebx+0xe96a7e0]
  418ba1:	mov    ds:0x75ce0a90,al
  418ba6:	dec    ecx
  418ba7:	call   DWORD PTR ds:0x22aff0f4
  418bad:	cdq    
  418bae:	sete   dl
  418bb1:	fcmovnbe st,st(2)
  418bb3:	inc    ebp
  418bb4:	lahf   
  418bb5:	add    al,0x26
  418bb7:	push   ebp
  418bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bb9:	mov    ebp,0x8d13fe02
  418bbe:	jmp    0x418b64
  418bc0:	sti    
  418bc1:	push   eax
  418bc2:	mul    ecx
  418bc4:	je     0x418b93
  418bc6:	pop    ss
  418bc7:	xchg   ecx,eax
  418bc8:	xchg   BYTE PTR [ebx-0x21],ah
  418bcb:	jg     0x418c2e
  418bcd:	xlat   BYTE PTR ds:[ebx]
  418bce:	(bad)  
  418bcf:	cmp    BYTE PTR [ecx+0x5f],bl
  418bd2:	dec    edi
  418bd3:	or     eax,0xc087f581
  418bd8:	(bad)  
  418bd9:	xor    dl,ch
  418bdb:	or     eax,0xb0c4bcae
  418be0:	xchg   DWORD PTR [edi+0x496133de],ecx
  418be6:	xor    BYTE PTR [ebp+0x5b],al
  418be9:	sbb    eax,0x672065b4
  418bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bef:	ret    
  418bf0:	iret   
  418bf1:	jnp    0x418c4f
  418bf3:	cs xchg esp,eax
  418bf5:	cli    
  418bf6:	xlat   BYTE PTR ds:[ebx]
  418bf7:	(bad)  
  418bf8:	das    
  418bf9:	data16 jb 0x418baf
  418bfc:	out    dx,al
  418bfd:	xchg   edx,eax
  418bfe:	scas   al,BYTE PTR es:[edi]
  418bff:	xchg   edx,eax
  418c00:	inc    ebx
  418c01:	or     eax,DWORD PTR [ebx+0xe]
  418c04:	mov    cl,0x33
  418c06:	inc    ecx
  418c07:	mov    ecx,0x529c2aa2
  418c0c:	push   ebx
  418c0d:	cmp    esi,0x8ac9f3f9
  418c13:	aam    0x87
  418c15:	and    eax,0x1590fdbf
  418c1a:	xchg   ebp,eax
  418c1b:	fwait
  418c1c:	or     ah,ch
  418c1e:	repnz fldenv [edi]
  418c21:	push   ss
  418c22:	int3   
  418c23:	cmp    BYTE PTR [ebx],dl
  418c25:	gs popa 
  418c27:	test   al,0x6b
  418c29:	arpl   WORD PTR [eax+0x76],ax
  418c2c:	mov    eax,0xc2d494a1
  418c31:	popf   
  418c32:	sub    DWORD PTR [edi],ebx
  418c34:	cmp    BYTE PTR [edx+ebp*8],0x57
  418c38:	cld    
  418c39:	in     al,dx
  418c3a:	adc    eax,0x28430c8c
  418c3f:	push   cs
  418c40:	data16 jns 0x418c33
  418c43:	dec    esp
  418c44:	or     eax,DWORD PTR [eax]
  418c46:	fstp   DWORD PTR [edx+0x21737241]
  418c4c:	ins    BYTE PTR es:[edi],dx
  418c4d:	outs   dx,BYTE PTR ds:[esi]
  418c4e:	push   esi
  418c4f:	je     0x418c9a
  418c51:	pusha  
  418c52:	sbb    edx,DWORD PTR [ebx-0x22e88262]
  418c58:	mov    bh,0xd0
  418c5a:	xor    eax,0x9b5ef81d
  418c5f:	mov    BYTE PTR [eax+0x6942339a],dh
  418c65:	jl     0x418c37
  418c67:	aaa    
  418c68:	loopne 0x418c4c
  418c6a:	jmp    0xdbc8d89e
  418c6f:	sub    al,0x7f
  418c71:	xchg   ecx,eax
  418c72:	mov    edi,0x537b30bf
  418c77:	mov    ebx,DWORD PTR [ecx+0x5f]
  418c7a:	pop    ebx
  418c7b:	jae    0x418c88
  418c7d:	sar    DWORD PTR [edi+0x519e0252],cl
  418c83:	and    BYTE PTR es:[ebp+esi*1+0x68b2a26b],cl
  418c8b:	xchg   esi,eax
  418c8c:	jmp    FWORD PTR [edx+0x34]
  418c8f:	shl    BYTE PTR [ecx-0x2f43c2d5],cl
  418c95:	js     0x418c3c
  418c97:	sub    BYTE PTR [ebx-0x3f],ch
  418c9a:	pop    ebx
  418c9b:	xor    ebp,DWORD PTR [ebp-0xe]
  418c9e:	add    edx,esp
  418ca0:	mov    dl,0x2f
  418ca2:	fistp  DWORD PTR [ecx]
  418ca4:	sub    dh,BYTE PTR [ecx+0x62]
  418ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ca8:	mov    ds:0x60390afa,al
  418cad:	fild   QWORD PTR [edi]
  418caf:	not    DWORD PTR [ebx+0x1d1bb994]
  418cb5:	cmp    al,0xf0
  418cb7:	xchg   edi,eax
  418cb8:	and    al,0x55
  418cba:	sbb    BYTE PTR [ebx+0x68],0x84
  418cbe:	std    
  418cbf:	add    ecx,esp
  418cc1:	dec    esi
  418cc2:	push   edi
  418cc3:	xor    BYTE PTR [eax+edi*2],cl
  418cc6:	jg     0x418c7e
  418cc8:	sub    BYTE PTR [ebp+0x79],dh
  418ccb:	jmp    0xf6e9:0xd92bb841
  418cd2:	xor    bl,BYTE PTR [edi+0xb]
  418cd5:	lea    ecx,[ecx-0x3a6d7068]
  418cdb:	pop    esi
  418cdc:	loop   0x418ceb
  418cde:	call   0xeaeb44bb
  418ce3:	nop
  418ce4:	push   es
  418ce5:	sbb    BYTE PTR [edx],al
  418ce7:	repnz das 
  418ce9:	push   edi
  418cea:	in     eax,dx
  418ceb:	mov    ds,eax
  418ced:	mov    ecx,0x9f538465
  418cf2:	sar    ecx,cl
  418cf4:	sti    
  418cf5:	push   edx
  418cf6:	fyl2x  
  418cf8:	push   cs
  418cf9:	mov    esp,ebp
  418cfb:	pop    ebx
  418cfc:	mov    ecx,0x44aef0bf
  418d01:	inc    ecx
  418d02:	jmp    0x3e38:0xf28e3477
  418d09:	lock pop ds
  418d0b:	xor    bh,BYTE PTR [eax+0x66]
  418d0e:	retf   0xbddd
  418d11:	iret   
  418d12:	fwait
  418d13:	inc    eax
  418d14:	pop    ss
  418d15:	cld    
  418d16:	scas   eax,DWORD PTR es:[edi]
  418d17:	xchg   esp,eax
  418d18:	or     esi,ebx
  418d1a:	mov    ebx,0x438e5778
  418d1f:	push   ss
  418d20:	sar    DWORD PTR [ebp+0x10a4414],1
  418d26:	in     eax,dx
  418d27:	jmp    0xc7ea:0xd8dbc950
  418d2e:	lock (bad) 
  418d30:	test   al,0xe5
  418d32:	and    BYTE PTR [ecx-0x4588e8dd],al
  418d38:	jecxz  0x418d72
  418d3a:	add    dh,BYTE PTR [ebx+0x7a37230c]
  418d40:	(bad)  
  418d41:	jmp    0x418d44
  418d43:	(bad)
  418d46:	shl    ebp,1
  418d48:	push   ds
  418d49:	in     eax,dx
  418d4a:	add    ebp,DWORD PTR [edx]
  418d4c:	(bad)  
  418d4d:	adc    al,0x11
  418d4f:	aad    0xa1
  418d51:	push   ecx
  418d52:	les    esp,FWORD PTR [ebx+0x36]
  418d55:	mov    edx,0x6e0619d4
  418d5a:	and    BYTE PTR [edx],bl
  418d5c:	inc    ecx
  418d5d:	mov    DWORD PTR [edi-0x4d],ecx
  418d60:	aad    0x24
  418d62:	mov    ebp,DWORD PTR [ebx+0xa0e35b5]
  418d68:	ror    DWORD PTR [ecx+0x3cd531a9],0x30
  418d6f:	pushf  
  418d70:	retf   0x2c6e
  418d73:	ret    0xbf6
  418d76:	push   ss
  418d77:	and    dl,ch
  418d79:	divps  xmm5,XMMWORD PTR [esi]
  418d7c:	fsubr  DWORD PTR ds:0x88b87731
  418d82:	jb     0x418d5b
  418d84:	pop    eax
  418d85:	repnz fimul WORD PTR [ebp-0x4082ca03]
  418d8c:	push   cs
  418d8d:	(bad)  
  418d8e:	and    eax,0x482ca4cc
  418d93:	jmp    0x3438:0x1123e6eb
  418d9a:	stos   BYTE PTR es:[edi],al
  418d9b:	out    0xec,eax
  418d9d:	cmp    eax,edi
  418d9f:	mov    edx,0x9fd2e504
  418da4:	jae    0x418d48
  418da6:	outs   dx,DWORD PTR ds:[esi]
  418da7:	fcmovnbe st,st(7)
  418da9:	mov    DWORD PTR [ebx*8-0x4625fa34],ebx
  418db0:	mov    esi,0x99dbb64d
  418db5:	pop    esp
  418db6:	inc    ebx
  418db7:	and    DWORD PTR [edx],0xffffff94
  418dba:	or     ebp,DWORD PTR [ebp-0x72663216]
  418dc0:	dec    ebp
  418dc1:	imul   edx,DWORD PTR [edi],0xf
  418dc4:	fs cs or eax,0x7ae44e38
  418dcb:	test   eax,0xfe16be50
  418dd0:	and    DWORD PTR [ebx],eax
  418dd2:	jle    0x418e49
  418dd4:	xchg   edx,eax
  418dd5:	imul   esi,DWORD PTR [edi],0xb8459fcc
  418ddb:	aas    
  418ddc:	cmp    eax,0x79b8
  418de1:	add    BYTE PTR [edx-0x103695a9],dh
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0xe5274054
  418df2:	add    BYTE PTR [ebx],cl
  418df4:	add    DWORD PTR [eax],eax
  418df6:	cmc    
  418df7:	add    al,0x0
  418df9:	add    BYTE PTR [ecx-0x1c8baa85],bl
  418dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e00:	in     al,0xf3
  418e02:	add    eax,0x30405bd5
  418e07:	sbb    edi,eax
  418e09:	outs   dx,DWORD PTR ds:[esi]
  418e0a:	clc    
  418e0b:	xor    DWORD PTR [esi-0x17],ebp
  418e0e:	dec    edx
  418e0f:	fldcw  WORD PTR [edx+edi*8+0xa]
  418e13:	sub    eax,DWORD PTR [esi]
  418e15:	cmp    ah,cl
  418e17:	mov    ch,0x5
  418e19:	xor    al,bh
  418e1b:	or     eax,0x22d84ee0
  418e20:	out    dx,al
  418e21:	jle    0x418e11
  418e23:	mov    gs,WORD PTR [ebp+0x6b]
  418e26:	sbb    al,0xd2
  418e28:	pop    ds
  418e29:	jmp    0x13900e47
  418e2e:	adc    ch,bl
  418e30:	mov    bh,BYTE PTR [ebx]
  418e32:	adc    al,0xd1
  418e34:	xchg   BYTE PTR [edi+0x31],dh
  418e37:	cmp    ecx,esi
  418e39:	pop    esp
  418e3a:	mov    cl,0x73
  418e3c:	push   esp
  418e3d:	not    DWORD PTR [edx]
  418e3f:	(bad)  
  418e40:	mov    ebp,0xf2bc89e6
  418e45:	adc    BYTE PTR [bp+si-0x5a],ah
  418e49:	and    BYTE PTR [ebx],bl
  418e4b:	mov    esp,0x283d76de
  418e50:	and    esp,DWORD PTR [ebx-0x34d541c5]
  418e56:	out    dx,eax
  418e57:	mov    bh,0x54
  418e59:	pusha  
  418e5a:	call   0xd606:0xdbef6e01
  418e61:	data16 xchg ch,cl
  418e64:	stc    
  418e65:	mov    ebx,0x3c3a1778
  418e6a:	icebp  
  418e6b:	mov    ebx,0x686aac52
  418e70:	aam    0x8c
  418e72:	ret    
  418e73:	(bad)  
  418e75:	es (bad) 
  418e77:	(bad)  
  418e79:	fcomi  st,st(0)
  418e7b:	js     0x418e76
  418e7d:	dec    ebp
  418e7e:	or     bl,BYTE PTR [ebp-0x38]
  418e81:	fwait
  418e82:	or     ebx,DWORD PTR [edx-0x6a]
  418e85:	add    al,0x79
  418e87:	fnsave [esi-0x28]
  418e8a:	lds    edi,FWORD PTR [ecx]
  418e8c:	add    dl,ch
  418e8e:	iret   
  418e8f:	retf   0x3f7c
  418e92:	mov    DWORD PTR [edi-0x4bece01f],0x13b50637
  418e9c:	mov    DWORD PTR ds:0x5911bbc3,edi
  418ea2:	repnz fsub QWORD PTR [edx-0x27]
  418ea6:	dec    edx
  418ea7:	ins    DWORD PTR es:[edi],dx
  418ea8:	mov    cl,0xe3
  418eaa:	inc    esi
  418eab:	and    BYTE PTR [ecx-0x14],cl
  418eae:	sbb    BYTE PTR [ebx-0x58],ah
  418eb1:	call   0xfd0ef78
  418eb6:	js     0x418e8a
  418eb8:	cld    
  418eb9:	or     al,0x31
  418ebb:	jge    0x418eab
  418ebd:	aas    
  418ebe:	lods   eax,DWORD PTR ds:[esi]
  418ebf:	shr    BYTE PTR [ebx+0x22],1
  418ec2:	sub    DWORD PTR [ecx],edi
  418ec4:	jae    0x418ed8
  418ec6:	jle    0x418e65
  418ec8:	ja     0x418f3b
  418eca:	mov    esp,0x163eae44
  418ecf:	icebp  
  418ed0:	in     al,0xfa
  418ed2:	arpl   WORD PTR [eax+0x23d77c86],si
  418ed8:	and    DWORD PTR ds:0xfb29448a,ebp
  418ede:	iret   
  418edf:	mov    DWORD PTR [edi-0x65655a11],ebp
  418ee5:	pop    edi
  418ee6:	out    0x0,al
  418ee8:	mov    eax,ds:0x1573ded
  418eed:	sbb    al,0x79
  418eef:	jmp    0xab50:0x2fbe0e6f
  418ef6:	push   ss
  418ef7:	call   0x45fb:0x89696a06
  418efe:	shr    BYTE PTR ds:0x7ad68593,1
  418f04:	and    al,0x4
  418f06:	mov    dl,0xa0
  418f08:	mov    ebp,0x495bf7e4
  418f0d:	mov    al,ds:0x3b1e4ce0
  418f12:	mov    bl,0xe0
  418f14:	dec    esp
  418f15:	or     BYTE PTR [ebx+esi*8-0x2f358738],ch
  418f1c:	mov    ecx,0xcc153f4
  418f21:	clc    
  418f22:	push   0xbe6f2a34
  418f27:	call   0x91ee:0xca5d27f4
  418f2e:	stos   BYTE PTR es:[edi],al
  418f2f:	push   cs
  418f30:	mov    ebp,0x7919bde0
  418f35:	mov    eax,0xed016191
  418f3a:	popa   
  418f3b:	hlt    
  418f3c:	xor    DWORD PTR [edi-0x57],esi
  418f3f:	lock in eax,0x14
  418f42:	pop    ebx
  418f43:	lock push edx
  418f45:	sbb    al,0x14
  418f47:	mov    al,cl
  418f49:	add    DWORD PTR [edx],ebx
  418f4b:	cmp    al,0xa0
  418f4d:	inc    ebp
  418f4e:	mov    edx,0xeaa52b63
  418f53:	pushf  
  418f54:	ins    BYTE PTR es:[edi],dx
  418f55:	inc    edi
  418f56:	add    al,0xdf
  418f58:	popf   
  418f59:	stos   DWORD PTR es:[edi],eax
  418f5a:	or     bl,ch
  418f5c:	fmul   DWORD PTR ds:0xcc1d388a
  418f62:	pop    ebx
  418f63:	cmp    eax,0xb046bca5
  418f68:	sub    bl,dh
  418f6a:	mov    bh,0xc1
  418f6c:	xor    ch,dl
  418f6e:	mov    bl,0x9a
  418f70:	push   ecx
  418f71:	arpl   WORD PTR [ebx],di
  418f73:	mov    eax,0x4ae53c68
  418f78:	push   edi
  418f79:	aas    
  418f7a:	sti    
  418f7b:	ins    BYTE PTR es:[edi],dx
  418f7c:	mov    eax,esp
  418f7e:	or     BYTE PTR [ecx+0x4f3272c4],0xec
  418f85:	clc    
  418f86:	cmp    DWORD PTR [ecx+ecx*4+0x2b222a24],esp
  418f8d:	loope  0x418fd0
  418f8f:	jmp    0x5cee:0xb158949c
  418f96:	jno    0x419002
  418f98:	aam    0x3e
  418f9a:	enter  0x87a1,0xcd
  418f9e:	(bad)  
  418f9f:	xchg   ebx,eax
  418fa0:	inc    DWORD PTR [edx+0x260a1ace]
  418fa6:	mov    esi,0x27607852
  418fab:	or     DWORD PTR [esi],ebp
  418fad:	fsubr  DWORD PTR [ebx+ebp*4-0x1b826457]
  418fb4:	(bad)  
  418fb5:	cmc    
  418fb6:	stos   DWORD PTR es:[edi],eax
  418fb7:	lds    esi,FWORD PTR [esi+0xae03071]
  418fbd:	jbe    0x419014
  418fbf:	cli    
  418fc0:	sbb    esi,DWORD PTR [edi-0x3a]
  418fc3:	dec    eax
  418fc4:	xchg   edi,eax
  418fc5:	fwait
  418fc6:	inc    esp
  418fc7:	arpl   WORD PTR [ebx],cx
  418fc9:	jg     0x418f7c
  418fcb:	mov    BYTE PTR [edi+ebx*2-0xb],ch
  418fcf:	xor    DWORD PTR [edi+0x7f],ecx
  418fd2:	cmp    eax,edi
  418fd4:	hlt    
  418fd5:	xchg   edx,eax
  418fd6:	repz fcmovb st,st(0)
  418fd9:	es je  0x418fb7
  418fdc:	ins    DWORD PTR es:[edi],dx
  418fdd:	out    dx,al
  418fde:	push   edx
  418fdf:	sbb    eax,0xf2dd69af
  418fe4:	xlat   BYTE PTR ds:[ebx]
  418fe5:	add    edx,DWORD PTR [ebp-0x4215d393]
  418feb:	iret   
  418fec:	pop    ds
  418fed:	push   0x7434294
  418ff2:	adc    edx,DWORD PTR [ebp-0x353e03eb]
  418ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ff9:	dec    BYTE PTR [edi+0x4c]
  418ffc:	dec    edx
  418ffd:	or     BYTE PTR ds:0xc114624a,al
  419003:	and    BYTE PTR [edx-0x5],dh
  419006:	add    esp,ebp
  419008:	xor    al,0xc1
  41900a:	test   al,0x4d
  41900c:	imul   eax,DWORD PTR [ebx-0x22],0xfffffff9
  419010:	mov    ch,0x96
  419012:	push   edx
  419013:	sub    bh,0x28
  419016:	js     0x418fce
  419018:	test   al,0x9c
  41901a:	and    al,0x65
  41901c:	mov    eax,ds:0xa1c63623
  419021:	or     DWORD PTR [eax+0x3424c02d],ebp
  419027:	iret   
  419028:	test   eax,0xfd57a081
  41902d:	and    al,0x63
  41902f:	or     cl,BYTE PTR [ebp+0x3c]
  419032:	ins    DWORD PTR es:[edi],dx
  419033:	pop    edi
  419034:	pushf  
  419035:	nop
  419036:	js     0x418fe0
  419038:	leave  
  419039:	mov    cl,0xba
  41903b:	jg     0x419039
  41903d:	inc    esp
  41903e:	lods   al,BYTE PTR ds:[esi]
  41903f:	push   eax
  419040:	push   0x54
  419042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419043:	or     esp,DWORD PTR [ebp-0x46]
  419046:	xchg   ebx,eax
  419047:	inc    ecx
  419048:	mov    bh,0x69
  41904a:	ins    BYTE PTR es:[edi],dx
  41904b:	pop    ecx
  41904c:	jg     0x419039
  41904e:	out    0x56,eax
  419050:	(bad)  
  419052:	repnz retf 
  419054:	retf   
  419055:	sbb    esp,edi
  419057:	inc    eax
  419058:	outs   dx,DWORD PTR ds:[esi]
  419059:	push   esp
  41905a:	cld    
  41905b:	out    dx,eax
  41905c:	mov    ds:0xe1886a20,al
  419061:	pop    eax
  419062:	cmp    BYTE PTR [esi-0x38322d9a],dh
  419068:	mov    dh,0xb1
  41906a:	push   ebx
  41906b:	inc    edx
  41906c:	aas    
  41906d:	adc    edx,ebp
  41906f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419070:	(bad)  
  419071:	pop    edi
  419072:	inc    edi
  419073:	push   edx
  419074:	cdq    
  419075:	not    DWORD PTR [ebx+0xc191877]
  41907b:	test   BYTE PTR [ebx-0x33],bl
  41907e:	iret   
  41907f:	jb     0x419022
  419081:	inc    ebx
  419082:	mov    cl,0xa6
  419084:	leave  
  419085:	pop    edx
  419086:	(bad)  
  419087:	rcr    DWORD PTR [eax],cl
  419089:	xor    ebx,ecx
  41908b:	aam    0x45
  41908d:	mov    ecx,DWORD PTR [ebx+0x5e1321eb]
  419093:	jecxz  0x419056
  419095:	xchg   ebp,eax
  419096:	or     edi,DWORD PTR [eax-0xf]
  419099:	pop    ecx
  41909a:	dec    ebx
  41909b:	aad    0x3b
  41909d:	xor    bh,BYTE PTR [ebx-0x3055ba19]
  4190a3:	ja     0x4190b5
  4190a5:	call   FWORD PTR [ecx+0x7cb42dbe]
  4190ab:	or     eax,0x6b726a2b
  4190b0:	fimul  DWORD PTR [eax]
  4190b2:	call   0xbc37b06f
  4190b7:	jmp    0x10bf:0x5733f6bb
  4190be:	mov    al,ds:0x6cb7e417
  4190c3:	or     DWORD PTR [ebp+0x6f],edi
  4190c6:	fimul  WORD PTR [eax-0x4ad053b5]
  4190cc:	and    al,0x96
  4190ce:	push   edi
  4190cf:	xchg   esp,eax
  4190d0:	aas    
  4190d1:	popf   
  4190d2:	imul   ecx,ecx,0xffffffa5
  4190d5:	jnp    0x419148
  4190d7:	shl    bh,0xc0
  4190da:	mov    bl,0x29
  4190dc:	loop   0x419135
  4190de:	dec    esp
  4190df:	adc    DWORD PTR [eax],ebp
  4190e1:	sub    bl,BYTE PTR [eax+0x5414f318]
  4190e7:	sbb    BYTE PTR [ebx+eax*8-0x11],bl
  4190eb:	jno    0x419116
  4190ed:	mov    bh,0xe3
  4190ef:	push   0x1
  4190f1:	xor    eax,0x1a44dfcf
  4190f6:	out    dx,eax
  4190f7:	pop    edx
  4190f8:	(bad)  
  4190f9:	repz aaa 
  4190fb:	jne    0x4190a6
  4190fd:	jno    0x4190d7
  4190ff:	sub    dl,0x9e
  419102:	xchg   esp,eax
  419103:	in     al,dx
  419104:	xchg   esp,edx
  419106:	xlat   BYTE PTR ds:[ebx]
  419107:	mov    ah,0xb5
  419109:	mov    DWORD PTR [ebp-0x53dadb3c],eax
  41910f:	xchg   ebp,eax
  419110:	adc    eax,0x24965a33
  419115:	ds shr ah,cl
  419118:	bound  esi,QWORD PTR [eax+esi*1-0x58]
  41911c:	mov    ?,WORD PTR [esi+0x1c]
  41911f:	ds push edx
  419121:	imul   ecx,DWORD PTR [edx+eax*8],0xf356263e
  419128:	jle    0x419102
  41912a:	pop    ecx
  41912b:	sub    al,0x87
  41912d:	inc    ecx
  41912e:	add    al,0xa8
  419130:	mov    edi,0xea56038e
  419135:	pop    ss
  419136:	or     DWORD PTR [ecx+0x2a],eax
  419139:	fmul   DWORD PTR [edx]
  41913b:	in     al,dx
  41913c:	mov    esi,fs
  41913e:	fild   WORD PTR [ebx-0x45]
  419141:	(bad)  
  419142:	jge    0x419175
  419144:	add    DWORD PTR [esi],edx
  419146:	sub    BYTE PTR [esi-0x7d],dl
  419149:	sbb    al,0xb7
  41914b:	and    BYTE PTR [edi-0x79],dh
  41914e:	sub    al,0x4f
  419150:	push   cs
  419151:	in     eax,dx
  419152:	dec    ebx
  419153:	cli    
  419154:	addps  xmm1,XMMWORD PTR [esi-0x43]
  419158:	inc    ecx
  419159:	pop    es
  41915a:	daa    
  41915b:	mov    ecx,0x219796ca
  419160:	jb     0x4191ad
  419162:	ds jo  0x4190ed
  419165:	sti    
  419166:	pop    ss
  419167:	pop    ebp
  419168:	cmp    eax,0xce39669d
  41916d:	push   es
  41916e:	adc    BYTE PTR [eax-0x29],ah
  419171:	shl    ch,1
  419173:	dec    edx
  419174:	std    
  419175:	cwde   
  419176:	pop    esp
  419177:	out    0xaf,eax
  419179:	imul   ecx,esi,0x5f
  41917c:	xchg   ebx,eax
  41917d:	ds int 0x9d
  419180:	cmp    al,0x46
  419182:	push   ss
  419183:	lock inc edx
  419185:	mov    esp,0x15eb4e56
  41918a:	stc    
  41918b:	sbb    esi,ecx
  41918d:	fidiv  WORD PTR [ebp+0x33d82b77]
  419193:	push   ss
  419194:	jl     0x4191b3
  419196:	jl     0x41918b
  419198:	out    0xc,eax
  41919a:	mov    cl,0x27
  41919c:	js     0x4191e8
  41919e:	add    eax,0x8cc3e13b
  4191a3:	gs repnz ins BYTE PTR es:[edi],dx
  4191a6:	or     eax,0x736ec730
  4191ab:	hlt    
  4191ac:	fimul  WORD PTR [ebp+edi*2+0x5a]
  4191b0:	or     edi,DWORD PTR [ebp+0x34866814]
  4191b6:	stos   BYTE PTR es:[edi],al
  4191b7:	lahf   
  4191b8:	push   ebx
  4191b9:	dec    edx
  4191ba:	icebp  
  4191bb:	sbb    DWORD PTR [ecx+eiz*1+0x6e],ecx
  4191bf:	std    
  4191c0:	mov    DWORD PTR [eax],esp
  4191c2:	adc    DWORD PTR [edx+0x178f8b6d],edx
  4191c8:	outs   dx,DWORD PTR ds:[esi]
  4191c9:	fdivrp st(0),st
  4191cb:	add    eax,0xe72a7f44
  4191d0:	adc    dl,cl
  4191d2:	fwait
  4191d3:	cmp    ah,bl
  4191d5:	leave  
  4191d6:	stos   BYTE PTR es:[edi],al
  4191d7:	in     eax,dx
  4191d8:	in     al,0x4
  4191da:	icebp  
  4191db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191dc:	push   es
  4191dd:	sub    edi,DWORD PTR [ebx-0xd]
  4191e0:	push   eax
  4191e1:	inc    ebx
  4191e2:	fwait
  4191e3:	sub    al,0x6a
  4191e5:	test   DWORD PTR [ebp-0x131023f1],ebp
  4191eb:	rcr    DWORD PTR [edx+0x57],1
  4191ee:	popa   
  4191ef:	push   es
  4191f0:	add    DWORD PTR [esi+0x36],edi
  4191f3:	sub    BYTE PTR [ebp+0x49],bh
  4191f6:	ror    BYTE PTR [eax],cl
  4191f8:	icebp  
  4191f9:	cmp    ch,BYTE PTR [ebx-0x202d057c]
  4191ff:	mov    ebx,0x533da5aa
  419204:	mov    eax,ds:0xacb68b4e
  419209:	or     al,0x4e
  41920b:	lods   al,BYTE PTR ds:[esi]
  41920c:	repz mov ebp,0xccc928d4
  419212:	mov    ecx,0xe2aba75
  419217:	or     BYTE PTR [edx-0x2],ch
  41921a:	xchg   esi,eax
  41921b:	stos   BYTE PTR es:[edi],al
  41921c:	and    DWORD PTR [eax],eax
  41921e:	sbb    eax,0xd33e9203
  419223:	lods   al,BYTE PTR ds:[esi]
  419224:	cmp    BYTE PTR [ebx+0x2032240a],ch
  41922a:	aaa    
  41922b:	mov    bh,0x1f
  41922d:	xchg   BYTE PTR [edi+0x65],al
  419230:	sub    DWORD PTR [eax-0x12f78832],edi
  419236:	xor    eax,0xbb38c13c
  41923b:	push   cs
  41923c:	lock sbb ecx,esp
  41923f:	sbb    DWORD PTR [ecx-0x64],0x101e62b0
  419246:	pop    ss
  419247:	aaa    
  419248:	sub    dl,ah
  41924a:	fnsave [eax*2+0x571cc132]
  419251:	xor    al,0x67
  419253:	sbb    DWORD PTR [ebp-0x7c624068],esp
  419259:	sub    esp,ebx
  41925b:	jbe    0x41928a
  41925d:	sub    DWORD PTR [edi+0x543f4ce],edi
  419263:	dec    eax
  419264:	les    eax,FWORD PTR [ebp+0x80eb612]
  41926a:	jo     0x419220
  41926c:	pop    ecx
  41926d:	pop    ecx
  41926e:	mov    ebx,0x62ae3576
  419273:	adc    BYTE PTR [ebp+edx*4+0x62bd2ab7],bh
  41927a:	pop    ecx
  41927b:	xor    eax,0xce8c7195
  419280:	aam    0x5
  419282:	scas   al,BYTE PTR es:[edi]
  419283:	xchg   ebp,eax
  419284:	mov    ch,0xf8
  419286:	nop
  419287:	xor    al,0xc1
  419289:	ds pop esi
  41928b:	shl    DWORD PTR [edi+0x78],0xe6
  41928f:	dec    ebp
  419290:	jmp    0x419223
  419292:	dec    ecx
  419293:	mov    ah,0x72
  419295:	dec    esi
  419296:	mov    cl,0x28
  419298:	aas    
  419299:	sti    
  41929a:	(bad)  
  41929b:	cdq    
  41929c:	pop    ebp
  41929d:	xor    eax,DWORD PTR [ebx]
  41929f:	mov    ch,0x36
  4192a1:	in     eax,dx
  4192a2:	fst    DWORD PTR [edx+0x4a45457d]
  4192a8:	add    edx,DWORD PTR [edi+eiz*2+0x40]
  4192ac:	rol    BYTE PTR [ebp-0x622478b3],cl
  4192b2:	loop   0x4192d1
  4192b4:	call   0x956232e
  4192b9:	stos   BYTE PTR es:[edi],al
  4192ba:	and    DWORD PTR es:[edx+0x50c6a5a7],0xffffffb6
  4192c2:	int3   
  4192c3:	imul   ebp,DWORD PTR [eax+0x31407532],0x30
  4192ca:	pop    eax
  4192cb:	in     al,dx
  4192cc:	push   edx
  4192cd:	fild   WORD PTR [ebx-0x205c22a6]
  4192d3:	(bad)  
  4192d4:	out    dx,eax
  4192d5:	inc    ecx
  4192d6:	(bad)
  4192d9:	jnp    0x419273
  4192db:	fsin   
  4192dd:	mov    ecx,DWORD PTR [edx-0x1c1e9300]
  4192e3:	push   cs
  4192e4:	inc    esi
  4192e5:	shl    ah,0x51
  4192e8:	fwait
  4192e9:	adc    dh,bl
  4192eb:	pop    ebx
  4192ec:	ret    0xfa69
  4192ef:	add    BYTE PTR [eax],al
  4192f1:	add    BYTE PTR [ebp+0xe],al
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x438b5d81
  419300:	test   al,0xd2
  419302:	cmc    
  419303:	sgdtd  [eax]
  419306:	cmc    
  419307:	add    al,0x0
  419309:	add    BYTE PTR [eax-0x54b2576e],ch
  41930f:	cmp    ah,al
  419311:	pop    edi
  419312:	push   ds
  419313:	inc    ebp
  419314:	clc    
  419315:	mov    eax,ds:0xda478a1b
  41931a:	ja     0x41939b
  41931c:	ficom  DWORD PTR [ebx-0x2aa0c575]
  419322:	push   esp
  419323:	(bad)  
  419324:	sub    cl,BYTE PTR [edi+edi*2]
  419327:	fwait
  419328:	xchg   edx,eax
  419329:	div    dl
  41932b:	pusha  
  41932c:	adc    BYTE PTR [edi+0x1075a7f8],dh
  419332:	xor    eax,ebx
  419334:	xor    DWORD PTR [edi+0x3a],ebx
  419337:	cli    
  419338:	fcom   QWORD PTR [esi-0x48]
  41933b:	pop    ss
  41933c:	inc    edx
  41933d:	adc    edx,DWORD PTR [edx+0x2d]
  419340:	xchg   ebx,eax
  419341:	test   DWORD PTR [edi-0x4f],0x4d3924a7
  419348:	cmp    eax,0xc5458324
  41934d:	repz icebp 
  41934f:	cmp    eax,DWORD PTR [ebx+eax*2]
  419352:	test   BYTE PTR [esp+ebx*4],ch
  419355:	out    dx,eax
  419356:	inc    esp
  419357:	or     BYTE PTR ds:0xf347f128,dh
  41935d:	jne    0x419395
  41935f:	cld    
  419360:	add    BYTE PTR [eax+0x14f36f06],bl
  419366:	mov    edx,0x59a905c3
  41936b:	jmp    0x8137:0xb9428c6f
  419372:	fisub  WORD PTR [esp+esi*2-0x5bda3bd]
  419379:	inc    esi
  41937a:	or     esp,ebx
  41937c:	shr    DWORD PTR ds:[esi-0x4b],1
  419380:	jbe    0x4193d4
  419382:	mov    bh,0x1d
  419384:	pop    ebp
  419385:	call   0xe752aa4e
  41938a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41938b:	es cld 
  41938d:	in     al,dx
  41938e:	dec    ebx
  41938f:	ja     0x419407
  419391:	push   esp
  419392:	ins    BYTE PTR es:[edi],dx
  419393:	mov    gs,ecx
  419395:	ja     0x41940f
  419397:	retf   
  419398:	nop
  419399:	imul   DWORD PTR es:[edi-0x7b]
  41939d:	adc    al,0xb6
  41939f:	xor    bl,al
  4193a1:	adc    edx,esi
  4193a3:	outs   dx,DWORD PTR ds:[esi]
  4193a4:	ret    
  4193a5:	lods   al,BYTE PTR ds:[esi]
  4193a6:	nop
  4193a7:	jle    0x41936f
  4193a9:	pop    ss
  4193aa:	sbb    al,0x38
  4193ac:	(bad)  
  4193ad:	cmc    
  4193ae:	dec    esp
  4193af:	and    BYTE PTR [ebx+0x2],dh
  4193b2:	mov    ebp,0x4bb82cbe
  4193b7:	jp     0x41940d
  4193b9:	and    ch,BYTE PTR [ebx+0x3308cefe]
  4193bf:	jno    0x4193f5
  4193c1:	mov    ?,esi
  4193c3:	test   DWORD PTR [eax],esi
  4193c5:	dec    ecx
  4193c6:	(bad)  
  4193c7:	retf   0xaedb
  4193ca:	push   0xfffffff5
  4193cc:	and    eax,0x27a47831
  4193d1:	pop    edi
  4193d2:	frstor [edi+0x55679442]
  4193d8:	test   eax,0xf869c98d
  4193dd:	fiadd  DWORD PTR ds:0x85499529
  4193e3:	adc    al,0xfd
  4193e5:	shl    bl,0x66
  4193e8:	mov    ds:0x43b9961b,al
  4193ed:	xchg   esi,eax
  4193ee:	xchg   ecx,eax
  4193ef:	pop    ss
  4193f0:	ret    0xee82
  4193f3:	aas    
  4193f4:	xlat   BYTE PTR ds:[ebx]
  4193f5:	pop    ebx
  4193f6:	clc    
  4193f7:	push   edi
  4193f8:	cld    
  4193f9:	add    edi,DWORD PTR [edx-0x19]
  4193fc:	sbb    DWORD PTR [edi],ecx
  4193fe:	test   BYTE PTR [eax+edx*2],0xf4
  419402:	sbb    ebx,DWORD PTR [eax-0x6b83b43]
  419408:	leave  
  419409:	jmp    0x419397
  41940b:	xor    BYTE PTR [ebx+eax*1+0x76],dh
  41940f:	aas    
  419410:	push   edx
  419411:	jmp    0x419400
  419413:	mov    bh,0xab
  419415:	dec    edi
  419416:	jns    0x419412
  419418:	in     eax,dx
  419419:	cmp    eax,DWORD PTR [eax-0x32]
  41941c:	xchg   ebx,eax
  41941d:	push   esp
  41941e:	das    
  41941f:	sbb    al,dh
  419421:	lods   al,BYTE PTR ds:[esi]
  419422:	cmp    eax,0x8fe2d137
  419427:	(bad)  
  419428:	out    dx,al
  419429:	call   0xf151eb38
  41942e:	clc    
  41942f:	(bad)  
  419430:	out    dx,al
  419431:	retf   
  419432:	lock cld 
  419434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419435:	outs   dx,DWORD PTR ds:[esi]
  419436:	inc    eax
  419437:	adc    al,0x90
  419439:	leave  
  41943a:	push   eax
  41943c:	lea    edx,[eax+0x7b]
  41943f:	outs   dx,DWORD PTR ds:[esi]
  419440:	cmp    al,0x51
  419442:	dec    ecx
  419443:	dec    edx
  419444:	sti    
  419445:	aas    
  419446:	stos   DWORD PTR es:[edi],eax
  419447:	jae    0x419418
  419449:	stc    
  41944a:	nop
  41944b:	jmp    0x4194a2
  41944d:	shl    ebp,1
  41944f:	sbb    BYTE PTR [eax+0x466e01e],ch
  419455:	cmp    BYTE PTR [ecx],al
  419457:	test   DWORD PTR [eax-0x3fdf28c2],esp
  41945d:	and    esp,edi
  41945f:	cwde   
  419460:	push   ss
  419461:	xchg   ebp,eax
  419462:	inc    esi
  419463:	inc    esi
  419464:	jmp    FWORD PTR [ebp+0x5c]
  419467:	fmul   QWORD PTR [esp+ebx*8+0x5a]
  41946b:	not    BYTE PTR [ebx-0x464e57cf]
  419471:	inc    ecx
  419472:	sub    dh,0xb9
  419475:	or     al,0x43
  419477:	lods   al,BYTE PTR ds:[esi]
  419478:	xchg   esi,eax
  419479:	add    BYTE PTR [esi-0x31],ch
  41947c:	sub    DWORD PTR [ebp+0x552d3b9b],edx
  419482:	in     al,dx
  419483:	imul   edi,ebx,0x41
  419486:	xor    bl,BYTE PTR [esi-0xf]
  419489:	mov    ecx,ebp
  41948b:	in     eax,dx
  41948c:	jl     0x419455
  41948e:	cmp    eax,0x1b082a49
  419493:	daa    
  419494:	sub    al,0xe
  419496:	mov    dl,bl
  419498:	jne    0x419474
  41949a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41949b:	ss push esp
  41949d:	and    al,BYTE PTR ds:0x7d7e481a
  4194a3:	push   0x97157a20
  4194a8:	(bad)  
  4194a9:	xlat   BYTE PTR ds:[ebx]
  4194aa:	sub    esp,0xffffffb3
  4194ad:	or     DWORD PTR [esi],esi
  4194af:	sbb    al,0xff
  4194b1:	shr    BYTE PTR [edi-0x2b],1
  4194b4:	dec    ebx
  4194b5:	push   esi
  4194b6:	xor    eax,0x9a97293c
  4194bb:	add    DWORD PTR fs:[ebx+ebp*4+0x4c],0x6168c758
  4194c4:	xchg   DWORD PTR [edx],edi
  4194c6:	jns    0x41946a
  4194c8:	or     BYTE PTR [edi+0x30],0xcd
  4194cc:	nop    DWORD PTR [eax]
  4194cf:	sbb    ebp,esp
  4194d1:	xor    DWORD PTR [edi],ebp
  4194d3:	inc    ebx
  4194d4:	xchg   esp,eax
  4194d5:	jle    0x41952d
  4194d7:	add    al,0x6d
  4194d9:	fimul  DWORD PTR [eax-0x66b26c65]
  4194df:	fsubr  DWORD PTR [esi+0x44bf21a6]
  4194e5:	mov    cl,0x9a
  4194e7:	loopne 0x4194e0
  4194e9:	mov    ecx,0xe63ae77
  4194ee:	stos   DWORD PTR es:[edi],eax
  4194ef:	jle    0x41953c
  4194f1:	pop    eax
  4194f2:	in     al,dx
  4194f3:	leave  
  4194f4:	es sbb bh,0x15
  4194f8:	pop    ds
  4194f9:	xchg   ebp,edx
  4194fb:	xchg   esi,eax
  4194fc:	cwde   
  4194fd:	aaa    
  4194fe:	int3   
  4194ff:	idiv   BYTE PTR [edi+esi*1+0x4b2d9bc5]
  419506:	mov    edx,DWORD PTR [edx]
  419508:	(bad)  
  419509:	jb     0x419531
  41950b:	fiadd  DWORD PTR [ecx+eax*8+0x2322ae3d]
  419512:	jg     0x419568
  419514:	and    DWORD PTR gs:[esi-0xf],ebx
  419518:	or     ch,ah
  41951a:	mov    esi,eax
  41951c:	cmp    al,0xd5
  41951e:	push   esi
  41951f:	push   0x4396e804
  419524:	(bad)  
  419525:	retf   
  419526:	gs jae 0x4195a7
  419529:	inc    esp
  41952a:	adc    DWORD PTR [eax+0x65],eax
  41952d:	add    al,0x28
  41952f:	adc    DWORD PTR [edx+0x6f],ebp
  419532:	push   ebx
  419533:	pop    edx
  419534:	and    edi,DWORD PTR [esi]
  419536:	pop    es
  419537:	sbb    DWORD PTR [eax-0x5b],ebx
  41953a:	xchg   ebx,eax
  41953b:	outs   dx,BYTE PTR fs:[esi]
  41953d:	call   0x50c0:0x3d7f7dab
  419544:	loopne 0x41954b
  419546:	ja     0x419555
  419548:	mov    esp,0xdd35f9d3
  41954d:	dec    eax
  41954e:	mov    bh,0x80
  419550:	jp     0x41951d
  419552:	mov    al,0x28
  419554:	dec    esi
  419555:	or     BYTE PTR [edi+eiz*1],bl
  419558:	icebp  
  419559:	fld    TBYTE PTR [ecx+esi*4+0x2dd5f629]
  419560:	ret    
  419561:	push   esp
  419562:	or     bl,BYTE PTR [ebp+0x18]
  419565:	dec    ebx
  419566:	out    dx,eax
  419567:	xchg   esi,eax
  419568:	add    al,0xfd
  41956a:	retf   0x803a
  41956d:	push   ecx
  41956e:	mov    cs,WORD PTR [eax+0x78cd1d30]
  419574:	pop    edi
  419575:	call   0x1ebb:0x652c4267
  41957c:	and    DWORD PTR [esp+ebp*1],eax
  41957f:	pop    edx
  419580:	fisubr DWORD PTR [edx]
  419582:	sub    dh,BYTE PTR [edx+0x51]
  419585:	retf   0x9457
  419588:	out    dx,eax
  419589:	or     DWORD PTR [edi+0x17e8901f],0x70
  419590:	repnz pusha 
  419592:	mov    BYTE PTR [ebx+0x40],0x27
  419596:	nop
  419597:	mov    ebp,0xf28b183
  41959c:	xor    al,0xfa
  41959e:	mov    edx,0x69a1edd1
  4195a3:	fstp   TBYTE PTR [ecx-0x2b]
  4195a6:	push   ss
  4195a7:	and    al,0xc
  4195a9:	shl    DWORD PTR [edi+0x1e29201f],1
  4195af:	jne    0x4195cb
  4195b1:	jg     0x419617
  4195b3:	pop    es
  4195b4:	outs   dx,BYTE PTR ds:[esi]
  4195b5:	stc    
  4195b6:	mov    esi,0xf515561c
  4195bb:	push   0xb9074df1
  4195c0:	daa    
  4195c1:	inc    edi
  4195c2:	push   ebp
  4195c3:	xor    al,BYTE PTR [edx]
  4195c5:	push   ss
  4195c6:	mov    esp,0x332b00f5
  4195cb:	imul   BYTE PTR [ecx]
  4195cd:	mov    al,ds:0xdb6a15bf
  4195d2:	stos   BYTE PTR es:[edi],al
  4195d3:	mov    eax,0x29093d40
  4195d8:	shr    edi,1
  4195da:	xchg   edi,eax
  4195db:	inc    edx
  4195dc:	push   ecx
  4195dd:	jle    0x41961e
  4195df:	stos   BYTE PTR es:[edi],al
  4195e0:	dec    esp
  4195e1:	fwait
  4195e2:	dec    esi
  4195e3:	mov    bl,0x6b
  4195e5:	jmp    0xbc5773c3
  4195ea:	xchg   ebp,eax
  4195eb:	jbe    0x4195ee
  4195ed:	and    DWORD PTR [esi-0x31e65ab],ebx
  4195f3:	loope  0x419594
  4195f5:	scas   al,BYTE PTR es:[edi]
  4195f6:	iret   
  4195f7:	sahf   
  4195f8:	jle    0x4195a4
  4195fa:	not    DWORD PTR [esi]
  4195fc:	xchg   ecx,eax
  4195fd:	repnz push cs
  4195ff:	cld    
  419600:	imul   ebp,DWORD PTR [ebp+0x73f23246],0x16
  419607:	adc    ebp,DWORD PTR [ecx-0x616caa32]
  41960d:	inc    ebx
  41960e:	adc    BYTE PTR [ebx-0x3e078570],ah
  419614:	adc    cl,dl
  419616:	retf   0x4d6e
  419619:	loop   0x41961f
  41961b:	outs   dx,DWORD PTR ds:[esi]
  41961c:	retf   
  41961d:	mov    esp,0x31a0d70
  419622:	cmp    BYTE PTR [esi-0x6d],bh
  419625:	call   0x8a8d7a33
  41962a:	mov    ah,0x56
  41962c:	test   eax,0xbde3787
  419631:	dec    edx
  419632:	mov    dl,0x3d
  419634:	jle    0x4195ed
  419636:	loope  0x419634
  419638:	jg     0x419635
  41963a:	and    al,0x8e
  41963c:	jmp    0xf27b:0xaae51510
  419643:	test   DWORD PTR [ebx+0x69],eax
  419646:	js     0x41966e
  419648:	jg     0x4195f6
  41964a:	ins    DWORD PTR es:[edi],dx
  41964b:	or     BYTE PTR [edi-0x28],ah
  41964e:	imul   esp
  419650:	fstp   QWORD PTR [edi+0x3c5805bc]
  419656:	push   edx
  419657:	dec    edi
  419658:	je     0x419604
  41965a:	push   ss
  41965b:	sbb    ebx,DWORD PTR ds:[ecx]
  41965e:	sbb    DWORD PTR [edi-0x6230d460],edi
  419664:	jmp    0xf129:0xe81b9d01
  41966b:	fninit 
  41966d:	push   edi
  41966e:	ret    
  41966f:	rcl    BYTE PTR [edx-0x7fc40e64],1
  419675:	les    ebx,FWORD PTR [edx+esi*1-0x1e]
  419679:	(bad)  
  41967a:	out    dx,al
  41967b:	(bad)  
  41967c:	mov    eax,ds:0x76044a18
  419681:	jmp    FWORD PTR [eax-0x604de884]
  419687:	push   ecx
  419688:	in     eax,0xfc
  41968a:	jl     0x419613
  41968c:	nop
  41968d:	retf   0x4a78
  419690:	pushf  
  419691:	iret   
  419692:	(bad)  
  419693:	and    al,0x38
  419695:	cmp    ebp,eax
  419697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419698:	retf   
  419699:	scas   eax,DWORD PTR es:[edi]
  41969a:	add    eax,DWORD PTR [edx-0x57]
  41969d:	dec    esi
  41969e:	ret    
  41969f:	les    ebp,FWORD PTR [ebx-0x53]
  4196a2:	cmp    eax,0xe985affe
  4196a7:	xchg   ebp,eax
  4196a8:	cmp    eax,0xc77ab7a6
  4196ad:	cdq    
  4196ae:	push   ebx
  4196af:	or     DWORD PTR [edi+0xc],eax
  4196b2:	jnp    0x4196fc
  4196b4:	or     BYTE PTR [edx+0x47],dh
  4196b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196b8:	pop    ebx
  4196b9:	ficom  WORD PTR [edi+0x64bd12fb]
  4196bf:	stc    
  4196c0:	mov    al,ds:0xb908a807
  4196c5:	pop    ecx
  4196c6:	sbb    eax,0x57446006
  4196cb:	out    0x26,eax
  4196cd:	inc    edi
  4196ce:	sub    BYTE PTR [ebx],dl
  4196d0:	add    ecx,ebx
  4196d2:	add    edi,0x51
  4196d5:	cmp    esi,esp
  4196d7:	mov    ds:0x85774eb4,al
  4196dc:	sub    al,0x4d
  4196de:	in     eax,dx
  4196df:	cdq    
  4196e0:	into   
  4196e1:	or     ebp,ebx
  4196e3:	dec    ebp
  4196e4:	xor    esp,DWORD PTR [ebp-0x50db8291]
  4196ea:	(bad)  
  4196eb:	lea    eax,[eax]
  4196ed:	cmp    eax,0x5a70f2b0
  4196f2:	mov    cl,0x5d
  4196f4:	je     0x4196ac
  4196f6:	mov    esi,0xfbc11f5f
  4196fb:	adc    DWORD PTR [edi+edx*8-0x2b],esi
  4196ff:	push   ebx
  419700:	mov    esp,0x6327350d
  419705:	cmp    eax,0x3c1ef0d7
  41970a:	mov    ah,0x28
  41970c:	inc    di
  41970e:	dec    ebp
  41970f:	cmc    
  419710:	pop    ss
  419711:	imul   esi,ebp,0x14b6f68f
  419717:	mov    ah,0xed
  419719:	push   ss
  41971a:	mov    dl,0x32
  41971c:	enter  0x4241,0x8c
  419720:	push   ds
  419721:	lds    edi,FWORD PTR [eax]
  419723:	rcr    DWORD PTR [ebx+0x13],0xa5
  419727:	neg    BYTE PTR [edi]
  419729:	sahf   
  41972a:	pop    ss
  41972b:	ror    BYTE PTR [edx-0x7eeb1d13],1
  419731:	push   ecx
  419732:	les    esp,FWORD PTR [ecx+edi*2-0x439cbf1e]
  419739:	jge    0x4196cc
  41973b:	pop    ecx
  41973c:	add    ch,cl
  41973e:	mov    ds:0x5a2b1f34,al
  419743:	inc    ebx
  419744:	je     0x41970e
  419746:	iret   
  419747:	and    ebx,DWORD PTR [eax]
  419749:	stc    
  41974a:	mov    ebx,0x971aeb72
  41974f:	aam    0xe9
  419751:	jb     0x419718
  419753:	pop    es
  419754:	ficomp DWORD PTR gs:[edi+0x3699994b]
  41975b:	dec    esp
  41975c:	shl    DWORD PTR [edx+0x141fadbb],1
  419762:	or     edx,DWORD PTR [esi-0x5e9ce80e]
  419768:	pop    esi
  419769:	sub    al,0xea
  41976b:	in     al,dx
  41976c:	xchg   edx,eax
  41976d:	stos   BYTE PTR es:[edi],al
  41976e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41976f:	retf   0x67d7
  419772:	inc    edi
  419773:	out    dx,eax
  419774:	das    
  419775:	test   DWORD PTR [ebx+0x1fda8d5f],edx
  41977b:	retf   0xe869
  41977e:	jbe    0x4197ad
  419780:	rcr    ah,1
  419782:	retf   0x9de0
  419785:	test   dh,dl
  419787:	sbb    eax,0xae9691db
  41978c:	stc    
  41978d:	mov    DWORD PTR [eax+0xac5329e],ecx
  419793:	call   DWORD PTR [esi+0x65]
  419796:	jmp    0x66d8cdc7
  41979b:	daa    
  41979c:	fld    DWORD PTR [ebx-0x4f]
  41979f:	sub    ch,BYTE PTR [ebp-0x6273ab74]
  4197a5:	push   ebp
  4197a6:	xor    eax,0x18eab92e
  4197ab:	push   edi
  4197ac:	xor    dh,BYTE PTR [ebp+0x50]
  4197af:	sub    eax,0x97452eda
  4197b4:	into   
  4197b5:	and    dl,bl
  4197b7:	fnstenv [esp+edx*8-0x46]
  4197bb:	imul   edx,esp,0xffffffa9
  4197be:	xor    BYTE PTR [eax-0x35],ah
  4197c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197c2:	and    edi,DWORD PTR ds:0x871321fc
  4197c8:	adc    eax,DWORD PTR [eax-0x10]
  4197cb:	es inc ebx
  4197cd:	cli    
  4197ce:	out    0xd6,eax
  4197d0:	inc    esi
  4197d1:	mov    bl,0x95
  4197d3:	retf   
  4197d4:	jbe    0x41975a
  4197d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197d7:	into   
  4197d8:	dec    ebp
  4197d9:	ins    BYTE PTR es:[edi],dx
  4197da:	or     eax,0x20e9b2b9
  4197df:	fdiv   QWORD PTR [edi-0x6]
  4197e2:	adc    ebx,DWORD PTR [eax+0xe5d8919]
  4197e8:	jne    0x4197d0
  4197ea:	sbb    DWORD PTR [esi],0x3d
  4197ed:	nop
  4197ee:	scas   al,BYTE PTR es:[edi]
  4197ef:	neg    BYTE PTR [edi]
  4197f1:	pop    ss
  4197f2:	xor    edi,DWORD PTR [edx-0xf71e548]
  4197f8:	mov    bl,0x5d
  4197fa:	loope  0x4197ad
  4197fc:	dec    edi
  4197fd:	sub    BYTE PTR [eax],0x0
  419800:	add    BYTE PTR [eax],al
  419802:	adc    al,0xe9
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	ror    al,1
  41980f:	nop
  419810:	daa    
  419811:	shr    dl,cl
  419813:	adc    al,0x1
  419815:	add    ch,dh
  419817:	add    al,0x0
  419819:	add    BYTE PTR [edi],ah
  41981b:	jnp    0x41987a
  41981d:	sti    
  41981e:	out    dx,al
  41981f:	stos   BYTE PTR es:[edi],al
  419820:	xor    edx,ebx
  419822:	pop    edx
  419823:	cmp    dh,dl
  419825:	xchg   ebp,eax
  419826:	pop    esp
  419827:	test   eax,0x9489f3ef
  41982c:	push   esp
  41982d:	cli    
  41982e:	and    BYTE PTR [ebp+0x735fd4df],0x2c
  419835:	fs inc esi
  419837:	outs   dx,BYTE PTR ds:[esi]
  419838:	fchs   
  41983a:	inc    edx
  41983b:	mov    ah,0x9f
  41983d:	imul   eax,ecx,0xffffffbb
  419840:	adc    al,0xd8
  419842:	mov    edx,0x41103ccc
  419847:	push   edi
  419848:	ins    DWORD PTR es:[edi],dx
  419849:	cdq    
  41984a:	in     eax,dx
  41984b:	retf   0xcee4
  41984e:	xchg   ecx,eax
  41984f:	ss mov edi,0x864a5d99
  419855:	fisubr DWORD PTR [edi]
  419857:	sti    
  419858:	mov    ch,0x8f
  41985a:	xlat   BYTE PTR ds:[ebx]
  41985b:	mov    dh,0xf0
  41985d:	cmp    bl,dl
  41985f:	or     ch,BYTE PTR [ebx-0x7265323e]
  419865:	adc    eax,0x23f73a81
  41986a:	fisttp QWORD PTR [eax+0x5f83df23]
  419870:	xchg   BYTE PTR [edi-0x3be0be05],al
  419876:	gs (bad) 
  419878:	aam    0xb1
  41987a:	xchg   BYTE PTR [edx-0x7cbac17e],ah
  419880:	int    0x25
  419882:	sub    ch,bh
  419884:	in     al,0x67
  419886:	in     al,dx
  419887:	or     ah,bh
  419889:	mov    edx,0xd25023ee
  41988e:	ret    
  41988f:	das    
  419890:	outs   dx,BYTE PTR ds:[esi]
  419891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419892:	mov    edi,0x23675eb0
  419897:	test   DWORD PTR [edx],ebx
  419899:	loop   0x4198e2
  41989b:	and    DWORD PTR [esi],0x8c1082b9
  4198a1:	dec    ecx
  4198a2:	out    dx,al
  4198a3:	std    
  4198a4:	jnp    0x4198b1
  4198a6:	bound  edi,QWORD PTR [edx]
  4198a8:	push   eax
  4198a9:	hlt    
  4198aa:	pop    edx
  4198ab:	(bad)  
  4198ac:	iret   
  4198ad:	call   0xd4e4:0x33f266dc
  4198b4:	mov    dl,0x17
  4198b6:	lea    edi,[esi+eax*1]
  4198b9:	cwde   
  4198ba:	popa   
  4198bb:	or     DWORD PTR [ebx],0xb1f8c4f2
  4198c1:	mov    bh,ah
  4198c3:	xchg   edx,eax
  4198c4:	adc    DWORD PTR [edx],eax
  4198c6:	adc    ch,BYTE PTR [edx]
  4198c8:	icebp  
  4198c9:	jge    0x4198ca
  4198cb:	outs   dx,DWORD PTR ds:[esi]
  4198cc:	data16 adc al,0x52
  4198cf:	test   eax,0xeb104e04
  4198d4:	pop    ss
  4198d5:	jne    0x419902
  4198d7:	aaa    
  4198d8:	fild   QWORD PTR [eax-0x3ff4b74]
  4198de:	and    ebp,DWORD PTR [edx+0x40]
  4198e1:	pop    edi
  4198e2:	or     bh,cl
  4198e4:	push   es
  4198e5:	pop    eax
  4198e6:	xor    eax,0x16bd3c1f
  4198eb:	inc    ebx
  4198ec:	xchg   BYTE PTR [esi+0x5da4eb53],ah
  4198f2:	inc    ebx
  4198f3:	mov    ebp,0xed184e65
  4198f8:	jmp    0x419932
  4198fa:	dec    edx
  4198fb:	(bad)  
  4198fc:	in     al,dx
  4198fd:	neg    BYTE PTR [bx+0xb75]
  419902:	cmp    ebx,DWORD PTR [ebp-0x7c]
  419905:	push   es
  419906:	ret    0x5d22
  419909:	and    DWORD PTR [ebx-0x17c782fd],ecx
  41990f:	rcr    DWORD PTR [esi],cl
  419911:	nop
  419912:	jae    0x4198b6
  419914:	stos   DWORD PTR es:[edi],eax
  419915:	dec    edi
  419916:	call   0xc499:0x3199139f
  41991d:	lahf   
  41991e:	or     al,0x39
  419920:	leave  
  419921:	ror    al,0x68
  419924:	(bad)  
  419925:	cdq    
  419926:	cmc    
  419927:	sub    ebp,DWORD PTR [eax-0x762a5195]
  41992d:	test   al,0xf
  41992f:	xchg   ebx,eax
  419930:	jmp    0x83dc4e96
  419935:	jne    0x419904
  419937:	mov    DWORD PTR ss:[esi],eax
  41993a:	adc    DWORD PTR [ebx-0x27a7d826],ebx
  419940:	cmove  edi,DWORD PTR [ebx-0x63578e97]
  419947:	fsub   st,st(4)
  419949:	pop    ebp
  41994a:	xchg   ebp,eax
  41994b:	or     eax,0xaf707dc2
  419950:	xor    DWORD PTR [esi+0x65],eax
  419953:	cmp    dh,BYTE PTR [esi+0x32]
  419956:	iret   
  419957:	es mov ebx,0xe99b9eef
  41995d:	fdiv   QWORD PTR [edx]
  419960:	sbb    eax,0x61aff9c1
  419965:	int3   
  419966:	push   ss
  419967:	mov    ds:0xd6e9fa89,eax
  41996c:	xchg   ebp,eax
  41996d:	xor    al,0xba
  419970:	test   BYTE PTR [esi+0x68f83839],ah
  419976:	sub    ecx,edi
  419978:	or     DWORD PTR [ebx],0xffffffb7
  41997b:	mov    WORD PTR cs:[edi],?
  41997e:	shl    eax,cl
  419980:	and    al,0x58
  419982:	xchg   edi,eax
  419983:	mov    DWORD PTR [eax],edi
  419985:	or     DWORD PTR [esi+0x215b7333],ebx
  41998b:	cdq    
  41998c:	dec    ebp
  41998d:	xchg   edi,eax
  41998e:	mov    esp,0xad638cbf
  419993:	lahf   
  419994:	popf   
  419995:	and    BYTE PTR [edx+0x3f1be449],0x9
  41999c:	js     0x4199ad
  41999e:	out    0x95,eax
  4199a0:	test   eax,edi
  4199a2:	ins    DWORD PTR es:[edi],dx
  4199a3:	lock dec ebp
  4199a5:	dec    ecx
  4199a6:	mov    ebp,0x8dcedcad
  4199ab:	and    al,0x1f
  4199ad:	jmp    DWORD PTR [ecx-0x722cc3d2]
  4199b3:	mov    edi,0x1ae6661
  4199b8:	push   es
  4199b9:	jmp    0xc4341675
  4199be:	add    ebp,ebp
  4199c0:	and    BYTE PTR [edi+0x7e083b46],0x7d
  4199c7:	les    eax,FWORD PTR [edi]
  4199c9:	retf   0x2699
  4199cc:	lahf   
  4199cd:	jp     0x4199f1
  4199cf:	shl    BYTE PTR [esi+ebx*2],0xd3
  4199d3:	test   eax,0x3bba8c12
  4199d8:	nop
  4199d9:	out    dx,eax
  4199da:	or     DWORD PTR [ecx-0x5e053563],eax
  4199e0:	dec    esi
  4199e1:	adc    al,0xa
  4199e3:	push   0x4cfc4a72
  4199e8:	xlat   BYTE PTR ds:[ebx]
  4199e9:	jnp    0x4199eb
  4199eb:	adc    BYTE PTR [ebx],dh
  4199ed:	mov    bl,0xcf
  4199ef:	mov    bl,0x32
  4199f1:	mov    ah,bl
  4199f3:	sbb    ecx,DWORD PTR [ebp-0x52a0c9d0]
  4199f9:	pop    edx
  4199fa:	in     al,0x27
  4199fc:	jno    0x419a2a
  4199fe:	pop    edx
  4199ff:	(bad)
  419a02:	push   0x25
  419a04:	lahf   
  419a05:	arpl   WORD PTR [ebp+0x56123ed],cx
  419a0b:	xchg   BYTE PTR [ebx+0xd],bh
  419a0e:	inc    esi
  419a0f:	(bad)  
  419a10:	jg     0x419a6f
  419a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a13:	or     BYTE PTR [ebp-0x3fc68b69],ch
  419a19:	sub    eax,0x1d0a4c22
  419a1e:	or     bl,BYTE PTR [edx-0x21]
  419a21:	fild   DWORD PTR [esi]
  419a23:	inc    ebp
  419a24:	pop    esi
  419a25:	push   0xffffffc2
  419a27:	lock push esi
  419a29:	sbb    DWORD PTR [ecx-0x734f077],edi
  419a2f:	inc    ebp
  419a30:	push   0xffffffe6
  419a32:	aad    0x60
  419a34:	repz rcr DWORD PTR [eax-0x28],0x93
  419a39:	and    al,0xfc
  419a3b:	fidivr WORD PTR [eax+0x27]
  419a3e:	xor    eax,0xe3de110e
  419a43:	jo     0x419ab2
  419a45:	cdq    
  419a46:	je     0x419a46
  419a48:	pop    edi
  419a49:	mov    dl,0xc4
  419a4b:	cmp    eax,0x77cb55b7
  419a50:	or     ecx,ecx
  419a52:	jle    0x419aae
  419a54:	popa   
  419a55:	or     esp,DWORD PTR [ebp+0x75bfaab3]
  419a5b:	xlat   BYTE PTR ds:[ebx]
  419a5c:	add    BYTE PTR [ecx-0x5e],al
  419a5f:	lock xchg edi,eax
  419a61:	pop    ecx
  419a62:	stc    
  419a63:	sbb    ebp,DWORD PTR [eax]
  419a65:	mov    ah,0xd1
  419a67:	mov    al,0x67
  419a69:	and    DWORD PTR [ebx],edi
  419a6b:	ja     0x419a41
  419a6d:	clc    
  419a6e:	fldcw  WORD PTR [edi]
  419a70:	push   esi
  419a71:	add    ebp,DWORD PTR [edi]
  419a73:	lahf   
  419a74:	out    0xf0,eax
  419a76:	into   
  419a77:	push   0xc25c7259
  419a7c:	jae    0x419a5e
  419a7e:	jge    0x419a1f
  419a80:	movd   mm2,esi
  419a83:	fs mov cs,esp
  419a86:	and    esi,DWORD PTR [ebp+0x68cd85b]
  419a8c:	ss mov edx,0xa31b58ee
  419a92:	cs jne 0x419b0a
  419a95:	jmp    0x419aa8
  419a97:	ret    0xb990
  419a9a:	das    
  419a9b:	xchg   DWORD PTR [ebx-0x3a],ebx
  419a9e:	adc    DWORD PTR ds:0xceb7f975,eax
  419aa4:	test   eax,0x67f7f9e9
  419aa9:	(bad)  
  419aaa:	loope  0x419ac8
  419aac:	(bad)  
  419aad:	daa    
  419aae:	fadd   DWORD PTR [edx]
  419ab0:	xchg   ecx,eax
  419ab1:	pop    ss
  419ab2:	mov    ch,0xa
  419ab4:	and    eax,edx
  419ab6:	(bad)  
  419ab7:	mov    esp,0x3da05ba8
  419abc:	xchg   DWORD PTR [ecx+ecx*1+0x6cbb82b6],ebp
  419ac3:	movntps XMMWORD PTR [ecx-0x6423033],xmm1
  419aca:	xor    eax,DWORD PTR [eax+0x780d95aa]
  419ad0:	dec    esp
  419ad1:	out    dx,eax
  419ad2:	fdiv   DWORD PTR [ebx-0x1df44dcb]
  419ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ad9:	int    0x62
  419adb:	xor    eax,0xa115bfe8
  419ae0:	pop    edi
  419ae1:	stos   DWORD PTR es:[edi],eax
  419ae2:	jo     0x419b04
  419ae4:	test   BYTE PTR ds:0x711f295e,cl
  419aea:	jns    0x419aaf
  419aec:	fnsave [ebx+0x7b]
  419aef:	in     eax,dx
  419af0:	push   ss
  419af1:	aaa    
  419af2:	inc    ebx
  419af3:	iret   
  419af4:	fbld   TBYTE PTR [ebx+0x64]
  419af7:	or     ebx,edi
  419af9:	sbb    DWORD PTR [ebp+0x13],edx
  419afc:	cli    
  419afd:	cmp    al,0x7
  419aff:	jecxz  0x419aa4
  419b01:	fcom   QWORD PTR [edx+0x1d137dcb]
  419b07:	mov    dh,0xfd
  419b09:	sub    ebx,DWORD PTR [edi+ebp*2+0x14]
  419b0d:	mov    edi,0x2b2a61e2
  419b12:	icebp  
  419b13:	cmp    DWORD PTR [eax+0x558b4197],eax
  419b19:	repnz test DWORD PTR [ecx+0x127ba99],ecx
  419b20:	jl     0x419b1d
  419b22:	xchg   dh,dl
  419b24:	push   cs
  419b25:	int3   
  419b26:	xchg   edx,eax
  419b27:	iret   
  419b28:	xchg   edi,eax
  419b29:	mov    BYTE PTR [ecx],bh
  419b2b:	popa   
  419b2c:	aaa    
  419b2d:	push   0x62
  419b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b30:	jne    0x419b6c
  419b32:	and    al,BYTE PTR [eax+0x2764d051]
  419b38:	mov    ebp,0x46aceb3a
  419b3d:	jge    0x419b5e
  419b3f:	mov    ebp,0x7db4f076
  419b44:	sub    esi,ebx
  419b46:	dec    BYTE PTR [esp+edx*4-0x77]
  419b4a:	add    eax,0xb22c44eb
  419b4f:	adc    BYTE PTR [edi],cl
  419b51:	inc    esi
  419b52:	test   DWORD PTR [ebp+0x74],esi
  419b55:	dec    edi
  419b56:	scas   al,BYTE PTR es:[edi]
  419b57:	pop    esp
  419b58:	xchg   ebp,eax
  419b59:	sub    eax,0xa1494c7b
  419b5e:	pop    edx
  419b5f:	rcr    dl,cl
  419b61:	aaa    
  419b62:	scas   eax,DWORD PTR es:[edi]
  419b63:	ror    BYTE PTR [edx-0x69],1
  419b66:	sub    eax,0xb2a8cc10
  419b6b:	fcmovb st,st(4)
  419b6d:	sub    BYTE PTR [eax],cl
  419b6f:	adc    ebx,DWORD PTR [eax+ecx*4-0x74]
  419b73:	iret   
  419b74:	push   edx
  419b75:	(bad)  
  419b77:	xchg   edx,eax
  419b78:	popf   
  419b79:	push   ds
  419b7a:	aad    0xe9
  419b7c:	clc    
  419b7d:	out    dx,al
  419b7e:	outs   dx,BYTE PTR ds:[esi]
  419b7f:	adc    dl,bh
  419b81:	out    dx,al
  419b82:	loop   0x419ba8
  419b84:	ins    BYTE PTR es:[edi],dx
  419b85:	mov    bl,0xb5
  419b87:	dec    eax
  419b88:	jnp    0x419b2a
  419b8a:	mov    DWORD PTR [ebp+0x20],eax
  419b8d:	push   ecx
  419b8e:	rcr    DWORD PTR [ecx+eiz*4+0x7c],1
  419b92:	dec    ebx
  419b93:	dec    eax
  419b94:	dec    ebp
  419b95:	jne    0x419bc4
  419b97:	outs   dx,BYTE PTR ds:[esi]
  419b98:	inc    ecx
  419b99:	(bad)  
  419b9a:	arpl   WORD PTR [edi-0x5d1bdde2],cx
  419ba0:	add    esi,DWORD PTR [eax+0x4d]
  419ba3:	loop   0x419b2a
  419ba5:	jne    0x419b5d
  419ba7:	add    bl,ah
  419ba9:	xor    al,0x78
  419bab:	sahf   
  419bac:	mov    esi,0x4097c11e
  419bb1:	and    DWORD PTR [eax-0x26],edi
  419bb4:	mov    dl,0xf5
  419bb6:	jbe    0x419b82
  419bb8:	lahf   
  419bb9:	(bad)  
  419bba:	push   eax
  419bbb:	cmp    cl,BYTE PTR [eax]
  419bbd:	mov    ecx,0x97c741de
  419bc2:	imul   edx,DWORD PTR [ebp+edi*4-0x23091fb2],0x796f61bc
  419bcd:	daa    
  419bce:	add    ecx,DWORD PTR [edi+ecx*2]
  419bd1:	mov    ah,0xb9
  419bd3:	rcl    eax,cl
  419bd5:	pop    esp
  419bd6:	cs mov cl,0x78
  419bd9:	mov    al,ds:0x7ffe34ff
  419bde:	ds adc ah,ah
  419be1:	call   0x6557784e
  419be6:	push   esp
  419be7:	out    dx,eax
  419be8:	cvttps2pi mm5,QWORD PTR [ecx+ebx*2]
  419bec:	cld    
  419bed:	stos   DWORD PTR es:[edi],eax
  419bee:	sub    al,0x9
  419bf0:	mov    eax,ds:0xf258fcef
  419bf5:	loop   0x419be0
  419bf7:	xor    al,0x39
  419bf9:	or     edi,DWORD PTR [edi+edi*4-0xc632394]
  419c00:	adc    DWORD PTR [eax],esi
  419c02:	pop    ebp
  419c03:	xchg   ebx,eax
  419c04:	fistp  WORD PTR [ebp-0x3da8b6a8]
  419c0a:	push   ecx
  419c0b:	retf   
  419c0c:	les    ebp,FWORD PTR [ecx]
  419c0e:	mov    cl,0x6d
  419c10:	call   0x9eaa8891
  419c15:	mov    fs,WORD PTR [ebp+0x7e]
  419c18:	sub    ebx,DWORD PTR [ecx]
  419c1a:	sar    DWORD PTR [ebx],cl
  419c1c:	std    
  419c1d:	mov    bh,0x69
  419c1f:	sti    
  419c20:	mov    al,ds:0x62dffd68
  419c25:	mov    ds:0xb4343c5a,al
  419c2a:	mov    al,ds:0x4bafe002
  419c2f:	in     al,dx
  419c30:	fld    DWORD PTR [ebp+0x22]
  419c33:	scas   al,BYTE PTR es:[edi]
  419c34:	popa   
  419c35:	out    dx,al
  419c36:	(bad)  [edi+0x11]
  419c39:	lods   eax,DWORD PTR ds:[esi]
  419c3a:	push   esi
  419c3b:	inc    edi
  419c3c:	adc    eax,0x4f3b89e6
  419c41:	xor    eax,0x51612ae
  419c46:	fisttp WORD PTR [eax]
  419c48:	out    0x5d,al
  419c4a:	jmp    0x419bf1
  419c4c:	add    edx,DWORD PTR [eax-0x1de4043a]
  419c52:	inc    esi
  419c53:	clc    
  419c54:	rol    DWORD PTR [edx],1
  419c56:	dec    ecx
  419c57:	mov    BYTE PTR [edx],0xcf
  419c5a:	inc    di
  419c5c:	addr16 popf 
  419c5e:	add    ebx,esi
  419c60:	das    
  419c61:	inc    esp
  419c62:	stc    
  419c63:	sbb    dl,BYTE PTR [edi]
  419c65:	adc    BYTE PTR [edx-0x40],ah
  419c68:	daa    
  419c69:	cmovb  ecx,edx
  419c6c:	mov    al,ds:0x9dca5bc4
  419c71:	jg     0x419cba
  419c73:	add    eax,0xdae9f6cd
  419c78:	lods   eax,DWORD PTR ds:[esi]
  419c79:	popf   
  419c7a:	jns    0x419c47
  419c7c:	sbb    ch,BYTE PTR [ebx-0x3]
  419c7f:	adc    eax,0x698046ac
  419c84:	inc    ecx
  419c85:	stos   BYTE PTR es:[edi],al
  419c86:	dec    ebx
  419c87:	sub    DWORD PTR ds:0xa198c94,esp
  419c8d:	inc    esi
  419c8e:	js     0x419cec
  419c90:	nop
  419c91:	pop    edx
  419c92:	push   eax
  419c93:	mov    cl,0x3d
  419c95:	xchg   esi,eax
  419c96:	dec    eax
  419c97:	nop
  419c98:	iret   
  419c99:	add    esp,DWORD PTR [eax]
  419c9b:	gs add ah,bh
  419c9e:	mov    eax,ds:0x20e0b6ad
  419ca3:	or     esp,DWORD PTR [edx-0x324ee4b0]
  419ca9:	jnp    0x419c87
  419cab:	add    eax,0xc5dabc95
  419cb0:	inc    ecx
  419cb1:	(bad)  
  419cb2:	retf   
  419cb3:	mov    al,0xdb
  419cb5:	frstor [ecx+0x4c865714]
  419cbb:	pusha  
  419cbc:	sub    eax,0xc18264be
  419cc1:	cmp    BYTE PTR [eax*1+0x4c14367c],bl
  419cc8:	mov    ah,0x17
  419cca:	push   edx
  419ccb:	enter  0x2ab6,0xd4
  419ccf:	call   0x68f15df6
  419cd4:	call   0xdc3d0824
  419cd9:	sub    DWORD PTR [ebx],ecx
  419cdb:	lock div esp
  419cde:	(bad)  
  419cdf:	stc    
  419ce0:	pushf  
  419ce1:	mov    ecx,0xbc3c809e
  419ce6:	inc    ecx
  419ce7:	xlat   BYTE PTR ds:[ebx]
  419ce8:	and    ebp,DWORD PTR [eax-0x36]
  419ceb:	and    al,0xc
  419ced:	fnstcw WORD PTR [ebp-0x2d6c668a]
  419cf3:	das    
  419cf4:	xchg   esi,eax
  419cf5:	bound  esp,QWORD PTR [eax+edi*2+0x25]
  419cf9:	sub    eax,0xd28f6370
  419cfe:	ret    
  419cff:	jmp    0x22fe:0x5f61c22
  419d06:	cmp    eax,0x433f069
  419d0b:	mov    ebp,0x91bad6
  419d10:	add    BYTE PTR [eax],al
  419d12:	mov    BYTE PTR [ebp-0x40],al
  419d15:	fs int 0xe5
  419d18:	lods   al,BYTE PTR ds:[esi]
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp-0x625cf884]
  419d20:	adc    eax,DWORD PTR [ebx+0x119df]
  419d26:	cmc    
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [ecx-0x67],bl
  419d2c:	dec    ebp
  419d2d:	fiadd  DWORD PTR [edx]
  419d2f:	mov    ch,0x5b
  419d31:	(bad)  
  419d32:	mov    esi,0xdaad62db
  419d37:	sbb    al,0xc6
  419d39:	dec    esi
  419d3a:	mov    edx,0x6304e5c7
  419d3f:	mov    WORD PTR [eax-0x6],cs
  419d42:	enter  0xc5f1,0xe8
  419d46:	push   esi
  419d47:	ja     0x419d2f
  419d49:	xor    eax,DWORD PTR [ecx+0x7f]
  419d4c:	mov    ebp,esp
  419d4e:	jp     0x419cd2
  419d50:	outs   dx,DWORD PTR ds:[esi]
  419d51:	dec    eax
  419d52:	nop
  419d53:	adc    dh,BYTE PTR [edi-0xe7be2eb]
  419d59:	cmc    
  419d5a:	xor    eax,0xaabcea44
  419d5f:	ror    DWORD PTR [ebx-0x4a13179c],0xcc
  419d66:	leave  
  419d67:	jnp    0x419d1a
  419d69:	fmul   DWORD PTR [eax]
  419d6b:	scas   eax,DWORD PTR es:[edi]
  419d6c:	int    0x8a
  419d6e:	xor    BYTE PTR [esi-0x55],dh
  419d71:	out    dx,eax
  419d72:	(bad)
  419d75:	sbb    al,0xc5
  419d77:	jmp    0x1dd848b4
  419d7c:	and    esp,DWORD PTR [ecx]
  419d7e:	adc    dl,dh
  419d80:	retf   0xeeb4
  419d83:	retf   
  419d84:	push   esi
  419d85:	or     eax,0x85f58832
  419d8a:	jp     0x419e08
  419d8c:	(bad)  
  419d8d:	aam    0x4e
  419d8f:	or     bh,BYTE PTR [esi-0x6d]
  419d92:	lock jmp 0xe568:0x9c9be8af
  419d9a:	cmp    bl,al
  419d9c:	scas   al,BYTE PTR es:[edi]
  419d9d:	xlat   BYTE PTR ds:[ebx]
  419d9e:	xchg   edx,eax
  419d9f:	push   eax
  419da0:	hlt    
  419da1:	push   edi
  419da2:	cmp    eax,DWORD PTR [esi+0x5]
  419da5:	xor    eax,0x5da1e0a
  419daa:	ds test eax,0x47be33d2
  419db0:	and    ch,ch
  419db2:	jle    0x419dea
  419db4:	mov    ds:0xa001edc5,eax
  419db9:	ret    
  419dba:	jns    0x419d70
  419dbc:	sub    eax,0x274c60a1
  419dc1:	fdiv   DWORD PTR [esi]
  419dc3:	sar    BYTE PTR [edi],0x64
  419dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dc7:	pusha  
  419dc8:	ret    0x976d
  419dcb:	rol    BYTE PTR [edi+0x5f81bc54],0x91
  419dd2:	push   esi
  419dd3:	scas   al,BYTE PTR es:[edi]
  419dd4:	push   ecx
  419dd5:	mov    dh,0x3
  419dd7:	adc    edx,esp
  419dd9:	sub    BYTE PTR [edi],ch
  419ddb:	fdiv   QWORD PTR [esi+0x79]
  419dde:	push   esp
  419ddf:	and    al,0x49
  419de1:	mov    bh,0x1f
  419de3:	ss cmp eax,0x9c7d2b4c
  419de9:	dec    ebp
  419dea:	cmp    DWORD PTR [edx-0x12221dbd],edx
  419df0:	xchg   BYTE PTR [esi-0x1e],bl
  419df3:	pop    ecx
  419df4:	test   dl,dl
  419df6:	mov    esi,DWORD PTR [esi-0x40b85348]
  419dfc:	cmp    ebx,DWORD PTR [eax+0x6a]
  419dff:	sbb    al,0x46
  419e01:	and    BYTE PTR [edx-0x1ab6b2e9],0xbb
  419e08:	mov    eax,0xc62ae726
  419e0d:	push   edx
  419e0e:	popf   
  419e0f:	or     al,0xdc
  419e11:	xlat   BYTE PTR ds:[ebx]
  419e12:	clc    
  419e13:	dec    ebp
  419e14:	mov    ds:0x968a41f4,al
  419e19:	shl    BYTE PTR [ebp+edi*4+0x58],cl
  419e1d:	adc    DWORD PTR [eax],eax
  419e1f:	data16 stos BYTE PTR es:[edi],al
  419e21:	clc    
  419e22:	lods   al,BYTE PTR ds:[esi]
  419e23:	xor    ah,ch
  419e25:	jge    0x419e47
  419e27:	mov    cs,WORD PTR [esi]
  419e29:	cmp    al,0xb8
  419e2b:	xchg   DWORD PTR [eax],ebx
  419e2d:	(bad)  
  419e2e:	loopne 0x419e2f
  419e30:	xor    eax,0xd88aa896
  419e35:	fist   WORD PTR [edi-0x31a749eb]
  419e3b:	psubsb mm5,QWORD PTR [ebx+0x67]
  419e3f:	mov    dh,bh
  419e41:	pop    ecx
  419e42:	adc    dh,al
  419e44:	cmp    ch,dl
  419e46:	js     0x419e06
  419e48:	fdiv   QWORD PTR [ebp-0x7d]
  419e4b:	sub    BYTE PTR [ecx-0x62],ah
  419e4e:	jmp    0x692c214f
  419e53:	jmp    0xcac7:0x3730f3e2
  419e5a:	loopne 0x419ec7
  419e5c:	cmp    DWORD PTR [eax],0xffffffec
  419e5f:	jb     0x419ec4
  419e61:	and    ebp,DWORD PTR [edi]
  419e63:	imul   BYTE PTR [edi]
  419e65:	imul   ebp,DWORD PTR [ebx-0x42],0x1ebed8c3
  419e6c:	ret    
  419e6d:	xor    DWORD PTR [edx-0x124f46fd],edx
  419e73:	xor    esp,edx
  419e75:	shr    esp,1
  419e77:	int3   
  419e78:	shr    ebp,1
  419e7a:	sub    BYTE PTR es:[ecx],dh
  419e7d:	xor    al,0xbb
  419e7f:	bound  ecx,QWORD PTR [esi+0x27]
  419e82:	sbb    esp,DWORD PTR [ebp-0x2c]
  419e85:	mov    al,0x18
  419e87:	xchg   edx,eax
  419e88:	mov    ds:0x5edeab83,eax
  419e8d:	sub    eax,DWORD PTR [eax-0x5e]
  419e90:	jg     0x419e80
  419e92:	xchg   edi,eax
  419e93:	rol    BYTE PTR [esi],0x76
  419e96:	xor    edi,DWORD PTR [esi+0x53259c96]
  419e9c:	cmp    BYTE PTR [ecx-0x59],dh
  419e9f:	imul   ebp,DWORD PTR [edi+0x740d9d2],0xffffffc9
  419ea6:	aas    
  419ea7:	(bad)  [edi]
  419ea9:	inc    edi
  419eaa:	mov    ah,0x6
  419eac:	pop    edi
  419ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eae:	xchg   eax,ebp
  419eb0:	aaa    
  419eb1:	adc    DWORD PTR [edi+0x2],esp
  419eb4:	sbb    ch,BYTE PTR [ebp+ebp*1+0x31]
  419eb8:	pusha  
  419eb9:	dec    ebp
  419eba:	push   eax
  419ebb:	push   0x4c
  419ebd:	outs   dx,DWORD PTR ds:[esi]
  419ebe:	not    DWORD PTR [edx-0x1d]
  419ec1:	jl     0x419e51
  419ec3:	mov    dl,0xcd
  419ec5:	clc    
  419ec6:	mov    ds:0xe58e4e64,al
  419ecb:	ss leave 
  419ecd:	popa   
  419ece:	mov    ch,0x7f
  419ed0:	jg     0x419edc
  419ed2:	loop   0x419e5e
  419ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ed5:	adc    al,0x95
  419ed7:	xor    dh,0xcb
  419eda:	xor    DWORD PTR [eax-0x68],ebp
  419edd:	lahf   
  419ede:	adc    eax,0xf3c8a7a4
  419ee3:	out    dx,eax
  419ee4:	xchg   DWORD PTR [edx+0x25],ecx
  419ee7:	mov    ecx,0xe2acfc15
  419eec:	sti    
  419eed:	pop    es
  419eee:	test   ah,ah
  419ef0:	(bad)  
  419ef1:	loop   0x419f40
  419ef3:	sub    ah,cl
  419ef5:	push   esp
  419ef6:	adc    BYTE PTR [edi-0x1d],bh
  419ef9:	je     0x419e91
  419efb:	xchg   ecx,eax
  419efc:	pop    edx
  419efd:	out    dx,al
  419efe:	das    
  419eff:	mov    WORD PTR [edx],fs
  419f01:	or     eax,0x9776ef4e
  419f06:	cli    
  419f07:	dec    edx
  419f08:	fist   DWORD PTR ds:0xe9fa13e6
  419f0e:	fst    st(6)
  419f10:	add    DWORD PTR [ebp+0x4d2522c3],0x38697faf
  419f1a:	fs mov ebp,0x779a5471
  419f20:	cs js  0x419ed5
  419f23:	xchg   ebx,eax
  419f24:	dec    esi
  419f25:	ret    
  419f26:	jmp    0x419fa6
  419f28:	xchg   ecx,eax
  419f29:	inc    ecx
  419f2a:	mov    ah,0x86
  419f2c:	inc    ebx
  419f2d:	aad    0x3a
  419f2f:	aam    0xa7
  419f31:	pop    es
  419f32:	push   ebp
  419f33:	outs   dx,DWORD PTR ds:[esi]
  419f34:	cdq    
  419f35:	jmp    0x419ee7
  419f37:	mov    al,0x78
  419f39:	mov    al,cl
  419f3b:	inc    ebp
  419f3c:	jbe    0x419f44
  419f3e:	adc    ecx,DWORD PTR [esi]
  419f40:	rcr    BYTE PTR [edx-0x1edc83e0],0xf6
  419f47:	mov    fs,WORD PTR [edi]
  419f49:	push   cs
  419f4a:	bound  ebp,QWORD PTR [ecx-0x3d]
  419f4d:	mov    cl,ah
  419f4f:	nop
  419f50:	add    DWORD PTR [edi-0x957d3da],ebp
  419f56:	or     edx,DWORD PTR [ecx]
  419f58:	outs   dx,BYTE PTR ds:[esi]
  419f59:	ret    0x23b9
  419f5c:	ret    
  419f5d:	stos   BYTE PTR es:[edi],al
  419f5e:	ud2    
  419f60:	fidivr DWORD PTR [edx+0x7d]
  419f63:	push   edi
  419f64:	es shl al,cl
  419f67:	dec    ebx
  419f68:	jnp    0x419f15
  419f6a:	add    DWORD PTR [ebx-0x55d07819],eax
  419f70:	adc    ch,BYTE PTR [eax+esi*8]
  419f73:	inc    eax
  419f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f75:	aas    
  419f76:	mov    ecx,0x49e284ea
  419f7b:	lds    ebp,FWORD PTR [ebp+0x4e73abaa]
  419f81:	ror    BYTE PTR [ecx],cl
  419f83:	pop    ebx
  419f84:	push   esi
  419f85:	jo     0x419f15
  419f87:	enter  0xf58e,0x79
  419f8b:	dec    eax
  419f8c:	pop    ebp
  419f8d:	dec    edi
  419f8e:	rol    DWORD PTR [ebx],1
  419f90:	mov    cl,0x72
  419f92:	cmp    eax,0x202edd34
  419f97:	int3   
  419f98:	or     BYTE PTR [esi+0x62],bl
  419f9b:	int    0x91
  419f9d:	outs   dx,DWORD PTR ds:[esi]
  419f9e:	dec    ebp
  419f9f:	jge    0x419fdc
  419fa1:	mov    es,esi
  419fa3:	in     al,0xd6
  419fa5:	mov    esi,DWORD PTR [esi+0x1a352b4e]
  419fab:	jge    0x419f86
  419fad:	inc    edx
  419fae:	gs fst st(5)
  419fb1:	mov    ah,0x9
  419fb3:	pop    es
  419fb4:	push   edi
  419fb5:	mov    al,0x7b
  419fb7:	xor    ecx,ebp
  419fb9:	retf   0x79e7
  419fbc:	test   DWORD PTR [ecx+0x321cd681],0x76da0a34
  419fc6:	and    DWORD PTR [eax+0x78],edx
  419fc9:	xor    eax,0xec431ccd
  419fce:	lea    ebx,[ebx+edx*8-0x31acfbfc]
  419fd5:	mov    esp,0x21b4619
  419fda:	clc    
  419fdb:	popa   
  419fdc:	div    ah
  419fde:	dec    ebx
  419fdf:	xchg   DWORD PTR [ecx-0x23],ebp
  419fe2:	or     DWORD PTR [ecx],ebp
  419fe4:	repnz or BYTE PTR [esi-0x18930cd7],bh
  419feb:	js     0x41a00d
  419fed:	lods   al,BYTE PTR ds:[esi]
  419fee:	js     0x419fc4
  419ff0:	sub    DWORD PTR [ecx-0x2f7927bf],edx
  419ff6:	mov    ah,0xab
  419ff8:	push   es
  419ff9:	xor    eax,0x617aeb0b
  419ffe:	popf   
  419fff:	cmp    eax,0xcadc1cc2
  41a004:	fisub  WORD PTR [ecx+eiz*8-0x4279d8af]
  41a00b:	sbb    esi,edx
  41a00d:	and    ecx,DWORD PTR [edi+0x4675be73]
  41a013:	pop    eax
  41a014:	aas    
  41a015:	or     DWORD PTR [ecx-0x28],esi
  41a018:	inc    eax
  41a019:	mov    ds:0xca653f80,al
  41a01e:	mov    esi,0x6d1a028f
  41a023:	call   0x2b1499f7
  41a028:	or     al,0xf5
  41a02a:	jecxz  0x41a021
  41a02c:	sub    eax,0x9554bfbe
  41a031:	sbb    DWORD PTR [ebx-0x54],esp
  41a034:	loop   0x419fd2
  41a036:	adc    ebx,edi
  41a038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a039:	pop    ecx
  41a03a:	push   esp
  41a03b:	fwait
  41a03c:	and    eax,0xf37cdc0e
  41a041:	dec    ebp
  41a042:	and    al,dh
  41a044:	dec    ebx
  41a045:	stos   DWORD PTR es:[edi],eax
  41a046:	sbb    dh,BYTE PTR [ecx]
  41a048:	sahf   
  41a049:	xlat   BYTE PTR ds:[ebx]
  41a04a:	mov    bh,ah
  41a04c:	jo     0x41a01e
  41a04e:	int3   
  41a04f:	(bad)  [ebp+0x53]
  41a052:	jecxz  0x41a07e
  41a054:	cmp    DWORD PTR [edi-0x3ace0e94],0xffffffa8
  41a05b:	sbb    BYTE PTR [ebx+0x76b0e96],bh
  41a061:	(bad)  
  41a062:	ja     0x41a0b2
  41a064:	ror    BYTE PTR [ebp-0x44],0x3e
  41a068:	mov    dh,BYTE PTR [esi-0x5745d1a0]
  41a06e:	push   ecx
  41a06f:	pop    edx
  41a070:	jno    0x41a06f
  41a072:	xlat   BYTE PTR ds:[ebx]
  41a073:	mov    esi,0xcb3b5d58
  41a078:	mov    al,ds:0x773d6310
  41a07d:	pop    es
  41a07e:	(bad)  
  41a07f:	inc    edx
  41a080:	in     al,0x59
  41a082:	pop    ebp
  41a083:	pop    ebx
  41a084:	retf   
  41a085:	sbb    DWORD PTR [eax-0x1f3ccee9],esp
  41a08b:	jmp    0x58e637ae
  41a090:	retf   
  41a091:	cmc    
  41a092:	mov    dh,0xc5
  41a094:	mov    cl,0xd2
  41a096:	(bad)  
  41a097:	ret    0x43ca
  41a09a:	fwait
  41a09b:	jo     0x41a021
  41a09d:	mov    cl,0x68
  41a09f:	cld    
  41a0a0:	das    
  41a0a1:	xchg   edi,eax
  41a0a2:	jae    0x41a0f5
  41a0a4:	push   ecx
  41a0a5:	out    dx,eax
  41a0a6:	ficomp DWORD PTR [edx+0x2563cea9]
  41a0ac:	lahf   
  41a0ad:	jg     0x41a076
  41a0af:	call   0x148b:0x9295572
  41a0b6:	sbb    BYTE PTR [esi],0xe8
  41a0b9:	push   0xf4e85348
  41a0be:	inc    ecx
  41a0bf:	push   ss
  41a0c0:	pop    ds
  41a0c1:	hlt    
  41a0c2:	mov    cl,0xec
  41a0c4:	imul   ebx,DWORD PTR [eax+0x3],0xffffff80
  41a0c8:	and    edi,esp
  41a0ca:	test   al,0x73
  41a0cc:	in     eax,0x84
  41a0ce:	repnz pop ebx
  41a0d0:	push   edi
  41a0d1:	xchg   ebp,esi
  41a0d3:	loopne 0x41a06d
  41a0d5:	add    BYTE PTR [ebx],al
  41a0d7:	ror    DWORD PTR [ecx+0x2b],1
  41a0da:	sahf   
  41a0db:	cmp    DWORD PTR ds:0xb8665795,esp
  41a0e1:	gs cmp esi,esp
  41a0e4:	cmp    dh,BYTE PTR [ebx]
  41a0e6:	xchg   edx,eax
  41a0e7:	cmp    DWORD PTR ds:0xd5801569,edi
  41a0ed:	mov    eax,0x600a58a
  41a0f2:	push   ecx
  41a0f3:	dec    ebp
  41a0f4:	sub    cl,BYTE PTR [ecx+0x53]
  41a0f7:	jb     0x41a13c
  41a0f9:	jo     0x41a106
  41a0fb:	retf   0x3ca8
  41a0fe:	or     eax,0xb634cd8a
  41a103:	fbld   TBYTE PTR [edi]
  41a105:	jmp    0xed81:0xff6e7911
  41a10c:	adc    dl,BYTE PTR fs:[edx-0x4a]
  41a110:	pop    edi
  41a111:	add    ch,BYTE PTR [ecx+ebp*8-0x48]
  41a115:	adc    ch,BYTE PTR [ebp+0x69]
  41a118:	out    dx,eax
  41a119:	ret    0x1ddd
  41a11c:	xchg   edi,eax
  41a11d:	xor    al,0x23
  41a11f:	popa   
  41a120:	dec    esi
  41a121:	repz and eax,0x54825e9a
  41a127:	loop   0x41a112
  41a129:	out    0xb1,eax
  41a12b:	into   
  41a12c:	repnz push es
  41a12e:	mov    dl,0x88
  41a130:	leave  
  41a131:	std    
  41a132:	dec    edi
  41a133:	cmp    al,0x9e
  41a135:	jge    0x41a145
  41a137:	out    dx,al
  41a138:	sahf   
  41a139:	test   DWORD PTR ds:0x32768e15,0x2076e1a5
  41a143:	inc    esi
  41a144:	mov    cl,0x6d
  41a146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a147:	lahf   
  41a148:	xchg   ecx,eax
  41a149:	cld    
  41a14a:	and    edx,DWORD PTR [esi-0x16]
  41a14d:	mov    al,ds:0xb4725c2c
  41a152:	xor    DWORD PTR [ecx],0xe578d1df
  41a158:	sti    
  41a159:	mov    al,0xd5
  41a15b:	lock cmp cl,BYTE PTR [esp+ecx*1+0x199e09ce]
  41a163:	pusha  
  41a164:	xor    DWORD PTR [ecx],edx
  41a166:	clc    
  41a167:	mov    esp,DWORD PTR [ebx+0x6d]
  41a16a:	out    0x7e,eax
  41a16c:	cmp    DWORD PTR [ebx],edx
  41a16e:	xchg   ecx,eax
  41a16f:	mov    ds:0xee668aee,eax
  41a174:	xchg   esi,eax
  41a175:	stos   DWORD PTR es:[edi],eax
  41a176:	and    DWORD PTR [edx],esi
  41a178:	leave  
  41a179:	jae    0x41a130
  41a17b:	xor    DWORD PTR [esi+0x27],ecx
  41a17e:	inc    DWORD PTR [ebp-0x3c10bb22]
  41a184:	cmp    ah,BYTE PTR [ebp+0x16]
  41a187:	mov    ds:0xa9ee9cb6,al
  41a18c:	inc    esp
  41a18d:	sbb    DWORD PTR ds:0x4e2dac24,esi
  41a193:	ins    BYTE PTR es:[edi],dx
  41a194:	adc    al,0x8b
  41a196:	push   ss
  41a197:	stos   DWORD PTR es:[edi],eax
  41a198:	or     esi,ebx
  41a19a:	ret    
  41a19b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a19c:	lock push 0xffffffcd
  41a19f:	mov    al,ds:0x213793ef
  41a1a4:	fadd   DWORD PTR [esi+0x8]
  41a1a7:	sbb    DWORD PTR [eax-0x2b],0x39d9aa57
  41a1ae:	and    al,0x88
  41a1b0:	jae    0x41a168
  41a1b2:	repnz int3 
  41a1b4:	stos   BYTE PTR es:[edi],al
  41a1b5:	lock int 0xa1
  41a1b8:	iret   
  41a1b9:	xchg   BYTE PTR [eax-0x43],cl
  41a1bc:	dec    esi
  41a1bd:	stos   BYTE PTR es:[edi],al
  41a1be:	je     0x41a1fc
  41a1c0:	xchg   esp,eax
  41a1c1:	push   es
  41a1c2:	cwde   
  41a1c3:	(bad)  
  41a1c4:	push   edi
  41a1c5:	stc    
  41a1c6:	scas   al,BYTE PTR es:[edi]
  41a1c7:	js     0x41a200
  41a1c9:	outs   dx,BYTE PTR ds:[esi]
  41a1ca:	or     ch,BYTE PTR [ecx+ecx*1-0x3d8d26b8]
  41a1d1:	mov    ebp,0xa63a57b8
  41a1d6:	ins    BYTE PTR es:[edi],dx
  41a1d7:	iret   
  41a1d8:	xchg   BYTE PTR ds:[edi+0x11],bh
  41a1dc:	scas   eax,DWORD PTR es:[edi]
  41a1dd:	dec    edx
  41a1de:	push   esi
  41a1df:	mov    ebx,0x4b2a18b5
  41a1e4:	cwde   
  41a1e5:	sbb    DWORD PTR [eax+ecx*2-0x29],0x71
  41a1ea:	or     BYTE PTR [esi],ch
  41a1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1ed:	ins    BYTE PTR es:[edi],dx
  41a1ee:	or     esp,ebx
  41a1f0:	and    esi,DWORD PTR [ecx+0x1b2b73d3]
  41a1f6:	jnp    0x41a223
  41a1f8:	push   cs
  41a1f9:	pop    bp
  41a1fb:	mov    ch,0x3a
  41a1fd:	push   0x30
  41a1ff:	iret   
  41a200:	cdq    
  41a201:	xor    eax,0x44287ac
  41a206:	mov    esp,0xf3c60210
  41a20b:	stc    
  41a20c:	mov    dl,0x34
  41a20e:	scas   eax,DWORD PTR es:[edi]
  41a20f:	shl    BYTE PTR [ecx+0x320240a1],1
  41a215:	dec    esi
  41a216:	or     DWORD PTR [edi],edx
  41a218:	adc    ah,BYTE PTR [edx-0x71e6f3e8]
  41a21e:	jle    0x41a220
  41a220:	add    BYTE PTR [eax],al
  41a222:	sbb    BYTE PTR [ebp+0xe],dl
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	and    BYTE PTR gs:[esi],0xc1
  41a231:	das    
  41a232:	aam    0x1e
  41a234:	add    DWORD PTR [eax],eax
  41a236:	cmc    
  41a237:	add    al,0x0
  41a239:	add    BYTE PTR [eax+0x6ad92bdb],bl
  41a23f:	je     0xc2b719ab
  41a245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a246:	adc    al,0xb5
  41a248:	dec    esi
  41a249:	push   cs
  41a24a:	call   0x73f01910
  41a24f:	call   0x47b3:0xcd1ff9fd
  41a256:	js     0x41a2af
  41a258:	stos   DWORD PTR es:[edi],eax
  41a259:	cmp    dh,cl
  41a25b:	push   ebp
  41a25c:	pop    esi
  41a25d:	mov    edi,0x803721fb
  41a262:	call   0x7cb191aa
  41a267:	pop    ss
  41a268:	add    al,0x7b
  41a26a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a26b:	je     0x41a24b
  41a26d:	mov    edi,es
  41a26f:	jns    0x41a243
  41a271:	in     eax,0x54
  41a273:	xchg   ebx,eax
  41a274:	imul   ebx,DWORD PTR [edx+ecx*4-0x631878ca],0x16dac8f9
  41a27f:	sar    DWORD PTR [eax-0x44c0ecd5],0x2d
  41a286:	lea    ebp,[ebp+0x7c700b6a]
  41a28c:	aad    0xc4
  41a28e:	jmp    FWORD PTR [esi-0x6306ab2a]
  41a294:	jno    0x41a263
  41a296:	mov    ds:0xed20b944,al
  41a29b:	(bad)  
  41a29c:	push   0xf00322af
  41a2a1:	adc    DWORD PTR cs:[ebx+ebp*8+0x439b5b68],0xfb960c25
  41a2ad:	loope  0x41a31a
  41a2af:	sub    ch,BYTE PTR [eax-0x6935622d]
  41a2b5:	sbb    BYTE PTR [edx+eiz*4+0x716404de],bh
  41a2bc:	push   esp
  41a2bd:	outs   dx,BYTE PTR ds:[esi]
  41a2be:	not    DWORD PTR [ecx-0x51a6c346]
  41a2c4:	(bad)  
  41a2c5:	jg     0x41a2c9
  41a2c7:	dec    esi
  41a2c8:	add    ecx,DWORD PTR [ebx+0x5bc6b7c5]
  41a2ce:	cs mov ebx,0xd3e00f90
  41a2d4:	popa   
  41a2d5:	mov    eax,DWORD PTR [edi+0x14]
  41a2d8:	mov    DWORD PTR [edx-0x58e10866],ecx
  41a2de:	or     eax,0x9dc34483
  41a2e3:	jl     0x41a27b
  41a2e5:	jmp    FWORD PTR [esi+0x2e]
  41a2e8:	jno    0x41a2d6
  41a2ea:	out    0x28,eax
  41a2ec:	mov    ecx,0x1d7bb462
  41a2f1:	mov    ah,0xc0
  41a2f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2f4:	pop    edi
  41a2f5:	test   al,0xe5
  41a2f7:	nop
  41a2f8:	pushf  
  41a2f9:	push   ebx
  41a2fa:	inc    BYTE PTR [ebx+0xe]
  41a2fd:	mov    ch,0xbc
  41a2ff:	jl     0x41a369
  41a301:	push   ecx
  41a302:	or     eax,0x5ee23ab4
  41a307:	leave  
  41a308:	mov    ecx,0x108667a7
  41a30d:	jo     0x41a2ec
  41a30f:	ja     0x41a2b0
  41a311:	ins    DWORD PTR es:[edi],dx
  41a312:	les    edi,FWORD PTR [ebx]
  41a314:	(bad)  
  41a315:	cmp    cl,BYTE PTR [ebp-0xde72164]
  41a31b:	or     al,0xd4
  41a31d:	loope  0x41a2d0
  41a31f:	lods   al,BYTE PTR ds:[esi]
  41a320:	mov    bh,0xfe
  41a322:	icebp  
  41a323:	jg     0x41a38f
  41a325:	not    dh
  41a327:	std    
  41a328:	adc    DWORD PTR [esp+edx*4+0x46390c2c],ebp
  41a32f:	daa    
  41a330:	xchg   edi,eax
  41a331:	mov    ch,al
  41a333:	push   esi
  41a334:	sub    dl,dl
  41a336:	dec    ebx
  41a337:	paddsw mm6,mm3
  41a33a:	call   0x649a8369
  41a33f:	(bad)
  41a343:	je     0x41a339
  41a345:	fild   QWORD PTR [edx+eiz*1-0x5a9f884b]
  41a34c:	push   esp
  41a34d:	mov    edx,0x5f665d8c
  41a352:	mov    dl,0xfc
  41a354:	inc    ebp
  41a355:	je     0x41a2fc
  41a357:	dec    ebx
  41a358:	out    dx,al
  41a359:	sbb    ebx,DWORD PTR [edi-0x4b345bb4]
  41a35f:	xchg   ax,ax
  41a361:	bound  ebx,QWORD PTR [ebx]
  41a363:	pop    ss
  41a364:	loop   0x41a2f9
  41a366:	push   esi
  41a367:	pop    edi
  41a368:	push   0xfffffff8
  41a36a:	jle    0x41a3b9
  41a36c:	or     al,0x93
  41a36e:	push   ebx
  41a36f:	add    al,0x52
  41a371:	sbb    al,0x52
  41a373:	sub    BYTE PTR [edx+0x22],bl
  41a376:	mov    dh,0x93
  41a378:	into   
  41a379:	mov    BYTE PTR [ebp-0x7f],bl
  41a37c:	cld    
  41a37d:	cmp    al,0xf5
  41a37f:	pop    ecx
  41a380:	int3   
  41a381:	sahf   
  41a382:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41a384:	dec    esi
  41a385:	inc    esp
  41a386:	out    0x8d,eax
  41a388:	lds    edx,FWORD PTR [ecx+0x4c]
  41a38b:	mov    fs,ebx
  41a38d:	cmp    esp,DWORD PTR [ebx]
  41a38f:	lock inc ebx
  41a391:	mov    dh,0x4d
  41a393:	mov    ds:0x2b5223fe,eax
  41a398:	xchg   edi,eax
  41a399:	leave  
  41a39a:	cmp    eax,0x647fa2b6
  41a39f:	or     esi,DWORD PTR [eax+0x14]
  41a3a2:	out    dx,eax
  41a3a3:	push   edi
  41a3a4:	add    DWORD PTR [edx-0x69],ebx
  41a3a7:	jno    0x41a425
  41a3a9:	sbb    BYTE PTR [edx+0xe],0x25
  41a3ad:	push   ecx
  41a3ae:	jbe    0x41a37f
  41a3b0:	adc    eax,0xbc495c12
  41a3b5:	ror    BYTE PTR [ecx-0x52b913ad],cl
  41a3bb:	in     eax,0x50
  41a3bd:	jecxz  0x41a3e0
  41a3bf:	push   edi
  41a3c0:	inc    esi
  41a3c1:	jb     0x41a3bd
  41a3c3:	fucomp st(7)
  41a3c5:	test   eax,0x56dd0c10
  41a3ca:	xchg   esi,eax
  41a3cb:	sahf   
  41a3cc:	(bad)  
  41a3ce:	jecxz  0x41a40d
  41a3d0:	outs   dx,BYTE PTR ds:[esi]
  41a3d1:	fsub   DWORD PTR [edx+0x78]
  41a3d4:	pop    esp
  41a3d5:	ret    0xe28
  41a3d8:	pop    esi
  41a3d9:	jae    0x41a41f
  41a3db:	div    DWORD PTR [edx]
  41a3dd:	jae    0x41a372
  41a3df:	repz ja 0x41a38a
  41a3e2:	sub    DWORD PTR ss:[eax+0x4e],edi
  41a3e6:	scas   eax,DWORD PTR es:[edi]
  41a3e7:	int    0x45
  41a3e9:	jp     0x41a36e
  41a3eb:	pop    edi
  41a3ec:	add    DWORD PTR [edi],ebx
  41a3ee:	lods   eax,DWORD PTR ds:[esi]
  41a3ef:	ins    BYTE PTR es:[edi],dx
  41a3f0:	cs inc eax
  41a3f2:	add    BYTE PTR es:[ebx+0x2e0691d4],ch
  41a3f9:	jg     0x41a42b
  41a3fb:	and    BYTE PTR [ecx],0x7b
  41a3fe:	idiv   BYTE PTR [ecx+0x596a9735]
  41a404:	sti    
  41a405:	cld    
  41a406:	lock in eax,dx
  41a408:	adc    al,0x63
  41a40a:	push   edi
  41a40b:	push   esp
  41a40c:	cmp    BYTE PTR [edi-0x9e0187b],bh
  41a412:	mov    al,ds:0x10897358
  41a417:	pop    ds
  41a418:	(bad)  
  41a419:	or     dl,BYTE PTR [esp+esi*8-0x1e]
  41a41d:	loope  0x41a457
  41a41f:	mov    bh,0xec
  41a421:	xor    DWORD PTR [esi+0x5c8c53b9],eax
  41a427:	inc    esp
  41a428:	or     al,0x78
  41a42a:	cmp    eax,DWORD PTR [edi+0x61]
  41a42d:	mov    ch,BYTE PTR [esi+eax*4]
  41a430:	push   eax
  41a431:	sbb    BYTE PTR [eax],ch
  41a433:	mov    ebx,0xaf3b6eb0
  41a438:	push   es
  41a439:	cld    
  41a43a:	imul   eax,esp,0xb0e716a9
  41a440:	ret    0xc306
  41a443:	jne    0x41a3e9
  41a445:	jmp    0x41a3cb
  41a447:	pop    eax
  41a448:	popf   
  41a449:	dec    ebx
  41a44a:	rcl    esp,cl
  41a44c:	out    dx,al
  41a44d:	sub    DWORD PTR [ecx+0x5c],ecx
  41a450:	test   al,0x27
  41a452:	cmp    eax,0xe3eb4042
  41a457:	and    bh,BYTE PTR [edi+0x6]
  41a45a:	push   0x4eb6b3fb
  41a45f:	dec    esp
  41a460:	loop   0x41a3e5
  41a462:	mov    es,WORD PTR [edi-0x65be8bef]
  41a468:	daa    
  41a469:	or     bh,BYTE PTR [eax+0x421241a7]
  41a46f:	(bad)  
  41a470:	imul   ebx,DWORD PTR [ecx],0x20
  41a473:	push   cs
  41a474:	(bad)  
  41a475:	xor    esi,DWORD PTR [ecx]
  41a477:	sbb    DWORD PTR [edx+0x49],esi
  41a47a:	and    eax,0xee1b7261
  41a47f:	push   edx
  41a480:	call   0xdacc:0x29d8101f
  41a487:	cs dec ebx
  41a489:	push   esi
  41a48a:	out    0xc5,al
  41a48c:	sub    ebp,ebp
  41a48e:	jb     0x41a46f
  41a490:	adc    BYTE PTR [eax],0x13
  41a493:	jmp    0x7d3fc98f
  41a498:	cdq    
  41a499:	aam    0x84
  41a49b:	lahf   
  41a49c:	or     eax,0x3c7d50a5
  41a4a1:	or     al,0xf3
  41a4a3:	mov    ebx,0x965cd60c
  41a4a8:	add    eax,0xa48555a8
  41a4ad:	ds cwde 
  41a4af:	(bad)  
  41a4b0:	repnz push ecx
  41a4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4b3:	in     al,dx
  41a4b4:	retf   
  41a4b5:	fnsave [ecx-0x30978e35]
  41a4bb:	rcl    DWORD PTR [esi+0xa2ae002],cl
  41a4c1:	std    
  41a4c2:	test   al,0x65
  41a4c4:	or     cl,BYTE PTR [eax]
  41a4c6:	les    edx,FWORD PTR [edi+0x6c]
  41a4c9:	xor    DWORD PTR [ebp-0x34],ebp
  41a4cc:	pusha  
  41a4cd:	aaa    
  41a4ce:	jle    0x41a458
  41a4d0:	pusha  
  41a4d1:	nop
  41a4d2:	mov    bh,0x8
  41a4d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4d5:	std    
  41a4d6:	push   cs
  41a4d7:	xchg   ecx,eax
  41a4d8:	mov    cs,WORD PTR ds:0x43280c39
  41a4de:	push   ecx
  41a4df:	adc    eax,0x78df0672
  41a4e4:	xor    bh,bh
  41a4e6:	mov    eax,0x9e6a4f0b
  41a4eb:	lock pop esp
  41a4ed:	lea    esi,[ecx]
  41a4ef:	sahf   
  41a4f0:	sbb    edx,DWORD PTR [edi-0x61]
  41a4f3:	fidiv  WORD PTR [ebx]
  41a4f5:	dec    eax
  41a4f6:	test   al,0x94
  41a4f8:	shl    DWORD PTR [ecx+esi*8-0x28],cl
  41a4fc:	or     ebp,esi
  41a4fe:	push   0xa75d6609
  41a503:	imul   ebp,edx,0x4009c355
  41a509:	fidivr WORD PTR ds:0xdf81dec6
  41a50f:	lea    ecx,[esi+eax*4]
  41a512:	cmp    DWORD PTR [edx],eax
  41a514:	cs pop edi
  41a516:	daa    
  41a517:	call   0xb05742c
  41a51c:	add    ebp,DWORD PTR [eax-0x5e7036e6]
  41a522:	into   
  41a523:	addr16 ds push cs
  41a526:	sti    
  41a527:	clc    
  41a528:	retf   
  41a529:	and    al,0x20
  41a52b:	push   ebp
  41a52c:	pop    ebp
  41a52d:	shl    BYTE PTR [ebx],1
  41a52f:	cmp    ebp,ebp
  41a531:	or     eax,0x9eee68df
  41a536:	stos   DWORD PTR es:[edi],eax
  41a537:	mov    ebx,DWORD PTR [ebx+0x48]
  41a53a:	arpl   WORD PTR [ecx-0x199ff97b],dx
  41a540:	(bad)  
  41a541:	repz jmp 0x41a4f6
  41a544:	xor    BYTE PTR [ecx],0x51
  41a547:	test   DWORD PTR [edi-0x76],0x362b24a0
  41a54e:	sub    DWORD PTR [ebx],edi
  41a550:	xchg   DWORD PTR [eax+edx*4+0x61],esi
  41a554:	cmp    edx,edx
  41a556:	pop    esp
  41a557:	(bad)  
  41a558:	in     al,dx
  41a559:	aaa    
  41a55a:	aaa    
  41a55b:	aas    
  41a55c:	imul   edi,edi,0x24
  41a55f:	int3   
  41a560:	mov    al,0x69
  41a562:	or     BYTE PTR [edi],al
  41a564:	arpl   WORD PTR [edi-0x54],ax
  41a567:	in     eax,dx
  41a568:	dec    ecx
  41a569:	mov    eax,ds:0x82fddbbd
  41a56e:	mov    WORD PTR [esi-0x22],cs
  41a571:	adc    DWORD PTR [ebx-0xed657ca],ebx
  41a577:	ret    
  41a578:	fs sti 
  41a57a:	repz call 0xb3f9a78e
  41a580:	addr16 push ebp
  41a582:	call   0x60eead97
  41a587:	sbb    edx,DWORD PTR [ebx-0x49578c65]
  41a58d:	xor    al,0xae
  41a58f:	sbb    ah,BYTE PTR [esi-0x3a]
  41a592:	rcl    BYTE PTR [ecx],0xee
  41a595:	xchg   ebp,eax
  41a596:	mov    cl,0x70
  41a598:	dec    edi
  41a599:	jge    0x41a5ae
  41a59b:	add    DWORD PTR [ecx+0x44469a4e],esi
  41a5a1:	jns    0x41a5ea
  41a5a3:	mov    ch,0xc2
  41a5a5:	mov    cl,BYTE PTR [edx-0x1c]
  41a5a8:	bound  esi,QWORD PTR [edi+0x47]
  41a5ab:	or     dh,dh
  41a5ad:	jmp    0x41a5de
  41a5af:	(bad)  
  41a5b0:	push   ebp
  41a5b1:	outs   dx,DWORD PTR ds:[esi]
  41a5b2:	sub    eax,0xe2185d61
  41a5b7:	js     0x41a591
  41a5b9:	adc    DWORD PTR [edx],esp
  41a5bb:	ficomp WORD PTR [ebx-0x2066e64c]
  41a5c1:	push   edi
  41a5c2:	mov    DWORD PTR [ebx+0x1e86a1e6],esp
  41a5c8:	out    dx,al
  41a5c9:	cmp    ah,bh
  41a5cb:	je     0x41a5bc
  41a5cd:	int3   
  41a5ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5cf:	ins    DWORD PTR es:[edi],dx
  41a5d0:	repz clc 
  41a5d2:	xchg   ebp,eax
  41a5d3:	mov    DWORD PTR [eax-0xd],edx
  41a5d6:	call   0xb16162d3
  41a5db:	push   ds
  41a5dc:	mov    ds:0xe521f430,eax
  41a5e1:	sub    ah,BYTE PTR [esi]
  41a5e3:	mov    fs,WORD PTR [edi+0x74b8a83f]
  41a5e9:	test   DWORD PTR gs:[ecx-0x781899a4],ecx
  41a5f0:	mov    eax,ds:0x34cdf450
  41a5f5:	inc    esp
  41a5f6:	call   0xda7898c0
  41a5fb:	xor    al,BYTE PTR [ecx+0x3a66e5df]
  41a601:	pop    edi
  41a602:	aam    0x54
  41a604:	cmp    esp,DWORD PTR [ebp-0x788c4e27]
  41a60a:	fsub   DWORD PTR [eax+0x3ec37ea6]
  41a610:	pop    ecx
  41a611:	mov    al,ds:0xd8f90305
  41a616:	mov    ebp,0x31ec8cea
  41a61b:	xchg   esp,ebp
  41a61d:	js     0x41a653
  41a61f:	add    al,0x1c
  41a621:	mov    esp,0xbbb26dbd
  41a626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a627:	repnz xchg ebx,eax
  41a629:	jle    0x41a5cd
  41a62b:	sbb    eax,0x82dfe173
  41a630:	inc    ecx
  41a631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a632:	(bad)  
  41a634:	add    eax,0xe5a6ed61
  41a639:	aas    
  41a63a:	imul   ecx,DWORD PTR fs:[ebx+0x1a],0xfffffffa
  41a63f:	inc    esi
  41a640:	inc    ebp
  41a641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a642:	lods   al,BYTE PTR ds:[esi]
  41a643:	cld    
  41a644:	aaa    
  41a645:	push   cs
  41a646:	retf   
  41a647:	ins    DWORD PTR es:[edi],dx
  41a648:	fxch   st(0)
  41a64a:	inc    esp
  41a64b:	xchg   edx,eax
  41a64c:	inc    ebp
  41a64d:	push   es
  41a64e:	cmp    BYTE PTR [edx],bl
  41a650:	loope  0x41a6a1
  41a652:	add    eax,0xd5d9c96a
  41a657:	(bad)  
  41a658:	(bad)  
  41a659:	(bad)  
  41a65a:	push   0x1a126e92
  41a65f:	arpl   WORD PTR [ecx],bx
  41a661:	test   al,0x7e
  41a663:	cmp    al,0x98
  41a665:	jecxz  0x41a66d
  41a667:	xchg   edx,eax
  41a668:	(bad)
  41a66d:	(bad)  
  41a66e:	int3   
  41a66f:	fcmovnbe st,st(4)
  41a671:	add    BYTE PTR [edi+eax*4],bh
  41a674:	stos   BYTE PTR es:[edi],al
  41a675:	xchg   esi,eax
  41a676:	sub    al,0x64
  41a678:	fwait
  41a679:	out    0xd2,eax
  41a67b:	mov    ch,0xe6
  41a67d:	jbe    0x41a690
  41a67f:	jmp    0x41a605
  41a681:	pop    edx
  41a682:	mov    esi,0x722abb15
  41a687:	mov    edi,0x7efc7ff6
  41a68c:	pop    ecx
  41a68d:	mov    edi,0x1e583a35
  41a692:	and    ch,bl
  41a694:	mov    al,0x5f
  41a696:	pop    edi
  41a697:	rol    ah,cl
  41a699:	inc    eax
  41a69a:	xchg   esi,eax
  41a69b:	mov    cl,0x9c
  41a69d:	xchg   ch,al
  41a69f:	(bad)  
  41a6a0:	std    
  41a6a1:	lock or esp,DWORD PTR [ebx+eiz*4]
  41a6a5:	push   cs
  41a6a6:	pop    ecx
  41a6a7:	int    0x5
  41a6a9:	lahf   
  41a6aa:	jne    0x41a63e
  41a6ac:	out    0x36,al
  41a6ae:	add    al,0x9f
  41a6b0:	in     al,0xc3
  41a6b2:	daa    
  41a6b3:	mov    gs,WORD PTR [esi-0xd]
  41a6b6:	or     al,bh
  41a6b8:	imul   ebp,DWORD PTR [esi-0x6b],0x7ae6aac3
  41a6bf:	sub    BYTE PTR [ebx],dh
  41a6c1:	pop    eax
  41a6c2:	pop    esp
  41a6c3:	in     eax,0x23
  41a6c5:	into   
  41a6c6:	dec    ebx
  41a6c7:	sub    DWORD PTR [esi+0x3d],0xe24a8eb2
  41a6ce:	cld    
  41a6cf:	dec    edi
  41a6d0:	inc    ecx
  41a6d1:	(bad)  
  41a6d2:	jle    0x41a695
  41a6d4:	adc    bl,al
  41a6d6:	mov    esp,0x74c4993
  41a6db:	xchg   edi,eax
  41a6dc:	or     bl,ah
  41a6de:	adc    eax,0x4e79704b
  41a6e3:	test   BYTE PTR [eax-0x3d],0xe1
  41a6e7:	rcl    BYTE PTR [ebx-0x75184de1],1
  41a6ed:	cs pop ecx
  41a6ef:	(bad)  
  41a6f0:	hlt    
  41a6f1:	xor    eax,0x7ca8dbbe
  41a6f6:	sbb    eax,0xcd6b54f7
  41a6fb:	imul   eax,ebp,0xd1fbdcb1
  41a701:	pop    eax
  41a702:	inc    edx
  41a703:	cli    
  41a704:	fs pusha 
  41a706:	mul    DWORD PTR [ebx-0xb]
  41a709:	mov    fs,eax
  41a70b:	sub    eax,0x6c263c62
  41a710:	(bad)  
  41a711:	dec    esp
  41a712:	sub    esi,DWORD PTR [ecx]
  41a714:	repz in eax,0x42
  41a717:	cmp    DWORD PTR [ecx-0x7e],0x99abb449
  41a71e:	inc    edx
  41a71f:	test   eax,0x6bf0ee43
  41a724:	jnp    0x41a6c5
  41a726:	xlat   BYTE PTR ds:[ebx]
  41a727:	imul   esi,DWORD PTR [edx],0x3a
  41a72a:	fisubr WORD PTR [ecx]
  41a72c:	out    dx,al
  41a72d:	cli    
  41a72e:	repnz add BYTE PTR [eax],al
  41a731:	add    BYTE PTR [esi+0x6f],cl
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	ds mov bh,0xd6
  41a741:	dec    edi
  41a742:	leave  
  41a743:	and    eax,DWORD PTR [ecx]
  41a745:	add    ch,dh
  41a747:	add    al,0x0
  41a749:	add    BYTE PTR [ebp-0x53056a03],bl
  41a74f:	loop   0x41a6fc
  41a751:	fstp   st(5)
  41a753:	ror    DWORD PTR [ecx+0x57e09bd0],0x22
  41a75a:	push   0x29a76ee4
  41a75f:	jmp    0x968c0c28
  41a764:	scas   al,BYTE PTR es:[edi]
  41a765:	shl    bh,0x5d
  41a768:	push   0x58
  41a76a:	jmp    0xee8d244a
  41a76f:	int3   
  41a770:	mov    BYTE PTR [esi],ah
  41a772:	dec    esi
  41a773:	popf   
  41a774:	(bad)  
  41a775:	sub    al,0x5e
  41a777:	mov    ebp,0x853bbf9c
  41a77c:	mov    edx,0x9f562c30
  41a781:	inc    edi
  41a782:	bound  esi,QWORD PTR [ebp-0x43]
  41a785:	repz ss inc edi
  41a788:	leave  
  41a789:	mov    eax,0xfe22e4a2
  41a78e:	cmp    ebx,DWORD PTR [eax]
  41a790:	mov    bh,0xbb
  41a792:	cdq    
  41a793:	jl     0x41a75f
  41a795:	fbld   TBYTE PTR [ecx]
  41a797:	cmp    BYTE PTR [ecx+0x46f24537],al
  41a79d:	adc    ebp,DWORD PTR [edi-0x10c07e05]
  41a7a3:	and    ebp,DWORD PTR [eax]
  41a7a5:	sbb    al,0x95
  41a7a7:	adc    eax,0xa7dca70
  41a7ac:	outs   dx,BYTE PTR ds:[esi]
  41a7ad:	and    ah,ah
  41a7af:	(bad)  
  41a7b1:	loopne 0x41a797
  41a7b3:	arpl   WORD PTR [edi],di
  41a7b5:	mov    ebx,0x74c3c98e
  41a7ba:	(bad)  
  41a7bb:	mov    eax,0xfbbea545
  41a7c0:	xchg   ebp,eax
  41a7c1:	push   ss
  41a7c2:	scas   eax,DWORD PTR es:[edi]
  41a7c3:	cmp    eax,0x89e0cd12
  41a7c8:	cmp    DWORD PTR [ecx],esp
  41a7ca:	push   cs
  41a7cb:	dec    edi
  41a7cc:	and    al,0x9e
  41a7ce:	dec    edx
  41a7cf:	and    eax,0xe02bf777
  41a7d4:	sub    eax,0xee9311fa
  41a7d9:	push   ebx
  41a7da:	cmp    edx,DWORD PTR [ebx-0x46]
  41a7dd:	dec    edi
  41a7de:	or     al,0x88
  41a7e0:	shr    BYTE PTR [ebp+0x7ad9fbf3],cl
  41a7e6:	add    eax,0x77372dfe
  41a7eb:	and    eax,0xbe435ecc
  41a7f0:	iret   
  41a7f1:	mov    ebp,ss
  41a7f3:	nop
  41a7f4:	loope  0x41a7c8
  41a7f6:	ret    0x2b86
  41a7f9:	lds    esi,FWORD PTR [edx+0x72]
  41a7fc:	repz inc ebx
  41a7fe:	in     al,0xc2
  41a800:	icebp  
  41a801:	inc    esp
  41a802:	call   0x2d4e:0xd03dd931
  41a809:	jne    0x41a816
  41a80b:	xchg   BYTE PTR [ecx-0x18],dl
  41a80e:	pop    gs
  41a810:	es mov ah,0x37
  41a813:	gs fs sar al,1
  41a817:	push   cs
  41a818:	mov    esp,0x849ee06a
  41a81d:	arpl   WORD PTR [ecx],si
  41a81f:	add    BYTE PTR [edi+eiz*4],ah
  41a822:	adc    DWORD PTR [eax+0x6d5ecf50],0xf78b7418
  41a82c:	pop    ebp
  41a82d:	repz push ecx
  41a82f:	xor    bl,BYTE PTR [edi-0x9]
  41a832:	dec    esp
  41a833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a834:	ins    DWORD PTR es:[edi],dx
  41a835:	popf   
  41a836:	dec    esi
  41a837:	scas   al,BYTE PTR es:[edi]
  41a838:	mov    ch,0x65
  41a83a:	sub    bh,BYTE PTR [ebx-0x1bf7eecd]
  41a840:	push   0xffffff8e
  41a842:	inc    edx
  41a843:	sbb    al,0x68
  41a845:	pop    edi
  41a846:	rcr    BYTE PTR [esi+0x120b7950],cl
  41a84c:	in     al,0xe3
  41a84e:	popa   
  41a84f:	jne    0x41a820
  41a851:	arpl   WORD PTR [ecx+0x3],bp
  41a854:	jbe    0x41a8a2
  41a856:	cmp    bl,bl
  41a858:	inc    esi
  41a859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a85a:	das    
  41a85b:	inc    esp
  41a85c:	in     eax,dx
  41a85d:	mov    DWORD PTR ds:0xc0b2442b,esi
  41a863:	xchg   BYTE PTR [esi-0x28],al
  41a866:	(bad)  
  41a869:	call   0x3cb59ea0
  41a86e:	sbb    al,0x2
  41a870:	xchg   ebx,eax
  41a871:	mov    eax,0xf09375a5
  41a876:	inc    ebp
  41a877:	nop
  41a878:	pop    ds
  41a879:	in     eax,dx
  41a87a:	mov    ecx,0x80bfaddd
  41a87f:	push   edi
  41a880:	adc    BYTE PTR [edx+0x61],ch
  41a883:	pop    ds
  41a884:	inc    eax
  41a885:	push   edi
  41a886:	add    WORD PTR [ebx-0x1b189e54],cx
  41a88d:	dec    esi
  41a88e:	jb     0x41a8c0
  41a890:	mov    eax,ds:0x52d17533
  41a895:	jg     0x41a8f6
  41a897:	aas    
  41a898:	cmp    DWORD PTR [ebx],ecx
  41a89a:	and    edi,esi
  41a89c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a89d:	adc    bl,BYTE PTR [eax-0x2b4a965c]
  41a8a3:	mov    ah,0x38
  41a8a5:	ret    
  41a8a6:	push   0x1d9ddbe
  41a8ab:	(bad)  
  41a8ac:	mov    ebx,0xdcd72b27
  41a8b1:	cdq    
  41a8b2:	cmc    
  41a8b3:	xor    esi,DWORD PTR [esi]
  41a8b5:	cmp    BYTE PTR [esi+0x2e370bcb],dh
  41a8bb:	imul   esp,DWORD PTR [ebp+0x1],0xc4e688a9
  41a8c2:	int    0x88
  41a8c4:	adc    eax,DWORD PTR [esi]
  41a8c6:	mov    al,ah
  41a8c8:	enter  0x850f,0x9
  41a8cc:	mov    dl,0xaa
  41a8ce:	scas   al,BYTE PTR es:[edi]
  41a8cf:	stc    
  41a8d0:	or     bl,BYTE PTR [edx+0x43e39aef]
  41a8d6:	pop    ds
  41a8d7:	xor    ebp,ecx
  41a8d9:	sar    DWORD PTR [edx],1
  41a8db:	retf   0xf6f3
  41a8de:	in     eax,dx
  41a8df:	mov    ds:0x1878634b,al
  41a8e4:	mov    esp,esi
  41a8e6:	xor    BYTE PTR [ebx-0x5592f978],ch
  41a8ec:	inc    edx
  41a8ed:	mov    ecx,DWORD PTR [ebx-0x1d]
  41a8f0:	repnz iret 
  41a8f2:	sbb    al,0x85
  41a8f4:	pop    ds
  41a8f5:	inc    esp
  41a8f6:	mov    cl,ch
  41a8f8:	popf   
  41a8f9:	xchg   BYTE PTR [edi],dh
  41a8fb:	push   0x34
  41a8fd:	mov    ebx,0xb1fc397a
  41a902:	ud0    ebp,DWORD PTR [edx-0x7d818e74]
  41a909:	in     al,0xbb
  41a90b:	popa   
  41a90c:	jg     0x41a949
  41a90e:	das    
  41a90f:	and    DWORD PTR [edx+0x421cab38],esp
  41a915:	popa   
  41a916:	and    eax,ebx
  41a918:	adc    DWORD PTR [ebx-0xd],eax
  41a91b:	xor    BYTE PTR [esp+ebp*4-0x5c2cde7a],bl
  41a922:	int3   
  41a923:	sbb    al,0x2
  41a925:	inc    ebp
  41a926:	sub    cl,ah
  41a928:	mov    bh,0x43
  41a92a:	jne    0x41a8d7
  41a92c:	adc    al,0x5
  41a92e:	jp     0x41a8bc
  41a930:	cmp    al,0x46
  41a932:	sbb    ebx,eax
  41a934:	jae    0x41a944
  41a936:	sub    ebp,DWORD PTR [ebp+0x44311518]
  41a93c:	call   0x893d:0x3b4cb6dd
  41a943:	call   0x112ec3e6
  41a948:	mov    dl,0xeb
  41a94a:	pop    esp
  41a94b:	cld    
  41a94c:	pop    edi
  41a94d:	mov    WORD PTR ds:0x9f4ba936,?
  41a953:	adc    esp,DWORD PTR [ebx]
  41a955:	sub    DWORD PTR [edx+ebp*2-0x5f16a9d8],esp
  41a95c:	cdq    
  41a95d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a95e:	ja     0x41a8f6
  41a960:	es jl  0x41a92a
  41a963:	icebp  
  41a964:	pop    ecx
  41a965:	and    ebp,DWORD PTR [ecx]
  41a967:	mov    esi,0xde499732
  41a96c:	mov    ah,0x1b
  41a96e:	pop    edx
  41a96f:	sar    ebp,cl
  41a971:	iret   
  41a972:	inc    edi
  41a973:	mov    esp,0x7f4a1835
  41a978:	icebp  
  41a979:	cmp    eax,0x5ab502ca
  41a97e:	or     ebp,edi
  41a980:	jmp    0x41a97d
  41a982:	test   eax,0xcd65462a
  41a987:	or     al,0xc
  41a989:	loope  0x41a996
  41a98b:	rcr    DWORD PTR [ecx+edx*8],1
  41a98e:	sub    al,0xd1
  41a990:	inc    BYTE PTR [esi]
  41a992:	pushf  
  41a993:	cwde   
  41a994:	add    BYTE PTR [esi],bl
  41a996:	mov    dh,0x85
  41a998:	mov    eax,0x7bbf4eeb
  41a99d:	add    bh,BYTE PTR [ebx-0x4e]
  41a9a0:	cmp    DWORD PTR [edx],eax
  41a9a2:	scas   al,BYTE PTR es:[edi]
  41a9a3:	mov    al,ds:0xf565d506
  41a9a8:	jg     0x41aa0d
  41a9aa:	out    0x52,eax
  41a9ac:	adc    al,0xd0
  41a9ae:	xor    dh,BYTE PTR [edi-0x7c96af10]
  41a9b4:	stos   BYTE PTR es:[edi],al
  41a9b5:	jo     0x41aa1c
  41a9b7:	repz or cl,BYTE PTR [edx]
  41a9ba:	pusha  
  41a9bb:	or     DWORD PTR [ebp-0x5d],0xfd8bebc3
  41a9c2:	add    eax,0x576c0f78
  41a9c7:	aaa    
  41a9c8:	test   BYTE PTR [edi],dl
  41a9ca:	cmp    cl,ch
  41a9cc:	neg    DWORD PTR [edi]
  41a9ce:	popa   
  41a9cf:	push   edi
  41a9d0:	push   edi
  41a9d1:	adc    DWORD PTR [edx],0xffffff80
  41a9d4:	(bad)  
  41a9d5:	push   0x1e9d110d
  41a9da:	adc    cl,dl
  41a9dc:	test   eax,0xb34bca54
  41a9e1:	inc    edi
  41a9e2:	xchg   edi,eax
  41a9e3:	and    BYTE PTR [edi-0x7b],bl
  41a9e6:	pop    edx
  41a9e7:	fcomp  QWORD PTR [ebx+0x44822c37]
  41a9ed:	pusha  
  41a9ee:	cmp    al,0x41
  41a9f0:	sub    eax,0xe20df57f
  41a9f5:	jae    0x41aa00
  41a9f7:	sub    BYTE PTR [ebx-0x62814058],ch
  41a9fd:	lds    ecx,FWORD PTR [edx-0x37]
  41aa00:	mov    eax,0x5845b6eb
  41aa05:	in     eax,dx
  41aa06:	dec    eax
  41aa07:	adc    al,0xa6
  41aa09:	dec    edi
  41aa0a:	mov    edx,DWORD PTR [bx-0x4e2d]
  41aa0f:	inc    edx
  41aa10:	les    edx,FWORD PTR [ebx+0x6]
  41aa13:	fldcw  WORD PTR [edi+0x4e24dbf2]
  41aa19:	call   0x52a7:0x415130a6
  41aa20:	and    edi,eax
  41aa22:	aaa    
  41aa23:	cli    
  41aa24:	cmc    
  41aa25:	dec    esp
  41aa26:	xor    al,0xf2
  41aa28:	loope  0x41aa89
  41aa2a:	xor    BYTE PTR [ecx+0x50383d94],bl
  41aa30:	mov    bl,0x15
  41aa32:	nop
  41aa33:	mov    bh,0x40
  41aa35:	or     eax,0x937461d
  41aa3a:	jecxz  0x41a9f3
  41aa3c:	mov    dh,0x7c
  41aa3e:	push   esi
  41aa3f:	xchg   esi,eax
  41aa40:	pop    edi
  41aa41:	and    DWORD PTR [ebx+ecx*1-0x6cce1c96],ebp
  41aa48:	arpl   WORD PTR [esi-0x19e96458],cx
  41aa4e:	not    BYTE PTR [ecx+0x78427824]
  41aa54:	test   BYTE PTR [ecx],ch
  41aa56:	test   al,0xee
  41aa58:	inc    ecx
  41aa59:	sbb    DWORD PTR [edi+0x20],ebp
  41aa5c:	js     0x41aa3b
  41aa5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa5f:	popf   
  41aa60:	in     al,0x25
  41aa62:	sub    edi,DWORD PTR [ecx+0x0]
  41aa65:	lahf   
  41aa66:	pusha  
  41aa67:	jecxz  0x41aaac
  41aa69:	inc    edi
  41aa6a:	cmp    esi,eax
  41aa6c:	or     al,0x57
  41aa6e:	lods   al,BYTE PTR ds:[esi]
  41aa6f:	repnz inc ecx
  41aa71:	inc    edx
  41aa72:	mov    edx,0xac7e29fd
  41aa77:	pushf  
  41aa78:	xchg   ebp,eax
  41aa79:	retf   0x69b7
  41aa7c:	cmp    ah,BYTE PTR gs:[edx-0x23]
  41aa80:	fwait
  41aa81:	dec    ecx
  41aa82:	call   0xa793:0x592c8724
  41aa89:	call   0x581bfebc
  41aa8e:	cmp    al,0x11
  41aa90:	ficomp DWORD PTR [ebx-0x590b771e]
  41aa96:	or     ch,ah
  41aa98:	outs   dx,BYTE PTR ds:[esi]
  41aa99:	mov    ecx,0x307689fb
  41aa9e:	mov    al,0x7c
  41aaa0:	and    bl,BYTE PTR [ebx]
  41aaa2:	in     al,dx
  41aaa3:	push   0xffffffcd
  41aaa5:	add    eax,0x299f166
  41aaaa:	out    dx,al
  41aaab:	ja     0x41aa95
  41aaad:	retf   0xec79
  41aab0:	xor    ch,0x51
  41aab3:	pop    edi
  41aab4:	dec    BYTE PTR [edi]
  41aab6:	xchg   edx,eax
  41aab7:	dec    edx
  41aab8:	mov    bl,BYTE PTR [edx+0x6d]
  41aabb:	sbb    ah,BYTE PTR [ecx+0x11]
  41aabe:	fwait
  41aabf:	stc    
  41aac0:	out    0x3d,al
  41aac2:	mov    edx,0xd28361f3
  41aac7:	mov    ds:0x7177b06a,eax
  41aacc:	out    dx,al
  41aacd:	fist   DWORD PTR [ecx-0x5e68d71a]
  41aad3:	mov    bl,0x97
  41aad5:	dec    esp
  41aad6:	or     ch,dl
  41aad8:	xlat   BYTE PTR ds:[ebx]
  41aad9:	push   0x3c
  41aadb:	inc    ecx
  41aadc:	sub    BYTE PTR [edx],dh
  41aade:	sbb    BYTE PTR [edi],cl
  41aae0:	sub    eax,0x91723b4f
  41aae5:	sub    al,0x4e
  41aae7:	push   edx
  41aae8:	jg     0x41aae3
  41aaea:	xchg   DWORD PTR [ebp+0x2f],ebp
  41aaed:	imul   ecx
  41aaef:	push   esp
  41aaf0:	mov    ds:0xa0b51425,eax
  41aaf5:	or     ecx,DWORD PTR [ebx+edi*1]
  41aaf8:	inc    ebp
  41aaf9:	sahf   
  41aafa:	rcl    ah,cl
  41aafc:	xor    BYTE PTR [eax],bh
  41aafe:	rcr    DWORD PTR [esi],cl
  41ab00:	inc    eax
  41ab01:	rol    DWORD PTR [ebx-0x551db84f],1
  41ab07:	add    DWORD PTR ds:0x83a80101,edx
  41ab0d:	jg     0x41aab9
  41ab0f:	or     BYTE PTR [edx-0x5c3493a7],0x8c
  41ab16:	jb     0x41ab94
  41ab18:	test   al,0x37
  41ab1a:	or     esp,eax
  41ab1c:	inc    ebx
  41ab1d:	loopne 0x41ab2c
  41ab1f:	repnz push 0x3bdc0303
  41ab25:	or     al,0x29
  41ab27:	in     eax,0x6d
  41ab29:	xchg   esi,eax
  41ab2a:	test   bl,ah
  41ab2c:	mov    dh,0x59
  41ab2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab2f:	sub    ch,BYTE PTR [eax+0x49f34a84]
  41ab35:	(bad)  [edx-0x6c560511]
  41ab3b:	jp     0x41ab35
  41ab3d:	adc    BYTE PTR [edi+0x71],0x35
  41ab41:	mov    eax,ds:0x5dac12a9
  41ab46:	sbb    al,0xc2
  41ab48:	out    0x47,al
  41ab4a:	sbb    eax,0x853800f8
  41ab4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab50:	push   ecx
  41ab51:	clc    
  41ab52:	ror    BYTE PTR [edx-0x59],1
  41ab55:	dec    BYTE PTR [edi-0x1e]
  41ab58:	dec    eax
  41ab59:	dec    ebx
  41ab5a:	pop    ebx
  41ab5b:	sub    DWORD PTR [esi+edx*2+0x5e4278f5],ecx
  41ab62:	pop    edx
  41ab63:	fdivr  st,st(5)
  41ab65:	sbb    eax,0x1eeeffd5
  41ab6b:	icebp  
  41ab6c:	jbe    0x41ab8e
  41ab6e:	sbb    BYTE PTR [edi-0xc],dl
  41ab71:	push   eax
  41ab72:	mov    dl,BYTE PTR [ebx-0x36]
  41ab75:	push   ebx
  41ab76:	daa    
  41ab77:	sbb    BYTE PTR [ebx],ah
  41ab79:	icebp  
  41ab7a:	fmul   st,st(1)
  41ab7c:	test   al,0xe6
  41ab7e:	aaa    
  41ab7f:	mov    bl,0x81
  41ab81:	call   DWORD PTR ds:0xee45d015
  41ab87:	imul   ecx,ebx,0xffffffe4
  41ab8a:	pusha  
  41ab8b:	out    dx,eax
  41ab8c:	into   
  41ab8d:	xchg   esi,eax
  41ab8e:	cdq    
  41ab8f:	push   es
  41ab90:	xchg   ebp,eax
  41ab91:	es sub al,0x9b
  41ab94:	out    0x8c,al
  41ab96:	jmp    0x98e5d204
  41ab9b:	pusha  
  41ab9c:	hlt    
  41ab9d:	sbb    al,0x65
  41ab9f:	loopne 0x41ab8a
  41aba1:	mov    ds:0x1f082926,eax
  41aba6:	mov    dh,0x62
  41aba8:	ss clc 
  41abaa:	mov    ch,0x31
  41abac:	inc    edi
  41abad:	xlat   BYTE PTR ds:[ebx]
  41abae:	pusha  
  41abaf:	adc    al,0x3e
  41abb1:	out    0x4d,al
  41abb3:	sub    BYTE PTR [esi+0x58],bh
  41abb6:	jmp    0x45837745
  41abbb:	xlat   BYTE PTR ds:[ebx]
  41abbc:	les    edi,FWORD PTR [edi+0x5149165]
  41abc2:	in     eax,dx
  41abc3:	inc    esi
  41abc4:	dec    edi
  41abc5:	scas   eax,DWORD PTR es:[edi]
  41abc6:	pop    edx
  41abc7:	imul   BYTE PTR [edx]
  41abc9:	adc    DWORD PTR [edi-0x36],ebx
  41abcc:	repz adc eax,0x50d95430
  41abd2:	out    0xfe,eax
  41abd4:	add    ebx,DWORD PTR [edx+0x43f39a66]
  41abda:	jno    0x41abd4
  41abdc:	add    eax,DWORD PTR [esi-0x12335301]
  41abe2:	push   esi
  41abe3:	sub    al,0xb5
  41abe5:	mov    al,ds:0x661b36b4
  41abea:	cmp    edx,DWORD PTR [edi+0x74]
  41abed:	stc    
  41abee:	inc    ecx
  41abef:	mov    esp,0x4b7ee81e
  41abf4:	int    0xda
  41abf6:	or     DWORD PTR [edx+0x2dfa0a45],esp
  41abfc:	scas   al,BYTE PTR es:[edi]
  41abfd:	push   ds
  41abfe:	stos   BYTE PTR es:[edi],al
  41abff:	test   al,0xb5
  41ac01:	mov    cr1,edi
  41ac04:	div    BYTE PTR [esi]
  41ac06:	(bad)  
  41ac07:	xchg   ebp,eax
  41ac08:	loopne 0x41abd0
  41ac0a:	lahf   
  41ac0b:	adc    DWORD PTR [ebp+esi*4+0x35bb870a],0x9e9353c8
  41ac16:	jb     0x41ac26
  41ac18:	mov    cl,0xfb
  41ac1a:	retf   
  41ac1b:	xchg   edi,eax
  41ac1c:	fsubr  QWORD PTR [ebx-0x6ee5078a]
  41ac22:	inc    esi
  41ac23:	mov    BYTE PTR [esi+0x5fa2a355],dh
  41ac29:	push   ebp
  41ac2a:	pop    edi
  41ac2b:	adc    cl,ah
  41ac2d:	pop    ds
  41ac2e:	in     al,0xcf
  41ac30:	stc    
  41ac31:	xor    DWORD PTR [ecx],edx
  41ac33:	and    al,0x82
  41ac35:	mov    ds:0x993e7be9,eax
  41ac3a:	stos   DWORD PTR es:[edi],eax
  41ac3b:	fwait
  41ac3c:	push   ebp
  41ac3d:	dec    edi
  41ac3e:	dec    eax
  41ac3f:	add    BYTE PTR [eax],al
  41ac41:	add    BYTE PTR [ebp+0x4d],cl
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	sub    ebp,DWORD PTR [ebx+eiz*1+0x128bedd]
  41ac55:	add    ch,dh
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR [ebx],bh
  41ac5b:	aad    0xad
  41ac5d:	lahf   
  41ac5e:	cmc    
  41ac5f:	lock sub bl,BYTE PTR [edi]
  41ac62:	(bad)  [edx+0x45b3f710]
  41ac68:	test   BYTE PTR [ebx+ecx*4-0x2c],dh
  41ac6c:	and    eax,0xe4c29b99
  41ac71:	in     eax,dx
  41ac72:	add    ecx,DWORD PTR [esi-0x1462e74c]
  41ac78:	outs   dx,BYTE PTR ds:[esi]
  41ac79:	mov    dh,0x30
  41ac7b:	fucomi st,st(4)
  41ac7d:	repnz add edx,DWORD PTR [eax+edx*8]
  41ac81:	lods   al,BYTE PTR ds:[esi]
  41ac82:	xchg   ebx,eax
  41ac83:	nop
  41ac84:	rcr    DWORD PTR [esi+0x7b],cl
  41ac87:	add    DWORD PTR [esi+eiz*1+0x35],ecx
  41ac8b:	push   edx
  41ac8c:	add    BYTE PTR [ebp+0x24],bh
  41ac8f:	cmp    BYTE PTR [eax+0x10a07a6f],dh
  41ac95:	or     BYTE PTR [eax-0x41f64d8e],bl
  41ac9b:	cmp    DWORD PTR [edx],esi
  41ac9d:	shr    esp,1
  41ac9f:	imul   ecx,esi,0x4099fbc5
  41aca5:	pushf  
  41aca6:	jae    0x41aca9
  41aca8:	mov    ebx,0x86c930bb
  41acad:	hlt    
  41acae:	jmp    0xf29c:0x934ebd05
  41acb5:	cmp    cl,BYTE PTR fs:[edx+0x6]
  41acb9:	push   cs
  41acba:	cli    
  41acbb:	cmp    eax,0xdd325587
  41acc0:	dec    edx
  41acc1:	push   ebx
  41acc2:	clc    
  41acc3:	repnz inc edx
  41acc5:	mov    ds,ebx
  41acc7:	jp     0x41accd
  41acc9:	add    eax,0x8582a486
  41acce:	sub    edx,esp
  41acd0:	in     eax,0x94
  41acd2:	pop    esp
  41acd3:	aaa    
  41acd4:	mov    esp,DWORD PTR [ecx-0x4b]
  41acd7:	mov    WORD PTR [esi],es
  41acd9:	cmp    al,0xf6
  41acdb:	pop    ebp
  41acdc:	or     ebp,DWORD PTR [edx+0x454e88c]
  41ace2:	bound  eax,QWORD PTR [ecx-0x7d]
  41ace5:	mov    dh,0x90
  41ace7:	hlt    
  41ace8:	(bad)  
  41ace9:	fsub   st,st(2)
  41aceb:	inc    esp
  41acec:	push   cs
  41aced:	mov    ds,WORD PTR [ecx+0x23ddb05e]
  41acf3:	popf   
  41acf4:	jb     0x41ad09
  41acf6:	enter  0x9ac8,0x68
  41acfa:	leave  
  41acfb:	arpl   WORD PTR [edi-0xb38f55b],ax
  41ad01:	stos   BYTE PTR es:[edi],al
  41ad02:	sbb    al,0x6e
  41ad04:	or     DWORD PTR [ecx],0xffffffad
  41ad07:	mov    dh,0x52
  41ad09:	sbb    esp,ebp
  41ad0b:	sub    eax,DWORD PTR [edx+0x4de50e14]
  41ad11:	shr    BYTE PTR [eax],cl
  41ad13:	inc    esi
  41ad14:	add    eax,0x162c1dbe
  41ad19:	sub    esp,DWORD PTR [ebx+0x37b37e46]
  41ad1f:	add    bh,BYTE PTR [ebx]
  41ad21:	cmp    al,0xef
  41ad23:	pop    edi
  41ad24:	inc    ebx
  41ad25:	sub    BYTE PTR [esi+0x70],dh
  41ad28:	sbb    DWORD PTR [edx],ecx
  41ad2a:	mov    ebx,eax
  41ad2c:	dec    ebp
  41ad2d:	(bad)  
  41ad2f:	push   esp
  41ad30:	in     eax,0x86
  41ad32:	push   edi
  41ad33:	sbb    eax,0x48d5c92c
  41ad38:	lods   eax,DWORD PTR gs:[esi]
  41ad3a:	fs test eax,0x26ee4190
  41ad40:	ret    
  41ad41:	push   0xffffffd1
  41ad43:	dec    ebx
  41ad44:	adc    cl,BYTE PTR [esp+edi*1-0x6ab88ba]
  41ad4b:	push   ss
  41ad4c:	jb     0x41adc3
  41ad4e:	pop    es
  41ad4f:	mov    ecx,0xdcaf4619
  41ad54:	scas   al,BYTE PTR es:[edi]
  41ad55:	bound  esi,QWORD PTR [edx]
  41ad57:	pusha  
  41ad58:	add    esp,edi
  41ad5a:	and    eax,DWORD PTR [ecx+0x60]
  41ad5d:	jb     0x41ad34
  41ad5f:	sub    DWORD PTR [edi+esi*2+0x1959ceda],ebp
  41ad66:	dec    ebp
  41ad67:	xchg   ecx,eax
  41ad68:	add    al,0xd1
  41ad6a:	cmp    BYTE PTR [edi+eiz*4-0x59c08659],dh
  41ad71:	dec    edi
  41ad72:	dec    ecx
  41ad73:	shl    DWORD PTR [ebp-0xa3ec5e4],cl
  41ad79:	add    BYTE PTR [ebx+0x26],bh
  41ad7c:	mov    ds:0x58dd4876,eax
  41ad81:	jae    0x41ad58
  41ad83:	jge    0x41ad7a
  41ad85:	out    0x83,eax
  41ad87:	mov    ds:0xdea94f05,eax
  41ad8c:	loopne 0x41ad45
  41ad8e:	xlat   BYTE PTR ds:[ebx]
  41ad8f:	ins    DWORD PTR es:[edi],dx
  41ad90:	loop   0x41ad19
  41ad92:	push   0xffffff98
  41ad94:	xor    eax,0xb21ac499
  41ad99:	mov    edx,0x35dd5694
  41ad9e:	repnz add dl,ch
  41ada1:	and    ebx,DWORD PTR [ecx+edi*1+0x49]
  41ada5:	cld    
  41ada6:	adc    DWORD PTR [eax+0x9],edx
  41ada9:	inc    eax
  41adaa:	xchg   edi,eax
  41adab:	arpl   WORD PTR [esp+edx*8],sp
  41adae:	fcmovu st,st(5)
  41adb0:	retf   0x3ba8
  41adb3:	int3   
  41adb4:	loopne 0x41ae2b
  41adb6:	sbb    eax,0xea57540c
  41adbb:	push   0x7ffb3d0f
  41adc0:	fs cmc 
  41adc2:	mov    DWORD PTR [ebx-0x63],ebx
  41adc5:	repnz inc esp
  41adc7:	or     eax,0xa2b89475
  41adcc:	push   edx
  41adcd:	push   edx
  41adce:	mov    ebx,edi
  41add0:	(bad)  
  41add1:	push   esi
  41add2:	adc    BYTE PTR [ecx+0x62],ah
  41add5:	out    0xf2,al
  41add7:	repz xor eax,0xba86d7b8
  41addd:	imul   ecx,DWORD PTR [ebp+0x2d766672],0xfffffffd
  41ade4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ade5:	adc    BYTE PTR [edi+0x57],0x72
  41ade9:	mov    eax,ds:0xe03ea0b2
  41adee:	bound  ecx,QWORD PTR [eax+esi*8]
  41adf1:	enter  0x65c4,0xec
  41adf5:	out    0x41,eax
  41adf7:	fcom   QWORD PTR [ebx]
  41adf9:	outs   dx,DWORD PTR ds:[esi]
  41adfa:	dec    ecx
  41adfb:	inc    edi
  41adfc:	xbegin 0xcf23c7ea
  41ae02:	fidivr DWORD PTR [esi+0x38]
  41ae05:	cmp    BYTE PTR [ebx],al
  41ae07:	aas    
  41ae08:	xchg   esi,eax
  41ae09:	and    BYTE PTR [ecx+0x6b],0x3f
  41ae0d:	add    eax,0x52acb1b3
  41ae12:	cld    
  41ae13:	sub    dh,bl
  41ae15:	mov    eax,cs:0xc2e78b33
  41ae1b:	push   ebp
  41ae1c:	(bad)  
  41ae1d:	inc    edi
  41ae1e:	dec    BYTE PTR [eax+0x24]
  41ae21:	inc    ebx
  41ae22:	add    ebx,DWORD PTR [ecx-0x1a75e5ea]
  41ae28:	rcr    ebp,1
  41ae2a:	fs xchg ecx,eax
  41ae2c:	aad    0x99
  41ae2e:	mov    dl,0x4d
  41ae30:	jg     0x41ae93
  41ae32:	(bad)  
  41ae34:	aas    
  41ae35:	mov    bl,0x8a
  41ae38:	adc    al,0xc7
  41ae3a:	dec    ebx
  41ae3b:	push   edi
  41ae3c:	ins    BYTE PTR es:[edi],dx
  41ae3d:	adc    esi,esp
  41ae3f:	push   0xffffffda
  41ae41:	lods   al,BYTE PTR ds:[esi]
  41ae42:	dec    ebx
  41ae43:	adc    DWORD PTR [ebx+edx*2-0x76db41b7],esp
  41ae4a:	cld    
  41ae4b:	(bad)  
  41ae4c:	mov    esi,0x9d980ab2
  41ae51:	sub    DWORD PTR [esi-0x6b],0xffffffb6
  41ae55:	cmp    BYTE PTR [ebx-0x56],bl
  41ae58:	mov    esp,0xd2d14ff8
  41ae5d:	and    esi,DWORD PTR [eax+0x18899527]
  41ae63:	jge    0x41ae9b
  41ae65:	cmp    al,0x95
  41ae67:	or     DWORD PTR [ebx-0x49],ebx
  41ae6a:	mov    eax,0x21b1255d
  41ae6f:	add    al,0xce
  41ae71:	push   ebx
  41ae72:	inc    edi
  41ae73:	cmp    ecx,DWORD PTR [eax]
  41ae75:	js     0x41ae51
  41ae77:	jg     0x41ae11
  41ae79:	aaa    
  41ae7a:	or     al,0x8c
  41ae7c:	cdq    
  41ae7d:	fistp  WORD PTR [edi+0x48]
  41ae80:	cmp    al,0xf5
  41ae82:	cmp    ah,BYTE PTR [eax+0x40]
  41ae85:	imul   ebx,DWORD PTR [ebp+edx*8+0x6a],0xffffff8f
  41ae8a:	retf   0x5650
  41ae8d:	(bad)  [esi+0x3f31d002]
  41ae93:	pop    ebx
  41ae94:	xor    eax,0x24349bbe
  41ae99:	pop    esi
  41ae9a:	mov    al,0x52
  41ae9c:	push   eax
  41ae9d:	jbe    0x41ae9f
  41ae9f:	fimul  WORD PTR [ebx+0x69]
  41aea2:	mov    dh,cl
  41aea4:	repnz dec eax
  41aea6:	pusha  
  41aea7:	loopne 0x41aed6
  41aea9:	cmp    al,0xdc
  41aeab:	jb     0x41af26
  41aead:	es jle 0x41af1b
  41aeb0:	inc    ecx
  41aeb1:	push   edi
  41aeb2:	cmp    al,0x21
  41aeb4:	sahf   
  41aeb5:	mov    ah,BYTE PTR [edx+0x2f]
  41aeb8:	(bad)  
  41aeb9:	jmp    0xbb756efd
  41aebe:	mov    esp,edx
  41aec0:	jns    0x41af36
  41aec2:	xor    eax,0x4b583f7e
  41aec7:	stos   DWORD PTR es:[edi],eax
  41aec8:	shr    ebx,1
  41aeca:	jno    0x41af30
  41aecc:	sub    edi,DWORD PTR [esi+0x29b3897f]
  41aed2:	loopne 0x41aef2
  41aed4:	sbb    esi,ebx
  41aed6:	sub    al,0xce
  41aed8:	ret    0x6c3
  41aedb:	lds    ecx,FWORD PTR [edx+0x5cf8da39]
  41aee1:	aam    0x8e
  41aee3:	rcl    bh,cl
  41aee5:	out    0x51,al
  41aee7:	sbb    DWORD PTR [edi+0x60],edi
  41aeea:	ror    ebp,0xc
  41aeed:	sbb    ebp,DWORD PTR [eax+0x47]
  41aef0:	popf   
  41aef1:	adc    ecx,DWORD PTR [edx+0x40]
  41aef4:	aam    0xae
  41aef6:	mov    dh,0x4f
  41aef8:	shl    ecx,cl
  41aefa:	shl    BYTE PTR [esi-0x78161589],cl
  41af00:	into   
  41af01:	jmp    0xabaf:0x51970bd8
  41af08:	lods   eax,DWORD PTR ds:[esi]
  41af09:	das    
  41af0a:	ja     0x41af21
  41af0c:	lods   eax,DWORD PTR ds:[esi]
  41af0d:	out    0xda,al
  41af0f:	fdiv   DWORD PTR [edx]
  41af11:	out    0x62,eax
  41af13:	out    dx,eax
  41af14:	fild   QWORD PTR [edx+0x3e]
  41af17:	test   BYTE PTR [edi],0xa6
  41af1a:	mov    bh,0x8d
  41af1c:	xor    esi,DWORD PTR [ecx-0x5e]
  41af1f:	adc    ebx,DWORD PTR ds:0x88d2f4a
  41af25:	add    al,0xa7
  41af27:	jge    0x41aec4
  41af29:	jecxz  0x41af98
  41af2b:	ins    DWORD PTR es:[edi],dx
  41af2c:	repz and DWORD PTR [edi],ecx
  41af2f:	add    BYTE PTR [ebx],al
  41af31:	out    dx,al
  41af32:	(bad)  
  41af33:	in     eax,0xa2
  41af35:	pop    edx
  41af36:	push   edx
  41af37:	jl     0x41af4d
  41af39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af3a:	in     eax,dx
  41af3b:	nop
  41af3c:	or     edx,DWORD PTR [esi+0x3f45f43b]
  41af42:	jmp    0x41af09
  41af44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af45:	mov    ch,0x57
  41af47:	jle    0x41af63
  41af49:	lods   al,BYTE PTR ds:[esi]
  41af4a:	dec    ebp
  41af4b:	or     edx,esi
  41af4d:	call   0x6d787e3
  41af52:	cmp    BYTE PTR [edi-0x20],cl
  41af55:	jne    0x41af7b
  41af57:	adc    bh,BYTE PTR [ebx+ebp*2+0x7cd82403]
  41af5e:	mov    es,WORD PTR [edi]
  41af60:	int3   
  41af61:	add    DWORD PTR [ebp*2+0x3ca0e73],esi
  41af68:	ss mov ecx,0x9739da02
  41af6e:	sahf   
  41af6f:	outs   dx,BYTE PTR ds:[esi]
  41af70:	xchg   esi,eax
  41af71:	in     al,0xd6
  41af73:	mov    bh,0x80
  41af75:	lea    ebx,[esi-0x5a884981]
  41af7b:	out    0x64,eax
  41af7d:	idiv   DWORD PTR [edi+ebx*4-0x37]
  41af81:	dec    ebp
  41af82:	daa    
  41af83:	mov    al,ch
  41af85:	imul   esi,DWORD PTR [eax+0x2124c87a],0xdf2ce9f2
  41af8f:	sub    BYTE PTR [eax],ah
  41af91:	retf   0x89e6
  41af94:	push   edx
  41af95:	push   0x29
  41af97:	xchg   ebx,eax
  41af98:	xchg   ebx,eax
  41af99:	mov    esi,0x77ace522
  41af9e:	mov    esp,0xd6f17dff
  41afa3:	cld    
  41afa4:	cmp    eax,0x6732d1d6
  41afa9:	jo     0x41af54
  41afab:	xor    cl,BYTE PTR [edx+0x2]
  41afae:	cmp    dl,al
  41afb0:	pop    edx
  41afb1:	cmp    DWORD PTR [edx],ebp
  41afb3:	movzx  edx,cl
  41afb6:	pop    ecx
  41afb7:	(bad)  [esi]
  41afb9:	and    al,0xf2
  41afbb:	push   ecx
  41afbc:	or     DWORD PTR [ecx+eax*4+0x75],esp
  41afc0:	lea    eax,[esi+0x62]
  41afc3:	jb     0x41b03c
  41afc5:	loop   0x41afbe
  41afc7:	idiv   BYTE PTR [edi-0x12]
  41afca:	and    bh,BYTE PTR [edx-0x2cb19762]
  41afd0:	in     eax,0x60
  41afd2:	shl    DWORD PTR [ebx-0x561ec3fe],1
  41afd8:	or     BYTE PTR [ecx+0x3f],cl
  41afdb:	in     al,0x6a
  41afdd:	pushf  
  41afde:	fldcw  WORD PTR [ebp+0x4e]
  41afe1:	jecxz  0x41afd3
  41afe3:	fistp  WORD PTR [bx+di]
  41afe6:	lea    esi,[ebx+0x63]
  41afe9:	loop   0x41b051
  41afeb:	mov    edi,0x47341244
  41aff0:	adc    ecx,DWORD PTR [edi-0x67]
  41aff3:	out    dx,al
  41aff4:	int3   
  41aff5:	int3   
  41aff6:	pop    ds
  41aff7:	in     al,0x2b
  41aff9:	pop    es
  41affa:	ret    
  41affb:	lock test al,0x99
  41affe:	rsqrtps xmm6,XMMWORD PTR ds:0x86c93d51
  41b005:	mov    eax,ds:0xd86f363e
  41b00a:	xor    BYTE PTR [ebx],0x95
  41b00d:	fcom   QWORD PTR [esi-0x7b]
  41b010:	push   ds
  41b011:	aaa    
  41b012:	out    dx,al
  41b013:	fimul  DWORD PTR [ecx-0xd]
  41b016:	sahf   
  41b017:	nop
  41b018:	mov    al,ds:0x986a1020
  41b01d:	scas   eax,DWORD PTR es:[edi]
  41b01e:	add    DWORD PTR [edi-0x60ca8dc1],esi
  41b024:	int3   
  41b025:	and    edx,DWORD PTR [ecx]
  41b027:	scas   al,BYTE PTR es:[edi]
  41b028:	pop    esp
  41b029:	ss dec esp
  41b02b:	test   DWORD PTR [ecx-0x55],edx
  41b02e:	call   0x6072b1e0
  41b033:	leave  
  41b034:	fmul   st(3),st
  41b036:	dec    ebx
  41b037:	mov    eax,ds:0xf82f82a0
  41b03c:	mov    al,BYTE PTR [ecx-0x1c5b2afa]
  41b042:	cmp    bh,al
  41b044:	adc    ebx,eax
  41b046:	cmp    esi,edx
  41b048:	cmp    eax,0xb9a44c74
  41b04d:	mov    bh,0xb6
  41b04f:	shl    BYTE PTR [ebp+esi*2-0x2c],0x42
  41b054:	repz les eax,FWORD PTR [ecx+0x6e40a68f]
  41b05b:	sub    eax,0x76a86845
  41b060:	cwde   
  41b061:	or     al,0x1f
  41b063:	jmp    DWORD PTR [edi]
  41b065:	dec    ebx
  41b066:	dec    ebx
  41b067:	xchg   DWORD PTR [ecx+0x65],ecx
  41b06a:	daa    
  41b06b:	sub    al,0x1a
  41b06d:	fdivr  QWORD PTR [eax-0x51148fbc]
  41b073:	call   0x1f285925
  41b078:	jae    0x41affe
  41b07a:	ss hlt 
  41b07c:	adc    esi,esp
  41b07e:	clc    
  41b07f:	cmp    ecx,ecx
  41b081:	cdq    
  41b082:	mov    dh,0x4c
  41b084:	(bad)  
  41b085:	mov    ecx,0x5071212f
  41b08a:	cmp    BYTE PTR [edx-0x1d184b87],bl
  41b090:	mov    al,ds:0x4c1a0caf
  41b095:	cld    
  41b096:	adc    esp,DWORD PTR [eax]
  41b098:	jp     0x41b07b
  41b09a:	shl    ah,cl
  41b09c:	jecxz  0x41b0fa
  41b09e:	xchg   edi,eax
  41b09f:	xor    DWORD PTR [ebp+eiz*4+0x13],esi
  41b0a3:	pop    eax
  41b0a4:	mov    bl,0x3a
  41b0a6:	jb     0x41b0f5
  41b0a8:	jecxz  0x41b0c7
  41b0aa:	dec    ebx
  41b0ab:	int3   
  41b0ac:	mov    esp,0xe78a18b4
  41b0b1:	pop    ecx
  41b0b2:	and    eax,0x33325aa9
  41b0b7:	shr    esp,0xa1
  41b0ba:	in     eax,0xc5
  41b0bc:	and    BYTE PTR [edx],bl
  41b0be:	add    BYTE PTR [ecx-0x2ac7252],0x1d
  41b0c5:	pop    eax
  41b0c6:	push   ebx
  41b0c7:	mov    ch,0xcb
  41b0c9:	stc    
  41b0ca:	int    0xad
  41b0cc:	push   eax
  41b0cd:	fsub   DWORD PTR [edx+0x4b935269]
  41b0d3:	or     bh,BYTE PTR [edi]
  41b0d5:	cwde   
  41b0d6:	sahf   
  41b0d7:	push   esi
  41b0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0d9:	(bad)  
  41b0db:	sub    BYTE PTR [ebp-0x71b007f9],dh
  41b0e1:	ins    DWORD PTR es:[edi],dx
  41b0e2:	mov    esi,0x92d31fad
  41b0e7:	mov    ah,0x5b
  41b0e9:	mov    edx,0x433ff57
  41b0ef:	pop    esp
  41b0f0:	sub    eax,DWORD PTR [edi+0x784942bf]
  41b0f6:	fcomi  st,st(7)
  41b0f8:	lds    esi,FWORD PTR [edi-0x4e54ad4e]
  41b0fe:	pop    edx
  41b0ff:	loope  0x41b0b4
  41b101:	out    0xf5,al
  41b103:	pop    esp
  41b104:	stos   DWORD PTR es:[edi],eax
  41b105:	arpl   WORD PTR [edi+0x3b],dx
  41b108:	sub    bl,BYTE PTR [ecx+0x2952d2ff]
  41b10e:	mov    edx,0x55b99b3a
  41b113:	push   cs
  41b114:	(bad)  
  41b115:	push   ds
  41b116:	adc    al,0x1d
  41b118:	mov    edx,0xa9a4a55e
  41b11d:	lahf   
  41b11e:	ins    DWORD PTR es:[edi],dx
  41b11f:	mov    edx,DWORD PTR [ecx]
  41b121:	xchg   edx,eax
  41b122:	(bad)  
  41b123:	pop    ebp
  41b124:	inc    ebp
  41b125:	or     BYTE PTR [edx],ch
  41b127:	xchg   ax,dx
  41b12a:	mov    ebx,0x248b7af9
  41b12f:	cmp    dl,dh
  41b131:	into   
  41b132:	jae    0x41b11c
  41b134:	jns    0x41b0e2
  41b136:	pushf  
  41b137:	cmp    eax,0x9338ffea
  41b13c:	jecxz  0x41b0d5
  41b13e:	jg     0x41b1b0
  41b140:	cmp    al,0xe4
  41b142:	add    BYTE PTR [edx+0x5b],dh
  41b145:	adc    eax,0x8f253736
  41b14a:	lods   ax,WORD PTR ds:[esi]
  41b14c:	out    dx,al
  41b14d:	xlat   BYTE PTR ds:[ebx]
  41b14e:	pop    eax
  41b14f:	add    BYTE PTR [eax],al
  41b151:	add    ah,bh
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	fdiv   QWORD PTR ds:0x2db38de5
  41b164:	add    DWORD PTR [eax],eax
  41b166:	cmc    
  41b167:	add    al,0x0
  41b169:	add    dh,bh
  41b16b:	jl     0x41b199
  41b16d:	mov    cl,0x8a
  41b16f:	test   DWORD PTR [edx],ebx
  41b171:	jecxz  0x41b17d
  41b173:	xlat   BYTE PTR ds:[ebx]
  41b174:	cdq    
  41b175:	push   0xc
  41b177:	iret   
  41b178:	mov    ss,WORD PTR [edi-0x384b1205]
  41b17e:	sub    edx,ecx
  41b180:	cmc    
  41b181:	mul    DWORD PTR [ecx+ebp*2-0xb6771c1]
  41b188:	push   ss
  41b189:	pusha  
  41b18a:	lea    edi,[eax*4-0x540554a6]
  41b191:	and    al,0x54
  41b193:	push   cs
  41b194:	clc    
  41b195:	mov    edi,0x91973011
  41b19a:	lods   al,BYTE PTR ds:[esi]
  41b19b:	fs scas eax,DWORD PTR es:[edi]
  41b19d:	fwait
  41b19e:	mov    ecx,0x7830c513
  41b1a3:	fwait
  41b1a4:	ds jnp 0x41b1b9
  41b1a7:	xor    eax,0xd69c67f3
  41b1ac:	aad    0xea
  41b1ae:	sbb    edi,DWORD PTR [ebx-0x40]
  41b1b1:	aaa    
  41b1b2:	test   eax,0xc49bd04b
  41b1b7:	ror    cl,0x95
  41b1ba:	mov    BYTE PTR [eax+0x5f],dl
  41b1bd:	inc    edi
  41b1be:	into   
  41b1bf:	cld    
  41b1c0:	enter  0xd738,0x17
  41b1c4:	mov    al,ds:0x8706feda
  41b1c9:	jo     0x41b1f6
  41b1cb:	in     al,0xae
  41b1cd:	jmp    0x41b174
  41b1cf:	mov    bh,0x3a
  41b1d1:	xor    ecx,DWORD PTR [ebx+edi*2+0x1]
  41b1d5:	rol    DWORD PTR [edi+0x5a0cfb81],cl
  41b1db:	ds pop ebp
  41b1dd:	add    dl,al
  41b1df:	xchg   esp,eax
  41b1e0:	int    0xc1
  41b1e2:	ja     0x41b1ee
  41b1e4:	sub    bh,bh
  41b1e6:	xlat   BYTE PTR ds:[ebx]
  41b1e7:	adc    ecx,DWORD PTR [ebx]
  41b1e9:	pop    edx
  41b1ea:	frstor [ebp+0x4a]
  41b1ed:	jns    0x41b1d7
  41b1ef:	mov    esp,0x9c1bf0cf
  41b1f4:	inc    edx
  41b1f5:	xlat   BYTE PTR ds:[ebx]
  41b1f6:	stc    
  41b1f7:	int3   
  41b1f8:	outs   dx,DWORD PTR ds:[esi]
  41b1f9:	sbb    ecx,DWORD PTR [ecx+0x43]
  41b1fc:	pushf  
  41b1fd:	pop    ebx
  41b1fe:	dec    ah
  41b200:	sub    al,0x84
  41b202:	adc    dl,dh
  41b204:	inc    eax
  41b205:	jns    0x41b196
  41b207:	sbb    eax,0xc49e4f82
  41b20c:	mov    dl,0xee
  41b20e:	or     DWORD PTR [ebx-0x52449d60],esi
  41b214:	or     al,0x95
  41b216:	pushw  0xd6e3
  41b21a:	aas    
  41b21b:	cmp    cl,dh
  41b21d:	mov    bl,0x6b
  41b21f:	xchg   ebx,eax
  41b220:	mov    bl,0x17
  41b222:	push   0xffffffcd
  41b224:	fstp   TBYTE PTR [edx]
  41b226:	je     0x41b22a
  41b228:	(bad)  
  41b229:	mov    bl,0x60
  41b22b:	sbb    DWORD PTR [ebx],edi
  41b22d:	ret    0x3537
  41b230:	popa   
  41b231:	loope  0x41b1da
  41b233:	or     ch,dh
  41b235:	adc    dh,BYTE PTR [edi-0x6750280c]
  41b23b:	xor    DWORD PTR [esi+0x6e76d325],0xa1836b04
  41b245:	cdq    
  41b246:	xor    edx,eax
  41b248:	aaa    
  41b249:	mov    al,0x7
  41b24b:	lahf   
  41b24c:	xchg   ebp,eax
  41b24d:	frstor [edi]
  41b24f:	into   
  41b250:	pop    DWORD PTR [esi-0x57]
  41b253:	and    BYTE PTR [ebx],cl
  41b255:	xchg   DWORD PTR [ebx-0x12],edx
  41b258:	and    eax,0xa7b8e0c9
  41b25d:	test   BYTE PTR [eax-0x26cf5ba0],dh
  41b263:	xor    BYTE PTR ds:0x4ad2bc5e,ah
  41b269:	test   al,0x8b
  41b26b:	inc    edx
  41b26c:	inc    ebp
  41b26d:	jle    0x41b290
  41b26f:	xor    al,BYTE PTR [esi]
  41b271:	lds    edi,FWORD PTR [eax]
  41b273:	test   BYTE PTR [ecx-0x2bc9ad97],bh
  41b279:	mov    esp,0x6583fafd
  41b27e:	std    
  41b27f:	(bad)
  41b282:	and    BYTE PTR [edi-0x50],bh
  41b285:	pushf  
  41b286:	sub    BYTE PTR [eax+eax*1],ch
  41b289:	jmp    0x80b146a9
  41b28e:	sbb    eax,0xc1fa4456
  41b293:	pop    ss
  41b294:	add    eax,0xca4f0a1e
  41b299:	dec    esi
  41b29a:	mov    WORD PTR [ebx-0x48db6baf],?
  41b2a0:	inc    eax
  41b2a1:	cmp    esi,DWORD PTR [eax+0x74]
  41b2a4:	jp     0x41b2ba
  41b2a6:	push   ebx
  41b2a7:	loopne 0x41b28e
  41b2a9:	mov    DWORD PTR [eax+0x2c],ebp
  41b2ac:	enter  0x406c,0x92
  41b2b0:	cdq    
  41b2b1:	ror    al,cl
  41b2b3:	add    DWORD PTR [ebx-0x1da4a03f],ebx
  41b2b9:	pop    eax
  41b2ba:	clc    
  41b2bb:	pusha  
  41b2bc:	jp     0x41b2dd
  41b2be:	adc    eax,0xd03ab3da
  41b2c3:	sub    DWORD PTR [edx-0x4f331c22],0xffffffe2
  41b2ca:	test   DWORD PTR [esi-0x4a],edx
  41b2cd:	repnz inc edx
  41b2cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2d0:	ja     0x41b258
  41b2d2:	sub    al,0xfd
  41b2d4:	inc    ecx
  41b2d5:	xor    DWORD PTR [esi-0x4],edi
  41b2d8:	int3   
  41b2d9:	pop    eax
  41b2da:	push   cs
  41b2db:	lods   al,BYTE PTR fs:[esi]
  41b2dd:	and    DWORD PTR [ecx+0x4dda4b49],esi
  41b2e3:	ja     0x41b360
  41b2e5:	das    
  41b2e6:	jb     0x41b2f5
  41b2e8:	inc    edx
  41b2e9:	sub    edx,DWORD PTR [edx+0x20]
  41b2ec:	es inc edx
  41b2ee:	jne    0x41b343
  41b2f0:	xor    bh,dh
  41b2f2:	dec    ebp
  41b2f3:	sub    bl,BYTE PTR [edi]
  41b2f5:	shl    edx,0xc8
  41b2f8:	pop    ecx
  41b2f9:	fdiv   QWORD PTR fs:[ecx]
  41b2fc:	mov    edi,DWORD PTR [eax-0x443ed47a]
  41b302:	jge    0x41b332
  41b304:	mov    cl,BYTE PTR [esi+eiz*8-0x5b901c0e]
  41b30b:	pop    ss
  41b30c:	or     ch,BYTE PTR [esi-0x586ba85d]
  41b312:	cdq    
  41b313:	sahf   
  41b314:	xchg   esi,eax
  41b315:	jmp    0xf5a5:0xcb68d135
  41b31c:	push   esi
  41b31d:	pop    esi
  41b31e:	xacquire xchg BYTE PTR [edx],bl
  41b321:	retw   0xeb9a
  41b325:	lds    ecx,FWORD PTR [ebx-0x71]
  41b328:	dec    esi
  41b329:	pop    ebx
  41b32a:	and    eax,0xcf37c366
  41b32f:	ror    BYTE PTR [ebx+0x75ae0638],0x13
  41b336:	cmp    al,0x2
  41b338:	and    bl,BYTE PTR [edi+0x22]
  41b33b:	ret    
  41b33c:	pop    es
  41b33d:	popf   
  41b33e:	lock test eax,0x6babf413
  41b344:	mov    bl,0x9d
  41b346:	clc    
  41b347:	xchg   edx,eax
  41b348:	sub    bh,BYTE PTR ds:0x14513c73
  41b34e:	std    
  41b34f:	cs jno 0x41b2f6
  41b352:	inc    ebx
  41b353:	test   BYTE PTR [eax+0x4d907352],0x69
  41b35a:	lods   al,BYTE PTR ds:[esi]
  41b35b:	xor    edx,DWORD PTR [ecx+0x6b]
  41b35e:	hlt    
  41b35f:	dec    edx
  41b360:	jns    0x41b30f
  41b362:	jl     0x41b348
  41b364:	retf   
  41b365:	mov    edx,0xe01598b7
  41b36a:	shr    esp,0x6c
  41b36d:	arpl   di,ax
  41b36f:	cmp    al,BYTE PTR [eax]
  41b371:	gs cmp eax,0xa68f0e92
  41b377:	sbb    ecx,DWORD PTR [esi-0x7d]
  41b37a:	xor    eax,ecx
  41b37c:	adc    eax,0x9e8eb9a8
  41b381:	mov    edx,0xfadcf526
  41b386:	xor    BYTE PTR ds:0x1f0cb5d7,cl
  41b38c:	into   
  41b38d:	cmp    ch,BYTE PTR gs:[eax]
  41b390:	mov    esp,0x37a90bf
  41b395:	jmp    0x41b39c
  41b397:	les    edx,FWORD PTR [ecx+0x30]
  41b39a:	mov    esi,0xe4f4e16d
  41b39f:	mov    eax,ds:0x5770179
  41b3a4:	ret    0xd34b
  41b3a7:	or     BYTE PTR [edx+ecx*2+0x746bbb00],0x4c
  41b3af:	xor    esp,ecx
  41b3b1:	or     al,0xd2
  41b3b3:	add    esp,DWORD PTR [edi]
  41b3b5:	xchg   ebp,eax
  41b3b6:	sub    eax,0xfc660a69
  41b3bb:	pop    ebx
  41b3bc:	mov    BYTE PTR [ebx+0x1c1040fe],dh
  41b3c2:	cwde   
  41b3c3:	mov    dh,0x3b
  41b3c5:	leave  
  41b3c6:	mov    ds:0x7db79273,eax
  41b3cb:	or     al,0x86
  41b3cd:	inc    edi
  41b3ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3cf:	mov    BYTE PTR [eax+eax*2],ah
  41b3d2:	pop    edx
  41b3d3:	mov    esi,0xb704779
  41b3d8:	jmp    0x41b456
  41b3da:	(bad)
  41b3dd:	shl    DWORD PTR [ecx+0x1a],cl
  41b3e0:	or     dl,dh
  41b3e2:	sub    DWORD PTR [esi-0x43cc39c4],0xffffff9a
  41b3e9:	cwde   
  41b3ea:	mov    esi,0xfa15e27
  41b3ef:	leave  
  41b3f0:	jne    0x41b46c
  41b3f2:	jo     0x41b3ed
  41b3f4:	outs   dx,BYTE PTR ds:[esi]
  41b3f5:	cmp    eax,0x9161684
  41b3fa:	pop    eax
  41b3fb:	mov    DWORD PTR [edx],edi
  41b3fd:	dec    esp
  41b3fe:	sub    dl,BYTE PTR [ecx+edi*8]
  41b401:	sub    dh,BYTE PTR [esi]
  41b403:	jp     0x41b3d6
  41b405:	gs mov esp,0xb10aa110
  41b40b:	hlt    
  41b40c:	xchg   esi,ebp
  41b40e:	xchg   ecx,eax
  41b40f:	push   0xcf9ecfdb
  41b414:	fdivr  QWORD PTR [ebx]
  41b416:	test   edi,edi
  41b418:	jno    0x41b3c7
  41b41a:	pop    edx
  41b41b:	adc    BYTE PTR [edx-0x3],al
  41b41e:	xchg   edi,eax
  41b41f:	jle    0x41b429
  41b421:	jg     0x41b472
  41b423:	adc    BYTE PTR es:[edi+0x1f37b426],ch
  41b42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b42b:	ins    BYTE PTR es:[edi],dx
  41b42c:	add    esp,edi
  41b42e:	cs dec edx
  41b430:	fidivr DWORD PTR [ecx-0x33d537da]
  41b436:	add    al,BYTE PTR [edi-0x3c41199]
  41b43c:	lock sub edx,ecx
  41b43f:	(bad)  
  41b440:	aas    
  41b441:	jb     0x41b4a5
  41b443:	dec    esi
  41b444:	xchg   DWORD PTR [ebp+0x12],edi
  41b447:	clc    
  41b448:	idiv   dl
  41b44a:	jo     0x41b492
  41b44c:	cmp    eax,0x53ce1c44
  41b451:	cmp    eax,0xf3c73489
  41b456:	mov    dh,BYTE PTR [ecx-0xcc0277]
  41b45c:	sbb    BYTE PTR [eax-0xb24d0ba],0x1d
  41b463:	jl     0x41b420
  41b465:	or     DWORD PTR [eax-0x5a],eax
  41b468:	add    DWORD PTR [ebp-0x5a7501da],ebp
  41b46e:	push   ss
  41b46f:	iret   
  41b470:	pop    edi
  41b471:	aas    
  41b472:	jl     0x41b407
  41b474:	popa   
  41b475:	icebp  
  41b476:	mov    ch,0xc1
  41b478:	inc    eax
  41b479:	mov    WORD PTR [esi+0x1b4ba241],ss
  41b47f:	xchg   ebp,eax
  41b480:	stos   BYTE PTR es:[edi],al
  41b481:	or     dl,BYTE PTR [esi]
  41b483:	out    dx,al
  41b484:	mov    ah,0x4b
  41b486:	cmp    eax,0x2ebb114c
  41b48b:	dec    ebp
  41b48c:	or     DWORD PTR [ebp+0x2],edx
  41b48f:	or     BYTE PTR [ebp-0x416ea8f0],al
  41b495:	aas    
  41b496:	retf   
  41b497:	in     eax,dx
  41b498:	add    ah,BYTE PTR [ebx]
  41b49a:	push   ebp
  41b49b:	popa   
  41b49c:	push   eax
  41b49d:	out    dx,al
  41b49e:	rcl    BYTE PTR [ebp+eiz*4-0x1f1c06e3],1
  41b4a5:	(bad)  
  41b4a6:	retf   
  41b4a7:	nop
  41b4a8:	int    0xc9
  41b4aa:	scas   al,BYTE PTR es:[edi]
  41b4ab:	in     eax,dx
  41b4ac:	xchg   ebx,eax
  41b4ad:	into   
  41b4ae:	std    
  41b4af:	mov    cl,0xb1
  41b4b1:	jne    0x41b464
  41b4b3:	jbe    0x41b4d2
  41b4b5:	mov    ah,0x25
  41b4b7:	adc    dl,BYTE PTR [ebx]
  41b4b9:	aas    
  41b4ba:	not    DWORD PTR [ecx-0x5775a86f]
  41b4c0:	mov    ah,0x57
  41b4c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c3:	mov    WORD PTR [edi+eax*1-0x36],es
  41b4c7:	mov    cl,0xc1
  41b4c9:	fldl2t 
  41b4cb:	mov    edx,ebx
  41b4cd:	test   al,0x4d
  41b4cf:	loope  0x41b461
  41b4d1:	inc    edx
  41b4d2:	pop    esp
  41b4d3:	jo     0x41b51a
  41b4d5:	call   DWORD PTR [esp+eax*8-0x319df59d]
  41b4dc:	stos   BYTE PTR es:[edi],al
  41b4dd:	sub    BYTE PTR [ecx],ah
  41b4df:	xchg   edx,eax
  41b4e0:	in     al,0xaa
  41b4e2:	ins    DWORD PTR es:[edi],dx
  41b4e3:	mov    dl,0xd
  41b4e5:	add    al,0x19
  41b4e7:	cdq    
  41b4e8:	xchg   esi,eax
  41b4e9:	in     eax,dx
  41b4ea:	and    edx,ecx
  41b4ec:	and    esi,ecx
  41b4ee:	xchg   BYTE PTR [esi+0x23fb2bf3],dl
  41b4f4:	stc    
  41b4f5:	test   eax,0x118ebc6d
  41b4fa:	inc    edx
  41b4fb:	arpl   WORD PTR [esi],sp
  41b4fd:	stc    
  41b4fe:	mov    esi,0x1a7a14b3
  41b503:	add    al,0x3b
  41b505:	fldcw  WORD PTR [ebx+0x2ce98101]
  41b50b:	mov    BYTE PTR [eax],0xc2
  41b50e:	lds    esi,FWORD PTR gs:[edx+0x700478c3]
  41b515:	iret   
  41b516:	stos   DWORD PTR es:[edi],eax
  41b517:	inc    edx
  41b518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b519:	jmp    0xe045a831
  41b51e:	dec    ah
  41b520:	aaa    
  41b521:	out    0x60,al
  41b523:	mov    DWORD PTR [edi-0x27],ebx
  41b526:	jae    0x41b4af
  41b528:	shr    DWORD PTR [ebx+esi*1+0xa],cl
  41b52c:	pusha  
  41b52d:	ds cmp al,0x9c
  41b530:	push   ecx
  41b531:	or     bl,0xc0
  41b534:	pop    edx
  41b535:	mov    eax,0x417e70e5
  41b53a:	(bad)  
  41b53b:	aad    0xac
  41b53d:	imul   esi,DWORD PTR [edx-0x21976c9e],0xa4e3b814
  41b547:	cmp    dh,ah
  41b549:	lea    ebx,[edi-0x3c]
  41b54c:	pop    DWORD PTR [edi-0x7d722292]
  41b552:	and    BYTE PTR [eax],dl
  41b554:	lods   al,BYTE PTR ds:[esi]
  41b555:	add    DWORD PTR [eax-0x11],eax
  41b558:	adc    bl,BYTE PTR [edx+edi*4]
  41b55b:	add    al,0x1e
  41b55d:	in     eax,dx
  41b55e:	xlat   BYTE PTR ds:[ebx]
  41b55f:	fbld   TBYTE PTR [ebx+0x25a5ef7e]
  41b565:	loop   0x41b4f8
  41b567:	ja     0x41b55d
  41b569:	mov    esi,0x265f6171
  41b56e:	pushf  
  41b56f:	loope  0x41b50c
  41b571:	aad    0xf4
  41b573:	scas   al,BYTE PTR es:[edi]
  41b574:	bound  esi,QWORD PTR [ecx-0x46]
  41b577:	mov    ebp,0x764cec89
  41b57c:	into   
  41b57d:	je     0x41b5d1
  41b57f:	retf   0xa9a8
  41b582:	jecxz  0x41b5b0
  41b584:	push   esi
  41b585:	add    DWORD PTR [ecx],edx
  41b587:	cwde   
  41b588:	fs test eax,0xafdd536
  41b58e:	addr16 lahf 
  41b590:	std    
  41b591:	scas   al,BYTE PTR es:[edi]
  41b592:	loopne 0x41b560
  41b594:	ins    BYTE PTR es:[edi],dx
  41b595:	pop    esi
  41b596:	ds xchg edx,eax
  41b598:	dec    eax
  41b599:	rcr    DWORD PTR ds:0x9823bd0e,cl
  41b59f:	inc    eax
  41b5a0:	push   es
  41b5a1:	jb     0x41b607
  41b5a3:	fisub  DWORD PTR [ecx+0x52]
  41b5a6:	scas   eax,DWORD PTR es:[edi]
  41b5a7:	dec    ebx
  41b5a8:	popa   
  41b5a9:	sti    
  41b5aa:	bound  edx,QWORD PTR [edi+0x3d09c5ec]
  41b5b0:	cmp    ecx,DWORD PTR [ecx+0x25]
  41b5b3:	push   edx
  41b5b4:	shl    ch,0x91
  41b5b7:	fistp  DWORD PTR [edi+0x6c9fd619]
  41b5bd:	and    al,BYTE PTR [edi-0x3d]
  41b5c0:	mov    ds:0x725ef4b8,al
  41b5c5:	xchg   edx,eax
  41b5c6:	adc    BYTE PTR ss:[eax],dh
  41b5c9:	stos   DWORD PTR es:[edi],eax
  41b5ca:	outs   dx,DWORD PTR ds:[esi]
  41b5cb:	mov    ds:0x7a995a88,eax
  41b5d0:	add    al,BYTE PTR [ebx-0x2a]
  41b5d3:	retf   0xc635
  41b5d6:	je     0x41b5ab
  41b5d8:	inc    ebp
  41b5d9:	add    BYTE PTR [ebx-0x59],ah
  41b5dc:	sbb    ecx,DWORD PTR [ecx+0x28]
  41b5df:	fwait
  41b5e0:	push   0xffffffda
  41b5e2:	xchg   esp,eax
  41b5e3:	cdq    
  41b5e4:	and    dl,dl
  41b5e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5e7:	sbb    al,0x7c
  41b5ea:	push   ebx
  41b5eb:	fistp  QWORD PTR [esi-0x1c43afd4]
  41b5f1:	mov    ebp,0x5433c526
  41b5f6:	ss data16 xor al,0xe7
  41b5fa:	loopne 0x41b602
  41b5fc:	mov    ah,0xf
  41b5fe:	rcl    dl,1
  41b600:	jne    0x41b650
  41b602:	retf   
  41b603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b604:	pop    esp
  41b605:	shr    BYTE PTR [esi+edx*4-0x30],0x4b
  41b60a:	dec    ebp
  41b60b:	mov    dh,0x9a
  41b60d:	pop    eax
  41b60e:	ja     0x41b5cd
  41b610:	fisttp DWORD PTR [ecx]
  41b612:	cwde   
  41b613:	xchg   DWORD PTR [ebx],edi
  41b615:	out    0x72,al
  41b617:	into   
  41b618:	adc    eax,0x8c627f4d
  41b61d:	rcl    ecx,cl
  41b61f:	dec    ebx
  41b620:	sub    ch,BYTE PTR [ecx+ecx*2-0x7993848e]
  41b627:	xor    esp,DWORD PTR [esi-0x47]
  41b62a:	lods   eax,DWORD PTR ds:[esi]
  41b62b:	xchg   ecx,eax
  41b62c:	and    cl,0xb0
  41b62f:	push   ss
  41b630:	pushf  
  41b631:	out    0xe7,eax
  41b633:	into   
  41b634:	repz mov edi,0xe37465b8
  41b63a:	push   cs
  41b63b:	bound  ebx,QWORD PTR [ecx]
  41b63d:	shl    BYTE PTR [edi-0x3d233731],0x2e
  41b644:	daa    
  41b645:	jecxz  0x41b6ba
  41b647:	fcom   DWORD PTR [ebp-0x3f]
  41b64a:	nop
  41b64b:	cmp    dl,dh
  41b64d:	out    0x39,al
  41b64f:	cmc    
  41b650:	mov    cl,0xe1
  41b652:	lea    ebx,ds:0xf6cf1ba6
  41b658:	sub    BYTE PTR [esp+edx*8+0x26],al
  41b65c:	aaa    
  41b65d:	ja     0x41b6be
  41b65f:	add    BYTE PTR [eax],al
  41b661:	add    dh,al
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	mov    esp,0xa80130e4
  41b673:	xor    al,BYTE PTR [ecx]
  41b675:	add    ch,dh
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [esi+0x2b],cl
  41b67c:	sbb    bl,al
  41b67e:	pop    edi
  41b67f:	sub    eax,0xba91a6c4
  41b684:	cmp    al,0xa1
  41b686:	dec    eax
  41b687:	push   ecx
  41b688:	xchg   esi,eax
  41b689:	adc    ebx,eax
  41b68b:	test   DWORD PTR [esi+0x3d],esi
  41b68e:	mov    bh,0xb5
  41b690:	shl    BYTE PTR [ebx],1
  41b692:	cwde   
  41b693:	repz fwait
  41b695:	xor    ch,BYTE PTR [ebx]
  41b697:	stos   DWORD PTR es:[edi],eax
  41b698:	jne    0x41b6b6
  41b69a:	push   edi
  41b69b:	lods   eax,DWORD PTR ds:[esi]
  41b69c:	sbb    bl,BYTE PTR ds:0x4d72bd93
  41b6a2:	je     0x41b675
  41b6a4:	(bad)  
  41b6a5:	xor    esi,ebp
  41b6a7:	scas   eax,DWORD PTR es:[edi]
  41b6a8:	ret    
  41b6a9:	fsubr  QWORD PTR [eax+ecx*1-0x1f400ea1]
  41b6b0:	mov    BYTE PTR cs:[ebx],ah
  41b6b3:	jnp    0x41b6a0
  41b6b5:	jmp    0xcf16:0xfcebc52b
  41b6bc:	push   0xffffffda
  41b6be:	mov    gs,WORD PTR [edx-0x30177ecd]
  41b6c4:	arpl   WORD PTR [ecx-0xf],si
  41b6c7:	push   esp
  41b6c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6c9:	jg     0x41b681
  41b6cb:	inc    ebx
  41b6cc:	sbb    DWORD PTR [ebx+ecx*8-0x54],ebp
  41b6d0:	fsubr  st,st(5)
  41b6d2:	jne    0x41b66a
  41b6d4:	xchg   ebx,eax
  41b6d5:	sahf   
  41b6d6:	add    al,0x79
  41b6d8:	cdq    
  41b6d9:	ret    0xacbf
  41b6dc:	and    ch,BYTE PTR [ebp+0x51]
  41b6df:	ror    ebp,cl
  41b6e1:	int    0xe2
  41b6e3:	push   ss
  41b6e4:	repnz mov dl,0xd4
  41b6e7:	inc    ebp
  41b6e8:	call   0xbfaa:0xc8dfb98b
  41b6ef:	(bad)  
  41b6f0:	shl    BYTE PTR [edi-0x26],cl
  41b6f3:	add    ebx,DWORD PTR [eax-0x32c124ff]
  41b6f9:	adc    dh,BYTE PTR [ebx+0xda5f71a]
  41b6ff:	scas   eax,DWORD PTR es:[edi]
  41b700:	sbb    al,0x51
  41b702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b703:	pushf  
  41b704:	sbb    bh,BYTE PTR [edx-0x14]
  41b707:	xor    BYTE PTR [ebp+ebp*1-0x2c82d771],0x91
  41b70f:	mov    esp,gs
  41b711:	rcl    BYTE PTR [esi+0x76],0x17
  41b715:	inc    edx
  41b716:	adc    esi,DWORD PTR [eax]
  41b718:	jp     0x41b69a
  41b71a:	cmp    eax,DWORD PTR [esi-0x7f2b5e]
  41b720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b721:	push   eax
  41b722:	outs   dx,BYTE PTR ds:[esi]
  41b723:	push   0x9
  41b725:	(bad)  
  41b726:	shl    DWORD PTR [edx],cl
  41b728:	stc    
  41b729:	bound  edi,QWORD PTR [edi+0x3df12678]
  41b72f:	dec    eax
  41b730:	mov    dl,0x3e
  41b732:	jecxz  0x41b76a
  41b734:	mov    al,ds:0xd91d85d5
  41b739:	mov    al,0x63
  41b73b:	rcl    BYTE PTR [edi],0xec
  41b73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b73f:	mov    eax,ds:0xdef36b9
  41b744:	fsub   DWORD PTR [esi]
  41b746:	mov    edx,0x580d3c8e
  41b74b:	push   esi
  41b74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b74d:	in     eax,0x8c
  41b74f:	push   ebp
  41b750:	sub    bh,BYTE PTR [eax-0x1a]
  41b753:	dec    edx
  41b754:	sub    bh,BYTE PTR [ebp-0x796041d6]
  41b75a:	xlat   BYTE PTR ds:[ebx]
  41b75b:	imul   esp,DWORD PTR [esi],0x5b
  41b75e:	mov    al,ds:0x4449099
  41b763:	shl    DWORD PTR [ebx],1
  41b765:	push   edx
  41b766:	pop    esp
  41b767:	adc    edx,ecx
  41b769:	sbb    edi,ecx
  41b76b:	adc    BYTE PTR [esi-0x1cbcaa35],al
  41b771:	jmp    0x41b78b
  41b773:	adc    BYTE PTR [edi+ebp*8-0x3a],dl
  41b777:	jnp    0x41b720
  41b779:	daa    
  41b77a:	inc    edi
  41b77b:	mov    ch,BYTE PTR [ebx+0x1]
  41b77e:	nop/reserved BYTE PTR [ebp+0x4385e60e]
  41b785:	jno    0x41b7f1
  41b787:	or     DWORD PTR [edi-0x40a1851],ebx
  41b78d:	xchg   ecx,eax
  41b78e:	dec    esi
  41b78f:	(bad)  
  41b790:	xchg   edx,eax
  41b791:	inc    esp
  41b792:	xchg   ecx,eax
  41b793:	(bad)  
  41b794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b795:	les    eax,FWORD PTR [esi-0x42]
  41b798:	pusha  
  41b799:	test   eax,0x4e529181
  41b79e:	cmp    ah,BYTE PTR [ebx-0xcb190f]
  41b7a4:	jmp    0xe16b:0x1469093b
  41b7ab:	jae    0x41b79f
  41b7ad:	ins    DWORD PTR es:[edi],dx
  41b7ae:	lods   eax,DWORD PTR ds:[esi]
  41b7af:	das    
  41b7b0:	sbb    BYTE PTR [ecx+ebx*1+0x47],ah
  41b7b4:	push   esp
  41b7b5:	inc    eax
  41b7b6:	data16 xor al,0xa7
  41b7b9:	ss (bad) 
  41b7bb:	loop   0x41b79c
  41b7bd:	popa   
  41b7be:	arpl   si,si
  41b7c0:	sbb    eax,0xad15379b
  41b7c5:	jle    0x41b7df
  41b7c7:	fs inc eax
  41b7c9:	lods   al,BYTE PTR ds:[esi]
  41b7ca:	or     BYTE PTR [ebp+0x2bef65a],0xef
  41b7d1:	movups XMMWORD PTR [ecx],xmm4
  41b7d4:	sub    al,0x98
  41b7d6:	sub    DWORD PTR [edx-0x50db26e3],ecx
  41b7dc:	inc    esi
  41b7dd:	(bad)  
  41b7de:	jmp    0xbd6d8bb5
  41b7e3:	cld    
  41b7e4:	ret    0x68b4
  41b7e7:	jns    0x41b7d4
  41b7e9:	jg     0x41b7e4
  41b7eb:	mov    esp,0xc171b71b
  41b7f0:	sti    
  41b7f1:	mov    eax,0xdfb9fcdd
  41b7f6:	mov    ss,WORD PTR [edi]
  41b7f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7f9:	fadd   DWORD PTR [ebx+0x74]
  41b7fc:	jb     0x41b87b
  41b7fe:	test   al,0xee
  41b800:	sub    al,cl
  41b802:	(bad)
  41b805:	or     dh,BYTE PTR [ebx-0x6]
  41b808:	daa    
  41b809:	push   ss
  41b80a:	mov    bl,0xe2
  41b80c:	lods   eax,DWORD PTR ds:[esi]
  41b80d:	push   ds
  41b80e:	mov    bh,0x2d
  41b810:	jle    0x41b826
  41b812:	das    
  41b813:	loope  0x41b7ed
  41b815:	jnp    0x41b7c5
  41b817:	ins    DWORD PTR es:[edi],dx
  41b818:	shl    DWORD PTR [esi+0x50c8a918],cl
  41b81e:	adc    al,0x1
  41b820:	sahf   
  41b821:	ror    BYTE PTR [ebx+ebp*2],cl
  41b824:	lods   al,BYTE PTR ds:[esi]
  41b825:	out    dx,eax
  41b826:	data16 stc 
  41b828:	xchg   esi,eax
  41b829:	stos   BYTE PTR es:[edi],al
  41b82a:	imul   ecx,DWORD PTR [ebp-0x60],0xce1c98cd
  41b831:	nop
  41b832:	(bad)  
  41b834:	int    0xb4
  41b836:	jecxz  0x41b886
  41b838:	jo     0x41b85d
  41b83a:	mov    dl,0xa7
  41b83c:	ds jmp 0x41b7fb
  41b83f:	add    BYTE PTR [esi],cl
  41b841:	arpl   WORD PTR [eax+edi*2+0x7a090e59],di
  41b848:	rcr    edx,1
  41b84a:	gs inc ebx
  41b84c:	mov    DWORD PTR [ebx],edx
  41b84e:	jle    0x41b856
  41b850:	or     BYTE PTR [edi+0x17],dh
  41b853:	add    ebp,DWORD PTR [edi]
  41b855:	gs inc ecx
  41b857:	ins    BYTE PTR es:[edi],dx
  41b858:	fist   DWORD PTR [edx]
  41b85a:	add    ax,0x3783
  41b85e:	std    
  41b85f:	sbb    al,0xf7
  41b861:	inc    ebx
  41b862:	mov    cl,0xeb
  41b864:	fisubr DWORD PTR [ecx-0x2b06e670]
  41b86a:	adc    eax,0xdbf5baa5
  41b86f:	(bad)  
  41b870:	mov    esp,es
  41b872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b873:	pop    ebx
  41b874:	shr    BYTE PTR [edi],cl
  41b876:	mov    al,BYTE PTR [ebx]
  41b878:	add    DWORD PTR [esi-0x36],esp
  41b87b:	mov    eax,ds:0x267a773b
  41b880:	xchg   DWORD PTR [edi-0x53],ebx
  41b883:	pop    ds
  41b884:	enter  0xa45a,0x1e
  41b888:	cmp    edi,ebx
  41b88a:	dec    esp
  41b88b:	inc    eax
  41b88c:	inc    edi
  41b88d:	sub    eax,0xd06d14b9
  41b892:	scas   al,BYTE PTR es:[edi]
  41b893:	jns    0x41b895
  41b895:	mov    bh,0x42
  41b897:	jae    0x41b81d
  41b899:	inc    eax
  41b89a:	scas   al,BYTE PTR es:[edi]
  41b89b:	retf   0x613f
  41b89e:	es add esi,esp
  41b8a1:	xor    dh,BYTE PTR [ebp-0x57d0e64b]
  41b8a7:	ret    
  41b8a8:	jge    0x41b880
  41b8aa:	rol    DWORD PTR [edi+0x127e588e],0xe4
  41b8b1:	xor    eax,DWORD PTR [edx-0x6e3d544a]
  41b8b7:	and    DWORD PTR [ecx+ebp*1],edi
  41b8ba:	mov    edi,0x91974f73
  41b8bf:	pop    esp
  41b8c0:	mov    ebp,0x55ebe849
  41b8c6:	cli    
  41b8c7:	test   DWORD PTR [edx-0x4c],edx
  41b8ca:	int    0x83
  41b8cc:	dec    ebp
  41b8cd:	test   DWORD PTR [esi],0x246f34c0
  41b8d3:	cld    
  41b8d4:	push   0xeba461ed
  41b8d9:	sbb    ch,0xd2
  41b8dc:	stc    
  41b8dd:	lods   al,BYTE PTR ds:[esi]
  41b8de:	cmp    eax,0x8b3f7acf
  41b8e3:	xchg   edx,eax
  41b8e4:	dec    esp
  41b8e5:	jmp    0x41b8bc
  41b8e7:	push   ebp
  41b8e8:	cdq    
  41b8e9:	scas   al,BYTE PTR es:[edi]
  41b8ea:	push   cs
  41b8eb:	out    0x40,eax
  41b8ed:	or     BYTE PTR [eax+0x7fa8a3ad],0xf8
  41b8f4:	jle    0x41b939
  41b8f6:	sbb    ah,BYTE PTR [edi-0x3]
  41b8f9:	div    BYTE PTR [esi-0x3]
  41b8fc:	aaa    
  41b8fd:	(bad)  
  41b8fe:	xchg   esi,eax
  41b8ff:	jns    0x41b92d
  41b901:	jmp    0xab0b4347
  41b906:	cld    
  41b907:	and    eax,0xe84f0eaf
  41b90c:	add    dh,BYTE PTR [edx+0x5aaa4d0c]
  41b912:	xchg   edi,eax
  41b913:	daa    
  41b914:	cmp    BYTE PTR [eax-0x42e5e66d],bh
  41b91a:	sbb    dh,BYTE PTR [edx]
  41b91c:	add    esi,esi
  41b91e:	test   DWORD PTR [ecx+ebx*2],esi
  41b921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b922:	adc    edi,DWORD PTR [edx+0x58a390bc]
  41b928:	popa   
  41b929:	leave  
  41b92a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b92b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b92c:	popa   
  41b92d:	push   eax
  41b92e:	jbe    0x41b98e
  41b930:	jle    0x41b989
  41b932:	stos   BYTE PTR es:[edi],al
  41b933:	or     al,0x8e
  41b935:	jle    0x41b94b
  41b937:	pusha  
  41b938:	pusha  
  41b939:	mov    cl,0xec
  41b93b:	dec    edx
  41b93c:	jmp    0x3cd934ed
  41b941:	lock pop es
  41b943:	pop    ss
  41b944:	push   0xffffffe8
  41b946:	mov    ah,0xac
  41b948:	(bad)  
  41b949:	cmp    DWORD PTR [edx-0x3942d818],edx
  41b94f:	or     eax,0xcd396d99
  41b954:	xor    dh,BYTE PTR [edx+0x14990780]
  41b95a:	sub    ah,bh
  41b95c:	jnp    0x41b8e0
  41b95e:	cs ret 0x1be3
  41b962:	fisttp DWORD PTR [ebx+0x49]
  41b965:	inc    eax
  41b966:	mov    esi,0xa72c8c10
  41b96b:	outs   dx,DWORD PTR ds:[esi]
  41b96c:	lods   eax,DWORD PTR ds:[esi]
  41b96d:	cmp    edi,ecx
  41b96f:	inc    ebp
  41b970:	pop    ss
  41b971:	push   0x35895e01
  41b976:	dec    edi
  41b977:	mov    ebp,0xdad545f4
  41b97c:	pop    edi
  41b97d:	mov    eax,ds:0xf5a5010d
  41b982:	jle    0x41b91e
  41b984:	xor    bl,al
  41b986:	inc    ebx
  41b987:	out    0xfb,eax
  41b989:	add    BYTE PTR [edx-0x1661f4f6],0x71
  41b990:	pop    edi
  41b991:	jmp    0x77be:0x117bd697
  41b998:	sar    DWORD PTR [esi+0x4d719ea5],1
  41b99e:	pop    ss
  41b99f:	inc    edi
  41b9a0:	dec    edi
  41b9a1:	imul   ecx,DWORD PTR [esi+esi*8-0x4d3b07e0],0x2da7711f
  41b9ac:	jno    0x41ba08
  41b9ae:	xchg   ebp,eax
  41b9af:	mov    WORD PTR [esi],fs
  41b9b1:	mov    ds:0x7074a99a,eax
  41b9b6:	add    eax,0x1c3f988a
  41b9bb:	xchg   ebp,eax
  41b9bc:	push   esi
  41b9bd:	inc    ebp
  41b9be:	pop    esp
  41b9bf:	push   0x11
  41b9c1:	(bad)  
  41b9c2:	ds sbb ah,dl
  41b9c5:	cld    
  41b9c6:	out    0x91,eax
  41b9c8:	add    eax,0xba595aa5
  41b9cd:	hlt    
  41b9ce:	jp     0x41ba40
  41b9d0:	test   BYTE PTR [eax+0x219e5ead],dh
  41b9d6:	dec    edi
  41b9d7:	aaa    
  41b9d8:	lea    ebx,[ebp-0x307ec25f]
  41b9de:	sbb    ch,ah
  41b9e0:	retf   
  41b9e1:	mov    esi,0x4ad538f9
  41b9e6:	xor    BYTE PTR [edx],bl
  41b9e8:	mov    ds:0x4b9f9cab,eax
  41b9ed:	outs   dx,BYTE PTR ds:[esi]
  41b9ee:	add    BYTE PTR [edx+ecx*8+0x14],al
  41b9f2:	cmp    esi,ebp
  41b9f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9f5:	(bad)  
  41b9f6:	or     BYTE PTR [eax+0x16282d5c],cl
  41b9fc:	sub    DWORD PTR [edi],0xd4d830e9
  41ba02:	or     ecx,esi
  41ba04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba05:	js     0x41ba0a
  41ba07:	sbb    bl,dh
  41ba09:	jecxz  0x41b9cf
  41ba0b:	fcmove st,st(3)
  41ba0d:	mov    esi,0x2173aa11
  41ba12:	pop    ebx
  41ba13:	mov    bl,0x47
  41ba15:	push   0xffffffa7
  41ba17:	xor    BYTE PTR ds:0xddbf3f1e,0xfd
  41ba1e:	pop    ss
  41ba1f:	push   esi
  41ba20:	jl     0x41b9bc
  41ba22:	cld    
  41ba23:	div    DWORD PTR [esp+eax*4+0x62262c07]
  41ba2a:	xlat   BYTE PTR ds:[ebx]
  41ba2b:	out    dx,al
  41ba2c:	inc    ebp
  41ba2d:	xor    al,0x1d
  41ba2f:	xchg   edx,eax
  41ba30:	pusha  
  41ba31:	je     0x41ba22
  41ba33:	(bad)  
  41ba34:	or     ebx,DWORD PTR [esi-0x4e]
  41ba37:	mov    esi,0xfe73598a
  41ba3c:	push   eax
  41ba3d:	xor    BYTE PTR [edx],dl
  41ba3f:	sbb    BYTE PTR [eax-0x29],bl
  41ba42:	sbb    DWORD PTR [esi-0x1f6084ac],edx
  41ba48:	rol    DWORD PTR [ebx-0x3aa780c2],0x57
  41ba4f:	aam    0xc2
  41ba51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba52:	mov    edi,0xd86522a9
  41ba57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba58:	cs mov ebp,0x8970f7fc
  41ba5e:	jbe    0x41ba7b
  41ba60:	pop    es
  41ba61:	retf   0x46ff
  41ba64:	out    dx,al
  41ba65:	inc    ebp
  41ba66:	aad    0x2c
  41ba68:	mov    dl,0xf8
  41ba6a:	jae    0x41ba5b
  41ba6c:	ds scas eax,DWORD PTR es:[edi]
  41ba6e:	scas   al,BYTE PTR es:[edi]
  41ba6f:	(bad)  
  41ba70:	xor    eax,ecx
  41ba72:	mov    ss:0x86f6c80c,al
  41ba78:	mov    WORD PTR [edx],?
  41ba7a:	cmp    al,0x21
  41ba7c:	sub    ah,BYTE PTR [eax+edx*2-0x6644a89]
  41ba83:	(bad)  
  41ba84:	imul   edi,DWORD PTR [edi],0xf2904c80
  41ba8a:	mov    bh,0x98
  41ba8c:	gs pop eax
  41ba8e:	xchg   ecx,eax
  41ba8f:	push   edi
  41ba90:	test   BYTE PTR [ecx-0x11893d98],ch
  41ba96:	jmp    0x3b920ce8
  41ba9b:	mov    al,0x25
  41ba9d:	push   ds
  41ba9e:	out    dx,eax
  41ba9f:	ss dec edx
  41baa1:	inc    esp
  41baa2:	push   es
  41baa3:	mov    edx,0x954936d2
  41baa8:	retf   
  41baa9:	js     0x41baca
  41baab:	ficom  WORD PTR [eax+esi*4-0x25cf4adc]
  41bab2:	mov    DWORD PTR [esi-0x1d],ecx
  41bab5:	or     BYTE PTR [edi-0x79ede71d],ch
  41babb:	push   ss
  41babc:	and    dh,BYTE PTR [esi+eiz*1]
  41babf:	and    eax,DWORD PTR ds:0x6512a0ad
  41bac5:	push   ss
  41bac6:	adc    al,0x15
  41bac8:	sti    
  41bac9:	dec    ebp
  41baca:	adc    eax,0x9efd223f
  41bacf:	jno    0x41bad9
  41bad1:	rol    BYTE PTR [edi+0x41a744ea],0xa0
  41bad8:	mov    edx,0x60ed8927
  41badd:	dec    edi
  41bade:	sbb    DWORD PTR ds:0x8de69881,esp
  41bae4:	cld    
  41bae5:	mov    es,WORD PTR [ecx+0x917391]
  41baeb:	adc    bl,BYTE PTR [ecx-0x1b]
  41baee:	out    dx,al
  41baef:	fcom   DWORD PTR [edx]
  41baf1:	call   0xcdcea228
  41baf6:	xor    al,0xbf
  41baf8:	out    0x15,al
  41bafa:	aas    
  41bafb:	aas    
  41bafc:	pop    edi
  41bafd:	dec    edx
  41bafe:	enter  0x58cb,0xb7
  41bb02:	sub    al,0x30
  41bb04:	and    BYTE PTR [ecx+0x3547dfb],dh
  41bb0a:	lea    esp,[esi]
  41bb0c:	popf   
  41bb0d:	loop   0x41bb0c
  41bb0f:	xlat   BYTE PTR ds:[ebx]
  41bb10:	jp     0x41bb8b
  41bb12:	mov    DWORD PTR [ebx],edi
  41bb14:	sbb    BYTE PTR [ecx+0x387224e6],dl
  41bb1a:	cld    
  41bb1b:	cmp    al,0xdf
  41bb1d:	and    cl,BYTE PTR [eax+ecx*8-0x25]
  41bb21:	fs push eax
  41bb23:	sbb    edi,eax
  41bb25:	fs jecxz 0x41bb18
  41bb28:	cld    
  41bb29:	mov    edi,0x80ef7c6d
  41bb2e:	clc    
  41bb2f:	fld    DWORD PTR [ebx]
  41bb31:	add    edi,ebp
  41bb33:	retf   
  41bb34:	call   0x6b57:0x63b93615
  41bb3b:	pop    esi
  41bb3c:	pop    ebp
  41bb3d:	call   0x948df816
  41bb42:	neg    BYTE PTR [eax]
  41bb44:	push   es
  41bb45:	or     BYTE PTR [ebp-0x24],bl
  41bb48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb49:	adc    ecx,DWORD PTR [eax+ecx*1-0x5263fc0]
  41bb50:	add    eax,0xb723c9fe
  41bb55:	arpl   dx,dx
  41bb57:	out    dx,al
  41bb58:	out    dx,eax
  41bb59:	sbb    eax,0x86b6a32d
  41bb5e:	ret    
  41bb5f:	adc    al,0x83
  41bb61:	(bad)  
  41bb62:	jmp    0x41bb01
  41bb64:	out    0xba,eax
  41bb66:	mov    al,ds:0xf03f8bcb
  41bb6b:	arpl   WORD PTR cs:[edi],si
  41bb6e:	jo     0x41bb70
  41bb70:	add    BYTE PTR [eax],al
  41bb72:	out    0x40,al
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0x23442583
  41bb7f:	xchg   edi,eax
  41bb80:	cwde   
  41bb81:	mov    ds,WORD PTR [ebp-0xafffec9]
  41bb87:	add    al,0x0
  41bb89:	add    BYTE PTR [ecx-0x1a],ch
  41bb8c:	xchg   edi,eax
  41bb8d:	mov    ah,0xcd
  41bb8f:	add    al,0x53
  41bb91:	cmc    
  41bb92:	nop
  41bb93:	xchg   esi,eax
  41bb94:	push   ecx
  41bb95:	adc    DWORD PTR [ecx-0x2a2d1605],edi
  41bb9b:	pop    DWORD PTR ds:0xb93c9dc5
  41bba1:	pushf  
  41bba2:	ds jg  0x41bb31
  41bba5:	(bad)  
  41bba6:	fisttp WORD PTR [edx+0x341d9162]
  41bbac:	or     al,0x44
  41bbae:	mov    DWORD PTR [edx+0x5b9ef4f5],esi
  41bbb4:	xchg   ebp,eax
  41bbb5:	mov    ebx,DWORD PTR [ebp+esi*4+0x372ac712]
  41bbbc:	or     DWORD PTR [ebp+0x51],ecx
  41bbbf:	fs or  cl,cl
  41bbc2:	mov    bl,0x6d
  41bbc4:	icebp  
  41bbc5:	push   edx
  41bbc6:	sub    DWORD PTR [ecx+0x31371d34],esp
  41bbcc:	scas   al,BYTE PTR es:[edi]
  41bbcd:	mov    ecx,DWORD PTR ds:0x54eddc7f
  41bbd3:	mov    eax,0xc7a5c784
  41bbd8:	mov    edi,0xfecaa1d5
  41bbdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbde:	mov    dh,0x39
  41bbe0:	dec    eax
  41bbe1:	mov    esp,0x672b3770
  41bbe6:	aaa    
  41bbe7:	mov    cl,0xe4
  41bbe9:	out    0x3a,eax
  41bbeb:	mov    ds:0xaa6a0797,eax
  41bbf0:	pop    edi
  41bbf1:	test   BYTE PTR [ebp+ebp*4+0x41462182],0xbe
  41bbf9:	and    BYTE PTR [ebp+0x2262f974],cl
  41bbff:	or     ah,BYTE PTR [ecx-0x23]
  41bc02:	in     eax,0x4
  41bc04:	aam    0xed
  41bc06:	pop    ss
  41bc07:	psubusw mm4,mm6
  41bc0a:	cs cmc 
  41bc0c:	cmc    
  41bc0d:	nop
  41bc0e:	or     DWORD PTR [edi-0x74778186],ebp
  41bc14:	dec    ecx
  41bc15:	stos   BYTE PTR es:[edi],al
  41bc16:	into   
  41bc17:	fld    DWORD PTR [edx+0xcfa448b]
  41bc1d:	leave  
  41bc1e:	jbe    0x41bc42
  41bc20:	xchg   ebx,eax
  41bc21:	and    al,BYTE PTR [edi+0x66ab3207]
  41bc27:	popf   
  41bc28:	mov    dh,0x7c
  41bc2a:	xchg   edi,eax
  41bc2b:	dec    ebp
  41bc2c:	scas   eax,DWORD PTR es:[edi]
  41bc2d:	jg     0x41bc6f
  41bc2f:	scas   eax,DWORD PTR es:[edi]
  41bc30:	push   esi
  41bc31:	in     al,dx
  41bc32:	mov    cl,0x3e
  41bc34:	out    0x69,al
  41bc36:	sub    bl,BYTE PTR [edi]
  41bc38:	rol    dh,1
  41bc3a:	cli    
  41bc3b:	ffree  st(0)
  41bc3d:	clc    
  41bc3e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41bc40:	dec    eax
  41bc41:	sbb    eax,0x6835f575
  41bc46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc47:	test   BYTE PTR [ecx+0x21],al
  41bc4a:	gs xchg ecx,eax
  41bc4c:	push   ebx
  41bc4d:	ins    BYTE PTR es:[edi],dx
  41bc4e:	call   0x92af:0x2dd9c6f6
  41bc55:	aas    
  41bc56:	sub    eax,DWORD PTR [eax+ecx*1+0x54]
  41bc5a:	push   edi
  41bc5b:	in     al,0x7
  41bc5d:	fsubr  QWORD PTR [esi+eiz*1-0x61]
  41bc61:	push   ss
  41bc62:	ins    DWORD PTR es:[edi],dx
  41bc63:	mov    ebx,0x6f57fa2e
  41bc68:	rcr    DWORD PTR [eax-0x62],0xbb
  41bc6c:	mov    edx,0x98238816
  41bc71:	push   cs
  41bc72:	sti    
  41bc73:	jnp    0x41bc74
  41bc75:	pop    edi
  41bc76:	adc    edx,0xe254f28e
  41bc7c:	mov    dh,al
  41bc7e:	test   BYTE PTR [ecx-0x5cdc2a82],ah
  41bc84:	sbb    al,0xaa
  41bc86:	mov    eax,ds:0xc3e0fee2
  41bc8b:	arpl   WORD PTR [esi+0x2069ccbb],bp
  41bc91:	jae    0x41bc9f
  41bc93:	sbb    DWORD PTR [ebp-0xe7f5a88],edi
  41bc99:	push   0xc7648d9
  41bc9e:	mov    ecx,0x78b33b4e
  41bca3:	mov    eax,ebx
  41bca5:	aaa    
  41bca6:	loop   0x41bcb7
  41bca8:	fcmovu st,st(4)
  41bcaa:	or     al,ch
  41bcac:	dec    esp
  41bcad:	fsubr  QWORD PTR [ecx+0x9f0a07]
  41bcb4:	sbb    dh,dl
  41bcb6:	jmp    0x8b7e:0x214eab33
  41bcbd:	bound  ecx,QWORD PTR [ecx-0x1f025609]
  41bcc3:	xor    al,0xbd
  41bcc5:	in     eax,dx
  41bcc6:	add    dh,ah
  41bcc8:	cmp    BYTE PTR [edi],ch
  41bcca:	fadd   QWORD PTR [ecx]
  41bccc:	xor    eax,0xd6a8b1f3
  41bcd1:	jmp    0x74a2:0x2ddb1667
  41bcd8:	mov    al,ds:0xe957d7d6
  41bcdd:	bound  eax,QWORD PTR cs:[eax+eax*8]
  41bce1:	les    edi,FWORD PTR [ebx+0x26339741]
  41bce7:	xchg   edi,eax
  41bce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bce9:	jp     0x41bcc4
  41bceb:	push   cs
  41bcec:	cmp    edx,edi
  41bcee:	test   eax,0x44375cce
  41bcf3:	jp     0x41bcd8
  41bcf5:	(bad)  
  41bcf6:	jl     0x41bc7f
  41bcf8:	inc    edx
  41bcf9:	sbb    DWORD PTR [ebx+0x50],eax
  41bcfc:	push   cs
  41bcfd:	mov    bh,0x5e
  41bcff:	out    dx,al
  41bd00:	mov    ecx,0x90ec5e95
  41bd05:	cld    
  41bd06:	icebp  
  41bd07:	mov    edx,0xcffa2acc
  41bd0c:	sbb    al,0x1e
  41bd0e:	dec    esi
  41bd0f:	dec    DWORD PTR [edx+0x6d]
  41bd12:	outs   dx,BYTE PTR ds:[esi]
  41bd13:	(bad)  
  41bd14:	pop    edx
  41bd15:	test   al,0x87
  41bd17:	in     al,0xb7
  41bd19:	mov    edi,0x7bf0b509
  41bd1e:	stos   DWORD PTR es:[edi],eax
  41bd1f:	aad    0x97
  41bd21:	sub    edi,DWORD PTR [ebx+0x31]
  41bd24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd25:	mov    cl,0xa9
  41bd27:	xchg   esp,eax
  41bd28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd29:	cmc    
  41bd2a:	stc    
  41bd2b:	std    
  41bd2c:	sbb    edi,DWORD PTR [edi+esi*2-0x3858996a]
  41bd33:	mov    ds:0x5b92324f,al
  41bd38:	mov    WORD PTR [esi],ss
  41bd3a:	rol    esi,cl
  41bd3c:	test   BYTE PTR [ecx],bh
  41bd3e:	jge    0x41bd24
  41bd40:	push   0x17
  41bd42:	sub    DWORD PTR [edx],esp
  41bd44:	xor    bh,BYTE PTR [ebp-0x33665626]
  41bd4a:	call   DWORD PTR [esi+0x3f3e8ab0]
  41bd50:	or     al,0xde
  41bd52:	mov    al,0xa3
  41bd54:	mov    bh,0x44
  41bd56:	jb     0x41bd2f
  41bd58:	jbe    0x41bdc8
  41bd5a:	push   esp
  41bd5b:	add    al,0x1a
  41bd5d:	mov    dh,cl
  41bd5f:	ja     0x41bd01
  41bd61:	fdivr  QWORD PTR [ebx-0x68d781ed]
  41bd67:	push   es
  41bd68:	and    BYTE PTR [edi],bh
  41bd6a:	mov    WORD PTR [ebx+0x23],cs
  41bd6d:	push   ecx
  41bd6e:	ror    BYTE PTR [ecx+eax*8],cl
  41bd71:	stc    
  41bd72:	mov    edx,0xa5161310
  41bd77:	fnsave [eax+0x9]
  41bd7a:	fcom   DWORD PTR [edi]
  41bd7c:	adc    DWORD PTR [edi+esi*8-0x7d8302c3],eax
  41bd83:	out    dx,eax
  41bd84:	mov    edi,0xa0dbff41
  41bd89:	pop    ebx
  41bd8a:	aas    
  41bd8b:	arpl   WORD PTR [eax],si
  41bd8d:	stos   DWORD PTR es:[edi],eax
  41bd8e:	fadd   st,st(3)
  41bd90:	add    DWORD PTR [ecx+0x53],ecx
  41bd93:	div    DWORD PTR [eax]
  41bd95:	aam    0x32
  41bd97:	jmp    0xe5d44031
  41bd9c:	xchg   ecx,eax
  41bd9d:	lods   al,BYTE PTR ds:[esi]
  41bd9e:	inc    esi
  41bd9f:	shl    BYTE PTR [eax+0x78],0xb9
  41bda3:	push   esp
  41bda4:	and    esi,DWORD PTR [eax+ebp*2]
  41bda7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda8:	xor    esi,esp
  41bdaa:	mov    ds:0x97761f1,al
  41bdaf:	jbe    0x41bda2
  41bdb1:	repz jge 0x41bdc6
  41bdb4:	(bad)  
  41bdb5:	and    eax,0x1c596538
  41bdba:	fcomp  QWORD PTR [edi]
  41bdbc:	mov    dl,0x29
  41bdbe:	imul   ecx,DWORD PTR [edi-0x4c],0x9c8c7b78
  41bdc5:	xor    BYTE PTR [ebx],bl
  41bdc7:	les    eax,FWORD PTR [esi-0x8]
  41bdca:	xchg   edi,eax
  41bdcb:	pop    esp
  41bdcc:	inc    ebp
  41bdcd:	jge    0x41bd9a
  41bdcf:	cmp    eax,0xeaf208de
  41bdd4:	add    al,cl
  41bdd6:	push   esp
  41bdd7:	test   DWORD PTR [ecx+0x8c5e542],edi
  41bddd:	mov    al,0x97
  41bddf:	outs   dx,BYTE PTR ds:[esi]
  41bde0:	cmp    al,0xb1
  41bde2:	sbb    ecx,DWORD PTR [esi+0xf5edaf8]
  41bde8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bde9:	and    BYTE PTR [eax-0x15],dh
  41bdec:	arpl   WORD PTR [esi],dx
  41bdee:	sbb    cl,BYTE PTR [edx+0x45]
  41bdf1:	addr16 pop es
  41bdf3:	dec    ebp
  41bdf4:	xor    DWORD PTR [ebx],0x2ec04318
  41bdfa:	xor    DWORD PTR [eax+eax*2+0x589a9a2b],esp
  41be01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be02:	icebp  
  41be03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be04:	sub    cl,BYTE PTR [eax]
  41be06:	mov    edx,0x2dc45b33
  41be0b:	fwait
  41be0c:	cdq    
  41be0d:	jmp    0xe2c9bb85
  41be12:	cs jbe 0x41be26
  41be15:	xor    BYTE PTR [edx+0x63],dl
  41be18:	pop    eax
  41be19:	jl     0x41be00
  41be1b:	mov    cl,0xd9
  41be1d:	xor    DWORD PTR ds:0x716fb46b,edx
  41be23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be24:	xor    DWORD PTR [ecx+0x76],0x13
  41be28:	(bad)  
  41be29:	retf   0x4445
  41be2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be2d:	or     eax,DWORD PTR [edx-0x4e]
  41be30:	or     edx,DWORD PTR [esi-0x27]
  41be33:	cli    
  41be34:	(bad)  
  41be35:	call   0xe4b5:0x9593adf0
  41be3c:	out    dx,al
  41be3d:	pop    eax
  41be3e:	pop    esi
  41be3f:	xchg   esi,eax
  41be40:	loop   0x41be1b
  41be42:	xchg   BYTE PTR ds:0x58e806fc,cl
  41be48:	pushf  
  41be49:	fs fs ins BYTE PTR es:[edi],dx
  41be4c:	repnz popa 
  41be4e:	lods   al,BYTE PTR ds:[esi]
  41be4f:	pop    esp
  41be50:	xchg   edx,eax
  41be51:	sbb    eax,0xc4a9010e
  41be56:	push   es
  41be57:	mov    dl,0xec
  41be59:	adc    DWORD PTR [edx-0x6e],ebp
  41be5c:	push   cs
  41be5d:	pop    esp
  41be5e:	inc    ebp
  41be5f:	arpl   WORD PTR [ebx+0x75],cx
  41be62:	push   cs
  41be63:	mov    cl,0x55
  41be65:	mov    edi,DWORD PTR [esi]
  41be67:	xchg   edx,eax
  41be68:	or     DWORD PTR ds:0x383cd256,edi
  41be6e:	push   ss
  41be6f:	stos   BYTE PTR es:[edi],al
  41be70:	jmp    0x34d4:0x4d990edf
  41be77:	xchg   edi,eax
  41be78:	bound  esi,QWORD PTR [esi+0x5d841bb1]
  41be7e:	dec    esi
  41be7f:	mov    ebx,0xe2a66e36
  41be84:	test   DWORD PTR [esi+0x5f],edx
  41be87:	or     ecx,DWORD PTR [edx+0x63]
  41be8a:	dec    ebx
  41be8b:	dec    ecx
  41be8c:	push   ebx
  41be8d:	loop   0x41bedc
  41be8f:	pop    ds
  41be90:	add    eax,0xdb7f24ba
  41be95:	dec    ebx
  41be96:	data16 rcr ch,cl
  41be99:	(bad)  
  41be9a:	ror    BYTE PTR [ebx+0x74],cl
  41be9d:	arpl   WORD PTR [ebx],ax
  41be9f:	push   ecx
  41bea0:	(bad)  
  41bea2:	xor    DWORD PTR [ecx+eax*1],esp
  41bea5:	fst    QWORD PTR [esp+edi*2+0x3e03523d]
  41beac:	data16 mov ah,0x97
  41beaf:	push   esi
  41beb0:	dec    edx
  41beb1:	jl     0x41befd
  41beb3:	mov    al,al
  41beb5:	scas   al,BYTE PTR es:[edi]
  41beb6:	cmp    bh,dl
  41beb8:	popa   
  41beb9:	enter  0x6ca1,0x82
  41bebd:	cdq    
  41bebe:	mov    cl,0x70
  41bec0:	inc    esi
  41bec1:	and    eax,0x2d33866c
  41bec6:	scas   eax,DWORD PTR es:[edi]
  41bec7:	xor    eax,0x2d91da10
  41becc:	rol    cl,cl
  41bece:	pop    ds
  41becf:	mov    ebx,0x84b60bfe
  41bed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bed5:	push   eax
  41bed6:	add    ah,BYTE PTR [ebp-0x5e]
  41bed9:	popf   
  41beda:	mov    ecx,0x620baccc
  41bedf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bee0:	or     dh,cl
  41bee2:	inc    edi
  41bee3:	neg    DWORD PTR [edx+edi*2]
  41bee6:	scas   eax,DWORD PTR es:[edi]
  41bee7:	outs   dx,BYTE PTR ds:[esi]
  41bee8:	ss enter 0xdf40,0xec
  41beed:	lods   al,BYTE PTR ds:[esi]
  41beee:	bound  esi,QWORD PTR [edx+0x67]
  41bef1:	mov    ?,WORD PTR [ebx+0x40c64fc0]
  41bef7:	ss mov esi,0xad53298e
  41befd:	pop    edx
  41befe:	aad    0x33
  41bf00:	(bad)  
  41bf01:	sub    DWORD PTR [ecx+0x4ac30dbb],ebx
  41bf07:	and    eax,0x70fb503f
  41bf0c:	and    edi,DWORD PTR [ebp+0x55]
  41bf0f:	dec    edi
  41bf10:	fcom   DWORD PTR [ecx-0x5e032d7f]
  41bf16:	pusha  
  41bf17:	and    al,0x9c
  41bf19:	mov    WORD PTR [edx-0x3f681fe2],ss
  41bf1f:	and    al,0x71
  41bf21:	adc    eax,0xc6820d7e
  41bf27:	pop    ebp
  41bf28:	xor    ebx,DWORD PTR ds:0xa93c6740
  41bf2e:	lahf   
  41bf2f:	std    
  41bf30:	and    DWORD PTR [edi-0x74],edi
  41bf33:	test   bh,bh
  41bf35:	rcl    dx,cl
  41bf38:	add    ebx,DWORD PTR [edx-0x31]
  41bf3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf3c:	xor    DWORD PTR [ecx-0x49],ebp
  41bf3f:	sbb    eax,0x7f0e3813
  41bf44:	psllq  mm6,QWORD PTR [edi-0x74]
  41bf48:	and    cl,bl
  41bf4a:	sub    al,0xe
  41bf4c:	and    DWORD PTR [edx+0x75689db1],esp
  41bf52:	xor    edi,DWORD PTR [edi]
  41bf54:	lods   eax,DWORD PTR ds:[esi]
  41bf55:	xchg   ecx,eax
  41bf56:	and    BYTE PTR [eax],dl
  41bf58:	pop    eax
  41bf59:	std    
  41bf5a:	inc    esi
  41bf5b:	out    dx,al
  41bf5c:	inc    edi
  41bf5d:	cmp    esi,ebp
  41bf5f:	aaa    
  41bf60:	ret    
  41bf61:	jbe    0x41bf27
  41bf63:	test   DWORD PTR [edi+0x38],ecx
  41bf66:	xchg   ecx,eax
  41bf67:	xor    al,BYTE PTR ds:0x8e8b01ca
  41bf6d:	in     eax,0xad
  41bf6f:	lock xor BYTE PTR [edx],dl
  41bf72:	pop    es
  41bf73:	cld    
  41bf74:	cmp    al,0xf4
  41bf76:	xchg   ebx,eax
  41bf77:	jb     0x41bf52
  41bf79:	cmp    edi,0x6f
  41bf7c:	mov    esi,DWORD PTR [ecx]
  41bf7e:	mov    ecx,esp
  41bf80:	ins    DWORD PTR es:[edi],dx
  41bf81:	mov    ebp,0x33e9dbf0
  41bf86:	mov    ds,WORD PTR [eax+0xf]
  41bf89:	jle    0x41bff9
  41bf8b:	aam    0x34
  41bf8d:	cs inc edi
  41bf8f:	pop    ss
  41bf90:	test   BYTE PTR [edx-0x7e],al
  41bf93:	jmp    0x390e:0xacbb8401
  41bf9a:	(bad)  
  41bf9c:	out    dx,eax
  41bf9d:	inc    ebp
  41bf9e:	adc    edi,DWORD PTR [ecx]
  41bfa0:	mov    bh,0xf3
  41bfa2:	out    0x75,eax
  41bfa4:	imul   ecx,ebp,0x5d
  41bfa7:	outs   dx,DWORD PTR ds:[esi]
  41bfa8:	mov    esi,0xe25d611b
  41bfad:	xor    BYTE PTR [ebx+eiz*2],dl
  41bfb0:	retf   0xc8b3
  41bfb3:	mov    ?,WORD PTR [eax-0x6f3b26b5]
  41bfb9:	pop    esp
  41bfba:	fld    DWORD PTR [ebx-0x5d]
  41bfbd:	xchg   ebx,eax
  41bfbe:	in     al,dx
  41bfbf:	ficom  WORD PTR [ebx+0x47]
  41bfc2:	and    BYTE PTR [edx-0x81d99df],bh
  41bfc8:	jg     0x41bfb9
  41bfca:	sub    dl,BYTE PTR [ebp+0x5f]
  41bfcd:	outs   dx,BYTE PTR ds:[esi]
  41bfce:	jns    0x41bf66
  41bfd0:	push   eax
  41bfd1:	sbb    BYTE PTR [edi-0x7],ch
  41bfd4:	adc    bl,BYTE PTR [edi+0x7f]
  41bfd7:	cwde   
  41bfd8:	xlat   BYTE PTR ds:[ebx]
  41bfd9:	sqrtps xmm7,XMMWORD PTR [edi+edx*4+0x209f55fd]
  41bfe1:	lds    ebx,FWORD PTR [ebx+0x6b]
  41bfe4:	aam    0xa
  41bfe6:	imul   dx,WORD PTR [eax],0x2e0e
  41bfeb:	or     al,0x7c
  41bfed:	mov    cs,WORD PTR [ebx+edi*4]
  41bff0:	cmp    al,0x1a
  41bff2:	dec    edi
  41bff3:	sbb    BYTE PTR ds:0x78bc21a3,cl
  41bff9:	enter  0x6fa1,0x75
  41bffd:	retf   
  41bffe:	mov    ds:0x17edbba4,eax
  41c003:	jmp    0x453f7cd6
  41c008:	add    eax,0x7510aa63
  41c00d:	xchg   esi,eax
  41c00e:	repz mov ah,0xb5
  41c011:	xor    dl,BYTE PTR [edx-0x7]
  41c014:	loop   0x41bfbb
  41c016:	in     al,0x98
  41c018:	sti    
  41c019:	fwait
  41c01a:	in     al,dx
  41c01b:	mov    ch,0x89
  41c01d:	out    dx,eax
  41c01e:	cld    
  41c01f:	ret    0xaaba
  41c022:	jp     0x41bff3
  41c024:	inc    eax
  41c025:	mov    edx,0x6b36643d
  41c02a:	cmp    DWORD PTR [eax],esi
  41c02c:	cmp    BYTE PTR [edi],bh
  41c02e:	mov    ch,0x77
  41c030:	std    
  41c031:	shl    DWORD PTR [edi],1
  41c033:	pop    es
  41c034:	ins    BYTE PTR es:[edi],dx
  41c035:	inc    ebp
  41c036:	jo     0x41c047
  41c038:	mov    ch,BYTE PTR [ebx+0x4fb7ad9]
  41c03e:	mov    edx,0xb580c069
  41c043:	popa   
  41c044:	pop    es
  41c045:	sub    DWORD PTR [edi+0x5dcfbe25],ebx
  41c04b:	lahf   
  41c04c:	out    dx,al
  41c04d:	push   edi
  41c04e:	mov    edx,fs
  41c050:	pop    esp
  41c051:	sbb    DWORD PTR [ebx],esp
  41c053:	lods   al,BYTE PTR ds:[esi]
  41c054:	pop    es
  41c055:	sbb    ebp,DWORD PTR ds:0x97df7260
  41c05b:	sbb    eax,0xd98e465e
  41c060:	out    dx,eax
  41c061:	cmp    DWORD PTR [eax+0x12],edi
  41c064:	icebp  
  41c065:	xor    al,BYTE PTR [edi-0x71ca89c]
  41c06b:	fcom   QWORD PTR [esi+0x35]
  41c06e:	xor    bl,ah
  41c070:	pushf  
  41c071:	punpckhwd mm0,QWORD PTR [esi]
  41c074:	jnp    0x41bffd
  41c076:	push   edx
  41c077:	jle    0x41c060
  41c079:	xor    BYTE PTR [edx+0x3c0e21c2],ah
  41c07f:	add    BYTE PTR [eax],al
  41c081:	add    BYTE PTR [esi-0x10fe18c6],dh
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	dec    ebp
  41c08f:	adc    BYTE PTR [edx],al
  41c091:	or     edx,DWORD PTR [edx-0xafffec4]
  41c097:	add    al,0x0
  41c099:	add    BYTE PTR [esi],bh
  41c09b:	loop   0x41c0d5
  41c09d:	sbb    cl,BYTE PTR ss:[ebp+0x3d]
  41c0a1:	icebp  
  41c0a2:	xor    bh,bh
  41c0a4:	test   BYTE PTR [ebx-0x51a24c3c],bl
  41c0aa:	aam    0x54
  41c0ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0ad:	iret   
  41c0ae:	and    eax,0xf067ced8
  41c0b3:	scas   al,BYTE PTR es:[edi]
  41c0b4:	fnstenv [esi+0x7a0048aa]
  41c0ba:	pushf  
  41c0bb:	xchg   esi,eax
  41c0bc:	out    0x70,eax
  41c0be:	call   0x261a3978
  41c0c3:	cmp    eax,DWORD PTR [edi+0x5]
  41c0c6:	test   eax,0x29e3b7e9
  41c0cb:	(bad)  
  41c0cc:	jle    0x41c139
  41c0ce:	cmp    edx,eax
  41c0d0:	add    eax,0x7bb0b64f
  41c0d5:	dec    ebx
  41c0d6:	jmp    0x41c0ed
  41c0d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0d9:	adc    al,0x99
  41c0db:	and    al,0x60
  41c0dd:	xor    eax,0xdbf7aead
  41c0e2:	int3   
  41c0e3:	mov    eax,ds:0x41bed167
  41c0e8:	mov    ebx,DWORD PTR [ebp+0x51]
  41c0eb:	add    BYTE PTR [edi],0xfe
  41c0ee:	sub    al,0xdc
  41c0f0:	mov    bl,0xd2
  41c0f2:	iret   
  41c0f3:	paddb  mm6,QWORD PTR [esi-0x4863d510]
  41c0fa:	shr    BYTE PTR [eax-0x1909fbeb],cl
  41c100:	int3   
  41c101:	dec    ebp
  41c102:	lahf   
  41c103:	ret    0x2f18
  41c106:	(bad)  
  41c107:	adc    al,0x81
  41c109:	jo     0x41c163
  41c10b:	sahf   
  41c10c:	in     al,dx
  41c10d:	sahf   
  41c10e:	cmp    bh,BYTE PTR [edx]
  41c110:	lods   al,BYTE PTR ds:[esi]
  41c111:	pop    eax
  41c112:	es push eax
  41c114:	xor    ebx,edi
  41c116:	ins    DWORD PTR es:[edi],dx
  41c117:	add    BYTE PTR [ebp-0x9b0c833],bl
  41c11d:	aaa    
  41c11e:	push   ebp
  41c11f:	jmp    0x41c121
  41c121:	mov    WORD PTR [ebp-0x612019f0],cs
  41c127:	add    eax,ecx
  41c129:	xchg   edi,eax
  41c12a:	frstor [ebx]
  41c12c:	(bad)  
  41c12d:	shl    ah,cl
  41c12f:	mov    eax,ds:0xfdf89fc2
  41c134:	mov    eax,ds:0x2c710f23
  41c139:	push   cs
  41c13a:	sar    eax,0x26
  41c13d:	shl    BYTE PTR [eax],1
  41c13f:	jmp    0xf610:0xff2d15a2
  41c146:	jno    0x41c0d2
  41c148:	sbb    eax,0x8f2ec812
  41c14d:	pop    edi
  41c14e:	pop    edx
  41c14f:	test   BYTE PTR [ebp+0x14f32d0b],dl
  41c155:	mov    ds:0xbb1898ca,eax
  41c15a:	xchg   ecx,eax
  41c15b:	js     0x41c171
  41c15d:	cmp    BYTE PTR [ecx+edi*8+0x7b],cl
  41c161:	xor    DWORD PTR [ebp-0x25],edi
  41c164:	cwde   
  41c165:	fmulp  st(6),st
  41c167:	push   0x28
  41c169:	lods   eax,DWORD PTR ds:[esi]
  41c16a:	shl    BYTE PTR [ecx],1
  41c16c:	adc    al,0xfa
  41c16e:	(bad)  
  41c16f:	xchg   edx,eax
  41c170:	mov    cl,0x28
  41c172:	das    
  41c173:	test   eax,0xba6e3463
  41c178:	mov    ch,0xc2
  41c17a:	xor    eax,0x5810f81a
  41c17f:	test   DWORD PTR ds:0xe554ed,ecx
  41c185:	xchg   edx,eax
  41c186:	xor    dl,BYTE PTR [eax+edi*4-0x62]
  41c18a:	call   0xea071804
  41c18f:	ds aam 0xe6
  41c192:	or     DWORD PTR [edx],edi
  41c194:	cmc    
  41c195:	in     al,dx
  41c196:	(bad)  [edi]
  41c198:	mov    esp,ebx
  41c19a:	cmp    BYTE PTR [esi],0xd5
  41c19d:	ss aam 0x50
  41c1a0:	clc    
  41c1a1:	call   FWORD PTR [esi]
  41c1a3:	outs   dx,DWORD PTR ds:[esi]
  41c1a4:	xor    bh,BYTE PTR [ebx]
  41c1a6:	idiv   edi
  41c1a8:	lea    esp,[esi-0x71736a98]
  41c1ae:	xor    BYTE PTR [ebp-0x79],cl
  41c1b1:	push   ebp
  41c1b2:	push   ebp
  41c1b3:	xchg   esp,eax
  41c1b4:	mov    al,ds:0x5722b7b5
  41c1b9:	xchg   ebp,eax
  41c1ba:	mov    dh,0x43
  41c1bc:	push   ss
  41c1bd:	cs cmp al,0x33
  41c1c0:	jb     0x41c160
  41c1c2:	xlat   BYTE PTR ds:[ebx]
  41c1c3:	xor    esp,ebx
  41c1c5:	mov    al,ds:0x2945170a
  41c1ca:	pop    esi
  41c1cb:	add    ah,BYTE PTR fs:[edi]
  41c1ce:	repnz dec edx
  41c1d0:	and    ebp,DWORD PTR [ebp+edi*2-0x384a3add]
  41c1d7:	jae    0x41c1b9
  41c1d9:	iret   
  41c1da:	cdq    
  41c1db:	adc    eax,0xfde3d2c6
  41c1e0:	push   0x7b
  41c1e2:	cmp    BYTE PTR [edx],bh
  41c1e4:	das    
  41c1e5:	jae    0x41c1a4
  41c1e7:	iret   
  41c1e8:	scas   al,BYTE PTR es:[edi]
  41c1e9:	mov    ah,0xa3
  41c1eb:	xchg   ebx,eax
  41c1ec:	xchg   ebp,eax
  41c1ed:	push   0x4a46919e
  41c1f2:	sti    
  41c1f3:	push   edi
  41c1f4:	push   eax
  41c1f5:	jmp    0xb581:0xb1a7e97d
  41c1fc:	enter  0x5fd,0x98
  41c200:	je     0x41c26b
  41c202:	aam    0x22
  41c204:	hlt    
  41c205:	add    DWORD PTR [ecx-0x3d],esi
  41c208:	shl    DWORD PTR [ecx+ebp*1],0x2a
  41c20c:	sahf   
  41c20d:	xchg   edi,eax
  41c20e:	jb     0x41c1eb
  41c210:	rcl    DWORD PTR [edx-0x54ccfc36],1
  41c216:	or     al,0xf6
  41c218:	lahf   
  41c219:	(bad)  
  41c21a:	into   
  41c21b:	inc    eax
  41c21c:	jle    0x41c1a9
  41c21e:	scas   al,BYTE PTR es:[edi]
  41c21f:	sub    esi,DWORD PTR [edi]
  41c221:	cmp    al,0xb8
  41c223:	cdq    
  41c224:	sub    edx,ebp
  41c226:	xchg   ebp,eax
  41c227:	mov    esp,0x44f31c8
  41c22c:	pop    eax
  41c22d:	xchg   DWORD PTR [ebp-0x3dfc6239],esi
  41c233:	mov    bl,0x7e
  41c235:	in     eax,0xd2
  41c237:	out    dx,al
  41c238:	push   ebp
  41c239:	xchg   edx,eax
  41c23a:	ja     0x41c1c7
  41c23c:	inc    eax
  41c23d:	jae    0x41c2a0
  41c23f:	pop    ss
  41c240:	mov    edi,0xc4a0745c
  41c245:	sti    
  41c246:	mov    eax,ds:0x592507f3
  41c24b:	dec    eax
  41c24c:	js     0x41c26e
  41c24e:	mov    cl,0xba
  41c250:	je     0x41c229
  41c252:	push   esi
  41c253:	test   eax,0x3e700a23
  41c258:	mov    ah,0xb5
  41c25a:	shl    BYTE PTR [ebx],1
  41c25c:	xor    al,0xd4
  41c25e:	fist   DWORD PTR [ebx]
  41c260:	fwait
  41c261:	(bad)  
  41c262:	shl    al,cl
  41c264:	pop    es
  41c265:	lea    edi,[ebx-0x166f229b]
  41c26b:	and    eax,0x616050b6
  41c270:	loope  0x41c2aa
  41c272:	push   eax
  41c273:	inc    edi
  41c274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c275:	fwait
  41c276:	dec    esp
  41c277:	xchg   esp,eax
  41c278:	and    ecx,ebp
  41c27a:	fdivr  DWORD PTR [edx]
  41c27c:	push   ecx
  41c27d:	ins    DWORD PTR es:[edi],dx
  41c27e:	add    dh,dl
  41c280:	push   ds
  41c281:	xor    BYTE PTR [esi-0x2a],bl
  41c284:	xor    DWORD PTR [edi+ebx*4],esp
  41c287:	xor    eax,0x5dd68a56
  41c28c:	sbb    esi,DWORD PTR [esi-0x27]
  41c28f:	sub    eax,0xfb1b4f07
  41c294:	in     eax,dx
  41c295:	pop    esp
  41c296:	cmp    al,0xcf
  41c298:	stc    
  41c299:	cld    
  41c29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c29b:	fwait
  41c29c:	cmp    BYTE PTR [edi+0x21],al
  41c29f:	cmp    al,0x5a
  41c2a1:	(bad)  
  41c2a2:	pop    ecx
  41c2a3:	pop    eax
  41c2a4:	jae    0x41c2e4
  41c2a6:	adc    eax,0xf23cbf3d
  41c2ab:	or     DWORD PTR [edx+edx*1+0x4a],edi
  41c2af:	xor    ebp,DWORD PTR [ebp-0x24]
  41c2b2:	mov    eax,0x9ad37b95
  41c2b7:	daa    
  41c2b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2b9:	xor    eax,0x53995053
  41c2be:	(bad)
  41c2c1:	clc    
  41c2c2:	push   eax
  41c2c3:	and    DWORD PTR [esi],ebx
  41c2c5:	les    ecx,FWORD PTR [edi-0x4f]
  41c2c8:	sub    esi,DWORD PTR [edx+0x27]
  41c2cb:	mov    ecx,0x37559734
  41c2d0:	(bad)  
  41c2d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2d3:	ror    BYTE PTR [eax+0x6a13c635],cl
  41c2d9:	xor    ecx,edx
  41c2db:	mov    dl,0x92
  41c2dd:	xor    BYTE PTR [esp+edx*2+0x27],bh
  41c2e1:	mov    ch,0x1
  41c2e3:	fistp  WORD PTR [ecx+edx*4-0x46]
  41c2e7:	test   al,0xb1
  41c2e9:	mov    ebp,DWORD PTR [ebx-0x2a]
  41c2ec:	cmp    DWORD PTR [eax-0x7d],0xd2ab6604
  41c2f3:	rcr    BYTE PTR [edi-0x3bcaca39],0x21
  41c2fa:	mov    BYTE PTR [edx-0x3e],bh
  41c2fd:	push   esi
  41c2fe:	inc    esp
  41c2ff:	add    DWORD PTR [eax+ecx*8+0x7f],esi
  41c303:	arpl   WORD PTR [eax-0x61],ax
  41c306:	mov    dh,0xe
  41c308:	arpl   WORD PTR [esi+0x4b],cx
  41c30b:	xchg   ebx,eax
  41c30c:	pop    eax
  41c30d:	in     eax,0x41
  41c30f:	push   esp
  41c310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c311:	mov    dl,0x30
  41c313:	add    DWORD PTR [esi+eax*4-0x5ce045aa],eax
  41c31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c31b:	es fdivr st(0),st
  41c31e:	pop    ebp
  41c31f:	adc    al,0xce
  41c321:	or     eax,0x66012d5f
  41c326:	ret    
  41c327:	jg     0x41c34a
  41c329:	dec    eax
  41c32a:	jmp    0x3e97:0x5c927428
  41c331:	cs int3 
  41c333:	pop    edi
  41c334:	pop    ebx
  41c335:	js     0x41c35b
  41c337:	ja     0x41c36b
  41c339:	jge    0x41c2c1
  41c33b:	loop   0x41c2f1
  41c33d:	fnstsw WORD PTR [edx-0x56]
  41c340:	jne    0x41c369
  41c342:	mov    ah,0xfe
  41c344:	sbb    dl,BYTE PTR [edi-0x72]
  41c347:	and    ecx,DWORD PTR [ebp+0x7a]
  41c34a:	push   ecx
  41c34b:	nop
  41c34c:	fisttp WORD PTR [edx]
  41c34e:	mov    ah,0xfb
  41c350:	jg     0x41c3a1
  41c352:	dec    ecx
  41c353:	fbstp  TBYTE PTR [ebp+0x6d317c5f]
  41c359:	psrld  mm5,QWORD PTR ds:0x57accdc3
  41c360:	dec    ebp
  41c361:	or     DWORD PTR [esi],esp
  41c363:	jno    0x41c313
  41c365:	cmp    dl,BYTE PTR fs:[eax]
  41c368:	int3   
  41c369:	into   
  41c36a:	lahf   
  41c36b:	enter  0xa514,0xa2
  41c36f:	aaa    
  41c370:	jns    0x41c3d1
  41c372:	push   edx
  41c373:	jno    0x41c332
  41c375:	aas    
  41c376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c377:	es pop esi
  41c379:	adc    al,0x6f
  41c37b:	sbb    BYTE PTR [edi+eax*8+0x36],0x27
  41c380:	das    
  41c381:	std    
  41c382:	or     eax,DWORD PTR [ecx-0x4f8a5c77]
  41c388:	and    bh,BYTE PTR [eax+0x663afd56]
  41c38e:	dec    esp
  41c38f:	jmp    0x36e0:0x7b0b069f
  41c396:	mov    BYTE PTR [bx],bh
  41c399:	into   
  41c39a:	push   edx
  41c39b:	add    eax,0xf13422c9
  41c3a0:	ret    0xcb44
  41c3a3:	inc    ecx
  41c3a4:	int3   
  41c3a5:	loope  0x41c37d
  41c3a7:	outs   dx,DWORD PTR ds:[esi]
  41c3a8:	in     al,dx
  41c3a9:	or     al,0xe7
  41c3ab:	xchg   DWORD PTR [eax+0x72],eax
  41c3ae:	push   ss
  41c3af:	dec    ebx
  41c3b0:	xor    al,0x4c
  41c3b2:	pop    ebp
  41c3b3:	jp     0x41c3a3
  41c3b5:	les    ebx,FWORD PTR [ecx]
  41c3b7:	js     0x41c3b2
  41c3b9:	lods   al,BYTE PTR ds:[esi]
  41c3ba:	mov    dh,0x12
  41c3bc:	ficom  DWORD PTR [edx]
  41c3be:	in     eax,dx
  41c3bf:	not    BYTE PTR [ecx+0x5c]
  41c3c2:	out    0xbd,eax
  41c3c4:	jecxz  0x41c3fd
  41c3c6:	test   DWORD PTR [edi+0x22],edx
  41c3c9:	dec    ebx
  41c3ca:	mov    esi,0x71d1eb93
  41c3cf:	jae    0x41c37a
  41c3d1:	(bad)  
  41c3d3:	jne    0x41c3bb
  41c3d5:	sbb    bh,cl
  41c3d7:	jmp    0x41c3f1
  41c3d9:	mov    ebx,0x68fe5560
  41c3de:	xchg   ebp,eax
  41c3df:	in     al,dx
  41c3e0:	(bad)  
  41c3e1:	sbb    bl,bh
  41c3e3:	xchg   edi,eax
  41c3e4:	in     eax,0x30
  41c3e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3e7:	adc    edi,esi
  41c3e9:	out    dx,eax
  41c3ea:	and    eax,0xad9ae487
  41c3ef:	mov    al,0x9a
  41c3f1:	leave  
  41c3f2:	clc    
  41c3f3:	sahf   
  41c3f4:	loop   0x41c3e7
  41c3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3f7:	ja     0x41c442
  41c3f9:	dec    eax
  41c3fa:	and    eax,0x54f3ba54
  41c3ff:	mov    edx,0xa5b5939d
  41c404:	lods   al,BYTE PTR ds:[esi]
  41c405:	xchg   edx,eax
  41c406:	(bad)  
  41c407:	rcl    DWORD PTR [eax-0x75],1
  41c40a:	fimul  DWORD PTR [edi-0x79]
  41c40d:	xchg   DWORD PTR [edx+eiz*4],ebp
  41c410:	push   ebx
  41c411:	sbb    al,0x5e
  41c413:	jmp    0x6490b2af
  41c418:	pop    edi
  41c419:	xor    eax,0x3c0ae656
  41c41e:	popf   
  41c41f:	mov    ecx,0x3b7676cf
  41c424:	popa   
  41c425:	dec    eax
  41c426:	shr    DWORD PTR ds:0xbeda17cf,1
  41c42c:	push   cs
  41c42d:	cmp    ah,BYTE PTR [ebp-0x3c]
  41c430:	fcomp  QWORD PTR [ebp-0xa24ac12]
  41c436:	sub    al,BYTE PTR [esi+0x6bac3fa3]
  41c43c:	scas   eax,DWORD PTR es:[edi]
  41c43d:	pop    es
  41c43e:	fidivr DWORD PTR [edx+0x1ba2cd0a]
  41c444:	xchg   BYTE PTR [edx],dl
  41c446:	nop
  41c447:	xor    al,0xf3
  41c449:	out    0x8b,al
  41c44b:	or     edi,DWORD PTR [ecx+ecx*2+0x50]
  41c44f:	adc    eax,0xf3d0396f
  41c454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c455:	push   ss
  41c456:	or     esi,0xffffffe0
  41c459:	retf   0xb236
  41c45c:	icebp  
  41c45d:	jmp    0x406b:0x6510c46f
  41c464:	mov    esi,0xb2f391d5
  41c469:	cmp    BYTE PTR [ecx],bl
  41c46b:	stc    
  41c46c:	sbb    esi,edi
  41c46e:	xchg   DWORD PTR [edi-0x33],esi
  41c471:	jns    0x41c4ce
  41c473:	out    0x5a,al
  41c475:	jns    0x41c464
  41c477:	sbb    DWORD PTR [esi+eiz*4-0x7b372e7],edx
  41c47e:	test   BYTE PTR [edx+0x35d79bb3],bl
  41c484:	inc    eax
  41c485:	int3   
  41c486:	dec    ebp
  41c487:	mov    DWORD PTR [ebx+0x695afa0d],ecx
  41c48d:	and    DWORD PTR [esi+ecx*4],ebp
  41c490:	int3   
  41c491:	cdq    
  41c492:	push   esp
  41c493:	push   es
  41c494:	pop    ds
  41c495:	lods   al,BYTE PTR ds:[esi]
  41c496:	push   ss
  41c497:	(bad)  
  41c499:	pop    ecx
  41c49a:	loope  0x41c48a
  41c49c:	cli    
  41c49d:	pop    esp
  41c49e:	jp     0x41c45c
  41c4a0:	xor    BYTE PTR [edx],al
  41c4a2:	in     al,dx
  41c4a3:	or     dl,BYTE PTR [eax-0x11]
  41c4a6:	mov    ebp,0x1c4bfd6
  41c4ab:	xabort 0x6b
  41c4ae:	stc    
  41c4af:	sub    al,0xa5
  41c4b1:	icebp  
  41c4b2:	adc    BYTE PTR [ebx],ch
  41c4b4:	int3   
  41c4b5:	cs dec ebx
  41c4b7:	outs   dx,DWORD PTR ds:[esi]
  41c4b8:	arpl   bx,si
  41c4ba:	(bad)  
  41c4bb:	jp     0x41c472
  41c4bd:	xor    bl,BYTE PTR [esi]
  41c4bf:	adc    eax,esp
  41c4c1:	cmp    DWORD PTR [eax+0xf04dcba],edi
  41c4c7:	adc    al,bh
  41c4c9:	jns    0x41c4e1
  41c4cb:	cli    
  41c4cc:	mov    bh,0x6a
  41c4ce:	outs   dx,BYTE PTR ds:[esi]
  41c4cf:	jg     0x41c547
  41c4d1:	stos   BYTE PTR es:[edi],al
  41c4d2:	jl     0x41c46f
  41c4d4:	clc    
  41c4d5:	or     al,0xd9
  41c4d7:	cld    
  41c4d8:	push   cs
  41c4d9:	imul   ebp,DWORD PTR [esi+eax*2+0x37],0x24
  41c4de:	add    edx,DWORD PTR [ebp-0x5e40c073]
  41c4e4:	js     0x41c4f8
  41c4e6:	xchg   esi,eax
  41c4e7:	pop    ebx
  41c4e8:	inc    edx
  41c4e9:	and    al,0xe4
  41c4eb:	enter  0x6375,0x31
  41c4ef:	pop    ebp
  41c4f0:	call   0xfde5e282
  41c4f5:	imul   eax,DWORD PTR [edi-0x52],0x62
  41c4f9:	cmp    BYTE PTR [ecx+edx*4+0xe7c97ee],dl
  41c500:	rcl    ch,cl
  41c502:	pop    eax
  41c503:	cwde   
  41c504:	mov    ds:0xacba7c9d,eax
  41c509:	sub    al,0xb
  41c50b:	fistp  DWORD PTR [ebp-0x6ca1e0d9]
  41c511:	mov    cl,0xd1
  41c513:	dec    esi
  41c514:	xor    al,0x47
  41c516:	inc    edx
  41c517:	push   esi
  41c518:	cmp    BYTE PTR [edi-0x779875be],dl
  41c51e:	iret   
  41c51f:	push   es
  41c520:	ror    DWORD PTR [ebx+0x472df3f6],1
  41c526:	cmp    al,0x5e
  41c528:	std    
  41c529:	add    ebx,DWORD PTR [ecx-0x214e6e58]
  41c52f:	in     eax,0xed
  41c531:	(bad)  
  41c532:	aas    
  41c533:	pop    ebp
  41c534:	push   edx
  41c535:	and    ebp,0x84d17405
  41c53b:	and    BYTE PTR [esp+esi*8+0x1b],dl
  41c53f:	in     al,dx
  41c540:	pushf  
  41c541:	mov    ebx,0x69f152f2
  41c546:	jbe    0x41c587
  41c548:	enter  0x2064,0x75
  41c54c:	pop    edi
  41c54d:	adc    DWORD PTR [ebx-0xb],eax
  41c550:	sub    dh,cl
  41c552:	fsubr  DWORD PTR [edi*2+0x5764c1f8]
  41c559:	jp     0x41c584
  41c55b:	mov    ah,0x16
  41c55d:	cmp    esi,DWORD PTR [esi]
  41c55f:	push   ds
  41c560:	ficomp WORD PTR [edx-0x32305ece]
  41c566:	ss fs call 0xecfd:0xe5e917d7
  41c56f:	mov    esi,0x2595fe6d
  41c574:	ror    BYTE PTR [ebx+0x39],0x11
  41c578:	aad    0x65
  41c57a:	mul    BYTE PTR [bp+di+0x4e20]
  41c57f:	cs jge 0x41c58e
  41c582:	hlt    
  41c583:	sahf   
  41c584:	push   ss
  41c585:	sub    BYTE PTR [esi+esi*8],bh
  41c588:	test   edi,ebx
  41c58a:	push   esp
  41c58b:	shl    BYTE PTR [edx],cl
  41c58d:	ja     0x41c562
  41c58f:	add    BYTE PTR [eax],al
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	or     DWORD PTR [edx],edi
  41c5a0:	int3   
  41c5a1:	imul   eax,DWORD PTR [edi-0xafffebf],0x4
  41c5a8:	add    BYTE PTR [eax],al
  41c5aa:	test   edi,ebp
  41c5ac:	enter  0xd4f,0xc3
  41c5b0:	aas    
  41c5b1:	mov    dh,0xe2
  41c5b3:	(bad)  
  41c5b4:	sahf   
  41c5b5:	or     BYTE PTR [eax-0x17e9abcb],0x28
  41c5bc:	jne    0x41c55b
  41c5be:	cmc    
  41c5bf:	popa   
  41c5c0:	mov    eax,ds:0xe7bf1234
  41c5c5:	and    DWORD PTR cs:0xcdcf04a9,0x23791ee5
  41c5d0:	ja     0x41c5ef
  41c5d2:	jo     0x41c598
  41c5d4:	(bad)  
  41c5d5:	fst    st(3)
  41c5d7:	es pop esi
  41c5d9:	outs   dx,BYTE PTR ds:[esi]
  41c5da:	into   
  41c5db:	sbb    eax,0xd9adb7c5
  41c5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5e1:	stc    
  41c5e2:	pop    ebx
  41c5e3:	push   ds
  41c5e4:	rol    DWORD PTR [ecx+0x1ef14399],1
  41c5ea:	sahf   
  41c5eb:	adc    al,0x3f
  41c5ed:	mov    dh,BYTE PTR [edx]
  41c5ef:	add    esi,DWORD PTR [esi+0xddf7243]
  41c5f5:	jae    0x41c5df
  41c5f7:	ret    
  41c5f8:	cmc    
  41c5f9:	inc    ebp
  41c5fa:	jno    0x41c61a
  41c5fc:	sub    BYTE PTR [esi+ecx*2],ch
  41c5ff:	scas   al,BYTE PTR es:[edi]
  41c600:	ret    
  41c601:	fidivr WORD PTR [esi+0x481e857]
  41c607:	sub    eax,0xaf9fc5f1
  41c60c:	adc    DWORD PTR [edx+0x61605fff],0xffffffb7
  41c613:	fnstcw WORD PTR [ecx+0x3730da5f]
  41c619:	sbb    cl,BYTE PTR [esi-0x1d]
  41c61c:	addr16 pop edx
  41c61e:	jnp    0x41c683
  41c620:	std    
  41c621:	in     al,dx
  41c622:	and    dl,bh
  41c624:	shl    dl,0x24
  41c627:	push   DWORD PTR [esi]
  41c629:	in     eax,dx
  41c62a:	rsqrtps xmm0,XMMWORD PTR [esi+0x40]
  41c62e:	das    
  41c62f:	inc    esi
  41c630:	lea    edx,[eax]
  41c632:	icebp  
  41c633:	outs   dx,DWORD PTR ds:[esi]
  41c634:	rcl    BYTE PTR [edi],0x0
  41c637:	out    0x80,al
  41c639:	jo     0x41c602
  41c63b:	lock mov ch,BYTE PTR [ecx+0x1d35b4c8]
  41c642:	and    edi,edi
  41c644:	jmp    0xf1c7:0xac21fd4d
  41c64b:	adc    edi,DWORD PTR [edx+ebx*4-0x1c]
  41c64f:	fisubr DWORD PTR ds:0x902762df
  41c655:	scas   al,BYTE PTR es:[edi]
  41c656:	and    eax,0x2789f28b
  41c65b:	jmp    0xa32f19ac
  41c660:	enter  0xf359,0x62
  41c664:	push   ecx
  41c665:	sbb    eax,0x6e062bd6
  41c66a:	lock xchg edi,eax
  41c66c:	cwde   
  41c66d:	scas   al,BYTE PTR es:[edi]
  41c66e:	daa    
  41c66f:	inc    eax
  41c670:	sub    dl,BYTE PTR [ebp+0x5eaedf8c]
  41c676:	retf   
  41c677:	adc    ah,BYTE PTR [edx+0xd7ca1f2]
  41c67d:	shl    DWORD PTR [ecx-0x74],cl
  41c680:	mov    ah,0xc1
  41c682:	je     0x41c660
  41c684:	sub    dh,BYTE PTR [ebp-0x7363a745]
  41c68a:	pushf  
  41c68b:	pop    es
  41c68c:	ja     0x41c611
  41c68e:	xor    DWORD PTR [edx+ebp*2-0x78],esi
  41c692:	fsubp  st(4),st
  41c694:	je     0x41c66f
  41c696:	pop    ss
  41c697:	xchg   ebp,eax
  41c698:	loope  0x41c65c
  41c69a:	mov    al,ds:0x95bcb3d2
  41c69f:	mov    BYTE PTR [ebp-0x48f65c06],bh
  41c6a5:	cmp    cl,BYTE PTR [edi]
  41c6a7:	fadd   QWORD PTR [esi]
  41c6a9:	jbe    0x41c6a5
  41c6ab:	(bad)  
  41c6ac:	adc    ch,BYTE PTR [ebp+0x1a]
  41c6af:	and    BYTE PTR [edi*8-0x383e1f7c],0xaf
  41c6b7:	inc    ebx
  41c6b8:	ret    
  41c6b9:	pop    esp
  41c6ba:	push   ss
  41c6bb:	jbe    0x41c6c5
  41c6bd:	add    esp,DWORD PTR [edx+ecx*2-0x73]
  41c6c1:	push   ebx
  41c6c2:	mov    ds,WORD PTR ds:0x3a9506ec
  41c6c8:	xor    al,0xb6
  41c6ca:	adc    edx,DWORD PTR [edx]
  41c6cc:	les    ebp,FWORD PTR [ecx]
  41c6ce:	xchg   edi,eax
  41c6cf:	mov    ecx,0x84fbe1fd
  41c6d4:	sub    DWORD PTR [edi+eax*8-0x6],ecx
  41c6d8:	sub    DWORD PTR [ecx-0x15],esp
  41c6db:	loope  0x41c749
  41c6dd:	push   es
  41c6de:	inc    ecx
  41c6df:	outs   dx,DWORD PTR ds:[esi]
  41c6e0:	dec    eax
  41c6e1:	aas    
  41c6e2:	lock mov ebx,0xc440ba5
  41c6e8:	pop    ebx
  41c6e9:	pop    esi
  41c6ea:	adc    esp,DWORD PTR [ebx+0x36e44771]
  41c6f0:	sbb    ebp,eax
  41c6f2:	(bad)
  41c6f5:	jnp    0x41c6c2
  41c6f7:	stos   DWORD PTR es:[edi],eax
  41c6f8:	(bad)  
  41c6f9:	fiadd  DWORD PTR ds:0x30ba29a1
  41c6ff:	mov    bl,0x20
  41c701:	in     al,dx
  41c702:	or     esi,ebx
  41c704:	cmp    edi,ebx
  41c706:	inc    ebx
  41c707:	or     ebx,edx
  41c709:	int3   
  41c70a:	test   cl,al
  41c70c:	leave  
  41c70d:	sub    edx,DWORD PTR [ecx]
  41c70f:	fdiv   DWORD PTR [edi+ebx*1+0x7e]
  41c713:	fsubr  DWORD PTR [ebx-0x47]
  41c716:	lahf   
  41c717:	push   ebx
  41c718:	fdivr  st,st(4)
  41c71a:	xor    al,0xf
  41c71c:	mov    esp,0xb85becee
  41c721:	pop    ebx
  41c722:	add    esi,0x37
  41c725:	je     0x41c72e
  41c727:	nop
  41c728:	and    eax,0xb69bd237
  41c72d:	cmp    esi,DWORD PTR ds:0x8fc4a416
  41c733:	sbb    esp,DWORD PTR [ebx-0x19]
  41c736:	cvtps2pi mm1,xmm0
  41c739:	pop    eax
  41c73a:	(bad)  
  41c73b:	mov    esi,0x945d9813
  41c740:	push   eax
  41c741:	jge    0x41c7b8
  41c743:	aaa    
  41c744:	push   eax
  41c745:	mov    eax,0x79160800
  41c74a:	inc    esp
  41c74b:	pop    ss
  41c74c:	xor    al,0x86
  41c74e:	push   cs
  41c74f:	mov    dl,0xf0
  41c751:	and    BYTE PTR [edi-0x76],0xe1
  41c755:	push   ds
  41c756:	sbb    BYTE PTR ds:0xcae8d8f8,ch
  41c75c:	stos   DWORD PTR es:[edi],eax
  41c75d:	cmp    al,0x8f
  41c75f:	jb     0x41c797
  41c761:	dec    eax
  41c762:	mov    edx,0x53ee5765
  41c767:	ret    
  41c768:	mov    ch,0xb3
  41c76a:	imul   esp,DWORD PTR [ebp-0x69],0x6e
  41c76e:	add    DWORD PTR [ebx-0x2cf2615e],ebp
  41c774:	cmp    eax,0x861d0eb3
  41c779:	fdiv   QWORD PTR [ebp+edi*8-0x7a]
  41c77d:	fsubrp st(5),st
  41c77f:	xor    ebp,edx
  41c781:	lds    esi,FWORD PTR [esi+0x14]
  41c784:	cmp    ecx,esp
  41c786:	mov    cl,0xfe
  41c788:	xchg   edx,eax
  41c789:	mov    bl,al
  41c78b:	ss push ecx
  41c78d:	ds lock and al,0xbd
  41c791:	mov    eax,0x1bcf52eb
  41c796:	mov    dl,0xaf
  41c798:	stos   BYTE PTR es:[edi],al
  41c799:	lea    eax,[eax-0x6]
  41c79c:	jmp    0x4c60e76
  41c7a1:	cmp    al,0x6e
  41c7a3:	loop   0x41c7ec
  41c7a5:	sbb    cl,ch
  41c7a7:	add    BYTE PTR [ebx+ecx*4],ah
  41c7aa:	mov    esp,0xe69ec32e
  41c7af:	out    dx,eax
  41c7b0:	jbe    0x41c7d2
  41c7b2:	leave  
  41c7b3:	outs   dx,DWORD PTR ds:[esi]
  41c7b4:	mov    bh,0x6c
  41c7b6:	mov    cl,0x2a
  41c7b8:	shl    DWORD PTR [edi],cl
  41c7ba:	inc    eax
  41c7bb:	mov    al,ds:0xe36ce3da
  41c7c0:	push   ebx
  41c7c1:	int    0xac
  41c7c3:	(bad)  
  41c7c4:	das    
  41c7c5:	fldenv [esi]
  41c7c7:	adc    al,0xfa
  41c7c9:	xchg   ecx,eax
  41c7ca:	(bad)  
  41c7cb:	outs   dx,DWORD PTR ds:[esi]
  41c7cc:	cmp    dh,BYTE PTR [edx]
  41c7ce:	aas    
  41c7cf:	mov    ds:0x10bfdcb9,al
  41c7d4:	mov    esi,0x185a4bde
  41c7d9:	and    ch,dl
  41c7db:	add    eax,0x15
  41c7de:	mov    eax,0xbc7b4651
  41c7e3:	cwde   
  41c7e4:	mov    eax,0x2118ec78
  41c7e9:	fild   WORD PTR [edi]
  41c7eb:	out    dx,eax
  41c7ec:	lods   al,BYTE PTR ds:[esi]
  41c7ed:	xor    DWORD PTR [esp+ebp*4-0x59],edi
  41c7f1:	push   0x4576f2ef
  41c7f6:	int    0x5f
  41c7f8:	call   0x938d:0x22816cf6
  41c7ff:	xchg   ebp,eax
  41c800:	xlat   BYTE PTR ds:[ebx]
  41c801:	lods   al,BYTE PTR ds:[esi]
  41c802:	pop    esp
  41c803:	pusha  
  41c804:	icebp  
  41c805:	sbb    al,0xa5
  41c807:	add    eax,DWORD PTR [edx+esi*2-0x7d]
  41c80b:	pop    edi
  41c80c:	mov    esi,0x80ca4ee7
  41c811:	mov    ah,BYTE PTR [esi]
  41c813:	inc    ecx
  41c814:	fsub   DWORD PTR [esi-0x4f2b8b73]
  41c81a:	xor    BYTE PTR [edi],bh
  41c81c:	sbb    dl,dl
  41c81e:	xchg   DWORD PTR [edi+0x685a4bf8],edi
  41c824:	ja     0x41c7ec
  41c826:	xor    dh,BYTE PTR [ecx]
  41c828:	sub    edi,DWORD PTR [ebp-0x44]
  41c82b:	xchg   ebp,eax
  41c82c:	sbb    ah,BYTE PTR es:[esi+0x2426142f]
  41c833:	xchg   esi,eax
  41c834:	stos   DWORD PTR es:[edi],eax
  41c835:	jmp    0xd79:0x5b143568
  41c83c:	lods   al,BYTE PTR ds:[esi]
  41c83d:	mov    bh,al
  41c83f:	les    edi,FWORD PTR [esi-0x67ea3565]
  41c845:	and    BYTE PTR [edx],ah
  41c847:	(bad)  [eax+0x1577b683]
  41c84d:	fcmovb st,st(3)
  41c84f:	arpl   WORD PTR es:[eax],cx
  41c852:	fimul  DWORD PTR [eax-0x2a]
  41c855:	arpl   WORD PTR [eax-0x54],bp
  41c858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c859:	retf   
  41c85a:	mov    ecx,0x8c6fd0ff
  41c85f:	cmp    al,0x4a
  41c861:	adc    DWORD PTR [ebx-0x2fb6ea3c],ebp
  41c867:	sti    
  41c868:	(bad)  
  41c869:	fadd   st,st(4)
  41c86b:	repz inc eax
  41c86d:	sbb    eax,0xcc2c94aa
  41c872:	arpl   ax,bp
  41c874:	stos   BYTE PTR es:[edi],al
  41c875:	and    eax,DWORD PTR [edi-0x3]
  41c878:	sbb    eax,0x8d6b40a7
  41c87d:	mov    DWORD PTR [edx],esp
  41c87f:	xchg   DWORD PTR [eax],edi
  41c881:	ror    esp,0x8a
  41c884:	jne    0x41c823
  41c886:	pop    ds
  41c887:	mov    dl,BYTE PTR [edi]
  41c889:	sub    BYTE PTR [ebp+0x3d09a059],0x76
  41c890:	daa    
  41c891:	mov    ds:0xacf66bfa,eax
  41c896:	or     bh,BYTE PTR [ebp+0x52b02062]
  41c89c:	test   DWORD PTR [edi+0x594922a0],eax
  41c8a2:	sar    DWORD PTR [esi],1
  41c8a4:	push   0xffffffa9
  41c8a6:	jns    0x41c869
  41c8a8:	into   
  41c8a9:	test   eax,ebp
  41c8ab:	je     0x41c919
  41c8ad:	mov    ?,WORD PTR [ecx]
  41c8af:	cmp    eax,0xc0c4ea3
  41c8b4:	sub    esp,DWORD PTR [edi+0x3]
  41c8b7:	sbb    al,0x3c
  41c8b9:	int    0xa0
  41c8bb:	fwait
  41c8bc:	inc    eax
  41c8bd:	push   ebp
  41c8be:	call   0x6953:0xac69d47d
  41c8c5:	stos   BYTE PTR es:[edi],al
  41c8c6:	mov    ah,0x19
  41c8c8:	mov    bh,0xc4
  41c8ca:	retf   
  41c8cb:	fcom   DWORD PTR [edx+0x651b1650]
  41c8d1:	and    bl,ah
  41c8d3:	scas   al,BYTE PTR es:[edi]
  41c8d4:	je     0x41c941
  41c8d6:	xchg   edx,eax
  41c8d7:	(bad)  
  41c8d8:	mov    bl,0xca
  41c8da:	and    dl,BYTE PTR es:[edi+0x59]
  41c8de:	stos   BYTE PTR es:[edi],al
  41c8df:	popa   
  41c8e0:	(bad)  
  41c8e2:	mov    edi,0xc40f1386
  41c8e7:	mov    ds:0xa7ff09ee,eax
  41c8ec:	pop    es
  41c8ed:	or     bl,BYTE PTR ds:0x36b3fa8f
  41c8f3:	dec    esi
  41c8f4:	ret    
  41c8f5:	pop    ebp
  41c8f6:	jno    0x41c971
  41c8f8:	jo     0x41c8b7
  41c8fa:	pop    es
  41c8fb:	retf   0x5316
  41c8fe:	cdq    
  41c8ff:	pop    esi
  41c900:	xchg   BYTE PTR [ecx-0x1b905053],bh
  41c906:	pop    esi
  41c907:	xchg   esi,eax
  41c908:	loop   0x41c968
  41c90a:	cmp    WORD PTR [ebp+0x3b],si
  41c90e:	ds fwait
  41c910:	cmp    DWORD PTR [ebx-0x20bb317a],0xffffffd2
  41c917:	test   DWORD PTR [edi],eax
  41c919:	lods   al,BYTE PTR fs:[esi]
  41c91b:	cs mov bx,0x28f
  41c920:	add    BYTE PTR [ebx+ecx*4+0x6da6946d],bh
  41c927:	addr16 pusha 
  41c929:	add    BYTE PTR [ebp-0x47e41b88],dl
  41c92f:	mov    bl,0x4e
  41c931:	retf   
  41c932:	jb     0x41c928
  41c934:	xor    DWORD PTR [esi],ebp
  41c936:	mov    dl,0x50
  41c938:	lods   eax,DWORD PTR ds:[esi]
  41c939:	ret    
  41c93a:	je     0x41c91f
  41c93c:	ret    0xac1a
  41c93f:	adc    ah,BYTE PTR [ecx]
  41c941:	mov    esi,0x8f79528c
  41c946:	sahf   
  41c947:	sub    DWORD PTR [esi+0x1a],edx
  41c94a:	cmp    eax,0x98577ccc
  41c94f:	xor    bl,ah
  41c951:	mov    dh,al
  41c953:	cmp    eax,0x6e6beb0
  41c958:	push   ss
  41c959:	mov    dh,0x75
  41c95b:	into   
  41c95c:	nop
  41c95d:	scas   eax,DWORD PTR es:[edi]
  41c95e:	push   eax
  41c95f:	bound  ecx,QWORD PTR [eax-0x57]
  41c962:	repz test esi,edx
  41c965:	cmp    DWORD PTR [eax+0x3c],ebp
  41c968:	mov    bh,0x1b
  41c96a:	aaa    
  41c96b:	test   BYTE PTR [ecx-0xf2ced02],0xb7
  41c972:	stos   BYTE PTR es:[edi],al
  41c973:	push   esp
  41c974:	out    0xc,al
  41c976:	lahf   
  41c977:	mov    al,0x93
  41c979:	cmc    
  41c97a:	mov    ds:0x9aebfef7,al
  41c97f:	add    eax,0xc5da81bc
  41c984:	ret    0xd383
  41c987:	stos   DWORD PTR es:[edi],eax
  41c988:	push   eax
  41c989:	ret    0xdddb
  41c98c:	xor    ebp,DWORD PTR [esi-0x20829e56]
  41c992:	fcomp  DWORD PTR [eax-0x18d8423d]
  41c998:	or     BYTE PTR [edi+edi*8-0x39],0x29
  41c99d:	sahf   
  41c99e:	lock repz jp 0x41ca0d
  41c9a2:	addr16 inc esi
  41c9a4:	in     eax,dx
  41c9a5:	inc    ecx
  41c9a6:	add    al,0x93
  41c9a8:	fdiv   QWORD PTR [edi+0x566ed7a2]
  41c9ae:	xchg   ecx,eax
  41c9af:	ja     0x41c9e7
  41c9b1:	out    0xc0,al
  41c9b3:	xor    DWORD PTR [edx*2+0x61112809],edi
  41c9ba:	fiadd  DWORD PTR [edx+0x7e]
  41c9bd:	or     esi,DWORD PTR [edx+0x4577a3b3]
  41c9c3:	fimul  WORD PTR [esi-0xa]
  41c9c7:	je     0x41c9af
  41c9c9:	add    al,ah
  41c9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9cc:	dec    edx
  41c9cd:	push   eax
  41c9ce:	mov    dh,0x30
  41c9d0:	(bad)  
  41c9d1:	aaa    
  41c9d2:	sub    eax,0x73f663bd
  41c9d7:	adc    BYTE PTR [edi],bl
  41c9d9:	retf   
  41c9da:	add    al,0xf5
  41c9dc:	outs   dx,BYTE PTR ds:[esi]
  41c9dd:	pop    edi
  41c9de:	es sub al,0x7c
  41c9e1:	sti    
  41c9e2:	mov    ch,0x6c
  41c9e4:	cmp    ebx,ebp
  41c9e6:	inc    edx
  41c9e7:	mov    ch,0x5d
  41c9e9:	ins    DWORD PTR es:[edi],dx
  41c9ea:	scas   al,BYTE PTR es:[edi]
  41c9eb:	ss xchg ebp,eax
  41c9ed:	xchg   esp,eax
  41c9ee:	mov    ebp,DWORD PTR [eax]
  41c9f0:	std    
  41c9f1:	sub    BYTE PTR [edx+esi*2-0x3ee7fa26],bl
  41c9f8:	jo     0x41c97b
  41c9fa:	mov    ch,0x7a
  41c9fc:	push   edi
  41c9fd:	pop    esp
  41c9fe:	arpl   WORD PTR [eiz*8+0x70798947],ax
  41ca05:	mov    DWORD PTR [edi+0x6c],esi
  41ca08:	add    dh,ah
  41ca0a:	xchg   ebx,eax
  41ca0b:	fs stos DWORD PTR es:[edi],eax
  41ca0d:	or     bh,BYTE PTR [eax]
  41ca0f:	je     0x41c9b5
  41ca11:	das    
  41ca12:	bound  ebx,QWORD PTR [esi+0x4d492aa3]
  41ca18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca19:	loopne 0x41c99b
  41ca1b:	cmovge eax,esp
  41ca1e:	es xchg edi,eax
  41ca20:	(bad)  
  41ca21:	pop    edx
  41ca22:	mov    bl,0x22
  41ca24:	mov    eax,ds:0xcc49510
  41ca29:	pop    edi
  41ca2a:	add    DWORD PTR [edx+0x50],ecx
  41ca2d:	test   eax,0xe9166cf0
  41ca32:	push   ebp
  41ca33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca34:	lock mov WORD PTR [eax-0x20f7cf8],?
  41ca3b:	mov    eax,0x7f730cab
  41ca40:	imul   esp,DWORD PTR [esi],0xffffffff
  41ca43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca44:	add    DWORD PTR [ebp-0x32a8de9a],ecx
  41ca4a:	mov    dl,0x9a
  41ca4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca4d:	push   eax
  41ca4e:	pop    ecx
  41ca4f:	xchg   edx,eax
  41ca50:	inc    esp
  41ca51:	sub    eax,0xfae31626
  41ca56:	adc    eax,0xf1a37787
  41ca5b:	shl    dl,1
  41ca5d:	js     0x41ca94
  41ca5f:	arpl   WORD PTR [edi],sp
  41ca61:	pop    eax
  41ca62:	push   dx
  41ca64:	fsub   st(5),st
  41ca66:	mov    ds:0xd13434b4,al
  41ca6b:	mov    edi,0x7fe2d02c
  41ca70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca71:	cmp    al,al
  41ca73:	test   al,0x52
  41ca75:	stos   DWORD PTR es:[edi],eax
  41ca76:	pop    eax
  41ca77:	shl    BYTE PTR [esi+0x30],cl
  41ca7a:	jmp    0x41ca62
  41ca7c:	sbb    DWORD PTR es:[eax-0x4],edx
  41ca80:	shl    DWORD PTR [edi+edi*2],1
  41ca83:	push   ss
  41ca84:	jmp    0x41cb01
  41ca86:	ror    DWORD PTR [esi-0x3b7d3c19],0xe1
  41ca8d:	dec    eax
  41ca8e:	cmp    al,0xb4
  41ca90:	test   BYTE PTR [ecx-0x58f606e1],bh
  41ca96:	pop    ebp
  41ca97:	mov    ebx,gs
  41ca99:	cwde   
  41ca9a:	mov    bh,0x73
  41ca9c:	mov    ds:0x4860,eax
  41caa1:	add    ah,ah
  41caa3:	ds mov esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx+0x2a]
  41caaf:	cmp    eax,0x467cccfd
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	cmc    
  41cab7:	add    al,0x0
  41cab9:	add    BYTE PTR [edi],dl
  41cabb:	icebp  
  41cabc:	cwde   
  41cabd:	aad    0x2b
  41cabf:	ds or  ebp,edi
  41cac2:	cli    
  41cac3:	push   esi
  41cac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cac5:	sbb    DWORD PTR [edi-0xa7a6003],0x5653a0c0
  41cacf:	mov    BYTE PTR ss:[edx],cl
  41cad2:	push   ebx
  41cad3:	pop    ebx
  41cad4:	fwait
  41cad5:	add    ch,BYTE PTR [ecx-0x70]
  41cad8:	push   ebp
  41cad9:	xchg   ebp,eax
  41cada:	aam    0xc4
  41cadc:	adc    DWORD PTR [ebp+0x47],0x23
  41cae0:	loop   0x41cb37
  41cae2:	dec    eax
  41cae3:	mov    ds:0xa1492308,al
  41cae8:	aad    0x3d
  41caea:	sar    DWORD PTR [ebx],cl
  41caec:	adc    al,0x76
  41caee:	mov    ebx,0xa0d60360
  41caf3:	sbb    edx,DWORD PTR [eax]
  41caf5:	in     al,dx
  41caf6:	xchg   edi,eax
  41caf7:	xchg   BYTE PTR ds:0xc81066cd,dh
  41cafd:	test   BYTE PTR [ecx],ah
  41caff:	imul   BYTE PTR [ecx-0x3e20186d]
  41cb05:	std    
  41cb06:	mov    edi,0x85bbbf7a
  41cb0b:	inc    ebx
  41cb0c:	retf   
  41cb0d:	loop   0x41cac7
  41cb0f:	sub    al,0xdb
  41cb11:	scas   eax,DWORD PTR es:[edi]
  41cb12:	add    BYTE PTR [edx-0x53],ch
  41cb15:	out    0xbe,eax
  41cb17:	test   BYTE PTR [edx],ch
  41cb19:	push   ebp
  41cb1a:	rcl    BYTE PTR [ecx*4+0x57792cf7],1
  41cb21:	outs   dx,DWORD PTR ds:[esi]
  41cb22:	fs into 
  41cb24:	loopne 0x41cb97
  41cb26:	mov    ds:0xfa054c8f,al
  41cb2b:	cmovle eax,DWORD PTR [ecx+edx*1+0x511fbd03]
  41cb33:	pop    ecx
  41cb34:	jmp    0x82b1:0xc5a34fd3
  41cb3b:	cmp    BYTE PTR [edx+eiz*8-0x7e80b13c],0x5e
  41cb43:	xchg   BYTE PTR [edi+0x7c],ah
  41cb46:	xchg   edx,eax
  41cb47:	cs or  eax,0x3bfe36fd
  41cb4d:	xchg   edx,eax
  41cb4e:	xchg   esp,eax
  41cb4f:	jns    0x41cbca
  41cb51:	scas   al,BYTE PTR es:[edi]
  41cb52:	jmp    0x41cbaf
  41cb54:	jmp    0x41caec
  41cb56:	inc    ebp
  41cb57:	push   ds
  41cb58:	inc    eax
  41cb59:	sub    esp,0x8801074b
  41cb5f:	xor    bl,ch
  41cb61:	call   0xe45e17b4
  41cb66:	pusha  
  41cb67:	jns    0x41cb66
  41cb69:	push   ss
  41cb6a:	or     eax,0xe456adac
  41cb6f:	push   ds
  41cb70:	pop    edx
  41cb71:	mov    dh,0x3c
  41cb73:	shl    DWORD PTR [ecx+0xa378faf],cl
  41cb79:	mul    ebp
  41cb7b:	dec    eax
  41cb7c:	sub    eax,ecx
  41cb7e:	inc    ecx
  41cb7f:	jbe    0x41cb25
  41cb81:	mov    al,0x5d
  41cb83:	or     dh,BYTE PTR [ecx]
  41cb85:	sti    
  41cb86:	pop    esp
  41cb87:	repz call FWORD PTR [eax]
  41cb8a:	pusha  
  41cb8b:	(bad)
  41cb8e:	scas   eax,DWORD PTR es:[edi]
  41cb8f:	or     ecx,DWORD PTR ds:0xd9945523
  41cb95:	or     BYTE PTR [ebx-0x1f],al
  41cb98:	out    0x77,al
  41cb9a:	mov    ebp,0x12257568
  41cb9f:	lds    ebx,FWORD PTR [ebx]
  41cba1:	dec    DWORD PTR [edi]
  41cba3:	mov    bh,BYTE PTR [edi-0x1e]
  41cba6:	std    
  41cba7:	mov    eax,0xfe1a3ff5
  41cbac:	rol    BYTE PTR ds:0xadad4784,0x87
  41cbb3:	dec    edx
  41cbb4:	mov    ds,WORD PTR [eax]
  41cbb6:	sbb    eax,0x142488d8
  41cbbb:	cli    
  41cbbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbbd:	fs pop ss
  41cbbf:	aas    
  41cbc0:	imul   ecx,DWORD PTR [eax+ebx*2+0x4964ab5b],0x853e702d
  41cbcb:	je     0x41cb75
  41cbcd:	add    edi,esp
  41cbcf:	inc    edx
  41cbd0:	stc    
  41cbd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbd2:	not    DWORD PTR [ebx-0x3d]
  41cbd5:	cdq    
  41cbd6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbd8:	call   0x9e5d2d3f
  41cbdd:	xor    BYTE PTR [edi],ah
  41cbdf:	inc    eax
  41cbe0:	mov    edi,0xef766b6a
  41cbe5:	jnp    0x41cbac
  41cbe7:	inc    esi
  41cbe8:	and    DWORD PTR [eax+0x1e],ebp
  41cbeb:	pop    ebx
  41cbec:	mov    bh,0x9a
  41cbee:	aad    0xbb
  41cbf0:	mov    ecx,0x3cf899fb
  41cbf5:	(bad)  
  41cbf6:	(bad)  
  41cbf7:	into   
  41cbf8:	cmp    esi,DWORD PTR ds:0xefddd3e8
  41cbfe:	loope  0x41cbe3
  41cc00:	mov    dh,0x43
  41cc02:	das    
  41cc03:	mov    ebp,fs
  41cc05:	mov    al,ds:0xd9889d15
  41cc0a:	dec    edx
  41cc0b:	mov    ds:0x18910d93,eax
  41cc10:	rol    ecx,0x8
  41cc13:	gs cli 
  41cc15:	(bad)  
  41cc16:	or     DWORD PTR [edi+0x53ce5ad4],edi
  41cc1c:	add    BYTE PTR [ecx],dl
  41cc1e:	mov    dh,0x22
  41cc20:	jne    0x41cc76
  41cc22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc23:	and    al,0x65
  41cc25:	push   eax
  41cc26:	jmp    0x10532ca3
  41cc2b:	mov    bh,0x9
  41cc2d:	jge    0x41cc46
  41cc2f:	jg     0x41cbf1
  41cc31:	test   BYTE PTR [esi+0x30],bh
  41cc34:	adc    eax,0xcd4b686f
  41cc39:	mov    ebx,0x22dab1d9
  41cc3e:	(bad)  
  41cc3f:	cmp    DWORD PTR cs:[ebx],ebp
  41cc42:	gs (bad) 
  41cc44:	or     esp,ebp
  41cc46:	lahf   
  41cc47:	mov    ebp,DWORD PTR [edx-0x6e]
  41cc4a:	rol    DWORD PTR [ecx+ebp*8-0x6b],0xe4
  41cc4f:	jp     0x41ccc5
  41cc51:	test   DWORD PTR [eax+0x20],esi
  41cc54:	mov    ah,0x6
  41cc56:	dec    esp
  41cc57:	mov    BYTE PTR [ebx],dl
  41cc59:	pop    ds
  41cc5a:	mov    eax,0xb5132dad
  41cc5f:	push   ebx
  41cc60:	pop    eax
  41cc61:	mov    ebp,0xb5fccfa9
  41cc66:	dec    edx
  41cc67:	or     al,0x94
  41cc69:	loopne 0x41cc3c
  41cc6b:	mov    bh,0x9c
  41cc6d:	dec    eax
  41cc6e:	mov    dh,0x5
  41cc70:	pop    ebx
  41cc71:	loopne 0x41cc33
  41cc73:	jno    0x41cbff
  41cc75:	push   esp
  41cc76:	dec    esp
  41cc77:	jnp    0x41cc4c
  41cc79:	pop    esi
  41cc7a:	mov    esi,0xecc2fcfa
  41cc7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc80:	pop    es
  41cc81:	jecxz  0x41ccf0
  41cc83:	in     al,0x6d
  41cc85:	pop    esp
  41cc86:	shl    DWORD PTR [edi+ecx*2],0x2c
  41cc8a:	cmp    al,0xb4
  41cc8c:	and    al,0xce
  41cc8e:	test   al,0xc6
  41cc90:	(bad)  
  41cc91:	and    edi,edx
  41cc93:	out    dx,al
  41cc94:	outs   dx,DWORD PTR ds:[esi]
  41cc95:	mov    BYTE PTR [esi-0x2d812396],dh
  41cc9b:	outs   dx,BYTE PTR ds:[esi]
  41cc9c:	lods   al,BYTE PTR ds:[esi]
  41cc9d:	loop   0x41cc46
  41cc9f:	dec    esp
  41cca0:	int3   
  41cca1:	sub    eax,0xfaf3cde9
  41cca6:	xchg   ebp,eax
  41cca7:	add    DWORD PTR [ecx],0x64
  41ccaa:	sbb    DWORD PTR [esp+ebp*8-0x57],0x79
  41ccaf:	(bad)  
  41ccb0:	sub    ebp,esi
  41ccb2:	add    edx,eax
  41ccb4:	xlat   BYTE PTR ds:[ebx]
  41ccb5:	adc    al,0x23
  41ccb7:	mov    esp,0xb039fa8f
  41ccbc:	mov    ds:0xa1c37dd7,al
  41ccc1:	sub    DWORD PTR [ebx+0x7edeca82],0x2dd9f7bf
  41cccb:	sbb    al,0x97
  41cccd:	(bad)
  41ccd1:	daa    
  41ccd2:	inc    ebx
  41ccd3:	pushf  
  41ccd4:	test   BYTE PTR [eax-0x46],0x55
  41ccd8:	push   es
  41ccd9:	ret    
  41ccda:	fwait
  41ccdb:	jo     0x41cd2a
  41ccdd:	bound  edi,QWORD PTR [esi]
  41ccdf:	das    
  41cce0:	mov    esp,0xf33d6389
  41cce5:	dec    eax
  41cce6:	xor    ah,BYTE PTR [eax-0x25]
  41cce9:	push   0x765698a3
  41ccee:	cmp    dl,BYTE PTR [ebx]
  41ccf0:	icebp  
  41ccf1:	mov    DWORD PTR [eax-0x259abc60],edi
  41ccf7:	arpl   WORD PTR [esi-0x32],di
  41ccfa:	sub    ah,BYTE PTR [edx+0x4bb7e570]
  41cd00:	call   0x34845994
  41cd05:	lock inc edi
  41cd07:	mov    al,ds:0x6457e230
  41cd0c:	dec    DWORD PTR [eax-0x35b3dfb]
  41cd12:	xor    ebx,DWORD PTR gs:[esi-0x39]
  41cd16:	xor    esi,edx
  41cd18:	in     al,dx
  41cd19:	xchg   ecx,eax
  41cd1a:	jb     0x41cd06
  41cd1c:	mov    ecx,0xfdfa1089
  41cd21:	push   es
  41cd22:	and    esi,DWORD PTR [edx+eiz*8-0x11]
  41cd26:	repz adc al,0xf5
  41cd29:	push   cs
  41cd2a:	dec    ebp
  41cd2b:	xlat   BYTE PTR ds:[ebx]
  41cd2c:	fisub  WORD PTR [eax+0xca001c9]
  41cd32:	mov    edi,esi
  41cd34:	mov    bl,0xfa
  41cd36:	(bad)  
  41cd37:	push   0x30
  41cd39:	retf   
  41cd3a:	mov    DWORD PTR [ecx],esi
  41cd3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd3d:	push   edi
  41cd3e:	and    eax,0x91466162
  41cd43:	call   0x7ca9e9d9
  41cd48:	pop    esp
  41cd49:	in     eax,dx
  41cd4a:	sub    BYTE PTR [edi-0x798cca9c],ch
  41cd50:	xor    eax,0xddce2f90
  41cd55:	(bad)  
  41cd56:	in     al,dx
  41cd57:	adc    cl,BYTE PTR [eax-0x1e]
  41cd5a:	dec    eax
  41cd5b:	mov    eax,cs:0x871d234b
  41cd61:	fiadd  WORD PTR ds:0x58dcdcc1
  41cd67:	inc    ebx
  41cd68:	push   es
  41cd69:	cli    
  41cd6a:	jecxz  0x41cdaf
  41cd6c:	dec    esi
  41cd6d:	mov    bh,0x8b
  41cd6f:	pop    ss
  41cd70:	xchg   BYTE PTR [edi+0x3a956fc8],cl
  41cd76:	and    edi,DWORD PTR [edx+0xccbb515]
  41cd7c:	xchg   ecx,ecx
  41cd7e:	dec    edx
  41cd7f:	popf   
  41cd80:	mov    ds:0xb6e27245,al
  41cd85:	fsub   QWORD PTR [edx-0x7bfed455]
  41cd8b:	fist   DWORD PTR [edx-0x6]
  41cd8e:	dec    ebp
  41cd8f:	or     DWORD PTR [edi],esi
  41cd91:	sbb    al,0xf8
  41cd93:	mov    esi,0xea321bd4
  41cd98:	add    DWORD PTR [edi],0x7be614da
  41cd9e:	xlat   BYTE PTR ds:[ebx]
  41cd9f:	js     0x41cd4a
  41cda1:	dec    eax
  41cda2:	mov    bh,bh
  41cda4:	mov    esp,0x9da94c8e
  41cdaa:	fnstenv [ecx]
  41cdac:	mov    ebp,DWORD PTR [ebx]
  41cdae:	clc    
  41cdaf:	fnstsw WORD PTR [edi]
  41cdb1:	push   edx
  41cdb2:	dec    edx
  41cdb3:	ret    0xdd5e
  41cdb6:	loope  0x41cd8f
  41cdb8:	pop    esi
  41cdb9:	adc    eax,0x342ad02f
  41cdbe:	aad    0x3a
  41cdc0:	add    al,0x49
  41cdc2:	lock dec ebp
  41cdc4:	mov    bh,al
  41cdc6:	inc    esp
  41cdc7:	pushf  
  41cdc8:	aam    0x70
  41cdca:	std    
  41cdcb:	std    
  41cdcc:	sub    edx,DWORD PTR [edi]
  41cdce:	push   cs
  41cdcf:	mov    BYTE PTR [ecx-0x42],dl
  41cdd2:	lods   eax,DWORD PTR ds:[esi]
  41cdd3:	jae    0x41cd83
  41cdd5:	xchg   esi,eax
  41cdd6:	jnp    0x41ce44
  41cdd8:	sahf   
  41cdd9:	rcl    DWORD PTR [ebp+0x4e608744],cl
  41cddf:	jae    0x41cdc1
  41cde1:	push   ebx
  41cde2:	cs js  0x41cdeb
  41cde5:	mov    ecx,ecx
  41cde7:	pop    esp
  41cde8:	mov    ds:0x36135138,al
  41cded:	push   0x5d5f0e77
  41cdf2:	mov    fs,WORD PTR [edx+0x42511cfa]
  41cdf8:	stos   DWORD PTR es:[edi],eax
  41cdf9:	ds push ebx
  41cdfb:	or     al,0xc8
  41cdfd:	inc    edi
  41cdfe:	test   edi,edx
  41ce00:	fcom   QWORD PTR [esi+0x71]
  41ce03:	vhsubps ymm7,ymm3,YMMWORD PTR [eax-0x4b]
  41ce08:	clc    
  41ce09:	inc    dh
  41ce0b:	iret   
  41ce0c:	inc    esp
  41ce0d:	popa   
  41ce0e:	pop    esp
  41ce0f:	push   ss
  41ce10:	jnp    0x41cdf1
  41ce12:	in     al,0x67
  41ce14:	in     al,0x43
  41ce16:	arpl   si,si
  41ce18:	add    edi,eax
  41ce1a:	cmovno ebx,DWORD PTR [edi-0x78]
  41ce1e:	push   0x2092dcdb
  41ce23:	push   edx
  41ce24:	inc    ecx
  41ce25:	mov    ds:0x81f5867c,al
  41ce2a:	loopne 0x41cea4
  41ce2c:	cmp    ebp,ebx
  41ce2e:	jbe    0x41ce5b
  41ce30:	mov    ah,0x61
  41ce32:	inc    ebp
  41ce33:	scas   eax,DWORD PTR es:[edi]
  41ce34:	push   ecx
  41ce35:	jmp    0x7f82:0x769e660d
  41ce3c:	mov    cs,WORD PTR [edx+eiz*8-0x5c]
  41ce40:	in     al,0x94
  41ce42:	inc    eax
  41ce43:	mov    ds:0xdca1f7b5,eax
  41ce48:	js     0x41cddc
  41ce4a:	(bad)
  41ce4d:	cmp    esp,ecx
  41ce4f:	jle    0x41cea9
  41ce51:	mov    ah,0xa7
  41ce53:	mov    eax,ds:0x30b9d82f
  41ce58:	rcl    BYTE PTR [ebx-0x32],0x82
  41ce5c:	aad    0x55
  41ce5e:	lock mov bl,0x50
  41ce61:	nop
  41ce62:	mov    bh,0x7f
  41ce64:	call   FWORD PTR [ecx+0x3d]
  41ce67:	dec    esi
  41ce68:	jo     0x41cded
  41ce6a:	jge    0x41ce80
  41ce6c:	dec    esp
  41ce6d:	icebp  
  41ce6e:	ja     0x41ce58
  41ce70:	and    esp,DWORD PTR [edx+0x2943c07b]
  41ce76:	jns    0x41ce5d
  41ce78:	sbb    eax,0xb5a93d5d
  41ce7d:	sub    al,0x3f
  41ce7f:	jle    0x41ce7a
  41ce81:	or     DWORD PTR [esi-0x15],ebp
  41ce84:	mov    cl,0x90
  41ce86:	dec    eax
  41ce87:	pop    ebp
  41ce88:	mul    BYTE PTR [edi-0x4d7c95fe]
  41ce8e:	pop    ecx
  41ce8f:	add    bl,cl
  41ce91:	push   esi
  41ce92:	mov    edx,0xc6dbfa03
  41ce97:	add    al,0xd9
  41ce99:	add    eax,DWORD PTR [ecx+0x71e0abef]
  41ce9f:	loope  0x41ce93
  41cea1:	or     eax,0x6120c0ea
  41cea6:	les    ebx,FWORD PTR [edi+0x44157a67]
  41ceac:	test   BYTE PTR [esi-0x7b],ah
  41ceaf:	xchg   ecx,eax
  41ceb0:	inc    ebx
  41ceb1:	adc    eax,0xb941b101
  41ceb6:	inc    esp
  41ceb7:	into   
  41ceb8:	fs jmp 0x8a6c:0xea19c843
  41cec0:	pop    es
  41cec1:	jae    0x41cecf
  41cec3:	cmp    esi,DWORD PTR [ebp-0x66]
  41cec6:	shl    cl,1
  41cec8:	cli    
  41cec9:	inc    esi
  41ceca:	and    cl,dl
  41cecc:	adc    BYTE PTR [edx-0x3c],dh
  41cecf:	push   0x19
  41ced1:	mov    ebp,0x43a22018
  41ced6:	imul   eax,DWORD PTR [esi-0x74260da4],0xfffffff6
  41cedd:	mov    ds:0x77e18f55,al
  41cee2:	sti    
  41cee3:	leave  
  41cee4:	jle    0x41cf2d
  41cee6:	stos   DWORD PTR es:[edi],eax
  41cee7:	aad    0xc2
  41cee9:	cmp    eax,0xbcef377e
  41ceee:	enter  0x387f,0x83
  41cef2:	in     eax,dx
  41cef3:	std    
  41cef4:	cmp    ebp,esi
  41cef6:	sbb    eax,0x252e7039
  41cefb:	pop    ds
  41cefc:	fisttp DWORD PTR [eax-0x5e52667a]
  41cf02:	scas   al,BYTE PTR es:[edi]
  41cf03:	iret   
  41cf04:	and    al,0x75
  41cf06:	aaa    
  41cf07:	pop    edi
  41cf08:	mov    eax,0xce280d58
  41cf0d:	cmp    eax,0x965ff366
  41cf12:	mov    DWORD PTR [eax],ecx
  41cf14:	jecxz  0x41ce96
  41cf16:	je     0x41cf07
  41cf18:	or     al,0x58
  41cf1a:	rcr    BYTE PTR [esi],0xec
  41cf1d:	cmp    DWORD PTR [esi-0x74eb83de],ebp
  41cf23:	dec    ecx
  41cf24:	fadd   QWORD PTR [ecx+esi*8+0xe78184a]
  41cf2b:	call   0x54b02b78
  41cf30:	or     al,0xcf
  41cf32:	push   es
  41cf33:	xchg   esp,eax
  41cf34:	dec    eax
  41cf35:	and    cl,ch
  41cf37:	or     edx,DWORD PTR [edx-0x26a949cc]
  41cf3d:	xchg   edx,eax
  41cf3e:	call   0x8f83e2c8
  41cf43:	data16 repz cmp al,0xbe
  41cf47:	(bad)
  41cf4b:	clc    
  41cf4c:	icebp  
  41cf4d:	inc    edx
  41cf4e:	fcom   QWORD PTR [edx-0x1a]
  41cf51:	sub    al,0xca
  41cf53:	dec    ebp
  41cf54:	jnp    0x41cfc0
  41cf56:	leave  
  41cf57:	jmp    0x41cf24
  41cf59:	dec    ecx
  41cf5a:	adc    DWORD PTR [ebp-0x7eaa277b],0x1c9a5af0
  41cf64:	jmp    0x6547:0xca828261
  41cf6b:	dec    ebx
  41cf6c:	push   ecx
  41cf6d:	mov    WORD PTR [ecx],es
  41cf6f:	and    DWORD PTR [ebp+0x57763985],0x5d4d819e
  41cf79:	in     eax,dx
  41cf7a:	inc    ebx
  41cf7b:	data16 rcl bh,1
  41cf7e:	xchg   ecx,eax
  41cf7f:	sub    edx,DWORD PTR [edx+0x28]
  41cf82:	lods   eax,DWORD PTR ds:[esi]
  41cf83:	cmp    BYTE PTR [esi+0x2e],cl
  41cf86:	stos   BYTE PTR es:[edi],al
  41cf87:	xor    eax,0xa21a2724
  41cf8c:	jns    0x41cf7a
  41cf8e:	das    
  41cf8f:	push   ecx
  41cf90:	popf   
  41cf91:	out    dx,al
  41cf92:	pop    ss
  41cf93:	add    BYTE PTR [esi-0x41],0x84
  41cf97:	xor    BYTE PTR [ebp+edi*1-0x22fd602f],ch
  41cf9e:	ins    BYTE PTR es:[edi],dx
  41cf9f:	imul   esp,DWORD PTR [ebp-0x218f88d3],0x5c7fb582
  41cfa9:	cmp    BYTE PTR [eax+0x57],al
  41cfac:	jne    0x41d001
  41cfae:	mov    cl,0x0
  41cfb0:	add    BYTE PTR [eax],al
  41cfb2:	jnp    0x41cf7d
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0x9f9067d0
  41cfc2:	jno    0x41d00f
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	cmc    
  41cfc7:	add    al,0x0
  41cfc9:	add    BYTE PTR ds:0x63430626,dh
  41cfcf:	pusha  
  41cfd0:	xlat   BYTE PTR ds:[ebx]
  41cfd1:	std    
  41cfd2:	sub    DWORD PTR [eax+ecx*2-0xa6d9f79],eax
  41cfd9:	dec    ebx
  41cfda:	and    BYTE PTR [edx-0x27],0x20
  41cfde:	mov    esp,0x8c9561ad
  41cfe3:	mov    ds:0xf42613b9,al
  41cfe8:	mov    al,ds:0x581cf17c
  41cfed:	repz out dx,eax
  41cfef:	fbstp  TBYTE PTR [eax+0x727e7dfa]
  41cff5:	pop    es
  41cff6:	das    
  41cff7:	adc    al,0x20
  41cff9:	push   ebx
  41cffa:	cld    
  41cffb:	xchg   esi,eax
  41cffc:	add    edi,esp
  41cffe:	fbstp  TBYTE PTR [eax+0x16883309]
  41d004:	mov    ebp,0x2d348ae1
  41d009:	cmp    DWORD PTR [ebp-0x7b],esp
  41d00c:	pop    es
  41d00d:	xor    ebp,DWORD PTR [edi-0x105cd83f]
  41d013:	stc    
  41d014:	cmp    eax,0x236429b2
  41d019:	jge    0x41d055
  41d01b:	into   
  41d01c:	xchg   BYTE PTR ss:[ebx-0x28],al
  41d020:	fidiv  DWORD PTR [esi+0x36]
  41d023:	scas   eax,DWORD PTR es:[edi]
  41d024:	jecxz  0x41cff1
  41d026:	push   ax
  41d028:	in     eax,dx
  41d029:	jge    0x41d051
  41d02b:	push   ebx
  41d02c:	shl    DWORD PTR [edi],0xf1
  41d02f:	ins    DWORD PTR es:[edi],dx
  41d030:	(bad)
  41d033:	pop    ebx
  41d034:	push   edi
  41d035:	arpl   dx,si
  41d037:	jb     0x41cfdb
  41d039:	in     eax,0x47
  41d03b:	lock jl 0x41d027
  41d03e:	xchg   esp,eax
  41d03f:	std    
  41d040:	paddsb mm2,QWORD PTR [edi+0x49]
  41d044:	mov    eax,ds:0x239bfbba
  41d049:	sahf   
  41d04a:	push   eax
  41d04b:	and    DWORD PTR [esi],ebx
  41d04d:	adc    al,0x71
  41d04f:	push   ebx
  41d050:	cmp    cl,BYTE PTR [ebx+0x4f208ab8]
  41d056:	sbb    ah,BYTE PTR [edx+ebp*8+0x7e]
  41d05a:	inc    edx
  41d05b:	call   0xbdae:0xc838b3eb
  41d062:	ins    BYTE PTR es:[edi],dx
  41d063:	sbb    eax,0x5c9c4ad5
  41d068:	cmp    edi,DWORD PTR [ebx-0x368f94ff]
  41d06e:	call   DWORD PTR [edi-0x4d]
  41d071:	in     al,0x7d
  41d073:	rcr    DWORD PTR [edi+0x7e],cl
  41d076:	push   ds
  41d077:	es rcr esp,cl
  41d07a:	scas   eax,DWORD PTR es:[edi]
  41d07b:	mov    esi,0x19edbba7
  41d080:	sub    DWORD PTR [ebx-0x71],edx
  41d083:	div    ah
  41d085:	xchg   ebx,eax
  41d086:	cwde   
  41d087:	jnp    0x41d0dc
  41d089:	mov    dh,dh
  41d08b:	lock jl 0x41d016
  41d08e:	inc    edi
  41d08f:	pop    ss
  41d090:	leave  
  41d091:	xor    al,0x48
  41d093:	out    dx,eax
  41d094:	into   
  41d095:	out    0x6a,eax
  41d097:	gs push ss
  41d099:	scas   eax,DWORD PTR es:[edi]
  41d09a:	lahf   
  41d09b:	lock in al,dx
  41d09d:	sbb    BYTE PTR [ecx],bl
  41d09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0a0:	repz xchg ebp,eax
  41d0a2:	bound  edi,QWORD PTR [ebx-0xb5b8298]
  41d0a8:	lds    esi,FWORD PTR [esi+edi*4+0x1f7a9977]
  41d0af:	dec    ebx
  41d0b0:	sbb    DWORD PTR [edx+0x14],edi
  41d0b3:	fild   DWORD PTR [edx+edi*4+0x6b]
  41d0b7:	push   0x4cf20ec7
  41d0bc:	adc    ah,BYTE PTR [ecx-0x1ab1eb8b]
  41d0c2:	dec    eax
  41d0c3:	add    ecx,DWORD PTR [edi+0x7b]
  41d0c6:	rcl    bh,0x16
  41d0c9:	sbb    al,0xfe
  41d0cb:	push   edx
  41d0cc:	in     eax,dx
  41d0cd:	adc    BYTE PTR [ecx+0x7501376f],0xf4
  41d0d4:	out    dx,eax
  41d0d5:	xor    eax,0xb0ee96ab
  41d0da:	lods   eax,DWORD PTR ds:[esi]
  41d0db:	cmp    al,0x26
  41d0dd:	push   cs
  41d0de:	jecxz  0x41d0dd
  41d0e0:	push   0xffffff8f
  41d0e2:	int    0xf1
  41d0e4:	cmp    al,0xbd
  41d0e6:	stos   BYTE PTR es:[edi],al
  41d0e7:	and    BYTE PTR [esp+eax*8-0x3f],ch
  41d0eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0ec:	xor    eax,0xb15ed355
  41d0f1:	les    edx,FWORD PTR [edi+0x7bb24e02]
  41d0f7:	stos   DWORD PTR es:[edi],eax
  41d0f8:	pop    esp
  41d0f9:	xor    BYTE PTR [edx-0x19],bh
  41d0fc:	pop    ebx
  41d0fd:	stos   BYTE PTR es:[edi],al
  41d0fe:	call   0x30c:0x1841b8ac
  41d105:	sub    eax,0xed22fc88
  41d10a:	loope  0x41d135
  41d10c:	jbe    0x41d13d
  41d10e:	push   edi
  41d10f:	adc    al,0xe6
  41d111:	dec    edi
  41d112:	inc    ebp
  41d113:	aad    0x6c
  41d115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d116:	xchg   esi,eax
  41d117:	fbld   TBYTE PTR [esi]
  41d119:	jae    0x41d199
  41d11b:	retf   
  41d11c:	ins    DWORD PTR es:[edi],dx
  41d11d:	ret    0x1364
  41d120:	and    eax,0xf512bedf
  41d125:	lea    ebx,[ecx-0x5f]
  41d128:	sub    DWORD PTR [esi+esi*1+0x6d],eax
  41d12c:	clc    
  41d12d:	mov    ds:0xe48a8170,eax
  41d132:	dec    edx
  41d133:	je     0x41d158
  41d135:	scas   eax,DWORD PTR es:[edi]
  41d136:	ret    0xb791
  41d139:	xchg   esi,eax
  41d13a:	and    esi,DWORD PTR [esi]
  41d13c:	aas    
  41d13d:	and    bh,BYTE PTR [esi+0x365ca101]
  41d143:	dec    esp
  41d144:	xchg   ebp,eax
  41d145:	jno    0x41d0d8
  41d147:	arpl   WORD PTR [ecx],bx
  41d149:	pop    eax
  41d14a:	hlt    
  41d14b:	aas    
  41d14c:	dec    ecx
  41d14d:	aam    0x3a
  41d14f:	mov    bh,0x94
  41d151:	pop    esi
  41d152:	stc    
  41d153:	cs ret 0x9955
  41d157:	jecxz  0x41d148
  41d159:	sbb    BYTE PTR [ebp+0x30],ch
  41d15c:	pop    edi
  41d15d:	mov    ch,0xd2
  41d15f:	and    eax,0x2cfdf04
  41d164:	xor    al,BYTE PTR [edi+0x3e]
  41d167:	ja     0x41d1e6
  41d169:	add    ebp,DWORD PTR [ebx+0x659f0b3e]
  41d16f:	mov    edi,0x49e56c18
  41d174:	retf   0xbb9c
  41d177:	dec    ecx
  41d178:	push   edx
  41d179:	xchg   edx,eax
  41d17a:	loop   0x41d170
  41d17c:	add    esi,DWORD PTR [esi+0x36]
  41d17f:	jbe    0x41d142
  41d181:	stc    
  41d182:	int    0xc6
  41d184:	adc    al,0x3c
  41d186:	jle    0x41d161
  41d188:	fucom  st(2)
  41d18a:	sub    BYTE PTR [edi+esi*1+0x16b52efa],dh
  41d191:	cmp    ebx,DWORD PTR [esi*2+0x36575840]
  41d198:	clc    
  41d199:	jo     0x41d1a3
  41d19b:	test   DWORD PTR [esi*8-0x1393b04b],eax
  41d1a2:	mov    dl,0xb9
  41d1a4:	mov    ah,bh
  41d1a6:	adc    edx,DWORD PTR [ebx+0x50]
  41d1a9:	push   ecx
  41d1aa:	fwait
  41d1ab:	imul   BYTE PTR [ecx+ecx*1]
  41d1ae:	inc    ebp
  41d1af:	xchg   edi,eax
  41d1b0:	sub    dh,BYTE PTR [ebp-0x33]
  41d1b3:	xor    DWORD PTR [edx-0x5692ab9a],ebp
  41d1b9:	mov    DWORD PTR [ebp+0x2f3ff11c],ebp
  41d1bf:	ret    
  41d1c0:	shr    BYTE PTR [ebp-0x4d],0xec
  41d1c4:	call   0xe862e9fa
  41d1c9:	jno    0x41d17e
  41d1cb:	(bad)  
  41d1cc:	lock dec eax
  41d1ce:	mov    al,ds:0xfcc25f03
  41d1d3:	add    ebx,0x40
  41d1d6:	pop    eax
  41d1d7:	sbb    BYTE PTR [ebp+0x66],al
  41d1da:	cmp    dh,dl
  41d1dc:	mov    ds:0x64a813c2,al
  41d1e1:	loope  0x41d1af
  41d1e3:	push   ebx
  41d1e4:	mov    ebx,DWORD PTR [edi]
  41d1e6:	mov    edi,0xb5181d81
  41d1eb:	lahf   
  41d1ec:	inc    esi
  41d1ed:	call   FWORD PTR [edx+0x6e]
  41d1f0:	retf   
  41d1f1:	sub    ebp,DWORD PTR [ecx]
  41d1f3:	jbe    0x41d235
  41d1f5:	ss iret 
  41d1f7:	mov    al,ds:0xfaf8ca1c
  41d1fc:	ins    BYTE PTR es:[edi],dx
  41d1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1fe:	inc    edi
  41d1ff:	bnd jbe 0x41d1ce
  41d202:	cwde   
  41d203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d204:	pop    eax
  41d205:	xor    DWORD PTR [ebp-0x7a],0x0
  41d209:	mov    BYTE PTR [esi+ebx*2-0x20],al
  41d20d:	xor    al,0xbf
  41d20f:	test   al,0x20
  41d211:	cmc    
  41d212:	js     0x41d25b
  41d214:	aad    0x4
  41d216:	mov    edi,0x15fe2a6b
  41d21b:	loop   0x41d23f
  41d21d:	int    0x94
  41d21f:	xor    DWORD PTR [eax],ecx
  41d221:	push   cs
  41d222:	(bad)  
  41d223:	pop    esi
  41d224:	sar    edx,0x22
  41d227:	out    0x42,eax
  41d229:	push   0xca19f3c2
  41d22e:	(bad)  
  41d22f:	gs ins BYTE PTR es:[edi],dx
  41d231:	out    dx,al
  41d232:	iret   
  41d233:	sbb    eax,0x316802f2
  41d238:	lock jno 0x41d1f4
  41d23b:	ret    
  41d23c:	jmp    0x41d269
  41d23e:	xchg   DWORD PTR [edx-0x1f],edi
  41d241:	pusha  
  41d242:	xchg   DWORD PTR [ecx-0x16557a0d],esp
  41d248:	aas    
  41d249:	repnz rcr ecx,0x6a
  41d24d:	jmp    0xbf4420cf
  41d252:	mov    eax,ds:0x7ca8ee1
  41d257:	mov    dh,0x6c
  41d259:	leave  
  41d25a:	push   0x27b99e31
  41d25f:	sbb    bh,BYTE PTR ds:0xdd187180
  41d265:	xchg   esp,eax
  41d266:	leave  
  41d267:	call   0x9f70078
  41d26c:	jg     0x41d2a1
  41d26e:	push   edi
  41d26f:	mov    cl,0xad
  41d271:	xchg   edx,eax
  41d272:	mov    edi,0x713a4633
  41d277:	out    dx,eax
  41d278:	xchg   ebp,eax
  41d279:	je     0x41d21a
  41d27b:	inc    BYTE PTR [ecx]
  41d27d:	shl    esi,1
  41d27f:	test   DWORD PTR [ecx],edx
  41d281:	leave  
  41d282:	not    edi
  41d284:	push   ds
  41d285:	sub    al,0x75
  41d287:	jmp    0x41d28c
  41d289:	xor    esp,DWORD PTR [edi-0x2d]
  41d28c:	test   BYTE PTR [esi],cl
  41d28e:	pop    esi
  41d28f:	mov    bl,0x92
  41d291:	arpl   WORD PTR [esi-0x2a],dx
  41d294:	and    al,0xe0
  41d296:	repnz add eax,0xd3991fad
  41d29c:	enter  0x949c,0xfe
  41d2a0:	xchg   edi,ebx
  41d2a2:	(bad)  
  41d2a3:	dec    ebp
  41d2a4:	shr    BYTE PTR [edi+edi*4-0x79bdfa81],0x79
  41d2ac:	cmp    DWORD PTR [ecx+eiz*8],0xf2d4a5fd
  41d2b3:	aad    0x43
  41d2b5:	pop    ss
  41d2b6:	fwait
  41d2b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2b8:	sub    esi,DWORD PTR [esi+eax*2]
  41d2bb:	inc    esi
  41d2bc:	cmc    
  41d2bd:	adc    DWORD PTR [eax-0x37],0x7e5a5562
  41d2c4:	push   ebx
  41d2c5:	mov    esi,eax
  41d2c7:	ss xor esi,ecx
  41d2ca:	addr16 daa 
  41d2cc:	adc    dl,BYTE PTR [esi-0x4a]
  41d2cf:	push   0x35
  41d2d1:	aam    0x40
  41d2d3:	retf   
  41d2d4:	lea    esp,[edx-0x696c51fd]
  41d2da:	xor    al,0x8d
  41d2dc:	call   0x5dedd140
  41d2e1:	(bad)  
  41d2e2:	cmp    al,0xcb
  41d2e4:	or     eax,0x4aefe9a7
  41d2e9:	inc    si
  41d2eb:	mov    bl,0x10
  41d2ed:	adc    dh,dl
  41d2ef:	data16 jae 0x41d350
  41d2f2:	retf   
  41d2f3:	or     BYTE PTR [ebx],ah
  41d2f5:	leave  
  41d2f6:	(bad)  
  41d2f8:	or     BYTE PTR [eax],dh
  41d2fa:	sbb    al,0x47
  41d2fc:	pop    ebx
  41d2fd:	lea    esi,[edx]
  41d2ff:	mov    eax,DWORD PTR [edx+ebp*4]
  41d302:	pop    esp
  41d303:	cmp    al,0x56
  41d305:	loop   0x41d31f
  41d307:	sti    
  41d308:	dec    esp
  41d309:	icebp  
  41d30a:	inc    ebp
  41d30b:	push   edi
  41d30c:	loop   0x41d383
  41d30e:	cs adc eax,0x3622edf2
  41d314:	jno    0x41d2f8
  41d316:	lods   eax,DWORD PTR ds:[esi]
  41d317:	leave  
  41d318:	sub    ah,ah
  41d31a:	jns    0x41d2a1
  41d31c:	shl    DWORD PTR [ecx-0xa],0xb3
  41d320:	int3   
  41d321:	mov    ds:0x9723ed43,al
  41d326:	fbld   TBYTE PTR ds:0x9aca4e6b
  41d32d:	dec    DWORD PTR [edx]
  41d32f:	data16 sbb cl,BYTE PTR [ecx-0x78]
  41d333:	lods   al,BYTE PTR ds:[esi]
  41d334:	jl     0x41d327
  41d336:	in     eax,0xec
  41d338:	mov    WORD PTR ds:[ecx-0x1b3d4c65],?
  41d33f:	int3   
  41d340:	or     al,0x4e
  41d342:	cmc    
  41d343:	outs   dx,BYTE PTR ds:[esi]
  41d344:	or     DWORD PTR [esi+0x37],0xbbacd42
  41d34b:	cwde   
  41d34c:	sbb    ecx,esp
  41d34e:	fdiv   QWORD PTR gs:[ebp-0x6a]
  41d352:	fcom   DWORD PTR [edx-0x26]
  41d355:	push   0xe5a8a4f5
  41d35a:	mov    ds:0x15e605c0,al
  41d35f:	xor    ch,BYTE PTR [ecx]
  41d361:	or     BYTE PTR [edx],dl
  41d363:	arpl   WORD PTR [edi],ax
  41d365:	push   ebp
  41d366:	inc    ecx
  41d367:	arpl   bx,dx
  41d369:	add    al,0xd2
  41d36b:	push   eax
  41d36c:	mov    ?,WORD PTR [esi+0x5ca063fb]
  41d372:	frstor [ebx+0x37]
  41d375:	(bad)  
  41d377:	mov    edx,eax
  41d379:	inc    eax
  41d37a:	(bad)  
  41d37b:	dec    edx
  41d37c:	mov    edi,0x41746c41
  41d381:	inc    ebx
  41d382:	shrd   DWORD PTR [edi-0x5df0a8eb],esp,cl
  41d389:	stc    
  41d38a:	test   ebx,0x4f2825a2
  41d390:	std    
  41d391:	pop    esp
  41d392:	xor    dh,BYTE PTR [ebx+0x79]
  41d395:	add    ch,ch
  41d397:	les    ebp,FWORD PTR [ecx]
  41d399:	xchg   edi,eax
  41d39a:	push   0xd1c8059a
  41d39f:	imul   esi,DWORD PTR [ebp-0x69],0x492b75af
  41d3a6:	mov    eax,ds:0x5f05e784
  41d3ab:	cmp    eax,0x233bafaf
  41d3b0:	in     eax,dx
  41d3b1:	out    0x11,al
  41d3b3:	push   0x23
  41d3b5:	push   cs
  41d3b6:	jmp    0x1e9b:0x5fd9b614
  41d3bd:	les    esi,FWORD PTR [ecx]
  41d3bf:	mov    dh,0x59
  41d3c1:	add    eax,0x4b984126
  41d3c6:	aas    
  41d3c7:	inc    eax
  41d3c8:	pop    ebx
  41d3c9:	(bad)  
  41d3ca:	fwait
  41d3cb:	(bad)  
  41d3cc:	cwde   
  41d3cd:	xor    BYTE PTR [edx+0x1ce8e021],dh
  41d3d3:	retf   
  41d3d4:	or     bh,cl
  41d3d6:	adc    ebp,DWORD PTR [edi-0x29]
  41d3d9:	mov    eax,ds:0x189cf5e
  41d3de:	adc    al,0x23
  41d3e0:	jne    0x41d431
  41d3e2:	mov    fs,WORD PTR [esi]
  41d3e4:	mov    edi,ebp
  41d3e6:	in     eax,dx
  41d3e7:	jnp    0x41d390
  41d3e9:	jmp    0x41d3d6
  41d3eb:	out    0xc3,eax
  41d3ed:	mov    esi,0xa35f2f2f
  41d3f2:	mov    eax,ds:0x41c41912
  41d3f7:	enter  0x362d,0x29
  41d3fb:	imul   edi,DWORD PTR [edi],0x15de2ed5
  41d401:	xor    dh,al
  41d403:	pop    esi
  41d404:	stos   BYTE PTR es:[edi],al
  41d405:	(bad)  
  41d406:	and    BYTE PTR [edx+0x7f],dh
  41d409:	scas   al,BYTE PTR es:[edi]
  41d40a:	(bad)  
  41d40b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d40c:	inc    ebx
  41d40d:	rol    BYTE PTR [edi-0x5e288c25],cl
  41d413:	(bad)
  41d416:	jno    0x41d3ad
  41d418:	int    0xec
  41d41a:	mov    edx,0x4b931cd7
  41d41f:	pop    ebp
  41d420:	lock or al,dl
  41d423:	int    0xa4
  41d425:	jnp    0x41d3da
  41d427:	mov    eax,0x5915ed83
  41d42c:	mov    ebp,0x4531b9a6
  41d431:	iret   
  41d432:	mov    BYTE PTR [edx-0xc],cl
  41d435:	dec    eax
  41d436:	jns    0x41d441
  41d438:	dec    esi
  41d439:	stc    
  41d43a:	test   DWORD PTR [ecx+0x14d31c35],0x80751dc4
  41d444:	pushf  
  41d445:	or     cl,BYTE PTR [eax-0x36]
  41d448:	xchg   ebp,eax
  41d449:	cmp    edx,DWORD PTR [edx-0x1b2cb5fc]
  41d44f:	stos   DWORD PTR es:[edi],eax
  41d450:	add    BYTE PTR [ecx+0x7d],0xcc
  41d454:	mov    DWORD PTR [ecx],eax
  41d456:	test   DWORD PTR [ebx-0x62d0e09a],ecx
  41d45c:	pop    ecx
  41d45d:	sbb    BYTE PTR [ebp+0x1],ah
  41d460:	hlt    
  41d461:	ins    BYTE PTR es:[edi],dx
  41d462:	sahf   
  41d463:	adc    al,0x45
  41d465:	push   esp
  41d466:	push   ecx
  41d467:	mov    DWORD PTR [edi],ebx
  41d469:	in     eax,dx
  41d46a:	aaa    
  41d46b:	sbb    ecx,DWORD PTR [ebx+0x35]
  41d46e:	out    0xa6,al
  41d470:	int3   
  41d471:	fadd   DWORD PTR [eax+0x236b812a]
  41d477:	mov    edi,0xb50fcc09
  41d47c:	mov    dl,0x3d
  41d47e:	or     DWORD PTR [edx+0x7a],ecx
  41d481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d482:	lods   eax,DWORD PTR ds:[esi]
  41d483:	(bad)  
  41d484:	xchg   edx,eax
  41d485:	popa   
  41d486:	mov    esi,DWORD PTR [esi+0x353f41a7]
  41d48c:	jp     0x41d4e9
  41d48e:	shr    DWORD PTR [esi+0x48ef5cba],cl
  41d494:	leave  
  41d495:	cwde   
  41d496:	ret    0xa668
  41d499:	(bad)  
  41d49a:	fsubr  QWORD PTR [eax+0x68baf051]
  41d4a0:	(bad)  
  41d4a1:	adc    DWORD PTR [edx-0xf],esp
  41d4a4:	push   eax
  41d4a5:	test   al,0x5b
  41d4a7:	adc    ch,cl
  41d4a9:	in     al,dx
  41d4aa:	cdq    
  41d4ab:	or     dh,BYTE PTR [edx+0x5e853eb]
  41d4b1:	iret   
  41d4b2:	gs mov eax,0x459a07c5
  41d4b8:	push   0x52
  41d4ba:	mov    esp,0x148dec18
  41d4bf:	add    BYTE PTR [eax],al
  41d4c1:	add    dl,ah
  41d4c3:	or     al,BYTE PTR [ecx]
  41d4c5:	xchg   ecx,eax
  41d4c6:	jmp    0xbdbdc766
  41d4cb:	adc    esp,esi
  41d4cd:	pop    edi
  41d4ce:	std    
  41d4cf:	jae    0x41d54b
  41d4d1:	mov    ebx,0x15066
  41d4d6:	cmc    
  41d4d7:	add    al,0x0
  41d4d9:	add    BYTE PTR [ebp-0x4],bh
  41d4dc:	es inc esp
  41d4de:	jp     0x41d4b2
  41d4e0:	sub    BYTE PTR [edx+0x79],cl
  41d4e3:	jmp    0x41d472
  41d4e5:	xchg   BYTE PTR [esi+0x2873a08c],bh
  41d4eb:	jp     0x41d55b
  41d4ed:	out    0x69,eax
  41d4ef:	leave  
  41d4f0:	mov    esi,DWORD PTR [ebx-0x46]
  41d4f3:	xchg   edx,eax
  41d4f4:	stos   BYTE PTR es:[edi],al
  41d4f5:	cmc    
  41d4f6:	enter  0x2cb4,0xdc
  41d4fa:	add    al,0x52
  41d4fc:	and    BYTE PTR ds:0x74c643ae,cl
  41d502:	cmc    
  41d503:	clc    
  41d504:	imul   edx,edi,0x18d0ce0a
  41d50a:	add    eax,0xbbea5b41
  41d50f:	xor    ch,BYTE PTR [eax+0x34]
  41d512:	sar    DWORD PTR [edi+0x1a],1
  41d515:	xchg   esi,eax
  41d516:	mov    ds:0x44f8c584,eax
  41d51b:	nop
  41d51c:	pop    ebx
  41d51d:	je     0x41d4ad
  41d51f:	push   eax
  41d520:	xchg   esi,eax
  41d521:	inc    eax
  41d522:	pop    ss
  41d523:	rol    DWORD PTR [eax-0x7c],cl
  41d526:	(bad)  
  41d527:	retf   0x588e
  41d52a:	and    ah,BYTE PTR [ecx]
  41d52c:	jb     0x41d4e3
  41d52e:	cmp    ebp,0x6143e524
  41d534:	retf   0x781c
  41d537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d538:	into   
  41d539:	lds    ebp,FWORD PTR [esi-0x20fcf913]
  41d53f:	aas    
  41d540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d541:	adc    ah,BYTE PTR [ebx-0x3d594bc4]
  41d547:	mov    eax,ds:0x5c60d4de
  41d54c:	xchg   esi,eax
  41d54d:	mov    bh,0xc3
  41d54f:	sbb    dh,BYTE PTR [ecx+0x13dd3ae7]
  41d555:	adc    DWORD PTR [ebx-0x2ee07b52],esp
  41d55b:	(bad)  
  41d55d:	pusha  
  41d55e:	xchg   edi,eax
  41d55f:	cld    
  41d560:	adc    ebp,ecx
  41d562:	fld    DWORD PTR [ecx]
  41d564:	xchg   ebx,eax
  41d565:	sub    BYTE PTR [ebp+0x2a724f95],ch
  41d56b:	mov    esi,0x170481cb
  41d570:	jp     0x41d5ab
  41d572:	adc    BYTE PTR [edx+eax*4-0x5c],bl
  41d576:	call   0xaf001686
  41d57b:	out    dx,al
  41d57c:	adc    DWORD PTR [ebp+0x69d8c32a],ecx
  41d582:	cmp    DWORD PTR [ebp+0x29dd7054],eax
  41d588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d589:	iret   
  41d58a:	std    
  41d58b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d58c:	pop    esp
  41d58d:	fwait
  41d58e:	sbb    DWORD PTR [esi-0x2b],ebx
  41d591:	xchg   esi,eax
  41d592:	mov    ch,0xae
  41d594:	and    ebx,DWORD PTR [ecx]
  41d596:	sub    al,0xff
  41d598:	push   ebx
  41d599:	test   DWORD PTR [edi+0x49],ebp
  41d59c:	xchg   BYTE PTR [eax+0x3ac1d202],dh
  41d5a2:	cmp    al,0xaa
  41d5a4:	shl    cl,0xc2
  41d5a7:	(bad)  
  41d5a8:	int    0xd7
  41d5aa:	xchg   esp,eax
  41d5ab:	mov    WORD PTR [ecx+0x272169de],fs
  41d5b1:	imul   eax
  41d5b3:	sar    edx,0x60
  41d5b6:	sbb    edi,edi
  41d5b8:	loope  0x41d608
  41d5ba:	push   ds
  41d5bb:	or     edi,DWORD PTR [ecx]
  41d5bd:	add    BYTE PTR [esi-0x4e],dh
  41d5c0:	adc    al,0xb4
  41d5c2:	push   edx
  41d5c3:	inc    edx
  41d5c4:	int    0x58
  41d5c6:	into   
  41d5c7:	(bad)  
  41d5c8:	push   ss
  41d5c9:	pushf  
  41d5ca:	jae    0x41d555
  41d5cc:	sbb    eax,0x5af69917
  41d5d1:	pusha  
  41d5d2:	push   cs
  41d5d3:	mov    dl,0x9
  41d5d5:	mov    bl,0xb3
  41d5d7:	into   
  41d5d8:	inc    edx
  41d5d9:	loopne 0x41d5bc
  41d5db:	mov    ecx,0xcafb5dea
  41d5e0:	lods   al,BYTE PTR ds:[esi]
  41d5e1:	js     0x41d595
  41d5e3:	mov    ah,BYTE PTR [eax+0x446694b2]
  41d5e9:	aaa    
  41d5ea:	xor    DWORD PTR ds:0x1be3f556,0x59
  41d5f1:	sub    dl,BYTE PTR [eax+edi*4]
  41d5f4:	nop
  41d5f5:	jns    0x41d59d
  41d5f7:	xor    eax,0xed9419f7
  41d5fc:	push   esi
  41d5fd:	or     ecx,DWORD PTR [edx]
  41d5ff:	popf   
  41d600:	je     0x41d655
  41d602:	adc    esi,DWORD PTR [esi-0xbca9938]
  41d608:	pop    esp
  41d609:	adc    esp,DWORD PTR [esi+0x6c]
  41d60c:	leave  
  41d60d:	pop    edi
  41d60e:	fst    DWORD PTR [ebp+0x1bf6563b]
  41d614:	mov    eax,ds:0xe16c4ef8
  41d619:	mov    eax,0x6e39d45a
  41d61e:	mov    bh,dl
  41d620:	fsubrp st(0),st
  41d622:	fild   WORD PTR ds:0x315db0a0
  41d628:	fsub   DWORD PTR [eax-0x22]
  41d62b:	inc    esi
  41d62c:	scas   eax,DWORD PTR es:[edi]
  41d62d:	ds nop
  41d62f:	inc    esp
  41d630:	mov    bl,0xda
  41d632:	add    dl,BYTE PTR [eax+eiz*1]
  41d635:	mov    ah,0xfa
  41d637:	push   ebx
  41d638:	mov    ds:0xddfab612,eax
  41d63d:	push   0x20c0c934
  41d642:	jmp    0xabf538e5
  41d647:	call   0xeea32331
  41d64c:	push   esi
  41d64d:	adc    DWORD PTR [esi+0x75a9a3f4],0xca21cb06
  41d657:	shl    BYTE PTR [esi+0x605be27b],0xa4
  41d65e:	(bad)  
  41d65f:	je     0x41d676
  41d661:	mov    cl,0x28
  41d663:	sbb    edi,DWORD PTR [edx]
  41d665:	mov    bh,0xe6
  41d667:	push   0x6fd24227
  41d66c:	mov    esi,0x253246ab
  41d671:	shl    BYTE PTR [eax],cl
  41d673:	adc    eax,0x97ec8fc2
  41d678:	push   0x70
  41d67a:	popf   
  41d67b:	or     BYTE PTR [eax+0x743f580a],dh
  41d681:	sbb    esi,DWORD PTR [ebx]
  41d683:	in     al,dx
  41d684:	ins    BYTE PTR es:[edi],dx
  41d685:	call   0x9d2d1f84
  41d68a:	mov    ds:0x55b5477f,eax
  41d68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d690:	mov    esi,0x5ee8941d
  41d695:	xchg   ebp,eax
  41d696:	add    al,0x5b
  41d698:	push   ecx
  41d699:	cmp    edx,edx
  41d69b:	pop    edi
  41d69c:	cmp    BYTE PTR [ebx+0x5],ch
  41d69f:	cmp    dl,BYTE PTR [ecx+0x41]
  41d6a2:	jp     0x41d6b1
  41d6a4:	test   eax,0xd4e860
  41d6a9:	or     ecx,DWORD PTR [ecx-0x74]
  41d6ac:	and    ebp,DWORD PTR [eax+0x5a3cf362]
  41d6b2:	call   0x1bd3:0xc4c565f2
  41d6b9:	pop    es
  41d6ba:	push   cs
  41d6bb:	and    DWORD PTR [eax],ebx
  41d6bd:	dec    ebx
  41d6be:	sub    ecx,DWORD PTR [esi+0x311a44c8]
  41d6c4:	xchg   esp,eax
  41d6c5:	add    ebp,0xfd336119
  41d6cb:	ins    BYTE PTR es:[edi],dx
  41d6cc:	inc    edi
  41d6cd:	arpl   WORD PTR [edx+ecx*4+0x25],bp
  41d6d1:	jbe    0x41d6f1
  41d6d3:	adc    BYTE PTR [ebx-0x4902e8ee],0xaf
  41d6da:	not    dh
  41d6dc:	cli    
  41d6dd:	add    bl,BYTE PTR [edx+0x438f9fa2]
  41d6e3:	mov    esi,DWORD PTR [edx-0x1d]
  41d6e6:	fistp  QWORD PTR [esi-0x1e]
  41d6e9:	das    
  41d6ea:	sar    DWORD PTR [esi],1
  41d6ec:	inc    ebp
  41d6ed:	call   0x367f:0x27ba3e9c
  41d6f4:	out    0xd7,al
  41d6f6:	mov    cl,0x7f
  41d6f8:	mov    edi,0xea129378
  41d6fd:	int3   
  41d6fe:	jmp    0x41d701
  41d700:	inc    ebp
  41d701:	jmp    0x41d76c
  41d703:	pop    edx
  41d704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d705:	lea    ebx,[ebp+0x52]
  41d708:	vpmulhw ymm3,ymm0,YMMWORD PTR [edi+0x1cf22764]
  41d710:	ss mov esp,0x8adfa22c
  41d716:	pop    esp
  41d717:	jae    0x41d788
  41d719:	inc    ebx
  41d71a:	aaa    
  41d71b:	jmp    0x36cff1fe
  41d720:	mov    dh,0x56
  41d722:	mov    edx,0xa31fbdbe
  41d727:	sub    al,0x16
  41d729:	or     dl,dl
  41d72b:	out    dx,al
  41d72c:	push   esi
  41d72d:	test   eax,0x20114152
  41d732:	out    0xda,al
  41d734:	sbb    eax,0x612b09b2
  41d739:	stc    
  41d73a:	jb     0x41d6f9
  41d73c:	mov    BYTE PTR [ebp+eax*1+0x3b0a218],al
  41d743:	pop    ecx
  41d744:	mov    ?,WORD PTR [esp+eiz*8-0x34]
  41d748:	mov    ecx,0x4dfe224f
  41d74d:	xchg   ebp,eax
  41d74e:	jns    0x41d79d
  41d750:	(bad)  
  41d751:	out    dx,al
  41d752:	jp     0x41d770
  41d754:	dec    edi
  41d755:	and    DWORD PTR [ebx],ebp
  41d757:	pop    ebx
  41d758:	xchg   BYTE PTR [edi-0x1b],cl
  41d75b:	hlt    
  41d75c:	mov    eax,ds:0x86c4d227
  41d761:	enter  0x3c60,0x29
  41d765:	dec    edi
  41d766:	cmc    
  41d767:	jmp    0x1713e27a
  41d76c:	lods   eax,DWORD PTR ds:[esi]
  41d76d:	fisttp DWORD PTR [ebx-0x200edbc6]
  41d773:	lds    ecx,FWORD PTR [ecx+edi*4+0x32]
  41d777:	out    0xcd,al
  41d779:	rol    bl,cl
  41d77b:	mov    ah,0xa9
  41d77d:	cmp    DWORD PTR [eax+ecx*1-0x6964ac29],edi
  41d784:	addr16 cld 
  41d786:	mov    esi,0xdb65c698
  41d78b:	pop    ss
  41d78c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d78d:	mov    bh,0x3f
  41d78f:	xchg   DWORD PTR [edx],edx
  41d791:	sbb    BYTE PTR [ebx-0x3d6708dd],ah
  41d797:	mov    al,0x5d
  41d799:	pop    edi
  41d79a:	js     0x41d7ea
  41d79c:	jle    0x41d796
  41d79e:	imul   edi,DWORD PTR [ecx-0x294f00ab],0x51
  41d7a5:	xor    DWORD PTR [esi],edi
  41d7a7:	push   ebp
  41d7a8:	inc    ebp
  41d7a9:	scas   al,BYTE PTR es:[edi]
  41d7aa:	es mov edx,0x62e93d78
  41d7b0:	add    BYTE PTR [edi+0x8],bl
  41d7b3:	sub    eax,ebx
  41d7b5:	call   0x9602d1d8
  41d7ba:	fld    TBYTE PTR [ebx*4-0x332bc78e]
  41d7c1:	loop   0x41d838
  41d7c3:	(bad)  
  41d7c4:	or     DWORD PTR [ebp-0x6e],ecx
  41d7c7:	add    DWORD PTR [ecx+0x2b8b854a],esp
  41d7cd:	test   DWORD PTR [edi],eax
  41d7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7d0:	test   BYTE PTR [edx],bl
  41d7d2:	xor    al,bl
  41d7d4:	lock sbb BYTE PTR [edx+0x6749e868],dh
  41d7db:	sbb    bl,bl
  41d7dd:	scas   eax,DWORD PTR es:[edi]
  41d7de:	mov    esp,0xcdc3dc92
  41d7e3:	mov    dh,0x90
  41d7e5:	pop    ss
  41d7e6:	adc    ebx,DWORD PTR [edi+ebp*2]
  41d7e9:	mov    ebp,DWORD PTR [edx-0x1ad25331]
  41d7ef:	loop   0x41d7ea
  41d7f1:	inc    edi
  41d7f2:	or     ebx,DWORD PTR [ebp+0x38c0251f]
  41d7f8:	out    0xef,eax
  41d7fa:	js     0x41d7e3
  41d7fc:	sub    al,0x78
  41d7fe:	out    dx,al
  41d7ff:	add    ch,BYTE PTR [esi-0x5a]
  41d802:	mov    ebx,0x852b3b4e
  41d807:	inc    esi
  41d808:	jns    0x41d7d1
  41d80a:	fwait
  41d80b:	jne    0x41d7e0
  41d80d:	mov    ebx,0xb6b5bbae
  41d812:	or     ebp,esi
  41d814:	sub    ecx,DWORD PTR [edi-0xb62d619]
  41d81a:	add    cl,BYTE PTR [edi-0x10]
  41d81d:	pop    es
  41d81e:	adc    cl,BYTE PTR [ebp+0x22]
  41d821:	fistp  WORD PTR [ebp-0x273ba62b]
  41d827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d828:	or     BYTE PTR [ecx],ah
  41d82a:	or     ebx,DWORD PTR [edx+0x38feaff8]
  41d830:	inc    ebx
  41d831:	(bad)  
  41d832:	popf   
  41d833:	xor    al,0x67
  41d835:	push   esi
  41d836:	and    ah,BYTE PTR [ebp-0x3a10eaec]
  41d83c:	mov    bh,ch
  41d83e:	lods   eax,DWORD PTR ds:[esi]
  41d83f:	arpl   WORD PTR [esi],di
  41d841:	dec    edx
  41d842:	mov    dh,0x67
  41d844:	imul   eax,DWORD PTR [esi+edx*2-0x3fb4ff6b],0x63fa50ca
  41d84f:	sub    bl,BYTE PTR [ecx-0x6f]
  41d852:	fldcw  WORD PTR [esi]
  41d854:	out    dx,al
  41d855:	xor    ah,BYTE PTR [esi]
  41d857:	dec    edi
  41d858:	js     0x41d876
  41d85a:	mov    cl,0x94
  41d85c:	cmp    DWORD PTR [eax],ebx
  41d85e:	jl     0x41d81b
  41d860:	jecxz  0x41d8bd
  41d862:	jbe    0x41d848
  41d864:	loop   0x41d8ab
  41d866:	mov    edi,ecx
  41d868:	pop    ds
  41d869:	(bad)  
  41d86a:	cmc    
  41d86b:	inc    esp
  41d86c:	sti    
  41d86d:	jmp    0xc957:0x3b7658fe
  41d874:	test   al,0xa6
  41d876:	loope  0x41d885
  41d878:	jecxz  0x41d871
  41d87a:	or     edx,ecx
  41d87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d87d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d87e:	jmp    0xd26f81ae
  41d883:	call   0x435:0x9864eb5e
  41d88a:	jecxz  0x41d8ab
  41d88c:	int3   
  41d88d:	push   ebx
  41d88e:	sar    DWORD PTR [ebx+esi*1],1
  41d891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d892:	sbb    eax,0xf6914225
  41d897:	mov    ebp,esp
  41d899:	in     eax,dx
  41d89a:	fsub   st(3),st
  41d89c:	dec    esi
  41d89d:	les    ecx,FWORD PTR [ebp-0x37]
  41d8a0:	loope  0x41d895
  41d8a2:	imul   eax,DWORD PTR [edx+0x42da8423],0x8
  41d8a9:	adc    ah,bh
  41d8ab:	mov    eax,ds:0x60da6a8e
  41d8b0:	jl     0x41d8fb
  41d8b2:	(bad)
  41d8b5:	cs pop esp
  41d8b7:	mov    edi,0x30b1059f
  41d8bc:	mov    edx,0xd7b3acc5
  41d8c1:	mov    bl,0x51
  41d8c3:	and    ch,BYTE PTR [esi-0x4a430dd2]
  41d8c9:	fcmovne st,st(3)
  41d8cb:	xchg   ecx,eax
  41d8cc:	fdiv   QWORD PTR [ebx+edi*4+0x6b]
  41d8d0:	aaa    
  41d8d1:	imul   esi,ebx,0x70fb109b
  41d8d7:	mov    BYTE PTR [edx],bl
  41d8d9:	out    0x85,al
  41d8db:	or     DWORD PTR [ebx-0x65e2516c],0xffffffb3
  41d8e2:	cmp    cl,BYTE PTR [ebp+0x5b]
  41d8e5:	ja     0x41d8e5
  41d8e7:	jl     0x41d90e
  41d8e9:	adc    BYTE PTR [edi+esi*2-0x28ed12ac],dh
  41d8f0:	adc    DWORD PTR [esp+eiz*2-0x43325624],edi
  41d8f7:	pusha  
  41d8f8:	push   ds
  41d8f9:	lods   eax,DWORD PTR ds:[esi]
  41d8fa:	fadd   DWORD PTR [esi]
  41d8fc:	pop    esp
  41d8fd:	pop    ebp
  41d8fe:	cmp    DWORD PTR [ebx+0x2b],eax
  41d901:	fadd   st,st(5)
  41d903:	fstp   DWORD PTR [edi+0x1e342bc4]
  41d909:	mov    edx,DWORD PTR gs:[edx]
  41d90c:	jp     0x41d8d1
  41d90e:	scas   eax,DWORD PTR es:[edi]
  41d90f:	je     0x41d97b
  41d911:	add    cl,BYTE PTR [edx+eiz*1-0x3f]
  41d915:	sub    esi,0xfddc0526
  41d91b:	jbe    0x41d8a4
  41d91d:	(bad)  
  41d91e:	sub    dl,bh
  41d920:	mov    ah,0xa2
  41d922:	mov    ebp,0xdf88a360
  41d927:	in     eax,dx
  41d928:	xchg   esp,eax
  41d929:	inc    esi
  41d92a:	cmp    al,0x19
  41d92c:	dec    edx
  41d92d:	xor    BYTE PTR ds:0xff99f1a5,0x57
  41d934:	dec    ecx
  41d935:	cmp    al,0xff
  41d937:	aas    
  41d938:	and    al,0xb0
  41d93a:	lea    ecx,[edx-0x4c]
  41d93d:	jmp    DWORD PTR [esi-0x27]
  41d940:	adc    BYTE PTR [esi],dl
  41d942:	mov    ds:0xe12a034,al
  41d947:	xchg   edx,eax
  41d948:	fbstp  TBYTE PTR [ebx]
  41d94a:	mov    dh,0xbb
  41d94c:	leave  
  41d94d:	mov    WORD PTR [eax+ebp*8],ss
  41d950:	(bad)  
  41d951:	loope  0x41d914
  41d953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d954:	retf   
  41d955:	add    BYTE PTR [ecx+0x6c053b3d],al
  41d95b:	dec    edi
  41d95c:	and    DWORD PTR [ebx-0x44],0x33441584
  41d963:	inc    edi
  41d964:	call   0xf9d9b803
  41d969:	mov    eax,ds:0x6110928e
  41d96e:	lea    esi,[ebx]
  41d970:	xor    ebx,DWORD PTR [ebx-0x2f]
  41d973:	xor    DWORD PTR [edx],edi
  41d975:	repz inc edi
  41d977:	sub    cl,ch
  41d979:	ins    DWORD PTR es:[edi],dx
  41d97a:	adc    al,0xb3
  41d97c:	mov    esi,0xf95fb708
  41d981:	ja     0x41d99d
  41d983:	jb     0x41d944
  41d985:	sub    DWORD PTR [edx+0x1d],ebx
  41d988:	xor    ebx,DWORD PTR [esi+0x20]
  41d98b:	shl    BYTE PTR [ecx+0x741d5055],1
  41d991:	(bad)  
  41d992:	and    edx,DWORD PTR [ecx+0x4088924e]
  41d998:	dec    ebp
  41d999:	in     al,0xd
  41d99b:	inc    eax
  41d99c:	mov    DWORD PTR ds:0x2b435a4a,ebp
  41d9a2:	sbb    eax,0xc2d9e4ad
  41d9a7:	ficomp WORD PTR [ecx]
  41d9a9:	jae    0x41d94b
  41d9ab:	sbb    al,0xb3
  41d9ad:	mov    esp,0x28b16d29
  41d9b2:	and    bh,BYTE PTR [edx]
  41d9b4:	add    al,0x88
  41d9b6:	push   edi
  41d9b7:	pop    ecx
  41d9b8:	xlat   BYTE PTR ds:[ebx]
  41d9b9:	inc    DWORD PTR [edi-0xb]
  41d9bc:	repz jge 0x41d970
  41d9bf:	mul    BYTE PTR [ebp+esi*2-0x1aec3106]
  41d9c6:	js     0x41da3c
  41d9c8:	lahf   
  41d9c9:	pop    ecx
  41d9ca:	and    DWORD PTR [ecx],eax
  41d9cc:	sub    DWORD PTR [esi-0x5],eax
  41d9cf:	add    BYTE PTR [eax],al
  41d9d1:	add    BYTE PTR [esi+0x5e],bl
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	jl     0x41da1e
  41d9e0:	loope  0x41d992
  41d9e2:	pop    ebx
  41d9e3:	push   ebp
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	cmc    
  41d9e7:	add    al,0x0
  41d9e9:	add    BYTE PTR [esi],dh
  41d9eb:	jge    0x41d978
  41d9ed:	mov    BYTE PTR [ebp-0x58],al
  41d9f0:	idiv   DWORD PTR [edi-0x6c68c198]
  41d9f6:	cmc    
  41d9f7:	add    BYTE PTR [edx-0x6c],cl
  41d9fa:	mov    eax,ds:0x607490cd
  41d9ff:	xor    esi,DWORD PTR [esi]
  41da01:	cli    
  41da02:	push   edi
  41da03:	jmp    0x41da23
  41da05:	pop    DWORD PTR [eax]
  41da07:	out    0xbc,eax
  41da09:	sub    al,0xde
  41da0b:	nop
  41da0c:	hlt    
  41da0d:	lock test DWORD PTR [edi+0x1bd9a418],0xfa518130
  41da18:	rcl    DWORD PTR [ebx+0x1e],cl
  41da1b:	push   0x754a65e0
  41da20:	ds sti 
  41da22:	pushf  
  41da23:	xchg   ebx,eax
  41da24:	je     0x41da5b
  41da26:	cmp    dh,BYTE PTR [edx]
  41da28:	push   0xb5e38c74
  41da2d:	mov    dl,0x63
  41da2f:	in     al,0x64
  41da31:	fadd   st(2),st
  41da33:	and    ecx,ebp
  41da35:	push   es
  41da36:	(bad)  
  41da37:	int3   
  41da38:	clc    
  41da39:	inc    ebx
  41da3a:	test   BYTE PTR [edx+0x73f303e2],ch
  41da40:	popa   
  41da41:	mov    ?,ecx
  41da43:	out    dx,eax
  41da44:	jecxz  0x41da3a
  41da46:	outs   dx,BYTE PTR ds:[esi]
  41da47:	mov    eax,0x286c9d1
  41da4c:	add    al,0xe7
  41da4e:	pop    es
  41da4f:	nop    esp
  41da52:	pusha  
  41da53:	pushf  
  41da54:	fistp  QWORD PTR [edi]
  41da56:	jmp    0x41da95
  41da58:	ror    DWORD PTR [edx+ecx*8+0x29],1
  41da5c:	mov    dh,0xec
  41da5e:	push   ss
  41da5f:	mov    BYTE PTR [esi+0xe],bl
  41da62:	jmp    0xef245ce2
  41da67:	hlt    
  41da68:	push   esi
  41da69:	sbb    eax,0xddd05c03
  41da6e:	jne    0x41da32
  41da70:	mov    ds:0x27e18836,al
  41da75:	cmp    BYTE PTR [esi],ah
  41da77:	ins    BYTE PTR es:[edi],dx
  41da78:	aam    0x5b
  41da7a:	cmp    al,0xc0
  41da7c:	fadd   QWORD PTR [ebx+0x3f]
  41da7f:	daa    
  41da80:	dec    ebx
  41da81:	pop    ss
  41da82:	and    eax,0xad494314
  41da87:	lahf   
  41da88:	add    al,0xd2
  41da8a:	pop    edi
  41da8b:	adc    al,dh
  41da8d:	call   0x2611:0xa3367e06
  41da94:	cmp    BYTE PTR [edi+0x18],dh
  41da97:	(bad)  
  41da99:	push   es
  41da9a:	cwd    
  41da9c:	icebp  
  41da9d:	cmp    dh,BYTE PTR [esp+ebp*2-0x76]
  41daa1:	jno    0x41db14
  41daa3:	dec    ecx
  41daa4:	cwde   
  41daa5:	leave  
  41daa6:	in     al,dx
  41daa7:	adc    esp,edi
  41daa9:	fisubr WORD PTR [edx-0x12]
  41daac:	sahf   
  41daad:	es mov esp,0x7a29a0c1
  41dab3:	mov    WORD PTR [esi-0x3d],ds
  41dab6:	lock ret 0x1e33
  41daba:	mov    bh,0x34
  41dabc:	clc    
  41dabd:	mov    dl,0xd9
  41dabf:	push   ecx
  41dac0:	sahf   
  41dac1:	xchg   ebx,eax
  41dac2:	or     BYTE PTR [ecx],cl
  41dac4:	lods   al,BYTE PTR ds:[esi]
  41dac5:	stc    
  41dac6:	fdiv   DWORD PTR [edx+0x5362593a]
  41dacc:	fldcw  WORD PTR [ebx-0x4b0a89c5]
  41dad2:	and    eax,0xc7e4bee7
  41dad7:	dec    ebp
  41dad8:	test   bl,cl
  41dada:	popa   
  41dadb:	out    0xa5,al
  41dadd:	add    eax,0x3ebfb4d9
  41dae2:	or     esp,DWORD PTR [ebx+0x20ed5099]
  41dae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dae9:	and    al,BYTE PTR ds:0x1fe092a1
  41daef:	retf   0xaaed
  41daf2:	add    esi,edx
  41daf4:	popf   
  41daf5:	pop    ds
  41daf6:	pop    ebp
  41daf7:	ins    DWORD PTR es:[edi],dx
  41daf8:	jg     0x41dafd
  41dafa:	mov    ecx,0xab5d9882
  41daff:	pop    eax
  41db00:	jg     0x41db81
  41db02:	sbb    al,0x1e
  41db04:	aas    
  41db05:	inc    ebx
  41db06:	cmp    eax,0x51c83376
  41db0b:	mov    edi,0x5813f292
  41db10:	leave  
  41db11:	neg    cl
  41db13:	fwait
  41db14:	jecxz  0x41daf5
  41db16:	and    dl,BYTE PTR [edx]
  41db18:	in     eax,0x5b
  41db1a:	sub    DWORD PTR [edx],esi
  41db1c:	cli    
  41db1d:	mov    BYTE PTR [esi+0x136c6167],ch
  41db23:	or     BYTE PTR [ebp-0x45],al
  41db26:	jns    0x41db8c
  41db28:	sub    eax,0x53ce360d
  41db2d:	in     al,dx
  41db2e:	daa    
  41db2f:	retf   0x5876
  41db32:	xor    BYTE PTR [edx+0x38],bl
  41db35:	pcmpgtb mm7,QWORD PTR [eax-0x42]
  41db39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db3a:	repz leave 
  41db3c:	daa    
  41db3d:	lea    ecx,[ebx+0x577871f3]
  41db43:	cli    
  41db44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db45:	nop
  41db46:	ficom  WORD PTR [edx]
  41db48:	dec    esp
  41db49:	push   eax
  41db4a:	jbe    0x41db67
  41db4c:	fsubr  DWORD PTR ss:[ebp+0x3c]
  41db50:	call   0xeae4:0x813c72fa
  41db57:	fistp  WORD PTR [ebx+0x595c418f]
  41db5d:	add    ah,0x3a
  41db60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db61:	push   ebp
  41db62:	and    al,0x42
  41db64:	enter  0x14b3,0xb
  41db68:	fdiv   DWORD PTR [edi+esi*4+0x7f]
  41db6c:	cmp    eax,edi
  41db6e:	cs jp  0x41db6d
  41db71:	xor    ebp,DWORD PTR [ebx-0x5b3a49c]
  41db77:	and    eax,0x4aa1abef
  41db7c:	mov    BYTE PTR [edx-0x22808746],ch
  41db82:	scas   eax,DWORD PTR es:[edi]
  41db83:	icebp  
  41db84:	add    BYTE PTR [edi-0x65],dh
  41db87:	jp     0x41dbd7
  41db89:	jno    0x41db83
  41db8b:	(bad)  
  41db8c:	retf   
  41db8d:	int    0x4b
  41db8f:	ja     0x41dbf2
  41db91:	ror    dl,0xe
  41db94:	mov    al,ds:0xe2f9b98b
  41db99:	mov    bl,0x77
  41db9b:	jle    0x41db77
  41db9d:	sub    dh,BYTE PTR [ebx+0x74]
  41dba0:	or     edx,DWORD PTR ds:[eax-0x66]
  41dba4:	cld    
  41dba5:	sbb    BYTE PTR [esi-0x45],al
  41dba8:	push   esp
  41dba9:	jo     0x41dbd1
  41dbab:	iret   
  41dbac:	pop    ebx
  41dbad:	mov    cl,0x89
  41dbaf:	mov    cl,0x4c
  41dbb1:	pop    esp
  41dbb2:	cmp    BYTE PTR [esi+0x13df6172],bh
  41dbb8:	out    0xc0,eax
  41dbba:	addr16 leave 
  41dbbc:	xchg   esi,eax
  41dbbd:	mov    dh,0xc6
  41dbbf:	cmp    eax,0x1b5d32e3
  41dbc4:	jno    0x41dbb0
  41dbc6:	sub    BYTE PTR ds:0xe2731064,bh
  41dbcc:	scas   eax,DWORD PTR es:[edi]
  41dbcd:	fdiv   QWORD PTR [eax]
  41dbcf:	adc    al,dh
  41dbd1:	(bad)  
  41dbd2:	jno    0x41db95
  41dbd4:	pop    edi
  41dbd5:	mov    esp,0x65debd76
  41dbda:	js     0x41dbee
  41dbdc:	(bad)  
  41dbdd:	cwde   
  41dbde:	jg     0x41db9b
  41dbe0:	loopne 0x41dbbc
  41dbe2:	pop    edx
  41dbe3:	popf   
  41dbe4:	(bad)  
  41dbe5:	stos   BYTE PTR es:[edi],al
  41dbe6:	(bad)  
  41dbe7:	mov    bh,0xa8
  41dbe9:	jecxz  0x41dc63
  41dbeb:	adc    ebx,DWORD PTR ds:0x28f4e029
  41dbf1:	pop    esp
  41dbf2:	mov    cl,0xd3
  41dbf4:	adc    bh,BYTE PTR [ecx+0x6092fd55]
  41dbfa:	xor    dh,0x4b
  41dbfd:	cs aas 
  41dbff:	in     eax,dx
  41dc00:	les    ebp,FWORD PTR [ebx+edx*4+0x63]
  41dc04:	loopne 0x41dc53
  41dc06:	pop    es
  41dc07:	mov    dl,0x57
  41dc09:	ds in  al,dx
  41dc0b:	cmp    al,0x98
  41dc0d:	inc    ecx
  41dc0e:	jecxz  0x41dc75
  41dc10:	or     al,0xbc
  41dc12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc13:	mov    edi,0x73b3ec57
  41dc18:	sbb    edi,DWORD PTR [esi+0x62d12451]
  41dc1e:	mov    ds:0x7ca946a8,eax
  41dc23:	ror    BYTE PTR [eax-0x74],0xdd
  41dc27:	leave  
  41dc28:	jae    0x41dbce
  41dc2a:	hlt    
  41dc2b:	ja     0x41dbaf
  41dc2d:	je     0x41dbc1
  41dc2f:	adc    DWORD PTR [ebp-0x67576776],esi
  41dc35:	inc    edx
  41dc36:	mov    WORD PTR [ecx+0x55],ds
  41dc39:	mov    bl,0x10
  41dc3b:	ror    DWORD PTR [ecx],cl
  41dc3d:	bound  edi,QWORD PTR [ecx]
  41dc3f:	je     0x41dbd5
  41dc41:	or     bl,ah
  41dc43:	adc    BYTE PTR [eax-0x766aee68],dl
  41dc49:	mov    dl,0x2a
  41dc4b:	in     eax,dx
  41dc4c:	dec    edi
  41dc4d:	push   esi
  41dc4e:	xchg   edx,eax
  41dc4f:	pop    ebp
  41dc50:	or     al,0x4e
  41dc52:	jmp    0x1a800864
  41dc57:	iret   
  41dc58:	push   ebx
  41dc59:	mov    ch,0x93
  41dc5b:	arpl   WORD PTR [eax+0x31],cx
  41dc5e:	imul   ecx,DWORD PTR [ebx],0x925c9860
  41dc64:	int    0xba
  41dc66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc67:	sbb    eax,0x885ae4ab
  41dc6c:	ins    DWORD PTR es:[edi],dx
  41dc6d:	adc    ch,BYTE PTR [ecx-0xd]
  41dc70:	dec    ebp
  41dc71:	jmp    0x41dc94
  41dc73:	sti    
  41dc74:	les    esi,FWORD PTR [edi-0x1488c35b]
  41dc7a:	or     bh,bh
  41dc7c:	or     esi,esi
  41dc7e:	inc    ecx
  41dc7f:	xchg   DWORD PTR [edi+0x58],ebp
  41dc82:	mov    edi,ebx
  41dc84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc85:	daa    
  41dc86:	push   edi
  41dc87:	sub    DWORD PTR [ebx],eax
  41dc89:	mov    edx,esi
  41dc8b:	xlat   BYTE PTR ds:[ebx]
  41dc8c:	xor    al,0xcd
  41dc8e:	cmp    ah,BYTE PTR [esi]
  41dc90:	xor    bl,BYTE PTR [ebx-0x39]
  41dc93:	mov    bl,0x8e
  41dc95:	cmp    DWORD PTR [esi-0x7d],edx
  41dc98:	dec    ebx
  41dc99:	shl    esp,0xbe
  41dc9c:	icebp  
  41dc9d:	mov    esi,0x76afc90e
  41dca2:	push   esp
  41dca3:	leave  
  41dca4:	cli    
  41dca5:	mov    ebx,DWORD PTR [ecx]
  41dca7:	sbb    DWORD PTR [eax-0x7c],eax
  41dcaa:	or     bh,BYTE PTR [esi+0x16304350]
  41dcb0:	mov    ch,0xc4
  41dcb2:	scas   al,BYTE PTR es:[edi]
  41dcb3:	mov    ax,fs:0xddfc3b16
  41dcba:	dec    esp
  41dcbb:	cdq    
  41dcbc:	push   0xffffffdc
  41dcbe:	test   eax,0xd2ce54b5
  41dcc3:	imul   esi,DWORD PTR [eax],0xf231305d
  41dcc9:	fidiv  WORD PTR [edi-0x4180ea3a]
  41dccf:	cld    
  41dcd0:	cmp    al,0x7f
  41dcd2:	jb     0x41dc9f
  41dcd4:	cmp    ebp,0x1e
  41dcd7:	or     BYTE PTR fs:[ebx],bl
  41dcda:	xor    al,0x79
  41dcdc:	(bad)  
  41dcdd:	(bad)  
  41dcde:	and    eax,0x8b32859a
  41dce3:	jnp    0x41dcd5
  41dce5:	shl    BYTE PTR [ecx+0x4a],cl
  41dce8:	aaa    
  41dce9:	jmp    0xc787f60b
  41dcee:	pop    ecx
  41dcef:	push   edx
  41dcf0:	mov    ds:0x549e0b69,al
  41dcf5:	sbb    al,0x37
  41dcf7:	imul   ecx,DWORD PTR [esi],0x6e
  41dcfa:	xchg   edx,eax
  41dcfb:	cmp    DWORD PTR [eax+0x21b9fafe],eax
  41dd01:	hlt    
  41dd02:	pop    ss
  41dd03:	int3   
  41dd04:	daa    
  41dd05:	(bad)  
  41dd06:	test   dl,0x8b
  41dd09:	cmp    al,0xd8
  41dd0b:	in     al,0x4c
  41dd0d:	lods   al,BYTE PTR ds:[esi]
  41dd0f:	hlt    
  41dd10:	scas   eax,DWORD PTR es:[edi]
  41dd11:	pushf  
  41dd12:	sub    BYTE PTR [esi+0x56],al
  41dd15:	add    al,0xc9
  41dd17:	jmp    0x41dccd
  41dd19:	add    al,0x51
  41dd1b:	mov    dl,0x88
  41dd1d:	sbb    al,bl
  41dd1f:	pushw  cs
  41dd21:	hlt    
  41dd22:	and    esi,DWORD PTR [edi-0x5dd98453]
  41dd28:	les    edx,FWORD PTR [ebx-0x40519900]
  41dd2e:	pop    ebp
  41dd2f:	push   edx
  41dd31:	xor    DWORD PTR [ebx-0x7f],ebx
  41dd34:	sub    DWORD PTR ds:0x4c47cd74,edi
  41dd3a:	add    BYTE PTR [eax-0x10dc6392],ch
  41dd40:	jno    0x41dd5d
  41dd42:	(bad)  
  41dd43:	jg     0x41dd2a
  41dd45:	jmp    0xc94af9ca
  41dd4a:	dec    edi
  41dd4b:	sbb    eax,0x55a23631
  41dd50:	push   0x5f
  41dd52:	xlat   BYTE PTR ds:[ebx]
  41dd53:	pop    edi
  41dd54:	sub    al,0x3e
  41dd56:	hlt    
  41dd57:	or     al,0xb4
  41dd59:	jno    0x41dd34
  41dd5b:	call   0xab61b8f6
  41dd60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd61:	sbb    BYTE PTR [edx-0x447ba7a6],bh
  41dd67:	and    eax,0xfbdc817b
  41dd6c:	xchg   edx,eax
  41dd6d:	pop    edi
  41dd6e:	dec    ebx
  41dd6f:	data16 jle 0x41dd51
  41dd72:	stos   BYTE PTR es:[edi],al
  41dd73:	jp     0x41ddcf
  41dd75:	aaa    
  41dd76:	scas   eax,DWORD PTR es:[edi]
  41dd77:	mov    ss,WORD PTR [esi]
  41dd79:	jmp    0x8c2c488a
  41dd7e:	cmp    al,BYTE PTR [eax+edi*8+0x19]
  41dd82:	xor    edx,ebx
  41dd84:	dec    ebp
  41dd85:	add    ebp,DWORD PTR [edx-0x48]
  41dd88:	add    edi,DWORD PTR [eax+0x2ad5501d]
  41dd8e:	aaa    
  41dd8f:	xchg   ecx,eax
  41dd90:	jmp    0x44adbafe
  41dd95:	xchg   esp,eax
  41dd96:	mov    al,ds:0x5bb1f4a4
  41dd9b:	xor    esp,edx
  41dd9d:	xchg   esp,eax
  41dd9e:	fdiv   QWORD PTR [ebx+0x78]
  41dda1:	mov    ebx,0x7f726ca2
  41dda6:	mov    gs,WORD PTR [ecx+0x34e1ebfb]
  41ddac:	mov    dl,0x87
  41ddae:	jg     0x41ddaa
  41ddb0:	push   esp
  41ddb1:	imul   esi,DWORD PTR [ebp-0x6f158d0d],0x9f1ea0b2
  41ddbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddbc:	fcmovu st,st(0)
  41ddbe:	in     eax,0xa8
  41ddc0:	adc    DWORD PTR [edx+edx*2-0x4f],ecx
  41ddc4:	sub    ch,dh
  41ddc6:	js     0x41dd8e
  41ddc8:	xchg   DWORD PTR [edx+0x27],eax
  41ddcb:	mov    al,0x9f
  41ddcd:	or     cl,BYTE PTR [ecx]
  41ddcf:	div    DWORD PTR [bp-0x35]
  41ddd3:	xchg   ecx,eax
  41ddd4:	iret   
  41ddd5:	inc    cx
  41ddd7:	jg     0x41dd7f
  41ddd9:	mov    ah,0x59
  41dddb:	ds mov ch,0xe1
  41ddde:	aaa    
  41dddf:	fistp  WORD PTR [edx-0x41]
  41dde2:	cmp    DWORD PTR [edx-0x18],ebp
  41dde5:	ja     0x41dd85
  41dde7:	jo     0x41dda7
  41dde9:	mov    dl,0x3f
  41ddeb:	add    dl,BYTE PTR [edx+0xe35b54b]
  41ddf1:	fs cld 
  41ddf3:	fsub   st,st(4)
  41ddf5:	xchg   ecx,eax
  41ddf6:	jp     0x41de2e
  41ddf8:	sub    eax,0x5743dd64
  41ddfd:	out    dx,al
  41ddfe:	pushf  
  41ddff:	jg     0x41de0a
  41de01:	stos   DWORD PTR es:[edi],eax
  41de02:	fwait
  41de03:	mov    ah,0x83
  41de05:	sub    BYTE PTR [edx-0x7],cl
  41de08:	xchg   ebp,eax
  41de09:	test   eax,0x728a5916
  41de0e:	test   DWORD PTR [edi],edi
  41de10:	push   cs
  41de11:	xlat   BYTE PTR ds:[ebx]
  41de12:	fs or  al,0xe2
  41de15:	inc    edx
  41de16:	push   ds
  41de17:	icebp  
  41de18:	xchg   ecx,eax
  41de19:	in     al,dx
  41de1a:	jp     0x41de91
  41de1c:	mov    bh,0xd
  41de1e:	test   eax,0xcad0e10e
  41de23:	cmp    BYTE PTR [edi+0x5e840c59],ah
  41de29:	int    0x8d
  41de2b:	popw   ds
  41de2d:	dec    eax
  41de2e:	pop    ds
  41de2f:	pusha  
  41de30:	lea    esi,[esi+0x288786f1]
  41de36:	mov    cl,0x87
  41de38:	out    0xa5,al
  41de3a:	and    al,0xb6
  41de3c:	mov    esi,?
  41de3e:	jmp    0x4358e85f
  41de43:	imul   edi,DWORD PTR [edx+0x3d],0xffffffba
  41de47:	push   ebp
  41de48:	call   FWORD PTR [edx+edi*1-0xe694d3b]
  41de4f:	int    0xd7
  41de51:	retf   0xba69
  41de54:	add    eax,0xed8d6033
  41de59:	xor    DWORD PTR [edx-0x41451f83],edi
  41de5f:	ds push es
  41de61:	fnstsw WORD PTR [ecx+0x5168292b]
  41de67:	sti    
  41de68:	jbe    0x41de5d
  41de6a:	xchg   edi,eax
  41de6b:	cmp    edi,eax
  41de6d:	xor    eax,0x1e4bbca9
  41de72:	push   edx
  41de73:	idiv   ebx
  41de75:	(bad)  
  41de76:	es (bad) 
  41de78:	fisub  WORD PTR [edi+0xa8263bc]
  41de7e:	js     0x41deb3
  41de80:	sub    eax,0x5843fdf7
  41de85:	and    bh,BYTE PTR [eax+0x2e]
  41de88:	and    eax,0x3b7b26e2
  41de8d:	ret    0x3051
  41de90:	daa    
  41de91:	mov    bh,0xfe
  41de93:	sub    BYTE PTR [edx+0x19e8ad02],bh
  41de99:	data16 cmp al,0x63
  41de9c:	popf   
  41de9d:	cmp    dl,BYTE PTR [edx]
  41de9f:	repz mov ebp,0x532bb390
  41dea5:	jb     0x41de71
  41dea7:	retf   
  41dea8:	jmp    0x41ded2
  41deaa:	std    
  41deab:	addr16 clc 
  41dead:	dec    ebx
  41deae:	cdq    
  41deaf:	js     0x41de49
  41deb1:	clc    
  41deb2:	sbb    ecx,DWORD PTR ds:0x3839c066
  41deb8:	dec    edi
  41deb9:	test   eax,0x9048161c
  41debe:	repz adc eax,0x3159bcfd
  41dec4:	(bad)  
  41dec5:	js     0x41de64
  41dec7:	cwde   
  41dec8:	or     eax,0xbda70010
  41decd:	(bad)  
  41dece:	sti    
  41decf:	fimul  DWORD PTR [edx+0x72]
  41ded2:	stos   DWORD PTR es:[edi],eax
  41ded3:	addr16 std 
  41ded5:	dec    eax
  41ded6:	push   ss
  41ded7:	fistp  WORD PTR [ebx+0x5beaeaad]
  41dedd:	fiadd  WORD PTR es:[eax]
  41dee0:	add    BYTE PTR [eax],al
  41dee2:	loope  0x41de68
  41dee4:	xchg   al,dh
  41dee6:	out    0xf2,eax
  41dee8:	not    DWORD PTR [ebp-0x25c4ffdf]
  41deee:	and    BYTE PTR [edi+eax*1-0x5f],bh
  41def2:	push   eax
  41def3:	pop    edx
  41def4:	add    DWORD PTR [eax],eax
  41def6:	cmc    
  41def7:	add    al,0x0
  41def9:	add    BYTE PTR [esi-0x26],dh
  41defc:	sbb    bl,bh
  41defe:	int    0x50
  41df00:	push   ebp
  41df01:	or     edi,DWORD PTR [edi-0x5a]
  41df04:	push   ss
  41df05:	jae    0x41de92
  41df07:	(bad)  
  41df08:	push   esi
  41df09:	add    bl,bh
  41df0b:	leave  
  41df0c:	imul   DWORD PTR [eax]
  41df0e:	and    al,0x55
  41df10:	outs   dx,BYTE PTR ds:[esi]
  41df11:	inc    esp
  41df12:	xchg   edx,eax
  41df13:	and    al,0xd7
  41df15:	in     eax,0xa2
  41df17:	cmp    BYTE PTR [edi-0x71],dl
  41df1a:	ds xchg ebx,eax
  41df1c:	leave  
  41df1d:	test   al,0xc3
  41df1f:	popa   
  41df20:	(bad)  
  41df22:	in     eax,dx
  41df23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df24:	add    ch,cl
  41df26:	jae    0x41df59
  41df28:	xchg   ebx,eax
  41df29:	daa    
  41df2a:	adc    BYTE PTR [edi],0x10
  41df2d:	push   es
  41df2e:	popa   
  41df2f:	mov    dl,BYTE PTR [ecx-0x43]
  41df32:	iret   
  41df33:	jg     0x41dfa5
  41df35:	pop    eax
  41df36:	pop    ebx
  41df37:	push   ebp
  41df38:	jle    0x41df59
  41df3a:	sub    BYTE PTR [ecx-0x40ac93df],ah
  41df40:	test   DWORD PTR gs:[ecx],0xa6c1b259
  41df47:	cmp    DWORD PTR [eax+0x3e95c01],edx
  41df4d:	sbb    BYTE PTR [eax-0x43780a46],ch
  41df53:	and    eax,0x752350be
  41df58:	ror    DWORD PTR [ebx],1
  41df5a:	loopne 0x41dfdb
  41df5c:	and    BYTE PTR [esi],bh
  41df5e:	int    0x2d
  41df60:	push   cs
  41df61:	inc    esp
  41df62:	retf   
  41df63:	sub    ch,BYTE PTR [ebp-0x3]
  41df66:	sub    esp,DWORD PTR [esi+eiz*8+0x1e7eeb5e]
  41df6d:	(bad)  
  41df6e:	or     cl,BYTE PTR [ebp+0x2b]
  41df71:	out    dx,eax
  41df72:	fdiv   DWORD PTR [ebp-0xa]
  41df75:	leave  
  41df76:	inc    esp
  41df77:	mov    ds:0xbc21616,al
  41df7c:	inc    edi
  41df7d:	inc    ebx
  41df7e:	ins    DWORD PTR es:[edi],dx
  41df7f:	nop
  41df80:	sar    edx,1
  41df82:	mov    eax,0xc39e3eeb
  41df87:	shr    BYTE PTR [edx+eiz*1-0x79],0xfd
  41df8c:	xchg   ebx,eax
  41df8d:	sahf   
  41df8e:	enter  0x3512,0x4c
  41df92:	cli    
  41df93:	pop    edx
  41df94:	popf   
  41df95:	or     DWORD PTR [edx-0xa10084e],esi
  41df9b:	(bad)  
  41df9c:	sbb    ebp,ecx
  41df9e:	arpl   WORD PTR [ecx-0x5a],cx
  41dfa1:	sub    al,0xbe
  41dfa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfa4:	xor    al,0x47
  41dfa6:	pop    esi
  41dfa7:	inc    ebx
  41dfa8:	pop    ecx
  41dfa9:	outs   dx,DWORD PTR ds:[esi]
  41dfaa:	jns    0x41df74
  41dfac:	imul   DWORD PTR [ebp+0x19]
  41dfaf:	clc    
  41dfb0:	dec    eax
  41dfb1:	mov    edi,0x2d51e7cd
  41dfb6:	in     eax,dx
  41dfb7:	aaa    
  41dfb8:	mov    dl,0x0
  41dfba:	fild   QWORD PTR [edx-0x60]
  41dfbd:	ret    
  41dfbe:	loop   0x41df50
  41dfc0:	add    BYTE PTR [edi+0x64],0xf6
  41dfc4:	mov    ah,0xd6
  41dfc6:	int3   
  41dfc7:	push   ss
  41dfc8:	adc    BYTE PTR [edx],ah
  41dfca:	sbb    eax,0x8c4a41b4
  41dfd0:	loopne 0x41e036
  41dfd2:	outs   dx,DWORD PTR ds:[esi]
  41dfd3:	adc    eax,0x5c1ab980
  41dfd8:	mov    eax,ds:0xe7036606
  41dfdd:	dec    ebp
  41dfde:	fwait
  41dfdf:	mov    BYTE PTR [ebx+esi*2-0x4cebf933],dh
  41dfe6:	cmp    ebp,DWORD PTR [ebx+0x2ef7ff2]
  41dfec:	jne    0x41df7e
  41dfee:	jl     0x41dfb1
  41dff0:	arpl   WORD PTR [edi-0x1b],sp
  41dff3:	mov    bh,0x6e
  41dff5:	pop    ebx
  41dff6:	add    DWORD PTR [ebx+ebx*2+0x2c],esp
  41dffa:	cmp    BYTE PTR [eax+0xc],ah
  41dffd:	mov    ah,0xca
  41dfff:	inc    ebx
  41e000:	jbe    0x41dff0
  41e002:	(bad)  
  41e003:	aas    
  41e004:	sti    
  41e005:	adc    ebx,DWORD PTR [ebx]
  41e007:	jle    0x41dfe8
  41e009:	fs cld 
  41e00b:	test   al,0x74
  41e00d:	bound  ebx,QWORD PTR [eax-0x27]
  41e010:	inc    esp
  41e011:	mov    cl,0x78
  41e013:	ja     0x41e082
  41e015:	xchg   ecx,eax
  41e016:	pop    ebx
  41e017:	es aam 0x92
  41e01a:	stos   BYTE PTR es:[edi],al
  41e01b:	iret   
  41e01c:	cmp    BYTE PTR [edi],ah
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   ebp
  41e021:	push   edi
  41e022:	xor    al,0x63
  41e024:	push   edi
  41e025:	mov    BYTE PTR [ecx+0x12eceb18],cl
  41e02b:	in     eax,0xbe
  41e02d:	pop    eax
  41e02e:	adc    eax,DWORD PTR es:[ecx+edx*4-0x33]
  41e033:	xor    al,0xd1
  41e035:	imul   esp,DWORD PTR [edi+0x11c4f9bd],0x6778b1c3
  41e03f:	add    esi,esp
  41e041:	test   DWORD PTR [esi],esi
  41e043:	mov    esi,0x708f0a3c
  41e048:	or     eax,0xa899bd3f
  41e04d:	popf   
  41e04e:	or     edi,DWORD PTR [ebp+0x49]
  41e051:	jne    0x41e038
  41e053:	jns    0x41e009
  41e055:	inc    esp
  41e056:	mov    esp,0x4b53d1df
  41e05b:	pop    ss
  41e05c:	aam    0x8f
  41e05e:	inc    esi
  41e05f:	jbe    0x41e094
  41e061:	cmp    DWORD PTR [ebp+ebx*4+0x516aab16],esp
  41e068:	aaa    
  41e069:	mov    ebx,DWORD PTR [eax+0x3f6a1f10]
  41e06f:	into   
  41e070:	(bad)  
  41e071:	ds loope 0x41e000
  41e074:	call   0xc6c6:0x921da17d
  41e07b:	fisubr WORD PTR ds:0xaac5383b
  41e081:	mov    DWORD PTR [eax],edx
  41e083:	add    DWORD PTR ds:0x444304a1,0x7b6ac934
  41e08d:	push   0x6d
  41e08f:	das    
  41e090:	xor    cl,cl
  41e092:	call   0xb6df7452
  41e097:	fld    QWORD PTR [esi+ebp*8]
  41e09a:	cmp    DWORD PTR [ecx+0x37],ebp
  41e09d:	(bad)  
  41e09e:	push   0x2a
  41e0a0:	mov    esi,DWORD PTR [esi]
  41e0a2:	inc    eax
  41e0a3:	or     eax,0xb7aee78b
  41e0a8:	stos   DWORD PTR es:[edi],eax
  41e0a9:	or     ecx,DWORD PTR [edx+0x20219ef6]
  41e0af:	sub    al,0x99
  41e0b1:	push   0xcb2853b7
  41e0b6:	jbe    0xab031645
  41e0bc:	stos   DWORD PTR es:[edi],eax
  41e0bd:	push   0x66
  41e0bf:	cmp    dl,al
  41e0c1:	data16 cmp cl,BYTE PTR ss:[edi+ebx*8+0x5f6db0]
  41e0ca:	js     0x41e0d3
  41e0cc:	repz iret 
  41e0ce:	dec    esi
  41e0cf:	in     al,0x5a
  41e0d1:	cmc    
  41e0d2:	add    DWORD PTR ds:0x202bcc1c,ecx
  41e0d8:	mov    ds:0xd1c23ee3,al
  41e0dd:	cs call 0xd0be:0x8ee1a0ae
  41e0e5:	fst    DWORD PTR [edx]
  41e0e7:	mov    fs,WORD PTR [edi-0x199409f8]
  41e0ed:	nop
  41e0ee:	out    0xe,eax
  41e0f0:	sub    BYTE PTR [edi+0x35],ah
  41e0f3:	cmp    BYTE PTR [eax-0x4c],bl
  41e0f6:	ins    DWORD PTR es:[edi],dx
  41e0f7:	out    dx,eax
  41e0f8:	or     bh,BYTE PTR [eax+0x5f5b5e7c]
  41e0fe:	push   ss
  41e0ff:	ins    BYTE PTR es:[edi],dx
  41e100:	adc    DWORD PTR ds:0x68c907b,0x7d
  41e107:	out    0x2f,eax
  41e109:	cmp    eax,0x469a38d4
  41e10e:	ins    DWORD PTR es:[edi],dx
  41e10f:	sbb    esp,ebx
  41e111:	int3   
  41e112:	loope  0x41e18c
  41e114:	je     0x41e12c
  41e116:	mov    dl,0x91
  41e118:	fist   DWORD PTR [ecx-0x3cc1e407]
  41e11e:	aam    0x27
  41e120:	cmp    al,0xfc
  41e122:	arpl   WORD PTR [edx],cx
  41e124:	mov    dl,0x2
  41e126:	(bad)  
  41e127:	in     al,dx
  41e128:	fwait
  41e129:	ds retf 0xa089
  41e12d:	retf   
  41e12e:	mov    edx,gs
  41e130:	inc    edx
  41e131:	in     eax,dx
  41e132:	or     al,0xeb
  41e134:	fnstcw WORD PTR [esi-0x10]
  41e137:	push   0x3b255fc
  41e13c:	std    
  41e13d:	loope  0x41e1a1
  41e13f:	dec    ebx
  41e140:	out    dx,al
  41e141:	ss inc edi
  41e143:	push   edx
  41e144:	xchg   esp,eax
  41e145:	jbe    0x41e1b8
  41e147:	(bad)  
  41e148:	daa    
  41e149:	out    0x3,al
  41e14b:	sub    eax,ebx
  41e14d:	cmc    
  41e14e:	je     0x41e190
  41e150:	bound  ecx,QWORD PTR [eax]
  41e152:	dec    esi
  41e153:	cdq    
  41e154:	out    dx,al
  41e155:	icebp  
  41e156:	mov    al,ds:0xeba571e2
  41e15b:	imul   esi,DWORD PTR [ecx+0x70bd7702],0x4008e19
  41e165:	outs   dx,DWORD PTR ds:[esi]
  41e166:	fxrstor [ebx+0x1bfd793e]
  41e16d:	pop    ebx
  41e16e:	test   BYTE PTR [edi],ah
  41e170:	mov    cl,0xdf
  41e172:	adc    BYTE PTR cs:[ebx-0x63fdc269],cl
  41e179:	cmp    DWORD PTR [ebp+0x7841724c],0xffffffd1
  41e180:	int    0xcc
  41e182:	cli    
  41e183:	pop    es
  41e184:	inc    edi
  41e185:	cmp    BYTE PTR [ebx+ebp*4+0x19],0x75
  41e18a:	retf   
  41e18b:	test   DWORD PTR [ebx-0x62caf52b],0x8d412226
  41e195:	pop    ss
  41e196:	test   al,0xcf
  41e198:	mov    al,0x7b
  41e19a:	sbb    DWORD PTR ds:0xe917a199,ebx
  41e1a0:	adc    DWORD PTR [ecx+edi*2-0x20bc54f9],ebx
  41e1a7:	dec    esi
  41e1a8:	jg     0x41e175
  41e1aa:	outs   dx,DWORD PTR ds:[esi]
  41e1ab:	fistp  WORD PTR [esi+0x56]
  41e1ae:	ror    DWORD PTR [edx+0x13],1
  41e1b1:	ds mov bh,0xa8
  41e1b4:	xchg   esp,eax
  41e1b5:	mov    edi,0x7e852701
  41e1ba:	or     eax,0x9d3d2d28
  41e1bf:	xchg   esi,eax
  41e1c0:	or     DWORD PTR [edx],edx
  41e1c2:	adc    edi,esp
  41e1c4:	ret    
  41e1c5:	imul   ebx,DWORD PTR [ebx],0xffffffbc
  41e1c8:	pushf  
  41e1c9:	inc    ecx
  41e1ca:	into   
  41e1cb:	add    cl,BYTE PTR [esi]
  41e1cd:	xor    eax,0xdbb880b7
  41e1d2:	(bad)  
  41e1d3:	out    dx,al
  41e1d4:	fcom   DWORD PTR [eax+0x58]
  41e1d7:	xchg   esp,eax
  41e1d8:	cmp    al,0x1e
  41e1da:	fsubr  DWORD PTR [esi-0x41b83026]
  41e1e0:	pushf  
  41e1e1:	jns    0x41e1c1
  41e1e3:	push   esi
  41e1e4:	call   0x58640409
  41e1e9:	and    BYTE PTR [eax-0x4d],0xad
  41e1ed:	and    eax,0x5ec40bf2
  41e1f2:	mov    al,ds:0x211df765
  41e1f7:	jnp    0x41e17e
  41e1f9:	mov    esp,0x39edc7b6
  41e1fe:	fcmovu st,st(4)
  41e200:	test   ebp,ebx
  41e202:	loope  0x41e1ac
  41e204:	push   esi
  41e205:	out    0x38,al
  41e207:	cmp    eax,0x34038ecb
  41e20c:	inc    eax
  41e20d:	inc    ebx
  41e20e:	adc    ah,ah
  41e210:	arpl   WORD PTR [ebx+0x4ca684df],sp
  41e216:	mov    WORD PTR [edx],fs
  41e218:	mov    BYTE PTR ds:0x19396ebf,dh
  41e21e:	es xor al,0x5e
  41e221:	jecxz  0x41e25c
  41e223:	pop    esi
  41e224:	adc    ah,bl
  41e226:	jne    0x41e226
  41e228:	or     ebx,DWORD PTR ds:0xccd51045
  41e22e:	mov    esi,0x6b970eb2
  41e233:	imul   edi,DWORD PTR [edi],0x7bfa1061
  41e239:	aam    0xbd
  41e23b:	(bad)  
  41e23c:	(bad)  
  41e23d:	cmp    eax,0xe0b04e00
  41e242:	sbb    DWORD PTR [eax+0x51],esp
  41e245:	out    dx,al
  41e246:	inc    esp
  41e247:	add    al,bl
  41e249:	cmp    dl,ah
  41e24b:	dec    esi
  41e24c:	les    ebp,FWORD PTR [esi-0x6b371344]
  41e252:	test   eax,0x62089b46
  41e257:	add    eax,0x143c0d1
  41e25c:	lock in al,dx
  41e25e:	mov    edx,edi
  41e260:	mov    bh,0xf
  41e262:	dec    ebx
  41e263:	mov    eax,DWORD PTR [ebx+0x308ef6aa]
  41e269:	cmp    esp,ecx
  41e26b:	cli    
  41e26c:	sti    
  41e26d:	jmp    FWORD PTR [eax+0x2db493d5]
  41e273:	cld    
  41e274:	(bad)  
  41e275:	xor    al,BYTE PTR [esi]
  41e277:	fbstp  TBYTE PTR [eax]
  41e279:	adc    ebp,esi
  41e27b:	cmp    al,0x79
  41e27d:	sub    bl,BYTE PTR [esi-0x6af2d404]
  41e283:	add    esi,esi
  41e285:	lods   al,BYTE PTR ds:[esi]
  41e286:	pop    edi
  41e287:	mov    eax,0xad7a74d8
  41e28c:	xchg   edi,eax
  41e28d:	xor    dh,BYTE PTR [edi]
  41e28f:	xchg   cx,ax
  41e291:	pop    es
  41e292:	mov    esi,0xf42e32fa
  41e297:	scas   eax,DWORD PTR es:[edi]
  41e298:	xor    BYTE PTR [edi-0x56db4cd0],ah
  41e29e:	xchg   ebx,eax
  41e29f:	pop    edx
  41e2a0:	js     0x41e2da
  41e2a2:	push   ebp
  41e2a3:	push   0x9798684
  41e2a8:	push   ebp
  41e2a9:	in     al,dx
  41e2aa:	dec    esi
  41e2ab:	popa   
  41e2ac:	xor    BYTE PTR [ecx],al
  41e2ae:	or     ebp,esi
  41e2b0:	in     eax,dx
  41e2b1:	out    dx,eax
  41e2b2:	adc    edx,0x60
  41e2b5:	std    
  41e2b6:	add    al,0xfb
  41e2b8:	sub    eax,0xc2dbdbf7
  41e2bd:	xor    bh,dl
  41e2bf:	dec    esi
  41e2c0:	push   edx
  41e2c1:	shl    DWORD PTR [eax+0x4b81bad7],1
  41e2c7:	test   BYTE PTR [ebx-0x8],0x3
  41e2cb:	or     BYTE PTR [eax+0x38],dh
  41e2ce:	sbb    ecx,DWORD PTR [edi-0x2bdd5d47]
  41e2d4:	fdivr  st(2),st
  41e2d6:	or     dh,bh
  41e2d8:	(bad)  
  41e2d9:	frstor [ebx]
  41e2db:	and    ah,BYTE PTR [esi+ecx*2+0x40]
  41e2df:	pop    edx
  41e2e0:	lahf   
  41e2e1:	fcmove st,st(4)
  41e2e3:	dec    edx
  41e2e4:	or     esi,DWORD PTR [esi-0x5a5b8bd3]
  41e2ea:	in     eax,dx
  41e2eb:	push   ss
  41e2ec:	mov    al,ds:0x4ce719e0
  41e2f1:	mov    ds:0x9160c182,eax
  41e2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2f7:	idiv   ebx
  41e2f9:	(bad)  
  41e2fb:	retf   
  41e2fc:	mov    bh,0x75
  41e2fe:	xor    DWORD PTR [edx],0x68496971
  41e304:	js     0x41e2d9
  41e306:	xor    eax,0x120160ee
  41e30b:	pusha  
  41e30c:	pop    edi
  41e30d:	cmp    ch,ah
  41e30f:	mov    esi,0xbacf9190
  41e314:	jae    0x41e326
  41e316:	push   edi
  41e317:	mov    dh,0xa
  41e319:	imul   edi,DWORD PTR [edi-0x172747cc],0xffffffe2
  41e320:	in     eax,dx
  41e321:	or     eax,0x5f18a039
  41e326:	test   al,0xec
  41e328:	out    dx,al
  41e329:	adc    DWORD PTR [ebp+0x61],ebx
  41e32c:	nop
  41e32d:	pop    edx
  41e32e:	outs   dx,BYTE PTR ds:[esi]
  41e32f:	(bad)  
  41e330:	leave  
  41e331:	in     eax,dx
  41e332:	xlat   BYTE PTR ds:[ebx]
  41e333:	lea    eax,[ebx+0x16aa974a]
  41e339:	jl     0x41e2d1
  41e33b:	cmp    BYTE PTR [ecx-0x2e6c1ae9],dl
  41e341:	outs   dx,BYTE PTR ds:[esi]
  41e342:	imul   ebp,DWORD PTR [ebx],0xe9a5761
  41e348:	mov    dl,BYTE PTR [edx-0x24bf4b00]
  41e34e:	inc    edx
  41e34f:	lods   eax,DWORD PTR ds:[esi]
  41e350:	xchg   DWORD PTR [edi],ebx
  41e352:	fiadd  WORD PTR [ebx-0x6e1bbe26]
  41e358:	mov    edi,0xe4360a59
  41e35d:	mov    bh,cl
  41e35f:	inc    ebx
  41e360:	das    
  41e361:	pushf  
  41e362:	pusha  
  41e363:	rcl    DWORD PTR [edi],1
  41e365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e366:	rcl    DWORD PTR [edx],cl
  41e368:	(bad)  
  41e369:	mov    BYTE PTR [esi+edi*8],ah
  41e36c:	popa   
  41e36d:	cmp    BYTE PTR [edx-0x2f11467e],al
  41e373:	dec    esp
  41e374:	add    DWORD PTR ds:0x2721e63b,esi
  41e37a:	jns    0x41e338
  41e37c:	shl    DWORD PTR [ebx-0x4e],cl
  41e37f:	aam    0xe9
  41e381:	retf   0xcd5d
  41e384:	ret    0x2ca6
  41e387:	(bad)  
  41e388:	in     eax,dx
  41e389:	scas   eax,DWORD PTR es:[edi]
  41e38a:	push   ebp
  41e38b:	fs inc esp
  41e38d:	jp     0x41e384
  41e38f:	out    dx,al
  41e390:	mov    edx,0xcb93a1fe
  41e395:	(bad)  [ecx]
  41e397:	sub    ebp,DWORD PTR [eax]
  41e399:	retf   
  41e39a:	sub    dh,BYTE PTR [edi*1-0x41000afc]
  41e3a1:	fadd   QWORD PTR [ebx-0x1]
  41e3a4:	xlat   BYTE PTR ds:[ebx]
  41e3a5:	gs shl edi,1
  41e3a8:	xchg   edi,eax
  41e3a9:	mov    DWORD PTR [ebx+0x27],edi
  41e3ac:	xchg   edx,eax
  41e3ad:	and    eax,0x3bcec5c8
  41e3b2:	add    DWORD PTR [bp+0x49],esi
  41e3b6:	iret   
  41e3b7:	ja     0x41e3d1
  41e3b9:	dec    eax
  41e3ba:	loope  0x41e415
  41e3bc:	(bad)  
  41e3bd:	dec    eax
  41e3be:	add    dh,BYTE PTR ds:0x8b1a6fe8
  41e3c4:	push   es
  41e3c5:	add    eax,0xab4f903e
  41e3ca:	xchg   ecx,eax
  41e3cb:	or     cl,dl
  41e3cd:	call   0xd8e7:0xfae9c981
  41e3d4:	xor    DWORD PTR [ebp-0x24b39262],eax
  41e3da:	jmp    0x41e38b
  41e3dc:	aaa    
  41e3dd:	push   eax
  41e3de:	stos   BYTE PTR es:[edi],al
  41e3df:	xchg   ch,al
  41e3e1:	out    0x3a,al
  41e3e3:	add    BYTE PTR [ebp-0x33],dl
  41e3e6:	pop    ds
  41e3e7:	int    0xee
  41e3e9:	push   eax
  41e3ea:	enter  0x185e,0x2e
  41e3ee:	repz add BYTE PTR [eax],al
  41e3f1:	add    BYTE PTR [eax-0x7de0740],al
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0x44d4fc94
  41e400:	mov    ds:0x15f45cf,al
  41e405:	add    ch,dh
  41e407:	add    al,0x0
  41e409:	add    BYTE PTR [ecx-0x68],cl
  41e40c:	cdq    
  41e40d:	mov    esp,0xe5a1b3a7
  41e412:	xor    BYTE PTR [ebx],bh
  41e414:	rcl    DWORD PTR [ebx],1
  41e416:	push   eax
  41e417:	xchg   esi,eax
  41e418:	mov    BYTE PTR [ebx+0x56ad5d72],0x43
  41e41f:	inc    esi
  41e420:	push   ebp
  41e421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e422:	mov    fs,WORD PTR [edi+0x1792e5fc]
  41e428:	in     al,dx
  41e429:	cmp    al,BYTE PTR [esi-0x6bf49d5e]
  41e42f:	xor    eax,0xdee91c0b
  41e434:	ds or  dx,cx
  41e438:	das    
  41e439:	sub    ebp,edi
  41e43b:	sub    edi,DWORD PTR [edi+0x6ffd52aa]
  41e441:	jb     0x41e48b
  41e443:	pop    ebp
  41e444:	add    BYTE PTR [edx+0x7a],cl
  41e447:	in     al,dx
  41e448:	sar    BYTE PTR [bp+si],0xfd
  41e44c:	inc    edi
  41e44d:	dec    edx
  41e44e:	mov    cs,WORD PTR [edi+0x4d5963a2]
  41e454:	and    BYTE PTR [eax+0x5120e5bd],ah
  41e45a:	cmp    eax,0x837435d
  41e45f:	push   ss
  41e460:	mov    cl,0xdd
  41e462:	stc    
  41e463:	xor    DWORD PTR [esi],ecx
  41e465:	sbb    al,0x1
  41e467:	shl    DWORD PTR [ecx-0x24a42c7c],cl
  41e46d:	mov    al,ds:0xfd593fa8
  41e472:	xlat   BYTE PTR ds:[ebx]
  41e473:	leave  
  41e474:	aas    
  41e475:	push   ebp
  41e476:	push   ebp
  41e477:	inc    edx
  41e478:	mov    esi,0xfad89b69
  41e47d:	jmp    0x9f44:0xb0f18b65
  41e484:	mov    cl,0x91
  41e486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e487:	rcl    BYTE PTR [esi-0x25e88c20],1
  41e48d:	inc    ebx
  41e48e:	and    eax,0x940a6f06
  41e493:	pop    esp
  41e494:	dec    esi
  41e495:	shl    dl,cl
  41e497:	push   es
  41e498:	jo     0x41e4c8
  41e49a:	dec    eax
  41e49b:	test   eax,0x92f9a44e
  41e4a0:	or     al,0x6b
  41e4a2:	inc    ecx
  41e4a3:	test   al,0x14
  41e4a5:	lock inc edx
  41e4a7:	leave  
  41e4a8:	ror    BYTE PTR [ebp+0x70011860],cl
  41e4ae:	xchg   BYTE PTR [edx-0x65],dh
  41e4b1:	jo     0x41e45f
  41e4b3:	clc    
  41e4b4:	rcl    BYTE PTR [edx-0x47542136],1
  41e4ba:	add    eax,0x3249f9ee
  41e4bf:	loope  0x41e50b
  41e4c1:	jg     0x41e4ea
  41e4c3:	mov    ds:0x639a5293,al
  41e4c8:	imul   BYTE PTR [ebx-0x1b2b7884]
  41e4ce:	enter  0xc18c,0x10
  41e4d2:	or     ecx,DWORD PTR [edx]
  41e4d4:	pusha  
  41e4d5:	js     0x41e4dc
  41e4d7:	test   al,0x28
  41e4d9:	scas   al,BYTE PTR es:[edi]
  41e4da:	or     eax,0xe19995a7
  41e4df:	ds int 0xb1
  41e4e2:	inc    edi
  41e4e3:	cld    
  41e4e4:	dec    esp
  41e4e5:	mov    ch,0x57
  41e4e7:	lea    esi,[ebp+ebx*8-0x712a034f]
  41e4ee:	in     eax,dx
  41e4ef:	and    esi,DWORD PTR [edx+esi*4-0x7c81a7b0]
  41e4f6:	rcl    DWORD PTR ds:0x8d415f46,cl
  41e4fc:	into   
  41e4fd:	mov    edi,0xeb206246
  41e502:	popf   
  41e503:	aad    0xf0
  41e505:	lods   al,BYTE PTR ds:[esi]
  41e506:	mov    ecx,0x6afe105f
  41e50b:	cmp    eax,0xd5b9af86
  41e510:	cdq    
  41e511:	aaa    
  41e512:	lea    esp,[edi+0x50]
  41e515:	repz xchg ecx,eax
  41e517:	(bad)  
  41e518:	push   ebp
  41e519:	add    al,0x26
  41e51b:	mov    bl,0x65
  41e51d:	inc    esi
  41e51e:	nop
  41e51f:	or     dh,ah
  41e521:	lods   eax,DWORD PTR ds:[esi]
  41e522:	inc    esp
  41e523:	ja     0x41e4b9
  41e525:	std    
  41e526:	rol    DWORD PTR [edi],cl
  41e528:	mov    bh,0x9f
  41e52a:	(bad)  
  41e52b:	jo     0x41e543
  41e52d:	sub    al,BYTE PTR [eax-0x7e10e450]
  41e533:	bound  ebp,QWORD PTR [eax+0x11]
  41e536:	das    
  41e537:	xchg   DWORD PTR [ebp+0x47],ebx
  41e53a:	jbe    0x41e590
  41e53c:	jbe    0x41e53e
  41e53e:	xor    bh,al
  41e540:	stc    
  41e541:	int3   
  41e542:	xor    BYTE PTR [eax+0x1b],dh
  41e545:	xchg   ebx,eax
  41e546:	leave  
  41e547:	push   0x68
  41e549:	pop    ebp
  41e54a:	lock and al,0x7b
  41e54d:	add    al,0xb9
  41e54f:	sub    eax,ecx
  41e551:	inc    edx
  41e552:	fild   WORD PTR [esi]
  41e554:	sub    BYTE PTR [eax+0x10081e54],ch
  41e55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e55b:	push   esi
  41e55c:	scas   eax,DWORD PTR es:[edi]
  41e55d:	pusha  
  41e55e:	arpl   WORD PTR [ebp+0x5d95a080],di
  41e564:	outs   dx,DWORD PTR ds:[esi]
  41e565:	das    
  41e566:	or     bl,al
  41e568:	test   DWORD PTR [eax+0x29],ebp
  41e56b:	sti    
  41e56c:	sub    eax,esi
  41e56e:	sbb    dh,BYTE PTR [ecx]
  41e570:	es or  ch,bl
  41e573:	fptan  
  41e575:	jns    0x41e57a
  41e577:	xor    ch,BYTE PTR [ebp-0x68766d2d]
  41e57d:	cmp    al,0x64
  41e57f:	rcr    BYTE PTR [esi-0xa9a71ef],0x0
  41e586:	and    BYTE PTR [esi+0x6d67f211],0x5f
  41e58d:	(bad)  [ecx+0xa]
  41e590:	cmp    BYTE PTR [ebx+0x12],ch
  41e593:	fdiv   st(4),st
  41e595:	addr16 mov eax,ds:0xdba2
  41e599:	or     bh,dl
  41e59b:	cwde   
  41e59c:	xchg   esp,eax
  41e59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e59e:	sub    ebp,DWORD PTR [eax+0x5c64bebb]
  41e5a4:	stos   BYTE PTR es:[edi],al
  41e5a5:	fild   QWORD PTR [eax-0x52]
  41e5a8:	mov    ecx,ebx
  41e5aa:	push   0xffffffa9
  41e5ac:	nop
  41e5ad:	adc    edi,ebp
  41e5af:	push   ebp
  41e5b0:	es std 
  41e5b2:	aas    
  41e5b3:	or     cl,BYTE PTR [edx-0x4cf38709]
  41e5b9:	test   DWORD PTR [ebp-0x5d],eax
  41e5bc:	es addr16 sub al,0xfa
  41e5c0:	in     eax,dx
  41e5c1:	fwait
  41e5c2:	adc    bl,BYTE PTR [ebx+0x7e027a97]
  41e5c8:	ds adc eax,0x1da6418e
  41e5ce:	jae    0x41e560
  41e5d0:	add    eax,0x5701f453
  41e5d5:	cmp    edi,ecx
  41e5d7:	adc    ebx,DWORD PTR [ebp-0x65]
  41e5da:	dec    eax
  41e5db:	jg     0x41e5ab
  41e5dd:	xchg   esi,eax
  41e5de:	jl     0x41e598
  41e5e0:	push   ss
  41e5e1:	xlat   BYTE PTR ds:[ebx]
  41e5e2:	popa   
  41e5e3:	das    
  41e5e4:	or     ch,BYTE PTR [edi+0x12]
  41e5e7:	add    al,0xa3
  41e5e9:	(bad)  
  41e5ea:	sbb    dl,ah
  41e5ec:	mov    fs,WORD PTR [edi+0x76718954]
  41e5f2:	daa    
  41e5f3:	call   0xa18e:0x31ca29d8
  41e5fa:	xchg   esi,eax
  41e5fb:	rcr    DWORD PTR [ecx-0x2c],cl
  41e5fe:	adc    ebp,ecx
  41e600:	dec    eax
  41e601:	jnp    0x41e670
  41e603:	or     eax,0x55a2323b
  41e608:	and    BYTE PTR [esi-0x4ff521eb],bl
  41e60e:	push   es
  41e60f:	rcl    ch,0x16
  41e612:	push   es
  41e613:	push   ecx
  41e614:	test   ebp,esi
  41e616:	ins    BYTE PTR es:[edi],dx
  41e617:	ffreep st(6)
  41e619:	bound  eax,QWORD PTR [edx+0x27c25d9e]
  41e61f:	pop    edx
  41e620:	xchg   esi,eax
  41e621:	inc    edx
  41e622:	loop   0x41e617
  41e624:	sbb    DWORD PTR [edx+0x4a12d402],esp
  41e62a:	mov    al,0x2e
  41e62c:	pop    esp
  41e62d:	mov    cl,0xdf
  41e62f:	xlat   BYTE PTR ds:[ebx]
  41e630:	or     al,0xde
  41e632:	jmp    0x8b88:0xf956f2fa
  41e639:	sub    ah,BYTE PTR [ecx-0x78]
  41e63c:	mov    ch,dh
  41e63e:	push   0xffffffd4
  41e640:	(bad)  
  41e641:	imul   esi,DWORD PTR [eax],0xae4aa6f
  41e647:	jle    0x41e5f1
  41e649:	adc    cl,BYTE PTR [edx-0x41925653]
  41e64f:	cmp    eax,0xa2b222b5
  41e654:	test   BYTE PTR [eax-0xe35a5fe],cl
  41e65a:	cmp    eax,0x23376691
  41e65f:	rcr    BYTE PTR [edi+0x6f],1
  41e662:	data16 add al,0x37
  41e665:	mov    WORD PTR [ebp+0x5d],ss
  41e668:	test   DWORD PTR [ecx+edi*4],edi
  41e66b:	mov    eax,0x3e0d0c44
  41e670:	add    al,0xfa
  41e672:	int3   
  41e673:	cmovg  ebx,esi
  41e676:	or     DWORD PTR [edx+esi*8-0xd],eax
  41e67a:	mov    cl,0x7f
  41e67c:	iret   
  41e67d:	repnz add ch,BYTE PTR [si-0x5]
  41e682:	cld    
  41e683:	enter  0x7d10,0x50
  41e687:	mov    esp,0x9c0cf08f
  41e68c:	sbb    al,0x6c
  41e68e:	mov    dh,0xeb
  41e690:	jb     0x41e6ab
  41e692:	add    ebx,esp
  41e694:	ror    DWORD PTR [ecx],0x2
  41e697:	gs jecxz 0x41e690
  41e69a:	sti    
  41e69b:	push   cs
  41e69c:	push   0xffffffcb
  41e69e:	call   0x86d6673
  41e6a3:	je     0x41e665
  41e6a5:	popf   
  41e6a6:	shl    edx,0xe0
  41e6a9:	ins    DWORD PTR es:[edi],dx
  41e6aa:	je     0x41e706
  41e6ac:	xchg   ebp,eax
  41e6ad:	cmc    
  41e6ae:	add    dl,BYTE PTR [eax]
  41e6b0:	push   ecx
  41e6b1:	xchg   esp,eax
  41e6b2:	mov    bh,0x62
  41e6b4:	stc    
  41e6b5:	call   0x73755433
  41e6ba:	icebp  
  41e6bb:	jo     0x41e6cc
  41e6bd:	repnz sar BYTE PTR [ebx-0x3d],cl
  41e6c1:	sbb    edi,ebp
  41e6c3:	mov    edi,0x23051ba1
  41e6c8:	xchg   ebx,eax
  41e6ca:	push   ds
  41e6cb:	mov    dh,0xd2
  41e6cd:	(bad)  
  41e6ce:	pop    ss
  41e6cf:	jb     0x41e6ce
  41e6d1:	adc    DWORD PTR [ebx-0x2acda2a7],ebp
  41e6d7:	retf   
  41e6d8:	mov    eax,ds:0x9b6656c4
  41e6dd:	pop    ss
  41e6de:	xchg   ebx,eax
  41e6df:	push   edi
  41e6e0:	xor    cl,bl
  41e6e2:	xlat   BYTE PTR ds:[ebx]
  41e6e3:	mov    ch,0xe3
  41e6e5:	sbb    al,0x4b
  41e6e7:	mov    ebx,0x79bd90e9
  41e6ec:	sub    al,0x83
  41e6ee:	ins    DWORD PTR es:[edi],dx
  41e6ef:	test   esi,edx
  41e6f1:	cwde   
  41e6f2:	popf   
  41e6f3:	mov    BYTE PTR [ebx-0x18a2ecd3],dl
  41e6f9:	sbb    WORD PTR [edx+0x77a23cba],dx
  41e700:	js     0x41e6ee
  41e702:	jno    0x41e694
  41e704:	enter  0xc515,0x58
  41e708:	sti    
  41e709:	(bad)  
  41e70a:	jmp    0x1c02ee06
  41e70f:	push   0x0
  41e711:	jg     0x41e77b
  41e713:	dec    edi
  41e714:	inc    eax
  41e715:	cwde   
  41e716:	sbb    dh,BYTE PTR [edx-0x6b2eaa66]
  41e71c:	jb     0x41e794
  41e71e:	mov    eax,0xb42a48de
  41e723:	inc    esp
  41e724:	clc    
  41e725:	xor    ebx,DWORD PTR [eax+0x4d32f47c]
  41e72b:	xor    DWORD PTR [ecx-0x27b94821],ebp
  41e731:	popa   
  41e732:	cmp    ebp,DWORD PTR [eax]
  41e734:	call   0x9f68:0x7e84c037
  41e73b:	js     0x41e758
  41e73d:	inc    eax
  41e73e:	add    ebp,eax
  41e740:	cld    
  41e741:	mov    ch,BYTE PTR ss:[edx-0x8f358d]
  41e748:	jecxz  0x41e6fd
  41e74a:	ins    DWORD PTR es:[edi],dx
  41e74b:	mov    dh,0x1c
  41e74d:	or     ebx,DWORD PTR [ecx+0x3bfa7341]
  41e753:	data16 mov ah,0xa8
  41e756:	shl    BYTE PTR [ebp+0x5f3c418f],cl
  41e75c:	popa   
  41e75d:	cmp    bh,BYTE PTR [edx-0x167d60fc]
  41e763:	sbb    al,0x5e
  41e765:	cmp    ch,BYTE PTR [bp+si-0x20]
  41e769:	jl     0x41e7e4
  41e76b:	cmc    
  41e76c:	xor    BYTE PTR [edi-0x1a],0xf4
  41e770:	fld    DWORD PTR [esp+ecx*1]
  41e773:	mov    ds:0x4193d5be,al
  41e778:	call   0x8303760
  41e77d:	out    0xdb,eax
  41e77f:	or     DWORD PTR [ecx],0xffffffc1
  41e782:	test   DWORD PTR [edx+0x6b666448],edx
  41e788:	sub    dh,BYTE PTR [eax+ebp*4]
  41e78b:	mov    al,0xf6
  41e78d:	sbb    eax,0xb66cf7f0
  41e792:	fdivrp st(5),st
  41e794:	adc    BYTE PTR [edx+0x6],dl
  41e797:	icebp  
  41e798:	pop    eax
  41e799:	div    edx
  41e79b:	dec    eax
  41e79c:	int    0x44
  41e79e:	jmp    0x4081:0x7cdbadd6
  41e7a5:	rcl    BYTE PTR [ebp-0x7bc891a7],1
  41e7ab:	mov    al,ds:0x628c9c23
  41e7b0:	and    BYTE PTR [ebp-0x37305b83],dh
  41e7b6:	inc    esp
  41e7b7:	mov    al,0x8e
  41e7b9:	mov    bh,0x20
  41e7bb:	in     eax,dx
  41e7bc:	xchg   edi,eax
  41e7bd:	popf   
  41e7be:	push   esp
  41e7bf:	push   0x5f2ee71a
  41e7c4:	xor    eax,0x9941bdd
  41e7c9:	shr    DWORD PTR ds:0x48d5ed20,0xb0
  41e7d0:	adc    eax,0x456e06ca
  41e7d5:	in     al,dx
  41e7d6:	xchg   BYTE PTR [edi-0x23e3bb5e],dh
  41e7dc:	mov    esp,0x431fb7f0
  41e7e1:	sbb    DWORD PTR [edx+0x59],ebp
  41e7e4:	retf   0x2c93
  41e7e7:	scas   al,BYTE PTR es:[edi]
  41e7e8:	sbb    eax,ecx
  41e7ea:	cmp    al,0xee
  41e7ec:	ret    0x4955
  41e7ef:	xor    cl,BYTE PTR [ebx]
  41e7f1:	pop    esi
  41e7f2:	push   ebp
  41e7f3:	imul   esp,DWORD PTR ss:[esi+0x6b],0xf14add62
  41e7fb:	bound  edx,QWORD PTR [ecx-0x4c]
  41e7fe:	mov    eax,ds:0x83dca825
  41e803:	jle    0x41e7ff
  41e805:	xchg   esp,eax
  41e806:	js     0x41e818
  41e808:	fnstenv [edx+0xd]
  41e80b:	add    al,0xa4
  41e80d:	fdivrp st(0),st
  41e80f:	add    ecx,DWORD PTR [eax+eiz*4]
  41e812:	mov    ebp,0x4e0a3b5c
  41e817:	mov    dh,ch
  41e819:	mov    ah,0xd3
  41e81b:	std    
  41e81c:	mov    es,edx
  41e81e:	dec    ebx
  41e81f:	aad    0x43
  41e821:	push   esi
  41e822:	mov    DWORD PTR [ebp*4-0x7499442f],esi
  41e829:	enter  0x7067,0xd0
  41e82d:	adc    al,0xa8
  41e82f:	mov    ?,ecx
  41e831:	and    ebp,DWORD PTR [ebp-0x5c2ca2b5]
  41e837:	in     al,dx
  41e838:	mov    eax,0xfc6dd217
  41e83d:	outs   dx,BYTE PTR ds:[esi]
  41e83e:	mov    ds:0x662b4a9,al
  41e843:	push   ecx
  41e844:	jo     0x41e876
  41e846:	daa    
  41e847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e848:	icebp  
  41e849:	aad    0x15
  41e84b:	(bad)  
  41e84d:	mov    edi,0x183e39f2
  41e852:	in     al,0x30
  41e854:	test   al,0x19
  41e856:	(bad)  
  41e857:	enter  0xd4e2,0x4f
  41e85b:	xor    al,0xc1
  41e85d:	in     eax,0x14
  41e85f:	sti    
  41e860:	xor    eax,0x92e21530
  41e865:	in     eax,0xa7
  41e867:	inc    ebx
  41e868:	pop    ecx
  41e869:	inc    ebp
  41e86a:	dec    eax
  41e86b:	mul    DWORD PTR [ebx+0x15]
  41e86e:	rol    BYTE PTR [ebx+0x6a],0xb8
  41e872:	imul   edi,ebp,0x21
  41e875:	inc    ebx
  41e876:	add    edx,esp
  41e878:	cs xor dh,dl
  41e87b:	xchg   ebx,eax
  41e87c:	gs mov dh,0xad
  41e87f:	sahf   
  41e880:	xchg   ebp,eax
  41e881:	jbe    0x41e8c2
  41e883:	shl    BYTE PTR [edx-0x51],0x58
  41e887:	adc    eax,0x2ca02173
  41e88c:	inc    edx
  41e88d:	cmc    
  41e88e:	mov    bh,0xee
  41e890:	xor    al,0xa2
  41e892:	xor    al,0x56
  41e894:	mov    ds:0xe06a0806,eax
  41e899:	loopne 0x41e84f
  41e89b:	out    dx,eax
  41e89c:	push   edi
  41e89d:	jns    0x41e876
  41e89f:	test   BYTE PTR [ebp+0x306d884b],0xe5
  41e8a6:	lods   al,BYTE PTR ds:[esi]
  41e8a7:	fiadd  WORD PTR [ebx+0x4dcdf67c]
  41e8ad:	xor    esp,DWORD PTR ds:0x74aeac2f
  41e8b3:	sbb    bl,bh
  41e8b5:	test   DWORD PTR [edi+eax*1],esp
  41e8b8:	and    al,dh
  41e8ba:	pop    ss
  41e8bb:	ret    0x75c4
  41e8be:	push   0x9c7ff59d
  41e8c3:	inc    ebx
  41e8c4:	xlat   BYTE PTR ds:[ebx]
  41e8c5:	jle    0x41e8df
  41e8c7:	push   esi
  41e8c8:	sets   BYTE PTR [ebx-0x7c]
  41e8cc:	mov    esp,0xab6b52d4
  41e8d1:	cmp    ebx,DWORD PTR [ebp-0x2d1a5c14]
  41e8d7:	call   0x93aa:0x6fea6ac9
  41e8de:	out    dx,eax
  41e8df:	std    
  41e8e0:	or     edx,edi
  41e8e2:	jmp    DWORD PTR [esi]
  41e8e4:	call   0xcbdd9dc
  41e8e9:	jle    0x41e927
  41e8eb:	arpl   WORD PTR ds:0xbbc0aea2,bx
  41e8f1:	pop    ebx
  41e8f2:	adc    DWORD PTR [eax-0x20],edi
  41e8f5:	or     eax,0x749d75cc
  41e8fa:	adc    ecx,DWORD PTR [esi]
  41e8fc:	jo     0x41e87e
  41e8fe:	add    BYTE PTR fs:[eax],al
  41e901:	add    BYTE PTR [edi+0x78],bh
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	jnp    0x41e906
  41e910:	push   edi
  41e911:	mov    BYTE PTR [edx],bh
  41e913:	add    DWORD PTR fs:[eax],eax
  41e916:	cmc    
  41e917:	add    al,0x0
  41e919:	add    dh,dl
  41e91b:	fild   WORD PTR [eax]
  41e91d:	repnz push cs
  41e91f:	call   0x50018d3d
  41e924:	jno    0x41e8a9
  41e926:	xchg   esi,eax
  41e927:	data16 into 
  41e929:	std    
  41e92a:	pop    ebp
  41e92b:	call   0xdf7e:0xfef9cb3a
  41e932:	mov    ebx,DWORD PTR [edx]
  41e934:	(bad)  [eax]
  41e936:	stos   DWORD PTR es:[edi],eax
  41e937:	mov    edx,0x240473aa
  41e93c:	std    
  41e93d:	in     al,dx
  41e93e:	add    ch,dh
  41e940:	mov    bl,0x6e
  41e942:	inc    eax
  41e943:	popa   
  41e944:	jno    0x41e918
  41e946:	sub    al,0x4c
  41e948:	loop   0x41e90f
  41e94a:	xchg   ebx,eax
  41e94b:	call   0x96cc:0xde392209
  41e952:	pop    edi
  41e953:	pusha  
  41e954:	mov    bh,0x30
  41e956:	gs ins DWORD PTR es:[edi],dx
  41e958:	out    dx,eax
  41e959:	aam    0xb2
  41e95b:	push   0x6e
  41e95d:	imul   ebx,DWORD PTR [ecx-0x359a26d],0x6629af8d
  41e967:	cmove  ebp,DWORD PTR [ecx+0x136fdd13]
  41e96e:	fdivr  DWORD PTR [edx+0x2d618a9e]
  41e974:	push   ebx
  41e975:	(bad)  
  41e976:	std    
  41e977:	jge    0x102b33fe
  41e97d:	out    0x36,eax
  41e97f:	pop    esp
  41e980:	mov    al,0xdb
  41e982:	sub    BYTE PTR [edi-0x9],dh
  41e985:	and    bh,BYTE PTR [ebp+0x2faa13e6]
  41e98b:	aam    0xb0
  41e98d:	mov    edx,0x71227d77
  41e992:	xchg   esp,eax
  41e993:	popf   
  41e994:	rol    DWORD PTR [eax+esi*1-0x24],0x8d
  41e999:	sar    edx,cl
  41e99b:	mov    edi,0xf9b4c1ac
  41e9a0:	mov    bl,0x4e
  41e9a2:	jne    0x41e9f0
  41e9a4:	push   ss
  41e9a5:	cs inc esi
  41e9a7:	pop    ebx
  41e9a8:	cdq    
  41e9a9:	out    dx,al
  41e9aa:	(bad)  
  41e9ab:	and    DWORD PTR [edx+0x1951c3a5],edx
  41e9b1:	test   ebp,0x3ac6869e
  41e9b7:	cmc    
  41e9b8:	adc    ebx,DWORD PTR [edx-0x52]
  41e9bb:	iret   
  41e9bc:	pop    edx
  41e9bd:	mov    al,dl
  41e9bf:	pop    es
  41e9c0:	repz loope 0x41e9f8
  41e9c3:	jmp    0x6120:0x31987555
  41e9ca:	aas    
  41e9cb:	lock cmp al,0x20
  41e9cf:	js     0x41ea09
  41e9d1:	in     eax,dx
  41e9d2:	inc    edi
  41e9d3:	(bad)  
  41e9d4:	aam    0x72
  41e9d6:	dec    esp
  41e9d7:	shr    BYTE PTR [ebx],cl
  41e9d9:	mov    WORD PTR [edi+0x743fcf93],ss
  41e9df:	sub    eax,0xf5a8b282
  41e9e4:	mov    dh,0x82
  41e9e6:	aad    0x97
  41e9e8:	gs sub al,0x72
  41e9eb:	inc    esi
  41e9ec:	mov    WORD PTR [edx-0x6e],?
  41e9ef:	aaa    
  41e9f0:	shl    DWORD PTR [edx*2+0x24578714],cl
  41e9f7:	jae    0x41e9e7
  41e9f9:	jb     0x2fcefc85
  41e9ff:	nop
  41ea00:	int    0x40
  41ea02:	and    edi,DWORD PTR [ecx+0x28]
  41ea05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea06:	xchg   edi,eax
  41ea07:	addr16 test al,0x71
  41ea0a:	rcl    BYTE PTR [edi+edx*1-0x4937e47b],0x5e
  41ea12:	test   DWORD PTR cs:[ebx+0x1d],0x16a2cdc7
  41ea1a:	adc    eax,0x4b76d6f7
  41ea1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea20:	and    ebp,DWORD PTR [edi-0x53]
  41ea23:	test   al,0x3d
  41ea25:	call   0x45e378c
  41ea2a:	mov    dl,BYTE PTR [esi-0x55656b3b]
  41ea30:	adc    BYTE PTR [eax],ch
  41ea32:	push   0x56090c9
  41ea37:	loop   0x41ea7b
  41ea39:	fdivr  DWORD PTR [edx]
  41ea3b:	adc    bh,BYTE PTR [edx]
  41ea3d:	inc    ebx
  41ea3e:	jmp    0x41ea90
  41ea40:	add    BYTE PTR [eax],al
  41ea42:	add    al,BYTE PTR [ebp-0x272b7f0]
  41ea48:	(bad)  
  41ea4a:	xchg   ecx,eax
  41ea4b:	ret    0x1761
  41ea4e:	xor    al,0x72
  41ea50:	pop    edi
  41ea51:	sti    
  41ea52:	pop    es
  41ea53:	jnp    0x41ea6f
  41ea55:	hlt    
  41ea56:	test   DWORD PTR [eax+0x7e],ebx
  41ea59:	xchg   edx,eax
  41ea5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea5b:	or     dh,dl
  41ea5d:	dec    ecx
  41ea5e:	iret   
  41ea5f:	div    BYTE PTR [ebx]
  41ea61:	sbb    DWORD PTR [ebx],ebp
  41ea63:	pusha  
  41ea64:	gs sub dl,bh
  41ea67:	sbb    DWORD PTR [edx+esi*4],0xffffff93
  41ea6b:	out    dx,al
  41ea6c:	das    
  41ea6d:	sbb    esp,esp
  41ea6f:	mov    eax,ds:0xf922ebd0
  41ea74:	iret   
  41ea75:	pop    edx
  41ea76:	push   ds
  41ea77:	or     edx,DWORD PTR ds:0x38c8315e
  41ea7d:	cmp    ah,BYTE PTR [ebp+0x32]
  41ea80:	dec    edi
  41ea81:	(bad)  
  41ea83:	mov    al,0xea
  41ea85:	jnp    0x41eaa9
  41ea87:	fldz   
  41ea89:	arpl   WORD PTR [ecx+0x601e8a73],bx
  41ea8f:	add    al,0xc1
  41ea91:	mov    esp,0xad22da4e
  41ea96:	or     DWORD PTR ds:0x37a3bde7,ecx
  41ea9c:	cmc    
  41ea9d:	aad    0x27
  41ea9f:	shl    DWORD PTR [esp+ebx*8-0x61bce490],1
  41eaa6:	and    ebp,ebx
  41eaa8:	cwde   
  41eaa9:	retf   
  41eaaa:	js     0x41eb23
  41eaac:	out    0x8a,al
  41eaae:	cli    
  41eaaf:	fcomi  st,st(3)
  41eab1:	dec    eax
  41eab2:	sbb    al,0x30
  41eab4:	repz mov ?,edx
  41eab7:	jnp    0x41ea6d
  41eab9:	push   esi
  41eaba:	call   0xabac54b7
  41eabf:	sub    eax,0x244de2c7
  41eac4:	in     al,dx
  41eac5:	ds cld 
  41eac7:	pop    ecx
  41eac8:	jbe    0x41eb25
  41eaca:	repnz enter 0xae60,0x0
  41eacf:	xor    DWORD PTR [ebx],edx
  41ead1:	sbb    al,BYTE PTR [edx-0x60feb863]
  41ead7:	inc    ebp
  41ead8:	and    DWORD PTR [eax-0x2f97f3de],ebx
  41eade:	popa   
  41eadf:	xchg   ecx,eax
  41eae0:	push   ebp
  41eae1:	cs xchg ebx,esp
  41eae4:	pusha  
  41eae5:	jne    0x41eafe
  41eae7:	hlt    
  41eae8:	call   0xb3f3:0x47e83871
  41eaef:	daa    
  41eaf0:	push   ds
  41eaf1:	sbb    eax,0xf4e567d3
  41eaf6:	push   ebx
  41eaf7:	fs loop 0x41eaa6
  41eafa:	imul   esp,DWORD PTR [ebx],0xfffffff5
  41eafd:	mov    ebp,0xdc96bb64
  41eb02:	jae    0x41eb1f
  41eb04:	js     0x41eaec
  41eb06:	outs   dx,DWORD PTR ds:[esi]
  41eb07:	xchg   esi,eax
  41eb08:	lock dec ebp
  41eb0a:	pop    es
  41eb0b:	cwde   
  41eb0c:	xor    dl,BYTE PTR [ebp+0x12076b2c]
  41eb12:	hlt    
  41eb13:	(bad)  
  41eb15:	jp     0x41eb42
  41eb17:	mov    ebx,0x2d270bd9
  41eb1c:	fild   DWORD PTR [edx+esi*2]
  41eb1f:	push   edi
  41eb20:	sub    DWORD PTR ds:0x15339178,edi
  41eb26:	push   es
  41eb27:	mov    edx,0x963e8873
  41eb2c:	jae    0x41eabf
  41eb2e:	mov    ebx,0xcf3ba239
  41eb33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb34:	cmp    al,0xca
  41eb36:	sbb    ebp,eax
  41eb38:	clc    
  41eb39:	add    ch,BYTE PTR [ebp+0x43]
  41eb3c:	test   al,0xf3
  41eb3e:	inc    ebp
  41eb3f:	loopne 0x41eb4a
  41eb41:	push   es
  41eb42:	(bad)  
  41eb43:	push   ds
  41eb44:	mov    dl,0x1c
  41eb46:	inc    ebp
  41eb47:	jns    0x41eae6
  41eb49:	out    0x51,eax
  41eb4b:	sub    ch,BYTE PTR [ecx+0x2b6d3451]
  41eb51:	mov    al,ds:0xc8580efa
  41eb56:	repz mov eax,0xa1a057fd
  41eb5c:	es add al,0x41
  41eb5f:	mov    eax,ds:0x8ec7524a
  41eb64:	sub    ah,BYTE PTR [eax]
  41eb66:	pop    eax
  41eb67:	mov    ch,0x2d
  41eb69:	push   edi
  41eb6a:	mov    ebp,DWORD PTR [ebp+eiz*2-0x28]
  41eb6e:	or     BYTE PTR [ecx+ebx*2],0xd6
  41eb72:	sub    bh,0xc
  41eb75:	sti    
  41eb76:	daa    
  41eb77:	ss out dx,eax
  41eb79:	test   BYTE PTR [edi+edi*4+0x15],0xf4
  41eb7e:	sub    eax,0x7619641c
  41eb83:	(bad)  
  41eb84:	scas   eax,DWORD PTR es:[edi]
  41eb85:	jns    0x41ebe7
  41eb87:	call   0xf2720b9f
  41eb8c:	and    DWORD PTR [edi],ebp
  41eb8e:	jle    0x41ebe4
  41eb90:	jp     0x41eb38
  41eb92:	inc    edx
  41eb93:	ror    BYTE PTR [edi],cl
  41eb95:	xor    ch,BYTE PTR [eax]
  41eb97:	add    edx,DWORD PTR [edx-0xc]
  41eb9a:	and    cl,BYTE PTR [ebx]
  41eb9c:	ins    DWORD PTR es:[edi],dx
  41eb9d:	sub    BYTE PTR [eax],0xcc
  41eba0:	mov    cl,0x75
  41eba2:	adc    DWORD PTR [ecx-0x2cf6e5ba],0x4b
  41eba9:	lea    ecx,[eax+0x76]
  41ebac:	push   edi
  41ebad:	ss pop ebp
  41ebaf:	daa    
  41ebb0:	mov    edi,0xcded50c9
  41ebb5:	fldenv [ebx]
  41ebb7:	(bad)  [ecx]
  41ebb9:	jbe    0x41ebdb
  41ebbb:	(bad)  
  41ebbd:	loope  0x41ebf6
  41ebbf:	jnp    0x41eb75
  41ebc1:	in     eax,0xf4
  41ebc3:	xor    ebp,esi
  41ebc5:	mov    eax,ds:0x6166db1b
  41ebca:	xchg   DWORD PTR [edi+0x39b57f04],ebp
  41ebd0:	cmc    
  41ebd1:	loope  0x41eb97
  41ebd3:	jae    0x41eb7b
  41ebd5:	aaa    
  41ebd6:	push   es
  41ebd7:	call   0x1269:0xc9b9fd5a
  41ebde:	xchg   BYTE PTR [edi-0x6c],dh
  41ebe1:	rol    DWORD PTR [esp+edx*1+0x61],0x30
  41ebe6:	jns    0x41ec1e
  41ebe8:	xor    ah,BYTE PTR [edx-0x67]
  41ebeb:	pop    esi
  41ebec:	div    ebx
  41ebee:	pop    esp
  41ebef:	popa   
  41ebf0:	push   edi
  41ebf1:	push   ecx
  41ebf2:	shl    BYTE PTR [ebx+0x23449c9f],1
  41ebf8:	mul    eax
  41ebfa:	cmp    BYTE PTR [ecx],ch
  41ebfc:	and    BYTE PTR [esi-0x6abaa363],cl
  41ec02:	stos   DWORD PTR es:[edi],eax
  41ec03:	pop    ds
  41ec04:	cwde   
  41ec05:	out    0x52,al
  41ec07:	mov    ch,0x18
  41ec09:	cs inc ebx
  41ec0b:	call   0x2179:0x6e97cd95
  41ec12:	or     BYTE PTR [ecx-0x6839641],ah
  41ec18:	cmp    BYTE PTR ds:0x52aab3dc,al
  41ec1e:	nop
  41ec1f:	popa   
  41ec20:	xchg   BYTE PTR [ebp+ebp*4+0x150608c3],bl
  41ec27:	or     esi,esp
  41ec29:	dec    ecx
  41ec2a:	add    eax,0x21bacb0f
  41ec2f:	test   eax,0xaedecece
  41ec34:	rcl    ebx,1
  41ec36:	xor    esp,0x4b83a64f
  41ec3c:	inc    edx
  41ec3d:	inc    esp
  41ec3e:	inc    esi
  41ec3f:	jmp    0x41ebf9
  41ec41:	in     eax,0xbc
  41ec43:	shr    DWORD PTR [edi+0x6e],0xea
  41ec47:	and    eax,0xb03e3bbb
  41ec4c:	scas   al,BYTE PTR es:[edi]
  41ec4d:	jae    0x41ec71
  41ec4f:	movsx  eax,WORD PTR [ebp*2+0x42470aa9]
  41ec57:	lahf   
  41ec58:	xor    al,BYTE PTR [esi+0x3b]
  41ec5b:	and    BYTE PTR [esi+0x4e],al
  41ec5e:	cwde   
  41ec5f:	mov    dl,0xb3
  41ec61:	adc    al,0xb6
  41ec63:	test   al,0x34
  41ec65:	loopne 0x41ebf6
  41ec67:	loope  0x41eca1
  41ec69:	lea    ebx,[edi]
  41ec6b:	push   esp
  41ec6c:	cmp    BYTE PTR [eax+0x55fd6be5],al
  41ec72:	mov    WORD PTR [edi-0x13e0151b],?
  41ec78:	js     0x41ec1b
  41ec7a:	pop    esp
  41ec7b:	out    dx,eax
  41ec7c:	dec    edi
  41ec7d:	inc    esi
  41ec7e:	lock sti 
  41ec80:	dec    ebx
  41ec81:	fdiv   st(2),st
  41ec83:	and    eax,0xabc8f957
  41ec88:	scas   al,BYTE PTR es:[edi]
  41ec89:	jp     0x41ec89
  41ec8b:	mov    ds:0xc8fdaada,al
  41ec90:	fs popa 
  41ec92:	into   
  41ec93:	mov    ds:0xcd800ae9,al
  41ec98:	jecxz  0x41ec71
  41ec9a:	xchg   esp,eax
  41ec9b:	mov    dh,0xc6
  41ec9d:	std    
  41ec9e:	hlt    
  41ec9f:	and    ecx,DWORD PTR [edi+0x2eef728d]
  41eca5:	ins    BYTE PTR es:[edi],dx
  41eca6:	(bad)  
  41eca7:	in     al,dx
  41eca8:	adc    esp,DWORD PTR [ecx+0x29]
  41ecab:	(bad)  [edx]
  41ecad:	push   ecx
  41ecae:	(bad)  
  41ecaf:	call   0x3bbd:0xdd051335
  41ecb6:	inc    esi
  41ecb7:	sub    al,0x67
  41ecb9:	pop    ebp
  41ecba:	xchg   ebp,eax
  41ecbb:	adc    BYTE PTR [esi],bl
  41ecbd:	xchg   BYTE PTR [edx+0x3eae72ea],al
  41ecc3:	fwait
  41ecc4:	inc    ebp
  41ecc5:	sub    ebx,DWORD PTR [esi+0x6e5a84a2]
  41eccb:	sbb    eax,0x323d7239
  41ecd0:	adc    al,0x1e
  41ecd2:	mov    esp,ecx
  41ecd4:	pop    esp
  41ecd5:	and    eax,0xfac743ad
  41ecda:	pop    ss
  41ecdb:	stos   BYTE PTR es:[edi],al
  41ecdc:	jae    0x41ed37
  41ecde:	out    dx,eax
  41ecdf:	pop    ss
  41ece0:	jmp    0x9ce26b5
  41ece5:	fs xchg esi,eax
  41ece7:	cwde   
  41ece8:	idiv   BYTE PTR [edx-0x20]
  41eceb:	out    dx,al
  41ecec:	push   esp
  41eced:	imul   esi,DWORD PTR [ebp+0x59],0x27e9d1bd
  41ecf4:	xchg   BYTE PTR [esi+0x754b8c5c],bh
  41ecfa:	ds sub al,0x44
  41ecfd:	push   ebp
  41ecfe:	xor    dl,BYTE PTR [eax+edi*2]
  41ed01:	stos   BYTE PTR es:[edi],al
  41ed02:	pop    eax
  41ed03:	xchg   ebx,eax
  41ed04:	fdivr  DWORD PTR [ebx+0x60]
  41ed07:	dec    edx
  41ed08:	sbb    eax,0x4817f32a
  41ed0d:	out    0xda,eax
  41ed0f:	out    dx,eax
  41ed10:	in     eax,0xd6
  41ed12:	jecxz  0x41ecb4
  41ed14:	add    DWORD PTR [edi-0x357a8b7c],edx
  41ed1a:	repnz adc ch,ch
  41ed1d:	test   DWORD PTR [ebp-0x18],esi
  41ed20:	jno    0x41ecb9
  41ed22:	add    al,0x7f
  41ed24:	mov    dl,0xb2
  41ed26:	and    edi,ecx
  41ed28:	pop    ebp
  41ed29:	xor    BYTE PTR [eax+0x6bc1a704],dl
  41ed2f:	sub    dl,0x8
  41ed32:	pop    ss
  41ed33:	xchg   edx,eax
  41ed34:	push   esi
  41ed35:	jle    0x41ed00
  41ed37:	pop    ebp
  41ed38:	push   eax
  41ed39:	hlt    
  41ed3a:	sbb    eax,0xe6b0cfcb
  41ed3f:	data16 or ah,0xfc
  41ed43:	aas    
  41ed44:	jmp    0x41ed1e
  41ed46:	mov    ebp,0xced79959
  41ed4b:	(bad)  
  41ed4c:	xor    al,0xc7
  41ed4e:	cmp    DWORD PTR [edx+0x4f],ecx
  41ed51:	in     al,0x1e
  41ed53:	gs add eax,0xf51cad80
  41ed59:	je     0x41ed3f
  41ed5b:	and    cl,bl
  41ed5d:	loopne 0x41edc7
  41ed5f:	(bad)  
  41ed60:	iret   
  41ed61:	push   ss
  41ed62:	mov    DWORD PTR [edi+0x7be8bbe9],eax
  41ed68:	scas   al,BYTE PTR es:[edi]
  41ed69:	sbb    BYTE PTR [esi],ah
  41ed6b:	dec    ecx
  41ed6c:	mov    eax,0x98eb1a6e
  41ed71:	sub    eax,edi
  41ed73:	jp     0x41edea
  41ed75:	sub    BYTE PTR [ecx+0x49],ch
  41ed78:	out    0xd9,al
  41ed7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed7b:	fsubr  DWORD PTR [edx-0x1a]
  41ed7e:	push   ebp
  41ed7f:	ins    BYTE PTR es:[edi],dx
  41ed80:	jno    0x41ed4a
  41ed82:	retf   
  41ed83:	scas   eax,DWORD PTR es:[edi]
  41ed84:	js     0x41edb0
  41ed86:	in     eax,0xe0
  41ed88:	outs   dx,DWORD PTR ds:[esi]
  41ed89:	aaa    
  41ed8a:	jmp    0x41ed6b
  41ed8c:	loop   0x41edae
  41ed8e:	(bad)  
  41ed8f:	outs   dx,DWORD PTR ss:[esi]
  41ed91:	out    dx,eax
  41ed92:	aaa    
  41ed93:	jns    0x41ede2
  41ed95:	cmp    DWORD PTR [edi],eax
  41ed97:	rol    DWORD PTR [eax+0x61],0x8
  41ed9b:	fist   DWORD PTR [esi+0x7c996238]
  41eda1:	cmp    al,0x51
  41eda3:	cmc    
  41eda4:	ins    BYTE PTR es:[edi],dx
  41eda5:	xor    dl,BYTE PTR [edx+edx*2+0x8037882]
  41edac:	mov    ch,0x9f
  41edae:	mov    eax,ds:0xfa12354f
  41edb3:	pop    ds
  41edb4:	inc    ebx
  41edb5:	adc    DWORD PTR [ebx-0x20],esp
  41edb8:	data16 cmp al,0xfb
  41edbb:	xchg   ecx,eax
  41edbc:	pop    ss
  41edbd:	mov    BYTE PTR ds:0x382e5261,cl
  41edc3:	cli    
  41edc4:	jo     0x41edc7
  41edc6:	fsub   DWORD PTR [eax-0x70]
  41edc9:	cmp    DWORD PTR ss:[edi-0x59],edx
  41edcd:	inc    edx
  41edce:	sbb    ch,BYTE PTR [edi]
  41edd0:	out    0xed,al
  41edd2:	inc    esi
  41edd3:	pop    ebp
  41edd4:	push   DWORD PTR [eax+0xb3e3c02]
  41edda:	imul   ebx,ecx,0x5f
  41eddd:	repz ret 
  41eddf:	and    al,0x89
  41ede1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ede2:	jae    0x41ede5
  41ede4:	dec    esi
  41ede5:	xor    DWORD PTR [esi-0x8],esi
  41ede8:	add    dl,BYTE PTR [ecx-0x684372ce]
  41edee:	sub    al,0xe2
  41edf0:	mov    eax,0xd7fe26b
  41edf5:	mov    bh,al
  41edf7:	ins    DWORD PTR es:[edi],dx
  41edf8:	mov    cl,0x79
  41edfa:	and    al,0xfe
  41edfc:	loopne 0x41ee4b
  41edfe:	mov    bl,0xe0
  41ee00:	sub    eax,0x3b9569a1
  41ee05:	and    BYTE PTR [ebx-0x79b3cfd3],ch
  41ee0b:	out    dx,al
  41ee0c:	jno    0x41ee48
  41ee0e:	pop    DWORD PTR [eax]
  41ee10:	add    BYTE PTR [eax],al
  41ee12:	push   edx
  41ee13:	push   ecx
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	lock jg 0x41ee66
  41ee21:	push   eax
  41ee22:	das    
  41ee23:	imul   eax,DWORD PTR [ecx],0x4f500
  41ee29:	add    BYTE PTR ds:0xe2beaddd,al
  41ee2f:	jp     0x41edfb
  41ee31:	fdiv   st(1),st
  41ee33:	inc    ebp
  41ee34:	add    esi,DWORD PTR [eax+0x68]
  41ee37:	imul   edx,DWORD PTR [ecx-0x3763a7d7],0xcf87cd9c
  41ee41:	sub    edi,edi
  41ee43:	mov    ds:0x1eedcaf9,al
  41ee48:	inc    ah
  41ee4a:	mov    DWORD PTR [ebx+0x51a7a274],esp
  41ee50:	ret    
  41ee51:	push   0x4
  41ee53:	fcmovnbe st,st(6)
  41ee55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee56:	in     al,0x77
  41ee58:	(bad)  
  41ee59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee5a:	test   DWORD PTR [edx-0x52d681b4],ecx
  41ee60:	jo     0x41eeae
  41ee62:	push   eax
  41ee63:	adc    al,0x6a
  41ee65:	add    al,0x0
  41ee67:	mov    ecx,0x825477f6
  41ee6c:	bound  esp,QWORD PTR [eax+0x53]
  41ee6f:	cmp    BYTE PTR [edi+0x3fa8a23a],0x79
  41ee76:	and    al,0x17
  41ee78:	rep lods eax,DWORD PTR ds:[esi]
  41ee7a:	jl     0x41ee5c
  41ee7c:	add    ebx,DWORD PTR [ecx]
  41ee7e:	add    dl,ch
  41ee80:	ss in  al,0xd3
  41ee83:	mov    eax,0x6d0f35bb
  41ee88:	cmp    ch,BYTE PTR [eax+0x49]
  41ee8b:	mov    ch,0xca
  41ee8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee8e:	and    al,0x3a
  41ee90:	fnsave [ecx-0x2d]
  41ee93:	jl     0x41ee76
  41ee95:	ss ret 
  41ee97:	jle    0x41eea3
  41ee99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee9a:	dec    eax
  41ee9b:	or     eax,0x48408f7a
  41eea0:	pop    eax
  41eea1:	fs and eax,0x4800cac3
  41eea7:	icebp  
  41eea8:	cdq    
  41eea9:	imul   esp,DWORD PTR [edx],0xea08905b
  41eeaf:	lock sub eax,0x4d7bf3a8
  41eeb5:	sub    BYTE PTR [eax-0x9406cbd],0x23
  41eebc:	ja     0x41eea1
  41eebe:	ins    BYTE PTR es:[edi],dx
  41eebf:	sbb    ah,BYTE PTR [ebp-0x3ab9e36d]
  41eec5:	pop    ss
  41eec6:	pop    ecx
  41eec7:	sbb    al,0xb3
  41eec9:	push   eax
  41eeca:	mov    al,0x89
  41eecc:	sbb    DWORD PTR [ecx],ebx
  41eece:	pop    esp
  41eecf:	mov    BYTE PTR [edi],ch
  41eed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eed2:	into   
  41eed3:	jp     0x41ef21
  41eed5:	pop    ebx
  41eed6:	jae    0x41ee7e
  41eed8:	and    eax,0x30c40a5
  41eedd:	aaa    
  41eede:	sub    DWORD PTR [eax-0x113fb834],esp
  41eee4:	sbb    edi,DWORD PTR [esi]
  41eee6:	pop    ds
  41eee7:	icebp  
  41eee8:	or     BYTE PTR [edi-0x24c0837f],dh
  41eeee:	and    DWORD PTR ds:0xb8741c2a,ecx
  41eef4:	les    ebx,FWORD PTR ds:[edi]
  41eef7:	jecxz  0x41ee9a
  41eef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eefa:	pop    esi
  41eefb:	push   ebp
  41eefc:	test   al,0x79
  41eefe:	mov    ds:0x61161220,eax
  41ef03:	inc    edi
  41ef04:	aam    0x6e
  41ef06:	and    ah,BYTE PTR [eax-0x1e]
  41ef09:	mov    eax,ds:0x1cb85cd0
  41ef0e:	inc    ecx
  41ef0f:	xchg   ecx,eax
  41ef10:	push   ss
  41ef11:	inc    edi
  41ef12:	retf   0xb99
  41ef15:	and    DWORD PTR [ecx+0x787fffd4],0xffffff94
  41ef1c:	push   0xffffffde
  41ef1e:	mul    DWORD PTR [edi+ebp*1+0xc]
  41ef22:	sbb    BYTE PTR [esi+0x7f],ch
  41ef25:	adc    al,0xc7
  41ef27:	push   ebp
  41ef28:	fsubr  QWORD PTR [esi+0x20]
  41ef2b:	and    al,0x9
  41ef2d:	cmp    BYTE PTR [eax+0x33ea482b],0x4e
  41ef34:	dec    BYTE PTR [esi]
  41ef36:	inc    ebp
  41ef37:	repnz xor dl,ch
  41ef3a:	cld    
  41ef3b:	shl    DWORD PTR [ecx+0x22],cl
  41ef3e:	(bad)  
  41ef3f:	xchg   ebp,eax
  41ef40:	and    DWORD PTR [esi+0x3499aa2e],ebx
  41ef46:	jbe    0x41eec9
  41ef48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef49:	shr    BYTE PTR [edi+0x74a932f4],cl
  41ef4f:	fs das 
  41ef51:	fcmovnb st,st(2)
  41ef53:	ja     0x41efac
  41ef55:	mov    dh,0x50
  41ef57:	ror    DWORD PTR [edi+0x2b],0x3e
  41ef5b:	pop    ds
  41ef5c:	dec    edi
  41ef5d:	mov    bl,0xc2
  41ef5f:	xlat   BYTE PTR ds:[ebx]
  41ef60:	hlt    
  41ef61:	je     0x41efda
  41ef63:	xor    cl,BYTE PTR [esi]
  41ef65:	ins    BYTE PTR es:[edi],dx
  41ef66:	xchg   edi,eax
  41ef67:	jmp    0x6794:0xcdf36e15
  41ef6e:	mov    esp,0x295ca056
  41ef73:	out    0xd1,al
  41ef75:	push   es
  41ef76:	stos   BYTE PTR es:[edi],al
  41ef77:	push   edi
  41ef78:	and    al,0x3d
  41ef7a:	scas   eax,DWORD PTR es:[edi]
  41ef7b:	inc    edi
  41ef7c:	clc    
  41ef7d:	push   eax
  41ef7e:	push   ebx
  41ef7f:	jp     0x41ef1c
  41ef81:	cdq    
  41ef82:	xor    DWORD PTR [esi-0xd],esi
  41ef85:	inc    esi
  41ef86:	add    DWORD PTR [esi],edx
  41ef88:	fld    DWORD PTR [edx]
  41ef8a:	ror    BYTE PTR [ecx-0x6e],1
  41ef8d:	je     0x41ef1f
  41ef8f:	or     DWORD PTR [eax+0x2a],ebx
  41ef92:	add    eax,0x4a4f7576
  41ef97:	(bad)  
  41ef98:	aad    0xcc
  41ef9a:	loop   0x41efe7
  41ef9c:	mov    DWORD PTR [esi],eax
  41ef9e:	hlt    
  41ef9f:	push   ecx
  41efa0:	mov    ebx,DWORD PTR [ecx+0x111186c7]
  41efa6:	fs push ebx
  41efa8:	mov    WORD PTR [ecx-0x7fcd7919],cs
  41efae:	dec    edx
  41efaf:	arpl   WORD PTR [ecx],dx
  41efb1:	add    BYTE PTR [ecx+0x4a],al
  41efb4:	adc    eax,0xbc2c781e
  41efb9:	xor    eax,0x35d3c186
  41efbe:	push   es
  41efbf:	loopne 0x41f02c
  41efc1:	and    BYTE PTR [edi-0x65a817ca],al
  41efc7:	ror    BYTE PTR [eax],1
  41efc9:	xchg   ebp,eax
  41efca:	cmovb  eax,DWORD PTR ds:0x3f98ee91
  41efd1:	xor    ebx,DWORD PTR [ebx]
  41efd3:	xchg   edx,eax
  41efd4:	pop    es
  41efd5:	dec    edi
  41efd6:	bound  ecx,QWORD PTR [esi+0x7b1607b]
  41efdc:	adc    al,0x1a
  41efde:	xchg   ecx,eax
  41efdf:	test   BYTE PTR [ecx],dl
  41efe1:	repz (bad) 
  41efe3:	push   ebp
  41efe4:	inc    edx
  41efe5:	in     eax,dx
  41efe6:	inc    esi
  41efe7:	jb     0x41efcd
  41efe9:	add    BYTE PTR [edi-0xa],al
  41efec:	pop    edx
  41efed:	scas   al,BYTE PTR es:[edi]
  41efee:	ins    BYTE PTR es:[edi],dx
  41efef:	(bad)
  41eff3:	lock jg 0x41efe0
  41eff6:	jge    0x41ef83
  41eff8:	outs   dx,BYTE PTR ds:[esi]
  41eff9:	and    BYTE PTR [edi-0x48],bl
  41effc:	mov    bl,0xb0
  41effe:	aas    
  41efff:	mov    ch,0x19
  41f001:	sbb    ecx,DWORD PTR [edi]
  41f003:	inc    esi
  41f004:	jnp    0x41f069
  41f006:	cmp    dl,bl
  41f008:	dec    esp
  41f009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f00a:	dec    eax
  41f00b:	gs loope 0x41f019
  41f00e:	mov    bl,0xa9
  41f010:	sub    BYTE PTR [ebp+0x43cfd64a],bh
  41f016:	sar    BYTE PTR ss:[eax-0x66],1
  41f01a:	lods   eax,DWORD PTR ds:[esi]
  41f01b:	pop    ecx
  41f01c:	jmp    0x41f035
  41f01e:	jbe    0x41efde
  41f020:	icebp  
  41f021:	cmp    dh,cl
  41f023:	fnsave [eax-0x79]
  41f026:	xchg   ch,bh
  41f028:	or     eax,0xaffb9f5e
  41f02d:	mov    eax,ds:0xed704a39
  41f032:	ins    DWORD PTR es:[edi],dx
  41f033:	push   ebx
  41f034:	retf   0xd91f
  41f037:	xchg   esi,eax
  41f038:	add    BYTE PTR [edx-0x390edf5],cl
  41f03e:	jbe    0x41f027
  41f040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f041:	push   ecx
  41f042:	test   DWORD PTR [edi-0x18],esp
  41f045:	ins    DWORD PTR es:[edi],dx
  41f046:	out    dx,eax
  41f047:	pop    esp
  41f048:	and    eax,0xac3a6fe6
  41f04d:	pop    edi
  41f04e:	add    eax,0xd2efc11e
  41f053:	mov    dh,0x87
  41f055:	jae    0x41f055
  41f057:	(bad)  
  41f058:	cmc    
  41f059:	sbb    DWORD PTR [esi+0x6b],ebx
  41f05c:	or     cl,dl
  41f05e:	scas   al,BYTE PTR es:[edi]
  41f05f:	xchg   esi,eax
  41f060:	(bad)  
  41f061:	adc    BYTE PTR [esi],bl
  41f063:	xor    edx,DWORD PTR [edi]
  41f065:	stos   BYTE PTR es:[edi],al
  41f066:	iret   
  41f067:	fist   DWORD PTR [ebp-0x4f]
  41f06a:	mov    DWORD PTR [eax-0x5e],ecx
  41f06d:	ret    
  41f06e:	sub    DWORD PTR [ecx+0x5],edx
  41f071:	inc    edx
  41f072:	mov    ah,0xf0
  41f074:	sub    esi,eax
  41f076:	rcr    DWORD PTR [edx+edi*2],cl
  41f079:	and    BYTE PTR [edx-0x55],0x4d
  41f07d:	imul   ebp,DWORD PTR [ecx+0x6edc2a8e],0xffffffd8
  41f084:	or     DWORD PTR [eax],0x33
  41f087:	xchg   edi,eax
  41f088:	rcl    BYTE PTR [ebp+0x62f9d797],cl
  41f08e:	outs   dx,BYTE PTR ds:[esi]
  41f08f:	idiv   BYTE PTR [edi-0x3a]
  41f092:	sar    DWORD PTR [edx],1
  41f094:	sub    al,0x24
  41f096:	das    
  41f097:	add    eax,0x66f750de
  41f09c:	jnp    0x41f074
  41f09e:	pushf  
  41f09f:	push   ds
  41f0a0:	(bad)  
  41f0a2:	push   0x74
  41f0a4:	sub    ch,BYTE PTR [esi+edi*8-0x154cd9d9]
  41f0ab:	push   esp
  41f0ac:	push   0xffffffb5
  41f0ae:	test   DWORD PTR [edi],eax
  41f0b0:	push   ecx
  41f0b1:	push   cs
  41f0b2:	mov    esi,0x8cbba638
  41f0b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0b8:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0ba:	shl    DWORD PTR ss:[ebp+0x63381c9e],0x8c
  41f0c2:	and    ch,ah
  41f0c4:	leave  
  41f0c5:	and    al,BYTE PTR ds:0xb77875c1
  41f0cb:	ja     0x41f136
  41f0cd:	mov    edx,edi
  41f0cf:	xchg   ebp,eax
  41f0d0:	loope  0x41f10b
  41f0d2:	xchg   esp,eax
  41f0d3:	and    eax,DWORD PTR [eiz*4-0x6bde4e5c]
  41f0da:	mov    ebp,0x1537e352
  41f0df:	pusha  
  41f0e0:	and    BYTE PTR [ebx],ch
  41f0e2:	dec    edx
  41f0e3:	sbb    esp,DWORD PTR [eax]
  41f0e5:	cli    
  41f0e6:	xchg   esp,eax
  41f0e7:	jp     0x41f0d7
  41f0e9:	jge    0x41f0f4
  41f0eb:	jae    0x41f0ba
  41f0ed:	cmp    eax,DWORD PTR [esi-0x11]
  41f0f0:	inc    ecx
  41f0f1:	mov    eax,ds:0x21739faf
  41f0f6:	je     0x41f0cb
  41f0f8:	mov    bh,0x44
  41f0fa:	out    0xfe,al
  41f0fc:	jae    0x41f0d6
  41f0fe:	jle    0x41f0c8
  41f100:	xchg   edx,eax
  41f101:	dec    edx
  41f102:	xchg   edx,eax
  41f103:	push   eax
  41f104:	xchg   edx,eax
  41f105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f106:	xor    BYTE PTR [ebp+0x7be3f298],0x73
  41f10d:	ins    BYTE PTR es:[edi],dx
  41f10e:	addr16 dec edx
  41f110:	ror    bl,1
  41f112:	pop    esi
  41f113:	dec    ebx
  41f114:	mov    ebx,0x43592fa9
  41f119:	lods   eax,DWORD PTR ds:[esi]
  41f11a:	(bad)  
  41f11b:	fnstcw WORD PTR [edi]
  41f11d:	test   DWORD PTR [ecx-0x7ff2161a],edi
  41f123:	retf   
  41f124:	fwait
  41f125:	ins    BYTE PTR es:[edi],dx
  41f126:	cmp    bl,BYTE PTR [edi]
  41f128:	fwait
  41f129:	add    BYTE PTR [ebp-0x4eeb5310],ch
  41f12f:	int    0x39
  41f131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f132:	mov    eax,0xf4162a3
  41f137:	out    0xfe,al
  41f139:	fsub   QWORD PTR [edi-0x7]
  41f13c:	mov    DWORD PTR [esi-0x3e],ebx
  41f13f:	add    eax,esp
  41f141:	push   edx
  41f142:	dec    edi
  41f143:	mov    ds:0x90f9f338,al
  41f148:	loop   0x41f1a9
  41f14a:	gs test eax,0x4abf3895
  41f150:	jno    0x41f15b
  41f152:	sub    dh,BYTE PTR [ebx-0x2bf9b629]
  41f158:	popa   
  41f159:	pop    es
  41f15a:	dec    esi
  41f15b:	shr    DWORD PTR [edx+0x6496d314],1
  41f161:	ds icebp 
  41f163:	call   FWORD PTR [ecx+0x27]
  41f166:	inc    edi
  41f167:	inc    ecx
  41f168:	jle    0x41f140
  41f16a:	lods   al,BYTE PTR ds:[esi]
  41f16b:	or     ebp,DWORD PTR [edx+ebp*1]
  41f16e:	sbb    eax,0x560224e5
  41f173:	sub    BYTE PTR [edi],bh
  41f175:	push   edx
  41f176:	adc    eax,0xc356b8c0
  41f17b:	xlat   BYTE PTR ds:[ebx]
  41f17c:	jl     0x41f10f
  41f17e:	or     eax,edi
  41f180:	fmul   QWORD PTR [edi-0x7e]
  41f183:	jb     0x41f13a
  41f185:	aad    0xe4
  41f187:	jbe    0x41f1ee
  41f189:	cdq    
  41f18a:	mov    edi,ecx
  41f18c:	pop    ebp
  41f18d:	push   0xa3d8acae
  41f192:	push   ss
  41f193:	dec    BYTE PTR [edi]
  41f195:	shl    DWORD PTR [esi],cl
  41f197:	out    0x23,al
  41f199:	shl    DWORD PTR [ebp+0x5f2bbb92],cl
  41f19f:	xchg   BYTE PTR [ebp+0x38],ah
  41f1a2:	int    0xc3
  41f1a4:	mov    edx,0x1e456e06
  41f1a9:	cmp    ch,bl
  41f1ab:	pop    esp
  41f1ac:	mov    edx,DWORD PTR [edi-0x62]
  41f1af:	jmp    0x41f14e
  41f1b1:	jp     0x41f1d7
  41f1b3:	in     al,0xd1
  41f1b5:	inc    eax
  41f1b6:	dec    ebx
  41f1b7:	nop
  41f1b8:	call   0xecd4b9bb
  41f1bd:	inc    edi
  41f1be:	dec    esp
  41f1bf:	sub    ebp,DWORD PTR [ecx+ebp*8+0x492bf563]
  41f1c6:	aam    0x59
  41f1c8:	xchg   edi,eax
  41f1c9:	repz mov ebp,0x9727cc2e
  41f1cf:	in     eax,0xac
  41f1d1:	jmp    0x8cfe63d0
  41f1d6:	mov    ebx,0x79daac33
  41f1db:	ss inc eax
  41f1dd:	mul    cl
  41f1df:	nop
  41f1e0:	inc    ecx
  41f1e1:	mov    bl,0xec
  41f1e3:	mov    esi,0x37cf4b32
  41f1e8:	lock xchg DWORD PTR [ecx+0x1e],eax
  41f1ec:	sbb    BYTE PTR [edi+ebp*1+0x17ec11ea],al
  41f1f3:	xor    edx,DWORD PTR [ecx+0x1180bece]
  41f1f9:	sub    dh,bl
  41f1fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1fc:	out    dx,al
  41f1fd:	xchg   edi,eax
  41f1fe:	xchg   BYTE PTR [esi-0x3a],dl
  41f201:	into   
  41f202:	popf   
  41f203:	sub    eax,0xfd9b9e2b
  41f208:	imul   ebp,DWORD PTR [esi+ebx*1+0xdd2fb08],0x0
  41f210:	mov    eax,0x1cc934
  41f215:	(bad)  
  41f216:	push   ss
  41f217:	add    DWORD PTR [edi],ebx
  41f219:	in     eax,dx
  41f21a:	scas   al,BYTE PTR es:[edi]
  41f21b:	xor    al,0x78
  41f21d:	fadd   st,st(4)
  41f21f:	sub    al,0xbf
  41f221:	xor    edi,DWORD PTR [edi+0x43f61663]
  41f227:	mov    ch,0x1a
  41f229:	test   BYTE PTR [ebp+0x4bbb7c45],dl
  41f22f:	ret    
  41f230:	xchg   ebx,eax
  41f231:	daa    
  41f232:	pop    ebp
  41f233:	test   DWORD PTR [esi-0x431992c0],esp
  41f239:	mov    edx,0x6410c0d7
  41f23e:	mov    gs,WORD PTR [ecx]
  41f240:	lods   eax,DWORD PTR ds:[esi]
  41f241:	fistp  DWORD PTR [esi+esi*1-0x4d]
  41f245:	daa    
  41f246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f247:	sub    dh,BYTE PTR [edx]
  41f249:	pop    ebp
  41f24a:	mov    bx,WORD PTR [ebx]
  41f24d:	cmp    bh,BYTE PTR [si]
  41f250:	inc    esp
  41f251:	fbld   TBYTE PTR [ebx-0x320d766]
  41f257:	adc    DWORD PTR [ebx+ecx*8],ebx
  41f25a:	or     BYTE PTR [ecx-0x75],bh
  41f25d:	ins    DWORD PTR es:[edi],dx
  41f25e:	cmp    ebx,DWORD PTR [edi]
  41f260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f261:	cmp    ebp,DWORD PTR [esp+eax*2-0x64998e4e]
  41f268:	or     al,0x2a
  41f26a:	mov    ecx,0x34e25ca3
  41f26f:	shl    DWORD PTR [ebx+0x73],cl
  41f272:	shr    DWORD PTR [esi-0x2a],cl
  41f275:	xchg   edi,eax
  41f276:	xchg   esp,eax
  41f277:	xor    al,ch
  41f279:	dec    ecx
  41f27a:	test   eax,0xdf1bfcb
  41f27f:	(bad)  
  41f280:	(bad)  
  41f281:	sti    
  41f282:	into   
  41f283:	sub    ecx,DWORD PTR [esi+0x1ac96142]
  41f289:	int3   
  41f28a:	std    
  41f28b:	push   es
  41f28c:	pop    ebx
  41f28d:	jg     0x41f214
  41f28f:	mov    edi,0x393459d
  41f294:	pop    edx
  41f295:	cmp    bh,BYTE PTR [edx+0x1fa91574]
  41f29b:	xchg   edx,eax
  41f29c:	mov    ah,0x97
  41f29e:	push   ebp
  41f29f:	push   ebx
  41f2a0:	mov    ds:0x5c7074bc,al
  41f2a5:	fidiv  WORD PTR [eax]
  41f2a7:	inc    edi
  41f2a8:	clc    
  41f2a9:	and    dh,BYTE PTR [ebp-0xe]
  41f2ac:	xor    DWORD PTR [eax-0xfdf9fe2],ecx
  41f2b2:	sbb    BYTE PTR [ecx],ch
  41f2b4:	out    0x63,eax
  41f2b6:	pop    es
  41f2b7:	jns    0x41f23b
  41f2b9:	mov    ds:0x93279356,al
  41f2be:	int3   
  41f2bf:	sti    
  41f2c0:	sub    al,BYTE PTR ds:[eax]
  41f2c3:	adc    BYTE PTR [edi-0x53511a5a],bh
  41f2c9:	mov    al,ah
  41f2cb:	dec    edi
  41f2cc:	out    dx,eax
  41f2cd:	ret    
  41f2ce:	dec    edx
  41f2cf:	lds    ecx,FWORD PTR [edx-0x11d900e0]
  41f2d5:	pop    eax
  41f2d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2d7:	cmp    BYTE PTR [edx],ch
  41f2d9:	dec    ebx
  41f2da:	sbb    DWORD PTR [esi],edi
  41f2dc:	inc    eax
  41f2dd:	fsubr  QWORD PTR [eax+eiz*1]
  41f2e0:	popf   
  41f2e1:	jb     0x41f270
  41f2e3:	dec    ecx
  41f2e5:	and    al,0x77
  41f2e7:	sub    BYTE PTR [esi-0x8],bl
  41f2ea:	xor    eax,ebp
  41f2ec:	sub    eax,ebp
  41f2ee:	and    al,bl
  41f2f0:	int3   
  41f2f1:	imul   edi,DWORD PTR [ecx-0xe],0xffffffca
  41f2f5:	ja     0x41f36d
  41f2f7:	push   ds
  41f2f8:	retf   0xaa37
  41f2fb:	and    eax,0x3c126021
  41f300:	(bad)  
  41f302:	pop    es
  41f303:	cmp    al,0xf
  41f305:	out    dx,al
  41f306:	cli    
  41f307:	mov    edi,0xd6f3029e
  41f30c:	inc    ebx
  41f30d:	(bad)  
  41f30e:	push   esi
  41f30f:	rol    eax,1
  41f311:	(bad)  
  41f312:	aam    0xda
  41f314:	(bad)  
  41f315:	out    0x7,al
  41f317:	fwait
  41f318:	gs ins DWORD PTR es:[edi],dx
  41f31a:	dec    eax
  41f31b:	sti    
  41f31c:	push   cs
  41f31d:	test   al,0x0
  41f31f:	add    BYTE PTR [eax],al
  41f321:	add    BYTE PTR [ebx],ch
  41f323:	mov    eax,ds:0xf6cb1443
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	xor    BYTE PTR [ecx],0x7c
  41f330:	loopne 0x41f343
  41f332:	and    al,0x6e
  41f334:	add    DWORD PTR [eax],eax
  41f336:	cmc    
  41f337:	add    al,0x0
  41f339:	add    cl,ah
  41f33b:	cmp    dh,BYTE PTR [eax+0x4d2ac682]
  41f341:	and    edx,DWORD PTR [ecx-0x71]
  41f344:	into   
  41f345:	or     DWORD PTR [eax],ebp
  41f347:	ins    BYTE PTR es:[edi],dx
  41f348:	cmp    dh,bl
  41f34a:	jg     0x41f31b
  41f34c:	mov    al,ds:0xbf72fbb
  41f351:	and    DWORD PTR [ebx+ebx*1],esi
  41f354:	jle    0x41f316
  41f356:	mov    bh,0x8a
  41f358:	inc    esi
  41f359:	dec    edi
  41f35a:	cs jmp 0xc61:0xe0e9775f
  41f362:	fcmovu st,st(1)
  41f364:	aad    0x1f
  41f366:	cwde   
  41f367:	and    dh,BYTE PTR [ebx]
  41f369:	mov    eax,ds:0x95c2db57
  41f36e:	xchg   esi,eax
  41f36f:	fsub   st,st(7)
  41f371:	or     eax,0x6f15aafe
  41f376:	mov    ch,0x93
  41f378:	jmp    0x41f351
  41f37a:	adc    eax,0x6a013ae7
  41f37f:	out    0x3b,al
  41f381:	rol    BYTE PTR [edx-0x6227f300],cl
  41f387:	push   esi
  41f388:	or     dl,BYTE PTR [ebx-0x76]
  41f38b:	xchg   ebp,eax
  41f38c:	popf   
  41f38d:	fisttp QWORD PTR [ebp+0x63]
  41f390:	adc    dh,BYTE PTR [edx+eiz*8+0x4f]
  41f394:	in     eax,0x1f
  41f396:	or     edi,DWORD PTR [edx]
  41f398:	stc    
  41f399:	push   esp
  41f39a:	ret    
  41f39b:	imul   esi
  41f39d:	add    BYTE PTR [ebx-0x1407442],bh
  41f3a3:	mov    ah,0x9e
  41f3a5:	sti    
  41f3a6:	pop    ss
  41f3a7:	and    BYTE PTR [edi+0xdafe4ad],bl
  41f3ad:	mov    BYTE PTR [edi+ebx*8],bh
  41f3b0:	adc    BYTE PTR [ecx+0x108979fc],bl
  41f3b6:	cmp    BYTE PTR [eax+eax*1],ah
  41f3b9:	loopne 0x41f390
  41f3bb:	jne    0x41f40a
  41f3bd:	(bad)  
  41f3be:	fstp   QWORD PTR [esi-0x74]
  41f3c1:	pop    ebp
  41f3c2:	loop   0x41f389
  41f3c4:	jl     0x41f402
  41f3c6:	fistp  DWORD PTR [eax]
  41f3c8:	push   esp
  41f3c9:	mov    edx,0xbe01d57e
  41f3ce:	(bad)  
  41f3cf:	fisttp WORD PTR [ecx+0x48]
  41f3d2:	cmp    al,0x8c
  41f3d4:	push   edi
  41f3d5:	pusha  
  41f3d6:	pop    esp
  41f3d7:	sahf   
  41f3d8:	jp     0x41f3f2
  41f3da:	xchg   esi,eax
  41f3db:	jnp    0x41f3bc
  41f3dd:	out    0x56,eax
  41f3df:	(bad)  
  41f3e1:	add    al,BYTE PTR [esi-0x54]
  41f3e4:	inc    esi
  41f3e5:	rol    dl,1
  41f3e7:	pop    es
  41f3e8:	cmp    eax,0x62244319
  41f3ed:	mov    dh,0x9
  41f3ef:	in     al,dx
  41f3f0:	or     DWORD PTR [edi-0x79186048],ebp
  41f3f6:	idiv   DWORD PTR [ecx+0x76707fe0]
  41f3fc:	iret   
  41f3fd:	(bad)  
  41f3fe:	rol    BYTE PTR [ecx+0x23],1
  41f401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f402:	fld    TBYTE PTR [ebx]
  41f404:	mov    ds:0x976def5,al
  41f409:	fldenv [ebp-0x4ec06903]
  41f40f:	mov    BYTE PTR [edi],bl
  41f411:	pop    es
  41f412:	(bad)  
  41f414:	mov    esp,0x790af317
  41f419:	and    dl,bl
  41f41b:	fstp   DWORD PTR [edi]
  41f41d:	adc    dl,BYTE PTR [ebx+0x3b56c00e]
  41f423:	pop    edi
  41f424:	rol    BYTE PTR [ebx+0x26],1
  41f427:	test   eax,0x9832d507
  41f42c:	push   eax
  41f42d:	ins    DWORD PTR es:[edi],dx
  41f42e:	dec    ebp
  41f42f:	mov    eax,ds:0x69b44bc3
  41f434:	push   ds
  41f435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f436:	psubw  mm4,mm0
  41f439:	and    al,bl
  41f43b:	sub    ebp,DWORD PTR [ebp-0x11]
  41f43e:	mov    bh,0xb6
  41f440:	bswap  edx
  41f442:	aas    
  41f443:	xchg   ebp,eax
  41f444:	mov    ch,0xb8
  41f446:	pop    ebp
  41f447:	jnp    0x41f3fe
  41f449:	and    bh,BYTE PTR [ebp+0x2a]
  41f44c:	pop    edx
  41f44d:	nop
  41f44e:	dec    ebx
  41f44f:	jne    0x41f476
  41f451:	jl     0x41f3e9
  41f453:	mov    eax,ds:0x99ac62fd
  41f458:	dec    esp
  41f459:	and    al,0xd2
  41f45b:	sahf   
  41f45c:	jl     0x41f47b
  41f45e:	xchg   bl,bl
  41f460:	int3   
  41f461:	push   esp
  41f462:	xlat   BYTE PTR ds:[ebx]
  41f463:	(bad)  
  41f464:	jns    0x41f492
  41f466:	out    dx,al
  41f467:	fs jg  0x41f3f8
  41f46a:	pop    eax
  41f46b:	xor    al,0x3a
  41f46d:	mov    dh,0xea
  41f46f:	sub    al,BYTE PTR [esi]
  41f471:	aas    
  41f472:	sub    eax,0x7fc73635
  41f477:	fidiv  DWORD PTR [edi+eiz*2+0x6952ce69]
  41f47e:	dec    edx
  41f47f:	adc    al,0xb2
  41f481:	hlt    
  41f482:	push   0xfc84b6
  41f487:	cmp    al,0xd0
  41f489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f48a:	mov    ebx,0x9797d33f
  41f48f:	xchg   edx,eax
  41f490:	mov    bl,0x9e
  41f492:	ds nop
  41f494:	hlt    
  41f495:	push   ecx
  41f496:	push   esi
  41f497:	rol    BYTE PTR [edx+0x6f73f070],cl
  41f49d:	bound  esi,QWORD PTR [esi-0x51d4cbcf]
  41f4a3:	or     DWORD PTR [esi],ebx
  41f4a5:	test   DWORD PTR [ecx],edi
  41f4a7:	pop    edx
  41f4a8:	imul   edi,DWORD PTR [edx],0xffffffeb
  41f4ab:	sahf   
  41f4ac:	(bad)  
  41f4ad:	leave  
  41f4ae:	or     DWORD PTR [edi+0xa5e9544],esi
  41f4b4:	cli    
  41f4b5:	sar    DWORD PTR [ebx-0x7bded281],cl
  41f4bb:	mov    ?,WORD PTR [edx+0x5a377608]
  41f4c1:	ins    BYTE PTR es:[edi],dx
  41f4c2:	inc    ebx
  41f4c3:	jns    0x41f4f0
  41f4c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c6:	outs   dx,DWORD PTR ds:[esi]
  41f4c7:	and    edx,esp
  41f4c9:	push   ecx
  41f4ca:	and    ch,BYTE PTR [ebp+eiz*1-0x16]
  41f4ce:	lock dec eax
  41f4d0:	ds xchg edx,eax
  41f4d2:	push   ds
  41f4d3:	sti    
  41f4d4:	ds es ins DWORD PTR es:[edi],dx
  41f4d7:	popa   
  41f4d8:	js     0x41f51c
  41f4da:	out    dx,eax
  41f4db:	clc    
  41f4dc:	and    dh,dh
  41f4de:	and    DWORD PTR [esi+0x3a5977a6],ecx
  41f4e4:	push   esi
  41f4e5:	xchg   esi,eax
  41f4e6:	push   cs
  41f4e7:	jbe    0x41f54c
  41f4e9:	sub    cl,BYTE PTR [eax+0x580efb5e]
  41f4ef:	retf   
  41f4f0:	ret    
  41f4f1:	pusha  
  41f4f2:	ds sub al,0xc5
  41f4f5:	bound  esp,QWORD PTR [esi+0x192a7e52]
  41f4fb:	add    eax,DWORD PTR [eax+edx*8+0x1e297d65]
  41f502:	and    al,0xe3
  41f504:	cmp    eax,0x6be1614a
  41f509:	ins    DWORD PTR es:[edi],dx
  41f50a:	pop    ecx
  41f50b:	fs add al,0x77
  41f50e:	(bad)  
  41f50f:	mov    ebx,0x615a6927
  41f514:	mov    edi,0xa8a61dc6
  41f519:	fdiv   DWORD PTR [edx-0x35]
  41f51c:	out    0xe2,al
  41f51e:	lahf   
  41f51f:	mov    ebx,0x7e95086d
  41f524:	or     edi,DWORD PTR [edi]
  41f526:	adc    eax,0x6833cf37
  41f52b:	stos   DWORD PTR es:[edi],eax
  41f52c:	enter  0x9a8b,0x48
  41f530:	jo     0x41f554
  41f532:	dec    edi
  41f533:	push   ds
  41f534:	xchg   DWORD PTR gs:[ebx+ecx*2+0xf20b649],esp
  41f53c:	pop    esi
  41f53d:	fdivr  QWORD PTR [ebx+0x5]
  41f540:	jge    0x41f580
  41f542:	call   0x1196eaf7
  41f547:	bound  esi,QWORD PTR [ecx+0x38ea9c17]
  41f54d:	mov    esi,ebp
  41f54f:	add    eax,esi
  41f551:	adc    al,0x83
  41f553:	mov    DWORD PTR [ecx+0x3f01bbb2],edi
  41f559:	sub    al,0x96
  41f55b:	dec    ebp
  41f55c:	jp     0x41f52c
  41f55e:	ins    DWORD PTR es:[edi],dx
  41f55f:	xchg   edx,eax
  41f560:	scas   eax,DWORD PTR es:[edi]
  41f561:	xor    ebp,DWORD PTR [edx]
  41f563:	add    esp,DWORD PTR [ebx]
  41f565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f566:	jp     0x41f4ff
  41f568:	xor    dl,BYTE PTR [eax-0x56]
  41f56b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f56c:	mov    fs,WORD PTR [eax-0x27]
  41f56f:	mov    ecx,0xc7960868
  41f574:	ret    0xb9a4
  41f577:	mov    dh,0xec
  41f579:	add    al,0xb3
  41f57b:	lods   al,BYTE PTR ds:[esi]
  41f57c:	enter  0x806a,0xa4
  41f580:	dec    ebx
  41f581:	mov    eax,0xe652131f
  41f586:	fs inc edx
  41f588:	mov    DWORD PTR [ecx+ebp*4+0x7a],esi
  41f58c:	inc    esi
  41f58d:	jl     0x41f529
  41f58f:	loopne 0x41f596
  41f591:	lds    esp,FWORD PTR [ebx+eiz*1+0x152ad185]
  41f598:	inc    edx
  41f599:	xor    dh,0xa8
  41f59c:	adc    DWORD PTR [ecx+0xa021bf9],eax
  41f5a2:	mov    eax,ds:0x84d7d831
  41f5a7:	aas    
  41f5a8:	(bad)  
  41f5a9:	mov    ah,0xc3
  41f5ab:	xchg   esi,eax
  41f5ac:	loop   0x41f555
  41f5ae:	(bad)  
  41f5af:	adc    ebp,eax
  41f5b1:	call   DWORD PTR [ecx+eiz*8-0x18]
  41f5b5:	pop    edx
  41f5b6:	jge    0x41f562
  41f5b8:	xchg   ebx,eax
  41f5b9:	imul   ebx,DWORD PTR [edx-0x65],0x61
  41f5bd:	add    eax,0x8141a6ff
  41f5c2:	jo     0x41f5e0
  41f5c4:	dec    edi
  41f5c5:	adc    DWORD PTR cs:[ebp-0x17aa6ee0],ebx
  41f5cc:	push   esi
  41f5cd:	sbb    ecx,ecx
  41f5cf:	add    WORD PTR [edx-0x34dc9a6e],sp
  41f5d6:	jecxz  0x41f584
  41f5d8:	out    dx,al
  41f5d9:	retf   0xf477
  41f5dc:	cmp    BYTE PTR [ebp+0x813d5a8],bl
  41f5e2:	or     DWORD PTR [esi-0x60],eax
  41f5e5:	outs   dx,DWORD PTR ds:[esi]
  41f5e6:	and    BYTE PTR [ebx-0x58c0df98],ch
  41f5ec:	stos   DWORD PTR es:[edi],eax
  41f5ed:	xchg   esp,eax
  41f5ee:	jo     0x41f600
  41f5f0:	jb     0x41f5f5
  41f5f2:	pop    ebp
  41f5f3:	sti    
  41f5f4:	ret    0xa588
  41f5f7:	rol    BYTE PTR [edi],cl
  41f5f9:	cmp    eax,0xdc3b6372
  41f5fe:	fisubr DWORD PTR [eax+0x79]
  41f601:	xchg   ebx,eax
  41f602:	retf   0xc37d
  41f605:	push   0xa11d415a
  41f60a:	dec    ebp
  41f60b:	or     al,0x33
  41f60d:	(bad)  
  41f60e:	cmc    
  41f60f:	jmp    0x1078e845
  41f614:	fist   DWORD PTR [ebx]
  41f616:	pop    edx
  41f617:	aam    0x1c
  41f619:	push   0xddd1b00c
  41f61e:	push   ds
  41f61f:	shl    BYTE PTR [eax+0x6c],0x5
  41f623:	fidivr WORD PTR [ebp-0x7c2678f4]
  41f629:	jl     0x41f608
  41f62b:	(bad)  
  41f62c:	shl    BYTE PTR [ebp-0x38],cl
  41f62f:	sub    DWORD PTR [edx+0x55],esp
  41f632:	(bad)  
  41f633:	pop    edi
  41f634:	inc    ebp
  41f635:	lock and DWORD PTR [edx],esp
  41f638:	test   DWORD PTR [ecx+0x2d8d064a],esp
  41f63e:	mov    dl,0x5b
  41f640:	sahf   
  41f641:	aas    
  41f642:	mov    dh,0x2a
  41f644:	pop    ebx
  41f645:	push   ebx
  41f646:	lock imul ecx,edx,0xdece707a
  41f64d:	mov    ds:0xd1dab117,al
  41f652:	leave  
  41f653:	xchg   esp,eax
  41f654:	adc    eax,0x12aa9909
  41f659:	push   ss
  41f65a:	jns    0x41f660
  41f65c:	mov    al,ds:0xc8fa308a
  41f661:	rol    BYTE PTR [ecx+eiz*2-0x21],cl
  41f665:	std    
  41f666:	mov    dl,0xf8
  41f668:	xor    esi,DWORD PTR [esi]
  41f66a:	dec    ebx
  41f66b:	dec    DWORD PTR [edi+0x1986eff2]
  41f671:	pop    ds
  41f672:	jge    0x41f6c7
  41f674:	jge    0x41f648
  41f676:	loop   0x41f6c2
  41f678:	cmp    esi,eax
  41f67a:	repz fcom QWORD PTR [edi-0x52]
  41f67e:	xchg   DWORD PTR [esi+edi*2+0x5068c56c],ebp
  41f685:	xchg   edx,eax
  41f686:	mov    ch,0xa0
  41f688:	jns    0x41f62c
  41f68a:	es pop ebp
  41f68c:	push   edi
  41f68d:	ret    
  41f68e:	pop    eax
  41f68f:	std    
  41f690:	out    0x55,eax
  41f692:	add    esp,DWORD PTR [ebp-0x77]
  41f695:	dec    ebx
  41f696:	stc    
  41f697:	and    DWORD PTR [edi],edi
  41f699:	pop    esi
  41f69a:	ja     0x41f70f
  41f69c:	stos   DWORD PTR es:[edi],eax
  41f69d:	dec    edx
  41f69e:	dec    eax
  41f69f:	(bad)  
  41f6a0:	adc    DWORD PTR [edi-0x34ef966b],esp
  41f6a6:	sub    BYTE PTR [ecx-0x25a4723],ch
  41f6ac:	lods   eax,DWORD PTR ds:[esi]
  41f6ad:	sub    DWORD PTR [ebp-0x28],esi
  41f6b0:	sbb    dh,BYTE PTR [edx]
  41f6b2:	ins    DWORD PTR es:[edi],dx
  41f6b3:	lea    edx,[edi]
  41f6b5:	xchg   esi,eax
  41f6b6:	inc    ecx
  41f6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6b8:	(bad)  
  41f6b9:	test   eax,0xba3830a9
  41f6be:	fcom   st(2)
  41f6c0:	sub    BYTE PTR [ecx-0x7c],ah
  41f6c3:	mov    esi,0xe431a5a0
  41f6c8:	vpaddd xmm3,xmm7,XMMWORD PTR [ebx]
  41f6cc:	scas   al,BYTE PTR es:[edi]
  41f6cd:	xor    edx,ebp
  41f6cf:	aas    
  41f6d0:	xchg   ebp,eax
  41f6d1:	mov    ebx,0x3af1acd2
  41f6d6:	pop    ds
  41f6d7:	(bad)  
  41f6d9:	xchg   esi,eax
  41f6da:	(bad)  
  41f6db:	ds xchg edi,eax
  41f6dd:	jnp    0x41f710
  41f6df:	inc    ebx
  41f6e0:	out    0x24,al
  41f6e2:	and    eax,0x4f7311c5
  41f6e7:	mov    bl,0x3b
  41f6e9:	inc    eax
  41f6ea:	mov    eax,ds:0xbe60c0eb
  41f6ef:	mov    esp,0xdb509421
  41f6f4:	xchg   edi,eax
  41f6f5:	xchg   ecx,ecx
  41f6f7:	jecxz  0x41f769
  41f6f9:	mov    WORD PTR [edi-0x3e0779],cs
  41f6ff:	xor    DWORD PTR [ecx+0x35],eax
  41f702:	add    eax,0x36c50124
  41f707:	je     0x41f73c
  41f709:	mul    DWORD PTR [ecx-0x4dc84df5]
  41f70f:	out    0x1c,eax
  41f711:	adc    edi,DWORD PTR [eax]
  41f713:	adc    al,0x11
  41f715:	add    al,0x6f
  41f717:	xchg   dh,dh
  41f719:	leave  
  41f71a:	adc    al,0x36
  41f71c:	test   eax,0x18d9705
  41f721:	pop    ss
  41f722:	out    0xfd,eax
  41f724:	jmp    0xd42a:0x730f2e16
  41f72b:	xor    ch,BYTE PTR [edx-0x4f]
  41f72e:	add    eax,DWORD PTR [edi-0x774b9bed]
  41f734:	add    ebp,0xd9b2a762
  41f73a:	xchg   ebx,eax
  41f73b:	add    ch,0xd3
  41f73e:	sub    eax,0xfb05e088
  41f743:	cmp    ecx,esp
  41f745:	inc    eax
  41f746:	push   edi
  41f747:	loop   0x41f769
  41f749:	stos   DWORD PTR es:[edi],eax
  41f74a:	fstp   DWORD PTR [ecx]
  41f74c:	add    DWORD PTR [eax-0x6f480cb7],esi
  41f752:	int    0x5b
  41f754:	push   ecx
  41f755:	in     eax,0x38
  41f757:	mov    cl,0xa3
  41f759:	push   cs
  41f75a:	sti    
  41f75b:	jmp    0x8989ce27
  41f760:	les    ebp,FWORD PTR [edi+0x6e1341fb]
  41f766:	ins    BYTE PTR es:[edi],dx
  41f767:	out    dx,al
  41f768:	cmp    ah,cl
  41f76a:	scas   al,BYTE PTR es:[edi]
  41f76b:	ret    0xf51b
  41f76e:	push   0xba79ab60
  41f773:	data16 cli 
  41f775:	pushf  
  41f776:	mov    ecx,0xfe606180
  41f77b:	fimul  WORD PTR [eax]
  41f77d:	test   BYTE PTR [edi],cl
  41f77f:	mov    ss,WORD PTR es:[esi+eiz*4+0x31]
  41f784:	mov    DWORD PTR [esi+0x45d30ce2],ebx
  41f78a:	sti    
  41f78b:	xor    al,0x8e
  41f78d:	xchg   ebp,eax
  41f78e:	ins    BYTE PTR es:[edi],dx
  41f78f:	push   esp
  41f790:	ja     0x41f768
  41f792:	bound  ebx,QWORD PTR [ecx-0x59]
  41f795:	call   0x6c04:0xad564570
  41f79c:	inc    ebx
  41f79d:	push   es
  41f79e:	push   es
  41f79f:	test   eax,0x19f1d223
  41f7a4:	add    al,0x5
  41f7a6:	jp     0x41f7b9
  41f7a8:	pushf  
  41f7a9:	and    al,0x5d
  41f7ab:	fs push esi
  41f7ad:	jl     0x41f7d9
  41f7af:	or     BYTE PTR [esp+esi*1-0x6d],dl
  41f7b3:	dec    ebp
  41f7b4:	test   al,0x54
  41f7b6:	ins    BYTE PTR es:[edi],dx
  41f7b7:	inc    edx
  41f7b8:	inc    eax
  41f7b9:	mov    es,WORD PTR [ebx-0x4d917767]
  41f7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7c0:	lods   al,BYTE PTR ds:[esi]
  41f7c1:	xchg   edx,eax
  41f7c2:	sahf   
  41f7c3:	jmp    0x8a0aa97e
  41f7c8:	mov    ebp,0x69c6d117
  41f7cd:	test   BYTE PTR [edx-0x35],bl
  41f7d0:	cld    
  41f7d1:	jmp    0x41f75a
  41f7d3:	shl    ebp,0xea
  41f7d6:	xchg   bl,al
  41f7d8:	jo     0x41f7f5
  41f7da:	leave  
  41f7db:	xchg   esp,eax
  41f7dc:	sub    eax,0x893f81dd
  41f7e1:	mov    WORD PTR [esi-0x7b],cs
  41f7e4:	inc    esp
  41f7e5:	jl     0x41f808
  41f7e7:	adc    eax,0xf2a66986
  41f7ec:	pop    ebp
  41f7ed:	les    ebp,FWORD PTR [eax-0x47]
  41f7f0:	leave  
  41f7f1:	imul   edi,DWORD PTR [edx-0x8c06157],0x2
  41f7f8:	loope  0x41f7bd
  41f7fa:	jo     0x41f804
  41f7fc:	in     eax,dx
  41f7fd:	jbe    0x41f800
  41f7ff:	pusha  
  41f800:	jmp    0x78c6:0x5be44e2c
  41f807:	ret    0xfd44
  41f80a:	add    eax,DWORD PTR [esi+0x6a]
  41f80d:	cmp    al,BYTE PTR ss:[ebp+edi*4+0x7352b8f8]
  41f815:	xchg   esp,eax
  41f816:	or     DWORD PTR [eax+ebp*4+0x34922aba],esp
  41f81d:	push   ds
  41f81e:	xchg   edi,eax
  41f81f:	rol    BYTE PTR [esi-0x705b9655],0xd
  41f826:	arpl   WORD PTR [ebp+0x5e5b86c3],cx
  41f82c:	ins    DWORD PTR es:[edi],dx
  41f82d:	shr    ch,1
  41f82f:	add    BYTE PTR [eax],al
  41f831:	add    BYTE PTR [eax+0x64],cl
  41f834:	mul    BYTE PTR [eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	inc    ebx
  41f83f:	in     al,dx
  41f840:	mov    cl,0x31
  41f842:	sbb    DWORD PTR [ebx+0x1],esi
  41f845:	add    ch,dh
  41f847:	add    al,0x0
  41f849:	add    BYTE PTR [edx],dh
  41f84b:	sub    ebp,ecx
  41f84d:	jmp    0x22b2a213
  41f852:	dec    ebp
  41f853:	out    0x88,al
  41f855:	mov    cl,0x5f
  41f857:	repz mov ebp,DWORD PTR [edi-0x1a]
  41f85b:	enter  0x592f,0x1c
  41f85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f860:	test   DWORD PTR [esi+0x2306ab91],ebp
  41f866:	pop    es
  41f867:	cmp    bl,bl
  41f869:	jae    0x41f8ad
  41f86b:	mov    esi,0xac67beb0
  41f870:	retf   0x78a5
  41f873:	(bad)  
  41f874:	jne    0x41f80a
  41f876:	sub    ch,BYTE PTR [ebp+0x45e8ad93]
  41f87c:	and    eax,0x86282bfc
  41f881:	sahf   
  41f882:	inc    ebx
  41f883:	das    
  41f884:	sti    
  41f885:	(bad)  
  41f886:	mov    esi,0x9ec6c659
  41f88b:	add    DWORD PTR ds:0x7b9d18a4,edi
  41f891:	and    ecx,eax
  41f893:	cmp    ch,BYTE PTR [eax]
  41f895:	sbb    BYTE PTR [eax-0x79],ah
  41f898:	jmp    0x41f876
  41f89a:	pop    esi
  41f89b:	cmp    DWORD PTR [edi-0x70a3b402],ecx
  41f8a1:	sub    eax,0xb00ed858
  41f8a6:	and    BYTE PTR [edi],dh
  41f8a8:	xchg   ebp,eax
  41f8a9:	fs or  eax,0x4b23d5ce
  41f8af:	in     eax,dx
  41f8b0:	mov    ebx,0x8a465249
  41f8b5:	push   esi
  41f8b6:	imul   ecx,DWORD PTR [eax],0x9b0c6cbc
  41f8bc:	jecxz  0x41f92f
  41f8be:	pop    esi
  41f8bf:	sbb    ah,0x1f
  41f8c2:	dec    esi
  41f8c3:	dec    esi
  41f8c4:	adc    edi,DWORD PTR [edi+0x75]
  41f8c7:	push   edx
  41f8c8:	ss gs loope 0x41f948
  41f8cc:	out    dx,eax
  41f8cd:	arpl   WORD PTR [ebx+0x3f57d235],dx
  41f8d3:	dec    ebp
  41f8d4:	pop    ebx
  41f8d5:	mov    al,0x86
  41f8d7:	lea    ecx,[esi-0x22c7ff22]
  41f8dd:	mov    esi,0xb2f97cb1
  41f8e2:	xor    edi,DWORD PTR [ecx+0x45742be0]
  41f8e8:	push   es
  41f8e9:	cmp    eax,0x5a64fd39
  41f8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8ef:	push   ebp
  41f8f0:	(bad)  
  41f8f1:	scas   eax,DWORD PTR es:[edi]
  41f8f2:	imul   ecx,DWORD PTR [ebp-0x77],0x68f860b
  41f8f9:	xor    al,0x94
  41f8fb:	neg    BYTE PTR [ebx*8+0x2db95fad]
  41f902:	jg     0x41f896
  41f904:	outs   dx,BYTE PTR ds:[esi]
  41f905:	mov    ds:0xc1f45dbc,eax
  41f90a:	ins    BYTE PTR es:[edi],dx
  41f90b:	hlt    
  41f90c:	xor    DWORD PTR [eax-0xc9ccdb9],ebx
  41f912:	jle    0x41f8fd
  41f914:	sbb    BYTE PTR [ebx+0x2cd42bf7],cl
  41f91a:	leave  
  41f91b:	scas   eax,DWORD PTR es:[edi]
  41f91c:	push   0xa36ff36b
  41f921:	outs   dx,DWORD PTR ds:[esi]
  41f922:	sbb    esp,esi
  41f924:	es and al,0xf9
  41f927:	sbb    BYTE PTR [eax+esi*4+0xd],0x3d
  41f92c:	fcomp  QWORD PTR [ecx-0x63]
  41f92f:	inc    edi
  41f930:	test   al,0x1d
  41f932:	mov    edx,fs
  41f934:	cld    
  41f935:	sbb    al,0x8a
  41f937:	stc    
  41f938:	push   ebp
  41f939:	ins    DWORD PTR es:[edi],dx
  41f93a:	pop    ecx
  41f93b:	ror    DWORD PTR [edi-0x27d8377d],cl
  41f941:	in     al,dx
  41f942:	out    0x4e,eax
  41f944:	push   0xf3ce03a0
  41f949:	cmp    eax,0x1719a2e4
  41f94e:	push   DWORD PTR [ebx+eiz*2+0x31]
  41f952:	dec    ebp
  41f953:	push   eax
  41f954:	jge    0x41f8ee
  41f956:	ret    0x70eb
  41f959:	jge    0x41f90d
  41f95b:	enter  0x3d73,0xef
  41f95f:	inc    eax
  41f960:	lods   eax,DWORD PTR ds:[esi]
  41f961:	out    0xbd,eax
  41f963:	pop    esp
  41f964:	sbb    ah,BYTE PTR [edi]
  41f966:	repz xor DWORD PTR [ebx-0x11],ebx
  41f96a:	call   0x53e5:0xd6f33ea4
  41f971:	mov    BYTE PTR [esi-0x72],cl
  41f974:	loope  0x41f9d5
  41f976:	js     0x41f8fb
  41f978:	dec    ebp
  41f979:	shr    BYTE PTR [ebp+edi*4-0x2f6f602e],1
  41f980:	xchg   BYTE PTR [ebp-0x4e32027],al
  41f986:	xchg   esi,eax
  41f987:	mov    al,0x7d
  41f989:	inc    ecx
  41f98a:	dec    ebx
  41f98b:	(bad)  
  41f98d:	push   ss
  41f98e:	mov    ds:0xf1d1f76,eax
  41f993:	loopne 0x41f994
  41f995:	ja     0x41f95b
  41f997:	or     al,0xf4
  41f999:	pop    edi
  41f99a:	pop    ebx
  41f99b:	add    BYTE PTR [esi],ah
  41f99d:	or     DWORD PTR [ecx+eiz*1-0x320472a0],edx
  41f9a4:	pop    ebx
  41f9a5:	add    ebx,DWORD PTR [esi+0x6ac971d5]
  41f9ab:	mov    esp,ebx
  41f9ad:	jae    0x41f9cc
  41f9af:	dec    esp
  41f9b0:	lahf   
  41f9b1:	dec    esi
  41f9b2:	push   esi
  41f9b3:	mov    ebx,0xab27fa69
  41f9b8:	imul   DWORD PTR [edi-0x1c896516]
  41f9be:	push   0xfffffff8
  41f9c0:	ret    
  41f9c1:	pop    esi
  41f9c2:	sbb    ah,ch
  41f9c4:	scas   eax,DWORD PTR es:[edi]
  41f9c5:	lea    ecx,[eax]
  41f9c7:	loope  0x41fa2c
  41f9c9:	neg    dl
  41f9cb:	cdq    
  41f9cc:	sbb    ebx,DWORD PTR [ebp-0x32]
  41f9cf:	mov    BYTE PTR [ecx],ah
  41f9d1:	push   ebx
  41f9d2:	and    al,0x50
  41f9d4:	in     eax,dx
  41f9d5:	ja     0x41f997
  41f9d7:	mov    edi,fs
  41f9d9:	jl     0x41fa34
  41f9db:	ret    0x9fca
  41f9de:	and    BYTE PTR [edi+0x60],ah
  41f9e1:	cmovnp eax,edx
  41f9e4:	hlt    
  41f9e5:	inc    esi
  41f9e6:	mov    ebp,0xa57a2752
  41f9eb:	push   cs
  41f9ec:	loopne 0x41fa0e
  41f9ee:	(bad)  
  41f9f0:	mov    al,0x49
  41f9f2:	cmp    BYTE PTR [ecx],bh
  41f9f4:	fs lahf 
  41f9f6:	and    DWORD PTR [edx+0x4ee77f1d],eax
  41f9fc:	push   cs
  41f9fd:	mov    DWORD PTR [ecx-0x5cb87c89],edx
  41fa03:	push   esp
  41fa04:	rcr    DWORD PTR [ebp+0x51],0x4a
  41fa08:	imul   edi,DWORD PTR [eax],0xa68c1170
  41fa0e:	stc    
  41fa0f:	(bad)  
  41fa10:	fdivr  QWORD PTR [edi-0x725b4a2a]
  41fa16:	leave  
  41fa17:	mov    bh,0xf5
  41fa19:	imul   esp,DWORD PTR [esi-0x75],0x9530958c
  41fa20:	jg     0x41fa18
  41fa22:	or     DWORD PTR [ebx+0x15],esp
  41fa25:	adc    BYTE PTR [ebp-0x11],dh
  41fa28:	out    0x10,eax
  41fa2a:	xchg   DWORD PTR [ebx+0x3dd27030],eax
  41fa30:	call   0x94a7471e
  41fa35:	and    eax,0xd494bad8
  41fa3a:	call   0x602161f2
  41fa3f:	push   0x55
  41fa41:	pusha  
  41fa42:	das    
  41fa43:	cs jno 0x41fab2
  41fa46:	inc    esi
  41fa47:	push   ebp
  41fa48:	xor    esp,DWORD PTR [edi-0x39]
  41fa4b:	ins    DWORD PTR es:[edi],dx
  41fa4c:	cmp    DWORD PTR es:[ebx+0x67],0xffffffcc
  41fa51:	dec    esi
  41fa52:	sbb    al,0x88
  41fa54:	out    dx,eax
  41fa55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa56:	jle    0x41faa4
  41fa58:	jp     0x41fa15
  41fa5a:	fwait
  41fa5b:	retf   0x372a
  41fa5e:	or     al,0x87
  41fa60:	test   BYTE PTR [ecx],0xfd
  41fa63:	jecxz  0x41fa96
  41fa65:	out    dx,eax
  41fa66:	call   0xfd67d99c
  41fa6b:	inc    esi
  41fa6c:	repnz test eax,0xf49dc4d3
  41fa72:	jmp    0x3fa7:0x5ef11912
  41fa79:	test   esp,eax
  41fa7b:	adc    bh,BYTE PTR [ecx+0x7c9b77ca]
  41fa81:	fsub   st,st(3)
  41fa83:	mov    eax,ds:0x2bce2c7f
  41fa88:	jo     0x41fa53
  41fa8a:	xchg   ebx,eax
  41fa8b:	mov    esi,0x498f86ce
  41fa90:	jnp    0x41fa53
  41fa92:	aas    
  41fa93:	je     0x41fa27
  41fa95:	jl     0x41fa9f
  41fa97:	mov    esp,ss
  41fa99:	or     eax,0x3517432b
  41fa9e:	pop    esp
  41fa9f:	sub    ch,bh
  41faa1:	mov    eax,0x18b015ef
  41faa6:	mov    ebp,0xe48736f4
  41faab:	scas   al,BYTE PTR es:[edi]
  41faac:	mov    dh,0x7b
  41faae:	cwde   
  41faaf:	fiadd  WORD PTR [eax+0x6c]
  41fab2:	outs   dx,BYTE PTR ds:[esi]
  41fab3:	sbb    al,0x33
  41fab5:	cwde   
  41fab6:	popa   
  41fab7:	inc    edx
  41fab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fab9:	dec    ebx
  41faba:	in     al,dx
  41fabb:	inc    ecx
  41fabc:	(bad)  
  41fabd:	fild   QWORD PTR [ebp-0x3c]
  41fac0:	pop    esp
  41fac1:	ror    al,cl
  41fac3:	fldenv [ebx-0xd6f3443]
  41fac9:	sbb    DWORD PTR [eax+0x37ba848c],0x4fae31eb
  41fad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fad4:	jmp    0x81c7:0x24276c82
  41fadb:	cmp    esp,DWORD PTR [ebx-0x7a277829]
  41fae1:	test   DWORD PTR [ebp+eiz*8-0x7e],edi
  41fae5:	test   DWORD PTR [edi],edx
  41fae7:	cmp    ebx,ecx
  41fae9:	push   eax
  41faea:	fistp  WORD PTR [ecx]
  41faec:	mov    ds,WORD PTR [ebx-0x3b82978f]
  41faf2:	xlat   BYTE PTR ds:[ebx]
  41faf3:	das    
  41faf4:	inc    esp
  41faf5:	push   ss
  41faf6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41faf8:	jb     0x41fafa
  41fafa:	pop    ebx
  41fafb:	adc    eax,0xf151dc6
  41fb00:	adc    al,0x80
  41fb02:	ss push eax
  41fb04:	sub    dl,bl
  41fb06:	retf   
  41fb07:	sub    al,ah
  41fb09:	dec    ebx
  41fb0a:	sbb    cl,BYTE PTR [ebx-0x1c169901]
  41fb10:	sbb    ebp,DWORD PTR [edx]
  41fb12:	dec    esp
  41fb13:	sbb    DWORD PTR [edi],edx
  41fb15:	push   ds
  41fb16:	and    BYTE PTR [ecx],bh
  41fb18:	lock jmp 0x255aa2a3
  41fb1e:	mov    ecx,0x4e47addf
  41fb23:	arpl   ax,sp
  41fb25:	cmc    
  41fb26:	daa    
  41fb27:	in     al,dx
  41fb28:	xchg   edi,eax
  41fb29:	add    eax,DWORD PTR [eax+eiz*2]
  41fb2c:	and    eax,0x8d3261fc
  41fb31:	enter  0xfbc5,0x7d
  41fb35:	pop    esi
  41fb36:	xchg   ecx,eax
  41fb37:	inc    eax
  41fb38:	test   al,0x96
  41fb3a:	aam    0x8
  41fb3c:	pop    esp
  41fb3d:	jle    0x41fb43
  41fb3f:	aas    
  41fb40:	xchg   BYTE PTR [ebx],bh
  41fb42:	xchg   ebx,eax
  41fb43:	xchg   esi,eax
  41fb44:	pusha  
  41fb45:	xchg   DWORD PTR [ecx-0x57],ebx
  41fb48:	les    edi,FWORD PTR ds:0xcee86cb9
  41fb4e:	sub    BYTE PTR [esi],ah
  41fb50:	shl    DWORD PTR [esi],1
  41fb52:	inc    ebp
  41fb53:	(bad)  
  41fb54:	mov    ds:0xd50b8bb,eax
  41fb59:	cwde   
  41fb5a:	addr16 into 
  41fb5c:	addr16 call 0xc85a:0xede9c12a
  41fb64:	dec    BYTE PTR [ecx]
  41fb66:	pusha  
  41fb67:	cwde   
  41fb68:	data16 cmp dl,dl
  41fb6b:	jne    0x41fb17
  41fb6d:	cld    
  41fb6e:	(bad)  
  41fb70:	jnp    0x41fb5f
  41fb72:	bound  esp,QWORD PTR [ecx+0x273d371a]
  41fb78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb79:	call   DWORD PTR [ebx+0x13]
  41fb7c:	jl     0x41fba3
  41fb7e:	mov    esp,0x2a5d2209
  41fb83:	dec    ecx
  41fb84:	test   DWORD PTR [ebx-0x6e510ad7],esp
  41fb8a:	add    esp,edi
  41fb8c:	push   ebp
  41fb8d:	mov    edi,0x9082cda7
  41fb92:	push   edi
  41fb93:	retf   0xafbb
  41fb96:	xor    edi,esp
  41fb98:	or     ecx,edi
  41fb9a:	ret    0x39c
  41fb9d:	int3   
  41fb9e:	mov    ds:0xba4354d8,al
  41fba3:	xor    eax,0x91162b5
  41fba8:	(bad)  
  41fba9:	(bad)  
  41fbaa:	fist   WORD PTR [ebp-0x7ac66f42]
  41fbb0:	or     dl,BYTE PTR [eax+ebx*8-0xf]
  41fbb4:	and    BYTE PTR [edx],dl
  41fbb6:	xchg   edi,eax
  41fbb7:	or     edi,ebx
  41fbb9:	cmp    eax,DWORD PTR [edx+0x3515cde7]
  41fbbf:	and    eax,0x431fbb98
  41fbc4:	jno    0x41fc1c
  41fbc6:	mov    eax,ds:0xb70ce25d
  41fbcb:	jne    0x41fc1d
  41fbcd:	pop    esi
  41fbce:	jmp    0xde0dd9f2
  41fbd3:	inc    edx
  41fbd4:	sub    dh,BYTE PTR [edi+0x761144c3]
  41fbda:	cdq    
  41fbdb:	ret    
  41fbdc:	xor    BYTE PTR [esi+0x5fb08adb],0x71
  41fbe3:	xlat   BYTE PTR ds:[ebx]
  41fbe4:	div    DWORD PTR [edi-0x3c]
  41fbe7:	jecxz  0x41fc09
  41fbe9:	add    ch,BYTE PTR [ecx-0x4a3f2d7e]
  41fbef:	jno    0x41fb9d
  41fbf1:	sbb    esp,DWORD PTR [ebp+0x17adaa6c]
  41fbf7:	mov    dh,0xe9
  41fbf9:	bound  ebp,QWORD PTR [edx-0x33]
  41fbfc:	jbe    0x41fbcb
  41fbfe:	or     DWORD PTR [edi],esi
  41fc00:	loop   0x41fbc8
  41fc02:	imul   eax,DWORD PTR [ecx+0x55],0x7c
  41fc06:	in     al,0xee
  41fc08:	inc    edx
  41fc09:	das    
  41fc0a:	jo     0x41fbd3
  41fc0c:	cmp    DWORD PTR [edi],edi
  41fc0e:	inc    ebp
  41fc0f:	pop    ds
  41fc10:	xchg   edi,eax
  41fc11:	ins    BYTE PTR es:[edi],dx
  41fc12:	inc    esi
  41fc13:	adc    al,0x8c
  41fc15:	sahf   
  41fc16:	int3   
  41fc17:	inc    ecx
  41fc18:	push   0xd4f6514c
  41fc1d:	popa   
  41fc1e:	mov    ebp,0x9ca71998
  41fc23:	lods   eax,DWORD PTR ds:[esi]
  41fc24:	sub    al,0xd8
  41fc26:	sbb    al,bl
  41fc28:	push   ebx
  41fc29:	push   ebx
  41fc2a:	sbb    dh,al
  41fc2c:	repz shl BYTE PTR [eax],cl
  41fc2f:	idiv   bh
  41fc31:	and    al,0xab
  41fc33:	mov    cl,0x4a
  41fc35:	icebp  
  41fc36:	ret    
  41fc37:	imul   ecx,DWORD PTR [eax-0x619afa50],0xffffffa1
  41fc3e:	out    0x6f,eax
  41fc40:	mov    bh,0x79
  41fc42:	inc    eax
  41fc43:	mov    bh,0x9d
  41fc45:	jl     0x41fc9b
  41fc47:	leave  
  41fc48:	mov    edi,DWORD PTR [esi]
  41fc4a:	sub    al,0xfa
  41fc4c:	(bad)  
  41fc4d:	sti    
  41fc4e:	xor    ah,BYTE PTR [ebx]
  41fc50:	mov    dh,0xaa
  41fc52:	and    ebp,DWORD PTR [eax+ebx*1-0xf123ca9]
  41fc59:	in     eax,dx
  41fc5a:	mov    esi,0xf1079dd9
  41fc5f:	mov    al,0x67
  41fc61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc62:	and    dl,bl
  41fc64:	adc    BYTE PTR [ebx+0xf16211d],ah
  41fc6a:	or     WORD PTR [edi+0x5c],bx
  41fc6e:	sahf   
  41fc6f:	add    eax,0xa5a6db69
  41fc74:	mov    esi,0x65e0e711
  41fc79:	fldcw  WORD PTR [edi]
  41fc7b:	std    
  41fc7c:	xchg   edx,eax
  41fc7d:	inc    esp
  41fc7e:	out    dx,al
  41fc7f:	dec    edi
  41fc80:	test   DWORD PTR [edi+0x35],ebp
  41fc83:	fidivr WORD PTR [esi+0x3e0e6d66]
  41fc89:	jnp    0x41fc8d
  41fc8b:	ins    DWORD PTR es:[edi],dx
  41fc8c:	call   0xbe6b:0x588eceec
  41fc93:	jl     0x41fcbf
  41fc95:	inc    ebp
  41fc96:	mov    WORD PTR [ebx+0x28],?
  41fc99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc9a:	hlt    
  41fc9b:	in     eax,0x1d
  41fc9d:	jo     0x41fc71
  41fc9f:	(bad)  [eax+0x5ff15bb1]
  41fca5:	jno    0x41fc4f
  41fca7:	cld    
  41fca8:	push   esi
  41fca9:	pop    ds
  41fcaa:	jge    0x41fd03
  41fcac:	dec    edx
  41fcad:	push   cs
  41fcae:	inc    esi
  41fcaf:	mov    ch,0xee
  41fcb1:	mov    cl,BYTE PTR [esi]
  41fcb3:	xor    al,0x44
  41fcb5:	in     eax,dx
  41fcb6:	popa   
  41fcb7:	dec    eax
  41fcb8:	scas   eax,DWORD PTR es:[edi]
  41fcb9:	int3   
  41fcba:	fs dec edx
  41fcbc:	jnp    0x41fc67
  41fcbe:	sbb    DWORD PTR [edi],edx
  41fcc0:	(bad)  [edx+0x10]
  41fcc3:	inc    eax
  41fcc4:	mov    al,0xd
  41fcc6:	mov    dl,0x1f
  41fcc8:	sbb    bh,BYTE PTR es:[edx]
  41fccb:	les    edx,FWORD PTR [edi-0x6de6e16f]
  41fcd1:	cmp    edx,DWORD PTR [ebx]
  41fcd3:	mov    bh,0xde
  41fcd5:	inc    ebx
  41fcd6:	sbb    edi,DWORD PTR [ebp+0x2b67cd1]
  41fcdc:	lea    ecx,[eax+0x4d]
  41fcdf:	add    esi,DWORD PTR [ecx+eiz*8+0x5f]
  41fce3:	lds    edx,FWORD PTR [di+0x641]
  41fce8:	xchg   edx,eax
  41fce9:	push   edi
  41fcea:	in     eax,dx
  41fceb:	or     BYTE PTR [edi],dh
  41fced:	aaa    
  41fcee:	stos   BYTE PTR es:[edi],al
  41fcef:	mov    bl,ah
  41fcf1:	mov    al,0x20
  41fcf3:	push   esi
  41fcf4:	stos   BYTE PTR es:[edi],al
  41fcf5:	mov    ch,BYTE PTR [ebx]
  41fcf7:	pop    eax
  41fcf8:	sub    edi,DWORD PTR [eax]
  41fcfa:	dec    esp
  41fcfb:	fimul  DWORD PTR [ebx]
  41fcfd:	push   edx
  41fcfe:	sub    eax,0x77
  41fd01:	jl     0x41fcc3
  41fd03:	fucomi st,st(6)
  41fd05:	dec    eax
  41fd06:	dec    ebp
  41fd07:	div    dl
  41fd09:	aaa    
  41fd0a:	repz mov al,ds:0xa60a1063
  41fd10:	cwde   
  41fd11:	fwait
  41fd12:	sar    BYTE PTR [edx+0x3d94d259],cl
  41fd18:	in     eax,0x91
  41fd1a:	mov    bh,0xa1
  41fd1c:	mov    bh,0x19
  41fd1e:	nop
  41fd1f:	push   edi
  41fd20:	cmp    BYTE PTR [esi+0x6d],ch
  41fd23:	jge    0x41fd0e
  41fd25:	into   
  41fd26:	xor    al,0x9b
  41fd28:	mov    BYTE PTR [ecx],bl
  41fd2a:	mov    edi,0x88c1a5d7
  41fd2f:	mov    al,0xc0
  41fd31:	inc    eax
  41fd32:	scas   al,BYTE PTR es:[edi]
  41fd33:	clc    
  41fd34:	inc    edi
  41fd35:	hlt    
  41fd36:	mov    cl,0xfd
  41fd38:	sti    
  41fd39:	mov    esp,0x39b181ee
  41fd3e:	repnz add BYTE PTR [eax],al
  41fd41:	add    BYTE PTR [edx-0x48ec49e9],ah
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi+0x58be4dc],dh
  41fd51:	or     BYTE PTR [esi],0x78
  41fd54:	add    DWORD PTR [eax],eax
  41fd56:	cmc    
  41fd57:	add    al,0x0
  41fd59:	add    BYTE PTR [edi+0x6dfc3cc8],ch
  41fd5f:	imul   esp,DWORD PTR [ebp+0x58174dd8],0x698b3e39
  41fd69:	fadd   st(1),st
  41fd6b:	mov    ebp,0xa4bec153
  41fd70:	mov    ebp,0x42d84047
  41fd75:	add    dh,BYTE PTR [ebx]
  41fd77:	xor    ebx,DWORD PTR [edx+0x5a]
  41fd7a:	mov    ds:0x619eba93,eax
  41fd7f:	dec    BYTE PTR [ecx]
  41fd81:	mov    dl,0x5a
  41fd83:	std    
  41fd84:	sar    DWORD PTR [ebx+0x2fb93c20],cl
  41fd8a:	xchg   esp,eax
  41fd8b:	push   edx
  41fd8c:	shl    DWORD PTR [edi],1
  41fd8e:	pop    ebx
  41fd8f:	mov    dh,0x55
  41fd91:	mov    bl,0x90
  41fd94:	jbe    0x41fd38
  41fd96:	rol    cl,1
  41fd98:	fs lahf 
  41fd9a:	std    
  41fd9b:	popa   
  41fd9c:	retf   0xe98
  41fd9f:	jno    0x41fdaa
  41fda1:	data16 outs dx,BYTE PTR ds:[esi]
  41fda3:	data16 jne 0x41fd37
  41fda6:	nop
  41fda7:	mov    bh,0x3
  41fda9:	push   ebp
  41fdaa:	dec    esp
  41fdab:	mov    ds:0xa82f9074,al
  41fdb0:	sub    cl,BYTE PTR [eax+0x7a]
  41fdb3:	push   ss
  41fdb4:	push   esi
  41fdb5:	stc    
  41fdb6:	jb     0x41fd93
  41fdb8:	mov    dl,0x95
  41fdba:	fisttp DWORD PTR cs:[esi+edx*8-0x67eb187c]
  41fdc2:	mov    ah,0x6f
  41fdc4:	je     0x41fe08
  41fdc6:	iret   
  41fdc7:	sbb    al,al
  41fdc9:	repz jge 0x41fd8b
  41fdcc:	pop    esp
  41fdcd:	loope  0x41fe0b
  41fdcf:	mov    ah,0x18
  41fdd1:	inc    eax
  41fdd2:	retf   
  41fdd3:	and    eax,edx
  41fdd5:	cmp    BYTE PTR ds:0x89caa455,cl
  41fddb:	sbb    esp,DWORD PTR [ecx]
  41fddd:	push   ecx
  41fdde:	bound  esp,QWORD PTR [ebx+0x5b]
  41fde1:	xchg   edi,eax
  41fde2:	inc    ebp
  41fde3:	dec    esp
  41fde4:	lds    ebp,FWORD PTR [edx]
  41fde6:	pop    ecx
  41fde7:	test   DWORD PTR [ecx],ebx
  41fde9:	xor    dh,BYTE PTR [ebp+ebx*1+0x2a]
  41fded:	cs inc ecx
  41fdef:	fisttp DWORD PTR [ebx]
  41fdf1:	cmp    BYTE PTR [ecx],ch
  41fdf3:	stc    
  41fdf4:	loope  0x41fe28
  41fdf6:	rcl    DWORD PTR ds:0x82bff02b,cl
  41fdfd:	mov    dl,0xc6
  41fdff:	out    dx,al
  41fe00:	cwde   
  41fe01:	arpl   WORD PTR [ebx+edx*4-0x42],ax
  41fe05:	jae    0x41fe7d
  41fe07:	in     eax,0xe
  41fe09:	(bad)  
  41fe0a:	pop    DWORD PTR [ebp+ecx*2-0x1e850b79]
  41fe11:	xchg   esp,eax
  41fe12:	aam    0x5c
  41fe14:	mov    DWORD PTR [eax+0x1],esi
  41fe17:	adc    DWORD PTR [esi+0x1dd053b0],esi
  41fe1d:	or     bh,BYTE PTR [ebx]
  41fe1f:	shl    BYTE PTR [edx],1
  41fe21:	addr16 and al,0xc2
  41fe24:	and    al,0x6
  41fe26:	mov    ds:0xf374e8ad,eax
  41fe2b:	lds    ebx,FWORD PTR [edi-0x463299d1]
  41fe31:	js     0x41fe64
  41fe33:	mov    cs,edi
  41fe35:	mov    ds:0xe0c78027,eax
  41fe3a:	ret    
  41fe3b:	arpl   WORD PTR [edx],bx
  41fe3d:	push   0xffffffd2
  41fe3f:	and    esi,esp
  41fe41:	sbb    DWORD PTR [edx-0x51],ecx
  41fe44:	jb     0x41febe
  41fe46:	sbb    edi,esp
  41fe48:	jle    0x41fdef
  41fe4a:	into   
  41fe4b:	clc    
  41fe4c:	mov    edx,0x74ecc980
  41fe51:	lea    eax,[ebx+0x5862071d]
  41fe57:	les    ebx,FWORD PTR [edi+0x4e762dd6]
  41fe5d:	cmc    
  41fe5e:	sti    
  41fe5f:	xchg   edi,eax
  41fe60:	mov    edi,0xda49edcf
  41fe65:	jl     0x41fe2b
  41fe67:	dec    edi
  41fe68:	xchg   esi,eax
  41fe69:	mov    eax,ds:0x4d807dd9
  41fe6e:	aam    0x45
  41fe70:	ja     0x41fed5
  41fe72:	xchg   ebp,eax
  41fe73:	jne    0x41feed
  41fe75:	xchg   esi,eax
  41fe76:	fdivr  DWORD PTR [edi]
  41fe78:	ja     0x41feba
  41fe7a:	adc    ebx,DWORD PTR [edx+0x1577e194]
  41fe80:	push   cs
  41fe81:	xchg   esi,eax
  41fe82:	cdq    
  41fe83:	xor    al,0x11
  41fe85:	int3   
  41fe86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe87:	ins    DWORD PTR es:[edi],dx
  41fe88:	sar    BYTE PTR [ecx],0x9b
  41fe8b:	add    bl,BYTE PTR [ebx+esi*2+0x4239b452]
  41fe92:	inc    edi
  41fe93:	adc    DWORD PTR [esi],ecx
  41fe95:	inc    ecx
  41fe96:	pop    ecx
  41fe97:	data16 rol dl,cl
  41fe9a:	dec    BYTE PTR [eax-0x323ece74]
  41fea0:	mov    bl,0x74
  41fea2:	ror    DWORD PTR [edx-0x5345b930],cl
  41fea8:	pop    ecx
  41fea9:	mov    al,0x15
  41feab:	mov    WORD PTR [ebx],gs
  41fead:	ins    DWORD PTR es:[edi],dx
  41feae:	push   ebx
  41feaf:	repnz push ss
  41feb1:	pop    ecx
  41feb2:	sub    ch,BYTE PTR [esi]
  41feb4:	imul   DWORD PTR [ebx-0x450f3a6e]
  41feba:	inc    esp
  41febb:	jae    0x41fe6a
  41febd:	dec    esp
  41febe:	fdiv   st,st(4)
  41fec0:	xchg   ecx,eax
  41fec1:	mov    dh,0x4d
  41fec3:	jmp    0x9d56:0x1460fb4b
  41feca:	pushf  
  41fecb:	push   edi
  41fecc:	dec    bp
  41fece:	ror    BYTE PTR [edx],cl
  41fed0:	add    DWORD PTR [ebx],ebp
  41fed2:	(bad)  [edx-0x3a]
  41fed5:	aad    0x7f
  41fed7:	int3   
  41fed8:	mov    ecx,0x100e5003
  41fedd:	add    bl,ch
  41fedf:	inc    ecx
  41fee0:	xchg   BYTE PTR [ecx+edi*2],al
  41fee3:	push   0xffffffe5
  41fee5:	fld    DWORD PTR [edx-0x51]
  41fee8:	xor    eax,0xe2ab18be
  41feed:	loope  0x41ff0e
  41feef:	push   es
  41fef0:	sub    DWORD PTR [esi+0x56],ebx
  41fef3:	scas   eax,DWORD PTR es:[edi]
  41fef4:	sub    eax,0x976f69b7
  41fef9:	pop    ebp
  41fefa:	mov    ecx,0xc4d6ccb3
  41feff:	out    0x98,eax
  41ff01:	mov    WORD PTR [ecx-0x7561f074],cs
  41ff07:	ror    BYTE PTR [edi-0x45dc8aea],cl
  41ff0d:	mov    bl,0x99
  41ff0f:	mov    edx,0x6a4ab972
  41ff14:	inc    eax
  41ff15:	nop
  41ff16:	dec    ebx
  41ff17:	loop   0x41fed8
  41ff19:	or     esi,DWORD PTR [esi-0x23528001]
  41ff1f:	sbb    al,0xb3
  41ff21:	cwde   
  41ff22:	sar    DWORD PTR [esi+ebx*8],1
  41ff25:	push   es
  41ff26:	pop    es
  41ff27:	xchg   ecx,eax
  41ff28:	and    DWORD PTR [ecx],eax
  41ff2a:	xchg   edi,eax
  41ff2b:	je     0x41ff4d
  41ff2d:	mov    ebp,0x5b16aeed
  41ff32:	out    0x1c,al
  41ff34:	add    edx,esp
  41ff36:	sbb    ah,BYTE PTR [ebx+0x46]
  41ff39:	ss out 0x5,eax
  41ff3c:	test   DWORD PTR [ecx-0x6c],0x56c81ef4
  41ff43:	int3   
  41ff44:	push   ecx
  41ff45:	stos   DWORD PTR es:[edi],eax
  41ff46:	jl     0x41fede
  41ff48:	out    0x43,eax
  41ff4a:	cmp    edx,0x2d
  41ff4d:	dec    ecx
  41ff4e:	stos   BYTE PTR es:[edi],al
  41ff4f:	imul   esp,DWORD PTR [ebp-0xc1c16d],0x61
  41ff56:	mov    al,0x88
  41ff58:	in     al,dx
  41ff59:	push   0xffffffc6
  41ff5b:	lods   al,BYTE PTR ds:[esi]
  41ff5c:	xor    eax,0xec768dae
  41ff61:	mov    al,0xa3
  41ff63:	int    0x41
  41ff65:	or     eax,0xb3d21f26
  41ff6a:	sahf   
  41ff6b:	or     al,0x46
  41ff6d:	or     edx,edx
  41ff6f:	adc    BYTE PTR [ecx],ch
  41ff71:	xchg   esi,eax
  41ff72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff73:	jno    0x41ffec
  41ff75:	lods   eax,DWORD PTR ds:[esi]
  41ff76:	call   0x14bc:0xca91b97f
  41ff7d:	iret   
  41ff7e:	stos   BYTE PTR es:[edi],al
  41ff7f:	out    dx,eax
  41ff80:	or     DWORD PTR ds:0x9aab0eb3,edx
  41ff86:	cld    
  41ff87:	inc    eax
  41ff88:	aas    
  41ff89:	mov    gs,WORD PTR [esi+eiz*2]
  41ff8c:	aam    0xcd
  41ff8e:	push   esp
  41ff8f:	push   esi
  41ff90:	repz mov ds:0x6d52d5f0,al
  41ff96:	lahf   
  41ff97:	in     eax,dx
  41ff98:	aad    0xf7
  41ff9a:	mov    bl,bh
  41ff9c:	loop   0x41ffdd
  41ff9e:	sub    BYTE PTR [ebx+ebx*2],dh
  41ffa1:	out    0x29,eax
  41ffa3:	xchg   esp,eax
  41ffa4:	sub    DWORD PTR [edi-0x5b],ebx
  41ffa7:	stc    
  41ffa8:	or     BYTE PTR [ebx-0x4f65d729],ch
  41ffae:	mov    esp,0xebd3561f
  41ffb3:	mov    ecx,0x9a46fc14
  41ffb8:	es dec ecx
  41ffba:	pusha  
  41ffbb:	pop    esi
  41ffbc:	pop    ds
  41ffbd:	push   eax
  41ffbe:	add    edx,DWORD PTR [eax-0x63]
  41ffc1:	test   BYTE PTR [esi],bl
  41ffc3:	and    BYTE PTR [eax],bl
  41ffc5:	scas   al,BYTE PTR es:[edi]
  41ffc6:	icebp  
  41ffc7:	push   ecx
  41ffc8:	fmul   DWORD PTR [edi-0x4]
  41ffcb:	jl     0x41ffca
  41ffcd:	jecxz  0x41ffb3
  41ffcf:	inc    edx
  41ffd0:	and    DWORD PTR [esi+0x5e],esp
  41ffd3:	add    DWORD PTR [ebx-0x47],edi
  41ffd6:	add    eax,0x4794d12f
  41ffdb:	in     al,0x5c
  41ffdd:	xor    al,0xb2
  41ffdf:	lods   al,BYTE PTR ds:[esi]
  41ffe0:	cli    
  41ffe1:	mov    al,ds:0x77795872
  41ffe6:	enter  0x7824,0x60
  41ffea:	adc    ebx,DWORD PTR [edi+edx*1-0x2df458ae]
  41fff1:	mov    bh,0x30
  41fff3:	mov    esp,0xeb9f5a9c
  41fff8:	imul   DWORD PTR [esi-0xbead04a]
  41fffe:	push   ebp
  41ffff:	in     eax,0x46
  420001:	push   edi
  420002:	inc    eax
  420003:	pop    ss
  420004:	in     al,0xd6
  420006:	sbb    al,0xb8
  420008:	xor    eax,DWORD PTR [ebx]
  42000a:	fisttp DWORD PTR [ebx]
  42000c:	jmp    0xe74c:0xc933107c
  420013:	loop   0x420022
  420015:	mov    ah,0x69
  420017:	aaa    
  420018:	sbb    DWORD PTR [ebx+0x22],ebp
  42001b:	dec    ebx
  42001c:	outs   dx,DWORD PTR ds:[esi]
  42001d:	jle    0x41ffc4
  42001f:	stos   DWORD PTR es:[edi],eax
  420020:	scas   eax,DWORD PTR es:[edi]
  420021:	and    BYTE PTR [ebx-0x7dc96b0f],0xd8
  420028:	stos   DWORD PTR es:[edi],eax
  420029:	int    0xec
  42002b:	daa    
  42002c:	jb     0x42005b
  42002e:	dec    ebx
  42002f:	ins    DWORD PTR es:[edi],dx
  420030:	xor    al,0xec
  420032:	arpl   WORD PTR [eax+0x6a],bx
  420035:	xor    esp,esp
  420037:	out    0x79,al
  420039:	aaa    
  42003a:	int    0x7
  42003c:	mov    ds:0xabe077c1,eax
  420041:	mul    dl
  420043:	sti    
  420044:	cmp    BYTE PTR [ebp+0xd],bh
  420047:	repnz inc ebx
  420049:	cs ins DWORD PTR es:[edi],dx
  42004b:	in     al,0xcc
  42004d:	xchg   DWORD PTR [eax+0xbb59ed0],esp
  420053:	mov    ds:0x57ef6e75,al
  420058:	adc    cl,dl
  42005a:	jnp    0x42004e
  42005c:	or     DWORD PTR [ecx+ecx*2-0x6256058b],0x6d
  420064:	jns    0x420012
  420066:	loope  0x42007b
  420068:	popa   
  420069:	retf   0x2d8a
  42006c:	pop    edi
  42006d:	dec    edx
  42006e:	lea    ebx,[esi-0x5e]
  420071:	push   ss
  420072:	mov    eax,ds:0xe0b886c7
  420077:	adc    edi,esp
  420079:	loop   0x4200cd
  42007b:	push   eax
  42007c:	ins    BYTE PTR es:[edi],dx
  42007d:	pop    edx
  42007e:	inc    esp
  42007f:	hlt    
  420080:	sar    BYTE PTR [eax-0x7],1
  420083:	loop   0x420090
  420085:	add    eax,0x40fef918
  42008a:	mov    eax,DWORD PTR [ebp-0x31]
  42008d:	pop    es
  42008e:	popf   
  42008f:	inc    ebp
  420090:	add    dl,BYTE PTR [edx+ebp*8]
  420093:	(bad)
  420096:	cmp    bh,al
  420098:	ins    BYTE PTR es:[edi],dx
  420099:	sub    BYTE PTR [ecx],0x9b
  42009c:	sub    esp,ebp
  42009e:	out    0x96,al
  4200a0:	imul   ebx,DWORD PTR [edi],0x28416f10
  4200a6:	imul   BYTE PTR [edx]
  4200a8:	jmp    0x4200d2
  4200aa:	jge    0x420126
  4200ac:	ror    bl,cl
  4200ae:	sbb    eax,0xe164bdc
  4200b3:	enter  0xbf9d,0x3c
  4200b7:	stos   DWORD PTR es:[edi],eax
  4200b8:	stc    
  4200b9:	sub    bh,BYTE PTR [ebp-0x30]
  4200bc:	or     BYTE PTR [ebp+0x6cc7f970],al
  4200c2:	pop    eax
  4200c3:	arpl   WORD PTR [ebx-0x62053e1f],cx
  4200c9:	div    DWORD PTR [eax-0x78]
  4200cc:	adc    al,ch
  4200ce:	outs   dx,DWORD PTR ds:[esi]
  4200cf:	fwait
  4200d0:	pop    esi
  4200d1:	js     0x420113
  4200d3:	(bad)  
  4200d4:	lock aaa 
  4200d6:	adc    ecx,DWORD PTR ds:0xc759ccc
  4200dc:	pop    ebp
  4200dd:	add    eax,0x650692a5
  4200e2:	iret   
  4200e3:	jns    0x420117
  4200e5:	cmc    
  4200e6:	ins    BYTE PTR es:[edi],dx
  4200e7:	fucomi st,st(2)
  4200e9:	dec    edi
  4200ea:	not    BYTE PTR [edx-0x74]
  4200ed:	cwde   
  4200ee:	mov    edi,0x1d19339e
  4200f3:	mov    gs,ebp
  4200f5:	iret   
  4200f6:	xchg   BYTE PTR [ecx-0x5f],bh
  4200f9:	loope  0x42012a
  4200fb:	inc    ebp
  4200fc:	fcom   DWORD PTR [edx+0x50]
  4200ff:	les    eax,FWORD PTR [edi-0x562c774c]
  420105:	pop    esi
  420106:	bnd jle 0x4200e9
  420109:	iret   
  42010a:	or     cl,BYTE PTR [edi+0xdbd7fc]
  420110:	lahf   
  420111:	outs   dx,BYTE PTR ds:[esi]
  420112:	jnp    0x420122
  420114:	mov    ebp,0xb01722a0
  420119:	mov    eax,es
  42011b:	arpl   WORD PTR [ebp-0x60],sp
  42011e:	retf   0xceaf
  420121:	call   0xff5bb0b1
  420126:	mov    esi,0x41af207e
  42012b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42012c:	jmp    0x67d63d7e
  420131:	pop    edx
  420132:	dec    esi
  420133:	xor    ecx,DWORD PTR [esp+eax*2]
  420136:	popf   
  420137:	jecxz  0x420177
  420139:	pushf  
  42013a:	sbb    BYTE PTR [edx-0x19acfb2c],0x0
  420141:	repz retf 
  420143:	xchg   ecx,eax
  420144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420146:	sub    edx,DWORD PTR [ebx]
  420148:	add    ebp,DWORD PTR [ebx+edx*8+0x16]
  42014c:	cld    
  42014d:	lahf   
  42014e:	and    eax,0x3406d53d
  420153:	das    
  420154:	in     al,0xa0
  420156:	sub    eax,0x2953992e
  42015b:	out    dx,al
  42015c:	dec    edi
  42015d:	lahf   
  42015e:	repnz cwde 
  420160:	xchg   esi,eax
  420161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420162:	and    eax,0xbbb4a75e
  420167:	arpl   WORD PTR [ebx],bp
  420169:	jbe    0x4201b3
  42016b:	aam    0x55
  42016d:	mov    bh,0xe8
  42016f:	xchg   ebx,eax
  420170:	(bad)  
  420171:	push   edi
  420172:	shr    DWORD PTR [edi+0x59],cl
  420175:	sub    esp,DWORD PTR [ebx+0x35]
  420178:	call   0x8acc:0x60bc9779
  42017f:	cs (bad) 
  420181:	ret    0xeaee
  420184:	sbb    ebp,edx
  420186:	rcl    ah,0xc4
  420189:	ss hlt 
  42018b:	inc    edx
  42018c:	and    dh,BYTE PTR [ebx-0xf]
  42018f:	inc    ebx
  420190:	jb     0x420192
  420192:	xor    bl,BYTE PTR [ebx-0x5f90a25b]
  420198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420199:	sbb    DWORD PTR [ecx-0x687c5ade],esp
  42019f:	xchg   edx,eax
  4201a0:	push   0x88f0864a
  4201a5:	outs   dx,DWORD PTR ds:[esi]
  4201a6:	dec    ebp
  4201a7:	adc    dh,BYTE PTR [ebx+0x241a3f9a]
  4201ad:	mov    DWORD PTR [edx-0x2],esp
  4201b0:	(bad)  
  4201b1:	cdq    
  4201b2:	inc    ebp
  4201b3:	repnz add eax,0xa843dac9
  4201b9:	or     edx,edx
  4201bb:	sahf   
  4201bc:	aam    0xed
  4201be:	ins    BYTE PTR es:[edi],dx
  4201bf:	or     DWORD PTR [edx],ebp
  4201c1:	scas   eax,DWORD PTR es:[edi]
  4201c2:	pop    esp
  4201c3:	std    
  4201c4:	ins    DWORD PTR es:[edi],dx
  4201c5:	push   es
  4201c6:	call   0xf687:0x1f44c97e
  4201cd:	sar    DWORD PTR [edi],cl
  4201cf:	pop    esi
  4201d0:	jmp    0xae2e9930
  4201d5:	push   esi
  4201d6:	mov    edi,0xba8eb9c7
  4201db:	push   esp
  4201dc:	add    dh,dh
  4201de:	mov    edx,0x54baff0a
  4201e3:	mov    al,0x6c
  4201e5:	ficom  WORD PTR [edx-0x141ea0c8]
  4201eb:	pop    ebx
  4201ec:	xchg   ebp,eax
  4201ed:	adc    eax,DWORD PTR [ecx-0x64]
  4201f0:	jmp    0x11bb:0x323298d3
  4201f7:	inc    edi
  4201f8:	es cmp eax,edi
  4201fb:	fwait
  4201fc:	push   0x23e14dd2
  420201:	js     0x420207
  420203:	loope  0x42027b
  420205:	sbb    DWORD PTR [eax+0x168ef15e],0x9e80c406
  42020f:	mov    DWORD PTR [ecx],esp
  420211:	mov    eax,ds:0xeb657d9c
  420216:	xlat   BYTE PTR ds:[ebx]
  420217:	push   0x4cb1051
  42021c:	scas   eax,DWORD PTR es:[edi]
  42021d:	cs inc ebp
  42021f:	mov    dh,0x7c
  420221:	aas    
  420222:	mov    esi,0x4cddfee7
  420227:	dec    edx
  420228:	bound  edx,QWORD PTR [edx+0x4b]
  42022b:	or     al,0x81
  42022d:	sub    DWORD PTR [eax-0x41],ecx
  420230:	and    bl,BYTE PTR [ecx-0x24]
  420233:	pop    ds
  420234:	push   ss
  420235:	cmp    BYTE PTR [esi],bh
  420237:	ffree  st(0)
  420239:	or     BYTE PTR [edx-0x73e6cb80],cl
  42023f:	and    BYTE PTR [esi-0x38],cl
  420242:	gs jno 0x420247
  420245:	cli    
  420246:	lahf   
  420247:	mov    bh,BYTE PTR [esi]
  420249:	std    
  42024a:	mov    ch,0xed
  42024c:	pusha  
  42024d:	mov    ebx,0x7e
  420252:	xchg   esi,eax
  420253:	test   BYTE PTR [ebp-0x2],al
  420256:	push   edi
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [esp+ecx*2+0x44],al
  420261:	sbb    eax,DWORD PTR [ebx]
  420263:	jge    0x420266
  420265:	add    ch,dh
  420267:	add    al,0x0
  420269:	add    BYTE PTR [edx-0xc],ah
  42026c:	or     ebx,DWORD PTR [edx+0x7c269cd8]
  420272:	fsubrp st(1),st
  420274:	ret    0x432c
  420277:	push   edx
  420278:	cmp    DWORD PTR [ecx+esi*8-0x4d],edi
  42027c:	out    dx,eax
  42027d:	(bad)  
  42027f:	(bad)  
  420281:	inc    ecx
  420282:	xchg   ecx,eax
  420283:	lods   eax,DWORD PTR ds:[esi]
  420284:	pop    ebx
  420285:	pusha  
  420286:	mov    ds:0xb6960743,al
  42028b:	cs mov edx,0x33e8b07d
  420291:	mov    dl,0x58
  420293:	cmp    eax,0x420ee3d4
  420298:	push   ebp
  420299:	call   0xeb521b9e
  42029e:	xchg   ecx,eax
  42029f:	loope  0x42027a
  4202a1:	adc    DWORD PTR [eax+edx*4+0x2d9f5bc9],esi
  4202a8:	xor    bl,BYTE PTR [edi+0x31c00c7a]
  4202ae:	popf   
  4202af:	or     esp,DWORD PTR [ecx-0x39ec5905]
  4202b5:	popa   
  4202b6:	dec    ebx
  4202b7:	cs xchg ebp,eax
  4202b9:	mov    ah,0xb3
  4202bb:	inc    ebx
  4202bc:	mov    ds:0x426d340,al
  4202c1:	add    BYTE PTR ss:[ebx-0x9],bh
  4202c5:	jmp    0x3bd4ae2f
  4202ca:	sbb    BYTE PTR ds:0xd4f144f5,cl
  4202d0:	int3   
  4202d1:	dec    eax
  4202d2:	(bad)  
  4202d3:	push   0x9505673d
  4202d8:	sti    
  4202d9:	into   
  4202da:	aas    
  4202db:	jecxz  0x420299
  4202dd:	cli    
  4202de:	add    DWORD PTR [esi+0x4c],ecx
  4202e1:	sub    DWORD PTR [ebx+0x4a],0xb9930ed9
  4202e8:	sbb    al,0x77
  4202ea:	(bad)  
  4202eb:	and    eax,0xd6736198
  4202f0:	add    BYTE PTR [eax+0x3312c191],dh
  4202f6:	and    BYTE PTR [esi-0x9612398],dh
  4202fc:	pop    esp
  4202fd:	cwde   
  4202fe:	push   ss
  4202ff:	jecxz  0x420304
  420301:	mov    bh,0x47
  420303:	data16 out dx,al
  420305:	ss cld 
  420307:	mov    ds:0xc5015e98,al
  42030c:	in     eax,dx
  42030d:	in     al,0x31
  42030f:	fs inc ebp
  420311:	in     eax,0x9b
  420313:	add    esp,esp
  420315:	fidivr DWORD PTR [eax]
  420317:	pop    edx
  420318:	ds mov ecx,0x5b781058
  42031e:	retf   
  42031f:	jmp    0x420334
  420321:	jl     0x420350
  420323:	and    cl,BYTE PTR [edx]
  420325:	dec    ecx
  420326:	cdq    
  420327:	(bad)  
  420328:	xor    eax,0x77f08db1
  42032d:	cwde   
  42032e:	(bad)  
  42032f:	sbb    BYTE PTR [edx],al
  420331:	push   ebx
  420332:	pop    esi
  420333:	sar    DWORD PTR [esi-0x7b],0xfc
  420337:	jb     0x4202e1
  420339:	xchg   ebx,eax
  42033a:	lds    ebp,FWORD PTR [ecx+0x18d8d4ab]
  420340:	or     ch,BYTE PTR ss:[esi+0x3baf1c86]
  420347:	mov    ch,0xba
  420349:	jbe    0x420380
  42034b:	(bad)  
  42034c:	inc    BYTE PTR [ebx-0x6]
  42034f:	add    eax,DWORD PTR [ebx]
  420351:	in     eax,0x62
  420353:	inc    edx
  420354:	jl     0x4203b8
  420356:	bound  ebx,QWORD PTR [edi]
  420358:	push   0x56c5b79c
  42035d:	inc    ecx
  42035e:	xchg   ebx,eax
  42035f:	loope  0x4203b4
  420361:	shr    dh,1
  420363:	xlat   BYTE PTR ds:[ebx]
  420364:	ror    BYTE PTR [edx-0x65b7f792],cl
  42036a:	lahf   
  42036b:	(bad)  
  42036c:	sbb    dh,ah
  42036e:	jg     0x420312
  420370:	pop    edx
  420371:	push   esi
  420372:	lahf   
  420373:	add    edi,esp
  420375:	inc    ecx
  420376:	ret    
  420377:	imul   DWORD PTR [esi+0x67]
  42037a:	sub    al,0xed
  42037c:	pop    esi
  42037d:	dec    edx
  42037e:	inc    esp
  42037f:	outs   dx,DWORD PTR ds:[esi]
  420380:	adc    esp,ebp
  420382:	out    dx,eax
  420383:	xor    BYTE PTR [ecx+edx*2-0x51a059a5],al
  42038a:	mov    BYTE PTR [eax+eiz*4+0x6e7ca5b4],bh
  420391:	cdq    
  420392:	addr16 sbb al,0xc7
  420395:	es popf 
  420397:	xchg   BYTE PTR [eax],bl
  420399:	repz sbb DWORD PTR [edx+ebp*2],ecx
  42039d:	neg    BYTE PTR [esi+edi*1]
  4203a0:	(bad)  
  4203a1:	int3   
  4203a2:	push   ss
  4203a3:	sub    BYTE PTR [edx+0x18],ah
  4203a6:	(bad)  
  4203a7:	(bad)  
  4203a8:	ror    BYTE PTR [eax+0x4b],1
  4203ab:	lss    ebx,FWORD PTR [esi-0x7c80177d]
  4203b2:	push   edx
  4203b3:	leave  
  4203b4:	adc    ecx,DWORD PTR [edx+edi*1-0x28744500]
  4203bb:	mov    bl,0x8
  4203bd:	rcl    BYTE PTR [ecx],1
  4203bf:	xchg   ecx,eax
  4203c0:	cmp    eax,0xef1ccf25
  4203c5:	pop    ebx
  4203c6:	sbb    DWORD PTR [ebx],0x2e
  4203c9:	push   cs
  4203ca:	push   0xc
  4203cc:	mov    eax,0x63148f6e
  4203d1:	cmp    eax,0x23f8a633
  4203d6:	aad    0x34
  4203d8:	xlat   BYTE PTR ds:[ebx]
  4203d9:	dec    esi
  4203da:	push   esp
  4203db:	int3   
  4203dc:	lods   eax,DWORD PTR ds:[esi]
  4203dd:	lahf   
  4203de:	out    0x31,eax
  4203e0:	(bad)  [ebx]
  4203e2:	xchg   edi,eax
  4203e3:	test   al,0xd7
  4203e5:	inc    esp
  4203e6:	cs xchg esp,eax
  4203e8:	fistp  QWORD PTR ds:0x551fc539
  4203ee:	rcl    ch,0xba
  4203f1:	stos   DWORD PTR es:[edi],eax
  4203f2:	cs dec edx
  4203f4:	loopne 0x420379
  4203f6:	ret    0x990e
  4203f9:	fnsave [edi+0x2e]
  4203fc:	sub    ch,bh
  4203fe:	daa    
  4203ff:	aas    
  420400:	cwde   
  420401:	mov    ch,0xa5
  420403:	loopne 0x42038a
  420405:	inc    edi
  420406:	mov    ebp,0x4dd8cfe
  42040b:	adc    ch,ah
  42040d:	xlat   BYTE PTR ds:[ebx]
  42040e:	mov    ch,0xdf
  420410:	cmc    
  420411:	loope  0x42047c
  420413:	mov    eax,ds:0xe79ab4cf
  420418:	imul   ebp,DWORD PTR [ecx],0x8c4fba94
  42041e:	cli    
  42041f:	(bad)
  420422:	sbb    ch,bh
  420424:	jbe    0x4203c8
  420426:	shl    eax,0x8b
  420429:	inc    esp
  42042a:	cmp    BYTE PTR [ebx],0xd6
  42042d:	lds    esp,FWORD PTR [edi]
  42042f:	icebp  
  420430:	jno    0x420483
  420432:	or     eax,0xf2bb5790
  420437:	hlt    
  420438:	fstp   st(6)
  42043a:	pop    ds
  42043b:	cmp    eax,0x23b15460
  420440:	xchg   ebx,eax
  420441:	mov    eax,?
  420443:	shr    DWORD PTR [ebx+ecx*1+0x3d],cl
  420447:	add    BYTE PTR [ebx-0x1bf8c5c5],cl
  42044d:	test   DWORD PTR [ecx-0x2f],esp
  420450:	xor    eax,0x26360440
  420455:	jb     0x4203e4
  420457:	rol    DWORD PTR [edi-0x14],1
  42045a:	lock neg DWORD PTR [ebx]
  42045d:	test   eax,0x5a76a604
  420462:	cmc    
  420463:	xor    eax,0xe986cf55
  420468:	xchg   edi,eax
  420469:	jp     0x4204e8
  42046b:	add    eax,0x90a3133b
  420470:	pushf  
  420471:	cwde   
  420472:	es mov bl,0x49
  420475:	ror    BYTE PTR [ecx],0x42
  420478:	sbb    dl,ah
  42047a:	(bad)  
  42047b:	or     dh,BYTE PTR [ebp-0xb5e09f9]
  420481:	test   BYTE PTR [ebp+0x63],bl
  420484:	fimul  WORD PTR [esi+0x60]
  420487:	cmp    al,0xd2
  42048a:	repz push esp
  42048c:	stos   BYTE PTR es:[edi],al
  42048d:	lahf   
  42048e:	ja     0x420454
  420490:	xchg   esi,eax
  420491:	mov    DWORD PTR [edi-0x146e008b],eax
  420497:	xchg   edi,eax
  420498:	sbb    eax,0xcd1af7d5
  42049d:	add    DWORD PTR [edi+0x77],edx
  4204a0:	push   0x48
  4204a2:	cwde   
  4204a3:	xor    ebx,DWORD PTR [ecx-0x4aa076f4]
  4204a9:	pop    esi
  4204aa:	mov    ebx,0x7140a5c2
  4204af:	adc    BYTE PTR [edx],dl
  4204b1:	push   0x357b80b7
  4204b6:	xor    eax,edx
  4204b8:	pop    ebp
  4204b9:	mov    eax,ds:0x9c5e086c
  4204be:	std    
  4204bf:	jae    0x4204ca
  4204c1:	jge    0x420538
  4204c3:	xchg   esp,eax
  4204c4:	iret   
  4204c5:	mov    bh,0xc7
  4204c7:	add    al,0x6e
  4204c9:	and    dl,BYTE PTR [ebp+edi*2+0x5a]
  4204cd:	push   ss
  4204ce:	aaa    
  4204cf:	cwde   
  4204d0:	xor    BYTE PTR [ecx+0x7b0555ca],dh
  4204d6:	je     0x4204e7
  4204d8:	mov    edi,0xd6184385
  4204dd:	push   es
  4204de:	aaa    
  4204df:	scas   eax,DWORD PTR es:[edi]
  4204e0:	aam    0x3d
  4204e2:	add    al,0x54
  4204e4:	jne    0x42050f
  4204e6:	push   ecx
  4204e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204e8:	iret   
  4204e9:	lds    ebx,FWORD PTR [eax-0x75d63136]
  4204ef:	addr16 mov edi,0xdf7028f7
  4204f5:	fdiv   QWORD PTR [edx+0x4]
  4204f8:	or     eax,0x422282dc
  4204fd:	lahf   
  4204fe:	mov    bl,0x78
  420500:	and    eax,0xdf5098be
  420505:	xor    ebx,edi
  420507:	add    DWORD PTR [eax+0x19c9d767],edx
  42050d:	pop    esi
  42050e:	hlt    
  42050f:	test   al,0x83
  420511:	lods   eax,DWORD PTR ds:[esi]
  420512:	mov    ch,0xcc
  420514:	ds jbe 0x42053e
  420517:	cmp    bh,BYTE PTR [eax-0x1d17cf91]
  42051d:	pop    ss
  42051e:	mov    esi,ebx
  420520:	jl     0x4204be
  420522:	mov    al,0xaf
  420524:	push   0x3d
  420526:	in     al,dx
  420527:	in     al,dx
  420528:	jl     0x42055a
  42052a:	ins    BYTE PTR es:[edi],dx
  42052b:	jnp    0x4205a6
  42052d:	clc    
  42052e:	push   cs
  42052f:	add    al,0x7
  420531:	loope  0x4204d7
  420533:	jmp    0xa8e27282
  420538:	jbe    0x42056d
  42053a:	ss xchg ebx,eax
  42053c:	jmp    0x67bf:0xd1511651
  420543:	nop
  420544:	xchg   ebp,eax
  420545:	mov    BYTE PTR [edi-0x54bac2f],ah
  42054b:	pop    es
  42054c:	jb     0x420555
  42054e:	jmp    DWORD PTR [eax-0x28]
  420551:	fld    TBYTE PTR [edi]
  420553:	rcl    DWORD PTR [esi+0x52],cl
  420556:	sbb    eax,0xebd8d8cc
  42055b:	sub    al,0x1f
  42055d:	popf   
  42055e:	jmp    eax
  420560:	mov    ch,0x26
  420562:	in     eax,dx
  420563:	mov    dh,0x80
  420565:	xor    BYTE PTR [eax],0x37
  420568:	pusha  
  420569:	and    ecx,DWORD PTR [edi+0x6a3262b3]
  42056f:	lods   al,BYTE PTR ds:[esi]
  420570:	clc    
  420571:	mov    eax,ds:0x9e789ee0
  420576:	into   
  420577:	xchg   ebx,eax
  420578:	add    edi,DWORD PTR ds:0x167ecfae
  42057e:	sub    dh,ch
  420580:	lods   al,BYTE PTR ds:[esi]
  420581:	adc    DWORD PTR [ebx+ecx*2-0x8],eax
  420585:	xchg   DWORD PTR [edx+0x38],ecx
  420588:	pop    esp
  420589:	cmp    al,BYTE PTR [ebx-0x7126143e]
  42058f:	test   al,0x88
  420591:	or     BYTE PTR ds:0x50c16731,cl
  420597:	(bad)  
  420598:	mov    ecx,0x91d1dc9b
  42059d:	and    al,0x86
  42059f:	sbb    edi,ebx
  4205a1:	sub    al,BYTE PTR [esi]
  4205a3:	sub    BYTE PTR [edx+0x20],cl
  4205a6:	sbb    esp,ecx
  4205a8:	int3   
  4205a9:	jmp    0x4205f8
  4205ab:	(bad)  
  4205ac:	cmp    edi,esp
  4205ae:	pop    edx
  4205af:	in     eax,0xd8
  4205b1:	pop    ss
  4205b2:	ror    DWORD PTR [ecx],1
  4205b4:	pusha  
  4205b5:	int    0x8e
  4205b7:	(bad)  
  4205b8:	call   0x1fd800e1
  4205bd:	adc    edx,DWORD PTR [ecx-0x4fdd0813]
  4205c3:	nop
  4205c4:	ja     0x4205c4
  4205c6:	lods   eax,DWORD PTR ds:[esi]
  4205c7:	cmp    DWORD PTR [ecx+0x27487a49],edx
  4205cd:	(bad)  
  4205ce:	adc    BYTE PTR [eax],bh
  4205d0:	outs   dx,BYTE PTR ds:[esi]
  4205d1:	mov    DWORD PTR [ecx+edx*4-0x79],edx
  4205d5:	hlt    
  4205d6:	and    BYTE PTR [ecx],ah
  4205d8:	cwde   
  4205d9:	sbb    edi,DWORD PTR [eax+0x4ca566d6]
  4205df:	rcr    DWORD PTR [edx+0x59727122],0x27
  4205e6:	stos   BYTE PTR es:[edi],al
  4205e7:	mov    al,ds:0xfe0e33c1
  4205ec:	lock sub bl,BYTE PTR [edi]
  4205ef:	sub    eax,0x86043819
  4205f4:	retf   
  4205f5:	dec    ebx
  4205f6:	jb     0x4205c5
  4205f8:	push   ss
  4205f9:	sti    
  4205fa:	push   eax
  4205fb:	and    DWORD PTR [esi+0x47],ecx
  4205fe:	enter  0x889a,0xe0
  420602:	push   0x64
  420604:	push   edi
  420605:	mov    ah,dl
  420607:	out    dx,al
  420608:	mov    al,0x9b
  42060a:	in     eax,0x4a
  42060c:	int    0xc8
  42060e:	pop    esp
  42060f:	and    al,0xba
  420611:	dec    edi
  420612:	sbb    al,0x65
  420614:	retf   
  420615:	cmc    
  420616:	ficom  WORD PTR fs:[edi]
  420619:	imul   edi,DWORD PTR [ecx+0x57],0xffffffbd
  42061d:	xchg   ebx,eax
  42061e:	mov    esp,0xe265b0a
  420623:	inc    ebx
  420624:	push   ebp
  420625:	jns    0x420640
  420627:	mov    ebp,0xe7878a4
  42062c:	add    dl,dh
  42062e:	dec    edi
  42062f:	xor    bl,BYTE PTR [edx]
  420631:	stc    
  420632:	sub    eax,0x4fb209f3
  420637:	loope  0x42060b
  420639:	cmp    dl,cl
  42063b:	test   eax,0x97b18034
  420640:	popa   
  420641:	mov    al,ds:0xf38311d6
  420646:	jo     0x4206c6
  420648:	test   al,0x82
  42064a:	adc    al,0x38
  42064c:	dec    ebp
  42064d:	loopne 0x42061e
  42064f:	sbb    BYTE PTR [edx],dh
  420651:	xchg   edx,ebp
  420653:	inc    eax
  420654:	stos   BYTE PTR es:[edi],al
  420655:	mov    ecx,0xa3b7f733
  42065a:	das    
  42065b:	pop    edi
  42065c:	jno    0x42065a
  42065e:	stos   BYTE PTR es:[edi],al
  42065f:	test   DWORD PTR [edx],ecx
  420661:	jmp    0x3f12dca4
  420666:	cli    
  420667:	das    
  420668:	push   ss
  420669:	test   al,0x5e
  42066b:	iret   
  42066c:	jb     0x420689
  42066e:	mov    dh,0x9f
  420670:	scas   al,BYTE PTR es:[edi]
  420671:	mov    eax,ds:0xcabcb67c
  420676:	fdiv   DWORD PTR [ecx-0x6cf69fcb]
  42067c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42067d:	imul   DWORD PTR [edx+edx*1+0x32]
  420681:	mov    cl,0x38
  420683:	adc    DWORD PTR [esi+0x15],esp
  420686:	jge    0x420639
  420688:	ja     0x420645
  42068a:	mov    ebp,ss
  42068c:	sbb    eax,DWORD PTR [ebx+0x34213b06]
  420692:	push   cs
  420693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420694:	out    dx,eax
  420695:	pop    eax
  420696:	pop    esi
  420697:	hlt    
  420698:	xchg   esp,eax
  420699:	in     al,dx
  42069a:	mov    dl,0x27
  42069c:	aas    
  42069d:	call   0x2f3b:0xdcbcae50
  4206a4:	cmp    al,0xa0
  4206a6:	sub    esi,eax
  4206a8:	push   esp
  4206a9:	test   eax,0x4b8091c5
  4206ae:	xor    BYTE PTR [edx],0xe4
  4206b1:	xor    ch,BYTE PTR [edi]
  4206b3:	adc    cl,ch
  4206b5:	das    
  4206b6:	outs   dx,DWORD PTR ds:[esi]
  4206b7:	bound  esp,QWORD PTR [ecx]
  4206b9:	out    dx,al
  4206ba:	imul   ecx,DWORD PTR [edi-0x412fd987],0xbe1878d9
  4206c4:	cmp    dl,ch
  4206c6:	das    
  4206c7:	add    esi,eax
  4206c9:	pop    ss
  4206ca:	mov    ebp,0xeec4745b
  4206cf:	pop    ss
  4206d0:	push   esp
  4206d1:	xor    al,0xcf
  4206d3:	retf   0xb7e0
  4206d6:	push   ebx
  4206d7:	jle    0x420662
  4206d9:	je     0x420661
  4206db:	mov    al,0xe8
  4206dd:	inc    ecx
  4206de:	push   0x39b0bdd9
  4206e3:	mov    al,0xba
  4206e5:	or     eax,0xbdc05e03
  4206ea:	mov    ss,WORD PTR [ecx-0x723bbd4a]
  4206f0:	fnstenv [edx+0x628fc470]
  4206f6:	ror    cl,1
  4206f8:	cdq    
  4206f9:	cli    
  4206fa:	lods   eax,DWORD PTR es:[esi]
  4206fc:	cmp    al,dh
  4206fe:	jl     0x42069d
  420700:	mov    eax,0xef1947aa
  420705:	sub    eax,0x350f0f31
  42070a:	shl    BYTE PTR [edi],1
  42070c:	pop    ss
  42070d:	stos   BYTE PTR es:[edi],al
  42070e:	adc    esi,DWORD PTR [edx-0x3f489188]
  420714:	pop    es
  420715:	dec    edi
  420716:	and    bl,dl
  420718:	jl     0x4206c2
  42071a:	push   edi
  42071b:	sub    DWORD PTR [edi+ecx*1+0x39fc5205],ebx
  420722:	inc    esi
  420723:	popf   
  420724:	pop    ecx
  420725:	add    cl,BYTE PTR [ecx+ecx*4-0x46f5bf8a]
  42072c:	adc    ah,dh
  42072e:	cmp    eax,0x6a10a12b
  420733:	fsub   st(2),st
  420735:	test   eax,0x73af6b87
  42073a:	sbb    al,BYTE PTR [esi+0xe]
  42073d:	xor    al,0xee
  42073f:	mov    dl,0xf3
  420741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420742:	cmc    
  420743:	int    0xf7
  420745:	sub    al,0x74
  420747:	adc    edi,edi
  420749:	pop    esp
  42074a:	pop    edx
  42074b:	in     eax,dx
  42074c:	sub    edx,DWORD PTR [eax+0x7e17fd19]
  420752:	jns    0x420732
  420754:	jmp    0x4206fc
  420756:	out    0x3c,eax
  420758:	les    ecx,FWORD PTR [edi-0x12b4affc]
  42075e:	mov    ebp,0x21000000
  420763:	pop    ds
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	mov    es,esi
  420770:	xor    eax,0x181f86f
  420775:	add    ch,dh
  420777:	add    al,0x0
  420779:	add    BYTE PTR [ecx-0x1f],al
  42077c:	inc    ecx
  42077d:	pusha  
  42077e:	je     0x4207d1
  420780:	sahf   
  420781:	ror    bl,1
  420783:	mul    DWORD PTR [esi-0x1d2f5ce5]
  420789:	mov    ebp,0x9b7c7a7e
  42078e:	jbe    0x4207a6
  420790:	out    0xe7,eax
  420792:	out    0x54,eax
  420794:	mov    ecx,0x6c1f4db
  420799:	aam    0x1c
  42079b:	jmp    0xb9:0x9b93b8d5
  4207a2:	mov    bh,0x45
  4207a4:	test   DWORD PTR [esi],ecx
  4207a6:	popa   
  4207a7:	push   ecx
  4207a8:	xor    eax,0x2a818e19
  4207ad:	or     bh,dh
  4207af:	test   al,cl
  4207b1:	loopne 0x420799
  4207b3:	pushf  
  4207b4:	mov    eax,0xdb1377b9
  4207b9:	icebp  
  4207ba:	pop    edx
  4207bb:	lock add ch,ch
  4207be:	dec    esp
  4207bf:	pop    edx
  4207c0:	mov    esp,0x59bbaa39
  4207c5:	pushf  
  4207c6:	pop    ebx
  4207c7:	rol    DWORD PTR [esi],0x51
  4207ca:	mov    BYTE PTR [esi+0x7c249cf1],al
  4207d0:	xchg   DWORD PTR [edi+0x1c],esi
  4207d3:	dec    ebp
  4207d4:	xor    ah,BYTE PTR [ecx+ebx*2-0xeacc2e0]
  4207db:	xchg   DWORD PTR [eax],edi
  4207dd:	jnp    0x4207a3
  4207df:	iret   
  4207e0:	out    0x7e,al
  4207e2:	test   BYTE PTR [ecx-0x4],dh
  4207e5:	dec    ecx
  4207e6:	sar    BYTE PTR [ebx],0x81
  4207e9:	adc    DWORD PTR [ebx+0x32],esi
  4207ec:	or     al,0x5f
  4207ee:	push   ebx
  4207ef:	push   edx
  4207f0:	sub    al,BYTE PTR [ebx]
  4207f2:	dec    ebp
  4207f3:	dec    ebp
  4207f4:	int    0x97
  4207f6:	stos   BYTE PTR es:[edi],al
  4207f7:	push   es
  4207f8:	and    eax,0xe6c8fb38
  4207fd:	div    BYTE PTR [esi-0x7d]
  420800:	push   edi
  420801:	jns    0x420790
  420803:	adc    al,0xfe
  420805:	mov    ecx,0x9c9ad350
  42080a:	jle    0x4207b6
  42080c:	mov    al,0xba
  42080f:	xchg   esp,eax
  420810:	scas   al,BYTE PTR es:[edi]
  420811:	or     eax,ebp
  420813:	adc    DWORD PTR [esi+0x3c],edx
  420816:	mov    edx,0x8c824742
  42081b:	aaa    
  42081c:	jl     0x42088c
  42081e:	jg     0x420881
  420820:	sti    
  420821:	sub    edx,edi
  420823:	jle    0x420890
  420825:	jmp    eax
  420827:	shr    esp,0x63
  42082a:	popf   
  42082b:	ja     0x420811
  42082d:	(bad)  
  42082e:	imul   ebp,DWORD PTR [edx],0x3c
  420831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420832:	add    esp,DWORD PTR [esi]
  420834:	pushf  
  420835:	push   ds
  420836:	out    0x3c,eax
  420838:	shl    BYTE PTR [edx],1
  42083a:	lds    ebp,FWORD PTR [ebx]
  42083c:	cld    
  42083d:	push   edx
  42083e:	hlt    
  42083f:	pop    esi
  420840:	cmp    DWORD PTR [ebp+0x3b046931],0x950dedc6
  42084a:	or     BYTE PTR [eax-0x72],bl
  42084d:	in     eax,0x8d
  42084f:	test   eax,0x39c1d5c7
  420854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420855:	pop    ebp
  420856:	pop    ebx
  420857:	add    eax,0xa2a1ef7f
  42085c:	pop    edi
  42085d:	mov    ebp,DWORD PTR [ecx]
  42085f:	dec    ebx
  420860:	xchg   ecx,eax
  420861:	or     eax,0x25c6949
  420866:	fs cs jo 0x42082b
  42086a:	jnp    0x420803
  42086c:	and    al,0xd2
  42086e:	bound  ebx,QWORD PTR [ebx-0x4d]
  420871:	pusha  
  420872:	call   0x9679024
  420877:	(bad)  
  420878:	lea    edi,[edi+0x58]
  42087b:	(bad)  
  42087c:	xor    ebp,DWORD PTR [edi-0x23b0b01c]
  420882:	test   eax,esi
  420884:	mov    ah,0xa1
  420886:	fwait
  420887:	dec    ebx
  420888:	fwait
  420889:	nop
  42088a:	in     al,dx
  42088b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42088c:	ret    0x2b50
  42088f:	lock (bad) 
  420891:	(bad)  
  420893:	loopne 0x4208bc
  420895:	aas    
  420896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420897:	retf   
  420898:	(bad)  
  420899:	xor    dh,BYTE PTR [eax+eax*4]
  42089c:	bound  edi,QWORD PTR [eax+0x60]
  42089f:	xchg   edi,eax
  4208a0:	xchg   BYTE PTR [eax-0x3f],dl
  4208a3:	lea    edx,[ebx+esi*2+0x3fc1d2fc]
  4208aa:	mov    ebx,0x8e39f1bc
  4208af:	add    DWORD PTR [esi],ebx
  4208b1:	cmp    al,0xb
  4208b3:	xor    BYTE PTR [edx],bl
  4208b5:	adc    DWORD PTR [edx+ecx*8],edi
  4208b8:	popa   
  4208b9:	or     al,BYTE PTR [ecx-0x4e]
  4208bc:	mov    dh,0x88
  4208be:	lahf   
  4208bf:	xchg   esp,eax
  4208c0:	add    BYTE PTR [ebx+0x518c83],al
  4208c6:	mov    dh,0xa2
  4208c8:	jge    0x4208a0
  4208ca:	sbb    DWORD PTR [edx+esi*4+0x35da26ae],ebp
  4208d1:	sbb    esp,DWORD PTR [edi]
  4208d3:	dec    esi
  4208d4:	mov    ds:0x238250ab,al
  4208d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208da:	sbb    eax,0xa524a557
  4208df:	lea    eax,[ebx+0x15a5412c]
  4208e5:	test   al,0x85
  4208e7:	stos   DWORD PTR es:[edi],eax
  4208e8:	lods   eax,DWORD PTR ds:[esi]
  4208e9:	in     al,0x2d
  4208eb:	push   ecx
  4208ec:	jge    0x42093c
  4208ee:	pushf  
  4208ef:	lds    ebx,FWORD PTR [eax-0x3d]
  4208f2:	repnz mov eax,ds:0x34c2604e
  4208f8:	or     eax,0x7fcf61f7
  4208fd:	pop    edi
  4208fe:	stos   DWORD PTR es:[edi],eax
  4208ff:	or     ch,al
  420901:	push   edx
  420902:	cwd    
  420904:	pusha  
  420905:	push   cs
  420906:	loope  0x420975
  420908:	sti    
  420909:	ins    DWORD PTR es:[edi],dx
  42090a:	dec    esi
  42090b:	inc    eax
  42090c:	push   ss
  42090d:	xchg   DWORD PTR [ebp+eiz*1+0x73],eax
  420911:	push   eax
  420912:	pop    ecx
  420913:	fs push es
  420915:	out    dx,eax
  420916:	arpl   WORD PTR [ecx-0x52],bx
  420919:	sbb    bh,BYTE PTR [ecx]
  42091b:	shl    DWORD PTR [ebx],0xc9
  42091e:	cmp    eax,0x3d5bf045
  420923:	arpl   WORD PTR [ebx+0x65823b0b],ax
  420929:	rcl    DWORD PTR [esi-0x27dfdcbf],0x4a
  420930:	test   BYTE PTR [eax+0x37227986],ch
  420936:	pop    ds
  420937:	sbb    eax,0x286eb00
  42093c:	mov    esi,0xd6ae17f6
  420941:	sbb    eax,0xd80b49b3
  420946:	adc    eax,DWORD PTR [ecx-0x2a]
  420949:	adc    al,0x6c
  42094b:	in     eax,dx
  42094c:	rcr    BYTE PTR ds:0xf709de68,cl
  420952:	and    DWORD PTR [eax],esi
  420954:	(bad)  
  420955:	iret   
  420956:	loop   0x420902
  420958:	xor    ebx,esp
  42095a:	xchg   DWORD PTR [ecx-0x76],edx
  42095d:	mov    al,ds:0x5d0cd490
  420962:	dec    esi
  420963:	jne    0x4208f8
  420965:	cmp    BYTE PTR [ebx],0x4c
  420968:	dec    ebx
  420969:	pop    ecx
  42096a:	jo     0x420919
  42096c:	xor    ch,BYTE PTR [ebx+0x7a]
  42096f:	pop    ss
  420970:	xchg   DWORD PTR [edi-0x3a8f12f0],edi
  420976:	out    0x33,eax
  420978:	(bad)  
  420979:	fdiv   DWORD PTR [edi+eiz*2]
  42097c:	fsubr  QWORD PTR [edx]
  42097e:	xchg   BYTE PTR cs:[ebx+0x2],al
  420982:	mov    BYTE PTR [eax],bh
  420984:	inc    ebx
  420985:	pop    ebp
  420986:	pop    ebx
  420987:	aam    0x65
  420989:	mov    ds:0xbfb34be3,eax
  42098e:	out    dx,eax
  42098f:	push   ds
  420990:	rol    DWORD PTR [ebp-0x71],cl
  420993:	cmp    eax,0xc7da31d1
  420998:	stos   BYTE PTR es:[edi],al
  420999:	js     0x42093c
  42099b:	push   edi
  42099c:	jle    0x420a0f
  42099e:	in     al,dx
  42099f:	ins    DWORD PTR es:[edi],dx
  4209a0:	adc    ah,dh
  4209a2:	cmp    bl,BYTE PTR [edx]
  4209a4:	adc    ebp,DWORD PTR [ebx+ebx*2-0x15]
  4209a8:	mov    ch,0x37
  4209aa:	pop    ss
  4209ab:	icebp  
  4209ac:	cmp    edx,edi
  4209ae:	fst    QWORD PTR [ecx+0x74fc99b1]
  4209b4:	mov    edx,0x963fdc63
  4209b9:	cli    
  4209ba:	mov    BYTE PTR [ebx+0x37],bh
  4209bd:	xchg   esi,edi
  4209bf:	sahf   
  4209c0:	push   ss
  4209c1:	ds jno 0x420945
  4209c4:	scas   al,BYTE PTR es:[edi]
  4209c5:	nop
  4209c6:	outs   dx,BYTE PTR fs:[esi]
  4209c8:	and    ecx,DWORD PTR [esi+0x63f1abf6]
  4209ce:	popf   
  4209cf:	mov    BYTE PTR [edx],al
  4209d1:	in     al,dx
  4209d2:	fdivr  DWORD PTR [ecx+0x531ecf59]
  4209d8:	jae    0x42096d
  4209da:	xchg   edx,eax
  4209db:	out    dx,eax
  4209dc:	xor    cl,BYTE PTR [esp+ebp*2-0x7fd8715f]
  4209e3:	adc    al,0xc6
  4209e5:	das    
  4209e6:	bound  ebp,QWORD PTR [edi]
  4209e8:	dec    eax
  4209e9:	add    ah,BYTE PTR [edi+0x6]
  4209ec:	xor    eax,0x493c225b
  4209f1:	sbb    bl,BYTE PTR [esi-0x3b]
  4209f4:	push   0x45
  4209f6:	sbb    eax,0x313a89f8
  4209fb:	test   DWORD PTR [edi],ecx
  4209fd:	mov    dl,BYTE PTR [edx+edi*4]
  420a00:	outs   dx,BYTE PTR ds:[si]
  420a02:	pop    ds
  420a03:	push   edi
  420a04:	adc    eax,0x14ed779a
  420a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a0a:	sbb    DWORD PTR [ebp-0x1d],ebp
  420a0d:	neg    edx
  420a0f:	mov    ebp,0x283885af
  420a14:	jb     0x4209e7
  420a16:	pop    ebp
  420a17:	add    cl,cl
  420a19:	lock ds or al,0x8f
  420a1d:	push   edx
  420a1e:	hlt    
  420a1f:	sbb    BYTE PTR [eax],0xec
  420a22:	test   BYTE PTR [esi+0x1ad1efaf],dl
  420a28:	retf   0xbf84
  420a2b:	inc    ecx
  420a2c:	pop    ecx
  420a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a2e:	int    0x5d
  420a30:	cmp    BYTE PTR ds:[esi+ecx*2+0x65],ah
  420a35:	(bad)  
  420a36:	pushf  
  420a37:	lahf   
  420a38:	inc    eax
  420a39:	(bad)  
  420a3a:	aaa    
  420a3b:	sar    al,0x41
  420a3e:	in     al,0x28
  420a40:	lea    ebp,gs:[ebp+0x306ab1a4]
  420a47:	mov    ?,WORD PTR [edi]
  420a49:	stc    
  420a4a:	and    ebx,DWORD PTR [ecx-0x7da6829c]
  420a50:	push   ecx
  420a51:	stc    
  420a52:	fmulp  st(3),st
  420a54:	popa   
  420a55:	aas    
  420a56:	ja     0x4209ea
  420a58:	imul   ebp,ecx,0xffffff8f
  420a5b:	or     ah,bl
  420a5d:	pushf  
  420a5e:	leave  
  420a5f:	adc    eax,0xabc759fe
  420a64:	push   0x79
  420a66:	nop
  420a67:	mov    edx,0xf9f14f26
  420a6c:	cmp    al,0x65
  420a6e:	jmp    0x420aaf
  420a70:	sbb    dl,bh
  420a72:	fidiv  DWORD PTR [edx-0x3]
  420a75:	xchg   BYTE PTR [ecx-0x5],ah
  420a78:	fs add eax,0xeaa476dd
  420a7e:	mov    ah,0xd5
  420a80:	lds    ebp,FWORD PTR [eax+esi*8-0x1a]
  420a84:	mov    eax,ds:0x2f347df9
  420a89:	shl    BYTE PTR [edx],0xb3
  420a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a8d:	push   esi
  420a8e:	cld    
  420a8f:	dec    esi
  420a90:	adc    al,0xef
  420a92:	ins    BYTE PTR es:[edi],dx
  420a93:	add    esi,DWORD PTR [ebp-0x4a]
  420a96:	inc    esi
  420a97:	lods   eax,DWORD PTR ds:[esi]
  420a98:	xchg   ebp,eax
  420a99:	and    BYTE PTR [edi-0x1a1665a],al
  420a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aa0:	test   BYTE PTR [edx+ebp*4+0x68cfd32b],dh
  420aa7:	dec    ecx
  420aa8:	push   ss
  420aa9:	fidiv  WORD PTR [esi+0x1f]
  420aac:	mov    WORD PTR [ecx],es
  420aae:	add    esi,edi
  420ab0:	and    DWORD PTR [ecx],ecx
  420ab2:	cmp    al,0x98
  420ab4:	cmp    ebx,DWORD PTR [ecx]
  420ab6:	pop    esi
  420ab7:	test   BYTE PTR [esi+0x57],0x81
  420abb:	ins    DWORD PTR es:[edi],dx
  420abc:	out    dx,al
  420abd:	jg     0x420b1f
  420abf:	xchg   edx,eax
  420ac0:	leave  
  420ac1:	xor    eax,0x26870518
  420ac6:	cld    
  420ac7:	fs test eax,0x306611a6
  420acd:	xchg   ebp,eax
  420ace:	xchg   ebp,eax
  420acf:	cmp    bh,BYTE PTR [edx-0x7683c51e]
  420ad5:	mov    ebp,0xa8f86d72
  420ada:	sbb    esi,esp
  420adc:	dec    esi
  420add:	xchg   BYTE PTR [edi+0x3896e81c],ch
  420ae3:	xchg   edx,eax
  420ae4:	imul   eax,DWORD PTR [ecx],0x88f8587e
  420aea:	xchg   esp,edx
  420aec:	cmp    al,0x27
  420aee:	lock and esi,eax
  420af1:	cli    
  420af2:	sub    DWORD PTR [ebx],0x3d
  420af5:	pop    edi
  420af6:	mov    DWORD PTR [esi-0x21e0c0c3],ebp
  420afc:	fwait
  420afd:	mov    esi,0xffb1f1e7
  420b02:	xor    esi,edi
  420b04:	pop    ecx
  420b05:	idiv   dl
  420b07:	add    dh,bh
  420b09:	jbe    0x420b3e
  420b0b:	cwde   
  420b0c:	div    BYTE PTR [ecx+0x3a5f691b]
  420b12:	lds    edi,FWORD PTR [edi]
  420b14:	ss stos BYTE PTR es:[edi],al
  420b16:	into   
  420b17:	and    al,0x77
  420b19:	dec    edx
  420b1a:	fidiv  WORD PTR [edi]
  420b1c:	mov    edx,0x79818198
  420b21:	mov    DWORD PTR [esi],edx
  420b23:	test   DWORD PTR [ebx+0x7ad2a73f],esi
  420b29:	add    bl,dl
  420b2b:	icebp  
  420b2c:	in     eax,dx
  420b2d:	in     al,0x31
  420b2f:	and    DWORD PTR [edx-0x71a19792],esp
  420b35:	jnp    0x420b60
  420b37:	jns    0x420b1d
  420b39:	cwde   
  420b3a:	pop    es
  420b3b:	ss pop es
  420b3d:	mov    ebp,0x52f6581
  420b42:	mov    eax,ds:0xa0872ccf
  420b47:	adc    dl,BYTE PTR [ebx+0x5]
  420b4a:	jge    0x420b8e
  420b4c:	div    BYTE PTR [edi-0x38]
  420b4f:	add    DWORD PTR [edx-0x4fdb6b7e],edi
  420b55:	sub    bh,BYTE PTR [edx]
  420b57:	mov    gs,WORD PTR [eax-0x7d]
  420b5a:	fst    QWORD PTR [edi]
  420b5c:	into   
  420b5d:	dec    esi
  420b5e:	out    0xe,al
  420b60:	jge    0x420b1e
  420b62:	jo     0x420b20
  420b64:	mov    dh,0xc
  420b66:	cdq    
  420b67:	ja     0x420b53
  420b69:	aam    0x23
  420b6b:	mov    bh,BYTE PTR [edx+0x35]
  420b6e:	push   ss
  420b6f:	out    0xf4,al
  420b71:	adc    edx,DWORD PTR [ebp+0x54b2718a]
  420b77:	jae    0x420b7f
  420b79:	mov    ch,0x4c
  420b7b:	cmp    ebx,ebp
  420b7d:	mov    ebp,0x6ec3ddf3
  420b82:	xchg   edi,eax
  420b83:	arpl   WORD PTR fs:[edx+0x54],bx
  420b87:	outs   dx,BYTE PTR ds:[esi]
  420b88:	mov    ch,0x6b
  420b8a:	jge    0x420b18
  420b8c:	sti    
  420b8d:	inc    ecx
  420b8e:	retf   0x3c76
  420b91:	fisubr WORD PTR [ebx-0x26652ac7]
  420b97:	outs   dx,BYTE PTR ds:[esi]
  420b98:	inc    ecx
  420b9a:	sub    BYTE PTR [ebp+0xa5532f4],cl
  420ba0:	jg     0x420bad
  420ba2:	in     eax,dx
  420ba3:	ins    BYTE PTR es:[edi],dx
  420ba4:	lods   al,BYTE PTR ds:[esi]
  420ba5:	push   0xffffffae
  420ba7:	or     al,0xee
  420ba9:	iret   
  420baa:	inc    ecx
  420bab:	sahf   
  420bac:	pop    esp
  420bad:	(bad)
  420bb0:	loop   0x420bbf
  420bb2:	mov    BYTE PTR [edi+0x1d],dl
  420bb5:	fistp  WORD PTR [esi]
  420bb7:	dec    ebp
  420bb8:	pop    ebx
  420bb9:	mov    es,ecx
  420bbb:	or     al,bl
  420bbd:	and    ebx,edi
  420bbf:	rcl    DWORD PTR [ebx+ebp*2-0x4a],1
  420bc3:	(bad)  
  420bc4:	xchg   esp,eax
  420bc5:	add    BYTE PTR [edx+0x3],bl
  420bc8:	pop    edx
  420bc9:	or     al,0xc7
  420bcb:	repz lock dec edi
  420bce:	push   ecx
  420bcf:	outs   dx,DWORD PTR ds:[esi]
  420bd0:	das    
  420bd1:	enter  0x18fe,0x0
  420bd5:	cmp    BYTE PTR [edi],dh
  420bd7:	inc    ebp
  420bd8:	test   al,0x46
  420bda:	cs in  al,0x77
  420bdd:	or     eax,0x7e676eaf
  420be2:	lods   eax,DWORD PTR ds:[esi]
  420be3:	cli    
  420be4:	out    dx,al
  420be5:	adc    edx,DWORD PTR [ebp+0x2623f44]
  420beb:	and    al,0xc0
  420bed:	mov    dh,0x66
  420bef:	repnz (bad) 
  420bf1:	push   0x5e
  420bf3:	xor    eax,0x8910d2f5
  420bf8:	inc    dh
  420bfa:	dec    esp
  420bfb:	or     ecx,DWORD PTR [edi]
  420bfd:	inc    edi
  420bfe:	addr16 push cs
  420c00:	sahf   
  420c01:	arpl   WORD PTR [ecx+esi*8+0x46f304f0],dx
  420c08:	xor    DWORD PTR [esi],esp
  420c0a:	sub    BYTE PTR [eax],ah
  420c0c:	jecxz  0x420b99
  420c0e:	inc    eax
  420c0f:	gs sub eax,0x3c22897e
  420c15:	ror    DWORD PTR [eax],1
  420c17:	fs or  eax,0xa2b974b7
  420c1d:	jns    0x420c10
  420c1f:	mov    cl,0xeb
  420c21:	mov    eax,0x19e23527
  420c26:	dec    ecx
  420c27:	adc    DWORD PTR [ebp+0x2a8c9977],esi
  420c2d:	push   esi
  420c2e:	and    dh,BYTE PTR [edx+eiz*8-0x73]
  420c32:	inc    ebp
  420c33:	mov    BYTE PTR [edx+edi*1+0x6d088566],bh
  420c3a:	out    dx,eax
  420c3b:	cld    
  420c3c:	fmul   DWORD PTR [edi-0x7f1d6cf3]
  420c42:	or     dh,BYTE PTR [ebx+eiz*1]
  420c45:	dec    eax
  420c46:	push   edi
  420c47:	rcl    BYTE PTR [esi+0x29],0x47
  420c4b:	add    edi,DWORD PTR [ecx-0x6d0fbf53]
  420c51:	cmc    
  420c52:	xchg   ecx,eax
  420c53:	or     al,0xf7
  420c55:	aaa    
  420c56:	xchg   ebp,eax
  420c57:	mov    eax,ds:0x9c6f2a8b
  420c5c:	lds    ebp,FWORD PTR [esi+ecx*2-0x2c57828e]
  420c63:	stc    
  420c64:	xor    al,0x4
  420c66:	sub    al,al
  420c68:	dec    edi
  420c69:	mov    ebp,0xfa990b05
  420c6e:	fld    DWORD PTR [eax]
  420c70:	add    BYTE PTR [eax],al
  420c72:	add    DWORD PTR [ebp-0x28],edi
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx-0x485647a9]
  420c80:	shl    esp,0xed
  420c83:	xchg   BYTE PTR [ecx],al
  420c85:	add    ch,dh
  420c87:	add    al,0x0
  420c89:	add    dh,al
  420c8b:	int    0x9d
  420c8d:	adc    ebp,edx
  420c8f:	dec    esi
  420c90:	jg     0x420c9d
  420c92:	out    0x9d,al
  420c94:	and    esi,0x6d
  420c97:	ins    BYTE PTR es:[edi],dx
  420c98:	mov    bl,0x82
  420c9a:	out    0x7d,al
  420c9c:	scas   al,BYTE PTR es:[edi]
  420c9d:	mov    bh,0x7a
  420c9f:	ins    BYTE PTR es:[edi],dx
  420ca0:	jp     0x420cf3
  420ca2:	aas    
  420ca3:	mov    al,0x98
  420ca5:	add    BYTE PTR [esi],0xe0
  420ca8:	(bad)  
  420caa:	mov    ah,0x11
  420cac:	and    dh,BYTE PTR [ebp+0x4e698c27]
  420cb2:	call   0x2dfc76c3
  420cb7:	scas   eax,DWORD PTR es:[edi]
  420cb8:	mov    al,ds:0xed92bd9b
  420cbd:	xchg   edx,eax
  420cbe:	mov    bl,0xe2
  420cc0:	ss test al,0xe5
  420cc3:	sub    edi,DWORD PTR [esi-0x1f]
  420cc6:	cs test al,0xfe
  420cc9:	jecxz  0x420d39
  420ccb:	push   esp
  420ccc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cce:	inc    ebp
  420ccf:	ins    DWORD PTR es:[edi],dx
  420cd0:	popf   
  420cd1:	dec    ebp
  420cd2:	ins    DWORD PTR es:[edi],dx
  420cd3:	inc    esi
  420cd4:	div    BYTE PTR [esi+0x59]
  420cd7:	sahf   
  420cd8:	jns    0x420cdd
  420cda:	lods   eax,DWORD PTR ds:[esi]
  420cdb:	test   eax,0x8dc740aa
  420ce0:	xchg   BYTE PTR [edi+0x1c3d73ff],bh
  420ce6:	jae    0x420d44
  420ce8:	(bad)  
  420cea:	xchg   edi,eax
  420ceb:	stc    
  420cec:	stos   DWORD PTR es:[edi],eax
  420ced:	js     0x420d53
  420cef:	fnstcw WORD PTR [ecx-0x38]
  420cf2:	jns    0x420d49
  420cf4:	or     BYTE PTR [edx],cl
  420cf6:	mov    ds:0xc011df55,al
  420cfb:	mov    eax,0xe51d897
  420d00:	stos   DWORD PTR es:[edi],eax
  420d01:	fst    QWORD PTR [esi+eiz*4-0x25]
  420d05:	cmp    eax,edx
  420d07:	les    ecx,FWORD PTR [esi]
  420d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d0a:	jmp    0x420d85
  420d0c:	dec    edx
  420d0d:	mov    eax,0xe39396a8
  420d12:	push   0x3e581814
  420d17:	push   esp
  420d18:	adc    al,0x5f
  420d1a:	mov    eax,ds:0xfc6ea05
  420d1f:	jb     0x420d6e
  420d21:	loop   0x420d14
  420d23:	dec    ebx
  420d24:	imul   DWORD PTR [ecx+ecx*1]
  420d27:	dec    edi
  420d28:	xchg   esp,eax
  420d29:	not    DWORD PTR [eax+0x43]
  420d2c:	lock fild QWORD PTR [edi+ebp*8]
  420d30:	mov    edi,0xacc6b5cb
  420d35:	dec    ebp
  420d36:	mov    ebp,0x346aae12
  420d3b:	iret   
  420d3c:	lahf   
  420d3d:	dec    edx
  420d3e:	inc    esi
  420d3f:	add    eax,0xb1e4e728
  420d44:	rol    DWORD PTR [esi],cl
  420d46:	xchg   ebx,eax
  420d47:	(bad)  
  420d48:	out    0xf7,al
  420d4a:	in     al,dx
  420d4b:	pop    ebp
  420d4c:	call   0x5104:0x46906f16
  420d53:	test   al,0x73
  420d55:	aad    0xe1
  420d57:	jmp    0x84b34bc3
  420d5c:	iret   
  420d5d:	sbb    cl,BYTE PTR [edi-0x79]
  420d60:	arpl   WORD PTR [ecx],ax
  420d62:	pop    ebp
  420d63:	je     0x420d96
  420d65:	adc    ch,BYTE PTR [ecx+eiz*1+0x7dfd3523]
  420d6c:	adc    cl,BYTE PTR [ecx]
  420d6e:	push   edx
  420d6f:	jnp    0x420dd6
  420d71:	in     al,0x8d
  420d73:	shl    DWORD PTR [esi-0x5c],cl
  420d76:	jae    0x420d79
  420d78:	call   0x2e53:0x8efc7188
  420d7f:	js     0x420df3
  420d81:	push   0x1a1fdcf9
  420d86:	push   ebp
  420d87:	out    dx,al
  420d88:	pop    esi
  420d89:	cmp    ah,bh
  420d8b:	mov    esp,0x1e4f9169
  420d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d91:	pusha  
  420d92:	mov    eax,DWORD PTR [edi+eiz*8+0x16]
  420d96:	leave  
  420d97:	mov    al,ds:0x10c68425
  420d9c:	fimul  DWORD PTR [ebx+0x5d]
  420d9f:	arpl   WORD PTR [esi+0x38],si
  420da2:	push   es
  420da3:	xchg   ecx,eax
  420da4:	and    al,0xfe
  420da6:	mov    ds:0xd65a70fd,eax
  420dab:	sar    BYTE PTR [ecx],0x5e
  420dae:	pop    es
  420daf:	mov    dl,0xb3
  420db1:	jmp    0x292a9e30
  420db6:	inc    edx
  420db7:	mov    ah,0xca
  420db9:	adc    BYTE PTR [esi-0x3c],bh
  420dbc:	jae    0x420dcc
  420dbe:	jnp    0x420dec
  420dc0:	out    0xee,eax
  420dc2:	bound  edx,QWORD PTR [eax+0x72]
  420dc5:	outs   dx,DWORD PTR ds:[esi]
  420dc6:	pavgb  mm7,QWORD PTR [ebx+0x53f364a5]
  420dcd:	mov    edx,0x9fa870f7
  420dd2:	sbb    DWORD PTR [esi+0x6c439c85],esi
  420dd8:	dec    esp
  420dd9:	push   cs
  420dda:	sub    DWORD PTR fs:[esi],edx
  420ddd:	aaa    
  420dde:	rcr    cl,1
  420de0:	push   esi
  420de1:	sbb    BYTE PTR [ecx],ah
  420de3:	shr    DWORD PTR [edx-0xe],1
  420de6:	pop    esp
  420de7:	push   es
  420de8:	pushf  
  420de9:	sbb    cl,BYTE PTR [edx]
  420deb:	mov    ah,0x6d
  420ded:	outs   dx,DWORD PTR ds:[esi]
  420dee:	inc    ebp
  420def:	mov    bl,0x3f
  420df1:	mov    ch,0xd6
  420df3:	hlt    
  420df4:	ins    DWORD PTR es:[edi],dx
  420df5:	inc    ebp
  420df6:	cmp    DWORD PTR [ebx-0x2d],edx
  420df9:	jb     0x420e0b
  420dfb:	into   
  420dfc:	push   cs
  420dfd:	push   0x6de17315
  420e02:	popa   
  420e03:	dec    edx
  420e04:	aas    
  420e05:	sets   BYTE PTR [edi-0x80]
  420e09:	out    0xc7,eax
  420e0b:	inc    ebx
  420e0c:	icebp  
  420e0d:	cdq    
  420e0e:	and    DWORD PTR [ecx],edx
  420e10:	jp     0x420da0
  420e12:	popa   
  420e13:	push   0x3b
  420e15:	and    BYTE PTR [eax+0x63df947c],ah
  420e1b:	pusha  
  420e1c:	inc    esp
  420e1d:	ret    
  420e1e:	outs   dx,BYTE PTR ds:[esi]
  420e1f:	loop   0x420e01
  420e21:	dec    ecx
  420e22:	scas   eax,DWORD PTR es:[edi]
  420e23:	rol    BYTE PTR [esi+0x4f],0xa0
  420e27:	jg     0x420e33
  420e29:	test   al,0x2a
  420e2b:	jp     0x420e87
  420e2d:	push   0xb9692ca6
  420e32:	push   ss
  420e33:	mov    esi,0x952e2ee1
  420e38:	xchg   esi,eax
  420e39:	icebp  
  420e3a:	add    esp,DWORD PTR [eax-0x3a]
  420e3d:	sti    
  420e3e:	jmp    0x420de0
  420e40:	mov    bh,0xad
  420e42:	sti    
  420e43:	and    al,0x15
  420e45:	stc    
  420e46:	(bad)  [eax-0x1e607d0d]
  420e4c:	or     bh,bh
  420e4e:	test   BYTE PTR [esi+0x2a],ch
  420e51:	fist   DWORD PTR [esi-0x1]
  420e54:	aad    0xf8
  420e56:	push   ebp
  420e57:	lds    ebp,FWORD PTR [eax]
  420e59:	or     DWORD PTR [ebx+0x77424139],eax
  420e5f:	cmc    
  420e60:	xor    al,0x2d
  420e62:	or     eax,0xd3f3b7da
  420e67:	test   BYTE PTR [ecx+0x5d],al
  420e6a:	fcom   DWORD PTR [ecx+0x38]
  420e6d:	ja     0x420e60
  420e6f:	jbe    0x420ee9
  420e71:	lds    ebp,FWORD PTR [esi+0x3e]
  420e74:	mov    BYTE PTR [ecx+0x4a],dl
  420e77:	icebp  
  420e78:	or     DWORD PTR [esi+0x57],edi
  420e7b:	adc    eax,0xd2529792
  420e80:	cmc    
  420e81:	or     edi,0x580b99c4
  420e87:	or     DWORD PTR [esi],esp
  420e89:	out    dx,al
  420e8a:	push   0xffffffa2
  420e8c:	test   DWORD PTR [ebp+0x3d],edx
  420e8f:	cmp    ecx,esi
  420e91:	jmp    0x89ee:0x790efa85
  420e98:	xrelease mov BYTE PTR ds:0x4e0b8c20,bl
  420e9f:	(bad)  
  420ea1:	adc    ch,BYTE PTR [ebx+0x6ad0c082]
  420ea7:	(bad)  
  420ea8:	mov    ds:0xccced30c,al
  420ead:	cmp    edx,DWORD PTR [eax]
  420eaf:	push   ebx
  420eb0:	mov    eax,0xfd3aa93c
  420eb5:	and    DWORD PTR [eax],edx
  420eb7:	test   al,0xd9
  420eb9:	inc    ebp
  420eba:	mov    ebx,DWORD PTR [edi-0x23]
  420ebd:	je     0x420ee2
  420ebf:	rol    DWORD PTR [ecx+0x6c29b389],0x5b
  420ec6:	inc    edx
  420ec7:	jno    0x420e74
  420ec9:	bound  ecx,QWORD PTR [edx+0x258c4bf5]
  420ecf:	dec    ebx
  420ed0:	enter  0x9a65,0x5f
  420ed4:	shr    BYTE PTR [eax],1
  420ed6:	aam    0x6b
  420ed8:	push   ebp
  420ed9:	cmp    al,0xf3
  420edb:	in     eax,dx
  420edc:	xor    BYTE PTR [eax],dh
  420ede:	call   0xcff:0xa441cf3c
  420ee5:	adc    DWORD PTR [esi],esp
  420ee7:	mul    BYTE PTR [edi-0x71]
  420eea:	les    ecx,FWORD PTR [ecx-0x37]
  420eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eee:	inc    ebx
  420eef:	(bad)  
  420ef0:	scas   eax,DWORD PTR es:[edi]
  420ef1:	and    eax,0x8221d880
  420ef6:	add    ah,bl
  420ef8:	int3   
  420ef9:	xchg   esp,eax
  420efa:	or     DWORD PTR [ebx+0x44eab9f6],eax
  420f00:	mov    eax,ds:0x7173e0b1
  420f05:	inc    ebx
  420f06:	add    esi,esi
  420f08:	rol    DWORD PTR [esi],cl
  420f0a:	and    ah,dl
  420f0c:	mov    ds:0x61ca4f3c,eax
  420f11:	dec    edx
  420f12:	push   es
  420f13:	add    dl,BYTE PTR [eax+edx*1+0x2f]
  420f17:	(bad)
  420f1a:	jne    0x420ef7
  420f1c:	jg     0x420f01
  420f1e:	mov    dl,dh
  420f20:	loopne 0x420f7e
  420f22:	retf   0x2779
  420f25:	into   
  420f26:	mov    ch,0x33
  420f28:	(bad)  
  420f29:	aaa    
  420f2a:	pop    ds
  420f2b:	dec    edi
  420f2c:	bswap  edi
  420f2e:	ret    0x381c
  420f31:	mul    eax
  420f33:	or     edi,esi
  420f35:	arpl   bx,sp
  420f37:	lods   eax,DWORD PTR ds:[esi]
  420f38:	sbb    ebx,DWORD PTR [eax-0x4b]
  420f3b:	inc    esp
  420f3c:	pop    edx
  420f3d:	enter  0xaf2a,0x7d
  420f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f42:	lock ret 
  420f44:	or     al,0x7b
  420f46:	mov    eax,ds:0x977951e4
  420f4b:	imul   edx,DWORD PTR [edx-0x5c],0xfffffff8
  420f4f:	or     al,0x42
  420f51:	cld    
  420f52:	xor    esp,edx
  420f54:	cdq    
  420f55:	adc    dh,BYTE PTR gs:[ebp-0x12]
  420f59:	shl    DWORD PTR [bp+si+0x5a52],0x69
  420f5f:	add    esi,edi
  420f61:	mov    bl,0xdd
  420f63:	hlt    
  420f64:	add    BYTE PTR [ebx+ebp*2-0x66],dh
  420f68:	sub    bh,BYTE PTR [eax]
  420f6a:	mov    esi,0x7236ac4c
  420f6f:	lds    ecx,FWORD PTR [edx-0x28]
  420f72:	and    eax,0x345bc040
  420f77:	(bad)  
  420f78:	repz cmp eax,0x3e5c9c4c
  420f7e:	mov    ds:0x3b2d702e,al
  420f83:	xchg   ebp,eax
  420f84:	and    edx,DWORD PTR [ebx+0x1f]
  420f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f88:	pop    es
  420f89:	mov    bl,0x8c
  420f8b:	inc    edi
  420f8c:	lds    ebp,FWORD PTR [esi+edx*8]
  420f8f:	pop    ds
  420f90:	cmp    eax,DWORD PTR [esi]
  420f92:	cmp    eax,0x69ce4b6b
  420f97:	push   ebp
  420f99:	cld    
  420f9a:	jmp    0x420fba
  420f9c:	outs   dx,DWORD PTR ds:[esi]
  420f9d:	mov    eax,0xb73b565b
  420fa2:	ficom  WORD PTR [edx]
  420fa4:	daa    
  420fa5:	adc    esi,DWORD PTR [ecx-0x38]
  420fa8:	add    al,0xdc
  420faa:	fisubr WORD PTR ds:0x9657c1c0
  420fb0:	(bad)  
  420fb1:	in     al,dx
  420fb2:	mov    al,ds:0xa82eea1
  420fb7:	fidiv  DWORD PTR [edx-0xb]
  420fba:	pop    ebx
  420fbb:	loop   0x420fbf
  420fbd:	lahf   
  420fbe:	ret    
  420fbf:	xchg   BYTE PTR [esi-0x26e617e0],dh
  420fc5:	mov    al,ds:0xfafe4926
  420fca:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fcc:	mov    dh,0x54
  420fce:	(bad)  
  420fd0:	aas    
  420fd1:	mov    DWORD PTR [eax+ebx*1-0x6e],esi
  420fd5:	repnz mov bh,0x5c
  420fd8:	pop    ebp
  420fd9:	lock dec eax
  420fdb:	add    BYTE PTR [esi-0x65cec6a6],dl
  420fe1:	fsubr  st,st(3)
  420fe3:	das    
  420fe4:	paddsb mm1,mm5
  420fe7:	adc    dh,BYTE PTR [eax+0x54]
  420fea:	data16 jge 0x42104e
  420fed:	call   0x8865:0x22e3643f
  420ff4:	out    0x3,eax
  420ff6:	test   cl,ah
  420ff8:	xchg   esi,eax
  420ff9:	call   0xd09a:0x1ce4417e
  421000:	retf   0x7c27
  421003:	cdq    
  421004:	push   ecx
  421005:	cmp    dl,BYTE PTR [ebp+ebx*2+0x10137f18]
  42100c:	ss push edi
  42100e:	pop    es
  42100f:	xchg   BYTE PTR [eax],ch
  421011:	xchg   esp,eax
  421012:	sbb    bh,bl
  421014:	scas   eax,DWORD PTR es:[edi]
  421015:	cdq    
  421016:	mov    eax,ds:0xcbfacefb
  42101b:	adc    bh,BYTE PTR [ebp+0x48]
  42101e:	mov    al,0x40
  421020:	sub    bl,BYTE PTR [ebx-0x32b17320]
  421026:	mov    dl,0xfa
  421028:	mov    bh,0x22
  42102a:	mov    DWORD PTR [ecx-0x2b9366c8],eax
  421030:	int3   
  421031:	cli    
  421032:	test   DWORD PTR [eax-0x4],esi
  421035:	lea    esp,[edx-0x78]
  421038:	hlt    
  421039:	xor    cl,dl
  42103b:	je     0x420fee
  42103d:	or     DWORD PTR [esp+eax*2],eax
  421040:	data16 mov ds:0xa99c3ab,al
  421046:	add    cl,dh
  421048:	mov    esp,0x833243a1
  42104d:	mov    ds:0x8f1561e9,al
  421052:	lea    esi,[ecx+0x35]
  421055:	sub    eax,0x5317741e
  42105a:	dec    esp
  42105b:	pop    ebx
  42105c:	mov    ah,0x81
  42105e:	imul   edx,ebp,0x41
  421061:	aaa    
  421062:	outs   dx,DWORD PTR ds:[esi]
  421063:	xchg   edi,eax
  421064:	mov    eax,0xf938ff2d
  421069:	lds    edi,FWORD PTR [eax+0x16]
  42106c:	push   ds
  42106d:	out    0x21,al
  42106f:	xchg   BYTE PTR [esi],bh
  421071:	les    ecx,FWORD PTR [edi-0x6]
  421074:	add    BYTE PTR [edx-0x63],dh
  421077:	mov    ebp,0x62ebdcc4
  42107c:	dec    ebp
  42107d:	retf   
  42107e:	mov    dh,0x18
  421080:	jmp    0x8bb57897
  421085:	cmp    esp,esp
  421087:	and    BYTE PTR [ecx],bh
  421089:	repnz push esp
  42108b:	shr    ecx,cl
  42108d:	call   0x59915abc
  421092:	pusha  
  421093:	mov    eax,0x1b34299f
  421098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421099:	es dec edx
  42109b:	outs   dx,BYTE PTR ds:[esi]
  42109c:	cwde   
  42109d:	fldcw  WORD PTR [ebp+0x22a5a632]
  4210a3:	jl     0x421029
  4210a5:	xchg   esi,eax
  4210a6:	pop    ds
  4210a7:	mul    BYTE PTR [esi]
  4210a9:	sar    BYTE PTR [eax+ebp*8-0x72],1
  4210ad:	(bad)  
  4210ae:	xchg   edi,eax
  4210af:	fwait
  4210b0:	mov    bh,0xb1
  4210b2:	ins    DWORD PTR es:[edi],dx
  4210b3:	fcmovnbe st,st(3)
  4210b5:	adc    cl,BYTE PTR [ebp-0x25ad2]
  4210bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210bc:	jl     0x421087
  4210be:	xchg   BYTE PTR [ebp-0x4081d2c0],cl
  4210c4:	adc    BYTE PTR [edx],ch
  4210c6:	stos   DWORD PTR es:[edi],eax
  4210c7:	lock loop 0x421087
  4210ca:	es sti 
  4210cc:	xor    DWORD PTR [edx+0x5d],esp
  4210cf:	xlat   BYTE PTR ds:[ebx]
  4210d0:	xlat   BYTE PTR ds:[ebx]
  4210d1:	dec    ebp
  4210d2:	add    al,BYTE PTR [ebp+0x22ab62a1]
  4210d8:	xchg   DWORD PTR ds:0xb9eac1e3,edi
  4210de:	js     0x421123
  4210e0:	(bad)  
  4210e1:	inc    ecx
  4210e2:	jmp    0x4210de
  4210e4:	inc    esi
  4210e5:	popf   
  4210e6:	mov    dh,0x1c
  4210e8:	cs push ebx
  4210ea:	lahf   
  4210eb:	iret   
  4210ec:	jg     0x421169
  4210ee:	mov    dh,0x16
  4210f0:	xor    al,0x27
  4210f2:	jl     0x42107a
  4210f4:	les    ebx,FWORD PTR [edi+0x4e5d7b79]
  4210fa:	shr    BYTE PTR [ecx],0x1c
  4210fd:	test   BYTE PTR [eax],dh
  4210ff:	mov    eax,0x88cf6417
  421104:	outs   dx,BYTE PTR ds:[esi]
  421105:	stc    
  421106:	mov    edi,DWORD PTR [edi+0x39]
  421109:	std    
  42110a:	sub    eax,0xb4a64908
  42110f:	sbb    al,0xa1
  421111:	mov    bl,0xd5
  421113:	jns    0x421126
  421115:	int3   
  421116:	xor    al,0x3b
  421118:	jnp    0x4210a5
  42111a:	pop    edi
  42111b:	(bad)  
  42111c:	stc    
  42111d:	and    eax,0xec7d60ee
  421122:	sub    esp,0x17
  421125:	jp     0x42117a
  421127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421128:	aaa    
  421129:	aas    
  42112a:	scas   al,BYTE PTR es:[edi]
  42112b:	pop    eax
  42112c:	bound  esp,QWORD PTR [edx]
  42112e:	pop    esi
  42112f:	mov    ebp,0x5443795a
  421134:	dec    esi
  421135:	and    al,0x5f
  421137:	(bad)  
  421139:	mov    al,0x61
  42113b:	sahf   
  42113c:	jg     0x421171
  42113e:	push   edx
  42113f:	adc    edi,DWORD PTR [eax]
  421141:	mov    ecx,0x49165ec
  421146:	cli    
  421147:	shl    DWORD PTR [eax+0x1ea9ca60],0xe5
  42114e:	xchg   edi,eax
  42114f:	loopne 0x4210f5
  421151:	cli    
  421152:	lods   al,BYTE PTR ds:[esi]
  421153:	xchg   BYTE PTR [ecx+0x6fda4427],al
  421159:	cmp    edi,esi
  42115b:	pop    eax
  42115c:	(bad)  
  42115d:	loope  0x4211b9
  42115f:	mov    ds:0xaebea9f4,eax
  421164:	mov    cl,0x32
  421166:	mov    ds:0xadbd97be,eax
  42116b:	mov    edx,ecx
  42116d:	retf   0x11d6
  421170:	(bad)  
  421171:	fsubp  st(5),st
  421173:	mov    bh,0x8b
  421175:	jbe    0x64792426
  42117b:	push   edi
  42117c:	add    DWORD PTR gs:[eax-0x79000000],edx
  421183:	iret   
  421184:	adc    ebp,DWORD PTR [edx]
  421186:	pop    ebx
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [eax],cl
  42118f:	push   edi
  421190:	inc    BYTE PTR [edx+eiz*8-0x75]
  421194:	add    DWORD PTR [eax],eax
  421196:	cmc    
  421197:	add    al,0x0
  421199:	add    BYTE PTR [ebp+0x4f],dl
  42119c:	inc    esp
  42119d:	fld    st(0)
  42119f:	cmp    eax,0x6c2686f5
  4211a4:	cmp    BYTE PTR [eax+0x53],bh
  4211a7:	jo     0x4211da
  4211a9:	add    eax,ecx
  4211ab:	in     eax,0x4
  4211ad:	and    dh,BYTE PTR [esi+0x6eee9528]
  4211b3:	xchg   ebp,eax
  4211b4:	frstor [eax+0x44]
  4211b7:	(bad)  
  4211b8:	jns    0x421173
  4211ba:	or     cl,BYTE PTR [ecx+0x2abd4d9e]
  4211c0:	inc    edx
  4211c1:	jecxz  0x42120f
  4211c3:	bound  esi,QWORD PTR [edi]
  4211c5:	cld    
  4211c6:	ret    0xa6e1
  4211c9:	add    al,0x80
  4211cc:	fwait
  4211cd:	ret    
  4211ce:	mov    dh,0x7d
  4211d0:	loop   0x421173
  4211d2:	gs jnp 0x421210
  4211d5:	jecxz  0x4211f3
  4211d7:	xchg   esi,eax
  4211d8:	test   BYTE PTR [edx-0x24d181fa],0xfb
  4211df:	jo     0x421161
  4211e1:	sbb    al,0x7e
  4211e3:	or     al,0xa2
  4211e5:	jecxz  0x421195
  4211e7:	hlt    
  4211e8:	pop    ecx
  4211e9:	cwde   
  4211ea:	les    ecx,FWORD PTR [edi+0x42cc8a95]
  4211f0:	into   
  4211f1:	cmp    bh,BYTE PTR [ebx]
  4211f3:	pushf  
  4211f4:	sub    ebx,DWORD PTR [ebp+0x39]
  4211f7:	cdq    
  4211f8:	outs   dx,DWORD PTR ds:[esi]
  4211f9:	int3   
  4211fa:	sub    ch,BYTE PTR [ecx-0x72]
  4211fd:	mov    dl,0x89
  4211ff:	inc    edi
  421200:	mov    edi,0xdd4fe19f
  421205:	jp     0x421220
  421207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421208:	xor    BYTE PTR [edx-0x484520a0],ah
  42120e:	mov    esp,0x8ba43d0c
  421213:	adc    eax,0x8a182516
  421218:	ret    
  421219:	pop    esp
  42121a:	jae    0x421203
  42121c:	push   edx
  42121d:	inc    eax
  42121e:	aaa    
  42121f:	jmp    0xf79f3f68
  421224:	into   
  421225:	push   edi
  421226:	enter  0x658a,0x46
  42122a:	cmp    DWORD PTR [eax],0x905b88f3
  421230:	repz sub al,0xe2
  421233:	cli    
  421234:	jmp    0x72b34607
  421239:	imul   esp,DWORD PTR [ebp+0x44],0x7d
  42123d:	test   BYTE PTR [edx+ebp*8-0x4a0b292a],0x4e
  421245:	imul   ebx,DWORD PTR [edi+edi*4-0x53],0x2cf118c
  42124d:	jmp    0xe2c90fd
  421252:	test   al,0xac
  421254:	aad    0xd5
  421256:	cmp    al,0xa0
  421258:	ficomp DWORD PTR [esi+edx*4]
  42125b:	pop    eax
  42125c:	cwde   
  42125d:	bound  ebp,QWORD PTR [ebx]
  42125f:	xchg   esi,eax
  421260:	xchg   edi,eax
  421261:	fmul   QWORD PTR [ebx-0x6a]
  421264:	add    BYTE PTR [ebp-0x68],0x5b
  421268:	sub    al,0x9f
  42126a:	stos   BYTE PTR es:[edi],al
  42126b:	iret   
  42126c:	mov    dl,0xd0
  42126e:	sbb    eax,0xbd8cd2e
  421273:	sub    edi,DWORD PTR [edi-0x3f29c090]
  421279:	adc    al,0x25
  42127b:	inc    BYTE PTR [edx+eax*2-0x7f]
  42127f:	rcr    DWORD PTR ss:[esi+0x69858779],1
  421286:	cmp    ch,BYTE PTR [di]
  421289:	sub    bh,BYTE PTR [esp+ebp*2]
  42128c:	add    ebp,DWORD PTR [ebp+0x4361e3ec]
  421292:	loopne 0x421278
  421294:	pop    ds
  421295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421296:	push   edx
  421297:	mov    fs,WORD PTR [edx+0x44]
  42129a:	cmc    
  42129b:	pop    ebx
  42129c:	mov    ecx,0x64877778
  4212a1:	ds adc al,cl
  4212a4:	inc    ebx
  4212a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212a6:	aam    0x90
  4212a8:	xchg   ecx,eax
  4212a9:	push   ss
  4212aa:	test   eax,0x201386ce
  4212af:	push   cs
  4212b0:	add    cl,BYTE PTR [ebx-0x25]
  4212b3:	lea    eax,[ebx+0x3a]
  4212b6:	push   es
  4212b7:	mov    edx,0x6d8d39e4
  4212bc:	lds    edi,FWORD PTR [esi-0x3a]
  4212bf:	(bad)  
  4212c0:	jnp    0x421320
  4212c2:	jo     0x4212f5
  4212c4:	adc    cl,ah
  4212c6:	lds    ebp,FWORD PTR [esi]
  4212c8:	fisubr DWORD PTR [ebp-0x59c24861]
  4212ce:	jp     0x421320
  4212d0:	scas   eax,DWORD PTR es:[edi]
  4212d1:	int    0x1c
  4212d3:	mov    ds,ecx
  4212d5:	jbe    0x4212ba
  4212d7:	out    0xcd,eax
  4212d9:	(bad)
  4212dc:	or     ecx,DWORD PTR [edi]
  4212de:	pop    ebp
  4212df:	aad    0x2b
  4212e1:	stc    
  4212e2:	ja     0x421336
  4212e4:	fiadd  DWORD PTR [bx+si-0x299f]
  4212e9:	jg     0x421321
  4212eb:	test   BYTE PTR gs:[edx],dl
  4212ee:	dec    ebx
  4212ef:	lea    edx,[eax+eax*2]
  4212f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212f3:	call   0xfd82:0xd7fa94be
  4212fa:	cs push ebp
  4212fc:	mov    dl,0xd5
  4212fe:	push   cs
  4212ff:	inc    eax
  421300:	add    DWORD PTR [edi+0x46],edi
  421303:	imul   ecx,DWORD PTR [eax-0x33f697e1],0x4ef38dc7
  42130d:	or     BYTE PTR [edi-0x587601a9],bh
  421313:	xor    dh,BYTE PTR [edx]
  421315:	inc    eax
  421316:	push   ebx
  421317:	inc    esi
  421318:	mov    ah,0x6
  42131a:	in     eax,dx
  42131b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42131c:	mov    eax,0x1f0a667b
  421321:	ins    BYTE PTR es:[edi],dx
  421322:	pop    ss
  421323:	xchg   ebp,eax
  421324:	stos   BYTE PTR es:[edi],al
  421325:	dec    esp
  421326:	mov    ch,0xc2
  421328:	add    cl,BYTE PTR ds:0xb327f615
  42132e:	add    DWORD PTR [ecx-0x70029537],ecx
  421334:	(bad)  
  421336:	outs   dx,BYTE PTR ds:[esi]
  421337:	push   esp
  421338:	mov    edx,ecx
  42133a:	ja     0x421376
  42133c:	mov    dl,BYTE PTR ds:0x5607ea5b
  421342:	mov    BYTE PTR [ecx+0x25],ah
  421345:	out    dx,al
  421346:	jns    0x4213c5
  421348:	mov    dh,0xc
  42134a:	mov    ecx,0x5c1aece8
  42134f:	sti    
  421350:	mov    edx,0x5cb1b8ca
  421355:	mov    ch,0x96
  421357:	dec    eax
  421358:	(bad)  
  42135a:	ins    DWORD PTR es:[edi],dx
  42135b:	sub    eax,0x5b33a457
  421360:	push   es
  421361:	or     DWORD PTR [edx+0x48387dbe],eax
  421367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421368:	sub    DWORD PTR [ebx+ecx*2-0x9fbf8f5],edx
  42136f:	fcom   DWORD PTR [ecx+0x6c]
  421372:	loop   0x4212f7
  421374:	loopne 0x421354
  421376:	bound  esi,QWORD PTR [ebx]
  421378:	sub    DWORD PTR [edx-0x409d1147],esp
  42137e:	rcl    BYTE PTR [edi+0x74edb2a5],0x48
  421385:	push   ebp
  421386:	push   eax
  421387:	pop    ebx
  421388:	push   eax
  421389:	push   edi
  42138a:	push   ds
  42138b:	stos   DWORD PTR es:[edi],eax
  42138c:	(bad)  
  42138d:	test   al,0xba
  42138f:	jg     0x42138e
  421391:	retf   0xe01f
  421394:	cmc    
  421395:	push   ss
  421396:	cmp    al,0x64
  421398:	xor    dh,BYTE PTR [eax]
  42139a:	retf   
  42139b:	pop    edx
  42139c:	lahf   
  42139d:	jae    0x4213d1
  42139f:	mov    esi,?
  4213a1:	imul   ebp,DWORD PTR [bp+di-0x27],0x22
  4213a6:	std    
  4213a7:	in     eax,0x38
  4213a9:	or     DWORD PTR [eax-0x38],edi
  4213ac:	cdq    
  4213ad:	(bad)  
  4213ae:	sti    
  4213af:	jge    0x42138e
  4213b1:	xabort 0xb8
  4213b4:	pop    ebx
  4213b5:	mov    ebp,0x677dc804
  4213ba:	sahf   
  4213bb:	sub    eax,0x69868825
  4213c0:	rcl    DWORD PTR [ebp+eax*8-0x3524a97b],cl
  4213c7:	mov    eax,ds:0xd244171d
  4213cc:	pop    eax
  4213cd:	dec    esi
  4213ce:	shr    ch,0xa
  4213d1:	out    dx,al
  4213d2:	mov    ecx,0x2d35494e
  4213d7:	rcr    DWORD PTR [ebx],1
  4213d9:	sar    DWORD PTR [ebx+0x25],cl
  4213dc:	sbb    BYTE PTR [ebx-0x15aa1de5],0xe4
  4213e3:	enter  0x113,0xad
  4213e7:	sub    dl,bh
  4213e9:	cld    
  4213ea:	push   esp
  4213eb:	sub    al,0x7b
  4213ed:	xor    eax,0xb01b7406
  4213f2:	inc    ecx
  4213f3:	jecxz  0x421432
  4213f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213f6:	push   ss
  4213f7:	mov    ecx,0xcb31a102
  4213fc:	rcl    BYTE PTR [ebx+0x73bee993],0x11
  421403:	mov    BYTE PTR [eax],0x5
  421406:	sar    DWORD PTR [edi-0x6c],cl
  421409:	inc    ebp
  42140a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42140b:	jmp    0xc096:0xa9d87c8
  421412:	sbb    eax,0x664bb120
  421417:	mov    ch,0xb5
  421419:	int    0x35
  42141b:	sub    al,BYTE PTR [esi]
  42141d:	or     DWORD PTR [ecx],esi
  42141f:	push   cs
  421420:	(bad)
  421423:	shr    BYTE PTR [esp+ecx*2+0x6a],cl
  421427:	ficom  WORD PTR [ebx]
  421429:	pop    esp
  42142a:	into   
  42142b:	pop    ebp
  42142c:	jo     0x4213d3
  42142e:	jns    0x421442
  421430:	or     eax,0x47fa391d
  421435:	mov    ds:0xcab2f0b3,eax
  42143a:	inc    esp
  42143b:	sbb    DWORD PTR [ebp+0x1a4fde35],ecx
  421441:	push   esp
  421442:	pop    ecx
  421443:	mov    ebx,0x746b4bc1
  421448:	outs   dx,DWORD PTR ds:[esi]
  421449:	lahf   
  42144a:	sbb    BYTE PTR [ebx],bl
  42144c:	add    DWORD PTR [edx+0xc],esp
  42144f:	neg    DWORD PTR [ebx+0x4f6448e1]
  421455:	xor    DWORD PTR [ecx],ebp
  421457:	mov    bh,0xc4
  421459:	mov    ds:0xd93b02be,al
  42145e:	add    eax,0x9b1aa46b
  421463:	adc    eax,0x5ec30911
  421468:	jne    0x4214e6
  42146a:	fdiv   st(5),st
  42146c:	test   eax,0x7f1c8d51
  421471:	aaa    
  421472:	mov    al,0xcf
  421474:	lods   eax,DWORD PTR ds:[esi]
  421475:	cmp    cl,bh
  421477:	mov    bl,dl
  421479:	sub    eax,0xf49111ee
  42147e:	sub    al,0x3b
  421480:	fcom   DWORD PTR ds:0x5dbd73c3
  421486:	rcr    DWORD PTR [ecx+edi*2],cl
  421489:	addr16 dec edx
  42148b:	(bad)  
  42148c:	es mov edi,0xf7642877
  421492:	ficomp WORD PTR [ebp-0x1c]
  421495:	dec    eax
  421496:	mov    WORD PTR [edx+0xa],fs
  421499:	into   
  42149a:	jo     0x421422
  42149c:	push   edi
  42149d:	mov    bh,0xa1
  42149f:	and    al,0x32
  4214a1:	scas   al,BYTE PTR es:[edi]
  4214a2:	dec    ebp
  4214a3:	adc    ch,BYTE PTR [edx-0x4c]
  4214a6:	imul   ebx,DWORD PTR [edx+0x2a],0x7bd88603
  4214ad:	pop    ebx
  4214ae:	ss adc bh,al
  4214b1:	cmp    al,0xa1
  4214b3:	(bad)  
  4214b4:	sub    eax,0x5af43835
  4214b9:	jo     0x421445
  4214bb:	mov    edx,0x722ac62b
  4214c0:	pop    ss
  4214c1:	xchg   DWORD PTR [ebx+0x33503792],ebp
  4214c7:	retf   
  4214c8:	cmp    eax,0xbd5444e5
  4214ce:	xor    BYTE PTR [esi+0x513432d7],0x13
  4214d5:	add    al,0xf8
  4214d7:	mov    al,0xd7
  4214d9:	popf   
  4214da:	ins    BYTE PTR es:[edi],dx
  4214db:	adc    bl,cl
  4214dd:	pop    ebp
  4214de:	(bad)  
  4214df:	rol    DWORD PTR [edi+0x788add48],1
  4214e5:	push   ds
  4214e6:	sub    ebx,DWORD PTR [ecx+edx*2-0x7dc8fb]
  4214ed:	into   
  4214ee:	jmp    0x84244639
  4214f3:	std    
  4214f4:	mov    edi,0x2265260
  4214f9:	daa    
  4214fa:	loope  0x421523
  4214fc:	call   0xd198:0xab659b1d
  421503:	repnz mov edi,0x87ef17bb
  421509:	stos   BYTE PTR es:[edi],al
  42150a:	fdiv   QWORD PTR [edi+ecx*2-0x32]
  42150e:	rcr    BYTE PTR [ebp-0x6632d50],0xb8
  421515:	das    
  421516:	scas   al,BYTE PTR es:[edi]
  421517:	xchg   ecx,eax
  421518:	ficomp DWORD PTR es:[edi+0x60]
  42151c:	test   al,0xdb
  42151e:	int    0x8e
  421520:	in     al,0xc1
  421522:	pop    eax
  421523:	adc    eax,0x9e0209db
  421528:	into   
  421529:	leave  
  42152a:	nop
  42152b:	addr16 icebp 
  42152d:	test   eax,0xa3f45da8
  421532:	mov    al,0x0
  421534:	lock push ebp
  421536:	jmp    0x7e3a:0x78c3f46f
  42153d:	inc    esi
  42153e:	jmp    0x342acf23
  421543:	repz mov dl,0x7d
  421546:	or     BYTE PTR [eax],ah
  421548:	dec    esp
  421549:	fwait
  42154a:	adc    DWORD PTR [eax-0x6d],ebx
  42154d:	(bad)
  421551:	or     DWORD PTR [edi],0x72
  421554:	out    dx,al
  421555:	cmp    eax,ebp
  421557:	retf   
  421558:	ins    DWORD PTR es:[edi],dx
  421559:	xor    edx,edx
  42155b:	inc    esi
  42155c:	mov    es,WORD PTR [edx]
  42155e:	bound  esp,QWORD PTR [eax+0x3619b7e2]
  421564:	not    DWORD PTR ds:0xd4f12983
  42156a:	adc    DWORD PTR [eax+0x1d7a0853],ebx
  421570:	jg     0x421543
  421572:	mov    ebp,0xf7f5aa82
  421577:	adc    eax,0x99e75ba7
  42157c:	out    0xd9,al
  42157e:	neg    edx
  421580:	dec    edx
  421581:	lea    esi,[esi-0x1c1b22d]
  421587:	sub    BYTE PTR [eax+0x9],0x67
  42158b:	xchg   edx,eax
  42158c:	repz sub DWORD PTR ds:0xfdf2c69e,edi
  421593:	dec    eax
  421594:	push   ds
  421595:	shr    DWORD PTR [edi+0x53d5931f],1
  42159b:	ins    DWORD PTR es:[edi],dx
  42159c:	ret    0xf485
  42159f:	into   
  4215a0:	scas   eax,DWORD PTR es:[edi]
  4215a1:	icebp  
  4215a2:	and    bl,dl
  4215a4:	je     0x4215c8
  4215a6:	jo     0x4215cc
  4215a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215a9:	inc    edx
  4215aa:	ret    
  4215ab:	cs adc al,ch
  4215ae:	jnp    0x421569
  4215b0:	mov    DWORD PTR [eax+0x5],esi
  4215b3:	fisubr WORD PTR [esi-0x66]
  4215b6:	jbe    0x4215c6
  4215b8:	nop
  4215b9:	loope  0x4215ea
  4215bb:	sbb    DWORD PTR [ebp+0x762d2416],0xffffffe1
  4215c2:	sbb    al,0x7e
  4215c4:	push   0xffffff8c
  4215c6:	(bad)  
  4215c8:	ror    ch,cl
  4215ca:	sub    eax,0x6deb6d09
  4215cf:	pop    esp
  4215d0:	inc    edi
  4215d1:	cld    
  4215d2:	retf   
  4215d3:	das    
  4215d4:	jg     0x421643
  4215d6:	js     0x4215f5
  4215d8:	dec    ecx
  4215d9:	pop    ds
  4215da:	sub    edi,ecx
  4215dc:	cmp    DWORD PTR [ebx-0x7],0x548a3063
  4215e3:	inc    eax
  4215e4:	sub    DWORD PTR ds:0xfc7cecfe,0xf
  4215eb:	mov    ebp,0xb8bbcd96
  4215f0:	sub    DWORD PTR [ecx-0x50b17b4b],0x4c
  4215f7:	fidiv  WORD PTR ds:0xe4332922
  4215fd:	popa   
  4215fe:	call   0xf21ebbb5
  421603:	fist   DWORD PTR [ebx]
  421605:	push   ebp
  421606:	shl    bh,0xa
  421609:	ror    esi,0x10
  42160c:	push   esp
  42160d:	fnstsw WORD PTR [ebx-0x46f914d3]
  421613:	inc    eax
  421614:	dec    ebp
  421615:	inc    ebp
  421616:	cmp    BYTE PTR [ecx-0x6fc7496],bl
  42161c:	(bad)  
  42161e:	(bad)  
  42161f:	shl    BYTE PTR [ecx],1
  421621:	aas    
  421622:	(bad)  
  421623:	mov    dh,0x8e
  421625:	sahf   
  421626:	sar    DWORD PTR [ebx+0x7bc47c08],1
  42162c:	mov    dl,0x3d
  42162e:	mov    ebx,DWORD PTR [edx+0x5a]
  421631:	aaa    
  421632:	pop    ebx
  421633:	or     dh,BYTE PTR [ecx]
  421635:	and    BYTE PTR [edi],ch
  421637:	sub    bh,cl
  421639:	cmp    al,0x32
  42163b:	bound  ebx,QWORD PTR [edi-0x3f92da28]
  421641:	das    
  421642:	cmp    eax,esi
  421644:	mov    ecx,0x58d93d1b
  421649:	dec    ecx
  42164a:	mov    esp,0x963b2c2b
  42164f:	clc    
  421650:	rcl    DWORD PTR [edi+0x6e],cl
  421653:	or     DWORD PTR [esi],edi
  421655:	ins    BYTE PTR es:[edi],dx
  421656:	sub    al,0x46
  421658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421659:	cld    
  42165a:	sub    eax,0x97f064b7
  42165f:	lahf   
  421660:	fwait
  421661:	jmp    0xee03d2b5
  421666:	xchg   ecx,eax
  421667:	out    dx,al
  421668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421669:	jns    0x421689
  42166b:	xchg   esi,eax
  42166c:	enter  0x9e43,0xb8
  421670:	jnp    0x421696
  421672:	div    BYTE PTR [ecx]
  421674:	and    eax,0x653a7c81
  421679:	or     cl,BYTE PTR [eax]
  42167b:	jg     0x4216db
  42167d:	call   0xb53de82
  421682:	mov    ecx,0xa6b9ec2a
  421687:	popa   
  421688:	pusha  
  421689:	sbb    ebp,edx
  42168b:	adc    al,0xf8
  42168d:	xchg   ecx,eax
  42168e:	and    al,BYTE PTR [eax]
  421690:	add    BYTE PTR [eax],al
  421692:	sti    
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x58fbc1c6
  4216a1:	iret   
  4216a2:	xlat   BYTE PTR ds:[ebx]
  4216a3:	nop
  4216a4:	add    DWORD PTR [eax],eax
  4216a6:	cmc    
  4216a7:	add    al,0x0
  4216a9:	add    al,ch
  4216ab:	leave  
  4216ac:	cmp    BYTE PTR [eax+ebp*2],dh
  4216af:	cmp    al,0x4e
  4216b1:	call   0x2a37:0xafd12b87
  4216b8:	popa   
  4216b9:	nop
  4216ba:	push   ebx
  4216bb:	push   ss
  4216bc:	jb     0x42173b
  4216be:	call   0x1c6a:0x82e14c50
  4216c5:	inc    edi
  4216c6:	stc    
  4216c7:	adc    eax,edi
  4216c9:	inc    ebx
  4216ca:	hlt    
  4216cb:	out    dx,eax
  4216cc:	popf   
  4216cd:	cmc    
  4216ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216cf:	retf   0x76e5
  4216d2:	push   ebp
  4216d3:	scas   eax,DWORD PTR es:[edi]
  4216d4:	nop
  4216d5:	push   ss
  4216d6:	pop    ds
  4216d7:	rol    BYTE PTR [ecx+edi*4],1
  4216da:	out    0xf,eax
  4216dc:	xor    eax,0x56e51dc2
  4216e1:	call   0xe60f6203
  4216e6:	inc    ecx
  4216e7:	ja     0x421729
  4216e9:	call   0x64fb:0x3f339f22
  4216f0:	(bad)  
  4216f1:	cmp    BYTE PTR [edi-0x22b1530d],bl
  4216f7:	arpl   WORD PTR [esi],si
  4216f9:	mov    edi,0x10eb1426
  4216fe:	xchg   ecx,eax
  4216ff:	sar    ecx,0x96
  421702:	inc    esi
  421703:	bound  edx,QWORD PTR [eax-0x29]
  421706:	sbb    eax,0x24439ae1
  42170b:	pop    ecx
  42170c:	sbb    eax,0x49adcac2
  421711:	jmp    0x421715
  421713:	lock es inc eax
  421716:	jbe    0x4216e9
  421718:	ins    BYTE PTR es:[edi],dx
  421719:	test   eax,0x2245aeac
  42171e:	push   ebp
  42171f:	out    0x80,eax
  421721:	arpl   WORD PTR [ebx],dx
  421723:	cmp    ebx,DWORD PTR [edi]
  421725:	enter  0xb72a,0xa1
  421729:	lock retf 0xed88
  42172d:	into   
  42172e:	sbb    edx,edi
  421730:	mov    ebx,0xec779ebd
  421735:	xchg   ecx,eax
  421736:	push   ds
  421737:	ret    
  421738:	mov    edx,0xabb9870b
  42173d:	push   ecx
  42173e:	outs   dx,DWORD PTR ds:[esi]
  42173f:	mov    ds:0x4d07fb84,al
  421744:	mov    al,ds:0xfbe4b388
  421749:	add    DWORD PTR [eax],edx
  42174b:	jp     0x42176b
  42174d:	aaa    
  42174e:	xchg   DWORD PTR ds:0xe1bd31c2,edx
  421754:	out    dx,al
  421755:	call   0x6154:0xe7fa3bf
  42175c:	pop    ss
  42175d:	out    0xdb,al
  42175f:	sub    al,0x6b
  421761:	sar    dl,cl
  421763:	fwait
  421764:	dec    ecx
  421765:	call   esi
  421767:	lods   al,BYTE PTR fs:[esi]
  421769:	inc    edi
  42176a:	pop    edi
  42176b:	neg    dh
  42176d:	inc    ecx
  42176e:	add    edx,DWORD PTR ds:0xb056ca69
  421774:	fld    TBYTE PTR [ecx]
  421776:	mov    ss,WORD PTR [ecx+ebp*8+0x732d4dd1]
  42177d:	outs   dx,DWORD PTR ds:[esi]
  42177e:	or     eax,0xeb3c71f1
  421783:	sbb    BYTE PTR [ebx+0x215ff9b4],0x93
  42178a:	loope  0x42171c
  42178c:	loopne 0x4217f7
  42178e:	add    eax,0xfd32607
  421793:	xchg   edx,eax
  421794:	xchg   ebx,eax
  421795:	xchg   edi,eax
  421796:	mov    esi,0x758474d7
  42179b:	push   ebx
  42179c:	in     al,dx
  42179d:	mov    dh,0x3a
  42179f:	jnp    0x42176e
  4217a1:	and    ch,cl
  4217a3:	pop    ss
  4217a4:	add    ch,ah
  4217a6:	daa    
  4217a7:	cmp    BYTE PTR [ebx+0x32aa333e],dl
  4217ad:	and    bh,BYTE PTR [edi-0x74]
  4217b0:	push   ds
  4217b1:	jg     0x42175a
  4217b3:	dec    ecx
  4217b4:	add    al,0x2c
  4217b6:	push   ecx
  4217b7:	mov    esi,eax
  4217b9:	cmp    esp,ebp
  4217bb:	mov    ecx,0xbbba2912
  4217c0:	cmp    al,0xbc
  4217c2:	mov    ds:0xc54dcf7a,eax
  4217c7:	mov    eax,DWORD PTR [eax-0x7e972d9]
  4217cd:	sub    bl,bl
  4217cf:	push   ss
  4217d0:	sbb    eax,0x6fbf00d3
  4217d5:	faddp  st(1),st
  4217d7:	or     ecx,DWORD PTR [ecx+0x38380496]
  4217dd:	lea    ebp,[ebx]
  4217df:	mov    ebp,0x642bdce8
  4217e4:	fcomp  QWORD PTR [esi+0x23c824fa]
  4217ea:	and    eax,0xf1d9830c
  4217ef:	ror    BYTE PTR [esi+0x5e],1
  4217f2:	or     BYTE PTR [edx+0x6],ch
  4217f5:	mov    dh,0x21
  4217f7:	mov    dl,0xf4
  4217f9:	hlt    
  4217fa:	pop    ebx
  4217fb:	xor    eax,0x2437df72
  421800:	test   BYTE PTR [ebx],0x46
  421803:	stos   BYTE PTR es:[edi],al
  421804:	leave  
  421805:	out    0x69,al
  421807:	sbb    eax,0x7a1bf
  42180c:	fisttp QWORD PTR [eax+0x49]
  42180f:	dec    eax
  421810:	cli    
  421811:	outs   dx,BYTE PTR ds:[esi]
  421812:	jae    0x4217ca
  421814:	xor    DWORD PTR [edx],ebp
  421816:	in     al,0x41
  421818:	mov    BYTE PTR [esi],dl
  42181a:	pcmpgtw mm3,QWORD PTR [ebx-0x74]
  42181e:	(bad)  
  42181f:	cmp    edi,DWORD PTR [esi]
  421821:	add    bl,BYTE PTR [eax]
  421823:	and    BYTE PTR [ebx+eiz*8+0x5ede896d],bh
  42182a:	call   0xb943:0x2cccafa
  421831:	lea    ebx,[ecx+0x69]
  421834:	push   ebp
  421835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421836:	push   ebp
  421837:	jne    0x4217db
  421839:	inc    edx
  42183a:	fnstsw WORD PTR [esp+eax*8]
  42183d:	jmp    0xb9d0bd68
  421842:	and    eax,0xea15edf4
  421847:	jmp    0xf11c73a5
  42184c:	je     0x4217d8
  42184e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42184f:	js     0x421863
  421851:	sbb    ah,dh
  421853:	and    al,0x4b
  421855:	xor    al,0x8f
  421857:	push   edi
  421858:	cmp    cl,BYTE PTR [ecx]
  42185a:	or     ebp,DWORD PTR [ebp-0x74]
  42185d:	retf   
  42185e:	inc    edx
  42185f:	xchg   esi,eax
  421860:	push   ebp
  421862:	dec    esi
  421863:	dec    esi
  421864:	push   cs
  421865:	ins    BYTE PTR es:[edi],dx
  421866:	and    eax,0xd23234a4
  42186b:	inc    ebp
  42186c:	or     eax,esp
  42186e:	test   BYTE PTR [eax+esi*4-0x38],0xe2
  421873:	push   es
  421874:	sbb    al,BYTE PTR [eax+edx*8+0x18dbbf75]
  42187b:	xor    al,0x50
  42187d:	sub    al,0xcc
  42187f:	retf   
  421880:	add    esi,DWORD PTR [edi-0x58]
  421883:	popf   
  421884:	lds    ecx,FWORD PTR [eax-0x2202691]
  42188a:	push   esp
  42188b:	popa   
  42188c:	cmp    al,0x9e
  42188e:	dec    ecx
  42188f:	pop    ebx
  421890:	cmp    edx,DWORD PTR [edi]
  421892:	imul   esp,DWORD PTR [esi-0x45],0x6ca4b331
  421899:	push   ecx
  42189a:	adc    al,0x81
  42189c:	scas   al,BYTE PTR es:[edi]
  42189d:	push   edi
  42189e:	xchg   DWORD PTR ds:0x9f662d1b,edi
  4218a4:	fadd   QWORD PTR [ebx]
  4218a6:	adc    edi,eax
  4218a8:	in     al,dx
  4218a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218aa:	add    ebx,DWORD PTR es:[edi-0x11afbd23]
  4218b1:	iret   
  4218b2:	sub    eax,0xe630d736
  4218b7:	xchg   ebx,eax
  4218b8:	and    ah,BYTE PTR [edx+0x25]
  4218bb:	frstor [edi]
  4218bd:	push   eax
  4218be:	pop    ss
  4218bf:	shl    DWORD PTR [ebx+0x69],cl
  4218c2:	cmp    dl,BYTE PTR [eax]
  4218c4:	xor    ebp,ebp
  4218c6:	cmp    al,dl
  4218c8:	scas   al,BYTE PTR es:[edi]
  4218c9:	dec    edx
  4218ca:	ror    BYTE PTR [eax+0x79],0xe5
  4218ce:	in     eax,0xbe
  4218d0:	mov    ebx,0x47691c65
  4218d5:	cmc    
  4218d6:	or     al,0x6d
  4218d8:	mov    ds:0x6940081,eax
  4218dd:	pop    ds
  4218de:	push   0x9b496f98
  4218e3:	mov    bh,0xe4
  4218e5:	push   es
  4218e6:	jle    0x421923
  4218e8:	cmc    
  4218e9:	jo     0x4218b9
  4218eb:	ss jp  0x4218fb
  4218ee:	mov    ah,0xe5
  4218f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218f1:	sub    ebp,DWORD PTR [edx+0x55]
  4218f4:	pop    ss
  4218f5:	sbb    eax,0xed130cc1
  4218fa:	ins    DWORD PTR es:[edi],dx
  4218fb:	sbb    al,dh
  4218fd:	inc    eax
  4218fe:	and    ebx,ebp
  421900:	jnp    0x4218ee
  421902:	push   edi
  421903:	std    
  421904:	pop    esp
  421905:	dec    ax
  421907:	xchg   ebp,eax
  421908:	ds jns 0x421953
  42190b:	(bad)  [edx-0x33]
  42190e:	xor    eax,0xda4241e2
  421913:	test   edi,0xf5381928
  421919:	mov    DWORD PTR [edi-0x6a],esi
  42191c:	push   0xc29738f
  421921:	mov    ah,0x95
  421923:	pop    ss
  421924:	ins    DWORD PTR es:[edi],dx
  421925:	dec    ecx
  421926:	mov    ah,0xd0
  421928:	out    dx,eax
  421929:	pushf  
  42192a:	push   eax
  42192b:	or     ecx,DWORD PTR [edx+0x3dca4bc7]
  421931:	lods   eax,DWORD PTR ds:[esi]
  421932:	(bad)  [edx-0x101c548b]
  421938:	jl     0x421999
  42193a:	push   edx
  42193b:	les    ebp,FWORD PTR [edi+0x11508ec7]
  421941:	push   esp
  421942:	and    BYTE PTR cs:[eax],dh
  421945:	out    dx,al
  421946:	sub    DWORD PTR ds:[edi-0x463da5f4],ebx
  42194d:	push   ds
  42194e:	mov    dh,0x3b
  421950:	mov    DWORD PTR [ecx-0x5f],ebx
  421953:	push   cs
  421954:	add    al,BYTE PTR [ebx]
  421956:	imul   ebp,DWORD PTR [ecx-0xc],0x14
  42195a:	cmp    cl,bh
  42195c:	xchg   ebp,eax
  42195d:	pop    ss
  42195e:	out    0x9e,al
  421960:	xchg   edi,eax
  421961:	jle    0x42195c
  421963:	or     al,BYTE PTR ds:0x1411bab5
  421969:	xchg   esi,eax
  42196a:	pop    esp
  42196b:	ret    
  42196c:	adc    BYTE PTR [edx],ch
  42196e:	mov    bh,0xa1
  421970:	icebp  
  421971:	clc    
  421972:	xor    ebx,ebx
  421974:	ja     0x42190e
  421976:	mov    ch,0x3d
  421978:	fdiv   QWORD PTR [esi+0x1f86167b]
  42197e:	ret    
  42197f:	lods   eax,DWORD PTR ds:[esi]
  421980:	xor    BYTE PTR [eax],bh
  421982:	pop    ss
  421983:	out    0x51,al
  421985:	or     eax,DWORD PTR [eax]
  421987:	push   edx
  421988:	push   edx
  421989:	imul   esi,DWORD PTR [edx+ecx*1],0x5bf86a94
  421990:	es push ecx
  421992:	xor    BYTE PTR [esi],ah
  421994:	mov    dh,0x1
  421996:	iret   
  421997:	ss push 0x36
  42199a:	sar    DWORD PTR [eax],cl
  42199c:	dec    ecx
  42199d:	xor    DWORD PTR ds:0x28819b23,esi
  4219a3:	sbb    eax,0x4fcfda64
  4219a8:	add    dh,0x85
  4219ab:	adc    al,0xc2
  4219ae:	sub    dl,BYTE PTR [esi]
  4219b0:	ss out dx,eax
  4219b2:	sub    ah,BYTE PTR [edx+0x4]
  4219b5:	push   es
  4219b6:	mov    edx,0x6327fb96
  4219bb:	out    0x0,al
  4219bd:	xor    al,cl
  4219bf:	icebp  
  4219c0:	sub    DWORD PTR [ecx+0x70],edi
  4219c3:	fbld   TBYTE PTR [edx]
  4219c5:	std    
  4219c6:	jecxz  0x4219df
  4219c8:	mov    ebx,cs
  4219ca:	push   ecx
  4219cb:	cs jmp 0xd454e8db
  4219d1:	and    ah,BYTE PTR [esp+eiz*2]
  4219d4:	dec    edx
  4219d5:	lods   al,BYTE PTR ds:[esi]
  4219d6:	icebp  
  4219d7:	and    BYTE PTR [edi+ebx*2-0x4e],0x18
  4219dc:	mov    bl,0x8e
  4219de:	iret   
  4219df:	xchg   DWORD PTR [edx+ebp*2-0x322fd9d5],edx
  4219e6:	int3   
  4219e7:	mov    al,ds:0x4af3ded7
  4219ec:	dec    edi
  4219ed:	sub    ebx,DWORD PTR [edi+eiz*4]
  4219f0:	add    dh,BYTE PTR [ecx+0x66]
  4219f3:	or     BYTE PTR [edx+0x7b],al
  4219f6:	mov    dl,BYTE PTR [esp+ebp*1]
  4219f9:	jns    0x42199a
  4219fb:	ret    0xb470
  4219fe:	adc    al,0x93
  421a00:	stos   BYTE PTR es:[edi],al
  421a01:	push   ss
  421a02:	mov    al,ds:0xae74b406
  421a07:	mov    cl,0x4c
  421a09:	repz mov ebx,0x2218fd13
  421a0f:	ss jae 0x421a23
  421a12:	pop    esp
  421a13:	pop    eax
  421a14:	mov    eax,0xeeb64d9f
  421a19:	iret   
  421a1a:	call   DWORD PTR [eax]
  421a1c:	ficomp WORD PTR [edx]
  421a1e:	pop    ss
  421a1f:	jmp    0xca18:0xf1ee601
  421a26:	xchg   edx,eax
  421a27:	and    dl,cl
  421a29:	mov    sp,0xde26
  421a2d:	sti    
  421a2e:	mov    al,ds:0x788bd5ed
  421a33:	pop    ss
  421a34:	jne    0x421a77
  421a36:	fcomp  st(4)
  421a38:	cmp    al,bl
  421a3a:	jmp    0x3464:0xf6356446
  421a41:	ss push 0x49
  421a44:	dec    esi
  421a45:	xor    bh,dh
  421a47:	outs   dx,DWORD PTR ds:[esi]
  421a48:	xchg   edi,eax
  421a49:	adc    eax,0xa1b1e044
  421a4e:	mov    dh,0x8
  421a50:	mov    WORD PTR [ecx],es
  421a52:	jl     0x421aa4
  421a54:	enter  0x110e,0x1
  421a58:	jmp    FWORD PTR [ecx+0x4eb8c8ee]
  421a5e:	pop    edx
  421a5f:	add    al,0xe5
  421a61:	xor    ebp,edx
  421a63:	je     0x421a6b
  421a65:	stos   BYTE PTR es:[edi],al
  421a66:	aas    
  421a67:	aas    
  421a68:	ficomp DWORD PTR [esi]
  421a6a:	mov    esp,0x223e0196
  421a6f:	and    al,BYTE PTR [ebx+0x6ad75d94]
  421a75:	mov    ecx,0x132d1dc5
  421a7a:	sbb    ah,0xfa
  421a7d:	jmp    0xe4b8:0xb19560b
  421a84:	cmp    al,0x7e
  421a86:	mov    bh,0xaf
  421a88:	inc    ecx
  421a89:	mov    WORD PTR [edi+0x5b7fa11b],fs
  421a8f:	stos   BYTE PTR es:[edi],al
  421a90:	add    DWORD PTR [eax+0x6a],0x17a7f61
  421a97:	in     al,0x22
  421a99:	push   ebp
  421a9a:	arpl   WORD PTR [esi+0x5],bx
  421a9d:	fiadd  WORD PTR [ebp+0x68]
  421aa0:	scas   al,BYTE PTR es:[edi]
  421aa1:	sub    eax,0x63df0da2
  421aa6:	and    ebx,eax
  421aa8:	aam    0xc4
  421aaa:	stos   DWORD PTR es:[edi],eax
  421aab:	lahf   
  421aac:	(bad)  
  421aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aae:	ror    ebp,1
  421ab0:	popa   
  421ab1:	fld    TBYTE PTR ds:0x5741b8ea
  421ab7:	aad    0xaa
  421ab9:	sbb    edi,DWORD PTR [ebp+0x689e127b]
  421abf:	mov    es,ebx
  421ac1:	rcr    BYTE PTR [ecx-0x632d03ce],0xb7
  421ac8:	clc    
  421ac9:	lea    eax,[edx-0x5ad92bf1]
  421acf:	dec    ebx
  421ad0:	mov    BYTE PTR [eax-0x2e],ah
  421ad3:	inc    eax
  421ad4:	fdivr  st,st(6)
  421ad6:	inc    esp
  421ad7:	ss pop edi
  421ad9:	sbb    DWORD PTR [ecx],eax
  421adb:	nop
  421adc:	ficom  WORD PTR [ecx+0x6c]
  421adf:	fmul   DWORD PTR [eax]
  421ae1:	sub    DWORD PTR [edx],eax
  421ae3:	out    dx,eax
  421ae4:	sbb    eax,0xd6ae3280
  421ae9:	popw   ss
  421aeb:	retf   0x71e
  421aee:	mov    ebx,gs
  421af0:	xchg   ebx,eax
  421af1:	repz fdiv st,st(3)
  421af4:	cmp    BYTE PTR [edi-0x4ef24b10],ah
  421afa:	imul   edx,DWORD PTR [edx+eiz*1],0x51
  421afe:	pop    ebp
  421aff:	jne    0x421ad0
  421b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b02:	ss push ecx
  421b04:	fcom   DWORD PTR [eax]
  421b06:	xlat   BYTE PTR ds:[ebx]
  421b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b08:	or     DWORD PTR [ecx],0xffffffde
  421b0b:	aad    0x83
  421b0d:	or     al,0x7d
  421b0f:	out    0x9c,eax
  421b11:	mov    esp,0xc312a256
  421b16:	cmp    ebx,DWORD PTR [eax+edx*1-0x7f485f6a]
  421b1d:	dec    ebp
  421b1e:	ret    0xf6d8
  421b21:	out    dx,eax
  421b22:	jne    0x421aba
  421b24:	cmp    ecx,DWORD PTR [ecx]
  421b26:	mov    ecx,0x66daa386
  421b2b:	inc    ecx
  421b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b2d:	mov    ds:0x925d1747,al
  421b32:	pop    ss
  421b33:	mov    eax,ds:0xf765f418
  421b38:	xor    ch,BYTE PTR [eax]
  421b3a:	and    dh,BYTE PTR [ebx+esi*4-0x3d]
  421b3e:	scas   al,BYTE PTR es:[edi]
  421b3f:	jge    0x421ae4
  421b41:	sbb    ecx,esi
  421b43:	mov    ds:0xf354760b,eax
  421b48:	inc    ebx
  421b49:	into   
  421b4a:	jle    0x421ba6
  421b4c:	fisubr DWORD PTR [esi+0xbf0c4fb]
  421b52:	add    cl,BYTE PTR [edi+0x4a]
  421b55:	cmp    bl,BYTE PTR [ebx+0x1fb26788]
  421b5b:	or     DWORD PTR [edi+0x1a],ebx
  421b5e:	mov    ch,BYTE PTR [esi]
  421b60:	sahf   
  421b61:	dec    edx
  421b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b63:	xor    DWORD PTR [eax+0x4d],esi
  421b66:	adc    eax,DWORD PTR [esi-0x24]
  421b69:	inc    ecx
  421b6a:	sub    esp,ebp
  421b6c:	mov    ebp,0xfa99098a
  421b71:	int    0x60
  421b73:	pop    es
  421b74:	jge    0x421b99
  421b76:	jb     0x421b08
  421b78:	xchg   edx,eax
  421b79:	rcl    BYTE PTR [ecx+0x3e70ce75],cl
  421b7f:	inc    edi
  421b80:	cwde   
  421b81:	mov    ebp,0xb9472fda
  421b86:	add    al,0x36
  421b88:	jmp    0x421b36
  421b8a:	inc    eax
  421b8b:	les    ebp,FWORD PTR gs:0x2a63499a
  421b92:	(bad)  
  421b93:	out    0x5b,al
  421b95:	hlt    
  421b96:	mov    eax,ds:0x975072ec
  421b9b:	adc    al,0x3
  421b9d:	mov    ch,0x40
  421b9f:	add    BYTE PTR [eax],al
  421ba1:	add    BYTE PTR [ebx],bl
  421ba3:	mov    esi,0xdaef9aee
  421ba8:	jg     0x421b69
  421baa:	call   0x26d3:0xbb770da0
  421bb1:	or     ah,cl
  421bb3:	xchg   ebp,eax
  421bb4:	add    DWORD PTR [eax],eax
  421bb6:	cmc    
  421bb7:	add    al,0x0
  421bb9:	add    BYTE PTR [edx],al
  421bbb:	jge    0x421bdf
  421bbd:	jno    0x421beb
  421bbf:	popa   
  421bc0:	ret    0x28de
  421bc3:	pop    eax
  421bc4:	fdiv   st,st(2)
  421bc6:	lods   eax,DWORD PTR ds:[esi]
  421bc7:	adc    ebx,edx
  421bc9:	pushf  
  421bca:	ret    
  421bcb:	mov    bl,0xe2
  421bcd:	les    edi,FWORD PTR [ecx-0x8]
  421bd0:	xor    BYTE PTR [edi-0x2d6b1b75],bh
  421bd6:	mov    ecx,ebx
  421bd8:	int    0xb1
  421bda:	mov    ecx,0x3c185b82
  421bdf:	sbb    ebx,0x77eec6c3
  421be5:	xor    eax,0xf81a945
  421bea:	jmp    0x57ac8335
  421bef:	(bad)  
  421bf0:	xchg   ebx,eax
  421bf1:	lds    edx,FWORD PTR [esi]
  421bf3:	cld    
  421bf4:	(bad)  
  421bf5:	retf   
  421bf6:	jle    0x421bc2
  421bf8:	rcl    BYTE PTR [ebx-0x5f0b6837],cl
  421bfe:	sub    al,0x3c
  421c00:	xor    al,0xa5
  421c02:	or     eax,0x2e873afd
  421c07:	xor    ebx,DWORD PTR [ebx]
  421c09:	ret    
  421c0a:	xor    DWORD PTR [edi+0x7c9ef77a],edx
  421c10:	aas    
  421c11:	mov    ebx,ebx
  421c13:	xor    al,0x39
  421c15:	inc    esp
  421c16:	lea    ecx,[esi]
  421c18:	fs stos DWORD PTR es:[edi],eax
  421c1a:	neg    eax
  421c1c:	int    0xac
  421c1e:	mov    gs,WORD PTR [edx-0x58]
  421c21:	inc    esi
  421c22:	dec    edx
  421c23:	inc    edx
  421c24:	in     al,dx
  421c25:	(bad)  
  421c26:	out    0xb7,eax
  421c28:	(bad)  
  421c2a:	and    cl,ch
  421c2c:	(bad)  
  421c2e:	inc    esi
  421c2f:	dec    edx
  421c30:	outs   dx,DWORD PTR ds:[esi]
  421c31:	pop    ds
  421c32:	mov    edi,DWORD PTR [edi]
  421c34:	fidiv  DWORD PTR [ecx+0x3c3aae84]
  421c3a:	mov    ?,WORD PTR [ecx+0x16]
  421c3d:	sar    DWORD PTR [ecx+0x9],cl
  421c40:	inc    eax
  421c41:	into   
  421c42:	fdiv   QWORD PTR [ebx+0x25]
  421c45:	icebp  
  421c46:	shr    BYTE PTR [esi-0x1bc775d3],cl
  421c4c:	ficom  DWORD PTR [edx-0x67b76efc]
  421c52:	enter  0x39c2,0xc3
  421c56:	jae    0x421cd1
  421c58:	mov    eax,0x8b4b4236
  421c5d:	push   ebx
  421c5e:	(bad)  
  421c5f:	in     eax,0x3
  421c61:	das    
  421c62:	sub    DWORD PTR [ebx-0x541ede61],ecx
  421c68:	das    
  421c69:	pop    ecx
  421c6a:	outs   dx,DWORD PTR ds:[esi]
  421c6b:	or     ch,BYTE PTR [ecx-0x63512d07]
  421c71:	dec    ecx
  421c72:	fs jno 0x421c26
  421c75:	mov    edi,0x221be4b0
  421c7a:	jbe    0x421c14
  421c7c:	mov    ecx,DWORD PTR [esi-0x2e]
  421c7f:	pop    eax
  421c80:	xor    BYTE PTR [ebx-0x6a7a1ff3],ch
  421c86:	cwde   
  421c87:	inc    esi
  421c88:	scas   al,BYTE PTR es:[edi]
  421c89:	int3   
  421c8a:	pusha  
  421c8b:	mov    bl,0xc5
  421c8d:	inc    ebp
  421c8e:	adc    al,0x6e
  421c90:	js     0x421c32
  421c92:	fsubr  QWORD PTR [ebx]
  421c94:	xor    DWORD PTR [esi+0xd],ecx
  421c97:	and    DWORD PTR [edi-0x41044fa6],edx
  421c9d:	ror    DWORD PTR es:[eax],1
  421ca0:	jne    0x421cf9
  421ca2:	rcr    DWORD PTR [esp+ecx*2],cl
  421ca5:	fsub   QWORD PTR [edx+edi*2-0x243db363]
  421cac:	mov    ecx,0xb9d71154
  421cb1:	(bad)  
  421cb2:	test   eax,0x112e0313
  421cb7:	xchg   ecx,eax
  421cb8:	cmp    BYTE PTR [ebp+0x6c],dl
  421cbb:	xchg   ebx,eax
  421cbc:	es push 0xffffff92
  421cbf:	mov    esp,0x1a2024d7
  421cc4:	mov    bl,0x3
  421cc6:	jno    0x421cc6
  421cc8:	mov    fs,WORD PTR [ecx-0x1941f544]
  421cce:	fimul  WORD PTR [ecx-0x42]
  421cd1:	ret    0xba5c
  421cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cd5:	sbb    ebx,ebx
  421cd7:	add    eax,0x220c9953
  421cdc:	push   edi
  421cdd:	in     al,dx
  421cde:	stos   DWORD PTR es:[edi],eax
  421cdf:	inc    esi
  421ce0:	cmp    al,0x9
  421ce2:	in     al,0xa9
  421ce4:	pop    esp
  421ce5:	mov    ah,0x89
  421ce7:	in     eax,0x65
  421ce9:	inc    esp
  421cea:	xchg   ebp,eax
  421ceb:	outs   dx,DWORD PTR ds:[esi]
  421cec:	js     0x421d21
  421cee:	or     BYTE PTR [ebx+0x60],al
  421cf1:	jge    0x421d21
  421cf3:	in     eax,dx
  421cf4:	mov    bh,dh
  421cf6:	pop    edi
  421cf7:	inc    ebp
  421cf8:	mov    dh,BYTE PTR [esi-0x56]
  421cfb:	idiv   DWORD PTR [edi+eax*2+0x11]
  421cff:	in     al,dx
  421d00:	(bad)  
  421d01:	adc    al,0xa4
  421d03:	mov    ch,0x32
  421d05:	ficomp DWORD PTR [eax+0x61aedc10]
  421d0b:	mov    bh,0xa5
  421d0d:	ins    DWORD PTR es:[edi],dx
  421d0e:	imul   edx,DWORD PTR [ecx],0xffffff87
  421d11:	jae    0x421cb4
  421d13:	mov    bl,0x40
  421d15:	pop    ss
  421d16:	ret    0xb3a5
  421d19:	cmp    dh,BYTE PTR [ebx+esi*2+0x59a12c7b]
  421d20:	mov    esp,0x7689807e
  421d25:	test   BYTE PTR [esi-0x37],cl
  421d28:	jmp    0xaaba:0xf11d939d
  421d2f:	ret    0x8738
  421d32:	cwde   
  421d33:	push   ebx
  421d34:	lahf   
  421d35:	xchg   esi,eax
  421d36:	int    0x76
  421d38:	cmp    DWORD PTR [ecx+0x34fdf6b0],ebp
  421d3e:	sub    dh,BYTE PTR [ebp+0x11]
  421d41:	inc    ebp
  421d42:	and    dl,cl
  421d44:	test   BYTE PTR [edi+esi*8],0x9f
  421d48:	push   edi
  421d49:	or     BYTE PTR [esi+0x65],0xbc
  421d4d:	das    
  421d4e:	xchg   edi,eax
  421d4f:	into   
  421d50:	xchg   ebp,eax
  421d51:	cmp    al,BYTE PTR [ebp+0x1d]
  421d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d55:	outs   dx,BYTE PTR ds:[esi]
  421d56:	add    eax,0xa0f2cb26
  421d5b:	adc    eax,0x1f50d92a
  421d60:	in     eax,dx
  421d61:	jmp    0x872913fb
  421d66:	stos   DWORD PTR es:[edi],eax
  421d67:	pop    esp
  421d68:	pop    edi
  421d69:	out    dx,eax
  421d6a:	scas   eax,DWORD PTR es:[edi]
  421d6b:	adc    ah,BYTE PTR [edi+0x6d48b580]
  421d71:	imul   ebx,DWORD PTR [eax-0x6a],0xffffffec
  421d75:	mov    edx,0x1bd2929b
  421d7a:	fstp   TBYTE PTR [ebx]
  421d7c:	outs   dx,DWORD PTR ds:[esi]
  421d7d:	push   edi
  421d7e:	lds    edx,FWORD PTR [ebx+0x28]
  421d81:	pop    ecx
  421d82:	daa    
  421d83:	test   DWORD PTR [ebp-0xd],ebx
  421d86:	sub    BYTE PTR [ebx],dh
  421d88:	sub    BYTE PTR [eax-0x4c],0x6a
  421d8c:	fnstenv [ebx]
  421d8e:	test   eax,0x317590ce
  421d93:	sbb    ebx,DWORD PTR ds:0x3251ca
  421d99:	call   DWORD PTR [edx-0x72]
  421d9c:	mov    al,0xd1
  421d9e:	mov    BYTE PTR [ebp+0x2f],dl
  421da1:	pop    es
  421da2:	es jb  0x421d68
  421da5:	push   ebp
  421da6:	ds mov edi,0x85b5f429
  421dac:	adc    ebx,DWORD PTR [esi+eax*2-0x19]
  421db0:	push   0x50
  421db2:	add    al,0xcc
  421db4:	popa   
  421db5:	ret    0x7018
  421db8:	paddw  mm7,mm7
  421dbb:	outs   dx,BYTE PTR ds:[esi]
  421dbc:	aas    
  421dbd:	mov    ebx,0xcc0e4ff7
  421dc2:	push   ebp
  421dc3:	je     0x421dd0
  421dc5:	(bad)  
  421dc6:	xchg   esi,eax
  421dc7:	test   eax,esi
  421dc9:	inc    ebp
  421dca:	add    ecx,DWORD PTR [edx-0x35]
  421dcd:	ins    BYTE PTR es:[edi],dx
  421dce:	daa    
  421dcf:	jecxz  0x421d51
  421dd1:	mov    al,0xf6
  421dd3:	push   edi
  421dd4:	or     BYTE PTR [edx-0x54],dl
  421dd7:	int    0xe6
  421dd9:	fucomp st(5)
  421ddb:	xchg   ebp,eax
  421ddc:	mov    eax,0xa62b8fa8
  421de1:	aaa    
  421de2:	fcmovnbe st,st(1)
  421de4:	adc    BYTE PTR [ebx-0x5f],ah
  421de7:	in     eax,0x55
  421de9:	adc    DWORD PTR [ebx],0xa6de7ce0
  421def:	mov    eax,ds:0xab5d86a9
  421df4:	mov    DWORD PTR [edi+0x48],esp
  421df7:	in     al,dx
  421df8:	mov    al,0x23
  421dfa:	call   FWORD PTR [esi*4+0x3855e567]
  421e01:	push   edi
  421e02:	(bad)  
  421e03:	mov    ah,0x6a
  421e05:	add    BYTE PTR [ecx+0x6c],ch
  421e08:	jge    0x421dea
  421e0a:	fs mov bh,0x8c
  421e0d:	inc    esi
  421e0e:	or     dl,BYTE PTR [edx]
  421e10:	jo     0x421d94
  421e12:	xor    esi,DWORD PTR [ecx]
  421e14:	sahf   
  421e15:	mov    eax,DWORD PTR [esi+0x3740f689]
  421e1b:	(bad)  
  421e1c:	std    
  421e1d:	mov    ebp,0x254d8855
  421e22:	adc    DWORD PTR [esi],esi
  421e24:	fbld   TBYTE PTR [esi-0x73]
  421e27:	ss imul esi,esp,0x22
  421e2b:	xor    eax,0xd19f0fbe
  421e30:	mov    bh,0xd2
  421e32:	push   es
  421e33:	cmp    esi,esi
  421e35:	xor    al,0x5f
  421e37:	dec    esi
  421e38:	cwde   
  421e39:	dec    edx
  421e3a:	ja     0x421dcc
  421e3c:	ret    
  421e3d:	or     cl,BYTE PTR gs:[edi+ebp*4]
  421e41:	scas   al,BYTE PTR es:[edi]
  421e42:	sub    cl,cl
  421e44:	stos   DWORD PTR es:[edi],eax
  421e45:	xchg   ecx,eax
  421e46:	test   al,0xd7
  421e48:	fyl2x  
  421e4a:	inc    ecx
  421e4b:	sti    
  421e4c:	mov    WORD PTR ds:0x26dd9453,fs
  421e52:	jb     0x421e47
  421e54:	jp     0x421e91
  421e56:	mov    ds:0x3a26b7bc,eax
  421e5b:	xlat   BYTE PTR gs:[ebx]
  421e5d:	add    al,0x8f
  421e5f:	sub    edi,DWORD PTR [eax-0x71]
  421e62:	ss gs into 
  421e65:	mov    ecx,0xac60058a
  421e6a:	sbb    dh,ah
  421e6c:	mov    ebp,es
  421e6e:	dec    esi
  421e6f:	mov    bl,0x42
  421e71:	scas   al,BYTE PTR es:[edi]
  421e72:	dec    ecx
  421e73:	pop    ds
  421e74:	xor    DWORD PTR [ecx],ebp
  421e76:	cld    
  421e77:	stc    
  421e78:	pop    ecx
  421e79:	shl    esp,cl
  421e7b:	mov    esp,0xb981f0b6
  421e80:	or     BYTE PTR [ebx],ch
  421e82:	sub    eax,0x2f08bd6c
  421e87:	pop    edi
  421e88:	xchg   DWORD PTR [ebx-0x71],ebx
  421e8b:	mov    al,0x69
  421e8d:	xor    DWORD PTR [ecx+0x38aec523],ecx
  421e93:	rol    DWORD PTR [esi-0x5b],1
  421e96:	push   esp
  421e97:	enter  0x3644,0x9c
  421e9b:	test   al,0x48
  421e9d:	fdivr  QWORD PTR [edi+0x313a7d51]
  421ea3:	jle    0x421e4f
  421ea5:	je     0x421edf
  421ea7:	pop    edx
  421ea8:	mov    ecx,0x7a148905
  421ead:	and    eax,0x702e31
  421eb2:	dec    esi
  421eb3:	aad    0xd5
  421eb5:	repnz push esp
  421eb7:	xchg   ebx,eax
  421eb8:	(bad)  
  421eb9:	data16 loopne 0x421ee1
  421ebc:	(bad)  [ecx]
  421ebe:	xor    bl,BYTE PTR [edx-0x223d9a3b]
  421ec4:	shl    DWORD PTR [edx+0x24],1
  421ec7:	xchg   ebx,eax
  421ec8:	add    eax,esp
  421eca:	sbb    ah,BYTE PTR [ecx-0x27]
  421ecd:	jge    0x421eb2
  421ecf:	cmc    
  421ed0:	dec    esp
  421ed1:	or     eax,0xc00e9280
  421ed6:	and    esp,DWORD PTR [ecx]
  421ed8:	add    eax,DWORD PTR [edx-0x9]
  421edb:	pop    ebp
  421edc:	addr16 cmp ebp,ebx
  421edf:	fs dec edx
  421ee1:	mov    eax,0xc966d66d
  421ee6:	pop    edx
  421ee7:	or     BYTE PTR [ebp*8+0x39d0d293],dl
  421eee:	xchg   esi,eax
  421eef:	cmp    eax,edx
  421ef1:	push   eax
  421ef2:	ret    0x6b89
  421ef5:	jge    0x421e90
  421ef7:	mov    BYTE PTR [edx+0x8d60e6a],0x6f
  421efe:	stc    
  421eff:	pop    edi
  421f00:	fld    DWORD PTR [ebx-0x21a75649]
  421f06:	mov    ds:0xc84b6fc9,eax
  421f0b:	sbb    al,0x7d
  421f0d:	and    eax,0x819d4da9
  421f12:	daa    
  421f13:	mov    ecx,0x5171535b
  421f18:	ins    DWORD PTR es:[edi],dx
  421f19:	mov    cl,0xd1
  421f1b:	dec    edx
  421f1c:	jns    0x421f17
  421f1e:	aaa    
  421f1f:	sahf   
  421f20:	push   esp
  421f21:	out    dx,al
  421f22:	cmp    DWORD PTR [ebp-0x13],esi
  421f25:	dec    esi
  421f26:	jp     0x421f01
  421f28:	sub    ah,BYTE PTR [ecx]
  421f2a:	fld    QWORD PTR [ecx]
  421f2c:	into   
  421f2d:	push   ecx
  421f2e:	mov    edi,0x68c10dc3
  421f33:	inc    edx
  421f34:	out    dx,eax
  421f35:	dec    ebp
  421f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f37:	cwde   
  421f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f39:	adc    al,0xdc
  421f3b:	jo     0x421ed4
  421f3d:	rcr    BYTE PTR es:[bx-0x71],0xc7
  421f43:	stc    
  421f44:	adc    al,0xb6
  421f46:	dec    ebp
  421f47:	sar    BYTE PTR [edi-0x60bf30a5],1
  421f4d:	aad    0x2c
  421f4f:	jmp    0x421f77
  421f51:	clc    
  421f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f53:	in     al,0x1e
  421f55:	push   cs
  421f56:	adc    DWORD PTR [esi-0x57],esi
  421f59:	and    al,0x3d
  421f5b:	mov    es,WORD PTR [esi-0xb565e9]
  421f61:	call   0xad84ac40
  421f66:	or     al,0x6c
  421f68:	cdq    
  421f69:	loop   0x421f78
  421f6b:	push   ebp
  421f6c:	stos   BYTE PTR es:[edi],al
  421f6d:	pusha  
  421f6e:	in     al,0xf6
  421f70:	rol    ecx,cl
  421f72:	inc    eax
  421f73:	pushf  
  421f74:	jb     0x421f18
  421f76:	xlat   BYTE PTR ds:[ebx]
  421f77:	xor    ecx,DWORD PTR ds:[ecx]
  421f7a:	jb     0x421f46
  421f7c:	adc    al,0x89
  421f7e:	scas   al,BYTE PTR es:[edi]
  421f7f:	pop    esi
  421f80:	dec    eax
  421f81:	pop    edi
  421f82:	data16 adc ah,BYTE PTR [ebp+0x4d37ddd2]
  421f89:	and    edx,DWORD PTR [eax]
  421f8b:	call   0x5874:0x45f528d7
  421f92:	in     al,0x55
  421f94:	je     0x421f22
  421f96:	fcom   DWORD PTR [ebx+0x37445eba]
  421f9c:	add    DWORD PTR [eax+0x4],0xee03707f
  421fa3:	mov    es,WORD PTR [esi+edi*2-0x7f]
  421fa7:	xlat   BYTE PTR ds:[ebx]
  421fa8:	popa   
  421fa9:	std    
  421faa:	in     al,0xa9
  421fac:	push   cs
  421fad:	add    al,0x6
  421faf:	out    dx,eax
  421fb0:	sbb    BYTE PTR [ebx-0x2bcea7fd],dl
  421fb6:	and    BYTE PTR [ebp+ebp*1-0x6b],bh
  421fba:	mov    bl,0xce
  421fbc:	mov    ebx,0xdf1e62f3
  421fc1:	or     al,ch
  421fc3:	add    ebx,DWORD PTR [ebx+0x51f13d11]
  421fc9:	or     BYTE PTR [edi+0xc],ch
  421fcc:	sub    bl,BYTE PTR [edx+0x12]
  421fcf:	inc    edx
  421fd0:	into   
  421fd1:	xchg   esp,ecx
  421fd3:	mov    esp,0xd0b97024
  421fd8:	pop    esp
  421fd9:	and    BYTE PTR [esp+edx*8+0x3738bd0e],al
  421fe0:	dec    ecx
  421fe1:	repnz sti 
  421fe3:	inc    esp
  421fe4:	das    
  421fe5:	aas    
  421fe6:	int3   
  421fe7:	or     BYTE PTR [esi],cl
  421fe9:	sub    ebp,DWORD PTR [edx]
  421feb:	ins    DWORD PTR es:[edi],dx
  421fec:	movlps xmm0,QWORD PTR [eax]
  421fef:	jp     0x421fa1
  421ff1:	mov    eax,ds:0x328f07c1
  421ff6:	jo     0x422073
  421ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ff9:	sbb    ah,bl
  421ffb:	sbb    ch,0x7d
  421ffe:	add    dh,BYTE PTR [edx+0x47692831]
  422004:	push   esp
  422005:	loop   0x421fd4
  422007:	out    0x1,eax
  422009:	lahf   
  42200a:	adc    BYTE PTR [ebp-0x5667b5a1],dh
  422010:	mov    WORD PTR [esi+0x1e8a5694],es
  422016:	add    dl,BYTE PTR [ebx-0x66]
  422019:	aad    0x17
  42201b:	jmp    0x88cf45ee
  422020:	rcl    BYTE PTR [edi-0x7e],0x82
  422024:	xor    eax,DWORD PTR ds:0xffc5e791
  42202a:	push   cs
  42202b:	sub    ebp,DWORD PTR [ebx-0x2c63385]
  422031:	fstp   QWORD PTR [esi-0x340294d0]
  422037:	jmp    0x421ff1
  422039:	es xchg ebx,eax
  42203b:	sbb    al,0xa0
  42203d:	xchg   esi,eax
  42203e:	cmp    BYTE PTR [esi-0x60],cl
  422041:	outs   dx,BYTE PTR ds:[esi]
  422042:	sahf   
  422043:	hlt    
  422044:	call   0x9f36:0x19dbd166
  42204b:	mov    dl,bl
  42204d:	jle    0x422051
  42204f:	lea    ebp,[edx]
  422051:	add    eax,eax
  422053:	jl     0x421ff2
  422055:	adc    ebp,DWORD PTR [edi]
  422057:	outs   dx,DWORD PTR ds:[esi]
  422058:	jae    0x422087
  42205a:	xor    eax,0x8324f4dd
  42205f:	and    eax,0xd7c84d65
  422064:	jmp    0xdfe2934d
  422069:	inc    edi
  42206a:	inc    edi
  42206b:	not    DWORD PTR [eax-0x4d]
  42206e:	push   0x0
  422070:	xchg   edx,eax
  422071:	mov    ch,0x97
  422073:	jl     0x422062
  422075:	jp     0x42204c
  422077:	lea    eax,[eax]
  422079:	cdq    
  42207a:	mov    gs:0xb89d9634,eax
  422080:	nop
  422081:	sbb    BYTE PTR [eax-0x3d],0xa4
  422085:	test   DWORD PTR [esi+esi*2],0x60ff3c98
  42208c:	ror    esi,cl
  42208e:	rol    esp,0x1d
  422091:	push   ss
  422092:	test   edx,ebx
  422094:	adc    eax,0xb41aba26
  422099:	push   ebp
  42209a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42209b:	sbb    eax,DWORD PTR [edx-0x529b9c73]
  4220a1:	cld    
  4220a2:	inc    edx
  4220a3:	bt     DWORD PTR [edi-0x5d190d91],eax
  4220aa:	inc    eax
  4220ab:	push   0x35
  4220ad:	sti    
  4220ae:	add    eax,0x39000000
  4220b3:	stc    
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	imul   ebx,DWORD PTR [ebx-0xb],0xffffffb0
  4220c2:	rcr    DWORD PTR [edx+0x4f50001],0x0
  4220c9:	add    BYTE PTR [ebx+ebx*8+0x1ad372c8],bl
  4220d0:	(bad)  
  4220d1:	loop   0x422110
  4220d3:	retf   0x69e2
  4220d6:	ins    BYTE PTR es:[edi],dx
  4220d7:	push   ebp
  4220d8:	pop    ebp
  4220d9:	cmc    
  4220da:	clc    
  4220db:	lods   eax,DWORD PTR ds:[esi]
  4220dc:	out    dx,eax
  4220dd:	test   eax,0x7ddf2b87
  4220e2:	and    al,0xda
  4220e4:	mov    DWORD PTR [ecx+0x52],edi
  4220e7:	jno    0x42209d
  4220e9:	and    BYTE PTR [ebx],bl
  4220eb:	cmp    DWORD PTR [ecx+0x5],esi
  4220ee:	inc    edi
  4220ef:	cmp    BYTE PTR [edx+0x1506f25c],al
  4220f5:	clc    
  4220f6:	cmp    edx,DWORD PTR [esi-0x47]
  4220f9:	push   edi
  4220fa:	xchg   ebp,eax
  4220fb:	lods   al,BYTE PTR ds:[esi]
  4220fc:	icebp  
  4220fd:	push   edx
  4220fe:	push   cs
  4220ff:	mov    edi,DWORD PTR ds:0x9264741c
  422105:	les    ebp,FWORD PTR [eax]
  422107:	loop   0x4220f7
  422109:	stc    
  42210a:	fisub  WORD PTR ss:[edx-0x14410d58]
  422111:	dec    ebp
  422112:	pop    ebx
  422113:	ins    BYTE PTR es:[edi],dx
  422114:	inc    DWORD PTR [esi*1+0x11f73b1]
  42211b:	add    eax,0xa4972789
  422120:	(bad)  
  422121:	jae    0x422142
  422123:	repz rcr BYTE PTR [edi+0x46],1
  422127:	add    al,0xa6
  422129:	popf   
  42212a:	mov    ?,WORD PTR [eax+0x46c2902c]
  422130:	mov    ds:0x77bb43f5,eax
  422135:	leave  
  422136:	pop    DWORD PTR [edx-0x10]
  422139:	fcmovbe st,st(5)
  42213b:	push   ecx
  42213c:	sub    DWORD PTR [esi],esi
  42213e:	jo     0x422178
  422140:	jg     0x4220f4
  422142:	dec    esi
  422143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422144:	xlat   BYTE PTR ds:[ebx]
  422145:	aad    0xde
  422147:	stos   DWORD PTR es:[edi],eax
  422148:	mov    gs,WORD PTR [edi-0x39]
  42214b:	ret    
  42214c:	test   cl,bh
  42214e:	aas    
  42214f:	push   es
  422150:	mov    ebx,0xb9ebc90a
  422155:	adc    eax,0x92c5de9c
  42215a:	adc    al,0x73
  42215c:	stos   DWORD PTR es:[edi],eax
  42215d:	sbb    eax,0x81626c39
  422162:	add    al,0x4e
  422164:	into   
  422165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422166:	outs   dx,DWORD PTR ds:[esi]
  422167:	push   0x41
  422169:	cmp    DWORD PTR [eax-0x46],esi
  42216c:	and    BYTE PTR [ebx],ah
  42216e:	ins    DWORD PTR es:[edi],dx
  42216f:	sub    dh,dh
  422171:	xor    BYTE PTR [edx],al
  422173:	shl    DWORD PTR [edx+0x75bef47],1
  422179:	ficomp DWORD PTR [esi-0x2]
  42217c:	sti    
  42217d:	mov    al,ds:0x90d18c5
  422182:	jmp    0x422186
  422184:	mov    eax,ds:0x2852ec7f
  422189:	stc    
  42218a:	scas   al,BYTE PTR es:[edi]
  42218b:	aad    0xb2
  42218d:	pop    edx
  42218e:	dec    ebp
  42218f:	ret    
  422190:	push   edx
  422191:	and    al,0xfb
  422193:	jmp    0xfb4b:0xb75e1d80
  42219a:	jmp    0x70d0:0x68ca74d1
  4221a1:	xor    BYTE PTR [edx+ecx*2],dl
  4221a4:	cmp    ah,BYTE PTR [eax-0x23403bb7]
  4221aa:	xor    DWORD PTR [ebx+0x487008f6],ebp
  4221b0:	jne    0x422168
  4221b2:	jge    0x4221a1
  4221b4:	cwde   
  4221b5:	inc    edx
  4221b6:	imul   BYTE PTR [edx-0x54]
  4221b9:	in     eax,0x88
  4221bb:	gs and edx,0x7075801c
  4221c2:	adc    DWORD PTR [esi+ecx*1-0xe2cee08],ecx
  4221c9:	add    esi,DWORD PTR ds:0x652de245
  4221cf:	push   edi
  4221d0:	add    DWORD PTR [ebx+0x3982765f],eax
  4221d6:	xchg   edi,eax
  4221d7:	repz enter 0x8bf,0x52
  4221dc:	jb     0x4221dc
  4221de:	fadd   st,st(0)
  4221e0:	iret   
  4221e1:	pop    ss
  4221e2:	stos   BYTE PTR es:[edi],al
  4221e3:	mov    edx,0xcd5170e8
  4221e8:	stos   DWORD PTR es:[edi],eax
  4221e9:	fcmovne st,st(7)
  4221eb:	test   eax,0xff93274b
  4221f0:	sbb    BYTE PTR [ecx+0x24],al
  4221f3:	mov    ds:0xac0e593d,al
  4221f8:	sbb    DWORD PTR [eax+0x77],edx
  4221fb:	not    ecx
  4221fd:	dec    esi
  4221fe:	ret    
  4221ff:	cs addr16 inc edi
  422202:	retf   0xecfb
  422205:	call   0x1077:0x2a6cd470
  42220c:	xchg   ecx,eax
  42220d:	mov    ch,0x44
  42220f:	sub    DWORD PTR [ecx],edx
  422211:	xor    al,BYTE PTR [edi]
  422213:	pop    ecx
  422214:	pop    esp
  422215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422216:	jns    0x42223a
  422218:	mov    ebp,0x9c7d7ada
  42221d:	mov    bl,0x94
  42221f:	xlat   BYTE PTR ds:[ebx]
  422220:	push   es
  422221:	sbb    eax,0x300a7665
  422226:	fcomp  DWORD PTR [esi]
  422228:	mov    cl,0x5
  42222a:	jmp    0x7e2f4366
  42222f:	daa    
  422230:	es and al,ah
  422233:	mov    eax,0x484a0fe9
  422238:	mov    ebp,DWORD PTR [ebx]
  42223a:	pusha  
  42223b:	mov    gs,WORD PTR [edi+0x11]
  42223e:	or     eax,0x501310e1
  422243:	sbb    ecx,DWORD PTR [esi+eax*4+0x16]
  422247:	dec    edi
  422248:	push   edi
  422249:	scas   al,BYTE PTR es:[edi]
  42224a:	div    bh
  42224c:	mov    dh,0x19
  42224e:	add    cl,BYTE PTR [edi+0x19fd065]
  422254:	push   ss
  422255:	push   ebp
  422256:	fist   WORD PTR [ecx+0x65]
  422259:	xor    ecx,DWORD PTR [edi-0x71c6b772]
  42225f:	les    ebp,FWORD PTR [esi]
  422261:	faddp  st(6),st
  422263:	lea    eax,[edi+0x6606d288]
  422269:	test   BYTE PTR [ebp-0x4b5aa648],bh
  42226f:	fdivr  DWORD PTR [edx]
  422271:	mov    ecx,0x68fb9b5e
  422276:	mov    dl,0x26
  422279:	xchg   ecx,eax
  42227a:	repz bound ecx,QWORD PTR [esi]
  42227d:	xchg   edx,eax
  42227e:	je     0x42224c
  422280:	push   ss
  422281:	js     0x4222cc
  422283:	and    DWORD PTR [ebp-0x6d],edi
  422286:	jle    0x422259
  422288:	jmp    0x76f267fd
  42228d:	ja     0x42224b
  42228f:	rol    BYTE PTR [edi+ebx*2],0x68
  422293:	fnsave [eax+edi*4+0x5e]
  422297:	pop    esi
  422298:	pop    edi
  422299:	nop
  42229a:	mov    edx,0x17bedee3
  42229f:	jbe    0x422246
  4222a1:	cld    
  4222a2:	scas   al,BYTE PTR es:[edi]
  4222a3:	neg    dh
  4222a5:	std    
  4222a6:	daa    
  4222a7:	pop    edx
  4222a8:	mov    al,0xd9
  4222aa:	cmp    edx,DWORD PTR [edx]
  4222ac:	lock fadd DWORD PTR fs:0x660a7825
  4222b4:	ret    
  4222b5:	xchg   ebx,eax
  4222b6:	(bad)  
  4222b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222b8:	cmp    DWORD PTR [edi+edx*4+0x2b],esp
  4222bc:	dec    bx
  4222be:	jecxz  0x4222c7
  4222c0:	data16 add BYTE PTR [edx-0x4f8b3ffa],bh
  4222c7:	test   ax,si
  4222ca:	mov    ah,0x70
  4222cc:	push   esi
  4222cd:	mov    bl,0x11
  4222cf:	sub    eax,DWORD PTR [ecx+0x60027ed8]
  4222d5:	arpl   si,cx
  4222d7:	mov    al,dh
  4222d9:	js     0x42232c
  4222db:	xchg   edi,eax
  4222dc:	cwde   
  4222dd:	sub    BYTE PTR [eax],bl
  4222df:	scas   eax,DWORD PTR es:[edi]
  4222e0:	jns    0x42227e
  4222e2:	(bad)  
  4222e3:	cld    
  4222e4:	push   0x16bc7479
  4222e9:	mov    ah,0xd2
  4222eb:	push   edx
  4222ec:	xchg   ebp,eax
  4222ed:	(bad)  
  4222ee:	xor    dl,dl
  4222f0:	mov    edx,0x54d6ba47
  4222f5:	mov    BYTE PTR [esi],cl
  4222f7:	cwde   
  4222f8:	gs push ds
  4222fa:	stc    
  4222fb:	in     al,dx
  4222fc:	cld    
  4222fd:	sbb    eax,0x97b2d9f4
  422302:	out    dx,eax
  422303:	rcl    DWORD PTR [ecx-0x5ac2eb7c],0xbd
  42230a:	adc    BYTE PTR ds:0x14c7e2e0,cl
  422310:	retf   0xe425
  422313:	fld    TBYTE PTR ds:0x61af798f
  422319:	cs aad 0x52
  42231c:	ret    
  42231d:	fmul   DWORD PTR [ecx]
  42231f:	or     al,0x72
  422321:	or     ecx,DWORD PTR [esi]
  422323:	mov    BYTE PTR [eax-0x51834748],dh
  422329:	push   es
  42232a:	clc    
  42232b:	cmp    al,0x8b
  42232d:	loop   0x422328
  42232f:	(bad)  
  422331:	mov    ebp,0x583ed2d6
  422336:	jne    0x42234b
  422338:	pop    ds
  422339:	xchg   esi,eax
  42233a:	or     BYTE PTR [esi],ah
  42233c:	and    al,0xf6
  42233e:	arpl   WORD PTR [ecx],sp
  422340:	lods   eax,DWORD PTR ds:[esi]
  422341:	jg     0x422377
  422343:	je     0x4222fe
  422345:	in     al,0xd3
  422347:	adc    al,0xfd
  422349:	pop    es
  42234a:	lock jp 0x4223bf
  42234d:	nop
  42234e:	adc    BYTE PTR ds:0x2947d484,dh
  422354:	jecxz  0x422323
  422356:	add    BYTE PTR [eax],dl
  422358:	scas   eax,DWORD PTR es:[edi]
  422359:	in     al,0xe2
  42235b:	mov    bl,BYTE PTR [edx+ebx*1]
  42235e:	jae    0x4223bf
  422360:	mov    dh,0xd7
  422362:	loope  0x42232d
  422364:	stos   DWORD PTR es:[edi],eax
  422365:	leave  
  422366:	addr16 test eax,0xed74a872
  42236c:	dec    esi
  42236d:	test   BYTE PTR [edx+ecx*1],dh
  422370:	add    ecx,DWORD PTR [eax+ebx*2-0x9]
  422374:	jmp    0xbd21:0x987bf2d3
  42237b:	(bad)  
  42237c:	imul   edx,DWORD PTR ss:[edi+0x59],0x70cf8165
  422384:	add    esp,0xd685c7a2
  42238a:	dec    ebp
  42238b:	fidivr DWORD PTR [esi-0x2e88fe4e]
  422391:	jge    0x4223b8
  422393:	and    edx,DWORD PTR [edx+0x4d841a91]
  422399:	lods   al,BYTE PTR ds:[esi]
  42239a:	jp     0x42232c
  42239c:	jl     0x422405
  42239e:	pop    ds
  42239f:	in     eax,dx
  4223a0:	push   ds
  4223a1:	mov    al,ds:0xe301454a
  4223a6:	mov    ebp,0xc860b45d
  4223ab:	lods   eax,DWORD PTR ds:[esi]
  4223ac:	sbb    eax,0xf227c047
  4223b1:	cmp    al,0x95
  4223b3:	in     al,dx
  4223b4:	test   BYTE PTR [ecx],bl
  4223b6:	mov    ah,0x81
  4223b8:	add    BYTE PTR ss:[edi-0x23],al
  4223bc:	add    BYTE PTR [esi+0x29],dh
  4223bf:	jo     0x422370
  4223c1:	add    DWORD PTR [esi-0x7f],esp
  4223c4:	dec    ebx
  4223c5:	adc    al,0x7d
  4223c7:	movnti DWORD PTR [esi+0x3dd3433c],esp
  4223ce:	out    dx,al
  4223cf:	add    ch,0x91
  4223d2:	push   edi
  4223d3:	jecxz  0x422392
  4223d5:	les    ecx,FWORD PTR [edi]
  4223d7:	les    esi,FWORD PTR [esi]
  4223d9:	mov    bh,0x4c
  4223db:	daa    
  4223dc:	dec    ebx
  4223dd:	repnz fucomp st(7)
  4223e0:	dec    esp
  4223e1:	test   al,0xd8
  4223e3:	or     al,0x60
  4223e5:	test   BYTE PTR [ebx+0xd968878],bl
  4223eb:	not    edi
  4223ed:	div    DWORD PTR [ebp-0x2a632f4d]
  4223f3:	and    al,0xb4
  4223f5:	adc    DWORD PTR [ecx-0x5f4ac7e],esi
  4223fb:	sbb    al,BYTE PTR ds:0x5837c14
  422401:	rcr    BYTE PTR ds:0x6c4ca26e,cl
  422407:	(bad)  
  422408:	loopne 0x422444
  42240a:	scas   al,BYTE PTR es:[edi]
  42240b:	xchg   ecx,eax
  42240c:	aad    0xeb
  42240e:	mov    ch,0xea
  422410:	jg     0x42244e
  422412:	mov    dh,0xbb
  422414:	cmp    DWORD PTR [edi+ecx*1],edi
  422417:	push   edx
  422418:	fld    QWORD PTR [esi-0x12a57b66]
  42241e:	aam    0x17
  422420:	lds    eax,FWORD PTR [ebx-0x238edd3]
  422426:	stos   BYTE PTR es:[edi],al
  422427:	leave  
  422428:	adc    al,0x4c
  42242a:	lods   eax,DWORD PTR ds:[esi]
  42242b:	sub    eax,0x8317fa1f
  422430:	sbb    eax,0x967ca00f
  422435:	int3   
  422436:	jnp    0x42240d
  422438:	xor    eax,ecx
  42243a:	std    
  42243b:	je     0x4223e8
  42243d:	xor    al,0xe9
  422440:	shl    DWORD PTR [ecx+edi*2],1
  422443:	inc    ebp
  422444:	or     dl,ah
  422446:	sub    dl,BYTE PTR [ebx+0x21]
  422449:	mov    edi,0x4679b7e9
  42244e:	lods   al,BYTE PTR es:[esi]
  422450:	(bad)  
  422451:	xor    BYTE PTR [eax-0x68],ah
  422454:	ins    BYTE PTR es:[edi],dx
  422455:	mov    bh,0x64
  422457:	sbb    dl,BYTE PTR [ecx-0x781893c5]
  42245d:	stos   BYTE PTR es:[edi],al
  42245e:	sub    BYTE PTR [eax+eax*4],cl
  422461:	xor    BYTE PTR [edi],dl
  422463:	je     0x4224d6
  422465:	sbb    ebx,ebx
  422467:	test   al,bl
  422469:	fidiv  DWORD PTR [ecx]
  42246b:	lahf   
  42246c:	dec    esi
  42246d:	lds    esi,FWORD PTR [ebx-0x37]
  422470:	call   0xe2900553
  422475:	mov    eax,0x986120a4
  42247a:	mov    bl,0x2d
  42247c:	sub    DWORD PTR [ebp-0x4e146391],0x3d
  422483:	sbb    BYTE PTR [eax+ebp*2+0x22d65e43],bh
  42248a:	int    0xd9
  42248c:	dec    ebp
  42248d:	inc    esp
  42248e:	test   BYTE PTR [edi+0x46],dl
  422491:	imul   ecx,DWORD PTR [edi],0x31
  422494:	xchg   esi,eax
  422495:	or     ecx,esi
  422497:	xor    DWORD PTR [esi],edi
  422499:	ror    DWORD PTR [esi],cl
  42249b:	aas    
  42249c:	jbe    0x422453
  42249e:	iret   
  42249f:	cmc    
  4224a0:	cs mov dl,0x6c
  4224a3:	inc    ebx
  4224a4:	or     cl,dh
  4224a6:	dec    eax
  4224a7:	fld    QWORD PTR [ebp-0x1351505d]
  4224ad:	xor    al,0x93
  4224af:	push   edi
  4224b0:	and    eax,0x5bd230d8
  4224b5:	ss inc ebp
  4224b7:	imul   ebx,DWORD PTR [eax+ebp*1-0x4d],0xffffffe3
  4224bc:	jae    0x42246a
  4224be:	push   esp
  4224bf:	cmp    al,0x54
  4224c1:	scas   eax,DWORD PTR es:[edi]
  4224c2:	jmp    0x25dff9e8
  4224c7:	or     ah,BYTE PTR [edi-0x1d]
  4224ca:	push   0xab9e3153
  4224cf:	outs   dx,BYTE PTR ds:[esi]
  4224d0:	nop
  4224d1:	nop/reserved BYTE PTR [esi+0x1f799c73]
  4224d8:	cli    
  4224d9:	jecxz  0x42252f
  4224db:	inc    eax
  4224dc:	add    BYTE PTR [ebp-0x263d629e],cl
  4224e2:	and    ebp,esi
  4224e4:	inc    esi
  4224e5:	sub    BYTE PTR [edi-0x7d47e187],ah
  4224eb:	cmp    esi,ecx
  4224ed:	fcomi  st,st(6)
  4224ef:	xlat   BYTE PTR ds:[ebx]
  4224f0:	mov    al,0x3c
  4224f2:	dec    eax
  4224f3:	xchg   edi,eax
  4224f4:	out    0x4e,al
  4224f6:	(bad)  [ebx-0x1062e105]
  4224fc:	cmp    BYTE PTR [edi+0x2a],al
  4224ff:	cs pop es
  422501:	mov    DWORD PTR [eax],edx
  422503:	mov    ch,0x9e
  422505:	pop    edi
  422506:	push   eax
  422507:	shl    DWORD PTR [edx],1
  422509:	neg    eax
  42250b:	xchg   DWORD PTR [ecx],edx
  42250d:	lods   eax,DWORD PTR gs:[esi]
  42250f:	hlt    
  422510:	test   BYTE PTR [eax-0xba330c5],al
  422516:	inc    ebx
  422517:	daa    
  422518:	iret   
  422519:	or     BYTE PTR ds:0x1b934f96,ch
  42251f:	and    edx,eax
  422521:	int    0xd2
  422523:	jnp    0x422595
  422525:	mov    ch,0xb5
  422527:	jg     0x4224b8
  422529:	adc    DWORD PTR [esi],ebp
  42252b:	dec    ebp
  42252c:	xor    ebp,DWORD PTR [eax]
  42252e:	retf   0x52a2
  422531:	xchg   ebp,eax
  422532:	ret    0xba12
  422535:	cmp    al,BYTE PTR [ebp-0x4b2d70d8]
  42253b:	fiadd  WORD PTR [esi+0x3ad7d7ca]
  422541:	mov    al,0xa3
  422543:	mov    esp,0xcb3c9daa
  422548:	test   BYTE PTR [ecx-0x5fe5d435],bh
  42254e:	sub    BYTE PTR [eax+ecx*1+0x3e],cl
  422552:	dec    eax
  422553:	jnp    0x422595
  422555:	add    al,0x23
  422557:	cmp    al,0x49
  422559:	ja     0x4225a8
  42255b:	xchg   ebx,eax
  42255c:	or     eax,0x4a17a8d1
  422561:	clc    
  422562:	pop    esp
  422563:	fsubr  DWORD PTR [edi+0x7dacf9f1]
  422569:	and    eax,0x1ce21349
  42256e:	and    ebp,ebx
  422570:	adc    eax,0xc4eb0eb3
  422575:	icebp  
  422576:	jo     0x4225e3
  422578:	cmp    esp,ecx
  42257a:	mov    dh,0x69
  42257c:	mov    esp,0xccfade38
  422581:	dec    eax
  422582:	pop    esi
  422583:	and    bh,dl
  422585:	or     al,0x76
  422587:	fs into 
  422589:	pop    ecx
  42258a:	xchg   esp,eax
  42258b:	loop   0x4225e8
  42258d:	push   ss
  42258e:	test   BYTE PTR [ecx-0x6e],ah
  422591:	aad    0x16
  422593:	arpl   WORD PTR [ebp-0x247f4fe8],si
  422599:	and    DWORD PTR [edx-0x7e3b2df8],edx
  42259f:	push   ebp
  4225a0:	aaa    
  4225a1:	fbstp  TBYTE PTR [ecx-0x3cb28d8a]
  4225a7:	add    BYTE PTR [ecx],dh
  4225a9:	jnp    0x4225ca
  4225ab:	jmp    0x9413:0x7353a344
  4225b2:	jns    0x422540
  4225b4:	sub    ch,dh
  4225b6:	sub    DWORD PTR gs:[esi+0x7c6eeca8],eax
  4225bd:	cmp    al,BYTE PTR [esi-0x36000000]
  4225c3:	adc    al,0x69
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9fb6:0xc22e2155
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	cmc    
  4225d7:	add    al,0x0
  4225d9:	add    BYTE PTR [esi],dl
  4225db:	xchg   ebx,eax
  4225dc:	jg     0x422582
  4225de:	or     eax,0xea98a76f
  4225e3:	sub    DWORD PTR [ebx+0x725e50f5],eax
  4225e9:	add    BYTE PTR [eax+0x2],bl
  4225ec:	mov    bl,0x1e
  4225ee:	int    0x67
  4225f0:	mov    ebx,0xd1ce9b10
  4225f5:	arpl   WORD PTR [edi-0xcc2d615],ax
  4225fb:	std    
  4225fc:	dec    eax
  4225fd:	jg     0x42263b
  4225ff:	adc    al,0xd1
  422601:	jecxz  0x4225a4
  422603:	inc    eax
  422604:	int3   
  422605:	push   edi
  422606:	xor    esp,DWORD PTR [edi-0x4f6662a2]
  42260c:	push   ebp
  42260d:	mov    DWORD PTR [ebx],esi
  42260f:	sar    DWORD PTR [esi-0x50],1
  422612:	lds    edx,FWORD PTR [edi+0x40ae7b93]
  422618:	jb     0x4225e2
  42261a:	lahf   
  42261b:	push   0x68296b45
  422620:	pop    eax
  422621:	push   ss
  422622:	pushf  
  422623:	ret    0xf095
  422626:	mov    al,0xac
  422628:	pop    edi
  422629:	outs   dx,BYTE PTR ds:[esi]
  42262a:	int3   
  42262b:	xchg   edx,eax
  42262c:	xchg   esp,eax
  42262d:	aaa    
  42262e:	pop    es
  42262f:	imul   DWORD PTR [eax-0x1e]
  422632:	mov    WORD PTR [ebx],gs
  422634:	mov    dl,0x37
  422636:	add    eax,0x4020bbcd
  42263b:	outs   dx,DWORD PTR ds:[esi]
  42263c:	es pop ebx
  42263e:	adc    dh,BYTE PTR [esp+ebp*2+0x61]
  422642:	ja     0x4225f1
  422644:	call   0xa1fb:0x1df9a4a9
  42264b:	inc    ebp
  42264c:	cmp    edx,DWORD PTR [ecx+0x36a18a47]
  422652:	xchg   esp,eax
  422653:	pop    ecx
  422654:	cdq    
  422655:	sbb    DWORD PTR [ebx+0x38],ebx
  422658:	pop    esp
  422659:	iret   
  42265a:	jg     0x4226d7
  42265c:	cmp    bl,bh
  42265e:	stos   BYTE PTR es:[edi],al
  42265f:	xchg   edi,eax
  422660:	mov    edx,0x7acf4f4b
  422665:	push   0xffffffdb
  422667:	xchg   BYTE PTR [eax+0x1e8ce54d],al
  42266d:	xchg   ecx,eax
  42266e:	xor    bh,BYTE PTR [esi-0x9fe089]
  422674:	pop    ds
  422675:	cmp    bh,BYTE PTR [ecx-0x3f145b67]
  42267b:	std    
  42267c:	mov    dh,0x9
  42267e:	popa   
  42267f:	dec    esi
  422680:	mov    ds:0x856e663c,eax
  422685:	sub    eax,0xaa14f5e3
  42268a:	mov    edi,0x5bd5e388
  42268f:	sub    dl,BYTE PTR [eax+0x4f8f2a6b]
  422695:	das    
  422696:	sbb    BYTE PTR [edx],dh
  422698:	xor    al,0xbb
  42269a:	dec    esp
  42269b:	dec    ecx
  42269c:	pop    dx
  42269e:	mov    cl,0xe0
  4226a0:	cmp    eax,0x8001fb93
  4226a5:	int3   
  4226a6:	aam    0xbc
  4226a8:	dec    esp
  4226a9:	dec    ebx
  4226aa:	mov    eax,DWORD PTR [edx+ecx*4-0x5f91817b]
  4226b1:	aad    0x4f
  4226b3:	push   ss
  4226b4:	push   cs
  4226b5:	add    eax,0x6af96824
  4226ba:	and    DWORD PTR [eax-0xd],esp
  4226bd:	xchg   ebx,eax
  4226be:	cdq    
  4226bf:	cdq    
  4226c0:	dec    eax
  4226c1:	push   edx
  4226c2:	ins    DWORD PTR es:[edi],dx
  4226c3:	push   edx
  4226c4:	xor    eax,0x1a8d0738
  4226c9:	and    BYTE PTR [ecx+0x31],cl
  4226cc:	in     al,dx
  4226cd:	add    eax,0xbb99d8c7
  4226d2:	dec    ax
  4226d4:	mov    cl,ah
  4226d6:	ror    ch,1
  4226d8:	jp     0x42267d
  4226da:	cmp    DWORD PTR [esi],esi
  4226dc:	jp     0x4226c4
  4226de:	and    eax,0xa21836e7
  4226e3:	jmp    0xc308:0xcd494b3e
  4226ea:	pop    esi
  4226eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226ec:	aas    
  4226ed:	outs   dx,DWORD PTR ds:[esi]
  4226ee:	rcl    DWORD PTR [ebp-0x56],cl
  4226f1:	fisubr WORD PTR [ecx]
  4226f3:	shl    ebx,0x4c
  4226f6:	inc    edx
  4226f7:	call   0x7e3c2259
  4226fc:	test   DWORD PTR [ecx],ebp
  4226fe:	retf   
  4226ff:	call   0x2bec:0x1ed351c6
  422706:	and    DWORD PTR [ebx],edx
  422708:	sti    
  422709:	(bad)  [edi-0x52]
  42270c:	pop    edi
  42270d:	leave  
  42270e:	(bad)  
  422710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422711:	(bad)  
  422712:	scas   al,BYTE PTR es:[edi]
  422713:	sar    DWORD PTR [esi+0xdda730b],cl
  422719:	mov    eax,DWORD PTR [edx]
  42271b:	xchg   edx,eax
  42271c:	aad    0xb
  42271e:	out    0xdf,al
  422720:	fistp  QWORD PTR [ecx]
  422722:	icebp  
  422723:	in     eax,dx
  422724:	push   ss
  422725:	xchg   DWORD PTR [edx],esi
  422727:	repnz in eax,0x4a
  42272a:	push   esp
  42272b:	repnz or al,0x4
  42272e:	clc    
  42272f:	call   0xa5c6:0x260a29e4
  422736:	dec    esi
  422737:	add    bh,BYTE PTR [edi+ebp*1-0x13844203]
  42273e:	pop    esp
  42273f:	mov    edx,0x2f3a6019
  422744:	inc    esp
  422745:	xor    BYTE PTR [edi+edx*4-0x59860dae],cl
  42274c:	inc    eax
  42274d:	outs   dx,DWORD PTR ds:[esi]
  42274e:	mov    al,ds:0x2bf21b49
  422753:	dec    ecx
  422754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422755:	call   FWORD PTR [esi+0x763c41ca]
  42275b:	mov    ebx,0x4a63212
  422760:	add    al,BYTE PTR es:[edx-0x5b]
  422764:	lods   eax,DWORD PTR ds:[esi]
  422765:	jp     0x42279a
  422767:	leave  
  422768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422769:	mov    ebp,DWORD PTR [edi+0xad2bc04]
  42276f:	test   DWORD PTR ds:0x3d6154ca,ebp
  422775:	in     al,dx
  422776:	sbb    ch,BYTE PTR fs:[edi]
  422779:	or     esp,DWORD PTR [esi+0x1c]
  42277c:	fs ja  0x42274c
  42277f:	cdq    
  422780:	push   0xbccdb1ee
  422785:	out    0xe1,al
  422787:	mov    ch,0xcf
  422789:	mov    eax,0x1ae44bc8
  42278e:	mov    dl,0x2e
  422790:	mov    dh,0xed
  422792:	outs   dx,BYTE PTR ds:[esi]
  422793:	dec    ebx
  422794:	in     al,0xe9
  422796:	dec    esi
  422797:	push   ss
  422798:	xlat   BYTE PTR ds:[ebx]
  422799:	mov    DWORD PTR [edx-0x7d0cfa11],eax
  42279f:	mov    DWORD PTR ds:0x62428953,ebp
  4227a5:	fucom  st(6)
  4227a7:	clc    
  4227a8:	out    0x51,eax
  4227aa:	aas    
  4227ab:	jmp    0x4227d0
  4227ad:	iret   
  4227ae:	rcl    BYTE PTR [ebp-0x46ae9abd],0x54
  4227b5:	(bad)  
  4227b7:	push   edi
  4227b8:	pop    edx
  4227b9:	dec    esp
  4227ba:	pand   mm6,QWORD PTR [ebx]
  4227bd:	sbb    DWORD PTR [ebx],edi
  4227bf:	mov    BYTE PTR [ecx+0x75],cl
  4227c2:	leave  
  4227c3:	dec    ebp
  4227c4:	jecxz  0x422776
  4227c6:	inc    ecx
  4227c7:	xchg   BYTE PTR [esi-0x1f],al
  4227ca:	rcl    DWORD PTR [ecx],1
  4227cc:	push   eax
  4227cd:	mov    al,0x1
  4227cf:	loop   0x422810
  4227d1:	pop    ss
  4227d2:	mov    eax,0x774fe21a
  4227d7:	xchg   edx,eax
  4227d8:	pop    ss
  4227d9:	mov    al,ds:0xcea7477
  4227df:	push   ds
  4227e0:	fwait
  4227e1:	(bad)  
  4227e2:	shr    bl,1
  4227e4:	sub    DWORD PTR [eax+0x33],ecx
  4227e7:	sub    eax,0x171d21bc
  4227ec:	jmp    0xbb84a81b
  4227f1:	inc    esi
  4227f2:	ror    BYTE PTR [ebx],cl
  4227f4:	es nop
  4227f6:	and    al,0x94
  4227f8:	retf   
  4227f9:	shr    DWORD PTR [esi+0x67d7d4f7],1
  4227ff:	es fs inc ebp
  422802:	les    ebx,FWORD PTR [ebp+0x78]
  422805:	or     ecx,DWORD PTR [ebp-0x1f97af26]
  42280b:	icebp  
  42280c:	xor    eax,0xabcc460e
  422811:	xchg   esi,eax
  422812:	icebp  
  422813:	sti    
  422814:	mov    esi,0x6e55e18
  422819:	or     al,0xfa
  42281b:	jbe    0x42279e
  42281d:	aaa    
  42281e:	pop    esi
  42281f:	dec    eax
  422820:	lods   al,BYTE PTR ds:[esi]
  422821:	xchg   DWORD PTR [esi+0x158b1037],ebx
  422827:	inc    eax
  422828:	mov    eax,0x563d7c72
  42282d:	push   ss
  42282e:	arpl   WORD PTR [edi-0x7166d665],si
  422834:	cld    
  422835:	adc    ebp,ecx
  422837:	mov    es,WORD PTR [eax]
  422839:	mov    ds:0x518fca10,eax
  42283e:	cmp    BYTE PTR [ebx+esi*8-0x62],0x1c
  422843:	cmp    eax,0x4ac9fbc7
  422848:	or     eax,0xc798a6ab
  42284d:	inc    esp
  42284e:	mov    edi,DWORD PTR [ebp-0x20404c9b]
  422854:	xor    DWORD PTR [esi+0x32],ebx
  422857:	test   DWORD PTR [edi+0x14],edx
  42285a:	clc    
  42285b:	xlat   BYTE PTR ds:[ebx]
  42285c:	mov    ah,0x78
  42285e:	xchg   ebx,eax
  42285f:	jl     0x42289f
  422861:	push   ecx
  422862:	lods   al,BYTE PTR ds:[esi]
  422863:	inc    ecx
  422864:	stos   BYTE PTR es:[edi],al
  422865:	pop    ebp
  422866:	dec    eax
  422867:	ins    DWORD PTR es:[edi],dx
  422868:	inc    ebx
  422869:	adc    al,0x67
  42286b:	call   0xcb5e23d8
  422870:	sub    dh,dh
  422872:	imul   esi,esi,0x24
  422875:	add    al,0x6b
  422877:	mov    edi,0x8f4dcdf3
  42287c:	fcmovnbe st,st(2)
  42287e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42287f:	test   al,0x1f
  422881:	pop    ss
  422882:	aad    0x54
  422884:	lock jne 0x4228fa
  422887:	cmp    BYTE PTR fs:[esi+0x5f],0xf8
  42288c:	into   
  42288d:	inc    eax
  42288e:	xchg   ebp,eax
  42288f:	or     al,0xb
  422891:	jnp    0x42281a
  422893:	imul   edi,DWORD PTR [edi],0x74beb3ff
  422899:	cmp    edi,esi
  42289b:	push   ss
  42289c:	mov    ds,WORD PTR [ebp+esi*8+0x15]
  4228a0:	pop    ecx
  4228a1:	and    al,0x8e
  4228a3:	not    BYTE PTR [ebx-0x1b62dfbb]
  4228a9:	mov    edi,esp
  4228ab:	inc    edx
  4228ac:	mov    esp,0x5602f841
  4228b1:	cs daa 
  4228b3:	mov    WORD PTR [ebx+0x54304f70],?
  4228b9:	jp     0x42286a
  4228bb:	popa   
  4228bc:	rol    BYTE PTR [ecx],0x24
  4228bf:	cmp    DWORD PTR [edx+0x2b52d0da],0x57aa69cd
  4228c9:	dec    edi
  4228ca:	xor    eax,0x243d0139
  4228cf:	xchg   edi,eax
  4228d0:	(bad)  
  4228d1:	das    
  4228d2:	mov    al,0x56
  4228d4:	or     ah,ch
  4228d6:	(bad)  
  4228d7:	sub    DWORD PTR [edx],edx
  4228d9:	loop   0x4228b5
  4228db:	pop    ecx
  4228dc:	sbb    eax,0xa6ebea91
  4228e1:	fwait
  4228e2:	std    
  4228e3:	(bad)  
  4228e4:	into   
  4228e5:	aaa    
  4228e6:	pop    edi
  4228e7:	test   dh,bl
  4228e9:	xchg   esp,eax
  4228ea:	or     eax,0x6fdb9cf4
  4228ef:	add    ecx,esp
  4228f1:	cdq    
  4228f2:	lods   al,BYTE PTR ds:[esi]
  4228f3:	rcr    DWORD PTR [ebx+ebx*4],0xce
  4228f7:	arpl   WORD PTR [ebx-0x5b58dcce],bx
  4228fd:	xor    eax,0xcdf7f3f3
  422902:	mov    eax,ds:0x5c3c8d86
  422907:	xchg   esp,eax
  422908:	sub    al,0x85
  42290a:	lock mov dh,0xb5
  42290d:	cld    
  42290e:	and    DWORD PTR [edx+0x1b67aac0],esi
  422914:	add    eax,0x30a75e2a
  422919:	sti    
  42291a:	cmp    bh,0x2e
  42291d:	ds or  al,0xa5
  422920:	push   0x655d03c8
  422925:	lds    esi,FWORD PTR [eax]
  422927:	shl    dh,cl
  422929:	inc    esi
  42292a:	adc    dh,BYTE PTR [ebx-0x11]
  42292d:	stos   DWORD PTR es:[edi],eax
  42292e:	jb     0x4229a1
  422930:	fwait
  422931:	or     bl,BYTE PTR [edi]
  422933:	fwait
  422934:	pop    edi
  422935:	push   cs
  422936:	mov    esp,0x3f471db9
  42293b:	popa   
  42293c:	loopne 0x422974
  42293e:	shl    bl,1
  422940:	jns    0x4228e1
  422942:	jmp    0x35254716
  422947:	iret   
  422948:	push   es
  422949:	inc    edi
  42294a:	dec    ebp
  42294b:	aam    0xd0
  42294d:	mov    ebx,0xfce59c79
  422952:	sub    edx,ecx
  422954:	add    eax,0x31e9f8c1
  422959:	je     0x4229b6
  42295b:	push   0x3f
  42295d:	mov    ah,0x75
  42295f:	test   al,0x4f
  422961:	mov    gs,WORD PTR [ebp-0x2b]
  422964:	xchg   esp,eax
  422965:	mov    BYTE PTR [eax+0x1d],bh
  422968:	push   esi
  422969:	jmp    0xb239:0xe8cd0627
  422970:	shr    DWORD PTR [edx-0x4e],cl
  422973:	enter  0xec29,0x16
  422977:	outs   dx,BYTE PTR ds:[esi]
  422978:	push   eax
  42297a:	je     0x422948
  42297c:	add    eax,edi
  42297e:	fimul  DWORD PTR [ebx]
  422980:	push   ebx
  422981:	pop    edx
  422982:	ret    
  422983:	mov    ?,WORD PTR [ecx+0x76270b36]
  422989:	test   BYTE PTR [esi+0x605aa49f],bh
  42298f:	mov    ds:0xe94f2b53,al
  422994:	jmp    0x4229c0
  422996:	pop    ds
  422997:	je     0x422988
  422999:	mov    fs,WORD PTR [esp+eiz*8+0x10ee010b]
  4229a0:	fs in  al,0x61
  4229a3:	push   esp
  4229a4:	retf   0x1a22
  4229a7:	retf   
  4229a8:	(bad)  
  4229a9:	inc    DWORD PTR [ebp+0x1762fd5c]
  4229af:	call   0x7409:0xb1802c4f
  4229b6:	hlt    
  4229b7:	loope  0x42296b
  4229b9:	adc    DWORD PTR [eax+0x59],ebp
  4229bc:	pop    ss
  4229bd:	or     BYTE PTR [edx+0x460138ca],dh
  4229c3:	loope  0x4229f6
  4229c5:	addr16 mov edx,0x496bad93
  4229cb:	or     eax,0xe6667290
  4229d0:	ror    BYTE PTR ds:0xfab31acc,0x7c
  4229d7:	es push ds
  4229d9:	xchg   BYTE PTR [edi-0x4160ffb8],cl
  4229df:	sbb    al,0x96
  4229e1:	(bad)  
  4229e2:	jmp    0x2cd8:0x8764a11f
  4229e9:	stos   DWORD PTR es:[edi],eax
  4229ea:	jl     0x422971
  4229ec:	cmc    
  4229ed:	mov    ss,WORD PTR [edi]
  4229ef:	xchg   edi,eax
  4229f0:	xor    al,0xc1
  4229f2:	retf   0xdead
  4229f5:	cmp    eax,0x4bbc987f
  4229fa:	aam    0x7a
  4229fc:	ffreep st(2)
  4229fe:	push   cs
  4229ff:	sbb    al,0x99
  422a01:	pop    esp
  422a02:	sub    eax,0x45e97ef3
  422a07:	test   eax,0x47de6b47
  422a0c:	jp     0x4229d6
  422a0e:	pop    ss
  422a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a10:	inc    edx
  422a11:	arpl   di,di
  422a13:	outs   dx,BYTE PTR ds:[esi]
  422a14:	mov    ah,0xa4
  422a16:	jo     0x4229e3
  422a18:	sub    edx,ebp
  422a1a:	or     DWORD PTR [ebx-0x66],edx
  422a1d:	inc    esp
  422a1e:	pop    es
  422a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a20:	sub    dh,BYTE PTR [esi+0x4f]
  422a23:	addr16 xchg esp,eax
  422a25:	test   DWORD PTR [edx+0x8],0xa60db154
  422a2c:	xchg   edi,eax
  422a2d:	rol    DWORD PTR [ecx+eax*1-0x30],0xa5
  422a32:	shl    BYTE PTR [edx-0x3cc65ff5],0x58
  422a39:	rcl    DWORD PTR [esp+edx*1],1
  422a3c:	and    DWORD PTR [esi+0x2a],0x7163f3c
  422a43:	inc    esp
  422a44:	dec    edx
  422a45:	aaa    
  422a46:	out    dx,eax
  422a47:	loop   0x422ac8
  422a49:	push   es
  422a4a:	mov    ds:0x18055176,eax
  422a4f:	xor    al,0x56
  422a51:	bound  edi,QWORD PTR [eax+0x7c1b4f0d]
  422a57:	aas    
  422a58:	outs   dx,BYTE PTR ds:[esi]
  422a59:	xlat   BYTE PTR ds:[ebx]
  422a5a:	(bad)  
  422a5b:	js     0x422abc
  422a5d:	in     eax,0xe1
  422a5f:	and    al,0xe7
  422a61:	push   0x59dfba75
  422a66:	dec    esi
  422a67:	popa   
  422a68:	mov    ds:0x2a6c72fb,al
  422a6d:	jmp    0xc396662a
  422a72:	lods   eax,DWORD PTR ds:[esi]
  422a73:	fcomi  st,st(4)
  422a75:	or     BYTE PTR [ebp-0x75],dh
  422a78:	pop    eax
  422a79:	clc    
  422a7a:	push   esp
  422a7b:	(bad)  
  422a7c:	fcmove st,st(1)
  422a7e:	iret   
  422a7f:	test   al,0x65
  422a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a82:	int3   
  422a83:	rol    BYTE PTR [edx+0x19],cl
  422a86:	mov    ds:0x7982a43f,eax
  422a8b:	xor    BYTE PTR [edx+0x60046e87],0xcc
  422a92:	test   DWORD PTR [edx-0x6c927e56],ebx
  422a98:	neg    BYTE PTR [edx]
  422a9a:	lock xsha1 (bad)
  422a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a9d:	into   
  422a9e:	iret   
  422a9f:	jno    0x422ae1
  422aa1:	mov    WORD PTR [esi-0xd],?
  422aa4:	mov    al,ds:0x7742bfe
  422aa9:	outs   dx,DWORD PTR cs:[esi]
  422aab:	mov    edi,0x8f79e496
  422ab0:	and    DWORD PTR [ecx],esi
  422ab2:	imul   DWORD PTR [eax+0x7b51290]
  422ab8:	or     BYTE PTR [ebp-0x53],bh
  422abb:	add    eax,0x8904526a
  422ac0:	ret    0x947f
  422ac3:	mov    eax,ds:0x8d78a697
  422ac8:	sub    BYTE PTR [edi+0x4341b68a],bl
  422ace:	xchg   ebp,eax
  422acf:	add    BYTE PTR [eax],al
  422ad1:	add    BYTE PTR [edx-0x29],ah
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx-0x4f3c3a1a],bh
  422ae2:	stos   DWORD PTR es:[edi],eax
  422ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae4:	add    DWORD PTR [eax],eax
  422ae6:	cmc    
  422ae7:	add    al,0x0
  422ae9:	add    BYTE PTR [ebp+0x544a8aaa],dh
  422aef:	mov    ebp,0xea42bf64
  422af4:	xor    BYTE PTR [eax],0x19
  422af7:	inc    ecx
  422af8:	ret    
  422af9:	mov    bl,0x61
  422afb:	or     cl,BYTE PTR [ecx-0x14]
  422afe:	push   eax
  422aff:	ins    BYTE PTR es:[edi],dx
  422b00:	aaa    
  422b01:	aad    0xa8
  422b03:	jb     0x422b14
  422b05:	inc    esp
  422b06:	idiv   DWORD PTR [eax+esi*1-0x71]
  422b0a:	test   al,0xa5
  422b0c:	push   0x29
  422b0e:	xchg   esi,eax
  422b0f:	in     eax,0x92
  422b11:	and    eax,0xcb622e39
  422b16:	call   0xb58b:0xd117c58e
  422b1d:	push   edx
  422b1e:	out    dx,eax
  422b1f:	in     eax,dx
  422b20:	push   ebp
  422b21:	jb     0x422b8f
  422b23:	lock shr DWORD PTR ds:0x763f076,cl
  422b2a:	popf   
  422b2b:	adc    eax,0xec93875d
  422b30:	in     al,0x5c
  422b32:	and    BYTE PTR [edx-0x62d3e9ed],cl
  422b38:	xor    cl,BYTE PTR [edi]
  422b3a:	ret    
  422b3b:	adc    DWORD PTR [ecx-0x38a89771],ebp
  422b41:	push   edi
  422b42:	xchg   DWORD PTR [eax-0x2cd48cbd],edx
  422b48:	or     eax,0xbd825884
  422b4d:	std    
  422b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b4f:	add    eax,0x3ccd7d11
  422b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b55:	or     esi,edx
  422b57:	sub    eax,0xb83cad1f
  422b5c:	mov    esi,DWORD PTR [esi]
  422b5e:	cmp    DWORD PTR [edx],ecx
  422b60:	in     al,dx
  422b61:	popa   
  422b62:	sub    cl,ah
  422b64:	add    DWORD PTR [esi+0x476de453],esi
  422b6a:	xchg   ebx,eax
  422b6b:	jo     0x422b2c
  422b6d:	push   ebp
  422b6e:	add    eax,0xac8a3427
  422b73:	test   dh,al
  422b75:	inc    ebp
  422b76:	dec    ebp
  422b77:	jb     0x422b1e
  422b79:	popa   
  422b7a:	into   
  422b7b:	(bad)  
  422b7c:	xor    al,BYTE PTR [edx+eax*4]
  422b7f:	sbb    bh,BYTE PTR [edi-0x53d22234]
  422b85:	and    DWORD PTR [ecx+0x5f],edi
  422b88:	scas   al,BYTE PTR es:[edi]
  422b89:	push   edx
  422b8a:	imul   ebx,DWORD PTR [ebx-0x70ed995],0xa0d31b7
  422b94:	sbb    eax,0x398e3f8
  422b99:	push   edi
  422b9a:	pop    edx
  422b9b:	fcomp  QWORD PTR [edx]
  422b9d:	dec    ebx
  422b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b9f:	call   0x86ff:0x19c6ba2d
  422ba6:	or     dh,BYTE PTR [ebx+0x4619b94a]
  422bac:	cwde   
  422bad:	mov    ebx,0xf1cb5d1a
  422bb2:	out    dx,al
  422bb3:	jns    0x422bfa
  422bb5:	imul   eax,eax,0x5f2e561d
  422bbb:	ja     0x422b94
  422bbd:	outs   dx,DWORD PTR ds:[esi]
  422bbe:	retf   
  422bbf:	call   0xe6a2:0x98d25c2e
  422bc6:	pop    ecx
  422bc7:	xor    al,0x44
  422bc9:	jae    0x422b8e
  422bcb:	mov    al,0xd9
  422bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bce:	xor    cl,BYTE PTR [edi]
  422bd0:	fiadd  DWORD PTR [edi+ebp*8+0x2acc45c1]
  422bd7:	fisub  DWORD PTR [esi-0x5bb3808e]
  422bdd:	repnz mov BYTE PTR [esi+0x47],ch
  422be1:	ss dec ecx
  422be3:	cli    
  422be4:	ds pop ebp
  422be6:	lahf   
  422be7:	hlt    
  422be8:	add    bl,dl
  422bea:	xchg   ecx,eax
  422beb:	inc    esp
  422bec:	pushf  
  422bed:	js     0x422b89
  422bef:	lock jo 0x422bfb
  422bf2:	inc    ebp
  422bf3:	int    0xdc
  422bf5:	test   BYTE PTR [ebp+0x9843836],dl
  422bfb:	xchg   ecx,eax
  422bfc:	(bad)  
  422bfd:	mov    ebx,0x5227c39e
  422c02:	in     eax,dx
  422c03:	pusha  
  422c04:	stos   DWORD PTR es:[edi],eax
  422c05:	fld    QWORD PTR [edx-0x18]
  422c08:	adc    al,0x62
  422c0a:	retf   
  422c0b:	jecxz  0x422c2b
  422c0d:	cmc    
  422c0e:	mov    BYTE PTR ds:0x7c19526f,dh
  422c14:	adc    bl,BYTE PTR [ecx+0x39]
  422c17:	xchg   esi,eax
  422c18:	test   DWORD PTR [edi+0x33],esp
  422c1b:	sub    bh,ah
  422c1d:	ret    0x9173
  422c20:	dec    esi
  422c21:	mov    ds:0x95ddbd09,al
  422c26:	inc    eax
  422c27:	xor    eax,0xf4d4cf46
  422c2c:	xlat   BYTE PTR ds:[ebx]
  422c2d:	mov    BYTE PTR [edi-0x3b],bh
  422c30:	mov    ah,0xb2
  422c32:	add    cl,BYTE PTR [eax-0x79d4d97c]
  422c38:	push   esi
  422c39:	xor    edx,DWORD PTR [edi]
  422c3b:	push   edx
  422c3c:	mov    ds:0xb3d41204,eax
  422c41:	jb     0x422c72
  422c43:	mov    ds:0xc9a94b06,eax
  422c48:	xchg   bl,dl
  422c4a:	adc    esp,DWORD PTR [edi+0x5e]
  422c4d:	cmp    ebx,DWORD PTR [edi]
  422c4f:	sbb    ch,dh
  422c51:	xchg   ebp,eax
  422c52:	mov    eax,0x5b43d0d2
  422c57:	pusha  
  422c58:	sar    ch,1
  422c5a:	sar    DWORD PTR [ecx],0xb0
  422c5d:	mov    ah,0x58
  422c5f:	push   ss
  422c60:	int    0xa9
  422c62:	push   eax
  422c63:	fdiv   DWORD PTR [ebx+edi*1]
  422c66:	bound  ecx,QWORD PTR [ecx+0x142d251d]
  422c6c:	ret    
  422c6d:	imul   esp,DWORD PTR [esi+0x3d477123],0x3890c2f1
  422c77:	cmp    DWORD PTR [ebx+0x28],edx
  422c7a:	add    esi,DWORD PTR [ecx+0x9c3a707]
  422c80:	mov    esi,0x27e403b6
  422c85:	sar    edi,cl
  422c87:	jecxz  0x422c82
  422c89:	xlat   BYTE PTR ds:[ebx]
  422c8a:	(bad)  
  422c8b:	xchg   ebp,eax
  422c8c:	lea    eax,[edx-0x53]
  422c8f:	aad    0x52
  422c91:	jp     0x422c82
  422c93:	mul    BYTE PTR [edi]
  422c95:	in     eax,dx
  422c96:	pop    ss
  422c97:	push   es
  422c98:	iret   
  422c99:	out    0xca,eax
  422c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c9c:	int3   
  422c9d:	repnz dec edi
  422c9f:	fsub   QWORD PTR [esi+eiz*2-0x18]
  422ca3:	push   ebx
  422ca4:	arpl   cx,sp
  422ca6:	adc    edx,DWORD PTR [edx]
  422ca8:	sar    esi,1
  422caa:	sub    al,0x7f
  422cac:	jae    0x422d21
  422cae:	and    eax,0x50143157
  422cb3:	adc    eax,0x120cd171
  422cb8:	aas    
  422cb9:	jg     0x422d23
  422cbb:	pushf  
  422cbc:	jnp    0x422d1c
  422cbe:	sbb    BYTE PTR [eax+0x20],dl
  422cc1:	loopne 0x422d25
  422cc3:	ins    DWORD PTR es:[edi],dx
  422cc4:	mov    dl,0x6f
  422cc6:	std    
  422cc7:	cmp    al,0xe4
  422cc9:	arpl   cx,si
  422ccb:	gs sahf 
  422ccd:	aam    0x8b
  422ccf:	mov    eax,ds:0x4a4d3d43
  422cd4:	or     edi,DWORD PTR [ecx+0x41450e9f]
  422cda:	mov    dl,0x6a
  422cdc:	pop    esp
  422cdd:	in     eax,dx
  422cde:	ja     0x422d51
  422ce0:	out    dx,al
  422ce1:	inc    edi
  422ce2:	dec    ebx
  422ce3:	(bad)  
  422ce4:	fist   WORD PTR ds:0x81569e1b
  422cea:	cdq    
  422ceb:	dec    ebx
  422cec:	add    DWORD PTR [ecx+0x7f],0xef2566ae
  422cf3:	retf   0xff4e
  422cf6:	out    dx,al
  422cf7:	push   edx
  422cf8:	jns    0x422c7f
  422cfa:	addr16 mov bh,0x99
  422cfd:	fstp   QWORD PTR [ecx+0x65]
  422d00:	mov    al,0x42
  422d02:	inc    esp
  422d03:	cs in  al,0x51
  422d06:	lahf   
  422d07:	sbb    al,0x4c
  422d09:	add    dl,dl
  422d0b:	imul   esi,edi,0x6e81ab4f
  422d11:	xchg   edx,eax
  422d12:	xchg   ebx,eax
  422d13:	adc    ch,al
  422d15:	call   DWORD PTR [ecx]
  422d17:	push   ebp
  422d18:	sub    DWORD PTR ds:0x942b4763,eax
  422d1e:	add    eax,DWORD PTR [ebp+eax*4-0x2]
  422d22:	mov    ebp,DWORD PTR [edx+0x38]
  422d25:	and    ah,BYTE PTR [esi-0x30]
  422d28:	adc    al,0xd0
  422d2a:	stos   DWORD PTR es:[edi],eax
  422d2b:	fild   DWORD PTR [esi-0x2ab44772]
  422d31:	push   0x81ba76fe
  422d36:	pop    ecx
  422d37:	imul   ecx,DWORD PTR [eax-0x72757f5d],0xfa0d2ed0
  422d41:	inc    edi
  422d42:	loop   0x422d3a
  422d44:	mov    ch,0xca
  422d46:	out    0xa4,al
  422d48:	add    BYTE PTR [edx],bl
  422d4a:	fsubr  QWORD PTR [ebx+eiz*1+0x47]
  422d4e:	adc    eax,DWORD PTR [ebx]
  422d50:	bound  eax,QWORD PTR [eax+0x1e92697d]
  422d56:	daa    
  422d57:	cmp    ah,ch
  422d59:	mov    eax,ds:0x978677be
  422d5e:	icebp  
  422d5f:	sar    edi,0xbf
  422d62:	aam    0xcf
  422d64:	es sub eax,0x69ed97ce
  422d6a:	jno    0x422cee
  422d6c:	jo     0x422dae
  422d6e:	jmp    0xb0bf3c5
  422d73:	scas   al,BYTE PTR es:[edi]
  422d74:	sbb    al,0x49
  422d76:	arpl   WORD PTR ss:[eax],bp
  422d79:	push   ds
  422d7a:	mov    ebx,edx
  422d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d7d:	mov    ebp,0xce76cf81
  422d82:	dec    edx
  422d83:	stos   BYTE PTR es:[edi],al
  422d84:	xor    ch,dh
  422d86:	(bad)  
  422d88:	fsub   QWORD PTR [edi+0x4f3cdaf5]
  422d8e:	cmp    eax,0xa0cc26d1
  422d93:	add    DWORD PTR [esi+ebp*8],ebp
  422d96:	loopne 0x422d1f
  422d98:	dec    edi
  422d99:	xlat   BYTE PTR ds:[ebx]
  422d9a:	daa    
  422d9b:	dec    ebx
  422d9c:	mov    edx,0xdd3fb3db
  422da1:	call   0x5028d534
  422da6:	inc    ebx
  422da7:	mov    DWORD PTR [ebp+0x54c31734],ecx
  422dad:	icebp  
  422dae:	mov    edx,0xc65ea0df
  422db3:	sbb    DWORD PTR [ecx],edi
  422db5:	mov    al,ds:0x57adc67e
  422dba:	and    al,0x8d
  422dbc:	jb     0x422df4
  422dbe:	sub    ah,dh
  422dc0:	cmp    edi,DWORD PTR [ebx-0x41]
  422dc3:	mov    dh,0xed
  422dc5:	mov    bh,0x2d
  422dc7:	imul   edi,ecx,0x2f
  422dca:	dec    bx
  422dcc:	lds    edx,FWORD PTR [ebx+0x65]
  422dcf:	test   al,0x90
  422dd1:	pop    ebx
  422dd2:	xor    DWORD PTR fs:[ebx-0x35],esp
  422dd6:	jb     0x422e04
  422dd8:	push   ss
  422dd9:	enter  0x492b,0xb2
  422ddd:	test   eax,edi
  422ddf:	pop    esp
  422de0:	arpl   WORD PTR [ebp-0x7f],bp
  422de3:	push   ds
  422de4:	mov    dl,0xee
  422de6:	mov    ch,0x9c
  422de8:	cdq    
  422de9:	push   edi
  422dea:	scas   al,BYTE PTR es:[edi]
  422deb:	mov    cl,0x86
  422ded:	loopne 0x422e4e
  422def:	arpl   WORD PTR [edx+0x3a947a6],dx
  422df5:	bound  ebp,QWORD PTR [esi+edx*1+0x7f]
  422df9:	mov    WORD PTR [eax],ds
  422dfb:	jle    0x422e5b
  422dfd:	xchg   bh,bh
  422dff:	jecxz  0x422d92
  422e01:	xchg   ebx,eax
  422e02:	aaa    
  422e03:	in     al,dx
  422e04:	test   eax,0xa6bc05b4
  422e09:	cmp    dh,BYTE PTR [esi+0x4efc6e9f]
  422e0f:	popf   
  422e10:	cmp    al,BYTE PTR [ecx]
  422e12:	pop    edx
  422e13:	cmp    al,0x1c
  422e15:	lods   ax,WORD PTR ds:[esi]
  422e17:	sar    DWORD PTR [eax-0x40],1
  422e1a:	jge    0x422e64
  422e1c:	and    dl,BYTE PTR [ebp+0x3a6a40cc]
  422e22:	xchg   ebp,eax
  422e23:	cmp    ah,BYTE PTR [edi]
  422e25:	sbb    DWORD PTR [edi+edx*2-0x16],edx
  422e29:	xor    ebp,ecx
  422e2b:	push   edi
  422e2c:	xchg   esp,eax
  422e2d:	add    BYTE PTR [ecx],dl
  422e2f:	arpl   WORD PTR [esi],ax
  422e31:	mov    bh,0x20
  422e33:	pusha  
  422e34:	repz leave 
  422e36:	ja     0x422e9d
  422e38:	jl     0x422e99
  422e3a:	sar    bl,1
  422e3c:	or     dl,dl
  422e3e:	iret   
  422e3f:	fwait
  422e40:	lock addr16 or BYTE PTR [bp+di+0x7b],bl
  422e46:	inc    ebp
  422e47:	push   0xffffffca
  422e49:	jnp    0x422eab
  422e4b:	aas    
  422e4c:	or     dh,dh
  422e4e:	loope  0x422e1c
  422e50:	popa   
  422e51:	nop
  422e52:	mov    ch,BYTE PTR [ebp+0x5e]
  422e55:	es add eax,edx
  422e58:	lods   eax,DWORD PTR ds:[esi]
  422e59:	inc    edi
  422e5a:	cmp    eax,0x5fcd4091
  422e5f:	xchg   bl,cl
  422e61:	loopne 0x422e4a
  422e63:	scas   eax,DWORD PTR es:[edi]
  422e64:	stc    
  422e65:	xchg   ebp,eax
  422e66:	sbb    BYTE PTR [esi+0x50],bl
  422e69:	xor    dh,BYTE PTR [edx-0x55]
  422e6c:	sub    ecx,DWORD PTR [edx+0x3b]
  422e6f:	push   0xabd42c70
  422e74:	test   ah,dh
  422e76:	xchg   BYTE PTR [ebx-0x65],dl
  422e79:	xor    esi,DWORD PTR [edi-0x650d184]
  422e7f:	dec    ecx
  422e81:	jbe    0x422ef6
  422e83:	push   ebp
  422e84:	add    esp,esi
  422e86:	add    al,0x1a
  422e88:	mov    bh,0xef
  422e8a:	jo     0x422e90
  422e8c:	out    dx,eax
  422e8d:	(bad)  
  422e8e:	pop    ds
  422e8f:	mov    ebx,0x7c21ed66
  422e94:	adc    BYTE PTR [edi],dh
  422e96:	pushf  
  422e97:	hlt    
  422e98:	jb     0x422ecf
  422e9a:	test   eax,0xb5f3c7df
  422e9f:	push   ss
  422ea0:	clc    
  422ea1:	pop    ecx
  422ea2:	ret    0x77ec
  422ea5:	jmp    0x495:0x89922784
  422eac:	stos   BYTE PTR es:[edi],al
  422ead:	ret    
  422eae:	ins    DWORD PTR es:[edi],dx
  422eaf:	pop    ss
  422eb0:	dec    esp
  422eb1:	sti    
  422eb2:	jecxz  0x422f30
  422eb4:	mov    edx,0x4cb95c3e
  422eb9:	sub    al,0x33
  422ebb:	scas   al,BYTE PTR es:[edi]
  422ebc:	pop    ss
  422ebd:	inc    ebx
  422ebe:	xor    DWORD PTR ds:0xbe1a32b3,eax
  422ec4:	popf   
  422ec5:	out    0x4f,al
  422ec7:	(bad)  
  422ec8:	sti    
  422ec9:	pop    esp
  422eca:	sbb    ah,BYTE PTR [edi]
  422ecc:	mov    ebp,0x93d54785
  422ed1:	cmp    eax,0x21190faa
  422ed6:	mov    ch,0x1d
  422ed8:	jae    0x422eb7
  422eda:	cmp    al,0xe7
  422edc:	push   ss
  422edd:	push   esp
  422ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422edf:	cmp    al,0x91
  422ee1:	pop    esp
  422ee2:	mov    dl,0x27
  422ee4:	ret    0x51fd
  422ee7:	nop
  422ee8:	stos   DWORD PTR es:[edi],eax
  422ee9:	xchg   edi,eax
  422eea:	sbb    BYTE PTR [ebp+0x4e0f2530],0x23
  422ef1:	arpl   WORD PTR [edx],dx
  422ef3:	mov    cl,BYTE PTR [esp+esi*8+0x4d924c98]
  422efa:	cmp    eax,ecx
  422efc:	mov    DWORD PTR [eax-0x51],ecx
  422eff:	add    BYTE PTR [eax],al
  422f01:	xor    DWORD PTR [eax+0x12],ebp
  422f04:	mov    edi,0xfed2e3f0
  422f09:	dec    esp
  422f0a:	shl    bl,0x3f
  422f0d:	mov    bh,0x85
  422f0f:	sbb    al,0x69
  422f11:	int    0x15
  422f13:	not    BYTE PTR [edi]
  422f15:	clc    
  422f16:	sahf   
  422f17:	cmp    BYTE PTR [edx],al
  422f19:	int3   
  422f1a:	shl    BYTE PTR [ebp+0x76df797a],1
  422f20:	inc    ebx
  422f21:	(bad)  
  422f22:	lea    ecx,[ecx]
  422f24:	jnp    0x422f43
  422f26:	inc    ecx
  422f27:	inc    edx
  422f28:	je     0x422f27
  422f2a:	inc    esi
  422f2b:	in     eax,0x6e
  422f2d:	dec    ebp
  422f2e:	sub    BYTE PTR [edi+eax*1-0x144a2c85],0x5a
  422f36:	push   esi
  422f37:	xchg   ecx,eax
  422f38:	adc    edi,DWORD PTR [ebp-0x23]
  422f3b:	and    BYTE PTR ds:[ebp-0x1e341f58],ah
  422f42:	enter  0xbbf6,0xa6
  422f46:	les    eax,FWORD PTR [esi+0x56]
  422f49:	aas    
  422f4a:	popf   
  422f4b:	cmp    BYTE PTR [edi+0x52],ah
  422f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f4f:	push   es
  422f50:	mov    al,ds:0xa26697fc
  422f55:	adc    eax,0xee1b8c26
  422f5a:	ret    0xa7ac
  422f5d:	sub    DWORD PTR [edx+ebp*8],0xffffffd8
  422f61:	xchg   ebx,eax
  422f63:	jo     0x422f0a
  422f65:	push   0x978f9132
  422f6a:	add    eax,DWORD PTR [ebp-0xb19cfd5]
  422f70:	push   ecx
  422f71:	cwde   
  422f72:	std    
  422f73:	idiv   DWORD PTR [ebx-0x56]
  422f76:	shl    dl,1
  422f78:	jbe    0x422fe3
  422f7a:	sti    
  422f7b:	jb     0x422fa4
  422f7d:	popa   
  422f7e:	sub    cl,BYTE PTR [ecx]
  422f80:	jmp    0xf4cd:0xfcf6946e
  422f87:	retf   0x8b0d
  422f8a:	sbb    al,0xb3
  422f8c:	ror    BYTE PTR [edi+esi*8],1
  422f8f:	hlt    
  422f90:	ins    BYTE PTR es:[edi],dx
  422f91:	call   0x100175e6
  422f96:	bound  edi,QWORD PTR [edi-0x212bc3dc]
  422f9c:	mov    ebp,0xbb44bc76
  422fa1:	push   ebp
  422fa2:	lea    eax,es:[ebx]
  422fa5:	out    dx,eax
  422fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fa7:	jno    0x422fde
  422fa9:	dec    edx
  422faa:	pop    es
  422fab:	add    al,0x80
  422fad:	mov    edx,0x28936a0a
  422fb2:	push   ds
  422fb3:	les    edi,FWORD PTR [edi+edx*1]
  422fb6:	es (bad) 
  422fb9:	sti    
  422fba:	inc    ecx
  422fbb:	call   0x47ac:0x89c8474f
  422fc2:	rcl    DWORD PTR [ebp-0x55516caf],cl
  422fc8:	popf   
  422fc9:	mov    edx,0x2c4caa2
  422fce:	add    al,BYTE PTR [ebx-0x76]
  422fd1:	dec    edi
  422fd2:	cld    
  422fd3:	cdq    
  422fd4:	fst    QWORD PTR [edi-0x7bad7e36]
  422fda:	(bad)  
  422fdc:	mov    edx,0xfc5e
  422fe1:	add    BYTE PTR [edi],cl
  422fe3:	pop    ebx
  422fe4:	test   BYTE PTR [esi],dl
  422fe6:	aam    0xdf
  422fe8:	lahf   
  422fe9:	pop    ebx
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    eax,DWORD PTR ds:0xa0efbcbe
  422ff3:	test   eax,0x4f50001
  422ff8:	add    BYTE PTR [eax],al
  422ffa:	popf   
  422ffb:	jle    0x423011
  422ffd:	adc    al,0x85
  422fff:	xor    al,0xe8
  423001:	aas    
  423002:	pop    ebp
  423003:	xor    ah,BYTE PTR [edi+edi*4+0x7a6186af]
  42300a:	fld    st(2)
  42300c:	lock fcomp QWORD PTR [ecx+0x2b]
  423010:	daa    
  423011:	inc    eax
  423012:	sub    ah,cl
  423014:	sub    al,0xea
  423016:	inc    esp
  423017:	rcr    DWORD PTR [esi+0x548b37d1],0x5e
  42301e:	inc    ecx
  42301f:	rol    DWORD PTR [esi-0x5a],cl
  423022:	or     eax,0xbf5b1881
  423027:	jmp    0x423087
  423029:	dec    ecx
  42302a:	add    al,BYTE PTR [ebx-0x7a]
  42302d:	fcmovb st,st(4)
  42302f:	jnp    0x4230ab
  423031:	xchg   DWORD PTR [ebx-0x3b],eax
  423034:	jbe    0x423058
  423036:	bound  ebp,QWORD PTR [edx]
  423038:	xchg   esp,eax
  423039:	and    BYTE PTR [ecx+ebp*2-0x6734c32e],0x97
  423041:	loope  0x423091
  423043:	(bad)  
  423044:	push   ss
  423045:	fnstsw WORD PTR [esi+0x1b]
  423048:	mov    al,0xfd
  42304a:	and    BYTE PTR [esp+esi*1-0x73],ah
  42304e:	dec    esi
  42304f:	sbb    ah,bh
  423051:	add    BYTE PTR [ecx+0x49da830e],0x6a
  423058:	adc    ecx,esp
  42305a:	adc    DWORD PTR [ebp+edi*1-0xe8bd9ce],eax
  423061:	lods   eax,DWORD PTR ds:[esi]
  423062:	cmp    eax,0x5a6230f7
  423067:	shl    BYTE PTR ss:[ebx-0x3d643b5c],1
  42306e:	add    al,0xce
  423070:	ja     0x42302f
  423072:	adc    ebx,DWORD PTR [esi]
  423074:	scas   al,BYTE PTR es:[edi]
  423075:	ins    DWORD PTR es:[edi],dx
  423076:	out    0xfc,al
  423078:	mov    eax,ebp
  42307a:	xchg   ebp,eax
  42307b:	mov    WORD PTR [eax-0x6a],gs
  42307e:	shl    DWORD PTR [ebp-0x1c],1
  423081:	clc    
  423082:	sub    ebp,DWORD PTR [esi-0x52112660]
  423088:	mov    BYTE PTR [ebp-0x66],dh
  42308b:	xor    ebx,DWORD PTR [edi+0x10a51e55]
  423091:	inc    ecx
  423092:	mov    ds:0xcb038a7,al
  423097:	xchg   edi,eax
  423098:	jmp    0x81493bb4
  42309d:	nop
  42309e:	sub    BYTE PTR [ecx-0xc],al
  4230a1:	dec    DWORD PTR [edx+eiz*8+0x178bda18]
  4230a8:	jp     0x423058
  4230aa:	push   0x76
  4230ac:	sub    bh,dh
  4230ae:	jae    0x4230e3
  4230b0:	push   ds
  4230b1:	aam    0x9
  4230b3:	pop    ebx
  4230b4:	outs   dx,DWORD PTR ds:[esi]
  4230b5:	in     eax,0xdd
  4230b7:	jns    0x4230a2
  4230b9:	mov    BYTE PTR [edx-0x51],dh
  4230bc:	xchg   BYTE PTR [esi-0x5a],dl
  4230bf:	or     ah,BYTE PTR [edi-0x23]
  4230c2:	popa   
  4230c3:	sub    eax,0xc8695a19
  4230c8:	ds cmp al,0x16
  4230cb:	repnz das 
  4230cd:	in     al,dx
  4230ce:	xor    ebx,DWORD PTR [ebp-0x3382a7ec]
  4230d4:	sar    BYTE PTR [ebx+0x470d2f9a],0xaa
  4230db:	in     al,0xd1
  4230dd:	loopne 0x423078
  4230df:	stc    
  4230e0:	lods   al,BYTE PTR ds:[esi]
  4230e1:	(bad)  
  4230e2:	lock xor DWORD PTR es:[edi+0x79],edi
  4230e7:	pop    esi
  4230e8:	(bad)  
  4230e9:	rol    DWORD PTR [esi-0x36],cl
  4230ec:	idiv   BYTE PTR [ebx+0x170c3952]
  4230f2:	sti    
  4230f3:	jno    0x4230a6
  4230f5:	mov    ds:0x8fd5bb6f,al
  4230fa:	add    al,0x10
  4230fc:	jl     0x423165
  4230fe:	retf   
  4230ff:	and    bl,BYTE PTR [eax-0x15]
  423102:	(bad)  
  423103:	dec    ebx
  423104:	mov    eax,fs
  423106:	(bad)  
  423107:	sbb    eax,0xe99d1a7e
  42310c:	push   ebx
  42310d:	imul   edi,DWORD PTR [eax+0x3],0x36
  423111:	into   
  423112:	xchg   ebp,eax
  423113:	fwait
  423114:	lahf   
  423115:	mov    ecx,0x1bf8e427
  42311a:	ja     0x423196
  42311c:	in     eax,dx
  42311d:	scas   eax,DWORD PTR es:[edi]
  42311e:	stos   DWORD PTR es:[edi],eax
  42311f:	test   eax,0xb2015df3
  423125:	(bad)  
  423126:	push   0xa0c75ecc
  42312b:	pop    ss
  42312c:	popf   
  42312d:	ret    0xf840
  423130:	scas   al,BYTE PTR es:[edi]
  423131:	push   cs
  423132:	push   0xffffffda
  423134:	mov    al,ds:0xe3b4523a
  423139:	out    dx,al
  42313a:	or     ah,BYTE PTR [ebx-0x32]
  42313d:	mov    esi,0xbfddb7d2
  423142:	jne    0x42317b
  423144:	push   edx
  423145:	(bad)  
  423146:	fisub  DWORD PTR [eax]
  423148:	(bad)  
  423149:	out    dx,eax
  42314a:	xor    eax,ecx
  42314c:	xor    eax,0x72a766ed
  423151:	gs out 0xf6,al
  423154:	adc    eax,0x819ddf3f
  423159:	mov    al,ds:0x4c3491e4
  42315e:	and    dl,BYTE PTR [eax]
  423160:	ficomp WORD PTR [edi-0xe]
  423163:	push   ebx
  423164:	inc    edx
  423165:	sti    
  423166:	jge    0x42317e
  423168:	add    DWORD PTR [ecx+ecx*1-0x406a49],edx
  42316f:	cmp    esi,DWORD PTR [ebx+edx*1-0x8]
  423173:	inc    edx
  423174:	test   al,0xfc
  423176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423177:	xchg   ebx,eax
  423178:	pop    edi
  423179:	das    
  42317a:	sub    ebx,DWORD PTR gs:[ecx+0x21]
  42317e:	dec    esp
  42317f:	cmp    dh,dh
  423181:	push   ss
  423182:	mov    WORD PTR [esi+edx*1+0x78918a4c],ss
  423189:	scas   al,BYTE PTR es:[edi]
  42318a:	out    dx,al
  42318b:	fcomp  QWORD PTR [ebp-0x3c]
  42318e:	std    
  42318f:	mov    eax,0xe83db248
  423194:	(bad)  
  423195:	les    ebp,FWORD PTR [edx]
  423197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423198:	adc    al,0x31
  42319a:	mov    al,ds:0x9d61a984
  42319f:	out    0x6b,al
  4231a1:	push   ecx
  4231a2:	fisub  WORD PTR [esi]
  4231a4:	sbb    dh,BYTE PTR [edi+0x61060048]
  4231aa:	xchg   BYTE PTR [ebp+0xef19c19],al
  4231b0:	cdq    
  4231b1:	jle    0x423171
  4231b3:	and    DWORD PTR [edx],esp
  4231b5:	dec    ebx
  4231b6:	lods   al,BYTE PTR ds:[esi]
  4231b7:	iret   
  4231b8:	adc    DWORD PTR [eax],0xffffffc4
  4231bb:	jae    0x42313d
  4231bd:	arpl   WORD PTR [esi+0x54],si
  4231c0:	in     eax,0x51
  4231c2:	xor    al,BYTE PTR [edx-0x36]
  4231c5:	(bad)  
  4231c6:	mov    edi,0x2dfd6451
  4231cb:	test   eax,0xc6e3bdad
  4231d1:	fnop   
  4231d3:	add    BYTE PTR [edi+0x5f55e292],bl
  4231d9:	dec    ebx
  4231da:	(bad)  
  4231db:	cmp    eax,0x9b2a7b1d
  4231e0:	ror    BYTE PTR [ebx+0x7b0d3357],cl
  4231e6:	(bad)  
  4231e7:	mov    fs,WORD PTR [edi+0x62153248]
  4231ed:	jmp    0xd03cbbb
  4231f2:	sti    
  4231f3:	mov    eax,ds:0x45d06c7d
  4231f8:	inc    eax
  4231f9:	dec    esi
  4231fa:	out    0xf6,al
  4231fc:	rcl    BYTE PTR [ebx],0xe8
  4231ff:	bound  ecx,QWORD PTR [esi+0x2754baef]
  423205:	fsub   QWORD PTR [ecx-0xe]
  423208:	xchg   DWORD PTR [ecx-0x348afe5a],esi
  42320e:	dec    esp
  42320f:	push   0x2e
  423211:	xchg   ebp,eax
  423212:	(bad)  
  423213:	sub    dl,bh
  423215:	dec    esi
  423216:	pop    es
  423217:	cmp    edi,DWORD PTR [esi+0x3f855d8b]
  42321d:	mov    eax,0xa306bb7c
  423222:	cmp    DWORD PTR [edi+0x2d3ecfa6],esi
  423228:	call   0x1146:0x84d73f22
  42322f:	ss sub eax,0xae08bf69
  423235:	adc    dh,BYTE PTR [edi]
  423237:	jns    0x423226
  423239:	hlt    
  42323a:	(bad)
  42323d:	std    
  42323e:	int3   
  42323f:	inc    esp
  423240:	mov    al,0x2e
  423242:	dec    esp
  423243:	sub    edi,DWORD PTR [ebp+0xa]
  423246:	jecxz  0x4232be
  423248:	mov    eax,ds:0xca66673e
  42324d:	aas    
  42324e:	inc    edi
  42324f:	jb     0x423257
  423251:	lods   eax,DWORD PTR ds:[esi]
  423252:	test   eax,0x8a094cc3
  423257:	(bad)  
  423258:	cld    
  423259:	and    eax,0xa8626925
  42325e:	xchg   BYTE PTR [eax],bh
  423260:	push   esp
  423261:	mov    ecx,DWORD PTR [edi]
  423263:	(bad)  
  423265:	ds addr16 rol edx,1
  423269:	aas    
  42326a:	push   ebx
  42326b:	loope  0x42324c
  42326d:	je     0x423238
  42326f:	rcr    edi,1
  423271:	mul    DWORD PTR [esi-0x1612383c]
  423277:	cdq    
  423278:	nop
  423279:	dec    eax
  42327a:	repz fstp TBYTE PTR [ebx+0x45e86509]
  423281:	daa    
  423282:	imul   esi,ecx,0x5dfca560
  423288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423289:	pop    eax
  42328a:	out    0x57,eax
  42328c:	bound  ecx,QWORD PTR [edx-0x24]
  42328f:	sbb    esi,eax
  423291:	mov    dl,0x12
  423293:	mov    edi,0x40b4afd1
  423298:	sbb    bh,BYTE PTR ds:0xfe9cffbd
  42329e:	pop    edi
  42329f:	inc    edi
  4232a0:	xchg   ecx,ebx
  4232a2:	xor    esp,DWORD PTR [edi+esi*2]
  4232a5:	mov    ah,0xd
  4232a7:	inc    esp
  4232a8:	adc    al,0xdb
  4232aa:	mov    edi,0x34e178b8
  4232af:	enter  0xe078,0xb8
  4232b3:	cdq    
  4232b4:	ins    BYTE PTR es:[edi],dx
  4232b5:	sbb    BYTE PTR [edi+0x42d123a8],bh
  4232bb:	mul    BYTE PTR gs:[ecx+esi*8-0x5a93b411]
  4232c3:	push   edi
  4232c4:	inc    esp
  4232c5:	scas   al,BYTE PTR es:[edi]
  4232c6:	rol    DWORD PTR [ecx],1
  4232c8:	adc    ebp,DWORD PTR ss:[ecx+0x4b58567b]
  4232cf:	into   
  4232d0:	add    al,0x3f
  4232d2:	les    edi,FWORD PTR [edi+0x6d]
  4232d5:	mov    eax,DWORD PTR ds:0xdf923d12
  4232db:	mov    ds:0x45f76853,al
  4232e0:	xor    ah,al
  4232e2:	jecxz  0x423346
  4232e4:	scas   al,BYTE PTR es:[edi]
  4232e5:	test   eax,0xcc366ad
  4232ea:	scas   al,BYTE PTR es:[edi]
  4232eb:	lods   eax,DWORD PTR ds:[esi]
  4232ec:	add    DWORD PTR [ebp+0x1d6a1744],ebx
  4232f2:	push   eax
  4232f3:	mov    ecx,0x80444425
  4232f9:	cmp    DWORD PTR [eax],ebx
  4232fb:	loop   0x4232ea
  4232fd:	pusha  
  4232fe:	push   edi
  4232ff:	xor    al,0x88
  423301:	pushf  
  423302:	jp     0x42334d
  423304:	push   edx
  423305:	jnp    0x4232c8
  423307:	int3   
  423308:	mov    ah,0xdd
  42330a:	fld    TBYTE PTR [esi+0x12301dc5]
  423310:	aam    0x4
  423312:	scas   eax,DWORD PTR es:[edi]
  423313:	aam    0x2d
  423315:	retf   0xac19
  423318:	repz jo 0x423368
  42331b:	shl    DWORD PTR [ecx-0x152a2c9],1
  423321:	or     al,BYTE PTR [eax-0x4554d318]
  423327:	scas   al,BYTE PTR es:[edi]
  423328:	push   ds
  423329:	push   ss
  42332a:	dec    edi
  42332b:	bound  ecx,QWORD PTR [eax+0x170210ea]
  423331:	push   0xffffffe8
  423333:	push   0xb8844c01
  423338:	gs inc esp
  42333a:	add    DWORD PTR [ecx+0x396c8f9b],ebx
  423340:	dec    ebx
  423341:	jecxz  0x4232e4
  423343:	cdq    
  423344:	push   cs
  423345:	fidiv  WORD PTR [ebx+ebp*4-0x2a5874b0]
  42334c:	aad    0x8
  42334e:	test   DWORD PTR [eax-0x3a0a1df1],edx
  423354:	call   0x567dbbce
  423359:	push   ecx
  42335a:	call   0xbe60:0x498dbd22
  423361:	dec    ebp
  423362:	mov    ecx,0x3f2e6ced
  423367:	push   ss
  423368:	dec    ebx
  423369:	dec    esi
  42336a:	cmp    ecx,DWORD PTR [ebp+0x4c]
  42336d:	in     eax,0x34
  42336f:	mov    dh,0xd1
  423371:	xchg   esi,eax
  423372:	hlt    
  423373:	pop    ebx
  423374:	sbb    DWORD PTR [esp+ebp*4-0x70dde43c],ecx
  42337b:	jg     0x4233a3
  42337d:	cmp    al,0x7d
  42337f:	xor    DWORD PTR [ecx+0x226e8ec2],esi
  423385:	sub    dh,BYTE PTR [ebx+0x5ff4409a]
  42338b:	sbb    BYTE PTR [ebx],bl
  42338d:	ret    0x18bb
  423390:	xchg   esi,eax
  423391:	dec    esp
  423392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423393:	xor    esp,DWORD PTR [ebp+0x5c]
  423396:	mov    ds:0x36032c8a,al
  42339b:	pop    edi
  42339c:	mov    ecx,0xf6537235
  4233a1:	dec    eax
  4233a2:	mov    ah,0xc3
  4233a4:	mov    ch,0x52
  4233a6:	out    0x47,eax
  4233a8:	cmp    BYTE PTR ds:0x71775906,0x4
  4233af:	clc    
  4233b0:	cwde   
  4233b1:	inc    esi
  4233b2:	jp     0x4233ab
  4233b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233b5:	push   0xffffffd4
  4233b7:	push   edx
  4233b8:	int3   
  4233b9:	dec    esp
  4233ba:	mov    bh,0x69
  4233bc:	xchg   edi,eax
  4233bd:	sub    ah,BYTE PTR [esi]
  4233bf:	mov    edx,DWORD PTR [esi-0x7730f759]
  4233c5:	inc    eax
  4233c6:	cvtdq2ps xmm5,XMMWORD PTR [edi-0x5d]
  4233ca:	mov    DWORD PTR [edx-0x63],edx
  4233cd:	daa    
  4233ce:	fild   QWORD PTR [edi-0x46]
  4233d1:	pop    esp
  4233d2:	inc    esi
  4233d3:	scas   eax,DWORD PTR es:[edi]
  4233d4:	xchg   ebp,eax
  4233d5:	pop    es
  4233d6:	or     esi,DWORD PTR [ebx+0x7a]
  4233d9:	add    al,0x6f
  4233db:	scas   al,BYTE PTR es:[edi]
  4233dc:	aaa    
  4233dd:	imul   edi,DWORD PTR [esi+ebp*8-0x55],0x69f80ff1
  4233e5:	xchg   ebx,eax
  4233e6:	dec    eax
  4233e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233e8:	stos   BYTE PTR es:[edi],al
  4233e9:	enter  0x4d85,0x3f
  4233ed:	inc    ebx
  4233ee:	shl    eax,0x50
  4233f1:	add    DWORD PTR [ecx-0x4e4bf4a7],edi
  4233f7:	ins    DWORD PTR es:[edi],dx
  4233f8:	xchg   ebp,eax
  4233f9:	inc    esi
  4233fa:	(bad)  
  4233fb:	data16 sbb BYTE PTR fs:[ebx+0x2b],dl
  423400:	jle    0x423389
  423402:	xor    al,0xd9
  423404:	and    eax,0x6777c825
  423409:	sub    dl,BYTE PTR [ebp-0x7a769342]
  42340f:	add    esp,ebp
  423411:	shr    BYTE PTR [esi+eax*4],0x85
  423415:	lar    ebp,WORD PTR [ebp-0x48260d89]
  42341c:	retf   0x2871
  42341f:	fsubr  st,st(3)
  423421:	inc    ebx
  423422:	cwde   
  423423:	sub    dh,0xd6
  423426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423427:	mov    bh,0xda
  423429:	pushf  
  42342a:	pop    es
  42342b:	lds    esp,FWORD PTR [edi+0xa]
  42342e:	push   cs
  42342f:	cmp    eax,0xa347c1ab
  423434:	shr    DWORD PTR [esi+0x74],cl
  423437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423438:	dec    ecx
  423439:	arpl   WORD PTR [edi+esi*8+0x51e67e75],si
  423440:	dec    edi
  423441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423442:	sub    al,0x2c
  423444:	pop    esp
  423445:	out    dx,eax
  423446:	mov    eax,DWORD PTR [ebx]
  423448:	add    ebp,DWORD PTR [ecx]
  42344a:	into   
  42344b:	sbb    al,0xcc
  42344d:	mov    eax,eax
  42344f:	or     ebx,DWORD PTR [ebp+0x1c89b833]
  423455:	adc    al,0x25
  423457:	test   al,0xd
  423459:	and    ecx,DWORD PTR [ecx-0x1cc8015d]
  42345f:	imul   ecx,DWORD PTR cs:[eax+ebx*4-0x18],0x27be407c
  423468:	push   esi
  423469:	adc    esi,DWORD PTR [ebx-0x11]
  42346c:	inc    ebp
  42346d:	aas    
  42346e:	mov    ecx,0xccd19432
  423473:	inc    edi
  423474:	repnz sub BYTE PTR [edi+edi*8-0x3674574f],bh
  42347c:	inc    ebx
  42347d:	sar    DWORD PTR [esi],0x3f
  423480:	fist   WORD PTR [ebp-0x170ba58b]
  423486:	mov    al,ds:0x7f47c584
  42348b:	scas   eax,DWORD PTR es:[edi]
  42348c:	lahf   
  42348d:	push   ds
  42348e:	mov    ebx,DWORD PTR [eax]
  423490:	mov    dh,0x66
  423492:	jb     0x423419
  423494:	js     0x42349c
  423496:	mov    al,ds:0xcf1b86ea
  42349b:	cmp    BYTE PTR [ecx+0x7c],ch
  42349e:	pusha  
  42349f:	jne    0x423438
  4234a1:	inc    edi
  4234a2:	cmp    BYTE PTR [esi+eiz*8+0x66304d01],dl
  4234a9:	xor    DWORD PTR [ebx],eax
  4234ab:	ror    BYTE PTR [eax-0x3e1de189],cl
  4234b1:	adc    edx,DWORD PTR [eax]
  4234b3:	js     0x423457
  4234b5:	int3   
  4234b6:	(bad)  
  4234b8:	push   edi
  4234b9:	out    0x8d,eax
  4234bb:	jns    0x423446
  4234bd:	adc    al,0xf8
  4234bf:	xchg   edx,eax
  4234c0:	pop    ecx
  4234c1:	nop
  4234c2:	aam    0xbe
  4234c4:	in     eax,dx
  4234c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234c6:	fwait
  4234c7:	sbb    DWORD PTR [esi-0x3f465930],edi
  4234cd:	loop   0x423549
  4234cf:	push   ds
  4234d0:	push   eax
  4234d1:	mov    WORD PTR [ebx+0x41121101],?
  4234d7:	cmp    eax,0x8e92d9d4
  4234dc:	int3   
  4234dd:	enter  0x758f,0xae
  4234e1:	int    0xe3
  4234e3:	mov    bh,0xa1
  4234e5:	push   0x75
  4234e7:	dec    ebp
  4234e8:	pop    ebp
  4234e9:	jmp    0x4c:0x8a724930
  4234f0:	add    BYTE PTR [eax],al
  4234f2:	dec    ecx
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	daa    
  4234ff:	jmp    0x4234e4
  423501:	push   ecx
  423502:	xchg   ebp,eax
  423503:	scas   al,BYTE PTR es:[edi]
  423504:	add    DWORD PTR [eax],eax
  423506:	cmc    
  423507:	add    al,0x0
  423509:	add    BYTE PTR [ecx-0x7245314b],bh
  42350f:	clc    
  423510:	neg    DWORD PTR [edi-0x63]
  423513:	xchg   ecx,eax
  423514:	fadd   DWORD PTR [eax]
  423516:	dec    ebp
  423517:	mov    ecx,0x63b6d86f
  42351c:	cmp    eax,0x619866d0
  423521:	dec    ebp
  423522:	mov    ecx,0xf1bb91ee
  423527:	push   edx
  423528:	mov    DWORD PTR [esp+edx*4],eax
  42352b:	mov    eax,0xee24d78
  423530:	and    eax,0x9cb4f371
  423535:	cmp    BYTE PTR [esi],dh
  423537:	ficomp WORD PTR [esi-0x46]
  42353a:	jbe    0x42356b
  42353c:	aad    0xd4
  42353e:	pop    edi
  42353f:	shl    si,0xdd
  423543:	mov    ah,0x2b
  423545:	mov    esi,0xbef39d59
  42354a:	mov    cl,0xa3
  42354c:	xchg   DWORD PTR [ebx],edi
  42354e:	xchg   BYTE PTR [ecx*2+0x573ae973],ch
  423555:	or     ah,cl
  423557:	xor    DWORD PTR [ebp+0xd14ab10],0x70
  42355e:	enter  0xf883,0x86
  423562:	xlat   BYTE PTR ds:[ebx]
  423563:	sub    al,0x2a
  423565:	cli    
  423566:	leave  
  423567:	cmp    dl,BYTE PTR fs:[ecx-0x105dc428]
  42356e:	iret   
  42356f:	in     eax,dx
  423570:	int3   
  423571:	enter  0xfa68,0x9b
  423575:	or     BYTE PTR [ebp-0x73],dh
  423578:	or     ch,BYTE PTR [ecx+0x32]
  42357b:	sbb    al,0xcb
  42357d:	push   0xffffffef
  42357f:	sub    edi,ebp
  423581:	mov    bl,0xf9
  423583:	cmp    BYTE PTR ds:0x903a8b5d,bh
  423589:	xor    ecx,edi
  42358b:	sub    edx,DWORD PTR [ebx]
  42358d:	arpl   WORD PTR [edi+0x3279f19f],si
  423593:	sar    BYTE PTR [ebx+0x63],cl
  423596:	jmp    0x423531
  423598:	lock (bad) [edx-0xb]
  42359c:	std    
  42359d:	repnz inc eax
  42359f:	rcr    DWORD PTR ss:0xaa7bf528,1
  4235a6:	or     esi,DWORD PTR [edi]
  4235a8:	sbb    edx,DWORD PTR [ebx]
  4235aa:	jmp    0x2e8e:0xaa8e5fad
  4235b1:	cmp    eax,0xe5307cc7
  4235b6:	mov    al,0xa4
  4235b8:	cdq    
  4235b9:	lea    esi,ds:0x23c9de58
  4235bf:	push   ebp
  4235c0:	pop    eax
  4235c1:	add    eax,0x8ff435bc
  4235c6:	shl    DWORD PTR [ebx],1
  4235c8:	mov    eax,0x30797b05
  4235cd:	lock rcl DWORD PTR [esi-0x72],1
  4235d1:	xchg   edi,eax
  4235d2:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4235d4:	adc    ch,BYTE PTR [eax]
  4235d6:	jp     0x4235e4
  4235d8:	mov    dh,0x46
  4235db:	scas   eax,DWORD PTR es:[edi]
  4235dc:	in     eax,dx
  4235dd:	sub    esi,ecx
  4235df:	addr16 pop ecx
  4235e1:	cdq    
  4235e2:	ror    ch,cl
  4235e4:	loopne 0x42364d
  4235e6:	pushf  
  4235e7:	mov    bl,0x7c
  4235e9:	mov    ah,0x6d
  4235eb:	test   ah,cl
  4235ed:	je     0x42366d
  4235ef:	out    0x7,eax
  4235f1:	mov    ebx,0x4e265758
  4235f6:	cmp    eax,0xf9aee9a8
  4235fb:	mov    bh,0x35
  4235fd:	mov    ds:0xd3a0451c,eax
  423602:	imul   ebp,edx,0xffffff8e
  423605:	jle    0x423629
  423607:	adc    al,0xf4
  423609:	in     eax,0x28
  42360b:	push   ebp
  42360c:	fld    TBYTE PTR [ebp-0x5a]
  42360f:	sbb    dl,BYTE PTR [ebx]
  423611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423612:	shr    esp,0x30
  423615:	cmp    BYTE PTR [ebp+0x48],dh
  423618:	sub    eax,0x9b744d6f
  42361d:	(bad)  
  42361e:	in     eax,dx
  42361f:	jnp    0x42366d
  423621:	xchg   ebx,eax
  423622:	fwait
  423623:	imul   DWORD PTR [edi-0x4f]
  423626:	xchg   BYTE PTR [edx+0x77],al
  423629:	xor    BYTE PTR [esi-0x43],bh
  42362c:	es jbe 0x42366d
  42362f:	fcomi  st,st(7)
  423631:	sub    bl,ah
  423633:	xor    DWORD PTR [edi-0x7ab2a652],0xffffffff
  42363a:	arpl   bx,cx
  42363c:	pop    eax
  42363d:	dec    edi
  42363e:	cdq    
  42363f:	xchg   esp,eax
  423640:	cmp    DWORD PTR [edx+0x36754f8b],ecx
  423646:	int    0xe
  423648:	repz scas eax,DWORD PTR es:[edi]
  42364a:	(bad)  
  42364b:	adc    eax,0x6d681479
  423650:	add    DWORD PTR [ebp+0x41c28439],ebx
  423656:	cs popa 
  423658:	loopne 0x4236bb
  42365a:	mov    edi,0xa495b1ea
  42365f:	stos   BYTE PTR es:[edi],al
  423660:	sbb    al,0x5
  423662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423663:	jl     0x423630
  423665:	cmp    ebx,edx
  423667:	leave  
  423668:	jp     0x423620
  42366a:	fild   DWORD PTR ds:0xa7ca830f
  423670:	lahf   
  423671:	dec    esi
  423672:	push   ebx
  423673:	js     0x42369b
  423675:	repnz mov al,ds:0x9acb5930
  42367b:	dec    ebp
  42367c:	cmp    BYTE PTR [esp+ebx*8-0x62],bl
  423680:	nop
  423681:	out    dx,al
  423682:	jmp    0x83d6442d
  423687:	(bad)  
  423688:	adc    DWORD PTR [edi+0x62],esp
  42368b:	and    dh,bl
  42368d:	(bad)  [esp+0x66]
  423691:	sub    BYTE PTR [eax],cl
  423693:	nop
  423694:	fs loop 0x4236bc
  423697:	fabs   
  423699:	jo     0x4236fe
  42369b:	fidiv  WORD PTR [edx-0x68ed60f1]
  4236a1:	mov    DWORD PTR [edx+0x1c],edi
  4236a4:	jo     0x423718
  4236a6:	pop    edi
  4236a7:	fdivr  st,st(0)
  4236a9:	mov    bh,0x22
  4236ab:	test   DWORD PTR [ebx+ebx*4+0x59c4e2cd],0xcb64af85
  4236b6:	fdivr  DWORD PTR [esi-0x15]
  4236b9:	aad    0x83
  4236bb:	mov    esi,0x70e06991
  4236c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236c1:	jmp    0x423696
  4236c3:	aaa    
  4236c4:	fsubrp st(5),st
  4236c6:	jo     0x42373f
  4236c8:	mov    esp,0xa0c4c638
  4236cd:	add    cl,BYTE PTR [ecx+0x9]
  4236d0:	mov    BYTE PTR [eax+eiz*2-0x6c],al
  4236d4:	in     al,dx
  4236d5:	sbb    ebp,edi
  4236d7:	xor    eax,eax
  4236d9:	cli    
  4236da:	pop    ecx
  4236db:	je     0x423661
  4236dd:	pop    esi
  4236de:	jmp    0x42366e
  4236e0:	cmp    al,0x4a
  4236e2:	jecxz  0x423704
  4236e4:	shl    BYTE PTR [edi-0x67],0x58
  4236e8:	(bad)  
  4236e9:	pop    edx
  4236ea:	adc    esp,0xffffff88
  4236ed:	cmp    dl,BYTE PTR [eax-0x2ac82e2b]
  4236f3:	ss cli 
  4236f5:	xor    al,0xc9
  4236f7:	inc    eax
  4236f8:	sbb    al,0x97
  4236fa:	js     0x423714
  4236fc:	fmulp  st(3),st
  4236fe:	pcmpeqw mm6,QWORD PTR [edi+0x5f]
  423702:	in     eax,dx
  423703:	push   ecx
  423704:	dec    ebx
  423705:	dec    edi
  423706:	sub    DWORD PTR [ebp+0x2a43b5fd],esp
  42370c:	jl     0x4236dd
  42370e:	cs pop es
  423710:	push   cs
  423711:	mov    ds:0xa7c12f19,eax
  423716:	inc    edi
  423717:	in     eax,0x84
  423719:	sub    BYTE PTR [edi+0x2e],bh
  42371c:	ja     0x42375b
  42371e:	scas   al,BYTE PTR es:[edi]
  42371f:	mov    ds:0x282f849a,al
  423724:	add    eax,0xbd8c9ae0
  423729:	jne    0x423739
  42372b:	sahf   
  42372c:	ja     0x423767
  42372e:	xor    al,BYTE PTR [ebp+0x3ced959e]
  423734:	loop   0x4237ac
  423736:	push   ds
  423737:	int3   
  423738:	(bad)  
  423739:	xlat   BYTE PTR ds:[ebx]
  42373a:	loopne 0x423787
  42373c:	dec    eax
  42373d:	iret   
  42373e:	pop    edi
  42373f:	push   cs
  423740:	jg     0x42373b
  423742:	dec    esp
  423743:	rcr    edx,1
  423745:	mov    edx,0xbfde830f
  42374a:	out    0xd7,eax
  42374c:	fist   WORD PTR [eax+esi*4+0x2ff76f0f]
  423753:	sahf   
  423754:	jno    0xc0bb43d5
  42375a:	mov    al,0xd1
  42375c:	fsubr  QWORD PTR ds:0x7fbaa808
  423762:	mov    ds:0x49d8328a,eax
  423767:	into   
  423768:	pop    edi
  423769:	into   
  42376a:	jbe    0x423747
  42376c:	mov    al,ds:0x6807f411
  423771:	sbb    esp,0x65
  423774:	xor    BYTE PTR [eax-0x5bbbef5],al
  42377a:	jnp    0x4237ab
  42377c:	mov    esp,0x6e8ba3a9
  423781:	mov    ds:0xe3ffbd37,al
  423786:	das    
  423787:	test   BYTE PTR [edx],ah
  423789:	sub    eax,0xd48e4b40
  42378e:	fs inc ecx
  423790:	cdq    
  423791:	test   BYTE PTR [ebx+0x5c],ch
  423794:	jge    0x4237e0
  423796:	adc    ebp,esp
  423798:	push   cs
  423799:	fild   WORD PTR [ebp-0x30283f93]
  42379f:	or     ch,0x56
  4237a2:	mov    ebp,0xfeeec058
  4237a7:	jno    0x4237e4
  4237a9:	jno    0x423827
  4237ab:	and    ah,BYTE PTR [esi-0x50]
  4237ae:	retf   0x9a9f
  4237b1:	add    ch,0xab
  4237b4:	scas   al,BYTE PTR es:[edi]
  4237b5:	or     DWORD PTR [ebx],0x25
  4237b8:	push   ebx
  4237b9:	mov    cl,0xcc
  4237bb:	jb     0x4237b4
  4237bd:	xchg   BYTE PTR [ecx+0x45],bl
  4237c0:	sbb    DWORD PTR [edx],ecx
  4237c2:	inc    edi
  4237c3:	mov    DWORD PTR [edx+edx*2],esi
  4237c6:	jb     0x423783
  4237c8:	push   edi
  4237c9:	mov    DWORD PTR [ecx],eax
  4237cb:	inc    edx
  4237cc:	xlat   BYTE PTR ds:[ebx]
  4237cd:	sub    al,0x28
  4237cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237d1:	fdivr  st(6),st
  4237d3:	fstp   QWORD PTR [ebx+0x2bf13c9b]
  4237d9:	or     bh,BYTE PTR [eax+0x7e536a24]
  4237df:	sub    ch,BYTE PTR [ecx-0x2e]
  4237e2:	or     eax,0x2f37ae32
  4237e7:	sub    dl,ch
  4237e9:	aas    
  4237ea:	das    
  4237eb:	pop    ds
  4237ec:	inc    esi
  4237ed:	(bad)  
  4237ee:	xor    DWORD PTR [ebp*8-0x7a226043],esi
  4237f5:	inc    ecx
  4237f6:	fsub   st,st(4)
  4237f8:	nop    DWORD PTR [eax]
  4237fb:	xor    dl,BYTE PTR [ecx-0x78d91afa]
  423801:	and    al,0xd8
  423803:	cwde   
  423804:	jmp    0xa11386d9
  423809:	mov    bl,0xce
  42380b:	sub    cl,0x94
  42380e:	(bad)  
  42380f:	ja     0x423873
  423811:	inc    ecx
  423812:	mov    ebx,0x373ed692
  423817:	mov    edi,0x92da3077
  42381c:	ins    BYTE PTR es:[edi],dx
  42381d:	and    eax,ecx
  42381f:	rcr    DWORD PTR [eax],0xc5
  423822:	mov    bl,0x98
  423824:	pop    es
  423825:	jle    0x42383d
  423827:	pop    es
  423828:	popf   
  423829:	xor    al,0xcd
  42382b:	and    eax,0x14e2c033
  423830:	cld    
  423831:	popa   
  423832:	add    esi,DWORD PTR [edi-0xe]
  423835:	push   esi
  423836:	push   esi
  423837:	hlt    
  423838:	push   ebp
  423839:	(bad)  
  42383a:	scas   al,BYTE PTR es:[edi]
  42383b:	dec    esp
  42383c:	sub    BYTE PTR [edi-0x3f],cl
  42383f:	neg    BYTE PTR [edi]
  423841:	aas    
  423842:	aaa    
  423843:	push   ds
  423844:	sbb    ebx,edi
  423846:	popa   
  423847:	sbb    edi,DWORD PTR [ecx-0x2164f68c]
  42384d:	or     eax,0xa60e5d6b
  423852:	sbb    al,0xf4
  423854:	mov    dl,0x5b
  423856:	and    BYTE PTR [esi-0x4465802f],0xd9
  42385d:	aaa    
  42385e:	rdpmc  
  423860:	int    0x1b
  423862:	and    DWORD PTR [eax+0x21],0x9fe93ba5
  423869:	jg     0x4238e7
  42386b:	sar    BYTE PTR [edi+ebx*8-0x5467480d],0x94
  423873:	pop    esi
  423874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423875:	ret    0xdbac
  423878:	rcr    BYTE PTR [ecx+esi*1],1
  42387b:	dec    ecx
  42387c:	push   edi
  42387d:	add    DWORD PTR [edi],ebp
  42387f:	jecxz  0x4238da
  423881:	dec    eax
  423882:	jne    0x4238cb
  423884:	inc    edx
  423885:	shr    dh,0xab
  423888:	ja     0x4238c7
  42388a:	jo     0x423899
  42388c:	fst    st(0)
  42388e:	mov    ds:0x43c01e3b,al
  423893:	xchg   edx,eax
  423894:	repz std 
  423896:	sbb    al,0xf3
  423898:	shl    DWORD PTR [esi-0x1e],0xe3
  42389c:	loope  0x423873
  42389e:	aam    0x64
  4238a0:	sub    ebp,eax
  4238a2:	mov    dl,0x45
  4238a4:	cdq    
  4238a5:	loop   0x4238e8
  4238a7:	sub    DWORD PTR [ebx+ecx*2],ecx
  4238aa:	in     eax,dx
  4238ab:	or     eax,0xb47d5a2e
  4238b0:	add    bl,BYTE PTR [edx]
  4238b2:	aad    0xe6
  4238b4:	aam    0x84
  4238b6:	jle    0x423900
  4238b8:	sub    edi,esi
  4238ba:	lock and eax,0x16cb4395
  4238c0:	lea    ebx,[ecx+0x6f50dd11]
  4238c6:	in     al,dx
  4238c7:	adc    ecx,DWORD PTR [ebx-0x4a351c76]
  4238cd:	pop    edi
  4238ce:	cdq    
  4238cf:	mov    ch,0xe
  4238d1:	ins    BYTE PTR es:[edi],dx
  4238d2:	jnp    0x423862
  4238d4:	in     eax,0x28
  4238d6:	sub    al,0x90
  4238d8:	lahf   
  4238d9:	dec    edi
  4238da:	loope  0x42385e
  4238dc:	sub    ebp,esi
  4238de:	lea    ebx,[edx+0x12]
  4238e1:	fucomip st,st(3)
  4238e3:	repz xor eax,0x589c05bb
  4238e9:	ss icebp 
  4238eb:	cmc    
  4238ec:	int3   
  4238ed:	add    BYTE PTR [ebp+0x41eb813b],ah
  4238f3:	adc    edi,DWORD PTR [di+0x22]
  4238f7:	shl    ebx,0x3f
  4238fa:	adc    bh,bl
  4238fc:	sti    
  4238fd:	ret    
  4238fe:	mov    esp,0xf32c4d0b
  423903:	push   esi
  423904:	imul   esp,DWORD PTR [edi+eax*2],0x56
  423908:	jg     0x423940
  42390a:	xchg   ecx,eax
  42390b:	bound  edi,QWORD PTR [ecx+0x14]
  42390e:	cli    
  42390f:	and    DWORD PTR [ecx+0x63],ebx
  423912:	test   eax,0xbee8bb60
  423917:	and    BYTE PTR [edi],0xec
  42391a:	ss mov dh,ch
  42391d:	dec    eax
  42391e:	sbb    eax,0x47b94716
  423923:	pop    ss
  423924:	cli    
  423925:	out    0x66,eax
  423927:	and    edi,DWORD PTR [ebp-0x17]
  42392a:	(bad)  
  42392b:	loop   0x42393d
  42392d:	xor    eax,0x8b9a13d0
  423932:	lahf   
  423933:	cli    
  423934:	pop    eax
  423935:	clc    
  423936:	shr    DWORD PTR [ecx-0x10e39821],0xa
  42393d:	inc    esi
  42393e:	inc    edx
  42393f:	mov    ebp,edx
  423941:	xor    ecx,DWORD PTR [ebp+edx*1-0x77d0671]
  423948:	and    BYTE PTR [ecx+0x7a],dh
  42394b:	mov    al,0xa1
  42394d:	loopne 0x423943
  42394f:	xchg   esi,eax
  423950:	jns    0x423938
  423952:	add    al,0x7f
  423954:	sbb    dl,BYTE PTR [esi-0x217a3732]
  42395a:	mov    BYTE PTR [edx+0x32],bh
  42395d:	push   ebp
  42395e:	(bad)  
  42395f:	sbb    DWORD PTR [esi-0x56],edi
  423962:	ins    BYTE PTR es:[edi],dx
  423963:	rol    edx,0x6e
  423966:	shl    edi,1
  423968:	clc    
  423969:	int    0xa5
  42396b:	cdq    
  42396c:	jae    0x423968
  42396e:	lock adc ch,dl
  423971:	dec    ecx
  423972:	fist   DWORD PTR [ebx]
  423974:	sub    eax,0xa3c0def3
  423979:	stos   DWORD PTR es:[edi],eax
  42397a:	sub    bl,ah
  42397c:	scas   eax,DWORD PTR es:[edi]
  42397d:	out    0x7,eax
  42397f:	outs   dx,BYTE PTR ds:[esi]
  423980:	mov    ch,0x56
  423982:	xchg   esp,eax
  423983:	retf   
  423984:	inc    ebx
  423985:	jle    0x42393a
  423987:	fmul   QWORD PTR [eax]
  423989:	jmp    0xbf53:0xdfdf4dcc
  423990:	xchg   ebx,eax
  423991:	sbb    BYTE PTR [ebp-0x5f],cl
  423994:	pop    esp
  423995:	and    eax,0x2330646f
  42399a:	inc    eax
  42399b:	sub    ebx,DWORD PTR [ebx-0x1e]
  42399e:	sahf   
  42399f:	dec    ebp
  4239a0:	in     eax,0xd0
  4239a2:	jbe    0x42393f
  4239a4:	cmp    DWORD PTR ds:0xfe4d2c1f,edi
  4239aa:	sub    al,BYTE PTR [ebx+edi*4-0x1bbbe5b9]
  4239b1:	scas   eax,DWORD PTR es:[edi]
  4239b2:	sub    al,0xf8
  4239b4:	loopne 0x4239cb
  4239b6:	ss pop edx
  4239b8:	pop    ebx
  4239b9:	adc    esi,DWORD PTR [esi+0x6a]
  4239bc:	fcomp  QWORD PTR [eax+0x529079a3]
  4239c2:	pop    esp
  4239c3:	cmp    DWORD PTR [esi+0x22905301],esi
  4239c9:	xchg   esp,ebp
  4239cb:	pop    ebp
  4239cc:	add    BYTE PTR [ecx],dl
  4239ce:	pop    edi
  4239cf:	xor    eax,0xf707721c
  4239d4:	cmp    ecx,ebp
  4239d6:	cmp    BYTE PTR [edx],dh
  4239d8:	sub    eax,0xb2c4be17
  4239dd:	jb     0x4239b9
  4239df:	push   es
  4239e0:	mov    bh,0x4f
  4239e2:	into   
  4239e3:	jecxz  0x423a49
  4239e5:	js     0x423a05
  4239e7:	jnp    0x423a05
  4239e9:	dec    ebp
  4239ea:	jge    0x4239eb
  4239ec:	sub    esp,DWORD PTR [eax]
  4239ee:	or     ah,BYTE PTR [esi+0x27bfd34e]
  4239f4:	repnz test al,0x8e
  4239f7:	push   0x7c0f7049
  4239fc:	test   al,0xe7
  4239fe:	or     eax,DWORD PTR [eax]
  423a00:	add    BYTE PTR [eax],al
  423a02:	inc    esi
  423a03:	xchg   edi,eax
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp+0x7f218f54]
  423a12:	mov    dh,BYTE PTR [ebx+0x4f50001]
  423a18:	add    BYTE PTR [eax],al
  423a1a:	cmc    
  423a1b:	data16 aas 
  423a1d:	lock push eax
  423a1f:	sbb    ebx,esp
  423a21:	inc    esi
  423a22:	mov    ds:0xb1fe22bc,eax
  423a27:	sbb    BYTE PTR [esi+0x77],bl
  423a2a:	lods   al,BYTE PTR ds:[esi]
  423a2b:	xchg   esp,eax
  423a2c:	sbb    eax,0x7376dafb
  423a31:	bnd jmp 0x423a1f
  423a34:	clc    
  423a35:	das    
  423a36:	jecxz  0x423a39
  423a38:	and    eax,0x5bde4c04
  423a3d:	xor    DWORD PTR ds:0x3e942344,esp
  423a43:	fsin   
  423a45:	cmp    ch,BYTE PTR [ecx-0x14]
  423a48:	fst    DWORD PTR [ecx+0x46]
  423a4b:	pop    edx
  423a4c:	test   al,0x57
  423a4e:	and    BYTE PTR [bx+si-0x74],bh
  423a52:	xor    edx,DWORD PTR [edx+0x55]
  423a55:	jns    0x423a0e
  423a57:	dec    esi
  423a58:	or     BYTE PTR [ebx+0x35945b4d],0x14
  423a5f:	jno    0x423a2d
  423a61:	(bad)  
  423a62:	rcr    DWORD PTR [ecx-0x7311e989],0x9e
  423a69:	test   eax,0x7a32042e
  423a6e:	xchg   ecx,eax
  423a6f:	push   esi
  423a70:	retf   
  423a71:	inc    ebp
  423a72:	iret   
  423a73:	hlt    
  423a74:	adc    ecx,DWORD PTR [edx+0x5bbb1c42]
  423a7a:	and    ebx,ecx
  423a7c:	xchg   ebx,eax
  423a7d:	or     ebx,ebx
  423a7f:	and    ah,BYTE PTR [eax-0x3f14d043]
  423a85:	(bad)  
  423a86:	pop    ebp
  423a87:	or     al,0xd2
  423a89:	inc    ebp
  423a8a:	push   esp
  423a8b:	inc    ebx
  423a8c:	mov    edx,0x2c1b9549
  423a91:	jge    0x423b01
  423a93:	push   ebp
  423a94:	mov    esp,DWORD PTR [ebp-0x59]
  423a97:	dec    esp
  423a98:	add    al,0xf0
  423a9a:	or     esi,DWORD PTR [esi+0x47]
  423a9d:	pop    es
  423a9e:	adc    eax,0xa7b99d7d
  423aa3:	rcl    BYTE PTR [eax],1
  423aa5:	pop    ebx
  423aa6:	xchg   edx,eax
  423aa7:	ror    esi,0x58
  423aaa:	or     ebx,eax
  423aac:	or     BYTE PTR [eax-0x4e],0x53
  423ab0:	cli    
  423ab1:	cli    
  423ab2:	fisttp WORD PTR [edi]
  423ab4:	fild   WORD PTR [edx-0x7b]
  423ab7:	lock mov ah,0xa8
  423aba:	int    0xc8
  423abc:	mov    ebp,eax
  423abe:	and    cl,al
  423ac0:	int    0x84
  423ac2:	fs int 0x5
  423ac5:	popa   
  423ac6:	mov    edx,0x20a6dda4
  423acb:	(bad)  
  423acc:	pop    ebp
  423acd:	in     eax,0x7e
  423acf:	clc    
  423ad0:	int    0x1
  423ad2:	enter  0x10d3,0x76
  423ad6:	dec    ebp
  423ad7:	rol    DWORD PTR [edx],0x4
  423ada:	xchg   edx,eax
  423adb:	retfw  
  423add:	outs   dx,DWORD PTR ds:[esi]
  423ade:	adc    eax,esi
  423ae0:	mov    eax,ds:0xcc24ee8d
  423ae5:	push   0xffffffab
  423ae7:	div    DWORD PTR ds:0xb63929b2
  423aed:	leave  
  423aee:	repz pusha 
  423af0:	mov    ah,0x39
  423af2:	inc    edx
  423af3:	adc    DWORD PTR [edx+0x55],ebx
  423af6:	pop    esp
  423af7:	jp     0x423aeb
  423af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423afb:	ds retf 0x114
  423aff:	data16 shl bl,cl
  423b02:	lods   eax,DWORD PTR ds:[esi]
  423b03:	out    dx,al
  423b04:	push   es
  423b05:	cmp    al,0x3c
  423b07:	(bad)  
  423b08:	jno    0x423acb
  423b0a:	xchg   esp,eax
  423b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b0c:	xchg   ecx,eax
  423b0d:	inc    edx
  423b0e:	xor    eax,0x87e870fa
  423b13:	icebp  
  423b14:	cmp    BYTE PTR [ebp-0x50],0xb9
  423b18:	xor    eax,0x74863224
  423b1d:	mov    eax,eax
  423b1f:	out    dx,al
  423b20:	aaa    
  423b21:	pop    esp
  423b22:	xor    BYTE PTR [edx+0x6a],bl
  423b25:	mov    cs,WORD PTR [edi]
  423b27:	sub    al,0x31
  423b29:	(bad)  [ebx+ebp*2+0x2eeb5d19]
  423b30:	imul   esp,DWORD PTR [esi+0x4987843c],0xe59750c
  423b3a:	loope  0x423bbb
  423b3c:	movsx  esi,BYTE PTR [ebx-0x2e]
  423b40:	inc    edx
  423b41:	ss jmp 0x7d428d1
  423b47:	and    al,BYTE PTR [ecx]
  423b49:	(bad)  
  423b4a:	fxch   st(1)
  423b4c:	popf   
  423b4d:	icebp  
  423b4e:	int    0x13
  423b50:	mov    ebx,0x129e238d
  423b55:	dec    edi
  423b56:	pop    eax
  423b57:	ins    BYTE PTR es:[edi],dx
  423b58:	jne    0x423b86
  423b5a:	or     DWORD PTR [edx],esp
  423b5c:	lahf   
  423b5d:	neg    DWORD PTR [ebx-0x3ce1155b]
  423b63:	fdivr  QWORD PTR [ecx+0x1a52eb00]
  423b69:	mov    ds:0x454a6346,eax
  423b6e:	adc    esp,DWORD PTR [ebx+0x96d6bbc]
  423b74:	dec    esi
  423b75:	and    bh,BYTE PTR [ebp+0x2c890347]
  423b7b:	push   0x30d53974
  423b80:	mov    dl,0xbf
  423b82:	push   cs
  423b83:	cmp    cl,bl
  423b85:	inc    edi
  423b86:	outs   dx,DWORD PTR ds:[esi]
  423b87:	ja     0x423bff
  423b89:	cmp    dl,BYTE PTR [edi-0x3ff4b702]
  423b8f:	add    DWORD PTR [eax+0x1e],ecx
  423b92:	or     BYTE PTR [edi],bh
  423b94:	(bad)  [esi]
  423b96:	das    
  423b97:	in     eax,0x27
  423b99:	(bad)  
  423b9a:	je     0x423b53
  423b9c:	jno    0x423b9f
  423b9e:	jo     0x423c0b
  423ba0:	xchg   ecx,eax
  423ba1:	pop    es
  423ba2:	sub    al,0xb2
  423ba4:	jae    0x423c22
  423ba6:	and    ch,BYTE PTR [ecx+0x543c10e9]
  423bac:	xchg   esi,eax
  423bad:	jp     0x423b4a
  423baf:	call   0xe321b443
  423bb4:	fdivrp st(5),st
  423bb6:	and    al,0xc1
  423bb8:	aam    0x17
  423bba:	out    0x77,al
  423bbc:	ss dec edi
  423bbe:	ins    DWORD PTR es:[edi],dx
  423bbf:	fistp  WORD PTR [edx-0x3c]
  423bc2:	lods   eax,DWORD PTR ds:[esi]
  423bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bc4:	das    
  423bc5:	aam    0x28
  423bc7:	pop    ebx
  423bc8:	cmp    ecx,DWORD PTR [eax]
  423bca:	fs loopne 0x423c12
  423bcd:	arpl   si,sp
  423bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bd0:	mov    eax,0x6469936d
  423bd5:	sub    eax,0xeb5c45bd
  423bda:	mov    esp,0x9e422f44
  423bdf:	push   esp
  423be0:	mov    edi,0xfd44dbb2
  423be5:	sub    ah,BYTE PTR [eax]
  423be7:	xchg   esp,eax
  423be8:	inc    ebx
  423be9:	mov    ecx,0xabdda01a
  423bee:	scas   eax,DWORD PTR es:[edi]
  423bef:	xor    eax,0x3248b2a9
  423bf4:	cmp    al,0x9d
  423bf6:	in     eax,0xa8
  423bf8:	sub    BYTE PTR [edi],bh
  423bfa:	ja     0x423c01
  423bfc:	dec    ecx
  423bfd:	in     eax,dx
  423bfe:	mov    cl,0x8f
  423c00:	nop
  423c01:	inc    eax
  423c02:	lock pop esi
  423c04:	cs sahf 
  423c06:	loope  0x423c59
  423c08:	cs mov ebp,0xf3d909d0
  423c0e:	loopne 0x423c43
  423c10:	lds    eax,FWORD PTR [edi]
  423c12:	pop    ecx
  423c13:	es adc ecx,ecx
  423c16:	and    ebp,edx
  423c18:	(bad)  
  423c19:	in     eax,dx
  423c1a:	pop    ecx
  423c1b:	sub    ebp,DWORD PTR [ebp+0x51cc3ccd]
  423c21:	jae    0x423bf2
  423c23:	bound  edi,QWORD PTR [edx]
  423c25:	jnp    0x423bc6
  423c27:	(bad)  
  423c28:	repz mov eax,0x8cb3aa93
  423c2e:	not    al
  423c30:	mov    ah,0x81
  423c32:	(bad)  
  423c33:	mov    ch,0x2a
  423c35:	pusha  
  423c36:	jo     0x423cb1
  423c38:	inc    edi
  423c39:	std    
  423c3a:	ret    0xb674
  423c3d:	iret   
  423c3e:	and    dh,0xf6
  423c41:	mov    ds:0x414d7e4f,al
  423c46:	mov    edi,0xe470c614
  423c4b:	cmc    
  423c4c:	pop    ebx
  423c4d:	mov    ds:0x80d2cb5a,eax
  423c52:	adc    DWORD PTR [edx],0x5c
  423c55:	scas   eax,DWORD PTR es:[edi]
  423c56:	fnstcw WORD PTR [ebx]
  423c58:	ins    BYTE PTR es:[edi],dx
  423c59:	neg    DWORD PTR [ebx-0x40]
  423c5c:	or     BYTE PTR [edx],0xc8
  423c5f:	adc    ah,BYTE PTR [ecx-0x7e]
  423c62:	push   edi
  423c63:	push   esp
  423c64:	enter  0xebfd,0x53
  423c68:	jmp    0x51e99d60
  423c6d:	adc    ebp,ecx
  423c6f:	dec    ecx
  423c70:	add    bl,BYTE PTR [edi-0x55fe11c2]
  423c76:	fucomp st(5)
  423c78:	adc    BYTE PTR [ebx+0x18662957],0x9
  423c7f:	ins    DWORD PTR es:[edi],dx
  423c80:	scas   al,BYTE PTR es:[edi]
  423c81:	retf   
  423c82:	cmp    DWORD PTR [ebp+0x7e],ebx
  423c85:	cmc    
  423c86:	fidiv  WORD PTR [ebx-0x1cce574c]
  423c8c:	xchg   ebp,eax
  423c8d:	add    DWORD PTR [ebp+0x5a],esp
  423c90:	pop    ds
  423c91:	(bad)  
  423c92:	dec    ebx
  423c93:	sub    al,0x58
  423c95:	jns    0x423c9e
  423c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c98:	sbb    edx,ebp
  423c9a:	sub    ah,BYTE PTR [eax]
  423c9c:	adc    eax,0x781b545e
  423ca1:	test   eax,0x85df87c0
  423ca6:	cmp    dh,cl
  423ca8:	push   ds
  423ca9:	pop    ss
  423caa:	mov    esp,0x53df935f
  423caf:	aad    0xa
  423cb1:	je     0x423c7f
  423cb3:	cwde   
  423cb4:	dec    eax
  423cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cb6:	dec    esi
  423cb7:	mov    edi,0xb67cf8ec
  423cbc:	popf   
  423cbd:	out    0xb1,al
  423cbf:	dec    esi
  423cc0:	sub    edx,DWORD PTR [ecx]
  423cc2:	out    0xa,eax
  423cc4:	inc    edi
  423cc5:	addr16 jg 0x423c97
  423cc8:	xlat   BYTE PTR ds:[ebx]
  423cc9:	adc    al,0xeb
  423ccb:	sahf   
  423ccc:	js     0x423c9d
  423cce:	jne    0x423d1d
  423cd0:	adc    eax,0x94c8b2de
  423cd5:	jg     0x423cc6
  423cd7:	jae    0x423cba
  423cd9:	sbb    eax,0x6ba8386d
  423cde:	xor    bh,0x97
  423ce1:	mov    dl,0xfc
  423ce3:	pop    esp
  423ce4:	aad    0x48
  423ce6:	iret   
  423ce7:	aas    
  423ce8:	scas   eax,DWORD PTR es:[edi]
  423ce9:	mov    ds:0xc9204b37,eax
  423cee:	mov    cl,0xf8
  423cf0:	imul   esi,ebx,0xffffffc8
  423cf3:	rcl    BYTE PTR [edi+eax*4+0x788ee1cd],0xe
  423cfb:	gs pop edx
  423cfd:	mov    ch,0xf3
  423cff:	sbb    ecx,DWORD PTR [ebp-0x54]
  423d02:	sbb    BYTE PTR [eax+eax*4+0x29],bl
  423d06:	enter  0x1d92,0xc6
  423d0a:	and    eax,0x94884700
  423d0f:	push   eax
  423d10:	stos   BYTE PTR es:[edi],al
  423d11:	mov    edi,0x7c480fd
  423d16:	mov    ds:0x26396f56,al
  423d1b:	add    BYTE PTR [esi+esi*4-0x7e51394b],dl
  423d22:	jnp    0x423d94
  423d24:	sub    DWORD PTR [edx+esi*8+0x2306dbcb],edx
  423d2b:	push   edi
  423d2c:	mov    esi,0x5723a945
  423d31:	add    edi,DWORD PTR [ebx+0x59]
  423d34:	rol    DWORD PTR [ecx+0x1f415e4d],1
  423d3a:	ficomp DWORD PTR [edx+0x34eb9d66]
  423d40:	mov    ch,0x7
  423d42:	icebp  
  423d43:	jge    0x423d1a
  423d45:	test   ch,0x55
  423d48:	stos   DWORD PTR es:[edi],eax
  423d49:	loopne 0x423db6
  423d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d4c:	shl    BYTE PTR [edx+0x692edee8],1
  423d52:	push   edx
  423d53:	inc    edi
  423d54:	or     eax,0x9c9cfbc3
  423d59:	gs pop ebp
  423d5b:	cmp    DWORD PTR [ecx+0x7b],ebx
  423d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d5f:	jmp    0x60eb:0x14982423
  423d66:	jae    0x423d7c
  423d68:	fwait
  423d69:	or     BYTE PTR [ebx+edx*4+0xa549890],cl
  423d70:	adc    dl,BYTE PTR [eax-0x1a9d8e85]
  423d76:	sar    BYTE PTR [esi],1
  423d78:	test   eax,edi
  423d7a:	stc    
  423d7b:	mov    ebp,0x9e3e7336
  423d80:	sti    
  423d81:	mov    ebp,0x61237640
  423d86:	inc    eax
  423d87:	sbb    DWORD PTR [eax+0x39425705],esi
  423d8d:	sahf   
  423d8e:	adc    al,0x3a
  423d90:	loop   0x423d8d
  423d92:	fild   QWORD PTR [ecx+0x6b]
  423d95:	mov    WORD PTR [ebp-0x540178a8],?
  423d9b:	scas   al,BYTE PTR es:[edi]
  423d9c:	daa    
  423d9d:	mov    eax,DWORD PTR [eax]
  423d9f:	xchg   ecx,eax
  423da0:	dec    edx
  423da1:	in     al,dx
  423da2:	iretw  
  423da4:	push   es
  423da5:	jg     0x423d6b
  423da7:	(bad)  
  423da8:	adc    bh,BYTE PTR [ecx-0x3b12b7f7]
  423dae:	jmp    0xb17f:0xf16296da
  423db5:	sbb    al,BYTE PTR [ecx]
  423db7:	cld    
  423db8:	rol    al,1
  423dba:	inc    edi
  423dbb:	enter  0x2da1,0xe5
  423dbf:	adc    ecx,DWORD PTR [ebp+0x3da742c]
  423dc5:	xchg   ebp,eax
  423dc6:	aas    
  423dc7:	in     eax,0x3d
  423dc9:	ret    0x5bd5
  423dcc:	in     eax,dx
  423dcd:	add    DWORD PTR [eax],ebx
  423dcf:	pushf  
  423dd0:	push   0xd9762c52
  423dd5:	lods   eax,DWORD PTR ds:[esi]
  423dd6:	pop    ebx
  423dd7:	stos   BYTE PTR es:[edi],al
  423dd8:	outs   dx,DWORD PTR ds:[esi]
  423dd9:	loope  0x423da1
  423ddb:	push   edx
  423ddc:	ret    0x4be0
  423ddf:	(bad)  
  423de0:	out    0x69,eax
  423de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423de3:	into   
  423de4:	mov    edx,DWORD PTR cs:[edi+0x44b0687e]
  423deb:	sbb    al,0xa4
  423ded:	inc    eax
  423dee:	push   ss
  423def:	out    dx,eax
  423df0:	popa   
  423df1:	mov    ch,0x6d
  423df3:	es ret 0xc501
  423df7:	mov    edx,0x639cc2fe
  423dfc:	pusha  
  423dfd:	sahf   
  423dfe:	mov    edi,0xa4e1ae14
  423e03:	adc    dh,bl
  423e05:	or     BYTE PTR [ebx-0x6394e027],dl
  423e0b:	addr16 jmp 0xc1137ec6
  423e11:	ins    BYTE PTR es:[edi],dx
  423e12:	in     eax,0x55
  423e14:	mov    esi,0x5ec0446
  423e19:	jns    0x423dd0
  423e1b:	mov    DWORD PTR [eax+0x35cfc3ae],eax
  423e21:	mov    dl,0xfa
  423e23:	adc    DWORD PTR [edx-0x2d6d369d],ebx
  423e29:	ror    BYTE PTR [eax-0x307ebe83],cl
  423e2f:	and    BYTE PTR [edi],0x18
  423e32:	xchg   edx,eax
  423e33:	pushw  ds
  423e35:	enter  0xa87d,0x4b
  423e39:	inc    edi
  423e3a:	sbb    eax,0x8f28d17
  423e3f:	inc    ebp
  423e40:	mov    DWORD PTR [edi+esi*8-0x3f9cbbab],0xcb14ad0c
  423e4b:	or     bh,al
  423e4d:	xchg   ebx,eax
  423e4e:	dec    ebp
  423e4f:	sbb    DWORD PTR [edx+0x9],ebp
  423e52:	pop    edi
  423e53:	data16 test BYTE PTR [ebx],ch
  423e56:	sub    BYTE PTR [ebp-0x1f],0x85
  423e5a:	in     eax,0x73
  423e5c:	enter  0x15a2,0xe5
  423e60:	dec    eax
  423e61:	into   
  423e62:	scas   eax,DWORD PTR es:[edi]
  423e63:	sbb    esp,DWORD PTR [edi]
  423e65:	sub    BYTE PTR [esi-0xf],dh
  423e68:	pop    esi
  423e69:	add    al,0x5f
  423e6b:	fcmovne st,st(1)
  423e6d:	sub    BYTE PTR [ebp-0x2dd9d19b],bh
  423e73:	or     eax,0x570bc3e2
  423e78:	out    0x2e,al
  423e7a:	bound  esi,QWORD PTR [eax-0x4a2d840d]
  423e80:	and    DWORD PTR [eax+0x1c],0x94f3a563
  423e87:	jg     0x423ecb
  423e89:	push   ds
  423e8a:	test   al,0xe2
  423e8c:	imul   esp,DWORD PTR [ebx-0x35],0x426c1517
  423e93:	imul   edx,DWORD PTR ds:0x586c3f0,0xbfa507e5
  423e9d:	clc    
  423e9e:	mov    ebx,0x71086b6c
  423ea3:	xchg   edi,ecx
  423ea5:	and    al,0x50
  423ea7:	push   edi
  423ea8:	jb     0x423e8a
  423eaa:	push   0xffffff8b
  423eac:	int    0x1f
  423eae:	jnp    0x423edd
  423eb0:	enter  0x8bd4,0xaf
  423eb4:	xor    esp,DWORD PTR [ebp+0x23]
  423eb7:	(bad)  
  423eb8:	int    0x3f
  423eba:	and    ecx,DWORD PTR [esi]
  423ebc:	mov    BYTE PTR [edx+ecx*4-0xe52700d],cl
  423ec3:	mov    ds:0x2b8ea9ec,al
  423ec8:	out    dx,al
  423ec9:	xchg   dh,dh
  423ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ecc:	dec    ecx
  423ecd:	cmp    ebp,DWORD PTR [edx-0xcae20c8]
  423ed3:	test   BYTE PTR [eax+0x40cd388],al
  423ed9:	sbb    esi,DWORD PTR ds:0x69ecf7bd
  423edf:	lock xlat BYTE PTR ds:[ebx]
  423ee1:	cmp    BYTE PTR [edi+0x1a],bl
  423ee4:	and    eax,DWORD PTR [eax+0x1f37c49e]
  423eea:	xchg   ecx,eax
  423eeb:	pop    ebp
  423eec:	neg    ch
  423eee:	cli    
  423eef:	scas   eax,DWORD PTR es:[edi]
  423ef0:	jae    0x423f70
  423ef2:	outs   dx,BYTE PTR ds:[esi]
  423ef3:	enter  0xa182,0x39
  423ef7:	in     eax,dx
  423ef8:	push   es
  423ef9:	out    dx,al
  423efa:	loopne 0x423f5b
  423efc:	jne    0x423f2f
  423efe:	mov    DWORD PTR [esi-0x4f],edi
  423f01:	pop    esi
  423f02:	xchg   esi,eax
  423f03:	dec    esi
  423f04:	dec    ebp
  423f05:	in     eax,0x60
  423f07:	cmp    edi,DWORD PTR [esi]
  423f09:	adc    ebp,ebx
  423f0b:	xchg   ebp,eax
  423f0c:	dec    eax
  423f0d:	dec    esp
  423f0e:	lds    eax,FWORD PTR [eax]
  423f10:	add    BYTE PTR [eax],al
  423f12:	sar    al,cl
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fidiv  DWORD PTR [ebx+0x7f98b482]
  423f23:	mov    eax,0x4f50001
  423f28:	add    BYTE PTR [eax],al
  423f2a:	adc    BYTE PTR [edi+ebx*2+0x6d],dl
  423f2e:	mov    al,0xd6
  423f30:	jo     0x423f10
  423f32:	leave  
  423f33:	push   ebp
  423f34:	(bad)  
  423f38:	jmp    0x423ed2
  423f3a:	mov    edx,0x595cd62d
  423f3f:	scas   eax,DWORD PTR es:[edi]
  423f40:	inc    ebp
  423f41:	mov    ah,0x92
  423f43:	or     eax,0xb677d791
  423f48:	xor    al,0x98
  423f4a:	or     bh,BYTE PTR [ecx+ebp*2+0x1e648000]
  423f51:	push   cs
  423f52:	outs   dx,DWORD PTR ds:[esi]
  423f53:	dec    edi
  423f54:	mov    esi,0x3f633770
  423f59:	mov    ah,0x10
  423f5b:	sub    DWORD PTR [edx],0xffffffc1
  423f5e:	out    0x8c,al
  423f60:	shr    edx,cl
  423f62:	mov    ?,WORD PTR [ebx-0x7b79af4f]
  423f68:	and    ch,dh
  423f6a:	mov    ah,0x22
  423f6c:	mov    DWORD PTR [edi-0xcae1d09],eax
  423f72:	popa   
  423f73:	adc    al,0x5e
  423f75:	xchg   esi,eax
  423f76:	addr16 adc ch,ch
  423f79:	and    al,0x23
  423f7b:	cmp    eax,0xead1487e
  423f80:	(bad)  
  423f81:	call   0x65c9b33b
  423f86:	rcl    DWORD PTR ds:0xbd6954cc,1
  423f8c:	bswap  edi
  423f8e:	fdivp  st(1),st
  423f90:	sbb    bl,BYTE PTR [edi-0x29f3d2d1]
  423f96:	(bad)  
  423f98:	add    eax,0xcbb2dca9
  423f9d:	jecxz  0x423f8f
  423f9f:	test   BYTE PTR [ebx],ah
  423fa1:	xchg   edi,eax
  423fa2:	aas    
  423fa3:	push   eax
  423fa4:	dec    eax
  423fa5:	inc    edx
  423fa6:	sub    BYTE PTR [ebp-0x5c284309],ch
  423fac:	sub    dh,BYTE PTR [ecx+ebx*2+0x398e4f95]
  423fb3:	ja     0x423f8d
  423fb5:	out    0xd5,eax
  423fb7:	or     bh,dl
  423fb9:	loopne 0x423fbd
  423fbb:	push   es
  423fbc:	scas   eax,DWORD PTR es:[edi]
  423fbd:	inc    esi
  423fbe:	fiadd  DWORD PTR [eax+ebx*8-0x6797d9f3]
  423fc5:	xchg   DWORD PTR [eax],ecx
  423fc7:	sub    esi,DWORD PTR [ebp+0x3230c606]
  423fcd:	xlat   BYTE PTR ds:[ebx]
  423fce:	out    0x85,al
  423fd0:	xchg   edi,eax
  423fd1:	loop   0x423fd3
  423fd3:	fwait
  423fd4:	mov    edi,0xd67702b2
  423fd9:	fbld   TBYTE PTR [ebx-0x427f14b1]
  423fdf:	xor    esp,DWORD PTR [edx-0x7b3470f]
  423fe5:	xor    al,0x92
  423fe7:	rcl    al,cl
  423fe9:	cdq    
  423fea:	inc    ebp
  423feb:	pop    ds
  423fec:	or     ecx,DWORD PTR [edx-0x3e]
  423fef:	ret    0xc71
  423ff2:	pop    eax
  423ff3:	pusha  
  423ff4:	xor    bl,0xf
  423ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ff8:	inc    BYTE PTR [edx+0x4f]
  423ffb:	mov    edx,0x384c3121
  424000:	ins    BYTE PTR es:[edi],dx
  424001:	or     eax,0x1ee9049
  424006:	lds    ebx,FWORD PTR [ebx-0x3]
  424009:	dec    edi
  42400a:	push   eax
  42400b:	outs   dx,DWORD PTR ds:[esi]
  42400c:	(bad)  
  42400d:	and    cl,dl
  42400f:	mov    cl,0x3
  424011:	dec    ebx
  424012:	rol    BYTE PTR [esp+ecx*4],cl
  424015:	out    0xc1,eax
  424017:	mov    DWORD PTR [esi+0x63],edx
  42401a:	jle    0x423fd3
  42401c:	dec    esp
  42401d:	gs ds xchg edi,eax
  424020:	mov    al,0x2a
  424022:	add    eax,0x3cf80d18
  424027:	mov    bh,0xbd
  424029:	into   
  42402a:	xor    ecx,ecx
  42402c:	int3   
  42402d:	push   ebx
  42402e:	mov    ds:0x60012cbc,eax
  424033:	pop    edx
  424034:	inc    ecx
  424036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424037:	jmp    0xc180:0x200b1356
  42403e:	jno    0x4240b8
  424040:	xor    DWORD PTR [esi+eax*8+0x4854fb1b],ecx
  424047:	aam    0x17
  424049:	or     edx,esp
  42404b:	arpl   WORD PTR [eax+0x58],cx
  42404e:	dec    esi
  42404f:	icebp  
  424050:	jmp    0x424008
  424052:	stos   BYTE PTR es:[edi],al
  424053:	mov    bh,dl
  424055:	sub    ecx,0x44
  424058:	cwde   
  424059:	aaa    
  42405a:	xor    eax,edi
  42405c:	and    eax,0x99255027
  424061:	xor    al,0x4
  424063:	mov    eax,0x8a9a021
  424068:	ins    BYTE PTR es:[edi],dx
  424069:	lock iret 
  42406b:	inc    ebx
  42406c:	add    ebp,DWORD PTR [ecx+0x1f]
  42406f:	xor    al,0x39
  424071:	sub    BYTE PTR [esi],ch
  424073:	push   ds
  424074:	(bad)  
  424075:	mov    dl,0x4f
  424077:	dec    esi
  424078:	shl    BYTE PTR [edi],1
  42407a:	std    
  42407b:	mov    dh,0x36
  42407d:	out    0xfa,al
  42407f:	adc    dl,cl
  424081:	adc    DWORD PTR [ebx+0x6],edi
  424084:	cmp    DWORD PTR [edx+eax*8-0x378cdded],ebp
  42408b:	mov    bh,0xe7
  42408d:	inc    ecx
  42408e:	push   esp
  42408f:	fbstp  TBYTE PTR [edi+edx*2]
  424092:	sub    BYTE PTR [ebx-0xaad7632],dh
  424098:	sbb    BYTE PTR [edx],0x95
  42409b:	outs   dx,DWORD PTR ds:[esi]
  42409c:	pushf  
  42409d:	imul   ecx,eax,0x5d
  4240a0:	pop    eax
  4240a1:	(bad)  
  4240a3:	or     dl,BYTE PTR [eax+0x5e]
  4240a6:	sub    cl,bl
  4240a8:	xor    BYTE PTR [ecx+0x3d],bh
  4240ab:	mov    bh,BYTE PTR [ebp-0x1c34a9cc]
  4240b1:	(bad)  
  4240b3:	out    dx,eax
  4240b4:	sbb    esp,esi
  4240b6:	adc    eax,0xc9464c56
  4240bb:	xchg   ecx,eax
  4240bc:	add    al,0x90
  4240be:	popa   
  4240bf:	fs (bad) 
  4240c2:	jmp    0x8e03:0xffd107d6
  4240c9:	bound  esp,QWORD PTR [eax+0x72]
  4240cc:	fs xchg ebx,eax
  4240ce:	sub    ecx,DWORD PTR [esi*1-0x5b9fb375]
  4240d5:	or     BYTE PTR [edx-0x70],dh
  4240d8:	icebp  
  4240d9:	sbb    eax,0xf69790b4
  4240de:	sbb    DWORD PTR [esi],esp
  4240e0:	pop    ds
  4240e1:	les    ecx,FWORD PTR [eax]
  4240e3:	xchg   DWORD PTR [eax+eax*1-0x7f],eax
  4240e7:	mov    ah,BYTE PTR [esi-0x3308d852]
  4240ed:	mov    ah,cl
  4240ef:	dec    eax
  4240f0:	xor    BYTE PTR [ebx+0x13],0xed
  4240f4:	cmp    BYTE PTR [ebx],cl
  4240f6:	mov    al,ds:0x58dfd65e
  4240fb:	mov    ds,WORD PTR ds:0x431781de
  424101:	loop   0x424151
  424103:	stos   DWORD PTR es:[edi],eax
  424104:	ss inc ebp
  424106:	call   FWORD PTR [ebx+0x3d]
  424109:	mov    esp,0x6bb8c83c
  42410e:	sahf   
  42410f:	in     al,dx
  424110:	cmc    
  424111:	call   0x5efb:0x5771fc46
  424118:	xchg   ebx,eax
  424119:	xchg   ecx,eax
  42411a:	mov    esi,0x6940630f
  42411f:	fcomi  st,st(7)
  424121:	xchg   esi,eax
  424122:	jl     0x4240e8
  424124:	lock xchg ebx,eax
  424126:	imul   edi,edi,0x7d
  424129:	in     al,0x8
  42412b:	xlat   BYTE PTR ds:[ebx]
  42412c:	adc    al,0x61
  42412e:	push   ebp
  42412f:	call   0xef4b:0xc94c8ec7
  424136:	mov    esi,0x32b010c2
  42413b:	sti    
  42413c:	xchg   ebp,eax
  42413d:	fidiv  DWORD PTR [esi+ecx*2+0x66]
  424141:	or     BYTE PTR [edx+0x29],bh
  424144:	es adc edx,esp
  424147:	dec    ecx
  424148:	or     BYTE PTR [ebx-0x3b1882b6],bl
  42414e:	inc    edx
  42414f:	dec    ecx
  424150:	daa    
  424151:	jo     0x4241cf
  424153:	or     eax,0xe42ca576
  424158:	xor    ecx,esp
  42415a:	mov    cl,0xcc
  42415c:	cli    
  42415d:	outs   dx,BYTE PTR ds:[esi]
  42415e:	push   0x5c2dff6c
  424163:	inc    edi
  424164:	jo     0x42414d
  424166:	pop    eax
  424167:	fisub  WORD PTR [eax]
  424169:	adc    ecx,0x68
  42416c:	repz in eax,0x53
  42416f:	cld    
  424170:	lds    esi,FWORD PTR [esp+edx*8-0x5a]
  424174:	fld    st(7)
  424176:	or     BYTE PTR [ecx-0x30],al
  424179:	pop    es
  42417a:	scas   eax,DWORD PTR es:[edi]
  42417b:	or     ebx,DWORD PTR [ebx+0x20]
  42417e:	xchg   ecx,eax
  42417f:	mov    edi,0x6d9dd531
  424184:	dec    esp
  424185:	int    0x9d
  424187:	fld    QWORD PTR [ebx+0x734e9dc]
  42418d:	and    eax,0x4984bd28
  424192:	repz pop ds
  424194:	imul   esp,DWORD PTR [ebp+ebx*8-0x4a254e2f],0xff61f3ba
  42419f:	scas   eax,DWORD PTR es:[edi]
  4241a0:	dec    ecx
  4241a1:	push   cs
  4241a2:	mov    esp,0x2b3e33da
  4241a7:	dec    esi
  4241a8:	mov    edi,0xc467a4f9
  4241ad:	or     BYTE PTR [eax-0x26a6abac],dh
  4241b3:	scas   al,BYTE PTR es:[edi]
  4241b4:	not    BYTE PTR [ebx+0x7]
  4241b7:	or     al,dh
  4241b9:	pop    ecx
  4241ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241bb:	mov    ebx,0x8c6ddcae
  4241c0:	fadd   DWORD PTR [ebx+0x293216ad]
  4241c6:	cld    
  4241c7:	jne    0x4241f5
  4241c9:	sub    DWORD PTR ds:0x2be7132b,edi
  4241cf:	ret    0x86f7
  4241d2:	repnz or DWORD PTR ds:0x10f603d0,esp
  4241d9:	retf   
  4241da:	xchg   ecx,eax
  4241db:	dec    edi
  4241dc:	cdq    
  4241dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241de:	push   ecx
  4241df:	cli    
  4241e0:	xchg   esi,eax
  4241e1:	mov    ecx,0xcb5bda1d
  4241e6:	cld    
  4241e7:	pop    edi
  4241e8:	jnp    0x42417c
  4241ea:	add    BYTE PTR [ebx+0x66664796],al
  4241f0:	and    DWORD PTR [edi+ebp*2],ebp
  4241f3:	cmp    BYTE PTR [ebx-0x42],cl
  4241f6:	lahf   
  4241f7:	mov    ebx,0x9f97739c
  4241fc:	jl     0x4241cb
  4241fe:	adc    BYTE PTR [ecx-0x5492382b],ah
  424204:	inc    ebx
  424205:	aam    0xae
  424207:	out    dx,al
  424208:	in     eax,dx
  424209:	sahf   
  42420a:	bound  edx,QWORD PTR [ebx+0x59]
  42420d:	sub    ebx,esi
  42420f:	cmp    BYTE PTR [esi+eiz*4-0x53],dl
  424213:	(bad)  
  424214:	jecxz  0x42428a
  424216:	std    
  424217:	repz dec ebp
  424219:	xchg   edx,eax
  42421a:	push   es
  42421b:	shr    BYTE PTR [ebx],0xc0
  42421e:	xchg   edi,eax
  42421f:	adc    eax,eax
  424221:	pop    ecx
  424222:	stos   BYTE PTR es:[edi],al
  424223:	jns    0x42428d
  424225:	push   cs
  424226:	aaa    
  424227:	xor    eax,0xca8db14f
  42422c:	push   0xb6cf6959
  424231:	mov    ebx,ebx
  424233:	add    ebx,DWORD PTR [esp+edi*1+0x3d]
  424237:	(bad)  
  424238:	lea    esp,[edx]
  42423a:	mov    bl,0x86
  42423c:	inc    edx
  42423d:	adc    eax,eax
  42423f:	xchg   DWORD PTR [edi-0x2495a161],edx
  424245:	repz (bad)
  424248:	xchg   ecx,eax
  424249:	fist   WORD PTR ds:[esi+0x14]
  42424d:	aas    
  42424e:	jb     0x42427e
  424250:	iret   
  424251:	add    bl,cl
  424253:	dec    eax
  424254:	out    dx,eax
  424255:	sbb    BYTE PTR ds:0x97586f88,dl
  42425b:	sub    al,0xde
  42425d:	aaa    
  42425e:	pushf  
  42425f:	mov    eax,ds:0xea17ff79
  424264:	mov    ds:0xc9b09789,eax
  424269:	dec    ebx
  42426a:	add    BYTE PTR [edi+ebp*8-0x28],bh
  42426e:	mov    edx,0x99ce5be0
  424273:	dec    ebp
  424274:	(bad)  
  424275:	xchg   esp,eax
  424276:	ret    
  424277:	ins    DWORD PTR es:[edi],dx
  424278:	mov    esp,0xcf7ee820
  42427d:	pop    ss
  42427e:	shr    BYTE PTR [ebx],1
  424280:	cld    
  424281:	dec    ecx
  424282:	mov    edx,0x5a6b45b2
  424287:	inc    esp
  424288:	push   ebx
  424289:	out    0x47,al
  42428b:	inc    ebx
  42428c:	cdq    
  42428d:	xor    bl,BYTE PTR [edx-0x3fd8d049]
  424293:	aad    0x42
  424295:	(bad)  
  424296:	cmp    cl,BYTE PTR [edi-0x35]
  424299:	mov    esi,0x9e502732
  42429e:	sar    BYTE PTR [edx-0x3a44793d],0xfd
  4242a5:	fstp   QWORD PTR [ecx]
  4242a7:	icebp  
  4242a8:	jp     0x424237
  4242aa:	gs add al,0x50
  4242ad:	ins    DWORD PTR es:[edi],dx
  4242ae:	mov    ds:0x6a53c901,eax
  4242b3:	dec    BYTE PTR [ecx+0x3f]
  4242b6:	mov    dl,0x4f
  4242b8:	retf   
  4242b9:	ja     0x424334
  4242bb:	fiadd  WORD PTR [edx]
  4242bd:	test   eax,0xa55bd995
  4242c2:	add    eax,0x6a60006b
  4242c7:	cmp    al,0x6d
  4242c9:	ss fwait
  4242cb:	adc    esi,DWORD PTR [eax+0x5c1d1c80]
  4242d1:	pop    edx
  4242d2:	push   esi
  4242d3:	ret    
  4242d4:	out    dx,al
  4242d5:	cmp    al,0x53
  4242d7:	inc    ecx
  4242d8:	sbb    bl,BYTE PTR [esi+ebp*2+0x1]
  4242dc:	int    0x58
  4242de:	ror    BYTE PTR [esi],0xc0
  4242e1:	loopne 0x42431e
  4242e3:	(bad)  
  4242e5:	js     0x42427d
  4242e7:	push   ebp
  4242e8:	out    0x13,eax
  4242ea:	pusha  
  4242eb:	out    dx,eax
  4242ec:	pop    esi
  4242ed:	scas   al,BYTE PTR es:[edi]
  4242ee:	sub    al,0x21
  4242f0:	sar    BYTE PTR [edx+0x9],cl
  4242f3:	iret   
  4242f4:	int3   
  4242f5:	pop    edx
  4242f6:	jae    0x4242ba
  4242f8:	cmp    edi,ebx
  4242fa:	push   ecx
  4242fb:	add    DWORD PTR [ebx*4+0x558249a7],ebx
  424302:	or     eax,0x14f74b10
  424307:	mov    ebx,DWORD PTR [ecx+0x0]
  42430a:	test   eax,0x126d5d6
  42430f:	mov    bh,0xb4
  424311:	push   edi
  424312:	out    0x70,al
  424314:	xchg   ebx,eax
  424315:	and    eax,0x5812d304
  42431a:	pop    edi
  42431b:	sub    ch,ch
  42431d:	or     BYTE PTR [eax],ch
  42431f:	and    eax,0x7eca5518
  424324:	dec    edi
  424325:	mov    dl,0x61
  424327:	repnz xor eax,eax
  42432a:	pusha  
  42432b:	sub    BYTE PTR [eax],ch
  42432d:	pop    edi
  42432e:	aaa    
  42432f:	mov    ebp,DWORD PTR [edi]
  424331:	test   DWORD PTR [ebp-0x2b49c9dd],0x7dba69d0
  42433b:	jnp    0x42431a
  42433d:	mov    edi,0xd455720e
  424342:	xlat   BYTE PTR ds:[bx]
  424344:	ficom  DWORD PTR [esi+0x2d]
  424347:	xchg   esp,eax
  424348:	(bad)  
  424349:	fisttp QWORD PTR [edx-0x41b332a5]
  42434f:	sub    bl,BYTE PTR [edx+0x22]
  424352:	lods   al,BYTE PTR ds:[esi]
  424353:	jmp    0x424325
  424355:	iret   
  424356:	push   es
  424357:	mov    eax,ds:0xb2bc21d2
  42435c:	ins    DWORD PTR es:[edi],dx
  42435d:	out    dx,eax
  42435e:	pop    ss
  42435f:	dec    ebx
  424360:	xor    esi,edi
  424362:	jns    0x42437a
  424364:	out    0x4d,eax
  424366:	fcmovbe st,st(7)
  424368:	fimul  WORD PTR ds:0x116afbb9
  42436e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42436f:	sbb    al,0x2a
  424371:	lock push ecx
  424373:	(bad)  
  424374:	in     al,dx
  424375:	xor    DWORD PTR [ecx+eiz*2],esp
  424378:	inc    ecx
  424379:	cld    
  42437a:	pop    ebp
  42437b:	cmp    eax,0xb4de0ee0
  424380:	test   DWORD PTR [eax-0x28],0xe8e63158
  424387:	mov    ecx,DWORD PTR [eax+edi*8]
  42438a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42438b:	dec    ebp
  42438c:	xor    bl,cl
  42438e:	retf   
  42438f:	jg     0x424399
  424391:	and    eax,DWORD PTR [eax+edx*1]
  424394:	mov    eax,0x237d4a90
  424399:	dec    esp
  42439a:	jge    0x4243ba
  42439c:	ja     0x42440a
  42439e:	adc    BYTE PTR [esi+0x5b793f77],bh
  4243a4:	retf   0xa57a
  4243a7:	jl     0x424345
  4243a9:	adc    al,bh
  4243ab:	jno    0x42439f
  4243ad:	jae    0x42433c
  4243af:	fadd   QWORD PTR [edx-0x3f]
  4243b2:	inc    ebp
  4243b3:	sub    eax,DWORD PTR [edi]
  4243b5:	repnz add dl,BYTE PTR [eax+eiz*4-0x4fe8a432]
  4243bd:	(bad)  
  4243be:	mov    dh,0xf4
  4243c0:	xchg   ebx,eax
  4243c1:	add    eax,0x24b8910d
  4243c6:	das    
  4243c7:	clc    
  4243c8:	jecxz  0x4243d7
  4243ca:	xchg   ecx,eax
  4243cb:	xor    dh,bl
  4243cd:	lea    edx,ds:0xd1f84fd
  4243d3:	add    DWORD PTR [eax-0x6e9accbf],ebx
  4243d9:	adc    DWORD PTR [ebp+0x58],0x7ac6a3ec
  4243e0:	adc    al,0x55
  4243e2:	sti    
  4243e3:	push   ss
  4243e4:	xor    DWORD PTR [edx-0x46],edx
  4243e7:	sbb    BYTE PTR [ecx],dl
  4243e9:	ins    DWORD PTR es:[edi],dx
  4243ea:	aaa    
  4243eb:	mov    ds:0xcef83f15,al
  4243f0:	push   ds
  4243f1:	mov    dh,0xce
  4243f3:	push   ebx
  4243f4:	xchg   BYTE PTR [esi+0x12dedcc0],ch
  4243fa:	mov    ah,0x4d
  4243fc:	and    esi,DWORD PTR [ecx]
  4243fe:	mov    al,0x1d
  424400:	das    
  424401:	mov    ebx,0x524b3f5e
  424406:	push   es
  424407:	mov    ecx,0x10fe8af3
  42440c:	nop
  42440d:	out    0xea,eax
  42440f:	fbld   TBYTE PTR [ecx+0x709b3e65]
  424415:	or     dh,BYTE PTR [ecx-0x544a2e04]
  42441b:	adc    BYTE PTR [ecx+0xbecf],al
  424421:	add    BYTE PTR [edx+ebx*8],ch
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	or     eax,DWORD PTR [esi]
  424430:	fsubr  QWORD PTR [esi+0x1bd74]
  424436:	cmc    
  424437:	add    al,0x0
  424439:	add    BYTE PTR [ecx-0x42],bh
  42443c:	mov    ah,BYTE PTR [eax+edi*4-0x31]
  424440:	xlat   BYTE PTR ds:[ebx]
  424441:	fisubr DWORD PTR [edx+0x74]
  424444:	dec    esi
  424445:	mov    esp,0xfd4ddec3
  42444a:	stos   DWORD PTR es:[edi],eax
  42444b:	dec    ebp
  42444c:	into   
  42444d:	enter  0xa9f9,0x6a
  424451:	es mov ah,0xb9
  424454:	je     0x42440b
  424456:	in     al,dx
  424457:	scas   al,BYTE PTR es:[edi]
  424458:	sbb    DWORD PTR gs:[ebx],0xf3602227
  42445f:	das    
  424460:	or     ax,WORD PTR [esi+edi*4]
  424464:	mov    eax,0xbe2ace0b
  424469:	fnstsw ax
  42446b:	inc    esp
  42446c:	and    BYTE PTR [eax+0xd],al
  42446f:	fisttp QWORD PTR [ebx-0x1907c254]
  424475:	and    DWORD PTR [ebp+0x42],0x66d7006d
  42447c:	sahf   
  42447d:	cmp    esi,DWORD PTR [esi+0x17]
  424480:	fadd   QWORD PTR [edx]
  424482:	sub    al,0x8a
  424484:	jecxz  0x424491
  424486:	jae    0x4244c7
  424488:	push   esp
  424489:	in     al,dx
  42448a:	mov    ah,0xd1
  42448c:	aad    0xee
  42448e:	shl    dl,cl
  424490:	lea    edx,[edi+0x4d]
  424493:	ds jbe 0x4244ba
  424496:	cmc    
  424497:	dec    edi
  424498:	xor    ch,bl
  42449a:	push   esp
  42449b:	inc    ecx
  42449c:	jo     0x42447a
  42449e:	fisttp QWORD PTR [edi-0x4a]
  4244a1:	loopne 0x424429
  4244a3:	fild   DWORD PTR [edx+ebp*4+0x45538e18]
  4244aa:	or     al,0xf4
  4244ac:	sbb    DWORD PTR ds:0x44f41be2,edi
  4244b2:	ret    
  4244b3:	retf   0xe42d
  4244b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244b7:	mov    ah,0x29
  4244b9:	cmc    
  4244ba:	push   esp
  4244bb:	adc    DWORD PTR [edi-0x52f86329],edx
  4244c1:	dec    edi
  4244c2:	mov    ds:0x1ab6b15c,al
  4244c7:	mov    ah,0xd5
  4244c9:	push   edx
  4244ca:	add    eax,0x9ff3c850
  4244cf:	inc    eax
  4244d0:	pop    ecx
  4244d1:	and    DWORD PTR ds:0xf4967c4c,ecx
  4244d7:	(bad)  
  4244d9:	push   es
  4244da:	xor    BYTE PTR [ecx-0x1a],al
  4244dd:	rep outs dx,DWORD PTR ds:[esi]
  4244df:	pop    esp
  4244e0:	xor    esi,esp
  4244e2:	sub    cl,BYTE PTR [eax+0x20a72676]
  4244e8:	xchg   DWORD PTR [esi+0x57b93d7c],esp
  4244ee:	cmp    al,0x7d
  4244f0:	ret    0x4dd
  4244f3:	loopne 0x4244ff
  4244f5:	nop
  4244f6:	push   ecx
  4244f7:	mov    ch,BYTE PTR [ebx+eiz*2+0x77]
  4244fb:	and    esi,edx
  4244fd:	sti    
  4244fe:	fdiv   st(6),st
  424500:	and    BYTE PTR [eax],dl
  424502:	(bad)  
  424503:	outs   dx,BYTE PTR ds:[esi]
  424504:	pop    ds
  424505:	jmp    0x95687424
  42450a:	stc    
  42450b:	jl     0x424517
  42450d:	xor    cl,BYTE PTR [esi]
  42450f:	jmp    0x560a:0x33f21a1
  424516:	int3   
  424517:	sbb    eax,0x7f5ae1f5
  42451c:	pop    edx
  42451d:	or     BYTE PTR [eax+0x55],ah
  424520:	(bad)  
  424521:	pop    edi
  424522:	lea    edi,[edx]
  424524:	xchg   esp,eax
  424525:	sbb    esi,DWORD PTR [edx+0x68a07e6b]
  42452b:	stos   DWORD PTR es:[edi],eax
  42452c:	xchg   DWORD PTR [ebp+0x29],eax
  42452f:	mov    ds:0x94e214d9,eax
  424534:	pop    eax
  424535:	ss add dl,cl
  424538:	adc    eax,ebp
  42453a:	shr    ebx,0x99
  42453d:	jne    0x4245a2
  42453f:	pop    ss
  424540:	and    esp,DWORD PTR [ebx+eax*2+0x52deb034]
  424547:	test   ch,ah
  424549:	and    DWORD PTR [ebx],edi
  42454b:	mov    eax,0x6b1fb995
  424550:	outs   dx,BYTE PTR ds:[esi]
  424551:	mov    ebp,0x27c06a6b
  424556:	retf   
  424557:	jmp    0x42456e
  424559:	(bad)  
  42455a:	mov    ds:0x2193fe7d,eax
  42455f:	cld    
  424560:	and    al,0x8e
  424562:	pop    esp
  424563:	push   ds
  424564:	clc    
  424565:	push   ecx
  424566:	(bad)  
  424567:	rol    esp,1
  424569:	call   0x2ec5ee08
  42456e:	fst    DWORD PTR [edx-0x356c9b04]
  424574:	addr16 cld 
  424576:	leave  
  424577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424578:	sub    BYTE PTR [esi-0x4f],ah
  42457b:	in     al,dx
  42457c:	ret    
  42457d:	sahf   
  42457e:	(bad)  
  42457f:	addr16 dec ebp
  424581:	dec    esp
  424582:	cwde   
  424583:	mov    al,ds:0x2e8bce59
  424588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424589:	hlt    
  42458a:	arpl   WORD PTR [edx],di
  42458c:	or     ecx,DWORD PTR [edx+0x24f4bf2d]
  424592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424593:	lea    esp,[eax+0x6d51c0b8]
  424599:	mov    ds:0x790bf0b6,al
  42459e:	mov    ah,0x9b
  4245a0:	les    ecx,FWORD PTR [eax+0x66b995b3]
  4245a6:	aaa    
  4245a7:	pop    ds
  4245a8:	and    ch,BYTE PTR [edi-0x50]
  4245ab:	cld    
  4245ac:	sahf   
  4245ad:	or     al,0x43
  4245af:	pop    ss
  4245b0:	adc    eax,0x320304d6
  4245b5:	cdq    
  4245b6:	inc    ebx
  4245b7:	leave  
  4245b8:	ror    bl,cl
  4245ba:	popa   
  4245bb:	inc    edx
  4245bc:	or     BYTE PTR [ecx+0x27],bh
  4245bf:	mov    cl,0xa4
  4245c1:	dec    esp
  4245c2:	(bad)  
  4245c3:	pop    ds
  4245c4:	aaa    
  4245c5:	mov    ss,esi
  4245c7:	dec    ebp
  4245c8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4245ca:	dec    ebp
  4245cb:	hlt    
  4245cc:	lds    ecx,FWORD PTR [ebp+0x4a834df3]
  4245d2:	ins    DWORD PTR es:[edi],dx
  4245d3:	inc    edi
  4245d4:	mov    ecx,0x42711248
  4245d9:	and    dh,dh
  4245db:	and    ecx,DWORD PTR [esi-0x2721e653]
  4245e1:	cmp    ebp,DWORD PTR [eax+0x63c24ca2]
  4245e7:	sub    eax,0x4aae7b0f
  4245ec:	les    edi,FWORD PTR [ebx-0x58]
  4245ef:	inc    ebp
  4245f0:	data16 in al,dx
  4245f2:	out    dx,eax
  4245f3:	pop    eax
  4245f4:	sub    BYTE PTR [ecx-0x10],ch
  4245f7:	mov    eax,ds:0xba0910e6
  4245fc:	pop    ds
  4245fd:	mov    BYTE PTR [ebx],dl
  4245ff:	lea    esp,[esi+0x68a6bdc3]
  424605:	ins    BYTE PTR es:[edi],dx
  424606:	dec    esp
  424607:	into   
  424608:	push   esi
  424609:	xchg   BYTE PTR [edi],dh
  42460b:	xor    ch,dl
  42460d:	stos   BYTE PTR es:[edi],al
  42460e:	sbb    ch,0xa2
  424611:	daa    
  424612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424613:	sub    eax,0xa757d667
  424618:	add    eax,0x6d9845bb
  42461d:	lock minps xmm0,XMMWORD PTR fs:[ebx+0x50d209a2]
  424626:	(bad)  
  424627:	sbb    eax,DWORD PTR [esi+esi*4+0x4e]
  42462b:	xchg   BYTE PTR [ebx-0xd6e80b],bh
  424631:	jge    0x424602
  424633:	lock add al,dl
  424636:	dec    ecx
  424637:	sub    DWORD PTR [esi],0xfffffffe
  42463a:	test   al,0x79
  42463d:	les    esp,FWORD PTR [ecx+0x7c]
  424640:	test   BYTE PTR [edx+0xf],cl
  424643:	mov    cl,BYTE PTR [ecx-0xb895c47]
  424649:	cwde   
  42464a:	push   edx
  42464b:	pop    ebp
  42464c:	sbb    eax,0xa2d38ead
  424651:	mov    DWORD PTR [esi+0x7129c445],0xeed92cb0
  42465b:	dec    ebp
  42465c:	and    edi,ebx
  42465e:	in     al,dx
  42465f:	inc    esi
  424660:	jne    0x4246ca
  424662:	mov    DWORD PTR [esi],ecx
  424664:	mov    BYTE PTR [esi-0x13],dh
  424667:	lea    edx,cs:[eax+0x23]
  42466b:	int3   
  42466c:	mov    eax,eax
  42466e:	mov    ah,0xed
  424670:	push   eax
  424671:	push   0x5a
  424673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424674:	push   esi
  424675:	outs   dx,BYTE PTR ds:[esi]
  424676:	inc    esp
  424677:	add    eax,0x72223392
  42467c:	sub    BYTE PTR [esi],bh
  42467e:	icebp  
  42467f:	mov    bl,0x77
  424681:	pop    ds
  424682:	dec    ebp
  424683:	or     al,0x73
  424685:	xor    BYTE PTR [edx-0x411e2579],0xdc
  42468c:	int3   
  42468d:	fdivr  QWORD PTR [eax+0x56]
  424690:	mov    cl,0x4d
  424692:	jmp    0x832003d7
  424697:	adc    al,0xff
  424699:	inc    eax
  42469a:	cmc    
  42469b:	mov    ds:0x67ded74f,eax
  4246a0:	push   0xb96f57d4
  4246a5:	push   esp
  4246a6:	add    bh,bh
  4246a8:	mov    al,dh
  4246aa:	repnz push esi
  4246ac:	enter  0x8986,0xec
  4246b0:	push   eax
  4246b1:	add    al,0xb0
  4246b3:	popa   
  4246b4:	call   0xb45ddc61
  4246b9:	xchg   ecx,eax
  4246ba:	mov    dh,0x96
  4246bc:	and    DWORD PTR [ecx+0x2e09f6a5],edx
  4246c2:	cmc    
  4246c3:	scas   al,BYTE PTR es:[edi]
  4246c4:	out    dx,al
  4246c5:	push   ebx
  4246c6:	sbb    dl,BYTE PTR [esi]
  4246c8:	imul   esp,esi,0x18
  4246cb:	jns    0x42474b
  4246cd:	mov    al,cl
  4246cf:	inc    eax
  4246d0:	mov    esi,0x93c7f19b
  4246d5:	adc    bh,ah
  4246d7:	loope  0x424756
  4246d9:	mov    BYTE PTR [ebp+0x469ee848],dl
  4246df:	mov    dh,0xda
  4246e1:	outs   dx,BYTE PTR ds:[esi]
  4246e2:	(bad)  
  4246e3:	popf   
  4246e4:	mov    edi,0x8d3a6b13
  4246e9:	(bad)  
  4246ea:	out    dx,al
  4246eb:	add    bh,BYTE PTR [eax-0x1a8675a0]
  4246f1:	push   0xffffff8c
  4246f3:	fmul   DWORD PTR [ebx+esi*1-0x36]
  4246f7:	adc    al,0xff
  4246f9:	sub    al,0x71
  4246fb:	push   edx
  4246fc:	xchg   edx,eax
  4246fd:	lahf   
  4246fe:	sub    eax,0x3f0e05f2
  424703:	(bad)  [ebx-0x3f00877]
  424709:	sti    
  42470a:	pop    ebp
  42470b:	pop    ss
  42470c:	into   
  42470d:	inc    ebp
  42470e:	fstp   DWORD PTR [eax]
  424710:	(bad)  
  424712:	mov    ebx,0xa4b1163a
  424717:	jno    0x42476d
  424719:	or     eax,DWORD PTR [eax-0x51]
  42471c:	repnz mov bh,0xf
  42471f:	add    ch,BYTE PTR [eax+eax*2+0x65]
  424723:	call   0x9a0d:0xba5722f6
  42472a:	cld    
  42472b:	bound  eax,QWORD PTR [eax]
  42472d:	and    al,BYTE PTR [ebx-0x678a0b18]
  424733:	xor    BYTE PTR [ebx+0x50b8823],0xc6
  42473a:	scas   al,BYTE PTR es:[edi]
  42473b:	popa   
  42473c:	data16 repnz or al,0x2b
  424740:	jg     0x42477a
  424742:	es jae 0x424765
  424745:	jp     0x424785
  424747:	mul    bl
  424749:	mov    edx,0xd0cf82a
  42474e:	inc    ebp
  42474f:	sub    al,0x5
  424751:	loope  0x424749
  424753:	retf   0x9716
  424756:	pop    edx
  424757:	fwait
  424758:	jge    0x4247d6
  42475a:	ds into 
  42475c:	call   0x59f51a73
  424761:	call   0xc515:0x6e23c74c
  424768:	outs   dx,BYTE PTR ds:[esi]
  424769:	aam    0x2e
  42476b:	jno    0x4247e1
  42476d:	jmp    0xcbd9:0x1f9d7ad1
  424774:	pusha  
  424775:	adc    al,BYTE PTR [eax+0x19]
  424778:	xor    eax,0xb483d476
  42477d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42477e:	pop    esp
  42477f:	pop    ebp
  424780:	sbb    ebp,DWORD PTR [esi-0x72]
  424783:	push   0x5
  424785:	stos   DWORD PTR es:[edi],eax
  424786:	fmul   st,st(4)
  424788:	mov    BYTE PTR [esi],cl
  42478a:	rol    BYTE PTR [eax+0x1961a9b5],cl
  424790:	cmp    edi,DWORD PTR [ecx+0x2237baaa]
  424796:	into   
  424797:	mov    ebx,0xb1afb25c
  42479c:	jbe    0x424818
  42479e:	cmp    eax,0xc80773c8
  4247a3:	in     al,dx
  4247a4:	scas   al,BYTE PTR es:[edi]
  4247a5:	int    0x30
  4247a7:	xor    ebx,edi
  4247a9:	(bad)  
  4247aa:	cli    
  4247ab:	ja     0x424771
  4247ad:	test   BYTE PTR [edx+0x1e60c233],bl
  4247b3:	push   esp
  4247b4:	fdivp  st(0),st
  4247b6:	ds mov cl,0x94
  4247b9:	test   al,0x43
  4247bb:	imul   ebp,DWORD PTR [edi+0x7f],0x59b25ca5
  4247c2:	add    ch,ch
  4247c4:	int    0xc2
  4247c6:	dec    eax
  4247c7:	and    DWORD PTR [esi],0x52
  4247ca:	mov    eax,ds:0x2af6d74d
  4247cf:	push   esi
  4247d0:	pop    eax
  4247d1:	fld    DWORD PTR [ebp-0x4149adcb]
  4247d7:	push   ss
  4247d8:	imul   eax,DWORD PTR [ebp+0x6d],0xfaaa477a
  4247df:	dec    eax
  4247e0:	and    bl,BYTE PTR [edi+edx*4-0x546b30ed]
  4247e7:	sub    BYTE PTR [ecx+0x78c209e9],0x50
  4247ee:	repz or DWORD PTR [ebp+0x25],eax
  4247f2:	cld    
  4247f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247f4:	icebp  
  4247f5:	jae    0x424826
  4247f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247f8:	loopne 0x424866
  4247fa:	add    BYTE PTR [ecx+ebp*8],bl
  4247fd:	es mov esp,0x4203b161
  424803:	outs   dx,BYTE PTR ds:[esi]
  424804:	lods   eax,DWORD PTR ds:[esi]
  424805:	cmp    DWORD PTR [edi-0x30a15535],ebp
  42480b:	icebp  
  42480c:	cmp    BYTE PTR ds:0xe0c2ef35,al
  424812:	retf   0x8656
  424815:	jge    0x424892
  424817:	cmp    al,0xd9
  424819:	jbe    0x4247ec
  42481b:	data16 and BYTE PTR ds:0x9ffd9dc4,dl
  424822:	xchg   esp,eax
  424823:	xor    al,0x47
  424825:	das    
  424826:	xchg   esi,eax
  424827:	xchg   ecx,eax
  424828:	xlat   BYTE PTR ds:[ebx]
  424829:	jnp    0x4248a3
  42482b:	test   BYTE PTR [ebx+eax*2],ch
  42482e:	inc    ebx
  42482f:	adc    BYTE PTR [esi+0x17f4b91a],cl
  424835:	repnz mov cl,0xf1
  424838:	mov    esi,0x9e5ed887
  42483d:	add    esp,DWORD PTR [ecx]
  42483f:	xor    BYTE PTR [esi+ebp*8],0xaf
  424843:	adc    ah,bl
  424845:	push   es
  424846:	outs   dx,DWORD PTR ds:[esi]
  424847:	dec    edi
  424848:	cli    
  424849:	mov    ?,WORD PTR [edx+0x42]
  42484c:	jno    0x42481a
  42484e:	pop    ebx
  42484f:	repz jo 0x4248a2
  424852:	sub    DWORD PTR [ebp+0x676259df],ecx
  424858:	ret    
  424859:	cmp    eax,0xe19206e5
  42485e:	in     eax,dx
  42485f:	sub    BYTE PTR [eax+0x18e006a7],ch
  424865:	dec    esi
  424866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424867:	clc    
  424868:	jp     0x42482e
  42486a:	add    BYTE PTR [ebx+0x5903a016],0x22
  424871:	or     ebp,DWORD PTR [eax]
  424873:	gs ss into 
  424876:	neg    BYTE PTR [ebx+0x6]
  424879:	adc    DWORD PTR [edi+edi*8+0x7f64cf07],edi
  424880:	fdiv   DWORD PTR [edx+0x67]
  424883:	pop    edx
  424884:	mov    bh,0x6c
  424886:	repnz mov ds:0x68d51051,eax
  42488c:	fistp  DWORD PTR [eax]
  42488e:	pusha  
  42488f:	pop    edx
  424890:	lods   al,BYTE PTR ds:[esi]
  424891:	pop    edi
  424892:	push   ebp
  424893:	mov    BYTE PTR [eax],bl
  424895:	out    0xe4,al
  424897:	xchg   ebx,eax
  424898:	mov    al,ds:0x71a11f6e
  42489d:	sti    
  42489e:	lea    esi,[ebp-0x7f]
  4248a1:	or     BYTE PTR [edx],bl
  4248a3:	sbb    BYTE PTR [esi],cl
  4248a5:	retf   
  4248a6:	imul   edx,DWORD PTR [ebx+0x27],0xe
  4248aa:	mov    eax,ds:0x3d966e3
  4248af:	cmc    
  4248b0:	push   ss
  4248b1:	adc    al,0xa5
  4248b3:	dec    ebx
  4248b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248b5:	mov    cl,0xb4
  4248b7:	(bad)
  4248ba:	(bad)  
  4248bb:	jns    0x4248e2
  4248bd:	push   ds
  4248be:	sbb    BYTE PTR [eax-0x8345257],dl
  4248c4:	jae    0x4248bb
  4248c6:	jnp    0x4248c5
  4248c8:	pop    edx
  4248c9:	add    eax,0x9f94c61a
  4248ce:	pop    es
  4248cf:	jbe    0x424946
  4248d1:	jmp    0x606a:0xd3ee14c4
  4248d8:	push   ecx
  4248d9:	cmp    eax,0xbf206fbb
  4248de:	sbb    ch,BYTE PTR [edi-0x5ebc5269]
  4248e4:	int    0xd1
  4248e6:	in     eax,dx
  4248e7:	icebp  
  4248e8:	or     BYTE PTR ds:0x40b5c4a7,ch
  4248ee:	lds    esi,FWORD PTR [esi-0x14]
  4248f1:	dec    edx
  4248f2:	fstp   TBYTE PTR [edx]
  4248f4:	inc    edx
  4248f5:	test   BYTE PTR [edi],al
  4248f7:	(bad)  
  4248f8:	inc    ebp
  4248f9:	dec    dh
  4248fb:	dec    ebp
  4248fc:	cmp    cl,BYTE PTR [esi+0x19]
  4248ff:	je     0x424922
  424901:	add    bl,ch
  424903:	ss out 0x7e,eax
  424906:	add    al,BYTE PTR [ebx-0x1d]
  424909:	mov    ebx,0x35911c5b
  42490e:	std    
  42490f:	fucomi st,st(1)
  424911:	xchg   esp,eax
  424912:	sub    BYTE PTR [ebx],al
  424914:	test   ch,bh
  424916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424917:	jmp    0x4248ae
  424919:	or     eax,0xa576cfcf
  42491e:	push   0x29
  424920:	imul   edx,DWORD PTR [esi+0x74b280e8],0x11626d3f
  42492a:	js     0x4248c0
  42492c:	adc    BYTE PTR [edi+0x5d],dh
  424932:	adc    ecx,DWORD PTR [ebp-0x104094d7]
  424938:	push   ebx
  424939:	std    
  42493a:	and    ebp,DWORD PTR [ebx-0x25]
  42493d:	mov    BYTE PTR [edx+0x31],0xb9
  424941:	mov    DWORD PTR [ecx-0x3e],ebp
  424944:	add    DWORD PTR [eax],eax
  424946:	cmc    
  424947:	add    al,0x0
  424949:	add    BYTE PTR ds:0x1ff70a33,dh
  42494f:	sub    edi,DWORD PTR [ebx]
  424951:	push   ecx
  424952:	cdq    
  424953:	in     al,0x66
  424955:	pop    ss
  424956:	jle    0x424981
  424958:	js     0x4249ce
  42495a:	xor    edi,ebp
  42495c:	cmp    esp,0xffffffe6
  42495f:	dec    ecx
  424960:	mov    eax,ds:0xd44cb24c
  424965:	jge    0x4248f8
  424967:	sub    dl,ah
  424969:	or     ch,bh
  42496b:	call   DWORD PTR [esi]
  42496d:	lahf   
  42496e:	xlat   BYTE PTR ds:[ebx]
  42496f:	sub    bh,BYTE PTR [edi+0x5a0dd431]
  424975:	xchg   BYTE PTR [edx+0x22],dl
  424978:	rcl    DWORD PTR [esi-0x18],1
  42497b:	mov    ch,BYTE PTR [ebx+edi*8+0x21b58727]
  424982:	aam    0xb1
  424984:	mov    esi,0xabf4c169
  424989:	nop
  42498a:	call   0x40c9:0xfc2fa146
  424991:	add    BYTE PTR [ebp-0x748441e2],ch
  424997:	sub    esp,DWORD PTR [ebp+0x75]
  42499a:	push   ebp
  42499b:	xor    eax,0xa799cec9
  4249a0:	add    esi,DWORD PTR [eax+0x21b629e6]
  4249a6:	fs jecxz 0x42494e
  4249a9:	cld    
  4249aa:	mov    gs,esp
  4249ac:	test   DWORD PTR [edi+edi*8-0x56],0xb8f2746e
  4249b4:	fwait
  4249b5:	cmc    
  4249b6:	dec    edi
  4249b7:	pop    eax
  4249b8:	inc    ecx
  4249b9:	dec    ecx
  4249ba:	popa   
  4249bb:	mov    ds:0x4f3cdcee,al
  4249c0:	cmp    eax,0xff572d23
  4249c5:	das    
  4249c6:	mov    al,0x47
  4249c8:	sar    DWORD PTR [edi+0x7c808276],0xe5
  4249cf:	add    bl,0xe0
  4249d2:	sbb    bl,BYTE PTR [ebp+0x29]
  4249d5:	push   cs
  4249d6:	(bad)  
  4249d7:	pop    ds
  4249d8:	repnz and al,0x26
  4249db:	adc    esp,edi
  4249dd:	fiadd  DWORD PTR [ebp+0x31075462]
  4249e3:	les    ebp,FWORD PTR [esi+eiz*8-0x63caa073]
  4249ea:	mov    eax,0x977adba7
  4249ef:	lea    edi,[esi-0x61bb65f8]
  4249f5:	cmp    cl,BYTE PTR [ebx-0x2a]
  4249f8:	test   DWORD PTR [eax-0x28],esp
  4249fb:	and    DWORD PTR [edx+ebp*1],esp
  4249fe:	sub    DWORD PTR [esi+eax*4-0x606f7256],esi
  424a05:	dec    esp
  424a06:	adc    DWORD PTR [ebp+0x69],0xd5a66262
  424a0d:	sar    BYTE PTR [edi+0x7fa73b4a],1
  424a13:	loope  0x4249ce
  424a15:	sub    al,0x4f
  424a17:	sub    al,0x3f
  424a19:	and    DWORD PTR [edx+0xb],ecx
  424a1c:	pop    esp
  424a1d:	and    DWORD PTR [ecx],esp
  424a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a20:	test   al,0x4b
  424a22:	pop    edx
  424a23:	(bad)  
  424a25:	jmp    0xae390a99
  424a2a:	sbb    BYTE PTR ds:0x1a18f872,al
  424a30:	dec    edi
  424a31:	(bad)  
  424a32:	(bad)  ds:[edx]
  424a35:	das    
  424a36:	inc    eax
  424a37:	or     DWORD PTR [ecx+0x558f752b],eax
  424a3d:	int    0xb2
  424a3f:	sbb    eax,0xcc9d387
  424a44:	inc    eax
  424a45:	js     0x424a56
  424a47:	sti    
  424a48:	outs   dx,DWORD PTR ds:[esi]
  424a49:	pop    eax
  424a4a:	dec    bh
  424a4c:	in     eax,0x60
  424a4e:	sar    DWORD PTR [eax-0x62e44b51],cl
  424a54:	stos   DWORD PTR es:[edi],eax
  424a55:	sub    edx,DWORD PTR [esi-0x53b54587]
  424a5b:	sar    DWORD PTR [ecx+0x758928],0xef
  424a62:	fld    QWORD PTR ds:0xda3cc826
  424a68:	call   DWORD PTR [edx-0x53]
  424a6b:	mov    ds:0x9d15313b,eax
  424a70:	inc    ebx
  424a71:	xchg   dh,al
  424a73:	cwde   
  424a74:	xchg   ebp,eax
  424a75:	fsub   QWORD PTR [edi+esi*4-0x21ff4fbb]
  424a7c:	stos   DWORD PTR es:[edi],eax
  424a7d:	dec    ebp
  424a7e:	lods   al,BYTE PTR ds:[esi]
  424a7f:	clc    
  424a80:	jae    0x424a40
  424a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a83:	cdq    
  424a84:	out    0xb1,eax
  424a86:	fisttp DWORD PTR [esi-0x30937479]
  424a8c:	rcr    DWORD PTR [ebx+edx*4],0xae
  424a90:	icebp  
  424a91:	loopne 0x424b04
  424a93:	pop    edi
  424a94:	sbb    al,0x8f
  424a96:	call   0xd24d:0xd450507e
  424a9d:	jo     0x424ac4
  424a9f:	inc    esp
  424aa0:	gs daa 
  424aa2:	push   esi
  424aa3:	sahf   
  424aa4:	jmp    0xe8c3:0xb892d27a
  424aab:	inc    ebp
  424aac:	push   edi
  424aad:	outs   dx,BYTE PTR ds:[esi]
  424aae:	jle    0x424b18
  424ab0:	mov    bl,0xe5
  424ab2:	cmp    esi,DWORD PTR [edx+0x2f12ac15]
  424ab8:	dec    edx
  424ab9:	ss fwait
  424abb:	cli    
  424abc:	or     DWORD PTR [edi+0xb856d4c],esp
  424ac2:	cli    
  424ac3:	sbb    BYTE PTR [esi-0x7aa2e1a9],dh
  424ac9:	pop    esp
  424aca:	clc    
  424acb:	into   
  424acc:	jge    0x424a6c
  424ace:	cmp    DWORD PTR [edx+0x6a32f39b],ebp
  424ad4:	push   edx
  424ad5:	push   es
  424ad6:	(bad)  
  424ad8:	push   ss
  424ad9:	inc    edx
  424ada:	les    esp,FWORD PTR [ecx-0x59769bbf]
  424ae0:	xlat   BYTE PTR ds:[ebx]
  424ae1:	push   edi
  424ae2:	dec    ebp
  424ae3:	adc    al,0xbc
  424ae5:	inc    ecx
  424ae6:	retf   0xbb5d
  424ae9:	hlt    
  424aea:	and    esi,DWORD PTR [esp+edi*1-0x21541b8]
  424af1:	mov    cl,0x7e
  424af3:	lds    ebx,FWORD PTR ds:0x526cec47
  424af9:	rcl    DWORD PTR [ecx-0x4db3659c],0x14
  424b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b01:	outs   dx,DWORD PTR ds:[esi]
  424b02:	xchg   DWORD PTR [ebx-0x1bab14fd],ebx
  424b08:	test   DWORD PTR [esi-0x44b5ea81],ecx
  424b0e:	hlt    
  424b0f:	cli    
  424b10:	sub    BYTE PTR [ecx],al
  424b12:	push   eax
  424b13:	adc    DWORD PTR [ebx],ebp
  424b15:	pop    ecx
  424b16:	jmp    0x424ac8
  424b18:	jbe    0x424ad6
  424b1a:	jmp    0x424b04
  424b1c:	inc    ecx
  424b1d:	dec    eax
  424b1e:	dec    eax
  424b1f:	jne    0x424b6f
  424b21:	mov    ah,0x35
  424b23:	xlat   BYTE PTR ds:[ebx]
  424b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b25:	xchg   bh,bh
  424b27:	shl    DWORD PTR ds:0x548b1622,0x3a
  424b2e:	cmp    ebp,DWORD PTR [eax]
  424b30:	mov    BYTE PTR [eax+0x30],bl
  424b33:	test   al,0x3a
  424b35:	mov    esp,DWORD PTR [esi-0x12]
  424b38:	outs   dx,BYTE PTR ds:[esi]
  424b39:	stos   BYTE PTR es:[edi],al
  424b3a:	std    
  424b3b:	retf   
  424b3c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  424b3e:	cmp    edi,ebx
  424b40:	xchg   edx,eax
  424b41:	test   BYTE PTR [ecx],dl
  424b43:	lahf   
  424b44:	mov    ds:0xb50dbf2c,eax
  424b49:	jmp    0x547c1bf7
  424b4e:	cmp    BYTE PTR [esi+0x62e7a5b3],dl
  424b54:	mov    ch,0x82
  424b56:	jns    0x424b14
  424b58:	mov    edx,0x96ba49bd
  424b5d:	push   esi
  424b5e:	popa   
  424b5f:	leave  
  424b60:	mov    ebx,DWORD PTR [edi-0x2818a82d]
  424b66:	iret   
  424b67:	stos   DWORD PTR es:[edi],eax
  424b68:	push   0xc76aec87
  424b6d:	in     al,0xbb
  424b6f:	out    0x2a,eax
  424b71:	inc    edx
  424b72:	jo     0x424b78
  424b74:	adc    DWORD PTR [edx+0x77],edx
  424b77:	push   cs
  424b78:	jae    0x424b9b
  424b7a:	push   esp
  424b7b:	sub    DWORD PTR [esp+edx*2+0x75fa1468],esi
  424b82:	lea    ebp,[edi-0x48]
  424b85:	repnz pop ds
  424b87:	mov    dl,0x5b
  424b89:	dec    eax
  424b8a:	pop    ebp
  424b8b:	int3   
  424b8c:	jle    0x424b0e
  424b8e:	and    al,0x4a
  424b90:	adc    edi,DWORD PTR [ecx+0x7e]
  424b93:	in     eax,0x58
  424b95:	in     al,dx
  424b96:	jbe    0x424bcf
  424b98:	out    dx,al
  424b99:	mov    ds:0xc82848aa,eax
  424b9e:	xchg   DWORD PTR [esi-0x6c],ebx
  424ba1:	cmc    
  424ba2:	(bad)  
  424ba3:	xor    BYTE PTR [esi+0x973a28b],dl
  424ba9:	xor    BYTE PTR ds:0x977902b0,dh
  424baf:	stos   BYTE PTR es:[edi],al
  424bb0:	jb     0x424bd1
  424bb2:	xor    al,0x68
  424bb4:	dec    eax
  424bb5:	xchg   BYTE PTR [ecx],ah
  424bb7:	mov    edi,0x1a7b4051
  424bbc:	imul   ecx,DWORD PTR [edx+0x40d9c713],0xffffff91
  424bc3:	hlt    
  424bc4:	mov    esp,0x556c336c
  424bc9:	xor    al,0x18
  424bcb:	cmp    DWORD PTR [ecx],eax
  424bcd:	mov    esp,0x8ada6c19
  424bd2:	mov    al,0x42
  424bd4:	or     BYTE PTR [ebx],0x88
  424bd7:	adc    eax,0x8fc08d53
  424bdc:	mov    esp,0x7819ae66
  424be1:	aaa    
  424be2:	mov    bl,0x38
  424be4:	pop    es
  424be5:	clc    
  424be6:	jge    0x424c2f
  424be8:	(bad)  
  424bea:	cs sub ebx,edx
  424bed:	and    DWORD PTR [edi],0xffffffa9
  424bf0:	add    BYTE PTR [esi],ah
  424bf2:	xchg   ebx,eax
  424bf3:	push   ss
  424bf4:	adc    BYTE PTR [edx],bh
  424bf6:	xchg   ebx,eax
  424bf7:	loopne 0x424c54
  424bf9:	aas    
  424bfa:	sbb    bl,BYTE PTR [eax-0x4ae9425d]
  424c00:	outs   dx,DWORD PTR ds:[esi]
  424c01:	stc    
  424c02:	test   eax,0x1f8c31e8
  424c07:	xchg   esi,eax
  424c08:	adc    edx,DWORD PTR [esi]
  424c0a:	jbe    0x424bec
  424c0c:	add    bl,BYTE PTR [edi+ebp*1+0x5625acb1]
  424c13:	test   DWORD PTR [esi],esi
  424c15:	push   ebx
  424c16:	fcmovbe st,st(6)
  424c18:	push   0x18
  424c1a:	mov    cl,0x94
  424c1c:	jno    0x424c1c
  424c1e:	jnp    0x424c5b
  424c20:	shr    BYTE PTR [ebp-0x6bdf87e4],1
  424c26:	test   eax,0xd15d290a
  424c2b:	iret   
  424c2c:	imul   esp,DWORD PTR [ebp+0x6e8d78d],0xffffffc3
  424c33:	lock lahf 
  424c35:	popa   
  424c36:	hlt    
  424c37:	cmp    edi,DWORD PTR cs:[eax]
  424c3a:	sti    
  424c3b:	sar    DWORD PTR [ebx+0x5080d5cf],0x11
  424c42:	pop    edi
  424c43:	clc    
  424c44:	sti    
  424c45:	rcr    DWORD PTR [edx+0x2b],1
  424c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c49:	test   BYTE PTR [ecx-0x2dca528],cl
  424c4f:	jbe    0x424c1e
  424c51:	mov    al,ds:0xe85b7773
  424c56:	jo     0x424cb4
  424c58:	test   dl,dh
  424c5a:	test   BYTE PTR [esp+ebx*8+0x30e2c257],bl
  424c61:	mul    DWORD PTR [bp+si+0x2ecc]
  424c66:	(bad)  
  424c67:	mov    ds:0xabb8fd8b,al
  424c6c:	iret   
  424c6d:	mov    bl,0x8c
  424c6f:	pusha  
  424c70:	repnz sahf 
  424c72:	jne    0x424c70
  424c74:	ss xor al,0x0
  424c77:	popa   
  424c78:	stos   DWORD PTR es:[edi],eax
  424c79:	aas    
  424c7a:	push   cs
  424c7b:	jae    0x424c1d
  424c7d:	lds    esp,FWORD PTR [ebx-0x24]
  424c80:	arpl   WORD PTR [eax-0x10cd521a],si
  424c86:	dec    ebp
  424c87:	mov    gs,WORD PTR [edi]
  424c89:	xor    dl,bh
  424c8b:	ins    BYTE PTR es:[edi],dx
  424c8c:	mov    ch,0x2e
  424c8e:	inc    esp
  424c8f:	add    BYTE PTR [ebp-0x4ad16d71],bh
  424c95:	mov    es,WORD PTR [eax-0x52]
  424c98:	or     BYTE PTR [eax+eax*1+0x20],bl
  424c9c:	fsubr  DWORD PTR [ebx+0x349b0b93]
  424ca2:	dec    esi
  424ca3:	or     BYTE PTR ds:0x77dcd6b1,dh
  424ca9:	out    0x7,al
  424cab:	pop    ebx
  424cac:	lahf   
  424cad:	repz jne 0x424cf8
  424cb0:	fs xchg ebx,eax
  424cb2:	mov    edx,DWORD PTR [ecx+eax*1-0x3d]
  424cb6:	fwait
  424cb7:	jmp    0x8dfcb7b8
  424cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cbd:	pop    eax
  424cbe:	sbb    ebx,ebx
  424cc0:	xor    eax,0x5f0fd45f
  424cc5:	scas   al,BYTE PTR es:[edi]
  424cc6:	jbe    0x424d10
  424cc8:	push   ebp
  424cc9:	rep ins BYTE PTR es:[edi],dx
  424ccb:	mov    ds:0x32dbc632,al
  424cd0:	lods   eax,DWORD PTR ds:[esi]
  424cd1:	fidivr DWORD PTR [edi]
  424cd3:	pop    esi
  424cd4:	enter  0xb7b6,0x1d
  424cd8:	push   ebp
  424cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cda:	push   cs
  424cdb:	or     BYTE PTR [ebx+edx*4],0xb6
  424cdf:	sbb    BYTE PTR [ecx+0x8cf11c8],bl
  424ce5:	jo     0x424d21
  424ce7:	aas    
  424ce8:	add    al,0xe1
  424cea:	sahf   
  424ceb:	daa    
  424cec:	fwait
  424ced:	aaa    
  424cee:	clc    
  424cef:	cld    
  424cf0:	jp     0x424c99
  424cf2:	pop    esi
  424cf3:	(bad)  
  424cf4:	test   BYTE PTR [esi-0x773c1ec3],0xa3
  424cfb:	jle    0x424c84
  424cfd:	mov    ebx,0xc9fed13a
  424d02:	dec    edi
  424d03:	setl   BYTE PTR [esi-0x292253e8]
  424d0a:	inc    ebp
  424d0b:	cdq    
  424d0c:	out    0x7c,al
  424d0e:	mov    dl,0x29
  424d10:	push   edi
  424d11:	rcr    DWORD PTR [ecx+0x72],cl
  424d14:	or     cl,dh
  424d16:	punpcklwd mm1,DWORD PTR [ecx-0x49]
  424d1a:	and    bl,BYTE PTR ds:0x22753734
  424d20:	(bad)  
  424d21:	mov    esi,0x54424e62
  424d26:	sub    al,0x8b
  424d28:	(bad)  
  424d29:	mov    al,ds:0xab681dda
  424d2e:	and    eax,DWORD PTR [ecx]
  424d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d31:	inc    edx
  424d32:	jecxz  0x424d1d
  424d34:	rcr    eax,0x88
  424d37:	xor    BYTE PTR [edx],dl
  424d39:	jno    0x424d65
  424d3b:	dec    ebx
  424d3c:	retf   
  424d3d:	pop    ebx
  424d3e:	adc    eax,0xad1d3b77
  424d43:	sbb    al,BYTE PTR [ebx-0x3c]
  424d46:	bound  esi,QWORD PTR [eax-0x80]
  424d49:	stos   DWORD PTR es:[edi],eax
  424d4a:	mov    ebp,0x86509004
  424d4f:	jb     0x424d63
  424d51:	mov    eax,ds:0xec286b92
  424d56:	sub    edx,DWORD PTR [esi]
  424d58:	add    DWORD PTR [edx-0x74eaf927],ecx
  424d5e:	ret    0xf433
  424d61:	test   BYTE PTR [edi-0x19],ah
  424d64:	jecxz  0x424db3
  424d66:	xor    edi,DWORD PTR [esi-0x75bcc9b0]
  424d6c:	dec    ecx
  424d6d:	clc    
  424d6e:	(bad)  
  424d6f:	pop    DWORD PTR ds:[eax-0x239b3be4]
  424d76:	cmp    al,cl
  424d78:	(bad)  
  424d79:	repz mov dl,0x91
  424d7c:	xchg   edx,eax
  424d7d:	jo     0x424dcb
  424d7f:	pop    es
  424d80:	mov    esp,0x925c9e7e
  424d85:	jbe    0x424e05
  424d87:	test   ebx,edx
  424d89:	mov    BYTE PTR [esp+edi*8],cl
  424d8c:	sub    ch,BYTE PTR [esi-0x66a90d75]
  424d92:	ja     0x424dac
  424d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d95:	ds push ds
  424d97:	ror    DWORD PTR [edx+0x7c],cl
  424d9a:	fst    DWORD PTR [esi-0x46e7f655]
  424da0:	or     BYTE PTR [ecx],dl
  424da2:	and    eax,0xc28d6215
  424da7:	pusha  
  424da8:	(bad)  
  424daa:	mov    ebp,0x5d552479
  424daf:	test   DWORD PTR [esi+0x53],esp
  424db2:	xchg   edx,eax
  424db3:	stc    
  424db4:	jmp    0x90345ac0
  424db9:	pushf  
  424dba:	sub    al,0x5c
  424dbc:	ret    
  424dbd:	call   0xa8fd:0xe898fa64
  424dc4:	mov    ah,0xd9
  424dc6:	xlat   BYTE PTR ds:[ebx]
  424dc7:	call   0xcf3bdadb
  424dcc:	dec    esp
  424dcd:	bound  edi,QWORD PTR [esi]
  424dcf:	div    BYTE PTR [ebx-0x7861e3fb]
  424dd5:	xchg   ebp,eax
  424dd6:	pop    edi
  424dd8:	ds add al,0xf5
  424ddb:	mov    ebx,0xd5409c9e
  424de0:	mov    eax,ds:0xe19904f8
  424de5:	and    al,0x36
  424de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424de8:	aas    
  424de9:	xchg   edi,eax
  424dea:	cdq    
  424deb:	adc    eax,0xa035be3c
  424df0:	or     eax,0xe0033afb
  424df5:	dec    edi
  424df6:	retf   0xdc3c
  424df9:	dec    ebp
  424dfa:	push   edi
  424dfb:	test   al,0x85
  424dfd:	(bad)  
  424dfe:	mov    esp,0xeec6de5b
  424e03:	mov    dh,0xf0
  424e05:	int    0x77
  424e07:	call   0x4398:0x7d4257eb
  424e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e0f:	in     al,0xe9
  424e11:	cwde   
  424e12:	jbe    0x424e3b
  424e14:	pop    ecx
  424e15:	mov    bh,0x11
  424e17:	sub    ebp,DWORD PTR [edi+ecx*4-0x33]
  424e1b:	xor    cl,bl
  424e1d:	xor    ecx,DWORD PTR [edx]
  424e1f:	test   eax,edx
  424e21:	cdq    
  424e22:	fmul   DWORD PTR [edx-0xf]
  424e25:	pop    ebp
  424e26:	in     al,0x59
  424e28:	sbb    al,0xd8
  424e2a:	fwait
  424e2b:	int3   
  424e2c:	repnz in eax,0x5d
  424e2f:	rcl    BYTE PTR [ecx-0x1f0b17],1
  424e35:	aas    
  424e36:	and    al,bl
  424e38:	inc    esi
  424e39:	inc    eax
  424e3a:	(bad)  
  424e3b:	and    BYTE PTR [ebx+edi*1+0x34],cl
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     esp,DWORD PTR [esp+eax*8]
  424e50:	aam    0xf1
  424e52:	pop    esi
  424e53:	mov    DWORD PTR [ecx],0x4f500
  424e59:	add    BYTE PTR [ebp+0x70],al
  424e5c:	xchg   edx,eax
  424e5d:	sbb    al,0x76
  424e5f:	data16 fwait
  424e61:	test   al,0xb8
  424e63:	inc    esi
  424e64:	sbb    cl,dh
  424e66:	xchg   edi,eax
  424e67:	sub    eax,0xcea5078e
  424e6c:	pop    ds
  424e6d:	sub    ebx,edx
  424e6f:	mov    ds:0x10714931,al
  424e74:	jae    0x424ef2
  424e76:	sahf   
  424e77:	pop    ss
  424e78:	xor    al,0x9d
  424e7a:	int    0x17
  424e7c:	xchg   ebp,eax
  424e7d:	cmp    BYTE PTR [ecx-0xa],dh
  424e80:	mov    ecx,DWORD PTR [bp+si]
  424e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e84:	aaa    
  424e85:	repnz inc eax
  424e87:	pop    es
  424e88:	popa   
  424e89:	add    eax,0x9c811282
  424e8e:	ja     0x424e1b
  424e90:	leave  
  424e91:	mov    ebx,0xbdf86f74
  424e96:	out    0xe2,al
  424e98:	xchg   edx,eax
  424e99:	add    al,0xd7
  424e9b:	(bad)  
  424e9c:	or     bl,BYTE PTR [ecx-0x7ac2e8c7]
  424ea2:	mov    ds:0x52d10b39,al
  424ea7:	jo     0x424e6a
  424ea9:	xchg   ebp,eax
  424eaa:	lahf   
  424eab:	test   eax,0x873efa8c
  424eb0:	mov    al,0x83
  424eb2:	pop    ss
  424eb3:	mov    ds,WORD PTR [esi+0x30c25b44]
  424eb9:	sti    
  424eba:	or     DWORD PTR [esi+0x69],ebp
  424ebd:	lahf   
  424ebe:	fadd   DWORD PTR [eax+0x15]
  424ec1:	mov    gs,WORD PTR [ebx*2-0x68af2dda]
  424ec8:	mov    bh,0x36
  424eca:	or     eax,DWORD PTR [esi+0x5b]
  424ecd:	mov    edi,0x6e9aaa38
  424ed2:	sub    DWORD PTR [esi-0x3e9ddc48],ebp
  424ed8:	test   eax,0x618f3629
  424edd:	je     0x424f4e
  424edf:	sbb    eax,0x451f1c9c
  424ee4:	js     0x424f03
  424ee6:	ret    
  424ee7:	daa    
  424ee8:	xor    bl,BYTE PTR [esi]
  424eea:	in     al,dx
  424eeb:	icebp  
  424eec:	cdq    
  424eed:	inc    esp
  424eee:	int3   
  424eef:	mov    ?,WORD PTR [esi+eax*8]
  424ef2:	repnz add cl,0x2e
  424ef6:	loope  0x424f75
  424ef8:	or     dh,BYTE PTR [edx+edi*8-0x2b]
  424efc:	dec    eax
  424efd:	ss leave 
  424eff:	scas   al,BYTE PTR es:[edi]
  424f00:	sbb    al,0x0
  424f02:	stc    
  424f03:	adc    BYTE PTR [ecx+0x25aa284a],al
  424f09:	mov    bl,0xc3
  424f0b:	inc    ecx
  424f0c:	lea    edi,[edi+0x37184f65]
  424f12:	lock xchg ecx,eax
  424f14:	mov    ebp,0x16098d1d
  424f19:	div    BYTE PTR [ebx-0xf]
  424f1c:	cs cmp al,0xb9
  424f1f:	out    dx,al
  424f20:	mov    bl,0xa
  424f22:	cmp    al,0xe1
  424f24:	inc    edi
  424f25:	scas   al,BYTE PTR es:[edi]
  424f26:	sbb    BYTE PTR ds:0xb1299eac,dl
  424f2c:	outs   dx,DWORD PTR ds:[esi]
  424f2d:	xor    cl,bh
  424f2f:	out    0xc5,al
  424f31:	sbb    bl,BYTE PTR [ebp-0x5232ae4c]
  424f37:	outs   dx,BYTE PTR ds:[esi]
  424f38:	dec    ecx
  424f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f3a:	adc    bh,al
  424f3c:	sub    eax,DWORD PTR ds:0x9ec082
  424f42:	jno    0x424f3e
  424f44:	and    DWORD PTR ds:0x8991e53b,0xffffffe8
  424f4b:	rcr    DWORD PTR [esi-0x6eef19b8],0x63
  424f52:	cmp    eax,0xd442072
  424f57:	inc    edi
  424f58:	xor    ebx,DWORD PTR [edi+0x70cbebc1]
  424f5e:	push   DWORD PTR [ebp+0x8c09fd7]
  424f64:	fsub   DWORD PTR [ecx-0x76]
  424f67:	inc    ecx
  424f68:	xor    eax,0xcba21c82
  424f6d:	les    edi,FWORD PTR [ebp+0x74]
  424f70:	imul   BYTE PTR [esi-0x77f4c879]
  424f76:	daa    
  424f77:	add    al,0xcd
  424f79:	ins    DWORD PTR es:[edi],dx
  424f7a:	mov    eax,0xf02e186e
  424f7f:	cvtpi2ps xmm4,QWORD PTR [ebx+0x57]
  424f83:	mov    WORD PTR [edi-0x22],?
  424f86:	daa    
  424f87:	jb     0x424fc1
  424f89:	shr    DWORD PTR [ebp-0x23],0xbb
  424f8d:	fcom   st(6)
  424f8f:	lods   al,BYTE PTR ds:[esi]
  424f90:	aas    
  424f91:	dec    esi
  424f92:	xor    ecx,DWORD PTR [edi]
  424f94:	popa   
  424f95:	mov    ebx,0x746f0ae6
  424f9a:	push   ebx
  424f9b:	out    dx,eax
  424f9c:	mov    bh,0xad
  424f9e:	xor    al,BYTE PTR [edx+0x5e]
  424fa1:	fidivr WORD PTR [ebx]
  424fa3:	fbld   TBYTE PTR [ecx-0xe61ea9a]
  424fa9:	aad    0x96
  424fab:	jne    0x424f39
  424fad:	dec    ebp
  424fae:	ret    
  424faf:	add    DWORD PTR [esi+0x0],ebx
  424fb2:	or     al,0xea
  424fb4:	stos   DWORD PTR es:[edi],eax
  424fb5:	scas   eax,DWORD PTR es:[edi]
  424fb6:	add    dl,BYTE PTR [ebx-0x107c7078]
  424fbc:	mov    dh,0xc1
  424fbe:	repz jmp 0xcad94f67
  424fc4:	adc    dh,dh
  424fc6:	mov    BYTE PTR [ebp-0x580d6750],bh
  424fcc:	pop    esi
  424fcd:	adc    dl,BYTE PTR [edi-0x59]
  424fd0:	push   eax
  424fd1:	retf   0xe285
  424fd4:	dec    ebx
  424fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fd6:	xchg   ecx,eax
  424fd7:	jl     0x424fb4
  424fd9:	shl    BYTE PTR [edx-0x14],1
  424fdc:	push   0x808c82f7
  424fe1:	push   ecx
  424fe2:	iret   
  424fe3:	xchg   esp,eax
  424fe4:	(bad)
  424fe7:	adc    bh,BYTE PTR [ebx-0x3f]
  424fea:	cmp    esi,ebp
  424fec:	arpl   dx,ax
  424fee:	pop    ecx
  424fef:	out    0x82,al
  424ff1:	imul   ebx,esp,0x56d24c81
  424ff7:	iret   
  424ff8:	mov    al,0xd7
  424ffa:	add    eax,0xd3b20d3a
  424fff:	jecxz  0x42501e
  425001:	and    DWORD PTR [edi-0x77],edi
  425004:	pop    eax
  425005:	fwait
  425006:	repz pop edi
  425008:	push   ebp
  425009:	inc    esi
  42500a:	mov    ebp,fs
  42500c:	jg     0x425039
  42500e:	xor    DWORD PTR [eax+0x1017a26c],ebx
  425014:	xchg   DWORD PTR [esi+ebp*1],ebp
  425017:	mov    ebx,0x219ab0e5
  42501c:	lahf   
  42501d:	inc    edi
  42501e:	mov    dl,0xbb
  425020:	xor    eax,0xdc628eed
  425025:	cmp    ah,BYTE PTR [edi+0x2b]
  425028:	arpl   WORD PTR [edx],di
  42502a:	clc    
  42502b:	and    esp,DWORD PTR [edi-0x586a3503]
  425031:	cmp    cl,BYTE PTR [ecx+0x2a7ef327]
  425037:	mov    al,0xc7
  425039:	cmp    al,0xd8
  42503b:	div    BYTE PTR [ecx+0xfba4d69]
  425041:	call   0x9b41:0x9b02adcd
  425048:	in     al,dx
  425049:	cld    
  42504a:	sbb    ch,BYTE PTR [edi-0x1ac6c2a5]
  425050:	lock sub DWORD PTR [eax-0x6f416f63],ebx
  425057:	nop
  425058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425059:	inc    ebx
  42505a:	mov    ecx,0x78ab7666
  42505f:	out    dx,al
  425060:	mov    WORD PTR [ebp-0x14],fs
  425063:	popa   
  425064:	inc    ebx
  425065:	push   ebp
  425066:	(bad)  
  425067:	out    0x40,eax
  425069:	aaa    
  42506a:	pop    esi
  42506b:	inc    edi
  42506c:	push   eax
  42506d:	fwait
  42506e:	inc    ebp
  42506f:	jo     0x425090
  425071:	(bad)  
  425072:	adc    DWORD PTR [ecx*4-0x2533c720],eax
  425079:	inc    ebx
  42507a:	ins    DWORD PTR es:[edi],dx
  42507b:	add    esi,edi
  42507d:	sar    BYTE PTR [ebp+0x2c],cl
  425080:	test   al,0xa6
  425082:	dec    edi
  425083:	mov    gs,esp
  425085:	icebp  
  425086:	inc    esi
  425087:	loop   0x42508d
  425089:	test   eax,0xd019a77a
  42508e:	adc    dl,BYTE PTR [edx-0x39]
  425091:	sub    DWORD PTR [eax-0x11a1c84c],edi
  425097:	inc    edx
  425098:	cmp    edx,0xcf544b26
  42509e:	and    esi,DWORD PTR [edi+eiz*4]
  4250a1:	add    edx,DWORD PTR [esi]
  4250a3:	fwait
  4250a4:	mov    cl,0x24
  4250a6:	fst    DWORD PTR [edx]
  4250a8:	pop    ebp
  4250a9:	cwde   
  4250aa:	cs push ss
  4250ac:	inc    esi
  4250ad:	int3   
  4250ae:	xor    al,0xc0
  4250b0:	xchg   ecx,eax
  4250b1:	mov    edi,0x40c95299
  4250b6:	dec    esi
  4250b7:	mov    ebx,0x9761bbe8
  4250bc:	inc    esi
  4250bd:	jl     0x4250fd
  4250bf:	mov    al,ds:0xf6f04007
  4250c4:	dec    ebp
  4250c5:	fidivr WORD PTR ds:0x54c47925
  4250cb:	or     edx,DWORD PTR [esi+0x30178c64]
  4250d1:	addr16 std 
  4250d3:	cmp    ch,BYTE PTR [esi]
  4250d5:	dec    ebx
  4250d6:	sahf   
  4250d7:	xor    esi,DWORD PTR [ebp-0x43]
  4250da:	mov    edx,0x4ef9d59d
  4250df:	xor    eax,DWORD PTR [ebx]
  4250e1:	repnz das 
  4250e3:	mov    edi,0x7138c5bb
  4250e8:	enter  0x804e,0xc4
  4250ec:	add    al,0xde
  4250ee:	cli    
  4250ef:	mov    bh,0x5c
  4250f1:	push   esi
  4250f2:	fimul  WORD PTR [edx]
  4250f4:	mov    bl,0xbe
  4250f6:	push   cs
  4250f7:	jne    0x4250c5
  4250f9:	icebp  
  4250fa:	sahf   
  4250fb:	gs icebp 
  4250fd:	repnz nop
  4250ff:	pop    ss
  425100:	and    eax,0x8649e0fe
  425106:	stc    
  425107:	leave  
  425108:	xor    eax,DWORD PTR [ebx-0x68]
  42510b:	ret    0x37ff
  42510e:	(bad)  
  42510f:	push   eax
  425110:	into   
  425111:	cmp    dl,cl
  425113:	fnstenv [ecx-0x6ac0cbd6]
  425119:	repnz dec esp
  42511b:	and    eax,0x9de38a52
  425120:	or     BYTE PTR [edi-0x31],bl
  425123:	add    al,0x95
  425125:	shl    dl,cl
  425127:	test   al,0xb2
  425129:	out    0xde,al
  42512b:	inc    ebp
  42512c:	mov    ss,WORD PTR [eax+0x2b]
  42512f:	mov    ebx,ebx
  425131:	mov    edx,0xa08a7c1b
  425136:	xor    bl,BYTE PTR [ebp+0x6d]
  425139:	mov    ebx,0x7812d0f8
  42513e:	mov    edx,0xa93bd6ee
  425143:	fistp  QWORD PTR [eax]
  425145:	rcl    edx,cl
  425147:	jbe    0x425145
  425149:	or     eax,0x2e78bfb8
  42514e:	mov    esp,0x29e7cf86
  425153:	gs sub edi,eax
  425156:	pop    ds
  425157:	in     eax,0xd9
  425159:	mov    ds:0x91d2b266,eax
  42515e:	call   0xee5d12f9
  425163:	rep lods eax,DWORD PTR ds:[esi]
  425165:	sub    DWORD PTR [ebp+0x2048e73c],0x78a74123
  42516f:	cdq    
  425170:	daa    
  425171:	dec    esi
  425172:	mov    bh,0x7
  425174:	daa    
  425175:	sbb    BYTE PTR [esi-0x2c],dl
  425178:	cwde   
  425179:	mov    ebp,0xc4115022
  42517e:	test   al,0x5
  425180:	ds jge 0x4251d7
  425183:	xchg   BYTE PTR [esi+edx*2],dh
  425186:	xchg   esi,eax
  425187:	mov    esp,0x1eef1da3
  42518c:	adc    DWORD PTR [esi-0x6a],esi
  42518f:	fcom   DWORD PTR [edx]
  425191:	inc    esp
  425192:	adc    al,0xf5
  425194:	jl     0x4251e0
  425196:	jae    0x4251b6
  425198:	lahf   
  425199:	into   
  42519a:	stos   BYTE PTR es:[edi],al
  42519b:	mov    WORD PTR [esi],?
  42519d:	int    0xcd
  42519f:	ficomp WORD PTR [ebp+0x34]
  4251a2:	dec    ecx
  4251a3:	ins    BYTE PTR es:[edi],dx
  4251a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251a5:	add    ecx,ebx
  4251a7:	and    esp,DWORD PTR es:0x8a15eb6a
  4251ae:	out    dx,al
  4251af:	mov    al,0x4c
  4251b1:	pusha  
  4251b2:	mov    ah,0xb1
  4251b4:	pusha  
  4251b5:	sub    esp,eax
  4251b7:	loope  0x42519c
  4251b9:	sbb    ah,BYTE PTR [eax+ebx*1]
  4251bc:	sub    eax,0x98997021
  4251c1:	retf   0x5732
  4251c4:	sar    DWORD PTR ds:0x97066f1a,0xc3
  4251cb:	mov    cl,al
  4251cd:	std    
  4251ce:	or     eax,0x3f237ffe
  4251d3:	mov    bh,0x73
  4251d5:	ds mov al,0x32
  4251d8:	mov    ecx,0x7ec398eb
  4251dd:	jg     0x4251ea
  4251df:	outs   dx,BYTE PTR ds:[esi]
  4251e0:	(bad)  
  4251e1:	mov    WORD PTR [eax+0x23],ss
  4251e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251e5:	dec    eax
  4251e6:	push   ss
  4251e7:	adc    BYTE PTR ds:0xffeab714,ah
  4251ed:	adc    bh,BYTE PTR [edx-0x4e]
  4251f0:	inc    esi
  4251f1:	add    cl,BYTE PTR [edx-0x42]
  4251f4:	sbb    esp,DWORD PTR [edx+0x4c6392d4]
  4251fa:	int    0x94
  4251fc:	pusha  
  4251fd:	lock and esi,DWORD PTR [ecx+eiz*8]
  425201:	popa   
  425202:	mov    dh,0x4a
  425204:	jle    0x4251fa
  425206:	jae    0x4251c4
  425208:	into   
  425209:	dec    ebx
  42520a:	ins    DWORD PTR es:[edi],dx
  42520b:	adc    al,bl
  42520d:	retf   0x7345
  425210:	pop    edx
  425211:	cld    
  425212:	gs cwde 
  425214:	cmp    al,0x43
  425216:	xchg   esi,eax
  425217:	inc    ebx
  425218:	cmp    DWORD PTR [edi],esi
  42521a:	sub    ah,al
  42521c:	clc    
  42521d:	enter  0xf910,0xcb
  425221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425222:	aaa    
  425223:	fidivr WORD PTR [ecx+0x4f7af96a]
  425229:	arpl   WORD PTR [eax],dx
  42522b:	pop    ds
  42522c:	ficomp WORD PTR [edx-0x3c6dbf45]
  425232:	or     al,0x2c
  425234:	inc    edi
  425235:	add    al,0x53
  425237:	ret    
  425238:	rcl    BYTE PTR [eax-0x2bd64c34],1
  42523e:	or     DWORD PTR [edi-0x3f4f51c3],esp
  425244:	jl     0x425267
  425246:	out    dx,al
  425247:	(bad)  
  425248:	in     eax,dx
  425249:	outs   dx,DWORD PTR ds:[esi]
  42524a:	inc    esi
  42524b:	push   esi
  42524c:	les    esi,FWORD PTR [esi-0x7e61f0df]
  425252:	dec    esp
  425253:	xchg   DWORD PTR [esi+0x744b3986],ebp
  425259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42525a:	push   ebx
  42525b:	xchg   ebp,eax
  42525c:	test   DWORD PTR [ebp+0x15ac0ffb],0x47219e76
  425266:	retf   
  425267:	jbe    0x4251f1
  425269:	jb     0x425259
  42526b:	ficom  DWORD PTR [ebp-0x57fab58f]
  425271:	aas    
  425272:	pop    edi
  425273:	xor    DWORD PTR [edi-0x21342b70],0xffffffee
  42527a:	xchg   esi,eax
  42527b:	mov    ds:0xbd7b515c,eax
  425280:	jge    0x4252d4
  425282:	cs sbb eax,0x1aeb48fc
  425288:	mov    bl,0x1b
  42528a:	dec    ebp
  42528b:	je     0x4252ea
  42528d:	xchg   ecx,eax
  42528e:	cmp    DWORD PTR [edx-0x68],eax
  425291:	in     eax,dx
  425292:	push   esi
  425293:	out    0x4,eax
  425295:	sbb    eax,0x6d7cfa83
  42529a:	sbb    DWORD PTR [esi-0x740abba2],edx
  4252a0:	adc    DWORD PTR [ebp-0x202e9a8],esi
  4252a6:	jbe    0x42529c
  4252a8:	(bad)  
  4252a9:	std    
  4252aa:	fst    QWORD PTR [ebp+0x527739d7]
  4252b0:	inc    ecx
  4252b1:	daa    
  4252b2:	es and bh,bl
  4252b5:	adc    eax,0xaf235de6
  4252ba:	pop    esp
  4252bb:	lock jns 0x425257
  4252be:	cli    
  4252bf:	pop    esi
  4252c0:	push   edx
  4252c1:	adc    ch,BYTE PTR [eax+edi*4-0x64]
  4252c5:	sub    BYTE PTR [ebp+0x3c],bh
  4252c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252c9:	jns    0x4252f0
  4252cb:	pop    ss
  4252cc:	pop    ds
  4252cd:	mov    bh,0xb6
  4252cf:	adc    DWORD PTR [edi-0x6b],0xa50e1263
  4252d6:	retf   
  4252d7:	out    0x81,al
  4252d9:	ds push eax
  4252db:	fisttp DWORD PTR [edi+0x3e390492]
  4252e1:	sub    bh,BYTE PTR [eax+0xd]
  4252e4:	sub    BYTE PTR [ebp+0x2],dh
  4252e7:	cmp    eax,0x700727a2
  4252ec:	pop    ss
  4252ed:	das    
  4252ee:	lea    ebx,[esi]
  4252f0:	cli    
  4252f1:	fdiv   st(5),st
  4252f3:	int3   
  4252f4:	repnz stc 
  4252f6:	push   es
  4252f7:	cmp    eax,DWORD PTR [ebx-0x30]
  4252fa:	push   edi
  4252fb:	in     eax,0x44
  4252fd:	(bad)  
  4252fe:	in     al,0xb4
  425300:	inc    ecx
  425301:	add    BYTE PTR [edi+ecx*4+0x44],ch
  425305:	mov    fs,WORD PTR [eax+0xe]
  425308:	jae    0x4252bc
  42530a:	pop    esi
  42530b:	pop    edi
  42530c:	shr    ebx,0xaf
  42530f:	dec    edi
  425310:	in     eax,0x2a
  425312:	adc    DWORD PTR [eax],eax
  425314:	es xchg ebx,eax
  425316:	or     DWORD PTR es:[esi-0x341fb3c0],ecx
  42531d:	xor    BYTE PTR [ebx],dh
  42531f:	dec    esp
  425320:	jmp    0x42538c
  425322:	mov    ss,WORD PTR [edi-0x658d0ab6]
  425328:	sbb    cl,BYTE PTR [esp+ebx*4+0x5a2942a6]
  42532f:	repz fwait
  425331:	leave  
  425332:	push   edx
  425333:	(bad)  
  425334:	jecxz  0x42533f
  425336:	or     al,0xa8
  425338:	xchg   ecx,eax
  425339:	adc    eax,0xc207a4c2
  42533e:	inc    esp
  42533f:	xchg   BYTE PTR [esi-0x47],dh
  425342:	repnz dec ebx
  425344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425345:	bswap  ecx
  425347:	addr16 (bad) 
  425349:	retf   0x9cfd
  42534c:	call   0x43071a
  425351:	add    BYTE PTR [ebx-0x11909fab],bl
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	scas   al,BYTE PTR es:[edi]
  42535f:	rol    BYTE PTR [edx-0x5c],cl
  425362:	push   ebx
  425363:	int3   
  425364:	add    DWORD PTR [eax],eax
  425366:	cmc    
  425367:	add    al,0x0
  425369:	add    BYTE PTR [ebp-0x1999c7c0],dl
  42536f:	mov    ebx,0xe18624ed
  425374:	dec    edx
  425375:	cmp    eax,0x849d1117
  42537a:	(bad)  
  42537b:	push   edx
  42537c:	stc    
  42537d:	outs   dx,BYTE PTR ds:[esi]
  42537e:	add    eax,0x90af56b3
  425383:	mov    cl,0x4a
  425385:	push   ecx
  425386:	jae    0x4253f3
  425388:	jb     0x42530a
  42538a:	mov    ch,0xc3
  42538c:	jae    0x4253f5
  42538e:	pop    esi
  42538f:	pop    edi
  425390:	sub    BYTE PTR [eax+0x175d41f],cl
  425396:	inc    ecx
  425397:	mov    ch,BYTE PTR [edx+esi*1+0x38]
  42539b:	retf   0xc7dc
  42539e:	or     esp,edx
  4253a0:	scas   al,BYTE PTR es:[edi]
  4253a1:	pusha  
  4253a2:	jno    0x42535a
  4253a4:	dec    ebx
  4253a5:	addr16 retf 
  4253a7:	enter  0x1c72,0x2d
  4253ab:	gs jg  0x425390
  4253ae:	in     eax,0x8d
  4253b0:	mov    WORD PTR [ebx+0xf],ds
  4253b3:	ins    BYTE PTR es:[edi],dx
  4253b4:	ror    BYTE PTR [esi],0xb3
  4253b7:	push   ss
  4253b8:	mov    ebp,0x1aa0d038
  4253bd:	xlat   BYTE PTR ds:[ebx]
  4253be:	int3   
  4253bf:	test   eax,0x55080839
  4253c4:	or     bh,dl
  4253c6:	inc    BYTE PTR [ebx-0x745f7c12]
  4253cc:	aam    0x62
  4253ce:	call   0x7688:0xc57f2189
  4253d5:	out    dx,eax
  4253d6:	leave  
  4253d7:	jge    0x425417
  4253d9:	arpl   WORD PTR ds:[eax+0x21],bx
  4253dd:	scas   eax,DWORD PTR es:[edi]
  4253de:	ins    DWORD PTR es:[edi],dx
  4253df:	jae    0x425378
  4253e1:	mov    esi,0xea6e0baf
  4253e6:	mov    cl,0x6f
  4253e8:	imul   edi,esp,0xffffff91
  4253eb:	mov    cl,0xe3
  4253ed:	sub    ecx,DWORD PTR [ebp+0x5ff8c6d9]
  4253f3:	jmp    0x69f5:0xc6940fef
  4253fa:	std    
  4253fb:	int    0xc5
  4253fd:	xchg   edi,eax
  4253fe:	arpl   si,ax
  425400:	sub    DWORD PTR [ebx-0x64763235],0xd2a825f6
  42540a:	(bad)  
  42540b:	jns    0x425468
  42540d:	bound  eax,QWORD PTR [edi+0x7ad0e27b]
  425413:	xchg   edi,eax
  425414:	fimul  WORD PTR [eax-0x71e242c6]
  42541a:	addr16 stc 
  42541c:	xchg   BYTE PTR [ecx+0x3e],dl
  42541f:	and    DWORD PTR [edx+0x6ba68ed8],ecx
  425425:	inc    ecx
  425426:	mov    ecx,0xfdab8024
  42542b:	push   esi
  42542c:	add    BYTE PTR [edi+0x1974ed69],ah
  425432:	cmp    ecx,DWORD PTR [eax-0x47]
  425435:	icebp  
  425436:	adc    eax,0xe8c8b0f8
  42543b:	std    
  42543c:	sub    DWORD PTR [edx+ebx*1+0x6],eax
  425440:	mov    bl,0x61
  425442:	clc    
  425443:	add    al,0xf1
  425445:	pop    esi
  425446:	inc    ebp
  425447:	test   esp,0xbc2a0759
  42544d:	fild   DWORD PTR [esi]
  42544f:	sbb    al,0xd9
  425451:	add    al,0x97
  425453:	imul   esp,DWORD PTR [edi],0x16
  425456:	or     eax,esi
  425458:	sbb    DWORD PTR [ecx],0x97d69605
  42545e:	sbb    eax,0xda008517
  425463:	mov    eax,0x73e78ca6
  425468:	loop   0x4254da
  42546a:	test   BYTE PTR [edx+0x64],dh
  42546d:	add    DWORD PTR [esi],0x653baa9b
  425473:	pop    ebx
  425474:	lds    esi,FWORD PTR [edi]
  425476:	repz jge 0x42549b
  425479:	inc    ecx
  42547a:	call   0x397b:0xaeb4723b
  425481:	stos   DWORD PTR es:[edi],eax
  425482:	clc    
  425483:	dec    edi
  425484:	jmp    0x4254be
  425486:	pop    es
  425487:	popf   
  425488:	lods   eax,DWORD PTR ds:[esi]
  425489:	clc    
  42548a:	inc    edi
  42548b:	jmp    0xfa72:0xc528b1c
  425492:	sbb    ah,al
  425494:	shl    DWORD PTR [edx],cl
  425496:	pop    ebp
  425497:	adc    BYTE PTR [ecx+0x192c3e28],ah
  42549d:	xchg   edi,eax
  42549e:	mov    eax,0x47050f64
  4254a3:	aam    0x7e
  4254a5:	mov    al,0x26
  4254a7:	loop   0x425503
  4254a9:	pusha  
  4254aa:	cmp    DWORD PTR [edx-0x76203bde],edx
  4254b0:	and    DWORD PTR [ebx+0xd],edx
  4254b3:	add    esi,esi
  4254b5:	mov    edx,eax
  4254b7:	sub    ebp,ecx
  4254b9:	es xor al,0x5b
  4254bc:	in     al,dx
  4254bd:	inc    DWORD PTR [ebx+ecx*1]
  4254c0:	cmp    eax,0x7bfe2fc2
  4254c5:	add    ebp,DWORD PTR [ebp-0x2c]
  4254c8:	and    BYTE PTR ss:[ecx+edi*1],bh
  4254cc:	or     DWORD PTR ds:0x8b1cc695,0x1b
  4254d3:	jne    0x425540
  4254d5:	pusha  
  4254d6:	sbb    ebp,ebx
  4254d8:	sub    al,0x4d
  4254da:	inc    edx
  4254db:	xor    esi,edi
  4254dd:	shr    BYTE PTR [ecx],0x97
  4254e0:	call   0x518f052
  4254e5:	jnp    0x425488
  4254e7:	jo     0x42546c
  4254e9:	jmp    0xb893:0x52d730a
  4254f0:	adc    eax,0x114fbf10
  4254f5:	lods   al,BYTE PTR ds:[esi]
  4254f6:	dec    ecx
  4254f7:	lea    esp,[ecx+0x3]
  4254fa:	daa    
  4254fb:	loopne 0x42548c
  4254fd:	fidiv  WORD PTR [ebx+0x7e]
  425500:	retf   
  425501:	and    ecx,DWORD PTR [edi-0x16546b66]
  425507:	mov    ecx,0x79f87302
  42550c:	fistp  QWORD PTR [ecx]
  42550e:	mov    ebp,0x2f5ffdcd
  425513:	stos   BYTE PTR es:[edi],al
  425514:	test   DWORD PTR [ecx-0x5a866dd9],edi
  42551a:	jb     0x425584
  42551c:	shl    DWORD PTR [ecx],cl
  42551e:	xor    ebp,eax
  425520:	sub    ch,dh
  425522:	and    DWORD PTR [eax-0x5e],ebp
  425525:	dec    esp
  425526:	sti    
  425527:	vcvtsi2sd xmm1,xmm4,DWORD PTR [esi+esi*2+0x7e085bdb]
  425530:	test   BYTE PTR [ebx+0x51c8b8a],cl
  425536:	jno    0x4254e5
  425538:	mov    ebp,DWORD PTR [eax+0x7a]
  42553b:	shl    BYTE PTR [edx],cl
  42553d:	jmp    0x2087:0x21f4675d
  425544:	and    BYTE PTR [edx+0x739e7681],dh
  42554a:	inc    ebx
  42554b:	jb     0x42550f
  42554d:	pop    edx
  42554e:	xchg   ebx,eax
  42554f:	scas   eax,DWORD PTR es:[edi]
  425550:	rcr    DWORD PTR [ebp+0x3],cl
  425553:	inc    edx
  425554:	push   edx
  425555:	adc    al,0x64
  425557:	ja     0x425535
  425559:	add    al,0x9a
  42555b:	mov    ebx,0x32ba0306
  425560:	mov    bl,0x7c
  425562:	xchg   ebx,eax
  425563:	mov    eax,0x3ca6e827
  425568:	adc    eax,0x45547fe1
  42556d:	or     DWORD PTR [ebp+0xf],edi
  425570:	and    DWORD PTR [edi],edx
  425572:	jnp    0x42557e
  425574:	mov    ds:0x7a45244f,al
  425579:	xchg   DWORD PTR [eax-0x193ed1e],edx
  42557f:	test   eax,0x8b982282
  425584:	fst    DWORD PTR [eax]
  425586:	mov    DWORD PTR [edx+0x15fffa83],ecx
  42558c:	inc    eax
  42558d:	mov    bh,BYTE PTR [eax]
  42558f:	pop    edi
  425590:	fwait
  425591:	inc    esi
  425592:	push   cs
  425593:	ficomp WORD PTR [edi]
  425595:	pushf  
  425596:	scas   al,BYTE PTR es:[edi]
  425597:	cmp    DWORD PTR [edi],ebp
  425599:	retf   
  42559a:	imul   ecx,esp,0x45bd2639
  4255a0:	dec    esi
  4255a1:	push   ecx
  4255a2:	pop    ebp
  4255a3:	jb     0x42555a
  4255a5:	fnsave [ebx]
  4255a7:	xor    DWORD PTR [esi+0x70],esi
  4255aa:	cwde   
  4255ab:	push   eax
  4255ac:	(bad)  
  4255ad:	mov    ecx,0xe59cd8a8
  4255b2:	pop    eax
  4255b3:	pop    ss
  4255b4:	(bad)  [esi+0x6f]
  4255b7:	sub    al,0x5c
  4255b9:	jmp    0x425639
  4255bb:	loope  0x4255d1
  4255bd:	out    dx,eax
  4255be:	fsub   QWORD PTR [ecx+0x501c858a]
  4255c4:	clc    
  4255c5:	pop    ebp
  4255c6:	push   ebp
  4255c7:	sbb    esi,DWORD PTR [edi]
  4255c9:	cmp    eax,ecx
  4255cb:	call   0xfa11:0xba03d55a
  4255d2:	adc    BYTE PTR [edx+0x59],dh
  4255d5:	cmp    dh,BYTE PTR [edi]
  4255d7:	fisubr WORD PTR [ecx+0x4]
  4255da:	std    
  4255db:	push   esi
  4255dc:	jo     0x425577
  4255de:	mov    ecx,0x164abcc
  4255e3:	adc    DWORD PTR [eax-0xaa27021],ebp
  4255e9:	xchg   esi,eax
  4255ea:	push   0xa53e2415
  4255ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255f0:	scas   eax,DWORD PTR es:[edi]
  4255f1:	std    
  4255f2:	mov    edi,DWORD PTR [edi-0x5160ecdb]
  4255f8:	jecxz  0x42565f
  4255fa:	mov    esi,0x5e38b23f
  4255ff:	and    DWORD PTR [ebp-0x1fdf3d6d],eax
  425605:	mov    bh,0x14
  425607:	mov    BYTE PTR [eax],dh
  425609:	mov    ecx,es
  42560b:	ret    0xae7c
  42560e:	sub    eax,edi
  425610:	mov    bh,0x70
  425612:	scas   eax,DWORD PTR es:[edi]
  425613:	imul   ecx,DWORD PTR ds:0xb57a95b2,0xa9a1dfc4
  42561d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42561e:	pop    es
  42561f:	(bad)  
  425620:	ret    
  425621:	xchg   edx,eax
  425622:	std    
  425623:	sbb    BYTE PTR [eax-0x67],bh
  425626:	aam    0x49
  425628:	xor    bl,BYTE PTR [esi]
  42562a:	add    eax,0xd41a22b9
  42562f:	and    dh,ch
  425631:	mov    ch,0x59
  425633:	sub    al,0x2d
  425635:	ins    DWORD PTR es:[edi],dx
  425636:	stc    
  425637:	ret    0x14dc
  42563a:	push   es
  42563b:	fcom   QWORD PTR ds:0xc0565380
  425641:	mov    esi,0x8f57d215
  425646:	push   esp
  425647:	sbb    ch,BYTE PTR [edi-0xdc0770e]
  42564d:	cmp    al,0x1e
  42564f:	sub    ax,WORD PTR [edi+0x725db6a2]
  425656:	adc    esi,DWORD PTR fs:[esi]
  425659:	pop    esi
  42565a:	inc    esp
  42565b:	pop    edi
  42565c:	jmp    0x425630
  42565e:	fldenv ds:0x75415b4a
  425664:	cwde   
  425665:	or     al,0x9
  425667:	test   BYTE PTR [ebp-0x67],ah
  42566a:	mov    ah,0xb5
  42566c:	sbb    dl,BYTE PTR [esi+0x61]
  42566f:	rcr    DWORD PTR [eax+ebx*1],1
  425672:	cmp    ecx,DWORD PTR [ebx+0x6a]
  425675:	inc    ebx
  425676:	stos   DWORD PTR es:[edi],eax
  425677:	jb     0x42564f
  425679:	add    eax,esi
  42567b:	ds in  eax,dx
  42567d:	mov    DWORD PTR [esi],eax
  42567f:	add    eax,0xf1b428b2
  425684:	jmp    0xb9b4a5d2
  425689:	fs or  ebx,DWORD PTR ds:[edi+0x75]
  42568e:	cdq    
  42568f:	jo     0x4256e0
  425691:	push   edi
  425692:	(bad)  
  425693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425694:	js     0x42563c
  425696:	inc    edi
  425697:	inc    edi
  425698:	push   es
  425699:	sub    bl,dl
  42569b:	xchg   esp,eax
  42569c:	jbe    0x42570a
  42569e:	scas   al,BYTE PTR es:[edi]
  42569f:	xchg   ebx,eax
  4256a0:	imul   DWORD PTR [ebx+0x52f54fb]
  4256a6:	lods   eax,DWORD PTR ds:[esi]
  4256a7:	stc    
  4256a8:	iret   
  4256a9:	xor    eax,0x9eb57a0c
  4256ae:	pop    eax
  4256af:	adc    al,0x20
  4256b1:	sbb    DWORD PTR [eax+0x33],esi
  4256b4:	ret    
  4256b5:	out    dx,al
  4256b6:	lds    esp,FWORD PTR [edi]
  4256b8:	sbb    BYTE PTR [ebp+0x6c],dl
  4256bb:	inc    ecx
  4256bc:	jg     0x4256e3
  4256be:	vpaddd xmm1,xmm2,XMMWORD PTR [ebp-0x64]
  4256c3:	add    BYTE PTR [edi-0x72eb5f67],bh
  4256c9:	mov    edx,0x105e6150
  4256ce:	ja     0x4256a3
  4256d0:	icebp  
  4256d1:	xchg   ebx,eax
  4256d2:	or     eax,0x5cedf771
  4256d7:	jbe    0x425659
  4256d9:	add    eax,0x6aa1be17
  4256de:	or     ebp,DWORD PTR [edi+0x6b]
  4256e1:	add    eax,0xa142bb1c
  4256e6:	or     DWORD PTR [edi+0x177bfe7],ecx
  4256ec:	push   cs
  4256ed:	nop
  4256ee:	jecxz  0x425720
  4256f0:	scas   eax,DWORD PTR es:[edi]
  4256f1:	mul    dh
  4256f3:	ja     0x425732
  4256f5:	mov    dh,BYTE PTR [edx-0x6c0e3418]
  4256fb:	jae    0x4256c7
  4256fd:	std    
  4256fe:	test   DWORD PTR [eax-0x6d],ebx
  425701:	pop    edi
  425702:	mov    eax,ds:0xf10f04b0
  425707:	add    al,0x89
  425709:	mov    ebx,ebp
  42570b:	jo     0x42573e
  42570d:	xchg   ebx,eax
  42570e:	cmp    al,0xbb
  425710:	mov    eax,ds:0xf8ca14bf
  425715:	dec    ecx
  425716:	lock push ebx
  425718:	sub    eax,0x99671655
  42571d:	sbb    esp,esi
  42571f:	(bad)  
  425720:	lods   eax,DWORD PTR ds:[esi]
  425721:	sar    BYTE PTR [ecx],cl
  425723:	jecxz  0x42578d
  425725:	psubusb mm3,QWORD PTR [ecx-0x7a41f3ae]
  42572c:	mov    DWORD PTR [ecx-0xf],eax
  42572f:	idiv   BYTE PTR [edi+0x3bd436da]
  425735:	cmp    BYTE PTR [ecx],ah
  425737:	imul   edx,DWORD PTR [ebx-0x1ac06e10],0xfffffff1
  42573e:	outs   dx,BYTE PTR ds:[esi]
  42573f:	jmp    0x42579b
  425741:	fsubr  QWORD PTR [ecx+0x6839e95e]
  425747:	ret    
  425748:	dec    edi
  425749:	cmp    DWORD PTR [edi+eax*8-0x77109b1e],0x43
  425751:	mov    edx,0xc470fab
  425756:	lods   al,BYTE PTR ds:[esi]
  425757:	push   ss
  425758:	sti    
  425759:	cmp    DWORD PTR [ecx],esi
  42575b:	cmp    bl,dh
  42575d:	dec    ecx
  42575e:	ret    
  42575f:	xchg   edx,eax
  425760:	jno    0x425746
  425762:	popf   
  425763:	jge    0x42573e
  425765:	int3   
  425766:	fimul  DWORD PTR [ebx+0x10]
  425769:	cmp    dl,BYTE PTR [eax+ebx*8-0x6d]
  42576d:	jmp    0x425720
  42576f:	hlt    
  425770:	inc    esp
  425771:	std    
  425772:	cmp    bl,BYTE PTR [edi+0x2e]
  425775:	ins    DWORD PTR es:[edi],dx
  425776:	pop    esp
  425777:	jmp    0x14ec:0xf0c57f3c
  42577e:	sti    
  42577f:	xor    BYTE PTR [ebx-0x14],bl
  425782:	mov    al,ds:0x8e0bfecf
  425787:	push   cs
  425788:	mov    eax,0xe5477bca
  42578d:	dec    ebp
  42578e:	fst    st(5)
  425790:	(bad)  
  425791:	mov    ds:0xb60cc6a9,al
  425796:	xlat   BYTE PTR ds:[ebx]
  425797:	add    eax,0xb5218342
  42579c:	sub    cl,cl
  42579e:	sbb    ebx,DWORD PTR [ebx]
  4257a0:	adc    DWORD PTR [edi],esp
  4257a2:	sar    esp,cl
  4257a4:	sub    eax,0xcca69bf7
  4257a9:	jecxz  0x425777
  4257ab:	test   DWORD PTR [ecx+0x383f3580],ebp
  4257b1:	inc    esp
  4257b2:	imul   BYTE PTR [edx+0x8c0f69]
  4257b8:	or     eax,0x8463e761
  4257bd:	pushf  
  4257be:	neg    BYTE PTR [edi+0x1e0ee5dd]
  4257c4:	test   BYTE PTR [ebx],bl
  4257c6:	(bad)  
  4257c8:	mov    esi,0xdbc8c2f4
  4257cd:	ds test eax,0x61bae983
  4257d3:	imul   esi,DWORD PTR [eax+0x6be95210],0x8c23d986
  4257dd:	sub    al,BYTE PTR [ebx-0x21]
  4257e0:	xchg   esi,eax
  4257e1:	je     0x4257b6
  4257e3:	mov    dh,0xa2
  4257e5:	push   edi
  4257e6:	fstp   QWORD PTR [ebx+0x74932880]
  4257ec:	(bad)  
  4257ed:	fs cld 
  4257ef:	test   eax,0xa4e7631c
  4257f4:	fnsave [esi+0x3e]
  4257f7:	mov    ah,0x2a
  4257f9:	sbb    ebx,edx
  4257fb:	mov    ch,0xf8
  4257fd:	xchg   edx,eax
  4257fe:	xor    eax,0x6a3c81d5
  425803:	in     eax,dx
  425804:	icebp  
  425805:	ss sti 
  425807:	xor    DWORD PTR [edx+0x7c226fd7],0xffffffec
  42580e:	dec    ebx
  42580f:	mov    esi,0xdd7049ed
  425814:	and    BYTE PTR [edx+0xa],bh
  425817:	jmp    0xbda1:0xbe0b5050
  42581e:	add    eax,0xf26133c4
  425823:	pop    edi
  425824:	je     0x42582e
  425826:	and    edi,DWORD PTR [ecx]
  425828:	xchg   ebx,eax
  425829:	jnp    0x425887
  42582b:	jg     0x4257af
  42582d:	mov    dl,BYTE PTR ds:0x61d27e18
  425833:	pop    ds
  425834:	pop    ecx
  425835:	bound  ecx,QWORD PTR [ebx]
  425837:	pop    edx
  425838:	cmp    al,0xe1
  42583a:	sub    cl,cl
  42583c:	add    al,0xa1
  42583e:	scas   eax,DWORD PTR es:[edi]
  42583f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425840:	lods   eax,DWORD PTR ds:[esi]
  425841:	adc    BYTE PTR [ecx+edx*1+0x19a5868c],bh
  425848:	fsub   QWORD PTR [ebx+esi*8-0x62]
  42584c:	loope  0x42589c
  42584e:	aam    0xee
  425850:	add    eax,DWORD PTR [edi+0x136f2c3d]
  425856:	test   DWORD PTR [esi],edi
  425858:	sbb    ebp,DWORD PTR [ebx+ecx*4-0x25]
  42585c:	dec    esp
  42585d:	inc    edx
  42585e:	xor    DWORD PTR [eax],eax
  425860:	add    BYTE PTR [eax],al
  425862:	add    eax,0xaf44af85
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx-0x63a2c908]
  42586f:	push   ebx
  425870:	mov    dh,0x9d
  425872:	dec    eax
  425873:	rol    DWORD PTR [ecx],1
  425875:	add    ch,dh
  425877:	add    al,0x0
  425879:	add    BYTE PTR [esi+ecx*4+0x2823eb7],ah
  425880:	xor    DWORD PTR [esi],edx
  425882:	ror    BYTE PTR [ebp-0x8],1
  425885:	gs dec edi
  425887:	lds    ebp,FWORD PTR [edx]
  425889:	jae    0x425825
  42588b:	xchg   DWORD PTR [eax+eax*8+0x2c],ebx
  42588f:	retf   
  425890:	loop   0x4258d6
  425892:	mov    esp,0xffdc1ade
  425897:	jmp    0x8ca5:0x2f78d423
  42589e:	pop    es
  42589f:	or     al,0x75
  4258a1:	mov    esp,eax
  4258a3:	sbb    al,0x2e
  4258a5:	rcr    bl,1
  4258a7:	cwde   
  4258a8:	jbe    0x4258be
  4258aa:	xor    edi,DWORD PTR [ebx]
  4258ac:	and    eax,0xfbd4d4d5
  4258b1:	out    dx,eax
  4258b2:	push   eax
  4258b3:	mov    ecx,0xdb622ead
  4258b8:	or     edx,ebp
  4258ba:	mov    ?,edi
  4258bc:	inc    esi
  4258bd:	pop    ecx
  4258be:	outs   dx,BYTE PTR ds:[esi]
  4258bf:	mov    ebp,0x4497820f
  4258c4:	mov    esi,0xea70ea1e
  4258c9:	cwde   
  4258ca:	pop    es
  4258cb:	mov    edi,0xf29ee8a3
  4258d0:	pusha  
  4258d1:	icebp  
  4258d2:	pop    esp
  4258d3:	or     al,0x56
  4258d5:	jge    0x4258f3
  4258d7:	jmp    0x7e18ac8d
  4258dc:	mov    BYTE PTR [ecx],bl
  4258de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258df:	mov    eax,0x9d0369
  4258e4:	mov    esi,0x8f2510d5
  4258e9:	mov    ch,0x9b
  4258eb:	pop    ds
  4258ec:	inc    ebx
  4258ed:	mov    DWORD PTR [eax+0x4fb5f544],eax
  4258f3:	mov    ch,0x6c
  4258f5:	mov    eax,0xdec4617c
  4258fa:	mov    esp,0x6ec3da20
  4258ff:	fiadd  WORD PTR [esi]
  425901:	xchg   edi,eax
  425902:	or     ch,BYTE PTR [edx+esi*8]
  425905:	mov    edx,0x5318f5cc
  42590a:	test   DWORD PTR [edx-0x2238b556],0x1798c512
  425914:	imul   edi,DWORD PTR [ecx],0xb14256e2
  42591a:	mov    ds:0xc1fccb80,al
  42591f:	mov    cl,0xa3
  425921:	(bad)  
  425923:	sub    DWORD PTR [edx+0x55ce5928],eax
  425929:	(bad)  
  42592a:	sahf   
  42592b:	aad    0xae
  42592d:	or     al,0xf7
  42592f:	clc    
  425930:	jb     0x425964
  425932:	ss push 0xfffffff4
  425935:	leave  
  425936:	adc    DWORD PTR [ebp-0x56ef9185],ecx
  42593c:	add    ch,BYTE PTR [esi]
  42593e:	jbe    0x4258e8
  425940:	out    0x28,eax
  425942:	inc    esi
  425943:	arpl   dx,si
  425945:	xchg   BYTE PTR [edx],dh
  425947:	aam    0xbc
  425949:	inc    ebx
  42594a:	add    cl,BYTE PTR [esi+0x7045ea7f]
  425950:	inc    ebp
  425951:	call   0xf16c:0x3b34b0ee
  425958:	mov    dh,0x6b
  42595a:	and    eax,0xd0c52609
  42595f:	nop
  425960:	add    bh,bl
  425962:	pop    esi
  425963:	mov    BYTE PTR [edx+0x38307c15],0x11
  42596a:	mov    edi,0xbda09d78
  42596f:	lea    edi,[eax]
  425971:	(bad)  
  425973:	push   ecx
  425974:	jg     0x425943
  425976:	loopne 0x4259ed
  425978:	pushf  
  425979:	adc    eax,0x6c037743
  42597e:	(bad)  [edi]
  425980:	push   es
  425981:	dec    DWORD PTR [eax]
  425983:	ret    
  425984:	shl    BYTE PTR [ebp+0x34],0x9e
  425988:	cs out dx,al
  42598a:	jge    0x425968
  42598c:	aad    0x1a
  42598e:	mov    esi,0x1657b67f
  425993:	mov    dl,0xbd
  425995:	adc    eax,0x9e05829d
  42599a:	lods   eax,DWORD PTR ds:[esi]
  42599b:	xchg   DWORD PTR [eax+0x45],esi
  42599e:	inc    eax
  42599f:	and    ebp,DWORD PTR [edx]
  4259a1:	xchg   ebp,eax
  4259a2:	sbb    eax,0x73191e87
  4259a7:	fdivrp st(6),st
  4259a9:	or     al,0x7b
  4259ab:	cld    
  4259ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259ad:	or     eax,0x8b4439ef
  4259b2:	adc    BYTE PTR [ebp+0x5c2850a4],0x92
  4259b9:	fmul   QWORD PTR [ecx+eax*2-0x26]
  4259bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259be:	fbstp  TBYTE PTR [edi+0x21]
  4259c1:	jmp    0xf41b:0x1b1e48fe
  4259c8:	mov    eax,0x47e6c6e0
  4259cd:	jg     0x425989
  4259cf:	inc    eax
  4259d0:	cld    
  4259d1:	dec    esi
  4259d2:	inc    edi
  4259d3:	idiv   BYTE PTR [edx-0x26d3d829]
  4259d9:	sub    eax,0x972e3694
  4259de:	add    al,0x9
  4259e0:	jnp    0x4259f9
  4259e2:	sbb    DWORD PTR [ebp-0x27058dc5],ebp
  4259e8:	das    
  4259e9:	retf   
  4259ea:	pop    edi
  4259eb:	imul   esi,edx,0xffffffb6
  4259ee:	mov    ds:0xcf2a7ae5,al
  4259f3:	fwait
  4259f4:	cwde   
  4259f5:	mov    ebx,0x72485c64
  4259fa:	fisttp QWORD PTR [eax+0x68247f25]
  425a00:	aam    0x12
  425a02:	xchg   DWORD PTR ds:0x858b38d5,ecx
  425a08:	and    BYTE PTR [ebx+eax*4+0x16973be7],dh
  425a0f:	pop    edi
  425a10:	cmp    ah,BYTE PTR [ecx+0x41]
  425a13:	hlt    
  425a14:	cwde   
  425a15:	mov    BYTE PTR [eax],dh
  425a17:	sbb    ebx,DWORD PTR [eax]
  425a19:	inc    ecx
  425a1a:	mov    al,ds:0x41d79d32
  425a1f:	call   0x7a65eb1e
  425a24:	mov    cs,WORD PTR [esi-0x582e64a1]
  425a2a:	ds sub al,0x63
  425a2d:	add    BYTE PTR [eax],dl
  425a2f:	rcr    BYTE PTR [esi+0x57],cl
  425a32:	or     BYTE PTR [ebp+0xc],cl
  425a35:	xor    eax,0xb3b0953e
  425a3a:	pop    ss
  425a3b:	ja     0x4259cd
  425a3d:	mov    esi,0xd304f4b8
  425a42:	fwait
  425a43:	xor    esi,DWORD PTR [edx-0x60]
  425a46:	mov    esi,0x416a94dd
  425a4b:	aaa    
  425a4c:	dec    edi
  425a4d:	mov    eax,0x2120e020
  425a52:	xchg   BYTE PTR [eax],cl
  425a54:	mov    ah,0x1a
  425a56:	cmp    bl,ch
  425a58:	clc    
  425a59:	into   
  425a5a:	in     eax,0xa5
  425a5c:	dec    ebp
  425a5d:	outs   dx,DWORD PTR ds:[esi]
  425a5e:	retf   0xce23
  425a61:	paddw  mm5,QWORD PTR ds:0x60064c16
  425a68:	inc    DWORD PTR [ebx]
  425a6a:	jbe    0x425a1d
  425a6c:	xchg   ecx,eax
  425a6d:	call   0xcb6c122b
  425a72:	dec    ebp
  425a73:	in     al,dx
  425a74:	fld    QWORD PTR [esi-0x2f]
  425a77:	scas   eax,DWORD PTR es:[edi]
  425a78:	inc    edi
  425a79:	loop   0x425aab
  425a7b:	ror    BYTE PTR [ebp+ebp*4-0x1a5d1e93],cl
  425a82:	loop   0x425a04
  425a84:	mov    al,ds:0xc171a134
  425a89:	popa   
  425a8a:	inc    esp
  425a8b:	(bad)
  425a8e:	in     al,0xfa
  425a90:	xchg   esi,eax
  425a91:	push   esi
  425a92:	clc    
  425a93:	mov    DWORD PTR [edx+0x78],edi
  425a96:	not    DWORD PTR [ebp+0x21]
  425a99:	mov    edi,0xeec296e7
  425a9e:	in     al,0x4a
  425aa0:	das    
  425aa1:	adc    al,0xc5
  425aa3:	cli    
  425aa4:	jbe    0x425a5f
  425aa6:	scas   al,BYTE PTR es:[edi]
  425aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425aa8:	aam    0xdf
  425aaa:	inc    edx
  425aab:	cdq    
  425aac:	jge    0x425a4f
  425aae:	mov    dl,0x99
  425ab1:	pop    es
  425ab2:	or     ebp,DWORD PTR [ecx]
  425ab4:	sbb    BYTE PTR [di],ah
  425ab7:	nop
  425ab8:	js     0x425aac
  425aba:	jns    0x425b13
  425abc:	jp     0x425a5e
  425abe:	mov    edx,0x1ce9e80a
  425ac3:	inc    eax
  425ac4:	xlat   BYTE PTR ds:[ebx]
  425ac5:	cmc    
  425ac6:	(bad)  
  425ac8:	cmp    edx,ecx
  425aca:	or     DWORD PTR [ecx-0x45],ebp
  425acd:	sar    DWORD PTR [edi],1
  425acf:	xchg   edi,eax
  425ad0:	sti    
  425ad1:	lock xchg DWORD PTR [eax+0x27],esi
  425ad5:	pop    es
  425ad6:	sub    dl,BYTE PTR [edi+0x539c3a7e]
  425adc:	stos   BYTE PTR es:[edi],al
  425add:	jae    0x425a65
  425adf:	xchg   edi,eax
  425ae0:	lods   al,BYTE PTR ds:[esi]
  425ae1:	popf   
  425ae2:	or     edi,DWORD PTR [esi+0x2]
  425ae5:	cmp    bl,BYTE PTR [edx]
  425ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ae8:	jns    0x425a9a
  425aea:	dec    esi
  425aeb:	push   cs
  425aec:	mov    al,0x90
  425aee:	pop    esi
  425aef:	push   esp
  425af0:	adc    BYTE PTR [esi],ah
  425af2:	and    al,0x64
  425af4:	adc    DWORD PTR [edi-0x4d4c72e0],eax
  425afa:	(bad)  
  425afb:	sbb    eax,0x18e4fe7f
  425b00:	xchg   edi,edx
  425b02:	mov    ds:0x394f9ea8,eax
  425b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b08:	les    ecx,FWORD PTR [ebp-0x315b6540]
  425b0e:	pop    eax
  425b0f:	push   esp
  425b10:	sti    
  425b11:	scas   eax,DWORD PTR es:[edi]
  425b12:	mov    dl,0xa
  425b14:	pop    ebx
  425b15:	sbb    BYTE PTR [eax+0x4ae5f93d],0x6f
  425b1c:	imul   eax,DWORD PTR [esp+esi*2+0x2a],0xfffffff4
  425b21:	push   esi
  425b22:	popa   
  425b23:	mov    esi,0xd0508e22
  425b28:	pop    es
  425b29:	mov    esp,0x7f23ec4e
  425b2e:	mov    BYTE PTR [edi+ebp*2-0x5c],dl
  425b32:	inc    eax
  425b33:	in     eax,dx
  425b34:	rcl    BYTE PTR [edx+0x33],1
  425b37:	jp     0x425adb
  425b39:	xchg   edx,eax
  425b3a:	pusha  
  425b3b:	mov    WORD PTR [edi-0x3a],cs
  425b3e:	add    edx,DWORD PTR [ebp+0x427ac228]
  425b44:	mov    cl,0x71
  425b46:	cmc    
  425b47:	inc    ebp
  425b48:	out    dx,eax
  425b49:	push   eax
  425b4a:	sbb    DWORD PTR fs:[edx],esp
  425b4d:	jmp    DWORD PTR [ebx+0x36]
  425b50:	sbb    cl,dl
  425b52:	jp     0x425b17
  425b54:	mov    ecx,0x9899c4c3
  425b59:	lahf   
  425b5a:	stos   BYTE PTR es:[edi],al
  425b5b:	pop    esi
  425b5c:	add    BYTE PTR [ecx],ah
  425b5e:	ret    0xe899
  425b61:	add    ecx,DWORD PTR [esi]
  425b63:	daa    
  425b64:	call   0x50418248
  425b69:	sti    
  425b6a:	pop    ds
  425b6b:	test   eax,0x37ae6742
  425b70:	(bad)  [esi+0x412fb6d]
  425b76:	out    dx,eax
  425b77:	pop    edi
  425b78:	xchg   edx,eax
  425b79:	leave  
  425b7a:	(bad)  
  425b7b:	pop    edi
  425b7c:	retf   
  425b7d:	jmp    0x7992:0x5f75784d
  425b84:	adc    esi,DWORD PTR [edx]
  425b86:	push   ebp
  425b87:	and    dh,BYTE PTR [ecx+0x5fd89d01]
  425b8d:	fstp   DWORD PTR [ecx+0x5]
  425b90:	hlt    
  425b91:	out    dx,ax
  425b93:	or     BYTE PTR [edi],0xc3
  425b96:	sbb    ecx,DWORD PTR [eax+0x45026732]
  425b9c:	aas    
  425b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b9e:	dec    eax
  425b9f:	clc    
  425ba0:	add    ebp,DWORD PTR [eax+0x72581e5d]
  425ba6:	mov    eax,ds:0xbdcb9b0f
  425bab:	lock jbe 0x425bfb
  425bae:	mov    esp,0x6c7882e6
  425bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bb4:	dec    eax
  425bb6:	sbb    ch,BYTE PTR [esi]
  425bb8:	or     ah,BYTE PTR [eax]
  425bba:	nop
  425bbb:	pop    edx
  425bbc:	cwde   
  425bbd:	arpl   WORD PTR [esi],sp
  425bbf:	dec    ebx
  425bc0:	dec    edx
  425bc1:	stos   BYTE PTR es:[edi],al
  425bc2:	xchg   ebx,eax
  425bc3:	cmp    BYTE PTR [ebx],dh
  425bc5:	mov    ds:0x19c00217,al
  425bca:	mov    edx,0x41fccf00
  425bcf:	repnz sbb al,0xf0
  425bd2:	pop    ds
  425bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bd4:	stos   DWORD PTR es:[edi],eax
  425bd5:	mov    cl,0x4
  425bd7:	std    
  425bd8:	mov    cl,0xbb
  425bda:	leave  
  425bdb:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  425bdd:	shl    DWORD PTR [eax+0x1f],0xe6
  425be1:	dec    ebx
  425be2:	mov    bl,0xa9
  425be4:	mov    esp,0xcb5f3d3
  425be9:	jnp    0x425c5b
  425beb:	lods   eax,DWORD PTR ds:[esi]
  425bec:	aad    0x72
  425bee:	mov    al,ds:0x37edfcc9
  425bf3:	xchg   DWORD PTR [esp+edi*1],eax
  425bf6:	mov    al,0xec
  425bf8:	sbb    bl,BYTE PTR [esi-0x47081054]
  425bfe:	jbe    0x425c2e
  425c00:	sub    dh,dh
  425c02:	gs sub al,0x5f
  425c05:	ret    0x5183
  425c08:	xchg   esi,eax
  425c09:	cli    
  425c0a:	xchg   ebx,eax
  425c0b:	stos   BYTE PTR es:[edi],al
  425c0c:	mov    ah,0x47
  425c0e:	cld    
  425c0f:	add    BYTE PTR [eax-0x21],0xf2
  425c13:	xchg   esi,eax
  425c14:	push   ss
  425c15:	outs   dx,DWORD PTR ds:[esi]
  425c16:	pop    edi
  425c17:	jbe    0x425c43
  425c19:	retf   
  425c1a:	mov    edi,0xe8e2fc6d
  425c1f:	sub    BYTE PTR [eax-0x25],al
  425c22:	(bad)  
  425c23:	fistp  DWORD PTR [edi+0x32c8288e]
  425c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c2a:	iret   
  425c2b:	xchg   BYTE PTR [esi-0x3d2cc855],cl
  425c31:	sbb    al,0xf4
  425c33:	inc    ebx
  425c34:	gs push 0xfffffffc
  425c37:	fmul   QWORD PTR [edi]
  425c39:	or     DWORD PTR [ebx],0x8f8286e
  425c3f:	xchg   esi,eax
  425c40:	and    edi,edx
  425c42:	xor    DWORD PTR [esi+edi*1],ebp
  425c45:	loope  0x425bd8
  425c47:	lahf   
  425c48:	mov    ebx,ebp
  425c4a:	adc    edi,DWORD PTR [ebx]
  425c4c:	lahf   
  425c4d:	xchg   ebp,eax
  425c4e:	(bad)  
  425c4f:	int3   
  425c50:	loopne 0x425c41
  425c52:	popa   
  425c53:	mov    cl,0xa6
  425c55:	xchg   DWORD PTR [eax],edx
  425c57:	(bad)  
  425c58:	push   ss
  425c59:	sub    dh,0x27
  425c5c:	xlat   BYTE PTR ds:[ebx]
  425c5d:	jne    0x425c85
  425c5f:	sbb    esi,DWORD PTR [ebp-0x1a3bf6e5]
  425c65:	pusha  
  425c66:	fs push esp
  425c68:	cmp    edi,DWORD PTR [edi+0x37]
  425c6b:	dec    al
  425c6d:	inc    esp
  425c6e:	je     0x425c13
  425c70:	outs   dx,BYTE PTR ds:[esi]
  425c71:	(bad)  
  425c72:	test   DWORD PTR [ebx-0x25fffbc3],0x32d35d8c
  425c7c:	cwde   
  425c7d:	and    esi,DWORD PTR [ebp-0x74]
  425c80:	adc    DWORD PTR [ebp-0x40],ecx
  425c83:	imul   ebx,DWORD PTR [ecx-0x6a8a503d],0xc
  425c8a:	cdq    
  425c8b:	xchg   esi,eax
  425c8c:	sub    ebx,eax
  425c8e:	(bad)  
  425c8f:	mov    eax,0x72156a1e
  425c94:	dec    BYTE PTR [ecx]
  425c96:	pop    ecx
  425c97:	rcr    DWORD PTR [edi],cl
  425c99:	out    0xd,eax
  425c9b:	arpl   WORD PTR [ebp-0x1d],di
  425c9e:	daa    
  425c9f:	sbb    al,0xa3
  425ca1:	cmp    al,0x68
  425ca3:	scas   eax,DWORD PTR es:[edi]
  425ca4:	cs inc edi
  425ca6:	jnp    0x425c7d
  425ca8:	push   ebx
  425ca9:	sub    BYTE PTR [eax-0x58657fa3],ch
  425caf:	sahf   
  425cb0:	iret   
  425cb1:	std    
  425cb2:	addr16 mov ch,0x52
  425cb5:	and    DWORD PTR [ebp-0x75],ecx
  425cb8:	mov    ecx,esi
  425cba:	add    eax,0xcd73b27d
  425cbf:	xor    DWORD PTR [eax+0x4055ca6c],eax
  425cc5:	pop    ebp
  425cc6:	mov    edi,esp
  425cc8:	cmp    al,0x88
  425cca:	or     ah,ah
  425ccc:	inc    ecx
  425ccd:	jmp    0x7f21a9bd
  425cd2:	out    0xa,al
  425cd4:	loop   0x425ccb
  425cd6:	inc    eax
  425cd7:	jbe    0x425cdc
  425cd9:	jno    0x425ca3
  425cdb:	inc    BYTE PTR [ecx+0x31]
  425cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cdf:	lods   eax,DWORD PTR ds:[esi]
  425ce0:	cli    
  425ce1:	lea    ecx,[edx-0x52d48eb5]
  425ce7:	mov    cl,0x78
  425ce9:	sbb    eax,0x29351cdd
  425cee:	dec    eax
  425cef:	inc    ebp
  425cf0:	scas   eax,DWORD PTR es:[edi]
  425cf1:	sub    al,BYTE PTR [esi]
  425cf3:	mov    DWORD PTR [eax-0x5672e2b],eax
  425cf9:	retf   0xef2b
  425cfc:	add    BYTE PTR [esi-0x217b1c6],dl
  425d02:	sahf   
  425d03:	adc    BYTE PTR [edi-0x6],0x34
  425d07:	inc    ecx
  425d08:	cmp    bh,cl
  425d0a:	std    
  425d0b:	dec    eax
  425d0c:	sbb    bh,BYTE PTR [edi+edx*4]
  425d0f:	dec    edx
  425d10:	neg    BYTE PTR [ebp-0x5c]
  425d13:	dec    ecx
  425d14:	pop    ecx
  425d15:	out    0x85,al
  425d17:	dec    edx
  425d18:	in     al,0x27
  425d1a:	sub    al,0xc8
  425d1c:	or     ebp,DWORD PTR [ecx]
  425d1e:	sbb    BYTE PTR [ecx+0x40fe9385],0x3e
  425d25:	lods   al,BYTE PTR ds:[esi]
  425d26:	jmp    0x1edbb938
  425d2b:	sub    DWORD PTR cs:[ebx],esp
  425d2e:	scas   eax,DWORD PTR es:[edi]
  425d2f:	and    eax,0x56987324
  425d34:	out    0x22,eax
  425d36:	pop    ebp
  425d37:	stc    
  425d38:	popf   
  425d39:	popa   
  425d3a:	sar    BYTE PTR [eax+esi*2-0x17],0xd9
  425d3f:	mov    edi,0x584f6f21
  425d44:	(bad)  
  425d45:	jecxz  0x425cce
  425d47:	jo     0x425d7f
  425d49:	out    0x68,al
  425d4b:	imul   ebp,DWORD PTR [ebp+0x73605347],0xffffffea
  425d52:	or     ebp,DWORD PTR [esi]
  425d54:	inc    edi
  425d55:	push   ss
  425d56:	nop
  425d57:	nop
  425d58:	xchg   edx,eax
  425d59:	adc    bh,bh
  425d5b:	mov    dl,0x3d
  425d5d:	add    BYTE PTR [ebx-0x47],bh
  425d60:	fstp   TBYTE PTR [esi+0x77]
  425d63:	pop    ebx
  425d64:	shl    cl,1
  425d66:	popf   
  425d67:	or     DWORD PTR [ebp-0x4f9724f5],0x29
  425d6e:	jnp    0x425d70
  425d70:	add    BYTE PTR [eax],al
  425d72:	out    dx,al
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [ecx+ebx*4+0x1d]
  425d80:	sahf   
  425d81:	xor    al,0x3d
  425d83:	(bad)  
  425d84:	add    DWORD PTR [eax],eax
  425d86:	cmc    
  425d87:	add    al,0x0
  425d89:	add    BYTE PTR [ebp+0x57],bl
  425d8c:	scas   al,BYTE PTR es:[edi]
  425d8d:	xlat   BYTE PTR ds:[ebx]
  425d8e:	mov    al,0xaa
  425d90:	sub    BYTE PTR [edi],0xa4
  425d93:	repnz (bad) 
  425d95:	jmp    0x425daf
  425d97:	aad    0x7c
  425d99:	cli    
  425d9a:	into   
  425d9b:	pusha  
  425d9c:	stc    
  425d9d:	sub    DWORD PTR cs:[edi-0x72],edx
  425da1:	xchg   ebx,eax
  425da2:	jmp    0x425d43
  425da4:	inc    eax
  425da5:	adc    DWORD PTR [edx],ecx
  425da7:	(bad)  
  425da8:	mov    eax,0x2432a01b
  425dad:	dec    ecx
  425dae:	add    DWORD PTR [ecx],ebx
  425db0:	(bad)  
  425db1:	sub    ch,BYTE PTR [ebp+0x7f]
  425db4:	and    BYTE PTR [ebx+0x72],bh
  425db7:	(bad)  
  425db9:	int3   
  425dba:	loopne 0x425d93
  425dbc:	mov    ecx,0x7d5638ad
  425dc1:	mov    ds:0xc67c0063,al
  425dc6:	jns    0x425e29
  425dc8:	xchg   esp,eax
  425dc9:	(bad)  
  425dca:	in     eax,0xc9
  425dcc:	icebp  
  425dcd:	jne    0x425e30
  425dcf:	cmc    
  425dd0:	dec    eax
  425dd1:	retf   
  425dd2:	out    dx,eax
  425dd3:	scas   eax,DWORD PTR es:[edi]
  425dd4:	inc    ebx
  425dd5:	sti    
  425dd6:	lds    ebx,FWORD PTR [ecx+0x15f49c28]
  425ddc:	mov    ch,0x99
  425dde:	pusha  
  425ddf:	test   eax,0x9c55a9d8
  425de4:	and    DWORD PTR [ecx],esp
  425de6:	cmp    DWORD PTR [edi],ecx
  425de8:	adc    al,0x2f
  425dea:	and    ch,0xf
  425ded:	je     0x425e4b
  425def:	and    BYTE PTR [ebx+ebp*2+0x1077c622],al
  425df6:	inc    eax
  425df7:	jmp    0x4edf:0xa28c7d52
  425dfe:	pop    es
  425dff:	or     al,0xdd
  425e01:	shl    bl,cl
  425e03:	push   ebp
  425e04:	loopne 0x425e75
  425e06:	dec    edi
  425e07:	mov    bh,0xc3
  425e09:	cmc    
  425e0a:	cld    
  425e0b:	push   esp
  425e0c:	aaa    
  425e0d:	sti    
  425e0e:	adc    BYTE PTR [ebx],dl
  425e10:	push   ss
  425e11:	mov    esi,0x7428a8f4
  425e16:	jge    0x425e7e
  425e18:	mov    DWORD PTR ss:[ebx+eiz*4],eax
  425e1c:	lahf   
  425e1d:	and    BYTE PTR [ebx+0x40],ah
  425e20:	out    dx,eax
  425e21:	aad    0x9b
  425e23:	add    eax,0xd12722f2
  425e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e29:	mov    ebx,0x921e74fc
  425e2e:	addr16 add eax,0x72a925a9
  425e34:	jge    0x425eac
  425e36:	out    0x79,al
  425e38:	dec    edx
  425e39:	inc    eax
  425e3a:	(bad)  
  425e3b:	inc    edx
  425e3c:	popa   
  425e3d:	xor    edi,ebp
  425e3f:	test   al,0x5a
  425e41:	mov    cs,WORD PTR [eax-0x704aa010]
  425e47:	out    dx,al
  425e48:	xchg   esi,eax
  425e49:	aad    0x36
  425e4b:	dec    edx
  425e4c:	imul   ebp,DWORD PTR [ebx],0xffffffa6
  425e4f:	addr16 pop es
  425e51:	mov    ebx,0x88a6719
  425e56:	je     0x425df3
  425e58:	ja     0x425e39
  425e5a:	push   ebp
  425e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e5c:	sbb    DWORD PTR [ebx],ebx
  425e5e:	xchg   esi,eax
  425e5f:	cmp    di,dx
  425e62:	(bad)  
  425e63:	xor    al,0xec
  425e65:	jl     0x425e92
  425e67:	stos   DWORD PTR es:[edi],eax
  425e68:	pop    ds
  425e69:	test   bl,bl
  425e6b:	push   0xddcaf10c
  425e70:	inc    ebx
  425e71:	jno    0x425e11
  425e73:	push   ss
  425e74:	and    esi,0x7ce1d02b
  425e7a:	dec    DWORD PTR [esi-0x4e0d0dd4]
  425e80:	hlt    
  425e81:	std    
  425e82:	rol    BYTE PTR [edi+0x5c740e29],0x76
  425e89:	pop    es
  425e8a:	dec    esi
  425e8b:	mov    gs:0x95f4a848,al
  425e91:	sbb    bh,al
  425e93:	xchg   edi,eax
  425e94:	jmp    0x425eda
  425e96:	ins    BYTE PTR es:[edi],dx
  425e97:	enter  0x3361,0x38
  425e9b:	sbb    DWORD PTR [edx-0x54],eax
  425e9e:	inc    ebp
  425e9f:	imul   esp,DWORD PTR [esi],0xffffffbf
  425ea2:	and    eax,0xd4f7470d
  425ea7:	xchg   BYTE PTR [edx+edx*2-0x29fab2bf],bl
  425eae:	(bad)  
  425eaf:	bound  esi,QWORD PTR [ebx+0x6a]
  425eb2:	je     0x425f0b
  425eb4:	inc    ebx
  425eb5:	(bad)  
  425eb6:	repz loope 0x425e5f
  425eb9:	test   DWORD PTR [edx+0x7f],edi
  425ebc:	loopne 0x425f3b
  425ebe:	outs   dx,DWORD PTR ds:[esi]
  425ebf:	int3   
  425ec0:	loop   0x425f15
  425ec2:	push   ss
  425ec3:	sub    edx,DWORD PTR [ecx+0x6f]
  425ec6:	hlt    
  425ec7:	fisttp DWORD PTR [ecx+0x3a]
  425eca:	in     al,dx
  425ecb:	dec    edi
  425ecc:	addr16 pop esi
  425ece:	loope  0x425e86
  425ed0:	and    DWORD PTR [edx+0x4963824c],0x9f175103
  425eda:	jle    0x425efb
  425edc:	adc    BYTE PTR [edx],dl
  425ede:	rcl    BYTE PTR ds:0xab9b35c7,0x17
  425ee5:	xlat   BYTE PTR ds:[ebx]
  425ee6:	pop    edx
  425ee7:	add    al,0xb0
  425ee9:	push   eax
  425eea:	jbe    0x425ed4
  425eec:	repz cmp BYTE PTR [ecx+0x3cc12c3c],bl
  425ef3:	stc    
  425ef4:	sbb    al,0x37
  425ef6:	je     0x425ef3
  425ef8:	jmp    0x425ed5
  425efa:	adc    ecx,DWORD PTR [ecx+0x297e0f4f]
  425f00:	stos   DWORD PTR es:[edi],eax
  425f01:	jb     0x425f6e
  425f03:	outs   dx,DWORD PTR ds:[esi]
  425f04:	dec    ebx
  425f05:	inc    ecx
  425f06:	rcl    BYTE PTR [ebx-0x41594c48],0xe7
  425f0d:	es mov edi,0x5eac8f3c
  425f13:	ins    BYTE PTR es:[edi],dx
  425f14:	or     al,0xac
  425f16:	or     ebx,DWORD PTR [edi]
  425f18:	or     al,0x83
  425f1a:	xchg   esi,eax
  425f1b:	sbb    DWORD PTR [eax-0x16],0x8
  425f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f20:	mov    al,ds:0xbcc917d0
  425f25:	xor    DWORD PTR [ebx+0x90c7369],esp
  425f2b:	aam    0x79
  425f2d:	mov    edi,0xa75b3629
  425f32:	add    dh,dl
  425f34:	xchg   DWORD PTR [edi+ebx*2],edi
  425f37:	and    esp,DWORD PTR ds:0x282ddf24
  425f3d:	pop    ss
  425f3e:	pop    ecx
  425f3f:	add    BYTE PTR [ecx+0x3c],cl
  425f42:	or     al,ch
  425f44:	cmc    
  425f45:	test   eax,0x83305f79
  425f4a:	mov    esi,0x9e4c5a07
  425f4f:	cmc    
  425f50:	cmp    BYTE PTR [ebx-0x7f],0xbc
  425f54:	lea    esp,[ebx]
  425f56:	push   eax
  425f57:	dec    edx
  425f58:	jns    0x425f72
  425f5a:	loope  0x425ee2
  425f5c:	mov    eax,0x26064903
  425f61:	push   eax
  425f62:	dec    edx
  425f63:	pop    ebp
  425f64:	pop    esi
  425f65:	or     eax,0xd6226a8
  425f6a:	dec    edx
  425f6b:	and    BYTE PTR [edi],bl
  425f6d:	jmp    FWORD PTR [esi]
  425f6f:	mov    al,ds:0x38febcc9
  425f74:	out    dx,al
  425f75:	stc    
  425f76:	inc    ebp
  425f77:	cs jne 0x425f8a
  425f7a:	shr    DWORD PTR [edi-0x6d],cl
  425f7d:	inc    sp
  425f7f:	mov    bh,BYTE PTR [edi+0x33ae057d]
  425f85:	xchg   edx,eax
  425f86:	cmp    cl,BYTE PTR [edx+0x4d]
  425f89:	xlat   BYTE PTR ds:[ebx]
  425f8a:	sbb    al,0x4e
  425f8c:	jmp    0x425fe3
  425f8e:	mov    ss,WORD PTR [edx+edi*4-0x8481a05]
  425f95:	inc    ebx
  425f96:	push   ebp
  425f97:	rcr    DWORD PTR cs:[ecx],1
  425f9a:	mov    al,ds:0x8a242da3
  425f9f:	mov    ebx,0x4abd2eab
  425fa4:	enter  0x8620,0x62
  425fa8:	test   DWORD PTR [eax+0x27907444],esi
  425fae:	int    0x12
  425fb0:	test   DWORD PTR [eax+0x1e],edi
  425fb3:	cmp    ebx,ecx
  425fb5:	addr16 js 0x425fb0
  425fb8:	dec    eax
  425fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fba:	pop    ebp
  425fbb:	mov    ebp,0xf6d12c10
  425fc0:	in     al,0x38
  425fc2:	pop    ss
  425fc3:	mov    bl,0xd4
  425fc5:	dec    ecx
  425fc6:	scas   al,BYTE PTR es:[edi]
  425fc7:	lods   al,BYTE PTR ds:[esi]
  425fc8:	add    dl,ah
  425fca:	xchg   edx,eax
  425fcb:	loop   0x425fe7
  425fcd:	sbb    ch,BYTE PTR [esi+0x18]
  425fd0:	push   esi
  425fd1:	(bad)  
  425fd2:	xchg   esp,eax
  425fd3:	mov    ah,0x99
  425fd5:	mov    DWORD PTR [edx],0x290b68df
  425fdb:	jbe    0x425fc5
  425fdd:	bound  ebx,QWORD PTR [ebx-0x5ccfaf02]
  425fe3:	fsubp  st(5),st
  425fe5:	stc    
  425fe6:	adc    DWORD PTR [edi+0x178ae917],0x5e
  425fed:	hlt    
  425fee:	cdq    
  425fef:	aaa    
  425ff0:	hlt    
  425ff1:	or     eax,0x77d3cfde
  425ff6:	dec    esp
  425ff7:	cmc    
  425ff8:	inc    ebx
  425ff9:	jnp    0x425fc4
  425ffb:	rcr    eax,cl
  425ffd:	dec    ecx
  425ffe:	(bad)  
  425fff:	ins    DWORD PTR es:[edi],dx
  426000:	pop    DWORD PTR [ebx]
  426002:	push   ds
  426003:	mov    ds:0xbe328851,eax
  426008:	xor    dh,dh
  42600a:	or     dh,BYTE PTR [ebx+0x14]
  42600d:	je     0x426018
  42600f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426010:	add    eax,0xb698b90
  426015:	lods   eax,DWORD PTR ds:[esi]
  426016:	xchg   ebp,eax
  426017:	mov    al,ds:0xf730fa33
  42601c:	or     eax,0x1400c3ca
  426021:	ds out 0xa3,al
  426024:	push   0xc08fed34
  426029:	mul    DWORD PTR [ebx-0x36]
  42602c:	rcl    BYTE PTR ds:0xf84dd973,cl
  426032:	mov    cl,0xbe
  426034:	cs loop 0x425fba
  426037:	pusha  
  426038:	rol    BYTE PTR [esi-0x6cc086b4],cl
  42603e:	fnstsw WORD PTR [esi+edx*8-0x4d65c75f]
  426045:	sbb    DWORD PTR [ecx-0x72],ecx
  426048:	mov    ch,0xd1
  42604a:	mov    ss,WORD PTR [ebx-0x1a10343f]
  426050:	lods   al,BYTE PTR ds:[esi]
  426051:	mov    esi,0x1cd04262
  426056:	adc    eax,DWORD PTR [ecx]
  426058:	cmc    
  426059:	xchg   dh,ah
  42605b:	sti    
  42605c:	cmp    bh,BYTE PTR [eax-0x396d3e60]
  426062:	ret    
  426063:	mov    ebx,gs
  426065:	push   0x8c601cc0
  42606a:	push   eax
  42606b:	(bad)  [esi]
  42606d:	pop    ss
  42606e:	call   0xc17a:0xbe6075cf
  426075:	packssdw mm6,QWORD PTR [edi-0x43498c3d]
  42607c:	jle    0x426061
  42607e:	jo     0x426065
  426080:	pop    ss
  426081:	adc    al,0xe
  426083:	mov    edi,0x49d5af6a
  426088:	and    esi,DWORD PTR [eax]
  42608a:	sub    BYTE PTR [eax-0x4a],ah
  42608d:	sahf   
  42608e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42608f:	inc    ebp
  426090:	ret    
  426091:	sub    BYTE PTR [ecx-0x502a54a0],dl
  426097:	or     ecx,DWORD PTR [ebp+0x4e]
  42609a:	fsubr  QWORD PTR [esi+0x69fc668d]
  4260a0:	pop    es
  4260a1:	sbb    ch,ah
  4260a3:	xlat   BYTE PTR ds:[ebx]
  4260a4:	lods   al,BYTE PTR ds:[esi]
  4260a5:	sbb    bl,BYTE PTR [edi-0x143e9190]
  4260ab:	lds    eax,FWORD PTR [ebp-0x14]
  4260ae:	cmc    
  4260af:	in     eax,0x25
  4260b1:	sub    al,0x23
  4260b3:	cmp    ah,BYTE PTR ds:0x109e2557
  4260b9:	xlat   BYTE PTR ds:[ebx]
  4260ba:	mov    eax,ds:0x4a59eeab
  4260bf:	jecxz  0x42605f
  4260c1:	adc    edx,DWORD PTR [esp+edi*1]
  4260c4:	bound  edx,QWORD PTR [ebp+0x18]
  4260c7:	test   DWORD PTR [ebx-0x65ea74da],esp
  4260cd:	add    BYTE PTR fs:[ebx],0x76
  4260d1:	shr    BYTE PTR [eax],cl
  4260d3:	mov    DWORD PTR [ebp-0x7d],0x5336419e
  4260da:	xor    eax,0xf273a030
  4260df:	lds    esi,FWORD PTR [ecx]
  4260e1:	ins    BYTE PTR es:[edi],dx
  4260e2:	jbe    0x42609f
  4260e4:	nop
  4260e5:	pop    eax
  4260e6:	mov    dl,0xac
  4260e8:	fs in  eax,dx
  4260ea:	xchg   esi,eax
  4260eb:	or     ebx,DWORD PTR [edx-0x29704803]
  4260f1:	mov    DWORD PTR [edx],ebx
  4260f3:	fbld   TBYTE PTR [ebp-0x73]
  4260f6:	jp     0x4260ed
  4260f8:	sbb    al,0x5d
  4260fa:	fsubp  st(3),st
  4260fc:	add    eax,0x50fcf57c
  426101:	sub    ch,0x1a
  426104:	add    eax,0x95d94e1c
  426109:	cmp    BYTE PTR [ecx+0x1f6ffeb],0xc8
  426110:	add    BYTE PTR ds:0x6f9495d4,al
  426116:	in     eax,0xf
  426118:	xor    al,dh
  42611a:	retf   
  42611b:	and    DWORD PTR [esi+0x29024915],eax
  426121:	ins    BYTE PTR es:[edi],dx
  426122:	lods   al,BYTE PTR ds:[esi]
  426123:	out    dx,eax
  426124:	pop    edi
  426125:	mov    ch,ch
  426127:	nop
  426128:	pop    esp
  426129:	push   DWORD PTR [ebx-0x415130dc]
  42612f:	push   ebp
  426130:	lds    edi,FWORD PTR [ebp+0x52]
  426133:	push   0xffffffb9
  426135:	stos   DWORD PTR es:[edi],eax
  426136:	ins    BYTE PTR es:[edi],dx
  426137:	mov    edx,0xb7e0d86
  42613c:	push   edx
  42613d:	popa   
  42613e:	in     eax,0x69
  426140:	iret   
  426141:	fstp   TBYTE PTR [ebx+0x4515e062]
  426147:	mov    ecx,0x1958901e
  42614c:	pop    ds
  42614d:	fwait
  42614e:	mov    dl,0xbf
  426150:	div    BYTE PTR [edx-0x67]
  426153:	mov    esp,0xd01ad197
  426158:	mov    eax,0x846bdd76
  42615d:	js     0x42610c
  42615f:	xor    eax,edx
  426161:	sub    edx,DWORD PTR [edx-0x49]
  426164:	lods   al,BYTE PTR ds:[esi]
  426165:	enter  0xb095,0x4c
  426169:	pop    ecx
  42616a:	in     al,dx
  42616b:	jmp    0x9dc7:0x7eb5a573
  426172:	adc    cl,dh
  426174:	xor    BYTE PTR [edx-0x7ba02de],dl
  42617a:	cmp    DWORD PTR [esi],ebx
  42617c:	neg    dl
  42617e:	cmp    eax,0x270c2ad6
  426183:	aaa    
  426184:	or     DWORD PTR [edx],eax
  426186:	pop    ecx
  426187:	pop    esp
  426188:	jns    0x426196
  42618a:	mov    ebp,?
  42618c:	xchg   esi,eax
  42618d:	lds    esi,FWORD PTR [edi+esi*8+0x1a5eff79]
  426194:	xor    eax,0x5581fafd
  426199:	and    ecx,DWORD PTR [esp+ebp*4+0x44]
  42619d:	ret    0x393b
  4261a0:	cmp    BYTE PTR [eax-0x763e852b],cl
  4261a6:	and    bl,cl
  4261a8:	mov    dh,0x3d
  4261aa:	inc    ebp
  4261ab:	stos   DWORD PTR es:[edi],eax
  4261ac:	dec    ebx
  4261ae:	in     al,0x3f
  4261b0:	and    al,0x3e
  4261b2:	sbb    eax,DWORD PTR [ebx-0x7a754c73]
  4261b8:	push   cs
  4261b9:	cmp    DWORD PTR [esi],ebx
  4261bb:	inc    ebp
  4261bc:	dec    edi
  4261bd:	jne    0x4261d8
  4261bf:	and    DWORD PTR [eax+ecx*8+0x5e],0x66
  4261c4:	pop    edi
  4261c5:	push   cs
  4261c6:	or     al,0xee
  4261c8:	int3   
  4261c9:	sbb    BYTE PTR [ebp+0x76cda212],ah
  4261cf:	scas   al,BYTE PTR es:[edi]
  4261d0:	xor    esi,DWORD PTR [eax-0x39]
  4261d3:	call   0xfb2fa3aa
  4261d8:	int3   
  4261d9:	or     al,0xa7
  4261db:	mov    edx,DWORD PTR [ebx+0xc2cb7a5]
  4261e1:	aad    0xb
  4261e3:	mov    ah,0xfb
  4261e5:	pop    edi
  4261e6:	sub    ecx,DWORD PTR [eax]
  4261e8:	xchg   al,ah
  4261ea:	mov    al,ds:0x5ff56c51
  4261ef:	fwait
  4261f0:	mov    al,0xb
  4261f2:	fnstcw WORD PTR [edx-0x2f]
  4261f5:	jbe    0x4261ef
  4261f7:	xchg   edi,eax
  4261f8:	ins    DWORD PTR es:[edi],dx
  4261f9:	(bad)  
  4261fa:	dec    ebp
  4261fb:	mov    ds,WORD PTR [eax-0x3c]
  4261fe:	iret   
  4261ff:	mov    ds:0xae83a44d,eax
  426204:	inc    esp
  426205:	stc    
  426206:	cld    
  426207:	mov    BYTE PTR [esi+0x75],ah
  42620a:	adc    al,0x8c
  42620c:	in     al,dx
  42620d:	into   
  42620e:	xor    BYTE PTR [esi],0xd5
  426211:	cmp    BYTE PTR [eax+0x45582002],dh
  426217:	adc    bl,BYTE PTR [eax+0x8]
  42621a:	es dec esi
  42621c:	cmp    eax,0x56b38b5d
  426221:	les    edx,FWORD PTR [ebp+0x1107131c]
  426227:	mov    DWORD PTR [ebx+edi*1+0x9fcb929],0x53142d51
  426232:	push   0x4a
  426234:	in     eax,dx
  426235:	cmp    al,0x7c
  426237:	fisttp WORD PTR ds:0x63cd3630
  42623d:	lods   al,BYTE PTR ds:[esi]
  42623e:	int    0x90
  426240:	mov    edi,0x2106b273
  426245:	mov    DWORD PTR [eax],edx
  426247:	dec    ecx
  426248:	(bad)  
  426249:	js     0x42620f
  42624b:	mov    ds:0x7d611813,al
  426250:	xor    al,0x42
  426252:	test   eax,0x7a495890
  426257:	call   FWORD PTR [ebx]
  426259:	pop    ebp
  42625a:	cdq    
  42625b:	aam    0x6c
  42625d:	les    eax,FWORD PTR [ecx-0x7c1dcbea]
  426263:	dec    ecx
  426264:	out    dx,al
  426265:	fst    QWORD PTR [ecx-0x47943d72]
  42626b:	jmp    0xd080:0x8a61d343
  426272:	popa   
  426273:	xchg   DWORD PTR [ebp+0x39],ebx
  426276:	cmp    esi,DWORD PTR [edi+ebx*4]
  426279:	cmp    al,0xfc
  42627b:	add    cl,BYTE PTR [esi+0x41]
  42627e:	stos   DWORD PTR es:[edi],eax
  42627f:	add    BYTE PTR [eax],al
  426281:	add    BYTE PTR [ecx-0x3d],dh
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	push   ebx
  42628f:	pop    eax
  426290:	pop    ds
  426291:	ret    0xdb32
  426294:	add    DWORD PTR [eax],eax
  426296:	cmc    
  426297:	add    al,0x0
  426299:	add    bh,bh
  42629b:	aad    0xee
  42629d:	or     DWORD PTR [esi-0x6192de7f],esi
  4262a3:	add    BYTE PTR [edx],al
  4262a5:	adc    dl,bl
  4262a7:	loopne 0x426287
  4262a9:	aam    0x27
  4262ab:	xlat   BYTE PTR ds:[ebx]
  4262ac:	popa   
  4262ad:	mov    bl,0xa4
  4262af:	lds    edi,FWORD PTR [ebx-0x19]
  4262b2:	add    esi,DWORD PTR [edi+0x58]
  4262b5:	test   eax,0xc8656136
  4262ba:	out    dx,al
  4262bb:	xchg   esp,eax
  4262bc:	or     al,0x9b
  4262be:	ins    BYTE PTR es:[edi],dx
  4262bf:	mov    edi,0x329f1eaa
  4262c4:	xor    cl,BYTE PTR [ecx-0x412d454b]
  4262ca:	and    eax,0x89322a35
  4262cf:	or     ecx,DWORD PTR [edx-0x45419c99]
  4262d5:	push   es
  4262d6:	xchg   edx,eax
  4262d7:	inc    edi
  4262d8:	cwde   
  4262d9:	mov    ds:0x915d0ec2,eax
  4262de:	cmp    dh,bl
  4262e0:	imul   esp,DWORD PTR [edx],0x5c
  4262e3:	loopne 0x42629e
  4262e5:	ss xchg esp,eax
  4262e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262e8:	mov    ds:0xcbcb47fd,eax
  4262ed:	int    0xb8
  4262ef:	cwde   
  4262f0:	das    
  4262f1:	neg    BYTE PTR [ecx+0x3b4451ae]
  4262f7:	dec    ecx
  4262f8:	inc    esp
  4262f9:	add    ch,ch
  4262fb:	cmc    
  4262fc:	sub    al,0xfc
  4262fe:	mov    dl,0xc6
  426300:	cwde   
  426301:	push   ds
  426302:	or     cl,BYTE PTR [esi-0x9]
  426305:	push   ebx
  426306:	jae    0x426362
  426308:	mov    bl,0x5c
  42630a:	loopne 0x4262c0
  42630c:	cld    
  42630d:	mov    dh,BYTE PTR [eax-0x6c9f1e15]
  426313:	mov    ?,WORD PTR [esi]
  426315:	xchg   ebp,eax
  426316:	sbb    ebx,DWORD PTR [esp+eax*4-0x356d79d2]
  42631d:	sbb    eax,0x5daba924
  426322:	jg     0x426335
  426324:	cmc    
  426325:	mov    edi,0xb04e4fda
  42632a:	mov    dl,0x78
  42632c:	push   0xf15a1372
  426331:	sti    
  426332:	add    eax,0x955bc128
  426337:	push   edi
  426338:	sti    
  426339:	xchg   esp,eax
  42633a:	fisttp WORD PTR [ebx-0x4c]
  42633d:	xor    ecx,DWORD PTR [esi+edi*4-0x2fabc881]
  426344:	and    edx,ebp
  426346:	inc    ecx
  426347:	(bad)  
  426348:	push   edi
  426349:	cmp    DWORD PTR [edx-0x3cf891b5],esp
  42634f:	jns    0x426302
  426351:	cli    
  426352:	mov    eax,ds:0x41712d3b
  426357:	jmp    0x2923367c
  42635c:	inc    ebp
  42635d:	and    edx,DWORD PTR [eax+0x76]
  426360:	mov    cl,BYTE PTR fs:[eax]
  426363:	aas    
  426364:	xor    bh,BYTE PTR [ebp+0xc58d211]
  42636a:	push   0x62a4c3b2
  42636f:	shl    BYTE PTR [eax],cl
  426371:	pusha  
  426372:	arpl   WORD PTR [ebp-0x76c38899],sp
  426378:	pop    ecx
  426379:	sbb    al,0x98
  42637b:	and    al,0xcf
  42637d:	xor    DWORD PTR [ebx+0x2cb75aeb],esp
  426383:	push   0x1f
  426385:	outs   dx,DWORD PTR ds:[esi]
  426386:	jae    0x4263f7
  426388:	mov    ebp,DWORD PTR [edx+0x5d25d9b0]
  42638e:	mov    esi,0x98596422
  426393:	xchg   bh,bh
  426395:	pop    esi
  426396:	adc    eax,0xd3ebcd18
  42639b:	sbb    al,BYTE PTR [ebp-0x57a08b7e]
  4263a1:	loopne 0x426412
  4263a3:	xchg   esp,eax
  4263a4:	cli    
  4263a5:	aam    0xef
  4263a7:	call   0xf3ecf7ac
  4263ac:	pop    esi
  4263ad:	loope  0x42633f
  4263af:	rcl    DWORD PTR [edi-0x57],cl
  4263b2:	sar    ch,1
  4263b4:	pop    ebx
  4263b5:	add    al,0xd8
  4263b7:	inc    ecx
  4263b8:	jg     0x4263c3
  4263ba:	lods   eax,DWORD PTR ds:[esi]
  4263bb:	out    dx,al
  4263bc:	add    edx,DWORD PTR [ebp+0x7159fa7b]
  4263c2:	cli    
  4263c3:	out    dx,eax
  4263c4:	jns    0x426429
  4263c6:	retf   
  4263c7:	sub    al,0x2f
  4263c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263ca:	push   esp
  4263cb:	inc    esi
  4263cc:	mov    eax,ds:0x48fa72aa
  4263d1:	push   ebx
  4263d2:	jnp    0x426358
  4263d4:	or     al,BYTE PTR [esi+edx*8-0x74a5678e]
  4263db:	and    BYTE PTR [edi],dh
  4263dd:	cmp    esi,DWORD PTR [edi+ebx*1-0x24f38744]
  4263e4:	ret    0x1884
  4263e7:	cmp    ecx,DWORD PTR [edi-0x43]
  4263ea:	aaa    
  4263eb:	(bad)  
  4263ec:	outs   dx,DWORD PTR ds:[esi]
  4263ed:	sbb    BYTE PTR [edi-0xc],0xcb
  4263f1:	test   al,0x34
  4263f3:	xchg   edx,eax
  4263f4:	call   0x2ebc:0x9d2a8303
  4263fb:	sahf   
  4263fc:	fs mov eax,0x4d3a0842
  426402:	or     al,dl
  426404:	sbb    ecx,edx
  426406:	(bad)  
  426407:	fcomp  st(3)
  426409:	loop   0x426438
  42640b:	xchg   ebx,eax
  42640c:	inc    esp
  42640d:	ror    BYTE PTR ds:0xb6644a33,cl
  426413:	push   ds
  426414:	ds or  eax,0xaf0a01b5
  42641a:	std    
  42641b:	sbb    al,0x8a
  42641d:	aam    0xf0
  42641f:	pop    esi
  426420:	xchg   edx,eax
  426421:	ss push cs
  426423:	mov    edx,0xc793dbd4
  426428:	es push 0x31c2f694
  42642e:	adc    eax,0x3309adca
  426433:	call   DWORD PTR gs:[ebx]
  426436:	push   esi
  426437:	hlt    
  426438:	and    BYTE PTR [edx],0x19
  42643b:	fidiv  WORD PTR [esi+0x14e24138]
  426441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426442:	jns    0x426432
  426444:	sbb    cl,BYTE PTR [ebx+0x2]
  426447:	test   eax,0xd167898
  42644c:	pop    ecx
  42644d:	dec    ebp
  42644e:	dec    ebx
  42644f:	push   ecx
  426450:	dec    esp
  426451:	repnz mov ecx,0xe97f783d
  426457:	rcl    DWORD PTR ds:0xcb580733,1
  42645d:	arpl   si,bp
  42645f:	mov    eax,0x29850085
  426464:	sar    BYTE PTR [esi+0x7f],0x3
  426468:	(bad)  
  426469:	jbe    0x4264a6
  42646b:	mov    eax,0x2f5041de
  426470:	sub    bl,bh
  426472:	aad    0xdf
  426474:	jle    0x426470
  426476:	mov    esi,0xa4cdeea2
  42647b:	shl    edi,0xb0
  42647e:	cmp    esp,DWORD PTR [edi]
  426480:	scas   al,BYTE PTR es:[edi]
  426481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426482:	ret    0xd05a
  426485:	push   ecx
  426486:	jbe    0x4264e1
  426488:	or     eax,0xfe5c0849
  42648d:	inc    esi
  42648e:	shl    BYTE PTR [ebp-0x5ff0a64d],1
  426494:	pop    ebp
  426495:	inc    ebp
  426496:	pushf  
  426497:	pop    ebx
  426498:	sub    eax,DWORD PTR [esi+0x7ba7a802]
  42649e:	mov    al,0x6
  4264a0:	mov    edx,fs
  4264a2:	pop    eax
  4264a3:	retf   0xa23a
  4264a6:	call   0x72df:0x5415a97e
  4264ad:	add    BYTE PTR [esi+0x2832bbe3],bh
  4264b3:	mov    al,ds:0xbad277c5
  4264b8:	jl     0x426535
  4264ba:	loopne 0x426462
  4264bc:	xchg   BYTE PTR [edi],bh
  4264be:	adc    BYTE PTR [esi+0x35c9e02b],cl
  4264c4:	jg     0x426523
  4264c6:	fild   QWORD PTR [edx-0x1fba7c2b]
  4264cc:	mov    bh,0x54
  4264ce:	jl     0x4264b5
  4264d0:	idiv   ecx
  4264d2:	and    ebx,ecx
  4264d4:	shl    DWORD PTR ds:0xafe42621,1
  4264da:	pop    eax
  4264db:	jge    0x426507
  4264dd:	or     eax,0xc4e44d64
  4264e2:	pop    ecx
  4264e3:	xor    ch,BYTE PTR [eax-0x4193f4a9]
  4264e9:	sub    eax,0x4f456ec5
  4264ee:	jb     0x426549
  4264f0:	in     eax,0xc8
  4264f2:	xchg   ecx,eax
  4264f3:	mov    BYTE PTR [ecx-0x7ce4bb5a],bh
  4264f9:	jmp    0x80cd:0xb63a57bc
  426500:	mov    esp,ecx
  426502:	mov    ebp,0xb8333764
  426507:	daa    
  426508:	aam    0x23
  42650a:	inc    eax
  42650b:	sti    
  42650c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42650d:	adc    eax,0x25732c54
  426512:	sub    DWORD PTR [ecx+0x397666ec],esi
  426518:	push   0x9af987f5
  42651d:	sub    al,BYTE PTR [edi]
  42651f:	push   edi
  426520:	xor    DWORD PTR [esi+0x75],ecx
  426523:	cmp    ebx,ebx
  426525:	sub    al,BYTE PTR [ecx-0x1a]
  426528:	aas    
  426529:	mov    eax,ds:0xcf96bdf3
  42652e:	mov    al,0x43
  426530:	sbb    eax,0xab38947a
  426535:	jbe    0x426501
  426537:	(bad)  
  426539:	sar    BYTE PTR [esi-0x45],0x77
  42653d:	jp     0x42658e
  42653f:	push   0x1c
  426541:	ror    DWORD PTR [ebp+0x4e],cl
  426544:	and    al,0x83
  426546:	repnz xor ch,BYTE PTR [edi]
  426549:	fcmovnb st,st(3)
  42654b:	jne    0x42656e
  42654d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42654e:	rsqrtps xmm1,XMMWORD PTR [edx-0x2d]
  426552:	pop    esi
  426553:	test   eax,0xbc4936cd
  426558:	push   cs
  426559:	mov    al,ds:0xb52b3aa2
  42655e:	inc    edx
  42655f:	xor    eax,0x1af56ba8
  426564:	mov    ebx,0x80e27163
  426569:	push   ecx
  42656a:	out    0x44,eax
  42656c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42656d:	push   eax
  42656e:	bound  esp,QWORD PTR [ebx-0x1c3bceeb]
  426574:	jae    0x426571
  426576:	push   cs
  426577:	fild   DWORD PTR [ecx+0x4b0e77e]
  42657d:	sub    ebx,DWORD PTR [edx+0x32]
  426580:	daa    
  426581:	aaa    
  426582:	test   DWORD PTR [ecx+0x754e8558],ecx
  426588:	mov    ch,0xd8
  42658a:	xchg   esp,eax
  42658b:	lods   eax,DWORD PTR ds:[esi]
  42658c:	xor    ah,BYTE PTR [edi-0x163640f2]
  426592:	cwde   
  426593:	jo     0x4265e8
  426595:	pop    edx
  426596:	rol    BYTE PTR [eax],0xdf
  426599:	in     al,dx
  42659a:	jbe    0x42660e
  42659c:	mov    eax,0x63af637a
  4265a1:	mov    WORD PTR [edx+0x763799b6],ds
  4265a7:	add    BYTE PTR [edx+0x5d],ch
  4265aa:	xchg   ebx,eax
  4265ab:	add    bh,BYTE PTR [ebx+ebp*4+0x6d146fdb]
  4265b2:	lods   eax,DWORD PTR ds:[esi]
  4265b3:	or     edx,DWORD PTR [ecx+0x3b]
  4265b6:	and    edi,0x686c2407
  4265bc:	das    
  4265bd:	sub    eax,0x3b8dec10
  4265c2:	push   esi
  4265c3:	mov    bl,0xb5
  4265c5:	cmp    ebx,edi
  4265c7:	retf   
  4265c8:	or     edi,DWORD PTR [esp+eax*4]
  4265cb:	xchg   edi,eax
  4265cc:	mov    al,0xfb
  4265ce:	push   0x4c
  4265d0:	repz adc al,BYTE PTR [ebp-0x91e0338]
  4265d7:	icebp  
  4265d8:	sub    ah,BYTE PTR [esi+0x32]
  4265db:	push   ebx
  4265dc:	dec    esp
  4265dd:	pop    edx
  4265de:	mul    BYTE PTR [edx-0x22]
  4265e1:	mov    bh,0x5e
  4265e3:	(bad)  [edi+0x67e29bdf]
  4265e9:	cmp    eax,0xc3d90490
  4265ee:	sub    eax,0xd7293bd
  4265f3:	jmp    0x97e0:0xc2accc4a
  4265fa:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4265fc:	mov    al,0xd6
  4265fe:	xor    BYTE PTR [ebx+0x49],bh
  426601:	stos   BYTE PTR es:[edi],al
  426602:	and    esi,DWORD PTR [edx+0x22]
  426605:	iret   
  426606:	enter  0xc1d8,0xcc
  42660a:	iret   
  42660b:	mov    bl,0xc6
  42660d:	adc    al,0x12
  42660f:	or     DWORD PTR [edi-0x2cd537a6],0x2e
  426616:	scas   eax,DWORD PTR es:[edi]
  426617:	fwait
  426618:	iret   
  426619:	clc    
  42661a:	cmp    dh,BYTE PTR [esi]
  42661c:	ret    0xfc9f
  42661f:	sbb    al,0xa2
  426621:	sub    ebx,eax
  426623:	add    cl,BYTE PTR [ecx+eax*4+0x6b]
  426627:	add    esp,DWORD PTR [eax+0x2]
  42662a:	and    dl,al
  42662c:	or     eax,0x982b36a9
  426631:	mov    ds:0xbb79d732,al
  426636:	add    eax,0x6761dbd2
  42663b:	enter  0x445d,0x37
  42663f:	xlat   BYTE PTR ds:[ebx]
  426640:	jmp    0x24eff9c3
  426645:	lahf   
  426646:	lods   al,BYTE PTR ds:[esi]
  426647:	cmp    eax,0xe55c09ab
  42664c:	cmp    dl,cl
  42664e:	rcl    DWORD PTR [ebp-0x276c1349],1
  426654:	or     DWORD PTR [eax],edx
  426656:	mov    cl,0x1f
  426658:	inc    ecx
  426659:	fnstsw WORD PTR [ebx-0x61]
  42665c:	adc    al,0xb
  42665e:	inc    edi
  42665f:	mov    al,0xdc
  426661:	mov    ebp,edx
  426663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426664:	or     cl,BYTE PTR [ebx+ecx*4]
  426667:	pop    es
  426668:	loopne 0x4266e3
  42666a:	popa   
  42666b:	mov    bh,0xb4
  42666d:	jnp    0x42668e
  42666f:	sbb    BYTE PTR [ebx],0x6
  426672:	dec    ecx
  426673:	mov    ch,BYTE PTR [edi-0x40ab799f]
  426679:	fbld   TBYTE PTR [ecx-0x50]
  42667c:	jbe    0x4265fe
  42667e:	imul   ebp,eax,0xfffffffd
  426681:	stos   DWORD PTR es:[edi],eax
  426682:	pop    es
  426683:	push   eax
  426684:	cld    
  426685:	addr16 sbb bl,0x2
  426689:	cwde   
  42668a:	imul   esi,DWORD PTR [esi-0x2b0724b4],0xffffffdc
  426691:	es sar cl,1
  426694:	inc    ebp
  426695:	sbb    eax,0x483a522e
  42669a:	mov    DWORD PTR [edi+ebx*1+0x7b],esp
  42669e:	(bad)  
  42669f:	dec    ecx
  4266a0:	stos   BYTE PTR es:[edi],al
  4266a1:	pop    esp
  4266a2:	(bad)  
  4266a3:	or     BYTE PTR [ebx-0x6f8c6550],bh
  4266a9:	xor    eax,0x2b7fc024
  4266ae:	xchg   esi,eax
  4266af:	imul   ebp,DWORD PTR [edi-0x57],0x21
  4266b3:	outs   dx,BYTE PTR ds:[esi]
  4266b4:	jecxz  0x42671b
  4266b6:	fild   DWORD PTR es:[ebp+0x59]
  4266ba:	xlat   BYTE PTR ds:[ebx]
  4266bb:	cld    
  4266bc:	xor    DWORD PTR [edi+ebp*4+0x59503b0a],ebx
  4266c3:	mov    ebp,0xf6fc14ff
  4266c8:	dec    ebp
  4266c9:	fadd   DWORD PTR [ebx+edi*1+0x59e28d52]
  4266d0:	xchg   edi,eax
  4266d1:	test   eax,0xc4990b18
  4266d6:	loopne 0x4266f3
  4266d8:	push   edi
  4266d9:	adc    eax,DWORD PTR [eax+0x18]
  4266dc:	scas   eax,DWORD PTR es:[edi]
  4266dd:	cs popw es
  4266e0:	in     al,dx
  4266e1:	clc    
  4266e2:	mov    DWORD PTR [ecx+0x12],ebx
  4266e5:	sbb    BYTE PTR [eax],dh
  4266e7:	loop   0x426697
  4266e9:	pop    edi
  4266ea:	rep lods eax,DWORD PTR ds:[esi]
  4266ec:	lods   ax,WORD PTR ds:[esi]
  4266ee:	aam    0xf5
  4266f0:	inc    edi
  4266f1:	adc    eax,0x7dc286db
  4266f6:	aaa    
  4266f7:	pop    esi
  4266f8:	stos   BYTE PTR es:[edi],al
  4266f9:	and    eax,0x163653b5
  4266fe:	jp     0x4266ed
  426700:	push   edx
  426701:	scas   eax,DWORD PTR es:[edi]
  426702:	test   BYTE PTR [esp+ebx*2],dl
  426705:	lds    esp,FWORD PTR [esi+0x2e]
  426708:	xchg   edx,eax
  426709:	mov    gs,ebp
  42670b:	xchg   ecx,eax
  42670c:	or     ch,ah
  42670e:	iret   
  42670f:	cdq    
  426710:	pop    es
  426711:	ins    DWORD PTR es:[edi],dx
  426712:	les    ebp,FWORD PTR [esp+eiz*2-0x64]
  426716:	outs   dx,DWORD PTR ds:[esi]
  426717:	imul   esp,DWORD PTR [edx],0x82310653
  42671d:	iret   
  42671e:	out    0x9,eax
  426720:	fs push esp
  426722:	xchg   edi,eax
  426723:	lods   al,BYTE PTR ds:[esi]
  426724:	fsub   DWORD PTR [esi-0x53075c8a]
  42672a:	jo     0x426793
  42672c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42672d:	(bad)  
  42672e:	retf   0x2c18
  426731:	sbb    DWORD PTR ss:[ebp-0x40],0x5d
  426736:	xor    DWORD PTR [ebp+0x72],ebp
  426739:	aas    
  42673a:	and    edi,DWORD PTR [ebx-0x118eb4ac]
  426740:	jle    0x426756
  426742:	or     al,0x3f
  426744:	mov    ds:0x3013953,eax
  426749:	push   ebp
  42674a:	lods   eax,DWORD PTR ds:[esi]
  42674b:	adc    eax,0x1b8f8648
  426750:	xor    al,0x91
  426752:	test   eax,0x91861f7f
  426757:	ins    BYTE PTR es:[edi],dx
  426758:	or     al,0xdf
  42675a:	lock jbe 0x426739
  42675d:	or     BYTE PTR [ebp+0x23],cl
  426760:	outs   dx,BYTE PTR ds:[esi]
  426761:	outs   dx,BYTE PTR ds:[esi]
  426762:	stc    
  426763:	sub    BYTE PTR [ecx+0x50],0x48
  426767:	jmp    0x4266f7
  426769:	xor    BYTE PTR ds:0xa9d5c167,cl
  42676f:	push   eax
  426770:	in     al,dx
  426771:	cmp    al,BYTE PTR [eax-0x6de5c4ef]
  426777:	stc    
  426778:	pop    ecx
  426779:	add    eax,0x6478e2d
  42677e:	clc    
  42677f:	cld    
  426780:	mov    BYTE PTR [edx+ebp*1],al
  426783:	out    0x85,eax
  426785:	ja     0x4267c2
  426787:	pop    esp
  426788:	adc    al,0x4d
  42678a:	shld   DWORD PTR [ebp-0x49],edx,0x6f
  42678f:	add    BYTE PTR [eax],al
  426791:	add    BYTE PTR [ecx-0x126c16dc],al
  426797:	(bad)  
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	fistp  DWORD PTR [ebp+0x7d]
  4267a1:	or     BYTE PTR [edi],ah
  4267a3:	loopne 0x4267a6
  4267a5:	add    ch,dh
  4267a7:	add    al,0x0
  4267a9:	add    BYTE PTR [eax+0x6f],dh
  4267ac:	cmp    BYTE PTR [edi+0x1c5b7d3e],al
  4267b2:	into   
  4267b3:	psubb  mm1,QWORD PTR [eax+ecx*8-0x5e]
  4267b8:	rcl    BYTE PTR [esi-0x692144a],0xc2
  4267bf:	mov    WORD PTR [eax-0x2e],fs
  4267c2:	mov    esi,0xb1d64891
  4267c7:	push   esp
  4267c8:	xchg   edx,eax
  4267c9:	xchg   ebx,eax
  4267ca:	fidivr DWORD PTR [ebx-0x914793a]
  4267d0:	aas    
  4267d1:	les    ebx,FWORD PTR [esi+esi*1]
  4267d4:	sbb    ebp,eax
  4267d6:	inc    edx
  4267d7:	and    BYTE PTR [ebx],0x6f
  4267da:	retf   0xeb61
  4267dd:	jo     0x42682e
  4267df:	rol    BYTE PTR [ecx],0x51
  4267e2:	mov    ds:0x12f0635d,eax
  4267e7:	cwde   
  4267e8:	mov    al,ds:0x45e1ae55
  4267ed:	jmp    0x4267e3
  4267ef:	inc    ebp
  4267f0:	push   cs
  4267f1:	aad    0x17
  4267f3:	in     al,0x3b
  4267f5:	sar    BYTE PTR [ecx+eiz*1],cl
  4267f8:	adc    eax,DWORD PTR [edi]
  4267fa:	rcr    BYTE PTR [ecx],0xfd
  4267fd:	bound  edx,QWORD PTR [edx+0x1]
  426800:	fsubr  QWORD PTR [edx]
  426802:	sbb    edi,DWORD PTR [ecx+esi*2]
  426805:	dec    ebp
  426806:	xchg   DWORD PTR [edi-0x49],esp
  426809:	inc    edx
  42680a:	adc    ebp,DWORD PTR [eax+0x603cd77]
  426810:	imul   edi,DWORD PTR [ecx+0x49c25b19],0x73a72099
  42681a:	jle    0x4267b1
  42681c:	xchg   edi,eax
  42681d:	ret    0x59c6
  426820:	out    dx,al
  426821:	inc    esp
  426822:	scas   al,BYTE PTR es:[edi]
  426823:	mov    esi,0x4d2b7015
  426828:	(bad)  [eax-0x11d441f0]
  42682e:	pop    edx
  42682f:	push   ecx
  426830:	mov    ch,0x28
  426832:	js     0x42686a
  426834:	stos   BYTE PTR es:[edi],al
  426835:	push   ebp
  426836:	mov    eax,ds:0xd147db42
  42683b:	into   
  42683c:	test   BYTE PTR [esi-0x53],al
  42683f:	push   cs
  426840:	xchg   esp,eax
  426841:	icebp  
  426842:	adc    esp,DWORD PTR [ebx-0x1a940da5]
  426848:	iret   
  426849:	sbb    al,cl
  42684b:	(bad)  
  42684c:	shr    DWORD PTR [edx],cl
  42684e:	ja     0x426861
  426850:	ror    esi,1
  426852:	sbb    al,0x77
  426854:	push   ebx
  426855:	loop   0x4267fb
  426857:	and    edx,DWORD PTR [ebx+eax*8]
  42685a:	out    0x9f,al
  42685c:	out    dx,al
  42685d:	jp     0x4268d2
  42685f:	neg    BYTE PTR [eax+ebx*1-0x57cf208e]
  426866:	jb     0x42689b
  426868:	mov    eax,0xb56eccff
  42686d:	dec    ebx
  42686e:	scas   eax,DWORD PTR es:[edi]
  42686f:	push   0x4345c499
  426874:	mov    ch,0x97
  426876:	jg     0x4268aa
  426878:	iret   
  426879:	sub    al,0xd3
  42687b:	(bad)  
  42687c:	(bad)  
  42687d:	ficom  WORD PTR [ebx-0x18f81dbd]
  426883:	scas   al,BYTE PTR es:[edi]
  426884:	retf   0x6e9e
  426887:	jnp    0x426906
  426889:	aas    
  42688a:	jp     0x42689f
  42688c:	pop    edi
  42688d:	lods   eax,DWORD PTR ds:[esi]
  42688e:	mov    ecx,0x63da7e6f
  426893:	das    
  426894:	inc    esp
  426895:	or     al,0x3e
  426897:	ficom  DWORD PTR ds:[edx-0x64]
  42689b:	loopne 0x4268a6
  42689d:	xlat   BYTE PTR ds:[ebx]
  42689e:	pop    eax
  42689f:	(bad)  
  4268a0:	loop   0x42684b
  4268a2:	and    DWORD PTR [edx-0x7c],0xaa4e40a9
  4268a9:	(bad)  
  4268aa:	mov    bl,0x60
  4268ac:	idiv   BYTE PTR [edi]
  4268ae:	div    eax
  4268b0:	cmp    DWORD PTR [edx-0x3e],0xfaf03bc
  4268b7:	or     dh,bh
  4268b9:	add    DWORD PTR [edx],edi
  4268bb:	pop    esp
  4268bc:	cmp    ebp,DWORD PTR [ecx+0x1b]
  4268bf:	ret    
  4268c0:	cmp    DWORD PTR [edi],0x79
  4268c3:	xchg   esp,eax
  4268c4:	inc    esp
  4268c5:	and    ebx,esp
  4268c7:	mov    dl,0xa6
  4268c9:	cmp    eax,DWORD PTR [ebp+0x119d90c5]
  4268cf:	in     al,0xf5
  4268d1:	fwait
  4268d2:	scas   eax,DWORD PTR es:[edi]
  4268d3:	adc    cl,bl
  4268d5:	sub    eax,0x455a99b3
  4268da:	lods   al,BYTE PTR ds:[esi]
  4268db:	mov    ds:0xbe3c93fa,al
  4268e0:	add    eax,0x4d815ed1
  4268e5:	xchg   esi,eax
  4268e6:	pop    ecx
  4268e7:	mov    dl,0x3e
  4268e9:	xchg   ecx,edi
  4268eb:	push   ds
  4268ec:	es lahf 
  4268ee:	mov    eax,ds:0x16cfda4c
  4268f3:	sub    ah,BYTE PTR [edi-0x7f]
  4268f6:	add    DWORD PTR [ecx-0x25],0x79dcb0dc
  4268fd:	test   cl,0x89
  426900:	pop    dx
  426902:	mov    cs:0x68f90e5c,eax
  426908:	mov    WORD PTR [edi-0x123e075b],ss
  42690e:	imul   ebp,esi,0x85425717
  426914:	pop    ebp
  426915:	stc    
  426916:	mov    ds:0x2d015345,eax
  42691b:	and    eax,0xd8d0e93e
  426920:	adc    esp,DWORD PTR ds:0xc76dfb5
  426926:	and    al,0x85
  426928:	pop    edx
  426929:	dec    ebx
  42692a:	adc    esp,DWORD PTR [esi+edi*4+0x613e9a50]
  426931:	or     edx,DWORD PTR [edx+ebp*8-0x2ed77ca]
  426938:	int3   
  426939:	jl     0x4269ae
  42693b:	shl    BYTE PTR ds:0x46e0cb79,cl
  426941:	sub    edx,DWORD PTR [ebx+0x3fe65d6]
  426947:	fsub   QWORD PTR [ebx+0x571f9fb7]
  42694d:	sbb    al,0xb
  42694f:	or     ecx,esi
  426951:	gs test al,0xe0
  426954:	inc    esp
  426955:	xchg   edx,eax
  426956:	(bad)  
  426958:	xchg   eax,edi
  42695a:	stos   DWORD PTR es:[edi],eax
  42695b:	arpl   WORD PTR [esi-0x26],di
  42695e:	inc    ebp
  42695f:	xor    al,0x1
  426961:	sub    al,0x60
  426963:	pop    eax
  426964:	xor    al,0xe8
  426966:	loop   0x4269e0
  426968:	cwde   
  426969:	call   0x82ac0396
  42696e:	jbe    0x4269a7
  426970:	hlt    
  426971:	push   ss
  426972:	outs   dx,DWORD PTR ds:[esi]
  426973:	lods   eax,DWORD PTR ds:[esi]
  426974:	lea    ebx,[ebx-0x38]
  426977:	mov    edi,0xd563e58b
  42697c:	test   DWORD PTR [edx],eax
  42697e:	out    0xc5,eax
  426980:	mov    esp,0xf31a53c1
  426985:	gs push ebx
  426987:	es out dx,eax
  426989:	sbb    al,0x1c
  42698b:	mov    ecx,0x8964692
  426990:	sub    cl,BYTE PTR [ebp+edx*4-0x1d1623c]
  426997:	and    cl,BYTE PTR [ecx-0x46]
  42699a:	push   ss
  42699b:	mov    eax,ds:0xd0414212
  4269a0:	(bad)  [ebx-0x2e2b2c68]
  4269a6:	stos   DWORD PTR es:[edi],eax
  4269a7:	add    ch,al
  4269a9:	in     al,0xf9
  4269ab:	sbb    al,0xd2
  4269ad:	rcr    BYTE PTR [ebx],cl
  4269af:	or     BYTE PTR [ebx],0xa4
  4269b2:	inc    edx
  4269b3:	cmp    ch,ah
  4269b5:	arpl   WORD PTR [ebp-0x8336a0c],dx
  4269bb:	pop    ss
  4269bc:	adc    bl,ch
  4269be:	adc    al,al
  4269c0:	in     al,dx
  4269c1:	in     eax,dx
  4269c2:	jge    0x4269fb
  4269c4:	sub    DWORD PTR [edx],esp
  4269c6:	mov    bl,0xdb
  4269c8:	sbb    eax,0x555a3c20
  4269cd:	cli    
  4269ce:	mov    ds:0x53de451a,eax
  4269d3:	ins    BYTE PTR es:[edi],dx
  4269d4:	mov    ds:0xcbba436b,eax
  4269d9:	clc    
  4269da:	push   esi
  4269db:	push   esi
  4269dc:	sbb    BYTE PTR [esi+0x5f6d21bd],0xc
  4269e3:	mov    bh,BYTE PTR [ebp+0x3a]
  4269e6:	in     al,0xd7
  4269e8:	pop    edi
  4269e9:	cs ret 0xcff1
  4269ed:	fidiv  WORD PTR [edx-0x47a129ab]
  4269f3:	or     al,0x44
  4269f5:	aaa    
  4269f6:	cs push cs
  4269f8:	ins    BYTE PTR es:[edi],dx
  4269f9:	mov    eax,0x24b27420
  4269fe:	(bad)  
  4269ff:	(bad)  
  426a00:	mov    ebp,0x5dfa17e3
  426a05:	test   bl,ah
  426a07:	sub    al,BYTE PTR [ebp-0x1e]
  426a0a:	in     eax,dx
  426a0b:	and    BYTE PTR [ecx],ch
  426a0d:	pop    edi
  426a0e:	pop    ss
  426a0f:	popf   
  426a10:	mov    ds:0x65373909,al
  426a15:	push   ss
  426a16:	int3   
  426a17:	idiv   DWORD PTR [edx-0x74e88e23]
  426a1d:	push   ecx
  426a1e:	cwde   
  426a1f:	jne    0x426a87
  426a21:	adc    DWORD PTR [esi+0x4b4975d],ebp
  426a27:	das    
  426a28:	mov    ecx,0x37b5076
  426a2d:	dec    ebp
  426a2e:	pusha  
  426a2f:	arpl   WORD PTR [eax+0x11fc6e9d],dx
  426a35:	in     al,0xad
  426a37:	jl     0x426a7f
  426a39:	dec    eax
  426a3a:	adc    ebx,DWORD PTR [edx-0x29]
  426a3d:	xchg   edx,eax
  426a3e:	or     al,0xaf
  426a40:	dec    BYTE PTR [edi-0x5bd04a8d]
  426a46:	cs sub al,0xf2
  426a49:	push   0xc57d7ee3
  426a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a4f:	ins    DWORD PTR es:[edi],dx
  426a50:	dec    eax
  426a51:	outs   dx,DWORD PTR ds:[esi]
  426a52:	in     al,0xa7
  426a54:	xchg   BYTE PTR [ebx],ah
  426a56:	ss es into 
  426a59:	xchg   edx,eax
  426a5a:	test   DWORD PTR [edi-0x6b80fc51],eax
  426a60:	and    bh,BYTE PTR [edi]
  426a62:	lock cs mov edi,0x64e9566f
  426a69:	or     al,cl
  426a6b:	sti    
  426a6c:	pop    esi
  426a6d:	cmc    
  426a6e:	not    DWORD PTR [esi+0x2d]
  426a71:	mov    al,0x1b
  426a73:	jno    0x426a18
  426a75:	and    dl,al
  426a77:	push   0xffffffcc
  426a79:	ins    DWORD PTR es:[edi],dx
  426a7a:	mov    ebx,0xfaf59a8d
  426a7f:	lahf   
  426a80:	push   ecx
  426a81:	sub    al,0xa4
  426a83:	xchg   BYTE PTR [esi+0x77],al
  426a86:	shl    BYTE PTR [esi-0x54],cl
  426a89:	adc    BYTE PTR [edi+0x18],dh
  426a8c:	or     BYTE PTR [ebx+0x7516c80f],bh
  426a92:	or     eax,0xa6fe31e6
  426a97:	sbb    esi,DWORD PTR [edx+0x1b]
  426a9a:	dec    ebp
  426a9b:	clc    
  426a9c:	ror    bl,cl
  426a9e:	inc    ebx
  426a9f:	and    al,0xe3
  426aa1:	cmp    bl,BYTE PTR [edi-0x25fe9d53]
  426aa7:	retf   0xf75d
  426aaa:	pop    ds
  426aab:	jl     0x426b2c
  426aad:	fistp  DWORD PTR [ebx-0x10af203c]
  426ab3:	int3   
  426ab4:	dec    edi
  426ab5:	lds    edi,FWORD PTR ds:0xf7562ec3
  426abb:	int    0x3a
  426abd:	mov    eax,0xb1be0c6
  426ac2:	or     edi,DWORD PTR [edi]
  426ac4:	lea    eax,[edi]
  426ac6:	mov    edi,0x908ce1b2
  426acb:	hlt    
  426acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426acd:	pop    esi
  426ace:	xchg   ecx,eax
  426acf:	mov    bh,0x7a
  426ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ad2:	add    BYTE PTR ds:0x31f8b1b4,cl
  426ad8:	mov    esp,0x1f07215
  426add:	pop    eax
  426ade:	jl     0x426b15
  426ae0:	adc    BYTE PTR [ecx+0x736d75b5],0x48
  426ae7:	bound  esi,QWORD PTR ds:0xfa642eb2
  426aed:	fadd   QWORD PTR [edi]
  426aef:	inc    ebp
  426af0:	sub    BYTE PTR ds:0x20c1730e,bl
  426af6:	cwde   
  426af7:	lds    eax,FWORD PTR [eax]
  426af9:	mov    bl,0xdf
  426afb:	in     eax,0xaa
  426afd:	cmp    DWORD PTR [esi],0xffffffe6
  426b00:	jb     0x426b42
  426b02:	(bad)  
  426b03:	(bad)  
  426b04:	add    DWORD PTR [esi],0x865de935
  426b0a:	pop    ebx
  426b0b:	sbb    DWORD PTR [edi-0x6a8d54d0],esi
  426b11:	nop
  426b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b13:	sbb    ebp,edx
  426b15:	popa   
  426b16:	and    edx,DWORD PTR [ebp-0x5a883f73]
  426b1c:	fwait
  426b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b1e:	std    
  426b1f:	mov    esp,esp
  426b21:	xchg   edx,eax
  426b22:	js     0x426b48
  426b24:	scas   al,BYTE PTR es:[edi]
  426b25:	repz (bad) 
  426b27:	pop    esp
  426b28:	hlt    
  426b29:	sbb    al,0x54
  426b2b:	cmp    BYTE PTR es:0xf1bec330,cl
  426b32:	push   ecx
  426b33:	sub    DWORD PTR [ecx],ecx
  426b35:	inc    ecx
  426b36:	add    ch,ch
  426b38:	dec    ecx
  426b39:	out    dx,al
  426b3a:	loope  0x426b02
  426b3c:	(bad)  
  426b3d:	jbe    0x426afc
  426b3f:	dec    edi
  426b40:	jecxz  0x426bb4
  426b42:	rep stos BYTE PTR es:[edi],al
  426b44:	sub    eax,0x2ca0db21
  426b49:	pushf  
  426b4a:	stc    
  426b4b:	mov    ah,0xd4
  426b4d:	fucom  st(7)
  426b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b50:	daa    
  426b51:	scas   al,BYTE PTR es:[edi]
  426b52:	lock cwde 
  426b54:	push   ebx
  426b55:	jmp    0x5ee4:0xe67416f7
  426b5c:	leave  
  426b5d:	in     al,0xe7
  426b5f:	jge    0x426b1c
  426b61:	xchg   ecx,eax
  426b62:	push   ebp
  426b63:	or     BYTE PTR [edi-0x6d5926cf],cl
  426b69:	and    al,0x7c
  426b6b:	fst    QWORD PTR [ebp-0x4e38b7ea]
  426b71:	sahf   
  426b72:	les    eax,FWORD PTR [edx-0x1c73e4e2]
  426b78:	xor    esi,ebx
  426b7a:	and    dh,ch
  426b7c:	pop    eax
  426b7d:	mov    DWORD PTR [ebp+0x68],esp
  426b80:	cmp    BYTE PTR [ecx],dh
  426b82:	and    DWORD PTR ds:0x5ddb88bb,esp
  426b88:	push   0xe270cbfd
  426b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b8e:	lea    ebp,[ebp-0x6f1fe241]
  426b94:	and    ebx,DWORD PTR ds:0x499e154
  426b9a:	fcomp  DWORD PTR [eax-0x37]
  426b9d:	jge    0x426c1c
  426b9f:	and    eax,0x3f8bd4c1
  426ba4:	cdq    
  426ba5:	je     0x426be3
  426ba7:	jg     0x426bc8
  426ba9:	or     edx,DWORD PTR [esi-0x41]
  426bac:	std    
  426bad:	dec    ecx
  426bae:	mov    esp,edi
  426bb0:	or     al,0x86
  426bb2:	ds sbb al,0x6e
  426bb5:	sbb    eax,0xb03a88e7
  426bba:	loope  0x426c2c
  426bbc:	ja     0x426bb3
  426bbe:	aaa    
  426bbf:	mov    dl,0xac
  426bc1:	jle    0x426c00
  426bc3:	cmp    bh,ah
  426bc5:	prefetcht0 BYTE PTR [ecx]
  426bc8:	dec    esp
  426bc9:	(bad)  
  426bca:	jmp    0x426c1a
  426bcc:	dec    ebp
  426bcd:	ror    BYTE PTR [ebx-0x3bec20aa],0x38
  426bd4:	cwde   
  426bd5:	fstp   QWORD PTR [ecx+0x72]
  426bd8:	push   es
  426bd9:	add    ch,BYTE PTR [edi+0x603afd5a]
  426bdf:	cmp    BYTE PTR [edi-0x2f],0x31
  426be3:	mov    al,ds:0xf6abbf5e
  426be8:	mov    ecx,0xbec51dbd
  426bed:	shl    BYTE PTR [edi+0x7e],0x84
  426bf1:	inc    eax
  426bf2:	dec    esi
  426bf3:	cwde   
  426bf4:	mov    ch,0xee
  426bf6:	inc    esp
  426bf7:	fcom   st(3)
  426bf9:	stc    
  426bfa:	jp     0x426bec
  426bfc:	retf   0xd222
  426bff:	adc    DWORD PTR [ebx],0x3a200026
  426c05:	int    0xaa
  426c07:	jmp    0xe30adbe5
  426c0c:	js     0x426be4
  426c0e:	mov    cl,0x45
  426c10:	jae    0x426b99
  426c12:	mov    ebx,0xe6aa4b8f
  426c17:	ins    BYTE PTR es:[edi],dx
  426c18:	(bad)  
  426c19:	cld    
  426c1a:	daa    
  426c1b:	in     al,dx
  426c1c:	enter  0xe7b4,0x6c
  426c20:	pop    ebx
  426c21:	add    BYTE PTR [eax+eax*1+0x1d],0x89
  426c26:	ror    DWORD PTR [ecx+0x48d779a5],cl
  426c2c:	lods   eax,DWORD PTR ds:[esi]
  426c2d:	or     bl,bh
  426c2f:	ret    0x8c25
  426c32:	pop    esi
  426c33:	mov    edi,0x8fde25fa
  426c38:	retf   
  426c39:	ror    DWORD PTR [edi],cl
  426c3b:	dec    eax
  426c3c:	cmp    DWORD PTR [ebp+0x15fa47ba],edi
  426c42:	mov    ds:0xd3b4da89,al
  426c47:	sbb    al,0x85
  426c49:	jbe    0x426be7
  426c4b:	(bad)  
  426c4d:	fdiv   DWORD PTR [ecx+0x3401e371]
  426c53:	dec    esi
  426c54:	add    DWORD PTR [esi-0x50],edi
  426c57:	add    BYTE PTR [eax-0x30],0xda
  426c5b:	imul   eax,DWORD PTR [esi-0x1535ab42],0xdc9bcabb
  426c65:	add    ebp,DWORD PTR ds:[eax+0x6e20eab4]
  426c6c:	lahf   
  426c6d:	sti    
  426c6e:	out    dx,eax
  426c6f:	cmc    
  426c70:	xor    al,ah
  426c72:	jge    0x426cf3
  426c74:	adc    BYTE PTR [esi],dh
  426c76:	hlt    
  426c77:	icebp  
  426c78:	rol    BYTE PTR [eax-0x3c],0x90
  426c7c:	push   edx
  426c7d:	pop    es
  426c7e:	dec    esp
  426c7f:	inc    esi
  426c80:	jmp    0xadbb3682
  426c85:	fdivr  st,st(6)
  426c87:	out    dx,al
  426c88:	shl    BYTE PTR [eax-0x56],cl
  426c8b:	adc    al,0x29
  426c8d:	out    0xab,eax
  426c8f:	push   0x5d
  426c91:	(bad)  
  426c93:	mov    DWORD PTR [eax+ebp*8],edx
  426c96:	jno    0x426ca0
  426c98:	mov    eax,ds:0xec0a527a
  426c9d:	xlat   BYTE PTR ds:[ebx]
  426c9e:	fild   WORD PTR [eax]
  426ca0:	add    BYTE PTR [eax],al
  426ca2:	xchg   esi,eax
  426ca3:	rcr    BYTE PTR [edi],0x45
  426ca6:	pop    edi
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx+0x4ce88e10],cl
  426caf:	inc    ebx
  426cb0:	pop    edi
  426cb1:	jae    0x426ccf
  426cb3:	in     eax,0x1
  426cb5:	add    ch,dh
  426cb7:	add    al,0x0
  426cb9:	add    BYTE PTR [ebx],dl
  426cbb:	push   ss
  426cbc:	ins    DWORD PTR es:[edi],dx
  426cbd:	jbe    0x426d2d
  426cbf:	or     DWORD PTR [ecx],esi
  426cc1:	xchg   DWORD PTR gs:[edi+0x558c066f],esp
  426cc8:	mov    eax,ds:0x3aefe215
  426ccd:	cmp    ah,BYTE PTR [ecx+0x76]
  426cd0:	pop    ds
  426cd1:	sbb    al,BYTE PTR [edi+edx*4-0x5b54015b]
  426cd8:	jno    0x426cc7
  426cda:	les    esi,FWORD PTR [edi-0x1a]
  426cdd:	mov    esp,0x2e9e0d60
  426ce2:	sbb    BYTE PTR [esi+eax*1-0x73],ch
  426ce6:	arpl   WORD PTR [esi+0x572dfebf],sp
  426cec:	fxch   st(0)
  426cee:	cmc    
  426cef:	loop   0x426d01
  426cf1:	sbb    ebp,DWORD PTR [ebp+0x7648763a]
  426cf7:	xchg   ecx,eax
  426cf8:	sbb    ch,bl
  426cfa:	aad    0x11
  426cfc:	(bad)  [ecx+0x76add919]
  426d02:	call   0x4586:0x39783a5d
  426d09:	jne    0x426c97
  426d0b:	mov    es,WORD PTR [ecx-0x1b9afc0e]
  426d11:	popf   
  426d12:	daa    
  426d13:	inc    DWORD PTR [ecx-0x1167492a]
  426d19:	retf   0x86c2
  426d1c:	push   0xe687395c
  426d21:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  426d23:	and    bh,BYTE PTR [ecx-0x6acfb3d7]
  426d29:	pusha  
  426d2a:	popa   
  426d2b:	nop
  426d2c:	mov    al,0x19
  426d2e:	push   cs
  426d2f:	das    
  426d30:	mov    ds:0x7754b154,al
  426d35:	cmp    DWORD PTR [ebx-0x9],0x5838bde2
  426d3c:	adc    ecx,0xf003c4d8
  426d42:	loopne 0x426d10
  426d44:	or     al,0x2c
  426d46:	adc    al,0x11
  426d48:	xchg   esi,eax
  426d49:	ret    
  426d4a:	cmp    eax,0x89cb8f29
  426d4f:	test   bl,al
  426d51:	(bad)  
  426d52:	pop    esi
  426d53:	mov    ds:0xe235a4fa,al
  426d58:	or     ecx,DWORD PTR [edx-0x7]
  426d5b:	data16 scas al,BYTE PTR es:[edi]
  426d5d:	adc    al,0x54
  426d5f:	inc    esp
  426d60:	stos   BYTE PTR es:[edi],al
  426d61:	mov    esi,0xffd14c59
  426d66:	jge    0x426cf4
  426d68:	scas   al,BYTE PTR es:[edi]
  426d69:	retf   
  426d6a:	inc    esp
  426d6b:	xor    DWORD PTR [edx+0x2436c73],edx
  426d71:	lods   al,BYTE PTR ds:[esi]
  426d72:	lahf   
  426d73:	clc    
  426d74:	add    DWORD PTR [edx],0xffffffd1
  426d77:	jno    0x426d71
  426d79:	mov    esp,0xbfd89e5f
  426d7e:	push   ss
  426d7f:	repz push edx
  426d81:	jge    0x426de7
  426d83:	daa    
  426d84:	add    DWORD PTR [eax+0x46],ebx
  426d87:	leave  
  426d88:	sub    ebx,DWORD PTR [eax+0x1257241e]
  426d8e:	adc    DWORD PTR [esi-0x6c477e34],esi
  426d94:	sub    al,0x37
  426d96:	cmp    DWORD PTR [esi-0x3b813f1e],0xffffffa1
  426d9d:	aas    
  426d9e:	mov    bh,0x90
  426da0:	pop    ebp
  426da1:	das    
  426da2:	fwait
  426da3:	cmp    eax,0xdad70b80
  426da8:	cmp    edi,ebx
  426daa:	sbb    dh,BYTE PTR [edi+ecx*1]
  426dad:	add    al,0xb4
  426daf:	into   
  426db0:	mov    eax,ds:0xdb8e1401
  426db5:	das    
  426db6:	cmp    al,0xb9
  426db8:	jl     0x426d62
  426dba:	nop
  426dbb:	mov    eax,ds:0xd5f47067
  426dc0:	push   0xffffff97
  426dc2:	bound  ecx,QWORD PTR [esi-0x6]
  426dc5:	add    BYTE PTR [ebp+0x1b],bh
  426dc8:	xchg   edi,eax
  426dc9:	add    BYTE PTR [eax],dl
  426dcb:	push   esi
  426dcc:	or     eax,0x9dbe214
  426dd1:	mov    eax,ds:0x2cd5e7d2
  426dd6:	imul   ebp,DWORD PTR [edx],0x7b5da3bb
  426ddc:	cwde   
  426ddd:	jg     0x426de6
  426ddf:	xor    al,0x3b
  426de1:	imul   esi,DWORD PTR [ebp-0x6f],0xffffffd6
  426de5:	cdq    
  426de6:	cmp    al,0x4b
  426de8:	jg     0x426e3f
  426dea:	xor    BYTE PTR [eax],al
  426dec:	inc    ecx
  426ded:	pop    eax
  426dee:	xchg   ecx,eax
  426def:	stos   DWORD PTR es:[edi],eax
  426df0:	scas   al,BYTE PTR es:[edi]
  426df1:	mov    ebp,DWORD PTR [ecx]
  426df3:	sbb    eax,DWORD PTR [eax]
  426df5:	addr16 jbe 0x426e56
  426df8:	jmp    0x426e07
  426dfa:	imul   BYTE PTR [eax]
  426dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dfd:	out    0x70,al
  426dff:	inc    BYTE PTR [edx]
  426e01:	popa   
  426e02:	js     0x426e4d
  426e04:	add    edx,ebp
  426e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e07:	cld    
  426e08:	inc    esi
  426e09:	mov    al,0x97
  426e0b:	xchg   ecx,eax
  426e0c:	mov    ecx,0xf508e36b
  426e11:	adc    ecx,DWORD PTR [edx+0x5a]
  426e14:	mov    BYTE PTR [eax+0x60],ah
  426e17:	imul   esi,DWORD PTR [edx+0x24],0x3c
  426e1b:	adc    al,0x36
  426e1d:	or     esp,DWORD PTR [esi]
  426e1f:	loopne 0x426dd7
  426e21:	(bad)  
  426e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e23:	fcom   DWORD PTR [eax-0x69a051be]
  426e29:	mov    ds:0xb0e95f57,al
  426e2e:	cld    
  426e2f:	cmp    BYTE PTR [eax+0x56],ch
  426e32:	arpl   WORD PTR [esi+0x58eb8863],cx
  426e38:	xor    DWORD PTR [ecx-0x3c],ebx
  426e3b:	aam    0xe7
  426e3d:	mov    ds:0x38ff1d82,eax
  426e42:	in     eax,0xa0
  426e44:	xor    edx,eax
  426e46:	(bad)  
  426e47:	aas    
  426e48:	adc    BYTE PTR [edx],dh
  426e4a:	xor    eax,0x54fb9254
  426e4f:	out    dx,al
  426e50:	lds    edi,FWORD PTR [edi-0x6ac9fb33]
  426e56:	mov    ah,0x1b
  426e58:	test   BYTE PTR [ecx+ebx*8+0x5ae287af],dl
  426e5f:	jmp    0x426e35
  426e61:	aam    0x6a
  426e63:	mov    esp,0xc7d5c2bf
  426e68:	out    0x11,eax
  426e6a:	in     eax,0x2
  426e6c:	mov    ebx,0xd2b8d561
  426e71:	fdiv   st(6),st
  426e73:	pusha  
  426e74:	leave  
  426e75:	pop    edi
  426e76:	cmp    ebp,DWORD PTR [edi+0x1b954146]
  426e7c:	dec    esi
  426e7d:	call   0xfca977b3
  426e82:	cmp    eax,ecx
  426e84:	mov    ebp,DWORD PTR [edi+edx*4]
  426e87:	sub    bl,0x9b
  426e8a:	repnz (bad) 
  426e8c:	mov    edx,es
  426e8e:	(bad)  
  426e8f:	outs   dx,DWORD PTR ds:[esi]
  426e90:	sahf   
  426e91:	std    
  426e92:	mov    al,ds:0xfd634343
  426e97:	and    al,0x13
  426e99:	xchg   DWORD PTR [eax],esi
  426e9b:	xchg   ecx,eax
  426e9c:	rcr    DWORD PTR [eax+0x4bdaece0],0x29
  426ea3:	sub    eax,0x6b540536
  426ea8:	scas   eax,DWORD PTR es:[edi]
  426ea9:	(bad)  
  426eaa:	xchg   ebp,eax
  426eab:	rcr    ecx,cl
  426ead:	and    BYTE PTR [eax],dh
  426eaf:	pop    ebp
  426eb0:	push   0xffffffda
  426eb2:	sub    bl,BYTE PTR [eax+0x415bbf02]
  426eb8:	cld    
  426eb9:	inc    ebx
  426eba:	or     al,0x7c
  426ebc:	fcmovnu st,st(2)
  426ebe:	xlat   BYTE PTR ds:[ebx]
  426ebf:	cmc    
  426ec0:	loope  0x426e5a
  426ec2:	idiv   ebp
  426ec4:	pop    ebp
  426ec5:	iret   
  426ec6:	sahf   
  426ec7:	cld    
  426ec8:	stc    
  426ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426eca:	or     DWORD PTR [edi-0x3b],0x52
  426ece:	cmp    DWORD PTR [eax],edi
  426ed0:	cwde   
  426ed1:	stos   BYTE PTR es:[edi],al
  426ed2:	shl    BYTE PTR [eax+0x79d51629],0x43
  426ed9:	mov    ecx,0x32c26e66
  426ede:	dec    edi
  426edf:	scas   al,BYTE PTR es:[edi]
  426ee0:	push   cs
  426ee1:	retf   0xe422
  426ee4:	(bad)  
  426ee5:	popa   
  426ee6:	jg     0x426ed4
  426ee8:	(bad)  
  426ee9:	mov    WORD PTR [esi+edi*1+0x67],ds
  426eed:	cmp    DWORD PTR ds:0x4396c123,edx
  426ef3:	mov    esi,0xd447d691
  426ef8:	or     BYTE PTR [ebp-0x4e],ah
  426efb:	mov    edi,0xf834dd86
  426f00:	(bad)  
  426f01:	aam    0x2f
  426f03:	nop
  426f04:	out    dx,al
  426f05:	cmp    DWORD PTR [ebp+0x16],0x8fef1f54
  426f0c:	xlat   BYTE PTR ds:[ebx]
  426f0d:	ror    BYTE PTR [ebp-0x51],cl
  426f10:	push   eax
  426f11:	jmp    0x426f6a
  426f13:	int    0xe9
  426f15:	mov    ah,0x91
  426f17:	icebp  
  426f18:	test   al,0xe4
  426f1a:	int    0xc2
  426f1c:	pop    ebx
  426f1d:	add    DWORD PTR [edx-0x2f5ede16],ebx
  426f23:	jmp    0x8d61a431
  426f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f29:	pop    ds
  426f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f2b:	push   ebp
  426f2c:	sub    al,0xc5
  426f2e:	icebp  
  426f2f:	paddusw mm1,QWORD PTR [ebx-0x2a]
  426f33:	xchg   esp,eax
  426f34:	out    dx,al
  426f35:	dec    edx
  426f36:	test   al,0x6c
  426f38:	sbb    eax,0xa4b1a109
  426f3d:	sub    al,0xba
  426f3f:	in     eax,0x30
  426f41:	cdq    
  426f42:	mov    ?,WORD PTR [ecx-0x18197c05]
  426f48:	sbb    DWORD PTR [ecx-0x143960ae],ebx
  426f4e:	push   ss
  426f4f:	xchg   BYTE PTR [edi],al
  426f51:	xchg   DWORD PTR [eax-0x33793a75],edx
  426f57:	lock std 
  426f59:	aam    0x1f
  426f5b:	or     BYTE PTR [edx-0x66],cl
  426f5e:	stos   DWORD PTR es:[edi],eax
  426f5f:	sub    ecx,DWORD PTR [edx+0x8775984]
  426f65:	jbe    0x426fe1
  426f67:	inc    ebx
  426f68:	or     ecx,DWORD PTR [eax]
  426f6a:	ret    
  426f6b:	shr    DWORD PTR [esp+edx*8+0x6],0xa7
  426f70:	lea    esi,fs:[ecx]
  426f73:	pusha  
  426f74:	je     0x426fc9
  426f76:	jae    0x426fa5
  426f78:	jo     0x426f97
  426f7a:	test   DWORD PTR [ecx-0x69426bb0],ecx
  426f80:	pop    ebx
  426f81:	inc    edx
  426f82:	jg     0x426feb
  426f84:	jb     0x426fcb
  426f86:	and    DWORD PTR [ecx+0x1cb58746],ebx
  426f8c:	jbe    0x426f8e
  426f8e:	push   ebx
  426f8f:	ds call 0x29a1:0xda51f402
  426f97:	push   edi
  426f98:	dec    ebp
  426f99:	rol    BYTE PTR [edx+0x9],1
  426f9c:	jg     0x426f76
  426f9e:	add    ch,BYTE PTR [ebp+0x3c96b62f]
  426fa4:	idiv   eax
  426fa6:	call   0x950c:0x867154bd
  426fad:	imul   ebp,ebx,0xb8342a38
  426fb3:	xor    cl,BYTE PTR [ecx-0x5deb4fab]
  426fb9:	pop    esp
  426fba:	test   eax,esi
  426fbc:	outs   dx,BYTE PTR ds:[esi]
  426fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fbe:	xchg   esp,eax
  426fbf:	jl     0x426fb8
  426fc1:	jns    0x427003
  426fc3:	scas   al,BYTE PTR es:[edi]
  426fc4:	fs stc 
  426fc6:	mov    ecx,0xa6e5757e
  426fcb:	xchg   esp,eax
  426fcc:	fcmovu st,st(6)
  426fce:	hlt    
  426fcf:	scas   al,BYTE PTR es:[edi]
  426fd0:	arpl   WORD PTR [esi-0x4c284efd],cx
  426fd6:	inc    ebp
  426fd7:	inc    esp
  426fd8:	mov    BYTE PTR [ebp+0xb5cb126],dl
  426fde:	and    al,0xeb
  426fe0:	jnp    0x426fb6
  426fe2:	add    ecx,DWORD PTR [esi+0x1f235675]
  426fe8:	fcomp  DWORD PTR [edx-0x71f04269]
  426fee:	mov    BYTE PTR [ebp-0x5],dl
  426ff1:	adc    DWORD PTR [edx+0x4f],ecx
  426ff4:	jb     0x426f9c
  426ff6:	inc    edi
  426ff7:	xchg   edx,eax
  426ff8:	ret    0xd7fc
  426ffb:	xor    ecx,0xe2d22e4
  427001:	inc    si
  427003:	or     DWORD PTR [ebx-0x6e059e71],edx
  427009:	call   0xe28ae2f7
  42700e:	mov    edx,0xbb45ba34
  427013:	and    BYTE PTR [edi+ebp*8],dh
  427016:	push   esi
  427017:	dec    ecx
  427018:	adc    esi,edi
  42701a:	addr16 adc al,ah
  42701d:	test   al,0xc3
  42701f:	and    esi,eax
  427021:	pop    edx
  427022:	pmaddwd mm6,QWORD PTR [ebp+0x2d73c5fb]
  427029:	sbb    al,0x4f
  42702b:	and    ch,BYTE PTR ds:0xc397f0ce
  427031:	mov    ?,esi
  427033:	popa   
  427034:	xchg   esp,eax
  427035:	inc    eax
  427036:	or     BYTE PTR [edx],ch
  427038:	xlat   BYTE PTR ds:[ebx]
  427039:	push   esi
  42703a:	dec    edi
  42703b:	loopne 0x427093
  42703d:	mov    ch,0x7c
  42703f:	jae    0x42704f
  427041:	mov    dh,0x63
  427043:	not    bh
  427045:	jle    0x4270a4
  427047:	loop   0x426ff3
  427049:	jmp    0x521dfe28
  42704e:	(bad)  
  42704f:	mov    cl,0x94
  427051:	lea    ecx,[esi]
  427053:	xlat   BYTE PTR ds:[ebx]
  427055:	pop    ebp
  427056:	retf   
  427057:	xor    ecx,esi
  427059:	js     0x4270a4
  42705b:	adc    DWORD PTR [ebx-0x6f],edi
  42705e:	xor    DWORD PTR [edx-0x3efd8fe2],0xffffffa0
  427065:	aad    0xa8
  427067:	mov    bl,BYTE PTR [ecx-0x40]
  42706a:	sub    al,0x30
  42706c:	jno    0x427059
  42706e:	pop    ebx
  42706f:	test   DWORD PTR [esi-0x2a],esp
  427072:	ins    DWORD PTR es:[edi],dx
  427073:	in     eax,0x2d
  427075:	stc    
  427076:	pushf  
  427077:	addr16 aad 0x6e
  42707a:	jge    0x42709f
  42707c:	repz or eax,0xde1be3c9
  427082:	add    al,0xa0
  427084:	popf   
  427085:	or     BYTE PTR [esi-0x1937499a],0x42
  42708c:	mov    eax,ds:0xe407da39
  427091:	dec    esp
  427092:	xchg   edx,eax
  427093:	jl     0x427109
  427095:	jg     0x42710e
  427097:	leave  
  427098:	mov    edx,DWORD PTR [ebp-0x42]
  42709b:	push   0x4b7a6a68
  4270a0:	pop    ebx
  4270a1:	push   ebx
  4270a2:	sbb    eax,0x421d0e2a
  4270a7:	leave  
  4270a8:	mov    al,0xca
  4270aa:	iret   
  4270ab:	and    DWORD PTR gs:[ebx+0x5e],0x10fc79bd
  4270b3:	fisttp DWORD PTR [edi+0x2be6a600]
  4270b9:	sbb    al,0x2
  4270bb:	enter  0x625,0x89
  4270bf:	mov    dl,0xf3
  4270c1:	xor    al,dl
  4270c3:	jmp    0x42711f
  4270c5:	sar    BYTE PTR [edi],0x69
  4270c8:	imul   esp,DWORD PTR [ebx+0x36],0xffffffd1
  4270cc:	inc    edx
  4270cd:	int    0x9f
  4270cf:	mov    dl,0x69
  4270d1:	dec    esi
  4270d2:	jp     0x427084
  4270d4:	stc    
  4270d5:	gs jmp 0xec53b48f
  4270db:	nop
  4270dc:	mov    cl,0x18
  4270de:	iret   
  4270df:	push   eax
  4270e0:	xor    bl,BYTE PTR [ebx+0x5e]
  4270e3:	fwait
  4270e4:	jbe    0x4270d1
  4270e6:	inc    edx
  4270e7:	cmp    ebp,eax
  4270e9:	add    dl,bh
  4270eb:	fld    DWORD PTR [edi+0x30]
  4270ee:	es mov dh,0x44
  4270f1:	retf   0x2b3d
  4270f4:	cmp    al,0xba
  4270f6:	aas    
  4270f7:	lock hlt 
  4270f9:	arpl   WORD PTR [ecx-0x78671b83],ax
  4270ff:	xlat   BYTE PTR ds:[ebx]
  427100:	push   edx
  427101:	cwde   
  427102:	out    0xe5,al
  427104:	sub    DWORD PTR [ecx+0x5c],esi
  427107:	mov    ah,0x66
  427109:	adc    eax,0x59e9a221
  42710e:	fistp  QWORD PTR [ecx]
  427110:	and    esi,DWORD PTR [ebx+ebp*8+0x42]
  427114:	(bad)  [esi+0x35cb5bdb]
  42711a:	cld    
  42711b:	pop    ebx
  42711c:	mov    cl,0x46
  42711e:	sbb    BYTE PTR [eax+ebx*8+0x50],al
  427122:	loope  0x4270cf
  427124:	push   ebp
  427125:	ds (bad) 
  427127:	xor    ch,BYTE PTR [ecx-0x29]
  42712a:	mov    esi,0xa8efc75f
  42712f:	sub    cl,BYTE PTR [ecx]
  427131:	push   eax
  427132:	cld    
  427133:	add    al,0x7a
  427135:	sub    al,0xa1
  427137:	into   
  427138:	pop    ecx
  427139:	pop    eax
  42713a:	jmp    0x1512:0xcbf1b6c2
  427141:	jle    0x42716f
  427143:	mov    eax,DWORD PTR [ebx]
  427145:	or     ch,BYTE PTR [eax+0x51]
  427148:	or     eax,0x4000bd66
  42714d:	adc    al,0x5d
  42714f:	pop    es
  427150:	adc    eax,0x796674c2
  427155:	mov    ecx,0x95a5b675
  42715a:	mov    dl,0x87
  42715c:	jmp    0x42718f
  42715e:	leave  
  42715f:	pop    esp
  427160:	pop    ecx
  427161:	push   edx
  427162:	push   edi
  427163:	mov    ebx,0xbb15d09
  427168:	js     0x4271e0
  42716a:	int    0x4b
  42716c:	cs leave 
  42716e:	call   FWORD PTR cs:[ecx+eax*8-0x8c831cc]
  427176:	stos   BYTE PTR es:[edi],al
  427177:	aad    0x9a
  427179:	hlt    
  42717a:	sub    esi,DWORD PTR [edx+0x1ed6e15b]
  427180:	pop    edi
  427181:	call   0x2219:0x14bbc197
  427188:	repnz call 0x72b2:0x8baaeb04
  427190:	push   esp
  427191:	or     ebx,ebp
  427193:	inc    edx
  427194:	fsubr  DWORD PTR [ebx+esi*2-0x7479df1c]
  42719b:	rcr    DWORD PTR [ebx],1
  42719d:	sbb    al,0x4d
  42719f:	jge    0x427194
  4271a1:	push   eax
  4271a2:	fdivp  st(6),st
  4271a4:	xchg   edi,eax
  4271a5:	cdq    
  4271a6:	or     BYTE PTR [edi],0xbf
  4271a9:	je     0x427158
  4271ab:	cmp    BYTE PTR [eax+0xa0a3],ch
  4271b1:	add    BYTE PTR [ebx],ch
  4271b3:	xchg   DWORD PTR [ebp-0x1f],esi
  4271b6:	std    
  4271b7:	repz mov edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	cmp    BYTE PTR [eax+ecx*8+0x1ea114f],cl
  4271c5:	add    ch,dh
  4271c7:	add    al,0x0
  4271c9:	add    BYTE PTR [edx],bl
  4271cb:	sub    DWORD PTR [ebp+eax*1+0x2f],esi
  4271cf:	popa   
  4271d0:	dec    esp
  4271d1:	jl     0x4271fa
  4271d3:	pushf  
  4271d4:	loope  0x427202
  4271d6:	jae    0x4271a4
  4271d8:	add    esp,esp
  4271da:	into   
  4271db:	or     al,0xbe
  4271dd:	inc    esp
  4271de:	lods   al,BYTE PTR ds:[esi]
  4271df:	sub    al,0xf4
  4271e1:	es out 0xe2,eax
  4271e4:	xor    eax,0xeed7323d
  4271e9:	test   bl,ah
  4271eb:	in     al,dx
  4271ec:	out    dx,eax
  4271ed:	inc    esi
  4271ee:	jne    0x42719e
  4271f0:	(bad)  
  4271f1:	aad    0x1f
  4271f3:	mov    ch,0xe9
  4271f5:	mov    dl,0xdd
  4271f7:	clc    
  4271f8:	add    cl,BYTE PTR [esi+0x58]
  4271fb:	out    dx,al
  4271fc:	ret    0x8432
  4271ff:	popa   
  427200:	and    al,0x5
  427202:	inc    ebp
  427203:	add    dl,BYTE PTR [ebx-0x3262a46c]
  427209:	sbb    dh,BYTE PTR [ebx+edi*8-0x4a42cc2f]
  427210:	mov    eax,ds:0xd85d8728
  427215:	aad    0xc1
  427217:	ss jle 0x4271cc
  42721a:	pusha  
  42721b:	mov    dh,0x3a
  42721d:	ret    0x3039
  427220:	sbb    eax,0x60dff380
  427225:	pop    esi
  427226:	gs test eax,0x2532e593
  42722c:	clc    
  42722d:	adc    dh,bh
  42722f:	xor    bl,BYTE PTR [ecx+0x131f0ce3]
  427235:	in     al,0xa2
  427237:	push   ss
  427238:	pop    eax
  427239:	in     eax,dx
  42723a:	in     al,0x66
  42723c:	shr    BYTE PTR [esi+0x3fac2aad],cl
  427242:	xchg   esi,eax
  427243:	cld    
  427244:	aad    0x2e
  427246:	fld    st(1)
  427248:	dec    eax
  427249:	les    edx,FWORD PTR [edi+edi*4-0x363fbd66]
  427250:	inc    ebp
  427251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427252:	xor    eax,0x118b05e5
  427257:	sub    eax,0x803b70a4
  42725c:	int3   
  42725d:	adc    al,0xc4
  42725f:	xchg   cl,dl
  427261:	push   eax
  427262:	mov    esi,0x42759d24
  427267:	test   al,0x79
  427269:	adc    al,0x4e
  42726b:	pop    eax
  42726c:	cwde   
  42726d:	cmp    DWORD PTR [edi-0x50ea9dab],esp
  427273:	sahf   
  427274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427275:	inc    eax
  427276:	les    edx,FWORD PTR [eax]
  427278:	mov    BYTE PTR [ecx+0x4c],dl
  42727b:	add    BYTE PTR ds:0xffda0736,bl
  427281:	sub    al,0x99
  427283:	popa   
  427284:	or     edx,DWORD PTR [esi-0x2e]
  427287:	mov    eax,ds:0xcc006037
  42728c:	add    eax,0x58054a88
  427291:	mov    dl,BYTE PTR [ebp-0x5b]
  427294:	loopne 0x42722c
  427296:	xchg   edi,eax
  427297:	aam    0xdd
  427299:	push   edi
  42729a:	xor    esp,DWORD PTR [edi]
  42729c:	xor    bh,0xc7
  42729f:	test   al,0x98
  4272a1:	sbb    edi,DWORD PTR [eax-0x2a7d8dff]
  4272a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272a8:	and    eax,0x1882ce69
  4272ad:	in     al,0xd7
  4272af:	push   edi
  4272b0:	test   DWORD PTR [edi],ecx
  4272b2:	mov    al,ds:0xe644396b
  4272b7:	dec    esp
  4272b8:	ss sub esi,edi
  4272bb:	in     al,0xa4
  4272bd:	jne    0x4272d5
  4272bf:	mov    ah,BYTE PTR [ebx]
  4272c1:	jle    0x427284
  4272c3:	sbb    ah,al
  4272c5:	mov    WORD PTR [ecx+eax*4+0x23],?
  4272c9:	jg     0x427299
  4272cb:	jae    0x427292
  4272cd:	add    BYTE PTR [ebx+ebx*8-0x36],cl
  4272d1:	mov    ch,0x18
  4272d3:	cld    
  4272d4:	mov    bh,0x21
  4272d6:	or     cl,BYTE PTR [eax+0x53]
  4272d9:	cdq    
  4272da:	int    0x85
  4272dc:	jmp    FWORD PTR [ebx]
  4272de:	stos   BYTE PTR es:[edi],al
  4272df:	sbb    eax,0x76323fd8
  4272e4:	jmp    0x4272c4
  4272e6:	or     DWORD PTR [ebx+0x3da54c7b],ecx
  4272ec:	xchg   ebx,eax
  4272ee:	psubsb mm0,QWORD PTR [ecx+0x67237a2f]
  4272f5:	nop
  4272f6:	jge    0x42729d
  4272f8:	mov    esi,0xdb055131
  4272fd:	jecxz  0x427349
  4272ff:	mov    DWORD PTR [edx+0x27],esp
  427302:	imul   esi,DWORD PTR [edi],0xfffffff1
  427305:	cmc    
  427306:	(bad)  [edi-0x3d1e4bfd]
  42730c:	xchg   ebp,eax
  42730d:	jge    0x427303
  42730f:	jae    0x4272cf
  427311:	dec    eax
  427312:	sub    ecx,ebx
  427314:	rol    BYTE PTR [eax],cl
  427316:	fld    TBYTE PTR ds:0x1595d53e
  42731c:	xor    ch,bh
  42731e:	push   esp
  42731f:	aam    0xb5
  427321:	and    DWORD PTR [edx+0x7e],edi
  427324:	and    al,0xb5
  427326:	sbb    BYTE PTR [ebp-0x33],bh
  427329:	sub    BYTE PTR [edx-0x11941c9d],ch
  42732f:	test   BYTE PTR [edi-0x2e],0xb8
  427333:	and    BYTE PTR [edx-0x3177754c],al
  427339:	sbb    al,0x1f
  42733b:	adc    ch,BYTE PTR [ebx-0x60]
  42733e:	xchg   ebp,eax
  42733f:	jl     0x427321
  427341:	adc    DWORD PTR [eax+0xd2cd815],0xa53c6aa9
  42734b:	gs pop ebx
  42734d:	push   edx
  42734e:	sbb    dh,BYTE PTR [esi-0x23cf89c3]
  427354:	shr    BYTE PTR [eax+0x7516a72],0x71
  42735b:	inc    ebx
  42735c:	out    0x5c,eax
  42735e:	mov    fs:0x6c86a27c,eax
  427364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427365:	mov    eax,ds:0x1d712a38
  42736a:	stos   DWORD PTR es:[edi],eax
  42736b:	(bad)
  42736f:	mov    WORD PTR [ecx],?
  427371:	push   ebx
  427372:	loopne 0x427339
  427374:	or     eax,esp
  427376:	push   cs
  427377:	test   DWORD PTR [eax-0x7bd5705c],ebp
  42737d:	fimul  DWORD PTR [esi+0x6a]
  427380:	das    
  427381:	sub    cl,al
  427383:	cmp    DWORD PTR [ecx+0x12],esp
  427386:	fs ss pop es
  427389:	mov    ecx,0x4e24dda8
  42738e:	mov    BYTE PTR [edi-0x24],bh
  427391:	push   esi
  427392:	call   0xc454c47b
  427397:	call   0xfff22d0d
  42739c:	not    eax
  42739e:	xchg   bl,cl
  4273a0:	stc    
  4273a1:	and    al,0xbd
  4273a3:	add    DWORD PTR [ebx-0x17],edi
  4273a6:	or     eax,0x5c9df026
  4273ab:	out    dx,al
  4273ac:	jle    0x42739d
  4273ae:	inc    ecx
  4273af:	rol    DWORD PTR [eax],cl
  4273b1:	and    edi,DWORD PTR ds:0x8c05fc94
  4273b7:	sti    
  4273b8:	jmp    0x4273fb
  4273ba:	dec    eax
  4273bb:	mov    ah,0x78
  4273bd:	adc    BYTE PTR [edi+edx*4],dl
  4273c0:	mov    esi,0x9fb9f6f1
  4273c5:	out    dx,eax
  4273c6:	pop    edx
  4273c7:	ins    BYTE PTR es:[edi],dx
  4273c8:	dec    esp
  4273c9:	jecxz  0x42736f
  4273cb:	inc    ebp
  4273cc:	or     eax,0x8624cf20
  4273d1:	xor    eax,DWORD PTR [ecx-0x10c01958]
  4273d7:	mov    esi,0xc2429413
  4273dc:	dec    eax
  4273dd:	std    
  4273de:	ins    BYTE PTR es:[edi],dx
  4273df:	mov    cl,0xc0
  4273e1:	push   eax
  4273e2:	lods   eax,DWORD PTR ds:[esi]
  4273e3:	test   DWORD PTR [edi+0x3ed644ec],eax
  4273e9:	aam    0x2e
  4273eb:	hlt    
  4273ec:	pop    eax
  4273ed:	sti    
  4273ee:	xlat   BYTE PTR ds:[ebx]
  4273ef:	xchg   ecx,eax
  4273f0:	dec    ebx
  4273f1:	daa    
  4273f2:	pop    ebx
  4273f3:	jo     0x4273d7
  4273f5:	addr16 js 0x427432
  4273f8:	adc    bh,al
  4273fa:	int3   
  4273fb:	stos   DWORD PTR es:[edi],eax
  4273fc:	cwde   
  4273fd:	jecxz  0x427479
  4273ff:	pop    ebx
  427400:	mov    ds:0x75239de8,al
  427405:	jb     0x42739e
  427407:	pop    ds
  427408:	pop    eax
  427409:	push   edx
  42740a:	test   al,0xfd
  42740c:	and    esp,DWORD PTR [ebx]
  42740e:	jecxz  0x4273f7
  427410:	loope  0x4273c8
  427412:	in     al,dx
  427413:	fnsave [edi]
  427415:	inc    ecx
  427416:	les    eax,FWORD PTR [eax+0x5e81518e]
  42741c:	jg     0x42745f
  42741e:	(bad)  
  427421:	gs sub al,0xd6
  427424:	test   al,0xa3
  427426:	jle    0x427460
  427428:	fst    DWORD PTR [esi+0x24cae852]
  42742e:	push   ecx
  42742f:	scas   eax,DWORD PTR es:[edi]
  427430:	es xchg ecx,eax
  427432:	and    edx,esp
  427434:	pusha  
  427435:	xchg   edi,eax
  427436:	popf   
  427437:	cmp    ecx,DWORD PTR [edx+0xa]
  42743a:	test   BYTE PTR [ebx-0x6230096c],ah
  427440:	hlt    
  427441:	mov    al,ds:0x33f024dd
  427446:	mov    DWORD PTR [edx-0x1e],ebp
  427449:	lea    edi,[ebx+0x476c5cb9]
  42744f:	lds    esp,FWORD PTR [edx]
  427451:	out    0xed,al
  427453:	jae    0x42749d
  427455:	fcomip st,st(2)
  427457:	in     eax,dx
  427458:	push   esi
  427459:	lods   al,BYTE PTR ds:[esi]
  42745a:	push   es
  42745b:	xchg   edi,eax
  42745c:	sub    bh,ah
  42745e:	test   al,0xc
  427460:	fs in  eax,0xcf
  427463:	es ret 0x515f
  427467:	mov    WORD PTR [ebx-0x697c256f],?
  42746d:	les    esp,FWORD PTR [edi+ebx*4+0x65]
  427471:	outs   dx,BYTE PTR ds:[esi]
  427472:	sar    BYTE PTR [ebp-0x20f63619],cl
  427478:	sub    al,0xc8
  42747a:	push   edx
  42747b:	cdq    
  42747c:	fstp   st(3)
  42747e:	cmp    ah,al
  427480:	pop    eax
  427481:	lds    esp,FWORD PTR [ecx-0x76b0bba5]
  427487:	add    DWORD PTR [ebx-0x4c],edi
  42748a:	aas    
  42748b:	test   al,0x4c
  42748d:	xlat   BYTE PTR ds:[ebx]
  42748e:	mov    dh,0x52
  427490:	ja     0x427414
  427492:	scas   al,BYTE PTR es:[edi]
  427493:	and    eax,0x3867d072
  427498:	jl     0x427434
  42749a:	stos   DWORD PTR es:[edi],eax
  42749b:	gs or  eax,eax
  42749e:	inc    ecx
  42749f:	fldcw  WORD PTR [edi+0x13a4f4c3]
  4274a5:	add    esi,DWORD PTR [esi-0x1f]
  4274a8:	add    ax,WORD PTR [ecx+0x7ea4de27]
  4274af:	icebp  
  4274b0:	hlt    
  4274b1:	cmp    al,BYTE PTR [ecx+0x63]
  4274b4:	(bad)  
  4274b5:	cmp    al,0x4a
  4274b7:	xchg   ecx,eax
  4274b8:	ror    DWORD PTR [edi-0x78],0xb0
  4274bc:	aam    0xdf
  4274be:	mov    BYTE PTR [esi-0x65],al
  4274c1:	pop    eax
  4274c2:	cmc    
  4274c3:	adc    BYTE PTR [ebp-0x4ed9d830],ch
  4274c9:	mov    dl,0x14
  4274cb:	sub    eax,0xe6c111bb
  4274d0:	push   0x9bc3b940
  4274d5:	je     0x4274ba
  4274d7:	std    
  4274d8:	lods   eax,DWORD PTR es:[esi]
  4274da:	sti    
  4274db:	pushw  cs
  4274dd:	dec    ebx
  4274de:	inc    ecx
  4274df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274e0:	xchg   edi,eax
  4274e1:	mov    dh,0xdc
  4274e3:	fiadd  WORD PTR [edi+0x5d]
  4274e6:	js     0x4274ab
  4274e8:	xlat   BYTE PTR ds:[ebx]
  4274e9:	cwde   
  4274ea:	das    
  4274eb:	pushf  
  4274ec:	mov    DWORD PTR [edx+0x3],ecx
  4274ef:	dec    esp
  4274f0:	or     edx,DWORD PTR [eax+edx*4+0x4a]
  4274f4:	xchg   ebp,eax
  4274f5:	mov    dh,0xbf
  4274f7:	mov    ds:0xa8746a88,eax
  4274fc:	xchg   ebx,eax
  4274fd:	call   0xae1a:0xa65d3f34
  427504:	fwait
  427505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427506:	test   al,0x4e
  427508:	(bad)  
  427509:	imul   edx,DWORD PTR ds:[ebx-0x33340e18],0xd6b18ee5
  427514:	loopne 0x427532
  427516:	repz inc ebp
  427518:	cmc    
  427519:	push   edx
  42751a:	in     eax,dx
  42751b:	jge    0x427587
  42751d:	jg     0x4274c8
  42751f:	test   cl,cl
  427521:	add    eax,0x3db63e66
  427526:	add    ch,al
  427528:	iret   
  427529:	xchg   ebx,eax
  42752a:	push   edx
  42752b:	mov    eax,0x515226fb
  427530:	fwait
  427531:	pushf  
  427532:	push   0x7d0749cb
  427537:	inc    esp
  427538:	arpl   WORD PTR [ecx+edx*2-0x54e3bc2b],di
  42753f:	fdiv   st(3),st
  427541:	mov    ds:0xd7f2dd49,eax
  427546:	inc    edx
  427547:	imul   ebp,DWORD PTR [edx+0x40],0xffffffd9
  42754b:	xchg   ebx,eax
  42754c:	adc    DWORD PTR [ecx-0x4f],edi
  42754f:	outs   dx,BYTE PTR ds:[esi]
  427550:	add    al,0xf7
  427552:	sbb    eax,DWORD PTR [esi-0x3e50adb8]
  427558:	pop    ebx
  427559:	cdq    
  42755a:	add    BYTE PTR [ebx],0xd5
  42755d:	push   ds
  42755e:	loopne 0x4274f1
  427560:	(bad)  
  427561:	stos   DWORD PTR es:[edi],eax
  427562:	pop    edi
  427563:	mov    edx,esp
  427565:	(bad)  
  427566:	inc    esi
  427567:	mov    dh,0x95
  427569:	mov    ebp,0xc2f58ab
  42756e:	into   
  42756f:	mov    eax,0x336c14f
  427574:	pop    esi
  427575:	into   
  427576:	jb     0x4275dd
  427578:	mov    al,0x70
  42757a:	in     al,0x38
  42757c:	and    eax,0x76bc5081
  427581:	nop
  427582:	mov    edi,0x6ad316cb
  427587:	cmp    esi,DWORD PTR [edx+ecx*2]
  42758a:	(bad)  
  42758b:	leave  
  42758c:	sub    BYTE PTR [edi+0x61],bh
  42758f:	outs   dx,DWORD PTR ds:[esi]
  427590:	mov    ah,0xe3
  427592:	push   ds
  427593:	jp     0x4275ea
  427595:	add    al,0xee
  427597:	loope  0x427545
  427599:	inc    edi
  42759a:	xchg   DWORD PTR [esi+0x5a3d0c0c],ebx
  4275a0:	jbe    0x42758e
  4275a2:	sahf   
  4275a3:	test   al,0x61
  4275a5:	add    edx,DWORD PTR [esi+edx*4+0x35]
  4275a9:	scas   al,BYTE PTR es:[edi]
  4275aa:	add    eax,0x1135d1b7
  4275af:	out    dx,al
  4275b0:	idiv   BYTE PTR [ebx-0x451b2e88]
  4275b6:	jae    0x427603
  4275b8:	add    ebx,DWORD PTR [edx]
  4275ba:	fidiv  WORD PTR [edi+0x24b7e75f]
  4275c0:	mov    esi,0xe23aaaa8
  4275c5:	dec    edx
  4275c6:	inc    DWORD PTR [edi+0x428ad8d7]
  4275cc:	pop    edi
  4275cd:	lock mov dh,0xfd
  4275d0:	mov    ebp,0xe53fb54c
  4275d5:	jle    0x427605
  4275d7:	retf   0x3f58
  4275da:	cmp    al,0x91
  4275dc:	stos   BYTE PTR es:[edi],al
  4275dd:	das    
  4275de:	icebp  
  4275df:	in     al,dx
  4275e0:	addr16 jmp 0x14bc:0x64d62398
  4275e8:	pop    es
  4275e9:	imul   ebx,DWORD PTR [esi*2-0x16bbd68f],0x4b
  4275f1:	jmp    0x82da:0x80e38ab1
  4275f8:	hlt    
  4275f9:	mov    bl,0x22
  4275fb:	xchg   ebx,eax
  4275fc:	push   ebp
  4275fd:	adc    al,0x4f
  4275ff:	xchg   edi,edi
  427601:	call   0x8e08:0x95aaab45
  427608:	cmp    DWORD PTR [eax],esi
  42760a:	mov    dl,0xa2
  42760c:	fild   QWORD PTR [ebx]
  42760e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42760f:	mov    ebx,0x914b1efb
  427614:	clc    
  427615:	ins    BYTE PTR es:[edi],dx
  427616:	in     eax,dx
  427617:	jo     0x42761d
  427619:	aas    
  42761a:	mov    cl,0x0
  42761c:	div    dh
  42761e:	(bad)  
  42761f:	or     DWORD PTR ds:0x593c1695,ebx
  427625:	pop    es
  427626:	jb     0x42761d
  427628:	or     bl,BYTE PTR [ebp+0x9]
  42762b:	push   ds
  42762c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42762d:	outs   dx,BYTE PTR ds:[esi]
  42762e:	adc    eax,DWORD PTR [edi-0x15]
  427631:	and    DWORD PTR [edi],ebp
  427633:	retf   0x5dd6
  427636:	xlat   BYTE PTR ds:[ebx]
  427637:	std    
  427638:	mov    BYTE PTR [edx+0x7e],cl
  42763b:	ror    BYTE PTR [edi],0x12
  42763e:	adc    bl,BYTE PTR [eax]
  427640:	pop    es
  427641:	enter  0xc8d2,0xd4
  427645:	scas   eax,DWORD PTR es:[edi]
  427646:	xor    DWORD PTR ss:[eax-0x797df213],0xffffffa3
  42764e:	mov    ds:0x2d1c1b5,al
  427653:	fwait
  427654:	addr16 rol bl,cl
  427657:	stos   DWORD PTR es:[edi],eax
  427658:	xchg   ebp,eax
  427659:	js     0x42765f
  42765b:	aas    
  42765c:	mov    edi,esi
  42765e:	aam    0xf0
  427660:	dec    esp
  427661:	lahf   
  427662:	pop    ebp
  427663:	and    DWORD PTR [ecx-0x31],eax
  427666:	mov    eax,0xee014145
  42766b:	push   0x43c7659f
  427670:	mov    esi,0xd4c4ab20
  427675:	aaa    
  427676:	(bad)  
  427678:	fsub   DWORD PTR [ebx+0x57ca9021]
  42767e:	int    0x74
  427680:	stos   BYTE PTR es:[edi],al
  427681:	and    al,0x29
  427683:	dec    eax
  427684:	(bad)  
  427685:	jmp    0x427650
  427687:	(bad)  
  427688:	push   cs
  427689:	lahf   
  42768a:	test   eax,0xcd4dd996
  42768f:	sub    DWORD PTR [ecx+0x1e58fd9c],esp
  427695:	jle    0x42765e
  427697:	cwde   
  427698:	(bad)  
  42769a:	shr    DWORD PTR [edx+0x1844b939],1
  4276a0:	dec    eax
  4276a1:	sub    BYTE PTR [ebp+0x44],dh
  4276a4:	inc    eax
  4276a5:	imul   ebp,DWORD PTR [esi],0xffffff8d
  4276a8:	add    BYTE PTR [ebx+esi*2-0x7a1b9652],ch
  4276af:	bound  ebp,QWORD PTR [edi+0x10ac9402]
  4276b5:	mov    DWORD PTR [ebp-0x1f],ebx
  4276b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276ba:	data16 sbb BYTE PTR [edx-0x45],bl
  4276be:	test   eax,0xa000000
  4276c3:	les    esp,FWORD PTR [ecx+0x5ef7eff7]
  4276c9:	std    
  4276ca:	mov    ebp,0xeff91c3b
  4276cf:	xchg   esp,eax
  4276d0:	mov    eax,0x1ef0653
  4276d5:	add    ch,dh
  4276d7:	add    al,0x0
  4276d9:	add    bh,dh
  4276db:	xchg   dl,ah
  4276dd:	repz aas 
  4276df:	loopne 0x427760
  4276e1:	fadd   DWORD PTR [eax+ebx*8]
  4276e4:	test   BYTE PTR [ecx+0x5563896d],ch
  4276ea:	cs jge 0x4276df
  4276ed:	pop    ss
  4276ee:	pop    eax
  4276ef:	ret    0xa4c6
  4276f2:	xlat   BYTE PTR ds:[ebx]
  4276f3:	int    0x46
  4276f5:	jnp    0x427688
  4276f7:	pop    es
  4276f8:	jo     0x427681
  4276fa:	sub    al,0x79
  4276fc:	or     cl,BYTE PTR ds:[ecx]
  4276ff:	and    dh,ch
  427701:	clc    
  427702:	aaa    
  427703:	mov    eax,0xe2e7fb9c
  427708:	add    ebp,DWORD PTR [ebp-0x4a]
  42770b:	in     eax,dx
  42770c:	jae    0x42769a
  42770e:	aaa    
  42770f:	shr    DWORD PTR [eax-0x3e2b5a8],0xcb
  427716:	jmp    FWORD PTR [ecx+0x5463beb2]
  42771c:	push   ds
  42771d:	xchg   edi,eax
  42771e:	cld    
  42771f:	outs   dx,BYTE PTR ds:[esi]
  427720:	sahf   
  427721:	std    
  427722:	add    esi,DWORD PTR [edx-0x4662d801]
  427728:	sti    
  427729:	jmp    0xc366:0x11252645
  427730:	aam    0x15
  427732:	xor    eax,0xb1a9a70c
  427737:	mov    bh,0xb6
  427739:	jns    0x42771e
  42773b:	pop    ecx
  42773c:	in     al,0xcd
  42773e:	stos   DWORD PTR es:[edi],eax
  42773f:	cdq    
  427740:	imul   ebx,edi,0xef7dc8ec
  427746:	pop    eax
  427747:	cmc    
  427748:	dec    DWORD PTR ss:0xd686c0a4
  42774f:	or     bh,BYTE PTR [ecx*8-0xf74323a]
  427756:	iret   
  427757:	cmp    al,0x88
  427759:	mov    ebx,0x88095791
  42775e:	mov    al,ds:0xce31f9cc
  427763:	sbb    al,0xdd
  427765:	cli    
  427766:	out    0xb9,eax
  427768:	into   
  427769:	fisttp WORD PTR [esi-0x6f]
  42776c:	adc    eax,0xfd4cf281
  427771:	stos   DWORD PTR es:[edi],eax
  427772:	xchg   BYTE PTR [eax],dl
  427774:	imul   edx,ebp,0x7efd07f6
  42777a:	cmp    DWORD PTR [ebp-0x3435453c],ebp
  427780:	(bad)  
  427782:	out    0x76,eax
  427784:	mov    ebx,0xae689152
  427789:	push   edx
  42778a:	sbb    cl,cl
  42778c:	pop    eax
  42778d:	cmp    DWORD PTR ds:0x5316a38c,esp
  427793:	mov    edx,0xa4e1cb2c
  427798:	mov    gs,WORD PTR [edi+ebx*1+0x504932bf]
  42779f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277a0:	es popf 
  4277a2:	jne    0x4277ca
  4277a4:	add    al,0xc9
  4277a6:	outs   dx,DWORD PTR ds:[esi]
  4277a7:	sar    BYTE PTR [eax+0x4d],1
  4277aa:	dec    eax
  4277ab:	hlt    
  4277ac:	xor    al,0xd
  4277ae:	pushf  
  4277af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277b0:	scas   al,BYTE PTR es:[edi]
  4277b1:	and    BYTE PTR [esi],cl
  4277b3:	sti    
  4277b4:	gs (bad) 
  4277b6:	xor    BYTE PTR [ebx],al
  4277b8:	mov    al,0xd2
  4277ba:	sub    dl,BYTE PTR [esi-0x4f]
  4277bd:	popa   
  4277be:	xor    eax,0x6a47af86
  4277c3:	clc    
  4277c4:	xor    BYTE PTR [ebx],ch
  4277c6:	repz inc ebp
  4277c8:	or     eax,0x77e108d5
  4277cd:	push   DWORD PTR [ebx]
  4277cf:	stos   BYTE PTR es:[edi],al
  4277d0:	inc    ecx
  4277d1:	xor    ch,bl
  4277d3:	sub    DWORD PTR [eax+ecx*1+0x4fa781fa],esi
  4277da:	push   ebp
  4277db:	inc    esi
  4277dc:	pop    eax
  4277dd:	jno    0x427784
  4277df:	scas   eax,DWORD PTR es:[edi]
  4277e0:	jge    0x427838
  4277e2:	mov    esi,0x51c8e89f
  4277e7:	mov    ds:0xec2c9fd7,eax
  4277ec:	sar    BYTE PTR [ebx+0x28],0x75
  4277f0:	(bad)  
  4277f1:	mov    eax,0xe2b4d4c1
  4277f6:	and    eax,0x245de528
  4277fb:	cld    
  4277fc:	das    
  4277fd:	test   dh,al
  4277ff:	jg     0x427850
  427801:	mov    esp,0x6aa23d67
  427806:	test   BYTE PTR [ecx+0x59],al
  427809:	push   cs
  42780a:	fistp  WORD PTR [esi+0x40]
  42780d:	sti    
  42780e:	lds    ebx,FWORD PTR ds:0x16d0ee96
  427814:	popf   
  427815:	mov    ecx,DWORD PTR [ebx+eiz*4-0xb69e0f5]
  42781c:	mov    esi,0xf913622d
  427821:	pop    edi
  427822:	push   esi
  427823:	shl    BYTE PTR [ebp-0x9],1
  427826:	je     0x427888
  427828:	push   ss
  427829:	push   ds
  42782a:	xor    edx,esp
  42782c:	pop    edi
  42782d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42782e:	add    bh,bh
  427830:	hlt    
  427831:	jns    0x42787d
  427833:	xor    cl,BYTE PTR [ebp+0xa]
  427836:	adc    bl,BYTE PTR [edx+edx*1-0x69e5600e]
  42783d:	sbb    ebp,0x1bbe65a
  427843:	sbb    eax,0x2412516d
  427848:	sahf   
  427849:	data16 or al,0x8
  42784c:	mov    cl,0xb2
  42784e:	push   ebx
  42784f:	sahf   
  427850:	loope  0x427870
  427852:	push   es
  427853:	out    dx,al
  427854:	into   
  427855:	and    cl,BYTE PTR [ebx-0x76]
  427858:	jl     0x427869
  42785a:	push   edi
  42785b:	gs in  eax,dx
  42785d:	fistp  DWORD PTR [edi-0x1e]
  427860:	sub    al,dh
  427862:	jnp    0x4278c8
  427864:	out    0x5e,al
  427866:	and    edx,esi
  427868:	sub    al,0x24
  42786a:	(bad)  
  42786b:	outs   dx,BYTE PTR ds:[esi]
  42786c:	mov    ch,0xa9
  42786e:	push   ebp
  42786f:	xchg   BYTE PTR [esi+0x3],cl
  427872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427873:	jbe    0x4277f8
  427875:	nop
  427876:	mov    ?,ecx
  427878:	in     eax,0xb7
  42787a:	push   ebp
  42787b:	lods   eax,DWORD PTR ds:[esi]
  42787c:	mov    DWORD PTR [ebx+0x4e],edi
  42787f:	xchg   ecx,eax
  427880:	int    0x22
  427882:	shl    BYTE PTR [edx],cl
  427884:	cmp    eax,0xbaf4cda3
  427889:	sbb    esi,DWORD PTR [esi-0x39f0b3ab]
  42788f:	mov    ebx,0x601dfe7
  427894:	mov    ecx,0x1e3097d6
  427899:	out    0xe5,al
  42789b:	in     al,0x30
  42789d:	adc    BYTE PTR [eax],cl
  42789f:	xchg   edi,eax
  4278a0:	xchg   ebx,eax
  4278a1:	or     bl,dl
  4278a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278a4:	inc    esp
  4278a5:	je     0x427844
  4278a7:	sub    eax,0x9ce83b4a
  4278ac:	sub    DWORD PTR [eax],0x1436c4d5
  4278b2:	call   0x905:0x17e28eb7
  4278b9:	out    0xfd,al
  4278bb:	call   0xf23a:0x47f630a9
  4278c2:	push   edi
  4278c3:	sub    DWORD PTR [edi],esp
  4278c5:	bound  esp,QWORD PTR [edx]
  4278c7:	sti    
  4278c8:	jle    0x42784a
  4278ca:	int    0xbf
  4278cc:	sub    eax,0xa9b08200
  4278d1:	aad    0x4f
  4278d3:	lea    edi,[ecx+0x50355642]
  4278d9:	popf   
  4278da:	cmp    esp,DWORD PTR [ebp+0x79c9c9d2]
  4278e0:	xor    DWORD PTR [edx+0x25],ebp
  4278e3:	test   ecx,edx
  4278e5:	pop    ebx
  4278e6:	ror    DWORD PTR [edi-0x598e0d95],cl
  4278ec:	mov    bl,0x82
  4278ee:	retf   0xfe64
  4278f1:	fldenv [ecx-0x67035848]
  4278f7:	cld    
  4278f8:	fs call 0x51589bf8
  4278fe:	push   edi
  4278ff:	outs   dx,DWORD PTR ds:[esi]
  427900:	pop    ecx
  427901:	aaa    
  427902:	xchg   esi,eax
  427903:	adc    eax,0xc5a4d140
  427908:	repnz stc 
  42790a:	and    al,0xdf
  42790c:	mov    al,bh
  42790e:	jbe    0x427896
  427910:	stc    
  427911:	bound  ebp,QWORD PTR [ebp+0x3b]
  427914:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  427916:	ins    DWORD PTR es:[edi],dx
  427917:	cmc    
  427918:	ret    0xfd4b
  42791b:	inc    esp
  42791c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42791d:	aad    0x32
  42791f:	mov    eax,ds:0xca04561
  427924:	imul   edi,DWORD PTR [esi+eax*1-0x63],0x166e4af9
  42792c:	test   BYTE PTR [edx+eax*1],bl
  42792f:	in     eax,0x3f
  427931:	ror    DWORD PTR [ebp-0x74baf91d],cl
  427937:	and    eax,DWORD PTR [edx+0x59132c53]
  42793d:	and    ecx,edx
  42793f:	xchg   edx,eax
  427940:	jmp    0x720ab1cb
  427945:	pop    ebp
  427946:	dec    edi
  427947:	or     ecx,0x58
  42794a:	push   ss
  42794b:	retf   
  42794c:	lock jmp 0x427988
  42794f:	jle    0x42791e
  427951:	sub    bh,BYTE PTR [edx+ecx*4]
  427954:	aaa    
  427955:	jns    0x4279a3
  427957:	and    eax,0xf2cc4944
  42795c:	fild   QWORD PTR [esp+edx*8-0x38]
  427960:	jo     0x427920
  427962:	mov    ds:0x5131fc2f,eax
  427967:	mov    ds:0x18ad8575,al
  42796c:	push   ebp
  42796d:	and    DWORD PTR ds:0x9f1a8c3f,edi
  427973:	push   ebx
  427974:	fisub  DWORD PTR [edi]
  427976:	and    BYTE PTR [ecx+0x10],cl
  427979:	mov    eax,0x8e5d801a
  42797e:	push   eax
  42797f:	enter  0xd381,0x1a
  427983:	retf   
  427984:	or     DWORD PTR [ebx-0x34c3b205],0xcc8f59e7
  42798e:	jecxz  0x427a01
  427990:	mov    esi,0x86142832
  427995:	fcom   DWORD PTR [ebx-0x107f1665]
  42799b:	retf   0x3bac
  42799e:	les    esi,FWORD PTR [ebx]
  4279a0:	pusha  
  4279a1:	jmp    0x6fe8cc7d
  4279a6:	add    eax,0xbf5b2115
  4279ab:	lahf   
  4279ac:	jb     0x4279b3
  4279ae:	outs   dx,DWORD PTR ds:[esi]
  4279af:	call   0x30c43051
  4279b4:	aam    0x2a
  4279b6:	lock loop 0x4279f4
  4279b9:	cmp    bl,BYTE PTR [edi]
  4279bb:	dec    ebp
  4279bc:	sbb    al,0x7f
  4279be:	jno    0x42799c
  4279c0:	adc    DWORD PTR [esi-0x5932151a],eax
  4279c6:	jno    0x427a08
  4279c8:	test   ebx,ebp
  4279ca:	arpl   WORD PTR [eax],dx
  4279cc:	sti    
  4279cd:	std    
  4279ce:	mov    dl,0x20
  4279d0:	mov    eax,ds:0xfd8eeeed
  4279d5:	xchg   ebp,eax
  4279d6:	add    eax,0x3a142ede
  4279db:	cmp    al,0x39
  4279dd:	data16 mov cl,0xc8
  4279e0:	mov    bl,0x94
  4279e2:	test   DWORD PTR [ecx+0x40],esi
  4279e5:	(bad)  
  4279e6:	jne    0x427a03
  4279e8:	and    esp,esi
  4279ea:	retf   0xaff2
  4279ed:	adc    al,0x95
  4279ef:	adc    al,0x9d
  4279f1:	sub    al,0x2c
  4279f3:	fmul   QWORD PTR [edi]
  4279f5:	fist   DWORD PTR [edi]
  4279f7:	retf   
  4279f8:	cmc    
  4279f9:	and    esp,DWORD PTR [edi-0x76]
  4279fc:	ror    BYTE PTR [ecx-0x74],0xba
  427a00:	dec    eax
  427a01:	pop    es
  427a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a03:	dec    edi
  427a04:	lods   eax,DWORD PTR ds:[esi]
  427a05:	clc    
  427a06:	jg     0x427a66
  427a08:	iret   
  427a09:	xor    al,0x6d
  427a0b:	rcl    BYTE PTR [edi+eiz*4+0x44],0x9e
  427a10:	loop   0x427a6a
  427a12:	loop   0x42799f
  427a14:	in     al,0xb1
  427a16:	clc    
  427a17:	ret    
  427a18:	fs pop ebp
  427a1a:	loope  0x427a64
  427a1c:	iret   
  427a1d:	ror    BYTE PTR [edx-0x71],cl
  427a20:	push   eax
  427a21:	test   eax,0x6b0c1f1a
  427a26:	lahf   
  427a27:	mov    cl,0x91
  427a29:	jb     0x427a5a
  427a2b:	(bad)  
  427a2c:	aam    0xf0
  427a2e:	shr    BYTE PTR [edi],0x2
  427a31:	mov    dl,0x1f
  427a33:	rcl    BYTE PTR [eax+0x12],1
  427a36:	popf   
  427a37:	imul   esi,edi,0xffffffae
  427a3a:	pop    ecx
  427a3b:	sbb    DWORD PTR [esi+0x699b549c],ebp
  427a41:	and    eax,DWORD PTR [ecx]
  427a43:	je     0x4279e3
  427a45:	sub    DWORD PTR ds:0xcc5f0c5a,ecx
  427a4b:	push   ebp
  427a4c:	dec    ebx
  427a4d:	push   edx
  427a4e:	into   
  427a4f:	data16 mov ah,dl
  427a52:	add    eax,0x24835175
  427a57:	in     al,0xc3
  427a59:	inc    ebp
  427a5a:	cld    
  427a5b:	cmp    DWORD PTR [esi+0x69],0x6120bc7e
  427a62:	jp     0x427a4a
  427a64:	and    BYTE PTR [edi+0x6f7929b7],bh
  427a6a:	popf   
  427a6b:	or     bl,BYTE PTR [esi+0x2808dea9]
  427a71:	sub    eax,0xdd848d51
  427a76:	jno    0xc178fbc
  427a7c:	push   0xf2318a3d
  427a81:	js     0x427a49
  427a83:	adc    eax,0x97c993f
  427a88:	repnz sbb dl,BYTE PTR [ecx+0x43604007]
  427a8f:	push   ecx
  427a90:	pop    ecx
  427a91:	jge    0x427a9e
  427a93:	and    BYTE PTR [edi-0x32],0x13
  427a97:	cdq    
  427a98:	inc    ecx
  427a99:	dec    esi
  427a9a:	dec    edi
  427a9b:	iret   
  427a9c:	mov    dh,BYTE PTR [edi+0x77]
  427a9f:	int    0x3a
  427aa1:	mov    dh,0x41
  427aa4:	data16 stc 
  427aa6:	pop    ebp
  427aa7:	or     eax,DWORD PTR [ebx]
  427aa9:	aad    0x0
  427aab:	adc    BYTE PTR [edx],0x7
  427aae:	mov    al,0x42
  427ab0:	les    ebx,FWORD PTR [esi-0x134ee52f]
  427ab6:	jb     0x427b0b
  427ab8:	call   0x303b:0x7eaf3cc2
  427abf:	ins    DWORD PTR es:[edi],dx
  427ac0:	js     0x427a99
  427ac2:	lds    eax,FWORD PTR [esi+0x49df7c6b]
  427ac8:	stos   BYTE PTR es:[edi],al
  427ac9:	pop    es
  427aca:	or     bl,0xe9
  427acd:	dec    BYTE PTR ds:0xd6a00d0e
  427ad3:	xor    al,BYTE PTR [eax]
  427ad5:	push   0x8c80450e
  427ada:	xor    ch,cl
  427adc:	and    bh,BYTE PTR [esp+ebp*1]
  427adf:	mov    fs,esp
  427ae1:	rol    BYTE PTR [ebp-0x7f],0x72
  427ae5:	loop   0x427a75
  427ae7:	or     al,0x33
  427ae9:	mov    WORD PTR [ebx],?
  427aeb:	jae    0x427b31
  427aed:	pushf  
  427aee:	jb     0x427b0b
  427af0:	inc    edx
  427af1:	mov    edi,0x99f15668
  427af6:	cmc    
  427af7:	or     DWORD PTR [edi],0xffffffc2
  427afa:	mov    BYTE PTR ds:0xb855a589,cl
  427b00:	sub    DWORD PTR [ebp+0x54],esi
  427b03:	test   al,0x96
  427b05:	fdivr  DWORD PTR [ecx]
  427b07:	mov    esi,0x7e09fe40
  427b0c:	cdq    
  427b0d:	push   esi
  427b0e:	or     al,ah
  427b10:	xchg   BYTE PTR [ebx+0x17],bh
  427b13:	mov    ebp,DWORD PTR ss:[ebx+0x19]
  427b17:	lea    edi,[ecx+0x22a3145a]
  427b1d:	mov    BYTE PTR [edi+0x12482b79],dh
  427b23:	pop    ss
  427b24:	repz mov dh,BYTE PTR [esi+0x5c929e0f]
  427b2b:	cld    
  427b2c:	or     ch,0xcc
  427b2f:	cmp    bh,BYTE PTR gs:[esi-0x17]
  427b33:	sub    al,0x14
  427b35:	shl    DWORD PTR [edx+ebp*2+0x1252c732],1
  427b3c:	clc    
  427b3d:	cmp    BYTE PTR [eax+eiz*4-0x55a9fd97],dh
  427b44:	test   edx,edi
  427b46:	test   BYTE PTR [edi+0x73],ah
  427b49:	mov    DWORD PTR [edx],edx
  427b4b:	iret   
  427b4c:	mov    esp,0xdc78c4b5
  427b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b52:	outs   dx,DWORD PTR ds:[esi]
  427b53:	in     eax,0xd6
  427b55:	mov    ebx,0xf571e25e
  427b5a:	aam    0xcf
  427b5c:	cmp    al,0xe9
  427b5e:	mul    BYTE PTR [ecx-0x63]
  427b61:	pop    ebx
  427b62:	es gs sub eax,0xc4900432
  427b69:	inc    eax
  427b6a:	imul   eax,DWORD PTR [ecx],0x6998f11
  427b70:	adc    eax,0x7847f789
  427b75:	mov    al,ds:0xfee7cd3
  427b7a:	jl     0x427b84
  427b7c:	mov    edi,0x70d7b502
  427b81:	ret    0x2501
  427b84:	mov    WORD PTR [edx+0x76],cs
  427b87:	push   0x9ef7fe6
  427b8c:	into   
  427b8d:	add    eax,0x31c965e1
  427b92:	mov    DWORD PTR es:[ebp+0x3e12ea63],0xbddfedef
  427b9d:	mov    edx,0x615e390a
  427ba2:	dec    edi
  427ba3:	dec    esp
  427ba4:	inc    edx
  427ba5:	or     eax,0x3853712b
  427baa:	xchg   esp,eax
  427bab:	mov    esi,edi
  427bad:	not    eax
  427baf:	mov    al,ds:0x8043b4e
  427bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bb5:	mov    esp,DWORD PTR [edi+0x6f619b31]
  427bbb:	xor    BYTE PTR [edx],0xa6
  427bbe:	sti    
  427bbf:	imul   ebx,ebp,0x9fabbe09
  427bc5:	div    DWORD PTR [ebp+0x25018346]
  427bcb:	call   0xdf267f
  427bd0:	add    BYTE PTR [eax],al
  427bd2:	ja     0x427bca
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0xb1ebe2d0
  427be0:	adc    dh,al
  427be2:	sti    
  427be3:	repz add DWORD PTR [eax],eax
  427be6:	cmc    
  427be7:	add    al,0x0
  427be9:	add    BYTE PTR [edi+0x4200ada7],ch
  427bef:	out    0x5f,eax
  427bf1:	dec    esi
  427bf2:	dec    ebx
  427bf3:	es xor al,0x22
  427bf6:	pop    edx
  427bf7:	adc    DWORD PTR [eax],eax
  427bf9:	lea    edi,[edx]
  427bfb:	mov    dh,0xcb
  427bfd:	jge    0x427c6d
  427bff:	jns    0x427c5d
  427c01:	add    BYTE PTR [esi],al
  427c03:	push   ecx
  427c04:	pop    edx
  427c05:	or     ah,BYTE PTR [edi]
  427c07:	push   eax
  427c08:	or     edx,DWORD PTR [ecx+0x49897c2c]
  427c0e:	pop    es
  427c0f:	add    eax,0x9e0d032e
  427c14:	mov    esi,0xf0dda07b
  427c19:	cwde   
  427c1a:	shr    DWORD PTR [eax+0xb29082c],cl
  427c20:	sub    bh,BYTE PTR [ebp-0x7c9197c]
  427c26:	xchg   dh,ch
  427c28:	and    BYTE PTR [edx],0xa4
  427c2b:	add    eax,0x8b2023d3
  427c30:	lods   eax,DWORD PTR ds:[esi]
  427c31:	mov    BYTE PTR [edi+0x32],ah
  427c34:	push   es
  427c35:	in     al,0x36
  427c37:	xchg   ebx,eax
  427c38:	lods   al,BYTE PTR ds:[esi]
  427c39:	dec    esi
  427c3a:	cmp    DWORD PTR [edx+0x68],0x74
  427c3e:	cmp    al,0x6f
  427c40:	lahf   
  427c41:	dec    edx
  427c42:	adc    DWORD PTR [esi-0x7e18f7a4],ebp
  427c48:	in     al,0x48
  427c4a:	(bad)  
  427c4b:	xor    edi,DWORD PTR [ebx+ecx*2-0x5410a3fe]
  427c52:	cdq    
  427c53:	idiv   al
  427c55:	add    al,0xad
  427c57:	push   0xd3f4c004
  427c5c:	sti    
  427c5d:	js     0x427c6a
  427c5f:	ins    DWORD PTR es:[edi],dx
  427c60:	dec    ebp
  427c61:	das    
  427c62:	pop    ebp
  427c63:	dec    esi
  427c64:	(bad)  
  427c66:	out    dx,eax
  427c67:	lock xor eax,0x8e626837
  427c6d:	jp     0x427c0e
  427c6f:	retf   0x1e84
  427c72:	jnp    0x427cea
  427c74:	and    DWORD PTR [ebx-0x10e08cb3],ebp
  427c7a:	repz test BYTE PTR ds:0x63e68740,ah
  427c81:	and    BYTE PTR [ebp-0x2e],dh
  427c84:	rcl    ch,0xe4
  427c87:	mov    esi,0xaaa805bf
  427c8c:	retf   0xa6f4
  427c8f:	call   0x73f6:0xedc298fa
  427c96:	stos   BYTE PTR es:[edi],al
  427c97:	ds dec esi
  427c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c9a:	or     dh,BYTE PTR [ebp+0x1f]
  427c9d:	and    bh,BYTE PTR [edi+edx*8-0x255498a4]
  427ca4:	or     BYTE PTR [edi+0x715ce317],0x8e
  427cab:	mul    ecx
  427cad:	jb     0x427cff
  427caf:	pop    esp
  427cb0:	cmp    esi,DWORD PTR [eax]
  427cb2:	push   esi
  427cb3:	pop    ss
  427cb4:	fnstenv [ecx+0x30]
  427cb7:	dec    eax
  427cb8:	shr    BYTE PTR [esi+esi*8-0x1c648cc4],1
  427cbf:	mov    DWORD PTR [ebx-0x46],0xd468af23
  427cc6:	add    eax,0xce955586
  427ccb:	add    eax,0x7ebf3be7
  427cd0:	imul   esi,eax,0x62
  427cd3:	mov    esp,0x110368a4
  427cd8:	nop
  427cd9:	retf   0xddd8
  427cdc:	sub    eax,0xd4f61986
  427ce1:	cld    
  427ce2:	enter  0x3cf3,0xfe
  427ce6:	jecxz  0x427cc7
  427ce8:	mov    ah,BYTE PTR [bp-0x2cd4]
  427ced:	iret   
  427cee:	push   edx
  427cef:	inc    esp
  427cf0:	repz xor al,0x3
  427cf3:	rcl    BYTE PTR [ecx+0x5b],0x64
  427cf7:	adc    BYTE PTR [esi-0x25],bl
  427cfa:	test   DWORD PTR [ecx],esi
  427cfc:	in     al,0x9d
  427cfe:	pop    ebx
  427cff:	shr    bl,0xd4
  427d02:	adc    al,0xc6
  427d04:	mov    edi,0x818dd3e0
  427d09:	cmp    al,0x43
  427d0b:	loopne 0x427d3d
  427d0d:	je     0x427cd0
  427d0f:	fidivr WORD PTR [ecx*8+0x6c9c8ac2]
  427d16:	jg     0x427d3f
  427d18:	js     0x427cb3
  427d1a:	punpcklbw mm2,DWORD PTR [ebp+0x4a]
  427d1e:	jo     0x427cea
  427d20:	enter  0xdd04,0x40
  427d24:	pop    ebx
  427d25:	pop    esi
  427d26:	hlt    
  427d27:	data16 jo 0x427d40
  427d2a:	push   eax
  427d2b:	pop    es
  427d2c:	and    eax,0xe261ada1
  427d31:	pcmpeqw mm3,QWORD PTR [edx+0x5f1fffca]
  427d38:	xchg   ebx,eax
  427d39:	in     al,dx
  427d3a:	mov    ebp,0xed1696dc
  427d3f:	mov    edx,0xeb13e26c
  427d44:	outs   dx,DWORD PTR ds:[esi]
  427d45:	adc    al,0x48
  427d47:	cwde   
  427d48:	mov    eax,edi
  427d4a:	mov    dh,0x39
  427d4c:	imul   eax,esp,0xffffff95
  427d4f:	sbb    al,0x7e
  427d51:	bound  ebx,QWORD PTR [ecx+0x5a]
  427d54:	pop    ss
  427d55:	xor    ecx,eax
  427d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d58:	and    bh,BYTE PTR [edx+esi*8+0x5]
  427d5c:	mov    ebx,0x397a818d
  427d61:	push   ss
  427d62:	adc    al,0x33
  427d64:	iret   
  427d65:	pop    ds
  427d66:	fadd   QWORD PTR [ecx+0x2a]
  427d69:	stos   BYTE PTR es:[edi],al
  427d6a:	cmp    ecx,DWORD PTR ds:[ebp+0x6c]
  427d6e:	icebp  
  427d6f:	imul   ebp,DWORD PTR [eax+0x1cf71a17],0x37
  427d76:	jl     0x427d65
  427d78:	nop
  427d79:	and    ah,bh
  427d7b:	xor    DWORD PTR [ecx+0x5326bb0e],ebx
  427d81:	fiadd  WORD PTR [edx+ebx*4-0x2491eac9]
  427d88:	dec    esi
  427d89:	and    DWORD PTR [ebx],edx
  427d8b:	loopne 0x427d46
  427d8d:	jnp    0x427d76
  427d8f:	es cmp ah,dh
  427d92:	fld    DWORD PTR [esi-0x707be6bf]
  427d98:	cs push ds
  427d9a:	mov    esi,0x3e3d3d3e
  427d9f:	js     0x427d70
  427da1:	sbb    edi,DWORD PTR [edx]
  427da3:	(bad)
  427da6:	(bad)  
  427da7:	(bad)  
  427da8:	mov    al,ds:0x61a67c7c
  427dad:	scas   al,BYTE PTR es:[edi]
  427dae:	and    DWORD PTR ds:0x2e41bc05,ebp
  427db4:	cmp    eax,0xe0e15920
  427db9:	xor    DWORD PTR [edi],edx
  427dbb:	xchg   ebp,eax
  427dbc:	cwde   
  427dbd:	inc    ecx
  427dbe:	pop    esi
  427dbf:	out    dx,eax
  427dc0:	scas   al,BYTE PTR es:[edi]
  427dc1:	mov    bh,dl
  427dc3:	dec    edx
  427dc4:	in     al,dx
  427dc5:	sbb    eax,DWORD PTR [eax-0x7c]
  427dc8:	mov    esp,0x15b06500
  427dcd:	stc    
  427dce:	pop    esi
  427dcf:	and    eax,ebp
  427dd1:	cli    
  427dd2:	sti    
  427dd3:	enter  0x3b41,0x95
  427dd7:	stos   BYTE PTR es:[edi],al
  427dd8:	push   cs
  427dd9:	and    ch,ch
  427ddb:	inc    eax
  427ddc:	scas   eax,DWORD PTR es:[edi]
  427ddd:	xor    cl,BYTE PTR [ebp-0x15]
  427de0:	cdq    
  427de1:	and    al,0x15
  427de3:	xchg   edx,eax
  427de4:	jb     0x427da7
  427de6:	sahf   
  427de7:	call   0x4675bdb8
  427dec:	fwait
  427ded:	cmp    dh,al
  427def:	push   eax
  427df0:	adc    ebx,ecx
  427df2:	jle    0x427dc6
  427df4:	add    eax,0x7f91da8b
  427df9:	retf   
  427dfa:	stos   BYTE PTR es:[edi],al
  427dfb:	or     cl,BYTE PTR [esp+0x77]
  427dff:	dec    eax
  427e00:	cmp    al,0x78
  427e02:	jne    0x427e2e
  427e04:	retf   
  427e05:	dec    ebp
  427e06:	push   edx
  427e07:	int    0xf0
  427e09:	adc    BYTE PTR [edx-0x6d6b55c1],bl
  427e0f:	fild   QWORD PTR [edx-0x292a6de3]
  427e15:	pusha  
  427e16:	fild   QWORD PTR [edx]
  427e18:	jmp    0x427e19
  427e1a:	and    ecx,esi
  427e1c:	sub    al,0x86
  427e1e:	jmp    0x114cf68e
  427e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e24:	mov    edx,0xdc3d1cee
  427e29:	xor    DWORD PTR [edi+edi*8-0xa],esp
  427e2d:	hlt    
  427e2e:	adc    edx,DWORD PTR [ebx-0x763cc589]
  427e34:	lock jge 0x427e8f
  427e37:	sub    dh,0xf1
  427e3a:	push   eax
  427e3b:	add    al,0x45
  427e3d:	pop    ds
  427e3e:	lds    ecx,FWORD PTR [edx+0x9]
  427e41:	int    0xfc
  427e43:	fsqrt  
  427e45:	mov    BYTE PTR [edi+0x4f30a48a],ah
  427e4b:	cdq    
  427e4c:	jo     0x427e83
  427e4e:	jb     0x427e6c
  427e50:	jno    0x427e7b
  427e52:	xor    dl,BYTE PTR [esi]
  427e54:	xor    al,0xfd
  427e56:	mov    esi,0xaa6149de
  427e5b:	imul   eax,DWORD PTR [eax+eiz*1+0xc],0xc9ebd895
  427e63:	jecxz  0x427e11
  427e65:	icebp  
  427e66:	stc    
  427e67:	mov    esi,0xe36d6226
  427e6c:	xchg   esp,eax
  427e6d:	jecxz  0x427e14
  427e6f:	loop   0x427e05
  427e71:	push   edx
  427e72:	inc    ecx
  427e73:	jmp    0x427ed8
  427e75:	(bad)  
  427e76:	cmc    
  427e77:	add    al,0xd4
  427e79:	scas   eax,DWORD PTR es:[edi]
  427e7a:	mov    ecx,DWORD PTR [ebp+0x25]
  427e7d:	stos   DWORD PTR es:[edi],eax
  427e7e:	push   edx
  427e7f:	xchg   esp,eax
  427e80:	xor    BYTE PTR [edi],cl
  427e82:	sbb    DWORD PTR [esi+0x78cbcd7a],esi
  427e88:	enter  0x5ad9,0xbb
  427e8c:	xchg   ecx,eax
  427e8d:	xor    DWORD PTR [esi-0x79869a95],ebp
  427e93:	pop    ss
  427e94:	cmp    ebx,DWORD PTR [edx]
  427e96:	fisttp QWORD PTR [ecx]
  427e98:	addr16 aas 
  427e9a:	cmp    eax,0xb3dd52d8
  427e9f:	sub    cl,dl
  427ea1:	and    esi,0xffffff96
  427ea4:	push   cs
  427ea5:	ss mov eax,0xb33ca6a8
  427eab:	scas   al,BYTE PTR es:[edi]
  427eac:	pop    ebx
  427ead:	jbe    0x427ed3
  427eaf:	in     eax,0x3a
  427eb1:	test   dh,cl
  427eb3:	push   ss
  427eb4:	fwait
  427eb5:	rol    BYTE PTR [esi+0x6fb010dd],1
  427ebb:	aam    0x4a
  427ebd:	inc    esp
  427ebe:	jno    0x427e49
  427ec0:	inc    eax
  427ec1:	push   esi
  427ec2:	cwde   
  427ec3:	inc    ebx
  427ec4:	in     eax,dx
  427ec5:	bound  esp,QWORD PTR [edi-0x4c]
  427ec8:	or     eax,0x69780065
  427ecd:	pop    edi
  427ece:	sbb    BYTE PTR [edi+0x353e2e0d],0xd6
  427ed5:	cmp    eax,0x412e614b
  427eda:	inc    edi
  427edb:	arpl   WORD PTR [ebx+0x5],bx
  427ede:	inc    ebp
  427edf:	(bad)  
  427ee0:	mov    ds:0x616449b8,al
  427ee5:	(bad)  [ebx]
  427ee7:	ss push 0xfffffffe
  427eea:	adc    ecx,esi
  427eec:	cwde   
  427eed:	sbb    DWORD PTR [ebx+0x1a],edx
  427ef0:	xchg   esp,eax
  427ef1:	ret    0xc2d9
  427ef4:	push   ebp
  427ef5:	xchg   esp,eax
  427ef6:	mov    edi,0xa8745e5f
  427efb:	idiv   bl
  427efd:	or     dl,bl
  427eff:	mov    ebx,DWORD PTR [edx+eax*8+0x70]
  427f03:	mov    WORD PTR [ebx+0x1c],ds
  427f06:	ins    DWORD PTR es:[edi],dx
  427f07:	jp     0x427f40
  427f09:	xchg   edi,eax
  427f0a:	call   0x1ccf:0xdd26f616
  427f11:	ror    DWORD PTR [eax+ebx*2-0x2d],1
  427f15:	mov    eax,ds:0xc69f2e65
  427f1a:	cmp    BYTE PTR [edx+0x7e081e0b],dl
  427f20:	push   edx
  427f21:	scas   al,BYTE PTR es:[edi]
  427f22:	popa   
  427f23:	ror    DWORD PTR [eax],1
  427f25:	es jo  0x427f93
  427f28:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f2a:	std    
  427f2b:	jnp    0x427eef
  427f2d:	sbb    bl,ah
  427f2f:	popf   
  427f30:	jp     0x427f46
  427f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f33:	jmp    0x427fab
  427f35:	add    al,0x67
  427f38:	push   edi
  427f39:	sbb    dh,BYTE PTR gs:[ecx]
  427f3c:	mov    ebp,0x4eb9c0f7
  427f41:	lock mov al,ds:0x1df85b
  427f47:	int3   
  427f48:	outs   dx,BYTE PTR ds:[esi]
  427f49:	xchg   dl,al
  427f4b:	pop    edx
  427f4c:	push   0x38851687
  427f51:	(bad)  
  427f52:	pop    edi
  427f53:	sbb    eax,0x13d82d87
  427f58:	jne    0x427f6b
  427f5a:	and    DWORD PTR [esi+0x3f],ebp
  427f5d:	sub    al,0x4a
  427f5f:	mov    ds:0xc28692a,al
  427f64:	rcr    dh,1
  427f66:	das    
  427f67:	inc    ebx
  427f68:	dec    ebx
  427f69:	mov    edx,0x4258fbe8
  427f6e:	outs   dx,DWORD PTR ds:[esi]
  427f6f:	js     0x427fcf
  427f71:	add    ebx,DWORD PTR [eax]
  427f73:	xchg   ebx,eax
  427f74:	cli    
  427f75:	es fwait
  427f77:	pop    edi
  427f78:	inc    eax
  427f79:	adc    DWORD PTR [ebp-0x54e78389],esp
  427f7f:	and    edx,esp
  427f81:	repz mov ecx,DWORD PTR [eax]
  427f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f85:	and    bh,BYTE PTR [eax]
  427f87:	cld    
  427f88:	dec    eax
  427f89:	jb     0x427fca
  427f8b:	jecxz  0x427f47
  427f8d:	push   0x46
  427f8f:	pop    edi
  427f90:	mov    cl,0xc2
  427f92:	add    esi,DWORD PTR [ebx-0x43ab0cc3]
  427f98:	les    edi,FWORD PTR [edx+eax*4]
  427f9b:	add    al,0x22
  427f9d:	jp     0x427fa8
  427f9f:	jns    0x427fa4
  427fa1:	mov    eax,ds:0xced3937a
  427fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fa7:	or     ch,BYTE PTR [eax-0x75293a9b]
  427fad:	inc    edi
  427fae:	cwde   
  427faf:	pop    esi
  427fb0:	pop    edi
  427fb1:	cs mov edi,0xbe5896b5
  427fb7:	into   
  427fb8:	jbe    0x427f78
  427fba:	inc    ecx
  427fbc:	push   ebx
  427fbd:	jg     0x427ffc
  427fbf:	out    0x65,eax
  427fc1:	jne    0x42803c
  427fc3:	shr    DWORD PTR [edx-0x5fa61339],0x7c
  427fca:	or     esp,DWORD PTR ds:0xde04ff08
  427fd0:	rcr    BYTE PTR [esi+0xc6fdb39],cl
  427fd6:	inc    edi
  427fd7:	pushf  
  427fd8:	xor    DWORD PTR [eax+ecx*8],edx
  427fdb:	dec    ebx
  427fdc:	in     eax,dx
  427fdd:	inc    ecx
  427fde:	das    
  427fdf:	pop    ebp
  427fe0:	and    ecx,eax
  427fe2:	mov    eax,0x41087852
  427fe7:	xor    BYTE PTR [ecx+ebp*2],ch
  427fea:	xchg   esp,eax
  427feb:	sub    BYTE PTR [ecx-0xa],dh
  427fee:	xor    bh,BYTE PTR [esi]
  427ff0:	push   edx
  427ff1:	cld    
  427ff2:	repz loopne 0x428050
  427ff5:	scas   al,BYTE PTR es:[edi]
  427ff6:	xchg   DWORD PTR [edx-0x37d05848],edi
  427ffc:	(bad)  
  427ffe:	in     eax,0x58
  428000:	loopne 0x427ffe
  428002:	aad    0x53
  428004:	mov    esp,0xf3cf9ba0
  428009:	aaa    
  42800a:	sar    DWORD PTR [edx+0x72],cl
  42800d:	cwde   
  42800e:	loop   0x427fd2
  428010:	stos   BYTE PTR es:[edi],al
  428011:	in     al,dx
  428012:	pop    ecx
  428013:	and    DWORD PTR [edi],eax
  428015:	retf   0xcb40
  428018:	xor    BYTE PTR [edi],al
  42801a:	jecxz  0x427fe6
  42801c:	xchg   BYTE PTR [eax-0x4e52cc98],bl
  428022:	das    
  428023:	jno    0x428064
  428025:	add    cl,BYTE PTR [eax-0x5]
  428028:	(bad)  
  428029:	jmp    0x427fe2
  42802b:	pop    ss
  42802c:	out    0xdd,al
  42802e:	bsr    eax,DWORD PTR [ebp+0x38]
  428032:	into   
  428033:	xor    ecx,DWORD PTR [edx]
  428035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428036:	dec    eax
  428037:	int3   
  428038:	sub    DWORD PTR [edi],esp
  42803a:	test   eax,0x7a0c20c7
  42803f:	rol    DWORD PTR [esi+edx*8],cl
  428042:	sub    al,0x67
  428044:	popa   
  428045:	mov    ecx,ss
  428047:	mov    bh,0x57
  428049:	ss push esi
  42804b:	pop    es
  42804c:	in     eax,dx
  42804d:	sbb    cl,0xc7
  428050:	imul   eax,DWORD PTR [edi],0xffffffc1
  428053:	push   eax
  428054:	ins    DWORD PTR es:[edi],dx
  428055:	jecxz  0x428070
  428057:	out    0x35,eax
  428059:	(bad)  
  42805a:	xor    DWORD PTR [edi+0x9c449af],ecx
  428060:	mov    eax,ds:0x60b953d5
  428065:	leave  
  428066:	cmp    BYTE PTR [esi+0x57],dh
  428069:	or     ebx,DWORD PTR [ebp-0x54550cde]
  42806f:	aas    
  428070:	add    ecx,ebx
  428072:	enter  0x7772,0x19
  428076:	adc    edi,DWORD PTR [ebp+ecx*2-0x41]
  42807a:	or     al,0x62
  42807c:	add    DWORD PTR [edi],esi
  42807e:	or     BYTE PTR [edi+0xbadb824],al
  428084:	adc    bl,ch
  428086:	jne    0x4280c5
  428088:	sub    DWORD PTR [edi],0xffffffee
  42808b:	cmp    eax,DWORD PTR [ecx]
  42808d:	and    al,0x98
  42808f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428090:	repnz out 0xe5,eax
  428093:	in     eax,0xd3
  428095:	fwait
  428096:	adc    esp,DWORD PTR [eax]
  428098:	mov    ds:0xdc5b3e4a,al
  42809d:	rcl    eax,0x2a
  4280a0:	or     BYTE PTR [esi+eiz*8+0x1a592c0b],ah
  4280a7:	add    bh,cl
  4280a9:	ins    DWORD PTR es:[edi],dx
  4280aa:	repz cmp eax,0xf4bef5fe
  4280b0:	xor    DWORD PTR [ebp+0x46],ecx
  4280b3:	inc    esp
  4280b4:	add    BYTE PTR [ebp-0x312a0e03],dl
  4280ba:	(bad)  
  4280bb:	fist   DWORD PTR [eax]
  4280bd:	fcom   DWORD PTR [edx-0x72ecb8cb]
  4280c3:	mov    esp,0x7139ad84
  4280c8:	add    dl,BYTE PTR [ebp-0x22eb8a64]
  4280ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280cf:	nop
  4280d0:	sub    DWORD PTR [esi],0x6e
  4280d3:	ret    
  4280d4:	fild   WORD PTR [ebp+ebp*4+0x3b]
  4280d8:	pop    esp
  4280d9:	or     dl,BYTE PTR [edi+0x72]
  4280dc:	sub    BYTE PTR [ebp-0x2c],al
  4280df:	add    BYTE PTR [eax],al
  4280e1:	add    dh,al
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x29d89742]
  4280ef:	sti    
  4280f0:	inc    ecx
  4280f1:	ja     0x4280e3
  4280f3:	clc    
  4280f4:	add    DWORD PTR [eax],eax
  4280f6:	in     al,dx
  4280f7:	add    al,0x0
  4280f9:	add    BYTE PTR [ebx+esi*2-0x56],dl
  4280fd:	mov    cs,WORD PTR [ecx+edi*2]
  428100:	inc    esi
  428101:	xchg   esi,eax
  428102:	or     BYTE PTR [ecx-0x63b62cb9],cl
  428108:	cmp    al,0x6d
  42810a:	inc    esi
  42810b:	test   BYTE PTR [ebx],al
  42810d:	xchg   esp,eax
  42810e:	lock ret 
  428110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428111:	mov    bh,dl
  428113:	inc    esp
  428114:	das    
  428115:	xchg   esp,eax
  428116:	iret   
  428117:	sbb    al,0x4c
  428119:	rol    ah,cl
  42811b:	xchg   BYTE PTR [esi-0x34839860],cl
  428121:	xor    al,bh
  428123:	rol    DWORD PTR [edi-0x5c],1
  428126:	sub    DWORD PTR [ebp+0x28],ebx
  428129:	cmp    eax,0x3dfd02cb
  42812e:	jmp    0x4280cb
  428130:	mov    cl,BYTE PTR [edi+eiz*1]
  428133:	mov    ebx,0x3749bda1
  428138:	xchg   BYTE PTR [esi],ah
  42813a:	in     al,0x6a
  42813c:	or     bl,BYTE PTR [edi+ebp*8]
  42813f:	(bad)  [ebp+0x452275b3]
  428145:	add    bh,BYTE PTR [edi-0x769fa7ce]
  42814b:	(bad)  
  42814d:	repnz cmp DWORD PTR [ecx-0x4d],esp
  428151:	mov    cl,0xe0
  428153:	xchg   ebp,eax
  428154:	into   
  428155:	xchg   ebp,eax
  428156:	pop    ds
  428157:	arpl   si,si
  428159:	cmp    esp,DWORD PTR [esi+ebx*4-0x14]
  42815d:	popf   
  42815e:	scas   eax,DWORD PTR es:[edi]
  42815f:	jg     0x4281e0
  428161:	jle    0x4281d4
  428163:	jg     0x42819a
  428165:	fdivrp st(2),st
  428167:	push   ecx
  428168:	aaa    
  428169:	mov    edx,0xda8fc94a
  42816e:	cmp    cl,BYTE PTR [eax+ebp*8-0x21367463]
  428175:	cmp    eax,0x5a579812
  42817a:	out    0x6a,eax
  42817c:	icebp  
  42817d:	sub    ah,BYTE PTR [esp+ebx*2]
  428180:	hlt    
  428181:	cmp    BYTE PTR [edx],dh
  428183:	ret    0x8080
  428186:	jle    0x42816d
  428188:	xchg   al,al
  42818a:	lea    ebp,[eax+0x73]
  42818d:	daa    
  42818e:	pop    edx
  42818f:	mov    ch,0x8
  428191:	push   esi
  428192:	pop    es
  428193:	fucomi st,st(1)
  428195:	test   al,0x91
  428197:	mov    gs,ecx
  428199:	aam    0x5f
  42819b:	push   ss
  42819c:	sbb    ebp,DWORD PTR [eax+0x39]
  42819f:	mov    edx,DWORD PTR [ecx+0x2a57f5ee]
  4281a5:	xchg   edx,eax
  4281a6:	dec    edx
  4281a7:	dec    ebp
  4281a8:	fwait
  4281a9:	inc    edx
  4281aa:	push   eax
  4281ab:	jmp    0x9a3d:0x8af25a52
  4281b2:	dec    eax
  4281b3:	mov    dl,0x59
  4281b5:	pop    esi
  4281b6:	scas   eax,DWORD PTR es:[edi]
  4281b7:	sbb    eax,0x3868c51b
  4281bc:	pop    ebx
  4281bd:	fdivr  st(7),st
  4281bf:	imul   ecx,DWORD PTR [eax+esi*8-0x5],0xb4189d2
  4281c7:	jbe    0x428227
  4281c9:	mov    al,0x50
  4281cb:	or     esi,0x14
  4281ce:	sub    cl,al
  4281d0:	mov    bl,0xf5
  4281d2:	int    0xf5
  4281d4:	mov    al,0x9c
  4281d6:	jge    0x42824f
  4281d8:	pop    esp
  4281d9:	mov    edi,edi
  4281db:	imul   esp,DWORD PTR [ecx+0x5c8b69c4],0xffffffa4
  4281e2:	fcomp  st(3)
  4281e4:	jns    0x428185
  4281e6:	mov    ecx,0x392154c
  4281eb:	inc    edi
  4281ec:	and    eax,0x3c
  4281ef:	mov    ecx,0xb21ab457
  4281f4:	mov    bh,BYTE PTR [ecx]
  4281f6:	jbe    0x4281ae
  4281f8:	mov    esi,ebx
  4281fa:	and    BYTE PTR [ebx-0x47265bd9],ch
  428200:	mov    ah,bh
  428202:	lods   al,BYTE PTR ds:[esi]
  428203:	enter  0xde39,0x99
  428207:	dec    ecx
  428208:	mov    eax,0xd96185ae
  42820d:	dec    ebx
  42820e:	mov    eax,ds:0x6c54b2c
  428214:	rcl    BYTE PTR [edx],cl
  428216:	sub    al,0xac
  428218:	ret    
  428219:	push   0x76
  42821b:	mov    ds:0x69293d1b,al
  428220:	mov    eax,ds:0xae0dd75b
  428225:	cmp    dl,bh
  428227:	and    ecx,DWORD PTR [eax-0x47a10321]
  42822d:	aad    0x55
  42822f:	push   0xa
  428231:	and    BYTE PTR [edx+0x2c217af],0xdf
  428238:	inc    ebx
  428239:	aam    0x5e
  42823b:	test   BYTE PTR [esp+esi*8],al
  42823e:	adc    edi,eax
  428240:	mov    ecx,0x84cb5302
  428245:	and    BYTE PTR [eax+0x4b5766f5],al
  42824b:	pusha  
  42824c:	xor    DWORD PTR [ebx+0x134430e5],ebx
  428252:	jnp    0x428210
  428254:	mov    ss,WORD PTR [edi]
  428256:	add    esi,edx
  428258:	mov    DWORD PTR [edi+ebp*8],ebp
  42825b:	pop    ecx
  42825c:	mov    ecx,0x46b3acf5
  428261:	out    0xab,eax
  428263:	outs   dx,BYTE PTR ds:[esi]
  428264:	pop    ebp
  428265:	pop    eax
  428266:	adc    eax,0x82e83110
  42826b:	mov    bl,0x60
  42826d:	cwde   
  42826e:	aaa    
  42826f:	dec    ebp
  428270:	sti    
  428271:	jne    0x428250
  428273:	jg     0x42826e
  428275:	(bad)  
  428276:	loope  0x4282f5
  428278:	push   esi
  428279:	pop    ecx
  42827a:	out    dx,al
  42827b:	ss aas 
  42827d:	ins    BYTE PTR es:[edi],dx
  42827e:	push   ds
  42827f:	out    dx,al
  428280:	mov    cl,0x91
  428282:	and    dh,cl
  428284:	push   es
  428285:	dec    ebx
  428286:	push   edi
  428287:	in     al,0xcb
  428289:	and    DWORD PTR [edi+edx*4],edx
  42828c:	jecxz  0x4282d6
  42828e:	adc    ch,bh
  428290:	rcl    BYTE PTR [ecx+edx*1-0x7],0xec
  428295:	pop    edi
  428296:	dec    edi
  428297:	push   edi
  428298:	fidiv  DWORD PTR [ecx+ecx*4]
  42829b:	fsub   QWORD PTR [edi-0x37]
  42829e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42829f:	inc    edi
  4282a0:	outs   dx,BYTE PTR ds:[esi]
  4282a1:	aam    0x26
  4282a3:	xor    edi,DWORD PTR [edx+0x179eb357]
  4282a9:	enter  0x7e60,0xb4
  4282ad:	push   ecx
  4282ae:	out    0xf6,al
  4282b0:	jmp    0xda5ae7f8
  4282b5:	sub    BYTE PTR [ebp-0x30],dl
  4282b8:	inc    esp
  4282b9:	jo     0x428262
  4282bb:	push   edi
  4282bc:	es retf 
  4282be:	sbb    edx,edi
  4282c0:	sbb    dl,BYTE PTR [edx+0x12]
  4282c3:	fidivr WORD PTR [eax-0x50]
  4282c6:	fwait
  4282c7:	sub    eax,0x2fc2a96d
  4282cc:	cmp    al,al
  4282ce:	jbe    0x4282bc
  4282d0:	inc    ebp
  4282d1:	push   ebx
  4282d2:	sub    esi,DWORD PTR [eax]
  4282d4:	sub    al,0x7f
  4282d6:	mov    bl,0x36
  4282d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282d9:	aaa    
  4282da:	sub    eax,0xc334f14f
  4282df:	cmp    eax,0xe961be3
  4282e4:	jg     0x42826f
  4282e6:	sbb    ch,BYTE PTR [edi+0x710f9b87]
  4282ec:	lea    edx,[eax+0x7c]
  4282ef:	popa   
  4282f0:	shl    DWORD PTR [esi],cl
  4282f2:	add    eax,0x74f49725
  4282f7:	iret   
  4282f8:	xor    ah,BYTE PTR [eax+0x48c9b0d4]
  4282fe:	push   ss
  4282ff:	xchg   ebp,eax
  428300:	imul   BYTE PTR [edi-0x4f773a80]
  428306:	ins    DWORD PTR es:[edi],dx
  428307:	cmc    
  428308:	enter  0x4965,0x45
  42830c:	sbb    dh,BYTE PTR [ebx+esi*2]
  42830f:	pop    ebx
  428310:	cmp    dl,dh
  428312:	or     eax,0x4544c01
  428317:	cld    
  428318:	aaa    
  428319:	jp     0x428335
  42831b:	push   edx
  42831c:	(bad)  
  42831d:	out    0x1d,al
  42831f:	fsub   DWORD PTR [ebx]
  428321:	jp     0x42834b
  428323:	cmp    BYTE PTR [edi-0x73],dh
  428326:	xor    BYTE PTR ds:0x444b1a6f,bl
  42832c:	jne    0x42834b
  42832e:	push   eax
  42832f:	mov    ds:0x9f3fc1cd,al
  428334:	popa   
  428335:	aam    0x9a
  428337:	daa    
  428338:	sbb    ecx,DWORD PTR [ebx+0x4e]
  42833b:	mov    BYTE PTR [esp+ecx*2],dh
  42833e:	cmpps  xmm3,xmm6,0x46
  428342:	mov    esi,0xb2362ac1
  428347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428348:	jl     0x42834a
  42834a:	sub    DWORD PTR ds:0x38e52dfb,esi
  428350:	aas    
  428351:	sub    BYTE PTR [ebp+ebp*4-0x1b],0x9e
  428356:	jns    0x4282f8
  428358:	mov    edi,0xc7563be1
  42835d:	pop    edx
  42835e:	pop    ecx
  42835f:	and    bh,BYTE PTR [edx]
  428361:	jo     0x428371
  428363:	mov    bl,0xb8
  428365:	(bad)  
  428366:	or     al,0x5d
  428368:	mov    eax,ds:0x78543be
  42836d:	or     ebp,DWORD PTR [edx-0x30]
  428370:	jb     0x4283b5
  428372:	enter  0x7cd8,0x3f
  428376:	xor    al,0xe5
  428378:	sar    DWORD PTR [esi+0x292fc005],1
  42837e:	or     ebx,DWORD PTR [edx+0x2082c195]
  428384:	inc    ecx
  428385:	sbb    eax,0xee4b5742
  42838a:	jge    0x4283d1
  42838c:	ins    BYTE PTR es:[edi],dx
  42838d:	inc    eax
  42838e:	call   0x9380:0x234f8625
  428395:	es push eax
  428397:	jp     0x428381
  428399:	push   edi
  42839a:	xchg   esp,eax
  42839b:	in     al,0xc7
  42839d:	jae    0x428369
  42839f:	cmp    DWORD PTR [eax-0x643563b],esi
  4283a5:	jnp    0x42834d
  4283a7:	call   0x40a88ca5
  4283ac:	shl    BYTE PTR [esi+0x4dae5b7f],cl
  4283b2:	call   0xb2c01ec3
  4283b7:	cmc    
  4283b8:	cmp    BYTE PTR [edi+ebx*1],0x63
  4283bc:	mov    dh,0x4f
  4283be:	cmp    BYTE PTR [ebp+eax*1-0x71785c9e],dl
  4283c5:	ja     0x42843a
  4283c7:	dec    edi
  4283c8:	or     BYTE PTR [ebx-0x8],ch
  4283cb:	xchg   esp,eax
  4283cc:	inc    DWORD PTR [edi]
  4283ce:	xchg   esp,eax
  4283cf:	std    
  4283d0:	push   ss
  4283d1:	jl     0x428386
  4283d3:	out    dx,eax
  4283d4:	aam    0x12
  4283d6:	and    al,ah
  4283d8:	and    eax,0x42388ca7
  4283dd:	icebp  
  4283de:	out    0xc3,eax
  4283e0:	lahf   
  4283e1:	sbb    bl,BYTE PTR [ecx+0x6e]
  4283e4:	pop    ds
  4283e5:	xchg   ecx,eax
  4283e6:	adc    dl,dl
  4283e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283e9:	(bad)  
  4283ea:	sahf   
  4283eb:	dec    esp
  4283ec:	dec    esi
  4283ed:	ds push ebp
  4283ef:	or     esp,DWORD PTR [eax+0x385c5549]
  4283f5:	stos   DWORD PTR es:[edi],eax
  4283f6:	fimul  DWORD PTR [ebp-0x21849c8c]
  4283fc:	out    dx,al
  4283fd:	out    dx,al
  4283fe:	fcom   DWORD PTR [edi]
  428400:	loop   0x428431
  428402:	xchg   BYTE PTR [eax+0x1e],cl
  428405:	jmp    0xecbf:0x9d525368
  42840c:	mov    DWORD PTR [esi],ebp
  42840e:	jmp    0xbae8:0x12416eb6
  428415:	push   0x8c3d429f
  42841a:	mov    ch,0x95
  42841c:	xchg   ebp,eax
  42841d:	or     al,0xa0
  42841f:	ja     0x42849d
  428421:	inc    ecx
  428422:	pop    edx
  428423:	jno    0x4283e6
  428425:	inc    ebx
  428426:	xchg   edi,eax
  428427:	fld    DWORD PTR [ebx+0x56]
  42842a:	push   ebx
  42842b:	clc    
  42842c:	pop    esp
  42842d:	lock push ss
  42842f:	push   cs
  428430:	cmp    dl,ah
  428432:	jae    0x428460
  428434:	rcl    DWORD PTR [edx+ebx*2+0x79],cl
  428438:	sbb    BYTE PTR ds:0xbd133fa6,cl
  42843e:	sub    BYTE PTR [edx-0x5ce0c302],al
  428444:	push   cs
  428445:	sbb    al,0xee
  428447:	mov    esi,0xf5847e64
  42844c:	aad    0x1a
  42844e:	stos   BYTE PTR es:[edi],al
  42844f:	sub    BYTE PTR [edx+0xef59246],ah
  428455:	les    ebx,FWORD PTR [ebx+0x4895892b]
  42845b:	(bad)  
  42845c:	in     eax,dx
  42845d:	pusha  
  42845e:	mov    al,0xd0
  428460:	shr    BYTE PTR [ebx+0x50],1
  428463:	pop    esp
  428464:	mov    bh,0x14
  428466:	xchg   ebx,eax
  428467:	pop    ds
  428468:	xor    eax,DWORD PTR [esi-0x4fd21641]
  42846e:	jmp    0x98fb9ef6
  428473:	inc    esp
  428474:	mov    bl,0xcf
  428476:	push   edx
  428477:	adc    al,0x7a
  428479:	int    0x99
  42847b:	addr16 xchg ecx,eax
  42847d:	add    DWORD PTR [eax+0x5b0db382],ecx
  428483:	stc    
  428484:	shl    cl,cl
  428486:	and    eax,0x21c92a1a
  42848b:	int    0x45
  42848d:	(bad)  
  42848e:	in     al,dx
  42848f:	cmp    ch,bh
  428491:	cs call 0x455:0x515a50e3
  428499:	iret   
  42849a:	dec    esp
  42849b:	(bad)  
  42849c:	sub    DWORD PTR [esi+0x6ec3ce90],esi
  4284a2:	push   0x99ba32c9
  4284a7:	adc    al,0xba
  4284a9:	dec    esi
  4284aa:	nop
  4284ab:	push   ebp
  4284ac:	icebp  
  4284ad:	jne    0x428523
  4284af:	xchg   eax,esp
  4284b1:	cli    
  4284b2:	addr16 jae 0x4284db
  4284b5:	pop    ebx
  4284b6:	hlt    
  4284b7:	les    ecx,FWORD PTR [ecx+0x31204ca6]
  4284bd:	hlt    
  4284be:	pop    ds
  4284bf:	mov    eax,0x6300c55d
  4284c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284c5:	sar    eax,0x2f
  4284c8:	add    DWORD PTR [esi+0x1c],esi
  4284cb:	sbb    DWORD PTR [ebp+0x72],ecx
  4284ce:	stos   DWORD PTR es:[edi],eax
  4284cf:	inc    ecx
  4284d0:	call   0x72a5:0xaa96146f
  4284d7:	aas    
  4284d8:	in     al,0xc4
  4284da:	push   0xffffff86
  4284dc:	outs   dx,BYTE PTR ds:[esi]
  4284dd:	or     BYTE PTR [eax+0x56],0xb9
  4284e1:	mov    eax,0xad98f2f
  4284e6:	(bad)  
  4284e7:	cld    
  4284e8:	sbb    bh,BYTE PTR [ecx+0x37]
  4284eb:	sbb    dl,BYTE PTR [edx+0x6ec8dc67]
  4284f1:	adc    esp,DWORD PTR [ebx+eax*2+0x55]
  4284f5:	sub    eax,0x5f23bd19
  4284fa:	and    al,0x88
  4284fc:	sbb    BYTE PTR [edx+0x6a],dl
  4284ff:	cmp    al,0x21
  428501:	and    ebp,DWORD PTR [edi]
  428503:	mov    db2,ebp
  428506:	pop    edi
  428507:	xor    eax,0x8b7a1a72
  42850c:	mov    esi,0x38244330
  428511:	sub    eax,0x1262cebb
  428516:	int    0x7d
  428518:	push   esi
  428519:	repnz xor dl,al
  42851c:	adc    eax,0x9b2ef2e7
  428521:	jbe    0x42851e
  428523:	cmp    al,0x7c
  428525:	xchg   ebx,eax
  428526:	fimul  WORD PTR [ecx+0x7efb9144]
  42852c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42852d:	mov    al,ds:0x721cf0e1
  428532:	bnd data16 jae 0x42859f
  428536:	retf   0x4d5
  428539:	rcr    DWORD PTR [ebp+0x6ac77112],1
  42853f:	xchg   ecx,eax
  428540:	sub    BYTE PTR [esi+0x5c],bl
  428543:	or     eax,0x39d992e9
  428548:	dec    esp
  428549:	adc    eax,0xc2b548af
  42854e:	jp     0x42858c
  428550:	retf   
  428551:	sub    bl,dh
  428553:	stc    
  428554:	jmp    0x2357:0x88eb70d
  42855b:	xchg   edx,eax
  42855c:	gs and al,0x41
  42855f:	fdivr  QWORD PTR [edi+eax*1]
  428562:	sub    BYTE PTR [edx+eiz*2+0x2a],ch
  428566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428567:	xor    dh,BYTE PTR [eax+edi*4-0x4f]
  42856b:	jne    0x4285c4
  42856d:	cmp    eax,0x55994485
  428572:	xor    al,0xa3
  428574:	cmp    DWORD PTR [ecx-0x1a6b4f9c],edi
  42857a:	mov    esi,0xaf323351
  42857f:	stos   DWORD PTR es:[edi],eax
  428580:	int3   
  428581:	jb     0x4285d2
  428583:	out    0x1b,al
  428585:	and    BYTE PTR [esi+0x73e216fe],al
  42858b:	fwait
  42858c:	lods   eax,DWORD PTR ds:[esi]
  42858d:	mov    ebp,0xd44f2b66
  428592:	or     al,0x32
  428594:	pop    esi
  428595:	mov    esp,DWORD PTR [ecx+edi*1-0x3b8e924b]
  42859c:	xchg   DWORD PTR [ecx-0x58],ebx
  42859f:	js     0x428597
  4285a1:	cmc    
  4285a2:	pop    ds
  4285a3:	es jg  0x428539
  4285a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285a7:	push   0x37
  4285a9:	jae    0x4285a1
  4285ab:	push   ss
  4285ac:	jl     0x428551
  4285ae:	adc    DWORD PTR [edx+0x568b9d5f],ecx
  4285b4:	push   ss
  4285b5:	loopne 0x42858f
  4285b7:	int3   
  4285b8:	pop    es
  4285b9:	rcr    BYTE PTR [eax+eax*2+0x2eaf1247],1
  4285c0:	add    ebp,DWORD PTR [edi+0x3d920ede]
  4285c6:	and    dl,bh
  4285c8:	jae    0x42861d
  4285ca:	mov    esp,0x1d5646f7
  4285cf:	daa    
  4285d0:	cld    
  4285d1:	inc    edx
  4285d2:	stc    
  4285d3:	jno    0x428558
  4285d5:	and    DWORD PTR [ecx+0x51],0x5df909b4
  4285dc:	mov    WORD PTR [ecx],?
  4285de:	add    cl,0x1e
  4285e1:	inc    ebx
  4285e2:	mov    bl,0x9a
  4285e4:	push   ecx
  4285e5:	sbb    al,0x0
	...
